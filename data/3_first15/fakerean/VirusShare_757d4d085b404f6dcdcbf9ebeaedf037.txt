jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
pop
sub
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
inc
push
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
enter
push
push
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
sub
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
add
add
addb
adc
add
add
push
add
xchg
add
add
inc
add
mov
add
daa
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
jge
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
jne
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
into
sbb
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
lahf
cmovae
ret
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
adc
and
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
imul
add
cmp
je
mov
in
cmc
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
dec
testl
test
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
push
push
inc
add
lea
mov
sub
inc
add
adc
sbb
pop
and
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
push
sbb
add
add
push
push
call
test
js
lea
lea
dec
push
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
cwtl
hlt
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
incl
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
add
rcrb
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
cmovae
call
pop
lea
cmp
je
push
call
add
add
push
add
add
add
add
insb
add
add
test
cmpsb
add
fiaddl
bound
add
add
cmpsb
leave
bound
ret
xchg
add
add
jecxz
jmp
cmc
incb
jmp
loop
in
add
fldenv
push
mov
add
push
push
push
push
push
push
lea
push
push
push
call
insb
flds
lea
add
add
add
push
add
cld
xchg
add
je
cwtl
add
add
rcr
jae
push
add
mov
add
addr16
cwtl
mov
js
in
loopne
popl
push
push
call
push
jbe
add
cld
sahf
xchg
add
stos
add
fs
add
jne
xchg
jne
adc
pop
call
mov
push
aad
add
movsb
add
add
in
push
scas
push
scas
jmp
xchg
add
movsb
add
jb
fst
test
mov
add
lcall
push
push
call
incb
add
in
jb
mov
fs
sti
mov
jb
add
mov
negl
xlat
jb
add
add
add
mov
xchg
mov
in
push
fisubl
mov
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
pop
mov
js
mov
cmc
add
push
mov
add
mov
movsl
pusha
rcrb
mov
sahf
mov
mov
add
subb
add
xlat
add
add
add
jmp
hlt
pop
add
push
push
push
lea
push
push
push
push
push
push
call
in
add
pop
add
add
test
jp
in
add
fdivl
add
add
add
push
push
add
jnp
pushf
add
mov
jbe
add
roll
in
jbe
test
shrl
gs
lret
cmpsl
push
sub
pop
call
push
lea
push
call
jb
data16
add
movl
mov
enter
add
in
arpl
stos
data16
loopne
in
clc
lcall
push
add
add
push
lea
push
push
push
lea
push
call
loopne
jns
repnz
cmpsl
add
add
mov
mov
mov
add
popf
in
fistpll
add
insb
stos
lret
lock
add
mov
frstor
cli
jb
add
mov
add
icebp
jnp
pop
leave
add
insb
add
sub
pop
push
push
push
push
lea
push
call
popf
jns
add
push
add
int3
addl
icebp
add
mov
mov
add
add
mov
je
lods
gs
faddl
arpl
add
notb
cltd
add
add
faddp
mov
add
add
jo
add
sub
pop
call
jmp
push
push
push
push
push
push
push
lea
push
call
add
leave
call
add
add
ljmp
jle
add
add
into
xchg
cmc
fiaddl
pop
sahf
add
mov
add
mov
add
movsb
add
mov
xchg
add
test
lea
add
add
jle
add
mov
ret
push
push
push
push
push
push
lea
push
lea
push
call
insb
xchg
add
hlt
add
mov
xchg
add
add
stos
out
mov
cmpsb
aad
aam
pusha
int3
sahf
add
ret
mov
add
mov
add
retw
loopne
mov
push
push
push
call
flds
lcall
lds
mov
add
pop
shrb
push
scas
fildl
mov
jno
xlat
push
rclb
pop
add
lcall
pop
hlt
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
rol
mov
push
scas
add
shl
lods
fneni(8087
jns
add
add
lcall
fdivrs
xchg
loopne
add
add
add
add
pushf
add
ret
add
addl
pop
add
push
add
stos
xchg
add
sub
pop
add
push
push
push
push
call
pop
sti
movsb
lcall
jp
xchg
stos
add
push
pop
test
jge
push
add
int
mov
enter
jo
pop
mov
mov
mov
add
add
add
fcomps
add
add
lcall
ret
add
add
push
push
call
mov
mov
xchg
push
jecxz
cmpsb
ljmp
add
leave
xchg
cmpsb
add
enter
outsl
mov
add
add
bound
in
clc
pop
add
mov
push
push
push
push
push
push
push
call
add
aad
in
add
out
add
add
jne
add
mov
lcall
add
lcall
sbb
push
push
push
lea
push
push
push
push
call
not
add
xchg
mov
lret
pop
add
push
add
add
add
in
add
add
lahf
xchg
in
mov
add
add
cltd
add
add
push
xchg
add
add
lcall
les
repz
lods
push
dec
add
shl
shl
push
sub
add
sub
add
pop
shl
sub
pop
push
push
call
add
jno
push
jno
ret
mov
pop
add
lret
shl
add
add
push
add
fcompl
add
in
clc
pop
pushl
push
lea
push
call
cltd
mov
clc
rcrl
mov
add
andl
sarb
in
cwtl
xchg
pusha
jnp
add
lret
fcoml
lret
add
mov
add
add
std
add
add
lret
mov
outsl
add
push
int3
add
call
push
push
lea
push
push
push
push
push
lea
push
push
push
call
roll
add
add
icebp
int
add
push
fisubrs
flds
add
icebp
popf
add
lods
push
add
in
out
fldl
push
in
add
icebp
int3
pop
mov
aam
mov
in
mov
test
mov
call
push
add
leave
mov
xchg
int
add
add
loopne
sub
pop
mov
movl
push
push
push
push
push
call
in
mov
std
sahf
add
add
mov
add
mov
rcll
mov
jmp
insb
mov
mov
add
add
out
mov
mov
mov
pop
sub
pop
lea
push
push
push
push
call
add
loopne
add
loopne
pop
addr16
add
stos
add
fnsetpm(287
nop
add
add
jne
popa
mov
add
add
add
add
mov
lock
push
pushl
push
push
push
push
lea
push
push
push
push
call
lods
fldt
arpl
sarl
ljmp
push
pop
mov
iretw
mov
add
test
in
add
lea
fadds
mov
add
loope
add
repnz
movsl
add
test
pop
lods
jno
lock
movb
hlt
add
lcall
jne
call
push
push
push
lea
push
call
cmc
mov
arpl
incb
mov
xlat
mov
add
add
jo
mov
xchg
mov
add
add
add
pop
add
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
push
push
call
loope
add
mov
add
movb
push
add
mov
mov
mov
ret
int3
in
lock
add
add
add
mov
add
add
pop
shll
mov
pop
add
add
jge
pop
test
add
stos
mov
rolb
jne
push
push
push
push
push
lea
push
push
lea
push
push
call
add
gs
imul
std
add
cmpsb
add
add
fldl
xchg
add
mov
xchg
add
movl
fdivr
lcall
fdivl
add
push
push
lea
push
or
inc
add
sub
add
sub
pop
ror
xor
pop
push
push
push
push
push
push
push
push
call
add
xchg
mov
mov
clc
mov
add
sarb
fists
add
add
mov
add
xchg
push
add
loop
push
fcoms
fmull
rolb
cmpsb
add
add
pop
add
add
mov
mov
in
loopne
lcall
jne
call
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
add
add
into
add
push
pop
jo
add
rcl
clc
scas
add
jecxz
lret
mov
roll
add
xchg
sub
pop
push
push
push
not
sub
rol
shr
push
sub
add
sub
dec
shl
sub
ror
shr
pop
add
shl
pop
push
push
push
push
lea
push
push
call
xchg
int3
mov
stos
mov
add
add
add
add
out
add
cltd
add
ljmp
in
add
add
add
add
lcall
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
arpl
jecxz
ficompl
hlt
add
push
jae
stos
lcall
stc
shl
add
into
enter
add
int
add
add
iret
add
test
add
loope
test
cmc
rolb
cmpb
add
scas
add
lret
add
outsl
add
sahf
mov
in
fdivr
lcall
add
push
inc
push
lea
push
lea
push
lea
push
push
push
call
popf
roll
gs
mov
pusha
ret
enter
aam
jnp
add
sar
shll
add
add
movsl
add
into
add
cmc
jae
test
add
insb
jle
mov
add
addr16
lea
add
add
add
add
mov
bound
add
rclb
jl
into
push
push
lea
push
push
push
call
mov
sahf
add
imul
mov
push
add
hlt
jno
sahf
rolb
rcll
add
add
mov
add
movsw
mov
lods
lods
xchg
hlt
addb
mov
lcall
clc
push
push
push
push
lea
push
call
iret
mov
add
addl
faddl
outsl
add
mull
jbe
add
mov
add
sub
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
call
mov
xlat
data16
cmpsb
pusha
add
add
add
aam
add
add
pop
notb
add
insb
in
outsl
in
mov
mov
pop
add
lock
add
mov
add
add
incb
add
je
call
sub
pop
add
push
lea
push
push
push
push
push
call
into
pop
rcll
int
add
popf
imul
jp
add
fsubr
add
add
mov
add
push
lds
test
add
out
mov
imul
mov
add
repnz
sub
pop
add
push
push
push
push
push
push
push
call
scas
add
add
add
jmp
mov
add
add
ret
add
int
push
aad
add
add
add
mov
xchg
fwait
xchg
ret
mov
add
push
push
lea
push
push
push
push
call
pop
arpl
mov
lock
jb
gs
adc
ret
lock
add
andl
out
add
outsl
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
stos
pop
add
hlt
push
push
into
jecxz
add
fmull
icebp
outsl
push
jo
mov
fildl
cwtl
add
add
add
mov
scas
aam
add
jecxz
fmulp
fildl
add
add
xchg
icebp
jmp
mov
sub
pop
xor
push
lea
push
push
push
call
add
lods
add
add
fstl
mov
add
aad
add
mov
xorb
mov
add
pop
filds
push
mov
mov
out
add
pop
jns
add
add
add
lock
add
push
push
push
push
lea
push
push
push
call
add
mov
add
movl
add
add
push
je
flds
xlat
imul
mov
mov
add
rolb
pop
add
lcall
jne
push
push
push
push
push
push
lea
push
push
push
push
call
cltd
add
jnp
mov
testb
into
add
jge
push
add
pop
jge
mov
add
loope
lds
imul
lret
mov
add
add
cwtl
add
addl
loope
add
add
add
loopne
in
fcomps
push
push
push
push
push
lea
push
call
mov
add
lods
add
add
loopne
in
jns
jb
add
add
add
add
add
hlt
add
add
andl
mov
lea
loope
scas
push
push
jno
fcomi
add
add
pop
jno
sub
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
add
fstpt
mov
test
lea
ljmp
add
add
mov
push
add
mov
ror
sub
pop
xor
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
fwait
add
add
add
test
stos
fsts
shrb
mov
mov
mov
mov
add
leave
add
adcb
lret
add
shll
add
add
fldenv
filds
pop
sub
pop
add
push
push
push
lea
push
push
call
int3
add
add
xchg
add
add
add
add
add
out
mov
test
push
jbe
gs
add
nop
add
push
mov
add
add
xchg
shl
cmc
fwait
add
mov
loope
add
movsl
outsl
clc
sub
pop
add
push
push
push
push
push
push
call
add
in
test
scas
add
std
lods
xchg
add
jmp
jmp
add
lods
shl
add
add
xchg
mov
fwait
pop
add
push
aam
shl
addl
add
out
add
mov
sub
pop
pop
mov
xor
push
lea
push
call
ficoms
add
add
pop
notb
lea
add
add
add
add
fldl
add
add
jmp
hlt
pop
arpl
add
add
mov
add
add
cwtl
push
add
stc
mov
lcall
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
std
add
add
mov
add
mov
pop
mov
in
add
add
js
add
add
sub
pop
mov
xor
push
push
push
push
push
push
call
add
add
std
pop
add
pop
flds
int
push
mov
icebp
mov
in
jno
scas
stos
ret
jo
add
add
add
mov
add
fisttpll
movl
cld
add
add
test
pop
sub
push
lea
push
lea
push
push
call
notl
rolb
movsl
addl
xchg
add
add
ljmp
add
jae
mov
add
add
rol
cwtl
test
orb
add
aad
in
lock
lcall
push
push
lea
push
lea
push
push
push
push
push
call
push
scas
add
add
pop
add
repnz
add
push
pop
test
cmpb
mov
lcall
ret
add
lods
addb
outsl
add
add
je
in
loopne
lcall
movsb
pop
push
push
push
push
push
push
lea
push
push
push
call
add
test
add
add
mov
add
in
add
add
int
jne
add
test
add
lea
add
pop
add
mov
lcall
pop
hlt
add
push
push
lea
push
push
push
call
ret
add
fildl
jno
int3
add
add
xchg
in
pop
testl
clc
jmp
popf
add
cltd
add
mov
push
add
push
add
sub
pop
add
add
push
push
push
lea
push
push
push
push
call
jo
fs
add
add
add
mov
add
scas
pop
xlat
loopne
addb
add
outsl
add
fiaddl
xchg
add
add
addl
and
push
push
push
push
call
iret
ja
xchg
add
mov
add
add
sahf
loop
mov
add
cwtl
in
negl
lea
pop
add
add
ffreep
add
fwait
imul
push
add
aad
add
test
shlb
outsl
bound
mov
add
jb
sub
pop
mov
push
push
lea
push
push
call
mov
in
add
cld
add
jp
js
add
add
sti
add
add
add
add
add
jo
jmp
jecxz
sub
pop
xor
push
push
push
push
push
call
jl
rorl
pop
out
cmpsl
add
loopne
add
pop
jns
add
add
loopne
add
add
add
arpl
mov
add
push
mov
add
shr
test
pop
add
enter
add
mov
scas
fnstenv
in
in
lcall
les
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
jo
add
add
add
add
cmc
aad
pop
jecxz
int
add
xchg
add
fs
pop
mov
xor
push
lea
push
push
push
push
push
push
call
mov
hlt
movsb
out
ljmp
fs
push
push
xchg
add
push
ja
je
xlat
testb
xlat
mov
pop
push
push
add
leave
lahf
add
lret
test
mov
scas
bound
movl
enter
add
test
add
lcall
ret
push
push
call
lods
movl
add
xlat
mov
fnstcw
add
insb
add
mov
add
loope
cmc
jo
push
add
add
add
rcll
ds
stos
lea
das
add
add
mov
in
add
fists
add
add
fstpt
add
xchg
push
js
bound
jecxz
fildl
add
add
outsl
lock
xlat
add
pop
jo
fiaddl
lcall
fsubrs
add
stos
push
lea
push
and
add
inc
inc
add
sub
not
dec
pop
rol
rol
pop
push
lea
pop
pushl
call
push
lea
push
push
lea
push
push
push
call
cltd
add
add
les
add
stos
add
int3
add
cmpsl
ja
add
nop
add
test
ja
add
rolb
add
add
mov
outsl
cli
mov
push
cmpsl
rcrb
add
add
add
into
add
add
nop
fsubr
jo
sub
pop
push
push
push
rol
dec
dec
push
or
not
add
rol
dec
sub
add
xor
pop
add
inc
pop
push
shr
xor
add
pop
push
push
push
push
push
push
push
call
add
mov
int3
add
add
bound
out
add
lahf
iret
out
add
add
add
add
lds
sti
add
data16
sub
pop
push
push
push
push
call
mov
sahf
rcr
add
stos
add
xchg
mov
int3
xchg
hlt
add
imul
gs
fldl
add
pusha
add
icebp
add
add
notl
xlat
sub
pop
call
mov
push
lea
push
push
lea
push
push
lea
push
call
cmpsb
int
xchg
filds
popa
ret
imul
add
lds
add
add
mov
in
add
pop
add
test
sub
pop
push
push
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
xlat
push
add
test
lock
mulb
incb
lea
hlt
mov
fiaddl
rolb
jo
add
int3
subb
mov
add
testl
fwait
add
lcall
pop
hlt
push
shr
pop
add
push
push
push
push
call
jns
mov
pop
xor
into
lock
push
add
in
add
fildl
push
add
add
mov
adcb
popa
sub
pop
add
add
push
sub
inc
not
pop
mov
xor
push
push
push
push
call
add
nop
add
fs
push
shll
scas
movsb
mov
add
jb
je
mov
add
out
add
sti
fidivl
jae
movb
andl
push
pop
hlt
add
scas
call
jnp
add
sub
pop
add
push
push
shr
sub
sub
ror
pop
mov
push
push
push
call
mov
test
clc
add
add
lods
out
add
add
add
rcrl
add
lahf
mov
rcl
lods
push
add
jae
roll
in
clc
lcall
add
push
lea
push
push
lea
push
push
push
lea
push
push
call
jmp
push
pop
jp
outsl
lods
xlat
add
add
lea
add
out
mov
clc
fsts
js
add
in
loopne
lcall
les
add
push
lea
pop
add
pop
push
lea
push
push
push
push
push
call
faddl
add
xchg
clc
add
leave
sti
add
push
add
add
popl
sahf
pop
push
jmp
jmp
bound
add
add
pop
mov
decb
sub
pop
mov
push
push
lea
push
push
lea
push
call
add
add
add
cmc
out
add
xchg
add
add
aad
add
pop
test
imul
add
push
add
fadds
add
add
sub
pop
xor
push
push
lea
push
lea
push
push
call
movsl
faddl
xchg
cltd
rolb
add
call
add
shll
ret
jno
cmpl
push
bound
mov
roll
fdivr
add
xchg
add
add
aam
in
in
lcall
les
add
push
push
call
loope
add
add
jmp
pop
mov
lret
add
hlt
add
fcmovb
in
add
jo
xchg
sub
pop
rep
push
sub
pop
mov
push
push
lea
push
lea
push
lea
push
call
addr16
add
add
add
add
add
add
add
out
push
rcl
add
rolb
rolb
test
mov
jecxz
in
lock
xor
push
push
push
push
call
into
std
lods
add
add
scas
add
lods
add
jne
mov
add
fildl
jmp
aam
add
cmpsb
test
bound
jno
add
add
loope
mov
leave
add
jnp
gs
popf
ret
movsb
movsb
test
mov
add
add
add
les
xor
shl
add
pop
or
je
push
shl
shr
pop
mov
push
push
push
push
push
push
push
push
push
push
call
mov
ja
loopne
popa
add
lret
pushf
add
xchg
add
imul
fldl
fisubs
add
add
in
jmp
add
into
popa
add
imul
movsb
pop
add
out
pusha
add
add
lcall
xor
push
push
lea
push
push
push
push
push
call
jle
add
leave
add
xchg
orb
stos
jle
add
add
subl
std
add
add
les
add
push
lea
push
push
lea
push
call
jb
add
gs
bound
mov
add
add
out
add
cld
xchg
rolb
mov
lods
add
scas
movsl
sub
pop
mov
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsb
mov
add
out
xchg
xchg
shrl
enter
jmp
arpl
add
add
fs
rcrb
scas
add
add
in
out
add
add
lcall
adc
push
push
push
push
push
push
push
call
add
add
jecxz
mov
add
std
pushf
pop
add
add
jno
add
jno
add
add
fcoms
xchg
jb
pop
fadds
lods
jnp
je
roll
add
out
add
add
lcall
les
ror
rol
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
call
add
push
push
movl
scas
fcoml
add
pop
incb
cli
ja
jno
scas
add
add
enter
pop
add
add
popa
js
sub
pop
add
push
push
dec
sub
sub
rol
pop
mov
push
push
lea
push
push
push
call
add
mov
std
add
add
in
iret
enter
mov
add
add
add
xchg
mov
jbe
add
add
in
lock
xor
push
push
lea
push
lea
push
lea
push
push
push
call
fisttps
mov
iret
mov
add
add
push
jecxz
ror
pop
clc
add
test
jmp
lahf
add
lock
add
add
add
mov
add
mov
in
lcall
les
push
push
push
lea
push
push
push
lea
push
call
add
mov
mov
push
js
push
push
add
nop
popf
popa
movsl
insb
rolb
add
add
scas
mov
add
add
add
push
mov
js
add
shrl
add
mov
add
add
rcll
sub
pop
add
push
push
push
push
push
push
lea
push
call
cmpsl
push
add
mov
icebp
xlat
mov
imul
gs
add
mov
mov
add
add
hlt
mov
pop
pop
push
push
push
call
incb
sarl
jno
add
add
add
add
stos
cwtl
bound
mov
in
jo
add
gs
popf
out
stc
jecxz
in
add
fnstcw
add
movsb
push
push
lea
push
call
add
lock
aad
je
add
imul
add
mov
xlat
jecxz
arpl
out
rcl
movl
mov
pop
cltd
lret
cmc
add
mov
pop
add
leave
andl
pop
push
sub
pop
mov
push
push
push
push
push
lea
push
push
call
pop
movl
pop
in
xchg
add
xchg
in
gs
mov
jge
add
lahf
add
add
cltd
add
stos
add
mov
lret
test
add
test
add
shlb
lock
pop
subb
mov
add
lcall
or
push
push
push
push
push
push
push
push
push
push
call
xlat
xchg
fcomps
lods
add
add
jne
add
add
js
outsl
push
mov
jae
loope
add
hlt
rcrl
lcall
les
add
push
not
shl
shr
lea
pop
or
je
push
push
push
call
xchg
add
mov
add
add
ror
stc
out
xchg
add
mov
mov
add
clc
loope
push
mov
in
hlt
pop
mov
add
push
sub
pop
add
rep
push
push
push
call
lret
add
mov
add
ficoms
mov
add
cltd
add
pusha
add
add
add
shr
add
add
add
push
flds
out
fldenv
pop
pop
push
push
inc
xor
not
sub
push
sub
add
sub
ror
xor
not
pop
shr
dec
add
pop
push
not
sub
pop
pop
push
push
lea
push
call
add
addl
std
add
enter
xchg
roll
stos
cwtl
ljmp
jmp
add
out
xchg
lods
popf
out
add
lret
pop
mov
xorb
pop
add
imul
xchg
push
add
gs
mov
jecxz
ljmp
sub
pop
mov
push
lea
shl
shr
pop
mov
mov
push
lea
ror
add
pop
jmp
push
push
lea
push
push
push
lea
push
call
ffreep
lock
mov
jge
outsl
mov
add
out
loopne
not
add
fstl
jle
xchg
add
cld
add
popf
pop
xchg
add
pusha
jbe
in
in
lcall
in
push
shl
pop
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
jne
std
in
roll
cmp
xlat
add
jo
ret
stos
lret
aam
push
lcall
mov
mov
add
add
mov
lea
mov
add
add
pop
add
pop
add
add
add
rolb
fldl
add
xchg
mov
add
cwtl
add
add
lcall
push
push
lea
push
push
lea
push
push
call
push
jno
test
add
scas
bound
scas
rolb
add
aam
pop
add
aam
add
add
mov
int
pop
scas
roll
stos
mov
repnz
jmp
hlt
add
fwait
add
mov
popa
xchg
je
mov
fistpll
add
add
mov
add
add
std
add
lcall
push
push
push
push
push
push
push
lea
push
push
call
add
add
cli
ljmp
add
fadds
xchg
ljmp
je
mov
add
add
add
mov
icebp
push
add
add
add
add
imul
add
stos
add
xchg
cld
test
mov
push
pop
out
add
fdivr
lcall
mov
push
rol
sub
pop
pop
push
push
push
lea
push
push
lea
push
push
call
add
add
iret
add
add
add
add
test
mov
cli
add
cmp
xchg
out
scas
pop
add
filds
lcall
push
push
push
lea
push
push
call
add
cmc
add
std
add
popa
ja
add
int3
mov
pop
pop
fwait
add
add
pop
add
add
mov
add
jmp
and
add
je
jns
nop
add
jl
std
add
add
xchg
lcall
push
push
push
push
call
lods
rolb
fildl
add
pop
sarl
ljmp
mov
not
addb
incb
mov
loop
add
mov
add
mov
mov
add
xlat
add
add
add
add
je
add
fiadds
movl
sub
pop
pop
push
push
push
call
add
sti
lea
movsl
negb
jb
xchg
add
add
add
fadds
add
add
ja
add
add
aad
movsb
icebp
pop
test
hlt
lcall
push
sub
pop
ret
push
push
dec
shr
pop
mov
add
push
add
sub
add
pop
push
push
push
pop
push
push
rol
pop
push
push
sub
inc
pop
movl
push
not
pop
addl
test
je
push
sub
pop
mov
push
push
lea
push
push
push
push
push
call
add
mov
mov
add
stc
cli
cmpsl
push
popf
pushf
cmpsb
mov
add
pop
pop
add
add
add
add
popa
mov
add
ja
xchg
pop
popf
gs
jmp
add
add
mov
cmpl
xchg
add
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
pop
add
push
pop
mov
add
mov
pop
mov
data16
add
add
nop
jb
scas
sub
pop
pop
push
push
push
push
push
call
insb
mov
add
add
add
push
loopne
push
add
add
in
lds
pop
add
jp
add
iret
add
mov
enter
in
mov
xchg
xchg
add
add
push
add
add
add
xchg
sub
pop
pop
leave
push
push
lea
push
push
lea
push
call
add
lods
xchg
jmp
add
add
jnp
mov
mov
movsl
jbe
add
stc
cmpsl
add
mov
js
add
fildl
arpl
iret
add
out
movsl
mov
pushf
mov
add
add
fwait
mov
jno
mov
fwait
add
sub
pop
ret
push
push
lea
dec
ror
inc
pop
mov
push
push
lea
push
call
jae
nop
jno
add
add
iret
add
mov
fistps
mov
add
test
push
add
add
pop
add
push
push
push
push
lea
push
push
push
push
call
call
add
xchg
loopne
add
jnp
imul
add
nop
add
add
mov
add
add
push
rol
popa
add
add
add
pop
jmp
out
add
add
xlat
int
sti
add
add
int3
push
pusha
add
add
int
add
in
add
jl
icebp
popa
out
addb
add
push
lea
push
push
push
push
push
call
xchg
aam
add
add
jecxz
add
stos
aad
add
call
add
loope
add
add
add
add
add
jmp
out
xchg
add
add
je
add
test
add
cld
mov
fwait
mov
in
call
push
push
pop
push
push
push
push
push
push
push
lea
push
call
xchg
out
movl
loop
add
lods
hlt
pop
cmc
add
movsl
add
add
xchg
xchg
mov
pop
xchg
push
and
jge
in
in
push
testl
push
push
call
jbe
add
iret
add
orl
fstpl
mov
add
add
iret
add
lcall
inc
or
push
shl
shl
ror
pop
push
push
push
push
push
call
int3
add
mov
add
rolb
mov
push
lods
rcr
mov
lea
movsl
add
add
int3
mov
adc
push
add
add
test
add
add
add
mov
in
lock
call
push
push
call
add
lret
orb
add
cld
imul
jge
add
pushf
mov
ret
repnz
popa
std
insb
add
mov
sahf
add
lds
push
movsb
add
jp
imul
inc
cld
pushl
push
sub
pop
push
push
push
push
call
mov
pop
je
jae
test
add
movb
pop
lret
lds
icebp
xchg
xchg
fldcw
scas
add
xchg
enter
add
mov
pop
add
out
mov
add
mov
push
mov
popa
xchg
je
add
mov
imul
add
cmc
rolb
lcall
add
movsl
idiv
call
cmpl
jne
pop
push
push
push
call
push
add
out
add
xchg
scas
leave
add
icebp
aam
in
add
add
jno
out
add
add
jmp
add
fiaddl
add
addl
jo
jne
mov
lock
add
pop
jmp
add
add
test
pop
pop
push
sub
pop
pop
push
add
pop
pop
push
shl
pop
leave
push
push
push
call
xchg
mov
add
add
add
add
add
iret
xchg
add
pop
movsl
popl
loop
pop
add
test
add
fstl
mov
add
push
add
mov
jns
add
add
les
jp
add
lcall
add
push
push
pop
mov
add
push
push
lea
push
push
push
call
push
add
test
add
cmpsb
cmpsl
jp
add
outsl
iret
cmpsl
loop
ret
push
fcoml
mov
sarl
lcall
push
push
dec
add
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
push
lods
enter
add
scas
xchg
mov
mov
cltd
mov
in
lods
pushf
lods
js
mov
xlat
cltd
lea
fidivl
add
test
data16
xchg
in
pop
roll
loope
lcall
mov
add
lcall
push
push
lea
push
call
push
test
fst
imul
jno
pusha
movsb
pushf
add
int
add
jae
ja
add
add
mov
mov
push
add
mov
mov
push
sub
pop
movl
push
shl
pop
push
push
rol
sub
pop
call
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
cwtl
jp
int
je
add
add
loope
mov
push
fcmovu
xchg
js
add
xchg
stos
stos
add
popf
mov
xchg
fistps
jp
add
lea
dec
cli
call
push
push
push
push
push
push
push
call
add
add
xchg
sahf
add
loope
lret
les
push
add
add
pusha
mov
out
add
lret
jp
add
push
mov
add
add
add
insl
cld
add
cmpl
jne
push
sub
xor
rol
sub
pop
pop
push
sub
pop
pop
push
add
shr
dec
pop
pop
push
add
pop
pop
push
push
push
push
call
xlat
add
add
call
out
stc
aad
push
out
jne
push
add
jle
fsubrl
fimull
push
add
lcall
add
add
xchg
add
mov
in
push
add
incb
cwtl
add
add
movsb
imul
jo
add
aad
mov
in
mov
sub
pop
leave
push
inc
xor
pop
ret
push
ror
sub
add
pop
push
mov
push
push
push
push
push
call
clc
imul
add
add
stc
ljmp
repnz
add
in
lods
mov
jmp
lods
pushf
out
jae
add
add
push
add
add
sub
pop
add
push
dec
inc
shl
pop
push
push
rol
rol
pop
push
push
lea
push
call
lret
into
add
push
mov
add
popa
mov
add
add
add
fmulp
add
out
add
add
push
pop
add
add
xchg
fisttps
add
push
push
sub
pop
mov
push
sub
pop
lea
push
dec
pop
sub
mov
push
not
not
add
add
pop
shr
push
add
not
sub
shl
pop
add
push
lea
push
push
push
push
push
call
adc
add
fldl
add
push
mov
int3
lea
pop
add
pop
add
add
call
push
lea
push
lea
push
lea
push
call
mov
pop
add
nop
mov
push
xchg
add
add
call
pop
lahf
std
add
pop
clc
jbe
add
stos
add
add
add
add
xchg
popa
xchg
mov
add
addb
pop
mov
push
push
push
call
add
pop
lods
jp
add
add
add
xlat
add
jle
add
jns
fwait
ja
mov
ljmp
add
out
mov
xchg
rcrb
popf
jecxz
mov
out
les
ja
shlb
ja
cmc
pop
fst
loop
add
cltd
sub
ljmp
or
out
sub
pop
add
push
push
push
lea
push
push
call
push
jge
bound
leave
xlat
fstl
pushf
add
pop
imul
add
cmpsb
int
jns
xchg
add
sahf
enter
in
rolb
add
lcall
shlb
push
push
push
lea
push
lea
push
push
call
int3
add
test
pop
pop
add
add
divb
add
pop
add
into
push
fidivrs
add
shr
mov
add
add
sahf
add
mov
hlt
add
cli
add
add
jne
addr16
jns
add
fcomps
push
add
inc
add
add
push
sub
pop
cmp
jne
push
ror
pop
cmp
jne
mov
push
push
push
push
push
push
lea
push
push
push
call
repnz
jmp
rclb
add
out
mov
fst
add
incb
mov
ljmp
add
xchg
add
ror
mov
mov
add
lahf
jb
mov
popa
add
movsb
add
insb
imul
push
test
fdivr
add
add
lcall
add
add
add
ret
push
pop
jmp
mov
push
push
push
push
lea
push
push
push
push
call
push
out
add
roll
int3
loopne
mov
add
scas
icebp
mov
add
add
add
rolb
jge
add
adc
lods
ja
mov
add
jl
test
in
loopne
mov
push
lea
push
call
in
mov
pop
pop
add
addb
add
jb
testl
mov
add
add
loope
lcall
in
clc
lcall
ljmp
pusha
add
add
xor
pop
movl
jmp
push
push
push
push
push
push
push
push
push
call
clc
add
scas
pop
add
stc
add
sti
scas
add
ljmp
push
enter
add
pusha
push
add
add
inc
cld
push
lea
push
call
add
mov
add
lcall
imul
stos
hlt
add
add
ljmp
cmpsb
add
ja
loopne
out
mov
arpl
add
pop
xlat
mov
pop
mov
cmp
jne
push
shr
dec
dec
ror
pop
mov
movl
push
add
shr
pop
jmp
push
dec
rol
ror
dec
pop
mov
push
xor
pop
cmpw
jne
mov
push
xor
sub
pop
movl
jmp
push
push
lea
push
call
add
add
add
add
add
add
jns
mov
fadds
lret
jae
add
add
add
mov
lcall
js
add
add
add
lcall
pushl
push
push
lea
push
push
call
mov
add
add
add
pop
add
movsb
add
mov
pop
add
add
add
je
iret
xchg
mov
mov
add
testb
pop
add
mov
jno
enter
push
mov
out
add
add
mov
push
fiadds
lcall
push
ror
pop
mov
push
push
push
call
loopne
add
test
rcrb
movsb
jle
lods
add
scas
mov
mov
movsl
add
add
jle
add
mov
call
pop
mov
push
sub
add
pop
mov
push
push
dec
shr
shr
dec
push
sub
add
sub
sub
dec
pop
not
pop
push
push
push
push
lea
push
call
add
add
ja
add
jo
js
add
add
clc
add
add
add
mov
jb
test
addb
in
in
pop
push
call
push
dec
shl
shr
pop
cmpl
je
push
push
inc
not
push
xor
add
inc
sub
add
pop
ror
pop
push
not
pop
push
push
sub
sub
xor
pop
call
push
shr
pop
cmpl
je
push
push
sub
push
xor
add
add
inc
dec
sub
shl
sub
pop
not
pop
push
rol
shl
pop
push
call
push
lea
push
lea
push
call
roll
je
mov
pop
addr16
mov
jle
fwait
out
cli
add
test
add
sar
push
stos
rcrl
mov
cwtl
add
popf
stc
mov
add
mov
mov
add
add
sub
pop
cmpl
je
push
push
push
or
inc
add
rol
shr
sub
ror
pop
lea
add
lea
add
pop
push
ror
add
not
pop
push
call
push
add
pop
cmpl
je
push
push
sub
add
lea
push
or
not
add
not
sub
sub
ror
pop
sub
add
pop
push
push
lea
push
lea
push
call
mov
add
add
xor
fidivrl
add
aam
add
pop
add
push
arpl
add
js
lahf
flds
add
scas
addr16
pop
mov
mov
push
shl
xor
add
not
pop
call
push
lea
push
push
lea
push
push
push
push
call
add
nop
add
fwait
addr16
xchg
shrb
cmpsl
clc
xchg
shll
add
push
xchg
rolb
jns
jle
add
ja
add
mov
add
add
add
mov
in
in
lcall
cmp
rol
je
push
push
ror
shl
push
and
add
rol
sub
sub
not
inc
dec
pop
not
pop
push
shr
shr
pop
push
push
push
push
push
lea
push
push
call
add
mov
add
roll
je
out
add
add
aam
add
add
add
fdivl
mov
movsb
out
push
add
add
add
add
bound
stos
fwait
add
add
pop
out
test
add
add
mov
xlat
jle
add
mov
mov
jle
add
mov
sub
pop
call
cmpl
je
push
push
rol
sub
add
push
xor
add
inc
lea
sub
sub
sub
not
pop
add
add
add
xor
pop
push
sub
dec
shr
inc
pop
push
call
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
lods
add
add
xchg
push
lret
arpl
jmp
add
int
imul
mov
add
sub
loop
mov
rolb
mov
pop
mov
add
xchg
fxam
push
jl
insb
add
sarl
in
fdivr
lcall
cmp
or
int3
je
push
push
add
shr
not
shr
push
or
inc
add
sub
xor
pop
shr
add
pop
push
push
call
out
mov
mov
mov
int
add
push
gs
enter
mov
testl
add
roll
arpl
imul
add
add
in
iret
add
incb
rolb
mov
test
clc
pop
push
push
push
push
push
lea
push
lea
push
call
mov
ja
movl
call
clc
add
mov
je
xchg
cltd
fcmovne
add
add
test
out
cld
mov
push
mov
faddl
subb
xorb
add
ret
jb
pop
pop
rol
pop
cmpl
je
push
push
sub
push
push
pop
add
ror
shl
sub
sub
pop
sub
ror
shr
not
pop
push
shl
pop
push
call
push
sub
lea
pop
cmpl
je
push
push
lea
sub
push
sub
add
dec
sub
ror
pop
ror
shr
pop
push
push
push
lea
push
push
lea
push
call
mov
add
repnz
add
cli
lea
out
mov
cli
add
jo
add
mov
add
cmpsb
popa
add
add
sub
pop
push
call
push
inc
pop
cmpl
je
push
push
lea
sub
push
xor
add
add
sub
not
pop
add
not
xor
pop
push
lea
shr
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
clc
mov
add
add
shlb
cmpsb
add
add
add
add
pop
add
out
jae
in
fcompl
adc
add
cmpl
je
push
push
not
sub
push
push
pop
add
inc
sub
pop
shr
pop
push
push
push
push
push
push
call
push
aam
pushf
in
add
xchg
add
lock
ret
mov
fadd
add
movsl
add
mov
test
loop
add
in
cmc
nop
arpl
push
enter
push
cli
outsl
push
movsl
xchg
add
lret
add
in
call
push
push
lea
push
push
push
push
push
push
push
call
cmc
in
scas
add
testb
cli
add
loop
loop
lock
push
insb
mov
outsl
jmp
add
out
mov
add
jnp
out
insb
test
stos
add
xchg
test
cld
mov
add
add
add
icebp
scas
mov
rcll
sbbb
sub
pop
call
push
sub
shl
pop
cmpl
je
push
push
inc
lea
push
xor
add
not
not
not
sub
xor
rol
shl
shl
pop
sub
pop
push
rol
xor
xor
pop
push
call
push
add
pop
cmpl
jne
mov
push
add
add
not
pop
movl
push
lea
push
push
push
push
call
fsubrl
scas
add
jne
push
notb
mov
cmpsl
jne
clc
add
nop
scas
add
add
mov
add
mov
test
add
fsubrl
sub
pop
jmp
xor
push
push
push
push
call
add
add
movsb
leave
enter
add
add
scas
lcall
nop
add
add
xchg
add
add
movl
add
pop
popa
add
xchg
add
int3
ljmp
lock
in
lock
pop
pop
push
rol
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
fildl
add
je
add
mov
add
mov
std
sahf
jo
add
add
sarb
jmp
add
cltd
push
jno
fistps
add
add
cmpsb
add
ret
add
leave
push
add
add
fsqrt
ljmp
pop
pop
push
push
lea
push
push
push
push
push
call
pop
ja
add
add
iret
nop
add
add
mov
mov
leave
out
push
jge
add
jb
roll
loopne
lea
mov
mov
add
add
imul
ret
jb
add
add
add
add
add
add
mov
mov
pop
leave
push
dec
add
add
rol
pop
ret
push
dec
pop
push
push
add
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
call
insb
cwtl
pusha
add
add
add
fwait
jmp
add
add
mov
scas
add
int3
add
add
out
add
jle
xchg
push
mov
add
push
add
rcl
add
add
mov
stc
add
call
add
lcall
jge
add
test
add
xlat
push
lea
lea
push
push
pop
add
shr
sub
pop
shr
rol
not
add
pop
push
pop
pushl
push
push
lea
push
push
push
push
call
push
pop
test
add
outsl
jbe
vandpd
mov
ljmp
add
lcall
clc
stc
data16
add
loop
jbe
in
call
call
push
push
push
push
call
jmp
addb
subl
cmpsb
leave
stos
clc
lahf
lea
add
mov
enter
add
add
add
jae
push
jnp
lods
add
fwait
add
int3
cmpsb
add
jecxz
add
add
add
stos
add
push
call
lcall
call
push
lea
push
push
call
mov
test
add
mov
add
fimuls
add
clc
lret
mov
add
cld
pop
add
test
int3
cwtl
lret
xchg
pop
xorl
call
mov
stos
mov
sub
pop
jmp
push
push
push
lea
push
lea
push
lea
push
push
push
call
in
add
add
add
jb
divl
mov
jmp
jp
add
push
jecxz
sarb
jae
add
fistps
cmpl
pop
cmpl
je
push
push
push
call
add
pop
add
mov
mov
jl
pusha
add
jbe
jbe
xchg
popf
out
add
add
add
pop
xchg
mov
add
ret
jae
add
loopne
mov
add
add
jge
add
add
push
lea
pop
leave
add
push
push
lea
push
push
push
lea
push
push
push
call
add
add
push
push
pop
fcmovbe
int3
push
outsl
loope
add
push
add
push
in
xchg
out
push
jne
mov
call
mov
mov
add
lcall
pop
push
rol
add
pop
pop
pop
push
ror
pop
leave
push
push
push
push
lea
push
push
push
call
lret
mov
pop
add
mov
popl
into
add
add
add
jb
jle
xchg
pushf
xchg
xchg
aad
pushf
add
shl
data16
pop
mov
les
in
in
add
push
sub
pop
ret
jmp
push
lea
sub
pop
cmpl
jne
push
push
inc
ror
push
push
pop
add
add
sub
sub
pop
sub
xor
pop
push
push
lea
push
push
push
push
lea
push
call
add
add
add
enter
scas
add
cmpsb
out
add
movsb
test
cltd
pusha
add
add
add
add
add
in
add
xchg
xchg
addb
add
pop
test
or
in
in
lcall
jne
push
add
pop
call
push
sub
not
pop
push
push
push
push
push
push
lea
push
push
call
add
pop
push
add
mov
fldl
pop
add
add
pop
add
add
imul
add
mov
add
lcall
rclb
mov
add
add
jbe
add
jle
nop
mov
imul
add
add
add
add
jmp
add
stos
jns
int
aad
add
into
jle
in
push
roll
in
xchg
add
add
add
jnp
idivl
add
jo
add
enter
jo
in
clc
pop
jmp
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
push
xchg
xchg
bound
cmc
movb
popf
mov
add
enter
insb
add
outsl
leave
add
push
mov
add
jne
add
mov
js
mov
add
in
jl
icebp
mov
in
fcomps
jge
add
test
add
add
push
shr
pop
mov
push
sub
pop
jmp
push
pop
push
push
push
shl
rol
push
push
pop
add
shl
sub
xor
pop
sub
pop
push
inc
sub
pop
pushl
push
shl
pop
call
call
push
push
add
push
or
not
add
xor
sub
ror
not
pop
shl
inc
add
pop
push
add
add
sub
pop
pushl
push
not
pop
call
push
not
xor
pop
call
push
push
not
add
shl
dec
push
sub
add
inc
ror
sub
pop
not
not
pop
push
add
sub
pop
pushl
push
shr
not
pop
call
push
ror
add
pop
call
push
push
push
or
inc
add
lea
shl
sub
xor
sub
rol
dec
pop
dec
inc
lea
pop
push
push
push
push
push
push
push
call
pusha
shlb
lahf
out
mov
add
add
xlat
add
add
add
add
cmpsl
add
add
push
push
mov
lcall
jne
push
sub
pop
call
call
push
push
sub
shl
shl
sub
push
push
pop
add
shl
sub
sub
sub
pop
inc
pop
push
xor
add
pop
pushl
call
push
not
sub
not
pop
call
push
push
shr
push
or
inc
add
inc
sub
shl
lea
pop
xor
pop
push
inc
pop
pushl
push
not
add
pop
call
call
push
push
sub
lea
dec
push
or
not
add
shr
ror
sub
xor
shl
inc
pop
lea
lea
pop
push
push
push
push
push
push
push
push
call
aam
clc
movsb
cmpsl
add
rcr
xchg
bound
addb
mov
add
mov
xchg
pop
mov
push
gs
add
jbe
add
in
in
stos
add
shlb
sub
pop
pushl
push
pop
call
call
push
push
sub
push
or
inc
add
sub
shr
rol
dec
pop
add
pop
push
push
call
flds
push
ffree
add
popa
sahf
add
add
add
je
pop
add
std
push
fiadds
add
add
mov
ret
add
mov
enter
add
int
add
cli
add
sti
add
movsb
out
add
in
sub
pop
pushl
push
shl
pop
call
push
not
inc
pop
call
push
push
inc
push
or
not
add
add
add
sub
ror
ror
rol
pop
xor
rol
inc
rol
pop
push
push
call
mov
ret
rclb
mov
rcrl
add
jbe
add
testb
xchg
fistpl
xchg
mov
add
lds
mov
imul
out
scas
push
pushl
push
add
pop
call
push
add
sub
pop
call
push
push
rol
add
sub
ror
push
or
inc
add
ror
xor
sub
rol
pop
rol
sub
shl
pop
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
mov
call
jns
mov
jnp
xchg
cmc
mov
sar
sahf
add
test
add
cld
add
lock
add
xchg
sub
pop
pushl
push
ror
add
pop
call
push
inc
pop
lea
push
sub
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
mov
add
add
add
add
lds
lea
add
mov
add
rol
pop
add
in
in
lcall
shrb
inc
xchg
sub
add
shr
push
push
pop
add
xor
sub
sub
shl
pop
sub
sub
pop
push
lea
push
call
mov
sti
ret
add
int3
ljmp
add
add
push
andb
push
cmpl
push
lcall
sub
pop
pushl
call
push
add
shl
pop
call
push
push
add
xor
add
ror
push
xor
add
add
sub
xor
rol
sub
add
not
add
add
pop
inc
rol
pop
push
rol
not
dec
pop
pushl
push
rol
inc
pop
call
call
push
push
shl
sub
push
and
add
xor
sub
pop
xor
inc
pop
push
inc
sub
pop
pushl
push
push
push
push
call
pop
scas
add
add
add
pop
jp
add
aam
out
jns
add
repnz
mov
jle
add
jno
mov
add
cli
in
lea
mov
add
add
jge
add
add
jns
aam
xchg
mov
mov
add
into
mov
sub
pop
call
push
inc
not
pop
call
lea
push
push
dec
lea
ror
push
or
inc
add
rol
dec
sub
not
ror
pop
shl
not
lea
inc
pop
push
push
push
push
call
add
jae
add
jnp
add
mov
jns
push
add
add
loop
lahf
pusha
add
add
out
add
add
loop
add
lahf
add
popa
lcall
fldl
mov
pop
lods
test
stos
add
xchg
add
rclb
addl
add
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
fsubrp
lea
mov
add
out
movl
jmp
mov
clc
lahf
add
out
add
mov
imul
mov
pushf
imulb
lcall
fbld
add
push
shl
pop
push
call
push
push
rol
shr
shl
push
or
inc
add
rol
sub
add
shl
dec
pop
add
pop
push
ror
ror
pop
pushl
push
push
lea
push
call
rolb
mov
clc
add
in
mov
add
jns
mov
jo
add
add
lods
add
add
mov
cld
add
push
imul
insb
add
push
xor
lahf
call
pop
add
mov
out
add
in
fnstenv
add
gs
sub
pop
call
call
push
add
rol
sub
pop
mov
push
push
sub
xor
push
push
pop
add
shr
sub
ror
sub
sub
xor
pop
lea
sub
sub
pop
push
push
push
push
call
mov
test
jl
mov
aad
mov
shrl
aam
fnsave
flds
add
js
add
push
pop
add
add
push
jo
mov
jmp
push
jnp
add
dec
add
rcr
mov
fists
add
sub
pop
pushl
call
push
xor
sub
pop
push
push
xor
dec
pop
pushl
push
push
call
pop
add
stos
outsl
add
add
push
add
pop
push
add
add
fiadds
add
jmp
shll
add
stos
add
mov
lret
movl
add
ror
gs
add
cltd
int3
popf
add
test
in
clc
pop
call
push
push
ror
push
push
pop
add
dec
add
sub
rol
pop
xor
dec
pop
push
xor
xor
pop
pushl
push
push
push
push
push
push
call
loop
out
out
pop
push
add
add
leave
rolb
addr16
add
popf
add
add
xchg
mov
add
pop
xchg
int
add
lods
sbbl
push
add
push
push
add
lea
push
push
pop
add
sub
sub
sub
sub
shr
not
rol
pop
shl
dec
dec
add
pop
push
push
dec
dec
push
or
inc
add
add
inc
sub
add
xor
pop
not
pop
push
lea
push
push
lea
push
lea
push
push
call
cld
les
lds
pop
add
jne
add
push
add
mov
rolb
faddl
stc
mov
icebp
jno
popf
add
and
cwtl
mov
ja
xchg
mulb
enter
loope
imul
in
std
add
fldl
cmpsl
sub
pop
call
push
push
lea
add
shl
ror
push
and
add
sub
ror
pop
not
dec
shl
pop
push
push
lea
push
call
in
in
orb
jp
add
ljmp
subb
xchg
add
mov
fnstsw
add
add
shl
in
hlt
lcall
jne
push
sub
lea
ror
not
pop
call
push
push
push
call
int
loopne
lret
cmpsb
lea
add
decb
add
mov
add
movsb
mov
xchg
add
inc
add
fcoms
mov
add
add
inc
hlt
push
sub
add
xor
rol
pop
lea
push
add
rol
pop
lea
push
push
add
add
sub
sub
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
sahf
add
sub
stos
repnz
sar
xchg
push
add
shr
lret
insb
outsl
jne
test
add
add
mov
mov
push
add
cltd
mov
add
cmpsb
push
popa
add
sbbl
add
mov
imul
fdivr
lcall
add
push
lea
not
add
ror
pop
push
push
push
push
lea
push
push
push
push
call
add
repnz
ret
add
add
push
mov
out
add
add
scas
mov
cld
add
add
fnstsw
out
add
call
add
pop
pushl
push
rol
pop
push
push
inc
pop
call
push
push
shr
lea
push
sub
add
add
lea
sub
sub
shr
sub
pop
add
inc
not
pop
push
shr
pop
pushl
push
xor
not
dec
rol
pop
call
call
push
lea
push
push
push
call
pop
add
std
out
jecxz
testl
je
add
mov
add
enter
pop
loop
pop
fldl
add
add
mov
push
add
add
push
add
sub
pop
mov
push
push
call
mov
jmp
mov
fldl
lods
add
add
jnp
pop
add
aam
in
sbbl
jle
fwait
cld
fdivl
push
ja
cmpsb
add
in
clc
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
add
cld
cltd
add
ljmp
add
xchg
add
add
add
add
add
into
xchg
push
lcall
mov
aad
add
addr16
add
add
add
push
movsb
fcmovnbe
sub
pop
dec
jne
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
pop
cmpsl
push
add
xchg
orb
pop
jo
add
loope
jnp
add
add
mov
add
add
movsl
mov
mov
fldl
add
mov
add
jl
les
les
mov
les
hlt
add
sub
pop
call
push
push
lea
sub
push
xor
add
add
dec
dec
add
sub
lea
add
pop
xor
pop
push
sub
pop
pushl
push
lea
push
lea
push
push
lea
push
push
push
call
lods
xchg
data16
mov
add
add
rolb
in
xchg
xchg
scas
enter
fwait
mov
in
jae
xlat
std
fildl
mov
sti
fs
push
jle
imul
pop
je
loope
pop
lcall
data16
add
sti
add
loope
add
add
add
sub
pop
call
push
push
shl
xor
shl
lea
pop
call
push
inc
sub
rol
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
add
in
outsl
roll
push
mov
add
add
lock
jne
push
lcall
orb
add
mov
add
add
test
loopne
gs
jns
add
add
add
in
loopne
lea
push
push
shr
push
push
pop
add
xor
sub
ror
sub
dec
pop
ror
pop
push
push
lea
push
push
push
call
lahf
jne
les
fiaddl
add
add
jae
in
add
hlt
add
add
add
jns
je
add
popl
loope
jle
outsl
add
add
add
mov
arpl
jl
roll
adcb
js
add
add
fwait
js
cli
xlat
addl
in
in
lcall
jne
call
push
inc
inc
add
pop
push
call
push
push
not
sub
push
sub
add
dec
sub
shr
not
add
pop
shl
add
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
int3
add
idivl
add
add
lahf
testl
cmc
lret
add
aad
mov
stc
loopne
add
add
gs
sub
pop
pushl
push
inc
add
ror
rol
pop
call
push
lea
push
push
call
add
imul
push
add
mov
mov
mov
out
mov
imul
push
cltd
ljmp
sarb
lret
cld
add
xchg
leave
add
pop
lcall
fildl
lods
sub
pop
call
mov
push
push
push
call
ljmp
ljmp
xlat
data16
xchg
add
fadds
add
loopne
push
mov
aad
iret
add
mov
lods
test
lret
cmc
add
push
xchg
add
fld
add
add
pop
add
outsl
mov
andl
hlt
lcall
pushf
and
ljmp
cwtl
std
mov
xor
ror
push
push
pop
add
rol
sub
sub
shr
pop
ror
inc
pop
push
lea
push
call
add
ljmp
add
cltd
cli
mov
clc
shr
mov
jp
add
mov
mov
add
add
in
sti
jl
les
std
add
in
clc
lcall
jne
call
push
lea
push
push
push
lea
push
push
call
add
xlat
mov
add
add
add
add
jnp
add
mov
xchg
add
add
test
add
add
fld
add
add
in
mov
xchg
add
add
add
int
cmpsl
xchg
add
call
lea
push
push
push
lea
push
push
push
push
call
jmp
mov
add
add
add
add
add
add
lds
mov
cli
cltd
add
push
jb
out
xchg
mov
pop
fsubp
addb
add
mov
xchg
pusha
jo
add
lcall
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
rorb
divl
icebp
jl
add
in
out
int3
jae
lcall
pop
push
push
ror
sub
pop
pushl
push
push
sub
dec
push
or
not
add
rol
sub
shr
sub
not
pop
inc
xor
pop
push
shr
lea
pop
push
push
add
lea
pop
call
push
push
shl
xor
push
or
not
add
rol
inc
sub
sub
ror
add
pop
sub
pop
push
sub
shl
not
pop
pushl
call
push
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
add
test
add
stos
add
scas
mov
enter
jns
out
add
add
jbe
repnz
icebp
add
loopne
call
push
push
inc
sub
sub
sub
push
xor
add
ror
sub
inc
dec
dec
rol
pop
ror
inc
inc
pop
push
lea
push
call
cmpsb
jle
add
add
jno
lock
call
movsb
mov
add
add
add
xchg
mov
add
mov
clc
pop
pushl
push
inc
sub
shr
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
mov
add
jns
pop
add
subb
pusha
add
add
pusha
hlt
add
mov
push
add
add
fdivr
lcall
shr
dec
add
add
rorb
addl
pop
pushl
mov
push
push
push
push
lea
push
call
add
cmp
add
test
add
cli
add
addb
add
xchg
add
bound
js
add
add
cwtl
mov
add
sub
pop
jmp
push
push
xor
shr
shr
push
push
pop
add
lea
xor
rol
sub
add
lea
pop
sub
pop
push
inc
add
pop
pushl
push
xor
inc
lea
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
add
push
xchg
movsl
add
mov
add
add
add
mov
je
add
add
add
add
in
add
add
add
cld
mov
add
add
add
out
add
lea
add
add
shrb
enterw
rol
leave
mov
iret
push
and
add
dec
xor
sub
dec
shl
pop
xor
shr
ror
pop
push
not
shr
shr
pop
pushl
call
push
push
push
call
insb
xchg
fwait
add
out
mov
add
into
add
add
fwait
jmp
bound
je
add
les
mov
call
add
add
jp
xchg
jl
rcl
aam
idivl
add
pop
in
add
pop
jbe
cli
jge
lcall
add
add
add
sub
pop
push
call
push
lea
push
call
jl
pop
out
jp
sahf
pop
add
lock
insb
mov
ftst
xchg
add
add
test
flds
mov
add
pop
add
shl
add
clc
add
add
pop
in
add
push
cli
mov
in
stc
imul
sub
pop
leave
push
push
push
push
call
cwtl
add
insb
aad
out
scas
test
scas
enter
add
add
pop
icebp
mov
sahf
add
in
add
lahf
popf
add
or
push
cli
mov
gs
jns
in
lock
add
push
shr
sub
shr
pop
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
lret
push
je
lods
movsb
add
cltd
pop
add
stc
adcb
add
pushf
add
clc
add
jmp
fisubl
pushf
add
leave
lret
out
push
add
add
mov
sarb
add
sahf
in
add
roll
xchg
mov
insb
jb
add
add
lcall
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
xchg
add
push
add
into
stos
mov
into
popl
notb
push
jnp
mov
xlat
lcall
loopne
add
pop
pop
push
push
push
push
push
call
fisubrs
add
jno
add
add
add
pop
int
shr
add
hlt
add
add
pop
pop
add
add
idivl
xchg
jbe
test
imul
add
mov
int3
mov
add
pop
push
lods
lds
in
in
lcall
add
push
lea
push
push
push
lea
push
push
push
call
mov
mov
add
js
leave
int3
add
add
add
mov
jle
scas
int
scas
cltd
pushf
add
add
add
xchg
rol
addl
jnp
cld
jo
jb
sub
pop
ret
push
not
ror
lea
pop
leave
push
push
push
push
call
mov
fists
clc
add
lret
add
hlt
cmpsb
add
fildl
add
add
mov
stos
fwait
lcall
clc
subl
push
mov
shlb
lock
lcall
or
push
inc
pop
push
push
add
pop
mov
push
shl
rol
ror
add
pop
cmpl
jne
mov
push
shr
lea
shr
pop
jmp
push
sub
pop
mov
and
push
add
lea
pop
xor
push
not
pop
xor
add
push
xor
sub
pop
xor
push
lea
inc
pop
dec
push
rol
pop
sub
push
push
push
lea
push
call
jno
add
add
loopne
mov
ja
cwtl
mov
mov
shlb
cld
mov
add
mov
add
add
ja
add
movb
lds
pop
jge
shl
cmc
xchg
add
in
pusha
push
add
add
add
ljmp
add
push
in
add
aam
je
push
movb
in
lock
lcall
test
add
sub
push
push
push
call
rcl
into
mov
out
mov
add
add
jns
add
add
add
add
jb
add
mov
add
pusha
add
jbe
fsubr
add
outsl
push
xchg
je
jle
add
movsb
mov
mov
jle
push
jae
add
add
pop
add
add
xor
sub
pop
sub
push
not
pop
cmp
jne
push
shl
add
sub
add
pop
mov
push
shr
inc
pop
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
mov
mov
int3
xchg
add
sub
arpl
add
add
adc
mov
add
fadd
popa
pop
mov
add
jmp
lea
push
push
call
fistpll
test
repnz
add
loopne
xchg
jbe
add
push
push
mov
movsl
scas
bound
out
out
cmc
add
mov
roll
leave
add
jp
test
in
lock
mov
shr
push
shr
pop
add
push
lea
push
push
push
push
call
movb
leave
popf
add
cli
add
int
push
lock
ja
jbe
push
add
ja
fistps
mov
pop
push
shll
add
pop
xchg
cld
xchg
mov
out
out
lret
mov
fdivrl
out
cli
testl
sub
pop
sub
push
ror
pop
pushl
push
lea
pop
pop
push
xor
pop
shr
push
rol
lea
inc
pop
and
sub
push
shr
sub
lea
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
loop
jle
iret
testb
mov
shlb
icebp
mov
add
jns
mov
in
icebp
add
xorl
in
fdivr
lcall
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
in
add
add
add
add
jne
ja
loop
std
push
mov
test
pop
fiadds
sub
pop
ret
push
push
push
push
push
push
push
lea
push
call
add
out
stos
add
push
xlat
mov
add
test
iret
add
bound
mov
add
xchg
pop
mov
pop
stos
aad
add
xchg
neg
pop
add
push
push
call
pop
scas
lcall
call
add
cmc
xchg
mov
jl
mov
adc
mov
add
lret
xchg
add
fistpl
add
int3
add
add
add
mov
mov
lods
add
je
call
iret
mov
sub
pop
mov
add
push
pop
push
push
ror
shr
pop
push
push
push
not
not
pop
push
push
push
shr
xor
shr
pop
mov
push
push
push
push
lea
push
push
call
add
add
add
mov
ret
add
call
jnp
rcrl
add
add
xlat
cmpsl
push
fucomip
add
fildl
push
push
cwtl
mov
mov
lea
bound
lea
push
dec
lea
add
pop
sub
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
add
add
add
add
add
add
add
int3
mov
stos
jle
add
rolb
push
add
icebp
add
mov
jb
incb
add
xchg
sub
pop
mov
push
dec
pop
shr
add
push
push
call
add
add
andl
mov
add
jmp
xchg
add
js
add
add
add
add
add
pop
idivb
fwait
lahf
add
add
add
std
ja
add
jle
roll
lret
push
add
jae
xchg
add
add
mov
add
clc
pop
mov
push
lea
not
pop
add
push
inc
pop
mov
push
shr
lea
add
pop
add
xor
push
ror
add
xor
ror
pop
mov
and
push
shl
dec
pop
rol
rol
push
push
lea
push
push
call
in
add
add
pop
add
lcall
shll
xchg
aad
add
addb
add
push
mov
pop
add
add
sub
pop
xor
push
add
shl
pop
inc
cmpb
jne
push
push
push
push
push
push
push
call
push
add
xlat
cwtl
add
popf
iret
add
pop
add
in
add
test
stc
mov
pop
jge
add
add
nop
add
add
loopne
add
nop
add
add
add
add
roll
je
add
add
jo
add
add
movsl
add
rcr
icebp
mov
sub
pop
add
cmp
je
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
loop
add
pushf
loopne
add
add
add
add
add
mov
add
jae
add
xlat
lahf
pop
jae
mov
add
add
stos
mov
scas
mov
add
int3
mov
loop
add
lods
mov
add
push
push
push
push
push
lea
push
push
push
call
add
add
int
imul
pop
add
int
mov
fistpl
addl
jmp
xchg
add
loopne
add
cwtl
cli
add
sub
pop
cmpl
jne
push
push
push
push
lea
push
push
push
push
push
push
call
fsubl
pop
add
imul
xchg
add
add
rclb
ret
mov
jb
xchg
pop
repnz
pop
test
add
sub
pop
xor
push
inc
pop
pop
push
shr
add
lea
pop
pop
pop
push
push
lea
push
call
clc
add
lds
pop
ret
stc
lods
pop
fs
add
add
aam
into
mov
fstpl
addr16
popa
nop
jmp
add
push
lds
mov
js
out
add
testl
pop
add
add
add
sub
pop
pop
push
pop
pop
push
push
lea
push
push
call
loop
add
data16
add
roll
add
pop
pushf
add
pop
add
push
fiadds
add
mov
aad
test
sub
pop
leave
push
push
push
push
push
push
lea
push
push
lea
push
push
call
incb
add
imul
outsl
std
adcb
jbe
add
mov
add
loope
rolb
ret
add
push
enter
in
fcomps
or
push
shl
add
rol
pop
mov
push
not
pop
add
push
push
push
call
mov
les
mov
pushf
loop
int3
add
pop
mov
add
add
fcom
jo
mov
add
add
stos
mov
cld
outsl
cmc
add
add
lock
shl
add
add
lcall
push
add
sub
xor
lea
pop
push
push
push
push
push
push
push
push
push
push
call
nop
add
add
add
filds
mov
hlt
fists
addr16
je
add
in
cmpsb
mov
cmc
push
mov
add
cmpsl
mov
add
mov
jae
icebp
add
add
push
mov
add
movsb
mov
add
int3
scas
cli
add
mov
add
lcall
ret
add
rol
dec
dec
pop
mov
push
inc
ror
lea
pop
testw
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
roll
fiaddl
test
addr16
movsl
std
mov
mov
add
shlb
test
add
add
sti
add
testl
filds
shrb
add
add
lahf
lods
add
fcomi
add
fucom
shl
mov
jp
imul
push
add
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
rorb
addr16
loope
mov
outsl
cld
add
incb
stos
mov
jmp
aad
push
pop
test
add
into
sub
pop
pop
push
push
call
jle
add
add
add
bound
add
cltd
leave
mov
add
add
roll
cmpsb
js
add
pop
addb
jl
add
push
add
leave
sub
pop
mov
push
push
push
push
push
lea
push
call
lds
add
lods
mov
cmpsb
add
fldl
jl
mov
add
insb
rolb
ret
push
add
add
fs
addb
std
push
xchg
add
lcall
push
sub
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
push
push
call
xchg
popa
add
add
mov
out
test
mov
add
lock
xchg
add
jmp
add
les
add
cmpsl
add
add
out
fsubrp
out
xchg
add
add
xchg
jl
add
in
jb
in
fdivr
lcall
xor
push
push
push
push
lea
push
lea
push
push
push
call
add
ljmp
imul
pusha
add
add
add
add
add
out
cwtl
bound
int
ficoms
add
iret
add
xlat
jbe
add
pop
add
mov
loopne
lcall
push
lea
push
push
push
push
push
push
push
push
call
out
lret
lock
arpl
add
test
leave
fwait
jp
xchg
mov
add
add
andb
add
add
repnz
faddl
popf
popa
add
jge
mov
add
flds
in
imul
enter
push
push
push
lea
push
push
push
call
add
movl
add
add
add
push
push
mov
xchg
fisubl
pop
xchg
jp
fsts
add
add
filds
jae
add
lock
add
add
mov
mov
mov
jl
aam
addb
xchg
add
mov
jmp
addr16
push
jmp
sub
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
imul
add
jl
ret
add
popa
shll
sbbb
mov
mov
push
arpl
add
test
movsl
scas
add
bound
fldl
jb
sub
pop
leave
push
xor
shr
pop
ret
push
not
shl
pop
push
mov
push
push
push
push
push
push
push
call
out
xchg
int
testl
add
add
add
jmp
xchg
add
fadds
pop
add
jb
add
push
mov
add
push
add
fnstenv
add
test
xchg
add
addb
cmc
add
fsts
lret
add
in
in
lcall
hlt
push
push
sub
inc
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
stos
push
cmpsl
push
std
add
push
add
scas
insb
call
nop
addr16
push
mov
aam
mov
sub
add
add
push
std
xchg
push
lock
in
loopne
push
push
push
inc
lea
add
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
in
cmpl
pop
jnp
add
lcall
lods
add
xor
shll
outsl
addl
add
out
lea
mov
gs
add
fbstp
ljmp
mov
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
call
mov
add
loope
nop
addl
xchg
movsb
rolb
pushf
jmp
add
pop
add
add
add
js
add
pushf
int
add
call
add
addr16
enter
jl
push
ljmp
xchg
pusha
add
jns
push
push
mov
in
in
lcall
push
cmp
ljmp
inc
out
stos
ror
pop
mov
push
push
push
call
xchg
mov
int
lcall
push
out
add
add
xchg
add
hlt
icebp
add
imul
imul
add
lcall
ljmp
pop
js
lea
shl
pop
add
push
lea
push
call
add
ret
add
xlat
mov
add
ret
add
add
shl
add
pusha
add
add
jb
cmpsl
stos
jnp
add
add
jo
add
fldt
mov
testb
add
loop
test
add
add
add
add
outsl
add
clc
pop
pushl
push
add
rol
not
pop
popl
push
shr
sub
ror
pop
mov
push
push
push
call
xchg
cli
cwtl
scas
add
mov
add
js
xchg
fidivl
add
mov
xchg
add
xchg
lahf
add
add
int
add
clc
add
imul
add
add
add
add
movsb
loopne
add
out
pop
add
data16
mov
hlt
pop
add
xor
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
fwait
add
repnz
stos
add
add
mov
fsub
add
out
fwait
add
xchg
push
outsl
lret
add
jmp
add
int
add
fcompl
adc
mov
push
push
call
nop
add
add
addb
aam
mov
add
call
mov
add
add
clc
lcall
shll
rclb
push
lea
push
lea
push
push
push
push
push
call
je
xchg
add
add
add
js
mov
add
xchg
add
add
loope
fcomps
ljmp
aam
fiadds
sub
pop
rol
push
shr
dec
add
pop
nop
push
push
push
push
call
add
aad
add
xchg
add
mov
filds
add
shrb
enter
cli
push
add
lea
leave
add
push
leave
fildl
icebp
mov
add
lret
add
faddl
add
pop
fidivrl
mov
add
sub
pop
nop
push
push
push
lea
push
call
add
out
add
add
lods
shr
cmc
out
pop
divb
pop
je
fdivs
loopne
iret
pop
pop
bound
add
xchg
add
popf
jae
stos
out
push
imul
arpl
add
in
lock
lcall
add
xor
pop
nop
inc
push
shl
lea
sub
rol
pop
nop
push
ror
pop
nop
push
add
shr
pop
cmpb
jne
push
push
push
lea
push
lea
push
call
mov
add
add
jae
add
cld
add
xchg
lcall
ljmp
fildl
scas
add
test
add
add
fcmove
add
add
addb
js
imul
icebp
lretw
xchg
in
in
pop
add
push
shl
xor
dec
sub
pop
nop
nop
push
shr
pop
cmp
je
nop
push
push
push
push
push
push
lea
push
call
add
add
xchg
xchg
add
add
dec
jae
add
add
add
add
xchg
add
jno
sub
pop
nop
push
sub
xor
add
add
pop
inc
push
push
push
lea
push
push
push
call
mov
shr
jae
out
bound
stos
cwtl
mov
out
add
into
add
add
mov
pop
add
add
test
add
sub
pop
nop
nop
push
not
pop
cmp
jb
xor
push
ror
inc
pop
jmp
mov
push
push
push
push
call
mov
add
fldt
out
jb
aad
aam
lahf
lods
testb
imul
add
pop
scas
movsl
fcmovb
jne
flds
ljmp
add
rcll
push
push
push
call
mov
sahf
add
xchg
mov
add
bound
jbe
int
test
out
cmc
add
imul
add
icebp
add
jbe
mov
add
aam
add
add
jbe
movsl
mov
iret
add
stos
jne
add
add
lcall
mov
jb
lea
push
push
push
push
lea
push
push
call
add
xchg
mov
add
mov
in
xchg
test
cli
xlat
mov
lahf
add
add
add
mov
loope
in
in
mov
push
not
add
inc
xor
pop
add
mov
push
push
push
call
push
mov
mov
popw
jl
add
add
add
pop
loopne
cmpsb
lods
popf
mov
icebp
add
xlat
in
push
test
xchg
loope
add
mov
add
sbb
jmp
fcmovb
sub
pop
xor
push
shl
add
sub
pop
xor
push
push
call
mov
mov
add
clc
fs
push
test
mov
lret
lods
add
add
add
out
iret
pop
loope
scas
pop
iret
rolb
int3
cmc
fidivs
loope
int
mov
sub
pop
shl
push
xor
xor
ror
pop
xor
push
push
push
push
push
push
call
mov
fldl
add
jecxz
add
add
add
add
jns
add
test
add
roll
add
lock
ljmp
cltd
add
xchg
test
sub
pop
shl
xor
push
lea
push
push
lea
push
call
mov
movsl
mov
mov
mov
add
add
add
mov
mov
pop
mov
ljmp
lock
push
bnd
xchg
mov
push
add
mov
lcall
loope
xor
push
push
lea
push
push
push
push
push
call
add
add
mov
sbbl
imul
add
add
add
add
call
add
pop
mov
xlat
push
add
pop
add
aad
fsubl
testl
pop
add
sub
pop
mov
push
not
pop
add
pop
push
push
push
lea
push
push
lea
push
call
mov
add
addb
add
add
mov
push
add
jne
in
int
jbe
pop
mov
sarl
add
xor
add
add
loope
add
add
lods
add
add
add
cltd
add
ffree
add
xchg
ja
add
lcall
push
push
push
push
push
push
lea
push
push
call
add
add
mov
add
std
add
jo
subl
add
jmp
add
pop
add
mov
mov
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
fists
add
add
add
mov
lds
add
subb
pushf
add
in
movsl
je
test
add
je
je
add
mov
icebp
fldt
out
pusha
xchg
add
jno
in
add
movb
jnp
add
rolb
add
cwtl
add
push
push
push
lea
push
call
mov
mov
mov
shll
out
mov
pop
popa
jle
jmp
cltd
mov
add
faddl
mov
shlb
stos
out
add
fiadds
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
mov
add
push
imul
fs
jne
push
add
scas
add
xchg
bound
lcall
or
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
je
arpl
flds
bound
scas
xchg
add
add
in
add
add
add
add
ret
add
fildl
add
lcall
push
lea
push
push
lea
push
push
push
call
out
cmpsb
out
fldl
jae
add
add
add
pushf
mov
add
add
push
mov
xchg
aad
add
pop
mov
pop
mov
and
add
add
add
not
fcom
add
pop
lcall
add
push
sub
pop
mov
push
push
push
push
push
push
call
add
xchg
add
add
jae
pop
sub
enter
add
movsb
int3
add
add
add
mov
into
add
add
add
xchg
jp
add
fwait
add
pop
fildl
sub
pop
push
push
push
push
push
push
push
call
mov
push
add
add
mov
add
jne
push
mov
orl
add
add
lcall
mov
push
lea
shl
shl
pop
mov
push
lea
inc
add
shr
pop
mov
test
je
push
lea
shl
shl
ror
pop
mov
push
shl
pop
test
je
push
inc
add
pop
mov
push
xor
inc
shl
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
addl
pop
mov
add
push
incb
push
pop
mov
add
add
add
add
mov
test
jmp
mov
jno
add
pop
add
fwait
push
in
jo
add
add
jnp
hlt
xchg
fadd
mov
sahf
jp
cld
insb
icebp
mov
shll
fcomps
pop
push
not
xor
not
ror
pop
inc
push
lea
push
push
lea
push
push
push
call
add
ja
add
mov
add
add
imull
add
mov
mov
push
add
xchg
in
xchg
push
mov
frstor
testl
je
push
lea
push
call
xchg
fwait
jge
scas
cli
mov
add
add
jge
jmp
add
xchg
xchg
scas
test
add
mov
xchg
add
mov
popa
jecxz
lods
push
in
in
in
addl
add
fistl
enter
mov
addb
pop
test
je
push
pop
mov
push
lea
push
push
push
push
push
call
nop
add
jo
add
cmpsb
jbe
add
add
test
add
lock
add
jo
add
add
mov
sub
pop
inc
push
push
push
push
push
lea
push
push
push
call
cmpsb
icebp
fadds
add
push
add
in
jne
add
xchg
fildl
stc
data16
stos
lea
mov
ret
jb
jl
add
icebp
add
in
shll
pop
cmp
je
test
jne
push
push
push
lea
push
push
call
addb
cmc
xchg
test
add
insb
mov
lahf
add
in
loope
mov
add
nop
add
lods
add
jns
insb
lahf
xchg
add
add
pop
icebp
add
sub
pop
xor
push
push
call
push
jmp
add
fcoms
mov
faddp
gs
add
add
add
add
shr
mov
jne
mov
add
loop
repnz
test
push
push
add
in
add
clc
pop
pop
push
push
call
adc
xchg
sahf
add
test
pop
loope
insb
add
in
addl
lret
add
bound
int3
nop
add
loope
add
ret
add
add
scas
xchg
cli
add
add
pushf
out
fildll
idivl
add
sub
pop
pop
push
inc
pop
pop
pop
push
xor
inc
pop
leave
ret
push
lea
not
sub
pop
mov
push
lea
lea
inc
pop
inc
push
push
lea
push
push
lea
push
push
push
push
call
add
add
les
jno
jae
add
add
add
add
mov
in
mov
add
movsb
out
add
xchg
push
mov
arpl
add
mov
mov
add
add
mov
movsb
test
sub
pop
cmp
jne
push
add
rol
sub
sub
pop
lea
push
sub
pop
mov
test
je
push
push
lea
push
push
call
jno
ret
add
add
add
jae
lods
arpl
mov
cmpl
mov
pop
imul
add
mov
popa
jb
mov
ret
add
add
cld
add
mov
in
lock
mov
add
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
add
int3
push
insb
pop
ror
add
add
mov
add
jle
fsubr
shl
pop
add
add
mov
mov
jp
in
fcomps
loopne
test
decl
add
pop
test
je
push
lea
push
push
push
push
call
add
add
add
addl
add
out
add
jne
mov
add
jnp
test
lea
xchg
test
cmpsl
stc
mov
add
add
add
xchg
add
mov
lcall
mov
aam
jae
mov
sub
pop
mov
push
sub
pop
add
push
xor
sub
pop
cmp
je
push
ror
pop
jmp
push
push
push
push
push
push
push
push
call
int3
scas
jecxz
mov
popf
mov
sarl
pop
add
add
add
add
sti
add
out
add
add
add
addl
roll
add
xlat
add
adcl
add
add
mov
jmp
int3
data16
jl
push
test
icebp
add
add
movsb
addl
pop
push
shl
pop
pop
pop
push
add
shl
sub
rol
pop
pop
leave
push
push
call
scas
test
mov
add
add
jmp
bound
out
loope
outsl
add
push
add
mov
enter
data16
add
incb
out
je
out
movsl
add
sahf
jge
mov
int3
jo
jge
add
std
sub
pop
ret
lea
push
push
push
call
pop
mov
test
addr16
scas
jbe
pop
ljmp
add
fildl
xchg
shlb
shr
add
imul
pop
jae
add
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
push
call
loopne
mov
filds
add
into
add
in
mov
add
jmp
enter
outsl
add
decb
in
mov
mov
data16
mov
pop
mov
bound
mov
call
hlt
add
add
add
add
test
sub
pop
pop
push
push
lea
push
call
imul
add
bound
test
insb
jns
subl
pop
add
add
stos
xchg
out
add
add
push
mov
add
add
in
add
mov
mov
subb
imul
add
mov
lcall
push
xor
pop
pop
leave
push
rol
rol
pop
ret
push
push
push
push
lea
push
push
push
lea
push
push
call
jp
loopne
movsb
nop
filds
add
xorb
add
jne
fadds
mov
add
add
pushf
mov
jno
add
mov
jnp
add
scas
test
push
gs
mov
mov
mov
out
add
sub
pop
mov
push
pop
pop
push
ror
dec
rol
pop
pop
push
shl
inc
rol
sub
pop
pop
push
sub
lea
ror
pop
pop
push
push
push
push
push
push
push
push
call
add
add
out
add
call
add
add
cld
add
pop
add
lret
int3
int
mov
fdivrs
mov
add
stc
add
shl
add
in
loopne
lcall
push
lea
xor
sub
pop
ret
test
jae
inc
pusha
jae
test
jo
test
push
and
push
and
jae
test
jae
in
mov
add
lock
out
or
popf
push
sbb
or
jl
and
pop
cs
jge
out
lret
pop
jbe
pop
dec
jae
jb
jmp
xchg
mov
std
xor
fyl2x
cmp
in
adcb
pop
add
in
cmc
js
jge
lods
jo
insb
push
jno
lods
push
ja
call
lock
fidivrs
inc
dec
adc
jecxz
inc
data16
jecxz
jno
inc
pop
sbb
add
dec
je
xlat
jecxz
push
aas
fs
and
jmp
jne
shll
leave
inc
in
ret
fcmovne
insl
lock
imul
dec
stos
stos
arpl
mov
adc
sti
push
mov
xchg
dec
movsl
imul
jns
jle
cmp
xchg
lods
or
lret
aas
inc
enter
jns
push
popl
into
and
in
fwait
jp
sbb
lahf
xchg
adc
inc
shrb
hlt
ja
and
mov
sub
mov
cmp
out
and
enter
mov
inc
sbb
push
aas
mov
dec
inc
repz
sub
into
ficompl
dec
in
mov
stc
je
dec
sbb
iret
out
and
cmpsl
inc
lahf
ljmp
mov
subb
and
lds
orb
inc
ret
push
mov
xchg
and
outsb
sub
adc
popa
sahf
adc
push
jbe
sbb
sub
lods
or
jg
jp
mov
sub
mov
and
scas
test
adc
jne
pusha
pushl
xor
inc
dec
dec
push
or
notb
insl
cmpl
aaa
outsl
pop
fwait
xchg
sub
jno
adc
aad
cld
add
aad
sbb
and
jae
cli
push
mov
cld
lds
adc
shlb
loop
cmp
les
cmpsl
push
dec
ret
cmpsl
arpl
lods
cltd
push
push
dec
cmp
add
and
xor
xchg
mov
mov
out
in
adc
std
or
clc
fstpl
add
xchg
scas
lock
xchg
dec
ffree
mov
xchg
xor
pop
inc
aad
or
inc
cmp
adc
sub
xor
sbbl
mov
dec
loop
loop
push
or
popa
and
fcompl
mov
jecxz
movsb
jge
jne
icebp
jno
cmpsb
inc
cmp
mov
jl
pop
jecxz
xchg
jl
sub
mov
inc
mov
loop
mov
pop
mov
dec
sub
lret
mov
sbb
test
jmp
inc
push
in
divl
fs
mov
cltd
shl
data16
sbb
popa
addl
sbb
aam
clc
ja
subl
dec
mov
xor
mov
lcall
aam
rcl
inc
imul
sub
insb
icebp
scas
push
dec
aas
adc
popa
mov
or
fcmovnu
and
int3
not
push
or
sbb
into
ss
fst
xchg
mov
pop
push
insl
mov
xor
add
adc
mov
aaa
cmc
dec
and
push
cmpsb
cld
movsb
aad
iret
je
cwtl
aad
jecxz
mov
dec
mov
pop
xchg
jge
mov
jae
es
dec
ret
test
sub
int3
aaa
or
push
jae
dec
fldt
jge
andl
cltd
sub
push
dec
or
pushf
outsb
aad
sti
test
sbb
and
inc
mov
ljmp
in
js
add
mov
aam
fldz
dec
jl
sub
loopew
xor
popa
imul
aam
push
pop
or
js
shll
cmp
lcall
fists
mov
imul
pop
sub
aam
sub
sbb
pop
es
jecxz
gs
or
sub
dec
cmp
lods
inc
loope
cltd
sbb
cmpsl
dec
and
xchg
gs
cmpsb
jbe
cmp
mov
test
mov
dec
xchg
xchg
mov
xchg
popf
gs
push
lahf
jl
sub
sbb
mov
adc
shll
leave
and
push
enter
lock
dec
push
inc
arpl
aam
mov
sbb
adc
mov
dec
sub
scas
sbb
daa
push
ljmp
iret
dec
pop
lock
and
or
outsl
push
popf
stos
mov
fstl
ret
imul
jecxz
popa
iret
xor
add
je
test
out
ds
xchg
adc
push
pop
rcrl
jnp
cmp
add
mov
orl
pop
in
lret
mov
xor
gs
sahf
insl
jle
lret
ror
rcrb
out
jmp
out
dec
mov
mov
lea
mov
enter
pop
mov
call
adc
push
lods
add
push
out
outsl
inc
mov
lock
int3
cwtl
popf
and
sbb
add
pop
ret
adc
inc
shll
push
ret
ficomps
fstps
loopne
xchg
loopne
jp
lods
test
imul
leave
and
cs
mov
jl
mov
pop
xor
xchg
cs
pop
lahf
mov
inc
and
scas
xor
inc
xchg
movsb
jp
mov
jbe
dec
and
push
out
ret
fcmovbe
adc
fnsave
out
es
out
mov
dec
jecxz
enter
cwtl
out
loopne
jne
loope
mov
int
and
dec
pop
or
frstor
add
push
jbe
dec
jge
mov
bound
push
push
fldt
fcmovnu
stos
dec
jmp
stos
ljmp
jne
lret
sbb
push
dec
jge
lods
push
jne
jmp
cmp
rep
or
sub
pop
cltd
cmp
xchg
shlb
jecxz,pn
fwait
imul
xchg
movsb
xchg
clc
leave
clc
mov
jecxz
pop
ljmp
add
or
cli
jbe
out
inc
fsubp
jle
cmp
jb
mov
push
jmp
push
and
stc
lock
or
jns
cmp
in
push
mov
or
add
pop
idivb
cmp
cli
cmp
sub
insl
popa
aaa
mov
jg
pop
stc
cmp
pop
arpl
mov
sbb
roll
fistl
insb
daa
adc
mov
icebp
xchg
fbstp
adc
orl
fldcw
cmp
cli
daa
jecxz
ss
stos
or
sbb
cmp
std
test
push
out
sbb
arpl
orl
clc
jp
lret
es
dec
xchg
inc
add
mov
pop
adc
pop
cmp
add
xchg
jb
or
mov
dec
inc
sbb
xchg
bound
flds
iret
repnz
sbb
xchg
and
fistpl
adc
xor
push
push
jo
xor
xchg
inc
xor
dec
fsubl
push
ljmp
and
push
cli
jl
mov
cli
push
sub
pop
fdivl
sbbb
pop
cmp
cmc
xchg
pop
adc
insl
addl
push
lret
sub
adc
cmpsb
stos
and
mov
mov
pop
adc
int3
inc
xchg
sub
jbe
ds
stos
shrl
jl
mov
pop
xchg
sub
stos
pushf
mov
stc
pop
add
cmc
negl
xor
cmp
mov
test
pop
sahf
js
mov
jb
out
lcall
out
mov
stos
xchg
test
mov
rclb
add
sarl
inc
test
cmp
idivl
loopne
push
stos
lret
jmp
aaa
sub
and
ss
mov
std
adc
je
mov
cmp
xchg
test
cld
sub
xorb
or
shrb
icebp
rcr
sahf
push
std
push
inc
mov
pop
sbb
inc
mov
sub
fcomi
xor
mov
bnd
mov
pop
sbbl
dec
cld
mov
xchg
jno
xor
dec
scas
out
mov
push
or
sbb
scas
mov
xor
lret
insb
and
mov
stos
push
daa
pop
roll
jl
jp
xchg
sbb
push
dec
jmp
push
ret
mov
mov
adc
push
popa
ja
push
xchg
std
or
pop
nop
or
pop
lret
or
xchg
or
lahf
pop
xor
sub
sub
test
jecxz
push
sub
std
outsb
push
ljmp
sub
imul
sbb
push
mov
xchg
iret
dec
pushf
push
xor
push
in
sub
in
notl
es
mov
leave
sub
jg
mov
test
int
and
lods
test
in
adc
add
fstpl
shll
in
dec
jo
cmpb
mov
test
loop
popa
sub
stos
loopne
stc
sub
mov
in
xchg
leave
div
mov
mov
mov
out
sbb
or
and
and
pop
mov
xor
mov
cli
pop
mov
adc
clc
addb
dec
push
inc
add
mov
sarb
mov
sbb
pop
sbb
sub
xchg
sysret
es
xchg
sbb
cltd
out
enter
out
mov
push
inc
push
xchg
mov
add
pop
fildll
cmp
sbb
pop
jns
push
xchg
mov
and
pop
cmp
and
test
cmc
mov
mov
sub
cmp
ja
loop
lret
xchg
xchg
add
pop
sub
dec
mov
je
iret
inc
daa
mov
cwtl
and
dec
test
das
mov
into
addl
pushf
movsl
cmpl
jp
stos
aaa
leave
push
jns
inc
lret
adc
inc
mov
dec
xchg
jo
mov
mov
bound
into
sub
push
adc
cld
adc
and
outsb
cmp
inc
xchg
sub
lock
jo
cld
jo
sub
or
adc
mov
push
and
stos
pop
adc
bnd
and
push
xchg
es
xor
cmc
cmp
mov
push
add
lcall
sti
mov
cmove
sbb
mov
test
es
jg
add
ret
fwait
cs
sub
dec
cmpsl
push
mov
xchg
xchg
cmp
aaa
xchg
stc
jnp
cmp
push
dec
scas
or
data16
xchg
cs
js
jns
lahf
hlt
cmp
das
or
in
fildl
xchg
push
in
cltd
mov
xor
dec
push
jbe
cmpb
xor
adc
cmc
xchg
mov
movsb
mov
jnp
lods
cmpsb
jno
mov
xchg
xor
outsb
mov
dec
push
pop
sar
push
rol
and
and
stos
call
adc
cs
pop
shlb
orb
mov
push
lahf
and
cmpsb
mov
mov
xor
sbb
mov
leave
mov
pusha
mov
xor
nopl
sbb
jo
fstps
or
add
and
cmp
mov
dec
ja
fs
out
dec
cmp
mov
roll
clc
pop
sub
sbbl
or
add
sub
dec
mov
das
loop
iret
mov
insb
es
inc
or
loop
adc
push
les
mov
jbe
movsl
stos
mov
xchg
loopne
xchg
jmp
mov
add
push
cmc
pop
mov
pop
andb
inc
push
xchg
sbb
ss
call
inc
mov
xchg
pop
dec
pushf
mov
pushf
ficomps
ret
or
imul
ja
xchg
outsl
imul
pop
outsl
dec
fdivrl
add
push
test
pop
mov
xchg
mov
add
and
icebp
adc
xchg
cmp
sub
jnp
testb
pop
aam
cmp
xchg
ja
and
sbb
sbb
orl
test
sbb
test
fiadds
jns
je
mov
adc
aam
adc
add
ja
mov
mov
or
jbe
in
jmp
shl
outsb
subb
jecxz
stos
push
lock
test
into
xchg
jg
out
fidivs
mov
jns
sbb
int
mov
test
mov
cmp
xorl
push
or
pushf
xor
mov
add
mov
aad
dec
outsl
je
filds
movsb
mov
cli
add
or
jl
cmp
gs
popf
mov
and
xorl
mov
jnp
push
into
aas
and
jmp
xor
mov
addr16
loopne
loope
inc
mov
bound
xor
or
movsb
shlb
xchg
sbb
outsb
ds
lahf
inc
pop
dec
cmp
test
loopne
push
dec
inc
pop
xor
push
in
loop
xor
inc
xchg
fcmovbe
jmp
or
andl
les
out
pop
fisttpll
push
pop
shrl
inc
call
jmp
adc
push
push
jb
or
sub
stos
sbb
add
mov
xor
mov
inc
in
stc
jmp
lods
sbb
and
adc
xlat
repnz
movsb
add
cmp
cmp
xchg
adc
lock
jno
fistpl
jbe
and
pop
lret
xchg
arpl
add
xchg
comiss
mov
sti
or
adc
mov
adc
ljmp
xchg
push
cmp
sbb
and
das
or
fstpl
push
flds
std
clc
push
jno
outsb
fs
adc
or
out
push
daa
cmp
ror
jno
jl
cwtl
push
out
fimuls
xchg
fidivl
push
leave
fs
jmp
repnz
mov
sbb
sbb
roll
xor
and
sbb
mov
lcall
mov
pop
mov
jnp
std
notb
dec
sbb
or
negb
jge
xchg
test
fdivp
xchg
mov
in
dec
mov
mov
or
dec
inc
fwait
scas
call
or
scas
mov
add
jno
cli
into
jg
enter
addb
lret
jb
mov
jae
fadd
push
mov
mov
repz
xor
in
cmpsl
std
clc
and
aad
dec
pushf
or
ret
out
inc
mov
enter
xor
mov
jae
jbe
mov
fwait
or
push
mov
jmp
daa
sub
ds
mov
test
aam
fstl
mov
and
std
aam
or
popf
hlt
xorl
or
cmpsb
test
das
inc
jp
ficoms
ret
mov
mov
loop
test
ljmp
shr
out
hlt
or
pop
in
xorb
sub
stc
xor
testb
mov
and
loop,pt
cmpsl
sar
rcrb
test
pop
mov
insl
aam
outsb
mov
sub
mov
addr16
or
push
arpl
clc
cmc
sbb
lods
loopne
push
push
jmp
test
push
jmp
push
dec
and
push
mov
fs
lds
insb
push
inc
xchg
mov
cmp
mov
xchg
mov
xchg
pop
insb
add
jbe
aam
fmull
out
movsl
sahf
rolb
loopne
inc
push
aaa
add
xor
sub
insl
cmp
loope
sbb
outsb
mov
lock
mov
test
incb
jg
addr16
bswap
mov
push
imull
out
or
stc
mov
cli
xchg
pop
in
loopne
stos
adc
and
cmp
pop
or
ja
pop
mov
inc
nop
push
movsb
cmpsl
jmp
data16
sub
orl
enter
push
dec
mov
adc
or
into
xor
loope
cmp
add
pop
int3
rep
das
mov
xor
sub
frstor
xor
sarl
and
sbb
inc
cwtl
rcrl
ljmp
dec
lods
hlt
bound
jb
and
stos
stc
sbbb
in
cmp
lods
mov
push
roll
pop
mov
sbb
cmp
addr16
gs
mov
xor
jae
inc
jo
test
fistps
jns,pt
push
lods
dec
test
cmp
hlt
test
fidivrl
loope
xchg
mov
adc
and
es
cmovle
jne,pn
fildl
jg
in
xchg
cwtl
mov
push
add
sub
shlb
add
push
sti
call
mov
hlt
cwtl
fucom
fwait
out
inc
lcall
fcoml
clc
cmp
push
js
jle
test
bound
ret
pop
lds
icebp
insb
pop
int
jo
in
test
jne
lods
push
rorl
sbb
cmp
inc
repnz
mov
mov
insb
pop
lret
out
aam
negb
xor
fs
icebp
stc
sbb
rcll
ss
mov
das
addl
xor
cmp
jp
and
push
pushf
inc
sarl
movsl
jmp
jge
adc
inc
mov
xchg
dec
sahf
inc
mov
pop
fstl
movlps
pop
or
add
lods
cmp
fcomp
test
cs
jmp
sub
cwtl
pop
xchg
mov
pusha
lcall
divl
or
sub
fistpll
lahf
aas
lahf
jge
xor
call
jl
jne
jb
mov
push
rcrl
loopne
add
jmp
push
sub
clc
or
push
mov
mov
insb
adc
mov
call
dec
fcmove
xchg
sub
sahf
mov
mov
ss
or
out
fcompl
rep
pop
shlb
lret
xor
clc
hlt
mov
mov
gs
rcrl
push
clc
pop
xchg
add
lods
xlat
fs
ret
out
in
ret
sbb
dec
pop
sub
mov
inc
sbb
in
adc
mov
outsb
movl
lods
ret
or
cmp
fldt
xor
add
cs
mov
xchg
cmpsb
mov
jno
fnstcw
mov
add
into
add
push
and
popf
adc
or
mov
cld
mov
pushf
xchg
out
sbb
js
aad
sub
push
pop
mov
adc
iret
pop
mov
sbb
cmpsb
out
mov
sarb
mov
arpl
adc
out
add
xor
sbb
inc
mov
inc
cmc
sub
adc
inc
cmp
dec
dec
adc
mov
jb
test
notb
push
sbb
xor
adc
cmpsb
add
inc
mov
xchg
pop
imul
cmpsl
insb
pop
mov
pop
mov
xchg
dec
aas
mov
add
mov
inc
sub
icebp
sub
lahf
mov
stc
pop
fistpl
lds
push
push
jo
cmp
scas
dec
xchg
data16
pop
scas
mov
ret
lcall
cmpsl
pop
scas
inc
lea
sub
dec
adc
and
dec
data16
mov
addl
push
aaa
testb
cwtl
add
shlb
or
jl
sub
mov
pop
xor
jne
sbb
dec
xor
pushf
je
dec
push
idiv
aam
dec
sub
push
cmc
fbld
pmullw
pop
add
sub
jg
aaa
imul
xchg
call
xor
sbb
int
lock
mov
loope
pop
push
je
and
mov
popf
ljmp
stos
sar
mov
push
bound
out
push
inc
jae
js
popf
rcrl
sbb
mov
arpl
into
xor
mov
or
add
mov
dec
push
js
sahf
pop
cs
dec
xlat
dec
scas
bound
pop
sbb
insl
xlat
mov
mov
mov
xchg
jl
add
iret
mov
das
and
xchg
popa
movb
fistps
mov
jns
mov
add
adc
sbb
cmp
inc
data16
or
sbb
mov
add
out
xor
pop
pop
mov
mov
push
pop
or
mov
into
pop
ja
dec
pusha
es
arpl
aad
lahf
lret
add
repz
out
cmp
imul
mov
pop
adc
iret
mov
movsb
dec
sbb
jno
add
test
cmp
push
jl
adc
sub
xchg
mov
shrb
nop
pop
or
sbb
mov
pop
and
in
mov
sbb
out
jae
xor
outsb
mov
cmpsb
enter
ljmp
stc
cmp
mov
mov
mov
shlb
in
jg
push
sahf
cltd
in
mov
test
popa
shlb
fs
je
or
sbb
add
xchg
in
fstl
hlt
mov
dec
pop
push
iret
adc
fidivrs
cmp
js,pn
jo
xchg
sbb
fs
lds
xchg
add
inc
loopne
gs
adc
andl
mov
pushl
push
dec
fistl
mov
xor
sub
mov
cs
or
out
sbb
mov
sti
adc
lahf
pop
xchg
dec
loopne
xchg
js
shrl
or
bound
das
cmp
jmp
outsb
sbb
lcall
pop
mov
mov
pop
mov
jp
jno
xor
pop
inc
xchg
dec
sub
mov
movsb
std
adc
cmpsb
push
push
icebp
mov
adc
adc
xchg
sub
cmpl
test
jo
gs
xor
push
jge
push
pop
cmp
adc
adcb
imul
and
mov
jmp
xchg
outsb
jno
sbb
cmp
pop
mov
bound
movsl
cmp
mov
xchg
mov
movsb
inc
xchg
mov
cmp
cld
lret
outsb
cmp
inc
or
mov
test
mov
test
arpl
adc
jae
pop
js
out
sub
addr16
pop
aaa
or
mov
rcrl
std
popa
popf
sub
cmove
inc
xor
repnz
adc
xchg
cmpsb
insb
ret
aam
xchg
xchg
hlt
loop
sbb
jns
push
jp
push
cmovno
mov
jb
rorb
and
popf
push
mov
mov
xchg
frstor
mov
pop
in
add
aaa
fdivr
les
jb
cmp
rolb
mov
sbb
cld
xchg
cmp
es
mov
xor
test
repz
frstor
and
xchg
mov
mov
in
ret
neg
stos
mov
cltd
lret
lods
inc
cld
fcomps
hlt
lret
movsb
mov
dec
xchg
mov
nop
sbb
cmp
shrl
mov
sbb
mov
loope
cmp
jnp
xchg
jae
sbb
je
xlat
or
mov
jno
scas
add
xor
push
lret
xor
adc
add
repz
xchg
test
scas
out
ljmp
mov
mov
pop
jecxz
mov
out
or
ds
cmp
sahf
fiadds
mov
outsb
popa
pop
aaa
lcall
inc
aas
mov
shrl
ss
mov
insl
inc
jno
cltd
or
push
lahf
ds
mov
sub
xchg
push
jnp
jo
cmp
sarb
dec
inc
inc
icebp
jecxz
cmp
loop
mov
pop
mov
pop
push
xchg
pop
sarl
jl
imul
jp
pusha
test
jg
subb
in
inc
xor
and
xchg
daa
sub
je
dec
adc
cmpsb
jge
cmpsl
pop
push
and
sbb
inc
adc
xlat
in
cmp
inc
add
sub
cmp
sub
and
repnz
ss
cmp
sub
ss
stos
mov
adc
mov
shll
movsb
fsubs
aaa
mov
add
fdiv
mov
and
or
sub
hlt
or
cmp
cwtl
push
jp
fistpll
fstpt
jbe
iret
pusha
add
xchg
and
mov
push
stos
leave
cmp
xlat
popa
push
insl
popf
inc
ss
fimull
scas
mov
in
dec
divl
lahf
adc
repnz
cmp
push
arpl
xor
jnp
jmp
or
xlat
std
mov
jle
lds
sub
mov
dec
push
mov
sti
push
push
mov
cmc
push
insl
cwtl
xor
add
ja
pop
test
jo
jl
dec
or
sbb
cltd
jne
jg
mov
sbb
test
lcall
stos
cmp
add
inc
aaa
dec
mov
jne,pn
mov
je
fninit
imul
inc
xchg
popf
inc
aad
int
jnp
fisttpl
jnp
mov
or
les
ljmp
sbb
mov
test
dec
pusha
dec
lahf
mov
ret
xor
test
lret
xorb
add
decl
das
mov
mov
clc
mov
nop
fisttpll
scas
loope
mov
push
and
sbb
mov
in
call
orb
arpl
xor
inc
in
jb
cmp
add
cs
les
negb
lret
scas
jne
pop
mov
stos
inc
hlt
das
pop
movsl
or
iret
adc
jbe
inc
sub
cmp
jno
inc
push
cmp
js
into
nop
push
add
sbb
les
aaa
test
jg
shlb
stc
pop
ss
mov
cmp
loopne
mov
aam
push
mov
cmp
sub
adc
ss
ja
jl
movsl
rcrb
icebp
ret
inc
das
mov
rolb
xor
mov
push
negb
dec
pop
jne
mov
ds
stc
or
cltd
shl
mov
popa
sub
jns
add
testl
in
stos
dec
jmp
test
and
mov
outsb
xchg
ljmp
cmc
cmpsl
out
inc
mov
jno
imul
iret
sarl
xor
int3
mov
mov
pop
xchg
xchg
movsb
xor
and
test
lods
mov
lods
test
and
lock
lods
data16
sub
das
mov
pop
outsb
push
mov
lahf
mov
popa
add
inc
or
mov
es
and
aas
mov
aas
shl
neg
jbe
sbb
pop
add
pop
cli
mov
loopne
pop
outsb
xor
std
add
enter
sub
js
jle
xchg
cwtl
mov
jmp
adc
fwait
cmpsl
in
sarb
jle
xchg
clc
sarb
fistpl
add
in
call
xor
xchg
xor
sbb
push
dec
lret
test
dec
into
xor
sub
rolb
mov
and
sbbl
fadd
js
fs
and
andl
inc
dec
mov
int3
dec
pcmpeqb
ret
enter
pop
enter
dec
sub
ss
mov
ss
xor
outsb
out
mov
imul
addb
add
pop
xor
cmp
mov
out
cmc
push
cmpsb
sarb
xor
and
icebp
mov
jmp
je
dec
roll
fldt
das
mov
mov
jnp
mov
push
adc
sbb
les
mov
push
ljmp
jecxz
int3
bound
jns
pop
add
mov
clc
and
sub
stc
add
mov
jnp
xchg
mov
notl
push
add
movsb
insl
adc
roll
pop
repz
inc
rol
inc
mov
aam
dec
xchg
jo
xor
mov
and
adc
icebp
daa
fcoml
sbb
mov
pop
push
repnz
test
mov
or
push
popf
out
xchg
push
fs
inc
xchg
adc
cltd
pop
cwtl
enter
xlat
mov
jnp
xor
test
cmp
in
je
push
push
lcall
enter
mov
ret
dec
loope
push
mov
adc
in
xor
push
leave
jle
mov
xor
add
dec
movsb
xchg
mov
cs
insb
lar
push
mov
pop
lcall
in
pop
inc
enter
sub
and
neg
js
jbe
dec
je
cmpsb
movsl
test
inc
jp
mov
xchg
and
sbb
scas
xchg
and
mov
jo
dec
mul
popf
hlt
sbb
and
inc
jo
or
mov
push
or
dec
rorl
dec
fnsave
leave
xchg
jne
jcxz
pop
push
idiv
adc
imul
or
dec
pop
inc
int3
xchg
lret
test
jmp
add
mov
fisubl
or
add
dec
push
out
fs
pusha
inc
mov
dec
insl
sbb
push
xchg
sub
test
mov
dec
fsubrl
xor
scas
push
mov
adc
out
sub
notb
jmp
test
dec
add
xchg
pop
jg
add
cmpsl
lcall
iret
mov
push
ss
and
pop
in
jl
in
test
dec
push
xor
stos
push
pop
lret
lods
mov
outsl
cwtl
xor
push
fdivrl
push
jp
mov
cli
push
lahf
jbe
pusha
jbe
mov
xchg
mov
mov
imul
idivb
icebp
mov
test
pop
pop
cli
fwait
sub
repz
outsb
jge
jns
adc
mov
pop
sbb
dec
push
adc
leave
mov
mov
xchg
jne
xor
or
int
test
push
jp
jle
lahf
inc
insl
cli
adc
inc
mov
adc
out
ljmp
pop
cmovae
or
mov
cwtl
pop
call
rorl
aad
sub
dec
pushf
fmull
inc
inc
jge
push
sahf
pop
es
add
sti
fcomp
inc
movsb
mov
ja
movsl
jg
jbe
dec
dec
test
jecxz
adc
push
dec
out
pop
out
sarl
or
jo
fists
mov
add
push
adc
mov
lds
mov
insb
xor
and
sub
stos
sarl
ds
xor
mov
rolb
fldpi
adc
adc
push
xor
or
mov
add
rcrl
xchg
cmp
aas
jo
dec
das
fdivl
outsb
xor
push
jmp
xor
data16
enter
rcrl
outsl
iret
int3
and
cmp
imul
push
int3
jecxz
dec
dec
mov
xchg
aad
rorl
cld
pop
imul
js
lds
jo
push
cli
inc
loopnew
js
sub
mov
cmpsl
cmpsl
loopne
pop
mov
sub
jle
mov
push
subb
out
shr
push
fimuls
xor
or
arpl
stos
dec
xor
dec
call
fistl
sbb
sub
mov
adc
imul
repnz
or
mov
insl
stc
sahf
push
enter
into
mov
lds
setno
and
add
mov
mov
xchg
mov
mov
pop
loope
sbb
lods
mov
mov
outsb
lds
test
lret
push
gs
add
inc
int
data16
iret
fsubrs
or
pop
jo
mov
out
mov
adc
mov
dec
leave
fs
cmc
mov
out
test
int
push
movsl
dec
jle
mov
jmp
les
int
xchg
push
inc
pop
sar
pop
inc
xor
push
imul
pop
xchg
add
pop
mov
enter
ss
push
imul
ljmp
cmp
xbegin
add
lea
and
lret
mov
sbb
gs
sbb
rorl
mov
dec
push
mov
das
mov
ret
and
gs
in
adc
push
adc
push
scas
in
push
cli
sub
aas
or
and
bound
or
mov
js
add
imul
jb
ja
stos
les
pop
in
xor
mov
cltd
test
arpl
int
mov
and
add
pop
in
xor
je
fimull
inc
mov
pop
jne
insb
fwait
jb
add
and
addr16
adc
adc
sub
das
cmp
mov
lods
fmuls
outsl
lds
jnp
subb
inc
test
popa
addr16
jmp
pop
hlt
ljmp
out
mov
mov
out
lcall
add
cmp
adc
lret
mov
out
scas
in
pop
leave
cli
cmc
outsb
xchg
mov
negl
test
dec
xchg
cli
sti
icebp
in
test
push
neg
scas
div
cltd
movsb
inc
into
add
mov
in
fwait
xchg
nop
mov
push
hlt
loopne
add
sbb
mov
pop
cmp
dec
sbb
cmp
sbb
fnstsw
add
jae
das
lcall
or
scas
pop
fiaddl
push
sbb
fcompl
imul
cmpsl
mov
mov
jae
ja
pop
lds
ja
or
in
nop
mov
outsl
sbb
dec
sti
dec
insb
insl
call
scas
in
pop
sahf
mov
cltd
xor
pop
out
xor
fs
push
and
iret
cmp
jl
xchg
mov
mov
mov
push
pop
inc
add
mov
out
test
mov
rorl
xor
and
pop
dec
shlb
mov
dec
dec
adc
or
fldt
xorb
push
pop
loope
jbe
mov
les
in
push
cld
add
jbe
icebp
sahf
movsb
jbe
outsb
jbe
test
push
call
mov
into
push
dec
cld
ljmp
std
mov
jl
mov
popf
cld
movsb
fcmovne
arpl
xlat
test
iret
mov
push
inc
dec
imul
mov
repnz
imul
lods
fsts
mov
mov
mov
imul
add
lahf
mov
sbb
push
fnsave
and
dec
loopne
divl
outsb
in
jne
dec
mov
out
enter
add
out
push
scas
xchg
jg
xor
test
mov
out
jo
jns
cmc
gs
mov
fcmovnbe
cltd
mov
lock
out
mov
outsl
fdiv
fdivrl
popa
ss
int3
call
xchg
inc
jb
repz
mov
test
stos
pop
mov
bswap
hlt
jno
icebp
jae
mov
shlb
mov
aas
or
movsl
jno
stos
pop
mov
sub
out
test
or
test
pop
jmp
ljmp
mov
mov
jne
sahf
call
test
shrl
das
in
popf
out
lock
push
xlat
mov
inc
jg
repz
stc
xor
clc
lods
mov
int
dec
hlt
adc
ss
rcrb
jle
movsl
push
sbb
out
stos
jo
icebp
outsl
das
jno
mov
fsubrs
lea
cli
imul
mov
loope
int
or
into
adc
mov
pop
popf
pop
rcl
mov
imul
cld
orb
sbb
adc
scas
jp
decb
sub
cmp
pop
and
test
pop
addr16
push
movsb
into
scas
push
lods
mov
test
inc
dec
sbb
dec
push
imul
mov
mov
jle
lods
pop
loop
xchg
mov
xchg
in
fwait
lds
jmp
in
imul
sub
xlat
cltd
sbb
cmp
inc
jecxz
repnz
dec
or
in
daa
xchg
mov
mov
jecxz
cmpsl
fdivrl
pop
jnp
int
xor
cmp
push
or
lods
pop
add
xchg
in
or
sub
jb
popf
aaa
add
pushf
or
push
mov
sbb
push
idivb
jbe
xlat
lods
add
mov
adc
sub
fmul
add
cltd
pop
popa
loope
incl
mov
aaa
popl
cmp
adc
push
js
out
out
or
add
sub
lret
loop
into
imul
pop
pop
add
pop
mov
and
pop
and
mov
or
adc
mov
adc
repnz
fists
cmp
insl
cmp
es
loopne
loop
into
pop
in
scas
test
cld
sub
mov
addr16
outsl
lea
outsl
sub
loope
scas
jecxz
sbb
sahf
sbb
lods
ljmp
jnp
fcomi
push
addr16
in
mov
je
loopne
pop
clc
xlat
or
dec
fdivrl
sub
iret
sub
mov
add
aaa
xor
sbb
and
dec
and
fsts
pusha
jo
loope
insl
push
mov
jle
push
lods
xor
mov
das
dec
xor
aaa
or
push
mov
out
jnp
push
movsl
inc
fdivs
inc
xor
hlt
add
inc
xor
mov
or
mov
sbb
pop
adc
outsb
mov
int
adc
popf
rcll
js
ficompl
int3
loop
pop
aad
cmp
clc
fnstsw
insb
icebp
sub
icebp
pop
xlat
pop
ret
int3
sub
inc
xchg
adc
inc
mov
rclb
jecxz
les
aam
jl
mov
inc
or
lret
rcrl
sub
mov
repnz
fmuls
cmp
mov
cwtl
rorb
or
cmpsb
adc
shll
jne
outsl
stos
xchg
dec
mov
arpl
pop
test
jo
mov
push
push
mov
outsb
xchg
inc
pop
ds
dec
mov
sub
andb
je
adc
push
rolb
ljmp
out
daa
pop
adc
push
jno
out
push
adc
orl
adc
push
shr
pop
popa
pop
xchg
out
fisttpll
cld
fmuls
stc
leave
jnp
scas
sub
test
ficomps
into
loope
scas
and
jne
imul
cmp
or
push
leave
jmp
push
mov
pop
and
add
iret
or
add
push
mov
std
cmpsb
imul
enter
cmp
arpl
shrb
pop
add
cmc
imul
data16
mov
aaa
popa
dec
mov
stos
divb
inc
pop
cmp
rcll
sub
fwait
aas
and
pushf
jnp
xorl
sbb
aam
arpl
bound
test
mov
pop
xor
popf
mov
mov
fldln2
push
lea
sub
jg
out
jl
gs
mov
add
and
call
or
jae
inc
xchg
movsb
push
ret
shl
sahf
adc
xchg
ljmp
mov
clc
shlb
sub
adcl
push
ficoms
cwtl
mov
fsubp
shl
fsubrs
push
and
imul
mov
jecxz
call
les
outsl
mov
jmp
or
sub
mov
mov
mov
call
aaa
cmpl
sbb
sti
nopl
dec
add
mov
insb
push
lock
inc
push
push
jo
jne
mov
adc
leave
push
jno
push
jg
push
or
cmc
mov
mov
outsl
loopne
fistpl
xor
inc
lods
sti
ret
test
push
add
jae
das
aad
cwtl
ja
idivb
sbb
pushf
in
push
sub
dec
pop
xchg
aad
jp
xor
cld
or
adc
das
inc
call
pushf
aaa
leave
arpl
add
mov
and
sbb
add
and
mov
inc
cmp
lcall
outsl
adcb
or
inc
pop
mov
fstl
scas
mov
lods
pop
mov
inc
cmp
sar
cmp
pop
leave
push
dec
dec
xchg
pushf
and
pusha
xchg
cmp
iret
jns
out
insb
out
clc
add
push
inc
lcall
shl
sbbb
ja
and
add
jns
test
popf
cmpsl
sbb
aam
jg
inc
scas
add
mov
pop
pop
xchg
es
inc
aaa
hlt
mov
dec
ds
aam
pop
fstp
push
das
js
ds
cltd
outsl
mov
xchg
jp
cld
mov
xchg
lock
cmp
aas
ds
iret
jl
xor
dec
mov
jns
sub
sbb
daa
cs
lods
aaa
jge
push
shll
lods
push
mov
pop
les
repz
enter
mov
jl
aad
push
jmp
rorl
sbb
or
kandb
icebp
test
jl
mov
loopne
jle
cmpsb
js
setge
arpl
cld
mov
dec
in
mov
fwait
dec
mov
clc
pop
cwtl
arpl
test
xchg
pop
pop
in
icebp
mov
out
mov
and
gs
ffreep
sbb
dec
xchg
call
pushf
and
lds
outsb
sub
enter
bnd
andl
inc
cmp
cmp
ficomps
ss
jno
loop
push
mov
or
js
add
mov
mov
loop
or
lds
adc
stos
mov
ljmp
shrl
stc
orl
cld
pop
mov
mov
mov
insl
adc
rcll
dec
push
pop
lret
cwtl
gs
cmp
popa
add
adc
aad
sbb
push
mov
cwtl
fsubl
push
js
push
js
ret
jle
loope
inc
lret
int
sbb
or
int3
dec
adc
out
mov
popf
jle
cmc
or
xor
push
hlt
rcll
insb
push
loopne
inc
adc
int3
outsl
cwtl
push
pop
jmp
ds
out
fildll
add
imul
ficomps
pop
mov
sahf
repnz
push
fmuls
lods
mov
lock
imul
lods
fisubrs
dec
xchg
mov
adc
sbb
enter
add
leave
jnp
into
push
repnz
push
or
mov
daa
icebp
ss
pop
sbb
add
movsb
fstp
xlat
fdivl
roll
add
out
lods
add
sub
loope
fwait
in
rolb
pop
push
test
mov
mov
jl
cwtl
mov
out
mov
push
mov
push
pop
addb
jmp
jne
cmp
pop
addr16
jo
hlt
sbb
in
sub
rclb
cmc
pushf
fwait
and
icebp
mov
sbb
insl
mov
pusha
std
mov
mov
insb
ret
ljmp
pop
into
pop
sub
jp
fisubs
fisttps
lret
jns
sub
push
xor
icebp
lret
push
lret
mov
hlt
or
mov
and
mov
repnz
lods
jns
cmpsl
je
inc
xchg
rolb
xchg
call
cmp
adc
sub
push
loop
cwtl
add
cld
in
sub
aad
inc
lcall
or
mov
xchg
xchg
scas
push
shlb
xchg
push
movsb
or
dec
int3
subl
jl
fmuls
nop
fidivs
adc
sub
sub
or
daa
mov
pop
in
jbe
insl
xor
sbb
cwtl
xchg
les
scas
sahf
sarb
pop
lret
push
fisubl
cmpb
fadd
into
dec
ja
pop
inc
or
pop
dec
cs
outsl
daa
jae
mov
jnp
loope
push
or
sub
lea
push
loope
mov
ds
fdivl
ljmp
adc
test
push
jl
sti
in
xchg
ficoml
sahf
in
frstor
fcomps
mov
adc
inc
lcall
jb
xchg
sahf
mov
lods
xchg
enter
xor
sub
inc
inc
mov
pop
cmp
dec
pop
dec
and
jno
out
cwtl
xor
pusha
push
pushf
adc
sbb
test
mov
icebp
icebp
lcall
lahf
fldl
imul
out
nop
xchg
pop
mov
stc
nop
jno
add
adc
add
cmp
xchg
sub
rcrl
out
out
push
mov
jb
mov
xor
fisubl
jo
lahf
pop
cmp
clc
in
adc
int3
push
ror
xor
gs
xor
mov
mov
adc
pop
or
pop
or
adc
mov
fdivl
push
repnz
dec
or
sub
shlb
fcoml
shr
cwtl
cli
or
xchg
es
mov
out
jge
jns
sahf
repnz
fmulp
pop
jg
movsb
xchg
pop
ds
icebp
push
aad
cmp
int3
xor
dec
das
clc
push
cmp
sbbb
xor
mov
mov
cmc
sub
enter
cli
sbb
ja
pop
mov
jl
outsb
or
jnp
and
dec
mov
std
rol
xchg
jle
fs
gs
sub
jg
cli
push
lods
nop
int
arpl
into
cmp
add
clc
arpl
cmp
jno
add
call
pcmpgtd
jne
lcall
fcomps
out
cmpsb
xorl
push
push
mov
jno
inc
neg
into
push
cld
and
mov
or
add
dec
sub
sub
outsb
push
mov
and
sub
xor
out
insb
add
dec
push
mov
push
inc
dec
test
sub
cmc
cmp
xor
mov
pop
in
or
jno
orl
mov
xor
fwait
and
pop
sub
fwait
add
pop
loopne
xchg
lods
mov
and
xchg
js
pop
dec
mov
fwait
sahf
and
shrb
arpl
sbb
xor
push
dec
mov
pop
push
sub
xlat
jns
and
push
jmp
fsubrl
add
loopne
mov
mov
rorb
jg
jmp
jbe
das
xchg
into
push
std
int3
push
das
inc
sbb
cwtl
inc
imul
ljmp
mov
inc
inc
mov
addb
mov
out
scas
nop
inc
mov
cmp
add
xor
push
aaa
dec
out
and
leave
std
pop
mov
push
inc
lods
adc
stc
and
out
and
mov
daa
lds
add
mov
and
xchg
data16
push
negl
leave
inc
push
shlb
sti
das
xor
mov
cmp
mov
adc
sub
lds
sbb
or
jnp
mov
int
fidivrs
add
lcall
sbb
push
push
xchg
divl
int3
lret
mov
add
jb
jae
into
or
jp
arpl
in
popf
iret
icebp
cmp
mov
jns
push
les
pop
aam
or
and
push
icebp
decl
imul
adc
bound
xor
adc
insl
mov
jecxz
aas
sub
jns
inc
dec
out
sbb
std
clc
dec
int3
icebp
jge
sub
add
inc
mov
mov
pop
or
leave
test
add
clc
and
dec
mov
pop
dec
scas
adc
idiv
leave
scas
add
push
cmp
and
out
jmp
enter
pop
and
movsl
cmpsl
test
cmp
xlat
xchg
repz
cmp
or
mov
xchg
imul
test
jp
adc
roll
addb
shrl
out
loop
sahf
test
mov
lea
mov
lds
and
inc
in
mov
and
lock
jle
fdivrs
sarl
push
adcb
fwait
and
dec
dec
jbe
adc
jecxz
jmp
and
cmp
and
mov
out
mov
xorl
or
mov
jnp
push
in
and
mov
repnz
fbld
push
mov
inc
inc
cmp
cltd
jnp
mov
xchg
daa
f2xm1
pop
sub
inc
inc
cmpb
and
inc
in
test
pmaxub
lods
sbb
mov
inc
push
sbb
jae
inc
in
cmp
jmp
lods
dec
mov
cmpsl
loop
adc
cltd
fwait
cltd
in
mov
insb
cmp
imulb
out
sbb
int3
mov
inc
ds
cs
mov
push
cmp
pop
mov
call
mov
mov
iret
sbb
sub
xchg
in
xor
sbb
leave
add
sahf
in
mov
stos
push
jmp
push
inc
push
ljmp
int3
pop
mov
inc
push
and
xor
push
cltd
lret
adc
aad
push
mov
movl
jmp
add
pop
in
cmc
fs
adc
lret
rorl
orl
cmp
sbb
lcall
mov
pop
cli
xor
mov
imul
mov
repnz
out
mov
jmp
jg
adc
sbb
sub
and
sbb
sub
mov
ret
mov
iret
inc
cld
and
inc
imul
pushf
in
push
push
dec
aam
fldenv
ja
andl
mov
jne
or
pop
subb
inc
fsubrs
mov
cmpsb
xchg
cmp
jle
loop
xlat
cs
pop
mov
jne
stos
jmp
adc
push
push
push
mov
sar
push
sub
pop
mov
cmp
xlat
pop
arpl
into
scas
ficoml
fldl
xchg
insb
loop
cmp
dec
lret
jl
xchg
std
jg
in
movb
cmp
jl
mov
xor
or
lods
gs
dec
jns
in
xchg
adc
enter
and
jb
or
push
pop
mov
mov
mov
insb
sbb
cmp
shr
rorl
sbb
aas
lret
sbb
addr16
mov
test
lea
enter
jmp
sar
pop
mov
jecxz
scas
jb
nop
jae
dec
mov
mov
sbb
sub
scas
pop
or
cmpl
push
popa
push
sbb
stc
adc
mov
repz
mov
cli
enter
push
mov
mov
aam
push
adc
xor
push
pop
popa
or
rcr
incl
hlt
xchg
outsl
in
jg
jle
inc
rclb
aad
fwait
test
lods
repz
or
cwtl
out
dec
jne
imul
cli
aam
insl
pop
popa
mov
pushf
repnz
test
push
inc
popf
call
roll
xor
rcrb
es
pusha
cmp
push
dec
arpl
dec
push
cmpsl
or
cmpsl
es
push
addl
or
outsl
dec
fsubr
adc
into
stos
jne
dec
outsb
xchg
fwait
inc
add
dec
inc
fidivs
mov
xlat
push
in
int
and
xchg
add
push
mov
out
mov
test
inc
xor
shll
imul
sbb
scas
sti
mov
mov
mov
mov
add
ds
lahf
mov
fneni(8087
into
sub
es
shl
sbb
clc
cmp
jmp
sahf
enter
push
jne
pop
loop
pop
xchg
jae
repnz
mov
aam
mov
and
jno
lret
adc
jle
daa
subl
popa
pop
lock
sub
imul
aam
mov
cwtl
jecxz
xor
add
sub
daa
pop
enter
xchg
rol
aaa
add
inc
push
adc
mov
gs
pop
ret
loopne
dec
xlat
inc
jle
cmpsb
enter
test
out
pop
mov
fisttps
adcl
pop
mov
aaa
pop
js
les
lock
inc
in
jle
sbb
adc
or
inc
push
add
xor
ds
cltd
inc
scas
fnstenv
fs
push
nop
mov
xor
enter
add
mov
fmuls
cmp
mov
js
lret
lret
stc
and
stos
test
lcall
ficompl
inc
add
mov
adc
add
pop
mov
xorl
cmp
in
sub
mov
and
lock
hlt
test
or
call
dec
xor
ret
rcll
bound
sbb
push
cmpsb
je
rclb
sub
fldcw
and
sbb
mov
push
andl
test
sbb
xor
add
in
xchg
dec
adc
lret
fstpl
or
dec
mov
sbb
jae
mov
fwait
int3
xor
std
sub
cltd
xchg
loop
scas
aad
xor
mov
mov
cmpsb
pop
cmpb
leave
push
fs
inc
test
jg
hlt
in
sbb
push
adc
xchg
ljmp
and
dec
pop
jns
shll
movsl
nop
movsb
pop
sub
in
jl
inc
dec
inc
jl
add
fs
push
xchg
mov
int3
aam
or
xor
insl
cmp
adc
add
sti
fsubrs
hlt
nop
popf
flds
rorb
push
add
adc
xor
or
insb
adc
lods
and
jo
xor
je
dec
adc
mov
out
inc
and
into
les
jb
lds
imul
or
nop
cmp
cmpsb
imul
inc
aam
cmp
in
xchg
and
das
lahf
jbe
imul
push
xor
hlt
frstpm(287
or
enter
mov
jg
and
addr16
dec
popa
nop
aad
xchg
or
and
xchg
mov
imul
fldt
testb
or
add
pop
xchg
imul
je
sti
and
or
cmc
lret
mov
call
out
push
stos
movsb
adc
rcrb
dec
js
push
xchg
add
push
std
xchg
and
enter
imul
xor
push
sarl
movsb
cmpsl
ret
sub
dec
or
push
push
test
jns
addr16
cmp
and
test
mov
adc
cmc
add
lret
addr16
mov
mov
daa
mov
jns
inc
xchg
mov
pop
incb
mov
lahf
out
popa
adc
lgs
testl
inc
daa
sbb
dec
add
popa
clc
fldt
jle
push
mov
jp
insl
adc
sbb
pop
xor
jge
sbb
in
push
mov
adc
mov
adc
lahf
outsb
mov
pop
mov
inc
push
ds
cmpsl
sub
inc
sub
adc
lea
mov
dec
sar
jecxz
dec
mov
xor
cmpl
push
addr16
dec
jb
out
mov
mov
mov
cmpsl
jns
sbb
dec
fsubl
sbb
lret
mov
and
pusha
adcb
cltd
fwait
pop
mov
mov
jp
ret
adc
add
lret
stc
loopne
testb
ljmp
xor
or
roll
fiadds
outsb
inc
fwait
or
push
mov
xchg
mov
cmc
jo
sbb
hlt
mov
test
daa
ss
jge
adc
fmul
notb
addb
and
fs
insb
in
sub
mov
dec
or
adc
es
xchg
jge
mov
icebp
mov
pop
lods
sub
mov
scas
into
divl
sub
insl
sub
mov
rcrb
cmpsb
xchg
nop
xchg
pop
ds
push
sbbl
cmp
fs
jae
out
adc
mov
fcomps
pop
xchg
lock
fidivs
scas
adc
and
rorw
mov
cwtl
outsb
je
dec
sti
movb
popf
jo
aam
adc
pop
xor
popf
lcall
mov
jge
divl
jl
cli
jl
rcl
mov
mov
pop
mov
inc
lods
jmp
dec
push
inc
pusha
sbb
mov
xor
push
insl
xchg
fnstcw
pop
lods
dec
cmp
insb
jbe
movsb
jle
nop
mov
add
pop
sub
jg
pop
repz
adc
or
movsb
insl
xor
push
xor
loope
cs
push
out
xchg
inc
sbb
scas
xchg
cmpsl
mov
inc
mov
int
inc
pop
int
push
pop
lcall
dec
shl
js
mov
xor
shll
pop
subl
sbb
add
icebp
push
fdivr
dec
and
jg
lock
adc
lcall
aad
mov
xor
insl
or
dec
sub
jne
insl
or
cmp
lcall
sbb
inc
adc
pop
sub
popa
loopne
dec
hlt
xchg
bound
push
rorl
pop
popf
add
lds
lahf
jbe
adc
gs
inc
sub
inc
and
jne
inc
in
pop
aaa
add
cs
loop
stos
ss
fistl
and
pop
jle
lods
scas
xchg
push
cmpsl
in
pusha
jp
adc
adc
bound
pusha
dec
fcomps
cltd
mov
jb
mov
ficoms
mov
in
mov
stos
arpl
xchg
pop
dec
xor
and
rclb
pop
test
inc
adc
xchg
jecxz
mov
fists
sub
adc
xchg
outsl
xor
xchg
movl
test
xchg
daa
cmpsb
pop
in
fsubl
icebp
sbb
mov
fdivs
mov
add
movsb
rcrl
xor
sub
stos
fs
loop
cmp
xor
nop
loopne
iret
repnz
mov
out
and
push
inc
fcmove
mov
notb
aaa
test
sbb
ret
sub
dec
inc
mov
loope
or
jae
out
xor
push
mov
push
lahf
in
push
pop
cs
mov
mov
fs
cmp
fwait
lods
movsb
xor
aad
mov
mov
push
dec
xor
pop
add
inc
shll
mov
or
out
jns
jno
sub
in
fldt
and
sahf
popa
jecxz
enter
cltd
mov
xor
jb
sbb
push
xor
push
mov
icebp
clc
std
sub
imul
xchg
ficoml
xchg
mov
push
arpl
and
sub
shll
std
jne
cmp
mov
lahf
push
scas
popa
sub
xor
loope
and
jnp
push
cmp
ret
pop
dec
xor
ficoms
sub
loop
inc
xchg
dec
imul
pop
inc
push
mov
jne
push
jb
repnz
lcall
shlb
add
ja
add
sbb
ror
dec
data16
xchg
sbb
adc
pop
loopne
dec
lret
push
pop
sbb
jge
mov
in
cmpsl
sti
ficoms
jmp
sbb
push
adc
xlat
dec
xchg
xchg
mov
or
jnp
and
mov
push
mov
arpl
cli
into
push
lods
xchg
data16
push
add
sbb
pop
xor
mov
inc
mov
ss
xchg
outsb
mov
mov
imulb
aas
inc
je
pop
loopne
pop
into
mov
push
pop
movsb
jmp
loop
jl
std
push
mov
test
inc
adc
jns
xchg
dec
mov
push
fucomip
or
jne
ret
fidivrs
sbb
pop
pushf
fnsave
call
stos
pop
xlat
mov
push
xor
shlb
insl
xchg
divb
pushl
int3
popa
push
cmp
or
and
les
addb
in
out
mov
or
stc
sub
ja
dec
and
dec
sub
jae
sub
enter
pop
adc
inc
jns
daa
xchg
or
pop
dec
dec
mov
es
push
mov
mov
push
xor
xchg
mov
add
insl
ret
js
jecxz
sub
and
out
pop
mov
xchg
and
mov
mov
pushf
ds
cmp
sub
rcll
mov
pop
push
int
cmp
lods
fucomi
int
mov
ljmp
dec
pop
subb
mov
je
push
adc
repnz
push
mov
clc
popa
cmp
xchg
adc
add
pusha
andl
lea
shrl
movsb
mov
sbb
aam
addr16
imul
dec
les
lea
aas
xor
out
pop
test
xorl
mov
dec
fmul
jae
cmc
mov
js
testb
hlt
incb
push
js
out
cmc
dec
fneni(8087
adc
jle
sub
test
sub
push
pop
and
int
sub
sbb
pop
pop
mov
pop
and
ret
fcomps
sahf
nop
lahf
pop
dec
inc
xchg
shlb
shr
sbb
psubusw
nop
out
jb
jg
mov
call
gs
and
xchg
pusha
dec
ficompl
mov
hlt
cmp
jmp
mov
fwait
aaa
push
xchg
lret
sub
fwait
fwait
stos
nop
lret
ljmp
xchg
and
sbb
adc
xchg
pushf
sti
or
cmp
call
je
aas
xor
xorb
into
pop
mov
loop
leave
loope
divb
call
and
scas
add
push
pop
dec
inc
out
popa
ja
ror
daa
aad
xor
mov
stos
jle
cld
nop
sets
stos
insb
loopne
dec
insb
faddl
cmp
sbb
inc
fisttps
push
and
stos
fwait
xor
ret
or
test
cmp
iret
in
inc
fisttps
pop
int3
adc
add
xchg
std
test
daa
jne
stc
pop
push
inc
add
dec
jno
jbe
sarb
pop
outsb
fwait
pop
jbe
mov
fs
dec
shlb
sbb
fwait
idivl
popf
sbb
jmp
outsl
dec
jno
or
mov
adcb
rolb
lods
sbb
icebp
insl
lahf
loop
fwait
lret
daa
mov
pop
shlb
mov
int
jecxz
push
call
add
fcmove
test
sub
cmpsl
mov
popa
clc
mov
inc
lret
inc
jb
pop
pop
fists
push
pop
imul
mov
les
es
arpl
and
divl
xchg
jbe
outsl
shl
xor
dec
test
dec
in
inc
mov
insb
ljmp
xchg
notl
outsl
lods
cmp
cltd
cmp
inc
or
mov
add
pop
sub
hlt
mov
out
insw
loop
mov
xor
loopne
dec
in
xor
jl
sub
cmpl
aas
out
jnp
lcall
mov
bound
pop
lahf
call
xchg
mov
jmp
xor
mov
loope
aam
xchg
pop
jg
and
pop
cmp
arpl
in
cmpsb
and
push
sub
or
pop
js
imul
cmpb
cmpsl
ds
adc
mov
dec
das
pushf
or
adcb
jp
jb
cmp
fsubr
scas
mov
sarl
push
movsb
shll
out
or
inc
mov
pusha
xchg
lcall
mov
mov
push
cmp
cmp
cmp
insb
adc
mov
test
pop
lret
orb
sub
int
shrl
pop
cwtl
mov
ficoms
cmp
mov
jno
out
mov
xchg
in
mov
mov
dec
stos
sbb
adc
mov
or
aad
mov
or
adc
and
dec
mov
push
or
gs
sbb
xor
and
int3
imul
add
orb
push
jp
pop
pop
into
sub
enter
shrb
leave
sub
jb
push
ret
aaa
xchg
jns
mov
ror
xor
pop
loope
mov
xchg
insb
adc
test
add
mov
in
jae
adc
popf
popa
sti
push
out
adc
movsl
outsl
xbegin
lahf
rolb
aas
and
dec
jbe
dec
movaps
add
dec
stos
jb
push
js
push
lods
cltd
and
push
dec
adc
push
fnstcw
mov
xor
xor
insb
mov
xchg
sbb
sub
pushw
xor
add
mov
lock
and
adc
mov
mov
jmp
in
shll
mov
pop
fidivs
cmpsl
mull
add
cld
mov
cmp
clc
test
rclb
js
ret
sub
ljmp
push
cmp
and
add
fisttps
mov
xchg
jo
jbe
pop
ss
aas
ja
repnz
xlat
ret
dec
repnz
ljmp
lcall
imul
cmpsb
sahf
rcrl
pop
xchg
enter
in
call
push
push
mov
and
lahf
add
adc
mov
outsb
pop
lret
aas
mov
insl
loopne
push
sbb
inc
push
mov
mov
mov
and
int
and
ror
movsl
inc
icebp
sar
xorb
sbb
cwtl
and
das
adc
sti
movsl
imul
cs
aad
push
jge
cs
nop
mov
fs
xchg
mov
pop
notl
stc
filds
test
hlt
lret
in
adc
icebp
add
mov
adc
aad
fwait
dec
mov
inc
lret
adc
cmc
pop
jp
adc
dec
loop
rdmsr
push
and
mov
inc
in
scas
or
xlat
mov
icebp
mov
std
iret
xchg
pop
jp
jns
leave
dec
xor
and
pop
cld
push
add
xor
xchg
and
push
rcll
sub
nop
out
inc
or
sbb
icebp
mov
or
mov
test
sub
popf
dec
adc
adc
add
outsb
cs
or
pop
data16
loopne
in
push
scas
out
pop
psubb
lcall
mov
and
jnp
inc
sahf
in
sbb
sub
pop
fdivrl
es
adc
mov
sbb
jle
lcall
cmp
out
add
scas
or
inc
jecxz
dec
pop
addr16
jb
jne
sbb
ljmp
imul
scas
iret
loop
cmp
data16
jns
jg
pop
loope
arpl
push
add
sub
orl
add
dec
int3
mov
dec
in
mov
scas
popa
xchg
jecxz
dec
add
sbb
xor
pop
lahf
add
adc
sub
insb
cmp
out
rcl
into
sub
out
mov
rcr
lea
xchg
pusha
cld
lret
ljmp
jge
cmp
adc
jg
jno
js
test
dec
out
int3
repnz
movb
ds
mov
movsl
rorl
inc
mov
out
loop
add
jo
lock
mov
jo
cmp
int3
in
add
fwait
sbb
fcmovne
and
push
pusha
aad
fistl
dec
arpl
mov
sbb
adc
testl
enter
cld
mov
data16
arpl
test
fmulp
data16
mov
mov
dec
cmp
pop
js
jno
inc
movsl
push
mov
addr16
leave
pop
rorl
rorl
in
test
loopne
or
xlat
push
out
sbb
lahf
pop
iret
popf
cmpsl
mov
push
mov
sub
push
and
movsl
xchg
lods
js
outsl
inc
mov
mov
ret
sbb
add
mov
test
jns
ds
adcb
addr16
dec
push
mov
pop
pushf
sbb
adc
popf
out
xchg
lods
roll
mov
cmp
push
imulb
out
outsb
fdivrp
mov
push
push
xchg
nop
lret
xchg
cmpsl
je
inc
scas
loop
jb
ds
push
fsubl
stc
cltd
cli
push
jg
pop
addb
mov
mov
std
int
fucom
das
mov
stc
push
rorb
aad
sbb
cltd
lea
ret
fistps
or
stos
jne
js
lea
mov
jnp
scas
in
test
addr16
ret
js
fdivrs
scas
das
pusha
dec
fs
into
mov
addr16
std
jns
xor
push
cmpsb
movsb
std
fiaddl
mov
xor
inc
xchg
push
or
aam
dec
outsb
fistps
bound
testb
jecxz
push
popa
pop
loop
shlb
xchg
gs
xor
jg
jnp
cmp
add
aas
mov
or
pop
daa
adc
iret
sbbl
daa
lds
push
and
movl
push
js
mov
fsts
inc
xor
mov
ljmp
mov
adc
pop
data16
rcrb
mov
and
test
add
sub
push
arpl
fcoml
sub
inc
popa
movsb
js
mov
inc
sti
dec
cmpsl
dec
pop
pushf
lahf
ds
and
push
call
mov
xchg
iret
inc
pop
loop
mov
addb
and
ror
std
pop
mov
gs
and
mov
cld
push
shll
testl
jbe
jmp
ja
lods
cmp
les
out
mov
sub
jp
inc
popf
scas
cmc
das
pushf
out
loop
cld
cmpsb
inc
push
xchg
cli
lods
cmp
fsubs
in
and
cmp
out
rorl
and
push
push
dec
ds
dec
add
cltd
test
jb
test
into
ror
js
int3
mov
mov
ret
inc
mov
mov
test
sbb
or
test
loop
pop
enter
mov
ds
je
or
sub
xor
mov
cld
mov
imull
sbb
add
mov
xor
sar
in
push
and
add
adcb
push
out
push
xor
ret
shr
addr16
push
sub
inc
icebp
rorl
adc
imul
aas
faddl
cmp
cmp
cltd
ja
or
test
adc
fstp
divl
inc
dec
sub
pop
out
fs
fidivrs
aas
movsl
push
call
xor
dec
push
adc
mov
and
jb
leave
add
iret
or
pop
mov
mov
sbb
cmpl
sub
arpl
push
cltd
jg
pop
mov
lods
mov
xchg
sbb
testl
jecxz
sti
and
data16
xchg
aaa
enter
inc
ficoml
lret
nop
add
mov
js
inc
rcll
pop
sti
dec
gs
std
shll
mov
dec
mov
repz
and
add
iret
shll
inc
pop
add
loop
xor
aad
xor
fwait
rcll
movsl
add
mov
out
popa
sarl
adc
xchg
xor
loope
lcall
rcl
mov
pop
movsb
mov
loope
or
pop
pusha
rdpmc
cli
add
test
dec
out
loopne
orb
cmp
shrb
int3
push
xchg
adc
sub
add
pop
and
pop
stos
cmp
and
pop
movsb
popa
arpl
js
mov
in
pop
or
mov
arpl
xor
sbb
sbb
mov
into
mov
cld
sub
jle
sbb
lock
ljmp
sbb
stc
repnz
mov
jnp
daa
sub
movsb
lret
xor
push
sbb
fsubrs
subb
dec
ljmp
xor
popa
cmp
clc
push
outsl
stos
mov
adc
cmp
pop
fidivs
into
movsl
mov
or
outsl
jo
out
pop
in
lcall
or
push
xor
dec
in
adc
pop
mov
add
jo
lods
or
or
add
and
inc
sahf
mov
adc
data16
dec
mov
jo
popa
pop
lret
into
jne
popa
add
popf
ret
add
mov
push
sub
test
cs
sahf
loope
xor
lods
and
imul
fsubrs
out
mov
xor
test
xor
mov
fbstp
rclb
push
ss
das
dec
and
iret
and
push
fwait
stos
mov
cmp
icebp
insb
js
mov
mov
imul
test
pop
adc
pop
xchg
jg
pop
xchg
sbb
inc
pop
shl
pop
aad
pop
lahf
in
pop
pop
cmp
mov
gs
jns
push
test
bound
fistpll
mov
or
dec
mov
jne
repnz
cmp
aaa
ret
flds
add
cmp
push
push
mov
inc
cmp
or
add
into
cltd
or
cld
or
mov
pusha
mov
cmpsl
and
ss
mov
out
xor
sbb
ret
mov
pop
xchg
js
push
mov
mov
sbb
xchg
xor
mov
push
sub
ret
fsubl
fs
cs
stos
push
cltd
sub
sbb
xor
or
push
pop
sub
gs
enter
sbb
stos
out
inc
jae
sahf
fiaddl
repnz
aas
push
pop
and
lret
movnti
inc
jae
xchg
imul
adc
ret
xchg
mov
or
les
xor
jge
or
cmpsb
push
and
das
cmp
cmpsb
jno
or
out
aam
push
cmp
pop
mov
jmp
xor
mov
pop
dec
xchg
test
fcmovu
sbb
cmp
xchg
ljmp
pop
inc
adc
dec
mov
mov
cmp
es
ret
test
inc
out
mov
mov
aaa
shrl
xchg
xchg
push
cmp
aad
aaa
imul
std
cmp
stc
xchg
inc
sarl
js
jmp
jnp
and
dec
inc
sbb
imul
inc
ret
sbb
pop
xor
sub
insl
outsb
pop
leave
jg
out
scas
mov
inc
jnp
mov
mov
ljmp
xor
jmp
loopne
mov
sti
or
imulb
xor
pop
loop
in
or
lea
inc
xor
lods
scas
rcrb
popa
orl
inc
jae
int
jno
stos
jnp
dec
pushf
orl
add
repz
pushf
es
jp
mov
jno
pop
mov
lret
xor
test
decl
ret
fisttps
shlb
nop
push
mov
in
mov
adc
out
jl
mov
mov
push
arpl
shr
shl
les
inc
pop
xor
lahf
lea
jae
addr16
cltd
mov
jle
mov
and
xchg
dec
fcmovu
out
add
and
cmp
dec
pop
hlt
dec
xchg
or
mov
jae
testb
in
inc
and
push
add
dec
fldl
dec
pop
mov
and
lds
push
ljmp
das
mov
mov
mov
inc
add
xor
pop
push
pop
add
or
in
xlat
lods
ret
sbb
or
inc
jo
and
mov
xchg
mov
frstpm(287
jl
outsl
sbb
in
add
xchg
pop
nop
lds
shlb
sbb
pop
dec
push
sub
dec
fs
mov
mov
cmpsb
jo
movaps
mov
push
les
mov
inc
out
shll
loope
mov
and
mov
or
jnp
sbb
add
xchg
xor
js
xchg
leave
icebp
push
sahf
pop
xchg
hlt
jge
aaa
push
out
jo
cli
jb
sti
cmp
xchg
adcl
sbb
mov
movnti
movsl
imul
cmp
test
dec
mov
add
push
scas
loop
loopne
sbb
inc
push
dec
iret
mov
je
je
xchg
xchg
lret
inc
inc
push
or
or
or
jns
call
pusha
mov
aas
or
insb
pop
inc
adc
cmp
xor
not
add
dec
popl
testl
fsts
data16
or
push
dec
adc
repz
jno
mov
add
mov
orl
mov
in
push
cmpsl
jno
pop
cmp
push
xor
scas
push
add
sbb
sbb
pop
dec
cltd
bound
push
adc
stos
mov
adc
or
cs
pushf
sub
pushf
jae
or
stc
pop
into
cmp
sti
repz
dec
dec
faddp
fidivrl
dec
dec
xor
and
call
lods
or
or
jp
repz
cmpsb
ret
andl
or
movsl
pop
jmp
scas
insb
mov
dec
push
psubsb
test
pushf
mov
jns
lcall
cwtl
xor
jne
xchg
js
xchg
mov
loop
push
pop
add
ljmp
cmp
cmp
les
mov
shrl
inc
sbb
hlt
addl
dec
mov
sub
mov
movsl
push
and
scas
add
jle
ds
cmc
and
fsts
adc
jp
notl
test
push
std
inc
imul
mov
dec
or
shlb
xor
or
dec
and
test
js
adc
cmc
in
int3
mov
fwait
aaa
es
sbb
xchg
aad
cmc
scas
dec
push
mov
jg
push
addr16
addr16
xchg
sahf
fcmovu
fnsave
aas
pop
sbb
push
fsubl
and
cli
cmp
sub
pushf
xchg
fmul
or
mov
add
cltd
cld
jecxz
xor
rcrb
ret
lds
out
push
xchg
or
sub
mov
or
into
sub
sbb
das
fcompl
in
aad
sbb
stos
push
insl
and
les
cmpl
mov
stc
jmp
iret
mov
stc
inc
mov
test
sub
push
into
sbb
out
in
psubd
test
pop
add
mov
jmp
aam
je
and
es
and
sti
sub
push
arpl
orb
int
cmc
adc
jne
arpl
mov
push
es
pusha
push
xchg
push
sbb
daa
repz
fisttpll
lea
imul
test
bound
lea
cli
push
int
nop
mov
xor
push
mov
nop
rorb
adc
and
bound
arpl
lea
sub
xor
xor
lcall
jb
dec
dec
mov
scas
add
or
mov
mov
jbe
js
pusha
or
push
in
sub
cltd
mov
hlt
mov
rcll
int3
js
adc
fs
push
mov
cltd
outsb
fistps
inc
loope
icebp
mov
fwait
imul
and
sub
ss
cmpsb
lods
xchg
xor
add
xlat
int
pusha
cli
adc
test
and
lods
gs
loope
loopne
xor
xchg
das
lea
push
dec
stos
add
add
xor
sahf
lods
sbb
pusha
xor
pop
leave
cs
dec
in
lret
push
inc
mov
sahf
out
mov
cmpsb
ret
jle
adc
inc
shll
lea
int3
xchg
insl
xchg
lds
into
dec
hlt
lcall
fldl
mov
add
sub
out
push
lods
inc
lahf
pop
sbb
loopne
aad
rorl
mov
rcrb
add
scas
inc
mov
cmp
aad
scas
jge
outsb
lea
and
and
jge
out
fmull
das
mov
mov
test
into
cli
cmp
out
js
cmp
divb
mov
jbe
cmpsl
adc
out
cwtl
dec
cmp
imul
mov
jo
daa
roll
lods
and
clc
dec
push
inc
or
cmp
into
inc
jle
jb
out
scas
push
cmc
clc
or
inc
push
dec
inc
jb
add
sbb
in
push
fucomp
stc
movsl
xchg
xchg
rclb
adc
add
adc
out
fdivrl
je
push
cwtl
xor
inc
xchg
jle
shlb
dec
jmp
push
mov
xchg
dec
andl
ds
dec
stos
sbb
mov
jg
add
jmp
int
lds
sbb
xchg
dec
adc
and
sub
push
rcr
call
cmpl
add
daa
mov
mov
shlb
aam
inc
mov
sbb
mov
filds
test
ss
xlat
or
adc
add
lret
sub
push
and
cmp
pop
mov
stos
sti
cmpsb
mov
ljmp
shlb
push
aad
pop
xlat
mov
out
stos
leave
psrlw
push
jge
dec
in
xchg
rcrb
inc
cs
inc
pop
or
cltd
pop
repz
xor
xchg
insl
xchg
cmpsl
pop
or
jle
add
pop
and
rorb
xchg
subb
bound
lods
dec
add
jo
push
xlat
clc
divl
aaa
add
in
or
test
in
adc
cld
push
dec
test
mov
mov
in
fstps
repz
shlb
dec
sti
cwtl
jbe
dec
orl
sub
out
sub
mov
mov
jp
negb
ret
cmp
or
pusha
cli
loopne
stc
sbb
mov
in
push
pop
popa
sbb
mov
add
imul
adc
adc
sbb
lcall
mov
and
mov
lods
pop
xchg
stc
cmp
negb
rcl
push
adc
fldl
add
fidivrl
push
in
daa
adc
fsubrs
mov
push
add
xchg
fwait
cmp
adc
pop
lock
inc
gs
repz
nop
push
xchg
std
fstpt
cmc
push
jbe
loop
jae
loope
loop
loope
mov
cmp
xchg
imul
mov
jns
ficompl
mov
push
enter
jecxz
lcall
mov
and
aam
cmp
cli
xchg
sub
inc
push
test
mov
js
inc
mov
cmc
or
nop
push
test
loop
xor
sbb
jl
mov
cmp
mov
mov
xchg
cs
xchg
ljmp
push
pusha
push
fdivrs
cmpsl
or
cli
jp
ljmp
std
int
inc
push
or
daa
loopne
dec
insb
add
jo
adc
pop
flds
mov
sub
add
and
xchg
pop
int3
sti
add
rcrl
bound
cmp
mov
ss
fs
add
int
pop
pop
gs
adc
lock
ror
lods
imul
fdivr
js
shl
and
sub
test
cmp
out
jge
cmp
lods
cli
loopne
je
out
mov
int
das
sarl
xchg
mov
out
sbb
and
mov
xchg
mov
inc
hlt
cmp
loopne
enter
inc
jg
cmp
in
sbb
pop
sahf
add
ficomps
sti
js
jmp
inc
int
inc
pop
mov
sbb
pop
mov
mov
repz
push
icebp
outsb
in
mov
inc
push
and
repz
mov
cmp
mov
pop
rolb
aaa
jbe
push
fcmovb
mov
iret
push
out
or
sub
es
pop
mov
jne
or
mov
sbb
std
xlat
lea
xchg
xchg
sub
cbtw
dec
or
push
jmp
pushf
mov
or
xor
push
or
add
jnp
jle
mov
inc
push
add
jl
aas
jle
aaa
jg
add
jmp
adc
add
fld
lahf
jge
jnp
xlat
lods
mov
mov
and
enter
pop
mov
sub
xchg
shrb
inc
pusha
dec
imul
fsubr
stc
in
xchg
add
es
shr
cld
shlb
bound
push
movsb
mov
arpl
js
and
adc
out
add
pop
shr
mov
mov
in
daa
mov
and
fsubrs
stos
popf
test
out
jns
or
mov
jecxz
add
test
data16
pop
out
push
pop
pop
loopne
sbb
lret
lahf
test
out
test
xor
int
sbb
jno
dec
in
ret
xor
sbb
push
jb
inc
mov
push
imul
jb
out
add
out
xorl
adc
xchg
jge
sub
mov
push
sbb
mov
jae
dec
out
xchg
test
mov
adc
mov
mov
mov
push
jo
jecxz,pn
mov
jl
pop
mov
addr16
sti
sub
loop
inc
sub
dec
sbb
mov
shll
jnp
insl
lea
fs
and
push
iret
xchg
lret
das
mov
outsb
fwait
je
shll
dec
pop
fldenv
dec
mov
call
inc
into
pop
push
ror
adc
push
mov
mov
imul
les
jl
pop
mov
sbb
jecxz
pop
mov
test
sub
add
loop
das
mov
mov
lahf
mov
cltd
mov
add
rclb
inc
arpl
push
push
jo
testb
xchg
aaa
cltd
xchg
xchg
aam
in
cmp
fistpl
ret
int
bound
out
inc
gs
and
push
nop
add
cmpsb
imul
clc
inc
mov
push
mov
inc
mov
push
stos
fidivrl
ljmp
cmp
mov
lods
and
out
in
add
mov
pushf
xlat
and
in
cmp
fldt
and
dec
adc
call
les
test
inc
add
jno
or
not
in
jnp
stos
jmp
adc
lods
es
push
insb
sbb
mov
jl
pmaxsw
pop
mov
ret
out
sub
imul
or
ret
ret
add
push
cmpsb
vpmullw
xchg
add
stc
test
jecxz
or
adc
in
arpl
cmp
aaa
popf
pop
loope
jns
popf
dec
pop
xchg
popf
enter
mov
jmp
push
mov
aad
mov
jo
scas
xlat
dec
sub
into
add
movsl
pop
pusha
cmp
inc
mov
add
lods
xlat
icebp
out
or
aam
daa
xorl
adc
into
xlat
add
cmp
dec
jb
icebp
add
mov
rol
insb
dec
lods
rclb
push
or
dec
loope
dec
jnp
mov
aad
insl
pminub
or
test
xchg
outsb
mov
test
sub
aad
push
in
and
jl
mov
mov
add
and
mov
push
aas
dec
push
mov
xchg
fwait
jne
pop
mov
xchg
ficoms
push
pop
stos
std
cmp
fwait
addl
call
in
aam
adc
mov
jl
and
cmpb
cli
insb
ror
sub
sub
mov
push
xchg
push
ret
pop
gs
les
lcall
leave
push
adc
stc
xchg
mov
imul
sub
or
call
test
pop
jp
xor
adc
mov
inc
cmp
lock
cs
daa
lock
mov
lods
andb
leave
inc
mov
into
cmpb
mov
add
adc
cld
lcall
jmp
mov
fdivr
arpl
in
lea
jb
sarl
mov
add
fucom
enter
add
cmp
adc
mov
ds
out
or
loope
aad
pop
mov
pushf
pop
movb
sub
adc
test
adc
mov
xorb
sub
push
adc
insb
bound
cwtl
mov
in
aad
dec
in
iret
mov
push
jnp
stos
and
pop
gs
pop
dec
scas
pop
push
cmp
ret
adc
mov
fdivl
negl
lret
sub
push
js
mov
inc
daa
or
inc
pop
sbb
xchg
inc
pop
lcall
xlat
jg
or
xchg
stc
icebp
xor
lea
rcr
jbe
lock
ret
shll
subl
pop
mov
jns
movl
scas
out
je
jb
aas
xchg
push
add
cs
mov
out
lods
out
cmpsb
sbb
gs
inc
dec
or
jl
inc
bound
or
jmp
pop
dec
dec
lock
and
mov
scas
dec
ret
push
lahf
xlat
pop
jge
jns
pop
out
test
lds
js
aas
dec
mov
jge
lret
adc
dec
lcall
sbb
fimuls
sti
movsb
adc
mov
mov
dec
addb
lcall
aaa
pop
out
leave
mov
sti
cltd
lods
das
mov
jnp
mov
mov
iret
movsb
int
jmp
out
shrb
lds
fwait
outsb
inc
test
in
mov
inc
jno
inc
leave
mov
sub
aaa
mov
sbb
bound
lds
lcall
mov
xchg
cltd
sbb
pop
mov
jg
test
in
mov
iret
push
pop
cmp
cmpsl
shl
ret
mov
nop
std
rcrb
inc
xchg
lock
mov
das
repz
adc
push
push
adc
adc
mov
jmp
pop
xor
lods
xor
in
jg
adc
stc
int3
sbb
dec
jl
push
dec
lcall
xchg
mov
jne
fwait
dec
fistl
inc
mov
push
mov
jae
test
xor
cmp
mov
mov
push
jmp
jge
jmp
mov
notl
jge
scas
lods
imul
in
mov
dec
hlt
xchg
test
movsb
sbb
cmpl
das
mov
mov
movsl
mov
jmp
or
sbb
daa
insb
ret
data16
add
cmpsb
adc
pop
adc
push
pop
pusha
mov
insb
iret
lahf
mov
dec
xor
lret
roll
imul
xor
xchg
mov
lods
fistps
mov
xor
xlat
test
xchg
rcrl
pop
xchg
and
xor
sbb
or
lret
int
push
jmp
adc
pop
jle
aaa
mov
fmulp
push
test
mov
sbb
xchg
stc
lock
cmp
sub
and
sti
cmp
mov
adcl
test
jecxz
xor
mov
ret
mov
lea
aaa
in
scas
scas
stc
aaa
inc
lods
es
push
dec
adc
ficoml
mov
out
pop
sbb
adc
dec
xchg
inc
and
aaa
jp
jg
fs
in
cmc
je
xor
and
inc
cli
insb
mov
pop
loope
sahf
mov
inc
outsl
push
add
mov
out
jp
push
fs
dec
inc
jle
mov
ficompl
jnp
rolb
fcmovnb
nop
add
mov
dec
xchg
lret
add
lds
push
dec
pushl
popa
dec
stc
mov
pop
pop
or
popf
xchg
mov
mov
push
push
jbe
cli
push
xchg
xchg
lock
fstpl
pop
sbb
out
or
mov
mov
lds
xlat
mov
subl
xor
repnz
dec
mov
mov
int
xor
outsl
pop
and
out
test
jns
push
subb
jne,pt
outsl
popf
lret
sbb
inc
mov
sbb
jns
rolb
adc
dec
js
daa
jmp
inc
cli
jp
out
shrb
test
mov
jg
cmc
shrb
mov
test
pop
adc
bound
cmp
addr16
sub
fstp
aaa
adc
xchg
hlt
test
les
adc
sbb
std
sbb
mov
ret
inc
mov
adc
mov
cltd
out
xchg
ja
jp
adc
lea
push
or
js
insb
daa
cltd
pop
adc
ja,pn
orb
xlat
jo
lock
dec
dec
mov
jecxz
xchg
shll
aas
ljmp
pop
popa
out
pop
aaa
and
or
push
repz
notl
out
fisubl
lods
dec
int3
jge
sbb
hlt
inc
jle
mov
fistl
outsl
jge
xchg
jl
xor
cli
cli
push
mov
std
test
pushf
push
lods
popa
setne
mov
ffreep
and
xchg
xchg
push
dec
test
jno
lods
das
or
imul
push
std
push
push
jo
outsl
rcrb
push
cmp
jl
sbb
pop
mov
adc
into
into
icebp
dec
movsl
test
mov
add
xor
cmpsb
pop
cmp
jbe
fld
orl
daa
and
sarl
ret
rcrl
inc
and
lret
in
in
and
mov
jp
mov
movsl
mov
adc
sbb
xor
lea
sbb
repz
lret
cmp
or
in
inc
push
mov
imul
lods
xor
xor
mov
jge
mov
dec
lods
bnd
add
shr
push
sub
xchg
lret
cwtl
into
stos
fs
push
adc
lcall
lret
cwtl
fcompl
dec
push
cmc
das
scas
cmp
test
out
sub
repz
dec
mov
or
fsubp
adc
adc
mov
es
jnp
jbe
cmp
push
push
adc
mov
lcall
fsub
push
cmp
push
push
mov
add
repnz
adc
dec
insb
inc
mov
lcall
aaa
xor
adc
sbb
dec
mov
push
sbb
dec
add
ja
subb
jb
int3
inc
pop
mov
xchg
nop
xchg
or
push
cmp
shll
cmp
mov
loop
scas
pop
notb
mov
hlt
adc
xor
mov
call
inc
mov
xchg
or
cld
xchg
orl
pop
mov
adc
push
push
bound
sub
fcomip
aam
push
jmp
enter
divl
out
inc
xchg
xchg
imul
or
push
inc
adc
mov
mov
sbb
in
ret
nop
mov
rcr
int
push
int
jmp
xlat
mov
pop
add
xchg
push
std
loope
push
xor
xor
std
sbbb
mov
sub
cmc
or
cld
sub
cmpsb
xorl
jl
popa
jno
lock
dec
pop
xor
or
lret
mov
pusha
lock
pop
out
jns
dec
inc
repnz
pop
and
inc
test
xor
push
movsl
jle
out
jmp
andl
rclb
push
out
rclb
or
push
ljmp
sbb
insl
dec
and
mov
sbb
cld
in
popf
ds
or
popl
xor
mov
push
pushf
int
jb
mov
adc
xchg
test
lock
lret
mov
test
xchg
stos
sbb
lea
pushf
or
add
cltd
and
xchg
in
sub
loope
and
xor
xor
rol
push
fisttpll
test
mov
aaa
repnz
insl
dec
fsubl
dec
roll
into
sbb
add
mov
lods
mov
mov
insb
scas
ficoml
mov
fbld
mov
idivb
hlt
cmpsl
pop
xor
jle
inc
stc
test
pop
in
in
push
repz
xchg
push
out
inc
adc
pop
jmp
add
mov
and
xchg
mov
push
jmp
orb
shr
and
lcall
cmpsb
jmp
out
xchg
cmp
push
push
xor
xchg
xlat
ret
fsubrp
mov
sti
push
fsubrl
test
stos
xchg
mov
test
es
outsl
mov
sbb
subl
rclb
push
add
xchg
in
dec
mov
in
or
xchg
cmp
xor
jle
jecxz
inc
les
daa
add
pop
in
mov
mov
sub
inc
je
fnsave
scas
mov
sub
stos
xor
mov
insb
jo
in
fs
lahf
push
imul
mov
push
mov
cmp
adc
insl
pop
jo
xchg
or
or
and
add
cmpsb
in
inc
outsb
hlt
pop
jmp
or
push
loop
lods
cmp
pop
repz
jae
nop
jo
xlat
adc
jle
xchg
inc
ret
adc
les
das
gs
mov
mov
fisttpl
nop
cmp
sbb
test
cmc
push
jo
jo
push
ja
jp
repz
jmp
mov
sub
dec
xchg
aaa
push
stc
xchg
sahf
add
push
mov
js
push
cmp
repz
cmp
cmp
mov
cmp
jb
mov
neg
jp
pop
fistl
adc
mov
jecxz
jbe
or
jl
cmp
xchg
inc
dec
popf
mov
push
sahf
sbb
mov
or
xor
fnsave
cmp
or
rorb
xor
dec
and
cmp
dec
int3
into
xor
pop
jo
inc
lods
pushf
lds
lea
sub
and
push
add
sub
popf
imul
cmp
into
not
popf
xor
mov
jns
inc
sar
inc
pushf
fwait
out
rcrb
jbe
mov
out
or
popa
inc
push
sbb
lds
mov
std
xchg
mov
dec
movsl
inc
push
movsl
aaa
out
sub
push
sub
mov
adc
mov
push
pop
imul
and
je
repnz
push
fistps
jnp
mov
shl
int3
ret
inc
mov
mov
adc
jbe
mov
out
call
int
mov
pop
icebp
aad
pop
pop
xchg
sub
jns
pop
xor
dec
daa
rcrb
xor
cltd
jno
incl
jg
sub
in
push
xchg
push
mov
xor
inc
sub
dec
ljmp
inc
mov
sub
pop
adc
fldcw
sbb
test
ljmp
hlt
cmpsl
sbb
dec
cli
fucomp
pop
scas
pop
scas
push
cmpl
popl
repz
sbb
cmp
test
xchg
push
int3
mov
popf
mov
push
jnp
lea
mov
in
dec
fwait
clc
cli
inc
inc
dec
and
xor
dec
sub
xor
xorl
popa
iret
lea
ret
xor
inc
cld
mov
leave
loop
jg
fs
xor
dec
sbb
mov
sbb
mov
push
cwtl
call
int3
in
xchg
sbb
sbb
rcrl
sub
push
rorb
enter
dec
add
and
int
mov
add
adc
in
mov
sub
or
inc
fadd
inc
mov
test
test
in
jle
adc
jb
fbstp
movsb
push
imul
xor
jo
sub
ljmp
aad
int3
dec
pop
mov
aad
cmc
pop
ds
daa
mov
xor
cld
jl
scas
or
mov
mov
out
push
pusha
loope
test
das
js
hlt
cmpsl
jne
xor
cltd
lods
jmp
popa
into
mov
rcrb
insl
xchg
cwtl
test
pop
and
push
cmc
xlat
push
add
movsl
cmpsl
aas
in
jmp
mov
dec
mov
cmp
xor
push
js
hlt
mov
test
test
loopne
stos
enter
nop
cli
aas
les
dec
mul
jbe
add
shrl
cmp
or
je
inc
sub
mov
pop
negb
add
pushf
lods
outsl
jo
add
jp
push
mov
mov
dec
test
push
scas
jnp
cmpsb
add
lahf
ret
roll
sub
mov
mov
stos
sbb
mov
mov
lret
stos
in
jno
adc
mov
adc
ds
mov
mov
outsb
addr16
enter
mov
data16
mov
pushf
fisubrs
mov
cwtl
inc
add
in
inc
pop
pop
sub
adcb
stos
add
push
pop
inc
adc
sbb
sbb
aam
outsb
add
push
std
sarb
dec
push
xor
dec
in
add
sahf
jo
add
sub
xchg
xor
call
fwait
cs
lods
xlat
mov
add
jmp
jmp
icebp
std
adc
lret
shll
jmp
icebp
mov
push
sbb
cmpsb
pop
test
lds
and
dec
in
fistl
pop
xor
adc
test
inc
or
pop
xor
imul
xchg
inc
std
mov
cmpsl
xchg
clc
rcrl
in
js
lock
cmp
dec
xchg
sbb
mov
mov
mov
insl
mov
adc
add
mov
pop
sbb
shl
mov
and
cmp
mov
xchg
pop
loop
jmp
add
shlb
bound
xchg
mov
jbe
leave
adcb
sarb
imul
fmul
mov
and
in
aam
mov
or
enter
ficoms
arpl
sbb
jns
adc
or
jmp
xchg
daa
mov
movsl
out
adc
pop
lahf
jno
sbb
adc
pop
rclb
rol
loop
jb
repnz
lcall
add
loope
cltd
jno
lock
test
adcl
xor
sbbb
mov
sub
inc
imul
scas
out
jmp
fmull
lock
xchg
pop
sar
push
dec
int3
lret
add
mov
or
pop
cmp
out
rorb
popf
lea
aam
imul
mov
outsb
mov
lret
fisubrl
rol
out
push
and
orl
mov
dec
mov
adc
xor
push
push
subl
xchg
out
jns
jae
adc
mov
out
inc
imul
push
pop
outsb
xchg
aas
jg
lods
xor
mov
jmp
cmpsl
add
lahf
pusha
leave
cmc
mov
or
inc
pop
xor
fnstsw
in
sub
in
ljmp
loope
daa
xchg
iret
xchg
hlt
les
cmp
in
inc
ljmp
out
mov
popa
mov
xchg
pop
fstpl
mov
bnd
or
push
pushf
iret
movsb
inc
mov
dec
pop
or
ret
mov
adc
jno
fdivs
sti
dec
lahf
mov
lcall
pop
cltd
push
and
mov
sbb
lcall
mov
mov
dec
es
jno
inc
jb
test
test
lea
pop
ljmp
jns
and
xchg
adc
mov
push
or
or
adc
xor
xor
and
out
movzwl
movsl
lcall
sbb
inc
mov
adc
cmpsb
xchg
cmp
push
lcall
mov
cld
mov
and
xchg
inc
xor
or
mov
hlt
jle
jae
xor
mov
imul
std
adc
dec
jo
push
cmp
xchg
outsl
lock
push
bnd
lods
xchg
cld
push
imulb
popa
call
mov
cmp
nop
pop
ds
mov
test
jno
pusha
sbb
cmpsb
test
addr16
ret
jmp
pop
idiv
aam
pop
ds
out
div
cs
dec
push
lcall
clc
jmp
shlb
test
lock
jno
in
je
lret
std
jnp
mov
out
mov
out
test
jo
movsl
pop
call
sti
rorb
loop
jo
out
jle
cmpsb
icebp
push
mov
aad
aaa
faddl
test
int3
cmpsl
adc
shll
jo
dec
push
je
push
or
divb
sub
mov
popf
test
aaa
sahf
dec
jmp
mov
scas
imul
add
or
fisubl
xchg
jbe
mov
das
add
cmp
addr16
xchg
adc
inc
push
jbe
pop
fs
mov
mov
cltd
lcall
pop
call
mov
aad
inc
or
sbb
pop
shrb
enter
jg
inc
arpl
sbb
in
push
mov
loopne
enter
xor
dec
mov
popa
lret
std
pop
and
mov
and
hlt
out
and
icebp
pop
jnp
push
pop
aam
lods
mov
add
dec
xchg
or
rcrb
pop
scas
gs
mov
nop
sub
cwtl
sub
xorb
fcomi
std
dec
pop
sub
in
sub
fisttpll
ss
mov
dec
int
iret
push
xlat
cs
xlat
lock
add
popa
jmp
lcall
jmp
iret
pop
jae
cmp
mov
mov
das
fsubrs
dec
rcr
pop
xor
jp
fisttpl
push
les
adc
mov
rclb
adc
aas
push
mov
rcrb
jecxz
push
or
mov
insb
ljmp
enter
mov
mov
xor
push
dec
and
dec
inc
sahf
mov
add
pop
push
js
fstl
mov
imul
push
jmp
bound
sub
add
push
aas
mov
dec
or
push
xchg
jae
sbb
sbbb
fcoms
dec
pop
bound
push
cmpsl
dec
jmp
outsl
lret
xlat
xchg
dec
in
pop
sub
xchg
je
cmc
add
lcall
cmp
mov
shl
mov
pop
cmp
sub
call
sub
das
dec
and
stos
sub
hlt
popa
push
cmp
aad
fadds
aam
add
dec
dec
mov
adc
jg
jge
aad
int3
dec
sbb
gs
gs
gs
in
or
xchg
pop
fwait
mov
fisubl
and
mov
ret
ss
in
fldl2e
pop
xor
jp
adc
hlt
sbb
pop
xor
add
lods
gs
pusha
fsubrp
mov
adc
inc
sarl
mov
pop
dec
movsb
fucomip
aas
and
into
mov
jecxz
xor
adc
fcmovnb
add
xchg
sub
lea
std
xchg
sub
imul
movb
sti
cmp
in
dec
lods
stos
pop
push
imul
loopne
sbb
addr16
and
cli
xchg
mov
lods
rclb
bound
jno
xchg
xchg
pop
jl
lds
out
push
mov
popa
ret
les
adc
dec
daa
shlb
lret
pop
sbb
and
add
mov
hlt
xchg
inc
add
lods
cmp
and
stos
xchg
cli
iret
cmpsl
adc
shll
fldenv
push
xchg
sahf
push
adc
enter
imull
fdivr
cwtl
jae
fldcw
xchg
mov
mov
jmp
fdivs
stc
or
addl
into
lods
test
or
sbb
cmp
sbb
dec
push
push
pop
adc
mov
rdmsr
int3
cmp
testl
orb
dec
ds
in
aas
imul
aaa
jp
sti
mov
std
jo
ds
push
sbb
test
sub
insb
xor
lret
mov
rorb
xor
pop
adc
mov
push
and
aam
stos
int
rcll
ja
inc
imul
inc
adc
scas
out
xlat
push
push
add
xor
repz
jl
lds
lret
out
sub
jno
nop
movsb
je
sub
cmpsl
xchg
sub
cltd
insb
popa
xchg
lret
xchg
mov
jo
pop
in
ficompl
imul
in
add
dec
cltd
stc
cmp
xor
movsb
mov
jmp
cli
js
jbe
into
call
fisubrs
push
and
imul
xchg
loop
leave
test
cld
or
setb
jle
cmp
ja
or
jle
pop
mov
clc
mov
inc
inc
jb
pop
xor
test
rcrb
andl
or
adc
cmp
jmp
ret
in
cmp
cld
xor
sbb
xchg
push
aad
sub
push
mov
xor
data16
xchg
clc
insb
jecxz
pop
add
ret
insl
fsubl
out
dec
pop
add
jg
mov
mov
xor
mov
and
jns
inc
and
jae
sbb
inc
and
pop
jmp
jecxz
stos
ficoms
xor
ljmp
push
and
sub
adc
xchg
hlt
pop
jl
loope
mov
std
and
mov
jmp
push
xchg
es
bound
int
gs
not
and
inc
mov
ret
sti
fstl
mov
lods
dec
cld
stos
ret
xor
fdivrl
lret
fistpl
and
shrl
push
gs
mov
pop
xchg
insb
sub
adc
sarl
dec
mov
mov
in
das
test
push
aas
sub
pop
push
sub
and
add
xlat
pop
mov
xor
cmp
jb
rcrb
xor
imul
push
and
and
lea
out
jmp
in
out
data16
fmull
xchg
mov
icebp
in
xor
aas
push
sub
sub
sub
mov
mov
push
jb
addr16
int3
jl
jnp
test
sub
lea
jne
int3
jle
test
cmp
push
imul
ja
push
dec
pop
jle
cmpsl
mov
adc
lahf
mov
movl
cli
mov
xchg
icebp
and
pop
imul
sbb
stos
arpl
test
mov
mov
adc
cmp
xlat
loop
add
add
data16
es
pop
jmp
pop
sbb
jmp
sbb
pushf
xchg
dec
lret
cmpsb
sahf
shlb
lods
into
and
aaa
movhlps
lcall
or
xlat
or
cmp
cmp
std
test
push
in
lods
cwtl
ss
inc
fidivs
mov
sbb
add
into
add
dec
xchg
or
lds
imul
xlat
dec
in
adc
fisttpl
test
cmp
mov
int3
insl
pop
loope
push
jmp
cmc
sbb
pushf
cmp
lahf
fidivrs
dec
mov
mov
inc
ficoml
xchg
imul
inc
loope
adc
icebp
xor
test
push
mov
sbb
movsl
sbb
gs
mov
cwtl
cmp
mov
repnz
pop
lcall
and
mov
loop
fnstcw
cmp
pop
scas
int3
sbb
es
push
ss
xchg
xchg
mov
pusha
in
call
ljmp
xchg
cmp
jbe
movsl
xor
dec
inc
sbb
dec
push
xor
shl
gs
add
lcall
add
psraw
jb
outsl
cmpsb
or
mov
clc
test
sub
out
fldcw
cmc
ret
cld
push
sarl
sbb
pop
push
imul
cmp
fcmove
jg
mov
adc
push
mov
pop
adc
into
jg
xor
mov
mov
iret
clc
out
mov
out
loop
ljmp
push
pop
add
pusha
jo
cmp
pop
mov
xchg
jmp
daa
je
cld
hlt
cld
outsl
ja
dec
outsl
xchg
push
mov
and
daa
push
test
jbe
in
pushf
xor
fisubl
xchg
pop
add
adc
cmp
clc
add
and
pop
fdivs
fildll
add
inc
lods
mov
int3
push
jle
dec
push
inc
test
out
insb
mov
enter
jne
out
fucom
xor
mov
or
int
ja
push
mov
outsl
cmp
addr16
and
icebp
sbb
test
das
jecxz
pop
mov
cmp
jge
adc
push
ret
gs
shrl
push
xchg
es
pop
aaa
stos
push
sahf
xchg
or
mov
iret
push
sbb
or
push
scas
insb
nop
sti
loopne
negl
sbb
xor
mov
test
sbbl
mov
cwtl
cmpsb
xor
mov
mov
repnz
push
mov
scas
cmp
aad
test
test
imul
movsl
or
mov
push
jnp
push
dec
das
es
xor
and
push
mov
fiaddl
push
sbbb
out
pop
push
sub
in
sub
fwait
sub
repz
outsb
xchg
mov
pop
outsl
in
lds
movsb
mov
int
or
ljmp
push
mov
arpl
and
sarb
mov
cmpsb
hlt
adc
ljmp
mov
aaa
dec
lret
addr16
and
add
push
and
adc
repnz
xor
insl
sarb
mov
jnp
imul
xor
movsl
lock
pop
jecxz
ja
pop
ret
jns
arpl
pusha
mov
lahf
add
push
push
lret
push
jbe
loop
sarl
jge
repz
inc
jmp
push
addr16
cmpsb
jno
or
pop
jmp
push
lcall
and
sub
outsl
int3
movsb
mov
mov
and
push
test
fidivs
cs
inc
loope
pop
scas
shlb
fwait
pop
shlb
dec
dec
daa
push
shll
stos
and
sbb
pop
scas
ja
test
sarb
pop
rcrl
js
push
dec
leave
test
add
xor
scas
pop
rcrl
mov
cmp
adc
jp
xchg
add
in
dec
int
xor
xchg
cltd
loopne
fldenv
push
adc
sub
rcr
inc
pop
dec
jg
adc
enter
insb
pop
push
shrl
clc
lahf
sti
jle
enter
dec
cmp
or
int3
and
scas
ds
int
pop
shll
dec
add
jne
outsb
pop
jmp
cmp
fdivrs
loopne
pusha
test
mov
pop
sub
sbb
sbb
pop
ret
jle
leave
mov
add
sbb
ds
fdivrl
lds
jle
movsb
mov
sub
pop
lcall
int
mov
lret
mov
aas
test
test
sbb
dec
mov
jmp
jnp
pop
rep
test
xchg
jge
xchg
outsb
or
mov
mov
lahf
movsl
jge
push
cmp
lock
sbb
addr16
xchg
xor
cmpsl
call
test
xchg
std
insb
xchg
jecxz
shlb
in
push
fnsave
or
nop
xor
sub
push
mov
in
push
outsb
jo
add
outsb
inc
cld
out
xchg
jg
imul
sub
fcoml
lods
lcall
jnp
stc
dec
pusha
insb
test
lds
or
dec
movsb
push
inc
outsl
jge
cmpsl
push
or
sbb
in
sub
pusha
xchg
cld
inc
sbb
mov
xor
jmp
in
je
lcall
mov
push
push
push
dec
and
jge
mov
fcmovbe
jne
jae
in
popf
jo
lcall
inc
enter
sub
xor
clc
movsb
mov
xchg
dec
xchg
lea
and
imul
out
sbb
inc
pop
clc
cmp
cmpsb
sub
jne
lcall
scas
dec
sub
dec
cmpsl
jmp
sahf
in
cltd
loop
jae
lret
insl
lret
mov
add
jge
in
ret
int3
xchg
pop
mov
mov
sbb
aas
xchg
mov
add
add
repz
aas
leave
xchg
cmp
jae
sbb
pop
fsubl
lock
jge
dec
jecxz
inc
push
add
pop
js
rolb
lret
js
dec
xchg
imul
add
xor
das
inc
subl
xor
and
mov
xor
add
imul
pop
jmp
mov
setl
cli
push
testb
imul
icebp
mov
fmuls
mov
repz
mov
cmp
add
xor
stos
inc
aaa
lret
cmp
dec
inc
insl
cli
cltd
out
int3
xor
inc
test
stos
xchg
mov
inc
xchg
fs
stos
cmp
add
adc
sub
pop
dec
inc
sbb
test
push
aam
jne
es
dec
mov
movsb
dec
ret
jle
outsl
inc
cmc
inc
dec
popf
jge
gs
pop
test
add
in
push
in
and
dec
ret
fmulp
jmp
sub
push
push
inc
mov
jo
sahf
jo
mov
outsl
mov
movsb
clc
jno
cmp
std
fldl
aam
or
cmp
dec
daa
sbbl
aam
pop
divl
iret
or
out
jp
iret
lcall
ds
jp
gs
cmp
clc
shll
das
and
push
aas
or
out
jmp
jl
push
outsl
cmp
getsec
mov
lcall
mov
cmp
jmp
insb
push
ja
fmul
mov
movsb
repnz
add
outsb
repz
cmp
movsb
outsl
and
das
or
out
mov
stc
pop
aam
gs
dec
data16
cmc
inc
into
pop
xchg
xchg
pusha
test
or
mov
xor
push
mov
mov
les
sub
jae
xchg
push
cltd
sbb
push
aas
dec
mov
lock
ss
into
sbb
dec
cmp
fidivrl
imul
sarb
outsb
and
or
or
in
push
lcall
push
and
call
and
adcb
aas
out
lods
in
mov
leave
data16
mov
adc
xor
and
negb
std
cld
imul
clc
int
ja
mov
scas
in
or
pop
cmp
jns
mov
mov
scas
fs
aad
stos
and
jnp
push
inc
dec
cmp
dec
sbb
arpl
mov
mov
mov
pusha
das
dec
push
test
xor
pop
aad
or
jmp
cmp
ljmp
mov
adcb
scas
out
fldl
fnstcw
fcoml
in
in
pop
in
fwait
push
movsb
pop
les
les
popa
cli
into
xchg
pushf
jmp
sti
aam
add
mov
xchg
and
mov
inc
fs
idiv
dec
sub
sbb
adcl
or
mov
add
int3
sub
jns
push
sub
arpl
sub
xlat
lods
and
or
mov
repnz
fstpl
xchg
cwtl
aas
mov
mov
dec
mov
repz
ja
or
adc
mov
xchg
imull
out
pop
gs
sub
std
jmp
pusha
shll
jge
decb
pop
mov
mov
mov
mov
icebp
movsl
ss
mov
fs
and
sahf
sub
dec
pop
js
shl
popa
xchg
addr16
lods
or
loopne
xor
mov
aam
es
mov
jle
popf
mov
stos
cmp
out
lock
inc
ds
xchg
cmp
mov
and
ret
pusha
mov
mov
push
mov
lret
outsb
shrl
scas
cmp
add
shrb
mov
sub
js
mov
ret
cmpsl
and
jle
outsl
dec
push
addr16
sbb
int
push
jle
pop
adc
lcall
loop
int
outsb
adc
and
adc
gs
sbb
inc
push
jne
lds
and
xchg
push
int3
stc
cmp
jg
lds
fmull
jns
add
data16
inc
shll
sbb
mov
xor
mov
fistpll
popl
jae
test
fucomip
cmp
add
adc
and
mov
jns
test
pusha
xor
mov
xchg
dec
je
adc
icebp
movsl
cmpsb
and
or
scas
inc
pusha
call
mov
jecxz
jecxz
mov
rolb
cmpsl
xlat
loop
sbb
dec
rolb
test
popa
sub
mov
xchg
sbb
cmp
aam
xchg
outsl
gs
js
sub
subb
xchg
mov
movsb
dec
lahf
xor
xchg
xchg
push
xchg
or
in
sbb
dec
sub
lret
mov
fbstp
fadd
cmpl
mov
mov
shlb
arpl
inc
orb
push
les
iret
mov
inc
into
or
repz
hlt
xchg
xchg
in
es
scas
sbb
js
jae
ja
test
add
dec
push
mov
adc
xchg
sbb
xchg
jne
cli
and
mov
insl
jo
and
dec
js
xchg
or
push
notb
pushl
and
push
pop
add
sub
jg
xor
and
test
inc
repnz
xlat
stos
inc
sbb
mov
jo
dec
das
mov
or
loopne
shrb
divb
sbb
lahf
xchg
fistpll
andb
enter
arpl
jb
inc
lahf
int
mov
xchg
icebp
jmp
test
add
nop
and
ret
les
ficoml
xlat
je
and
push
in
adc
ret
or
cmp
sbbl
pop
push
or
ljmp
div
stc
dec
xchg
add
xor
stos
mulb
dec
pop
pop
push
sub
add
loop
pop
mov
xchg
mul
xchg
cmp
mov
push
and
push
loope
aad
xlat
xor
xchg
mov
xchg
pop
and
lock
out
fwait
sbb
adc
add
test
into
xchg
fsubr
add
add
push
ss
push
stc
ds
insb
or
lcall
andl
xlat
sub
jmp
movsb
outsb
mov
arpl
leave
and
je
std
movl
mov
pop
push
pop
mov
jb
mov
mov
add
mov
mov
out
dec
cmpsl
xchg
rolb
cmc
shl
paddsw
test
or
sub
mov
jle
pop
cmp
xchg
loope
cli
mov
fbstp
fimull
add
pop
mov
in
imul
aaa
sub
int
mov
jl
dec
popa
insb
unpckhps
into
rcr
pushf
scas
pop
or
int
jl
js
lods
cld
pop
and
add
testb
jle
push
add
xchg
mov
xor
mov
mov
fld
fnstsw
jae
repnz
ret
add
std
dec
add
jbe
outsb
dec
cltd
xchg
sbb
and
mov
ss
jne
mov
aad
pop
sub
cld
add
inc
imul
or
or
loopne
shlb
negl
pushf
add
pop
fsubl
cmpsb
in
in
scas
dec
add
push
orl
dec
int
cmp
int
out
lret
jnp
out
jno
popl
test
inc
sub
mov
inc
mov
pop
cvttps2pi
mov
stos
mov
and
pop
cmpsw
xchg
leave
push
push
sub
out
xchg
aaa
cmpl
in
push
std
std
arpl
fdivrl
mov
jl
test
into
mov
scas
xbegin
fcomps
js
and
fmull
cmp
jg
jle
inc
sub
inc
dec
sub
outsb
lods
pushl
jl
out
imul
inc
sahf
aaa
out
int3
and
std
and
imul
cld
sar
inc
fs
mov
xchg
call
xor
add
aam
adc
js
insl
add
push
ret
scas
or
sarl
fcomps
sbb
dec
out
stos
stos
test
test
or
dec
fsubrs
lret
setne
jg
lds
testb
outsl
cmpsb
ss
stos
cli
sub
mov
xchg
bound
xchg
xchg
cmp
bound
rol
inc
fdivrl
into
addr16
add
sar
dec
repnz
add
sbbb
dec
insl
out
mov
jnp
cwtl
pop
jbe,pn
cmp
cli
adc
movsl
mov
add
pop
push
pop
jp
dec
jbe
aaa
jae
cmpsb
xchg
arpl
inc
in
push
pop
and
mov
test
jmp
and
popf
push
xchg
imul
loopne
add
push
pop
je
btc
mov
adc
xchg
lods
mov
adc
or
push
sbb
mov
jl
push
jns
xchg
les
lea
aam
je
inc
pop
loope
mov
dec
aas
sub
jnp
jns
data16
adc
xchg
adc
into
fst
inc
test
orb
adc
insb
mov
mov
sub
add
xchg
sbb
testl
sub
int
call
mov
adc
popa
or
nop
repz
push
cmpsl
in
aaa
add
ja
stos
or
popa
enter
in
xchg
mov
sub
mov
arpl
push
pop
jo
sub
jb
sbb
xchg
cli
mov
lock
test
or
aaa
or
xchg
mov
xchg
xchg
sub
fdivrl
outsl
pusha
mov
fs
sub
sub
arpl
outsl
fdivrs
cwtl
adc
aas
lods
stc
sub
sarb
in
outsb
andb
insl
add
stos
rcll
sub
mov
out
popf
icebp
mov
or
inc
es
call
adc
je
pop
test
rcl
add
jp
cs
sub
add
loopne
aaa
sbb
in
inc
filds
adc
lret
clc
in
mov
je
pop
ljmp
mov
mov
pop
int3
xchg
fdivr
fs
add
scas
push
enter
and
loop
cld
xchg
and
xchg
pop
mov
jo
push
lret
sbb
popa
nop
mov
cmp
fisttpl
xor
pop
fnstcw
pop
shr
jb
add
or
fildl
push
movsb
sub
inc
stos
mov
add
sub
xchg
jge
loopne
push
or
mov
jnp
in
jne
adc
inc
stc
mov
test
sub
in
stos
scas
cmp
push
sti
inc
push
nop
dec
mov
mov
cli
fists
mov
out
movsb
jne
dec
mov
stos
xchg
and
and
pop
push
push
push
lea
cmp
in
lds
loope
es
mov
jg
fcmovb
lods
jge
loopne
sub
push
cmp
xlat
jne
mov
jnp
xor
pop
dec
hlt
sahf
in
xor
imul
inc
pop
xchg
call
movsl
sbb
xchg
xorb
lods
jecxz
jecxz
jns
shl
std
lock
xchg
gs
ss
pushf
test
sub
sti
rorl
push
ss
mov
das
sbb
mov
cld
into
mov
jmp
inc
dec
mov
pop
add
cld
mov
inc
cmp
sub
in
shl
sub
arpl
roll
scas
cmp
out
push
xchg
pop
cmp
leave
add
in
lds
add
cmpb
test
mov
push
fs
jmp
push
or
cld
jo
insb
pop
aas
inc
cmc
je
pop
jno
mov
ret
outsb
std
sbb
xchg
pop
in
in
pop
lret
jne
lahf
mov
dec
dec
add
push
dec
sarb
data16
fmull
jmp
in
rcr
fisttps
sbb
and
dec
cmp
std
dec
ret
push
insl
xchg
cmp
adc
jno
ror
lods
adc
pushf
jle
ja
push
gs
or
inc
dec
pop
notl
jnp
xchg
int
imul
inc
or
call
pop
insl
mov
lret
mov
fbld
push
or
sbb
or
xchg
rorb
push
rcrb
cmpsl
test
push
in
and
lods
add
cmp
mov
jp
enter
out
in
lcall
dec
mov
lahf
popl
add
iret
mov
sub
xlat
and
pop
adc
movsl
push
mov
fistps
test
arpl
nop
stc
mov
bound
push
arpl
xlat
cld
scas
jmp
jnp
xchg
xchg
xchg
icebp
pop
cmpsb
cwtl
or
dec
js
adc
inc
das
jb
out
mov
mov
enter
popa
out
push
jnp
lret
push
push
scas
xor
add
inc
inc
mov
jmp
sbb
xlat
in
int3
sbb
pop
add
lods
mov
sbb
xor
mov
adc
dec
mov
sti
repnz
mov
jmp
pop
push
pop
std
loope
js
fisttpl
jmp
sub
loope
sub
das
mov
add
test
mov
test
inc
lea
ret
movsb
jmp
cmc
add
push
pop
inc
icebp
push
out
fsubl
arpl
xchg
ds
or
test
fwait
in
sti
mov
sbbb
hlt
sbb
cwtl
mov
sub
jb
push
int3
shll
jbe
dec
lds
sahf
cmpsb
cmp
shll
and
icebp
pusha
sbbb
xchg
xchg
or
mov
mov
data16
cmp
dec
sbb
sbb
cmc
push
jae
shr
imul
test
lret
sbb
xchg
jne
jge
outsl
mov
test
pop
cmp
cmp
pop
jle
nop
loopne
pop
sub
ja
or
cmpsl
xlat
bound
jecxz
push
xchg
push
pop
cs
fldl
iret
dec
pop
dec
mov
outsb
test
je
mov
jo
pop
fstl
or
xlat
mov
add
jo
inc
xor
fisttps
loop
dec
arpl
push
cwtl
repnz
inc
loope
lcall
inc
imul
or
test
dec
mov
mov
dec
movsl
lock
fdivr
cmp
sbbb
out
sub
in
into
and
test
cmpsb
or
mov
enter
jne
pop
idivl
cmc
lahf
sbb
xor
mov
test
inc
nop
mov
ret
jecxz
aad
or
in
lahf
xor
lret
notl
idivb
sbb
pushf
push
xchg
cmpsl
repnz
dec
pusha
fcomp
gs
ret
fildll
dec
inc
das
aam
cmp
dec
mov
roll
cmpsb
movsl
outsl
pop
pop
inc
repz
cmc
dec
inc
jae
mov
cmp
inc
and
mov
daa
inc
dec
push
cltd
xchg
cmpb
cmpl
xchg
mov
sbb
sub
sbb
enter
imul
add
lahf
or
in
in
lock
aas
je
es
stc
xchg
std
std
std
ss
xchg
scas
pop
ljmp
popf
test
arpl
mov
or
dec
pop
mov
movsb
lret
outsb
push
inc
jbe
lret
sbb
data16
addb
int3
jecxz
cmp
clc
jl
cmp
in
ss
insb
and
xchg
cmpsl
enter
inc
or
cmp
mov
int
push
mov
xor
std
shrb
std
mov
add
in
aam
lods
mov
popf
adc
and
inc
jecxz
sub
fsubp
test
fsubl
out
push
mov
jae
mov
imull
jae
push
dec
mov
jbe
pop
lcall
mov
adc
imul
int3
fcomps
mov
into
outsl
outsb
sbb
sarb
jbe
les
xchg
xchg
clc
idivl
xchg
adc
xor
adc
rcrb
mov
push
jno
addb
push
jns
mov
jbe
sbb
push
push
movsb
dec
cli
cmpl
aam
dec
scas
lahf
sub
mov
mov
push
push
sahf
push
inc
ret
fidivrl
sub
pop
outsb
lds
ljmp
sbb
imul
icebp
inc
cltd
mov
xor
rorb
ret
cltd
push
das
push
test
ds
inc
xor
push
push
ret
mov
ja
inc
enter
clc
mov
jne
nop
inc
popa
addr16
in
popa
test
mov
scas
add
jecxz
fprem
ss
xlat
enter
mov
xlat
mov
popa
outsl
dec
jp
inc
xor
inc
or
in
ffreep
pop
push
mov
out
dec
enter
xchg
rclb
or
adc
pushf
das
shrl
push
fdivs
or
movsb
mov
imul
add
or
arpl
and
andb
arpl
add
pop
fcmovnb
inc
cmp
fidivrs
insl
mov
call
andl
jnp
mov
fstp
or
cltd
cld
rolb
sbb
sbb
pop
aaa
movsl
mov
dec
testl
lcall
inc
je
mov
sbb
cmpsl
in
aam
cs
arpl
pop
sbb
cs
fnstcw
lds
repz
in
add
or
jmp
call
pushf
xchg
into
lods
jno
xor
test
out
cwtl
mov
scas
leave
pop
in
push
mov
sbb
mov
lret
add
or
out
mov
pop
pop
fnstsw
shrb
or
sti
popa
cmpsl
mov
add
inc
cltd
cmp
ret
decl
sub
popf
mov
or
repz
fwait
mov
orb
int
and
je
sbbl
jecxz
pop
aaa
in
fsubs
aas
dec
fdivrs
dec
fisubl
add
insb
mov
dec
add
inc
stc
out
lahf
imul
cmp
dec
pop
pop
inc
mov
add
popa
push
mov
orl
push
sbb
mov
mov
movsb
testl
pusha
xchg
js
pusha
jno
adc
ja
inc
loope
lret
std
aad
lds
sahf
xor
push
out
push
mov
push
stos
and
jmp
push
out
sbb
dec
xor
pop
test
neg
cmp
ret
movsl
sub
mov
or
incb
inc
sub
xchg
icebp
mull
xchg
dec
mov
icebp
dec
pop
nop
sbb
xor
jbe
sarl
or
ficompl
adc
nop
cmp
mov
das
adc
movsl
mov
xchg
lret
xlat
pop
cli
subb
in
mov
push
bound
loopne
ljmp
cltd
leave
btl
or
flds
test
pop
cmpb
jmp
jmp
jmp
cmc
outsb
adc
pusha
adc
sbb
cs
mov
testb
dec
add
nop
pop
pusha
jb
mov
stc
mov
jmp
xchg
and
sbb
inc
and
and
push
xchg
scas
mov
add
lar
cltd
inc
pusha
scas
arpl
lock
cmp
mov
mov
sarl
sub
push
mov
jb
add
adc
andl
jo
jno
add
push
xchg
mov
movsl
and
and
arpl
leave
mov
pop
push
fwait
fs
dec
mov
popf
sarl
adc
popf
mov
mov
test
add
call
jmp
imul
lea
mov
sbb
pop
je
mov
jbe
sub
inc
adc
incb
inc
cmp
push
movsb
and
fs
dec
mov
pop
fdivr
rorl
aas
popf
cmp
mov
int
mov
sbbl
in
fnstcw
sahf
fs
cmp
xchg
ja
xor
ret
inc
out
pop
mov
add
addr16
movsb
test
out
xchg
pop
dec
sahf
pop
push
sti
cltd
and
mov
jne
inc
mov
push
push
cmp
xchg
mov
fdivl
dec
aam
movsb
mov
test
mov
scas
into
inc
or
paddw
cs
sub
out
jle
je
aad
in
scas
cld
jno
outsb
xor
jo
cmp
xchg
mov
sbb
pop
daa
adc
push
in
sahf
sbb
fisttps
call
add
inc
mov
cmpsl
sbb
icebp
fcmovne
test
xor
and
mov
cs
jne
and
mov
push
jmp
aam
mov
dec
dec
sbb
pop
sbbb
push
inc
pusha
inc
fucomp
lahf
jmp
imul
rorb
enter
mov
daa
pop
test
ja
aam
sbb
xchg
dec
mov
lock
jo
xchg
imul
sub
ret
scas
jp
dec
inc
cltd
mov
stos
andl
ss
jmp
sbb
mov
ffree
inc
mov
or
add
jo
jae
mov
cmpsl
dec
jno
shl
ljmp
into
adc
jl
sbb
lret
mov
or
aam
sub
jnp
add
int
arpl
shl
dec
cs
pop
ds
rclb
push
fucomp
lret
out
jl
fnstenv
dec
dec
out
jmp
cmp
push
nop
sbb
xor
xchg
popf
sub
jae
sbb
add
xacquire
stc
test
test
mov
adcb
adc
xlat
and
and
int3
mov
dec
push
xor
pop
popf
mov
jecxz
test
pop
sbb
pop
into
adc
mov
cld
inc
lcall
out
xor
out
pop
xor
mov
vsubsd
push
outsb
mov
int
inc
cmp
mov
icebp
les
pop
mov
sti
test
lods
lea
add
or
lret
es
dec
xchg
nop
add
and
adc
cmpsl
ss
pop
xcrypt-cfb
cmpsl
in
sub
rolb
xchg
sahf
iret
inc
add
adc
inc
add
mov
xor
aas
incb
mov
add
sbb
les
dec
and
jbe
fidivs
cmp
mov
stos
loop
movsl
mulb
inc
sub
push
icebp
data16
xchg
mov
cmp
ja
inc
xor
imul
popa
cmp
mov
mov
or
cmpsb
inc
mov
push
std
cmp
inc
rcr
sub
in
xchg
bound
add
hlt
xchg
in
lea
push
aam
clc
int
inc
scas
xorb
mov
jns
stos
push
test
lret
in
jl
aaa
cmpl
loope
lret
in
push
cmp
mov
popa
enter
jge
daa
sbb
mov
dec
sbbl
stos
cwtl
mov
cmpsl
clc
cmp
xchg
out
dec
cltd
pop
pushf
push
mov
insb
sbb
cmp
sbb
in
jns
jne
fldenv
inc
in
xchg
cwtl
rclb
vmovupd
jge
pop
cmp
jne
add
jmp
and
jno
data16
scas
push
pushf
cwtl
add
sahf
xlat
or
adcb
push
jne
sbb
test
jecxz
xchg
mov
inc
and
mov
adc
sbb
test
sub
push
sub
imul
adc
jmp
cli
and
int
imul
sar
push
mov
mov
mov
decb
mov
pushf
out
into
fisubrl
add
xor
sub
subb
addr16
ja
mov
pop
imul
add
cmp
ss
imull
je
outsl
or
cmp
sub
or
xchg
sbb
aaa
int
cli
dec
jle
inc
lea
pop
bnd
orb
push
xor
imul
cmc
js
stos
imul
mov
push
pop
pop
sbb
int3
sbb
mov
popf
stc
fists
fidivs
jbe
and
mov
in
adc
and
into
xchg
pushf
adc
mov
inc
push
clc
outsl
fcomip
ror
mov
movsb
fisubs
and
insl
sahf
ja
adc
and
mov
cmp
rcrl
xor
mov
pop
pushf
dec
pop
dec
push
push
pop
inc
lock
movsb
loope
push
xchg
insb
sti
clc
inc
inc
cmc
stos
std
mov
add
mov
rcrl
add
mov
pushf
xchg
es
vpmadcsswd
xchg
jl
repz
ljmp
dec
mov
sahf
loop
andl
mov
sbb
pop
bound
orl
shlb
dec
pop
outsb
movsl
fs
adc
sahf
xchg
xor
cltd
fstpl
dec
cmp
jae
mov
adc
rcrl
frstor
test
sbb
xlat
sub
sbb
icebp
out
scas
sbb
xchg
insl
out
mov
xchg
jae
lahf
and
mov
add
enter
icebp
add
sbb
adc
cmpsb
call
mov
cs
lahf
es
inc
repz
fwait
pop
jmp
imul
jg
sub
adc
adc
add
xchg
pop
mov
sub
das
mov
lea
in
mov
dec
cld
sarw
nop
mov
xchg
push
pcmpeqw
pop
xchg
into
aam
inc
insb
lea
add
add
or
rcl
sub
mov
lods
cmpsb
gs
sbb
mov
icebp
push
fisttps
div
or
mov
rorl
in
in
cmc
cmp
mov
in
sub
or
in
arpl
cmp
xchg
push
lret
inc
adc
shll
inc
sub
mov
in
icebp
push
lock
loope
movsl
inc
mov
aas
cmp
in
jle
ret
xchg
ljmp
jns
ret
cli
int
ret
ret
push
add
aad
icebp
cmp
scas
push
sbb
das
xchg
jge
sbb
pop
test
insl
add
mov
inc
sahf
mov
lcall
lock
pop
add
sbb
or
pop
daa
xchg
enter
and
xor
push
inc
jns
pop
sub
in
sbb
test
icebp
jns
int
push
sub
sub
fs
je
in
mov
aad
push
lds
ja
dec
dec
cmc
scas
xor
mov
mov
pop
clc
aam
and
inc
lods
sub
or
les
xchg
addl
inc
inc
pop
mov
and
in
jae
jbe
and
scas
and
popa
scas
sub
xor
test
cmp
lcall
add
shrl
or
or
stos
mov
jge
in
pop
in
jae
loopne
out
lret
push
and
test
lods
aad
out
test
inc
enter
out
mov
leave
loop
cli
push
add
or
mov
insl
mov
into
jno
jl
xchg
mov
and
in
and
rcll
test
cwtl
pop
test
cmpsb
ret
inc
shl
insl
pushf
sbb
jl
jbe
enter
or
sub
inc
mulps
das
or
fstps
mov
insl
xchg
outsl
stos
jns
rcrb
ljmp
arpl
imul
mov
fisttpll
or
cmp
sbb
daa
stos
push
fisttps
and
es
mov
pop
leave
mov
fistps
in
cmpsl
outsl
jns
dec
jmp
pop
push
sti
add
and
lret
mov
movsb
cmp
imul
mov
jno
xor
pop
mov
mov
ret
ja
cvtdq2ps
cld
test
movsl
push
rol
popf
or
xlat
jno
pop
mov
or
sub
mov
ljmp
push
mov
mov
idivl
push
mov
test
mov
jmp
dec
sub
fwait
push
xor
rolb
movsb
jmp
fmulp
bnd
cs
sub
cs
sbb
or
pop
aam
ljmp
xor
in
mov
fistps
mov
cwtl
andb
sbb
das
dec
jecxz
push
call
adc
push
mov
push
xchg
sub
test
vpand
and
jnp
mov
jp
fs
mov
roll
mov
mov
dec
test
or
add
cltd
popf
aas
push
pop
rol
pop
push
inc
std
test
scas
xchg
cs
mov
push
outsb
jbe
loopne
sub
add
cmpsb
pop
xchg
and
add
sbbl
ss
cmp
lahf
push
cmpsl
sbb
rcrl
jecxz
mov
pop
mov
pop
push
lahf
xor
or
lock
nop
shll
cmpsl
cli
sub
add
imul
push
aaa
xchg
cmp
pushf
rolb
adc
sub
cltd
test
mov
out
add
jge
inc
punpckhwd
mov
inc
mov
xchg
mov
xor
imul
out
jmp
xchg
lret
xchg
or
xor
sub
sub
xchg
jl
lock
xor
cs
or
cmp
inc
pop
stos
xor
mov
int
pop
mov
mov
or
fcompl
lret
lock
mov
iret
adc
call
sahf
flds
mov
test
out
sbb
fistps
les
push
mov
xor
mov
dec
mov
js
mov
xor
cmpsl
add
das
jmp
add
jbe
mov
xor
je
lea
loopne
test
out
call
mov
adc
in
pop
into
ss
xchg
mov
pop
sub
xchg
test
sub
sbb
js
rcr
xor
xor
add
sub
mov
fdivs
sub
pushf
fldt
ljmp
fs
ret
jae
test
scas
jp
xor
sahf
out
adc
test
lcall
sbbl
cwtl
aas
cld
leave
jg
mov
addb
mov
inc
pusha
pop
inc
jns
icebp
mov
dec
dec
popf
mov
mov
jle
ljmp
inc
cmpsl
pop
subl
cs
inc
pop
xor
lret
mov
repz
dec
cld
adc
loope
ds
xor
mov
xchg
lea
fists
or
dec
push
cmp
cmp
out
call
cmp
bound
fisttps
shl
add
leave
faddp
in
push
xor
fsincos
nop
mov
popa
pop
cs
stc
add
sbb
mov
push
test
jo
cmpsl
adc
mov
fcomp
cmpsl
mov
in
xlat
push
xor
xchg
sahf
adc
iret
lods
or
gs
push
sub
sbbb
xchg
mov
shlb
lds
fiaddl
and
shrl
jnp
jmp
cld
push
jmp
cmp
pushl
sti
sahf
jb
and
jns
xor
ret
xchg
sub
jbe
mov
jecxz
outsl
inc
dec
xchg
jo
dec
xor
add
and
jno
mov
iret
mov
jge,pt
out
adc
in
movsb
cmp
inc
xchg
mov
add
xor
xor
stos
cld
mov
and
int3
jae
sbb
mov
jb
jmp
jb
xchg
push
push
out
pop
pop
mov
cmpsb
dec
test
add
test
mov
dec
jns
lods
mov
xchg
or
inc
popf
xor
mov
or
push
fbstp
dec
xlat
arpl
js
gs
test
insl
ljmp
adc
sub
shll
pusha
mov
stos
cmc
mov
push
xor
adc
sbb
scas
in
dec
xchg
out
pop
scas
push
jae
jle
push
dec
icebp
push
out
sub
call
movsb
and
cmp
rol
cmp
ret
xor
xchg
adc
sub
jl
lock
xchg
das
scas
xor
insl
in
pop
xor
jecxz
sarb
dec
cmpb
cltd
fwait
push
sub
xor
dec
pop
cmp
ja
lret
jns
into
test
in
mov
xor
jns
sbb
sbbb
popf
mov
jb
pop
lret
out
dec
daa
xor
icebp
sbb
pop
push
orl
push
outsb
mov
pop
and
daa
fisttps
cltd
nop
stos
ret
add
mov
call
cld
int3
cmp
scas
incb
fwait
enter
les
and
push
or
xor
mov
pop
test
cltd
movsb
aaa
push
adc
pop
aam
fnstenv
lcall
and
or
jae
in
aad
mov
mov
outsl
ret
adc
add
adc
mov
cmpsl
mov
pop
int
inc
rcrb
jle
mov
int
sub
into
add
les
ja
js
dec
sub
mov
lods
sbb
mov
repz
xchg
mov
add
cmpsl
add
pop
in
dec
ror
leave
pusha
push
push
in
jae
rcrl
lea
and
cmp
xchg
and
cli
mov
lcall
adc
mov
pop
or
mov
xor
out
mov
imul
js
data16
xor
cmp
into
repnz
mov
lret
ds
xchg
xor
jg
fstpt
cmp
or
nop
or
scas
dec
inc
push
sbb
add
mov
cmp
in
ss
sbbb
movsb
cmp
ret
fbld
int
ret
xor
das
pop
jb
mov
or
add
dec
cmp
je
sub
fstl
int
jo
fcomps
inc
mov
push
gs
mov
lcall
lret
pop
lods
xchg
ljmp
dec
pushf
rolb
push
inc
imul
pop
sahf
mov
call
outsl
sub
mov
inc
into
out
js
std
and
iret
arpl
call
dec
add
sub
add
pushf
pusha
nop
add
repnz
push
in
std
push
hlt
pop
dec
push
mov
enter
jmp
xlat
cli
add
mov
aas
scas
mov
dec
sub
rcrb
cmc
lods
fsub
arpl
sbb
aad
xchg
lds
in
ret
aad
or
lahf
cmp
cmp
int
sbb
mov
insl
repnz
lcall
jb
jno
sti
ljmp
xchg
sub
sbb
stc
outsl
fdivr
cmp
imul
sbb
inc
mov
out
hlt
stc
loopne
xlat
cld
xor
fstpl
xchg
lcall
cmp
dec
push
icebp
loope
xchg
cmp
cmp
lcall
mov
xchg
fldcw
inc
pop
jecxz
mov
jae
pop
imul
stos
jle
jae
xchg
icebp
xchg
out
lahf
xchg
stos
push
push
cltd
pop
xor
ljmp
push
int
shll
cmpb
je
lcall
jl
enter
push
xor
out
push
and
loop
sbb
mov
loope
repnz
or
imul
xchg
xor
into
fucom
bound
es
sub
sub
filds
cmp
xchg
pop
jp
mov
push
popa
stc
jecxz
xlat
es
in
clc
adc
mov
cmpsb
fwait
fcmovbe
pop
aad
les
adc
lods
sarb
repz
scas
mov
lret
aaa
pusha
cld
inc
mov
and
or
mov
fiadds
push
mov
push
xor
in
sbb
lds
adc
adc
mov
cwtl
cmc
flds
fcmove
push
xorl
or
iret
jb
fldl
icebp
mov
sub
add
dec
cmpl
test
mov
test
das
push
jmp
mov
mov
mov
shlb
cmc
jle
jo
insb
adc
dec
ds
into
push
fistpll
push
jl
inc
and
fwait
mov
mov
bound
push
and
push
fisubl
dec
lret
cmpsb
out
dec
inc
push
aam
xor
lods
into
cvtps2dq
incb
or
adc
cwtl
fldcw
xor
scas
movsb
shrl
adc
mov
in
add
sub
xor
rcl
sub
pop
pop
lret
clc
pop
mulb
xlat
mov
mov
jo
aaa
pop
xor
je
xor
add
out
jnp
lea
adc
push
out
cmpl
jecxz
mov
test
push
jmp
inc
pop
hlt
gs
imul
dec
lret
push
mov
sub
sub
in
das
adc
pop
addr16
or
inc
fcompl
xchg
xor
in
pop
xchg
pop
sub
orb
aad
out
xlat
jmp
push
adc
test
insb
in
mov
cmc
sahf
push
sti
bound
leave
jmp
ret
mov
push
int3
pushf
cwtl
cmp
mov
movsl
movsb
sbb
popf
jg
dec
fildll
or
dec
mov
fdivr
fsubrs
fs
xchg
cmp
out
mov
dec
stos
add
ret
jb
cmpsb
fistpl
lds
mov
dec
jecxz
or
mov
xlat
inc
mov
xchg
insb
xor
push
insl
push
imul
repnz
jge
sbb
mov
jle
xchg
mov
push
dec
or
mov
sar
cmpsb
inc
iret
pop
mov
ret
mov
push
nop
int
stc
adcb
dec
inc
mov
mov
in
push
mov
jo
ljmp
pop
fiaddl
ret
mov
mov
add
dec
push
fs
xchg
pop
pop
in
mov
arpl
mov
jns
in
xchg
repnz
cwtl
jmp
sbb
lret
mov
outsl
adc
dec
lods
in
rcrb
add
inc
movsl
ret
dec
jo
icebp
cmp
jp
pop
or
inc
ljmp
int3
lods
das
lcall
dec
jne
add
pop
xchg
movsb
push
aad
push
aam
cwtl
mov
nop
movl
xchg
xchg
jmp
inc
rcrl
addr16
sub
sub
xchg
cwtl
insb
xchg
pushf
rorb
and
pop
xor
push
enter
jl
sbb
int
and
jne
daa
cmc
mov
dec
pop
inc
jo
mov
icebp
sub
rcrl
arpl
sbb
test
jae
popa
std
mov
mov
mov
add
push
mov
mov
sbb
incl
mov
std
xor
rclb
xor
out
clc
cltd
cmpsb
inc
adc
jp
and
sahf
and
pop
cld
loopne
insl
test
mov
cmp
mov
jp
popa
daa
add
push
and
and
adc
sub
repnz
fsubrl
add
mov
popa
jbe
push
hlt
lds
or
leave
loopne
out
push
add
push
xchg
or
movl
fs
push
or
sahf
pop
xchg
cmpsl
loope
pop
pop
jnp
pop
cmp
xchg
pop
scas
mov
popl
xchg
xchg
cwtl
jl
pop
lods
push
enter
pop
cld
jecxz
shll
movsl
mov
adcb
sub
dec
push
data16
push
sti
pushf
adc
sbb
add
jb
mov
stos
mov
sbb
clc
add
rcl
mov
testb
or
popa
test
out
cmp
xchg
js
icebp
test
in
movsb
cmpsb
jmp
mov
aaa
adc
xchg
ljmp
lock
pop
es
fisubrs
jle
cmp
test
arpl
mov
fimull
xor
sahf
imul
test
push
cli
jecxz
push
xor
sbb
lock
bound
aaa
js
pop
mov
mov
push
jge
mov
pop
lret
cmpsl
inc
xor
daa
pop
cmp
push
test
lahf
std
xchg
push
cld
lods
jnp
cmpsb
inc
aam
mov
test
push
mov
mov
addr16
push
jbe
ficomps
in
push
mov
ss
sbb
cmp
out
inc
es
mov
push
jg
inc
xchg
lock
push
push
pushf
in
es
fildll
sbb
and
lret
rcrl
dec
mov
dec
xchg
clc
sbb
fsts
and
dec
mov
loope
mov
mov
inc
inc
fisubl
jnp
fists
adc
or
shlb
insl
imull
aaa
xor
sbb
int
sbb
add
pop
mov
rclb
mov
cmpsb
lock
cltd
mov
adc
sub
insb
cmp
movsb
fnsave
push
xchg
movsb
cmp
ficompl
ret
stos
popf
jmp
dec
shr
jnp
sub
into
jl
ja
push
add
mov
out
jp
push
pop
pop
or
mov
leave
cld
int
adc
sub
aam
push
xchg
adc
scas
fnstenv
pop
push
dec
mov
ljmp
mov
lahf
mov
cltd
push
test
enter
sub
je,pn
sub
pop
inc
adc
aad
jmp
mov
in
cmpl
nop
fwait
rolb
mov
or
mov
mov
or
adc
mov
stos
mov
ljmp
popf
test
push
sbb
lock
je
sti
sbb
or
jl
jo
adc
push
jns
movsl
sub
rcl
test
addl
insb
outsl
xchg
stc
in
lea
jecxz
fidivrl
mov
sarl
xlat
mov
push
xchg
xlat
addr16
fadd
cmp
push
mov
pop
js
xor
pop
mov
sbb
xchg
inc
ret
cmp
or
xchg
sbb
xchg
shll
lcall
jne
fisttpl
cmp
aad
push
stos
rorb
mov
in
adc
add
stos
clc
and
es
xchg
push
lret
jmp
addr16
lret
or
pop
add
push
jmp
gs
int3
arpl
jo
fwait
jg
pop
sbb
cltd
and
inc
sub
es
lahf
cmp
or
jne
ja
inc
inc
js
pop
cltd
or
data16
sbb
fimull
arpl
shlb
lea
mov
das
addl
or
mov
cs
push
jl
inc
push
xchg
cli
or
jl
sub
in
xor
rolb
xchg
sub
sub
xchg
iret
sbb
xchg
lahf
push
pop
pop
movsb
pop
cld
jnp
fidivrs
sbb
mov
lds
pop
xchg
out
ss
sbb
sti
xchg
js
mov
pop
sti
hlt
adc
push
imul
loope
xchg
out
shufps
sbb
cli
pop
leave
mov
scas
stos
cmpb
aam
fcoms
dec
ret
rorb
daa
cmc
or
inc
ja
ja
dec
inc
sub
pop
push
les
push
test
add
push
jg
dec
mov
and
push
sbb
pop
jp
and
aas
ja
call
repz
test
sbb
and
push
adc
xchg
movsl
cmp
stos
sub
pop
xchg
jle
push
and
lea
ljmp
sub
testb
sbb
dec
fisubs
sti
pop
test
push
cld
xchg
inc
xchg
xchg
out
push
cmpsl
test
mov
mov
xor
inc
add
cmp
ja
mov
sbb
insl
jnp
or
lret
icebp
iret
dec
es
pop
pop
hlt
mov
das
ss
cmp
dec
jmp
pop
dec
inc
xor
mov
ret
movsb
mov
into
popf
cmpsb
mov
test
pop
xor
stos
enter
fsubrs
sub
ficoml
cld
and
lcall
push
ljmp
or
and
adc
lds
pop
mov
mov
loopne
jnp
xor
out
sub
jnp
mov
scas
dec
push
add
flds
flds
sbb
push
push
sub
push
dec
or
shld
pop
repnz
leave
lret
jl
jle
std
cltd
jbe
jae
adc
cmpl
mov
mov
push
pop
sub
stos
push
or
lret
mov
in
add
fwait
mov
push
mov
add
ljmp
fimull
outsl
clc
lahf
mov
icebp
cld
hlt
outsb
push
xchg
cli
fstpl
inc
mov
cwtl
fistpl
mov
cli
cmp
sub
xchg
fsubl
sbb
jge
dec
popf
or
jl
lods
adc
fs
adc
insl
push
sub
imul
jb
push
lret
and
enter
sub
adc
xor
jns
ja
xor
cwtl
leave
pop
fdivl
mov
mov
insb
dec
cli
loop
mov
arpl
lret
das
add
xlat
insb
or
mov
rcrb
ds
shrb
addb
popa
dec
jl
jne
or
repz
sub
push
dec
mov
aaa
enter
rcll
add
push
adcb
aas
cmc
negb
xor
sahf
or
add
ds
in
xchg
fistpl
fldcw
jnp
in
cmpsb
dec
pop
push
cmpsl
divb
inc
pop
dec
nop
xchg
js
dec
add
cli
lods
push
js
jp
cmp
mov
cli
icebp
mov
roll
js
int3
push
or
and
repz
push
push
lods
fs
xchg
and
xchg
fdivrl
fs
pop
inc
cmpsb
call
outsb
jmp
fadds
pop
gs
push
xor
mov
mov
test
adc
lods
mov
cli
jge
notb
ljmp
jb
pop
dec
test
int3
sbb
aaa
push
pop
mov
jge
mov
or
add
sbb
push
test
daa
fwait
je,pn
mov
xchg
sub
subl
adc
push
rorl
jne
movsl
cli
ss
int
leave
imul
fcoms
iret
push
jns
xchg
aas
and
into
xchg
leave
sub
sub
lds
push
lods
data16
lods
xchg
loop
insb
cmp
aaa
dec
push
or
jae
lcall
cmpsb
jne
sbb
push
lret
add
or
mov
push
scas
xchg
std
fsubl
sbb
mov
sbb
in
cld
leave
jg
orl
ror
in
mov
repnz
bound
push
add
pop
dec
pushl
pop
daa
aad
jp
bound
cmp
push
sub
das
xor
lahf
andps
xchg
sbb
pop
jecxz
mov
addl
pop
sub
loopne
jnp
jo
xchg
int3
lock
jecxz
adc
push
jmp
inc
sub
cmp
notl
je
xor
xlat
int3
mov
lret
in
sahf
push
mov
roll
es
mov
inc
movsb
mov
cmp
and
inc
or
cmpsb
fsubrl
cmp
pop
xchg
mov
out
or
imul
lfs
xor
pushl
push
sbb
add
pop
in
int
cmp
adc
ror
sbb
mulb
add
insb
fsts
add
sbb
mov
sbb
push
cmp
out
pusha
adc
mov
jmp
lock
int3
orb
gs
daa
xor
xchg
jb
mov
stos
fists
mov
xchg
add
es
push
sub
adc
lahf
mov
xor
cmpb
push
lods
cmpsl
test
lock
sbb
xor
ja
pop
pusha
or
and
pusha
pop
xchg
jno
fidivs
pop
xchg
daa
scas
push
sbb
or
and
and
imul
or
fistps
movsb
fdiv
mov
jl
or
out
lcall
jmp
or
jno
pop
hlt
push
inc
fmuls
jo
shlb
std
stos
mov
lds
mov
xchg
scas
lods
shll
es
fists
scas
sbb
jle
je
cmp
xchg
addr16
mov
add
inc
out
or
test
test
aam
rcrb
daa
lret
adc
and
add
inc
xchg
mov
cwtl
test
push
pop
cmp
mov
adc
in
push
imul
dec
jo
lods
rcrb
sub
and
gs
inc
xor
lds
and
cld
shlb
xchg
in
xor
and
sbb
mov
ss
xor
dec
xchg
roll
cmp
mov
or
sbb
les
mov
cmp
pop
movsl
adc
lods
popf
ret
mov
jecxz
cmp
push
ret
faddl
stos
push
add
int
negl
leave
fcomps
lods
mov
xchg
in
inc
xor
movsb
pop
cmpb
or
pop
mov
lret
or
xchg
mov
adc
call
and
dec
sbb
fsubl
push
stc
mov
dec
mov
pop
ja
in
loope
mov
push
imul
pop
mov
pop
jp
or
push
jecxz
xor
lods
mov
dec
xchg
xchg
rorb
jae
hlt
dec
dec
sub
mov
sbb
push
xor
cmp
ret
add
pop
sbb
mov
xchg
gs
pop
jbe
push
xor
xorb
add
scas
mov
in
stos
mov
mov
nop
scas
orb
insb
jmp
ds
aam
sarl
push
lea
sub
out
sbb
cld
push
gs
mov
imul
fidivrl
stos
jne
and
push
xchg
push
popa
insb
data16
bnd
mov
fstps
pop
mov
fistpll
or
mov
mov
ds
adc
jb
rcr
sbb
xchg
inc
jns
iret
mov
jb
push
lea
enter
adc
imul
stos
outsb
pop
in
jg
adc
ficoml
pop
jns
pop
int3
sti
dec
std
xor
add
add
inc
dec
and
adc
in
bound
mov
adc
mov
cmp
push
pusha
das
popl
inc
ret
mov
lods
xor
jp
mov
push
and
shlb
xor
adc
cmp
cmp
add
test
sub
imul
pop
cmc
pop
shrb
js
inc
xchg
mov
sbb
fldcw
repz
in
sub
mov
push
hlt
or
daa
xor
sub
lret
lret
mov
mov
test
mov
fcomi
cmp
sub
and
sub
jns
outsl
pop
sbb
jp
loope
loop
sbb
pop
popf
xchg
aam
inc
xchg
cmp
aaa
inc
push
pop
dec
inc
scas
cmp
push
inc
clc
push
sub
mov
cli
jne
das
jl
in
add
pop
push
pop
imul
push
movsl
xor
fstpl
adc
mov
jbe
xor
fwait
cli
stos
or
cmp
pop
jp
inc
and
or
dec
data16
frstpm(287
in
push
sbb
imull
push
dec
and
nop
push
push
pop
xchg
mov
aas
jp
scas
fmul
or
jo
jnp
mov
outsl
mov
mov
cmp
addr16
sub
repnz
inc
js
or
dec
mov
int3
push
bound
pop
sbb
jl
mov
add
jl
mov
js
arpl
mov
lods
mov
adc
add
and
jle
ret
test
xchg
leave
mov
dec
ret
and
out
sub
and
cmpsl
jl
jbe
jecxz
sarb
sarl
or
dec
int3
mov
iret
mov
cmpb
rolb
sbb
data16
pop
gs
push
mov
dec
fisttps
addr16
aad
lock
inc
push
jb
idivb
cmpb
pop
rorb
lret
sub
insb
adc
sbb
inc
inc
jno
mov
inc
inc
cwtl
movsb
and
sub
arpl
jnp
orb
cmp
fcoms
scas
xor
jns
int3
pop
andb
jle
pop
pop
ds
mov
test
rcrb
rclb
gs
xadd
cli
xchg
pop
and
mov
push
js
sbb
data16
cmpsb
mov
add
inc
jle
and
add
cli
imul
pop
lods
imul
and
mov
inc
fcoml
fnstcw
adc
push
push
pop
sbb
cmc
arpl
out
in
push
xlat
jo
stos
stos
cltd
ss
pusha
sbb
stos
lods
mov
or
sub
push
or
jg
pop
add
jmp
push
arpl
aad
pop
shrb
sub
lahf
addr16
adc
jle
ss
pop
push
add
into
mov
and
iret
jbe
xchg
or
nop
cmp
xchg
dec
in
repz
mov
mov
rcrl
ljmp
sub
jbe
mov
fwait
popf
fwait
push
mov
xlat
ret
xor
lahf
push
subl
cwtl
ss
sub
iret
cmp
aam
sbb
movsl
jmp
push
sub
vsubsd
shr
cmp
mov
fidivs
add
pop
aam
out
add
sbb
ss
adc
cmp
mov
push
push
push
add
dec
repnz
fildl
imul
push
adc
add
mov
dec
pop
xor
adc
ds
jo
inc
cmp
clc
out
call
psubd
dec
aad
push
movsb
notb
adc
push
in
fdiv
out
inc
jge
fldl
test
fbstp
std
shll
pop
insl
jmp
or
cmp
imul
sbb
mov
pop
lock
int
div
pop
dec
inc
into
sub
xor
push
inc
inc
sub
pop
mov
inc
pop
dec
push
into
sti
sahf
les
movsb
cmc
dec
stos
cmp
xchg
jl
lock
adc
push
mov
cmp
bound
fs
pusha
jle
jp
test
add
fs
popa
mov
fmul
movsl
cmpsb
lods
cwtl
and
add
cltd
xchg
cmpsb
add
lock
and
sbb
clc
pop
aaa
add
adc
push
hlt
jae
xor
or
sub
push
stc
xchg
call
inc
dec
cmp
jae
sub
jo
mov
jg
call
sub
xchg
and
mov
cmp
inc
outsl
pop
popf
push
mov
and
push
lods
mov
test
inc
xor
in
pusha
push
in
push
mov
adc
inc
xchg
xor
xor
or
in
inc
cmp
xor
ds
lods
mov
mov
loopne
iret
negb
lahf
xchg
es
dec
adc
xchg
in
inc
mov
test
lret
mov
and
inc
insl
test
in
mov
sbb
or
sbb
les
mov
popf
or
cmpsl
jb
sahf
je
lea
pop
test
jnp
add
xor
addr16
mov
loopne
xor
lret
pushf
lock
test
jnp
lods
aad
sub
mov
xor
mov
pop
cmp
cltd
or
mov
bound
push
into
repz
mov
cwtl
enter
mov
inc
mov
hlt
insl
sahf
mov
dec
pop
pop
jecxz
mov
aaa
rolb
mov
push
fdivs
inc
sub
xchg
mov
sbb
faddl
dec
inc
mov
jmp
lods
fwait
sbb
aam
adc
iret
fmull
adcb
test
mov
gs
xlat
out
cmp
sti
push
or
xchg
scas
mov
pop
loopne
and
add
mov
or
lea
mov
mov
dec
pushf
les
sahf
int3
add
cmp
outsl
and
sub
pop
nop
adc
xor
adc
pusha
stos
ja
xchg
je
inc
xchg
and
jmp
and
jge
cwtl
mov
sbb
cmp
out
std
loop
mov
or
leave
sub
pop
in
cmpsb
in
cmpl
scas
pop
testl
ret
enter
jb
lea
or
push
jno
sbbb
add
cmp
test
jp
adc
clc
sub
xor
outsb
mov
aam
jns
cli
in
loop
push
inc
xor
outsl
push
iret
ss
xchg
js
mov
push
fxch
jecxz
cwtl
mov
mov
stc
cwtl
popa
js
inc
insl
mov
jecxz
and
sbb
in
movsb
jle
fldpi
xchg
xchg
out
inc
test
enter
lret
cli
xor
xchg
imul
mov
je
mov
mov
or
fsubs
push
push
mov
push
in
and
and
arpl
stos
or
inc
sub
jmp
xchg
inc
push
ret
dec
or
xlat
push
bound
dec
push
xor
xor
cmp
cwtl
mov
pop
cmp
dec
pusha
stc
insl
pusha
xor
mov
cmp
add
testb
sbb
inc
lea
jl
pop
dec
inc
dec
cmp
je
les
clc
mov
sub
mov
test
fsubrs
xor
or
test
adc
pop
adc
cli
push
cmp
mov
sbb
inc
adc
mov
mov
jmp
inc
lods
jge
adc
jns
sub
add
leave
scas
add
lods
repnz
popf
dec
adc
xlat
clc
pop
or
aad
clc
lret
cltd
stos
divl
ljmp
xor
pop
loop
push
jmp
in
cmp
out
mov
aad
lahf
cld
jmp
je
lret
or
and
jecxz
cmpsl
push
fidivs
add
js
adc
and
arpl
add
std
loopne
ljmp
outsb
mov
loop
dec
outsl
sub
leave
add
sub
es
dec
stos
mov
data16
jae
or
mov
nop
jb
pop
adc
push
out
scas
pop
and
insl
stc
cmpsl
mov
rol
cmp
test
mov
dec
arpl
shrb
jno
sti
sarl
jne
ss
sti
div
cmp
cmp
fwait
jns
jl
bound
add
cld
cmc
daa
cmpl
cmp
mov
dec
movsl
xor
adc
dec
dec
loopne
xor
movb
xchg
sub
mov
rorl
mov
cmc
fldt
sbb
dec
leave
arpl
enter
xchg
and
rolb
mov
jmp
adc
aad
lds
cmpsl
push
movsb
out
mov
aaa
dec
mov
xchg
sub
sbb
leave
aad
cmc
cmp
sub
pop
aam
sbb
rorb
or
or
lcall
dec
xor
adc
dec
push
loopne
push
push
add
push
mov
andb
out
and
jbe
popf
icebp
mov
mov
pop
test
sbb
sub
adc
xchg
ljmp
or
stos
sub
dec
clc
das
imul
enter
repz
cmc
inc
call
arpl
outsl
insl
pop
pushf
shll
cltd
inc
loop
data16
xchg
insl
and
dec
fstpl
addr16
mov
jb
adc
or
sahf
aam
insb
sub
xchg
jae
loopne
ja
sbb
in
pop
dec
xor
cmp
jge
xor
bound
mov
xchg
or
jae
outsb
outsb
fisubs
repz
push
pop
movsb
cld
dec
mov
mov
je
popf
pop
pcmpgtw
in
mov
sarb
daa
leave
adc
adc
sahf
dec
lcall
in
dec
push
movsl
xchg
ss
mov
into
xor
adc
lds
xor
mov
lcall
insb
in
cvttps2pi
adc
mov
add
hlt
mov
stc
cmc
scas
ss
cmp
insb
pop
push
popf
lods
dec
mov
sub
js
and
fisttpl
es
mov
push
mov
fsubrl
pop
mov
mov
or
mov
mov
jl
sbb
adcl
lods
xchg
pop
in
add
mov
pop
jnp
xchg
into
fstpt
xor
or
cltd
jl
cltd
sub
inc
add
icebp
jp
lock
pop
stos
dec
jle
dec
mov
push
adc
mov
pop
les
and
pop
mov
loope
push
push
lcall
repz
dec
xchg
int3
testb
pusha
js
shl
dec
xor
cmp
push
push
jecxz
mov
das
fists
stos
movsb
cmp
mov
sub
fwait
scas
mov
inc
pop
adc
inc
sub
sub
pop
mov
insb
fiaddl
movl
and
movl
add
cmp
xchg
cmp
in
stos
pop
xchg
xchg
sub
xor
sub
sub
cmp
mov
fisttpll
and
and
mov
cld
pop
dec
mov
fstps
int
lock
mov
in
mov
sub
lods
jb
jb
add
cwtl
loopne
mov
popf
push
push
xor
inc
sbb
int3
dec
enter
xor
das
test
imul
adc
xor
inc
jmp
ja
fsubrs
xchg
cmp
xlat
pop
out
jno
pop
sbb
or
jbe
bound
xchg
loopne
lods
pop
sarb
jle
and
inc
jae
and
dec
test
xchg
adc
push
xchg
sahf
movsb
in
mov
push
cltd
es
add
xor
sub
add
mov
sbb
adc
cltd
mov
cmp
pop
aas
lods
loope
mov
mov
jle
shr
pop
sub
test
dec
dec
sub
pop
mov
or
pop
fidivs
cmp
ss
xchg
js
mov
mov
loope
in
pop
lret
jo
movsl
sbb
mov
xchg
iret
xlat
fldenv
aad
mov
scas
jno
movsl
test
add
iret
cmp
pop
test
xchg
ljmp
mov
jns
les
jg
sbb
or
cmpsb
outsl
cltd
pop
arpl
std
icebp
in
mov
mov
ds
push
xor
xchg
outsl
shll
sbb
mov
xor
cmp
sbb
add
mov
pop
imull
insl
rorl
inc
sbb
push
push
and
mov
xchg
cmp
cld
push
xchg
cmp
test
xor
out
mov
stos
incb
ljmp
xchg
add
mov
pop
clc
repnz
js
or
xor
xchg
mov
adc
xor
dec
scas
mov
sahf
insb
mov
xor
scas
jmp
jne
testb
or
fadds
mov
jg
loopne
out
adc
ficomps
sbb
daa
cmp
int3
mov
cmp
pop
inc
sbb
js
push
and
ss
mov
jnp
es
mov
sbb
imul
in
mov
pop
or
push
push
cmp
repnz
sub
outsb
push
dec
dec
cs
push
mov
push
adc
int3
stos
nop
lock
gs
fxch
testl
sbb
call
shr
shl
push
fistps
popl
lea
mov
mov
adc
aam
sbb
ja
lret
adc
fists
dec
dec
push
insl
ficompl
fs
lods
out
mov
xchg
test
pop
push
sub
push
data16
dec
adc
out
dec
mov
jb
test
data16
inc
inc
push
movsl
fsubs
sbb
push
jnp
sahf
adc
or
sbb
subb
popa
push
add
addr16
mov
lcall
dec
outsb
xchg
lds
ljmp
mov
in
dec
or
or
repz
or
jo
fs
in
and
push
xchg
cmp
rclb
movsb
aaa
out
inc
and
cmc
mov
inc
xchg
sbb
imul
repz
dec
xlat
enter
cmpsb
loope
cmp
daa
mov
ds
mov
pop
mov
push
push
pushf
fdivrs
sub
or
ret
jns
lcallw
clc
xor
stc
push
jbe
fwait
xchg
xchg
mov
and
data16
push
clc
jnp
cmpl
data16
int
lods
add
nop
je
xchg
stc
lahf
and
push
stos
mov
xorl
js
insl
daa
out
in
fistl
jecxz
arpl
daa
mov
sbb
jecxz
and
sbbl
mov
sbbb
stos
fidivl
negl
inc
mov
out
push
loope
cmpsb
bound
lods
imul
and
push
push
test
mov
push
xlat
dec
test
sahf
stos
cmp
jae
mov
and
cmc
jno
push
jno
insb
xlat
mov
dec
popf
enter
jae
lods
xor
cmpsl
xor
mov
mov
into
jb
data16
mov
fstl
lds
jl
pop
xchg
lahf
out
mov
mov
sbb
and
add
jle
les
fcmovnu
sub
push
jne
push
or
pop
test
fisttpll
test
push
lret
mov
lea
stos
mov
popf
push
xor
xchg
fcoms
sbb
lock
test
mov
insl
stos
push
push
adc
push
dec
stos
mov
daa
lds
cli
cs
sbb
in
and
fistps
je
push
addb
sbb
dec
xor
mov
pop
lods
sbb
adc
xchg
out
jno
mov
adc
sub
call
push
cmp
xor
lea
or
fwait
or
cmpsl
js
xor
aam
push
sbb
data16
mov
clc
shll
push
jbe
inc
stc
outsb
pop
mov
outsl
and
sub
push
pop
cmp
and
fisttpll
mov
mov
mov
push
jnp
or
inc
pop
lods
rcr
mov
out
loopne
mov
fsubrs
sub
sbb
scas
mov
mov
add
xchg
pop
andb
cs
cmp
xchg
jle
pop
mull
pop
jl
ret
test
lret
push
in
sub
enter
or
sbb
in
fisubrs
mov
dec
dec
ret
add
sub
ja
cmp
cmpsl
sub
add
xchg
adc
test
pop
xor
lock
hlt
sub
or
pop
pop
or
xchg
adc
jo
loope
cmpsl
and
filds
cmp
bound
out
push
and
divps
adc
je
out
loopne
lock
stos
movsb
sub
dec
stos
rclb
add
loop
xor
out
push
inc
push
les
adc
loop
ljmp
imul
cld
add
mov
xchg
and
bound
inc
out
push
daa
mov
jbe
fldt
or
add
rorl
iret
es
fdivl
jp
xlat
cmp
mov
push
call
and
cmpsl
rcrb
in
mov
lret
sub
aam
adc
pop
movsb
inc
sub
lods
test
out
mov
imul
lds
fcompl
sbb
jl
jle
sahf
cmp
aas
into
jp
shrl
std
loop
pop
ja
into
in
mov
call
jmp
imul
jg
sub
stc
out
test
mov
ret
xor
pop
dec
push
fwait
nop
arpl
icebp
js
mov
leave
xchg
fistl
rclb
stos
hlt
test
inc
int
scas
jnp
sbb
mov
ljmp
inc
mov
jbe
enter
sbb
outsl
test
in
je
sti
add
out
jbe
lock
mov
pushf
insb
adcl
adc
test
jnp
jg
adc
xor
cmpsb
sub
mov
push
and
dec
outsl
pop
xchg
push
data16
or
jge
addb
aas
into
out
stos
leave
add
sbb
jl
xor
mov
mov
ljmp
push
pushw
jns
or
dec
in
aas
xorl
or
dec
shlb
imul
bswap
mov
lcall
xchg
mov
fidivrs
int3
pop
dec
mov
pop
movsb
mov
mov
inc
movsb
dec
jmp
loope
inc
mov
in
sbb
xor
xor
adcl
mov
loope
cs
or
lcall
mov
aad
lret
enter
sarb
divps
repz
mov
push
cli
in
pop
add
ss
mov
xchg
dec
and
jo
push
leave
cli
movsl
pop
xchg
cs
ficoml
cltd
idivb
mov
mov
or
mov
mov
xorl
leave
push
ljmp
mov
fnsave
pop
lods
call
cmp
lahf
mov
mov
nop
pop
fnstenv
jecxz
shlb
push
pop
fwait
call
jp
in
sub
sahf
test
xchg
mov
incl
xchg
scas
fisubs
xorl
seta
mull
push
jmp
jmp
repz
cltd
dec
xchg
dec
in
cs
jnp
pop
pop
adc
xor
ljmp
popl
jmp
ret
and
loop
mov
lret
mov
stos
mov
icebp
nop
repz
loop
cwtl
add
jbe
inc
or
mov
addb
push
orb
dec
adc
push
test
push
push
mov
mov
push
loopne
das
pop
jns
test
inc
mov
pop
jecxz
mov
xchg
pop
std
les
es
xchg
mov
mov
shl
or
or
aam
cmc
insb
xor
mov
jo
aad
inc
inc
hlt
lds
in
in
jmp
or
jo
insb
mov
or
lea
and
or
mov
div
pop
pop
cmpsl
popf
cmp
cmp
das
fimull
push
xchg
pushf
je
rol
xorl
movsb
pop
jnp
stos
aad
sahf
fidivrl
daa
syscall
sti
sbb
push
xchg
inc
stc
insb
out
iret
pop
pop
dec
out
sarb
and
mov
adc
loopne
sub
not
shll
loop
das
pop
pushf
xor
mov
call
stos
rcll
hlt
js
mov
cmp
lods
xchg
xor
repnz
in
sti
scas
fwait
aaa
pushf
jo
je
out
dec
iret
dec
in
sub
je
push
cmp
or
or
mov
notl
hlt
test
push
int
ficoms
movsl
jecxz
or
ss
xor
xchg
adc
push
sbb
gs
mov
les
iret
clc
pop
mov
jo
cmp
adc
sub
notb
sub
sahf
cmp
mov
push
cmp
push
outsb
mov
stos
or
inc
pop
xchg
push
xlat
add
or
pusha
pop
insb
ja
pop
fisubrs
add
in
and
sahf
test
jo
in
lret
mov
int
mov
test
cmpsl
dec
mov
fisubs
inc
jno
out
dec
int3
push
push
pusha
femms
inc
es
add
mov
jge
insb
mov
xorl
daa
sbb
push
sar
xor
mov
in
mov
and
loop
xor
xor
addr16
fisubrl
in
orb
loope
pop
push
push
add
fdivrp
mov
popa
inc
gs
nop
ds
push
sub
aas
test
popa
adc
adc
inc
rcll
movsl
rol
sub
pop
in
mov
ljmp
jecxz
sti
pop
popa
inc
into
fisubrl
addr16
pop
push
insb
js
or
mov
push
mov
push
mov
in
lods
cmp
nop
xchg
nop
push
loope
and
stc
in
subb
clc
pop
rorl
sbb
hlt
mov
adc
inc
inc
jae
push
push
dec
cmpsl
mov
imul
call
icebp
imul
cs
pop
js
sub
int
or
cmpsl
fistpl
ljmp
pop
push
sub
int
leave
vmovdqa
clc
arpl
std
lret
adc
and
clc
fistpl
inc
sub
adc
and
popf
lcall
push
cmpsl
mov
fucomip
add
push
cs
scas
lods
sub
dec
mov
fdivrl
and
loop
rclb
cmp
pop
add
mov
jb
mov
xor
add
pushf
xor
push
dec
aam
sti
stos
push
push
xchg
popa
jmp
std
addr16
lds
in
mov
sahf
nop
mov
test
jno
iret
sub
repz
sti
xchg
ret
pop
cmp
roll
outsl
shll
repnz
xchg
or
call
roll
fidivrs
jecxz
bound
pop
mov
sub
mov
repz
lret
and
pop
pop
ficomps
jb
icebp
lods
pop
and
in
pusha
loopne
xlat
rorl
in
test
movsb
add
gs
xchg
dec
add
lock
popf
lock
xlat
mov
mov
imul
pushf
int3
bound
sahf
int
mov
ret
aad
sub
dec
pop
pop
cmpsl
sub
iret
stc
dec
jle
cmp
pusha
pop
movb
mov
mov
push
pop
fbstp
sahf
add
jb
inc
mov
adc
stc
mov
mov
sahf
in
fiaddl
stos
add
sub
pop
notb
lcall
orb
popf
ljmp
iret
xor
and
pushf
loop
fmull
sub
pushf
jmp
add
movsb
arpl
push
push
loopne
pop
mov
insl
push
inc
jle
mov
or
sbb
xchg
cld
in
rorb
adc
mov
mov
jae
aaa
or
xchg
xor
sbb
add
push
loopne
mov
xchg
fstpl
imul
xlat
enter
xor
sbb
test
int
xchg
add
or
adc
incb
sbb
inc
sub
jg
or
mov
cli
xlat
test
pop
inc
and
or
xor
aas
sub
in
jb
lcall
cmp
xchg
scas
orb
and
outsl
aam
ret
fs
imul
data16
cmp
out
movsl
add
pop
fstpt
aad
addr16
adc
iret
andl
call
addr16
mov
mov
inc
pop
mov
mov
jns
sahf
adc
outsb
addr16
ficoml
shl
sarb
out
sbbl
ljmp
jp
fwait
stos
pusha
negb
adc
mov
mov
pusha
mov
mov
cmp
cmpsl
ffreep
xchg
test
mov
cmp
insb
sti
adc
push
push
push
and
mov
loopne
fsub
xchg
cmp
sbb
popa
mov
push
jne
test
int3
xor
sarl
adc
cld
andl
jb
rclb
fmulp
inc
hlt
test
lahf
dec
mov
enter
repnz
adc
mov
dec
popf
add
pop
mov
pop
arpl
lock
pop
popf
insb
into
push
dec
pop
mov
sub
aaa
stos
pop
mov
mov
cmc
sub
cmp
arpl
cmc
xchg
add
nop
ljmp
cmpsl
lret
dec
xlat
xor
inc
fwait
addr16
test
push
outsl
and
jl
lods
pop
mov
mov
rorl
jecxz
or
sti
shrb
push
push
inc
fists
xchg
cmp
movsl
or
ret
cmp
add
pop
cwtl
inc
mov
pop
mov
dec
mov
dec
fisubl
xchg
sbb
cmp
pop
stos
testb
fcmovu
outsb
subb
and
movsb
into
pop
repnz
sbb
gs
cld
sbbb
insb
pop
repz
clc
mov
lea
jg
mov
xchg
les
ja
cmp
push
adcl
lea
adc
and
gs
jo
jno
aad
lods
cmpsb
ds
cmp
in
pop
mov
cmpsl
ja
pop
test
and
mov
ffreep
mov
scas
mov
mov
dec
mov
fsub
test
xchg
cmp
shll
cmpsb
inc
daa
pop
add
stos
outsb
cmpsl
cmp
lods
push
sub
xor
pop
and
ffreep
dec
xlat
pop
pop
mov
jb
add
xchg
jno
sbb
mov
xor
movsb
inc
rolb
sub
jno
sub
dec
sub
icebp
push
test
adc
in
mov
sub
mull
lds
movsl
pop
jne
dec
xor
mov
adc
jmp
mov
bound
push
lods
adc
enter
data16
or
test
stc
addb
adc
inc
add
shlb
pop
mov
dec
cmc
dec
and
pop
lds
push
adc
std
push
jp
cltd
push
mov
pop
pop
fldt
out
adc
jnp
stos
inc
cmp
fmul
and
iret
xor
pop
fldenv
push
test
add
dec
out
xor
in
addr16
pop
cld
jecxz
xchg
dec
andb
addr16
xchg
movsb
cmovne
shrb
mov
stc
cmp
arpl
les
ret
and
rcll
subl
enter
sbb
aad
mov
std
repz
fs
push
mov
mov
mov
adc
fs
ja
out
adc
movsb
scas
or
jecxz
pop
sub
sub
mov
std
jmp
test
shll
inc
fmul
cmp
jp
pop
addr16
movsl
lret
stc
repnz
data16
adc
lahf
sahf
jl
fadd
dec
into
or
cmc
je
pop
daa
loop
mov
movsl
popa
scas
imul
xor
ss
push
rcll
push
inc
stos
clc
adc
xchg
sub
div
jo
mov
inc
sbb
pushw
mov
xor
stos
das
dec
and
ret
mov
das
sub
jl
mov
cmpsb
push
push
mov
inc
dec
lds
ljmp
popf
push
cwtl
push
dec
xchg
enter
inc
es
xchg
add
mov
sub
fldt
sub
outsl
les
outsb
jmp
jns
and
jb
xor
adc
mov
pop
out
sbb
pop
test
mov
push
mov
adc
cmp
inc
fiadds
sbb
or
cmp
xchg
lds
es
jmp
cmp
xchg
pop
ss
mov
hlt
pop
pop
pop
shl
mov
dec
loop
and
shlb
cld
push
daa
clc
mov
xor
mov
shlb
enter
inc
scas
dec
fs
sbb
loope
and
ljmp
in
mov
arpl
xor
test
loope
sbb
lods
jecxz
loope
pop
pushf
mov
dec
mov
fildll
jl
repnz
cmp
cwtl
ja
xchg
gs
rolb
jb
jnp
adc
sub
inc
std
dec
fistpll
in
jns
jecxz
stos
fucom
mov
in
arpl
mov
cwtl
mov
add
cmp
mov
pop
lahf
sti
inc
lea
mov
mov
fisubs
adc
loopne
pop
push
mov
or
push
mul
imul
jecxz
lcall
xchg
mov
stc
add
mov
aas
xor
cmp
pop
push
inc
orb
mov
pop
inc
push
aad
jne
mov
test
in
sub
sub
popa
or
insb
je
sbb
add
in
mov
sbb
call
or
movsl
cmp
push
testb
pop
cld
cwtl
fwait
stc
cmp
add
sub
mov
cli
std
je
into
mov
gs
push
and
bsf
popw
dec
repz
aad
jle
insl
inc
insb
push
pop
es
add
xor
adc
mov
andb
out
xchg
loope
call
add
lea
aaa
xchg
rcr
shrb
adc
enter
mov
mov
int3
push
or
nop
testb
daa
arpl
jmp
and
jae
int
popa
pop
arpl
adc
aas
pop
sub
cmp
popf
inc
sbb
mov
pop
inc
in
nop
inc
push
adc
jns
mov
add
popf
iret
mov
lea
ss
pop
push
lahf
rorl
fucomip
gs
xchg
xchg
adc
mov
mov
pop
popf
dec
hlt
lret
pop
inc
out
into
aaa
int
mov
push
lock
cmc
mov
sahf
test
scas
jne
arpl
popf
add
aam
add
nop
and
dec
mov
mov
xchg
test
jg
test
add
mov
mov
shrb
les
mov
jnp
arpl
push
add
inc
xchg
xor
adc
push
sbb
int3
sub
sbb
xchg
inc
push
push
fdivl
mov
iret
cwtl
jp
mov
and
decl
add
push
or
clc
xchg
ds
ljmp
jl
xor
popf
mov
add
sahf
rcr
xchg
pusha
push
pop
pop
pop
imul
sti
leave
push
mov
pushf
and
xor
xchg
pop
fldenv
push
popf
adc
adc
movsb
loope
icebp
jae
jno
cmp
out
add
pop
int
enter
stos
xchg
sahf
data16
jne
ljmp
mov
loopne
cmp
fucomp
inc
jecxz
push
std
test
in
gs
add
jmp
test
pop
call
stos
or
out
xlat
jl
fnstsw
add
rcrl
cld
xor
sub
inc
or
out
jnp
add
aad
pop
mov
inc
fmuls
mov
jle
loope
popf
data16
mov
and
or
inc
dec
jae
cmpl
or
fyl2xp1
dec
xor
push
xchg
cld
ret
lock
pop
push
inc
fs
dec
out
je
mov
movl
sub
call
adc
scas
addr16
call
pop
test
fwait
ja
popa
or
stos
pop
cwtl
in
mov
jl
push
push
fs
mov
les
cmp
scas
push
pop
cs
insb
and
sub
jl
push
imul
cwtl
in
or
enter
ja
cmp
scas
mov
add
jmp
lret
test
sahf
out
ja
lods
std
push
cli
or
xchg
dec
dec
shll
or
mov
jle
out
xchg
xor
outsl
jne
test
mov
scas
sub
sub
int
mov
dec
xor
sbb
push
mov
repnz
mov
test
std
push
xchg
or
and
orb
pop
pop
cli
pop
aas
adc
mov
inc
add
fnstenv
mov
sub
aam
mov
outsb
jecxz
movsb
rclb
lret
in
inc
push
fcmovbe
xchg
dec
lds
mov
cmpsb
cld
hlt
adc
mov
xor
out
lea
das
sbb
out
xchg
out
xchg
ret
cwtl
lods
js
lock
xor
pop
push
out
push
stos
cmpsb
mov
lret
test
aad
rcrl
inc
iret
ljmp
jne
std
adc
pop
mov
stos
dec
inc
jnp
aad
ret
enter
mov
jo
xor
xchg
les
insl
lods
xchg
mov
cmpsl
sub
stos
sub
in
mov
mov
push
inc
inc
or
je
ret
pop
daa
rorl
push
hlt
xchg
cmp
dec
mov
test
stc
das
int
and
pop
cwtl
rcl
adc
sub
in
out
sbb
test
inc
pop
int
pop
test
out
lret
hlt
out
lods
xor
icebp
sub
push
fistl
icebp
rol
idiv
push
xor
cld
and
cs
sbb
xchg
sti
cmpsl
mov
push
push
jb
mov
push
iret
lea
int
xchg
and
and
push
inc
pop
dec
cmc
js
popf
jno
lret
jbe
scas
clc
xchg
cmc
std
test
mov
fldcw
dec
lcall
ret
jb
arpl
mov
jge
mov
insb
cmp
xchg
aas
ss
jmp
in
mov
aaa
lds
ficomps
xchg
or
mov
adc
sub
and
lock
loope
lahf
pop
cmpsl
jge
mov
and
das
mov
xchg
stos
sbb
mov
adc
add
aas
rcrb
rolb
mov
insb
fs
in
sbb
mov
pop
inc
add
fadds
cmp
jp
imul
sbb
ficomps
xchg
add
push
jmp
push
shrl
add
popa
int3
lahf
in
mov
clc
mov
pusha
pop
add
movsl
shrb
mov
pop
sbb
fistpll
out
hlt
pop
push
sahf
out
pop
and
jge
mov
push
aaa
pushf
adc
adc
int
test
out
ja
mov
lods
imul
cld
js
cmpsb
or
scas
or
mov
orb
pop
cmp
xchg
jge
out
sbb
dec
xor
rcrb
aam
add
push
aad
and
mov
popa
sub
inc
xor
jmp
push
and
jns
int
fs
and
lcall
mov
adc
stos
popf
pop
pop
push
jns
xchg
sub
cmp
subl
outsl
je
pushf
cmp
xchg
outsl
xor
dec
xor
aam
scas
push
lahf
mov
mov
jle
sub
lahf
inc
pop
lods
es
rclb
jecxz
xchg
outsl
dec
sbb
lea
pop
fxtract
sbb
adc
pop
and
xlat
orl
sub
pop
xor
cmpsb
push
jb
lods
add
iret
xor
dec
je
add
mov
fbld
xchg
cmpsl
loope
test
pop
cli
scas
or
pop
push
adc
push
lds
mov
mov
dec
bound
push
pop
mov
dec
mov
and
popf
push
test
bound
fcoml
pop
sub
dec
dec
push
imul
xor
pop
mov
sub
mov
cmp
cltd
cmp
push
imul
bound
pop
popf
sbb
insb
and
sbb
add
je
popa
xchg
pushf
test
lods
scas
and
push
in
cltd
sub
pop
sbb
cli
cmp
int3
dec
fldenv
pusha
or
sub
xor
int3
pop
push
out
test
xchg
sbb
sbb
jp
sti
into
loopne
roll
xlat
sub
or
dec
or
inc
aam
xchg
mov
mov
push
fsubrs
add
pop
cltd
insl
or
jo
jle
mov
cmp
movl
cltd
jecxz
fildll
cmp
mov
js
mov
push
lahf
pop
mov
test
jne
aam
fbld
enter
stos
lds
mov
ror
jg
lret
mov
sarb
movsl
pop
fidivl
cmp
pop
pop
addb
lahf
mov
and
inc
subl
dec
xchg
and
and
js
gs
pop
fcmovbe
into
sub
test
add
push
or
not
add
mov
ds
jo
add
sub
cmpl
inc
scas
mov
fwait
je
decb
rcrb
pop
rep
and
sti
mov
add
dec
dec
insb
cmp
out
mov
out
imul
push
xchg
sahf
ja
inc
stos
jnp
leave
adc
fisubrs
jae
sahf
arpl
jmp
pop
je
and
jne
repnz
rcll
sub
add
pop
jl
jl
cmp
xor
aaa
sbb
scas
std
in
rorl
gs
mov
adc
fcompl
dec
jl
stos
data16
pinsrw
cmp
xchg
pop
cmc
adc
push
xor
into
inc
xchg
xor
mov
xchg
loopne
pop
mov
sbb
and
das
aaa
push
je
fnsave
inc
xlat
dec
mov
addb
call
rcr
cmp
sub
enter
push
into
and
push
out
gs
fdivrs
movsl
sarb
xor
inc
leave
rolb
mov
push
mov
xchg
mov
inc
dec
enter
xchg
insl
xchg
leave
out
cwtl
xchg
in
into
test
inc
pusha
or
jmp
clc
ret
push
inc
fs
mov
fld
adc
fstpl
mov
shll
mov
ret
ret
popa
sbb
faddl
mov
pop
push
sti
ret
or
add
gs
addr16
fs
ret
pop
mov
sub
mov
rcl
jecxz
mov
stos
pusha
ds
stc
dec
testl
fidivs
mov
aaa
push
mov
insl
and
cmp
ljmp
mov
movsb
mov
fsubs
inc
add
repz
push
dec
inc
mov
repnz
imul
mov
repz
pop
test
inc
lock
stc
sub
mov
test
dec
mov
xor
push
xchg
loope
jo
inc
ds
shlb
aad
sti
cmp
mov
push
scas
repz
xchg
mov
mov
stos
push
pop
lret
xchg
cmp
pop
into
call
jb
sub
xchg
shrb
xor
fdivl
daa
mov
insb
ljmp
and
mov
imul
into
dec
inc
or
aam
es
inc
arpl
cmp
lods
pop
xor
leave
ret
lds
adcl
inc
push
gs
add
pushf
jae
sub
xchg
bnd
jmp
dec
cmovo
and
pop
ss
filds
fwait
jecxz
hlt
insl
les
int3
mov
xchg
insl
inc
gs
add
pop
mov
ss
cmp
inc
addr16
leave
fwait
push
sub
in
je
adc
adc
pop
push
jb
out
pop
and
and
imul
and
in
call
jo
fstpl
or
mov
fs
insl
push
push
cltd
xchg
test
mov
icebp
and
sub
dec
insl
jb
arpl
jo
stos
push
mov
lcall
inc
jecxz
mov
mov
xor
lods
sub
mov
push
cmp
mov
sahf
jg
sub
adc
jno
repnz
push
test
adc
mov
or
and
or
pop
js
dec
pop
sub
pop
rorl
cltd
lcall
aad
add
sub
mov
lcall
adc
stos
movsb
adc
outsb
jp
sbb
es
sbb
lods
push
insb
adc
cs
int
sub
push
push
aas
mov
push
adcb
cmp
gs
xor
aas
cmpl
ljmp
xor
mov
sbb
pshufw
mov
jns
fsubr
or
pop
jne
adc
stos
test
pop
in
xor
inc
dec
adc
notl
cmp
dec
mov
pop
and
inc
es
mov
fisttpll
adc
push
les
mov
das
cmp
fisttpl
cld
testb
cmpsb
jg
push
inc
sub
xor
test
mov
pusha
lea
sti
xchg
add
popf
call
xchg
inc
pop
push
cmp
push
mov
push
mov
enter
in
scas
add
mov
mov
outsl
pushf
lcall
mov
pop
push
sbb
ret
mov
sbb
pop
sbb
jae
movsb
xchg
mov
in
gs
mov
stos
mov
stc
fs
mov
imul
jg
mov
rclb
push
mov
adc
xor
dec
scas
push
test
dec
xor
lret
mov
repnz
aad
enter
sub
shl
imul
pop
std
bound
pop
in
ja
call
push
mov
inc
cmpsb
sbb
and
inc
mov
fisttpl
loopne
mov
outsl
dec
cli
adc
dec
clc
sub
xchg
int3
pop
enter
nop
leave
sub
jbe
int
xchg
push
testb
mov
repnz
jns
pop
scas
jbe
mov
mov
push
mov
rsqrtps
out
es
rcr
mov
leave
imul
xchg
fwait
out
jecxz
ljmp
rcrl
lcall
and
xchg
pop
xchg
ds
call
lock
in
test
std
xor
pop
add
pop
and
inc
das
test
notb
std
dec
fimull
jmp
movl
mov
dec
and
dec
lahf
insb
mov
arpl
add
mov
mov
xlat
movsl
add
push
clc
sti
mov
adc
xlat
repnz
int
pop
add
repnz
cmp
out
int
out
adcl
dec
inc
adc
outsb
add
mov
mov
out
sub
dec
push
ficomps
je
and
movsb
pop
pop
test
dec
cmp
pop
enter
mov
xor
mov
in
sub
mov
push
cmpsb
add
shrb
aaa
scas
inc
out
out
mov
sbb
fistl
inc
pushf
divl
add
lret
mov
loopne
mov
rcrb
pop
or
and
movsb
js
xor
sti
cs
fisttps
neg
add
daa
inc
fdivrp
loopne
into
int3
add
add
lea
dec
cmp
xchg
mov
pop
stc
sbb
pop
mov
test
test
and
push
add
mov
dec
aam
in
fsubrl
jns
decb
call
add
lock
fisttps
ds
out
xor
scas
test
insb
mov
mov
adc
jmp
and
fldt
or
pop
inc
mov
xor
imul
cmpsb
mov
sbb
decl
cmp
ficoml
xchg
cmp
xchg
movb
xor
xor
jno
cld
jne
gs
aam
xlat
scas
mov
push
jg
in
fcomip
or
mov
and
jg
adc
dec
rcr
daa
xor
mov
loope
repnz
jg
dec
inc
pop
rolb
dec
sahf
out
adc
movsb
mov
push
ret
ds
pop
clc
jg
test
scas
ss
cltd
adc
mov
dec
push
jmp
inc
jo
cld
inc
nop
lahf
leave
jp
add
adc
and
dec
jmp
push
sti
mov
ret
push
icebp
cmp
jmp
or
sub
and
call
std
aaa
call
xchg
jge,pt
jae
fldl
dec
loop
sarl
iret
lahf
jb
repnz
cmp
jge
dec
inc
cmpxchg
sbb
push
jno
sti
xchg
pop
xchg
mov
dec
movsl
jne
mov
rcr
test
xor
int
stos
sbb
jns
and
jne
push
add
push
dec
pusha
pushf
imul
and
add
incl
cmp
sbb
lea
fs
imul
sbb
fs
lds
sahf
pop
sub
and
xchg
jg
es
mov
sbb
leave
xchg
push
and
jmp
test
sbb
stos
pop
cmp
and
pop
sub
movsb
daa
ss
inc
adc
js
int3
xchg
in
cmp
jp
cld
imul
adc
pop
push
rcr
neg
mov
sub
push
sbb
adc
xlat
fistl
fdivr
aam
push
mov
lds
jo
fildl
mov
rcrb
cmp
cli
addr16
mov
jecxz
ja
fbld
mov
xchg
jl
pop
repz
scas
mov
fnstcw
push
push
stos
or
sub
stc
int
push
mov
jp
test
cwtl
add
mov
test
popf
incl
stos
mov
xor
in
xor
lock
cmp
ret
sbbb
pop
adcl
call
mov
push
fisttps
ljmp
das
xor
sbb
adc
incb
in
imul
lret
push
push
xchg
dec
push
sub
sbb
jns
pop
dec
mov
add
ret
and
repz
sbbl
xchg
sub
arpl
pop
mov
test
xchg
das
rcll
or
xor
jnp
cmpsb
in
mov
mov
pop
inc
push
lcall
lret
por
ss
pop
mov
mov
sub
xchg
fiaddl
cmp
xor
jnp
dec
lret
cmp
out
mov
lea
js
data16
lahf
add
push
imul
adc
cmp
aam
add
icebp
rcrb
xor
cli
loope
jno
xchg
pop
mov
push
inc
jne
mov
les
scas
repz
jns
inc
ret
pop
mov
cli
outsb
notb
sbb
mov
lret
mov
dec
out
jns
mov
fs
xchg
jge
mov
and
pop
imul
cmpsl
ds
inc
clc
mov
mov
aam
pop
and
push
inc
lods
loop
fcoms
dec
insb
xchg
loopne
adc
into
adc
xor
clc
lcall
scas
ss
inc
and
push
xchg
es
mov
cmp
push
xchg
in
faddp
mov
es
imul
sbb
and
sbb
ss
pop
cltd
addb
cmp
sbb
hlt
adc
xchg
push
stos
mov
dec
xor
pop
adc
push
jae
das
cmp
shll
cmp
push
add
mov
pop
aas
repnz
xchg
add
ljmp
mov
dec
mov
out
adc
sti
mov
cli
loopne
mov
rolb
dec
add
icebp
xor
loopne
mov
xchg
mov
and
hlt
push
mov
in
daa
pop
into
push
add
xchg
xlat
out
in
dec
mov
jl
jl
call
pop
sub
push
insb
out
xor
scas
fstl
and
inc
sub
lods
mov
repz
xchg
les
ljmp
dec
scas
sub
dec
cmp
push
out
out
repz
mov
mov
leave
lcall
add
jg
inc
add
ficomps
dec
lcall
lret
xchg
cs
push
mov
lcall
xor
dec
push
cmpsb
sbb
xchg
pusha
and
adc
rolb
jns
cwtl
mov
mov
or
inc
xchg
push
bound
mov
push
arpl
daa
push
movsb
push
gs
psubusw
ret
cmp
jge
lcall
repz
call
lretw
jb
push
jne
cmp
imul
cmpl
js
mov
sbb
xor
divl
xor
repnz
in
fisubrl
test
xchg
push
lcall
adc
inc
pop
mov
clc
ljmp
hlt
mov
mov
cmp
sbb
cld
call
ret
js
sbb
inc
test
cmc
mov
xchg
jge
sahf
rclb
sub
daa
pop
ret
pop
dec
inc
test
xor
ja
rolb
decb
xor
in
push
mov
jle
data16
sub
data16
mull
xor
pop
scas
push
test
sbb
in
mov
and
rcrb
mov
jmp
subb
out
insb
fsubp
pop
cld
push
inc
mov
sbb
out
loope
sub
fidivl
cmp
or
and
aad
inc
cwtl
daa
dec
adc
push
scas
js
adc
or
movsl
out
enter
push
subb
std
sbb
movsl
mov
mov
pusha
pushf
fsubrs
lret
int
pop
pop
pop
sbb
out
lods
xor
fbld
jge
movsl
mov
push
scas
adc
mov
jmp
jne
pop
loopne
pop
jle
add
sar
mov
xor
mov
scas
out
push
mov
cs
lods
xchg
mov
sti
fistpll
ljmp
divb
cmovae
aas
add
mov
vpunpckldq
jo
pushf
imul
hlt
fildl
fwait
mov
push
lea
mov
cmp
out
out
cmpb
in
imull
pusha
push
sbb
jb
test
lret
dec
add
jg
lahf
fiadds
mov
xor
shl
sti
movsl
pusha
lcall
inc
insb
js
adc
push
mov
movsb
mov
movsb
jp
mov
shl
xlat
daa
jle
and
cmp
rcl
popf
mov
imul
call
adc
inc
rcll
mov
fcoms
imul
cmp
pop
xor
jle
ds
push
call
fs
aas
xlat
cli
jo
lret
cmpsb
xchg
inc
cmp
test
mov
pop
cmpsb
xchg
sbb
ror
add
inc
in
and
test
jecxz
int
je
popf
xchg
nop
cltd
adc
inc
adc
andl
sarb
xchg
inc
into
cltd
lahf
xor
or
bound
std
adcb
xor
sub
fs
arpl
pushf
mov
and
mov
rclb
xor
cmc
xor
sub
js
imul
popa
sbb
and
sub
sub
pop
xchg
in
mov
xor
push
or
pop
test
fld
xchg
inc
add
and
mov
scas
mov
sahf
mov
shlb
adc
cld
pop
pop
mov
addb
outsb
jge
and
cld
jmp
repnz
loope
sub
add
aad
push
mov
enter
jmp
scas
nop
insb
leave
add
jnp
test
xchg
mov
adc
sarb
movsb
pop
jg
xor
popa
out
push
orl
addb
xor
xchg
in
jge
adc
mov
push
scas
cmp
cltd
inc
mov
add
data16
xor
or
sub
sub
fmuls
icebp
inc
pushf
and
inc
into
test
fcompl
aad
mov
call
out
call
fwait
shll
aaa
xorb
sub
aas
je
aaa
push
dec
cmpsb
dec
or
popa
lock
and
push
jbe
out
pop
adc
out
dec
addr16
lret
xchg
push
mov
fst
mov
sbb
cmp
xchg
sarl
subl
xchg
rclb
icebp
hlt
mov
sub
scas
int
push
add
jbe
in
pop
xor
cmp
icebp
ljmp
push
mov
sbb
scas
dec
pop
sahf
pop
in
rorb
add
test
push
and
les
sti
pop
adc
jg
insl
ja
ss
popf
popl
sete
cmpsb
push
mov
dec
push
mov
cmp
pop
or
adc
pop
mov
push
mov
mov
or
push
int
pop
sarb
xor
jbe
jmp
je
stos
iret
mov
daa
push
mov
fs
pop
aad
mov
pop
sub
and
mov
cmp
int
mov
dec
xchg
inc
sub
call
pop
lds
daa
jl
sti
mulb
dec
leave
int3
or
cmc
jb
hlt
add
in
shl
rol
push
pmaddwd
fistpll
pop
cmp
xchg
add
jbe
inc
insl
dec
pushf
add
or
pop
rcpps
je
push
sub
and
pop
enter
cmp
pop
pusha
push
hlt
add
leave
into
dec
add
dec
xchg
cmpsb
testl
mov
jle
pop
add
addr16
popf
movsb
and
push
out
mov
movsl
out
in
insb
mov
movsb
out
inc
test
das
adc
adc
sub
sub
js
inc
push
mov
adc
jl
pusha
imul
xchg
das
fwait
push
ds
adc
pop
jno
pop
shlb
fcmovu
data16
pop
insb
mov
dec
lret
popa
inc
mov
push
or
adc
aam
or
dec
and
pop
mov
push
ret
mov
sub
cmpsl
mov
xchg
dec
iret
loop
fistl
mov
mov
insb
fisubs
insl
lret
cli
or
dec
mov
mov
popf
clc
lahf
shlb
push
pop
mov
in
cmpsl
scas
outsl
repz
mov
movsb
stos
fnstcw
pop
add
or
mov
fistl
test
push
mov
push
loop
cmpsb
inc
push
cmp
pop
rcrb
sti
aas
arpl
negb
in
testb
cs
or
out
mov
insl
into
dec
fbstp
cmp
add
fwait
lahf
ja
ds
les
scas
jmp
push
sbb
mov
adc
mov
int3
scas
mov
xor
push
bound
movsb
je
xchg
push
push
icebp
sbb
and
stos
cmpsb
xchg
mov
out
xor
inc
xchg
mov
andb
out
movsl
enter
out
sub
sub
repz
inc
cmpsl
mov
ljmp
insb
fldl
fisubl
jb
pusha
xor
cmp
ret
loop
mov
mov
data16
lret
sbb
test
sub
dec
dec
pop
jge
dec
shrb
mov
cmp
rclb
xchg
pop
mov
int3
and
or
push
add
cmpsb
add
sbb
call
adc
or
mov
jle
lds
sbb
sub
pop
mov
inc
mov
repnz
sahf
mov
addb
mov
adc
xor
xor
mov
lea
andl
pushf
xor
repnz
mov
add
or
fstl
iret
pop
fsubr
cmp
and
clc
rcr
push
lods
pop
mov
js
out
xchg
les
dec
lods
and
dec
sahf
adc
cmp
lret
pop
jge
test
jecxz
das
jle
push
xor
jo
int3
add
ret
fstpt
nop
icebp
pop
push
repz
or
cli
push
mov
inc
mov
leave
xchg
pushl
add
fldenv
push
into
fsubs
jns
out
lock
lods
cmpsb
dec
xchg
jnp
ljmp
adc
add
add
dec
mov
sub
adc
loopne
js
mov
pop
push
mov
leave
insl
xchg
push
push
lret
ss
nop
push
popa
pop
pop
je
xchg
js
mov
inc
or
sbb
popa
cwtl
sbb
imul
adc
inc
inc
push
fs
xchg
movups
movsl
mov
mov
clc
mov
ljmp
ja
xchg
dec
mov
push
add
dec
mov
das
dec
pop
inc
jg
push
lcall
push
dec
inc
dec
arpl
sub
into
stos
or
stos
jb
sti
inc
or
mov
push
xor
cld
shlb
adc
das
je
mov
adc
or
cmp
mov
cmp
out
clc
incb
mov
cmp
rcrb
lcall
adc
int3
insl
sub
js
xor
addr16
out
xor
sub
cmp
fidivrl
mov
mov
dec
sub
push
rcl
mov
dec
jae
cmc
jmp
in
mov
xor
mov
adc
dec
inc
sbb
arpl
sub
lock
cld
loope
dec
shll
jnp
adc
pop
addr16
inc
sbb
sub
addps
filds
mov
out
test
lods
pop
dec
orl
lods
sub
adc
mov
outsb
xchg
test
push
loope
sub
movsl
dec
loopne
xchg
and
dec
sub
pop
sub
sete
aam
aam
cld
mov
mov
popf
rol
mov
push
inc
or
ret
lea
and
jno
mov
fcompl
pop
popf
sub
ficomps
mov
pop
adc
cli
and
fnsave
pop
mov
clc
inc
out
inc
mov
jnp
decl
aam
cmpsb
mov
loope
aad
and
add
xchg
xor
sbb
movzbl
loopne
pop
cmpsb
sbb
mov
xorb
add
push
xchg
push
addr16
push
inc
das
std
inc
cltd
adc
loope
sub
jmp
cmpsl
pop
ret
mov
mov
jmp
rclb
hlt
mov
jg
ja
test
mov
fwait
mov
jne
jo
mov
pop
out
cwtl
popa
popf
imul
sarb
pop
add
leave
enter
outsl
pop
in
cld
test
jbe
fdivrl
xchg
lahf
loope
out
add
mov
and
and
lds
ljmp
xor
add
ret
cltd
aam
and
mov
add
dec
shr
push
aas
mov
outsb
mov
imul
aam
pusha
cmpsl
and
leave
out
mov
pop
dec
adc
pushf
loope
add
in
fldcw
push
sub
pop
xor
mov
xchg
cmpsb
inc
shlb
imul
outsl
repz
cmc
stc
or
mov
jnp
repnz
pop
repz
in
dec
test
lahf
xchg
lret
xor
loope
and
adc
dec
pop
jno
xchg
test
mov
or
pusha
mov
aas
aad
push
jae
fwait
sbb
rorl
xor
inc
daa
orl
loope
and
inc
sahf
gs
ret
jp
inc
jo
jecxz
lds
inc
xor
test
cmp
ljmp
cmp
sub
pop
sahf
insb
push
into
sbb
outsb
sub
sub
cmp
push
pop
push
cmp
pop
sarl
js
test
std
loopne
in
inc
loope
mov
cmpsb
dec
lcall
testl
push
pop
inc
lahf
mov
out
and
cmpsl
mov
mov
test
and
pushf
test
test
cmpsl
dec
inc
push
pop
sub
sub
mov
stc
lahf
test
sarb
fcompl
inc
lret
and
stos
pop
ficoms
iret
out
cmpsl
cwtl
xor
insb
incb
sub
pop
cs
orl
out
cmpb
add
xchg
es
push
scas
in
push
xlat
xchg
pop
and
jb
push
sub
stos
cld
xlat
jb
lods
jno
pop
jne
arpl
jns
pusha
xlat
pop
mov
and
jmp
lds
dec
mov
mov
test
fwait
pushf
add
xchg
in
adc
mov
mov
rclb
xchg
jno
rcll
orb
andb
ss
fwait
orl
mov
mov
mov
adc
push
and
in
fwait
push
sub
push
ret
mov
das
or
add
push
in
cs
cmp
cli
mov
xchg
dec
out
pop
cld
dec
int3
lret
pop
cld
in
pusha
xor
mov
fidivs
repnz
pop
pop
xor
cs
xchg
cwtl
cltd
dec
push
loop
mov
and
mov
cmp
call
ds
mov
adc
lods
fnstsw
lds
jle
imulb
shll
mov
fidivl
out
and
scas
or
mov
shll
add
add
in
mov
stc
jmp
jge
jg
xor
add
jge
shrb
imul
movsl
pop
sub
orb
pushf
out
ja
pop
or
hlt
jno
adc
inc
adc
or
ret
lods
pop
mov
pop
add
mov
js
in
xchg
push
out
and
inc
dec
fdiv
fdivrl
test
mov
jmp
pop
xchg
push
jecxz
loopne
fwait
or
or
out
mov
jns
sbb
mov
loop
inc
int
or
mov
xchg
daa
outsb
popf
nop
pop
arpl
push
pop
jp
xor
sub
xor
into
insb
repnz
fisubs
push
fstpt
and
mov
in
aam
addr16
xorb
dec
jl
shl
cmpsb
daa
lret
test
mov
fstpl
pop
mov
les
xor
fldcw
jle
jge
push
or
push
or
stos
mov
lods
pop
les
push
fwait
cli
imul
push
ret
xor
or
jo
mov
mov
out
repnz
sbb
ljmp
stos
mov
daa
lods
dec
lcall
aaa
pop
jo
and
insl
and
xor
inc
insb
dec
cmp
dec
pop
int
push
in
adc
sbb
cmpsb
mov
cmp
add
dec
test
hlt
sar
push
xchg
jle
push
or
inc
mov
xorb
mov
mov
dec
pop
pop
into
jb
xor
add
jecxz
inc
jae
mov
movsl
add
cwtl
pop
icebp
dec
loopne
adc
mov
cmpsb
or
mov
icebp
xchg
out
xchg
add
pop
cli
lea
jmp
dec
jecxz
or
outsb
fiadds
or
fnsave
xchg
repz
mov
add
icebp
mul
xor
movsb
pop
sub
xor
lods
mov
stos
cmp
jp
and
xchg
adc
add
sti
mov
jbe
push
mov
sub
shlb
int3
dec
and
into
insb
mov
lret
clc
push
inc
mov
orl
sub
mov
jns
xor
inc
jecxz
js
les
loope
xchg
dec
sahf
xor
dec
dec
jnp
cmpsb
cli
mov
dec
sbb
orl
fistpl
inc
pop
and
dec
jecxz
cmp
aas
imul
mov
lret
mov
outsb
inc
mov
fildl
or
and
lret
mov
xor
lods
adc
adc
lds
or
push
cmp
cmpsl
cmp
inc
out
addr16
int3
jnp
or
repz
repnz
mov
push
jg
dec
pusha
loop
mov
imulb
int
and
or
sub
add
push
xor
aad
lahf
mov
lahf
mov
cli
push
fnstenv
mov
mov
shll
mov
icebp
xchg
pop
adc
negl
sbb
outsb
push
repnz
sahf
outsb
nop
xchg
enter
jl
or
pop
mov
cld
decl
xchg
sbb
scas
pop
inc
or
pop
loopne
pusha
and
jg
int3
inc
mov
xchg
mov
cmpl
test
adc
xlat
sub
popf
in
das
pop
jne
cwtl
pushf
jmp
lea
shll
pop
add
decl
xor
xchg
mov
or
xchg
or
decl
xor
test
leave
mov
and
iret
xchg
stc
mov
and
xchg
roll
fnstcw
push
into
loopne
popa
mov
bound
scas
lret
pop
das
and
mov
cmp
nop
aaa
lret
jg
pop
inc
add
xor
cltd
and
dec
test
push
xchg
mov
adc
testl
insb
lret
xchg
ljmp
and
insl
insb
fwait
nop
dec
icebp
hlt
pop
dec
adc
imul
push
shlb
xor
rorl
icebp
adc
leave
lock
jl
nop
clc
sarl
jmp
loope
stos
test
mov
inc
dec
ror
shrb
test
dec
mov
orl
sub
les
daa
movsb
aad
mov
das
add
push
in
stos
incl
loopne
rcrl
or
test
mov
pop
dec
mov
cmc
call
arpl
fs
cli
movsl
jmp
es
jmp
test
push
sub
pop
sub
in
inc
jae
ret
sbb
push
dec
adc
sti
insb
xchg
xor
jae
push
mov
aas
ret
pop
cmp
int3
push
ljmp
subb
xchg
inc
shr
lods
push
loop
inc
jb
jbe
push
dec
test
xchg
pop
mov
fisubs
out
fcoml
ret
xchg
mov
ds
hlt
das
movsb
aad
sbb
rolb
sarb
shll
hlt
jmp
lea
imul
call
lahf
pop
xchg
stc
cltd
xorb
mov
xchg
mov
call
xor
adc
lods
mov
push
out
orl
in
mov
and
rclb
sbb
push
mov
push
inc
insl
or
lea
lods
inc
mov
std
cmp
idivb
xchg
dec
xchg
imul
int3
cltd
xchg
xor
sub
shl
adc
loop
adcl
jno
mov
test
lahf
scas
lret
fistpll
fadd
outsl
data16
shlb
in
inc
add
sbb
mov
ret
or
cmp
mov
xor
mov
popf
mov
jmp
ja
out
xlat
aaa
adc
jmp
daa
mov
jmp
pop
xchg
shrl
loope
xor
sub
sbb
dec
clc
out
xchg
cmp
fisubrl
sahf
mov
and
and
mov
mov
mov
push
inc
add
mov
pop
cmp
sahf
aas
mov
mov
pushf
loopne
jo
and
push
sbb
xchg
inc
jns
sbb
shll
lea
mov
movsl
test
imul
jns
push
mov
pop
fs
add
or
lock
mov
pop
loop
rolb
pop
sub
lods
mov
lods
mov
andl
mov
in
rorl
add
mov
dec
mov
ds
dec
dec
aas
lods
iret
or
lahf
loop
jmp
loope
push
sub
pop
inc
mul
and
add
out
xchg
das
arpl
lods
lret
enter
lods
mov
or
or
call
mov
sbb
in
mov
lcall
repnz
adc
into
je
cmpsl
mov
lret
outsl
pop
mov
dec
test
jmp
out
rorb
and
out
xor
cltd
dec
dec
dec
cmpsl
loope
sar
ss
dec
push
leave
push
lcall
arpl
xchg
stc
mov
repz
adc
in
mov
mov
xchg
adc
sub
loopne
push
ja
push
scas
inc
mov
out
or
cmp
loope
mov
std
fs
jbe
sbb
fcmovne
lret
lcall
incb
xchg
inc
fnstenv
insb
dec
inc
std
pop
push
test
bound
rolb
cmp
ret
xchg
or
xor
jo
test
jmp
inc
mov
push
push
ffreep
xchg
jge
jle
cli
inc
jl
enter
adc
jns
adc
dec
jbe
icebp
mov
mov
movsl
shlb
cmp
jbe
aam
bound
sti
int
out
out
or
mov
rcll
test
test
xor
mov
mov
rcrl
inc
mov
xor
xchg
add
js
mov
sub
sbb
mov
xor
add
cmpsb
mov
pop
cld
lcall
icebp
call
dec
ss
sub
and
sub
sub
fisubl
push
movb
out
sub
pop
outsb
mov
and
outsb
dec
es
mov
mov
mov
cmc
es
jae
std
mov
cmpsb
xor
xchg
mov
ss
push
jno
inc
mull
xchg
mov
je
mov
pop
fs
mov
and
jnp
imul
sahf
cmpsb
jmp
pop
mov
scas
je
ss
ljmp
cmc
stos
shrl
outsl
stc
iret
stos
fdivl
test
cmpsb
int3
les
adcb
lock
fnstcw
bound
push
mov
pusha
push
popf
mov
mov
imul
into
push
add
pusha
and
pop
mov
fs
sbb
pop
nop
insl
ja
sti
jno
mov
inc
aas
incb
dec
inc
add
push
jo
push
add
mov
lret
and
inc
repnz
jae
ret
loope
xchg
push
and
gs
fwait
jge
adc
inc
and
push
jge
dec
or
cltd
xor
fidivrs
adcb
sub
and
inc
inc
pop
loop
pusha
pushf
inc
xor
or
jbe
bound
jno
pop
cmc
aad
cs
sbb
xchg
inc
adc
mov
push
add
fildl
test
mov
pop
cmpsb
ficoml
push
mov
fnstcw
push
mov
push
fcmovbe
cltd
ss
fcomps
sbb
or
mov
popa
popf
xor
add
mov
xchg
fnstsw
les
and
or
mov
lea
outsl
and
pusha
add
dec
test
mov
jnp
into
ds
push
out
jae
jne
movsb
iret
scas
xlat
scas
fstpl
push
push
push
pusha
cmc
mov
lret
sbb
xchg
sbb
jmp
mov
xchg
adc
or
push
aaa
stc
in
sti
dec
roll
inc
fnstenv
mov
pop
ret
mov
mov
ja
and
in
push
insb
loop
je
push
dec
lret
xchg
fstps
in
inc
insl
mov
sbb
dec
lcall
inc
js
inc
mov
xchg
fs
push
popa
pop
aad
test
cmp
push
dec
inc
cmp
scas
cmpsl
sarl
fdivs
aad
mov
mov
inc
cmp
pop
jnp
fimull
cmp
push
shr
inc
cmp
test
xor
popa
mov
inc
jo
push
push
int3
lcall
imul
adc
push
or
add
aas
and
add
push
jae
arpl
insb
xor
sbb
push
dec
fsubp
fiadds
adc
cmp
adc
test
int
loopne
push
sub
cmp
jle
test
dec
shrb
jo
in
aaa
push
push
jns
insb
iret
stos
mov
mov
jne
jp
es
aad
and
add
in
pop
orl
push
mov
xorb
xchg
ret
aaa
xor
mov
xor
int3
mov
mov
pop
mov
pop
rcrl
pop
addr16
push
ja
inc
cmp
test
or
add
shll
hlt
sahf
or
test
and
jge
jmp
js
movsl
jnp
sbb
sbb
je
mov
movsb
dec
fiadds
adc
fst
mov
data16
push
cmp
cmpsb
pushf
jmp
sahf
and
sti
cs
xor
in
fsubs
iret
push
repnz
insl
push
popf
adc
shr
and
loope
adc
jbe
fcmovbe
or
mov
ljmp
or
fcompl
repz
lods
lds
push
stos
and
mov
adc
push
push
mov
xor
js
call
dec
adc
mov
movsl
sub
iret
pop
test
inc
xchg
sub
lods
out
call
jns
push
lea
loopne
push
shrl
push
sbb
pop
cmp
ficompl
enter
mov
arpl
add
out
test
pop
jbe
ds
mov
sbb
mov
ljmp
arpl
repz
inc
mov
add
cli
sbbl
in
out
cmp
bound
enter
mov
cs
jle
mov
mov
ficoml
lret
hlt
adc
add
mov
add
adc
dec
cmp
addr16
icebp
sti
mov
repnz
int3
movsb
add
sub
stos
jnp
andb
xchg
iret
mov
ljmp
insl
pop
leave
repz
cltd
sbb
out
ja
xor
mov
dec
imul
push
js
test
pop
xchg
lcall
sub
mov
push
xchg
and
in
out
popf
jno
mov
xchg
shrb
ljmp
mov
jl
add
aaa
pusha
cmp
pop
out
xchg
add
sbb
idiv
cli
jp
ds
sub
push
pop
push
push
sbbl
cmp
dec
xchg
les
jnp
sub
dec
and
pop
adc
mov
das
sbbb
das
lods
xchg
inc
ss
pop
movl
xor
popa
lret
adc
push
sbb
lret
out
in
xor
dec
clc
pop
aam
popa
jbe
mov
inc
mov
jne
sti
inc
jmp
or
sub
xchg
adc
mov
in
mov
idivb
movsl
push
out
lret
pop
cmp
push
cmp
lret
scas
xor
lahf
sti
sbb
cmpsb
aaa
test
cmc
fldl
out
mov
mov
cmpsl
jno
mov
push
sbb
mov
sbb
xchg
dec
cmc
jl
push
sub
movsl
xchg
les
push
xchg
xor
repz
gs
mov
pop
cmpsb
xor
insl
cmp
cwtl
pusha
test
cmpsb
faddl
leave
jp
sbb
sbb
aas
fprem1
xchg
jne
cli
aas
je
lods
sub
push
outsb
arpl
les
pop
mov
jmp
mov
adc
or
pop
mov
jle
je
pop
push
cwtl
out
imul
test
or
mov
ror
xchg
xchg
cmpsl
xchg
sbb
hlt
fistpll
ss
pop
inc
cmc
leave
jo
or
dec
loope
mov
xorb
sbb
pop
leave
cli
push
pop
or
ror
into
sbb
sub
jne
mov
pop
cmpsb
ds
pop
xchg
mov
mov
mov
out
out
jmp
aam
icebp
pop
push
sub
sbb
xor
dec
mov
aad
sbb
ficoms
mulb
jp
adc
stos
xchg
jg
loope
xchg
sbb
add
dec
xchg
leave
mov
xor
in
mov
and
cmp
mov
nop
sbb
stos
jne
fcoml
mov
cmp
push
lods
shlb
sub
mov
lock
rcl
es
insb
cmp
in
dec
cwtl
ud1
add
cmp
mov
adc
clc
ret
aam
ljmp
lds
or
pusha
adc
fisubrl
addb
xchg
inc
sub
jg
inc
testl
movsb
mov
aad
push
or
popf
pop
push
icebp
or
dec
mov
inc
push
cwtl
sub
cmp
aas
pop
cmp
jnp
jmp
insb
push
xor
add
popf
into
std
push
jae
fidivl
mov
mov
xchg
imul
xor
dec
stc
ljmp
push
sub
ucomiss
aaa
mov
out
iret
and
loopne
adc
pop
adc
pop
xlat
mov
cmpsl
xor
adc
test
and
pushf
cmp
lods
stc
dec
ret
lea
xor
dec
and
imul
inc
mov
loop
hlt
into
popa
int
les
and
dec
or
les
js,pt
xor
push
fmuls
mov
pop
mov
mov
outsl
and
inc
adc
and
adc
xchg
jae
test
scas
jg
mov
sub
cs
adc
out
add
or
int3
inc
dec
adcl
dec
jmp
dec
scas
mov
fidivrl
loop
xchg
fcomp
sub
scas
mov
mov
mov
xchg
or
movsb
xor
les
xor
stos
ds
jg
adc
int3
mov
mov
xor
loop
mov
aas
jb
int3
pop
inc
stc
rcr
and
addr16
and
hlt
dec
mov
aam
pop
jbe
shll
sub
sbb
mov
shl
popa
cmpsb
popf
cmc
sub
sub
aaa
mov
sbb
mov
testl
mov
movsb
popf
icebp
ljmp
sahf
cmpsb
inc
inc
shll
xchg
jbe
jns
lcall
test
push
mov
mov
out
inc
cli
or
std
sub
mov
lods
gs
dec
stos
movsl
shlb
xor
out
sbb
clc
stos
sbb
xchg
jecxz
movsl
push
daa
lods
mov
idiv
push
lahf
mov
mov
push
lock
mov
add
dec
test
iret
xchg
mov
bnd
cmpsl
or
push
jmp
jb
shll
and
push
iret
xchg
xor
xor
sbb
xchg
jne
inc
push
jmp
dec
ljmp
sbb
rcrb
inc
jl
les
lods
adc
mov
push
rclb
jecxz
out
sub
popf
ljmp
mov
out
xchg
mov
xorl
pop
bswap
xchg
fldl
dec
rorl
fnsave
push
sbbl
rolb
leave
insb
insl
lret
test
mov
sbb
jmp
xchg
and
jns
jo
jge
sarl
or
clc
dec
ljmp
adc
popa
adc
push
insb
jl
dec
pop
jbe
mov
daa
aam
and
pop
jmp
sbb
out
pop
or
stc
inc
jno
aas
ss
std
xchg
inc
fstl
pop
cltd
adc
xchg
pop
std
dec
dec
sti
add
cld
sarb
mov
and
or
mov
mov
cwtl
inc
lahf
ja
adc
mull
andb
out
sub
cmp
inc
jb
jns
add
or
adc
mov
jnp
inc
testb
f2xm1
mov
gs
loopne
push
push
int3
xor
dec
mov
mov
mov
addl
xchg
outsl
scas
add
push
mov
jae
and
mov
adcl
xchg
ja
or
jb
mov
repz
mov
lret
adc
inc
and
std
and
ret
xor
mov
rcrl
test
dec
iret
in
out
inc
xor
stos
call
arpl
push
scas
xchg
daa
cld
mov
push
stos
andb
xchg
test
arpl
pop
mov
dec
mov
cs
add
js
jb
pop
sub
jne
cmovs
mov
mov
inc
fstpt
rcll
insl
sbbl
shrd
adc
xchg
dec
mov
cld
and
add
aad
dec
lret
scas
jns
fsub
repnz
pop
mov
jge
pop
fmull
mov
jno
sbb
push
fwait
add
xchg
push
or
rorl
sub
sbb
add
scas
pusha
sub
xchg
jmp
daa
sub
jbe
mov
cltd
ficoms
pcmpeqd
fsubrs
hlt
push
in
and
push
push
je
into
into
popl
test
aas
jecxz
sbb
mov
aaa
mov
fnstsw
sbb
cli
or
adc
sti
ret
add
mov
ljmp
add
cld
loope
xchg
fs
xchg
jmp
lret
jg
add
aaa
and
je
mov
xor
cmp
test
dec
addr16
mov
cmp
mov
xor
clc
fcmovnu
lret
out
subps
inc
pop
xchg
fdivrl
or
inc
imul
mov
arpl
or
aam
add
insb
sti
inc
movl
cmp
adc
lds
sbb
pop
hlt
lods
jo
out
insb
cs
popf
mov
push
push
inc
sarb
gs
cmpsl
cld
mov
in
int
daa
xchg
or
add
vunpcklps
cmp
jge
sbb
pop
cltd
arpl
in
mov
loop
sti
mov
push
daa
fimull
mov
add
dec
stos
xchg
fldl
mov
jne
mov
fsubrs
fnstsw
jmp
cmp
mov
jge
sub
xor
xchg
cmp
push
jno
xchg
jle
dec
insb
fs
stc
pop
repnz
mov
adc
pop
sahf
xchg
add
aaa
dec
fisubl
mov
or
inc
jle
in
or
xlat
mov
loope
cmpsl
out
push
daa
or
test
adc
loop
enter
outsl
test
add
push
pop
mov
es
sbb
push
mov
push
outsb
sub
popf
out
mov
ss
add
sti
sbb
gs
jge
inc
cs
and
xchg
shll
adc
jge
xlat
clc
add
add
mov
or
add
lahf
xchg
out
mov
not
loop
pop
or
mov
repz
nop
dec
adc
lret
ja
inc
or
inc
int3
ss
imul
xor
lcall
jns
popf
mov
xor
fdivrl
and
sbb
cmp
push
scas
ds
shll
pmaxub
sbbl
and
or
xchg
pop
stc
repz
into
jmp
nop
imul
mov
xor
repnz
icebp
clc
push
aad
adc
insb
ljmp
sub
pop
mov
mov
mov
xchg
in
clc
jmp
sbb
jg
jecxz
das
out
pop
fstpt
sti
rorb
ja
mov
inc
sahf
and
dec
cmp
scas
pop
mov
sbb
xor
xchg
stc
pop
cmp
out
push
out
mov
ss
std
mov
mov
out
mov
lahf
adc
idivb
push
popf
sbb
and
out
mov
pop
out
dec
iret
push
lahf
pop
lahf
inc
test
stc
jecxz
pushf
jl
cmp
in
jbe,pn
or
ret
jb
or
repnz
aad
insl
mov
xor
aaa
jne
lods
mov
push
mov
arpl
pop
test
insb
mov
mov
pop
mov
inc
push
lret
and
push
ss
cltd
mov
xchg
inc
dec
sbb
jmp
pusha
inc
mov
outsb
out
sub
jg
loop
or
and
pop
xchg
push
mov
rorl
sbb
mov
sbb
popa
sbb
mov
mov
dec
lret
fnstcw
add
fidivs
adc
sub
pop
into
lea
fsubrp
sub
dec
fldl
sub
bound
inc
jb
inc
inc
mov
sub
ret
push
pop
outsl
push
or
repnz
inc
imul
fucomip
in
xor
test
sub
pop
cmpsb
mov
mov
inc
or
or
xchg
pop
punpckhdq
jmp
jns
add
fcmovnb
fldt
cmpsb
scas
int3
push
mov
mov
testl
jmp
sbb
xchg
mov
not
scas
pop
cmp
dec
test
enter
clc
lock
in
mov
cmp
sti
xor
jne
xchg
fisttpl
push
adc
jb
pop
scas
lods
es
jecxz
int3
and
mov
cmp
jne
adc
lcall
pop
jge
sarb
dec
adc
cmp
push
push
mov
test
loope
fiaddl
push
or
icebp
loop
adc
adcb
data16
xchg
cmp
xorb
dec
mov
xchg
icebp
cmpsb
icebp
fs
sub
out
push
stos
jb
adcb
addr16
sub
or
mov
sbbl
pop
or
imul
sub
mov
insb
xor
subl
dec
test
lcall
imul
mov
adc
add
daa
arpl
mov
mov
cltd
loope
mov
push
cmp
dec
adc
sub
lods
aas
addb
adc
dec
pop
fimull
xor
fwait
pushf
inc
adc
loope
insl
mov
test
dec
jl
mov
jne
sub
adc
cmp
fstpt
mov
adc
adc
or
gs
xor
int
jo
test
imul
jl
stos
lods
pop
dec
mov
and
push
outsb
inc
scas
clc
push
lcall
mov
xchg
mov
int
fnsave
push
dec
adc
popa
data16
add
mov
xor
pop
push
bound
adc
jp
fadd
mov
in
or
insl
add
aas
test
inc
fcom
sbb
int
lcall
mov
jp
sub
insb
mov
ss
mov
mov
pop
adc
leave
in
into
les
dec
mov
stos
mov
mov
jbe
mov
outsl
mov
jb
jb
out
dec
push
imul
add
pop
pop
add
add
fsubr
mov
lret
sbb
imul
mov
lret
rclb
jge
ret
outsb
ss
add
movsl
xor
stc
mov
cmc
lret
xchg
imul
pop
cmp
sub
jns
mov
jno
mov
fisubrs
aad
mov
repz
xchg
dec
cmpsl
out
push
lret
xchg
scas
push
pop
mov
or
addr16
jae
and
outsl
ja
sti
jmp
add
cmpsl
addb
rorl
into
pop
test
inc
scas
pop
or
dec
fwait
mov
push
stos
jbe
mov
cmp
mov
push
lcall
jmp
addl
or
inc
push
cmpsl
add
insl
fistpll
dec
cltd
mov
cmp
pop
call
filds
and
hlt
sbb
xchg
or
xor
movsb
cmp
out
cmp
fbld
stos
je
xchg
leave
pop
icebp
sbb
in
fbld
pop
movsb
arpl
dec
stc
cltd
adcb
mov
dec
dec
xchg
xchg
loop
sub
xchg
out
push
repnz
aas
inc
push
inc
mov
mov
in
mov
xor
test
mov
cmp
push
out
into
cmp
rcl
sub
cli
push
dec
dec
sbb
fsts
sbb
test
decb
test
addl
or
jp
pop
jmp
aam
mov
inc
adc
les
mov
inc
push
loop
push
aaa
ret
shll
mov
add
inc
mov
mov
mov
jae
mov
std
gs
out
mov
test
fldenv
jmp
adc
dec
sub
add
aam
int3
scas
mov
call
aam
outsl
dec
jnp
ret
int
loop
adc
jp
push
fisttpll
outsl
mov
rcrb
addr16
jl
inc
test
pop
aam
lea
xor
jbe
dec
sbb
mov
ffreep
nop
mov
mov
addr16
insb
xor
lock
scas
aaa
sbb
push
sbb
nop
push
test
int
lods
push
aaa
pop
jmp
insl
add
mov
out
push
cmc
rorb
aad
add
test
push
pop
inc
or
clc
sub
mov
push
xor
xchg
in
jnp
pushf
mov
enter
push
std
iret
jno
pop
and
mov
add
addr16
and
iret
outsl
sub
adc
dec
repnz
sahf
pusha
dec
inc
or
add
push
dec
movl
data16
mov
test
xor
jbe
sbbb
negl
insb
dec
mov
or
rcrl
and
inc
sbbb
movsl
aas
xchg
mov
or
dec
lret
or
ja
sub
mov
and
xor
or
out
fdivrl
mov
and
push
icebp
orb
outsl
mov
scas
repnz
xorl
jecxz
sarl
je
ret
mov
bound
sub
test
and
lret
call
addr16
rclb
ljmp
call
jnp
adc
mov
repz
mov
lret
pop
push
jnp
cmpsb
aaa
or
data16
clc
bound
fst
lea
push
ds
imul
cmpsb
or
mov
cmp
popa
out
or
mov
and
jmp
or
lea
test
or
lds
mov
cmovne
sub
mov
scas
mov
jae
shrl
pop
bound
rcll
sbb
and
push
insl
hlt
and
jo
dec
rorb
js
adc
sti
jmp
shll
inc
pop
movsb
sbb
push
pop
sti
arpl
out
lods
mov
push
jo
cmp
stos
out
and
jp
xchg
enter
cli
jg
loopne
sbb
add
bound
in
loopne
mov
cmc
xor
mov
or
aas
dec
push
lret
imul
stc
jecxz
imul
xchg
sub
rcll
push
call
push
aam
mov
scas
xchg
push
mov
pop
out
push
rorl
add
cmc
sub
repnz
les
inc
xor
cmp
xor
movsb
mov
lods
movsb
push
dec
sub
data16
mov
aaa
fidivrl
pop
add
or
or
push
adc
mov
jecxz
and
daa
call
test
nop
clc
cmp
inc
jbe
ss
jns
shrb
xor
push
mov
ret
aas
and
xor
call
addb
stos
scas
jb
clc
cmp
mov
inc
lret
daa
roll
rcrl
scas
fisttps
addr16
fstps
insl
je
adc
mov
test
or
dec
xor
fisttpl
push
sub
call
pop
imul
pop
bound
je
in
xor
shll
dec
and
les
addr16
iret
dec
adc
jns
stos
aad
out
sti
ficoms
rorb
test
les
sbb
sbb
leave
cld
test
adc
jne
mov
and
dec
shr
sbb
jns
jmp
outsl
mov
lahf
pop
bound
out
and
inc
pop
dec
aaa
jae
call
ja
and
fnstsw
push
les
call
or
or
outsb
inc
dec
xchg
and
xor
cmpsb
sbbl
ss
scas
jnp
mov
pusha
pop
cmp
movsl
cmp
lret
cmpsl
out
sub
xchg
pop
pop
xchg
iret
scas
inc
cmc
add
mov
mov
sub
sti
jns
stos
xor
mov
popf
cmp
iret
xchg
cmp
and
shll
js
out
push
enter
cli
push
test
add
or
xor
call
enter
cs
jecxz
push
pop
mov
enter
test
cwtl
jnp
push
push
jecxz
lcall
ja
dec
insb
aaa
cmpsb
push
dec
arpl
imul
decl
adc
xor
mov
mov
pop
cld
push
in
xor
xor
mov
sub
pop
dec
ljmp
shrb
stc
cmp
pop
sbb
aam
xor
fbstp
lds
ljmp
in
xchg
scas
inc
repz
mov
push
mov
mov
cmc
and
arpl
ljmp
stos
dec
xchg
mov
mov
dec
dec
sub
or
pusha
jmp
dec
jns
sub
test
aaa
mov
sub
js
cltd
mov
mov
mov
stos
ss
cld
adc
icebp
stc
int
jb
enter
fs
mov
xlat
or
cmp
xor
andl
mov
notb
pop
sarb
or
mov
data16
lea
pushf
outsl
ret
add
out
je
outsl
pop
les
ds
adc
xchg
nop
adc
decl
hlt
adc
out
push
ss
cmpsb
incb
mov
je
jnp
mov
sub
mov
lea
mov
test
dec
add
add
adc
fidivl
mov
add
sub
xchg
in
cwtl
addr16
xchg
cld
mov
lods
lea
mov
inc
popf
adc
pop
stos
arpl
loop
fbld
lahf
pmaxsw
jae
sbb
xor
mulb
and
mov
sarl
lret
inc
xchg
lret
das
jnp
xchg
lahf
mov
ffree
leave
imul
pop
in
jp
ret
inc
dec
mov
rorl
mov
pushl
or
mov
dec
je
mov
mov
aam
popl
cmp
fnsetpm(287
cld
iret
mov
mov
and
fxam
push
test
jg
sub
sub
sbb
cmp
jb
xor
ja
loop
jmp
or
adc
filds
mov
cmp
mulb
fistl
add
ss
rcll
cmpsb
add
inc
mov
jmp
inc
cmpsb
jle
inc
sarl
xchg
or
icebp
test
scas
xchg
loope
push
and
adc
enter
mov
jecxz
xchg
adc
sbb
jmp
push
mov
test
lahf
mov
repnz
pop
lock
cmp
rol
mov
lds
mulb
xchg
imul
ja
fsubrl
cmc
add
sub
lret
scas
test
mov
out
sbb
jae
shrb
faddl
adc
loope
add
out
and
insb
outsb
mov
cmpsw
cmp
fs
idivb
sub
push
push
push
lret
sbb
jbe
inc
mov
push
aad
or
mov
nop
xchg
pop
dec
popf
sub
mov
mov
cli
xchg
aaa
xor
leave
fcmovb
pcmpgtd
out
cmp
mov
mov
dec
lods
outsb
mov
roll
inc
mov
inc
fsubl
push
dec
mov
mov
xchg
mov
pusha
push
pop
cld
cmpl
test
mov
loop
fdivs
pop
inc
adc
aad
mov
lcall
sub
xor
lahf
mov
cwtl
mov
std
loop
imul
fdivrp
shrb
xchg
jnp
add
mov
mov
lret
sbb
dec
dec
lods
jmp
push
lods
movsb
nop
lea
dec
inc
jl
lret
and
sub
outsl
pop
repnz
fwait
ror
imul
sahf
mov
sti
lcall
insl
adc
out
loop
xrelease
or
test
jle
cmp
imul
sbbb
cmc
jae
sub
out
pushf
fwait
sub
in
sbb
xchg
outsb
and
or
jp
test
push
mov
int3
add
pop
push
test
jbe
es
rclb
popf
mov
pop
je
pop
jnp
mov
daa
jns
aas
push
xchg
pop
js
mov
add
sbb
loop
pop
cmp
cmpl
data16
mov
lret
cmp
dec
mov
int3
sub
push
out
sbb
jge
andl
sbb
xchg
and
aas
pop
aam
das
sub
sub
inc
lods
inc
loop
pushf
push
sub
jo
outsl
push
popl
test
and
jl
jnp
movb
dec
repnz
dec
andl
add
xchg
ficoms
xchg
arpl
out
ret
dec
xchg
adc
xchg
cmc
dec
cli
jle
sbb
mov
int3
jle
dec
xorb
shll
aad
xchg
jb
call
xor
or
lock
das
cmp
lret
jns
pop
cmp
popf
cmp
fcomps
cmp
mov
inc
ss
adc
rclb
hlt
pushf
lock
cmc
adc
jl
shrl
mov
pop
in
jp
add
sbb
push
aam
pop
inc
loope
or
cld
inc
xlat
add
mov
jne
lock
mov
xchg
dec
in
mov
loop
xor
pop
mov
mov
mov
or
mov
adc
shl
pop
outsb
adc
clc
xchg
sti
in
outsl
mov
jo
bound
sub
scas
iret
icebp
insl
and
fprem1
div
out
dec
push
xor
jb
xchg
pop
mov
mov
repz
jl
adc
in
xor
aad
scas
inc
add
fisubl
or
imul
cmp
cmpsl
clc
jg
daa
inc
movsb
scas
jge
pop
adcl
fcmovbe
mov
inc
pop
inc
mov
inc
jns
fdivl
test
jmp
scas
dec
cmp
repnz
pop
lods
aaa
test
jbe
mov
aam
rol
pop
mov
adc
inc
ret
cwtl
inc
fwait
es
push
cmp
mov
scas
cmpsl
int3
sub
outsl
mov
push
aas
dec
clc
repz
mov
add
fildll
add
push
or
andb
ficompl
adc
jno
mov
mov
ficoms
sbb
add
data16
cli
ljmp
hlt
pop
fildll
add
ja
in
mov
xor
push
lock
lds
xor
push
and
jg
or
call
sbb
inc
loop
pop
clc
cmp
enter
xor
enter
in
sbb
test
cld
xor
inc
xor
aam
jg
ret
jge
icebp
lods
xor
cs
repz
jns
out
decl
sbbb
popf
ret
rol
xchg
aaa
scas
xor
cli
nop
pop
sti
jo
jo
fwait
mov
jge
rolb
xor
adcb
insb
dec
dec
xor
cmp
mov
repnz
mov
test
mov
loop
xor
push
or
dec
jnp
push
pop
add
popf
or
lods
roll
mov
xor
out
inc
jl
push
fidivrs
repnz
mov
mov
push
testl
loop
xorb
push
insl
enter
mov
sub
lods
gs
mov
jle
pop
sarb
inc
inc
mov
or
sub
cld
into
and
test
mov
imul
aaa
cmpsb
stos
cmp
pop
pop
lret
mov
jmp
rclw
lods
adc
pop
sahf
enter
jp
adc
out
sub
adc
mov
outsl
add
scas
cwtl
pushf
daa
push
ja
js
mov
xor
lahf
notl
jns
cs
sbb
movsb
pop
lahf
pop
pop
faddl
pop
daa
sbb
jl
add
mov
repnz
into
ja
push
add
and
jnp
mov
or
dec
imul
mov
mov
jmp
cwtl
or
pop
and
xchg
ror
ficoml
push
inc
inc
pusha
dec
push
sub
push
fst
add
lock
adc
rclb
push
jo
dec
popf
inc
and
cmc
les
cmp
add
sbbb
fmull
jns
xchg
jno
mov
hlt
jbe
cmc
jge
jg
and
jl
and
pop
mov
pop
int3
cmp
int
mov
push
cmp
push
fistpl
mov
scas
and
aaa
xor
cmp
fisubs
jle
mov
data16
sub
jmp
inc
pop
cmc
popf
and
mov
cmpsb
movsb
mov
mov
aas
daa
loope
call
je
pop
push
pop
movsb
outsl
xrelease
rorb
adc
in
out
les
sub
shll
cwtl
mov
stos
add
fwait
addl
lock
or
stc
dec
loope
es
push
push
clc
scas
xor
mov
sbb
sbb
stc
lea
cltd
pop
fst
fcmove
scas
add
xchg
jmp
das
sub
int3
adc
mov
cmp
cs
insl
and
pop
gs
es
xchg
into
add
mov
mov
push
addl
adc
mov
outsl
jno
inc
xchg
ss
rolb
mov
je
and
lret
movsb
add
add
out
mov
mov
movsl
sahf
jge
les
stc
leave
int3
lcall
mov
mov
icebp
push
shlb
sbbl
sbb
test
xor
and
lret
insb
inc
push
out
mov
and
push
aam
sub
lock
mov
add
fwait
xchg
aaa
ret
cmp
fmuls
cld
lahf
xchg
sarb
cmp
es
xchg
fsubrl
repz
mov
xchg
mov
pusha
cmp
out
mov
xor
mulb
mov
pop
mov
lahf
inc
sub
xchg
fstps
cmp
mov
in
mov
das
mov
pushl
cmc
mov
pop
push
aaa
popl
out
push
fwait
dec
cmp
cmpsl
call
inc
sbb
mov
ss
jo
les
call
push
fs
out
dec
pushf
stos
xchg
and
cwtl
aad
push
sti
inc
cwtl
in
hlt
test
scas
cld
xor
pop
into
lahf
fdiv
test
add
add
mov
jl
push
sbb
cmp
into
xor
sub
outsb
mov
mov
out
jecxz
push
ret
lea
mov
lcall
adc
add
adc
icebp
and
or
sub
push
lret
fwait
cmp
xor
or
mov
mov
popf
sbb
mov
sarb
shll
cmp
gs
or
imul
imul
scas
pusha
mov
and
enter
or
movsl
rorl
lods
jp
mov
dec
or
inc
cli
sub
inc
aad
pop
int
pop
pop
push
sub
and
or
fisttpl
dec
popa
xchg
les
test
aad
dec
pop
xor
mov
ficomps
fmull
xor
and
les
cmp
imul
ficompl
cmpsl
xchg
or
pop
std
aam
cmp
add
out
lret
add
xor
rolb
dec
pushf
adc
pslld
orb
sbb
das
popf
int3
pop
mov
xchg
xor
jle
std
in
cmp
mov
mov
movsl
pop
imul
das
nop
les
lahf
push
sbb
test
add
imul
gs
sarl
stos
loopne
jecxz
cli
fidivl
sub
mov
mov
add
std
inc
pop
sub
cwtl
cltd
cltd
cmp
pop
nop
pop
ljmp
out
shlb
mov
dec
jg
dec
faddl
mov
dec
and
mov
jno
imul
add
adc
fs
mov
push
mov
leave
add
es
sbb
lahf
pop
mov
xor
addl
mov
test
mov
dec
mov
aad
push
add
cmovb
dec
fnstsw
imul
or
xchg
add
pop
and
cmp
inc
jl
pop
leave
mov
xorb
pop
pop
sbb
int
sub
jno
jl
dec
movntps
sysenter
out
push
xchg
and
idiv
push
adc
lahf
cld
add
and
ds
imul
jecxz
pop
push
iret
cmp
pop
push
push
mov
inc
outsl
dec
push
jno
fimuls
xchg
jo
lea
or
mov
sbb
adc
xchg
pop
push
cwtl
insb
jecxz
xchg
sub
jmp
add
movsb
jbe
outsb
testb
pop
jne
adc
pusha
cmp
push
add
jmp
mov
push
pop
xchg
sbb
ljmp
sub
pop
test
jno
dec
mov
push
out
repnz
cld
ljmp
push
xor
pop
movsb
test
adcl
inc
pushf
pop
dec
pinsrw
pop
int
push
add
aas
push
jl
xchg
inc
jg
lcall
mov
loope
rcrb
imul
xor
mov
and
sub
clc
or
pusha
out
mov
mov
cwtl
adc
je
or
xor
ss
call
xchg
sbb
movsb
dec
out
or
shll
jo
push
adc
sbb
add
sub
out
shrb
fists
in
hlt
lods
mov
mov
loope
push
push
lods
and
jmp
jmp
sahf
test
test
add
inc
cmpsl
push
lret
cltd
xchg
fcmovb
push
cwtl
xchg
arpl
lods
xchg
mov
push
adc
sbb
dec
xor
fisubs
filds
nop
adc
add
out
mov
adc
cmpsl
inc
or
out
push
and
xchg
out
out
adc
aaa
push
inc
loop
loope
cmp
fldenv
and
xlat
lahf
jbe
mov
or
xor
mov
mov
es
push
or
mov
push
ds
sahf
dec
add
adc
loop
in
insb
adc
in
fs
fmul
gs
arpl
hlt
fwait
shlb
add
incb
cmpsb
ret
sub
lods
sbb
data16
push
fdivrl
xor
xor
loopne
sbb
rcl
cmpsb
pop
std
xchg
mov
xchg
jmp
les
rorl
test
cmc
jle
inc
insb
xchg
xchg
dec
sbb
andb
fcmovu
or
push
dec
lret
stc
mov
rcr
or
pop
dec
jb
mov
add
outsb
and
jge
push
call
adc
enter
shl
pop
shll
aaa
fwait
popa
push
adc
inc
das
pop
mov
enter
pop
out
scas
movsl
jae
mov
std
popa
cmp
or
js
std
in
ret
je
or
lret
adc
lret
dec
dec
push
sub
add
repz
shrb
sbb
ret
push
push
inc
fistpll
and
stos
or
push
xor
and
ljmp
cmp
roll
inc
add
adcl
repz
in
pop
sbb
and
jp
cmp
cs
sub
iret
xchg
pop
cmc
sahf
dec
inc
rorl
lcall
mov
pop
lds
ljmp
ljmp
pop
push
lods
mov
lods
cmc
shr
aaa
inc
dec
or
xor
inc
in
stc
mov
loopne
mov
xor
xor
mov
ljmp
xchg
lods
insl
jne
sbb
imul
enter
push
sahf
or
jecxz
gs
sub
fwait
scas
rorl
andb
movb
ds
or
or
pop
jecxz
jecxz
push
mov
xchg
shll
std
in
fs
test
sub
push
cs
fdivrs
js
gs
dec
cwtl
fwait
lods
sahf
jno
and
jl
mov
adc
pop
and
jnp
lock
ja
out
lock
stc
movsb
out
dec
hlt
jl
and
adc
lods
mov
push
xchg
dec
inc
negb
jp
outsl
test
pop
jmp
sub
jecxz
pop
fistl
int
adc
mov
rep
jne
dec
pushf
jo
sub
adc
pop
shrl
inc
rcll
pop
adc
clc
xchg
bound
pop
pop
mov
mov
and
mov
pop
stos
jge
add
push
call
mov
jl
insb
xchg
in
push
das
movsb
mov
lock
jns
mov
jg
fwait
out
pop
aam
mov
push
push
dec
sub
roll
faddp
fiaddl
out
and
and
dec
out
pushf
in
ja
in
dec
dec
cmp
outsl
push
addr16
arpl
enter
movsb
cmpsb
testl
xchg
shrl
enter
add
roll
xchg
sub
daa
cmpsb
addr16
pop
dec
inc
dec
pop
xchg
rcrl
mov
dec
arpl
ret
sbb
push
xor
jnp
xchg
push
mov
inc
push
shr
sbb
icebp
cltd
cmp
add
hlt
jbe
sbb
enter
scas
dec
fnstsw
lcall
push
or
mov
adc
icebp
imul
and
ficomps
enter
add
pop
clc
out
push
pop
and
cmc
cld
push
movsl
sbb
mov
data16
add
xchg
aaa
mov
sub
rcrl
lods
pop
rorl
mov
mov
lret
pop
cmp
dec
out
sbb
push
xor
mov
in
adc
imul
dec
fdivrl
int3
in
dec
or
mov
stos
sub
xlat
std
stos
jle
add
pop
or
adc
sbbb
insb
scas
cwtl
inc
xchg
adc
fldt
rcrl
loopne
cmpsl
dec
jo
ror
les
mov
out
lods
adc
xor
inc
sub
cmp
xchg
lcall
jbe
frstor
clc
sub
jmp
sub
decb
andl
adc
push
mov
out
add
sub
in
jne
sbb
xor
jo
fbstp
push
sbb
mov
repnz
pop
imull
aad
cmpsb
std
clc
in
cmpsl
xor
int
in
dec
push
out
dec
mov
dec
cmp
mov
cltd
shll
xor
out
jnp
imul
pop
call
cmp
icebp
loopne
pop
mov
push
shl
or
int3
aaa
mov
fldcw
cmp
fdivrs
add
mov
adc
sub
xor
out
out
sub
inc
push
sbb
ret
sbb
mov
lahf
nop
add
shll
push
adc
aas
ss
xlat
mov
call
jle
ret
cmpsl
cmp
idivl
adc
mov
mov
ss
cltd
push
sub
ss
stc
aaa
rep
mov
mov
dec
cmc
push
xchg
loope
ficoml
in
test
fsubrs
arpl
movb
cmpsl
xor
cmp
xor
adc
pop
or
push
push
mov
xlat
xor
fcom
cmp
mov
push
jns
pushf
scas
popf
push
fbld
sbb
push
daa
test
adc
mov
fldcw
pop
test
and
inc
cmp
insb
aaa
jbe
test
aaa
rolb
out
fdivrs
ljmp
mov
data16
push
mov
or
dec
push
int3
or
pop
bound
pushf
repz
sbb
cltd
fsubrl
inc
mov
ja
jae
mov
sti
jecxz
stc
pop
mov
std
jge
jno
sub
xor
lret
inc
inc
cltd
out
xchg
ror
push
mov
rcll
into
mov
aad
mov
mov
jno
data16
in
sub
fs
stc
jecxz
xchg
notb
cltd
es
cmp
mov
cltd
or
mov
aaa
push
jp
and
aad
inc
jns
xchg
aad
icebp
enter
dec
pop
scas
stos
pop
out
push
test
insb
mov
fldt
daa
sbb
movsb
adc
inc
mov
mov
inc
mov
dec
pop
add
das
fmull
loop
leave
inc
mov
mov
and
add
cld
lcall
dec
mov
add
dec
lahf
insb
or
scas
sti
scas
test
rcrl
jg
pop
pop
addl
mov
pop
xchg
mov
push
sbb
add
inc
push
mov
push
xchg
sbb
orb
dec
cmp
mov
dec
pushl
mov
mov
into
sbb
xor
cmc
mov
outsb
xchg
pop
lahf
loopne
and
xor
hlt
inc
inc
xchg
jae
jb
insl
sub
push
xchg
or
sbb
cmp
stos
out
mov
je
or
jb
mov
inc
cmp
and
sub
push
popa
mov
cmp
push
ret
sub
pop
mov
insb
mov
mov
sub
fmull
shl
es
dec
pop
fsubl
or
mov
pop
scas
pop
sbb
jne
test
xor
mov
xor
mov
push
push
gs
xchg
mov
out
dec
les
pop
ljmp
xor
hlt
mov
cmp
loop
scas
loope
mov
das
js
bound
sbb
xor
xchg
cmp
das
mov
into
into
mov
and
scas
scas
test
pop
mov
shrl
imul
mov
stc
aad
mov
cltd
jbe
cmpsb
jp
adc
aam
push
dec
lods
sub
les
inc
pushf
lods
cmpsb
sub
sub
sub
out
rorl
inc
dec
shlb
push
pop
jo
and
jb
xchg
push
fimuls
mov
out
sbb
lods
aaa
push
and
mov
add
add
adc
pop
nop
adc
sahf
popf
mov
sbb
push
mov
cli
pop
fs
out
mov
adc
xor
sub
outsb
mov
push
cmp
fisubrl
cwtl
jle
out
add
sub
push
push
or
das
sub
add
xlat
int3
dec
and
outsb
mov
pop
cmp
adc
and
dec
mov
xor
icebp
xor
push
adc
cmpsb
incb
and
push
lahf
jo
pop
mov
mov
jmp
add
xor
mov
or
sbb
std
lods
sahf
or
cmp
sti
add
inc
jb
add
mov
pop
fdivrl
inc
in
test
imulb
loope
mulb
xor
dec
and
pop
push
jb
mov
mov
push
ficoms
out
adc
xchg
or
idivl
xor
xor
lods
lcall
aas
cld
loope
cmpsl
popf
cmp
xor
negb
lods
xor
mov
cmp
sub
ljmp
adc
sbb
aas
icebp
loop
push
test
and
call
mov
into
sub
imul
nop
inc
aad
xchg
sbbl
je
jae
dec
inc
cwtl
xchg
out
sti
push
fdivl
icebp
shll
stc
add
cwtl
jp
dec
dec
lcall
mov
in
xor
cmc
lds
es
inc
js
aam
ret
pop
mov
cmp
test
jge
jnp
jb
pop
sub
jae
in
jmp
mov
incl
sbb
mov
scas
push
xchg
flds
rclb
jmp
leave
pop
fadds
push
iret
imul
sahf
mov
out
stos
push
add
testl
lods
inc
sbb
out
mov
push
ret
xor
addr16
xor
fcmovnu
dec
cmpsl
sahf
ret
lea
mov
dec
inc
cmpsl
and
stc
jg
icebp
mov
xor
pop
xchg
xor
ljmp
popa
add
out
inc
sbb
push
and
mov
cwtl
mov
dec
jp
push
mov
dec
fstpt
int3
add
je
leave
sub
add
repnz
cmc
cmp
mov
and
mov
or
subl
arpl
or
fs
in
xchg
add
jbe
dec
mov
jg
and
pop
inc
loopne
inc
shr
jle
push
loope
adc
icebp
int
jo
lods
test
cmpb
cltd
dec
jbe
add
cmp
sbb
scas
in
scas
sbb
js
daa
in
in
jnp
push
test
cmp
fwait
fwait
scas
jns
sub
and
add
sahf
sub
andb
loop
adc
pop
inc
es
insb
int
shll
jmp
mov
test
add
in
movsl
icebp
hlt
xchg
and
xchg
and
dec
cmp
push
pop
adc
into
push
out
cli
or
push
push
insb
and
mov
out
lcall
js
cmpsl
es
movsb
mov
pop
adc
and
mov
in
mov
shll
bound
ds
out
or
jns
test
test
js
adc
nop
adc
cmp
fdivl
or
fninit
pop
dec
push
mov
pop
xor
xchg
loope
mov
jo
jecxz
jo
cmp
test
mov
cmp
inc
cmp
sbb
or
mov
or
adc
or
fisttpll
jns
inc
xor
push
push
jmp
push
mov
mov
fsts
add
jnp
xor
jmp
stos
nop
add
cmp
out
in
mov
or
clc
stos
dec
and
movsb
lahf
les
inc
stos
xchg
inc
mov
sahf
or
xchg
stos
xor
sub
add
sbbb
outsb
xor
jnp
and
pop
aas
fcompl
mov
mov
popf
insb
pop
inc
fsubr
add
push
fwait
cmp
lods
test
add
push
inc
dec
mov
popa
outsl
ret
mov
pop
mov
fsubr
in
dec
test
push
cmp
sbb
jo
loop
xor
js
pop
adc
jle
decb
int3
xor
inc
fcmovbe
movsb
sub
mov
mov
pop
hlt
push
or
leave
push
scas
cmp
das
adc
jb
std
push
cmp
dec
outsb
mov
pop
cld
and
test
out
add
mov
sub
fstp
out
icebp
addr16
imul
mov
mov
fiadds
inc
in
lea
ja
xor
push
mov
adc
rcr
add
cmp
clc
cmp
sahf
jecxz
rcll
add
sbb
repz
cmpsl
cmp
add
jns
aaa
cmpsb
jg
out
sub
mov
fmuls
mov
gs
jbe
or
fwait
sub
out
dec
pop
sub
jmp
lods
mov
lods
push
sahf
jl
push
cs
mov
enter
adc
sbb
adc
addl
and
add
test
sahf
cwtl
or
fstps
cmp
test
inc
sbb
lea
jmp
mov
jae
addr16
stos
jl
mov
fstpl
adc
pop
sbb
mov
fistps
shr
push
popa
movsl
mov
or
sub
add
pop
shlb
jmp
fwait
mov
aam
push
fldenv
or
out
jae
adc
mov
and
shrl
adc
xchg
inc
pop
out
adc
pop
cmp
sub
jae
pop
xorb
xchg
sub
add
pushf
mov
dec
in
pop
xchg
mov
push
sub
add
jmp
mov
inc
sub
sub
adc
add
cli
call
mov
push
mov
mov
mov
sbb
addl
jp
cltd
add
and
or
mov
add
les
and
jno
jge
xchg
lret
stc
movsl
pop
jbe
div
pop
shlb
sti
jne
rol
ja
push
pop
sahf
cmpsb
fsub
adc
dec
cmp
or
cmp
into
negl
mov
lds
jge
mov
idivl
fldl
sbb
add
mov
sahf
lea
outsb
pop
mov
shrl
mov
sti
sahf
mov
dec
inc
out
mov
xchg
rcl
jo
push
inc
in
cwtl
push
out
dec
pop
lods
in
mov
testb
xchg
mov
add
fwait
and
dec
add
dec
hlt
inc
xchg
mov
cmc
ret
xchg
push
faddp
adc
pop
xor
and
mov
repz
pop
shl
or
iret
jecxz
jns
inc
or
mov
iret
mov
adcl
xor
mov
and
dec
sbb
add
cmp
stc
sub
insl
mov
jge
sar
in
dec
push
sub
mov
xor
push
shrw
pop
fistpl
clc
imul
jg
dec
call
popa
les
leave
push
pop
or
call
shlb
bound
xchg
push
cmc
insl
stc
sub
mov
inc
std
clc
mov
sti
pop
popl
and
and
xlat
xlat
jmp
inc
js,pt
std
dec
adc
js
lods
mov
mov
sahf
push
or
inc
jecxz
mov
fldcw
push
aas
jne
movsl
add
sbb
cmpsb
imul
ret
je
insb
roll
test
mov
dec
iret
jne
push
sbb
dec
ljmp
lods
fcoms
xor
push
jb
ss
inc
out
inc
mov
mov
push
jbe
push
xchg
xor
cmp
pop
or
or
js
dec
jnp
shl
dec
pop
les
jae
or
mov
or
xlat
sti
lds
mov
mov
roll
and
pop
xor
jnp
jb
imul
sub
sub
iret
arpl
loope
rcll
adc
xchg
mov
and
dec
sbb
or
push
hlt
or
jno
push
out
insb
into
dec
adc
call
shll
inc
mov
enter
ljmp
addb
inc
xor
scas
mov
push
pop
nop
test
in
sbb
inc
lcall
leave
dec
test
mov
pop
movsl
xor
lret
cmp
rorb
and
cmc
jne
ja
pop
push
imul
push
cmp
pushf
shl
arpl
mov
xchg
sub
sahf
add
jecxz
mov
jno
and
inc
mov
outsl
mov
jns
fidivrl
sbb
hlt
mov
scas
les
cmp
mov
sbb
enter
dec
mov
mov
jg
mov
xor
jmp
adcb
pop
mov
pop
testb
mov
movsb
fidivl
inc
mov
sub
xchg
pop
out
fnsave
mov
stc
dec
or
into
bound
lods
mov
ret
dec
pop
jp
xchg
and
das
xchg
or
pop
scas
xchg
int
dec
dec
mov
pusha
sbb
call
insb
popf
sbb
inc
bnd
sbbl
xchg
fisubs
sbb
in
dec
add
mov
xchg
mov
inc
fsincos
cmp
jne
inc
mov
test
mull
iret
scas
imul
sub
add
mov
insl
jo
push
xor
inc
and
aaa
add
mov
dec
push
sbb
or
xor
fwait
jp
stos
jmp
cmpsl
adcl
push
xor
fisttps
pop
icebp
fcomi
adcb
gs
pop
pop
mov
in
mov
repz
push
mov
js
test
mov
inc
notb
in
enter
mov
xchg
push
in
dec
fcom
insb
ret
iret
shlb
in
and
je
mov
cwtl
xchg
xchg
pop
out
dec
out
dec
je
mov
test
ds
push
ret
cwtl
addr16
popf
int3
fisubl
cmpsb
testl
pop
lea
add
mov
pop
inc
popa
inc
jae
jp
ret
jmp
xchg
xchg
cmp
mov
das
xchg
mov
pop
test
dec
gs
insb
jo
in
xchg
xor
pop
int3
jmp
inc
daa
imul
fnsave
or
and
or
ja
dec
adc
idivl
pop
int
int
cmpl
pop
push
in
insb
repnz
ja
sar
pop
pop
jle
popf
mov
push
test
in
popf
pop
in
mov
mov
rcll
mov
stos
push
imul
or
in
pop
int3
mov
inc
popf
lods
int
and
and
shrb
jns
popf
jnp
xlat
jbe
and
ret
lea
jno
pop
mov
aaa
dec
jno
cld
imul
xchg
fldlg2
jmp
jae
rcrl
sahf
test
sti
xchg
jle
inc
jns
jmp
dec
scas
jb
adc
cmp
sub
mov
nop
push
jle
xor
push
jge
fs
lea
jmp
dec
fnstenv
mov
fs
je
jnp
inc
fdivrs
int3
adc
movsl
jns
clc
xchg
faddp
arpl
cmp
xor
add
push
jo,pt
xchg
add
sti
or
in
leave
hlt
add
dec
xchg
frstor
pusha
cmpsb
jmp
sbb
inc
or
xchg
sub
inc
mov
sbb
inc
incb
lods
cmpsl
or
les
add
mov
pushf
push
shll
enter
push
cmp
or
out
and
lret
push
adc
out
gs
lret
enter
xchg
mov
xchg
jb
fs
and
dec
scas
outsl
cmc
lret
lret
cltd
jb
cmpsb
dec
dec
movsb
mov
test
push
jmp
rolb
mov
sbb
dec
shll
es
mov
bound
inc
cmp
jg
mov
daa
jno
sub
fs
arpl
int3
mov
outsb
dec
imull
inc
out
inc
mov
jnp
sti
mov
outsl
xchg
jmp
mov
sub
pop
and
xchg
daa
popa
mov
dec
sbb
shll
sub
sbb
push
cmp
dec
dec
xor
dec
dec
cmp
loop
xchg
imul
and
sbb
dec
jmp
add
pop
imul
mov
nop
lods
push
dec
mov
stc
mov
sbb
mov
and
sarb
pop
sub
push
jae
ljmp
xor
es
stos
movsb
jp
push
nop
or
les
pop
imul
dec
pop
jle
jg
jns
in
cli
fcmovnu
mov
mov
mov
inc
call
test
add
jg
stos
dec
ja
call
std
mov
lods
or
fdiv
cmp
pop
idivl
movsb
ret
movsb
or
mov
int3
adc
cmp
inc
cmpsl
dec
fimull
sti
sarl
ja
cmp
test
addr16
sahf
adc
mov
pop
mov
cmpsb
fmulp
xlat
in
subb
fisubl
jl
mov
adc
das
cld
notb
pop
mov
fsubrs
mov
push
loop
push
push
outsl
lods
je
push
les
les
or
mov
xchg
pop
pop
cld
das
sahf
lret
pop
lods
shll
sbb
mov
mov
ljmp
xor
cmp
cmp
add
hlt
xchg
outsb
xchg
or
mov
fdivrs
out
aam
xor
pop
fsubl
dec
or
aad
xchg
fwait
insl
insb
das
out
pop
fiaddl
call
cwtl
ficoms
dec
adc
aas
push
jle
ja
neg
cwtl
fidivs
les
dec
sbb
and
mov
fisttps
sub
aaa
addl
cmp
push
std
add
sbb
repz
lcall
aad
ds
pop
pop
mov
je
insb
and
or
xchg
mov
insb
iret
gs
add
outsl
mov
jmp
mov
cmp
adc
xor
cmp
jmp
stc
xchg
mov
std
xchg
dec
fisubrl
jp
fstps
in
aas
ret
mov
jno
xchg
divl
in
repnz
pop
lret
add
fsubs
cltd
adc
ret
adc
gs
loope
xchg
mov
adc
add
addl
mov
std
ja
mov
or
add
pusha
sahf
aaa
mov
cs
cmp
fisubs
hlt
clc
loope
inc
sti
push
bnd
stc
clc
cmp
cmp
sbb
test
mov
jb
and
fcom
or
mov
je
js
xor
mov
aaa
pop
scas
mov
push
fxch
sbb
xor
into
aas
and
jne
xchg
adc
fidivl
and
pop
and
stos
inc
lret
jnp
jb
inc
mov
icebp
in
cmpsb
rcl
push
rcr
sbb
roll
pop
xor
jae
or
out
aad
add
mov
or
xor
jne
nop
pushf
out
push
mov
dec
lods
movsl
pop
shll
push
loopne
arpl
fistl
xor
popa
dec
jge
idivb
xor
mov
rcrl
in
mov
ljmp
and
mov
lea
xchg
arpl
mov
xchg
push
imul
dec
mov
and
repnz
and
mov
stos
movsb
push
sbb
fmuls
mov
fmuls
or
loopne
mov
cs
call
aaa
iret
ret
adc
mov
jo
lret
xor
shlb
out
ret
scas
imul
out
pop
add
pop
fwait
adc
jg
xor
push
add
push
push
pop
comiss
cmp
ljmp
ficompl
cmp
push
cli
xchg
loopne
and
ljmp
sbb
jae
jns
cmp
xchg
test
cmp
imul
mov
push
addr16
inc
mov
dec
js
jno
mov
inc
or
mov
lock
xchg
adc
fisubrl
pop
adc
inc
jo
jae
test
into
cmp
lock
and
dec
cmp
sub
icebp
aam
xor
ss
xchg
in
mov
lcall
repz
xchg
fcompl
xchg
adc
stos
mov
push
leave
mov
mov
enter
mov
in
imul
add
and
and
mov
mov
pop
jmp
fsubr
jns
jecxz
insb
iretw
xchg
cld
mov
fimuls
pop
dec
mov
jbe
push
aam
jne
push
dec
enter
xchg
or
scas
aaa
or
xor
push
inc
pop
cmpsb
in
ljmp
cmp
pop
inc
pop
pop
mov
mov
cmp
mov
fidivs
lret
roll
push
mov
scas
ficomps
mov
das
adc
jge
pop
insb
daa
jo
sahf
mov
pop
addr16
adcl
add
out
cmpsb
xor
and
push
nop
pop
into
or
es
and
mov
xchg
cs
aaa
jge
jp
and
mov
mov
push
mov
xchg
add
clc
fxch
xor
call
stos
adc
sbb
xchg
cmp
mov
xor
dec
adc
nop
jge
jecxz
jecxz
ss
adc
or
arpl
xchg
or
sub
cmp
test
mov
push
jge
adcl
add
out
pop
stc
js
enter
mov
loop
jns
fimull
jb
leave
cmp
stos
into
shl
mov
vhsubpd
lret
mov
xorb
pop
and
pop
inc
sub
inc
pop
pcmpeqw
imul
mov
pop
mov
xor
push
and
fidivrl
mov
add
popa
lea
sbb
or
pusha
mov
mov
adc
dec
xchg
cmp
cltd
out
decl
and
out
sub
pop
jae
adc
mov
sub
cmp
cmp
inc
push
cmp
les
aam
lods
adc
jp
nop
inc
jmp
loope
loop
lea
adc
out
adc
and
ficomps
adc
pmuludq
pop
pushf
and
les
fistl
mov
in
push
ret
adc
rcrb
sub
sbb
fnstcw
aam
das
mov
and
lods
inc
cli
xchg
mov
in
shrl
clc
add
ficompl
mov
pop
or
and
mov
js
and
xlat
test
clc
cmpsl
std
sbb
notl
mov
mov
scas
mov
jne
popf
inc
sbb
outsl
dec
pop
sbb
inc
sbb
fs
push
dec
mov
int
xlat
es
rclb
and
push
out
ds
inc
sub
xchg
inc
push
xchg
roll
lea
mov
add
jmp
ficomps
inc
incb
xchg
pop
xor
xchg
add
loop
pop
adc
and
fcompl
fimull
jmp
xchg
xchg
mov
in
into
inc
sahf
lock
mov
shll
shrl
in
aas
mul
sbb
push
jns
test
lahf
push
and
push
adc
popf
dec
jle
cmp
and
cmp
pushf
hlt
or
ss
mov
xor
loopne
es
lahf
and
lahf
add
push
stos
das
cwtl
mov
imul
daa
push
mov
mov
mov
xor
inc
les
enter
mov
or
jle
mov
push
jne
roll
hlt
inc
popf
test
fs
inc
xor
arpl
cwtl
sub
jge
pop
out
movsl
test
jbe
add
adc
sbb
xor
std
out
mov
cmp
shr
sbb
xchg
gs
add
leave
out
fisubs
pop
in
pop
xor
repz
cltd
cmp
mov
jp
dec
mov
add
pop
xchg
xlat
leave
mov
ret
cmp
jns
fwait
push
fwait
aaa
adc
repz
add
xor
cmpsb
jae
les
push
ljmp
inc
test
push
mov
fists
dec
dec
inc
dec
pop
pop
cmp
mov
jbe
or
push
std
test
push
push
scas
pop
mov
dec
dec
mov
inc
dec
lock
dec
addr16
and
fstps
popl
xchg
pop
sub
inc
movsb
mov
pop
aaa
outsl
in
cmp
or
cmpl
push
daa
add
loopne
xchg
sbb
mov
nop
xor
fidivs
leave
inc
sbb
movsl
mov
mull
add
push
outsl
iret
sub
push
sahf
call
mov
push
in
rorb
and
ret
mov
shll
jns
int3
out
loopne
jl
je
stos
lock
sarl
js
jp
cwtl
in
imul
cmp
xor
insl
dec
dec
mov
notb
jo
cli
pop
mov
movsb
adc
xor
rcl
inc
or
lcall
cli
lds
rol
dec
adc
xchg
bnd
leave
adc
sub
bound
sub
xor
repz
jns
push
and
xor
or
xchg
sbb
cwtl
enter
pop
pushf
shl
loope
rorl
or
std
jns
ret
inc
cmpxchg
paddw
arpl
inc
push
xor
sbb
popa
inc
ja
pop
push
mov
adc
arpl
push
shlb
int3
iret
push
andb
push
push
dec
or
loope
jle
pop
and
sub
loopne
dec
mov
dec
xlat
test
xchg
inc
add
in
mov
js
arpl
mov
push
imul
sti
es
dec
lods
push
inc
cmpl
and
xchg
sub
movsb
lea
les
orl
in
pop
fwait
cmp
add
ss
push
cmp
das
jno
add
les
repnz
mov
xchg
push
inc
adc
into
mov
sbb
sub
dec
add
int
sbb
nop
leave
and
mov
push
es
outsl
divb
les
push
jo
jno
clc
jle
inc
xlat
loopne
stos
into
in
ret
js
clc
mov
push
popf
stos
push
cld
mov
andb
test
push
xor
fisttpll
test
test
xchg
gs
xor
add
sub
sti
outsl
imul
xor
push
sbb
jne
xchg
push
je
enter
pop
mov
rorb
out
test
push
add
xchg
mov
sbb
les
push
xchg
pop
js
xor
clc
hlt
ljmp
push
add
pop
mov
push
xchg
std
adc
shrb
lret
xchg
inc
out
insb
jecxz
pop
sbb
outsb
ret
and
js
jnp
loope
aad
jp
lret
pop
mov
lods
or
pop
xor
adc
mov
push
hlt
and
shrl
enter
fcmovnbe
ret
dec
jle
mov
cli
sahf
mov
ficomps
lret
pop
stos
jge
mov
pop
sbb
jae
rcr
push
sbb
lods
pusha
push
test
or
mov
mov
xor
mov
lods
cltd
addr16
mov
push
aam
arpl
outsb
imul
xor
lret
pusha
push
outsb
mov
arpl
mov
repz
lret
jecxz
rolb
cld
das
mov
outsl
push
hlt
xor
cmpsb
lock
sub
imul
outsl
nop
cmp
cmp
adc
lea
mov
jmp
call
sahf
es
andb
and
cmp
or
pusha
mov
rcrl
movsl
shll
xchg
cmpl
lahf
or
fidivs
stos
outsb
inc
lds
dec
adc
ret
ffree
test
es
arpl
add
cmp
sbb
mov
jmp
adc
or
scas
and
xchg
fs
sbb
int3
or
add
sub
xchg
shl
clc
xchg
add
pop
pop
push
sbb
jl
mov
sti
orl
push
xor
pop
jno
push
cmp
stc
popf
shlb
imull
dec
sbb
cli
lahf
ja
pop
test
sahf
cmp
loope
lods
push
dec
pop
stc
adc
mov
bound
and
xorb
xchg
mov
cwtl
rcrb
or
cmp
faddl
outsb
lods
dec
mov
gs
inc
cmp
icebp
outsl
mov
xchg
repnz
pop
cli
insb
insl
push
ficoms
fidivrs
out
pusha
xchg
mov
pop
and
int
sub
sbb
cmp
sbb
sahf
jle
fbld
xchg
cmp
and
out
sub
or
jmp
adc
cmp
aaa
xor
sub
out
ret
scas
int
shll
adc
sbb
adc
xchg
jne
dec
xor
jg
loopne
sahf
cmp
mov
dec
shrb
and
and
popf
bound
nop
fists
sbb
push
idiv
cmc
mov
fisttpl
sub
scas
adc
xchg
adc
not
adc
sbb
or
into
popa
pop
xor
mov
push
add
adc
enter
fimull
pop
fnstenv
pop
add
or
loope
out
jb
mov
xchg
jmp
sahf
dec
ss
inc
push
outsb
dec
sbb
hlt
mov
jge
or
shlb
ja
mov
movsb
test
mov
lret
in
mov
dec
mov
fcom
sbb
push
das
xlat
add
inc
lods
and
test
ret
int
push
inc
in
sahf
push
repz
xor
into
lret
scas
jmp
scas
mov
add
cmp
inc
xchg
push
ficoml
fwait
cmp
jle
mov
pop
cmp
and
sub
or
cmpsl
add
add
clc
stc
mov
test
outsb
push
mov
pop
sar
mov
movsl
jp
pop
xchg
mov
cltd
lods
mov
data16
nop
in
xchg
arpl
mov
fst
add
lcall
sbb
ljmp
jbe
add
inc
mov
das
mov
inc
test
push
pushl
inc
in
xor
and
mov
jg
testl
insb
mov
push
pop
pop
addr16
xchg
xor
cmc
bound
sub
inc
data16
std
adc
shrl
and
add
pop
inc
lods
jl
in
int
push
scas
pop
lret
les
add
inc
jp
hlt
adc
mov
loop
divl
dec
leave
cmpsb
stos
mov
out
xchg
les
mov
jae
cs
mov
cwtl
and
negb
lds
loopne
in
xor
mov
ret
or
push
test
das
sub
stos
add
push
mov
sub
mov
push
pusha
loopne
les
add
lret
lahf
decb
adc
in
jecxz
adc
mov
add
xchg
pop
mov
lock
pop
icebp
mov
inc
push
idivl
add
mov
out
cmp
das
xor
addb
test
mov
sarb
cs
shlw
aaa
mov
jl
es
and
xchg
loop
fdivr
int
cwtl
or
data16
popf
jle
test
mov
movsl
lahf
or
and
xlat
scas
mov
pop
fisubrs
fnstsw
popa
add
aam
sti
fs
jp
pushf
mov
jmp
push
sub
sub
popf
dec
sub
jle
pop
sbb
das
inc
mov
outsl
ja
insb
jle
xchg
ds
inc
mov
cwtl
mov
cmp
push
sub
xor
add
pop
mov
mov
add
or
sub
jg
je
cmp
sub
mov
pusha
inc
pushf
pop
popf
sub
mov
scas
push
pop
scas
fcmove
mov
cmp
inc
in
inc
mov
in
insl
lcall
adc
mov
stos
dec
inc
loope
movsl
insl
stos
adc
fisttps
adc
add
es
cmpsl
add
repnz
xor
rcrl
jns
movsb
outsb
popf
lock
jns
push
push
icebp
mov
and
pushf
pop
inc
repz
cltd
outsb
and
lret
xor
loop
sub
int3
hlt
dec
mov
sbbb
adc
mov
adc
xchg
in
xor
stos
pop
push
xor
mov
mov
mov
push
mov
mov
mov
xor
sub
lret
inc
notb
cmc
push
xor
and
push
andps
int3
lret
xor
pop
jne
cli
in
push
insb
jmp
cmp
rcrb
inc
das
xchg
dec
push
nop
xor
jb
scas
ficomps
stc
loope
imul
aad
lcall
jecxz
ds
sub
jbe
insb
mov
and
fcoml
mov
lahf
sub
sbb
sti
decb
mov
xor
or
jbe
dec
cwtl
add
mov
cli
popa
pop
push
mov
fiadds
cmp
xor
int3
fstps
imul
ret
cmpsb
mulb
push
mov
cs
xor
mov
cmp
push
sarl
xchg
outsl
pop
push
xor
ljmp
cmpb
cmp
adcl
inc
mov
add
aaa
testb
xchg
xor
jae
adc
incb
cli
sub
gs
in
cmp
lcall
pop
iret
dec
jg
xor
xor
ss
xchg
adcl
sbb
aas
pop
cmp
jp
mov
pop
cli
shrb
stos
xchg
push
addl
les
mov
xor
xchg
xchg
outsl
sbb
xor
test
inc
mov
nop
adc
shll
or
fwait
sbb
sbb
imul
pop
inc
sti
andb
leave
xor
lcall
adc
fmull
pop
aaa
inc
push
mov
bound
xchg
mov
xor
jne
nop
stos
fwait
cvtdq2ps
sub
sub
lcall
add
push
stos
jl
lods
dec
addr16
leave
test
add
adc
cmp
add
add
andl
rcll
adc
add
mov
enter
ret
subl
test
jmp
mov
xchg
stos
xor
out
outsl
or
xor
mov
lret
fdivl
mov
jle
mov
iret
pop
lock
adc
shr
ret
scas
or
subb
push
mov
mov
xchg
sub
xchg
push
push
mov
out
jne
or
je
mov
jg
mov
xlat
mov
out
push
fs
add
or
mov
aam
les
sub
adc
mov
pop
sti
sahf
aaa
fnsave
sub
adc
cld
movsb
lret
pop
or
arpl
lret
cmp
mov
adc
sub
inc
int3
mov
ss
and
adc
repnz
orb
fcompl
and
mov
mov
mov
hlt
push
pop
das
fwait
add
sub
das
xchg
and
add
pop
fsubrs
mov
pop
pop
sub
xchg
cmp
fiaddl
fcomps
cs
ds
mov
xor
outsb
pop
cmp
xor
jle
cmp
mov
je
jl
fcoml
in
sbb
pop
sub
add
mov
jb
cmp
mov
stos
ret
mov
mov
sbbl
daa
jno
popl
jb
sarb
testl
lods
pop
adc
sarb
dec
mov
in
out
fwait
out
pusha
jns
stos
imul
sti
cld
outsl
and
jns
addr16
or
sbb
pusha
jge
or
loop
pusha
xchg
rcr
sbb
fimuls
fiadds
fucom
inc
add
dec
cmpsb
pop
movsl
jg
xchg
arpl
fmuls
push
xor
cmp
outsb
jmp
popf
testl
mov
pop
jg
scas
rolb
lea
dec
fistpll
sahf
cwtl
mov
aad
and
jl
sub
push
xchg
enter
inc
inc
and
in
lock
ja
adc
xor
movl
cmc
stos
push
push
cmp
jno
loope
adc
add
and
or
mov
cmpsl
stc
mov
cmp
icebp
data16
inc
out
data16
xchg
jmp
js
pop
jg
sub
shrb
pusha
cmp
ss
loopne
pop
sbb
mov
sbb
shr
shrl
and
or
call
dec
andl
jb
jno
jb
mov
push
inc
in
sub
sub
sub
fdivrl
repnz
inc
orl
dec
mov
fucomi
xchg
sub
jb
enter
rcl
xlat
fwait
test
mov
loope
mov
outsb
in
rclb
pop
incl
push
jle
sbbl
pop
in
mov
jle
dec
je
mov
add
cmp
pop
mov
xor
pop
inc
imul
mov
dec
adc
or
push
in
mov
out
test
das
int3
mov
scas
pop
das
jg
call
out
adc
fsubrp
into
movsl
andb
shrb
xor
jp
aaa
lret
popa
loop
dec
out
test
add
cmpsb
mov
pop
mov
aas
loop
add
adc
and
bound
xchg
lods
and
jnp
or
ljmp
inc
mov
fisubs
or
mov
fsubl
lret
fsubrs
cli
cmp
adc
mov
pop
push
fdivrl
sbb
repnz
fs
cmp
sbb
in
adc
fmull
or
gs
loopne
cmc
and
mov
cmp
sub
pop
lret
and
sub
adc
mov
fs
xor
cltd
and
cmpsl
clc
mov
or
sbb
fiadds
xchg
mov
je
mov
rorl
inc
xor
stos
lret
pop
sub
mov
push
into
cmp
adc
jb
scas
icebp
mulb
rcl
dec
stos
mov
pusha
sti
jae
insb
std
cmpsb
scas
xchg
int
pop
mov
test
or
adc
jbe
cltd
inc
call
inc
enter
gs
loope
mov
pop
mov
mov
cwtl
or
shrl
mov
push
out
mov
insl
dec
adc
lods
xor
es
stos
in
jns
stos
xchg
icebp
mov
and
frstor
mov
loop
add
mov
in
mov
in
or
mov
mov
add
jl
push
sarb
test
lret
add
jnp
ret
mov
fbstp
add
js
xor
xor
adc
addr16
pop
imul
test
shrb
xchg
and
pusha
es
orl
mov
imul
movsb
imul
xchg
adcb
enter
pop
jl
outsl
addr16
je
or
lock
call
enter
ds
cmpsl
test
jae
mov
in
cmpsl
nop
aaa
adc
das
jp
inc
jge
push
pushf
xor
push
aad
mov
dec
jl
flds
mov
jo
addr16
lods
loop
iret
mov
mov
movsl
jmp
inc
inc
push
cmp
cld
jle
std
jle
cld
and
fbstp
xchg
not
ljmp
out
adc
loopne
or
adc
movsb
mov
ja
push
jg
gs
test
das
xchg
push
mov
test
xor
cmp
mov
xor
sub
cwtl
pop
adc
dec
jg
mov
ss
sbb
jle
inc
jno
cmp
push
sub
xchg
shrl
into
popa
inc
arpl
jle
fcoms
clc
jl
cmp
jo
pop
cld
insl
rcll
fwait
and
xor
call
mov
stc
lods
jmp
dec
add
xor
or
jmp
or
ljmpw
sub
adc
incl
data16
push
loopne
cs
mov
outsl
ror
flds
sub
clc
lea
mov
bound
pushf
pop
leave
jo
push
sbb
enter
jnp
loope
fists
cs
roll
pop
and
psrlq
push
or
jnp
je
std
xchg
sbb
sub
pop
popa
shll
scas
mov
aam
xchg
sbb
push
sbb
and
shl
cmp
push
jle
add
adc
dec
mov
lock
cmp
jl
push
push
jne
imul
sub
jno
add
jne
ljmp
dec
jmp
stos
mov
cmp
mov
cmp
pushf
cltd
push
cs
inc
lret
adc
into
dec
xchg
mov
std
aas
adc
js
nop
loopne
add
outsl
adc
leave
xchg
jge
ds
daa
mov
pop
or
cmp
in
jnp
and
loope
mov
inc
iret
pop
lods
sahf
sub
pop
cmp
add
xor
pop
pop
or
add
or
add
lea
test
scas
lea
jns
cld
mov
jae
mov
daa
jmp
push
add
aas
scas
pop
push
in
push
xchg
xor
sbb
pop
in
xor
in
popa
pop
cmp
rorb
lea
lds
popa
pop
cmp
mov
pop
movsl
ljmp
int
cmpsb
mov
mov
mov
fs
push
int3
sub
jge
xor
pusha
add
or
mov
sub
sbb
into
in
fcomps
dec
in
inc
popf
xchg
push
aam
sti
insb
daa
jmp
pop
movsb
scas
xor
xor
sbb
lock
test
push
xchg
stos
test
dec
sbb
mov
sub
dec
xor
push
imul
gs
cli
push
xlat
jle
mov
out
inc
int
pop
mov
in
popa
jb
xchg
add
cltd
out
mov
out
jne
adc
mov
sbb
pop
jmp
test
jp
pop
cmp
xchg
add
or
es
lret
repnz
mov
and
pop
push
pop
out
pop
mov
or
pop
mov
sarl
cmp
ljmp
xor
arpl
cmp
pop
fnstcw
jne
lock
pop
notl
or
rorl
fwait
rcr
sbb
punpcklwd
add
sahf
fsubrp
or
ror
xchg
fsubr
js
dec
push
push
lcall
sbb
cmp
adc
out
cmp
test
jge
jbe
cmp
push
aad
test
testb
loop
iret
add
mov
jmp
and
imul
fistl
mov
sub
clc
mov
pop
push
push
add
mov
addr16
push
lock
cld
jl
mov
inc
mov
cmp
sbb
add
xchg
fidivrs
ret
adc
mov
mov
jle
mov
dec
data16
addr16
dec
popa
sub
stc
cmp
xchg
iret
subb
inc
dec
cld
mov
repz
popa
in
das
fidivl
movsb
adc
ret
das
mov
leave
pop
pop
mov
inc
mov
inc
pop
js
ljmp
or
jecxz
popa
cld
lods
in
aad
fdivs
mov
mov
shrb
or
outsb
inc
loop
xchg
mov
mov
add
mov
clc
mov
push
or
pop
mov
add
adc
arpl
lock
and
mov
pushf
gs
adc
in
add
jbe
push
mov
mov
add
movsb
test
imul
xor
pop
out
es
adc
rolb
and
xchg
cmp
popf
fmull
aam
loope
not
mov
mov
test
push
je
xlat
push
enter
bound
aas
sub
arpl
iret
cs
jmp
pextrw
mov
sub
adc
adc
mov
icebp
push
dec
cltd
fidivrl
ret
sti
adc
mov
jge
cwtl
dec
cmc
xor
sar
mov
mov
rcl
add
cltd
shl
dec
jbe
into
mov
stos
loope
mov
ljmp
insl
xor
popa
fldenv
stc
fst
jp
mov
and
adc
cld
xor
scas
lock
bound
les
je
rorl
and
jmp
sbb
jb
shlb
mov
pop
movswl
stos
ljmp
push
cwtl
arpl
pop
loope
fcomps
in
icebp
pusha
push
pop
pushf
xor
sahf
lock
rcll
ljmp
outsb
stc
movsl
add
cmp
dec
sub
repz
lret
pop
gs
std
subb
enter
mov
imul
jno
pop
insb
dec
std
adc
movsl
cltd
or
push
inc
xchg
nop
mov
xchg
pop
repz
inc
mov
mov
jne
cmp
inc
mov
sti
push
or
add
inc
mov
ja
cmp
out
sub
dec
mov
in
ljmp
sub
mov
mov
ja
sub
inc
test
mov
das
mov
stos
sub
sbb
lock
mov
daa
cmp
shlb
fildll
test
sub
fistpll
shlb
ss
xor
and
je
cmp
sbb
bound
jl
cld
fisttpll
jl
mov
daa
scas
fisubs
xchg
sub
add
lds
imul
xchg
popl
js
nop
xchg
add
dec
std
add
and
aas
lret
sbb
lock
mov
lahf
cwtl
loope
clc
adc
sbb
pushl
jmp
mov
aam
inc
dec
es
adc
mov
in
mov
sti
arpl
jle
out
sbb
add
add
jb
out
faddl
or
les
inc
xchg
xchg
xor
cmpsl
daa
out
xchg
xchg
leave
jecxz
leave
dec
rol
jbe
insb
cmp
mull
int3
sbb
push
dec
out
sub
mov
push
aad
cltd
sbb
in
lret
into
rclb
jg
xor
jno
mov
pop
stos
int3
lret
cs
dec
pop
dec
in
push
pop
xor
outsl
pop
lods
gs
iret
sub
inc
pop
ss
fwait
cs
mov
push
sti
out
mov
mov
int3
xchg
mov
xchg
cmovns
out
icebp
adc
xor
xchg
ret
push
hlt
das
sub
imul
xchg
dec
dec
mov
sbb
loopne
xchg
push
stos
ss
xchg
mov
addr16
aad
mov
mov
fmull
fcom
cmp
rcl
adc
cld
inc
stc
sub
mov
fcoms
in
jge
repz
dec
cltd
push
testl
cli
mov
inc
negl
push
fmul
outsb
jo
mov
pop
push
sub
icebp
inc
scas
and
inc
push
push
subb
rorb
jno
out
test
bound
add
rclb
xor
hlt
push
sahf
out
test
jae
fsin
leave
or
in
out
jle
mov
adc
sbb
enter
jno
sub
mov
insb
ljmp
fwait
les
popa
inc
mov
xor
sbb
mov
rcl
call
adc
pop
sarb
in
cmp
mov
mov
mov
repnz
cmc
sbb
cli
mov
hlt
movsb
sbb
aam
sbb
mov
sbb
repz
pop
mov
sub
rcll
rdtsc
or
ret
mov
dec
dec
loopne
jg
mov
lds
pop
mov
or
in
cmpsl
push
sbb
fimull
sbb
roll
jmp
and
mov
sahf
dec
pop
cmpsl
loop
dec
fidivs
sbb
push
add
icebp
push
sbb
mov
push
pop
ss
les
in
repz
pop
dec
or
arpl
cs
loop
jp
mov
and
jbe
jp
jns
push
or
or
pop
adc
sbb
shlb
mov
out
stos
mov
in
adc
inc
jg
xchg
inc
adc
aam
lahf
inc
cltd
jmp
sub
adc
xchg
aam
add
shrl
sub
mov
scas
cmpb
and
aaa
divl
mov
pop
pop
jge
jmp
xor
mov
xor
shlb
or
repz
imul
ds
and
cli
xchg
adc
cmpsb
sbbl
adc
sbb
subl
fcoml
jl
and
xchg
jnp
sbb
lds
xor
lcall
fsts
push
add
loope
repz
push
outsl
popa
pop
fwait
push
jmp
mov
push
imulb
dec
stos
sahf
dec
loop
shlb
fcmovnbe
popf
lret
sub
addl
mov
sarb
fisubrl
add
sti
int
outsl
test
lret
xchg
mov
dec
xchg
jb
lds
subb
cmp
popf
aas
jnp
fwait
jnp
movl
loop
insl
and
inc
mov
test
xor
lods
mov
test
and
pushf
and
inc
xchg
adc
pop
adc
and
in
std
pop
ja
loopne
fldenv
in
xchg
dec
insb
mov
leave
xor
mov
adcb
adcb
inc
adc
cmp
loope
xor
imul
xor
mov
fcom
leave
cwtl
xor
fiadds
lock
or
into
sub
enter
shlb
repnz
outsl
sti
xor
daa
lods
je
cld
inc
fnstsw
cmc
inc
xor
dec
imul
mov
sbb
nop
popf
cmp
cmpsl
mov
push
mov
sub
sub
cmpsl
xchg
jecxz
mov
aaa
mov
fsub
or
fdivp
mov
unpcklps
inc
mov
ja
and
or
cmp
and
and
in
mov
aas
js
jecxz
lcall
push
inc
scas
pop
and
pop
xchg
dec
jp
push
sub
push
push
pop
mov
push
sbb
jns
inc
add
inc
cmp
fwait
push
push
xor
mov
mov
daa
icebp
lahf
cmp
push
enter
push
dec
repz
sub
mov
sub
lret
data16
popa
insb
xchg
adc
inc
dec
filds
outsl
rcl
shll
imul
adc
gs
ret
outsl
lea
clc
das
sbb
jne
movsb
cld
imul
jp
shrb
push
jmp
adc
stos
push
dec
lock
or
sub
stos
fildl
or
sbb
jmp
cmp
movsl
mov
fbld
lods
scas
xchg
and
testl
loop
jnp
cmp
xlat
xchg
sbb
rep
jne
push
and
cltd
cwtl
idivl
dec
fdivs
lock
push
lds
movsb
scas
xchg
arpl
hlt
mov
push
pop
outsb
and
mov
pop
inc
and
xlat
int3
arpl
insb
je
or
push
fistpll
leave
out
lcall
cmp
cmp
dec
xchg
mov
jmp
aam
dec
xchg
xor
jne
xchg
add
stos
adc
inc
aad
cmpsb
stos
adc
or
xor
xchg
jns
dec
fbstp
out
xor
xchg
mov
or
push
push
es
add
and
cmpsl
stos
test
rolb
xchg
stc
cwtl
mov
push
dec
mov
mov
xchg
xchg
xor
and
loope
repnz
stos
xchg
lock
push
lods
mov
mov
inc
call
inc
lock
mov
daa
xor
jnp
sub
xchg
mov
test
insb
mov
push
dec
negl
xchg
xchg
push
sub
adc
push
mov
or
jnp
jns
rolb
adc
mov
cmpsb
cli
push
or
xchg
adc
cmp
sti
sub
cmpsl
fxch
push
mov
cli
in
mov
push
out
fmull
inc
adc
xor
inc
push
mull
sbb
loop
mov
ds
sbb
mov
mov
pop
sub
test
rcr
imul
sbb
fnstenv
dec
inc
stos
lods
jmp
cmc
mov
pop
xlat
arpl
or
mov
jecxz
das
popl
mov
hlt
enter
and
adc
icebp
cli
jmp
adc
mov
aad
add
cwtl
out
push
jne
jecxz
movb
mov
mov
sub
test
xor
or
push
fsubrl
in
lea
pop
mov
fisubrl
ja
jmp
ret
stos
push
frstor
push
or
mov
outsl
pop
or
mov
fcoml
scas
and
loop
adc
xchg
mov
or
test
dec
cmp
scas
xor
adc
dec
inc
sbb
sub
pop
mov
test
iret
add
mov
pop
insb
into
xchg
arpl
mov
and
adc
daa
adcb
dec
pop
aas
fnstcw
or
lods
pop
arpl
and
add
sbb
mov
push
push
jno
inc
sub
inc
cmp
xor
cmp
sub
jecxz
and
add
into
push
ss
xor
sub
mov
add
or
faddl
cmp
mov
cli
mov
test
stos
inc
movsl
dec
mov
dec
mov
js
lret
mov
nop
xor
arpl
lock
out
and
call
jge
cli
outsb
jbe
mov
pop
mov
idivb
imul
jp
repnz
xlat
mov
mov
cmpsl
repz
jnp
dec
pushf
incl
push
push
mov
pusha
and
mov
xchg
dec
dec
sub
pop
jno
into
pop
daa
ret
pop
pop
loop
pushf
mov
pushf
nop
and
cwtl
push
jecxz
mov
or
pop
jo
inc
jge
rcll
and
xchg
jns
out
pop
outsl
jbe
and
aas
xor
add
xchg
aas
addr16
int
push
lret
adc
ret
mov
sahf
pop
and
jbe
rclb
push
scas
and
xor
lahf
shll
push
insl
xor
in
cs
push
xchg
sub
dec
andb
loopne
lods
test
int3
xchg
lcall
jns
xlat
fwait
mov
xchg
call
dec
sbb
xchg
sub
pop
cmc
mov
or
inc
cmpl
pop
xchg
cmp
fstpl
or
sub
push
cltd
push
add
aas
out
dec
movsl
xchg
insb
and
fisubs
je
add
std
lcall
jnp
push
push
pop
jne
decb
mov
out
jne
leave
mov
repz
pusha
and
cltd
rorb
jg
jp
in
sub
mov
push
pop
fwait
mov
stos
ss
stc
les
aaa
pop
inc
mov
dec
add
xchg
js
aas
imul
lods
push
pop
xlat
mov
out
inc
xor
push
ss
aad
sub
bound
push
fstl
adc
in
cltd
jnp
mov
jb
inc
ret
iret
loope
cmp
js
movsl
test
sub
inc
push
jg
dec
and
push
add
loopne
xchg
test
sub
cmp
ja
popa
mov
mov
js
arpl
daa
outsl
or
jge
sub
jl
xor
add
outsl
addr16
xor
pop
out
cmp
fs
push
mov
inc
inc
stos
and
in
pop
mov
mov
in
adc
mov
sub
pop
fstpl
mov
nop
jp
push
pushf
adcb
sbb
jge
shl
scas
sub
addr16
cmc
stc
cmpsb
cmpsl
pop
sub
scas
cmpsl
push
push
xor
sub
jns
stos
lods
sub
arpl
mov
jl
es
pushf
lret
inc
sub
mov
sarl
lcall
mov
and
jae
out
xor
in
insb
test
jl
pop
dec
test
mov
or
aad
hlt
hlt
xchg
in
sahf
mov
aam
lods
icebp
scas
add
mov
fs
cmp
inc
leave
mov
in
add
stos
mov
xchg
nop
dec
repz
pop
sub
sub
cwtl
xlat
jo
gs
add
arpl
jne
ja
gs
cmc
rclb
sbb
sbb
sub
stc
sbb
sbb
add
js
sti
pop
dec
mov
cmp
fs
cmpsl
dec
pop
cmc
push
out
dec
es
xchg
jbe
cmpsl
push
clc
mov
push
dec
movsb
cmpsb
inc
out
adc
xchg
outsl
mov
in
cmp
xlat
adc
cmc
mov
sbb
ljmp
inc
pop
jb
ja
push
ret
sub
cld
and
mov
mov
fists
add
pop
aad
repnz
push
jp
in
in
push
repz
cltd
ficoms
and
cli
or
sbb
imul
test
xchg
into
xchg
xchg
mov
cld
cltd
cmpsb
cmpsb
pushl
addl
shlb
jp
in
dec
call
fidivl
or
call
push
sbb
fisubl
xchg
outsl
pop
or
mov
push
pop
fisttps
js
add
jg
xchg
in
sbb
jp
pop
mov
and
jle
aad
mov
jne
mov
xchg
testb
sub
sar
cmp
mov
sbb
sub
dec
iret
addr16
lret
push
in
stc
insl
aam
rorl
fmul
pop
fsubl
mov
inc
jg
lahf
sub
stos
add
movb
mov
mov
push
inc
mov
dec
add
xor
push
dec
or
inc
inc
sti
sub
in
lods
les
stos
lea
hlt
dec
xchg
bnd
pop
sbb
aas
inc
idivb
adc
inc
mov
or
dec
or
daa
mov
sbb
cmp
leave
sub
mov
and
or
movsl
pushf
out
icebp
cmp
xchg
pop
sahf
mov
inc
ret
shlb
jge
xchg
fisttpll
jo
push
mov
movsb
mov
out
jmp
xor
add
inc
cmpsl
ljmp
add
mov
and
and
xor
loop
jne
lea
inc
fs
js
lods
xchg
fs
push
cmp
jmp
push
dec
scas
sub
and
das
cmp
adc
mov
add
cmpsb
enter
mov
push
add
xor
jbe
jb
insb
out
sub
cmp
inc
xlat
dec
cs
shlb
push
outsb
stos
call
sti
sub
mov
mov
inc
and
inc
push
jb
push
cmpsl
cmp
push
pusha
mov
movsb
jp
sub
enter
scas
inc
stc
adcb
sbb
sbb
inc
inc
adc
rcl
cld
repnz
addr16
push
inc
test
push
adc
xchg
jl
push
cmp
in
hlt
dec
mov
inc
cld
shll
data16
mov
adc
sti
inc
cmp
mov
adc
cld
jle
stos
in
rolb
fcoml
popa
jle
subl
mov
xchg
lret
scas
pushf
mov
lret
or
jp
push
cmp
xchg
shll
lods
ret
pop
stc
std
or
inc
lret
jl
lcall
mov
jecxz
inc
or
jge
push
sbb
inc
jno
sub
dec
and
inc
jle
and
pop
mov
add
mov
inc
push
in
mov
pusha
jp
call
add
mov
movsl
mov
roll
test
push
mov
mov
icebp
mov
jbe
and
lcall
lret
ds
mov
jecxz
inc
popa
cli
push
xchg
filds
lds
cmp
decb
mov
shrl
mov
push
xor
adc
adcb
xchg
add
xor
push
or
mov
xor
lods
jle
test
popf
xchg
sti
call
jg
mov
imul
xchg
or
pop
add
movsb
mov
jo
cltd
movl
jae
lods
add
inc
inc
leave
cs
imul
jp
xor
fcmovnb
iret
cs
mov
xor
mov
push
sti
add
and
lcall
in
rcll
jae
push
aad
pop
orb
push
cmp
out
add
aam
sbb
sbb
dec
push
aaa
das
sti
enter
loop
xor
cmpsl
add
or
xchg
out
cmp
rclb
addr16
jle
loopew
cwtl
xchg
jecxz
jne
dec
lcall
mov
ror
insb
imul
pop
je
testl
out
xor
and
mov
sahf
dec
test
push
fadds
mov
movsb
push
mov
cmp
xchg
inc
mov
fxch
clc
add
ljmp
cld
cwtl
inc
jle
sbb
sub
iret
inc
add
pop
mov
out
xchg
data16
sarl
icebp
xchg
mov
shll
mov
mov
loopne
inc
mov
xchg
jmp
test
jp
cmp
shlb
xorb
push
ret
jbe
add
aad
arpl
xor
fwait
or
call
cmp
push
out
lods
and
mov
and
scas
imulb
xchg
or
sbb
lods
cmp
scas
popa
mov
shr
push
jo
test
clc
in
and
dec
mov
xor
push
cmp
in
out
orb
cmpb
xor
push
inc
add
adc
jo
and
popa
cmp
insb
out
add
xchg
push
popf
xor
push
sbb
sar
add
mov
sub
mov
and
inc
fbstp
mov
enter
mov
inc
ds
jecxz
inc
mov
mov
xlat
inc
bound
adc
jns
es
mov
insb
pop
sbb
fsubs
or
push
repz
sbb
dec
xchg
or
cmp
mov
jne
xlat
js
jns
fistps
mov
je
inc
movsb
mov
adc
and
ficoms
call
out
mov
das
push
or
cmp
xchg
aam
nop
ret
loop
insb
or
or
add
or
fcmovu
push
xchg
and
scas
and
inc
jecxz
fimuls
fstl
inc
xchg
sahf
xor
and
jmp
xlat
sub
out
mov
in
push
sub
push
scas
and
xchg
fistps
adc
xchg
pop
sub
mov
jbe
mov
mov
cld
and
nop
movsl
test
sti
and
mov
das
jl
cmc
stc
adc
icebp
sbb
lahf
addr16
xchg
push
cmp
push
push
mov
mov
sub
rorl
jno
add
mov
loop
push
or
fisubrl
pop
or
mov
sbb
jle
in
adc
aaa
dec
mov
add
push
cs
pop
gs
fidivl
pusha
mov
sub
fs
or
shl
xorl
gs
imul
pop
pushl
xchg
leave
push
inc
xor
push
cwtl
or
fsts
out
pop
decl
test
jno
sbb
repz
mov
mov
ror
xchg
fs
jmp
pop
lods
or
jmp
push
int3
mov
jecxz
push
mov
xchg
scas
test
mov
lret
xchg
push
ud1
add
pop
nop
xlat
int3
adcb
cli
push
jb
mov
push
data16
test
or
mov
fldt
adc
mov
popf
js
es
sbb
cwtl
daa
mov
push
xchg
mov
push
push
cld
inc
outsb
mov
inc
mov
lods
jmp
pop
es
jmp
pop
fisttpl
jp
cli
mov
pop
mov
dec
and
sarl
xor
cmp
mov
inc
mov
daa
popw
adc
popa
and
addb
add
add
ja
mov
inc
add
inc
jmp
mov
push
push
adc
enter
aas
stos
cmp
or
mov
cmp
inc
aas
in
aaa
mov
popa
fisttpll
scas
jecxz
xor
jne
mov
in
or
call
xor
mov
jbe
inc
push
dec
ja
cmc
mov
adc
mov
and
fstl
adc
sub
jle
and
pop
cmp
std
pop
outsb
out
fs
push
cmp
int3
call
lret
push
lret
add
insl
sub
jne
sub
lods
adc
mov
loope
add
test
mov
xchg
dec
lcall
test
les
fwait
test
insl
sahf
mov
adc
jge
cmp
rorb
cmp
imul
add
cmpsb
aad
popf
push
mov
fildl
ss
mov
jle
pop
mov
mov
xor
push
aas
ret
aas
fwait
cltd
lahf
cli
adc
mov
mov
pop
out
jecxz
lea
dec
rolb
adc
and
sub
inc
out
xor
or
mov
inc
lret
sbb
pmulhuw
add
cmpsl
jo
shrb
xchg
int
data16
outsb
add
mov
scas
mov
xorl
sbb
mov
test
movsl
jns
mov
int3
mov
leave
bound
dec
fs
outsl
fmull
outsl
dec
push
sti
mov
in
test
mov
stc
call
cmp
pop
fmuls
bound
adc
jb
sahf
xlat
js
add
sub
mov
int
negl
jecxz
xorl
xor
mov
stc
pop
fwait
inc
testb
movsb
cmp
push
dec
fs
push
inc
es
gs
cs
xchg
xor
pop
cmpb
push
push
cmpsb
adc
outsb
movsb
shlb
pop
out
add
push
xchg
xchg
ljmp
dec
nop
adc
fiaddl
xchg
scas
cmpsl
lods
stos
jge
clc
push
inc
jo
and
andb
lock
ja
jge
mov
stos
dec
or
inc
mov
movsb
rorl
hlt
ljmp
enter
lret
jo
fdiv
sbb
mov
aaa
js
cmp
add
call
mov
pop
jbe
pop
js
dec
idivl
ja
adc
mov
imul
idiv
mov
push
sbb
movsb
sub
cmp
pushf
push
mov
mulb
fucom
fwait
mov
in
mov
xchg
pop
insl
dec
push
jbe
mov
icebp
outsl
inc
and
pop
cs
push
jmp
inc
jne
fwait
and
in
sbb
fldl
and
pop
in
fwait
push
ficoms
pushf
jmp
aaa
push
cmp
xorb
pop
pop
jl
jecxz
push
iret
xchg
ds
pop
cwtl
jmp
push
jne
leave
adc
mov
repnz
aad
mov
and
rol
das
push
sbb
push
movsl
inc
jb
jbe
jge
sahf
push
orl
adc
push
fwait
jns
lahf
mov
inc
inc
sahf
jmp
sbb
xchg
out
lods
mov
femms
out
sbb
xchg
mov
cmp
loope
jne
repz
and
fnstcw
push
cld
enter
sti
mov
dec
pop
mov
xor
clc
movsl
aam
imull
inc
sub
jmp
mov
adc
out
lds
sbb
test
in
inc
pusha
jo
fnstsw
imul
cltd
lcall
jae
and
xchg
xorl
stc
adc
fldcw
push
cmp
sahf
sahf
ds
sahf
dec
dec
jne
and
enter
int3
mov
lods
jns
mov
pop
or
mov
lock
pop
punpcklbw
inc
fmuls
pop
jns
dec
mov
add
xchg
jg
pop
pop
pop
cmp
or
push
or
jae
push
ret
inc
cmpsl
test
adc
push
xchg
xchg
pop
cmp
add
shll
imul
or
xchg
mov
xchg
adc
dec
push
push
movsl
cmp
ret
or
jbe
shr
repnz
mov
hlt
jb
cs
fsubrs
cmp
shll
jge
push
pop
iret
mov
xor
mov
sbbb
push
fidivl
dec
sub
aas
mov
ds
sbb
lahf
sahf
ret
push
sbb
faddl
jg
inc
jp
jmp
divb
adc
rol
das
aaa
lcall
dec
inc
jle
dec
jmp
inc
xchg
ss
mov
test
int
push
or
sbb
jg
pop
or
mov
imul
addb
jg
or
sbb
jmp
dec
fistpl
adc
inc
pop
dec
orl
lcall
push
cmc
sbb
xor
dec
imul
mov
sbb
mov
sub
mov
jmp
imul
cmp
mov
adc
arpl
push
out
xchg
lcall
xchg
push
cmc
sub
call
pop
pop
xor
jp
icebp
movsl
and
inc
cld
insl
cmpsb
cld
xor
test
and
lock
xor
push
jnp
pop
in
int
das
aad
out
sub
js
adc
push
mov
mov
les
or
push
inc
xlat
jl
hlt
std
inc
jle
repz
mov
jbe
aad
insb
jbe
add
push
adc
sahf
mov
imul
push
mov
push
fsts
jecxz
and
push
sub
push
xchg
aam
addl
xchg
xor
cmp
sbb
test
iret
pop
push
ret
sub
sub
enter
cmp
jp
push
and
into
lock
inc
and
mov
push
fdivrl
lods
lds
cmp
fildll
adc
das
sbb
stos
and
adcl
and
xchg
std
lahf
push
ds
mov
loopne
cmp
and
cmp
lret
es
call
dec
adc
xchg
jns
pop
addl
mov
inc
inc
pop
add
dec
mov
mov
or
movsb
ret
mov
jmp
dec
xchg
lods
mov
sahf
scas
xor
rcl
xor
xor
or
arpl
mov
out
test
jo
fldcw
dec
cmpsb
mov
sti
or
jb
mov
sbb
je
xchg
adc
mov
out
pop
xor
pcmpeqb
inc
jle
push
add
cmpb
ret
mov
outsl
adc
test
and
mov
or
psadbw
adc
jns
scas
sbb
leave
hlt
mov
fdivp
aas
das
push
sub
pop
data16
pop
add
xchg
and
and
movsl
jmp
cmp
rcll
mov
scas
add
push
adc
xor
xor
push
adc
jne
xchg
or
pop
and
inc
lret
mov
xchg
xchg
fidivrs
dec
repnz
add
mov
lret
and
jecxz
mov
sub
nop
inc
adc
cs
lock
inc
movsb
fadds
insb
mov
push
outsl
adc
clc
std
fs
int3
fmull
repz
pop
js
leave
push
inc
data16
pop
je
adc
jge
cmpsl
and
fsubs
xor
cmpb
into
ja
cmp
rcrb
lds
jae
test
std
ret
pop
pop
lods
push
and
adc
or
outsl
icebp
cmpsl
rcrb
push
pop
mov
xor
mov
es
mov
jo
xchg
sbb
cmpsb
sahf
rcr
int
int
hlt
jns
ret
mov
inc
aaa
ljmp
add
jns
sbb
adc
hlt
mov
sub
fldcw
movsl
je
pop
push
jne
cld
pop
fldt
sbb
imul
push
repnz
mov
sbb
es
xchg
pop
inc
inc
lcall
dec
mov
fwait
aaa
jge
icebp
lret
andps
gs
int
cmc
subl
jmp
push
lar
add
inc
add
xor
mov
push
or
xchg
test
imul
movsl
inc
adc
and
jl
out
jle
addr16
xor
and
mov
stos
imul
lret
test
jbe
xor
or
subl
cmpsb
cltd
lret
fistps
call
stos
inc
les
mov
dec
ficoml
push
and
nop
sub
aas
sub
push
inc
pop
aaa
and
outsb
ljmp
mov
lret
and
addr16
jno
mov
xchg
aas
mov
int3
mul
adc
mov
and
jecxz
or
and
icebp
cli
pop
int3
cwtl
push
ret
dec
jmp
outsl
xchg
pop
lds
push
int
pop
pop
cld
lods
into
xor
sbb
xor
mov
mov
seto
sbb
mov
bound
movsl
xor
mov
sub
out
mov
push
rcrb
dec
fsts
dec
inc
stc
jmp
dec
sub
xchg
or
pop
in
pop
inc
fistl
sub
mov
mov
or
xlat
mov
or
pop
jns
and
inc
push
incl
popf
and
push
jne
outsl
sbb
lret
dec
jl
dec
test
pop
mov
pop
aam
dec
xchg
lcall
fistpll
or
sbb
xlat
lcall
inc
inc
in
scas
shll
and
addl
pop
aas
insl
add
into
push
shrl
and
xchg
push
jno
pop
mov
sub
jae
inc
xchg
xor
in
in
sbb
jns
inc
aam
dec
cmpsb
les
out
neg
out
leave
mov
inc
and
fwait
mov
dec
rcrb
enter
jb
test
ror
push
mov
rclb
fnstcw
mov
insl
or
fbld
xchg
push
sbb
out
mov
in
lret
pop
nop
aas
mov
push
cmp
jl
je
scas
cs
sub
cs
js
xchg
dec
js
sbb
xchg
fcomp
cmp
push
daa
insb
jl
adc
scas
xchg
xchg
jl
mov
ret
xor
push
xchg
insl
in
adc
dec
pop
xor
adc
cld
mov
pop
sub
pusha
fwait
xor
sub
insb
mov
dec
sahf
outsb
sbb
dec
sbb
push
push
rolb
shlb
and
and
jnp
je
add
cmp
adc
je
fwait
daa
int3
ljmp
add
sti
nop
mov
repnz
mov
icebp
mov
in
sbb
nop
dec
in
dec
xchg
ss
loope
into
sub
stc
inc
adc
push
test
movsb
lret
dec
out
fnstsw
ljmp
loop
push
or
aam
nop
mov
or
fcoml
add
sub
xor
in
jb
sbb
pusha
lret
lock
xchg
adc
enter
mov
or
dec
adc
jb
mov
cmpsl
push
imul
insl
arpl
add
cmpsb
adc
negb
ret
mov
inc
fdivp
cmp
aad
and
lcall
mov
xlat
xchg
clc
sbb
add
sbb
mov
cmp
mov
sbb
loop
jmp
aad
mov
ljmp
iret
pop
dec
inc
clc
sbb
pop
dec
xchg
xchg
jo
movsl
negb
test
jne
pushf
xor
sub
fs
cli
shll
fisttps
mov
cmp
pop
sbb
sbb
data16
out
or
jecxz
movsl
adc
inc
or
cmpsl
test
xadd
inc
pop
xchg
or
rorl
mov
push
xchg
stos
mov
pusha
sti
shrb
sbb
xorl
lret
cmpsb
call
ja
dec
jmp
push
insb
or
adc
pusha
mov
arpl
add
inc
es
orl
mov
lods
fld
push
leave
pop
mov
hlt
jo
jl
dec
lret
sub
adc
cs
mov
jns
loop
ret
rolb
lock
mov
jns
xor
popa
je
ficompl
jg
mov
stc
xlat
out
andb
gs
lcall
push
push
jl
call
es
insl
iret
ficomps
out
repz
outsb
mov
in
fwait
and
in
call
pop
push
xor
push
cmp
sbb
int3
inc
test
mov
sbb
sub
inc
out
inc
xor
and
mov
sub
aam
jae
gs
push
mov
ss
push
mov
es
loopne
lret
subb
hlt
inc
mov
orb
and
or
cwtl
scas
mov
jb,pn
sub
xchg
js
sar
movsb
pop
cs
rcrl
testb
pop
inc
jg
loop
mov
sahf
sub
lret
fcmovnu
bound
sbb
jne
pop
mov
or
mov
mov
jmp
in
pop
imul
dec
cmp
out
cmp
int3
add
dec
rolb
data16
xchg
jno
adc
icebp
sbb
lea
mov
jl
cmp
pop
popf
dec
inc
sub
or
dec
out
add
pop
test
sub
decl
xchg
iret
lret
ret
arpl
pushf
repnz
mov
fists
mov
mov
xor
call
jae
jns
rcl
jp
pop
cmp
dec
in
cli
addr16
jns
popf
jmp
adc
pop
lock
dec
adc
leave
jge
push
js
outsb
xchg
test
and
cmc
cmpsb
out
xor
dec
inc
xor
xor
incl
aas
jae
xor
push
imul
pop
mov
scas
sbb
out
test
pop
mov
ss
rclb
sti
mov
cmp
mov
xchg
mov
and
sbb
scas
xor
xchg
mov
mov
push
cwtl
into
dec
dec
jne
mov
jo
loop
or
call
cmp
ffreep
gs
int
pop
dec
movsl
adcb
out
scas
scas
mov
jge
jp
repnz
cmp
dec
test
mov
mov
insb
and
subb
push
push
lods
pop
pop
adcb
jmp
loopne
inc
fiadds
add
outsl
test
push
in
pop
inc
sub
int
and
xchg
sbb
mov
stc
test
inc
sti
sbb
xor
inc
cli
idiv
sbb
cli
ja
arpl
mov
cmpl
mov
jecxz
jno
push
stos
loopne
lret
jbe
sbb
sbb
pop
push
ret
fwait
or
pop
adc
push
sub
jmp
ret
jo
add
lock
sbb
iret
aad
pop
xor
les
lock
stos
aad
addl
iret
inc
push
pushf
pop
mov
in
adc
jno
sbb
and
aaa
mov
leave
je
enter
imul
push
call
outsl
js
test
decb
jle
cld
bound
movsl
dec
mov
mov
sahf
mov
insl
rcll
jp
cmpsl
pop
cmp
sahf
aam
add
ss
pop
stc
loop
push
cld
xchg
scas
rcll
add
lret
fisttps
divb
shl
push
ljmp
cmc
jmp
rcr
push
popf
inc
dec
add
fisttpll
ret
insb
test
aas
adc
in
ret
insb
lret
mov
push
or
sub
loop
shll
mov
sbb
inc
insl
pop
jmp
jne
mov
les
fmuls
loopne
orb
incl
sbb
fimull
or
rol
xor
and
add
jno
or
and
push
js
mov
in
xchg
mov
mov
xchg
out
cmp
ror
jle
adc
rcll
xorb
negb
and
scas
push
sbb
insb
ja
cltd
outsl
fsubl
jp
aas
pushf
repz
jb
jae
into
mov
cmpsb
push
fstps
sub
and
sarb
or
andb
push
imul
inc
sbb
or
and
rcrb
subl
mov
jle
push
arpl
inc
mov
addr16
ret
leave
jl
xchg
mov
movsl
movsb
or
sub
call
je
jb
int
es
mov
incl
and
aaa
fisttpll
repnz
push
cmc
adc
mov
xchg
lahf
popa
icebp
add
add
mov
test
clc
jno
int
pop
imul
out
mov
das
pop
add
cmp
mov
xor
outsl
inc
sub
inc
xchg
jle
or
sti
sub
out
lret
fdivs
sbb
rorl
cmp
lret
stos
jge
lret
dec
fsubl
add
dec
shlb
and
cmp
cli
addb
xor
cs
push
cmpsb
test
ret
sbb
xor
push
mov
inc
jne
pop
mov
imul
pop
clc
inc
cwtl
scas
cmp
xor
push
loopne
aad
pop
jl
outsb
mulb
js
in
or
dec
mov
sbb
pop
dec
lahf
cmp
ja
das
bound
or
xchg
mov
xor
cmp
iret
lods
aas
pusha
push
pop
pushf
jne
arpl
pop
negl
enter
mov
push
ds
mov
imull
push
or
popa
stc
mov
adc
and
or
fisttpl
jbe
jns
ret
sub
daa
ljmp
outsb
push
rcrl
jl
cmp
jl
sub
lods
pop
jmp
je
cmp
xlat
popf
push
jle
pcmpeqw
xchg
stos
or
mov
cs
add
push
shrb
cmp
add
mov
pop
add
xor
ljmp
and
xchg
xor
or
insb
loop
mov
mov
cli
inc
push
pop
movsb
clc
jecxz
xchg
cli
pop
sahf
nop
dec
movsb
movsl
fscale
lcall
in
mov
mov
into
sub
add
mov
dec
mov
flds
and
aaa
sahf
add
pop
jmp
or
pop
scas
push
movsb
xor
call
cmp
push
cmp
lcall
bnd
jnp
inc
mov
shll
nop
mov
call
ljmp
cmp
das
ja
xor
repnz
and
ret
mov
dec
std
sub
dec
adc
add
rcl
mov
aas
adc
xlat
inc
cmc
ljmp
test
sbb
xor
cmpsl
adc
push
mov
mov
sub
or
xchg
outsb
or
sub
ja
out
add
cmp
push
pop
and
push
insl
add
stos
popf
cli
test
jp
xchg
out
outsl
xor
lcall
adc
adc
and
sarb
les
lods
push
sub
das
orl
stos
xor
push
iret
fbstp
insl
call
ja
push
inc
out
ja
fisubl
in
mov
or
pushf
in
incb
xchg
sahf
inc
shr
mov
sub
pushf
hlt
ret
rcll
loope
stos
inc
outsl
iret
daa
in
stos
hlt
xor
jbe
jno
jno
insb
loop
rcrb
ficomps
cmp
mov
adc
and
popf
scas
enter
push
mov
loope
jmp
test
sub
and
cmp
push
sub
sbb
xchg
and
cld
lret
push
adc
js
out
lea
adcb
pop
dec
rclb
pop
cmp
sub
outsb
pusha
pop
sub
ljmp
gs
gs
imul
jb
sbb
cmp
mov
adc
ja
mov
push
mov
fidivrs
andl
dec
dec
popa
stos
sub
and
outsl
mov
fwait
and
jle
adc
mov
rol
enter
test
dec
lods
dec
shll
mov
fwait
cmc
ljmp
cmc
jg
outsl
mov
mov
mov
les
bound
jecxz
pop
fcomp
stc
lcall
loopne
sbb
fistpl
pop
lods
adc
std
dec
pop
xchg
jge
sub
adc
outsl
mov
adc
push
lods
cwtl
cmpb
daa
xor
data16
push
sub
mov
ficompl
adc
loopne
push
inc
cmp
mov
int3
push
gs
out
mov
add
stos
pusha
pop
negb
mov
xor
or
cmc
sti
mov
push
sub
and
and
cmp
inc
jb
inc
inc
cmp
or
cmpsb
xor
mov
inc
jns
push
cld
jl
dec
gs
pop
sub
repz
outsl
adc
in
inc
lret
sub
cmp
or
js
inc
xor
inc
stos
xchg
stc
repz
inc
cmpsl
icebp
cmp
xchg
dec
ret
daa
push
jns
mov
mov
repz
sub
test
or
push
fisubrl
movsl
insl
cmp
gs
cmp
aaa
lods
sahf
cs
mov
fsubs
fwait
inc
add
fdivrl
xchg
lods
push
adc
lret
sub
mov
and
pop
ret
dec
inc
arpl
int
stos
lret
lock
mov
pop
dec
out
mov
pop
and
push
push
mov
jp
sahf
lock
dec
inc
jecxz
in
aas
js
int
loope
pop
repnz
mov
nop
or
int3
mov
fs
pop
sbb
push
je
fnstcw
rcrb
out
adc
in
sub
scas
loopne
xchg
pop
push
jp
sbb
pusha
ret
loope
test
rcr
sub
idivl
jmp
xchg
decb
negb
mov
add
add
adc
cmpsb
out
lret
xchg
sub
nop
das
fistl
shr
jle
push
and
mov
and
and
scas
sbb
aas
fimuls
sahf
repnz
js
scas
pop
je
jnp
mov
add
cltd
add
fisubrs
movsb
jno
xor
lds
sti
push
in
cmc
out
repnz
mov
and
jmp
sbb
pop
cli
mov
les
test
roll
pop
les
imul
inc
aaa
jb
add
cli
adc
xchg
imul
xchg
add
push
xchg
adc
xchg
inc
jmp
repnz
rolb
sahf
aam
dec
popa
jecxz
sbb
in
fldz
mov
pop
cmpb
test
bound
add
loope
pop
test
inc
daa
loope
mov
adc
mov
gs
push
lret
mov
inc
pop
stos
pusha
shlb
cmp
out
xor
add
mov
sahf
inc
shl
lret
mov
and
in
mov
jge
mov
push
xor
out
je
push
mov
adc
out
jg
and
out
pop
in
popa
mov
loope
inc
movsb
pop
addr16
jb
dec
int3
inc
push
push
cwtl
jmp
mov
ja
test
dec
cmp
xchg
mov
adc
pushf
and
xor
mov
sub
mov
mov
or
insb
xor
mov
mov
pop
sbb
mov
jmp
push
fcomi
sti
aaa
fldt
lret
adc
xor
test
xor
icebp
mov
enter
push
sbb
lahf
stos
jle
das
cmpsl
mov
or
mov
jbe
inc
mov
push
dec
nop
js
jo
jle
ss
fmuls
outsl
clc
gs
jmp
cwtl
ja
push
shll
dec
icebp
lods
subb
and
mov
rcll
loop
pushf
in
jle
mov
mov
lcall
rclb
xor
addr16
or
mov
es
out
jo
xchg
movsb
xchg
cmpsl
and
lds
push
cmpsl
les
xlat
pop
add
xor
inc
mov
popf
xor
mov
rol
bound
xchg
inc
xor
fdivrl
xchg
inc
mov
ss
ss
push
movsb
je
cmp
shrb
add
js
aad
cmpsl
mov
out
push
push
mov
and
or
dec
adc
in
lcall
mov
insl
cmp
lods
push
fsubrs
dec
stc
sub
ds
cwtl
sar
sub
mov
call
jecxz
mov
jmp
hlt
lret
jno
or
dec
jmp
add
jbe
cmp
js
pop
or
mov
pop
gs
sbb
icebp
loop
or
sub
fadds
leave
test
mov
xchg
push
cmp
and
aaa
mov
mov
inc
nop
mov
push
jne
mov
out
mov
adcl
mov
and
xchg
int3
push
and
pop
adc
sti
and
pushl
out
mulb
push
mov
fisubs
jne
popl
das
jo
mov
insl
dec
push
xor
lods
inc
adc
sub
dec
lods
mov
and
nop
rolb
dec
xor
ljmp
arpl
xchg
mov
cmp
mov
rol
mov
adc
mov
mov
popa
cmc
jg
inc
or
mov
outsl
xor
mov
bound
and
and
pop
sub
xor
push
mov
andb
std
adc
cs
adc
in
mov
out
mov
jmp
fisubs
mov
imul
out
push
pusha
mov
sub
ret
jne
pop
push
jecxz
mov
ret
jle
and
movsb
add
outsb
mov
das
sahf
outsl
and
fildll
das
pop
jae
stos
les
xor
jbe
push
and
in
jae
fistpl
dec
pop
mov
nop
and
nop
je
jecxz
sbb
sub
stos
cli
xchg
dec
nopl
test
inc
mov
loopne
arpl
in
mov
xor
mov
pop
xchg
sub
add
push
repz
fwait
jae
lcall
and
jg
xchg
out
shlb
int3
ds
test
xchg
cld
cmp
cs
iret
sub
pop
inc
daa
lret
fiaddl
sub
int3
cmp
repz
cmp
add
stos
clc
rorb
sub
mov
test
cmp
lret
out
sbb
jg
mov
add
sub
pop
dec
in
shrl
mov
and
jg
fs
cs
mov
mov
insb
je
mov
leave
insb
xchg
xor
xlat
mov
mov
movsl
jae
ret
xchg
pop
push
stc
ljmp
ljmp
add
stos
cld
push
add
jns
fwait
sub
push
add
cmp
and
xor
movsl
nop
out
xchg
out
pushf
pop
insl
cmp
adc
sbb
jge
or
rolb
call
je
pushf
in
mov
loop
mov
xor
out
insb
divl
imul
inc
std
lret
cmp
cwtl
scas
xor
xor
and
testb
cwtl
cmc
pop
adc
and
mov
or
adc
mov
jae
jne
fwait
imul
ftst
cmp
fdivs
shl
push
das
fcomi
cmp
test
stos
pop
ja
add
mov
aad
sti
xchg
das
inc
in
data16
mov
hlt
dec
loop
dec
jecxz
dec
push
dec
mov
inc
adc
pop
roll
js
mov
mov
mov
cwtl
xchg
jb
incl
stos
lock
ret
out
and
pusha
andb
cmp
and
cmp
mov
cmpsl
mov
or
jnp
xor
push
sub
push
sbb
stos
dec
xchg
pop
add
scas
dec
push
mov
out
sub
fsubl
mov
jge
fdivs
mov
imul
pushf
mov
inc
and
inc
xchg
xchg
dec
mov
sub
in
sbb
aaa
mov
xchg
push
pop
jecxz
sub
jns
imul
imul
ljmp
data16
sub
fnstenv
xchg
cmp
stc
push
inc
mov
mov
mov
js
shrb
push
push
cmpsb
add
xchg
lret
cmp
sub
sahf
jno
addl
cli
mov
mov
mov
insb
leave
and
std
jl
out
out
fs
in
jmp
inc
daa
sbb
mov
aad
mov
jge
jecxz
mov
and
add
xor
add
xor
mov
sahf
jg
mov
rclb
jge
dec
xor
push
dec
ljmp
xor
mov
cwtl
xchg
mov
inc
inc
push
arpl
push
add
inc
lret
xor
inc
jnp
movsb
pop
push
lcall
pushf
add
sahf
inc
sbb
mov
aam
jecxz
mov
je
rcrl
xchg
movsl
repnz
lret
sub
xchg
sti
negb
mov
cmpl
cmp
inc
push
cmpsb
adcl
cli
jnp
scas
out
cmc
jae
jge
in
mov
sub
xlat
xchg
shr
clc
and
jns
push
pop
daa
pop
cmp
aaa
int3
jno
jne
data16
daa
pop
mov
push
fnstsw
cmp
lret
adc
push
addr16
mov
mov
call
fsub
js
negb
sbb
mov
push
or
cmp
lods
mov
inc
xor
sub
dec
fisubs
jle
aad
and
pushf
adc
mov
stos
sahf
xchg
ss
cmpb
je
rep
test
nop
cld
xchg
testl
xchg
test
inc
ret
mov
test
mov
push
cmp
int3
and
lahf
jecxz
or
lods
roll
loopw
mov
sbb
dec
lods
and
testl
aad
stc
xchg
shr
jne
and
shll
sub
out
sbb
ljmp
mov
fldl
mov
mov
xor
xor
test
mov
js,pt
aas
xchg
xchg
loopne
push
jo
cmp
pop
push
popl
inc
mov
mov
add
movsb
outsb
lret
push
xchg
insb
mov
mov
int3
add
cli
sti
outsl
icebp
fs
adc
out
ds
cld
jns
mov
adc
jb
scas
jmp
mov
in
cmpsl
pop
mov
lds
popa
push
push
loop
jp
cmp
mov
pop
sbb
fsub
jmp
pop
xchg
xchg
lahf
adc
jo
jno
xor
stos
push
les
call
add
repz
push
mov
stos
cmp
sub
shrb
mov
pop
je
or
fldt
cmp
xchg
sbb
loopne
and
es
imul
clc
loope
xorb
adc
mov
mov
jecxz
movsl
mov
sub
sahf
addr16
aad
pusha
nop
pop
je
mov
test
les
mov
dec
add
jno
aad
sahf
pop
popf
push
inc
sbb
jecxz
and
xlat
cli
push
adc
jb
test
aam
jno
cmp
adc
mov
scas
mov
insl
jae
cli
cmp
notb
iret
inc
into
xchg
iret
andb
cmp
scas
jns
ljmp
push
push
push
loopne
out
jno
and
or
repnz
leave
jmp
sub
arpl
lahf
mov
repz
sti
xchg
inc
cmp
push
sbbl
sbb
pop
fwait
imul
add
push
lods
frstor
mov
or
imul
pushf
aas
xor
lret
xorl
and
stc
out
rcll
negl
inc
push
jns
pop
add
insb
shlb
lret
cld
repz
rol
jne
cmc
adc
push
jecxz
sub
inc
add
xlat
cltd
pop
jg
out
loop
push
sub
xor
loop
insl
adc
lods
xor
in
sub
jle
outsl
test
mov
sbb
inc
and
les
jecxz
push
push
dec
pop
xor
inc
int3
in
add
mov
cld
dec
shll
das
xor
lods
jecxz
loope
ljmp
push
cmp
mov
sbb
mov
xchg
mov
push
xor
arpl
xor
sbb
dec
jbe
mov
mov
btr
pop
mov
mov
dec
arpl
mov
lret
jb
add
lock
push
jae
dec
xchg
xchg
mov
aas
xchg
jecxz
push
arpl
dec
cmp
mov
rcr
push
xchg
hlt
fcompl
fsubrs
rcrl
inc
or
mov
sbb
test
data16
lods
lds
inc
xchg
iret
test
fistpl
lcall
out
aad
and
adc
pop
lds
jbe
les
pop
sub
cmpsb
fadd
mov
sub
fcomps
shlb
out
jae
add
cmpsb
insb
xchg
out
inc
mov
cmp
rcll
sub
xor
sbb
jae
stos
mov
out
push
ljmp
dec
mov
mov
cmpsl
pop
addr16
sbb
mov
mov
inc
fimull
mov
xchg
popf
sub
jae
push
sub
imul
xor
sub
fnsave
lods
imul
orl
shl
popa
or
les
fsubr
inc
mov
testb
lods
lcall
dec
push
out
int
rcl
lahf
dec
inc
pop
mov
add
addr16
fwait
mov
mov
adc
jae
mov
mov
fimuls
loopne
push
fmull
mov
out
fwait
mov
and
shll
sbb
outsb
lahf
pop
or
xchg
mov
mov
xchg
insb
xchg
imul
xor
std
push
pop
mov
hlt
stos
jnp
and
loope
add
stos
xor
lcall
pop
fmul
inc
call
in
loope
ret
mov
inc
mov
jbe
rolb
dec
pop
dec
and
ret
mov
sub
jnp
in
mov
sahf
cmp
jmp
in
cmpsl
insl
mov
lcall
mov
imul
inc
flds
arpl
pop
mov
nop
dec
jle
cmp
or
mov
in
mov
rcr
out
cmc
stc
scas
adc
idivl
hlt
or
or
xor
stos
cs
add
xchg
scas
adc
testb
loopne
dec
mov
clc
repnz
adc
cltd
pop
testl
xor
sbb
jnp
jbe
inc
pop
mov
sti
aas
mov
push
out
gs
inc
jecxz
vpmacswd
test
das
cmc
mov
test
mov
jmp
adc
icebp
xchg
pop
cmp
jg
lea
pop
dec
loope
inc
mov
insl
xchg
popa
data16
dec
inc
cmp
vdivpd
lcall
out
mov
jns
xor
mov
mov
iret
scas
ds
scas
hlt
fiaddl
sub
mov
fwait
cmpsl
ud1
push
jge
push
adc
cmpsb
jge
imul
bound
mov
fdivl
add
pop
shrb
pop
mov
in
std
sub
sbb
mov
shrl
or
or
jle
sub
jnp
jg
pushf
hlt
dec
repnz
test
mov
jb
les
push
aam
jg
sub
and
leave
ljmp
ret
subb
enter
fwait
cli
dec
mov
cmpsb
inc
mov
insl
lcall
lret
xchg
dec
mov
pop
jnp
push
stos
sar
mov
xchg
cli
push
pop
test
sbb
int3
test
mov
mov
rcrl
test
and
mov
popa
popf
mov
fsubl
lods
mov
sub
out
mov
lds
pop
adc
je
in
int
push
insb
and
inc
and
test
adc
dec
inc
enter
into
mov
inc
sub
repnz
pop
pop
aam
bound
neg
inc
aad
xor
jb
pop
mov
mov
jp
mov
inc
cld
dec
mov
xchg
or
adc
xchg
mov
mov
addl
int
das
faddl
test
ss
sbb
mov
dec
lahf
mov
add
jmp
jno
dec
inc
pop
mov
xchg
cmp
cmp
pop
jb
dec
les
scas
jp
pop
and
fstps
xor
es
and
cmp
icebp
jns
out
out
mov
dec
ljmp
mov
fldcw
int
xchg
pop
cmp
out
cmc
ljmp
div
jb
push
in
xlat
mov
adcb
rcl
inc
cli
dec
leave
push
push
fisttps
or
jecxz
cltd
sbb
ds
push
std
es
es
mov
ret
or
stos
push
std
enter
sub
stc
jae
jl
ret
popf
and
insl
orb
xor
push
cmp
mov
push
mov
jo
mov
xchg
inc
jg
test
adc
insb
mov
pop
mov
mov
gs
fnstenv
sub
sbb
outsb
popa
dec
pop
adc
pusha
mov
sbb
cmp
ja
adc
iret
jns
icebp
jl
mov
adc
fcompl
adc
imul
mov
pop
adcb
inc
lret
push
bound
enter
push
push
jmp
aam
xchg
movsb
scas
icebp
das
jno
push
iret
pop
fcmovnu
test
test
sbb
add
add
jo
out
mov
mov
and
pushf
test
ljmp
test
cs
aam
jb
cmpsl
inc
or
in
arpl
pop
xor
ds
sub
push
lcall
adc
cmp
jge
adc
insl
and
jp
xchg
pop
insb
xor
dec
and
je
mov
pop
mov
test
sub
mov
das
or
enter
lock
lea
mov
xchg
jl
js
bound
in
dec
sarb
in
mov
outsl
cltd
or
test
gs
dec
and
inc
pop
inc
nop
lods
pop
push
xchg
mov
loope
sub
xor
push
cmp
lret
fs
fwait
mov
ljmp
cs
lret
aas
icebp
dec
movsb
cmc
xor
xchg
lret
push
loope
or
push
aam
cmpsb
loopne
fistpl
aad
xchg
cli
xchg
mov
dec
mov
inc
add
rclb
jno
lock
scas
and
sbb
jnp
sub
or
pop
imul
mov
imul
mov
dec
mov
popa
jmp
inc
mov
pop
pop
lock
push
cmp
jbe
add
inc
lret
mov
iret
sahf
notl
lret
sub
mov
dec
push
mov
jo
clc
mov
dec
xor
loop
mov
xchg
fdivrl
sbb
mov
arpl
in
out
sub
movsb
and
sub
sbb
mov
push
aaa
dec
lahf
mov
mov
mov
neg
and
cmp
mov
xor
lds
pusha
out
fisttpll
push
sti
xor
int
in
adcb
mov
cmp
or
xor
adc
push
mov
cmpsb
ret
dec
xchg
mov
ret
test
push
outsb
add
addr16
xchg
mov
mov
cld
mov
leave
ret
in
out
and
inc
into
ja
lds
lods
dec
outsb
mov
imulb
jmp
dec
loop
jge
xor
roll
pop
xchg
and
loopne
jmp
movsb
popf
mov
adc
leave
mov
or
pinsrw
inc
filds
daa
sbb
lret
mov
push
ljmp
jae
bound
xor
mov
xchg
push
aad
outsb
scas
pop
dec
mov
outsb
pusha
popa
jb
stos
push
adc
movsl
addr16
sbb
sbbl
mov
in
cmpxchg
je
js
inc
or
and
pslld
out
nop
ss
sub
scas
sub
push
mov
adc
icebp
pop
dec
inc
mov
lea
mov
test
int
pop
es
je
ss
enter
add
inc
les
test
mov
push
jle
imul
lea
xchg
mov
sti
adc
int
sar
outsl
mov
or
fldcw
jle
loopne
xchg
sub
mov
mov
sub
xor
xchg
dec
push
xchg
movsl
inc
push
cmp
lcall
leave
insl
out
test
loopne
xor
cmpsl
adc
mov
jge
ss
fnstcw
fnstenv
test
and
mov
int3
fwait
dec
cs
outsl
sbb
pop
popa
test
xor
les
dec
stos
cmp
jae
rorb
aas
and
sub
mov
mov
pop
mov
dec
sarb
add
xchg
lret
ss
cmpsl
jb
mov
xor
adc
or
jns
nop
test
inc
pop
lods
fsubl
add
lods
notb
cs
into
data16
insb
push
aam
add
jmp
pop
dec
aas
cmp
out
into
add
add
jb
and
sti
inc
out
lds
sti
pop
dec
cmp
jle
push
rorl
or
in
xchg
iret
mov
push
stc
jns
in
inc
inc
aaa
push
sbb
std
fs
and
pop
scas
test
movsl
fwait
jnp
int3
mov
rclb
sbb
sub
push
mov
aam
inc
or
rcr
fsts
inc
lods
dec
xor
fimuls
insl
cmp
nop
lret
add
fisttpl
push
inc
pop
mov
lahf
mov
cmpsb
sbb
lds
test
xchg
lds
movsb
lret
lret
arpl
push
xor
jne
imul
imul
adc
call
or
icebp
arpl
jg
push
xchg
mov
lds
xchg
outsb
pop
jge
out
out
loopne
into
sub
dec
xor
decb
aad
add
lock
sbb
or
push
cmp
and
cmpsb
xchg
mov
and
sub
xor
mov
xchg
sub
mov
add
in
cld
or
inc
lods
add
or
jle
lods
ja
cmp
movsl
xchg
fbstp
cmpsl
add
stc
aaa
stc
inc
jbe
sti
aad
dec
fyl2x
cwtl
sbb
es
jbe
push
in
mulb
sbb
mov
cmp
stos
popf
xchg
mov
repz
or
sub
lahf
push
in
int3
xchg
inc
mov
xor
xchg
aas
push
ret
aad
mov
mov
jae
movsl
dec
add
xchg
nop
adc
insb
jno
mov
adc
ljmp
add
dec
iret
nop
loop
popa
aam
cmp
lcall
out
aaa
js
stos
enter
fistps
cwtl
arpl
test
popa
fdiv
adc
lcall
push
sub
xchg
out
adc
xor
cmp
adc
mov
lret
cmp
pop
mov
test
xor
mov
cmp
mov
xchg
cltd
shlb
dec
jb
adc
jb
pop
add
xor
scas
in
dec
or
mov
aaa
repnz
popa
pop
inc
sub
jmp
xor
cwtl
test
loopne
dec
mov
test
pop
jge
and
mov
insl
xor
sbb
mov
sub
das
cmp
xor
imul
add
or
mov
icebp
leave
dec
mull
dec
fnsave
hlt
xchg
cmc
jnp
mov
out
mull
push
cmp
mov
push
push
inc
fnstsw
sbb
jmp
in
aam
fdivrl
jns
sbb
push
sbb
cmp
mov
andb
mov
pcmpgtb
inc
pop
mov
pop
cmp
add
cmpl
jl
gs
mov
pop
add
cld
icebp
and
and
es
shrl
xchg
inc
push
lea
lods
imul
jbe
arpl
cld
add
fucomi
add
dec
add
push
aam
mov
add
jp
icebp
dec
jo
ret
sbb
roll
mov
pop
andl
xlat
imul
lcall
jae
lods
cltd
mov
leave
mov
dec
popf
test
dec
je
jecxz
nop
mov
fildll
add
cmpsb
out
scas
push
insb
das
pusha
sti
jb
sub
xor
lret
insl
pop
inc
and
jo
das
mov
inc
sbb
fs
ret
push
lret
mov
fstps
sbb
mov
push
adc
mov
add
loopne
lds
mov
int
inc
mov
dec
pop
fistps
fiaddl
div
loopne
std
sub
popl
push
jno
in
cmp
cmp
stos
aas
pop
sahf
push
jp
ret
or
sbb
jge
shl
and
stc
ret
lret
popa
mov
das
cmp
push
int
push
inc
popf
mov
mov
xchg
jmp
jb
pushf
and
mov
jns
sub
jecxz
fistl
xchg
hlt
out
arpl
xchg
mov
jmp
lret
dec
ss
jg
sub
cmp
add
lahf
mov
mov
daa
outsb
dec
lock
jno
insw
add
add
push
aas
xor
add
push
and
mov
das
inc
cmp
test
mov
adc
inc
mov
loop
test
mov
pusha
mov
and
fdivrs
or
dec
scas
stos
dec
test
lcall
in
jmp
ja
loopne
lds
xchg
sub
add
jge
loope
out
rcll
xorl
adc
mov
cmp
call
push
loopne
sbb
pop
mov
jp
xlat
sbb
jmp
pusha
and
jp
push
movsl
insl
mov
out
ret
sbb
imul
push
loopne
out
inc
fs
lea
je
cmc
leave
loopne
lock
add
movsb
inc
mov
leave
divb
pop
inc
adc
sub
inc
pop
or
in
test
pop
cmp
rorb
mov
cmp
push
xor
add
jp
cmp
mov
pop
push
mov
cmp
ja
sbb
call
sbb
cmpsb
repz
sbb
push
repnz
push
jbe
jecxz
ss
arpl
divb
adc
lret
jmp
or
outsb
add
movsl
pop
aad
cmpsl
push
push
rcrb
xor
mov
cmp
test
add
and
sbb
sahf
add
std
push
loopne
xor
or
int3
and
adcl
or
and
ja
ljmp
xlat
outsl
xor
loop
enter
enter
icebp
pop
shlb
gs
mov
test
and
popa
mov
aaa
mov
lods
pop
sbb
das
inc
fcmovnu
call
popa
sub
or
jbe
std
cld
fistpll
push
mov
and
sti
in
mov
mov
jecxz
sbb
popa
test
or
cli
cld
sub
mov
clc
or
notb
cmp
dec
xchg
push
push
jbe
lods
xor
hlt
imul
pop
aaa
mov
shrl
dec
lock
and
cli
and
jne
fidivs
clc
sbbl
mov
jle
jo
je
orl
fbld
jle
xorl
addr16
cmp
or
ret
push
mov
push
gs
gs
test
mov
sahf
mov
pop
nop
inc
xor
xchg
jl
mov
lock
dec
mov
push
out
clc
mov
xor
dec
stos
mov
mov
bound
and
inc
pop
cltd
mov
sbb
dec
pop
jno
aam
jl
mov
sbb
mov
and
push
add
clc
push
push
sub
jg
add
in
mov
dec
jmp
push
sahf
in
sub
push
rcl
jne
mov
inc
pop
push
pusha
and
sub
sub
data16
mov
aas
or
icebp
or
aad
jno
sahf
mov
cmp
xlat
imul
jae
mov
push
bnd
inc
add
jne
ror
mov
mull
rorl
outsb
std
pop
sbb
mov
and
sbb
andb
and
jecxz
and
loop
or
psrld
or
push
mov
sub
dec
cltd
mov
xor
jo
sahf
xchg
and
adc
adc
das
mov
cmp
pop
push
cltd
or
mov
pop
inc
jp
mov
jg
daa
dec
sti
cmp
mov
jnp
xchg
dec
xor
imul
in
jo
adc
pop
mov
es
rcl
sub
and
cmp
rclb
lcall
push
pop
sbb
cmp
in
loope
or
int3
lods
das
lret
lea
nop
fsubl
mov
push
jo
push
les
and
sbb
stc
in
mov
fadds
cltd
test
mov
leave
movb
add
jb
js
lds
mov
mov
mov
sbb
lea
inc
pushf
ret
mov
insl
jg
jnp
push
fwait
inc
cs
test
repz
stos
fmull
push
jbe
jae
adc
es
add
inc
lcall
sbb
pop
pop
dec
pop
add
cmpsl
mov
lgs
stos
push
mov
ds
mov
or
xlat
or
mov
pop
mov
mov
or
icebp
push
pop
jmp
jbe
sub
jmp
rclb
add
dec
sbbl
popa
stos
stos
and
inc
push
cli
pminsw
ja
daa
mov
jne
jmp
add
mov
in
push
sub
adc
and
test
sbb
fwait
add
mov
xchg
ds
mov
insl
push
pop
lret
xchg
movsl
sbb
rorb
jb
or
cmpsl
push
orl
xor
push
dec
mov
push
cli
add
sub
addr16
daa
xchg
mov
loop
ja
push
jns
js
cmp
and
stos
fcoml
stos
mov
enter
adc
daa
hlt
inc
or
or
rcrb
jo
andb
stos
pop
out
pusha
int3
sbb
cmc
fildll
mov
int
xchg
imul
cmp
pop
inc
pop
add
jne
push
notl
and
add
and
nop
xor
out
imul
mov
inc
dec
int3
aaa
lds
gs
xchg
lcall
push
adc
lahf
stc
sbb
dec
sbb
adc
push
cmovnp
and
jne
mov
add
jge
repnz
jno
dec
and
imul
mov
pop
fisubrl
adc
jle
lcall
sub
ds
dec
bound
ret
rolb
test
jle
mov
and
insl
shlb
pop
pop
stc
inc
stos
jmp
lret
inc
jb
and
outsl
pusha
fwait
cmp
xor
jb
pop
dec
pushf
sub
push
ss
lea
inc
mov
xor
fisubrs
ja
popf
mov
loop
inc
add
mov
pop
xchg
out
shll
sub
adc
pop
out
aad
jns
cmpsl
fldt
and
or
aas
das
repnz
add
adc
xchg
lcall
mov
inc
lret
fldcw
idivl
stos
mov
pop
push
aaa
add
test
and
aam
in
std
xchg
sub
ss
pavgw
push
mov
cmc
jmp
dec
or
int
sarb
jg
ss
aam
jbe
data16
cmp
cmp
fidivs
fwait
inc
mov
jns
out
gs
clc
hlt
fidivl
push
lahf
sbb
mov
jecxz
mov
roll
adc
sub
pushf
movsl
ds
mov
in
mov
aad
inc
push
rol
mov
adc
sbb
cwtl
dec
dec
lock
mov
push
sub
lcall
mov
aas
outsl
imul
daa
int
inc
popf
lcall
mov
mov
out
fstps
or
push
into
negb
jne
mov
adc
add
incl
inc
sbb
lret
dec
aad
movsb
pop
fbstp
or
push
imul
andl
incb
js
mov
fcmove
jne
and
cld
adcb
movzwl
fsubrp
jge
lods
negl
jle
jns
jmp
xchg
inc
ss
test
sbbl
rcrb
into
mov
movsl
sub
popa
fdiv
cmp
xchg
je
movsl
push
imul
movsl
sub
cmp
jle
movsl
sbb
shl
into
push
or
dec
push
xchg
scas
pushf
mov
xor
icebp
jge
in
xchg
pop
cmp
insb
push
movsb
xchg
cli
and
adc
mov
xchg
leave
adc
popf
mov
push
lahf
adc
pop
mov
xchg
test
aas
sbb
sub
andl
adcb
push
pop
popa
xchg
and
aaa
lret
gs
ds
insb
int3
sar
movsb
or
or
mov
lock
cmp
xor
rsm
cmpsl
in
loopne
fs
mov
lds
and
mov
xchg
rclb
or
pop
add
cmp
lock
inc
pop
mov
adcl
push
inc
fwait
and
cli
fmul
fcmovnu
and
or
xchg
xchg
loop
jae
cmp
mov
adc
aad
mulb
lea
enter
jl
xchg
jbe
add
scas
sahf
test
mov
enter
stc
xor
mov
jne
jne
xor
leave
imulb
stos
imulb
subl
fstp
push
dec
shr
mov
mov
sub
dec
das
inc
das
xchg
cltd
clc
sub
test
enter
scas
and
mov
and
popa
adc
dec
pushf
pop
addr16
and
mov
inc
mov
lods
sub
in
pushf
out
ret
dec
or
mov
adc
add
pop
mov
mov
iret
pop
mov
xchg
cmpsl
jp
mov
arpl
sub
push
dec
movsl
xchg
or
add
in
inc
adc
cmp
add
in
loop
jl
pusha
test
inc
cmc
add
out
sbb
stc
outsb
negb
sbb
cld
push
daa
rorl
dec
mov
cmp
add
and
cmpsb
lock
inc
push
data16
dec
dec
out
dec
push
push
scas
ret
aaa
sub
es
aas
mov
jp
sbb
sub
sub
adc
fldt
in
jo
or
adc
xorb
roll
inc
fsubs
ret
inc
pop
pop
jbe
test
outsb
pop
jns
lds
gs
rcll
ficomps
inc
mov
pop
aaa
lret
or
xchg
mov
out
dec
in
add
scas
mov
sub
xchg
sub
adc
andl
movsl
loope
pop
pushf
push
hlt
mov
mov
fwait
sub
mov
leave
sub
rcl
xor
sbb
fwait
stos
sti
cmp
jo
mov
addr16
fdivl
sti
cmp
pop
lods
cltd
or
mov
xor
imul
jle
imul
cmpsl
test
inc
push
insb
ljmp
daa
sahf
lods
or
pop
jge
cmp
movsl
outsb
xchg
lahf
pop
mov
push
fidivrl
in
push
xchg
xchg
int
aaa
popf
not
pop
sub
sahf
in
jmp
pop
jp
imul
push
sbb
dec
adc
loop
les
xchg
in
in
popf
inc
in
daa
out
ret
inc
pop
pop
cmp
sbb
pusha
jg
clc
loopne
leave
loop
sarl
pop
dec
scas
out
dec
lds
pop
les
into
mov
lret
jo
inc
outsl
mov
sbb
jbe
xor
sbb
mov
adc
arpl
inc
aad
mov
pushf
xor
pop
stc
scas
imul
mov
test
repnz
repz
ja
bound
data16
inc
and
lret
cs
aad
in
stos
out
jg
mov
mov
jecxz
sub
push
shr
mov
xchg
mov
jmp
clc
pop
jg
jnp
dec
inc
mov
xor
cmp
mov
mov
ret
cmc
pop
clc
mov
divl
sub
int3
jg
fiaddl
stos
or
add
fnstenv
scas
shl
int3
mov
sbb
filds
sub
sbb
xchg
mov
sub
adc
dec
repnz
inc
fwait
add
cwtd
lods
out
push
out
sub
mov
push
out
or
negb
aaa
dec
pop
or
push
mov
add
sub
call
mov
mov
xorb
aad
fstps
fwait
loop
sub
xor
xor
sbb
cmpsl
lcall
xchg
test
lahf
lods
aas
sbb
push
mov
inc
and
mov
mov
lock
mov
and
jno
xchg
push
push
imulb
popa
jb
aad
inc
testb
mov
inc
in
xor
and
sbb
and
aaa
daa
dec
inc
dec
pop
push
push
int
cmp
cmp
push
loope
push
add
mov
test
faddl
jae
int
cli
lods
push
ss
shl
jno
jnp
mov
clc
jp
insl
movsb
movsb
aaa
push
stc
xor
inc
pop
das
imul
test
decl
pop
daa
jg
loop
push
or
push
mov
les
stos
sbb
sbb
dec
mov
addr16
mov
ja
movsb
mov
push
fimuls
xor
push
and
and
rclb
and
test
inc
add
rorl
ljmp
sbb
push
xchg
adcl
test
aad
or
call
lods
or
imul
stos
repz
inc
test
or
andl
push
push
inc
inc
jg
sub
cwtl
cmp
jae
fldcw
movsl
adc
es
jb
lahf
movsl
out
cmpl
push
shlb
pop
sbb
dec
adc
and
out
pop
lods
fucom
ja
daa
mov
push
mov
xchg
fsubrs
punpckhdq
out
jge
xchg
mov
or
stos
adc
jge
dec
shrb
int
mov
ja
loope
imul
fldenv
dec
stos
or
sub
fidivrs
adc
sub
fidivl
inc
fldenv
cmpsl
sub
jns
jmp
xlat
out
pop
push
mov
icebp
outsb
sub
aaa
lahf
stc
and
xlat
push
test
cmpsl
push
fists
mov
cmp
lahf
mov
add
and
rorl
inc
jp
xchg
sahf
out
mov
sub
adc
pop
jl
popa
push
rcll
mov
cmp
xchg
lds
jbe
stos
inc
pusha
sub
dec
dec
iret
mov
dec
dec
mov
and
in
inc
aaa
inc
aam
inc
mov
and
mov
data16
lock
or
fdivrl
bound
pushf
push
inc
aam
daa
cmc
imul
pop
jnp
dec
add
xor
ja
or
inc
cmpsl
sub
cltd
popf
mov
pop
adcl
lcall
in
ss
and
dec
hlt
sub
imul
lahf
mov
test
xor
adcl
xchg
adc
outsl
jns
pop
fdivl
fdiv
sar
jne
mov
push
out
sbb
sub
cmpsb
sub
hlt
out
sbbl
fidivl
pushf
pop
fcoml
xor
push
cmp
outsb
mov
pop
xchg
lods
jmp
xor
mov
in
lahf
mov
add
lea
es
imulb
es
xor
jo
fs
test
inc
jne
cmc
repz
fwait
jl
mov
aas
cwtl
and
add
push
pop
add
lods
clc
mov
adc
and
mov
fstpl
xrelease
xchg
decb
aaa
cwtl
cld
call
xor
dec
mov
dec
out
adc
cmp
xor
cmpsb
mov
fisttpl
pop
aam
add
lds
add
cmp
mov
or
and
pop
aad
push
push
dec
call
dec
lods
lret
fdivl
mov
mov
add
pop
adc
cmc
test
shrb
push
inc
fldcw
outsb
jno
sub
pop
lods
and
sub
loop
add
ja
std
mov
sarb
faddl
out
and
stos
inc
shl
ror
lret
lret
cmpsb
jns
push
adc
stc
inc
ret
dec
xchg
pop
xchg
lahf
cmp
ljmp
fildl
int3
sbb
lock
cld
dec
cli
mov
leave
test
out
test
mov
jno
dec
inc
dec
lock
and
pop
inc
cmp
add
push
mov
jb
push
pop
mov
or
lea
adc
pop
hlt
leave
xchg
xor
dec
mov
dec
test
mov
sbbl
scas
xor
arpl
outsl
add
cmpsl
insl
dec
jnp
push
dec
mov
adc
mov
loope
xchg
cli
call
mov
mov
es
pop
out
push
lock
mov
xchg
mov
lcall
push
inc
cli
insl
mull
xchg
into
sub
inc
inc
pcmpeqb
mov
pop
mov
sbb
sti
insb
lahf
jmp
jo
xchg
out
stc
jmp
sti
mov
fnstenv
mov
add
sub
scas
fucomi
sarb
ja
push
scas
dec
sbb
sub
addr16
mov
jmp
in
xor
lods
xchg
mov
cmp
stc
push
and
incb
test
or
repnz
mov
adc
mov
xchg
add
adc
in
aaa
iret
subl
outsb
sub
sbb
adc
xor
lret
in
add
rolb
mov
outsb
jge
sub
mov
push
adc
mov
add
lret
sbb
cmp
mov
mov
fisubrs
aam
lds
mov
sbb
cmp
or
or
mov
or
mov
ljmp
mov
enter
adc
call
push
jg
pop
negl
sbb
repz
sub
lret
jns
imul
mov
cmp
inc
pop
inc
cmp
adc
arpl
jbe
push
ret
mov
or
sub
fdivrl
sub
mov
sub
cs
scas
mov
push
test
or
cld
pusha
cmp
lret
jb
mov
ja
xchg
leave
cmp
stc
jb
andb
outsb
inc
sbb
adc
sti
iret
and
xchg
or
fists
out
loopne
call
aas
pop
mov
jmp
shrl
fidivrs
stos
test
cmp
inc
je
out
cli
cmp
mov
jae
int3
or
es
jne
jp
mul
call
pop
shl
pusha
les
mov
jle
ficoml
mov
test
sub
scas
push
fildll
js
mov
sbb
enter
and
aam
dec
inc
es
fmul
mov
mov
in
test
pop
lods
xchg
cmp
test
sbb
or
aas
cmc
ljmp
add
mov
add
mov
pusha
sbbb
fldenv
mov
add
fsubl
imul
int3
js,pn
mov
add
orl
das
subb
pushf
icebp
dec
pop
cld
mov
addb
and
arpl
loop
inc
lea
push
fstpl
dec
pusha
je
push
adc
stos
test
jmp
stos
and
inc
jbe
lock
sub
je
fsubrs
pop
rclb
pop
cmp
outsb
ja
idivl
shll
popf
sbb
push
outsl
call
add
lods
or
jne
push
in
mov
add
je
cmc
dec
adc
lret
adc
jns
mov
insb
gs
mov
or
push
ss
adc
sub
xchg
or
dec
pop
pop
mov
pop
shll
and
call
xlat
add
lret
mov
andl
push
inc
test
test
jmp
and
shll
inc
mov
into
push
mov
pop
jl
push
ret
lahf
mov
pop
xorb
ss
xor
stc
call
mov
inc
push
outsl
in
adc
inc
test
in
std
xlat
scas
xchg
dec
cmp
out
inc
int
sti
push
inc
inc
lods
inc
xchg
and
push
dec
inc
dec
push
jl
pop
outsl
test
mov
cmp
movsb
mov
and
mov
addr16
ds
out
push
int3
movsl
out
je
ja
inc
push
shr
and
add
loope
add
bound
jmp
pop
lcall
cmp
mov
dec
lret
addr16
ror
hlt
inc
pop
lods
scas
add
ret
hlt
into
mov
popf
cld
fidivl
fisttpll
or
pop
xchg
inc
popa
sbb
xchg
inc
movsb
rcl
pop
les
in
add
pop
std
mov
cmp
nop
sbb
add
addr16
push
movsl
push
lds
jp
jge
xchg
into
lods
fisubrl
sub
insb
add
bound
mov
inc
negb
xor
push
out
and
ret
iret
push
adc
mov
lods
aad
sahf
jecxz
sbb
pop
enter
outsb
inc
jbe
and
mov
imul
mov
add
pop
into
jo
inc
ret
pop
adc
sub
xchg
ret
es
add
jns
pop
into
sbb
popf
ret
sbb
cmp
in
iret
je
add
fstpt
push
dec
pop
outsl
jns
ss
scas
xor
fs
es
push
in
out
ss
inc
ret
aas
inc
sbb
pushf
roll
sbb
jg
add
int
pop
imul
xchg
fstpt
sub
ret
and
in
subb
lods
push
add
cmpsl
mov
add
js
mov
push
push
jo
sahf
insb
xor
add
aas
mov
ret
push
cmc
out
xor
mov
adc
push
loope
lds
jo
add
sbb
es
jns
push
jg
fsubrl
cld
incb
cmp
or
and
orb
and
enter
mov
mov
scas
mov
pop
mov
jne
insl
outsb
adc
push
xchg
pop
cmp
mov
movsb
cmp
mov
mov
mov
mov
mov
sub
jmp
aaa
addr16
cltd
out
jp
push
push
and
test
fildll
jge
test
subl
inc
mov
addr16
inc
les
mov
jns
sbb
inc
pusha
pop
jnp
or
lcall
data16
push
jns
sub
ja
pop
cmp
add
pop
lea
dec
andb
xchg
adc
jl
push
push
mov
cwtl
inc
test
jae
gs
pop
mov
add
mov
push
xchg
aad
add
sbb
cs
test
clc
sub
sub
or
jg
or
insl
les
xchg
out
call
push
mov
sbb
test
sub
pop
out
popf
add
pop
xorb
mov
sarl
cs
andb
notl
adc
popa
stc
xchg
or
out
repz
sbb
add
subb
push
pop
jmp
sub
dec
jmp
ret
pop
mov
jmp
sbb
xchg
shrl
push
jmp
xchg
dec
inc
mov
pop
mov
loop
dec
leave
and
mov
mov
jp
pop
dec
scas
scas
mov
dec
fdivrl
mov
fistl
jnp
add
popa
mov
xchg
repz
adc
loope
scas
fdivrp
add
xchg
popa
fxch
push
stc
dec
push
scas
mov
addr16
jge
daa
mov
stc
jp
clc
int
aad
and
jl
add
pusha
and
jg
mov
sahf
sbb
xor
jbe
xor
div
test
push
mov
aaa
loopne
jae
jne
add
inc
mov
sub
mov
inc
xchg
lea
pop
lret
out
stos
cmp
idivb
imulb
inc
shlb
cli
xor
mov
xchg
mov
fmull
xor
out
sbb
sbb
and
mov
jg
mov
clc
adc
ss
stos
fstpl
std
pop
dec
das
jnp
ficomps
push
paddw
cld
mov
dec
pop
aam
iret
xorl
aas
imul
xchg
xchg
ljmp
mov
shlb
jp
clc
pop
leave
stos
pushf
and
movsl
addr16
dec
sbb
mov
pop
cwtl
or
adc
loopne
mov
xor
sbbb
movsb
aam
movsl
adc
aas
fwait
push
push
stc
mov
pop
subb
and
jo
inc
mov
lods
mov
mov
out
mov
test
xor
mov
dec
cld
in
push
cmp
mov
mov
je
xchg
jg
jmp
push
outsl
adc
adc
lods
loopne
movsb
pop
xchg
cmc
stos
hlt
rorl
push
out
xchg
lods
xchg
or
sub
jl
dec
scas
pop
inc
mov
adc
aas
cmp
mov
insl
adc
lahf
lret
lods
repz
sbbb
mov
pop
out
stos
outsb
lods
roll
popa
jb
and
iret
out
inc
mov
push
or
dec
leave
pusha
dec
fnstcw
lock
push
sbb
fiaddl
cmp
fstpl
sbb
xor
inc
mov
sbb
fisubl
mov
out
into
push
xchg
ljmp
adc
jns
inc
mov
inc
and
test
mov
fldt
jb
jmp
adc
fwait
push
pusha
cmp
out
adc
dec
dec
pop
xor
test
add
mov
scas
sbb
test
sti
mov
pusha
dec
cmp
shlb
xchg
adc
jbe
scas
xlat
xor
jb
test
into
int
into
fs
adc
dec
xlat
cmpsl
sbb
jg
push
dec
mov
cmp
mov
dec
cmp
pushf
pusha
mov
pop
add
test
sub
pusha
and
out
and
pushf
inc
test
in
fsubrs
cmp
fmull
inc
cmp
mov
pusha
lods
cmp
push
hlt
cli
gs
push
push
jae
add
pop
sub
pop
das
popf
jle
mov
sub
leave
in
jecxz
decb
sbb
int
in
fldenv
ficoms
or
mov
repnz
jae
add
mov
xchg
mov
repz
sti
push
xchg
push
insl
in
jbe
push
jno
cmp
hlt
arpl
mov
mov
dec
loope
test
mov
xor
push
jecxz
fcom
xor
push
or
test
pusha
mov
inc
or
lea
ja
mov
leave
outsb
pop
pushf
test
inc
sbb
push
lahf
inc
jo
mov
mov
fwait
fwait
xchg
xchg
in
adc
imul
cmp
ds
inc
in
leave
cmpsl
fmuls
and
icebp
and
push
xchg
icebp
xchg
adc
outsl
movsl
dec
data16
daa
imulb
xchg
movsb
dec
xlat
or
and
sub
cltd
das
or
mov
ret
dec
enter
gs
mov
xchg
iret
pushf
or
mov
sarb
add
xorl
int
jl
rol
out
jno
mov
add
adc
stc
cmp
in
xor
sbb
into
fucomp
mov
cmp
test
inc
and
aas
sub
xor
mov
sbb
nop
inc
sahf
js
inc
inc
and
mov
fdivrs
inc
jg
clc
sbb
in
xchg
cmpl
jecxz
es
in
clc
adc
rcl
lock
mov
daa
xor
loop
push
pop
ret
cs
lea
lcall
clc
addr16
jnp
shll
cld
inc
fnstsw
pop
mov
mov
enter
push
mov
xchg
xor
mov
sbb
es
stos
outsl
xchg
cmp
insl
aam
pop
cwtl
in
popf
dec
or
push
pop
push
in
xor
lahf
adc
dec
mov
rclb
iret
inc
movsb
adc
xchg
outsb
mov
pop
mov
dec
dec
insl
insb
stc
cmp
and
mov
in
stc
jecxz
ds
movsl
in
subb
fsubs
jle
fucomi
out
fidivrs
pop
and
inc
repnz
fdivs
dec
push
xor
or
add
adc
pop
test
test
lods
add
test
lock
and
dec
pop
pop
push
pusha
adc
daa
or
push
jno
cli
adc
adc
dec
clc
and
loopne
subl
sahf
inc
add
imul
xchg
xchg
push
or
rorl
add
jp
or
adc
stos
cmovnp
xlat
clc
xor
xchg
dec
aam
outsb
pop
pop
pushl
subl
call
test
cmp
push
pop
addr16
sahf
divb
shl
aam
jecxz
adc
test
cmp
dec
pushf
xchg
dec
insl
sub
push
pop
mov
out
dec
mov
test
int
jnp
stc
jb
mov
push
dec
stc
sarl
sbb
pop
shll
mov
add
jecxz
xor
push
adc
and
mov
popa
push
or
into
cmp
nop
cmp
leave
je
mov
mov
loope
call
lea
out
movsl
cli
aaa
xchg
enter
outsl
push
mov
ljmp
mov
jnp
pop
fsubl
dec
sub
adc
cmp
into
xchg
imul
into
sub
dec
je
lea
insb
loopne
and
push
cwtl
jmp
jle
in
pop
xor
sub
sahf
sbb
aam
scas
push
insb
js
xchg
add
insb
dec
movsb
fs
scas
std
dec
cmp
je
mov
xchg
sbb
or
xchg
sub
arpl
int
lret
imull
into
cwtl
data16
add
push
pop
dec
ja
mov
dec
repnz
int
xor
dec
outsl
mov
cs
lcall
sti
push
dec
mov
mov
jbe
fldt
jmp
shlb
and
push
sbb
add
mov
push
xchg
cmp
mov
adc
mov
pop
or
xchg
out
mov
mov
sbb
mov
push
push
icebp
mov
setle
or
ret
jns
mov
orb
out
dec
pop
inc
pop
adc
mov
mov
and
jp
jp
sub
ret
fnstsw
push
leave
mov
icebp
scas
add
addl
loopne
loope
into
fistpll
negb
ja
mov
and
inc
pusha
sbb
scas
into
enter
jmp
cli
ja
cmp
out
dec
jp
dec
frstor
ss
sub
cmpsl
rorl
ret
cltd
push
lret
add
jg
jo
test
mov
mov
push
push
jecxz
clc
xlat
gs
and
mov
rcrb
fwait
or
lret
add
pop
adc
sti
pop
pop
daa
inc
xchg
and
outsl
xchg
arpl
dec
incb
push
xchg
mov
add
bound
xor
push
dec
inc
les
jle
in
xchg
xchg
ret
testl
dec
scas
sti
mov
pop
push
adc
pop
jae
in
test
data16
repnz
cmp
cmp
mov
pop
scas
ljmp
cmp
jg
push
lea
faddl
scas
push
dec
dec
les
mov
sbb
lret
adc
push
and
or
mov
ljmp
ds
jne
js
icebp
pop
cli
stc
and
push
shlb
pop
popl
lea
scas
mov
adc
lret
inc
xlat
test
fldenv
add
pop
mov
jg
push
shl
sbb
sti
sti
shr
dec
push
xor
adc
mov
mov
adc
mov
pop
in
fmuls
in
dec
pop
sub
xchg
ljmp
jbe
mov
xchg
or
sub
lcall
lds
or
popf
jge
jecxz
scas
lods
xorl
dec
add
mov
popa
mov
xchg
xor
jnp
jge
inc
int
lret
sbb
and
sub
sbb
int
lea
xor
std
in
or
stos
call
fisubs
lea
adc
vorps
adc
dec
out
fwait
cmpsb
mov
xor
sub
ret
arpl
sub
and
lcall
jg
shl
cmp
lahf
into
xor
push
xor
cmpsl
push
mov
nop
test
push
cmp
adc
jge
xchg
mov
and
movsl
xor
movsl
push
add
xor
divl
push
sarl
ljmp
outsl
test
mov
aas
push
pop
or
xchg
and
pop
enter
je
xor
in
addr16
in
lods
ja
inc
scas
pop
and
inc
js
js
jns
fdiv
lret
push
inc
sbb
sahf
pop
clc
jmp
sbb
daa
in
leave
loope
xchg
test
xchg
add
sub
sbb
mov
sahf
pop
xor
mov
in
or
xchg
inc
jecxz
xor
cmc
mov
test
nop
sahf
outsl
icebp
lds
xor
pop
jb
mov
xchg
and
dec
push
sbb
iret
inc
sub
jnp
jmp
je
jno
mov
push
mov
or
mov
add
mov
int
dec
pop
mov
jl
xor
ss
cmp
sahf
ret
dec
pusha
sub
xchg
jo
mov
add
imul
adc
and
inc
ror
cmpsl
mov
imul
test
in
out
gs
cmp
jle
iret
push
sbb
icebp
rorl
test
pop
sub
adc
push
loop
stos
push
mulb
addr16
push
pop
scas
fiaddl
ret
pop
jg
addb
jae
test
imul
add
sbb
bound
jg
fwait
jb
pop
cmp
stos
xchg
leave
dec
dec
shl
out
jne
mov
mov
fiaddl
and
aam
and
iret
push
add
lcall
sub
push
jp
dec
or
dec
aaa
and
outsl
cli
out
fwait
cli
cmc
and
and
addr16
xor
stos
scas
inc
mov
cli
jno
jecxz
aad
test
pop
jmp
into
inc
jmp
pop
mov
mov
jecxz
sbb
daa
daa
jno
mov
mov
adc
jmp
leave
mov
adc
mov
out
movsl
and
and
cmp
call
scas
xchg
cwtl
sbb
in
xchg
rcrl
add
test
sti
jg
call
and
int
repnz
sub
push
cld
jle
dec
xchg
lock
dec
nop
cmp
jle
mov
mov
scas
adc
add
sti
sub
icebp
adc
push
fwait
daa
test
sbb
dec
push
sahf
and
pop
push
and
es
jle
xchg
inc
into
mull
push
aaa
mov
xchg
mov
mov
inc
and
lea
jb
push
mov
mov
fists
xchg
mov
mov
gs
inc
in
adc
mov
pop
jb
call
jns
pushf
mov
fs
or
mov
jb
out
or
andb
das
pusha
mov
pushf
add
aam
iret
mov
and
pop
sbbl
push
mov
sti
adc
imul
pop
lret
lods
clc
pop
jns
orb
adc
scas
jg
inc
and
lahf
dec
add
imul
mov
adc
push
out
mov
adc
dec
xchg
mov
call
or
add
bound
adcb
mov
add
cmpsl
adc
adc
cmp
jp
pop
test
add
cmp
ds
or
adc
mov
xor
cs
and
add
loopne
cmp
lea
sbb
pop
orb
pop
push
sub
in
xor
jo
jp
adc
adc
outsb
ret
push
jb
mov
lcall
sbb
filds
or
rcrl
inc
ds
dec
add
xor
lret
lea
add
loope
jbe
mov
fsubrl
lods
and
imul
or
mov
dec
aaa
