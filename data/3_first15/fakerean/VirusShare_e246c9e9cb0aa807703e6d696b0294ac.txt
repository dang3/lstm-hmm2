pusha
jno
jnp
mov
jnp
fimull
jnp
sbb
jnp
sub
test
clc
mov
fimull
jnp
dec
xchg
or
mov
add
jl
sbb
add
add
add
jae
jle
sbb
jle
pusha
lock
movsb
call
jle
ja
jle
loope
jle
or
lock
sbb
jle
push
lock
sub
jle
add
add
add
add
pop
lods
jl
enter
test
jle
fldpi
jle
enter
fsubrp
jle
xor
jle
aam
jle
stc
out
jle
sub
in
jle
xlat
jmp
xor
in
jle
jo
jl
lock
push
icebp
jle
icebp
in
jle
movsl
jmp
jle
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
adc
add
add
add
cmp
jo
add
add
add
pop
xor
push
xor
add
add
outsb
fs
gs
jne
arpl
js
add
add
je
outsl
outsb
jae
insb
gs
imul
push
imul
insb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
add
gs
je
inc
imul
jns
js
add
add
gs
je
inc
imul
jns
add
add
jo
inc
imul
add
popa
jo
popa
insb
imul
add
outsb
push
popa
imul
insl
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
jb
popa
je
add
add
je
push
dec
outsl
arpl
add
add
push
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
inc
gs
imul
add
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
add
gs
je
dec
popa
jb
dec
imul
dec
gs
jo
outsl
arpl
add
inc
jb
ja
outsb
imul
arpl
add
push
outsb
fs
dec
inc
dec
gs
popa
addr16
js
add
add
jb
insb
insb
push
imul
add
add
je
insb
imul
je
add
inc
jb
popa
je
dec
arpl
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
add
inc
gs
jo
inc
outsl
insl
jo
je
insb
popa
addr16
add
inc
gs
outsb
arpl
je
jb
add
inc
jb
popa
je
push
imul
popa
je
outsl
outsb
inc
add
add
insb
insb
push
imul
outsl
arpl
add
inc
popa
insb
insb
dec
jae
inc
imul
add
je
imul
jae
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
gs
push
popa
insb
insb
jo
jo
jb
add
inc
jne
insb
fs
gs
jae
outsb
inc
jb
popa
jns
add
inc
outsb
jne
inc
imul
gs
arpl
inc
add
add
insl
push
outsl
inc
push
data16
add
add
fs
gs
outsl
popa
jb
dec
popa
jns
jne
inc
js
add
inc
push
js
inc
js
add
add
jo
imul
gs
js
add
add
je
imul
add
popa
bound
imul
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
outsl
popa
arpl
je
jns
je
insl
dec
gs
popa
addr16
add
add
popa
jb
outsl
ja
jb
jne
inc
add
add
imul
imul
ja
add
inc
gs
jb
insl
gs
jb
arpl
add
push
imul
jae
popa
addr16
jne
jo
outsl
outsl
imul
add
je
imul
arpl
add
je
jae
jb
bound
arpl
arpl
imul
je
gs
popa
addr16
outsl
jae
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
add
je
jb
arpl
jae
gs
jne
je
popa
jns
jne
add
les
mov
int
iret
add
lea
imul
add
inc
add
inc
add
lea
mov
inc
inc
dec
call
call
call
dec
or
lea
mov
call
dec
dec
dec
inc
xor
lea
mov
dec
call
call
sub
push
dec
call
dec
or
call
lea
mov
dec
add
dec
dec
and
lea
mov
pop
inc
inc
sub
add
inc
pop
xor
lea
pop
movswl
inc
sub
inc
pop
inc
or
lea
mov
add
inc
add
dec
pop
add
lea
pop
movswl
inc
mov
inc
add
call
sub
sub
lea
mov
ret
dec
add
push
inc
sub
push
xor
lea
push
mov
dec
push
dec
inc
push
add
add
mov
lea
movzwl
push
dec
ret
push
inc
sub
dec
and
lea
movsbl
dec
inc
inc
sub
xor
lea
mov
inc
dec
inc
dec
add
lea
mov
dec
add
inc
add
and
lea
mov
add
dec
sub
jmp
jnp
add
lea
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
inc
adc
add
add
jo
add
test
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
outsl
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
adc
add
adc
add
add
arpl
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
rorl
and
sub
sub
movzbl
lea
mov
xor
dec
dec
inc
inc
dec
or
lea
mov
dec
dec
inc
dec
or
dec
jne
lea
mov
mov
dec
pop
add
inc
pop
inc
and
pop
lea
mov
add
inc
inc
sub
and
lea
imul
inc
inc
add
ret
push
sub
add
add
lea
mov
inc
dec
inc
push
push
push
push
sub
and
lea
push
mov
inc
add
dec
dec
or
lea
mov
dec
mov
dec
push
add
inc
xor
and
lea
push
mov
inc
push
inc
sub
pushl
dec
call
and
add
lea
mov
dec
dec
inc
sub
or
pop
ret
lea
imul
inc
add
dec
cmp
jb
sub
xor
add
lea
mov
sub
mov
add
dec
inc
inc
xor
lea
imul
inc
sub
mov
inc
sub
cmp
jb
add
mov
lea
imul
xor
dec
sub
xor
dec
dec
pop
xor
lea
test
jbe
mov
dec
dec
inc
dec
add
lea
mov
add
inc
inc
dec
sub
lea
mov
inc
dec
inc
sub
inc
sub
lea
movzbl
inc
and
dec
dec
mov
inc
and
movzbl
lea
mov
add
inc
dec
and
dec
dec
mov
xor
lea
mov
mov
inc
mov
dec
dec
mov
dec
sub
lea
movzwl
dec
dec
dec
jne
sub
mov
dec
add
lea
imul
inc
add
inc
add
xor
lea
mov
mov
add
inc
add
inc
or
lea
mov
mov
dec
dec
test
jbe
add
inc
or
lea
mov
dec
dec
dec
dec
xor
lea
mov
inc
inc
inc
inc
inc
or
lea
mov
add
inc
and
dec
add
mov
sub
lea
movzbl
mov
inc
add
sub
inc
and
inc
add
mov
lea
imul
movzbl
sub
inc
mov
inc
inc
mov
and
lea
movzbl
mov
jmp
add
add
lea
inc
inc
add
sub
add
lea
mov
sub
add
add
sub
xor
lea
imul
pop
ret
push
inc
sub
inc
dec
xor
lea
mov
add
sub
dec
dec
dec
and
lea
mov
dec
add
inc
inc
add
lea
imul
inc
add
inc
inc
or
lea
imul
dec
push
add
inc
push
add
or
push
lea
call
mov
dec
add
dec
inc
mov
or
lea
push
mov
inc
pop
inc
sub
or
sub
or
lea
imul
inc
inc
cmp
je
dec
push
dec
call
sub
int
lea
mov
ret
inc
dec
pop
sub
ret
push
inc
push
add
lea
push
movzbl
push
inc
push
dec
dec
push
dec
or
lea
mov
dec
call
sub
push
dec
inc
sub
mov
lea
mov
mov
inc
mov
sub
dec
test
je
add
and
lea
mov
inc
add
dec
sub
and
mov
lea
mov
dec
dec
inc
dec
add
lea
repnz
imul
inc
add
dec
jmp
jmp
dec
sub
sub
lea
mov
add
sub
inc
sub
sub
lea
mov
pop
pop
ret
push
sub
dec
inc
sub
xor
lea
imul
inc
sub
inc
dec
sub
lea
imul
inc
inc
add
dec
and
lea
imul
dec
inc
dec
sub
add
lea
pop
ret
sub
dec
mov
add
dec
mov
dec
xor
mov
lea
mov
mov
sub
dec
xor
sub
sub
mov
xor
lea
inc
imul
sub
dec
add
dec
add
cmp
jb
lea
push
mov
dec
push
sub
inc
push
inc
xor
mov
lea
imul
xor
sub
dec
xor
inc
dec
xor
sub
lea
push
mov
add
xor
dec
sub
mov
sub
xor
mov
lea
mov
movzbl
add
sub
inc
dec
add
or
lea
add
mov
inc
movzbl
dec
inc
inc
add
lea
inc
inc
inc
inc
inc
mov
sub
jmp
in
mov
xchg
int3
inc
pop
iret
and
arpl
stos
fcmovbe
js
xor
pop
add
popf
xor
mov
xor
mov
pusha
dec
cmpsb
push
jg
sbb
in
test
pop
insb
frstor
jg
mov
push
xor
mov
sbb
daa
cwtl
test
mov
out
lods
jl
push
xchg
mov
bound
or
add
jg
inc
xlat
push
adc
es
push
mov
aas
sti
jnp
jno
pop
andb
movsb
adcl
xchg
xchg
lcall
xlat
xor
mov
dec
das
pushf
ss
lcall
and
orl
aas
cmp
test
test
lea
out
das
repnz
or
and
xchg
js
data16
mov
and
out
sbb
aad
push
addl
adc
imul
movsb
mov
xchg
sbb
xor
dec
and
int3
ret
mov
push
repz
stos
xor
cmp
pop
call
enter
iret
or
xor
sub
cmp
mov
jae
and
movsb
xor
xchg
rclb
push
shll
mov
or
jns
cmc
dec
fs
fists
test
cs
pop
inc
mov
das
loopne
test
mov
adc
cmp
addl
inc
pop
jno
sub
mov
gs
mov
sti
pushf
pop
cmp
xchg
xor
or
test
ss
mov
or
cltd
addr16
aad
push
lahf
loopne
push
out
sbb
inc
test
mov
push
sahf
jo
xchg
dec
jmp
mov
sarl
out
js
or
out
push
sub
and
cmp
add
ja
xlat
sub
sub
insl
outsl
mov
cmp
outsb
scas
sarb
insl
sbb
sbb
pusha
inc
loop
mov
bound
insl
stos
push
repnz
mov
in
fstpl
jno
sti
dec
aaa
xchg
outsb
data16
gs
jmp
mov
sub
movsb
inc
mov
add
addr16
aam
xor
mov
popf
push
or
lea
cmp
xchg
test
out
or
xchg
in
repnz
adc
invd
dec
mov
push
pushl
jns
sbb
aas
or
cmc
inc
imul
jge
cmp
or
adc
insb
cwtl
push
mov
in
jecxz
repnz
xchg
rcll
add
push
mov
aam
dec
or
inc
orb
mov
pop
call
push
lret
xchg
mov
and
ss
push
imul
cmc
push
icebp
imul
stos
aad
cmpsb
cmp
nop
loope
loopne
dec
ja
jbe
lret
call
jle
in
dec
or
clc
push
test
sti
sub
fdivl
test
mov
inc
adc
fwait
pop
lods
arpl
xchg
and
lds
aam
in
jbe
fdiv
aam
jecxz
xchg
jecxz
jne
pop
mov
mov
inc
xchg
pop
fldenv
imul
loope
ljmp
outsl
push
repnz
pop
pushf
cs
lcall
mov
lret
add
rep
inc
inc
cmc
popa
xor
lods
mov
jns
fstpt
fstps
test
dec
loope
adc
fisttpl
inc
hlt
mov
ficoml
mov
adc
ss
imul
imul
test
pop
insb
lcall
mov
xchg
jmp
lahf
mov
lret
lret
push
mov
out
cwtl
flds
push
push
arpl
ljmp
jbe
cmp
mov
pusha
push
lcall
add
cwtl
icebp
lahf
pop
cmp
fwait
add
xchg
shr
cs
push
sub
add
std
jo
mov
lret
jmp
xchg
inc
repz
or
pop
inc
sti
add
jp
ret
pop
sub
mov
adc
cmp
sub
icebp
das
sub
loope
mov
sahf
in
imul
and
fildll
mov
jns
data16
xchg
dec
rcrl
sub
pop
lret
es
adc
in
push
iret
xchg
pop
subb
ljmp
mov
jns
ficoms
outsl
inc
mov
test
xor
cwtl
cmp
adc
cmpl
test
fistpll
out
in
gs
push
dec
adc
movsb
dec
cli
lods
dec
cwtl
adc
cltd
add
push
push
ffreep
mov
jge
inc
inc
sbb
mov
sarl
push
cmp
sbb
lock
mov
and
or
leave
imul
adc
push
xor
ds
in
mov
push
xor
mov
jp
fdiv
sahf
out
rorl
ficoms
push
pop
push
sub
push
push
ret
cmp
ficomps
pop
cmp
cs
push
mov
jle
mov
jae
sti
mov
add
mov
mov
dec
imul
sbb
dec
inc
cmp
mov
cmp
shr
mov
clc
add
add
xlat
xchg
data16
call
adc
cmpsb
sbb
cld
scas
jae
push
cmpb
cli
xor
jecxz
sahf
repz
lds
imul
ret
xor
test
push
lock
mov
and
add
cmp
inc
aam
cmpsl
sub
sbb
cmovle
push
call
xor
enter
jbe
sub
sbb
roll
cmp
nop
dec
cmp
cmpsl
xchg
ret
mov
mov
sahf
and
fildll
in
int
adc
jmp
cmp
cmpsl
js
daa
mov
adc
push
call
ljmp
and
js
popf
testb
fildll
gs
ds
inc
mov
aas
and
aas
lret
stc
sbb
xchg
lahf
ja
test
aas
fmuls
mov
push
and
mov
push
clc
sbb
sbb
in
or
cli
or
comiss
add
lods
pop
mov
mov
ret
ss
pop
xlat
int
daa
cmp
sub
pop
repnz
mov
xor
pop
inc
mov
push
push
adc
mov
xor
adc
stc
mov
pop
add
jmp
adc
mov
sbb
outsb
and
jb
adc
sbb
and
outsl
out
jmp
xchg
in
mov
jne
sub
sbb
mov
stos
sbb
loopne
fdivrp
dec
cmpsb
sub
lret
mov
lods
push
adc
insl
mov
mov
stc
xchg
iret
ljmp
xor
push
testl
cltd
int
dec
repz
jnp,pt
xchg
test
mov
cmp
sbb
out
pop
sbb
addr16
dec
popf
les
mov
jo
dec
xor
mov
or
jbe
mov
xor
push
mov
xchg
xchg
sbb
xchg
daa
out
cmp
and
clc
popl
jge
out
mov
jle
mov
test
je
imul
movsb
fstp
xor
leave
in
push
in
test
loopne
aas
cwtl
xchg
mov
xor
pop
or
jp
ljmp
push
inc
jl
xchg
adc
sub
jge
xchg
cltd
mov
lahf
repz
test
fiadds
insb
jp
adc
xchg
stos
fwait
or
in
ljmp
daa
dec
pusha
mov
cmc
hlt
xchg
imul
data16
jae
mov
inc
lods
iret
pop
xor
out
imul
push
xor
clc
push
enter
cmpsl
cld
cltd
cmp
mov
add
sti
cmp
gs
jbe
add
or
test
out
cld
mov
pop
inc
push
insl
jle
lds
cld
test
xor
dec
lret
ljmp
xchg
jbe
xchg
mov
leave
rcrb
movsl
ds
stos
pop
push
roll
adc
cmp
mov
int3
xchg
repnz
fwait
inc
cmp
jo
jns
push
test
das
xlat
cmp
arpl
test
sbb
fisubs
lahf
das
pop
jnp
mov
insl
push
push
jbe
jmp
push
mov
icebp
lea
and
add
sub
add
aaa
rcr
xor
in
mov
pushf
sarb
xor
and
or
cmp
rorl
dec
push
sub
dec
jno
cmpsb
ficompl
adc
icebp
dec
or
xor
mov
cmp
mov
inc
cmc
mov
clc
cmpsl
sub
lds
push
rcll
jno
loope
and
pop
fsubl
fwait
push
pop
pop
xor
loopne
inc
stc
mov
into
pop
push
cs
push
pushl
cmc
xchg
daa
mov
hlt
jp
cmp
add
addr16
rolb
into
or
xor
pop
sti
adcl
push
shlb
inc
add
dec
popf
loop
aas
movsl
jo
xchg
mov
sbb
jo
fstpl
ret
in
mov
in
call
ljmp
xor
inc
nop
jns
xchg
enter
jo
xor
inc
out
adc
mov
cs
jecxz
mov
xor
mov
mov
lock
sbb
pop
test
mov
int3
lahf
and
sub
outsl
addr16
mov
sbb
out
sbb
cmp
add
in
subb
adc
xor
and
je
bswap
cli
fcomp
or
lods
mov
jo
sub
mov
mov
cmp
imul
jnp
fwait
push
xchg
cld
cmc
mov
shl
mov
dec
xchg
cltd
pop
inc
push
arpl
faddl
adc
test
xor
andb
lea
push
imul
in
out
int3
sub
mov
hlt
push
pop
jno
jge
pushf
out
dec
bound
scas
lahf
push
lock
add
ds
popa
ds
iret
rclb
hlt
push
scas
icebp
mov
mov
push
xchg
push
pushf
mov
mov
lds
jbe
seta
dec
das
mov
sub
cmpsb
and
jg
push
fwait
xchg
rclb
shll
xor
inc
xchg
cmp
lods
adc
imul
fdiv
into
inc
jmp
popa
push
into
push
gs
dec
icebp
mov
jmp
or
xchg
faddl
rcll
cmpsb
cmp
je
ret
xor
adcl
jp
leave
push
aad
hlt
cwtl
xchg
outsb
lret
aad
mov
mov
and
or
pop
cli
push
sbb
pop
xchg
mov
repz
mov
lret
out
js
call
test
and
hlt
in
movl
fmuls
out
add
pop
sub
leave
push
inc
adc
stc
inc
repz
cld
popf
mov
push
mov
jb
mov
repnz
dec
inc
out
movsl
xor
xor
or
dec
mov
fsubrl
xor
sbb
gs
push
add
pusha
popf
mov
mov
dec
cli
adc
xchg
xor
add
ljmp
xor
xchg
stos
loopne
mov
in
inc
push
sbb
adc
cmpsb
sti
test
adc
das
cltd
cmp
pop
dec
cmp
orl
push
lahf
push
xorb
inc
push
dec
das
mov
subb
test
outsb
jbe
dec
das
mov
pop
xlat
push
mov
pop
mov
mov
int
push
sub
jb
dec
mov
mov
lret
lock
mov
sub
jmp
xchg
ret
into
pop
mov
mov
ss
and
js
xorl
lret
outsl
in
shlb
sub
lret
or
jae
std
imul
ja
ret
and
xor
mov
mov
sbb
pop
loop
add
ret
cltd
and
adc
or
mov
jl
mov
cs
sti
fdivs
mov
jle
movsl
ljmp
adc
jg
je
sbb
dec
mov
mov
out
je
fsubrs
mov
leave
push
aad
pop
lea
insb
addr16
stos
loope
in
or
test
lea
xchg
xchg
fcmovnb
lcall
scas
adc
fisubl
pop
cs
fsub
xchg
jo
aad
mov
test
cmpsb
adc
lret
inc
mov
mov
ficoml
inc
sub
rcr
xchg
fcmovb
les
ds
shrb
cs
jo
ds
aam
pushf
mov
fcompl
aam
sub
mov
into
push
jns
icebp
imul
xor
outsb
imull
sarb
cmp
scas
stos
cmc
mov
aaa
or
push
lods
jne
repz
or
dec
dec
dec
push
dec
insb
xchg
icebp
add
aas
insl
pop
or
aas
dec
out
mov
jb
leave
testl
in
and
sar
sbb
in
cmp
ret
push
lahf
sbb
jns
cmp
inc
xchg
pop
ljmp
jo
mov
ljmp
push
mov
lods
xchg
xchg
pop
mov
in
xchg
movsl
or
sbbb
daa
push
ret
addr16
add
in
testl
add
subb
sub
pop
pop
sbb
pop
enter
in
les
addr16
ret
ret
popf
push
inc
cmp
les
mov
jo
adc
out
imul
xor
jp
clc
out
xor
mov
flds
pop
dec
into
ret
push
dec
xchg
clc
adc
in
push
sbb
mov
add
dec
je
nop
movsl
arpl
mulb
not
shrl
pop
cmc
je
jmp
inc
cmp
adc
in
or
cmp
jnp
mov
divb
pop
pop
xor
add
aam
mov
stc
cmp
scas
xchg
mov
mov
xor
dec
xchg
lds
jne
fidivs
fldenv
adc
xorl
push
out
mov
xchg
shlb
xor
xchg
cmpsb
mov
pop
arpl
add
adc
jno
dec
bound
out
pop
cmp
mov
popa
out
add
mov
mov
dec
mov
ficompl
shlb
cmpsb
xchg
adc
and
mov
fcompl
sbb
test
jmp
stos
lds
pop
out
std
popf
aas
int3
jmp
or
and
out
aad
jnp
xor
mov
clc
jge
push
pop
jge
add
adc
loopne
subl
jae
sub
and
ds
leave
call
in
push
arpl
push
mov
mov
add
push
and
shll
and
andl
fmuls
push
pop
gs
decb
mov
rcl
xchg
sbb
cmpsl
xor
shll
fcom
daa
mov
jo
mov
adc
push
mov
mov
sti
outsl
adc
ret
loopne
and
and
icebp
sbb
jecxz
or
jne
adcb
pusha
xor
mov
repz
jo
into
pop
dec
mull
lahf
aaa
adc
sub
stos
shll
dec
add
jbe
jo
add
add
mov
outsb
inc
cs
out
les
jmp
enter
mov
add
or
pop
push
mov
movsb
mov
dec
inc
adc
cmp
xchg
movsb
and
outsl
jno
mov
mov
jbe
and
lcall
xorb
inc
and
lods
movzwl
sub
stos
cmpsl
or
mov
rcr
and
xlat
pop
enter
jmp
and
movsl
push
xor
movsl
in
inc
movsb
icebp
jle
push
xor
mov
scas
call
iret
mov
cmp
or
mov
repnz
fiaddl
sbb
popf
lcall
lret
jo
xchg
mov
jbe
inc
pop
push
xorb
inc
push
gs
pop
sbb
test
loope
xlat
pop
xchg
cmc
sub
gs
cmp
aad
push
adc
ret
loopne
and
add
jb
imul
or
test
jge
and
jge
sbb
out
loop,pn
and
mov
push
inc
cmp
ja
lcall
inc
testl
cmp
adc
fmuls
dec
adc
xor
push
and
dec
or
ljmp
jae
or
lcall
in
push
or
insl
push
jnp
repz
popa
stc
mov
sub
xchg
into
icebp
adc
xchg
push
sbb
mov
jae
cmpsb
inc
sub
xor
push
outsl
cmp
enter
dec
repnz
jo
adc
scas
aam
mov
inc
xlat
jae
and
mov
popf
cmp
mov
ljmp
sbb
sub
or
jg
inc
fidivl
adc
ja
pop
std
test
push
int3
cmpb
and
aaa
cs
out
push
stos
sub
push
xchg
loop
xchg
jne
lock
lret
dec
sub
mov
mov
sbb
xchg
iret
push
jmp
adc
into
pop
cwtl
cmp
sbb
out
test
outsl
adc
mov
mov
ret
ljmp
lds
jb
inc
shlb
push
test
cmp
lahf
push
mov
push
gs
stos
sahf
or
inc
aas
imul
pop
adc
dec
mov
test
mov
movsl
stos
loopne
mov
cmp
movsb
mov
pop
movsb
test
test
xchg
fimuls
mov
mov
cmpsb
cmp
and
movsl
in
out
shl
les
push
dec
mov
lret
ret
lock
jnp
inc
hlt
pushl
xchg
add
pop
pop
out
mov
inc
das
ret
es
mov
aas
dec
int
xchg
ror
cmp
push
imul
push
and
dec
push
daa
in
inc
adc
gs
jp
inc
adc
xor
jg
test
jo
mov
sbb
cmp
cmpsb
lcall
fs
in
imul
mov
sbb
jecxz
pop
push
cli
push
pop
cmp
lods
cwtl
stos
mov
mov
mov
mov
mov
push
fdivrl
je
sub
pop
mov
ljmp
and
pop
jne,pn
sub
pop
gs
cmp
mov
nop
in
in
pop
or
xchg
out
mov
pop
mov
xor
xor
test
dec
cmpsl
push
ret
cmp
rolb
orb
mov
std
push
sbb
mov
xchg
pop
and
imul
xchg
and
lahf
in
das
jp
sbb
repnz
js
dec
or
jl
ss
mov
in
lock
xchg
lock
jecxz
popf
jnp
ss
popa
mov
and
int3
jbe
mov
fdivl
cmpsl
scas
popa
dec
xor
test
mov
in
lret
adcl
aaa
mov
xchg
inc
or
cmp
inc
daa
lods
ljmp
stos
cmp
in
pop
jge
popa
in
roll
int3
stos
mov
addr16
fidivrs
sub
fildll
test
out
or
fisubs
xchg
fldt
scas
das
cmp
mov
lds
and
loop
test
and
mov
and
out
xchg
mov
jg
mov
mov
icebp
jb
pushf
sbb
jmp
lret
outsb
loop
cmpps
testl
mov
cmp
sbb
mov
cmp
jge
mov
xchg
push
fdivp
jo
icebp
fmuls
enter
inc
jl
je
scas
or
xor
les
and
cwtl
adc
cltd
mov
jns
sbb
lods
and
jmp
sar
imul
pop
mov
leave
ficompl
and
imul
adcl
negb
push
jb
cltd
or
insb
or
xchg
dec
pop
cmp
pop
and
icebp
das
sbb
jo
les
call
or
mov
jmp
sti
std
btc
inc
arpl
aaa
nop
pop
push
jno
lret
sbb
mov
cmc
add
push
stos
bnd
sarb
xchg
pop
imulb
and
arpl
daa
fistpll
mov
xchg
mov
in
inc
mov
push
fildl
inc
xchg
outsb
pushf
inc
mov
mov
mov
imul
fs
mov
repz
jge
mov
sub
cmc
fnstcw
mov
mov
mov
pop
dec
icebp
push
push
sbb
fs
negl
or
pop
xchg
adc
adc
cmc
inc
cmpsl
popa
jbe,pt
mov
mov
inc
int3
pop
pushf
mov
mov
mov
and
imul
out
lods
xor
loopne
mov
mov
outsb
jo
add
rcrb
les
pop
mulb
mov
les
and
adc
jnp
cli
arpl
jge
sbb
mov
fnstenv
fbld
pop
mov
scas
scas
or
shrl
imul
mov
ljmp
mov
scas
xlat
sub
jp
imul
cwtl
call
cmp
lcall
repz
daa
jl
cmp
inc
iret
push
iret
or
push
pop
cmp
xor
js
jg
pop
and
xchg
cld
jo
stc
inc
sub
push
push
test
push
test
adc
push
pop
loopne
stos
jp
push
dec
lret
mov
mov
or
repnz
sbb
addr16
push
nop
loopne
stc
andb
adc
or
inc
jp
fs
in
jl
adc
lret
fdivrs
in
int3
pop
adc
imul
rclb
pop
jg
mov
dec
add
lret
imul
ret
and
lret
sbb
lcall
pop
cmp
pusha
mov
jl
adc
pop
insl
loop
push
mov
push
pop
mov
je
inc
andb
es
lods
inc
jg
loope
xchg
aas
cmp
hlt
or
test
stos
push
sahf
push
cmpsb
cmpsb
daa
jle
leave
cmp
movsl
cmc
push
jne
out
push
jno
arpl
pop
bound
mov
pop
test
and
dec
xor
add
test
stc
xlat
rorl
aas
iret
xor
xor
mov
mov
xlat
mov
mov
dec
sub
outsb
mov
jnp
not
sbb
adc
rorl
sbb
or
push
dec
mov
lods
dec
sbb
enter
es
gs
popf
xchg
push
xchg
rcr
arpl
in
lods
je
push
fwait
xchg
xchg
pop
fucomi
mov
outsb
das
lods
sbb
adc
fidivs
call
push
sbb
subl
mov
mov
cmp
sub
movsb
push
lock
mov
lret
pop
inc
cmpsl
mov
pushf
dec
daa
std
jbe
inc
and
notb
xchg
pop
xor
inc
pusha
scas
movsl
pop
inc
cmp
sub
xchg
sub
pop
add
inc
add
aas
pop
jl
sub
and
std
pop
xchg
xor
test
pusha
push
les
outsl
fdivrs
rolb
les
aam
int3
mov
enter
aaa
fs
mov
enter
jmp
sbb
fstpt
lds
push
mov
stos
dec
mov
jno
push
mov
jns
bnd
in
ja
push
sbb
je
test
lcall
fs
inc
arpl
inc
lahf
out
sub
mov
push
and
popa
adc
addl
test
es
inc
in
mov
stos
shll
stos
test
rolb
sub
and
xchg
aad
out
test
sub
inc
push
pop
xor
sub
popa
inc
ja
and
cmp
xor
cwtl
imul
and
adc
mov
dec
test
mov
inc
push
shl
test
sub
les
out
pop
jo
pusha
call
test
xlat
mov
ja
sbb
mov
cli
js
repnz
ucomiss
bound
xor
jmp
call
ja
push
outsb
rcr
faddl
jnp
das
fincstp
stos
xlat
cmc
dec
jae
inc
adc
jecxz
and
inc
mov
outsb
push
aad
psraw
aad
clc
mov
roll
xor
loop
fs
sub
push
lods
mov
ficomps
cwtl
loop
push
mov
iret
adc
xor
lcall
sub
xor
loopne
int3
cwtl
insb
ja
movsb
mov
jnp
adc
add
push
ja
mov
push
divb
dec
addr16
push
ret
cmp
dec
inc
dec
test
cli
stos
mov
clc
add
sahf
sbb
jns
sbb
iret
mov
ss
xchg
pop
ret
in
int3
mov
js
inc
jge
jns
test
sub
jbe
sti
dec
imul
pop
lea
test
mov
lahf
xor
fs
inc
and
xlat
ret
cmp
fstpt
inc
hlt
enter
in
test
jae
daa
jno,pn
lret
inc
sub
scas
inc
or
insl
and
and
dec
or
push
loopne
inc
add
arpl
js
mov
push
mov
cli
repz
sbb
movsl
ljmp
ret
popa
call
xchg
les
int3
jbe
icebp
rorl
les
dec
arpl
fists
mov
or
mov
dec
mov
mov
sbb
cwtl
pusha
lods
aas
sbb
sti
mov
mov
and
pushf
pushf
rcl
ficoms
inc
in
rclb
adc
sub
mov
cmp
jp
pushf
pop
mov
dec
stos
nop
icebp
bound
cli
test
addr16
pusha
clc
add
push
mov
or
pushl
sbb
mov
mov
loop
test
mov
pop
jns
inc
pop
shlb
jae
cwtl
sub
insl
out
daa
out
adc
add
sbb
mov
cmpsb
mov
or
cmp
push
sub
cwtl
lds
cld
cltd
ret
xchg
and
mov
sub
fdivs
cmp
and
cltd
je
mov
mov
adc
aas
push
int3
mov
cmpsl
lcall
lret
movsl
outsl
push
imul
adc
xchg
mov
out
lret
push
pop
enter
jle
or
push
in
int3
pop
mov
std
push
dec
or
cmp
xor
in
aam
ret
mov
inc
mov
out
fildl
faddl
xchg
dec
and
movsb
sbb
pop
cmp
popa
push
popa
pop
adc
mov
xchg
test
imul
in
test
insb
push
and
inc
sti
push
sub
xchg
inc
inc
mov
sub
adc
loope
mov
rcll
xchg
or
xchg
lock
xchg
xchg
jge
mov
bound
ja
mov
repnz
test
movsb
xchg
ljmp
push
inc
dec
sub
push
dec
lods
pop
rcl
pop
fistl
fcmovu
rcr
sarl
mov
dec
add
out
in
pop
add
aaa
pop
lds
fisubs
outsl
mov
xchg
das
sbb
aas
cmpl
push
push
cmp
or
xor
pop
int
sqrtps
jmp
divb
xchg
rcrl
sbb
insl
pop
mov
aam
dec
sub
dec
inc
stos
addb
push
popf
xor
mov
aad
out
dec
push
cmp
push
dec
aam
out
rol
dec
pop
add
sub
xchg
aas
stc
stos
or
int3
cmp
aaa
daa
out
arpl
mov
arpl
or
mov
test
enter
xor
xor
jge
mov
push
mov
orb
in
xchg
loopne
imul
adc
into
push
lret
popa
mov
mov
sub
jne
mov
pop
mov
lahf
jmp
lret
jmp
xor
pop
stos
test
ret
mov
bswap
adc
iret
mov
mov
arpl
loopne
shrl
fs
inc
pop
inc
and
in
jp
jns
and
jo
mov
xchg
mov
gs
fwait
ret
les
in
rcrl
push
sbb
and
lret
loop
sbb
add
cltd
cmp
jl
xlat
jbe
fldt
pop
push
nop
sahf
cmp
test
dec
pop
and
and
mov
test
mov
cli
mov
rcl
lods
imul
popf
ret
fwait
jno
int3
not
ja
inc
push
loope
jmp
add
negl
mov
call
js
loope
je
inc
xchg
sarb
loop
jecxz
xchg
or
scas
mov
mov
jecxz
dec
cmpb
push
cwtl
rorl
mov
jo
fadds
or
test
lock
pop
repnz
insb
push
jae
test
lods
pop
insl
add
and
mov
fnstenv
push
popa
pusha
shrl
mov
jne,pn
jl
call
adc
lds
clc
lret
outsb
dec
or
push
add
inc
int3
push
ljmp
jmp
mov
bnd
std
xor
mov
lahf
repz
mov
ss
icebp
notl
add
jb
mov
or
or
fsubrs
pop
divl
sub
cmp
sbb
jl
or
cmpl
aaa
cmp
mov
aam
int
pushf
dec
sahf
dec
insb
out
mov
adc
ljmp
das
mov
inc
popf
pop
cmp
sub
push
push
sbb
pop
mov
pop
jb
btr
int3
or
and
cmp
adcb
movsl
in
adc
lods
xor
add
shll
cmpsb
repz
push
push
cmp
inc
mov
fwait
push
push
out
jmp
insl
scas
ljmp
enter
xchg
in
rcr
sub
xchg
sbb
xchg
enter
mov
pop
pop
mov
lcall
test
dec
mov
and
call
fimull
cmpsb
fstpt
cmp
in
aam
testl
fldln2
and
mov
push
mov
pop
imul
out
or
je
push
push
push
pop
xchg
ja
mov
aas
push
cltd
pop
pop
mov
aad
mov
mov
out
stc
push
pop
mov
pop
lods
leave
and
sub
mov
rcr
icebp
lock
cmp
stc
icebp
mov
fisubrs
ffreep
call
push
test
xchg
and
lret
and
jne
fdivrl
push
xchg
ljmp
test
addr16
clc
es
mov
loop
sbb
rorl
sti
xchg
int
sarb
inc
cmp
aad
in
iret
or
rorl
out
jno
add
and
xchg
enter
int3
jl
push
gs
imul
and
in
push
or
in
out
dec
int
push
add
jne
lcall
dec
es
aas
inc
stos
push
or
add
and
pop
xchg
stos
inc
rclb
sbb
inc
imul
ret
mov
std
int3
jmp
push
lods
in
xchg
adc
pop
mov
jb
outsb
add
ds
or
push
cmp
sbb
stos
arpl
mov
adc
out
mov
xor
int3
push
imul
dec
rorb
lret
addb
mov
movsb
cmp
or
out
ret
push
iret
ret
push
dec
lea
in
addr16
cli
push
aaa
jl
sub
ljmp
jnp
js
rolb
push
dec
xchg
mov
cmp
ljmp
enter
fnsave
movsb
mov
pop
push
mov
pop
fucomp
mov
aas
inc
lret
push
sbb
cmp
call
rclb
test
popf
mov
pusha
pop
add
adc
sti
jbe
clc
dec
push
ljmp
sbb
lds
push
dec
test
or
cmp
add
add
popa
cmp
sub
arpl
adc
das
mov
sbb
pop
dec
inc
ret
ljmp
dec
and
mov
daa
es
out
scas
imul
test
pop
shl
arpl
loopne
xchg
les
jne
mov
repz
jne
loopne
adc
dec
or
test
call
and
jno
insb
shl
je
movsl
xorb
inc
pusha
xor
pop
fsubr
mov
call
pop
and
cmp
aaa
iret
lds
inc
jmp
push
lret
lds
lds
or
lcall
xchg
xor
pop
and
pop
mov
je
push
cmp
mov
mov
inc
test
movsl
push
in
loop
mov
arpl
cli
mov
xchg
pop
roll
push
jne
and
pushf
repnz
xchg
adc
call
mov
lcall
stos
les
push
add
and
addl
test
adc
loope
icebp
sbb
bound
in
add
add
sbb
pop
push
scas
inc
and
inc
jbe
fistps
ret
loop
pop
lcall
mov
and
xorl
lock
out
bound
mov
push
cmp
not
cmp
fnstsw
cmpsb
add
jecxz
lods
inc
mov
repz
xor
push
mov
and
add
imul
mov
subl
test
insb
popl
adc
imul
test
add
cld
xchg
popl
mov
ret
pop
js
mov
push
pop
xchg
sbb
push
adc
dec
xchg
int3
add
std
sbb
xchg
movsb
inc
mov
mov
mov
out
out
js
pop
or
pop
xor
sub
mov
mov
arpl
ja
icebp
pop
and
imul
add
lods
test
out
mov
fisubl
lahf
dec
sub
je
int3
lds
push
sbb
jg
jg
add
aad
std
xor
push
pushf
pop
and
pop
inc
pop
push
xchg
mov
lock
ret
out
mov
mov
je
enter
shll
add
data16
jbe
clc
dec
jle
sub
mov
push
out
sbb
or
jb
cwtl
dec
mov
mov
pop
add
ja
aad
in
cli
stos
and
push
push
inc
lahf
rsqrtps
xchg
push
enter
jmp
cmp
test
mov
arpl
and
flds
pop
stc
ficomps
cmp
faddl
sub
ja
jbe
cld
mov
xor
pop
ficomps
xor
or
pop
xchg
arpl
cwtl
pop
jno
or
addr16
stc
ret
int
push
mov
and
aaa
sbb
sarl
scas
add
mov
cmp
xor
cmpsb
out
leave
repnz
out
xchg
mov
inc
inc
fiadds
mov
out
mov
sub
js
cmovge
clc
inc
lret
mov
popa
movsl
xor
dec
sub
movsl
fnstenv
cld
push
xchg
inc
lret
rcr
or
adc
mov
out
mov
jne
call
jmp
decb
pop
ffreep
add
adc
push
cmp
outsl
clc
adc
scas
pop
jo
stc
jb
ret
xor
bound
xor
jg
xchg
sahf
pop
js
mov
popa
xor
push
push
ret
cmp
insb
ret
inc
mov
test
fcmovu
rorb
loopne
clc
movsb
xchg
ja
mov
repnz
lds
sub
dec
and
jp
das
out
out
push
out
in
cld
sbb
stos
in
jno
mov
repz
xchg
jle
pop
xchg
inc
push
mov
add
pop
or
es
pop
adc
das
jbe
pop
stc
cmpsb
les
stos
out
xlat
or
es
inc
test
mov
rorl
cld
xchg
mov
into
addr16
dec
dec
xchg
shll
mov
sahf
adc
pusha
dec
dec
add
mov
imul
gs
adc
mov
mov
pop
mov
cmc
adc
cld
inc
stc
flds
test
out
cmp
ds
test
sarb
jbe
loop
add
es
cmp
sti
and
push
aas
jg
stos
xchg
gs
outsl
jne
out
adc
sub
pushf
je
rcrl
adc
int3
mov
mov
and
cmp
xor
jge
pop
push
push
scas
cmpsb
xor
sub
roll
mov
lods
call
fsubrs
pop
stos
insl
mov
sbb
shll
hlt
mov
xchg
or
mov
movsb
js
stos
js
mov
dec
pop
push
and
xor
push
fxch
xor
xchg
inc
movsb
cmp
mov
std
sub
setle
orl
mov
dec
pop
push
mov
in
prefetch
or
icebp
incb
js
test
frstor
loope
ffree
hlt
dec
loope
rolb
mov
jmp
enter
movsl
scas
sbb
mov
or
add
out
into
je
lea
call
mov
add
dec
pop
mov
mov
sub
movsbl
inc
push
sbb
sti
xchg
mov
xor
loop
std
shr
popl
pop
popf
jle
xor
cmp
sarl
dec
add
popf
out
push
inc
in
sub
cmp
and
adc
stc
xchg
pop
cmc
xchg
add
add
test
push
andl
adc
adc
imul
pop
pop
stos
test
pop
cmc
test
nop
push
adc
mov
dec
jns
xchg
adc
pop
and
inc
jns
lds
and
in
shrl
pop
xchg
std
mov
sbb
adc
or
lds
shlb
mov
fstl
sbb
cmpsl
and
leave
aam
stos
pusha
ret
lods
test
mov
movsb
int
push
inc
jmp
lods
sub
xor
test
and
or
mov
bound
es
in
je
jecxz
fucomp
sbbb
imul
push
fisttpll
mov
int
and
cmc
jne
cmc
adc
dec
sahf
push
enter
mov
jecxz
pushf
shrb
lock
cmp
xor
jbe
int3
inc
dec
xor
fisubl
xor
cmp
mov
jne
xchg
sub
pushf
pop
xor
xor
xchg
mov
mov
adc
pop
jbe
cmp
xor
jns
outsl
jbe
jge
fisubrl
nop
xchg
dec
lock
sbb
cmp
inc
mov
add
xor
mov
sbb
int
bound
rclb
inc
add
roll
jo
movsb
out
cmpsl
inc
ficompl
push
mov
mov
stos
icebp
lcall
ds
fisubs
insl
sahf
xchg
mov
dec
out
shlb
pushl
add
add
lock
cmpsl
adc
inc
lock
dec
sti
or
out
sahf
pushf
out
loop
mov
mov
and
mov
pop
push
inc
stos
push
out
aas
pop
cmpsb
jne
sarb
fstps
sub
cmp
mov
xor
mov
jb
or
dec
das
mov
jno
lock
dec
sti
enter
test
call
inc
loopne
jmp
ffree
fcomip
dec
aaa
dec
sbb
aam
dec
jmp
sub
outsl
je
cmc
or
push
pop
mov
sbb
in
loopne
fldcw
jne
adc
movl
je
pop
std
adc
ds
lds
ds
lret
in
or
inc
rorb
pusha
mov
xorl
push
xor
or
js
movsl
inc
mov
scas
fs
subb
push
std
movsb
popa
dec
jmp
dec
adc
push
and
flds
jo
mov
lahf
jae
xchg
add
sbb
es
xchg
mov
and
loop
push
inc
or
and
movsb
or
push
mov
mov
int3
or
insl
vpshld
loopne
je
enter
test
mov
xor
pop
xchg
sbb
cmp
cld
mov
outsb
adc
xchg
repnz
mov
out
js
sti
mov
sub
xorb
rcrb
aam
pop
popa
inc
push
push
sbb
loop
mov
test
fildl
outsw
imul
lods
mov
pop
or
packsswb
ficoml
cmp
out
in
js
fildl
mov
jg
sahf
shr
xchg
test
movsl
inc
push
jp
or
ljmp
outsl
mov
and
mov
mov
in
enter
sbb
hlt
stos
add
or
stos
cvtps2pi
imul
aam
xchg
xlat
and
jo
mov
lcall
std
pusha
jp
mov
popf
imul
inc
pop
jno
mov
cwtl
pop
dec
xorl
inc
sub
insl
xor
inc
mov
inc
xchg
in
cmp
add
sbb
cmpsb
cmpsb
jmp
aad
push
xchg
adc
adc
popa
ss
add
inc
mov
or
xor
jge
mov
iret
notl
test
lcall
jge
adc
dec
fnstcw
add
mov
jae
adc
mov
call
push
je
xchg
shlb
jb
std
cltd
jae
add
add
pop
std
xchg
gs
fistl
stos
pop
adc
es
adc
jnp
mov
xchg
cwtl
ja
imulb
push
sub
sahf
test
lahf
inc
vpslld
popa
and
div
sbb
or
shll
lds
mov
sbb
mov
xor
imul
dec
adc
fcmove
daa
hlt
notl
movb
add
stos
cmp
sbb
fdivrs
mov
or
lret
jo
pop
dec
push
push
sbb
and
ja
jmp
adc
in
mov
xchg
pop
mov
insl
dec
add
pop
adc
aam
add
mov
xchg
mov
gs
popa
fsts
not
xchg
lock
adc
xchg
fwait
or
add
test
pop
pusha
fisttps
push
inc
daa
lds
into
fnstcw
xchg
mov
inc
sarl
jno
into
mov
or
jg
repnz
pop
inc
push
clc
push
movsb
test
fnstenv
push
mov
jo
and
repz
adc
sbb
mov
pop
pusha
pop
popa
jmp
pop
out
or
ljmp
dec
std
in
push
add
and
lods
bound
cwtl
lret
insb
dec
xchg
loopne
daa
das
push
pop
lods
loop
fninit
lds
adc
xchg
push
mov
adc
jno
sub
ret
dec
mov
imul
rolb
lahf
jmp
std
call
loope
cld
les
push
mov
sub
inc
pop
mov
cmp
and
xchg
cmp
cli
addr16
xor
js
repz
cmp
and
sbb
mov
negl
sbb
sub
jmp
cmpsb
jmp
mov
jns
lock
mov
push
rorl
in
jl
cmc
push
xchg
pop
imul
dec
xchg
pop
dec
jle
jo
sub
pushf
push
adc
adc
out
icebp
rol
sbb
je
loope
sets
ret
adc
aad
popf
mov
out
clc
jle
or
mov
cmp
push
dec
sbb
or
cmp
push
jnp
out
sahf
lret
lcall
adc
xchg
call
cmp
cmp
xchg
test
adc
xchg
inc
xchg
mov
xor
popf
ret
dec
sbb
cmpsl
stos
std
popf
in
dec
push
mov
les
arpl
cltd
nop
call
lahf
test
jp
repz
sbb
lret
jo
aaa
mov
jb
add
xchg
jle
notb
dec
add
push
xor
call
add
push
adc
sbbb
aam
outsl
fsubs
das
jl
pop
or
les
in
movsb
sbb
inc
mov
in
fwait
xor
bound
ja
push
inc
sbb
sub
rorl
mov
pop
flds
jo
cmp
mov
push
dec
shrl
ljmp
test
aaa
sbb
sbb
fwait
dec
mov
movsl
push
push
fcmovbe
outsb
push
pop
lahf
push
gs
loopw
mov
add
xchg
push
btr
mov
stos
movsb
sbb
mov
repz
cmp
push
insl
sub
pop
add
and
je
mov
adcl
sub
jge
mov
int3
xchg
insb
leave
cmp
sub
dec
stos
push
and
jno
lcall
or
rcl
repnz
jbe
int
push
mov
lock
sti
adc
push
cs
lds
iret
mov
push
test
xor
push
test
jne
sbb
adc
add
push
mov
dec
loop
mov
mov
jno
jae
dec
lcall
icebp
adc
xorl
inc
aam
cmpsl
shr
pusha
pusha
jbe
fiaddl
in
mov
cmp
adc
in
adc
xchg
cmp
mov
arpl
cmp
hlt
sbb
cmp
lods
xchg
je
or
and
js
pop
mov
inc
xor
dec
repnz
out
sarl
lods
dec
push
shrl
xchg
and
rolb
inc
push
test
lods
jne
push
lock
mov
or
mov
loopne
shll
dec
clc
incl
push
int3
add
ficomps
stos
mov
cmp
rclb
stos
call
daa
or
push
adc
imul
jg
pop
adc
or
sub
adc
mov
dec
gs
pop
add
fstl
insl
sbb
ds
rorl
sbb
movsl
stc
dec
mov
and
mov
daa
aam
imul
dec
in
fs
xchg
xchg
add
loope
sahf
jnp
dec
and
mov
lods
stc
cli
cmp
and
stos
cmp
inc
orb
scas
out
testb
es
cmpsb
xlat
jo
jecxz
lahf
xchg
push
sbb
sub
mov
push
loope
xlat
mov
or
stos
jns
xchg
inc
mov
mov
add
insb
mov
movsb
xlat
bound
sbb
shll
mov
adc
sbb
mov
fadd
cmc
xchg
push
addr16
mov
aad
jae
mov
xchg
jg
mov
pop
push
or
pop
aaa
mov
sbb
les
shr
push
adc
je
jno
mov
pop
sbb
cmp
add
pusha
dec
mov
inc
leave
dec
dec
xor
mov
insl
stc
ss
popa
int3
scas
hlt
fists
rep
repz
push
loop
fists
ljmp
jl
iret
xor
adc
aas
xchg
push
ja
andl
es
insl
and
push
cmp
mov
in
sbbb
bound
repz
push
add
dec
xlat
mov
or
mull
jne
push
pop
insl
cld
test
iret
and
fxtract
add
lock
xchg
sbb
push
fdivrp
jmp
cmpsb
sub
loop
mov
jne
out
loopne
scas
lcall
xlat
jae
test
push
push
mov
mov
aam
es
add
push
stos
fnstcw
sbb
lret
shlb
jnp
add
mov
lods
popf
out
inc
neg
inc
cmc
int
std
fs
and
or
and
loop
orb
or
mov
jmp
pop
xchg
pushf
mov
pop
and
xor
ss
sub
movsl
mov
movsl
sub
jmp
mov
xchg
addr16
in
xchg
stos
out
xchg
stos
icebp
inc
jne
xchg
fistpll
and
in
stos
rorb
cmp
ret
into
add
sbb
rorb
jle
and
fdivl
testl
ss
or
aaa
lret
pop
orb
sub
xor
movsb
mov
aam
and
insl
mov
dec
mov
std
sbb
and
mov
fs
out
movsl
and
push
lock
sub
stos
jg
cmpb
inc
in
in
add
inc
cli
jns
jnp
add
push
pusha
sub
xchg
mov
and
popf
pop
mov
mov
pop
in
mov
cs
pop
stos
mov
jbe
dec
dec
or
outsb
xchg
push
cs
mov
inc
repnz
cmp
in
xchg
shlb
pop
jno
jl
jno
cld
or
sub
arpl
mov
inc
jecxz
sbb
and
adc
sbb
dec
and
femms
push
jb
push
loopne
repz
xchg
movsl
pop
pop
cmp
jp
icebp
or
xchg
push
jnp
and
loope
jl
or
xor
shlb
mov
mov
movsl
movsb
xchg
dec
dec
shl
mov
and
arpl
push
lea
loop
call
cmp
inc
xchg
popf
in
jae
lret
jp
or
imul
xchg
mov
cvtdq2ps
jo
mov
dec
std
push
dec
repnz
fildl
xchg
and
cwtl
repz
xorb
push
int3
aas
pop
xor
xor
jmp
or
dec
lcall
sbb
sbb
jae
icebp
stos
pop
dec
test
inc
sahf
push
xchg
jae,pn
data16
adc
add
in
sbb
int
adc
push
rolb
push
add
loop
leave
gs
mov
xor
cwtl
or
cld
out
into
ljmp
push
stc
or
cmp
fbstp
aad
sub
pop
or
jge
imul
mov
ljmp
pop
adc
xchg
inc
enter
or
std
fistps
rclb
mov
cmp
add
popa
sub
or
jl
pop
stc
inc
bound
mov
cmp
sbb
mov
filds
mov
ret
sub
daa
xchg
add
jge
cld
dec
cmc
aaa
mov
cmp
dec
cmp
add
sbbb
ljmp
push
cmp
out
xor
add
cmp
hlt
jle
lret
inc
fstpl
push
fwait
hlt
enter
push
or
das
push
jl
push
rorb
rorb
xor
ret
dec
lret
std
and
lcall
mov
lret
mov
pop
cmpsb
fdivs
arpl
dec
arpl
xor
push
xchg
dec
call
adc
inc
sub
enter
xchg
fdivrs
lods
insl
test
call
add
imul
outsl
movsl
movsl
sub
jle
cwtl
icebp
adc
pop
xchg
sbbb
cld
mov
push
imull
dec
aas
data16
pop
ret
cmp
dec
jmp
shrb
cwtl
sbb
pusha
jle
mov
or
jg
cli
inc
inc
in
loop
ret
xor
lock
out
xchg
or
aam
push
jge
sub
repz
inc
pop
cmp
adc
xchg
mov
es
add
scas
cs
clc
int3
push
jg
mov
jecxz
loope
mov
fnstcw
push
add
arpl
push
jmp
dec
fnsave
jb
popf
ffree
mov
cltd
mov
int
mov
lcall
jp
daa
out
mov
iret
add
or
addr16
imul
add
lock
add
rcrb
ret
outsl
jae
mov
mov
ret
inc
ret
test
shll
sbb
mov
aam
mov
add
xor
stc
mov
sahf
ret
mov
cld
inc
push
adc
sarb
add
xchg
dec
mov
fs
outsb
sbb
mov
sub
mov
bound
cld
inc
mov
push
and
jge
and
adc
adc
in
mov
push
aam
sbb
cmp
cli
sbb
pop
sbb
push
sar
xchg
xor
int
lahf
inc
iret
out
hlt
mov
lret
sbb
es
into
xor
jg
das
inc
fcomps
pop
xchg
pop
jmp
aas
fwait
and
sti
lahf
push
ja
jg
lcall
push
cmp
adcb
mov
mov
jle
cmp
mov
sbb
imul
mov
dec
cmpsl
out
cwtl
fsubr
daa
outsb
mov
sbb
loop
fsts
cltd
jae
inc
popf
mov
in
shrb
mov
lds
insl
xchg
ds
ret
or
push
rcrb
pop
adc
int
fldcw
jns
ret
jns
jmp
sub
addr16
xor
push
ret
adc
sub
aaa
dec
cli
inc
mov
call
ss
mov
into
loop
imul
out
mov
adc
test
loopne
or
mov
push
and
push
lahf
mov
cld
sarb
inc
iret
sarb
sub
mov
and
out
repz
lcall
mov
cmp
data16
mov
into
popa
push
mov
inc
jmp
fisubrl
mov
sbb
repnz
outsb
jg
enter
add
xor
xchg
push
mov
cmp
mov
paddq
push
test
lods
std
in
ja
jl
cwtl
mov
mov
xor
aad
mov
imul
fisttpl
pop
sbb
js
out
jae
adcl
shl
xchg
xor
jmp
mov
scas
sub
fcoms
lds
xorb
dec
ss
arpl
inc
inc
or
inc
in
fwait
push
cwtl
mov
fdivrl
mov
cmp
mov
dec
std
leave
and
xor
mov
lret
subl
imul
cmp
push
test
mov
rclb
dec
shrl
mov
mov
pop
aam
push
das
dec
sbb
test
lea
in
jg
mov
aaa
lcall
push
push
fisttps
mov
jne
inc
pop
clc
xchg
sub
or
test
imulb
mov
roll
enter
cmc
mov
mov
add
adc
rclb
xchg
add
adc
incl
lods
sub
adc
pushf
movsb
fistl
sub
jecxz
fs
loop
loop
test
rcr
aam
cmpl
popa
cmc
mov
add
xchg
or
adc
rclb
sub
and
ljmp
mov
xor
push
repz
xchg
inc
lods
pop
sub
sbb
sub
repz
jge
scas
ror
mov
aas
fs
add
xchg
stos
outsb
outsl
lods
cmp
fdivrs
int
clc
jp
movsb
andl
pop
shr
repz
pop
sbb
dec
sbb
bnd
mov
sub
insl
push
ret
ret
arpl
adc
or
outsb
es
pop
nop
ret
jbe
inc
rolb
bnd
stos
cmc
and
test
loopne
dec
and
xor
push
jae
jno
mov
jb
mov
push
fisttps
mov
jo
insb
mov
popf
sahf
mov
dec
inc
inc
and
dec
sbb
jl
ljmp
add
sbb
in
sbb
cmpsl
xchg
lock
xorl
cmpsb
cmp
xchg
mov
cmp
popf
test
addr16
or
clc
jp
pandn
shlb
scas
cwtl
or
in
pop
outsl
stos
mov
mov
insl
lods
shll
adc
dec
movsb
nop
out
out
sbb
inc
es
sbb
pop
lea
add
rolb
icebp
fadds
and
js
dec
shlb
mov
int
push
fiaddl
pop
scas
data16
sbbb
icebp
mov
mov
rcr
call
jmp
cwtl
adc
or
mov
and
add
add
stos
fildl
movsb
pop
addr16
ljmp
mov
add
or
leave
xchg
cmp
xchg
stos
dec
xchg
popa
lods
sbb
and
xchg
jo
rcrb
cmp
xchg
cmpsl
dec
orb
mov
mov
xor
pop
mov
or
lds
mov
inc
inc
xor
cmp
daa
sbb
xchg
js
mov
pop
outsl
insb
sti
pusha
jb
mov
mov
out
pop
in
ror
test
adc
cli
lcall
jne
xor
jecxz
cmc
mov
sub
adc
dec
pop
sbb
mov
ss
sbb
jnp
out
fcoml
test
and
jl
push
insl
ja
clc
bound
sbb
subb
adc
into
or
rcll
mov
fcompl
daa
lods
lret
cmpsb
int
push
je
jle
pop
xchg
mov
cltd
push
cli
jge
pop
xchg
out
fnstcw
pop
add
xrelease
bound
test
into
cli
movd
lods
jp
fistps
das
adc
call
out
and
mov
or
adc
mov
in
int3
pop
pop
cmp
jno
mov
es
xor
xchg
imul
loope
cmp
les
enter
push
xchg
xor
jmp
orb
mov
mov
pushf
lea
and
rorb
es
adcl
inc
inc
sbb
bound
push
mov
mov
iret
mov
mov
add
inc
push
aaa
jle
bound
or
dec
gs
daa
sarb
push
push
icebp
cld
xor
jnp
addl
addr16
xor
pop
mov
sbb
xor
sbb
sub
cli
inc
lods
mov
xor
jg
jo
jmp
cs
hlt
push
push
fwait
mov
add
mov
popa
ja
mov
add
lods
mov
pop
push
cld
inc
fiadds
sbbb
in
movsb
and
xchg
xchg
out
push
bound
xchg
xor
pop
mov
mov
sbb
insb
jb
scas
push
sarb
das
pop
fisttpll
movsb
sarl
mov
testl
out
jp
sub
dec
adc
sub
push
xor
mov
adc
aad
add
xor
sbb
fcmovb
xchg
xor
adc
adc
loope
mov
mov
pop
dec
test
nop
loopne
cs
sub
xchg
fstpl
jb
mov
sti
xor
or
sub
movsl
roll
xchg
jp
inc
mov
movsb
popf
add
push
fistl
inc
jnp
cmpb
jb
add
int
dec
incl
adc
fcomps
or
orl
pop
popa
js
lret
mov
scas
and
inc
daa
sbb
and
subb
sbb
outsb
add
xor
pop
stos
inc
adc
rcrl
arpl
push
mov
dec
gs
adc
idivl
xor
and
mov
cmp
cmpl
scas
jge
jmp
xlat
pop
ss
and
hlt
adc
cmpsb
into
stc
je
add
dec
andl
mov
xor
movsl
or
or
adc
ja
in
mov
call
push
and
jle
xchg
hlt
nop
xor
or
ja
dec
ljmp
loopne
ds
js
popf
jp
push
data16
cmpsb
ljmp
test
mov
inc
ret
loop
movsl
xor
adc
pop
call
cmp
pushf
test
xlat
or
mov
shll
andps
addr16
in
mov
cmp
push
fldcw
push
dec
mov
insl
adc
jnp
add
sub
int3
inc
xorb
sub
xchg
xchg
cmp
mov
movl
and
xor
stos
sahf
jg
loop
jb
imul
test
fwait
or
mov
adc
jle
add
arpl
xchg
and
mov
bound
out
stc
or
js
ret
lret
lcall
sub
dec
sbb
imul
push
mov
dec
cmp
je
adc
fcompl
xchg
cmc
jno,pt
mov
shrb
rclb
jmp
outsb
test
or
sbb
lahf
js
enter
mov
and
pushl
dec
pop
fsubrl
leave
roll
push
push
sbb
cltd
push
mov
out
mov
cmc
xlat
xor
cmc
add
dec
mov
fldt
in
divb
shl
fcmove
jge
xchg
inc
out
xlat
sahf
push
mov
or
xor
fnstcw
daa
xchg
pop
xchg
push
flds
dec
ds
add
mov
inc
dec
push
push
cmp
xor
test
mov
mov
jecxz
sub
sahf
sbb
sub
pop
rorl
imull
sbb
bt
push
pop
mov
sahf
and
dec
pop
in
push
lds
pop
out
push
cmp
sbb
test
and
xor
inc
xchg
jmp
lret
xor
pop
xor
lods
mov
add
rclb
adcb
movsb
xchg
xchg
insb
cwtl
adc
adc
or
mov
push
pushf
inc
adc
shll
js
or
and
fisttps
sub
and
sbb
loopne
gs
pop
and
pop
jmp
aam
sub
in
test
jbe
popf
je
aam
iret
push
pop
xchg
les
xorl
dec
sub
push
out
lcall
addb
pusha
inc
aaa
mov
cld
xchg
lds
add
pop
std
push
pop
push
ror
inc
add
xchg
adc
pop
or
pop
sbb
test
aad
push
scas
cmc
out
cmpl
fsubl
and
inc
insb
cmp
pop
lahf
mov
cmp
add
dec
cmp
shlb
jmp
and
jbe
sub
sub
and
not
sarl
push
lret
xchg
adcl
sub
in
lcall
cmp
inc
xor
pop
stos
mov
mov
xchg
jmp
iret
repz
pop
cltd
xchg
pusha
sbb
mov
xchg
cmp
dec
mov
xor
test
fsubp
pop
rcl
push
movsb
xor
fcmovnbe
loopne
cmp
jmp
dec
dec
adc
mov
xchg
imul
bound
sti
jge
pop
xor
push
stos
xchg
lds
cmpsl
adc
jmp
jmp
xchg
mov
mov
fs
mov
in
or
lods
stos
push
inc
sahf
leave
xor
cld
adc
xchg
push
xchg
pop
cmp
rol
mov
cmp
popf
xorb
dec
pop
push
sbb
add
sub
pop
pop
sub
xor
or
loopne
aaa
mov
jg
ss
aaa
push
pop
cmp
js
pop
inc
sub
cmpsl
insl
pop
stos
lea
jle
jecxz
loope
enter
inc
jo
or
outsl
push
mov
adc
je
scas
out
mov
pop
das
roll
jae
int
pop
into
repz
sub
xor
icebp
cmc
pushf
mull
pusha
movsl
shll
hlt
mov
lcall
subl
mov
insl
sub
fildl
sub
cli
enter
in
and
or
rolb
push
je
popa
inc
mov
push
je
insl
cmpsl
outsb
add
imul
push
jns
mov
sub
push
outsb
xor
sub
leave
fistl
hlt
lods
imul
aas
in
sub
xor
jno
test
mov
shrb
jae
pop
scas
add
cld
not
pusha
pop
xchg
loop
daa
mov
cmp
add
xchg
sbb
out
lds
ljmp
out
das
ficompl
gs
lods
mov
xchg
repz
and
jecxz
xchg
repz
loope
dec
xchg
in
dec
and
pop
jg
out
cmp
push
adc
imul
fdivrl
idivb
push
inc
xor
enter
sbb
xchg
js,pn
repz
mov
aad
scas
popa
jg
adc
ficoml
dec
xchg
adcb
loopne
or
std
movsb
cld
mov
cmp
das
adc
xor
lock
stos
sbb
inc
mov
xlat
inc
dec
and
pop
or
stos
xchg
mov
fistps
xchg
cmp
dec
sub
push
fists
xchg
and
xchg
xchg
jbe
mov
xchg
divl
or
pop
pop
cli
repnz
jo
mov
and
add
ljmp
and
test
sbb
movsb
and
shrb
movsl
je
push
out
sti
nop
stc
shl
lahf
or
out
mov
lret
jae
je
repnz
adc
test
or
add
je
jns
mov
mov
xchg
adc
es
popa
ret
jecxz
pop
idiv
or
repnz
adc
je
leave
fucom
adc
jbe
sbb
jbe
stc
in
jae
mov
jne
cmp
ja
aaa
addr16
and
shll
and
subl
and
pop
sub
in
jmp
in
jae
inc
xchg
xor
les
sub
adcl
xchg
cltd
std
fsubs
mov
adc
ficomps
cmp
pusha
push
and
data16
mov
sbb
cmpsb
add
iret
adc
cltd
add
icebp
nop
or
jge
mov
es
fcoml
loopne
xor
push
fcoml
rorb
popa
cmpsb
and
insb
dec
sbb
loopne
inc
inc
cmp
mov
fistpll
cmp
adcb
js
aaa
sub
fbld
jecxz
and
xorb
or
mov
imull
not
push
jne
jo
inc
push
pop
jns
xchg
sbb
les
test
rol
dec
add
ficoml
lods
rcr
or
in
mov
or
jb
xor
and
mov
ljmp
int
mov
push
lret
out
jmp
call
daa
jge
jo
ret
mov
jmp
jmp
pop
add
lods
fidivrs
clc
pop
outsl
xchg
mov
ficompl
repz
add
xchg
push
mov
sub
or
stc
inc
aaa
bound
pop
scas
fbstp
push
dec
repz
mov
pop
imul
je
pop
aad
fcomp
push
mov
sub
mov
jl
or
mov
jecxz
je
das
bound
xchg
out
cmpsb
imul
test
imul
fdivrl
rcl
push
or
popf
loop
out
jne
lods
cmp
iret
dec
or
jmp
shll
mov
jmp
insl
aad
fs
cli
push
test
nop
movsb
jl
mov
mov
sub
dec
or
lahf
sub
and
jl
jl
mov
aad
mov
xchg
cmp
addr16
loope
pop
push
mov
dec
mov
in
mov
inc
movsb
mov
bound
push
shl
mov
mov
lds
loop
xor
push
ret
stos
dec
adc
mov
mov
xor
jbe
icebp
stos
sbb
xchg
push
dec
popf
push
adc
push
cmp
dec
shrl
pop
popf
out
xchg
movsl
dec
je
mov
push
in
outsl
jns
ss
ja
lea
xchg
out
pop
repz
fisttpll
xorb
dec
jecxz
mov
xor
mov
xchg
test
call
add
sbb
in
mov
and
xor
sbb
les
lods
push
sub
lock
adc
cmp
xchg
in
dec
leave
shr
incl
aas
lods
stos
lea
stos
jecxz
add
mov
mov
sbb
rorl
das
cmp
in
test
rcll
adc
jns
pop
xchg
lahf
xlat
cmp
jns
cmp
mov
or
jp
inc
adc
xchg
ja
or
adc
sbb
ja
ds
clc
add
out
mov
popf
mov
ss
test
dec
inc
movsl
cmp
push
jl
test
mov
add
in
sbb
nop
sub
cmp
dec
adc
or
jmp
fimull
addr16
sub
imul
jo
sbb
push
cwtl
add
cs
cld
and
aas
nop
es
pop
hlt
add
pusha
pop
stc
adc
sbb
cmpsl
loope
rclb
test
add
jecxz
cmp
mov
sub
mov
push
xor
out
or
mov
gs
stos
jae
cmp
mov
mov
mov
std
in
ret
xor
pop
or
adcb
outsl
data16
xchg
mov
pop
stos
lret
scas
je
daa
push
sbb
or
add
push
pop
mov
sub
je
sbb
push
and
inc
xchg
sub
xchg
sub
popa
add
and
mov
mov
jle
ret
dec
adc
ss
dec
jg
imul
cmp
mov
push
mov
mov
mov
loope
push
and
or
mov
fcoms
xor
lds
add
adc
sub
push
or
mov
repz
int
lods
jae
hlt
push
js
aad
adc
xor
data16
sbb
fwait
push
push
test
test
in
adc
lret
adc
jae
lret
stc
cmpsb
mulb
test
mov
xor
add
mov
cli
pop
and
sub
or
leave
mov
mov
std
sub
stc
ret
je
movsb
add
push
xor
mov
cs
ss
or
cmp
addr16
inc
icebp
push
leave
cld
mov
je
lock
mov
adc
and
sbb
mov
inc
push
mov
mov
pop
push
add
mov
xchg
mov
sbb
mov
xor
inc
stc
mov
cmpsb
jno
test
jbe
cmpsb
dec
std
jnp
push
outsb
jecxz
push
movsb
cmp
hlt
aad
aaa
push
cmp
rcl
ss
int
sbb
add
sbb
mov
push
ljmp
mov
stos
mov
pop
sub
or
cmpsb
pop
arpl
inc
inc
cmp
repnz
push
imul
jmp
lret
stc
dec
fistpll
mov
inc
dec
or
je
in
or
loopne
into
outsb
fildll
mov
out
inc
out
push
sub
call
lods
fnstenv
addr16
mov
inc
xchg
and
push
push
push
add
lds
in
mov
faddl
mov
or
imul
xchg
insb
or
sbb
sarl
outsl
les
sahf
pslld
add
jmp
mov
mov
in
test
and
fwait
xchg
daa
pop
adc
jno
mov
dec
divl
cmp
mov
fstpt
adc
dec
push
jecxz
or
aaa
iret
push
push
movsb
xchg
jg
push
or
adc
mov
nop
xorl
adc
insl
jge
sti
pop
lcall
addl
sti
ss
adc
cld
pop
sti
mov
mov
adcl
mov
adc
push
mov
pop
or
pop
lds
mov
in
jmp
jp
push
test
addr16
mov
add
xor
push
test
lret
out
mov
and
icebp
pop
movsb
call
mov
dec
pop
dec
fimuls
insl
loop
mov
cwtl
test
pop
shll
pop
mov
inc
pop
ficoms
jns
mov
sub
mov
jnp
int3
jbe
pusha
or
into
pop
dec
pop
stos
rorl
stos
mov
dec
cltd
mov
aad
ja
adc
adc
es
inc
aad
mov
adc
dec
cmpsl
int3
sub
fiadds
rolb
jbe
daa
outsl
out
push
rcr
mov
icebp
mov
inc
cmp
adc
xchg
mov
pop
idiv
in
cmp
dec
jecxz
sbb
enter
sub
stos
loope
or
scas
and
mov
test
ficompl
les
lret
mov
sub
ljmp
mov
xchg
jle
or
sub
gs
lds
stc
dec
pop
sti
push
nop
cmp
push
cmp
xor
pop
ljmp
sub
inc
cld
cmovnp
imul
dec
mulb
or
mov
gs
inc
adc
clc
mov
push
cmp
and
pop
nop
mov
mov
mov
jge
mov
outsl
outsb
sbb
nop
pop
cmp
mov
fnstcw
cmc
sub
mov
das
add
imul
lock
mov
gs
lret
mov
xor
shll
pop
sbb
push
cmp
and
xor
push
jne
in
push
daa
and
in
adc
stc
test
and
push
mov
xor
jecxz
mov
push
pop
add
push
call
jge
testl
pop
repz
ret
jb
jne
arpl
cmp
stc
push
add
es
cmpsb
arpl
adc
push
insl
push
or
clc
xor
lds
rorl
pop
xor
imulb
cmp
or
pop
sub
jge
fs
ret
pop
imul
ds
aas
jno,pn
cmp
xchg
push
push
inc
repz
cltd
mov
notl
stc
sub
fs
sub
scas
xchg
mov
mov
mov
inc
xchg
sub
lret
jp
sahf
ljmp
in
rcrb
xchg
lods
and
dec
lods
rclb
xchg
ret
repz
pop
mov
sub
sbb
cwtl
inc
outsb
xchg
mov
mov
mov
mov
lcall
js
call
fistpll
cltd
mov
adcl
lahf
cmp
and
inc
loop
out
push
adc
sbb
in
mov
push
jbe
hlt
fstpl
adc
cwtl
out
ds
add
jmp
das
push
lret
and
ret
xchg
bound
scas
fwait
lret
lods
gs
das
les
or
or
inc
sahf
sbb
push
add
mov
or
in
outsb
out
inc
adc
test
or
ds
ljmp
enter
cs
lods
cli
inc
and
xchg
sub
dec
js
es
jo
jg
test
add
jmp
cmpsb
mov
inc
xchg
xchg
loope
pop
and
sub
pop
add
jbe
adc
frstor
mov
mov
lea
jb
test
lret
psrlw
cmpsb
lods
out
jbe
fxch
fwait
jmp
mov
ror
jecxz
int
add
jmp
fdiv
push
mov
mov
lcall
in
sub
push
lahf
push
push
push
mov
repz
xor
lcall
arpl
mov
push
out
jecxz
xchg
imul
and
lret
les
es
push
cmc
sbb
dec
xchg
push
mov
and
mov
lods
dec
stos
cs
push
jl
aad
aaa
dec
shlb
lahf
pop
dec
movsb
jmp
addr16
dec
mov
repz
bound
test
call
imul
dec
xor
insb
cmpb
call
dec
jge
mov
cs
enter
push
push
clc
sbb
loopne
les
or
outsb
icebp
insl
and
jmp
xor
add
pop
inc
cmc
cmp
pop
int
add
stos
mov
dec
add
ljmp
jecxz
js
mov
lods
lds
fldcw
xor
and
int3
stos
jb
cmc
sbb
cltd
insb
popf
and
cmp
rcrl
sti
sub
xor
jg
add
outsb
repz
adc
repz
test
jb
adc
or
pusha
bnd
fidivl
jo
pop
dec
in
pop
ljmp
inc
mov
int3
hlt
add
jnp
aam
sbb
lret
cmp
mov
ds
jecxz
xorb
mov
adc
jecxz
pop
or
mov
pusha
push
xchg
adc
xchg
shr
pop
mov
push
lret
insl
data16
test
je
and
aaa
or
leave
ds
push
sti
jns
out
xor
mov
cmp
stc
stos
fdiv
mov
movsb
arpl
mov
bound
lea
inc
adc
push
stc
aaa
lcall
rep
mov
sub
out
or
insl
mov
push
pop
imul
cmp
inc
cs
sbb
outsl
ss
mov
add
add
data16
push
xchg
aas
test
aad
stc
xor
loop
push
sbb
dec
dec
imul
cltd
dec
cmp
cmp
pop
pop
sbb
mov
push
mov
or
movb
xor
das
sbb
sub
mov
rorb
push
shrl
outsl
pushf
insb
push
or
or
push
add
push
and
pop
mov
mov
cltd
in
bound
xchg
in
rclb
mov
cmp
xor
sub
enter
push
movsb
rcrl
ljmp
or
push
sub
mov
sbb
pop
cmc
xlat
fs
xchg
insl
inc
ret
movsb
sub
xchg
das
mov
cmp
shll
stos
movsl
cmp
in
jp
push
ds
sub
popf
out
lock
daa
xchg
sub
sbb
jbe
in
cmc
dec
dec
in
xchg
icebp
xor
test
dec
mov
ja
xchg
ja
pop
adc
rcrb
mov
mov
pop
sahf
les
cmp
inc
ds
lock
cmp
jg
mov
std
lock
xlat
cmpsb
fadds
ja
les
mov
and
ljmp
push
add
pop
in
jb
movhps
or
jmp
and
cmp
loope
xchg
inc
ret
lods
pop
jns
shl
push
movsb
push
adc
sbb
sbb
sub
mov
push
cmp
xchg
outsb
lea
shll
and
out
leave
test
test
fwait
loope
cmp
int
aaa
les
add
test
sub
popa
test
out
fldt
mov
fyl2x
iret
jmp
or
pop
fdivr
cmp
xor
jns
dec
inc
loope
dec
xor
or
mov
int3
inc
test
scas
pop
and
cmp
das
add
push
mov
push
mov
push
xchg
inc
xor
jnp
in
ret
mov
scas
cmp
in
and
imul
les
mulb
sub
adc
ljmp
adc
pop
outsl
repnz
cmp
insb
lods
push
fbstp
sub
dec
push
rorl
xor
mov
rolb
mov
push
pusha
push
lret
sbb
testb
test
test
push
push
aam
pop
scas
popa
sarl
call
jns
lcall
ret
ret
adc
mov
fcoms
dec
ljmp
ret
sbb
or
stc
xchg
inc
dec
test
mov
cmpsl
shll
cmp
or
inc
push
sahf
je
add
and
push
dec
es
mov
stc
fs
stc
dec
or
pop
insb
aad
or
adc
je
and
lock
out
adc
and
jb
mov
mov
dec
pop
push
inc
sub
in
push
mov
jle
cmp
lahf
sahf
mov
mov
xchg
fnstcw
fistl
xchg
sub
xorl
jae
jmp
cmp
imul
arpl
adc
xchg
loop
sti
lock
push
jo
loop
addb
aaa
das
mov
ja
cmp
mov
pusha
mov
cmc
add
adc
mov
loope
xchg
sbb
adc
sub
xor
mov
int
iret
adc
mov
xlat
aaa
es
dec
push
jnp
out
xchg
andb
sub
xchg
jnp
and
enter
fldenv
arpl
pop
jmp
mov
sub
decl
mov
mov
mov
cmpsl
inc
and
movl
xchg
sub
lret
lcall
ret
cmp
les
shlb
aam
push
leave
adc
cmp
mov
cmp
dec
int3
test
js
sub
mov
add
or
push
js
call
ret
xchg
loop
mov
jecxz
push
pop
ret
dec
sub
enter
insl
push
mov
enter
sbb
jo
scas
test
adc
in
movsb
push
mov
inc
jg
lock
inc
pop
pusha
dec
add
pop
jp
pop
or
push
fldt
mov
in
pop
add
fisubrs
adc
lret
mov
cmpsb
push
or
pop
cltd
test
loope
inc
mov
dec
pop
fdivs
in
das
imul
cmp
add
setbe
sbb
je
fs
inc
add
xchg
cmpsl
cmp
or
dec
dec
aaa
mov
mov
mov
stos
and
ret
es
push
xchg
insl
cli
scas
andl
add
mov
filds
repnz
lcall
jbe
aad
add
out
mov
sti
ret
into
jo
mov
jg
pop
insb
out
das
icebp
iret
inc
push
js
fsubrl
xchg
jnp
loop
cmp
mov
cmp
bound
jp
fucomp
cmp
lea
sbb
pop
out
or
popf
lea
xchg
xchg
pop
inc
scas
jbe
cmp
fld
sbb
rorl
scas
iret
jge
mov
pop
dec
fstps
aas
ror
scas
dec
sbb
xor
mov
push
mov
daa
mov
mov
inc
inc
push
inc
mov
pop
push
stos
xchg
sub
xor
sahf
icebp
and
and
pop
mov
movb
or
dec
cmp
outsb
sbb
test
mov
ret
jmp
jae
lods
push
jmp
lcall
pop
push
dec
jmp
aad
out
inc
cmpsb
insb
test
lret
lret
jae
in
sbb
mov
adc
pop
aad
lock
cmp
pop
push
adcb
jle
stos
movsb
inc
jno
sub
ss
add
insl
dec
idivb
add
imul
lahf
push
and
dec
inc
add
mov
xchg
leave
adc
add
int
mov
lahf
mov
filds
push
jmp
stos
cmc
test
push
jbe
or
jp
fucomp
mov
dec
repz
pop
jmp
or
or
enter
sbb
and
adc
pop
pop
sbb
jae
loope
pushf
roll
inc
lahf
dec
push
inc
addr16
xchg
pop
fidivs
inc
mov
mov
fdivs
mov
ss
sbb
hlt
cmpsl
out
xchg
int3
add
jecxz
or
pop
sub
mov
std
mov
dec
in
in
sarl
push
jp
adc
add
add
call
and
cmp
pop
cmpsb
sub
xor
jecxz
fdivrl
rcrb
add
adc
mov
mov
imul
and
aam
nop
loope
lahf
cmp
mov
leave
xchg
inc
out
xchg
sbb
dec
or
js
mov
adc
add
and
mov
insb
and
outsl
imul
pop
daa
mov
lahf
sbb
ret
rolb
mov
mov
aas
sbb
xor
psadbw
imul
jb
cld
outsl
fcomi
sub
jl
sub
cmp
dec
aaa
jnp
call
aas
add
push
mov
fidivrl
adc
sbb
jg
dec
or
mov
xchg
lds
push
out
cmc
ret
cmp
cld
cmp
cmp
cmp
in
cmp
icebp
mov
mov
fbstp
mov
sub
cmp
xchg
xchg
in
es
sub
movsl
shlb
sbbb
cltd
fwait
pushf
lds
popf
imul
mov
shlb
xor
or
mov
imul
iret
out
lcall
rcrb
xlat
xchg
stc
and
push
cmc
stos
add
das
cmp
inc
ficompl
shr
mov
in
pop
ja
pop
inc
mov
aam
push
dec
sbb
pop
xchg
shrl
arpl
jo
out
mov
adc
adc
daa
sub
ja
mov
pop
fsubs
arpl
add
pop
pop
incb
mov
xor
mov
mov
incb
mov
out
fcoml
out
mov
lods
fstpl
xchg
pop
mov
sub
and
jb
adc
inc
jp
and
or
or
loopne
xor
push
xchg
into
mov
fildll
shll
mov
or
stos
pop
popf
ss
dec
outsb
mov
imul
pop
pop
pusha
and
inc
enter
jp
ret
mov
mov
aam
push
mov
movsb
xchg
jmp
stos
stos
nop
insb
push
push
push
push
sbb
or
sbb
dec
lds
jbe
in
and
aam
and
fwait
mov
lods
in
loop
mov
or
mov
push
or
icebp
cmpsb
lahf
idiv
push
xor
movsl
push
data16
pop
lahf
nop
sti
sahf
pushf
push
dec
mov
outsl
sbb
sbb
and
cltd
negb
stos
mov
push
aaa
cwtl
pop
les
add
fdivs
popf
mov
loopne
jbe
lahf
push
test
inc
inc
cmp
add
into
mov
and
inc
loop
pop
xchg
xor
or
xchg
pop
leave
pop
insl
mov
cmp
mov
jno
push
dec
push
imul
scas
and
daa
call
xchg
push
pop
cwtl
push
mov
out
mov
sbb
arpl
push
jbe
je
inc
push
push
push
xor
jnp
mov
sbb
adc
push
mov
jb
add
aam
aaa
xor
cmc
sbb
lret
and
mov
or
cli
clc
pop
xchg
pop
out
repz
mov
hlt
fcmovnu
addr16
les
aas
push
das
pushf
arpl
fists
sub
inc
jnp
adc
lods
add
flds
mov
jg
jp
test
and
rorb
xlat
pop
je
push
fildll
mov
cmp
mov
push
shll
xchg
jo
inc
cmp
addr16
xor
cs
lret
xchg
push
scas
add
sub
popa
ret
mov
jmp
les
dec
dec
mov
sti
rolb
imul
sti
mov
test
and
rclb
cmpsl
jge
cltd
pop
dec
mov
pop
sbb
mov
sarb
int
mov
xor
fs
jb
rorl
dec
pop
push
adc
lret
stos
and
in
imul
pop
movsl
and
xchg
cmpsl
mov
push
lea
mov
adc
cmp
fldl
cwtl
pop
test
cmp
mov
clc
add
scas
nop
aad
jne
push
leave
test
sub
jbe
js
out
ret
fldenv
dec
repnz
adc
loope
or
mov
lret
mov
out
inc
popa
push
stos
adc
sub
jnp
adc
mov
push
nop
pop
test
fcmovb
sbb
or
xlat
pop
sbb
mov
enter
jg
ljmp
aas
fisubrl
mov
es
imul
movsl
cli
lahf
sbbb
pop
lods
mov
jg
jbe
adc
push
mov
out
pop
call
or
push
pop
pop
mov
adc
sub
loop
pop
and
dec
aam
jmp
cs
add
push
push
jmp
aaa
push
int
test
sub
cld
lods
fadds
jne
mov
dec
xor
mov
push
jmp
xorl
movd
mov
jge
push
sahf
lods
imul
jmp
mov
ret
test
fidivrs
mov
pop
sub
jb
push
add
dec
and
inc
mov
push
testl
fstpl
inc
icebp
add
push
cwtl
cli
mov
jmp
enter
out
mov
push
iret
nop
insl
in
shl
addb
mov
std
pop
rolb
mov
out
scas
imul
mov
sbbl
mov
sub
pop
and
mov
hlt
in
and
out
xchg
jge
add
jmp
movsb
rclb
aad
fdivl
pop
sbb
pusha
mov
hlt
and
pusha
and
xchg
dec
pusha
sbb
sub
jno
out
repz
sub
pop
pop
mov
mov
jno
rclb
jmp
into
jmp
loop
mov
repnz
adc
push
pop
xchg
push
fucomip
call
jno
mov
or
xorl
popa
lret
ud0
pop
jg
push
cltd
test
xlat
scas
cmc
or
jbe
aam
fcmovnu
loope
scas
or
scas
int
or
xorb
pop
imul
add
bnd
or
cmp
add
loopne
mov
sbb
push
sub
sbb
mov
int
jo
lock
pop
and
out
popa
mov
outsb
es
outsl
lods
mov
add
add
ljmp
ret
jae
sbb
inc
fs
push
mov
adc
mov
jl
pop
add
repnz
imul
jnp
mov
and
lods
cs
inc
arpl
cltd
das
movsb
movsl
fabs
mov
dec
scas
sbb
outsb
fs
add
sbb
clc
or
dec
fdivl
scas
push
imull
sbbl
sbb
pop
fldcw
hlt
cmpsb
cmc
inc
ljmp
aam
dec
movsb
jne
adc
in
mov
es
xchg
sti
pop
fwait
daa
je
inc
std
pop
cltd
ja
arpl
jge
iret
and
test
pop
insl
daa
es
xchg
xchg
push
cmp
xchg
hlt
xchg
add
aas
xchg
out
int
sahf
or
mov
ret
mov
adc
sbb
imul
adc
and
fs
call
adc
test
addr16
movsb
mov
leave
fisttpll
pushf
js
loope
mov
add
subl
and
outsb
inc
push
sub
mov
adc
test
mov
ja
xor
sub
out
xchg
mov
adc
sahf
and
les
sub
mov
outsl
inc
shlb
sti
mov
int3
fildl
push
mov
mov
sub
mov
or
jg
lret
push
je
xor
mov
cwtl
aaa
pop
pusha
fbstp
rorl
enter
mov
sahf
push
jnp
and
inc
or
daa
shll
and
test
xchg
stos
aaa
outsl
cs
mov
shlb
adc
adc
sahf
rcl
inc
in
out
or
jg
mov
cld
cmp
or
repnz
mov
ror
lock
jge
or
js
pop
inc
aam
sub
shlb
stos
pop
fcmovnu
repnz
dec
pop
gs
ret
dec
dec
jae
leave
mov
inc
add
movsb
add
iret
mov
ljmp
fwait
inc
and
push
cwtl
mov
dec
inc
sbb
inc
sti
aas
idivb
ss
cmp
dec
push
mov
mov
jne
add
test
cmpsb
sub
mov
add
push
jno
pop
and
sub
shrl
push
xor
sbb
lock
into
loop
rcrb
jmp
jb
prefetcht1
add
adc
lock
out
leave
movsb
aam
xchg
and
or
push
inc
out
or
in
inc
cld
and
clc
ds
repnz
dec
sbb
add
gs
adc
cmp
push
sub
fldl
inc
inc
aaa
testb
repz
ja
lods
xor
lock
push
cmpsb
mov
push
cmp
jns
jns
cmp
mov
outsl
mov
xor
push
cmp
cmp
inc
je
outsl
jecxz
movsl
lods
inc
ret
mov
shl
arpl
sub
daa
out
lds
aas
mov
aas
mov
and
addl
sbb
cmpsl
jne
insb
movb
lods
push
jl
mov
or
xchg
insb
mov
and
dec
jl
mov
into
or
jg
cltd
and
cmpsb
out
lahf
mov
xlat
sbb
imul
nop
mov
stc
icebp
mov
rclb
ljmp
popa
loope
shlb
cltd
push
lret
mov
ss
mov
mov
push
push
lods
out
mov
or
es
inc
jnp
xchg
pop
jae
pop
aas
ret
jp
ss
je
jo
lret
out
ss
xchg
cmp
mov
dec
outsl
or
mov
test
sbbl
cmp
out
push
test
xor
mov
jmp
push
cmc
les
stos
aam
add
inc
loopne
mov
pop
push
pushl
test
aas
divb
push
in
cmp
inc
xchg
aad
fxch
int
and
add
and
pop
dec
out
fucomip
dec
sbb
jecxz
je
xchg
sub
pop
lods
lret
dec
sub
sbb
jmp
dec
add
cvtps2pi
in
ss
cld
pop
popf
leave
fdivl
pop
inc
pushf
jl
cmp
in
dec
adc
cltd
enter
daa
add
jno
pop
dec
adc
fsubp
sbb
or
fdivl
inc
cltd
inc
sub
cmp
hlt
scas
push
shl
adc
mov
mov
xchg
rolb
jne
dec
aam
add
inc
jo
es
addl
adc
jo
and
fwait
hlt
mov
ret
cmp
pop
les
xchg
shll
push
cli
shrb
dec
nop
mov
cmp
jecxz
out
dec
mov
mov
cld
lret
push
ja
or
pop
lret
mov
jae
pop
ljmp
icebp
fcmove
jle
mov
xlat
sub
jge
pop
xchg
ja
aad
push
or
pop
ja
fwait
xor
decl
in
xchg
aad
fsubp
pop
inc
loop
jbe
shlb
inc
movsb
pop
pop
cli
cmp
or
cmpsl
jbe
rcll
test
sbb
insl
adc
arpl
xchg
jo
mov
rclb
enter
pop
stos
lcall
sbbb
popa
cmp
lret
iret
lds
cli
cmp
scas
jne
inc
dec
add
mov
gs
or
jnp
cmpsl
je
nop
in
mov
push
pushf
jl
cmpsl
cmp
mov
repnz
testl
mov
pushf
insb
fsubs
sub
adc
in
mov
pop
call
cmp
adc
negb
pop
push
test
jp
mov
js
xor
sarb
fwait
cmp
fadds
lods
cmp
or
test
cmp
sub
mul
mov
sbb
aad
in
pop
test
dec
pop
add
test
pop
pop
dec
dec
das
std
or
lahf
out
push
test
jb
lahf
divb
scas
adc
sbb
sub
popa
pop
rep
roll
xchg
cmpsl
outsl
mov
cmpsl
test
xchg
mov
data16
popa
aam
jmp
inc
mov
imul
fimuls
lret
andl
mov
mov
mov
mov
mov
cmpsl
or
push
js
cli
lea
jnp
cs
das
mov
loop
mov
xor
pop
push
mov
xchg
adc
xorb
mov
push
daa
ss
hlt
movsb
data16
out
sbb
js
or
mov
sbb
ffree
das
xor
xchg
in
leave
pop
lock
sbb
dec
outsb
cvttps2pi
fldt
or
es
adc
inc
add
pop
adc
push
scas
jns
jns
test
push
cmc
popl
test
mov
push
cmp
inc
pop
lea
lds
cmpsb
or
add
iret
xchg
aas
push
pop
inc
adc
pop
pop
xchg
mov
dec
pop
arpl
push
and
jle
sub
in
jno
cli
nop
lcall
mov
mov
xor
mov
add
popf
cmp
jae
xchg
xchg
pandn
cmp
dec
test
push
ja
jbe
pop
inc
leave
sbb
jb
cmp
adc
push
or
les
insl
sahf
test
add
ret
ret
cmp
lods
ret
in
pushf
xchg
imul
jmp
dec
xchg
cmp
dec
imul
sub
and
add
add
mov
cmp
xchg
jle
mov
xchg
popf
add
das
mov
mov
xor
addr16
dec
pop
sti
and
mov
repz
lods
test
add
push
lret
xor
insl
push
rcrl
les
out
popf
mov
jge
enter
jbe
push
inc
fldt
fnstenv
fdivrl
imul
sub
outsl
pop
inc
daa
xchg
mov
pusha
and
add
icebp
pushf
test
movsl
add
outsb
das
adc
and
or
and
dec
ficomps
dec
push
imull
dec
aaa
aad
xchg
mov
jmp
and
jle
mov
jle
sub
jmp
push
int
xor
xor
insb
rorl
or
sub
out
in
cmp
push
scas
test
sub
cmc
or
outsl
sbb
fsub
xchg
xor
cltd
out
test
dec
dec
inc
xchg
out
cmpsl
jns
jo
in
insb
pop
loopne
cld
sbb
sbb
push
int3
dec
jns
xchg
mov
xor
jns
sti
mov
push
or
push
inc
stos
js
pop
adc
dec
shlb
dec
dec
ficomps
lcall
adcb
push
addr16
rclb
add
out
mov
div
mov
pop
push
mov
mov
sahf
push
pop
in
jmp
lret
in
add
aas
and
divl
int
push
out
test
sarl
es
mov
fnstenv
test
cmp
imul
inc
and
js
aas
in
cltd
jb
int
pop
cmp
loop
mov
out
shl
xchg
movsb
inc
pop
xchg
std
loop
lods
push
sub
or
inc
mov
or
imul
push
loopne
das
dec
mov
adc
jg
rorb
push
loop
in
iret
pop
mov
ss
add
in
jo
pop
cmp
scas
movsb
or
mov
inc
xor
mov
inc
cmp
lcall
adc
mov
sbb
dec
add
fildll
vpsubusb
inc
pop
cmp
cmp
aas
lods
push
icebp
test
cmp
pusha
mov
inc
or
lods
dec
sbb
into
pusha
and
xor
ljmp
mov
outsl
enter
into
cmp
insb
mov
add
test
pop
lods
cmp
and
fidivrl
mov
movsl
push
out
sub
ret
pop
jecxz
jecxz
add
mov
adc
push
inc
or
mov
icebp
jle
mov
mov
imul
push
inc
clc
inc
dec
mov
int
and
sbb
add
dec
lret
cwtl
and
mov
sti
repz
inc
xchg
xor
and
add
rcrl
push
lea
jp
add
je
adc
loopne
dec
je
sbb
popf
jge
pop
jp
mov
mov
cs
fidivrl
aaa
sub
arpl
ja
ss
lret
pusha
lea
adc
jns
enter
jge
dec
inc
in
outsl
sahf
lods
lds
imul
mov
sarl
scas
add
out
mov
inc
decb
xor
cmc
jmp
pop
or
bound
cmp
in
fbstp
push
aad
popf
xchg
and
stc
dec
ja
pop
and
fldt
push
stc
cmpsb
jg
adc
jbe
mov
xchg
xchg
notb
mov
mov
inc
popf
and
push
jbe
cld
inc
and
aas
div
mov
das
pop
mov
mov
xchg
and
sub
clc
xchg
stc
dec
inc
sbb
cmpb
cmp
sbb
cmpsb
out
push
shlb
test
sub
cmc
lea
rcrb
xor
push
inc
stos
popf
and
xor
inc
push
sbb
call
fcmovnb
jne
mov
or
or
aam
dec
lods
cmp
roll
movlps
push
jg
shll
mov
movsb
ficoml
push
outsl
jmp
mov
mov
int
jnp
fistpll
cmp
repnz
pop
repnz
inc
mov
inc
mov
lret
roll
mov
push
push
pop
pop
mov
sahf
push
push
pop
lret
xchg
loopne
setne
inc
clc
setge
mov
test
cmp
sti
pop
mov
mov
inc
repnz
repz
sub
mov
lahf
push
cwtl
scas
push
mov
aam
ljmp
dec
pop
stos
mov
bswap
and
or
mov
and
adc
mov
xchg
adc
jns
jae
into
cld
rorl
stos
push
popa
mov
dec
xchg
mov
pusha
daa
pop
fsubrs
mov
lret
cld
mov
enter
mov
imul
outsl
outsl
ljmp
lea
sbb
aam
pop
lcall
mov
rcll
xchg
add
ret
fnstsw
int
ficompl
lret
shll
adc
loope
adc
adc
fs
xchg
cwtl
mov
fisubrl
std
cmp
popf
xor
scas
shll
push
mov
loope
data16
es
pop
mov
loop
sub
and
xchg
ja
data16
loop
xor
sub
mov
js
lock
enter
test
sub
outsb
mov
pop
cmpsl
jb
pusha
jae
xchg
inc
mov
test
mov
jecxz
pop
js
sarb
into
xchg
xor
mov
iret
mov
orl
pop
add
jno
inc
xor
popaw
cmpsb
fidivl
outsl
jge
shr
fwait
push
cwtl
test
fists
mov
xchg
adc
insb
movsl
xchg
xchg
mov
out
sub
push
fbstp
push
fcmovbe
dec
stc
cmp
je
dec
stos
lods
xor
les
ret
dec
iret
and
add
cmpsb
mov
xor
mov
sbb
xor
outsl
fndisi(8087
sbb
outsb
sbb
arpl
xor
and
sbb
lahf
aad
pop
lea
enter
stos
mov
push
pop
aad
cltd
lods
and
or
pop
bndldx
test
iret
jge
in
fbld
hlt
call
adc
push
xchg
add
mov
inc
or
or
adc
ja
pop
inc
jp
jns
movsb
lret
add
push
dec
std
cmp
pop
jecxz
rsqrtps
jmp
nop
mov
imul
movsl
stos
xchg
in
js
cmp
or
or
or
cltd
das
dec
ficomps
repz
and
mov
call
or
xor
inc
xchg
xchg
dec
or
jne
mov
mov
dec
fdivrs
lea
shlb
sbb
pop
ret
pop
pop
mov
fwait
jmp
and
mov
je
es
stos
enter
jns
in
mov
ds
fstps
jmp
mov
dec
dec
mov
aaa
pop
stc
pop
xor
nop
loope
das
adc
std
jns
insb
xor
adc
into
xchg
sbb
lret
cmp
push
int
outsb
jne
jbe
jb
push
cmovns
sub
xorb
lods
negb
jp
scas
daa
or
adc
pop
andl
xchg
mov
cmpsb
and
imul
rcrb
xchg
jle
outsb
mov
mov
cmp
or
ja
icebp
inc
push
push
negl
incb
push
lods
je
dec
jns
mov
les
mov
jp
dec
push
adc
insl
and
aad
iret
lcall
jge
shlb
adc
bound
jne
rcrb
rcr
cmpsl
and
or
rol
stc
imul
xlat
loopne
lahf
jbe
jno
je
inc
loopne
imulb
push
and
adc
push
mov
cmp
inc
mov
sub
lea
fs
repnz
lock
es
mov
ds
notl
pop
xor
mov
mov
repz
shl
xchg
mov
inc
cmp
mov
insl
lea
fst
fwait
mov
and
lea
adc
xchg
dec
jmp
sbb
daa
scas
sarl
or
hlt
ja
pop
jns
scas
sub
push
push
fiaddl
lods
xchg
xor
mov
mov
and
xchg
sub
xchg
test
repz
loop
cld
push
mov
rorl
add
daa
xchg
idivl
sahf
scas
fldenv
jp
fwait
or
mov
cmp
add
int
xor
push
enter
divb
ja
add
inc
sti
dec
out
dec
pop
repz
out
push
pop
sti
movsb
rcll
mov
mov
jle
sti
fs
pop
pop
mov
aam
pop
nop
movsb
test
into
inc
mov
sub
mov
pop
andb
out
test
mov
jmp
dec
fisubrs
mov
gs
sub
lods
xlat
xchg
ficoml
xor
mov
add
mov
test
xchg
ficoms
test
es
inc
aaa
mov
fistl
popf
imull
inc
pop
sbb
mov
push
insl
jle
cmp
lods
sbb
aaa
sbb
add
les
repnz
jmp
push
push
fwait
in
xchg
enter
fidivs
paddusb
cltd
int
xchg
sub
sub
pop
and
jecxz
or
ja
sbb
mov
xor
sbb
repnz
sub
inc
repz
fcos
das
insb
jecxz
adc
or
rcl
out
lret
mov
and
jbe
stos
insb
ja
push
and
adc
cmpsl
ja
push
cmp
cmp
push
jmp
ljmp
mov
test
inc
push
dec
and
int3
mov
pop
hlt
ret
adc
jnp
dec
lods
cltd
sbb
pop
xchg
popf
jg
push
nop
mov
mov
inc
add
pushf
stos
adc
fninit
xchg
push
iret
xor
and
testb
test
ljmp
push
ja
shlb
int
push
insl
lret
or
mov
lods
push
push
xor
cmpb
cwtl
out
test
xchg
jl
jns
clc
fstpl
das
movsb
in
dec
jmp
rcrl
push
fdivrs
push
and
dec
dec
imul
std
cmp
adc
jno
imul
arpl
stos
xchg
andb
adc
sti
movsb
clc
outsb
pop
xor
jl
inc
jmp
test
scas
rclb
data16
jp
jg
je
xor
mov
dec
test
mov
das
pop
dec
and
xor
mov
fistps
fldenv
sub
loopne
imul
es
fnsave
out
jo
test
sub
sub
xchg
xchg
cmpsl
call
dec
lods
or
test
das
xchg
stc
loopne
xor
dec
stos
dec
insl
xor
xor
mov
inc
icebp
stos
xchg
sti
aaa
scas
mov
dec
nop
sbb
inc
out
fistps
mov
xor
or
ljmp
adc
ljmp
mull
sub
aad
bound
jo
mov
fdivrl
xchg
daa
bswap
outsb
push
ljmp
ret
jae
clc
jmp
lock
or
xor
and
scas
jmp
pushf
mov
popa
cmc
xor
mov
aam
push
push
add
push
jne
fisubrl
js
pop
xchg
stc
mov
cmpsb
insb
shlb
rcrb
mov
pop
nop
loop
inc
mov
loope
push
cltd
add
sahf
mov
inc
dec
aam
ljmp
and
in
dec
pop
and
fidivrs
gs
or
sub
xchg
cmp
aam
dec
jo
pushf
dec
jg
push
pop
xor
sbb
ret
std
sbb
dec
lock
loope
lcall
mov
sub
lods
xlat
xchg
loopne
jecxz
nop
sub
pop
out
push
cld
das
fcmovnu
inc
fs
cmp
inc
mov
pushf
or
xlat
sub
sbb
sbb
inc
xor
repnz
sbb
sbb
push
pop
rolb
stos
enter
mov
push
inc
mov
sbb
pop
mov
and
rcl
push
xor
pop
mov
add
test
out
jae
inc
gs
test
popa
repnz
lds
arpl
adc
lret
es
jmp
dec
insl
add
lods
js
cmp
stos
sbb
jbe
sbb
push
repnz
mov
je
push
mov
lret
pop
or
sub
stc
add
sub
push
outsl
fwait
jbe
jp
push
pandn
pop
mov
dec
push
in
mov
cmp
lahf
gs
or
lret
rclb
ret
popf
repnz
shrl
mov
jnp
mov
ret
pop
ljmp
dec
and
cs
orb
out
ficoml
lcall
movsb
fidivrs
int3
or
lods
in
adc
out
lcall
push
mov
cmc
popf
mov
lods
test
inc
call
popa
roll
test
lahf
inc
insb
cmpsl
out
cmpl
pop
jne
jns
and
mov
movsl
clc
jmp
xchg
sub
mov
das
xchg
xlat
add
lret
icebp
iret
decb
lret
seto
mov
push
xchg
out
mov
aad
out
push
fstpl
mov
jge
loope
shl
out
jnp
pop
cmpsb
pop
inc
cmp
arpl
pop
cmc
bndstx
in
lods
cmc
pop
mov
outsl
xor
sub
add
ret
push
cmp
inc
aad
inc
sub
sti
lods
lock
loopne
xchg
or
sub
sub
inc
das
mov
dec
iret
ja
dec
repnz
dec
cld
sbb
cwtl
xor
xchg
or
rep
xchg
sbb
shlb
mov
push
mov
ds
in
xchg
scas
stc
push
roll
jp
test
pop
add
jae
decl
stos
movsb
jnp
scas
and
movsb
pop
inc
inc
push
pop
inc
repz
cmp
cwtl
shl
adc
clc
idivb
or
adc
xor
inc
fwait
roll
std
imul
lret
sub
add
cs
mov
pop
inc
adc
inc
int
outsb
arpl
mov
aaa
adc
cmp
dec
repnz
xor
add
lret
ss
xchg
and
dec
enter
dec
mov
ds
dec
add
dec
bound
dec
cmp
sub
push
lea
adcl
adc
add
mov
insb
cmc
or
cli
xchg
xchg
xor
mov
cmpl
flds
scas
out
or
sbb
fldcw
icebp
mov
lds
inc
pusha
adc
cmp
xchg
lret
outsl
pushf
xor
dec
ss
xchg
outsb
cmpsl
sbb
cmpsb
xor
push
push
add
jns
adc
inc
mov
rol
mov
pmulhuw
ja
adc
mov
iret
adcb
add
std
mov
inc
inc
cmpl
std
icebp
cwtl
mov
outsb
rcr
adc
push
es
adc
repz
movsl
and
out
jmp
mov
test
mov
aad
int3
pop
jbe
sub
fwait
stc
add
shll
testb
sub
jge
les
imul
mov
jg
push
int3
push
pop
test
std
pop
ror
pop
test
iret
iret
loopne
popa
stos
cmpsl
jmp
pop
call
jecxz
scas
mov
inc
fisubrs
jl
in
std
mov
testl
lea
add
stc
xor
aas
inc
fsubrl
repnz
je
jg
test
std
movsb
in
pop
dec
cmpsb
mov
loopne
leave
sbb
mov
insl
repz
pop
or
push
cmp
mov
push
sbb
xchg
sbb
in
dec
xchg
aad
xchg
or
imul
movsb
addr16
pusha
xchg
scas
pop
push
scas
jp
push
in
xorl
nop
js
or
mov
pop
mov
notb
jae
pop
sub
outsb
push
pop
lcall
and
sbb
mov
push
gs
loope
mov
xchg
sahf
mov
mov
out
mov
leave
and
je
push
mov
ljmp
daa
mov
cmc
mov
push
imul
inc
sbb
xchg
xor
stos
in
test
out
add
adc
cmp
rcll
scas
mov
pop
adc
pusha
in
jge
das
cmpsb
loop
inc
fsin
or
scas
inc
dec
jecxz
mov
ret
imul
or
scas
sub
and
int
mov
mov
xchg
adc
inc
andb
sbb
mov
movsb
sub
dec
cltd
outsl
aad
inc
out
cmp
insb
out
imul
fs
pop
inc
mov
loopne
lods
push
xchg
mov
xchg
inc
mov
mov
inc
add
rsqrtps
xchg
or
aas
push
mov
push
cltd
fcmovbe
adc
mov
rolb
xchg
cli
xchg
pusha
push
mov
mov
out
rcll
mov
inc
fcompl
cmpsl
fisttpll
hlt
pop
ljmp
mov
lret
es
adc
nop
inc
inc
mov
mov
ss
int
xchg
repnz
mov
jg
mov
and
adc
or
insb
popa
pop
loop
lods
in
test
cmp
stos
out
ror
loopne
push
dec
pop
adc
xor
dec
ficoms
ja
or
aam
jle
int3
adc
xchg
push
stos
adc
mov
iret
cmp
jne
mov
sbb
mov
sub
xor
push
lret
mov
lods
das
mov
and
mov
std
and
ret
pop
or
call
lahf
mov
jae
roll
into
ljmp
sarl
sub
in
imul
test
mov
cmp
imul
adc
jbe
push
fst
pop
adc
fstl
cmp
jbe
pop
mov
adc
push
inc
stc
je
mov
aas
nop
or
fidivs
and
add
les
dec
lret
mov
or
xchg
dec
xchg
sbb
cmc
idivl
mov
mov
push
push
aaa
push
mov
mov
mov
or
add
xor
imul
xor
mov
cli
and
out
mov
or
push
add
into
push
jno
mov
pop
js
xchg
pop
adc
sahf
test
xchg
mov
aad
jne
popf
add
dec
roll
loope
jl
xchg
mov
dec
in
js
lret
ja
aaa
jno
push
push
pop
xorl
stos
stos
jns
dec
sti
repz
or
loop
jmp
push
xchg
adc
cwtl
push
or
push
std
into
cmc
cwtl
add
inc
push
or
jmp
and
mov
cmp
dec
repz
push
fcmovnbe
jnp
cmpsb
pop
sub
leave
fnstsw
ret
lcall
mov
push
clc
das
sub
dec
enter
jmp
aad
rcrb
test
stos
sbb
cmpsl
insb
aam
imul
mov
push
cmp
push
mov
std
push
push
movsl
xor
xor
ljmp
fwait
loope
sbb
popa
repz
xor
cmp
mov
inc
dec
daa
aad
mov
and
lahf
xchg
daa
data16
pusha
dec
popl
cmpsb
jmp
or
stos
sub
insl
mov
or
adc
outsl
dec
sahf
mov
lods
dec
jmp
add
adc
push
push
adc
cmp
jb
scas
addr16
gs
ljmp
mov
add
add
arpl
push
aaa
dec
fisubrl
in
push
rcl
push
fadds
leave
ficoms
mov
jmp
adc
daa
mov
stc
cld
iret
jns
xor
ret
xor
test
mov
lcall
mov
outsb
sahf
sub
shrl
adc
xchg
clc
fcoml
add
loop
js
fmull
adc
add
jbe
subl
imul
dec
data16
sti
mov
sub
js
repnz
lret
fisubrs
es
aad
data16
xchg
lods
pop
pop
and
mov
cwtl
test
pop
stc
mov
rolb
pop
int
cmp
iret
int3
sub
add
sarb
pusha
xchg
xor
sbb
int
aam
aaa
xorb
arpl
mov
mov
test
movsl
push
or
arpl
push
sbb
mov
das
scas
cmp
jbe
add
cmpsb
jl
pop
jbe
jecxz
fwait
test
fisubs
pushf
in
shr
lret
in
movsl
testl
and
jnp
inc
or
pop
adc
mov
jne
shll
in
cs
push
push
push
jecxz
imul
mov
jecxz
xor
int3
add
cs
pop
fisttps
xchg
pop
add
movsb
sahf
sahf
inc
popf
inc
dec
dec
aas
sub
inc
in
dec
shl
lcall
mov
inc
sbb
ret
js
adc
jbe
mov
xor
mov
rcrb
sbb
adcl
cltd
xchg
push
or
rcrb
add
sub
mov
push
out
mov
inc
jmp
lock
mov
add
test
cmp
les
cmp
push
sbb
faddl
imul
mov
jmp
or
mov
insl
dec
mov
rorl
sub
pop
insb
sbb
xlat
mov
cmp
scas
add
add
mov
mov
jns
lods
jnp
jb
xchg
das
aad
in
xor
arpl
jp
pop
xchg
pop
sahf
sahf
and
mov
and
xchg
mov
adcl
testb
movsb
divl
mov
jle
fdivrs
and
movsl
andb
xor
outsb
out
and
sub
lret
mov
mov
sbb
pop
nop
and
cltd
sub
inc
jno
xor
rdrand
in
or
aam
mov
mov
push
jle
fildll
push
pop
add
dec
cmp
leave
cmc
dec
push
lds
add
fcmovnu
dec
inc
mov
push
movsb
add
in
or
notb
js
inc
cmp
cmc
and
fidivl
cmp
mov
fstl
gs
jae
lret
pop
or
jb
mov
mov
inc
jmp
ror
adc
jb
mov
pop
push
sub
xchg
cmpl
push
jp
inc
dec
insb
ss
and
popa
test
push
xchg
stc
enter
sbbb
outsb
mov
sbb
inc
das
sub
cli
out
dec
stc
cwtl
mov
nop
sbb
mov
adc
pop
fiaddl
dec
push
movsb
adc
lret
cmpsb
daa
mov
aad
cld
aas
bound
insb
rcl
jns
int3
xchg
out
ljmp
push
shrb
test
mov
adc
nop
inc
xchg
cmp
sbb
pushf
js
test
mulb
ljmp
pop
sbb
jb
aam
inc
out
jp
xlat
insl
pop
insb
ja
dec
cmp
add
mov
cmp
mov
xchg
cmp
mov
xor
je
adc
xchg
out
or
push
outsl
cmp
stos
out
sbb
sub
pop
divl
add
sti
stc
mov
into
jb
clc
push
pop
add
pop
in
das
add
push
addr16
lods
mov
xchg
or
mov
loope
xchg
pusha
inc
push
data16
inc
mov
and
pop
hlt
push
xchg
xchg
lcall
test
cmp
sti
enter
pop
lock
push
jg
xor
jecxz
and
shlb
frstor
lods
lock
out
and
repnz
cmc
lds
lods
in
insb
bound
mov
xchg
icebp
sub
in
mov
daa
stos
shl
scas
mov
pop
repnz
sub
aaa
cmp
les
push
pop
shll
outsl
lds
loop
pop
enter
shlb
sahf
pop
or
push
or
xor
test
in
icebp
mov
push
arpl
shll
outsb
sub
ja
and
or
std
imul
sub
fdivrp
or
mov
aam
push
jns
lret
gs
mov
aaa
outsl
dec
out
test
cmp
lahf
sbb
insl
ljmp
arpl
pop
ja
lahf
mov
inc
push
ja
add
bound
mov
int3
and
fists
mov
and
xor
cmp
xlat
out
pop
cmc
mov
sbb
in
mov
push
test
fwait
bound
daa
mov
or
orl
inc
jmp
stos
icebp
xchg
aad
pop
push
ljmp
mov
add
mov
pop
in
sub
fs
sbb
lcall
inc
lods
xlat
add
rcll
mov
inc
scas
vpaddd
fwait
adc
les
pushf
pop
xor
mov
dec
sti
and
aam
lods
or
lea
scas
pop
fs
out
jle
and
jnp
lds
sbb
testl
jbe
mov
lret
jl
cmpsl
iret
jle
lods
scas
sub
sahf
xor
inc
dec
pushf
popa
icebp
dec
pop
popf
mov
mov
xor
arpl
jecxz
sub
cs
add
mov
push
add
mov
cld
fdivs
lea
push
dec
dec
add
xchg
xor
dec
mov
jge
out
cmp
fldenv
loopne
mov
xor
mov
xor
dec
sahf
inc
stc
or
outsl
add
xor
gs
int
sub
dec
push
psadbw
xor
cld
int3
jo
es
pop
mov
mov
inc
insl
out
sub
cmp
or
push
xchg
sbb
ds
dec
mov
mov
xchg
out
mov
in
push
adc
pusha
ret
push
xchg
js
ss
push
rcll
lcall
adc
test
xchg
repnz
dec
fsts
rcll
in
pop
mov
nop
fcmovnb
daa
sub
jbe
mov
push
pop
push
add
jbe
xor
add
push
popa
jmp
sub
mov
fwait
es
cs
or
cmp
in
and
xor
test
mov
shr
sub
cmp
push
cli
sbb
cld
scas
or
inc
out
inc
or
inc
pop
push
pushl
xorb
add
into
jg
or
dec
push
inc
or
call
jae
lret
sbb
lahf
mov
arpl
scas
in
inc
adc
nop
in
mov
sbb
sub
mov
cmp
into
repz
movsl
int3
push
bound
sti
pop
cld
xchg
push
cmp
insb
cmpsb
sub
adc
insl
js
dec
adc
inc
mov
pop
or
add
or
sbb
push
sub
jmp
enter
out
in
sub
mov
std
pop
push
insb
pcmpeqb
cs
fsts
xchg
ds
fdivr
int3
pop
adc
sbb
mull
adc
sti
std
pop
xor
ss
cwtl
pushf
pusha
fdivr
ficomps
sbb
and
sbbb
push
int3
sub
pavgb
lret
lea
mov
sbb
jmp
testb
lea
inc
loope
add
popa
filds
pop
dec
dec
nop
shlb
fimull
cmc
jb
cmpsb
ror
aam
pop
push
cmp
fsubs
inc
and
icebp
sti
mov
rorb
lret
cltd
das
stos
nop
mov
in
jge
lods
mov
jns
pusha
cs
pop
scas
adc
mov
fidivl
adc
push
imul
sub
jle
je
addb
jmp
dec
repnz
pop
aaa
jae
xlat
jmp
xchg
pop
ja
lock
xlat
xchg
movsb
test
in
sub
and
adc
cwtl
xlat
insb
cmp
outsl
inc
ret
loop
inc
lods
outsb
jnp
inc
pop
icebp
cltd
xchg
fs
mov
cmp
inc
push
mov
popa
inc
adc
lahf
mov
cli
icebp
dec
push
pop
addl
cmp
aad
xchg
imul
mov
cli
push
shl
popa
ds
jg
push
push
lcall
or
pop
fstpl
and
lahf
sbb
mov
jno
jl
jb
and
and
test
sbbb
jmp
call
add
mov
addr16
push
dec
das
imul
inc
std
push
ffree
in
push
ja
and
xchg
pop
lods
dec
mov
nop
mov
lods
fyl2xp1
ds
stos
mul
cld
nop
pushf
pop
fldenv
imul
cld
aaa
push
sbb
lock
lret
es
test
pop
fdivrs
or
xor
xchg
xchg
pop
xchg
sub
ret
jbe
loopne
rorl
loop
add
adc
xor
mov
dec
dec
iret
cmp
dec
imul
pop
mov
stos
int3
ret
loop
dec
out
in
push
mov
pop
rorb
sbb
add
jl
push
jbe
adc
mov
out
cmp
int3
ja
dec
mov
lods
pushf
jbe
fldcw
pop
aam
out
sarl
pop
or
dec
mov
jne
ret
fisubrl
xchg
mov
mov
int3
xor
fnstsw
icebp
dec
xor
adc
scas
popf
lret
push
shlb
pushf
fsubl
arpl
pop
popf
dec
mov
outsb
fwait
push
and
neg
arpl
jno
mov
mov
pop
aaa
aam
lods
ret
xchg
das
sub
inc
lods
mov
pop
leave
push
add
and
pushf
out
scas
outsl
mov
lahf
and
in
pop
cmp
ds
lret
xchg
push
mulb
mov
adc
jae
inc
flds
arpl
int
and
out
cmp
adc
mov
dec
cmp
xchg
lea
ja
mov
adc
mov
insb
sub
pop
cmp
lea
imul
bound
jge
inc
add
shll
in
rdrand
cmp
adc
xor
pushf
outsb
adc
insl
cmp
lds
ret
adc
stos
mov
shll
adc
sub
inc
xor
lds
push
lods
rcrb
repz
push
jmp
mov
sbb
xchg
rclb
mov
fidivrs
xchg
cmp
or
jb
test
pop
and
lods
daa
pop
mov
xchg
aas
bound
xor
dec
mov
mov
enter
sub
xor
mov
add
shr
xchg
mov
loop
mov
mov
mov
js
sbb
neg
fistl
inc
cs
mov
mov
and
rorl
repnz
mov
lods
jge
arpl
out
shr
test
in
cmp
stc
mov
xchg
into
pop
cmp
in
rcr
ud0
pop
fcmovb
jbe
mov
int3
rcll
add
jnp
sub
loopne
mov
rcr
inc
jno
mov
mov
cmp
movsl
cmpb
pop
insb
pusha
int
aaa
into
adc
movsl
xorl
sub
add
jno
lcall
add
in
sub
xchg
inc
aam
fwait
mov
sbb
repnz
arpl
xchg
aad
mov
add
mov
fldcw
pop
daa
push
jno
call
cmpl
cli
sbb
dec
outsb
cmc
gs
cmp
fidivrl
fdiv
pop
push
jnp
push
jns
insl
pop
sub
mov
mov
inc
jmp
push
pop
out
js
add
inc
sbb
std
xchg
inc
dec
dec
xchg
int3
ret
out
loope
mov
inc
adc
mov
pop
jl
andb
iret
xor
sbb
insb
inc
f2xm1
dec
fstpt
and
fucom
sarb
dec
pop
jl
sbb
fs
pop
pop
sub
hlt
das
ja
ficompl
out
xchg
divl
mov
xor
mov
adc
xlat
gs
insb
mov
lcall
inc
orl
fdivl
js
sbb
add
aaa
xor
gs
adc
adc
jb
imul
lods
xchg
dec
mov
frstor
aaa
xchg
push
xor
mov
mov
hlt
jle
cmp
and
xchg
mov
pop
adc
imul
mov
cmp
notb
adcl
cmpsl
pop
cld
add
stc
retw
lock
sbb
mov
add
stos
mov
sti
movsb
sub
xlat
jno
mov
rclb
adc
vmovupd
ret
es
inc
mov
sub
das
inc
xor
popa
inc
mov
lret
mov
push
ljmp
loope
loop
sti
pop
xor
and
inc
fisubrs
dec
and
mov
test
dec
movsb
cld
inc
filds
adc
andl
pop
add
jle
inc
je
cs
cmp
sarl
aam
mov
in
mov
mov
or
fidivl
in
push
in
or
pop
aaa
enter
arpl
data16
inc
les
inc
rcll
call
xorb
shl
and
push
cld
xchg
mov
lea
loope
cmp
loop
or
fistl
ret
insl
or
cs
pop
sti
xor
and
and
mov
and
loop
inc
or
ret
mov
sbb
xchg
jns
mov
dec
adcb
loop
in
jo
jl
and
popa
add
mov
xor
arpl
mov
fisttpl
adc
pop
jne
xor
mov
mov
and
dec
out
adc
daa
in
xor
popf
data16
inc
fisttps
ja,pn
daa
lcall
jge
lret
mov
ljmp
fbstp
xor
int3
adc
sub
pushl
rol
and
cmp
pop
mov
inc
xor
jecxz
xchg
fmuls
je
loope
push
insb
lock
mov
xchg
sbb
test
enter
popf
add
nop
fldl
sub
jmp
dec
push
sarb
or
cmp
mov
cltd
inc
in
mov
mov
push
aas
add
fisubrs
jl
push
inc
xor
repz
testb
jmp
aam
lcall
cmp
dec
popf
mov
popa
aam
outsb
fimull
aaa
add
movsb
jg
adcb
dec
pop
adc
insb
in
stos
dec
inc
or
mov
pushf
mov
imul
sub
aam
ja
push
fstp
daa
lock
mov
stc
mul
clc
push
std
movb
mov
fwait
push
xchg
push
and
pop
lret
add
mov
bnd
xchg
aad
cmc
mov
mov
and
fnsave
or
lcall
mov
cmpsb
xchg
inc
or
mov
test
or
loop
in
dec
sub
cmp
ret
mov
sarl
xor
ret
test
xor
inc
jb
out
sub
mov
mov
add
xchg
inc
movsb
dec
mov
stos
mov
shrl
addr16
iret
jp
jmp
mov
ja
stc
sbb
jg
lret
dec
scas
movsl
sbb
or
xchg
cmpsl
lds
jge
adc
add
or
jge
mov
and
mov
imul
jg
xor
loopne
aaa
push
inc
call
or
mov
stos
sbb
shll
xchg
add
adc
popa
jno
sub
call
fucom
fistpll
add
push
clc
sub
mov
cltd
xor
sbb
scas
push
mov
xchg
add
jo
loope
shlb
dec
mov
imul
sub
fnstenv
stos
imul
pushf
inc
ret
sbb
fnstenv
jp
mov
js
xor
mov
xlat
inc
xchg
dec
xchg
xchg
dec
xchg
pop
dec
adc
mov
jmp
stos
aad
pop
dec
jp
cmp
lods
jg
pop
stc
inc
scas
push
std
mov
rorl
pop
fwait
add
loope
sbb
js
mov
out
adc
mov
xchg
mov
or
dec
leave
mov
cmp
jno
mov
out
mov
jnp
push
fnstcw
mov
sbb
xlat
mov
out
dec
xor
jno
add
jl
mov
xlat
ja
imul
inc
jno
add
pop
push
and
fdivs
inc
rcll
int
xchg
fstpt
lods
cltd
mov
adc
mov
or
ja
cmp
push
push
sub
bound
cmp
mov
ss
enter
dec
or
and
popf
xchg
addb
push
mov
sub
loopne
arpl
xchg
cmp
mov
cmc
popl
out
jge
or
adc
mov
inc
cmp
fmull
aad
mov
out
mov
fs
sbb
pop
push
gs
and
repz
addr16
dec
sbb
push
lretw
mov
add
inc
test
xchg
xchg
dec
cmp
dec
icebp
mov
lret
mov
mov
int3
pop
and
test
cmpsb
jle
ljmp
rcl
test
mov
into
dec
test
sbb
adc
adc
in
adc
and
push
jmp
daa
mov
xor
int
cmp
ja
cmp
arpl
mov
or
mov
imul
insl
cmp
jmp
pop
stc
gs
pop
fucom
fs
or
mov
in
pop
mov
xor
aam
sub
ret
sbbb
lock
jo
shl
mov
pop
inc
pop
xchg
xchg
jbe
rclb
xor
pusha
mov
rclb
lods
pop
arpl
cmc
mov
imull
or
mov
lcall
and
cmpsl
call
push
xor
pop
or
add
cmp
push
fs
dec
xor
or
xchg
xor
adcl
mov
ljmp
loope
ss
cmp
stc
addl
fstpt
jp
roll
pusha
mov
gs
push
add
add
das
inc
mov
and
insb
mov
xor
inc
fwait
pushf
in
ja
push
popa
or
repnz
jle
inc
cli
ficompl
xor
mov
xor
mov
lcall
outsl
sbb
les
fisubs
mov
push
mov
test
cmp
stc
ret
call
or
mov
mov
inc
repnz
cmp
das
in
scas
mov
push
leave
aaa
sbbl
pop
test
negb
pusha
scas
mov
jmpw
clc
xchg
cmp
lret
push
leave
gs
add
jae
in
negb
push
cmpsl
push
scas
fs
xchg
cltd
mov
xor
sub
jmp
scas
scas
in
add
ss
pusha
ficomps
shlb
test
dec
xchg
sub
fists
loope
aas
mov
nop
lods
xor
xlat
test
adc
shll
xor
add
inc
adc
xchg
lahf
sbbl
out
rclb
std
add
add
inc
cwtl
xchg
mov
add
outsb
bound
xor
cmp
sbb
jb
fadds
cltd
test
mov
test
push
xor
test
fistpll
lret
xchg
cmp
push
push
mov
mov
adc
inc
xchg
cld
in
sub
das
sahf
add
cli
mov
in
pop
mov
daa
in
aad
icebp
dec
fsts
shrl
cs
push
inc
ja
call
add
or
pop
dec
mov
aas
cmp
sbb
pop
pusha
jns
pop
cs
aad
jbe
pop
repnz
cmp
cmp
je
jae
jns
inc
lods
stc
cmp
adc
std
xchg
test
lret
inc
xlat
add
call
xor
mov
inc
xchg
add
into
insl
or
das
andl
lret
test
mov
mov
mov
pop
leave
bound
pop
loopne
scas
adc
movsl
movsb
outsl
jl
dec
ds
or
ret
and
adc
ret
xor
add
iret
dec
gs
sbb
xchg
xor
out
lret
loop
pusha
cmpsb
jle
frstor
mov
adc
mov
jl
sbb
jge
movsb
or
dec
movsb
imul
push
fcomip
mov
xchg
sti
icebp
test
sbb
sub
outsb
push
sbb
ret
push
inc
scas
sub
and
ja
cwtl
mov
or
and
pop
xchg
add
stos
dec
data16
leave
repz
xchg
nop
jo
add
xor
xor
jb
ljmp
adc
pop
xchg
cld
rolb
sub
lret
push
jp
pop
push
test
fldenv
mov
cmpl
js
mov
or
push
les
jb
fstpl
push
jmp
adc
ror
dec
fstpt
pop
adcl
jns
out
icebp
mov
loop
mov
dec
in
push
pop
cmp
mov
outsb
push
je
in
add
mov
loop
cwtl
pop
stos
enter
ror
sbb
xchg
cmp
add
ljmp
in
add
out
sub
pop
loop
pop
pop
xor
fidivrs
test
mov
sbb
and
out
or
popf
mov
stos
cmp
inc
push
adc
or
bound
mov
xchg
adc
cmp
or
out
add
cmp
sbb
mov
psubd
outsl
pop
aam
add
iret
sub
sahf
lds
data16
out
ja
push
rolb
scas
jb
jl
test
dec
ds
xchg
push
dec
ljmp
sarb
imul
fadds
es
test
inc
dec
roll
rcrl
iret
ljmp
imul
cmp
leave
dec
mull
int3
push
jns
jb
jb
in
mov
mov
adc
dec
loopne
xorl
not
bound
pop
lds
push
fimuls
pusha
lcall
cmp
jge
adc
sahf
and
les
or
mov
inc
outsl
fistps
mov
mov
lods
rorb
sub
xchg
add
fimull
push
leave
mov
arpl
call
mov
lea
rolb
xor
scas
sub
cld
iret
xor
stos
xchg
fmul
popf
movl
addb
pop
inc
sbb
adc
jb
shll
lods
outsl
sarb
jnp
push
pushf
int
and
xor
inc
iret
push
dec
and
outsl
loopne
jge
dec
or
push
push
mov
push
mov
or
jbe
cmpsl
adc
sbbl
pop
inc
xchg
push
dec
add
fdivl
sub
jl
xor
pop
cmp
outsb
lods
mov
jo
into
xchg
add
gs
or
sbb
jns
mov
sbb
popf
pop
sbb
gs
enter
or
xor
inc
lcall
iret
test
dec
mov
adc
ficomps
add
pop
sub
dec
jns
mov
adc
cmp
adc
xchg
aam
pushf
idiv
adc
imul
loop
adc
and
or
and
add
inc
shlb
xor
and
ja
scas
scas
inc
test
or
nop
out
push
inc
rcll
cltd
push
xor
inc
xor
xorl
orb
ret
sub
test
test
cmp
call
dec
js
add
aad
xchg
addb
xorl
lods
clc
xor
push
cwtl
push
dec
movsb
mov
add
jbe
fstpt
inc
mov
sahf
scas
adc
xorb
inc
mov
das
repz
shr
arpl
sbb
pop
dec
imul
mov
inc
std
lods
fstps
jo
stos
test
push
testl
pop
cmp
cmc
sub
out
scas
mov
ror
push
cmpb
pushf
mov
jmp
or
es
idivb
inc
adc
scas
mov
test
lret
add
popf
sbb
push
sbb
icebp
pop
mov
or
lds
jno
jecxz
or
aad
test
push
jp
inc
mov
inc
popf
lds
or
fs
pusha
lods
mov
ljmp
scas
fnstenv
outsb
hlt
mov
mov
movsl
push
xchg
aaa
xor
sbb
mov
out
and
and
std
mov
dec
inc
mov
adc
das
sub
mov
add
push
add
ret
sbb
in
push
jne
sub
dec
cmpsl
mov
lcall
or
test
insl
jb
inc
push
imul
mov
shll
mov
xor
mulb
mov
adc
cs
lret
fcoml
in
cmpsb
test
fsts
scas
clc
popf
push
out
imulb
dec
mov
gs
dec
cmp
pop
and
pop
mov
cmpb
add
push
movsb
out
das
mov
pop
sub
sti
xor
daa
and
es
xchg
jne
call
loopne,pn
dec
sub
hlt
rcrl
fsub
mov
lock
mov
adcl
dec
inc
jo
mov
hlt
fwait
stc
push
repz
mov
aaa
pop
negl
xchg
cmp
arpl
bound
sub
push
mov
repz
mov
lret
sbb
mov
fisubs
ja
stos
jbe
notb
xchg
test
pop
fdivrl
ds
jbe
in
cld
inc
loop
arpl
mov
cli
xchg
lret
stos
push
xor
pusha
jg
push
mov
push
sbb
pop
dec
lock
dec
push
push
es
fdivrp
pop
dec
bound
dec
mov
test
lahf
sbb
xchg
movsl
cmp
js
cmc
jno
mov
es
jge
add
lock
cwtl
and
xor
inc
lds
sahf
jbe
test
adc
jecxz
mov
popa
andl
dec
jae
dec
addl
mov
push
hlt
jnp
aaa
dec
pop
and
mov
aaa
mov
push
mov
js
and
pop
imul
and
aam
inc
jbe
out
cmp
mov
es
adc
lock
xor
icebp
and
pusha
aas
adc
add
nop
mov
or
inc
test
lret
jmp
shrb
rcrl
jmp
xchg
mov
aad
pop
mov
inc
sub
and
mov
enter
xor
push
sbb
rorb
fidivs
mov
pop
inc
inc
cmp
mov
out
mov
sbb
stos
jge
or
jge
mov
cli
popa
push
out
sbb
push
repz
mov
shll
mov
xor
int
cs
jno
add
push
mov
lods
jg
loope
addb
stos
pop
bound
xor
std
in
pusha
or
jle
xchg
sbb
in
sub
ljmp
add
test
hlt
fsts
dec
pop
lcall
fisttpl
cmp
xor
jp
fisubl
cmp
dec
mov
cwtl
add
aas
mul
stos
inc
fdiv
nop
jae
add
xchg
cmp
int3
jge
repz
xchg
fistpll
imull
mov
cmp
in
ret
sub
insb
sbb
sbb
xorl
or
jg
pop
dec
add
rcll
cmpsb
shrl
adc
imul
adc
rorl
mov
aad
aam
out
test
stos
fildll
sbb
imul
into
fcoms
dec
sbb
lds
xor
in
ss
test
ret
loope
int
sbb
inc
frstor
pop
incl
mov
sti
in
cmpsl
shrb
movsb
lods
out
nop
sbb
test
inc
xchg
popa
xor
cld
out
mov
mov
and
mov
ss
sbb
push
outsb
ljmp
adcb
mov
into
push
jae
mov
fimull
push
adc
mov
scas
iret
int3
pop
repz
and
xchg
xor
and
pop
pop
sbb
push
jns
scas
jg
in
repz
or
push
push
dec
mov
cmpsl
add
ja
xor
add
mov
cmp
mov
outsl
ds
int3
cmpsl
adc
mov
and
pushl
xor
repz
loope
int3
setbe
imul
idivl
xchg
nop
xchg
lret
mov
and
int
pop
sbb
mov
dec
push
mov
xchg
mov
iret
stos
call
and
cmpsb
jmp
sbb
inc
xlat
clc
dec
push
xor
inc
sbb
test
adc
jne
fisubs
fldcw
cmp
data16
xor
scas
sub
add
push
das
sub
jnp
shlb
gs
shlb
pop
sub
mov
pop
or
push
fs
ss
jmp
cmp
xor
rcll
cmp
pushf
dec
stos
sub
xchg
jns
aad
sbb
arpl
xor
adc
push
sub
scas
pop
inc
jns
xchg
xor
xchg
push
inc
enter
and
sbb
fimull
cmpsl
dec
mov
jle
bound
sarb
insl
and
inc
in
gs
add
test
xchg
imul
icebp
jp
xchg
xchg
add
aas
test
jmp
push
add
cmp
adc
in
movsl
daa
ret
ljmp
and
cpuid
in
arpl
insl
adc
imul
pop
xor
loopne
inc
xor
sub
cmp
leave
or
adc
push
es
inc
imul
push
xchg
rcrl
mov
fsubrl
mov
enter
clc
sub
test
scas
insl
arpl
pop
push
mov
sbb
push
add
pop
push
filds
int
jg
cmc
stos
adc
ret
movsl
rorb
jb
les
ja
mov
jg
lods
shl
cmp
mov
and
in
pop
sub
lock
sahf
mov
stos
mov
sub
stos
mov
cmp
mov
mov
cmp
mov
rorl
mov
int
mov
fstp
lcall
jo
idivl
and
test
and
inc
jns
jns
dec
inc
lea
shll
movsl
es
sub
xchg
cmp
fldenv
jno
enter
ja
xor
cmp
xor
stos
nop
jb
push
aas
push
inc
mov
fdivrs
in
xlat
decb
inc
sub
repz
test
lret
lret
in
cs
adc
dec
push
mov
lahf
pop
mov
pushf
xchg
repz
xchg
and
test
in
popa
push
scas
stos
cmp
and
xchg
jecxz
mov
jmp
pusha
nop
inc
arpl
adc
testl
mov
pushf
lock
adc
dec
stos
xchg
inc
ljmp
daa
stos
inc
adc
cmp
call
sbb
rorb
insl
mov
jle
insb
push
xor
rol
out
loope
test
dec
scas
js
mov
mov
or
jb
sub
ljmp
mov
mov
xor
mov
dec
subl
sub
xchg
and
push
sti
or
dec
bound
pop
lcall
call
cmc
mov
add
inc
jo
rclb
adc
push
test
popf
int
sbb
fisubs
lret
in
xor
pop
stc
add
dec
mov
sbb
add
inc
jne
fwait
andb
sub
out
hlt
ret
neg
and
pop
push
pop
sbb
jnp
ljmp
mov
insb
add
adc
pop
ljmp
add
jb
daa
jecxz
mov
xor
aam
cld
pop
shlb
or
sub
call
clc
push
mov
mov
cmp
lcall
adc
mov
mov
dec
jno
mov
lock
inc
aaa
and
jg
inc
sub
sti
scas
pusha
or
mov
xchg
scas
es
dec
push
add
jge
rcl
mov
jnp
adc
lahf
clc
cs
jb
test
stos
ret
jecxz
fwait
ret
std
and
ret
dec
jae
cld
fsubrs
mov
mov
aam
push
pop
push
lret
vpor
push
xchg
sarl
test
xor
pop
bound
add
fcmovb
js
ret
incb
out
out
pop
and
jl
fistpl
js
imul
xchg
push
fnstcw
mov
mov
lcall
aas
jbe
dec
in
add
mov
test
imul
push
sub
gs
iret
aas
jb
or
xor
mov
incb
ret
lret
inc
adc
out
dec
inc
cmp
xor
negl
imulb
cmpsl
jg
lret
into
pushf
fimuls
xor
fxch
out
sahf
pop
rcrb
sub
les
sub
shrl
dec
in
xchg
movsl
int3
in
mov
mov
std
lret
outsl
or
aad
imul
inc
iret
shlb
mov
adc
and
mov
imul
fdivs
mov
cmp
mov
mov
dec
and
test
lock
rclb
sbb
sbbb
movsb
inc
rclb
and
and
mov
mov
pop
xlat
push
out
nop
in
loop
mov
xlat
int3
es
lds
dec
and
jne
iret
aam
outsl
mov
and
daa
xor
cli
pushf
sub
outsl
mov
scas
mov
loope
jns
out
rorl
adc
iret
sub
mov
or
insb
aaa
mov
lds
mov
in
dec
mov
pop
jo
in
rolb
sbb
add
mov
push
jae
inc
flds
xchg
xchg
push
cmp
adc
out
cmc
lcall
rol
xor
imul
imul
sti
loope
shrb
push
inc
and
jl
inc
mov
pusha
cld
cmp
faddl
fisttps
daa
mov
lret
jbe
inc
test
fadds
inc
icebp
jo
xor
ljmp
mov
lahf
js
add
pop
mov
adc
dec
bound
lret
loope
mov
dec
stos
jno
decl
cmpsb
push
in
and
adc
shlb
repz
es
xor
cmpsb
mov
movsb
push
sbb
popf
out
test
ljmp
mov
xchg
lcall
jle
sub
insb
insw
sub
ja
jp
sbb
adc
inc
inc
stc
movsb
mov
shlb
clc
test
add
rorb
sbb
ret
js
jp
lcall
sbb
out
jno
in
insb
mov
xor
cmp
pop
mov
lahf
pop
xor
xor
mov
pushf
imul
int3
ja
ret
adcb
push
xorl
inc
mov
loope
pop
mov
sub
mov
addb
xchg
test
cs
and
pop
xor
aas
inc
fstpl
std
jecxz
pop
mov
out
jge
mov
insb
mov
cmp
mov
fs
int
into
dec
xor
stc
fiadds
mov
and
cmp
push
xor
cmp
je
imul
rcrl
push
lcall
xor
mov
imul
jecxz
into
fwait
cwtl
dec
clc
test
mov
push
push
inc
loop
mov
pop
mov
nop
rolb
jg
adc
hlt
sbb
js
call
aad
scas
or
xor
pop
pop
in
jno
outsb
mov
pop
jbe
cmp
fstpt
xchg
sub
or
and
push
inc
adc
repz
flds
pop
insb
sahf
push
pop
xchg
loopne
fcmovb
inc
or
stos
movsl
testl
pushf
and
jp
cmpb
mov
insl
call
jge
data16
push
out
xor
sbb
add
mov
mov
aad
mov
int3
cmp
js
in
xchg
pushf
mov
movsl
sub
outsl
test
jnp
adc
jecxz
xchg
out
dec
je
dec
pop
aas
aaa
fldcw
mov
lods
jns
addr16
xor
and
mov
cld
daa
lret
mov
xchg
mov
jecxz
or
shll
push
iret
mov
aas
js
push
test
cmp
lock
arpl
adc
or
sub
arpl
xchg
ret
das
fnsave
jb
dec
jle
call
movsb
xchg
jne
lret
out
mov
ret
dec
push
cmp
push
out
pop
add
mov
push
fdivrs
jge
ret
add
pushf
fcoml
lds
stos
clc
jbe
mov
movsb
add
subl
test
mov
push
pop
cmpsb
ss
mov
std
test
insl
lods
or
pop
adc
out
mov
pshufw
hlt
imul
icebp
int3
imulb
jge
ds
ss
or
mov
mov
and
je
ja
ljmp
jle
inc
iret
and
cmp
adc
cli
and
shll
xchg
add
inc
loopne
lods
xchg
fs
std
mov
mov
xor
dec
sti
jnp
lods
popa
mov
les
data16
push
fwait
mov
leave
in
imull
dec
xchg
jge
cmpsb
add
jge
inc
pop
push
leave
test
test
out
mov
mov
clc
jl
movsb
nop
adc
mov
push
lods
adc
and
mov
andb
outsb
mov
pushf
sub
movsl
add
int
mov
ret
sub
mov
mov
mov
gs
jp
sbb
mov
test
push
out
in
fistpll
pop
mov
sub
movsl
dec
mov
out
pop
popf
dec
inc
icebp
adc
add
inc
int3
ds
mov
std
subb
scas
mov
jmp
or
ret
and
cmp
fdivrs
loopne
int
jbe
inc
pop
mov
decl
or
mov
in
andb
cwtl
push
fisttps
dec
pushf
sti
scas
int3
outsl
mov
movsl
outsl
rorb
mov
leave
fdivs
dec
inc
add
push
adc
push
add
dec
adc
out
fwait
out
movsb
adc
test
call
xchg
iret
push
fldt
or
add
lods
js
inc
xchg
daa
add
dec
scas
jmp
push
or
push
fisttpll
test
sbb
and
es
rol
pop
cmp
jmp
int
shr
cltd
faddl
lret
imull
sbb
stc
stc
sbb
movsb
pusha
xchg
icebp
out
sub
out
xchg
cmp
xchg
pop
mov
push
jg
cld
mov
fistpll
dec
cmp
ret
cli
es
and
ss
lea
xchg
add
lock
push
leave
movsb
leave
inc
lea
out
pop
out
hlt
xchg
xor
pop
and
xchg
stos
dec
leave
xchg
je
xchg
jge
jns
ss
cmp
inc
lea
cmp
push
mov
cmpb
fcoml
rol
lea
mov
js
push
cwtl
jno
add
adc
es
jl
jp
push
push
jb
cli
in
arpl
into
mov
iret
jmp
and
and
push
aam
cmp
adc
pushf
push
mov
mov
xorb
popa
movsb
push
fldpi
scas
pushf
mov
inc
ja
mov
xchg
mov
sub
jge
ljmp
pop
fiadds
add
cmc
cli
mov
stos
cwtl
push
std
inc
mov
dec
push
pop
insb
enter
dec
fisubrs
push
sub
sub
sahf
iret
or
jnp
fs
lret
aad
xchg
or
push
add
out
push
xor
ret
je
xor
cmc
jae
in
pop
pop
ds
inc
mov
or
xchg
out
adc
loop
repnz
pop
fisttpll
rorl
push
jnp
movsl
repnz
loop
jp
testb
pop
dec
iret
xchg
jno
xor
push
jp
inc
aam
movsb
outsb
mov
push
inc
notl
cmpsb
gs
inc
mov
mov
lahf
adc
push
jg
pop
in
addr16
jecxz
mov
es
pop
fs
shl
mov
add
clc
cmp
aam
dec
pop
xchg
lret
mov
mov
sysret
addr16
xchg
or
mov
push
cmp
fstpt
jp
mov
repnz
sbb
mov
sub
xchg
sbb
inc
pop
pop
out
add
les
mov
cmp
rclb
orb
and
push
inc
add
pusha
aaa
out
dec
enter
mov
mov
dec
das
in
cmp
sbb
cmpsb
add
mov
rclb
xchg
iret
xor
pop
ja
xor
callw
inc
lcall
sarl
fiaddl
cmpsl
insb
imul
jg,pt
dec
rorb
dec
sub
loop
nop
ret
loop
mov
dec
xchg
push
xor
out
xor
orb
int
lahf
sbb
push
push
ja
jle,pn
pop
push
push
inc
sub
call
cmp
cmp
stos
inc
mov
sarl
adc
inc
leave
lds
scas
mov
das
je
push
movsl
cmp
shlb
xor
pop
lret
sbbl
adc
cmpsl
fcoml
pop
mov
cmp
and
cmp
lds
inc
dec
into
leave
jle
or
loope
mov
js
sub
in
int3
mov
mov
push
mov
mov
xor
sbb
lea
orl
leave
mov
jbe
pop
xor
pop
popf
or
or
mov
aad
outsb
inc
inc
add
loope
push
or
lock
movsl
pusha
imul
xchg
mov
push
pop
imul
insb
pushf
cmp
movsl
mov
in
mov
iret
jb
sahf
push
push
sub
or
ret
cmpsb
stos
or
pop
mov
jne
mov
cmp
xchg
hlt
sub
xchg
pop
xchg
xor
aaa
and
les
and
mov
mov
pusha
push
mov
inc
inc
mov
xchg
push
xchg
sub
sar
xlat
mov
jl
sub
adc
jp
mov
adc
cwtl
sbb
cs
mov
fisttpll
mov
cmp
dec
cmp
lret
mov
xchg
mov
mov
insb
dec
add
jecxz
jle
arpl
push
mov
scas
mov
fldt
shll
roll
icebp
adc
cmpsl
pushf
bound
das
mov
in
in
xorb
push
mov
or
lods
cwtl
inc
sub
int
lods
xchg
mov
icebp
cwtl
notl
mov
js
xchg
pop
xchg
jns
or
jge
mov
cmc
movsl
enter
es
dec
jo
pop
jle
adc
push
mov
int3
mov
sbb
pop
ds
iret
daa
adc
sub
lret
inc
pop
outsl
test
repz
repz
inc
pop
hlt
xchg
push
push
mov
jns
push
outsl
push
fimuls
xchg
gs
movsb
lcall
pop
test
jmp
push
sub
cmpsl
nop
rcr
inc
add
jns
out
pop
ret
imul
mov
mov
xchg
jnp
mov
mov
shll
insl
mov
fadds
mov
negb
cmc
inc
aas
mov
js
xchg
pop
pop
mov
push
repnz
lcall
push
sbb
in
pop
mov
movl
push
add
mov
push
adc
dec
notb
mov
adc
arpl
push
repnz
add
ja
sub
mov
adc
ljmp
push
pop
and
outsl
pushf
sub
or
dec
mov
jns
cld
or
popf
sahf
push
stc
ror
test
int3
jns
or
gs
dec
mov
mov
sub
push
cltd
cs
fcom
pusha
inc
addr16
xchg
xor
jo
lock
mov
fsubrp
fs
inc
sahf
sar
loope
mov
add
adc
mov
scas
push
cmp
enter
adc
inc
addw
je
cmpsl
shll
push
std
mov
subl
insb
shll
mov
out
xchg
test
inc
xchg
pop
out
cmp
xlat
push
push
mov
pop
xorb
push
sub
imul
and
fwait
cmp
scas
inc
mov
pop
in
in
jne
data16
sbb
mov
and
jge
xor
sbb
inc
outsb
and
fsub
icebp
nop
sbb
clc
sbb
nop
mov
mov
or
cli
mov
jno
out
push
push
or
roll
inc
popl
push
mov
movsb
pop
dec
push
inc
jb
xchg
and
sub
cmp
xor
aaa
mov
push
enter
push
jae
sub
arpl
inc
jmp
fistpll
jge
hlt
iret
xchg
in
shlb
and
jmp
movl
or
insl
jmp
imul
enter
lea
dec
ret
adc
aam
inc
in
mov
std
or
fs
pop
bound
int3
outsl
popf
jo
jmp
in
add
shll
push
mov
xchg
incl
xchg
xchg
adc
scas
rorl
sti
test
lock
push
xchg
sahf
and
iret
test
clc
dec
cmpb
arpl
or
testb
lret
insl
xchg
cli
adc
adc
insl
clc
adc
jnp
push
icebp
ljmp
xor
inc
shrb
loopne
pop
setb
in
xchg
stos
fbld
mov
dec
in
dec
loope
ret
in
sbb
test
cmp
mov
or
xchg
lea
dec
lcall
dec
lock
mov
lods
add
and
scas
in
sub
addr16
sbb
mov
test
jne
dec
in
hlt
sub
sub
mov
mov
sub
xchg
test
mov
into
mov
clc
popa
mov
enter
pextrw
mov
or
sti
jle
ret
xor
jns
cltd
pop
pop
jp
xor
scas
aam
lret
push
faddl
aaa
or
sub
lods
sahf
push
and
push
mov
leave
pushf
mulb
adc
imul
ss
jle
movsl
cs
out
mov
and
cmpsl
les
pop
mov
pop
icebp
mov
mov
daa
inc
aad
adc
fstpt
lods
in
bound
lods
sub
outsb
xor
inc
lds
rorl
out
cltd
xchg
and
insl
test
mov
or
test
fwait
loop
stos
nop
fldl
inc
sub
xchg
mov
cmpsb
cmp
cli
push
enter
pop
adc
js
in
fldenv
or
xor
mov
nop
je
inc
dec
sbb
stos
sub
pop
clc
xchg
int3
jbe
insb
aaa
mov
ret
and
bound
pop
dec
lock
aas
mov
leave
jge
mov
mov
notb
cmp
jmp
xchg
push
jnp
xchg
lock
loope
dec
out
xchg
mov
pop
outsl
jns
push
xor
cmpsb
and
cli
jne
xchg
xchg
lods
fdiv
cmp
push
ret
push
cmp
mov
mov
pop
jne
test
adc
jae
mov
cmpl
fbld
add
and
xchg
adc
rorl
sbb
fidivrl
pop
movsb
mov
popf
cwtl
cld
add
sub
and
mov
in
clc
enter
cmpl
pop
ror
fsub
pop
dec
push
or
and
fbstp
push
cwtl
mov
cs
inc
xchg
int
mov
fyl2x
int
xchg
mov
push
leave
cmp
mov
insl
iret
cmp
adc
cmp
in
aad
cwtl
frstor
gs
ret
cmp
sbb
or
sbb
push
sub
adc
xchg
mov
xor
loope
gs
sarl
jae
add
out
xchg
icebp
mov
test
fldl
iret
mov
jmp
jb
mov
push
mov
push
insb
jb
sbbb
inc
xor
mov
mov
mov
arpl
shll
syscall
cwtl
xchg
insl
adc
aad
test
loopne
in
adc
orl
fistl
mov
lcall
mov
sti
xor
sbbb
lea
ret
js
xlat
nop
in
cmp
add
je
daa
stc
or
add
inc
xchg
jle
lock
sub
mov
jp
jns
out
rcr
sti
pop
inc
imul
mov
fsubr
and
jae
nop
jne
jg
mov
adc
push
push
sbb
xchg
pop
notb
mov
or
inc
adc
in
jne
testl
jecxz
lcall
inc
test
dec
aam
inc
shll
xchg
adc
xchg
fwait
pop
sub
jmp
pop
out
pop
jbe
or
jle
out
jmp
pop
push
je
fldcw
xchg
call
push
sbb
in
sub
loop
xchg
sarb
jmp
push
std
jno
jne
repnz
and
insl
xchg
xchg
mov
cmpsl
out
mov
lds
jmp
inc
fildl
xlat
inc
hlt
scas
sbb
repz
loop
test
jge
mov
out
push
inc
mov
cmp
cmpsl
loopne
ljmp
leave
mov
jno
mov
dec
mov
sub
shlb
or
mov
repnz
add
lods
aas
mov
jp
addr16
fdivs
mov
or
add
cmp
jnp
sub
insl
aad
icebp
test
inc
imul
push
fwait
arpl
aam
inc
mov
decb
add
sbb
pop
ja
cwtl
sti
dec
stos
push
fwait
fs
in
iret
ja
sbb
cmp
fs
sbb
fnstenv
or
lret
dec
sub
mov
jno
push
push
sbb
inc
jnp
jbe
cmp
imul
adc
lret
pop
fs
outsl
fcmovb
das
lcall
mov
jmp
and
sbb
xor
push
xor
adc
aaa
out
mov
insb
add
xchg
test
aam
es
aad
insb
inc
mov
fcmovnb
cmpsb
mov
sub
push
fmull
dec
jecxz
push
int
push
addl
and
xorb
xchg
sbb
dec
stc
fidivrl
pushf
jno
ljmp
in
xchg
fldt
mov
inc
jb
mov
cmc
clc
inc
lds
and
add
mov
and
xchg
lret
test
mov
mov
iret
test
stos
loopne
fcoml
sti
pop
lods
ss
cmc
add
mov
mov
mov
loopne
call
mov
insb
push
push
and
bound
jne
out
es
out
jae
das
mov
int
std
jmp
jg
jg
jmp
imul
and
lods
cmp
std
jne
sub
mov
subl
mov
push
ja
jnp
jns
and
lock
mov
ret
addr16
insl
leave
cld
and
fwait
jne
insb
sub
pop
inc
jne
xchg
stc
movsl
push
jle
jl
add
mov
orl
pop
pop
pop
aas
out
mov
movsl
jno
sub
or
inc
dec
cmp
and
lock
orl
and
or
jle
jecxz
notb
mov
movsl
js
or
add
stos
mov
in
lcall
push
ficoml
pop
ret
and
aad
jl
hlt
lcall
int
inc
adc
lahf
adc
fimull
js
stc
jmp
insb
cmp
int3
dec
movsb
divl
jle
sub
dec
clc
out
jo
sbb
je
push
lods
sbb
mov
bound
mov
or
ss
imul
cmp
xor
stos
in
inc
pop
jmp
leave
fdivrl
rcll
jg
std
test
in
scas
call
sahf
mov
jmp
sbb
dec
fwait
mov
stc
js
popf
or
jg
mov
add
ss
cwtl
jmp
pop
inc
add
in
int
fsubp
jb
mov
testb
ss
icebp
leave
ror
adc
adc
popa
xor
push
sub
dec
ret
jno
push
add
or
clc
pop
movsl
mov
cmp
dec
outsl
outsb
pusha
insl
jmp
sub
cmpl
sbb
xchg
mov
das
xchg
mov
rdtsc
xchg
nop
xor
mov
pop
popa
xchg
and
jo
lods
cmp
push
aad
scas
mov
push
jnp
fwait
stos
psraw
shlb
push
xor
cmp
xchg
popf
popf
popf
xor
xchg
ds
std
aad
or
add
cs
icebp
jmp
test
push
loopne
xor
sahf
mov
loop
mov
push
sbb
xchg
incl
and
das
mov
loop
lods
inc
mov
or
gs
test
xchg
jnp
mov
push
inc
mov
insb
dec
inc
pop
cmp
push
ss
mov
sbb
int3
mov
cmp
bound
or
test
mov
stos
mov
push
adcl
add
cmp
jns
mov
xchg
dec
mov
push
xchg
cmpsb
jg
pop
das
outsb
je
push
pusha
dec
sub
mov
dec
clc
add
xor
jmp
orb
imul
test
decl
sbb
jb
jge
adc
sub
std
or
addr16
and
ds
inc
sub
sbbl
dec
sti
rcrl
pushf
fisubl
inc
mov
dec
cmpsl
and
dec
xor
sub
test
sarb
or
xor
out
test
sti
xor
pusha
fsubp
adc
ret
lods
loop
jmp
cmpsl
add
push
add
sub
push
mov
cltd
pop
and
pop
repz
popf
pop
nop
jno
push
cmpsl
jno
test
xchg
mov
out
sub
inc
aas
mov
test
mov
dec
jns
arpl
mov
fwait
mov
js
pop
jmp
cld
mov
rorl
aas
imul
xchg
lcall
js
inc
push
inc
les
sbb
test
out
leave
xor
out
shlb
cmp
hlt
pop
imul
sub
dec
or
lret
xor
imul
test
mov
push
mov
xchg
or
xchg
aam
xchg
fcmovu
cwtl
dec
imul
sbb
insb
jne
mov
or
mov
repz
stos
or
adc
xchg
push
test
lods
cwtl
dec
cld
fdivl
outsb
loopne
pop
imul
xor
mov
faddl
mov
repz
mov
pop
fldl
faddl
adc
jbe
icebp
jb
out
ds
xor
dec
nop
sbb
push
xor
cmp
mov
jmp
rcll
cmp
adc
loope
lahf
xchg
add
aad
dec
push
mov
loope
ss
lret
mov
call
pop
mov
int
ds
in
iret
aam
mov
cwtl
bnd
inc
arpl
lea
dec
mov
in
mov
add
mov
push
xor
or
mov
movsl
lret
lret
call
mov
fisubrl
sub
sti
insb
mov
repz
das
push
xlat
lret
shll
hlt
and
push
jge
mov
sbb
and
sti
stos
call
cmp
or
mov
adc
lret
add
inc
mov
test
mov
popf
pop
mov
stos
mov
aam
or
mov
xchg
loop
fisttpl
or
mov
fdivrs
ret
lret
ret
adc
enter
je
mov
popa
inc
or
inc
xchg
scas
aam
fwait
pop
hlt
lcall
jo
cmp
adc
test
jg
pop
xchg
sbb
mov
mov
cltd
arpl
arpl
push
add
call
test
iret
inc
fsubrl
inc
xchg
ret
mov
xchg
mov
push
xchg
cmp
lods
or
add
pop
pop
or
in
test
mov
pop
rcl
pop
jnp
jle
xchg
and
mov
cli
cld
xor
mov
add
idivl
xchg
int
fwait
mov
test
push
cwtl
jne
push
inc
cli
jno
mov
push
mov
bound
jmp
sbbb
mov
push
add
lret
xor
add
popf
adc
mov
imul
inc
fwait
and
inc
nop
cmp
mov
xchg
sub
push
xor
sbb
das
xchg
test
out
pop
inc
cmpsb
pop
test
pop
mov
mov
xor
addr16
jmp
mov
fsubr
cmpsl
sbbl
roll
mov
sbb
mov
daa
sarb
adcb
push
int3
pop
movsb
inc
fwait
mov
in
inc
fnsave
insb
ds
push
dec
adc
adc
xchg
enter
sbb
pop
cmc
cld
add
outsl
shll
jecxz
bound
enter
xchg
mov
or
lret
popf
ljmp
cmc
xor
xchg
inc
xchg
call
pop
mov
mov
into
sbb
gs
jmp
hlt
or
xor
jb
dec
and
sub
mov
inc
mov
jge
insb
mov
rcrl
enter
insl
jns
idivl
icebp
sbb
and
sub
xor
sbbb
push
scas
es
cmp
pop
mov
dec
inc
jnp
or
hlt
sbb
pop
bound
leave
mov
rol
xor
jb
fucomp
sbb
pop
daa
hlt
ljmp
lret
push
rclb
ljmp
jp
jg
inc
in
scas
vpcmpgtd
pop
cmc
mov
js
xor
imul
mov
notb
mov
inc
or
adc
mov
lods
sub
add
xchg
pop
ss
sbb
mov
sub
pushf
add
mov
fwait
gs
std
idivl
push
jnp
cmpl
aad
mov
mov
pop
adcl
cmp
mov
ss
mov
lea
add
inc
dec
adc
cltd
pop
pushf
cwtl
movsb
into
sti
hlt
loop
and
neg
adc
fs
jae
call
xor
push
pop
xchg
ret
lahf
testl
xor
lret
push
mov
shlb
ja
je
sbb
icebp
and
lcall
sbb
incl
lods
cmp
fsubs
ljmp
out
mov
cmpsl
fcoml
pop
ret
push
leave
aas
sub
stc
mov
push
dec
xor
pop
or
xchg
in
xchg
loop
fisubrs
mov
fwait
daa
mov
ror
mov
jl
add
dec
lcall
push
pop
sti
andl
push
stc
xor
int
daa
cmc
rolb
xor
shlb
ret
in
cmp
xor
xchg
rcrl
add
cli
xchg
fcoms
cmp
das
dec
stc
ret
fistl
roll
pop
mov
outsl
adc
es
mov
sbb
pop
mov
lcall
xchg
add
fs
cld
xchg
jns
push
jae
imul
push
icebp
je
cmc
xchg
fcmovu
arpl
jmp
adc
cwtl
les
sub
sub
call
mov
push
loope
inc
jnp
fs
and
jae
insl
orb
xor
ljmp
ret
xchg
push
mov
lret
pop
movsb
test
and
addl
pop
idivl
jle
test
xchg
cmpsb
pop
pop
enter
je
mov
outsl
and
jns
insb
dec
adc
mov
jne
hlt
fndisi(8087
pop
out
mov
outsb
stc
jno
jp
loopne
push
jae
add
xchg
xor
mov
inc
int
xchg
mov
xchg
cmp
nop
fstl
out
inc
and
sbb
xchg
and
xorb
jmp
jo
mov
lea
arpl
lret
sti
insl
fistpl
out
xor
popa
add
stos
out
pop
rcl
xor
sti
test
les
pop
inc
sbb
inc
push
das
pop
adc
fcmovne
adc
leave
add
sar
sbb
cmp
imul
dec
insl
jae
popl
rcrb
into
push
rorl
test
jo
mov
xor
xor
out
movsb
pop
test
push
aas
lods
push
aad
mov
push
inc
push
push
cmc
mov
daa
jg
dec
jp
dec
mov
lcall
mov
jmp
add
add
scas
repnz
mov
or
data16
stos
or
jge
jle
popa
movsb
stos
or
push
lock
cmp
inc
loopne
pushf
ret
cmpsl
scas
icebp
bound
in
sub
loop
sub
inc
ds
movsl
add
shrl
xor
cltd
dec
add
dec
lea
jnp
and
mov
pop
pushf
and
inc
sbb
fwait
cmpl
push
cmp
js
xchg
push
aaa
lods
ret
inc
aad
sbb
negb
in
mov
into
test
fsubrs
into
jo
mov
outsl
lcall
jle
add
in
dec
sbb
mov
add
aam
pushf
xor
stos
mulb
popf
lea
insb
mov
pop
jne
pop
inc
ljmp
dec
outsb
cmp
nop
out
xlat
inc
ds
adc
mov
aam
nop
leave
bswap
cld
gs
pop
nop
mov
and
xor
cmpsb
scas
xchg
mov
dec
xchg
xor
cld
xchg
test
pushf
sarb
in
xor
dec
js
jb
loop
fcomi
push
inc
inc
iret
fdivrs
cmp
sbb
pop
stos
inc
les
movsl
adc
imul
cmp
scas
int
stos
movsl
sbb
sbb
or
cmp
mov
xlat
or
pushf
scas
mov
or
cmp
pop
sub
loopne
dec
xorl
mov
mov
mov
pusha
or
adc
jno
popf
fidivrs
popa
testl
cli
ret
jecxz
inc
pop
sbb
je
xchg
jge
cmpsl
lcall
or
call
imull
mov
jo
dec
outsl
or
mov
lods
into
lods
xchg
mov
loopne
add
cmp
mov
add
inc
add
pop
testl
je
ficompl
mov
push
mov
rol
or
mov
dec
cli
push
or
fiadds
xchg
push
pop
xor
imul
adcb
sub
aam
in
and
push
pop
cwtl
fstpt
lods
je
roll
and
pop
pop
ja
add
pop
pop
ffree
and
pop
mov
popf
ljmp
int
push
test
cld
jmp
aas
pop
mov
das
bound
fstpt
and
lret
cmp
outsl
aaa
mov
mov
out
jbe
cli
cmpsl
lds
sub
shlb
ljmp
pusha
inc
inc
push
scas
mov
std
addb
dec
sbb
loopne
cmp
inc
jb
pop
clc
inc
ds
daa
lock
outsb
out
inc
mov
cmpsl
inc
fldenv
popa
sub
jg
ds
cli
ret
into
push
inc
jae
inc
and
or
push
loopne
clc
pop
scas
popa
scas
insb
jns
jl
out
adc
jb
mov
jb
pop
outsl
jl
andb
pusha
sbb
and
aas
mov
cs
add
mov
mov
je
cltd
push
push
rorl
ret
ror
into
dec
inc
push
das
push
lea
lea
aam
xor
cmp
and
xchg
fdivrl
jae
xchg
cmpsl
ljmp
and
stos
cmc
pop
in
ret
pop
jne
cmc
cmc
cmc
flds
rcl
lds
and
sti
ljmp
sub
orb
into
mov
pop
push
mov
dec
scas
arpl
jbe
fdivs
inc
in
adc
enter
leave
mov
rcll
push
cmp
fidivrl
or
inc
push
test
dec
shrl
lock
push
fwait
xchg
repnz
fcom
dec
ffreep
inc
jno
inc
push
and
mov
and
test
xor
int
lods
mov
xor
cmp
mov
jno
mov
inc
mov
ret
or
mov
push
aad
pop
movsb
ljmp
ss
xchg
scas
addb
data16
cmp
push
sbb
push
jg
mov
or
es
dec
push
lret
in
add
xchg
mov
movsl
mov
inc
icebp
jg
xor
pop
cltd
add
ja
ret
inc
jg
xchg
loopne
cmp
xchg
jae
icebp
loop
or
inc
out
add
mov
inc
and
cmp
xchg
divb
fisubrl
ret
subl
xchg
sbb
outsl
shr
sbb
mov
daa
xor
push
xchg
jg
stc
aas
in
adc
pop
cmpsl
out
shrb
push
test
ds
mov
rorb
stos
ss
sub
push
adc
and
push
orb
cli
xor
mov
push
ret
add
loopne
enter
sub
jns
stc
push
add
xchg
out
sbb
push
mov
popa
stos
in
fistl
mov
xchg
in
in
mov
fdivrs
push
popa
adc
pop
xchg
dec
shr
xchg
jge
dec
call
and
or
or
mov
notl
mov
mov
and
xor
push
xor
cmp
out
shl
jae
mov
and
cmp
out
sbb
jno
aad
dec
jecxz
xchg
or
imul
jecxz
into
cmpsl
adc
jbe
pop
jne
imul
inc
out
loope
add
rorb
sti
movsb
rcll
pop
imul
pusha
insl
pop
iret
push
inc
ret
xor
cmp
mov
jmp
xchg
add
pop
aam
jno
mov
rcl
pusha
pop
mov
push
fwait
mov
daa
scas
cltd
push
or
pop
mov
mov
lds
pop
or
cmp
imul
dec
lods
mov
mov
aaa
inc
xor
sbb
cmpsl
inc
cmp
mov
push
sarl
and
add
push
and
gs
xchg
cwtl
das
mov
lea
fs
pusha
pop
jo
inc
js
arpl
cld
xchg
lock
inc
adc
add
testl
mov
mov
pop
dec
arpl
mov
sub
add
jno
add
xor
lock
cmp
mov
jne
lret
lods
or
pop
or
cmpsl
dec
orb
add
sub
pop
xchg
xchg
gs
lods
jnp
in
int3
xchg
fcomps
lahf
loop
call
mov
and
outsl
sbb
mov
xor
je
pop
mov
arpl
jge
jns
flds
pop
icebp
mov
xchg
inc
clc
xchg
dec
nop
sbb
fistpl
jbe
adc
xchg
sahf
movb
jno
loop
mov
mov
inc
mov
mov
xchg
testb
inc
push
bound
push
lcall
mov
jmp
cmp
xorl
pop
pop
mov
sbb
adc
pop
jecxz
popf
prefetcht0
mov
mov
stc
fst
sbb
mov
lahf
add
dec
jo
mov
stc
test
jle
adc
lret
leave
sarl
dec
lock
pop
enter
cmp
add
int
pop
in
jg
push
adc
arpl
sti
fdivrp
test
dec
mov
cmp
popa
ds
fcmovnb
rorl
inc
inc
or
into
leave
sbbl
inc
out
push
ss
jmp
roll
and
cli
in
into
daa
fcmovne
push
or
push
pop
add
mov
les
mov
mov
fdivs
pop
mov
fiaddl
adc
inc
cmp
test
mov
out
cmp
es
xchg
lret
rcrl
jge
fsubs
dec
jmp
pusha
clc
pcmpgtb
inc
mov
xor
fs
js
adc
cld
jp
push
clc
xor
test
je
dec
push
aad
xlat
jmp
outsb
and
pop
cmp
lods
ja
lret
mov
cmpsl
out
push
inc
pop
leave
call
ss
fsubl
mov
mov
sbb
jp
add
ret
jne
or
jbe
jae
xor
loopnew
mov
mov
jle
sbb
mov
dec
fildll
cmp
xchg
xchg
sub
sbb
sbb
lahf
mov
cltd
repnz
push
mov
gs
call
test
and
out
jg
mov
imul
cmp
and
push
mov
push
in
cmp
or
pop
mov
jb
push
dec
or
test
jae
adc
inc
or
loop
and
int3
dec
out
aaa
mov
xor
inc
or
inc
push
cmp
pop
test
std
popf
jnp
je
adc
leave
scas
or
mov
dec
insl
add
and
aas
rcrb
outsl
jns
rcrb
inc
jmp
fadd
mov
call
xor
xchg
movsl
sarb
cmp
pop
jae
mov
adcl
cmp
es
aas
cmc
and
mov
cmc
push
mov
outsb
mov
lds
mov
imul
adc
fmuls
popf
fadd
or
xor
lret
es
movsl
inc
or
cmp
xor
lret
mov
mov
jnp
fidivrs
cs
jmp
repnz
cmp
arpl
int
lds
jne
jo
xchg
enter
mov
push
dec
cmp
dec
addr16
mov
fwait
inc
xor
mov
inc
movsb
push
and
pushfw
int
shlb
leave
arpl
mov
dec
shl
and
sub
sbb
cli
adc
jp
sub
les
popf
add
clc
sahf
sub
jp
sbb
sub
cmpsb
outsb
lret
xor
sbb
push
das
outsl
jb
dec
fs
sub
adc
pusha
aam
pop
dec
cmp
dec
mov
lods
jno
in
add
cld
call
dec
jo
fldcw
cmpsb
xor
movsb
inc
jecxz
push
xor
leave
adc
fs
pushf
mov
fdivp
repz
test
lcall
add
out
lahf
add
movsl
dec
jecxz
mov
movsl
mov
fsubl
xchg
cmp
cmp
sti
sbb
xchg
rclb
mov
mov
mov
adc
sub
sub
jg
jge
dec
push
stos
jo
push
jb
lcall
jg
and
aad
pop
cvttps2pi
pop
xchg
fiaddl
test
jl
add
dec
pushf
sub
call
dec
sbb
and
or
sub
add
dec
dec
sub
in
arpl
push
outsb
sub
mov
cmp
test
in
lock
pop
mov
xor
pushf
add
outsl
sub
imul
and
into
mov
cli
lock
scas
sub
notb
data16
shlb
sub
and
outsl
mov
ret
pop
mov
insb
cmp
div
cmpsl
mov
cld
out
mov
add
jge
lcall
or
fldenv
fisubs
jmp
mulb
cmpb
aas
popa
bound
dec
rcrb
cs
repz
sub
cmpsl
outsb
decl
lock
xor
iret
or
push
into
rcrb
jb
mov
jo
outsl
icebp
inc
in
dec
cmp
jo
mov
push
mov
pop
int3
mov
pop
adc
movsl
cmc
rol
test
xchg
add
add
mov
pop
scas
scas
shrb
dec
fidivs
dec
movsb
and
inc
and
lcall
push
ret
cld
add
mov
lret
scas
loop
ss
enter
xchg
shl
addr16
mov
fidivl
mov
addb
add
ds
jno
loopne
lret
push
pop
pop
lods
into
cwtl
xchg
pop
test
mov
in
scas
push
loopne
popf
cli
imulb
jp
xor
scas
aaa
inc
fcoms
mov
mov
sub
mov
or
pushf
jmp
call
cli
mov
push
and
lods
loop
fwait
lock
mov
push
loop
cmp
cmpsl
notb
leave
jbe
add
jb
sbb
or
fnstsw
pop
sub
test
loopne
jp
mov
inc
cmpsb
stc
outsl
mov
outsl
pop
les
rcrb
jbe
outsb
sub
xor
xchg
test
dec
add
cwtl
out
cli
loope
data16
clc
mov
outsl
popa
mov
fs
mov
mulb
jmp
sbb
dec
sub
jnp
ret
popf
add
mov
xchg
and
lods
subb
les
push
test
push
js
push
jl
scas
xlat
dec
pop
xor
push
mov
test
push
add
imul
outsb
icebp
addl
lock
cs
xchg
adc
mov
and
pop
push
push
dec
fldt
add
pop
aam
stos
mov
sub
movsl
das
adc
out
cmpsl
xor
lock
enter
movsl
xor
es
rcpps
loope
in
sub
mov
mov
dec
adc
pop
dec
mov
fadds
sub
jge
repnz
dec
push
fidivrs
bnd
mov
shrl
popa
push
mov
jo
cwtl
jmp
ja
jne
int
test
and
movsb
push
add
dec
lahf
xor
jne
push
adc
jge
adc
xchg
divb
xor
xlat
test
mov
out
jb
int3
push
mov
add
out
mov
ja
cmp
mov
xchg
mov
dec
popa
adc
sbb
mov
lods
daa
pop
mov
pop
jns
xchg
sbb
mov
cmc
jle
loop
call
lds
in
lcall
imulb
je
lds
pop
adc
add
rcl
push
je
pop
pop
sti
cmc
stos
push
push
stos
xorb
cmc
cld
or
cmc
and
xchg
and
mov
xor
lret
aaa
push
mov
repz
lods
mov
test
inc
and
aam
sahf
test
xor
int3
jmp
imul
mov
inc
fs
or
pop
aas
cmp
cmp
push
incl
push
aam
cmp
cmp
jmp
fcmovnu
xor
lea
pop
outsb
inc
jnp
loope
and
hlt
mov
and
mov
insb
mov
shl
fdivl
and
fidivrs
pushf
fisttps
lcall
or
inc
ljmp
push
test
cmpb
xor
mov
ret
lds
jmp
lods
imul
pop
or
daa
loop
xor
int
inc
cwtl
scas
into
jle
aad
mov
out
pop
fdivrs
and
scas
mov
push
jg
lds
out
call
pusha
sbb
push
int3
shlb
andl
mov
xorb
mov
stos
lcall
adc
divl
lcall
cmp
dec
in
sub
pop
ds
cmp
in
sarb
jne
fidivs
xchg
cld
push
mov
rcl
out
push
mov
pop
add
push
or
loopne
ret
push
scas
mov
cmp
jmp
cli
mov
or
pop
mov
das
dec
dec
mov
xor
sub
leave
repnz
cltd
adc
sbb
ljmp
or
push
sub
in
lcall
fldcw
imulb
pushf
in
mov
cs
pop
xchg
adc
loope
fadd
inc
jb
jle
outsb
sahf
and
mov
aam
pop
cli
push
movsb
loope
add
in
in
inc
bound
je
inc
loope
aas
cmp
aam
xor
dec
pop
fdivrs
add
sbb
mov
mov
mov
aaa
inc
mov
out
adc
inc
outsb
jns
jg
out
ret
popa
mov
jno
dec
leave
or
mov
jecxz
adc
inc
pop
mov
orb
mov
sbb
negl
pop
outsb
xchg
pop
addr16
insb
mov
inc
mov
jp
bound
inc
fiaddl
test
and
xchg
clc
xor
dec
fisubl
je
mov
idivb
das
icebp
sbb
lods
rorb
push
test
in
and
jle
ljmp
push
cmp
testl
mov
jmp
adc
cmp
push
cmc
leave
in
adc
add
stos
test
insb
in
jbe
inc
inc
sub
xchg
ficoml
sbb
and
lods
or
jmp
push
ljmp
dec
jp
xor
xchg
or
fildl
je
es
fidivrl
pop
xor
dec
sub
mov
xlat
ds
xor
sbb
push
in
jg
popa
stos
dec
or
sbb
pop
out
test
push
sbb
rcll
sub
push
js
xor
fwait
sub
mov
sbb
xchg
mov
mov
imul
xchg
mov
aaa
sbbl
push
les
mov
inc
pop
inc
out
shll
inc
push
out
sti
ja
addr16
dec
jns
xchg
call
cmp
mov
test
cltd
pop
outsl
mov
out
loope
mov
xor
mov
fnstenv
scas
mov
leave
and
dec
xorl
fiadds
adc
sub
cmp
sub
in
or
cmp
adc
fisttpl
movsb
sbb
ss
push
sub
inc
fucom
stos
aaa
pop
popf
and
loope
icebp
push
fbld
sbb
xor
and
lock
xchg
leave
sbb
add
rcl
mov
and
sub
jecxz
and
ret
adc
add
aad
daa
inc
push
xchg
and
push
lock
mov
sub
add
xchg
scas
mov
mov
add
movsb
inc
cmp
dec
inc
addb
inc
inc
out
jg
adc
scas
pop
sbb
arpl
cmp
testl
int3
fnstsw
pcmpgtd
roll
arpl
mov
ret
es
cmp
sbb
inc
push
sbb
sbb
imul
lods
mov
add
jo
dec
aad
nop
loop
pop
testb
pop
flds
and
in
or
xor
lret
xchg
bnd
jns
sub
mov
jp
test
mov
pop
jbe
xor
cwtl
les
sti
pop
or
std
sub
xor
pop
mov
xor
jp
dec
adc
xor
in
jp
sarl
dec
mov
jnp
ljmp
sub
push
and
aaa
std
scas
xchg
mov
in
stc
ds
imul
inc
dec
dec
jge
sub
test
movb
movsb
leave
popl
gs
jb
pop
into
pop
jg
or
jle
add
or
repnz
sahf
jmp
jp
inc
push
mov
pop
rcl
mov
arpl
mov
adc
lcall
movsb
iret
mov
or
or
lcall
jns
lods
mov
xor
lahf
pop
push
orb
aam
fwait
xor
pop
lea
mov
int3
pop
pushf
push
or
lcall
xlat
pop
sarb
iret
int3
mov
fstps
rcl
shlb
xchg
sub
mov
sbb
pop
cmp
mov
scas
push
mov
adc
mov
adc
jle
es
imul
jb
xchg
cmc
js
jbe
mov
mov
mov
outsb
pop
cmpb
lea
jno
sub
and
mov
push
push
outsb
imul
cmpl
nop
test
fxch
inc
in
cltd
lret
test
ret
or
psubusw
enter
inc
daa
xchg
sbb
lret
jnp
pusha
bound
and
ret
in
mov
adc
jmp
sahf
popf
notb
mov
lret
test
sub
push
mov
jb
push
cmp
adc
inc
xchg
adc
mov
sub
or
cmp
or
popf
mov
jp
in
adc
fdivrs
inc
cmpl
add
mov
filds
sub
das
mov
jno
movsl
pop
mov
hlt
fmul
jo
mov
pop
fwait
dec
push
mov
mov
insl
lcall
lahf
repnz
mov
cmp
and
sarl
xor
xlat
lds
cmp
adc
int
inc
xchg
pusha
ja
jb
pop
mov
das
or
push
xchg
call
or
inc
fwait
rolb
cli
push
xchg
lock
dec
mov
mov
add
fimuls
lock
or
lds
push
mov
notl
aas
daa
and
ffreep
or
sub
adc
cs
jae
dec
xor
push
scas
in
push
ret
xchg
adcl
fmulp
js
mov
lds
mov
aad
insl
push
repnz
sub
push
lea
fs
call
test
cli
push
mov
jmp
xchg
add
mov
and
jne
lds
xchg
vphadduwq
sbb
pop
add
mov
daa
cld
pop
mov
sbb
nop
inc
test
mov
mov
cmpsl
sbb
ds
adc
je
hlt
xorb
xor
xchg
dec
lods
adc
enter
push
adc
scas
lods
mov
cmpsb
pop
inc
cltd
add
lock
sti
nop
out
xchg
xor
das
imul
popf
out
mov
enter
loope
and
int
mov
push
int
mov
pop
push
sub
clc
add
pop
jne
push
lods
sub
push
js
sbb
cmp
xchg
sub
insb
in
fiadds
push
pop
pop
nop
cmpsb
in
pop
or
dec
mov
cld
mov
mov
pushf
add
imulb
jo
rcrb
dec
dec
add
out
ret
mov
mov
mov
sub
inc
es
testb
ja
inc
fwait
in
cwtl
mov
rcll
pop
cwtl
mov
jg
bound
outsb
lods
or
cs
jl
pop
cmp
sub
data16
subl
hlt
cmp
movsl
lods
xor
xor
push
sbb
pop
push
cld
push
jnp
outsb
enter
mov
cmpsl
outsb
jo
mov
mov
cmp
mov
inc
cli
mov
xchg
pop
and
je
sub
push
adc
jg
xchg
pop
cmpb
cwtl
xchg
insl
pusha
cmp
inc
pop
aas
mov
lods
dec
push
xor
shrb
fucom
int
mov
fmuls
inc
scas
icebp
stc
cli
and
push
out
mov
ret
dec
xor
fisttpll
pushf
mov
mov
or
inc
xchg
testb
lret
test
pop
in
add
into
pop
and
in
xor
movsl
adcb
scas
stos
xor
ret
sub
sub
ds
mov
in
push
mov
std
jp
jno
in
or
and
test
mov
mov
mov
xlat
stos
push
pop
std
movsl
lea
jle
sbbb
lock
fidivs
or
and
cmp
and
jle
mulb
push
push
push
lahf
xchg
xchg
aaa
sbb
jp
mov
andb
shl
pop
stos
inc
lods
sub
xor
mov
add
in
xor
sub
stos
jg
cmp
sbb
mov
xchg
data16
xchg
jecxz
push
sbb
mov
pop
mov
inc
and
lods
cwtl
insb
pop
adc
in
cmpsb
or
jg
fucom
data16
iret
test
push
out
and
lcall
jg,pt
imul
out
cmpb
or
and
xchg
roll
mov
movsl
push
imul
dec
dec
lret
nop
pop
arpl
imul
out
scas
push
in
negl
and
rol
bound
jecxz
les
pop
xchg
addr16
add
mov
and
dec
dec
enter
jle
push
and
fsubrs
sub
sbb
xchg
push
loop
fnstsw
aas
push
or
adc
or
mov
iret
stos
cmp
mov
and
pop
inc
andb
xor
shrl
ficoms
ret
nop
pop
inc
sbb
mov
inc
aam
test
lret
xchg
notb
inc
pop
adc
xchg
sbb
ljmp
xchg
out
push
stos
push
das
in
fs
or
jmp
clc
mov
and
xor
into
std
push
and
call
mov
gs
lods
out
mov
xchg
push
jg
popf
ja
adc
cmpsb
mov
push
cltd
js
leave
ficompl
arpl
mov
popf
and
and
add
xchg
or
test
in
sbb
push
inc
ss
adc
in
push
out
add
aaa
div
fistpl
cltd
sbbb
xchg
pusha
jl
xchg
icebp
insb
int3
jl
mov
or
stos
xorb
shll
pop
sarb
je
cmp
test
cs
scas
add
ror
jp
lods
or
sbb
les
cmp
inc
mov
pop
dec
inc
mov
xlat
cwtl
pop
or
pop
xor
iret
xchg
fs
mov
push
push
dec
sbb
pop
adc
xchg
mov
jecxz
pop
test
je
test
xchg
lea
movd
and
mov
sbb
std
inc
mov
cmp
fimuls
dec
mov
roll
stos
inc
pop
dec
repz
call
lret
sbb
push
sbbl
push
dec
sti
mull
addr16
aam
jge
push
add
adc
fwait
push
fsubrl
dec
fs
insb
push
mov
inc
fs
push
stc
popa
and
cmp
inc
fs
or
aaa
jns
or
pusha
cltd
xchg
lea
loope
dec
inc
pop
in
fldenv
adc
aam
jge
cmp
cmpsl
scas
and
nop
loopne
addr16
add
jecxz
ss
aam
push
in
fwait
push
std
jo
cld
xor
adc
push
adc
dec
lahf
xor
je
jns
scas
mov
lahf
mov
xchg
test
xchg
mov
adc
sub
stos
dec
lods
sub
gs
cmp
and
mov
in
add
and
xor
lea
out
out
pop
in
aad
sub
adc
sbb
shr
faddl
ret
in
fstps
lea
std
mov
inc
jo
cmpl
jns
and
cmp
jae
lods
aam
lock
push
adc
jo
lahf
clc
scas
mov
adc
lds
repnz
scas
mov
pop
lock
mov
push
mov
adc
push
sub
js
cs
fldenv
fsubrl
lods
push
xchg
inc
mov
adc
push
mov
loopne
int3
lock
popf
repz
inc
pop
iret
cwtl
push
inc
jecxz
dec
mov
xlat
and
sub
dec
mov
sub
scas
or
cmp
mov
mov
add
repz
loopne
popw
in
lahf
jecxz
andl
fisubrs
jmp
clc
jmp
icebp
lret
push
popf
js
add
xchg
cmp
repz
cltd
mov
fwait
or
repnz
hlt
enter
pop
lods
cs
mov
push
mov
and
test
sbb
jbe
adc
cli
xchg
lods
sub
sbb
inc
or
pop
push
push
ja
ja
xchg
sarb
rcrb
das
insl
insb
sbb
xchg
stc
ss
lods
pop
xor
jns
js
aam
stos
sti
push
mov
repnz
addr16
out
jp
popa
pop
bound
fstps
mov
jne
sbb
arpl
jmp
mov
test
lret
rep
jb
hlt
xchg
inc
or
pop
jo
mov
xor
aam
mov
cmp
push
mov
mov
or
sar
adc
push
xchg
outsl
adc
pop
jp
test
pop
dec
dec
adcl
popa
rcrl
cmc
out
lcall
icebp
jno
nop
inc
mov
jge
sti
add
icebp
mov
lods
movsl
jp
and
sbb
test
xorb
stos
push
into
jb
jae
lcall
cld
jmp
or
mov
out
shll
sub
daa
add
test
mov
test
xorps
mov
stc
test
scas
xlat
in
xchg
pushf
pop
sbb
pop
lret
sahf
out
dec
xlat
sbb
cmpsl
std
rorb
jecxz
xor
negb
jmp
iret
adc
lods
insl
mov
cmpl
icebp
lahf
push
hlt
xlat
xchg
sub
mov
fadds
sub
xchg
stc
cmp
dec
adc
repnz
in
push
mov
mov
aaa
in
outsb
pushf
in
imul
ja
sub
mov
jecxz
into
adc
dec
cwtl
xor
jo
ret
xchg
arpl
jmp
lcall
nop
rcrb
outsb
add
rclb
mov
call
push
insb
pusha
js
pushf
nop
dec
dec
push
cmp
mov
mov
add
xlat
cli
aam
mov
lds
dec
dec
lahf
jge
and
xor
mov
fnsave
rcr
mov
add
fmull
adc
adc
adc
push
adc
stos
fcmovne
cmc
cmp
cmp
enter
xchg
shr
mov
dec
push
fsubr
push
leave
in
push
and
inc
cmp
loope,pt
aas
cltd
fcmovu
pop
pop
and
cmp
mov
push
dec
subl
push
scas
mov
sbbb
inc
push
push
fnstcw
add
sub
iret
mov
mov
cld
mov
outsb
xchg
adc
mov
das
xchg
int3
js
jl
int
ds
adc
test
in
imul
pop
out
pop
jg
jecxz
xchg
fimuls
pop
fcmovbe
mov
loopne
jp
xchg
or
xor
or
lods
mov
add
push
sbbl
add
pop
call
mov
push
xchg
rclb
mov
xor
out
push
mov
addb
xor
cli
push
xor
add
les
dec
jecxz
mov
jp
push
push
adc
rorb
push
sbb
cltd
or
sbb
fcmovbe
push
test
push
dec
jb
mov
test
xor
sbbb
sbb
iret
rorl
jbe
orb
mov
push
or
shll
sbb
ret
loop
push
sub
push
out
outsb
dec
shlb
sbb
xchg
mov
bound
cmp
sbbl
stc
jle
jle
xor
cmp
jecxz
jnp
add
sbb
add
xchg
fidivrl
jp
jp
test
jmp
sub
daa
and
nop
in
shlb
jg
lret
mov
xchg
push
dec
data16
es
jb
mov
mov
mov
cmp
fs
inc
call
insl
stc
je
inc
dec
movsb
mov
mov
aad
negl
inc
push
jle
fs
imul
dec
stc
pop
sbb
clc
test
scas
aad
pop
adcb
repnz
pop
xor
or
testb
lret
sub
xor
test
mov
inc
cmp
mov
cmc
dec
sbb
test
gs
aad
mov
or
mov
aaa
cmp
cs
jg
dec
dec
adc
leave
or
arpl
into
imul
aam
aad
sar
cltd
sbb
repnz
push
ss
or
ss
repz
cld
sti
ret
pop
cmpsl
push
or
into
aad
ret
fists
lods
jno
in
mov
popa
ja
enter
fisttps
pop
pop
roll
or
dec
insl
dec
inc
mov
into
sub
xchg
notl
arpl
xor
jp
xor
mov
hlt
ss
cld
mov
inc
mov
mov
pop
and
popa
repz
ljmp
call
mov
jno
push
cmp
dec
xor
sub
jae
inc
jns
push
and
push
ss
xor
jg
std
fmuls
xor
leave
shll
pop
leave
mov
cltd
cs
cmpsl
adc
sbb
popf
mov
loop
mov
and
popl
movsb
lea
add
andb
sub
clc
pop
dec
adc
rclb
inc
xchg
xor
jne
sbb
pop
sub
iret
lahf
add
add
aad
mov
or
arpl
ss
les
dec
adc
stc
mov
gs
mov
mov
push
icebp
fmuls
cmp
jecxz
lods
adc
lret
inc
scas
inc
adc
sbb
insl
xor
inc
aam
int
imul
mov
subl
jle
fistl
cli
lahf
aam
xchg
ret
mov
pop
sub
xchg
andb
popa
or
and
orb
mov
xor
jge
ficomps
aaa
pop
mov
fmull
fildll
pop
movsl
in
bound
and
fidivl
push
into
adc
cmp
jae
testl
jge
xor
jno
mov
cmpsb
mulb
je
jg
popa
in
sub
cmp
ljmp
out
mov
fidivrl
adc
outsl
sbb
inc
ficoms
cmpl
push
adc
mov
in
loop
pop
aas
ficomps
push
lret
sub
rol
xlat
sub
mov
or
or
out
and
rclb
jns
cli
jge
cltd
adc
add
pop
lcall
aaa
dec
xchg
sub
and
repz
xlat
movsl
dec
cmp
test
es
dec
inc
or
mov
loopne
aas
add
mov
add
xor
cwtl
test
xor
mov
into
adc
daa
push
stc
cmc
daa
lret
iret
jge
sbb
nop
push
push
adc
leave
add
jmp
xchg
out
popa
pusha
hlt
and
int
repnz
push
jnp
adc
sbb
icebp
sub
ret
sbb
mov
nop
mov
lods
stos
mov
cli
notb
jo
dec
lea
popa
int
fs
nop
xor
out
xlat
add
push
cs
call
cmp
rcrb
in
in
mov
sub
iret
cmpsl
jb
orl
addr16
incl
data16
jmp
sarl
cs
ds
adc
mov
out
pushf
stos
lcall
ss
push
push
jae
hlt
addr16
or
lahf
popa
add
fwait
outsl
jbe
dec
rcrl
xchg
ljmp
daa
pop
and
sub
dec
jae
scas
lods
outsl
sbb
int
lods
push
popa
mov
fsubrs
jle
ficoms
adc
jno
bound
cltd
iret
lods
or
clc
stc
jno
pop
sub
bound
xchg
enter
cmc
pop
or
outsb
call
mov
mov
sbbb
add
mov
fistpl
add
xchg
out
jecxz
inc
cmpsl
or
push
std
negb
into
jg
mov
hlt
and
xchg
pavgw
enterw
cmp
inc
nop
push
out
push
mov
push
pop
fmuls
sub
adc
sub
out
test
pop
dec
and
sub
sbb
xor
inc
push
or
and
std
test
jb
lea
jg
scas
mov
mov
leave
mov
int3
xchg
aaa
popa
cmp
or
mov
movl
fistpl
popa
xor
lcall
jns
and
ret
jge
mov
scas
and
pop
adc
adc
xchg
sub
sti
adc
sahf
lds
gs
arpl
ds
in
mov
test
mov
gs
lods
rol
xchg
test
fstp
lahf
push
or
jge
stc
sub
call
mov
push
je
repz
adc
in
mov
jle
and
add
add
mov
icebp
dec
mov
and
jae
pop
mov
push
mov
movsb
jp
sub
jbe
aad
mov
jge
popa
pop
cmp
stos
stos
mov
mov
sub
push
sbb
or
dec
mov
stc
push
push
push
cwtl
xchg
ss
mov
mov
inc
cs
loope
mov
cmp
ljmp
inc
push
mov
inc
xlat
pop
rcrb
dec
jbe
dec
push
and
xor
fbld
shll
sarl
jae
cmp
xor
mov
cmc
in
loop
and
and
roll
xchg
jg
add
scas
xor
aam
popf
jno
pop
sub
jbe
or
js
addr16
out
cmp
jne
test
push
out
sbb
mov
cs
pop
sbb
mov
mov
nop
cmpsb
adc
mov
jmp
std
jp
cmc
dec
cmp
inc
aas
mov
xor
inc
jl
jmp
dec
popa
fwait
push
leave
and
cld
mov
or
xchg
adc
out
js
inc
outsl
testl
iret
mov
cmpsl
push
cmp
jg
cmpsl
lods
cmp
mov
rcrb
xchg
fsubr
shll
mov
lods
rorl
cwtl
xchg
or
jnp
dec
cld
xor
mov
jmp
in
xor
fiadds
fdivrl
dec
bound
cli
test
sub
mov
aad
aam
mov
shrl
jae
adc
sub
test
xor
xchg
test
je
add
inc
in
sub
lods
movsb
mov
stos
and
lock
int
push
or
fldl
sbb
out
pop
dec
push
jge
data16
cmpsl
mov
pop
jbe
cmp
addr16
xor
lea
adc
out
mov
iret
mov
sbbb
rclb
popl
loopne
aad
movsb
popa
aam
sub
push
mov
xchg
out
insb
xchg
mov
loopne
xor
mov
int
dec
adc
mov
and
shlb
pop
outsb
xor
mov
test
gs
and
dec
and
and
in
jno
push
jg
insb
cwtl
sub
add
mov
repnz
test
bound
loop
fldenv
and
xor
or
push
add
aam
add
ret
xchg
hlt
das
in
mov
pop
cmpsl
js
xchg
xchg
inc
int3
aam
icebp
out
xor
in
aaa
je
lret
scas
les
pop
fstl
aas
addr16
jno
lcall
ja
in
divl
sarb
ja
cmc
hlt
mov
daa
push
lods
or
rol
outsb
cli
in
mov
fs
mov
and
cs
xor
adc
sti
dec
fstps
xchg
or
lods
int3
adc
or
ss
push
push
loop
ds
sub
pop
ds
jle
aam
push
pusha
mov
mov
pop
icebp
mov
or
jge
mov
test
cltd
xchg
out
stos
imulb
loope
and
cwtl
rorb
jl
popf
mov
and
pop
mov
jecxz
mov
add
lea
notb
js
mov
adc
in
inc
das
nop
iret
in
push
sub
pusha
pop
jg
sub
fcoms
cmpl
mov
pusha
lock
daa
xor
dec
ds
push
or
hlt
decl
scas
cmp
shld
je
fwait
and
xchg
mov
imul
jle
sbb
jp
or
and
fistpll
mov
je
sbb
ret
cli
out
movsl
add
xlat
or
and
mov
push
xlat
in
push
push
lods
rclb
inc
cmp
mov
rol
and
dec
test
mov
dec
imul
lahf
push
mov
call
bound
cmc
andb
jmp
ret
ja
pop
pop
mov
sbb
push
jmp
lock
jge
imulb
xchg
push
lods
push
les
js
in
inc
push
lods
sbb
jnp
jne
pslld
psrlw
dec
mov
out
les
sbb
arpl
xchg
jo
jl
repz
popa
imul
faddl
imul
repz
hlt
xchg
push
mov
inc
mov
add
mov
push
pop
fs
inc
sbb
mov
jecxz
icebp
sbb
cmpsl
gs
cmp
or
pop
jecxz
sbb
outsl
lock
pusha
or
sub
notl
mov
mov
and
jmp
cmp
outsl
push
xchg
dec
aam
push
pushf
enter
ss
xchg
pusha
lea
pushf
fsubs
inc
push
or
int
or
dec
push
sahf
push
xor
lea
xor
lcall
mov
gs
out
add
sub
pop
push
push
ficomps
xor
jmp
sbb
push
inc
or
sbb
inc
sub
push
mov
xor
ret
mov
test
push
pop
mov
jl
or
xchg
mov
jae
pusha
lods
bound
xchg
push
cmp
sub
lret
lahf
and
push
pop
xchg
push
and
stc
pop
xchg
jb
cmp
mov
leave
iret
or
sbb
sarb
add
outsl
arpl
loopne
sub
cltd
jae
shrl
movsl
insb
push
icebp
mov
xor
in
push
call
lods
pop
xorb
adc
sbb
idiv
movsb
adc
sub
enter
shl
pop
jp
dec
jbe
mov
adc
fdiv
pop
call
push
enter
sub
aam
sub
push
inc
fdivl
pusha
mov
cmp
mov
mov
in
xchg
adc
into
pusha
adc
sbb
xlat
test
or
xor
sahf
rcrl
ss
rcll
sbb
rclb
push
aaa
cwtl
adc
imul
jno
adc
add
mov
mov
cmp
ret
icebp
ljmp
test
sub
pop
push
out
jns
pop
mov
pop
and
add
pop
loope
cltd
mov
push
cmp
jnp
in
mov
emms
ljmp
pop
dec
push
pop
into
aad
or
xchg
pop
xchg
sub
dec
mov
or
maxps
jno
push
mov
jae
insb
cmp
dec
xchg
sysexit
sbb
xchg
and
test
xchg
mov
jmp
cmp
and
mov
daa
mov
adc
jg
cs
in
cmp
mov
push
scas
add
aas
sub
jl
aas
mov
shlb
pop
ds
mov
fnsave
push
insl
es
mov
rorl
add
ljmp
xchg
sub
aaa
in
cwtl
iret
xchg
stos
sti
enter
je
xor
iret
xchg
test
pop
jae
sbb
leave
mov
rcrb
adc
or
fnsave
push
xor
or
pusha
jbe
daa
push
add
scas
ret
mov
in
lea
xor
mov
dec
push
pop
and
dec
inc
inc
scas
fcoml
mov
rcrl
xchg
and
jb
mov
mov
test
imul
mov
xchg
or
cltd
icebp
sbb
imul
xchg
in
test
popa
xchg
ret
or
fcomi
mov
mov
xor
adc
in
or
mov
lds
movsb
cld
push
jecxz
push
adc
and
push
xor
mov
add
cmp
xor
int
mov
and
movq
out
adc
sub
xor
pusha
test
inc
dec
int3
add
es
dec
inc
inc
push
inc
mov
and
mov
adc
xor
cmp
sbb
jbe
insb
cltd
jo
pusha
ficoml
shll
cmp
pop
std
scas
dec
lods
pop
mov
ja
xchg
pop
pushf
js
dec
orb
enter
push
pop
pop
lock
jo
inc
sub
test
or
jne
push
dec
pop
pop
or
repnz
dec
je
ret
mov
pop
cltd
push
dec
jnp
mov
add
pushl
pop
ficoms
push
mov
lahf
divb
pop
jno
in
loop
inc
fcomps
xchg
mov
cltd
pop
mov
push
xlat
jg
out
test
mov
dec
ljmp
mov
repnz
cmp
jbe
mov
mov
imul
shll
inc
out
push
in
ret
jge
or
mov
and
cltd
fxch
sbb
fbstp
lds
iret
push
push
cmp
dec
add
or
fdivs
xchg
push
push
pop
je
test
cmpsb
je
ficoml
mov
pusha
stos
fwait
jle
test
mov
jg
divb
and
ret
mov
jecxz
pop
dec
pop
xchg
push
or
insl
xor
shll
inc
rol
push
cmpsb
aam
movsb
push
xchg
lret
sahf
mov
inc
cld
aad
sub
daa
das
lret
mov
add
push
or
inc
inc
push
fldcw
or
imul
or
adc
ja
dec
inc
jmp
jp
xchg
outsl
sbb
scas
insb
cmc
add
test
int3
outsb
mov
outsl
pop
test
dec
lods
rcrl
mov
sahf
mov
and
test
test
sbb
pusha
test
imul
mov
dec
and
mov
inc
lea
xor
daa
sbb
or
aaa
xchg
push
push
xchg
into
stos
push
cmp
fwait
outsl
inc
sub
cmp
pop
mov
mov
test
add
sub
aaa
push
testb
push
adc
lods
clc
lahf
cli
mov
or
sub
and
pop
fwait
shl
xlat
leave
nop
cmpl
dec
mov
jmp
notb
aam
jno
lock
fdivl
mov
imul
push
fbstp
lahf
inc
arpl
jg
xchg
dec
rorb
dec
push
sbb
xor
mov
out
push
loop
and
subl
cwtl
lret
ret
leave
aam
sbb
mov
inc
adc
lea
out
mov
sbb
dec
mov
or
push
jge
and
ja
jl
rclb
ljmp
push
bound
ror
xchg
mov
adc
mov
dec
ret
sub
mov
mov
cltd
mov
push
faddl
xor
pop
call
cwtl
mov
inc
jne
mov
jbe
push
cltd
sbb
or
pop
aad
imul
xchg
mov
push
mov
insb
stos
jae
xor
aam
cmp
inc
dec
sbbl
movsl
xchg
xchg
ja
xchg
push
aas
int3
jecxz
lahf
rcrb
imul
std
insl
dec
data16
ljmp
fwait
std
daa
push
mov
jp
in
call
xchg
mov
inc
and
outsl
xor
jno
lods
xchg
outsl
xchg
pop
sub
shl
ret
jg
xor
sub
pop
popf
push
cmp
cmpsb
push
test
sub
popf
enter
xchg
in
inc
nop
adc
ds
jnp
cmc
mov
in
jae
mov
loopne
lret
es
jne
bound
cld
pop
pop
loope
frstor
dec
cld
mov
mov
push
cmp
jne
jnp
aam
rolb
xchg
mov
test
mov
or
js
hlt
cmp
cmp
loopne
xor
dec
lret
ret
xor
mov
cltd
lea
push
fstpt
fwait
jae
and
addr16
jle
inc
int
push
into
jecxz
fsts
aas
packsswb
inc
jmp
mov
lcall
repnz
inc
adc
fs
stos
fldl
mov
std
data16
xchg
aad
xchg
imul
subb
stc
mov
gs
mov
testl
jns
pop
add
jae
ret
aas
push
stc
stos
cmp
aad
cmc
popa
stos
mov
xor
addb
dec
mov
inc
shll
inc
outsb
sbbb
mov
and
dec
mov
data16
outsb
push
lahf
daa
outsl
or
adc
cmpsb
cmp
xchg
icebp
sbb
sub
aad
jg
in
rcrl
test
js
nop
sub
aad
mov
adc
push
add
stos
xchg
sub
div
inc
out
mov
out
adc
or
gs
mull
push
repz
lret
mov
hlt
das
ja
adc
adc
xor
cmp
sbb
xchg
mov
xchg
mov
push
arpl
rcl
jno
ret
cmp
out
pop
leave
lcall
dec
push
mov
jo
movsl
rcr
ja
iret
adc
lds
or
xor
int
cmpsb
and
xchg
inc
cmc
jae
inc
push
loopne
mov
or
popa
neg
mov
in
ljmp
or
pop
int3
xchg
xchg
jns
stos
repnz
sbb
mov
push
repz
add
adc
xor
ja
test
aas
push
jmp
lock
test
push
pushf
add
inc
mov
xchg
mov
es
sbb
xor
fmull
in
mov
aaa
nop
mov
pop
inc
aas
out
aaa
and
push
or
sbb
cmp
add
pop
bound
stc
daa
outsl
fiadds
inc
push
pop
das
xor
mov
cmp
rorl
testb
or
out
negl
or
js
dec
imul
xchg
ret
pop
xchg
nop
dec
xor
sbbl
movsb
popa
andb
lcall
jmp
pop
and
sbb
lock
enter
xchg
pop
xchg
mov
push
ds
cmpsb
not
inc
add
pop
enter
cwtl
pusha
inc
pop
and
pop
cmpsl
dec
mov
sahf
push
mov
mov
cld
jnp
out
mov
enter
lods
jnp
mov
mov
mov
popf
nop
jb
adc
and
or
test
push
pop
cli
out
add
or
roll
aam
cmpsl
sub
movsb
lret
repz
mov
lret
data16
in
pop
xor
fwait
cmp
pop
dec
pop
ficoms
adc
sahf
sar
andl
les
aaa
cmp
movsl
xor
add
clc
inc
je
movsl
and
xor
mov
stos
dec
das
in
pop
bound
sahf
test
adc
and
push
xor
shl
mov
mov
nop
outsb
std
jp
lods
popa
jl
jge
ret
bound
insl
pop
cmp
mov
std
cmp
xor
adc
cmp
push
iret
xchg
dec
pusha
cli
push
sahf
cmp
push
pop
ret
ficoms
cmp
in
add
sbb
cltd
add
and
pop
mov
jl
je
sub
fists
fsubrs
jnp
add
jecxz
cmp
negb
scas
stos
ss
shl
fwait
ds
stc
inc
push
push
xor
sbb
insl
pop
dec
orl
lds
xor
sti
popa
shrb
imul
cmp
jle
cmpsb
cmp
mov
or
loopne
js
dec
outsl
out
mov
sub
xor
mov
in
out
jmp
sbbb
inc
hlt
daa
jp
out
inc
cld
cltd
jb
fs
push
xor
mov
pop
mull
insb
nop
leave
xchg
imul
add
sbb
nop
les
jge
sub
dec
sub
mov
stos
push
out
add
mov
lea
popa
adc
sbb
sbb
je
sbb
add
pop
adc
fistps
iret
mov
sub
push
add
je
das
or
push
lock
sub
aas
rolb
fs
pushf
fstl
fcmovbe
adc
inc
into
push
fs
ror
inc
outsl
and
scas
or
in
cmp
cmc
sub
mov
xor
mov
jl
adc
ds
cmp
dec
sub
in
aaa
pop
addr16
adc
cmp
cld
in
lods
sbb
mov
loop
cmp
add
add
jbe
int3
xchg
cltd
in
into
inc
jle
jmp
mov
cmp
cmp
and
jb
mov
adc
test
sbb
cmp
sbb
mov
fsubrs
adc
mov
mov
outsl
adc
popa
jne
xchg
daa
je
dec
dec
xchg
icebp
or
lahf
xor
test
jge
insb
sbb
mov
add
xchg
in
add
add
loope
xor
loop
les
xlat
mov
mov
push
jns,pn
repnz
icebp
and
sti
fs
pushf
imul
xchg
adc
xchg
fdivr
sbb
push
test
jae
fisttps
push
jae
sbb
mov
div
push
dec
roll
ret
lcall
lcall
sbbb
lret
pop
mov
in
jbe
into
int3
sbb
negl
pop
push
in
std
roll
or
cmp
test
int
testb
mov
int3
mov
outsb
inc
lods
test
arpl
cmp
cwtl
push
and
enter
pand
gs
jo
fadd
int
je
iret
mov
loope
push
and
stos
or
icebp
jo
dec
mov
mov
leave
ret
add
mov
fnstenv
lahf
in
pop
inc
test
push
add
and
inc
inc
std
test
inc
mov
cltd
aaa
aam
and
fs
mov
xchg
push
dec
vextractf32x8
add
call
cmp
mov
mov
adc
cwtl
add
mov
fmuls
push
shrb
sub
or
divb
std
ds
imul
mov
popa
push
mov
test
ss
fbstp
in
lahf
push
lret
add
dec
push
cltd
popf
push
outsb
cmp
scas
stos
mov
int3
in
mov
inc
movsl
cmp
mov
mov
or
div
mov
mov
ds
shrb
rorb
or
and
push
popf
jp
inc
sbb
sub
cmpsl
push
jge
jnp
pop
jp
push
fiadds
sub
cmp
dec
lds
mov
fadd
pop
repz
lahf
add
fdivrp
leave
fcmovnb
sub
hlt
sbb
sub
cmp
dec
loop
push
test
mov
and
fxam
or
push
jo
cli
and
std
add
enter
repnz
adc
or
xlat
pop
icebp
ds
jae
inc
xor
bound
imul
pop
pop
shll
mov
cli
in
and
es
aam
ss
pop
fwait
and
int
cs
imul
or
pusha
cmp
cwtl
inc
xchg
leave
xor
xorl
or
fcmove
mov
xlat
add
xchg
mov
mov
mov
aad
push
jmp
in
adc
movsl
out
inc
or
cmp
inc
mov
mov
jnp
cwtl
add
sub
int
mov
mov
mov
pop
push
mov
pop
leave
push
bound
push
jns
pusha
pop
push
sbb
or
xchg
js
dec
jo
or
cmpsb
cmp
xor
and
pop
int
vunpckhps
mov
cwtl
cmp
adc
adc
mov
dec
loop
inc
inc
scas
mov
fs
mov
cmp
mov
lahf
popa
adc
ret
mov
stos
add
cld
jecxz
push
sti
xor
movsb
and
ja
xor
pushf
mov
aad
sbb
psubb
shrb
cmp
repz
sbb
aaa
ja
pushf
arpl
pop
outsb
jbe
pop
add
pop
adc
mov
out
pop
pop
daa
popa
vpinsrw
out
or
dec
cli
xor
inc
mov
sbb
inc
jno
sub
mov
pop
add
out
icebp
daa
adc
mov
mov
and
mov
icebp
arpl
mov
popa
popf
and
lea
pop
dec
call
in
pop
repnz
lock
fadds
inc
test
loop
loopne
and
mov
fstp
stos
and
mov
push
inc
in
sbbl
imul
push
fisubs
aas
jg
testl
fldcw
cmp
sub
popf
ret
pop
je
pusha
scas
lds
pop
fs
mov
data16
jecxz
xchg
iret
call
rol
mov
dec
cltd
adc
sbb
dec
pop
or
add
mov
test
movsl
and
loope
push
ret
adc
imul
ret
mov
pop
fdivrs
shlb
out
fcmovu
push
mov
cmpsl
xchg
pop
notb
addl
loope
lret
mov
xchg
sub
ds
js
xchg
mov
adc
loop
cmpsb
xor
testl
test
lods
sbb
mov
push
fnstcw
sbb
xchg
sub
std
sub
dec
hlt
out
pop
insb
insb
outsb
inc
jae
aam
arpl
dec
mov
mov
fimull
shlb
inc
push
or
sub
stc
jg
jmp
outsb
arpl
xor
xor
inc
lret
loope
std
jne
inc
mov
push
lods
mov
add
and
test
jp
std
inc
mov
sahf
ret
cmp
inc
and
pop
mov
jecxz
inc
mov
mov
stos
les
out
inc
mov
mov
cltd
cmp
iret
mov
sahf
pop
sbb
dec
cmp
daa
movsb
mov
xchg
mov
mov
mov
xor
daa
addr16
mov
cld
imul
mov
mov
inc
out
mov
mov
mov
clc
loope
sub
into
mov
sub
push
jg
shrb
push
xor
iret
push
pop
adc
mov
push
xchg
out
movsl
cmp
test
ds
into
jecxz
pop
dec
ljmp
add
push
add
pop
stos
popf
dec
fwait
cli
lahf
add
inc
daa
fs
dec
xchg
dec
ja
sub
movsl
jae
cmp
and
add
pop
inc
mov
xchg
jae
sbb
adc
ds
xlat
cs
inc
in
movsb
push
and
addl
add
insl
mov
cli
outsb
adc
gs
inc
xchg
adc
mov
aaa
int3
jg
fimuls
les
xchg
pop
jne
or
mov
xchg
mov
out
jae
pop
inc
or
sbb
push
hlt
cli
add
dec
mov
ret
rorl
fcomi
dec
jl
ret
imul
imul
adc
repnz
jns
dec
movsl
jmp
cli
mov
and
mov
sti
and
xor
rol
cld
popf
cmp
push
jle
movsb
mov
repz
stos
push
xor
mov
adc
mov
js
push
mov
imul
mov
aam
mov
mov
jbe
jo
sbb
std
icebp
inc
lea
in
dec
aam
adc
pop
hlt
fisttps
pusha
adc
jae
outsl
fsubl
push
jmp
repz
test
mov
mov
mov
xchg
and
fisubrl
daa
pop
in
add
pop
lods
cmp
pusha
jge
pop
sbb
xlat
adcl
cmp
out
dec
pop
dec
stos
cmp
cmc
repz
cmpsb
int3
add
orb
ficoms
xor
sub
test
clc
push
pop
sub
jae
mulb
test
mov
sub
cs
imulb
xlat
jo
sbb
pop
negl
in
xchg
enter
cmp
jmp
mov
repnz
pop
dec
or
and
push
sbb
sbb
aad
xor
jp
in
sub
cltd
mov
shll
add
jne
repnz
icebp
mov
mov
sub
cmp
pop
in
adc
xor
or
repnz
or
fsts
mov
je
jns
data16
and
mov
add
in
lcall
mov
movsb
stc
ret
xor
xchg
mov
gs
cwtl
and
fmull
or
outsl
or
push
xchg
nop
dec
or
stc
or
or
daa
movsb
lock
daa
mov
fdiv
cli
rorl
jl
leave
jmp
ret
jge
test
sahf
popa
loopne
sbb
dec
cmp
clc
clc
jnp
jnp
es
lret
movsb
ds
mov
cmp
mov
add
into
sbb
cmpsb
mov
fstpl
cmp
push
sub
and
sbb
lock
xor
jl
mov
xor
sbb
inc
push
std
popf
fcoms
add
add
cmp
decl
sub
aas
fucomp
and
jo
mov
jb
inc
scas
sub
mov
xchg
pushf
mov
add
lods
and
jns
inc
xchg
add
sub
xor
or
test
xor
das
decb
std
pop
iret
adc
push
sub
dec
mov
fidivl
les
adc
dec
lret
push
sbb
mov
mov
bound
dec
xchg
cmp
mov
xlat
pop
adc
repz
pop
repnz
dec
pop
popa
mov
aam
clc
inc
fwait
nop
cbtw
imul
test
sub
mov
pop
or
int
lock
sti
mov
js
icebp
dec
bound
adc
push
shrl
lds
test
cs
pop
test
pop
mov
dec
inc
cltd
clc
xchg
js,pn
xchg
outsb
ss
push
jns
xor
mov
fnstcw
outsl
scas
repz
jle
fimuls
pop
mov
mov
lret
lahf
push
cmpsl
lods
rolb
ja
mov
xor
push
fsubr
lock
enter
xor
and
loopne
test
outsl
jb
dec
dec
cltd
mov
and
cld
push
movsb
test
sub
xor
mov
ja
cltd
dec
jge
or
xchg
sub
dec
mov
pusha
addb
push
mov
sbb
icebp
lahf
and
inc
leave
mov
aam
mov
push
sbb
lahf
pop
and
mov
xor
imul
cmpsb
push
test
clc
jns
jns
inc
mov
add
addr16
hlt
dec
movsb
jo
out
sub
ret
testl
int
pop
loop
sub
shlb
bound
jmp
mov
dec
mov
cwtl
add
fcoms
adc
inc
mov
add
dec
pop
push
ret
out
add
je
sub
cmp
and
xchg
jmp
push
repz
push
jo
push
mov
adc
addr16
push
inc
inc
pop
out
or
xor
xor
jbe
ret
and
jne
iret
or
cli
jno
xchg
out
cmpsb
jecxz
jmp
xor
pop
fwait
and
lds
rcr
mov
int3
add
adc
gs
and
pop
imul
js
daa
mov
mov
imul
add
dec
outsb
dec
stc
mov
daa
sub
add
push
rol
lea
jo
or
inc
dec
lea
mov
or
jns
mov
jge
ljmp
xor
and
insb
pop
adc
inc
jmp
xchg
push
jl
mov
sub
aad
pop
lods
add
xchg
mov
sbb
jge
cmpl
arpl
jae
cmp
sbb
xor
mov
adc
adc
push
mov
mov
xchg
jne
shrl
subl
or
mov
inc
movsb
pushf
jbe
and
sahf
mov
jnp
and
aam
or
rorl
jmp
insb
dec
aam
mov
jo
push
test
loopne
cltd
rol
dec
dec
fbld
dec
push
xor
xor
sub
sbb
std
cwtl
and
lret
aaa
sub
loope
icebp
dec
jo
or
push
pop
adc
jo
dec
pusha
cmpsb
jl
jae
xchg
mov
and
inc
testb
out
test
fstl
jnp
adc
fisttpll
or
mov
pop
mov
dec
lcall
sti
mov
jecxz
sbb
xor
scas
aas
jmp
test
or
das
xchg
adc
sbb
rorb
mov
cld
lock
jp
arpl
and
inc
out
jb
sub
cmp
stc
popa
mov
or
push
rcrb
aaa
inc
std
cmp
push
and
icebp
scas
addr16
cs
insl
mov
ljmp
cmp
enter
stc
push
pop
xchg
test
xchg
cld
sbb
dec
push
mov
popf
adc
adc
jnp
jmp
cmp
fsubr
push
adc
sarl
dec
loop
dec
sarb
lods
add
dec
out
fmul
adc
sbb
xor
cmp
xchg
cmc
stc
into
cmpsb
in
repnz
enter
mov
sub
sbb
xor
stc
cmpsb
mov
sti
in
jl
mov
sti
loop
push
push
lret
pop
jo
ror
dec
inc
jg
jmp
pop
jle
stc
xor
rorb
jle
pop
xchg
mov
popa
sub
xchg
add
ljmp
test
sub
jmp
and
shlb
mov
xchg
jmp
int
inc
jl
xlat
rcrb
push
mov
sub
leave
jg
xchg
pusha
mull
mov
std
mov
daa
cmp
mov
outsb
inc
dec
insl
pop
test
ret
jae
xor
sub
rolb
inc
or
lret
adc
sbb
sub
and
aam
shll
popa
xor
xor
mov
xchg
ds
es
cmpsb
scas
loope
pop
stos
push
inc
xor
cltd
enter
pop
jl
int
mov
sub
xchg
fdivr
test
sbb
insl
cmp
push
cmc
cmp
pop
pop
push
pop
push
rclb
call
mov
sub
mov
fwait
jo
into
pop
mov
cltd
jl,pn
scas
std
inc
push
cld
es
addr16
mov
xor
or
imul
lock
in
std
or
sub
adc
mov
icebp
outsl
iret
int
jge
movsb
divl
push
mov
jb
xor
jns
xchg
imul
mov
adc
loop
xchg
or
xchg
inc
sub
outsl
push
pop
jnp
inc
cmp
pop
xor
or
out
mov
sbb
xor
stos
mov
mov
jnp
cmpsb
jl
cmp
mov
addb
das
ret
dec
or
xchg
aam
test
sub
fs
xor
mov
movsl
xor
cltd
push
je
push
mov
dec
or
lcall
sahf
mov
insl
push
jecxz,pt
xchg
pusha
adc
imul
into
sarl
dec
jecxz
push
inc
mov
stos
scas
mov
call
push
pop
jo
jo
sub
fists
insb
cwtl
jns
sub
inc
sbb
inc
cmp
leave
paddusw
add
mov
push
mov
inc
leave
gs
imul
mov
push
and
out
xchg
dec
inc
or
idivl
dec
xchg
sbb
adc
sbb
xor
mov
out
lahf
xchg
dec
lea
je
aam
xchg
fs
iret
jbe
pop
loop
lcall
inc
sbb
leave
and
movsb
inc
or
lods
loope
dec
mov
mov
and
dec
add
mov
xor
lret
pop
stos
imul
stc
cld
pop
jl
sbb
jmp
mov
sti
jl
push
rol
push
pop
dec
outsb
add
and
subb
dec
fsubs
repz
sub
xorb
adc
sub
inc
enter
mov
push
push
fdivrs
mov
jmp
pusha
pop
mov
xchg
dec
sub
pop
mov
sub
mov
push
das
xchg
pop
sti
imul
rcrb
pop
pop
popf
scas
in
cltd
sbb
int
cwtl
fcmovnb
in
scas
adc
in
out
out
insl
push
fcmovnu
cwtl
xlat
lahf
out
mov
out
mov
repnz
clc
hlt
call
ficomps
ficomps
inc
push
cld
push
or
dec
roll
adc
xor
daa
cmp
out
ret
dec
jae
rcrb
add
jmp
push
cmp
jne
push
pushl
addb
inc
fsubs
xor
push
stc
mov
add
pop
inc
cmp
arpl
jecxz
loop
xor
dec
je
cmp
imul
or
and
nop
lahf
loop
in
jecxz
or
or
inc
repnz
add
sti
mov
sbb
cmp
test
ja
xor
js
lcall
pop
fcmovnu
ret
mov
pop
pusha
dec
stc
dec
sbb
jge
cmp
stos
adc
and
xchg
pop
push
incl
dec
iret
jmp
pop
pop
xchg
dec
mov
sub
arpl
xchg
mov
ja
aam
cmp
cmp
test
in
lods
pop
pop
or
imul
rcrb
mov
sub
js
fcmovne
mov
inc
lods
jecxz
dec
mov
cmp
sbb
jno
xchg
fsts
cmp
xlat
pop
bound
xchg
movsl
cmp
daa
sbb
xchg
sbb
pop
inc
js
mov
mov
ret
inc
mov
push
cs
mov
mov
mov
cmp
jbe
loope
ret
dec
call
mov
dec
rcr
adc
lods
push
dec
cmpl
lds
shlb
inc
pop
xor
icebp
sbb
mov
les
dec
push
push
xor
clc
sbb
sahf
hlt
xchg
mov
sub
inc
pop
cld
mov
repnz
sti
add
jle
pop
pop
cmp
inc
loop
std
popa
fsubs
in
pusha
jns
add
pop
and
sub
negl
icebp
dec
mov
push
jbe
daa
jb
jno
mov
and
stos
xor
pop
cmpsl
pop
out
inc
inc
stos
shl
pusha
adc
scas
mov
les
mov
mov
pop
in
enter
dec
xor
clc
testl
out
jl
xchg
xchg
les
pusha
cmpsl
leave
shlb
pop
add
sbb
ret
js
ss
mov
in
lret
test
jecxz
mov
in
fst
std
xchg
push
push
sti
and
jl
mov
mov
bound
mov
adc
out
repz
lods
jmp
stos
jne
daa
push
sbbl
faddl
aam
outsl
xchg
pop
push
inc
mov
lock
add
xchg
roll
test
lcall
dec
push
or
mov
aad
fisttps
clc
xor
fdiv
xlat
or
loop
repnz
dec
aaa
push
add
das
insl
push
push
pop
mov
pop
sub
je
and
sti
jl
int
insb
jp
aam
push
rorb
add
dec
loope
mov
pop
add
pop
pusha
or
aam
mov
cmp
test
xchg
fwait
pop
cltd
fistl
or
cmp
xchg
aaa
cmp
dec
fwait
data16
and
xlat
ret
mov
pop
fbld
mov
pop
push
pop
and
fdivrs
loope
stc
mov
cmc
or
push
jae
ljmp
push
lea
test
shll
adc
xlat
jl
mov
add
add
jne
xorl
std
sbb
adc
mov
sub
and
cwtl
andl
movsb
mov
sub
and
into
outsl
mov
test
sub
pop
xchg
loop
xor
jno
jns
jnp
insb
rolb
mov
cmovnp
loope
or
not
lods
lret
fcomp
ss
sti
fs
les
lret
lcall
insb
xor
push
pop
jb
mov
and
ljmp
and
dec
push
cmp
mov
pop
inc
sbb
ds
and
xchg
jns
cli
inc
mov
jae
gs
and
mov
xor
rorb
cs
add
cmp
inc
sub
outsl
sbbl
test
ja
lods
dec
outsb
xchg
push
or
aam
aas
add
mov
data16
std
mov
and
pusha
and
lahf
xchg
mov
push
inc
pop
push
leave
out
popa
pop
and
jns
or
mov
movsl
cmpsl
xor
out
test
jmp
ret
mov
addb
xchg
inc
dec
lret
inc
movsl
test
mov
inc
dec
insl
fcoms
icebp
push
jne
loop
xor
xchg
outsb
sbb
out
inc
cld
cltd
sub
insb
aas
lods
mov
dec
fbld
hlt
cltd
jbe
rcrl
push
roll
fcomi
repnz
jecxz
pop
inc
xor
imulb
stc
orb
jae
add
jo
repnz
sbb
cwtl
decb
repz
and
es
lods
fcomip
arpl
cmpsb
or
sub
pop
imul
int3
in
mov
test
sti
cmp
jp
mov
mov
scas
xor
dec
outsl
pop
sub
outsb
mov
loopne
xchg
out
mov
aam
mov
cmp
mov
push
popf
push
push
je
add
xor
xlat
shll
sti
lods
cmpsb
out
push
int3
cmp
xor
pop
popf
lock
pop
pop
xchg
and
mov
and
xrelease
mov
pop
mov
iret
adc
pop
pusha
aaa
xchg
push
testl
jp
xchg
mov
popa
sub
jle
out
add
adc
xchg
inc
xchg
xchg
add
add
icebp
sub
test
sub
stc
sbb
movsl
movsl
xlat
adc
in
add
leave
jle
movsl
rcrl
or
xchg
in
mov
mov
inc
jge
adc
xchg
fs
arpl
test
jns
dec
push
dec
adc
arpl
leave
data16
ja
add
repnz
fisubs
std
mov
jnp
add
fisubrs
loope
arpl
pop
and
inc
mov
or
ljmp
mov
nop
ljmp
push
cwtl
lods
xor
mov
mov
in
sub
in
cmp
ret
cwtl
jl
pop
push
pop
or
fimuls
xchg
pop
loop
mov
sbb
and
jmp
bnd
push
cltd
xor
andl
data16
xor
inc
inc
push
inc
mov
jge
pop
lods
sarl
aad
cltd
ret
leave
addr16
lret
call
and
xor
jo
jno
fs
mov
add
fs
test
call
or
mov
movsb
lods
cwtl
int
xchg
subl
shlb
cmp
push
mov
je
fiadds
add
xor
sbb
jb
out
inc
test
fistpll
mov
pop
jmp
shr
inc
add
in
pop
jnp
push
test
stos
sti
dec
andl
popa
loope
outsl
xor
out
mov
xor
xchg
in
ljmp
in
adc
mov
sub
mov
adc
jmp
sub
ret
mov
push
pop
jecxz
in
mov
xchg
into
adc
or
inc
push
xor
or
sub
std
cmc
icebp
dec
in
test
hlt
ds
jb
cmp
or
sub
orb
mov
out
loope
iret
dec
dec
imul
xor
and
shlb
out
adc
in
icebp
inc
add
mov
test
pop
cltd
xlat
sahf
orb
fwait
mulb
pusha
iret
popf
xor
arpl
lahf
xchg
xchg
mov
int
ds
stc
lcall
cli
mov
mov
add
jo
adc
inc
sub
jo
adc
sti
inc
bound
outsl
mov
outsl
pop
push
shr
jle
in
mov
out
xor
sub
fcomp
lds
cwtl
nop
inc
pop
stos
popa
stos
xchg
sbb
in
gs
lret
add
ret
push
xchg
jne
jl
insb
pop
lods
imul
inc
addr16
scas
out
pop
pop
icebp
mov
nop
lahf
adc
dec
pop
add
fldt
out
push
out
scas
repnz
add
cmp
es
shr
mov
mov
lock
mov
dec
sub
arpl
test
cmp
repz
add
daa
ret
lret
inc
xor
shlb
js
pop
dec
inc
xchg
lcall
jg
dec
xor
int3
out
hlt
or
jmp
lea
out
stc
std
mov
int
orl
mov
clc
push
dec
adc
sub
fcomip
mov
or
mov
aas
and
pushf
or
mov
sub
xor
ljmpw
push
out
fstpt
repnz
cltd
mov
sbb
cwtl
jecxz
pop
add
lcall
ret
enter
out
cltd
in
iret
lcall
in
fucomi
push
mov
jbe
adc
cmc
sbb
xor
subb
cld
lcall
push
cmp
mov
cmp
outsb
pushf
mov
xchg
mov
shl
jl
shlb
xor
aam
bound
jecxz
sahf
loope
mov
ss
outsb
test
test
jmp
adc
out
leave
pop
mov
xlat
clc
adc
cmpsw
adc
popf
rorb
pop
cmp
ret
sahf
and
out
pop
hlt
or
out
inc
test
push
mov
aam
out
push
lods
jl
sub
sub
orl
sar
rclb
push
repz
lcall
cmpl
inc
ret
and
and
cmpsb
pop
icebp
jnp
jbe
mov
mov
jp
insl
mov
in
mov
pop
dec
add
xchg
ljmp
test
stc
mov
icebp
jno
mov
add
push
sbb
xchg
int3
sub
test
roll
inc
xchg
xor
cli
std
cmpsl
pop
aad
pop
mov
dec
adc
adc
ret
lcall
xor
aad
mov
push
xor
mov
fcompl
fdivrp
insb
mov
cmp
inc
cmp
adc
and
adc
and
pop
mov
xchg
mov
sarl
add
addb
jp
sub
push
and
test
hlt
cwtl
push
pop
pop
push
scas
jnp
sahf
mov
shll
and
xor
sub
ficoms
into
mov
shlb
lahf
cmp
mov
sub
fisubs
dec
rolb
jl
dec
loop
pop
es
hlt
xchg
cmp
adc
sti
pop
cmp
ja
data16
mov
in
ds
cmpsl
frstor
roll
fbstp
mov
sub
lock
or
das
lea
stos
pop
inc
inc
mov
data16
stos
fwait
push
mov
lret
jnp
jo
xchg
push
mov
adc
or
std
mov
xor
insb
or
shrl
lods
sbb
jae
mov
xchg
test
adc
loope
iret
negl
xlat
sbb
mov
mov
jmp
pop
repnz
fnstenv
lret
scas
loopne
pop
lcall
rcrl
pop
fdivrl
mov
adc
jle
jne
fisttpl
fisubrl
sarb
pop
sbb
mov
sbb
rolb
pop
mov
pop
xchg
sbb
mov
repnz
and
push
jae
outsb
push
mov
shlb
loop
mov
data16
insb
mov
or
mov
mov
leave
shr
data16
and
daa
dec
jne
es
adc
or
fidivrs
imul
jae
sarl
shrb
aas
and
enter
fwait
push
std
popa
xchg
lds
push
and
fiadds
push
cmp
dec
insl
push
stos
rclb
dec
hlt
pop
mov
inc
inc
lds
int3
lods
cld
xor
xchg
jb
sbb
jno
cmc
xchg
jns
jnp
mov
addr16
pop
stc
stc
data16
or
bound
dec
dec
aad
xor
fidivrl
dec
imull
xchg
pushf
adc
xchg
push
cmpsl
add
mov
in
rorb
or
push
sub
shll
pop
loopne
lret
cmp
and
insl
nop
xlat
fmuls
iret
mov
cmp
rcrl
jle
repnz
push
mov
sub
in
dec
mov
mov
testl
scas
into
das
push
sbb
lods
insb
pop
in
int
idivb
jmp
ret
mov
das
fcoms
rcl
mov
dec
into
jp
add
cmp
jne
aad
mov
adc
cld
fldcw
and
mov
outsb
mov
jle
int3
push
sbb
jae
add
pop
ljmp
lea
mov
hlt
push
or
mov
lods
leave
jecxz
les
andb
out
and
sub
mov
pop
mov
out
add
jnp
mov
ljmp
lahf
push
xchg
push
es
pop
sbb
aad
xchg
ret
mov
outsl
mov
ret
sbb
jno
fbld
jb
loope
sbb
jnp
fmul
pop
or
cmp
popf
push
mov
and
and
push
mov
lods
push
pushf
sarl
inc
mov
shlb
hlt
add
rol
gs
sbb
dec
or
jmp
test
pop
aas
dec
pop
fs
icebp
bswap
mov
xchg
lea
test
jbe
mov
aaa
mov
in
lods
pop
mov
lahf
lods
pop
dec
inc
in
dec
pop
push
pop
test
xchg
scas
mov
dec
std
add
jle
les
arpl
enter
sbb
xorb
pop
pop
inc
dec
lahf
inc
imul
xchg
inc
mov
sbb
int
push
xchg
mov
cmp
or
lret
mov
adc
or
in
dec
shrb
pop
fisubrl
push
inc
pop
or
jecxz
in
add
push
pop
stc
and
fisubrs
mov
cmc
xor
mov
outsl
dec
loope
mov
xor
add
inc
and
cmp
std
xor
adc
hlt
nop
pop
enter
lret
popf
icebp
jae
jbe
movsb
out
and
push
lods
faddl
loope
sub
nop
mov
adc
mov
ss
cmpsl
push
rcll
and
movsb
test
imul
pop
aad
repz
out
adc
pop
xchg
incl
add
and
roll
sbb
sub
sbb
push
or
and
jge
ja
psrlw
pushf
or
jmp
shll
shlb
or
xchg
dec
pop
push
and
ror
fwait
leave
add
dec
test
xor
mov
cmc
repnz
in
daa
pslld
jo
push
mov
lret
push
hlt
shlb
popa
in
out
fwait
mov
jecxz
fisubrl
or
cli
iret
imul
jge
or
mov
aaa
sub
das
sub
inc
sbb
shl
push
push
std
jl
fwait
stos
sub
popa
or
fwait
dec
inc
lods
xchg
aaa
mov
sub
stos
or
mov
mov
in
in
repz
sub
xor
nop
je
incb
int
iret
lods
pushf
arpl
or
ret
or
adc
in
lret
jl
aam
testl
cmp
les
inc
push
and
jae
nop
scas
adc
add
inc
cli
fs
pop
cmp
jno
jl
pop
push
fmull
orb
cmp
inc
testb
xor
cmp
inc
movsb
stos
mov
jnp
push
jne
mov
mov
pop
pop
sub
xchg
dec
xor
jne
mul
repnz
and
xor
dec
xchg
lock
in
pop
mov
mov
insl
ljmp
xor
xor
mov
dec
sub
ret
cmpsb
sbb
cmp
xchg
xor
lcall
nop
cmc
jp
lods
roll
inc
mov
jae
or
sub
sbb
pop
adc
dec
std
je
dec
fidivs
adc
lahf
test
sbb
sub
jg
cwtl
dec
xchg
movsb
mov
and
push
jge
lock
adc
pop
jne
xchg
push
daa
fists
xchg
iret
mov
xchg
je
insl
sbb
add
pop
pop
std
aam
dec
fsts
mov
pushf
cmp
fildll
adcl
aam
int
lcall
mov
xchg
insl
mov
sbb
into
xchg
or
mov
leave
ja
fld
mov
clc
xchg
push
pop
fildll
inc
movl
fwait
sub
push
jne
aaa
sbb
mov
cmpsb
arpl
cmc
push
xchg
es
out
shlb
ret
nop
hlt
lds
lea
push
insb
pop
mov
arpl
in
je
out
ss
insb
push
xor
fidivrs
cmpb
xchg
lea
sbb
jo
insl
push
dec
jne
inc
int
repnz
adc
pop
xor
out
push
sti
lods
sbb
sub
shlb
fbstp
mov
pop
cld
mov
mov
and
add
jmp
rcr
repnz
add
cmp
mov
add
loope
sub
pop
jle
mov
mov
push
es
lock
and
movsl
insb
and
add
les
jne
movsb
adc
or
negl
loop
iret
mov
dec
sbb
out
cli
mov
jns
sbb
xor
lahf
nop
es
ds
xchg
sub
or
aad
adc
push
add
fnstsw
fsts
inc
pop
sbb
aad
xor
inc
and
lds
outsb
push
mov
xchg
stc
fnstsw
in
cmp
xor
mov
cli
mov
xchg
inc
lret
test
cmc
repz
sub
sub
aam
js
xchg
mov
fistpl
rcrl
test
jno
inc
push
pusha
pop
out
pop
mov
out
hlt
mov
movsb
cmp
daa
xlat
or
pusha
cmpsl
push
push
mov
push
mov
mov
and
out
nop
repnz
rolb
test
ss
sbb
adc
push
sar
sbb
inc
sub
sub
dec
push
adc
xor
sti
sahf
or
xlat
mov
data16
out
xlat
and
outsb
cwtl
and
int3
cli
js
nop
pop
fimuls
pusha
push
xchg
xchg
xchg
scas
pop
insl
std
gs
xchg
pushf
leave
pop
test
int
sbb
xchg
adc
inc
aas
jo
xorb
pop
aad
sbb
dec
xor
jge
mov
push
xor
inc
test
cmp
cltd
mov
sub
bound
mov
repz
add
dec
mov
and
sbb
ss
aaa
adc
stc
xor
stc
jno
lock
inc
lods
dec
hlt
lahf
aaa
lods
mov
mov
push
cli
std
jnp
pop
jecxz
pop
mov
roll
mov
inc
arpl
mov
xchg
mov
mov
mov
cmp
jle
jge
pop
mov
push
xor
adc
push
inc
jns
jecxz
dec
sti
insb
arpl
cltd
mov
dec
outsb
sbb
jle
ss
push
mov
adc
sbb
adc
cmp
pop
dec
loop
xchg
add
mov
lret
pop
int
or
call
imul
popf
stos
ror
imul
push
jo
pushf
cmp
dec
sbb
out
stos
movhps
hlt
cmp
sbb
shlb
enter
mov
pop
inc
xchg
dec
and
js
mov
insb
mov
or
pop
stc
xchg
push
movhps
daa
ret
mov
ficomps
data16
push
mov
dec
cmp
arpl
adc
xor
cmpsb
mov
rcr
xor
cmp
xchg
shlb
jne
mov
or
xor
jge
mov
in
aam
jns
and
adc
sub
inc
mov
sub
mov
dec
jecxz
sub
mov
mov
add
and
das
mov
dec
in
xchg
adcl
cmpsb
mov
call
dec
arpl
js
enter
push
push
cli
pop
mov
or
xor
mov
jge
sub
and
and
pop
jecxz
insl
iret
xor
lret
jo
data16
mov
mov
ror
shll
push
lds
sub
jbe
pop
int
mov
xor
push
mov
scas
sub
pop
sub
data16
adc
dec
mov
adc
outsl
les
ret
shr
xor
dec
pop
ja
xor
repz
xor
repz
mov
lock
push
shlb
loopne
mov
movsb
xchg
sbb
inc
ljmp
je
mov
or
rcll
test
das
cmc
pop
pop
aas
add
push
dec
jmp
pop
imul
push
cli
xchg
in
mov
ss
and
outsb
cmp
cmp
pop
and
lahf
pushf
mov
pop
adcb
xchg
cmp
mov
pop
push
repnz
cmp
mov
jbe
push
jle
shrb
sbb
add
icebp
popa
ret
jle
jno
call
aam
and
xchg
and
scas
jns
xchg
jbe
push
cld
sub
iret
fs
fs
ds
sbb
dec
jnp
lcall
int
sub
add
test
jnp
add
sub
outsl
into
test
mov
rcr
mov
dec
cs
je
jo
jp
gs
insl
or
pusha
stc
arpl
adc
pusha
ds
xchg
jns
adc
xchg
loope
int
push
mov
pop
pushf
lahf
push
jbe
std
cwtl
add
aad
dec
fstp
cld
sub
sti
test
mov
dec
or
jbe
imul
xchg
jecxz
je
pop
sbb
lea
dec
js
adc
je
bound
mov
mov
ljmp
nop
daa
notl
jge
repz
cmp
das
dec
pop
dec
jae
inc
xchg
pop
mov
pop
dec
popa
or
addb
mov
stc
xor
divl
jnp
shlb
fldenv
xchg
in
cs
nop
test
pop
pop
fsubl
pop
jp
aas
cld
sbb
aad
xchg
mov
inc
shlb
leave
cltd
dec
and
jbe
call
mov
lods
int3
cmp
adc
data16
xlat
pop
data16
pop
inc
dec
sbb
jno
dec
push
mov
jb
ss
cltd
pop
xchg
jnp
xchg
pop
mov
