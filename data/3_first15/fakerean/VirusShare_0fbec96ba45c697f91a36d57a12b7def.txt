push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
cwtl
repnz
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
in
add
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
or
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
scas
push
inc
add
sbb
incl
sarb
mov
add
insb
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
stc
fildl
add
ret
lea
call
mov
cmp
jne
mov
mov
add
inc
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
add
mov
jmp
mov
push
mov
mov
call
mov
xor
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
test
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
or
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
add
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
pop
in
add
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
stc
flds
mov
mov
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
jno
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
mov
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
pop
out
inc
add
lea
push
mov
mov
add
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
aad
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
testl
testb
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
lock
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
jmp
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
ljmp
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
ret
add
xchg
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
push
push
call
mov
add
add
mov
out
jns
mov
add
js
cmpsl
lret
add
xchg
lods
lods
add
push
out
add
pop
mov
aad
add
mov
lock
xlat
add
mov
add
add
add
push
mov
add
push
push
push
push
push
push
call
mov
icebp
add
add
stc
faddl
push
mov
addr16
lods
xchg
jnp
xchg
add
sti
jno
imul
add
mov
add
lcall
jb
cmpl
jmp
in
pop
popl
push
push
push
lea
push
push
push
push
lea
push
push
push
call
ja
add
mov
mov
mov
fwait
mov
add
xchg
flds
xchg
mov
in
mov
add
test
add
js
add
scas
add
add
xchg
add
jo
add
mov
mov
add
add
sub
pop
push
push
push
push
push
push
push
push
call
imul
add
push
add
pop
js
ljmp
mov
rcll
in
fwait
add
sahf
mov
lret
mov
add
add
cwtl
aam
sub
pop
push
push
push
call
divb
push
in
add
add
add
jo
test
in
jne
add
testl
pop
sub
pop
push
call
push
lea
push
push
push
call
je
add
add
nop
pop
mov
add
add
sti
mov
pop
lods
add
add
mov
scas
add
add
add
sarb
add
add
add
add
call
push
push
push
call
scas
faddl
add
mov
lock
add
sti
push
jne
add
into
pop
movb
add
add
add
lea
push
lea
push
call
add
add
jne
add
mov
int3
mov
test
int
add
xlat
add
add
pop
adcb
lock
lcall
mov
add
push
push
push
push
call
arpl
xchg
add
sahf
push
lret
mov
add
add
add
xchg
add
jb
xchg
fsincos
stc
push
push
lcall
cltd
add
add
roll
add
lea
push
push
push
lea
push
call
add
popa
add
jb
fdiv
xchg
popf
add
jle
in
xchg
jbe
add
add
push
add
arpl
jecxz
push
mov
out
call
add
add
fucomp
int
std
out
pop
add
je
mov
push
add
add
pushf
mov
push
add
ret
push
push
push
lea
push
push
push
push
push
call
call
add
add
data16
add
pop
lea
add
cli
mov
imul
movsb
jnp
add
loopne
lcall
inc
hlt
push
push
push
push
push
push
lea
push
lea
push
push
push
call
testb
add
add
sbb
lea
add
ljmp
add
add
loopne
xchg
add
add
mov
sub
pop
mov
add
push
push
push
push
push
call
fsubp
add
add
mov
pop
add
jecxz
sbb
fnstenv
ret
test
pop
add
push
ljmp
cld
stos
sub
pop
add
push
push
push
push
push
push
push
push
call
mov
fs
add
add
add
add
mov
xchg
bound
pop
pushf
popa
add
add
ror
cwtl
in
cmpsb
pop
add
add
mov
xor
push
push
push
or
not
add
sub
xor
not
dec
sub
not
pop
sub
add
add
pop
push
push
push
lea
push
lea
push
call
add
out
add
pop
test
scas
jge
leave
add
add
jnp
add
add
sub
pop
pushl
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
jl
ljmp
add
outsl
jae
cmc
add
add
add
add
add
push
add
sub
roll
lock
push
push
push
lea
push
lea
push
push
push
push
push
call
gs
fwait
clc
test
jnp
pop
lahf
push
add
pop
add
mov
clc
movsl
add
add
add
mov
js
add
pop
nop
add
scas
add
scas
jno
push
idiv
fsub
test
test
push
add
jmp
add
add
mov
fdivr
lcall
inc
call
adc
push
push
push
push
call
jp
add
add
in
andl
rol
int3
add
xchg
jne
jb
imul
call
pop
push
enter
add
add
add
push
stos
add
push
sub
clc
xchg
stos
add
add
add
sbbl
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jae
aad
jno
rcl
mov
movsb
xlat
jecxz
add
or
ror
xchg
mov
mov
cld
addr16
add
mov
xchg
in
add
lcall
jne
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
js
add
clc
pushf
cmpsl
jecxz
pop
int3
add
add
add
loop
pushf
add
lock
sti
out
push
into
int3
flds
add
add
push
pop
push
into
sub
pop
pushl
push
push
push
push
push
push
push
push
lea
push
push
call
jbe
lods
add
add
add
add
add
mov
add
xchg
add
add
call
lcall
and
add
lea
push
lea
push
lea
push
push
push
push
push
push
call
pop
mov
cli
call
mov
add
hlt
add
add
jbe
jo
out
aad
add
mov
jmp
pop
add
aam
fwait
push
call
mov
roll
add
in
add
add
lods
in
mov
xchg
iret
add
add
mov
push
add
add
add
push
add
add
pushl
push
push
push
call
mov
js
cwtl
add
add
out
push
arpl
add
mov
repnz
lock
mov
mov
rolb
addb
add
ffreep
imul
cltd
add
mov
in
lods
add
xchg
add
je
add
pop
sub
pop
pushl
push
push
push
push
push
call
aad
add
std
add
mov
add
jns
in
push
push
add
push
aad
add
push
add
rolb
add
jecxz
mov
xchg
idivb
add
push
mov
add
lcall
mov
add
push
push
add
rol
add
push
push
pop
add
add
xor
dec
sub
shl
dec
ror
pop
not
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
xchg
xchg
mull
add
add
mov
pop
add
mov
push
add
add
xchg
in
repnz
add
add
movb
push
loop
add
add
add
add
add
add
add
fdivr
lcall
jne
push
lea
push
lea
push
push
push
push
call
int
lahf
cwtl
cmc
push
cmpsl
test
add
mov
add
jno
cmpsb
addr16
mov
loope
mov
xchg
jle
addb
add
add
push
nop
mov
xlat
add
sbbb
mov
jge
stc
mov
aad
fists
in
call
add
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
mov
mov
mov
cwtl
mov
rolb
mov
add
rolb
int3
lods
add
int3
mov
lods
jno
jo
xchg
add
jb
divb
pop
arpl
add
add
fadd
jnp
popf
ret
push
lock
popl
loop
mov
add
add
add
lcall
inc
push
push
add
push
and
add
xor
sub
lea
shl
lea
pop
sub
ror
sub
pop
push
push
push
push
push
call
roll
add
mov
mov
lds
test
add
insb
add
add
gs
jns
xchg
div
add
loop
mov
xchg
ficomps
sub
pop
push
push
lea
push
push
push
lea
push
call
enter
faddl
add
push
add
mov
pop
add
data16
add
add
mov
flds
test
add
movsb
add
ljmp
stos
add
xchg
add
add
ret
icebp
cld
jns
add
imul
mov
movsl
scas
ljmp
lcall
add
rclb
cmp
mov
push
call
jbe
jge
notb
add
sarb
arpl
les
add
sti
cmpsl
fwait
enter
mov
movsl
insb
pop
push
push
xchg
add
mov
pop
add
push
add
cld
popa
jnp
mov
in
lock
mov
push
push
push
push
call
mov
xchg
add
fadds
add
idivb
add
js
lret
mov
ficompl
testb
xchg
test
js
arpl
jo
xchg
scas
jbe
mov
add
add
scas
add
add
addb
filds
jae
in
rolb
lcall
push
push
push
push
lea
push
call
popf
add
add
add
add
push
jmp
add
loope
add
add
add
into
add
jb
pop
fiaddl
jns
pop
test
les
movb
add
add
add
scas
mov
rol
sub
pop
push
mov
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
jne
jo
je
popa
add
add
add
rolb
jge
add
add
add
add
add
add
lock
hlt
ret
xchg
mov
add
add
add
add
add
pusha
js
add
addb
add
add
loope
sub
pop
add
push
lea
push
push
push
push
lea
push
call
add
add
popf
jge
movsb
mov
stos
add
lock
pushf
rcrl
insb
add
push
mov
ja
aad
mov
arpl
ja
out
test
add
neg
add
outsl
repnz
add
mov
jp
xchg
imul
test
int3
mov
movsl
sub
pop
add
add
push
lea
push
push
push
call
ja
nop
fsubl
xchg
add
repnz
mov
pop
pop
rclb
add
add
hlt
lret
add
fsub
stos
add
add
add
flds
fwait
push
pop
cltd
add
lret
sub
pop
mov
xor
push
push
push
push
lea
push
call
in
push
add
ljmp
mov
add
bound
add
mov
mov
sti
outsl
mov
xchg
add
addb
pop
add
push
push
push
push
push
lea
push
lea
push
call
sti
xchg
icebp
fwait
lods
icebp
add
mov
stos
jno
add
add
in
add
pop
add
add
mov
add
js
push
stos
jo
add
add
add
rorb
idivl
popf
mov
out
add
roll
mov
in
lcall
mov
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
lcall
add
push
int3
fdivrs
icebp
lcall
in
rorb
add
add
leave
mov
add
rcl
pop
xchg
jecxz
add
add
rcrl
out
sbbl
add
add
push
mov
add
insb
add
in
fdivr
lcall
add
push
push
lea
push
push
lea
push
call
in
add
add
pop
icebp
push
loopne
arpl
add
add
add
add
fldl
ja
add
test
mov
add
push
icebp
rolb
idiv
add
fadds
add
les
jo
popf
mov
mov
add
lcall
les
push
push
lea
push
push
call
rolb
add
add
les
add
stos
add
add
fiaddl
addl
rcrb
subb
add
add
sub
pop
add
push
lea
push
call
jecxz
add
loopne
rolb
lcall
add
lods
nop
in
add
add
mov
push
je
in
clc
lcall
push
push
call
les
jno
fadds
out
add
jne
add
add
add
mov
add
add
jb
add
add
add
xchg
xchg
outsl
jb
add
add
add
jl
movl
enter
cmc
mov
in
clc
pop
mov
xor
push
lea
push
push
call
hlt
add
out
mov
popa
je
mov
push
jb
mov
add
add
add
add
jo
xchg
add
add
into
add
push
add
mov
in
hlt
pop
push
mov
push
push
push
push
push
lea
push
call
popa
out
mov
xchg
shlb
repnz
ret
hlt
mov
add
jb
loope
add
mov
cwtl
add
add
add
add
sub
pop
xor
push
push
push
call
mov
pushf
enter
add
xchg
in
in
add
mov
idivl
jb
les
add
add
add
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
push
xchg
jge
lods
jp
jl
fwait
add
flds
leave
movsb
add
call
xchg
in
mov
repnz
rorb
push
mov
mov
in
fdivr
lcall
enter
enter
xor
pop
rep
push
xor
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
repnz
add
add
nop
add
add
pop
data16
roll
jo
popa
lds
push
add
cmc
jp
cltd
add
add
stc
add
mov
add
add
addr16
add
mov
fcomps
pop
hlt
push
push
push
call
add
fwait
add
push
add
sahf
test
add
add
lds
add
add
push
lret
pop
mov
add
pop
in
add
push
sub
sub
dec
pop
add
mov
xor
push
push
call
in
int3
rol
movl
add
pusha
push
pop
add
add
out
icebp
add
ljmp
testl
add
movsb
jb
add
add
push
add
in
add
add
add
push
add
pop
mov
inc
ja
sub
pop
mov
push
push
push
push
push
lea
push
call
push
aad
add
mov
gs
lock
loopne
add
push
mov
add
leave
movsl
lods
out
stos
mov
filds
add
add
add
addl
add
arpl
add
add
jl
cmpsl
in
push
in
mov
jno
in
in
pop
xor
push
push
push
push
push
push
call
fabs
add
jbe
add
js
add
push
add
add
add
xchg
subb
add
lahf
bound
add
mov
xchg
ja
add
lcall
les
push
push
push
push
push
push
push
push
push
call
fs
add
add
add
mov
mov
pop
filds
movb
push
loopne
in
xchg
addl
mov
ljmp
addb
add
push
add
mov
in
fcomps
dec
sub
pop
jae
push
push
call
pop
add
fcmovu
add
rolb
testb
add
aam
lea
cli
icebp
mov
pop
cltd
push
add
mov
cwtl
test
add
ljmp
jl
les
pop
popa
add
incb
jne
lret
imul
sub
pop
xor
push
lea
push
push
push
call
fcompl
add
add
mov
sahf
add
in
add
add
addb
add
mov
add
add
ljmp
testl
sub
pop
add
push
push
push
call
add
lods
jno
add
call
mov
add
jbe
add
add
xchg
std
add
sub
pop
add
push
lea
add
pop
add
push
push
call
fwait
mov
fstl
mov
rcrb
mov
mov
mov
add
cmpsl
fstl
mov
add
add
in
mov
fcomps
je
fsubrl
hlt
out
sahf
add
sub
pop
mov
push
push
dec
sub
push
xor
add
shr
dec
sub
pop
shr
lea
pop
push
sub
add
not
pop
pushl
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
xchg
testl
stos
add
mov
out
add
mov
leave
add
mov
jo
mov
add
into
add
add
sar
test
shll
add
leave
add
int3
add
cmpsb
add
sub
pop
call
push
push
push
push
push
pop
add
not
sub
shr
not
lea
pop
ror
pop
push
dec
sub
xor
pop
push
push
push
shr
sub
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
filds
add
add
pop
pop
pushf
test
add
xchg
add
iret
add
std
cld
add
add
jbe
add
add
incb
add
shr
add
push
add
add
test
xchg
push
addr16
add
ja
add
add
in
xchg
mov
xchg
mov
add
shr
add
lods
fs
pop
mov
push
push
rol
ror
rol
dec
pop
push
push
rol
pop
mov
add
push
lea
push
lea
push
lea
push
push
call
jno
rcl
movb
lcall
test
xchg
arpl
fildl
mov
add
add
cli
in
pop
add
add
sti
iret
ret
icebp
add
jo
xchg
add
mov
add
push
lea
push
call
addr16
enter
add
add
push
pop
test
add
pop
add
add
add
xchg
out
outsl
add
jns
mov
add
test
add
add
fisubs
add
imul
add
add
loopne
sub
pop
add
mov
push
push
lea
push
push
push
push
push
push
call
push
add
add
jo
data16
enter
mov
add
add
cld
lret
in
mov
rolb
loopne
test
add
call
mov
add
mov
popl
add
add
xor
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
movsb
xchg
fxch
xchg
mov
add
add
add
cld
add
jmp
add
add
add
addl
add
add
jns
add
add
add
data16
mov
fdivr
lcall
les
add
push
sub
shr
sub
ror
pop
add
push
sub
sub
dec
pop
push
mov
xor
push
ror
pop
add
push
shr
pop
pop
push
pop
mov
xor
push
not
sub
add
pop
rep
mov
xor
push
push
call
add
add
add
jo
push
mov
out
cmpsb
imul
add
outsl
add
add
enter
sub
pop
or
je
mov
xor
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
jmp
add
add
pusha
add
add
add
add
jbe
add
add
push
add
popa
xlat
mov
int
push
in
add
add
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
imul
arpl
add
pop
ret
addl
add
add
xchg
aad
pop
addl
add
add
add
add
icebp
add
mov
addl
push
fstp
add
jb
divb
jns
gs
jo
add
add
in
in
lcall
adc
push
push
push
lea
push
lea
push
call
int3
push
add
add
rcrl
mov
add
add
fistps
mov
add
loop
add
test
clc
add
lret
pusha
add
add
add
mov
add
enter
mov
add
add
cmpsb
add
lcall
les
sub
pop
add
push
push
call
fcomps
jne
rol
fnsave
add
mov
add
jne
add
movb
mov
call
je
add
fiadds
add
popa
mov
add
add
fiadds
add
xchg
rolb
out
in
clc
lcall
jne
push
push
add
ror
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
push
call
jp
pop
add
fwait
movsl
call
movsl
add
pop
jnp
mov
add
add
pop
mov
hlt
add
push
add
cmpsl
add
add
lock
push
lea
push
push
lea
push
call
add
mov
add
mov
cld
push
add
push
push
lcall
pop
out
mov
add
jge
jo
pushf
add
add
add
add
js
out
push
les
push
rol
sub
pop
rep
mov
xor
push
lea
push
push
push
lea
push
lea
push
call
fiadds
aad
xchg
add
loop
push
aam
out
movl
mov
add
xchg
js
mov
cld
pop
add
cltd
pop
add
xchg
lods
mov
roll
add
push
add
jae
jno
push
pop
pop
add
mov
push
add
push
push
lods
std
mov
in
add
mov
call
test
add
sub
movb
add
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
push
add
push
pushf
add
add
jecxz
lods
add
pusha
add
xchg
cld
in
add
ja
pop
add
push
add
clc
mov
add
cld
ja
mov
add
sub
pop
rep
pop
push
push
dec
push
or
inc
add
add
sub
shr
shr
shr
shr
pop
sub
shr
pop
push
add
pop
pop
push
push
push
push
call
in
lods
jnp
pop
stos
in
pop
mov
mov
int
fsub
add
add
lret
shll
mov
iret
push
jl
cwtl
fsub
scas
rcl
mov
les
lcall
int
add
jge
push
add
filds
sub
pop
mov
push
push
lea
push
push
push
call
pop
jae
fs
add
mov
cld
pop
test
fwait
push
js
out
push
mov
jbe
js
cltd
add
jecxz
sahf
pop
jecxz
jl
add
in
loopne
in
in
pop
mov
push
lea
push
call
jno
xchg
jp
movb
add
add
xchg
xchg
mov
add
bound
out
pushf
lret
add
fiadds
add
stos
test
add
cld
push
push
addl
cwtl
repnz
imul
inc
and
push
push
push
push
call
cmc
add
jne
in
popa
add
xchg
sahf
leave
add
jmp
mov
cltd
fldcw
icebp
add
add
add
add
test
add
lods
fiadds
add
push
fs
test
add
js
xchg
iret
mov
faddl
sub
pop
jmp
push
lea
push
push
push
push
push
call
iret
mov
add
add
scas
add
je
pusha
pop
push
cmpsb
js
in
in
aad
mov
cmc
add
add
add
cwtl
add
sub
pop
push
mov
push
inc
not
shr
pop
add
push
push
lea
push
call
lahf
addl
pop
out
shr
add
in
out
pusha
fldenv
out
add
add
add
add
fldlg2
xlat
test
add
push
subl
mov
int
add
adcb
je
sub
pop
push
push
push
push
push
push
call
jnp
add
fsts
add
xchg
roll
loopne
add
cmpsl
loop
into
add
cwtl
add
mov
lret
addb
jne
fcmovu
xchg
cli
add
sahf
sub
pop
push
push
push
call
fmul
add
cmpsl
add
add
add
push
add
add
add
add
add
sahf
in
xchg
insb
add
loop
add
clc
lcall
push
inc
pop
push
mov
push
sub
add
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
fstpt
rolb
faddl
cmc
add
rolb
add
pop
stos
addb
mov
add
add
add
add
mov
add
leave
int
add
jge
add
add
xchg
mov
lock
cwtl
movsl
lea
add
add
add
add
add
pop
pop
push
push
lea
push
lea
push
push
call
add
arpl
mov
cltd
test
jnp
pushf
mov
add
mov
push
out
les
add
mov
jmp
jge
jmp
in
in
pop
pop
pop
push
push
call
add
cwtl
add
mov
lock
sarb
add
add
mov
fdivr
mov
mov
imul
jge
add
sti
clc
push
add
add
lahf
add
add
mov
add
add
add
lea
in
mov
add
in
clc
lcall
push
add
pop
ret
push
push
inc
shl
lea
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
leave
add
lods
mov
jnp
xchg
add
pop
add
add
push
add
jae
ja
lret
mov
mov
xlat
add
pop
push
pop
add
insb
mov
in
jo
mov
lcall
clc
push
push
push
push
push
call
int3
add
add
pop
add
xchg
push
add
jl
popa
scas
add
mov
std
jnp
add
add
rolb
mov
lock
pop
add
add
pop
push
aad
ficoms
insb
sub
pop
push
push
add
pop
push
push
push
pop
movl
push
push
push
push
lea
push
push
push
call
add
add
add
add
test
jle
faddl
aam
add
test
add
push
stos
add
add
std
add
test
pop
push
pusha
xor
add
add
in
lret
mov
fmuls
add
xchg
pop
mov
add
lds
sub
pop
addl
push
lea
push
push
push
push
push
push
push
push
call
out
mov
mov
add
mov
fidivrl
add
lahf
add
add
add
pop
add
stos
neg
add
in
jecxz
add
divl
gs
aam
mov
add
add
loope
lock
mov
mov
mov
imul
lcall
rorb
add
add
add
shl
xor
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
call
push
xchg
add
add
add
aam
andl
lcall
leave
xchg
lds
hlt
imul
popf
sub
pop
pop
pop
push
push
push
call
add
andl
add
icebp
pop
lcall
jnp
sti
sarb
lret
cmc
add
clc
xchg
add
pop
pop
sub
pop
pop
push
push
push
push
push
call
mov
iret
out
add
add
lds
add
test
je
fistpll
jge
jo
add
add
je
sub
pop
pop
push
push
call
push
xchg
fs
add
leave
imul
pop
mov
add
add
mov
test
add
je
add
outsl
js
add
add
push
push
push
lea
push
push
push
call
pop
mov
add
add
fsubl
test
add
add
add
add
add
add
call
ret
push
inc
pop
push
push
lea
ror
xor
pop
mov
add
push
push
push
push
lea
push
push
call
scas
add
add
add
xchg
imul
add
add
loop
add
add
xchg
mov
cwtl
std
stos
into
add
add
lods
lock
jnp
rolb
mov
add
add
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
xchg
add
enter
add
add
push
add
pushf
push
mov
popa
mov
add
insb
push
pop
jge
lret
fucomip
xchg
push
push
aam
mov
add
mov
jne
call
imul
add
in
add
je
add
loop
loope
loope
jo
loop
movsl
in
add
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jmp
fwait
rcr
cli
data16
add
in
loop
add
pop
jl
mov
xchg
add
mov
mov
pop
testl
addl
push
sub
pop
push
push
pop
call
push
lea
ror
sub
pop
mov
push
lea
push
push
push
push
call
jo
imul
add
add
add
std
loopne
add
add
rcr
mov
nop
pusha
out
add
add
out
lds
push
add
mov
add
add
add
clc
lods
add
lcall
jne
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
pusha
add
add
add
imul
lcall
scas
imul
add
test
jecxz
cmc
js
mov
add
cmpsb
mov
in
loopne
lcall
call
lea
push
push
lea
push
push
push
push
call
sahf
stos
pusha
arpl
push
jge
add
lods
add
add
xorl
popf
loope
outsl
push
out
push
pop
add
mov
add
stos
add
pop
sub
pop
push
push
xor
pop
call
push
push
lea
push
push
lea
push
lea
push
call
out
cmc
add
fucomi
mov
mov
add
jp
mov
jb
addr16
xlat
add
mov
nop
addb
fcmovu
add
imul
call
add
test
push
push
push
push
push
push
push
push
push
call
popl
add
adcl
add
add
push
add
add
add
push
stc
push
out
add
add
add
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
scas
mov
scas
mov
data16
add
insb
mov
add
add
add
add
add
lret
add
add
les
lock
push
push
lea
push
push
lea
push
push
push
lea
push
call
mov
add
mov
test
std
push
stc
push
pop
add
jmp
test
jle
jae
lea
add
test
push
push
call
mov
out
stos
add
push
push
fadds
aad
lret
mov
js
push
int
add
fiadds
add
pop
add
roll
popf
mov
out
add
cmc
add
add
movsb
mov
testl
add
mov
fnstcw
add
into
mov
add
sub
pop
pop
leave
push
add
shl
dec
pop
ret
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
sahf
rolb
add
add
add
out
in
add
stc
jne
add
add
pop
lods
mov
lods
add
aam
jl
add
add
stos
add
add
add
int3
jl
add
lds
fildl
add
je
stos
pop
add
add
add
in
push
shl
sub
pop
add
push
add
sub
not
pop
push
push
ror
inc
pop
push
push
lea
push
push
lea
push
call
imul
leave
testb
lea
add
leave
add
mov
add
add
popf
int
mov
mov
in
lock
lcall
push
inc
pop
push
push
push
push
push
push
push
lea
push
push
call
add
jmp
addb
add
fistpl
mov
push
lret
add
add
mov
add
out
imul
mov
add
push
pop
imul
add
xchg
in
js
sahf
push
add
add
lcall
inc
cld
add
add
call
push
push
xor
inc
pop
call
push
push
call
add
add
jl
add
cwtl
add
push
stos
in
add
mov
jle
ja
add
add
add
add
lods
mov
cld
xchg
add
sub
pop
subl
push
not
sub
sub
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
push
lea
push
call
int
add
cltd
push
rolb
pop
loopne
hlt
add
add
jecxz
mov
neg
add
mov
mov
mulb
add
js
add
mov
sahf
mov
add
call
mov
icebp
test
loopne
pop
push
push
call
add
mov
scas
mov
push
add
mov
shll
cli
neg
add
add
add
push
xor
not
ror
pop
pop
pop
push
lea
push
push
push
push
push
call
shl
jne
add
cmc
add
test
add
testl
test
movsb
sti
lods
add
ja
test
lods
add
test
movsl
add
add
add
jp
add
lret
add
mov
add
mov
int3
add
in
movl
cwtl
les
insb
add
lcall
ret
push
xor
pop
push
push
add
rol
pop
mov
push
pop
add
push
push
push
lea
push
push
lea
push
push
call
add
add
xchg
push
clc
add
jl
ljmp
jns
mov
mov
mov
fiadds
jp
iret
cmpsl
mov
clc
add
mov
in
call
and
dec
loopne
mov
enter
push
fsubl
push
push
call
mov
repnz
xlat
jl
add
testl
mov
shlb
add
std
add
cli
rolb
scas
add
jno
mov
xlat
add
push
push
lea
push
lea
push
call
add
add
add
stos
out
cli
add
add
addr16
add
add
jo
out
add
mov
add
mov
lcall
push
inc
add
pop
mov
push
lea
pop
lea
push
dec
pop
sub
push
push
push
call
mov
add
xchg
add
jp
bound
push
add
cmc
mov
add
add
jo
in
hlt
pop
mov
push
add
dec
not
pop
shr
push
shr
inc
pop
add
push
inc
rol
pop
mov
push
xor
add
pop
mov
push
ror
not
sub
pop
add
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
xchg
mov
data16
add
fldl
shr
test
fcmovnb
mov
mov
add
add
add
arpl
mov
scas
push
add
loop
add
mov
lahf
sub
pop
add
push
push
push
lea
push
push
lea
push
call
add
jl
mov
mov
fwait
leave
add
jl
push
add
mov
ja
sub
pop
mov
push
rol
inc
add
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
push
scas
pop
imul
rol
in
add
add
out
add
addl
movb
add
pop
cmp
add
cmp
jne
cmp
jne
push
push
push
call
pop
push
add
andl
add
add
mov
pop
iret
mov
nop
cld
mov
out
adcl
mov
aad
sub
pop
mov
push
push
push
push
push
lea
push
call
add
add
mov
hlt
test
imul
add
fistpll
test
add
add
add
add
stos
add
add
add
arpl
negl
test
add
mov
mov
jns
addl
add
add
jmp
push
push
push
call
popl
lret
ja
add
add
add
mov
add
iret
xchg
lods
mov
add
pushf
add
add
xchg
pop
add
add
jp
add
add
lds
jl
push
add
repnz
xchg
add
jge
jo
add
pop
mov
push
push
push
push
push
lea
push
call
test
add
jecxz
mov
xchg
int
jno
add
mov
mov
add
jno
cmpb
add
iret
add
scas
add
fdivl
add
not
mov
jne
add
test
add
xlat
add
popa
mov
jp
add
lea
add
repnz
faddl
lcall
push
or
enter
ljmp
popl
add
push
inc
shr
inc
pop
mov
push
push
push
push
push
lea
push
call
xchg
add
lods
add
sahf
add
fiadds
add
popf
jnp
cltd
mov
xlat
mov
add
add
mov
add
cmpsl
cld
popl
sti
add
mov
rolb
test
ljmp
jo
add
mov
jmp
outsl
add
call
movl
jmp
push
not
ror
not
pop
mov
mov
push
lea
sub
dec
inc
pop
cmp
jne
push
inc
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
call
push
lea
nop
add
arpl
fwait
pop
add
out
mov
stc
jb
jge
mov
push
mov
push
mull
fiaddl
add
mov
add
loop
jp
add
loopne
movl
jmp
push
inc
sub
pop
mov
push
lea
pop
cmpw
jne
push
ror
add
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
fiadds
fisubrl
xchg
popa
cwtl
xchg
fsubl
fcomp
jecxz
push
xchg
jb
outsl
add
mov
pop
add
iret
add
jp
mov
mov
add
add
add
insb
add
add
lods
push
imul
mov
mov
sub
pop
movl
push
push
call
roll
cltd
add
push
push
add
fstp
mov
add
add
add
cmpsb
add
mov
add
call
jge
fdivs
add
aad
xchg
int3
ljmp
push
push
pop
aam
add
add
push
pushf
mov
imul
add
cld
jbe
sub
pop
jmp
push
lea
shr
add
pop
pushl
push
xor
shl
inc
pop
pop
mov
push
push
push
push
call
add
jae
shrb
cwtl
add
shlb
add
imul
pop
mov
mov
mov
mov
add
jmp
pop
add
mov
hlt
cwtl
ror
add
fwait
mov
addl
sti
jae
pusha
mov
fldl
add
pop
mov
push
push
push
call
jb
lret
subl
add
pop
lcall
mov
imul
lahf
add
add
jecxz
lahf
mov
add
movsl
xchg
cltd
sti
push
add
cld
cli
jmp
add
rcrl
pop
mov
push
push
push
sub
add
sub
ror
sub
sub
dec
shr
pop
ror
pop
push
push
lea
push
lea
push
push
push
push
call
andl
add
jno
addr16
mov
fadds
add
xlat
add
cld
pop
add
xchg
ret
aad
mov
pop
sbbb
add
fbld
add
in
add
add
cwtl
test
add
push
push
push
lea
push
push
push
push
push
push
call
mov
mov
pop
popf
add
lcall
bound
aam
add
pushf
fidivrs
add
add
pop
push
jp
add
lds
add
push
iret
jp
fldt
aad
add
lret
test
add
rolb
add
jp
repnz
add
lcall
roll
add
test
rorb
push
call
leave
mov
add
fldl
add
hlt
in
mov
ja
add
add
jl
jl
jge
mov
jp
jo
stos
imul
jle
pop
add
loop
add
mov
cmpsl
lds
int
sub
lcall
js
int3
fldz
ret
leave
or
add
mov
push
sub
add
rol
push
xor
add
shr
sub
xor
pop
lea
pop
push
lea
push
push
call
lret
add
add
add
in
imul
add
push
repnz
rolb
les
add
xchg
add
lcall
push
push
push
push
push
push
push
push
push
call
xchg
cmpsl
push
xchg
add
add
add
jo
pop
push
push
lods
test
scas
add
outsl
mov
insb
roll
scas
ljmp
cld
add
out
add
call
push
push
push
lea
push
push
push
push
call
loop
out
add
repnz
mov
mov
add
add
mov
mov
mov
add
imul
test
lods
popf
jmp
in
cmpl
je
push
push
inc
push
and
add
inc
add
sub
not
dec
pop
not
not
pop
push
push
push
call
jbe
add
pushf
pop
cwtl
mov
icebp
push
add
add
imul
mov
add
add
shl
add
push
in
roll
add
add
insb
sub
pop
push
call
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
nop
lcall
push
pop
mov
mov
mov
add
insb
shr
add
faddl
jns
rolb
je
imul
add
lahf
rclb
add
add
mov
addb
in
fdivr
lcall
js
int3
fldz
ret
ret
add
cld
mov
inc
ror
shr
push
or
inc
add
dec
shr
sub
shl
add
dec
pop
add
shr
rol
pop
push
add
lea
shr
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
call
fsubrl
into
jns
std
lock
mov
add
add
mov
add
add
jmp
add
clc
xchg
lods
movsb
add
in
lds
add
add
add
add
add
mov
call
push
lea
xor
sub
pop
cmpl
je
push
push
add
lea
ror
push
and
add
inc
inc
sub
xor
sub
ror
add
dec
pop
ror
shr
sub
ror
pop
push
rol
not
pop
push
call
push
xor
pop
cmpl
je
push
push
add
shl
push
or
not
add
add
xor
sub
shr
dec
not
pop
dec
inc
sub
shl
pop
push
not
pop
push
call
push
push
lea
push
push
call
pop
push
xchg
xchg
add
movsl
add
add
out
lret
test
add
mov
add
add
add
stos
stc
fnsave
add
jb
insb
fistpll
shrb
jle
in
lock
lcall
cmp
rol
je
push
push
add
push
sub
add
inc
dec
sub
sub
not
pop
lea
ror
not
pop
push
push
lea
push
push
push
push
push
call
mov
in
add
mov
leave
add
add
iret
add
in
add
movsb
add
add
jp
add
cwtl
cwtl
cwtl
push
add
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
push
add
enter
add
add
add
test
add
pushf
push
std
add
jne
sub
pop
call
push
lea
push
push
push
lea
push
lea
push
call
add
jp
add
push
fdivrs
jmp
add
sahf
lods
add
add
add
sti
xchg
add
add
aam
out
mov
loopne
sub
pop
cmpl
je
push
push
sub
shr
push
xor
add
add
rol
sub
inc
pop
lea
pop
push
sub
not
xor
pop
push
push
pop
call
push
lea
push
push
push
push
push
push
call
add
movsl
add
mov
add
add
popa
repnz
pop
add
mov
roll
lds
xchg
add
jo
add
insb
movsb
andb
add
jmp
add
add
scas
mov
lods
cli
add
cmpl
je
push
push
add
push
or
not
add
shl
sub
not
xor
shr
pop
sub
shr
shl
sub
pop
push
push
lea
push
push
push
push
call
add
pop
add
jae
add
add
pop
add
add
data16
addb
cmc
pop
int
aad
mov
mov
add
mov
stc
add
loope
add
xchg
push
push
xor
pop
call
push
lea
dec
dec
pop
cmpl
je
push
push
sub
shl
push
sub
add
dec
sub
ror
ror
pop
dec
lea
pop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
mov
add
add
cmpsl
imul
mov
mov
add
mov
test
xchg
pop
jnp
hlt
mov
add
pop
add
int3
mov
add
les
push
push
push
lea
push
push
lea
push
push
call
mov
aam
xchg
sarl
add
cwtl
xlat
add
mov
lods
push
add
lret
mov
add
fisttpll
add
lds
in
sub
pop
call
cmpl
je
push
push
add
not
push
push
pop
add
add
sub
add
not
pop
add
xor
rol
pop
push
shl
pop
push
push
shr
pop
call
push
push
push
push
push
push
lea
push
push
call
add
add
pushf
add
add
add
cmpl
jne
sub
pop
cmpl
je
push
push
rol
rol
not
ror
push
push
pop
add
dec
dec
sub
sub
add
dec
dec
pop
sub
pop
push
add
pop
push
push
push
push
call
jns
xchg
add
add
cltd
hlt
add
jne
fwait
add
fnclex
insb
mov
test
add
je
add
popa
scas
add
add
add
add
aam
mov
roll
add
push
add
add
add
pop
jge
in
push
out
jb
jns
popa
push
sub
pop
call
cmpl
je
push
push
xor
push
and
add
sub
rol
lea
pop
add
shr
sub
rol
pop
push
push
call
xchg
jle
push
popa
lods
rol
loopne
mov
add
inc
icebp
roll
add
mov
mov
aam
addr16
push
push
add
add
pop
xchg
add
lret
movb
add
lcall
add
imul
add
sub
pop
push
push
push
call
jmp
add
addr16
stos
mov
add
add
add
add
movsl
test
xchg
add
pop
aaa
add
cmpl
jne
push
push
push
lea
push
lea
push
push
push
push
call
imul
add
add
add
jp
fidivrs
pop
add
add
add
scas
pop
add
add
jns
pushf
je
push
ret
mov
imul
pop
add
add
add
scas
ja
in
loopne
mov
movl
push
lea
push
push
push
push
push
push
push
push
call
cmpsb
movsb
mov
movsl
scas
jo
add
mov
add
js
mov
lods
pop
push
ljmp
pop
clc
nop
add
mov
call
xchg
push
filds
xchg
add
xchg
outsl
push
add
lods
xchg
xchg
add
xchg
stos
add
sub
pop
jmp
xor
push
push
push
lea
push
push
lea
push
push
push
push
push
call
movsb
add
xchg
in
js
pop
add
add
js
add
add
add
jle
les
shlb
cli
add
mov
pop
push
dec
sub
rol
pop
pop
pop
push
shr
lea
not
pop
pop
leave
push
push
push
push
lea
push
push
call
add
add
scas
loopne
mov
mov
fiaddl
rol
gs
push
add
add
fldcw
jne
push
movl
incb
lcall
or
push
sub
pop
push
push
push
call
enter
add
out
mov
fists
mov
loopne
add
add
add
add
add
mov
mov
subl
jecxz
xlat
push
ja
add
hlt
lahf
fwait
movsl
add
clc
lcall
in
add
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
jns
add
xchg
loop
scas
xchg
outsl
fwait
repnz
add
mov
jne
xchg
add
add
lock
mov
mov
add
xchg
aad
imul
rcr
mov
lods
add
add
add
movsb
jmp
test
add
into
add
cmpl
jne
push
push
add
dec
add
push
and
add
ror
lea
add
sub
add
not
inc
lea
pop
lea
shl
add
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
imul
cld
cmc
cltd
add
int
push
js
xchg
add
cmpsb
add
add
add
imulb
out
add
xchg
shr
int3
add
add
test
add
add
popa
sub
pop
pushl
call
push
shr
inc
xor
pop
push
push
push
push
push
push
push
push
lea
push
call
push
mov
fwait
jno
sti
pop
add
lret
add
jne
mov
add
out
out
pop
roll
ror
pop
mov
add
add
lahf
ret
mov
ret
xchg
lock
add
add
add
lds
add
add
add
lcall
rclb
pushf
lea
push
push
push
call
mov
test
cmpb
rcl
into
add
mov
arpl
les
mov
mov
push
hlt
test
add
std
jo
je
pop
mov
add
mov
add
loop
add
popa
add
add
add
add
fildl
add
add
add
add
cli
mov
in
in
pop
jmp
push
push
call
mov
xchg
lret
loopne
in
lret
xchg
popa
mov
in
add
lahf
add
add
add
push
shrb
cmc
loop
movsb
sub
pop
cmpl
je
push
push
push
call
mov
mov
pop
jne
add
jp
add
add
xorb
imul
in
repnz
les
add
add
test
xor
mov
jbe
out
lcall
add
add
in
hlt
pop
cmpl
jne
push
push
push
push
push
call
jne
jo
add
add
add
mov
add
idiv
stos
add
jns
stos
add
add
iret
add
add
add
mov
in
test
in
add
add
out
pop
add
mov
in
in
pop
leave
add
push
sub
not
pop
pop
push
sub
sub
inc
pop
pop
pop
push
inc
pop
pop
push
push
push
push
push
push
call
xchg
push
add
shl
cmpsl
nop
add
add
add
pop
add
js
add
fucomi
out
add
mov
aad
in
call
or
not
sub
pop
ret
push
not
add
pop
jmp
cmpl
jne
push
push
shr
ror
add
push
sub
add
add
shr
sub
add
ror
pop
pop
push
sub
xor
shl
add
pop
pushl
push
shr
pop
call
push
push
ror
pop
call
push
sub
add
xor
rol
pop
jmp
cmpl
jne
push
add
sub
not
pop
mov
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
int
pop
mov
mov
loope
scas
nop
in
call
add
add
in
push
push
mov
ror
fmulp
arpl
add
mov
add
int
hlt
js
rcrb
sub
pop
jmp
push
push
push
shr
dec
add
shl
push
sub
add
sub
sub
shr
shl
sub
add
pop
add
inc
shl
pop
push
push
push
push
push
push
call
push
mov
cwtl
add
lock
pushf
addr16
int
stos
add
jle
into
fs
add
mov
arpl
add
add
stc
jp
out
add
mov
add
add
out
scas
add
jb
mov
leave
jl
add
add
jle
push
sub
pop
pushl
push
sub
ror
lea
pop
call
push
sub
add
pop
call
push
push
push
sub
add
rol
sub
dec
inc
shr
pop
pop
push
push
call
fwait
lods
add
lock
and
lret
add
add
jb
add
imul
add
pop
scas
scas
add
add
add
jns
add
iret
add
mov
stos
add
fisubrl
stc
add
pushl
call
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
andb
ja
js
jne
mov
test
add
sti
push
imul
in
add
mov
call
add
add
sahf
in
add
mov
add
std
add
cld
mull
testl
add
add
sub
pop
call
push
push
xor
shr
add
shr
push
sub
add
dec
ror
add
rol
sub
xor
pop
ror
inc
xor
lea
pop
push
dec
pop
pushl
push
push
push
push
lea
push
lea
push
push
call
fcoml
into
xchg
add
nop
add
add
gs
add
pop
imul
add
add
roll
cwtl
pop
add
in
call
push
pop
call
push
push
shr
sub
push
push
pop
add
rol
add
sub
ror
pop
sub
lea
add
shl
pop
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
pop
mov
add
add
push
rcl
add
xchg
pop
cli
rolb
add
pop
popa
mov
xchg
test
sti
add
out
cmpsb
loopne
add
rolb
add
mov
cmpsb
pusha
lods
js
outsl
add
add
enter
stos
je
test
imul
or
enter
sub
add
shrb
adc
push
add
push
push
pop
add
lea
sub
add
lea
pop
add
pop
push
lea
push
lea
push
push
lea
push
push
push
call
add
lahf
imul
add
rclb
add
add
mov
add
mov
in
jecxz
add
hlt
mov
cli
imul
add
pop
outsl
ficompl
mov
mov
xorl
lahf
add
add
add
lcall
jne
push
shr
rol
sub
xor
pop
call
call
push
push
sub
push
sub
add
shr
rol
add
sub
inc
xor
sub
lea
pop
shr
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
rolb
pop
jo
add
xchg
add
scas
jb
add
add
in
jle
add
rcr
int
add
lods
add
cwtl
pop
int3
jl
pop
js
js
mov
add
sti
add
pop
add
add
add
add
push
fildl
add
jne
call
push
add
xor
pop
call
push
push
lea
shl
rol
add
push
and
add
lea
add
not
sub
rol
rol
pop
add
pop
push
lea
push
call
shrl
mov
jecxz
fwait
add
sbbb
add
jnp
add
add
lods
out
add
add
push
clc
push
add
mov
imul
mov
mov
pusha
add
add
add
iret
out
add
mov
add
add
lcall
jne
push
sub
pop
call
push
lea
push
lea
push
push
call
addb
sahf
add
add
cwtl
add
test
addb
add
clc
movsb
fadd
add
test
hlt
testb
mov
mov
rcrb
addr16
faddl
imul
xchg
jno
mov
stc
add
jge
add
add
in
movsb
flds
lcall
shrb
cmpb
lea
not
add
lea
push
or
inc
add
rol
sub
sub
pop
ror
shr
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
xchg
push
filds
add
lahf
add
add
add
add
leave
fiaddl
into
pop
lret
add
std
xchg
fucomi
add
loopne
pushl
call
push
push
push
push
push
push
lea
push
push
call
jae
add
data16
into
movb
sbbl
cwtl
stos
insb
xlat
add
add
fiaddl
fiaddl
mov
in
loopne
lcall
shrb
inc
int3
or
push
mov
push
or
inc
add
xor
sub
dec
add
sub
shl
pop
add
sub
inc
pop
push
lea
push
push
lea
push
call
mov
jb
add
add
leave
arpl
jb
jmp
add
add
add
mov
arpl
stos
xchg
add
lahf
add
add
fiaddl
push
mov
mov
in
lock
lcall
jne
push
lea
push
push
push
push
push
push
push
lea
push
call
jae
mov
rclb
jae
je
cld
shlb
mov
mov
mov
mov
in
cwtl
hlt
add
push
cmpsl
in
fwait
push
data16
lea
pop
mov
mov
stc
hlt
fs
pop
call
push
push
push
push
push
push
lea
push
call
add
jb
xlat
add
pop
cmc
add
jge
imul
into
into
jle
add
add
add
gs
add
mov
push
popa
add
add
add
test
loop
cmpsl
mov
add
add
sub
pop
call
push
push
lea
not
add
push
or
inc
add
add
rol
sub
sub
pop
shr
add
pop
push
lea
push
push
push
push
push
call
add
add
jmp
ror
popa
add
add
add
add
insb
mov
jecxz
add
add
mov
mov
pop
add
cmpsb
push
add
add
add
filds
add
add
add
leave
ror
add
add
sub
pop
pushl
call
push
push
lea
push
call
add
andl
outsl
flds
add
pushf
rolb
mov
jbe
scas
test
xchg
add
scas
pop
movl
rcr
push
fildl
add
negb
jae
faddl
jo
add
roll
lcall
pushf
and
call
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jnp
iret
mov
jge
scas
pop
cli
jmp
ja
stos
add
xlat
add
jp
add
scas
mov
xchg
add
sahf
add
add
loopne
push
loopne
sar
imul
in
fcomps
push
lea
pop
call
push
push
shr
push
and
add
add
sub
lea
dec
add
pop
lea
pop
push
add
pop
pushl
push
lea
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
data16
add
nop
add
js
add
lods
add
mov
xchg
pop
movl
add
jle
mov
jns
jno
add
fstps
add
lcall
shrb
into
lahf
out
sub
push
or
inc
add
add
sub
add
rol
sub
pop
dec
sub
pop
push
lea
shl
xor
shl
pop
pushl
call
push
inc
shr
pop
call
push
push
xor
push
xor
add
inc
sub
shl
dec
pop
shr
lea
sub
dec
pop
push
lea
push
push
push
lea
push
call
xchg
aad
add
add
push
add
add
cmc
js
add
stc
loopne
add
call
push
stos
arpl
ja
xchg
repnz
cld
add
jb
add
mov
imul
add
imul
mov
mov
in
lcall
jne
call
push
xor
xor
pop
call
lea
push
push
shl
not
add
push
or
not
add
add
sub
sub
pop
rol
shr
add
pop
push
shr
inc
pop
pushl
push
add
pop
call
push
sub
dec
pop
push
push
xor
sub
sub
pop
call
push
push
shl
add
shl
push
push
pop
add
ror
shr
sub
add
pop
add
pop
push
shr
inc
pop
pushl
call
push
dec
shl
pop
call
push
push
push
call
add
add
mov
ficomps
add
jb
lret
add
filds
xchg
sarb
arpl
les
add
pusha
movsl
les
add
mov
hlt
lcall
inc
cld
push
push
sub
shl
push
push
pop
add
not
lea
add
sub
add
lea
lea
inc
pop
dec
add
pop
push
add
pop
pushl
push
lea
push
lea
push
call
add
mov
add
push
add
mov
in
pop
add
mov
addl
pop
add
add
jge
mov
add
pushf
rorl
lds
outsl
add
in
add
mov
cmpsb
add
jo
jmp
push
mov
test
add
add
add
sub
pop
call
push
push
push
push
push
lea
push
push
push
push
call
add
lds
add
lock
push
add
ljmp
add
push
add
shl
pop
add
aad
mov
lods
mov
add
mov
add
add
fs
test
add
rcrb
mov
sub
pop
pushl
push
push
lea
push
push
call
jnp
jo
cwtl
lret
incb
je
add
lods
add
add
movb
fbld
add
js
add
jp
iret
add
imul
ljmp
pop
call
push
push
add
ror
push
and
add
sub
rol
sub
sub
xor
ror
pop
dec
shr
shr
pop
push
lea
push
push
push
push
push
call
xchg
ja
aam
fwait
pop
xchg
cltd
popl
in
fdivrl
cld
sti
add
cltd
in
pop
add
add
clc
push
ficoms
mov
add
add
push
add
jo
add
lds
push
add
add
popf
lahf
add
fistpl
push
pop
jge
add
add
add
in
call
push
push
push
push
push
push
call
add
imul
imul
lds
add
add
jno
lods
jl
cmp
push
add
fwait
add
add
pusha
pop
jnp
js
bnd
cltd
add
jl
pop
cld
into
add
icebp
xchg
mov
movl
call
push
push
lea
push
sub
add
not
sub
sub
pop
not
inc
rol
pop
push
push
inc
add
push
xor
add
add
sub
pop
dec
lea
pop
push
not
not
sub
pop
call
push
push
ror
push
sub
add
sub
xor
ror
sub
inc
sub
pop
pop
push
push
push
push
push
push
call
add
into
add
test
mov
aad
fwait
js
fadds
jp
fldl
mov
xchg
push
add
jb
add
add
add
mov
add
add
xchg
add
nop
add
scas
xchg
add
rorl
mov
add
fldl
push
cltd
sub
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
call
mov
mov
push
xchg
js
lock
add
add
flds
jge
in
int3
add
jnp
mov
add
push
add
add
test
pop
call
push
lea
push
lea
push
push
push
push
push
push
call
test
push
add
jb
arpl
add
sti
add
mov
push
push
cli
aam
add
add
mov
imul
flds
add
add
stos
rol
add
add
add
sub
pop
mov
push
lea
push
call
cmpsl
test
out
add
jbe
xchg
mov
add
pop
scas
icebp
add
iret
push
stc
push
jbe
mov
les
fnstsw
jle
jle
into
hlt
js
mov
flds
je
cld
add
add
mov
out
add
pop
add
scas
xchg
in
loop
add
push
jo
xchg
push
add
clc
lcall
pushf
and
call
sub
pop
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
push
mov
rcll
popf
mov
add
cltd
add
scas
add
add
jno
sub
pop
push
push
push
push
push
push
push
push
push
push
call
cmpsb
fldl
popa
addl
add
add
add
pop
add
add
push
in
stos
pusha
add
pop
mov
mov
mov
add
mov
xchg
mov
outsl
jle
rcll
jge
add
lahf
rcr
add
imul
loopne
lcall
add
pop
push
push
push
sub
rol
ror
pop
push
push
push
add
sub
shl
pop
push
pushl
push
push
push
lea
push
lea
push
push
lea
push
call
cmpsl
mov
add
scas
mov
add
mov
ljmp
je
add
cli
in
add
add
add
add
jp
mov
add
add
mov
pop
add
stos
jecxz
mov
arpl
add
cltd
xlat
les
in
push
lea
push
push
push
lea
push
push
push
push
call
addl
add
pushf
add
add
rolb
pusha
call
add
add
icebp
xchg
pop
add
call
test
pop
pop
xchg
add
ljmp
lock
iret
ljmp
fisubrl
cmc
add
add
add
add
in
jecxz
sub
pop
call
push
push
sub
add
ror
push
or
inc
add
xor
lea
sub
sub
sub
pop
xor
add
pop
push
xor
inc
shr
pop
pushl
push
lea
push
push
push
push
push
push
push
call
add
add
aam
xchg
xlat
lahf
int3
add
mov
iret
imul
jge
movsb
add
les
pop
iret
ror
cmpsl
enter
je
jo
adcl
in
loopne
lcall
mov
add
repz
pop
call
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
loope
shl
outsl
add
xchg
fldl
jne
mov
cwtl
add
mov
add
out
add
xchg
add
mov
adc
xchg
in
in
mov
add
add
jmp
mov
add
mov
add
add
xchg
movsl
fwait
xchg
stos
add
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
imul
jno
lock
nop
popf
iret
add
push
into
cltd
mov
add
add
add
lcall
push
dec
shl
pop
dec
jne
call
push
push
inc
ror
push
push
pop
add
ror
inc
shr
sub
rol
sub
pop
add
shr
ror
add
pop
push
push
push
push
push
call
add
add
lahf
add
add
jne
add
nop
rorb
cmpsl
add
rolb
addb
leave
cmc
push
mov
ja
add
sub
pop
pushl
push
push
push
push
push
push
push
call
clc
pop
lds
add
cmpsb
lret
mov
add
loop
out
stc
add
mov
add
add
in
lods
add
add
ficomps
add
push
dec
pop
push
push
push
push
push
push
lea
push
call
lret
addb
mov
jmp
xorl
jmp
add
add
pushf
ror
jnp
mov
add
mov
mov
test
iret
add
xchg
pop
fldcw
out
jnp
in
call
call
mov
push
dec
rol
shr
pop
lea
push
push
add
shl
push
or
not
add
lea
lea
ror
sub
rol
shl
pop
shl
pop
push
add
ror
pop
pushl
call
push
push
push
push
push
lea
push
push
push
lea
push
call
ficomps
call
fldenv
ret
add
jmp
mov
lcall
sahf
push
mov
ja
pushf
cwtl
in
add
cmpsl
add
add
gs
add
loop
add
add
mov
pop
push
call
push
push
not
sub
push
xor
add
sub
not
shr
sub
dec
pop
not
add
not
pop
push
not
sub
ror
pop
pushl
push
shr
shr
rol
pop
call
push
add
shl
pop
call
mov
push
shl
sub
add
pop
lea
push
push
add
push
or
not
add
dec
add
sub
inc
xor
pop
pop
push
push
push
push
call
in
add
push
add
add
jl
mov
jns
add
add
push
add
movsb
xlat
add
jmp
jns
lret
mov
push
add
mov
out
add
add
pop
out
add
mov
xlat
cltd
mov
add
add
in
lock
pushl
push
rol
lea
inc
inc
pop
call
push
ror
sub
not
ror
pop
lea
push
push
dec
pop
push
push
xor
dec
pop
push
push
add
xor
add
pop
pushl
push
push
ror
sub
inc
push
push
pop
add
add
dec
sub
add
ror
shr
pop
inc
rol
not
pop
push
lea
push
call
jnp
mov
pop
jmp
add
faddl
mov
add
add
add
xchg
add
add
iret
les
jecxz
cwtl
int
jns
cmpsl
pop
add
add
mov
aam
mov
add
add
rcr
add
ret
add
stos
shlb
sub
pop
push
push
sub
pop
call
push
push
inc
ror
inc
push
or
not
add
add
lea
add
sub
add
shr
ror
add
pop
xor
inc
pop
push
lea
push
call
add
add
add
incb
add
add
add
mov
push
jmp
add
add
add
add
add
add
clc
pop
pushl
call
push
lea
push
call
into
add
mov
aad
add
mov
mov
add
arpl
pop
mov
enter
lret
add
add
addl
add
cld
add
data16
add
mov
call
lds
pusha
add
in
clc
lcall
call
push
push
rol
shr
lea
push
or
inc
add
shr
inc
sub
shr
ror
dec
pop
xor
pop
push
lea
push
lea
push
push
push
lea
push
push
call
cmc
lcall
add
ljmp
lods
mov
fs
add
xchg
into
add
xchg
add
pop
xchg
add
add
pop
cltd
add
add
push
popl
roll
add
cmpsb
mov
js
add
mov
popf
movb
mov
add
ja
add
add
lcall
jne
push
shr
sub
inc
pop
call
call
push
lea
push
push
call
add
cmc
jp
mov
out
in
xchg
outsl
andb
mov
add
fcoml
jne
into
push
aad
add
add
imul
add
xchg
mov
mov
mov
divl
lcall
push
add
add
add
add
push
push
lea
push
push
call
add
jb
mov
push
add
mov
add
mov
xlat
lret
jmp
add
add
loop
add
xchg
out
shrl
jge
imul
add
mov
xchg
jle
ja
in
lock
mov
push
push
call
fildll
add
fildl
jb
popf
in
add
pop
int
mov
add
add
xchg
and
add
mov
add
add
lods
sub
pop
jmp
push
push
lea
ror
push
xor
add
shl
xor
sub
dec
ror
inc
xor
pop
sub
inc
pop
push
shr
rol
pop
pushl
push
push
push
call
stos
cmpsl
in
loopne
add
iret
add
loope
jecxz
xchg
mov
mov
add
add
add
add
iret
ret
ret
xlat
pusha
adcb
add
xorb
fiadds
fiadds
add
mov
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
call
mov
add
add
push
hlt
jp
sarl
pop
add
add
adcl
mul
out
mov
mov
push
bound
aad
lcall
pop
pop
aad
shlb
fdivr
lcall
add
mov
and
shrb
lea
push
push
push
push
push
push
call
out
jnp
add
add
add
add
push
fidivrs
xchg
add
jo
jp
mov
add
add
add
xchg
pusha
xchg
popl
add
ficompl
jle
stos
pop
in
jbe
in
add
rolb
add
add
mov
lcall
shrb
xor
xlat
push
lea
not
push
and
add
sub
inc
pop
inc
xor
sub
pop
push
sub
rol
pop
pushl
call
push
push
call
faddl
add
add
cmp
add
jge
clc
add
arpl
add
mov
xchg
in
add
sti
fsubrs
ljmp
add
movb
xchg
imul
fiadds
add
add
into
mov
jmp
sub
pop
push
call
push
push
push
push
push
push
call
lahf
lcall
in
icebp
mov
mov
add
add
mov
add
movl
add
mov
jge
mov
add
out
mov
call
or
push
lea
push
lea
push
push
call
add
add
cmc
add
add
loop
xchg
aam
lcall
push
mov
mov
xchg
pop
push
add
fcmovnu
fnstcw
jle
int
lahf
test
in
nop
fcompl
push
push
push
call
add
call
repnz
add
add
cwtl
add
xchg
mov
xchg
add
add
lds
add
jb
add
rolb
add
add
add
cmpsl
add
add
rolb
push
mov
outsl
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
push
add
js
pop
add
out
pop
out
add
add
add
leave
add
ja
add
add
add
add
add
roll
push
add
negb
add
lahf
imul
xchg
pop
popl
fwait
testl
lcall
pop
push
add
pop
leave
push
sub
pop
add
push
inc
pop
ret
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
xchg
pop
test
add
int3
les
out
jns
add
int
jge
int
test
add
mov
jl
add
leave
mov
add
push
add
js
add
jno
mov
cmpsb
sahf
add
in
add
add
mov
cmc
addb
add
jb
iret
add
lcall
push
inc
not
pop
ret
push
ror
ror
pop
push
push
sub
lea
not
pop
mov
push
add
pop
cmpl
jne
push
dec
shr
pop
mov
jmp
push
sub
add
sub
xor
pop
mov
push
push
lea
push
push
push
push
push
push
call
int3
xchg
add
scas
push
jecxz
mov
rolb
in
add
mov
push
notb
add
jge
xlat
fcoms
jae
jno
popl
add
jbe
clc
add
fildl
add
add
add
add
sub
pop
and
push
push
push
push
push
push
push
call
movsl
andb
cld
add
pop
rolb
mov
add
cmc
add
mov
stos
add
lret
scas
mov
lcall
add
cld
data16
mov
add
in
in
lcall
leave
push
push
push
push
push
push
push
push
call
lods
scas
bound
imul
test
int3
in
add
addl
test
hlt
mov
std
add
push
fs
add
fildl
pop
in
add
pop
xchg
push
repnz
pop
add
push
shl
pop
xor
push
sub
add
pop
dec
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
rorb
xchg
xchg
flds
add
sahf
popf
sbb
repnz
mov
add
loop
lahf
jae
add
add
add
xchg
add
add
mov
mov
gs
imul
pop
sub
jmp
push
push
push
push
push
lea
push
push
push
lea
push
push
call
imul
rcr
mov
lret
aam
roll
jle
movsb
add
jp
push
jl
jo
add
add
add
testb
mov
add
iret
faddl
add
add
pushl
push
push
push
push
push
lea
push
call
pop
add
stc
jae
pop
add
mov
std
add
push
add
into
jbe
add
push
push
add
jge
flds
add
add
bound
mov
cwtl
add
cwtl
imul
in
call
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
call
mov
jbe
push
icebp
lock
add
pop
push
push
pop
add
mov
in
in
add
add
mov
push
out
add
addb
imulb
sti
lahf
add
pop
std
repnz
sub
pop
sub
push
pop
cmp
jne
mov
push
lea
push
push
call
add
add
add
xlat
add
jnp
add
add
out
add
add
in
hlt
pop
lea
push
ror
pop
sub
mov
push
push
push
lea
push
call
add
fxtract
add
jo
add
add
add
mov
mov
bound
fsub
add
arpl
div
nop
add
lcall
jmp
sub
outsl
lea
push
lea
push
push
push
call
add
xlat
imul
lock
add
pop
add
mov
out
roll
add
aad
push
mov
mov
cld
mov
shrb
xchg
mov
pop
add
js
add
push
arpl
test
lret
fmul
add
add
pop
imul
push
push
lea
push
push
lea
push
call
addl
negw
les
test
add
add
add
add
push
xchg
xchg
add
movsb
mov
aad
std
add
popa
mov
add
add
xchg
mov
add
popf
int3
in
sub
pop
sub
pushl
push
lea
push
push
push
push
push
push
push
call
add
lcall
jae
add
jns
add
jno
add
add
addb
add
jl
xchg
add
add
addr16
hlt
add
hlt
jmp
in
loopne
lcall
push
xor
lea
pop
shr
and
push
shr
xor
lea
pop
sub
push
push
push
call
icebp
in
jo
sahf
add
push
jnp
add
addl
jno
faddl
fs
testl
hlt
jns
jae
sub
pop
cmp
jne
leave
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
jo
jle
scas
add
fwait
add
add
jb
add
push
add
mov
mov
fs
loope
add
add
jp
rolb
add
mov
jne
iret
add
add
add
lcall
add
push
xor
shl
not
inc
pop
push
mov
push
add
shl
add
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
call
lock
add
test
pop
fcomp
stos
add
xchg
add
enter
scas
jle
mov
mov
add
stos
add
jecxz
mov
aam
addb
pop
scas
mov
and
fwait
sub
pop
push
push
push
call
test
add
lcall
add
add
push
add
loop
loopne
add
add
xchg
add
in
xlat
popa
add
mov
pushf
pop
cld
pop
add
sub
pop
push
push
add
dec
inc
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
hlt
iret
add
add
mov
mov
pushw
ljmp
mov
add
jle
add
add
flds
add
xchg
jo
add
jne
mov
fs
test
mov
lcall
push
push
push
push
lea
push
push
push
lea
push
push
call
nop
in
div
xchg
lea
imul
add
add
add
fmul
jecxz
add
mov
xchg
popl
mov
mov
insb
mov
mov
add
xchg
test
icebp
sub
pop
push
push
push
push
push
push
push
push
push
call
roll
push
jle
cwtl
add
add
out
push
jle
mov
jp
in
add
jl
add
mov
add
loop
rclb
add
add
xchg
test
lcall
pop
or
push
push
push
push
push
push
call
add
add
mov
pop
add
add
add
lcall
mov
stos
push
mov
add
in
jne
mov
stc
popa
add
add
add
add
add
add
in
loopne
sub
push
push
lea
push
push
push
push
lea
push
call
fbld
hlt
jne
stos
pop
mov
test
addl
add
add
mov
in
call
test
add
fildl
add
add
lcall
adc
mov
daa
lds
push
push
push
call
mov
lea
jge
cld
add
lret
add
add
pop
fildl
lret
xchg
test
scas
add
divl
test
push
push
jno
add
push
imul
imul
lret
in
in
lcall
ljmp
ljmp
push
loop
stos
push
call
add
add
out
fiadds
fadds
pop
add
nop
nop
bound
xchg
test
lcall
mov
call
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
neg
fldl
stos
lcall
test
add
add
add
pop
loop
lcall
mov
add
pop
int
ficompl
add
add
add
fs
add
in
loopne
lcall
fwait
addb
add
pop
or
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
icebp
xchg
out
add
add
add
add
out
mov
add
stc
add
pushf
add
rcr
hlt
gs
xchg
mov
test
add
mov
outsl
add
lcall
jnp
add
push
pop
xor
push
sub
add
pop
mov
push
sub
ror
sub
pop
and
push
push
lea
push
push
push
push
call
add
pop
add
add
popl
add
je
add
fldz
fcmovb
add
rcrl
add
add
sub
pop
rol
push
push
push
push
push
lea
push
call
aad
add
add
jbe
mov
push
pop
test
les
add
leave
stos
xchg
add
cwtl
clc
add
stc
push
mov
mov
in
call
rol
xor
push
push
push
push
push
call
jecxz
test
scas
mov
in
stc
fiadds
int
cltd
stos
add
jp
mov
rolb
lret
outsl
lret
sti
sub
pop
inc
push
sub
sub
pop
cmpb
jne
push
lea
push
push
push
push
call
add
out
push
stos
add
scas
add
add
js
pop
sbbl
mov
add
mov
mov
sub
pop
add
push
push
lea
push
call
add
push
mov
filds
mov
icebp
bound
out
in
hlt
in
xchg
add
iret
jp
mov
lea
add
rolb
movsl
int3
add
lcall
lcall
inc
or
test
add
push
not
sub
pop
add
cmpl
jne
push
ror
sub
inc
pop
xor
pop
push
push
lea
push
push
push
push
push
call
fcoms
into
add
add
popl
test
mov
push
add
icebp
fdivs
fldl
flds
mov
mov
imulb
add
fwait
mov
xchg
add
add
add
insb
add
repnz
add
pop
push
lea
push
call
jecxz
add
std
lcall
add
leave
mov
jmp
add
xlat
xchg
add
mov
out
mov
mov
push
add
lock
clc
pop
pop
push
rol
shr
shl
pop
pop
push
dec
add
pop
leave
push
sub
pop
ret
push
push
push
push
push
call
add
cmpsb
add
add
pop
add
addb
xchg
add
xchg
add
lds
cmpsl
cmpsb
jbe
mov
mov
add
fdivr
xchg
add
icebp
sahf
test
add
jnp
subl
in
in
lcall
push
adc
shrl
add
inc
pop
push
push
push
lea
push
push
push
push
call
lret
test
mov
cmpsl
add
negl
add
add
mov
gs
cld
push
ljmp
imul
add
in
pop
add
push
push
call
fnsave
mov
icebp
ja
imul
out
out
int3
mov
add
add
pop
add
jp
push
pop
leave
mov
movsw
add
rclb
sub
pop
mov
push
lea
push
lea
push
push
push
push
call
fiadds
hlt
add
ret
add
gs
lret
add
mov
iret
add
add
faddl
test
add
push
loop
add
gs
add
add
lods
add
imul
addb
add
add
push
push
push
push
push
lea
push
call
test
xchg
imul
loopne
add
add
aam
jmp
push
add
fnsave
flds
std
roll
cltd
add
add
out
lahf
fnsave
add
pop
sahf
add
add
add
add
cltd
add
pop
stos
cld
add
add
add
call
ja
push
push
call
stos
add
leave
cltd
mov
cld
subl
add
add
js
add
add
add
pop
aad
pop
add
add
sub
pop
pop
push
push
push
push
push
call
add
add
add
add
add
add
add
mov
cmc
insb
add
pop
addl
in
xchg
out
mov
add
into
leave
add
hlt
sub
pop
mov
push
push
lea
push
push
push
push
call
add
xchg
out
mov
lds
int
add
sti
add
ljmp
imul
add
add
mov
test
in
add
jle
xchg
xchg
add
add
add
xchg
add
add
xchg
stos
add
add
in
call
push
push
shr
pop
call
xor
push
push
push
push
push
push
push
push
call
add
jae
mov
test
roll
shr
add
repnz
add
fdivs
iret
in
out
add
mov
mov
imul
push
add
in
pop
jae
add
add
mov
add
popa
add
xchg
add
sub
pop
pop
push
add
sub
sub
not
pop
pop
push
pop
pop
push
inc
pop
pop
push
push
call
mov
add
jecxz
aam
clc
frndint
add
hlt
stc
test
test
leave
mov
in
clc
lcall
leave
push
not
add
not
pop
ret
push
inc
pop
push
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
xchg
add
rorl
fldl
add
arpl
jne
add
cltd
cli
add
add
add
add
out
pop
add
pushf
clc
add
pop
fs
imul
add
scas
push
rcll
add
xlat
add
fs
add
jmp
scas
loop
add
add
in
fdivr
lcall
hlt
push
push
push
push
push
push
push
call
mov
lret
movsl
mov
ljmp
lret
add
add
add
imul
add
fxch
shll
js
ret
lret
add
pop
mov
jle
push
std
pushf
jge
add
add
sti
scas
cltd
add
jp
pop
nop
gs
add
mov
sub
pop
push
push
lea
pop
push
push
sub
ror
pop
push
push
sub
shr
add
pop
push
push
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
popa
outsl
outsl
add
in
jo
push
jle
ljmp
add
add
jno
mov
mov
add
add
pop
add
add
add
lcall
push
lea
push
lea
push
push
call
out
jnp
add
mov
add
add
add
out
push
filds
lcall
add
add
mov
bound
std
jle
lock
add
add
add
nop
add
loopne
add
add
jae
sub
pop
pop
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
stc
jecxz
push
mov
faddl
add
add
scas
add
add
add
pushf
add
add
push
add
add
xchg
in
add
add
add
add
test
arpl
pop
sub
mov
push
push
push
lea
push
call
imul
add
pushf
mov
pushf
test
add
add
pop
mov
incb
push
add
add
add
test
sub
pop
shr
push
shr
rol
rol
pop
add
mov
push
not
pop
add
push
rol
pop
pushl
popl
push
push
call
add
lahf
ljmp
add
mov
test
add
loope
add
add
pop
add
push
pop
add
add
aad
add
gs
lret
add
add
in
sahf
addr16
popf
mov
test
mov
aad
add
add
mov
jmp
mov
fistpl
pop
sub
pop
mov
add
push
shr
sub
pop
xor
push
rol
lea
pop
lea
mov
push
shl
xor
pop
add
xor
push
push
push
push
push
push
push
push
push
call
movl
xlat
mov
je
add
repnz
fldl
push
jmp
mov
push
add
test
mov
mov
jb
loope
in
fcompl
rolb
push
lea
push
call
test
pop
testb
pop
scas
add
add
bound
add
in
jns
mov
add
add
add
je
pushf
push
fiaddl
add
fdivp
cltd
pushf
xchg
out
or
add
add
rolb
add
jecxz
andb
cwtl
jecxz
pop
add
sub
pop
nop
push
push
push
call
rorb
popa
add
stos
rolb
mov
add
add
add
pop
movsl
mov
add
add
mov
add
fwait
add
add
add
add
push
ja
data16
pushf
add
xchg
add
sar
shr
in
hlt
lcall
push
add
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
out
clc
fs
add
jmp
mov
add
out
jnp
add
pop
in
roll
jo
fwait
add
add
push
add
xchg
add
mov
pusha
add
add
gs
add
and
lret
add
add
insb
add
add
pop
xlat
add
lret
imul
loope
mov
lcall
push
add
pop
nop
push
push
push
push
lea
push
push
call
add
add
add
add
add
mov
nop
add
scas
stc
add
cltd
push
add
jl
stos
decb
out
movsb
add
add
rcrl
add
lods
out
arpl
mov
hlt
faddl
mov
xchg
ljmp
fistpl
hlt
add
sub
pop
inc
push
lea
add
shr
pop
nop
push
ror
pop
nop
push
shl
not
pop
cmpb
jne
add
push
inc
pop
nop
push
push
push
push
push
call
lock
add
lock
jno
mov
scas
jmp
add
mov
add
push
add
imull
add
push
std
add
call
fs
sub
pop
nop
push
push
lea
push
push
push
push
push
push
call
xchg
add
shrl
add
imul
shll
int
push
mov
fisubl
add
push
jns
test
shl
fadds
add
push
pop
add
leave
lret
add
xchg
mov
outsl
stc
les
sub
pop
cmp
je
nop
push
xor
add
not
sub
pop
nop
push
push
call
add
mov
nop
int3
lret
add
int3
mov
add
pop
testb
fs
add
add
jb
mov
xchg
into
add
mov
test
add
loope
add
pop
hlt
and
sub
pop
inc
push
push
push
push
push
push
lea
push
push
call
xchg
add
add
add
adcl
jl
scas
fcomp
add
add
mov
addr16
add
xchg
add
mov
add
push
dec
pop
nop
push
push
push
push
call
pop
add
lret
testl
add
rolb
icebp
add
add
stos
add
add
jl
push
rorl
lahf
pop
stos
sub
add
aad
add
rolb
jne
jb
xor
push
sub
pop
jmp
push
sub
xor
ror
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
sti
roll
hlt
jmp
add
xchg
add
je
add
mov
aad
add
add
add
add
xchg
cmpsb
mov
in
fcomps
rcll
mov
push
push
lea
push
push
push
push
call
add
out
add
add
mov
add
popf
ja
addb
push
mov
jae
add
add
jp
test
int3
pop
add
sub
pop
movzwl
mov
push
lea
pop
add
push
dec
rol
shl
shr
pop
mov
push
push
push
push
call
lods
add
add
add
in
push
add
popf
out
add
jae
mov
add
add
xchg
fwait
cwtl
add
add
add
add
out
lahf
mov
lock
gs
in
sub
pop
xor
xor
push
push
lea
push
lea
push
call
out
lock
mov
scas
int
add
incb
imul
mov
cmpsb
mov
aam
xchg
cld
movsl
add
add
in
lock
lcall
loope
push
ror
shr
xor
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
add
movsb
popf
fildl
mov
add
mov
add
jle
xchg
jmp
add
add
add
cltd
add
out
lock
loop
add
lret
add
cmc
mov
mov
shlb
mov
add
data16
lcall
loope
xor
push
push
push
push
call
loopne
jno
jbe
add
stos
mov
add
mov
jnp
add
add
shlb
lock
mov
loop
cltd
ficomps
pop
fiaddl
lcall
loope
xor
push
push
push
lea
push
call
add
jmp
mov
add
rolb
imul
icebp
repnz
add
mov
add
scas
add
add
add
jmp
add
add
jl
xchg
add
rcll
sbb
daa
lea
push
push
push
call
add
mov
int
imul
cltd
add
add
add
into
mov
insb
jecxz
js
mov
add
scas
loopne
aam
xchg
add
jl
rolb
add
pop
add
add
add
lods
pop
add
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
pushf
rclb
add
add
jp
data16
xchg
mov
in
add
push
add
mov
mov
lods
gs
movb
mov
mov
xchg
add
mov
jmp
add
add
testb
in
fdivr
lcall
pop
push
shr
ror
pop
pop
push
rol
ror
pop
pop
push
lea
push
call
arpl
mov
add
ja
mov
jmp
out
add
add
add
rolb
add
rcr
jns
add
fs
add
int3
filds
movsl
cmpsb
stos
mov
out
testl
add
add
jnp
mov
lcall
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
cmpsl
fsts
add
add
push
add
jp
add
add
mov
add
add
jnp
mov
loope
stos
cltd
add
add
jge
mov
shll
push
add
push
lcall
pop
ret
push
push
push
push
lea
push
push
push
call
mov
jge
jae
ljmp
add
add
cli
jns
add
push
pushf
js
mov
nop
movb
lcall
in
push
push
add
shl
shr
pop
push
push
dec
sub
pop
push
push
push
not
shl
inc
pop
mov
push
add
pop
mov
push
lea
push
push
lea
push
call
ret
add
mov
add
mov
pop
add
roll
movb
flds
add
add
pop
adcl
cltd
mov
testl
data16
cwtl
add
add
cld
nop
add
mov
lcall
add
add
push
pop
mov
push
push
push
lea
push
lea
push
lea
push
call
add
jns
add
sbbl
add
mov
add
sarl
std
add
add
aam
xchg
add
lock
iret
add
add
mov
fmull
pusha
popa
scas
xchg
cltd
scas
xlat
pusha
add
int3
ret
add
pop
jbe
sub
pop
test
je
mov
push
push
call
jmp
bound
mov
mov
add
add
icebp
add
lret
add
je
repnz
imul
enter
mov
cmc
add
xlat
add
add
fs
movsl
add
add
mov
add
add
out
push
push
jle
xchg
add
add
fcoml
in
clc
pop
test
je
mov
push
push
call
xchg
xchg
roll
add
fdivl
aam
stos
int
andb
add
test
pop
push
stos
xlat
add
xchg
add
cld
outsl
add
add
add
addl
arpl
add
push
fsubrs
add
add
mov
add
add
xchg
add
in
sub
pop
mov
mov
push
push
call
jle
aad
add
lds
ja
imul
data16
out
add
xchg
add
add
add
push
movsb
cwtl
add
stos
add
push
add
mov
add
add
add
filds
lcall
push
shr
pop
cmp
je
push
not
pop
test
je
mov
push
push
push
lea
push
call
cmpsb
je
loopne
add
pop
push
xchg
scas
mov
mov
into
out
add
add
aad
mov
sahf
lret
rolb
mov
add
jmp
mov
add
in
lcall
mov
add
add
aad
add
add
sub
lcall
push
push
call
push
push
hlt
testl
lds
add
cmpsl
jno
add
pop
xchg
add
addl
stos
jge
rclb
add
pop
add
add
add
popf
mov
add
hlt
push
sub
pop
cmp
je
test
jne
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
ja
movsb
add
mov
add
in
iret
add
add
add
enter
mov
add
pusha
cli
add
add
sub
pop
xor
push
xor
add
pop
pop
push
add
pop
pop
push
ror
add
pop
pop
push
sub
sub
pop
pop
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
push
push
shlb
clc
xchg
leave
pop
add
add
in
stc
add
fisubl
add
popa
add
xchg
xchg
mov
push
add
push
push
push
push
push
push
push
call
movsl
add
add
add
mov
test
mov
outsl
add
add
enter
xor
flds
add
add
add
add
add
lcall
or
push
add
sub
pop
mov
inc
push
ror
sub
pop
cmp
jne
lea
push
push
lea
push
push
push
push
call
int
jns
rorb
frstor
add
add
int
push
pop
mov
add
add
arpl
test
add
push
lods
arpl
addl
sub
pop
mov
push
push
push
lea
push
call
cli
imul
mov
add
int3
call
pushf
rolb
jnp
int
xchg
xchg
add
mov
mov
add
add
nop
fcomps
lcall
in
test
add
mov
push
lea
push
push
lea
push
push
push
call
mov
aad
push
fiaddl
in
pop
push
add
add
stc
int3
add
lods
add
shrl
in
push
add
loopne
sti
lret
mov
add
add
pop
xchg
mov
loopne
call
ljmp
lcall
movb
loopne
test
sti
call
jne
shrb
into
dec
sub
pop
mov
push
push
call
addr16
push
shll
add
add
jb
add
add
add
cwtl
sahf
mov
int3
add
add
lds
mov
add
mov
add
lcall
rorb
cmpsl
add
add
pop
ret
push
push
push
call
js
push
add
add
add
mov
cmpsb
std
add
jmp
mov
sahf
push
mov
popa
add
add
ret
addl
in
arpl
scas
sub
pop
add
cmp
je
push
push
push
push
push
call
scas
movsl
add
mov
add
mov
add
add
jecxz
fnsave
jno
repnz
add
mov
bound
add
jmp
xor
push
push
lea
push
lea
push
push
push
push
push
call
add
add
iret
add
sti
add
add
jle
add
into
add
add
add
xchg
mov
cmpsb
pop
aam
xchg
add
pop
aam
add
add
outsl
add
add
jo
add
sub
pop
pop
pop
push
push
push
push
call
fdivs
jmp
push
ljmp
mov
push
add
add
pop
test
cld
push
mov
add
jne
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
ja
lret
in
add
push
shl
add
cli
xchg
add
add
loop
add
add
push
add
mov
pop
add
mov
loop
add
xchg
mov
faddp
add
add
add
enter
in
out
jle
add
add
scas
add
sub
pop
pop
push
lea
push
push
push
push
call
mov
std
stc
add
mov
xchg
add
popf
add
add
mov
mov
add
add
popl
lea
fucom
cli
add
add
add
add
popa
sub
pop
leave
ret
push
push
push
push
push
push
push
push
push
call
add
jecxz
fiaddl
filds
je
clc
fwait
cmp
addl
les
repnz
cmpsl
lret
popa
add
jge
sti
rcll
jne
add
movsb
jns
add
add
add
add
add
push
sub
pop
lea
push
push
call
bnd
add
test
jle
mov
fiaddl
add
std
pop
addr16
aad
fwait
shl
add
add
jno
in
add
std
xchg
out
clc
add
add
push
add
add
lcall
push
add
lea
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
fwait
mov
stc
push
add
lods
add
add
jp
add
add
add
cld
pop
cmpsb
rcll
je
fldl
add
fiadds
mov
nop
add
test
add
lcall
push
push
lea
push
push
lea
push
call
add
add
iret
push
jae
add
add
sbbb
stos
js
iret
mov
add
pop
add
add
push
lods
cmpsb
add
push
popa
fwait
sub
pop
pop
leave
push
push
push
lea
push
push
push
call
sar
bound
add
test
add
add
add
mov
add
into
add
mov
std
add
jns
mov
fisttps
loope
add
fldl
stos
add
add
add
fs
pop
ret
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
repnz
mov
out
add
xchg
add
jmp
xchg
jnp
add
jo
add
add
popf
aad
outsl
add
add
mov
mov
add
add
add
add
add
add
mov
mov
mov
hlt
out
add
in
fcomps
pop
push
push
call
add
push
add
mov
jns
outsl
add
fists
icebp
testl
jo
xorl
mov
add
std
mov
rolb
add
sub
pop
pop
push
lea
pop
pop
push
lea
not
pop
pop
leave
push
push
push
call
add
add
add
loope
popa
mov
mov
addl
lds
mov
testb
add
roll
nop
add
xchg
mov
call
add
lcall
or
test
jae
and
jae
test
ja
test
jae
lods
outsl
jae
mov
jae
fcmovbe
jae
test
push
test
push
xor
jno
bound
add
mov
adc
mov
push
fisubrl
shr
dec
jg
ret
cmp
add
mov
push
fcmovb
je
test
push
aaa
aad
nop
adc
out
fcmovb
shl
lret
stos
cmp
mov
gs
stos
sbb
mov
enter
mov
testl
out
stos
and
sub
cmp
or
stos
cld
sub
out
lcall
nop
push
xchg
jle
mov
pop
lret
xchg
call
inc
mov
adc
int3
mov
daa
int
cmp
fcmovnbe
mul
cmp
add
jg
xor
loopne
aam
imul
pop
dec
pop
xchg
test
cmp
scas
xchg
stos
push
das
cli
ljmp
rol
push
lahf
ss
pop
stos
pop
ret
xchg
jb
cmpl
push
movsb
cwtl
xchg
inc
loop
arpl
dec
scas
arpl
or
jp
lods
cmp
or
cwtl
lds
in
outsl
inc
sbb
cmovb
push
xor
mov
dec
or
lods
mov
icebp
cmp
es
jp
shll
fstl
ret
cmc
movsb
rorb
cs
mov
mov
scas
rcl
rcrb
cmp
sub
addr16
or
sbb
push
fs
out
repz
xchg
je
subb
ficoml
pop
mov
cmp
xor
mov
fwait
and
jns
jae
js
adc
into
lahf
out
mov
cmp
sbb
ret
aaa
jnp
lods
into
or
xchg
sbb
fsts
fldl
mov
pop
mov
int
mov
fcoms
push
pop
call
aas
mov
int
insl
lods
loopne
lcall
addr16
mov
adc
stos
mov
push
sub
and
insl
mov
pushl
or
jecxz
subb
adc
cmp
push
jcxz
lods
xchg
aad
dec
sti
movsb
dec
insb
pop
sbb
mov
pop
stc
jne
pop
cld
dec
mov
mov
stos
mov
mov
fs
sub
cs
push
nop
xchg
push
pop
sti
sbb
dec
pop
fcompl
jl
cltd
adc
inc
popa
jne
fnstcw
lea
cmp
loop
stc
cmp
scas
or
cmpl
sub
andb
loope
fistl
shlb
mov
jns
je
daa
mov
push
inc
bound
and
cmpsb
and
mov
xchg
sub
fs
scas
std
jl
imul
sub
out
xchg
or
xor
xchg
or
cmp
in
in
push
push
mov
sbb
out
mov
pusha
out
pop
mov
out
or
jbe
sbb
push
cli
push
hlt
data16
or
xor
mov
cmc
cmc
cmp
or
mov
aad
leave
pop
imul
lret
push
sbb
cltd
push
cwtl
pop
cs
push
mov
jmp
sub
fisubs
cltd
add
enter
mov
cli
lahf
inc
add
daa
movsl
sub
repz
das
ja
je
jo
inc
xlat
lea
push
mov
movsl
cmp
cmpsl
inc
std
sub
dec
mov
push
nop
jmp
pop
daa
sbb
xor
dec
adc
data16
dec
mov
sub
jg
xchg
lret
jb
fiaddl
js
push
out
sub
out
movsl
sbb
xor
inc
sub
aaa
inc
leave
rcrb
pop
scas
adc
ja
test
push
cmc
leave
idiv
imul
or
adc
scas
pop
cld
xor
add
mov
cli
inc
or
fisubrl
mov
lock
lds
or
add
dec
mov
jbe
xor
and
cwtl
movsl
mov
stos
aas
movsb
mov
outsb
and
aam
ficompl
dec
out
mov
mov
repz
ss
out
cld
bound
cltd
cld
orl
pop
into
gs
inc
sbb
cs
loop
addl
cmp
pop
out
jg
xor
jp
add
sbb
cmp
xlat
cmp
loop
loopne
scas
sub
rcll
sub
ss
int3
jg
in
add
dec
dec
sbb
add
adc
test
ljmp
xchg
out
xchg
popl
lcall
xchg
cmp
pop
push
fsubrs
push
repnz
xor
clc
mov
sub
clc
or
hlt
das
xchg
cmp
lret
mov
das
adc
popf
jp
inc
lds
pusha
neg
call
mov
jmp
push
jns
sbb
sbb
sbbl
jmp
bound
xor
test
test
cmp
cmp
jp
mov
push
pop
add
in
ret
in
out
push
xchg
cwtl
mov
cs
jbe
lea
in
sub
loopne
dec
jo
pop
jnp
cmc
push
roll
push
adc
jl
sub
data16
mov
pop
or
xor
fisubrs
cmc
inc
sub
push
fs
insl
and
ljmp
mov
outsb
or
or
repz
fcomip
jmp
inc
int
mov
mov
dec
lds
adc
lahf
pop
sub
pushf
sbb
fprem1
or
and
imul
movsl
subl
xchg
int3
scas
je
jl
sub
fimuls
jae
loop
fstps
mov
insb
imul
mov
mov
add
mov
outsl
fnstsw
mov
test
push
into
sbb
fwait
in
mov
test
gs
jmp
lds
sub
outsb
mov
lods
jecxz
push
lock
cmp
adc
mov
push
and
pop
addb
mov
xchg
inc
mov
fiaddl
pop
xorl
out
lods
repnz
enter
sub
xchg
shl
adc
mov
jmp
pop
popa
icebp
mov
xchg
hlt
push
jg
adc
sbb
jo
pop
cmc
xchg
ja
movsl
sbb
dec
cmp
ss
loope
mov
fiadds
pop
insl
out
iret
daa
ds
and
jp,pt
inc
lea
jns
pusha
sub
or
pop
lret
andb
lock
outsl
jnp
sbb
and
xchg
sub
sbb
fdivrs
leave
outsl
adc
gs
pop
test
fildl
mov
mov
mov
pop
mov
push
leave
and
adc
add
call
iret
mov
cmp
lds
imulb
icebp
lds
imul
leave
push
xchg
int
scas
mov
mov
sbb
sbb
aas
pop
loope
jp
lret
lea
or
lods
lcall
add
push
mov
mov
out
cs
cmp
and
loop
push
cmpsl
loope
mov
xor
arpl
pop
cmp
fmul
push
jmp
or
inc
shll
lods
jecxz
inc
rcl
out
pop
aad
insl
xchg
stos
pop
js
js
lods
cmp
push
xchg
sbb
loope
mov
xor
jb
inc
out
cltd
sbb
shll
icebp
sub
xchg
popa
jmp
mov
jl
push
add
sti
ljmp
jb
or
aaa
jmp
inc
pop
in
ret
xchg
imul
les
pop
jmp
cli
push
cmp
cmp
call
aad
cwtl
mov
or
je
jns
mov
cmp
call
test
jle
lods
mov
subb
cmp
imul
pop
dec
sbb
sub
jne
test
sbb
lods
adc
stos
psubsb
adc
test
movsl
addr16
push
loop
lret
jmp
arpl
pop
repnz
stos
cmp
lods
daa
dec
push
mov
int
out
mov
ja
mov
push
iret
je
test
iret
pop
out
xchg
xor
test
lods
push
xlat
lock
sti
cmp
testb
dec
cmpsl
lock
stos
test
call
or
cmp
icebp
int
rorl
clc
push
and
dec
and
mov
sbb
xchg
fnstcw
mov
in
sub
cltd
and
jne
jge
sub
das
adcb
mov
lods
arpl
mov
pusha
loop
das
js
add
lock
int
lcall
fs
mov
push
xchg
adcl
jmp
adcl
mov
and
out
ret
jecxz
das
jo
mov
and
mov
jmp
movsl
inc
inc
pop
sub
lock
adc
fcomps
movsl
fwait
ljmp
dec
mov
push
fdivs
inc
fidivrs
sub
pop
fsubrs
test
test
stos
xor
fmull
stc
aaa
sarb
lret
mov
cs
fdivrs
cwtl
les
pop
aas
sub
loope
sbb
push
mov
or
in
int3
inc
add
ja
and
push
ds
inc
adc
scas
mov
inc
and
mov
les
rorb
pop
push
pop
cmpb
in
adc
fs
shrl
mov
std
outsl
xchg
fs
jmp
ret
lret
in
lret
hlt
push
push
adc
sbb
sub
roll
push
sti
inc
call
imul
and
les
dec
mov
loop
sbb
add
js
dec
xchg
jmp
stc
aas
mov
xor
xor
xor
lcall
mov
out
mov
mov
out
pop
mov
fnstenv
loop
jl
dec
mov
mov
or
dec
cs
pusha
sub
leave
jae
scas
and
enter
mov
icebp
test
loop
pusha
insb
sbb
mov
imul
das
mov
push
jbe
xchg
test
xor
or
jg
xorb
imul
ret
scas
dec
jp
jnp
out
dec
xor
mov
sbb
aaa
xchg
loop
scas
and
jo
and
jnp
dec
pop
mov
or
fwait
xor
and
stos
rclb
gs
scas
shlb
dec
cmp
xor
aam
das
dec
xchg
push
sub
loope
pop
push
aam
test
fidivrs
mov
and
es
mov
xor
cltd
push
int3
jl
ret
sbb
mov
jns
push
and
push
pop
lret
and
or
inc
ret
push
add
and
cmc
or
mov
sub
mov
sub
add
ret
xchg
mov
jecxz
sub
jnp
pop
out
in
xorb
mov
out
ljmp
xchg
inc
imul
ds
sbb
adc
icebp
jle
es
outsb
mov
fucomi
repz
hlt
pop
pop
dec
xchg
add
ror
arpl
in
jb
fwait
imul
fldcw
sub
je
xchg
and
nop
pop
popf
sar
insl
xchg
xchg
ret
jl
lods
and
add
in
clc
mov
fistpll
pop
pusha
cmp
sbb
sub
pop
pop
mov
rcl
sarl
pusha
adc
std
add
movl
popaw
jg
negl
sbb
lcall
decb
mov
iret
lods
lcall
xchg
cmp
addr16
in
out
jo
sbbl
dec
inc
call
pop
jne
subl
ror
mov
je
inc
mov
adc
ljmp
and
add
push
jl
cmpsl
push
mov
arpl
shlb
in
sbb
fcompl
lahf
fnstcw
mov
scas
mov
popf
scas
fnstsw
pop
loope
int
cltd
call
inc
cmove
dec
shrl
dec
ret
sub
xor
jmp
ss
outsb
sbb
cld
jecxz
sub
in
daa
clc
and
xor
mov
add
sub
subb
adc
sbb
jb
test
jbe
lods
jns
addb
lea
push
stc
scas
test
es
add
cmc
push
aaa
dec
nop
pop
jnp
jmp
jnp
movsl
pop
mov
dec
stos
test
jp
xchg
leave
xchg
std
bound
mov
adc
push
xchg
pop
in
lods
imul
push
cmp
dec
xchg
mov
cwtl
add
test
push
sub
rcr
xchg
ja
in
jle
ret
mov
arpl
mov
icebp
sub
pop
push
pop
out
inc
leave
inc
fwait
arpl
lods
xor
aam
push
mov
or
out
lea
testb
frstor
mov
pop
test
std
xor
mov
out
xchg
int
add
or
int
fcompl
mov
clc
jo
shlb
decb
sarl
jp
jne
movsl
fwait
sub
inc
add
sub
std
stos
lret
out
mov
imul
mov
icebp
sub
jnp
mov
mov
mov
es
push
and
lds
mov
mov
xor
pop
gs
mov
out
pop
jne
in
dec
cs
hlt
or
daa
and
sbb
sti
mov
adc
inc
adc
mov
icebp
ret
jge
je
shl
aaa
cmpsl
mov
ljmp
mov
outsl
add
inc
ss
loope
sub
pop
xchg
shlb
and
mov
lds
pop
movsl
gs
push
sbb
pushl
pop
sub
push
ds
cmp
pop
mov
gs
je
fisubrl
mov
leave
fcom
lahf
mov
push
jecxz
test
aas
xlat
fs
insb
mov
rcll
fisubl
mov
into
fcmovb
cltd
mov
pop
or
loopne
icebp
push
leave
adc
addr16
sarl
inc
sub
fnsave
adc
pop
or
jl
rcrb
sub
sti
mov
lret
clc
imul
sub
ja
mov
xor
xor
or
or
jecxz
mov
jo
xor
out
out
pop
inc
and
sbb
nop
inc
inc
aad
in
popa
hlt
je
jbe
test
shr
aad
push
mov
cmp
or
jl
jle
lea
mov
lds
lea
adc
loop
push
fcompl
and
jb
or
fnstenv
adc
int3
lods
sti
mov
pushf
jg
dec
adc
inc
test
and
repz
xchg
adc
dec
bound
test
popa
xor
outsl
inc
push
mov
enter
push
mov
push
mov
imul
fidivrs
mov
insl
pop
jg
imulb
fsub
cltd
outsb
in
mov
fdivrl
insb
sti
rep
mov
daa
push
jnp
xchg
sub
mov
shrb
xchg
lcall
dec
enter
inc
jmp
adc
call
aam
enter
lcall
into
add
mov
lret
je
dec
sbb
and
pop
and
rcr
sbb
pusha
or
push
enter
push
xor
test
pop
add
jge
bound
mov
and
dec
mov
scas
push
stos
jp
stos
and
and
icebp
xor
leave
sub
nop
fdivrl
stos
and
cmpsb
mov
mov
je
and
mov
xchg
enter
jb
dec
mov
add
aas
sub
orl
popa
lahf
push
mov
pusha
dec
imul
inc
in
sub
rcrb
arpl
and
nop
xlat
cmp
sbb
sub
push
push
es
rclb
or
mov
inc
xor
pop
cli
pusha
adc
lret
add
cmovp
bound
jg
fistps
loopne
pop
cmp
push
sub
lret
cmpsl
shrl
sbb
test
mov
je
and
gs
addr16
and
add
sbb
sub
or
repz
jecxz
aas
push
in
mov
int
add
pop
das
pop
xlat
mov
mov
mov
js
pop
jle
lahf
cmp
xchg
in
push
nop
mov
pop
popa
xor
or
scas
out
test
mov
les
pop
jmp
xchg
and
in
push
test
or
movsb
push
ss
test
decb
icebp
inc
mov
shlb
test
sub
mov
pop
or
adc
mov
pushf
insl
sub
notb
cs
inc
pop
iret
lahf
pop
aam
adc
lock
xchg
xchg
leave
inc
inc
push
mov
mov
arpl
lret
inc
cmp
gs
push
push
dec
jp
add
sub
loope
xor
xor
sub
and
imul
insb
bound
pop
leave
gs
int
inc
pop
sti
shlb
jecxz
cmpsb
add
mov
pusha
cwtl
ret
inc
int
or
rolb
inc
push
adc
push
dec
mov
stos
jbe
jg
add
jmp
fisubrl
ret
les
mov
out
das
insb
push
ret
test
cmp
loope
sbbb
push
sbb
sbb
pusha
push
mov
pop
in
mov
ficoml
jo
push
test
and
mov
dec
jbe
push
cmp
xchg
add
add
push
add
and
out
inc
xor
add
iret
pop
mov
jle
int
cmp
dec
pop
aam
lock
mov
inc
in
cmp
mov
fdivr
rcrb
push
add
sub
sub
sahf
inc
push
arpl
iret
sbb
lea
cmpsb
cmpsl
jge
adc
pop
add
inc
lock
cmp
ss
into
clc
movsb
inc
xchg
fstp
fstl
or
pusha
ficomps
or
and
test
into
inc
pop
jns
adc
or
lcall
dec
jnp
test
pushf
fsubrs
addl
push
adc
sti
mov
pop
daa
scas
xchg
jns
push
lahf
inc
into
ljmp
fsubrl
rep
lods
adc
cwtl
inc
fadd
sahf
sbb
inc
and
adc
sbb
mov
sub
jnp
sarb
push
pusha
out
mov
aad
cmp
jl
mov
loopne
xchg
mov
hlt
and
out
pop
jae,pt
shr
cmp
or
dec
dec
gs
mov
jg
cltd
mov
orb
aad
jne
push
add
inc
iret
xchg
jle
pop
jl
frstor
negl
fcmovbe
sub
shll
jns
clc
sub
push
push
jp
xor
mov
push
sbb
cmp
dec
inc
es
std
xor
dec
fdivrl
shl
adc
cwtl
sarl
fnstsw
push
hlt
outsb
cmp
inc
jg
adc
xor
lods
movsb
dec
rcll
psrad
pop
test
popf
aaa
add
pop
test
out
jno
pop
pop
mov
filds
js
and
cmp
sbb
je
jecxz
rcr
addr16
imul
cmp
pop
shll
js
pop
dec
lods
xlat
lods
lds
stos
push
shlb
cwtl
test
ja
insl
and
aas
jmp
jo
pop
cmpsb
imul
lods
scas
inc
rcrl
pop
push
push
push
mov
push
xor
je
jmp
mov
insb
mov
enter
out
pop
enter
push
insb
out
popa
push
leave
jne
inc
mov
pop
mov
pop
xor
and
jnp
xchg
mov
jge
jp
rorl
or
das
das
push
dec
insl
mov
scas
je
and
mov
ret
mov
sti
or
bound
insl
push
pop
sbb
das
mov
clc
test
lcall
test
inc
cmp
cmc
inc
push
in
push
lods
fisttpll
and
adc
stc
out
loope
cwtl
clc
cmp
or
loopne
scas
or
mov
mov
sub
jb
mov
jae
cmp
cwtl
mov
iret
jnp
in
sbb
xor
cmp
mov
dec
daa
movsb
rolb
gs
jmp
sti
push
pushw
ss
xchg
xor
pop
call
hlt
and
fildll
jle
jnp
add
div
popf
out
jno
loopne
pop
pop
and
pop
daa
fcoms
sahf
or
sbb
inc
pop
push
dec
repz
xchg
test
lds
push
aas
jg
mov
jo
xchg
xchg
fisttpl
or
jg
add
lods
roll
insl
das
adc
jge
test
fwait
cmp
and
jnp
pop
jmp
mov
xor
fstps
int
ret
jg
push
imul
rorl
push
or
mov
pop
pusha
popf
mov
jo
mov
sahf
add
sub
jb
das
enter
pusha
push
insb
sbb
insl
mov
push
pop
int
call
push
mov
jle
push
stos
ljmp
imul
xchg
out
sbb
add
insl
fcomps
ja
lcall
dec
imul
testl
aaa
xlat
movl
push
cmp
int
ljmp
pop
das
cmp
and
jbe
sub
jae
dec
jno
mov
repnz
jmp
roll
mov
ss
insb
pushf
fcomps
hlt
pop
loope
fldt
ds
pusha
add
lret
sahf
and
movl
in
jbe
arpl
dec
arpl
popl
mov
mov
cmp
sub
jg
sti
icebp
push
test
dec
ret
mov
mov
sub
ds
pop
call
fs
cmp
xor
pusha
add
pop
test
mov
cmc
xchg
lahf
jno
dec
psllw
mov
push
mov
fs
inc
ljmp
stc
sub
in
push
out
xor
insl
cmc
mov
inc
mov
or
leave
negl
inc
popa
shll
pop
outsl
jl
ds
std
inc
lds
loopw
pop
fmuls
add
or
movsb
xor
das
xor
push
cmp
jo
sbb
js
cwtl
in
outsb
pop
push
mov
lcall
sub
cmp
movl
pop
mov
cmp
es
pop
jge
mov
inc
pop
push
or
dec
xchg
cmp
gs
movsl
inc
dec
push
dec
mov
or
or
xchg
mov
orl
imul
and
mov
cmc
cmp
sbb
divb
sti
aas
out
outsl
cmp
mov
scas
shll
mov
and
scas
pop
stos
or
out
jmp
mov
nop
jg
push
inc
movsl
les
ja
sbb
jmp
lea
adc
jo
mov
imul
dec
gs
in
push
stos
sbb
pop
dec
sbb
lcall
and
lods
pushl
les
adc
je
imul
addl
ss
test
mov
pop
addb
dec
and
insl
jne
outsl
addb
jp
sub
jmp
lea
ja
xchg
std
loop
lret
rol
xor
aaa
dec
adc
repz
subb
mov
mov
insl
popa
aas
out
adc
xor
pop
cmp
stos
cltd
add
fwait
mov
inc
pusha
sub
jo
xor
add
add
mull
imul
leave
sub
mov
cwtl
shll
mov
imul
sbb
scas
cmpb
adc
je
js
xchg
push
mov
pop
addr16
fisttpl
xchg
cli
movb
nop
in
pop
mov
scas
xlat
and
cmp
push
sahf
scas
sub
jno
pop
roll
movsl
sbb
repnz
sub
rclw
sub
rcll
xlat
aam
nop
stos
add
in
pusha
cmp
xor
mov
pop
inc
and
mov
and
xchg
push
aaa
xor
test
push
lahf
mov
ret
add
push
xchg
cli
sbb
mov
pop
das
pop
clc
ret
shlb
jns
sahf
arpl
mov
jmp
jne
sub
movsb
int3
jecxz,pt
sub
ja
add
or
dec
fcmovnb
insb
insl
leave
adc
or
cld
jmp
adcb
jge
jl
add
mov
rorl
xlat
popa
loopne
and
fs
push
cmp
jae
jmp
and
stos
mov
jno
ffree
sahf
inc
sbb
stos
adc
jp
cmpl
stos
push
pop
jg
cs
adc
test
jp
mov
mov
mov
xchg
insb
jle
ret
adc
mov
rcrb
imul
cli
xor
push
mov
daa
xchg
and
cmp
and
inc
pop
inc
xchg
xchg
mov
test
testl
push
data16
shll
loopne
xchg
es
shlb
movl
enter
add
rcl
addl
lret
jnp
or
push
sbb
mov
fisttps
lret
lcall
hlt
xor
sbb
in
mov
fcmovu
lret
jp
test
outsb
test
adc
inc
mov
dec
int
lea
cmpsl
adc
fsubl
lahf
jbe
fdivs
or
adc
and
xchg
mov
rolb
imul
cmc
daa
daa
sub
add
ds
sti
icebp
cmp
dec
sub
jo
jnp
ljmp
shl
clc
sahf
jo
cli
push
int
or
lret
cmp
xor
mov
ret
pop
dec
test
inc
mov
cld
mov
out
pop
add
mov
lods
xchg
les
dec
cmp
in
push
mov
retw
dec
fmuls
rolb
lods
inc
sub
push
inc
cmp
inc
sti
push
mov
lea
out
pop
dec
xchg
lea
xlat
xchg
push
xchg
enter
fldl
es
add
arpl
xchg
fidivl
sbb
push
xor
imul
jle
loope,pn
jns
outsl
mov
cmc
mov
int
cmp
or
orb
sbb
popf
sarl
inc
xchg
adc
add
scas
mov
mov
imul
stos
pop
pcmpgtd
push
inc
ljmp
movsb
lea
inc
stc
shll
roll
sbb
aas
inc
jns
outsl
adc
push
mov
mov
dec
xchg
jmp
imul
xor
push
add
sarb
clc
lret
jg
adc
call
jmp
pop
das
or
iret
dec
leave
shll
daa
mov
inc
pop
mov
loope
rcrb
test
repz
js
ficoms
mov
ret
push
insl
xor
aas
mov
ret
dec
jae
or
sbb
std
fwait
inc
inc
subl
jmp
movl
stos
and
dec
mov
cmp
pop
and
xchg
adc
nop
push
mov
aaa
orb
xor
jmp
shl
sub
mov
icebp
sti
outsb
xor
mov
jo
aaa
adc
ja
push
fwait
test
pop
lret
stos
sarb
inc
fwait
shlb
push
lods
fdiv
js
push
stos
adc
mov
lods
push
testb
and
lods
mov
mov
decb
jae
frstor
mov
jmp
out
push
outsl
mov
mov
xchg
adc
and
and
test
loopne
cltd
xchg
dec
adc
sahf
sbb
andl
lods
and
btc
cmpsb
jl
icebp
pop
lds
sub
repnz
pop
notl
add
jne
pusha
loopne
mov
scas
add
sarb
add
dec
nop
ret
loop
popa
push
psrlw
xlat
sbb
xor
pop
adc
stos
xchg
mov
dec
ja,pn
xor
cmp
jmp
jecxz
inc
cs
jbe
push
cmp
sub
jg
push
mov
fldcw
mov
mov
xor
aam
or
cld
xchg
loope
testl
pop
add
xor
das
int
add
outsb
sti
jg
roll
and
mov
sbb
pop
jno
lock
sbb
sub
and
loopne
xlat
pop
cmp
cmpsl
inc
sbb
sbb
lret
and
cmp
sahf
fld
cwtl
pop
push
roll
dec
mov
daa
xor
pop
enter
cmp
mov
clc
lods
das
movsl
jp
ss
jns
jne
imul
or
outsl
mov
mov
mov
es
or
xchg
push
movsl
shl
dec
xchg
mov
push
call
jbe
cltd
out
scas
loopne
push
adcl
mov
scas
inc
iret
in
or
mov
shl
mov
sub
lret
jbe
cmpsl
mov
lds
add
ja
inc
mov
mov
and
addr16
fnstsw
adc
push
iret
xchg
mov
dec
cmpsl
icebp
mov
mov
enter
pop
outsb
adc
cmp
mov
mov
repz
push
enter
jne
pop
pop
mov
mov
loopne,pt
mov
enter
cmp
jne
sub
sbb
pop
or
sti
test
inc
xchg
cmp
sbb
fsubl
aaa
jge
js
xor
lcall
add
sti
inc
xchg
jae
cmp
hlt
loope
jmp
xchg
ja
stc
add
pusha
xor
pop
aad
or
xchg
sub
mov
int3
sbb
cmp
pop
ljmp
pop
movl
pushf
ret
or
mov
mov
fidivrs
mov
lcall
and
fsubrs
jmp
lea
mov
fs
jnp
insl
xchg
imul
shl
mov
xor
mov
pop
adc
insb
or
jns
ds
cmpsb
xchg
icebp
push
dec
cwtl
lea
mov
and
push
ja
test
xchg
lea
sar
mov
sub
or
inc
ret
shlb
sbb
jecxz
mov
push
loopne
inc
pop
push
gs
sbb
pop
mul
out
cmp
sub
pop
sub
xchg
lods
outsb
pop
stos
mov
out
scas
mov
push
lods
out
pmulhw
xor
imul
leave
mov
jle
loopne
and
add
mov
xchg
inc
pop
adc
lds
pop
jecxz
push
in
and
xor
out
sti
cmp
test
pop
push
rolb
add
out
pop
out
or
cld
test
daa
fstp
inc
pop
jle
in
fnstsw
insl
mov
jb
in
rol
and
jno
push
inc
flds
or
clc
sub
sbb
leave
jg
icebp
and
jb
sub
fdivl
cs
jno
or
mov
jl
sub
jecxz
pushf
loope
rorb
or
testl
sbb
mov
cwtl
repnz
aam
xor
dec
fwait
jg
orb
pop
dec
sub
mov
rolb
dec
lods
jp
sbb
mov
ret
mov
and
push
jp
sarl
icebp
fcompl
mov
lea
loopne
addr16
mov
ret
cli
and
inc
loop
and
fcmovnbe
xor
cmp
pusha
outsb
mov
cvtps2pd
xlat
inc
xchg
inc
sarl
dec
fwait
sbb
adc
in
cmp
mov
pop
movups
lock
sub
cmp
push
xchg
test
push
std
cwtl
shr
push
pop
cmp
mov
inc
mov
push
sar
mov
mov
add
insl
aas
push
xchg
adc
pop
iret
shll
jge
push
adcb
push
test
jno
ja
jl
xchg
xchg
in
xor
dec
xor
jp
stos
ret
fidivrs
das
or
lea
fs
insl
int3
cmp
xor
or
mov
cs
lods
jno
popf
rol
or
fadd
jmp
dec
mov
sarl
dec
enter
push
or
insb
inc
hlt
mov
xor
and
pop
mov
loopne
das
lahf
scas
sbb
ja
in
push
ds
test
inc
mov
mov
insb
sahf
test
push
aad
or
adcb
call
scas
jae
push
push
jb
xor
mov
call
sub
bound
lret
cmp
xchg
rorb
dec
out
je
pop
fldt
enter
cwtl
idivl
daa
or
ret
sub
decb
sub
ret
fcmovb
and
xchg
jb
inc
xchg
mov
lret
shl
arpl
loope
inc
mov
iret
call
push
orb
xor
imul
dec
fcmovu
sahf
sti
mov
mov
repnz
push
pushf
xchg
jae
ja
jmp
pushl
dec
pushf
fs
fcomp
inc
xor
int
pop
int
mov
daa
sbb
mov
testl
sti
leave
stc
bound
mov
sub
mov
shl
xor
pusha
xchg
fadds
mov
dec
insb
scas
aas
ret
iret
sub
imul
incb
add
cmp
jmp
pop
lock
push
jmp
and
xor
push
pop
push
cmp
sarb
pop
sub
std
fsub
push
cmp
pop
add
insb
ds
ss
imul
in
cs
movsl
and
xchg
or
aad
subb
xchg
lods
loopne
lods
mov
jnp
lcall
les
shlb
stos
mov
inc
jmp
cs
lret
and
subb
out
inc
jbe
repz
adc
xor
mov
pop
sbb
ret
xchg
sbb
sub
and
cwtl
add
hlt
xlat
arpl
fnstenv
in
push
jmp
in
mov
xor
scas
js
out
jbe
mov
sub
movsb
xchg
sub
sbb
inc
popa
mov
les
sub
loope
sub
jae
jle
rclb
mov
shrl
cmp
gs
mul
cltd
add
lea
or
xchg
inc
jns
xchg
sbb
imull
jae
call
lret
fwait
je
sub
or
mov
dec
in
leave
in
push
ret
je
or
fcmovnbe
and
jge
mov
push
and
pop
pop
inc
lret
sahf
cmp
lds
pop
jmp
pop
dec
mov
add
lahf
fiaddl
jae
aas
pop
pmaddwd
jo
inc
sbb
sbb
testb
inc
in
pop
xor
cli
jle
jnp
insb
and
mov
outsl
loope
ja
xor
push
lock
xchg
faddp
xchg
dec
mov
je
pop
jg
loop
jo
sub
inc
xchg
push
jg
test
push
test
lods
push
stc
xchg
add
les
test
test
sbb
adc
cld
jl
dec
mulb
gs
inc
je
cmp
fbstp
fnstcw
dec
test
mov
lahf
movsl
sbb
addb
cmc
xor
pop
mov
jno
insb
cmp
mov
push
mul
clc
out
mov
stc
aas
jp
pushf
repnz
jmp
xchg
mov
add
xor
insb
jl
in
sub
and
adc
cwtl
xchg
pop
dec
mov
jb
and
xchg
and
push
fisttps
mov
mov
mov
ds
jns
fs
cmp
movsl
jbe
sub
es
pop
add
and
jno
jo
inc
dec
mov
ja
aad
lock
add
movsb
sbbl
loope
mov
lcall
mov
cmp
add
xchg
push
pusha
mov
adc
rcrb
lea
fisubs
imul
add
cmpsl
leave
test
in
jno
push
roll
ret
cmp
test
movl
ss
ljmp
repz
xchg
jno
push
lcall
mov
xchg
out
movsb
dec
or
ds
daa
orl
loopne
push
lods
ds
cmpsl
and
add
jb
test
aam
inc
out
test
pop
sbb
inc
jp
jae
xchg
ds
inc
push
xor
cltd
xor
sbb
into
xor
inc
xchg
ficoms
lods
and
push
and
insl
cwtl
testb
jno
xchg
nop
ret
stc
add
outsl
sbb
enter
dec
mov
pop
pusha
inc
mov
sbb
push
cmp
es
dec
inc
stos
dec
and
daa
push
das
push
or
sbb
mov
cmp
bound
adcb
xor
cs
out
xor
dec
in
aas
xor
das
cmpsl
ret
aad
repnz
jnp
leave
fildll
mov
test
cmp
fidivl
sahf
ret
cmp
fcompl
scas
cmpsl
xchg
push
insl
loopne
insb
aas
xchg
lcall
mov
outsl
push
into
gs
jb
sub
mov
xchg
or
fildl
clc
pop
pop
es
repz
imul
popa
dec
mov
xchg
roll
mov
popf
in
or
imul
xchg
aaa
dec
pop
iret
fstps
int
pop
inc
mov
mov
fnstenv
push
imul
push
mov
dec
mov
mov
stos
mov
loope
cmpsl
stos
adc
jae
xorb
test
mov
add
movsb
cli
stos
add
mov
adc
ljmp
cld
into
pop
inc
add
mov
xchg
pop
sti
xchg
cmp
insb
push
xchg
push
les
das
push
shll
push
pop
mov
and
jb
jns
adc
stc
xchg
stos
cs
sti
clc
dec
out
adc
stos
jmp
gs
dec
jmp
leave
lea
add
lcall
cmp
aad
mov
mov
or
push
xor
stos
cli
paddusb
xchg
js
cmp
jbe
inc
pop
jmp
cmp
enter
into
shll
les
xchg
jle
or
jecxz
and
bound
add
dec
mov
in
cmp
fimull
scas
lods
cs
or
iret
daa
les
xchg
push
rclb
cmpsb
add
adc
cmp
xor
mov
push
inc
cmp
clc
or
stc
sub
jecxz
aam
movsb
shr
std
jg
cmp
call
and
outsb
call
data16
ss
popa
or
repz
xor
mov
pop
sbb
int3
imul
jo
adc
jo
int3
enter
pop
push
mov
inc
in
lea
cmp
sbb
daa
daa
imul
fistps
xchg
rorb
ret
imul
mov
push
aas
lods
aad
inc
out
rcl
sbb
sti
push
pop
sbb
scas
rolb
mov
fwait
adc
cmp
mov
stos
shlb
sub
daa
pop
jne
movsl
ss
sti
push
out
inc
popf
mov
out
xorb
loopne
xlat
xorb
and
mov
in
nop
pop
imul
imulb
xlat
jbe
aam
imul
mov
lret
fnsave
dec
cmpl
pop
out
lods
fs
cmc
sbb
cld
jb
sbbl
ja
popf
cmp
stos
ja
cmpsl
or
jb
mov
mov
mov
imul
ljmp
test
sar
mov
or
into
pop
pushf
inc
xor
mov
in
and
jmp
prefetch
sub
popa
roll
mov
or
mov
shll
mov
cli
dec
mov
xchg
cmpsb
out
aaa
sub
aas
arpl
sub
pop
dec
xchg
inc
in
mov
bound
lret
and
mov
push
sub
xor
je
out
jno
and
adc
mov
ljmp
xchg
popf
fs
aam
cmp
adc
sub
xor
xchg
out
push
mov
inc
pop
cmp
sub
decl
stc
test
inc
pop
lret
ljmp
test
aas
dec
leave
psubsw
pop
enter
and
jle
pop
outsb
mov
pusha
adc
mov
xor
cmp
mov
mov
dec
jne
cmp
scas
and
jmp
and
call
xor
pop
add
ret
xchg
mov
aad
xchg
xchg
mov
iret
sbb
mov
mov
aad
add
cmp
roll
push
cwtl
push
pop
adc
cmpsl
xchg
mov
fbld
rcl
imul
pop
mov
andl
jmp
inc
out
imul
inc
xchg
stc
in
sub
js
or
jb
and
inc
push
popa
pop
aas
fdivrs
sub
insl
push
sub
and
jge
add
fisubl
cmp
dec
icebp
orl
or
push
ret
jb
and
shll
cmp
adc
and
dec
mov
rorb
test
fisubl
das
idivl
add
or
test
sbb
out
sub
pushf
mov
add
push
fnstsw
inc
xor
mov
mov
push
jl
cmp
stos
inc
xor
mov
push
inc
enter
mov
xor
mov
add
xor
mov
fmul
push
pusha
jbe
push
sub
mulb
adc
fildl
mov
adc
adc
lret
das
pop
and
call
sub
shl
popf
cs
insb
xchg
pop
inc
pusha
pop
pop
pop
lock
push
xchg
cmp
insl
loop
sub
or
or
daa
jo
xor
cwtl
jle
out
lret
push
mov
xor
lahf
adc
mov
rol
adc
mov
jmp
pusha
imul
cli
daa
mov
out
mov
cmp
adc
nop
mov
pop
out
mov
cmc
adc
dec
test
loope
imul
pop
or
cmp
sbb
adc
mov
add
lcall
lret
pop
sbb
imul
out
pop
in
subb
shl
xor
mov
dec
xchg
movb
ds
cmpsl
cltd
adc
lret
mov
cwtl
leave
adc
cmc
pop
adc
mov
jge
ror
mov
xchg
mov
notl
test
pusha
dec
sbb
cmpsb
xor
and
push
decb
nop
pop
cmp
lahf
aas
aad
mov
mov
leave
gs
cmp
or
sbbl
divb
or
pop
adcl
inc
mov
aaa
rcll
or
pusha
shlb
rclb
mov
sbb
or
jne
pop
jb
cld
sub
jb
dec
shll
ret
inc
jmp
call
outsl
mov
out
js
push
xlat
ljmp
xor
imul
stos
aas
push
xor
int
int
add
fidivs
and
inc
xchg
mov
cmc
adc
andb
addr16
movsl
cmp
or
rdpmc
sub
iret
add
lods
jns
dec
in
movsl
mov
mov
rcll
mov
mov
push
xor
push
in
insb
xor
jb
repz
subl
jbe
adc
fisubs
test
pop
dec
push
sti
push
std
mov
jb
add
das
popa
inc
push
call
scas
gs
out
ds
push
das
xchg
daa
mov
adc
movl
xor
sub
jbe
aad
mov
push
mov
dec
sub
aas
pop
adc
sbb
pop
mov
in
sti
repnz
icebp
ficomps
test
scas
fcoml
sti
mov
inc
xchg
cs
push
dec
jl
jmp
cmp
jnp
inc
fiadds
fnsave
inc
push
jecxz
mov
inc
mov
icebp
mov
jnp
repnz
mov
out
test
ret
rorl
jmp
ljmp
in
outsl
mov
xor
add
pusha
arpl
test
and
hlt
movsl
cmc
add
cmp
enter
gs
and
nop
and
gs
jge
cmc
pusha
lods
out
mov
push
pop
mov
or
jmp
das
lods
push
jmp
fimull
jecxz
sbb
jg
fidivs
xor
das
pop
sbb
mov
cld
dec
xor
lahf
out
cld
pushf
or
add
jnp
or
add
scas
xchg
or
inc
outsb
outsl
mov
js
shr
ss
sub
mov
jns
nop
sbbb
daa
lahf
mov
adc
mov
mov
idiv
aad
rcrl
arpl
lahf
dec
push
rcrl
lahf
inc
adc
das
out
inc
std
xchg
stos
movsl
and
mov
mov
ror
ffreep
shl
jmp
dec
les
dec
pop
repnz
inc
icebp
fnstsw
out
pop
sti
mov
jmp
mov
fs
adc
repnz
lret
push
pop
into
mov
insb
dec
lock
xor
mov
pop
mov
mov
stos
or
jnp
daa
push
and
mov
add
cltd
inc
test
mov
mov
sahf
xchg
xor
jae
lret
jne
or
jmp
imul
mov
aas
or
jmp
sbb
mov
inc
or
fimuls
repz
xor
adc
lahf
sbb
push
mov
mov
imul
jge
inc
xor
test
call
in
inc
jp
les
pop
js
aaa
and
out
jge
outsb
jns
push
outsb
test
dec
jmp
adc
ss
or
fs
xor
pop
push
mov
addr16
ss
int3
ret
lock
fmull
jecxz
fnstcw
push
nop
stc
jp
mov
cmc
dec
jns
fcmovnu
nop
sub
cmp
pop
sbb
scas
inc
push
adc
jno
sete
mov
cltd
xor
out
sti
stos
cmpsb
arpl
jmp
pop
mulb
lds
or
ss
ret
sub
orb
mov
test
addr16
lahf
inc
xchg
adc
in
fsubrl
aam
enter
lret
push
add
xor
mov
xor
adc
data16
and
std
popa
shr
cwtl
clc
into
jnp
cmp
cmp
jo
or
nop
aam
cmp
push
mov
shrb
push
enter
jb
cmp
adc
mov
xchg
mov
pop
sub
iret
push
jnp
add
jle
jg
pop
cmp
data16
xor
dec
in
cli
pushl
shrb
mov
dec
jne
leave
test
cmp
aam
dec
sbb
sbb
lret
pop
pop
pop
std
rol
cmpsl
push
popf
std
js
pop
fcmovnu
fcmovnu
push
mov
adc
and
jge
shrl
iret
pop
ror
mov
in
and
dec
insl
into
mov
xor
sub
xlat
push
fsubs
sbb
mov
xor
sub
je
out
sbb
mov
mov
aas
addr16
ret
cmp
xor
or
mov
dec
mov
and
xchg
mov
xor
aad
movsb
cmpsb
xchg
cmp
or
loope
push
mov
dec
lock
pushf
clc
in
fcoml
xor
aas
mov
push
ds
sub
xchg
int3
push
cltd
inc
or
xor
sbb
xchg
js
adc
imul
fistl
xlat
or
mov
mov
xor
push
test
sub
out
scas
inc
adc
ja
mov
cld
cmp
jo
iret
cmc
test
repnz
add
ret
mov
scas
xchg
jp
or
in
movsb
scas
repnz
sarb
outsb
sub
push
dec
or
inc
mov
cmp
cld
icebp
rcrb
pop
popf
xchg
lahf
addr16
sbb
mov
es
lods
push
mov
outsl
repz
xor
and
inc
bound
sahf
pop
loop
mov
shll
movsl
or
popf
insl
fistpl
dec
cli
ficoms
rol
ljmp
inc
fs
push
jns
xor
inc
add
xchg
and
mov
jb
call
xor
mov
xchg
mov
xchg
icebp
push
dec
movsb
sbbl
sub
and
sub
cmp
inc
imul
add
in
xor
shrl
dec
insb
cmc
out
ret
fwait
and
inc
sbb
lea
or
xchg
xor
into
faddl
push
jns
push
jge
aam
aas
or
jge
daa
in
mov
addr16
mov
mov
lret
sbb
or
fwait
mov
je
dec
pop
outsl
pop
sbb
jne
mov
and
xor
adc
xor
or
das
stos
jno
lcall
jg
das
lods
adc
pusha
in
add
gs
sahf
mov
or
sti
stos
pop
test
mov
pushf
push
push
jb
cld
xor
test
mov
push
icebp
mov
pop
test
inc
mov
fildll
sbb
push
sub
inc
std
xor
lods
ret
imul
sbb
dec
and
jno
jae
inc
test
cltd
fildll
pop
insb
mull
cmp
ret
adc
lock
push
addr16
lock
sub
pop
pop
sbb
ret
or
scas
dec
mov
notl
and
mov
icebp
cmp
or
cltd
imul
aaa
jns
shlb
jp
sub
cld
cmp
and
jecxz
rcrl
not
mov
lds
cmp
pop
push
sti
clc
rcr
cmp
scas
fiaddl
sahf
add
mov
out
sub
jmp
movsb
pop
xchg
es
jg
movb
sbb
mov
loop
inc
mov
sarl
lret
das
add
push
insl
fs
daa
xchg
push
ret
jecxz
pop
sbbl
lea
test
fldcw
add
inc
cmovnp
pop
sub
cmp
adc
loopne
leave
leave
push
jo
push
insb
jle
mov
test
bnd
mov
xchg
dec
and
inc
fwait
ja
push
scas
push
push
push
ret
cwtl
and
cmpsb
outsl
mov
and
and
jo
jne
scas
rorl
mov
stc
addr16
fs
insb
inc
fsts
mov
mov
mov
push
das
not
pop
mov
orl
jo
inc
iret
cmpsl
cmc
cmp
adc
mov
stc
insl
pop
push
stos
mov
movsl
mov
sbb
inc
xchg
xor
mov
inc
ja
dec
inc
lock
sahf
movsl
mov
arpl
mov
sbb
xchg
push
dec
add
pop
iret
stos
jnp
push
insb
cmp
sub
scas
adc
push
add
nop
das
mov
jae
lods
push
pop
faddl
sti
dec
mov
test
cld
stc
add
adc
sbb
xchg
pop
into
dec
imul
outsl
mov
outsl
jb
mov
or
mov
push
sub
imul
clc
pop
jbe
and
push
ret
mov
movsl
xchg
insl
cwtl
test
add
movsl
lahf
outsb
sti
adc
xor
hlt
into
mov
sub
js
aaa
fisubrl
lock
inc
ja
nop
rcrb
mov
mov
jge
aas
xchg
xchg
int
in
cwtl
push
pop
out
sbbb
hlt
sub
push
pop
mov
pop
jb
xchg
pop
adc
push
inc
mov
fisttpl
nop
mov
movsl
incb
sub
adc
test
movsl
or
mov
jbe
jns
movsl
sub
fptan
add
push
sahf
rorb
das
lea
mov
mov
rcrl
mov
or
movsl
cld
mov
adc
leave
ja
lret
cmpsl
aad
imull
mov
mov
sub
mov
out
add
cmpsl
stc
sbb
repnz
xor
mov
cmp
jecxz
aas
cwtl
out
loop
add
out
hlt
mov
insl
jo
xchg
cmp
call
push
in
scas
cmc
or
ljmp
call
dec
movsb
subb
adc
mov
jg
cld
das
or
jo
sbb
push
inc
hlt
addr16
fcmovnbe
sub
add
cmp
outsb
mov
fdivrs
sub
mov
fisttpll
inc
iret
lods
addr16
jl
jl
push
mov
or
mov
and
push
push
sbb
fiadds
mov
xor
and
xchg
scas
bnd
pop
mov
fs
sub
mov
test
dec
xor
push
xchg
lahf
pop
dec
arpl
movsb
fisttpll
jp
fildl
adc
cmp
ret
push
popl
jl
sbb
xor
in
jbe
mov
frstor
mov
sub
outsl
movsb
and
fistps
sbb
xor
repz
ret
aam
aad
outsb
fsubrp
mov
test
push
popa
fsubs
mul
testl
scas
jo
xchg
push
or
mov
outsl
mov
sub
rcl
cmpsb
ds
shrb
jp
jbe
xor
jle
jg
in
inc
dec
popa
pop
push
dec
les
stc
adc
pop
cmp
xor
pop
mov
adc
in
cmpsl
mov
xchg
loope
dec
or
push
adc
sbb
jne
mov
fcmovnb
aas
and
scas
push
dec
je
sti
sbb
test
out
std
mov
push
repz
jl
mov
and
inc
mov
adc
jns
lods
repz
mov
ds
and
pop
in
aas
movsb
add
mov
insb
mov
les
mov
nop
subb
and
and
adc
and
cmpsl
xor
add
addr16
andl
xorb
pushf
push
leave
mov
mov
or
insb
inc
push
mov
jge
pop
dec
dec
adc
inc
cmp
push
int3
push
sar
movsl
jbe
mov
sbb
sub
ja
jbe
or
add
insl
orb
stos
jbe
cmpl
shrl
dec
mov
cs
jmp
cmp
ja
in
and
xchg
sub
adc
insl
not
stc
out
push
cmp
or
mov
adc
pop
rolb
pop
incb
mov
es
lcall
in
sarl
leave
jnp
fsubr
sub
xchg
add
les
clc
jbe
dec
fs
adc
jb
stc
push
jo
dec
nop
out
lock
enter
sbb
jae
add
outsl
bnd
imul
xchg
inc
mov
sub
push
in
aam
rcpps
and
inc
add
shrl
aad
data16
sub
cli
inc
out
xchg
sbb
bound
shlb
and
bound
test
mov
jl
jp
lret
in
aas
add
dec
leave
fldt
and
jle
dec
nop
in
adc
push
fdivrl
inc
ds
and
push
jg
push
push
test
inc
sbb
dec
adc
lods
add
shrl
or
ret
inc
or
xchg
mov
ljmp
test
mov
or
pop
jle
xchg
call
out
adc
inc
jns
cld
shlb
cli
xor
cmp
add
fidivrl
ucomiss
inc
dec
or
pop
inc
jge
rcll
mov
jle
push
pop
xor
insb
out
jl
lods
pop
gs
repnz
dec
jle
add
jmp
mov
mov
pushf
xchg
lods
jle
mov
sub
in
mov
jmp
rorl
mov
jp
pushf
pusha
pop
scas
push
jmp
inc
pop
int
cmp
scas
pusha
mov
adc
adc
addb
les
dec
aam
sbb
mov
pop
jb
sbb
stc
mov
jne
nop
aaa
clc
push
cmp
and
add
cmc
ret
xchg
sub
aaa
sbb
jb
pop
cmc
dec
mov
pop
add
das
aas
jge
dec
mov
mov
jno
jle
dec
lahf
inc
and
inc
and
bound
and
mov
adc
xchg
mov
cmp
pop
adc
popf
or
dec
xor
sub
sub
mov
sbb
lea
mov
inc
fwait
loopne
repz
jle
mov
cli
inc
and
ss
jge
dec
inc
test
add
push
sub
lahf
mov
std
mov
dec
scas
lea
iret
lret
mov
dec
loopne
mov
idivl
or
or
inc
mov
mov
sub
lret
lahf
outsb
sbb
add
jp
pop
cmc
jp
cmp
test
data16
fsubs
xor
ljmp
loop
das
cmpsl
sahf
push
std
jae
mov
or
mov
test
add
iret
adc
fidivrs
sti
lea
sub
addr16
mov
scas
dec
mov
aaa
mov
lret
call
jp
mov
mov
ljmp
jmp
test
mov
pop
add
imul
aas
sti
dec
sub
jnp
dec
outsl
push
push
sub
mov
cmp
std
gs
jl
adc
fwait
cltd
lods
adc
sub
iret
test
push
cli
xchg
xchg
jle
imulb
mov
adc
mov
pop
je
filds
and
jg
dec
fsub
lea
or
and
call
std
xor
bound
in
ds
fimuls
cwtl
neg
pop
popf
imul
cmp
int
fildl
xchg
push
scas
out
mov
fcoms
aas
hlt
stc
lret
add
pop
out
outsb
mov
ljmp
dec
std
xor
push
inc
data16
or
mov
movsb
cwtl
imul
ss
cmp
sbb
adc
pop
pop
jae
dec
cmp
stos
ja
stos
sub
sbb
fisubrl
xlat
cmp
xor
rcr
psllw
mov
jmp
shrl
sub
jb,pt
mov
or
pop
call
or
mov
into
inc
into
ret
in
or
icebp
adc
cli
adc
or
push
loopne
loopne
dec
rcll
push
push
pop
xor
adc
mov
and
rclb
mov
adc
push
mov
aam
test
and
cmpsb
stc
and
testb
lcall
mov
mov
sub
push
mov
loopne
stos
xchg
pop
rolb
je
adc
and
loopne
aas
ja
add
cmpsb
ror
mov
dec
loop
or
sbb
adc
jp
sbb
add
movsl
hlt
sub
ja
ret
inc
xchg
and
xor
sarb
std
lock
pop
mov
les
mov
push
mov
pop
mov
xor
dec
push
adc
or
addr16
xchg
jb
push
je
xor
movsl
cmpsb
ljmp
pop
sbb
int
shll
sbb
and
inc
sahf
push
mov
shrb
adc
sbb
mov
cs
adc
cmp
inc
jp
ja
or
or
mov
push
ss
or
test
ds
cld
jns
out
test
lods
jns
jnp
jmp
mov
pushf
pop
xchg
and
popf
sbb
fcoms
jnp
insb
js
ljmp
adc
in
in
dec
iret
xchg
daa
xchg
aas
cmp
lock
add
repnz
and
rcr
push
scas
mov
mov
dec
dec
out
lcall
push
sbb
negl
cmpsb
push
or
cli
cli
and
fisubl
insl
add
testl
dec
aaa
loopne
xor
mov
add
push
sub
inc
rorl
mov
cmp
insb
inc
mov
fnsave
mov
insb
xor
mov
dec
insl
mov
and
mov
xlat
fidivl
insl
mov
xor
int
add
cmp
push
inc
outsl
notb
mov
add
pop
popf
sbb
xor
xchg
cli
sub
fadd
sub
sarl
fisubrs
push
pop
inc
nop
into
adc
sub
mov
mov
pop
xor
aas
out
test
adc
cld
push
xor
test
add
gs
adc
and
jbe
xchg
sti
idivb
and
ja
xor
push
and
push
lcall
push
push
jge
lock
sub
dec
aas
xchg
andl
fyl2x
rcll
and
in
xchg
repz
aad
mov
outsl
mov
push
pop
test
test
sub
mov
fs
xlat
dec
insb
xchg
xchg
aas
leave
aaa
adc
mov
out
mov
or
popf
dec
pop
jno
insb
jo
adc
mov
cwtl
adc
push
or
add
xorl
pop
inc
mov
daa
xor
int
aaa
cs
dec
shrb
rorb
stc
adc
aaa
jno
cmp
pop
add
mov
pop
mov
test
sbb
xchg
loopne
dec
dec
fmuls
mov
xchg
scas
pushl
cli
mov
mov
inc
dec
jl
mov
adc
lods
mov
cmp
dec
sbb
pop
arpl
icebp
sar
mov
fnstenv
push
push
cld
mov
xchg
mov
sub
cmp
mov
cs
jecxz
sbb
push
out
popf
stos
pushl
dec
mov
mov
mov
sub
scas
mov
insl
mov
fsubs
mov
add
ffreep
data16
xor
mov
lods
lahf
cli
in
imul
outsl
or
shrl
inc
loopne
mov
cmp
enter
lods
push
jle
pop
les
add
or
jae
scas
js
and
mov
pop
in
mov
clc
pushl
loopne
cmp
ja
xchg
mov
sbb
sbb
add
mov
jge
inc
ficompl
inc
mov
mov
mov
jle
aad
ret
xchg
xor
lds
mov
imul
adc
cld
lock
dec
mov
add
mov
add
sub
lcall
and
nop
aas
xchg
pop
nop
pop
aad
orb
cmp
bswap
mov
cmp
enter
cmp
mov
and
jns
movsl
movsb
xchg
fidivrs
daa
sub
lock
cmp
or
adc
mov
insl
jmp
in
adc
cmp
pop
push
popf
insb
fstpt
push
mov
enter
in
fldl
aaa
xchg
adc
cmp
cmpsb
push
popf
jg
xchg
popf
mov
nop
and
cwtl
shl
mov
movsb
les
mov
aad
add
frstor
xor
push
pop
popa
mov
stos
cli
inc
xchg
inc
outsb
in
and
and
adc
mov
mov
push
sbb
push
sarl
fildl
movsl
and
mov
negl
adc
fdivl
or
test
repnz
sub
jnp
mov
pusha
or
pushf
push
push
xchg
xor
mov
push
xchg
xchg
fsub
or
int3
js
out
cmc
fimuls
nop
xor
js
sub
repnz
xchg
lret
xchg
push
xchg
sbb
fldenv
jnp
xlat
xchg
in
ss
xchg
jp
jg
mov
push
cmp
mov
push
ss
mov
push
cwtl
movsl
ss
ljmp
ds
add
insl
ret
add
jno
pop
mov
pushf
jno
stos
outsb
jbe
jmp
imul
mov
flds
imul
js
addr16
mov
add
sbb
dec
scas
lods
out
jbe
mov
xchg
fs
mov
cld
mov
nop
outsb
jno
inc
pop
lret
dec
jnp,pt
pop
out
cmpsl
loope
cmc
pop
stc
mov
xchg
push
movsb
shll
or
mov
mov
pop
fcoms
adc
mov
push
mov
pop
sub
cmp
xor
mov
inc
pop
jb
and
aas
sahf
popa
xor
dec
push
mov
jl
fisttpll
adc
adc
je
cmp
sahf
sbb
lea
mov
adc
mov
inc
popa
ss
pop
mov
dec
imul
mov
pop
ds
arpl
stc
jp
outsl
or
fidivrs
push
mov
nop
push
mov
bound
jo
and
sub
mov
ja
movsl
pop
mov
test
stc
pop
xlat
data16
push
std
xchg
jmp
dec
bnd
aad
jmp
lods
jmp
cli
xchg
pop
hlt
and
pop
cmp
ja
cli
es
ret
mov
xchg
jns
filds
ja
cmc
inc
sbb
and
iret
xchg
push
jb
imul
aam
les
push
andb
pop
mov
stc
out
test
sub
in
aam
das
dec
xchg
fists
xorb
xchg
push
xchg
push
push
sub
fsubrl
int3
dec
pop
mov
cmp
or
test
mov
cmp
mov
mov
mov
shll
dec
jl
dec
pcmpgtw
stos
scas
jbe
mov
and
push
bound
enter
sub
jecxz
cmp
out
cmp
xchg
fadds
call
sbb
or
cmp
mov
mov
dec
in
fnstsw
std
inc
dec
xor
ret
pop
cmp
and
mov
mulb
cmp
or
push
sbb
das
dec
xchg
mov
addr16
xchg
mov
pop
test
imul
jmp
mov
push
inc
rorl
sbb
adc
cltd
jae
or
jno
cmp
dec
ljmp
lds
and
dec
cltd
outsb
movsb
stos
rcrl
shl
aas
call
cli
outsb
push
cld
ljmp
in
mov
jb
mov
sbb
aad
icebp
gs
pop
mov
shrb
in
xor
mov
xchg
sub
fiaddl
dec
adc
fbld
int
xchg
sbb
negl
dec
out
push
cmc
inc
hlt
dec
xchg
ja
pop
test
sbb
rorl
pushf
fdivrs
jne
jp
icebp
add
inc
jge
mov
pop
ss
inc
dec
push
sbb
negb
inc
add
and
mov
push
lock
xor
cmpsl
sarl
mov
iret
out
xchg
or
sub
fstpt
popf
add
fwait
xchg
mov
adc
xlat
adc
subb
fcomp
cmp
or
outsb
cmpb
movsb
hlt
daa
pop
imul
cwtl
cmp
jp
pop
mov
clc
add
xchg
mov
call
cld
movsb
mov
insb
dec
adc
sbb
cmp
into
out
das
movsl
fs
rorl
dec
out
mov
cmp
movsb
pop
int
push
pop
aas
mov
bound
ja
xor
popl
jmp
mov
pop
pushf
adc
cli
add
xor
es
or
sub
js
cld
in
adc
pop
adc
xor
xlat
jb
stos
or
fists
or
jbe
jp
test
sub
negb
xchg
decw
js
xchg
aas
lea
out
mull
aaa
adc
in
cmp
mov
pop
push
push
lret
lret
pop
sub
mov
int3
mov
pop
maskmovq
mov
dec
bound
xchg
sub
xor
push
jo
test
mov
call
push
ljmp
imul
fs
dec
mov
pop
stc
pop
jp
push
lret
je
addb
aad
add
inc
pop
fldenv
lcall
jmp
hlt
sub
mov
pop
mov
js
faddp
dec
sti
push
fistpl
fistpll
jge
in
pusha
popa
outsl
jnp
sahf
ss
mov
popf
pusha
sarl
mov
mov
jbe
pop
fistpl
push
adc
mov
ficompl
in
mov
mov
mov
cmc
loop
popa
lods
cmp
loope
xchg
sti
or
fldcw
hlt
cli
mov
jg
in
lods
mov
push
or
cmpsl
aad
sti
sub
in
lods
in
pop
dec
adc
movaps
aas
stc
push
loopne
fnsave
cmpsl
fwait
and
ret
mov
cmp
insb
inc
inc
xor
stc
push
outsb
fimull
add
test
leave
xor
pop
xchg
xchg
clc
in
pop
test
das
sbb
mov
inc
fdiv
sbb
lods
inc
imul
mov
std
sbb
lea
in
mov
xor
out
xchg
in
jno
and
lods
cmpsl
les
sbb
add
fwait
lods
xor
icebp
mov
jno
and
jp
jb
adc
out
es
ret
pop
lods
sub
gs
fsubr
mov
add
dec
push
vpsubd
sub
stc
xor
dec
mov
js
out
stos
addb
imul
insl
jo
in
jns
sbb
or
lcall
lods
mov
sbb
lret
lods
pop
mov
ret
jnp
scas
cmpsb
jl
jg
mov
aad
sti
push
xor
stos
in
int
repnz
je
push
jo
fninit
daa
out
mov
cmp
test
aaa
sbb
mov
pusha
and
ljmp
ljmp
xchg
dec
cmc
stc
cmp
sbb
popa
addr16
pusha
sbb
mov
je
pusha
shr
push
xchg
lahf
int3
ss
and
imul
mov
insl
mov
sbb
clc
outsl
imul
xchg
push
movsb
xchg
ljmp
dec
cmpl
imul
cmpsb
xrelease
jl
or
cmp
mov
inc
xchg
ret
cld
decb
push
mov
jo
xor
jg
xchg
stos
fists
pusha
mov
cmp
jb
xchg
xchg
sbb
ja
bound
cmpsb
mov
lcall
dec
call
lea
cmpsl
or
loopne
sti
xor
jg
insl
adc
or
fwait
stos
cltd
mov
fdivrl
dec
mov
mov
push
shl
jae
in
sbb
adc
push
xchg
cmp
sbb
mov
jae
push
in
inc
or
punpcklwd
fnstsw
call
dec
add
orb
stos
movsb
mov
cmp
mov
out
ss
mov
incl
leave
popf
sbb
rorb
add
fucomp
sbb
lahf
loope
call
movsl
cmp
xor
into
fisttpl
outsb
cmpsl
xchg
test
adc
lods
cltd
pop
int3
cmp
push
pop
inc
cmp
jo
mov
add
adc
ret
jmp
ret
inc
pop
sub
lods
sub
adc
adc
cltd
orb
cmc
sahf
dec
ljmp
xchg
adc
add
xchg
push
popa
xor
jno
pop
testl
sub
push
jle
lods
icebp
daa
inc
in
adc
cld
lods
outsl
push
pusha
xor
sbbb
les
cmpb
inc
xor
add
xchg
test
dec
pusha
pop
dec
ret
xchg
lock
sub
push
imul
fstl
sub
dec
mov
jg
dec
call
mov
xchg
lahf
inc
inc
aaa
xor
pop
bndldx
sbb
adc
jbe
fiaddl
jb
outsb
aaa
sub
or
pop
nop
iret
dec
mov
pop
dec
test
push
cmc
outsl
addr16
sbb
fsubrs
in
sti
mov
iret
loope
dec
das
pushf
push
fs
pop
aas
enter
enter
cmp
cmp
cltd
mov
xor
sub
jno
or
xchg
mov
sub
cmpb
lret
test
lods
lretw
sarb
std
push
push
xor
jb
cltd
jbe
mov
sbb
push
dec
and
fistps
mov
lock
sti
jb
cmp
shr
xor
ja
ficoms
mov
xor
fxam
mov
push
and
ss
pop
jne
ret
popf
scas
inc
mov
cmp
jno
push
xor
insl
enter
out
and
out
ret
mov
lods
repz
pop
mov
fcoml
lcall
pop
outsl
test
dec
add
cwtl
call
lret
sub
mov
testb
jle
out
xchg
popf
dec
aam
cmp
scas
cmp
push
sti
cwtl
sbb
popa
sub
hlt
pop
je
adc
xchg
or
and
lret
mov
xchg
mov
sbb
push
cmp
in
jg
sbbl
ljmp
add
push
aad
push
push
push
mov
jo
push
mov
negb
stos
in
or
popa
sbb
or
arpl
sti
loop
fcompl
adc
sbb
and
stc
inc
test
xor
inc
mov
fldcw
clc
xchg
or
dec
and
jns
cmc
andb
testb
sbb
insl
xor
pop
dec
std
out
mulb
xchg
adc
lcall
push
stc
xor
sbbb
push
fildll
stos
dec
xchg
sti
lock
jbe
or
cwtl
loope
outsl
das
inc
sub
or
ds
inc
push
cmp
dec
insl
fmull
cmc
std
aad
mov
cltd
dec
out
push
nop
cmp
cmpsb
xor
pusha
hlt
stc
cmc
fdivrp
push
std
repnz
adc
mov
cmpsb
and
stos
in
and
add
out
xchg
mov
pop
dec
jo
shll
popf
outsb
pop
add
bound
inc
stos
push
shlb
pop
bound
in
ja
add
adc
and
mov
add
cmp
xor
mov
imul
andb
xor
inc
push
in
push
add
popf
cmp
rorl
adc
shrb
push
push
add
js
out
or
adc
lods
lods
xor
pop
mov
pop
or
push
dec
sbb
inc
push
stc
into
mov
inc
inc
sar
mov
mov
rcll
dec
popa
push
sub
ret
sbb
shll
std
inc
xchg
clc
fcmovne
sub
mov
sti
popf
out
lcall
xlat
and
out
xchg
std
mov
aad
pop
xor
push
jle
add
fmul
das
test
mov
aas
pusha
dec
ja
dec
mov
or
shlb
fiadds
sub
testl
mov
xchg
inc
or
jae
adc
test
xchg
sbb
mov
xchg
ss
xor
jmp
push
add
daa
leave
dec
sbb
popf
fld
sbb
aas
insl
or
push
inc
and
cmpsb
cmp
add
ret
into
mov
hlt
leave
push
aas
xlat
pop
push
sahf
std
in
and
mov
adc
adc
pop
jg
sbb
mov
mov
aam
push
cltd
lret
iret
push
rol
adc
ds
and
sbb
fidivrs
clc
icebp
jno
and
mov
test
popa
ds
clc
push
xor
shl
popf
repnz
or
xchg
fwait
push
push
hlt
and
enter
inc
mov
or
call
sarl
inc
mov
scas
xor
fsub
inc
push
cmp
lahf
adcl
test
js
rorb
pop
je
or
xchg
or
cmpsl
loop
pop
rclb
inc
mov
sub
leave
pop
out
std
in
and
icebp
mov
cltd
push
push
sub
jmp
enter
jle
shll
dec
cmc
or
es
cmpsb
out
add
jge
push
pusha
inc
cltd
jnp
repnz
push
movsb
jp
mov
imul
ja
je
je
inc
mov
int
mov
sub
xor
add
mov
scas
xor
out
clc
dec
arpl
xchg
jge
xor
mov
pop
je
pop
mov
pusha
sbb
pop
add
test
xchg
dec
lods
imul
jbe
loopne
pop
cmp
es
push
pop
pusha
and
adc
adc
sbb
out
push
cmp
insb
or
cmp
mov
rol
jecxz
out
imul
xchg
outsb
jb
mov
jg
and
cmc
jl
xor
push
movsl
and
jo
inc
notb
inc
lcall
add
les
call
ret
lcall
stos
mov
in
pushf
and
mov
lods
adc
lret
pop
out
aam
out
sbb
inc
inc
in
and
mov
adc
mov
addr16
ja
xchg
in
or
jb
adc
or
xchg
push
cs
popa
pop
int
loope
fisubs
es
popa
in
sti
push
pushf
mov
add
push
outsl
xor
inc
es
xchg
add
mov
test
xor
fldcw
jle
xor
jns
push
pop
adc
mov
jo
popa
add
rcrl
jb
mov
lea
outsb
adc
fildl
in
sub
stc
lret
es
rorb
sti
movsl
pop
stos
int3
sbb
lret
lods
mov
adc
popaw
decb
push
imul
mov
adc
cmp
and
loope
sbb
cld
lea
div
push
int3
shrl
subl
cmpsl
outsl
rcrl
hlt
loopne
mov
mov
aaa
cmp
pop
shrb
dec
nop
popa
xor
cmp
xchg
dec
push
sbb
fsub
fs
lods
outsb
push
in
inc
frstor
imul
and
push
xacquire
rol
pop
xlat
dec
ds
xor
xorb
out
ljmp
mov
movsl
or
jmp
outsb
shrl
mov
xor
mov
mov
xchg
int
or
clc
stos
je
jmp
cmp
mov
pushf
mov
pop
imul
push
andb
in
mov
sarl
push
xor
jle
adc
cmp
xchg
cmp
jge
ljmp
cwtl
das
dec
add
push
inc
movsb
fldenv
add
mov
mov
fs
jl
and
xchg
popa
dec
ss
xor
add
mov
lahf
in
sbb
cli
mov
push
icebp
nop
mov
aaa
or
insb
mov
sbb
insl
insl
out
test
jns
imul
nop
and
cmp
cmpsl
mov
pop
mov
xchg
stc
in
or
adc
popf
outsl
enter
shll
pop
jp
test
negb
pop
adc
divl
xor
mov
insl
mov
lcall
inc
frstor
dec
and
push
sbb
xchg
ljmp
cmpsl
mov
jge
push
cmp
mov
cmpsb
dec
fnstenv
jl
mov
push
mov
mov
lods
ror
lfs
and
xchg
or
cwtl
orl
in
push
dec
pop
jl
sti
inc
dec
push
cld
hlt
jle
mov
shll
in
cmp
leave
test
sbb
or
roll
jnp
mov
or
test
jmp
mov
mov
push
mov
mov
cli
or
cli
mov
psubw
imull
push
mov
mov
jns
lret
pop
jge
lods
stc
sub
divb
and
jle
mov
sti
outsb
inc
icebp
in
popf
sub
sub
xor
or
adc
xorl
pop
jno
sarl
and
xor
mov
sub
gs
adc
jl
pushf
icebp
lahf
nop
cltd
mov
lods
pusha
jbe
cmpsb
push
shl
jg
pop
pop
mov
pushf
fsubrl
test
loop
dec
je
subl
jecxz
jge
imul
cmpsb
mov
in
mov
test
mov
ljmp
movsl
push
add
imul
fnsave
imul
or
jae
mov
mov
out
and
add
cmpb
push
lret
rorl
repz
sti
mov
jmp
repnz
pop
push
int
and
jae
xor
ja
add
sti
dec
addr16
cmpsl
aad
jno
fwait
jmp
movsl
mov
or
mov
fcmovu
loopne
push
pop
or
sub
sub
daa
or
mov
hlt
adc
rolb
xor
daa
mov
loop
arpl
sub
stos
pop
ffreep
add
adc
ss
aam
fmull
dec
sar
dec
cmpsb
popl
sbb
mov
ss
add
rcrb
ret
dec
mov
jo
add
arpl
and
inc
jg
pop
ds
push
sbb
xchg
jno
gs
std
add
cs
lcall
int3
cmpsl
push
xor
push
jo
fists
and
jecxz
in
jne
or
xor
fildll
push
subb
adc
jl
iret
sahf
jmp
ret
ja
or
push
mov
pop
adc
adc
popa
lret
jbe
popf
add
adc
lods
fcomip
pop
mov
bound
mov
pop
xor
mov
pop
inc
loop
notb
cs
and
sbb
mov
push
mov
aaa
std
or
mov
test
fidivrl
movsb
inc
call
fimuls
roll
mov
mov
scas
aad
jecxz
test
sub
lock
cmpsl
je
test
xlat
test
xchg
mov
pusha
mov
popa
push
cmp
xchg
sahf
enter
xor
daa
jmp
sub
inc
repnz
das
inc
inc
mov
add
inc
pop
mov
sbb
movsb
cwtl
mov
push
xor
sub
xor
loop
movsl
or
imul
mov
lods
sbb
mov
aas
sahf
cmp
inc
clc
sbb
mov
gs
imul
in
adc
stos
pop
push
push
pop
mov
outsl
push
jnp
fdivrs
gs
repz
arpl
xor
daa
pop
and
mov
ret
or
outsl
outsl
and
mov
std
sbb
rorb
sub
push
out
push
dec
add
push
popf
popf
jecxz
cmp
pop
arpl
dec
dec
test
divb
sbb
stos
lret
out
fs
cmpsb
mov
mov
inc
mov
imul
add
sub
mov
xor
mov
cltd
imull
popf
xchg
fs
rcl
pop
mov
repnz
scas
pop
icebp
leave
sbb
scas
aad
scas
fisttpll
gs
repz
enter
clc
sub
pop
int3
jbe
mov
ja
mov
ror
xchg
sub
test
or
mov
scas
xor
int3
xor
or
adc
cmp
dec
jp
push
adc
jns
lods
es
cltd
lcall
inc
pusha
imull
and
mov
sub
stos
mov
push
filds
insl
dec
mov
xchg
pusha
or
rcrl
sub
aaa
pop
adc
jo
push
das
mov
jo
mov
pop
ja
push
pop
mov
out
pop
cmp
cmp
loop
lods
repz
insl
aas
mov
mov
xlat
inc
jnp
mov
mov
sti
push
sub
add
dec
sbbb
es
cmp
loop
pop
or
jns
mov
xchg
lahf
insl
fstl
mul
shll
mov
sub
jnp
scas
jl
sub
xchg
jle
imul
pop
pop
mov
fwait
pop
loopne
sti
mov
push
cmp
jp
ret
cmp
adc
mov
stc
pop
pop
fcomp
adc
into
xchg
cmpsb
xor
push
and
and
sbb
xchg
cmp
int3
imul
push
cs
sbb
pop
sbb
xor
nop
not
cmp
push
leave
outsl
mov
push
mov
repnz
pop
adc
cwtl
xchg
dec
jge
insl
dec
xchg
mov
stos
test
xchg
mov
jp
repnz
push
lods
pop
dec
xchg
loop
int
ror
test
popf
cmp
or
pop
mov
test
dec
repnz
pop
push
iret
call
out
jae
cmp
mov
xchg
call
adc
imulb
arpl
mov
test
adc
popf
mov
xor
push
jl
cmp
and
cs
es
cltd
out
cmp
movsl
mov
dec
mov
jmp
xor
out
add
cli
orb
xchg
cmp
sarl
xchg
cmc
pushf
in
xchg
insl
sbb
fidivl
xor
mov
sbb
push
xor
popa
movsb
dec
lods
mov
clc
mov
inc
mov
mov
lods
cmp
stc
divl
mov
lods
movsb
rcl
mov
test
adc
mov
aas
popa
sbbl
cmpsb
mov
add
sub
aam
add
aas
cltd
into
cmp
in
push
and
fldln2
push
dec
mov
ret
mov
xchg
mov
jns
push
adc
imul
repnz
xor
lods
outsl
cmpsb
aas
xor
cmpl
repz
js
adc
scas
jl
inc
test
cmp
gs
test
inc
add
cld
aas
sbb
mov
nop
jb
inc
sahf
cmpsb
add
mov
adc
stc
inc
mov
ss
inc
sub
jns
cwtl
and
aam
divb
mov
ja
adc
sub
aam
fs
aam
and
jl
fisttpll
hlt
xorb
int3
scas
cmp
popl
out
ret
movsb
xorl
pop
scas
bound
jno
cmp
fisubrl
cmpsb
mov
xor
inc
jmp
sub
pop
adc
mov
xchg
insb
out
cmp
mov
inc
mov
lret
mov
inc
sub
cmc
inc
xorb
insb
sub
mov
adc
icebp
in
inc
ja
adc
inc
in
mov
nop
pop
cmp
cmpsb
dec
mov
rcrl
xchg
xchg
test
sub
inc
xlat
adc
mov
pop
cmp
jno
xor
pop
dec
stos
pop
cmp
pusha
and
imul
mov
push
mov
shrb
filds
call
cmp
dec
loope
lea
xchg
test
jae
cmp
sub
xor
xlat
inc
cltd
adc
pop
pop
ljmp
stc
jns
cli
push
data16
jp
pop
das
xchg
dec
mov
test
pop
aas
rcll
lods
mov
out
xor
xchg
xor
jae
dec
mov
ja
sahf
sahf
or
cs
dec
sahf
sub
imul
sbb
push
mov
movsb
push
push
pusha
sbb
or
mov
inc
xchg
push
popa
cmp
imul
fidivs
aam
into
mov
xchg
std
xchg
mov
mov
xchg
pop
mov
loop
jns
aas
jno
popf
ss
ret
mov
and
xor
lds
stos
rcrb
pop
add
cmp
pop
mov
in
jns
cltd
test
jae
xor
dec
and
pusha
jle
sbb
mov
fistl
xchg
shlb
push
inc
rol
cwtl
cli
sbb
movsl
dec
xchg
scas
fdivrs
xor
xchg
in
mov
xor
adc
pop
push
sbb
mov
inc
mov
jp
adc
jns
mov
pop
stc
sti
test
sbb
or
lock
fldcw
clc
je
mov
leave
push
jnp
dec
fcoms
adc
or
mov
inc
icebp
mov
dec
inc
test
dec
std
gs
shrl
or
lcall
jecxz
sbb
mov
jno
pop
and
adc
pushf
dec
repz
les
jg
inc
inc
cmpsb
mov
leave
dec
xorb
clc
add
movsb
push
xchg
ret
sub
shr
or
iret
hlt
jg
xor
jle
xor
mov
push
mov
cmp
mov
pop
push
mov
gs
sbb
out
jle
cmp
sbb
or
dec
cwtl
shlb
mov
arpl
repz
sahf
sbbb
lods
lock
fwait
and
xor
jmp
aad
fcmovb
jecxz
push
or
orb
dec
jne
addb
rorb
neg
in
incb
test
out
inc
xchg
adc
inc
bound
pop
ret
sbb
ds
or
cli
xor
test
xorl
hlt
or
cmp
xor
or
jmp
push
rorb
sbb
or
arpl
outsb
jne
mov
inc
push
fcmovne
ja
add
aad
sbb
pushf
out
mov
sbb
js
js
dec
xor
xor
pop
mov
push
pop
jo
adc
loopne
or
flds
gs
ret
xchg
jmp
sbb
lods
or
arpl
stc
scas
test
pop
cmp
mov
loopne
daa
das
ljmp
shlb
inc
push
add
jg
add
addl
xorb
test
push
mov
arpl
pop
or
inc
xor
push
fdivs
pop
adc
push
arpl
adc
gs
fdivrl
jne
cmpsl
dec
adc
jae
or
pop
rorl
mov
test
ret
std
cld
sub
imul
mov
dec
and
sub
cmpsl
mov
out
fistps
sbb
cwtl
and
cs
sahf
mov
mov
out
mov
out
pusha
scas
mov
fcomps
jmp
pop
xchg
adc
xchg
push
adc
mov
cmp
push
jecxz
ficoml
movsl
sahf
and
sbb
jns
and
or
adc
mov
mov
js
dec
jnp
cli
inc
sub
dec
int3
jecxz
in
mov
gs
scas
scas
les
pop
xor
orb
rorl
and
outsl
in
cli
ds
jl
loopne
xor
shlb
in
imul
sahf
sbb
pusha
cld
sbb
subb
push
pop
xchg
in
add
cmp
adcl
arpl
bound
cmp
cmp
popf
enter
xchg
sub
int
in
adc
jl
scas
fidivrl
cmpsl
mov
test
addb
fsubr
mov
shlb
mov
xchg
icebp
dec
mov
push
int3
cmpsl
sahf
cmp
pcmpgtb
jns
outsb
mov
and
cmp
dec
sbb
cmc
lods
into
or
leave
loop
shll
test
insl
xor
push
mov
sbb
cmpsl
rclb
movb
mov
pusha
shl
fdivrs
icebp
out
mov
sarb
mov
pop
jp
pop
mov
repz
in
sti
mov
jne
test
mov
mov
sbb
jge
push
xchg
out
dec
repz
dec
and
hlt
sbb
inc
dec
pop
push
movsl
mov
push
subl
add
mov
fcomps
or
loopne
loop
jnp
mov
mov
ret
inc
mov
mov
mov
adc
cli
pop
jecxz
mov
mov
out
jp
dec
dec
jb
addb
inc
push
int3
xlat
adc
dec
push
fidivrs
and
sub
fwait
jae
jle
jg
das
cltd
fistpl
call
push
fcomi
or
das
dec
fnstsw
stos
into
popa
dec
xor
adc
mov
std
jb
dec
and
cmpsb
adc
std
and
sub
gs
xchg
ds
add
or
stos
push
mov
mov
jae
jmp
les
dec
scas
int
dec
jbe
shlb
popf
lds
into
insl
mov
xchg
jne
jae
cmpsl
js
dec
movsb
hlt
imul
push
hlt
pop
lds
jae
and
mov
in
mov
xlat
mov
mov
cld
inc
jbe
into
pop
xor
push
in
cmp
jecxz
xor
sti
mov
popf
dec
outsb
fldenv
xor
pusha
or
lods
in
ret
test
shlb
push
in
jmp
pusha
std
ret
rcll
jmp
shlb
mov
mov
sub
cmp
nop
loop
orl
jnp
inc
test
stos
loope
cmpsl
ficoml
stc
jg
out
pop
sbb
aaa
test
or
lret
scas
push
out
shlb
mov
fcompl
in
jge
mov
push
test
jecxz
xor
xchg
loop
cmp
pop
pop
movsl
mov
test
push
push
or
jns
hlt
sub
insb
xchg
xlat
insb
push
cmpsl
shl
rclb
test
pushf
jl
cmp
fucom
in
push
fiaddl
inc
inc
mov
sbb
fcmovnb
add
jno
sbb
mov
cli
pop
in
leave
sbb
sti
adc
push
and
dec
addl
div
cli
adc
add
mov
lock
sarb
push
inc
fnstenv
test
xor
sbb
mov
pop
in
sub
xor
adc
loop
cmp
and
stc
movsl
outsl
add
sub
inc
adc
lock
loopne
cmp
ja
fwait
loopne
aam
jbe
imul
adc
xor
sbb
sbb
mov
xor
movsl
cmp
pop
adc
insl
sbb
or
fsts
push
push
fwait
sub
adc
ror
xchg
popa
mov
push
fstl
sbb
sbb
adc
and
and
cmp
pop
adc
push
jp
cmpsb
jg
xchg
pop
sbb
jge
sbb
cmpl
cmc
repnz
jbe
sub
ljmp
and
sub
aam
pop
fwait
and
sti
fneni(8087
dec
jp
stc
mov
xchg
stos
mov
jecxz
lds
sti
sbb
dec
push
dec
adc
xor
imul
adc
adc
lret
fildll
cli
cmp
xlat
pop
movsb
xchg
out
sub
pop
mov
inc
add
lock
xchg
inc
enter
lret
pop
into
bound
in
loope
repz
in
xor
lret
xchg
cmp
imul
lds
sbb
jmp
sahf
es
stos
mov
in
test
xchg
outsl
out
stc
inc
int
or
out
add
mov
popf
and
push
xlat
jp
mov
jle
cmp
das
adc
push
push
rorb
shrb
pop
or
mov
mov
push
lahf
dec
cmp
ljmp
or
push
outsb
and
cmp
pop
icebp
aaa
sbb
push
mov
mov
mov
ficompl
mov
mov
dec
mov
xchg
lock
mov
clc
jo
mov
cmp
lock
mov
dec
data16
nop
push
mov
jle
add
cmp
pop
jg
mov
repz
push
incl
sub
add
add
mov
pop
aad
sbb
or
adc
je
sbb
outsb
fs
es
mov
aam
sbb
fdivrs
daa
int
cmp
cmc
lret
test
and
std
jne
xchg
fdivrs
dec
jne
cs
stc
nop
pop
test
loopne
dec
xchg
xchg
inc
mov
aad
les
jmp
cld
or
jmp
lcall
push
das
add
test
sti
loop
jecxz
pop
std
push
xchg
test
sti
inc
inc
loope
mov
sub
xchg
cmp
mov
xchg
mov
mov
xor
sub
loop
cltd
out
cmp
lock
gs
dec
lds
sub
ret
adc
pop
add
lea
out
xchg
icebp
xchg
cld
in
xor
jb
push
leave
or
xchg
fwait
sub
fisttps
ljmp
leave
mov
and
std
xchg
push
les
xor
sub
xor
lock
aam
or
fisubrl
test
xor
xchg
adc
dec
sbb
sbb
adc
jbe
inc
jne
test
loope
adc
pop
mov
sub
push
add
test
adc
lea
xor
mov
adc
push
mov
lds
mov
divb
hlt
popa
subb
lock
dec
add
loopne
mov
push
out
and
sbb
push
cmc
mov
out
jmp
arpl
lods
stos
cmp
jnp
insl
xchg
dec
into
idiv
dec
push
or
jecxz
sub
pop
nop
enter
mov
sarb
pop
mov
jecxz
mov
js
sbb
enter
xchg
lea
test
jae
fdivs
pop
mov
aaa
jae
and
fucomi
mov
add
test
sub
sbb
lret
cwtl
out
xor
jns
aaa
or
es
cmp
subl
pop
ds
sahf
fnstsw
test
out
push
or
add
rorl
push
and
in
inc
arpl
cmp
data16
imul
sbb
pop
lea
out
cwtl
clc
pop
fs
ficoml
test
push
sbb
bound
and
mov
push
xchg
mov
lods
imul
push
stos
jo
cmp
add
add
nop
push
test
jbe
cmp
inc
test
outsb
cmpsb
popa
adc
faddp
sub
cld
movsl
out
inc
data16
pusha
iret
adc
xor
add
sbb
ret
and
sub
lock
je
pop
mov
pop
shlb
test
lret
sub
sti
and
aaa
sub
adc
lea
leave
dec
push
out
inc
or
xchg
add
stos
xchg
fsubrp
inc
sti
mov
mov
leave
sub
fs
mov
push
mov
and
and
jo
xor
xor
js
mov
mov
xchg
sbb
outsb
dec
and
fwait
mov
das
adcb
push
mov
mov
push
sub
jmp
and
inc
push
das
jecxz
pop
inc
lea
dec
aaa
loop
addl
xor
sahf
gs
outsl
cmp
sub
ja
sbb
mov
cmp
xchg
rcrl
daa
fists
mov
and
cld
push
xchg
scas
jno
jmp
xor
cmp
adc
xor
cmpsl
rol
div
std
in
push
cli
pop
mov
mov
add
cmp
dec
push
mov
jecxz
loop
add
push
in
gs
les
cmpsl
iret
shrb
jge
adc
jg
aad
jl
enter
and
dec
mov
iret
repz
mov
out
and
lret
add
loop
pushf
daa
cli
mov
jle
jmp
pop
jbe
movsb
cmp
inc
inc
push
push
pushf
sub
dec
stc
insb
adc
push
ret
xchg
push
xor
out
xor
dec
sbb
inc
and
loopne
or
mov
sbb
std
ja
dec
mov
push
call
sub
pop
jnp
ljmp
dec
jno
sbb
adc
ret
out
xlat
cwtl
or
fiadds
xchg
mov
or
push
fsubrp
in
frstor
mov
cli
sbb
and
sub
sub
sub
push
scas
cmp
movsl
fbstp
or
mov
mov
les
pop
in
pop
scas
push
push
mov
fidivrs
out
add
call
leave
and
pop
movsb
push
pop
pop
repnz
adc
inc
add
out
sub
or
adc
pop
or
es
inc
int3
push
out
mov
lea
popf
xor
push
pop
fistpll
repnz
push
push
hlt
xchg
fcmovb
push
pop
fcmovu
das
ss
call
xor
push
call
xchg
les
fstpl
lret
mov
mov
add
cli
movsb
insl
in
pop
or
xor
pop
jno
pop
jns
hlt
sub
sub
cmpsb
in
jge
fildll
jns
push
mov
xchg
mov
xor
insb
push
dec
xchg
cwtl
dec
inc
dec
ss
sti
jl
and
sbb
add
lods
jae
and
sub
je
int
xor
jno
mov
pop
dec
or
mov
repnz
xor
dec
loopne
fldl
arpl
mov
cmp
mov
cmpsl
push
cltd
dec
incl
sar
sahf
mov
stc
cmpsl
xor
and
xchg
rcrb
stos
icebp
int
ss
and
xchg
cmp
sti
test
add
out
mov
pop
push
sbb
je
cmp
inc
xlat
cmc
sbb
aas
imul
jb
in
icebp
int3
ja
icebp
lahf
int
sti
mov
jmp
arpl
xchg
jae
inc
add
mov
push
inc
in
pop
loope,pt
call
cmpsb
imul
mov
in
dec
shlb
rcll
and
add
repnz
pop
cli
ret
cmp
push
push
subb
dec
nop
pop
dec
lcall
into
rclb
mov
add
sbb
ret
and
shrb
aam
xchg
test
pop
lret
out
sub
mov
mov
mov
lahf
jne
jmp
inc
rolb
lret
jl
jo
mov
fists
shll
and
mov
in
cmp
adc
dec
sbb
sub
in
dec
sub
xor
outsb
adc
aaa
jmp
xchg
les
jbe
lods
cmp
in
or
in
or
cvttps2pi
push
lahf
lret
fwait
sbb
mov
movb
movsl
pop
inc
orb
dec
int3
adc
dec
add
scas
sbb
and
push
dec
jne
mov
xor
test
dec
add
mov
lea
test
dec
addl
xlat
sub
int
js
mov
not
call
pop
pop
cwtl
repz
inc
fwait
xchg
mov
jmp
in
xor
hlt
les
test
filds
add
mov
dec
imul
mov
mov
outsb
rorb
pop
and
repnz
fnsave
lret
inc
mov
jae
sbb
add
adc
jecxz
cmc
fmul
enter
push
mov
insb
inc
in
dec
pop
cld
orl
arpl
lret
mov
roll
push
fnstcw
sub
lods
and
lcall
shll
adc
mov
test
cmc
mov
mov
out
sti
cmp
fistpll
and
dec
pop
mov
fistpll
lds
mov
mov
jns
inc
mov
xor
gs
sbb
pop
out
leave
cwtl
aaa
adc
ds
or
addr16
jl
cmp
xchg
pop
das
inc
and
iret
movsb
mov
dec
mov
xor
cmpl
or
jns
jmp
incl
mov
pop
mov
outsb
adc
fs
xchg
pop
mov
js
shlb
out
mov
cmp
mov
and
pop
int3
mov
nop
mov
fsubr
xchg
outsb
mov
and
cmpsb
adc
sbbb
push
mov
cld
stos
cwtl
mov
inc
paddsb
pop
xchg
pop
popf
shrb
das
std
inc
xchg
sbb
shlb
jle
dec
das
add
cmp
pop
xchg
add
pop
fdivl
xchg
and
out
or
vmovdqu
shrb
cmpsb
inc
sbb
add
daa
pop
into
loope
fs
cs
cli
subb
sub
fwait
aaa
push
fdivrs
cli
in
and
ljmp
pushf
int3
in
fcomps
push
add
mov
sbb
imul
daa
sub
xchg
pop
and
out
cmp
xchg
push
daa
roll
das
incb
or
and
sbb
vpshaw
js
xor
aam
les
pop
js
pop
pop
mov
sti
cmc
lock
mov
movb
adc
test
jo
lock
push
inc
adc
out
lea
add
aaa
and
jecxz
fwait
loopne
fnstcw
lcall
outsb
sub
and
mov
xchg
lret
inc
gs
pop
xlat
pop
jns
loope
iret
or
pop
add
ljmp
jae
test
repz
pop
cmp
inc
fidivl
or
or
and
ss
add
ljmp
pop
mov
jle
pusha
dec
cltd
inc
push
cmc
ljmp
pop
mov
sub
scas
mov
imul
insb
pop
inc
ds
fst
and
sub
jmp
pushf
ja
pop
dec
aad
jno
fs
sbb
cmp
in
call
insl
sbb
lods
stos
les
xchg
xchg
rorl
shll
sti
push
jmp
leave
sbb
push
inc
cmp
cmp
out
outsb
imul
fwait
inc
mov
mov
pushf
add
dec
in
push
or
adc
lret
and
insb
ljmp
dec
into
push
push
aam
stc
xchg
pop
bound
test
mov
ja
mov
ss
pop
shll
or
jnp
sbbb
mov
loopne
lea
icebp
test
and
adc
imul
lock
xor
cmpsb
push
push
jl
dec
stc
or
push
inc
inc
mov
or
fdecstp
inc
sbb
in
sub
out
or
testl
or
cmp
mov
sbb
outsb
arpl
jmp
jle
jle
in
push
cmp
aad
push
test
adc
ficompl
mov
mov
pop
jb
adc
mov
dec
pusha
or
stos
rorb
jl
lods
hlt
shrb
push
shrb
jg
subl
jo
pop
sbb
lret
and
sub
icebp
mov
add
sub
mov
mov
loopne
imul
xchg
sahf
xor
inc
lret
pop
xchg
add
inc
jns
dec
cmp
mov
sahf
mov
push
fstpt
pop
mov
xchg
stc
cmp
adc
jle
nop
faddp
dec
pusha
outsl
and
inc
scas
dec
pushf
dec
jb
std
cmpsb
hlt
lds
pop
test
sbb
xchg
mov
xor
popf
mov
out
pushf
pushf
icebp
mov
es
iret
pushf
jge
sub
cmc
pushf
xor
outsl
jb
fcompl
sarl
mov
xor
lahf
mov
dec
sahf
hlt
cmc
pop
in
push
leave
arpl
pop
pop
and
lret
arpl
icebp
ljmp
jo
adc
sbb
mov
xchg
loopne
mov
mov
mov
lcall
add
ja
add
and
jbe
idivb
xchg
push
or
mov
movsl
addl
mov
sbb
adc
test
test
jg
es
sbb
arpl
dec
xchg
imul
out
xchg
push
es
mov
int3
jmp
pop
and
out
pop
shlb
loope
arpl
loopne
out
adc
cmp
mov
leave
pushf
cmpsb
jp
cmpsl
imul
aaa
inc
mov
mov
and
iret
movsb
insb
loop
inc
sub
dec
lret
imul
inc
aam
lcall
xor
push
fiadds
ja
push
movsl
sti
sbb
inc
or
jl
pop
push
push
bound
cltd
ljmp
arpl
je
or
lahf
mov
notb
jmp
mov
or
lcall
add
pushf
xor
push
icebp
clc
shlb
add
nop
inc
das
or
cld
adc
loop
fsubr
repnz
mov
scas
jle
push
out
fdivrl
pop
outsb
xchg
sahf
cmpsl
shlb
cmp
not
rcll
adc
dec
and
mov
push
and
sbb
out
scas
adc
mov
adc
add
daa
or
cwtl
fwait
sbb
jns
gs
mov
xor
stos
in
filds
fcmovne
mov
or
cmpb
jae
nop
and
clc
stos
pop
shr
imul
stc
pushf
sbb
sti
cld
xchg
sub
cmc
ljmp
mov
jnp
cmp
push
mov
pushf
repz
movb
imul
add
mov
pop
sub
jbe
xchg
sub
ret
sbbl
push
or
jecxz
mov
daa
and
dec
aas
popa
mov
push
sti
mov
sub
loope
testl
sti
xchg
outsb
loope
inc
jmp
in
incb
hlt
jns
dec
adc
xor
enter
gs
cwtl
xchg
shlb
sahf
hlt
test
es
fidivrl
fstpl
xor
and
add
xchg
sub
jbe
cmc
mov
sub
mov
push
cmp
movsl
pop
jae
cmovge
subb
hlt
mov
push
sbb
cmp
adcb
scas
sub
out
pop
adc
shr
mov
add
fcmove
jno
mov
mov
mov
loop
and
je
rcrb
jl
std
mov
sub
sub
pop
xchg
cli
fs
gs
dec
adc
jge
inc
mov
mov
stc
or
scas
sar
pop
sub
ror
mov
push
add
and
cmp
sub
push
mov
subl
push
popa
xchg
jecxz
shr
cmp
hlt
icebp
sub
fwait
push
mov
jbe
mov
gs
ficoms
adc
and
outsb
add
adc
inc
mov
cmp
pop
testb
arpl
loop
mov
mov
loopne
fists
mov
shrl
push
outsb
jb
pop
iret
or
ljmp
bound
mov
icebp
or
sarl
push
and
sbb
cmpb
loope
pop
shrb
psubusw
jl
fldt
cmp
pop
fildll
pushf
cwtl
jne
aaa
lea
adcb
push
outsb
mov
and
out
test
fsincos
dec
push
sahf
jae
pop
sub
add
mov
pop
or
adc
inc
repnz
mov
mov
mov
push
and
testb
mov
jl
jno
cmc
add
and
sub
pop
into
pop
cltd
push
mov
test
add
jmp
mov
call
sub
jg
sub
insl
fwait
and
int3
sub
inc
mov
pop
pop
or
pop
cld
xor
jg
call
imul
repnz
insl
xchg
xchg
jl
mov
ljmp
imull
adc
in
adc
xchg
loopne
fwait
sti
outsl
xchg
loop
insb
ja
push
dec
fwait
jge
fmull
sti
out
in
aam
out
mov
cmp
loopne
in
inc
fsubrl
mov
loope
cmpsb
and
lock
inc
xor
xchg
lods
into
lods
jnp
pop
or
nop
inc
lret
and
sbb
in
aas
pop
pop
dec
faddl
outsl
cmpsb
imul
xchg
out
jl
ds
pop
push
cli
fisubs
sub
mov
loopne
stos
lahf
shll
or
jp
dec
mov
cld
cld
xor
into
shld
pusha
out
lods
imul
lcall
pusha
sbb
ror
jp
test
stc
xchg
mov
mov
mov
sbb
jns
out
test
dec
cmp
in
ret
nop
sahf
into
inc
push
cmp
fisttpll
mov
jno
pop
and
stos
add
cli
sub
cmpsb
pop
pop
cs
fwait
sbb
sbb
outsb
dec
mov
divb
sub
jmp
and
add
adc
and
and
nop
insl
pop
ss
push
fwait
or
ljmp
mov
mov
push
test
xchg
mov
pop
lcall
addr16
testb
rcl
ret
cmp
lock
sub
movl
cwtl
xchg
icebp
adc
mov
insl
insb
mov
cmp
lcall
mov
imul
aaa
inc
je
lock
aaa
dec
aad
sub
xchg
out
mov
sub
pmaxsw
test
inc
subl
xor
jecxz
jbe
inc
std
lahf
or
test
mov
fsub
fcomps
sbb
cwtl
mull
jge
inc
xor
sahf
movsb
int
je
xor
cmp
mov
xchg
cmp
mov
hlt
daa
mov
lds
xor
into
insl
into
fdivrl
xor
push
dec
call
dec
call
in
aam
ds
or
in
sub
imul
iret
and
dec
shl
fs
mov
out
std
test
mov
flds
jb
mull
pushf
adc
sti
cmpsb
adc
push
xchg
pop
pop
and
dec
or
push
xchg
xor
mov
fsts
sub
into
xchg
or
add
loop
mov
jns
stc
insl
mov
out
pop
push
adc
dec
inc
andl
push
adc
gs
or
fucomp
jg
fmuls
xlat
pop
add
jp
dec
sarl
xorps
cmpsb
add
leave
sub
data16
lret
icebp
sahf
mov
dec
or
shll
aam
sub
scas
divb
pushf
ds
sub
cmp
popf
add
jo
or
pop
dec
push
add
jno
mov
faddl
pusha
or
adc
xchg
mov
or
in
data16
iret
aad
lock
loop
push
mov
test
push
mov
jl
gs
push
jno
cmp
shl
fsts
idivb
pop
jb
inc
adcb
test
loopne
pop
or
arpl
nop
fidivrl
movsb
pop
mov
loop
sahf
cltd
dec
sub
aad
outsb
xor
pushf
inc
sarl
mov
lret
push
lret
nop
cld
jb
sbb
fisubs
fabs
dec
je,pt
mov
jl
or
aaa
stos
mov
push
dec
sbb
jbe
or
outsl
js
jae
outsb
adc
mov
fildl
test
into
rol
rcrl
ss
cmp
sahf
orl
and
dec
inc
jno
lret
xchg
or
pop
dec
cmp
aaa
outsb
or
push
add
xor
and
call
jbe
popa
pop
jg
mov
xor
decl
xor
and
test
movsb
cmp
dec
sub
loopne
pop
insl
iret
and
cwtl
test
stos
mov
inc
outsl
lret
fwait
popa
hlt
xor
dec
dec
gs
jge
call
or
aam
inc
and
sub
adc
push
and
jg
sti
inc
add
outsb
push
or
mov
test
mov
mov
xchg
dec
aam
jns
push
scas
movsb
test
js
xchg
andl
xchg
jo
arpl
int3
int
fistps
ss
wrmsr
loope
lock
jecxz
cmc
adc
xor
mov
movsl
jecxz
pusha
mov
or
mov
cmpsb
sub
pop
faddl
pop
or
lcall
cmp
mov
pop
fmuls
mov
fs
or
mov
fldl
push
jne
jg
inc
jae
aaa
cli
xchg
cwtl
out
xchg
adc
mov
add
lods
ficoms
sbb
mov
adc
add
sbbl
pop
in
mov
jbe
je
incb
lock
fdivrl
jbe
pushf
jmp
loope
xchg
loope
jb
and
daa
mov
lds
push
push
sbb
rcrl
arpl
stos
push
stos
sarl
dec
jge
sbb
dec
loop
sarb
mov
and
adc
lods
pop
in
sub
xor
pop
es
nop
imul
add
mov
lods
inc
test
add
push
popa
sub
inc
lcall
pushf
mov
test
lret
sbb
rcll
ljmp
sub
inc
repnz
cmp
xor
sbb
push
pop
mov
int
out
mov
out
pop
out
xchg
mov
lea
lds
jnp
push
lea
enter
add
or
pop
pop
fcomps
adcl
outsb
subl
sub
fnstenv
jne
xlat
or
mov
sbb
sub
pop
adc
mov
xor
mov
rorl
adc
fst
inc
xor
fwait
mov
or
xor
jp
add
xchg
rcrl
addr16
mov
mov
loope
outsb
cmc
fimuls
loope
adc
mov
sub
pop
xor
mov
sbb
xor
fisttpll
sub
pop
sub
mov
jo
enter
mov
lock
std
or
xchg
pop
mov
in
scas
pop
xor
mov
cmp
xlat
popl
sahf
pushf
int3
lret
sub
out
mov
out
and
jecxz
fildll
mov
pop
aad
pop
push
movsl
jb
mov
aaa
gs
sub
or
adcl
aas
mov
jb
imul
aas
jbe
in
aam
sub
sarl
repz
lds
add
cmp
ror
popa
mov
jmp
int
xor
push
std
and
xchg
ret
fwait
jp
mov
in
addr16
cmp
shrl
test
lock
nop
outsb
push
test
pop
or
dec
loopne
loop
pop
outsl
sub
push
mov
or
xchg
cli
ret
mov
cltd
dec
cmc
fs
cmp
adc
pop
mov
ss
cmp
push
jl
mov
cmp
inc
sbb
add
or
addb
mov
jns
sub
mov
pop
sub
test
or
jge
xchg
popf
sti
scas
aad
add
ret
fs
xchg
enter
outsl
cmc
mov
adc
add
dec
sub
sub
pop
pusha
xchg
push
jp
cmp
and
mov
cmpsl
incl
mov
mov
dec
shlb
mov
pop
lods
arpl
cmp
sub
fwait
mov
lret
dec
ret
jnp
leave
fwait
sbb
popa
sub
adc
or
sbb
mov
es
mov
sbb
push
jle
adc
clc
or
repz
das
loopne
popf
test
sub
pusha
pusha
push
adc
and
pop
or
mov
fstl
mov
stos
jg
iret
rdtsc
sbb
rorb
xorb
jae
or
and
popf
ret
jno
repnz
lret
aaa
stos
adc
jbe
xchg
mov
out
fdivs
lea
and
and
mov
mov
mov
mov
fsubr
or
xor
jle
std
inc
int
add
push
mov
mov
pop
push
mov
push
jno
imulb
insl
inc
or
xor
sarb
lods
js
or
xor
stos
sahf
pop
jbe
lahf
imul
daa
sub
pushf
xor
mov
rclb
das
stc
scas
pop
mov
mov
xor
dec
imul
or
xchg
addl
leave
mov
jmp
rclb
cmpl
jb
cs
inc
cmc
int3
icebp
cli
call
mov
hlt
jno
and
sbb
mov
push
xchg
loop
and
cmpsl
cwtl
jbe
add
push
jecxz
dec
lcall
sbb
lods
pop
cmp
mov
or
mov
xchg
jbe
push
sbbl
into
ja
into
in
mov
insb
lock
jg
adc
mov
popf
repz
into
and
mov
jecxz
dec
fidivrs
and
aas
xchg
sub
or
sbb
fsts
enter
testl
lods
mov
repnz
aad
call
rolb
xchg
add
js
dec
cmovb
sbb
cli
movsb
xor
in
lds
popf
cmp
in
shl
sbb
mov
mov
sahf
cli
test
xor
stc
sbb
repz
xorl
add
inc
popa
repnz
mov
jle
dec
leave
sbb
test
movsb
push
sbbb
bound
pop
xor
ja
jb
mov
ds
cmp
mov
out
push
jmp
jbe
push
loope
xor
cwtl
cmp
imul
mov
jmp
sbb
movsb
into
inc
lea
enter
adc
lock
or
sbb
ljmp
pop
or
lods
jae,pn
add
and
xchg
shll
pop
fldt
mov
xor
mov
mov
adc
and
dec
cmpsb
or
cltd
mov
xchg
cmp
mov
js
xor
pop
jecxz
inc
mov
mov
pop
into
adc
push
fsub
xchg
in
fsubrp
inc
add
into
mov
leave
fistps
stc
mov
mov
data16
dec
cltd
movsb
adc
sub
and
cmp
mov
into
int
daa
insb
xchg
adc
jo
test
daa
cmp
popf
add
mov
inc
jmp
shrb
jnp
dec
mov
aam
orps
push
repnz
or
dec
cmpb
insl
push
inc
xor
cmpsb
mov
push
or
mov
lds
aaa
js
mov
outsb
repnz
xchg
and
jmp
sub
inc
mov
inc
ljmp
lds
dec
sub
add
mov
jmp
push
inc
sarl
ret
mov
mov
rolb
sti
or
loopne
inc
shl
movsl
adc
adc
sbb
inc
scas
addl
lcall
pushf
inc
dec
mov
xor
mov
and
mov
dec
addr16
and
imul
lret
in
loop
das
insl
dec
mov
add
xlat
mov
xor
cmp
xchg
cmpsb
loopne
sub
jae
fld
push
push
test
fbld
enter
mov
in
fldt
testl
cmp
nop
aaa
push
mov
adcb
adc
inc
mov
xchg
mov
js
dec
inc
add
mov
not
jmp
es
xchg
packsswb
push
test
cld
fcompl
jge
in
popf
ss
mov
sbb
inc
sbb
mov
and
lods
subb
dec
or
daa
add
xlat
lods
xor
inc
stos
pushf
ja
sbb
subl
adc
enter
aad
mov
out
leave
jl
pop
scas
xchg
push
xor
or
loopne
push
flds
xor
pop
push
mov
aam
adc
jae
pop
cld
out
rorb
scas
leave
add
mov
add
adc
insb
push
rol
shll
pop
aas
pop
inc
dec
arpl
xor
ret
lahf
je
fcmovnbe
in
fwait
insb
mov
lcall
cli
ds
test
push
dec
xchg
xlat
jmp
xchg
es
sub
les
in
popa
xchg
andb
sti
cld
xchg
inc
dec
outsb
jo
popa
jb
mov
dec
pop
adc
and
push
push
mov
or
stos
xchg
dec
cmpb
mov
xor
or
or
push
fwait
mov
sub
icebp
mov
push
gs
fs
or
daa
bound
fldenv
rcl
jb
imul
aaa
mov
add
cmpsl
jno
out
dec
dec
insb
outsb
inc
mov
push
mov
xchg
xchg
mov
inc
push
cmpsl
shll
mov
cltd
aad
cmc
popf
mov
aaa
or
push
imul
xchg
cmp
stos
mov
xor
adc
shll
js
sbb
fsubrs
xchg
lods
adc
push
adc
test
popf
insl
push
jnp
xorb
mov
mov
sub
mov
loopne
add
ja
mov
sbb
push
dec
xor
dec
mov
dec
in
pop
jb
es
aam
or
and
dec
mov
mov
aam
and
shlb
push
cmp
push
pop
adc
scas
rcrl
push
in
js
mov
mov
sub
sbb
jle
cmp
fs
mov
mulb
push
lds
push
mov
test
lahf
dec
xor
mov
fs
add
xchg
xchg
xor
call
push
cmp
dec
adc
mov
aaa
mov
sub
pop
inc
outsl
dec
mov
xor
mov
push
shrl
xor
out
das
test
repnz
pushf
sub
sahf
js
inc
mov
and
cmp
jb
test
fbstp
mov
movsb
mov
ret
inc
mov
lds
lret
xchg
fildll
test
adc
xor
jbe
hlt
roll
sarl
sub
sbb
out
das
jae
mov
subb
je
inc
cli
and
incl
or
mov
push
xchg
sar
and
sbb
rcl
sub
ss
ds
popf
jae
jge
stos
shrb
nop
scas
fidivrs
mov
test
std
test
lea
cltd
outsl
fwait
jo
outsb
cmpb
fcom
inc
pop
sub
fsts
fnstsw
push
shlb
cli
jg
adc
dec
js
and
hlt
les
pop
jmp
xchg
or
enter
fld
cmp
test
jl
mov
enter
repnz
dec
dec
aad
mov
imul
fwait
inc
mov
shrb
jae
dec
or
mov
ret
lods
outsb
fidivs
into
and
addb
fnsave
imul
pop
or
insl
es
xor
adc
jg
mov
mov
aas
movsb
dec
ss
pop
xchg
pop
sbb
ficoms
pop
jge
shlb
inc
test
movsl
push
add
push
imul
aas
mov
mov
rcrl
add
xchg
and
jle
mov
sbbl
sub
push
push
push
jl
test
jno
cmp
fiadds
clc
pop
adc
jmp
add
clc
enter
ss
mov
lea
jns
inc
inc
les
popa
xor
test
les
cs
sbb
lret
mov
xorl
xlat
call
jno
mov
mov
addl
rcrl
out
in
pop
incb
arpl
mov
adc
cmpsb
jnp
mov
rcrl
shll
sub
aam
mov
mov
dec
outsb
mov
out
cmpsl
adc
xchg
ret
jne
adc
adc
ret
sub
fucomip
roll
and
mov
add
mov
jl
mov
orb
pushf
shl
ja
call
ret
pop
pop
sahf
mov
xor
das
or
pop
mov
imul
arpl
rcll
jge
sbb
push
into
xlat
push
addr16
mov
je
cmp
xlat
fprem1
mov
cld
add
or
lock
out
ret
adc
movsl
mov
push
fisubrl
leave
mov
add
ret
jo
ret
out
cmp
pop
not
sti
jo
push
sbb
popa
add
inc
mov
loop
adc
adc
push
xor
imulb
jg
fs
fimuls
dec
and
out
push
out
adc
andb
mov
lds
aam
mov
push
hlt
out
jge
pop
loopne
mov
outsl
inc
and
fisubrl
cmp
cmp
inc
shlb
push
cmp
imul
dec
gs
ljmp
jae
xor
sub
scas
xor
cmpsl
stos
mov
in
aas
pop
rolb
push
dec
idivb
jg
out
xchg
fwait
loopne
addr16
jecxz
outsb
xor
enter
fildl
xchg
inc
push
aad
mov
ds
mov
roll
push
cld
push
mov
jbe
cwtl
jl
std
hlt
lret
xchg
jle
fs
mov
push
stos
fld1
xchg
push
sub
or
or
push
xchg
mov
adc
pop
les
xchg
jl
inc
dec
cmpsb
sbb
sbb
loop
stos
push
cmpl
in
add
sub
popf
aaa
addb
mov
cwtl
or
loope
mov
dec
xor
pop
and
shl
les
cmp
push
rcrb
rol
aas
insb
sti
and
adc
bound
lods
out
lret
mov
pop
cltd
sbb
mov
cmp
push
into
inc
add
stc
xchg
lret
mov
insl
sbb
into
pop
cmp
ficoms
jnp
add
insl
add
sub
jns
nop
cmp
jmp
xor
aaa
add
dec
and
mov
or
loop
out
filds
jae
jp
stos
xchg
outsl
aad
sbb
arpl
inc
call
or
fisubs
int3
movsl
push
jg
mov
xchg
gs
inc
lcall
pop
lret
int
lcall
stos
inc
fsubrs
inc
aam
lds
cltd
mov
dec
fldt
roll
insl
hlt
mov
xchg
sub
jne
test
fcmovnu
test
sbb
out
cli
mov
xchg
pusha
dec
mov
mov
cmp
mov
movsb
sbb
adc
add
jmp
xchg
push
loopne
ja
icebp
ficoms
cltd
add
fs
loopne
push
lock
cmp
mov
rcrl
xor
in
loopne
lods
ret
push
test
and
adc
inc
lret
mov
out
in
adc
pop
packssdw
sub
lahf
jmp
arpl
xlat
pop
mov
pop
inc
aad
jl
or
cmp
je
cmp
idiv
and
mov
pop
pop
mov
bound
cmpsl
fbstp
mov
lock
lds
scas
movsb
rep
add
bound
xchg
sbb
push
xchg
test
cmpsl
xchg
cwtl
mov
pop
inc
jae
pop
stc
out
testb
out
arpl
cmp
in
or
mov
mov
push
jg
xor
pop
and
mov
in
mov
mov
cmp
hlt
cmpsl
jnp
lret
xchg
cmp
sbb
push
fs
mov
pop
nop
mov
cmp
mov
push
in
add
hlt
popf
sub
xchg
mov
fstl
push
jb
sub
mov
inc
xchg
outsb
cltd
leave
inc
mov
mov
sbb
decb
das
pusha
push
fwait
loopne
movb
cmp
push
sub
fwait
insl
lcall
mov
jb
mov
or
xor
jo
push
ss
cmp
insb
cwtl
movsl
jg
adc
sbb
jecxz
sbb
in
lds
mov
dec
lret
adc
lea
stos
into
xchg
idivl
adc
cmpl
pushf
daa
sbbl
lret
and
sahf
lcall
lret
xchg
mov
imul
xor
xor
pop
lock
jns
icebp
pop
lods
pop
xor
mov
or
into
rorl
or
push
in
loop
roll
das
add
cmc
push
mov
jle
inc
fdivr
fisttpl
pop
sahf
fdivp
adc
ljmp
push
imul
xchg
cmp
repz
push
popf
stc
pop
imul
add
pop
pusha
dec
nop
ds
int3
sbb
cmpsb
repz
outsb
cmpsb
in
sti
and
not
adc
xchg
dec
testb
daa
sub
mov
ss
jmp
stos
sub
je
push
sbbb
cmp
jmp
adc
rcrl
gs
stc
fisttps
ss
inc
lahf
or
cmp
lods
sbb
xchg
adc
pop
insl
divb
xchg
js
ja
dec
lods
xchg
pop
add
cmpsb
das
mov
ficompl
call
sub
jo
xchg
les
fidivl
dec
lret
add
ljmp
sbb
in
inc
jp
ljmp
ljmp
pop
in
fsubs
rorb
push
cmp
lods
mov
sbbb
repnz
mov
in
das
inc
stos
insb
cmp
xchg
pop
call
dec
cmpl
cmp
push
add
clc
mov
fmull
sub
xchg
outsb
test
scas
xor
mov
jg
xchg
jg
sbb
sbb
fisttpl
pop
mov
mov
adc
fbld
mov
les
pop
in
xchg
sbb
dec
sub
jo
adc
dec
xchg
mov
add
out
fidivrl
mov
or
xchg
das
in
dec
mov
pop
xchg
xor
push
mov
mov
icebp
or
data16
mov
mov
pushf
jge
testl
sbb
lret
outsl
push
test
je
fnstsw
cmpsl
das
into
fcomps
mov
popa
lret
insb
js
sub
stos
sub
js
int
stc
lcall
pop
fdivs
cs
cmc
insb
ljmp
mov
lds
or
sub
ds
mov
add
inc
inc
subl
push
fildll
lret
repz
jmp
leave
mov
cmp
imul
jecxz
mov
sub
test
push
sbb
jbe
mov
and
inc
jb
dec
or
jp
cs
jae
fadd
mov
mov
push
test
int3
shr
mov
aad
mov
cmp
push
sarb
or
jo
jo
std
adc
xor
arpl
mov
jno
jecxz
nop
mov
push
mov
sub
or
jmp
xor
mov
cmp
mov
jns
push
aad
push
fld
pop
mov
int
pcmpgtb
jns
fisubrl
lock
xchg
mov
inc
dec
cmp
pop
test
das
aas
aad
leave
push
out
sbb
mov
in
adc
je
dec
sahf
ljmp
lret
inc
mov
nop
loop
cmp
out
test
js
push
push
jne
shll
pop
cmp
sarb
iret
cbtw
faddl
mov
sarl
in
sub
icebp
orb
lods
xchg
adc
iret
fdivp
sarb
mov
add
ret
sub
push
es
ret
mov
xor
iret
cwtl
sub
push
pop
jo
add
addl
inc
ret
test
mov
test
nop
pop
repz
cmpl
cld
lock
sbb
pushf
gs
push
sti
hlt
lds
ficomps
scas
push
fisttpl
xor
push
ds
mov
jmp
mov
testl
dec
out
sbb
push
jo
orb
iret
push
cmp
mov
test
in
cmpsb
push
xor
lea
or
in
hlt
adc
mov
xor
lcall
cltd
lahf
mov
mov
fisubrs
inc
mov
pushl
mov
inc
repz
ret
cmp
mov
les
pop
shrb
das
push
sbb
sub
push
push
cmp
jmp
dec
push
pop
stos
outsl
push
cmp
test
mov
mov
cli
pushf
xchg
stc
ds
test
outsl
repz
rcrb
aaa
fmull
mov
stos
andb
scas
ret
jmp
push
xor
pop
shll
mov
xchg
inc
cli
xlat
dec
aas
jmp
dec
std
std
xor
xchg
sub
sbb
stos
test
push
jae
push
jl
mov
sub
jmp
lret
jo
and
cmpsb
dec
cmpsl
movsl
jp
sub
xor
xchg
sub
sbb
out
mulb
ficoml
inc
scas
pop
clc
push
imul
jecxz
xchg
pop
jmp
jl
cmp
loope
mov
pop
push
xchg
mov
stos
adc
icebp
inc
test
in
in
mov
mov
or
add
adc
jecxz
les
mov
jp
sahf
push
test
or
inc
mov
nop
aad
adc
cmpsb
pusha
push
sbb
push
aas
insl
jge
mov
aam
cmc
leave
movsl
push
int3
dec
push
lods
scas
push
sub
adc
push
mov
adc
push
int
mov
mov
xor
sub
daa
cli
mov
sub
dec
sub
mov
cmpsl
outsb
adc
sbb
inc
jge
nop
xor
lea
iret
dec
cwtl
jp
cmpsb
sbb
imul
mulb
cld
or
mov
add
sbb
xor
sarl
mov
scas
into
or
insl
mov
test
inc
mov
lcall
mov
push
int3
arpl
mov
add
adc
cmp
into
icebp
add
int3
jle
fs
daa
ljmp
sub
push
adc
jge
bndldx
mov
jae
into
jle
adc
popf
aam
mov
sub
lods
ja
rclb
test
pusha
sbb
cld
or
stc
xor
xchg
pop
mov
daa
cs
lsl
xchg
sub
in
inc
rcll
clc
test
push
push
rolb
std
and
mov
add
push
outsl
ljmp
adc
mov
mov
pop
xchg
scas
loope
mov
cmp
je
mov
cmp
sub
sbb
jae
mov
mov
push
add
mov
into
fnsave
rcl
shll
leave
mov
lret
sub
push
mov
sbb
cltd
mov
test
jl
fimuls
addb
cmp
dec
hlt
xlat
cmpsl
dec
mov
ror
dec
xchg
enter
push
xchg
or
jle
push
sti
shr
in
mov
testl
nop
inc
or
mov
dec
dec
scas
pop
adc
jge
fwait
push
jl
add
xor
jno
mov
pop
rclb
mov
ss
mov
out
sub
mov
jae
xor
push
dec
dec
mov
stc
xor
mov
cli
js
iret
repz
mov
loopne
mov
sarl
adc
dec
add
cmc
mov
add
pop
pop
xor
pop
mov
inc
xor
ds
bnd
addr16
add
fnstcw
or
out
and
test
dec
xchg
lods
cmp
pop
dec
vpunpckhdq
push
mov
iret
cmc
lahf
cmc
addr16
or
sbb
jb
dec
xor
push
mov
mov
push
fiadds
repz
loopne
outsb
push
and
sarb
jns
pop
sub
stos
xor
mov
sub
movsl
sub
xchg
and
pop
sub
fldl
sub
lahf
and
pop
movsl
pop
das
arpl
xchg
mov
cmp
imul
repnz
jecxz
xor
mov
jo,pt
test
xchg
xchg
loope
mov
xor
and
push
test
mov
add
fwait
mulb
push
cli
push
addr16
out
imul
imul
fnstsw
or
sbb
adc
adc
movsb
xor
mov
out
fidivl
mov
jp
mov
jmp
fwait
mov
jecxz
in
ret
aam
adc
out
cmp
mov
out
out
fldcw
cmp
ds
in
insb
iret
imul
andb
movb
lods
aaa
stos
mov
rcl
popa
adc
cmp
int3
ljmp
icebp
push
imul
cmp
gs
aaa
xor
sbb
arpl
pusha
cmp
cmpl
jge
xchg
jbe
test
shlb
mov
and
test
mov
lods
aam
loop
push
arpl
scas
and
sahf
mov
jp
cmc
fisubrs
xchg
or
movsl
jge
xchg
push
xor
rolb
std
pop
dec
cmp
sahf
ds
imul
iret
addb
push
ljmp
nop
ret
test
add
xchg
jo
shll
sti
jbe
inc
xchg
push
ret
imul
fcmove
dec
adc
sub
imul
dec
insl
and
and
mov
push
push
stos
jge
lods
sub
cmp
add
lcall
and
jne
jecxz
loopne
clc
pop
mov
imul
adc
sti
push
and
jge
mov
inc
sub
callw
in
cmpsb
lock
pop
cmp
shrb
sub
push
inc
push
mov
xchg
xchg
shll
movsb
jecxz
das
in
or
cmp
or
iret
inc
lahf
cmpsb
mov
ljmp
cmc
push
push
add
testl
fimull
xor
imul
jmp
inc
ss
mov
xor
or
push
pop
add
pop
mov
cmp
push
lcall
addl
mov
out
les
mov
sbb
dec
in
mov
and
imul
or
out
hlt
call
adc
pushl
jp
mov
scas
fwait
xchg
mov
push
ret
movsb
lret
dec
add
loope
inc
gs
addl
flds
pop
inc
adc
fiadds
push
cmp
test
lea
pop
shll
insl
adc
mov
xor
call
mov
lea
or
idivb
xor
dec
outsb
inc
out
in
and
sbb
mov
xchg
add
aaa
stos
cltd
cmp
fwait
and
xor
sahf
xor
jno
dec
xchg
add
nop
xor
lahf
into
test
mov
adc
sub
sub
cli
push
lods
fwait
les
or
sub
mov
lds
mov
mov
repz
mov
lods
inc
imul
loopne
leave
aam
or
or
add
test
inc
cli
inc
pusha
insl
jle
xchg
mov
jle
popa
dec
sbb
aaa
jns
shrb
mov
pop
in
or
pop
std
inc
inc
inc
cmpsb
out
mov
sbb
out
mov
scas
std
scas
nop
in
xor
sti
inc
lods
pop
icebp
mov
in
xor
mov
pop
lods
jb
and
xchg
inc
mov
xor
cltd
xchg
add
hlt
xchg
ja
aad
ret
mov
sbbl
jg
fsubrl
and
push
dec
or
xor
aas
add
and
mov
iret
or
dec
enter
sbb
lock
or
xchg
or
ljmp
les
cli
pushf
pop
cmp
and
test
xlat
sub
scas
sub
adc
hlt
mov
push
call
jns
stos
sbb
cwtl
and
or
jne
and
mov
inc
inc
iret
mov
movsb
xchg
mov
test
lcall
lret
iret
mov
mov
daa
fwait
stos
in
sbb
aas
xor
cmp
cmp
jne
xchg
imul
inc
push
cmpsb
daa
pushf
or
jae
orb
xchg
fiaddl
add
aad
ret
aam
push
adc
mov
sbb
jb
test
inc
mov
inc
addr16
aad
or
xchg
mov
in
bound
loop
pop
fcom
shll
mov
xor
mov
movb
xlat
push
jne
scas
loopne
mov
popf
adc
cmpxchg
dec
mov
mov
jbe
outsl
and
int3
mov
add
das
or
xchg
sub
bound
mov
in
ljmp
push
mov
jg
arpl
mov
insb
mov
xchg
cmp
mov
xchg
fwait
cld
insl
outsl
sub
fstpl
pop
fmul
dec
mov
lock
adc
int3
mov
test
push
sub
subl
test
stc
dec
lret
xchg
outsb
xchg
mov
bound
mov
shrb
or
cs
fldl
push
or
iret
push
jnp
xlat
fisttpl
aas
xchg
jbe
cli
cmp
inc
fwait
loopne
into
aas
daa
pop
icebp
xchg
in
fistps
jo
jae
add
cmpsb
insl
or
cltd
insl
sbb
movsl
loopne
popf
push
clc
popf
xor
mov
dec
fsubs
es
pop
inc
xor
ja
adc
icebp
xchg
mov
adc
movsl
stc
pop
mov
mov
icebp
xor
push
adc
jb
mov
xchg
mov
push
scas
xor
stc
mov
mov
lfs
push
dec
sub
fadds
in
sub
dec
test
cs
pop
mov
jmp
testl
jle
faddl
in
mov
fsubrs
jne
xor
lea
push
or
cs
imul
rorb
cs
inc
cld
lahf
mov
out
sbb
push
lods
aad
jge
xchg
inc
mov
mov
push
xchg
push
xchg
cmp
or
pop
das
int3
mov
int
cmp
cmp
stos
or
sbb
pop
xchg
adc
and
into
in
aas
xor
sbb
and
xchg
call
out
inc
or
cmpsl
loope
movsl
and
out
cmp
inc
push
and
je
or
fsqrt
imul
ja
cmpsb
xchg
aaa
pop
bound
mov
ret
fs
lea
pop
mov
sahf
adc
cmpsl
filds
sbb
out
push
adc
lock
xchg
xchg
push
ret
popa
add
aas
jb
cmp
pop
lea
sbbb
movsb
sbb
out
adc
lds
dec
xacquire
lret
adc
jl
add
sarl
push
sub
aaa
mov
inc
jnp
js
push
pop
pusha
add
imul
xor
xor
js
and
ficoms
pop
mov
cmpsb
out
xor
jmp
jp
dec
jo
push
lea
bound
cli
cmp
fistl
mov
shl
cmpsb
or
pop
out
jp
and
call
lcall
inc
mov
inc
pop
mov
stos
cwtl
and
test
es
add
jbe
cld
hlt
sub
sbb
push
jecxz
cmpsl
mov
in
lcall
and
clc
or
push
inc
out
jmp
mov
jne
and
pop
lds
mov
cld
mov
rclb
lds
xor
xchg
repnz
vpcmpgtd
cmp
cmpl
sub
sub
adc
or
mov
pop
cld
orb
insl
xchg
push
notl
xlat
jl
loope
jbe
add
mov
je
fadd
jo
cmp
ret
dec
cmp
inc
xor
pop
inc
lret
cmc
jge
fld
cs
mov
adc
sbb
lods
jmp
sbb
nop
push
hlt
fsubs
dec
std
or
jp
jmp
scas
push
adc
dec
bswap
cmp
jge
mov
add
push
dec
xchg
xchg
push
adc
and
loop
inc
or
sahf
dec
jge
pop
push
pop
mov
mov
dec
sbb
or
pushf
sub
adc
stos
lods
cmpb
jecxz
push
mov
loopne
pop
or
test
cmp
or
mov
mov
ret
incl
popa
dec
addr16
int
cwtl
jge
addb
sub
repz
bound
fs
xchg
insl
jnp
xor
daa
mov
jmp
mov
push
insb
or
or
outsb
dec
pusha
push
outsl
sbb
mov
ss
mov
fld1
jl
lret
lods
push
lock
repz
mov
inc
push
sbb
shrl
or
outsl
int
cmp
out
in
inc
nop
les
insl
cmpl
mov
fdivrs
out
mov
lods
inc
add
xchg
and
rclb
xchg
inc
sbb
dec
dec
pop
dec
insb
add
add
xor
dec
mov
xorl
in
ror
dec
and
push
je
cmp
rorb
mov
cmc
push
pop
xchg
movsl
fwait
cli
dec
js
sbb
lds
mov
and
cmpsl
jae
out
movsb
xor
ret
ja
sti
into
les
jo
pop
cmpsl
mov
repnz
or
es
dec
mov
lcall
test
inc
mov
push
and
int
rcll
jmp
mov
rcrl
add
imul
jle
in
test
int
mov
rolb
iret
add
jg
pop
mov
or
mov
ljmp
test
jmp
and
je
test
add
xor
js
pushf
outsb
pop
adc
jbe
sub
adc
mov
jnp
mov
rcll
and
and
movb
mov
mov
push
ss
xor
imul
sub
push
push
cmp
pop
fmulp
xor
leave
sbb
fs
dec
mov
stc
fldl
push
mov
dec
push
shlb
mov
imul
add
mov
ret
mov
clc
push
and
mov
mov
jmp
popl
es
mov
andl
fstp
loopne
dec
mov
dec
fiadds
or
pop
addb
fnstcw
add
ficoml
and
jecxz
mov
andb
jb
or
call
aad
xchg
mov
out
jne
shl
jle
lahf
mov
add
push
mov
sbb
inc
into
int
xor
mov
inc
das
movsl
pop
icebp
rorl
je
fldcw
cmpsl
sbb
addb
xor
jbe
pushf
aam
or
pop
movsl
enter
inc
push
orl
lock
dec
fsubp
mov
test
mov
stc
dec
icebp
sti
imul
jb
mov
or
les
ret
pop
dec
adc
inc
filds
rcr
xor
sub
leave
mov
mov
ja
ds
clc
xor
insb
cli
cwtl
mov
jo
sbb
fiaddl
and
mov
xor
mov
push
xchg
stc
lret
rcrb
jne
pop
mov
jmp
jo
sbb
jnp
adc
dec
mov
jnp
sub
mov
mov
cmc
aas
out
cmpsb
pop
inc
leave
jne
push
dec
fidivs
xchg
std
xchg
in
jne
cltd
daa
cmp
jb
cmc
sub
dec
fnstcw
ss
ds
sub
loop
push
loope
inc
mov
movsl
dec
xchg
xor
stos
add
das
fwait
push
stc
cmp
dec
ja
setnp
cli
cmp
push
ret
repz
mov
clc
iret
inc
out
std
push
aaa
js
sar
dec
enter
mov
ret
std
dec
jg
inc
sub
add
xor
pop
int3
je
jbe
and
adc
arpl
dec
mov
das
movsb
mov
add
out
out
hlt
lods
xchg
pop
adcl
adc
in
and
scas
xchg
std
icebp
cwtl
or
repnz
lods
out
out
addb
and
test
cmpsb
fcmove
mov
popf
incb
and
loop
nop
scas
nop
mov
lahf
xor
nop
arpl
xchg
aas
out
dec
xchg
mov
mov
ja
dec
cmp
or
push
push
enter
pop
js
and
arpl
pop
icebp
mov
popf
mov
sbb
fucomip
hlt
jbe
fcmovu
cmp
int
lahf
cld
mov
loop
test
mov
jmp
aas
cmp
int3
push
mov
lret
data16
add
mov
and
adc
sub
testl
push
sub
int
test
push
adc
ja
xchg
mov
int3
lret
mov
jo
dec
add
adc
push
xchg
pop
or
and
test
jne
adc
cmp
icebp
pop
int
test
mov
cmc
xor
inc
lcall
mov
fstp
mov
pop
inc
pop
pushf
imul
mov
push
xchg
in
aad
aam
inc
dec
outsl
xchg
pop
cmp
xchg
repz
mov
mov
pop
stos
mov
jp
cmp
cmpsl
mov
popa
add
fxrstor
arpl
xor
fbld
aas
pop
mov
mov
lods
mov
jae
iret
stc
sbb
sbb
aad
out
dec
xor
mov
or
or
push
sbb
js
sub
pop
rcll
mov
xchg
insb
aam
je
jecxz
mov
decl
xor
inc
ret
test
xchg
push
popf
lahf
ljmp
jno
push
adc
jne
jae
fsub
mov
aad
jecxz
inc
test
and
pop
int
mov
stos
add
dec
jno
xor
pop
addr16
cli
jmp
adc
hlt
mov
es
inc
sbb
mov
movsl
sbb
pop
jnp
cmp
jl
in
sub
xchg
or
cli
lret
rcrl
ret
jae
push
movsl
stos
adc
add
xchg
sarl
out
rorb
aas
mov
call
mov
pop
and
pop
jae
push
fwait
xor
jnp
rol
push
orl
cmpsl
jp
pop
movsl
in
ds
jg
shlb
push
mov
mov
fdivrs
lock
test
xchg
shl
jno
xchg
mov
mov
hlt
nop
jns
xor
xor
out
dec
sbb
and
adc
lock
cld
xor
rolb
adc
fnsave
inc
sub
jge
es
mov
lea
xor
jmp
xchg
jns
sbb
testl
dec
test
sahf
pop
das
test
or
rcrl
mov
sbb
mov
cmp
mov
cld
test
das
call
cmpsl
cwtl
pop
ja
lods
imul
cs
sbb
add
insb
lahf
pop
sub
addb
imul
scas
out
jg
mov
fs
into
or
out
add
sub
pop
fwait
shlb
inc
leave
test
jne
and
mov
dec
jl
shl
pop
push
sub
jbe
pop
mov
nop
test
cmpsb
mov
out
pop
push
and
out
push
mov
push
imul
and
mov
dec
es
cmp
cld
sbb
xchg
cmp
stc
fnsave
lahf
jno
dec
jb
stos
dec
idivl
add
xor
mov
sbb
xchg
pop
and
movsl
iret
sbb
pop
cmp
inc
pop
repz
jmp
xchg
mov
mov
jno
push
or
add
mov
or
mov
xor
cmp
pop
dec
inc
xchg
ss
cmp
mov
lcall
cmc
cmp
sub
cli
aaa
mov
scas
and
cwtl
jae
test
mov
sahf
mov
test
and
imul
jno
adc
repz
xchg
add
sti
rorb
popf
xchg
mulb
jl
jmp
add
nop
push
dec
pop
sbb
sbb
faddp
push
adc
xchg
lahf
popf
cmpsb
jmp
rolb
ja,pn
in
sub
push
mov
and
insl
dec
mov
adc
inc
push
scas
outsl
dec
adc
std
add
adc
imul
mov
push
cmpsb
jle
push
jb
push
or
test
aaa
mov
into
pop
or
jp
xchg
add
push
push
cmp
xchg
add
and
and
jge
pop
int3
hlt
jecxz
imul
cmp
push
add
push
lea
fucom
les
and
push
adc
test
mov
dec
xchg
xor
out
faddl
cltd
popa
jnp
cwtl
mov
stos
xlat
int3
fprem1
jmp
push
mov
fcmovne
loopne
xorl
aam
out
aaa
mov
mov
loop
aad
ds
dec
das
repz
movsl
mov
call
add
adc
sbb
in
data16
fcmovnbe
sarl
lods
sbb
jb
inc
ffreep
cli
jmp
jp
aad
addb
mov
cmp
in
ucomiss
sarl
mov
and
stos
js
pop
inc
lahf
jmp
sub
adc
xchg
mov
cltd
int
pop
mov
je
pop
adc
test
and
sub
cmp
sub
cltd
sbb
pushfw
or
cmp
loope
mov
stos
mov
pushf
dec
ror
in
insl
xor
lret
out
or
adc
fidivs
frstor
dec
ret
dec
push
adc
sbb
inc
push
out
idivb
roll
adc
int
out
aad
jg
divb
cmpl
fisubrl
mov
cmp
dec
xchg
out
movsl
cmp
adc
repnz
inc
movsb
xchg
sub
mov
dec
pushf
mov
jo
aas
sbb
pusha
outsl
sbb
inc
lret
xor
sub
arpl
std
in
jns
sahf
ret
out
lds
popa
mov
cltd
sti
mov
ret
js
jp
nop
sti
xchg
pop
push
daa
test
pop
inc
mov
shr
xor
data16
test
adc
fidivrl
push
icebp
push
add
lds
sub
popa
jnp
mov
lret
aaa
pop
sub
pop
lock
iret
cmc
cmp
lret
fisttpll
push
test
add
call
jae
mov
sub
mov
adc
pop
push
data16
inc
outsb
xor
mov
sti
out
movsl
outsl
bound
jns
push
lret
adc
repz
out
xor
jnp
lds
andl
out
jl
loop
sbb
adcl
icebp
dec
or
stc
sbb
cs
xchg
jne
and
popa
hlt
test
imul
sahf
mov
in
movsb
jmp
add
stos
jno
mov
lods
and
mov
icebp
sti
cwtl
testl
lods
dec
movsb
fimull
sbb
dec
xlat
fimuls
pop
pop
push
aam
inc
xor
inc
in
jp
fimull
scas
mov
xor
mov
dec
jno
dec
es
jnp
mov
rol
scas
xor
or
or
push
scas
shr
cmp
pop
cmp
sub
mull
add
xchg
fmull
xor
add
mov
inc
mov
mov
cltd
rclb
hlt
jbe
imul
mov
pop
mov
scas
add
sarl
mov
jno
scas
or
push
xchg
lahf
or
out
ljmp
enter
out
cwtl
pop
mov
fmull
and
ds
cs
int3
cmpsl
mov
fbstp
or
pushf
add
dec
aas
sub
mov
dec
xor
pusha
sbb
lods
in
pop
int3
pop
imul
xchg
enter
cmp
mov
cs
idiv
cltd
clc
or
push
stos
hlt
mov
shll
lret
adc
in
std
rorb
mov
sub
xchg
adc
inc
mov
inc
xor
jp
imul
repnz
xchg
jecxz
or
mov
mov
jle
lret
adc
cld
sbb
or
insb
jecxz
sbb
xchg
in
jae
and
pop
mov
cmpsb
fcmovb
inc
push
fsub
fstpl
jg
inc
aam
loop
pushf
cmc
divps
mov
jbe
aaa
jb
fs
push
aam
push
jmp
jb
in
roll
out
push
jnp
lcall
popf
pop
mov
push
insl
mov
popa
call
cli
inc
mov
mov
xchg
andb
jl
test
xchg
sub
stos
jecxz
outsl
and
stc
pop
inc
cmp
rorl
lods
push
pop
lret
cmp
gs
sti
test
test
int3
dec
add
lea
ja
inc
pop
mov
sarl
cwtl
in
ljmp
add
bound
js
test
mov
mov
jne
mov
cmpsb
push
int3
sarb
int
loopne
stos
xor
fsubrs
sbb
cltd
push
push
mov
mov
js
lock
jns
inc
inc
sub
pop
mov
mov
leave
cmp
mov
lods
imul
cmp
adc
cmpsl
loope
pop
inc
repnz
inc
adc
jg
pop
cld
scas
cmp
mov
test
cmp
inc
test
adc
insl
push
mov
jnp
into
add
out
or
jle
xchg
cmp
inc
inc
fdivp
push
or
xchg
arpl
push
xor
and
ret
cmp
ja
inc
or
dec
inc
roll
mov
pop
in
or
cmpsl
add
cmp
out
pop
imul
rorb
sub
dec
jp
push
jbe
ljmp
pop
int
lret
outsb
roll
arpl
jp
icebp
adc
int
pop
sub
xchg
in
je
push
add
lcall
sbb
jecxz
mov
jg
dec
gs
cmpsl
je
inc
and
neg
push
and
sub
push
add
outsl
push
cmpsl
fs
ds
mov
sub
out
push
or
mov
ficoms
in
cmpsb
jns
in
push
fidivrs
mov
out
icebp
pop
les
cmp
cmp
push
clc
push
insl
insb
cmp
push
or
negb
xchg
or
xlat
jmp
mov
mov
in
lods
jg
std
xchg
in
pop
test
jbe
pusha
lock
mov
jg
cli
mov
dec
fidivrs
mov
push
sub
xlat
jmp
imul
fbstp
insl
xchg
vmread
in
inc
push
or
es
dec
xchg
xchg
cmpsb
xchg
xor
cmp
cwtl
mov
loop
jge
cmp
ja
pop
shll
sub
mov
aad
pusha
mov
jmp
jns
lds
cwtl
xchg
xchg
nop
xchg
in
mov
mov
mov
repz
or
divl
xchg
sbb
sbb
jmp
les
shll
adc
or
ja
mov
and
mov
add
mov
jle
insl
mov
outsb
in
cmpsb
leave
lock
add
sbb
push
ja
pop
dec
fwait
pop
push
push
pop
fs
xchg
dec
adc
push
outsl
orl
mov
movsl
dec
push
xor
add
jnp
mov
fisubs
mov
xor
call
lods
xchg
movsb
pop
and
sbb
jne
repz
dec
xor
pop
fsubr
sub
dec
imul
outsb
in
cmp
pushf
ljmpw
push
std
pop
push
and
je
sbb
add
sahf
orb
push
pop
jo
jb
adc
or
sub
xchg
sub
jns
xlat
dec
cli
dec
jge
or
xchg
fists
adc
pop
mov
mov
jb
xchg
push
add
xor
loop
icebp
shl
fwait
add
frstor
dec
sub
fwait
loope
fisubl
mov
aas
in
lcall
out
inc
fsubr
add
pop
fisubrs
mov
jecxz
ljmp
rclb
out
outsl
js
ja
inc
iret
cmove
or
out
sbb
lea
adc
jo
mov
xchg
ss
aam
es
xchg
daa
ret
cmpsb
sahf
xchg
pop
enter
dec
mov
lcall
insl
std
adc
fwait
movsl
add
sti
in
imul
add
and
subb
gs
outsb
nop
lods
stos
rcll
pop
jno
or
add
out
inc
std
outsb
jmp
push
movsb
inc
add
sbb
insl
or
inc
shl
xlat
std
inc
push
ret
jae
sub
cli
and
sub
das
xchg
scas
cmc
mov
jle
aad
mov
pop
mov
push
aas
test
push
sub
xchg
fucomp
sub
shll
nop
pusha
push
and
and
popf
out
dec
cld
xor
stos
push
cmpsb
mov
popa
sbb
std
pop
ret
cltd
adc
lret
mov
gs
sbb
and
pop
add
lahf
adc
push
jb
out
xor
jmp
lcall
gs
mov
pop
jne
cmp
cmp
int3
xor
sub
and
lahf
hlt
movsl
loopne
in
hlt
lea
sbb
mov
mov
call
outsb
icebp
call
fstl
scas
out
add
inc
les
cmc
ja
sbb
ss
mov
jmp
dec
lock
pop
popf
fwait
inc
xchg
xchg
jecxz
test
jb
pop
sti
aas
incb
or
daa
xchg
rcrl
out
fmulp
pop
mov
inc
push
lods
jle
fnclex
pop
mov
add
data16
mov
jle
sbb
fadds
mov
push
adc
aam
jecxz
filds
dec
sti
cmc
adc
into
cmpsl
xchg
jae
es
inc
and
lret
movsl
inc
push
faddl
test
mov
jp
xchg
out
shrl
aaa
adc
jae
push
jle
and
xchg
sbb
sti
lods
pop
cmp
jg
test
lcall
fstpt
clc
xchg
out
out
cmpsb
scas
mov
mov
xchg
mov
mov
sub
lds
adc
add
mov
call
cmpsl
pop
popf
ljmp
jbe
sti
loope
stc
inc
xor
mov
push
scas
pop
imul
mov
fimuls
push
aad
stc
sahf
outsl
and
hlt
push
lock
inc
in
mov
mov
notb
fdiv
jb
jecxz
xlat
and
shrb
push
sub
js
xchg
popf
into
out
xchg
sub
das
inc
pop
xchg
outsb
sbb
rorl
dec
in
incb
pop
divb
pop
jne
jmp
cmp
nop
or
lods
xor
inc
mov
xchg
cmpsb
lret
mov
xor
ret
not
fwait
or
cmp
or
adc
sbb
pop
push
xchg
or
test
adcb
fnstcw
push
fcomi
in
int
cmp
leave
pop
imul
loop
lahf
cltd
xchg
sbb
rcrl
xchg
push
cmp
xor
mov
jb
adc
inc
mov
mov
sub
inc
ss
push
jbe
push
add
icebp
imul
cmp
sbb
cwtl
and
dec
aam
mov
aaa
jnp
cli
cmpsl
inc
jb
mov
sahf
dec
js
idiv
adcb
lods
sbb
adcb
dec
mov
push
mov
dec
and
add
jg
insl
les
pop
inc
jne
data16
sub
jo
test
adc
fwait
adc
mov
iret
mov
push
xor
int3
ds
repnz
stos
pop
xor
xchg
inc
xor
lock
lea
xchg
leave
out
bound
cwtl
adc
movsl
cld
icebp
addr16
pop
ret
ja
adc
pop
mov
leave
test
xchg
lods
push
fidivs
fsubs
push
dec
dec
xchg
or
lret
out
add
sbb
mov
out
imul
sbb
rcll
mov
aas
scas
mov
dec
jge
repnz
orb
daa
cmp
leave
push
cld
loopne
xchg
cmpsb
and
jno
and
adc
insb
push
jg
icebp
push
xor
aaa
daa
subw
sbb
mov
adc
push
push
cltd
fidivrl
mov
sarl
sahf
mov
xor
loopne
inc
xchg
lret
xor
out
and
inc
aaa
into
mov
cmp
bound
lods
pop
movsl
les
push
pop
xchg
jae
push
pop
hlt
into
rorb
repnz
ljmp
lret
iret
call
imul
mov
imul
sub
pushf
shrb
mov
mov
lcall
xchg
fs
mov
inc
xor
movl
test
aaa
stc
addl
in
pop
pop
sahf
aas
xor
movsb
ss
addl
rorb
inc
fs
adc
ljmp
and
pop
out
iret
inc
mov
les
insl
adc
mov
xlat
or
sbb
mov
out
sbb
bound
inc
pop
xchg
lar
out
jp
adc
std
lods
sbb
les
clc
stos
cmp
das
add
or
pusha
or
sub
sarb
leave
scas
sti
dec
repnz
out
scas
xor
les
dec
and
cmpxchg
pushf
pop
insb
cs
cltd
xorb
mov
inc
aad
aaa
icebp
arpl
fs
movsb
mov
add
das
push
cmp
pop
or
lret
add
outsl
pop
mov
cmp
test
std
loope
out
cmpsb
cli
lods
stos
daa
mov
lds
pushf
jnp
and
not
bound
pusha
adc
imul
mov
outsl
dec
sbb
mov
popf
jmp
xor
cmp
mov
ret
test
popf
mov
into
xchg
popf
mov
pop
insl
ja
xchg
jg
xchg
iret
icebp
ds
movsl
sub
js
xchg
mov
std
push
dec
add
mov
jmp
or
daa
in
lock
sub
push
lret
loopne
dec
jge
shrl
xchg
and
pop
push
sbb
pop
cmc
and
shll
xchg
rclb
sbbb
pop
fs
inc
adc
divb
ret
jle
inc
test
test
dec
ss
aam
daa
inc
sub
out
dec
faddl
dec
mov
cltd
mov
jmp
add
mov
scas
sub
lahf
hlt
test
js
sbb
sub
into
stos
xchg
mov
int
shll
lret
lea
in
and
xchg
sbb
aam
fs
repnz
jmp
pusha
xchg
inc
fsubrl
xor
sbb
nop
ljmp
outsl
push
iret
cmp
ja
pop
mov
sub
stos
mov
jb
sub
dec
push
notb
xor
pop
popa
and
nop
fidivrs
dec
mov
xchg
fildll
aam
test
xchg
popf
push
push
aad
push
push
insb
push
mov
scas
roll
xchg
cmc
int3
pop
xchg
xrelease
inc
test
aaa
mov
ret
inc
int3
sub
test
adc
fmul
std
pop
fwait
or
adcl
add
flds
movsl
fldcw
cmp
enter
test
fs
scas
pop
scas
les
incb
mov
cs
fmuls
jge
mov
rcll
push
cwtl
call
mov
sub
movsl
mov
jle
test
movsl
add
sub
sbb
fwait
incl
mov
pop
jmp
lret
lret
pop
xor
cmp
testl
and
cli
jmp
cmpsl
lcall
mov
inc
push
sbbb
and
pop
and
adc
sbb
hlt
popf
rcrl
add
jnp
cmp
sti
es
jle
loopne
mov
sub
aas
fstpt
cmp
and
mov
mov
lds
sbb
xchg
test
aad
orb
inc
lret
bound
sub
fnsave
pushf
or
test
in
or
push
iret
fisubrs
mov
xlat
inc
aas
rolb
xchg
xchg
lret
xchg
orb
cwtl
sbb
das
ljmp
mov
js
inc
push
sti
add
aam
fmuls
loop
mov
sbb
bound
repz
sub
insl
test
iret
cmc
dec
pop
ss
pop
inc
xlat
sbb
pushf
push
push
adc
adcb
xchg
js
sbb
mov
dec
or
dec
outsl
cmp
ljmp
hlt
aam
aam
cmp
shl
mov
aas
je
cmpsb
movsl
sbb
jbe
pop
xchg
cwtl
cmp
fs
push
sub
outsb
adc
pop
mov
xlat
push
or
lcall
or
leave
mov
adc
clc
push
fisttps
or
sbb
cwtl
and
pmullw
sbb
mov
cmp
inc
push
dec
out
xor
test
mov
adc
nop
xchg
push
stc
dec
repz
sub
out
and
loope
ficomps
in
jo
mov
dec
mov
dec
or
dec
sub
adc
fidivrl
inc
dec
xor
lahf
dec
lret
out
adc
mov
enter
out
adc
cli
das
jae
adc
cmp
fs
xchg
sub
cmp
loop
xchg
push
adc
fcmovnb
sub
mov
xor
jmp
xor
sbb
inc
sub
sbb
dec
sbb
xchg
pop
jno
sub
dec
mov
addr16
sub
and
je
shl
xor
insb
mov
mov
xor
clc
int
fmull
rorl
or
pop
js
lahf
sbb
mov
pop
clc
sub
cs
pop
jbe
dec
push
xor
std
ja
xchg
and
sahf
sbb
fisubrl
adc
mov
xchg
pop
or
in
insb
cmp
or
dec
stos
or
pop
icebp
in
lcall
in
xchg
imul
into
jne
pop
out
jge
adc
mov
negb
inc
pushf
sar
and
imul
js
out
inc
roll
push
pop
insb
dec
xchg
pop
lcall
je
lea
idivl
add
cmc
lahf
mov
and
cmp
dec
jae
fldl
pop
stos
popa
sub
and
mov
outsb
cmp
pusha
rolb
sarb
xchg
popf
jecxz
ret
sub
into
mov
mov
pushf
lret
popa
add
jae
xchg
mov
jbe
enter
xor
outsl
jecxz
dec
inc
loopne
fisttpl
lock
xor
dec
cmpsl
loope
mov
and
stc
pop
aad
pop
xchg
lods
or
push
dec
push
and
pop
adc
mov
and
add
lods
dec
imul
mov
nop
xor
or
shrl
ror
and
sbb
push
imulb
mov
gs
mov
mov
sahf
hlt
scas
pop
push
xorl
xchg
in
fsubs
stc
xchg
movsl
leave
mov
and
mov
clc
mov
cmp
push
add
call
jle
inc
std
div
aas
inc
das
outsl
mov
mov
mov
mov
inc
dec
fsubrl
or
cmp
adc
cmc
cmp
cmp
cmp
out
mov
leave
test
mov
shrd
scas
push
je
xor
rcrb
loop
mov
mov
mov
mov
xor
cmpsb
xlat
cmp
rcl
faddl
mov
insl
bound
sbb
cli
sti
jb
insb
push
sub
pop
in
ja
dec
push
call
insb
mov
xor
out
xchg
xor
idivl
test
mov
aad
in
add
jo
mov
mov
scas
mov
in
jo
stos
ljmp
cmp
mov
cmpb
xchg
imul
pop
idiv
and
lock
xchg
xchg
sbb
jle
cmpl
call
push
daa
dec
pop
pop
aam
pop
add
movsb
mov
inc
adc
js
pop
xchg
jge
out
xor
pop
and
packuswb
dec
pop
adc
pop
cmpsl
jae
push
sbb
out
in
adc
and
psubusb
pop
scas
cmc
lock
mov
shl
fsubrs
cmc
mov
jp
sub
jmp
shl
jb
fxch
xor
jge
shl
push
cmpsl
cmp
push
xor
xchg
insl
cmp
das
insb
inc
out
jo
mov
sbb
iret
pop
int3
xchg
or
dec
mov
inc
dec
mov
hlt
and
popa
push
in
pop
push
shr
stc
mov
mov
call
and
push
inc
xlat
subb
fbld
repnz
pop
loop
add
mov
inc
push
repnz
jge
and
push
pop
out
push
xchg
dec
dec
ja
xchg
addr16
mov
test
btr
gs
rcr
fwait
repz
xor
inc
sub
pop
test
es
data16
fadds
popa
xchg
mov
repnz
sub
scas
sahf
and
ljmp
aas
push
cmp
call
or
cli
pop
scas
ficompl
lret
mov
inc
mov
sahf
les
leave
inc
gs
les
aam
push
mov
roll
movsl
ss
cmp
cmc
or
adc
scas
sti
popf
mov
lods
outsb
sub
cmp
std
in
inc
adc
shl
pop
push
push
loopne
es
packsswb
arpl
jp
sarb
sub
push
and
adc
mov
mov
or
pop
add
add
fcomps
popa
hlt
inc
pop
xchg
test
push
dec
leave
push
inc
cmp
shrb
jae
xlat
scas
push
jns
cli
xchg
inc
adc
xchg
jb
mov
pop
mov
in
and
fildll
fldenv
pop
xor
rcrl
xchg
and
movsl
sub
rorb
stos
out
dec
dec
mov
mov
and
in
stc
mov
movsb
pop
inc
movsl
cmp
fists
ficoml
call
decl
fdivrl
fbstp
and
or
stos
repnz
dec
mov
pop
adc
cmpsb
mov
popf
cmp
stos
aaa
int3
ficoml
or
mov
or
xchg
fisubrs
aaa
inc
in
xor
punpcklbw
add
pushf
rcll
push
scas
rclb
loopne
mov
es
pop
cmpsl
jo
fmuls
and
lahf
cmp
movsb
arpl
loop
daa
push
sbb
xor
cmpsb
imul
sub
dec
adc
into
push
dec
aas
push
push
insl
in
in
sarl
jnp
clc
iret
adc
jecxz
ljmp
dec
mov
jo
adc
je
cmpsb
popf
pop
dec
dec
cmp
fs
sbb
popa
cmpsl
lcall
sub
push
lds
aad
mov
aas
add
ja
sbb
notb
out
jge
dec
insb
lds
jae
sub
mov
insb
sbb
xor
dec
add
add
rorb
mov
xorl
mov
roll
popf
scas
mov
lahf
ja
repnz
outsl
mov
lods
stos
mov
loope
push
stos
lret
nop
mov
out
lea
shr
sub
loope
std
add
jb
and
jmp
iret
int3
push
scas
arpl
scas
and
dec
jbe
fs
test
scas
scas
hlt
add
mov
push
insl
hlt
inc
xor
dec
cs
dec
mov
cmp
dec
sbb
mov
mov
or
push
idivb
in
jae
mov
push
outsl
imul
outsl
push
xchg
test
cmp
jnp
cld
or
add
jl
jle
lods
mov
xchg
out
pop
pop
or
cwtl
ret
mov
push
lock
and
inc
and
divb
int
add
push
mov
xor
in
cmpsb
shr
out
jmp
sub
jmp
testb
mov
pushf
cltd
stos
sahf
popl
cmp
jg
outsb
jg
hlt
out
xchg
jae
adcl
pop
fildl
iret
or
mulb
fs
pop
lahf
dec
sbb
ret
or
insb
fcomps
push
outsl
les
jle
test
sti
sub
cmc
pop
and
add
rorb
dec
pop
loop
iret
incb
shl
pushf
pop
sub
dec
sarb
iret
insb
dec
cmp
jge
pop
adc
mov
in
dec
enter
fidivl
aam
incb
pop
xchg
insb
out
sbb
inc
jl
addr16
push
adc
pop
je
jmp
jns
lret
add
and
jmp
mov
add
push
sahf
xchg
ffree
push
jae
dec
pop
push
ds
xchg
pop
jnp
loop
cs
sbb
xlat
jg
xor
negl
pop
sub
jle
mov
and
mov
mov
mov
mov
mov
mov
adc
cmp
fs
inc
movsl
xchg
push
movsb
lret
jne
mov
lcall
cli
cvtps2pd
xchg
je
pusha
jno
out
xchg
clc
xlat
out
ljmp
pop
movsb
nop
mov
out
add
add
popf
inc
add
out
mov
xchg
or
cs
sub
or
and
cmc
test
stc
pop
or
fidivrs
inc
lods
pop
ds
push
ffreep
sbb
mov
jmp
rorl
add
mov
in
pop
jp
scas
mov
loopne
mov
push
lret
out
repz
divb
movsb
in
jge
add
lret
mov
mov
push
mov
and
cmp
pop
and
inc
sub
andl
add
pusha
add
cmp
mov
out
outsl
shlb
roll
sti
fcomps
mov
add
pop
data16
je
push
inc
mov
sahf
mov
iret
leave
jmp
push
data16
lods
repz
pop
cld
or
xchg
xchg
push
xlat
push
out
or
in
mov
push
js
and
xor
bnd
push
aaa
std
pop
push
pop
sti
add
into
or
fistpll
jp
xchg
fwait
sub
pop
test
lods
sbb
push
and
shlb
imul
mov
add
mov
mov
shr
lods
faddp
jl
shrb
mov
mov
lret
fcomi
inc
fldcw
call
adc
mov
test
scas
or
ds
stos
dec
ficoml
adc
mov
sub
ds
push
xchg
adc
pop
scas
pop
rcr
or
repz
cmp
cmpsb
rolb
sahf
fidivrl
loop
rorb
cmp
xchg
daa
mov
shll
cmp
jb
test
bound
repz
xorb
lea
data16
fs
js
lret
jmp
loop
adc
in
aaa
and
fisubs
hlt
imul
push
push
sub
fists
hlt
xor
mov
lds
ret
imul
je
movsl
and
iret
cltd
push
fsubrs
out
mov
nop
push
sbb
arpl
xchg
jecxz
stc
stos
add
paddsb
jbe
inc
push
ja
push
js
loop
jmp
popf
push
loop
cmp
mov
sbb
sub
dec
inc
jno
in
mov
fwait
aas
sub
mov
fucomip
fst
or
fwait
adcb
xchg
jge
pop
adc
loop
popa
rol
cmp
leave
fnstenv
push
popf
icebp
jp
adc
mov
lcall
sbb
xor
jg
ljmp
in
movsl
mov
lahf
push
jl
in
push
lds
xchg
push
and
mov
insl
push
xlat
lods
cmp
call
inc
leave
enter
test
mov
ljmp
mov
and
fldcw
dec
test
and
fwait
push
sbb
pop
outsb
push
mov
sub
xchg
int3
in
out
add
xor
xchg
jge
rcrl
fstl
cmp
pop
in
lahf
jg
shll
loope
popa
jg
mov
mov
test
and
adc
out
mov
mov
pop
scas
and
rcll
je
fcompl
mov
movsb
push
aam
xchg
subb
adc
insl
mov
imul
xor
jo
xlat
gs
fnstenv
push
xlat
scas
cmp
mov
fs
aam
aaa
mov
sub
sbb
cmpsl
stos
push
lret
xchg
stc
cmpsl
mov
jnp
jne
cmp
push
popa
sub
inc
cmp
xor
cmp
fwait
adc
cmp
por
sub
xchg
insl
mov
push
pop
fwait
add
arpl
or
push
cmp
mov
mov
sbb
jo
fcoml
inc
cmp
and
clc
fcomps
test
jg
jle
pop
aaa
and
sub
sub
add
add
call
icebp
pop
adc
adc
and
mov
stos
inc
mov
sbb
mov
sbb
dec
cmpsl
addb
insb
in
dec
add
test
ja
ja
sub
jle
and
scas
pusha
cmp
mov
gs
aam
imul
inc
and
dec
and
repz
xchg
pop
sub
aad
les
mov
push
mov
sub
dec
dec
hlt
mov
add
fsts
xchg
sbb
sti
mov
inc
or
es
mov
call
dec
aad
xchg
clc
and
dec
pop
pushf
add
jne
jle
or
push
jae
addl
sbb
dec
jae
or
lret
popf
lret
xchg
pop
cmp
pop
arpl
dec
inc
testl
mov
lret
fnstenv
xchg
xchg
icebp
mov
or
adc
add
xor
leave
xchg
jmp
jne
cmp
dec
insb
mov
mov
insb
push
shlb
inc
test
dec
bound
mov
test
sbb
movsl
pop
push
clc
repz
fnstcw
ficoml
cld
push
xchg
mov
adc
sbb
ret
in
cmpl
fsubrs
mov
push
sbb
sub
sbb
in
pop
xor
jl
dec
scas
out
and
lods
or
jno
sarl
inc
xchg
in
push
and
sub
push
cmpsl
dec
push
test
mov
loop
idivl
or
lods
add
lcall
lods
daa
mov
gs
xlat
mov
push
cmp
decl
fmull
mov
mov
pop
sbb
mov
out
clc
loope
stos
add
sub
aad
dec
xchg
sbb
xchg
add
add
es
and
sub
add
jg
mov
cs
cmp
or
mov
jecxz
fstpl
lcall
sbb
pop
jne
sbb
cli
std
add
sbb
jns
mov
movsb
shr
cld
dec
insb
cli
lds
xchg
sbb
into
in
outsl
xchg
lock
and
lret
jo
xchg
xchg
repz
mov
jmp
subb
xor
aad
addr16
test
lret
sbb
adc
addr16
stc
mov
sub
push
mov
add
mov
fcomip
cmpsb
inc
mov
mov
mov
or
add
xchg
adc
pop
out
test
inc
sub
out
test
fwait
adc
or
pop
jne
add
sahf
xor
pop
call
popa
adc
jmp
xchg
fwait
inc
mov
sbb
mov
movsl
push
aam
cmp
xchg
and
dec
repz
xor
fldl
out
aas
and
mov
out
jmp
xchg
mov
sub
mov
les
add
insl
sub
and
xchg
adc
push
push
pushf
ret
and
mov
scas
mov
cli
clc
and
mov
lea
mov
arpl
mov
sbb
sbb
adc
jmp
jle
inc
stc
sub
push
jae
cwtl
adc
jp
bound
xchg
xchg
mov
ljmp
sub
sbb
and
inc
test
and
testl
mov
clc
je
ja
sub
mov
xlat
and
pushf
shlb
and
jne
mov
dec
jo
add
fsubl
lods
popa
test
sbb
cwtl
pop
leave
fildl
xchg
das
orl
xor
add
xchg
movsb
popa
pusha
pop
push
dec
or
mov
dec
inc
push
dec
shl
inc
adc
sub
add
mov
outsl
inc
imul
adc
pop
jb
push
daa
sub
lods
call
and
xor
cmp
and
mov
push
cmp
xchg
movsl
sbb
cmpsb
push
js
outsl
adc
xchg
jmp
fimull
dec
daa
add
out
rcrb
jle
cli
mov
push
in
sahf
cmp
lock
xchg
mov
arpl
inc
ljmp
in
lea
loop
int3
adc
fisttpll
into
test
pusha
nop
sahf
loopne
jae
in
div
sub
shlb
icebp
push
push
test
aas
jle
fcompl
pop
int
incl
or
out
jge
sub
push
pop
leave
xor
dec
das
jmp
xchg
pop
push
mov
push
jmp
pop
lret
ss
insl
leave
jg
jecxz
shll
icebp
ret
clc
or
call
sub
jno
xchg
shrb
dec
ljmp
pop
pop
cs
test
fneni(8087
std
add
test
rol
xor
inc
lret
push
out
mov
xchg
lods
sbb
mov
sbb
mov
test
mov
sub
arpl
mov
xchg
out
scas
sahf
jae
jb
pop
mov
das
in
in
rcr
jo
shl
or
xchg
movsb
adc
add
test
mov
subl
and
cld
and
mov
iret
xchg
mov
push
ljmp
xchg
pop
out
xchg
mov
jmp
push
mov
pop
pop
shrl
and
mov
dec
icebp
pop
data16
fwait
sti
sub
push
int
addr16
or
adc
int
and
cwtl
mov
adc
mov
lahf
cmpsb
sbb
lock
mov
push
shll
stc
jbe
push
cmpsl
or
push
cmc
sbb
ret
insl
mov
dec
arpl
mov
inc
out
je
pop
ret
push
xchg
jge
sbb
cmp
cmpsb
jns
cwtl
stos
cmpsb
inc
mov
mov
inc
sub
ret
imul
or
mov
cs
js
mov
jbe
add
inc
push
xchg
mov
cmp
movsb
aam
and
and
pop
and
adc
mov
shrb
stc
pop
arpl
mov
les
xchg
xchg
roll
jnp
add
xor
movsb
loop
movsb
loop
mov
or
jl
sub
xchg
scas
xor
fyl2xp1
sbb
xlat
xor
je
mov
xor
push
xchg
int
scas
in
call
frstor
xor
sub
das
add
iret
adc
inc
mov
xchg
add
jb
xchg
push
cmp
add
jb
jmp
mov
fs
cld
push
stos
insl
les
add
cwtl
or
lcall
mov
mov
popa
dec
dec
cmp
fmull
adc
xchg
push
sub
push
movsb
xor
sub
nop
test
xchg
out
enter
xor
add
dec
dec
mov
and
mov
sub
fwait
sub
xchg
xchg
mov
lods
push
and
dec
xor
outsb
insl
shrl
push
ljmp
xor
sahf
cmp
cmp
cmp
sub
test
and
inc
cmc
push
jecxz
xor
push
xchg
loope
xor
pop
add
dec
xchg
lods
cmpsb
add
cmpl
xlat
sbb
xchg
imul
sub
aas
fisubrs
mov
push
arpl
mov
xor
pop
sub
push
js
mov
jmp
out
lds
sbb
xchg
out
dec
jb
nop
in
adc
aam
adc
negb
imull
and
jnp
push
scas
in
divl
pop
mov
aaa
xchg
push
mov
stc
repz
stos
push
sub
rolb
lods
push
push
lret
add
jns
mov
icebp
nop
sbb
mov
out
add
stos
xchg
or
mov
pop
sub
or
pop
cli
or
push
push
filds
jmp
std
push
add
dec
imul
pop
pusha
aaa
sbbl
mov
cli
add
nop
mov
mov
hlt
mov
inc
gs
mov
mov
dec
lahf
mov
xchg
outsl
test
movsl
sbb
pop
mov
sub
add
jge
mov
add
outsl
pop
aam
mov
cmp
and
lock
arpl
aaa
and
lds
mov
push
fcmovnbe
outsb
fmuls
add
dec
sbb
pop
into
pop
out
mov
dec
int
push
lea
or
push
out
inc
int3
jae
xor
cltd
cltd
mov
mov
and
xchg
xorb
outsb
test
mov
addr16
std
aas
je
fisttps
and
adc
adc
fistps
prefetcht2
cli
scas
popa
add
mov
and
repz
popf
inc
pop
inc
inc
and
addr16
insl
subl
cwtl
scas
stos
test
push
xlat
mov
mov
das
int
nop
xor
mov
add
sti
inc
mov
inc
push
jo
xchg
sub
xchg
sub
lcall
stc
bound
adc
add
push
sub
fsubs
xor
orb
jns
fucomip
sbb
fdivrp
jnp
mov
repnz
std
or
dec
sti
arpl
fdivrl
test
or
lds
jnp
push
sbb
xchg
test
mov
faddp
push
ret
rcll
jcxz
inc
shrb
xchg
mov
jl
jmp
pop
iret
or
mov
roll
pop
cmc
or
into
adc
into
adc
shlb
in
pop
push
montmul
cmpsb
xchg
push
xchg
addb
jp
add
jno
movsl
andb
out
and
bswap
in
test
jns
gs
jmp
out
sbbb
ret
repz
cmp
cmp
arpl
mov
nop
sbb
ret
es
inc
out
fimuls
out
mov
xor
bound
push
xor
dec
rorb
outsl
cmp
push
nop
loop
mov
or
adc
add
sbb
xchg
icebp
insb
dec
jp
icebp
insb
mov
or
hlt
outsb
mov
inc
ja
outsl
or
jb
test
fs
shll
xor
jnp
mov
push
test
mov
fstpt
cltd
insl
mov
lock
mov
in
mov
jo
cltd
mov
dec
adc
sub
mov
lret
push
jae
outsb
fildll
adc
and
arpl
scas
push
adc
push
or
mov
mov
lds
test
dec
imul
fdivs
mov
mov
pushf
movsl
pop
add
notb
push
pop
adc
faddl
xchg
clc
sti
dec
sub
les
push
fisttpl
add
or
mov
inc
lcall
popa
jnp
dec
pop
inc
xor
xorw
daa
icebp
fsub
out
cmp
mov
dec
mov
adc
or
shrb
xchg
push
loope
lock
clc
add
in
jno
push
pushf
push
cs
cld
add
cli
leave
pop
repnz
mov
mov
je
dec
xor
jp
std
and
into
inc
dec
mov
adc
das
mov
movsb
ss
pop
jle
enter
js
jb
cmp
push
stc
adc
orb
add
mov
imulb
mov
mov
outsl
and
jne
fcompl
inc
push
dec
jo
push
fstps
jnp
push
xor
lods
shlb
jecxz
adc
ds
add
insb
imul
dec
add
jns
adc
lods
jno
inc
adc
test
mul
jle
shll
ja
in
je
mov
adc
out
stos
inc
in
inc
xchg
xlat
and
cwtl
mov
mov
shll
lret
push
or
mov
push
pop
call
mov
cmp
sub
lcall
sub
cmc
js
sahf
dec
sahf
or
repz
cli
call
rcrl
or
out
imul
add
xor
loopne
xchg
nop
xor
xor
mov
lret
iret
xlat
xchg
arpl
ret
lds
fs
int
inc
jbe
ljmp
popa
outsl
sbb
xchg
jmp
xor
sbb
add
inc
jmp
pop
push
rorl
in
xorb
scas
jae
xchg
aad
roll
cmp
test
bound
lods
push
nop
add
imul
jecxz
scas
enter
push
lcall
xor
movsb
add
inc
fisttpl
jbe
out
pop
lcall
filds
adc
and
arpl
pop
mov
mov
repnz
roll
outsl
jae
adc
mov
pop
jno
sub
mov
jl
push
xchg
mov
cmpsl
sbb
mov
std
push
idivb
lods
inc
mov
rolb
movl
dec
and
inc
call
and
mov
xchg
xchg
push
add
adc
and
loope
jo
daa
mov
mov
pushf
add
addr16
test
pop
testl
jg
mov
iret
push
pop
mov
fists
clc
xor
fadds
cmpl
outsl
cli
push
cs
icebp
push
test
pop
push
pop
push
mov
jecxz
rcll
or
jne
inc
mov
imul
sub
pop
std
xor
sub
pop
in
cmp
jecxz
sub
xchg
jle
mov
push
sub
pushf
fcom
push
stos
push
xchg
lock
in
lret
mov
push
dec
push
or
ret
pop
and
add
xchg
pop
clc
inc
ret
pop
mov
or
lock
mov
out
int
nop
ds
cmp
stos
icebp
ja
daa
add
inc
add
xor
gs
cltd
shlb
loope
fcompl
pop
pop
aas
dec
imul
mov
dec
jb
inc
inc
jle
xor
out
inc
mov
iret
scas
sbb
push
jp
jp
pop
inc
push
outsb
fisttpl
adc
jecxz
push
push
push
test
push
push
shl
loope
mov
ja
sbb
xchg
pop
xchg
mov
adc
xchg
test
ja
test
inc
andb
inc
lcall
push
stos
test
shrb
adc
mov
into
jb
jne
int3
and
sub
adc
bound
cwtl
aas
sub
xor
jl
clc
mov
pusha
mov
fwait
mov
test
mov
mov
mov
dec
xchg
int3
and
mov
in
gs
mov
popa
or
popl
or
or
ds
lret
dec
xchg
test
add
push
stos
or
imul
sbbl
js
pop
add
mov
leave
jbe
jmp
imul
inc
push
xchg
mov
dec
outsl
or
pop
adc
mov
pop
test
add
fmulp
inc
and
inc
jbe
add
push
mov
loopne
test
sahf
adcb
scas
into
jne
cwtl
adc
xor
ss
or
add
xor
nop
fcomip
shll
sub
push
rolb
das
pop
dec
insb
xchg
nop
sub
add
cmc
incl
scas
fistl
hlt
inc
mov
outsb
mov
jge
cmp
out
cmp
xor
mov
adc
adc
out
rcll
imul
out
jno
cltd
or
xchg
pop
adc
mov
popa
inc
mov
add
stos
call
pushf
push
push
push
push
jnp
fwait
sub
mov
add
call
test
cmpxchg
rcll
mov
arpl
filds
adc
stc
or
inc
loope
jp
pop
insb
dec
add
jns
jbe
mov
scas
stos
test
shr
aaa
loopne
xchg
test
ljmp
cmp
jge
push
jnp
ret
loope
jns
arpl
dec
xor
lock
and
icebp
xlat
cld
sti
ljmp
cmpsb
int
lock
jnp
adc
loope
sbbl
rcl
sbb
movsl
arpl
fbstp
fwait
jns
insl
mov
pushl
sub
mov
or
cmp
hlt
fdivrl
mov
push
mov
jmp
or
int3
mov
icebp
sbb
xor
fwait
push
repnz
adc
clc
jge
and
push
mov
dec
pushf
sbb
xchg
xchg
inc
cmp
ret
mov
and
cmp
ja
cltd
call
test
and
fwait
fs
fildll
mov
push
dec
ror
and
xor
ret
mov
sub
in
push
in
lock
imul
insl
insl
adc
jbe
mov
jp
jae
cld
jg
jmp
pop
cmp
jmp
cs
sbb
sbb
inc
das
out
or
popf
std
es
in
lahf
pop
hlt
andl
jns
fnsave
out
test
cmp
lret
insl
cmpb
cmp
ja
ja
xchg
out
cli
add
push
jno
add
xlat
lcall
xor
sub
fistl
sbb
mov
std
cmpsb
imul
sbb
push
data16
incl
dec
and
cli
add
stos
push
inc
ss
dec
mov
jbe
ljmp
rorl
nop
mov
xchg
push
shll
fsubl
inc
fs
notl
outsl
outsl
fcomip
push
pop
mov
int3
aas
fldt
xchg
inc
loope
popf
mov
jae
jle
dec
and
lret
negb
push
jne
sub
inc
repz
cmp
movb
pop
add
subb
nop
mov
adc
xchg
pop
push
dec
hlt
out
lcall
pop
push
aas
out
mov
add
std
push
dec
sub
push
push
lods
or
xor
enter
lret
push
inc
gs
jbe
popf
jne
mov
into
aad
or
mov
cmpsl
xor
addl
daa
clc
and
inc
pop
pop
in
pusha
test
mov
test
cmp
call
lods
popa
push
mov
jne
movb
bound
cld
cli
xor
ja
pop
xchg
pop
cltd
gs
xor
mov
aas
nop
lahf
mov
dec
cltd
xchg
aas
rorb
ret
addl
mov
sbb
push
and
cmp
cmp
xchg
stc
icebp
dec
insl
mov
mov
xor
add
pop
dec
mov
xor
int3
cmpsb
push
sub
mov
pusha
adc
add
pusha
gs
xchg
push
xor
sbb
out
les
fdivl
adc
xchg
iret
jb
sbb
push
sbb
xchg
xor
je
adc
popa
in
stos
test
and
lret
lods
data16
aaa
in
mov
mov
aad
pop
outsl
jmp
scas
les
jnp
dec
call
push
sub
jne
aad
lahf
push
rol
add
pushf
cwtl
nop
imulb
or
repz
fwait
mov
or
rcrb
in
push
dec
movsl
stc
xor
cwtl
addr16
pushf
movsl
sub
out
das
jg
fdiv
xchg
sahf
add
mov
int3
rclb
enter
aam
dec
push
aas
mov
out
dec
jbe
pusha
into
pop
cmpsb
daa
mov
dec
repnz
or
jmp
xchg
jmp
ret
dec
mov
loope
mov
xor
test
dec
cmp
pop
loope
xor
or
add
sbb
dec
xchg
adc
sarb
rcrb
rol
or
pushf
ficompl
je
mov
push
fcmove
adc
jp
pop
mov
mov
adc
pop
jecxz
jmp
push
mov
fidivs
imul
inc
or
cld
test
pop
xchg
mov
xchg
cmp
pop
subl
and
xchg
cltd
xchg
aas
lock
int
pop
pop
aad
xor
mov
cmpsb
mov
push
and
cmp
inc
adc
nop
pushf
lahf
xor
mov
aaa
cmpsb
aam
sbbl
mov
adc
fs
out
fistl
sub
pusha
mov
xchg
cmpsb
mov
mov
ss
mov
inc
sbbl
mov
or
jne
xchg
lahf
and
insb
sbb
bound
in
fistpll
xor
enter
sbb
mov
repz
insl
cmp
fst
shrb
fcoms
addl
ds
cmp
sbb
stc
imul
out
xchg
sub
das
mov
mov
jmp
ret
dec
mov
je
cmpl
stc
xor
in
outsl
jns
gs
shlb
pop
push
sti
addr16
mov
dec
jae
out
shlb
negl
sub
out
mov
aaa
in
adc
sbb
bound
mov
rcll
imul
cmpsb
cltd
mov
shlb
or
in
mov
cmp
mov
out
dec
repz
je
daa
imulb
push
mov
arpl
ficoml
je
mov
mov
lods
std
aam
xchg
cmc
and
or
push
fiadds
inc
cs
stc
outsl
fs
repz
lret
fistl
jnp
dec
pushf
push
cs
imul
cmp
pop
mov
jmp
fdivr
data16
and
or
fwait
cmpsl
sarl
or
lcall
lret
sbb
cli
rorl
dec
pop
nop
xlat
xchg
daa
dec
xchg
sahf
mov
sub
cltd
call
sbb
mov
fists
scas
sbb
pop
adc
and
fldl
out
jb
inc
setne
mov
inc
out
pop
sarb
cmp
add
mov
pop
fs
xlat
add
mov
pusha
jb
subl
sarb
hlt
xchg
icebp
pop
cmpl
pop
icebp
lret
lods
pop
movsl
jb
or
enter
sarb
push
xor
mov
xchg
movb
shrl
mov
test
jno
enter
mov
xchg
repnz
mov
push
ja
or
cs
cld
mov
xchg
mov
loop
adc
cld
mov
xchg
mov
aad
mov
arpl
aad
inc
push
sbb
mov
or
repz
xlat
addl
fwait
mov
mov
mov
push
xchg
cmp
ds
mov
add
pop
insl
je
dec
repz
imul
mov
ljmp
pop
testb
std
or
das
stc
out
mov
sbb
cs
mov
inc
out
loope
cmpsl
test
movsl
xor
mov
insl
out
dec
mov
pop
sub
aam
add
movsl
pop
dec
jno
imul
and
xchg
arpl
loop
add
int3
xchg
xchg
lahf
xor
test
adc
or
iret
xchg
jns
mov
test
xor
jb
inc
cld
jb
iret
jmp
cmp
lea
movsb
xchg
in
in
mov
cmp
cmc
movsb
movsb
in
movsl
add
lds
inc
pop
aam
jnp
lahf
shl
lods
cmp
pop
inc
sti
icebp
xchg
lods
clc
mov
movsb
lahf
mov
loope
addr16
jno
mov
or
inc
movsb
mov
add
nop
daa
sbb
leave
jae
scas
or
pushf
les
push
pusha
mov
movsl
push
ja
jge
xchg
stos
filds
sbb
test
cld
out
and
sub
jl
jl
mov
or
sub
push
push
fcmovne
inc
out
jno
mov
leave
std
mov
test
fmuls
inc
adc
jb
jo
aas
mov
and
pop
mov
imull
insb
ja
push
cmc
sub
mov
iret
mov
xchg
js
repnz
jns
stos
cmp
movsl
mov
mov
stos
adc
test
mov
jp
push
push
call
and
xchg
nop
mov
push
or
mov
outsb
arpl
sub
sub
pop
sub
nop
and
pop
pop
and
xlat
jecxz
xchg
jb
adc
mov
sub
push
push
sub
int3
or
ss
xor
push
mov
dec
or
adcb
rorl
pop
xlat
mov
push
add
decb
inc
xor
jae
mov
out
lret
aam
push
out
inc
cltd
inc
push
arpl
aas
adc
enter
in
mov
mov
mov
and
iret
movups
insb
in
pop
mov
mov
xchg
jmp
dec
outsl
sub
dec
mov
jb
icebp
mov
mov
cmp
imul
jp
inc
dec
dec
int3
loop
mov
push
sbb
lods
aam
mov
xor
cmp
sbb
inc
or
mov
int3
xor
mov
movsl
or
sub
push
pop
jo
sub
xor
mov
xchg
ret
out
popa
mov
mov
jecxz
arpl
shll
out
lods
daa
xchg
sbb
loop
xor
les
cli
xchg
sub
or
mov
mov
jbe
ret
push
mov
mov
and
cmc
jecxz
mov
fstpt
lock
pop
out
lcall
decb
mov
stos
pop
inc
mov
jecxz
hlt
mov
jg
cmp
jae
mov
rcrl
negl
fnstsw
imul
loopne
sarl
in
jnp
jl
fdivr
cs
mov
inc
ljmp
fnstenv
dec
pusha
mov
fstl
inc
frstor
pop
call
cmc
movsb
clc
add
ljmp
push
jge
jnp
aad
inc
dec
out
incl
sbbl
fldenv
jae
jp
ret
pushf
das
mov
push
mov
stos
in
sbb
sub
pop
idivb
sub
hlt
call
ficoml
cmp
jb
adc
dec
push
and
cmp
push
cs
mov
test
cmpsl
leave
test
mov
or
dec
nop
xor
push
test
mov
pop
loope
dec
pop
xor
xor
inc
mov
movsb
xor
decb
stos
fsubrl
test
jnp
or
aam
pusha
popl
mov
repnz
testb
xchg
push
imul
lods
gs
xor
hlt
rcrl
pop
add
push
shll
sahf
adc
ficoml
ljmp
pop
mov
jae
lock
mov
xlat
jo
mov
and
aam
mov
xchg
shrb
pop
repz
test
inc
scas
add
mov
insl
fimull
mov
mov
cmpsl
push
add
mov
add
mov
pop
add
imul
push
ljmp
dec
inc
and
add
enter
add
sub
ja
test
xchg
or
mov
imul
adc
jno
clc
pop
aaa
das
adc
mov
sub
jne
mov
out
cmp
pop
jg
sub
inc
gs
lcall
cmp
sar
xchg
push
inc
dec
dec
daa
mov
vunpcklps
sbb
cmp
rcrl
sbb
xchg
cmc
stc
shrl
sub
ljmp
cmp
mov
gs
adc
adc
push
jl
fsubrs
sub
clc
call
loope
fsubl
movsb
dec
mov
les
jmp
xchg
push
inc
gs
fnsave
aad
daa
mov
bnd
push
jbe
jo
xchg
or
fwait
dec
stos
scas
sub
pop
mov
jl
shrb
pop
pop
cmp
pop
das
popa
adc
cs
lcall
popa
outsl
cli
push
ja
sub
faddl
pop
rcll
or
lea
jmp
clc
icebp
sbb
cmpb
popa
repnz
mov
adc
pop
pop
cli
cs
add
stos
pop
aad
pop
ss
mov
fimuls
cs
das
mov
test
push
mov
dec
cmp
xor
movsl
call
mov
pop
es
shll
in
xchg
loope
mov
cmp
pop
mov
or
push
xchg
lcall
addr16
dec
pop
leave
shrb
ds
imul
mov
jnp
cmc
lods
inc
jnp
ret
das
stos
mov
mov
xor
std
push
stos
outsl
jp
mov
cs
enter
inc
or
aas
mov
notb
mov
cmp
shrb
enter
xchg
lret
roll
insl
or
mov
xor
ljmp
pop
lock
inc
std
jle
jae
push
pop
mov
loopne
pusha
jg
dec
rolb
ret
rorb
pop
enter
push
repnz
adc
cmpsl
aam
mov
insl
mov
cmpl
ret
iret
lret
cmp
jo
pushfw
or
mov
inc
aas
push
adc
mov
idivb
mov
push
sub
loopne
cwtl
cli
sub
outsl
fwait
pop
test
mov
pop
rcll
lcall
dec
mov
mov
in
movb
mov
xchg
sub
aad
cmp
xor
mov
inc
aam
mov
dec
add
cmp
repnz
test
shll
sub
cmp
jp
adc
dec
sbb
mov
add
insb
out
sub
loopne
mov
mov
cltd
insb
outsb
push
mov
and
arpl
mov
add
mov
cltd
outsb
in
mov
popf
sub
cmpsb
inc
push
insb
pop
les
stc
stos
cmpsb
mov
popa
xchg
jnp
or
dec
in
lea
push
xor
lods
ja
daa
int
pop
xor
add
xchg
nop
outsl
lock
mov
cmpb
aas
add
dec
negb
dec
mov
sub
mov
aam
out
jp
xchg
dec
push
mov
mov
cmp
add
xchg
inc
and
add
sti
push
mov
pop
mov
das
dec
add
inc
add
xchg
and
movb
lahf
stos
push
mov
push
jge
xchg
aad
jecxz
clc
push
outsb
ds
mov
mov
out
or
mov
cmp
cmp
jecxz
cmp
out
mov
and
cmpsb
cmp
icebp
add
out
aad
fsubl
or
jp
adcl
aad
mov
cwtl
lods
int
xor
or
mov
fdivl
add
cmpsb
outsb
hlt
outsl
pusha
sub
mov
inc
cmp
dec
mov
or
xchg
pusha
pop
or
aam
jne
adc
push
jno
out
jno
jecxz
dec
or
cmpl
push
out
mov
or
test
sbb
pop
nop
aaa
dec
cmpsl
push
push
test
lret
jp
fstpl
mov
dec
lock
jb
jmp
xchg
mov
popf
dec
mov
mov
xlat
mov
jae
adc
inc
dec
pop
jbe
sub
sti
test
ds
xchg
shrb
arpl
or
cmpl
outsl
jmp
test
rorl
pop
sub
mov
in
or
icebp
adc
je
insl
jbe
inc
faddl
xor
gs
xchg
shll
dec
out
mov
mov
jb
int
pop
out
dec
pop
add
adc
popf
sub
push
lret
ret
ljmp
ret
jmp
cwtl
mov
dec
mov
push
push
bound
jp
aas
mov
push
mov
pop
dec
dec
iret
pop
xor
in
jecxz
out
xchg
xor
stc
stos
pop
lods
fistps
mov
clc
cmp
cmovo
cmp
test
sbb
xchg
test
pushf
bound
fisubs
and
in
rcrl
int3
daa
cmp
adc
jo
leave
test
out
push
fwait
cltd
inc
jo
push
stc
bound
inc
fisubs
loop
cmp
cwtl
mov
lret
daa
incb
sbb
xchg
inc
xchg
pop
shrb
add
xor
add
pop
and
pushf
mov
push
lods
out
mov
aaa
scas
jge
dec
ds
into
pop
mov
data16
xchg
pop
pop
mov
cltd
int
aad
pop
nop
adc
dec
outsb
in
mov
mov
mov
cwtl
lahf
inc
jb
test
mov
push
imull
mov
add
mov
imul
imul
add
orb
lret
jg
inc
sbb
dec
and
inc
inc
mov
fsubl
stc
mov
xchg
inc
sub
imul
out
adc
push
ljmp
push
idivl
ja
mov
mov
ret
sub
jbe
xchg
jecxz
jae
add
mov
xchg
pushf
lahf
xor
xlat
outsb
xchg
js
xchg
and
ret
sti
inc
inc
cmp
mov
negb
sub
scas
jmp
divl
pop
sbb
push
rcrl
cmp
cmpl
test
sub
mov
push
mov
push
sub
cli
or
fs
or
lahf
mov
arpl
inc
dec
jns
pop
popa
out
stc
or
pop
rcr
incb
fcomip
repz
arpl
test
sbb
jmp
cs
arpl
jno
sbb
shll
test
ja
inc
cmp
jne
shll
mov
fcoms
mov
les
pushl
test
pop
jae
fwait
testb
and
push
test
jecxz
push
dec
testl
aas
adc
xchg
roll
jl
loope
pop
in
out
lods
sbb
cmp
mov
int3
sbb
add
sub
popa
and
sub
cltd
add
jecxz
push
fsubrl
out
mov
or
mov
lret
rcrl
xchg
mov
mov
sti
and
fsubrs
fistpl
sub
int3
leave
xchg
icebp
jae
mov
inc
xor
ret
je
push
cmp
in
test
mov
repz
add
push
inc
flds
out
in
mov
fs
fwait
jb
inc
popa
inc
push
stos
sbb
pop
jnp
imul
lea
sti
iret
jo
mov
rorl
stos
sub
jns
inc
test
aas
mov
in
add
rclb
dec
sbb
ja
add
inc
jnp
sbb
lds
xlat
jmp
test
mov
int3
push
mov
push
ljmp
lock
movsb
js
mov
mov
sti
icebp
inc
insb
iret
mov
mov
jmp
inc
test
lahf
call
lahf
fisttpl
test
fxtract
imul
pop
sbb
ret
xchg
or
in
scas
aaa
adc
insb
adc
pop
cmp
icebp
out
push
das
mov
xor
aad
pushf
int3
test
xchg
and
jb
jne
sbb
addr16
imul
jo
push
shrb
icebp
fadds
dec
dec
xchg
or
xor
mov
mov
cs
lds
mov
xlat
sti
mov
inc
lds
xchg
jecxz
dec
ja
xchg
push
out
enter
outsl
repnz
negb
sub
xor
xchg
pop
out
jmp
xchg
fildl
nop
xor
call
dec
pop
inc
and
pop
cmpsb
jno
movsl
aaa
popf
aas
rol
or
dec
push
pop
lea
cmc
shll
pop
mov
and
jle
inc
aad
cmp
xchg
rorl
lods
int3
xchg
xor
push
sahf
sub
mov
leave
fists
pop
test
pusha
inc
sti
cmp
divl
xor
inc
push
pop
push
add
xor
arpl
sarl
lods
and
sub
shrb
inc
dec
add
arpl
test
mov
mov
pop
pop
int3
mov
push
fdivl
dec
sbb
push
sub
pusha
iret
add
push
adc
xor
lods
pop
stos
mov
paddw
dec
sub
jbe
push
std
stos
in
sbb
stc
adc
outsl
stos
xchg
adc
lret
mov
jne
xchg
sbb
into
js
push
loop
lods
xor
dec
xchg
mov
mov
in
sub
out
imul
lret
mov
jo
pop
hlt
into
iret
push
ljmp
mov
mov
xchg
sahf
movsl
add
mov
orb
push
lcall
orl
repnz
lea
loope
dec
pop
push
imul
mov
outsb
lcall
mov
xchg
ds
cwtl
or
inc
push
aaa
adc
xor
outsl
cmp
inc
mov
sbb
hlt
push
test
sub
inc
bound
out
sbb
scas
xchg
pop
faddp
inc
ljmp
mov
sub
inc
xor
and
adc
sbb
mov
scas
scas
rorb
lods
and
inc
movsb
mov
xchg
out
lods
sbb
stc
stc
fst
sub
jae
rcrb
push
sbb
sub
lods
dec
add
adc
mov
push
outsb
push
lret
xor
jg
test
mov
in
cmp
fucomp
repnz
sbb
orb
add
repnz
ss
leave
sub
addr16
sbb
in
gs
cld
jg
pop
mov
lea
imul
imul
das
ljmp
adc
repnz
std
push
shr
pop
ret
loop
ds
xchg
or
clc
addr16
imul
push
pop
leave
mov
dec
insl
inc
nop
shlb
pop
push
stos
inc
lret
mov
mov
dec
test
sub
push
ret
leave
inc
xchg
sub
mulb
lds
lods
xchg
bound
orl
sti
push
adc
imul
fdivs
and
push
pop
mov
in
dec
push
leave
lcall
adc
cmp
fidivrl
jb
icebp
cmpsb
and
push
jge
inc
mov
cmp
jns
in
add
dec
push
insb
cmp
das
xor
in
test
add
xchg
fsubr
nop
mov
add
clc
out
in
fnstsw
repz
fsincos
dec
sbb
push
jge
add
push
pop
adc
mov
movsl
pushf
push
aas
fnsave
inc
pop
and
rorl
sbbl
test
push
pusha
data16
mull
imul
icebp
add
xchg
mov
loop
cld
mov
sub
out
jnp
mov
daa
fisttpll
test
xchg
add
mov
and
xchg
and
ss
loop
sbbb
hlt
pop
add
mov
sbbb
mov
flds
andb
sbb
xchg
cmp
push
mov
lock
imul
mov
push
popf
push
loope
jge
mov
inc
test
xor
data16
loopne
xchg
ret
cmpl
add
pop
add
jp
xor
aas
inc
popf
pop
out
scas
mov
cmp
leave
pop
lods
inc
out
or
int
mov
jno
cmp
mov
mov
stos
push
pushf
mov
sbb
data16
cmpsb
imul
mov
adc
jns
ret
in
cmp
sub
es
arpl
adcl
jns
fstl
pop
fnstcw
add
int3
xlat
ret
cwtl
adc
hlt
ljmp
and
jne
das
mov
add
cld
adc
sbb
repz
imul
dec
adc
sbb
fiadds
aad
push
mov
ss
cs
mov
mov
fbld
fidivrl
cmp
inc
out
ljmp
add
and
out
inc
inc
repz
icebp
mov
cmp
orb
push
mov
mov
fwait
ljmp
call
fwait
mov
jg
shrl
push
xor
pop
fs
push
loopne
gs
dec
lcall
inc
cmp
push
dec
cs
or
cmc
mov
mov
mov
add
dec
sarl
xchg
jmp
push
dec
leave
insb
test
mov
add
or
out
ficoms
mov
mov
sbb
not
or
cmp
and
and
or
cmp
shlb
stos
shll
les
sub
mov
sbbl
fists
movsb
push
xor
dec
push
xor
pop
arpl
loope
cmp
rcrb
data16
push
pop
std
or
xchg
cwtl
cmc
in
pushf
sbb
and
lcall
add
fists
add
mov
out
test
lock
bound
data16
out
lock
add
sub
jns
inc
subl
addr16
insl
push
testb
pop
dec
mov
lock
mov
sbb
fimull
mull
adc
mov
lret
lret
mov
mov
or
add
icebp
mov
or
mov
pop
testb
and
scas
fisttps
daa
pushf
sub
in
jmp
addl
cmp
mov
inc
push
add
int
stc
in
fidivrs
push
mov
outsb
add
orb
std
ljmp
dec
add
popf
int3
inc
popa
pop
ljmp
ret
mov
xor
dec
ja
inc
sahf
or
jbe
inc
add
sub
or
jns
pushf
sbb
imul
shll
fldt
loope
lock
jmp
or
les
cltd
gs
jo
jne
outsl
xchg
testb
sbb
ja
fwait
or
imul
jo
xchg
je
add
iret
mov
shll
lds
adc
add
mov
cmp
mov
cwtl
cmpsb
stos
ror
sub
cwtl
and
lret
lret
daa
inc
push
adc
arpl
sbb
jns
subl
rcl
and
aaa
arpl
mov
or
sarl
xchg
fxtract
inc
pusha
cmc
jmp
mov
cmp
sub
jne
imul
pop
xchg
cmp
dec
sbb
push
push
sbb
mov
fiadds
dec
imul
sahf
push
mov
push
repnz
sub
jle
jno
sub
sub
xchg
test
movsl
cmpsl
jnp
push
dec
jo
test
sbbl
cs
sub
enter
inc
sub
repnz
mov
add
inc
addl
out
mov
mov
aad
outsl
pop
fcoml
mov
cs
jnp
loope
dec
xchg
data16
add
and
out
hlt
mov
cmpsl
fnstsw
cld
push
dec
jns
fwait
repnz
mov
and
repnz
dec
ret
pop
imul
and
stos
enter
js
dec
addr16
enter
notl
mov
mov
mov
sub
mov
fldt
fldl2t
dec
xchg
mov
dec
pop
jmp
out
mov
cmpsl
xchg
jmp
fwait
jne
jmp
shrb
inc
lahf
sbb
data16
gs
ja
gs
mov
pop
xchg
xchg
sub
aad
imul
js
mov
dec
sub
roll
mov
xor
inc
push
xchg
icebp
outsb
cmp
fmull
inc
mov
sbb
pushf
je
xchg
movsb
mov
push
push
mov
jo
movsl
or
inc
mov
push
cmp
sub
notl
ret
out
stos
adc
in
pop
incl
mov
stos
ds
lods
shlb
push
aad
decb
fisubl
gs
push
push
les
or
fildl
cmp
sar
stc
add
std
repz
add
pop
xor
insl
hlt
fsub
pop
fstps
mov
popf
xor
add
out
jmp
loop
imul
xchg
lock
orl
and
add
pop
xchg
leave
and
adcl
in
clc
jns
insb
jbe
imul
shll
enter
push
dec
cli
out
in
xor
popf
stc
inc
lahf
pop
loopne
aam
inc
popf
jbe
in
sub
push
pop
inc
sbb
pop
dec
push
clc
cld
lds
lock
mov
adc
jbe
xor
scas
stos
cltd
gs
int
imul
or
mov
adc
ljmp
jmp
inc
xor
pop
inc
mov
cs
jb
pop
and
pop
test
stos
insb
push
movsb
jg
pop
cwtl
aas
std
push
je
pusha
clc
stos
insl
mov
adc
xchg
mov
jle
cltd
shll
push
push
inc
mov
loope
add
inc
or
mov
mov
mov
xchg
je
inc
in
cld
sub
icebp
lods
ror
dec
int3
in
test
dec
inc
jo
loopne
mov
icebp
mov
adc
nop
mov
nop
mov
xor
sbb
adc
ljmp
xchg
out
les
dec
aad
adcl
rcrl
sahf
dec
xchg
fbld
call
inc
add
pop
loopne
pop
aaa
and
popa
pop
test
insl
push
inc
arpl
adc
xlat
mov
push
lods
cmp
mov
lock
jecxz
cwtl
and
rcrb
imul
dec
pop
insb
sbb
add
sub
fldt
jnp
mov
push
cmp
pop
and
fs
das
cli
pop
pusha
mov
fisttpl
mov
add
add
out
aaa
dec
repnz
in
data16
pop
sahf
pop
pop
jb
into
shlb
in
add
mov
mov
popa
shrb
pop
das
adc
jb
sbb
sahf
in
dec
jo
je
into
aaa
pop
sub
push
hlt
outsl
push
xor
add
dec
push
faddl
adc
or
pop
dec
mov
cmc
inc
daa
sub
xor
sub
mov
ljmp
xchg
jnp
jg
jmp
or
lock
pop
jmp
pop
xor
ret
ficoml
test
jne
aad
repnz
mov
outsb
lret
mov
mov
dec
sbb
gs
popa
sub
shlb
inc
or
bound
loopne
push
testb
inc
xor
xlat
inc
movsb
data16
cmp
rorl
jnp
movsl
leave
mov
xor
jae
mov
sbb
out
mov
aaa
cli
dec
pop
inc
fsub
icebp
xor
push
mov
jns
sbb
and
leave
test
lcall
daa
dec
mov
mov
sub
lods
xchg
nop
inc
push
push
inc
jne
aam
mov
sub
outsb
jp
xor
addl
dec
stos
es
mov
mov
sub
lods
aam
push
jne
idivb
cmp
xchg
pushf
dec
fadds
xor
lds
jl
sub
scas
jno
mov
and
ret
int3
roll
mov
add
pusha
add
pushf
or
cmp
mov
das
or
mov
cmp
clc
test
out
fadd
je
xchg
repz
hlt
call
icebp
cmc
fs
xor
mov
push
clc
mov
mov
cwtl
mov
scas
fisttpl
test
push
es
mov
loope
stos
jl
in
fcmovnbe
leave
dec
ds
arpl
lock
popf
fstpl
dec
hlt
push
jne
lahf
mov
lock
jae
pop
xchg
es
push
mov
es
pop
pop
out
add
xchg
or
sar
inc
jle
pop
and
xchg
cmp
adc
pop
mov
mov
mov
shll
test
notb
mov
xor
fadds
push
lret
cltd
test
add
movsl
sti
push
mov
ret
mov
aad
mov
sub
pop
inc
in
xchg
pop
jle
inc
cwtl
xchg
js
adc
testl
cmpsl
mov
xor
jge
repnz
mov
jecxz
add
xor
cmp
jge
jno
dec
lods
sub
jge
xchg
ret
pop
arpl
popa
or
fsubrs
cmp
enter
callw
aaa
bound
pop
or
inc
push
pop
xor
stc
pop
pop
pop
add
inc
jns
je
lahf
jno
pop
loope
inc
push
lods
fimull
jb
mov
inc
out
cmpsb
cmp
stos
mov
and
out
mov
imul
mov
pushf
mov
jle
out
out
mov
mov
stc
aas
daa
lods
lahf
lods
push
jle
ret
add
mov
and
inc
icebp
addr16
mov
inc
daa
sti
cmp
bnd
inc
stos
fmul
lods
mov
ret
xor
iret
add
rcrb
ret
orb
rcr
inc
fmull
or
and
lcall
sbbb
cmc
mov
sub
pop
adc
out
add
sarb
aam
movsb
add
repnz
sub
and
xor
aaa
mov
cmp
mov
scas
mov
xor
ret
push
add
mov
ss
mov
mov
out
jg
popf
xchg
xchg
loopne
xchg
icebp
bound
pop
pop
outsw
and
xor
stos
stos
mov
xor
xchg
ret
inc
aas
rcll
jp
jmp
add
inc
mov
repnz
inc
xchg
fldt
fnsave
and
xchg
loop
cmp
es
shlb
orl
ja
pushf
repnz
notl
mov
cli
sub
cmc
aam
mov
and
dec
add
cmpsl
mov
jge
add
mov
add
in
ljmp
sbb
push
jno
xor
xor
mov
rcl
jae
mov
pop
xor
jge
lahf
negb
add
subl
xor
jae
clc
test
adc
cmp
ror
inc
mov
lahf
mov
mov
lret
in
xlat
mov
adc
mov
out
js
xchg
mov
cltd
scas
inc
mov
pop
sbb
ljmp
pusha
test
dec
xor
aas
xchg
or
mov
int
pusha
insb
cmp
dec
fadd
mov
sub
sub
call
jns
je
lahf
imul
std
cwtl
fsubs
gs
push
shrb
pop
outsb
dec
data16
or
mov
cmpsl
jns
cmc
sub
cmp
xchg
jle
sbb
xchg
xchg
mov
push
xor
ljmp
les
loopne
xchg
and
lcall
sbb
pop
into
pop
in
adc
mov
icebp
pushf
and
into
xchg
roll
jb
push
pop
divb
es
test
lahf
dec
lret
xchg
sub
nop
fiaddl
and
xchg
js
jne
and
and
pop
xlat
push
xor
enter
lea
dec
in
clc
divl
jns
loopne
jmp
pushf
mov
gs
mov
mov
out
fwait
cmp
fimull
sub
dec
lods
mov
inc
bound
adc
push
add
lods
test
sub
scas
leave
cmp
ret
cmp
repz
mov
repnz
sbb
in
jae
or
inc
dec
inc
roll
arpl
xor
cld
shlb
mov
inc
mov
inc
repnz
mov
call
faddp
cmp
int3
arpl
shr
dec
lods
push
out
roll
dec
inc
sbb
lcall
hlt
fldcw
arpl
adc
lods
and
ret
push
decl
adc
cmp
and
imul
adc
pop
sarl
sbb
rcrb
push
push
movsl
xor
mov
and
pop
inc
sbb
push
inc
cli
push
xor
std
mov
in
push
cltd
es
lods
pop
push
jmp
add
jns
cmc
pop
add
jmp
nop
xor
les
and
outsl
pop
clc
movsb
xor
and
sub
mov
aas
ljmp
ficomps
xchg
call
add
xor
stos
mov
cld
aaa
mov
mov
movsb
dec
xchg
mov
jmp
js
mov
push
test
in
movsb
js
dec
xchg
mov
loop
add
fdivrl
dec
jnp
pop
ds
repz
jp
inc
and
xlat
mov
pop
xchg
pop
ret
pop
ss
jmp
xchg
add
inc
arpl
jecxz
mov
dec
push
lcall
cmp
aas
in
aad
pop
loopne
ds
test
ds
push
push
daa
push
loop
lcall
ror
inc
sub
dec
lock
ficoml
jnp
xchg
cli
pop
xchg
jge
and
jecxz
loop
add
enter
in
inc
cmp
arpl
out
add
loopne
mov
jae
inc
shrl
test
aaa
iret
xor
sbb
mov
mov
in
xlat
out
fcomi
dec
pop
lahf
fwait
addr16
inc
pop
in
movsb
fs
fldl
lcall
adc
cmp
push
add
xorb
les
loopne
add
inc
mov
fisubrs
data16
jg
jl
std
test
fldl
pop
cld
cmp
mov
test
mov
xorb
mov
sbb
iret
xchg
sti
sub
and
pop
mov
dec
xchg
leave
jnp
mov
ffreep
pusha
xor
inc
pop
ret
cs
adc
xchg
ret
mov
cmp
leave
sub
push
popf
in
dec
and
mov
inc
push
ror
shr
pop
mov
movsl
or
rorl
addr16
repz
inc
xor
pop
call
cmp
gs
mov
push
in
in
je
insl
aaa
sbb
shl
sbb
fmull
jns
adc
mov
insb
and
int3
lea
dec
in
mov
and
stos
xchg
scas
fldl
sub
scas
fdivrp
stos
ret
gs
jo
push
add
imull
fistl
mov
jbe
push
push
mov
in
lcall
xor
pop
xlat
call
shll
idivb
in
xor
mov
fisubrs
mov
or
lods
cmp
mov
pop
pop
cmp
mov
das
pushf
int3
stos
add
dec
in
dec
xor
and
fwait
inc
mov
sub
lods
inc
roll
cmp
push
xchg
and
cmp
dec
add
movsb
sbb
cmp
addl
es
outsb
cs
mov
mov
out
dec
sahf
or
test
stos
inc
scas
jbe
dec
mov
mov
sub
jo
and
cwtl
insl
mov
nop
repz
pusha
jno
jle
stos
iret
cltd
jp
imul
jae
mov
ljmp
out
dec
jo
aaa
xor
lret
dec
add
gs
mov
pop
aas
xchg
les
inc
fmul
push
arpl
cmp
cli
shrl
xchg
mov
popf
faddl
xchg
pop
std
gs
arpl
jp
out
cmpsb
or
fimuls
push
gs
fisttpll
adc
cld
das
xor
mov
sub
and
xchg
clc
mov
dec
and
repz
sarl
lahf
mov
call
sbb
mov
pushf
or
stos
bound
pop
popf
cltd
mov
out
xchg
jp
sub
push
jo
js
fmull
push
cmp
mov
in
and
push
sub
mov
popf
sbb
addr16
push
and
sbb
mov
jl
jnp
pusha
fs
push
or
sti
loop
jo
out
mov
pop
cmp
add
inc
mov
pop
jae
addr16
xchg
ja
insb
adc
popa
mov
xchg
movsl
pop
arpl
dec
aam
sub
in
xchg
or
or
mov
mov
push
lret
bound
aad
add
mov
mov
in
clc
sub
sub
push
xchg
cs
fs
inc
rcrl
and
jno
mov
ficoms
fimull
push
xchg
daa
mov
cmpsl
fdivrl
push
out
sbb
pop
and
ficomps
mov
mov
push
adc
js
xchg
inc
mull
jno
pop
mov
outsb
shl
int3
data16
push
pop
and
lea
ror
repz
add
sahf
negl
stc
jp
dec
jle
inc
xor
xchg
adcl
ja
mov
and
lahf
rolb
mov
inc
fmul
mov
sub
fiaddl
mov
call
cmp
andl
ljmp
cmpsb
sbb
gs
add
in
cmpsl
mov
ret
lods
inc
dec
xchg
std
and
pop
test
pop
je
push
sub
xchg
gs
out
sbb
sub
jae
pushf
xchg
jne
and
jne
fidivs
stos
mov
dec
sub
fisubl
inc
or
and
iret
out
cli
js
ret
push
inc
insl
cmp
cmp
out
inc
in
fildl
push
enter
clc
orb
inc
or
sbb
jg
int3
sub
insl
ss
lea
lods
sub
mov
fwait
lods
jno
es
int3
dec
sbb
mov
out
dec
xchg
bound
mov
les
std
jmp
sub
jp
std
insb
dec
loop
mov
adc
mov
gs
push
outsb
mov
add
jns
jne
inc
cld
jmp
xchg
sbb
fwait
lret
push
push
add
adc
push
add
sub
add
je
mov
loope
mov
movsl
in
push
into
loopne
sbb
aad
dec
scas
movsl
ljmp
fistl
ja
sbb
insb
inc
mov
ret
inc
mov
pop
xchg
sbb
mov
mov
lods
xchg
jne
xor
xor
mov
pop
lods
std
divl
cmp
cltd
xor
inc
fnclex
mov
xor
pushf
fnstenv
fs
xor
cmpl
dec
enter
fildll
push
neg
sub
ret
jmp
sahf
ja
ror
xchg
gs
jno,pn
push
adcb
lea
xor
mov
stc
xchg
imul
xchg
cli
sti
cmp
popa
es
pop
mov
mov
test
outsl
inc
push
cs
shlb
pop
leave
test
pop
and
popf
pop
lret
cmpsl
jl
pop
cmpl
dec
daa
enter
mull
mov
in
mov
lcall
subb
sub
mov
push
dec
lock
cmpb
fwait
mov
xor
mov
inc
sahf
cmpsb
fisttpll
and
movsl
lods
mov
insb
arpl
fcmove
cld
rol
iret
out
jne
or
jp
cmp
imul
inc
clc
js
xlat
std
mov
sbb
movsb
jecxz
fcmovne
pop
ljmp
ret
mov
rcll
insb
pop
cwtl
mov
dec
sbb
mov
js
fcoms
lret
push
test
adc
add
add
sbb
add
shll
sbb
add
movsl
movsl
jmp
nop
push
fdivrs
repz
fiaddl
or
leave
enter
jmp
push
mov
sub
icebp
pop
mov
add
cmpsb
hlt
sub
mov
mov
mov
jmp
popa
mov
cmp
pop
jae
pop
ror
ss
and
cmp
daa
shll
xor
push
fadd
dec
add
cs
fldl
test
stos
pop
repz
repz
or
mov
pop
jmp
jp
mov
hlt
cmpsl
xchg
test
lret
lods
pop
or
test
pop
loopne
mov
xor
es
adc
and
jae
bound
jg
jno
cs
push
jmp
sub
cli
loop
ljmp
adcb
mov
push
xor
das
in
mov
push
in
outsl
push
sbb
cmp
int3
lods
lcall
push
loop
dec
cs
fwait
leave
mov
or
mov
aaa
out
movsl
int
adc
jb
cli
out
cli
rcrl
aas
jg
inc
xor
xchg
mov
sub
sbb
imul
add
mov
or
mov
popa
mov
and
xchg
inc
daa
cmpsl
aaa
repnz
add
loopne
icebp
cmp
icebp
iret
subl
add
xchg
cmp
push
fs
xorb
bound
jb
scas
inc
outsb
cltd
dec
ret
cmp
mov
aad
add
jge
dec
clc
leave
push
js
cwtl
movsl
sahf
das
movsl
cld
push
push
dec
or
mov
stos
pop
aas
mov
dec
and
adc
leave
and
ss
mov
loop
outsb
aad
in
adc
repnz
out
xor
adc
push
mov
orl
mov
test
cmp
test
bnd
or
mov
cmp
push
xchg
adc
ja
bound
jb
mov
sbb
jb
fcomi
mov
dec
xchg
or
out
enter
in
xchg
in
aaa
lock
mov
scas
in
fwait
add
jb
cmc
ret
fwait
sbbb
test
jnp
xor
sub
leave
xchg
stos
sbb
inc
mov
inc
fisttpll
popa
stos
addl
adc
mov
add
imul
mov
sbb
sub
inc
mov
insl
loope
ss
dec
mov
mov
push
mov
pop
or
bound
es
test
out
pop
data16
imul
dec
cmpsl
xchg
decl
je
fdiv
loope
sub
xor
and
inc
jmp
shlb
pop
pusha
inc
and
jne
loop
ficomps
imul
repz
mov
ds
push
adc
shlb
dec
xor
out
fwait
xor
filds
in
jb
out
push
adc
dec
std
or
loopne
pusha
inc
data16
push
inc
sub
arpl
add
std
pop
sub
jns
cwtl
push
push
sahf
lahf
mov
ds
aad
loope
and
test
int3
fisttpll
xor
addr16
mov
jb
mov
sub
pop
sub
lcall
gs
adc
fnstsw
push
cmp
adc
jae
mov
and
je
insb
leave
sarl
jns
mov
add
adc
adc
iret
add
and
mov
cmp
mulb
stc
aas
mov
xor
imul
cmp
jge
and
mov
dec
es
adc
cmp
adc
xlat
pop
imul
jmp
sbb
leave
pop
ljmp
enter
mov
xor
lret
and
add
loope
or
mov
xor
xor
push
xor
aam
adc
sbb
mov
test
inc
mov
pop
or
subb
popa
xor
clc
sub
lret
leave
mov
aas
sub
fcmovne
dec
in
mov
xchg
sub
mov
push
dec
or
jno
jne
stos
xchg
stos
mov
mov
repnz
cmp
and
inc
dec
jnp
adc
inc
dec
or
pop
jo
jl
lods
adc
pop
or
xchg
shll
out
add
jae
mov
mov
das
cmp
mov
sbb
jns
jb
cmpsl
pop
xchg
bound
pop
mov
ljmp
jle
ficomps
jnp
add
pop
enter
lcall
cmpsb
jg
push
xchg
ss
dec
mov
and
pop
xchg
xlat
adc
loop
pop
sbb
scas
sti
dec
push
in
mov
ja
adc
mov
fbstp
icebp
xchg
lahf
and
inc
imul
and
push
insl
or
mov
mov
out
inc
or
jp
mov
inc
add
lret
mov
aas
inc
add
sbb
scas
jb
ljmp
mov
add
sarl
insl
ja
mull
int
ja
adc
insl
dec
sahf
std
jle
cmpsl
push
scas
jmp
mov
xchg
push
aas
cmp
jns
mov
mov
pop
shll
push
loop
adc
fstl
mov
xchg
jmp
jle
mov
div
lea
jne
ret
mov
cmp
cmp
imul
cmp
in
cltd
je
stc
nop
cmp
fsubrl
cltd
adc
sub
lcall
mov
ja
hlt
clc
stos
int
pop
lea
mov
mov
push
mov
test
xlat
jl
xchg
in
inc
push
out
rcl
pop
enter
push
sahf
inc
call
xchg
push
mov
outsb
and
fwait
mov
mov
xchg
jbe
fiaddl
test
cltd
std
addr16
fisttpll
fdivp
dec
and
pop
push
in
push
cmp
into
in
or
aas
adc
dec
es
push
cld
rcl
push
imulb
jno
testb
sbb
dec
ja
mov
lods
loope
inc
lods
xchg
adc
and
and
fsts
iret
inc
ljmp
push
mov
ljmp
jne
sub
xchg
lock
scas
xor
sbb
ss
bound
les
fistpl
cwtl
mov
inc
sbb
push
aad
jl
loop
test
add
fildll
jmp
push
inc
mov
fsqrt
inc
hlt
inc
cli
pop
xchg
vmovntps
xor
ljmp
movsb
push
arpl
iret
cltd
in
xchg
or
imul
sub
andb
inc
mov
dec
sub
hlt
add
js
call
inc
pop
push
mov
jb
sti
jns
mov
cmc
cltd
lea
dec
dec
lea
add
int3
fwait
pop
aaa
out
imul
aam
aas
ds
cli
movsb
mov
leave
hlt
out
sbb
es
nop
arpl
sub
cs
inc
push
addr16
pop
add
imul
lcall
lods
push
inc
or
jno
lea
ss
pop
sbb
jle
mov
xchg
ja
jp
dec
into
ljmp
adc
pop
xor
and
rclb
les
xor
pop
cmpsl
pop
mov
rorb
mov
xchg
stos
popf
fs
pop
jbe
test
out
xchg
sahf
mov
pop
sub
lret
mov
popf
sbbb
dec
fmuls
pop
sti
fdivs
dec
push
pop
cmc
fcoml
pop
sbb
ret
cld
mov
jb
insl
mov
iret
arpl
jle
andb
jo
gs
xchg
hlt
pop
data16
mov
movsl
xchg
in
xchg
pushf
dec
stos
dec
jbe
daa
test
add
cmp
adc
adc
lea
test
and
out
lds
mov
lret
cmc
pop
or
sub
icebp
sub
and
in
out
ss
outsb
mov
mov
into
xchg
push
ficomps
add
jl
aas
cmp
sbbl
dec
pop
mov
xor
lcall
lret
cs
jmp
shrb
sub
scas
mov
jne
and
inc
clc
jo
sbb
jp
or
mov
push
aam
push
mov
sti
into
mov
xchg
adc
ss
or
push
or
int3
mov
xchg
add
test
loop
lret
jle
dec
jge
xor
ss
push
mov
jecxz
jle
jno,pt
sbb
dec
ss
cmp
inc
adc
mov
pop
pop
loop
testl
mov
lahf
or
cmp
sbb
dec
jns
cmp
xorb
icebp
push
ja
rcrl
fisubl
xchg
movzwl
mov
aad
out
dec
xor
sbb
xchg
push
bound
xchg
data16
mov
lcall
xor
mov
jmp
xchg
mov
push
or
pop
sbb
lods
gs
pushf
lahf
jmp
imul
sub
jno,pn
jns
push
hlt
cmpsb
je
loopne
xchg
cmp
xchg
and
inc
jno
push
maxps
pop
dec
imul
push
mov
stc
test
pusha
pop
pusha
add
mov
mov
aam
xchg
fmuls
decl
shr
test
daa
mov
xchg
lahf
add
loop
cltd
jge
ljmp
test
aaa
inc
inc
or
sub
es
outsb
js
ljmp
sub
adc
clc
insb
dec
cs
das
sbb
int
sti
daa
ja
cmp
pop
lods
shr
fidivs
std
int3
xchg
fwait
mov
mov
xchg
inc
cs
pop
and
test
mov
stc
jb
aaa
js
and
roll
fiaddl
mov
inc
repnz
or
aas
out
xchg
movsb
mov
insl
sbb
mov
cld
dec
sbb
mov
stc
sub
or
shr
xor
adc
ljmp
push
repz
cmp
xchg
add
es
out
scas
cmovno
add
movsb
xchg
repz
push
add
inc
ret
clc
inc
js
jno
adc
cli
out
pop
out
xchg
subb
pop
test
dec
inc
or
xor
dec
dec
mov
in
aaa
add
add
dec
mov
pop
lcall
xchg
aas
fimull
pop
jmp
rorl
jg
cmpsb
mov
mov
hlt
and
dec
ds
movsl
clc
xchg
rcrb
mov
adc
lahf
inc
lret
fs
leave
push
push
inc
xchg
mov
adc
pushf
adc
sbb
loop
test
mov
addr16
add
insb
and
jge
jne
in
xor
fmull
adc
mov
lahf
cmp
xchg
add
hlt
fcoms
das
mov
js
mov
push
sbb
sar
icebp
jo
add
push
xor
ret
push
adc
es
mov
sbb
sub
jl
mov
daa
mov
aad
subl
ja
out
rorl
and
push
mov
and
inc
mov
pop
ret
dec
clc
in
lret
test
pop
xorl
lahf
sarb
add
jns
mov
test
imul
and
fninit
pop
xchg
cmp
testl
add
repnz
ret
fnstenv
inc
mov
pop
jecxz
cs
or
xlat
movsb
sbb
test
push
or
and
adc
fsubrl
sub
pop
and
loopne
shrb
jmp
dec
in
cmp
in
ret
int3
xor
cmp
testl
xchg
cmpl
lods
cs
or
je
lods
outsb
lds
add
out
cmove
jno
nop
out
imul
lahf
test
adc
sbb
xor
inc
sbb
xlat
mov
loopne
test
mov
add
mov
jg
je
jno
mov
xchg
test
fisttps
cli
sub
xor
sbb
enter
pop
push
jo
xchg
ret
jmp
les
outsl
out
jae
outsb
ss
sbb
sbb
repnz
xchg
in
outsl
lret
inc
mov
jno
rorb
fs
dec
push
pop
aam
insb
mov
jne
push
xchg
fiaddl
aam
leave
sahf
mov
dec
cmp
jo
bound
enter
test
sbb
lahf
mov
pop
mov
ja
xchg
cmpsl
jmp
nop
jne
dec
fsts
dec
jmp
pop
inc
insb
repz
mov
stc
cmpsl
pop
and
dec
shr
or
mov
push
add
js
popa
xchg
mov
pop
fiaddl
push
mov
das
adc
rcll
call
shll
sbb
fstpl
xchg
mov
add
movsb
or
out
jne
icebp
popf
jae
mov
push
insl
cmpsl
sub
fs
jno
lahf
jne
mov
fisubs
data16
sbb
movsl
pop
imul
popa
jp
clc
jo
or
mov
aaa
jl
pop
orl
and
ss
adcb
fdivrs
dec
or
push
bound
punpckhbw
jns
xor
stc
pop
inc
lds
xchg
jo
stc
clc
data16
hlt
sbb
and
and
aas
xchg
push
lret
xor
mov
faddl
lret
scas
jae
test
mov
mov
mov
mov
mov
ret
add
in
cmp
mov
ss
mov
sbb
adc
jl
push
push
mov
xchg
dec
xor
mov
sub
xchg
rorl
jae
orl
adc
out
xor
arpl
pop
xor
das
mov
adc
fisubrs
mov
cmpsb
outsb
fmull
jae
add
or
or
adc
xchg
xchg
jg
jp
repz
sbb
popa
ja
sub
mov
inc
add
cmp
test
les
push
xchg
xor
cmp
jecxz
andb
outsb
cmc
mov
int3
inc
dec
test
sbb
out
push
scas
lret
add
mov
imul
sbb
mov
push
xor
notb
push
xchg
mov
pop
data16
ret
adc
cli
pop
pop
mov
mov
lret
dec
scas
das
pop
sahf
dec
sbb
add
push
pop
push
sub
test
push
push
outsl
cmpsl
push
push
inc
das
cmp
and
mov
sbb
push
loope
rorl
insb
mov
stc
mov
and
mov
popl
rcrb
push
sub
sub
test
pop
loope
insl
lcall
movsl
push
lods
jns
lahf
mov
and
in
and
xchg
movsb
jnp
arpl
xchg
xor
adc
jo
lods
fisubrl
rorb
xlat
bound
inc
or
das
mov
std
loopne
or
sbb
or
fsubrs
popf
push
js
sarb
in
lret
push
cmp
out
xchg
xchg
xor
fcompl
xchg
add
ficoml
push
or
montmul
cmpsb
lds
test
outsb
pop
xor
daa
jbe
lahf
jge
adc
mov
or
rcr
sbb
pop
lahf
pop
ret
jne
sbb
push
in
xor
nop
in
sbb
lea
ja
xchg
mov
sub
fldcw
sub
jne
push
mov
pop
iret
pop
arpl
mov
cmpsb
jl
in
fnstsw
movsl
mov
jne
adc
mov
mov
aas
xchg
cs
adc
data16
pop
cmpsl
stc
pop
xor
mov
sbb
jns
sti
stos
cmpsb
pop
roll
cs
mov
mov
pop
cmp
in
add
push
popa
mov
push
jne
add
inc
cmp
inc
dec
add
mov
movsb
hlt
icebp
nop
sub
sbb
movsl
pop
sbb
sti
roll
xchg
pop
imul
cmp
les
lds
mov
arpl
inc
jne
lock
inc
pop
outsb
jge
inc
push
adcl
daa
lahf
mov
push
into
jp
xlat
daa
popf
cmp
dec
jg
push
popa
jo
shlb
icebp
xchg
in
aad
jae
xor
in
mov
mov
pushf
push
cmp
and
push
mov
jg
add
fwait
cmp
fwait
popa
mov
pop
xor
negl
dec
xchg
int
out
mov
xor
cltd
fwait
xchg
test
dec
dec
push
adc
mov
or
das
adc
or
movsb
iret
dec
cli
dec
push
jmp
lea
dec
dec
push
les
clc
jecxz
xorb
lcall
inc
push
jmp
push
stos
test
fscale
insb
aad
adc
sub
jnp
insb
adc
pop
mov
jge
fsub
jmp
cmp
lods
pop
jo
pop
pop
imul
movsb
jo
push
inc
mov
add
mov
roll
xor
mov
pusha
mov
fcomp
in
xchg
repnz
sub
adcl
xchg
cmp
insl
loope
sarl
mov
mov
pushf
and
pop
fstl
mov
add
cli
pop
adc
sbb
push
xlat
movsl
scas
mov
sbb
incb
sti
cmp
mov
scas
out
xor
pop
adc
sbbb
mov
inc
cmp
jecxz
push
scas
popf
pop
xchg
add
mov
stos
rclb
xchg
xchg
rcl
and
ss
js
popa
in
inc
mov
stos
dec
bound
or
mov
scas
xchg
cmp
popa
out
fcmovbe
or
inc
xor
xor
sbb
dec
pop
ljmp
adc
add
data16
std
test
dec
js
push
sahf
cmpsb
sub
jne
or
sbb
cmp
sbb
mov
clc
pop
sti
xchg
fnstsw
or
and
cmpsl
pop
out
enter
xchg
lea
aam
add
xlat
jl
cmc
fistps
mov
jmp
ljmpw
test
and
inc
inc
lds
aad
sbb
sub
add
sbb
enter
imul
ja
mov
hlt
frstor
enter
cli
bound
fmul
lcall
jle
push
test
call
out
push
addr16
mov
xlat
and
inc
mov
js
outsb
push
cltd
fnstenv
jl
jne
stos
xor
ficoml
add
push
sbb
addr16
insl
test
jbe
lcall
adcb
pusha
jnp
sbb
cltd
xchg
test
and
xchg
ficomps
jl,pn
jbe
and
xchg
mov
ja
sarl
jmp
shlb
repz
rolb
mov
add
in
int3
or
xor
fiadds
and
pop
mov
shr
mov
sbb
test
sub
adc
xor
pusha
add
call
pop
fstps
jp
repz
jo
pop
call
xor
push
cmp
call
stos
into
xchg
out
aas
or
inc
mov
adc
push
in
sbb
jae
mov
xchg
aam
negl
xor
lods
pop
call
aas
leave
xchg
mov
daa
repnz
into
stc
enter
pop
mov
test
lock
or
aad
mov
pop
fwait
pop
dec
insb
stos
xor
cmpsb
mov
jp
cmp
imul
pusha
lock
cmp
iret
and
dec
test
lods
rcll
shl
xchg
popf
mov
jecxz
push
sub
mov
inc
ds
daa
andl
sbb
jb
jl
pop
aad
hlt
aad
mov
cld
xchg
stc
loope
cmpsb
add
loopne
pop
mov
ljmp
push
lods
les
and
dec
add
jne
loop
add
xchg
inc
push
push
in
inc
scas
test
or
imul
pop
cwtl
aas
pop
or
push
and
gs
leave
arpl
mov
rol
sub
movsl
das
cmp
pop
mov
dec
mov
nop
jmp
xor
sbb
icebp
mov
sbb
inc
pop
insl
mov
inc
push
out
popaw
mov
neg
sti
pop
mov
mov
push
mov
stc
sbb
mov
shlb
pop
cld
inc
js
adc
fwait
out
test
aaa
mov
mov
shrl
cltd
cmp
sbb
dec
mov
and
pop
cmc
data16
and
popf
xchg
jmp
xlat
xchg
jle
dec
inc
repz
ja
or
ret
shrb
es
arpl
insb
and
clc
pop
out
inc
jecxz
mov
xlat
xchg
lods
or
cmp
lock
mov
and
outsb
or
int
movsb
pop
das
xchg
xchg
call
inc
xorl
jno
dec
in
lcall
xchg
out
xor
incb
jle
dec
xor
xor
fwait
add
xor
mov
or
popf
inc
mov
mov
pop
or
or
mov
into
inc
fcom
and
sbb
mov
adc
in
ret
es
dec
movsl
jecxz
rcl
mov
or
stos
fs
addr16
add
aaa
add
lret
stos
add
mov
lock
fldt
push
lea
lahf
mov
pop
and
add
ss
fsts
mov
repz
enterw
mov
mov
loop
in
pop
jl
xor
mov
push
pop
inc
ficoml
pop
imul
pop
jbe
scas
lcall
mov
add
and
stos
sbb
jmp
decb
xchg
push
pop
adc
test
mov
add
sub
mov
cpuid
and
inc
mov
rcrb
jb
pop
dec
cwtl
adc
xor
push
pop
and
pop
mov
push
stos
jge
repz
inc
fcmovbe
ret
and
or
dec
inc
ljmp
popf
scas
stos
push
cmp
add
dec
cs
xchg
lds
push
add
sbb
test
add
rcll
push
inc
sub
enter
mov
arpl
mov
movsb
dec
test
jae
dec
or
sbb
adc
jecxz
js
popf
loopne
xlat
dec
es
cmc
call
push
jecxz
int3
xor
dec
outsb
lcall
das
lahf
mov
mov
sbb
fisubl
and
cmp
inc
add
jo
fdivs
xlat
xor
jl
hlt
push
test
es
test
dec
xor
add
pop
sub
sbb
xor
insl
popf
cwtl
hlt
test
scas
daa
sub
adc
push
cmp
aam
mov
cmc
cmp
daa
cmp
ja
or
pand
fldt
cltd
sbb
and
out
inc
ljmp
add
add
fucomp
mov
hlt
sbb
add
mov
cmp
repz
lods
cmc
or
sub
jmp
adc
sarb
addr16
aad
addr16
in
sbb
and
pop
cmp
xorl
sbb
ja
mov
sbb
fbld
nop
add
ficoms
mov
pop
jnp
jae
insl
scas
movb
inc
arpl
ss
add
ds
cmp
rclb
pop
ret
test
nop
std
das
jecxz
int3
add
out
mov
das
dec
roll
pop
mov
mov
adc
repnz
xchg
jno
in
sbb
xor
and
pop
int3
xor
cmp
loop
shlb
jmp
nopl
dec
jle
mov
cwtl
repz
inc
xor
push
dec
jae
cmp
out
or
rcrl
push
dec
xor
xor
sbbl
loope
add
inc
push
xor
pop
xchg
xor
shll
jbe
dec
not
iret
int
mov
sahf
xchg
mov
cmc
jne
sbb
stos
dec
test
and
inc
push
and
repnz
mov
inc
mov
aam
xor
int3
les
and
xchg
add
clc
jg
lock
pop
scas
aam
ss
insl
mov
mov
lcall
int
mov
or
mov
cmp
dec
jmp
clc
and
lds
sub
xchg
scas
movsb
sbb
push
inc
sbb
mov
sub
bound
xorl
push
jbe
sbb
adc
inc
loope
call
orb
fcoms
dec
paddq
push
aam
icebp
mov
movsl
inc
in
mov
cmp
iret
pop
pop
jmp
outsl
dec
fildll
insl
stc
mov
xchg
jmp
pop
popa
subb
pop
pop
mov
jl
or
shrl
mov
lods
cld
arpl
into
pop
aas
cmp
es
cmpsb
or
sahf
dec
fsubr
and
ds
mov
and
mov
div
jno
dec
pop
cmpsl
pop
loope
jmp
mov
adc
inc
je
pop
add
imul
jge
or
sbb
xchg
mov
xchg
cmpsl
ret
add
fsubrs
fwait
mov
outsb
int3
rcl
out
sub
dec
pop
into
std
cmp
data16
push
testb
scas
xor
jp
sub
outsb
fstps
push
loope
cmp
sbb
in
lcall
fstps
movsb
pop
popa
dec
adc
cmpsb
xor
pop
fs
sub
fs
iret
nop
out
subps
xor
das
and
icebp
sub
mov
pushf
test
adc
addr16
insb
and
pop
lea
fildl
cmpsb
movsl
jns
xor
sub
imul
pop
cltd
mov
xorl
lock
pop
ds
inc
jne
pop
inc
jge
rol
test
loope
mov
jmp
ret
and
dec
jl
sbb
xor
mov
xchg
and
mov
outsl
push
jae
rorl
or
fiaddl
or
int
fidivrl
inc
inc
ret
push
inc
adc
push
adc
adc
jmp
cmp
aam
lods
push
mov
push
mov
mov
mov
jns
arpl
mov
dec
sarl
out
xchg
pop
adc
cld
jle
orl
test
pushf
out
hlt
mov
inc
das
or
clc
inc
roll
mov
ret
outsb
inc
mov
cld
or
or
mov
ficompl
insl
ljmp
pop
hlt
leave
mov
test
mov
bnd
fwait
popa
mov
xchg
sub
nop
repz
sarb
mov
jbe
lret
movsb
cmp
shlb
fnstsw
pop
mov
inc
pop
call
nop
packsswb
adc
xor
clc
xchg
push
fwait
pop
and
gs
xor
push
iret
cmp
lret
dec
jns
pop
movsb
sbb
cmpsl
jb
mov
mov
xor
mov
and
push
fimull
lcall
call
dec
ljmp
jns
pop
or
mov
sbb
movsl
dec
lods
xchg
mov
cmpsl
push
jae
push
sub
mov
ficoms
mov
or
cmp
clc
jae
ja
es
mov
jnp
ja
popa
push
dec
testb
popa
cwtl
aam
push
and
hlt
daa
mov
jmp
mov
cmc
sbb
pushf
push
mov
cli
sub
inc
hlt
fisubrl
enter
ret
mov
mov
adc
rorl
push
pushf
jo
ficoml
xchg
inc
shrl
sbb
test
lcall
dec
jo
adc
scas
cmpsl
xor
lods
inc
int
aad
rclb
mov
loopne
loop
dec
movsl
faddp
mov
jns
daa
pop
cmp
push
adc
add
mov
mov
nop
jg
lea
xchg
into
aas
or
cmp
mov
inc
shl
outsl
cmc
rcr
mov
inc
add
jae
inc
push
pop
pop
ret
xor
pop
jp
sub
jno
sbb
mov
stc
pop
fs
jb
or
fistps
cwtl
adc
or
sbb
ret
ds
gs
push
mov
aad
in
decl
adc
xchg
shll
test
sbb
rorb
cmp
adc
out
xchg
sahf
repz
or
jns
rclb
dec
icebp
jg
andl
leave
ljmp
mull
xchg
mov
dec
jp
pop
mov
pop
xor
cli
mov
sbb
scas
ljmp
call
andl
mov
and
mov
adc
push
fs
push
fmull
pop
arpl
fmul
in
out
cmp
loope
dec
mov
fidivs
cmp
in
cli
cmc
into
mov
lea
fwait
cmc
sarl
int
int3
lods
movsl
into
shll
mov
fisttpll
insb
jno
jb
xchg
aad
jle
into
or
push
int
sbb
lock
xor
loope
lds
jp
scas
cmpsl
stc
aad
or
mov
adc
or
jns
movsb
xor
pextrw
pop
dec
in
mov
das
js
mov
lcall
loop
xlat
stos
ret
sub
adc
jnp
dec
push
push
sbb
jae
lds
fisttps
inc
xor
aaa
pop
repnz
dec
movsb
pop
lret
sbb
pop
inc
arpl
scas
xor
jbe
adcl
mov
loopne
data16
dec
stos
push
mov
jns
mov
loope
mov
inc
mov
sub
cmp
sub
fs
push
mov
and
jle
fidivl
cmpl
fcoms
aam
lahf
loop
push
pop
push
loope
popa
movsl
mov
movsl
sub
add
das
sub
mov
sahf
das
adc
lds
mov
adc
mov
mov
test
mov
jle
andl
or
and
inc
cmc
cwtl
pop
push
jo
aas
mov
sub
mov
push
jg
int3
into
lcall
gs
xor
in
and
jbe
lret
add
mov
adc
or
mov
jno
int3
cmp
scas
adcb
inc
mov
loope
xor
in
xchg
int3
xchg
daa
shr
aad
aas
inc
sarb
hlt
fwait
xchg
push
leave
push
ds
push
enter
icebp
fwait
mov
insl
add
js
enter
dec
lock
xchg
mov
sub
jne
imul
mov
lea
jo
or
fsts
fildll
pop
xchg
adc
mov
mov
dec
sub
lods
je
imul
mov
adc
jmp
sbb
pop
scas
je
sti
mov
inc
ss
mov
inc
jp
push
rolb
xor
inc
fisubrs
push
fcoml
fadd
xor
insl
or
push
lret
fimull
pop
inc
std
xor
aad
xlat
movsl
outsb
or
outsb
pop
dec
insl
in
aad
mov
push
and
mov
repnz
les
loopne
or
pop
jae
out
xor
lcall
and
push
movsl
aas
jl
dec
js
sbb
mov
test
fstps
xchg
outsl
shll
xor
lea
les
and
mov
fucomp
jg
sbb
pop
out
test
xor
mov
inc
push
cwtl
jns
xchg
mov
mov
inc
mov
sub
adc
fstl
adc
push
pop
arpl
push
movsl
mov
pushf
ret
outsb
int3
mov
mov
or
leave
scas
stos
mov
adc
jge
cmc
loope
mov
int3
insl
sti
fwait
cli
das
ftst
add
adc
dec
sub
nop
jno
hlt
jmp
mov
or
cli
inc
pop
clc
xchg
inc
popl
shl
stc
cld
sbb
cmpsl
inc
sub
out
and
test
pop
icebp
es
ret
pop
adc
push
das
jle
cmp
aam
pushf
out
jns
or
fucom
ss
lock
outsl
andb
sub
jns
stos
dec
popf
icebp
and
mov
xchg
and
test
jl
add
jge
pop
out
stc
mov
pop
mov
insl
mov
cmp
pop
add
cmp
repnz
addr16
ds
int
or
outsl
xor
push
ja
lret
popf
cli
mov
jae
insb
iret
out
sbb
cmp
add
cmpsb
mov
pop
sub
imul
mov
insb
dec
jns
outsb
jne
cmp
aad
cmc
movsb
push
push
xchg
pusha
push
cwtl
test
and
mov
addr16
nop
cmp
popl
sub
sub
mov
jns
into
dec
gs
jge
out
fmulp
ljmp
iret
int
mov
and
jno
out
pop
mov
pop
cmpb
cmp
mov
adc
and
out
push
or
mov
test
stos
sahf
test
pop
push
test
cltd
xor
pop
loopne
sub
jg
jle
stos
fimuls
rorl
neg
mov
shll
pushw
aam
mov
cld
ljmp
inc
inc
cmpsl
cmp
fnstcw
inc
xchg
js
inc
ret
mov
stos
sub
testl
mov
xchg
das
int3
pop
test
popf
data16
and
and
lahf
loop
lea
mov
rcl
sbb
jmp
push
cmpsl
lock
std
add
push
pop
xchg
add
pusha
adc
xchg
sbb
lea
xchg
jle
mov
aad
pop
shlb
popf
out
lods
inc
arpl
or
std
lea
dec
popa
addr16
lea
pop
sbbb
or
popa
cltd
jnp
push
cmp
sub
lea
inc
and
nop
dec
dec
mov
inc
out
subb
xor
loope
int3
cmp
pop
lret
bound
pop
sbb
mov
dec
dec
ret
sahf
pushf
push
mov
push
icebp
sarb
or
insl
mov
test
mov
xchg
xor
pop
mov
cmp
lcall
xlat
xor
adc
jne
push
test
or
xchg
mov
adc
clc
cmp
bound
jnp
add
and
jle
push
or
dec
mov
adc
jnp
les
xor
out
lods
fsincos
mov
es
push
inc
dec
jnp
cmpsl
adc
mov
icebp
cmpl
in
jnp
insb
xchg
int
and
or
add
mov
dec
pop
push
gs
xor
xchg
or
adc
cmpsb
jmp
out
loope
insb
mov
inc
mov
ret
lret
push
mov
sahf
pop
out
aad
shll
lret
and
shrl
mov
pop
mov
mov
negb
jmp
add
clc
inc
inc
sbb
adc
adc
add
int3
inc
cmp
dec
dec
dec
xchg
xchg
mov
out
jno
dec
push
jnp
add
movsb
inc
xchg
adc
aam
aad
jge
pop
lea
or
mov
ret
aad
mov
mov
aam
mov
subl
daa
sub
daa
mov
dec
add
cmp
scas
pop
sahf
xor
mov
xchg
les
std
aas
add
pop
leave
pop
mov
xchg
adc
in
xchg
ja
adc
or
jae
scas
test
cmpsb
and
movl
test
repnz
or
fisubs
sbb
sbb
out
bound
insb
jmp
lcall
mov
xor
out
push
pop
test
add
aam
push
mov
xchg
into
lds
rolb
jg
inc
mov
lret
and
xchg
push
stos
mov
in
imul
fcmovbe
xchg
pop
cltd
dec
mov
inc
jecxz
rcr
jg
incb
add
dec
lock
xor
fmuls
sbb
ds
ljmp
lods
dec
mov
sbb
sub
dec
jle
jne
inc
cmpsb
sbb
dec
movsl
rclb
in
mov
add
pusha
ror
or
es
mov
adc
insl
mov
jl
sub
or
pop
sbb
sbb
sub
cld
xor
cmpsl
mov
outsl
mov
xchg
lahf
shrl
mov
add
les
imul
mov
sub
inc
inc
sarl
jnp
fisttpll
popa
and
cld
xor
dec
pop
inc
xor
add
enter
jle
jno,pt
pop
ret
int3
sbb
push
popf
sti
push
sbb
xchg
jbe
and
clc
cld
pusha
xor
popl
stos
xchg
pop
je
cmpps
xchg
jg
cmpsb
mov
hlt
sbb
inc
jne
xchg
hlt
cli
ret
jl
and
repz
jp
js
push
lea
fnstenv
shr
mov
pushf
jp
jns
sub
jle
mov
inc
sbb
enter
rcrb
popa
and
xchg
mov
fistps
mov
fimull
inc
and
call
mov
and
ret
and
lods
stc
dec
out
pop
insb
test
xor
mov
and
mov
out
push
nop
inc
out
hlt
stc
jg
ret
xor
jae
mov
sbb
xor
aam
adc
ja
movsl
lret
lret
lds
aas
in
fadds
pop
icebp
outsb
testb
jle
xchg
aas
inc
jecxz
xchg
xchg
jne
mov
and
test
jb
test
push
fcompl
mov
pop
dec
lret
push
sbb
push
fsubrl
iret
xor
test
push
fs
push
in
aad
sub
lock
aad
mov
fprem
push
inc
mov
call
fcoms
mov
test
xor
lock
test
ret
in
cltd
gs
loope
test
es
mov
js
andl
jno
push
xor
cmp
daa
push
pusha
xchg
push
fs
out
cwtl
ja
js
adc
pop
mov
fmuls
jb
ret
xchg
jb
sarl
add
ljmp
push
cmp
pop
scas
inc
push
jnp
cmp
dec
incb
cmp
pop
jne
int
push
lds
xlat
pop
rorl
xor
int
outsl
xchg
xor
inc
xchg
enter
nop
int3
lock
sub
cmc
jg
popf
mov
imul
xor
inc
sub
add
mov
into
pop
jg
iret
shrb
sahf
bound
adc
cmp
or
lahf
sahf
mov
sub
mov
mov
xor
xor
ja
xchg
or
inc
mov
dec
xchg
sub
xchg
enter
add
sahf
ljmp
add
lods
iret
mov
xchg
sub
clc
jne
repnz
push
mov
cmpsb
int3
scas
insb
ja
repnz
lods
cmp
shrl
pop
out
ds
cmp
cmc
sti
jo
pop
stos
xchg
dec
lods
pop
ljmp
mov
add
dec
ja
rcrl
insb
ret
enter
push
pop
and
hlt
sub
je
mov
mov
xchg
add
sbb
sbb
jge
xor
adc
pushf
dec
or
inc
pop
push
mov
mov
xor
test
ret
inc
jbe
jo
xor
cmc
icebp
add
inc
xchg
cmp
popf
mulb
mov
aas
pop
imul
leave
clc
inc
mov
loopne
xor
in
les
adc
sbb
and
addb
jmp
or
ret
jp
ja
mull
jge
push
mov
leave
mov
mov
rclb
clc
jl
push
aam
in
jo
cs
sub
dec
add
std
inc
push
fiaddl
mov
xchg
inc
or
inc
aas
sbb
xlat
push
ror
xor
mov
aad
jne
xchg
cli
push
xor
xlat
sbb
ss
push
call
fwait
jle
adc
push
fwait
inc
and
cltd
lods
mov
je
xchg
jb
adc
mov
out
outsl
push
sub
and
icebp
out
sbb
push
jnp
mov
cltd
int
int
fisubrs
mov
sbb
cmc
pushf
push
js
sub
loope
pop
fwait
mov
loop
lret
aam
pusha
icebp
mov
adc
push
mov
das
xor
clc
mov
popf
push
stos
stos
lock
movsl
mov
daa
cltd
popf
clc
and
xor
xchg
mov
aad
or
aaa
cmp
mov
and
add
mov
xchg
lret
cmpsl
es
xor
dec
std
mov
cmpsb
mov
mov
add
xchg
jno
mov
inc
fisttpl
push
pop
jg
push
test
cmpsb
sbb
outsb
pop
imul
fbld
in
push
lock
testb
rorb
test
inc
mov
sub
xor
push
stc
je
mov
insl
add
mov
mov
fwait
mov
mov
loopne
pop
mov
cmp
sub
dec
push
sbb
out
add
cld
in
mov
into
inc
repnz
fisubrl
push
sub
jae
sbb
fiadds
or
mov
ret
dec
pop
ds
iret
in
jb
mov
jp
mov
push
cmp
xlat
jmp
pop
jns
adc
out
cmpsb
lock
in
mov
xchg
mov
and
ss
add
imul
outsl
aas
fnsave
popa
cmp
jg
and
mov
and
out
sbb
andl
fwait
out
sub
sbb
mov
push
sub
shll
fwait
push
andb
inc
or
jmp
pop
dec
pop
push
push
imul
data16
pusha
cmpsl
ror
mov
jecxz
jb
inc
adc
cmp
mov
out
adc
cmpsb
or
test
sbbb
jae
je
and
mov
shr
insb
dec
fsubrs
or
sbb
mov
push
sub
or
pop
cld
push
fildl
cmp
aaa
and
ljmp
enter
push
ret
mov
xor
sub
cwtl
xchg
in
cmp
std
and
and
pop
jl
gs
mov
jno
xchg
cld
mov
jne
in
push
fdivrl
mov
jno
fbld
ret
enter
int3
jp
ret
mov
in
scas
and
mov
ret
inc
inc
test
jae
aam
mov
mov
inc
fwait
daa
xlat
jbe
arpl
push
push
test
and
out
mov
cmp
adc
dec
inc
fldl
xlat
sub
jo
inc
shlb
fistps
push
or
out
out
rclb
mov
lods
lea
xchg
repnz
sbb
pop
divl
lds
inc
mov
xor
sub
mov
sbb
push
sahf
in
inc
mov
push
out
add
je
imul
sub
push
out
jge
decl
rclb
insb
lahf
mov
out
lcall
imulb
mov
cmp
xor
ss
repnz
or
add
xor
add
rclb
out
xchg
inc
fdiv
xchg
and
test
cmp
cmpsb
or
and
pushf
push
fdivrs
sahf
push
jne
roll
dec
sub
arpl
lock
fisubl
pinsrw
fwait
cmp
cli
mov
xchg
add
mov
clc
dec
leave
mov
cld
pusha
mov
sbb
out
push
in
or
and
fldl
pop
sahf
jle
mov
dec
jmp
loop
out
push
xchg
lock
push
lret
mov
push
jmp
in
xor
js
mov
sub
adc
sub
lods
mov
sub
sbb
cltd
pop
scas
push
hlt
gs
bndstx
cmpsl
lahf
push
mov
ret
xchg
cmp
mov
sbb
dec
cmc
call
mov
das
or
loopne
mull
cli
sub
add
jne
dec
daa
sbb
xchg
jmp
cli
daa
or
lret
add
subb
adc
insb
mov
jne
xchg
add
out
xchg
adc
insl
lods
fcmovnb
mov
inc
lret
fidivrs
popa
enter
cltd
lods
or
push
jecxz
pop
mov
dec
push
cmpsl
jnp
mov
into
xor
je
movsl
sbb
push
test
lods
mov
or
mov
push
jl
or
xor
rorb
test
push
std
inc
jne
mov
rolb
fisttpll
lahf
mov
xor
addr16
fists
xchg
dec
sbb
les
lds
xchg
clc
and
aad
sub
fisttpl
cs
inc
xchg
arpl
lret
nop
jle
leave
lcall
or
jp
in
push
pop
lods
lea
repnz
das
inc
dec
shl
push
mov
and
int3
fists
pushf
jl
cs
pop
lret
mov
xor
lods
cmp
inc
lock
sub
aad
jp
adc
std
or
xchg
mov
jl
push
ja
cmc
ja
leave
and
pop
mov
in
inc
mov
sub
xchg
cwtl
inc
add
xchg
mov
jg
inc
in
dec
iret
jmp
mov
adc
push
sahf
aam
mov
mov
mul
adc
dec
outsb
cli
mov
popa
andl
sbbl
push
mov
insl
cmc
lahf
frstor
rcrb
je
subl
je
xor
mov
sbb
sbb
daa
sbb
ss
cld
push
sub
dec
jl
lret
decb
xor
mov
adcb
mov
call
sbb
lret
faddl
cmpsl
idivb
pop
sti
pop
mov
or
mov
adc
insb
sbb
dec
push
mov
inc
jle
pop
xor
and
mov
and
repnz
in
xlat
inc
iret
in
pusha
cmp
adc
xchg
fisttpl
out
pusha
mov
sbb
into
sbb
ret
dec
loope
decl
cmp
sti
pop
mov
xor
dec
jnp
cmc
jne
inc
mov
inc
sbb
mov
pop
inc
call
aam
ljmp
mov
lret
jo
and
sub
or
lods
ss
out
mov
stos
and
fmulp
mov
pop
outsb
arpl
mov
jg
stos
push
mov
jge
jmp
popa
pop
jo
sbb
and
stos
aad
into
js
lds
inc
iret
lcall
idivl
push
lds
inc
xchg
cld
cmc
mov
push
dec
sub
test
lret
fstl
xlat
mov
dec
sbb
ficoms
call
je
xchg
addr16
lahf
aad
cld
xorl
test
lods
xchg
stc
lret
xor
or
shrb
xchg
mov
sbb
rclb
repz
shlb
cmp
int
or
test
adc
jbe
in
cmp
sub
sbb
enter
xchg
jmp
sbb
adc
pop
js
sahf
repnz
sbb
out
jo
mov
add
icebp
hlt
cli
dec
inc
adc
lods
enter
adc
and
jb
stos
add
fstpt
popf
pop
les
add
je
or
insb
and
jg
fwait
inc
scas
lret
jo
and
out
push
pop
sub
cmp
jg
adc
cmp
mov
popf
movsl
imul
push
inc
aad
aas
sahf
jns
and
dec
push
xchg
in
jg
movsl
pop
cmp
popaw
cmp
dec
mov
frstor
pop
shlb
rorb
jle
imul
imul
xchg
cmp
xchg
fnstsw
mov
in
sbb
test
inc
pop
dec
cmc
fiadds
shlb
cli
pop
fadd
ss
sahf
sbb
xor
imul
aad
mov
rolb
or
fmulp
dec
lods
pop
mov
add
daa
in
ss
lods
push
enter
repz
xchg
ficomps
sti
or
addr16
mov
popa
jl
int3
sbb
out
pop
cmp
xchg
pop
out
hlt
and
in
xchg
dec
imul
cltd
rorb
in
sbb
pop
lods
jo
ss
lock
or
xlat
popf
enter
mov
adc
jp
and
mov
mov
aad
cmp
mov
xchg
int3
push
mov
dec
mov
aas
cltd
lock
stc
xor
pop
jo
and
push
inc
mov
add
sbb
loopne
ja
and
add
movsl
or
or
es
mov
xchg
mov
cld
decl
std
jne
stc
xchg
test
outsb
in
fisubs
lcall
pop
sub
aaa
andl
dec
hlt
push
xor
mov
add
xchg
aad
enter
in
inc
lods
aaa
imul
push
inc
imul
stc
push
adc
inc
movsl
pop
sbb
dec
and
popa
cmp
mov
dec
pop
push
orl
jae
rorb
jg
ret
lock
stc
sbb
fcomps
repnz
xchg
sub
cmp
push
lret
dec
push
fdivrl
inc
or
aas
test
divl
into
jl
mov
push
mov
addr16
mov
ja
add
scas
sbb
addl
test
ss
sbb
or
adcb
enter
xchg
mov
pop
adc
gs
popa
push
sbb
scas
push
adc
clc
xor
cmp
subb
cwtl
sbb
mov
repz
or
pop
popa
jl
aas
shll
pushf
sub
xor
jmp
or
fdivl
std
and
int3
outsl
jae
sbb
lock
rcrl
fisttpll
sbb
test
add
insl
pushf
or
and
adc
lret
js
lods
cli
inc
int3
sbb
sbb
add
stos
and
popa
stos
cmp
mov
or
es
loopne
push
addr16
or
cltd
pop
adc
jnp
adc
shl
adc
jae
jp
mov
push
dec
fcmovnb
sub
jnp
aad
mov
jmp
or
inc
adc
mov
sub
mov
push
jns
pop
mov
clc
stos
idiv
insl
mov
sahf
fs
lret
stos
clc
push
test
mov
inc
fdivr
dec
shr
bound
pop
mov
loope
arpl
sbb
or
and
hlt
into
lds
mov
push
fstpt
xchg
xchg
pushl
pop
or
jb
or
jnp
pushf
mov
sub
inc
mov
das
inc
cmp
lret
lods
push
fsubr
mov
sti
sub
mov
flds
out
sbb
jno
int3
xor
mov
push
cmp
fcmove
and
fstps
daa
ds
cli
fbld
mov
jl
or
mov
cld
int3
jno
push
scas
xor
jl
sbbb
cmp
or
add
xorb
mov
add
or
fmull
lcall
mov
in
rolb
popa
ljmp
shrb
es
mov
shll
pop
inc
or
mov
es
test
jnp
mov
in
test
or
mov
div
icebp
movsb
in
into
insb
popf
aad
push
stc
je
fwait
inc
cmc
xchg
push
lcall
xor
movsl
stos
lret
cld
pmullw
lret
dec
mov
aas
ficompl
jge
fwait
inc
push
iret
pop
sbb
xchg
addl
inc
cmc
cltd
stos
lret
inc
inc
xchg
xchg
insl
shl
pushaw
fwait
repnz
std
pop
daa
in
ja
add
cld
or
sub
xlat
cmp
jns
dec
and
dec
jp
outsb
in
mov
rcrl
add
fucomp
scas
jo
xchg
push
loop,pt
jg
jle
xchg
lcall
ljmp
xchg
xor
cmpsb
add
out
lock
test
outsb
jp
mov
mov
adc
cmc
jo
shrb
xor
xchg
cwtl
and
inc
cltd
fdivrs
sbb
les
fwait
and
call
lock
add
sbb
out
push
out
lcall
rorb
or
stc
daa
subb
jae
jnp
mov
cli
sbb
or
shlb
in
pop
and
xorb
inc
sub
push
cltd
lods
fsubrs
popa
inc
enter
push
mov
dec
jge
inc
repz
cmp
fwait
aad
roll
dec
data16
pop
or
sub
stos
inc
xor
loopne
or
call
cmp
outsl
pop
fistps
pusha
bound
or
or
cmp
sbb
jg
repz
mov
sub
sub
sub
dec
pop
xchg
xlat
sbb
ja
cmp
in
xor
rcrb
es
dec
mov
mov
cmp
je
jns
mov
icebp
fistpl
mov
and
pop
lcall
xchg
loopne
mov
imul
pushf
ss
add
decl
sub
orb
les
cmp
pop
xor
stos
mov
std
jl
push
out
test
sub
fnsetpm(287
jns
mov
push
jbe
outsb
hlt
mov
mov
inc
movsl
add
lds
jmp
iret
push
loop
js
push
les
stc
sub
test
cmpsb
inc
idivl
push
in
sub
mov
iret
pop
in
lret
mov
jno
pop
and
imul
push
jo
or
jle
inc
fistps
pop
loopne
mov
loopne
pop
nop
xlat
xor
test
xchg
lea
enter
push
cmp
jge
loopne
movsb
push
daa
scas
dec
xchg
jle
repnz
loope
loopne
lret
in
imull
pop
or
mov
xor
insl
into
and
jo
pushf
fidivl
lock
cmp
icebp
int
test
add
jecxz
add
clc
mov
dec
mov
add
inc
sub
leave
push
inc
sbb
adc
adc
jnp
jl
mov
push
sub
mov
jbe
and
aas
xor
es
cmovp
jne
push
xor
lods
adc
inc
insb
sbb
and
push
mov
mov
dec
daa
jmp
and
aaa
dec
cmc
cmpl
std
call
cltd
mov
sub
bound
mov
add
push
adc
aas
sahf
sub
add
scas
add
into
xor
and
mov
mov
push
adc
rolb
lods
and
dec
jbe
repnz
push
lods
sub
add
jne
mov
shlb
sbb
cmp
js
into
pop
xchg
sbbb
inc
mov
fs
nop
jbe
shl
stc
addr16
xorb
in
insb
dec
hlt
xchg
push
sbb
and
or
dec
insb
mov
int
loope
mov
jmp
push
loope
scas
lahf
arpl
mov
popa
cs
scas
stos
jl
icebp
roll
pop
or
jno
mov
aam
cli
jae
sub
repnz
das
jle
dec
xlat
mov
out
mov
popa
dec
aad
out
sbb
movsb
outsl
sub
cli
imul
inc
imul
pop
mov
inc
xor
cmp
add
add
addr16
loop
inc
inc
gs
stos
maskmovq
ss
jecxz
lods
int3
leave
and
data16
pop
inc
sbb
pop
rolb
aad
xor
loop
test
test
cmp
insb
jae
or
subl
push
addr16
or
sub
fists
sti
dec
or
nop
test
testb
jle
adc
shrl
arpl
bndstx
int3
test
xlat
mov
mov
ret
cwtl
out
in
jg
jae
sahf
mov
gs
ja
or
sub
cmpsb
xor
ret
sbb
out
and
test
jae
mov
dec
or
shlb
in
ret
imull
and
rcl
loop
shlb
rcrl
rolb
mov
mov
inc
fs
pop
aad
add
popf
test
je
test
orb
cmp
pop
stos
jmp
subl
mov
and
pop
push
add
lret
test
rcl
enter
jnp
sahf
cmp
dec
add
xor
cmp
sub
in
dec
icebp
mov
dec
add
xor
repz
cmp
ljmp
sbb
or
sarb
adc
jae
dec
ret
jbe
dec
rcr
and
and
sti
dec
loope
leave
test
adc
lcall
addl
aad
sub
xchg
shlb
inc
leave
dec
cmp
mov
push
aam
cmp
call
xchg
call
movsb
dec
push
and
dec
loop
js
pop
mov
in
inc
cld
lea
cmpsb
jmp
jle
cmc
ljmp
mov
cmpsl
push
jae
push
aad
test
push
and
sub
pop
enter
popf
inc
ds
add
rcrl
adc
mov
ret
in
push
mov
pop
xor
mov
std
sahf
dec
mov
xchg
fldl
mov
cmpsl
mov
cmp
ret
repz
lret
sbb
add
push
mov
mov
idivb
and
push
enter
lea
and
cmp
clc
cltd
call
stos
loopne
pop
lret
and
jg
vpsraw
pop
inc
call
rep
mov
mov
sarb
or
addr16
push
mov
dec
imul
sub
mov
mov
fdivrs
push
out
ljmp
push
mov
jae
xchg
mov
aam
mov
xor
movsl
xchg
pop
cwtl
or
push
pop
cmp
ror
fs
mov
in
repz
lahf
inc
sub
cmp
bound
lcall
mov
inc
subl
lahf
enter
test
test
out
imul
mov
and
fiaddl
cld
adc
clc
in
xor
pop
sahf
sbb
add
pop
test
cmpsb
mov
pop
push
in
ret
fwait
push
fwait
sbb
pop
bound
and
inc
lock
sbb
test
test
jne
mov
push
or
mov
mov
jp
mov
ljmp
push
xlat
mov
lds
inc
mov
ret
filds
add
push
imul
cs
sub
cwtl
pop
insb
gs
xor
push
mov
xchg
mov
xor
std
pop
aas
nop
out
or
fiadds
loope
arpl
ds
mov
add
ret
or
push
sub
mov
popf
jp
cmp
push
movsb
dec
or
mov
sbb
cwtl
push
andl
mov
inc
int3
test
ds
int3
repnz
xorb
inc
ret
pop
pop
fsubs
xor
add
popa
sbb
jo
mov
sahf
pop
aam
sub
jp
adc
inc
sub
imul
adc
outsb
ret
out
xor
sub
les
negb
jne
and
inc
jnp
jg
jo
xor
mov
xor
mov
pop
pop
mov
ljmp
add
inc
out
xchg
cmp
mov
out
ret
cmp
lahf
sbb
xchg
inc
outsb
sbb
into
fcmovnbe
and
mov
sub
test
push
push
es
dec
insl
jns
lds
je
cmp
mov
imul
fucom
ret
cwtl
jmp
jmp
daa
lods
arpl
add
and
cltd
xlat
dec
sub
xchg
adc
aam
out
pop
lahf
dec
cmp
or
addr16
xor
fisubl
gs
xor
jmp
pushf
fstpl
fcomip
adc
adc
push
popl
call
rcl
mov
mov
subps
out
adc
mov
and
adc
les
js
fdivl
xchg
mov
jge
test
data16
int3
cli
xchg
ss
xchg
test
es
out
jno
mov
push
push
sarl
push
pop
ljmp
shlb
push
hlt
add
bound
or
adc
test
and
push
inc
mov
adc
leave
xor
cs
out
lcall
dec
inc
pop
push
xchg
into
scas
xor
xor
mov
dec
mov
push
jne
roll
fs
lods
dec
daa
mov
inc
sbb
pusha
ficoml
xchg
jl
scas
push
sti
repz
in
shll
add
sub
ret
pop
pusha
xchg
jle
sub
mov
dec
add
mov
xchg
clc
fisubl
es
mov
pop
pop
push
xor
loope
adcl
and
dec
pop
ror
sub
mov
dec
mov
xor
xchg
pop
xor
inc
in
xchg
xchg
adc
push
test
ja
enter
add
es
fiaddl
jge
cmp
and
mov
pop
outsb
cmp
mov
mov
mov
inc
test
frstor
mov
push
xor
push
iret
or
lea
add
xchg
jge
inc
and
pop
test
cs
loope
lea
cmp
imul
sbb
inc
or
test
ds
jle
or
arpl
idiv
cwtl
jnp
mov
inc
push
adc
je
mov
push
stos
cli
sbb
add
aaa
jnp
adc
lods
cmc
sar
data16
or
outsb
adc
or
imul
cmp
les
pushf
push
fidivl
pop
rcrl
or
jb
sub
je
push
sti
inc
inc
das
mov
test
test
test
mov
cltd
jge
and
dec
and
cmpsb
mov
sbb
shrl
stos
adc
mov
or
shl
aas
pop
and
stos
dec
mov
mov
in
inc
fcmovbe
movsb
rep
ja
in
and
fcomps
push
and
mov
les
mov
cmp
iret
imul
adc
dec
rolb
mov
sbb
push
test
pop
or
push
aam
xlat
stos
jmp
gs
sbb
mov
push
inc
xchg
pop
mov
std
icebp
lret
adc
test
mov
fwait
cmp
out
inc
sub
jns
in
mov
jp
or
mov
dec
stos
add
mov
add
fcoms
loopne
mov
jg
enter
mov
mov
dec
mov
gs
das
mov
or
inc
or
adc
aas
sarl
test
xchg
sahf
data16
push
call
mov
xor
adc
pop
es
or
xchg
mov
imul
inc
pop
xor
ret
insb
imul
cmp
fs
mov
pop
cltd
mov
add
cmc
div
ja
or
jge
pop
hlt
int
loope
mov
pusha
cmp
mov
xchg
inc
or
or
addr16
rorl
shlb
cwtl
vandnps
aas
or
mov
push
jb
inc
cwtl
jg
mov
xor
int
mov
mov
cltd
dec
mov
fcomi
rorb
clc
sbb
lret
dec
hlt
ljmp
xor
xor
push
jb
decl
cli
fisubrs
js
push
xchg
mov
in
lea
or
imul
push
cmp
mov
incl
js
insb
adc
int3
or
dec
xor
jb
ja
cmpsb
pop
jmp
in
icebp
jecxz
xchg
jno
xor
xchg
mov
sub
in
popf
xchg
xchg
inc
xchg
jp
pop
rolb
mov
rclb
insb
jge
mov
adc
sti
push
fucompp
pop
xchg
mov
adc
out
xchg
ret
or
cmp
out
fwait
mov
inc
dec
sub
xlat
dec
loopne
lods
test
mul
push
mov
jle
lahf
decb
rcrb
and
roll
inc
lea
xchg
mov
push
push
dec
jne
sub
out
xor
dec
push
mov
add
jge
xchg
cmp
out
mov
repnz
adc
xor
push
and
jbe
outsl
or
xchg
pop
aas
adc
adc
scas
pop
aas
ret
in
clc
andl
rcll
adc
fdivrl
push
mov
lcall
sti
fldenv
iret
insl
xlat
mov
jle
xor
aad
std
sti
enter
dec
int3
sbb
cmp
sbb
imul
xchg
sbb
or
mov
mov
je
sti
pop
inc
test
dec
test
mov
pop
shll
in
div
mov
pop
adc
inc
sahf
cltd
push
jns
cmp
rcr
lea
subw
jb
sbb
add
into
in
call
jle
push
call
lea
xchg
lret
aam
clc
cli
cmp
movsb
cmp
icebp
xchg
xchg
loop
in
xor
pop
cs
mov
pusha
inc
push
test
push
fisubrl
ret
inc
jmp
sahf
daa
sarl
dec
test
sbb
sbb
int3
xchg
imul
push
and
jns
push
jo
test
adc
mov
sbb
pop
jle
lds
push
stc
pop
xchg
and
or
xchg
rorl
ljmp
pop
dec
nop
in
mov
shll
inc
icebp
sbbl
in
xchg
push
inc
mov
cmp
xchg
fdivp
sub
add
repz
pop
lcall
mov
jno
ds
xchg
mov
imul
pop
adc
push
add
call
inc
or
pop
mov
call
sub
movsb
shlb
mov
repz
lcall
or
ficompl
inc
and
cmp
sub
mov
cmp
ret
push
pusha
sbb
enter
mov
inc
pop
pop
mov
xor
jmp
in
pop
out
out
jnp
dec
pushf
dec
sti
lret
adc
lock
xor
nop
or
mov
push
test
inc
jmp
roll
ret
stc
ds
push
ret
dec
test
dec
sub
push
hlt
inc
add
dec
xor
xor
fwait
xor
leave
fimull
ffree
cmp
roll
cmpsl
xchg
cltd
mov
inc
jb
shlb
lods
inc
loop
jecxz
ljmp
push
jmp
call
adc
sbb
ds
inc
movsl
lret
dec
lahf
pusha
and
xchg
out
jns
xor
fstpl
mov
cmc
jae
pop
pop
adc
leave
push
aam
ficoms
push
push
jno
sub
ds
and
cltd
sarl
mov
jne
or
cmp
sub
std
dec
sbb
mov
daa
cli
dec
leave
pminub
addr16
arpl
mov
sbb
push
jl
xor
mov
xchg
fidivl
jle
notl
dec
inc
fwait
outsl
jb
movsb
sub
outsb
ja
dec
mov
out
push
jmp
inc
cmp
loopne
inc
jg
lds
enter
xchg
jno
fmul
lock
cld
shl
repnz
cld
out
shr
pop
inc
mov
rcrl
xchg
mov
fisubl
add
mov
lock
out
scas
insb
inc
shll
aaa
outsb
sbb
mov
cmp
or
rcr
int3
and
aas
or
loop
mov
xchg
js
stos
int3
into
sub
mov
push
addr16
aas
lret
rcll
outsb
mov
test
jo
test
mov
sbb
xor
dec
sub
ret
daa
or
sub
jmp
ja
jle
aad
xchg
pop
push
das
cmp
rorb
fcmove
sub
add
scas
cmp
aas
xchg
enter
inc
push
jo
shlb
mov
pop
test
fs
das
push
sub
mov
mov
mov
bound
pusha
aaa
scas
in
aas
movsb
scas
cmp
cmp
add
dec
shlb
pop
shlb
push
addr16
into
push
rclb
dec
scas
leave
int3
xchg
out
cwtl
pop
dec
jo
inc
test
iret
ret
cmp
lea
in
inc
push
jb
fstpt
pop
mov
cmpsl
outsl
jb
clc
jne
xor
jg
rclb
adc
mov
lret
loop
mov
into
adc
sbbb
into
push
push
sbb
stos
mov
pop
dec
sub
xor
rcrb
push
fidivl
fisubrl
icebp
clc
jg
mov
mov
mov
loop
int
pop
adc
subl
ja
leave
popf
and
xchg
dec
subl
fidivl
cmp
adc
dec
xchg
rcrb
lahf
pushf
push
dec
lret
or
fs
fcomps
jp
dec
mov
loop
int
cmp
mov
or
cli
inc
aam
mov
shlb
in
or
ja
xchg
mov
test
dec
pop
cmp
inc
ds
data16
mov
inc
out
pop
push
inc
shll
pop
cmpsb
int
ljmp
jl
xchg
dec
and
rcrb
repz
mov
in
fnstenv
jne
mov
dec
jle
pusha
and
pop
or
mov
call
movsl
stos
or
loop
mov
add
inc
ljmp
xor
xchg
sbb
sub
out
jne
xor
in
pushf
mov
jl
mov
sar
popa
cmpsl
clc
popa
scas
sbb
push
cli
or
push
fs
pop
pop
mov
pop
frstor
push
xchg
adc
mov
aam
xchg
push
xor
ljmp
cld
jbe
adc
in
lods
jmp
mov
sub
mov
nop
push
scas
push
and
jo
jmp
daa
xor
mov
jbe
pop
and
cmpl
or
out
xchg
inc
scas
out
outsb
push
lret
or
or
mov
mov
fistpll
pop
lods
scas
sahf
xchg
out
bswap
mov
jle
int3
ds
inc
inc
lods
jmp
dec
jmp
lcall
and
arpl
xchg
xchg
mov
xchg
xchg
add
add
mov
pop
cmpsl
xchg
and
cmp
mov
out
add
popf
int
dec
mov
or
ret
and
sub
inc
pop
xchg
pop
mov
jg
cld
into
cmp
and
test
mov
mov
bound
popl
cmp
mov
or
scas
ficoms
push
sarl
fnsave
cmp
les
pop
daa
and
mov
mov
stc
and
in
and
adc
xorl
dec
xchg
mov
cvtdq2ps
push
sbb
call
push
aaa
das
popa
dec
cmp
sub
xchg
xchg
out
push
jl
andl
lods
dec
push
push
data16
mov
mov
lods
add
or
pavgw
aam
aad
sub
and
jge
mov
and
push
sub
imul
mov
scas
mov
xchg
cmp
xor
insl
enter
jo
out
add
shlb
pop
add
xor
js
sub
mov
sbb
xchg
sahf
xchg
xchg
mov
sbb
push
fisttps
sub
xor
lret
and
cwtl
orl
scas
pop
jno
jns
pop
mov
adc
out
cltd
sbb
pop
xchg
arpl
lds
dec
xor
std
addr16
addr16
shll
das
stos
pop
dec
mov
pop
fsubp
mov
sti
cmp
mov
dec
mov
add
or
mov
call
xorb
or
leave
jmp
andl
stos
scas
mov
hlt
mov
mov
rcrb
and
jnp
xchg
inc
mov
pop
jle
loop
sbb
lret
out
fistps
cmpsl
add
pop
lods
and
ret
enter
repnz
lret
sbb
jnp
mov
adc
das
call
inc
fistpl
pop
aas
aaa
je
pop
push
push
and
loope
or
lret
outsl
xchg
shrl
jbe
jg
xchg
inc
loopne
and
sub
dec
adc
ret
pop
cmp
iret
push
inc
mov
cmpsb
push
aam
adc
imul
int
iret
inc
mov
push
int
jne
xchg
ficoms
mov
aaa
pop
jbe
inc
imulb
add
pop
mov
xchg
loop
aam
std
add
fs
das
dec
mov
pop
ja
loop
and
fisubrl
shrb
loope
out
aad
pusha
ret
jle
inc
dec
cs
inc
imul
push
leave
inc
jl
cmp
inc
and
sub
xor
leave
nop
jge
loop
jecxz
test
std
rorl
jle
jnp
test
mov
jae
mov
sbbb
sub
jle
int
test
stos
mov
push
jae
std
add
out
add
mov
sub
dec
insb
stc
add
int3
xor
imul
aaa
dec
inc
inc
cmpsl
aam
pushf
sub
fdiv
pop
lcall
subl
push
or
pop
arpl
cli
dec
js
es
xchg
jmp
paddsw
mov
xchg
mov
jmp
push
push
roll
push
arpl
clc
sbb
inc
js
push
jbe
daa
inc
and
cli
hlt
int
fisttpll
jns
gs
addr16
jg
inc
jg
aas
loope
or
sbb
cltd
xchg
in
ficoms
popf
int
fnstcw
adc
jg
mov
scas
in
push
cmp
dec
call
mov
dec
add
fidivl
outsl
adcb
repz
jg
es
fildl
enter
rolb
mov
enter
mov
dec
fadds
xor
pop
lods
je
inc
clc
push
out
test
jle
sub
clc
test
sub
jns
rorb
call
push
push
or
cmp
ss
mov
aaa
pusha
sbb
push
jl
push
add
je
cltd
cmpsl
xor
stos
cmp
push
sbb
push
inc
scas
pop
adc
outsl
mov
fistps
cmp
loop
test
outsl
push
neg
mov
gs
lds
or
fisubrl
lret
mov
or
and
ds
xchg
cmpsl
shll
loopne
inc
xchg
leave
dec
insl
mov
sub
mov
cwtl
pop
dec
sub
add
sbb
mov
loope
adc
dec
adc
cltd
std
out
push
inc
xchg
xor
sti
xlat
iret
into
lods
inc
ljmp
ja
mov
insb
in
shrb
cmpsl
cmp
outsb
outsl
mov
push
jg
imul
std
lods
and
scas
or
je
scas
add
imul
int3
dec
cmp
mov
inc
jle
or
push
push
and
loop
jmp
pop
xlat
movsb
jb
in
aas
dec
inc
es
add
rolb
jnp
jmp
sub
lcall
fwait
pop
test
dec
xor
les
mov
inc
pop
jmp
lcall
push
xchg
insb
fs
dec
imul
xchg
in
sbb
stc
lea
pop
nop
shrb
cmpsb
lea
push
and
lahf
outsl
cmp
sahf
cmpsb
rorl
sub
popa
test
stc
mov
dec
dec
lahf
fdivs
aam
sub
jo
aam
shl
jge
cmp
insb
call
mov
jl
roll
ficoms
mov
cmp
mov
xchg
cmp
mov
jb
cwtl
sbb
mov
cmp
in
dec
inc
sub
in
sbb
in
lret
sub
test
push
loope
stos
in
addb
push
xchg
and
jb
mov
xor
lds
ss
sbb
out
cmp
xchg
push
fistl
push
jecxz
push
mov
in
push
lcall
sbbl
lahf
shlb
fadds
pop
orl
inc
jo
cmp
mov
loopne
push
mov
jmp
pcmpgtb
fmull
dec
xchg
push
mov
pusha
and
loope
shl
add
sub
in
sub
xlat
cmpsb
xchg
or
int
cli
js
push
fimull
fisubrs
pop
mov
cld
jns
das
xor
push
xor
adc
jle
aaa
lret
dec
inc
sbb
cli
xorb
add
sub
lcall
adc
loope
sbb
ljmp
sti
or
sarb
addb
and
xchg
testl
scas
arpl
mull
mov
lods
ds
mov
adc
dec
cmp
shld
inc
cmpsl
sub
cmpsb
and
enter
sub
fs
std
xchg
sbb
das
jae
mov
out
inc
mov
sub
mov
mov
mov
loopne
shll
or
test
test
and
inc
das
and
aad
lret
idivl
imul
sbb
xor
repnz
rcrl
xor
xchg
fstps
clc
int3
andb
sbb
repnz
das
mov
mov
and
and
ret
call
mov
push
sti
sbb
dec
and
xchg
cld
sbb
dec
insb
push
jae
cmpsb
mov
jg
mov
fs
repnz
push
push
jb
jge
nop
test
cmp
mov
mov
pusha
jns
in
inc
dec
paddw
ss
je
faddp
in
jo
mov
pop
int
sbb
gs
pop
dec
pop
or
adc
push
push
clc
pusha
add
cwtl
loop
pop
xorb
add
dec
jp
jo
xor
repnz
jle
pop
mov
hlt
iret
mov
push
jb
insb
pop
add
sub
cmc
into
iret
das
popf
adc
into
imul
test
add
pop
pop
pusha
cmpb
imul
icebp
dec
push
orl
dec
insb
jg
leave
fnstcw
cs
mov
outsl
pop
loopne
imul
cmp
fildll
sbb
adc
loopne
and
inc
push
sub
mov
jge
es
test
jae
lahf
cli
ja
shrb
shll
int
cmp
iret
mov
gs
add
cld
and
dec
decl
xchg
or
xor
test
leave
push
ret
jle
fs
and
and
lock
inc
lahf
cs
cld
rorl
leave
je
dec
movsb
aas
cmc
xor
sub
inc
js
push
mov
dec
mov
cmp
and
test
dec
cmc
lret
sub
dec
mov
aas
push
incl
rcr
ficompl
outsb
push
mov
mov
inc
roll
pop
dec
cwtl
mov
adc
test
inc
lods
fwait
pop
out
xor
push
xchg
sbb
int
call
mov
jae
jg
cli
aas
add
movsl
fnstsw
push
sbb
test
push
aam
jp
inc
adc
mov
cmp
dec
mov
mov
jp
fdiv
lcall
add
cmpb
out
mov
test
mov
imul
sub
xlat
negl
jno
jp
mov
pusha
jno
insl
push
pop
and
adc
sub
jg
xchg
out
push
jo
lret
push
out
inc
lret
mov
stos
jbe
rorl
dec
jne
ja
ja
or
mov
ja
stos
rorb
dec
adc
push
xor
sbb
cmp
sub
aad
out
mov
mov
testb
push
and
mov
pop
push
and
add
cmp
push
in
xchg
mov
hlt
imul
xbegin
clc
arpl
clc
jae
roll
movsb
push
dec
jns
mov
inc
cli
stos
push
imul
or
insb
jno
mov
push
cwtl
sub
pop
adc
je
mov
mov
aad
repz
mov
pushf
mov
jg
dec
mov
pop
sub
fidivrl
ss
or
in
in
stc
pop
pop
xchg
aaa
adc
cmp
or
jb
add
cltd
orb
sbb
psubw
push
push
imul
push
fmull
fs
xor
cli
mov
lds
cmp
adc
xchg
fidivs
dec
inc
adc
or
insb
xor
mov
lcall
popf
pop
mov
scas
loopne
mov
mov
jno
adc
dec
fisubrs
adc
pop
sub
push
imul
movsb
mov
push
xchg
pop
cmp
lds
into
mov
insb
xchg
xor
gs
cltd
ljmp
outsb
dec
dec
sbb
fwait
inc
sub
add
lock
jmp
pusha
pusha
sysenter
mov
cmp
negb
jle
into
shlb
xchg
mov
pop
in
jo
rcrl
push
cmpsl
lods
leave
and
mov
push
mov
cmp
mov
cmpsl
inc
xor
int
daa
cmp
adc
dec
jecxz
iret
push
pop
jge
jns
ljmp
lds
xchg
cmp
xchg
xchg
pop
cli
push
adc
mov
jb
pop
mov
sub
outsb
jb
lds
rcll
jecxz
pop
mov
mov
ret
imul
rcrl
rolb
or
and
rol
mov
rcrb
jo
mov
xchg
inc
inc
and
into
popf
sti
jg
dec
cs
dec
jo
lods
push
lahf
sub
mov
rcll
enter
push
js
inc
pop
popa
sub
je
cmp
jl
loop
sbb
iret
sbb
sbb
lcall
int3
dec
adc
int3
leave
xlat
addl
repz
popf
out
std
mov
aaa
mov
jle
lahf
insl
repnz
jle
aaa
or
cmpsb
xor
sahf
mov
xor
loopne
dec
rclb
test
cli
fdivrs
test
fnstsw
mov
sub
cwtl
int3
cmp
pusha
fisttpl
test
mov
push
dec
les
add
lds
add
dec
xchg
xor
mov
pushf
push
orl
addb
loopne
je
sbb
jg
sub
fldt
or
daa
shlb
aaa
dec
cmp
inc
jo
fsubrs
fdivl
add
into
int
pop
add
xor
rolb
pop
pop
aam
enter
lcall
cmc
dec
xlat
cmpsb
cwtl
pop
fiadds
jns
outsl
xchg
dec
repnz
sbb
push
push
push
divl
into
cmp
and
addb
lods
fmuls
loopne
sub
xchg
or
test
in
das
clc
test
data16
ljmp
lds
mov
mov
lea
push
fldenv
dec
cld
or
or
dec
call
adc
or
inc
xor
lock
stc
scas
cmp
insl
and
loopne
out
cltd
xchg
cmc
pop
pop
fsts
rolb
fsubrl
loope
outsb
aam
je
ds
mov
pop
dec
outsb
leave
repnz
leave
push
push
je
add
roll
sbb
push
ret
xor
xorb
jl
xor
dec
js
inc
push
push
or
ss
xchg
mov
repnz
into
int3
arpl
push
cmc
mov
cld
fstps
in
in
fs
jg
mov
xchg
call
aaa
push
sub
scas
test
scas
jbe
pop
xchg
je
jnp
dec
cmpsl
cmp
cmpsl
pop
mov
aas
adc
and
lock
popf
addb
mov
mull
inc
addr16
sbb
xchg
fwait
xchg
xchg
test
js
loopne
cmpsl
sbb
cli
sbb
mov
sbb
outsb
in
jb
loope
out
pop
sub
inc
popa
popf
pop
mov
cmpsb
fbld
jne
mov
outsb
inc
out
pop
and
repz
in
int3
loope
scas
mov
jno
jecxz
xlat
jecxz,pt
es
jns
mov
ss
push
ret
idiv
outsl
cmpsb
mov
sahf
aas
dec
mov
mov
xchg
ja
cmp
pop
cmp
pusha
orb
push
xor
dec
cmpl
inc
push
dec
pop
les
fisubs
push
adc
ret
je
xchg
sbb
mov
lcall
or
sub
and
addl
aad
cmp
enter
and
pop
repnz
dec
dec
xchg
popa
loop
or
mov
scas
cmp
orl
jmp
enter
sub
and
dec
adc
xor
and
push
jb
push
mov
mov
test
aam
jb
dec
loope
adc
movsl
repz
push
test
daa
popa
jmp
jnp
sub
int3
adc
ljmp
fcomps
mov
or
nop
or
shrb
push
mov
mov
test
insl
xchg
subl
push
adc
fmull
icebp
mov
daa
lcall
xchg
jbe
sub
inc
sbb
sub
int
icebp
xlat
ds
inc
outsb
push
jl
mov
cs
data16
add
sbb
lahf
popl
lahf
shll
add
dec
jnp
cmc
cmp
pop
faddp
or
xchg
mov
pop
cwtl
fs
rcrb
shrd
adc
fcoml
fisubrs
adc
cmp
cmpsb
bound
push
js
add
loop
push
jo
stc
push
icebp
shrb
repnz
xchg
leave
cmp
cmp
jae
mov
cmc
and
cmp
movsb
mov
cld
data16
sbbb
aam
sub
adc
or
movsl
call
push
jns
in
mov
mov
inc
inc
pushl
inc
andb
add
xor
pop
mov
daa
dec
xchg
bound
enter
and
xor
pusha
push
out
inc
xlat
pop
pop
cs
and
sub
sub
mov
push
jge
imul
loopne
jbe
lahf
jo
pop
ficomps
inc
insl
js
cmpsb
and
push
out
pushf
cmpb
ret
mov
std
dec
cmp
adc
test
jae
popa
dec
mov
mov
adc
imul
add
jl
xorl
sub
xchg
out
mov
in
push
outsb
icebp
jnp
mov
push
enter
sbb
cmp
repz
mov
imul
jl
lret
stc
pop
jns
pop
cs
das
sbb
lahf
cmp
sbb
push
loope
xchg
xlat
add
daa
std
xor
lods
out
push
movsb
hlt
outsl
iret
or
ljmp
cltd
lcall
das
mov
dec
push
mov
aaa
loop
das
sti
std
and
jo
js
pop
dec
mov
xchg
cmc
inc
jl
out
lds
stos
and
leave
int3
nop
testb
adc
lods
jmp
rorl
add
and
daa
push
jae
jae
mov
adc
cli
bound
scas
lods
scas
ljmp
xor
outsl
push
aam
aad
addr16
pushf
lret
addr16
orl
mov
jae
in
lret
push
mov
subl
jecxz
lahf
repz
movsl
or
sub
repz
xor
dec
ljmp
jne
test
sub
enter
out
jge
xchg
xchg
xchg
dec
push
insl
mov
imul
push
insl
xor
inc
pop
push
dec
sub
imul
aad
je
ret
nop
push
andb
xchg
dec
test
ds
mov
lods
shll
sahf
xchg
and
mov
dec
inc
jne
xchg
push
shl
sub
pop
adc
push
out
rcl
xor
shlb
add
imul
fimull
call
int
dec
xchg
and
adc
jle
stc
jg
jl
inc
hlt
insl
cmp
shlb
dec
popf
jnp
push
push
lahf
or
or
lret
sahf
pusha
in
pop
es
call
cmp
sarl
push
iret
repnz
ds
dec
scas
cwtl
inc
arpl
loop
rorb
mov
mov
jg
or
mov
jne
ret
aas
pop
and
adc
dec
or
xchg
mov
stos
push
subb
xchg
cmpsb
mov
jbe
addr16
movsb
rolb
mov
test
ret
sbb
arpl
lods
inc
adc
ljmp
enter
xchg
rolb
pop
mov
and
inc
cs
or
shll
ljmp
std
sbb
or
xchg
js
or
add
push
js
cmpsb
xor
jno
dec
mov
jns
les
pop
stos
xchg
sub
sub
addb
add
mov
adc
jle
roll
fst
test
insl
or
popl
add
sbb
into
fwait
mov
cmpsb
faddl
push
psrlq
paddd
dec
sub
test
cld
xlat
shr
insb
out
pop
lret
pop
dec
fimuls
xchg
pop
pop
inc
bound
jecxz
add
shr
rcr
fists
xchg
mov
test
jge
dec
cmp
rep
pusha
lds
lret
lahf
nop
pop
adc
mov
dec
mov
inc
sub
jns
fidivl
inc
mov
daa
or
xor
lea
lret
push
outsl
sbb
pop
xchg
roll
clc
add
cli
dec
ss
insl
cmpsb
push
jg
data16
pop
mov
arpl
cltd
pop
mov
je
dec
mov
lds
sahf
lea
pop
dec
jle
jg
data16
inc
jmp
pop
mov
pop
add
pop
inc
add
inc
scas
mov
sub
les
push
mov
pop
dec
rclb
or
pop
cmp
andb
sbb
mov
data16
dec
cmp
sbb
gs
decb
div
popa
push
jne
lahf
mov
push
cld
xchg
inc
xchg
js
ja
shrb
push
mov
ja
sub
or
xlat
pop
jno
shlb
add
mov
lahf
sbb
aas
push
or
in
add
rclb
jae
jmp
add
jl
jge
mov
sbb
add
push
xor
lock
cli
aam
arpl
ficompl
cmp
dec
sub
sbb
or
adc
pushf
jmp
xchg
movsl
sbb
add
into
ficomps
push
mov
aas
mov
mov
jl
pop
cmp
sbb
dec
lret
pop
out
dec
pop
sub
or
jp
or
test
test
mov
mov
in
jmp
sbb
mov
test
mov
push
je
leave
push
pusha
rclb
pop
adc
fcmovbe
inc
lcall
mov
iret
mov
jns
or
push
pusha
pop
lods
sahf
lods
push
mov
xchg
inc
repnz
lret
shrl
leave
hlt
cmc
adc
daa
icebp
gs
popa
lret
mov
popaw
xlat
insb
imul
mov
loopne
xchg
pusha
lea
adc
mov
and
add
aad
cmc
or
aas
xchg
in
lea
pop
sti
mov
enter
pop
pop
cmc
pop
ret
jo
pop
mov
sarb
mov
lret
or
and
lret
cmp
xor
in
jle
mulb
out
fsub
mov
pushf
popa
cmpl
add
xchg
or
or
cmp
enter
push
jne
xchg
call
ja
mov
xchg
mov
cld
in
lcall
loopne
outsb
mov
out
std
gs
lret
push
je
pop
mov
scas
sbbb
sub
lret
sub
or
subl
jno
cmp
inc
cld
es
inc
cmp
imul
gs
or
movsl
jno
das
adc
fcoms
imul
cmp
fldcw
push
adc
scas
mov
insl
jl
pop
mov
push
cmpsl
icebp
lea
mov
cmp
push
cli
mov
dec
or
das
aas
std
mov
sahf
push
add
int
aas
cmp
and
jl
testb
mov
mov
push
lea
dec
jg
xchg
shll
xor
sbb
pop
jno
test
mov
jp
mov
js
pop
jp
push
push
push
insb
jmp
call
pop
or
jnp
imull
jbe
aam
lods
rclb
movsl
dec
push
test
xchg
ljmp
loop
les
or
and
dec
jge
pop
cwtl
lea
inc
add
cmpsl
sub
sbb
jl
jmp
pop
inc
cmp
pushl
sub
mov
inc
movsb
sbb
jb
dec
pushf
sub
rorb
sbb
xchg
cmp
psubb
xchg
stos
fwait
aad
movsl
mov
out
cmpl
inc
inc
loop
addl
push
mov
subb
cmp
xchg
gs
cmpsl
xchg
cli
jns
fs
scas
mov
inc
int
mov
push
mov
adc
mov
leave
out
stc
add
or
loope
sbb
sti
mov
inc
scas
pop
adc
repz
notb
stos
nop
dec
dec
mov
in
mov
and
cs
lret
scas
bound
jmp
js
leave
insb
sbb
and
pop
jbe
mov
popa
je
or
into
shlb
jge
xor
xchg
je
out
xor
xor
in
imul
ja
ss
pop
jo
or
addr16
xchg
inc
jnp
mov
dec
shll
or
xchg
je
or
into
mov
and
cwtl
ret
inc
or
adc
lock
test
inc
mov
inc
sub
inc
inc
sub
repz
cmp
inc
xor
xchg
cmp
sbbl
sbb
cmp
stos
int3
xchg
test
ds
jmp
pop
enter
shlb
lcall
push
lods
out
repz
inc
popf
sarl
mov
idivb
clc
push
xchg
int3
int3
jns
shll
jnp
fldt
xchg
stos
xor
pop
std
xchg
outsl
data16
rclb
loop
in
out
jns
inc
jg
push
mov
ret
das
repnz
es
stos
icebp
sub
push
mul
orb
cmc
fiadds
imul
icebp
push
sub
cmp
push
loope
loop
mov
js
popa
mov
daa
hlt
push
cmp
cwtl
sbb
xor
cmp
sahf
fbld
jecxz
enter
lock
repnz
pop
mov
int3
pop
mov
add
adcb
push
dec
stos
je
pop
xchg
jecxz
add
mov
daa
shlb
cmp
inc
sbb
inc
and
xor
bound
outsl
insl
dec
push
imul
sti
stc
cmp
push
dec
jb
xchg
adc
inc
mov
int3
in
jo
inc
je
movsb
shlb
pop
push
test
in
aad
pop
daa
cmp
ficoml
push
shlb
test
push
mov
xor
xor
ficompl
jge
dec
dec
jmp
add
mov
movsb
dec
out
or
int
sub
adc
scas
add
cmp
cmp
frstor
pop
mov
mov
jg
or
ret
out
test
stc
dec
xor
xor
sbb
dec
dec
ror
inc
ficompl
ficoml
cltd
mov
push
cmp
push
inc
stos
pop
daa
dec
push
loop
cmp
sbb
loopne
push
xchg
sub
repz
inc
test
out
xor
pop
shll
lods
mov
out
sbb
mov
fidivs
push
stos
test
leave
out
jmp
cs
int3
mov
mov
mov
cltd
xchg
mov
jp
inc
xor
push
push
xchg
sub
mov
enter
cli
mov
imull
and
loop
scas
testl
sti
daa
or
icebp
mov
inc
cld
sub
fists
jg
mov
mov
mov
push
push
sub
bnd
dec
fprem
xor
lret
dec
add
enter
dec
popf
and
lret
test
sub
mov
out
int3
mov
pop
add
jns
mov
mov
mov
arpl
pop
pop
mov
les
lret
mov
mov
sub
loopne
adc
pop
ss
push
sbb
rcrb
cmpsb
dec
mov
jl
pop
inc
repz
jp,pn
repz
or
push
pop
leave
subl
es
insb
mov
and
push
dec
fsubl
popa
pop
inc
add
push
xlat
xchg
cmpsb
push
cwtl
imul
insb
sub
scas
mov
out
movsb
mov
and
jl
jecxz
cmp
fisubl
jge
enter
test
les
pop
ss
xor
das
mov
sub
cmp
or
into
sub
fcompl
cmp
loop
cmp
adc
cld
dec
adc
xor
les
aam
stc
nop
std
dec
out
or
sarl
mov
data16
xor
sti
orl
dec
cmp
jle
jg
pop
sti
daa
inc
inc
test
xchg
pop
cmpsb
stos
popa
or
xchg
lahf
mov
clc
paddw
stos
out
and
push
pop
sub
fsubrp
movsl
and
pop
lea
and
lret
push
jnp
and
stos
mov
testb
movsb
outsl
inc
adc
push
shlb
pop
pop
rclb
sti
jae
add
ljmp
fsubp
or
push
notl
fsubs
xor
lea
loope
fisttpl
aad
callw
ss
cli
push
push
les
addr16
pop
push
jecxz
dec
inc
popf
add
sbb
arpl
roll
rclb
lods
ja
add
add
les
cmc
pop
dec
lahf
push
pusha
adc
mov
mov
mov
out
andb
mov
jns
xor
std
adc
mov
outsb
movsl
dec
add
pop
add
stc
js
lds
shl
mov
inc
adcl
in
inc
mov
test
jbe
mov
aad
inc
xor
or
pop
pop
cmp
lahf
and
push
sbbb
cld
scas
das
js
stc
cmp
test
add
pop
dec
dec
sbb
mov
insl
sbbl
mov
hlt
xchg
adc
je
in
fdivp
mov
stos
pop
sub
mov
lea
fists
mov
jns
mov
fcoms
or
cli
cmc
movsl
push
into
push
push
and
lock
enter
jp
fimuls
roll
leave
mov
inc
lods
cltd
cmp
mov
ret
loope
lahf
ret
xor
push
jno
test
in
cmp
nop
mov
xor
into
xor
and
and
ret
ror
xchg
jg
xchg
pop
dec
scas
test
add
and
mov
in
dec
adc
out
ljmp
fsubrl
add
jle
mov
cwtl
pop
sub
or
loop
fwait
lret
ja
jl
add
mov
stos
leave
pusha
decl
in
sahf
das
mov
mul
insl
jno
int3
clc
add
inc
cmp
imull
daa
cmp
repz
dec
mov
stos
test
cs
aas
roll
lret
mov
or
xor
jmp
insl
add
jecxz
addr16
lods
jp
jle
xchg
mov
fsubp
lods
ds
fistpll
cmp
and
fidivs
mov
test
pop
popf
jns
mov
push
xchg
idivl
bound
lret
cmp
imul
pop
sub
adc
fmull
cmpsl
cmc
ljmp
jp
gs
sti
xor
ss
mov
loop
out
adc
mov
mov
mov
mov
hlt
sbb
cmc
hlt
mov
mov
push
aam
push
inc
cs
mov
daa
sbb
mov
loopne
pop
mov
pop
frstor
jp
mov
mov
std
imul
sbb
scas
and
sub
adc
sbb
cmp
ret
fstpl
gs
and
jae
fsubl
sbb
loope
mov
and
call
sub
dec
lds
xor
inc
push
popa
inc
testl
scas
jns
and
and
push
jns
repnz
iret
ret
repnz
leave
scas
pop
xorb
out
scas
icebp
ficompl
cmp
rcrb
in
mov
sbb
mov
cmp
fstpl
or
jl
repnz
sbb
jns
lret
pop
xor
mov
push
cmp
adc
in
cld
jmp
lock
popa
inc
xchg
and
fninit
or
subl
mov
jae
lcall
lahf
mov
cmp
mov
lret
mov
fisttpl
shlb
mov
sbb
sbbb
movsb
pop
aaa
lea
fsubrl
fimuls
cs
or
push
xchg
push
jp
inc
ss
or
xor
clc
pusha
nop
leave
inc
pop
push
sbb
fs
addr16
xlat
and
push
xor
insl
push
adc
mov
test
mov
mov
cmpb
repz
notl
xlat
aas
int3
in
mov
jae
push
adc
push
hlt
sahf
push
sbb
scas
fsubr
adc
or
cmp
test
jp
xor
push
hlt
or
aam
popa
push
pop
aas
test
dec
imull
divb
aaa
xlat
mov
or
into
jp
dec
xchg
sub
sub
scas
pushf
int
jne
lock
jg
push
sahf
int3
xor
pop
loop
pushf
jecxz
push
push
mov
dec
inc
cmp
mov
add
or
outsl
mov
push
shll
in
xchg
rcll
mov
pop
xchg
push
cmovge
in
aad
roll
mov
leave
lret
pop
imul
mov
pop
xchg
xchg
inc
cs
sub
lds
jmp
mov
cmp
ret
push
and
mov
mov
pop
adc
idivl
sahf
inc
xlat
push
mov
cmp
xchg
out
cltd
add
or
add
mov
adcl
jb
gs
ljmp
pop
int3
add
fnstsw
pop
loop
jg
mov
imul
dec
xchg
push
lds
cmp
sbb
cmp
addr16
ss
shrb
sub
cmp
push
repz
inc
aam
jecxz
ret
xor
sub
pop
sbb
mov
sub
sti
dec
and
bound
push
mov
sub
dec
mov
ret
push
leave
jns
es
mov
pusha
shl
das
dec
repnz
xor
dec
test
cli
outsl
mov
testl
adc
stc
and
jg
pop
mov
out
sbb
pushf
movsb
in
jne
xor
and
movsb
ss
test
adcl
cmp
push
push
jge
stc
out
testb
sbb
pop
mov
lods
mov
test
into
inc
rolb
push
jp
int
test
movsb
sub
fsubrl
sub
lea
je
loopne
arpl
nop
cmp
inc
push
cmp
add
mov
lcall
jge
pop
ja
inc
call
mov
mov
mov
bound
jae
aam
sbb
imul
ret
jecxz
xor
movsl
std
outsb
xor
push
inc
lahf
fwait
cli
call
adc
sahf
popa
test
cmc
pop
repnz
jp
mov
loopne
and
fs
jne
push
mov
fcmove
add
fcmovnu
test
ds
jl
call
add
insl
out
mov
xor
pop
adc
aam
inc
cmp
mov
out
push
sbb
xchg
call
adc
bound
rolb
std
xchg
add
test
xchg
xor
iret
shrl
pop
inc
cmp
in
jnp
enter
mov
lds
jae
mov
cmp
insb
dec
push
xchg
xchg
test
adc
not
std
orl
xchg
adc
rolb
adc
dec
cmpb
popf
ss
andl
inc
popa
inc
stos
adc
push
push
bnd
gs
push
pop
and
into
cmc
mov
icebp
jbe
fstps
movsb
mov
xchg
sub
fbstp
cmp
cmp
aam
daa
push
add
aas
gs
dec
adc
inc
les
filds
out
dec
mov
jp
pop
lret
sti
mov
mov
mov
in
xchg
out
adc
lea
sub
dec
ds
jg
lds
mov
cld
es
shll
inc
fs
icebp
mov
je
xor
lds
sub
pop
push
leave
mov
sbb
sbb
nop
sub
sbb
mov
sub
adc
out
jne
or
lret
xor
ljmp
test
sub
mov
insl
mov
mov
push
cmp
lret
rcrl
js
loopne
push
xor
sbb
aaa
jb
push
mov
jno
pop
jmp
jns
mov
pop
subl
scas
or
mov
push
sbb
mov
mov
mov
mov
push
arpl
adcl
inc
mov
jge
or
jnp
repnz
loop
xlat
inc
loopne
sub
lcall
pop
push
stos
subl
fwait
jbe
add
movsb
and
lea
cld
mov
loopne
sti
mov
adc
dec
dec
fidivs
inc
scas
dec
out
fldt
mov
sbb
test
push
pop
inc
jge
je
js
sub
lods
or
jmp
dec
pusha
and
ds
in
sub
data16
fsubrl
mov
dec
lock
pop
mov
cmp
adc
clc
xor
push
and
mov
lock
cmc
mov
scas
dec
jmp
xor
in
insb
add
mov
mov
lret
pop
ljmp
inc
xor
jp
popf
inc
test
fs
mov
and
and
into
adc
sahf
das
inc
inc
pop
mov
in
sub
push
mov
mov
pop
mov
mov
fldt
push
call
cltd
add
div
pop
imul
push
lock
mov
lcall
push
movsb
mov
inc
mov
bound
and
test
cmpsb
insl
pop
push
inc
jp
xchg
es
sub
and
pop
test
push
movsb
xchg
mov
ja
xchg
in
adc
ficomps
leave
leave
or
cmp
and
shrl
ja
loop
mov
test
push
xor
lods
sbb
mov
xchg
pop
or
decb
and
loopne
stos
sahf
jp
xor
arpl
int3
inc
orl
scas
xchg
ljmp
cld
je
or
sub
adc
lods
stos
jp
ret
lcall
nop
decb
push
add
int3
mov
insl
int3
push
and
mov
jecxz
xchg
das
push
pop
loope
loop
test
in
std
mov
rcll
pop
ret
jge
push
cmpsl
out
mov
rolb
je
lods
cltd
mov
int
or
cmpsb
ficoms
loop
pop
std
enter
jae
lock
adc
inc
push
jnp
loopne
dec
inc
dec
fmull
sub
aam
fisttpl
or
fstl
cmp
sar
mov
mov
mov
mov
fcoms
loop
xor
or
sbb
mov
fiaddl
in
jle
fwait
add
jb
cli
adc
imul
pop
and
mov
lock
xchg
enter
lret
push
stos
mov
lcall
mov
aam
stos
rorl
mov
insl
imull
sahf
push
icebp
push
pushf
dec
or
cltd
popf
xchg
mov
mov
jno
sub
in
push
sub
mov
mov
test
loope
pushf
and
mov
fwait
add
arpl
aad
push
leave
xchg
or
sbb
xor
orl
std
ja
ret
sahf
mov
fildll
repz
les
clc
lods
stos
push
shlb
shll
sbb
cmpsb
lock
mov
xor
adc
cmpsl
jl
and
pop
mov
lret
bound
mov
mov
mov
loopne
jmp
addr16
pop
shr
mov
sbb
push
xchg
adc
lods
cli
and
cmpl
push
jmp
jae
ret
test
xor
addr16
clc
out
push
sar
hlt
pop
cmp
movsb
dec
scas
pop
inc
pop
addr16
aad
in
adc
mov
and
adcb
mov
scas
sti
inc
jo
scas
js
ret
iret
or
stc
andb
icebp
mov
add
push
sbb
imul
jno
xor
data16
jmp
imul
shrb
test
insb
pop
enter
ficompl
mov
outsl
mov
push
and
jecxz
mov
enter
movsl
faddl
jne
es
add
insl
lods
fs
movsb
jb
cmpsl
inc
lahf
cmc
cmp
dec
mov
inc
or
cmp
pushl
and
inc
popl
in
iret
outsb
jnp
nop
jmp
jae
jae
lea
aad
js
repz
adc
xchg
mov
push
call
cs
scas
cmp
xchg
popl
mov
adc
pop
ljmp
mov
popa
pop
pushf
and
cwtd
ja
pop
out
sub
sub
mov
loope
add
repz
in
pop
lcall
push
xchg
cmp
cli
sub
rorl
lods
mov
sub
out
test
lret
add
enter
xor
dec
xchg
sti
and
or
lea
out
sbb
and
ds
inc
fs
enter
loope
push
mov
jmp
xchg
repz
sbb
dec
nop
inc
mov
dec
cli
dec
fs
mov
popl
sahf
push
movsb
dec
sub
fwait
lds
xchg
mov
xor
mov
xor
mov
popa
lea
movsb
xchg
ficoml
rorl
roll
mov
dec
inc
sbb
mov
and
sbbb
sti
popa
fcmovnb
xchg
arpl
push
popa
sub
daa
imulb
jl
mov
sarb
push
cld
movsl
pop
int3
jmp
push
mov
popa
or
fwait
in
lods
aas
lock
push
pop
gs
push
fldt
sub
into
mov
addl
pop
out
mov
mov
into
jp
in
aas
movsb
cs
les
add
in
arpl
pushl
test
jg
pop
movsb
sbb
rorb
lds
xchg
xorl
jge
filds
int
bound
fisubrl
insl
mov
sbb
outsl
or
shll
enter
lea
push
lods
mov
loope
leave
jae
outsl
jle
fiaddl
subl
aaa
pop
adcb
and
neg
and
pop
xchg
lahf
pop
adc
ljmp
push
shlb
sbb
jg
ljmp
push
sbb
lret
adc
mov
adc
jo
cmp
cwtl
dec
popf
nop
pop
hlt
and
fiadds
fwait
mov
add
and
fwait
mov
outsl
mov
fsubrl
movsl
mov
cmpsl
add
scas
je
inc
push
rcl
sbb
jp
mov
jbe
lret
mov
fcompl
xchg
out
ds
push
lds
jno
movsl
into
adc
arpl
jae
jnp
fisubs
sbb
imul
xor
pop
mov
adc
or
lock
out
les
subl
add
ljmp
mov
mov
rcll
adc
aas
fisubs
or
fnstsw
test
jmp
sbb
lock
mov
add
push
std
cld
sub
jo
push
mulb
xlat
pop
cmpsl
mov
add
cmpb
inc
imul
into
cltd
adc
cmpsb
out
push
out
cmp
sub
movsl
mov
out
xchg
lds
mov
mov
mov
lds
js
or
pop
sbb
les
jbe
enter
lods
pop
jnp
mov
movq
xor
in
dec
dec
xchg
inc
loope
mov
jnp
fucomip
js
pop
jl
call
inc
dec
mov
fsubl
mov
mov
mov
cs
pop
jae
sbb
in
jle
mov
and
dec
popa
lods
icebp
jmp
xlat
in
movsl
ror
enter
outsl
sbb
mov
xchg
repz
pop
stos
xor
jbe
test
jno
mulb
dec
sub
jp
cmp
mov
roll
ret
jmp
mov
adc
xchg
fwait
pop
jmp
das
scas
jl
add
cmc
cmp
pop
mov
and
stos
mov
xchg
adc
popa
pop
fs
fsubrs
jnp
into
push
outsl
jb
rcl
fldt
mov
std
and
adc
lcall
push
xchg
push
xchg
xchg
xchg
out
ffree
cmp
inc
push
arpl
jb
push
outsb
mov
mov
sub
fildl
stos
add
out
arpl
and
movl
subl
mov
insb
or
mov
xor
pop
sbb
mov
pop
cmpsb
cli
lcall
lods
or
leave
daa
push
push
pop
jne
mov
push
fwait
sarb
jne
sbb
jns
iret
adc
ret
jnp
dec
int3
mov
mov
inc
jne
scas
adc
mov
jno
orb
pop
add
cmp
gs
dec
xchg
ss
add
or
jnp
outsb
rcll
mov
cmc
test
pop
adcl
lods
dec
ret
jmp
imul
test
pop
shll
scas
dec
out
pop
adc
xchg
in
dec
push
out
adc
imul
pop
in
or
mov
outsb
test
xchg
jecxz
xor
test
in
repnz
les
push
sarl
xchg
scas
sub
aad
test
into
cmpsb
mov
mov
xlat
je
dec
ss
xchg
adc
repnz
or
arpl
lock
das
xor
into
insl
stos
loope
or
jns
mov
mov
je
jl
fwait
cli
arpl
cmpsb
in
ljmp
popf
lahf
mov
out
push
mov
sbb
div
sbb
mov
shl
mov
mov
xor
out
cmc
sbbl
loope
clc
loopne
call
xchg
mov
xorb
or
cmp
mov
jge
aam
data16
adc
outsl
in
adc
hlt
loope
insb
dec
fwait
into
rcrl
fs
mov
push
sti
add
push
outsb
lods
dec
cwtl
jmp
ret
xchg
bound
fbld
repnz
cmpsb
xchg
sub
data16
pop
data16
scas
and
adc
cmpsl
sbb
or
cmp
pop
cmp
push
mov
out
push
int
push
repnz
push
orl
outsb
test
xor
cmp
out
mov
mov
loop
and
sub
call
es
aas
xchg
ret
popf
test
push
mov
xchg
xor
adc
sub
pop
cld
lret
jb
lcall
jo
add
xor
in
jmp
frstor
in
lret
sbb
sub
jnp
stos
sbb
or
mov
ljmp
int3
aam
pushf
mov
lock
icebp
orb
mov
subl
loope
ss
ss
push
xor
je
jp
fisubl
jmp
adc
fstps
insb
adc
arpl
and
and
jbe
or
lods
bound
adcb
cmp
ret
add
imul
jae
in
aad
pop
jle
push
adc
jno
cmp
out
add
les
arpl
shll
jmp
mov
inc
add
sub
negb
je
xor
mov
loope
lret
aas
mov
sbb
add
mov
xor
jae
out
hlt
sbb
repz
mov
xorl
lahf
ficoms
mov
jl
sbb
leave
int3
jl
and
xor
movsb
aas
mov
out
call
inc
and
sbb
sub
dec
pop
xchg
mov
rclb
scas
fsubl
push
jbe
jg
int3
lret
mov
add
sbb
fiadds
gs
mov
and
mov
add
out
jg
andb
sbb
jo
ja
inc
cwtl
sbb
xchg
jnp
sub
inc
add
bound
adc
sub
fs
pop
dec
test
lea
sbb
jne
arpl
xchg
jns
out
pop
sbbl
push
or
sub
clc
rclb
stc
int
jne
inc
rcrl
push
and
xchg
lea
mov
gs
repz
les
ljmp
or
cmp
adc
cmpsb
hlt
lds
push
mov
add
les
mov
fdivrs
sub
or
jmp
mov
xchg
mov
push
push
fdivrl
imul
sub
xchg
mov
fmulp
leave
in
inc
xor
je
or
in
rcl
rcrl
loope
pushf
pop
fisubrs
dec
cmp
adc
mov
leave
loop
mov
or
mov
pushf
sub
dec
xor
rorb
sub
inc
mov
mov
les
jecxz
arpl
fsubl
out
mov
outsb
cmc
stos
cs
inc
in
outsl
xor
mov
cmp
pop
lods
pop
xchg
mov
insb
lret
fildl
inc
mov
inc
inc
mov
repnz
fwait
call
pop
sub
push
test
mov
xor
inc
push
cmpsl
in
mov
cmp
ficompl
fistl
jnp
fwait
dec
inc
add
fcomps
adc
call
mul
dec
jb
daa
mov
jge
in
add
in
push
pop
sub
xor
fisttpll
fistps
movsl
cmpl
aam
inc
insl
js
rolb
int
lds
push
fs
xor
call
ret
dec
mov
add
xchg
push
push
mov
cltd
mov
mov
push
push
mov
rcll
or
sbb
outsb
mov
sub
sub
lret
ficomps
lods
pop
xchg
sbb
in
jg
out
push
pop
dec
fimuls
jno
test
cmp
mov
inc
cmp
adc
add
push
mov
adc
fwait
ret
test
enter
xlat
and
xchg
daa
cmp
xchg
and
jnp
std
add
int3
fs
int
leave
adc
push
lods
jle
inc
xorb
ds
sub
lret
inc
stos
sub
jne
popa
bnd
mov
mov
mov
mov
inc
or
push
jns
jns
mov
test
dec
fdivr
xchg
mov
aaa
lahf
mov
jge
aaa
dec
inc
xchg
push
and
mov
push
add
shll
stos
sti
push
sbb
mov
sub
push
cmc
stos
es
out
or
fsubr
push
les
cmp
jo
loop
inc
andl
bound
adc
mov
lret
in
mov
mov
xchg
in
aaa
jo
mov
push
dec
popf
mov
sbb
jae
jmp
xlat
adcl
ror
int3
sub
aas
fiadds
or
inc
xchg
test
cmp
xchg
mov
xor
cmc
cmp
scas
in
xchg
mov
cli
loopne
push
imulb
cmp
lods
sbb
das
xchg
pop
push
into
xchg
dec
xor
mov
adc
jg
repz
add
stc
call
nop
inc
pusha
mov
add
loop
not
add
sbb
nop
and
movsl
mov
repz
sbb
add
popa
xorl
insl
in
cld
movsb
push
mov
stos
hlt
add
scas
lret
dec
fsubl
jle
push
out
int
push
fldenv
jne
out
pushf
push
into
push
fildl
dec
out
imul
xchg
insl
push
xchg
ficomps
jae
stos
adc
outsl
adc
inc
hlt
push
insl
mov
jns
ja
mov
leave
cmp
xchg
mov
push
cli
jl
cltd
jecxz
pop
ljmp
sbb
and
pop
or
outsl
sub
stc
mov
dec
gs
xor
jne
shr
pusha
mov
mov
scas
stc
cmp
test
xor
rcll
sub
pop
fisttpl
leave
xchg
cs
movsb
push
jo
adc
push
and
lods
push
mov
and
pop
mov
jl
sbb
nop
imulb
scas
rolb
mov
and
jbe
fistpll
pushf
repnz
xor
les
ljmp
xor
inc
inc
repnz
ds
jb
adc
add
pop
lods
insb
and
mov
sbb
xchg
fistl
shll
pop
stos
jns
sti
loop
cmp
cld
cmp
mov
aad
add
add
das
pushf
out
movsb
pop
loop
and
push
ret
movsl
dec
inc
xchg
ficomps
sti
cmp
push
mov
cld
jbe
int
jae
or
stos
out
xor
fistps
ja
jo
call
inc
imul
jmp
out
cltd
mov
jnp
fdivp
shrl
jae
aaa
jg
fisubrl
sbb
in
mov
push
imul
outsl
mov
xchg
dec
pop
mov
shrl
adc
mov
in
loop
loopne
dec
jne
mov
into
in
xchg
rcrb
clc
das
xchg
mov
ret
ljmp
inc
rclb
fimuls
dec
or
add
fsubrp
mov
xor
pusha
xchg
jecxz
mov
clc
mov
cmp
mov
dec
imul
imul
sbb
aas
lds
push
int3
pusha
xchg
pop
int3
rorl
in
aas
add
in
je
xchg
adc
sbb
sahf
scas
out
sub
aas
lea
and
xchg
lds
test
flds
push
add
add
mov
mov
call
outsl
push
mov
mov
push
xchg
sbb
cs
sarl
pop
pop
sub
xchg
xchg
cs
sbb
xchg
adc
mov
insl
cmp
inc
cwtl
idivl
xchg
pop
popl
dec
inc
ljmp
lahf
cld
int
mov
adc
jnp
xor
das
inc
inc
les
mov
and
or
sbb
mov
fucomi
mov
and
xchg
xlat
cmpsb
iret
outsb
or
dec
push
inc
movsb
xor
in
clc
sub
mull
mov
out
push
mov
inc
xor
inc
push
jae
out
testb
aas
arpl
iret
ret
add
dec
mov
imul
or
pushf
mov
jg
mov
mov
xor
popf
adc
jl
out
jg
adc
ds
xchg
out
dec
or
sahf
sub
mov
iret
je
movsl
xchg
cld
nop
sti
mov
fcmovnb
sbb
mov
stc
lret
pop
lret
inc
cmc
scas
sahf
mov
stos
jl
lods
mov
divb
add
sub
lret
mov
mov
pop
mov
orl
aas
loopne
ret
xchg
jmp
les
dec
mov
hlt
or
sub
stos
clc
xor
mov
stos
inc
mov
mov
enter
cwtl
outsb
ds
mov
or
jg
mov
ljmp
and
loop
hlt
nop
dec
stc
ljmp
sahf
movsb
pusha
lods
popf
add
ljmp
dec
shll
pop
mov
es
sub
inc
int3
pop
dec
sbb
sbb
dec
pop
je
test
xor
out
dec
push
repz
stos
aas
fcomps
cmp
sbb
cmc
dec
xchg
xor
or
push
adc
fwait
inc
movsb
cmpsl
scas
sbb
lcall
test
jp
fstpl
mov
mov
and
jo
lret
sahf
mov
pushf
mov
mov
push
xchg
aas
dec
add
jno
shlb
sub
and
ret
es
adc
cmpsl
icebp
sub
jo
mov
lods
loopne
pop
les
pop
cmp
or
lock
lds
xor
mov
roll
ja
jle
lcall
xchg
sbb
mov
int3
adc
fcmovne
mov
xor
mov
mov
cmc
lods
xchg
scas
sbb
push
test
sub
mov
mov
fimull
jno
xchg
pop
ret
fadds
fnstcw
movsl
mov
aam
imul
mov
push
leave
pusha
or
xchg
loopne
test
in
mov
shll
jp
stos
ficompl
or
push
ror
cli
push
adc
xor
orl
dec
gs
outsb
push
addl
std
pop
movsb
addr16
jns
arpl
mov
cmpsl
sarl
stos
and
sbb
clc
lods
sbb
pop
fstpl
in
out
xor
xor
adc
in
mov
pop
andl
inc
sahf
or
push
and
adc
orl
jns
adcb
add
xor
add
or
cmp
pop
adc
lea
ss
stc
es
jns
mov
fidivrl
call
push
fs
in
pop
fcmovu
dec
test
lea
ficompl
mov
mov
ljmp
test
mov
adc
jns
adc
dec
insb
pop
repz
std
lahf
ja
xchg
or
adc
jp
mov
inc
adc
inc
push
ljmp
lea
mov
mov
out
or
popa
cwtl
jnp
into
je
push
sbb
gs
inc
mov
jae
popa
in
insb
in
and
and
int
xchg
les
xchg
dec
rcr
mov
stos
call
mov
arpl
adc
push
icebp
outsl
sub
bsf
shll
js
push
rorb
roll
test
fs
inc
arpl
stc
notl
movsl
and
sub
xor
in
sub
nop
int
sti
cmpb
jp
push
mov
jnp
sahf
add
push
inc
pop
cmc
pushf
roll
push
xchg
pop
hlt
stos
xchg
repz
in
loopne
bound
outsl
out
jecxz
outsb
mov
add
xlat
fldl
std
lret
dec
pop
cmpsl
pop
and
mov
mov
loope
jae
push
test
fists
jns
lds
lahf
add
stc
test
std
sub
imul
es
mov
sub
mov
xchg
aam
ljmp
mov
pop
push
lret
and
dec
pop
push
into
cmp
dec
cltd
pop
cmp
cmp
loopne
jne
jecxz
repnz
mov
dec
orb
push
rorb
test
js
pop
cmp
adc
jle
mov
xchg
xor
out
lock
xchg
push
and
das
outsb
pushf
sub
inc
sahf
pop
and
pop
jns
cmc
out
loope
cmp
xchg
mov
test
add
sbb
xor
pushf
push
sahf
insl
adc
shrb
addr16
jno
mov
pusha
pop
cmp
cmp
or
inc
jmp
pusha
sub
std
push
mov
std
or
fcoms
negb
mov
mov
jno
mov
fdivp
inc
pushf
mov
movsl
pop
jb
stos
popa
in
xchg
mov
fisttpll
pop
and
insb
mov
das
push
sub
pop
repz
pusha
jge
cmp
dec
mov
repz
rcr
add
mov
jnp
cmp
xor
les
js
adc
push
iret
mov
test
xchg
movsl
addr16
xchg
in
mov
insl
sbb
and
fdivs
repnz
pushf
les
sbb
xor
cmpsb
hlt
xchg
andl
xor
or
nop
in
iret
pusha
push
dec
dec
daa
outsb
rolb
fistpll
inc
xchg
clc
sbb
jbe
jl
lods
lret
pushf
lods
scas
mov
sbb
adc
add
sub
fdivl
cltd
mov
inc
mov
ja
mov
iret
pop
ja
sub
cmpl
and
mov
mov
cwtl
cmp
dec
adc
loopne
sub
lock
rcrb
push
pusha
xor
push
mov
mov
xor
stc
jno
add
adc
jbe
mov
and
and
fld
out
xchg
cmpsb
or
pop
sub
fbstp
mov
out
push
insb
sbb
push
lret
ja
pop
mov
sahf
lods
jae
pop
sbb
mov
fstpl
or
inc
adc
aad
mov
shll
mov
dec
xchg
call
xchg
decl
push
pop
ljmp
push
or
or
sub
mov
es
in
mov
sub
adc
ss
subb
mov
jl
or
mulb
movb
leave
jno
daa
push
fcmovnbe
jp
fucomp
xor
outsl
jmp
pushf
sahf
push
sahf
fcoms
mov
pop
push
or
dec
mov
bnd
int
sti
push
mov
test
mov
test
mov
jno
add
mov
push
div
in
push
aad
adc
and
pop
fdivl
sarb
push
jecxz
sarb
lods
rcl
ret
sub
pop
xor
adc
fldl
xchg
mov
push
rolb
mov
cmp
outsl
xchg
and
pop
je
aaa
inc
pop
dec
cs
jae
add
js
stos
clc
and
pop
push
jno
int3
cmp
jnp
inc
jge
outsl
jg
mov
cld
out
shll
movsl
repnz
and
call
ss
fadds
jl
dec
repz
stc
stos
out
ss
pop
cmp
inc
lahf
mov
mov
cwtl
fnstsw
jecxz
xor
sub
inc
mov
sarb
aaa
mov
adc
xor
jl
or
push
movsb
shll
cmpsb
pop
test
inc
repz
sti
fnsave
inc
popf
idivb
js
mov
gs
xchg
les
ja
pop
and
imul
adc
sub
int
popf
and
add
cmp
cltd
outsb
dec
and
loopne
int3
xchg
add
jp
adc
data16
add
outsb
xchg
lock
icebp
mov
add
in
jbe
inc
adc
sub
inc
cmpsb
cmp
lcall
mov
inc
jl
xor
dec
dec
out
push
data16
mov
iret
cmp
jb
add
mov
repnz
addl
pop
pcmpeqd
sbb
daa
and
inc
mov
xor
jnp
fmull
ds
mov
add
push
jb
mov
or
jmp
push
lock
xlat
mulb
cmpsl
mov
insb
ret
jae
rorb
mov
adc
inc
stos
addr16
fisttps
lods
pop
adc
sbb
jnp
lds
les
sub
inc
jecxz
mov
sbb
adc
fldz
insb
cmpl
mov
dec
int
cmpsb
mov
out
mov
sub
push
popa
inc
cmp
popa
in
aam
lahf
lahf
sbb
lds
ds
mov
push
mov
pop
lret
mov
add
or
cs
jmp
dec
inc
xchg
fwait
test
or
and
lea
mov
nop
mov
mov
xchg
jns
inc
cmp
nop
jecxz
cli
shrl
mov
in
dec
les
sub
adc
push
dec
lea
in
xchg
repz
mov
mov
pop
pop
mov
cmp
stos
jp
movq
in
fbstp
dec
add
add
pop
sahf
and
subb
sahf
sbb
jae
in
incl
mov
addps
lods
cmp
xchg
data16
fisubrl
pushl
out
push
xchg
inc
cli
cmpsl
ficoml
mov
stos
inc
rorl
mov
orl
jne
andb
cmpsl
and
mov
add
imul
movsl
loop
or
mov
repz
sub
outsb
dec
push
outsl
jns,pn
pop
divl
mov
dec
mov
mov
mov
in
cwtl
xchg
jo
in
stos
sbb
imul
inc
std
mov
inc
mov
out
repz
subl
daa
in
xor
xchg
pop
mov
lcall
or
shr
into
push
dec
test
push
sub
pop
lret
push
clc
push
xor
sub
xor
lock
hlt
sub
push
mov
sbb
xor
mov
popf
pop
ss
int3
pop
sub
dec
dec
sub
shrl
ret
std
xor
ret
movsb
adcl
iret
daa
pop
fnstsw
fisttps
lahf
cmpsb
dec
clc
cmp
pop
cmp
lahf
sbb
mov
cmc
xor
cld
hlt
das
loopne
sub
push
fwait
scas
pop
cmpsb
js
mov
add
rorb
dec
mov
add
xchg
std
nop
mov
xor
lret
lock
iret
and
pushf
sub
push
popf
test
pop
add
mov
adc
sti
data16
cmpsl
cmc
adc
mov
push
jno
lods
mov
add
movsb
adc
sub
cmp
mov
inc
pop
icebp
or
and
js
jb
call
adc
mov
inc
pop
mov
in
or
push
sub
test
jecxz
idiv
imul
pop
xchg
std
xor
icebp
test
sub
push
adc
xor
loope
push
test
in
sub
pop
sub
pop
or
mov
lahf
aas
fcoms
hlt
adc
jecxz
add
mov
cmp
and
jecxz
nop
ret
lea
stos
sbb
mov
call
test
stc
cmp
cmpsb
mov
ss
fcompl
push
mov
inc
enter
xor
cs
or
lea
enter
fldt
jecxz
adc
test
mov
stos
rcll
jno
nop
add
ret
mov
mov
lret
fdivs
pop
insl
inc
arpl
insb
test
lret
cmc
push
lods
out
sti
cmp
stos
imulb
xchg
outsb
xor
sti
inc
loopne
push
xor
and
push
adc
jns
popf
dec
cmp
cmp
ss
push
orb
mov
mov
sub
jae
dec
pop
adc
andb
add
cmp
mov
aaa
shl
push
das
fadd
out
mov
sub
dec
sti
sub
testb
ds
dec
fdiv
push
mov
ja
jecxz
andl
dec
add
adc
and
push
cs
inc
xor
insl
mull
movzbl
mov
icebp
mov
mov
cmp
aaa
pop
daa
jge
inc
push
adc
ja
sbb
push
push
sbb
push
incb
loopne
jle
sbb
or
pop
ds
fcompl
push
xor
fistpl
mov
push
mov
jne
sbb
inc
push
andl
push
jl
jne
mov
lahf
xchg
enter
push
mov
jmp
orb
mov
push
mov
mov
sbb
jge
mov
test
mov
inc
cmpl
adc
pop
jbe
inc
push
icebp
in
mov
lahf
stos
inc
or
outsl
mov
sub
repz
add
pop
xor
pop
mov
add
fisttps
and
lahf
stc
aad
and
xchg
leave
jg
fidivs
dec
imul
lds
sahf
sub
cmpsb
fs
inc
jo
mov
xor
in
pop
mov
jmp
ret
aam
pusha
int3
add
mov
adc
sub
pop
subb
repnz
mov
out
cmp
es
dec
nop
ds
cmpsb
movb
jae
pushf
jb
pushf
pop
lods
and
scas
mov
jne
daa
ss
lds
lret
mov
in
and
in
test
and
lahf
cmpsl
andb
sub
jle
push
outsb
mov
dec
iret
mov
mov
inc
push
pop
or
int
adc
push
fidivrs
call
mov
adcb
lret
sqrtps
and
sbb
jge
and
orb
mov
xlat
jecxz
mov
jmp
ret
lds
inc
outsb
xor
adc
mov
rcll
aam
int
mov
pop
push
loop
inc
in
repz
adc
mov
push
and
mov
mov
add
pop
adc
mov
mov
mov
xchg
shll
stc
jb
repz
cmpsb
mov
adc
sbb
sar
jl
cmp
sub
lock
loope
call
out
repnz
or
jo
push
imul
out
add
push
insl
or
jno
pop
jne
test
xlat
test
mov
cld
aaa
mov
cmp
jge
int3
mov
adc
dec
repz
arpl
sahf
and
repnz
xor
shll
addr16
xchg
jge
xchg
mov
cmp
lea
push
xor
inc
ja
movsb
aas
pop
ss
pop
outsl
jae
and
or
bound
mov
or
jbe
mov
sub
lock
nop
push
lea
int3
xor
push
inc
or
sbb
test
jae
xchg
adc
push
iret
mov
push
mov
jo
test
frstor
pop
mov
lahf
or
jns
and
notl
repz
push
or
and
mov
clc
pop
and
test
mov
dec
lods
xor
daa
mov
jns
jo
leave
xchg
movsb
shl
mov
sbb
cmp
test
ss
dec
xchg
loope
jo
pusha
icebp
inc
out
push
mov
adc
jg
mov
xor
pop
fldt
daa
ret
mulb
push
cmp
test
shlb
xchg
cmpsl
data16
loope
dec
or
loope
mov
push
pusha
popa
sbbb
loopne
pop
xor
mov
inc
mov
mov
fidivrl
sub
leave
cmp
mov
outsl
dec
aas
in
jecxz
fiaddl
mov
sti
jp
rorl
adc
mov
lret
xchg
add
sbb
addr16
jns
std
xchg
push
loop
mov
mov
or
cs
mov
ret
push
add
and
push
mov
test
and
mov
xor
xor
xchg
addr16
les
xchg
sahf
jle
lret
fistps
xchg
leave
test
cmc
jb
and
xor
xor
rcpps
lods
aam
into
stc
sub
push
enter
imul
or
cltd
xorl
jp
jmp
or
cmpsl
fdivr
cmp
pop
pop
mov
add
in
and
mov
imul
pop
stos
mov
add
in
sbbb
std
add
or
aad
dec
into
inc
mov
cmp
pop
out
outsb
dec
jp
cwtl
xor
jp
sub
jle
pop
test
push
scas
xchg
jb
into
pusha
icebp
fiaddl
sti
pop
adc
nop
fidivl
test
outsb
les
push
push
and
xchg
das
dec
repz
repz
test
jbe
pop
xor
js
aad
jno
ljmp
shrl
inc
cmp
xchg
insl
cmp
and
scas
mov
push
push
idivb
and
call
mov
pop
gs
push
xor
sub
sbb
dec
mov
and
inc
cmc
orb
pusha
adc
push
mov
mov
in
popa
pop
inc
jecxz
jb
aas
fwait
sub
and
cmp
xor
cltd
lret
outsb
and
mov
cmp
mov
je
xchg
sti
sub
jbe
rorl
shlb
cmp
xchg
cmp
outsb
mov
call
and
push
pop
jmp
inc
scas
insb
ficomps
mov
lea
fisttpll
stos
cld
cld
ret
push
pop
adc
int
mov
lods
in
mov
mov
hlt
pop
ficoms
int
ret
sub
sahf
jne
dec
xor
jmp
je
and
rcl
mov
std
outsl
xlat
sub
mov
push
push
jg
push
ljmp
push
sti
into
mov
jae
imulb
mov
adcb
std
jp
sbb
xchg
xlat
jmp
add
dec
sbb
pop
mov
mov
add
call
dec
inc
int3
mov
xor
add
sub
out
push
cmp
jb
push
mov
ljmp
sbb
pop
mov
mov
aam
ret
cmpsb
ds
xchg
xchg
cmc
shll
ja
call
add
aas
xlat
bound
inc
imul
dec
jnp
sbb
jmp
fnstsw
xor
movups
lcall
push
dec
loopne
pop
mov
xor
dec
pop
shlb
or
dec
pusha
insl
gs
out
pop
xchg
in
cmpsb
and
loop
sbb
dec
jb
fsub
fs
xchg
or
cwtl
sbb
add
addr16
xor
push
add
cli
lret
mov
and
mov
jp
pop
or
inc
hlt
sub
in
fmuls
adc
fsubrl
jno
ss
xchg
repz
inc
mov
cmpsb
dec
mov
mov
dec
dec
cmp
push
fsubrp
add
dec
shrl
in
pop
hlt
jle
arpl
in
mov
fcompl
mov
mov
push
xlat
push
ja
cmp
sub
mov
jl
call
mov
out
push
ret
sbb
int3
stos
fisubrl
mov
mov
daa
hlt
out
in
fildll
inc
sbb
push
pop
mov
jmp
cmp
inc
inc
hlt
sahf
call
ret
movl
inc
loopne
inc
gs
jnp
jg
jbe
pop
bndstx
ja
sub
call
popa
adcb
adcl
adc
int
pop
je
in
repnz
inc
xchg
xchg
add
mov
into
loop
fstps
mov
or
push
inc
sub
push
cld
mov
ja
xchg
in
test
dec
std
sbb
imul
jmp
loop
lods
dec
mov
ljmp
jmp
lret
push
dec
jo
and
je
std
adc
cmp
test
cld
dec
stos
mov
xchg
das
sbb
loopne
push
fwait
push
mov
popf
add
aam
add
xorl
je
push
dec
repnz
in
es
jle
mov
leave
enter
lret
mov
and
pop
dec
push
push
and
jg
sub
stc
jmp
jno
inc
addr16
fwait
ja
lods
mov
cmp
iret
adc
pusha
cwtl
jne
mov
lcall
adc
cmpsl
sbb
mov
xor
cmp
dec
jl
loopne
mov
xor
shlb
std
and
dec
loopne
sbb
xchg
lds
xor
or
test
pusha
fld
repnz
fldcw
mov
cmp
fnsave
or
cmp
xlat
popa
in
lret
fcoms
aad
jg
test
dec
jl
push
cli
nop
cwtl
inc
sahf
jne
pusha
add
lahf
mov
cltd
fwait
mov
aas
cli
dec
sub
pop
fwait
mov
pop
jl
push
push
jle
into
pop
pop
das
jp
or
mov
or
loop
in
cwtd
mov
sbb
push
out
loop
add
loopne
call
push
or
ret
inc
or
push
push
out
sub
dec
pop
lcall
jae
or
ret
sbb
lcall
aas
fsubs
pushf
fdivs
inc
aaa
add
lcall
xchg
rolb
push
lock
push
pushf
add
mov
stos
ret
repnz
addr16
jp
mov
dec
add
push
push
push
ret
pop
insb
cmp
iret
push
imul
mov
inc
and
fadds
xchg
mov
add
popf
push
push
sarl
xor
sarl
je
and
daa
fcoml
cmp
test
push
lahf
std
cmp
and
sbb
aaa
sahf
sbb
mov
inc
addl
lret
icebp
push
jp
leave
cmpsl
fwait
adc
out
jbe
lret
je
or
jg
rol
jbe
xchg
xlat
mov
sub
pop
xchg
pop
pop
addr16
pop
pushf
in
fs
pop
push
cmpsl
rcrl
ja
pop
xor
loop
clc
jno
fldenv
in
cltd
adc
xor
cs
xlat
mov
cwtl
mov
loopne
dec
clc
inc
movsb
push
ror
xchg
cltd
pop
stos
and
mov
test
mov
sbb
or
loope
gs
cltd
sbb
add
pusha
clc
push
cmpsl
xchg
pusha
out
mov
inc
cmpsl
or
push
adcb
lods
sub
push
sti
mov
imull
daa
pop
mov
in
fidivl
jg
jns
insl
andl
jno
pusha
shll
loopne
out
ss
data16
pusha
cmp
ja
in
insl
mov
stos
lods
cmp
aam
xor
jg
inc
cmp
sbb
inc
mov
rcrl
sub
icebp
cmpsb
pop
pop
xlat
mov
push
mov
jne
je
cwtl
fsubrs
push
cmp
jne
lods
ss
in
mov
orb
cltd
jnp
dec
mov
js
xor
push
sahf
adc
xchg
sbb
addl
jbe
vpsrlq
icebp
sub
adc
aad
insl
aas
inc
jo
filds
sti
int3
loop
ror
sbb
insl
jbe
mov
std
lahf
imul
xchg
ret
mov
jbe
mov
inc
rolb
push
inc
xchg
mov
dec
sar
jecxz
mov
pop
inc
into
lock
test
mov
cld
fldl
jle
cs
pop
lock
int3
shll
rcr
es
jno
and
dec
pop
lods
mov
loop
sbb
leave
leave
dec
test
das
xchg
pop
lods
data16
shrb
cmp
clc
mov
sbb
pushf
popa
mov
fs
jne
cltd
cmp
fcompl
mov
mov
xor
xchg
mov
in
dec
push
insl
in
mov
mov
out
and
popf
jno
xor
imul
mov
ret
test
mov
push
or
xor
cmp
insl
js
scas
aad
push
dec
push
mov
push
fisttpll
call
jmp
mov
inc
testl
les
mov
in
xor
ret
sub
jns
or
mov
sub
jmp
mov
sub
xor
cmp
adc
mov
mov
sbb
int3
loop
mov
push
nop
sahf
shlb
pop
cmp
jecxz
shlb
push
mov
or
mov
sti
xchg
aad
addr16
pushf
fs
incl
sub
and
movsl
and
lcall
pop
ret
sub
mov
dec
div
in
xchg
push
shrb
mov
cltd
in
lcall
cmpsb
cmp
push
sub
out
cmp
js
icebp
inc
out
jns
push
mov
jae
inc
sbb
fs
sbb
xchg
xor
in
int
jg
insb
mov
mov
dec
inc
jb
sahf
pop
outsl
cli
jae
daa
jp
add
or
mov
mov
inc
xlat
sub
rcl
mov
dec
mov
inc
or
data16
outsl
dec
jnp
xchg
inc
popf
dec
ds
jle
rclb
add
popa
lret
xchg
fs
aaa
mov
sub
mov
or
adc
out
call
push
hlt
push
jge
fisubl
adc
or
stos
pop
xchg
xor
sbb
es
int3
ret
or
ret
mov
mov
fidivrs
xchg
pop
inc
inc
ljmp
std
sbb
test
and
jge
out
jl
cltd
aad
and
add
inc
jbe
push
ljmp
jae
aad
mov
out
mov
in
xchg
repnz
jb
aas
mov
mov
cmpb
adc
jecxz
mov
hlt
adc
aam
mov
test
enter
test
and
add
out
hlt
lods
outsl
gs
je
pushl
or
dec
pop
inc
push
pop
repnz
out
inc
fwait
pop
mov
dec
jb
xchg
add
lahf
imul
jmp
push
add
mov
divl
insl
pop
mov
inc
add
xchg
jnp
lock
sub
push
sbb
test
ret
loopne
in
in
mov
xor
insl
sbb
cmp
clc
lods
add
imul
push
jns
mov
mov
push
inc
cwtl
pop
sub
push
std
es
es
mov
lcall
mov
or
add
adc
test
clc
or
push
test
push
es
add
jmp
inc
sbb
cmp
jmp
nop
jo
incl
filds
mov
mov
in
xchg
push
incl
push
insb
sub
ja
sbb
les
xchg
jbe
lods
sti
std
add
gs
adcb
int
mov
pop
pop
mov
enter
dec
mov
std
xor
jne
mov
pop
cld
popa
jl
jmp
movsb
int
imul
push
or
test
loop
out
test
dec
adc
outsb
jmp
mov
xchg
dec
aam
movsl
mov
push
xor
add
ret
faddp
jns
push
nop
lcall
add
push
push
es
aas
xor
jne
das
xchg
xor
ja
std
jb
scas
xor
hlt
das
inc
adc
aad
scas
push
aad
mov
xor
insl
jg
pop
popa
mov
sbb
ljmp
in
sti
in
loope
fldcw
fcoml
insl
iret
pop
mov
mov
xchg
mov
cmp
imul
mov
pop
xchg
jmp
dec
xor
or
je
lcall
out
in
jnp
call
add
mov
sub
gs
enter
fcmovne
dec
insb
jns
or
sbb
hlt
cwtl
add
enter
cmp
sub
rcrl
mov
fs
jno
cmp
fs
stos
sub
push
shrl
xlat
out
roll
ret
and
mov
sub
jne
or
inc
es
ljmp
sub
fwait
add
push
add
push
scas
fwait
bound
and
mov
cmp
adc
das
mov
mov
in
mov
xor
xchg
jae
faddl
xchg
cld
ret
hlt
ret
xchg
ds
aaa
sbb
rcrb
push
mov
pop
movsb
sub
mov
sti
push
inc
jmp
dec
shrb
push
jg
lds
daa
inc
je
sbb
montmul
cmpsb
inc
cmpsl
xchg
mov
pop
sub
add
sub
and
and
inc
jns
ret
out
aad
or
stos
sub
lcall
jge
out
mov
pushf
hlt
jmp
lods
call
loop
out
cmp
mov
xchg
fisubl
dec
dec
movsb
mov
sub
test
jae
inc
cmpb
shr
aam
push
test
push
fsubp
cmc
cmp
imul
mov
ss
sub
push
mov
cmpsl
dec
xchg
add
clc
loope
sti
outsb
sahf
inc
sub
adc
push
ret
sbb
outsb
fisttpll
loope
subb
shrb
jns
mov
mov
inc
adc
aad
xchg
mov
test
jbe
cmpsb
pop
movsl
mov
sahf
xchg
fisttpll
fsubs
sbb
leave
jle
xchg
stos
cmp
jle
inc
lret
cmp
mov
dec
jg
scas
fldcw
dec
sbb
cmp
mov
xor
cmp
stos
daa
jns
dec
negl
push
lods
shll
fdiv
shl
inc
jg
test
fcmovbe
andl
cmp
and
dec
adc
cmpsb
xchg
insl
push
inc
xor
int
ja
scas
into
in
or
fwait
sbb
ds
dec
jae
fistpl
mov
and
push
dec
movsl
push
lods
jmp
cmp
dec
xor
xor
add
movsl
or
push
or
push
mov
push
lahf
daa
movsl
mov
mov
mov
add
mov
in
dec
pop
stos
int
adc
bnd
shrb
xchg
push
fsubrl
mov
or
jle
ret
stc
mov
and
push
push
test
scas
pop
mov
xor
clc
sub
dec
adc
jl
shll
fstps
inc
aad
push
mov
sbb
push
fxch
dec
into
fidivrs
lahf
orb
int3
add
ficoml
push
ret
roll
jg
jl
sub
mov
sub
call
shrb
insb
insb
popf
pop
leave
bound
xor
mov
das
add
ret
mov
addr16
stos
ljmp
ret
fwait
add
mov
inc
ret
in
paddd
adcl
adc
dec
dec
iret
add
push
xor
cmc
cltd
lahf
jp
shlb
mov
inc
xchg
adc
das
fdiv
add
pop
fwait
lahf
or
idivb
shl
pop
xlat
hlt
in
jg
stos
jnp
cmp
cmp
lock
scas
ss
cs
out
inc
scas
jecxz
lret
negl
inc
jae
mov
mov
outsl
dec
jo
cmpsl
and
dec
dec
dec
xor
js
inc
lods
mov
and
loopne
xchg
cmp
in
icebp
pop
test
jae
adc
jbe
cmp
sub
stos
repnz
int3
subb
pop
jl
mov
pop
xchg
add
in
mov
inc
add
jno
adc
out
dec
fdivrp
sub
call
xchg
xlat
cmpsb
pop
xchg
and
xchg
pushf
xchg
ja
adc
scas
popa
aas
incb
fwait
mov
cwtl
lret
movsb
aam
pop
jge
pop
jle
jecxz
and
addb
pop
rcr
fcoms
sub
outsb
pop
shl
es
insl
inc
insl
fsts
mov
adc
sar
out
and
movsl
shll
rolb
out
addr16
loope
and
jae
dec
cmpsb
sbb
push
sub
mov
aaa
cs
shlb
inc
xchg
jg
jecxz
xchg
mov
pop
les
repnz
sbb
and
lret
fs
mov
and
ja
xorb
in
mov
out
or
mov
mov
xlat
rcll
sbb
sub
pop
fnstenv
mov
test
pop
pop
mov
jae
fstpl
dec
addb
repnz
int
cltd
push
std
adc
fadd
adc
jno
jg
lret
scas
jp
inc
add
push
movq
cwtl
push
inc
or
enter
nop
mov
inc
cmp
xchg
clc
mov
sbb
cmp
lret
lock
fwait
or
xor
insb
inc
scas
jns
bound
neg
or
in
dec
es
push
push
sub
pushf
mov
push
dec
jecxz
nop
out
in
loope
jae
pusha
lret
xchg
stos
cmc
xchg
adc
push
cmp
cmc
les
bound
or
dec
popa
push
loop
dec
lods
cld
gs
mov
repnz
adc
xor
popf
gs
or
mov
incb
vmread
cmp
test
cmpb
outsb
clc
lds
test
jns
lods
sub
rorb
add
pop
jle
add
sub
xchg
mov
mov
icebp
cld
sbb
fsubrs
arpl
mov
jge
popa
lock
int
leave
int
jecxz
jp
stos
movsb
mov
adcl
push
cmc
inc
repnz
jmp
xlat
jb
lock
sbb
or
fnclex
add
bound
jbe
add
dec
sbb
mov
mov
xor
hlt
lcall
hlt
jnp
inc
repz
mov
shl
ret
push
stc
cwtl
pop
movsl
push
insb
sbbb
insb
sub
sbb
jno
lds
cmp
adc
inc
arpl
std
or
mov
mov
mov
fisttpll
push
cmp
jl
mov
jns
fisttps
rclb
out
dec
mov
scas
jns
test
add
jae
push
idivl
mov
mov
into
addps
in
jbe
iret
fldt
out
les
xchg
dec
sbb
sub
mov
inc
jo
jp
xchg
jae
cmp
cmpsl
push
adc
fsub
les
lret
repnz
nop
loopne
fcmovne
cmc
push
rcrb
hlt
inc
cmpsl
inc
jg
sub
lea
dec
adc
rclw
xchg
cli
adcl
xor
sub
jl
aam
test
push
xchg
movsb
sbb
mov
mov
ja
aaa
idiv
mov
push
and
jno
aaa
push
je
cltd
lret
push
jns
push
xor
sbb
mov
xchg
ret
and
cmc
cltd
xor
and
and
push
jnp
lcall
ja
out
pushf
popa
mov
out
dec
fsubrs
or
sbb
aad
nop
xorl
fwait
repz
mov
xor
dec
push
or
mov
and
orl
inc
xchg
ret
xor
lds
pop
mov
divl
cltd
icebp
fldcw
ljmp
inc
inc
in
jb
shll
mov
xchg
ret
sbb
push
jmp
adc
loop
xchg
cld
push
rorb
mov
or
outsb
xchg
out
aad
sbb
or
cwtl
sub
rorb
adc
loope
push
fldt
push
mov
pop
sbb
imul
cmpsb
ret
lods
cli
cmpsb
mov
dec
iret
arpl
js
shrb
jp
scas
xor
lods
dec
add
mov
add
mov
push
fsub
sbb
sbb
pop
fistpll
enter
sbb
cld
mov
clc
sub
inc
cmc
jbe
dec
fnstsw
bound
cmpsb
int3
hlt
scas
aad
inc
mov
fstps
dec
fwait
dec
pavgb
or
cmp
je
clc
bound
gs
add
call
cltd
inc
adc
addr16
xor
test
sub
mov
mov
cltd
mov
xor
mov
or
and
js
out
call
mov
xor
mov
xchg
mov
adc
imul
outsb
xor
dec
gs
mov
sub
lret
or
hlt
shlb
shll
lock
test
push
imul
push
jnp
mov
and
in
push
andl
jg
lods
sub
add
inc
sbb
xchg
jnp
xchg
ret
add
outsl
sub
jecxz
test
icebp
bnd
pop
test
ret
insb
imul
loope
or
and
mov
fildl
adcl
repz
mov
mov
je
mov
adc
out
mov
ljmp
movsb
jno
scas
push
punpckldq
xlat
or
push
adc
pop
inc
cli
jecxz
pop
fiaddl
adc
daa
add
add
pushf
mov
jae
dec
rorb
mov
scas
out
jge
jle
js
aaa
cmc
add
jg
popa
xchg
aad
lcall
xchg
repnz
or
push
orl
lds
test
fadd
out
out
push
jo
popa
mov
shll
or
jge
mov
mov
aaa
jns
jb
jge
inc
cmp
pop
pop
scas
enter
lds
clc
loopne
ret
mov
test
push
pop
xchg
ret
pop
lods
cmpsb
or
jmp
pop
xchg
movsl
inc
dec
or
mov
xor
lods
dec
pop
imul
scas
sub
neg
push
adc
jns
ljmp
fnstcw
pop
dec
test
adc
pop
out
xlat
add
xchg
jbe
data16
jmp
lock
jmp
mov
gs
push
lcall
lods
xchg
arpl
rcrb
mov
lods
push
sbb
scas
jo
in
inc
bound
xor
or
push
mov
cwtl
rorb
mov
add
xchg
jmp
pop
in
std
aad
xchg
mov
pop
or
sub
lret
mov
cmp
hlt
push
push
mov
ficomps
loopne
cmpsb
pop
ret
test
fisttpll
mov
xchg
fcomps
push
shrl
push
fcmovnb
fsts
mov
and
sub
jmp
inc
or
insb
pop
lcall
push
shl
pop
out
mov
push
pushf
mov
notl
ficoml
icebp
push
inc
lcall
cmp
jo
sbbb
into
jo
scas
lret
pop
or
pushf
and
popa
xor
add
mov
out
pop
repnz
ds
pop
dec
and
and
and
fs
dec
cmp
jmp
sbb
adc
xor
stos
add
iret
ja
orb
add
sbb
push
inc
jmp
push
and
push
push
test
outsb
enter
gs
cmp
jp
sbb
xor
imul
inc
cmp
out
dec
adc
cld
or
aad
dec
das
iret
jnp
or
loopne
test
cmpsl
hlt
xor
ds
das
mov
jge
add
xor
xlat
dec
je
pop
idivl
cli
fdivs
je
cltd
ja
cmc
cmpsl
outsb
dec
shll
adc
pop
cmp
cmp
repz
mov
or
lret
aas
push
lret
data16
sub
push
test
pop
int
mov
xor
dec
mov
fwait
xor
std
sbb
aaa
jae
fildll
push
pop
cmp
loopne
xor
push
and
cwtl
xchg
aaa
rolb
and
loop
xor
cs
dec
jo
xor
daa
add
test
dec
addr16
jae
mov
jle
nop
das
and
out
fnstenv
pop
pop
mov
inc
shlb
sub
push
push
lahf
imul
inc
xchg
testl
bound
in
sbb
decl
cmp
and
sub
adc
mov
or
int3
loopne
pop
popa
es
xor
pop
cld
mov
imul
ret
sti
cmp
in
add
sub
mov
fistl
xchg
pop
icebp
push
pusha
jp
notb
pop
push
loopne
out
and
inc
cmp
mov
or
inc
ljmp
pop
cmp
mov
jl
stos
mov
loope
mov
and
xchg
dec
mov
ret
mov
call
cld
lock
sti
mov
lock
lahf
cwtl
insb
movl
je
into
pminub
or
rorl
dec
mov
pop
cmpsb
lds
push
jg
dec
aas
jb
divl
ret
xor
dec
aad
jle
shrb
cmp
jno
mov
pop
lock
ret
xlat
lods
cs
jge
inc
xor
insb
movsl
jle
xchg
je
ja
xchg
lods
xchg
and
lods
aad
mov
pop
mov
pop
fnstenv
adc
pop
scas
jbe
pop
fs
xorl
dec
push
test
mov
cmp
fistpl
lock
adc
inc
jmp
push
add
lods
sub
addr16
repnz
mov
mov
mov
and
lods
xchg
add
push
lds
jp
mov
xor
pop
lret
inc
data16
mov
ret
lret
lahf
xchg
daa
jge
fisubs
or
loope
lods
add
andl
push
xor
fiadds
xchg
sub
das
in
fldl
push
outsl
mov
mov
xor
dec
hlt
inc
push
or
add
cmp
mov
sahf
pop
out
filds
xor
pop
xchg
loopne
or
ror
and
dec
push
cmp
repz
xchg
xor
test
pusha
scas
cld
xor
test
xchg
cmp
and
add
decl
cli
pop
xor
insb
xor
pop
nop
flds
sar
xlat
xor
jno
xor
lcall
push
add
jmp
imul
lcall
mov
repz
add
and
mov
push
popf
subl
les
or
lret
mov
rcrl
pushf
push
jns
arpl
fsubl
xor
js
sub
adc
gs
push
fistps
dec
add
std
lea
test
or
xor
and
mov
sti
sarl
jo
hlt
xlat
inc
stos
jbe
fwait
and
pop
push
xchg
sti
lcall
out
pop
pop
sub
cmpsl
jno
shll
push
jb
out
or
leave
adc
mov
mov
sub
dec
pop
pusha
loop
lcall
mov
pop
and
xor
xor
or
or
arpl
push
repz
or
les
mov
in
fidivl
outsl
or
movsl
mov
pop
int
push
sbb
fldl
push
cwtl
sbb
out
hlt
pop
notb
jle
xchg
movsb
outsb
cmp
jp
stos
fildll
inc
sub
add
add
fs
cmpsl
push
mov
and
inc
lds
outsl
das
lds
test
xchg
aad
cmp
xchg
xchg
ljmp
dec
out
dec
lret
clc
push
arpl
xor
xor
inc
pop
cmpsb
out
xor
and
xchg
xor
insb
stos
sbb
sub
cmp
jae
clc
getsec
stc
stos
ror
sub
mov
adc
pop
loope
xchg
sbb
or
push
sahf
push
and
lods
arpl
stc
or
movb
movsl
push
mov
xchg
inc
jle
mov
aad
mov
cmpsl
or
fistps
push
mov
movsb
dec
sub
fiaddl
jge
icebp
dec
pop
mov
pop
mov
pop
icebp
push
out
jns
adc
push
jecxz
mov
fstpt
divl
adc
cmp
pop
loopne
adcb
jns
sub
xor
scas
push
push
dec
xor
iret
frstor
xlat
sbb
inc
lods
and
mov
cmp
xlat
dec
sub
jp
mov
or
pop
into
jmp
xor
jecxz
sbb
je
mov
mov
ds
mov
add
fwait
jne
or
cmp
addl
sbb
adc
jmp
lcall
and
ss
les
xor
dec
js
leave
mov
jo
into
in
ror
popl
jecxz
test
mulb
call
xchg
jbe
push
lods
iret
inc
cmp
pop
cli
add
adcl
stos
cmp
xor
adc
ds
sub
outsl
pop
mov
fcmovb
push
ret
negb
pushf
ss
xchg
jg
push
add
mov
les
into
push
lods
or
inc
sbb
jecxz
cmpl
out
push
inc
mov
sub
cmpsl
or
dec
adc
stc
lock
scas
aad
out
mov
outsb
adc
mov
push
jne
or
pop
imul
or
fldt
ret
into
icebp
scas
mov
jnp
inc
mov
pushf
aaa
sbb
mov
cmp
pop
mov
add
inc
call
pop
sbb
dec
jns
jnp
dec
enter
push
dec
sbb
mov
je
adc
gs
push
inc
adc
push
ljmp
fbld
mov
cmpsb
xor
les
insb
pop
jp
and
mov
fsubrs
mov
jne
add
stos
pop
mov
fidivrl
sub
cltd
sbb
push
and
adc
ja
pop
mov
jb
mov
inc
aam
fwait
cmp
loope
fbstp
in
mov
jmp
cmp
pusha
jl
or
fbstp
xor
aam
iret
inc
inc
sbb
data16
cmp
pop
outsl
imul
pop
clc
push
push
in
stos
int3
out
sub
ret
repz
dec
mov
lret
fdivrl
test
adc
mov
adc
sar
adc
shrb
mov
adcb
fbstp
cs
dec
lds
dec
out
rorb
push
cmp
push
sub
dec
push
sbb
cmp
lock
out
scas
add
pushf
jbe
cmp
sbb
and
outsb
popf
sub
cmp
pop
or
mov
movsl
out
pop
inc
mov
xchg
lds
fs
repnz
xchg
arpl
cli
je
movsl
dec
mov
xchg
mov
int3
add
aas
pop
stc
imul
mov
aam
sbb
pop
lahf
sub
sub
dec
pushf
xchg
add
arpl
inc
mov
push
int3
outsb
in
inc
adc
add
stos
pop
pop
mov
jge
xor
xchg
mov
dec
push
push
sbb
jle
sbb
not
sub
ret
mov
xor
loop
jg
aad
pushf
add
jp
cmc
add
dec
lock
jl
sub
jae
gs
jno
in
into
pop
dec
dec
fwait
pop
dec
xchg
in
add
aaa
gs
addr16
sub
jl
xchg
mov
cwtl
mov
out
pop
ja
xchg
add
cld
ficompl
push
jecxz
hlt
inc
out
or
int
push
neg
rol
adc
or
dec
jne
push
jo
dec
sbb
jmp
ret
dec
aad
pop
adc
mov
pusha
cmp
cwtl
cli
xchg
pop
cmp
outsb
es
cmp
xor
pop
scas
aaa
pop
clc
outsb
je
loopne
aas
sbb
scas
inc
lret
lds
ja
loopne
or
fistpl
mov
xchg
cmp
inc
inc
cltd
sub
arpl
sarl
push
imull
jp
ficoml
dec
push
cwtl
xor
add
adc
dec
jle
ret
hlt
cmpsw
cmpsb
or
loope
adc
je
jp
ja
outsl
jb
jne
or
lret
insb
xor
adc
sub
imul
imul
xlat
cmpsl
mov
cwtl
bound
mov
insb
mov
daa
add
lea
pop
cmc
push
sbb
push
push
inc
mov
mov
loop
mov
fs
add
cmpsl
dec
lret
cs
lahf
add
mov
or
and
jae
icebp
out
add
clc
jbe
cmpsb
inc
mov
add
outsb
leave
scas
sub
jmp
and
stc
cld
mov
ds
cmp
push
inc
cmc
es
inc
dec
xor
add
mov
icebp
lret
mov
push
push
jle
cli
xchg
addr16
push
sbb
das
lret
jbe
sbb
cmp
stc
orb
nop
in
xlat
adc
and
iret
std
push
sub
sbb
fs
xor
loopne
sbb
push
and
subb
cwtl
lods
mov
insb
inc
rcl
nop
xchg
sbb
out
mov
dec
data16
and
jo
pop
fstpt
lret
adc
pop
loope
adc
pop
pop
cld
mov
enter
cmp
inc
mov
out
lcall
aad
xor
ds
lea
or
outsb
int
push
inc
push
mov
pushf
sbb
in
int3
cmovnp
push
lea
sbb
add
adcl
push
push
out
fwait
incb
in
imul
add
int
xorl
out
movsb
lret
ss
pop
insb
sub
roll
sbb
icebp
and
cmc
jl
xchg
fcmovu
iret
jmp
inc
pop
push
pop
out
test
cmp
fwait
jp
lret
scas
mov
aas
xchg
and
xor
popa
fcoms
test
xor
adc
lods
fisubs
int3
mov
push
cmpsb
mov
sahf
push
jle
mov
lods
adc
out
xor
mov
lods
out
push
add
pop
insb
xor
ret
jno
and
cmpsl
xchg
cwtl
faddl
sub
lock
outsb
jo
leave
and
sbb
sahf
idivl
insl
mov
push
cmpb
mov
outsl
aam
mov
mov
loope
sbb
dec
pop
add
in
test
or
add
rcll
fwait
adc
shrb
aad
mov
scas
pop
fisttpll
stc
mov
sub
movb
lds
mov
push
xchg
xchg
scas
mov
pop
sub
std
add
sbb
enter
sarb
test
pop
mov
dec
and
mov
aad
jo
ljmp
dec
mov
fs
popf
push
and
inc
leave
fsubs
orb
cmp
mov
cwtl
out
nop
mov
scas
jp
movsl
aaa
out
mov
test
int3
dec
lods
scas
inc
pusha
push
and
xor
arpl
movsb
mov
cmp
xlat
add
ljmp
mov
arpl
enter
shl
out
pop
push
imul
out
and
add
jnp
adc
sbb
inc
mov
sub
in
clc
cmpsb
call
lea
repnz
repz
inc
rcrb
mov
jns
movsl
cltd
ljmp
pop
bound
das
popa
sbb
in
dec
jmp
and
pop
inc
movsl
in
cltd
testb
lret
sub
mov
shrb
mov
nop
pop
mov
or
mov
lds
fwait
in
sbbb
sbb
andb
dec
xor
adc
mov
cwtl
jle
push
jmp
push
or
addr16
enter
mov
push
sbb
add
add
andb
sbb
pop
out
push
int
mov
lahf
mov
nop
pop
push
inc
repz
frstor
sbb
pop
cs
jbe
inc
das
mov
sbb
lods
adc
pop
push
push
sahf
jne
mov
add
mov
add
in
addl
sahf
out
in
mov
lods
mov
pop
xor
ret
cmp
xchg
xchg
jp
mov
popa
push
dec
adc
shl
fistpll
loopne
inc
out
cmpsl
out
sub
xchg
push
mov
inc
cmc
fldl
jmp
mov
ds
jg
mov
jbe
aam
ret
mov
out
es
jbe
mov
aaa
lret
cltd
push
ss
jmp
add
ficompl
add
pusha
in
and
cmpsb
xchg
into
dec
rol
mov
pop
movsb
test
add
xor
and
imul
jb
mov
add
push
cmp
out
dec
mov
sub
aaa
scas
xor
mov
out
mov
sbb
sbb
xlat
stc
inc
and
inc
rcr
mov
dec
nop
and
mov
nop
addr16
lods
sahf
popl
pop
es
popa
fisubrs
lret
shll
in
jnp
pop
and
out
scas
aaa
cli
jg
fists
mov
jg
sub
mov
lods
sbb
stc
out
xor
into
adc
or
xchg
dec
mov
mov
int3
rolb
inc
adc
jno
jne
sub
loope
inc
in
push
int3
sbb
int
cmp
push
fs
push
in
es
sbb
mov
inc
jns
ret
jecxz
push
sub
js
mov
shll
loopne
arpl
xchg
dec
shrl
lret
or
push
lds
jmp
mov
mov
pop
mov
inc
xchg
aas
inc
add
nop
push
push
test
arpl
jl
mov
dec
outsb
test
jle
sbb
orl
movsl
stos
adc
cld
xchg
add
dec
mov
movsl
sbb
out
repz
xor
aam
jae
or
push
xor
lret
sub
cmp
loope
int
jno
loop
lret
out
inc
mov
mov
cmpsb
or
fsubs
push
xlat
cmpsb
sti
loope
sbb
stc
or
das
push
or
mov
in
stc
sti
pop
jmp
cmp
sbb
out
xchg
test
inc
ss
inc
outsb
stc
cmpsb
dec
sbb
fcoms
sbb
adc
jo
and
mov
adc
mov
dec
gs
xchg
int
lahf
call
fisubl
mov
cld
scas
and
push
out
sbb
dec
inc
into
inc
inc
orl
sub
lret
popa
push
pop
and
add
icebp
rol
mov
push
mov
mov
and
xor
daa
sbb
mov
xor
push
xchg
dec
dec
mov
jl
loopne
xor
inc
out
lcall
xchg
and
and
and
fistps
aas
lcall
orb
inc
cmc
repnz
lahf
add
je
pop
xor
pop
pop
unpckhps
push
int
adc
jbe
adc
into
les
xchg
cmp
mov
sbb
lds
jmp
scas
vmptrst
mov
xchg
add
or
and
dec
dec
clc
les
add
add
int
cld
xor
mov
lcall
movsb
stc
adc
faddl
pop
ret
pop
imul
sub
loopne
sub
scas
pop
inc
das
dec
xchg
jmp
xor
enter
in
mov
push
cmp
das
push
shll
outsb
push
insb
in
add
lret
rcll
out
sub
or
imull
nop
push
add
mov
lret
lods
xchg
or
add
fucomi
pop
pop
repz
mov
mov
cltd
in
movl
cs
js
lahf
xchg
out
mulb
wrmsr
insl
and
arpl
mov
push
icebp
jae
xor
fldlg2
adc
in
bound
xchg
stos
xchg
xchg
or
push
inc
adc
pushf
jmp
fisttps
pushf
xor
andb
lock
sub
mov
jne
scas
int3
cwtl
pop
das
out
inc
pushf
pop
roll
push
fsts
aaa
enter
pop
lds
cmp
shr
sti
in
lcall
pushf
xchg
lock
out
adc
dec
ljmp
push
cltd
push
push
daa
movsb
dec
cs
lods
and
fidivs
adc
dec
cmp
inc
cs
fsubrs
adc
outsb
cmpsb
jecxz
push
pop
jae
call
or
mulb
lahf
xchg
ljmp
cld
push
jns
notl
out
adc
movsb
xchg
inc
jbe
sbb
out
lcall
shlb
movsl
push
data16
dec
add
inc
mov
pop
inc
xchg
insl
inc
test
stos
cli
dec
loope
out
cmp
xchg
jge
daa
daa
jge
lods
mov
push
mov
out
out
xchg
cmpsb
push
mov
popa
scas
mov
dec
pop
add
or
enter
out
cmp
out
leave
and
icebp
loop
pop
push
push
dec
fs
lock
and
push
xor
mov
mov
inc
dec
iret
test
fldl
arpl
in
cmpsl
aaa
push
outsb
enter
pop
xchg
arpl
or
in
xor
in
pop
ljmp
aas
jmp
stos
lods
sub
sub
dec
dec
in
cmp
mov
outsl
rolb
cmp
loope
mov
lahf
lret
insb
push
mov
dec
popl
pop
addr16
push
out
out
movsb
add
shll
or
lods
mov
cld
outsb
push
in
loop
jmp
les
lds
and
sbb
sbb
adc
sub
les
data16
adc
mov
pop
xchg
inc
fst
loop
push
add
mov
lahf
and
int3
jle
sahf
jne
stos
repnz
pop
push
or
jmp
adc
icebp
jbe
dec
sar
shrl
push
pop
or
cld
sub
xor
mov
push
sbb
or
pop
dec
loopne
dec
dec
rorb
pop
cli
in
mov
jmp
sbb
adc
push
es
in
sub
push
leave
dec
shrl
sbb
push
in
push
mov
lds
test
fwait
cmp
xchg
aam
dec
sar
mov
mov
aad
jnp
mov
nop
in
repnz
shll
xchg
xor
test
mov
in
dec
jg
out
sbb
insb
popf
scas
movsl
fdivr
rcr
sub
imul
fxam
xchg
sub
jg
hlt
iret
insl
rcrl
lock
or
out
into
and
jmp
pop
dec
jp
mov
lods
daa
push
shll
rcrl
push
enter
lods
mov
sbb
xchg
pop
aas
imul
imul
arpl
push
push
adc
shrb
mov
or
dec
shrl
xor
sub
or
leave
push
repnz
lahf
xor
mov
shlb
lret
orl
in
jmp
push
jge
outsl
lahf
sbb
adc
jmp
mov
out
out
fcom
enter
fiaddl
cmp
xchg
data16
push
js
mov
inc
repnz
mov
int
std
push
addl
mov
cs
stc
cmpb
movsb
scas
sbb
movsl
in
cmc
ret
inc
jmp
cmp
pop
into
or
sbb
inc
mov
adc
sti
lret
adc
iret
mov
les
fimull
test
xchg
mov
shll
fmulp
andl
leave
and
ss
adc
in
test
aad
xlat
stc
inc
push
xchg
dec
xorl
mov
pusha
mov
adc
popa
adc
roll
mov
and
dec
and
jbe
test
mov
sar
adc
ss
jae
add
fstps
xor
add
adc
lret
or
jns
loop
push
push
ss
data16
fildll
pop
cmp
int
pop
popa
dec
or
ljmp
xor
xchg
in
fs
orl
movsb
ret
pusha
mov
add
or
movsl
shlb
mov
sahf
push
lea
mov
or
dec
jecxz
dec
sub
xchg
or
insl
mov
jb
push
insl
sub
mov
popa
movsl
in
aas
les
cmp
jno
bound
mov
je
adc
pop
hlt
and
pop
xchg
sub
out
push
pop
mov
or
outsb
xlat
xor
clc
lret
les
sarb
in
mov
aam
push
ja
add
xchg
das
jecxz,pn
int
les
insl
pop
or
das
or
lods
lods
fimull
enter
xchg
mov
or
gs
addps
adc
fs
sub
pushf
fnsave
dec
push
mov
and
or
mov
out
push
lea
xor
loopne
in
outsl
jbe
clc
xchg
or
adc
shlb
xchg
jnp
ucomiss
cmpsb
mov
jns
int
push
adc
push
inc
mov
cld
and
dec
jmp
mov
test
xchg
jnp
mov
xor
fcompl
xor
xchg
cld
xchg
lods
mov
testl
lcall
aaa
ss
inc
sub
mov
or
jbe
lcall
xchg
lods
data16
roll
lret
add
loop
popa
fldenv
jae
adc
dec
imul
out
js
xor
sbb
incb
push
inc
inc
xchg
daa
push
dec
popa
rcll
dec
leave
sarb
mov
dec
sbb
pop
adc
sub
dec
dec
addr16
mov
push
repnz
mov
int3
popf
push
fistl
sbb
mov
cmp
cmp
je
cmp
xchg
pop
mov
mov
loopne
pop
mov
jbe
xchg
jo
popa
cmc
mov
mov
adc
lahf
xchg
dec
inc
sub
push
addr16
xlat
in
adc
jg
out
sbbb
add
not
or
jecxz
movsl
out
lret
cmp
aas
lods
xor
pop
out
rclb
sbb
push
out
cld
pop
in
jnp
xchg
fcomi
cmc
ret
xor
add
mov
mov
mov
jns
lret
sub
stos
repnz
in
ficompl
lds
fldenv
fdivs
push
cs
loope
push
int
stos
push
xchg
inc
mov
mov
push
push
mov
add
push
jle
loopne
movb
mov
sub
into
add
cltd
test
pop
jle
jecxz
das
jmp
sub
fnsave
loop
push
jae
aaa
sbb
jecxz
lods
mov
out
sbb
jbe
rclb
mov
push
test
in
out
cli
fs
das
repnz
bound
pop
mov
iret
mov
cld
rcrl
daa
push
aaa
ret
aaa
xchg
lods
mov
test
sub
into
je
mov
sti
dec
mov
daa
jne
mov
sarb
push
es
sbb
push
repz
mov
mov
arpl
add
and
arpl
icebp
xchg
movsb
adc
push
lods
pop
sub
adc
mov
mov
mov
jne
jecxz
mov
sbb
push
lret
int3
mov
adcb
sbb
push
mov
pop
js
js
xchg
and
pop
roll
out
dec
mov
xor
lcall
jne
adc
jno
adc
cmp
rorl
outsl
outsb
sub
lcall
jb
stos
mov
int3
inc
test
div
push
mov
int3
push
jge
insb
lock
pushf
inc
sarb
or
ds
or
scas
jmp
testb
push
cmpsl
ror
mov
mov
jno
mov
pop
xlat
cmp
pop
mov
clc
ret
mov
rorb
or
nop
scas
sub
aad
enter
adc
cwtl
addr16
cmp
sub
imul
pop
jb
aas
ret
negl
loop
leave
ret
and
mov
pop
call
jo
mov
cmp
je
inc
ficoms
gs
or
xchg
mov
lods
or
test
or
mov
out
pop
push
repnz
call
in
xor
and
or
cmpsl
lret
decl
ret
jp
jecxz
push
cmpsl
adc
pusha
cld
das
inc
push
xor
cli
je
das
test
inc
pop
ret
les
outsl
ret
sub
sub
pushf
sbb
cmp
and
lcall
push
cmp
dec
pop
lods
aas
xor
in
pop
add
adc
cmp
or
xchg
pop
mov
mov
pop
adc
mov
mov
dec
das
fdivs
dec
iret
cmpsl
fisttpll
jle
movsb
outsl
fadd
das
and
fsubrl
movsl
or
lret
xor
xorl
add
xor
sbb
pop
jle
lret
push
js
adc
or
cmp
sub
mov
fwait
xchg
adc
jmp
mov
jmp
pop
pop
ss
cmp
xor
xchg
in
inc
testl
pushf
push
push
xchg
sub
jne
mov
aas
jno
lods
mov
inc
mov
test
lds
mov
ds
lods
sti
mov
repz
gs
mov
repnz
pop
push
cltd
shll
or
into
loop
or
xchg
hlt
pop
mov
aam
icebp
jmp
outsb
or
decl
scas
fwait
aas
fs
pop
add
and
xchg
jns
add
sbb
nopl
stos
mov
fldl
lcall
mull
jge
lds
inc
mov
jmp
shl
pop
cmp
jne
ss
test
arpl
popf
sbb
pop
ss
push
push
aaa
out
shrb
shrb
dec
mov
push
add
jl
pop
mov
xchg
insl
xor
das
xor
add
inc
lea
fnsave
pop
das
jns,pt
xor
insb
aaa
fdiv
hlt
outsl
push
sbb
in
aad
dec
mov
fcmovnu
adc
pop
gs
lods
dec
xor
out
in
mov
ficompl
aaa
out
xchg
sbb
arpl
cmc
xchg
sarb
jnp
inc
add
cmp
out
lcall
fld1
inc
adc
sbb
sub
mov
mov
movsb
xor
inc
pop
push
sbb
fstpt
aas
loope
cmpsb
stos
cli
pop
xchg
or
mov
mov
add
mov
sahf
addr16
test
mov
pop
lahf
sti
dec
dec
mov
xor
lret
xor
mov
push
fisubrl
mov
jno
ss
adc
aaa
mov
mov
ret
push
jmp
and
cmpsb
push
mov
xchg
sbb
mov
movsb
insb
pop
stos
xor
mov
sbb
sbb
jmp
or
lcall
lahf
or
jo
setg
sub
sub
xor
negb
add
mov
xlat
push
in
dec
and
dec
cmpsb
aam
pop
fbstp
out
add
and
ret
push
aas
pusha
cmp
adc
jbe
loope
and
outsl
inc
hlt
xchg
jge
cwtl
inc
pop
in
lahf
cmp
outsl
add
adc
or
icebp
and
xchg
xor
bound
addr16
das
inc
adc
inc
mov
xchg
mov
sub
xor
gs
out
dec
pop
imul
repz
lret
mov
cmp
fisubrl
mov
jg
mov
lret
gs
test
lods
shll
dec
pop
addb
mov
push
test
add
cmpsb
iret
dec
sbb
shl
addr16
lods
add
mov
std
pop
movsb
mov
jmp
in
xchg
fadds
test
mov
ret
sub
std
pop
mov
jge
inc
fcmovnbe
rorl
mov
stos
movsb
call
pop
je
push
enter
push
mov
push
fiaddl
adcb
movsl
push
sub
lock
add
lock
and
repz
xor
iret
or
push
add
fstl
dec
sti
faddp
xchg
lahf
imul
call
push
jl
cmp
xchg
cmp
xchg
adc
cld
negb
mov
push
or
dec
das
push
sbb
inc
repnz
hlt
push
mov
xchg
push
ficompl
nop
or
out
fnsetpm(287
mov
std
dec
mov
cmpsl
adc
les
push
sub
ja
test
ljmp
cltd
sbb
ss
mov
or
sub
push
out
shrl
adcl
ds
add
push
adc
mov
cmpsb
js
push
flds
jno,pn
mov
or
xchg
mov
push
je
push
out
mov
push
aaa
pop
fwait
aas
pop
inc
test
lea
xchg
sti
mov
mov
orb
sub
repz
cmp
cmp
data16
testb
adc
jns
ja
out
adc
xor
fcomps
inc
mov
mov
insb
push
lret
dec
lock
dec
mov
test
rol
call
std
or
arpl
test
push
cmp
xchg
vmread
push
jmp
fstps
mov
mov
jne
repz
rclb
jmp
test
push
jo
mov
shl
mov
sti
cmp
popf
push
hlt
cmpl
stos
out
in
popa
lcall
xor
pop
xor
cmpsb
dec
call
pop
pop
into
lea
pop
push
and
pop
in
lret
add
into
lea
adc
ret
stc
mov
js
mov
cs
push
pop
xchg
jmp
mov
in
cwtl
out
pop
sbb
jo
mov
jnp
mov
scas
inc
fiaddl
sahf
add
aam
fidivrs
xchg
xchg
fisttpll
cld
pop
adc
xor
addr16
inc
sbb
push
xor
or
fadd
jl
inc
xchg
stos
sub
mov
xor
shlb
mov
xchg
pushf
pop
test
ret
popf
jmp
rorl
push
sbb
pusha
ret
dec
jmp
mov
jno
xchg
nop
sub
fimuls
out
jp
mov
sub
jmp
mov
mov
sbb
cld
or
jae
shld
mov
mulb
lock
or
test
inc
jmp
pop
ret
cmpl
pop
jbe
sarl
call
nop
cmp
xchg
push
mov
gs
mov
mov
xchg
test
cld
insb
int
jmp
and
jle
jne
jae
add
xor
mov
pop
cmpl
push
ficompl
xchg
sbb
inc
shr
fdivr
sarb
mov
jbe
sbb
sub
cmpsb
int
push
mov
dec
xor
add
cmp
out
mov
fucomip
icebp
jne
sahf
and
aad
and
push
or
in
xchg
xor
mov
aad
test
and
pop
in
fwait
subl
cli
inc
mov
aas
cmp
enter
xor
inc
sbb
mov
add
lret
push
add
adc
sti
inc
dec
mov
shll
aam
ja
sbb
ds
sahf
aam
inc
orb
cmp
repz
cmpsb
rcrb
iret
lods
sub
cmpb
mov
sbb
mov
lds
pushf
jle
outsb
xchg
es
nop
adc
shlb
inc
mov
dec
push
fldl
call
push
fisttps
inc
mov
ret
xor
xor
push
and
jo
shl
aas
mov
or
adc
mov
cmc
shrl
cmpsb
loop
add
notrack
sar
lret
sub
pop
cmp
inc
lods
cmc
cs
jne
mov
jp
pop
fistps
xchg
fildll
pop
xchg
pusha
pop
rcll
or
dec
sub
lods
mov
fldcw
lods
and
sub
cld
add
xor
push
and
mov
cmp
rcrb
adc
jmp
sub
mov
jo
or
xor
jge
scas
lcall
mov
mov
adc
int3
fildl
out
sti
stos
push
femms
ret
jmp
out
xchg
xor
loopne
icebp
sbb
mov
sbb
rorl
gs
adc
or
stos
leave
clc
jns
dec
clc
sbb
bnd
ss
and
xchg
sbbb
add
mov
xorl
loopne
or
xlat
cs
and
mov
add
xor
stos
xor
mov
inc
scas
sbb
bound
xchg
push
xchg
push
inc
out
pop
and
jnp
jle
mov
cli
mov
lcall
inc
call
inc
mov
js
in
mov
add
movsl
arpl
addr16
mov
loope
test
xchg
jnp
pusha
or
push
fsubrs
ss
xchg
jbe
lock
push
push
mov
popf
mov
mov
rcrb
lods
mov
mov
mov
ljmp
xor
imul
insl
out
fwait
test
addr16
mov
or
xchg
in
test
mov
sub
test
pop
stos
add
mov
push
ss
adc
sub
push
sub
xchg
push
mov
jmp
cltd
bound
lods
ja
dec
xchg
aam
add
enter
repz
mov
add
cmp
and
enter
fisubl
or
outsb
and
mov
add
jnp
scas
mov
stc
mov
rorb
repz
pop
movsl
cmp
in
lcall
sub
rcrl
sahf
jle
add
int3
cmpsb
out
push
jl
and
pop
push
fs
mov
dec
xchg
sbbb
xlat
popf
dec
dec
aad
insl
jo
incl
aam
xchg
mov
rorb
push
dec
jno
lcall
das
cmp
stos
sbb
jmp
in
xor
inc
mov
mov
cld
fadds
sbb
repnz
int
hlt
cmc
jb
loope
jecxz
lret
in
lret
xor
sbb
out
or
fcomps
xchg
imul
mov
inc
lahf
mov
cs
mov
xchg
xchg
or
jecxz
outsb
or
pop
enter
sahf
dec
sbb
lahf
mov
or
mov
push
mov
cmp
fsubrl
fnstcw
or
shrl
cmpsl
loopne
mov
ret
xchg
les
mov
out
outsb
sti
das
movsb
cltd
ja
add
sub
mov
cld
movsl
and
cmp
fisttps
jmp
nop
pushf
imul
push
mov
jnp
lods
sub
insb
cmpsb
pop
push
xor
dec
js
and
inc
xchg
fs
jle
xor
and
das
sbb
cmc
int3
fimull
in
inc
repz
mov
orb
jnp
mov
insb
call
jb
mov
loopne
cli
push
xchg
in
jmp
dec
test
aas
sti
xchg
lock
adc
test
andb
xor
inc
mov
in
inc
fistpl
pop
mov
outsl
lods
mov
mov
jmp
jecxz
jne
loop
orl
jge
jle
xchg
data16
cmp
dec
imul
add
xor
movsb
pop
push
sbb
mov
jbe
movsl
mov
sbb
push
sub
dec
inc
clc
dec
fisubl
cmc
mov
insl
popf
sub
and
mov
out
into
insb
xor
ss
cmpsl
jno
mov
dec
stos
insb
pusha
cld
push
pop
imull
sbb
mov
pmulhw
mov
push
aam
mov
adc
push
hlt
adcb
mov
lcall
repz
xor
fcom
cli
push
mov
sub
mov
xor
xchg
sub
rcrb
mov
and
js
int3
ror
xchg
hlt
clc
fs
pcmpeqd
ljmp
fwait
imul
in
pop
cltd
orl
jns
lret
or
fiadds
mov
fnstcw
popa
insl
jae
mov
push
popa
mov
mov
in
push
inc
dec
dec
or
pop
jae
dec
xor
outsb
adc
adc
fcomip
mov
pop
xchg
push
imul
xchg
cmp
cmp
sub
shrl
jmp
dec
mov
mov
cltd
push
aas
fildll
shlb
fbld
cmp
clc
mov
xorb
int
out
mov
push
push
int
iret
cmp
test
sbbb
stc
cmp
lahf
xchg
mov
jl
addr16
dec
iret
add
mov
push
add
pop
ljmp
sbb
mov
dec
out
cmp
mov
aas
xchg
push
mov
es
push
xchg
stc
loop
test
repz
ja
sahf
imul
pop
dec
mov
xor
xor
insb
rorl
ja
lret
in
mov
aas
adc
sbb
mov
sbb
inc
and
xchg
lds
and
shrl
mov
std
dec
iret
insl
and
or
mov
inc
gs
or
fsubrp
push
mov
or
mov
lock
mov
push
lock
pop
sub
cmpsb
hlt
cltd
cmc
add
add
jmp
xorl
sub
xor
aad
aas
repz
out
out
aam
int3
mov
and
mov
je
cmpsb
cld
inc
lods
push
xorb
lods
sub
nop
pop
cmp
addr16
leave
cmp
push
into
in
ja
xchg
sub
decl
jmp
or
aas
clc
xor
arpl
loopne
into
ds
sbb
iret
call
lock
lret
xor
adc
outsb
push
mov
sbb
imul
pxor
jl
insl
fwait
subb
jae
jg
xlat
dec
les
push
push
cwtl
out
sbb
mov
inc
dec
xor
movsl
cld
mov
imulb
das
loope
pop
faddl
push
add
lret
jge
push
xchg
and
cmp
subb
jle
fidivs
mov
cmc
cmp
push
pop
push
test
mov
mov
sub
mov
inc
testb
out
loope
aas
and
insb
mov
fnstenv
pop
vsqrtsd
call
pusha
xchg
fs
push
cmp
ljmp
sbb
ret
sub
inc
mov
or
mov
mov
add
in
ss
je
insb
mov
xchg
and
mov
push
ljmpw
pop
cmp
fldcw
imul
enter
pop
fdivrs
jl
in
in
outsl
dec
enter
cwtl
or
mov
dec
test
ret
repz
lret
fldcw
fisubs
add
movsb
push
xchg
push
inc
inc
dec
shll
testb
into
and
dec
sbb
and
call
xchg
stc
nop
orb
mov
lahf
fdivrl
call
add
loope
shrl
daa
fld
das
mov
daa
sbb
cmpl
mov
leave
imulb
stos
xchg
scas
dec
inc
jl
push
and
mov
cmpl
sbb
push
test
xchg
sub
pop
inc
js
stos
lret
or
mov
mov
jns
push
pop
testb
and
ret
pop
scas
mov
ret
in
cmp
cli
sarl
lret
gs
inc
das
sub
and
pop
test
cmp
je
sub
outsl
xchg
jnp
jne
clc
sarb
test
push
sarl
pop
or
shrl
sbb
jbe
cmp
fcmovbe
jp
dec
xchg
or
push
inc
push
jecxz
ror
xchg
mov
dec
in
je
xor
adc
sub
push
rclb
add
sti
testb
lods
cmp
and
dec
push
mov
aad
outsb
ror
std
push
ret
inc
lret
dec
adc
sub
add
adc
pop
xchg
int
or
sbb
or
int
adc
push
inc
mov
aaa
iret
stc
jg
iret
sbb
jmp
mov
mov
xchg
fisubs
test
lret
xor
add
xlat
sbb
sahf
push
aas
in
fidivs
out
mov
mov
add
and
and
fnstenv
mov
pop
lcall
pop
pop
mov
push
mov
mov
sbb
iret
push
daa
loope
or
mov
inc
pop
jecxz
repnz
add
fst
notb
push
popa
mov
xor
jmp
pop
scas
dec
out
cmp
mov
lret
sbb
loopne
sbb
cwtl
push
xchg
hlt
push
jnp
popl
in
cld
pop
inc
or
xchg
pushf
sbb
js
sub
lret
clc
inc
push
shrb
mov
int3
iret
add
mov
out
fwait
xor
aas
push
lock
movb
rol
insb
or
je
cmp
pop
mov
mov
mov
out
push
sbb
xor
scas
sub
inc
insl
inc
sbb
xchg
jmp
cltd
mulb
inc
inc
dec
aad
sarl
sbb
testl
aad
inc
lods
cld
scas
lods
aas
pop
icebp
mov
test
mov
fs
jae
sbb
mov
mov
push
dec
aaa
cmp
iret
xlat
outsl
adc
jge
mov
or
out
lret
mov
lahf
inc
aaa
iret
test
insl
sar
mov
imul
xchg
insl
sahf
xor
dec
sub
xchg
loop
xor
mov
xchg
out
adc
or
inc
or
aas
inc
push
xlat
ljmp
push
inc
or
push
repnz
add
movsl
xor
inc
mov
nop
mov
and
stos
lea
dec
dec
ds
push
fwait
outsb
stc
adc
addb
scas
cwtl
shlb
fistpl
mov
mov
mov
mov
cltd
add
dec
cmp
add
lock
out
in
inc
negl
cwtl
bnd
repz
cmp
pop
mov
pop
fwait
mov
inc
sbb
sbb
shll
loopne
outsl
or
lods
fsqrt
inc
movl
dec
pop
sub
pop
pushf
jle
iret
sahf
xor
dec
mov
or
imul
mov
lahf
inc
shrl
rcrb
out
sub
cpuid
test
xchg
lahf
xor
pop
out
out
testb
loopne
cmove
lods
imul
call
cmp
ss
xchg
ret
jns
cs
addl
std
xchg
xor
in
sbb
iret
pop
xchg
pop
lahf
aas
xor
and
sarl
jge
out
call
imul
push
sub
lcall
lea
xchg
pop
cmp
mov
pop
pop
loop
mov
xor
out
sbb
insl
cmpsb
imul
sbb
xor
inc
imul
cld
cmp
es
xor
adc
in
xor
pop
mov
flds
push
pop
jmp
stos
mov
addr16
mov
pop
and
sub
fs
push
jle
stc
scas
fwait
ret
adc
jle
repnz
cmp
andb
mov
and
pop
sbb
data16
adc
lahf
mov
cmp
mov
stos
rcpps
mov
inc
sarl
lret
push
daa
cmp
push
xor
and
mov
mov
add
jbe
pop
lock
sub
xchg
sub
pop
mov
roll
aas
xchg
mov
xchg
jmp
dec
jmp
mov
mov
mov
jg
inc
push
jmp
in
jns
push
imul
inc
inc
xchg
rol
testl
push
xor
mov
mov
or
push
icebp
mov
and
sbb
sbb
sub
dec
out
cmc
std
js
in
inc
sub
ja
adc
mov
test
or
std
dec
push
jle
nop
adc
dec
sti
cmpsb
fnstcw
lahf
inc
lret
stos
repz
mov
jns
push
cmp
jno
xchg
inc
scas
mov
je
outsb
cmp
ds
xor
jmp
jns
xchg
cmpsb
pop
dec
or
int
push
lret
inc
outsb
push
sub
lcall
bound
out
cmc
jns
pop
mov
mov
insb
pop
xchg
and
jle
inc
push
loop
mov
mov
out
scas
fistl
mov
xor
pop
sub
int3
mul
dec
call
es
shrl
adc
popf
xchg
add
mov
mov
jns
das
adc
inc
mov
sbb
insb
imul
dec
mov
cld
push
dec
scas
test
xor
addr16
sub
aas
into
mov
dec
mov
int
jae
sbb
daa
stos
jg
cmp
mov
pop
mov
cmp
adc
test
out
pop
mov
fstpl
loope
push
cs
jmp
popa
ret
sbb
cmp
sub
cmpb
inc
pop
sbb
adc
nop
dec
push
or
push
add
xor
pop
push
jecxz
ss
mov
mov
out
or
jg
push
dec
adc
aas
popf
addr16
daa
outsb
daa
dec
out
xor
loope
cmpsb
mov
repnz
fldl
mov
adc
and
xor
jnp
mov
cmpsb
fnstsw
fucompp
scas
and
xchg
lret
mov
cmp
push
sub
sub
xorl
jg
test
add
pop
sub
mov
mov
cmp
icebp
call
adc
cli
dec
xchg
push
inc
fildll
dec
dec
test
mov
jecxz
push
mov
push
lret
out
cli
loopne
loope
push
push
xor
inc
les
pop
hlt
pop
fcmovu
out
mov
push
rcrb
rolb
adcb
mov
add
into
fnstenv
pop
mov
data16
enter
sti
out
stos
xor
int
shrb
js
fnstenv
add
leave
xchg
jl
loopne
push
je
lret
inc
jecxz
inc
lahf
imul
shrl
addr16
decl
cld
cs
nop
mov
dec
scas
mov
lgs
inc
aas
mov
dec
or
push
dec
dec
nop
fwait
mov
jmp
cwtl
fs
lods
push
clc
out
adc
pop
inc
sub
or
js
cs
leave
cmpsb
sbb
test
cmc
cld
icebp
in
dec
mull
dec
sub
add
popl
pop
cmc
add
jmp
dec
mov
push
rep
cmpsl
pusha
mov
notl
imul
pop
pop
inc
jge
cwtl
mov
inc
ror
pop
inc
mov
aaa
mov
stos
lret
xchg
fstpl
jmp
fldcw
push
add
into
sbb
or
push
xchg
ja
outsl
mov
bnd
cmp
jg
jp
push
jg
fcomps
cmpsb
into
cmp
std
push
mov
adc
xchg
cltd
andl
mov
push
xor
sbb
repnz
pop
enter
or
not
add
fcompl
js
movsb
lea
js
aad
jb
adc
and
xor
stos
ds
push
aam
dec
push
rcrb
test
or
add
pop
movsl
pop
in
arpl
inc
call
xchg
sti
in
push
mov
and
push
mov
dec
mov
mov
sti
gs
pop
les
xchg
cmpl
cmpsb
fistps
mov
in
in
roll
scas
or
xchg
mov
mov
or
xor
push
ss
mov
push
fldenv
outsl
and
clc
xchg
stc
pop
insl
flds
lahf
es
mov
jge
dec
int
in
sbb
ss
lds
in
mov
fld
daa
mov
mov
inc
add
lahf
pop
dec
lret
test
into
dec
outsb
dec
fistpl
jg
mov
mov
sahf
inc
xor
clc
je
pop
lahf
es
add
mov
data16
xchg
test
stos
push
adc
outsb
and
in
call
cli
cld
int3
fidivl
leave
mov
xchg
fsubrs
xchg
sbb
mov
push
jmp
mov
nop
push
dec
sbb
bound
dec
stos
push
loop
and
lds
sarb
ds
sbb
js
pop
lods
xchg
shl
into
jl
or
xor
dec
ficomps
push
pop
mov
pcmpeqw
shr
ljmp
jmp
repz
gs
loopne
jnp
mov
push
bnd
push
icebp
repz
das
in
mov
pop
adc
dec
mov
sbb
mov
call
pop
inc
bound
jge
sbb
adc
dec
lds
xchg
lods
test
inc
sbbb
jns
add
movsb
dec
out
insl
and
scas
popf
xor
addl
sub
lods
call
inc
mov
xor
xchg
mov
aad
pop
jmp
in
mov
sub
pop
mov
push
jg
in
sbb
or
xor
dec
stos
jecxz
inc
push
mov
sub
fldt
cmpb
movsb
mov
data16
mov
adc
jl
daa
jg
loop
ja
sbb
mov
lcall
hlt
mov
dec
fwait
xor
and
push
mov
fiaddl
pop
test
or
pop
int
out
pop
and
das
clc
call
loope
sub
jb
and
jmp
cwtl
jl
aad
xchg
cltd
and
pop
loop
ret
lods
fwait
adc
sbb
movsl
in
jge
sbb
aaa
xor
inc
cmp
mov
pop
jp
test
adc
shrl
push
jecxz
jnp
jl
idivl
push
sbb
adc
push
jnp
hlt
mov
in
jnp
in
mov
or
mov
test
push
fadd
lods
mov
cmp
pop
scas
or
fistps
fsubrl
imull
push
cli
dec
cld
add
stos
test
xchg
or
cli
mov
push
je
iret
and
mov
xorb
push
jns
repnz
sub
fildl
lcall
or
out
test
adc
loop
roll
cmp
inc
xchg
mov
decl
adc
stos
mov
inc
dec
rclb
icebp
sub
lcall
jp
cmp
repz
fs
fwait
adc
push
mov
add
daa
mov
ret
or
lods
xchg
push
lahf
push
popf
mov
repz
inc
int
js
cmp
lods
push
dec
leave
cmp
imul
cmp
fisttpl
daa
ret
jb
fs
ljmp
inc
sti
rorl
notl
lods
icebp
nop
xor
mov
add
mov
ret
inc
add
fwait
add
lret
int
imul
mov
dec
jecxz
xchg
xor
inc
cltd
jp
push
sar
rcrl
nop
xor
in
mov
push
test
imul
loope
jae
xor
mov
xchg
pop
lds
adc
stc
sub
sub
subb
sbb
mov
out
leave
adc
gs
pminsw
cmpsl
push
test
jbe
mov
test
xor
mov
jmp
sbb
push
sub
jns
aam
and
cs
lret
ficomps
cmp
lock
pop
pop
movsl
inc
dec
mov
xchg
mov
test
inc
out
xlat
cld
lock
cmp
fs
cmpsl
xlat
lahf
xchg
int
into
mov
btc
xchg
push
je
mov
sbb
xchg
loopne
dec
inc
cmp
out
xor
inc
add
fdivrl
insl
push
or
insb
pop
jge
cwtl
sbb
gs
cmp
clc
mov
loop
movsb
cmpsl
adc
daa
pop
xor
push
pop
xchg
add
xor
push
movsb
or
repz
rcl
int
sbb
popf
aam
aas
insb
sti
mov
mov
and
jne
mov
adc
nop
adc
dec
xchg
and
fcom
cmp
add
dec
mov
bound
or
mov
stc
loopne
or
sub
add
adc
xor
push
sarl
adc
std
inc
mulb
lods
pop
out
lods
xchg
lods
nop
add
rcll
psubusw
ret
sbb
or
fld
jp
push
fiaddl
sbb
push
iret
inc
cmp
jne
stc
mov
cmpsl
jnp
adc
lock
pop
imul
lahf
pushf
pop
adc
adc
adc
inc
jbe
xlat
push
mov
xchg
xchg
mov
cwtl
and
fldl
cmp
fnstcw
xor
dec
jmp
cld
jg
call
push
inc
insb
add
inc
ss
mov
repz
fstpl
or
dec
negl
rol
pop
and
into
add
sub
or
cmp
or
sbb
adc
mov
push
gs
vpslld
test
cmpsl
jae
addr16
inc
xchg
adc
mov
push
jmp
jnp
out
mov
jle
lds
add
push
icebp
jne
iret
lock
lcall
imul
inc
mov
stos
mov
inc
push
xchg
mov
inc
xor
mov
dec
out
push
pop
jo
loope
testb
jno
mov
mov
fmull
movsl
cli
push
jnp
dec
cmp
jg
add
leave
loopne
lret
enter
cmpsb
dec
jmp
ss
jbe
dec
repz
inc
push
jne
bound
imul
les
jo
cmp
sub
jb
jae
decl
out
lea
iret
push
jecxz
xchg
dec
mov
filds
mov
jns
mov
in
jecxz
mov
in
mov
test
mov
mov
mov
psubb
stos
das
dec
mov
push
gs
cs
sar
cmpb
fadds
bound
shlb
ljmp
sbbb
mov
xor
cmp
data16
insb
in
insl
bound
test
and
test
adc
aad
push
sbb
or
or
dec
inc
and
les
insb
fisubrs
outsl
jmp
stc
sbb
mov
xchg
pop
sbb
imul
adcb
into
addl
sbb
mov
pop
fwait
sbb
pop
mov
pushf
jg
outsb
or
add
jg
repz
aaa
popa
adc
cwtl
filds
fwait
es
cmp
sub
sub
jp
outsb
inc
mov
pop
mov
push
je
inc
roll
sti
idivb
jbe
inc
adc
test
and
adc
jp
pop
jp
aaa
lods
sti
xor
popa
mov
cmp
and
sar
fnsave
loope
ljmp
sbb
xchg
insb
aas
mov
repz
xchg
je
pusha
mov
pop
pop
in
cmpsb
das
fstpl
out
xchg
out
clc
dec
rolb
xor
push
inc
pushf
data16
dec
mov
aad
and
loopne
scas
dec
mov
push
adc
dec
inc
push
fwait
leave
inc
ffreep
ret
aad
dec
cmp
shll
adc
out
mov
das
fwait
or
gs
mov
outsb
pop
dec
or
nop
inc
addb
adc
lret
mov
test
xor
inc
adc
ret
leave
push
adc
or
jbe
inc
loope
arpl
arpl
mov
push
out
icebp
mov
push
mov
xchg
cli
sub
imul
insb
xchg
pop
pop
or
mov
in
pop
mov
mov
insb
repz
call
or
std
xor
or
icebp
mov
sbb
lock
in
mov
movsl
mov
push
daa
sub
mov
lahf
imul
mov
shrb
adc
mov
mov
in
ret
in
jns
into
call
push
jle
mov
shll
imul
ficompl
iret
out
push
sub
jecxz
das
insb
xchg
adc
jns
cmc
int
jge
inc
add
das
scas
call
adc
mov
lret
push
mov
sub
call
inc
pop
xchg
xchg
pushf
cmp
xor
fbld
cld
es
add
adc
jns
jmp
out
mov
fmulp
sbb
inc
xor
dec
xchg
or
clc
xlat
add
and
push
add
jns
shlb
popa
sub
enter
jae
cltd
repnz
repz
push
daa
fs
cs
lods
add
and
fs
push
lahf
jns
aaa
testb
fcomps
in
cmp
sbb
mov
js
sub
adc
xor
cmp
mov
aam
ret
cmp
adc
aam
mov
jb
mov
movsl
mov
fistpl
enter
xchg
cmp
fwait
in
lods
xor
ss
cld
les
imul
adc
int3
inc
add
sub
or
fwait
mov
xchg
movsb
and
jg
not
mov
insb
cld
adc
sti
insl
mov
fmull
add
fadd
xor
cmp
scas
mov
shrb
add
xorb
jp
push
in
fldt
push
rol
add
clc
pop
or
jae
cltd
in
lock
jne
xor
ret
push
cmpsl
div
mov
inc
popf
stos
push
jle
gs
jle
daa
jmp
divl
movsb
jecxz
std
lahf
jnp
or
sub
stos
xchg
cmc
or
fdivl
xor
out
pushf
pushf
cli
gs
cli
cmpsl
jbe
xchg
int
dec
cs
ljmp
cmpsl
int3
loope
stos
out
push
cmova
add
addb
adc
mov
cmc
adc
int
gs
pop
dec
mov
mov
dec
out
ret
fdivrp
add
mov
sbb
xchg
push
push
sub
outsl
mov
cmpsl
dec
ljmp
xchg
aad
cmp
xchg
jmp
dec
xchg
je
add
cmp
cltd
mov
jmp
jecxz,pt
lock
cli
pop
sahf
pop
push
aaa
pop
jp
or
adc
repnz
push
pop
stos
addr16
pop
rcll
mov
imul
add
push
pop
sub
or
in
jo
dec
and
sbbb
inc
adc
mov
ja
in
in
adcb
pop
in
push
mov
dec
lret
hlt
out
test
lods
sub
mov
xchg
jno
mov
mov
dec
pop
inc
jns
adc
sbb
scas
mov
outsb
lret
popf
cltd
lea
test
sbb
mov
lcall
in
aad
fiaddl
pop
or
and
cld
inc
imul
mov
call
add
test
mov
jg
js
or
in
adc
outsl
or
gs
dec
mov
cmc
cmpsl
stc
arpl
out
cmpsb
push
inc
mov
jle
add
dec
or
dec
pop
aam
cmp
and
jp
flds
es
mov
popa
jge
sti
mov
add
data16
xlat
rolb
scas
mov
ds
add
sub
sbb
and
sbb
test
mov
popf
dec
sub
xchg
mov
inc
dec
aad
mov
pop
test
jo
testb
cmpsl
rcll
fldl
jo
inc
push
sub
push
fidivs
add
and
add
mov
jns
and
or
je
inc
add
adc
lahf
mov
imul
cli
movsl
or
loop
mov
sarl
rcr
sub
mov
loope
fldcw
rcrb
xor
test
pop
aas
inc
mov
call
movsl
ljmp
dec
xor
fiaddl
sarb
adc
mov
sbb
imul
xor
sbb
sub
add
icebp
xor
mov
dec
in
jne
insl
negl
dec
sub
add
fistpl
dec
andl
int
js
outsb
pop
jo
out
mov
pushf
icebp
pushf
add
push
insb
xchg
add
jbe
xchg
xchg
lock
inc
mov
or
mov
xor
and
add
lods
data16
mov
lods
or
mov
mov
bound
push
xor
sub
mov
out
cltd
stc
in
sub
mov
leave
lods
adc
jbe
les
out
sbb
mov
cmp
mov
mov
sbb
xor
ds
jmp
nop
iret
mov
push
pop
jl
popf
or
pusha
cmp
xor
out
inc
push
mov
aas
adc
movsb
int3
test
mov
movsl
add
push
sub
push
insl
shll
pop
fstpl
sbb
adc
or
int
push
push
and
aad
jns
js
enter
iret
imul
hlt
pop
cmp
xchg
xor
mov
and
xor
mov
leave
mov
cmpsb
aaa
pop
arpl
test
popf
add
sbb
adc
lcall
test
lcall
test
jnp
dec
inc
outsl
int
out
test
mov
in
dec
mov
lret
ss
add
adc
int3
pop
popl
push
dec
enter
leave
negl
cmp
mov
loope
push
fwait
iret
cmp
dec
dec
jmp
clc
jo
xor
pushf
adc
mov
add
shlb
cmp
cmp
xor
aam
xor
dec
mov
aad
and
sti
mov
cmp
fs
lods
inc
divl
push
adc
sbb
rcll
repnz
jle
int
pop
test
sbb
cltd
iret
xorl
icebp
cld
out
subb
ja
or
outsb
xor
fstps
cwtl
jecxz
mov
xor
add
nop
push
inc
imul
insl
inc
or
xor
in
inc
xchg
push
fistpl
imul
insb
sub
xchg
push
xlat
xor
rcl
ljmp
dec
lock
js
cmpsl
insl
push
push
sub
add
rolb
xor
pop
subb
loop
ret
inc
stos
and
ljmp
pushl
fisubrs
xlat
pop
xchg
pusha
cmp
pop
sub
sti
sahf
add
add
movsl
adc
sbb
sbb
bound
sub
frstor
jno
push
mull
cmp
jne
jge
icebp
xchg
out
loop
push
ficompl
xor
adc
inc
lea
test
in
rcr
inc
out
les
and
mov
aas
es
and
repnz
mov
loop
push
xchg
xchg
lds
into
xchg
dec
dec
or
addl
aaa
test
movsb
ret
nop
test
pop
inc
fcoms
fcomi
xchg
add
sub
in
cli
adc
out
dec
and
iret
ret
jnp
mov
adc
leave
aad
mov
hlt
xor
sarb
shl
jl
les
pop
subb
aas
sub
sahf
inc
fsubs
stos
inc
jmp
lcall
adc
sarl
nop
stos
mov
push
cmpsl
idivl
gs
addr16
dec
dec
fidivl
ror
dec
dec
lods
fcmovb
xor
mov
push
pop
testl
pop
popf
jns
xchg
icebp
cmp
dec
add
pop
jmp
mov
jg
adc
jl
push
cmp
inc
ja
out
pushf
scas
adc
mov
sbb
push
imul
cmp
jo
mov
pop
ds
push
jb
leave
jg
loopne
mov
das
cmpsb
mov
mov
ret
sub
cmp
cld
test
add
xchg
lret
and
inc
mov
test
loop
scas
push
lea
and
xlat
mov
shlb
stos
fbld
push
fldt
add
mov
cmpsl
jb
xchg
fmuls
nop
test
pushf
jp
lea
xchg
enter
sub
adc
inc
loop
mov
outsb
dec
adc
mov
jge,pn
sbb
mov
pop
repz
out
xchg
add
mov
andb
lods
xchg
pop
xor
ss
arpl
xlat
and
pop
sub
push
imul
cmpsl
incl
mov
rcrl
std
inc
xor
test
pop
pop
push
arpl
xor
pop
lret
ds
in
push
sahf
enter
mov
fstpt
cmp
adc
cmp
pop
sbb
or
nop
adc
adc
mov
out
in
cltd
add
popf
mov
mov
imul
pop
dec
loopne
jns
out
sub
bound
int3
ljmp
adc
sbb
xor
xchg
fnstsw
sbb
test
push
pop
and
xor
pop
shrb
scas
mov
scas
leave
lret
push
mov
js
movsb
nop
sub
out
xor
shll
hlt
stc
pusha
and
in
psubusb
xor
aas
cld
sbb
inc
lods
stos
addr16
inc
and
in
aad
adc
lret
aaa
repz
ja
inc
mov
mov
mov
cmpb
pop
rcll
mov
cmp
mov
or
scas
add
sub
pop
test
push
inc
and
js
sub
das
xchg
fnstenv
cmp
jecxz
mov
add
fsub
dec
xchg
aaa
jns
push
push
and
test
loope
sub
xor
fsubp
xlat
in
sbb
js
rep
mov
ljmp
pop
jmp
int3
mov
cmp
adc
addr16
mov
mov
push
jne
sub
loopne
adc
subl
sti
pusha
jmp
inc
sbb
ss
or
data16
inc
cmp
imul
les
loope
adc
test
gs
xchg
andl
clc
mov
scas
and
mov
xor
sub
daa
popf
es
jbe
mov
push
es
jge
sub
sti
hlt
push
mov
sub
lock
sub
mov
mov
or
adc
inc
ror
ret
imul
aaa
pop
pop
loop
dec
xchg
das
mov
xorb
inc
into
pop
ret
inc
rorb
scas
xor
jbe
pushf
cmp
or
add
int3
lock
enter
mov
mov
or
in
shrl
aaa
ret
clc
inc
movl
repnz
inc
lds
xorl
fstpt
in
mov
outsb
pop
in
dec
mov
push
out
xchg
push
lods
popa
push
imul
mov
fildl
fadd
adc
mov
sub
fildll
mov
popf
and
jno
add
lret
push
jb
mov
loop
enter
cltd
std
push
out
jns
pop
xor
dec
lock
call
jg,pt
cwtl
in
jp
cli
mov
add
push
pop
ds
dec
movsl
leave
clc
inc
mov
inc
out
adc
dec
inc
sahf
fs
fiaddl
pop
dec
stos
cmc
and
dec
stos
stos
mov
inc
dec
or
xor
mov
add
lods
jg
push
mov
mov
jo
sbb
leave
mov
dec
sbb
loop
mov
mov
jg
fmuls
jb
outsb
and
popa
inc
std
mov
jle
inc
push
xor
out
pop
les
cltd
adc
sbb
mov
scas
inc
jg
jmp
addr16
int3
pop
mov
add
dec
sub
and
adc
adc
fsubrl
cli
jne
mov
out
fsubl
in
es
add
ja
in
in
cmp
xchg
sbb
mov
mov
shl
pop
out
jo
loopne
mov
sub
add
push
test
cmp
inc
xchg
leave
imul
pop
out
xchg
ljmp
stos
add
and
jns
or
xor
icebp
test
pop
into
ljmp
or
jecxz
or
dec
add
loop
or
cmpsl
mov
add
neg
lret
arpl
and
cld
push
data16
adc
rcrl
jo
sbb
pop
out
sbb
das
jl
or
scas
scas
lds
jmp
jecxz
mov
test
dec
cmpsb
ss
mov
fistps
cmp
cli
or
mov
or
lods
mov
pusha
sahf
es
out
mov
mov
dec
mov
mov
shlb
jb
sbb
scas
sub
dec
or
cltd
mov
icebp
push
xor
imul
mov
aas
loope
pop
jnp
push
ret
idivl
push
jnp
ret
insl
inc
and
insb
lds
lcall
inc
push
mov
inc
mov
mov
sbb
mov
hlt
dec
adc
sbb
sub
test
push
jns
adc
mov
push
js
jle
mov
ja
jae
dec
aaa
scas
imulb
and
jbe
in
aas
jmp
imul
push
and
pop
and
dec
fsubrs
cwtl
mov
adc
out
add
outsb
jbe
xchg
pop
mov
mov
iret
dec
jbe
or
fistpll
int3
pop
pop
sub
jo
push
fs
int3
jns
aas
xor
idiv
cmpsb
ja
pop
adc
mov
cltd
or
sub
cltd
ljmp
pop
push
mov
add
test
jecxz
movb
mov
mov
or
call
inc
pop
xchg
je
xor
add
imul
cmpsb
push
xor
dec
faddl
jp
mov
cwtl
dec
xor
push
xor
or
adc
jp
les
or
in
enter
xchg
sbb
popa
sti
and
movsb
sub
or
add
js
cmp
fildl
mov
xchg
fwait
jae
xchg
popa
loopne
sub
mov
out
in
pop
and
inc
dec
jne
mov
les
rcrb
popa
pop
insb
fiaddl
mov
movsb
repz
mov
adc
mov
leave
test
or
in
aaa
cmpsb
int3
imul
out
dec
jp
adc
outsl
data16
mov
cmc
mov
jmp
and
or
loope
inc
xchg
cmp
rclb
in
lods
xchg
dec
out
xor
mov
pop
hlt
jae
mov
les
sbb
add
cli
addr16
test
fsubp
xchg
in
mov
sbb
mov
stos
dec
adc
and
clc
lock
adc
orb
movsl
pop
js
xchg
leave
inc
jmp
cld
ret
add
enter
lcall
negl
sub
loopne
xchg
lahf
mov
fsubrl
mov
push
imul
popa
imul
inc
adc
adc
xor
cwtl
sub
mov
dec
dec
pop
push
push
mov
or
popl
dec
in
jle
add
negb
jg
cmp
fwait
fs
pop
push
lahf
sub
or
jl
xchg
std
sahf
popfw
hlt
push
cmpsb
les
sbb
inc
hlt
iret
outsl
call
mov
or
shlb
in
nop
lock
xor
mov
dec
out
mov
pop
scas
jnp
inc
push
adc
dec
dec
xor
inc
hlt
mov
dec
push
mov
push
adc
or
dec
addr16
faddl
mov
aam
or
xchg
std
nop
imul
sbb
jae
shrl
dec
adc
sub
jb
mov
pushf
aad
sub
fs
jge
test
outsb
inc
cli
mov
insb
sub
addr16
out
lret
mov
pop
jne
mov
negb
neg
repnz
jg
clc
sti
repnz
or
pop
push
or
pop
xor
je
sub
sbbl
push
push
imul
pop
adc
clc
xchg
dec
dec
xchg
loopne
mov
jge
xchg
daa
ret
adc
inc
roll
ret
xor
aad
std
adcb
leave
mov
cmp
lret
cltd
out
cmpsb
pop
push
lcall
push
stos
mov
dec
add
ss
orb
scas
mov
push
or
pop
and
cwtl
ljmp
sbb
inc
push
jle
push
jg
fcoml
repnz
pusha
sbb
jae
mov
rolb
out
xchg
inc
inc
adc
add
fsubrs
cs
ret
negb
shr
dec
lds
sahf
stos
jnp
inc
mov
mov
xchg
or
ljmp
push
sbb
push
fistpll
xor
sbb
das
inc
adc
out
and
xlat
jl
mov
cmp
les
add
and
test
mov
dec
gs
test
std
ret
cmc
jl
push
inc
sti
ficoms
not
xchg
popf
jge
cmp
pop
xchg
sahf
fnstenv
mov
jb
sbb
lcall
mov
hlt
pop
cltd
out
out
pop
mov
mov
adc
or
andl
outsl
icebp
arpl
dec
call
aas
aaa
sub
lahf
sbb
repnz
xchg
iret
xchg
test
fsubrl
fs
jmp
lret
imul
dec
int
xchg
mov
xchg
dec
ja
jae
lds
or
ljmp
push
imul
enter
pop
push
mov
adc
icebp
pop
fidivrs
mov
and
pop
pop
and
ja
adc
insl
dec
aaa
mov
ljmp
outsl
push
into
or
inc
push
paddd
sbb
sti
add
in
push
xor
mov
inc
cmc
mov
push
test
mov
fxch
push
ja
dec
sbb
roll
lods
push
out
mov
dec
dec
cmp
daa
sbb
push
xchg
mov
push
xchg
mov
cmpsl
xchg
mov
rep
into
push
push
pop
in
les
int3
adcb
push
or
notl
jg
addb
pop
cmpsl
scas
adc
je
or
mov
adcb
xorl
push
outsb
lods
jno
jnp
insb
call
int
push
mov
cmp
add
imul
test
cmpsb
lahf
mov
cmp
mov
push
ficomps
mov
iret
xchg
aad
adc
xor
ja
aas
cmp
mov
jne
data16
stc
or
mov
test
pop
push
pushl
sub
idivl
jmp
int
pop
mov
inc
and
fstpt
scas
test
sub
xor
inc
pop
mov
sarl
xchg
rcll
pop
sub
test
dec
imul
cmp
jno
adc
push
ds
je
xor
mov
pop
jecxz
roll
mov
push
arpl
sar
popa
cmpb
aad
xchg
cmp
push
jnp
shrb
bound
in
xchg
mov
fldt
arpl
clc
jnp
or
mov
xchg
mov
mov
pop
std
ljmp
or
cmpsb
mov
inc
mov
test
cmp
add
mov
insb
sub
xchg
inc
mov
cmp
xor
pop
arpl
stos
pop
add
add
sbb
xchg
add
mov
push
mov
loop
in
sbb
cmpsl
add
iret
int3
sbb
cmp
jae
or
fisttpl
and
push
mov
and
mov
cmp
dec
testb
pop
jae
clc
sbb
mov
or
dec
mov
addr16
push
push
mov
arpl
dec
cmpsb
add
ds
dec
mov
ret
jmp
scas
mov
divb
rclb
and
jp
std
clc
cmc
inc
in
pop
mov
dec
adc
fsubl
xchg
pushf
push
mov
xchg
stc
mov
xor
xor
inc
iret
test
mov
jle
xor
sbb
push
adc
leave
inc
call
mov
icebp
cmp
xor
cli
cwtl
int
push
jbe
call
mov
ds
movsl
cmpsl
pop
or
cld
jle
mov
dec
xchg
fsubrl
dec
clc
and
and
push
jle
imul
fwait
xor
or
xchg
into
push
jne
or
pop
mov
test
push
int3
out
xchg
add
insb
ret
sti
sqrtps
mov
lods
out
stc
lret
lea
jno
jle
dec
push
imul
testl
xchg
icebp
jp
loope
inc
push
xchg
lods
sbb
adc
dec
xchg
or
loopne
and
out
cmp
mov
jle
ljmp
dec
mov
mov
sbb
xor
lea
ss
xor
jmp
ret
insl
cli
dec
cmp
imul
or
xorl
arpl
scas
dec
negb
and
sarb
xchg
dec
pushf
lcall
rolb
fists
add
icebp
lods
in
sbb
lea
cmp
repnz
jge
aas
cmp
mov
repnz
dec
das
push
dec
cmp
cmp
js
add
pop
int
adcl
mov
ds
cmp
mov
pop
sti
dec
xchg
mov
jl
call
jg
jbe
dec
jge
shrl
sbb
pusha
test
test
out
dec
in
inc
and
shll
sarb
hlt
adc
ret
pushf
jnp
hlt
mov
sbb
xchg
out
mov
sub
fistps
adc
enter
loopne
outsb
rcrb
dec
dec
mov
fcmovnbe
mov
repnz
into
or
aas
nop
jmp
ljmp
jl
fcmovb
testl
dec
jns
xchg
add
or
sbb
lcall
add
ret
pop
hlt
aam
fstpt
call
pop
movsl
iret
xor
lds
push
jl
mov
xor
adc
cmp
adc
jmp
lods
or
stc
pusha
mov
sub
fwait
sub
daa
adc
push
lret
adc
jbe
add
in
test
xchg
ffree
xchg
sbb
or
cmp
push
orb
ljmp
or
xor
jo
push
aam
push
loop
das
lret
aad
jb
pop
dec
sbb
ss
and
mov
pop
ret
and
movsl
adc
cmp
lods
dec
mov
pushl
sub
dec
int3
sub
mov
adc
xor
daa
sub
sub
shr
push
out
dec
stc
push
jnp
push
mov
mov
aad
leave
jae
pop
or
sub
pop
into
push
movsl
dec
push
std
clc
inc
cmp
adc
inc
and
xor
or
jg
repnz
cmp
add
push
cmp
sti
cmpsb
xchg
xchg
hlt
push
clc
jg
lret
leave
dec
lds
mov
in
incb
loopne
call
dec
lock
xchg
mov
add
in
enter
inc
pusha
pop
lahf
insl
mov
gs
ret
pop
popf
xchg
bound
in
in
mov
icebp
xor
push
cmp
pop
xchg
and
xor
xor
repnz
push
push
sbb
lods
or
xchg
data16
lea
pop
xchg
mov
jmp
jae
and
sbb
jns
scas
inc
aas
fbld
cmp
in
std
inc
jge
pop
idiv
jmp
mov
sahf
lods
push
in
add
ljmp
lret
jmp
cwtl
inc
xchg
dec
adc
mov
and
shlb
dec
popf
aaa
mov
ret
sbb
sub
and
hlt
stos
mov
pop
sub
cltd
rorl
mov
sahf
ror
xchg
jl
xor
cld
sub
mov
enter
test
inc
pushf
or
fs
scas
enter
or
aaa
dec
rclb
std
push
test
dec
adc
push
jbe
test
divb
in
jbe
pusha
rcll
cmp
pop
iret
imul
pop
xor
in
ss
out
xor
mov
iret
push
jbe
mov
sbb
loopne
notl
jb
scas
clc
xchg
nop
push
dec
int
loop
out
in
je
repz
mov
xor
notw
and
and
sub
les
neg
xlat
jo
mov
je
xor
xor
cwtl
xor
bound
adc
xor
mov
lods
fiaddl
imul
xchg
xor
push
push
push
out
int3
inc
jne
sub
mov
repz
sbb
sti
adc
stc
test
xchg
lock
stos
lcall
cld
add
flds
lods
insb
xor
pop
jge
pop
pop
ds
push
fisubl
aaa
ret
outsl
enter
lods
mov
inc
arpl
inc
xchg
lock
stc
mov
call
xor
lea
mov
out
sub
jl
mov
mov
push
scas
js
sub
sub
add
shrb
rorb
fwait
or
cmp
jno
or
nop
fisttpl
add
mov
pusha
jge
xchg
or
aaa
fwait
xchg
mov
sub
mov
add
dec
daa
inc
js
shll
cmp
lods
nop
sbb
pushl
popa
xchg
xchg
test
loope
sub
cmp
and
and
dec
fidivs
and
es
stos
rclb
adc
mov
xchg
adc
repnz
ficomps
or
push
test
push
push
jae
xor
cmc
bound
cld
adc
jnp
mov
xor
mov
mov
and
inc
out
enter
jns
jbe
das
xor
into
je
xor
les
test
movsl
xor
out
cs
in
scas
jb
call
jp
sarb
and
mov
movsb
xchg
fs
andb
cmp
aas
cmp
cld
xchg
outsb
cld
push
aas
js
and
daa
sbb
mov
sub
popa
cltd
sub
xchg
xor
lahf
xor
pushf
mov
leave
add
mov
sbb
in
mov
dec
enter
aaa
testb
sub
pop
xchg
fistpl
ret
aaa
jp
dec
and
gs
push
mov
lock
gs
or
pop
out
adc
test
adc
ret
mov
inc
adc
rcll
cltd
out
popa
rclb
leave
push
add
mov
push
mov
das
repz
fs
int
divl
inc
mov
daa
sub
jp
pop
xchg
orl
cmpsl
cmp
aaa
lds
xchg
xchg
sub
xchg
mov
pop
jbe
jecxz
in
push
jle
ds
ss
cmp
lahf
jl
and
cmp
bnd
cmp
addr16
ljmp
shl
seta
repz
lea
xchg
xchg
lret
mov
loope
imul
jns
lret
fnstcw
stos
fdivrl
jecxz
mov
xchg
aam
aas
lret
into
pop
cmp
xlat
mov
cmp
rcl
jle
push
outsl
dec
outsb
jae
dec
mov
xor
and
ds
mov
test
aad
add
test
repnz
mov
sbb
dec
outsb
ja
or
xchg
xlat
jo
jb
cmpl
xchg
or
jnp
fists
aad
rorb
arpl
push
pop
fidivrs
xor
cmp
jl
pop
aam
dec
push
je
mov
lods
aas
adc
idivb
jle
mov
dec
ja
xor
push
fsubrp
orl
dec
lods
push
je
push
dec
test
sub
decl
or
ds
jecxz
jecxz
adc
sbb
xor
mov
and
scas
jp
jecxz
cltd
mov
or
sbb
fidivrs
mov
std
ror
bound
pop
out
push
xchg
sub
xchg
mov
jp
loop
stc
stos
pop
fmull
mov
mov
jg
push
xor
xchg
lahf
sub
adc
gs
out
push
aas
mov
fisubrl
shlb
inc
test
test
jns
adc
xchg
aaa
loopne
and
insl
aam
mov
mov
call
mulb
scas
aad
inc
aad
insb
ss
mov
aaa
cli
xor
aas
daa
cwtl
addb
jnp
xor
int3
sbb
loop
mov
push
insb
mov
aad
or
imulb
inc
mov
fsubl
popa
adc
setl
shr
mov
dec
and
or
dec
outsb
add
mov
or
xor
dec
cmp
or
pop
jnp
mov
in
fs
scas
pop
das
push
ds
sub
aas
loopne
lret
negb
push
fiadds
stos
ret
xor
dec
das
call
popf
pop
imul
jo
add
lahf
jbe
fs
pop
mov
cmp
cltd
aam
lret
add
cmc
adc
jp
inc
loope
inc
dec
dec
pop
idivl
ja
or
xor
inc
inc
std
ret
and
and
idivb
adc
imul
clc
int3
sbb
stc
xor
inc
ret
or
xchg
and
lcall
mov
lahf
add
cmp
jbe
in
mov
pop
xchg
in
js
adc
daa
sbb
rcrb
outsl
ljmp
mov
push
mov
imul
rcll
imul
xchg
push
mov
testw
pop
push
lea
adc
adc
cmp
shrb
out
pop
mov
mov
mov
mov
push
dec
lds
lea
pop
out
adc
pop
out
jns
jne
xchg
pusha
sarb
push
scas
ror
push
testl
repnz
jns
sub
insb
enter
cld
mov
mov
js
loope
gs
in
lcall
cwtl
jecxz
push
sub
mov
xchg
test
jb
sar
hlt
aas
lods
loop
mov
je
rcl
fisttpl
fsubl
iret
sbb
sahf
popa
in
popf
jbe
insl
lods
dec
adc
lods
xchg
sbb
jo
dec
fcmovb
jno
jg
shrl
sub
lret
fmul
shlb
jb
roll
push
push
fcomp
sbb
cmc
mov
cmpsb
xor
aas
fcom
xor
cmp
inc
cmp
movsb
or
mov
jns,pn
or
rcll
mov
add
mov
xchg
arpl
ljmp
lds
ljmp
cmp
frstor
jnp
mov
dec
dec
jno
cmpsb
add
daa
and
mov
sbb
xor
stos
dec
xor
loopne
lock
in
pop
shr
js
fnsave
xorl
jno
ja
fisttpl
push
push
test
jp
cmpsl
sarb
push
push
rorl
push
sbb
mov
mov
or
mov
pop
data16
sub
or
xchg
nop
pushf
jnp
mov
pop
dec
mov
shrb
adc
or
arpl
es
mov
mov
addl
lods
sbb
mov
cmp
ret
fstpt
ret
int3
out
repnz
out
cmp
push
sub
mov
jmp
push
std
insb
or
int3
in
sub
sub
dec
sbb
pminsw
dec
xor
or
loop
adc
mov
cmpsl
pop
mov
xchg
pop
push
in
add
test
mov
add
arpl
in
xor
add
rorl
fwait
add
inc
data16
mov
fisttpll
adc
movsl
lds
cmp
movsl
xchg
and
fucomi
mov
pop
mov
sti
inc
call
aaa
xchg
adc
mov
pop
sbb
rclb
aad
fisttpl
imul
in
mov
dec
fstps
adc
jle
mov
jge
inc
xor
mov
into
xchg
xchg
pop
push
sahf
aaa
fs
bound
test
faddp
jns
int3
adc
stos
lret
ljmp
insb
cltd
sahf
sbb
pop
hlt
int
xor
mov
sub
clc
cld
lock
imul
shrl
andb
gs
or
mov
dec
mov
mov
dec
int3
inc
pop
loope
popa
mov
xor
xchg
sub
cld
mulb
xor
mov
enter
sub
add
lret
negb
aas
pop
mov
cmpsb
lret
jnp
lods
pusha
xchg
add
stos
add
mov
xchg
div
mov
push
jmp
int3
or
cmp
ljmp
cmpsl
push
daa
mull
jmp
test
stos
sahf
sbb
clc
rol
pop
fcmovnbe
lock
jg
jge
adc
mov
data16
data16
inc
cld
sbb
xor
mov
in
sbb
push
sbbl
mov
mov
lock
cmp
push
mov
stos
into
insb
jo
xchg
xchg
fistps
cld
cmp
iret
and
sar
pusha
push
mov
jo
push
dec
hlt
pop
loop
mov
adc
test
pop
push
xchg
insb
mov
icebp
in
in
insb
cmp
and
cmpsb
arpl
out
dec
sbb
push
sbb
dec
xor
leave
xchg
or
pop
dec
out
dec
xor
sub
int
push
mov
vpcmpeqb
push
fbstp
mov
repz
outsl
mov
daa
pushf
pop
ja
xchg
push
and
loope
fmull
push
imul
sub
mov
or
repz
mov
mov
lahf
popl
pop
lahf
inc
fdivr
arpl
push
sub
xchg
or
lcall
add
cmp
jmp
jbe
js
in
movsb
cltd
push
push
xor
push
sahf
js
lea
movsl
lret
pusha
inc
and
mov
lcall
and
mov
sbb
sub
xorl
lahf
adc
xor
jns
or
add
dec
out
dec
mov
lea
mov
out
testb
into
pop
int3
mov
jg
mov
push
pop
into
lcall
test
xchg
aaa
out
or
js
ds
fs
push
mov
push
adc
iret
repz
cmp
dec
aad
dec
fs
jnp
bswap
sub
jle
jbe
test
sub
bound
cwtl
test
scas
push
jp
sti
icebp
push
rcrl
aas
out
fcoms
xchg
pop
pop
call
jno
mov
jge
call
roll
jbe
das
adc
popf
in
fsubrl
mov
xor
xlat
loop
and
sub
mov
cmp
or
or
mov
imul
sti
pop
stos
les
adc
lret
rolb
das
addr16
dec
clc
xor
fistpll
js
jge
mov
imul
push
sbb
das
ds
lahf
mov
lods
mov
aaa
add
jbe
sbb
sbb
xor
shl
push
lcall
sahf
lcall
ljmp
js
cmp
mov
add
hlt
push
mov
arpl
xorl
xchg
xchg
fistpll
gs
shr
loop
mov
imul
sar
popa
and
mov
test
push
out
cmc
call
inc
ficompl
out
mov
cmp
inc
lahf
pop
cli
or
jae
sbbb
cmp
out
jnp
imul
in
dec
outsl
cs
imul
inc
xor
mov
sarb
in
ljmp
repnz
vpsubsb
inc
lret
push
arpl
repnz
push
mov
pop
out
sub
or
mov
loope,pt
ljmp
bound
fsubrl
pop
in
mov
aam
cwtl
stos
mov
jo
sti
add
repnz
sbb
fsubrs
mov
push
cmp
pop
pop
movsl
in
mov
xchg
lock
fcomi
jbe
xor
mov
push
fldl2e
imul
mov
or
es
insl
in
pop
xchg
push
and
idivb
jno
dec
xchg
sub
outsl
mov
adc
xor
jge
push
aas
mov
sti
cmp
pop
jecxz
movsl
lahf
cmp
push
jl
sbb
ret
mov
movsb
imul
and
loope
fldcw
lret
and
adc
adc
jno
dec
aam
push
cmc
mov
sbb
nop
sbb
dec
imul
sub
scas
loope
or
pop
inc
dec
push
lret
out
and
in
roll
lret
xchg
inc
sar
mov
mov
mov
clc
adc
mov
dec
mov
dec
mov
xlat
shrl
pop
and
xchg
js
imul
lods
pop
aad
inc
push
in
or
sub
push
rcl
pop
pop
mov
aaa
addr16
cmpsl
or
add
sub
dec
or
mov
dec
xchg
andl
mulb
cmp
mov
inc
shrb
sub
xchg
or
int3
xchg
xor
loopne
sbb
mov
adc
mov
lcall
xchg
imul
sub
push
or
sub
mov
xchg
jo
into
mov
jg
test
bound
push
popf
mov
roll
jecxz
push
pop
iret
jbe
pop
fidivrs
mov
push
lds
outsl
xor
addr16
movl
ret
push
pop
adc
mov
loop
add
leave
add
mov
xor
test
mov
movsl
cmc
scas
cmp
fadds
cmpsb
xchg
inc
rclb
lahf
jmp
pop
inc
pop
mov
dec
cmp
bound
jbe
imul
daa
cs
insl
sbbl
test
rep
test
jp
xchg
sti
push
add
aad
cmp
lds
mov
je
jp
or
stc
ret
lods
rcrl
test
sub
mov
pop
cmp
or
add
xchg
xchg
dec
je
sbb
push
mov
or
xchg
mov
jb
xchg
jecxz
imul
dec
pop
xchg
inc
cld
repnz
sbb
sbb
sahf
movl
paddq
dec
idivl
daa
xor
mov
inc
in
push
mov
sbb
dec
mov
movsl
push
movaps
andb
add
push
mov
nop
fildl
add
jg
push
cmp
adc
outsb
scas
je
push
dec
in
or
fidivs
int3
jg
xchg
cltd
pop
out
lods
push
std
xor
xor
add
mov
cltd
or
cmc
or
ja
out
push
test
fsts
sar
cs
cmp
fstps
sub
imul
push
pop
push
fsubrl
sti
aaa
pop
mov
aam
mov
in
xor
jmp
imul
lret
xchg
ja
mov
ret
jecxz
xor
scas
sub
inc
and
addr16
stos
jns
mov
xor
js
repnz
xor
pop
mov
popl
sbb
icebp
loop
lock
jbe
std
cmp
mov
jnp
pop
add
mov
or
pop
fmuls
lods
aad
notb
into
xor
or
enter
add
xor
xchg
lock
mov
sarb
mov
pop
scas
outsl
push
jae
mov
jmp
rcrb
test
int
insb
push
pop
add
xchg
mov
aaa
in
adc
xor
xchg
pop
repnz
pop
mov
mov
pop
inc
mov
inc
fnstcw
dec
jb
mov
cmc
daa
mov
jno
xchg
roll
popf
mov
and
xchg
bound
xor
aas
test
int
sub
pop
pop
test
arpl
adc
iret
push
insl
pushf
pop
test
cmp
push
add
push
fbld
lret
push
inc
lahf
cmpsb
popa
sbbl
add
or
mov
std
xor
xchg
mov
rorb
push
ficoms
pushf
insl
jb
jno
pop
dec
adc
inc
popa
mov
xor
sbb
call
repz
stos
call
nop
or
dec
and
rorl
xchg
dec
jge
in
jecxz
mov
sbb
mov
lahf
fdivrl
imul
mov
aas
pusha
loop
scas
mov
pop
fists
dec
aam
test
lods
xchg
dec
mov
sbb
addr16
or
cmc
jno
sahf
add
xor
add
ret
cmp
push
fidivs
push
fsubl
or
popf
sahf
or
push
inc
add
movsl
shlb
clc
les
loope
or
inc
xor
lds
sub
push
inc
idiv
cmpsl
js
int3
popf
cltd
out
test
jge
xor
shlb
push
or
sub
jmp
cmpsl
cmpsb
pop
adc
cmpsl
and
sub
sbb
mov
je
fsubrl
negb
xor
insl
mov
sbb
add
xor
mov
ret
cmp
xchg
aad
in
pop
iret
dec
or
sarb
sbb
insl
cmc
imul
aam
xor
cmp
adc
call
push
push
push
aam
push
pop
mov
stos
lcall
cmp
fdivrs
mov
xchg
sbb
push
sub
adc
je
data16
test
sahf
test
sahf
xchg
out
nop
or
test
pop
push
add
not
and
lods
or
mov
lods
jb
scas
repnz
scas
adc
mov
mov
jle
dec
pushf
and
lcall
out
nop
pop
enter
mov
test
adc
call
xor
jle
lea
out
jnp
lea
mov
sub
icebp
shll
mov
sbb
gs
mov
mov
cs
subl
mov
imul
adc
push
ja
xchg
imul
aaa
mov
arpl
mov
mov
xlat
inc
fdivrs
or
repz
imul
adc
jnp
scas
mov
cmp
dec
xor
cld
dec
xor
test
jg
call
add
push
mov
es
fidivrs
rol
lods
inc
mov
or
out
fcom
sub
add
inc
adc
push
jmp
push
dec
xchg
je
stos
aam
jae
mov
std
mov
jo
push
mov
stos
lods
xchg
orb
xchg
mov
mov
test
cmpsb
dec
or
jl
or
jns
xor
sub
dec
adc
and
jl
inc
cli
pushf
jl
popf
sub
into
pop
add
test
sbb
das
std
adc
stos
arpl
shll
lds
push
sub
mov
inc
push
dec
xor
mov
sub
stos
clc
fimull
adc
aam
bound
aam
cmpsb
mov
xlat
pop
push
jle
push
repnz
pop
mov
sub
sbb
xorl
push
pop
into
and
decl
and
dec
mov
mov
aaa
xchg
fidivrs
pusha
adc
xor
gs
insb
jge
pop
pop
xor
mov
rcrl
add
cmp
xorb
sub
andb
mov
xor
and
push
in
or
in
and
cs
popa
in
repz
pop
jmp
into
jecxz
adc
push
in
adc
adc
jne
sub
xor
or
hlt
je
jb
and
fdivs
sub
sahf
insb
mov
fimull
fwait
xchg
sbb
mov
leave
push
lods
sbb
ljmp
mov
ljmp
adc
cmp
xchg
jmp
sti
mov
outsl
shrb
aas
push
cmp
add
sbb
and
sub
inc
loop
sahf
mov
jb
pop
jne
xchg
cmpsl
pop
test
test
out
xchg
push
mov
sbb
insb
mov
adc
mov
xor
test
lea
out
movsl
cmp
mov
cmp
into
fmul
lods
or
sahf
enter
insl
adc
cmp
call
lods
mov
in
inc
add
push
loopne
outsl
lea
loopne
clc
sbb
bound
push
jmp
mov
out
and
mov
adc
pop
jbe,pn
sbb
pop
sub
iret
mov
xlat
add
insb
ret
stos
lret
push
xchg
dec
mov
cmp
loop
jo
lcall
repnz
movsb
push
mov
inc
cltd
pop
in
xor
xor
push
dec
jl
cmp
cmp
mov
mov
icebp
enter
pop
stc
aam
fistpl
or
mov
fwait
cmc
mov
aam
insb
push
pop
hlt
xor
shlb
jle
mov
and
aad
adc
sbbb
push
mov
mov
lcall
mov
lret
jle
cmp
mov
clc
add
mov
movsb
popa
sbb
dec
ror
pop
imul
call
clc
mov
jecxz
addr16
adc
aam
mov
sbbb
mov
ficomps
mov
mov
out
inc
mov
shll
addr16
jno
loope
scas
mov
inc
ds
push
inc
jle
xor
xor
jb
outsb
test
mov
adc
jg
xchg
mov
jnp
fsts
jbe
mov
pop
pop
pushf
jp
inc
insl
fs
push
push
out
mov
xchg
shrb
inc
pop
or
pop
add
xchg
push
shrb
sub
leave
cmp
sbb
dec
mov
sbb
repz
popf
loope
and
mov
in
inc
sbb
les
lahf
out
pop
into
and
in
pop
sub
and
dec
aaa
popf
xlat
cwtl
pop
loop
popa
jle
sbb
dec
outsl
or
add
mul
or
cli
xchg
jbe
push
data16
mov
xchg
mov
fsts
jmp
and
add
sub
ror
xor
sbb
int3
adc
jno
cmp
and
cmpsl
mov
notb
js
pop
inc
and
xchg
fcmovne
aas
jne
sbb
push
jle
pop
mov
call
arpl
or
pop
sbb
push
insb
subb
mov
and
hlt
fucomi
imul
lret
popa
out
push
dec
xor
mov
lock
ds
xor
xorb
pop
adc
push
push
scas
loopne
pop
add
in
dec
jnp
aad
lods
ss
dec
mov
ds
or
add
add
xchg
adc
sbb
mov
out
cmp
dec
rclb
dec
fadds
cmp
ds
mov
mov
push
aas
push
pop
and
loopne
mov
rclb
jecxz
das
cs
jns
push
clc
mov
hlt
push
xchg
imul
std
xor
jo
outsl
jg
cmpsb
rclb
test
rcrl
outsb
jle
in
lahf
adc
sub
test
fcoms
jo
add
lock
lods
out
cmc
mov
lods
mov
xor
mov
xor
xor
fdivrs
pop
sbb
fidivs
cwtl
xchg
movsb
xchg
cmc
jge
cmp
mov
pop
mov
cld
inc
js
mov
mov
popf
outsb
xchg
std
push
stc
test
jne
nop
hlt
adc
movsl
into
shll
inc
divb
xchg
xchg
sbb
stos
out
sbb
out
ss
mov
fstpt
xchg
mov
jns
dec
insb
adc
mov
push
xor
in
fbld
std
mov
jne
xchg
nop
mov
out
inc
and
loop
fmuls
inc
jecxz
mov
push
jno
movsb
dec
andl
cld
dec
cmc
cli
pop
sahf
lcall
dec
xlat
xor
out
or
or
popf
xor
popf
fnstsw
push
test
mov
fs
push
sub
nop
aam
imul
pop
mov
push
sbb
pop
xchg
push
lock
sub
sub
dec
movsb
push
push
sub
incl
jbe
push
in
add
sbb
mov
sbb
int3
in
scas
cltd
or
adc
push
js
imul
inc
add
inc
add
outsl
insb
pop
pop
mov
or
jae
xchg
shl
mov
lret
mov
mov
mov
xor
in
js
pop
jno
lea
aam
xor
push
mov
popf
scas
sub
xchg
icebp
outsb
and
jmp
and
pop
pop
push
adc
mov
popa
xchg
leave
cmp
dec
adc
add
je
into
xor
dec
sbb
outsl
mov
imul
add
ret
dec
xchg
xchg
hlt
mov
int
shll
sbb
add
repnz
outsb
xchg
outsb
leave
or
mov
mov
jnp
loope
rclb
fldl
cwtl
dec
pop
jle
cmpsb
ret
sub
push
mov
xchg
into
pop
lcall
jl
add
pop
jbe
sarl
je
mov
pop
insl
xchg
sbbl
push
lret
std
adc
mov
mov
mov
insl
in
jbe
in
jp
lret
mov
inc
xlat
mov
icebp
mov
mov
jmp
and
push
and
mov
jne
imul
lea
andb
and
sub
cld
and
lret
stos
cmp
sbb
outsl
fidivs
test
ja
loop
sub
cmpsl
adc
in
cmp
push
icebp
adc
xor
cltd
fwait
xor
cmp
inc
sahf
sbb
sahf
pop
rolb
das
jmp
sarb
add
popf
cmpl
enter
mov
in
mov
and
shrl
cmp
stos
xchg
cli
imull
jno
stos
out
rol
fst
and
or
test
test
xor
cmpsb
inc
pop
out
mov
mov
inc
jmp
enter
add
cmp
mov
vdpps
dec
mov
mov
movsl
xor
mov
xchg
lahf
lods
dec
pop
inc
jle
subl
pop
jae
adc
dec
add
jb
loope
mov
sbb
sub
mov
fisubrl
roll
mov
pop
push
add
sahf
sub
mov
int
xchg
lret
jl
mov
roll
repz
mov
mov
mov
or
popa
sub
ds
xor
cmp
mov
mov
fwait
and
imul
dec
sete
dec
cwtl
sub
int
std
adc
lret
paddusw
or
pop
scas
add
xchg
jb
icebp
mov
sbb
or
mov
xchg
push
loope
shll
dec
or
imul
or
jp
jp
mov
popa
xchg
cld
cmp
in
fstps
sub
inc
movsb
mov
mov
scas
inc
movsl
adc
sti
notb
mov
leave
es
iret
hlt
mov
es
ds
out
out
xchg
stos
hlt
sbb
push
pop
or
cwtl
popa
jns
sub
insl
cmp
pop
addl
cmp
pop
push
sbb
shl
loop
pop
mov
scas
in
cld
loop
adc
push
xlat
xchg
add
dec
pop
pop
shrl
cli
pushf
inc
cmp
popa
mov
fisttpl
inc
push
dec
mov
loopne
mov
cltd
adc
adc
test
pop
imul
testb
inc
sti
or
cmp
loop
leave
insl
inc
cld
int
sahf
gs
sbbb
rorl
pusha
or
inc
gs
shlb
sub
mov
mov
pop
mov
test
dec
jae
inc
aam
jp
addr16
inc
ljmp
mov
je
push
popa
stos
in
push
cmp
sbb
mov
or
mov
and
rcr
and
and
mov
rcl
ret
adc
ljmp
mov
cmc
inc
jne
lret
sub
nop
jecxz
sub
in
stos
jp,pn
mov
xchg
sbb
and
and
xchg
dec
pushf
push
imul
bound
xchg
out
mov
imul
lods
out
inc
mov
imul
jle
cmp
xor
iret
push
dec
sub
push
dec
xor
fdivrl
in
xlat
imul
mov
fnstenv
xor
and
mov
mov
fmul
test
loope
hlt
in
jle
pop
mov
pushf
cmpsl
scas
enter
fs
fwait
leave
push
leave
popa
mov
push
xor
jbe
test
mov
das
push
adc
data16
push
add
int
pop
fldt
xchg
pop
jg
mov
mov
pushf
fsubl
aad
mov
stos
sbb
xor
mov
mov
mov
jnp
loopne
jmp
jmp
sbb
gs
test
pop
cmc
mov
and
inc
add
jae
les
imul
test
das
leave
cmp
test
xchg
daa
in
cmovnp
pushf
nop
ss
xor
js
cmp
sbb
je
push
movb
popa
clc
fidivl
cwtl
test
adc
bound
mov
aad
aad
mov
mov
aas
xchg
imul
fcoms
roll
jbe
iret
ljmp
pop
xchg
test
insl
jecxz
inc
cltd
jle
lods
jne
lcall
rcr
cmp
add
stos
cmp
insl
jne
cmp
mov
adc
insb
add
mov
rcrb
and
lcall
mov
repz
and
lods
jns
mov
jge
sub
test
push
pop
mov
and
insl
dec
dec
sbb
aaa
jae
repz
sub
das
mov
bound
pop
les
dec
divl
cmpsb
push
sub
push
shrl
mov
push
mov
in
xchg
or
test
jg
sub
jb
in
ds
lds
push
mov
add
icebp
inc
stos
and
outsl
push
cs
test
fbstp
push
push
enter
imul
inc
sub
push
sbb
pushf
rcl
sub
popa
rclb
lods
sarb
mov
mov
jg
stos
inc
mov
add
push
rcrl
mov
test
stc
mov
lods
inc
xor
bound
sub
out
push
cwtl
cmp
push
sub
mov
mov
push
mov
mov
incl
in
push
aas
mov
add
pop
in
and
mov
add
inc
mov
stc
divl
bound
jmp
daa
insb
adc
lret
jae
inc
lock
push
cwtl
xor
adc
mov
aad
mov
fwait
in
dec
push
aam
loop
push
cmp
sbb
pop
sub
push
pushf
test
cmpsl
ret
push
xchg
sub
sbb
pop
xchg
out
cmp
and
jg
pusha
mov
cwtl
pop
imul
cs
loop
and
xor
cmp
inc
push
int
cli
jb
test
lcall
movsb
sub
data16
pop
xchg
dec
fadds
push
mov
sbb
xor
cli
add
mov
dec
fs
pop
inc
xchg
mov
xchg
sub
lods
mov
int
lcall
negb
inc
sub
push
rorl
adc
out
rorl
shl
shr
cmpsl
testl
pop
enter
in
test
notb
mov
xor
cmp
cmpsb
sub
stos
out
or
mov
ret
and
mov
jecxz
and
pop
pop
sbb
fsubrs
jge
mov
and
nop
adc
xchg
das
ljmp
or
inc
pusha
lcall
sub
add
jl
push
cmp
cld
xor
fiaddl
lret
cmpsb
xlat
int
and
das
inc
das
mov
loop
les
lahf
push
mov
jae
xor
add
push
into
iret
jge
pop
out
lods
stos
imul
adc
xchg
add
mov
lcall
xor
dec
mov
inc
aas
mov
inc
mov
mov
notb
bound
fsts
adc
dec
test
pop
testl
aaa
ss
scas
aas
fstl
sti
xor
pop
and
sbb
bound
xor
shrl
test
sbb
fisttpll
cmp
mov
jne
stos
in
mov
jae
sub
dec
xor
adc
fistl
pop
popf
pop
push
xor
insb
sahf
js
iret
jge
leave
and
mov
cmp
fs
mov
stos
popa
mov
mov
mov
mov
nop
dec
sbb
push
pushf
fdivr
ja
fidivrs
or
jns
lcall
daa
ja
mov
xor
xorl
cmp
xchg
add
mov
adc
pop
sbb
sub
mov
or
jno
pop
int3
mov
add
out
subb
insb
pop
adc
addr16
sahf
sarb
or
into
int
fdivrp
mov
cmp
fmull
pop
jge
xchg
rcll
aas
imul
jns
inc
jecxz
mov
bound
jbe
sub
sar
or
imul
mov
and
pop
test
push
adc
fsub
push
mov
lods
aad
sbb
es
adc
cmp
pop
mov
pop
scas
fnstenv
repnz
out
xor
imull
orl
icebp
push
sahf
mov
inc
mov
inc
xor
xchg
js
or
sarb
in
call
pop
movl
aaa
xor
or
stos
inc
in
ljmp
mov
mov
mov
into
sbb
repz
int3
out
repz
imul
jne
mov
test
pusha
jo
test
jecxz
add
js
xor
pop
shrb
pop
lcall
rcll
fcmovu
movsb
lds
adc
aaa
jp
iret
jecxz
xor
pop
cmp
push
add
cmp
aam
dec
rorl
das
sarb
xor
add
cmp
mov
enter
les
pop
sbb
push
fsin
ss
cltd
and
inc
cmpsl
cmp
push
jnp
inc
movsb
xor
pop
sbb
test
lret
pop
test
repz
or
fwait
mov
int
mov
cltd
ror
xchg
lock
sub
shrl
data16
xor
fistpll
sub
das
cli
test
dec
jbe
lds
and
movsb
mov
push
jge
xlat
push
cltd
and
push
fsts
lret
pusha
add
lcall
lret
idivb
xchg
xor
aad
loope
jns
pop
lods
push
and
push
jg
push
sub
xor
frstor
clc
mov
cmp
xchg
xlat
pop
lret
adc
adc
cmp
adc
hlt
cmc
dec
mov
and
call
cltd
cmc
pop
loop
mov
and
and
out
jle
in
cld
int3
stos
popf
cmovo
or
popf
fwait
aam
fwait
pop
addr16
inc
cmp
aaa
std
add
adc
cli
data16
outsl
pop
push
pop
mov
fs
adc
cltd
jl
add
push
int
out
mov
jno
push
pop
push
jl
fimull
mov
test
stos
xor
xchg
movsl
mov
dec
adc
test
fs
xor
imul
sahf
pop
adc
aam
jno
add
leave
pop
push
addb
mov
pop
mov
loop
insb
lea
lods
jne
cs
mov
negb
pop
ljmp
mov
push
mov
lret
cmc
mov
cmp
sub
xchg
sbb
fidivs
push
gs
sub
into
sbb
sub
add
fnop
mov
jno
xor
xor
daa
ds
mov
icebp
add
nop
sbb
xchg
cmp
leave
lret
loope
sub
fdivrs
hlt
mov
mov
loop
pop
fcompl
jle
fmull
mov
cli
mov
cli
and
stos
jp
push
scas
enter
mov
lcall
out
dec
and
mov
add
cli
jne,pt
imul
mov
in
jle
jg
cmpsl
fsincos
inc
xor
adc
ret
arpl
jg
xor
dec
sarb
fwait
xchg
ret
loope
jl
sub
test
out
mov
jle
in
pusha
inc
repnz
add
in
les
dec
sub
and
addr16
mov
add
mov
call
xchg
adc
loope
fldenv
stos
or
dec
adc
cld
xor
mov
movsb
add
ficoms
shrl
test
xor
lods
mov
sbb
inc
dec
inc
mov
out
dec
jl
enter
iret
push
test
mov
jbe
cmovs
lock
addr16
xchg
jae
xchg
pop
repz
sub
lret
nop
push
and
adc
jge
cmp
push
cmp
or
nop
mov
inc
into
inc
jo
xchg
mov
or
aad
jbe
cmpsb
inc
mov
sti
jp
clc
xchg
xor
inc
cmc
or
jns
repz
pop
stos
mov
loope
sti
push
ret
in
adc
push
dec
or
push
sbb
or
xchg
mov
add
xchg
dec
sbb
out
fnstenv
push
mov
js
sub
sbb
aam
push
outsl
xchg
jmp
add
je
or
ret
loop
js
lea
push
jmp
pop
in
cmpsb
mov
cmp
adc
rorl
dec
repz
xor
jbe
andl
cld
sbb
enter
repnz
das
cmp
xchg
aad
push
test
ljmp
iret
call
dec
push
repz
cld
inc
push
push
mov
dec
rcl
pop
sub
popf
xor
xchg
shl
xor
sbb
in
xchg
xchg
cmc
mov
lret
mov
and
lahf
repz
pop
test
out
je
call
arpl
std
push
in
adc
mov
mov
leave
lea
shlb
adc
popa
xchg
add
xchg
xlat
aam
or
jae
out
mov
and
xchg
jmp
inc
and
in
test
ret
stc
unpckhps
xlat
push
pop
negl
jnp
loopne
fyl2x
std
push
push
fsubs
xchg
xchg
roll
xor
shll
ja
cmpsb
dec
push
cmc
mov
add
leave
in
jno
adc
push
aam
add
lret
cmp
fs
xor
push
ds
jecxz
je
and
outsl
inc
mov
mov
jge
adc
inc
xchg
out
jmp
insl
lret
ret
xchg
call
pop
sbb
sahf
xor
xchg
sbb
jmp
push
pusha
fldcw
je
cs
sub
mov
addr16
fcmovnb
adc
pop
inc
inc
out
sub
sti
out
mov
es
test
hlt
push
out
js
xor
lock
xor
shrl
adc
cltd
or
mov
ret
imul
into
xchg
fmuls
xlat
lcall
leave
jmp
in
or
lock
lds
or
pop
sbb
cmp
mov
in
pop
and
insb
outsb
ja
add
ret
cs
push
inc
lahf
icebp
adc
sub
shl
lahf
inc
pop
add
int
sbb
in
stos
cmc
mov
stos
add
stos
lds
hlt
mov
push
rol
and
fstpt
orl
mov
pop
push
ficomps
stos
out
cltd
aam
jmp
jp
sbb
clc
cmp
test
and
lcall
gs
popa
push
lea
faddl
jb
in
add
lods
ss
pushf
inc
inc
shr
ret
movsb
xchg
xor
mov
popa
sbb
mov
lret
or
and
jmp
aaa
push
test
pop
repnz
adc
inc
adc
out
sbb
push
lds
pop
sub
call
in
adc
push
inc
cmp
out
fs
sub
ret
push
fnsave
imul
call
ljmp
icebp
mov
ds
inc
cmp
mov
xchg
dec
fists
popf
and
xchg
outsb
fsts
ss
push
mov
test
and
cmp
test
ret
xchg
test
xchg
lds
arpl
jg,pt
insb
aad
cmp
xchg
sub
fsts
mov
sub
mov
jp
mov
xor
mov
hlt
shrb
push
xchg
arpl
test
aam
dec
cmp
dec
inc
movb
sbb
push
js
push
xchg
sub
test
sub
rolb
insb
or
test
loop
lahf
pop
or
outsb
movsl
fs
scas
adc
and
xor
out
sub
mov
pusha
mov
repz
lret
je
mov
pushf
or
sub
xchg
and
out
xor
mov
cs
std
ret
push
stos
ljmp
or
stos
jae
mov
addr16
cmc
jo
popf
mov
lock
insl
mov
push
sbb
cmp
dec
fists
in
push
or
enter
in
or
jo
add
pop
mov
or
lods
or
subb
add
rolb
repz
push
jecxz
mov
mov
mov
arpl
jbe
cltd
push
xchg
aas
jmp
mov
rorb
cmp
rorl
popf
cmc
movl
inc
or
les
hlt
aam
orb
in
adc
pop
dec
mov
xor
hlt
inc
adc
mov
fsub
iret
xchg
push
pop
jmp
das
movsl
idivl
adc
inc
dec
adc
mov
sahf
sbb
xchg
jg
push
push
in
cmpsb
in
pop
push
xchg
ja
aas
or
in
xor
cmp
cli
test
dec
fiadds
ret
arpl
fwait
cmpl
mov
pop
iret
loop
roll
sub
mov
or
lret
sti
cltd
adc
js
adc
movsb
xchg
inc
mov
sub
or
adc
js
stos
dec
int
pop
add
and
psubq
lret
cmp
and
sti
loopne,pn
lods
js
push
adc
mov
andb
out
jmp
outsb
dec
sbb
fbstp
cmp
repz
mov
iret
je
jb
sahf
ficomps
xchg
pop
jne
mov
pop
push
mov
sbb
mov
xchg
mov
pop
xorl
push
lds
out
mov
test
mov
fs
fcmovb
add
decl
sbb
dec
and
jns
add
xlat
mov
movsb
jp
push
bound
es
push
scas
cmp
out
mov
ljmp
xlat
nop
popa
and
lret
add
jl
out
ret
test
mov
xchg
mov
clc
sahf
ret
jge
mov
sub
push
popa
ja
dec
adc
jge
frstor
nop
xchg
mov
mov
jb
push
mov
adc
lods
jb
push
add
shrl
and
bnd
xchg
xchg
inc
jbe
dec
lock
movsl
loope
imul
jb
push
call
dec
xchg
mov
dec
mov
andl
jmp
pop
popa
enter
cmc
cli
loope
out
sbb
mov
push
pop
unpckhps
xchg
imul
sbb
and
fsubrs
divb
insl
add
adc
shlb
dec
jo
push
push
js
lods
jno
mov
lea
cltd
dec
xor
sbb
inc
std
shrl
push
inc
test
hlt
dec
hlt
je
imul
or
ja
pop
repnz
or
pusha
fisttpl
sub
fdivl
in
adc
fidivrs
cli
shrl
cwtl
jecxz
or
inc
add
pop
cs
mov
pop
cwtl
gs
push
xchg
fldt
ret
lods
repnz
int3
inc
in
stos
inc
inc
repnz
push
pop
dec
hlt
push
subl
dec
insb
clc
enter
or
mov
pop
or
xor
and
cmpsb
inc
or
pop
sub
cwtl
push
sub
das
pop
mov
inc
mov
xor
sub
cmpsb
sub
push
lahf
movsb
mov
lea
in
fisubrl
aam
insl
fwait
sbb
dec
fmull
insl
or
mov
mov
or
int
mov
and
fldcw
icebp
jmp
les
adc
arpl
jl
in
and
xchg
jno
ret
imul
notb
lret
jecxz
int3
scas
es
test
sbbb
aam
jmp
ret
stc
aaa
pop
mov
ss
mov
loope
add
orl
push
pop
and
incl
adc
shlb
int3
das
jmp
jo
push
mov
aas
pop
lods
int
pop
incb
shll
cmp
jmp
movsl
push
cmp
inc
test
sti
stos
jb
pop
push
pop
add
xchg
lods
call
hlt
insb
nop
in
sbb
cmpb
cmp
rcll
loope
sbb
lea
out
mov
cmp
xor
fwait
sub
mov
adc
dec
lods
cmp
xor
stc
xor
mov
cltd
lods
or
out
mov
push
call
mov
mov
imul
cmp
mov
xchg
cmpsl
popa
jne
push
shll
cmpsl
shlb
mov
loop
out
leave
and
out
push
arpl
leave
xchg
adc
outsl
push
xlat
bound
leave
hlt
dec
mov
push
out
and
mov
cs
jae
adcl
dec
stc
pop
fidivrl
out
gs
sbb
xor
xor
ljmp
inc
push
scas
cmp
outsl
push
daa
leave
adc
cli
mov
in
clc
mov
add
mov
mov
jle
and
jl
popa
pop
fidivrs
and
cltd
cmp
jle
mov
cmp
sbb
cltd
lcall
mov
stos
lods
scas
insl
sbb
daa
push
push
sub
dec
mov
and
pop
fisubs
mov
and
inc
mov
mov
scas
aam
add
lcall
xchg
push
pop
leave
ret
dec
sub
pop
add
inc
cmp
cmp
das
sbb
push
enter
ret
call
mov
push
and
pusha
sbbl
jns
rorb
icebp
stc
mov
or
enter
inc
push
and
xor
aad
sbbl
ret
jle
sub
les
xor
out
cmpsb
ret
and
xor
jmp
pop
add
pusha
pop
adc
cmp
adc
leave
or
and
test
xor
lods
sbb
sbb
fcmovne
xchg
inc
es
daa
xchg
mov
inc
mov
jae
stos
cli
push
test
das
mov
cmpsl
xchg
jecxz
cli
addr16
dec
call
jb
je
repz
pushf
fiaddl
xor
and
mov
push
stc
mov
sub
ret
ds
pop
mov
xorl
mov
cli
jbe
xor
movsl
std
xchg
mov
sub
inc
in
push
xchg
pusha
stos
sti
scas
push
pop
inc
icebp
lret
cwtl
fidivrs
xchg
ss
pop
test
jne
cmpsl
aas
xchg
pop
jb
rclb
dec
add
or
cmp
pop
inc
add
dec
adc
adc
xlat
scas
xchg
xlat
jp
orb
fs
inc
push
jge
add
dec
lea
mov
push
insl
fistl
sbb
lods
adc
xchg
sbb
rorl
and
popf
add
mov
jge
or
lods
or
movl
sbb
ret
jnp
stos
clc
sbb
shr
mov
push
inc
cmc
jle
jne
dec
call
mov
xor
loop
push
icebp
sub
pop
out
outsl
and
test
out
adc
enter
hlt
rol
cmpsl
lock
adc
adc
inc
dec
popf
ret
loop
bnd
and
adc
mov
pop
mov
jmp
pop
lret
push
aas
mov
rcll
jp
mov
xchg
mov
inc
mov
and
xchg
or
mov
ret
prefetch
or
fucom
mov
sbb
xlat
daa
jge
ret
jno
xlat
shlb
and
das
inc
or
cltd
mov
inc
repnz
jge
mov
push
cmp
mov
sub
fstp
into
push
loope
adc
js
sub
cld
dec
xchg
pop
jb
xor
push
pop
xor
stc
sahf
outsl
fs
mov
jecxz
push
mov
jae
pusha
in
cmpsb
push
jbe,pt
mov
sbb
xchg
insl
or
rolb
or
dec
or
jl
stc
mov
add
add
lret
aam
jecxz
mov
ret
mov
pop
add
out
popa
loop
hlt
into
lret
aaa
adc
negb
pop
adc
pop
inc
sbb
pop
ret
pop
mov
je
roll
mov
mov
out
and
push
dec
adc
and
lods
sbb
mov
xchg
dec
ds
repz
data16
call
adcl
in
jbe
xchg
and
add
add
test
and
jmp
jmp
adcl
and
out
clc
lods
aaa
mov
es
loope
xchg
cmp
orb
repz
push
inc
scas
push
sub
loop
fldl
cmpsb
popf
xor
mov
mov
inc
cmp
ja
add
adc
sbb
pop
sahf
test
or
cmc
repz
shrl
mov
pop
aam
lods
out
and
and
ds
repz
jno
mov
mov
push
or
mov
int
pop
pop
repnz
shlb
lea
jl
cmp
jns
add
loop
inc
std
pop
jg
pop
ret
in
pop
addr16
lret
arpl
inc
push
cmp
jb
xchg
cld
jb
imull
xor
iret
mov
jl
in
loopne
clc
pop
sub
popf
jae
ss
xor
cmpsl
xchg
dec
aas
sub
rcl
lahf
push
dec
sub
pushl
cs
sub
pop
xchg
pop
xor
add
lods
in
inc
and
pusha
xchg
enter
into
sbb
cmpl
pop
int
ret
mov
lock
sbbb
xchg
pop
hlt
and
cli
inc
movsb
pusha
xchg
and
int3
and
mov
and
idivl
xchg
jp
imul
mov
add
fwait
rsm
and
test
repnz
subl
movsb
aaa
fnstenv
dec
loop
incl
in
ficomps
aad
outsl
cli
cs
and
loope
pop
imul
push
mov
movl
or
aaa
xchg
cs
negb
push
add
sub
andb
mov
push
stc
cmpsb
push
mov
adc
mov
mov
push
sub
inc
pop
mov
push
or
in
cld
lret
jbe
pushf
jbe
xor
in
and
jg
fldenv
outsb
cwtl
mov
bound
push
aas
inc
jno
out
pusha
rorb
lods
lds
push
pusha
mov
ja
lds
movsl
xchg
mov
jl
inc
jle
dec
jbe
stc
sbb
inc
sahf
data16
iret
jl
inc
lds
in
add
jecxz
mov
add
insl
add
outsb
int3
stc
out
xchg
pop
into
mov
pop
lcall
cmpsl
pop
dec
xchg
pusha
add
lret
movl
add
pushl
jp
fscale
lea
in
mov
fstl
int
mov
loop
xor
movsl
pop
iret
cmp
in
dec
icebp
bound
cmp
inc
rcr
pop
or
adc
mov
aad
or
lds
xor
std
inc
stc
mov
lcall
push
pop
sbb
and
repz
cmpps
mov
and
push
mov
sbb
loop
daa
inc
mov
push
repnz
push
insb
aad
xchg
jmp
xchg
in
and
mov
sbb
mov
sub
xor
lcall
adc
pop
inc
lock
or
mov
fs
pop
xor
xor
ficomps
sbb
ror
inc
pop
dec
sub
test
lds
cmc
aam
ret
fwait
lea
testl
jl
in
fcomip
and
inc
add
clc
sahf
cmp
mov
int3
jl
cmp
jecxz
setp
inc
fcoml
push
or
xchg
movsl
pusha
cmp
mov
mov
inc
loope
das
mov
dec
pop
sbb
jno
lret
arpl
push
push
inc
lret
int3
jno
push
jne
fs
push
jo
xchg
aas
pop
push
mov
mov
in
fistl
xor
push
xchg
stos
mov
test
test
aas
jmp
and
add
add
es
push
out
sub
repnz
mov
mov
sub
xchg
pop
xorl
or
cmovo
add
lods
push
jb
pop
insl
insl
cltd
jns
addb
adcl
hlt
sub
push
dec
jbe
jle
pop
cli
mov
mov
mov
xchg
cmp
incl
pop
decl
clc
inc
inc
iret
mov
push
mov
mov
push
in
sbb
insl
mov
add
lahf
fs
test
scas
pop
jno
dec
ret
aad
pop
ficompl
pop
xchg
xor
je
es
dec
adc
dec
and
and
dec
sub
pop
insb
test
push
pop
mov
ds
shlb
imul
leave
roll
iret
roll
push
rorl
cld
data16
xlat
mov
jb
pop
lcall
lret
out
sarb
sbb
inc
repz
add
mov
out
push
mov
cli
cltd
lea
inc
or
lret
sbbl
mov
cmc
push
pop
sub
jne
and
ja
mov
push
nop
jns
and
movsl
xchg
jbe
mov
mov
fdivl
aam
fs
dec
inc
ds
test
cmp
xchg
mov
hlt
mov
arpl
and
push
xor
pop
sub
cmp
in
sbb
dec
loopne
out
xchg
and
dec
cs
dec
andl
adc
icebp
sti
ret
cmp
loope
orb
or
ret
mov
ljmp
imul
jg
mov
add
test
mov
inc
fidivrl
push
or
xor
jbe
in
pop
pop
stc
pop
or
leave
int
cmp
iret
push
cmpsb
fwait
daa
lret
adc
push
adc
stc
mov
pop
or
cs
in
out
pop
enter
imul
mov
mov
ficoml
pop
add
sub
xchg
inc
sub
es
enter
clc
mov
dec
andl
mov
scas
sbb
xlat
and
xor
notl
mov
sti
cmpsl
xor
dec
jecxz
xchg
mov
cs
sub
or
je
mov
sbb
adc
xchg
sub
fdivrs
mov
fsts
pop
lret
pop
addb
jp
cltd
in
push
stos
lret
mov
and
outsb
jge
xchg
mov
repnz
xchg
and
je
out
inc
jmp
cmp
and
pop
flds
imul
sub
and
addl
pop
push
lods
and
cwtl
je
sub
push
in
imul
lret
pop
icebp
fidivs
stos
int
dec
aad
insb
mov
mov
add
shr
imul
mov
clc
jo
xchg
repz
and
mov
and
cmp
and
jo
xor
dec
clc
xchg
cli
aas
pop
nop
ljmp
int3
cmpsl
fadds
out
and
push
fidivl
bound
pop
ljmp
dec
mov
call
pop
loope
arpl
xlat
jnp
add
js
xor
scas
fiadds
ret
cs
scas
sub
outsb
call
movb
fwait
adcb
xchg
add
xchg
movsl
mov
push
in
mov
xchg
xchg
sub
pop
and
adc
je
inc
cld
mov
and
jg
scas
cli
jle
hlt
bound
or
in
jecxz
aas
sbb
loope
sub
je
les
in
cmp
aaa
je
aaa
mov
out
js
xor
sbbl
jb
filds
aas
les
inc
cmp
xor
shll
cmpsl
pusha
negl
xchg
test
mov
test
test
popf
add
sub
push
sbb
jno
repz
or
fwait
add
and
lock
stos
jbe
lods
xchg
arpl
daa
sti
xor
inc
ljmp
les
mov
and
pop
pop
cmp
jp
lock
imul
adcl
xchg
cmp
cmp
jae
in
pop
xchg
out
mov
icebp
pop
jmp
in
outsl
loop
cmpsb
mov
sbb
xor
xlat
push
lods
mov
xchg
jb
mov
leave
pop
repnz
sbb
ret
pop
jle
add
mov
jge
or
stos
and
in
xchg
xor
push
mov
push
mov
ds
in
test
cmc
jnp
int
mov
rclb
and
int3
xchg
movsl
dec
daa
sbb
mov
fdivs
loopne
icebp
movsb
aas
push
dec
out
adc
pop
cmc
lea
jb
xchg
sti
jb
in
sub
ret
xor
es
mov
and
xor
test
call
add
pop
jno
sbb
repz
rolb
and
andb
test
clc
pop
aaa
popf
cmp
adc
mov
mov
cmp
in
mov
ror
inc
out
inc
lret
or
sbbl
jnp
pop
mov
scas
jge
in
clc
aaa
add
pop
xchg
mov
jl
lock
imull
lret
mov
gs
inc
mov
lret
jp
xchg
jno
hlt
xor
xchg
add
lret
adc
gs
in
sub
cld
pop
jl
jg
sbb
push
fnsave
push
aam
decb
inc
sub
inc
or
sahf
mov
pop
popl
decl
lcall
lods
hlt
and
in
ret
xor
fs
jae
cld
ds
int
ja
stc
daa
out
pusha
cmpsl
mov
pushf
lret
int
mov
mov
pop
pop
sub
fwait
aad
mov
adc
arpl
mov
popa
clc
test
call
or
add
imul
popf
repnz
dec
or
repnz
mov
and
mov
xor
js
js
popa
sbb
pop
ja
lds
xchg
imul
and
sti
jbe
mov
aaa
sbb
or
pop
faddl
xor
out
js
divw
xchg
and
mov
int3
int3
ss
mov
shll
mov
jne
psubq
fwait
push
lahf
pop
aam
xor
mov
imul
mov
push
jl
and
add
ret
call
mov
dec
xchg
push
rol
loope
ljmp
sti
mov
aad
or
comiss
ret
mov
mov
push
sub
mov
fidivl
fs
or
xchg
pop
out
mov
or
lret
testl
sub
cmpsl
mov
rcrl
cmp
cmp
dec
push
loop
and
ss
or
bound
shrl
mov
aam
aam
xchg
inc
dec
fstpt
cmpsl
mov
jae
bound
and
jo
or
cltd
fcmovu
mov
movsl
movl
movsb
xchg
cmpsl
movsl
adc
push
xchg
rclb
or
das
mov
xor
rclb
dec
xor
jns
mov
push
sub
pop
push
sbb
push
mulb
and
mov
jno
dec
lods
movups
lea
stos
jnp
cmp
lock
add
je
aad
jae
adc
movsl
movsl
jo
jbe
lret
pop
mov
sbb
xor
sbb
push
sahf
sbb
cmpsb
mov
jno
scas
xchg
in
jge
lods
and
push
jecxz
sub
aam
mov
inc
mov
dec
outsb
pop
pop
adc
mov
mov
dec
in
push
mov
adc
pop
iret
int3
leave
and
jmp
imul
loop
popa
mov
xlat
imul
dec
jl
out
hlt
add
jp
cmp
mov
pop
in
loope
and
addb
sbb
fildll
push
imul
mov
xlat
inc
pop
push
mov
daa
out
jne
dec
jns
add
jae
cmpsl
and
adc
test
test
gs
pop
sbb
popf
mov
hlt
sbb
sub
jmp
sub
xor
push
repz
mov
inc
scas
sbb
inc
push
pop
xor
xchg
sbb
fnstsw
in
sbb
es
out
cmp
std
add
mov
lods
pop
dec
cmp
lret
adc
mov
sub
fs
sub
in
adc
dec
in
rcll
mov
popf
mov
pop
stos
rcll
mov
aam
ljmp
mov
jecxz
test
or
test
xchg
mov
int3
ljmp
cmp
inc
aas
aaa
jb
ret
or
loopne
mov
inc
add
rolb
into
pop
gs
ja
push
repnz
pop
fbld
into
xchg
lahf
insl
lock
jg
popf
imul
lds
mov
lods
mov
popa
lods
ror
sbb
add
leave
adcb
pop
adc
je
jne
test
movl
push
test
jne
xchg
add
push
xchg
lret
xlat
mov
in
fwait
xchg
sbb
jno
fs
xchg
fwait
add
movsb
dec
stos
cmc
les
jp
cmp
push
mov
cmpsb
std
mov
test
push
insb
lods
push
pushf
push
frstor
aas
push
xor
jmp
inc
cltd
ret
cs
cmp
out
lods
jg
daa
scas
jge
in
mov
lret
push
nop
fwait
xchg
jb
jecxz
pop
add
push
clc
orl
repnz
bound
cmp
lea
push
pusha
jecxz
nop
cmc
xor
mov
imul
push
push
sahf
jl
cmp
jl
loopne
repnz
mov
mov
jl
mov
add
add
insb
mov
stc
push
call
cmp
out
add
and
in
and
cmpsl
lahf
pop
cld
sbb
sub
pop
fdiv
repnz
add
adc
sbb
subl
movsb
xchg
inc
aad
mov
jno
ficoml
pop
inc
adc
cmpsb
shlb
mov
xchg
add
push
lock
test
popa
aad
cmpsl
stos
mov
ds
mov
movl
sbb
and
insl
jbe
lds
sub
loopne
push
jns
xor
test
out
or
mov
insb
lds
in
popa
xchg
push
mov
outsb
jno
jg
push
jnp
and
pop
ja
jmp
cmc
mov
outsb
adc
scas
lock
mov
and
lea
test
sti
imul
mov
sbb
pop
xor
cmp
sbb
mov
test
pusha
loope
pop
scas
xor
insl
dec
sub
dec
cwtl
in
adc
sub
mov
dec
mov
test
push
lods
inc
adc
jecxz
mov
mov
cltd
fsubs
sbb
cmp
aas
inc
inc
jl
lahf
fwait
scas
pop
sar
jl
aas
mov
dec
fsubrl
pop
inc
repz
push
imul
xorb
ja
js
xchg
mov
pop
cmp
dec
sub
push
add
mov
cmpsb
clc
xchg
test
les
or
outsb
sub
mov
inc
dec
mov
jle
inc
arpl
nop
jo
inc
fistps
int
sbb
in
add
imul
lea
aas
rclb
push
daa
sbb
imul
imul
sti
lret
and
dec
and
shll
mov
push
push
sbbb
jge
in
movsl
mov
loope
or
inc
test
stos
adc
push
nop
jns
inc
adc
lret
ret
lea
fs
clc
call
cmp
inc
call
inc
mov
mov
gs
inc
mov
jnp
call
dec
add
and
adcl
ds
imul
pushf
sbb
addr16
adc
add
ret
and
stc
repnz
lret
fadd
dec
into
sbb
add
or
xchg
jge
sahf
test
adc
adc
xchg
rcll
popf
or
out
pop
add
xor
clc
insl
fxch
sub
sti
je
or
int3
jge
sbb
cwtl
into
mov
pop
aad
int
xlat
scas
mov
imul
js,pn
xchg
and
cmp
fsubr
leave
js
sarl
push
jg
ljmp
inc
fdivrl
stc
pop
cmp
inc
movsb
out
std
mov
ljmp
mov
mov
adcb
addb
xor
test
inc
jae
imul
aas
and
jecxz
shlb
jnp
mov
gs
sti
xchg
push
cltd
setno
mov
mov
lods
push
hlt
jmp
mov
mov
je
clc
in
jle
pop
addr16
mov
cmp
outsl
lcall
lret
insl
mov
mov
cmc
rorb
lock
cmp
jne
cmp
and
in
inc
sbb
incb
dec
aam
or
mov
jle
ret
testb
mov
push
xchg
inc
mov
or
or
xor
jae
and
inc
bound
sbb
cwtl
push
mov
and
fsubl
push
jp
fsubs
repnz
test
test
cmc
dec
adc
and
pop
jmp
xchg
outsb
xchg
loope
mov
sbb
addb
mov
int
enter
pop
mov
and
xor
stos
add
ds
dec
inc
adc
jae
inc
lahf
mov
and
shrb
test
and
test
xchg
push
incl
mov
rcrl
addr16
xchg
gs
sub
mull
mov
sub
cmp
and
mov
pop
stc
sti
mov
pop
or
fucomi
adc
clc
stc
sbb
add
mov
inc
push
push
or
mov
xchg
dec
test
or
xchg
sbb
xor
insl
jo
lds
loop
push
lds
xchg
sbbw
pop
add
sub
outsl
rcrb
leave
and
mov
push
mov
xchg
mov
test
sub
ss
mov
mov
or
or
mov
pop
xchg
pop
fcomp
lea
sbb
lahf
cld
repnz
imul
add
sub
mov
int
pop
cltd
out
ss
sbb
mov
xchg
mov
xor
sahf
sbb
add
sub
popf
gs
stos
xchg
mov
fistl
xchg
movl
or
and
in
jb
mov
fimull
mov
mov
cmpsl
cmp
push
sbb
dec
fistpl
lea
or
and
push
in
xchg
push
sbb
flds
adc
add
loopne
xchg
push
mov
pop
js
ja
mov
in
jo
xor
aaa
cmp
adc
adc
sub
cmc
dec
or
lods
outsl
test
shr
and
sbb
pusha
push
cmp
or
cmp
mov
test
inc
or
test
cld
lcall
adc
sub
lock
adc
les
aam
ljmp
out
insl
popa
mov
jecxz
punpckhdq
jle
cs
out
mov
sbb
inc
push
or
in
mov
push
push
inc
dec
and
hlt
cmpsl
xor
pop
dec
push
add
aad
loop
push
sub
sbb
ficoms
add
jp
cmp
dec
jnp
loop
jp
repnz
movsl
or
xor
xor
jno
cmpsl
dec
sub
jbe
lea
ret
rorb
loop
sti
insl
jns
out
dec
mov
add
mov
pop
xchg
adc
loop
in
adc
roll
ja
add
xchg
adc
or
int3
in
jmp
adc
jl
push
xorl
xorl
out
push
repnz
mov
lock
into
xchg
lret
stc
jne
jbe
ja
test
push
jnp
mov
jp
add
inc
mov
scas
scas
fcomps
cmpsl
cs
adc
adc
or
repz
adc
mov
lds
push
imul
out
aad
pop
add
vpaddw
pop
cmp
cmp
mov
push
inc
dec
mov
cmpl
sahf
testb
stos
decb
xchg
inc
jle
jge
out
lds
sub
test
sbb
cmpsb
and
addl
sub
out
sub
and
inc
outsb
xor
xor
mov
in
xor
std
ljmp
add
scas
jno
sbbl
rorl
mov
js
mov
mov
pop
and
xor
into
dec
xchg
pop
stos
and
pop
mov
adc
cmpsb
mov
repnz
testb
rcrl
lods
mov
add
inc
pop
in
cmp
mov
jnp
out
sub
add
nop
lret
and
rclb
lds
mov
repnz
rcrl
sahf
mov
mov
aas
jbe
and
mov
jne
add
sbb
pop
in
push
fxch
ljmp
popa
mov
roll
cmp
outsw
jl
xchg
popf
aad
out
mov
out
xor
mov
clc
lods
imul
sub
dec
out
sub
pop
xchg
jno
aaa
scas
insb
mov
jp
lock
call
hlt
xor
xchg
lods
pop
mov
mov
sbb
stos
fiaddl
xlat
push
ds
lea
xchg
sub
xchg
daa
loop
fcmovnu
icebp
pop
rcrb
cltd
xchg
lock
inc
pop
or
out
lahf
popa
xor
test
xor
add
add
add
mov
icebp
shrl
cmp
shrb
cwtl
pop
jp
push
inc
fisubs
and
xchg
jnp
inc
test
hlt
lods
inc
sub
popa
test
out
fnsave
add
stos
pop
push
and
inc
sub
in
mov
shrl
cli
arpl
jb
mov
fnstcw
adc
sbb
lods
data16
shr
ja
sahf
stos
jns
arpl
nop
jae
xor
mov
sub
test
and
je
push
stos
loope
popa
cmp
imull
mov
mov
int
pop
fistpl
mov
sti
adc
aam
popa
jecxz
xchg
popf
lock
fstpt
xor
aas
adcb
push
mov
into
push
xchg
push
cmpsb
mov
jp
or
adc
mov
mov
int
clc
cmp
or
rol
mov
pop
pop
cmpsb
jo
fstl
dec
xchg
je
adcb
cli
or
sbb
jge
sub
lods
icebp
nop
dec
mov
mov
jae
hlt
mov
data16
push
mov
xchg
pcmpeqb
pop
lock
mov
pop
shrb
bound
adc
sahf
adc
dec
sbb
cli
mov
lahf
push
scas
pop
andps
mov
sti
sbb
js
xchg
cmp
lret
xor
out
subl
xchg
dec
ss
sbbb
or
xchg
mov
pop
shl
cmpsl
sbb
push
sbb
into
dec
adc
cs
fadds
sub
jge
shrb
mov
mov
arpl
orps
inc
xor
sbb
rclb
fdivs
test
xor
js
add
cltd
in
push
cmp
or
fnstenv
pusha
push
sahf
xchg
shlb
js
movsb
cmp
xrelease
mov
insb
pop
popa
inc
loop
xchg
in
mov
pop
or
lret
sbb
inc
mov
sbb
lcall
inc
dec
icebp
dec
xlat
xchg
jle
sub
xchg
mov
xchg
xlat
dec
xchg
rcrl
sti
lds
sti
dec
icebp
outsb
adc
outsb
inc
adc
mov
test
hlt
fiaddl
inc
rclb
lcall
cwtl
mov
sti
loopne
gs
push
jle
int3
rcll
xchg
inc
mov
aad
sbb
push
int
aam
negb
out
mov
int3
lods
shrl
or
in
sarl
cmp
jmp
ds
push
dec
test
xlat
iret
adc
jle
into
adcb
dec
mov
dec
push
xchg
aam
fwait
hlt
clc
je
outsl
mov
push
jae
fdivs
enter
mov
sub
mov
call
jecxz
and
push
or
jle
mov
pop
mov
in
inc
mov
clc
push
gs
stos
jbe
icebp
xchg
push
pop
aad
sbb
and
mov
aad
lods
mov
fld
pushf
pop
dec
adc
lahf
inc
int
out
mov
lods
push
xor
add
in
imul
lahf
xchg
mov
pop
mov
mov
push
sbb
sub
xor
inc
dec
daa
push
scas
fisubrs
lods
sbb
sbb
fsub
popa
outsl
adcl
sahf
je
push
xchg
mov
out
sbb
scas
cmp
mov
sbb
scas
cmp
lea
lock
mov
mov
adc
lods
mov
or
push
sahf
adc
dec
lret
mov
pop
punpckhwd
pop
bound
and
push
lds
ret
xchg
imull
sti
movsb
hlt
leave
daa
inc
and
lods
clc
jg
adc
inc
inc
movsl
and
inc
or
insb
xchg
and
inc
pop
aas
add
push
loope
stos
je
ret
in
ret
out
fsubl
pop
enter
leave
ret
add
xchg
mov
add
insb
inc
xorb
push
push
xchg
mov
jecxz
movsb
aaa
xor
cld
sub
sub
arpl
or
pusha
mov
push
outsb
pop
mov
jp
jno
mov
jmp
imul
fwait
add
into
in
jne
mov
and
sbb
inc
add
out
addb
popa
and
lock
fcomip
cmpsl
imulb
call
jns
pop
sbb
insl
idiv
imul
shrb
and
fldcw
pop
lret
outsl
fistpl
nop
mov
aad
mov
xor
je
xchg
mov
fdivl
mov
cmp
mov
xchg
std
pop
negb
retw
sbb
jl
dec
push
out
rorl
dec
add
mov
out
cmp
lea
add
adc
push
cli
lods
inc
xor
cmp
push
mov
pop
pushf
addr16
or
mov
in
mov
mov
int3
mov
push
push
cmp
loope
outsb
addr16
xchg
adc
fistl
dec
je
test
aad
aas
je
es
jno
negb
sub
arpl
mov
jge
pop
jb
mov
cmp
sbb
pop
call
lds
dec
in
outsl
test
lods
jne
jbe
sub
sub
stc
test
inc
sbb
inc
dec
xor
enter
test
out
mov
inc
pop
mov
lds
ljmp
inc
xchg
aaa
sub
add
push
int3
mov
addr16
push
testl
fnsave
in
or
dec
in
sbb
ret
enter
fcompl
or
adc
cmp
ja
ss
pop
adc
push
inc
push
loopne
pop
lods
iret
dec
ds
xor
int
dec
sti
mov
je
pop
pop
add
lret
mov
mov
cmp
add
and
cmp
les
iret
outsl
jnp
jecxz
sub
jmp
push
and
cli
gs
pop
push
jb
jecxz
lea
cmpsb
pusha
fcom
add
flds
test
cmp
mov
mov
push
cwtl
lea
lahf
push
lods
adc
fcmovne
aam
and
scas
je
mov
mov
inc
scas
xchg
bound
into
lret
jo
iret
call
movsl
daa
mov
sahf
subb
adc
fucom
in
mov
cmp
pop
fnstenv
sub
jecxz
or
les
scas
xor
pop
pop
mov
mov
inc
sub
add
cs
or
data16
xlat
mov
seta
repnz
stos
mov
xchg
aas
loop
lret
add
mov
cltd
and
mov
arpl
in
mov
decb
cmp
popa
mov
arpl
adc
adc
jb
push
mov
enter
add
jg
add
stc
in
inc
pushf
jae
in
je
mov
dec
lret
test
pop
in
cmpsb
sbb
icebp
stos
ret
mov
mov
xchg
xor
mov
pushl
test
fwait
jmp
sub
add
pop
push
or
ret
sbb
add
mov
add
lods
ja
das
lret
fnsave
dec
addr16
push
jmp
lcall
js
fldenv
inc
fwait
mov
cmpsb
lahf
ds
mov
cmp
sbb
xchg
aam
adc
repnz
rolb
rep
aam
adc
push
push
cmp
mov
imul
es
mov
scas
mov
push
gs
jne
add
mov
gs
push
test
lret
push
push
push
fwait
das
cmp
jle
cwtl
pop
stc
jo
insb
int
pushl
and
jg
add
outsl
mov
xchg
imul
int3
icebp
gs
mov
adc
loope
ljmp
sub
ljmp
mul
push
xchg
imul
iret
sub
push
in
fst
and
mull
xlat
fwait
ror
mov
lcall
or
mov
inc
and
scas
scas
jp
negb
loopne
loopne
xchg
testb
lods
mov
cmp
xchg
enter
out
xor
mov
pop
pop
and
test
andb
fsubl
dec
das
and
xchg
push
outsl
lret
adc
mov
sub
lret
lock
popa
cmp
inc
or
and
test
test
stc
cmc
nop
jg
lcall
imul
in
inc
nop
and
icebp
cmp
jg
cltd
adc
mov
push
pop
outsb
aas
mov
insb
adc
fisttpl
add
mov
mov
mov
xchg
int
pop
pop
cmp
js
outsb
sub
add
jg
jno
push
sub
add
cmp
pop
daa
fisttps
fs
inc
rcrl
test
xor
cmpsb
push
es
xor
push
shrb
jnp
lds
insl
lret
clc
cmp
aam
mov
or
adc
jle
subl
inc
add
xchg
jge
mov
test
sub
mov
inc
cs
mov
jne
ds
flds
out
cvtps2pd
mov
jl
sbb
adc
sti
out
push
scas
cmp
cmp
in
or
popf
or
pusha
nop
xor
or
movsl
lea
xor
push
or
repz
jp
adc
and
or
mov
mov
mov
adc
or
push
mov
sbb
pop
jl
mov
add
adc
lcall
pushf
mov
out
xchg
sub
push
inc
call
js
fidivl
xchg
out
mov
jge
js
das
jno
adc
fistpll
add
push
push
mov
rcrb
clc
lds
add
adc
shll
lcall
mov
adc
hlt
lock
lods
jne
jno
adc
test
ss
push
es
dec
outsl
int
shl
addr16
nop
lock
adc
jae
fists
stos
enter
inc
in
cmp
xchg
pusha
push
into
stos
add
jl
flds
mov
fs
pushf
jl
es
and
orl
cmpsb
out
xchg
repnz
adc
xor
jbe
sbb
xor
pop
mov
pop
stos
int
gs
sahf
push
push
arpl
cld
jo
mov
movsl
adc
mov
test
clc
or
loopne
leave
aaa
arpl
sub
sub
daa
mov
in
push
popa
sub
sbb
add
in
insl
scas
and
hlt
cli
pop
ret
mov
loope
or
inc
ja
scas
fisubrs
outsl
arpl
and
mov
ret
cld
inc
push
ret
fs
mov
pusha
mov
test
arpl
xchg
lret
stc
repnz
inc
jo
std
out
hlt
and
xchg
xor
and
inc
cmpsl
mov
cmp
cmc
sub
jns
je
push
repz
jne
test
mov
lret
fcoml
push
push
outsl
dec
adc
xchg
cmp
lock
faddl
push
xor
xor
adc
subl
mov
iret
xchg
popa
imul
imul
pop
int3
mov
cmp
repnz
mov
stos
sub
and
mov
add
jg
loop
lret
pop
cmp
out
mov
adc
inc
ljmp
xor
xor
dec
mov
scas
fsubrl
loopne
out
js
and
lea
sub
mov
jl
aam
rorb
nop
pushf
or
icebp
sub
loopne
push
dec
fldcw
addr16
sbb
add
sbbb
xor
call
insb
push
sbb
jl
or
test
push
dec
es
leave
sahf
sub
cld
pushf
jg
int
fistpl
movsl
mov
out
jo
xor
adc
in
xchg
cmp
and
sub
sarb
loope,pt
adc
pop
or
clc
xor
xor
jnp
lock
out
jno
jp
lret
push
pusha
dec
loope
movsb
pop
mov
sbb
or
xchg
sub
mov
mov
test
fcmove
sbb
dec
cmpl
push
jmp
lahf
sahf
push
jno
movsb
jge
sahf
sub
mov
inc
insb
adc
imul
or
sub
movsb
mov
sbb
les
push
scas
jg
sub
jle
jae
xor
clc
mov
sbb
lods
outsb
clc
insl
aad
mov
call
adc
arpl
inc
cmp
clc
les
add
adc
inc
js
add
lea
jbe
push
test
aam
adc
mov
nop
jae
not
test
aam
insl
jge
push
or
loope
fistpll
mov
in
mov
xchg
stos
out
cmp
inc
jl
bound
jecxz
inc
inc
xor
mov
mov
and
les
rclb
test
push
orl
add
sti
mov
jl
xchg
jl
lods
jmp
sarb
sbb
lret
inc
rcr
outsl
nop
add
arpl
push
dec
out
addb
sahf
scas
loop
es
inc
cmp
out
sub
out
pop
mov
faddl
lods
sbb
or
push
pop
inc
dec
mov
stc
scas
mull
jnp
dec
movsl
pop
aas
bound
cs
push
mov
sarl
int3
pop
cwtl
mov
cmp
cmpsb
outsb
jbe
push
jne
cmp
pusha
inc
sbb
push
cltd
push
daa
stos
fistps
sar
es
sbb
jmp
sbb
or
or
pop
xlat
push
in
lret
jb
aas
fisubs
adc
pop
fs
aaa
int3
pop
bound
mov
push
or
jg
lret
inc
add
leave
fnsave
aad
mov
or
out
and
sub
and
enter
push
nop
push
in
arpl
ja
xor
mov
cmp
ret
aam
cli
jge
movsl
loopne
sbbl
xchg
mov
add
mov
jp
pop
test
jp
mov
test
shll
mov
popa
aas
pop
test
push
inc
cwtl
outsb
sbb
shrb
push
inc
add
inc
xor
orl
cmp
dec
test
loop
repz
mov
flds
ja
push
mov
cld
jge
arpl
out
les
ljmp
call
adc
mov
or
sbb
in
cmc
pop
bound
les
xlat
jmp
dec
cltd
in
into
mov
push
aas
in
jnp
into
mov
mov
xor
add
inc
sbb
jnp
mov
inc
les
inc
jo
xchg
out
leave
sti
dec
minps
insl
imul
xor
dec
data16
in
js
loopne
xor
pop
test
pusha
int3
sub
or
idivb
inc
mov
pop
jmp
aam
dec
mov
push
adc
movsb
inc
imull
sbb
xor
mov
jns
out
ds
adc
mov
jo
jnp
pop
cmpsb
iret
cli
and
loop
push
xor
jne
pop
decl
sub
xchg
mov
sti
add
mov
adc
cltd
pop
cmpsb
and
cmp
imul
cli
ljmp
aad
dec
das
pop
pop
sahf
mov
pop
test
sub
sahf
int
sub
lds
sti
cltd
mov
jmp
cli
xchg
fwait
es
sarb
adc
imul
out
adc
test
cmp
loopne
popa
data16
fucomip
in
or
repnz
sar
cltd
js
jae
and
test
dec
mov
xor
loopne
test
sar
xchg
pop
imul
jl
adc
into
addr16
pop
lds
jg
push
bound
aad
jmp
mov
clc
cwtl
jb
inc
and
push
jne
adc
in
pop
pushf
inc
test
shrb
pop
ficoms
mov
pop
lret
push
sub
call
lret
inc
sub
cmc
cmp
fs
and
fists
xchg
mov
fs
shlb
addr16
outsl
ret
and
movsb
push
push
les
movsl
sbb
imul
loope
aaa
push
adc
push
pop
lret
fwait
xchg
in
lods
inc
into
sbb
fs
bound
adc
enter
jnp
das
jle
faddl
push
mov
repz
in
stos
aam
arpl
fists
das
sbb
int3
popf
pop
xlat
xor
pop
scas
lods
jmp
aad
cld
inc
addr16
rorl
lcall
cli
in
stos
sbb
sbb
sarl
sub
pavgw
add
add
inc
add
jle
fidivl
and
test
jo
lods
lds
add
jp
divb
cmp
popf
insb
inc
pop
mov
or
rol
dec
inc
dec
es
cmpsl
push
inc
push
xchg
or
in
jns
add
leave
push
sbb
pop
add
mov
test
xchg
movsb
push
mov
pop
iret
and
divb
push
jl,pn
and
stos
loop
mov
stos
and
sbbb
rolb
shl
repz
mov
dec
sbb
adc
ja
mov
les
movsl
sub
bnd
adc
roll
cltd
sbb
out
mov
call
arpl
jb
dec
int
and
fidivl
lret
mov
pusha
or
inc
aam
imul
push
out
xchg
addr16
fstp
and
jge
sbb
std
scas
lds
imul
pop
add
dec
cmp
xchg
mov
ret
xchg
mov
insb
sub
int3
mov
jge
dec
test
mov
mov
fdivrs
mov
int3
push
pop
push
ja
jge
pop
mov
jbe
ljmp
xor
dec
int3
aam
mov
ret
inc
sub
clc
js
daa
push
scas
pop
push
cmp
ret
ja
xchg
stos
shll
push
sti
in
xor
je
add
add
inc
mov
in
cmp
xchg
outsb
testl
jmp
mov
cmpsb
outsb
js
cltd
sub
jle
mov
dec
addb
lret
sbb
xchg
inc
cwtl
push
sbb
pop
cltd
test
ljmp
xchg
loopne
add
out
sar
mov
inc
in
pop
into
fisubl
xchg
jle
inc
movsl
cmp
cmp
mov
cmp
out
shll
into
mov
scas
mov
shr
mov
insb
inc
push
in
xlat
xorl
int
add
pushf
adc
cmc
outsl
andl
lea
push
std
jbe
aad
jge
mov
adc
jnp
pusha
scas
cmp
pop
xchg
das
and
xchg
sub
sar
sub
push
outsl
repz
jle
or
test
ret
sub
adc
movsl
xor
dec
dec
xchg
push
sbb
insl
or
andl
cmp
das
inc
inc
aas
mov
sub
jl
scas
add
mov
jne
pushf
cltd
and
jbe
cltd
cmp
mov
xorb
int3
xor
mov
inc
cmp
cs
mov
dec
xor
add
add
dec
xlat
jb
inc
arpl
jne
test
xor
pop
sbb
jns
xor
data16
mov
pop
stos
sbb
imulb
xor
scas
hlt
int3
inc
xor
sahf
nop
gs
mov
loop
xor
sub
push
daa
cwtl
hlt
mov
imul
cmp
rcll
push
pop
and
mov
cmp
dec
mov
sbb
mov
adc
pop
jae
sbb
cmp
and
loope
push
imul
mov
add
or
scas
or
data16
jo
jbe
and
add
dec
loope
or
push
sub
add
out
cltd
daa
imul
sbb
jbe
cmp
dec
lods
stc
mov
aam
mov
sub
loope
push
xor
mov
mov
mov
and
and
daa
in
popa
mov
jmp
repz
aas
sbb
jge
inc
out
push
call
stos
mov
sub
dec
mov
scas
ljmp
divl
inc
clc
fiaddl
jp
test
and
mov
pop
not
adc
mov
clc
out
lock
popf
call
shll
sub
push
daa
out
add
mov
or
xchg
push
mov
add
in
insl
pusha
jecxz
hlt
rolb
sub
clc
adc
push
xchg
les
mov
imul
inc
jbe
push
mov
push
ret
lods
or
jo
stos
xchg
in
inc
mov
mov
push
out
mov
ror
mov
fwait
test
and
mov
cltd
or
sub
mov
ds
repz
push
add
lock
out
test
xchg
jne
test
dec
sahf
repnz
pop
jnp
lods
adc
out
fsubrs
adc
adc
shlb
xor
imul
sbb
cmp
sahf
shlb
push
mov
dec
addr16
mov
xchg
test
jne
lds
loopne
fbld
xchg
notb
push
dec
fmuls
pop
shlb
push
cmpb
mov
sub
fisttps
or
and
jle,pn
mov
repz
mov
inc
ljmp
inc
sbb
xor
sbb
push
dec
mov
mov
or
sarb
ds
jo
andb
jae
cmp
cwtl
and
xchg
jo
testb
mov
mov
shlb
lcall
sub
ror
test
das
inc
sub
and
jno
imul
cs
mov
sub
cmc
test
mov
stos
dec
add
push
loopne
out
pop
push
sub
mov
arpl
pop
addr16
adc
ja
incb
jg
mulb
shl
and
les
repnz
mov
pop
test
push
sub
je
hlt
cmp
repz
loopne
outsb
test
js
adc
pop
mov
lock
xor
jge
inc
jbe
and
mov
push
in
jns
stos
jae
ds
cmp
mov
and
repnz
pop
out
jns
js
jmp
shrl
gs
sbb
iret
cmpsl
add
xor
xchg
inc
add
insl
popa
and
or
das
lahf
imul
and
add
cs
les
inc
push
add
ret
nop
cmc
filds
addl
jb
pop
sub
orl
sbb
mov
mov
cs
and
call
sub
lods
inc
mov
dec
pushf
cmp
lret
push
clc
data16
mov
repz
out
aas
int
das
pop
movsb
ss
pop
inc
mov
test
mov
and
in
push
in
fistps
loopne
sub
dec
pop
fnstsw
cmc
xchg
scas
fisubs
dec
sbb
xor
pop
dec
hlt
push
pop
xchg
arpl
cmp
mov
aaa
push
fadds
icebp
mov
shr
sbb
push
hlt
jne
out
pop
mov
xor
xchg
push
push
push
push
mov
cmp
std
mov
cmp
imul
leave
mov
test
pop
je
dec
sbb
mov
clc
ret
adc
cmp
jge
lcall
xor
push
sub
mov
pop
rcrl
xor
jo
xchg
adcl
jl
out
popw
hlt
mov
loop
xor
cmpsl
movsl
pop
outsl
push
lea
cmpsl
mov
pushf
test
aad
add
loop
test
in
xor
ret
mov
jnp
sbb
sahf
stc
addr16
dec
out
jmp
xchg
out
sub
mov
iret
clc
pop
jo
iret
loopne
xchg
mov
jbe
or
push
stos
jno
std
sub
and
sbb
xor
movsb
xchg
and
fcomps
cmp
and
loop
sub
or
out
pop
mov
pop
cmp
xor
test
xchg
sti
mov
adc
sbb
push
mov
imul
leave
mov
or
or
loope
repz
into
lods
iret
fadds
imul
push
mov
in
stos
or
dec
push
mov
dec
pushf
xchg
mov
pop
scas
stos
hlt
pushf
push
in
idivl
gs
insl
and
and
adc
push
sbb
pop
jl
in
mov
into
mov
add
inc
std
adc
mov
jo
mov
push
inc
notl
jge
rcrl
mov
roll
or
add
pushf
in
push
gs
add
orb
and
mov
push
xor
push
in
xor
jns
pop
pop
and
outsb
xor
sub
and
test
xchg
cmp
fmuls
jle
lods
outsb
jns
shlb
mov
call
je
pushf
lahf
pop
xchg
mov
xchg
xchg
adc
dec
orl
xchg
insb
inc
bound
ret
loopne
xchg
int
movsb
rcll
test
add
push
rcrb
icebp
aas
lock
cli
mov
mov
push
pop
das
cmp
negb
adc
dec
gs
lods
fs
add
pusha
xchg
or
mov
inc
dec
add
push
daa
sub
sub
movsl
addb
xor
pop
jmp
lahf
or
xor
sub
and
out
pop
adc
rcr
xor
sti
jp
mov
adcb
inc
sub
cmp
cmpsb
cs
adc
out
arpl
pop
mov
int3
cwtl
subb
push
push
mov
dec
out
mov
pop
lret
mov
push
sub
mov
cmp
mov
lea
les
dec
push
xor
xor
es
xor
xor
xchg
clc
sub
movsb
cwtl
out
adc
ret
cwtl
jl
pop
jge
and
mov
cld
pop
dec
mov
hlt
scas
cli
dec
shl
xorb
das
int3
vucomiss
cmp
and
repz
and
mov
leave
les
inc
icebp
das
fs
into
popa
mov
mov
je
pop
mov
les
hlt
femms
add
pop
inc
in
xor
fdiv
fs
daa
or
jo
adcb
hlt
fidivl
xchg
and
pop
int
push
xor
cli
js
mov
movsb
mov
sti
dec
mov
push
shr
inc
loop
cmp
cmp
orb
repnz
xlat
pop
jg
cltd
jecxz
jbe
adc
push
push
fisubs
cmp
fcomps
insl
cmp
not
loop
add
ljmp
pop
sub
jecxz
jle
mov
mov
ret
stc
and
push
xchg
or
push
gs
lock
sbb
inc
outsb
xor
ljmp
pop
jp
rorb
in
pop
loop
mov
add
dec
pop
fs
sub
cmp
jge
pop
imul
loop
inc
test
add
test
push
sub
inc
jecxz
sbb
mov
stos
jb
ret
sbb
add
xchg
imul
mov
and
xlat
xor
stos
and
out
out
mov
lcall
dec
sub
xchg
fistpl
ss
enter
pop
mov
mov
dec
out
dec
jge
add
sbb
bound
xor
jns
cmp
push
imul
xlat
out
mov
mov
or
pop
push
popa
add
pop
lahf
sbb
lea
je
mov
aaa
pop
or
mov
mov
stos
sahf
pop
add
aas
fiadds
inc
jbe
frstor
jne
sub
xchg
mov
jle
ror
jecxz
mov
dec
jg
es
sub
jns
insl
xor
ja
mov
xchg
in
lods
lock
aaa
out
ret
scas
dec
rcr
mov
pop
fisubrl
lcall
call
test
mov
mov
lods
pop
pop
mov
popa
sbb
rcrb
pop
cmp
and
mov
outsb
push
push
dec
push
dec
lds
nop
setbe
dec
pusha
nop
in
xlat
orb
xor
mov
mov
nop
call
inc
or
cmp
lcall
xchg
scas
mov
enter
xchg
and
fisubs
mov
insl
rcrl
bound
push
or
push
and
pusha
inc
or
ljmp
shrb
outsl
repnz
sub
rorl
sbb
decb
decl
ret
fidivrs
jl
js
cs
xchg
inc
push
xchg
mov
dec
dec
ret
cmp
outsl
cwtl
xchg
pushf
les
jb
imul
ljmp
and
ja
jmp
inc
mov
pusha
scas
outsl
jo
dec
out
out
mov
hlt
je
mov
inc
pop
push
clc
jno
sbb
xlat
cmpsl
loopne
cmc
test
push
ret
cs
cli
repnz
adc
push
dec
sub
xor
sub
jbe
nop
xchg
or
ljmp
push
int3
add
push
stos
mov
pop
xchg
lea
lods
daa
mov
mov
pop
cmpsb
lret
sahf
lds
lods
stc
sub
arpl
in
pop
push
xchg
nop
pop
popf
lods
mov
out
jnp
lret
ret
sub
outsl
push
mov
jmp
or
fidivrl
push
sahf
jo
je
sub
push
pop
cmp
sbb
sub
leave
out
pop
inc
bound
sbb
mov
clc
cmp
nop
adcl
xor
icebp
push
mov
mov
mov
sbb
es
lods
and
and
orb
in
rcrl
ror
cmp
fwait
sti
fisubrl
fwait
xlat
cmp
sti
out
mov
pop
adc
decb
leave
or
loop
inc
outsl
mov
push
mov
and
scas
sub
mov
pop
aad
adc
dec
pusha
stc
leave
lahf
outsb
sub
scas
lods
pop
sbb
fmull
add
lods
jle
dec
lea
adc
push
ja
sbb
push
les
call
mov
sub
lock
and
mov
inc
xchg
push
sub
sbb
pushf
mov
addr16
mov
stc
call
aam
mov
push
jbe
mov
mulb
or
mov
mov
push
aas
fisubl
les
arpl
pop
sbb
loope
inc
jae
push
js
fldcw
push
ds
nop
dec
lea
mov
fs
mov
cmp
jae
sub
lretw
inc
xor
in
enter
les
and
cld
std
xchg
outsb
add
and
or
sub
test
dec
jecxz
lret
ficoms
fld
pop
pop
mov
mov
xorb
jl
ret
cmp
scas
dec
in
sti
fcoms
xor
sti
add
repz
arpl
mov
mov
std
mov
pop
rclb
into
mov
idivl
repnz
pop
adc
pop
push
in
insb
pop
test
mov
mov
mov
addb
push
add
jbe
es
jnp
and
movb
add
ret
js
shrb
and
mov
sbb
cltd
adc
xlat
mov
shl
mov
push
scas
mov
in
orb
mov
lods
xchg
daa
je
in
test
sub
scas
cli
notl
sub
aad
iret
mov
out
movsb
sbb
imul
mov
and
xor
jbe
xor
test
sub
sbb
fcomip
repz
int3
sub
cmp
add
mov
mov
mov
outsb
js
and
xchg
pop
pop
sub
shlb
jbe
xor
fisubl
mov
hlt
pop
dec
ret
push
out
mov
andl
dec
aam
sarl
push
imul
icebp
sub
jns
inc
mov
lret
mov
pusha
dec
out
fisttpl
adc
lcall
inc
lret
aam
out
mov
xor
cli
push
jp
inc
add
xorl
nop
add
fs
push
add
mov
push
mov
xor
ja
pop
es
mov
jp
addr16
jmp
repnz
jl
jns
jmp
pop
push
push
hlt
mov
repnz
mov
sbb
outsl
dec
fwait
insb
and
pop
fsincos
push
movsl
lcall
out
rcrb
rorl
jae
inc
sbb
or
jns
push
bound
push
jl
mov
mov
mov
push
iret
mov
in
lods
inc
sbb
fisttpll
or
adc
pop
scas
cmc
mov
idivb
mov
dec
xor
mov
movsb
adc
xchg
mov
sbb
push
popa
push
sub
dec
addl
add
inc
insl
pop
pop
mov
or
xor
out
and
pop
xor
jge
cmp
sahf
in
outsl
out
adc
xchg
lods
mov
dec
iret
lock
pusha
lcall
in
or
ret
test
out
jne
cmp
sbbb
push
cmp
fdivrs
jge
jno
sbb
pop
lods
or
mov
mov
outsb
adc
scas
insl
test
push
hlt
clc
cmp
push
cmpsb
mov
mov
adc
ret
int3
pop
mov
dec
stos
ljmp
add
fistps
shlb
jg
sbb
xor
fs
mov
ja
pop
cmp
adc
lcall
fimull
ds
adc
stos
sub
or
dec
cmp
daa
sbb
por
mov
scas
mov
ss
lods
jp
cmpsb
xchg
push
xchg
rcrl
ss
fldl
int3
out
fdiv
dec
add
inc
cmpsl
fstp
cmp
popl
push
xor
push
lret
or
out
cltd
jge
mov
imul
jl
jge
xchg
adc
call
filds
add
mov
jle
loope
push
bound
add
inc
clc
mov
adc
and
xor
mov
arpl
mov
xchg
loope
xor
aas
inc
testb
push
fdivs
adc
add
mov
mov
adc
sbb
popf
xchg
mov
xchg
push
imul
outsb
pop
es
lret
adcl
outsl
jno
jo
mov
dec
push
in
pop
jmp
xchg
dec
cld
pop
mov
adc
xor
cld
fcompl
push
sbb
jae
dec
add
iret
mull
fcomps
leave
popf
mov
xchg
pop
sbb
and
out
adc
cmpsb
mov
je
loopne
add
xchg
inc
xchg
mov
jne
stos
inc
outsl
rcrb
das
and
test
jmp
push
inc
sbb
mov
ret
and
push
dec
mov
sub
xchg
push
cmp
stc
adc
fst
call
push
loopne
mov
cld
stc
mov
inc
ljmp
lret
or
xlat
xor
and
sti
popf
jb
arpl
int
arpl
inc
jge
outsb
pop
sbb
les
sbb
shlb
fwait
jmp
mov
xor
movb
bound
ret
jl
adc
jo
scas
or
je
into
les
adc
or
push
pop
mov
mov
out
or
inc
cmp
dec
out
mov
outsb
out
andl
add
add
imul
movsb
add
jecxz
or
xchg
test
fcomi
pop
sub
and
xchg
pop
adc
pop
shrb
mov
pmaxsw
adcb
jmp
sahf
jecxz
ss
or
push
xchg
or
std
cmp
mov
sbb
in
out
outsl
stc
or
xlat
jb
xchg
and
mov
out
mov
call
cmp
xchg
enter
enter
lea
mov
mov
mov
push
and
mov
ret
mov
jmp
mov
pop
lcall
and
xor
cmpsb
add
sub
sub
jl
icebp
xchg
adc
jno
lahf
xchg
das
int3
es
lahf
jle
aam
loopne
cmpsl
cwtl
mov
testb
pushf
jmp
or
lds
test
cmc
cmp
jge
cli
or
add
test
pop
mov
pop
lods
sub
in
mov
rclb
adc
in
sarb
cmp
mov
jg
xchg
ds
mov
int
pop
lock
das
ljmp
and
push
mov
repnz
pushf
negl
push
inc
mov
push
jg
bnd
js
adc
inc
sub
jecxz
mov
cmp
xchg
dec
cld
sbb
lcall
xchg
shll
jl
add
mov
es
mov
jb
insb
iret
cmp
sbb
push
jmp
pop
xor
jge
mov
inc
jno
je
ljmp
sub
xchg
rcl
ljmp
mov
cwtl
add
int
aam
mov
ljmp
adc
push
or
and
lods
mov
xchg
xor
gs
aaa
jne
les
fisubl
std
lods
inc
popf
loope
jnp
loop
or
lret
pop
sub
and
pop
inc
mov
repnz
cld
sti
stos
ficompl
xor
dec
ficoml
bound
fdivrl
cmp
add
and
mov
out
or
int
gs
xchg
mov
jge
cli
sbb
sbb
or
fadds
xchg
loopne
adc
mov
les
lods
mov
sti
push
push
daa
stc
add
and
lods
jle
adc
outsb
arpl
loopne
cmp
mov
lds
adc
push
rcll
and
or
scas
cmp
push
mov
aad
push
adc
sub
orl
or
icebp
aaa
icebp
or
test
fs
sub
xor
loope
jg
jae
ret
push
xchg
jb
cld
mov
call
mov
imul
add
adc
mov
add
cmp
jae
icebp
das
and
fisttpll
cmp
dec
xor
xor
jecxz
fst
dec
ja
aas
cmpsb
mov
mov
adc
mov
jnp
xlat
xchg
imul
jbe
mov
adc
pop
or
stos
cld
cltd
pop
pop
or
aad
arpl
and
add
mov
imull
mov
test
imul
jle
mov
xor
imul
rolb
addb
push
mov
fs
cld
aad
xlat
pop
sahf
sbbb
mov
sub
ret
das
jns
rcrb
jne
push
iret
add
sahf
ss
sbb
rorb
adc
jmp
movsl
hlt
out
push
push
mov
add
out
enter
fldl
mov
and
cmp
mov
cmpsl
pop
mov
fstpl
jae
lcall
cli
add
inc
and
in
dec
mov
scas
mov
out
es
adc
pop
sub
and
clc
ror
mov
arpl
cmp
fsubrl
shll
js
push
mov
sub
xlat
adc
aas
cmc
mov
scas
sbb
loop
or
fldcw
xchg
jbe
scas
test
or
jne
jecxz
stos
gs
inc
mov
dec
cli
in
inc
pop
mov
enter
test
sub
push
aad
cmpsb
inc
xchg
out
pop
into
inc
cmpsl
stos
aad
push
fistps
out
sbb
sbb
push
mov
outsl
mov
mov
into
ss
xchg
xor
xchg
dec
jno
lods
ljmp
fcmovu
cwtl
or
sahf
adc
cmp
xchg
dec
push
adc
stc
mov
call
orl
dec
mov
addr16
dec
out
sbb
pop
adc
lods
mov
out
jb
push
shll
test
insb
sbb
pop
pop
rclb
mov
sbb
xor
ds
or
pushf
rorl
jne,pn
xor
popf
int
rorl
lea
sti
push
int
bound
xor
mov
mov
or
mov
add
movsb
sub
mov
cs
out
test
push
mov
and
sbb
scas
stos
mov
cld
ljmp
daa
int
xor
mov
loope
scas
mov
jge
lret
inc
orl
mov
jnp
mov
mov
mov
xlat
cmp
outsl
das
xchg
sbb
imul
inc
test
call
out
xchg
pop
sbb
repnz
mov
dec
jp
dec
push
xchg
inc
add
in
mov
sbb
stos
aam
out
aad
outsl
add
clc
push
in
orb
jp
push
lods
mov
jl
loope
xchg
inc
or
fucomip
cld
lock
lret
push
outsl
insb
dec
mov
icebp
out
jns
xchg
andl
lods
jmp
sbb
sub
test
fistpll
inc
inc
cmc
adc
jp
adc
and
push
xor
shlb
sub
xchg
mov
call
fbstp
inc
popa
lret
sti
ss
ret
mov
jae
sub
adc
in
sub
fxch
cmc
cmp
sbb
xchg
xor
pcmpgtd
xorl
jae
cli
and
inc
mov
mov
lods
mov
pop
popa
push
out
inc
or
outsl
fcmovbe
icebp
imul
jecxz
test
cmpsl
cs
xorb
pop
xor
int3
sbb
cs
xchg
add
jmp
mov
lock
nop
adc
push
sti
sbb
sahf
push
adc
nop
pop
dec
pop
imul
dec
pop
or
std
pushf
cltd
cmp
mov
adc
lcall
pop
in
xor
cmp
inc
and
adc
pop
pop
and
and
adc
int3
cli
roll
and
jecxz
pop
loope
repz
xchg
ret
in
mov
mov
xor
xorb
scas
in
adc
push
aaa
test
insl
push
push
popa
fnstcw
dec
pushf
iret
decl
mov
cs
pop
movsl
jl
xchg
loope
xor
pop
mov
out
ret
dec
cli
cwtl
mov
xchg
in
gs
pop
cwtl
iret
push
ljmp
or
lods
mov
mov
xchg
les
pusha
xor
jnp
jnp
js
xchg
iret
jo
int
rol
adc
js
ss
sbb
sub
sbb
lcall
sub
push
stos
lea
add
dec
imul
das
sub
mov
test
lret
mov
xor
push
jg
xchg
mov
setnp
lea
test
and
mov
mov
rcrl
imul
jmp
push
ficoms
pushf
ss
out
rol
dec
lretw
mov
cmp
xchg
jecxz
fcmovu
lret
repnz
insl
call
test
je
push
movsb
ret
push
insb
int3
mov
or
pop
jl
inc
sbb
hlt
xchg
lahf
or
cmp
cmp
or
stc
pusha
dec
mov
jl
pop
pop
cmpsl
or
imul
inc
pop
sti
push
pop
pusha
loopne
sub
xchg
push
add
jl
dec
xor
test
cmp
mov
and
dec
stos
iret
aas
int
out
loopne
push
cmp
inc
push
xchg
divb
nop
cmp
setp
mov
lock
inc
or
push
mov
filds
ja
in
mov
and
inc
and
jmp
xchg
sub
xlat
fs
or
mov
lods
loopne
hlt
pop
pop
xor
inc
jnp
mov
and
insb
push
push
ret
gs
or
mov
jo
data16
sbb
mov
sub
xor
loop
nop
dec
jl
test
aas
cwtl
jp
int3
and
jae
push
out
ljmp
lcall
das
adc
sub
fs
js
cs
adc
out
aam
les
cld
lods
xor
dec
jg
stos
jecxz
sbb
cmp
mov
in
cmpb
dec
mov
gs
ljmp
pop
mov
mov
xchg
aad
std
data16
dec
lods
cmc
call
rorb
sub
or
imul
or
ret
lcall
push
and
push
mov
shlb
or
outsb
test
xchg
jo
movsb
test
inc
cltd
jge
cmp
pop
leave
cs
push
inc
negb
in
pusha
sahf
cld
sbb
out
jbe
mov
push
cmpl
daa
test
hlt
adc
mov
pop
or
jecxz
sahf
mov
repz
imul
pusha
adc
and
call
adc
xlat
pop
cmc
aaa
fdivl
inc
jb
les
out
inc
jnp
pop
xchg
or
cld
sub
shl
mov
inc
and
enter
add
loopne
in
fwait
inc
addr16
fwait
xchg
aas
xor
test
inc
daa
add
sbb
movsb
inc
cli
and
xchg
ljmp
adc
cmp
cmp
push
sub
cmpsl
in
test
pop
xor
xchg
mov
ficomps
lahf
testb
add
mov
xchg
scas
adc
ds
ljmp
mov
fsubs
or
xchg
in
out
leave
loop
testl
clc
in
lahf
cmc
in
in
mov
clc
sbb
cmp
push
jge
out
daa
outsl
inc
test
mov
push
pop
ss
mov
cmp
adc
sub
mov
pop
pop
xlat
dec
sbb
push
fcompp
sbb
nop
in
mov
fwait
inc
push
loop
mov
fistpl
cmpsl
lcall
sub
jmp
sub
lods
adc
popf
xor
xor
push
out
scas
repz
cmp
add
xchg
data16
mov
cmp
xchg
lods
mov
aad
dec
loop
mov
shlb
jnp
lret
and
sbb
fwait
lret
lret
push
outsb
rolb
mov
lcall
add
sbb
test
cmp
ficomps
jno
cmp
cmpsb
arpl
fs
pop
pop
add
cmc
fisttpll
xor
push
xchg
mov
or
pop
loop
push
test
jo
test
pop
iret
inc
pop
sub
sbb
xor
pop
insl
mov
inc
dec
push
pop
loop
fstpl
cli
mov
mov
xor
adc
enter
sbb
out
sbb
cmp
sbb
sbb
cs
aaa
cmp
pop
imul
aaa
dec
mov
int
xchg
loope
lcall
call
cmp
jne
popa
mov
pop
pop
fbstp
add
pop
adc
add
mov
pusha
sbb
or
ficomps
jno
pop
sub
push
rorb
jge
lret
shlb
push
sub
and
ljmp
or
ret
gs
mov
push
fwait
pop
hlt
out
jo
dec
test
jb
dec
into
xchg
ja
scas
and
pop
cmpb
mov
das
push
push
sbb
pop
aas
sub
push
or
scas
or
pop
lds
in
shl
push
repnz
sub
insl
or
cmp
mov
lea
mov
ficomps
push
jecxz
sub
cmp
xchg
pop
pop
cmc
mov
mov
ds
dec
pop
in
pop
sbb
in
rcll
or
movsb
int3
sahf
js
psubw
inc
jmp
dec
cli
pop
jbe
sub
mov
out
inc
mov
cmp
push
clc
push
cmp
jmp
sub
xchg
out
push
push
popf
mov
cmp
imul
ret
aaa
sbbl
mov
es
or
mov
ret
jns
test
out
out
jae
mov
outsb
and
add
mov
mov
and
mov
es
jge
dec
lret
test
movsl
lret
push
mov
and
and
jns
mov
fs
lret
mov
fldt
shlb
add
cli
adc
and
mov
shll
sbb
jno
dec
je
push
xchg
add
sub
pop
xchg
std
cli
lret
or
in
fisubrs
aaa
push
faddl
or
push
xchg
push
popa
into
fcom
addr16
mov
pop
sub
adc
dec
xchg
sbb
mov
push
mov
cmp
std
mov
ret
mov
aas
push
or
or
cmpsl
and
fstpt
jp
inc
mov
mov
dec
pop
mov
sahf
out
in
imul
mov
adc
lock
insb
inc
dec
and
gs
jbe
out
or
ret
mov
in
fcmovne
in
ss
mov
inc
stos
or
mov
add
or
add
scas
loop
loope
popf
stc
mov
sbb
lock
jle
aam
cmpsl
pop
mov
mov
push
mov
sub
adc
cmpb
mov
mov
push
jecxz
orb
repz
out
out
push
cmp
lods
rcrl
ds
aad
mov
adc
xlat
inc
js
add
jmp
loop
adc
repz
mov
mov
mov
in
pusha
mov
lock
pop
lcall
fstpl
jp
jno
mov
andb
mov
or
xchg
jb
lret
sub
jbe
fdivl
adc
nop
sti
fstp
jno
adc
push
imul
mov
cmp
xor
gs
or
test
cli
jnp
fstpt
xchg
scas
sbb
rclb
dec
ret
mov
or
and
lcall
add
or
push
testl
fsubl
popf
sbb
push
xchg
les
bound
sub
mov
stc
add
xchg
mov
dec
loop
or
and
push
add
dec
js
fildl
push
sub
ja
gs
sbb
and
and
stos
test
dec
fldln2
fmulp
loope
mov
iret
pop
pop
fisubl
mov
adc
cmp
out
aad
stos
add
xchg
mov
mov
enter
fbstp
nop
clc
inc
dec
push
mov
lahf
sub
or
into
sub
push
nop
into
test
sub
cld
cmp
mov
xor
jge
gs
movsl
icebp
xchg
loopne
xchg
cmp
adc
xchg
test
and
push
in
or
test
roll
in
inc
insb
ds
xchg
adc
and
mov
xor
testb
arpl
sub
xor
ret
fsubrs
outsb
insb
mov
jne
mov
or
rcll
mov
add
aam
push
xor
pop
out
and
dec
shlb
je
mov
icebp
inc
loop
mov
insb
pop
mov
jp
jbe
inc
pop
in
dec
ds
and
sub
pop
jae
adc
jmp
jp
push
lods
jns
xor
fcom
xor
shlb
sti
les
pop
pop
test
outsl
adc
subl
lods
movsl
notb
dec
out
inc
xchg
leave
fdivrl
jmp
adc
xchg
mov
sarb
out
push
push
cmp
fnstenv
push
mov
cmp
fsubl
aam
sbb
mov
sbb
pop
insb
or
dec
imul
or
adc
lcall
cld
popf
mov
icebp
fimuls
xchg
scas
fsubrs
pop
insb
dec
adc
mov
jg
mov
mov
xchg
cli
stos
rorl
push
push
ret
ret
inc
xchg
pop
rorb
dec
dec
sub
sarl
les
mov
ljmp
repnz
push
xchg
push
sbb
push
pop
lret
mov
mov
out
inc
or
retw
insb
arpl
push
in
sub
adc
cmp
ss
lods
push
mov
push
sbb
jg
pop
sub
sbb
sarb
scas
repz
cmpsl
ret
sub
bound
xchg
xchg
sub
and
add
and
in
les
mov
fdivrl
push
or
or
mov
mov
and
imul
cld
xor
pop
jno
adc
add
lods
push
aam
mov
outsl
push
sub
pusha
repnz
mov
add
pop
aad
and
mov
xchg
out
xor
out
jmp
mov
aad
mov
leave
test
sbb
aam
insb
leave
mov
cmp
loop
addb
and
push
pop
mov
pusha
dec
cli
in
xchg
hlt
fidivrl
dec
jbe
xor
out
jnp
leave
mov
ss
test
mov
or
push
xchg
cmp
outsl
adc
or
and
mov
inc
xor
and
lds
jle
pop
adc
lahf
mov
mov
adc
mov
pop
and
xchg
clc
xorl
pop
and
or
sti
mov
cli
ficoml
imul
add
out
lea
fidivs
lret
sbb
int3
pop
pop
adc
xor
push
or
data16
xor
test
movsb
lcall
inc
or
cmp
pop
ja
jmp
mov
mov
jp
sbb
fsubrs
or
dec
rorb
dec
adc
pushf
fcmovnb
pop
inc
hlt
push
mov
addr16
push
xchg
sub
scas
mov
add
loope
aad
test
repnz
cmpsb
inc
call
cmp
or
repz
or
and
mov
inc
and
push
mov
fdivrl
popf
xchg
or
in
mov
push
bound
mov
insb
iret
pop
bswap
mov
fdivl
cmp
inc
mov
sti
enter
add
fstl
inc
es
push
movl
xchg
pmaxub
repz
lret
clc
and
inc
popa
mov
hlt
mov
aad
mov
jnp
loopne
dec
or
ret
pop
jb
inc
call
gs
add
addr16
jge
sub
insb
jp
and
addr16
out
push
push
mov
or
in
sbb
or
ret
fs
mov
push
or
xchg
cld
or
loop
stc
add
mov
das
jp
cmp
or
sbb
push
jae
ja
repz
js
mov
ljmp
mov
xor
mov
lods
mov
or
jae,pn
ss
add
or
push
rorl
ja
push
push
out
enter
mov
ret
inc
test
ret
inc
lods
daa
pop
xor
mov
js
movsl
out
dec
mov
and
xor
pop
jnp
mov
jne
adc
inc
dec
in
js
fisttps
pop
ret
adc
inc
lahf
jg
daa
xchg
cltd
mov
cmp
xor
jp
cmp
add
mov
je
xchg
mov
cmpsb
mov
cmp
add
jp
sub
dec
out
mov
mov
pop
pop
push
lret
jle
cmp
xchg
jg
popf
mov
clc
cli
cld
xlat
sub
inc
xlat
ret
sahf
mov
cwtl
jbe
pusha
lea
pop
push
xchg
push
fnstcw
sbb
enter
shll
jns
cld
add
or
fbstp
jne
fstps
xchg
scas
xchg
subl
push
mov
ja
ds
in
push
cwtl
sbb
std
sahf
mov
call
jp
addr16
or
faddl
pop
or
into
sarl
xchg
cwtl
sbb
cmp
lret
imul
mov
push
lea
incl
ss
pop
sub
sbb
fsubrs
leave
movsb
mov
jp
push
or
ss
sub
std
popa
loopne
int3
pop
je
push
push
mov
rcrb
fs
lea
mov
xchg
dec
and
jo
mov
mov
adc
in
insl
out
push
mov
xlat
cli
sub
pop
mov
divb
aad
jnp
je
jae
cli
xchg
push
clc
aas
inc
pushf
sub
cltd
lcall
push
cmp
jmp
in
sbbl
in
cmp
pop
rorb
rcrb
xor
dec
sbb
xor
mov
mov
mov
jae
inc
push
cmp
outsl
filds
lcall
outsl
in
pop
inc
nop
insb
rorb
ffree
call
push
jle
loope
inc
mov
xchg
pop
rclb
mov
out
stc
pop
sub
popf
das
jecxz
cmpsl
adc
hlt
test
jp
jno
mov
lahf
push
xor
fwait
loopne
dec
out
and
jle
cmp
inc
adc
loop
addr16
out
in
cmpsl
mov
mulb
cmpsb
movsl
divl
sbb
std
std
push
inc
les
ss
or
mov
lret
pop
pop
add
pop
stc
lcall
shlb
daa
rorb
jns
push
xchg
push
jo
shl
dec
aaa
pusha
aaa
jno
mov
mov
mov
fwait
cli
stos
cmp
pop
dec
cmp
ds
sahf
rol
sbb
jns
or
daa
xor
stc
es
outsb
or
call
lahf
scas
cltd
dec
adcl
adc
int
pop
and
inc
pop
push
fistpl
mov
mov
call
add
sub
mov
dec
leave
dec
mov
lea
push
lods
scas
mov
push
mov
xor
call
in
add
jbe
xchg
xchg
push
sbb
cltd
test
jns
xor
adc
add
stos
sahf
cs
xchg
cld
xchg
fidivrs
ss
ret
push
test
repnz
ja
pop
aam
or
arpl
push
pause
sbb
inc
cmp
xor
pushw
lea
mov
repz
cmp
push
je
ret
lret
repz
loope
cli
add
adc
adc
int
sub
xchg
push
fmul
loop
mov
adc
lret
psubb
jns
loopne
imul
mov
imul
repz
xchg
fcmovb
mov
jns
ja
jmp
add
cmp
pop
out
cmp
and
xchg
mov
loop
inc
mov
sub
adc
sbb
jnp
movsl
jg
stc
jo,pn
aas
inc
adc
or
gs
pop
xchg
sti
push
push
repnz
sahf
ljmp
sbb
lods
mov
mov
fsubr
dec
pop
sbb
mov
add
je
jns
aas
loope
inc
push
test
mov
pop
or
repnz
outsl
jge
sbb
fisubs
outsb
roll
js
cmp
iret
pop
mov
test
repnz
lcall
mov
cli
push
xchg
jmp
outsb
dec
jge
inc
sub
mov
outsl
jle
js
iret
jl
pop
fldcw
inc
loop
xchg
dec
sub
arpl
testl
mov
xchg
jae
test
add
lret
mov
push
mov
into
pop
mov
and
push
jle
sub
mov
mov
shll
popf
mov
lods
fistpll
mov
lahf
pop
gs
pop
data16
jmp
pop
pop
out
dec
cmpsb
lea
jp
jae
mov
call
enter
dec
std
cmp
cmp
jb
mov
sub
mov
inc
sub
or
mov
and
inc
aaa
xchg
subb
mov
repz
out
aas
aam
and
xlat
pop
pop
sub
insl
push
mov
or
jae
mov
outsb
iret
outsb
fstpt
cld
xor
xor
aaa
in
hlt
cmp
js
or
cli
cmp
lret
fnstenv
jmp
ja
imul
fwait
cmpsl
int
sti
adc
lock
push
sub
and
mov
mov
mov
mov
mov
test
cmp
clc
lahf
insb
and
sahf
xor
jg
in
mov
leave
dec
jnp
pop
mov
rcr
mov
leave
and
mov
pushf
sbbl
cmp
bound
pushf
jle
sti
mov
js
ds
outsl
push
mov
mov
sub
loop
fwait
push
push
cmp
test
xor
cld
clc
and
dec
pop
fadd
fsts
xchg
out
mov
dec
test
xchg
sbb
scas
push
dec
pusha
inc
icebp
mul
call
pinsrw
jne
mov
push
cmc
sar
xor
xchg
enter
scas
jg
mov
push
insb
stc
scas
cmc
fdivl
out
ret
movsl
mov
pop
hlt
sbb
add
call
and
push
push
into
sub
mov
push
jo
adcb
push
lret
int
rcrl
fcmove
mulb
test
movsb
lret
mov
and
scas
roll
mov
mov
push
lods
mov
pop
cli
mov
int3
in
nop
and
push
mov
sub
xor
mov
mov
aas
aaa
jb
pop
outsb
loop
inc
mov
in
pop
mulb
pop
add
dec
movsb
sbb
push
push
pop
lcall
clc
frstor
and
jg
mov
ja
push
dec
add
imul
mov
or
subl
xor
adc
xchg
ret
cs
cmp
lock
cmpl
jb
cld
lret
mov
inc
enter
test
mov
ret
fwait
pusha
mov
cmpsl
shlb
lea
in
pop
mov
and
xor
add
in
inc
push
sti
xchg
and
out
adc
sbb
mov
add
lret
in
jns
jmp
xchg
fisubl
mov
pop
sbb
adc
jns
popa
les
cld
subl
lods
push
ret
iret
mov
scas
in
sub
mov
ss
jns
cmp
inc
lods
xor
jecxz
and
aaa
aam
mov
clc
fs
fcoms
dec
in
movsb
imul
jge
lea
jns
xchg
push
jle
je
jb
xor
cmp
or
pusha
xchg
fldl
adc
mov
lods
hlt
mov
ss
sub
push
cmp
in
xor
inc
stos
movsl
fwait
dec
cmp
xchg
shrl
and
jb
rclb
xchg
test
pushf
xor
fiaddl
cmpsl
pop
fistl
and
dec
jmp
stos
push
jp
iret
in
jns
and
jecxz
cmpsl
inc
sbb
add
adc
fistps
mov
jle
add
test
dec
lahf
mov
hlt
mov
xchg
inc
add
push
shll
add
inc
push
mov
aas
sub
push
xor
lds
push
cmpsb
lret
cld
dec
jno
fwait
or
sub
insl
ret
loop
rolb
sbb
repnz
inc
ds
lods
in
jnp
test
and
inc
loope
dec
and
pop
xchg
jp
adc
mov
test
cmp
je
testb
add
ss
and
sarb
inc
and
lds
xor
into
cmp
dec
repnz
cmpsl
adc
ret
int3
pop
iret
nop
add
rolb
jg
lret
dec
inc
cmp
negb
xorl
mov
pop
cmpsb
lock
mov
outsl
and
mov
bound
lock
or
jae
adc
jp
jnp
fsts
xchg
xor
xorl
sub
mov
pop
mov
mov
or
repnz
xor
jnp
out
in
std
jecxz
jle
xchg
jnp
aam
adc
jge
cmp
xchg
insl
push
test
sbbb
push
or
mov
cmp
jno
mov
fcoml
push
inc
mov
add
dec
add
es
int
cli
sbb
jns
push
jecxz
aas
xchg
pop
pushf
jecxz
adc
ret
add
mov
shrl
sbb
cmp
inc
ja
sbb
stos
and
mov
ret
dec
mov
cmp
and
sub
pop
fucomi
pop
mov
rorl
add
clc
add
and
inc
cmc
repz
push
fdivrp
mov
rcll
cld
xorb
xchg
lret
jb
inc
je
lcall
dec
jno
mov
push
popa
aam
out
call
jmp
fdivr
and
iret
aas
lret
jmp
in
sbb
dec
add
mov
sbb
push
sub
pop
shl
xchg
data16
mov
mov
sahf
je
stos
nop
xchg
ror
push
cwtl
fistps
fcmovnbe
mov
inc
es
pop
push
mov
test
or
cwtl
jecxz
and
in
jl
xchg
xor
sub
fsubrp
push
js
dec
jmp
popa
push
and
mov
cli
mov
adc
or
fstps
fdivp
push
les
mov
jle
clc
xor
shll
aam
cmp
push
ror
fstpt
sbb
idivl
adc
push
in
adc
sub
outsb
ljmp
cmpsl
sbb
ss
sti
and
or
lahf
lds
bound
push
dec
inc
pop
insl
jae
and
ljmp
pop
mov
pop
fmul
or
jl
push
cs
mov
sub
mov
sub
jno
bnd
popa
test
sbb
dec
sub
push
xchg
inc
call
insb
dec
decb
add
adc
lock
leave
adc
pushl
pop
outsb
js
mov
xchg
push
adc
sbb
push
negl
out
out
scas
cmpsb
dec
mov
pop
pop
and
mov
xor
test
pop
sti
jmp
adc
sbb
xchg
lahf
xor
sub
js
in
bound
push
cmp
sbb
pop
mov
sbb
icebp
mov
fdivl
inc
xchg
mov
or
mov
std
mov
xchg
sub
addr16
xchg
icebp
je
and
jno
xchg
adc
xor
lea
rcll
bound
jecxz
add
cmp
pop
dec
out
dec
imul
mov
enter
insl
in
mov
imul
pushf
insl
sbb
fstpt
es
bswap
jg
ljmp
cmpsl
jo
cmp
mov
xlat
or
fsts
pop
arpl
gs
pop
shl
ds
fcomi
pop
push
cmp
int
xor
xchg
pop
pop
cmc
popa
add
int
xchg
mov
dec
mov
and
daa
icebp
xor
imul
inc
daa
sarl
mov
gs
aad
ret
sbb
dec
xor
mov
push
in
inc
push
xor
add
fwait
pop
xor
inc
arpl
jns
arpl
jle
lds
sub
sbb
cmp
stos
cld
push
pusha
jnp
inc
cmp
cmp
js
inc
and
mov
call
out
clc
mov
jae
inc
mov
mov
ds
xlat
sub
je
and
mov
xchg
jbe
sub
ljmp
or
sti
adc
stos
inc
aas
out
mov
mov
dec
and
inc
loope
out
cmp
jp
lea
ret
xor
sbb
mov
ds
insb
sub
sub
sub
gs
aas
mov
sub
jl,pt
scas
mov
jae
bound
mov
mov
popf
xlat
xchg
push
fs
pop
imul
jo
cmpsl
aad
daa
inc
iret
fcoms
xchg
notl
pop
adc
cmp
sub
dec
das
xchg
pmaxub
dec
sub
int3
bound
lahf
jns
sub
inc
jge
pop
add
outsl
push
sub
jmp
int3
mov
sbb
xorl
or
lods
stc
dec
sub
insb
mov
and
fdivr
ret
inc
fwait
bound
