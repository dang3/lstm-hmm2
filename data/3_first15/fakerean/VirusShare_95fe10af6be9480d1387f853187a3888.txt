push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
xor
pop
pop
ret
push
mov
sub
movl
mov
shl
mov
shr
or
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
push
push
call
mov
push
push
push
push
call
add
cmp
jne
mov
mov
movl
jmp
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
imul
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
shl
mov
shr
or
mov
mov
add
mov
cmpl
jne
mov
mov
mov
add
mov
call
push
push
call
pop
pop
xor
jmp
push
push
call
xor
inc
pop
leave
ret
int3
in
push
push
int3
push
into
adc
mov
or
mov
mov
jb
mov
sub
stos
fcoms
xchg
int
ficoms
jnp
pop
aas
js
add
roll
inc
mov
lahf
lcall
xchg
in
dec
fdivrl
rol
cmp
ret
xor
jle
pop
sahf
sub
in
fwait
stos
shlb
pop
arpl
stos
int3
cltd
sahf
mov
or
mov
fdivs
jae
xchg
jae
cwtl
fisubrs
leave
sbb
imul
aam
push
xchg
cmp
outsl
shll
clc
dec
lods
call
loop
pop
into
iret
mov
mov
ficompl
scas
addl
ret
jae
pop
cwtl
or
sub
rcl
jne
jb
xchg
dec
pop
push
and
mov
push
sub
lahf
rorl
add
das
jo
inc
ljmp
xor
lret
push
sarb
lock
pushf
inc
jecxz
fcom
stos
inc
data16
pop
add
ss
out
leave
dec
pop
xorl
mov
add
pusha
or
adc
nop
out
push
cli
adc
pop
outsb
adc
pop
mov
sbb
outsb
fdivs
fbld
sbb
test
pop
sarb
repnz
popa
out
jge
sbb
outsb
jo
and
add
cmp
xchg
mov
sub
test
call
mov
fimuls
daa
sarb
xchg
and
xor
add
pop
inc
push
dec
lahf
inc
das
sahf
jno
out
and
cltd
shrb
dec
into
sbb
aas
cmp
push
dec
mov
mov
movsl
mov
lcall
cmp
dec
xchg
and
scas
pop
mov
fmuls
mov
mov
jbe
xor
int
insb
adc
push
les
stos
test
cs
test
pop
incb
mov
jno
jle
das
rolb
or
test
mov
hlt
popa
lahf
sub
lret
sbb
mov
mov
pop
fabs
jnp
xlat
mov
dec
stos
add
push
cmp
fisubs
incl
sbb
or
pop
nop
xorb
mov
push
test
jge
dec
lods
add
pop
inc
loope
jge
push
lahf
jecxz
test
das
insb
orb
mull
cs
aaa
sub
mov
add
push
pop
arpl
stos
xchg
jl
mov
arpl
sub
rol
fisttpll
inc
les
sbb
push
scas
adc
dec
call
pop
outsb
sub
pop
imul
lods
rorb
jl
repnz
fcmovbe
jns
mov
xchg
inc
jl
xchg
inc
test
and
inc
xchg
adcl
fdivs
pop
ror
sub
scas
fdivrp
lds
testl
ret
mov
inc
jbe
aad
jecxz
fistps
mov
mov
stos
and
adc
jae
movsl
clc
jge
sub
push
sbb
xchg
mov
shr
call
out
jmp
pop
sbb
mov
push
inc
movsl
cmpb
and
mov
stos
scas
adc
loop
xchg
cmp
adc
out
test
rcrl
mov
add
out
sbb
or
scas
xchg
xor
scas
inc
iret
in
iret
dec
xchg
imul
pop
xor
xchg
lret
pop
pop
or
mov
and
push
sbb
je
pop
out
stc
insl
xchg
add
mov
dec
ret
inc
movsl
push
cwtl
out
push
jmp
in
xor
pop
imul
leave
rolb
jae
mov
adc
imul
mov
mov
pop
lahf
nop
jb
fildll
shlb
into
je
lcall
test
and
int3
aam
movsl
outsb
push
cltd
add
xchg
add
xlat
mov
pop
icebp
push
rcl
fst
push
mov
psubb
rcll
aam
mov
push
ss
add
and
cwtl
xor
push
pusha
out
lock
fistl
mov
out
and
lods
aaa
fcomps
adc
adc
ret
push
mov
subb
mov
or
mov
push
mov
dec
lahf
xlat
fwait
in
jmp
inc
enter
insb
dec
mov
inc
push
xchg
cmpsl
nop
push
insl
xchg
jmp
push
nop
sbbl
clc
xchg
out
sub
clc
lret
lea
fs
pop
cmp
inc
mov
mov
incb
inc
inc
mov
or
icebp
iret
pop
xor
int
push
cmp
jbe
loope
call
push
mov
inc
clc
insb
test
stc
pop
scas
fdivs
in
mov
out
loopne
es
iret
lods
add
scas
and
jge
bswap
int3
roll
adcl
js
xrelease
imul
loopne
jb
mov
add
shrb
lret
pop
sti
fcompl
dec
test
je
inc
sub
incl
and
test
dec
sub
push
adc
push
in
inc
into
mov
mov
in
shll
mov
add
mov
xor
aad
cmp
stos
jbe
xor
hlt
cld
ljmp
mov
jno
mov
push
test
xchg
xor
mov
adc
int3
xor
xor
mov
dec
mov
cmp
fwait
push
push
in
jp
pmaddwd
fsubrl
out
in
sub
fwait
push
dec
shl
js
daa
sbb
xchg
xchg
sbb
mov
stc
lret
in
cmp
dec
cltd
push
faddl
rorb
in
notb
or
mov
gs
or
pop
shlb
test
shrl
inc
ds
out
fsts
and
outsl
sbb
pop
adc
xor
mov
dec
pop
cli
leave
xor
push
adcb
bound
pusha
mov
aaa
fdivr
out
decb
pusha
pop
mov
aaa
add
push
mov
cli
enter
js
cmp
lret
dec
and
lret
outsb
or
cmp
outsl
fmulp
or
push
xchg
add
cli
mov
scas
inc
test
lds
sbb
pop
lea
dec
jno
pushf
mov
add
jnp
lods
xchg
cltd
push
jp
pop
cmp
xor
nop
insl
ss
mov
mov
mov
mov
into
xchg
mov
mov
jb
inc
inc
xchg
into
mov
mov
jo
add
mov
jg
icebp
cltd
scas
icebp
jno
insl
xchg
mov
out
in
push
or
iret
pushf
push
xlat
and
pop
lcall
psllw
mov
mov
out
xchg
dec
int
jns
add
sbb
dec
xor
jl
jecxz
sahf
test
pop
lock
mulb
add
fldenv
inc
lea
movsl
mov
inc
mov
das
ds
das
jb,pt
aaa
scas
ss
mov
and
ret
xorl
jge
add
sbb
cmp
xchg
mov
mov
push
xlat
mov
cmp
jle
loopne
arpl
push
mov
sarb
ljmp
add
data16
cli
xlat
jns
cmpsl
push
and
stos
push
sbb
xchg
xor
mov
in
mov
sub
add
mov
loope
cmp
pop
lret
inc
movsl
jne
jns
xchg
test
gs
jb
and
mov
mov
test
mov
or
jp
out
adc
inc
cmc
push
outsb
and
mov
xchg
or
pop
push
lds
scas
dec
inc
out
cli
stos
lods
outsb
mov
pushf
cmp
mov
lret
cwtl
pop
negl
rcrl
dec
pop
push
fstpt
dec
mov
cmp
xchg
repnz
cs
jmp
jecxz
push
or
in
push
adc
jbe
ds
lcall
inc
and
pusha
cmp
cltd
pushf
push
push
add
cli
jb
adc
dec
mov
add
filds
pop
test
icebp
testb
movsl
sub
mov
xor
lods
pop
jmp
mov
pop
leave
pop
or
fmuls
adc
inc
or
xchg
jp
int
neg
sub
iret
inc
add
jl
pop
cmc
push
xor
inc
sahf
sbb
sahf
xchg
ret
lret
shl
lret
mov
push
mov
add
fs
into
outsl
into
mov
add
lea
insb
and
mov
pop
xor
mov
sub
lret
mov
mov
sub
push
mov
negb
xlat
xorb
jmp
std
sbb
adc
sub
insb
fists
pop
sti
data16
xorl
adc
xchg
push
ret
jg
or
mov
pop
jmp
lds
xor
repz
jge
scas
jecxz
std
xchg
sub
sbb
and
loope
lods
cmp
adc
outsl
or
mov
fildl
insb
cmp
test
aaa
xchg
mov
pop
dec
push
mov
xchg
lods
and
test
les
shlb
and
mov
cmpsb
pop
lahf
fisttpl
adc
pop
scas
mov
mov
pusha
out
je,pt
add
jmp
jne
pop
into
cs
xchg
fwait
sti
fldenv
out
in
xor
mov
push
icebp
cmp
push
lea
cmpsb
divb
int
mov
pushf
lcall
repnz
jge
das
or
test
inc
cmp
cmpsl
sbb
stos
mov
sbb
into
sahf
lret
cltd
push
pop
fisubs
loop
xchg
stos
push
lret
cmp
xor
cmp
xchg
push
not
sbb
sub
das
faddl
int
inc
inc
cmp
adc
mov
jmp
int3
mov
xchg
push
sbb
jmpw
cmp
jle
scas
cmpb
inc
cmp
mov
jno
sub
adc
daa
test
adc
mov
cmp
inc
mov
dec
cmpsb
adc
outsl
sbb
test
outsl
jnp
push
xor
pop
sub
mov
mov
jno
ljmp
cmpsb
or
aam
xchg
pop
and
cmp
fdivrs
nop
rcll
xchg
stos
inc
daa
adc
imul
xlat
jmp
mov
loop
mov
sahf
jo
loop
sbb
stos
jle
dec
xor
xor
ss
mov
std
push
xor
stc
adc
jle
loop
dec
jmp
xor
and
mov
xor
int3
jns
pusha
xor
inc
int
sub
push
aad
sbb
or
scas
jmp
adc
imul
out
xlat
mov
mov
cmp
pusha
push
sahf
or
cmp
jl
lea
jmp
shr
cli
inc
sbb
loop
aam
push
add
loopne
ret
idivl
bound
sbb
ucomiss
sbb
pusha
scas
cmp
cmp
scas
mov
icebp
or
dec
dec
movsl
pop
stos
fdivs
xchg
adc
or
sub
ret
scas
imul
cmpsl
cld
lcall
mov
stc
inc
push
mov
leave
inc
std
push
aaa
into
mov
mov
sti
mov
or
pusha
xor
gs
and
lods
adc
addb
aas
repnz
xor
or
lahf
add
mov
repz
aam
push
das
xchg
test
cmp
aaa
js
imul
std
sub
call
sbb
mov
sbb
dec
inc
jl
xchg
jo
lcall
inc
repz
inc
repnz
push
imul
cmc
xchg
adc
add
pop
das
inc
out
hlt
push
pop
in
xor
xor
cld
jl
push
mov
pop
cmc
stc
adc
lea
xor
movsb
pop
insb
aaa
jge
data16
jge
and
push
leave
aam
push
jbe
push
pusha
xchg
jo
xchg
push
sbb
scas
scas
jae
jp
sbb
pop
in
sub
outsb
and
and
mov
aad
inc
out
adc
and
insl
mov
fwait
in
xor
mov
mov
adcl
xor
arpl
xlat
dec
int3
push
sub
scas
dec
repz
mov
xchg
pop
add
mov
mov
and
sub
sti
dec
jg
sbb
pop
push
imul
ror
testl
fwait
cmc
je
test
mov
or
sahf
pushf
jns
and
xor
mov
insl
ljmp
fsubrp
and
mov
mov
pop
out
mov
data16
xchg
mov
je
insb
addb
paddusw
dec
jno
mov
mov
jg
dec
fmul
adc
xchg
lcall
ljmp
mov
fwait
popa
push
enter
filds
mov
sub
jne
pushl
push
lret
std
inc
fdivrs
sbb
xchg
lea
push
popa
sbbl
or
mov
lret
pop
xor
xlat
fcmovnb
in
fisubrl
jecxz
aas
loope
jp
in
pop
lret
sarb
push
cs
rorb
test
dec
pop
add
mov
dec
data16
xchg
sbb
jae
jns
lock
es
dec
xchg
call
std
pop
rcr
sahf
cld
ljmp
or
mov
jle
stos
adc
push
imul
stos
popl
jo
testb
add
repz
fldcw
adc
cltd
fstpt
xor
push
ja
mov
jmp
mov
lahf
xchg
pop
mov
pop
jb
cld
mov
rcrb
pop
bound
or
cmp
push
daa
adc
xchg
push
stos
mov
xor
xor
aam
mov
mov
push
scas
stos
ret
xlat
add
push
add
rorb
jbe
ret
mov
lea
test
push
mov
add
mov
fmull
in
pop
andb
les
stos
out
in
mov
push
mov
subl
xchg
insb
sub
jb
push
sub
push
jns
cmc
sbb
out
jno
scas
sbb
push
hlt
adcb
addr16
data16
xchg
test
push
jne
scas
mov
dec
fwait
fwait
xchg
push
in
inc
jge
fdivs
pop
mov
adc
repz
pushf
xchg
and
dec
adc
in
dec
or
jo
inc
dec
leave
mov
jecxz
push
iret
lret
js
jmp
mov
out
fadd
andb
bound
addb
mov
mov
test
fiadds
add
xchg
scas
inc
or
stos
loop
jns
fs
int
xor
movsb
jo
popf
lcall
cmp
or
sbb
enter
mov
xchg
mov
add
xor
dec
jl
aaa
scas
sub
ja
push
pop
sub
push
mov
ljmp
mov
and
sbb
in
jl
mov
xor
cmp
push
jp
mov
add
cld
aaa
shll
and
or
loop
insl
dec
pop
das
decl
cmc
and
in
rclb
cmpsl
mov
mov
sbb
inc
aaa
addl
iret
es
roll
mov
mov
int3
pop
in
mulb
pushfw
mov
mov
xor
mov
mov
jo
add
and
mov
aaa
xchg
stos
int
lds
xor
mov
sub
repnz
and
mov
cmpsl
fidivrl
loope
into
cmp
scas
sub
xlat
inc
fidivs
adc
stos
cmp
in
das
fs
inc
andb
iret
dec
pop
scas
cmp
push
std
div
pop
test
fsubrp
je
sub
inc
add
mov
xor
cmpsl
movsl
sbb
pusha
shlb
out
sub
outsb
jnp
cmp
xchg
add
rorl
push
inc
shl
aaa
fnstenv
std
rorl
cmp
inc
jmp
push
addr16
mov
dec
frstor
repnz
mov
pop
dec
repz
cli
jge
mov
test
adc
mov
lahf
xchg
clc
lret
xchg
sbb
xlat
aad
punpcklbw
xor
test
xchg
jns
inc
add
adc
sti
push
imul
mov
mov
xor
mov
rolb
sbb
cmpsb
sbb
xchg
lods
jbe
inc
or
inc
sbb
xchg
jne
sahf
mov
xchg
add
and
sarb
mov
cwtl
arpl
adc
mov
adc
shrl
jmp
cmp
and
leave
or
push
or
cmp
push
cmc
je
fsubrl
movsb
imul
mov
mov
pop
mov
aam
enter
hlt
loop
mov
sbb
sub
lods
dec
les
adcb
push
in
scas
imul
fcomps
mov
repnz
sti
mov
xchg
cmp
popa
scas
or
lea
push
inc
dec
inc
fistpll
out
cmp
ljmp
inc
lock
sub
cltd
movsl
repnz
bound
add
mov
pop
mov
lods
jns
int
lret
jmp
imul
jo
fcmovnb
xchg
aas
insb
fisubs
push
out
cmp
pop
push
sub
mov
adc
insb
cmp
add
test
push
pop
mov
xorb
or
adc
scas
in
dec
ss
in
jecxz
push
outsb
mov
stc
inc
icebp
xchg
and
out
sbb
mov
jmp
cmpsb
jmp
mov
inc
daa
dec
push
jae
aad
cld
pushf
insb
sbb
or
xchg
leave
aas
push
or
arpl
mov
sahf
stos
mov
mov
xchg
sub
in
mov
fisttps
push
sub
xor
inc
ja
sub
jns
mov
mov
jb
ret
pop
dec
adc
clc
xchg
lcall
dec
ret
scas
gs
es
xchg
xor
jo
es
mov
and
sbb
out
dec
ret
xor
push
and
xchg
cwtl
pop
pop
or
cwtl
mov
lods
push
xor
xor
sti
jecxz
fcoms
loop
cmpsl
cmc
and
ljmp
inc
cli
jae
idivb
fcomip
sbb
loope
pop
jecxz
inc
ret
gs
std
mov
stos
xchg
ljmp
fstpt
mov
movsb
into
jae
xchg
adc
aad
lahf
dec
stos
lahf
pop
add
or
ror
test
dec
mov
cmpsb
cli
mov
fstpt
dec
add
cmpsb
rcrb
add
lods
rcrl
clc
popf
movsl
mov
test
cld
fld
push
jle
xchg
mov
mov
sti
out
xor
imul
ja
cli
dec
push
enter
rorl
inc
outsb
xor
push
sub
sbb
xchg
jle
dec
notb
out
push
mov
cmc
or
stc
push
stc
mov
inc
add
int
cmp
movsb
pop
cmp
xor
ret
cmp
nop
sub
mov
ret
fs
shrb
adc
jmp
mov
and
jnp
lahf
sar
mov
cmpsb
add
lret
xor
inc
adc
movsb
inc
cli
outsl
das
jp
cmpsl
mull
mov
loop
mov
sub
xorl
jge
jno
jl
dec
cwtl
test
mov
dec
xor
decl
sbb
fidivrs
jle
dec
sbb
add
lods
shlb
mov
mov
ljmp
mov
cmp
mov
xchg
inc
push
jae
mov
sub
sub
pop
jo
shl
fsubl
adc
inc
lret
adcl
push
push
mov
push
in
or
pop
push
mov
cmp
or
jb
push
lods
xacquire
ret
adc
pop
mov
mov
lret
je
daa
scas
or
mov
ljmp
cmp
mov
and
push
es
mov
xor
mov
adc
cmp
dec
sbb
ja
push
cld
arpl
sbb
pop
mov
mov
jnp
mov
push
into
adc
xor
out
fisubs
rorb
pop
cmpsl
in
push
bound
pushf
std
sbb
jnp
sbb
stos
push
popa
movsb
repnz
enter
inc
dec
dec
inc
and
fcmovbe
outsb
cmp
inc
punpckldq
add
lahf
test
dec
rorb
adc
js
sbb
sahf
movsb
fstpl
adc
int3
outsl
je
mov
push
xor
das
aad
inc
push
jp
inc
cld
lcall
addr16
inc
sahf
movsb
or
sti
mov
in
pop
les
cwtl
cld
mov
or
jne
and
into
pop
cmp
je
fstps
shlb
stos
cmp
ljmp
out
jecxz
xor
add
shrb
sbb
mov
faddl
inc
aam
or
sbb
das
ss
push
imul
lret
bound
ja
jo
fmul
das
cmpsb
aas
aad
mov
ror
push
push
enter
cmp
rcr
dec
mov
dec
push
subb
in
lret
pop
lods
mov
imul
leave
imulb
jl
jecxz
fwait
into
int
mov
into
mov
cmpsl
cmpsb
or
mov
ja
add
add
ficoml
dec
jnp
cmp
jb
mov
cwtl
pushf
xchg
mov
cld
out
mov
dec
add
push
outsb
leave
and
pop
out
lcall
pop
int3
add
mov
lock
and
sub
inc
push
movl
push
mov
pop
les
pop
cwtl
stos
arpl
fidivrs
orb
jge
xlat
dec
shl
sbb
loope
xor
add
mov
sub
lahf
jo
pop
cld
xchg
mov
sub
es
popa
dec
jo
insb
movsb
push
mov
xchg
daa
push
rcll
int
xor
and
xchg
inc
shll
sub
pop
cs
aad
cmp
sub
fistl
and
mov
mull
iret
lcall
xchg
cmpsl
stos
cmp
mov
insl
sub
jb
fwait
sub
ss
fwait
adc
lock
push
fwait
mov
jecxz
insb
adc
sub
xor
cld
adc
fiaddl
test
dec
dec
pop
inc
lds
pop
sbb
jmp
push
cmp
mov
pop
and
jmp
leave
inc
jg
mov
xor
xchg
adc
sbb
cmpsb
loop
jae
test
cmp
or
add
ja
rorl
mov
repz
push
and
popf
sbb
sti
jle
mov
fcom
pop
cmp
mov
jno
add
rcrl
pop
call
dec
mov
rcr
cmp
es
fisubrs
or
push
or
push
lret
xchg
sbb
mov
es
in
xchg
into
data16
repz
sahf
test
mov
xor
sarl
or
jle
shll
sub
imul
xor
cmpsb
faddl
and
rcrl
xchg
iret
movsb
je
or
js
test
fcoml
push
mov
notl
ja
and
push
mov
stos
ja
into
cmp
iret
pop
ret
fwait
pop
mov
std
jmp
inc
jge
scas
push
jbe
into
adc
sbb
dec
fcom
fs
add
nop
cmp
pop
adc
sahf
push
adc
inc
call
cmp
jge
gs
and
aad
jo
pop
fstpl
mov
sahf
ja
dec
enter
push
repz
fdivr
push
xchg
divb
lcall
add
test
dec
out
mov
mov
dec
mov
sub
aad
jle
clc
stos
mov
dec
loope
push
jns
inc
int3
or
sti
lret
mov
and
loope
sbbl
mov
mov
pop
outsb
fnstenv
cli
pop
xor
std
push
fcoml
mov
out
or
in
jnp
and
incb
xor
xor
jmp
cmp
jbe
outsb
loop
mov
insb
or
sub
jge
adc
add
mov
mov
cmp
inc
mov
roll
lods
ffree
lret
pop
add
cmc
movsb
jb
jecxz
or
sub
fwait
in
inc
mov
out
fidivrl
sbb
and
xor
sti
sahf
aam
or
pop
xchg
cli
stos
lahf
xchg
lea
add
mov
mov
cmpsb
mov
add
sbbb
lea
cwtl
or
mov
nop
mov
fnstcw
push
movsb
jg
mov
ss
shlb
sub
or
sbb
push
xor
lods
mov
mov
aaa
cmpsb
dec
add
cltd
pop
ss
inc
pop
insl
mov
adc
and
aaa
mov
les
sbb
rclb
movsl
outsb
xor
out
xor
push
in
pusha
ss
and
hlt
mov
in
loopne
rcrl
inc
jae
inc
test
les
ret
pop
mov
sub
scas
xor
imul
push
mov
add
sub
shr
into
scas
cli
jae
and
fsubs
push
mov
mov
or
insb
ret
add
xor
lods
pop
sbb
and
pop
repnz
cmp
pop
sbb
push
cmpsl
fnstcw
ss
jb
push
mov
pop
jns
subb
adc
or
call
pop
jle
jg
xchg
jl
adc
in
jl
inc
or
push
test
outsb
mov
mov
mov
rorl
cmp
inc
icebp
jl
inc
aas
popa
pushf
mov
pop
add
icebp
rcrl
fwait
repnz
push
loope
scas
inc
adc
aaa
adc
cltd
and
imul
addr16
xor
ds
incl
sbb
cs
inc
lcall
stc
mov
fdivs
xchg
sbb
aas
and
lods
add
in
cmp
dec
push
pop
jno
mov
xorl
dec
push
repz
das
jecxz
ja
jge
das
mov
cmp
loopne
mov
dec
cs
andb
ljmp
inc
xor
cli
js
shl
add
xor
lock
sbb
sbb
loope
idiv
into
jns
cmp
cli
shlb
pusha
scas
popf
xchg
out
mov
fdivs
dec
jno
jmp
mov
mov
nop
xchg
xchg
stos
js
ss
insl
adc
xchg
fmuls
jp
test
imul
pop
int
xchg
mov
es
cmp
es
pop
cmpl
sar
call
jne
add
dec
gs
xorl
outsl
add
xor
pop
sub
xor
ja
lods
lods
loope
xchg
lods
hlt
cmp
ljmp
lods
mov
das
sub
out
ja
pop
fbld
pop
and
adc
sarb
mov
fwait
dec
inc
bound
clc
or
fdivl
scas
mov
sbb
subb
xor
xor
pushf
stc
add
inc
pop
ror
cmp
push
fistps
addr16
test
jne
push
sahf
pop
push
cmp
add
jne
int
lret
jo
lea
mov
lock
icebp
fs
add
adc
lcall
xchg
mov
incl
pop
ljmp
fs
rolb
jns
in
testl
lds
popf
data16
cld
hlt
xor
cmpsl
jbe
aam
mov
sub
lods
cmp
push
in
test
push
xor
scas
mov
jno
mov
mov
inc
xchg
loopne
sbb
jnp
in
in
push
mov
and
or
pop
cmpl
add
mov
jmp
cwtl
imul
adc
iret
nop
inc
xor
nop
cmp
mov
sbbb
inc
inc
fisttpll
fs
jecxz
jge
cmp
cmpsl
test
xchg
pushf
stos
jbe
lea
push
stos
and
popw
mov
cwtl
or
mov
outsb
insl
xchg
push
movsb
loop
dec
hlt
adc
xchg
add
push
mov
icebp
add
dec
jge
fisubrl
and
pop
inc
adc
sbb
and
or
xchg
xchg
stos
mov
xchg
or
popa
imul
cmp
push
cmp
inc
repnz
dec
pop
fistps
mov
add
jmp
cs
jmp
mov
mov
xor
out
or
mov
inc
stos
jg
cmp
push
add
in
cli
mov
sbbb
mov
movsb
mov
inc
test
cmp
add
mov
pop
hlt
inc
stos
inc
xchg
rcr
out
jne
outsb
mov
dec
shr
in
inc
and
rclb
subb
fadds
std
push
pop
mov
inc
push
imul
mov
jmp
mov
or
addr16
xchg
lea
data16
fidivrl
pop
in
nop
xor
sbb
or
lahf
icebp
pusha
movsl
lock
jne
xchg
mov
sub
out
inc
inc
ret
rorb
lar
add
mov
xlat
push
negl
gs
pop
dec
adc
icebp
cld
xchg
dec
inc
push
mov
incb
mov
cmpsl
loope
jbe
mov
ljmp
movl
movsl
popf
mov
les
insb
scas
shrl
adc
mov
inc
dec
loopne
mov
jmp
inc
xchg
ljmp
stos
pop
test
and
or
icebp
push
dec
dec
add
imul
push
in
cli
shr
in
sti
cmc
into
out
clc
cwtl
pop
sub
push
pop
icebp
dec
orb
and
sarl
push
jnp
mov
xchg
and
lcall
jne
mov
or
adc
fs
rcr
pop
lock
outsb
pop
xchg
push
or
pop
mov
pop
and
leave
mov
xchg
sub
jb
dec
fcomp
xchg
and
repz
pop
mov
add
jp
shr
repnz
pop
loope
pusha
dec
and
insl
xor
dec
cmp
cmp
testl
cmp
fisubs
fsubrl
mov
dec
sbb
int3
xor
xchg
xor
stc
out
push
mov
into
adcb
push
xchg
hlt
mov
push
arpl
jne
popa
or
mov
lock
mov
test
rcrl
rcrb
inc
cmp
pop
and
and
sbb
mov
add
or
xchg
mov
or
lahf
jbe
xlat
pusha
sti
popa
movsb
cmpl
sub
dec
pop
pop
inc
adc
movsb
fnsave
mov
inc
in
jnp
pushf
negb
ret
dec
loopne
mov
outsb
jg
dec
lret
idivl
push
cwtl
ljmp
cmp
loop
aas
push
sbb
xor
andb
pop
or
jmp
pop
xchg
test
or
xor
push
mov
arpl
ja
lods
xchg
push
mov
xor
stos
inc
orb
pop
mov
fimull
mov
aas
xlat
sahf
mov
outsb
push
mov
lods
out
stc
ret
push
inc
or
aaa
mov
lcall
jmp
dec
add
aad
outsl
sbb
repnz
xchg
scas
xor
insb
xchg
inc
lret
mov
mov
or
pop
iret
cs
ret
jae
in
inc
lcall
or
sbb
pop
mov
sbb
add
xor
jp
popf
jle
mov
or
pop
mov
xchg
loop
fwait
or
cmovb
push
or
xchg
cwtl
push
xchg
cmp
addr16
fcomip
sbb
gs
outsb
adc
xor
mov
push
stc
inc
mov
ror
std
inc
pop
cmp
pusha
sub
stos
jae
xor
inc
cltd
ja
jo
mov
cs
mov
aam
dec
mov
xchg
mov
mov
movsl
push
cld
mov
rcrb
pop
lock
xor
out
sbb
test
add
punpckldq
stc
movb
sbb
lcall
or
outsl
pusha
or
jmp
pop
xlat
or
inc
repnz
pop
mov
out
lcall
xchg
mov
leave
or
je
and
repz
dec
addr16
xchg
dec
cmpsb
cli
xchg
adc
int
das
mov
out
fistps
fdivs
daa
mov
fdivl
pusha
cli
add
mov
xor
push
cmp
push
mov
in
ficoml
gs
xchg
push
cmp
xor
jp
shrb
xor
dec
rol
je
leave
sarl
fdiv
mov
jecxz
mov
push
test
add
jmp
xchg
jo
mov
push
loopne
jmp
pushl
neg
add
inc
push
iret
les
adc
ds
inc
or
fisttps
cmp
hlt
mov
xor
xchg
or
popa
lret
or
into
push
push
dec
mov
ret
pusha
adc
movsl
test
leave
sub
and
xor
iret
fistps
mov
cs
out
push
fsubl
xchg
xchg
jbe
jb
loop
mov
jbe
mov
dec
inc
in
les
fs
dec
into
sbb
popf
nop
mov
mov
fiadds
inc
das
int
lods
lods
inc
repz
dec
arpl
movsb
testb
ret
outsb
xor
addr16
sub
fs
rcrl
rcr
sbb
data16
pop
cmp
dec
mov
inc
mov
and
aas
cmp
test
mov
pop
jp
popf
fwait
in
icebp
and
sub
cmp
int3
cmp
dec
pop
frstor
add
add
and
ljmp
sbb
cmpsl
cmp
int3
dec
daa
push
and
mov
aaa
mov
lret
lcall
in
jecxz
xor
icebp
call
jo
outsb
fcoms
mov
cs
xor
lock
mov
mov
adc
lods
jge
dec
lcall
outsb
inc
fcompl
cmc
mov
lds
ljmp
pop
jmp
or
and
or
loopne
mov
jne
fidivrl
or
scas
sti
faddl
sbbb
addb
mov
popa
je
add
add
mov
sbb
xor
data16
xchg
mov
inc
dec
xor
jns
nop
aam
jp
stc
mov
iret
add
or
sub
sahf
loop
les
ret
insb
aad
inc
pop
sbb
jle
mov
pushf
pop
je
data16
andl
icebp
sub
out
mov
hlt
cmp
lahf
or
mov
push
or
shl
and
inc
or
jg
add
les
mov
addl
ss
or
jl
outsl
sahf
pop
movsl
pop
or
or
clc
neg
mov
mov
fs
nop
xchg
shlb
mov
sbb
add
dec
pop
jle
int3
mov
scas
sbb
or
sahf
mov
inc
orb
enter
daa
xlat
and
jge
sub
test
xor
or
out
jb
sub
out
sahf
sbb
loope
aad
insl
shl
pop
movsl
cmp
jo
sbb
fxch
xchg
mov
or
popl
sub
mov
jp
fdivrl
add
cli
das
scas
push
movsb
xchg
xchg
iret
jne
and
sbb
mov
in
mov
insl
mov
popa
mov
mov
lods
adc
push
and
enter
mov
pop
out
pop
mov
push
and
cld
sub
pusha
fidivs
adc
inc
add
lods
sbb
sbb
mov
aaa
adc
push
sbb
dec
push
fwait
rol
lock
pop
movsl
xor
sub
jecxz
adc
outsl
sahf
or
das
jmp
pop
cmc
lock
insb
jl
push
in
cli
sub
cmp
lcallw
adc
add
movsb
pop
out
sub
jecxz
iret
loopne
mov
int3
loopne
push
scas
push
adc
sub
xchg
adc
push
push
fisubs
inc
ds
outsb
mov
adc
cmp
push
in
into
lds
push
mov
loopne
int
psrld
cmpsl
jp
aam
hlt
out
mov
sbb
loop
shl
push
popf
test
mov
clc
shlb
push
scas
xchg
mov
stos
cli
lods
data16
sub
jp
es
and
shll
or
and
push
lock
pop
push
lods
mov
int3
and
and
cmp
loop
scas
jb
sub
inc
stos
lods
js
xchg
into
cmp
inc
loope
mov
fsubs
in
outsb
mov
push
lds
lds
xor
mov
sub
add
movsb
jmp
inc
dec
lock
push
in
jne
cmpl
ret
outsl
push
popf
and
sub
std
push
call
xor
les
fcmovu
cmp
iret
fiaddl
jp
jmp
mov
pop
jle
dec
sub
jns
into
roll
jne
idivb
cmp
push
mov
or
mov
pusha
daa
inc
jnp
cmp
lea
xlat
aad
mov
fs
pop
sbb
iret
stos
mov
popf
cltd
mov
loopne
cs
jg
pushf
incl
sbb
repz
jo
fs
sub
fidivs
sub
mov
and
and
lret
sub
decl
and
icebp
lahf
clc
xchg
or
push
call
jno
imul
mov
sbb
cld
sub
pop
out
push
push
imul
cli
or
sub
or
test
push
add
insl
add
cmp
add
xchg
int3
iret
stc
ss
vxorps
add
cwtl
xor
clc
stos
mov
rcrb
jg
mov
cld
cltd
test
scas
popa
call
push
loope
push
lcall
orl
test
jno
ret
scas
int
call
push
mov
dec
add
sbb
xor
ja
jbe
xchg
cmp
inc
cmp
sbb
sub
cltd
mov
out
icebp
mov
push
adc
cmc
cmp
xor
xchg
je
arpl
xor
imul
mov
mov
cmp
push
pop
add
fwait
loope
inc
lahf
pop
movsl
sub
push
and
and
push
cmp
repz
mov
arpl
test
push
and
rorb
pop
cmp
mov
icebp
es
dec
xor
jle
aaa
clc
maxps
cld
mov
test
push
xor
sbb
out
fstl
lret
cli
jb
dec
mov
call
dec
jns
fwait
sahf
mov
in
pop
and
cmp
test
sub
call
cs
imul
repnz
cmp
int3
xchg
sub
jge
out
and
sub
adc
dec
mov
sbb
icebp
daa
inc
cmp
jmp
cli
mov
mov
fwait
out
dec
mov
sbb
stos
mov
pop
fbld
push
es
repnz
and
ret
mov
sub
popa
sbb
sub
pop
xchg
and
or
xorl
sub
mov
mov
je
insb
sub
inc
addr16
xchg
aam
xor
mov
xchg
jo
les
hlt
repnz
int3
adc
adc
fldl
jne
aam
dec
pop
subl
mov
jmp
fnsave
mov
aas
in
push
js
jb
add
push
out
ret
jne
mov
xorl
cli
jmp
push
dec
loope
adc
enter
inc
scas
pop
repz
xchg
repz
mov
lret
mov
out
data16
push
xor
or
gs
mov
sbb
jl
or
nop
test
adc
mov
jno
mov
stos
out
mov
fmuls
add
popa
ret
inc
out
divb
cmp
out
repnz
rcll
sub
xchg
arpl
fwait
dec
sbb
pop
test
mov
or
xor
call
lahf
addr16
mov
testl
mov
fs
lods
adcl
dec
imulb
or
inc
push
stos
dec
pop
pop
add
nop
clc
mov
push
xor
lds
jge
imul
flds
fs
or
jg
mov
sub
add
lock
mov
cmp
cwtl
xchg
out
push
sub
add
cmpl
push
pop
loopne
or
or
push
push
movsl
xor
clc
movsl
push
and
ljmp
add
sub
ret
aas
cwtl
out
ljmp
jns
and
xor
pushl
jnp
in
sbb
dec
jge
subl
adc
jns
in
push
icebp
pop
fneni(8087
sbb
fwait
hlt
sub
xor
pop
or
mov
imul
mov
and
jmp
inc
std
ficoml
das
xchg
xor
jne
ss
lods
mov
push
andb
test
nop
insl
or
addr16
add
hlt
stos
adc
jg
fsubs
les
repz
inc
sub
arpl
cltd
mov
lret
adc
push
sub
inc
test
fsub
sbb
pop
xlat
mov
sahf
pop
push
pop
dec
iret
push
mov
test
popf
adc
fisubl
cmp
test
das
ret
sahf
bound
push
push
mov
popf
and
pop
xor
mov
rcrl
rcrb
mov
fwait
sbb
mov
ret
loop
repz
pop
mov
adc
insb
jge
add
cmp
outsl
push
cmp
or
in
cbtw
sbb
lcall
fisubrs
mov
push
or
fs
push
sub
mov
enter
repz
and
aas
cmp
sbb
sbb
adc
inc
fistpll
je
adc
jne
xor
and
lret
lret
clc
imul
adc
jge
cltd
in
rcrb
cs
imul
dec
jb
into
xchg
cmc
push
cltd
jg
fisubrs
out
daa
mov
inc
sub
mov
add
push
push
adc
jbe
xchg
lods
movsl
popf
int
xchg
stos
lods
sbb
sbb
mov
mov
data16
rcrb
mov
push
push
or
call
movb
xor
jl
loop
rcll
or
ret
jle
xor
cmp
cs
insb
sti
add
sub
loop
jp
insl
mov
stos
lret
dec
pushf
xchg
popa
mov
xor
xchg
push
or
ret
insb
cmp
xor
jns
sti
loop
cmp
xchg
lahf
fbstp
push
add
jae
pusha
fwait
add
sub
mov
mov
xchg
in
shll
pusha
dec
fisttpl
addr16
fbstp
adc
adc
cmp
and
inc
dec
mov
xlat
pop
add
adc
mov
jecxz
iret
inc
filds
nop
mov
xrelease
xchg
xchg
push
pop
push
add
lret
inc
ss
push
add
fdiv
inc
jmp
mov
je
daa
jb
xor
jae
jae
sub
repz
xor
out
adc
cmp
mov
sub
mov
mov
rclb
xchg
leave
adc
mov
mov
imul
adc
out
rolb
ret
andl
shlb
or
adc
jns
xchg
xchg
pop
nop
mov
les
repnz
gs
xrelease
frstor
mov
push
shll
insb
add
pop
int
rorb
jne
out
mov
stos
shl
ret
adc
icebp
pusha
pop
push
push
mov
push
icebp
sub
cltd
dec
jbe
clc
mov
cmp
push
jne
out
sbb
fdivrl
lea
sti
je
dec
or
jmp
xorl
lcall
xorb
lcall
and
sub
out
test
int3
mov
add
and
test
mov
mov
inc
xlat
xchg
in
movsb
out
jb
lret
adc
cli
adc
xchg
in
mov
mov
pop
lret
stos
aas
aad
cmc
cmp
jmp
dec
inc
ret
mov
pop
pop
push
mov
mov
xor
sub
cltd
dec
movups
inc
adc
div
jl
xor
nop
std
lock
pop
roll
int3
daa
pop
rol
cmp
das
cmp
iret
ljmp
clc
pop
pushf
lret
fcmovnu
enter
lods
test
lahf
xchg
push
arpl
lahf
out
jle
lds
add
movsb
sbb
pop
cmp
stos
out
mov
jp
push
arpl
pusha
or
out
inc
inc
sub
pop
cmp
xor
sbb
pop
xchg
outsl
fwait
loop
or
out
pusha
into
addr16
inc
les
cltd
add
test
repnz
dec
mov
cld
lea
xchg
scas
rcll
ljmp
mov
je
ret
loop
cmp
jp
rolb
popf
pop
lcall
lods
sub
lds
loopne
mov
in
ret
loopne
adc
dec
pop
or
xchg
inc
cmp
jno
cwtl
imul
cmp
inc
jmp
fnstenv
sbb
cmp
cli
inc
sahf
pusha
or
hlt
js
jg
jo
xchg
xor
xchg
adcb
cwtl
out
push
fcomps
mov
imul
xchg
or
imul
push
and
ret
ljmp
mov
mov
repz
push
inc
lahf
or
xchg
iret
in
je
enter
xchg
test
std
push
jnp
test
inc
sahf
or
mov
xor
cmpsl
and
mov
add
je
cmp
ljmp
test
adc
loopne
add
rcll
mov
addr16
loope
icebp
pushf
add
sub
jnp
jg
cmp
aam
xchg
jns
dec
fs
in
and
xchg
cltd
fildl
mov
jo
ja
dec
jne
mov
mov
and
fadds
fucomi
and
int3
adc
mov
mov
sbb
rorb
add
or
in
cmp
and
shrl
mov
cmpsl
mov
icebp
mov
inc
cmp
xchg
call
jg
sti
inc
iret
xchg
mov
fs
lods
pop
les
sbb
mov
dec
test
cmpl
mov
mov
sbb
jge
test
outsl
adc
ljmp
mov
inc
dec
mov
cltd
push
push
push
mov
mov
je
dec
das
not
insl
jno
movsl
push
or
sbb
aas
sti
test
add
jne
fcmovnbe
push
ret
iret
mov
mov
xchg
push
std
sti
test
mov
ud1
and
jmp
sub
add
in
es
imulb
int3
daa
push
push
sub
rolb
inc
sbb
mov
inc
inc
sub
adc
mov
xchg
test
fidivrs
cmp
push
jo
loope
adc
jl
je
push
push
cmpsl
int3
mov
aad
ja
movsl
push
push
add
insb
outsb
out
xchg
call
in
and
je
inc
scas
fcmovne
push
fnsave
aaa
or
ds
gs
push
fs
rcll
pop
xor
das
add
jne
sbb
add
xor
mov
push
inc
cli
xor
adc
cmp
shrl
pushf
ss
adc
lds
xor
mov
idivb
adc
add
push
rcrb
repnz
xchg
arpl
ds
jae
lods
cmp
mov
jnp
jo
push
add
xchg
xchg
and
pop
mov
push
cs
push
subl
imul
cs
cwtl
xlat
adc
mov
push
repz
xchg
inc
xchg
in
test
sub
sub
sub
mov
push
or
cmpsl
mov
sbb
fistps
inc
insb
popf
loope
aaa
out
mov
sub
jmp
fstpl
push
mov
sbb
or
or
pusha
xchg
gs
jbe
daa
ds
push
sub
dec
shlb
fiaddl
mov
lahf
mov
jmp
adc
adc
mov
outsb
cwtl
imul
popf
jns
leave
scas
pop
or
in
mov
lea
fstpt
addr16
jae
test
sbb
jge
pop
addb
cwtl
shll
adc
push
pop
sti
and
clc
xchg
jg
push
addr16
mov
pop
sbb
or
je
in
push
out
cmc
rcl
cli
mov
dec
push
das
out
inc
add
add
inc
mov
push
jne
test
sub
push
sahf
decb
std
es
mov
xor
movsl
jl
sbb
mov
inc
push
xchg
push
ja
divb
mov
jecxz
movsb
mov
sbb
xor
adc
mov
add
inc
cmc
xchg
aad
pop
cs
mov
push
xchg
push
cmpsb
jno
or
scas
mov
or
xor
insb
dec
cld
les
mov
push
or
mov
cwtl
movsl
lods
inc
xchg
popf
pop
imul
xchg
aad
or
sbb
cmp
jbe
dec
sbb
xor
jae
out
cmp
mov
icebp
cmp
lea
arpl
stos
mov
or
xchg
test
jl
lcall
rcrl
lods
cmp
bound
pop
mov
test
repnz
fbstp
daa
cs
loope
rcl
loopne
out
addr16
sbb
jnp
adc
sbb
int3
inc
gs
test
jmp
add
shr
sub
adc
sub
les
mov
mov
xor
int
push
add
dec
cwtl
das
xor
ds
pop
je
adc
inc
movsl
push
ret
test
cld
in
leave
ret
out
das
daa
int3
mov
pushf
outsl
leave
add
push
mov
mov
fisubl
and
xchg
push
inc
jp
aaa
push
rolb
pop
pop
dec
stos
jmp
rcrb
dec
sbb
sahf
mov
mov
add
orl
lret
fwait
daa
sub
xchg
mov
in
fistps
testb
xor
ja
rcl
pop
aaa
xchg
pop
movsb
xor
lret
je
mov
inc
mov
push
jl
ja
dec
pop
jmp
gs
mov
xor
jp
xor
xchg
jge
jnp
push
mov
hlt
popa
xchg
std
fimuls
mov
into
inc
iret
jmp
sbb
out
adcb
xor
push
mov
pop
les
and
pusha
out
stc
fcmovnu
out
mov
sti
fisttpll
sub
inc
mov
out
data16
jo
xchg
adc
outsb
adc
cmpsb
mov
ss
and
repnz
mov
dec
xchg
sbb
ljmp
sub
loope
call
cmpb
pop
lods
fcomi
inc
push
mov
into
pop
ss
mov
fisubrl
ficoml
pop
outsl
lods
sub
out
add
orb
sub
mov
lcall
mov
pop
pop
xor
adc
jnp
movsb
mov
dec
mov
push
sub
mov
fstpl
aad
insb
repnz
je
popa
das
mov
mov
mov
cmpl
sbb
ret
inc
cmpsb
xchg
loope
nop
nop
xor
or
or
inc
jnp
mov
jmp
sarl
ja
sub
or
jae
test
outsl
push
cmp
or
or
cld
add
jl
mov
lret
add
mov
outsl
sub
shll
or
dec
adc
push
popf
xchg
inc
aad
sub
mov
mov
mov
sub
inc
out
andb
nop
mov
xor
jnp
std
dec
js
cmc
xchg
and
sbb
xchg
mov
sbb
sbb
xor
jb
lret
mov
mov
adc
pop
fbstp
lret
push
lahf
sbb
lahf
pop
mov
mov
adc
jl
lret
imul
shr
xorb
mov
mov
or
sub
subb
xor
int
fwait
or
int
fisubs
push
sbb
repnz
mov
lea
mov
cmp
cmp
mov
mov
out
dec
jp
pop
fdivl
add
hlt
xchg
inc
push
in
into
sub
iret
dec
repz
inc
aad
addr16
iret
lea
daa
add
mov
mov
xchg
fs
rcll
repz
cltd
inc
out
int
sbb
shlb
dec
push
movsb
lods
dec
fdivr
iret
sub
stc
push
add
decl
pop
addr16
mov
cmpsl
rcrl
shrb
rcrb
dec
adc
cltd
and
xchg
inc
sbb
jb
shl
push
jecxz
cwtl
fidivrl
mov
mov
popf
mov
pusha
mov
hlt
add
insl
jae
mov
cmp
repz
imul
xor
les
sbb
inc
jge
aad
and
leave
mov
pop
mov
cmp
pop
dec
or
fwait
and
mov
mov
rcrb
aas
pop
xor
xchg
xchg
dec
movsb
mov
outsb
push
es
pop
or
aam
movsl
scas
add
xchg
xor
pop
mov
mov
xor
mov
cmp
mov
das
sub
inc
or
clc
jecxz
insl
leave
loopne
dec
popa
mov
leave
mov
xchg
cwtl
sahf
std
xor
in
pop
ret
into
jne
aas
push
repnz
or
xor
sbb
stos
inc
dec
cld
aas
aam
mov
jo
in
and
test
int
inc
sti
or
in
jae
test
das
add
cmpsb
cmp
xchg
hlt
movsl
out
adcb
jg
sub
xchg
mov
cld
pop
iret
mov
inc
mov
xor
mov
divb
ds
int3
pop
add
lea
add
gs
add
mul
nop
pop
test
xchg
adc
and
in
cs
fisubrl
outsb
lds
clc
pop
pop
push
xor
push
mov
push
int
lods
mov
jl
mov
xorl
clc
adc
out
sub
in
push
pop
out
imul
or
fldl2t
mov
mov
sbb
lods
push
mov
sbbb
into
scas
out
xchg
sti
gs
sub
dec
mov
aas
xchg
mov
inc
dec
and
inc
pop
je
lcall
adc
aad
mov
mov
cwtl
or
out
dec
or
iret
imul
mov
cli
sub
fwait
mov
inc
jae
shlb
test
icebp
bound
nop
push
xor
xor
jns
insb
loop
add
les
sar
pushf
sub
je
push
stos
sub
push
pop
mov
jns
fwait
inc
loopne
cmp
cltd
mov
pushf
test
sti
sbb
shrb
mov
cli
jl
bound
fsubs
lahf
and
inc
jg
mov
cwtl
xchg
sbb
and
cmpsl
inc
pop
fdivp
add
loopne
xchg
cs
aas
inc
mov
mov
jb
stos
test
and
xor
and
out
aas
pop
loop
xor
xor
mov
push
or
mov
sahf
into
xchg
fidivrs
xchg
mov
dec
sbb
push
jb
out
ljmp
mov
nop
add
test
push
mov
test
dec
mov
inc
add
out
jmp
sbb
cmc
cmp
pushf
ss
jbe
mov
add
pop
jae
cmp
insb
or
loop
xchg
push
pop
lret
aam
rolb
lahf
divb
sub
ret
cmc
xor
and
mov
dec
adc
sbb
lahf
daa
pop
jae
inc
pop
rcrl
pop
inc
ds
scas
pusha
test
adc
sbb
icebp
mov
push
cltd
sub
nop
stc
nop
push
in
insb
dec
shl
cmp
mov
inc
data16
in
orl
mov
enter
or
in
lahf
push
jbe
push
or
sub
test
xor
adc
out
pop
cmp
xchg
pop
mov
std
jnp
mov
dec
sarb
test
popa
xchg
call
mov
mov
sahf
mov
xchg
sysexit
adc
test
enter
xchg
xchg
in
push
stc
sbb
pop
cwtl
mov
ficoms
dec
push
xor
jns
insl
insb
pop
das
mov
and
or
xchg
ret
popa
jnp
pop
pop
xchg
xchg
push
out
out
jle
nop
adc
adc
stos
std
xchg
dec
iret
mov
shl
jnp
icebp
into
js,pt
fistps
sub
mov
fisubl
jb
jmp
push
jb
mov
movsl
sub
int
cld
repnz
or
clc
inc
fsubl
lea
test
mov
cmp
add
test
imul
mov
sahf
inc
cs
or
pop
and
and
xor
xchg
enter
pop
sub
aad
xor
lahf
test
pop
fcomps
jp
mov
test
mov
mov
xor
das
xchg
pop
sub
fldt
xlat
push
mov
insl
ljmp
mov
clc
mov
cwtl
cmp
add
leave
jmp
dec
xor
and
nop
pop
cmpsb
and
sub
int
mov
and
into
sbb
jnp
mov
and
sbb
adc
pop
movsl
cmpsl
and
cld
sti
in
out
jmp
hlt
push
flds
mov
sub
inc
or
add
mov
jg
xor
adc
pop
xchg
pop
add
xchg
int
gs
pop
pop
in
mov
imul
mov
inc
pop
push
and
testb
sar
ja
cmpsl
iret
insb
jge
pop
inc
subb
mov
jb
mov
sub
dec
je
ja
cli
test
mov
xor
cmpsb
xorb
into
ret
jno
imul
xchg
jae
pusha
jb
adcl
jg
push
stos
or
jb
call
je
pop
pop
push
sti
enter
sti
std
pop
arpl
inc
mov
push
stos
aaa
xor
add
and
popf
fistl
or
cmp
or
add
aas
adc
data16
pop
mov
add
add
test
xor
push
fcmovb
push
insl
dec
jge
mov
lea
inc
cmp
cmp
cwtl
lods
xchg
frstor
dec
mov
jb
add
rcl
fistps
push
fnsave
mov
gs
jno
mov
pop
dec
fsubl
cmp
insl
dec
mov
ror
pop
adc
popf
dec
push
in
jne
xchg
xor
in
mov
ljmp
hlt
subps
into
add
mov
and
out
es
fstps
adc
inc
push
ret
icebp
mov
add
mov
movsb
and
push
xchg
xor
nop
popa
add
pop
pop
push
notl
iret
lods
sti
jbe
je
cmp
mov
leave
dec
adc
cs
lods
in
xor
and
xchg
xor
mov
test
fdivs
aam
mov
in
lods
popa
into
lret
mov
cmc
pop
mov
ret
dec
push
dec
jl
pop
mov
mov
cmpl
sbb
xchg
pop
jecxz
test
push
std
stc
cmp
ret
rclb
cli
stos
ja
fidivs
in
in
push
je
dec
nop
shrl
pop
xchg
lea
ret
mov
pop
push
push
clc
add
jle
aam
and
pop
out
enter
or
mov
cwtl
cltd
lcall
and
pop
push
cmovo
and
xchg
xchg
scas
push
cmpsl
ret
fstl
adc
neg
lods
push
aas
jmp
cmp
dec
std
cmp
xchg
pushf
ret
pop
loope
cwtl
jl
in
cmp
lods
outsl
cltd
enter
lods
jg
jae
adc
arpl
loope
lods
lcall
ret
push
scas
adc
lds
cmovns
and
push
sbb
movsl
je
add
leave
into
sbb
dec
sbb
lods
xchg
or
mov
imul
sbb
mov
enter
aad
fidivrs
pop
mov
mov
xlat
mov
or
or
lcall
and
cli
and
mov
push
in
test
jmp
popa
push
xchg
xchg
mov
aam
inc
lods
into
stos
gs
xor
xchg
in
es
ficomps
popa
sub
jecxz
sub
mov
pop
inc
mov
movsb
ss
xchg
sbb
lods
aaa
xchg
shl
pop
mov
jb
in
shrl
or
mov
bound
dec
dec
aaa
cmc
inc
jecxz
push
xor
cld
shlb
add
mov
movsb
std
and
mov
out
int3
cmpsl
inc
mov
dec
subb
cli
fidivl
xchg
or
adc
fnsave
and
in
dec
lea
mov
mov
push
push
push
jp
jns
mov
inc
stos
jb
fidivrl
push
sbbl
inc
arpl
cmp
or
mov
or
insl
or
pop
jecxz
mov
outsl
stos
cmp
fwait
sarb
rcrb
movsb
pop
add
int3
xchg
rcrb
imul
cmc
mov
outsb
aaa
sub
lock
pop
cld
mov
dec
cmp
or
fwait
and
rcrl
inc
mov
cmp
xor
xchg
outsb
xor
xor
cld
pop
sub
iret
adc
mov
mov
in
push
mov
adc
mov
ljmp
and
or
rolb
add
lock
incb
and
mov
cmp
sub
adc
nop
jnp
mov
add
or
cmp
test
inc
cmp
inc
xchg
xchg
out
test
cld
repz
sbb
add
push
and
adc
jns
inc
dec
dec
cmp
cmp
mov
fs
repnz
pop
dec
aad
inc
jmp
loop
dec
mov
mov
pop
add
fcmovne
js
sub
jno
pop
push
mov
jp
or
cmpb
sbb
and
repnz
insl
inc
mov
stc
stos
int3
pop
pop
aam
lea
imul
in
jns
sbb
lcall
push
xchg
sti
jle
jbe
xabort
inc
lea
pop
sbb
jne
add
repnz
cmp
adc
test
inc
lds
test
fimuls
mov
jge
ficoml
lcall
stc
test
nop
fisubrs
jb
loopne
int3
mov
andb
clc
popa
sbb
lds
pop
das
sub
mov
out
dec
inc
cmp
add
cmp
iret
out
cmp
imul
sbb
xor
stos
dec
sbb
xor
lret
aam
fmuls
sbb
or
pop
lock
rcll
outsl
jecxz
xchg
mov
mov
pushl
adc
rcrb
fstpt
add
add
sbb
test
jne
xchg
insb
loopne
pop
sub
out
pop
push
gs
push
pop
mov
loop
cmp
mov
lock
push
xchg
icebp
or
mov
and
push
out
test
add
or
loop
jg
sbb
mov
mov
push
inc
push
mov
mov
insl
fdivp
fcmovnb
or
xchg
std
xor
cltd
pop
mov
js
clc
lods
push
test
pop
cmp
pop
pop
jno
in
push
and
ds
imul
fnstcw
push
xchg
into
dec
lods
repz
jl
dec
and
aas
pop
xchg
pmaxsw
je
fisubrs
scas
mov
cmpsb
mov
in
imul
decb
dec
mov
push
rcrb
rorl
inc
xchg
xchg
frstor
js
sub
icebp
incl
stc
inc
mull
pop
sbb
sti
push
enter
pop
or
cwtl
sub
aas
dec
data16
push
pop
in
stc
lret
dec
and
pop
pop
insl
nop
pop
xchg
mov
mov
sti
sahf
shl
jle
mov
fwait
jmp
ljmp
fadd
and
hlt
pop
add
das
mov
sti
sahf
pop
cwtl
or
mov
add
out
daa
lods
mull
xacquire
lret
xor
je
imul
clc
inc
dec
add
inc
mov
mov
inc
inc
or
inc
loopne
rcll
dec
cmp
push
shr
sub
jb
lahf
or
and
jae
mov
adc
cmp
cs
inc
inc
pop
jne
mov
test
or
scas
jae
sbb
pop
rcll
mov
push
ds
and
xlat
or
hlt
and
cli
ljmp
inc
push
in
dec
add
jl
into
loope
call
popf
lods
inc
in
hlt
fwait
or
cmp
dec
es
pop
sub
and
ret
pushl
cmpsl
lds
xor
mov
in
cltd
shr
xor
leave
bound
nop
pusha
rol
pop
loope
adc
out
mov
out
cmpsb
ret
andb
test
adc
and
sti
pushf
xchg
cmp
sub
pushf
mov
push
idivl
mov
test
sbb
out
inc
jp
adc
inc
sbb
lock
and
jecxz
xor
ljmp
ret
mov
add
fsts
out
push
stos
adc
xchg
outsb
cmpsl
adc
fmull
adc
sub
pop
push
and
or
xor
xchg
loopne
and
cltd
sub
jp
xorl
and
sbb
xor
arpl
sbb
ret
push
dec
fisubs
in
sbb
mov
dec
push
dec
lret
fiaddl
mov
out
scas
popl
jae
pushf
jmp
dec
int
addr16
ja
bound
or
cld
faddl
jle
adc
sbbl
dec
rorb
pushf
adc
push
js
jp
xor
cltd
rcrb
aam
clc
aaa
inc
jg
fcoml
add
ja
out
and
xchg
hlt
xchg
inc
dec
ud2
mov
inc
out
test
xchg
cld
inc
into
pop
pop
pop
dec
pushf
mov
dec
or
ret
js
and
ret
mov
pop
sub
cmpsb
jg
enter
push
sbb
mov
push
xor
xor
in
imul
in
or
and
out
mov
aaa
sub
xor
jne
cmpsl
sub
clc
add
fcoml
push
inc
movsb
push
popf
data16
pop
ds
add
test
sub
aas
mov
jns
repz
dec
push
mov
mov
cmp
movsb
testl
mov
jnp
jnp
pop
cmpsb
test
out
adc
push
cmp
inc
xchg
repz
sbb
cmp
push
xchg
hlt
or
mov
mov
cld
adc
sub
mov
pop
cmp
cmc
adc
pop
cld
xchg
mov
stc
mov
addb
imul
sub
subb
fwait
fwait
mov
or
or
gs
adcb
mov
pop
push
mov
push
cmp
scas
sub
lahf
jnp
outsb
inc
aas
mov
xor
mov
sti
adc
sti
imull
stos
icebp
stc
lcall
xor
lcall
shrb
fildl
rclb
dec
cmpb
dec
or
cmp
dec
sti
lea
push
insl
sbb
jl
sbb
add
push
divb
ja
mov
mov
cmp
push
dec
pushl
xchg
cmpsl
and
jl
and
jno
loope
and
push
jb
jnp
xchg
test
es
inc
xor
cmp
push
pusha
fimull
xor
mov
push
push
loope
xor
dec
sbb
aaa
mov
and
sub
mov
dec
enter
sub
clc
and
imul
aad
mov
addr16
stos
sbb
insl
jb
mov
adc
mov
daa
jne
xor
pop
pop
fdivrp
out
mov
insl
popf
xor
les
ret
mov
adcl
cmp
mov
icebp
inc
lea
pinsrw
xor
or
cltd
stc
fidivl
cwtl
inc
cld
mov
add
pop
mov
lea
sub
push
and
push
mov
add
mov
imul
add
sbb
sub
cmc
adc
mov
jae
pop
mov
and
push
xchg
aas
ss
cmp
mov
jle,pt
sub
cmp
dec
inc
xchg
sti
pushf
adc
add
pusha
cmp
imul
mov
dec
call
negl
inc
dec
push
mov
pusha
icebp
sub
sar
outsl
sbb
mov
scas
cmpsb
test
cmp
ljmp
dec
hlt
stos
xor
and
stc
sbb
mov
icebp
lahf
jae
int3
mov
inc
push
xchg
xlat
clc
cltd
jnp
adc
mov
jno
mov
cmp
mov
inc
dec
js
cmpsl
out
add
lret
jecxz
dec
cmp
push
pop
or
jmp
dec
cltd
xchg
in
popf
cmp
ds
or
and
mov
mov
loop
xchg
or
leave
sub
rorl
mov
loop
dec
hlt
mov
orb
jbe
xchg
out
fwait
dec
sub
xor
inc
imul
pop
out
pop
fisubs
sarl
jno
movsl
xchg
shlb
add
push
mov
push
cld
mov
cmpsl
fstl
sbb
shl
xlat
mov
dec
dec
in
enter
scas
testl
adc
dec
lahf
jmp
popf
rclb
inc
je
es
mov
mov
stos
inc
sub
loopne
flds
in
loopne
adc
mov
dec
lods
xchg
hlt
and
add
xchg
gs
mov
gs
xor
mov
pop
and
pop
dec
js
leave
add
add
outsb
xor
es
xor
shlb
fiaddl
jae
pusha
cld
andb
scas
and
push
popa
stos
jnp
adc
xchg
das
or
notb
pop
sbb
fimull
sub
sarb
mov
fsubr
jge
mov
movsl
inc
iret
xchg
ret
xor
fs
test
pop
pushf
xchg
sub
adc
inc
ljmp
adc
ret
xchg
pop
pop
repnz
mov
inc
add
sahf
jg
xchg
in
ret
outsl
xorb
insb
aaa
xchg
push
negl
add
xor
xlat
xor
pusha
push
jecxz
dec
xor
insb
pop
cli
mov
out
sar
ret
push
push
stos
mov
loope
jae
nop
and
xchg
iret
mov
add
nop
out
xchg
dec
jns
daa
iret
add
fsubrs
or
in
lea
xor
aad
cld
leave
mov
out
jp
inc
nop
jmp
mov
aam
xor
mov
xchg
cmpsb
insl
les
xor
cs
xchg
mov
out
sub
stos
daa
mov
dec
popf
jp
adc
or
out
movsb
mov
sub
mov
xor
mov
mov
fildl
dec
and
or
mov
jge
xlat
iret
push
inc
ja
cmc
in
aaa
out
xchg
fstl
das
ret
adc
push
xor
mov
and
add
adc
sbb
std
xorl
stos
add
add
pop
cmp
aaa
adcl
rcl
test
or
iret
pop
pop
mov
shlb
pop
or
push
add
int
daa
cmpsl
arpl
js
adc
lock
jge
bound
sbb
test
lea
jnp
cmp
test
add
dec
test
mov
test
mov
mov
sub
dec
or
push
mov
mov
iret
mov
or
das
daa
jmp
inc
xchg
addr16
inc
xchg
cmpsl
jne
mov
mov
fcmovbe
cwtl
adc
in
cmp
pop
xadd
lret
jo
sub
pop
stc
push
mov
mov
cmp
ljmp
call
cltd
jb
insl
int3
and
std
jg
or
aas
jbe
adc
lret
jne
loopne
call
push
push
jo
jmp
sahf
mov
in
push
stos
sbb
push
cmp
adc
sub
pop
shlb
jbe
arpl
aad
fisttps
clc
je
push
inc
mov
lods
lea
in
cmp
roll
fists
push
cmp
lods
mov
movl
dec
loop,pt
adc
xorb
leave
mov
js
mov
xlat
mov
adc
ljmp
sub
fwait
test
sub
or
xchg
push
cmp
ret
dec
and
das
out
jnp
out
icebp
xchg
sub
or
xchg
das
cmpsb
je
and
or
ljmp
and
loope
sbb
fldl2e
lds
divb
cmp
cld
dec
orb
inc
iret
movhps
push
mov
add
fmuls
mov
jb
mov
sahf
out
fidivrs
inc
out
mov
push
negb
lret
mov
cmp
mov
ja
sbb
nop
xor
push
enter
shr
mov
jo
pop
sbb
adc
push
adc
mov
sbb
pop
mov
repnz
add
inc
jb
mov
repz
sub
push
push
arpl
lock
pushf
in
adc
nop
push
push
xorb
daa
fistpl
xor
push
or
out
sbb
arpl
inc
shrl
into
pop
mov
cmc
jl
popf
mov
test
pop
js
sbb
sbb
mov
test
shlb
fwait
icebp
jmp
outsl
insl
lods
sbb
push
leave
incb
ret
or
cmp
dec
mov
mov
xor
sbb
add
xor
sbb
mov
and
jns
ljmp
inc
xlat
lds
and
imull
je
clc
aam
popa
mov
jp
sbb
int
jmp
or
repz
cmpsb
daa
xor
lea
scas
insl
pop
outsb
add
call
stc
cmp
nop
push
inc
inc
xchg
pop
mull
cmp
and
or
mov
out
jae
repz
and
jl
out
lods
imul
and
jp
mulb
xchg
cmpsb
loope
mov
sbb
xchg
mov
or
data16
addr16
cmc
xchg
in
add
and
xchg
push
jb
mov
cmp
out
inc
inc
cmpl
sarl
sahf
add
mov
ret
mull
push
mov
xor
mov
add
xorb
popa
sbb
jp
sbb
cmp
xchg
dec
inc
shll
gs
hlt
push
cmp
nop
mov
fcmovnbe
or
push
aad
in
cmpsl
dec
pop
je
jns
sub
call
push
mov
stos
roll
mov
xor
sub
int3
jecxz
pop
mov
jmp
test
mov
xor
inc
xor
add
xchg
sar
or
call
testb
fcmovu
repnz
enter
ds
dec
xor
or
lea
inc
xchg
mov
xchg
cmp
cld
xor
inc
jle
aam
xchg
sbb
push
mov
dec
hlt
jmp
jns
push
xchg
push
aad
jp
loopne
mov
lds
ja
jns
fdivp
aad
adc
test
divb
xchg
jmp
stc
xchg
mov
test
pushf
testl
cmp
push
pop
data16
xor
sub
orb
jecxz
pop
scas
push
js
push
xor
sub
mov
xchg
dec
or
dec
repz
mov
push
jmp
in
or
push
add
into
pop
aaa
sbb
frndint
rcl
pop
mov
fsub
jmp
aam
aas
add
cmc
xchg
popa
sbb
cwtl
pop
sub
movsl
cmp
dec
movsb
add
in
aam
dec
in
cld
or
pop
cmp
cmp
test
xchg
icebp
dec
das
add
test
test
jecxz
xchg
add
and
imul
inc
leave
push
inc
sti
daa
fistpl
nop
dec
fmuls
leave
push
jbe
stos
subb
sub
sarl
push
negl
sub
inc
xor
mov
cmpsl
or
iret
sahf
call
push
vunpckhps
mov
push
xor
xchg
adc
daa
arpl
mov
add
scas
fimull
repnz
aas
push
pop
fnsave
jmp
fwait
in
icebp
mov
push
cmp
xor
es
imul
mov
adc
cltd
icebp
push
push
bound
fsts
jno
rorb
mov
andl
jno
mov
sbb
sbb
mov
mov
int
jge
mov
xchg
adc
or
lcall
mov
dec
hlt
aam
inc
in
das
lods
imul
pop
jmp
mov
jmp
sub
or
out
outsl
xchg
insb
sahf
call
cmp
test
mov
nop
mov
rcl
nop
shrb
sbb
xor
pop
cmpsl
fcompl
hlt
add
adc
rorb
out
das
xchg
xor
pusha
sahf
pop
push
inc
xor
and
mov
add
lahf
popf
in
inc
mov
mov
push
mov
cmp
and
repz
push
fsubrp
sbb
lock
inc
call
sbb
sub
push
inc
push
adc
push
add
in
add
subb
repz
xor
fs
loop
mov
xor
inc
add
push
cwtl
mov
sub
pop
sar
out
add
mov
jbe
adc
push
or
fisttps
in
in
and
bound
movsb
in
xor
xor
bound
mov
pop
aam
mov
sub
and
mov
jne
rcrl
rcrl
mov
dec
or
out
cmp
jg
test
aaa
stos
les
aam
addb
mov
test
mov
faddl
sarb
ret
das
lret
lahf
push
inc
pop
lea
sarb
and
cmp
frstor
popf
sbb
push
xor
lods
pop
sub
inc
inc
push
lea
stc
xchg
mov
adc
loope
mov
cld
lods
hlt
push
mov
out
add
scas
rcrb
mov
pop
lea
in
mov
mov
out
and
je
cld
dec
adc
mull
mov
xor
pushf
jne
aaa
fstp
in
shll
push
sbbb
lods
pop
sbb
xchg
inc
push
call
rcr
stc
cmpsl
fsubrs
subb
xor
enter
mov
xchg
xrelease
pop
js
fs
call
sbb
subl
xchg
xor
pop
pusha
ds
xor
push
out
mov
lds
fbstp
jmp
fidivrs
sti
dec
mov
pop
sub
aas
inc
outsl
test
nop
or
sub
cwtl
leave
mov
pop
aam
mov
movsb
movsl
cs
sub
lods
mov
pop
mov
cmpsb
popf
jns
lcall
mov
jp
pop
addr16
dec
sbb
icebp
push
adc
jmp
nop
dec
cmpl
jmp
sbb
cmpsl
fldcw
lods
stos
cmp
lods
jo
dec
mov
lods
jmp
pop
sbb
adc
inc
and
pop
jecxz
std
push
jns
jecxz
movsb
push
pop
sub
jge
xchg
dec
dec
xchg
out
cmp
xchg
daa
cmpsb
pop
sub
lock
fildl
xchg
pushf
shrl
pop
cmpsl
ja
mov
add
pusha
fsubrs
mov
adc
iret
lds
mov
dec
cmp
add
call
repnz
lea
out
mov
push
xor
push
pop
ljmp
ds
inc
sbb
ret
push
add
lret
and
pop
ds
xchg
mov
sbb
into
pop
pop
adc
pusha
cld
lcall
pop
in
inc
mov
cli
sti
orl
movaps
leave
pop
leave
pop
jmp
shr
mov
sbb
xor
mov
imul
test
jns
sbb
pop
dec
or
ficompl
jbe
pop
pusha
leave
movsl
cld
sbb
andl
outsl
int
inc
xor
mov
in
add
adc
lods
push
xchg
or
hlt
add
inc
dec
addr16
movsb
push
jnp
mov
mov
aaa
enter
xchg
mov
je
div
pop
sysret
cmp
stos
lods
enter
jmp
or
enter
inc
or
push
cmp
and
and
fstpl
enter
push
mov
in
lahf
ljmp
ljmp
sti
or
lods
fsubl
and
mov
out
xchg
mov
popf
fadd
int
faddp
movsl
aaa
pop
test
mov
out
jne
xchg
xor
push
xchg
jnp
das
popa
xor
not
imull
push
cs
shrb
divb
lcall
mov
pop
lock
pop
fdivl
fsubrs
nop
test
adc
push
add
mov
lds
sarb
add
jle
daa
mov
scas
mov
jecxz
mov
ret
inc
stos
add
push
dec
push
iret
add
jge
xchg
mov
inc
add
inc
mov
jno
pop
adc
lods
lret
pop
fisttps
shl
sbbl
inc
shrl
cltd
aas
into
loope
daa
je
lahf
leave
int3
push
xchg
xchg
scas
mov
or
pop
lret
ret
mov
jno
push
ds
lret
mov
jle
rolb
sbb
rclb
inc
mov
jg
or
pop
add
push
mov
ffree
push
mov
mov
xor
adc
outsb
pop
jle
filds
mov
mov
sbb
addr16
imul
pusha
mov
cmp
in
cwtl
jmp
cli
movsl
add
daa
xor
arpl
addl
shr
xchg
sub
out
mov
cltd
xor
js
divl
ljmp
mov
movsl
push
fs
mov
cs
adc
je
stos
out
shlb
out
imul
les
inc
push
inc
or
xor
mov
mov
adc
mull
roll
les
insl
fisttps
dec
testl
and
jns
cmpsl
inc
in
sub
jg
xorl
loop
fisttpll
ds
dec
jmp
push
lods
adcb
dec
enter
adc
add
push
ja
jg
fdivp
sub
rclb
mov
mov
int3
xchg
lret
inc
pop
bound
push
pop
inc
scas
add
sub
mov
sub
fucomip
mov
or
xchg
mov
mov
mov
mov
or
or
stc
jo
push
jne
aas
jb
in
add
enter
cli
insl
daa
leave
xchg
cld
popl
adc
or
mov
or
inc
jl
insl
adcl
xchg
stos
cmc
leave
mov
push
dec
test
mov
mov
mov
push
xor
mov
or
hlt
adc
es
jg
xchg
push
addb
rcr
ret
sub
xchg
fidivrs
and
cs
out
cmp
mov
mov
cmpsl
aad
cmp
adc
sub
stos
imul
push
pop
add
mov
mov
out
and
int3
xchg
fisttpll
mov
je
xchg
push
pop
divb
xor
jns
scas
sub
cld
or
sahf
out
and
stos
jge
xor
movsl
inc
popf
lock
jb
mov
mov
xor
jmp
aam
stos
pusha
aas
jmp
enter
fldt
lds
mov
int3
mov
jge
and
mov
mov
mov
pop
scas
inc
pop
adc
jbe
bound
or
adc
pushf
pop
xchg
mov
jbe
popf
daa
dec
movsb
or
cmp
push
mov
dec
sbb
ficompl
inc
sub
neg
push
cmp
mov
add
mov
test
sub
jl
pop
cltd
push
push
push
pop
cmp
cmp
xor
cmp
dec
mov
movsl
jecxz
jno
ss
stc
pop
arpl
mov
rcll
stos
and
test
or
int3
mov
cmp
add
add
push
aam
cs
fistl
lea
aam
les
aad
sub
pop
push
adc
data16
scas
pusha
mov
hlt
xor
sub
ljmp
addr16
pop
jne
fstpl
jle
stc
cwtl
sahf
mov
cwtl
or
lods
pop
lcall
adc
fsubs
pop
cmp
sar
mov
sbb
sub
xor
lods
stos
mov
bound
lods
sahf
rcll
jecxz
push
aam
jbe
das
jb
dec
ljmp
mov
mov
or
adc
mov
sbb
push
lods
aaa
adc
dec
sbb
lahf
stos
add
mov
std
and
push
movsb
and
mov
xor
les
inc
add
push
leave
adc
sub
mov
cld
inc
xor
cmp
popa
jns
in
pop
insl
mov
outsl
sub
pop
pop
sbb
xor
ljmp
pop
ret
push
add
xchg
ficompl
cltd
inc
pop
add
mov
and
shll
icebp
jnp
jp
lahf
push
mov
js
movsl
cmc
ficompl
lods
ret
or
pop
push
ret
out
dec
mov
lcall
outsb
test
cmp
in
in
fcmovnu
repnz
jb
pop
fistpll
test
fisubl
xchg
fsubrl
jne
pop
loop
jb
and
xlat
pop
loop
repz
xchg
inc
fmull
xor
jae
fidivrs
cmc
jbe
cmp
or
out
stc
loop
add
mov
and
call
xchg
adc
dec
insb
mov
pushf
mov
imul
sbb
xlat
jp
jbe
scas
and
loopne
push
xor
xorl
testl
jl
add
psubq
lods
mov
pop
les
je
jae
cmpsl
mov
in
loop
stos
mov
xchg
out
dec
repz
ret
sbb
xor
sub
push
jle
jae
jbe
cli
cmp
mov
mov
cmpsb
push
rorb
inc
dec
nop
ja
xchg
cmp
in
sti
scas
jo
lods
mov
mov
mov
mov
add
inc
cs
add
add
xor
test
jno
mov
dec
mov
or
ficoml
jecxz
in
lds
xchg
pop
test
mov
and
test
mov
mov
stc
mov
pop
imul
call
inc
xchg
aad
nop
mov
cld
sbb
sub
mov
mov
out
leave
jae
insb
pop
jmp
adc
aad
lcall
jno
cmpsb
in
inc
pop
mov
fwait
dec
dec
jl
cmp
lahf
mov
std
dec
bndstx
cmp
scas
mov
pop
gs
pop
and
xchg
sub
int
mov
mov
dec
pop
in
xchg
icebp
lahf
xor
dec
xlat
scas
sub
dec
aas
nop
pop
adc
fs
push
mov
mov
xor
sub
fnstcw
push
xor
push
loop
js
test
fsubrp
push
mov
in
jnp
pop
adc
jl
ret
dec
das
pop
mov
repz
hlt
test
mov
mov
fldt
push
adc
repnz
les
ret
cs
jae
scas
pop
shl
lods
call
imul
pop
mov
sub
mov
mov
inc
mov
add
je
bound
pop
or
je
movsl
cmp
lret
fstl
fcomi
or
mov
sbb
lret
and
lock
fcoml
pop
mov
repz
nop
mov
pop
in
je
push
je
hlt
clc
mov
cmp
rolb
and
pushf
stos
repz
dec
adc
scas
sbb
adc
leave
outsb
sbb
aaa
mov
mov
outsb
add
push
xchg
inc
mov
fs
cmp
cmc
xchg
pop
loopne
popa
sbb
lods
ja
iret
adc
test
adc
push
add
push
cs
xchg
xor
mov
mov
jmp
and
clc
pop
cmp
in
inc
test
mov
mov
lcall
mov
xor
lods
lret
pop
or
push
xchg
aad
add
lds
popa
or
jo
loop
sub
pop
or
mov
sahf
fbld
sub
and
pop
jmp
cld
das
mov
push
dec
xchg
sub
jl
mov
xchg
pop
rolb
cld
mov
inc
aad
sbb
into
cwtl
ret
movsb
cltd
cmpsl
and
xchg
ds
sbb
pop
addl
inc
dec
pop
pop
loop
xchg
pop
jo
add
xchg
lods
cmc
adcb
ja
push
das
sub
xchg
inc
mov
and
mov
and
xchg
aad
pop
mov
sub
pop
mov
mov
add
sub
faddl
xlat
mov
push
mov
cmpsb
shll
stos
mov
sbb
sub
arpl
and
xchg
jge
xchg
pushf
aaa
lods
sbb
lods
sbb
iret
add
jb
add
std
out
adc
insb
inc
addl
pop
lods
jmp
movsl
sub
fisubrs
xor
push
faddl
xchg
adcl
mov
out
jnp
adc
int
sub
notb
es
lcall
add
cwtl
sbb
shl
pop
ljmp
mov
xlat
test
or
push
mov
repz
or
insb
fdivrl
ljmp
mov
fisubrl
inc
jnp
in
jge
sti
daa
xchg
cmp
dec
cmpsl
cmp
mov
pop
pop
fldenv
scas
stos
sub
and
sti
dec
jl
cltd
mov
enter
clc
cld
push
or
outsb
xchg
or
cmpsb
mov
mov
xchg
fdivr
stos
popf
rcr
jmp
lcall
sbb
jbe
xor
outsb
mov
add
push
fwait
add
xchg
jae
scas
ficoms
inc
adc
adc
push
mov
sub
pusha
pop
in
loop
ret
lret
movsl
pop
sarb
push
sbb
sbb
push
ljmp
shlb
dec
adc
mov
xor
xlat
push
jnp
cmp
push
aas
jl
or
sti
or
outsb
repz
sub
push
inc
push
mov
loopne
mov
sub
pushf
sti
je
repnz
cmp
sub
and
mov
jge
adc
shl
mov
ds
cmp
cmp
mov
push
push
sub
sbb
and
enter
imul
imul
cld
ficompl
or
push
or
nop
dec
xchg
fcompl
rorl
inc
aad
add
jg
rcl
mov
dec
adc
lret
fisubrl
dec
push
inc
sbb
pop
lea
pop
cmp
jg
les
mov
outsb
push
push
lcall
shld
pop
ja
pop
inc
addb
imull
push
stos
pop
or
out
mov
push
icebp
test
add
nop
xchg
or
pop
test
bound
cmp
pop
push
xor
rcll
ds
xchg
push
aad
mov
sub
stc
add
jle
test
mov
lret
xor
lret
sbb
mov
xor
sbb
loop
pop
sar
popf
mov
das
push
popa
aad
loopne
jns
mov
daa
adc
push
ja
pusha
ljmp
dec
pushf
out
xor
daa
push
mov
adc
loopne
pusha
jl
jp
mov
adc
mov
sbb
jb
in
pop
dec
sar
pop
loop
sub
dec
lods
inc
call
inc
mov
out
testl
sub
cmp
mov
ja
pop
push
push
pop
and
sbb
out
loope
test
enter
or
lret
push
cmpsb
push
push
lods
mov
or
adc
cmp
hlt
imull
inc
mov
push
pop
inc
pushf
xor
jle
adc
out
cltd
add
jne
rorl
mov
add
cmp
mov
test
icebp
inc
or
decb
lahf
cmc
cmp
fadds
adc
add
scas
idiv
sbbb
mov
sahf
fmul
movl
mov
pop
ljmp
fwait
rcll
sbb
or
inc
rcrb
je
mov
dec
lock
loop
mov
jecxz
std
loopne
adc
insl
arpl
mov
scas
mov
cwtl
add
pop
jmp
xchg
or
xor
add
xchg
pop
mov
movsb
xchg
stos
js
stos
sbb
jmp
in
dec
nop
add
push
or
cmp
mov
cs
cmc
loop
out
daa
inc
addl
push
dec
xchg
push
sub
inc
push
pop
popa
imul
fldt
insb
fstps
in
out
fs
test
mov
sbb
sbb
stc
adc
movsb
jp
cmp
xchg
shr
shll
xor
outsl
jecxz
push
stc
fstpt
call
cld
iret
pop
xchg
push
jb
cmp
push
or
lods
fimuls
mov
adc
fidivrs
mov
repz
xor
lods
inc
cmpsl
xchg
call
out
jmp
inc
or
loop
sahf
mov
test
adc
rcr
pop
outsb
loope
js
ds
in
dec
push
outsb
cmp
xchg
push
or
sahf
sub
or
out
push
dec
scas
ja
adc
mov
push
rcll
push
sbb
sub
fwait
dec
fwait
repz
push
mov
jne
insl
movsl
lds
xor
pop
mov
icebp
cltd
into
dec
and
rorb
repnz
jno
je
ds
mov
jecxz
scas
lods
adc
inc
cmp
mov
idivl
cld
loopne
addr16
and
clc
sub
lret
sbbb
cmp
sbb
pop
cmp
lds
xchg
out
in
cmp
mov
repnz
decl
or
ljmp
jmp
fisubl
test
xchg
jne
xchg
into
push
and
inc
adc
pop
pop
mov
inc
pop
jb
and
jecxz
jg
xchg
mov
out
fsubs
jno
cmp
push
xor
ss
cmp
into
cmp
shr
ror
daa
scas
dec
and
xlat
pop
outsl
rcpps
insb
arpl
imul
or
xor
inc
lods
jnp
adc
and
cmc
sub
mov
call
sbb
pop
jle
mov
data16
clc
or
pop
add
nop
ja
add
or
clc
pop
pop
push
leave
cli
or
inc
lcall
jne
jae
mov
aas
sbb
call
in
cmc
cmp
adc
out
int
daa
dec
clc
pop
xchg
mov
sbb
ret
pop
dec
cmc
in
push
sti
decb
jecxz
subl
clc
gs
fidivrl
pusha
sub
call
and
mov
and
fs
cmc
lds
cmp
std
sarl
mov
notl
cmp
jle
mov
and
mov
push
push
cmp
jl
cltd
pop
je
in
outsl
outsl
jnp
dec
leave
movsl
or
mov
dec
test
pop
or
daa
adc
mov
sti
jns
xlat
inc
dec
fnstenv
out
fstl
adc
lcall
mov
jo
dec
cwtl
cli
fcmovnbe
ficoms
lock
aad
or
pop
leave
jb
xchg
or
loope
or
or
js
and
fdivrl
or
in
ds
mov
inc
mov
repnz
dec
xchg
inc
aas
dec
test
mov
cltd
cmpsb
sbb
paddb
scas
pop
jecxz
scas
sti
into
dec
adc
je
ficomps
es
sub
sbb
push
jno
sbb
insb
and
mov
mull
push
mov
iret
out
dec
repz
aad
addr16
shlb
je
xchg
mov
cwtl
jp
div
imul
data16
cmpsb
mov
andl
shl
mov
sub
cld
mov
cltd
adc
popa
orb
pushf
cmp
out
adc
jne
push
jns
mov
mov
adc
pop
and
dec
mov
sbb
in
adc
mov
add
aad
mov
popa
push
hlt
loope
mov
xor
push
arpl
cmp
inc
jge
jns
mov
movsb
mov
popa
mov
mov
cli
add
les
pop
jb
mov
cmp
xchg
scas
dec
jmp
add
sbb
lods
movsb
mov
dec
cmpps
stc
mov
mov
push
dec
xor
ds
cmp
ja
cmpsb
adc
pop
lret
out
and
add
mov
push
sub
outsb
mov
push
aam
jb
jno
add
rol
pop
xchg
mov
pop
pop
shlb
fisubs
andl
sbb
insb
jg
test
or
dec
lods
adc
repnz
xchg
xchg
mov
int3
lret
fistps
test
and
popa
pavgb
or
jecxz
movsl
push
sub
repnz
cltd
pushf
mov
xor
sub
add
es
movsl
mov
dec
push
stc
scas
jmp
insb
xor
jl
cmp
jo
loope
scas
mov
movsl
jb
jae
ror
pop
pop
hlt
insl
dec
pop
cmp
xchg
sbb
cmp
addl
sub
mov
and
stc
testl
dec
pop
jne
add
or
adc
ret
data16
gs
jnp
bound
scas
hlt
std
adc
push
push
xor
inc
aas
into
out
cmp
loope
sbbb
or
negb
imul
pop
mov
adc
cli
mov
pop
jmp
lcall
inc
mov
push
fcmovnb
dec
cwtl
insl
lret
fcmovne
insb
fdivl
movsb
out
fimuls
dec
ret
add
arpl
andb
scas
mov
push
lock
mov
push
imul
fwait
repnz
jo
addr16
or
mov
jo
cmp
jl
daa
push
mov
lret
test
jge
sahf
dec
sti
enter
jae
fs
or
jmp
iret
mov
or
cmp
lods
jl
pushf
stc
in
cli
jne
jbe
negl
outsl
mov
fimull
repnz
popf
cli
pop
cmp
rorl
push
in
add
mov
lea
pop
ljmp
cmp
lret
pop
mov
icebp
in
mov
mov
ret
orl
int
into
fisubs
push
cli
fcomps
mov
ret
lea
add
sbb
je
aas
pop
sbb
inc
dec
lock
nop
add
or
mov
inc
jg
int
xor
mov
jo
xchg
adc
fcmovb
in
test
dec
int
inc
add
mov
std
fcomi
ljmp
push
cmp
into
mov
idiv
jg
decb
mov
and
in
imul
dec
movl
push
and
mov
aam
cmpb
mov
mov
and
add
flds
in
xor
lods
test
mov
or
cltd
std
fbld
shl
sub
je
and
push
add
ja
mov
in
push
lods
jge
gs
loope
and
fs
jle
out
or
shlb
adc
pop
push
push
xor
pop
lcall
xchg
scas
orl
loope
xchg
mov
mov
sbb
xor
sarb
adc
in
aam
mov
sti
push
adc
sahf
out
insl
gs
jo
pop
mov
add
shl
stc
push
mov
pop
pop
inc
sbbl
xchg
jbe
mov
test
ss
cwtl
int3
xchg
outsl
mov
xor
xchg
push
push
mov
icebp
pop
test
add
push
pop
loop
outsb
bound
lahf
mov
pop
cmpsb
or
add
aam
jg
adc
out
popa
mov
aad
popa
iret
pop
or
scas
movsl
popa
fwait
fwait
jns
xchg
xchg
movsb
testb
cli
sbbl
lret
fldcw
out
dec
inc
mov
dec
stos
adc
sub
aad
in
jnp
cmp
add
cmpl
pop
mov
dec
inc
and
rcll
sbb
mov
mov
jge
pop
addl
inc
dec
sub
add
repz
orb
jle
xchg
or
or
popf
sahf
adc
pop
and
arpl
or
or
mov
add
ret
and
mov
xchg
push
cmp
ror
add
xchg
aad
inc
or
lea
out
leave
rcrb
aaa
stos
inc
push
jmp
mov
shrb
rcrb
int
cmp
and
mov
and
popa
aaa
add
mov
adc
cli
or
aad
dec
mov
test
mov
sti
fwait
not
push
pop
icebp
adc
ffreep
mov
dec
adc
cli
pop
decl
jb
mov
int3
xlat
pop
cwtl
lea
test
mov
icebp
out
jg
icebp
add
mov
lahf
loope
outsb
cmc
mov
cmc
xorl
cmpsl
movsl
mov
in
push
mov
gs
mov
dec
adc
out
add
pushf
mov
or
das
inc
mov
push
cwtl
inc
int3
outsl
cli
stos
or
pushf
in
mov
dec
push
dec
sbb
fabs
cli
cmp
jnp
cld
push
sti
loop
sti
and
jl
inc
push
pop
mov
inc
cmp
mov
lcall
std
pop
cs
in
ficoms
leave
mov
jno
insl
or
add
and
mov
sub
or
out
push
mov
hlt
and
cmp
cmpsl
sbb
mov
idivb
add
mov
pop
pop
mov
out
lret
movsb
outsb
sub
in
ss
ds
mov
xor
lock
ljmp
mov
inc
sub
insb
sbb
mov
ret
or
push
jbe
loop
inc
lods
movsb
into
inc
sahf
ljmp
movsb
adc
jb
sub
jae
or
sarb
cmp
loope
dec
addr16
mov
das
test
sub
push
jecxz
sub
shrb
jg
sbb
fiaddl
fistps
add
in
imul
adc
test
push
and
mov
daa
and
lods
fisttpl
or
call
xchg
inc
jns
cmp
loope
and
xor
cwtl
push
sbb
stos
lea
shll
cmpsl
jmp
fadds
jl
jecxz
pusha
mov
xor
int3
test
loope
call
jns
or
cmpsl
mov
shlb
mov
dec
in
imull
mov
sarb
pop
and
jns
or
imul
loop
lret
and
xchg
xchg
cli
in
pop
test
outsb
sbb
nop
dec
aad
mov
fidivs
fldl
movsb
lcall
addb
mov
test
jg
rcrb
mov
inc
mov
jecxz
pop
mov
mov
xchg
mov
xchg
jle
ljmp
sub
out
lods
mov
pop
sub
std
xchg
add
push
shufps
cltd
mov
dec
add
dec
xchg
sbb
call
out
pop
xor
les
cwtl
sub
js
dec
push
push
stos
xor
jns
orb
insb
je
hlt
and
push
cli
xchg
idivl
or
repnz
inc
sub
jmp
mov
inc
stos
sti
mov
mov
xchg
js
mov
mov
std
xor
hlt
dec
or
cwtl
popa
dec
push
jge
aad
setge
into
push
pop
add
xlat
mov
pop
add
rorl
and
in
ss
rcrl
test
fsubl
mov
or
adc
inc
jle
fdivr
aam
adc
scas
add
popa
leave
cmpl
hlt
in
add
lret
push
mov
mov
ljmp
into
aas
sub
gs
outsl
or
push
jne
lcall
das
mov
inc
stc
push
clc
mov
cmp
mov
jo
jbe
test
push
lock
aam
dec
pop
and
loop
mov
jno
cmp
pop
pop
sbb
and
aam
fisttps
lahf
add
sbb
das
push
pushl
sub
jl
mov
lret
enter
stos
mov
movsb
rclb
sub
push
pop
movsb
movsl
sti
scas
adc
imul
leave
repnz
xchg
ljmp
in
jmp
pop
sub
mov
data16
jl
fadds
out
add
xchg
inc
shrl
pop
cmpl
in
in
mov
loope
mov
jp
jl
mov
jnp
loope
xor
jmp
and
icebp
mov
lea
mov
lock
fiadds
sarb
lahf
data16
sub
pop
cmc
shl
int3
sbb
adc
adc
insb
subb
lock
call
or
jecxz
xchg
pop
cmpsl
das
mov
loope
lods
xor
or
int
jp
xlat
cwtl
inc
adc
icebp
aam
icebp
cmp
cmp
std
push
loop
jns
movsl
jg
mov
lret
inc
xchg
pop
addr16
cmp
loope
xchg
ret
pop
std
jmp
rcr
inc
xchg
xor
stos
ja
pop
or
pop
ja
in
loopne
stos
filds
lea
popa
sub
sub
mov
inc
lret
js
sbb
jns
push
insb
dec
aam
mov
pop
sahf
sbb
lcall
adc
dec
mov
rcll
pop
movsl
jle
jbe
pop
pushl
divb
push
lret
insl
out
or
push
test
add
dec
sbb
mov
insl
mov
adc
push
jo
ss
inc
shll
cmpsb
aad
pop
hlt
dec
insl
lds
stos
lret
fcomi
pop
xor
jns
xor
inc
jmp
push
mov
das
loopne
movsb
mov
dec
pusha
mov
leave
push
in
pop
cmc
pop
pop
into
aad
lods
aas
inc
test
out
pop
adc
adc
xorl
enter
xchg
inc
inc
mov
cltd
movsl
daa
dec
bound
test
stc
mov
popf
push
int3
adc
inc
xor
es
mov
scas
xor
fsub
out
inc
add
adc
xchg
enter
das
notl
movsb
xchg
cmp
rorb
lahf
stos
cmp
ds
sbb
and
dec
gs
lds
cmpsb
imul
jnp
shlb
data16
outsl
and
test
mov
cmp
in
into
ret
int3
iret
and
cld
mov
jmp
fbstp
imul
push
das
add
jg
push
das
sub
xchg
pusha
jmp
mov
and
and
lret
movsb
cmpsl
mov
cmpsb
das
in
daa
pop
push
jp
sub
and
mov
fdivl
shll
sbb
pusha
push
adc
dec
sbb
pop
cltd
sub
aas
dec
repz
mov
mov
fisttpl
in
addr16
mov
lods
les
inc
push
popf
ss
repz
dec
jae
pop
mov
adc
mov
lock
int
mov
add
and
repz
push
add
sbb
jl
pop
ss
adc
data16
xlat
xlat
fldenv
popa
push
push
adc
push
xlat
mov
arpl
xchg
les
cmp
push
inc
inc
mov
aas
fstl
fistpl
or
push
and
xor
rorl
mov
add
or
mov
clc
dec
lret
insl
pop
sti
push
add
mov
scas
push
jge
cwtl
push
dec
in
mov
pop
pusha
mov
ret
mov
sbb
aas
add
in
or
and
data16
int3
stos
ss
push
xor
adc
inc
lods
insl
aam
jle
and
adc
and
cmp
popf
or
scas
int3
pusha
inc
and
cmp
push
mov
stc
das
add
int3
in
es
jl
sbb
test
lret
test
push
in
lea
xor
mov
es
mov
cmpsb
fstpl
and
xchg
sarb
mov
xor
insl
loope
pop
sbb
fs
mov
push
add
jo
jne
std
push
lahf
add
test
mov
popa
pop
push
fdivp
push
data16
jmp
mov
sub
repz
addb
rcrl
ljmp
repz
jo
sarl
pop
push
daa
sbb
pop
xchg
xchg
jne
or
dec
xchg
fsubrl
int
in
int3
xchg
stc
pop
mov
mov
in
jbe
test
push
insl
clc
pop
mov
inc
movsb
fiadds
shlb
inc
xchg
repz
fcoms
pop
inc
push
in
add
pop
ret
adc
rcrl
push
test
mov
mov
adc
and
dec
mov
cmp
sub
sub
mov
or
mov
push
pushf
pushf
lods
subl
nop
call
les
mov
mov
xchg
dec
imul
pop
ret
dec
ja
jle
lds
aaa
pop
jp
jge
xor
test
je
push
or
imul
mov
bound
mov
std
out
pop
lret
in
gs
sbb
popa
ret
loop
lret
push
lret
xorb
or
stc
dec
inc
clc
add
aam
pop
and
pop
movsb
pop
mov
into
dec
push
scas
in
jno
ds
ja
cmp
push
mov
test
pop
ja
xchg
adc
shlb
mov
add
push
outsl
lock
cld
or
and
pop
in
out
inc
stc
mov
jle
mov
dec
ret
icebp
fmull
push
jge
cwtl
jns
and
test
addr16
in
mov
inc
fnstsw
insb
movsb
roll
js
out
cmc
iret
imul
cmp
push
cld
dec
dec
orl
cmc
insb
jbe
sbb
cmovge
add
xchg
jle
dec
ds
push
jno
and
out
mov
cld
xchg
jmp
dec
push
rcl
sahf
cltd
jnp
sub
xchg
pusha
pusha
test
insl
inc
xor
rclb
mov
cmp
dec
icebp
and
dec
in
xor
sar
fildl
cmp
int
shrb
mov
pushl
lcall
fsts
sbb
mov
or
lods
mov
repz
out
or
test
mov
push
int3
jmp
and
inc
xchg
aas
rclb
dec
stos
sahf
mov
incb
mov
shl
mov
jne
xchg
enter
ss
out
xor
adc
adc
stos
jne
fisubrl
jg
mov
mov
lret
mov
push
push
inc
and
fcomp
pop
and
dec
out
mov
mov
push
sbb
inc
add
std
and
imul
adc
push
push
lds
andl
jns
jmp
cwtl
adc
add
stos
xor
les
mov
lret
pop
jne
add
ret
pop
ljmp
add
data16
pop
insl
lock
testb
cmpsl
dec
cli
jo
sub
in
mov
test
fucomi
movsl
xchg
jmp
adc
pop
mov
stc
in
out
mov
cld
lods
dec
and
pop
xchg
mov
iret
test
mov
leave
push
pop
mov
scas
inc
addb
mov
adc
dec
sub
les
out
push
push
dec
hlt
lea
cmp
rcll
test
adc
icebp
outsb
dec
ds
inc
cltd
ljmp
push
fsubs
mov
stc
adc
sbb
push
rorl
xchg
lret
xchg
scas
out
fiaddl
mov
add
test
or
movsl
jp
out
pop
xor
dec
das
pop
movsb
push
mov
fs
incl
imul
stos
inc
xchg
dec
andl
or
inc
jae
ds
jnp
cli
cmp
nop
mov
enter
aaa
or
das
addr16
mov
insb
sarb
dec
js
imul
mov
xchg
add
pop
adc
xchg
fs
push
mov
mov
fbld
push
out
clc
call
in
add
aad
mov
or
dec
add
je
mov
push
mov
test
mov
cmp
push
call
leave
sbb
inc
fxch
or
in
movsl
mov
pop
sub
cmpsb
xchg
cmovbe
push
pop
sub
and
jbe
xchg
and
xchg
inc
sbb
call
push
sub
xor
xor
in
cmp
mov
nop
les
add
jle
xchg
scas
or
stos
lcall
sarb
sbb
mov
mov
addr16
sub
jecxz
and
lcall
cs
sbb
and
inc
ret
fucom
push
notb
std
popf
sbb
fistpl
lock
mov
mov
push
mov
mov
dec
shlb
cmp
push
adc
jbe
sub
inc
ja
mov
subb
and
outsl
mov
les
cld
call
jne
pusha
bound
pusha
sub
inc
idiv
fmul
test
mov
aam
ljmp
sub
inc
lahf
lea
loopne
pop
cli
ret
adc
stos
xchg
cmpsb
mov
lcall
imul
sbb
xor
cltd
popa
jecxz
jns
aam
vpshaw
stos
fisubrl
out
jo
push
mov
xchg
dec
cmc
sub
or
jle
inc
add
lret
mov
pop
mov
push
negl
xchg
or
mov
or
dec
int3
mov
cmpsl
push
xor
jp
icebp
jge
jnp
inc
dec
dec
jecxz
nop
lcall
jge
xchg
lods
test
pusha
cmp
push
in
xor
xchg
add
adc
mov
int
jmp
daa
testb
outsb
out
cmp
mov
pop
or
shll
out
shll
mov
and
sbb
add
mov
inc
sub
out
mov
xchg
xchg
sarb
jbe
leave
aas
jle
es
int3
xlat
out
jbe
push
arpl
movsb
ljmp
xor
aas
push
and
cmp
stos
loop
sar
xchg
cmpsb
das
insb
inc
into
ljmp
mov
jbe
xor
mov
or
jnp
mov
add
gs
aas
and
adc
push
cmp
sbb
xchg
push
mov
stos
shlb
mov
dec
dec
jns
mov
fists
mov
fs
ficompl
cmpsb
mov
std
test
mov
out
shrb
mov
or
jb
mov
outsb
sub
aam
mov
lods
mov
cltd
daa
repz
je
jmp
xor
test
jecxz
ret
int3
inc
ds
in
into
stos
add
mov
xchg
data16
lret
lock
push
lret
rol
mov
data16
xor
pop
addr16
adc
inc
pop
xor
std
hlt
inc
cmpsb
pop
daa
xchg
div
push
mov
pop
rcrb
mov
popa
jge
and
and
popf
xor
xchg
lock
data16
adc
mull
movsb
xchg
dec
imul
sbb
xor
lcall
cmp
insl
push
mov
incl
stos
mov
lret
test
ret
pop
or
popf
jle
inc
mov
test
rolb
mov
rorl
dec
scas
mov
sbb
dec
mov
mov
sti
leave
and
test
jnp
sub
mov
jmp
xor
add
aam
mov
insl
call
pop
inc
pop
mov
push
popa
pusha
nop
xor
pop
dec
inc
xor
cmp
negb
adc
orb
incl
call
pop
movsl
mov
dec
in
in
cwtl
adc
mov
inc
mov
xor
pop
test
scas
cltd
push
or
cmp
xchg
mov
pop
out
incl
dec
les
add
cmp
sub
lods
subb
push
test
or
aad
iret
scas
daa
sub
mov
insl
das
sbb
pop
lods
out
lods
out
subb
rclb
cmp
adc
or
xchg
pop
cli
push
add
adc
push
jp
and
adc
mov
xor
nop
or
roll
xchg
je
fiaddl
ret
xlat
cmp
cmp
pop
call
ds
jns
int
pop
sbb
xor
js
mov
dec
jo
imul
push
pop
adc
cwtl
dec
andnps
in
pop
jle
push
popa
aad
popa
inc
pop
sub
push
and
jecxz
xchg
sbb
adc
scas
cmp
or
lcall
mov
ds
cmpsl
push
test
cmp
push
and
sbb
sbb
cmc
sub
std
jo
ret
push
aad
and
popf
cwtl
popf
mov
cmc
out
rcrb
xchg
ficomps
pop
nop
or
jo
fwait
ds
add
or
pop
hlt
pop
dec
imul
push
divl
push
mov
jae
mov
lods
repz
xchg
push
cmc
test
xor
popa
mov
ret
mov
adc
ja
add
test
imul
push
popa
sbb
push
bound
mov
outsl
ss
fs
dec
cmpsb
andl
xor
icebp
mov
inc
inc
adc
pushf
push
push
push
jne
jg
pusha
outsl
sahf
pop
and
inc
or
out
adc
cmp
nop
int3
adc
repnz
cmp
je
and
ret
lea
push
decl
aam
push
popa
adc
jmp
mov
or
aas
pop
and
js
xor
and
data16
xor
sarb
outsb
out
lret
data16
jne
mov
adc
lds
cli
and
add
jle
cmp
data16
das
imul
movl
cwtl
and
mov
jb
ficomps
push
cwtl
mov
and
dec
icebp
lods
push
repnz
or
adc
shll
subl
push
jecxz
lahf
add
mov
mov
ljmp
loop
lods
into
push
jge
push
repnz
loopne
sub
inc
adc
ja
xor
loop
xchg
and
fadd
add
cmp
mov
pop
aaa
inc
adc
push
mov
or
shr
test
bound
cmp
xor
pop
addr16
xlat
jne
push
add
test
mov
fistpl
push
xor
sbb
mov
or
in
xor
lock
arpl
mov
sbb
sub
push
into
push
dec
mov
sahf
mov
xor
lcall
pushf
out
es
bound
out
jl
test
xor
adc
mov
test
jg
shrb
jle
cmp
adc
outsb
cmc
mov
ja
imul
mov
adc
lods
xorl
push
sub
mov
xorb
insl
stc
push
mov
add
std
out
jmp
sub
addr16
jle
cmp
cmpsb
sbb
inc
mov
int3
cltd
daa
mov
jge
sub
lock
loop
fwait
push
mov
insb
enter
push
ret
inc
add
mov
jns
jnp
mov
rcrb
adc
das
push
add
fbstp
or
adc
lock
mov
in
or
jbe
pop
cmp
jnp
mov
or
mov
sub
subl
sub
xor
fldl
insb
popa
inc
sti
fistps
std
xor
cmp
xchg
inc
pop
mov
jo
push
add
mov
lds
or
cmp
out
jno
leave
cmp
loopne
cmp
inc
mov
cli
fidivs
lret
addb
mov
mov
push
sbb
sahf
popa
cltd
mov
pushf
dec
cmp
jle
popf
pusha
pop
inc
jg
stos
popf
xchg
sub
push
flds
cmp
test
sbb
mov
es
ja
pop
jmp
add
bound
or
mov
sub
mov
lahf
jno
test
cmc
nop
push
xchg
cld
stc
cmp
jbe
and
cmp
cmp
or
cmp
repz
loopne
inc
repz
rclb
sub
mov
rorb
inc
sub
daa
in
push
push
sub
aad
pop
inc
push
add
sbb
pushf
dec
rcl
jno
aaa
xor
stos
mov
mov
test
xchg
xor
mov
mov
jecxz
dec
in
xchg
insb
cwtl
ds
mov
mov
icebp
daa
and
ret
adc
shlb
add
cmpsb
cmp
sbb
lahf
sbb
lcall
jne
js
sar
fdivl
hlt
bound
xchg
test
pop
mov
pop
out
push
jl
lods
xchg
lahf
sbb
dec
int
into
and
jnp
movsl
mov
push
into
mul
fwait
and
xchg
mov
rorb
fbstp
mov
loope
daa
and
loopne
lret
lods
pop
mov
sub
mov
cmc
and
dec
push
inc
data16
sub
in
into
push
sub
xchg
repz
push
lods
sbb
clc
aad
insb
cs
repz
xor
mov
xchg
dec
fwait
jmp
in
lods
adc
lods
test
xchg
outsl
jg
pop
xchg
and
out
dec
mov
dec
jle
push
pop
or
sbb
jae
ret
gs
hlt
push
jecxz
inc
mov
push
fsubl
mov
mov
dec
fwait
rorb
add
out
xchg
xchg
in
lret
cmpsb
add
lcall
mov
pop
loope
jno
rcr
push
ljmp
xor
addl
jg
push
testb
mov
sub
cmpsb
mov
xchg
mov
out
data16
mov
mov
sbb
inc
xchg
mov
push
adc
mov
testb
fcoml
fcmove
lds
sbb
xchg
push
clc
ret
jne
or
es
dec
xchg
hlt
in
in
mov
inc
inc
addr16
int
loope
pop
mov
add
fildll
ret
jbe
pop
mov
add
imul
push
and
xchg
dec
push
jmp
xor
daa
stc
mov
sbb
mov
popa
enter
cmp
lret
sub
into
and
pop
mov
jo
add
adc
je
cltd
mov
fbld
imul
ja
mov
adc
xchg
and
sbb
adc
pop
in
mov
test
in
ss
loop
push
xor
aas
or
imul
and
push
gs
aaa
mov
mov
loope
lock
mov
pusha
pop
xchg
cli
dec
mov
push
jae,pt
sahf
daa
enter
lcall
mov
loop
cmc
into
sbb
shr
inc
xchg
xor
negb
es
mov
jp
push
int
mov
inc
mov
sbb
sub
out
stos
dec
pop
int3
xchg
pushf
xor
dec
ror
movsl
xchg
mul
popf
lods
push
xor
int3
and
pusha
stos
dec
cmp
adc
jp
mov
repz
xor
nop
aad
pop
inc
femms
sbb
pop
lock
fs
subb
cmpsb
xchg
dec
mov
sahf
movsb
xchg
lret
gs
in
out
addr16
pushw
out
inc
mov
dec
push
xlat
mov
lock
adc
and
popf
aaa
or
inc
xor
sub
sbb
outsl
xor
pop
and
hlt
fcomps
or
aas
inc
in
mul
pop
ret
adc
jns
dec
adcl
shrb
mov
aas
mov
sbbl
sbb
mov
pop
add
in
popf
icebp
das
jp,pn
scas
scas
popf
cmp
mov
mov
pop
inc
dec
sub
and
pop
pop
or
add
pusha
lcall
add
mov
sbb
mov
sub
pop
pop
rorl
jle
lods
and
pop
add
mov
push
sub
out
sub
mov
mov
add
push
adc
cli
dec
jl
idiv
xor
cli
pop
xchg
sbb
sahf
sbb
sbb
or
call
cmpsl
ljmp
inc
stc
and
loope
cltd
ja
or
aad
mov
add
ret
cltd
ret
dec
scas
mov
cltd
test
xchg
aaa
cltd
sbb
ja
int3
jae
into
stos
push
lock
jg
mov
pop
divl
enter
jp
jae
stc
js
xor
sbb
cmc
popf
insb
inc
sbb
test
pop
xor
js
les
pop
pop
sbb
fisubrl
ret
stc
jae
xchg
insb
adc
ja
add
adc
loop
mov
int
xor
push
dec
lock
add
and
pop
mov
rcll
xchg
xchg
push
icebp
cld
call
pop
pop
jmp
pop
in
jne
stos
sub
push
sub
xor
div
xchg
pop
das
testl
cmp
test
ss
xchg
repnz
fmull
test
add
push
xchg
xchg
into
inc
sbb
push
mov
es
push
push
or
cmp
das
or
fimuls
push
subb
inc
push
jb
add
cwtl
jmp
loop
sbb
push
add
hlt
enter
pop
call
aad
popa
out
or
pop
outsb
stos
ljmp
and
sarb
xor
jne
push
xor
mov
jle
leave
cmpsl
lods
mov
mov
iret
mov
jecxz
inc
ret
push
fstl
mov
mov
lods
push
mov
mov
push
negl
jns
js
test
xchg
sti
mov
movsb
lret
push
mov
loop
pop
or
mov
sbb
and
mov
enter
mov
xor
dec
xor
xchg
sub
sbb
rorl
fldenv
je
data16
xchg
imul
lods
jl
push
cmp
stc
jl
bound
lahf
and
test
aas
out
dec
and
dec
pop
mov
call
fcmovnb
addr16
cltd
jl
fistl
pop
xchg
pop
xchg
test
inc
lcall
or
inc
inc
sbb
and
lea
jmp
sahf
xor
sbb
fnstcw
xor
add
testb
aaa
dec
xor
movsl
cmp
push
push
ds
mov
fimuls
and
push
mov
fidivl
lret
adc
int
mov
aaa
call
fs
dec
insb
dec
cmp
xchg
sub
mov
into
ss
cmp
cvtps2pd
push
loope
or
clc
lods
mov
pop
outsb
clc
sub
pop
xchg
nop
jg
mov
sbb
loope
push
adc
jmp
mov
cmp
je
mov
out
das
imul
mov
repz
sbb
lahf
dec
jns
pushl
or
idivb
ljmp
cmp
cwtl
stos
pop
mov
or
fadds
jp
push
xchg
rorb
add
xor
push
jbe
sub
xchg
xor
cltd
inc
je
test
dec
ret
or
adc
push
shll
inc
stc
mov
lods
xchg
push
loopne
cmp
jbe
movsb
fstpt
aad
pop
pushf
mov
rclb
jp
orb
in
cmc
mov
jnp
clc
ljmp
ret
das
push
aad
cmp
cmovb
cld
out
pop
loopne
or
aas
lahf
pop
imul
xchg
aaa
rcll
sbb
pusha
aas
cli
cmp
lcall
jno
fisttpll
or
popa
aad
push
sarl
jne
xchg
push
rclb
loope
lds
pop
inc
push
cmpsb
pop
add
push
sub
fmul
cmp
pop
and
inc
jmp
mov
sub
mov
pop
xchg
lea
jae
jb
setg
lods
jnp
sub
lea
mov
cld
and
inc
data16
push
pusha
scas
rcrl
jmp
push
sbb
cli
call
jle
test
cltd
inc
or
sub
inc
mov
mov
and
pop
sub
outsl
and
pop
inc
add
mov
mov
dec
dec
dec
pusha
and
cld
fwait
jp
iret
clc
xor
insl
adc
mov
inc
fisubrl
pop
inc
loope
fwait
cmp
subb
test
xlat
xchg
aaa
test
sahf
inc
je
sub
mov
inc
push
iret
fsts
sbbl
test
fiadds
mov
push
add
inc
adc
or
jnp
lods
adcb
orb
loopne
mov
outsb
out
divl
pop
mov
jne
sbbb
jnp
adcb
ljmp
mov
sbbb
xchg
push
int3
sbb
inc
push
cmp
addr16
shlb
adc
xor
mov
leave
adc
jmp
pop
shll
mov
or
leave
dec
inc
mov
inc
or
dec
adc
add
mov
push
repnz
inc
and
shrl
lock
xor
aaa
pop
jp
leave
int3
jg
popf
es
and
sub
shlb
stos
cmc
in
cmp
pop
femms
pop
mov
imul
mov
insl
rorl
sbb
std
adc
repnz
out
push
data16
sbb
cwtl
clc
inc
fists
pop
push
dec
into
ret
in
xchg
and
cmp
pop
std
cmpsl
push
daa
pushf
xchg
call
outsl
or
mov
push
push
ljmp
outsl
in
xchg
pushf
jecxz
lret
adc
je
hlt
cmp
mov
xor
sbb
cld
dec
xchg
loopne,pn
xchg
fsts
sub
out
dec
mov
inc
sub
lods
movsl
imul
or
sbb
icebp
pop
std
sar
pop
imul
xor
out
or
jge
fs
ljmp
sub
mov
repz
push
add
leave
mov
mov
push
icebp
pop
mov
push
push
jp
rcrb
xor
sub
clc
adc
lret
rorl
push
lea
imul
push
mov
pop
mov
loop
push
negl
in
out
mov
xchg
xor
lahf
pop
xchg
in
pop
outsl
mov
cmc
xlat
lea
pop
in
cs
mov
fcmovbe
fucomi
test
add
mov
call
decl
inc
sub
jmp
push
sub
pusha
adc
rcrb
mov
xchg
push
popf
cmpsl
push
or
adc
cmpsl
pop
push
cmp
xchg
sbb
cld
repnz
push
xchg
pop
int
pop
push
out
or
stos
arpl
sub
imul
insl
and
pop
aas
jb
push
xor
xchg
pop
mov
lock
jle
push
mov
push
notrack
push
scas
rcll
xchg
mov
loop
jp
cmp
adc
cltd
pop
cmc
cmp
insb
lea
push
jo
dec
test
sbbl
insl
repz
shlb
mov
mov
push
shl
nop
lret
int3
je
adc
mov
and
pop
add
test
sarl
push
cmp
mov
sub
stos
push
lods
mulb
std
jns
mov
ret
cwtl
xor
dec
sub
inc
add
sbb
jnp
inc
cli
sub
daa
lcall
icebp
movsb
mov
cmp
jp
icebp
xchg
mov
lahf
sarb
jo
jne
pop
leave
cmp
imul
pop
mov
sub
xor
jecxz
sbb
xchg
sahf
jno
or
mov
push
push
inc
imul
lods
pop
insl
pop
push
lods
lret
shrl
mov
dec
sub
aas
aad
ss
repz
push
outsl
sbb
outsb
dec
rcll
mov
cmp
cmp
outsl
rcll
shrb
daa
into
cmp
and
hlt
add
shr
pop
mov
sub
pop
daa
test
into
jns
lcall
leave
shrl
lock
cmc
lods
mov
cmpsl
jb
jae
lcall
cmp
clc
pop
imul
shr
mov
addr16
dec
icebp
in
push
hlt
jmp
push
icebp
dec
inc
inc
sub
jae
mov
xlat
cltd
int
pop
je
loope
imul
sbb
ret
xchg
pop
mov
cmp
jnp
in
inc
cmpsl
xchg
xchg
cwtl
mov
stc
fstl
cs
mov
insl
iret
dec
xchg
and
fdivrp
adc
aam
push
add
mov
sbb
jne
and
enter
xchg
into
enter
or
lahf
rep
pop
adc
mov
mov
out
xchg
jecxz
xchg
xlat
xchg
add
icebp
xchg
add
das
pop
mov
dec
je
cltd
jecxz
pusha
jne
sbb
mov
cs
sub
jnp
inc
sbb
je
hlt
lds
jb
addb
add
in
xor
push
repnz
pop
out
dec
sbb
sub
stc
cmpsl
or
adc
mov
lcall
pop
mov
mov
and
ja
imul
movq
fistpll
test
fdecstp
sub
hlt
jnp
push
sbb
mov
add
jo
and
movsb
sub
pusha
popf
xchg
rcrl
push
pop
lods
aam
jae
xchg
push
add
inc
insb
ret
pop
insl
pop
loopne
fstpt
jl
dec
imul
mov
fisubrl
in
enter
mov
stos
cmc
cmp
lea
push
adcb
inc
mov
push
mov
gs
dec
mov
adc
mov
sahf
jg
shlb
loopne
iret
imul
dec
fisubrs
pop
cwtl
xor
stc
xor
inc
jl
dec
lods
movsl
loopne
mov
pop
dec
jnp
mov
and
hlt
leave
fiadds
jne
dec
sysret
adc
popf
imull
sub
ret
loop
jae
test
fsubr
xchg
push
pushl
ds
pop
addr16
inc
dec
fimull
jge
and
testb
outsl
jae
xchg
daa
adc
popf
jnp
cmpsl
iret
jg
popf
jecxz
loop
adc
and
cmovge
int
and
pop
push
sbb
sarb
dec
out
rorb
jb
mov
insl
outsl
and
stos
ja
or
jmp
mov
add
push
outsl
jne
imulb
daa
and
lds
and
dec
movsb
jmp
pusha
pop
push
pusha
imul
jnp
add
and
xchg
jbe
push
lock
lahf
out
fst
out
frstor
test
and
pusha
inc
jmp
pop
xor
fcom
sbb
nop
js
and
neg
mov
repnz
test
xor
sbb
rcr
xchg
repnz
cli
shll
mov
popf
push
mov
sti
lret
scas
inc
icebp
adc
mov
sbb
out
in
push
xor
sbb
push
loopne
ljmp
fidivrs
shll
jp
xchg
jnp
lret
shr
fwait
movsl
mov
adc
push
rcr
mov
jbe
daa
inc
fs
cs
or
test
lcall
hlt
mov
fisubl
xor
pusha
mov
dec
cld
out
inc
inc
cltd
ja
jmp
adc
xor
repnz
add
sbb
push
inc
lds
cld
mov
lret
lods
shrb
aas
insl
rcrb
arpl
pop
test
mov
adc
je
nop
pop
int3
call
mov
ret
mov
inc
shll
or
inc
pushf
add
iret
mov
stos
daa
aam
or
sbb
inc
inc
addr16
leave
dec
icebp
adc
sub
movsl
xor
clc
out
pop
sbb
add
xchg
outsb
mov
imul
in
ds
mov
sub
mov
sbb
lods
push
mov
sub
flds
xor
sbb
aad
dec
int
mov
aaa
sub
xchg
lock
loop
add
cmc
or
insl
test
lret
adc
fcoml
cmp
daa
cmpsb
fwait
fs
fstpt
adc
nop
sbb
jp
insl
sbb
and
in
notl
mov
jb
test
cmc
loop
lods
cld
fnstsw
cmc
aas
sbb
arpl
pop
inc
adc
pop
pushf
ds
mov
push
add
aaa
gs
clc
fnstenv
sub
cmp
pop
pop
enter
rcrl
int3
or
and
adc
and
push
outsb
add
dec
ljmp
sbb
iret
xchg
nop
aaa
xor
out
test
test
hlt
push
daa
sbb
sub
mov
repnz
int3
mov
repnz
insb
cmp
pop
xchg
je
sbb
inc
hlt
jno
dec
mov
cld
dec
cmp
push
pop
pop
pop
mov
shlb
pop
sarl
testb
lcall
add
sbb
imull
test
adc
sbb
test
adc
jns
mov
addb
xchg
and
xor
in
sub
test
js
rcrl
or
sarb
cmp
pusha
jmp
decl
jecxz
mov
pop
or
jae
dec
cmp
iret
out
mov
inc
aad
arpl
push
push
inc
pusha
pop
mov
xchg
loop
mov
rolb
rorb
popfw
and
sub
pop
fiadds
adc
cltd
jno
inc
mov
les
inc
cmc
iret
test
movsb
sbb
and
loope
or
out
in
daa
mov
stos
cld
pop
xor
loopne
xchg
popf
cmp
loopne
inc
mov
adc
movsb
add
popl
test
jmp
dec
cli
cmp
cmpsl
add
out
rcrl
adcb
mov
pusha
mov
ljmp
sub
or
xor
mov
sti
mov
lods
add
and
cmp
pop
ljmp
sahf
in
xchg
movsl
dec
cmp
mov
dec
cmc
inc
cmp
addl
out
popa
aas
push
mov
jmp
nop
jns
push
pop
rolb
or
inc
ss
scas
pop
dec
aaa
stos
jae
call
dec
scas
add
mov
in
cmp
int3
dec
pop
sbb
imull
mov
imul
test
mov
cltd
add
adc
mov
fs
hlt
fbstp
jl
iret
lcall
add
jmp
aad
shll
mov
or
imul
xor
call
xor
mov
or
out
xchg
xor
mov
pop
sti
ret
push
mov
test
mov
das
call
xor
cmp
pop
inc
nop
sub
or
pop
mov
in
or
jno
ds
sarl
std
outsb
dec
jb
dec
shl
je
adc
gs
inc
adc
mov
sub
or
xor
sbb
repz
add
push
and
dec
and
cli
push
pop
jae
adc
add
mov
and
pop
lcall
adc
pop
and
mov
ja
frstor
jecxz
sbb
repz
mov
mov
mov
enter
out
and
or
shlb
rcl
pushf
rclb
sbb
and
test
and
pusha
push
pop
sti
fwait
and
into
mov
int
push
mov
fwait
and
cmpb
cmp
xchg
mov
cld
data16
lods
xchg
adc
fisubl
mov
loop
int3
int
insb
push
aas
ret
cmp
leave
pop
push
imul
or
xchg
jnp
fidivs
jle
cmp
pusha
lret
mov
cld
daa
sub
dec
jg
cmpsl
xchg
jo
setge
orl
fistl
fbstp
inc
jmp
add
in
dec
mov
pushf
xchg
cmovg
daa
dec
lock
test
test
jecxz
insl
xor
imul
mov
jle
lods
mov
adc
adcl
xlat
xchg
push
add
mov
cmp
rcrl
aaa
mov
mov
add
fs
push
insb
add
push
xchg
rcrl
mov
cmp
fldcw
and
loopne
xor
mov
ljmp
incb
into
loopne
cmp
xchg
movl
add
and
cmpsl
repz
stos
popf
mov
cmp
xchg
and
mov
pusha
lock
loopne
loopne
repz
int3
lods
push
sub
outsl
outsb
mov
sbb
cmp
jl
mov
adc
dec
out
jno
sbb
xchg
xchg
mov
ss
inc
insl
inc
mov
add
das
inc
jp
cmpsb
in
arpl
lods
fildl
push
jmp
or
xchg
jb
mov
jle
mov
cwtl
pop
mov
das
bound
cld
add
repnz
pop
xor
dec
sti
mov
xchg
jo
and
popf
popf
loopne
popf
out
and
pop
cmp
mov
scas
dec
ss
sub
cwtl
call
or
fadd
jmp
js
movsl
inc
fmull
imul
lock
movsl
sar
pop
fadds
mov
xor
jb
sub
das
shll
movsl
ret
stos
pop
pop
jne
or
xchg
mov
aaa
cmp
fcmovu
jnp
ljmp
and
add
aad
shl
pop
insl
mov
or
sbb
loop
adcl
ret
dec
int3
sub
clc
decl
sub
test
jmp
pop
sbb
add
insl
dec
mov
inc
inc
fs
jnp
pop
inc
les
and
leave
xchg
movsb
jns
out
test
lahf
in
out
or
jge
xorb
or
sub
repnz
push
xchg
jb
clc
dec
inc
xlat
adc
dec
mov
jge
fnsave
jp
stos
ja
popf
jns
in
cmp
and
out
cmp
xor
std
sar
ljmp
jecxz
in
jp
and
pop
sbb
xorb
mov
mov
xlat
lea
in
fnstenv
sub
js
icebp
jg
xchg
sbb
and
and
insb
and
add
sbb
aas
xor
shll
ljmp
sub
out
jge
adc
int3
shl
call
test
mov
sub
js
test
adc
push
cmp
cltd
xchg
into
add
dec
cmp
hlt
mov
sbb
xor
pop
xchg
andl
jbe
lds
mov
insl
out
test
mov
mov
cmp
push
sbb
dec
mov
sbb
pop
mov
mov
mov
arpl
subl
jnp
test
sub
jl
add
pushf
xorl
push
xor
popa
fdivrs
mov
push
jb
das
jno
inc
out
inc
movsl
push
scas
mov
aaa
mov
in
repnz
push
clc
xchg
xchg
jno
popf
push
hlt
xchg
lcall
mov
adc
sub
cli
xor
nop
sahf
fidivl
repz
mov
stos
mov
adc
int3
sbb
sub
xchg
imul
int
gs
test
stc
mov
jge
test
sbb
lods
or
mov
sbb
adc
mov
jmp
cmp
mov
popf
sahf
decb
dec
out
adc
les
mov
inc
fwait
inc
jge
test
ss
lods
pop
js
inc
rcll
fmuls
sbb
into
enter
jge
inc
lret
lea
jae
js
pop
mov
sub
add
mov
in
lahf
cmpsb
cmp
and
cli
sbb
xchg
shl
stc
dec
in
popa
and
or
dec
fists
adc
idivl
fistl
and
jo
mov
pop
inc
mov
jo
cmp
push
xor
mov
movl
pop
ror
das
aas
es
flds
adc
leave
jne
imul
mov
repnz
push
cmp
push
adc
fidivrs
inc
in
fadds
ret
adc
fistl
mov
int
cld
push
mov
inc
mov
lods
xlat
movl
and
ret
js
pop
iret
cmp
mov
test
and
push
in
outsb
sub
fbstp
xchg
or
mov
push
mov
mov
add
and
aam
pushw
fildll
les
mov
jb
or
pop
fwait
scas
cwtl
pop
insb
push
aaa
sub
dec
fdivl
shrl
popa
stos
jl
jne
aam
adc
adcl
sub
out
sub
cmp
ss
pop
icebp
popf
or
inc
dec
mov
push
dec
test
mov
or
nop
loope
xlat
mov
xor
repnz
cld
fcompl
sahf
lcall
ljmp
lods
dec
dec
lds
repnz
adc
mov
push
xchg
lret
pop
cmp
mov
pop
inc
and
jmp
inc
std
jmp
adcb
lret
lods
cwtl
mov
cmpsb
sbb
loope
push
adcb
into
adc
js
add
stos
pop
data16
data16
inc
cmp
cmp
faddl
mov
test
testl
pusha
in
stc
mov
push
xchg
add
sti
orb
out
xor
mov
out
xchg
int
enter
mov
cmc
inc
idivl
mov
aaa
mov
push
es
mov
pushf
mov
js
pushf
xchg
out
je
add
mov
loop
add
push
jle
pop
push
jno
int3
mov
add
cli
mov
addr16
mov
aad
xchg
push
shrl
test
mov
inc
sbb
fstpl
xor
mov
out
inc
mov
mov
mov
and
jno
pop
cmp
xchg
push
and
jp
out
push
insb
or
insb
xchg
sub
jno
lret
adc
arpl
stc
pop
cmp
jmp
add
cmc
cltd
mov
lock
pop
inc
jge
in
iret
mov
xor
jle
test
mov
xchg
fsubs
mov
stos
dec
jae
arpl
add
adc
jbe
leave
pop
ret
jo
int3
add
lcall
aas
pop
add
adc
ss
daa
dec
xorb
ret
nop
sbb
jbe
mov
ds
adc
mov
add
movsb
mov
xchg
lods
or
mov
repz
push
dec
ds
iret
jmp
repz
fnstsw
inc
cmpsb
adc
push
inc
inc
fstpt
pop
inc
xlat
or
cli
lahf
pop
jmp
pushf
lods
push
cmpsb
pop
jle
add
mov
push
xor
sbb
into
movsl
xchg
test
ficoml
cld
sbb
cltd
push
xchg
test
dec
cld
and
mov
lahf
test
jecxz
cmc
loop
fwait
clc
sub
int3
inc
and
push
or
push
imul
dec
sub
mov
adcb
inc
jnp
push
mov
pop
cltd
push
push
cltd
cmp
adc
mov
cmp
insb
scas
lahf
shll
negl
insb
ret
aad
insl
mov
push
iret
and
xor
mov
ret
mov
sbb
cmpsl
mov
push
mov
iret
mov
lcall
fsubl
sub
jmp
lahf
push
cmpsb
shrb
negb
inc
xor
add
xor
pop
movsl
stos
add
insl
dec
loop
and
inc
cs
repz
mov
mov
nop
jmp
cmovo
in
lahf
inc
clc
mov
lahf
add
test
outsb
dec
mov
adc
stos
std
jecxz
pop
jg
jp
out
and
xchg
jmp
mov
bound
ja
or
push
and
xchg
push
icebp
lea
stc
sub
pusha
rcrl
pop
dec
push
pop
push
je
dec
sub
jae
jge
jg
mov
cmp
push
mov
lea
mov
pop
scas
popf
jae
adc
xchg
push
push
xor
mov
bound
xchg
sub
push
xchg
sahf
les
lds
sub
ja
adcl
pop
je
das
sub
sub
out
sub
add
out
fwait
cmp
or
mov
dec
cmp
jbe
xchg
scas
insb
add
cmp
roll
and
jmp
inc
mov
inc
dec
inc
insl
lea
popa
cmc
mov
jno
pop
icebp
mov
je
and
arpl
pushf
loop
and
lock
dec
push
mov
push
and
sbb
add
out
sbb
push
fwait
not
jmp
jmp
sbb
punpckhwd
and
adc
loope
out
movsl
add
xor
paddq
jb
mov
into
sbb
cmpl
out
fistps
adc
inc
in
ss
lds
in
mov
lcallw
push
mov
loope
push
les
out
or
xorb
mov
dec
ja
insl
and
mov
test
hlt
inc
jae
push
repz
cmp
sub
ja
ds
xor
jae
pop
xchg
divl
sub
rcrl
adc
mov
jae
lods
pop
cld
bound
mov
jne
xor
pmulhuw
and
push
add
xchg
lea
adc
adc
push
in
in
adc
mov
insl
cmpsl
cmp
cmp
loop
push
or
sbb
push
les
repz
pop
lods
ja
stos
lea
xlat
lods
and
out
push
sub
lret
add
push
sub
lret
or
inc
shr
repnz
lds
add
mov
push
addr16
pop
jns
or
jbe
cmp
or
popa
cmp
push
and
xor
jg
test
lret
jns
jno
and
dec
add
jno
inc
sbb
in
sarb
jnp
shll
push
cli
insl
push
push
decl
std
jle
aam
cwtl
jp
jns
pop
test
je
push
xchg
xor
insl
sarl
sub
xor
fwait
xchg
lret
and
call
add
sbb
add
jne
loope
inc
insl
lock
enter
sti
fmull
xchg
mov
adc
mov
insl
call
xor
in
sub
inc
add
lret
arpl
mov
testb
pop
jns
inc
scas
jle
or
adc
fwait
mov
pop
test
in
icebp
and
mov
xchg
adc
sbb
jp
inc
inc
rcrl
aam
push
sbb
jle
xor
shll
icebp
dec
jg
fisttpll
jle
push
sub
mov
out
sub
movsl
hlt
mov
or
push
mov
pop
sti
inc
lds
dec
sub
jecxz
cltd
sub
mov
stos
mov
repnz
stos
repnz
mov
outsb
scas
hlt
mov
inc
push
pop
fimull
jecxz
andb
lcall
test
and
cmc
loope
and
ret
jle
in
mov
inc
orb
fcmovu
test
fldenv
mov
stc
jno
cld
cmp
push
dec
data16
or
sub
xchg
add
mov
fmuls
push
inc
cmpb
sbb
mov
jmp
stos
orb
cmp
mov
cmp
ret
sub
lcall
clc
sbb
pop
loope
jmp
and
ljmp
mov
call
data16
cmp
add
pop
mov
push
add
int3
cmp
addb
cmp
cli
daa
cmp
sbb
sti
test
sbb
insb
sar
inc
xchg
ds
pusha
stos
mov
pop
push
push
jecxz
push
dec
pcmpgtw
pushf
dec
pop
filds
idivl
mov
sbb
mov
in
xchg
mov
out
add
stos
daa
mov
jne
addr16
inc
insl
pop
mov
xor
fistl
xlat
xchg
mov
dec
jmp
ret
xchg
mov
ret
pusha
ljmp
push
xchg
std
sbb
adc
out
dec
movsl
js
and
mov
mov
in
sub
mov
cld
xor
notb
add
cmp
and
sahf
xor
and
cmpsl
aas
and
outsb
jae
mov
xchg
jle
pop
add
jge
imul
jmp
jge
in
or
bswap
adc
pop
mov
cmp
xchg
movsb
ja
popf
cmc
outsl
adc
sahf
insb
dec
jno
data16
aam
or
andb
test
iret
xor
add
and
in
fisubrl
mov
testl
add
push
add
jb
sub
sbb
xchg
or
mov
jo
sarl
mov
xor
pop
xor
lahf
mov
mov
mov
push
add
or
sbb
inc
sti
sbb
or
into
lahf
ja
fsubs
icebp
jp
lret
nop
jns
ret
xchg
aaa
inc
outsl
lea
add
push
ja
sarl
and
mov
sub
pusha
dec
adc
jl
je
cmpsb
icebp
adc
pushf
mull
push
push
mov
mov
mov
pop
popf
mov
lock
sub
add
rorl
int3
nop
pop
dec
inc
inc
lret
add
fldl
cmp
ret
std
stc
ds
lock
mov
xor
cs
lcall
inc
add
int3
cmp
xor
cmp
fistps
jp
fisttps
packsswb
and
mov
ja
aad
imul
pop
push
mov
jno
icebp
ucomiss
push
fdivs
sub
icebp
cli
lret
push
or
add
ljmp
dec
je
sbb
jecxz
mov
add
push
into
in
xor
push
je
sbb
push
mov
fnstcw
push
or
pop
inc
addr16
punpcklbw
lahf
pop
dec
mov
xor
sahf
and
xchg
ljmp
xchg
jp
mov
leave
mov
loope
or
jge
enter
je
push
mov
ja
jnp
mov
cwtl
sahf
gs
frstpm(287
aam
and
roll
lock
push
decb
sbb
test
and
dec
mov
xchg
mov
int
rcr
or
roll
aad
subb
call
jne
mov
aas
cmpsb
enter
rorb
popf
mov
add
dec
xchg
or
jmp
int
repnz
ss
imull
dec
dec
xor
and
cltd
test
enter
lret
jecxz
mov
in
jnp
hlt
loope
outsl
sbb
sub
sub
add
or
mov
mov
pop
adc
push
xor
xor
sub
cmpsl
sub
scas
int
mov
movsl
rclb
fistl
sbb
cltd
inc
xor
call
gs
xlat
fdivrl
ja
add
pop
shr
inc
fwait
insl
sbb
dec
xor
pop
dec
and
inc
into
lcall
mov
das
xchg
test
xor
imul
add
jno
push
and
lock
out
sti
or
push
mov
mov
rcll
das
int
xor
or
cli
subb
idivb
das
lret
jb
add
or
in
insl
inc
or
aas
int3
xor
addr16
std
sbb
jns
pop
pop
mov
push
jb
adc
pusha
mov
leave
cmpsl
mov
loope
rcrl
xchg
lock
ffree
inc
cld
js
push
jo
lock
aam
mov
pop
popf
sarl
push
dec
imul
xchg
out
inc
sahf
jg
arpl
scas
shrl
sub
adc
pop
insb
push
cmp
pop
push
leave
jnp
mov
mov
sub
pop
setbe
or
lret
jae
daa
enter
popl
lods
push
mov
mov
test
jp
imulb
jae
lock
mov
mov
cmp
mov
cltd
mov
or
jae
or
scas
cld
rolb
enter
dec
pop
data16
sbb
pop
push
mov
and
imul
push
cmp
jmp
jl
cli
xchg
cmpsb
push
int
push
inc
mov
add
fstl
sub
cmp
and
sbb
xor
call
and
pop
gs
inc
cmc
ss
fsubr
sbb
popf
inc
mov
shrb
sub
addr16
inc
cmp
stc
inc
nop
sbb
aas
cmp
cmc
fsubrs
mov
dec
insl
mov
arpl
cltd
jp
inc
idivb
mov
fnstenv
jmp
sbb
imul
add
test
sbb
insl
or
or
outsb
les
mov
or
mov
sahf
addr16
sbb
xor
cmc
xor
jae
mov
ret
iret
addr16
pop
js
push
repz
mov
insb
dec
movsb
pop
loope
xchg
shrb
jae
push
ja
push
test
mov
pop
pop
aaa
addb
call
mov
je
jbe
decb
sub
add
jge
scas
ja
cs
insb
subb
push
fisttpll
imull
and
mov
add
xchg
out
push
mov
into
lret
dec
gs
jg
jge
lods
sbb
xor
pop
arpl
jno
mov
sub
dec
pop
in
sub
pop
lods
lret
push
and
inc
lods
scas
sarl
cmp
cmpsl
int3
adc
iret
or
stc
jae
mov
pop
push
pop
inc
mov
push
cvtpi2ps
cmpsb
rclb
ds
ljmp
dec
dec
pop
loopne
sub
ficompl
sbb
cmp
pop
inc
adc
dec
insl
mov
mov
orb
xchg
sbb
hlt
fisubrl
xchg
sub
std
sub
xchg
fdivl
sub
and
and
sub
sbb
jb
shl
sbb
mov
mov
fidivl
add
test
fimull
pop
and
iret
nop
movsb
jg
in
gs
xchg
flds
int
lret
sbb
mov
jg
divb
fbstp
inc
inc
fdivl
data16
cmp
inc
sahf
jg
movsl
rcrl
cltd
shrl
in
cld
dec
adc
fdivr
dec
push
outsb
pop
mov
mov
jae
or
adc
test
repnz
xchg
push
add
mov
mov
adc
jnp
jecxz
lock
out
or
jbe
leave
adc
dec
jg
mov
in
or
loope
push
adc
or
int3
sub
cwtl
hlt
add
subb
repz
scas
bound
pop
fdivrs
mov
out
xlat
in
mov
rcl
cltd
shrl
lea
push
or
in
push
mov
leave
mov
xchg
js
aam
mov
or
mov
popa
push
scas
ja
or
mov
lahf
mov
aas
lds
ss
jle
pop
or
js
mov
out
daa
pushf
adc
add
pop
je
and
and
es
or
add
cmp
inc
lods
sti
add
push
cs
pop
orl
mov
out
dec
test
or
push
insb
mov
fcomip
sbb
dec
popa
insl
adc
mov
cltd
push
cld
into
in
xchg
push
fbld
aaa
rcrb
xor
imul
add
fcomps
dec
inc
lods
and
mov
dec
hlt
arpl
cmpsb
std
aas
cltd
push
push
aam
enter
arpl
and
pop
daa
push
inc
data16
out
or
dec
pop
jg
neg
xor
arpl
and
adc
outsl
cmp
fsub
outsb
jecxz
js
xchg
cmpsb
shr
loop
idivb
rcrb
ss
jns
addr16
push
push
mov
mov
dec
icebp
push
sub
mov
ljmp
scas
adc
or
mov
ljmp
int
gs
cmpsl
and
cmp
mov
mov
imul
sbb
jne
mov
pop
mov
xor
xchg
or
in
mov
adc
icebp
or
arpl
mov
xor
and
xor
sub
cmpsb
insb
xor
mov
aam
xchg
fisttps
loopne
jecxz
mov
jnp
push
jl
out
xor
stc
iret
sub
or
hlt
sahf
inc
mov
fdivl
mov
or
jmp
sbb
pop
or
movsb
mov
jae
pop
sbb
aas
mov
mov
cmp
sahf
jg
sbb
cmp
jmp
das
repnz
in
cli
lock
js
jl
mov
mov
jge
jae
rcrb
adc
ja
push
into
out
pusha
and
mov
dec
xor
bound
cs
fisttpll
jbe
rcr
cmpsb
pop
rcll
inc
addl
popl
and
lret
lods
xchg
cmp
lcall
cmpsb
adc
push
and
xor
mov
jmp
mov
jb
jp
add
add
add
xchg
xchg
cmp
mov
or
mov
jbe
js
insl
popa
xchg
orl
testb
fcmovu
xchg
cmp
loopne
push
test
xchg
jle
nop
fwait
dec
sub
ja
lods
cmp
cmpb
and
inc
xor
xor
in
sahf
and
cmc
push
std
cmpsl
jnp
push
xor
xor
dec
mov
xchg
jbe
adc
dec
xchg
inc
es
add
jle
iret
xchg
test
cs
mov
pop
jnp
mov
sbbb
ret
scas
mov
scas
sti
clc
test
loop
cmp
cmp
pop
cmp
ret
cmpsl
jo
push
js
mov
push
add
icebp
scas
cmc
xor
fdivrl
hlt
fisttps
xchg
mov
xchg
mov
pop
repz
repz
jle
lea
pop
dec
sti
stos
out
and
jp
lds
jge
xor
adc
popf
imul
sub
adc
test
out
outsl
es
loope
push
roll
sbb
adc
jne
fs
jge
shl
xor
mov
jp
sub
lret
dec
test
xchg
out
outsb
push
je
js
mov
gs
les
in
jae
cmp
in
mov
cmc
sahf
jge
lcallw
mov
popf
jne
imul
shl
cli
jge
adc
jp
aam
outsb
data16
out
push
or
mov
insb
shrl
sbbl
push
cmc
dec
arpl
dec
adc
pop
inc
pop
lods
xchg
rorb
cmp
mov
pushf
jno
xchg
stc
sahf
gs
mov
dec
cltd
ds
decl
push
dec
mov
inc
neg
xchg
pusha
ds
mov
mov
stos
mov
mov
xchg
pop
push
fcomi
clc
cmp
push
hlt
pop
scas
sti
push
rcrb
stos
out
ljmp
add
add
lret
mov
cli
inc
jns
add
cld
and
ffreep
adc
add
arpl
push
sbb
aad
xchg
jae
fdivs
mov
aas
mov
xor
dec
lea
addr16
and
sub
add
push
push
fwait
push
enter
les
sub
mov
das
int3
repz
mov
pop
mov
xchg
stos
outsl
push
dec
cmpsl
loopne
dec
int3
jae
fisubrs
pop
das
cmp
inc
sbb
sbb
cli
inc
or
arpl
imul
or
adc
cmpsl
push
mov
xor
es
mov
mov
adc
pop
push
jge
xchg
into
add
imul
das
lret
dec
push
aad
in
idivb
cld
dec
dec
enter
pop
mov
mov
xchg
sbb
sbb
out
cmp
mov
fiaddl
dec
faddl
jmp
mov
clc
mov
inc
sub
fistps
cli
adc
sub
sub
inc
sbb
notb
xor
push
inc
repz
xor
or
loope
jp
jnp
mov
imulb
sbb
gs
pop
sbb
add
lahf
and
add
sbb
dec
cmp
mov
and
adc
dec
xlat
mov
rolb
ja
mov
out
xchg
gs
and
pop
pusha
cwtl
or
mov
loop
in
scas
or
inc
js
in
push
lods
adc
pop
divl
lea
pop
adc
inc
je
gs
dec
out
mov
inc
add
lahf
aam
add
inc
ret
sub
sbb
lret
pop
push
sbb
fildll
add
add
jle
sahf
xchg
sbb
negb
dec
xor
aad
mov
xchg
pop
cld
mov
pop
add
sbb
or
jecxz
enter
jae
pop
movsb
addr16
sahf
ljmp
stos
mov
repnz
das
pop
dec
jle
add
add
xorb
dec
mov
shll
pop
fdivrl
sbb
pop
es
fldt
mov
dec
xchg
enter
loopne
fsubl
mov
jb
sarl
xlat
ljmp
cli
cmc
sbb
mov
mov
add
mov
dec
jb
xchg
cmp
adc
xchg
decl
popf
mov
dec
idivl
shl
push
call
arpl
mov
mov
inc
or
sti
xchg
jmp
sub
xchg
pop
add
mov
mov
push
and
push
adc
out
mov
add
mov
push
mov
xchg
cmp
cld
and
or
mov
push
sub
pop
cld
cmc
lea
outsb
and
ret
fdiv
out
out
sub
je
cmpsl
dec
pop
xchg
mov
mov
addr16
push
mov
xor
mov
fsubp
mov
sub
pop
mov
int
mov
push
dec
mov
dec
mov
mov
lret
dec
aam
sbb
lcall
xchg
xor
add
pop
pop
sub
push
xor
jns
mov
and
mov
mov
shlb
pop
mov
xchg
enter
and
and
ss
inc
jmp
call
or
dec
mov
cli
cli
ljmp
jns
inc
push
inc
pcmpgtd
pop
fidivrs
jbe
fbld
jg
in
mov
mov
xchg
popa
cmc
jmp
ljmp
pop
pop
pushf
jg
mov
jbe
lret
push
push
sti
sub
or
rol
lret
adc
xchg
sub
sbb
in
iret
ret
lods
jae
shrb
sahf
hlt
cld
xchg
inc
xchg
fs
cltd
mov
jno
cmp
mov
psadbw
jmp
pusha
mov
daa
pop
sbb
adc
lahf
adc
mov
sub
shll
mov
psadbw
xchg
in
mov
jne
inc
lcall
cmpsb
push
insl
test
mov
or
dec
jno
and
ret
hlt
lds
mov
mov
mov
clc
mov
jp
push
jecxz
aam
inc
aad
sbb
jle
push
insl
xchg
cmpsl
or
negb
xchg
cld
cmpsl
lret
loope
out
xrelease
les
stos
pop
push
mov
nop
cmp
movsb
fcompl
pop
test
js
or
or
xor
call
out
pusha
or
fmull
jbe
insb
imul
leave
sbb
adc
dec
hlt
imul
jno
cmpsb
clc
pop
xchg
popa
sub
mov
sbb
inc
loopne
lods
fsubs
rorb
push
shlb
xchg
dec
jo
aas
std
sti
orl
mov
sub
cld
daa
inc
enter
aad
sub
cs
cmpsb
lds
outsl
fmuls
into
clc
sub
into
aad
cmpl
pop
hlt
jo
int
loope
dec
popf
imul
mov
in
mov
inc
or
cmpsl
mov
pop
lret
insb
xor
sti
adc
inc
ret
invd
adc
es
lret
xor
addr16
xchg
adc
outsl
clc
stc
jo
rcr
cmp
incb
sbb
insl
sbb
inc
mov
mov
jg
mov
cmpsb
mov
cmp
add
mov
aas
ficoml
jno
push
sub
cwtl
or
mov
fcomps
and
sbb
sahf
mov
das
adc
xchg
cwtl
cmp
add
ljmp
sbb
call
out
adc
std
cmpsl
cmp
adc
leave
adc
rclb
push
js
and
into
jb
mov
lahf
pop
and
pop
lods
imulb
pop
lods
push
inc
test
mov
push
jecxz
addr16
mov
fwait
mov
pop
cmpsl
add
mov
imul
and
lahf
pop
cmp
inc
popf
and
data16
xor
rolb
or
and
pop
jae
sub
adc
test
mov
cmpl
cmpsb
mov
add
inc
clc
cmp
inc
push
inc
jb
jo
mov
loopne
xor
pop
and
push
add
xchg
test
jbe
hlt
sbb
push
js
or
out
loope
push
pop
in
stc
rcrl
and
cld
sub
sarl
aaa
lret
mov
pop
aas
xchg
notb
sahf
loop
sub
adc
ja
sub
jne
and
jmp
in
test
jb
movsl
ret
insl
jle
rorb
or
mov
dec
stos
stos
popa
out
stos
xchg
add
sub
stos
sub
aas
adc
xchg
enter
jno
xchg
insl
insl
enter
arpl
adc
push
fistpl
movsl
cld
push
in
and
sahf
inc
add
cltd
lock
aad
mov
into
fstp
orl
push
mov
xchg
and
add
add
cwtl
cwtl
and
cli
jmp
cmp
jae
push
xlat
movsl
push
pop
out
inc
bound
cmpsl
and
outsb
jl
sarl
add
sub
sub
mov
mov
xchg
xchg
sarb
inc
or
in
add
and
push
adc
jne
and
push
fildll
jl
rcr
mov
neg
fs
or
jge
outsb
and
mov
mov
into
lods
push
cmpl
jl
loopne
xchg
dec
ljmp
mov
or
fcompl
lret
lret
and
hlt
inc
sarl
cmp
adc
jge
or
dec
pop
das
push
xchg
pop
cmpl
lods
insl
inc
cmc
push
adc
add
iret
imull
ss
xchg
shlb
js
sahf
loop
fisubrl
cmpsb
dec
psubq
and
icebp
jo
insb
jb
das
jle
xorl
faddl
clc
jb
repz
ds
out
mov
mov
push
jbe
mov
and
jle
jb
jge
jo
testb
fs
lds
add
add
inc
xor
jecxz
or
pop
pusha
pop
dec
fcoml
jp
in
ja
dec
stos
xchg
push
roll
xchg
stc
mov
stos
insl
pop
xor
pop
test
mov
lahf
iret
scas
sti
rolb
pop
jbe
pop
mov
xchg
mov
dec
daa
daa
adc
or
jle
xor
xlat
inc
nop
lret
ffree
jecxz
push
or
out
ficoms
or
lds
add
adc
stc
or
pusha
inc
mov
dec
push
loope
in
shrl
xchg
mov
push
cmp
xchg
fsts
lods
call
push
cmp
fistps
sbb
add
pop
inc
xor
lahf
inc
insl
fnstcw
lcall
xchg
pop
sbb
mov
dec
jmp
sub
sbb
fdivrs
mov
xorl
addr16
jp
cmp
lds
and
xor
out
les
insl
xchg
loop
mov
leave
lahf
and
test
es
pop
mov
or
xor
shlb
ret
test
xor
dec
nop
sub
mov
mov
clc
push
and
lret
lea
jmp
leave
aam
repnz
lahf
sub
add
in
jl
scas
outsl
pop
ret
or
je
pop
xor
push
pusha
stos
adcl
and
insl
pop
shlb
add
pop
xchg
leave
add
jbe
cmpsb
gs
push
jg
in
test
add
fldl2t
cltd
mov
dec
jmp
loop
repnz
dec
loope
jle
sub
enter
daa
add
xchg
test
test
inc
rorl
repz
xchg
ss
inc
int
pop
or
nop
daa
pop
lods
push
mov
dec
jns
and
mov
pop
push
fistps
orl
rolb
jge
loop
sbb
sub
sub
mov
push
xchg
incb
inc
mull
pop
cltd
inc
shlb
les
adc
mov
mov
xchg
aaa
fwait
pop
cmp
cmp
dec
add
addr16
xchg
dec
movd
xchg
std
test
outsb
sub
or
mov
or
jno
int
lods
cmp
adcb
cmp
inc
into
pop
nop
mov
and
cmp
push
xlat
add
repnz
mov
mov
mov
jmp
add
pusha
add
aam
push
movsl
and
pop
adc
dec
adcb
gs
inc
add
xchg
cmp
xchg
adcb
in
sbb
cld
pop
in
inc
mov
mov
repz
add
rcr
inc
addr16
or
xchg
and
add
jl
ret
movsl
sbbb
fbstp
and
sbb
repz
fistpl
adc
insl
cmp
arpl
mov
jp
movsb
stc
leave
in
out
sahf
adc
and
imul
xchg
pop
out
cmp
call
jl
sbb
adc
or
das
out
ss
jmp
cld
call
or
xor
jbe
call
lea
fs
push
repz
and
mov
sbb
jmp
js
nop
xchg
cli
cmp
sbb
int3
pop
adc
lods
outsb
mov
shll
lds
test
popa
dec
add
cmpsl
xchg
ret
jle
insl
fcoms
outsb
sbbb
dec
lret
fcmovnbe
xchg
mov
push
cmp
jae
mov
std
es
mov
add
jmp
fdivl
aas
lcall
rorl
loope
enter
add
or
jb
pminsw
xor
scas
cmp
test
cmp
push
pop
push
mov
mov
dec
push
test
mov
sub
mov
popa
aam
lcall
mov
sbb
insl
pop
and
test
and
stos
xchg
popa
mov
jmp
mov
lcall
xor
pop
outsl
test
imul
mov
or
cmp
aas
sub
push
push
lret
testb
mov
mov
stos
or
popa
aaa
test
stos
es
inc
xor
xchg
sbb
adc
jecxz
or
scas
dec
cmp
mov
das
cld
mov
loope
adc
jb
adc
cwtl
adc
xchg
test
pop
xchg
clc
arpl
lcall
inc
cmpsl
jae
mov
fdivp
fcmovne
loop
add
test
fsubrl
add
leave
sub
xor
inc
out
pop
and
jnp
add
sbb
fadd
test
pop
mov
and
sahf
mov
sub
inc
int3
nop
fwait
into
repz
mov
jle
dec
mov
or
daa
or
xor
push
pop
mov
push
push
mov
sti
outsl
lds
gs
insb
cmpsb
movsl
cmpsb
mulb
pop
popa
fdivp
jbe
mov
imul
and
and
filds
jb
dec
mov
mov
xor
push
lahf
cmp
adc
clc
adc
incl
adc
push
cmp
mov
pop
addr16
fimuls
les
xchg
into
icebp
cltd
pop
popa
jmp
movzbl
mov
jmp
add
daa
rcr
ret
loope
out
dec
scas
in
int
mov
or
ds
adc
enter
in
jecxz
xor
mov
adc
jmp
in
mov
jae
rorb
inc
and
mov
add
pop
sahf
bnd
rorb
push
js
pop
add
adcl
ja
aas
popf
cmpb
xchg
push
push
pop
jbe
fsubrl
je
and
nop
fidivrs
jns,pt
cld
jae
inc
repz
jae
push
loope
cli
shl
xchg
cwtl
sahf
sahf
jbe
pop
push
add
push
fwait
or
pop
inc
jnp
mov
pushf
xchg
out
or
push
imul
stos
xchg
push
xchg
mov
sub
push
fdivrp
movsb
add
sbb
test
jne
je
in
outsb
cld
adc
sbb
jnp
xlat
and
adc
cmp
cmp
pop
shll
flds
cmpl
xchg
insb
mov
loope
xor
iret
adc
andb
xor
jp
mov
adc
and
stos
add
mov
imul
mov
lock
das
jge
mov
sarl
sbb
inc
cmp
rcr
xchg
loop
sub
mov
mov
fisttpll
inc
mov
or
inc
pop
stos
mov
aas
ljmp
xor
jge
xchg
jecxz
xchg
sbb
fwait
jp
mov
repnz
xor
out
pushf
xor
sbbb
and
jbe
into
fimuls
dec
int3
mov
xchg
inc
outsl
fwait
in
fadd
gs
or
mov
inc
in
or
clc
cld
test
mov
pop
and
and
cltd
fidivrl
inc
gs
or
pop
je
rcl
lahf
int3
or
out
xchg
test
xlat
jo
cmpsl
ja
aas
call
mov
insb
push
jecxz
jg
xor
into
push
xor
data16
fisubrs
inc
cmp
xlat
sbb
ja
push
movsb
ljmp
ret
cld
stc
and
fcmovnbe
cltd
mov
jge
shrb
aas
and
out
mov
addl
in
nop
lock
xchg
xor
xchg
ss
aas
pop
vmwrite
leave
mov
jno
cmp
test
lds
dec
adcb
mov
xchg
jo
incl
and
jno
int
in
add
fst
jecxz
cld
mov
aad
jns
add
lahf
mov
xor
or
das
sbb
aad
fsubr
sub
xchg
mov
pop
daa
shll
addb
mov
daa
mov
or
pushf
xchg
imul
adc
mov
leave
pop
sub
loope
addr16
lods
mov
sub
and
aas
jg
das
fistpll
test
rcr
dec
jb
add
cltd
sti
outsb
cs
int
insl
adc
rol
xchg
call
js
xchg
sub
dec
push
and
sub
into
xor
and
sub
repnz
mov
jne
rorb
push
xchg
cli
imul
jb
ljmp
test
jmp
xor
xchg
sub
out
mov
dec
rorb
lret
cmpsb
inc
mov
xchg
mov
es
repz
xlat
aad
lcall
int
jl
int
clc
xchg
test
lods
int3
testb
aaa
xchg
mov
pop
push
sub
xor
inc
mov
xchg
jne
data16
pushf
jno
clc
test
xchg
insb
jecxz
lods
jl
stos
mov
pop
sbb
push
int3
sub
ljmp
mov
push
cmp
push
pop
push
dec
fldlg2
pop
mov
cmpsl
in
mov
pop
addl
mov
jae
out
dec
lods
cltd
aad
rcll
sbb
add
sbb
int3
pop
jnp
add
mov
sbb
sbb
and
mov
xor
test
mov
push
adc
mov
adc
sbb
xor
dec
pop
inc
sbb
es
ss
leave
shll
clc
pop
sahf
xchg
xchg
or
push
push
jge
shrl
sub
aad
clc
mov
push
add
cmp
mov
adc
push
jne
pop
out
mov
dec
adc
je
cmp
push
xor
jecxz
mov
cld
jecxz
lret
and
pop
or
js
and
jge
mov
dec
xor
jnp
dec
cltd
jmp
push
cmp
cmp
aaa
pusha
fbld
push
loop
mov
data16
or
addr16
pop
pop
push
xor
mov
xchg
dec
sti
and
dec
into
ja
scas
pop
jne
push
jmp
daa
add
test
xchg
sub
dec
cmc
push
mov
roll
jns
aaa
sti
in
pop
inc
mov
push
pop
test
cli
jge
call
add
mov
sub
and
xor
push
stos
stos
loop
pusha
add
mov
pop
loop
fwait
data16
add
fdivs
jae
xor
fcompl
and
out
sub
or
je
sub
dec
orb
popa
xchg
out
out
movsl
adc
xor
testl
push
mov
and
test
dec
xchg
and
jns
sub
mov
sub
addr16
aas
push
idiv
orb
fadd
test
data16
jbe
add
push
ret
mov
push
bound
jmp
cmp
fwait
movsb
addr16
in
sarb
rorl
xor
xchg
push
and
inc
daa
popa
sub
stos
out
jp
and
xchg
fmull
xchg
popa
dec
jp
test
cmp
xor
int
subl
inc
sbb
outsl
sbb
xor
jmp
inc
or
fidivrl
xor
jecxz
bound
iret
test
fstl
js
inc
inc
int
xlat
add
and
or
dec
xchg
stos
fcoml
xor
and
inc
inc
addl
lret
imul
add
gs
sub
test
push
movsl
jne
push
push
xchg
sub
cmp
lods
inc
fwait
test
movsb
and
popw
jo
mov
dec
or
push
jmp
and
out
xchg
fldenv
sbb
add
xor
ds
add
mov
lcall
jmp
fsubl
mov
in
inc
iret
addr16
mov
addb
mov
outsl
leave
pop
mov
jo
fnstsw
jbe
iret
sub
sbb
inc
cli
test
sbb
testl
sub
lret
jmp
cmc
and
cmpsl
or
std
dec
dec
out
jecxz
mov
imul
xor
push
daa
jg
push
arpl
cmc
push
outsb
lock
test
mov
inc
test
rcrl
xor
dec
scas
xchg
inc
mov
cmp
popa
sti
sub
pop
into
and
cli
mov
addr16
fistpl
sbbb
nop
and
cld
push
sti
push
ljmp
mov
cmp
movsb
mov
adc
sbbb
mov
mov
push
pop
xor
cmp
stc
mov
mov
mov
cmc
xchg
int
pop
test
imul
pop
cmp
push
inc
pop
jp
sub
sbb
popf
mov
je
xchg
aas
call
xchg
adc
xchg
jns
and
lock
aam
sub
xchg
mov
test
xchg
cld
xchg
std
fmuls
ds
or
add
iret
pop
rcll
or
xchg
sti
push
out
cmpsl
popa
test
aaa
int
push
int3
insb
adc
lcall
lock
xor
push
mov
jg
cmp
cmpsb
mov
test
in
dec
cli
mov
cmp
in
jge
mov
scas
aam
mov
pop
jge
sub
adc
push
jl
fwait
out
jp
shlb
shll
pop
add
std
fiaddl
int3
mov
addr16
call
out
mov
cld
dec
fldenv
aas
popf
daa
outsb
mov
in
loopne
in
icebp
shll
movaps
xor
rorb
xor
mov
or
imul
cmpsl
mov
outsb
ss
jl
stos
lds
fs
mov
mov
flds
shrb
jns
push
push
mov
out
inc
std
pusha
pushf
daa
pop
cmp
push
jl
adc
and
pop
xchg
les
inc
test
les
jns
cltd
std
fs
jae
or
xchg
in
sbb
daa
mov
mov
push
loope
add
int
xchg
jecxz
pop
mov
jmp
push
arpl
and
mov
sub
or
leave
or
cmp
jb
push
pop
sub
xchg
loopne
jmp
mov
data16
jae
je
fmul
jg,pt
pop
push
push
lock
jle
cmc
jnp
jne
shlb
xor
js
int
sbb
mov
and
push
shlb
xor
leave
rcll
shll
add
bound
push
push
loopne
mov
daa
sub
adc
mov
cltd
push
gs
xchg
ret
movsl
mov
xorb
mov
jecxz
cmp
dec
sbb
mov
loope,pt
mov
xchg
xor
pop
out
xor
stc
push
sbb
pusha
xor
cmp
enter
cld
xlat
fwait
icebp
mov
add
movsb
pop
rorl
jnp
and
mov
fs
mov
aad
mov
sahf
lods
jl
dec
fbstp
dec
jns
in
shll
mov
gs
cmp
cmp
sahf
nop
aaa
sub
mov
pop
bound
cmpsb
add
push
aam
jg
fdiv
dec
push
ret
mov
inc
xchg
lods
ret
mov
push
out
rorb
mov
sub
ret
sbb
mov
scas
es
add
pop
xchg
out
rol
mov
dec
sbb
mov
lcall
jle
dec
jae
pop
add
mov
sub
lock
jne
sub
sub
inc
jl
xchg
pop
push
jle
push
fsubl
dec
and
bound
push
mov
mov
lea
inc
cli
repnz
adc
dec
xor
jle
arpl
movsl
or
ffreep
sbb
xor
xlat
sbb
push
test
xchg
jo
lret
shll
or
adc
mov
or
sub
dec
mov
cld
lcall
mov
sbb
in
fcomp
repnz
dec
stos
push
mov
in
and
mov
scas
insb
out
lret
sti
out
iret
xchg
pop
xchg
inc
ja
test
cld
jmp
call
fcmove
adc
rep
dec
dec
leave
out
out
out
push
mov
mov
push
pop
jmp
mov
cs
mov
ss
sub
and
dec
jl
lds
pause
testl
mov
pop
ret
jecxz
data16
lcall
and
xchg
sub
and
outsb
cmp
fs
mov
lds
clc
scas
pop
daa
jne
xchg
in
mull
mov
inc
andb
xor
popa
push
push
pop
std
and
cmpsl
dec
test
leave
dec
out
pop
mov
jle
add
sahf
jne
mov
or
sbb
addr16
out
xchg
repz
nop
in
ja
jmp
das
cs
shrb
pop
xchg
pop
or
push
imul
and
jmp
gs
inc
jecxz
add
movsl
mov
popf
xchg
rcrl
popa
fstps
mov
sub
xchg
sub
xor
rcr
pusha
cmpl
push
xlat
aaa
cs
inc
loop
pop
sbb
pop
add
mov
and
div
xchg
or
rcr
cmp
aam
lret
ljmp
xchg
dec
fcomps
mov
cmp
es
inc
xchg
mov
mov
mov
sub
jne
fwait
lea
test
xor
cmp
repnz
cmp
lods
mov
out
iret
jg
mov
decl
std
ja
daa
cmp
or
sar
xorb
sbb
lock
je
js
mov
cmp
popa
fs
pop
pop
push
dec
int3
inc
out
jae
cltd
jl
into
or
cwtl
test
xor
mov
fistpl
dec
jecxz
clc
pop
xchg
in
std
fldt
test
mov
pop
mov
sbb
sub
add
pusha
repz
mov
fmulp
or
fs
fistps
mov
test
pushf
mov
movsl
dec
or
mov
mov
pop
xor
add
xchg
mov
jmp
data16
bound
add
rclb
cltd
divb
jbe
lock
in
inc
sbb
aas
call
dec
mov
loope
aam
push
push
stc
enter
rclb
clc
xchg
mov
pop
sbbl
cs
insb
sbb
ficomps
dec
int3
pop
mov
dec
push
int
test
xor
das
call
mov
es
pop
adc
or
jo
push
inc
sarl
popf
mov
fdivrs
mov
rclb
adc
mov
mov
into
sbb
cmpsb
add
lcall
xchg
xor
fwait
adc
xchg
dec
clc
sbb
mov
push
and
pop
out
fcmovnu
push
xchg
add
out
imulb
mov
or
mov
jbe
sub
aam
rcll
sbb
pop
cltd
jae
jae
mov
push
out
sub
das
jecxz
subb
push
jmp
adc
imull
incb
inc
lds
pusha
xor
addr16
lahf
ss
push
enter
out
in
fsubs
push
daa
jbe
sub
scas
or
dec
roll
popf
xor
pop
imul
mov
or
test
imul
adc
mov
ret
add
push
ret
cmp
popf
loope
jbe
fidivrl
iret
fsub
add
jl
ja
mov
clc
insl
lds
add
fiadds
xchg
mov
nop
int
popa
add
pop
lcall
test
mov
imul
ret
jbe
xlat
mov
mov
arpl
into
fucom
ljmp
xor
pop
fstl
rcl
arpl
xor
scas
jb
jne
jbe
outsb
and
and
cmp
mov
faddl
call
push
pop
data16
cmp
cmp
cmp
in
xchg
xchg
daa
insl
out
rcrb
xchg
xor
ja
roll
pop
cmpsb
iret
pop
fisubs
imul
jp
ljmp
xchg
xchg
inc
cmp
mov
mov
arpl
call
sbb
mov
icebp
shrb
loopne
rcr
cmp
enter
scas
dec
push
adc
add
pop
mov
or
jae
bound
inc
cmpsl
push
push
imul
in
dec
pushf
mov
add
mov
ss
orl
mov
fsubrp
mov
ljmp
call
insb
pop
movsl
cmpsb
dec
jo
mov
sbb
sub
mov
cmpsb
sub
std
mov
mov
fs
cmp
jb
xorl
cltd
adc
xor
mov
cmpb
sub
or
adc
mov
fwait
pop
fsubrs
lock
clc
js
ljmp
cmp
cltd
imul
fisubl
loopne
fldcw
loop
lods
imul
jns
orb
cmpsl
push
xchg
test
jle
push
inc
imul
fldenv
jns
or
imulb
sahf
xor
adc
jp
pop
push
loop
pop
mov
mov
outsl
pusha
adc
inc
pop
icebp
inc
mov
mov
in
mov
std
lock
adc
lret
jg
push
push
push
xor
stos
xor
ret
mov
sbb
sbb
xchg
push
hlt
push
test
add
xchg
fdivs
fnstenv
sub
mov
iret
add
test
lret
push
or
cmp
adc
and
fildll
loopne
push
sahf
test
lods
pop
icebp
je
xchg
sti
mov
dec
call
sbb
pop
dec
jecxz
mov
sub
lds
and
ja
in
add
jmp
cmp
cmp
aaa
fildll
imul
addr16
jp
mov
pop
push
or
dec
ja
adc
xchg
xchg
out
mov
pop
aad
mov
call
pop
sbb
rcll
aad
incb
xchg
addsubps
sbb
mov
xor
or
dec
lods
inc
xchg
mov
jo
jb
or
mov
mov
xlat
aad
adc
xor
sbb
mov
cmc
test
sbb
cmp
push
nop
push
ret
mov
mov
or
add
lock
aaa
popa
aas
imul
and
mov
add
inc
mov
ss
mov
mov
sub
and
add
mov
loopne
mov
je
xlat
jno
fmull
inc
mov
sbb
sar
jg
fsubl
insb
mov
ficomps
xchg
ds
dec
push
and
mov
push
ret
popa
add
and
aas
ret
in
and
fcoms
stc
nop
std
xor
loopne
or
jg
adc
cmc
sbb
mul
mov
icebp
insl
pushf
jp
xchg
inc
adc
adc
dec
test
testl
cmp
dec
in
aam
out
inc
sti
lret
mov
mov
inc
and
fstpl
andb
test
sub
scas
lret
adcb
or
mov
jecxz
xchg
or
jne
xor
sub
dec
pop
arpl
mov
xlat
dec
sbb
inc
lret
call
sub
imul
fcmovnb
cmc
arpl
lds
xchg
ljmp
inc
dec
or
mov
xchg
daa
test
xchg
cld
jmp
mov
inc
test
les
jns
cltd
mov
in
push
loope
mov
cmpsl
push
adc
ja
test
or
or
stos
xchg
or
inc
testb
testb
nop
js
jno
sub
jno
cli
test
daa
stos
sub
in
js
xchg
and
loopne
jbe
add
rcr
lea
addr16
and
mov
inc
sbb
jb
bound
mov
stos
test
push
les
movsb
movsb
loop
mov
in
push
mov
call
ror
cmpsb
sub
xchg
xor
inc
dec
fstpt
aad
shlb
pop
inc
adc
out
repnz
mov
test
shl
lods
jne
iret
pop
cmpsl
inc
bound
das
or
outsl
sbb
cmpsb
icebp
adc
popf
pop
pop
sub
push
mov
cmc
cmpsl
subl
jge
jp
and
fwait
adc
lea
mov
loope
jmp
icebp
movsl
das
jne
cmp
mov
rcl
in
stos
testl
enter
and
and
inc
pop
cmp
jo
arpl
ret
je
lahf
cmp
call
inc
push
in
out
jg
push
mov
test
fwait
daa
scas
fucom
mov
mov
jo
ja
mov
dec
mov
mov
loopne
xlat
rcll
les
jno
rolb
call
lret
sub
cmp
inc
jp
aad
imul
cmp
fstpl
das
int3
mov
or
xchg
shrl
mov
xchg
and
xor
stc
mov
inc
lds
mov
mov
mov
adc
cmp
aas
add
les
xchg
std
popf
mov
dec
add
movsb
add
cmp
rcl
dec
sbb
lret
lret
pop
idivl
adc
mov
xor
mov
decb
clc
xor
cld
pop
mov
outsl
int
jo
inc
js
pop
inc
mov
sbbb
jge
fisttpll
mov
es
mov
outsb
pop
adc
jl
cmp
es
addr16
repz
sbbl
push
fiadds
fwait
popf
mov
mov
pop
dec
and
xchg
mov
add
mov
lods
push
jp
push
aad
and
mov
roll
dec
mov
int3
fldenv
testl
or
sbb
out
imul
stos
rol
lods
fdivl
cld
add
push
dec
mov
test
jmp
dec
jne
pop
and
or
imul
mov
addr16
push
adc
or
rclb
ficoms
in
gs
cli
nop
das
xchg
shlb
pop
mov
clc
pop
cmpsb
rolb
jge
add
aaa
mov
cwtl
cmp
movsb
dec
fnstcw
sub
mov
jecxz
jecxz
jnp
jne
fmull
dec
ds
ret
cmc
xor
xchg
into
xchg
push
ss
fiaddl
leave
mov
int3
sub
mov
xchg
leave
adc
les
or
adc
push
sahf
pop
xor
mov
sbb
xor
scas
popf
mov
pop
je
pop
add
mov
inc
notl
mov
dec
jg
stc
xor
cmpsl
call
addl
fnsave
shlb
movsb
adc
cmp
in
leave
inc
xchg
sbb
rolb
mov
hlt
add
aad
push
inc
push
int
es
mov
mov
imul
cmp
xchg
scas
divb
mov
add
cwtl
and
loop,pt
into
jb
loope
bound
dec
jno
insb
stc
out
fdivp
dec
mov
pop
scas
mov
pop
call
clc
shlb
adc
mov
test
or
insb
fs
movsb
dec
mov
push
xchg
dec
xchg
xchg
clc
shlb
xor
push
push
sbb
mov
push
add
rorl
clc
into
cmp
enter
push
test
stc
xchg
jp
and
popf
cld
and
aad
mov
mov
loop
add
into
gs
dec
xchg
xchg
push
movsl
jp
xchg
das
repnz
jmp
mov
pop
push
dec
sbb
sbb
mov
xor
lea
sub
jg
xor
push
mov
jmp
out
push
fwait
or
inc
pop
dec
inc
and
testb
push
insb
push
and
sbb
icebp
or
or
in
cmpsl
add
mov
ret
arpl
push
in
mov
test
popa
or
mov
aaa
bound
stos
push
les
inc
ret
sahf
sbb
dec
pop
dec
sbb
xor
out
pop
ljmp
inc
sub
xchg
test
mov
push
movsl
push
cmp
sbb
idivb
cmpsb
dec
push
dec
inc
orb
cwtl
aad
jb
pop
jb
lahf
unpcklps
cmp
sbbb
das
out
test
pop
in
cmp
cltd
inc
xlat
sbb
scas
mov
mov
inc
pop
mov
jae
xchg
nop
add
push
lods
and
loop
pop
or
lcall
mov
mov
sub
fstpl
pop
jl
repz
xchg
push
stos
movsl
popa
lods
or
sbb
subb
xor
iret
sbb
jmp
xor
roll
dec
inc
push
jbe
rcrl
out
xor
jo
stc
fsubrs
aad
out
mov
add
dec
decb
cmp
xchg
test
mov
shll
dec
cmp
mov
cli
pop
stos
in
mov
or
jl
inc
aam
es
rol
jno
stos
rdpmc
and
into
dec
adc
jp
xor
mov
mov
pop
mov
adc
mov
mov
jo
push
cmpsl
movhps
bound
push
fimuls
and
inc
std
pop
mov
js
add
scas
add
mov
aam
and
or
scas
mov
out
test
adc
push
aas
pop
add
lods
cmp
mov
es
push
jno
outsl
popa
mov
or
ficomps
sub
lods
jmp
pop
pop
pop
insb
cmp
xor
mov
sbb
aad
inc
popa
inc
shll
push
pop
jmp
add
outsl
mov
cmpb
jl
xchg
in
sub
popf
incb
pusha
add
or
sti
pop
je
inc
mov
sbb
in
pop
sahf
push
imul
sub
jecxz
pop
or
adc
mov
test
lea
inc
in
mov
js
repz
mov
testl
lret
inc
xor
xlat
mov
jbe
jnp
data16
jno
leave
cmp
and
lods
roll
cmp
mov
inc
in
jo
int3
or
pop
add
sbbb
cs
xor
jno
dec
leave
mov
out
xchg
incb
imul
and
in
cmc
into
cmp
cltd
xchg
xor
mov
lods
cld
and
leave
xchg
push
arpl
mov
xchg
and
lss
std
sub
divb
hlt
cli
adc
cltd
jnp
imul
repz
mov
xlat
mov
cmpl
sub
fcmovnbe
mov
mov
mov
xlat
push
movsb
filds
cld
mov
test
add
push
cli
stos
ret
jnp
fwait
outsl
fs
or
imul
ljmp
jp
fcoml
push
or
push
fcmovbe
popl
inc
xlat
pop
insb
in
sbbl
enter
insl
dec
jle
mov
hlt
shlb
pop
push
filds
push
xchg
sbb
xor
jmp
xor
lret
call
adc
push
jne
clc
adc
ljmp
je
add
add
jge
xor
sbb
aad
pop
xchg
cmc
adc
sub
cwtl
mov
nop
add
inc
mov
cmc
sahf
adc
or
mov
or
sub
repz
in
mov
icebp
insl
lahf
push
pop
adc
mov
jge
xor
adc
sbb
inc
in
cmp
mov
push
dec
movsl
push
in
dec
popl
or
js
xor
pop
cmpb
mov
leave
mov
lret
aaa
in
lea
mov
xor
mov
nop
and
nop
loopne
das
adc
roll
sbb
cltd
mov
mov
in
sbb
in
sbb
xor
cmc
xchg
cld
rcl
cmpsl
and
rorl
push
xchg
adc
add
arpl
div
push
lret
push
cli
aaa
adc
mov
xchg
incl
adcl
repz
in
jg
jns
rol
jle
rcl
mov
or
cmp
jge
rorb
sbb
jb
jle
jno
aas
fmul
adc
sti
int3
repz
mov
mov
lret
mov
insb
sbb
add
call
enterw
cmp
test
pop
mov
psubsb
push
js
mov
push
cmp
xchg
loop
pop
hlt
inc
sub
dec
jmp
push
push
sub
mov
mov
cmp
cmpsb
xlat
repz
jo
push
in
pop
in
ja
pop
cmp
call
xchg
imul
cmpsb
sbb
and
fistpll
ds
out
add
aam
sub
xchg
or
mov
adc
jno
fs
ss
leave
pandn
xchg
pop
inc
out
ljmp
sub
pop
adc
in
dec
cmpsl
andb
rorb
jl
outsb
repnz
pop
repnz
ljmp
push
jno
sbb
jbe
push
jle
ret
and
aaa
std
or
mov
in
xchg
sub
mov
and
testb
push
dec
pop
adc
adc
sbb
jmp
xabort
sbb
es
pop
bound
adc
arpl
sarb
jne
sahf
xchg
in
out
and
pushf
push
lret
mov
mov
sbb
shlb
dec
jne
mov
fs
dec
cltd
ret
cmpsl
adc
popa
pusha
cmp
adc
andl
or
or
jne
data16
js
xor
push
dec
out
aad
dec
lock
mov
mov
das
sbb
adc
clc
xchg
pop
push
sub
cwtl
or
inc
loopne
jp
add
inc
inc
fsubrs
push
lret
adc
and
loope
xchg
xchg
sub
xchg
fimull
rorb
and
lock
xchg
cs
sahf
cwtl
and
mov
nop
ja
iret
cmpsl
dec
nop
mov
mov
xor
sub
push
jecxz
dec
xchg
inc
xor
mov
loope
iret
jl
lahf
inc
push
fs
adc
inc
cmpsb
sub
int
sub
mov
push
adc
test
xchg
mov
inc
and
and
movsl
mov
lahf
repz
xchg
stc
xor
add
out
dec
xchg
cli
pusha
push
outsl
jne
and
ja
xchg
cmc
inc
and
push
sub
add
mov
add
sub
mov
aaa
jecxz
xchg
jmp
inc
cmpl
icebp
dec
ret
negl
push
sub
pop
xor
sbb
std
and
push
adcl
pop
bound
dec
xor
adc
sub
icebp
cltd
insl
sub
sbb
lods
sub
or
adc
aad
test
adc
fidivrs
subb
orb
jge
stc
imul
mov
mov
jnp
outsb
out
dec
add
int3
jp
add
iret
mov
mov
scas
xlat
xchg
inc
xchg
rorl
mov
mov
mov
jbe
sbb
and
in
mov
sub
mov
aaa
push
mov
pop
addr16
mov
idivl
ja
pusha
scas
gs
ljmp
mov
and
xchg
in
pop
mov
imul
sti
push
stos
mov
mov
out
movsl
enter
inc
je
or
mov
hlt
fsubrl
jecxz
fldt
loope
cmp
ljmp
mov
mov
test
enter
call
pushf
mov
test
int3
sbb
dec
fbstp
paddusb
stos
or
inc
mov
scas
xchg
out
adc
mov
xchg
cmp
pop
std
jp
sbb
out
int
es
push
add
xchg
push
hlt
ja
xor
jno
mov
out
sub
push
rcll
lea
call
mov
js
push
and
stos
in
lret
fwait
and
out
cmc
insb
xlat
lret
cmp
xor
adc
mov
pop
sbb
dec
pop
inc
aaa
ficoms
in
and
inc
filds
scas
xlat
cmp
jmp
fidivrl
fisubrs
scas
push
pop
adc
inc
jle
jecxz
cmp
out
fnstsw
lcall
sub
ljmp
faddl
push
packsswb
mov
push
movsb
lret
addr16
and
aam
pop
or
xchg
incl
jo
addl
push
scas
add
movsb
ficomps
xchg
imul
mov
fwait
xchg
repnz
sbb
and
cmp
mov
xchg
test
mov
enter
dec
pusha
enter
out
push
sub
and
xrelease
outsl
dec
ja
and
xchg
fsubs
push
jg
jb
xor
hlt
xor
xchg
hlt
jns
mov
test
jb
cmp
mov
mov
inc
out
cmc
mov
xor
pop
cmp
jl
fisubrs
test
in
addr16
sub
dec
mov
out
sub
push
mov
mov
lcall
imul
outsl
cltd
leave
scas
cltd
mov
mov
gs
sub
bnd
test
xchg
push
insl
sahf
and
jp
jnp
mov
aaa
inc
jecxz
add
cld
shl
cmp
out
mov
fisttps
push
ljmp
lret
cmpsb
popf
shrl
test
idivl
test
cwtl
cmp
inc
pop
je
cmc
push
out
test
aam
subb
popa
xor
push
and
jle
loop
sbb
inc
xchg
cld
mov
pop
shlb
mov
test
ds
mov
std
movsl
pusha
ljmp
jl
mov
out
sub
or
sub
pop
into
xchg
out
mov
sbb
outsl
lea
negb
loope
std
xchg
jo
les
popa
sti
shll
test
jb
add
js
in
push
add
push
push
decl
andb
outsl
dec
and
or
mov
je
je
inc
mov
loope
mov
pop
stos
pop
mov
sbb
out
stc
dec
addb
adc
inc
mov
das
mov
adcl
ja
add
mov
jge
and
push
pop
clc
fldcw
pusha
icebp
dec
aaa
popa
leave
mov
mov
scas
loope
leave
pop
push
jl
mov
aas
int3
pop
fcmovnb
scas
dec
xor
fwait
je
or
push
mov
or
jecxz
lcall
pop
loopne
mov
jg
pop
jge
pushw
or
mov
stc
popf
test
sti
mov
je
sub
inc
in
jl
das
lds
and
or
popf
out
test
push
rolb
sub
xor
xchg
stc
xor
xchg
dec
mov
icebp
and
add
sbb
push
xchg
pop
out
push
cmp
add
shr
scas
sub
fsubr
or
adc
lods
ficomps
cmp
inc
mov
jae
mov
bnd
fldl
jbe
cmp
jg
and
pop
jge
adc
and
fdivs
daa
pop
xchg
xor
outsl
nop
inc
jae
lret
outsl
add
daa
fsubrs
dec
test
scas
lret
in
out
or
mov
jne
mov
jl
mov
sub
or
call
les
jmp
mov
cmp
jg,pt
leave
or
test
scas
sub
mov
mov
int3
std
cmpsl
mov
xlat
fwait
or
xchg
pop
clc
into
push
out
std
ds
and
test
aaa
jbe
mov
mov
xchg
loop
cli
rorb
pop
mov
outsl
adcb
jmp
rclb
test
cwtl
dec
imul
push
inc
in
cmp
add
ret
fmul
movsl
shll
mov
out
iret
mov
pushf
jbe
in
mov
addb
test
jne
xchg
jp
popf
rclb
cmpsb
out
mov
ret
mov
ficompl
mov
sbb
movl
je
jne
fnsave
jle
dec
nop
mov
add
out
sub
jbe
jl
pop
nop
inc
aad
inc
push
pop
scas
fisubs
aas
dec
cmp
cmpsb
jns
les
int3
sbb
shll
mov
mov
sbbl
push
push
add
push
mov
mov
lods
outsl
xchg
cmp
inc
cmp
aam
repz
ja
ficompl
js
pop
dec
popa
cmc
adc
std
mov
jbe
lahf
sub
mov
outsl
pusha
call
jecxz
push
xchg
arpl
fisttpll
mov
js
push
das
ljmp
sahf
mov
xor
xor
ficoms
incl
add
movsl
push
arpl
push
mov
sbb
pop
jno
outsb
jmp
idivb
xchg
test
aam
cltd
in
fiaddl
push
and
pushf
adc
sbb
insb
das
popf
loopne
ljmp
or
mov
dec
and
lods
push
jae
mov
or
addl
clc
nop
out
arpl
cmp
adc
inc
addr16
sbb
pushf
jo
xor
jnp
addr16
idivb
and
or
fcoms
rcr
xchg
push
mov
inc
dec
stc
ficompl
xchg
add
adc
add
pop
inc
lcall
mov
and
je
mov
in
stos
or
aam
mov
cmp
sub
lahf
mov
fwait
pusha
jb
ss
xchg
lahf
ds
add
jbe
subb
pop
and
mov
xor
and
cmp
enter
jns
jno
mov
aaa
movsb
lds
je
lods
dec
jae
and
pop
pop
adc
or
push
pop
in
push
fs
xchg
gs
jl
fnsave
xor
or
cmp
in
mov
mov
icebp
or
int
das
inc
scas
cmpsl
and
arpl
jmp
sub
das
pop
in
stc
inc
mov
and
or
negb
rcr
arpl
mov
xchg
or
adc
dec
adc
adcb
outsb
sbb
mov
or
dec
in
popa
cmp
insb
sub
or
ja
push
cmp
xchg
sbb
cmp
lods
pop
scas
add
adc
jns
clc
popa
ds
sbb
lcall
pop
adc
cmp
fsin
cmpsb
mov
sarl
stos
dec
lahf
jle
lds
jnp
jae
scas
cltd
jbe
jnp
sub
repnz
inc
mov
push
je
inc
adc
je
rorl
sbb
xor
add
dec
add
dec
inc
xchg
and
ljmp
pop
fcoml
mov
push
or
push
and
cmpsb
jno
sbb
popa
xor
test
pop
cwtl
stc
outsl
lcall
push
adc
rcll
mov
scas
mov
dec
aad
add
jbe
jl
sbb
adcb
clc
dec
sub
clc
sahf
aam
lea
in
or
call
adc
xor
jb
cmp
mov
mov
lea
add
jg
sub
push
push
sbb
sub
pop
pop
outsl
mov
sti
dec
loope
les
popf
xchg
and
ja
into
sarl
push
aaa
je
xchg
adc
push
mov
inc
cmp
lret
iret
shrl
loopne
es
pop
jno
sbb
test
or
add
xor
fistpll
shll
rorl
out
mov
inc
push
pop
mov
jl
popf
xchg
and
pop
sub
sub
out
out
and
xor
sub
bound
bound
pop
push
mov
test
jns
movsb
clc
jbe
ljmp
mov
xchg
inc
mov
lea
and
xchg
mov
inc
xor
in
and
add
sub
imul
cmp
idiv
and
mov
mov
xor
sub
jno
adc
pop
lret
ret
push
push
mov
mov
add
adcl
addr16
cwtl
ss
scas
out
mov
lods
mov
inc
test
cld
inc
inc
mov
and
add
sbb
cltd
bound
repnz
movsl
xchg
leave
xchg
fildl
dec
mov
pop
cmpsb
sbb
gs
aam
pop
aam
cmp
mov
xchg
inc
adc
push
scas
pusha
int
dec
xchg
and
dec
push
push
push
dec
nop
sub
cld
push
scas
jnp
les
jns
mov
cmova
pop
loope
in
adc
int
or
xor
dec
int
imul
jns
xchg
push
inc
inc
and
xchg
leave
scas
adc
ret
mov
adc
xor
sbb
stos
movsl
or
bound
sub
ss
push
les
fnstcw
and
int
stos
ljmp
xchg
imul
sahf
popa
push
ljmp
jge
movb
mov
cmp
test
les
fldenv
inc
and
fisttpll
lret
sub
and
imul
jns
push
inc
test
add
test
out
lret
xor
lock
adc
jno
shrl
dec
pop
stc
inc
clc
lret
push
in
fwait
xlat
daa
shrb
lods
adc
clc
adc
mov
rcr
out
sub
pop
dec
xchg
mov
notl
popa
dec
push
mov
insl
nop
shrb
lock
addr16
jbe
adc
inc
inc
mov
mov
mov
icebp
ja
pop
and
std
push
call
adc
mov
leave
mov
xchg
xor
cli
xchg
sarl
push
xchg
in
in
dec
inc
ss
in
xchg
jne
add
jg
int3
daa
xor
imul
enter
stc
fwait
xor
loop
dec
jae
fadd
aad
add
jmp
pop
and
or
mov
scas
inc
mov
lods
xor
inc
mov
inc
mov
pop
mov
jne
sbb
imul
mov
test
aaa
ret
mov
push
in
dec
and
retw
xor
add
push
and
ret
xchg
into
sub
jb
add
jo
mov
dec
xchg
adc
mov
pop
mov
dec
cld
scas
ret
pusha
aad
push
jno
lock
mov
int
out
arpl
aaa
sbb
dec
stc
jmp
jb
fs
push
pop
mov
or
aad
and
insb
fstps
lret
add
mov
into
or
xor
ret
and
loope
sub
push
cs
pop
and
mov
popa
dec
jnp
sbb
xchg
scas
sbb
add
mov
mov
pop
cltd
scas
inc
shr
dec
dec
int3
sahf
out
add
mov
test
nop
push
push
xor
popa
sub
leave
adc
add
mov
push
clc
mov
jmp
js
push
mov
lahf
xchg
mov
adc
xor
sbb
push
and
push
inc
and
outsl
in
jne
mov
lods
xor
rcrl
jge
ss
push
insl
clc
jmp
mov
std
test
cmp
pop
nop
sbb
sub
rolb
movsb
fidivrs
repz
sbbb
or
test
and
push
cltd
js
jbe
in
fcmovbe
aam
hlt
out
pop
out
mov
adc
mov
inc
sbb
movsb
mov
data16
jne
xchg
and
pop
add
dec
cmp
fdivrs
orl
into
pop
mov
in
pop
sub
rsqrtps
inc
jle
adc
xor
shll
adc
call
add
pop
mov
pop
pop
jbe
addr16
negl
cltd
or
push
sbb
and
addl
jge,pt
xor
pop
or
imul
jo
xchg
xorb
int
fisttpll
int
cs
out
and
xor
daa
imul
fcomps
sbb
or
aas
xor
call
cmc
sbb
add
scas
xor
pop
repz
mov
pushf
xlat
fs
repz
dec
jle
lret
iret
jns
imul
mov
pop
lret
mov
dec
cmpsl
sub
xchg
test
nop
cmp
aam
sub
mov
xchg
xchg
add
add
adc
mov
jge
fdivl
adc
jecxz
divl
fs
xor
jb
jle
and
mov
jp
clc
outsb
mulb
lds
loop,pn
cmc
push
xor
out
out
mov
scas
addb
insl
or
fcomp
xchg
dec
sub
aaa
xchg
push
add
aad
pop
or
data16
int
and
xor
pop
in
insl
mov
and
jecxz
jnp,pn
mov
out
or
rolb
loopne
popa
xchg
insl
inc
add
push
mov
xor
dec
incb
sbb
xchg
sbb
out
shl
stc
xor
js
test
fcomps
mov
inc
je
adc
js
dec
mov
add
mov
pusha
insl
inc
and
ss
fcmovnb
call
loope
test
lcall
dec
aam
adc
fldl2e
movb
call
sbb
mov
jl
sbb
stc
and
xor
xchg
mov
into
sbb
mov
inc
lods
call
daa
sbb
fdivr
sub
pop
cli
sbb
inc
cmp
scas
nop
iret
sbb
cmp
fnstenv
mov
cmp
fwait
mov
test
mov
fucomp
and
popf
ficompl
cmp
xchg
cmp
xor
cmp
mov
int
shlb
push
dec
push
sbb
cltd
add
out
dec
and
sbbb
aam
pop
xchg
repz
ljmp
lahf
push
mov
and
in
je
mov
or
xchg
test
mov
pushf
into
push
repnz
push
xchg
rorl
cmp
out
cmp
fistps
jmp
cmp
xchg
jl
cltd
xchg
jle
sub
jae
adc
sbb
mov
in
pop
push
fisttpll
rcr
cmc
notl
xchg
mov
push
sub
cmp
add
insl
jp
lds
rcll
sub
mov
xchg
mov
andl
jmp
xorl
cmpsl
sbb
dec
in
sti
cmp
cmpsl
mov
leave
add
rcrb
jbe
imulb
inc
cmp
in
sbb
mov
mov
sti
xchg
pop
cwtl
loop
jp
outsl
and
inc
in
insl
mov
gs
fnsave
adc
jmp
dec
and
sbb
cmp
stos
jo
pop
ljmp
test
mov
pushf
add
jecxz
mov
jnp
dec
movsb
inc
shll
mov
sbb
push
loope
add
xchg
out
dec
cmp
addr16
in
mov
enter
test
aam
dec
fdiv
and
shlb
inc
loop
jnp
xlat
pop
gs
decb
mov
push
aam
sub
ljmp
int3
stos
imul
fdiv
push
ds
mov
pushf
je
in
jge
xor
outsl
mov
int3
mov
lods
popa
mov
lea
fimuls
mul
cmpl
cmp
cwtl
or
lcall
pop
nop
jecxz
mov
ja
pop
xchg
jle
int3
or
inc
sub
mov
sbb
stos
or
and
bound
ds
dec
mov
jnp
rclb
call
stos
aaa
cmc
mov
xchg
jmp
ljmp
mov
xor
pushf
jle
lahf
ds
call
xchg
pop
fimuls
test
pop
inc
xor
push
xchg
insb
mov
jge
push
fcoml
cmp
testb
add
subl
daa
movsb
enter
sub
icebp
sbbb
adc
jnp
rolb
cltd
pop
ss
sbb
addl
inc
lea
lds
xchg
sbb
xchg
jno
test
xor
push
gs
fs
mov
lret
cwtl
aaa
sbbb
mov
pop
in
sbb
movsl
pop
and
clc
daa
sub
and
aad
jns
call
lret
imul
aaa
rorb
push
xchg
xchg
cltd
push
xchg
js
inc
cmp
leave
cld
ficompl
pop
mov
lods
leave
test
loop,pn
dec
into
mov
movsl
push
clc
cmp
sbb
push
and
cmp
sbb
inc
vpunpckhbw
cmp
and
jnp
or
stc
loopne
mov
addr16
scas
and
clc
jl
mov
jl
decb
fbstp
lds
lahf
sahf
ljmp
leave
mov
sub
or
test
movsb
push
mov
imul
adc
jb
jp
outsl
push
lahf
test
adc
pop
nop
cmpsl
jae
dec
sub
dec
lods
lret
nop
pop
negl
dec
icebp
and
jecxz
dec
inc
mov
mov
mov
xor
mov
out
xor
add
jmp
jmp
movsb
jo
ret
stos
adc
sub
mov
jne
stos
mov
outsl
add
cmp
repz
mov
iret
mov
bound
xor
pop
jnp
and
sub
ret
and
jne
add
jo
in
dec
daa
pop
add
loopne
movsb
xchg
adc
dec
divb
out
or
pop
mov
mov
pop
mov
jge
mov
jmp
jbe
enter
icebp
jg
shlb
mov
push
jne
test
mov
jecxz
inc
lahf
inc
push
loopne
adc
test
jg
iret
shlb
mov
lret
cmp
subl
mov
lret
jmp
jnp
xchg
mov
sbb
push
add
or
or
ja
pop
ss
adc
pop
scas
pop
sbb
mov
xor
pop
xchg
mov
addl
add
mov
jl
lds
jmp
std
mov
inc
pop
pushf
jmp
mov
sti
xchg
loop
sarb
mov
xchg
test
jmp
pop
pop
outsl
sbb
sbb
lock
push
je
icebp
pop
testb
inc
mov
in
ret
push
repz
cmpsl
cmpsl
std
dec
add
test
inc
and
and
push
in
sahf
mov
mov
out
ja
int3
daa
cltd
xor
xchg
push
cmp
pop
pushf
xchg
sbb
sbb
lock
or
pop
movsb
jge
push
pop
xchg
es
cmp
mov
shlb
cmp
add
jecxz
mov
jo
cmp
pop
add
repnz
fdivrl
ljmp
inc
mov
xor
mov
sahf
in
xchg
inc
lcall
add
subl
adc
in
push
fists
mov
int
stc
add
cmpb
cmp
xor
test
inc
lcall
jo
in
mov
sub
loope
jecxz
leave
jae
inc
xor
icebp
adc
pop
stos
insb
inc
addl
stc
xor
mov
cmp
sbb
inc
sub
js
popf
mov
repz
into
adc
ss
fisttps
lahf
mov
push
jmp
mov
mov
sahf
jnp
mov
jo
bound
mov
pop
sahf
jbe
stc
and
push
xlat
pushf
xor
push
daa
mov
neg
cmp
ret
jmp
lcall
xchg
xor
sbb
or
les
pop
push
add
loope
sbb
in
xlat
add
mov
mov
out
je
pop
sbb
mov
add
push
xchg
call
add
loopne
mov
pop
repnz
sbb
and
in
push
xor
pusha
pop
js
mov
imul
out
jl
insb
sti
hlt
or
mov
push
in
jmp
movsl
fwait
jne
add
mov
mov
int
jmp
inc
adc
mov
outsb
rolb
enter
into
mov
adcb
xchg
xchg
xchg
inc
push
cltd
into
sub
imul
and
dec
pop
inc
push
push
sub
dec
fldt
out
xor
adc
pushf
sbb
or
lods
xchg
mov
push
enter
jns
adc
out
lods
lock
int3
push
ja
shll
xor
sbbb
xor
cmp
aad
cmpsb
cli
pop
cwtl
pop
or
stos
sbb
inc
push
cmp
pop
outsl
push
mov
loopne
ja
mov
roll
or
pop
push
orb
jmp
dec
pop
cmpsb
push
jne
inc
pushf
and
inc
mov
mov
adc
and
push
outsb
rcrl
mov
sub
call
jno
fists
cmp
cmp
lcall
pop
fs
dec
xor
xor
out
sbb
pop
mov
scas
jbe
adc
test
jno
dec
xor
cmpsb
mov
pop
sbbb
jecxz
ljmp
mov
add
sub
in
aas
push
jp
aaa
mov
jmp
movsl
xor
stc
ja
fdivrs
jp
lret
xor
jge
lods
mov
call
je
iret
fistl
dec
push
mov
sbb
jp
sub
add
or
jmp
je
sarb
outsl
cmp
add
ret
popf
mov
insb
nop
pop
mov
mov
mov
mov
mov
xchg
ds
cmp
not
sub
xor
sub
das
test
jnp
pop
lea
addr16
mov
imul
jo
imul
leave
insl
int
loopne
jnp
stos
ss
xchg
push
jb
and
mov
cmp
xchg
ret
orb
imul
test
fs
jge
dec
cmp
std
push
jb
cmpsl
pop
in
scas
mov
mov
sbb
stc
mov
xor
sarl
add
popf
lret
iret
xchg
pop
ret
fs
cltd
jae
pop
add
in
or
loope
stc
fisubrs
cs
xchg
or
gs
mov
ds
loopne
adc
clc
cmpsl
outsb
fadds
loop
ljmp
lcall
or
xchg
jecxz
les
xor
sahf
lods
mov
add
dec
add
mov
fidivrs
mov
decl
xlat
movb
dec
mov
push
imul
lret
and
xor
emms
fbstp
mov
sahf
lock
test
stos
pop
push
cmpsb
dec
add
iret
mov
sbb
add
jno
adc
and
imul
out
fincstp
mov
or
mov
xchg
lock
fbstp
int3
jnp
mov
mov
out
mov
mov
sub
or
outsb
in
fstl
mov
push
sub
pop
fiadds
into
scas
and
imul
mov
xchg
sub
addb
adc
test
pop
cmpsl
into
test
cmpb
clc
mov
cmpsl
pop
icebp
jmp
and
imul
jnp
sbb
xor
add
outsl
inc
mov
addl
or
in
jb
mov
les
fisubrs
push
adc
jae
sub
lds
jb
xchg
push
xchg
repnz
cmp
dec
negb
jae
aas
scas
add
sub
and
push
in
inc
dec
sbb
loopne
sbb
xchg
mov
arpl
sub
mov
loop
inc
and
loopne
jge
sub
dec
pop
std
arpl
test
adc
fwait
sbb
sub
pop
or
sbb
mov
outsb
sahf
aaa
push
dec
scas
sbb
mov
push
xor
sub
cli
shll
cmp
popa
iret
push
rcr
cmp
push
or
cmp
jae
xchg
or
out
repnz
imul
jle
add
dec
int3
pop
stc
lret
push
add
mov
dec
adc
fchs
dec
movsb
xor
fs
pop
ljmp
sahf
cmp
cli
ret
scas
inc
and
mov
fimuls
iret
mov
pop
in
add
dec
stos
in
sub
inc
repz
in
jne
jno
adc
cmp
mov
testb
std
clc
mov
or
sbb
mov
xchg
xchg
mov
outsl
pop
and
inc
flds
test
lea
push
sub
fdiv
jae
sub
xor
ret
mov
pop
or
jbe
push
mov
out
or
push
es
mov
into
add
stos
dec
leave
pop
mov
jne
push
leave
jl
sbb
stos
das
mov
lcall
repz
popf
das
mov
cwtl
fcmovu
or
in
push
or
jp
pop
pop
std
push
dec
mov
scas
xchg
mov
imul
xchg
cmp
test
lcall
jmp
adc
mov
mov
mov
sahf
adc
sub
add
sub
jae
sub
cld
push
cmp
adc
lahf
leave
ds
xchg
js
add
xchg
je
mov
adc
scas
insb
inc
mov
scas
dec
sub
outsl
sub
pop
enter
lea
jecxz
pop
sub
into
mov
xchg
sub
jnp
into
cmpsl
imul
sbb
xor
popf
loopne
mov
push
lret
shll
in
xchg
insb
je
sbb
jbe
decb
lds
add
hlt
ret
in
xchg
push
push
imulb
scas
aaa
std
xchg
in
mov
sub
dec
jae
adc
repnz
jle
gs
jo
push
cmp
dec
je
sti
jbe
test
imul
sub
shl
mov
test
aam
ja
sub
cwtl
or
call
mov
mov
mov
insb
push
mov
std
xor
jmp
sarb
loope
addl
popa
popa
or
mov
lret
push
mov
xchg
fwait
mov
push
sub
ja
mov
in
xchg
and
sbb
outsb
xlat
dec
xor
dec
inc
ror
dec
mov
nop
jne
sbb
inc
fisubrl
cmp
je
or
adc
repnz
adc
fdivrp
es
cmpsb
adc
push
ljmp
sbb
ret
sub
popf
inc
xchg
shlb
cmc
in
xor
adc
subl
cmp
leave
cli
aad
ret
lea
scas
xchg
pop
inc
enter
lods
sbb
jmp
test
fisubrl
lret
shrb
cmpl
inc
xchg
xchg
insl
or
icebp
iret
int
pop
jbe
icebp
dec
lods
outsb
jecxz
fsub
mov
sub
scas
pop
out
out
cmp
adc
sarl
xor
sub
stos
mov
mov
jle
adc
mov
repz
xchg
pop
xchg
loop
sbb
ljmp
ret
in
je
stos
jl
adc
je
add
mov
cltd
push
and
add
pop
pop
adc
push
cmc
mov
shrl
testl
jno
mov
pushf
jb
sbb
adc
js
pop
cwtl
cwtl
iret
jno
cmc
jo
scas
imul
sub
mov
push
repz
in
push
daa
aas
fstps
scas
outsl
out
gs
mov
sbb
inc
mov
pusha
pop
cmpsb
mov
mov
sub
cltd
cmp
lods
mov
pop
pop
pop
mov
inc
dec
cmp
jne
xchg
out
fisubrl
outsb
cli
push
stos
dec
add
jg
loope
divl
push
mov
push
out
call
mov
insb
and
leave
pop
and
xor
jae
leave
push
and
testb
mov
arpl
inc
mov
sbb
pop
cs
out
jmp
lret
mov
mov
and
pop
sub
xchg
sbb
mov
or
dec
repz
jmp
jns
mov
dec
cmp
inc
dec
in
arpl
adc
in
ljmp
ds
fisttpll
push
mov
cmp
loopne
cmp
sahf
jae
add
sub
cmp
sub
jo
je
xchg
cld
nop
outsb
cmp
jge
mov
lahf
jo
mov
mov
gs
jbe
xchg
xor
jne
mov
aas
mov
es
and
out
mov
adc
xor
jl
dec
imul
push
fnstsw
ljmp
js
ljmp
ss
ret
subl
xor
pop
addr16
pop
inc
and
jnp
loope
leave
out
lods
pop
ss
subb
loope
data16
pop
and
or
out
dec
test
insl
adc
mov
pop
xchg
xchg
lea
dec
inc
dec
out
sbb
popa
icebp
outsl
push
loope
and
mov
mov
cmp
hlt
fiadds
add
xchg
pop
mov
out
fimull
mov
ds
xchg
xor
jno
push
repnz
dec
movsb
aaa
popl
es
repnz
inc
jo
ffree
dec
push
or
xchg
lea
outsl
xorl
dec
aaa
push
ficoml
lret
insb
mov
mov
push
aad
add
shl
pop
mov
push
inc
cmpsb
mov
pop
jle
test
or
fwait
subb
add
daa
mov
das
repnz
out
cltd
mov
xchg
enter
in
xor
fisttpll
sub
andb
pop
mov
push
aas
push
mulb
mov
mov
sbb
xchg
push
rol
daa
xchg
aad
ja
leave
and
nop
cmp
or
ds
adc
scas
repz
inc
sub
sbb
aaa
mov
ror
push
inc
sbb
jo
scas
xlat
divb
out
pause
je
ret
jle
xchg
sub
dec
rcr
loopne
pop
int3
lahf
lods
push
jle
test
mov
sub
daa
cld
or
pop
sbb
jle
push
das
cmpsl
leave
aaa
lret
sub
sub
je
imull
mov
sbb
dec
leave
les
loope
push
jl
pop
xor
or
or
ds
inc
inc
int3
loope
cmpsb
sahf
sahf
cmp
dec
popa
aas
xor
push
mov
and
lret
clc
inc
pop
xchg
jae
cmp
pop
jns
pop
nop
adc
push
mov
aas
enter
cmp
sbb
ljmp
sarl
aaa
mov
adc
pop
lahf
lods
test
rcrl
cltd
mov
adc
jne
mov
pop
lods
scas
adc
sbb
sub
adc
ja
mov
mov
sbb
outsl
dec
add
add
jg
push
rcrb
dec
inc
pop
push
push
bound
mov
push
in
jbe
pop
mov
inc
cmp
pop
push
pop
mov
sub
dec
adc
xchg
mov
push
and
cmpsl
ss
add
pop
mov
sbb
inc
mov
arpl
xor
outsb
subb
jns
add
sub
in
pop
std
sbb
xor
dec
cmc
sbb
push
mov
inc
popa
aas
dec
cmp
orl
call
add
dec
inc
xchg
popa
jnp
xor
nop
jl
mov
into
sub
cli
outsl
jl
in
gs
filds
or
icebp
int
incb
inc
out
cmp
pop
add
xor
and
push
bound
cmp
andl
pop
and
jns
cmpsl
das
pop
aas
lret
icebp
jle
pop
fadd
and
outsb
out
outsb
xchg
fisubrs
jle
adc
imul
xchg
sbb
mov
cmp
out
aas
test
adc
push
lret
sub
in
movsl
or
mov
rcl
je
dec
pop
addr16
xchg
mov
pusha
and
pop
les
pop
sub
mov
aas
das
cmp
ret
mov
pop
ja
inc
mov
push
push
or
aas
dec
and
ret
hlt
clc
fldl
mov
lods
enter
cli
sbb
das
dec
xchg
inc
rcrb
sti
cmpsb
es
cli
int
out
daa
and
jl
push
mov
mov
xchg
into
push
lahf
sbb
cld
jecxz
jo
inc
clc
xchg
fistl
rol
das
jae
and
addb
pop
xlat
stos
dec
push
pop
scas
push
push
lcall
mov
xchg
dec
in
push
sub
cwtl
jne
mov
mov
out
push
adc
lret
add
or
mov
cwtl
mov
xchg
cwtl
cltd
test
and
push
sbb
jno
push
mov
ss
pop
rcl
pop
mov
push
mov
pop
pop
aas
call
dec
out
loope
inc
cmp
loopne
in
ffree
rcrb
jns
out
test
cli
mov
mov
mov
push
xor
ds
in
outsl
inc
inc
jmp
iret
and
stos
cmp
adc
arpl
lods
insb
movsl
mov
movsb
jp
or
shrl
lea
jb
adc
add
repz
mov
lds
sbb
leave
sub
enter
mov
push
call
pushf
in
pop
add
insb
test
mov
xchg
adc
test
rcrl
subb
adc
push
xor
lcall
push
push
pop
mov
das
cmp
xchg
out
insl
rcl
xchg
jb
repnz
and
mov
push
stos
mov
shl
mov
cmpsb
pop
cld
cs
adc
push
jae
push
adc
or
jg
or
ret
scas
pop
or
test
subl
jmp
jmp
sbbl
decl
into
aaa
loope
data16
jl
fstpl
mov
mov
cli
fsubp
lahf
in
nop
mov
sub
pop
filds
repz
dec
adc
and
mov
xor
loope
push
mov
mov
aas
repnz
js
stos
mul
daa
push
or
add
std
mov
into
push
jp
adc
repz
loop
std
repnz
jns
add
add
add
sbbb
test
insb
ret
test
xchg
or
xchg
add
mov
outsb
lret
inc
or
movsb
fisubrl
push
or
shrd
jb
pop
addr16
xorb
int
testl
out
das
int3
mov
xchg
jecxz
fcompl
dec
scas
lea
mov
pop
mov
aaa
jno
in
xor
jb
xor
or
ljmp
movsb
mov
cltd
gs
adc
pop
push
cld
xor
sub
mov
and
xchg
pop
jns
push
adc
pop
mov
out
xchg
adc
leave
xor
xor
mov
inc
js
push
int3
add
push
iret
cmp
cld
dec
imul
sub
fdivs
mov
push
rorl
inc
push
data16
imul
iret
adc
xor
sub
es
mov
cmpsl
repz
mov
mov
daa
jo
icebp
dec
not
push
add
inc
sbb
mov
aad
pop
rorb
and
sbb
inc
or
bound
iret
outsb
jge
add
cmp
sbb
push
std
mov
lahf
insb
bound
or
add
ss
fstpl
loopne
ja
adc
jecxz
je
pop
or
xor
and
faddl
mov
cmp
out
arpl
jnp
sbb
clc
xchg
xchg
ds
fdivl
xor
ret
aam
mov
adc
mov
fsubrs
and
mov
leave
dec
pop
adc
pop
jge
loop
push
adc
fistpl
xchg
loop
push
outsl
enter
adc
mov
jg
cmp
mov
and
adc
testb
loope
ret
push
cmc
dec
dec
adc
push
add
shl
lock
lahf
loopne
xor
repz
lret
push
call
xchg
ficompl
into
lahf
imul
shr
aad
xchg
pop
sahf
test
enter
dec
jge
dec
aam
test
out
je
mov
outsb
push
lock
or
test
jbe
push
adc
outsb
or
and
push
sub
mov
cmpsb
arpl
pop
adc
pop
or
mov
int3
out
mov
adc
mov
mov
sti
mov
push
jmp
je
mov
pushl
sub
int
xchg
test
mov
xor
mov
adc
lods
out
mov
mov
popf
adc
add
jmp
inc
sbb
fmul
out
call
push
mov
lahf
push
jns
mov
arpl
sub
cmpsb
outsl
pusha
jae
or
cwtl
cltd
into
add
cld
int3
jb
xchg
inc
push
ret
aaa
lods
dec
xor
mov
movsl
repnz
dec
add
and
cmpsl
push
mov
icebp
add
loope
fdivrs
pop
pop
sub
push
push
pop
in
in
sbb
popf
push
cmp
loopne
pop
stc
movsl
mov
adc
inc
addr16
ret
cmp
sub
loope
es
jecxz
fs
add
inc
mov
jmp
inc
mov
sbb
mov
imul
xchg
shrl
dec
bound
insb
fnstsw
xlat
in
icebp
dec
pop
sub
popf
sti
in
pop
and
push
enter
sti
js
or
cli
fstl
aam
mov
fprem1
stos
das
shlb
stos
jecxz
ja
pop
jmp
stos
mov
adc
lea
repz
out
add
jb
in
add
enter
fwait
mov
add
jecxz
push
or
inc
loope
ja
mov
orl
pop
test
pop
lcall
add
pushf
shlb
out
push
dec
cmp
push
push
fwait
cmpsb
xchg
pushf
mov
mov
sbb
pusha
inc
xchg
imul
mov
jmp
pop
xchg
pop
lock
fucom
jl
mov
in
push
push
xchg
in
push
sbb
and
mov
out
inc
hlt
cmc
add
out
call
and
push
or
popa
js
lret
sub
bound
add
mov
pop
jo
mov
cmpsl
cmp
xchg
cmp
dec
sub
and
jmp
xchg
fisttpll
cmp
pop
or
dec
pop
adc
cmp
inc
xor
cmc
push
cli
sub
cmp
rclb
nop
out
dec
or
sub
adc
xlat
lahf
test
movsl
scas
xchg
lret
out
call
mov
movsl
push
scas
add
loope,pt
sbb
into
sti
hlt
pop
jae
repnz
scas
push
dec
xchg
in
dec
sub
addr16
xchg
dec
fisubl
test
adc
jecxz
iret
pop
sbb
add
and
pop
pop
or
fists
call
stos
jmp
movsb
sub
mov
fwait
xor
je
and
pop
mov
dec
jnp
ffree
pop
and
inc
xor
mov
aad
imul
out
sub
pop
add
nop
int
sbb
movsl
stos
mov
xor
mov
dec
push
out
jp
jnp
xchg
in
fstp
iret
jnp
mov
dec
ret
adc
cmp
test
sub
ss
dec
sbb
xor
jnp
andl
mov
push
or
lret
add
scas
lods
inc
cli
fisttpl
push
mov
jmp
xor
push
notb
adc
mov
adc
jae
gs
dec
sti
rclb
mov
or
push
mov
cmp
mov
ja
das
cmp
cli
and
fsubrl
xor
je
lds
movsl
pop
and
mov
je
icebp
lods
and
xor
or
adc
inc
adc
rcrb
ret
mov
sub
adc
pop
aad
lds
lock
inc
sahf
dec
or
pop
dec
bound
pushf
jmp
sbb
and
xchg
mov
movb
jecxz
xchg
arpl
mov
pop
push
test
jno
mov
dec
ret
dec
dec
test
push
dec
movsb
movsl
popf
clc
inc
lret
mov
xchg
bound
cwtl
aas
test
jo
mov
movsb
push
pop
push
aam
je
jno
jle
inc
cltd
in
xchg
mov
insb
pop
jo
and
lcall
xchg
push
lcall
std
push
movsb
inc
loope
add
mov
insl
push
xorb
outsb
jg
add
popa
fwait
dec
inc
sub
sahf
xchg
pop
aaa
adc
insb
addr16
add
sub
dec
outsb
ds
push
leave
jns
fisubrs
xor
xchg
loope
xchg
popf
push
insb
mov
pop
out
xchg
or
fstps
imull
lds
mov
push
imul
xor
dec
mov
mov
xchg
adc
test
cmp
imul
xchg
jne
push
sub
cmc
cmp
xchg
jns
jns
out
lret
mov
stos
pop
jecxz
mov
aas
ret
in
lcall
icebp
mov
sarb
test
fisubrs
out
cld
and
ret
add
push
movsb
loop
in
cmpsl
sbb
int3
test
ljmp
sarl
push
mov
pusha
es
push
repz
cltd
stos
leave
or
pop
jae
out
sbb
scas
mov
imul
ret
fsub
push
mov
inc
xchg
and
mov
xor
bound
mov
xchg
push
cmp
fists
idivb
jb
or
push
shll
push
outsb
sbb
mov
adc
inc
movaps
inc
adc
js
mov
jge
daa
jb
and
xchg
pop
push
adc
push
xor
mov
push
xor
mov
jmp
out
or
sbb
mov
mov
sbb
std
sbb
lods
popf
stc
mov
cmp
xchg
hlt
add
cmovno
stos
and
fisubrl
setle
imul
sbb
lods
dec
xor
inc
stc
inc
inc
sarb
int
or
je
ljmp
jle
mov
lods
or
mov
push
out
lea
jg
push
xor
shr
hlt
subl
shl
das
jle
dec
test
sub
sbb
push
mov
xchg
cmp
out
push
pop
loopne
repz
mov
pop
mov
fistpl
ret
add
mov
imul
jmp
andl
mov
ss
pop
dec
add
je
lock
sbb
mov
mov
imul
ret
out
ljmp
mov
and
push
sub
pop
in
jecxz
addr16
pop
in
mov
ss
lea
xchg
test
js
xor
jne
sub
inc
arpl
and
or
fistpll
add
ljmp
or
shrb
in
imul
popf
xor
adc
sub
in
jb
adc
addb
mov
fwait
push
fisubrl
lods
movsl
pop
test
pop
sahf
jle
jp
cmp
xor
push
test
cld
or
std
sub
lods
jb
push
movsb
adc
ret
xor
lahf
sti
xor
mov
lret
arpl
sbb
loope
push
mov
xchg
es
rcll
add
mov
sbb
das
fwait
mov
in
cli
mov
dec
dec
scas
aas
in
into
call
inc
cmp
movsb
mov
loopne
and
sbb
sub
in
ljmp
orl
fnsave
lds
push
inc
loop
adc
fstl
pop
js
push
ja
cmp
and
jl
cltd
bound
adc
mov
xchg
jmp
sub
insl
mov
push
rclb
frstor
jne
add
mov
sbb
arpl
popf
or
popf
inc
repnz
inc
cmp
outsb
jae
rorb
ret
push
sbbl
ret
mov
and
sub
fcoms
jl
mov
or
adc
mov
add
fwait
mov
cmp
xchg
mov
or
fldcw
sbb
ds
loop
fldl
jne
scas
mov
dec
aam
les
repnz
add
ret
or
mov
dec
mov
aam
fwait
loop
mov
jge
mov
scas
push
cli
xchg
imul
iret
mov
pop
xchg
and
imul
pop
addr16
inc
inc
cwtl
sub
mov
jae
push
xor
lcall
jg
sti
inc
cld
imul
ss
sbb
fsubs
xchg
xchg
or
sub
sbb
dec
mov
sub
pop
jmp
icebp
lds
xor
push
dec
call
mov
and
mov
mov
dec
int3
cmp
out
push
sbb
adc
cmpl
test
cli
inc
scas
mov
imul
add
mov
ljmp
and
cmp
mov
and
xor
fmul
testl
cwtl
push
push
mov
or
sbb
inc
movsb
xchg
push
rorl
notb
frstor
or
repnz
cwtl
setne
xor
imul
sub
out
xchg
jp
scas
mov
sub
mov
leave
and
cmp
push
into
pop
ret
insl
push
jo
mov
inc
stos
mov
mov
sarb
jae
mov
jge
xor
dec
mov
mov
fs
cmp
addr16
movsl
inc
or
je
lret
clc
int
xor
and
mov
adc
sarb
pop
ds
ds
xchg
aam
sbb
jle
out
jmp
cltd
and
inc
jne
sub
jl
cmpsl
popf
out
and
into
mov
repz
mov
xchg
cmp
cs
movl
adc
sub
dec
ficoml
mov
std
dec
outsb
stos
cwtl
inc
push
push
push
xchg
mov
cmp
cmp
das
adc
aad
cmp
or
lds
jno
sarl
inc
inc
stc
push
jne
outsb
lods
mov
jp
cmpsl
dec
adc
pushf
roll
into
mov
jecxz
mov
mov
lahf
jle
inc
in
or
mov
ret
mov
pop
sbb
stos
push
inc
rol
sti
push
inc
shlb
ss
test
push
dec
call
les
fcoml
loopne
pop
dec
or
sbb
divb
jl
sarb
jge
hlt
sub
lret
inc
test
inc
test
imul
xchg
cs
mov
pop
jno
jb
sub
fwait
mov
push
jne
jp
adc
cmp
sbb
cmc
daa
repz
mov
dec
sahf
inc
add
out
xchg
pushf
adc
adc
lret
mov
add
clc
cmp
and
xor
outsl
fnstenv
out
push
pop
xor
dec
test
les
jle
cwtl
push
js
mov
test
xchg
hlt
hlt
xor
dec
mov
sub
sti
imul
or
inc
cmpb
cmp
xchg
sarb
push
fldenv
daa
insb
cmp
mov
ss
hlt
shl
mov
repz
jecxz
insl
and
sahf
jmp
mov
sti
or
cwtl
pop
sbb
and
imul
out
mov
inc
adcl
jl
dec
jg
mov
push
scas
shrb
adc
cmc
ss
pop
loop
ss
inc
xor
rol
fsubs
repnz
inc
sub
dec
push
xchg
mov
out
jge
sub
sti
fld
push
push
mov
pop
push
mov
mov
aaa
lods
mov
and
add
add
fisttpl
pop
sahf
ds
fistps
add
int3
mov
sbb
out
and
sbb
jecxz
test
lret
mov
fcmovnu
xor
xor
and
xchg
jmp
adc
sbb
push
xchg
gs
xor
add
roll
movsb
mov
and
andl
jecxz
cwtl
mov
dec
outsl
repz
fdivl
jge
out
roll
sub
mov
in
or
xor
xorb
xor
addl
mov
stc
cmp
addr16
dec
pop
jb
movsl
push
popa
inc
jge
add
stos
pop
in
mov
rolb
inc
mov
outsl
add
mov
xchg
cmp
and
mov
stc
stos
call
jge
sahf
or
enter
mov
sub
mov
mov
mov
push
cmp
pushf
dec
jmp
push
xor
xchg
shrb
jg
jmp
pusha
lahf
popa
scas
push
xchg
cmpsb
push
imul
hlt
cmp
call
pop
int
out
lock
xchg
fildll
jecxz
repnz
mov
inc
cmp
mov
sub
push
fld
sub
and
mov
mov
and
in
pop
icebp
sub
xchg
stos
xchg
mov
push
pop
pushf
or
movsl
and
mov
push
pusha
push
and
sub
xor
jl
and
in
xor
loopne
mov
int3
dec
cmp
fs
cmp
ficoml
addr16
leave
or
lahf
mov
bound
lock
outsb
fs
adc
push
dec
jl
jb
dec
push
shll
sub
pushl
dec
push
out
mov
repz
mov
jp
cmpb
aad
iret
mov
mov
xchg
jp
out
xchg
mov
add
lcall
lcall
in
pop
hlt
lea
mov
push
push
sub
nop
push
jae
arpl
mov
out
and
add
ret
mov
sbbb
mov
mov
push
jno
xchg
and
or
fwait
xor
push
push
imul
in
pusha
adc
int
cmp
cs
push
jge
pop
jecxz
cmp
sub
mov
adc
jnp
das
imul
add
jo
sti
ss
dec
clc
add
or
mov
pop
dec
loopne
repnz
xchg
xlat
nop
jmp
dec
and
inc
jl
sbb
hlt
inc
sbb
aad
pop
repz
pop
jl
mov
cmpsb
ret
cli
mov
pop
addr16
pop
push
push
mov
push
mov
icebp
insl
push
rcrb
loopne
add
ficoml
idivl
mov
mov
sub
jae
mov
mov
jns
jne
xor
inc
repz
ja
fiaddl
push
xor
cmp
lods
cmp
push
je
inc
aaa
dec
aam
push
mov
iret
hlt
push
movsl
imul
out
fcoml
inc
inc
push
push
shll
or
dec
cmp
movsl
popa
sarb
dec
jecxz
sbb
popa
or
add
shlb
dec
ret
push
push
inc
test
iret
xchg
movsl
int3
mov
imul
arpl
or
mov
pop
adc
sbb
push
fwait
cmpsb
addl
push
xor
inc
jmp
outsb
mov
or
push
xchg
dec
es
push
enter
push
insb
int3
leave
fidivl
push
xlat
fsubrs
inc
xchg
addb
jae
rcl
or
subb
jo
xor
dec
ja
rolb
fistpll
and
xor
push
popa
out
sbb
pop
push
adc
out
push
pusha
jg
movsb
mov
inc
mov
je
sti
dec
inc
loop
mov
cmp
push
or
insl
jg
imul
mov
into
pusha
or
sbb
jb
jle
sbb
xchg
daa
stos
mov
sub
imul
rcl
inc
dec
dec
mov
lahf
cmp
sbb
decl
and
in
or
int3
in
lcall
xor
and
lds
outsl
imul
das
jae
insl
loopne
mov
or
sti
dec
fwait
mull
das
sbbl
rcrb
je
daa
dec
add
push
pushf
add
pop
pop
adc
ds
into
dec
loopne
and
sub
adc
pop
adc
jg
jp
jmp
in
or
pop
ds
lcall
or
push
cmp
pop
cli
jge
mov
popf
fs
push
cmp
das
fcompl
pop
scas
cmp
loope
cmpsl
adc
xor
in
mov
ja
jmp
and
shrl
dec
dec
and
xor
mov
inc
ret
gs
imul
adc
pop
adc
stos
adc
push
mov
mov
cmp
movb
mov
mov
js
push
and
ficompl
mov
cmp
inc
imul
mov
icebp
xor
loop
push
movsl
jl
ds
cmp
pop
mov
cmp
dec
sbb
dec
pop
jne
jnp
outsb
xlat
mov
loopne
cli
cmp
and
mov
inc
insl
insl
mov
sub
pushl
jg
jns
jmp
divb
test
push
imul
ret
je
jo
gs
lods
pop
mov
mov
in
xchg
loop
ss
jg
add
push
pusha
cld
add
pop
hlt
jecxz
jecxz
mov
mov
loope
mov
jle
mov
and
mov
adc
jge
jle,pt
std
mov
jl
add
loope
and
call
pop
shl
ljmp
aam
jns
xchg
test
add
push
jbe
insl
je
jecxz
mov
sub
push
mov
cmc
add
insb
mov
adc
out
int
mov
or
xchg
sbb
jmp
inc
add
imul
out
pop
fiaddl
inc
or
dec
rcll
xor
or
cmp
push
sbbl
mov
sbb
dec
sbb
loopne
push
pushf
push
loop
lahf
lret
cli
cmpsb
mov
std
insb
and
and
fimuls
push
mov
sbb
or
adc
jg
dec
inc
push
stos
adc
sbb
adc
hlt
cmp
shrb
pop
mov
loopne
in
ss
fldt
adc
mov
dec
out
cmp
pop
push
scas
sub
or
pop
xor
push
and
repz
cmpsl
pop
inc
xchg
xor
push
mov
adc
int
mov
push
std
ret
adc
cmp
nop
adc
dec
mov
fwait
jno
inc
pop
fsub
push
inc
inc
insb
jmp
cmp
jo
mov
dec
repz
inc
cmp
mov
fs
data16
out
mov
ja
adc
nop
enter
fdivp
int3
shll
in
lahf
sub
add
sbb
dec
mov
mov
pop
inc
inc
loop
sbb
sub
in
push
push
pop
call
jbe
daa
frstor
in
pop
mov
inc
mov
enter
dec
jg
int
decl
xchg
or
jbe
je
sbb
pop
jmp
ds
int3
mov
test
inc
test
movsb
into
push
test
bound
and
lds
mov
push
ja
pop
repnz
push
mov
ljmp
pop
hlt
jne
cmc
inc
xchg
sbb
jne
add
mov
mov
xchg
fimull
rorb
pop
daa
add
cmc
int3
cmc
loope
lahf
out
lds
jne
enter
cmc
movsb
stos
add
mov
test
cmp
fisttps
popa
fsubrl
push
mov
lret
mov
mov
mov
mov
cwtl
leave
rclb
mov
scas
inc
push
dec
cmp
enter
cld
scas
mov
xchg
cmp
add
pop
add
nop
scas
xchg
inc
add
jnp
je
mov
and
shrl
loope
xchg
fsub
dec
xchg
or
cld
scas
mov
std
or
inc
sarb
loope
test
push
sub
leave
in
fwait
and
push
leave
cld
imul
mov
mov
jns
in
aam
add
add
cltd
ja
add
mov
shlb
push
idivl
outsb
mov
fstpl
jp
sub
rorl
jmp
mov
jl
insb
mov
push
stos
cltd
aaa
fwait
repz
mov
ficoml
pop
mov
lock
xor
jg
mull
or
mov
lahf
mov
scas
sbb
pop
movsb
jmp
ss
stos
adc
inc
sub
jp
fisttpll
jne
mov
test
lret
fwait
repnz
pop
mov
es
pop
shll
mov
stc
push
pop
and
sub
fdivl
inc
xchg
stc
aad
stc
aad
add
xchg
insl
mov
and
iret
es
fldt
in
push
bound
fyl2x
fistl
adc
adcl
fs
mov
dec
ds
gs
pusha
movsl
xchg
pop
aad
ret
fsubr
mov
or
dec
clc
cmp
jge
jle
inc
lret
shlb
mov
mov
pop
xchg
push
or
xchg
sbb
or
push
pop
daa
jl
stc
dec
clc
dec
shlb
mov
sub
pop
mov
arpl
push
shll
decl
xchg
aad
jl
outsl
je
jle
jp
cmp
and
xor
incl
cld
sub
mov
sbb
pop
ret
cmpsl
fnstcw
mov
divl
dec
repz
movsl
out
xchg
pusha
adc
push
popf
scas
mov
out
adc
ret
rorl
call
xchg
daa
scas
and
fisubl
cmpsb
cmp
mov
lfs
jbe
push
fldl
ja
dec
enter
jbe
sub
jg
pusha
testb
cwtl
xchg
fdecstp
insl
mov
adcl
call
pop
add
push
push
inc
adc
inc
mov
clc
push
sbb
pop
push
cmp
mov
sub
sbb
scas
xorb
cmpsl
rcrb
push
icebp
data16
sbb
cmpsl
das
inc
fldl
test
or
or
imul
or
mov
or
stos
mov
insl
fisttpll
mov
out
push
lods
xor
shl
in
inc
or
xchg
jmp
inc
movsb
pop
scas
sbb
jecxz
into
divb
fsubrp
xchg
sub
dec
aad
call
jle,pn
pop
mov
cs
addl
je
lcall
mov
popf
or
mov
repz
xchg
lret
add
and
icebp
pop
dec
nop
arpl
jle
pop
cmp
pop
cmp
aaa
jp
jno
in
jno
insl
push
repz
xor
repnz
int3
outsb
and
xor
subb
push
ja
xor
pop
lret
add
cli
mov
xorb
das
roll
dec
lret
lcall
outsl
mov
fisubs
lcall
or
stos
jl
enter
into
dec
clc
fimull
mov
cmovg
ret
fwait
stc
and
add
xchg
int
jecxz
ljmp
and
pop
sub
mov
int
sub
jns
add
pop
popa
sbb
push
imul
inc
and
push
and
or
fwait
ja
cmpsb
jl
push
les
aas
pop
ret
inc
sub
ja
rcrb
or
ljmp
mov
push
push
cmp
int
cmp
imul
movaps
sahf
sahf
cmpsb
test
pushf
fisttps
in
movsb
js
or
andl
xor
pop
inc
xchg
sub
xchg
adc
mov
xor
cltd
push
repz
cli
and
test
popf
hlt
loopne
add
in
stc
lcall
in
pop
int
adc
es
add
jmp
test
push
adcl
add
fisttpll
push
mov
jmp
push
mov
gs
cli
cmc
pop
cmp
adc
or
hlt
add
push
movsb
es
lahf
pop
sub
fnsave
test
mov
dec
pop
jo
insl
stos
mov
imul
shlb
xchg
call
add
cmp
out
dec
std
mov
or
fs
out
lock
jl,pn
dec
leave
jmp
or
ret
add
pusha
icebp
sbb
push
push
push
add
xchg
or
lock
inc
roll
sub
and
scas
sbb
and
repnz
xchg
ds
cmp
pop
inc
popf
insb
mov
adc
mov
out
lret
ds
insb
lcall
lods
mov
pop
or
cmpsl
mov
enterw
add
jno
pop
sbb
jg
pop
testl
cmp
sub
mov
sbb
or
loopne
aaa
mov
mov
mov
sub
dec
inc
lea
repz
nop
gs
and
mov
adc
fnstsw
xchg
push
xor
adcb
jo
cs
cld
xor
pop
and
jg
dec
cltd
fsts
movsl
add
jmp
jae
fistpl
mov
or
dec
rcr
das
jo
sbb
xchg
and
sbb
xchg
daa
popf
out
sbb
in
cmp
jno
aas
outsb
pop
jnp
mov
mov
fisubrs
andb
xlat
sbb
fldenv
mov
cmp
cwtl
and
fwait
mov
into
mov
adc
loope
cltd
addr16
std
shll
out
loopne
sub
js
insl
icebp
push
mov
jp
lock
imul
sbb
inc
push
frstor
mov
push
xchg
movsl
pop
das
ret
dec
or
or
jbe
insl
mov
adc
sub
sahf
ret
push
lret
pop
or
add
lock
imul
add
rcl
ror
loop
ja
mov
jge
sahf
std
lea
loope
mov
or
xchg
jmp
jecxz
sub
data16
mov
or
xor
pop
or
add
mov
jle
scas
divl
cld
shr
cmpsl
xlat
jle
push
dec
into
dec
repnz
mov
test
dec
movsb
call
popf
push
jnp
jp
sbb
mov
jbe
dec
adc
push
adc
shlb
inc
pop
fs
pop
clc
ret
add
inc
adc
addr16
inc
lcall
sub
leave
loopne
xchg
jo
cmp
xor
mov
pop
imul
in
push
icebp
add
inc
sbb
cmp
addb
jae
fs
mov
jl
adcl
push
faddl
dec
xlat
in
iret
xor
scas
mov
hlt
and
iret
sahf
ja
push
lds
vpaddq
int3
mov
inc
mov
pusha
insb
sub
test
int
popa
dec
ret
cmp
ret
addr16
add
movl
sub
cmp
cmp
popf
int
jl
icebp
and
movsb
mov
test
sub
imul
adc
loopne
dec
in
insl
in
dec
mov
sub
cs
pop
repz
jne
sar
adc
mov
movsl
repnz
mov
sub
outsb
cmc
sub
out
mov
shlb
addb
pop
in
xchg
fcmovbe
sub
inc
sub
dec
fldl
mov
ja
in
sub
sbb
loop
or
aad
and
es
push
add
mov
sbb
cmp
cmp
sub
loopne
inc
inc
dec
cmpsb
lcall
je
into
js
xchg
nop
mov
scas
hlt
mov
jmp
mov
xchg
insl
adc
xorb
dec
mov
cmp
mov
jle
loopne
data16
mov
sbbl
scas
in
cli
mov
loope
loopne
mov
divb
xchg
adcb
adc
stc
mov
and
push
ljmp
mov
call
lds
testl
repz
adc
pop
and
pusha
cmp
push
ds
repnz
adc
pop
sahf
dec
pop
jno
mov
and
dec
and
das
leave
addr16
add
push
cltd
daa
or
jbe
mov
clc
mov
sbb
dec
or
movsl
mov
mov
sarl
inc
aad
ret
mov
sbb
mov
lret
push
fisubrs
testb
push
pop
add
les
inc
fcomps
inc
lret
jecxz
mov
pop
xchg
dec
shrb
mov
sbb
es
cltd
mov
es
testl
fucom
cli
addr16
shll
mov
dec
cld
jns
sub
jb
adc
jo
out
fstp
out
cmp
cmpsl
aaa
add
call
arpl
dec
ret
mov
clc
cmp
xchg
mov
push
pop
stc
cmp
xor
jecxz
sti
es
lods
jbe
mov
repz
push
mov
es
outsb
es
xchg
sarb
mov
mov
jg
jae
push
rolb
dec
ret
cmc
inc
nop
in
jg
inc
xchg
mov
cmp
jmp
ret
dec
xor
xchg
sub
and
lahf
or
mov
movsb
push
xor
out
jge
icebp
lods
pop
clc
insb
add
or
xchg
and
mov
clc
add
out
and
ss
pushl
jnp
pusha
rcrl
sub
dec
cli
mov
lret
or
fwait
mov
mov
clc
addr16
or
scas
in
getsec
inc
jno
push
movsl
adc
mov
push
xchg
lret
outsl
pop
pusha
push
xchg
push
jnp
pop
dec
and
inc
push
divl
enter
inc
icebp
pop
mov
mov
jae
mov
into
ja
and
pop
test
dec
and
add
ss
setno
std
lret
icebp
loopne
ljmp
bound
scas
add
adc
inc
sbb
add
mov
sbbb
cmp
mov
dec
repz
jae
movsb
mov
iret
mov
xchg
pushf
pop
imul
fisttpl
xor
pop
push
sti
add
push
add
xchg
lea
dec
mov
pop
mov
mov
lods
ret
mov
bnd
sub
xchg
cmc
clc
jmp
sub
sbb
inc
sub
inc
popa
sbb
movsl
xor
bnd
outsl
dec
adc
mull
xor
pusha
dec
in
in
cmp
fimuls
and
nop
ss
xorl
daa
jmp
pop
xlat
sub
dec
add
scas
mov
div
jmp
or
dec
fbstp
sbb
icebp
lret
sub
gs
scas
xchg
filds
lods
xchg
jle
sub
xchg
and
xchg
fstl
into
fstpl
outsb
mov
push
fbld
imul
sbb
pop
pop
in
or
hlt
xor
add
adc
call
fstpl
inc
idivl
lock
testw
sub
dec
mov
insb
dec
add
out
out
fdivp
jg
and
fs
or
mov
lock
ficompl
out
xchg
add
push
test
dec
mov
xchg
inc
movsl
loopne
lock
xor
sbb
ds
repnz
xor
lahf
mov
cmp
mov
adc
pop
outsb
fistpl
push
ds
lock
mov
mov
daa
jmp
fistl
repz
inc
sahf
or
jmp
or
lds
roll
or
test
js
fisubrl
sahf
inc
lds
mov
adc
lock
and
adc
push
mov
ds
push
push
int
rcrl
aas
pushf
ret
in
cwtl
push
sub
faddl
imul
mov
mov
imul
xchg
lret
sbb
sub
test
cmpsb
sub
pop
inc
push
loop
dec
dec
sbb
imul
dec
mov
pop
pop
inc
cmc
movsb
cld
cld
stos
jo
loope
xlat
pop
mov
push
jl
sub
pop
divl
or
inc
add
add
std
prefetch
or
xchg
loop
out
int
lea
lret
fnstcw
sbb
mov
fistpl
xor
cmc
adc
pop
fcoml
lret
mov
sbb
js
jb
leave
les
sbb
xchg
mov
xchg
sbb
pop
add
incl
push
xchg
lret
fstpl
add
xchg
arpl
mov
mov
push
sbb
das
push
loop
cmp
cmpsl
outsb
pop
std
in
mov
outsl
cmc
mov
sub
mov
and
insl
or
hlt
scas
sub
stc
dec
lods
jl,pn
into
cli
arpl
mov
jp
icebp
mov
mov
in
call
pop
inc
sbb
aaa
cs
lret
pop
pop
out
fsubrl
mov
rcrb
cmp
and
jge
and
mov
into
inc
xor
sub
call
insb
add
sahf
add
mov
mov
push
adc
out
loopne
jl
xchg
cmpsl
mov
sbb
cmp
cmpsl
pop
imul
in
in
pop
out
jo
mov
scas
loopne
lods
and
xlat
mov
inc
pop
jnp
mov
orb
loop
mov
push
jl
pop
jne
lret
jecxz
mov
in
movsl
sub
std
mov
cli
cmp
mov
sahf
sahf
sbb
fnstcw
cmpsl
lods
and
pop
pop
cmp
cmp
xchg
xorl
sarb
lcall
lea
jmp
xor
cmpsb
lock
mov
or
pop
push
xchg
and
mov
xchg
aas
sub
sti
loope
out
xchg
xchg
jne
mov
aam
out
jmp
enter
loop
add
cmpsl
adc
rolb
mov
fs
jl
ffreep
mov
add
loope
sbb
test
or
sbb
sub
push
or
and
or
push
xor
loopne
pop
pusha
jnp
movsl
and
pop
popf
pop
int3
ds
xchg
stos
mov
cmp
test
fistps
xor
ljmp
movsb
mov
mov
adc
sbb
pop
mov
shr
cmpsb
std
pop
sti
aas
sub
aas
shrl
ja
pop
xchg
xor
mov
pop
ret
or
fisttpl
xchg
or
mov
adc
scas
sub
cs
and
mov
cmpsb
xchg
sbb
cmp
fistl
push
mov
push
popf
sbb
sub
inc
adc
xlat
cwtl
xor
adcl
mov
lds
jge
hlt
inc
mov
pop
mov
mov
int3
mov
inc
aam
outsb
xchg
imul
in
in
and
pop
int
sbb
xorb
jnp
add
fistpl
lods
push
inc
sbb
mov
std
icebp
inc
xor
xlat
mov
in
xchg
cli
pop
or
lret
ret
dec
mov
xchg
jb
lahf
test
mov
inc
jns
push
add
fwait
movsl
push
insb
mov
les
pop
pop
inc
call
pop
into
lods
cli
mov
ret
stos
push
arpl
mov
xor
or
inc
xor
or
mov
aas
daa
jge
mov
icebp
jecxz
mov
lods
adc
jle
xchg
cld
insl
movsb
shrl
cmpsl
push
sbb
nop
push
xchg
cld
mov
cli
sub
bound
cmp
das
add
negl
stc
scas
ret
xchg
mov
ret
sti
int
subb
repz
into
jmp
cmp
mov
subl
fwait
test
daa
movb
hlt
stos
push
test
inc
jae
wbinvd
xchg
nop
cmc
inc
push
mov
fstp
ret
in
dec
jl
out
or
dec
pop
xorl
mov
adc
adc
sbb
and
cs
mov
inc
data16
jbe
jbe
jno
push
repnz
mov
mov
mov
mov
mov
js
push
psllw
mov
int
xor
push
inc
mov
je
dec
jo
mov
sub
sub
cs
cmc
insb
sub
les
xchg
xor
imulb
mov
pop
and
xchg
xor
pop
loope
jbe
subl
xor
jle
jb
adcb
nop
stos
lcall
out
rcl
mov
pop
push
and
xchg
and
mov
arpl
mov
add
sub
das
or
or
mov
pop
pop
cmp
mov
inc
lea
popa
ljmp
push
pop
lahf
enter
adc
in
int
outsb
mov
add
outsb
repnz
and
lret
xor
mov
mov
dec
subl
iret
out
sub
adc
and
cmp
pushl
shrl
sub
pop
test
cmp
sbb
adc
shlb
push
and
and
jb
subl
popa
inc
pop
cmp
pop
lds
inc
adc
jns
add
scas
cs
pushf
jne
lock
and
and
add
jnp
test
pop
jp
lods
scas
mov
mov
sbb
or
jp
mov
dec
xchg
out
out
sahf
repz
pop
pusha
pushf
and
and
and
stc
in
mov
les
cmp
sbb
mov
insb
mov
shll
or
lcall
data16
or
xlat
out
add
ss
mov
add
or
jp
pop
imul
mov
sub
inc
sahf
or
mov
adc
mov
repnz
mov
dec
mov
negl
inc
out
jg
cmpsb
jae
sbb
push
stc
test
into
call
cltd
xchg
in
mov
add
xor
insb
mov
mov
hlt
cmc
cmp
negb
jo
scas
jg
fsts
add
lret
push
mov
jnp
les
xchg
nop
adc
movsl
dec
adc
mov
repnz
push
and
jl
pop
push
sarb
cli
xor
sub
mov
add
push
sbb
mov
mov
fucomi
add
out
jb
lcall
xchg
sub
and
push
cmp
js
cli
xchg
jp
mov
mov
insl
subl
dec
cli
mov
fldt
hlt
mov
dec
lea
push
cmc
popa
in
arpl
fistps
fucom
popf
xchg
adc
push
rolb
mul
je
repz
divb
popf
lock
inc
jo
cmp
inc
shr
imul
loopne
jl
pop
push
mov
inc
popf
jmp
testb
push
clc
test
cmp
gs
cltd
ret
aad
daa
mov
push
mov
pop
fsubs
push
sbb
push
aas
xor
sbb
test
divb
jae
dec
sbb
dec
xor
pop
sub
sbb
hlt
pop
sbb
mov
cwtl
jle
aam
or
sbbl
jle
mov
mov
insb
dec
pushf
jae
subb
xchg
addr16
in
repz
fildl
mov
jg
xchg
jecxz
int3
push
mov
dec
ja,pt
enter
std
mov
dec
lods
test
xchg
sub
or
sub
sbb
or
jno
insb
sbb
dec
scas
ja
nop
mov
and
dec
filds
sbb
mov
mov
xor
push
xchg
adc
fsubp
push
xchg
iret
ss
inc
je
fdiv
and
mov
test
je
jl
sub
inc
adc
dec
jb
repnz
or
clc
pop
pop
inc
lcall
call
and
xchg
xchg
mov
into
lock
sbb
adc
and
jmp
out
xlat
or
and
popf
shll
js
popf
push
test
cmp
stc
and
lcall
daa
inc
xor
inc
or
ja
jmp
lret
sub
add
fwait
inc
js
and
cmc
xchg
stos
scas
imul
sahf
lods
test
lock
mov
ret
mov
pusha
mov
mov
sub
cmp
push
jmp
ss
je
xchg
pushf
sub
outsb
dec
jbe
decl
dec
pop
mov
jae
or
leave
or
mov
push
mov
push
xor
xchg
rcll
or
loope
fistpl
stos
pop
pop
push
mov
addr16
cmp
jecxz
popa
stos
fidivl
mov
jnp
sub
and
inc
fsts
in
jb
hlt
mov
mov
daa
jnp
lods
outsb
sti
xchg
jb
mov
dec
pop
or
popf
push
test
ror
cltd
cmpb
out
ljmp
push
pop
sub
insl
hlt
mov
rolb
and
imull
out
sub
orb
mov
jmp
popa
stos
cmpsb
iret
cs
xor
xchg
shl
adcl
mov
fcmovbe
push
inc
ja
les
dec
dec
mov
add
fucom
add
pop
stc
cltd
xor
fldenv
lds
sub
jl
cmpsl
cmp
mov
mov
dec
repnz
outsb
mov
ret
test
jae
daa
sub
into
dec
xorl
pop
or
lahf
add
jmp
fwait
int
jns
ljmp
mov
jg
pop
xchg
dec
xor
cmpsl
ret
fldl
call
push
cwtl
fsub
mov
in
lret
popa
outsl
adc
es
rcrb
faddp
in
jp
inc
push
jne
divb
arpl
xor
xchg
fsubl
xchg
add
inc
aad
mov
cmp
cmp
mov
outsl
push
popf
xchg
cs
cmovae
xor
sarb
ja
decb
outsl
add
or
sub
sbb
sbb
add
xchg
add
jns
jo
jle
adc
mov
shlb
pop
nop
fs
adc
add
into
lret
jne
mov
aas
inc
inc
hlt
xchg
rcll
loop
push
push
and
mov
mov
roll
aaa
stos
cmp
jmp
ss
ja
xlat
jmp
repnz
mov
pop
aaa
cmp
je
cmpsb
pop
mov
push
mov
xlat
inc
jecxz
xchg
les
xchg
stos
flds
lea
jnp
fldcw
push
pushl
aad
push
leave
sub
popl
imul
adc
inc
push
inc
rcrl
mov
jbe
dec
xlat
cmp
jne
add
aas
cs
add
mov
or
lods
repz
pop
shll
mov
imul
cmpxchg
cld
cmp
inc
xchg
ljmp
xlat
sti
jns
pop
negl
js
pop
scas
cwtl
lret
mov
fs
std
jae
popf
xchg
lahf
jp
cmc
ret
ss
icebp
nop
jnp
cmp
push
inc
jne
in
shlb
out
lahf
xchg
out
clc
push
lea
or
loope
pop
cmp
adc
fisttpll
inc
xchg
test
lea
ret
pop
cmc
js
push
mov
fiadds
mov
test
out
lea
xchg
mov
xlat
mov
push
mov
sarl
fbstp
ljmp
lcall
loop
insb
jno
shll
setne
clc
std
outsl
out
xlat
stos
in
dec
clc
add
in
jo
insl
mov
in
roll
das
jae
ss
fistps
decb
xchg
insl
sbb
arpl
push
and
pop
cmp
test
pop
xor
mov
loope
xchg
xchg
fisubrl
dec
xchg
jno
xlat
mov
adc
or
inc
sbb
jecxz
outsl
and
xor
pop
dec
sub
inc
xchg
jg
js,pt
push
mov
mov
inc
mov
loope
enter
jae
pusha
call
xchg
in
pusha
jne
loope
lds
jge
push
dec
and
jmp
fwait
jmp
les
or
cmp
and
lds
lods
push
adc
pop
test
adcb
fsubrl
insl
and
jbe
lret
repnz
push
cmpsl
dec
test
xchg
add
sbb
dec
roll
imul
push
or
imul
cmpsl
mov
inc
pop
jle
arpl
push
cs
ja
outsb
add
imull
je
std
inc
cmpsb
jp
mov
arpl
or
out
cs
mov
test
in
stc
inc
out
and
lods
repz
cltd
fisttpl
push
fnstenv
push
fwait
dec
ret
out
mov
js
push
dec
adc
repz
cmp
enter
lock
push
xor
push
aad
mov
insb
pushl
xor
jmp
shrb
xchg
out
fsub
inc
mov
mov
fnstsw
aas
test
inc
jmp
pop
bound
dec
or
das
leave
add
mov
mov
test
adc
aam
icebp
shrl
jmp
inc
xchg
cwtl
loope
add
or
jp
out
ss
dec
sahf
lock
std
mov
clc
and
loopne
cmp
inc
adc
or
mov
lcall
push
mov
mov
cmp
bound
dec
lahf
lds
dec
sbb
roll
bound
cld
xchg
lret
xchg
js
adc
mov
inc
out
lahf
and
pop
xchg
xchg
sahf
pop
add
daa
pusha
dec
loopne
xor
or
jo
mov
or
xor
cli
jecxz
hlt
addb
dec
mov
pop
out
jecxz
mov
aaa
pop
xchg
mov
hlt
or
ds
sub
or
xlat
push
xor
mov
sbbl
xor
ljmp
xchg
stos
jl
mov
pop
aaa
loopne
icebp
imul
test
subl
mov
popf
mov
dec
adc
inc
sub
out
aad
in
push
push
enter
ret
cmp
popl
das
cmpsb
mov
fbstp
mov
popa
xor
test
xor
adc
add
and
jo
mov
lahf
in
mov
push
ficomps
testb
jp
push
shlb
xchg
mov
lcall
dec
cli
xor
in
pop
aad
jmp
mov
fs
mov
arpl
ffreep
or
lea
stc
cmp
push
ficompl
out
adc
mov
nop
pop
xchg
pop
push
loope
hlt
daa
cltd
mov
test
pop
in
push
push
ds
jb
mov
xchg
daa
shr
pop
mov
test
cltd
adc
xchg
cmpsl
cmpl
jecxz
stc
sub
xor
icebp
dec
popf
pop
ljmp
add
pop
jne
mov
jge
xchg
xor
cmp
mov
push
subb
scas
fs
and
addl
es
xlat
sub
stos
enter
xchg
ss
popa
sub
jb
test
cmpsb
mov
or
jp
jmp
pop
add
xchg
ret
dec
fstps
pop
cmp
jbe
imul
ret
ss
or
icebp
or
sub
inc
mov
xchg
and
pop
mov
and
lcall
lcall
push
sbb
jp
ja
lods
loop
adc
pusha
ret
imul
inc
mov
add
push
divl
fbstp
or
sbb
mov
adc
jge
mov
inc
sbb
jo
mov
mov
push
jne
pusha
mov
stos
hlt
loope
lods
mov
cmpsl
jae
mov
call
lods
mov
or
fsts
mov
push
cmp
jne
adc
repnz
xor
xchg
in
xchg
cld
je
adc
int3
fdiv
push
repz
in
jmp
xchg
or
or
pop
notb
add
add
xchg
xchg
mov
inc
mov
cmp
aas
out
int
mov
cli
or
or
dec
pop
stos
mov
add
mov
imul
inc
push
sbb
or
or
std
icebp
add
sbb
jnp
mov
add
jle
inc
jne
cmc
or
mov
fcomip
mov
sbb
sti
rcll
imul
jb
orl
add
xchg
push
out
mov
xchg
cmpsb
lds
add
aad
jno
pop
xor
fucomp
jb
dec
push
xchg
pop
es
ss
push
cmp
push
push
sti
insb
loopne
lret
mov
lret
gs
ror
adc
xchg
and
jge,pt
cmpb
in
dec
int
mov
or
adc
mov
shlb
fs
mov
cmp
enter
pop
cld
mov
and
or
test
test
adc
dec
bound
data16
mov
cmp
pop
jg
adc
mov
das
inc
jo
jnp
cwtl
push
in
mov
sub
push
ficompl
mov
in
lock
std
hlt
inc
sbb
pusha
data16
imul
ret
cmpsl
jne
pop
sti
pop
push
into
lcall
mov
jo
test
popf
imul
push
addr16
mov
orb
mov
cs
shlb
xor
pop
sub
jmp
popf
js
cmp
mov
pop
pop
mov
xchg
scas
pop
push
test
cmpsl
xchg
lcall
fists
mov
jmp
mov
sub
enter
jno
push
fs
mov
push
cwtl
push
cmp
rolb
out
jmp
mov
jecxz
sub
daa
insb
mov
popaw
stc
lock
aaa
outsl
and
aaa
push
out
lea
dec
jb
sti
push
adc
mov
pushf
aad
hlt
jns
and
leave
pop
imul
mov
dec
jle
int3
jae
ljmp
sbb
dec
sbb
dec
cmp
pop
inc
lods
or
shrb
cmpl
int3
lods
in
cmp
xor
aas
repnz
enter
sbb
push
jns
pop
movsb
inc
pop
pop
clc
push
in
xchg
sbb
fildll
fs
jge
leave
rorl
cmc
mov
xchg
cltd
cld
push
or
jo
loop
xlat
add
stc
pop
repz
inc
fwait
enter
in
nop
sub
sti
inc
sti
stos
andb
cmc
cmp
add
xchg
fcmove
in
and
xchg
pop
inc
ss
xchg
cmp
leave
loop
jge
add
loop
mov
out
pushf
cmp
push
mov
sar
call
sub
dec
repz
movl
lods
push
sti
sub
xchg
and
cmpsb
add
push
and
das
add
int
xchg
pop
pop
faddl
fildl
test
cmc
mov
and
cmp
sbb
xor
pop
inc
mov
xor
idivl
and
sbbl
jbe
xor
mov
or
jg
call
mov
jl
mov
rol
les
jo
movsb
imul
sub
cmc
lods
sub
scas
push
dec
push
push
out
repz
repnz
bound
hlt
cli
jbe
inc
and
in
test
jbe
add
push
cmp
orl
addr16
test
push
in
sarb
in
insb
pop
popa
add
sub
rep
aad
mov
inc
cmp
mov
aam
test
shlb
sub
aam
sbb
cs
cltd
call
stos
int
jnp
fidivrs
test
mov
mov
mov
mov
mov
push
and
push
int
jne
jecxz
xor
jb
ljmp
mov
cmp
in
leave
mov
and
arpl
insb
sbbl
out
iret
data16
and
xchg
inc
aas
add
dec
out
pushf
ret
enter
icebp
insb
cmp
pop
stc
in
popa
das
fwait
push
in
xchg
adc
repz
add
pop
dec
cmpsb
mov
insb
aad
shlb
xchg
xchg
mov
and
andl
and
push
pop
mov
cmp
push
or
mov
xchg
and
insb
loop
aam
fsubl
or
scas
mov
cmpsl
nopl
fdivs
divb
shrl
push
insl
sti
enter
insl
and
push
sbb
mov
addr16
or
out
js
fldenv
ficomps
test
xchg
test
in
pop
dec
sbb
mov
pop
pop
push
packsswb
icebp
cwtl
mov
cmpsl
lahf
lcall
gs
xlat
or
sti
dec
rcll
xor
inc
or
xor
lods
rcl
or
or
xor
clc
inc
imul
push
sub
aaa
pushf
mov
xor
fistpll
jl
mov
stos
and
adc
pop
add
pop
sub
and
jnp
xchg
or
leave
cmpsl
enter
jmp
pop
lds
outsl
popf
mov
dec
push
rcll
stc
xchg
inc
xchg
xor
das
inc
adc
mov
aaa
inc
insb
jb
pusha
mov
aas
pop
jo
mov
jp
mov
out
in
jle
xor
insl
sahf
lds
insl
ret
push
jge
sahf
xchg
mov
xchg
jns
subb
xchg
mov
pop
std
inc
out
xchg
loop
jbe
pop
shll
mov
and
mov
insl
mov
inc
pusha
shll
sbb
movntps
mov
cmpsl
sbb
jnp
aad
out
sub
push
cwtl
adc
out
jno
je
in
mov
hlt
cmp
ret
std
ljmp
cmp
rcr
pop
mov
icebp
movsl
aas
mov
push
loop
pop
gs
scas
repz
in
xchg
cs
subl
mov
sub
xchg
dec
sub
pop
inc
das
and
test
movq
add
pop
push
xlat
sbb
test
lds
jmp
push
daa
xor
push
inc
mov
cmp
leave
icebp
mov
lods
add
and
mov
sar
lds
mov
jmp
push
jg
js
movsl
jmp
mov
adcb
rcll
loope
test
jmp
add
cld
ror
dec
jg
xchg
pop
mov
insb
nop
sub
mov
jae
movsb
jnp
inc
test
in
xchg
ficompl
and
xorb
iret
mov
jno
jae
xchg
mov
mov
inc
inc
lds
sub
inc
push
cltd
std
pop
dec
movsb
xchg
dec
dec
sti
lods
xor
push
ret
pop
sarb
xor
dec
call
and
pop
or
aas
sub
or
xor
add
mov
dec
pop
shrl
test
js
pop
outsl
rcrl
fstpt
mov
lea
shll
inc
in
mov
sbb
out
test
jle
les
clc
mov
sahf
fs
sbb
out
lods
inc
mov
nop
and
and
aam
sbb
out
mov
cmpsb
movsb
fldenv
pusha
sti
xchg
imul
fisttpll
jno
out
or
insb
pop
add
fldcw
lock
or
mov
clc
jo
in
aam
push
sub
out
dec
pop
jp
adc
sbb
lret
in
dec
push
sub
inc
lods
dec
push
jnp
cmp
or
jns
mul
fildl
int3
popa
repz
addr16
push
sbb
sub
popf
into
sbb
and
jb
push
test
arpl
add
xchg
lock
mov
add
xchg
push
jmp
scas
addr16
outsb
pop
mov
mov
insb
mov
in
mov
mov
lods
sub
inc
mov
movsb
or
gs
inc
fwait
shlb
cmpb
mov
and
jecxz
mov
cs
dec
neg
push
adc
pop
push
cmp
lret
cld
and
cmc
test
mov
adc
cli
fnstenv
cmp
leave
scas
push
fiaddl
call
fwait
lea
push
push
js
mov
fwait
sti
or
js
xlat
repz
shlb
int
cmp
xor
jmp
xor
out
psrlq
popf
sub
cmp
scas
and
add
rol
mov
sub
sti
lock
add
dec
mov
mov
cmp
push
repz
divb
xchg
dec
adc
cmpsl
cld
inc
insl
dec
mov
lret
adc
ljmp
mov
hlt
fcoms
pop
rorb
push
xchg
mov
dec
iret
push
dec
movsl
cmp
xchg
sbb
push
jle
jmp
push
aas
adc
pop
or
mov
in
dec
jecxz
mov
mov
cmp
push
fs
pop
mov
sbb
into
shll
jbe
push
jnp
cwtl
jecxz
bound
push
sahf
mov
sub
out
stos
sbb
or
pop
jbe
out
mov
faddl
xchg
shlb
aad
insb
push
or
xor
mov
fidivl
sub
dec
pop
test
sub
or
frstor
leave
lods
and
push
xchg
add
test
cld
inc
dec
adc
pop
out
mov
in
cmc
pop
push
pop
push
sbb
mov
pusha
push
js
adc
inc
inc
jne
outsl
push
outsl
adc
aaa
fisubs
hlt
sub
pop
dec
jbe
or
cli
push
out
and
fstpl
adc
outsl
add
inc
or
mov
xor
and
push
outsb
xlat
lock
out
js
aaa
push
mov
loopne
mov
adcl
sti
push
adc
and
mov
dec
jp
sbb
xchg
jb
call
pcmpeqd
testl
xlat
icebp
pop
aad
add
incb
xchg
mov
mul
fabs
cmp
xorl
fs
xor
pushf
add
xor
addr16
dec
pop
cltd
sub
in
sub
cmpsb
and
les
jb
fs
mov
and
data16
js
fs
cmpsb
in
xor
xor
subl
push
push
inc
pop
das
int
cmpsl
mov
mov
jp
adc
lea
lcall
fcmovnu
push
cmpsb
cltd
lret
jmp
pop
pop
rcrb
add
ja
outsb
inc
enter
lods
jecxz
push
popf
ror
push
inc
rorb
mov
sbb
xchg
push
and
int
mov
fnsave
sub
inc
or
ss
sbb
cmp
adc
xchg
sahf
dec
cmp
dec
lret
movsb
fstpl
stc
ret
jbe
or
xchg
sub
pop
sbb
aam
jecxz
adc
mov
icebp
test
les
mov
adc
pop
cs
or
mov
or
icebp
or
cmp
push
cmp
or
divb
insb
test
into
jmp
adc
jmp
inc
pushf
add
daa
xchg
fcoml
jo
or
pop
aam
stos
mov
test
sub
pop
outsb
push
sub
dec
push
mov
cmp
jbe
cs
iret
mov
mov
es
jecxz
xchg
leave
cli
mov
mov
idivl
negl
shll
jbe
push
lahf
pop
dec
adc
pop
add
repnz
movsb
jno
repnz
jno
cmpsb
orb
stc
cmc
sbb
and
mov
mov
push
int3
sbb
sbbb
in
mov
fwait
cmpsb
das
add
idivl
xor
ret
and
xor
lods
mov
cld
jb
cmpsl
xchg
es
sub
int
jae
stc
fcmovnbe
cmpsb
xchg
mov
push
inc
sub
insl
mov
xchg
imul
enter
push
lods
dec
orl
in
cmc
pop
sbb
and
fisubl
add
mov
xor
sti
push
cmc
xchg
xlat
cs
mov
push
and
jo
loop
shl
or
pop
lcall
das
ja
cmpsb
mov
jo
inc
jne
cld
mov
js
add
cltd
or
test
mov
out
faddp
in
leave
or
aas
jl
aam
in
inc
stos
mov
push
and
pushf
pop
ret
into
dec
arpl
cld
lea
pop
xchg
hlt
push
ffree
sbb
in
pop
mov
xor
neg
ss
in
sbb
dec
pop
pop
and
scas
inc
mov
test
pop
hlt
int
call
pop
test
fists
ss
sub
inc
cmp
xchg
dec
sbb
inc
jmp
inc
mov
jnp
sub
add
add
mov
iret
rol
negb
stc
fstl
aam
clc
mov
jno
shr
push
mov
pusha
push
mov
out
sbb
fcmovnbe
pop
pop
cmp
aad
sbbb
dec
fldenv
jmp
dec
push
and
xlat
pop
in
xchg
lea
fwait
std
push
mov
mov
dec
mov
pushf
shlb
inc
mov
dec
push
or
mov
push
dec
cld
push
xor
lds
les
nop
inc
adc
fldcw
mov
jg
jecxz
mov
mov
xchg
mov
aaa
lahf
xor
jo
pop
add
and
push
xlat
dec
mov
jae
jmp
cmpsl
mov
mov
in
cmp
ficomps
adc
jecxz
arpl
sbb
jb
cmpb
adc
aaa
jle
mov
shlb
jne
out
mov
rorl
and
adc
addr16
mov
outsb
mov
ss
aam
mov
mov
sbb
sbb
lods
push
ss
xchg
inc
loop
jecxz
dec
cmp
push
mov
dec
icebp
mov
outsl
add
mov
cmp
into
and
add
shlb
lock
sub
pop
fnstsw
cmp
loope
loopne
test
fs
shlb
popa
jns
stos
and
movsb
stc
cmp
imul
mov
cld
adc
dec
movsl
and
aas
xchg
xchg
xor
aam
cmp
adcl
cld
mov
inc
jle
repnz
cmp
sbb
lret
push
mov
adc
fisubl
sbb
jmp
cld
lea
cmp
sbb
scas
cmp
fcmovnu
popa
into
mov
lock
repnz
dec
xor
repnz
lahf
push
push
ja
cmp
mov
out
adc
jg
jl
das
adc
movsb
repnz
nop
enter
loope
mov
sbb
pop
cli
and
mov
jle,pt
dec
jmp
or
sahf
jno
dec
adc
dec
lock
cmpsb
stos
in
loop
or
out
imul
sbb
xor
lods
push
rcl
xchg
xchg
clc
movsl
test
push
inc
jecxz
sub
test
enter
rcll
and
jle
xor
jb
jo
test
mov
and
test
arpl
cmpsl
dec
inc
ds
and
pop
imul
daa
imul
test
dec
pop
xor
add
test
rcr
push
push
adc
roll
xor
push
xchg
jecxz
push
adc
leave
inc
clc
stc
lret
out
dec
fs
push
fmuls
lea
inc
dec
jbe
loop
ss
pop
cmp
insb
popf
xchg
outsb
arpl
mov
add
or
dec
and
xchg
mov
cld
dec
lret
mov
imull
insb
xor
lds
stc
inc
paddusw
popf
adc
push
in
sbb
test
cmpsb
ljmp
mov
xchg
out
jae
pop
mov
push
mov
pop
pushf
rcrl
add
mov
xchg
fcmovu
add
mov
icebp
pop
sbb
out
scas
std
inc
pop
mov
mov
push
push
out
movsl
daa
out
inc
xchg
popf
jnp
aam
pop
inc
lret
fadd
js
pusha
rcll
test
adc
sub
test
sub
fisubs
dec
mov
in
inc
or
popa
sbb
jge
popaw
int3
out
pop
sti
fmulp
repnz
outsl
mov
and
jg
mov
lds
popf
pop
rcrl
push
add
dec
shrb
jl
jne
iret
jl
sub
andb
inc
xchg
cltd
lcall
lcall
sbb
rolb
jmp
xor
sub
iret
lds
nop
out
fldcw
adc
lock
xchg
mov
fisubs
mov
push
add
mov
call
call
fs
or
or
mov
mov
movsl
sub
mov
xor
pop
js
icebp
xchg
adc
call
xor
mov
mov
pop
daa
ffreep
pop
inc
jne
and
sub
jbe
test
xlat
jno
inc
cmp
jnp
ret
adc
icebp
ja
pop
pop
jmp
add
out
pop
jb
add
aas
clc
add
xor
ret
mov
imul
add
sbb
and
test
out
push
xchg
sbb
mov
fstps
daa
loop
push
xchg
pushf
jne
xor
aaa
stc
subl
jge
mul
jl
pop
or
mov
jb
out
add
aad
mov
xchg
xchg
pop
mov
push
jbe
into
cmp
push
imul
ret
mov
fs
pop
adc
loopne
add
sbb
data16
xor
pusha
movsb
sbb
jnp
and
data16
sbb
xchg
imul
flds
iret
xlat
or
out
sub
pusha
gs
je
sahf
imul
fcoms
scas
pop
pop
push
adc
pusha
pop
ret
lea
ficoml
sub
mov
fmull
int3
dec
hlt
movsb
inc
mov
repnz
mov
test
mov
fucom
add
pusha
push
outsl
xor
inc
mov
mov
mov
pop
xlat
dec
adc
lock
xchg
xchg
aas
std
jp
mov
xchg
mov
lret
inc
or
mov
and
or
pop
add
mov
pop
fmuls
mov
ja
push
je
add
repz
movsl
inc
cmp
cmpsb
loop
out
mov
jb
pusha
icebp
aas
inc
cli
jae
xorl
jl
jmp
int3
enter
push
fs
ficomps
orb
push
xchg
repnz
arpl
notb
sbb
xor
adc
mov
mov
lock
or
in
sub
cltd
xchg
sub
add
jge
push
imul
mov
sbb
pop
and
add
jecxz
cs
aam
pop
xchg
and
call
adc
mov
sub
push
leave
test
jb
xchg
mov
int3
xchg
aad
pushl
dec
dec
idivl
mov
movsl
xchg
lret
jle
rorb
pop
mov
push
sbb
pop
jo
add
inc
cmp
xor
sbb
js
fwait
or
mov
jbe
mov
sbb
lea
pop
mov
lock
test
mulb
scas
lods
fdivrs
add
sub
and
ret
es
data16
mov
pop
and
xchg
mov
mov
push
repnz
mov
xchg
xor
jp
inc
xchg
sarl
aad
mov
rcr
cmp
push
cmpsb
jp
lahf
mov
add
adc
inc
or
xor
jg
lds
subb
jne
dec
push
xchg
mov
and
dec
mov
sub
aad
jg
or
out
outsb
jae
in
push
pop
orps
loop
push
and
mov
or
xchg
roll
xor
inc
clc
movsb
xor
cltd
ss
sub
mov
push
aam
add
push
add
or
clc
notl
add
insb
and
call
icebp
sbb
mov
loop
xor
and
mov
call
arpl
fdivs
sub
inc
push
cmp
aad
scas
and
mov
sub
or
cmpsl
xchg
int
fldl
jb
pop
scas
and
sub
sbb
dec
repnz
in
jae
inc
icebp
loop
shlb
xlat
pop
jbe
push
enter
jge
inc
cmp
push
fdiv
pop
ja
test
mov
xchg
add
outsl
les
jp,pn
aas
into
in
nop
adc
sarb
lods
or
cmpsl
inc
sbb
mov
loop
orl
repz
dec
mov
xor
mov
sti
shll
mov
sbb
or
ja
pop
add
rcrb
cmpsl
push
lock
outsb
jns
jne
mov
xor
sub
lods
lcall
rorl
sbb
mov
out
cmp
loope
imul
inc
mov
add
dec
divb
lods
mov
adc
mov
cld
imul
in
shrb
pop
and
pop
rcr
pop
popf
cmp
lock
cmpsb
dec
inc
ss
pop
aaa
fidivrl
and
pop
mov
outsb
dec
aad
adc
cmp
test
imul
in
lds
sub
shll
jge
jnp
add
jns
sub
add
pushf
cmp
ficompl
cmc
add
and
out
not
cmp
fisubrl
or
pop
xchg
xchg
in
mov
pop
enter
lret
and
xchg
dec
adc
cmpb
lock
mov
movl
daa
stos
xor
cmp
pop
add
jle
cmpsb
jl
testl
out
jb
cmpsb
mov
inc
fcoms
jmp
jnp
ret
cli
mov
sub
sbb
aam
mov
rol
jne
bound
fidivrl
jb
loop
add
push
mov
mov
lea
test
fildll
loopne
inc
sbb
out
jmp
fisubrs
xchg
rcr
cli
iret
xor
mov
dec
xor
shl
cmp
fildll
in
xor
and
testl
cli
push
inc
insb
jle
shrb
out
cmp
xchg
mov
leave
adc
jo
ja
sbb
push
jae
cltd
dec
add
repz
xchg
mov
shll
ljmp
scas
add
in
shlb
pushf
push
add
ljmp
fcomps
mov
rcrb
dec
filds
loopne
push
fstl
adc
enter
jg
jge
add
hlt
stc
inc
inc
adc
icebp
cmpsl
mov
loopew
mov
or
jne
jl
jns
sub
ret
stos
mov
int3
in
xchg
cmpb
xchg
cmp
dec
cmp
push
xchg
ds
enter
pop
cmp
sub
or
dec
jecxz
sub
pop
lcall
cmp
imul
leave
in
in
je
sub
mov
in
lahf
mov
rorb
lahf
inc
aam
pop
ljmp
or
jmp
repz
repz
xor
xor
shrl
lods
mov
add
push
mov
popf
jg
cli
jb
lcallw
insl
pop
mov
lahf
shl
cmpsb
dec
cmp
mov
scas
cmp
jle
dec
loope
jecxz
sahf
imul
and
pusha
test
int
mov
je
pop
insl
jge
inc
insb
xchg
xor
test
cmpb
lea
add
add
mov
xchg
inc
imul
mov
scas
in
test
fcoml
mov
dec
pop
stos
dec
leave
inc
outsl
inc
int3
sub
dec
nop
cld
or
das
lret
sbb
sahf
jmp
pop
int3
cmp
sbb
dec
loop
add
add
cld
xor
dec
and
insl
push
sbb
popa
loope
in
sbb
mov
repnz
sub
in
add
fstpl
mov
pop
hlt
scas
out
cmp
nop
fstl
jbe
and
push
fsubs
fsubrl
das
test
xchg
ret
cmpsl
jo
in
fs
push
rorb
out
sub
mov
jp
add
loopne
adc
ds
hlt
es
fstpl
dec
add
mov
inc
mov
mov
popa
mov
xchg
push
xchg
movsb
lret
xor
lds
cmpsb
inc
fnsave
scas
in
mov
mov
xchg
jge
or
xchg
xchg
push
sbb
inc
or
mov
pop
xor
rorl
sub
xchg
outsb
shlb
adc
popl
insb
insb
xor
jnp
out
xor
bound
pop
dec
pop
push
stos
or
pop
mov
nop
pop
lret
inc
inc
sarb
ficoms
mov
dec
leave
sub
nop
mov
stos
push
daa
dec
xchg
subb
jb
sbb
inc
das
inc
nop
shrl
in
movsb
rclb
icebp
mov
aaa
cmp
mov
mov
daa
adc
mov
push
jb
mov
dec
cmp
cmp
int3
rclb
lods
in
enter
in
int3
cmpb
jl
imulb
and
dec
int
insl
jne
adc
insl
xchg
inc
dec
int3
pop
es
dec
adc
pushf
sub
inc
inc
sbb
aas
add
loopne
aam
out
xchg
adc
out
pop
pop
aaa
adc
inc
test
inc
ss
fcmovne
xchg
js
dec
lea
xchg
sub
mov
sahf
and
gs
dec
add
lock
pop
stc
loope
or
imul
cmp
stc
rcr
lds
test
test
adc
stos
testl
pusha
cmp
push
fninit
mov
ret
sbb
add
lds
cmc
stos
not
cli
mul
adc
out
daa
lea
sub
insb
pop
xchg
add
int3
xchg
jl
lock
mov
xor
push
mov
in
inc
cmc
lea
pop
xor
out
jae
mov
jmp
arpl
dec
inc
jnp
fnstenv
mov
pop
scas
shlb
fwait
and
sbbb
or
outsb
xor
inc
add
fstpl
bound
push
mov
ret
xlat
popf
rcll
aaa
insl
sbb
xchg
es
in
dec
cld
fisubrl
mov
pop
xchg
pop
insb
cmp
mov
enter
subb
and
scas
bnd
lret
push
jb
fisttpll
xor
data16
out
sub
xchg
clc
call
push
ja
adc
aas
negl
and
or
sbb
or
add
int
push
stos
icebp
fidivl
dec
pop
outsl
mov
int
dec
cmp
xchg
insl
out
dec
inc
fst
push
insb
sub
mov
aas
mov
mov
inc
mov
movsb
pop
xchg
or
shl
int3
mov
push
mov
xchg
or
add
add
jae
outsb
push
neg
daa
gs
pop
idiv
jmp
lret
xchg
ljmp
daa
clc
mov
adc
test
mov
xchg
pop
mov
jnp
xchg
mov
clc
or
out
cmpb
mov
ds
push
mov
mov
adc
lret
outsl
mov
inc
rclw
xchg
lcall
fisubl
jle
in
fistpl
and
cmp
xor
por
hlt
or
xchg
ret
mov
mov
mov
pop
scas
jp
movsl
idivl
rol
xor
ljmp
icebp
clc
mov
fdivr
jecxz
repnz
lock
fwait
cmpsl
jb
cmp
sub
jae
in
mov
sub
repz
pop
sbb
lea
cmc
adc
sbbl
dec
mov
mov
add
dec
xor
xchg
lcall
jns
mov
pusha
mov
mov
push
cmp
xor
mov
mov
xor
or
cli
imul
push
pushf
mov
mov
popf
jo
mov
cwtl
push
nop
mov
js
packssdw
lods
mov
out
cld
movsb
rcrl
sti
push
cmp
jo
sub
inc
fiaddl
sti
sbb
iret
adc
aaa
cmp
xchg
pop
jo
sbb
xchg
cltd
movb
in
sti
negl
cs
mov
in
in
mov
loope
out
fistpll
popf
fs
out
dec
dec
xor
mov
orb
dec
xor
test
js
sub
cmp
push
push
xor
inc
pushf
sbb
xor
sbb
push
sub
not
dec
sbb
mov
je
notb
sahf
or
fs
xlat
and
mov
les
inc
inc
es
icebp
in
mov
btr
inc
hlt
xchg
imul
pop
lcall
inc
scas
and
dec
sbb
cmp
mov
movsb
orl
loope
and
mov
mov
aad
jmp
aas
xor
sub
repnz
add
push
mov
mov
faddl
mov
aam
jae
aaa
add
dec
sbb
pop
addr16
clc
pop
cmp
jmp
add
jle
je
xor
clc
fisttpl
jne
rorl
mov
push
cld
ret
sets
js
mov
aad
or
cs
jmp
cmpsb
and
inc
in
aaa
inc
sbb
adcb
adc
or
sahf
shr
test
mov
fwait
jle
repz
adc
mov
mov
xchg
push
pop
in
mov
outsb
mov
ret
enter
and
mov
mov
or
adc
jne
repnz
inc
insb
fisubl
adc
pop
dec
push
or
mov
or
aad
mov
js
cs
in
fdivrl
mov
lds
xor
mov
les
call
inc
lock
aam
dec
or
sub
popf
add
sub
xchg
ret
mov
jmp
add
mov
fs
or
mov
push
cmp
push
sub
cmp
inc
subb
sub
cmp
ret
aas
adc
dec
mov
test
mov
jo
fists
movsl
inc
shlb
dec
test
mov
mov
inc
dec
and
jp
insb
add
sbb
adc
lcall
stos
add
pop
shll
inc
repnz
mov
mov
lds
inc
jmp
jb
repnz
cld
jae
fisubrs
jno
jmp
xchg
dec
pushf
repz
loope
xor
lahf
xor
insb
dec
mov
mov
stc
aad
sub
mov
mov
add
push
je
pusha
mov
and
inc
cs
loop
ja
in
imul
repz
fildl
mov
stc
ret
add
push
sbb
leave
xchg
fidivl
jo
iret
popa
imul
and
stc
popf
imul
sub
mov
leave
pushw
mov
jnp
arpl
and
xchg
mov
cmp
push
jl
push
push
test
cld
mov
jg
jnp
push
shlb
aad
pop
dec
push
pop
mov
in
and
push
jle
neg
xor
cmp
jl
push
popf
call
push
sub
lea
fdivr
mov
bound
in
popa
push
xor
lret
dec
cmp
sub
or
sub
mov
sub
lcall
pop
fnsave
sub
jbe
sti
dec
cltd
mov
out
in
sbb
xchg
or
testl
sbb
jecxz
cmpsl
jo
add
add
jge
pop
xor
rolb
loop
fcmovne
mov
shlb
std
xlat
sub
imul
outsl
out
or
push
xchg
fndisi(8087
and
sbb
call
push
out
mov
inc
fadd
test
fs
cmp
cltd
sbb
push
cmpsl
pop
testl
sub
mov
loopne
fiadds
test
xorb
movsb
stos
sbb
dec
mov
xor
xlat
std
adc
cmp
mov
cwtl
aad
js
pushf
cli
jbe
clc
fstpl
cmp
mov
mov
pop
aaa
push
shl
scas
or
ret
sub
cmp
in
cwtl
mov
insb
mov
adc
outsl
inc
test
sarl
cmp
jb
mov
push
enter
adc
mulb
mov
ja
adc
mov
mov
jg
cmp
mov
pop
jle
in
and
pop
cld
mov
sbb
jle
jmp
ret
or
cmpsb
fwait
dec
fcomi
sub
mov
jo
out
fisubrs
add
fnstcw
dec
jg
mov
xor
mov
xchg
add
std
add
shlb
xor
test
stc
dec
es
xchg
imul
lcall
std
je
jno
in
dec
je
jbe
scas
jb
xchg
dec
hlt
mov
repz
cmp
jge
shl
cld
sbb
jmp
ret
adcb
inc
jle
cmp
mov
insb
pusha
push
sti
xchg
jmp
push
push
rolb
jle
imul
vhaddpd
iret
cld
fdivl
dec
pcmpeqb
gs
mov
rorl
jmp
clc
dec
stos
inc
add
mov
notl
pushf
lret
rorl
sbb
sub
loop
aas
jb
sub
imul
push
xor
hlt
ss
lods
hlt
adc
push
aaa
mov
cld
in
dec
mov
sbb
lcall
push
mov
imul
cmpsl
out
mul
cwtl
sbb
push
sbb
pushl
ss
inc
stos
ret
xchg
jbe,pt
in
push
mov
mov
sbbb
and
out
ja
xchg
mov
loope
mov
ret
add
cmp
outsb
scas
sub
popf
push
cmp
bound
or
out
mov
pop
sti
mov
out
sbbb
hlt
mul
mov
movsl
xor
add
pop
adc
xchg
movsb
mov
test
dec
fxch
mov
xor
jmp
jg,pn
dec
lcall
insl
adc
add
mov
test
push
xorb
sbbb
sahf
add
sbb
lods
aam
add
mov
mov
jmp
addr16
or
fwait
xor
inc
lahf
mov
adc
daa
pushf
cmpsl
iret
dec
sqrtps
push
cmp
mov
and
dec
fdiv
mov
mov
sub
ljmp
cmp
lods
inc
out
mov
xchg
insl
test
jae
shlb
or
pop
dec
mov
sub
sbbb
adc
ja
aam
mov
inc
sub
mov
scas
mov
loopne
movb
xchg
notl
inc
out
inc
mov
sub
mov
sbb
mov
insb
fsts
adc
ljmp
pop
std
nop
sbb
sbb
jbe
arpl
enter
mov
jns
ljmp
shrb
sub
stos
pop
push
js
mov
mov
and
scas
or
and
dec
jl
cld
xor
inc
repz
mov
fdivl
and
imul
adc
dec
clc
adc
mov
jne
mov
jg
pop
lods
lcall
mov
addr16
mov
adc
bound
ficomps
cmp
sub
xor
cmp
or
push
ljmp
fcoml
fwait
aam
and
dec
xchg
mov
int3
test
pop
sub
inc
mov
lret
out
aas
lcall
cmp
sti
mov
call
mov
notl
push
cmp
mov
iret
mov
adc
mov
jmp
movsb
cmp
pop
fwait
xchg
in
xchg
fisubs
filds
je
out
aas
addl
lret
pop
xchg
movsl
mov
aam
dec
les
shlb
jbe
cli
int
xchg
adc
and
lret
das
sbb
sbb
cltd
in
pop
jo
lret
mov
dec
aam
dec
inc
xlat
or
mov
nop
test
movd
inc
mov
jns
push
pop
sbb
aas
or
aam
lahf
rclb
jbe
xchg
insl
int3
pop
sub
fcomps
stos
pop
jmp
call
js
or
sub
rorb
push
pop
ljmp
arpl
out
mul
hlt
sub
and
add
pushf
test
lahf
in
or
add
pop
fcoms
enter
ljmp
mov
pop
ja
cmc
cmp
jns
xor
pushf
lea
xchg
pop
je
outsb
jns
or
push
and
push
or
sbb
push
push
cwtl
and
cmp
pop
ss
pop
sahf
add
mov
movsb
repz
repz
cmp
lahf
or
xchg
fisttpl
das
xchg
test
inc
lahf
lea
pop
stc
push
scas
ret
cmp
pop
ja
cmp
or
stos
push
xor
cmp
mov
mov
adc
cmp
in
shrb
iret
mov
push
inc
aad
dec
lret
jecxz
inc
outsl
xorb
lea
sti
mov
xchg
ljmp
cmp
fistpl
stos
sbb
inc
filds
or
sub
cmp
add
dec
addr16
lods
ret
inc
scas
cs
leave
sbb
add
or
mov
orb
dec
add
loop
jp
xchg
aam
dec
aaa
andl
insl
adc
test
mov
mov
mov
mov
lods
mov
shlb
rcl
pop
and
xchg
add
pop
jmp
mov
adc
mov
in
inc
mov
jg
out
je
sbb
adc
xorb
in
fistl
mov
insw
sbb
pop
bound
dec
mov
cmpb
mov
jno
jo
fs
xchg
fistps
cmp
jb
out
pop
mov
jge
jnp
test
dec
repnz
mov
xchg
and
and
addr16
inc
mov
movsb
dec
ret
jbe
loopne
dec
jno
xor
jecxz
mov
inc
fnstsw
cli
sbb
in
shll
mov
imul
pop
mov
ljmp
enter
push
roll
ss
sub
dec
sbb
movsb
sahf
jne
lea
inc
shlb
mov
pop
adcb
scas
sub
jno
mov
inc
xor
sbb
push
jge
out
push
addr16
icebp
push
cld
pop
jnp
inc
xor
or
inc
sub
dec
cmp
repz
cmp
ficompl
outsb
xchg
push
or
addr16
xchg
xchg
mov
mov
sarl
cmp
imul
movsl
in
xlat
cmp
or
and
cmp
add
data16
add
and
mov
lret
jo
xchg
inc
jmp
mov
sub
mov
or
cwtl
aam
adc
xlat
mov
test
mov
test
mov
jo
lods
or
inc
addr16
std
and
ljmp
scas
pop
adc
add
cwtl
or
nop
nop
cmp
fwait
popf
mov
stc
xor
out
in
fcomi
push
divb
std
cmp
mov
inc
inc
fs
mov
lock
mov
sub
dec
xor
xchg
adc
cmpsb
sbb
sbbl
mov
jmp
repz
iret
mov
push
and
outsl
push
xor
in
rcr
in
and
adc
dec
leave
push
pop
in
mov
adc
push
sbbl
sbb
gs
adc
sbb
sub
cmp
mov
test
push
fs
xchg
add
lcall
mov
xor
ss
cs
sub
es
or
test
int3
mov
xor
mov
mov
loope
jecxz
rol
mov
cld
mov
gs
sub
shrl
add
int3
gs
pop
mov
lcall
loope
adc
andl
repz
repz
mov
adc
push
call
adc
sti
sub
xchg
jnp
fstpl
shrl
inc
fsubr
mov
push
out
pushf
mov
insb
mov
pop
addr16
mov
sub
dec
cli
iret
sub
aad
mull
orl
pop
into
mov
sbb
push
call
and
mov
push
or
in
mul
lahf
sub
int
cmp
and
cli
jle
test
packuswb
push
pusha
fists
insb
aam
lds
cmpsl
jno
pop
jmp
lods
jp
cmp
lret
cmp
cmp
insb
sbb
inc
lret
add
das
sub
dec
cli
cmp
iret
sbb
insb
add
sbb
and
dec
fdivl
das
mov
addb
cmpsl
aaa
shlb
dec
negl
mov
ror
lahf
cmp
mov
nop
nop
xor
lock
jge
xchg
dec
pusha
in
les
insl
lods
mov
xchg
pop
sti
pop
clc
inc
sbb
sbb
xchg
dec
daa
pop
ljmp
push
pop
lods
xchg
xor
mov
and
lods
hlt
out
jl
push
adc
mov
hlt
pop
inc
sub
xchg
scas
imul
mov
mov
in
add
add
or
mov
jbe
xor
xor
fsubrs
outsl
ss
dec
xor
jge
lcall
jle
lods
push
push
dec
jbe
dec
sub
sub
into
pop
sbb
pop
dec
iret
iret
pop
cmp
sbb
movsb
xchg
xor
mov
inc
fwait
sahf
pop
scas
movsb
dec
iret
and
jge
cmp
jo
pop
and
test
adc
fldcw
add
mov
add
adc
mov
push
fsubrl
mov
call
cld
out
repz
push
jg
sub
cld
xchg
or
push
inc
out
jp
push
push
and
out
int
mov
aas
sub
dec
xor
jnp
mov
sub
repnz
push
loope
sub
movsb
add
adc
stos
imul
rcll
jo
jmp
in
enter
int
push
xchg
or
cmpsl
mov
repnz
fdivrl
add
and
pop
pop
xchg
and
ret
xlat
add
movsl
add
mov
cmp
cmp
sub
jp
sbb
ljmp
cmpl
push
xor
jge
or
push
xchg
push
std
add
inc
pop
jno
jo
or
das
shlb
lahf
push
mov
cmp
sbb
or
jno
into
dec
add
fstps
je
mov
or
cwtl
ljmp
xchg
jg
xchg
push
and
jo
imul
fs
or
ret
inc
mov
lret
sahf
roll
jmp
inc
adc
dec
ljmp
mov
mov
pop
and
jle
mov
push
add
nop
add
push
ljmp
rcrl
add
lcall
push
mov
cs
insl
add
adc
push
lods
aas
jmp
in
jg
aam
lcall
cli
test
pushf
mov
cmc
xlat
addr16
cld
mov
jle
mov
cmp
sbb
pop
sar
or
jecxz
iret
stc
or
pusha
sub
push
sub
push
pop
sti
xor
gs
jecxz
jbe
mov
sahf
addr16
jb
mov
inc
inc
adc
adc
loope
outsb
ljmp
cmc
xor
mov
sahf
div
mov
movsb
sarl
adc
push
out
scas
jne
pop
push
dec
fadds
add
scas
adc
out
cli
lock
lret
pop
leave
imul
dec
lcall
add
xchg
dec
cmp
fsubr
iret
fwait
sbb
and
out
mov
mov
outsl
or
add
pop
and
push
and
pop
pop
ljmp
and
out
into
fsubs
js
std
mov
cmpsb
push
mov
add
test
mov
insl
out
lock
lret
dec
jmp
dec
inc
dec
jnp
stc
xchg
int3
mov
das
add
or
mov
push
mov
jg
iret
xchg
adc
jns
fidivl
xor
mov
insl
es
clc
mov
pop
and
into
pop
jbe,pn
test
jge
xor
sbb
xlat
shlb
push
lcall
and
add
fdiv
sbb
cmpsb
fstpl
movsb
movsb
inc
mov
and
fistps
hlt
jl
and
lods
push
xchg
sub
lret
cmp
mov
pop
insb
dec
sbb
es
rclb
fwait
or
sti
lock
mov
push
sub
cmc
dec
sbb
mov
loope
fcompl
adc
adc
adc
lods
out
fildll
rolb
movl
loope
mov
pusha
jne
xor
repnz
lcall
xlat
push
aad
addb
test
xchg
jae
cld
fidivl
std
add
sbbl
pop
mov
lds
int3
test
jmp
insb
pop
sub
xchg
add
sbb
push
sub
mov
mov
mov
gs
dec
addr16
outsl
cwtl
fildl
fwait
imul
popf
pop
adc
and
divb
shl
inc
sub
lods
add
sbb
dec
pcmpgtd
push
test
fstl
dec
adc
std
push
adc
xchg
sub
dec
aas
and
movsb
imul
or
sbb
xchg
sub
jge
cmc
xchg
out
testb
add
pop
fidivrs
stc
rcll
fnstsw
enter
pop
aas
xor
sbb
idiv
push
pop
in
dec
push
fs
add
clc
bound
jle
xchg
add
jo
inc
xor
inc
push
or
stc
sub
sbb
dec
inc
dec
sti
test
outsl
inc
popf
aam
pop
mov
adc
lock
mov
fnsave
lods
mov
test
add
loop
jle
sub
inc
cwtl
call
push
lods
or
stos
aam
mov
push
and
xchg
jo
inc
in
pop
ret
dec
sahf
mov
testl
xchg
not
out
xor
stos
xchg
push
shll
jge
pop
pop
shll
sar
out
xor
test
in
clc
in
xchg
sub
add
dec
ja
inc
pop
das
mov
xchg
cmpsl
adc
sbb
dec
in
test
sub
insb
iret
add
in
in
xchg
repnz
sbb
xor
mov
xchg
js
jbe
mov
dec
mov
fwait
and
mov
icebp
in
add
mov
sub
mov
mov
in
cmpsl
mov
inc
lret
xchg
cld
cld
xor
out
push
dec
ja
sub
mov
cmp
sub
xchg
dec
in
push
addr16
adc
adc
adc
imulb
daa
add
leave
imul
push
data16
std
mov
leave
fists
pop
xchg
sub
movsb
jp
pop
mov
push
subl
bound
dec
push
pop
stos
rclb
xlat
and
jne
push
fs
sbb
rol
adc
jmp
sub
jno
push
outsl
lea
loope
jg
adc
and
adc
add
les
lock
push
lods
outsb
sti
dec
adc
jp
lds
dec
cmpl
or
mov
cmp
push
xlat
sbb
mov
movsl
sbb
jmp
lret
cmpsb
shrb
insb
rol
dec
lret
lret
cli
insl
scas
sub
jecxz
es
das
lcall
sub
enter
xlat
leave
sbb
mov
js
nopl
mov
fdivrp
and
jnp
frstor
xchg
mov
rorl
inc
in
ja
jge
xor
aaa
cmp
cmp
pop
cmp
inc
lahf
insl
fidivrs
adc
rolb
incl
sahf
mov
xchg
mov
fdivrl
sbb
dec
mov
mov
icebp
cmc
dec
and
sbb
in
out
call
xchg
outsb
lahf
jne
call
push
cmpsb
push
dec
or
rcrl
mov
into
fldt
cwtl
ja
ja
gs
mov
xor
fmuls
pop
sahf
cmp
lods
mov
shlb
push
cmpsl
stc
pop
add
sub
jle
mov
stos
mov
mov
rcr
arpl
into
xchg
daa
jg
cli
mov
loopne
icebp
and
xchg
xchg
inc
or
sub
pop
jo
std
daa
sbb
xchg
push
inc
mov
mov
fcoms
iret
sub
add
lret
add
push
stc
mov
xor
inc
cmp
mov
bound
push
iret
pop
jmp
xor
insl
xchg
push
or
das
lods
cmp
or
std
adcl
std
sbb
sbb
mov
rol
mov
cmp
dec
mov
and
lahf
sub
iret
sti
xchg
and
jo
ljmp
sbb
add
ljmp
mov
shrb
add
pop
push
pop
ret
sbb
call
shlb
jle
lods
rcrl
fsubs
pop
clc
jecxz
insb
jno
jle
mov
into
cmp
adc
push
mov
call
add
xchg
sub
cmpsl
popf
sbb
push
and
jns
pushf
insb
mov
mov
xchg
test
stos
mov
mov
cmpb
lahf
mov
xchg
xor
outsb
repz
pusha
cmpsl
stc
test
cmp
jo
loop
icebp
addr16
das
inc
iret
std
mov
imul
je
jne
cmp
ljmp
xor
mov
xchg
popf
out
ret
ret
into
mov
mov
or
enter
jbe
leave
loope
scas
push
mov
adc
add
push
mov
push
lahf
and
mov
sbb
adc
daa
add
mov
push
ret
out
add
ret
push
das
and
pop
xchg
data16
fidivrl
dec
icebp
je
sbb
mov
jmp
and
in
xchg
aad
cli
cmp
stos
imul
pop
fdivs
push
mov
cmp
outsb
mov
inc
and
dec
sbb
mov
sub
cmp
or
xor
nop
adc
jnp
push
cwtl
fsub
sbb
mov
cltd
hlt
jge
mov
loope
mov
adc
imul
pop
mov
mov
pop
add
mov
adc
mov
fnclex
adc
nop
cmp
pushf
sbb
and
mov
add
mov
cmpsb
sbb
mov
xchg
movsl
shlb
cmpsb
push
jg
call
pop
outsl
or
or
adc
push
divb
add
mov
pop
xchg
roll
loope
add
push
sub
stc
pop
in
pop
xchg
rcr
int
ret
and
mov
jns
adc
daa
testl
mov
shl
in
mov
push
rolb
sub
cmp
stos
lods
or
mov
sub
jns
adc
push
jge
inc
leave
sbb
or
xchg
pop
movsb
xchg
and
ds
dec
sar
mov
xor
jl
rcrb
imul
inc
jmp
mov
imul
je
xchg
jmp
sub
in
pushf
pop
inc
jnp
addb
dec
data16
and
shll
inc
adc
mov
xchg
es
push
rclb
xsavec
lds
popf
jmp
inc
dec
mov
outsb
in
std
addb
dec
das
mov
sbb
ds
dec
out
pop
cmp
addr16
iret
add
pop
fidivrs
aas
dec
pop
inc
sbb
pop
leave
jne
sub
test
mov
add
and
sbb
in
add
xchg
xor
adc
inc
cs
sbb
scas
dec
jne
or
imul
dec
xor
mov
jbe
in
push
dec
inc
mov
dec
decl
xlat
out
mov
or
fstpt
aad
js
sub
das
pop
dec
sub
add
sti
mov
and
stc
ja
pusha
fwait
mov
dec
mulb
xchg
daa
jo
shrb
fisttpll
fwait
mov
cmp
push
mov
out
enter
mov
xlat
in
enter
test
pop
add
inc
xor
adc
dec
ss
hlt
dec
xchg
test
test
or
lcall
mov
fsubs
int
lock
cmp
and
sub
rcrb
jnp
leave
cmpsl
stc
daa
loop
jo
aaa
dec
andl
sbb
jns
or
es
loope
push
aas
pop
fwait
push
inc
das
and
mov
ja
insl
call
mov
and
mov
aas
mov
in
pop
cmp
dec
add
mov
in
cmpsb
sbbb
idivb
mov
adc
pop
mov
sbb
xor
xchg
imul
ja
jae
repz
pop
in
mov
dec
stc
mov
dec
subl
sbb
adc
jb
pop
mov
xchg
inc
and
and
in
stos
mov
cs
test
movsl
mov
sub
test
mov
fsubs
sub
inc
mov
and
or
mov
or
scas
leave
lock
mov
into
movsb
leave
mov
movsl
inc
push
mov
cld
pop
mov
pop
or
jo
adc
jnp
test
or
dec
cmp
aaa
jb
adc
movsl
hlt
jno
shrl
cmovae
cmp
sbb
pop
test
addr16
test
bound
leave
add
inc
and
imul
clc
scas
loop
fnstcw
mov
cmpsl
mov
inc
xlat
xchg
int
aam
roll
das
loope
cmpb
xchg
mov
xchg
dec
jle
lcall
icebp
dec
ja
test
fbld
add
shl
inc
push
pusha
xchg
push
loopne
cmp
aas
mov
bound
add
xorb
pop
jae
dec
scas
js
adc
ffreep
push
xchg
mov
mov
mov
mov
cli
mov
addr16
cwtl
clc
incl
jg
mov
xor
pop
cltd
aad
int3
jns
mov
push
dec
add
mov
pushf
lods
mov
iret
sub
xchg
stos
mov
inc
push
pop
ja
jmp
mov
dec
sbb
pop
xchg
push
lods
repz
call
sbb
out
js
adc
aad
adc
dec
push
cmpsb
adc
imulb
scas
cmp
lock
mov
ds
scas
aas
loop
pop
lods
xchg
test
push
stos
cmp
cmpsb
mov
pop
scas
decb
mov
mov
mov
aaa
cmp
fs
mov
in
out
push
jo
test
xchg
push
sub
insb
loop
pop
cmp
push
pusha
jg
aas
mov
inc
mov
mov
cs
scas
js
cwtl
jo
push
hlt
aas
lds
mov
xor
in
popf
icebp
rolb
adc
jns
mov
aad
imul
jae
mov
std
sbb
cmpb
cld
mov
cmp
xor
mov
pop
mov
jecxz
daa
test
or
fdivs
jp
jne
repnz
test
mov
xchg
inc
shrb
out
add
ja
add
push
in
sahf
enter
das
or
aam
sbb
stos
push
or
add
fldl
jp
loopne
cld
aad
push
jb
jecxz
push
xchg
pop
add
sub
add
mov
loope
sub
dec
shrl
add
add
lret
stc
sub
xlat
les
fbstp
aas
jecxz
lahf
leave
push
pslld
cmpsb
addr16
cli
fs
xchg
xor
cmp
pop
cmp
inc
jp
ret
cli
mov
push
pop
mov
push
and
imul
sbb
divl
out
jbe,pn
es
rolb
push
out
jle
sub
adcl
and
cwtl
cmp
fcmovbe
jl
adc
je
mov
fsubr
lea
and
cwtl
dec
ret
mov
adc
cli
cmpsb
inc
repz
daa
filds
xchg
cmp
repnz
sub
gs
mov
dec
pop
pop
adc
add
testl
loopne
les
inc
adc
mov
mulb
jmp
mov
outsb
lret
shll
jp
sbb
jmp
pop
repnz
jle
ret
pushf
add
jno
sub
cmp
outsb
sbb
test
sbb
arpl
mov
inc
jmp
cmp
and
sbb
hlt
cs
ret
mov
cmpsb
sbb
std
lea
ret
jne
jmp
mov
inc
sbb
pop
pop
cltd
jno
data16
mov
jp
idivl
lcall
sahf
push
sub
xchg
repz
das
out
fs
leave
xchg
cmp
je
fcompl
test
adcl
mov
mov
mov
dec
xchg
or
lods
sarl
insb
push
push
mov
popa
vpshuflw
imul
arpl
mov
pop
ja
push
enter
data16
js
jmp
or
pop
cmp
fldcw
and
pop
test
mov
rcrl
ljmp
aaa
xchg
andb
add
into
scas
mov
cwtl
into
popl
add
pop
repz
inc
sub
mov
ss
movb
cmp
mov
in
test
mov
push
imul
hlt
xchg
lods
xchg
push
push
sbb
xor
scas
andl
stos
adc
xchg
rorl
mov
dec
out
mov
mov
fdivrl
jmp
lock
cmp
sub
dec
add
sub
popf
leave
shlb
push
cmpsb
lods
lods
or
int
xchg
cmc
inc
std
push
std
lret
push
shr
or
dec
adc
repnz
xor
js
movsb
xchg
jg
and
push
bound
les
insb
dec
cmc
addr16
mov
btc
das
jb
dec
sbb
aad
xchg
and
popf
or
rcrl
rolb
sbb
inc
lock
pushf
push
cmp
cmpsl
cld
jae
aas
and
xchg
pop
pushaw
sub
es
pop
sub
out
mov
mov
movsb
loope
push
mov
enter
xor
ret
mov
mov
and
jg
orb
outsl
lahf
sarl
xchg
and
and
mov
test
dec
push
pop
ljmp
dec
mov
imul
xor
setne
pop
and
ja
arpl
mov
fs
sub
out
sarb
pop
sahf
pusha
call
loop
dec
pop
aam
mov
inc
enter
addb
repz
std
jmp
jns
cltd
and
xchg
and
pop
mov
lahf
int
xor
mov
scas
fimull
inc
adc
sbb
jns
adc
xchg
popa
rcl
insb
add
and
xchg
sub
mov
popa
cmpsl
cmp
xchg
xchg
mov
xor
dec
pop
mov
inc
mov
out
sub
repnz
bnd
mov
add
jl
inc
xchg
cs
loopne
arpl
add
xor
adc
mov
push
iret
inc
mov
xchg
js
jge
cld
call
outsb
mov
ret
or
jl
mov
mov
mov
inc
ds
daa
add
jae
pop
jp
or
dec
mov
jb
jne
or
inc
xor
jbe
insl
sahf
sbb
loop
pop
xchg
mov
out
and
adc
stc
popl
sub
push
and
int3
mulb
arpl
movsb
dec
ja
xchg
lea
jb
shll
loop
cmp
lret
xlat
fadds
or
stos
testb
add
jl
xchg
insl
lret
movsb
mov
xchg
ficompl
andl
or
pushl
pop
cli
or
aaa
inc
cmp
les
and
pusha
loop
mov
lcall
in
xor
mov
cmp
xor
mov
cmp
sub
lock
cmp
fbld
push
int
call
xchg
adc
inc
rclb
inc
mov
ja
pop
mov
cmp
nop
stc
cs
mov
sub
pop
sub
inc
xchg
pop
inc
jae
cmpsl
and
je
js
and
loop
outsl
fincstp
mov
sub
or
push
push
inc
outsl
sub
lock
or
mov
aas
mov
jp
lcall
and
lock
mov
cmp
add
das
enter
mov
xchg
in
mov
add
mov
adc
lahf
fistpll
outsl
addr16
imul
aaa
outsl
xor
iret
ret
pop
in
call
lcall
mov
hlt
and
add
fistps
mov
jmp
push
jl
adc
jp
mov
inc
or
lods
fwait
cs
ret
jne
add
jnp,pn
cmp
mov
icebp
stos
fisubrl
inc
mov
scas
mov
out
lahf
mov
andl
sub
push
aas
cmp
mov
loope
and
xor
idiv
dec
push
stos
dec
inc
push
repnz
sbb
sbbl
jp
rcr
int
lahf
inc
inc
sbb
cmp
in
pop
out
lret
jno
add
adc
divl
push
jmp
dec
es
outsb
xor
dec
jp
add
fidivrl
cltd
pop
aam
lret
iret
mulb
into
dec
push
pushf
ja
jnp
incb
inc
lret
adc
iret
jno
scas
lods
in
push
sub
inc
fcoml
jg
cmp
sbb
jbe
dec
mov
arpl
adc
mov
push
faddl
imul
add
pop
mov
sbbb
push
sub
pop
pop
xchg
adc
pop
xchg
test
addr16
push
shl
push
imul
sbb
mov
jnp
and
popf
or
fiaddl
stc
fcomp
movsb
or
pop
rolb
cmp
bound
testl
dec
loopne
push
ljmp
movsb
xorl
sbb
iret
sahf
push
xlat
jnp
mov
mov
jno
loopne
add
mov
ljmp
mov
adc
ljmp
xchg
ljmp
mov
adc
push
add
jp
fs
ja
aas
stos
js
arpl
dec
mov
int
add
xchg
fs
ja
mov
out
cltd
cmpsl
test
lds
push
pop
pusha
inc
pop
jae
dec
xor
lahf
test
mov
mov
cs
push
jmp
add
idiv
xor
rclb
mov
scas
mull
stos
shrb
repz
pop
jl
mov
push
inc
push
imul
fcoms
push
mov
shrb
js
outsl
cmp
xor
sub
mov
jbe
mov
pop
js
inc
push
shll
dec
ret
or
inc
and
sub
xchg
sub
sub
push
into
add
fmull
stc
rcll
out
xchg
bound
aad
or
dec
push
mov
sub
jns
mov
imul
ret
cmp
rcrb
pushf
lret
jbe
cmp
adc
fnstenv
js
mov
add
ret
cs
jmp
adc
hlt
leave
cs
xor
das
fisttpl
jle
mov
ds
loope
push
mov
cwtl
mov
inc
pop
sbb
add
jo
and
imul
or
mov
aaa
jg
imul
or
mov
cmp
mov
aad
arpl
sub
cmc
push
call
sub
mov
gs
mov
mov
pusha
xor
sbb
push
xchg
or
loop
push
sbb
aam
stos
and
jp
mov
ret
mov
push
lods
xor
xor
es
or
cltd
mov
pop
aad
lea
sub
mov
scas
out
cmp
shrl
addr16
pop
sub
lahf
scas
jle
in
fwait
jae
sti
cmpsl
sbb
xchg
ja
inc
mov
les
popa
outsb
test
lahf
jmp
out
lock
cmc
and
cmp
std
jbe
fcmovnbe
addr16
adc
mov
arpl
pop
jns
xchg
mov
in
movsl
xlat
dec
add
out
in
adc
pusha
repz
xchg
mov
mov
nop
or
cli
mov
add
mov
dec
cmp
mov
imulb
cmp
or
mov
adc
movsb
popf
mov
or
push
insb
test
mov
push
and
pop
dec
sti
adc
inc
push
cmp
mov
shl
xor
mov
jo
std
jno
fstpl
in
jg
inc
add
shrb
loopne
fs
dec
xchg
inc
mov
insl
je
stc
loope
cwtl
das
xchg
in
and
mov
pop
lods
out
pop
adc
pop
jle
pop
sbb
mov
dec
or
andb
mov
jl
adc
ljmp
loope
aas
clc
sub
dec
push
add
sbb
je
jb
enter
addr16
mov
leave
push
inc
mov
aam
xchg
pop
push
adc
loop
and
sbb
test
iret
sub
imul
mov
std
add
sbb
push
dec
mov
cmpsb
or
dec
fwait
popf
xlat
sbb
imul
or
mul
dec
pop
dec
fistl
frstor
jno
rorl
and
sbb
icebp
jno
in
ficoml
jl
pop
xchg
pop
out
lahf
outsl
test
inc
adc
mov
push
in
lock
lahf
daa
mov
add
in
loop
arpl
mov
je
in
xor
sbb
outsl
out
mov
clc
or
scas
jb
sub
dec
movsb
arpl
fcmovbe
push
mov
or
add
imull
push
test
push
push
pushf
aad
outsb
cmpsb
or
xorl
mov
xor
ja
dec
xorl
insb
add
mov
es
cmp
ds
xor
push
push
dec
movsb
fcmove
data16
hlt
addr16
fsubl
movsl
mov
mov
mov
sub
mov
jo
push
inc
movsl
or
add
add
jge
movsb
movsl
mov
es
mov
lcallw
scas
stos
or
dec
adc
dec
aas
lret
std
mov
leave
jmp
lock
pop
test
sbb
sub
in
mov
jns
jp
aas
sarl
pop
lds
mov
addl
in
xchg
pop
lock
imul
push
scas
add
xor
lods
pop
pushl
into
dec
shl
test
or
lahf
xor
loop
push
pop
add
pop
rorl
rorb
pop
into
std
or
pop
and
push
xchg
jne
sahf
add
cli
sub
scas
xchg
inc
inc
fs
lret
lcall
inc
jbe
iret
sbb
in
mov
fstpl
xchg
fwait
mov
xchg
add
adcl
push
stos
xchg
jns
lret
shr
test
mov
sahf
push
sbb
sbb
cmp
lcall
out
je
inc
daa
pusha
leave
xchg
cmp
adc
mov
in
add
test
in
add
cmp
nop
inc
dec
and
fs
sub
aas
dec
jns
test
jae
aaa
mov
addr16
insl
in
push
repz
xor
adc
cli
push
push
lds
lahf
mov
es
or
cmp
push
iret
ret
push
dec
jo
int
gs
loopne
inc
mov
movsl
sahf
and
aas
jbe
mov
jbe
in
push
sub
in
sbb
add
shll
jp
shll
xor
cmp
filds
xchg
int3
btc
push
repz
lcall
iret
and
arpl
jnp
pop
cmp
sbb
hlt
repnz
and
js
sub
arpl
push
inc
adc
add
jb
ret
cwtl
das
ja
mov
imul
outsl
popa
xlat
dec
sub
aas
adc
inc
rclb
inc
or
cltd
faddp
pusha
mov
pop
dec
outsb
inc
mov
inc
fcompl
sbb
cmp
pop
scas
xor
pop
scas
add
fsts
je
dec
test
inc
push
cmp
adc
movsb
faddp
stc
ja
stos
lret
testl
dec
push
push
mov
cli
outsb
adc
sbb
out
mov
rol
dec
adc
int
inc
out
pop
cmp
rcll
push
nop
sarb
mov
mov
sbb
outsl
ja
aad
push
mov
jns
stc
or
inc
mov
call
lds
shll
push
std
push
mov
push
mov
inc
out
xchg
mov
mov
jle
xor
mov
jg
push
dec
std
push
js
jmp
movsl
pop
xchg
adc
xchg
jp
and
push
repnz
push
sbb
int3
fsubr
ja
outsl
andb
pop
lds
popa
and
insb
and
out
pop
jnp
sub
inc
pop
xor
popf
sub
xchg
xchg
inc
ljmp
mov
sub
mov
cmp
addr16
popf
gs
cld
dec
xchg
js
adc
mov
mov
jne
call
loopne
je
movsl
mov
pusha
xchg
stos
test
ret
ret
mov
xor
or
sub
aam
mov
xorb
jno
push
push
ficomps
xor
mov
hlt
fsubl
add
and
dec
lods
rcll
pusha
push
mov
iret
out
loopne
ds
adc
lret
sbb
jecxz
adc
inc
mov
dec
popa
in
xchg
pop
push
scas
dec
xchg
je
stos
es
xchg
or
es
aam
inc
nop
repz
or
inc
dec
mov
icebp
rorb
pop
or
xor
out
inc
flds
sub
xor
sbb
jnp
adc
mov
or
hlt
add
es
hlt
jne
inc
daa
jno
sbbb
loopne
je
adc
ret
adc
fcmovbe
push
xchg
scas
movsl
xchg
or
addb
rcrb
lods
bound
mov
dec
and
cmc
push
mov
jno
js
mov
scas
push
pop
fstl
das
and
ljmp
das
stos
xchg
or
inc
mov
adc
jecxz
sti
loope
dec
icebp
mov
aad
push
mov
push
fcoms
pop
ds
aad
cmc
add
or
jne
xor
fsubrl
lock
push
sbb
rcrl
adc
jns
fisubl
movl
or
int3
mov
pushf
or
mul
mov
ljmp
in
push
out
rcrb
push
testb
fisubrl
adc
repnz
mov
lahf
add
and
enter
inc
or
in
fs
into
clc
inc
mov
addb
movsl
insl
or
adcl
aas
fs
add
xchg
fsub
out
cli
push
jge
gs
fistl
xor
inc
cli
xchg
jp
fbstp
jbe
lods
fisttpll
lret
mov
out
mov
gs
xor
lret
xchg
rolb
add
jnp
pop
test
testl
les
jmp
lcall
cs
cmp
mov
jb
lret
sbb
movsl
xlat
cmp
inc
cmp
mov
xchg
sub
sbb
sti
cwtl
cmp
js
push
daa
jle
pop
pop
inc
fwait
push
sbb
or
sub
cmpsl
mov
in
xchg
inc
mov
lods
pop
cmpsl
cmpsl
lods
je
test
xor
mov
mov
jo
pusha
and
adc
cmpsl
pop
or
adc
or
cld
xchg
int
adc
sbb
mov
lods
push
mov
cmp
in
je
push
cmp
push
int3
inc
scas
aas
std
test
pop
push
ljmp
adc
rol
ss
icebp
cld
inc
sahf
lods
mov
into
mov
jo
or
jno
lret
insb
dec
daa
xchg
loopne
les
xor
pop
adcl
sbb
fildl
sbb
test
inc
lods
xchg
or
pushf
lea
out
sti
adc
mulb
inc
push
pusha
jne
and
insl
or
jecxz
fsubrl
push
stc
mov
push
xchg
out
sti
arpl
test
cs
aas
insb
out
mov
push
lcall
cltd
cmp
loopne
jl
sbb
repnz
lods
aad
mov
sbb
xchg
push
pop
pop
lcall
mov
fs
cmpsb
mull
mov
xchg
adc
lock
or
push
and
sarb
fnstsw
mov
cmp
or
jg
jle
mov
jb
ljmp
jg
mov
fsubs
ds
adc
mov
call
ss
add
mov
sub
in
sub
adc
mov
dec
xor
push
test
out
test
test
jno
adc
jl
lea
mov
mov
ja
jmp
js
jo
inc
aam
lods
lret
mov
scas
fwait
inc
dec
cld
cmp
add
mov
daa
leave
inc
add
adcb
cmp
fwait
and
sbb
mov
shll
push
cmp
jb
adc
rcrl
sub
insb
push
dec
mov
mov
xor
shrb
push
xchg
inc
cmp
add
jecxz
or
dec
scas
or
mov
mov
dec
mov
test
test
add
mov
ret
inc
sub
subl
data16
jns
jg
rorb
scas
sbb
imul
outsb
adc
mov
cld
cli
xor
add
aad
jecxz
out
adc
test
pop
test
icebp
mov
fists
cmpsb
inc
aas
jnp
xchg
inc
mov
das
in
or
scas
and
repnz
xchg
inc
sub
mov
jmp
xchg
and
icebp
outsl
subb
mov
xrelease
test
outsl
mov
int
or
push
movsb
sbb
and
sub
enter
jbe
jle
push
aam
adc
pop
adc
cmc
jmp
sbb
loopne
jg
lret
xchg
jae
mov
mov
fsubl
sti
sbb
cs
mov
mov
sub
out
adc
cmc
mov
lea
stos
fbstp
cld
adc
out
add
test
popa
fmull
jno
fwait
mov
fistl
mov
cmp
ss
into
addr16
cmp
dec
out
test
scas
jae
jecxz
into
and
push
add
and
mov
push
mov
shlb
adc
int
fiaddl
and
mov
fs
lret
setg
adcl
fwait
xchg
mov
ds
mov
popa
or
pop
cmpsb
cmp
call
aaa
sti
popa
pop
mov
and
andl
add
push
and
cltd
std
jbe
pop
shrb
and
jb
adc
mov
xor
leave
sub
in
insb
sbb
push
test
adc
mov
pushl
cs
jnp
lahf
jecxz
jg
lret
arpl
mov
and
pushf
and
or
fcomps
mov
mov
adc
outsl
mov
outsb
scas
mov
xchg
fidivs
jae
push
fisubrl
ret
sbb
adcl
fisttpl
rcll
dec
ja
xor
mov
xchg
push
mov
add
or
hlt
add
dec
pop
in
xor
inc
cmp
outsl
dec
outsb
and
push
pop
xor
sub
inc
mov
jno
divb
sbb
xchg
mov
pop
xor
jg
mov
enter
lods
lret
mov
insb
ret
cwtl
mov
orl
fbld
pop
pop
cmc
hlt
loop
scas
inc
out
jae
jl
rcl
cmp
mov
lret
cld
lcall
in
jge
push
mov
jmp
or
sub
cmp
dec
xchg
pushf
or
sbb
gs
fcomps
faddl
in
inc
push
and
xorl
inc
add
inc
dec
roll
pop
xor
dec
jns
push
lods
test
mov
mov
fucom
pushf
pop
pop
xchg
add
fwait
sub
loope
cmpsb
outsb
dec
adc
call
out
sbb
mov
addr16
sbb
mov
jmp
lahf
cmpsb
jle
lcall
repz
test
mov
fdivs
mov
in
sbb
mov
inc
addr16
ds
jle
ror
inc
test
test
jo
repz
cmp
aas
bound
aam
push
mov
or
enter
mov
mull
daa
dec
in
out
mov
test
xchg
sahf
fldenv
sti
mov
sbb
inc
aam
out
cmp
push
cs
mov
cltd
test
sbb
xchg
leave
pop
cmpsb
push
inc
out
mov
mov
imul
inc
mov
add
lret
inc
insl
in
mov
nop
pop
dec
adc
mov
sub
dec
cltd
push
push
fdivs
push
jg
daa
arpl
xchg
push
shlb
adc
xchg
push
and
ljmp
sarl
aas
orb
std
mov
jno
popf
jns
adc
aad
lods
cmpsl
push
mov
mov
movsl
js
dec
ljmp
inc
mull
inc
insl
push
test
ret
adc
mov
fistl
sub
enter
push
aam
fwait
mov
push
push
sbb
sbb
xlat
cmp
dec
clc
pop
sbb
pop
sub
add
js
outsb
pushl
idiv
ret
or
jno
pop
xchg
in
icebp
pop
add
xchg
add
addb
or
cmp
outsl
cwtl
cmp
sub
and
jp
repz
movsb
out
lea
pushf
jns
mov
push
sti
xchg
add
ret
orps
xchg
mov
cmc
sbb
hlt
cmp
add
fmul
add
mov
mov
andl
cmp
test
pop
pop
add
lahf
vrsqrtss
xor
xchg
enter
fwait
loopne
ljmp
jmp
in
dec
es
or
adc
jg
fwait
cli
dec
adc
and
jb
xchg
sub
jns
and
rorl
out
movsb
mov
pop
add
pop
rcr
lret
cmp
mov
sub
imul
xchg
dec
or
ljmp
dec
fisubrl
jo
test
sbb
dec
roll
sub
inc
out
mov
push
js
imull
sarl
insl
andb
js
in
or
ljmp
ret
and
loopne
and
mov
and
out
dec
fnstenv
idivl
dec
push
and
ss
popa
push
mov
cmc
cli
stc
inc
jp
scas
lock
jb
lret
push
in
cmp
test
cmp
fcmovb
stos
int3
sub
inc
xchg
jecxz
rcr
adcb
sti
imulb
in
mov
pop
sub
add
push
stos
push
mov
mov
push
mov
addr16
dec
mov
xchg
cmpsl
pop
ficoms
es
push
adc
mov
ds
fildl
push
outsl
iret
mov
fistpl
add
mov
lock
mov
dec
stc
loopne
inc
loopne
sub
add
sub
sub
mov
aaa
in
fs
inc
xchg
cltd
mov
xchg
pop
dec
dec
ds
iret
cltd
or
in
mov
cmpsb
rolb
pushf
cvtpi2ps
movsl
fisubrl
insl
or
jno
lcall
fisubrl
cltd
popa
sbb
or
jnp
push
adc
and
mov
push
mov
les
ret
stc
jno
and
pop
push
lret
or
inc
shlb
or
pop
mov
fsts
je
xchg
ficoml
sahf
test
xchg
cltd
out
mov
xchg
nop
pop
cmc
nop
push
rcr
aas
and
sar
test
dec
or
or
mov
jle
jo
mov
cld
shll
dec
test
adcb
sahf
or
mov
sahf
push
out
daa
pop
add
js
push
sarb
pop
sbb
or
shr
cmp
jmp
icebp
xchg
pop
pop
pop
rcr
lods
pop
jns
inc
mov
inc
imul
jns,pn
arpl
enter
dec
mov
mov
fwait
pop
adc
clc
outsl
ret
mov
jecxz
sub
push
das
mov
jae
mov
push
add
cltd
inc
bnd
shl
cs
sti
or
push
sbb
dec
repnz
jmp
and
mov
out
mov
mov
mov
add
stos
pop
push
cmp
push
fisubrl
lods
sbb
pop
push
in
aas
stos
popa
jno
dec
sbb
aam
fimuls
mov
jbe
lcall
xchg
lcall
sbb
jbe
in
popa
lock
and
pushf
lret
mov
rcl
xor
fwait
nop
nop
clc
adc
loop
loop
and
addr16
pop
xchg
in
call
jle
ds
gs
cmp
pop
or
not
lods
gs
sbb
push
cmp
movsl
jo
or
aam
mov
push
stos
pop
or
jp
mov
pushf
dec
dec
mov
xor
and
rcr
cmp
jle
cmp
leave
and
cmpl
stc
and
dec
mov
bound
loop
jmp
pop
sbb
scas
add
inc
add
pop
xchg
cltd
cmp
xchg
cli
pop
shl
js
add
inc
lea
xor
mov
jns
call
xor
gs
jmp
xor
cmp
movsl
movb
imul
add
jb
or
cld
push
pop
out
cmc
push
pop
shrl
mov
fistpll
faddl
in
mov
lods
adc
lret
jg
cld
lcall
inc
inc
adc
into
orb
sub
xchg
pop
pop
repnz
sbb
aaa
pushf
idivb
add
sti
inc
add
cwtl
hlt
push
and
jae
popf
std
xchg
test
call
pop
sub
and
shr
push
xchg
jge
xchg
mov
mov
sahf
mov
mov
dec
mov
mov
dec
jae
hlt
sbb
add
push
xor
loop
add
orb
xor
addr16
adc
iret
incl
add
sub
fdiv
cmp
jl
dec
pop
sbb
add
ror
push
loopne
sub
jno
ss
cmpsl
repz
xor
sub
sbb
out
ljmp
inc
mov
mov
adc
push
inc
adc
jl
jmp
jge
cmc
test
xchg
lret
shlb
xchg
imul
and
cwtl
lcall
mov
and
mov
ljmp
int3
sub
mov
xor
fwait
mov
jo
sub
dec
add
lahf
enter
js
stos
pop
xchg
add
fimull
jecxz
or
addr16
pop
or
je
xchg
arpl
pop
shlb
add
int3
in
mov
ret
jl
pop
aam
push
add
hlt
sub
push
mov
pop
and
mov
shr
mov
xchg
inc
push
fdiv
lds
and
rolb
xchg
imul
enter
cmp
lods
sbb
cmp
das
sbb
dec
mov
hlt
mov
inc
addb
adc
mov
mov
popa
or
nop
push
popf
sub
frstor
mov
sbb
call
sbb
popf
push
jmp
das
dec
mov
jmp
iret
lahf
in
lods
clc
sbb
and
mov
push
lods
xchg
lret
arpl
mov
adc
out
ret
es
xor
incb
jbe
lret
lcall
dec
cltd
in
pop
out
mov
inc
sub
test
outsl
sbb
jg
data16
mov
mov
ljmp
adc
dec
and
test
mov
jmp
fistps
mov
and
into
cmp
adc
xor
cmp
sbbl
inc
outsl
cli
in
add
sub
add
scas
push
or
scas
push
iret
jae
in
fwait
pop
enter
push
xlat
aas
imul
imul
jb
cmp
in
popf
xchg
cwtl
sub
mov
push
rcrl
jne
mov
rcrl
dec
ret
loope
loop
fbstp
mov
cmp
mov
mov
jle
push
xchg
sbb
cmp
push
mov
push
xchg
insb
call
pop
enter
add
pusha
lwpins
movsb
or
jo
push
cmp
lea
mov
jmp
inc
mov
insl
or
adc
xor
xchg
roll
sahf
add
inc
inc
fdivrl
lahf
inc
rcr
pushl
cli
movl
arpl
popa
inc
iret
xchg
xchg
data16
pushf
test
mov
les
icebp
add
add
push
mov
daa
out
and
addr16
hlt
les
jg
repnz
jl
mov
cld
movsl
dec
int3
fs
push
push
in
sbb
cli
ja
lods
add
mov
and
rcll
clc
adc
out
fs
mov
mov
pusha
insl
sahf
inc
sbb
call
lods
scas
repnz
cld
scas
mov
or
and
inc
sub
pop
jne
inc
jne
cwtl
dec
cmp
mov
fcmovnbe
enter
jne
dec
addr16
xchg
es
enter
mov
rclb
sub
aad
aam
out
pop
jne
loop
mov
mov
test
push
insl
jo
popa
cld
aaa
pop
mov
cld
or
pop
in
ja
cltd
out
aaa
aad
jns
notb
testl
pop
cmpsl
leave
mov
movsl
lods
inc
mov
sbb
cmp
cli
xor
cmp
out
add
sub
movsl
inc
xor
cmpsb
xchg
add
mov
and
mov
fsubrs
stos
rcr
fstpt
loope
pop
and
lahf
pop
jno
std
je
inc
and
sub
lds
shrb
xor
insb
sub
dec
in
dec
je
data16
cs
aam
dec
jg
pop
je
mov
lret
fsubr
add
arpl
test
popa
pop
cld
in
ja
fbld
cmovo
fcompl
repz
inc
sub
bound
shlb
pushf
rcrb
outsb
fadd
rcrl
inc
pop
cmp
rclb
mov
ds
stc
loop
and
dec
outsl
hlt
fs
lcall
int3
daa
cmpsl
pop
pop
mov
inc
push
sarb
aad
icebp
xor
mov
loop
daa
or
pushf
cmp
in
cmpsl
sub
in
cmp
test
cmp
repz
mov
pop
lea
fcoms
sbb
sub
call
push
push
xchg
hlt
shll
dec
outsl
repnz
test
rorl
ljmp
shrb
dec
aas
jmp
insl
imul
lcall
int3
push
fiaddl
out
mov
push
fstpt
mov
mov
xor
pop
cmc
repz
insb
dec
and
mov
aaa
push
push
push
add
add
mov
fcomip
pop
mov
mov
cmp
bound
pusha
add
je
xchg
xchg
sub
cmp
dec
mov
dec
lcall
xorl
lret
outsl
out
cmpl
lock
mov
xor
ds
jbe
std
fidivl
aam
adc
call
scas
mov
pop
dec
sahf
lods
iret
cwtl
testb
sti
imul
push
cmp
std
in
mov
cmpsb
mov
hlt
sub
call
push
xchg
mov
push
or
cmp
repz
data16
lea
stos
dec
cmp
inc
faddl
aas
adc
mov
fnstcw
lods
mov
ja
pop
movl
shlb
rcrl
mov
pop
sbb
mov
dec
mov
mov
mov
or
je
bound
sub
jge
dec
mov
jne
out
test
push
sub
mov
loop
sbb
push
mov
stc
in
divb
lret
hlt
xor
push
xlat
ret
aaa
jecxz
int
cltd
pop
cld
js
mov
out
xor
dec
out
xor
incl
mov
and
cs
push
shlb
cmpps
iret
sti
test
loopne
add
pop
mov
or
xor
inc
lds
xor
sbb
out
test
sub
testl
lea
int
mov
pop
imul
lahf
in
mov
out
fsubl
add
das
out
ss
mov
add
add
xchg
lea
cmp
cs
imulb
push
ret
sbb
stos
int
pop
mov
add
and
shll
je
test
cmc
xchg
iret
and
cwtl
jno
mov
js
nop
fiaddl
add
push
cs
inc
cmp
lds
stos
xchg
jmp
imul
pop
repz
adc
bound
pop
mov
fwait
or
mov
es
test
mov
aaa
cmpsl
pop
sarb
xor
dec
inc
push
icebp
sahf
rclb
loopne
data16
inc
lods
nop
ljmp
scas
jg
stc
fdivs
jb
inc
sub
addr16
jp
add
pop
outsb
adcl
xor
inc
imull
mov
push
rcl
ficoms
xchg
dec
rcrb
cmp
and
fstl
cmp
orl
cmp
mov
mov
xor
lret
xor
sahf
pushl
ficompl
or
mov
push
inc
mov
xchg
lods
cli
addr16
or
mov
sbb
addb
add
sbb
cmp
add
clc
pop
stc
outsl
dec
lds
xor
push
lock
mov
mov
push
leave
testb
daa
dec
fnstcw
js
aaa
repz
enter
imul
push
xchg
stos
lahf
xchg
divb
fiaddl
repz
and
clc
out
xlat
inc
inc
popa
cltd
jg
into
rclb
cmpl
mov
and
sbb
inc
out
mov
gs
shll
xor
add
jle
aaa
push
mov
incb
inc
imul
in
lock
shl
sub
popa
xchg
or
xchg
int3
imul
stos
jno
pop
jecxz
cmp
adc
call
lea
jecxz
adcl
fcoml
in
out
mov
push
sti
fstl
push
add
mov
sahf
arpl
call
ds
adcb
sbb
pop
pop
out
test
fisubl
pop
insl
divl
mov
xchg
in
mov
cli
test
cmp
dec
xor
ret
test
fcompl
cs
sub
xchg
xchg
sbb
mov
push
and
jb
inc
cmp
imul
xor
sbb
and
jge
flds
mov
ja
pusha
aam
mov
jp
xchg
push
cmp
or
xor
mov
fwait
or
mov
jecxz
mov
sub
popf
jge
and
bnd
inc
xchg
dec
fwait
aas
push
js
scas
jmp
cmp
or
sbb
out
imul
mov
xchg
imul
jmp
sub
mov
adc
inc
push
mov
rolb
jmp
fildl
dec
fs
std
ss
xor
lods
add
mov
xor
pushf
out
out
fisubs
push
scas
pusha
in
dec
inc
xchg
aam
negb
fwait
cmp
adc
inc
arpl
test
ss
and
and
mov
xor
sub
cmp
repz
xchg
mov
and
push
xor
xchg
std
push
ret
ds
or
inc
add
mov
fmul
mov
inc
pop
cmp
mov
mov
dec
mov
jbe
xor
out
test
fimull
xchg
loopne
je
test
adc
mov
pop
movsl
inc
or
cmp
lds
mov
in
mov
test
fisttps
xchg
sbb
arpl
cmp
les
xorl
push
cmp
inc
xchg
pop
inc
pop
test
xchg
dec
arpl
call
popa
dec
popa
inc
fldl
fcom
stc
loopne
inc
mov
mov
jmp
gs
fiadds
jmp
jb
bound
xchg
push
xchg
mov
sbb
sti
mov
push
pusha
ret
cltd
jno
sub
push
scas
xor
mov
or
xor
sti
cmp
add
shll
hlt
mov
pop
ss
ficompl
mov
push
lds
cld
das
arpl
pop
inc
dec
out
fwait
cltd
or
scas
bound
dec
xchg
inc
sub
jo
mov
bnd
cmp
pop
rcll
xlat
leave
loop
xchg
es
ret
mov
cmpsb
int
cmp
cli
sub
sub
push
ja
out
lods
popa
ss
dec
loopne
fnstsw
sub
jne
dec
xor
sbb
mov
sbb
popf
mov
push
sbb
or
fcmovne
arpl
mov
sbb
aam
dec
xor
dec
cmp
sbbb
mov
ffreep
lahf
icebp
movsl
sbb
adc
lods
inc
jp
call
cmc
pop
test
jp
lcall
mov
or
jo
iret
fisubl
xchg
add
es
xchg
pop
mov
pushf
cwtl
dec
int
dec
xchg
inc
cmp
pop
das
imul
sbb
je
mov
mov
imul
lods
ss
fldenv
cmp
pop
dec
push
xor
adc
adc
inc
jg
jmp
enter
pop
pop
jnp
cmp
push
shrl
cmp
jecxz
outsb
in
xchg
xchg
mov
stos
loope
and
mov
fldcw
adc
pop
pop
addb
fs
xlat
inc
xor
jbe
inc
push
sub
jns
cmp
mov
std
cmp
sbb
call
or
stos
ljmp
mov
xor
sub
fsubs
cmp
ret
shl
cmp
add
cmpsb
lcall
jbe
xorl
xlat
int3
cmp
fldl
add
mov
pop
std
or
xor
sahf
jae
push
jmp
cmc
pop
or
lcall
mov
iret
loopne
test
add
mov
pop
mov
loop
jmp
sti
repnz
mov
xchg
cmp
arpl
fisubrl
mov
xchg
or
and
adc
setbe
inc
jp
push
leave
pop
inc
push
xor
nop
xchg
add
cltd
sbb
insl
arpl
cmpsb
cmp
mov
ja
mov
nop
cmp
js
jns
sbbb
cmp
shrl
cmp
aaa
pop
test
fdivl
loope
lret
push
or
mov
jmp
lret
clc
jae
mov
jnp
xlat
mov
cmpsl
or
pop
mov
nop
nop
cmpsl
iret
ficoms
arpl
mov
pop
movsl
dec
inc
push
fwait
rcll
sbb
outsb
pop
test
loope
fdivrs
xor
pop
mov
imul
adc
das
int
aam
lahf
xchg
in
call
and
not
insb
mulb
mov
xor
stc
sbb
inc
jmp
inc
inc
popa
mov
pop
iret
call
je
arpl
jno
lea
pop
scas
repz
hlt
push
push
int
inc
pop
movsb
mov
cld
xchg
add
pop
jno
inc
cmp
imul
das
imul
inc
hlt
adc
bound
aas
loope
xchg
insb
sub
stos
inc
movsb
mov
mov
jns
push
insl
push
cmp
fdiv
xor
pusha
int3
pusha
test
test
repnz
sub
cmp
mov
int
fisttpl
sbb
sub
cld
aaa
xorb
or
fnstsw
pop
jb
lods
fsubl
sub
cmc
pushf
adc
sti
jg
and
xlat
dec
popf
sti
fmuls
push
and
shrb
cs
cmpsl
mov
fcoml
mov
jno
mov
out
mov
add
aas
mov
and
js
mov
repnz
cmp
aad
sub
mov
mov
jp
movsb
push
imul
repz
pop
or
xchg
movl
mov
fwait
jo
pop
ret
lea
sbb
fidivs
movsl
xor
into
cmp
xor
cmp
repnz
jb
frstor
test
jle
rclb
fs
sbb
and
xorl
int3
fildll
dec
inc
testl
lcall
push
daa
loop
stos
sbb
or
inc
lock
add
push
sbb
gs
loope
pop
insl
iret
xchg
lods
xchg
xor
cmp
scas
dec
jnp
aam
ret
loopne
mov
scas
add
roll
aam
sbb
add
cmp
add
idivl
aas
lods
lcall
das
in
cwtl
and
inc
loop
call
push
inc
xchg
mov
cli
xchg
das
mov
add
mov
adc
jno
xchg
sbb
jb
push
inc
pop
jnp
sub
inc
cmp
mov
idiv
or
mov
or
lock
push
aaa
adc
dec
call
push
pop
sarb
mov
and
jmp
rcrl
and
cmp
push
cs
push
inc
mov
addr16
mov
ss
hlt
mov
pushf
movsl
dec
cmp
dec
incl
subl
push
insl
push
lods
testb
mov
push
popf
adc
jno
out
add
or
adc
pop
ret
std
dec
mov
mov
xchg
ss
cltd
inc
test
dec
lds
cwtl
stos
cld
in
repz
mov
mov
inc
popf
out
mov
invlpg
and
int
push
popa
inc
sub
cmp
add
add
cmp
jl
std
test
cli
sti
movsb
jns
aas
xor
rcrl
scas
xchg
cmpsb
out
push
cmp
test
lcall
cwtl
pop
jecxz
xchg
movsl
aad
outsl
xchg
adc
loop
ficoms
xchg
lds
into
ljmp
mov
andl
and
rcrb
nop
pop
insb
inc
mov
and
daa
add
inc
jg
mov
push
or
inc
cmpl
and
sbb
and
sahf
mov
inc
push
insl
adc
data16
adc
movsl
fprem1
mov
mov
testl
adc
ss
sub
divl
test
jle
flds
mov
push
add
mov
pusha
dec
sub
aad
mov
inc
test
jae
mov
xchg
repnz
lcall
lods
nop
fistl
xor
mov
mov
in
xchg
and
fiadds
test
nop
pushf
fistpll
leave
dec
jp
push
imul
in
outsl
sbb
sti
sub
cltd
xor
jnp
cltd
rcrb
mov
out
xchg
inc
sub
mov
cmpsb
and
das
jns
inc
xchg
movsl
cltd
aam
push
push
pandn
inc
mov
fidivs
mov
jecxz
repz
push
sub
inc
imul
cmp
mov
movsl
imulb
out
push
aam
mov
push
enter
sbb
pop
inc
dec
mov
loope
dec
jb
xchg
jg
or
popa
repnz
mov
sub
mov
sbb
adc
int3
jns
ret
iret
dec
cmpsb
jae
mov
out
lock
test
call
mov
add
mov
jg
jne
mov
add
mov
ja
pusha
fidivrs
lahf
and
lret
sti
repnz
in
rorl
loope
or
enter
inc
insb
jge
jp
stos
push
and
rorl
dec
cld
adc
jmp
and
adc
jle
lock
mov
pushf
test
xchg
mov
adc
cli
mov
xchg
fwait
loope
inc
and
jmp
xor
cmpsl
ljmp
dec
push
and
and
mov
fdivl
jge
loopne
stos
jge
pop
inc
sub
mov
sub
adc
jnp
sbb
dec
sbb
lds
pop
stc
das
out
cs
jnp
push
pop
dec
xchg
pop
in
fbld
push
incl
loopne
pop
mov
iret
cwtl
ret
pop
adc
push
mov
scas
ficompl
pop
fwait
addr16
leave
out
inc
out
pop
dec
ret
out
pop
adc
sub
ficomps
dec
add
xchg
push
cmpsl
mov
inc
pop
and
push
or
push
test
sub
fidivrl
xor
or
movsl
hlt
lahf
xchg
loopne
cltd
mov
xchg
mov
out
dec
cmp
xchg
or
mov
test
inc
sbb
rorl
fs
cmp
ljmp
test
mov
mov
or
dec
pop
sbb
shll
adc
jo,pt
imul
call
movsl
mov
stos
cmp
push
pop
xor
lods
xchg
mov
inc
in
or
stos
testl
out
ds
scas
xor
or
nop
pop
xor
in
add
inc
ror
addr16
adc
inc
push
mov
mov
scas
pop
mov
pushl
stc
shll
xlat
addr16
inc
aad
mov
cs
sbb
aas
add
sub
push
fwait
div
push
loop
push
mov
and
clc
das
test
jb
mov
mov
mov
insl
inc
jbe
ss
push
xor
push
or
movsb
cli
push
lods
dec
cltd
pop
jno
fs
jno
ljmp
ret
jp
aam
pushf
out
movsb
outsl
pop
jns
aad
popa
xchg
or
mov
ret
mov
lock
ljmp
cmp
inc
add
sub
stos
es
xor
aaa
addr16
jno
sbbl
mov
gs
mov
mov
jl
fwait
ret
xchg
or
xor
mov
xchg
out
pop
cmp
cmp
push
addr16
rclb
sbbl
fcompl
adc
iret
test
jno
ficompl
dec
fwait
dec
xchg
and
xchg
mov
cltd
pop
icebp
jmp
daa
push
push
addr16
lods
mov
push
cmc
int3
aad
out
repz
imul
dec
ret
imulb
lods
inc
int
add
nop
push
sbb
mov
jne
nop
jg
xchg
or
aaa
dec
aaa
lret
xchg
add
pop
sbb
ds
inc
neg
fistps
int
adc
faddl
or
push
add
or
mov
ficompl
test
and
sbb
mov
fldcw
sbb
inc
sub
out
mov
clc
into
pop
mov
outsb
and
enter
xchg
fmuls
rcrl
inc
inc
cli
lock
loopne
mov
inc
gs
push
inc
enter
xor
js
jb
mov
iret
jp
mov
sti
adc
or
and
pop
bound
cmp
arpl
fcoml
push
test
or
xor
inc
es
movsl
imul
sub
out
xchg
movsb
jl
les
mov
sbb
orb
out
dec
fstl
addr16
mov
sbb
xlat
jb
rdtsc
jne
fistpl
jno
mov
dec
lcall
add
fwait
lahf
and
inc
arpl
stos
fsubl
jge
pop
jmp
shll
in
sbb
iret
and
rcl
lret
xchg
cmp
hlt
push
and
das
lods
adc
jns
jno
int3
cmp
jae
jmp
lahf
shll
out
iret
into
push
sub
mov
push
cld
cmp
add
clc
mov
lcall
iret
xor
sbbb
jge
pop
lret
sti
into
dec
mov
fwait
ss
lock
mov
popa
add
mov
sbb
loope
fisubrl
int3
cmc
out
testl
jle
sti
xchg
mov
mov
dec
lret
jnp
pop
push
test
push
xchg
loopne
xlat
dec
or
js
aad
cmpsb
out
and
aad
test
arpl
ljmp
push
fmul
jbe
jnp
xchg
push
clc
mov
lock
xchg
aas
aaa
std
push
and
xchg
mov
and
mov
sbb
jle
popf
test
leave
mov
push
add
cmp
fcmovbe
repnz
inc
pop
jge
mov
mov
and
add
cli
in
mov
fbstp
outsb
push
xchg
in
cld
cmpsb
mov
outsb
inc
rcrl
outsb
insl
movsl
pop
bound
mov
xchg
dec
scas
cvtps2pd
xchg
push
adc
movsl
jmp
xchg
push
inc
mov
add
outsl
pop
pop
and
push
addr16
insb
push
push
or
sub
add
sbb
add
ficomps
outsl
aas
dec
shll
inc
lret
mov
imul
jmp
mov
sub
fnsave
movsb
push
fs
push
rorl
stos
cwtl
cmpsl
cmp
fcomps
sbb
adc
xor
mov
jo
pusha
and
xor
push
sbb
sub
pop
or
xchg
inc
add
fldcw
xor
outsl
and
and
or
shll
add
lods
adc
sbb
xchg
adc
xor
stos
scas
out
xlat
pop
shr
push
pop
pop
sbb
push
ffree
test
insb
xor
js
and
daa
sub
xchg
mov
and
push
add
cmc
add
cmp
sub
push
cmp
pop
ss
hlt
cmp
pop
and
mov
icebp
pop
pop
jne
push
rorl
in
cmp
rclb
push
xchg
aas
sbb
mov
addb
sti
mov
xchg
fisubrs
std
sbb
jno
mov
shufps
divb
in
and
scas
test
adc
pusha
cld
adc
mov
pop
or
out
rorb
push
push
add
mov
dec
les
and
jnp
push
in
sbb
add
cld
js
and
out
pusha
cs
push
cmpsb
cld
inc
xorb
sbb
lock
movsb
mov
das
xor
cmp
cmp
push
vcvtps2pd
mov
jmp
cmpsb
jno
daa
cmp
loope
lcall
jnp
out
cmp
mov
inc
mov
sbb
cld
mov
xchg
cmp
pop
sub
xorb
xchg
adc
sub
adc
popa
popa
jo
sub
inc
xchg
mov
cmc
mov
int3
fnsave
cmp
imul
icebp
push
cli
lock
mov
cmp
or
push
dec
addr16
push
scas
xor
mov
and
and
int
push
and
in
ficoml
jmp
inc
daa
insl
add
mov
out
stos
out
imul
repz
mov
dec
pop
or
mov
ret
jnp
cltd
pop
vmread
int
push
pop
cmp
sti
shll
mov
out
dec
arpl
lods
jae
xchg
push
mov
lret
push
je
dec
mov
xchg
mov
sbb
mov
lea
push
cmp
imul
jne
imul
mov
and
int
dec
lcall
pushf
push
dec
repz
es
test
xor
sub
fdivl
or
jnp
popa
inc
sub
ljmp
and
js
negb
push
faddl
push
sbb
add
ljmp
xchg
sbb
push
test
sbb
js
stc
and
icebp
push
fsubl
push
xor
cld
pop
ss
addb
jbe
cmp
xor
aam
cmp
and
or
jecxz
xor
and
jo
jne
pop
cmp
sbb
jb
mov
mov
add
inc
and
add
clc
jno
xchg
fwait
adc
cs
mov
jmp
clc
imul
imul
aam
cld
ljmp
imul
xor
out
sbb
arpl
bound
sbb
mov
cs
cli
ret
push
dec
stos
inc
inc
or
out
stos
dec
aad
gs
xchg
dec
leave
adcb
mov
adc
dec
fucomip
ret
push
push
fnstenv
jle
push
call
adc
inc
dec
ficomps
inc
and
out
repnz
or
insl
push
int
dec
xchg
dec
or
scas
cmpsb
in
and
pop
mov
jp
stc
push
mov
pop
jbe
jecxz
ja
sub
ja
adc
pop
jl
xor
add
outsl
rclb
add
enter
mov
cld
xchg
jle
dec
push
sbb
ret
jmp
or
sti
clc
test
xor
repz
cmp
xchg
cmp
sub
movsl
push
mov
dec
ljmp
iret
or
push
imul
test
add
adc
xchg
pushf
insb
push
xlat
pop
imul
dec
jno
or
pop
lds
push
aad
and
mov
call
sbb
fisubrl
jne
mov
mov
xchg
outsl
and
add
inc
mov
fstpt
or
out
dec
insb
popa
jo
aaa
and
cmp
dec
xchg
jo
and
arpl
std
mov
xchg
mov
push
aam
pop
out
ror
pop
xchg
inc
mov
cwtl
outsb
push
fldcw
jno
cmp
pop
mov
rorl
out
into
mov
shrb
ljmp
jnp
push
aas
mov
and
insb
xchg
shlb
jns
push
popa
fistpl
ficoml
outsb
insb
mov
lds
mov
out
add
das
scas
popa
sub
cli
leave
mov
cmp
pop
jge
or
inc
es
scas
adc
popa
mov
mov
mov
pop
adc
adc
cmp
mov
mov
in
inc
pop
xchg
xlat
insb
in
cwtl
cmp
jns
gs
or
daa
pusha
es
or
dec
in
jge
inc
push
xchg
or
mov
arpl
popa
pusha
cmp
sbb
lahf
or
cmp
cmp
ret
or
push
and
lcall
mov
fstl
loop
or
aad
dec
bound
fadds
movsl
jae
mov
jmp
pop
nop
and
xchg
mov
dec
aad
push
pop
fmull
adc
or
outsl
mov
imul
or
or
mov
js
mov
stos
or
mov
jge
xchg
in
dec
dec
xlat
outsl
jl
jo
out
pop
adc
mov
test
mov
adc
daa
mov
push
cmp
cmp
adc
ja
loopne
mov
xor
mov
xchg
nop
sub
ret
hlt
in
push
and
xchg
hlt
and
jecxz
push
loope
out
sbbl
cmp
std
fdivrs
xor
and
lods
cmpsl
ljmp
lcall
jno
rolb
sub
cmp
mov
or
std
cmp
mov
je
jne
mov
test
xchg
or
push
xchg
mov
fcmovb
mov
rcll
in
lcall
sti
data16
or
pop
out
pop
xchg
xchg
xchg
dec
mov
mov
push
into
push
mov
pop
mov
pushf
cmp
add
repz
dec
dec
inc
mov
cmpl
pop
xchg
sbb
cmc
icebp
fstp
adc
insl
adc
mov
out
addl
arpl
add
pop
jae
xchg
ja
or
jbe
mull
ss
arpl
xchg
fcomi
add
or
xlat
adc
cld
pop
xchg
cmp
or
ds
sbb
pop
push
mov
mov
or
cmp
outsl
cmp
xor
aad
xchg
add
jl
in
push
in
icebp
test
inc
pop
arpl
in
add
mov
lret
sub
lock
mov
xchg
mov
ds
add
out
inc
aaa
gs
or
stos
inc
cli
sub
divb
pushf
loopne
mov
fisubrs
inc
subl
test
addb
xor
leave
xor
out
add
push
iret
lods
pop
int
jge
pop
jne
sahf
popa
in
and
and
mov
and
scas
ret
and
scas
add
push
mov
xor
rorl
pop
mov
insb
sar
cltd
pop
mov
push
bound
lcall
add
dec
pop
popa
and
mov
rolb
dec
sbb
push
pop
jae
add
adc
fsubs
test
mov
xchg
jmp
rcl
xchg
push
add
mov
daa
ss
fisubrs
push
cmp
push
loope
add
decl
and
adc
loopne
mov
mov
mov
addr16
mov
mov
enter
dec
mov
arpl
cmpsb
gs
into
ljmp
mov
add
xorb
clc
shl
daa
out
and
xchg
and
cld
cmp
mov
sub
adc
sub
and
jb
jnp
arpl
ds
shrb
test
sarb
call
add
mov
dec
mov
mov
out
jo
lret
ficomps
sbb
lds
mov
mov
add
inc
cmp
cmp
mov
dec
rorl
adc
aam
mov
dec
ror
xor
pushf
pop
sub
mov
mov
test
ja
loop
test
popf
nop
cwtl
outsb
arpl
jge
lret
sbb
mov
adc
mov
into
mov
adc
sbb
mov
cmpsl
lcall
test
jmp
xchg
sub
or
in
lret
xor
addr16
negl
jmp
inc
jl
sub
mul
and
loope
mov
or
pop
mov
clc
idivb
cmp
cli
jns
adcl
fdivrs
insb
push
jmp
push
in
out
decb
mov
fstp
cmp
xor
or
imul
nop
aas
fdivrs
rcrb
jb
sbb
sahf
scas
and
loope
popa
stos
repz
mov
outsb
inc
aad
adc
loop
jecxz
call
push
imul
les
cmp
sbb
js
pop
das
mov
sub
movw
iret
mov
daa
ret
je
cmpsb
push
or
fildl
cmp
inc
xchg
shrl
inc
or
pop
sbb
mov
into
cwtl
outsb
lret
scas
dec
sbb
pusha
loopne
push
pushf
mov
mov
pop
pusha
fwait
cmpsl
je
pop
mov
outsb
adc
daa
xchg
or
negl
adc
shll
cmp
dec
push
movsl
scas
lahf
xchg
insb
add
jl
les
push
dec
add
mov
xor
bound
arpl
into
cs
shlb
jge
cld
lret
lcall
aas
pop
aas
sbb
pop
push
mov
sahf
inc
sub
pop
pop
xor
mov
sbb
repnz
jmp
cmp
sbb
cmpl
mov
aam
mov
mov
sub
push
lods
fcompl
andl
shll
test
fbld
mov
or
out
pop
mov
arpl
mov
sbb
jb
fists
pushf
and
sub
pop
ljmp
adc
mov
mov
stos
push
sti
xchg
xchg
loope
cld
mov
shrl
add
xchg
dec
push
inc
xchg
lea
insl
movsb
inc
dec
xchg
enter
fistpll
or
and
sub
lea
inc
cmp
test
sarb
push
mov
cmp
mov
adc
fsubrs
mov
jg
es
and
mov
mov
add
xor
addr16
aam
shrb
cld
xor
mov
dec
shlb
jge
cmp
inc
xchg
out
push
adc
loope
int
in
fwait
popa
pushf
jge
movsb
imul
ljmp
push
push
push
jl
mov
add
push
loop
fs
jg
sbb
lret
inc
frstpm(287
push
cli
cmpsb
jns
xchg
or
pminsw
add
jo
inc
lcall
test
cli
xor
push
mov
and
lock
lock
pop
rclb
or
out
das
jae
and
or
adc
mov
sbbl
add
loope
mov
jb
mov
mov
adc
or
push
mov
cmpsl
into
lods
enter
fists
ror
xchg
push
jne
jb
pop
imul
lods
loope
xor
cmc
pop
inc
or
dec
xchg
lret
xchg
cmp
int3
insl
fists
leave
push
xchg
dec
cwtl
sbb
and
cli
jmp
ss
xchg
pop
hlt
scas
add
fisttpl
cmp
xchg
popf
pmulhuw
fisttpll
add
das
leave
push
insb
scas
cmp
fisttps
xchg
je
adc
ret
call
clc
cmpsb
xor
dec
ljmp
ljmp
push
stos
cli
pop
clc
sar
push
mov
les
pop
inc
mov
xor
repz
ds
jmp
ja
ret
or
xchg
jl
push
jmp
roll
iret
imul
test
sub
xchg
movsl
cltd
pop
aad
aam
add
aad
rcr
adc
into
or
imul
jns
push
jp
sbb
push
add
insl
test
popf
jmp
lds
imul
roll
aad
cmp
scas
pop
jbe
inc
rolb
sbb
cs
dec
rolb
add
mov
push
cmp
dec
push
pop
outsl
aam
fldl
negb
test
out
sarb
inc
leave
in
scas
pop
push
mov
lret
push
cmp
int3
jb
pusha
popa
fimuls
insl
mov
push
add
jo
push
xlat
sub
jle
lods
aaa
es
ja
cmp
lret
test
sarl
cmp
rorl
rol
test
push
jne
jge
xchg
movsb
sbb
out
inc
addr16
ret
icebp
ret
pop
add
imul
in
cs
test
add
sbb
xor
sarb
fs
mov
push
and
and
enter
pop
jmp
mov
stc
cmpsb
ss
std
popf
or
push
inc
bound
ja
dec
sbb
fstps
jmp
add
lahf
ret
es
mov
dec
mov
xchg
mov
ss
les
inc
pop
inc
cld
mov
add
or
inc
push
cmpsl
jne
scas
scas
pop
sbb
out
rorl
in
in
insl
jae
fldenv
cwtl
mov
push
in
mov
das
flds
je
mov
mov
jge
xchg
mov
xchg
mov
in
das
ja
push
ljmp
dec
sti
pusha
shrb
pop
sub
jecxz
sub
in
lahf
lock
sahf
clc
loop
lcall
nop
into
clc
icebp
arpl
jp
cmp
mov
cmc
out
pop
fisttpll
gs
jle
mov
dec
fwait
sub
ja
cmp
push
mov
or
push
pop
push
adc
sub
mov
xchg
and
jno
test
bound
inc
mov
or
xlat
and
int3
in
stos
push
and
sbb
mov
mov
xor
mov
je
ret
mov
clc
in
stos
sub
push
cmc
adc
sub
or
fisubl
adc
dec
insl
mov
adc
pop
mov
loop
xchg
sub
sub
fcomps
adc
or
jl
jnp
ret
adcl
cmp
dec
cmpsl
dec
and
xor
jmp
and
push
stc
ja
sbb
push
in
jp
pop
sbb
jne
adc
or
sahf
out
lret
cmp
sbb
int3
outsb
adc
sbb
shr
jp
or
sub
ret
sub
addr16
mov
lea
test
push
sar
lock
ret
je
inc
fsub
jecxz
cli
mov
es
sub
cmp
out
and
jae
sbb
lods
sbb
movsb
pop
sbb
fwait
out
gs
sub
sub
mov
iret
lahf
adc
cmp
add
adc
jmp
inc
xchg
andl
xchg
mov
add
es
stc
bound
sub
fwait
lea
decl
pop
pusha
inc
add
into
dec
ljmp
inc
shll
inc
mov
xor
ss
fstpl
adcb
mov
pop
outsb
es
xchg
movsl
js
aam
mov
std
inc
cmp
jno
insl
mov
pop
push
adc
lods
inc
push
xor
mov
aad
xchg
clc
dec
add
aas
pushf
mov
ds
dec
mov
dec
dec
idivl
xor
repnz
incl
xchg
fdiv
lahf
push
in
jne
lret
imul
testl
jg
sarl
shrl
fcmovnu
add
pop
inc
cmc
inc
mov
jmp
mov
sub
pusha
mov
cmp
xchg
xchg
sbb
mov
mov
pop
imul
adcb
cwtl
mov
dec
pop
call
push
sbb
pop
or
cmpl
scas
xor
and
test
mov
int
inc
into
popf
nop
add
dec
xor
sub
mov
addb
ror
repz
inc
mov
add
clc
mov
push
stc
push
lock
ror
mov
lds
in
bound
and
dec
jo
repnz
ss
pusha
mov
mov
icebp
inc
inc
divb
cmc
lret
jns
outsl
arpl
adc
xchg
insl
repz
fmul
arpl
lock
xlat
and
pop
pusha
psraw
ja
fiaddl
idiv
pop
jp
test
jge
adc
xor
cltd
shll
mov
dec
dec
cmp
dec
mov
arpl
adc
or
ljmp
inc
aaa
cmc
out
mov
xchg
add
out
jle
notb
xchg
mov
push
mov
cmc
push
lds
shrb
mov
dec
add
test
lret
rcr
mov
mov
adc
pop
push
outsb
jmp
jb
add
ds
lcall
repnz
subb
push
dec
fwait
aad
loope
lock
push
add
dec
lock
popf
ret
sarl
pop
pop
ret
cmp
fsubs
in
sbb
in
or
rcll
add
sahf
cmp
and
pop
lock
fmuls
ja
xor
xchg
jae
outsl
pop
lods
out
cltd
xchg
lret
stc
icebp
sahf
out
and
imul
xor
rcr
test
cmpsl
daa
jmp
shrl
adc
mov
push
movsb
sahf
xor
sub
mov
lret
leave
inc
loope
adc
cwtl
aam
fisubs
xor
or
fnstenv
lret
andb
rolb
stos
mov
push
imul
stos
into
mov
xor
cmp
add
pop
test
xlat
jmp
mov
push
inc
push
test
cmc
mov
cmp
xchg
inc
filds
mov
cmp
jbe
mov
in
add
jb
pop
dec
rcl
cltd
out
mov
popl
outsb
fsubr
sbb
or
sbb
inc
hlt
jg
dec
cmp
push
test
pop
decb
aaa
pop
stos
out
xor
xchg
mov
hlt
ret
or
sbb
stc
jae
mov
push
lcall
fsubrl
push
lods
dec
ret
movsl
loope
shl
test
pop
shlb
cmp
sub
cmc
fidivrl
daa
mov
lods
xchg
adc
xor
xor
addl
pop
inc
arpl
inc
sbb
xor
xchg
ds
xchg
fldenv
clc
mov
push
adc
filds
std
jbe
ret
mov
pop
jnp
shlb
mov
add
enter
ja
xor
cmc
adc
sub
pop
fbstp
mov
inc
dec
test
scas
adc
out
add
iret
mov
mov
adc
stos
mul
or
adc
add
rcrb
mov
xor
xchg
leave
xor
cli
push
inc
stos
add
mov
sbb
pop
jmp
add
sti
and
push
sbb
lock
cmp
sbb
pop
add
push
pop
mov
xchg
ret
pushf
pop
sbb
js
xorl
xor
jnp
mov
xor
adc
lods
jge
out
xor
and
cli
pop
fstps
out
aaa
hlt
xchg
adc
and
cmp
jb
pop
and
cmp
into
mov
flds
mov
stc
gs
ja
out
jge
dec
add
arpl
adcb
jnp
ret
lahf
outsl
adc
sbb
leave
test
ss
xchg
xchg
push
push
ss
cltd
lret
sbb
lods
inc
sub
test
ss
lock
push
dec
imul
inc
sub
lret
xor
aam
xchg
mov
bound
xchg
cli
mov
mov
rorl
int3
jle
mov
mov
push
jl
xchg
ret
jne
xchg
xor
mov
repz
pop
mov
pop
mov
and
push
fs
xchg
frstor
pop
stos
and
or
push
pop
movsb
std
aam
mov
cmp
les
aad
je
addr16
push
test
adc
rol
xchg
enter
fmull
nop
dec
insb
fldcw
popa
mov
lods
ficomps
push
aaa
xchg
mov
es
test
outsb
scas
fwait
mov
inc
inc
in
enter
jp
sbb
fnstcw
shll
mov
pop
cmp
mov
pop
pop
cmpsb
loop
fidivrs
scas
cwtl
stc
push
sub
mov
lret
fists
cltd
ss
xchg
jae
sbb
xchg
cmp
mov
cmp
xor
jecxz
cmp
cmp
pop
jbe
pop
or
mov
aam
mov
mov
jns
add
add
ret
sbb
test
mov
cmpl
cmp
dec
or
pop
or
mov
stos
sbbl
cmp
fs
add
or
inc
mov
mov
mov
sbb
jnp
arpl
lods
inc
sbb
pop
bound
mov
fdivrs
mov
fnsave
test
fcomps
mov
push
adc
call
iret
pop
test
in
sub
shlb
mov
js
add
jg
inc
sbb
bound
inc
outsl
into
mov
sbb
in
lea
cmp
push
arpl
jecxz
int3
inc
rorl
nop
cltd
inc
out
add
imul
nop
in
adc
int3
fwait
add
dec
popf
faddl
pop
fucomip
or
cmp
push
sbb
and
push
jecxz
iret
add
mov
push
bound
xchg
in
push
jae
rolb
xor
mov
jp
test
or
nop
sete
leave
xor
cld
data16
out
jp
pop
fwait
js
imul
add
fdivl
mov
xchg
lea
xor
adc
sarl
mov
mov
dec
sbb
inc
mov
adc
xchg
sub
cwtl
sub
pop
inc
add
bound
stos
ret
push
pusha
icebp
sti
xchg
ja
adcb
in
mov
lds
sbb
mov
test
clc
inc
and
pop
xchg
inc
stos
jg
mov
adc
rcrb
mov
add
mov
mov
jmp
sub
fucomi
jle
and
lahf
stc
ret
push
add
imul
out
jmp
outsl
and
push
fneni(8087
arpl
rcr
sub
rorl
push
dec
sub
mov
fld
and
and
call
insl
icebp
cmp
xchg
sub
jmp
rclb
pop
stc
and
sbb
push
dec
push
jns
jmp
imul
sub
test
mov
inc
lods
int
pop
mov
mov
sbb
stc
pop
fists
aas
int
ret
std
inc
lock
adc
jnp
adc
mov
or
mov
dec
addr16
jae
add
mov
call
mov
inc
dec
stos
jecxz
mov
fdivl
loopne
jge
jo
push
and
dec
ljmp
pop
or
inc
aas
mov
ss
sahf
sbb
pop
inc
jp
add
or
pushf
test
out
mov
or
sahf
xchg
movsl
movsl
fs
ret
adc
movsb
xor
sbb
jl
pop
xorl
loope
jmp
enter
popa
pop
leave
std
adc
pop
xchg
out
jns
arpl
jae
es
mov
arpl
mov
dec
mov
sti
mov
js
sarl
pop
push
and
xchg
adc
mov
sub
or
jmp
int
psadbw
push
pusha
sbb
cmp
jp
inc
dec
frstor
outsl
nop
xor
stc
sub
pushf
js
dec
add
int
sbb
sbb
and
jbe
mov
cmp
test
dec
js
inc
out
push
jb
pop
cmp
pusha
jmp
and
pop
push
lcall
out
sub
mov
push
xorl
fldcw
mov
cwtl
inc
sbb
cmp
jg
jnp
push
xor
sub
loop
dec
loop
jne
jno
mov
inc
dec
pop
dec
pop
dec
or
std
sbb
int
lods
adc
test
bound
mov
inc
pop
pop
sub
enter
or
mov
add
fs
cmp
xchg
dec
lds
gs
adc
cltd
mov
sbb
es
loop
cmp
jne
hlt
out
sub
sbb
shlb
mov
adc
fists
test
push
push
popf
jecxz
sbb
outsl
mov
jo
pop
pop
cmp
inc
shr
cmpsl
mov
pop
mov
popa
push
ja
xchg
jl
enter
mov
mov
mov
pop
cltd
jecxz
add
push
sbb
jnp
mov
lret
inc
mov
pop
inc
sub
arpl
test
push
decl
fmul
cltd
ud1
call
inc
xor
in
pop
mov
fiadds
add
ret
sub
add
mov
insb
pop
mov
adc
mov
test
into
or
sbb
notb
pop
sbb
addl
xchg
aad
push
cmp
inc
adc
cmp
adc
cbtw
sarb
dec
pusha
ret
xchg
das
cmp
fwait
pop
and
mov
mov
jae
jbe
inc
into
ret
cltd
jecxz
push
repnz
cmpsl
push
xlat
fcoml
ds
push
lds
lea
push
mov
insb
sbb
loopne
scas
xchg
movsl
xor
cltd
aaa
push
cld
je
add
jg
push
cmpsb
sbb
or
dec
imul
cli
enter
popa
inc
movsl
into
and
bound
inc
jl
mov
in
pop
jo
out
out
sbb
push
in
leave
test
dec
cmp
adc
and
mov
in
mov
ja
cmp
stos
mov
and
jnp
dec
es
subl
fadds
std
lock
rorb
adc
jle
ja
and
xlat
ret
push
test
imull
data16
push
or
and
mov
lods
inc
outsb
mov
lods
pop
cmpb
icebp
leave
popf
icebp
ficompl
imul
fmuls
mov
pop
addr16
dec
lock
push
or
lahf
mov
pop
jbe
inc
daa
sti
mov
pop
cwtl
or
xor
insb
mov
adc
ja
lock
clc
ja
push
push
mov
dec
and
jbe
mov
push
enter
jne
push
push
mov
adc
stos
xlat
xchg
ss
adc
cltd
mov
add
pop
jecxz
or
shl
pop
fsts
pusha
add
lret
outsl
imul
pop
or
adc
adc
mov
cmpsb
and
jo
movsl
xlat
xor
lock
in
pop
pop
into
test
ret
mov
stc
adc
push
cltd
iret
popf
repnz
add
xorl
xchg
outsb
jnp
sbb
sbb
cli
add
movsl
jae
filds
add
nop
lcall
mov
lret
add
data16
adc
std
lock
xchg
cmp
fisubrl
dec
pusha
loope
sub
cmp
out
sub
ret
dec
imul
sbb
jo
or
xchg
cmc
push
test
cmovp
cmp
jmp
add
in
jecxz
xor
sub
cmpsb
int
nop
cld
dec
cld
jecxz
jmp
mov
add
push
xor
scas
lods
or
sub
cmp
add
sti
add
mov
push
gs
lds
aas
push
add
dec
adc
adc
shrl
and
scas
adc
xchg
loope
add
mov
out
into
loop
dec
movsl
popf
orl
test
scas
jb
mov
sbb
cli
adc
add
jne
clc
movb
mov
decl
bound
push
aam
jp
pop
sar
es
repnz
ljmp
add
mov
push
dec
pop
add
outsl
mov
aam
repz
icebp
out
popa
sbb
mov
xchg
iret
inc
inc
jl
lds
mov
mov
ret
or
sahf
stc
adc
xchg
pop
daa
inc
pop
test
sbb
xchg
sbb
sub
mov
fdivs
and
xchg
inc
xchg
test
pop
push
enter
cmpsb
aam
fstpl
cli
push
mov
mov
inc
jmp
jo
les
cs
xchg
pop
ljmp
jl
push
and
aam
and
pusha
mov
cwtl
test
push
add
dec
movsl
shlb
out
add
out
lods
leave
cmp
call
lea
adc
sub
add
nop
jge
sbb
clc
pop
pop
fsts
call
jge
cmc
stos
push
and
lods
jne
sahf
jg
pop
shlb
lcall
mov
push
stos
cmp
and
push
inc
xor
das
fcomp
jnp
ret
lcall
inc
mov
push
daa
and
cmp
fsubrp
mov
fsubs
sub
mov
mov
push
rcrb
rcl
jle
lods
ljmp
mov
inc
ja
adc
scas
enter
insb
aaa
in
out
adc
jge
fcoml
push
pop
add
movnti
sti
lods
jecxz
mov
idivl
mov
mov
dec
jno
sub
sub
cmp
lea
lahf
arpl
aaa
mov
pop
or
dec
xchg
iret
pop
xchg
push
mov
imul
pusha
and
in
xchg
dec
mov
mov
xor
xchg
add
pop
xchg
xchg
in
pop
lret
jmp
push
cmpsb
mov
cmpsb
icebp
stos
adc
mov
and
daa
jl
cmpsl
sti
push
push
mov
pop
add
addr16
shrb
cmc
dec
push
jmp
lcall
jecxz
je
sub
jle
inc
pop
fimuls
cmp
push
hlt
xor
mov
fmulp
daa
outsl
ret
das
rorb
sub
mov
in
pop
dec
dec
add
sub
lock
mov
cmpsl
xor
jbe
das
int
and
call
xchg
mov
fnstenv
xor
lahf
clc
mov
cwtl
ret
lods
call
pxor
dec
push
and
insb
pop
inc
loopne
pop
lock
cmp
add
loopne
dec
hlt
cmp
jecxz
int
pop
pop
gs
xchg
pushf
cmpsb
inc
push
add
clc
faddl
int3
and
jae
lods
imul
xlat
push
mov
or
mov
subb
out
push
out
adc
mov
adc
hlt
sub
lock
popf
push
xchg
mov
push
sub
jnp
cmpsl
inc
jae
test
dec
jne
dec
loop
push
ret
into
push
inc
gs
or
xor
out
jl
cs
xchg
lea
scas
xor
pop
inc
and
push
loopne
ffree
xchg
push
push
dec
es
sbb
sub
sbb
test
pop
inc
cltd
stos
jl
repz
push
dec
push
das
fsubr
or
adc
pushf
pop
add
and
in
ror
xor
das
out
shll
out
fistl
insb
loope
addl
add
insl
dec
push
lock
sub
mov
mov
dec
inc
sub
in
mov
dec
xchg
dec
mov
int
stos
mov
mov
mov
pusha
jecxz
andb
xchg
lret
movsl
insl
push
xchg
dec
push
pop
inc
mov
stc
jmp
pop
outsl
sub
dec
add
sub
rorl
loopne
jns
jns
hlt
outsl
add
and
dec
mov
adc
xchg
fidivrl
addl
push
rcll
lret
fbld
sbb
mov
xchg
cwtl
test
and
ds
fcomip
mov
adc
mov
mov
pop
out
mov
stc
and
popa
sub
shl
xchg
mulb
lods
mov
hlt
pop
fidivrl
jmp
lods
imul
push
adc
add
rcrl
jecxz
in
mov
or
into
push
inc
movsl
lahf
cs
inc
addl
in
mov
sbb
sbb
test
pop
xor
sbb
jmp
cmp
fisttps
or
or
mov
adc
movsl
fidivrl
mov
sbb
jnp
fisubrl
fcompl
xchg
mov
add
push
pusha
inc
outsb
ret
enter
adc
cmp
mov
mov
loope
scas
xor
daa
ds
pop
push
sub
pop
cwtl
push
insl
lret
sti
or
xchg
sahf
mov
pop
repz
jne
mov
shll
jp
jcxz
je
inc
pop
adc
dec
sbb
shl
test
add
mov
mov
mov
cmc
test
call
idivb
sbb
cmpsl
mov
pop
sahf
jbe
add
nop
pop
mov
dec
dec
je
add
movsl
mov
into
fildl
lea
push
dec
xor
enter
mov
das
cmp
and
or
pop
cmpsl
and
js
sbb
lcall
pop
lahf
lret
sub
dec
pop
push
sub
mov
and
cmp
dec
outsl
pushf
push
cltd
pop
loope
out
ret
fwait
sbb
sbb
shrl
sbb
nop
je
sahf
incl
lds
arpl
lea
fucomip
or
shll
mov
push
les
push
int3
pop
stos
rcll
mov
adc
test
test
test
fwait
pop
imull
aam
inc
dec
repnz
mov
movsl
xchg
mov
mov
lea
insl
xchg
out
sub
push
mov
or
mov
loope
mov
fiadds
repz
ficompl
mov
jae
jae
insb
mov
movsl
pushf
mov
dec
pop
sahf
mul
fists
test
out
nop
out
cs
lods
push
fwait
cmp
mov
dec
xor
sti
jle
xchg
outsl
push
jo
pop
cmp
loop
push
andl
out
in
lock
and
and
or
test
mov
mov
fcompl
mov
dec
imul
insb
andb
ror
cmpsl
cmp
outsb
xchg
push
jbe
cmp
lcall
lcall
mov
mov
ret
lret
push
inc
js
adc
adc
push
dec
in
scas
test
aas
mov
push
or
and
jge
movb
inc
cltd
stos
test
into
pop
fstpt
sub
jbe
loope
mov
add
cmp
jecxz
ffreep
cli
pop
test
inc
movsl
arpl
jbe
dec
adc
fists
xchg
push
mov
into
pop
mov
jmp
mov
push
dec
repnz
lret
lret
or
sbb
cmp
cmpsl
mov
mov
cmpl
insl
leave
sbb
jne
in
and
mov
mov
jg
scas
xor
add
xorb
test
dec
cs
xor
pop
pop
and
cwtl
arpl
inc
xor
es
cmpsl
or
cwtl
subb
dec
push
stos
dec
testb
test
xor
xor
sbbb
popf
xchg
in
lea
push
fmulp
mov
int
ja
jecxz
repnz
sar
xchg
cs
fiadds
pop
add
jecxz
adc
cmc
lcall
mov
out
mov
jns
mov
push
ficomps
sbb
test
movsl
inc
xchg
jl
in
ret
fiaddl
movsl
loope
daa
inc
sbb
lret
push
xor
nop
mov
mov
movsb
cmp
rcll
clc
and
lahf
jae
mov
bound
lds
jmp
sub
mov
xorb
movsb
push
dec
cmp
dec
pop
xor
dec
jno
push
out
jmp
in
xor
cwtl
cmp
in
insl
ja
subl
sub
push
lock
sub
loop
insb
mov
sbb
push
xchg
sub
fcomps
test
popf
icebp
mov
dec
les
ret
push
flds
push
divb
mov
push
cwtl
in
mov
into
and
xchg
pop
jae
add
in
push
leave
xchg
aad
or
sbbl
call
sbb
mov
lea
stos
and
lcall
les
add
gs
ret
cli
movsb
pop
sub
sbb
add
jge
shr
dec
push
punpckhwd
setbe
pop
outsl
cmpsb
adc
push
ror
or
js
push
icebp
loope
aaa
scas
stos
mov
sub
aaa
aas
ficomps
cmpl
mov
out
aad
sub
sub
mov
xor
loopne
mov
mov
out
fstpt
into
std
sti
fisubl
repz
jae
xor
faddl
insb
imul
or
inc
push
inc
jmp
jbe
jne
mov
js
or
inc
add
cs
xor
icebp
shll
clc
andl
mov
mov
iret
jns
cwtl
and
cld
and
repz
scas
and
testb
arpl
mov
popf
pushf
sub
out
jnp
insl
sbbl
fists
sbb
les
mov
movsl
pop
jg
add
jns
jecxz
nop
hlt
or
add
inc
bound
push
clc
scas
fsubrs
nop
fcomps
mov
mov
mov
in
insl
mov
inc
add
bound
in
and
sub
sbb
sub
ja
arpl
test
sub
mov
or
pop
lock
sbb
mov
mov
adc
cmp
xor
inc
cmp
adc
push
inc
cmp
cmp
addl
push
icebp
push
imul
sbbb
mov
push
test
sbb
movsl
testb
sub
pop
jle
jp
aad
cmp
cmpsb
mov
or
sub
ds
jecxz
or
or
in
lock
cwtl
dec
cmpsb
sbb
push
mov
inc
popa
xor
fidivs
ss
pop
lock
cmp
scas
add
jmp
repnz
push
dec
popf
dec
aad
subl
scas
cmp
out
inc
scas
nop
and
sub
in
aam
movsl
pop
mov
loope
pop
mov
add
insb
inc
cmc
adc
sub
outsb
dec
hlt
aam
or
sahf
mov
outsl
inc
add
jbe
sub
jae
cmp
inc
and
int
mov
jecxz
faddl
loope
cmp
test
cmp
jle
fisttps
stos
or
dec
cwtl
jmp
mov
movsl
xchg
jp
aam
addr16
xor
shll
cmpsb
xchg
enter
dec
cwtl
cltd
sub
nop
xor
xor
out
dec
jmp
aas
push
test
mov
adc
inc
daa
ds
pushw
xor
push
mov
movsb
loope
mov
or
cmp
mov
int
leave
inc
sub
loope
mov
push
cltd
enter
lret
lods
sti
and
outsl
add
out
jbe
out
mov
roll
mov
fstps
icebp
mov
fimuls
add
into
jecxz
dec
mov
and
jbe
fdivs
pop
cmpsb
imul
pop
shll
pop
outsl
sub
loop
push
fsubs
mov
arpl
loope
or
cmp
jmp
inc
sbbl
imul
fwait
fwait
and
addr16
sbb
ds
push
jle
push
add
outsb
sbb
fwait
push
push
inc
jbe
sub
push
push
push
inc
mov
xorb
xchg
pop
xor
mov
xlat
pop
lea
xlat
adc
cmc
decb
stos
cmp
cmp
sub
lahf
jle
in
xchg
lret
dec
and
mov
mov
cs
sbb
push
insl
xlat
fdivs
pop
inc
fidivl
inc
jecxz
mov
or
jns
in
dec
cmpsb
pop
fistl
pop
cmp
cmc
mov
xchg
aam
incl
pop
cmp
imul
jg
and
shl
jmp
cmp
mov
jae
int3
and
sub
lods
addb
mov
cli
adcl
inc
dec
in
mov
xor
xchg
out
sub
mov
sub
lods
inc
mov
inc
cmp
and
addr16
push
push
mov
cmpsb
xchg
lahf
push
xor
mov
iret
inc
mov
in
cmpsl
pop
jle
frstor
in
pop
repz
inc
mov
roll
add
fdivr
and
dec
sub
stos
insb
test
pop
sbb
dec
nop
push
daa
lcall
xchg
aas
nop
push
lcall
xchg
stc
sarb
lds
xchg
sbb
js
mov
xchg
lcall
lret
gs
test
inc
and
adc
outsb
jp
push
jb
mov
mov
mov
jmp
push
jg
test
xlat
lret
leave
rcrl
inc
mov
push
pop
push
mov
divb
out
jbe
and
push
adc
scas
es
sub
std
and
cld
inc
mov
and
mov
cmp
pop
inc
dec
lcall
push
pop
call
out
popa
jge
mov
cmp
xchg
mov
incl
sbb
sti
lock
pop
pop
push
xor
fldt
and
aad
xchg
stc
mov
sub
mov
jno
test
rcl
cwtl
or
xchg
sub
inc
test
pop
pop
jecxz
jle
jae
popa
cwtl
es
xor
ds
test
add
mov
imul
and
mov
push
aas
xor
data16
xor
fwait
mov
jle
jae
insb
mov
das
or
into
add
mov
and
out
jb
mov
push
cs
mov
loopne
imul
mov
aam
push
push
test
fdivr
sar
jmp
cmpsl
icebp
fwait
dec
mov
inc
shll
jb
das
stos
push
iret
je
insb
clc
cmp
cld
flds
scas
xchg
mov
push
lock
addr16
addr16
xor
pop
dec
pop
in
mov
pop
movsb
loop
add
mov
add
adc
sub
or
mov
nop
rorl
adc
dec
mov
mov
inc
cmp
jle
out
scas
cmp
stos
jnp
repnz
and
jmp
xor
movsb
cmp
xor
stos
fadds
and
mov
and
xchg
sarl
mov
fdivl
push
mov
lods
and
cs
in
sarb
cltd
xor
das
push
out
jae
es
cli
sub
mov
or
jb
xchg
das
adc
out
xchg
loope
mov
or
pop
mov
lds
out
jo
out
pop
outsl
ljmp
pop
dec
and
or
cmp
shlb
hlt
xor
dec
movsl
mov
arpl
sbb
outsl
dec
pop
sti
jns
popf
in
push
sbb
mov
fildl
jns
out
lock
pushf
ja
mov
in
xorb
and
shl
cmp
sub
js
jl
mov
and
lret
cmp
pop
cwtl
xlat
mov
addr16
sub
stos
mov
popa
xor
add
adc
and
cmc
aas
sbb
imul
pop
std
xor
arpl
sub
mov
mov
dec
movmskps
mov
jns
lods
mov
aas
pushf
or
mov
push
imul
sub
cmpsb
insb
inc
ret
jb
lea
call
lock
cmp
add
adc
fisttpll
repnz
sarl
xor
sub
imul
jnp
mov
test
push
cltd
adc
xor
out
mov
lahf
pop
mov
xchg
mov
mov
inc
cmp
popa
insb
and
push
mov
inc
inc
push
sub
mov
push
cmp
adc
adc
std
fcompp
sub
jns
shlb
cld
aas
dec
loope
dec
pusha
inc
and
cmpsl
movsb
push
dec
sub
imull
mov
mov
pop
movsl
sbb
ret
out
pop
pop
inc
cwtl
cmpsb
cmc
leave
rcr
sbb
sbb
and
add
push
test
stos
sahf
scas
shr
jne
ljmp
hlt
push
sahf
inc
je
inc
push
and
mov
push
push
sub
inc
sbb
or
sbb
mov
outsb
cwtl
hlt
shrl
iret
push
cld
mov
test
outsl
in
jl
movsl
push
fnstcw
fwait
and
stc
push
mov
inc
in
lods
mov
rolb
lcall
add
es
scas
xor
sub
movb
pop
ja
testb
adcl
std
mov
mov
std
aaa
daa
test
fwait
and
daa
mov
cmc
dec
icebp
mov
lahf
cmp
pop
out
in
leave
scas
and
mov
xor
cmp
add
adc
push
out
adc
jecxz
inc
inc
jnp
mov
stos
mov
inc
je
data16
test
mov
mov
xchg
xor
mov
lret
movb
mov
pop
adc
out
sahf
shlb
lods
bound
and
leave
cmp
inc
mov
nop
sub
sub
cltd
mull
enter
mov
gs
jnp
movsb
sahf
aad
pushl
ljmp
push
sub
daa
push
or
rcl
and
ljmp
test
addl
xor
stos
fs
sbb
shll
leave
stos
flds
jb
cmp
mov
pop
push
add
in
lsl
sti
push
pushf
xor
xor
lret
loop
test
popf
mov
adcb
aad
hlt
cwtl
stos
pop
xor
shrb
enter
pop
pop
push
lret
test
push
xor
cli
addr16
adc
sub
and
jo
in
rcrb
out
inc
jmp
add
and
mov
scas
dec
inc
mov
shrl
fsubrl
in
add
shl
leave
mov
fcomps
int
rcll
cmc
sbb
jne
test
popa
xorl
lahf
pusha
mov
dec
incl
jb
mov
in
popf
es
dec
adc
inc
lock
jae
sbb
pop
push
mov
pushf
add
inc
hlt
mov
xchg
dec
dec
sub
cmc
inc
adc
out
pushf
sbbl
sbbb
sbb
xor
xchg
pop
jb
xchg
push
jb
xchg
push
jbe
bound
mov
cwtl
ss
sub
dec
mov
pop
ficoml
xchg
fs
cmpsb
sub
dec
call
in
xor
and
mov
cld
lea
add
xor
or
incb
ja
iret
mov
mov
and
test
add
mov
mov
outsb
test
xor
sbb
dec
clc
add
jns
addb
cmp
jb,pt
fbld
pshufw
pusha
jle
dec
mov
fnstsw
inc
adc
mov
pop
sbb
hlt
pop
adc
cmp
subb
fistps
sbb
mov
jle
mov
int3
cmp
fidivrs
xchg
xor
inc
jg
es
jo
or
jp
cmpb
imul
push
into
mov
jo
add
movsb
inc
dec
pop
xlat
aas
imul
lock
mov
dec
sbb
sbb
dec
lods
pop
shll
or
insb
insl
dec
mov
loope
jmp
mov
into
dec
movsb
inc
jecxz
or
jl
cmpsl
fldenv
dec
jp
xor
add
or
pop
fsubrp
dec
mov
sub
xor
dec
insl
pop
shrb
pop
xchg
mov
mov
rcrb
loop
add
inc
adcl
cltd
ljmp
addr16
das
sbbb
das
lahf
mov
ljmp
nop
xchg
mov
je
jns
cmpsb
inc
adc
aaa
loopne
cs
cmp
call
and
fisubrs
cmpsb
dec
pop
ret
mov
out
adcl
mov
sar
inc
mov
fs
in
clc
adc
push
rclb
aas
push
mov
jnp
lahf
pop
pop
orb
adc
push
jmp
xor
or
xchg
mov
sub
add
and
xchg
adc
push
add
loope
push
mov
and
sub
test
movsl
pop
int3
jmp
ret
fldenv
add
ror
add
lret
push
in
loop
dec
inc
out
lods
dec
sti
lods
mov
xlat
andb
call
pop
iret
fdivrp
add
mull
add
xor
xchg
out
inc
shlb
jnp
in
xor
sub
pop
in
inc
cmp
cs
aam
sti
xchg
popf
stos
fldt
cmc
push
pushf
call
sub
cltd
out
mov
sar
in
jmp
pop
inc
mov
jo
inc
mov
int3
lret
sbb
out
xor
adc
jle
adc
idiv
or
sub
jp
lret
leave
loopne
in
push
push
aam
inc
clc
stc
sbb
imul
insb
testl
push
mov
adc
xor
ficompl
out
mov
xor
pushf
adc
fstpl
stos
or
xchg
cmpsl
xchg
mov
out
fildl
aaa
pop
mov
cmp
hlt
pop
shl
gs
xchg
out
paddw
cs
push
idivb
into
sbb
cltd
das
adc
enter
aaa
not
dec
mov
or
mov
mov
in
in
fisubrs
jns
dec
rolb
aam
out
loopne
into
cmc
adc
cmp
adc
movsb
out
mov
jge
sar
loop
pop
sub
imul
enter
or
ss
jne
and
mov
inc
adcb
xor
loopne
mov
jl
add
mov
jmp
push
mov
cwtl
lahf
es
cmc
leave
insb
pop
mov
negl
jno
push
pop
jne
call
lcall
mov
xlat
jne
sub
mov
mov
cmp
insb
inc
loopne
jno
dec
push
fstpl
jo
or
push
loop
sti
fnsave
out
fsubl
pop
mov
movsb
pushl
mov
and
std
or
dec
sub
dec
pop
push
lods
sahf
add
mov
sti
clc
and
sti
inc
push
sbbb
dec
pushf
repnz
addr16
scas
xor
cmp
and
sub
mov
leave
inc
insb
mov
scas
cltd
lret
dec
lods
enter
scas
push
cli
pushf
enter
dec
out
mov
xor
add
fisubs
and
ret
out
ja
fisubrs
repnz
sub
mov
clc
mov
mov
cld
cmp
loopne
mov
add
or
sub
rcll
lea
mov
jmp
inc
pushf
mov
cmc
stc
aas
negl
cmpsb
dec
lods
popa
cmp
mov
insl
cmp
or
inc
hlt
cs
jle
mov
daa
int3
in
inc
mov
add
dec
js
out
sbb
cmpsb
or
pop
call
jp
or
jl
xor
orb
jl
add
and
push
das
mov
pop
out
mov
cltd
xor
rcll
or
loop
add
or
sbbl
nop
les
sub
and
cmp
mov
dec
in
xor
and
sub
lret
in
add
movl
inc
push
adc
jo
std
inc
hlt
fldenv
ja
sarb
cmp
sub
adc
xchg
and
lods
shr
sub
scas
pusha
fwait
dec
inc
cmp
imul
xor
out
fcmovnb
into
adc
out
inc
dec
stc
cmp
mov
jge
fcoms
pushw
lret
sbb
mov
sbb
push
lcall
mov
push
andb
xorl
xchg
test
ja
movsb
nop
and
das
roll
mov
ljmp
inc
xor
xchg
add
xchg
shl
push
outsl
insl
push
minps
mov
jo,pt
xchg
divl
rcrl
adc
bound
mov
mov
or
jae
sub
push
ja
sub
and
nop
sbb
add
cmp
cmp
leave
lahf
push
dec
mov
xor
dec
frstor
push
pop
xchg
ret
lds
hlt
ret
mov
rcrb
mov
mov
xor
push
jmp
mov
mov
nop
mov
in
enter
fisubs
jge
xorb
iret
lretw
nop
push
push
jp
or
pushf
inc
lret
mov
aam
arpl
cwtl
jge
jl
and
movsb
mov
cmp
outsl
or
fcom
lahf
xchg
sub
orb
ja
add
and
pop
push
daa
mov
sbb
arpl
fstpt
ret
xchg
dec
das
cwtl
push
mov
add
hlt
jbe
out
fisttps
les
testb
jo
inc
cmpsb
pop
xor
pop
add
or
loopne
iret
mov
mov
push
mov
fimuls
add
jmp
lahf
sahf
dec
lods
movsb
mov
xchg
addl
pop
jo
inc
roll
lds
push
dec
push
pusha
push
sub
mov
mov
push
pop
cmp
stc
cld
leave
cmpb
test
xchg
xor
fcompl
lds
daa
cmp
pop
popa
push
enter
rolb
cmp
lods
jo
sub
stos
std
cmpsb
je
mov
push
arpl
sub
mov
repz
into
xor
cmp
xlat
sub
clc
ja
mov
sbb
sbb
sbb
lret
cmp
cltd
pop
mov
jns
sarb
out
jne
dec
test
jbe
inc
sbb
cmpsb
mov
lret
mov
mov
in
xchg
aaa
sbb
and
orb
lea
scas
adcb
jmp
xor
dec
loope
pop
hlt
mov
dec
lahf
mov
mov
cmpxchg
scas
xchg
call
dec
hlt
lds
addl
xchg
add
int3
lahf
ljmp
mov
nop
rcll
mov
dec
push
mov
pop
addl
xorb
cmpsb
lret
and
and
sub
adc
inc
and
pop
pop
pop
fdivrp
jns
dec
push
push
xchg
gs
in
jecxz
and
out
fwait
lock
addr16
pop
dec
lret
icebp
enter
cmp
push
insl
xlat
cmc
hlt
orl
push
jbe
rorl
adc
fst
and
dec
jle
add
push
icebp
mov
pop
dec
or
and
dec
push
andb
lcall
dec
jmp
pushw
mov
cld
lcall
xchg
loop
cmp
push
out
or
mov
int3
test
lds
cltd
xchg
cmp
mov
cltd
pop
cmp
in
push
sub
dec
push
xor
insl
sahf
outsl
dec
adc
leave
out
gs
xor
jge
mov
fsubl
or
pop
outsl
int
pcmpgtd
cltd
pop
jo
out
adc
pop
xor
in
outsl
mov
cmp
sub
repz
mov
xchg
sub
mov
pop
test
setns
lahf
mov
push
xor
dec
xlat
inc
aas
mov
push
loope
das
mov
dec
mov
scas
push
xor
push
jle
jb
cmp
test
mov
adc
inc
cmp
movsl
pop
adc
fisubl
sbb
or
adc
cmpsb
cmp
pop
sti
sbb
ja
cmp
and
cmpsb
pop
ficoms
mov
mov
xor
push
dec
push
ss
mov
aad
leave
jg
cmpb
mov
cmc
nop
std
decb
xor
mov
ret
imul
es
push
xchg
enter
or
pop
xor
stos
popa
pop
idivl
cltd
out
sbb
adc
xor
xchg
pop
add
sub
in
movsl
gs
xor
into
stc
cmp
sbb
call
mov
je
mov
stos
push
or
push
insl
jp
cld
shll
adc
lcall
ljmp
nop
jb
sbb
pop
es
insb
pop
cmpsl
sarl
lods
pop
xor
scas
mov
iret
aad
dec
mov
mov
sub
hlt
jb
loop
popf
std
lods
or
fdivrs
int3
push
jge
xchg
repnz
popf
hlt
xchg
shl
cmp
mov
jo
xchg
dec
adc
test
jl
cmpsl
add
iret
cltd
les
adc
cmpsl
jne
xor
and
pop
xor
aam
push
out
xchg
and
dec
push
fsts
mov
movsb
test
cmpsb
xor
rclb
adc
cmc
mov
or
inc
jecxz
data16
fxch
cmp
scas
js
jb
jmp
addr16
fisubrl
mov
fsub
mov
ficompl
cwtl
cmp
xchg
hlt
push
inc
mov
enter
pop
xor
sbb
cwtl
mov
sbb
inc
jbe
or
cmp
dec
icebp
lods
mov
or
cltd
movsb
data16
xlat
and
test
or
cmp
int
cltd
in
dec
push
dec
in
mov
js
mov
sbb
jg
jne
es
sbb
not
stos
ljmp
xor
imul
cli
ljmp
jo
cmpsb
or
cmc
pop
sub
clc
rolb
rcrl
jle
cltd
into
mov
icebp
pop
stc
xor
adc
cmp
mov
and
clc
cmpsb
xchg
adc
test
jo
mov
or
mov
sub
and
pop
cwtl
and
lcall
data16
xor
loop
aaa
inc
aad
ficoml
das
sub
jae
adcl
dec
mov
fmul
mov
imul
mov
pop
fwait
enter
cmp
stos
or
push
arpl
push
add
and
loopne
inc
mov
rclb
nop
xchg
cmp
mov
fcomip
inc
data16
jecxz
fisubrl
mov
mov
xor
nop
push
sub
shll
or
sub
adc
sub
jne
test
repz
push
dec
mov
cmpsl
or
mov
insl
aad
scas
adc
dec
push
mov
rcrb
jae
inc
push
fmuls
mov
das
push
repz
out
into
out
push
imul
cmp
fsub
sub
jmp
xchg
aaa
xor
out
cld
stos
jmp
nop
and
and
insb
cmp
or
dec
lods
aas
fimuls
fstl
inc
mov
jle
adc
cltd
loop
popa
mov
pop
es
fcomip
test
dec
mov
mov
in
ficomps
fwait
mov
dec
sub
push
dec
xor
popf
and
jmp
stc
xor
sahf
xor
pop
sub
out
lcall
sub
faddl
sub
lret
mov
mov
and
adc
mov
xor
mov
ret
out
pop
shrb
and
mov
dec
push
and
xchg
cmp
push
cmp
pop
hlt
mov
ficoms
jl
mov
ljmp
xor
jp
cmpb
xchg
int3
cmc
mov
dec
mov
sub
mov
dec
shll
in
dec
loop
push
mov
push
es
dec
test
sbb
addr16
pop
and
mov
mov
adc
jb
mov
sbb
push
add
adcb
add
sbb
aas
mov
adc
sahf
push
loopne
jl
jno
lds
fdivl
add
mov
mov
xlat
ficoml
and
xchg
popf
jecxz
loopne
pop
mov
xor
js
enter
add
mov
in
push
rorb
daa
cltd
pusha
mov
lock
imul
rcrb
ret
icebp
mov
testl
lds
push
stos
jl
or
std
into
sbb
repz
sbb
sub
shll
and
clc
pop
adc
or
xchg
xor
adc
inc
xor
push
xchg
sahf
mov
aam
mov
mov
pop
test
pop
repz
mov
add
mov
or
sti
inc
imul
xchg
daa
xchg
into
into
push
stc
cwtl
rclb
pop
scas
push
sub
int3
sbb
jno
pop
cwtl
mov
test
or
mov
cmp
adc
mov
iret
inc
push
cld
xor
jnp
fwait
test
aaa
mov
or
les
jo
mov
fs
subl
pop
das
jg
int3
leave
push
push
ja
jno
aas
icebp
and
in
xlat
or
les
in
mov
sub
out
ljmp
mov
mov
cld
sarl
js
sub
lock
cmpsb
adc
add
adc
sub
xor
xor
imul
sbb
loop
xor
xchg
lods
shrl
rol
sub
pop
add
cli
cmp
movl
scas
ret
in
push
pop
fdivl
adc
orl
sbb
adc
dec
cld
lret
aas
push
dec
in
out
cmp
add
jg
repnz
fdivs
cmpsl
jmp
xchg
jge
dec
mov
cmp
mov
je
lods
enter
lock
out
mov
cmp
cmc
test
mov
outsb
mov
dec
cmp
mov
push
cli
pop
dec
mulb
jns
jp
mov
fdivrp
test
loopne
lcall
in
jne
mov
jge
mov
jecxz
xor
cltd
aad
pusha
sbb
xor
aam
aas
rep
dec
enter
mov
ficoml
call
jbe
lock
pusha
cld
fldt
in
adc
stos
pop
dec
pop
fs
fwait
sbb
shll
and
sub
push
mov
cmpsb
xchg
loopne
jl
add
xchg
in
xchg
sbb
stos
mov
out
sub
cmpsl
out
pop
shr
je
mov
inc
jg
and
in
pop
sbb
cli
insb
shl
out
or
and
roll
jae
lds
xchg
fadds
and
mov
addb
push
mov
sub
dec
sbb
scas
ret
mov
mov
add
jp
sub
js
jl
loopne
loop
cmpsb
test
xchg
cmp
xor
jno
push
pusha
dec
mov
jmp
inc
or
mov
adc
mov
push
xor
enter
adc
cmp
inc
stc
cmp
ss
jg
mov
cmc
loope
ret
aam
addl
or
xor
jmp
jp
imul
cld
sub
jo
pop
hlt
add
inc
sbb
or
pop
test
mov
aaa
outsl
jmp
push
mov
fwait
or
fsub
iret
es
jae
outsb
mov
call
inc
inc
stc
cmp
and
fcompl
inc
pop
pop
ret
inc
ficompl
pusha
fsts
or
stos
imul
in
enter
scas
jo
mov
lock
cmp
outsl
xor
pop
mov
mov
inc
out
lods
mov
mov
aaa
cld
sub
aas
pop
lret
lcall
cmp
or
mov
int3
inc
lods
adcb
cmp
mov
fadds
insb
push
lods
cmp
mov
lock
data16
mov
dec
pop
cld
out
adc
fisubrl
lods
dec
popf
aam
mov
xlat
popf
iret
cmp
icebp
inc
fistps
data16
pop
mov
and
lret
add
adc
pmullw
push
add
ds
xchg
test
les
mov
int
cmpsl
xchg
add
xchg
movzbl
mov
mov
lret
push
jns
pushf
movsl
mov
into
int3
sbb
and
lods
jge
add
inc
daa
lea
clc
dec
and
sbb
cmp
es
ljmp
pop
jns
ljmp
ror
cmp
dec
hlt
cmpsl
dec
xchg
push
xchg
es
int
lock
cmp
out
call
push
or
bnd
cwtl
xchg
iret
push
push
pusha
hlt
push
je
xlat
jge
cmp
or
add
popf
jg
frstor
push
pop
pop
dec
dec
mov
data16
jns
sbb
sti
push
mov
into
out
mov
dec
outsl
cwtl
sub
jmp
dec
inc
cltd
cmp
cmp
insb
les
inc
imul
sbb
push
inc
int3
lret
mov
nop
lods
xor
jno
and
lcall
jl
fcompl
pop
leave
lcall
out
fstpl
dec
repz
insl
out
test
xchg
fldt
enter
ljmp
scas
popa
std
jmp
cs
data16
xchg
int
pushl
sar
call
mov
push
addr16
cmp
jp
fisubrs
or
cwtl
cmp
fucompp
mov
pop
push
dec
hlt
and
cld
rorb
cmp
sbb
in
out
imulb
xchg
fidivs
and
inc
pop
pusha
xchg
and
mov
and
std
mov
mov
gs
sbb
ret
test
lcall
push
inc
inc
mov
cli
das
xchg
sbbb
mov
xchg
dec
and
xchg
cmp
lahf
sub
lcall
call
xchg
daa
loope
sti
and
fcomps
iret
ror
and
mov
xchg
inc
fisubl
sub
fwait
and
mov
repz
fs
out
adc
xor
mov
stos
pop
mov
stos
push
xchg
or
push
shl
mov
or
movsb
add
cli
mov
std
ja
or
jge
call
fcoml
out
cmp
sbb
jge
xchg
sub
or
bound
push
aam
aad
in
pushf
insl
aas
mov
adc
int
out
repnz
call
mov
repz
jo
je
scas
xchg
sub
inc
lea
jl
scas
or
cmp
inc
jl
jns
pop
or
lds
inc
stos
fstpt
loope
repz
adc
mov
decb
mov
adc
cltd
add
roll
push
mov
dec
outsb
pop
sbb
or
js
sub
sub
push
jmp
call
ljmp
push
mov
aam
sarl
imul
adc
pop
lcall
xchg
ret
stos
adc
push
in
int
stc
mov
add
adc
cmpsb
shrl
xor
loope
add
add
fidivl
enter
mov
add
jp
fcompl
adc
pop
xchg
stos
xor
lds
add
jae
xchg
cld
aad
iret
xor
dec
and
ss
adc
xor
movsb
icebp
jo
test
jae
sahf
iret
xlat
repz
dec
cld
jg
adc
mov
xchg
loop
pop
adc
enter
jecxz
in
es
mov
mov
gs
movsl
xchg
lods
lret
lahf
hlt
cld
mov
popf
stos
sbbl
adc
xchg
or
cmp
fnsave
enter
xchg
pop
lds
add
mov
or
mov
jle
mov
clc
clc
fmull
movsl
int
and
pusha
adc
dec
mov
pusha
test
rorl
imul
jne
mov
lock
sub
push
dec
cmp
xchg
enter
xor
mov
dec
dec
testl
and
cmp
test
mov
sbb
pop
mov
inc
roll
jo
dec
sub
jg
push
mov
int3
rcll
mov
xchg
add
fnstcw
andl
mov
ret
lret
pusha
inc
lock
icebp
jo
mov
sbb
jne
cmpsl
repnz
adc
cmp
xor
test
mov
aaa
mov
outsl
gs
daa
inc
mov
push
jmp
add
jo
test
mov
cmp
mov
add
push
jo
je
mov
into
pusha
dec
and
rdpmc
pop
push
adc
jae
pop
adc
mov
xlat
sbb
pop
lods
adc
into
cmp
rorl
push
fisttpl
jnp
das
push
mov
xchg
stos
jl
lds
loopne
ret
inc
insl
fs
cmp
push
pop
pop
pop
xchg
cmpsl
dec
xchg
pop
imul
adc
inc
popa
or
push
push
mov
mov
cli
and
icebp
sbb
call
data16
jl
inc
cmp
ret
xlat
lea
les
test
or
mov
sahf
sub
rorl
jp
push
sbb
jbe
fimull
mov
mov
and
xlat
jle
dec
mul
mov
adc
incl
pop
xchg
xor
sub
bnd
mov
scas
aaa
add
stc
adc
loope
jge
jl
dec
iret
jg
dec
jns
mov
sub
inc
sahf
jo
cmp
mov
in
ret
jb
aaa
sub
movsl
call
jne
stos
sbb
inc
fiaddl
pop
call
mov
movsb
adc
sub
outsb
nop
and
and
mov
mov
xchg
out
pop
sbb
xor
push
bound
mov
insl
lahf
jecxz
aad
xor
jp
sbb
mov
es
and
pop
pop
jp
inc
shl
mov
xor
shl
mov
xor
inc
int
popl
pop
push
sbb
jecxz
daa
mov
xor
pop
inc
xchg
and
fcomp
push
jns
mov
je
in
movsb
cmpsl
mov
in
and
add
and
push
cltd
cltd
ret
push
dec
ja
pop
mov
call
loop
sahf
cmp
mov
loopne
andb
jbe
jne
inc
ss
cmp
push
push
mov
dec
ljmp
sub
and
dec
sahf
cs
aaa
push
pop
inc
mov
push
mov
or
clc
stos
adc
push
out
sbbb
xchg
insb
add
incb
push
inc
sub
push
aaa
test
sub
adc
pop
popf
sub
inc
push
mov
clc
rcrl
test
les
mov
mov
stc
sub
int3
mov
fwait
xlat
dec
shrb
xor
inc
fisubl
nop
or
add
gs
mov
mov
out
mov
inc
mov
sub
aas
add
push
mov
xchg
add
out
push
xchg
popa
fdivs
aad
or
enter
test
xor
sub
cmp
repnz
mov
les
cmpsl
lea
jnp
mov
push
mov
dec
add
mov
dec
push
xchg
orl
cmp
les
cmpsl
es
pop
and
stos
loop
pop
shll
xor
or
push
and
cmp
inc
mov
aam
adcb
lods
pop
mov
loopne
adc
inc
daa
pop
or
repnz
fwait
ja
xchg
pop
pop
fidivs
popf
cmpb
call
jo
jmp
rorl
jne
sbb
nop
cmp
sbb
jbe
lcall
cmp
dec
mov
push
cmp
cwtl
sub
outsl
push
pop
jecxz
jge
in
test
inc
outsl
mov
and
mov
jmp
adc
iret
aad
xchg
insl
insb
rolb
push
mul
andb
inc
sahf
ret
fucomip
and
dec
jo
out
in
fisubrs
pop
iret
dec
cmp
adc
push
push
and
mov
xor
push
jne
dec
mov
push
push
clc
int
out
cwtl
inc
rol
loop
pop
sub
pusha
fs
jmp
adc
fimull
add
mov
es
andb
mov
mov
fsts
repnz
inc
xor
add
into
out
sar
gs
mov
add
xor
or
sub
sub
jno
jp
cmp
mov
pushf
int
test
mov
mov
mov
cmp
push
pop
ja
std
fbld
push
add
adc
and
cwtl
jmp
iret
jg
add
sti
xchg
mov
xchg
iret
xchg
jne
enter
lret
jp
call
push
in
push
rclb
addl
test
sbb
dec
inc
mov
in
fldcw
in
push
add
mov
jge
cli
ljmp
movsb
jno
call
mov
movsl
mov
in
adc
andb
movsb
std
pop
iret
movsb
sub
repz
sbb
popf
loopne
sbb
std
adcb
or
rcr
mov
mov
data16
or
outsb
mov
jb
hlt
adc
mov
adc
inc
jae
cld
and
and
pusha
mov
cmpsl
imul
jo
xor
mov
cmp
mov
lock
cmc
cmpsl
stc
std
jge
push
icebp
aaa
jle
sbb
push
mov
imul
adc
jmp
pusha
fnstcw
mul
cmpsl
bound
ljmp
popl
and
jno
inc
fbld
pop
in
idivb
jnp
mov
jns
mov
gs
pop
xchg
in
mov
sbb
es
cli
in
test
fnstsw
test
mov
push
xchg
mov
cmp
daa
or
cmpl
push
adc
mov
add
pop
mov
mov
xchg
mov
into
out
xchg
dec
sbb
mul
bound
xlat
cli
push
mov
sub
sarb
bound
jge
ds
mov
shrb
mov
gs
ss
mov
in
inc
cmpsb
mov
dec
shll
mov
push
mov
popf
repz
cmp
mov
fs
outsb
add
cmp
in
pop
ljmp
xor
and
gs
pop
cmp
inc
lea
mov
dec
out
mov
mov
call
xchg
imul
imul
mov
xchg
mov
imul
xchg
adc
das
cmp
pop
push
cmc
add
push
xlat
lods
push
sysret
mov
adc
popf
sub
ljmp
mov
vfrczsd
mov
pop
dec
pop
push
push
fcoms
push
shr
call
int3
jbe
jle
dec
xor
or
sub
push
sbb
cmp
sbb
mov
test
push
cmpsb
insb
adc
cmp
dec
sub
and
imul
cld
and
jns
pop
push
andl
leave
loope
sbb
push
loop,pt
dec
and
lret
xor
mov
and
or
dec
xor
push
fwait
repz
outsl
popf
fistl
test
mov
je
insb
in
add
pop
rcrl
sbb
and
nop
pop
ret
lods
js
add
imul
mov
jne
pop
dec
add
jbe
jmp
fisttpll
sbb
xor
rcrl
popa
or
jno
add
xor
push
xchg
push
dec
mov
push
fisttps
adcb
test
dec
or
xchg
jno
pop
repz
fidivl
mov
imul
fcompl
inc
in
movsl
and
add
pop
mov
pop
aaa
cltd
pop
aad
stos
cmp
xchg
pop
xchg
cs
nop
push
sbb
mov
insl
add
xchg
test
cmpsl
jle
mov
iret
aad
arpl
mov
imul
inc
push
addl
decl
pop
shl
mov
mov
test
cmp
aad
jns
pop
pushf
rorb
xchg
cli
test
gs
fisubrs
push
xchg
jl
pop
xchg
lret
jge
adc
sub
es
ret
rcl
roll
rol
clc
inc
loope
sbb
js
jnp
xor
jo
cmp
loope
movsb
jmp
lret
inc
and
cmp
push
test
insb
and
xchg
popf
test
sti
movb
push
pop
xchg
sbb
mov
add
push
push
sub
pop
mov
cmc
gs
mov
stc
and
dec
add
sbb
movsb
iret
sti
dec
lods
add
dec
and
mov
lea
jae
cs
xchg
mov
aad
call
outsl
idivl
out
negl
cmp
inc
call
mov
ljmp
clc
fldl
imul
popa
mov
or
mov
or
nop
xor
cmp
xchg
lcall
inc
stos
and
mov
enter
sbb
hlt
out
es
adc
mov
dec
fidivs
fdivr
dec
sub
lea
xor
mov
jae
xor
in
mov
fstpl
jmp
sbb
test
enter
mov
data16
insb
enter
cmpsl
or
js
test
mov
aaa
rclb
outsb
mov
inc
ds
lock
push
push
rorl
push
fldcw
or
lret
fwait
push
lret
push
int
mov
out
popf
dec
mov
cmc
and
push
or
add
sbb
xchg
lods
pushf
mull
jnp
push
ret
jmp
adc
lahf
aaa
int3
cwtl
sti
fistpl
and
dec
mov
pop
je
inc
lods
and
mov
cwtl
push
and
dec
imul
sub
cltd
jecxz
les
jl
std
es
fimuls
rcll
pusha
gs
in
mov
push
aaa
push
add
loope
stc
dec
jmp
pop
mov
arpl
fcom
popf
mov
loope
shl
or
xor
aam
sbb
xchg
add
jmp
sub
mov
cli
and
mov
ret
dec
add
jnp
cmp
aas
jae
jge
sub
push
ljmp
jae
fildl
mov
mov
xchg
mov
imul
icebp
sbb
shr
sahf
inc
xchg
mov
cmc
fisubrl
out
cmpsb
pop
ret
lods
rcll
sub
jge
push
inc
push
cmp
clc
push
insb
aad
clc
push
ja
cmp
mov
dec
xchg
fnstenv
add
fwait
lock
fcoms
cmp
push
lods
cwtl
fsts
fnsave
mov
rclb
js
lahf
mov
les
xchg
popf
jg
or
icebp
int3
inc
daa
sti
and
push
mov
pop
mov
or
xor
adc
push
or
or
popa
and
sbb
or
inc
mov
inc
aas
je
pop
cmp
std
loopne
mov
mov
jno
shl
mov
push
pop
pop
dec
push
popa
jmp
dec
imull
adc
adc
adc
mov
in
mov
pop
xchg
ss
roll
test
or
rorl
jg
or
mov
mov
jmp
mov
jmp
fwait
out
mov
sub
mov
pop
nop
pop
mov
sub
lahf
int
scas
mov
fwait
jecxz
mov
test
add
mov
mov
fs
fiadds
push
out
mov
jmp
inc
mov
popa
push
in
repz
dec
push
cltd
mov
popf
mov
inc
les
gs
fs
enter
fisttps
push
shrl
add
arpl
cltd
loopne
sbb
rcrb
sbb
test
ficoms
les
add
mov
or
xor
xchg
xor
sub
scas
pop
cmp
out
cmp
les
xchg
std
stc
cltd
sbb
and
insb
adc
dec
idiv
pop
xchg
movsl
dec
lcall
jle
stos
add
mov
in
fimull
or
andl
test
mov
dec
call
xchg
or
ret
gs
insl
dec
imul
sarl
repnz
roll
fdivrl
xor
pop
ds
cli
cmp
call
sbb
jmp
shll
repnz
lock
les
pop
addr16
mov
inc
lds
jno
adc
mov
push
and
jg
sbb
out
jp
or
imul
loopne
dec
dec
xchg
push
clc
sub
movnti
xor
xchg
and
sbb
jns
shlb
push
pop
lods
jb
xchg
cld
jg
or
test
bound
sahf
mov
aaa
dec
or
cmp
xchg
outsl
cmp
sarb
imul
enter
fs
divl
cmpsl
insl
jns
add
cmpsb
decb
cli
popa
fbld
jg
loope
pop
lret
and
out
out
mov
imul
sub
xchg
bound
push
or
js
sub
inc
mov
push
stc
pusha
test
sub
jae
bound
ret
cld
pop
movsb
int3
xchg
xchg
or
mov
out
iret
scas
dec
lcall
dec
hlt
xor
xchg
cmp
adc
jae
mov
cmc
jnp
repnz
std
jno
lret
dec
dec
mov
pop
mov
std
dec
and
pop
int
xor
icebp
pop
ja
inc
pop
movsl
xchg
aad
imul
cmp
cltd
mov
jbe
inc
add
inc
inc
mov
mov
cmp
fwait
cmp
divl
dec
xor
push
aad
dec
mov
sar
insb
jbe
xor
in
icebp
xchg
test
data16
lret
popl
mov
cs
adc
xchg
test
int
inc
sbb
and
and
das
xor
pop
mov
mov
int3
sti
add
adc
dec
adc
lea
ja
rcr
adcl
sub
jmp
inc
incl
push
aaa
sub
lret
inc
lahf
jg
call
pop
xchg
sbb
adc
mov
inc
xchg
lea
stos
adc
cmpb
pushf
dec
xchg
add
pop
cwtl
lock
jle
sub
mov
rorb
pop
mov
dec
mov
shlb
mov
xchg
inc
push
xchg
jecxz
in
call
jecxz
dec
lahf
push
inc
push
sbb
das
jne
insb
or
fldl
movsb
jb
lds
scas
fwait
sbb
pop
push
scas
dec
cmp
in
xchg
push
jae
mov
add
mov
and
int3
gs
sti
sbb
xor
inc
loope
lret
jns
gs
inc
mov
push
loop
push
in
out
sub
adc
xchg
in
and
out
mov
shll
adc
pop
mov
xorl
dec
mov
lea
jp
dec
mov
xor
xor
je
mov
mov
les
out
test
xor
jg
adc
cmp
xchg
fnstcw
repnz
adc
cwtl
pop
or
cmc
sub
jmp
mov
add
xlat
push
ret
paddsw
mov
loop
pop
push
mov
cmp
adc
dec
nop
ja
mov
xacquire
and
push
mov
arpl
push
aam
jo
xor
xlat
jne
and
aad
aam
mov
lret
notb
cmp
imulb
dec
add
pop
pop
fildl
sub
shlb
mov
test
inc
imul
les
push
fistl
xor
push
es
mov
mov
testl
ret
bound
mov
std
xchg
lds
sbb
test
aaa
dec
mov
mov
aam
test
xchg
mov
es
fidivs
jb
negb
adc
dec
xchg
dec
sahf
roll
mov
out
add
jecxz
in
stos
inc
mov
pop
jno
dec
and
pushf
jae,pt
mov
dec
mov
repz
fistl
insl
pop
rorb
repz
xchg
daa
jb
fxch
cwtl
lods
xor
sbb
fcoml
mov
cli
add
adc
mov
fstpl
mov
jnp
hlt
aad
mov
xchg
pusha
inc
enter
jge
mov
sbb
xor
or
jo
fwait
mov
adc
shrl
roll
inc
scas
loope
cmp
mov
aas
out
test
loope
xor
leave
clc
dec
sub
mov
outsb
mov
inc
inc
mov
jg
shll
je
arpl
loope
popf
dec
pop
mov
cmp
imul
adc
clc
or
nop
pop
out
aas
lds
sub
adcb
pop
fisubrs
inc
or
movsl
push
andb
lods
xlat
jecxz
adc
xchg
jle
hlt
inc
scas
push
into
stos
xchg
jns
cld
jle
stos
push
xchg
push
push
sbb
add
jecxz
inc
jnp
and
cmp
aad
ss
or
insl
or
popa
test
cmc
adc
imul
mov
hlt
out
dec
push
scas
clc
movsl
lcall
push
stos
mov
mov
in
mov
clc
xchg
in
fmuls
fwait
add
push
dec
mov
cs
sub
pop
into
ja
mov
dec
inc
mov
mov
xchg
outsb
adc
sub
enter
iret
pop
pop
push
add
pop
cli
sbb
out
mov
mov
sbb
divl
insl
loopne
sub
roll
ss
popa
icebp
out
mov
jnp
cmp
jb
mov
test
into
mov
rcr
ja
out
test
jmp
scas
mov
scas
pop
push
fadds
pop
mov
add
fs
ja
std
xor
sti
mov
cmpsl
or
jne
decb
mov
movsb
cmp
mov
xchg
or
stc
int
mov
icebp
add
insl
push
pop
xchg
ds
mov
pop
mov
sub
mov
outsl
aad
cs
repnz
mov
pop
push
push
shl
mov
repz
mov
xor
jmp
pop
dec
pop
das
mov
inc
inc
sbb
adc
imul
fucomi
mov
fcomps
pop
iret
movsb
dec
cwtl
mov
lods
or
jp
and
mov
or
pop
in
lock
mov
lods
pop
sahf
xchg
pop
adc
in
stos
scas
add
out
or
and
icebp
pop
mov
push
adc
mov
mov
push
andb
pop
xchg
data16
mov
pop
fcmovne
decb
push
xchg
movsl
and
ficompl
jae
sarl
jle
lds
push
lret
jmp
fstpt
pop
jbe
ret
mov
lcall
mov
xorl
sub
xchg
mov
mov
cmc
loopne
pop
xchg
cltd
inc
xlat
mov
sbbl
xchg
dec
je
mov
sbb
loope
xchg
scas
mov
or
xchg
repnz
pop
in
in
adc
xor
adc
sti
dec
jae
fwait
dec
inc
inc
aam
mov
dec
dec
or
stos
mov
jb
cmpsl
shlb
mov
xchg
orl
mov
jg
insl
inc
push
mov
xchg
push
jmp
xchg
and
lret
xchg
ja
js
and
inc
mov
out
lret
push
cmp
ret
icebp
lea
aad
sbb
sbb
pop
cmp
mov
mov
cmpl
adc
dec
cmp
int3
cmp
icebp
in
dec
mov
mov
ljmp
xchg
cmp
cmpsl
and
pop
clc
into
sti
dec
iret
scas
or
nopl
mov
pop
mov
sbb
in
cli
out
adc
mov
int
mov
in
bound
pop
test
fldenv
sbb
add
lea
or
jae
and
jb
lods
nop
jmp
cmp
inc
or
das
lcall
insl
jne
push
dec
adc
lret
pop
sbb
jb
jae
pop
fadd
mov
xchg
jo
push
xor
pop
popa
cmp
fstpt
cmp
pop
rcr
fprem1
fwait
jnp
mov
or
adc
dec
movsb
test
add
fdivrl
jle
dec
pop
jle
pop
cltd
jae
aam
mov
mov
jecxz
out
js
out
addr16
xlat
xchg
leave
ret
adc
sbb
and
ror
imul
pop
cltd
repz
sbb
add
adc
mov
pushf
mov
cmp
ret
mov
mov
inc
inc
or
xadd
lcall
pop
out
or
popa
sbb
mov
inc
outsl
subb
xor
mov
ljmp
mov
push
mov
mov
les
cmpl
dec
cmp
lods
adc
aad
cltd
mov
cmp
inc
clc
xor
push
mov
orb
mov
xchg
mov
mov
nop
push
add
je
ja
lahf
mov
in
mov
sahf
jnp
mov
mov
popf
xchg
xor
lods
mov
cmp
popf
sub
pop
fmull
mov
sbb
imul
cmpsl
std
ret
movsl
lret
pop
pop
xor
mov
or
xchg
test
sti
push
mov
jae
sbb
push
or
divl
addr16
adc
mov
dec
and
es
test
push
out
pushf
xor
rcrb
pop
mov
pop
out
ret
dec
xor
sub
inc
cwtl
push
out
enter
pop
cld
int
cltd
movsl
cld
push
sbb
mov
pop
in
xor
lret
pop
lods
jbe
cltd
push
test
push
shl
scas
cs
push
test
cmp
test
mov
mov
das
addr16
icebp
dec
fcmovu
push
ja
xlat
xlat
jg
iret
mov
pop
insl
xchg
mov
mov
popf
xchg
es
push
inc
mov
sub
test
push
fistps
pop
pushf
movsb
cmp
mov
aad
cmp
pushf
jns
mov
inc
std
and
add
push
jae
in
pusha
dec
adc
scas
xchg
or
mulb
int3
shl
aaa
add
sbb
or
push
add
xchg
pop
addl
push
jb
fwait
pop
mov
dec
push
xlat
adc
xchg
jmp
mov
or
xchg
lock
xor
cmp
sbb
loopne
mov
mov
inc
ret
inc
test
lods
in
ficomps
jmp
das
sub
push
sub
int3
daa
jge
cwtl
imul
scas
loop
jo
mov
pop
outsb
jl
into
out
sub
or
and
fdivrp
dec
push
cs
push
adc
repz
mov
shlb
shll
mov
push
jb
adc
cmp
mov
fcmovnbe
sub
insb
mov
jb
mov
push
mov
push
pop
mov
and
cmp
hlt
dec
bswap
call
lods
inc
es
nop
jmp
fs
dec
xchg
jbe
jne
call
jo
outsb
mov
pop
jno
inc
push
adc
inc
js,pt
inc
rolb
or
push
mov
mov
out
loopne
lods
mov
add
inc
dec
mov
push
xchg
mov
push
in
dec
xchg
cli
inc
ds
or
mov
push
ret
lret
es
fs
and
jmp
xor
xchg
lods
sbb
xchg
aaa
lock
add
std
mov
lock
sbb
push
mov
add
lods
cltd
mov
lret
add
ret
sbb
jge
and
or
test
ret
dec
out
cltd
push
std
add
ljmp
mov
push
into
and
xor
jmp
test
ret
cmpsl
loopne
pop
clc
int3
jmp
pop
jle
mov
cbtw
pop
les
hlt
test
sub
in
adc
adc
or
das
mov
push
lcall
shlb
adc
sub
lret
test
pop
pop
xchg
subl
mov
inc
jo
sub
sub
ficompl
cmp
push
cwtl
scas
outsb
adc
xchg
outsl
mov
pop
std
leave
mov
and
pop
das
inc
jbe
stos
jne
stos
nop
jae
jl
pushf
movsb
and
lds
mov
nop
lds
jl
lret
add
xor
decl
dec
xor
cmp
stos
loopne
out
push
sbb
bnd
stc
out
push
outsb
cmp
cmp
xor
out
jl
sub
ljmp
in
loop
push
pop
pop
into
clc
mov
loopne
dec
dec
es
cwtl
jb
xchg
mov
fwait
add
enter
push
inc
pop
pop
jns
cmc
lock
int
pop
jne
fs
jb
mov
dec
mov
xchg
outsl
inc
fdiv
dec
in
mov
fs
popl
cmp
or
ret
sbb
addr16
push
pop
mov
cwtl
xchg
hlt
mov
inc
fadds
lret
in
push
ljmp
push
movsb
and
clc
pop
cwtl
lcall
pop
inc
loopne
add
cmpsb
stos
mov
out
lea
cwtl
push
gs
test
sub
in
cltd
mov
int
icebp
in
or
rorl
jo
pop
movsb
ljmp
xchg
lahf
jae
and
pop
les
lret
inc
sbb
and
out
rol
fs
in
fucomip
outsl
and
mov
and
clc
sbb
mov
inc
add
lahf
jne
pop
cmp
sbb
lret
xor
sub
cmpsb
mov
lds
std
into
dec
mov
push
test
mov
and
repz
sub
fistps
dec
js
std
or
nop
je
add
jecxz
pop
add
inc
xchg
ljmp
adc
cld
fsubs
imul
add
stos
sub
push
mov
cmpb
ret
cmpsb
pusha
mov
sbb
leave
sti
mov
mov
stos
imul
mov
adc
pop
sahf
in
push
cltd
dec
hlt
test
xor
scas
pop
iret
ss
jp
ja
cmpsl
loopne
add
push
loopne
push
ljmp
sub
sbb
insb
shrb
shlb
add
jno
xchg
insb
dec
sbb
dec
mov
pop
adc
test
shll
mov
jns
iret
mov
push
mov
repnz
add
fmuls
mov
sbb
push
mov
fsts
cmp
lods
call
lahf
addr16
movsb
daa
pop
imul
mov
shr
outsl
insb
mov
pop
adc
push
js
inc
test
pop
pop
cmc
inc
push
pop
pop
jge
je
dec
cmp
mov
push
call
push
cmc
shrl
sub
inc
movsl
aas
sub
sbb
sti
mov
ret
xchg
imul
xchg
es
cmpsb
movsl
push
inc
int3
dec
pop
xlat
dec
pop
add
fdivs
pop
jge
sub
lret
es
sub
in
dec
inc
sub
mov
js
ds
inc
xchg
jle
sbb
sub
ror
jge
gs
xor
jb
lret
imul
push
sahf
loop
in
xchg
lcall
lahf
sub
sbb
icebp
push
push
or
cld
out
pop
sbb
ljmp
insb
push
mov
mov
mov
sub
and
or
mov
cmova
icebp
insb
ret
aad
sarl
mov
sahf
test
aad
inc
dec
mov
outsl
xchg
inc
outsb
cmc
mov
push
fiaddl
and
push
test
mov
push
test
xchg
cmpsb
mov
das
pop
xor
hlt
xchg
dec
imul
xor
popa
push
sbb
jmp
hlt
cmp
ss
movsb
imul
lock
fbstp
cmc
lcall
xchg
ret
adc
lds
or
gs
repnz
xor
sarb
xchg
stos
xorl
scas
mov
aaa
cs
inc
inc
sub
sbb
cmp
mov
fistl
std
add
int
mov
scas
push
es
outsl
and
push
icebp
stos
jmp
ret
gs
in
sub
clc
xchg
sbb
mov
arpl
aad
pop
push
pcmpeqb
mov
mov
sub
xchg
and
bnd
orb
movsb
imul
sbb
mov
cmp
aad
jnp
cmpl
test
ds
push
dec
mov
testb
push
adc
test
sahf
push
jp
loope
mov
lods
and
sti
arpl
ret
sahf
jmp
mov
pop
and
dec
lock
jmp
sub
jecxz
jl
xchg
cs
in
bound
or
test
sub
in
sub
or
in
shll
fimuls
int3
cmp
pusha
pop
btr
pop
cmp
xchg
mov
nop
mov
andb
and
lock
push
out
pop
int
dec
xchg
scas
sub
and
jae
xchg
pop
add
push
add
mov
sti
int
dec
stos
outsl
in
test
mov
sbb
rclb
aam
and
jecxz
pand
ret
fnsave
fimull
or
out
sarb
shrb
xchg
cmp
enter
jecxz
jle
loopne
call
out
pop
push
ss
lcall
fists
out
add
int3
fs
in
jle
and
lret
inc
shll
fs
sbbb
inc
aam
sub
mov
xchg
mov
inc
cli
inc
mov
fisubl
sub
sbb
ljmp
adc
mov
xlat
std
loopne
pop
xchg
mov
fwait
call
cmpl
pop
movsl
sahf
mov
lea
cmp
fucomip
repz
jp
shll
out
das
fistpl
cmp
imul
ss
xor
cmp
jg
sbb
xchg
loopne
xchg
fisttps
popf
sahf
adc
add
jns
mov
push
jle
jp
inc
inc
jecxz
dec
in
dec
popa
push
adc
push
pushl
decl
inc
sahf
jnp
mov
rcll
pop
enter
insl
fcmovnu
dec
stc
mov
and
lahf
inc
sub
sbb
add
or
mov
jbe
mov
out
aaa
movl
popf
dec
pop
push
dec
sub
xchg
xor
in
dec
divl
test
jecxz
xor
jp
add
sub
dec
mov
cs
popa
test
test
mov
dec
jp
fwait
mov
cmp
jecxz
in
xor
xor
mov
mov
lcall
push
adc
xchg
ljmp
adc
jmp
call
rolb
je
or
data16
lock
pusha
bound
pop
add
jle
rcl
out
mov
fnsave
add
aad
and
aas
cwtl
dec
or
sahf
orb
outsb
mov
imul
shlb
inc
leave
xor
jle
out
dec
mov
push
orl
xchg
jae
aaa
xor
mov
sub
sbb
sarb
test
sarb
jb
call
insl
stos
scas
cmp
pop
push
fs
mov
add
sbb
ljmp
ljmp
pop
push
movsl
jp
test
sti
xor
xor
mov
add
and
and
iret
jp
imul
jns
and
mov
xchg
and
shr
mov
push
inc
sti
es
xor
addb
inc
mov
scas
jne
add
fiadds
sahf
sub
ret
push
test
xchg
push
mov
xor
sarb
lcall
pop
xchg
divl
cmc
dec
pop
sti
aam
and
push
pop
adcl
call
or
sbb
sbbb
and
add
adc
dec
lea
es
loope
aas
mov
fs
imul
xor
stos
lds
mov
cmc
add
mov
std
mov
push
mov
or
sbbb
insb
jmp
aam
push
cmp
iret
push
cmpsl
cmp
sbb
mull
cli
sbbl
and
mov
mov
data16
into
adc
fcmovnbe
sub
mov
mov
call
xor
enter
xchg
inc
cli
and
test
rcll
xchg
std
sbb
es
add
ret
mov
mov
and
movsb
ret
xchg
aas
in
inc
loope
mov
add
push
es
test
ficomps
les
nop
movsb
shlb
push
push
fcomi
and
dec
pop
inc
pop
xchg
sub
cltd
mov
fisubl
out
or
add
sub
sbb
xchg
mov
test
mov
push
mov
orl
mov
rcrb
inc
loopne
and
sbb
ficoms
out
test
jo
cs
jo
je
por
hlt
add
ljmp
lock
pop
sub
shll
mov
hlt
sbb
fistps
jg
out
sbb
sti
lock
sbbb
push
test
dec
dec
jl
ja
out
sbb
int3
pop
cmp
mov
outsb
dec
add
popf
shrl
push
xchg
loopne
psraw
pop
add
cmp
fcmovnb
les
fisubl
lods
sub
xchg
or
lret
xor
aas
iret
outsb
insb
cmp
xchg
inc
or
test
int
orl
push
xchg
ljmp
mov
std
lock
xchg
xchg
rcll
test
aad
dec
daa
pop
inc
lcall
pop
dec
aad
pop
mov
dec
adc
fcoml
stc
pop
mov
mov
push
pop
mov
sbb
aad
lret
cmp
add
add
out
push
adc
or
sbb
movsl
cmp
cltd
and
insl
movsl
or
aas
dec
mov
xchg
fldcw
xorl
cmp
jecxz
fisubrl
sbb
mov
pop
xlat
xchg
ds
lret
xchg
jg
xor
mov
mov
pushf
cmp
adc
out
sti
cwtl
add
arpl
dec
cwtl
inc
cmp
or
loopne
andb
xchg
movsb
xor
jle
fisubrl
push
sbb
push
adc
xchg
push
mov
sbb
ja
inc
push
push
add
int
addl
xor
push
add
pop
push
ds
sbb
inc
or
fsubrp
add
pusha
cmp
fsubrl
or
ljmp
sbb
pop
rolb
pop
jbe
outsl
aad
pop
inc
mov
idiv
mov
jmp
pop
insl
lret
stc
and
jae
jb
add
pop
imul
jae
aaa
and
push
xor
out
fisubrs
arpl
cs
add
rep
fcomps
icebp
cmp
xor
icebp
stos
in
sbb
jecxz
pushf
les
mov
imul
repnz
sub
pop
jp
push
arpl
adc
and
leave
mov
push
or
in
ss
and
in
test
hlt
ljmp
fwait
cmc
add
inc
inc
and
mov
mov
add
mov
pop
fmull
cmp
sub
dec
mov
jg
xchg
jns
fnstenv
aad
outsl
cmp
ss
shl
ds
mov
or
out
jl
arpl
adcb
daa
outsb
mov
and
xchg
int3
rclb
cwtl
movl
xor
cmc
cmpsl
addl
cli
xchg
push
es
mov
fs
out
fdivrs
ds
or
mov
scas
cmp
sti
repnz
add
pop
sbbb
aam
jmp
lcall
mov
insb
push
dec
ss
jp
stc
out
inc
jae
pusha
push
push
cmp
cwtl
cmc
rcrl
dec
xchg
xlat
pop
sbb
mov
movsl
or
pop
xor
push
ret
test
mov
sub
push
iret
inc
bound
lock
jnp
mov
jle
dec
shrl
and
int
xchg
mov
jmp
std
test
adc
add
or
or
pusha
movl
mov
popf
shrb
imul
sbb
xchg
data16
sub
pop
inc
inc
pop
jl
out
andl
add
movsb
jno
mov
jbe
and
adc
jnp
sahf
ds
pop
dec
sub
movsb
or
mov
or
jbe
fcomps
out
aam
and
add
inc
dec
shl
nop
daa
insb
rorl
rclb
jne
jl
loope
push
mov
loopne
xor
jg
clc
pop
test
mov
adc
adc
or
cwtl
inc
movsb
inc
and
cltd
sub
jae
mov
movsl
pop
xchg
cmp
test
adc
and
std
lret
pop
sub
dec
rol
shl
inc
mov
xchg
push
dec
or
cmp
mov
mov
dec
cmpl
inc
mov
mov
sarl
jae
cs
sub
mov
cmpsl
add
inc
mov
and
pop
adc
adc
dec
dec
push
ja
adc
jno
xchg
push
sti
jp
incl
stos
lea
mov
repz
xor
cmp
cwtl
sub
cmc
sbb
sub
inc
and
cmpsl
adc
mov
mov
sub
mov
mov
hlt
inc
xor
mov
rcrl
sarl
xchg
loope
ljmp
inc
xor
dec
pushf
mov
pop
jne
in
fdivrp
sub
inc
fstpt
and
in
stos
and
shl
jmp
popf
fmul
xchg
inc
pop
psrlw
in
mov
fs
push
and
inc
into
and
out
dec
mov
lods
ret
stos
jne
pop
fucom
mov
lock
and
mov
scas
lea
inc
sub
mov
inc
loopne
jecxz
std
mov
test
mov
push
in
cwtl
ds
push
jbe
popa
stos
pop
adc
push
dec
push
ret
ds
mov
shll
lock
mov
repz
clc
test
int3
pop
popa
dec
out
lahf
or
stos
ret
xor
call
dec
mov
lods
xchg
inc
and
add
or
xchg
or
es
xor
add
rcrb
pop
ret
test
sbb
push
shrb
iret
ss
xchg
mov
and
fsubr
call
pop
dec
cli
ds
sahf
push
sti
add
pushl
or
faddp
outsl
movsb
inc
rorb
in
inc
jmp
inc
push
ret
cmc
scas
and
adc
insl
adc
lea
jge
repnz
imulb
pop
dec
lret
in
mov
xchg
or
outsb
cmp
test
push
imul
mov
js
and
xchg
push
jne
xor
not
bound
aad
adc
shlb
popa
dec
sbb
imul
insl
inc
inc
or
adc
leave
xchg
cmp
cltd
adc
cmp
popa
popf
pop
es
outsl
or
mov
int
lret
lret
xchg
int3
test
dec
orl
inc
push
inc
mov
xor
inc
add
and
adc
and
lea
xchg
stos
pop
xor
cld
mov
ds
rcr
jbe
test
inc
das
sbb
jnp
not
in
pop
add
sbb
mov
icebp
ret
dec
pop
sti
rorb
sbb
inc
movsl
iret
nop
and
dec
push
jo
xor
clc
cwtl
cmp
cmpsl
test
pop
arpl
fcoms
roll
xchg
aaa
ret
xorw
leave
push
rorl
dec
mov
cmp
mov
sub
push
pop
mov
lret
outsb
lods
sub
dec
insb
mov
adc
push
mov
fistpl
cmp
aaa
fidivrl
pop
shll
mov
mov
adc
mov
cmpsl
addr16
jae
pop
mov
push
push
xlat
jno
sbb
mov
or
push
iret
imul
dec
push
in
sub
and
test
push
fildl
mov
ja
cs
push
inc
or
mov
cmp
pop
mov
out
insb
out
jmp
mov
incb
in
pop
xchg
push
adc
scas
push
rcrb
fs
je
push
and
jg
test
icebp
jb
insl
cmc
loop
inc
bound
push
call
leave
cmp
push
es
jb
adc
sub
inc
sbb
or
cltd
cwtl
mov
pop
mov
dec
fldcw
adc
arpl
lret
icebp
mov
out
sub
aaa
das
popf
repz
xchg
fdivs
jne
jns
xor
data16
rorl
cmp
add
lret
js
pop
jb,pt
mov
jmp
icebp
sahf
xchg
inc
cmpsl
xor
lcall
cmp
fucomi
mov
xor
fidivrl
sub
stos
enter
rcll
jg
cltd
xchg
fs
repz
push
push
cltd
hlt
add
rclb
rolb
push
jmp
fldenv
sub
mov
dec
pop
mov
adc
push
jmp
rcr
js
int3
ffreep
mov
sub
imul
mov
mov
push
and
cmp
sti
inc
movaps
pop
sub
push
mov
adc
mov
xor
push
orl
scas
in
ljmp
inc
pop
cmp
fimuls
jg
jnp
les
mov
shll
pop
bound
hlt
inc
mov
cmp
and
cmpsl
xchg
call
jecxz
pop
cmp
out
push
cli
popf
xchg
xor
scas
lcall
pop
in
loopne
mov
popf
shl
and
sbb
aaa
in
push
in
cs
sub
mov
mov
mov
shlb
cli
mov
mov
sbb
sahf
push
std
and
inc
repnz
inc
cmpsb
xchg
and
cmc
sbb
sub
mov
sahf
mov
rolb
inc
addr16
xchg
add
rcrl
insl
and
sti
into
dec
xor
popa
in
mov
mov
nop
fldl
mov
movsl
add
lcall
mov
jo
popf
mov
add
or
adc
adc
xchg
fildl
nop
push
iret
adc
test
shll
sbb
inc
add
cmp
test
into
or
imul
fwait
clc
addr16
jne
sbb
or
adc
add
dec
lcall
hlt
pop
jo
adc
fbld
xchg
xchg
dec
insl
std
addb
movsl
sbb
pop
out
mov
insb
sbb
inc
dec
fadds
fimuls
orl
push
dec
stos
inc
inc
and
adc
xor
fsubs
pusha
mov
test
dec
fildll
and
call
outsb
pop
js
xchg
mov
add
cmp
cs
test
add
stos
jo
in
mov
mov
push
test
and
pushf
add
cmp
scas
cmpsl
inc
nop
subl
icebp
int3
mov
xchg
pop
psubsw
push
loop
sub
insb
es
inc
mov
clc
fdivr
lock
stc
add
add
mov
cmpsb
and
mov
pop
push
jp
out
cs
push
test
cmpsb
lcall
ja,pt
and
or
lret
sbb
aad
ja
js
and
icebp
cmc
mov
pop
outsb
mov
dec
add
mov
sub
push
mov
adc
jno
cs
subb
iret
mov
jae
mov
push
test
sahf
jns
loopne
jbe
sbb
loope
jge
repnz
fists
call
add
push
push
fimuls
push
xor
jne
xchg
inc
mov
ret
mov
enter
mov
jecxz
inc
stc
leave
les
fcomps
cltd
sub
sub
scas
loopne
scas
sbb
pop
mov
inc
xor
mov
push
in
cwtl
mov
sarl
in
or
movsb
dec
dec
xchg
rorl
mov
inc
outsb
leave
push
jae
aaa
mov
xchg
loop
jb
cmp
jecxz
add
out
stc
sbb
ds
cmp
mov
ss
mov
mov
pop
xchg
jae
cmp
icebp
ja
push
ss
popf
xchg
mov
repz
imul
push
cmp
jo
mov
and
jae
ljmp
adc
or
fmuls
cmp
cmp
in
sbb
fs
push
and
mov
icebp
jns
stc
leave
out
daa
mov
jnp
in
jo
aad
cmc
push
cmp
aaa
cmp
popf
jmp
leave
ss
std
fisttpll
in
sub
inc
pop
cli
fld1
jnp
adc
or
test
cli
adc
xor
or
in
push
test
xor
or
das
out
imul
push
pop
sahf
mov
dec
and
jbe
inc
repz
pop
cs
cmp
cmp
push
hlt
jo
lds
jb
shrl
jmp
outsb
movsl
xor
push
repnz
pop
mov
jne
lods
scas
push
adc
sub
pop
pusha
test
jle
xor
and
rclb
mov
nop
sbb
fdivrs
nop
faddl
jecxz
mov
push
add
cmp
cwtl
js
pop
int3
mov
ds
inc
jle
pop
clc
and
test
push
int3
inc
int
es
jae
xchg
in
cmp
and
rorl
shll
push
fidivrl
rorb
pop
ja
addr16
push
cmpsb
jmp
xchg
mov
int3
cmp
push
movsl
into
test
outsb
imul
lea
fcmovne
adc
jl
repnz
add
loop
rclb
imull
cwtl
sahf
imul
sub
inc
mov
daa
jb
dec
jmp
fiadds
lea
add
jmp
mov
jge
mov
mov
clc
push
cs
mov
fadd
movsb
sbb
mov
jp
fmuls
dec
lret
or
sbb
rolb
push
adc
mov
loop
xor
popf
push
dec
dec
mov
push
jecxz
push
gs
pop
mov
cmc
xorl
icebp
fidivl
cmp
stc
inc
stc
or
loop
loope
in
lret
test
and
rcrl
out
les
ret
hlt
xchg
xchg
mov
push
std
xlat
cmp
mov
push
mov
mov
je
adc
xchg
cmp
movsl
fmull
int3
xor
daa
aad
cli
inc
dec
and
imul
push
dec
xorb
jmp
inc
scas
movsl
shr
icebp
stos
pop
adc
sub
dec
add
sub
sbb
xchg
mov
ss
inc
mov
js
in
lret
xchg
ss
add
lret
push
jge
fs
dec
addb
rorb
enter
jl
push
test
in
or
add
push
lds
lods
sti
imul
idiv
jae
and
lock
ja
add
testl
ss
aam
popf
idivb
icebp
and
xor
push
mov
stos
xor
out
fwait
imul
and
lcall
adc
fdivrl
cmp
push
sub
sub
cmp
fcmovnu
mov
jp
mov
js
mov
push
mov
mov
out
mov
sbbb
mov
xor
mov
or
ficompl
pop
push
and
orl
fmull
fnstcw
loop
pop
popa
shl
mov
mov
aad
imul
sbb
insl
fnstenv
push
outsb
orb
jmp
nop
lods
fnstenv
jle
sbb
mov
sbb
sub
fistpll
mov
aad
shl
and
loop
lock
cmp
jmp
dec
cmpsl
or
test
pop
hlt
xlat
sub
push
popa
aas
pop
sub
xchg
ljmp
dec
lods
push
adc
fldcw
xchg
lods
in
in
lods
inc
mov
movsb
xor
xor
xlat
test
add
ds
jg
jnp
add
jns
sub
mov
mov
das
sbb
out
xchg
sub
insl
add
int3
popa
and
stc
adc
jne
nop
aam
jl,pt
push
sbb
cmpsb
cmpsb
push
mov
push
movb
xor
mov
shl
mov
loope
sbb
push
cmp
in
mov
outsb
inc
adc
mov
das
and
adc
in
xchg
jne
std
pop
test
or
sbb
push
mov
mov
sub
pop
fidivrs
dec
push
mov
add
mov
imul
ljmp
adc
lock
add
es
or
rcll
push
inc
mov
sub
cwtl
loopne
or
mov
dec
pop
lock
push
ss
scas
insb
mov
decb
adc
outsb
inc
in
mov
scas
test
mov
sbb
arpl
enter
in
jle
xorb
in
mov
rep
aas
cltd
pop
pop
ds
jg
xchg
es
shlb
je
int
xchg
subl
jno
ds
repz
jmp
dec
mov
push
aam
std
mov
xor
outsl
scas
sahf
lods
int3
dec
dec
loop
icebp
loope
shll
and
stos
ja
pushf
adc
dec
mov
mov
fdivrl
lret
and
outsl
rclb
mov
mov
out
ja
xor
cmpsb
cmpsb
pop
enter
push
push
fcmovb
and
insl
test
mov
mov
mov
push
shl
test
movsb
sbb
mov
je
dec
inc
andb
js
xor
pop
shl
aad
adc
shlb
fisttps
mov
out
inc
xchg
dec
mov
out
and
jae
mov
out
mov
and
movsl
xor
notl
adc
or
test
repz
rcr
into
xchg
mov
push
das
jbe
dec
incb
ret
mov
xchg
and
mov
ss
arpl
inc
or
pop
test
hlt
enter
mov
mov
lods
int3
jecxz
push
jp
add
pop
insl
pop
cmp
into
ljmp
sub
xchg
inc
nop
inc
lcall
sahf
xor
push
push
repnz
xchg
jge
cmpsl
test
push
sbb
mov
jae
sub
bound
xchg
inc
in
push
add
stos
push
out
cld
push
push
sti
mov
mov
and
cmp
addb
lahf
mov
sub
mov
mov
mov
jb
in
add
inc
xor
fadds
or
rcl
or
xchg
test
pushf
repnz
cld
jns
ret
shlb
and
cmp
cmp
jl
xlat
push
sbb
rorb
or
push
mov
in
rorl
mov
adc
jbe
icebp
int3
add
mov
jae
sti
scas
icebp
push
dec
and
ss
gs
lods
jecxz
sbb
mov
and
cltd
push
nop
test
and
xchg
xchg
iret
push
xor
sbb
mov
jno
aaa
ljmp
pop
fsubs
jge
sub
mov
je
and
fwait
imul
shlb
dec
sub
dec
lcall
in
fsubrl
mov
sarb
lahf
adc
iret
push
jns
push
xchg
xor
bound
jnp
int
cli
dec
test
or
lock
test
mov
push
outsb
push
int3
nop
outsl
pop
xchg
fmul
rolb
movsl
sarl
mov
jg
shl
daa
orps
in
sbb
jns
inc
dec
jns
out
sbb
dec
xor
push
sbb
test
inc
cs
dec
jl
ss
sub
cmp
add
pop
cmc
mov
lret
cmpsl
bound
aaa
mov
sbb
fldt
mov
jne
sbb
shrl
mov
sub
cs
mov
lcall
cmpsb
sbb
xchg
test
mov
sbb
mov
jbe
rcll
lods
addr16
mov
das
inc
aaa
roll
mov
imul
mov
jae
fidivrs
jl
int3
mov
aas
les
xor
pop
push
test
fnstsw
iret
aad
push
insl
jle
add
add
or
fiadds
ljmp
jle
adc
xchg
and
std
xchg
and
aam
push
add
pop
push
mov
subb
fbstp
sahf
rclb
jb
jg
mov
nop
jle
pop
dec
or
jae
xor
mov
orb
xlat
stc
push
test
push
push
push
push
sub
clc
xor
nop
adc
mov
inc
cmc
pop
and
add
je
out
aam
inc
imul
nop
cmpl
lret
sbb
cli
js
inc
or
repz
sub
rcl
mov
xchg
fisubrs
fildll
shlb
jp
pop
cmpsl
stos
or
fisttps
mov
mov
inc
jge
nop
mov
in
push
adc
inc
or
rcll
lcall
xchg
pop
add
es
push
imul
fisttpll
fdivl
popf
push
jnp
scas
sbb
lods
fstps
stos
adc
xorb
loop
aas
idivb
mov
movsl
cltd
inc
lods
test
into
or
rcl
outsl
and
mov
mov
out
sar
push
out
jle
stc
rorb
mov
inc
fs
out
std
dec
pop
jl
test
fdivrs
sbb
mov
ret
mov
or
pop
cltd
ret
push
mov
sarb
imul
jp
cmc
push
pusha
fwait
insb
ljmp
sub
sub
dec
jecxz
xor
xor
xchg
jo
ja
in
mov
push
xchg
repnz
rclb
cmp
bound
lea
and
addb
scas
push
popf
sbb
push
aam
sub
test
inc
addb
test
fwait
stos
cmp
add
loopne
mov
lds
xor
push
test
pusha
push
xchg
in
aaa
fstl
imul
inc
xchg
stc
imul
xor
mov
pop
imul
and
movsl
jbe
stos
insb
mov
or
fiadds
inc
call
mov
push
cltd
and
xor
insl
data16
dec
decb
mov
ret
rcrb
out
loop
icebp
clts
cmpl
test
inc
inc
jecxz
mov
hlt
clc
aam
adc
scas
push
jp
sub
push
shrb
mov
rcrb
mov
idivl
mov
jp
pushf
fsubrs
pop
fiaddl
test
sub
fwait
int
mov
xchg
lea
loop
push
rcr
orl
imul
or
data16
orb
repz
xor
mov
adc
imul
psrlw
or
and
or
mov
jo
mov
xchg
in
js
popa
adc
int3
push
dec
jl
movsl
mov
dec
inc
jns
neg
push
std
and
mov
xor
icebp
mov
jl
sub
mov
jae
shr
mov
jg
outsb
int3
ret
das
rcr
push
sbb
les
sub
fs
in
pop
sub
and
pop
test
xor
dec
popf
pop
cmp
daa
adc
fisttps
pop
outsl
mov
pop
fwait
or
ficompl
iret
cmp
shrl
fldcw
dec
lcall
pop
in
pop
dec
xchg
cmp
adc
adc
js
int
ss
jbe
dec
shll
test
ret
ja
bound
imulb
push
cmp
aam
ja
mov
push
cmp
add
out
shrl
xlat
icebp
adc
ljmp
iret
mov
dec
lods
ds
dec
lds
lods
fs
adc
addr16
inc
lods
jo
mov
or
aas
jecxz
xorl
push
lahf
test
scas
lods
leave
pop
xor
xchg
mov
and
mov
popf
fnstsw
dec
popa
lcall
sbb
mov
lcall
mov
push
mov
lods
mov
sti
adc
mov
mov
shll
dec
push
cltd
mov
xchg
jp
xchg
cmp
jl
push
add
fnstcw
mulb
sub
inc
mov
clc
xor
or
outsb
lock
stc
gs
xchg
and
ja
sbb
repz
bound
lcall
std
icebp
or
lret
adc
fnstsw
aaa
test
adc
push
into
insb
xorb
fidivs
xchg
adc
stc
je
stos
jnp
xor
sub
add
adc
loopne
dec
faddp
mov
leave
mov
lea
imul
lock
je
sbb
nop
test
orb
mov
mov
fimuls
mov
push
adcl
xchg
or
fs
test
sbb
or
ss
loop
enter
jle
sub
jne
jp
pop
xchg
mov
mov
xchg
cmp
insb
lock
movsb
dec
aad
cmp
test
sub
add
aas
cmp
inc
cmp
pop
push
jmp
ljmp
or
shr
js
and
cmp
cmp
loope
cmp
cli
or
xchg
imul
lahf
addb
out
in
lods
stc
push
mov
mov
int3
test
add
and
mov
add
and
jo
repz
push
and
aam
into
jns
or
int
xchg
mov
cmp
mov
sbb
sub
mov
xchg
cld
pop
pop
add
push
mov
inc
mov
bound
cmpsb
pop
inc
sbb
mov
scas
fs
cmc
mov
add
andl
fwait
jb
stc
lret
pop
and
fs
mov
push
xor
mov
insl
jle
add
shll
scas
mov
cmpsl
mov
movsb
je
inc
insb
and
jne
adc
movsl
and
sbb
cld
dec
xor
pop
jp
mov
in
ljmp
mov
or
adc
aaa
and
xchg
movsb
data16
popf
mov
pop
imul
cmp
ret
decl
aad
clc
jl
sub
pop
and
add
fistpll
fstpt
pusha
in
fimull
push
dec
adc
pop
xchg
add
hlt
jge
idivb
out
pushf
std
sbb
add
movsb
and
std
lret
aam
xor
or
lds
jnp
daa
and
movsb
dec
pop
cltd
dec
shr
outsl
out
sbb
xchg
jle
mov
sub
or
xchg
add
sbb
add
inc
mov
adc
dec
or
rcr
lods
inc
inc
dec
fsts
inc
lret
adc
pop
lret
add
popl
jmp
cmp
sub
fsubrp
push
sbb
mov
pop
jp
mov
mov
push
aaa
pop
fildll
mov
push
decl
in
sbb
xchg
xlat
sbbl
leave
inc
loop
ljmp
mov
push
sti
mov
movsb
scas
pop
inc
sub
pushf
stos
mov
sbb
popf
test
movsb
xor
outsl
lahf
fstps
sub
mov
push
jb
dec
adc
mov
pop
push
in
dec
lods
xchg
push
ss
xlat
and
xchg
into
repz
sahf
cmpsl
add
popa
out
add
lock
xchg
aam
or
jp
dec
push
int
mov
jns
jbe
pop
in
pop
inc
stc
jnp
pushf
popa
adc
and
sbb
sbb
inc
bt
int
clc
mov
icebp
and
stos
gs
ret
cld
add
or
aaa
cs
add
bound
pop
xor
push
or
cli
push
in
into
xchg
sbb
cmp
sti
add
fidivrs
push
fistpll
xchg
aam
inc
push
jp
jp
cmp
aam
stos
ret
shr
dec
or
mov
sub
jmp
cwtl
mov
dec
sub
fidivs
in
es
inc
xchg
aas
xchg
sbb
js
push
mov
inc
or
inc
inc
xor
lods
stc
jmp
push
pop
daa
fst
jmp
mov
sarl
fs
iret
jae
mov
adc
cmpsl
leave
mov
sub
and
jne
adc
add
adc
repz
nop
iret
cmp
std
mov
sarl
jbe
in
out
nop
fdivr
div
je
mov
jno
mov
cmp
cltd
or
mov
push
xor
seto
out
int3
addr16
ret
or
jl
out
push
movsl
repnz
ljmp
jl
stos
dec
mov
cmpsb
adcl
fisttps
push
sub
lcall
push
xor
push
inc
lea
push
out
arpl
sahf
cmpsl
in
mov
popf
xchg
or
out
cmp
mov
adc
lahf
jmp
aaa
add
jmp
imul
sahf
int3
inc
mov
aam
repz
dec
cltd
aam
mov
shlb
les
mov
clc
divb
jl
or
adc
pop
cmp
inc
dec
inc
es
movsb
int
inc
pop
cmp
mov
mov
jle
sahf
push
mov
xchg
cmp
inc
add
mov
adc
jle
roll
gs
in
add
pop
data16
ficompl
mov
stos
test
sbb
out
jmp
enter
popf
push
mov
jne
xchg
dec
inc
jl
pop
jl
xor
pop
les
popa
jae
aam
sbb
aad
vmaxps
xchg
or
sbb
loop
stos
dec
aas
lods
cmp
mov
mov
roll
jle
sbb
iret
cld
bound
and
loop
je
mov
sub
andl
add
mov
pop
insb
fldcw
xchg
mov
sbb
scas
dec
inc
push
inc
add
jb
pop
scas
mov
sub
outsl
les
cmp
cmc
cmp
dec
cld
xchg
test
imul
aaa
pop
les
inc
arpl
imul
sbb
out
sarl
add
mov
sarl
inc
and
sahf
xchg
inc
imul
and
movsb
lret
daa
bswap
ficoml
movsl
push
mov
mov
or
xor
sbb
fisttpl
jnp
addr16
popf
adc
movsb
jmp
call
cli
xchg
in
jne
lock
sbbb
adc
pop
and
es
stos
pop
xchg
adc
mov
faddl
mov
imul
mov
arpl
inc
lods
add
insb
and
hlt
push
fisubrs
stos
or
faddp
inc
pop
movsl
mov
jl
push
dec
lret
pop
clc
bound
mov
jb
inc
xor
adcb
lea
sub
push
mov
add
and
push
and
push
push
cmp
xlat
push
inc
gs
push
movsb
mov
dec
xor
push
push
lods
pop
insl
iret
lcall
xor
or
fistpl
mov
call
mov
adcl
mov
add
data16
sbb
xor
cltd
jnp
insb
inc
sub
xor
pop
repz
pop
pop
cwtl
rcrl
popa
pop
pushf
push
pop
jo
mov
adc
aad
dec
ss
jp
jns
mov
add
addb
xchg
cmpsl
cmpsl
inc
notl
inc
ret
push
inc
or
mov
in
pusha
ljmp
jb
inc
jae
mov
fstpl
sbb
test
cmp
pop
inc
add
nop
pop
aad
add
inc
inc
arpl
pushf
jns
outsb
out
sbb
std
inc
sbb
adc
sarb
andb
repz
outsb
cld
add
mov
or
lds
mov
imul
xor
xchg
or
fnstenv
mov
frstor
sub
xchg
inc
outsl
pop
fsubrp
add
and
inc
mov
jge
aad
mov
test
shrl
aaa
add
arpl
mov
shll
pushf
test
push
cmp
push
mov
and
xchg
outsb
js
push
adc
xor
mov
sbb
iret
xlat
xchg
cmp
fisttps
cmpsb
sub
loop
push
and
adc
pusha
push
in
dec
mov
into
xor
jle
push
in
xor
xchg
andl
or
std
or
pop
insl
xchg
adc
jl
inc
repnz
stc
dec
or
lods
pop
nop
fcoml
test
les
adc
pop
xchg
lock
mov
mov
cli
ss
ficoml
mov
inc
stc
sahf
lock
imul
push
push
add
mov
ljmp
cmp
popa
stc
repz
push
ds
cmp
push
mov
sti
mov
push
jns
sbb
xchg
inc
jp
cwtl
jg
dec
dec
sbb
gs
int
lret
cltd
movb
dec
mov
sbb
in
and
ljmp
jb
mov
inc
mov
jle
in
orl
mov
imul
mov
nop
idivl
inc
bound
sbb
pop
dec
mov
mov
in
fcoms
fcmovb
fdivl
fisttpll
xor
or
outsl
adc
lahf
addl
jne
insb
xchg
inc
rcrl
gs
mov
lds
xor
pop
xchg
les
xchg
iret
jecxz
jb
jge
in
cmp
jnp
dec
adc
and
push
test
xor
out
fldl
jmp
movsl
loopne
push
pusha
mov
gs
or
aaa
adcb
sbb
es
clc
mov
arpl
icebp
xchg
in
add
mov
mov
xchg
adc
sub
mov
movsb
add
dec
btc
leave
mov
sbb
cltd
sbb
mull
xor
or
es
test
cmp
mov
arpl
out
fstpt
cmc
mov
popa
fildl
rol
sbb
and
adc
clc
lea
lret
mov
aam
inc
std
xchg
cmc
mov
jo
push
adc
pushf
loop
enter
lcall
in
aam
int3
add
in
xor
lods
pmulhuw
rclb
pop
fdivl
jmp
movsb
push
pop
push
scas
bound
cmp
pop
sub
movb
add
inc
out
pop
fbld
fsubl
outsb
sub
inc
scas
sbb
inc
int
idiv
cs
outsb
pop
loope
dec
pop
mov
or
ljmp
into
fstl
xchg
or
fdivrl
std
jns
insl
int3
mov
ss
xchg
xchg
adc
cmp
jbe
dec
test
ss
sub
fistpll
fstps
inc
add
sub
das
jg
fcoml
inc
jno
repnz
adc
push
jge
std
or
adc
jno
popa
fnstsw
mov
popf
test
jns
out
push
and
dec
inc
iret
mov
pop
icebp
sbb
mov
push
adc
rorb
jmp
stc
jecxz
sub
aaa
repz
scas
fdivrl
daa
mull
add
inc
jbe
xor
mov
mov
push
imul
repnz
cltd
cmpsl
mov
inc
outsl
out
push
insl
popa
or
mov
dec
jecxz
rcr
adc
or
fbld
and
cmp
pop
sub
jp
sub
jg
gs
imul
mov
insb
push
mov
mov
gs
or
out
adc
inc
wrmsr
imul
and
dec
ljmp
test
jmp
stos
shll
icebp
jbe
std
pusha
cmpsb
add
iret
js
mov
mov
and
lds
jmp
outsb
sub
mov
lcall
push
inc
lret
ja
and
adc
adcb
iret
jl
sub
ss
adc
lret
ja
in
xchg
shll
lock
mov
mov
imul
aad
sbb
adc
push
pop
int3
aas
cli
aas
push
and
fidivrl
daa
vminss
cmpsb
fcoms
sub
iret
push
jno
or
sbb
push
icebp
jmp
jg
adc
jns
xor
add
les
dec
repz
dec
cmp
lret
fwait
mov
xchg
add
push
shrb
int
rorl
movsb
pop
aad
popw
lea
fsubrp
les
sahf
aaa
or
push
push
ret
and
add
movl
rcr
pshufw
and
jmp
data16
mov
lcall
add
xchg
outsl
jae
andb
popa
add
fdivl
mov
and
jge
lret
pop
cmp
test
xor
or
pushf
lds
ds
pop
jne
push
lret
push
cli
popf
popf
std
adc
decb
adc
movsb
fdivrl
insl
pusha
stc
push
push
add
pop
in
sub
lea
cli
movsl
out
repnz
or
mov
in
inc
add
ret
cmp
iret
sbb
xor
aaa
push
jmp
sbb
test
imul
sbb
bound
cli
loop
jge
fsubrl
mull
lret
outsl
cmc
stos
push
in
push
push
out
iret
or
out
adc
xchg
sub
imul
out
ficomps
sbb
repnz
add
cli
xor
lock
imul
and
fldz
dec
mov
adc
or
xchg
adc
out
push
jbe
xor
pop
lcall
push
push
xchg
mov
jmp
addr16
out
add
sbb
nop
fldenv
sub
jl
das
mov
xchg
push
jne
les
dec
cli
dec
add
inc
lods
testl
or
xchg
and
xchg
jnp
xor
test
add
push
shr
imul
daa
roll
cmp
dec
sti
cmc
sbb
pusha
cmp
cld
insb
add
mov
lock
or
hlt
ss
mov
push
add
les
in
dec
fdivrl
push
fcoms
insb
fs
jmp
cmp
mov
sbb
shlb
or
sub
push
repz
ljmp
outsl
popa
jno
jp
testl
sbb
mov
repnz
xor
add
call
fwait
pop
testb
push
mov
push
mov
rcll
out
fldl
lock
sbb
decl
insl
subb
lahf
rclb
inc
dec
jae
or
pop
out
mov
jle
arpl
cmp
mov
and
xchg
xor
jb
mov
int3
xor
icebp
xor
mov
dec
fdivr
scas
pop
push
xchg
out
cmp
sub
fsubl
sub
mov
and
push
iret
fwait
inc
adc
in
cmpsb
mov
cld
push
push
mov
xor
inc
jns
push
outsb
pop
imul
jno
mov
addr16
aad
xlat
add
and
sub
cs
xchg
adc
arpl
mov
inc
jnp
daa
push
jo
cmp
cmpb
push
push
jbe
mov
ffreep
push
mov
notl
loope
cmp
aas
or
jns
mov
out
orb
inc
cwtl
push
mov
mov
jp
mov
hlt
subb
cmpsb
xchg
test
pop
test
fs
and
ds
sbb
ja
mov
pushf
loopne
mov
es
cmc
nop
bound
fsubr
pusha
pop
push
lahf
imul
test
lahf
xchg
mov
mov
fcoml
daa
mov
xchg
dec
cmpsl
lock
inc
mov
pusha
loope
incb
rol
mov
add
mov
jge
add
incl
fidivrl
lret
jp
lds
movsl
loope
sub
mov
mov
cmp
scas
rcrl
ficoml
mov
ret
mov
mov
popa
fcmovb
mov
fiadds
rol
lret
add
fnsave
add
mov
add
add
push
adc
mov
adc
xor
xchg
xor
fcmove
into
nop
mov
sbb
das
mov
orl
shll
adc
cmp
dec
movsb
mov
push
loopne
mov
and
push
pop
add
add
movsb
cld
jge
fisubl
in
pop
daa
or
jbe
add
lret
aas
cmp
push
outsb
into
push
mov
pop
mov
cmc
xchg
in
rcl
xor
dec
cmp
add
ffree
xor
mov
mov
jb
push
sub
lea
sub
stos
rclb
jbe
mov
mov
cmc
or
lock
mov
xchg
fs
cmp
xor
call
jge
jo
js
mov
push
xchg
in
incl
mov
movl
jne
inc
fidivl
sub
xchg
aaa
gs
ja
cltd
out
mov
or
ja
mov
pop
mov
aas
and
lods
mov
cli
adc
push
pop
incb
jecxz
jne
aam
lret
dec
jbe
add
or
pop
cld
js
cs
cli
test
addr16
adc
or
cltd
xchg
adc
es
je
cli
mov
xor
mov
pop
addr16
lods
and
jns
fistpl
mov
pop
cmpl
out
cmpsl
cld
jecxz
dec
dec
add
daa
cwtl
ljmp
xchg
aaa
fsub
or
jno
push
cvtps2pd
movb
inc
sbb
inc
jnp
pusha
jns
repz
mov
mov
push
adc
fs
repz
pop
pop
outsb
push
data16
fcoms
dec
mov
ds
or
adc
test
sub
cmovg
fisttpll
mov
add
dec
inc
popa
test
loop
sahf
adc
in
clc
repz
lods
lods
addr16
sahf
inc
dec
push
sub
or
or
out
mov
mov
xchg
cmpsl
mov
cmpsl
and
sbb
inc
jle
mov
xchg
xchg
adc
outsb
pop
frstor
js
mov
mov
xlat
mov
adc
dec
xchg
shrb
outsb
sti
dec
xchg
jmp
daa
sbb
popa
inc
into
push
sub
cmpsl
or
sbb
lahf
cli
call
pushf
inc
add
xchg
jmp
push
imul
dec
mov
les
stc
aad
mov
in
or
or
popa
mov
lods
cli
imul
sbb
mov
ror
cmc
pop
lcall
fstpt
inc
icebp
inc
loopne
adc
sbb
cmp
xor
insl
lods
cmp
cmp
xlat
adc
popl
add
mov
sbb
sbb
loopne
pop
xlat
andl
sar
inc
rclb
sbb
popa
sub
out
in
mov
pop
aas
lcall
fisubl
mov
or
mov
stos
xor
sub
jmp
xchg
add
fstps
add
push
jg
imul
and
stc
pusha
fldt
adc
outsb
lret
cmp
nop
das
out
subl
cmp
rolb
inc
mov
lock
cwtl
lods
or
in
mov
fwait
pushf
ret
jg
sbb
fistl
mov
pop
mov
gs
mov
lret
shl
mov
lea
inc
mov
fs
mov
push
mov
repnz
pop
nop
ja
sar
out
or
mov
rorb
sahf
call
aas
or
rolb
mov
mov
pop
sbb
cmp
inc
int
sub
jge
addb
ja
dec
lcall
inc
daa
jne
lods
jp
add
mov
test
pop
inc
lcall
mov
jns
insb
ds
mov
jecxz
bound
mov
jne
sarl
aad
out
xor
sarb
cs
call
fcoms
inc
mov
lock
pop
cmpsb
push
pop
out
cli
int3
inc
mov
sti
xor
rcl
push
xor
sub
das
ja
dec
jae
movups
mov
xor
fsubp
jge
ljmp
mov
xchg
push
and
call
nop
mov
dec
xor
and
int
cs
push
arpl
cmp
add
imul
cmp
insl
into
or
xor
scas
push
jmp
cli
ljmp
cmpsb
add
insl
hlt
or
sub
fs
negb
mov
dec
add
lea
inc
adc
mov
ret
fdivs
sbb
dec
clc
add
add
push
pop
push
mov
mov
mov
and
push
ror
int
push
lds
adc
xor
inc
mov
stos
xor
mov
mov
js
into
outsb
mov
ficoms
xor
xbegin
cmpb
enter
int
jmp
or
mov
out
or
and
sbb
and
cltd
sarb
rcrl
jne
add
shll
push
out
push
mov
dec
mov
jmp
in
js
mov
in
pop
inc
or
cmp
xchg
pop
faddl
add
ret
stos
or
shlb
xor
lahf
lock
mov
adc
in
dec
dec
sub
faddl
jns
pop
ljmp
mov
inc
inc
into
inc
call
jp
sar
lret
pop
mov
arpl
lods
push
mov
xor
shr
mov
sub
cmp
js
std
popf
mov
add
sbb
mov
lods
outsb
adc
in
xchg
clc
cmp
mov
sbb
in
or
jb
and
outsb
sbb
push
lcall
ss
or
jl
cs
sbb
adc
pushf
movsl
neg
scas
arpl
xor
mov
mov
mov
call
addr16
add
push
mov
cmp
and
stc
sub
fdiv
sbb
es
lock
out
mov
rcr
lcall
inc
sub
fwait
aas
sbb
iret
jecxz
add
mov
xchg
lret
add
into
push
mov
cmpsb
cld
dec
pushf
lcall
xchg
fcomps
sub
rorl
dec
sub
jg
add
fisubl
lret
push
push
pop
movhps
loopne
xchg
mov
xor
jmp
jbe
sub
cmp
push
jnp
out
shlb
stos
lcall
pop
push
in
sbb
ds
loopne
rol
lods
jmp
cmp
int3
repnz
js
in
add
pop
outsl
and
adc
lcall
jnp
scas
add
pushf
insb
sbb
jg
movsl
pop
outsb
mov
mov
push
dec
adc
insl
xor
and
inc
outsb
test
xor
mov
mov
sub
push
xor
stos
mov
or
sbb
xchg
repz
dec
enter
mov
mov
cmp
xchg
das
arpl
mov
daa
inc
cmp
ja
hlt
fsubrs
inc
sbb
je
or
stos
fnstcw
jmp
loopne
test
in
mov
in
enter
out
jmp
sub
and
pusha
xlat
lds
test
call
xchg
cwtl
sub
icebp
mov
test
sbb
pop
pop
out
inc
dec
xchg
add
loopne
jno
pop
jno
mov
stc
icebp
xchg
aad
in
cmpsb
sbb
stos
mov
loop
and
mov
mov
xchg
daa
dec
xchg
stos
inc
lods
adc
lret
out
add
push
imul
insb
mov
pushf
sbb
sahf
pop
insb
adc
mov
pop
inc
mov
xor
in
bound
jle
mov
add
repz
sub
int3
inc
or
cwtl
mov
fsub
jno
cmpsb
mov
out
pop
outsl
arpl
cmp
cmc
adc
sbb
arpl
cmp
xlat
js
repz
mov
cltd
out
pop
fsts
pop
push
test
mov
mov
cmc
pop
xchg
sahf
out
adc
inc
pop
test
pop
and
inc
dec
add
xchg
mov
mov
jb
movsl
push
sub
filds
inc
mov
mov
jnp
inc
jb
mov
dec
adc
mov
idivl
xchg
dec
mov
mov
mov
les
sarb
adc
jns
xor
daa
xchg
movsl
jbe
jns
jle
xchg
ss
test
test
sub
cmp
or
imul
in
add
rol
rolb
mov
mov
mov
add
leave
mov
mov
int
lods
add
fs
cltd
or
shrd
js
push
pop
cmp
jb
scas
xlat
in
xchg
xor
mov
pop
call
jno
test
jl
mov
xchg
and
fwait
arpl
and
add
push
mov
imul
loope
jo
pop
pandn
mov
or
idivl
sub
cltd
daa
pusha
cmc
mov
loopne
pop
inc
xchg
ljmp
mov
xchg
xchg
mov
std
lret
jne
fistpll
pop
in
mov
shll
jb
mov
mov
pusha
mov
mov
dec
or
fcompl
xor
sbb
rolb
cmp
jno
jle
pusha
pusha
xchg
dec
add
lahf
mov
ljmp
imul
fisubs
stos
stos
mov
hlt
hlt
or
out
pop
or
cwtl
xchg
sarb
call
mov
popf
leave
nop
mov
and
dec
js
in
jne
add
adc
daa
sub
push
das
aam
ljmp
rorb
and
sbb
jns
out
jo
iret
int3
sarl
bound
ret
xor
loopne
xchg
jne
inc
cmp
das
pop
movsb
out
xchg
jmp
sbb
adc
xchg
loopne
mov
pop
idivb
je
adc
js
cmp
jae
sbb
mov
push
scas
or
imul
adc
adc
jns
add
movb
dec
in
std
rcrl
ss
fbld
test
xchg
adc
mov
or
insl
adc
rcll
mov
pop
div
and
fistps
and
pop
push
add
mov
or
fisttpl
out
lods
out
jb,pt
leave
mov
fstps
jg
lds
cmp
pop
push
adc
sbb
jns
fiaddl
out
adc
movsw
and
loop
lahf
data16
ss
leave
jne
pop
sub
mov
fs
mov
cli
enter
push
inc
icebp
divl
loopne
nop
shrb
push
aaa
sbb
icebp
or
mov
sbb
mov
mov
mov
pop
in
into
orl
std
sub
mov
push
sbb
or
clc
data16
out
jnp
imul
jae
dec
and
xor
rcrl
mov
inc
popa
jmp
loopne
jge
aaa
mov
repz
arpl
adc
call
mov
pushf
jp
orb
push
cmpsb
cld
loopne
mov
icebp
adc
fidivrs
pop
sbb
xchg
and
stc
jb
rol
je
xlat
cmp
cmp
cmp
je
dec
adc
pushf
mov
xor
daa
mov
inc
outsl
cmpsl
mov
xchg
rcl
inc
sbb
jbe
imul
jmp
pop
xor
hlt
cli
leave
adc
aad
int
mov
mov
leave
mov
or
aam
nop
adc
add
jo
dec
stos
insb
loopne
mov
pop
out
fwait
sbb
push
jb
pop
int3
movsb
mov
test
pop
lahf
sti
ret
or
xchg
aas
mov
add
pop
in
mov
jnp
mov
sbb
cli
cwtl
inc
notl
mov
cmp
xorb
dec
cmp
mov
aaa
testl
mov
push
pop
jo
gs
mov
pop
pop
cli
dec
adc
push
aam
ss
pop
sbb
push
movsl
xchg
cmp
out
cltd
mov
mov
mov
scas
mov
ret
mov
cs
cltd
dec
pop
lock
and
fistl
std
outsb
out
clc
mov
inc
xchg
or
dec
push
xchg
mov
data16
sub
adc
movsl
dec
xchg
bound
inc
adcl
adc
popf
or
orl
or
test
std
jg
lret
les
cmpsl
pop
test
xchg
sub
sahf
ljmp
imul
xchg
mov
test
xchg
shlb
idiv
pusha
jle
xchg
int3
add
pop
mov
and
xchg
mov
cmpsl
and
inc
xor
outsl
and
pop
push
xchg
and
fdivrp
jo
lahf
cmp
xor
repnz
mov
hlt
cmp
or
rorb
mov
jl
outsl
push
hlt
verr
adc
pushf
xor
in
pop
lahf
jae
fs
leave
lret
add
pushl
cmp
push
inc
mov
inc
mov
inc
add
mov
aam
jl
shrl
sbb
lods
fisubl
or
sbb
into
sub
aas
inc
add
sbb
das
enter
int
jmp
sub
and
sbb
jno
std
mov
xor
mov
push
sbb
inc
xchg
add
xchg
mov
lret
push
insl
out
or
pop
and
pop
sub
xor
inc
int3
clc
loope
xchg
daa
jecxz
add
jbe
popf
push
mov
mov
jnp
adc
mov
shl
sub
and
fstpl
js
insb
push
pusha
bound
mov
push
stos
cmpsb
mov
lahf
sbb
jg
dec
shr
sub
lods
dec
sbb
ja
sub
dec
std
xor
cmp
mov
hlt
mov
test
mov
das
aas
pop
icebp
and
les
pavgw
sbb
mov
mov
scas
xchg
ja
pop
xor
jns
int3
mov
xor
sub
add
mov
xchg
xchg
loopne
lods
loopne
xchg
js
ja
and
cs
xchg
adc
push
xor
jns
in
lds
mov
test
aaa
lods
xbegin
mov
cmc
sbb
mov
push
stos
outsl
dec
push
mov
imul
sti
mov
xchg
les
xchg
xchg
out
data16
cld
jle
mov
pop
push
mov
mov
xchg
addb
xchg
pusha
mov
dec
sub
push
push
xor
cmp
int3
mov
test
cmp
mov
jmp
mov
ljmp
push
cltd
mov
cs
test
stc
jg
adc
roll
jl
pop
and
jno
add
and
rolb
dec
ja
mov
scas
pop
fwait
and
inc
shlb
xor
pop
mov
in
inc
sub
jae
loop
mov
push
je
xchg
mov
lahf
inc
mov
stos
ret
mov
shr
and
les
cmp
aam
mov
out
rclb
pop
aam
mov
sbb
jo
dec
or
jg
ficompl
popf
jle
repz
je
mov
out
add
clc
int
inc
mov
cltd
pop
aad
lods
orl
push
xchg
cs
jo
and
sbb
mov
mov
fwait
ret
jg
jbe
inc
int
insb
dec
lock
xchg
sbb
xor
jne
jno
mov
pusha
insl
xor
push
jle
xchg
lret
test
test
test
lds
mov
mov
aaa
add
in
sub
ja,pt
push
push
jl
xchg
lret
sub
loop
outsb
in
mov
in
and
lcall
pusha
inc
jns
pop
ret
icebp
or
test
mov
push
add
les
inc
xchg
mov
lret
lcall
out
out
js
sbb
adc
mov
out
mov
add
add
jo
je
movsb
and
push
cmp
and
jmp
mov
jg
ljmp
stc
mov
stc
push
stc
xchg
test
jnp
sub
pop
or
test
sbb
inc
out
movsb
ret
data16
jp
sub
inc
popf
mov
dec
add
cmp
int
shll
mov
hlt
jb
test
ss
ds
inc
push
pop
mov
push
sbb
icebp
mov
and
adc
and
mov
dec
insl
jl
mov
jmp
adcb
scas
into
jne
sub
push
bound
xor
inc
push
and
or
mov
pop
pop
pop
mov
lcall
lahf
lods
test
incl
inc
dec
jecxz
push
mov
mov
xchg
cmpsl
xchg
pop
imul
cmp
or
je
cmp
add
stc
inc
cmp
xchg
jecxz
cmp
cmpxchg
loope
shr
jg
mov
imul
jecxz
push
pop
stos
in
push
cmpsb
sub
and
mov
fisubl
rclb
les
fisttpll
divps
xchg
fwait
divl
arpl
shlb
dec
test
dec
push
xor
subb
jb
xor
nop
push
or
mov
mov
mov
push
dec
js
xchg
std
push
sbb
movsl
aaa
jae
mov
mov
cmc
push
fistps
mov
jl
outsl
xchg
mov
xchg
and
das
lods
push
dec
mov
out
push
out
inc
mov
mov
xor
sub
jae
mov
mov
add
lret
lods
sbb
jo
push
mov
imul
dec
daa
mov
insb
push
fsub
imul
adc
sub
lods
push
cli
sbb
add
pop
shl
xlat
cmp
pop
inc
hlt
lret
test
out
stos
push
sub
imul
subb
and
xlat
imul
mov
sahf
mov
mov
sub
mov
jb
fdiv
pop
adc
push
inc
cmpsl
rcrl
movsl
and
mov
pop
adc
inc
push
mov
or
daa
bound
aam
mov
adc
dec
clc
sub
addr16
rol
push
test
repnz
pusha
or
clc
pop
ret
jp
dec
jl
in
pusha
mov
adc
int3
test
mov
pop
xor
lods
cmp
stos
dec
cli
and
fldenv
mov
jp
xor
out
fisubrl
test
xchg
mov
sub
fwait
sub
jb
pushf
jns
jl
pop
in
dec
adc
inc
icebp
das
insb
sbb
fistpll
fisubrs
pop
mov
cmp
dec
rcll
or
cmp
rorl
sbb
arpl
pop
ret
mov
ss
out
lock
adc
addb
test
adc
cmc
push
rorl
and
stos
dec
jge
jecxz
jbe
cmp
shlb
xor
stos
aad
pop
add
sarb
test
xor
arpl
fadds
mov
scas
push
flds
les
pop
mov
dec
push
test
add
adc
jb
mov
mov
xchg
cmp
aas
ljmp
rcll
push
rcrb
xchg
leave
std
xor
push
or
insl
clc
fnsave
cltd
push
inc
inc
dec
cmp
mov
mov
mov
out
pop
mov
push
leave
repz
lret
xor
cmp
mov
add
dec
cs
mov
push
pusha
pushf
inc
nopl
lds
cmp
add
test
push
dec
jbe
cwtl
xchg
aaa
repnz
xchg
iret
aaa
add
or
add
add
dec
ljmp
cmp
rcl
loope
clc
jb
jnp
loop
sub
fildl
test
stos
and
das
sti
dec
mov
ja
cltd
sbb
push
jmp
gs
mov
in
mov
adc
add
add
negl
loop
subb
jl
push
cmpsb
add
xchg
cmp
cltd
repz
xchg
jg
lcall
mov
push
mov
stos
lea
jns
mov
mov
sarb
cmp
push
fisttps
insl
dec
push
and
mov
push
fnstenv
incb
fs
lea
std
aaa
idiv
adc
mov
out
mov
pmullw
dec
cmpsb
mov
jbe
adcl
rorb
loope
in
push
or
sbb
lret
icebp
mov
pusha
mov
push
pop
jg
jo
test
or
scas
or
rorl
and
pushf
mov
pop
test
pushf
push
or
xor
and
cwtl
or
sbb
mov
mov
ljmp
aaa
int3
arpl
sbb
data16
outsb
jmp
lahf
mov
cmp
or
inc
or
add
fwait
adcb
and
cmpb
addr16
das
mov
inc
sbb
fsubs
jae
int
jno
cmp
cmp
jns
and
add
mov
aad
add
and
lods
mov
mov
insl
ss
int3
cmpsl
aas
inc
xorl
imul
add
lea
xlat
add
adc
lahf
add
addr16
dec
inc
test
add
xchg
pop
in
cmpsl
push
sbb
xor
sbb
and
mov
ret
cmp
out
mov
and
add
sbb
clc
fisttpl
mov
bound
sbb
pop
ret
loopne
and
cmpsb
dec
or
mov
mov
dec
cwtl
movsl
jmp
push
pop
subl
icebp
xor
shrb
sub
push
rorb
rcrl
js
mov
nop
mov
xchg
loope
jl
jo
xlat
leave
sub
mov
movsb
pop
pop
push
dec
and
dec
enter
enter
outsl
dec
mov
hlt
call
aam
inc
xchg
push
fistpll
cltd
add
pop
loopne
shll
inc
out
insb
xchg
jns
lret
adc
pop
jno
hlt
iret
cmpsb
fiaddl
fsubrl
fst
shlb
or
aam
sbb
jns
or
push
pop
out
dec
data16
aaa
xor
adc
xchg
std
dec
mov
lret
lcall
adc
mov
mov
inc
sahf
xchg
mov
or
ret
mov
and
mov
sbb
stos
xchg
call
xor
or
pop
imul
xchg
into
xchg
int3
ja
lret
rorb
or
out
outsl
sti
stc
push
scas
lcall
or
cmp
in
lock
jnp
push
jbe
jg
enter
jae
push
mov
sub
pop
popf
push
lahf
mov
or
jp
xor
notb
testb
push
adc
jae
das
xor
adcl
jle
cmp
adc
in
mov
pop
mov
adc
rcrl
orl
fisubl
bound
shrl
aad
js
inc
inc
repz
sbb
adc
pop
xor
jmp
insb
in
jle
popl
and
cmp
mov
out
lds
mov
mov
xchg
sbb
sbbb
sbb
xchg
movsb
inc
int3
push
and
adc
ret
fucomp
sub
push
mov
sbb
shlb
dec
data16
adc
test
sbb
mov
fwait
and
test
jnp
adc
fwait
std
jne
out
call
hlt
in
cmp
test
cmp
pop
lahf
ds
test
inc
jae
insb
movsb
movsb
cmp
xchg
and
push
push
pop
adc
add
or
insb
jl
call
xchg
cmp
mov
xor
ds
clc
inc
mov
cwtl
mov
jne
imul
jmp
rcr
cmp
jae
mov
push
xchg
sub
push
mov
push
enter
adc
jmp
incl
lods
mov
add
adc
adc
inc
or
mov
pop
arpl
arpl
inc
and
in
popf
mov
pop
pop
aad
pop
jb
jnp
insb
xor
ret
xchg
mov
lahf
xlat
xor
mov
cmpsl
hlt
stos
xchg
or
out
adcb
shrl
cmp
adc
das
out
jle
cli
in
xor
inc
inc
xor
adcl
leave
into
jnp
sbb
lods
push
inc
adc
pop
fistps
stc
stos
sub
sbb
cltd
ja
mov
fstl
daa
aad
outsl
inc
inc
fs
sbb
jmp
push
sahf
test
dec
add
push
mov
out
lods
int
inc
push
mov
cmpsb
and
dec
test
jecxz
sub
jl
pop
mov
lds
fisubl
inc
xor
lods
xchg
push
lcall
adc
xor
dec
add
fld
add
jp
call
stos
adc
dec
inc
outsb
and
jmp
jnp
sbb
and
pop
xor
xor
pop
dec
sub
hlt
cmpsb
adc
xchg
xchg
fcomp
sub
or
or
mov
lods
mov
sarb
xchg
pop
jns
into
sub
and
mov
pop
subl
scas
pop
or
inc
es
insb
mov
inc
es
and
jecxz
ret
repz
inc
pushl
cmc
mov
sub
push
outsl
mov
lahf
outsl
jge
rcll
mov
insb
inc
pop
and
inc
mov
xor
aaa
push
icebp
mov
add
pop
cmp
test
sti
nop
fnstenv
ret
cmp
xor
inc
adc
out
std
jle
xor
cwtl
or
xchg
lods
inc
enter
roll
sub
xchg
rclb
stos
jg
and
in
push
out
and
mov
retw
dec
mov
mov
cmp
add
inc
xorl
std
mov
inc
xor
jns
add
js
jmp
loop
and
out
xor
or
xchg
lods
push
aad
sbb
andl
rclb
dec
xlat
enter
outsb
or
subl
dec
aas
mov
nop
and
filds
lcall
test
sbbb
xor
insb
cmc
xor
push
add
push
sub
and
nop
insl
cmpsl
test
call
test
or
or
push
cs
push
icebp
mov
pop
cwtl
cmp
xchg
push
fbstp
dec
into
sub
mov
jb
std
and
inc
dec
and
rcrl
mov
push
sbb
xchg
xchg
into
and
bound
mov
adc
popa
and
mov
imul
fstl
js
mov
icebp
lods
jo
jle
push
mov
pushf
shl
sbb
shl
lea
popa
test
stc
ljmp
mov
cmpsl
sub
add
loope
add
and
aas
pop
in
jmp
push
mov
mov
pop
inc
adc
ljmp
mov
cmp
jae
std
andb
aam
xchg
lcall
inc
mov
dec
push
js
inc
pop
mov
mov
mov
mov
push
aad
sub
xchg
lods
jl
aaa
fs
pop
and
stos
mov
sub
fs
pushf
mov
sub
inc
add
repnz
in
cmp
mov
and
icebp
and
cmpsb
xor
mov
repz
cmp
je
xor
push
loope
mov
dec
das
push
cmc
inc
xlat
push
and
cmp
push
jne
enter
test
sbb
sub
or
aam
movsl
mov
push
sbb
loope
jo
dec
pop
pop
mov
dec
mov
sahf
sub
ret
ret
js
adc
mov
jae
adc
cli
jmp
aam
mov
imul
jmp
adc
aam
clc
xchg
mov
mov
mov
push
bswap
pop
ret
inc
xchg
mov
fdivl
gs
xor
add
int3
pushf
cmp
jb
jb
mov
rcrl
add
into
sub
sbb
sub
movsl
es
push
add
pop
movsl
int
enter
leave
mov
int
adc
inc
jne
aas
in
pop
mov
ficoml
movsb
push
cmp
out
fadds
add
sub
or
mov
lods
dec
add
push
aas
mov
shrl
push
or
shl
xor
inc
push
faddl
or
in
stos
pop
fwait
mov
lds
or
or
pusha
int
push
daa
jae
mov
repz
xorw
bound
daa
adc
addb
pop
mov
inc
fisubs
mov
mov
fcmovu
xor
icebp
add
aad
mov
cmc
cmp
ficomps
sub
inc
rorb
arpl
inc
adc
stc
inc
lcall
rorl
lods
popa
enter
ret
jb
addr16
xor
shlb
xchg
or
mul
adc
xor
jg
icebp
stos
jb
dec
fisubl
cld
ret
xchg
jp
fistl
lret
outsl
mov
sbb
push
cltd
enter
in
pop
repz
add
dec
sti
mov
mov
sbb
push
push
mov
xor
sti
dec
or
sbb
mov
and
mov
mov
int
fidivrs
cmp
ja
push
jbe
lret
lods
bound
or
cmpsl
fadd
add
or
dec
orl
stc
jp
pushf
fldcw
dec
jbe
mov
push
cld
dec
dec
push
jp
or
cmpsl
push
sti
in
pop
in
sbb
fdivl
adc
out
lods
push
jecxz
fidivl
cmpsb
xor
mov
lds
fidivl
sub
lahf
les
std
push
stc
insb
sbb
fisttpll
dec
fistpl
inc
leave
icebp
clc
fbstp
fnstsw
cmp
scas
mulb
mov
push
push
xlat
mov
add
mov
jmp
pop
fsubl
pop
pop
mov
sahf
push
inc
mov
ljmp
out
aas
jae
add
xor
xlat
xchg
xorl
sti
repnz
mov
test
rcr
pop
xor
test
cmc
outsl
mov
xchg
imul
jecxz
lcall
pop
pop
jl
inc
fadd
js
cmp
cmc
xor
xor
bound
int
or
add
pop
mov
jg
or
pop
dec
popl
jae
pusha
inc
jo
cmp
lods
ret
pop
data16
roll
xor
aaa
movsl
pop
pop
lcall
mov
jmp
lcall
fs
sbb
or
mov
out
jo
mov
jnp
jo
out
ds
cmp
call
fisubl
and
les
mov
inc
sti
rcrl
hlt
cwtl
fidivl
xor
pop
inc
inc
xor
gs
cli
add
mov
ja
cmp
andl
imul
dec
push
test
dec
adc
test
push
xchg
cmp
mov
stc
dec
adc
lods
mov
cmp
ja
sub
push
adc
or
cmc
and
mov
jb
mov
or
loope
add
sub
ja
ja
loop
inc
cli
cmp
or
jg
cmpsb
pop
fisttps
push
push
and
xor
mov
dec
add
orb
mov
aam
hlt
mov
jne
stos
popa
rolb
pop
dec
scas
push
xor
mov
das
icebp
push
cmp
or
dec
push
jns
cmp
xchg
or
add
sahf
lret
push
sahf
loope
xor
iret
adc
std
xchg
sub
xor
inc
aaa
add
cmp
ljmp
rol
cmp
and
push
jb
pop
cwtl
data16
sahf
jg
pushf
xor
rcl
push
outsl
stos
mov
daa
lods
xchg
adc
sti
ss
divl
or
xchg
and
or
iret
mov
and
ja
xchg
mov
sbbb
push
adc
cmp
je
mov
out
dec
mov
fdivrl
lods
sub
inc
js
iret
adc
lods
sahf
insb
mov
in
hlt
ret
adc
stos
movsl
adc
fsubrl
pushf
pop
mov
mov
loopne
push
cmpsl
push
push
inc
aad
pop
flds
cmpsb
testb
fnstsw
outsb
aaa
clc
or
pop
jecxz
stos
popa
rorb
iret
inc
mov
jnp
int
mov
adc
inc
cld
or
outsb
push
movl
xchg
int
or
test
cs
inc
int
dec
imul
lds
mov
inc
cmp
sbb
or
xchg
stc
sub
adc
lods
mov
adcb
incb
mov
mov
push
in
fnstcw
dec
sbb
cmp
and
dec
mov
dec
add
jge
lahf
repnz
cmp
cmpsb
sbb
xor
shrb
in
mov
jecxz
stos
mov
nop
push
mov
mov
pop
pop
push
pop
sahf
inc
inc
or
out
rcrb
cmp
imul
adc
jl
adc
push
or
pop
dec
fidivrs
adc
add
pushf
lahf
iret
idiv
and
popf
dec
push
stos
xor
mov
bound
icebp
adc
test
sub
push
nop
pop
test
xchg
cmc
push
cmp
je
cmp
push
stos
dec
or
stos
enter
push
mov
in
les
adc
xchg
fwait
repz
mov
pop
popa
cmp
andl
ret
sub
pop
xlat
clc
movsb
popf
xrelease
dec
jne
xor
push
cmpsb
mov
mov
push
cld
cs
in
mov
push
addl
repnz
push
sub
and
enter
dec
in
inc
insb
xchg
clc
mov
mov
and
in
mov
jmp
sbb
xchg
cmc
dec
push
pusha
jb
aaa
int3
out
lock
push
push
add
test
xchg
int3
outsb
dec
pusha
inc
and
icebp
repnz
jmp
scas
adc
scas
cmp
insb
scas
data16
fbstp
lcall
xor
or
aas
sbb
pop
lret
mov
inc
mov
loope
out
aad
outsb
or
push
sbb
add
cmp
scas
sbb
adc
test
xor
xlat
out
test
xchg
xorl
add
inc
sub
js
out
sbb
das
test
push
dec
add
xchg
cmc
sbb
push
push
dec
sbb
xchg
lret
adc
in
adc
mov
addr16
ss
nop
jmp
pushf
andl
sub
or
adc
or
mov
push
and
fdivrs
int
and
gs
add
lahf
gs
or
je
lods
cmpsl
lret
jns
pop
out
sub
fmull
inc
dec
aas
mov
dec
add
loopne
in
cmp
sbb
mov
jb
add
cmovge
and
pop
addb
stos
clc
xchg
adc
outsb
repz
dec
in
mov
mov
rsqrtps
or
enter
lahf
and
cwtl
in
dec
pusha
daa
out
inc
pop
push
jne
cmpsb
xchg
repz
arpl
mov
push
cmc
fiaddl
mov
out
inc
fcompl
xorl
mov
sbb
cltd
in
mov
mov
das
icebp
inc
xor
and
jae
sub
gs
cmp
mov
js
xor
cmc
mov
fcoms
mov
mov
insl
push
mov
dec
out
jg
xor
repnz
jg
cmp
out
lret
sub
add
popa
jmp
std
jl
out
sub
dec
mov
rcrb
mov
into
shrl
pop
dec
pop
ret
push
mov
jle
push
subl
jle
pop
subl
hlt
jmp
fldcw
enter
and
dec
mov
xchg
fstpl
inc
clc
xchg
stc
pushf
mov
out
add
add
std
inc
push
xlat
sub
sub
jo
aas
sbb
mov
js
push
cmpsl
mov
rorb
lods
sahf
jmp
addr16
cli
jp
pop
xchg
xor
xlat
mov
inc
out
pop
imul
mov
xchg
inc
stos
jne
punpckhwd
pusha
das
pop
sar
and
daa
jbe
push
fwait
mov
imul
aam
dec
adc
pop
in
cltd
push
mov
repz
aas
aad
cmp
mov
xchg
dec
jne
das
cmp
mov
dec
addl
fisubrs
aas
cmpsl
repnz
sbb
mov
into
xor
pop
dec
mov
mov
xor
imul
push
cmp
in
push
lahf
sar
jo
push
xchg
push
sub
mov
and
aam
xor
movsb
mov
dec
adc
or
push
push
jns
pop
cs
lods
out
add
lcall
jmp
or
lret
xchg
xor
mov
test
xchg
and
test
enter
sub
pop
jne
rolb
test
jbe,pt
inc
insb
or
faddl
sub
fdivs
enter
into
dec
jae
or
fadd
shrb
jp
xchg
in
jmp
add
cmp
leave
push
insl
lods
jb
jmp
fucomip
inc
xchg
call
jg
enter
icebp
mov
jo
loope
ds
clc
fimull
aam
xor
push
xor
cmp
or
loopne
dec
cmc
add
sahf
push
cmp
jle
pushf
hlt
mov
addr16
mov
cmp
xchg
mov
fwait
roll
pushf
pop
clc
xchg
dec
pop
mov
push
repz
push
mov
push
mov
std
aad
pusha
mov
or
push
pop
clc
mov
js
jb
and
lret
fidivl
in
push
sbb
pusha
hlt
test
mov
mov
sbb
sub
xor
sbb
and
test
dec
aas
pop
mov
mov
push
imul
les
insl
sarb
push
xor
scas
mov
xor
add
and
iret
scas
or
dec
inc
hlt
inc
cmp
push
in
stos
das
addl
sbb
jns
jbe
add
xchg
aam
jo
push
scas
out
add
push
addl
leave
pop
popa
enter
mov
add
rol
mov
mov
pop
cvttps2pi
cmpl
movsb
jbe
orb
sub
lods
popa
dec
insl
orb
jl
insb
mov
push
test
adc
dec
dec
jne
jp
or
std
sub
testl
jl
jle
mov
int3
push
popf
clc
roll
ljmp
int3
or
push
stos
sbb
xor
adc
ja
iret
inc
rorb
add
dec
adc
mov
das
inc
mov
outsb
pop
pop
or
insb
idiv
mov
cmp
int
jecxz
in
out
out
push
jl
lods
push
movsl
imul
inc
or
mov
dec
jno
or
and
iret
mov
pop
aaa
push
hlt
xchg
xchg
mov
setbe
outsl
adc
int3
iret
stos
in
clc
pop
cmpsb
jb
je
mov
aad
cmp
jl
repz
xor
mov
test
les
movsl
dec
shll
pusha
stos
add
push
push
mov
mov
sub
rclb
adc
out
jg
test
and
mov
clc
addr16
je
movsb
sbb
and
cmpsl
rcrl
stos
icebp
or
rorl
push
outsl
cmp
xor
and
test
fcomps
jg
cmp
movsb
test
out
cs
mov
ss
or
sahf
push
ret
call
bound
ss
mov
jg
inc
insb
cmp
inc
xchg
jmp
push
arpl
push
add
add
xchg
jno
inc
imul
xchg
pop
int
dec
mov
sbb
packsswb
test
bnd
push
jg
out
push
sbb
push
mov
cltd
jp
cmpb
repz
mov
adc
adc
jns
movsb
sbb
jecxz
pop
xrelease
imul
xor
jecxz
mov
cwtl
mov
adc
pop
sub
push
xchg
dec
mov
adc
push
dec
sbb
inc
jecxz
cltd
popa
xchg
cmp
pop
inc
or
shr
shl
rcr
jg
sub
sub
out
jb
xor
push
cld
xor
jbe
mov
popf
cmp
pop
cmc
and
mov
pop
mov
lods
ret
sti
lods
jbe
ret
std
adc
cmp
inc
pop
sub
pop
dec
sub
ljmp
cmpl
inc
inc
sub
fiadds
cmp
insl
out
into
xor
arpl
shl
pusha
test
int
dec
sbb
aas
adc
cmp
mov
push
pop
push
js
mov
cmp
dec
mov
xchg
xchg
adc
or
orb
jp
mov
sub
clc
cmp
mov
sbb
and
notl
xchg
lahf
decl
sub
cs
cmpsl
xlat
out
ror
daa
in
paddusb
or
enter
xor
push
fwait
pushf
setle
sti
in
push
popf
dec
bound
push
inc
jp
das
movsb
mov
ljmp
jbe
dec
gs
mov
in
sbb
movsb
nop
adc
iret
shrb
jle
push
out
mov
adc
mov
mov
rcrl
aad
add
cmp
mov
xchg
ret
cld
cmp
xor
popa
dec
xor
rcll
xchg
jle
orl
or
mov
xor
inc
cmp
or
xor
fidivrs
in
xorl
xchg
push
xadd
inc
inc
aas
and
fistps
mov
scas
xor
je
imul
xchg
add
mov
push
mov
sti
roll
pop
popa
push
idivb
cs
push
movsl
xchg
cld
jae
fbstp
daa
adc
insb
jmp
sbb
pop
push
xchg
cmc
inc
dec
jg
lretw
bndstx
aas
push
fidivrl
inc
cli
push
adc
pop
insl
loopne
idivl
jp
mov
mov
ds
fstpt
cmp
push
jmp
adc
jo
pop
and
mov
adc
cmpsb
in
loope
inc
pop
adcl
mov
pop
sahf
iret
dec
xor
imul
pop
mov
jg
fsubrl
pop
lret
jno
jge
mov
popa
outsb
inc
mov
mov
adc
push
jne
cwtl
sub
mov
lret
test
dec
inc
cmp
xchg
ljmp
mov
lret
dec
inc
xchg
cld
sub
leave
std
in
shr
push
pop
jo,pn
sbbl
cmp
insb
clc
push
pop
sbb
mov
call
and
daa
stos
mov
sti
xor
add
mov
sarb
xchg
cmp
nop
dec
int
rorl
sti
lock
push
mov
mov
and
andb
in
mov
and
cmpsb
cmp
leave
je
sbb
lods
clc
sub
fistl
hlt
pop
inc
cmc
je
mov
dec
cmp
lcall
xchg
push
addr16
push
aas
adc
je
and
add
and
mov
push
sbb
dec
imul
xor
fsubp
xchg
imulb
jb
pop
je
mov
psllw
dec
loop
add
pop
enter
inc
cmpsl
insl
push
scas
std
fcompl
add
add
push
jecxz
xor
sub
mov
mov
adc
adc
cltd
sbb
and
cli
jle
cmp
imul
cmp
sbb
or
scas
or
mov
in
jecxz
fldt
mov
fmulp
out
sbb
mov
stos
pop
and
pusha
and
rep
hlt
xchg
jno
mov
mov
jg
jle
outsb
add
sbb
adc
cld
push
inc
cmpsb
xor
adc
sbb
mov
or
es
in
push
pushf
xchg
pop
mov
imul
popf
pushf
jnp
fidivs
pop
adc
icebp
int3
xchg
test
rcl
aas
gs
cld
jo
je
arpl
mov
aaa
jp
pusha
mov
add
xor
div
nop
popa
ljmp
out
cmpsb
jp
ljmp
dec
or
lret
int3
push
lds
dec
cli
push
add
jl
sbb
xchg
pop
mov
sub
and
jg
inc
sarl
loopne
js
sub
push
cmpsb
cmp
adc
lahf
xchg
jne
lods
dec
mov
mov
sarb
jmp
in
push
sahf
push
test
mov
movsb
sub
lahf
in
mov
inc
mov
faddp
push
andl
in
lret
cmpsb
cmp
in
movsb
mov
cmp
ja
and
and
rcll
rorb
push
inc
or
mov
push
call
xor
push
jmp
lahf
clc
pop
mov
imul
dec
dec
sbb
jae
cs
xchg
sub
mov
into
dec
sub
roll
negl
jae
out
stos
and
hlt
nop
fisttpll
mov
sar
sbb
sti
mov
push
out
ds
push
sub
stos
rcr
popf
lods
jmp
shlb
aad
and
ret
scas
imul
iret
scas
std
andb
and
movsb
jecxz
mov
cmpsb
add
lods
in
pusha
cmpsb
js
fistl
aam
sub
enter
stos
add
outsl
cmp
js
jmp
jne
int3
push
rcll
inc
xor
xor
or
rcl
loop,pn
pop
sub
xchg
cmp
test
xor
mov
mov
sub
test
scas
and
je
mov
js
cmp
sbb
lock
sbb
lea
adc
cmpb
int
cmp
scas
xchg
enter
inc
xlat
jecxz
aam
xlat
push
sub
mov
mov
inc
dec
dec
mov
out
les
sub
push
pop
lahf
cmpl
cmp
xor
sbb
in
loope
mov
xor
inc
rclb
and
fnstenv
fisttps
pop
or
rcr
xchg
add
fnstenv
mov
mov
mov
lods
gs
idiv
xchg
adc
jne
mov
repz
gs
mov
and
addl
test
inc
movsb
xchg
rcl
mov
dec
adc
cmp
loope
pop
lock
jbe
dec
dec
mov
aas
mov
loope
dec
push
mov
sbbl
imul
fisubl
sbb
fnstenv
ret
cmc
lds
je
popf
mov
arpl
outsl
lds
mov
cld
js
sub
or
loop
out
cs
aam
mov
insb
popa
movsl
jo
mov
in
mov
rcl
sbb
jne
cmp
pop
scas
lea
inc
sbb
mov
pop
jl
cmp
call
add
fldl
pop
cli
inc
jno
push
sahf
popf
pop
mov
inc
push
imull
js
les
cmp
fidivs
loop
sbb
cwtl
aaa
fisttps
adc
mov
xor
stos
dec
adc
shrb
sbb
lret
insl
loop
sub
mov
pop
mov
ja
int3
jl
jo
int
adc
in
inc
jmp
cmp
push
hlt
cltd
mov
cmp
and
cmp
scas
push
dec
cli
nop
sbb
push
and
xchg
sbb
cmp
repnz
iret
insb
dec
adc
cli
dec
inc
ffreep
leave
sub
sub
cmc
testl
mov
insb
sahf
out
xor
sub
lret
dec
div
xchg
stos
add
cmpb
lret
cld
mov
outsb
xchg
push
fcoml
insl
lock
xchg
jne
xor
cwtl
orb
clc
imul
inc
and
sbb
mov
repnz
jl
daa
fdivs
jbe
and
mov
cmp
mov
mov
jo
pop
lods
mov
aam
pop
test
hlt
stos
dec
gs
mov
xor
les
lahf
lahf
sbb
lds
inc
sub
xchg
mov
pusha
adc
inc
inc
mov
into
xor
sahf
inc
sti
sub
out
es
pop
ljmp
in
shrl
fcoms
push
dec
data16
and
inc
push
dec
ret
lods
jno
push
or
dec
xor
lds
mov
mov
sbb
mul
xchg
add
jae
popf
jge
scas
dec
and
lods
pop
jle
cmpsl
sbb
mov
lret
cmp
jmp
add
ljmp
cmpsb
push
fadds
add
xor
adc
daa
mov
adc
loopne
outsb
ss
lret
xorb
lret
les
cmpb
mov
lahf
xchg
cmp
ljmp
or
inc
jle
jmp
scas
mov
or
pop
fcomi
popa
add
shll
inc
xor
icebp
fidivrl
push
jbe
insl
cltd
inc
seto
nop
incl
fbld
fwait
adc
cmc
outsb
popa
xchg
cltd
or
gs
or
mov
jle
icebp
iret
add
test
jno
dec
lret
shll
std
mov
sbb
std
inc
je
cmpsl
das
push
inc
sub
cmp
add
fildl
or
jg
call
bound
sbb
or
repnz
int
into
das
add
inc
insl
push
cmp
inc
xor
add
les
and
mov
push
or
push
hlt
xchg
pusha
int3
shr
ret
xor
jae
xor
push
aad
in
sub
dec
mov
lock
sbb
or
push
xor
mov
mov
das
dec
pop
subb
adc
push
data16
mov
loope
jmp
cmpl
rol
aaa
call
push
enter
fstp
mov
pop
lret
mov
cs
std
mov
and
nop
das
xchg
jbe
icebp
addr16
push
cs
into
jle
inc
ret
lret
orb
mov
loop
stos
in
mov
pop
add
add
cmp
into
mov
sub
loopne
testb
add
cld
ljmp
inc
out
mov
xchg
mov
loope
shrb
loopne
sbb
cltd
icebp
in
pusha
stos
jno
jns
nop
lea
sbb
mulb
fdivrp
test
add
push
mov
or
add
lds
cmp
ljmp
push
shl
and
lods
mov
mov
lods
test
xor
push
xchg
clc
inc
addr16
pusha
sub
mov
mov
add
icebp
mov
pop
loope
leave
add
and
negl
pop
les
push
lock
jns
negl
jno
cs
xorb
lcall
xchg
dec
adc
lret
lret
dec
cmp
cmp
mov
fidivl
inc
and
ja
loop
insb
add
cmp
ret
mov
sahf
daa
frstor
add
cmc
mov
pop
jbe
hlt
lea
cmp
cmc
jge
mov
xor
fldcw
push
jnp
adc
test
test
and
sub
in
mov
mov
mov
xor
mov
xor
nop
mov
inc
add
push
sbb
add
sub
loope
nop
or
sub
test
sub
inc
cmc
orl
and
adc
mov
imul
outsl
mov
and
cmp
pop
push
fstps
xor
fsubrs
dec
jae
mov
test
icebp
pop
sbb
gs
aaa
insb
jmp
jb
orl
sbb
dec
fsubr
adc
add
lret
je
mov
lret
int3
pop
push
out
xchg
into
incb
mov
mov
push
fmulp
aam
dec
sbb
sub
cmp
cli
ret
sbb
mov
jle
pop
ret
jecxz
fnstsw
sbb
pushf
jae
imul
mov
mov
cmpsl
dec
pop
sahf
cmp
cmc
inc
ljmp
push
and
jg
je
jne
sub
jae
cmp
pushf
test
into
lret
dec
int3
pop
mov
cli
out
js
cwtl
pushf
pop
inc
dec
inc
or
cmp
ret
paddb
add
clc
mov
xchg
lret
add
data16
mov
fnstcw
pop
mov
add
sbb
jmp
test
adc
jp
dec
ds
subl
into
push
inc
sbb
xchg
xchg
pop
sbb
jecxz
push
sub
lds
loope
ret
mov
das
cmpb
pop
cld
gs
imul
adc
ficoml
lcall
rcrl
lret
out
in
fildl
jge
cmp
rcll
stos
ljmp
sbb
in
lock
out
jge
cli
imulb
sub
mov
and
push
pop
or
inc
add
or
aad
pusha
mov
xor
lods
mov
xor
imul
leave
stc
push
sbb
cmpsl
les
or
jg
push
and
clc
gs
stos
and
xchg
enter
mov
lahf
xchg
mov
test
add
push
mov
jecxz
jb
mov
daa
imul
push
mov
inc
adc
pop
shlb
data16
lea
or
movsl
loopne
add
jge
fadds
mov
push
xor
js
adc
mov
ja
lds
dec
add
popa
fs
scas
in
pop
imul
jns
cmp
xor
xchg
cmp
mov
jg
stc
loopne
in
mov
test
add
or
add
aad
jmp
xor
pop
xor
xor
jne
adc
fstpl
lahf
repnz
pop
daa
jle
xchg
xchg
movsl
xor
sar
inc
mov
mov
loope
aaa
repz
pushf
jbe
ficomps
addl
mov
jae
aad
pop
pop
pop
and
fucomip
repnz
jl
dec
daa
shrl
fistl
test
mov
les
xchg
cmp
or
push
cwtl
lret
mov
out
inc
or
pop
mov
adc
inc
inc
fldcw
mov
lds
loope
lahf
push
sbb
sbb
jecxz
cmp
ja
pop
jecxz
outsb
stc
mov
in
mov
scas
jp
insl
loop
test
shll
nop
jns
adc
call
outsl
cmp
jp
cmp
sub
ret
pop
pop
ja
mov
daa
sub
loopne
mov
sar
test
cmp
cltd
popa
jno
das
cwtl
loopne
and
push
das
in
mov
fidivrl
pop
sub
sbbl
mov
push
stos
mov
pushf
adc
jecxz
stos
aaa
sub
je
mov
js
pop
cwtl
out
scas
mov
data16
mov
and
aaa
outsb
in
outsb
in
xchg
jae
pop
dec
push
and
pop
xchg
stos
fbld
jl
inc
repnz
lds
imul
sbb
xchg
mov
stc
cli
test
mov
lahf
fpatan
fcomps
lds
rcrl
sbbb
jmp
gs
fsubl
or
pop
clc
out
cmp
adc
imul
fwait
jle
mov
aas
les
dec
xchg
int3
mov
adc
inc
data16
xorb
mov
cs
mov
cmp
ret
xchg
ror
out
and
dec
pop
xorb
seta
inc
and
outsl
push
ret
add
shlb
sub
int
pop
aaa
shr
push
mov
jae
mov
sti
jae
dec
ret
andl
pmulhw
adc
sbb
leave
mov
push
xchg
dec
inc
movsb
and
out
fldcw
fnstcw
add
cld
ljmp
push
std
popf
pusha
nop
sarl
sbb
leave
popa
imul
out
cmp
pop
fsub
cs
aad
mov
add
adc
dec
adc
jne
cmp
cmp
push
sbb
and
inc
jecxz
inc
enter
adc
enter
shl
bound
rcrb
add
pop
mov
pop
or
push
clc
adc
mov
aas
outsl
fldcw
rcr
test
cwtl
adc
ror
add
adc
jbe
rcrl
ja
pop
mov
lret
xchg
movsl
addps
movsl
int3
mov
stos
jb
pop
sbb
mov
repnz
push
dec
insl
lahf
pop
fsubrp
push
xchg
sbb
push
adc
jp
leave
and
cwtl
adc
lahf
xor
in
mov
jno
push
push
orl
xor
inc
mov
xor
fxch
jae
idivl
ljmp
out
adc
cmp
popa
repnz
mov
rclb
and
popa
jp,pt
mov
in
out
enter
lret
icebp
je
test
mov
rorl
sbb
xchg
cmp
cmp
sbb
mov
popf
test
pusha
shll
pop
enter
cs
pop
out
repz
in
adc
adc
push
mov
shlb
cld
push
adc
pusha
jl
out
js
fnstcw
fistpll
xlat
jno
dec
adc
add
sbb
ds
imul
rep
dec
rol
daa
adc
iret
xchg
repz
push
push
inc
sub
pop
js
aam
divl
add
push
sbb
ds
cmc
sub
jle
popf
push
sbb
push
lahf
cmp
dec
jl
fmul
out
fidivl
cmp
push
jp
mov
xchg
push
cmpsl
cmp
push
pop
in
iret
sbb
aad
cmp
or
jno
fists
inc
mov
inc
js
sbb
sbb
repnz
jnp
and
sbb
push
sbb
lret
repnz
std
xchg
test
call
mull
sub
inc
dec
inc
cmpl
mov
andb
dec
stc
test
fwait
js
mov
stos
lds
xlat
pop
arpl
pop
cmp
sbb
add
fwait
notl
dec
rcrb
cld
shrb
jno
test
inc
inc
sub
inc
sahf
push
adc
cmc
mov
pop
jle
jp
sub
mov
cltd
je
stos
pop
stos
pop
loope
inc
clc
sahf
lcall
pop
push
call
lock
in
sbb
repnz
sbb
mov
loop
jo
mov
add
movsb
xchg
stos
pop
or
sub
scas
shrb
inc
in
insl
xor
insb
mov
int3
imul
pop
scas
daa
outsb
xchg
in
ljmp
xchg
insl
pusha
icebp
pushf
sub
arpl
cltd
test
cli
inc
mov
fsubs
outsl
sbbb
loopne
jbe
stos
gs
xchg
sbb
cs
addr16
and
sbb
inc
pushf
mov
icebp
lcall
loope
adc
jg
icebp
add
movsl
inc
inc
sbb
add
push
lahf
outsb
mov
mov
rclb
fsubrs
clc
cmp
mov
push
int3
push
or
add
stos
mov
rorl
mov
mov
mov
sub
jno
pop
add
dec
push
stos
cmc
aam
hlt
rcl
push
mov
nop
mov
mov
lds
arpl
enter
cltd
mov
outsl
lds
pop
add
xor
mov
stc
dec
xlat
adc
sbb
scas
jecxz
jmp
jmp
xlat
popa
std
leave
test
push
aas
mov
stc
xchg
add
popa
loop
inc
xor
ret
mov
adc
sub
lods
enter
cmpsb
mov
pop
mov
inc
dec
jg
dec
sbb
loop
push
stos
jno
es
xor
loop
cmp
scas
ja
jo
add
out
dec
adc
adc
sahf
pop
mov
imul
lahf
lods
inc
scas
pop
pop
std
jecxz
in
sbb
jno
pop
rclb
das
ret
daa
or
or
int
aad
add
pushf
add
scas
push
orl
push
das
mov
icebp
sbb
jl
sbb
pop
xchg
shll
sub
jnp
dec
sbb
push
jb
aas
xchg
xchg
mov
sub
xor
push
lods
sub
push
cs
clc
mov
pop
push
jns
inc
inc
movl
popf
pop
aam
fnstsw
sbb
and
cs
or
jl
cmp
mov
mov
popa
cmp
add
loop
lock
loopne
ljmp
sub
inc
fsubrs
cmp
mov
sbb
leave
cs
imul
and
pop
mov
das
iret
mov
inc
or
adc
aas
and
jl
inc
loopne
add
jns
cmpsb
add
sub
pop
aad
pop
xchg
add
iret
xchg
dec
movsb
sbb
mul
push
cltd
mov
rorb
pushf
in
xchg
in
out
stos
rorl
rcrb
iret
insb
push
or
adc
pop
outsb
lret
sarb
xchg
push
pop
in
shll
les
aas
mov
sar
sub
test
jmp
mov
push
data16
sahf
jb
fcmovnbe
sbb
stos
aam
dec
push
mov
inc
push
jg
in
ret
and
shlb
jp
std
jl
je
mov
cmpsb
ljmp
ficomps
mov
repz
and
jg,pt
sqrtps
lods
lret
daa
lret
scas
xchg
sub
mov
mov
xchg
ret
mov
mov
data16
and
mov
enter
subl
bound
les
pop
std
aas
les
aad
pusha
mov
inc
popa
push
jae
mov
in
cmp
testl
hlt
pop
je
or
test
pop
pop
push
jl
test
pushf
inc
shr
and
in
mov
mov
dec
es
ror
push
andb
outsb
loopne
js
sbbl
inc
push
inc
mov
cmp
xor
rcl
sub
mov
sahf
xor
ret
sarl
xor
mov
movb
lock
push
push
jge
rcrb
shll
int
lcall
sub
in
daa
inc
mov
sbb
xchg
pop
insb
out
mov
shrb
test
push
insb
cmp
daa
stos
adc
mov
lret
xor
or
ja
movb
jle
jl
cltd
lock
push
jmp
inc
outsb
pop
fwait
aas
pop
sbb
outsb
das
mov
ret
out
inc
xchg
cmc
idiv
ss
jg
aad
fwait
mov
fstps
orb
or
or
pop
outsl
ljmp
ljmp
jb
mov
dec
lds
push
test
lds
filds
and
pop
jle
movb
insl
and
insb
xchg
pop
pop
inc
xchg
outsb
imul
leave
inc
aas
mov
xchg
pop
cwtl
movsl
loop
aam
xchg
pop
add
call
pop
xor
mov
push
insb
test
clc
mov
stos
dec
adc
inc
cwtl
fs
dec
mov
stc
and
fnstenv
clc
inc
cs
fs
into
cld
dec
imul
repz
xchg
xchg
push
inc
adc
fs
cmc
into
aas
cmp
dec
mov
aam
and
testb
ja
fdivrl
stc
push
jge
fsts
mov
lret
aam
jne
addb
je
push
xlat
push
pop
mov
push
adc
xor
xchg
inc
js
xor
adc
mov
mov
inc
aad
xchg
fdivs
repnz
out
movsb
push
adc
dec
bound
lds
mov
pop
mov
insb
inc
or
idiv
into
jne
call
test
in
lock
aad
push
mov
jns
add
mov
loope
lock
sub
push
xchg
lds
fmuls
push
jmp
sub
push
inc
pop
jbe
out
jns
jle
cltd
adc
jmp
js
or
jp
clc
mov
in
aad
pop
push
jecxz
cmp
dec
or
stos
inc
push
add
fstps
cmp
add
mov
adc
rorb
jno
in
andb
xlat
cmp
pop
push
sub
addr16
rep
repnz
leave
clc
loope
insl
test
cmc
jmp
inc
sub
mov
xor
jnp
mov
jb
out
mov
in
mov
sbb
ss
addr16
inc
and
add
das
jno
jp
mov
out
out
mov
mov
ret
and
movsl
and
adc
nop
int
fwait
mov
insb
push
arpl
cli
sbb
lcall
cmc
dec
mov
ljmp
mov
jge
outsl
adc
sub
mov
cli
xchg
dec
out
fidivrl
mov
cli
sbb
test
shll
or
mov
mov
outsl
push
mov
xchg
add
push
jnp
ljmp
lods
add
lds
sarb
jmp
push
cmp
xchg
loop
test
pop
fisubrs
les
in
mov
aad
fnstenv
hlt
loope
mov
cld
ja
stos
cld
xor
and
cmpsl
scas
xchg
int
insb
or
adcl
fwait
cmp
add
inc
lods
fcomp
dec
idivb
push
fcmove
inc
sub
or
leave
and
push
dec
ret
scas
scas
xchg
cs
inc
jmp
call
shrl
mov
and
mov
stc
loope
mov
aaa
adc
outsb
pushl
pusha
outsl
push
lods
les
test
mov
ljmp
bound
xchg
mov
and
and
pop
ret
adc
stos
cmp
out
lds
mov
stos
in
cmp
fcomi
je
dec
jo
or
imul
pop
inc
push
popf
aam
negl
enter
and
or
push
sbb
mov
jne
cmp
nop
and
shrl
popa
adc
and
and
mov
cmp
into
mov
loop
xchg
jo
fstps
mov
adc
mov
fimull
inc
fistpll
dec
lods
jecxz
sahf
stc
ror
stos
rcrl
inc
push
add
inc
or
mov
and
jnp
iret
sbb
or
shrb
sbb
push
dec
pop
test
inc
fstpl
push
ret
lea
and
adc
cmp
pop
aam
cltd
ja
push
loop
stos
xor
push
ror
xchg
pop
rol
or
shll
pop
xchg
arpl
aad
and
shlb
push
inc
jnp
ret
sbb
pusha
cmp
add
aam
add
dec
dec
push
pop
addb
enter
std
cmc
mov
jbe
pop
test
dec
xor
adc
push
orl
mov
pop
mov
inc
pop
sub
jns
inc
repz
enter
flds
aaa
mov
shll
dec
outsl
cmp
fisubl
jp
xchg
xrelease
mov
test
sbb
mov
add
inc
loop
bound
and
pop
and
mov
fs
shll
push
mov
xchg
and
cld
dec
movsb
scas
inc
cmpsl
fdivl
cld
or
cmpsl
cmp
jb
dec
inc
push
in
adc
push
pop
push
into
pop
out
adc
out
mov
aam
sti
fdivp
xor
sti
hlt
cmp
repnz
xor
in
jge
push
mov
cmc
sub
insl
das
xlat
rcrb
sar
cmpsb
cli
sahf
pop
aas
stos
and
je
xchg
insl
movsl
cmp
mov
inc
mov
hlt
pop
push
movsb
mov
sbb
lahf
aas
mov
popl
cld
fldt
cld
ret
lds
inc
daa
adc
iret
push
lret
xchg
jg
divl
movl
mov
add
xlat
rcr
cli
aam
ficoms
mov
adc
loope
push
jle
or
daa
mov
xchg
cmp
jle
mov
in
outsb
scas
aad
aas
cpuid
ja
arpl
or
xor
mov
leave
das
lds
sti
add
mov
xchg
cmp
fisttps
cwtl
inc
mov
repz
mov
mov
daa
sub
cmp
pop
jl
pop
out
shll
int3
test
pop
fdivs
inc
mov
lcall
testl
fmull
stc
xchg
inc
lods
scas
mov
mov
jmp
adc
call
jae,pt
jnp
jmp
or
cld
push
xlat
mov
sar
sub
ficomps
jne
push
hlt
daa
rol
or
dec
add
mov
jge
ret
loope
bound
lods
daa
mov
add
mov
es
mov
and
mov
loopne
cmp
dec
xchg
lods
add
add
test
jmp
cmp
mov
push
mul
stc
fstpl
adc
fs
cmp
push
jno
fisubrl
and
ficoms
mov
sahf
xchg
dec
xor
sbb
jle
inc
pop
push
insb
add
adc
inc
push
fsubs
iret
sub
push
mov
sub
and
fsts
sub
in
push
sub
xor
icebp
adc
jnp
repz
mov
add
and
js
imul
incl
dec
cltd
push
mov
cmp
xchg
fldenv
push
push
xchg
frstor
xorl
stc
push
adc
and
ret
adc
test
lret
fisubl
je
aam
mov
les
xchg
gs
xlat
mov
nop
push
pushf
std
mov
decl
ss
decb
sti
dec
push
shr
dec
cmpsl
es
mov
push
add
arpl
or
push
xchg
adc
ja
fcoms
xchg
imul
mov
ret
sbb
xor
loope
pop
addl
pop
mov
mov
xchg
jne
aaa
jp
clc
jns
enter
rorb
fs
mov
outsl
test
adc
jp
shl
jns
arpl
les
inc
xor
sbb
nop
cmp
dec
je
rcr
int
and
ret
scas
shrl
mov
aaa
aad
mov
out
lret
cmp
ret
in
insb
loopne
mov
sbb
push
dec
dec
adc
sbb
mov
out
jae
outsb
pusha
pusha
xchg
lea
dec
insb
or
adc
addr16
sti
mov
sbb
jge
aas
lds
and
push
xchg
jo
clc
fisttpll
imul
push
je
cmpsl
inc
push
scas
xlat
mov
aam
mov
xchg
adc
pop
mov
mov
lods
fidivrl
stos
clc
jmp
and
nop
es
and
inc
pop
mov
sub
mov
inc
xor
repnz
test
movsl
xchg
lret
adc
aad
add
mov
xor
and
int
iret
or
lods
in
sub
jl
cmp
xchg
and
pop
iret
sbb
cmpsb
mov
xor
das
mov
mov
xor
jo
clc
addr16
xor
arpl
in
incl
sahf
ficomps
or
inc
loopne
scas
decl
cmp
sub
outsl
stos
je
adc
adc
add
clc
sub
shll
icebp
into
sub
jne
or
mov
sub
or
sub
insb
cltd
ror
mov
sbb
cltd
sbbb
add
leave
mov
dec
mov
pushf
adc
xlat
movsl
push
jmp
mov
and
sub
fsts
xor
jl
jp
mov
scas
orl
push
pop
and
mov
xor
pop
fs
push
arpl
loopne
ds
inc
add
mov
jb
or
fs
dec
repz
test
push
int
xor
and
add
mov
rcll
lods
mov
insl
sti
popa
outsl
adc
movsb
xor
cmp
jne
fsubr
add
aas
or
imul
push
ja
pop
cmp
or
add
je
iret
les
adc
pop
out
out
push
inc
aas
fdivrs
mov
push
movsb
aaa
mov
add
and
dec
call
pusha
mov
mov
push
lret
pop
cld
jbe
in
lcall
int3
inc
xchg
test
scas
lea
pop
jbe
leave
idivl
gs
mov
jge
cmpsl
repnz
es
sub
lea
inc
fimull
daa
mov
out
mov
imul
in
xor
in
jae
int
xchg
popf
lret
lahf
adc
hlt
lea
push
add
lcall
xchg
hlt
push
sbb
in
fstps
mov
std
inc
test
sbbb
insb
and
lods
jl
or
and
arpl
adc
int
cmp
xchg
mov
stc
xchg
daa
popa
xor
and
inc
in
pusha
xchg
add
or
sbb
add
xchg
adc
push
xchg
add
cmp
xor
js
mov
repz
insb
gs
xchg
xor
mov
int3
out
in
jg
xchg
xchg
pop
push
and
inc
mov
jns
pop
push
in
jmp
sub
fmuls
js
sbb
aam
fs
sbb
pusha
adc
adc
adc
push
lret
aas
iret
dec
mov
std
cwtl
adc
sbb
jno
pop
enter
sub
pop
jge
sub
jo
fistpl
xor
xor
cli
scas
mov
in
pop
or
push
jbe
or
pop
dec
dec
jmp
ds
add
pop
lahf
mov
xchg
imul
outsl
int
or
jae
mov
inc
push
sbb
not
cmpb
add
call
dec
cmp
sub
jg
push
lods
mov
xchg
outsl
xchg
push
xchg
mov
jbe
popf
pop
pop
addr16
enter
or
sbb
fwait
xor
jo
jmp
mov
inc
out
pop
lock
jbe
test
scas
sbb
adc
inc
aaa
hlt
clc
inc
cmp
lods
inc
fstpt
dec
cmpsb
push
push
xchg
cs
xorl
cmp
pusha
lcall
jl
fisttpl
mov
jl
jae
notb
outsb
aad
push
lods
daa
mov
test
pop
in
es
mov
cmp
cmp
cmpl
out
mov
shrl
aaa
test
in
xor
add
cmp
xor
dec
es
ret
adc
movsl
or
movsl
adc
iret
jp
sbb
pop
mov
xor
pop
xchg
aas
lock
stos
mov
loop
mov
jo
jmp
mov
inc
mov
cmp
cs
mov
adc
loopne
lock
into
dec
push
lret
add
push
sbbl
ficoms
pop
in
frstor
xchg
rol
xchg
cwtl
dec
dec
add
pushf
gs
sbb
lods
repnz
sbb
add
pop
inc
lcall
fwait
xchg
daa
jne
sarl
inc
dec
leave
xor
cmc
lods
dec
aas
and
lods
sub
push
xlat
pop
bound
xor
cmp
jb
or
sbb
sahf
stos
out
and
daa
int
cmc
jne
lea
push
jnp
cmp
mov
icebp
add
sbb
fwait
mov
cld
mov
out
dec
mov
dec
cmpsl
push
not
aad
sub
inc
inc
aad
enter
jne
pop
dec
aad
icebp
lcall
mov
stos
cmp
aad
test
mov
mov
scas
fnsave
andl
cli
pushf
pop
pop
aas
xor
and
push
sbb
lret
cwtl
sbb
xlat
ljmp
add
mov
les
sbb
ds
std
outsl
ljmp
fstl
push
cli
jnp
cld
sub
push
hlt
pop
pop
gs
es
pusha
mov
movsl
xchg
xchg
shll
outsl
pop
mov
test
call
jne
pop
add
test
dec
test
add
mov
sbb
les
inc
ret
leave
testl
js
mov
adc
movsl
nop
js
mov
adc
popf
sub
push
jne
xchg
pop
lcall
mov
scas
outsl
gs
aam
das
sbb
enter
adc
lds
out
pop
scas
fs
jle
int
lret
cli
pxor
pop
push
lods
mov
fadd
sub
mov
aaa
pop
mov
out
mov
add
push
or
loope
insl
imul
je
xchg
xor
pop
cltd
mov
mov
mov
mov
mov
cmpsl
xor
dec
std
nop
popf
inc
pop
mov
and
mov
dec
fdivp
and
xchg
js
jmp
loope
dec
or
andb
cmp
jecxz
mov
in
fdivrl
jecxz
and
or
fstpl
cmp
out
push
pop
pop
bound
int3
cmp
fwait
add
inc
sbb
pop
or
add
jbe
stc
add
pop
lods
mov
sbb
test
mov
jnp
or
mov
lret
sbb
cltd
xor
pop
mov
insl
mov
pop
stc
add
test
sub
ja
pusha
pop
out
push
test
enter
xchg
and
inc
jle
pushf
sub
cmp
in
adcl
adc
and
cli
mov
test
inc
push
adc
enter
fwait
adc
fcmovne
fsubs
lods
fildl
mov
push
cltd
pop
pushl
pop
test
outsb
cmpsl
les
jnp
push
add
ret
ret
inc
fwait
sub
mov
fwait
jl
xchg
or
data16
add
mov
ja
cmp
aad
addr16
fiadds
stos
decl
iret
pop
push
scas
push
in
cli
mov
push
adc
stc
inc
dec
clc
inc
xchg
cmp
xor
nop
insl
lods
int3
out
sbb
out
sbb
int
jecxz
xchg
mov
xchg
xorl
push
cmovns
jp
inc
mov
push
roll
sub
enter
int
and
xchg
popa
loope
fsubl
aam
add
hlt
mov
xor
mov
movsb
xor
in
int
jle
rol
pop
ja
enter
mov
push
sbb
lods
xchg
push
adc
pushf
sub
in
in
popa
rcl
mov
mov
cmp
out
shrl
or
jo
test
xchg
xchg
sub
lds
dec
loop
ret
inc
decl
sub
loop
iret
int3
pop
fldl
inc
filds
mov
popa
addr16
js
push
jns
xchg
in
aad
mov
in
add
dec
and
jne
dec
inc
and
jnp
xchg
inc
sbb
scas
cli
push
cmp
dec
push
mov
add
and
repz
bound
andb
and
in
fnstenv
push
cmp
ret
aam
test
add
aam
pop
lea
addr16
fucom
xor
rorl
orb
pop
add
dec
jl
out
jae
aas
add
fisubrl
xchg
dec
push
scas
ret
je
and
dec
lock
out
xor
das
sti
je
in
out
dec
dec
xorl
fs
cmp
out
mov
adcl
adc
nop
ret
fcoms
rclb
inc
ja
les
ret
adc
aad
dec
lds
arpl
pop
push
and
mov
stos
pop
nop
inc
xchg
movsb
ds
aas
stos
or
sub
sbb
adc
xchg
loope
nop
test
push
mov
mov
aam
or
mov
push
lods
pop
jmp
inc
xchg
jge
xor
mov
and
shll
sub
js
mov
jl
and
sub
sub
or
fld1
inc
xchg
das
mov
iret
bound
mov
popa
lods
cs
push
cltd
das
cs
xor
or
pop
arpl
fiadds
rcrl
outsb
andl
inc
push
sti
mov
cmpsb
sbb
pop
pop
test
js
or
or
pushl
push
scas
push
xchg
mov
adc
add
ss
in
out
mov
xor
repnz
pop
repz
sbb
rorb
push
jg
lock
lock
movsl
mov
add
loop
mov
xchg
jg
cltd
fdivr
pop
call
and
adc
mov
push
and
adc
mov
std
stos
dec
push
outsl
sbb
sbb
mov
xor
sahf
or
ja
ljmp
push
outsl
inc
inc
in
sbb
push
popa
or
lret
cld
sub
push
add
jg
dec
stos
fidivrs
jo
jmp
sbb
add
pop
jmp
stos
shll
pop
mov
jo
push
popa
lods
add
push
mov
popa
loopne
jmp
insb
jl
mull
jg
push
loope
lcall
or
inc
inc
nop
clc
mov
push
pop
xor
cmp
out
push
mov
add
mov
div
push
lret
dec
dec
pop
push
ds
shrl
mov
push
lret
lods
mov
inc
sub
dec
pop
sarb
js
mov
inc
mov
cli
or
push
xlat
xchg
aas
pop
mov
adc
push
fistl
mov
xchg
stc
outsb
imul
shl
adc
pop
loopne
xchg
xchg
test
push
pop
dec
xor
push
adc
sub
roll
lods
movsb
sub
pusha
xchg
repz
push
sub
ljmp
ljmp
xchg
jne
data16
or
cwtl
push
mov
outsb
pusha
lods
or
aaa
pop
inc
rolb
jno
comiss
iret
xor
and
mov
loope
sti
dec
sahf
das
jb
pop
mov
shll
jne
addr16
cmpl
push
adc
xor
mov
mov
jae
std
push
sahf
lock
into
icebp
test
es
movsl
popa
outsl
sub
cmp
push
xchg
or
je
push
in
arpl
mov
les
mov
xor
scas
jnp
fldcw
jne
jo
mov
adc
dec
dec
shll
andl
mov
cld
addr16
std
mov
push
push
sahf
andl
data16
int
icebp
mov
jmp
arpl
xor
mov
push
cmp
ret
aaa
sti
add
sbb
jb
and
cmpsl
inc
add
mov
adc
pop
pusha
pop
xor
outsl
adc
mov
shlb
pop
cmpsb
inc
pop
cs
adc
xchg
push
jns
fadds
dec
pop
icebp
push
or
ljmp
mov
pop
add
push
push
jecxz
adc
movsb
xor
shrb
push
inc
sub
and
lret
fs
inc
mov
mov
xor
outsl
fdivs
ret
cmp
adc
gs
dec
frstor
mov
dec
and
das
imul
dec
jl
out
add
and
lea
fidivl
mov
jge
popa
sahf
std
movsb
adc
or
inc
mov
mov
pop
pop
jns
stc
inc
fisubl
enter
cltd
dec
pop
aad
bound
dec
imul
sbb
sbbl
out
adc
jns
dec
inc
mov
fcmovnu
jnp
add
pushf
jmp
fwait
xchg
and
jo
pop
out
and
test
test
xor
xchg
push
icebp
lods
jle
cmpsl
mov
je
mov
mov
jo
dec
adc
push
cmp
push
test
shlb
xchg
xchg
nop
leave
lret
mov
pop
jnp
and
or
mov
push
gs
cli
push
push
repnz
add
jg
shrb
fwait
dec
iret
test
mov
and
cmp
dec
xchg
iret
mov
add
andl
cld
jns
stos
out
sbb
les
adc
lret
lock
xchg
and
add
pop
lcall
mov
faddl
push
pop
icebp
cmp
dec
outsl
repnz
loop
mov
sub
addr16
lds
out
inc
insl
mov
adc
xor
xor
dec
pop
ja
adc
jl
shrl
push
movsb
sbb
add
aam
popa
jmp
xlat
cmp
sti
cmc
mul
mov
or
ss
push
into
jne
dec
addr16
pop
arpl
push
xor
push
jmp
cmpsb
cltd
loopne
jne
pop
ljmp
cltd
sahf
ss
loop
inc
cwtl
adc
xchg
pmaxsw
scas
cmp
lret
sub
ret
aam
xorl
push
inc
sub
mov
mov
jge
mov
stos
pop
or
daa
fnstcw
jae
mov
in
and
mov
sbb
es
fcoml
cwtl
lods
sbb
pop
cmpsb
xor
scas
out
mov
push
mov
test
cwtl
or
pop
mov
mov
out
ja
fdivl
je
inc
ds
mov
sti
jg
mov
add
mov
ljmp
mov
mov
lea
xchg
pop
hlt
mov
pop
pop
movsl
cmp
cmpsb
ja
jg
stos
push
iret
test
nop
bound
dec
xlat
lea
sbb
jnp
or
mov
stos
jnp
dec
int3
xchg
fnstenv
cmp
push
push
popa
ljmp
xor
push
jns
jle
test
mov
dec
dec
ret
loopne
jns
std
cli
mov
push
xor
cmp
pop
das
cltd
ret
cvtdq2ps
enter
sahf
dec
push
pop
pop
shll
rcr
xor
and
pop
popf
pop
xchg
movb
ret
jecxz
pop
into
fmul
cmc
dec
ror
mov
addr16
push
xchg
mov
mov
mov
cmpl
jle
cs
mov
lods
out
stc
pop
xor
out
lock
scas
das
repnz
xchg
fcomip
in
out
inc
pop
adc
dec
aad
add
out
enter
cs
imul
cmp
stos
mov
adc
jo
pop
jmp
push
adcb
pop
sub
pop
jmp
dec
lahf
out
in
xor
ret
shll
imul
pop
std
cmc
leave
scas
stos
mov
inc
mov
cltd
arpl
add
test
xchg
mov
jecxz
out
dec
cmp
sbb
cmp
movsl
sbb
stos
stos
and
cwtl
mov
pop
sbb
cmc
jl
jl
adc
dec
jg
scas
adc
xor
mov
inc
and
popa
xor
imul
jno
dec
sub
cmpl
sti
sub
nopl
rcrl
in
xor
test
and
cmc
jg
out
inc
jb
xchg
pop
cltd
and
xchg
inc
inc
stc
or
sbb
pop
dec
and
outsb
pop
cmc
jmp
cmp
fisttpl
xlat
lret
lods
std
popf
jae
mov
cmp
movsl
sub
ret
or
dec
popa
cmpsl
ret
and
repz
mov
andb
jns
sahf
pop
roll
out
lret
pushf
cld
repz
mov
jmp
adc
je
sti
and
in
decb
xor
push
clc
jge
orb
enter
pusha
add
stos
mov
or
negb
push
and
std
pop
data16
dec
mov
out
jp
pop
loopne
pushf
sub
add
sub
ret
push
shl
sahf
xchg
push
sub
sbb
ret
into
popa
mov
addr16
or
fcmovnu
jns
sub
push
xchg
fdivrs
out
aaa
call
adc
pmulhw
and
roll
lcall
sbb
inc
test
xchg
in
pop
mov
call
test
xchg
mov
aaa
out
enter
cmp
lcall
adc
ret
mov
or
imul
enter
pcmpgtb
push
nop
pusha
dec
mov
mov
ja
or
jg
adc
cmp
jnp
inc
roll
and
adc
int
xchg
rolb
outsb
jmp
andb
out
lret
decb
int
popa
pop
fcomi
jne
or
aam
adc
stc
adc
aam
xchg
cld
jg
xor
adc
fadds
mov
mov
sub
and
sbb
inc
mov
dec
test
lret
inc
frstor
xor
lret
imulb
inc
and
adc
dec
in
mov
lods
test
inc
iretw
lea
daa
mov
aaa
clc
pop
jno
pop
scas
addb
pop
fnsave
imul
adc
jbe
pop
or
stc
sub
or
aaa
inc
lods
js
adc
jecxz
cmp
sub
pop
sti
push
xchg
aad
dec
sub
xor
dec
sarl
inc
sub
push
add
outsb
inc
stc
imul
in
test
inc
and
movsb
popa
add
in
push
inc
loope
int3
jg
scas
shlb
add
jg
fucomp
lcall
jns
jae
ret
xchg
xor
dec
push
cmpsb
les
out
cmp
test
lret
lds
imul
adc
pop
push
mov
mov
sub
fdivrs
das
rorb
enter
jl
lods
ret
sbb
or
vucomiss
pop
or
aam
mov
mov
loopne
push
inc
pop
add
and
repnz
dec
jmp
aaa
loop
pop
rcrl
lcall
cmp
int3
push
aad
lret
outsl
rolb
push
outsb
out
jp
jmp
dec
cmp
or
imul
repz
scas
andl
jecxz
repnz
mov
inc
stc
push
jmp
mov
adc
fstps
push
lahf
aas
in
pop
mov
popa
push
test
fs
pushl
ret
bound
stos
sar
aas
in
xchg
lret
xchg
jae
out
insb
cmp
jae
aaa
les
in
sahf
or
cmpsl
lret
add
or
js
enter
jecxz
jmp
xorl
adc
insb
mov
fdivl
pop
insl
stos
pusha
movsl
xchg
mov
cli
lock
inc
movsl
imul
inc
divl
je
or
fidivrl
push
push
cwtl
leave
out
inc
shll
inc
and
or
lds
xchg
push
and
xchg
test
adc
cmp
mov
jg
push
lds
fcom
outsb
sub
mov
enter
add
stos
ljmp
mov
or
test
jmp
lds
repnz
fmul
sbb
fiadds
add
mov
icebp
fbld
jae
lret
orl
scas
jge
jbe
in
iret
fstpt
sub
dec
rorl
or
cmp
mov
stos
mov
and
je
enter
test
stos
lods
lods
xor
sbb
enter
push
fidivrs
push
adc
pop
pop
sti
arpl
xchg
std
cli
and
push
push
and
sahf
cmpsl
jmp
pop
leave
cmp
jno
stos
loopne
mov
outsl
int
adc
fmul
jl
or
or
jmp
fwait
insl
stc
sar
mov
sub
xchg
push
xchg
cld
mov
loop
push
cs
or
add
cwtl
aas
fldcw
mov
cmpsl
into
push
adc
dec
xchg
ja
push
or
stos
or
jne
sahf
add
cmp
je
jmp
insl
jecxz
rol
cltd
mov
pop
jne
out
mov
xor
fcmovbe
xchg
aaa
leave
jmp
dec
inc
push
mov
cld
push
adc
jmp
nop
cmpsl
xchg
fs
sbb
xchg
cmc
sti
or
stos
and
inc
ror
int3
test
testl
sbb
cmp
movsl
pushf
xor
xchg
sub
jne
ja
sbb
imul
testb
pushf
pop
adc
psrlw
ret
dec
mov
idivb
add
cld
and
jbe
scas
sbbb
or
ljmp
pop
stos
dec
or
sahf
shlb
mov
xor
jg
jae
into
sarb
pop
sub
xchg
std
shll
daa
js
cmpsb
fcomi
xor
push
rorl
ficoml
jl
sub
pushf
shlb
sbb
iret
sti
dec
aaa
jmp
pop
cld
cld
xchg
into
movsb
push
jnp
mov
sarl
cld
push
int
idiv
aaa
das
pop
fwait
jmp
mov
or
hlt
xchg
mov
xlat
push
lahf
xchg
sbb
cmp
aad
mov
push
pop
add
pop
xchg
in
xchg
lret
rcrb
xlat
cmc
mov
mov
cmp
inc
sti
inc
mov
pop
mov
leave
in
in
dec
mov
clc
cwtl
adc
adc
add
mov
ffree
sbb
mov
push
jne
mov
and
or
call
mov
mov
pop
shll
pusha
mov
mov
dec
sbb
repz
cmpsl
cmp
adc
enter
out
lock
add
adc
fistps
xchg
sbb
orl
insb
xchg
adc
mov
pop
add
push
cld
mov
pop
call
jb
imul
xorl
movsl
dec
mov
push
add
mov
sub
mov
mov
push
nop
sbb
je
sbbl
fstp
jns
popa
adc
outsb
in
aaa
lods
mov
cli
xor
fiaddl
lods
lds
stc
mov
negb
cmp
cld
inc
and
lods
jbe
add
in
xor
xchg
add
cld
or
or
jne
inc
pop
addl
out
cmp
loopne
mov
or
xchg
aaa
xchg
cmp
xor
jbe
jg
rolb
add
es
xlat
insl
call
push
loop
xchg
inc
lahf
loop
shl
mov
lret
jns
push
pop
inc
sbb
in
stc
clc
mov
mov
movsl
cltd
jl
push
rcrl
hlt
xlat
int
jne
xchg
xchg
sbb
pop
lea
popa
xchg
dec
push
cld
leave
inc
adc
test
dec
pusha
cli
or
ficomps
inc
pop
pop
jns
add
cs
mov
adc
add
cmpsl
mov
dec
insb
repz
loope
xchg
adc
testl
ficompl
call
stos
lea
daa
jl
andl
aad
insl
pusha
shll
fadds
pop
or
lods
xlat
out
dec
cwtl
mov
les
dec
out
pop
xorl
sub
aam
pop
popf
test
jne
add
jp
mov
arpl
sub
decb
jno
jo
xor
mov
jb
push
mov
scas
cmc
ss
sbb
and
scas
push
aas
ja
or
outsl
imul
fucomp
pop
hlt
pusha
and
xor
int3
movsl
mov
dec
out
mov
fistpl
fs
daa
divb
repnz
mov
cwtl
loop
cs
jp
sub
and
sarl
inc
xor
mov
jecxz
inc
in
ficompl
stos
add
stos
sti
into
and
cmp
repz
jo
pop
or
sbb
sbb
mov
dec
or
nop
mov
mov
dec
fmuls
ret
mov
push
cmc
push
int
sub
mov
invd
insl
nop
imul
push
js
inc
xlat
sbb
pop
int
nop
mov
jb
or
ds
cmpsb
inc
inc
rcr
or
and
and
xlat
fisttpl
andl
enter
sbb
imul
lahf
mov
mov
out
in
inc
sub
loop
mov
stc
pop
mov
cmp
xchg
rcl
adc
shlb
adc
call
or
xchg
lods
jnp
lea
lcall
push
je
sar
aaa
out
aad
adc
test
lcall
sub
dec
push
dec
jbe
jne
pop
adc
adc
jl
dec
in
test
insl
fildl
nop
mov
push
and
out
mov
bound
add
adc
es
jb
sub
dec
fsubrs
push
sar
aad
add
std
pop
std
sbb
sahf
fildll
das
sbb
int
sub
or
push
bound
push
pop
mov
call
push
fisttps
pop
and
jge
shll
ret
mov
popf
jns
dec
jno
jae,pt
insb
test
adc
icebp
dec
mov
pop
in
stos
jmp
adc
mov
mov
adc
subb
push
mov
lds
imul
xchg
mov
add
addb
daa
clc
loope
or
or
jo
in
mov
sbb
in
cwtl
sub
ret
xor
ret
sbb
es
imul
push
ss
imul
and
dec
out
mov
movsl
mov
lahf
or
fiadds
inc
dec
ds
mov
into
push
fwait
inc
rcrl
mov
pop
stos
ror
loop
nop
xchg
jne
pop
and
add
pop
cwtl
dec
xlat
outsb
mov
jecxz
fsubl
xor
cmp
ret
fildll
cmp
outsb
fadds
jb
mov
fisubrl
push
cmp
andb
jp
and
mov
sbb
ret
adc
out
test
push
mov
repnz
fmuls
fcomp
and
xchg
push
xor
xchg
insl
pop
popf
add
mov
popa
js
test
call
inc
mov
repz
lcall
jmp
daa
xlat
or
mov
mov
shrl
outsb
adc
cmpsl
das
mov
hlt
scas
jno
mov
stos
dec
add
and
in
in
pop
cmp
enter
sbb
push
cs
cmp
scas
lds
ret
adc
xchg
stos
pop
loop
push
push
lahf
outsb
xlat
movsl
sbb
fistl
push
sbb
add
jne
outsl
ret
lret
dec
pop
lret
stos
pop
inc
jb
jne
jecxz
mov
xchg
inc
push
scas
test
rorb
adc
adc
xchg
xchg
bound
or
mov
xchg
mov
xor
mov
pop
fldt
mov
xchg
arpl
leave
ret
mov
mov
xchg
and
lea
ds
mov
jns
mov
out
js
pushf
jae
inc
out
lcall
inc
imul
out
jecxz
dec
jne
sub
sbb
xchg
out
pop
jmp
xor
xchg
mov
aad
inc
pop
ja
std
fstps
icebp
add
fidivrs
sbb
test
and
dec
subb
mov
lods
pop
pop
fwait
mov
insb
dec
les
sbb
repz
mov
jge
push
sbb
push
pop
ja
mov
inc
fisubrs
or
mov
sahf
adc
out
jmp
sbb
je
inc
adc
loope
ljmp
or
jecxz
imul
repz
sahf
test
stc
pop
mov
mov
or
aas
adc
popa
mov
jnp
pop
push
adc
inc
push
jns
add
or
sub
fxch
adc
push
je
lret
xchg
sahf
popf
lods
lcall
lods
xchg
mov
lret
xchg
jecxz
mov
inc
ficoml
ss
out
mov
xor
lahf
ret
sub
xchg
dec
lahf
andb
or
fsts
mov
mov
lods
aad
push
mov
fwait
aam
xor
mov
mov
mov
test
add
or
dec
pop
andl
jle
movsl
inc
push
mov
push
out
mov
jl
xchg
bound
or
cmp
sbb
sbbl
sub
inc
sub
mov
lret
pop
in
sbb
gs
divb
push
movsl
enter
leave
push
or
sub
stos
data16
mov
mov
adc
add
testb
add
fmuls
cmp
movhps
fiaddl
dec
ja
xchg
mov
cmpsb
aaa
lods
insl
sbb
arpl
mov
or
lret
fnstcw
out
aam
pushf
loope
test
das
cmpsl
cwtl
sub
cld
cld
xlat
pop
cmp
ret
dec
jg
mov
outsb
dec
dec
movsb
pop
jmp
sbb
addl
scas
fs
cwtl
xlat
and
hlt
insl
je
dec
cmpsb
nop
rcr
xchg
inc
fs
inc
out
xchg
add
mov
push
pop
enter
leave
cmpsl
cmp
and
cmp
pop
in
or
mov
push
sbb
movq
fmul
jne
jbe
shll
and
out
jle
sahf
pop
lock
aam
xchg
arpl
dec
fwait
test
mov
adc
into
inc
pop
push
pop
pop
aas
xor
test
dec
xor
arpl
mov
mov
cmpsb
fwait
out
out
mov
nop
xchg
lret
repz
inc
inc
rcrb
mov
in
cmc
pushf
pop
repz
test
neg
stos
dec
mov
ss
subb
cs
push
lret
push
add
pop
xchg
fldl
stos
push
hlt
cwtl
or
fidivrl
and
xchg
pop
iret
dec
popa
pop
insl
pop
lret
mov
mov
nop
lcall
mov
subb
aad
mov
xchg
xchg
scas
int
sub
cmpsl
inc
lock
lret
in
jl
cltd
cmp
pop
adc
ffree
push
test
enter
inc
out
mov
mov
mov
add
mov
adc
sub
dec
add
fwait
or
test
and
ljmp
adc
mov
jecxz
and
sbb
pop
aam
mov
push
mov
push
imul
jns
xchg
mov
adc
ret
int3
adc
stos
jnp
insb
or
xchg
xorb
jmp
cmc
xchg
add
movsb
xchg
inc
inc
or
fcmovu
addb
pop
push
icebp
sub
inc
xor
pop
mov
inc
outsb
pop
lret
bound
mov
shrb
scas
or
out
sbb
and
xor
mulb
dec
cmc
icebp
out
out
out
hlt
jl
adc
jnp
cmc
divb
mov
mov
or
dec
sarb
loop
pop
movsb
rcrl
cld
pop
int3
push
mov
xor
inc
push
fidivrl
or
gs
arpl
aam
cmp
fisttps
idivb
adcb
aad
les
daa
decl
push
jno
fistpll
add
pop
push
xchg
dec
or
add
test
dec
mull
push
add
loopne
mov
pushf
xchg
jge
ret
clc
les
mov
jp
add
and
mov
push
xchg
fs
fwait
pusha
rcrl
insl
or
loope
dec
and
add
repnz
cmp
lods
gs
in
inc
aaa
les
xor
out
popl
push
lahf
mov
test
xchg
and
adc
jnp
adcl
das
dec
lds
sub
dec
and
shl
cltd
cli
mov
jp
add
pop
out
sbb
mov
js
mov
jbe
sbb
mov
jl
scas
jge
or
cli
sub
dec
rolb
les
lcall
pop
rcrl
xor
mov
add
jns
push
mov
dec
sbb
mov
sub
loope
xchg
fnsave
xorl
and
in
and
mov
std
push
mov
xchg
jae
lock
adc
pop
add
out
cs
mov
mov
jg
xor
or
and
sub
lock
in
mov
mov
outsb
inc
jne
mov
xchg
test
push
mov
out
nop
repz
inc
xchg
inc
cmp
sbb
pusha
and
xchg
push
and
or
dec
movsb
push
sbb
xor
rolb
cmpsb
js
xchg
test
jmp
aas
iret
add
cmp
inc
add
mov
sti
push
sub
shrl
shl
sub
addr16
pop
movsl
sub
pop
leave
insb
push
mov
aam
sti
or
dec
adc
sahf
popf
lds
add
mov
lea
pop
adc
add
pandn
cld
jo
lcall
adc
jne
imul
xchg
xlat
and
loopne
leave
sti
sar
mov
cli
gs
enter
mov
xchg
adc
mov
sbb
decl
lock
jbe
rcrb
jg
arpl
cld
sbbb
or
adc
push
jno
rol
hlt
pop
shrl
mulb
xor
cmp
addr16
adc
xchg
push
test
loope
mov
jne
addr16
xlat
inc
xor
stc
sub
rcrl
gs
decl
lock
data16
pop
leave
or
xchg
out
add
lods
in
xchg
and
jnp
pop
pop
in
popf
xchg
mov
push
loope
or
xor
ljmp
jmp
lahf
xchg
jge
and
pushf
dec
add
jecxz
xchg
aam
loope
or
leave
je
xchg
aas
insl
jbe
fidivs
jb
xchg
popf
push
inc
lock
pop
mov
stc
in
pop
mov
stos
lahf
xor
mov
mov
aas
call
cwtl
pop
jbe
out
lea
jmp
xor
mov
inc
mov
andb
loop
sbb
dec
std
add
pop
mov
jno
movsl
dec
mov
dec
and
icebp
cmp
jne
push
jg
cmpsl
or
mov
mov
mov
xchg
out
jp
icebp
or
dec
jmp
enter
into
ja
fldenv
add
outsb
push
jae
sbb
xchg
in
fxam
popa
test
popf
rcl
shlb
scas
ds
stc
pop
loopne
push
jne
ficomps
fwait
mov
mov
inc
rcl
mov
mov
mov
ret
pop
pop
sub
cmp
fstps
and
xor
and
jns
mov
loopne
jb
add
cld
aaa
mov
xchg
dec
jne
clc
xlat
fsub
int3
jno
imulb
and
push
add
lret
roll
push
movsb
sbb
ficomps
jnp
std
sbb
pop
test
mov
push
jbe
lds
ss
xlat
or
popa
loopne
mov
inc
mov
pop
fwait
add
lcall
sbb
sub
dec
jg
cltd
push
sub
addl
and
adc
shll
and
sbb
pop
cld
sub
mov
stos
pop
pop
push
lret
cmp
xor
in
push
xor
lahf
pop
inc
push
add
mov
dec
cltd
xor
lahf
fildll
ss
push
and
push
gs
icebp
shll
movsb
xor
orl
mov
inc
push
cld
push
imul
pop
insb
test
shlb
sub
int3
fnstsw
add
jb
jecxz
inc
sar
and
in
nop
or
lods
jnp
adc
push
aad
ja
and
out
and
dec
mov
outsb
cmc
dec
jmp
fwait
or
inc
fdivr
sbb
in
xchg
punpckhbw
mov
dec
add
push
pop
cld
inc
pop
outsl
mov
adc
enter
mov
inc
jnp
lods
scas
int
adc
cmp
dec
and
rorl
mov
in
std
jg
jae
cli
call
daa
cmpsl
cmpsb
inc
xor
pop
insb
jl
push
push
cmp
pusha
push
aaa
sbb
enter
in
popa
ljmp
cmpps
clts
inc
jno
inc
cld
xor
fistl
push
aad
dec
lods
movsb
mov
cwtl
adc
nop
pushf
cmp
xchg
ljmp
scas
lret
xor
mov
add
outsl
adc
xor
pusha
xor
sub
rolb
cmp
lahf
pusha
outsb
dec
xor
xlat
js
mov
mov
fisttpll
test
pop
repz
arpl
xor
pop
xlat
pop
sbb
push
jns
sti
cmc
ss
in
cmp
in
je
sbb
ljmp
push
cs
xchg
je
mov
lock
mov
cli
mov
fbstp
and
push
mov
inc
pop
outsl
mov
lret
das
jle
add
in
out
push
jns
out
add
xor
out
pop
pshufw
push
movsl
adc
dec
and
pop
jae
loope
cli
xchg
ja
daa
shlb
add
in
cmpsb
xchg
push
pop
sahf
leave
cmc
lcall
cmpsl
cwtl
stos
mov
add
stos
add
xor
inc
mov
loop
rcr
sbb
lret
shll
push
addr16
aam
or
outsl
jae
flds
and
daa
mov
aas
stos
shrb
xor
in
out
jnp
and
es
or
lods
push
shll
adc
sysret
sub
pop
xchg
inc
mov
adc
repnz
dec
jmp
ljmp
test
xchg
ja
inc
sbb
insl
or
inc
xchg
iret
push
orl
pop
mov
sbb
sub
test
pop
lock
mov
aas
aaa
jnp
mov
fimuls
loope
sti
sub
fnstsw
inc
pop
inc
push
xor
pop
jmp
stos
stc
popf
sbbl
lcall
push
xchg
outsb
xchg
dec
lea
ja
movsb
dec
xor
in
dec
scas
dec
cld
fsubl
das
arpl
sub
mov
ret
insl
lfs
cmc
xlat
and
ret
outsb
push
xor
out
mov
jecxz
stc
jecxz
rorl
shr
mov
pop
cmp
push
in
pop
jne
add
sarl
adc
aas
faddl
inc
inc
sbb
xor
mov
les
push
xor
add
mov
faddl
add
dec
ss
rcrl
jg
imul
ficomps
andb
jno
int
xor
push
jae
inc
or
mov
int
mov
mov
lods
adc
loop
mov
arpl
out
stos
jmp
movsl
frstor
adc
pop
mov
xlat
scas
negl
and
or
in
movsb
xor
in
xchg
sti
push
aaa
jno
filds
imul
mov
pop
iret
or
pushf
or
mov
push
movsl
cmp
daa
push
gs
sub
mov
sbb
and
aaa
sbb
or
jge
data16
inc
pop
pop
mov
mov
int
jge
idivb
divb
xchg
fs
add
js
mov
enter
adc
jge
loopne
in
mov
gs
pop
in
cmp
fimull
xchg
cmp
adc
push
mov
mov
pushf
mov
imul
push
mov
or
bnd
mov
cmp
dec
jb
or
sub
in
inc
or
je
push
mov
dec
movsb
lret
xchg
jns
lock
xchg
jl
cwtl
fisubs
add
enter
add
sti
pop
rcl
stos
sbb
fmuls
mov
lret
not
cmp
loope
and
aam
faddp
xchg
jbe
outsl
jmp
in
add
outsl
push
xor
push
int
cli
jae
xchg
outsl
imul
gs
inc
addr16
xchg
addr16
cmp
mov
push
mov
mov
xor
xor
arpl
mov
out
xchg
fildll
subl
cmp
sbb
ret
mov
add
test
and
push
cwtl
cmp
jp
loope
ret
cld
cmpsl
jo
xor
add
cmp
and
sbb
ja
mov
push
mov
popf
xor
ss
dec
pushf
popf
cs
push
push
sbb
lret
leave
or
pop
data16
test
addl
adc
sti
into
mov
dec
loopne
lds
fwait
test
loope
jns
in
jl
pushf
mov
shl
cmp
mov
mov
or
cmp
and
cli
jmp
mov
mov
movsl
add
mov
test
aam
in
mov
cld
add
sti
push
add
xchg
or
mov
sub
je
push
adc
and
cmp
fdivrp
xor
sub
sbb
mov
sahf
bound
ja
cmpsb
and
test
xor
and
dec
lea
rcl
loope
lods
ds
or
insb
add
sub
test
gs
cmovnp
xor
push
xor
push
inc
xchg
imul
mov
fmull
mov
fs
mov
mov
cmpsl
aas
stos
xor
xor
pop
insb
fadd
stos
lret
aas
mov
push
xchg
push
pop
cs
cltd
aad
xor
cli
jge
push
sbbb
or
mov
rcr
int3
xchg
mov
arpl
loope
jecxz
or
in
sbb
mov
xor
aam
adc
xchg
sbbb
imul
mov
mov
push
pushf
pop
testb
mov
outsb
pop
addb
into
lods
shll
xchg
lret
sbb
imull
lahf
cmpsb
shll
leave
fistl
xor
adcb
pop
sbbl
xchg
sbb
adc
test
jb
into
or
call
test
sbb
sbb
jle
in
loop
int
in
pop
and
jp,pn
cmp
stos
jl
jle
stos
not
pushf
das
or
cmp
gs
xor
je
repz
lods
mov
dec
mov
push
scas
pop
sbb
dec
std
scas
xor
stc
das
aaa
push
stos
sub
mov
sbb
je
les
and
sbb
ds
popa
popa
stos
fldl2e
mulb
jbe
push
dec
fcom
cmp
pop
pop
cli
cmp
and
in
sub
jnp
mov
sub
pushf
inc
xchg
fsubs
pop
cmpsl
repz
lahf
test
jns
shl
out
jnp
hlt
pusha
xor
stos
add
nop
xchg
into
inc
mov
in
and
sarl
sbb
xor
jo
push
sbb
push
adc
xchg
xor
and
mov
ds
arpl
push
or
mov
mov
mov
stos
dec
jecxz
fst
in
sub
xchg
pushf
nop
cmc
cmp
imul
rcll
je
insl
jg
lods
test
gs
rolb
cmp
loopne
les
adc
adc
stos
cmp
int3
pop
jno
aas
push
mov
hlt
mov
sbb
test
fldcw
cwtl
adc
hlt
inc
jl
sbb
mov
adc
into
sarl
out
mov
jae
add
sub
test
sbb
or
mov
addr16
push
cmc
jnp
in
pop
push
xlat
repz
pop
xor
mov
aam
sti
xlat
cs
andl
in
test
dec
scas
dec
push
aaa
insb
push
jge
dec
push
test
cltd
loope
aaa
jbe
add
cld
hlt
loope
stc
jmp
js
fsub
or
add
and
scas
ljmp
inc
mov
and
scas
push
sub
adc
leave
mov
adc
insl
adc
mov
pop
adc
mov
inc
fildl
xchg
pop
test
xorl
cmp
lea
jae
call
sub
and
add
push
test
rclb
inc
lahf
aam
and
inc
cmp
jo
jb
in
mov
repz
jbe
xchg
xchg
rol
in
aas
xchg
jo
fs
dec
adc
mov
out
sbb
stos
mov
inc
test
dec
mov
pop
push
icebp
dec
andb
mov
xchg
push
jo
pop
adc
inc
push
jmp
push
cli
int3
jle
cltd
fwait
push
loop
data16
ds
out
xchg
nop
lods
mov
mov
loope
mov
mov
ljmp
mov
add
adc
lret
lcall
repnz
lods
dec
xchg
pop
lock
movl
in
nop
mul
sahf
fsubs
hlt
mov
xor
push
push
popf
cltd
out
xor
fdivr
dec
jmp
ror
jmp
sub
adc
pushf
mov
pusha
pop
push
movsb
dec
add
stos
sarl
aad
psubb
pop
mov
mov
cli
gs
push
fwait
push
or
cmc
test
mov
and
jno
adc
push
pusha
in
stos
scas
aad
sbb
je
loopne
pop
or
push
std
or
out
pop
test
adc
jbe
pop
ret
adc
hlt
ffreep
mulb
add
pop
pop
add
rcr
jmp
or
mov
sub
adc
cmp
lods
push
xchg
pop
mov
sbb
idivl
add
sub
mov
sub
jle
xchg
jecxz
das
or
aam
jle
inc
push
or
les
mov
push
arpl
pop
mov
jns
icebp
adc
popf
push
and
fidivrs
push
inc
lret
ret
xchg
popf
repz
or
pop
adc
in
push
out
lds
add
ss
push
sub
out
jle
mov
cmp
lods
mov
shl
jmp
decb
test
push
call
sbb
cmp
loop
xor
push
in
adc
cmpl
dec
pop
div
sbb
cld
aaa
loopne
dec
aaa
int
ja
jb
jne
jle
lea
and
lret
out
jge
cmp
jno
in
push
fcmovnu
fidivrs
push
xchg
aam
data16
bound
int
lahf
out
push
lea
lods
mov
sub
outsl
push
jne
lods
push
add
aad
pop
adc
loopne
or
push
cmp
gs
repnz
int
and
push
inc
std
incl
dec
xor
xchg
aas
cmp
out
mov
aaa
and
mov
xor
jno
sbb
sbb
dec
fimull
cs
add
mov
aas
xlat
xchg
mov
add
xor
xor
shl
mov
push
push
jnp
xchg
ds
fs
dec
dec
cmp
fwait
mov
dec
and
les
fs
pop
jae
shrb
icebp
andl
rorl
push
ljmp
js
or
add
mov
or
popf
xor
adc
out
adc
xor
push
out
jge
ss
test
sub
or
loope
dec
dec
or
xchg
movsb
cmpsl
out
rorl
mov
push
lcall
ja
and
jle
pushf
pop
lods
loop
pop
in
jl
jne
imul
test
popa
jp
loopne
push
std
mov
mov
int3
pop
mov
js
insb
and
pop
mov
mov
pushf
xor
das
push
inc
sbb
loopne
sub
dec
pusha
hlt
jnp
dec
jge
lea
mov
push
inc
push
fdivrl
out
nop
xchg
jno
adc
jp
fs
scas
orl
pop
pop
lret
mov
adc
int3
pop
mov
or
enter
cmp
aas
add
push
push
or
psllw
xor
cmp
mov
sub
insl
jae
lock
pop
add
inc
cmc
bound
sbb
or
pop
xchg
dec
std
ja
outsb
push
xchg
pop
mov
rcl
ret
fimull
sbb
shll
lahf
xchg
mov
push
xor
sub
push
or
mov
js
add
sub
scas
subb
mov
in
xchg
std
sti
adc
test
pop
push
bound
add
fmuls
rol
jge
fdivp
iret
lock
sub
inc
jb
mov
xchg
xchg
dec
dec
out
repz
lods
inc
push
jne
xor
cltd
stc
cld
or
push
sbb
aaa
push
and
cld
dec
jmp
lea
mov
sbb
cmp
mov
insl
loop
lret
jp
arpl
daa
fisubs
data16
aas
ss
lock
nop
xchg
adc
push
lods
jb
sbb
jno
test
shll
push
aam
push
mov
adc
clc
iret
enter
and
insb
test
mov
xchg
fstps
dec
mov
jge
scas
sub
lods
in
fdivrl
and
outsl
sub
lea
inc
dec
adc
mov
shrl
out
dec
pop
into
shrl
lds
sub
inc
mov
jg
nop
adc
mov
push
call
test
int
xor
aas
cmp
sub
lret
adcl
sub
add
fucomi
xorl
loop
insl
test
xor
ljmp
out
xor
sbb
in
jle
jmp
mov
lcall
stc
addr16
dec
mov
cmp
repnz
cwtl
ficoms
pop
mov
mov
mov
xchg
imul
inc
adc
push
lock
stos
add
fidivrl
jl
mov
sub
and
insb
mov
pop
dec
cmpsl
popf
jbe
sbb
cmp
test
and
jno
xor
push
xchg
inc
dec
divb
lods
cmp
js
mov
mov
and
cltd
or
sti
fdivl
fwait
mov
aad
or
mov
xor
and
adc
testb
imul
fstpt
iret
hlt
or
pop
lret
das
mov
jbe
mov
ljmp
nop
pop
adc
test
clc
into
mov
sbb
enter
inc
sbb
sub
clc
pop
orb
divb
and
jnp
mov
test
and
leave
sub
mov
in
adc
test
js
jg
adc
fcoml
fidivrl
sub
xchg
lds
int
loope
jmp
xor
mov
cmp
in
or
xchg
xorl
incb
mov
pop
repz
subb
xchg
jl
and
sub
dec
xor
or
inc
xor
sbb
adc
ljmp
xlat
roll
iret
push
pop
xchg
adc
scas
enter
and
jp
lret
mov
mov
xor
jne
insb
xchg
sbb
in
mov
adc
aaa
mov
mov
fstl
cwtl
lea
jnp
sub
xchg
mov
ljmp
fcmovbe
sub
jg
lds
test
mov
pop
sub
mov
mov
xchg
stos
jecxz
xchg
sti
mov
push
pop
repz
clc
xchg
lock
xlat
rclb
ss
xor
ja
sbb
mov
imul
mov
ss
leave
add
mov
imul
daa
push
or
aas
mov
mov
or
mov
lcall
testl
mov
xchg
sbb
jnp
lock
notl
add
dec
jmp
sbb
pop
pop
cmpsb
xchg
popf
arpl
mov
push
repnz
jae
or
test
out
jne
inc
mov
das
das
or
add
pop
fsubr
push
pop
hlt
in
push
and
dec
hlt
mov
test
add
das
je
cmp
jle
imul
das
das
push
pop
mov
and
inc
enter
mov
roll
adc
popf
inc
jbe
into
popa
enter
stc
jle
ret
sub
sbb
clts
inc
pop
aas
imulb
stos
cli
aam
fwait
push
and
cld
jo
arpl
and
inc
adc
mov
dec
sti
push
insb
lods
mov
push
stc
scas
int
inc
xor
dec
push
and
push
add
adc
xor
add
jne
popa
ret
stos
mov
pop
scas
and
add
shl
jo
lock
sub
loope
in
sub
sbb
cltd
mov
pop
mov
xchg
and
gs
cmpsl
lcall
mov
xor
mov
js
xor
mov
sbbb
lahf
xlat
jnp
jp
and
add
gs
out
lods
test
cli
cwtl
dec
mov
or
mov
ds
jp
bound
lahf
xchg
push
les
mov
cli
xor
sub
mov
fcomi
out
lret
and
push
cli
fsubs
mov
pusha
pop
sbbl
mov
leave
push
outsb
sub
mov
imul
push
jmp
orl
mov
mov
mov
and
inc
mulb
sbb
in
movsl
xor
push
pop
mov
cld
xlat
in
repnz
adc
outsl
push
fisubl
in
repnz
inc
pusha
xchg
and
imul
mov
inc
lds
int3
xchg
rcll
std
sbb
xor
adc
loop
sub
mov
sbb
jno
mov
fdivrl
ja
imul
adc
ror
enter
push
movsb
out
dec
xor
ss
jecxz
xchg
mov
js
cs
in
inc
test
dec
sbb
inc
jmp
xchg
xchg
lret
or
cmp
mov
xchg
inc
fisttpll
test
mov
push
insb
lret
addb
jne
xlat
xor
popa
shlb
adc
mov
sub
dec
inc
cld
pop
mov
sub
cltd
and
xchg
addb
je
jno
push
cmpl
fnstenv
add
not
jecxz
fisttpl
mov
mov
mov
pushf
push
dec
jbe
lret
mov
pop
mov
mov
icebp
push
mov
insb
and
mov
idivl
cmp
mov
iret
add
cmpsb
xchg
nop
mov
sub
jne
push
adc
arpl
push
sti
xor
lahf
out
xor
popf
lcall
es
cltd
jecxz
sbb
dec
dec
push
ret
cmp
cmp
inc
fiaddl
sub
adc
ror
lret
cwtl
lock
fsubrl
lahf
into
sbbl
clc
jno
loop
into
jno
lret
sbb
adc
mov
jmp
and
push
popa
jno
scas
inc
int
pop
inc
addb
mov
inc
jne,pt
sub
jg
out
jl
fildl
pop
clc
popf
and
mov
imul
lock
rorl
scas
sub
rcll
pop
aam
inc
cli
jnp
hlt
xchg
mov
fnstenv
add
in
idiv
fisubrl
pop
cmpsl
es
mov
mov
mov
jl
and
fs
ret
div
iret
test
ror
add
popf
out
mov
sub
sub
mov
lret
scas
les
in
dec
mov
aad
leave
mov
push
and
call
mov
jb
popf
mov
into
lcall
pop
sub
xchg
inc
pop
pop
dec
push
andnps
imul
xchg
popf
jno
add
addl
bound
scas
push
es
mov
dec
mov
pushl
sahf
xchg
pop
pop
mov
xor
pusha
and
inc
repnz
sbb
sahf
sti
inc
inc
jl
pop
mov
or
pop
insb
xchg
mov
notb
dec
jmp
fildll
loopne
push
clc
test
clc
pop
xor
jno
out
xchg
jl
shr
xor
test
dec
sahf
jl
mov
sub
mov
es
xchg
test
mov
and
fnstsw
movsl
cwtl
sub
out
add
fnsetpm(287
fistl
mov
cmp
leave
gs
mov
xor
jbe
bound
orb
ljmp
xor
loop
js
stc
cmp
and
jp
adc
call
scas
pop
cmc
mov
fsubl
and
mov
fmul
inc
fsubl
inc
leave
outsl
iret
es
mov
mov
mov
adc
mov
sbb
rorb
xor
es
loope
add
push
outsl
sbb
push
adc
fistps
xchg
push
stc
xor
mov
pop
or
dec
dec
xchg
test
repz
insl
push
mov
xor
nop
and
in
test
icebp
icebp
lods
mov
sbb
icebp
and
xchg
rcrl
int
push
cmp
std
cmp
pop
cmpsl
mov
lea
mov
pop
fbld
iret
pop
loopne
pop
push
push
cmc
add
xchg
lock
sub
push
rcrl
movsl
lds
jl
cld
cmp
xlat
fnstsw
dec
popf
jae
lcall
icebp
popf
ds
mov
sub
jb
in
iret
pop
mov
and
loope
jle
js
les
out
xor
mov
ret
push
pop
lret
cltd
xchg
stos
gs
enter
call
mov
sti
sub
daa
inc
mov
lret
jns
pop
dec
divl
out
cld
adc
add
lahf
and
out
jne
fnstenv
or
mov
pop
scas
orb
movsb
add
cwtl
aas
or
sub
in
mov
popa
sub
orb
loopne
das
les
jmp
fistps
mov
xchg
pushf
aaa
jb
mov
testl
xor
cltd
fdivp
push
imul
mov
pop
add
fnstsw
cmp
mov
xchg
dec
dec
into
inc
dec
sub
or
adcl
stos
call
and
sbb
data16
scas
sub
stc
push
pop
shrb
imulb
movsl
xlat
add
xor
leave
adc
es
add
inc
repz
popa
inc
imull
call
nop
ljmp
movsl
daa
decl
ret
bound
rep
xchg
jb
addr16
pop
inc
jl
mov
mov
or
pop
movsb
inc
frstor
dec
xchg
sbb
dec
shl
decl
jle
dec
movsb
xchg
decb
in
xchg
inc
clc
add
sbb
push
adc
mov
cmc
sbb
push
and
pushf
mov
xchg
add
lahf
jle
das
lahf
mov
cmpsl
inc
mov
add
outsb
sbbb
mov
nop
repz
mov
int
test
repz
xchg
pop
cld
cs
sub
movsl
sub
jecxz
ja
stos
inc
cld
cmp
mov
jnp
ja
xchg
pop
or
fwait
in
jno
mov
je
cs
pop
jb
xor
xchg
sahf
jle
mov
jns
sahf
cmc
in
daa
and
push
divb
cmp
pop
pop
pushf
jp
xchg
xchg
arpl
pop
sbb
in
xlat
in
dec
aaa
adc
test
mov
mov
dec
push
adc
and
sahf
lret
clc
std
pop
mov
ja
xchg
dec
nop
aam
xchg
mov
sbb
jo
fdivs
mov
mov
fucomp
xlat
out
std
lds
and
addr16
push
lock
push
mov
add
add
ds
mov
outsl
in
xor
aaa
hlt
stos
cwtl
and
mov
cmp
test
sbb
out
add
nop
push
pop
mov
hlt
cmp
mov
jmp
cli
xchg
std
push
xchg
es
daa
imul
push
fstps
xor
sbbb
mov
jo
aad
ss
adc
cmp
lahf
out
addr16
and
imul
in
stc
data16
xchg
movsb
push
xchg
push
test
mov
sbb
in
xor
aas
and
pop
jae
mov
rclb
mov
dec
cmp
sbb
sbb
add
dec
movsb
arpl
jmp
adc
mov
loopne
add
aas
sub
add
aam
pop
mov
inc
inc
adc
mov
push
mov
dec
rcr
adc
dec
movsb
dec
dec
xchg
mov
pop
push
sti
gs
xor
or
aad
pop
mov
mov
dec
cltd
and
mov
loope
or
push
subb
lea
lea
test
insb
ror
xchg
cmpsb
ds
push
mov
or
inc
dec
push
in
pop
lret
sub
mov
out
cwtl
packuswb
add
adc
inc
shrb
int
cmp
sbb
jge
push
mov
pop
lret
fs
mov
xor
dec
push
in
inc
jg
xor
jb
add
ret
daa
popl
movsb
mov
mov
cbtw
push
movsl
lods
mov
ret
and
mov
pextrw
add
test
dec
push
or
cli
sub
lock
fisttpll
and
ja
inc
out
cmpsb
mov
test
enter
hlt
push
dec
shr
je
and
fidivrs
inc
sarl
aad
loopne
popf
inc
movl
mov
mov
adc
inc
mov
inc
outsw
jle
jae
add
in
sbb
push
adcl
xchg
call
xchg
add
mov
mov
aam
addr16
leave
mov
sbb
dec
pop
adc
pop
sarb
xchg
mov
push
inc
dec
mov
out
addr16
sbb
testl
pop
fcoms
add
cmp
fcoms
xchg
and
test
test
push
lret
or
mov
xchg
cmp
cmp
push
dec
adc
xor
into
iret
daa
jecxz
and
or
mov
inc
popa
adc
lds
cmp
aas
rcrl
xlat
mov
sbb
add
sti
pop
and
movsl
dec
test
scas
cmp
fbstp
sub
or
xchg
cmpsb
xchg
dec
in
and
push
jecxz
fnsave
add
jecxz
jmp
mov
sbb
mov
gs
sbb
jbe
pop
lods
xchg
cmpsl
jge
outsl
mov
out
push
sbb
rclb
jge
test
cli
out
xor
mov
ds
loop
push
stos
inc
or
aam
in
mov
mov
push
outsl
imul
dec
pop
sti
sti
hlt
jecxz
data16
lcall
sub
es
mov
push
push
test
or
sbb
fisubs
adc
je
in
inc
pop
cs
push
cwtl
rcl
or
jecxz
inc
fsts
pop
in
sub
stos
and
ret
fs
or
inc
mov
fsubr
push
push
mov
add
in
outsb
iret
push
scas
fs
xlat
xchg
loope
lea
rcll
jmp
cmp
outsl
push
leave
xchg
imul
stos
pop
outsb
add
sarl
pmaxub
xor
adc
and
jnp
repnz
loopne
cld
cmp
pop
jne
lea
jno
sub
es
imull
lods
push
lret
xor
mov
je
call
iret
ret
jp
lds
xchg
aaa
xchg
cs
pop
cmp
pop
jge
jp
cmp
jp
dec
dec
sbb
and
je
sbb
sub
mov
and
adc
test
pop
pop
loopne
cs
dec
adc
into
sahf
shrl
adc
adc
and
or
cli
or
jge
out
jg
mov
and
mov
cmp
js
add
inc
cli
mov
jae
xor
jle
test
clc
stc
enter
sub
pop
sbb
and
add
fldenv
mov
jg
idiv
xchg
cmp
nop
outsb
ss
or
sarb
arpl
in
pop
mov
adc
mov
mov
sbb
sub
andl
test
enter
pop
dec
ljmp
dec
sbb
cmp
popa
xor
into
xor
cwtl
pushf
xchg
fs
hlt
push
sub
mov
xor
push
mov
mov
pop
in
outsl
bound
xor
aam
mov
shll
loopne
imul
cli
xchg
fcmovu
jne
loope
cs
and
add
xchg
insb
inc
out
inc
shrl
mov
xor
push
imul
pop
jnp
cltd
dec
add
fwait
pop
lea
add
dec
jo
out
jmp
iret
adc
push
imul
add
adc
mov
sahf
pop
mov
inc
pop
pop
fbstp
push
stos
test
cltd
adc
or
lea
xor
adc
ja
lods
bnd
enter
xchg
dec
out
popa
sub
jb
add
lcall
jno
mov
xchg
inc
cmp
and
add
mov
cwtl
loop
ret
mov
cwtl
test
push
popf
pushf
roll
nop
or
jno
ljmp
mov
cltd
mov
scas
je
push
add
push
and
jl
fidivl
add
mov
cli
mov
into
mov
adc
dec
inc
cmp
jo
sbb
push
mov
mov
pop
mov
or
jne
xor
jae
jns
ret
pushf
rdpmc
or
add
push
sbb
dec
mov
xlat
out
push
sub
fwait
jnp
sub
mov
jl
out
cmp
sub
pop
mov
lock
pop
addl
fwait
stos
not
sbb
fistpl
popf
dec
call
jp
pop
xor
or
setbe
nop
mov
xchg
out
js
cmp
mov
pop
or
pop
sbb
adc
pop
fmull
icebp
sbb
or
xor
bound
in
push
push
sbb
lahf
sbb
int
jmp
orl
test
adc
out
pop
popa
pop
and
cs
xchg
sbb
and
sbb
xor
xor
adc
repz
mov
ret
push
lahf
dec
lock
lods
lahf
rorl
arpl
push
jp
in
push
out
mov
lods
psrad
imul
add
aas
gs
jecxz
xchg
in
mov
and
and
mov
andb
dec
test
cli
xchg
push
jbe
mov
push
nop
cld
adc
push
ljmp
dec
push
lock
movsl
xchg
test
cld
in
in
xchg
mov
popl
add
fcmovnu
and
xor
or
inc
shrb
outsl
mov
pop
push
ds
dec
sbb
rolb
xchg
daa
xorl
xor
dec
fdiv
ds
mov
and
leave
sti
hlt
adc
sbb
out
inc
pusha
inc
or
push
jae
add
and
push
leave
hlt
and
sub
adc
fsts
xlat
repnz
jg
daa
mov
mov
mov
pop
cs
insb
imul
xor
pusha
ljmp
mov
decl
lock
inc
in
popf
cmp
aam
pop
cmp
cwtl
test
mov
jb
rclb
dec
bnd
das
mov
std
sahf
add
push
call
lret
jae
mov
or
inc
sbb
inc
out
jne
outsb
sub
inc
inc
push
pop
lret
leave
push
mov
insb
clc
add
push
pop
and
jp
fldcw
pop
and
push
ss
loope
push
stc
push
imul
sub
stc
xchg
dec
les
mov
mov
inc
inc
inc
ffreep
sbb
int3
sub
sbb
movb
hlt
mov
sub
les
xchg
inc
arpl
sbb
stos
into
mov
outsl
ret
push
imul
inc
or
outsl
inc
jp
and
dec
stc
adc
leave
xor
sbb
adcl
add
addl
mov
xchg
and
in
out
adc
cwtl
pop
inc
je
cwtl
and
mov
jns
or
pop
je
push
inc
sbbl
insb
jb
insl
mov
fistl
mov
jno
push
mov
pop
ss
jb
cmpsl
or
sahf
jb
cmp
push
jecxz
stos
xchg
or
stos
and
sti
mov
push
pop
cmpsb
and
jb
xchg
jmp
int
add
cltd
aas
fistl
scas
rcrb
int
mov
mov
mov
add
ret
repnz
jle
rclb
testl
sub
inc
dec
or
call
inc
hlt
cli
xlat
cmpsb
push
push
mov
mov
pop
adc
push
mov
xlat
lds
mov
pop
and
mov
pop
jp
jae
jg
pop
sbb
pop
out
lret
cli
mov
fsubrs
aaa
mov
add
push
xchg
shll
cltd
pop
xchg
gs
hlt
call
mov
aam
push
divb
push
stc
and
leave
leave
adc
adc
aam
daa
mov
lcall
negl
jb
out
xchg
xor
iret
adc
xor
jge
xchg
daa
gs
leave
out
roll
xchg
pop
lds
hlt
rcrb
into
into
repz
cmp
inc
js
ds
and
jne
pop
repz
adc
lahf
testb
adc
loop
imul
add
in
ds
pop
hlt
mov
add
rolb
or
add
out
sbb
jae
inc
inc
test
nop
stc
aad
pushf
cmp
mov
cmpsl
add
jle
xor
mov
fisubs
jmp
mov
and
sete
repnz
cmp
xlat
test
mov
or
jge
cmp
imul
jnp
dec
pop
cld
add
mov
test
inc
jns
loope
test
test
rcrl
out
push
mov
rclb
cmpl
fisttpll
mov
int3
popf
mov
dec
shll
in
sbb
pop
jp
sbb
adc
adc
sti
mov
mov
xor
es
or
mov
mov
sbb
jnp
add
xchg
mov
push
movsb
xchg
pop
mov
xor
mov
fidivl
pop
sub
jl
xlat
andb
inc
dec
mov
lret
xchg
jmp
push
inc
add
xchg
rorb
xlat
fnstcw
jb
dec
jg
fiadds
mov
aam
pusha
xchg
jg
inc
ljmp
les
add
pop
adc
inc
sub
popf
mov
lods
test
mov
outsl
mov
push
mov
push
dec
jbe
aad
notl
in
xor
xchg
cmc
rorb
inc
ljmp
jle
jmp
xchg
cmp
mov
mov
mov
cmpsl
test
pop
test
mov
fdivr
fcmovbe
rcl
dec
pop
mov
test
mul
scas
pop
fcmovu
sbb
push
push
cmp
add
and
loope
test
fcompl
mov
out
xorl
dec
lret
dec
and
popa
repnz
leave
outsl
hlt
jp
test
sbb
push
test
test
sbb
adc
clc
mov
dec
nop
mov
adc
cltd
adc
jne
mov
testl
pop
cmp
test
sarl
xor
or
jmp
and
cmp
and
pop
adc
lock
and
les
lock
mov
or
repz
pop
arpl
mov
dec
pop
adc
aad
or
pop
jne
pop
cmp
jp
pop
lret
or
hlt
mov
icebp
sub
push
repz
lods
cmc
je
xchg
les
pop
adc
cmp
dec
icebp
mov
call
xor
xor
lock
sti
sbb
pop
jge
pop
add
int
cmc
les
je
loopne
mov
mov
and
cmc
inc
es
add
sbb
imul
int3
ret
cmp
nop
and
iret
push
cmp
scas
push
lret
dec
adc
add
sbb
dec
sub
inc
adc
push
xchg
cmp
loop,pt
dec
ja
mov
cs
mov
and
mov
lahf
push
mov
mull
or
xchg
mov
cmp
dec
and
hlt
test
jg
cmp
or
arpl
bound
lret
imul
testb
mov
incl
jbe
bnd
insl
outsl
push
xchg
xchg
fisttps
and
mov
pop
cmc
xchg
faddp
sub
loop
cmp
arpl
dec
pop
mov
fwait
daa
js
je
mov
mov
cmpsl
lret
push
pusha
sub
cmpsl
repz
mov
xchg
rol
mov
dec
mov
ss
ficoms
ss
scas
stos
mov
sub
xchg
fcoms
adc
mov
rolb
mov
in
ret
fs
sub
fistps
int3
test
jg
mov
stos
jp
fists
or
aas
and
popf
push
in
jae
fnsave
jns
cmpsl
ss
subl
movsb
mov
cs
push
addr16
inc
mov
test
mov
xor
das
cmpsl
movsb
loope
mov
pop
dec
out
enter
imul
divl
add
rorb
sub
mov
adc
jns
cmp
mov
xor
fwait
inc
fisttpll
cmp
adc
or
jl
cld
push
cwtl
subl
and
xor
daa
call
sbb
dec
addl
sub
add
ja
loop
stos
mov
push
ljmp
scas
inc
jl
push
xchg
mov
stc
jp
pop
pusha
adc
imul
or
mov
add
imul
mov
lret
cltd
push
or
lods
pop
mov
aaa
enter
mov
sub
stos
and
icebp
int
mov
loopne
js
gs
and
hlt
push
outsb
dec
lcall
mov
dec
xor
mov
mov
xor
gs
aad
clc
xlat
jns
imul
ljmp
loope
jae
xchg
xor
fdivs
xor
rcrb
popf
bound
popa
mov
test
fdivs
int
cmpsb
or
jecxz
scas
dec
ret
mov
sti
jns
pop
xor
mov
jmp
and
int3
mov
jb
push
jo
sub
scas
push
xchg
mov
cmp
adc
xchg
sub
gs
cmc
je
jb
nop
pop
lret
pop
add
movb
testb
inc
sbb
sub
lock
jns
cmp
pop
sub
hlt
sub
lret
mov
iret
pop
ret
fcmovne
push
mov
test
rcll
jb
add
add
inc
jns
jmp
or
iret
les
shll
xor
or
cmp
xchg
sub
sbb
or
add
jp
pop
xchg
mov
xorl
iret
imul
lea
sbb
add
mov
in
push
mov
adc
mov
test
or
aam
popa
adc
sub
jle
inc
mov
lcall
fwait
rorl
mov
shrb
inc
idivl
xor
push
and
sbb
cmpsl
das
mul
jecxz
pop
pop
mov
es
sub
inc
ficoms
adc
push
clc
push
es
jecxz
mov
lock
stos
pop
push
cli
push
mov
and
and
je
push
je
xor
pop
rcrb
mov
cli
lods
push
adc
inc
rolb
ljmp
iret
lret
jae
xor
xor
xchg
or
ds
addr16
cmc
push
pushf
sub
jbe
pusha
fmul
adc
cli
cmpl
mov
jne
xor
gs
mov
fisubrs
iret
int
jmp
sbb
popl
ss
leave
mov
push
in
in
push
dec
sub
fs
popl
fldenv
mov
cmpsb
push
lea
lods
and
into
insb
jne
cmpsl
mov
jle
loop
out
ja
ret
lods
xchg
fmull
cs
pop
scas
sarb
push
fldl
dec
in
das
call
xlat
mov
and
or
nop
mov
mov
push
aam
out
sti
loop
mov
or
pop
and
xor
stos
outsl
movb
dec
xlat
xor
dec
cmp
sub
xchg
jo
int3
daa
add
dec
push
mov
scas
roll
mov
cmp
and
call
xor
xor
sub
cmp
jno
add
cli
aad
push
andl
sbb
jecxz
nop
in
mov
xor
dec
xor
sub
xor
lea
jl
in
daa
fcompl
add
aaa
data16
daa
push
call
jns
mov
rorb
sbb
add
xor
cmpsl
mov
imul
ret
cmp
jmp
mov
stos
push
sbb
adc
sbb
sbb
sub
mov
test
stc
imul
pop
mov
dec
dec
pop
inc
fnstsw
pushl
dec
loope
push
cmp
dec
push
gs
mov
iret
jb
mulb
sahf
mov
push
scas
xlat
sbb
mov
dec
fimull
mov
adc
adc
test
pop
sub
repz
push
push
cmp
mov
fnsave
mov
mov
mov
iret
and
cltd
loop
fbld
cmp
sbb
add
jnp
test
imul
and
mov
repz
mov
or
mov
mov
sub
xchg
or
push
pushf
mov
cmp
repnz
iret
adc
adc
aaa
jne
xor
fcoms
gs
adc
mov
lret
insl
xor
mov
xlat
addr16
sarl
xchg
cmpsb
scas
jl
mov
and
pushw
jmp
loopne
sahf
push
push
adc
and
adc
jl
cmp
sub
mov
pop
mov
in
and
bnd
adc
int3
shl
int
xor
fwait
divb
into
sub
imul
mov
lea
test
ret
rcl
sub
mov
outsb
add
cmp
aad
fdivs
sub
cltd
sahf
repz
cltd
cmp
jns
nop
inc
sbb
sarb
mov
push
sub
mov
addl
mov
out
mov
int
and
pusha
jnp
sub
lock
arpl
sub
cmpsb
int3
adc
add
in
xchg
add
dec
mov
mov
jle
xchg
les
outsl
shll
mov
xchg
fidivs
lahf
mov
pop
jl
push
mov
inc
sub
xor
aad
outsb
out
push
fwait
sub
jl
into
push
xor
adc
call
inc
mov
scas
shrl
bnd
inc
out
inc
fistps
xor
lcall
push
mov
fildl
leave
mov
xchg
leave
sbb
inc
mov
sub
push
inc
mov
xor
xchg
fistpll
xor
mov
cmp
pop
ret
mov
popa
and
mov
push
loopne
daa
pop
int3
aas
sbb
nop
inc
out
jb
loope
js
pop
cmc
add
cmpsb
test
mov
dec
les
js
sub
jle
jmp
cwtl
xor
and
ds
movsl
outsl
outsb
push
outsl
jne
int3
popa
insb
loop
xor
cld
xchg
and
psubb
dec
xor
jp
jecxz
cwtd
je
or
mov
push
sub
icebp
les
pop
xor
xchg
outsb
in
scas
mov
push
adc
dec
dec
jo
lock
xlat
xchg
inc
int
inc
ss
mov
pusha
imul
gs
and
push
scas
mov
sub
push
jp
inc
xchg
scas
popf
cmpsl
bt
lods
pop
cmpsl
inc
inc
ret
psraw
mov
cmpsl
push
mov
lods
adc
pop
icebp
aas
shlb
add
mov
jecxz
in
sarl
pop
arpl
std
dec
jmp
fcmovnbe
lods
fnstenv
xorl
xchg
or
cmpsb
push
xor
enter
add
xlat
pop
pusha
nop
xor
push
mov
cmpsb
xor
dec
sbb
adc
icebp
gs
add
mov
test
pop
icebp
add
je
inc
lea
mov
cmp
ret
shlb
std
nop
repz
pusha
js
and
jecxz
adc
mov
dec
ss
pushf
xlat
scas
jg
and
push
inc
xchg
sbb
xor
mov
pop
lods
fldenv
dec
popf
mov
sti
dec
push
lcall
and
icebp
or
push
testb
jne
cmp
outsl
sti
sbb
inc
sbb
adc
out
mov
je
inc
fldln2
sbb
mov
pop
iret
pop
jns
sbb
sbb
sub
mov
rcr
mov
cmp
inc
inc
sti
repnz
movsl
push
xor
jno
mov
jle
xlat
inc
leavew
push
fnsave
loop
test
clc
jnp
es
out
jge
inc
mov
lods
into
mov
inc
lods
loope
lods
cmc
and
cmc
insb
leave
mov
adc
loop
fcomps
js
cli
xchg
inc
test
mov
push
insl
gs
adc
mov
jle
int3
dec
test
inc
cmp
jb
mov
dec
lds
pop
shlb
xor
jae
cmp
mov
adc
pop
dec
mov
jl
icebp
xchg
fcmovnu
xor
jns
js
jne
or
stc
add
pop
pop
stc
les
arpl
add
mov
pop
hlt
push
inc
cmp
jl
stos
inc
dec
adc
push
cs
jg
int3
add
mov
fbld
aaa
mov
and
mov
push
add
iret
pcmpgtw
xor
push
ja
xor
cmp
add
or
push
daa
cli
nop
out
dec
mov
pop
movsb
insl
or
or
es
mov
pop
jge
in
push
into
add
mov
add
cmp
mov
cwtl
enter
pop
mov
xchg
jg
lock
stc
sbb
inc
jns
or
shlb
clc
xchg
arpl
int3
rcr
inc
adc
movsl
push
imul
ss
mov
sbb
xchg
jnp
pop
mov
inc
ret
cmp
adc
or
jg
lret
cltd
pusha
mov
test
pop
push
pusha
xchg
adc
inc
xchg
sbb
aaa
adcl
and
cmp
push
inc
fst
pop
adcl
inc
inc
mov
adc
stos
xchg
stc
out
jns
push
adc
inc
jp
ret
aaa
mov
rorb
lcall
fstp
jne
xchg
sbb
jns
into
lods
aas
in
testl
pop
xchg
add
in
lcall
fucomi
mov
hlt
sbbb
inc
push
xchg
dec
xchg
es
bound
jp
dec
pop
test
das
lods
pop
xchg
inc
outsb
daa
xor
inc
lret
push
fisttpl
push
cmp
push
xchg
loope
cld
push
lahf
add
mov
mov
bound
icebp
or
lods
test
lods
fdivrp
jns
mov
test
loopne
fistps
mov
ljmp
lahf
sbb
xchg
aad
notb
scas
fadds
add
aaa
xor
add
or
movb
movsl
xor
push
cltd
cmp
adcl
push
inc
push
shrd
jns
clc
test
divb
push
adc
lock
jge
lret
lock
in
jno
iret
xchg
bound
outsb
addb
ret
lods
ds
or
add
adc
in
iret
mov
outsb
push
or
add
jo
push
jnp
stc
sbb
movsb
sub
insl
cmp
dec
xor
int3
sub
jl
dec
test
sti
repz
orl
fucomip
adc
mov
fisttpll
dec
add
shrb
pop
out
jo
xor
or
jmp
mov
push
add
pop
mov
add
imul
imul
lock
pushf
testl
fstpt
aaa
repnz
pop
lods
lds
push
aam
pop
sti
into
mov
daa
jb
jno
loop
sbbl
test
adc
js
out
mov
xchg
gs
mov
cli
xchg
fs
pop
dec
adc
mov
movsb
popl
cwtl
fisubrs
popf
imul
clc
lret
mov
mov
ret
fistps
cmc
in
sarb
dec
rcrb
or
test
in
lcall
daa
push
mov
sub
out
add
and
cmp
inc
into
jnp
dec
push
sbb
xor
dec
in
sbb
lcall
scas
out
jge
pop
xchg
pop
rclb
call
sbb
or
lret
xor
hlt
inc
ljmp
fsubrl
and
enter
lds
shl
ds
lcall
xchg
or
mov
dec
loope
pop
cmp
push
stc
push
mov
roll
mov
dec
jnp
addl
leave
aam
cmp
mov
lcall
das
sub
enter
inc
mov
adc
test
ss
jmp
cs
dec
jp
aas
and
mov
pop
lock
or
jmp
in
fdivs
xchg
pop
lock
stos
mov
test
cmp
jns
sarb
scas
es
and
add
cmp
je
cmp
push
mov
push
lds
push
mov
and
xchg
shll
cmp
cmp
insb
push
out
ds
xor
mov
sarb
cmp
and
dec
and
cmp
fs
fisttps
stc
adc
fs
cmpsb
roll
mov
stos
jge
orb
mov
int3
nop
pushf
add
icebp
into
lret
add
mov
dec
adc
ret
push
or
or
dec
incl
fs
mov
inc
cli
jp
in
ret
ljmp
pop
pop
sar
jns
add
cs
and
jo
outsl
or
sti
stc
mov
repnz
daa
and
mov
in
fidivrs
ret
add
gs
cmpsb
inc
lret
int
sti
push
loope
popa
add
mov
mov
add
imulb
mov
mov
pop
movsl
fmuls
daa
int3
cld
push
adc
jnp
add
stos
xlat
xchg
imul
xorl
imul
orb
fidivl
push
jbe
or
and
icebp
movsb
cmpsb
cmp
pop
cmp
mov
pushf
lods
xchg
sar
popa
push
fs
arpl
clc
xchg
nop
mov
loope
push
sub
pop
xchg
sbb
and
testb
dec
or
dec
inc
cs
aaa
aad
and
add
cmp
lcall
sub
add
xchg
cmpsl
icebp
imul
scas
mov
inc
leave
pop
lret
mul
mov
pop
jge
shll
pop
xor
inc
pop
jle
enter
add
pop
inc
repnz
outsb
lret
mov
sub
stc
test
push
mov
sub
icebp
bound
fsubs
jg
or
lret
lahf
mov
imul
jns
mov
pushf
pop
test
ss
mov
jno
cld
inc
pop
out
lods
std
mov
out
adc
cmp
add
movsl
pop
inc
test
gs
cld
pop
sub
xor
lock
push
inc
shlb
loopne
xchg
lods
inc
xor
xchg
jmp
cmp
jmp
sub
mov
xor
and
sahf
clc
in
rorb
movsl
mov
sub
cmp
dec
mov
leave
movsl
out
aad
adc
push
add
push
jbe
push
inc
jns
or
shlb
cli
pop
daa
dec
rclb
cltd
add
or
stc
test
and
scas
incb
mov
scas
and
or
je
sub
dec
jmp
dec
aas
cld
mov
scas
ja
outsb
mov
pop
push
push
leave
or
into
cmp
push
adc
xor
sbb
icebp
xchg
test
jle
scas
jle
cmpsl
hlt
mov
jb
sub
and
mov
add
nop
fucomi
push
xchg
mov
in
sbb
cltd
dec
inc
loopne
jle
jecxz
push
add
divl
sbb
mov
movsb
and
leave
in
fcomp
pop
cwtl
je
iret
lods
scas
daa
jb
test
sub
ret
mov
movsb
pop
adc
lret
iret
ret
mov
dec
cmp
scas
mov
rol
xchg
mov
xchg
sub
test
imul
jmp
xchg
mov
add
jecxz
mov
xchg
xor
ss
mov
add
fdivs
pop
and
subl
pusha
mov
es
jp
lea
jbe
jns
ret
push
mov
cmp
mov
jne
fwait
mov
out
mov
adc
insb
hlt
jp
scas
rcr
test
inc
pop
in
test
add
pop
jl
adc
orb
push
sub
inc
stos
mov
xchg
sbbb
dec
sub
lea
adc
sarb
addr16
dec
push
mov
push
cmp
add
jp
mov
sbb
pop
dec
mul
stos
mov
adc
in
adcb
push
test
aas
and
adc
ret
xor
mov
les
imul
and
sub
ret
out
test
mov
iret
push
sub
jmp
addr16
icebp
mov
fs
push
or
idivb
sbb
jbe
scas
orl
pop
mov
pusha
or
lret
in
push
call
mov
mov
shrl
imul
cmp
pop
mov
pop
sub
or
adc
mov
frstor
aad
sbb
sbb
sbb
aad
insb
cmp
fs
jno
and
or
add
out
jb
adc
cmp
fs
cmp
jmp
lret
movsl
call
pushf
pop
mov
jecxz
sub
call
push
jge
mov
add
add
xchg
imul
out
cmpsl
test
ss
and
cmp
and
out
scas
sub
mov
into
call
insl
mov
aam
enter
xor
sahf
push
arpl
clc
xor
xchg
xor
push
cmovns
stc
push
add
fwait
lahf
in
hlt
mov
push
or
andl
fwait
into
ja
rclb
lds
sbb
and
mov
shlb
lods
xor
push
cmc
imul
ljmp
pusha
mov
xchg
sub
outsl
add
loopne
or
mov
sbb
mov
jp
push
lcall
shlb
clc
insl
jae
push
out
sub
and
ljmp
mov
call
movsb
and
jl
std
ja
sbb
sub
ficoml
movsl
or
fistpl
aad
imul
mov
mov
cltd
mov
mov
and
add
mov
jge
mov
test
pop
push
call
xor
push
imul
adc
inc
cmpsl
mov
sbb
mov
and
cmp
jno
adc
push
scas
insl
push
pop
test
jl
sub
xor
repnz
and
sti
out
scas
aad
daa
pop
nop
or
and
and
xchg
xor
pop
das
jmp
out
out
icebp
in
ficomps
mov
push
push
add
orl
adc
stc
inc
roll
hlt
dec
sbb
cmpsl
adc
mov
ss
dec
xchg
scas
pop
pop
je
fcmove
dec
mov
xor
sub
cmc
shrb
sbb
push
inc
pop
daa
push
sbb
int3
cli
sbb
test
mov
mov
jb
cld
xor
das
cltd
mov
hlt
cmc
nop
lret
addr16
and
mov
push
add
xchg
js
xchg
jbe
shll
sub
sub
cwtl
int3
inc
or
fistpl
repnz
leave
xor
push
inc
insb
cmp
or
xor
mov
mov
sbb
push
xchg
addr16
loope
adc
add
cmp
xchg
jnp
cmpsl
jae
cwtl
mov
fistpll
mov
js
stos
sbb
and
cmp
pop
jmp
movsl
xor
test
xor
jo
cmp
ljmp
pop
rcll
dec
jb
dec
aaa
cmp
les
and
adc
mov
cmp
fldcw
out
das
loope
sub
imul
test
sbb
adc
mov
leave
aam
jl
jns
sahf
xor
sbb
and
out
adc
lsl
repnz
lods
push
xchg
mov
push
ljmp
fs
mov
dec
pop
rcr
mov
or
xchg
inc
arpl
rcll
add
inc
mov
pop
push
sub
add
movsb
mov
in
shlb
je
add
scas
sahf
adc
lret
xchg
jae
inc
arpl
and
mov
sbb
mov
repz
andl
les
inc
and
das
inc
or
and
fldenv
mov
aad
enter
ljmp
pop
inc
push
adc
outsl
pop
xlat
pop
sahf
add
mov
dec
adc
lret
add
in
push
mov
aaa
lea
sahf
push
xchg
inc
mov
adc
jmp
or
mov
push
ret
jo
dec
loop
dec
xor
xchg
inc
mov
jns
sub
sbb
add
outsb
add
push
jecxz
in
mov
es
dec
cli
xor
and
xlat
dec
pop
push
sbb
in
mov
rol
fmuls
repnz
bound
jp
mov
ret
leave
xlat
loop
xor
adc
mov
cli
add
fisubrs
push
fwait
push
sahf
icebp
daa
xor
adc
stos
in
mov
mov
sbb
imul
sub
jne
pop
jecxz
pop
jmp
xchg
test
cltd
inc
mov
lcall
ja
and
inc
aam
cwtl
js
jae
enter
xchg
mov
popa
sub
repnz
push
fmul
fsts
jp
or
enter
int
mov
pop
jno
js
inc
lahf
cmp
adcl
bound
stc
in
cmpsb
jmp
or
bound
xchg
jns
add
pop
push
or
test
lods
pop
aad
cmp
int3
inc
cmp
inc
stos
ja
jle
in
jecxz
pop
daa
or
pop
jge
jg
and
xchg
out
lret
ret
add
xchg
stos
pop
add
add
push
loop
push
lea
or
mov
pop
pop
cli
dec
rolb
lea
cmp
popf
inc
sub
xor
adc
dec
int
jmp
rcrb
mov
pop
mov
int3
add
add
adc
push
mov
divl
fdivs
pop
inc
jmp
xchg
dec
mov
push
mov
inc
adc
or
ljmp
arpl
scas
push
add
fistps
fistl
daa
mov
mov
push
cli
movb
pop
aas
pop
aas
pop
pop
inc
dec
gs
jno
cli
xor
adc
sub
sahf
and
in
test
or
fiaddl
adc
and
lret
outsb
fnstsw
rcrb
out
pop
fcoms
cmpsl
sub
jge
std
stos
xorb
add
push
jb
adc
mov
pop
daa
cmp
fistps
and
fisubl
xchg
lahf
loop
pop
shll
dec
and
fnstenv
inc
inc
adc
dec
lods
and
sbb
pusha
clc
test
push
out
icebp
jnp
mov
mov
and
stc
cld
ror
sbb
cmp
inc
cmpb
outsl
xchg
mov
add
jl
test
mov
mov
xor
xor
cmp
movsb
cmpsl
jp
sbb
mov
jae
push
scas
pop
mov
dec
loop
adc
loope
call
cs
inc
lret
out
and
enter
xor
idivb
jecxz
mov
fs
inc
jb
jbe
in
ret
in
xchg
ja
cmc
push
dec
xchg
push
gs
cmp
cmp
imul
ret
ds
mov
push
mov
dec
cmp
and
inc
or
cmp
pusha
sarb
mov
fcomps
icebp
mov
in
mov
mov
out
mov
imul
add
mov
cmpl
dec
xlat
retw
cmp
xor
pop
inc
pop
adc
syscall
sbb
and
std
out
clc
lret
xor
das
push
pushf
inc
lret
in
fildl
lret
or
out
ret
ret
sub
xor
scas
sub
inc
push
rorl
insb
and
ljmp
mov
mov
sbb
dec
outsl
adc
sti
dec
add
jl
mov
ljmp
test
mov
mov
inc
mov
sub
add
ret
lock
popa
xor
clc
pop
add
mov
sub
fnstenv
imul
or
push
xor
lods
sub
mov
sub
push
and
fldcw
js
dec
dec
cmp
pop
add
xchg
dec
es
xchg
hlt
out
inc
in
mov
jp
add
sbb
movsb
cld
out
bound
mov
jg
jmp
add
ds
xor
mov
adc
add
hlt
data16
jns
daa
sub
pusha
lret
jae
jg
enter
push
and
in
xor
cmpl
cli
sub
mov
jg
icebp
xchg
inc
jl
jnp
pop
sahf
mov
mov
sbbb
mov
mov
dec
sar
addl
mov
xchg
push
scas
add
xchg
jp
jg
cmc
and
inc
sub
xor
subb
xor
or
push
jne
xlat
iret
push
repnz
and
mov
push
push
push
insb
lods
or
and
adc
mov
adc
xor
mov
int
fcoms
mov
test
cmp
adc
xchg
pop
pushl
clc
jbe
dec
pop
push
mov
scas
out
test
inc
fstpt
fucomi
loopne
mov
push
jb
stos
xchg
imul
jp
pop
or
data16
out
outsb
cwtl
test
js
mov
int
jp
jae
outsb
mov
add
xor
mov
ljmp
mov
stos
into
dec
lcall
xchg
out
sbb
adc
stc
mov
cli
cwtl
mov
shl
std
in
test
scas
cmpb
std
inc
imul
js
mov
adc
xchg
shlb
and
lds
and
pop
mov
pop
nopl
movsb
lods
sahf
subl
out
sbb
jp
xor
movsl
mov
mov
inc
addr16
cmp
sbb
mov
imul
aad
dec
aaa
pop
lcall
mov
into
pop
add
mov
jp
in
sub
popl
lock
mov
push
dec
cmpsl
dec
ja
and
push
sub
inc
adc
movsb
sbb
cmp
push
je
icebp
or
jmp
mov
stc
mov
push
jnp
movsl
xchg
mov
jae
xchg
pushf
imul
or
movsb
pop
mov
cmp
xor
jmp
out
scas
incl
es
rol
repz
pop
cmp
movsb
mov
mov
mov
sbbb
daa
daa
repz
sub
cwtl
add
mov
or
sub
inc
std
add
cmpl
in
xchg
les
rcrb
jae
bound
sar
fwait
xlat
popa
ficoml
imul
stc
rclb
sbb
mov
int3
mov
repnz
jecxz
push
xchg
jg
mov
mov
rcr
xor
mov
pop
std
nop
jbe
inc
mov
pop
mov
sbb
pop
movsl
lods
pop
mov
lds
sbb
dec
popa
loopne
std
xor
lea
mov
push
cmpsb
aad
test
test
jno
pop
addl
cmp
lret
sub
test
fnstsw
out
pop
inc
out
hlt
jno
xchg
xchg
xor
imul
pop
fsubrl
inc
arpl
sub
lods
and
mov
push
in
outsb
pusha
fistpl
mov
mov
push
insb
and
mov
adc
fwait
mov
push
cmpsl
and
mov
xor
jl
enter
lcall
inc
adc
cmc
cmp
mov
out
aad
daa
shlb
push
xorb
xchg
cltd
in
adc
pop
into
adc
aas
loopne
jnp
pushf
ljmp
fisttpl
in
lea
enter
cmp
aad
js
mov
outsb
pop
inc
test
fwait
daa
cmp
repz
pop
pop
sub
or
cmc
cmpsl
add
lcall
sahf
xor
stos
inc
push
sbb
ljmp
cs
mov
inc
popl
rorb
push
test
imul
xchg
ds
jbe
repz
fnstcw
pop
cs
sub
gs
ret
jl
mov
lahf
pop
mov
lds
jae
cmpsl
scas
imul
or
jne
push
dec
jo
je
xorb
mov
pop
xchg
adc
and
push
push
test
inc
add
clc
fisubrl
cmp
or
das
mov
jnp
enter
rcrb
lcall
jp
lret
into
adc
and
mov
jo
and
pushf
push
jge
movsb
lods
insl
jl
adc
push
shr
mov
int
arpl
int
jmp
add
in
mov
les
pop
cwtl
adc
lods
and
adc
dec
rcll
jge
push
pop
push
and
mov
out
bound
inc
stos
jno
or
into
cmpsb
popf
dec
xor
fldenv
or
cmpsl
mov
sbb
xor
ret
and
add
and
cmpsb
pop
insb
jmp
or
lcall
push
mov
mov
jecxz
mov
push
or
dec
mov
and
fisubs
push
js
cmp
popf
push
add
fs
and
lods
imul
fsubr
insl
or
daa
push
add
rcll
pushf
pop
cmp
movsb
pop
and
aas
mov
mov
popf
or
ret
sbb
fnsave
movsb
leave
mov
xchg
sbb
loopne
inc
xor
out
test
cmpsb
inc
push
loop
cmp
push
jno
jbe
sbb
jl
inc
xor
leave
xchg
decl
lcall
inc
lods
rcl
dec
mov
out
push
stc
sbb
push
or
popf
add
movsb
cmc
jle
gs
cmp
adc
jo
mov
or
add
loopne
sbb
loop
lds
into
popf
fwait
and
or
in
adc
fwait
inc
inc
rorb
aas
dec
movsl
inc
lods
lock
add
jp
pop
dec
ja
ss
xor
leave
nop
push
pop
xor
add
lahf
add
mov
lcall
jo
push
fsub
xchg
cmp
idiv
cmp
or
fidivrl
std
inc
jae
mov
mov
movsl
adc
cmp
push
pop
mov
and
mov
loop
push
mov
inc
cwtl
and
dec
loop
mov
fidivrl
fmuls
pop
push
xor
cmp
dec
adc
les
fidivl
and
ret
rcrl
cmp
mov
shlb
fdivs
cmpsb
inc
xor
xor
imul
push
dec
in
ja
fsubs
popf
cmpsl
or
addr16
data16
nop
mov
adc
nop
cmp
jmp
iret
sbb
addb
cld
push
and
adc
mov
mov
dec
adc
int3
je
or
je
pushf
fmul
fistpl
hlt
pop
jl
rcr
adc
cltd
xor
inc
jp
ret
outsl
and
mov
std
sub
shrl
loop
sti
outsb
push
mov
lods
xchg
lds
xchg
fs
ds
mov
push
jmp
jle
das
xchg
mov
xchg
xor
outsb
add
add
or
les
push
xchg
mov
outsb
push
movsb
xor
mov
fisttpll
mov
jl
test
sub
xchg
cmp
ret
shl
je
dec
mov
xor
popf
dec
int3
or
loope
mov
into
xor
cltd
cltd
fnstenv
sub
add
pop
push
or
imul
dec
and
out
loop
std
loop
sbb
pop
test
and
sbb
popf
rolb
add
call
push
xlat
repz
xchg
cli
popa
inc
cmpsl
insb
cld
bound
xchg
iret
and
mov
sub
xor
aaa
and
dec
inc
mull
mov
mov
ljmp
cltd
sbb
pop
xor
fwait
outsb
insl
jmp
jmp
imul
mov
stos
or
mov
inc
jle
and
or
imul
jnp
jp
fmul
lds
inc
add
add
jp
mov
imull
mov
cmpsl
testl
lods
sbb
lods
push
and
pop
pop
loopne
adc
mov
inc
inc
mov
fsubs
dec
xchg
test
mov
movsb
stos
and
pop
cmpsl
movsb
ret
pushf
jnp
inc
jne
stos
push
pop
fs
inc
xor
or
rcrb
lahf
fstps
pop
ret
insb
in
sbb
in
bound
movups
int
mov
push
mov
or
jp
push
in
mov
cmpsb
cmp
mov
aaa
adc
push
sub
sub
push
stos
push
mov
mov
data16
adc
dec
jns
mov
mov
push
push
mov
mov
dec
fcmovbe
inc
into
mul
imul
imul
lahf
cmp
stos
dec
lds
mov
mov
inc
aas
add
pop
dec
and
dec
pop
out
mov
jne
cmp
iret
icebp
lret
cs
add
mov
cmpsb
push
inc
cmp
lods
stos
outsb
add
les
je
stos
adc
lahf
fs
fimuls
test
sbb
cwtl
mov
and
pop
push
sub
cmp
icebp
jmp
fs
push
dec
mov
mov
test
pop
inc
sub
fucom
popa
addr16
cmpsl
sub
dec
hlt
xchg
bound
add
cmp
sti
mov
inc
leave
mov
cmp
jne
or
cmp
aam
movsb
jg
mov
shl
sbb
xchg
xor
and
dec
mov
fadds
push
aad
hlt
repnz
sub
mov
pop
daa
cwtl
mov
push
js
shlb
mov
jp
pushf
daa
dec
nop
cmp
pop
sub
mov
xchg
mov
int
mov
jbe
or
push
cmp
sbb
cmp
popa
push
mov
lea
js
lock
dec
xor
xor
ret
clc
jecxz
xchg
jae
sub
js
leave
sarb
lcall
jp
jbe
add
pop
xor
sarl
cmpb
jecxz
ss
icebp
xchg
imul
aam
in
aaa
push
sbb
sbb
ret
lds
nop
aas
cltd
push
xchg
scas
sarl
xor
jne
outsl
xor
leave
xor
cmc
mov
sbb
sahf
adc
jno
mov
hlt
or
addr16
addr16
mov
fmull
xchg
out
or
sbb
mov
fimuls
xor
mov
dec
adc
ds
sbb
out
xor
mov
sti
push
jle
add
sub
test
test
jae
loope
adc
mov
mov
lods
leave
push
dec
or
das
sbb
cltd
jecxz
mov
leave
xor
sub
das
or
daa
lret
enter
shrl
sub
js
sub
sbb
cwtl
aam
fisubl
mov
sbb
sbb
lret
adc
mov
bound
inc
out
lahf
push
mov
adc
push
mov
xchg
sub
mov
popf
fs
jp
sar
mov
popf
stos
in
sbb
hlt
lea
or
dec
push
and
stc
jno
test
dec
or
shll
mov
nop
pop
ret
daa
and
clc
test
or
das
fldt
ror
js
mov
sbb
cmc
ljmp
add
cwtl
mov
into
sub
jmp
int3
push
movsb
xor
sub
or
jge
cs
sbb
jbe
push
push
scas
xchg
xor
adc
and
sub
pop
es
and
mov
sbb
rclb
adc
out
pop
or
mov
add
jno
xlat
rclb
ss
xor
ja
xor
mov
popf
mov
pop
cmp
mov
mov
fistl
insl
icebp
push
cmc
pop
into
insb
minps
andl
aaa
inc
jmp
mov
imul
iret
cwtl
les
inc
push
andl
and
jo
push
icebp
sub
mov
fsub
sbb
pop
jmp
in
jbe
xlat
dec
xor
jo
fstps
mov
in
test
int
push
popa
xlat
arpl
addr16
add
sub
rorl
lahf
scas
shrb
outsl
jg
inc
mov
pop
pop
mov
fcompl
jp
mov
fcoms
popa
fwait
pop
mov
push
pop
frstor
mov
or
enter
xlat
xor
std
repnz
rcll
mov
cmpsl
mov
loopne
sub
in
sbb
jp
lds
sbbl
push
lods
aas
adc
out
std
cli
lahf
mov
or
inc
adc
enter
sbb
lds
fstpt
lahf
popa
xchg
or
nop
adc
arpl
dec
or
scas
cmp
in
add
and
inc
lods
mov
out
repnz
push
addb
aaa
mov
mov
pop
test
in
mov
ficomps
xlat
adcl
xor
jne
filds
jg
fstp
xlat
loopne
xchg
add
mov
popa
xchg
pop
in
push
ret
jb
ficoms
sub
cmc
mov
add
mul
cltd
mov
movsb
cltd
push
shl
lods
shrb
cli
iret
mov
inc
call
pop
push
cmp
ficoms
jno
das
mov
incl
fsub
adc
gs
xchg
mov
inc
jno
mov
dec
leave
je
data16
xchg
push
insb
test
es
lahf
cmp
jecxz
xor
fs
mov
jae
faddl
std
sbb
mov
or
in
les
insl
das
push
out
inc
pop
call
stc
ror
popf
push
add
rorl
int3
scas
sub
nop
ret
xchg
sahf
in
popa
mov
addl
jge
pop
jge
ret
cvtdq2ps
cmp
out
sub
loope
and
test
addr16
dec
jle
cmpsl
xor
or
iret
pop
ret
ficoml
mov
test
inc
jmp
mov
xor
xor
mov
jns
push
xchg
xor
xor
cmp
pop
push
roll
add
mov
loopne
fiaddl
shrb
or
aad
sub
cmp
inc
aad
xor
xor
ret
add
jle
add
sub
pushf
cli
outsl
xchg
sub
je
and
jne
leave
out
adc
out
fnstcw
fs
add
cmp
pop
das
cmp
and
adc
sti
push
pop
adc
test
test
pop
call
jo
jmp
pusha
mov
or
inc
rcll
lock
mov
mov
movsb
push
sbb
xor
hlt
mov
dec
lods
or
sbb
xchg
ljmp
stos
add
inc
stos
xor
jnp
push
test
sbb
mov
xor
out
jb
adc
dec
pop
es
testl
jns
rcl
lcall
jno
cmpsl
add
stos
fwait
jg
inc
xor
dec
lods
lret
pop
stc
jge
int
popf
bound
mov
movsb
cwtl
push
das
cmpsb
sub
xor
jmp
fnstenv
rcll
add
popf
xchg
ja
pushf
out
inc
dec
std
push
fsts
lahf
dec
lret
xor
sti
ret
shlb
insl
mov
add
and
mov
popa
ret
icebp
bsf
out
mov
popw
sub
sub
add
addr16
ret
sbb
adc
jnp
cld
into
jge
xchg
jl
jnp
fsub
mov
int
subb
xchg
cmp
and
sbb
movsb
test
add
dec
sbb
pop
daa
cmp
cwtl
xchg
das
fwait
push
loopne
es
sahf
std
data16
es
and
testl
ljmp
cmpsl
mov
inc
iret
pushf
adc
lahf
mov
inc
stos
xchg
daa
rcll
cmp
mov
mov
xchg
cmc
rorl
or
loop
cmp
rcr
shlb
sub
aam
lret
mov
xchg
mov
mov
sub
adc
jne
push
push
inc
int
stc
mov
lea
or
pushf
call
push
add
movsl
inc
nop
gs
test
mov
xchg
out
loop
into
int3
movsl
mov
inc
push
repnz
fisttps
dec
shlb
pop
lods
clc
in
mov
cwtl
daa
pop
daa
lock
and
add
push
xchg
xchg
int
jle
mov
jle
dec
sub
mov
fstpl
pop
bound
xchg
ret
jecxz
mov
cwtl
push
aad
adc
xchg
xchg
jo
int
iret
jge
rorb
pop
sub
out
jns
dec
and
and
test
lock
push
cltd
sarl
mov
pop
push
dec
dec
xchg
fcom
mov
push
dec
mov
test
ret
sbb
add
or
mov
dec
jmp
aas
xor
sub
pause
push
out
mov
xchg
sbb
sbb
stos
jne
fwait
shll
mov
pusha
nop
pop
mull
cmp
test
ja
stc
inc
outsb
ds
add
out
lret
sub
adc
pop
sbb
lods
popf
push
push
aas
xor
cmp
lret
dec
fucom
adc
imul
pop
bswap
adc
push
sbb
dec
jbe
cmp
and
fs
sbb
jg
jecxz
xor
add
push
lret
push
xor
orb
xlat
aas
dec
or
scas
cmp
pop
lea
mov
cmp
idiv
rorb
dec
sti
fstpl
shrb
and
aad
test
xor
xchg
out
test
sti
frstor
out
pop
ss
testb
enter
ret
sub
jecxz
cmp
push
jae
inc
sub
cmp
jne
mov
push
xchg
int3
add
fisubrl
mov
sub
adc
add
xchg
cmc
out
add
sub
xor
pop
cmp
jge
out
sbb
loop
cmpb
popa
add
ja
sbb
pop
xchg
xor
dec
add
xor
xchg
dec
popf
scas
std
in
or
lds
pushf
mov
lock
repz
mov
pop
adcl
push
lods
dec
mulb
in
cwtl
or
mov
pop
dec
outsb
dec
data16
and
adc
leave
lods
dec
std
aas
ret
fstl
xor
jne
add
and
sbb
js
jp
adc
xor
popa
repz
jb
test
decb
arpl
jae
jne
popf
lock
cmp
aad
data16
jns
jle
push
and
inc
dec
or
sbb
xor
cmpsl
je
insb
aaa
push
push
lcall
and
mov
mov
sbb
pop
dec
inc
push
or
mov
ss
add
xlat
popf
jp
lock
ret
mov
mov
stos
cmc
sbbl
imul
xchg
cmp
mov
andl
adc
ja
pop
mov
mov
xor
mov
sbb
lock
pop
shr
sbb
push
mov
jecxz
je
sub
sbb
fistpl
xor
outsl
std
push
mov
jge
jbe
mov
adc
xor
mov
dec
fdivl
mov
mov
cmp
shl
xor
clc
fmuls
lea
cmpsb
pusha
lods
sbb
rcl
xor
in
jp
sub
xlat
fcmovbe
lcall
test
or
daa
ret
jg
lods
adc
lods
aas
insb
sub
ja
aam
push
call
dec
push
pop
sar
mov
pop
jns
mov
xor
repz
loope
mov
lods
jbe
lret
jb
pop
xor
divb
int3
fildl
xchg
add
push
jp
and
jnp
lods
lods
psraw
xor
push
lock
loopne
lret
mov
jae
xlat
aam
push
jne
sahf
arpl
insl
push
enter
repz
pop
and
ss
mov
jl
pop
stc
or
scas
pop
insl
nop
pop
dec
mov
sbb
arpl
in
pop
outsl
mov
shrl
sar
arpl
aaa
aas
xchg
bound
add
ss
sbb
test
push
loope
test
iret
lock
xchg
loopne
mov
push
cld
jmp
icebp
pop
xchg
in
jle
add
and
and
js
mov
aas
jae
idivl
ds
add
add
pop
pop
movsl
out
lds
stc
pop
mov
outsl
les
mov
cwtl
fisttpll
dec
shlb
pop
pop
sbb
xor
leave
add
or
add
stos
cmp
or
clc
sub
jecxz
sbb
inc
das
inc
adc
pop
fstl
bound
or
sti
sub
cmp
inc
dec
sbb
xorl
mov
popa
fistpl
mov
push
inc
data16
mov
dec
sbb
fmul
adc
xor
push
fs
pop
inc
lods
sbb
sbb
cmc
inc
xchg
dec
push
lret
jns
cwtl
jp
jbe
add
testb
xor
mov
dec
ret
mov
enter
sarb
fsubl
fidivl
or
mov
jo
adc
call
test
mov
and
lret
xchg
jmp
and
aaa
pop
int3
mov
add
lret
add
xchg
lods
mov
xor
leave
and
pop
lahf
out
dec
imul
adc
repnz
mov
sarb
lods
or
out
xchg
rol
cmpb
cltd
inc
mov
jb
daa
adc
xor
push
push
jae
in
dec
leave
das
es
rcrl
data16
sub
int3
call
push
stos
sub
movsb
and
shll
push
inc
push
pop
xchg
cld
pushl
sbb
ficompl
cmpsb
mov
out
aad
add
pop
mov
pop
xor
cs
adc
adc
pop
outsl
stos
mov
ret
push
fnstcw
xchg
popa
test
ret
mov
lock
mov
adc
dec
and
add
cmp
ds
mov
fstps
dec
mov
jg
jne
or
xchg
repz
repnz
dec
add
xchg
clc
xchg
xor
xor
in
pushl
aas
sub
stc
adc
repz
or
fimull
imul
mov
inc
out
xor
subl
ljmp
cmp
sbb
jns
and
cmp
cltd
pop
xor
rorl
aaa
mov
jno
or
push
push
mov
mov
or
jmp
or
mov
sbb
in
inc
ljmp
test
jmp
or
adc
iret
adc
popf
pop
stos
aam
inc
add
mov
pop
add
fbld
push
lods
mov
repnz
mov
jns
lock
sub
loop
jmp
fisubl
cmpsl
hlt
movsl
lahf
leave
out
xchg
jg
stc
push
inc
xchg
dec
xor
movsb
mov
inc
push
or
mov
cmpsl
xchg
int
xor
cmp
xor
rcr
xchg
sub
fisttps
adc
or
dec
xchg
ss
mov
cld
or
ds
sbb
and
mov
ret
pop
sub
stc
popf
cs
call
outsb
add
mov
ret
js
pushf
fcompl
test
mov
lds
push
mov
mov
int3
push
inc
push
mov
push
add
ds
sub
clc
addb
out
inc
inc
daa
lcall
jnp
shll
xchg
jno
cmp
nop
jbe
cmp
jne
adc
or
ss
inc
add
cld
jp
add
sbb
sub
imul
insb
scas
xor
xchg
inc
pop
aad
lret
js
jb
xor
pop
push
mov
mov
jnp
pop
into
cs
out
jp
inc
ret
mov
int3
ret
xlat
sub
push
xchg
stos
push
cli
pop
idiv
fidivl
js
push
xor
clc
jae
stos
ljmp
add
gs
int3
pop
fs
cli
js
movsb
inc
mov
cli
sti
je
stc
mov
into
or
shll
or
mov
bnd
jge
fists
mov
pop
adc
fcmovu
pushf
pop
mov
mov
pop
xchg
or
jmp
sub
mov
inc
xlat
iret
sub
int
fists
aas
adc
xlat
loope
push
ret
pop
aam
add
cmp
je
cmp
and
icebp
push
mov
in
movsb
mov
xor
fcoml
jne
sar
mov
mov
test
jo
sub
add
mov
pop
jle
push
push
insb
call
lds
push
sub
idivl
add
lahf
popa
inc
mov
and
pusha
cli
daa
inc
movb
addr16
push
jns
test
lds
cmpb
in
fists
add
push
fistpl
xchg
add
pusha
ret
mov
addr16
adc
nop
jmp
or
cs
ja
in
negl
jo
jne
stc
pop
gs
repz
and
arpl
cmp
cli
pop
adc
xchg
js
push
nop
xor
ljmp
jne
sbb
rcrb
xchg
rolb
mov
xchg
fisttps
xor
popa
aaa
cmp
jb
sbb
popa
sti
jne
inc
aaa
cli
sub
call
stos
xlat
jae
shrl
lods
roll
mov
daa
cmp
popa
outsl
pop
sti
sbb
mov
mov
push
fwait
in
push
mov
inc
fdivs
xor
push
flds
inc
loop
xor
scas
pop
pop
lret
into
loopne
popf
mov
mov
hlt
mov
sub
sbb
daa
cmpsb
mov
xor
in
xchg
nop
jo
lcall
sarl
test
imul
fsave
stc
insl
dec
mov
out
xchg
pop
and
pusha
dec
mov
push
ljmp
push
xlat
fwait
jecxz
pop
into
aaa
std
mov
sbb
pop
ret
out
test
push
fs
mov
je
je
cmp
lods
cmp
mov
pop
fadd
jae
aad
movsb
cwtl
add
iret
fwait
iret
fwait
outsb
outsl
jmp
inc
push
fwait
sub
xchg
inc
dec
fisubrs
cmc
push
and
sbb
call
mov
push
test
inc
mov
lea
pop
cmc
xchg
jae
out
clc
jmp
mov
test
jecxz
sahf
or
stos
adc
sti
fwait
cmc
cli
data16
call
mov
jnp
out
jecxz
jnp
daa
jo
jge
lea
nop
push
repz
iret
cmp
jmp
and
mov
push
jg
xchg
insb
inc
sub
and
orb
mov
enter
cli
cmp
add
mov
in
push
push
call
testl
lods
sbb
and
push
sbb
sbb
je
cs
xchg
pop
sbb
push
add
add
cwtl
push
inc
sub
push
jp
aam
scas
xchg
cmc
cmp
jae
and
push
dec
sbb
adc
pop
sbb
ficomps
cmc
adc
fidivrl
les
adc
icebp
mov
xor
mov
and
scas
cs
loope
mov
and
scas
inc
mov
lea
push
mov
jne
inc
mov
cs
repnz
in
hlt
push
outsb
push
or
jmp
lret
sub
mov
inc
adc
jge
movsb
and
movl
jmp
fdiv
push
mov
push
mov
or
scas
mov
insl
mov
inc
pop
out
sub
in
imull
mov
dec
mov
add
dec
dec
inc
push
mov
cmp
pop
icebp
les
fstp
xor
jb
out
sbb
outsl
stos
je
lea
jns
xor
mov
nop
inc
movsb
test
dec
sub
push
mov
add
js
mov
adc
jmp
dec
out
jae
fistps
inc
in
loopne
sbb
movsl
push
inc
jno
sbb
pop
ss
test
adc
adc
mov
inc
fcmove
mov
dec
push
xchg
shr
in
loope
xchg
and
cltd
mov
push
mov
ljmp
orl
jne
mov
mov
pop
stos
cmp
lock
cmp
mov
ljmp
outsl
push
insb
lods
mov
pop
cmpsl
test
sbb
pand
test
hlt
push
into
push
aam
xchg
jl
out
cs
cmc
adc
iret
jnp
cmc
pop
cmp
mov
dec
add
jno
pop
cmp
mov
lahf
sbb
sahf
cmp
mov
xchg
pop
popf
hlt
test
cmp
xor
jp
inc
das
mov
nop
add
xchg
leave
push
pop
sbb
mov
outsl
cltd
repnz
or
sub
xchg
or
mov
add
shrb
outsl
outsl
ljmp
jne
mov
cmp
inc
jae
ret
xchg
pop
pop
lods
mov
lea
clc
add
insb
cmpb
stc
daa
lods
inc
and
pop
lea
mov
sub
dec
adc
sub
arpl
sbb
shlb
cwtl
mov
cmpsl
test
imul
shld
mov
out
rcrl
call
ja
xlat
inc
lret
push
mov
mov
and
xchg
or
push
and
adc
mov
sbb
imul
adc
movb
pushl
test
xchg
push
nop
cmpsb
aad
dec
fcomps
cmp
pop
sarl
popf
mov
jl
xchg
mov
imul
ss
test
jns
dec
das
xlat
sti
sub
lods
sahf
jecxz
add
jp
dec
adc
sbb
les
pusha
and
ret
xchg
scas
pop
push
add
sub
sbbb
sub
sbb
scas
sub
push
rcrb
pop
jmp
xchg
stos
notl
mov
or
jmp
dec
aad
mov
xchg
xorl
dec
push
sbb
decb
insb
jns
sub
leave
xor
dec
cmp
repz
data16
inc
cltd
fidivrl
aam
jae
scas
mov
jmp
or
push
das
xor
imulb
pop
or
lcall
and
fadds
out
sub
test
inc
faddl
popa
in
loopne
scas
cwtl
ret
mov
js
dec
mov
loop
cltd
popa
adc
sub
sahf
pop
icebp
pop
inc
mov
push
icebp
fidivl
cmp
insl
mov
xor
cmpsl
mov
jne
popf
aam
cmpsb
ret
lret
das
mov
pop
aas
call
sbb
ficompl
ljmp
insb
push
and
and
repnz
jge
push
mov
push
sar
sbb
inc
aam
xchg
hlt
mov
adc
arpl
push
jno
inc
mov
cmpsl
jg
or
sbb
and
jno
jmp
loope
and
test
mov
sub
leave
jne
ja
out
lcall
adc
js
jno
jne
xor
inc
xor
mov
movsl
xchg
orb
mov
push
jnp
lock
pop
mov
notb
shr
mov
addr16
cld
stos
inc
insl
mov
popa
scas
sub
subb
shr
aas
ds
push
js
sbb
pop
ss
pop
lods
jp
test
push
xchg
aaa
xchg
lahf
add
jno
mov
in
lods
shrb
shlb
test
mov
pop
sbb
cmc
mov
jnp
mov
jbe
add
inc
sub
dec
addr16
dec
xor
xchg
jmp
fstpt
jp
mov
sbb
xchg
je
cmp
dec
mov
scas
xor
stos
clc
lret
sub
in
mov
ljmp
adc
dec
test
or
add
loope
push
cmpsl
sub
ret
lods
imul
and
jb
jae
je
ja
adc
movsb
outsb
cs
or
jmp
mov
cwtl
iret
xchg
fcmovbe
xor
sbb
out
scas
jecxz
sbb
repnz
jae
inc
mov
popf
pop
jmp
fists
in
iret
call
and
les
push
pushf
dec
shll
dec
scas
ret
test
mov
ja
or
dec
dec
fisttpll
dec
cld
sub
inc
mov
cmp
lahf
or
pop
and
rcr
push
xor
pop
sub
out
clc
mov
cmpsb
int3
jno
cmpsl
es
ljmp
mov
rcrl
push
push
clc
dec
adc
test
or
dec
insb
pop
mov
sbb
adc
xchg
mov
inc
jmp
mov
or
repz
lock
sub
cmpsl
lock
addr16
stc
cli
cwtl
push
test
sub
add
sub
adc
xor
ret
pop
adcl
xchg
mov
sbb
outsb
mov
mov
inc
imul
mov
jmp
or
movsl
mov
or
insb
fldenv
mov
or
leave
jl
aas
or
je
lock
je
push
repz
adc
stos
jge
aad
ljmp
out
jge
sahf
mov
lret
mov
fcomp
xor
test
stos
jmp
out
imul
pop
pop
clc
cmpsl
adc
sub
push
lock
xor
push
into
in
lcall
pop
mov
mov
imul
rclb
cmp
xor
loope
inc
fldenv
xchg
iret
testl
push
gs
jae
outsl
aas
ljmp
fwait
adc
int
sub
sbb
pop
add
clc
mov
loope
xlat
xor
out
ljmp
push
push
add
ret
cmp
or
jbe
cmp
lea
and
jae
pop
cmp
jmp
push
test
adc
stos
xchg
add
sbb
sub
mov
or
rcrl
dec
lds
scas
lcall
stos
push
pop
adc
mov
ja
pop
out
lea
popa
pusha
or
jno
shll
jg
outsb
pushf
mov
inc
testl
lds
mov
or
push
movsl
adc
dec
lods
cmp
push
adc
lock
sub
push
cltd
fcmovb
outsl
xor
popa
xchg
js
leave
sub
lods
dec
pusha
xor
rcrb
into
mov
inc
sti
inc
xor
inc
or
stos
sub
ret
outsl
sub
cli
or
mov
mov
pop
pop
dec
sbb
not
loopne
subl
sbb
into
outsl
cmp
and
int
push
insl
pop
repz
scas
rcll
inc
insl
add
mov
aaa
out
push
mov
gs
icebp
nop
jns
fistpl
xchg
sbb
pop
je
and
dec
ss
cmp
rcl
jnp
arpl
fdivrl
mov
movsb
mov
mov
fucomp
xor
outsl
or
xchg
mov
mov
xchg
cmpsb
test
imul
push
mov
dec
or
js
sub
xchg
out
dec
sbb
out
push
mov
gs
cmp
insl
popf
sub
into
adc
jle
push
and
or
inc
in
jno
ret
aad
push
adc
cmp
cmpsb
int3
fcoml
push
jecxz
scas
mov
dec
fcmovnbe
gs
and
sub
jmp
xchg
lock
add
orb
add
subl
cmp
xchg
js
xor
aaa
mov
sbb
stc
pushf
fldl
in
in
mov
outsl
les
std
outsb
ja
push
push
pushl
pop
insb
cmp
cwtl
mov
jg
mov
jle
mov
cltd
push
mov
sub
in
out
and
test
add
int
mov
in
adc
adc
jbe
dec
nop
mov
push
leave
adc
out
cmp
push
mov
sub
popa
jecxz
pushf
lods
fildl
sub
push
push
inc
repnz
push
mov
in
iret
inc
loope
in
movsb
jge
into
loop
pop
test
in
jbe
ficoms
mov
xlat
loopne
lds
repnz
pop
cltd
out
cltd
pop
es
push
add
dec
testl
pusha
cmp
xchg
pop
mov
sbb
sarb
gs
aas
out
dec
sahf
cld
push
setl
sti
lcall
dec
hlt
aam
in
pop
js
xchg
cld
dec
mov
outsl
sub
ret
pop
int
dec
adc
mov
dec
inc
adc
xor
push
adc
lods
dec
push
or
mov
jp
and
jo
insl
add
jmp
data16
mov
pop
push
lea
aaa
sub
lods
cmpsl
out
jnp
lds
fimull
add
xchg
lret
pop
aam
add
rcl
push
je
sbb
cmc
ret
cld
in
js
shl
scas
pop
sbb
mov
sub
or
rorb
xchg
inc
jne
jp
lgs
push
or
mov
outsl
es
cli
loopne
daa
data16
push
popa
pop
insl
loop
ret
dec
sub
or
or
not
mov
lods
stos
mov
xchg
imul
xor
or
iret
fsts
in
push
scas
fiadds
aam
test
movsl
in
rolb
dec
pop
mov
je
adc
ss
dec
xchg
jo
outsl
div
insb
rorb
lock
add
jae
push
pop
mov
cmc
test
xor
rorb
xchg
scas
fsts
and
ret
xchg
vlddqu
xchg
in
int3
and
lods
sahf
mov
cmp
lcall
clc
daa
imul
sbb
mov
jno
xchg
dec
es
cmpsb
push
in
pop
and
adc
xchg
in
xor
inc
ret
scas
jne
inc
pusha
dec
iret
jb
fidivs
xchg
iret
mov
cmp
and
mov
cltd
aad
insl
xlat
xchg
mov
ffreep
enter
jmp
sub
adc
and
push
ljmp
dec
sub
out
int
imul
ficompl
mov
adc
stc
jecxz
add
fdivrl
sbb
aad
clc
adc
stos
xlat
rorb
cmp
mov
inc
mov
sub
jl
adc
lret
in
pop
mov
xor
pop
add
sub
sbbb
jno
les
mov
sti
movsl
imul
add
icebp
inc
dec
add
push
imul
icebp
and
push
fdivrs
dec
inc
push
and
out
insb
shlb
push
cmp
ss
fisubl
cli
leave
xorb
cmp
out
xlat
addb
xor
xchg
and
inc
push
ficompl
fadds
bound
cs
and
out
clc
sbb
loopne
dec
xchg
inc
adc
push
inc
cmp
inc
les
loopne
insl
movsl
sub
fdiv
pop
jecxz
mov
pop
leave
inc
inc
add
mov
or
ds
inc
or
push
lahf
aas
add
xchg
mov
and
cmp
ficoml
and
jmp
mov
stc
jle
popa
les
std
cmp
lods
jmp
shrl
mov
ss
scas
pop
jns
jmp
loope
adc
les
es
xchg
roll
lods
add
dec
add
fstps
je
sbb
mov
fwait
out
loope
ret
push
cmpsl
pusha
ret
or
test
mov
mov
mov
mov
repz
mov
sahf
hlt
mov
pop
sub
incl
mov
leave
es
pop
dec
xchg
fdivrs
sahf
xchg
fmull
mov
xchg
rol
shll
aaa
and
mov
lods
in
mov
mov
into
xlat
xlat
and
pop
mov
hlt
push
lods
pop
scas
or
addb
dec
jecxz
cltd
leave
push
or
fisttpll
call
cmp
or
push
sub
stc
and
int3
fwait
pop
loopne
es
cltd
out
bound
or
shlb
lods
aam
test
dec
bound
scas
out
les
dec
dec
lods
andl
push
imul
dec
popf
test
and
and
mov
stc
add
lret
sti
or
cwtl
pop
xchg
insl
add
or
dec
fldt
mov
dec
fists
das
adc
sti
scas
push
or
adc
fisubl
scas
xchg
pop
je
ljmp
aas
test
push
pop
pop
pop
mov
xor
ret
pop
and
sbb
aaa
or
add
xor
push
pop
sbb
movsb
in
fsubl
lods
inc
or
jo
aaa
fucomp
adc
xchg
jge
stos
in
sbb
push
xor
mov
xor
cmp
insl
jecxz
xorl
fnstcw
mov
imul
xor
inc
rorl
xor
loope
hlt
jl
ljmp
or
jmp
mov
jne
test
cmc
mov
nop
and
outsl
mov
pop
insl
mov
sbb
cwtl
push
mov
sub
xchg
out
push
push
iret
cmp
mov
pop
mov
inc
cmp
js
push
lods
in
int3
or
mov
in
mov
sub
ret
clc
cs
rorl
xor
and
xchg
cld
push
loop
pusha
and
mov
in
jno
xchg
fcmovne
leave
mov
fcoml
js
or
out
shld
shlb
mov
jne
and
push
sbb
mov
lahf
repnz
ds
jbe
or
cmp
out
mov
orb
int
sbb
adc
mov
ret
popa
and
aad
push
cld
push
sbb
mov
aam
adc
mov
fbld
cmp
imul
xchg
in
daa
jbe
xor
js
xchg
sbb
xchg
out
cmpsl
mov
mov
int
mov
mov
mov
push
daa
das
test
inc
jge
dec
bnd
fstps
into
mov
sub
subl
dec
sbb
mull
push
pop
in
mov
xchg
cwtl
xor
js
dec
push
icebp
xor
xor
adc
or
setg
mov
xor
incl
push
mov
xchg
and
cmp
out
and
inc
fxch
lahf
mov
cltd
pop
mov
pop
loopne
pop
call
fnstenv
arpl
daa
jne
mov
scas
push
rcrb
push
cmp
ja
jae
rorl
jp
push
pop
or
sbb
dec
sbb
lock
sub
ja
cmp
xchg
rcll
add
icebp
cmp
sub
push
test
jbe
ja
imul
jg
mov
scas
or
imul
dec
sbb
gs
jns
in
and
mov
adc
imul
clc
pop
pusha
push
inc
mov
push
jb
push
or
sub
addr16
shll
int3
daa
leave
sarl
in
xchg
imul
xchg
sub
cs
pop
out
dec
sbb
cs
xchg
inc
jl
cltd
jmp
sub
jno
push
mov
into
outsb
scas
inc
pop
xchg
std
mov
adcb
push
fmull
hlt
cmp
fisubrs
pusha
lret
cmp
adc
jnp
push
cmpsl
push
mov
das
mov
fsubrs
xor
dec
push
xchg
mov
pop
pusha
xchg
ss
push
mov
lods
pop
mov
sub
imul
in
push
inc
scas
mov
stos
fstpt
in
cmp
mov
jae
aaa
shll
movsl
adc
insl
push
sub
push
jo
rorl
sbbl
sbb
aas
divl
xchg
movsb
push
pop
xlat
mov
clc
pop
popf
in
lock
jno
jg
ljmp
push
cwtl
sbb
sbb
cs
rcrb
xchg
jns
shr
pop
test
stos
mov
push
add
ret
pop
adcl
add
movsb
test
push
push
and
call
lret
jge
push
pop
fwait
push
stos
jne
aas
xchg
pop
loopne
cs
jecxz
lods
mov
js
std
push
out
adc
add
call
into
insb
pop
jno
add
mov
push
jmp
push
in
sahf
push
cmpsb
add
inc
add
call
ljmp
adc
aaa
mov
fcomp
dec
incb
or
nop
lret
insl
pusha
add
fisttps
sbb
mov
fldt
insl
imul
add
pop
roll
fs
cli
test
shrl
rcrb
test
int
mov
and
inc
sub
inc
das
push
nop
imul
bound
lds
xor
inc
pop
mov
insb
ror
xor
xlat
mov
inc
cltd
bound
lods
pop
mov
inc
lahf
lock
sarb
cmpsb
mov
ret
fdivs
fs
das
lret
bnd
push
sti
cli
mov
aad
xchg
insl
cmpsb
xorb
inc
vcvtsi2sdl
pop
or
enter
pop
outsl
adcb
xchg
xor
mov
fimull
jne
sub
in
push
neg
dec
xchg
dec
add
addr16
dec
xor
adc
iret
fimull
xchg
outsb
stc
push
push
mov
lds
xor
jecxz
in
and
gs
sub
add
xchg
pop
add
shl
in
mov
xchg
adc
push
sbbl
pop
fsubr
je
int
or
nop
lds
decl
int
int3
or
mov
adc
repnz
cwtl
mov
push
sub
cltd
nop
enter
jmp
out
mov
fistl
mov
clc
and
out
or
mov
add
cld
lea
in
xor
or
jmp
stos
repz
leave
mov
aaa
cmp
pop
rol
fimull
fwait
test
test
repnz
aam
add
in
dec
mov
test
mov
ret
sbb
cld
xor
stc
call
and
xchg
xchg
inc
dec
push
movsl
mov
adc
xorl
adc
mov
dec
xor
cmc
test
sub
jns
lret
inc
imul
fdivl
cmp
mov
fldt
sub
pop
xchg
adc
jecxz
push
aad
xor
or
cmp
dec
xor
test
scas
xchg
jecxz
movl
inc
gs
jbe
jmp
aas
fcomi
add
cs
out
dec
mov
mov
jnp
scas
rcll
cld
and
inc
enter
inc
movsl
mov
in
mov
sbb
fdivs
pusha
insl
es
fildll
mov
xor
mov
sahf
or
ja
in
cli
repz
jns
sbb
mov
push
ja
push
sub
mov
stos
jmp
mov
cmp
loopne
mov
and
dec
jmp
sbb
inc
sar
mov
aam
test
ret
hlt
pushf
sbb
or
cmp
or
sti
nop
ds
fcmovnu
cltd
mov
xor
pop
push
nop
dec
sub
loopne
test
mov
jg
adc
in
shll
push
xchg
insl
mov
loope
sbb
or
push
dec
scas
and
jne
mov
cmpsl
das
or
sbb
inc
sti
gs
xchg
pop
cmp
outsb
imul
push
xchg
mov
mov
in
or
sub
movsl
push
xor
jl
or
daa
popf
mov
imul
xorl
std
test
imull
aaa
and
xor
or
enter
fwait
ret
ret
dec
adc
lds
cmp
adc
push
adc
mov
mov
add
imul
ss
mov
pop
clc
add
ljmp
push
mov
pop
fistps
out
mov
jae
arpl
xor
popa
fstps
pop
jnp
cmpsb
icebp
jae
fadd
pop
ljmp
js
insl
outsb
lret
cmp
sti
repz
push
insb
addps
sub
xchg
fidivs
imul
sbb
fwait
adc
add
mov
and
lock
mov
aam
sub
push
inc
pop
ret
clc
push
mov
scas
mov
popa
imul
fldt
shrb
andl
xchg
cmp
mov
sarl
cwtl
xchg
push
sbbl
das
movsl
fisubrs
out
inc
dec
push
rol
dec
sub
pushl
inc
not
jbe
imul
jo
sbb
into
shr
test
lods
mov
aad
shl
xchg
xchg
pop
ljmp
adc
int3
enter
jns
add
add
push
ficompl
sub
adc
imul
lcall
loop
into
call
jbe
jmp
sub
ret
mov
inc
mov
out
jmp
iret
popa
ds
sub
and
push
xchg
xchg
ror
arpl
cmp
mov
mov
jnp
and
lods
fists
gs
add
xchg
push
and
stos
cmpsl
or
jns
mov
std
ss
mov
push
lcall
inc
jno
cmp
repnz
cld
mov
jge
pop
int3
loope
adc
out
fidivl
cmc
in
jle
movsl
or
add
ret
in
push
nop
xor
icebp
int
dec
pop
mov
dec
xchg
cltd
insl
addr16
push
add
mov
cmc
push
stc
inc
ds
das
sub
shlb
aaa
fsubrs
fs
aad
xchg
lea
das
mov
xor
mov
mov
sbb
add
mov
sahf
out
aad
popf
xchg
inc
inc
in
leave
cwtl
subb
xorb
jnp
ja
aad
popf
call
insb
test
sbbl
lcall
subb
inc
daa
or
mov
fwait
stos
es
dec
add
xor
or
insl
jmp
sbb
pop
outsl
xor
out
fidivs
ud0
cltd
test
fld1
mov
add
mov
pop
push
ss
mov
and
les
shl
arpl
xor
stc
lock
pop
enter
mov
out
jge
shlb
inc
inc
xchg
or
ds
inc
push
xchg
fwait
sbb
fwait
sbb
add
and
bound
aas
stos
notl
dec
lods
dec
or
ror
std
in
sbb
testb
jl
mov
mov
dec
push
or
or
mov
rcrb
pop
adc
push
inc
in
sahf
adc
mov
incl
push
inc
lret
ja
push
out
adc
add
pop
mov
fs
push
push
out
ljmp
lds
imul
mov
in
xor
or
jne
lret
dec
adc
loop
mov
fstp
or
cmc
shr
mov
fnstenv
cmpsb
aaa
negb
push
in
outsb
dec
jge
fwait
add
je
out
adcb
int
fdivrs
lret
cs
push
adc
mov
dec
mov
push
cltd
cmp
fs
jno
xchg
shrl
ficomps
jne
scas
fidivs
fsubrl
push
pop
xchg
mov
add
sub
push
mov
pop
dec
add
jecxz
insl
jnp
rcr
incb
scas
adc
fbld
mov
add
mov
gs
jae
in
out
xchg
xchg
in
lcall
das
xor
popf
add
sbb
mov
mov
repz
push
xchg
in
pop
push
xor
lcall
jecxz
and
nop
ficoml
divl
mov
insb
icebp
std
add
divl
mov
inc
aas
dec
in
mov
pop
je
out
add
push
test
xchg
les
xor
icebp
mov
sub
pop
mov
leave
data16
cmp
adc
xor
or
mov
xor
ror
and
andb
gs
cwtl
adc
mov
cmpsl
jge
aaa
cmc
sti
pop
or
mov
and
ret
ljmp
or
add
jne
punpcklwd
into
xor
cmp
icebp
xor
and
push
or
mov
sbb
jnp
mov
in
js
push
inc
cltd
mov
pop
cmp
xchg
add
xor
xlat
imul
sub
or
jne
mov
pop
mov
sbb
in
mov
inc
and
add
inc
push
or
aas
hlt
fs
jmp
xlat
aas
sub
call
jnp
push
sbb
dec
movb
mov
aam
decl
dec
mov
vsqrtss
les
ss
dec
adc
xor
ret
inc
mov
jl
dec
mov
xor
push
pop
test
mov
sbb
ljmp
adc
aaa
lcall
pop
subb
mov
lods
adc
cmp
lods
mov
aaa
test
pop
lock
mov
shr
movsb
mov
add
repnz
mov
iret
jl
or
incl
scas
arpl
cmpsb
push
outsl
mov
rolb
aas
mov
repnz
aas
mov
cs
jae
push
inc
negl
inc
dec
dec
mov
jno
mov
into
xor
xchg
imul
mov
ljmp
or
dec
mov
movb
cmpl
push
outsb
jmp
imull
jne
in
in
sbb
mov
jo
dec
inc
data16
fimull
jg
pusha
lcall
movsb
sub
xlat
push
dec
mov
pop
daa
test
jae
enter
dec
imul
cli
cmp
jne
ds
rcll
mov
pop
cmp
mov
test
and
push
pop
xchg
dec
out
dec
dec
pop
fninit
int
add
into
push
xor
pop
mov
adc
jb
fwait
out
enter
into
adc
icebp
xchg
mov
jl
leave
scas
cmpsl
shll
xlat
ftst
push
push
pop
pop
xor
ret
gs
nop
push
cmpb
iret
xor
ret
in
inc
sbb
inc
pop
std
sub
ds
sbb
and
jae
and
ds
nop
mov
add
jg
nop
cwtl
dec
int3
mov
push
add
test
adc
adc
ljmp
repz
inc
mov
lea
popf
ds
out
sub
test
andb
cmc
jge
mov
lods
and
sbb
xchg
pop
test
in
dec
mov
xlat
sbb
repz
jmp
pusha
inc
adc
aam
jno
cmp
ret
push
into
pusha
mov
enter
cmp
inc
cli
rcll
sahf
jg
add
xchg
cmp
xchg
nop
sbb
adc
stos
movsl
cmp
mov
js
in
icebp
cmp
fadds
test
in
mov
jb
test
dec
rclb
jle
imul
int3
outsb
int3
mov
bnd
push
and
jmp
pop
adc
push
push
adc
repz
repnz
lock
sbb
inc
aas
call
fwait
adc
mov
mov
testl
mov
call
lods
scas
mov
xchg
inc
inc
sub
sarb
or
jae
rcrb
pusha
incb
aas
subl
shl
loop
ret
in
and
add
xor
test
mov
mov
adc
mov
leave
rcr
popf
mov
stos
jnp
sbb
insb
sbb
repnz
lret
lds
cld
popf
inc
push
cmp
mov
xor
add
mov
add
adc
repz
aad
mov
rcrl
dec
mov
mov
jnp
aas
xchg
notl
shlb
sub
and
fcoml
pop
sub
out
aaa
aad
dec
mov
cmp
mov
cmpsl
push
or
faddl
jle
and
rcll
jl
sbb
jle
xchg
test
icebp
std
dec
add
rcll
aas
popa
push
mov
outsb
out
mov
jl
mov
icebp
xchg
sbb
xchg
out
es
jge
ja
stos
mov
mov
movsb
inc
in
jl
insl
mov
loopne
xor
out
outsb
fcmovu
or
add
ljmp
cltd
decb
cmp
jge
sbb
rcrb
sbb
mov
mov
push
subb
mov
imul
mov
test
fisubrl
sarl
add
lods
dec
aaa
xchg
call
test
xlat
lahf
cltd
sbb
lods
divb
mov
xchg
jae
cmp
inc
mov
push
push
cmp
test
adc
mov
sbb
aaa
iret
or
cmc
cwtl
push
mov
dec
les
jle
jne
pop
sub
in
push
into
mov
stos
jmp
test
push
fisttpl
test
mov
stos
iret
and
push
adc
dec
push
stos
inc
dec
xor
and
pop
aam
ss
adc
mov
into
xlat
dec
mov
lds
js
add
pop
adc
add
data16
lock
mov
repz
sahf
iret
es
out
movsl
xchg
rcrl
nop
mov
dec
stos
xor
cwtl
mov
or
cli
xlat
sti
shrb
push
and
inc
push
int3
xor
jne
fisubs
fidivl
inc
jge
fiadds
stc
std
das
je
pop
mov
push
adc
jl
mov
xor
mov
xchg
mov
cmpsb
pop
push
mov
sbbl
jecxz
dec
mov
add
xor
jnp
bound
popf
ss
cmc
movsl
jns
inc
mov
mov
fnstcw
test
gs
das
inc
mov
das
xchg
out
mov
jnp
mov
adc
cld
sub
sub
fistps
icebp
sbb
orl
insb
stos
mov
xchg
movl
sub
adc
mov
lcall
js
jmp
arpl
mov
sbb
xor
cmp
sub
sbbb
xchg
es
push
xor
movsl
lods
jne
dec
in
xchg
mov
add
inc
mov
and
jl
mov
je
add
or
add
pop
cmp
packsswb
sub
clc
jg
jp
mov
xor
jae
jecxz
call
notb
jmp
cld
mov
xchg
xchg
cmp
and
xor
cmc
adc
jle
test
mov
cmc
or
push
add
rcrb
push
mov
aaa
out
push
ja
pop
insl
mov
pop
roll
jecxz
cmp
fmuls
or
or
hlt
sti
adc
inc
sub
xor
xchg
test
add
lret
pop
ljmp
lret
enter
sub
inc
inc
pop
jb
jae
adc
testl
inc
and
adc
cmp
mov
mov
mov
jns
mov
xchg
mov
and
fwait
xor
inc
jo
or
cmp
mov
decb
mov
cli
lds
add
int3
in
aam
lret
mov
addl
add
js
jns
xchg
cmp
push
bound
pop
add
mov
inc
movsb
sub
mov
sbb
cmpl
mov
mov
xchg
push
or
mov
or
add
cld
pop
push
daa
push
insb
mov
cli
hlt
in
rclb
lods
push
jmp
loopne
or
mov
sbb
mov
adc
shrd
sarl
incl
das
jne
pop
dec
rcrl
int
xchg
lcall
xchg
cli
and
fwait
in
mov
mov
mov
dec
ja
andb
test
aas
aam
mov
add
rcrb
sbb
scas
cltd
add
lss
out
dec
ret
aaa
sub
test
int3
dec
lds
add
push
sbb
jae
outsb
cld
sub
or
aad
mov
inc
push
mov
loope
push
subl
mov
sbb
in
das
out
pop
push
rcl
lds
inc
int
sbb
sub
pop
lcall
adc
cmp
into
imul
mov
pop
std
stos
sbb
lods
mov
cmp
mov
xor
mov
mov
shr
mov
or
arpl
cmp
push
adc
gs
jns
dec
ret
lret
jb
mov
sub
aam
repnz
nop
xor
mov
mov
pusha
aad
out
movsb
ds
cmp
inc
cmp
xor
sbb
iret
push
arpl
adc
sbb
arpl
movsb
adc
daa
xchg
outsb
adc
aas
xchg
hlt
addb
or
mov
add
or
lock
andl
shlb
aaa
enter
xchg
sti
xor
not
into
jg
movsl
lahf
test
loop
dec
out
cmp
lret
mov
cli
dec
xchg
jo
shlb
pop
aam
sub
jb
pop
icebp
sbb
pop
mov
xchg
mov
inc
int3
sub
pop
aad
lods
sbb
sbb
inc
sub
insb
lock
pushl
movsl
pushf
cs
cmp
fisubrs
mov
jnp
inc
test
and
es
sahf
imul
addr16
subb
sbb
and
cmp
sub
inc
fwait
lods
stos
lock
push
cmp
mov
dec
add
jecxz
inc
mov
sub
adc
mov
jl
dec
jo
cmc
add
mov
adc
iret
inc
outsb
ljmp
push
faddl
inc
inc
pop
mov
lods
mov
inc
mov
lahf
ja
loopne
lods
cmp
adc
xor
add
sbb
popf
mov
out
repnz
test
mov
sub
test
xchg
ret
mov
enter
or
call
movsb
stc
dec
sub
jbe
xchg
sbb
mov
dec
addr16
dec
inc
ja
cld
mov
rcrb
stc
push
or
mov
rolb
or
dec
leave
and
jle
pop
cmp
mov
bound
fnstsw
dec
jl
dec
stos
mov
pop
shrb
shr
push
imul
test
adcb
and
or
aam
xor
jno
inc
jp
pop
js
sbb
cltd
xor
in
sbb
xchg
mov
adc
push
or
outsl
and
movsb
repnz
cmc
adc
push
cmp
adc
lret
repnz
push
xor
cmpsb
addr16
lods
mov
scas
cld
inc
shlb
mov
jno
dec
xor
scas
mov
mov
sbb
lds
test
lea
pop
outsl
xor
push
sub
in
inc
xchg
sbb
pop
idivl
cltd
mov
cmc
popf
inc
push
xchg
rcll
push
les
pop
sub
add
loopne
mov
sbb
mov
pop
sub
jl
dec
xlat
hlt
add
mov
push
shlb
in
sbb
inc
jbe
jb
cmp
dec
fwait
clc
ret
insl
sbb
xor
add
cmp
push
adc
repz
shll
mov
sbb
mov
jns
cmpsl
pop
inc
les
fst
push
pop
sbb
daa
xor
xchg
scas
mov
sub
sub
add
push
or
hlt
push
shl
outsb
mov
ret
and
int3
push
das
icebp
jp
daa
js
shlb
mov
sub
fdivrs
add
dec
bound
sbb
sub
inc
fbld
add
adc
jb
out
ljmp
or
mov
js
pop
jne
and
int
cmp
jnp
xor
xchg
xor
cmp
and
or
pop
push
cmp
iret
and
andb
bound
jle
cmp
push
adc
mov
adc
inc
sbb
xor
pushf
push
fimull
pop
cmp
fwait
mov
out
not
cli
mov
and
jnp
dec
adc
mov
dec
or
nop
xor
es
cli
mov
or
xchg
adc
test
adc
incb
imul
sbb
sub
xchg
push
xor
sti
clc
int3
fistpl
das
and
int
sub
xor
and
insb
pop
push
pop
pop
xor
shl
clc
ret
inc
xor
out
sub
dec
movsb
imul
inc
mov
loopne
mov
push
clc
cmp
movsl
xchg
push
mov
pop
mov
fs
xchg
push
sahf
cmp
cmp
rolb
insb
cmp
jbe
xchg
outsb
ljmp
scas
test
push
sbb
aad
fsubrs
cld
mov
jne
mov
xor
rep
leave
and
mov
cmp
in
push
push
ja
xchg
test
daa
icebp
and
je
adcl
and
add
inc
dec
mov
dec
data16
ret
leave
dec
and
or
leave
adc
daa
movsl
lods
mov
icebp
sbb
outsl
in
mov
neg
push
arpl
addr16
fwait
dec
xor
cld
inc
ss
aad
mov
not
dec
fwait
cli
mov
cmp
push
addb
arpl
inc
call
xchg
mov
dec
dec
cmpsl
xor
addl
std
daa
sarb
fs
lret
pop
sbb
xor
sub
xor
pop
mov
cld
push
inc
sub
cld
addr16
add
jmp
add
add
enter
fwait
sub
insb
fs
inc
repz
and
jns
lea
pop
sbb
jnp
pusha
cmpsb
inc
add
mov
stos
jecxz
cltd
mov
jb
stc
push
xor
jae
fdivrl
and
pop
dec
jnp
inc
xchg
nop
jae
pop
out
clc
push
ffreep
cmp
lea
fmull
fidivrl
loope
repnz
mov
xchg
cmp
lahf
cli
repnz
cwtl
aad
adcb
xchg
inc
and
mov
xchg
sbb
shll
dec
push
mov
inc
outsb
push
jno
std
push
rorl
lods
icebp
in
push
push
pop
jns
xchg
jp
shrb
sbb
idivb
push
sbb
lcall
sbb
mov
add
and
inc
stc
pop
push
dec
out
inc
sbb
dec
xor
das
aaa
inc
ss
fisttpl
add
lret
sub
cmp
sub
orb
push
sub
icebp
inc
cli
adc
pop
add
stos
dec
loopne
lods
sub
js
pop
cmp
mov
loope
jnp
fisubs
mov
popa
or
and
add
das
jo
sbb
in
imul
orb
mov
scas
pop
mov
fadd
inc
xchg
int3
inc
insb
and
xchg
cmp
dec
mov
aad
test
mov
mov
ljmp
insl
jle
push
jecxz
pop
popf
subl
mov
mov
ljmp
icebp
cld
loope
adc
inc
test
and
and
dec
icebp
fs
lcall
cltd
inc
je
mov
ret
lods
jns
imul
outsl
ret
into
dec
out
ds
lcall
add
inc
jmp
mov
movsl
and
mov
jge
in
jmp
pop
mov
and
and
push
inc
mov
xchg
mov
aas
push
xchg
pop
mov
dec
ret
and
cmpsl
aam
ud1
loop
adc
mov
insb
int3
std
shll
mov
icebp
xor
jl
dec
xchg
sub
push
push
es
mov
mov
leave
mov
add
or
and
inc
adc
push
cmp
mov
xchg
aad
pop
bound
xchg
in
repnz
popa
adc
ret
js
cmpsb
xor
jl
lds
outsb
jbe
dec
jb
cmp
inc
adc
ljmp
mov
cmp
jle
pop
jnp
push
arpl
xchg
sti
cli
push
fistps
shl
sarl
xchg
adc
pusha
lretw
aaa
nop
sbb
inc
adc
jno
rcrb
or
into
in
mov
mov
add
sbb
shl
push
pushf
pushf
aad
orl
and
popa
insl
inc
mov
js
pop
push
push
sbb
jecxz
mov
sub
mov
push
sti
sbbb
adcl
test
mov
iret
out
or
ja
loope
test
out
dec
add
push
mov
mov
inc
mov
sub
jo
insl
and
aas
mov
mov
sub
inc
xchg
sahf
lods
dec
pushf
and
js
lret
movsb
jne
mov
mov
dec
adc
popf
test
ret
jns
aaa
sub
jg
icebp
xchg
xchg
test
inc
lcall
sbb
fiadds
repz
fdivs
fs
leave
fcmovnb
jno
enter
inc
std
mov
test
enter
xchg
insl
fcomps
push
jo
repz
testl
xor
out
adc
jp
fstpt
mov
out
add
in
mov
nop
jae
lods
mov
loop
cmp
das
push
push
ds
jbe
mov
lret
fidivs
xchg
xlat
jl
sbb
mov
mov
clc
in
into
repz
lock
scas
cmp
adc
orl
add
xchg
inc
xchg
into
dec
scas
jno
test
and
loope
mov
mov
orl
leave
es
dec
mov
iret
daa
aam
enter
into
or
jecxz
in
add
nop
jp
js
xchg
lods
xor
ss
call
adc
push
inc
dec
mov
mov
test
mov
mov
notl
push
inc
sub
into
stos
push
jnp
mov
dec
jb
inc
push
fsubl
stos
dec
inc
and
push
lods
sub
in
insb
cmp
dec
jno
adc
pusha
fsub
inc
bound
push
cld
fimuls
adc
mov
xchg
cld
jno
mov
lods
xor
jg
xor
cmp
inc
out
sti
pop
dec
les
push
test
sahf
stc
cmc
out
xor
mov
insb
mov
adcl
xor
dec
sbb
mov
je
xchg
int3
push
test
ljmp
sbb
out
into
inc
dec
cmp
mov
xchg
lahf
adc
fstl
push
repz
dec
inc
scas
cmp
push
inc
gs
cmp
cltd
push
lods
mov
icebp
inc
mov
call
sub
ja
adc
fcmovbe
xor
aas
mov
repnz
int3
addr16
mov
stos
aam
mov
jle
and
loopne,pt
stos
and
xchg
call
push
cmpsb
les
mov
jne
mov
ret
xchg
mov
je
mov
push
scas
mov
jecxz
stc
rcrb
xchg
loopne
das
xchg
push
pop
lret
or
mov
into
push
negb
pop
sub
mov
pop
pop
lods
cmp
mov
fstpl
fwait
in
fisubrl
cltd
xchg
mov
clc
adc
not
fmuls
imulb
cmpsl
fstps
xchg
lret
mov
cmp
and
in
inc
and
test
ljmp
dec
jg
pop
jmp
data16
push
dec
mov
jp
push
test
push
mov
cs
mov
xchg
jo
sti
lea
mov
cld
rcrl
into
push
sbb
int3
movsl
jo
push
test
and
xchg
rclb
sub
dec
addr16
mov
stos
rolb
lea
out
out
pop
pop
sbb
push
insb
aaa
inc
aas
and
stos
sti
mov
and
ds
leave
mov
mov
mov
fnsave
mov
int3
jbe,pn
push
idivb
scas
ret
das
mov
inc
push
int3
mov
je
add
dec
jp
mov
xchg
popf
pop
movsl
cli
cmc
sub
add
cwtl
cli
mov
adc
loop
pop
pop
sbb
sbb
jmp
adc
mov
rcl
xchg
imul
jne
fidivl
sbb
sahf
push
adc
fidivs
mov
out
inc
dec
pop
mov
sbb
sbb
out
mov
pusha
in
cmc
ljmp
cmp
fcom
lods
cmp
xchg
xchg
leave
and
mov
cli
mov
cmp
jg
push
add
pop
aas
fcmovnb
scas
mov
inc
rcrb
or
iret
pop
xlat
inc
xor
adc
fucomi
mov
or
or
dec
das
movsl
adc
cltd
sti
aas
pop
mov
es
mov
fwait
or
pop
or
add
cmpsl
jnp
outsl
jp
adc
mov
jb
jno
jg
fstpl
insl
dec
sbb
xor
push
cltd
push
or
pusha
xor
push
fdivrl
dec
mov
ret
es
es
ljmp
movmskps
xchg
ja
jno
mov
xor
enter
sub
sbb
sub
icebp
jmp
push
sub
sub
add
in
aaa
push
in
arpl
jae
inc
fildll
add
jns
data16
enter
pop
xchg
jb
fbstp
mov
scas
mov
mov
dec
fstpl
iret
addl
xchg
xchg
or
mov
std
fs
idivl
add
or
cmp
cmpsb
in
dec
leave
push
iret
aas
xchg
mov
cmpsl
out
pusha
mov
lods
daa
repz
addl
mov
enter
test
pop
add
call
mov
add
les
cwtl
push
loopne
cmc
iret
mov
xlat
lods
imul
dec
loop
sahf
fdivrl
inc
lock
pop
pop
leave
adc
sarb
inc
dec
mov
mov
xorl
lcall
lods
xor
cmpb
rorl
and
loope
imul
mov
dec
stos
subl
mov
jmp
scas
int
push
lahf
cmp
mov
push
cltd
int3
add
sbb
cmp
push
hlt
repnz
mov
jge
in
or
push
call
adc
xor
filds
jo
lea
rolb
mov
arpl
mov
inc
in
fidivrl
repz
scas
sub
inc
rolb
mov
out
mov
inc
jae
lahf
outsl
dec
int3
jl
add
test
ret
xlat
pushf
adc
jmp
cs
repz
push
fwait
mov
pop
sub
les
add
mov
mov
push
jecxz
xor
mov
ljmp
sub
idiv
xchg
mov
jb
or
ss
fbstp
push
and
push
mov
notb
cltd
jp
xchg
ret
mov
shlb
pushf
cld
jp
mov
cmp
in
xchg
imul
stos
out
push
sbb
lret
ja
cmp
pushf
lea
cmc
cmpsb
cmp
into
in
dec
sub
adc
inc
je
in
lret
in
pusha
repz
push
adcb
sbbl
int3
dec
outsb
nop
or
or
int
add
das
inc
cmpsl
loop
flds
mov
pop
loop
in
dec
das
or
clc
push
push
leave
and
or
icebp
fldenv
pop
mov
fistpll
dec
sbb
inc
shr
mov
das
fdivp
lods
je
cmp
mov
outsl
iret
sahf
clc
push
movsl
and
lea
xchg
in
cmp
jle
sub
lock
sbb
xchg
jns
xchg
lcall
adcb
dec
fcomps
cltd
out
shrb
jae
out
mov
jl
out
lock
and
mov
xchg
cmp
push
fmull
mov
jb
xchg
pop
mov
or
push
pop
inc
test
xor
fs
loopne,pn
and
addr16
push
cwtl
adc
enter
push
or
dec
cs
mov
jo
and
dec
sbb
push
adc
jl
pusha
rol
int
lcall
add
inc
adc
jecxz
inc
mov
jl
and
popl
or
sub
and
clc
sti
mov
inc
xor
cwtl
cmp
stos
arpl
test
push
test
mov
and
rol
ficomps
or
ret
xor
lcall
jle
jns
aam
jl
mov
fwait
push
stc
fisttpl
adc
sub
into
push
repz
scas
lret
enter
mov
mov
cmp
adc
mov
cli
cmp
xchg
testl
adc
fstl
inc
xchg
clc
inc
jecxz
and
jle
and
aaa
daa
mov
popa
imull
mulb
in
clc
sahf
mov
subl
arpl
ficomps
inc
or
jp
int3
inc
out
shl
or
xor
or
jae
mov
and
pop
dec
inc
fidivrs
fnstsw
lcall
pop
xchg
adcb
stc
aam
adc
mov
push
les
daa
xchg
hlt
aaa
add
outsl
cmc
idivl
loopne
xchg
test
and
das
rclb
push
add
popa
xor
xchg
fwait
test
push
lds
adcl
div
pop
and
jns
mov
xor
mov
mov
icebp
inc
push
cli
jl
mov
xorb
adc
test
mov
js
mov
hlt
or
int
xor
cli
push
std
and
in
lods
cmp
dec
jo
sbb
sahf
jne
pop
shll
mov
adc
sub
int
mov
insl
mov
mov
aas
lahf
arpl
lcall
icebp
fistps
xor
sbb
shl
or
xor
js
rorl
jl
lock
scas
push
mov
add
or
inc
ljmp
in
leave
jae
dec
lods
jge
das
cs
inc
insw
pop
mov
jne
or
rorb
and
xchg
pop
mov
stos
mov
sbb
stos
cmp
pop
mov
mov
imul
sbb
xchg
dec
push
jb
test
rolb
fs
xchg
shll
pop
mov
in
dec
loope
pushf
mov
jl
jecxz
out
sbb
jae
shll
shlb
pop
pop
scas
decb
daa
inc
in
popf
test
popa
lock
mov
sub
dec
fxtract
sti
lds
mov
and
popa
test
imul
addl
pop
lret
fcoms
xor
sbbb
mov
dec
dec
mov
aad
jne
in
or
int
inc
jmp
jp
xchg
push
push
gs
ja
jge
das
cmp
mov
xor
pop
push
and
pop
in
mov
aad
sahf
out
pop
pop
rcr
add
xor
mov
dec
mov
cmp
les
punpckhwd
and
iret
pop
std
mov
mov
mov
cmp
dec
mov
outsl
js
pop
inc
arpl
xchg
inc
stc
jg
jg,pt
data16
mov
sahf
aas
arpl
out
cmpsl
out
cmpb
inc
test
pop
jbe
daa
stos
xchg
adc
fs
aaa
mov
xchg
and
inc
push
jns
roll
inc
fnsave
cmp
pusha
push
jo
and
popf
and
test
jo
rcll
lods
push
clc
dec
pop
xorb
pushf
xor
imul
adc
shl
jae
pop
add
mov
in
int3
xlat
xchg
jno
mov
bound
adc
mov
out
es
cmpsl
push
mov
fcoms
out
sahf
xor
adc
xchg
repz
mov
shrl
mov
jmp
mov
jae
push
repnz
jo
cmp
cltd
inc
jne
into
sub
mov
scas
nop
ja
add
xor
push
cmpsl
inc
cli
sbb
add
std
add
mov
cmp
mov
mov
mov
or
xlat
fcoml
fdivs
dec
sbb
sbb
fldcw
and
pop
inc
jno
sbb
cld
aam
mov
xchg
in
das
test
jns
xchg
lahf
xchg
push
jp
inc
out
mov
call
mov
push
xor
inc
adcb
iret
xchg
inc
or
mov
xchg
shll
cmpsl
push
sub
dec
xchg
sbbl
sbb
adc
gs
or
xor
lret
adc
push
pop
and
add
and
xor
xlat
gs
data16
sbb
sbb
inc
sbb
test
mov
aad
and
sub
sub
or
xor
nop
int3
enter
mov
or
cmpsl
cs
fsts
in
jecxz
mov
daa
and
jle
inc
cmpl
clc
xor
mov
or
dec
or
add
sbb
icebp
push
cmp
iret
test
xorl
clc
inc
ja
movsb
lock
popa
and
xor
arpl
xlat
push
jo
fcomps
sbb
mov
cli
mov
movsl
sub
sbb
mov
xchg
ljmp
push
jle
icebp
jne
sub
mov
mov
mov
add
ret
arpl
aad
sub
lret
add
dec
loopne
test
mov
and
push
xor
lret
adc
test
push
mov
lcall
pop
mov
add
pop
cli
in
pushf
and
cmp
push
pop
xchg
push
sbb
mov
cwtl
test
push
test
adc
add
fwait
mov
pop
dec
test
add
adc
pop
add
repnz
cs
lret
out
orb
loope
adc
pop
in
xor
add
pop
or
xchg
negl
call
mov
aas
mov
and
or
adc
shll
add
lahf
push
cli
add
test
inc
cmp
mov
test
jmp
fsubrl
into
cwtl
lret
adc
rorb
and
push
fmull
xchg
ret
cmp
lods
adc
add
popf
stos
les
stos
pop
and
pop
into
fcompl
ljmp
fs
pop
fs
adc
addl
loope
movsb
stc
push
dec
cmp
add
out
add
add
popa
leave
xor
push
mov
ds
adc
lock
cwtl
notl
dec
mov
or
cmc
xchg
imul
or
fbld
sub
sub
ss
xchg
popa
xlat
mov
and
pop
out
movsb
sahf
dec
sbb
push
push
lods
test
inc
mov
xor
jle
loope
ljmp
mov
sbb
daa
jge
aaa
xor
es
sbb
das
clc
lock
push
jle
das
stos
sti
fst
pop
test
xchg
and
and
push
sti
ja
pop
mov
outsl
lea
test
lock
jp
mov
int
lret
iretw
lret
mov
jmp
cwtl
inc
js
in
cltd
imul
loopne
or
cmc
fs
ret
iret
scas
sbb
pop
lcall
dec
mov
inc
sti
cmp
shll
and
add
nop
rcrl
mov
imul
jns
pop
jae
stos
sbb
and
push
mov
sbb
xlat
jecxz
pop
out
sub
xlat
ret
jb
push
in
xchg
leave
into
xchg
push
stos
mov
cmpsl
xchg
je
mov
or
mov
repnz
lock
ret
fsubrl
xchg
jno
push
cs
jno
adc
jnp
xor
jl
inc
outsb
cs
incl
icebp
call
push
and
test
adc
into
mov
test
shlb
inc
xor
popa
outsl
jge
stos
xchg
xchg
cmp
mov
sbbl
push
lahf
insb
pop
add
mov
cli
inc
ror
stos
adc
mov
adcl
rcr
jle
jo
test
test
xchg
testl
outsb
rcrb
xchg
ds
jno
or
test
pusha
in
fsubrs
pop
lods
mov
lods
stc
jp
imul
aas
cmp
gs
ss
and
dec
je
daa
cmp
adcl
and
popf
testl
addr16
or
mov
push
jl
dec
xorl
jmp
pop
adc
xchg
jno
fsts
sub
push
mov
cltd
arpl
mov
mov
pop
lcall
les
mov
pushl
add
movsb
push
sbb
jg
jne
jl
pop
into
cli
and
loop
sbbl
pop
ss
in
pop
pop
mov
loope
sbb
mov
jg
movsl
es
mov
jno
push
jp
fistl
push
imul
pop
dec
jmp
and
loop
lea
mov
dec
or
shrb
cmp
adc
shlb
clc
xor
cmc
in
mov
pop
outsb
mov
or
push
cmp
pop
es
push
and
xchg
imul
enter
js
adc
into
mov
idiv
pusha
add
sub
pop
lock
rcr
dec
ljmp
sbb
and
pop
fiaddl
xor
fcompl
dec
aad
in
je
in
mov
nop
cmp
push
lods
xor
xchg
test
in
jbe
mov
pusha
xorb
and
dec
lret
push
mov
sub
xchg
pop
pop
out
in
cmpsb
jae
daa
adcb
cs
cli
das
clc
sub
fcmove
roll
xlat
xchg
out
shrb
mov
insb
incb
mov
push
shll
adc
or
arpl
inc
mov
sbb
cmp
mov
lcall
mov
pop
pusha
jge
loopne
pop
mov
cwtl
add
pop
lea
nop
and
test
jo
lcall
fisubs
ja
clc
mov
adcl
jmp
test
pushf
pop
imull
notb
test
push
adc
push
and
je
out
sbb
mov
lods
lods
jnp
push
pop
push
lods
sub
xchg
popf
jno
lds
insl
ret
cli
pop
cld
popf
xor
ds
popf
add
negl
lock
push
pop
pop
shlb
test
fcomp
sbb
cmp
loopne
sub
mov
aam
adc
lahf
in
xor
cmp
cld
movsl
clc
int3
sbb
je
and
mov
mov
lods
adc
cmp
jecxz
adc
push
ret
pushf
fs
sub
jmp
push
push
pop
push
dec
scas
lods
shrl
or
mov
aas
shr
xlat
iret
or
mov
or
shlb
inc
fdivs
rorl
or
pop
cltd
sub
ret
das
int
fwait
enter
mov
push
test
jne
jge
mov
sarb
out
test
leave
mov
xchg
xchg
jp
lods
dec
jbe
scas
test
sbb
mov
and
out
movups
add
mov
jecxz
idivb
xor
mov
xor
xchg
daa
or
inc
jmp
iret
out
xor
ror
mov
push
cld
push
mov
mov
std
data16
or
push
hlt
pop
add
jmp
xchg
test
pusha
and
mov
aaa
cwtl
xchg
xor
add
ftst
push
fstsw
in
cld
lcall
ret
out
jne
pushf
in
cmp
ffreep
test
sbb
lret
jge
xchg
jae
jae
ljmp
mov
in
push
mov
lock
pop
sub
dec
sti
lahf
xchg
mov
shlb
pop
push
mov
fs
sbb
hlt
cmp
in
shll
fwait
rcl
jl
cmp
cmpl
hlt
mov
cli
sub
out
add
or
and
in
cld
add
stc
ss
stos
lcall
jmp
sarb
sti
stos
add
pop
out
push
pop
sbb
jnp
insl
xor
daa
mov
lret
cmp
inc
mov
and
add
or
loop
jg
sub
fistl
inc
shlb
sbb
xor
jle
sbb
jb
or
mov
popa
bound
jnp
mov
adc
fs
mov
pop
into
insl
movsl
jne
pop
enter
adcl
xchg
mov
jne
mov
les
rorl
ficoml
imulb
call
adc
dec
push
sbb
imul
fcoms
push
iret
fwait
loope
bound
sbb
xor
mov
out
shll
cs
jns
push
in
scas
pop
lock
mov
xor
adc
mov
cmc
int
pusha
dec
sbbl
cwtl
jge
test
movsb
jnp
and
cltd
fbld
push
jbe
jp
dec
push
dec
ja
dec
repnz
adc
sub
shl
das
int
and
mov
ja
frstor
lock
ret
sub
nop
faddp
push
mov
test
iret
es
add
outsl
ss
mov
out
xchg
xchg
loope
lds
xchg
test
xorl
sti
xchg
mov
mov
pop
popa
testb
mov
cld
mov
aaa
loope
push
jbe
adc
mov
jae
push
int3
imul
insb
dec
lea
jo
xor
jmp
sbb
add
gs
dec
xchg
or
inc
mov
push
adc
insl
ret
outsb
sbb
sbb
mov
fs
xchg
out
fs
sbb
cmp
inc
scas
fldt
ds
outsl
xchg
adc
dec
xchg
jb
movb
jmp
jp
jo
sahf
and
movsb
shlb
push
add
xchg
divb
fidivs
nop
cmc
sbb
push
out
jmp
xchg
outsl
push
dec
ss
fadds
jns
out
fucomi
inc
cmp
testl
inc
mov
inc
cld
into
ret
sbb
aam
mov
shrl
sbbl
sarl
sub
pop
xor
mov
iret
dec
pushl
jg
jo
int
iret
xor
inc
lcall
aaa
mov
mov
dec
repnz
cli
push
int
shll
jae
mov
sub
jo
mov
pop
adc
call
shrl
mov
in
mov
pop
inc
dec
nop
mov
mov
cmp
shrl
or
leavew
mov
push
xor
push
sub
mov
mov
aam
js
sahf
xchg
enterw
push
mov
int3
fwait
in
and
fdivr
add
rcrb
fwait
mov
bnd
cmovns
loop
cmc
daa
insb
fwait
lret
out
inc
mov
sbb
or
ljmp
mov
das
pop
ja
cmc
push
imul
inc
inc
xor
fldcw
push
pop
mov
mov
push
mov
sbb
idivb
pushf
jnp
mov
addr16
push
shl
mov
enter
scas
fidivs
sub
ss
std
jge
test
adc
xchg
outsb
popa
rol
fchs
test
ja
testb
std
jp
and
cmp
es
pop
fs
out
imul
pop
adc
cmp
lret
adc
adc
test
out
clc
cmp
xchg
clc
sub
mov
mov
ss
rorl
outsb
dec
sub
into
lret
enterw
jnp
sbb
dec
popl
roll
adc
adc
out
cmp
leave
mov
incl
sbb
lret
fmul
lds
test
mov
mov
inc
inc
xor
push
push
imul
jg
test
movsl
dec
jmp
mov
adc
clc
jp
jbe
fldcw
jae
mov
jmp
push
mov
sub
xchg
and
xor
cmp
and
ss
cmpsb
sbb
flds
test
push
sub
xchg
cmp
imul
int3
sti
xor
sahf
cs
int3
jbe
and
and
mov
mov
inc
insb
in
scas
add
xlat
inc
aad
mov
xor
in
cmp
mov
cmp
in
sub
loop
add
addr16
into
push
ljmp
pop
sbb
sarl
jae
shlb
adc
pop
outsb
push
xchg
add
fcmovnb
mov
mov
lahf
dec
test
jnp
sbb
jge
shl
mov
mov
sbbl
mov
adc
std
lcall
xchg
push
push
mov
push
nop
dec
lods
pop
imul
pop
mov
jmp
sub
scas
dec
ret
or
shrb
ret
loope
mov
dec
inc
imul
push
test
and
ficompl
or
or
and
jbe
cmpl
lret
mov
lret
outsl
leave
mov
add
sub
inc
adc
push
sub
add
outsb
and
mov
orl
mov
inc
sbb
ficoml
ret
inc
and
adc
jl
push
test
addr16
cli
pop
movsb
pushw
test
or
sbb
mov
pop
gs
inc
enter
mov
and
in
cwtl
testl
cltd
pop
adc
cmc
mov
popa
pushf
out
test
push
sub
aad
push
loopne
shrb
jno
int
dec
in
mov
jmp
data16
imul
out
imul
movl
movsl
iret
cld
daa
sbb
jp
mov
jg
dec
jl
jp
xchg
jmp
dec
outsb
or
cld
push
and
movsb
dec
jno
mov
sbb
aam
or
imull
xor
shlb
jge
int
sub
push
cltd
incl
cmc
cmpsb
xor
jl
adc
mov
cmpsl
jmp
push
xchg
xor
mov
mov
and
mov
dec
xor
or
and
cmc
pop
inc
mov
in
adc
addr16
sbb
pop
dec
mov
mov
clc
aad
outsb
stos
outsl
push
daa
stos
dec
cwtl
sub
jmp
fdivl
pop
ror
pop
push
adc
test
mov
and
loop
pop
push
xorl
jecxz
xchg
mov
ja
std
push
xor
xchg
mov
lcall
lds
sarb
mov
add
jae
jle
mov
mov
mov
sbb
or
lcall
mov
and
ljmp
jo
fistpl
pop
or
mov
jmp
rcll
push
mov
pop
cwtl
test
int
loopne
add
cmp
mov
xchg
rcl
cmp
scas
cmp
push
inc
loopne
push
inc
fnstsw
or
and
stc
movsl
add
cli
insb
mov
cli
lods
gs
xor
out
insl
insl
in
dec
xlat
jne
mov
nop
cmpsb
das
mov
dec
or
rep
sbb
fwait
lock
leave
xchg
lods
and
push
cmpb
frstor
aad
dec
mov
inc
add
pop
mov
inc
sbb
xor
or
xchg
inc
and
jbe
neg
lods
pop
sbb
mov
into
test
lret
in
add
outsl
jno
test
or
ljmp
adcl
adc
mov
scas
or
fs
popa
push
or
or
jl
jno
adc
adc
jnp
push
pop
fucom
ret
imul
xor
jp
imul
push
gs
inc
cltd
mov
aas
xchg
icebp
fdivs
test
aad
fs
sbb
push
jmp
inc
sbb
jge
or
das
jg
cmp
adc
shll
adc
push
dec
pop
push
jnp
inc
mov
ss
stos
add
ja
xor
cmp
rcrb
sbb
lock
sahf
fdecstp
ds
lods
lods
pusha
adc
aad
cmp
and
mov
mov
sub
testb
or
jbe
repz
add
add
cmp
icebp
enter
jo
xlat
fs
lret
sub
movsb
aad
fidivl
xor
das
cli
das
test
inc
mov
int
jo
mov
stos
push
push
dec
mov
dec
mov
pop
jnp
jns
imulb
hlt
and
push
xor
sarl
cmpsl
jecxz
add
cli
dec
jecxz
addr16
add
adc
outsb
rcrl
cmp
mov
fisubl
loop
sub
lea
lea
cmp
sarb
pop
pop
das
clc
pop
jne
je
mov
mov
outsb
test
call
dec
arpl
cmp
push
sub
clc
dec
nop
mov
pop
movsl
add
mov
rcrb
dec
adc
and
sub
movb
cmp
in
dec
sub
stos
adc
jno
mov
test
mov
mov
imul
inc
jae
xchg
aam
push
aad
test
iret
pusha
sbb
cltd
and
dec
adc
in
and
sub
cs
mov
pop
mov
cmpsl
shll
inc
push
rclb
xor
stos
out
cmp
sbb
call
add
pop
mov
stos
insb
sub
enter
orb
insb
sbb
adc
pop
repz
into
cmp
imulb
mov
pop
adc
adcb
aaa
ds
movb
movsl
call
ret
mov
fcoms
sub
test
aaa
mov
repz
adc
push
xor
pop
ret
inc
pop
lret
xor
and
xchg
sbb
sbb
jb
jo
jmp
pop
adc
mov
hlt
and
jp
fistps
jbe
sub
or
jle
fisubrs
imul
jge
push
xlat
or
das
mov
sub
mov
daa
dec
xchg
xchg
mov
jbe
fnsave
mov
pop
xchg
insl
xchg
out
mov
mov
xor
xchg
fidivrl
xlat
jg
push
rcll
cwtl
repz
jmp
int3
xchg
sarb
jne,pt
xorl
xchg
adc
pop
js
les
dec
xlat
loope
fs
cmp
cs
in
sub
and
lds
dec
lret
and
fimull
or
adc
mov
subb
add
pusha
icebp
mov
nop
insl
ja
dec
outsl
add
xchg
rcrb
fsub
shl
dec
shrb
xchg
mov
imul
daa
dec
mov
pop
pop
imul
or
xchg
repz
dec
jecxz
pop
xor
jge
lods
fnstenv
lret
in
adc
scas
ljmp
add
aad
mov
hlt
sub
call
sbb
sqrtps
outsl
es
lret
outsl
xchg
clc
jmp
push
sbb
sti
xor
inc
mov
lgs
lock
nop
outsb
insl
out
or
mov
test
sti
aam
sub
das
out
mov
mov
or
ljmp
jecxz
mov
dec
fcmovu
mov
mov
push
lahf
jp
mov
or
adc
lods
jbe
and
jmp
adc
xchg
test
inc
adc
fs
mov
mov
mov
daa
dec
hlt
stos
pop
mov
inc
subl
mov
adc
add
sbb
xchg
test
pop
filds
icebp
insb
pop
pop
sbb
pop
movsb
je
testb
jg
and
pop
sbb
enter
outsl
mov
adc
lds
xchg
mov
in
ds
or
test
xor
push
pop
clc
outsl
clc
test
lock
add
popa
scas
dec
or
xor
aaa
lcall
test
insl
aam
enter
fimuls
les
ss
push
gs
cli
adc
pop
add
fisttpl
mov
or
stc
rcl
mov
lcall
loopne
cld
ja
pop
ret
xchg
movsl
dec
sub
leave
mov
jns
mov
icebp
xchg
sbb
arpl
aad
rorl
cmpsb
add
iret
bound
jnp
js
es
ror
sub
mov
xor
mov
dec
andb
call
jmp
sub
fists
mov
xor
mull
or
dec
insl
and
arpl
cmc
sahf
pusha
or
sub
xchg
xchg
hlt
add
sbb
push
xchg
fsubl
sub
imul
fidivrs
dec
jne
aaa
pop
orl
movsb
cmp
das
scas
cs
nop
mov
and
add
mov
cmpsl
daa
in
sbb
push
dec
lock
aas
add
jge
int
jno
adc
jnp
fimull
lret
mov
dec
sbb
into
inc
dec
push
xor
ja
fistpl
and
mov
sarl
xor
and
icebp
mov
aaa
cmc
mov
mov
push
popf
lds
ret
inc
cmp
sub
nop
mov
orb
sahf
cmp
jns
xchg
incb
sub
call
shll
mov
pop
pusha
testl
dec
loopne
push
mov
dec
ret
popf
mov
xchg
inc
rclb
loope,pn
xor
outsl
push
jg
unpcklps
pop
call
and
push
hlt
pop
sbb
cltd
jmp
push
popa
xchg
cmp
mov
push
arpl
pop
les
push
repz
xchg
mov
cmp
fmull
xor
hlt
pusha
das
pop
pop
lret
jae
pop
out
push
pop
loope
adc
jp
loope
aas
repnz
js
jmp
xchg
and
jmp
add
out
mov
xchg
cmpsl
rcrb
sbb
fs
out
push
mov
sbb
jbe
das
stc
push
mov
sbb
mov
pop
mov
push
inc
push
outsb
and
pop
sahf
lds
mov
sbb
inc
lea
lods
insl
scas
push
in
leave
sbb
and
cwtl
repnz
xor
mov
pusha
jl
lds
and
lret
pop
jmp
push
imul
test
mov
sub
mov
movsb
mov
jg
arpl
out
pushf
dec
loop
shl
test
sub
xor
dec
jb
sbb
lods
mov
push
mov
and
in
lret
es
add
inc
push
jge
fisttpl
cmp
jns
pushf
ret
mov
and
mov
int3
stc
lods
mov
push
add
mov
imul
jns
add
aas
xor
mov
lods
out
push
jge
inc
test
into
outsb
fisttpll
je
cmp
ja
push
pop
mov
loop
inc
adcl
adc
adc
sub
out
imul
mov
mov
cltd
ja
add
leave
push
mov
and
ret
mov
out
add
and
mov
int
dec
mov
xor
test
dec
inc
cmp
and
or
call
ja
enter
pusha
and
in
dec
fwait
mov
mov
push
sub
jns
sbb
jmp
xchg
or
sbb
pop
push
adc
cwtl
or
dec
xlat
in
jle
sbb
mov
xorb
pop
push
jno
inc
inc
cmpsl
test
cmp
insb
mov
decl
dec
fldenv
mov
cmp
fimull
adc
jno
jnp
pop
pop
sbb
or
xchg
cs
pop
sbb
jae
out
in
mov
fs
es
movsb
sbb
testl
sbb
or
mov
lcall
fadds
sbb
leave
inc
mov
mov
lcall
subb
sbb
scas
in
xorl
pop
jg
jecxz
add
push
xchg
ret
sahf
push
push
imul
shll
pusha
lcall
dec
out
jbe
inc
mov
sahf
inc
icebp
lea
mov
adc
push
fcmovne
dec
inc
ja
cltd
leave
aam
std
aam
cmp
xor
mov
pop
mov
inc
or
shrl
shl
xor
hlt
ret
cmovno
sub
push
mov
aad
mov
adc
sbb
jne
out
roll
std
hlt
insl
sbb
hlt
add
loopne
add
push
neg
idiv
jns
lret
adc
inc
fstpt
stc
pop
mov
xchg
in
jp
adc
push
and
adc
js
jns
pop
jl
cmpb
bound
das
roll
push
aam
xor
or
stc
push
shlb
stc
vmovlpd
push
pusha
cli
pusha
test
bound
aaa
ss
in
int
ljmp
adc
sub
adc
cs
ds
enter
lcall
xchg
mov
test
in
shll
pop
xchg
mov
sub
and
fwait
sbb
and
mov
pop
cmpl
jbe
js
in
inc
jb
sbb
sahf
fisubl
divl
ds
outsb
insl
cld
jb
push
dec
mov
nop
mov
in
inc
in
adcl
cmp
cmp
pushf
mov
stos
int
out
or
dec
xchg
push
mov
and
sub
adc
pop
inc
mov
xorb
pop
push
sti
pop
and
push
pop
xchg
sub
push
test
dec
insb
in
mov
cwtl
add
push
lahf
xor
outsb
imul
or
sbb
pusha
cvtdq2ps
inc
test
xchg
shr
lods
jo
dec
pop
cltd
lea
sbb
or
xor
mov
in
mov
movsl
popf
lret
xchg
xchg
out
xchg
gs
movsb
out
gs
jns
and
jae
inc
xchg
shl
add
mov
fcmovbe
pop
fldl
sub
ljmp
pop
gs
out
jl
in
mov
or
lds
xchg
cmpsb
cld
sbb
shl
cvtdq2ps
or
mov
cmpsb
cmp
repnz
mov
or
mov
jl
jbe
push
iret
xchg
and
inc
or
xchg
test
push
nop
dec
out
scas
adc
into
or
scas
mov
cwtl
xor
test
mov
clc
imulb
push
clc
cmp
cmc
xchg
lret
outsb
push
dec
inc
push
mov
imul
div
cli
daa
out
inc
nop
loop
in
jp
pop
add
es
inc
cld
stc
push
ss
cmpb
ret
dec
fidivl
xchg
dec
xchg
out
or
jle
xchg
call
xchg
mov
xor
aad
or
pop
push
fistpl
inc
sbb
in
shl
jo
rclb
rclb
pop
lock
mov
wbinvd
imul
ja
sub
sbb
adc
fnstsw
xlat
in
cmp
sbb
in
in
cmp
xchg
jge
adc
xchg
pop
push
xor
lods
std
mov
ja
mov
pop
xchg
into
add
mov
add
das
adc
lret
xchg
mov
mov
das
xchg
and
loope
push
in
inc
adc
rclb
call
shl
imul
mov
test
mov
cs
lods
cmp
mulb
int3
adc
jl
xchg
addb
mov
int3
ficomps
loopne
push
add
pop
push
sysexit
xchg
jbe
fstpl
and
mov
jp
rcl
lea
cmp
jp
inc
mov
jle
add
imul
xor
ffree
adc
sub
cld
aam
aad
jns
insl
fsubs
cmpsb
add
test
push
call
orl
int3
lret
push
icebp
mov
xor
cld
pop
loopne
xor
movsb
mulb
mov
or
test
inc
cwtl
jno
xchg
pop
mov
stc
push
cmp
cmp
addr16
daa
adc
jbe
dec
fildl
sti
je
cli
aam
push
or
stos
adc
push
or
dec
std
in
jecxz
or
sub
lret
in
xorb
mov
aaa
mov
mov
xchg
jmp
test
pop
bound
cmpsb
in
xor
pop
fs
mov
push
mov
push
push
into
std
jmp
mov
outsl
icebp
in
lret
fimuls
lea
xor
push
or
arpl
cmp
push
add
fs
out
sub
mov
xor
dec
pusha
jge
fstp
arpl
ljmp
das
cmp
push
and
mov
lret
xor
xchg
jmp
test
mov
insl
in
pop
icebp
mov
movsl
mov
pop
jnp
dec
mov
and
ljmp
add
push
sub
xchg
test
jae
not
sbb
cld
aaa
cwtl
mov
mov
push
loop
push
sbb
push
js
cs
int3
mov
lahf
scas
sbb
outsl
dec
sarl
jp
pop
mov
cmp
xchg
sarl
xor
dec
loop
mov
cmp
cwtl
icebp
jle
in
push
jle
xlat
push
push
daa
pop
cltd
add
add
or
mov
test
cld
mov
dec
xchg
inc
les
jl
ret
or
ljmp
lea
xchg
cli
add
insb
dec
cmp
into
dec
hlt
adc
adc
sahf
enter
sbb
sbb
test
pop
jmp
jne
push
or
adc
out
push
and
xor
aad
jno
jecxz
cmp
movsl
cmp
shll
xchg
jb
dec
mov
inc
xor
pusha
lcall
dec
aas
sti
test
pop
sub
rclb
mov
insl
pop
sti
push
out
out
scas
dec
fmul
shl
add
repz
and
enter
pop
xchg
mov
jge
sbb
sbb
inc
mov
cli
xchg
xlat
add
add
lret
in
shll
mov
int
push
cmpsb
mov
xchg
cld
mulb
dec
dec
icebp
add
push
push
xor
sbb
dec
pop
mov
sub
cli
xchg
dec
sahf
stc
jne
jb
jno
pop
push
push
roll
call
xchg
cmp
addr16
pop
out
mov
dec
xor
leave
cmp
add
push
push
jns
and
bound
xor
xchg
dec
add
sub
pop
sahf
arpl
int
push
stos
sub
lods
or
push
dec
inc
inc
xchg
cwtl
pop
imul
push
mov
sub
nop
ss
push
roll
cli
or
push
xor
js
or
and
push
xor
xchg
pop
lret
jne
leave
lret
push
stos
jb
hlt
dec
push
repnz
je
inc
aaa
loope
sub
outsl
aas
cmp
gs
popa
adc
add
loope
insl
pop
aad
jmp
adc
xchg
dec
popa
mov
insl
dec
push
flds
sahf
popa
jne
scas
add
push
xchg
mov
fistpll
shlb
shrl
ret
shl
jb
div
pop
jmp
add
and
cmc
mov
sub
outsb
je
inc
pop
jbe
fmull
cmpb
test
aam
hlt
imul
sub
xor
xchg
pop
inc
lahf
jp
cli
and
or
ds
scas
pop
pop
pop
dec
clc
je
cmp
ret
je
outsb
dec
repz
jmp
scas
loop
cmpsb
lock
sahf
mov
sub
movsl
xor
mov
jp
arpl
push
je
xchg
mov
and
test
mov
sub
in
test
fcomps
nop
lods
xor
inc
jns
call
cmc
and
mov
mov
jb
fdivr
add
dec
jno
sub
or
das
mov
scas
xchg
out
fildll
mov
test
dec
pop
sub
lock
add
out
xchg
popa
pop
test
mov
adc
lea
dec
scas
sub
xchg
pop
jbe
test
fisttps
sub
leave
push
stos
ficoml
stos
jne
mov
pop
and
clc
mov
jnp
mov
insb
in
sahf
add
scas
cmp
pop
lock
test
xchg
insl
shl
addr16
movsl
lock
xor
cmp
loop
mov
gs
fisubrs
adc
jg
pop
ljmp
aam
scas
test
aam
xchg
mov
imul
loopw
pop
gs
cmpsb
add
fistpl
fisubrs
loopne
sar
xchg
jae
jmp
clc
xchg
and
sbb
lock
imul
in
or
es
mov
xchg
inc
jno
movsl
lock
dec
jo
add
jmp
out
pop
jbe
dec
or
xchg
testl
jmp
std
sub
inc
hlt
les
push
xor
xlat
test
push
stc
sbb
adc
push
in
mov
xlat
ss
mov
imul
xor
sbb
pusha
fs
add
xlat
jo
mov
mov
dec
hlt
ss
cmp
xchg
adc
std
add
or
in
push
jle
sub
bound
into
dec
mov
cmp
sbb
mov
ss
andb
mov
jge
adc
and
jb
fildll
mov
test
xchg
fbld
xlat
mov
cmp
ficomps
or
rcr
cmpxchg
movsl
cmc
sub
iret
scas
xor
loop
add
and
add
mov
push
cmp
jecxz
dec
fcompl
insb
push
jg
iret
out
enter
or
outsl
inc
push
mov
mov
cmpsl
mov
sub
cwtl
xor
push
inc
jns
jae
mov
scas
pop
jo
jg
imul
out
stos
sbb
loop,pt
or
cltd
mov
adc
xchg
stos
jecxz
int3
lahf
outsl
sbb
jmp
sahf
push
sub
inc
test
mov
and
rcl
ret
dec
lods
jo
push
or
jo
cmp
xlat
mov
dec
lea
cmp
adc
inc
sar
mov
ror
sahf
enter
imul
mov
sbb
fwait
pop
in
pop
rorb
push
fiadds
dec
scas
and
push
js
pop
xchg
xor
sbb
aad
into
or
das
fiadds
pusha
out
jae
mov
je
ja
aam
mov
jl
js
mov
es
cmc
into
aam
popf
xlat
fisubrl
bound
sti
outsb
dec
enter
push
push
ds
push
xchg
xor
or
cmp
inc
adc
jno
outsl
dec
push
mov
dec
xchg
dec
fwait
test
xor
inc
push
jmp
loope
dec
xor
xor
mov
incl
adc
cld
out
fwait
cmp
fwait
loope
scas
push
adc
add
xchg
rol
mov
cltd
enter
shrb
mov
addr16
push
add
push
jl
fxam
test
call
outsl
or
mov
fiaddl
inc
dec
jl
repz
jmp
jge
stos
lret
frstor
xchg
movsl
iret
and
lods
jno
mov
ret
inc
popf
enter
sbbb
jecxz
xor
push
jmp
ljmp
lret
arpl
mov
pop
and
call
inc
push
jle
push
mov
or
jle
xchg
add
lcall
sahf
inc
ret
jb
cwtl
push
add
cli
and
hlt
adc
int
test
mov
fistps
cmp
xchg
jbe
mov
repz
ljmp
push
jo
pop
cmp
in
stc
dec
movsl
scas
jle
stc
cmp
ret
inc
ss
scas
dec
roll
insl
adcb
call
test
mov
sub
cmp
inc
call
loopne
sbb
mov
or
xor
rorb
movsb
cmp
gs
mov
sbb
flds
es
cmp
cmpsl
popw
out
mov
push
call
mov
push
inc
xchg
outsl
pop
pop
cmc
pop
mov
cld
add
jno
add
and
mov
pushf
lcall
orl
jmp
lret
pop
clc
mov
fiadds
cmp
push
lea
sbb
jmp
fsubrl
adc
mov
test
mov
repz
popl
sub
sub
mov
pop
imul
fdivl
scas
push
int
pop
pop
jle
dec
js
sub
into
shrb
sub
pushf
lods
dec
dec
dec
inc
push
jp
fiaddl
mov
test
imul
cmc
lea
sarl
mov
or
movsl
and
popa
cmp
cwtl
mov
xchg
mov
roll
push
cmp
loopne
shll
pop
sbb
cltd
or
sbb
cli
mov
inc
lock
adc
lds
testl
jp
ss
xor
fbstp
imul
add
xor
lahf
loop
pop
dec
or
stos
popf
or
sbb
scas
jae
lret
or
or
addr16
in
pop
enter
sub
push
jge
pop
push
outsb
add
call
cltd
in
ds
stos
mov
jne
mov
repz
adc
test
pop
adc
inc
push
data16
or
dec
in
pop
mov
std
pop
jp
mov
sti
js
pop
or
mov
pop
fcoml
das
addr16
ja
fimuls
xor
popf
sbb
adc
sub
cmpsl
divl
leave
add
mov
rcrb
push
repnz
pop
xchg
xchg
dec
loopne
fcmovnbe
sub
push
or
rorl
xchg
jl
push
call
or
int
xchg
mov
sbb
ficoml
push
pop
and
arpl
mov
pop
cmp
pop
pop
pop
sub
fadd
std
mov
stos
rorb
movsb
daa
out
iret
movsl
dec
es
push
in
fwait
jle
jbe
clc
aad
or
shlb
pop
push
inc
std
add
pop
jb
or
pop
mov
lahf
mov
movsl
sbb
jecxz
pop
cmp
sbb
push
or
cmpsl
gs
xor
cli
cmc
push
pop
fists
push
inc
xor
repnz
inc
iret
and
adcl
icebp
add
mov
sahf
push
or
insb
scas
mul
cmpsl
aas
das
inc
xor
inc
xchg
xor
out
mov
popf
jb
mov
dec
cltd
push
push
leave
stc
pop
xchg
mov
inc
inc
add
je
adc
mov
in
shrl
ja
fdivl
sarl
sub
dec
je
or
and
arpl
adc
pop
mov
in
and
cmpsl
lret
repnz
push
mov
xchg
xor
and
pop
mov
fcompl
fld
sbb
notl
dec
fisubl
sub
xchg
int3
mov
shll
lods
popf
test
xor
jg
int3
and
sarb
andl
xchg
push
inc
dec
add
xor
xchg
add
and
adc
out
and
jmp
inc
mov
shlb
mov
nop
and
int3
add
iret
and
aad
mov
test
arpl
sbb
xor
dec
mov
mov
sbb
inc
les
mov
test
ss
add
or
andb
call
sti
pusha
mov
pushf
bound
imul
pop
stos
arpl
push
pushf
mov
dec
out
pop
rcrl
mov
inc
jb
ljmp
pop
popf
dec
sti
mov
adc
aad
adc
leave
sbb
pushf
jnp
in
mov
arpl
jmp
dec
sbb
mov
incb
push
cmp
test
movsl
adc
lea
cmp
pop
sbb
xchg
nop
fisubrl
outsb
push
or
nop
notl
pop
ss
xor
cmpsb
xor
xor
or
jge
mov
andl
pop
jne
pop
adc
mov
inc
jp
xor
add
dec
ss
dec
sub
dec
ret
mov
and
sbb
cwtl
jb
int3
dec
xlat
pop
ss
cli
movsb
adc
sarb
push
and
pop
repz
adc
mov
fisttps
add
lds
mov
sbb
mov
xor
sub
sbb
dec
repnz
lods
test
sub
sbb
leave
add
mov
dec
or
idivb
lea
sub
push
xchg
mov
scas
iret
hlt
xor
inc
cmp
fldl
xchg
fwait
lahf
in
or
ss
sbb
inc
xchg
cs
gs
fs
push
jmp
jle
test
cwtl
inc
test
pusha
xchg
xor
cld
into
sahf
sbb
push
mov
clc
leave
fisubl
sbb
or
jnp
pop
push
inc
push
aad
ja
and
roll
shrl
pop
sub
sub
data16
cmc
js
sbb
in
jp
cmp
xor
mov
movsb
nop
xchg
addr16
das
rolb
sbb
mov
outsb
outsb
xadd
jae
lret
rcrb
xor
lea
fdiv
popa
xor
mov
xor
call
ficoms
xor
cmp
je
jmp
fldcw
mov
mov
mov
jne
mov
jb
rcll
aas
mov
lods
in
mov
sahf
jg
mov
push
xor
or
pop
or
test
pop
push
enter
cwtl
movsb
jle
int3
aaa
scas
fwait
sbbb
pop
jne
and
cltd
add
and
mov
mov
pushf
cmp
repz
fs
loope
push
lret
mov
sahf
in
add
adc
sbb
sub
mov
insb
test
imul
jecxz
push
lret
cltd
cmpsl
xchg
mov
xchg
pop
movsl
xchg
fs
in
xorb
or
ljmp
movsb
int3
add
cmp
xlat
es
push
nop
inc
aaa
cmpsl
insb
pop
ljmp
aaa
ljmp
or
push
pop
lock
mov
adc
out
xchg
mov
mov
aam
push
pop
call
jp
jl
xchg
decl
imul
push
sbb
call
in
push
add
test
adc
adc
out
movl
lods
scas
sub
jg
out
test
or
mov
dec
mov
inc
or
mov
fnsave
inc
push
les
dec
sbb
xchg
lcall
or
and
pop
cmp
xlat
aas
enter
outsl
in
and
jno
mov
inc
xor
imul
or
push
mov
shlb
push
in
rorb
fisttps
mov
stos
xlat
lret
pop
cmp
cmovb
std
mov
enter
jnp
jb
xor
sub
lahf
in
enter
push
pop
cwtl
aaa
jae
and
adc
scas
push
testl
std
cmpsl
cmpl
or
hlt
mov
imul
call
mov
adc
int3
mov
add
data16
pop
imul
popa
addb
sahf
push
fwait
sub
outsb
int3
mov
inc
dec
push
or
loope
push
mov
popa
outsl
stc
cmp
lds
shll
mov
mov
in
imul
lds
out
fldt
add
adc
add
sub
sar
outsb
push
dec
int3
xor
jge
es
sub
xchg
int3
filds
lods
xchg
sbb
push
xchg
test
mov
rcrb
rorb
add
mov
cmp
sub
xchg
int3
push
test
sub
xchg
or
jns
int3
sti
cmpsb
inc
jb
ljmp
sbb
fildl
test
or
push
cli
outsb
mov
push
jnp
addr16
dec
and
cmc
sbb
scas
inc
xchg
inc
adc
mov
loope
add
punpcklwd
data16
inc
cmpsl
stos
mov
sbb
dec
mov
cld
mov
lahf
add
insl
mov
fcmovnbe
icebp
rcrb
stos
xor
push
mov
inc
adc
mov
dec
and
sbb
add
sub
cmp
jnp
push
xchg
clc
in
les
xchg
and
test
cltd
mov
shrl
sbb
clc
and
jp
sbb
pop
sbb
lods
jmp
mov
and
and
push
push
push
lret
mov
iret
cmp
dec
and
pusha
cwtl
fisttpl
hlt
jge
xchg
inc
ret
pop
adc
push
sar
sub
pop
stos
push
xchg
les
xor
fsubrl
idiv
jne
bound
sub
xor
add
shlb
mov
int
popa
xlat
dec
add
xor
scas
inc
mov
pop
movsb
inc
cmp
pop
je
push
inc
xlat
cltd
mov
out
mov
jnp
add
ficoml
jmp
cs
movsb
iret
test
pop
sub
xchg
lea
adc
divl
jo
rolb
out
addr16
cmpsb
add
test
in
imul
or
lret
popf
pop
dec
loopne
inc
bound
xor
pushf
jp
jno
loopne
hlt
test
mov
mov
fisttpll
loope
sub
scas
je
test
int3
in
imul
mov
aam
jnp
loop
xor
call
and
push
cmpsl
das
push
jns
mov
and
pop
pusha
cltd
and
popf
clc
and
frstor
xchg
xchg
ret
or
mov
add
add
ja
test
cmpsb
stc
xchg
rclb
mov
pop
iret
mov
add
push
test
and
aas
lcall
out
push
scas
sbb
in
ret
fldl
inc
sahf
mov
daa
cmp
dec
push
mov
orl
icebp
xor
outsl
dec
out
std
test
inc
loop
mov
or
mov
ret
cmp
jmpw
mov
js
cmpsb
adcl
jg
mov
push
popa
cmp
pop
mov
and
add
mov
pop
push
outsb
insl
dec
cwtl
mov
mov
xchg
js
jge
cs
nop
shl
dec
inc
sbb
dec
cmp
repz
or
in
mov
mov
sub
adc
lahf
iret
xchg
fld
push
int
add
push
imul
and
and
lea
ja
or
cld
rcrb
mov
mov
test
jp
loope
jo
pop
lcall
dec
xchg
jae
and
inc
or
les
fwait
push
dec
adc
movl
mov
lret
mov
sbb
stc
add
pop
inc
mov
push
sahf
mov
inc
pop
loope
xchg
jo
ficomps
cmpsb
push
pop
and
add
and
mov
jnp
xor
inc
call
je
sub
push
push
adc
cmp
ret
inc
leave
test
sti
lock
sbb
push
out
xchg
das
mov
test
lcall
sti
fidivs
mov
int3
push
add
xor
ljmp
jnp
mov
mov
ficomps
jo
stos
mov
imul
mov
mov
repnz
jne
adc
aaa
xchg
push
mov
mov
fidivrs
call
test
or
ror
notb
or
inc
mov
test
call
pop
gs
jbe
mov
sub
mov
in
aam
imul
adc
iret
aas
sarb
scas
xor
jge
mov
pop
cld
xor
pop
cmpl
cmc
xorb
orb
sbb
movsl
sbb
test
jne
cmpsl
push
stc
xchg
es
ja
inc
les
les
lcall
lcall
lods
sub
mov
mov
cld
lahf
dec
jmp
in
lret
or
fadds
dec
rcrb
adc
ret
stos
xor
fidivl
stos
jp
cmc
xor
iret
insl
pop
sub
mov
or
fsubr
fsubs
pusha
arpl
addr16
push
sub
push
das
sbb
inc
inc
or
sbb
pop
enter
lret
fcomps
loopne
sbb
ret
mov
mov
and
daa
xchg
adc
jge
pop
jp
ja
jns
xor
push
or
in
fsincos
inc
xor
xchg
mov
or
xor
mov
je
faddp
mov
gs
dec
pop
stc
jmp
mov
movsl
bound
js
fdivs
fisubl
cmp
sbb
rep
push
jl
pop
sub
or
sbb
fists
iret
mov
enter
dec
jb
mov
rorl
jg
add
and
xchg
dec
es
rorl
xor
pop
jbe
jmp
add
imul
dec
pop
rcrb
lea
xor
cmc
out
das
push
cmp
or
cmp
or
sar
mov
xlat
mov
adc
mov
ret
xchg
and
dec
mov
cmc
test
sub
mov
push
cmpsb
out
lods
adc
mov
dec
lcall
inc
jae
xchg
sahf
adc
push
ficoml
ficomps
push
lcall
or
sub
pop
jp
sub
sahf
cmp
adcb
mov
pop
xor
bound
pop
xlat
pop
pushf
add
lock
jnp
pop
add
aaa
inc
mov
xchg
sub
or
xor
mov
imul
mov
mov
jae
rclb
or
dec
jp
out
and
filds
mov
mov
add
out
sbb
sub
sarl
shrl
pop
out
mov
fstps
or
cmpsb
ret
mov
dec
mov
pop
ljmp
ret
cmc
jp
cltd
xlat
out
bound
fldt
scas
push
in
lds
imul
jecxz
sub
adc
xchg
or
pop
rolb
sub
mov
cmp
xor
mov
add
aas
outsl
jae
sarb
daa
les
or
mov
ret
push
bound
arpl
insb
or
test
movsl
and
gs
das
mov
sub
push
nop
cmp
or
stc
jnp
aas
outsb
stos
sub
xchg
pop
or
insl
lods
mov
loopne
or
enter
jne
jl
gs
bound
dec
das
or
daa
fcmovu
jg
sbb
adc
ret
cld
test
xlat
or
or
in
shrl
push
subb
test
roll
pop
sahf
addr16
xchg
mov
inc
add
aad
xchg
outsb
insl
mov
sbbl
mov
ljmp
jp
hlt
dec
cltd
cmp
sub
jg
add
mov
push
cmpb
fucomip
xchg
sub
xor
push
xorb
pop
arpl
mov
aaa
ds
movups
cmpb
xor
cmp
mov
arpl
mov
lds
mov
dec
or
xchg
jg
aad
and
cmc
dec
in
nop
mov
push
sub
repz
out
insl
sub
or
sbb
je
push
cmp
adc
sub
std
sbb
int
push
repnz
xchg
jno
movsl
test
adc
xor
mov
sub
adc
inc
mov
xor
je
dec
arpl
bnd
push
mov
cmp
mov
adc
jp
movsl
in
cmpsb
test
mov
jns
arpl
cld
push
mov
repnz
mov
sbbb
pop
vmovaps
stos
movsb
daa
rolb
or
sub
push
mov
call
in
in
push
and
pop
aas
push
push
stc
xorl
rolb
dec
iret
popa
pop
sti
icebp
shrl
leave
clc
pop
sbb
jns
jo
push
jmp
pop
cmp
into
jmp
cltd
xlat
or
mov
jne
dec
pop
jmp
pusha
xchg
in
enter
fldl
sub
jmp
push
cs
ret
xchg
ja
inc
mov
inc
inc
hlt
cmp
std
dec
inc
jecxz
std
mov
pop
fidivl
je
push
rcrb
mov
sbb
xlat
add
ficompl
and
mov
adc
push
mov
rcll
xchg
sti
xchg
rcll
pop
push
push
jae
push
push
out
loopne
or
add
in
adc
mov
pop
mov
mov
dec
arpl
ljmp
or
pop
lds
in
cmpsb
push
stos
jae
lcall
jl
adc
inc
or
fwait
mov
adcl
mov
dec
test
ljmp
fwait
xor
jns
andb
mov
dec
mov
xor
xor
mov
add
sbb
adc
mov
mov
jmp
jle
lods
aad
insb
nop
mov
test
mov
aam
in
mov
push
push
loop
sbb
add
jmp
sbb
add
in
sub
lds
cmp
jl
mov
fs
fdivrl
adc
insl
arpl
fcoml
sub
and
and
les
and
pop
xchg
js
fisubrl
and
xor
xchg
loopne
sbb
and
das
jecxz
insl
mov
in
push
rcll
push
stos
mov
pop
or
push
xor
jae
jns
push
sbb
cltd
addl
leave
scas
insl
in
int3
int3
add
imul
cmpsb
dec
inc
sbb
add
movsl
dec
mull
push
imul
testl
jo
and
lcall
sbb
faddl
je
fmuls
jl
sarl
dec
repz
sbb
add
lods
and
mov
cmp
repnz
fadds
test
mov
inc
dec
and
cmp
int3
jbe
push
mov
mov
scas
mov
jmp
xchg
cs
or
test
jns
xchg
rolb
dec
push
movsb
in
shl
jmp
frstor
add
mov
adc
xchg
nop
lods
iret
mov
notl
and
loope
push
or
xchg
xor
sti
add
xor
mov
loope
xchg
jg
push
lods
or
jl
pop
dec
and
sub
icebp
mov
push
stos
mov
inc
dec
aaa
mov
test
mov
test
pop
mov
lock
xchg
insb
adc
or
mov
cmp
inc
mov
or
sti
aad
push
inc
push
cmpsl
xor
pop
adc
flds
call
je
lea
std
movsl
push
aas
cwtl
and
test
sbb
adc
or
dec
lods
and
dec
imul
das
negb
dec
rcrb
add
cld
into
pop
xchg
push
clc
adc
jl
jge
push
xor
je
cmp
push
clc
out
movsl
inc
mov
sub
mov
jo
es
rol
or
push
dec
flds
in
hlt
cs
cmc
cltd
jbe
les
pop
xchg
arpl
cmp
insb
jle
lods
add
xchg
mov
int
xchg
adc
sub
mov
js
loopne
stos
cs
inc
imul
push
mov
inc
pop
dec
test
cmp
popa
daa
or
mov
ss
jg
xchg
rorl
fmuls
and
sub
mov
test
pop
sarb
pop
scas
std
fildll
mov
add
mov
cbtw
mov
add
out
adc
outsb
add
out
sbb
into
xor
pusha
xor
inc
sti
cwtl
es
pop
mov
fsqrt
sub
out
pushl
call
daa
rcrb
test
iret
test
mov
in
shrl
or
std
and
sbb
hlt
jbe
mov
push
cmp
pushf
cltd
mov
mov
dec
cmc
movsb
lods
push
aas
jp
stos
mov
sbb
xor
pop
loop
inc
mov
pusha
sub
cmpsb
push
lock
stc
inc
jbe
xchg
pop
xchg
es
leave
idivl
jbe
mov
sbb
cltd
pop
sub
jne
add
sbb
mov
popa
aaa
sub
leave
mov
add
stos
aam
repnz
jno
push
ljmp
xchg
js
add
cld
add
xchg
add
dec
mov
push
ret
sbb
inc
stc
adc
xor
or
mov
in
dec
fadds
test
jl
sbbl
fistpl
xchg
test
aam
into
pop
sbb
in
mov
adc
push
mov
pop
mov
daa
mov
dec
stos
jecxz
push
jg
in
adc
outsb
repz
scas
pop
adc
pop
mov
imul
xor
pop
cwtl
jle
ds
stos
ja
or
mov
stos
imul
cmc
adc
cmp
jg
mov
and
mov
jmp
sub
and
mov
popf
aaa
push
leave
sub
leave
xchg
jl
mov
sbb
push
pop
cmp
dec
mov
icebp
cmp
pop
sbb
std
push
outsl
inc
add
add
dec
and
ja
shll
in
inc
pusha
sub
hlt
pop
sub
pop
and
dec
cmp
pusha
adc
push
rcr
xchg
js
adc
dec
leave
arpl
adc
pop
lahf
push
and
mov
int
pop
push
push
pop
iret
and
movsl
push
jp
xchg
mov
pop
inc
je
mov
cmp
jmp
rcr
xor
stos
outsl
lods
es
pushf
mov
sbb
mov
gs
jl
ror
mov
shrl
sub
jnp
pop
mov
sbb
adc
push
insb
push
pusha
dec
and
cs
inc
push
xor
in
cmpsb
mov
bound
fstpt
lret
jp
mov
and
jnp
and
fcoml
push
or
imul
arpl
mov
stc
cmp
aad
stc
in
sbb
shrl
fistps
cmpsb
xor
ret
mov
mov
adc
fcmove
mov
loop
jmp
jmp
pusha
insl
jecxz
dec
sub
dec
shll
or
cmpsb
and
mov
test
loope
adc
enter
cmpsb
in
roll
mov
cld
sbb
or
pop
adc
pop
sbb
fiadds
cmpb
cmpl
inc
jp
push
jnp,pt
inc
test
and
enter
mov
fcomip
xchg
in
sub
dec
fs
scas
or
call
or
mov
ljmp
jmp
dec
xorb
insb
aas
push
rep
pusha
lea
jge
rcr
stos
repnz
xchg
sub
rcll
mov
jae
push
inc
push
fstpl
cli
jns
add
ret
add
call
cmpsb
dec
jb
sub
imul
mov
in
jne
push
sti
rcrl
hlt
scas
jle
out
mov
out
into
mov
outsb
fbstp
push
mov
cmp
inc
sbb
push
dec
sarl
mov
inc
in
loop
add
rolb
in
push
inc
or
mov
jle
mov
das
dec
add
mov
sub
fs
sub
sarb
dec
inc
inc
aas
push
inc
es
pusha
in
pop
mov
pop
sbbb
pop
stos
mov
insl
push
xchg
mov
scas
out
mov
or
std
xor
in
jg
and
addr16
mov
mov
inc
inc
outsb
test
xor
jle
jecxz
mov
lret
pushf
jns
sub
int3
mov
leave
cmpsb
mov
pusha
or
or
cmpsb
or
scas
out
pop
daa
cmpsl
cmp
cmp
dec
and
aaa
movsb
push
pop
add
loope
sbb
shll
movsb
ss
gs
sbb
mov
jae
loope
cmpb
lret
sbb
cmp
add
lcall
sbb
adc
popf
mov
in
loope
xchg
jno
bound
sub
addr16
jp
add
cmovns
add
jmp
insb
dec
push
js
cmp
cmp
in
push
xor
cmpsb
jb
int3
dec
adc
sub
cmc
test
hlt
cmp
jecxz
inc
xchg
fchs
jo
jge
fdiv
cmc
jecxz
mov
cmp
iret
in
mov
data16
out
inc
mov
stos
ret
loopne
inc
xor
fs
sbb
xchg
cli
mov
pop
dec
ds
call
dec
ss
incl
mov
jne
sahf
and
iret
insb
push
in
imul
lea
mov
cmp
cli
add
inc
xchg
xchg
in
inc
or
mov
jb
pop
ss
inc
push
jmp
data16
out
hlt
mov
xor
add
jb
dec
lcall
inc
mov
add
add
incb
inc
pop
mov
rcl
shlb
adc
test
push
mov
je
or
sub
cmp
insb
jno
mov
xor
inc
mov
cmpsl
pop
stc
popa
imul
das
jb
testb
xor
stos
stos
sub
adc
and
repnz
outsb
sub
aaa
leave
or
out
int
jmp
fistpl
test
dec
xchg
add
mov
std
push
add
adc
cmp
or
cmp
jp
sti
dec
aam
faddl
xchg
mov
mov
fsts
mov
cmp
jo
imul
jnp
pop
pop
out
mov
mov
mov
fdivrp
filds
clc
mov
imul
xchg
mov
xlat
rcrl
jmp
xchg
mov
jle
cmc
jl
pop
xchg
enter
and
roll
clc
xchg
inc
dec
ds
adcb
jo
and
aaa
xchg
js
pop
fwait
lock
or
bound
jmp
xchg
test
jmp
shrb
pop
pushf
or
lds
sub
sub
pop
dec
insl
jmp
xor
xorb
push
or
xor
dec
mov
loopne
jno
shll
push
sbb
mov
or
adc
xchg
push
sahf
mov
ret
xor
pop
clc
mov
push
sub
sbbl
and
nop
push
mov
xlat
push
xor
pop
dec
loop
mov
and
sub
sbb
or
jnp
mov
or
dec
and
xlat
cmpsw
dec
jo
fisubrl
fs
jmp
sti
jbe
fisttpll
loop
pop
mov
xchg
stos
test
adc
pop
cmp
jno
push
mov
jns
insb
ds
sbb
cmpsl
jecxz
stc
and
xchg
cli
sahf
dec
cmp
pushf
insl
jnp
lds
and
inc
mov
pop
fistps
cltd
outsb
mov
adc
mov
push
pop
adc
mov
cwtl
or
es
and
inc
loop
adc
dec
xchg
cmp
daa
shll
movsl
adc
cli
sub
cwtl
push
xor
mov
mov
fisubrl
xchg
pop
outsb
fistpll
loop
mov
in
idiv
pop
cmp
gs
mov
loopne
cwtl
loope
pop
pop
in
enter
imul
push
lds
jnp
sar
push
dec
pop
mov
add
cmp
lods
sub
cli
mov
push
adc
xchg
aaa
inc
sahf
adc
xor
fnstenv
out
xchg
jge
add
fsubrl
or
or
fldcw
movsl
cmp
pop
cmp
sub
and
mov
pop
and
jmp
cmp
ja
sub
test
mov
das
loope
adc
add
scas
pop
mov
popf
negl
fadd
stos
dec
adcl
mov
sahf
sub
mov
icebp
jmp
sbbl
sub
cmpsb
sbb
sbb
scas
cmp
fcmovnb
imul
xor
xor
jne,pn
adc
stos
insl
jb
sbb
leave
jge
out
repnz
inc
mov
sbb
and
leave
cmp
push
xchg
push
cli
or
add
repnz
jne
ret
inc
pop
inc
sub
jno
fs
sub
aad
dec
gs
or
inc
iret
jle
mov
push
out
rorb
inc
xchg
test
sbb
aas
sti
decl
out
sbb
jg
sub
shlb
jae
jle
sbb
daa
cltd
mov
xor
js
lea
lahf
adc
lock
jns
daa
jge
ret
sub
pop
mov
aas
popa
mov
or
add
ret
mov
mov
out
adcb
add
jae
addr16
sbb
mov
adc
xchg
jp
adc
add
insb
fcomps
pop
xchg
inc
mov
cltd
or
cmp
insl
sahf
xchg
cmp
sub
out
or
xchg
xor
mov
shll
cltd
aas
notl
or
aaa
mov
aas
jbe
loop
std
adc
test
adc
adcl
jmp
dec
jne
fucomi
jnp
cmp
sahf
dec
lds
add
fadds
je
sbb
das
lock
cltd
gs
push
ljmp
or
jg
cmp
mov
push
lods
ja
outsl
inc
pop
shll
imul
mov
gs
push
neg
lea
in
pop
push
dec
mov
mov
adc
hlt
stos
xchg
xchg
xchg
mov
cs
cmp
icebp
ret
or
inc
adc
loopne
adc
sub
mov
jae
mov
xchg
enter
cmp
xchg
insb
ds
xor
push
mov
int3
lods
jmp
jb
mov
xorb
testl
inc
adc
xchg
testb
mov
inc
adcl
cmp
imul
dec
add
pop
push
xchg
sbb
dec
mov
or
adc
add
fs
fiadds
xchg
push
test
pushf
ret
std
not
inc
out
pop
insl
and
mov
pop
mov
mov
push
mov
dec
fwait
cli
jns
lret
out
jb
mov
and
arpl
cltd
lret
push
inc
bound
mov
mov
andl
inc
fistpl
xchg
pop
cmp
push
mov
test
stos
pop
andb
gs
testb
sbb
sub
cmp
out
jns
dec
xor
mov
dec
or
gs
scas
cmpsb
fwait
sub
dec
lea
cli
lret
aad
xchg
mov
sahf
mov
cmpsl
pop
insb
shrl
cmp
or
hlt
shrb
and
pop
xorb
cmpsb
lods
div
lea
in
arpl
sub
adc
mov
mov
scas
dec
movsb
cmpsb
jns
mov
or
scas
bound
cmp
push
and
push
out
enter
ja
sbb
cli
adc
dec
fdivrs
and
dec
lock
and
dec
aam
cli
int
loopne
shrl
or
testl
adc
std
mov
xor
stos
ds
je
andl
or
inc
pop
imul
fcmovbe
lods
jnp
mov
push
add
or
imul
imul
fimull
aad
out
pushf
shrb
rcl
cmpsl
pop
push
inc
mov
mov
les
int3
mov
fcmovb
int
fs
outsl
fcompl
sbb
out
mov
jle
jl
mov
mov
pop
mov
dec
imul
out
movsl
jge
gs
or
hlt
jb
add
mov
popa
mov
adc
or
adc
shlb
mov
repnz
repz
fidivrl
and
cmp
cmp
cmc
inc
xor
pop
mov
pop
pop
orb
int3
adc
mov
add
cmpb
outsl
push
sahf
dec
inc
jp
in
outsb
jle
lods
aas
es
sbb
ljmp
mov
jle
fnsave
cmc
insl
sub
add
sti
nop
in
xchg
and
int3
cmp
repnz
cmpsl
rclb
test
movsl
out
ljmp
orl
and
and
scas
loop
aas
les
sbb
mov
sbb
andb
loope
fcmovb
fcomps
push
mov
push
mov
sub
repnz
lahf
or
push
cs
push
sub
cmp
int3
outsl
sub
icebp
std
mov
aam
xchg
cmp
adc
rcrb
adc
rol
and
cmp
lods
dec
pop
dec
in
push
and
sbb
mov
sub
push
cmp
pop
adc
mov
inc
insb
mov
rcl
push
daa
inc
and
mov
inc
subb
inc
stc
xor
ret
jl
test
cwtl
xchg
inc
in
in
insl
add
movsl
mov
fists
dec
pop
imul
jno
sbb
add
call
mov
jp
pop
sarb
cmpb
mov
push
sarb
mov
jle
sar
imul
push
gs
in
fnsave
out
scas
or
aas
lods
and
fdivp
ret
push
movsl
sahf
hlt
mov
xchg
aas
fldt
scas
jns
xor
xor
daa
push
vlddqu
adc
pop
pop
inc
mov
mov
xchg
dec
lods
pop
mov
popf
push
nop
mov
cltd
movsl
stos
mov
std
and
push
cmp
mov
test
push
xlat
push
pop
sub
add
enter
mov
push
xor
mov
fdivrp
xchg
push
sub
xchg
push
mov
cwtl
adc
xor
loopne
mov
pop
jg
dec
pop
mov
arpl
cmp
data16
inc
adc
jle
cmp
push
imull
mov
push
xchg
xchg
psadbw
jl
and
dec
aaa
orb
neg
outsl
test
fwait
add
fucomi
aas
xor
pop
push
jne
inc
jne
pop
loope
lahf
aas
xlat
or
cwtl
jl
sysexit
popf
jnp
and
push
mov
push
scas
sub
int3
movsb
aam
test
jae
dec
lods
push
imull
mov
pop
ret
arpl
pop
jmp
popa
xchg
mov
inc
mov
test
dec
loop
in
jp
sub
cltd
ss
xlat
nop
pop
mov
jl
insb
push
jp
xor
xorl
leave
xlat
jmp
lcall
xchg
out
mov
push
xchg
lock
dec
and
icebp
outsb
ss
gs
push
in
sub
xor
pop
not
fstpt
pusha
jecxz
sub
push
and
cmc
jecxz
outsb
pop
loopne
stos
mov
mov
pop
mov
inc
aaa
rcrl
das
je
inc
imul
lret
sub
aad
xchg
stos
jns
sub
pop
jae
sbb
mov
mov
mov
mov
xor
hlt
out
pop
xchg
int3
mov
mull
inc
dec
das
jnp
mov
jmp
pop
jg
sbb
cld
pop
in
push
jle
xor
push
dec
rolb
cmp
sti
dec
leave
add
std
sbb
inc
mov
pop
lods
pop
iret
cld
sub
rorl
pushf
or
xor
mov
incl
int3
in
cmpsl
jmp
gs
mov
in
nop
or
mov
inc
loope
in
adc
fwait
and
je
sahf
dec
int
das
outsl
in
stos
mov
adcb
dec
imul
insb
lcall
cmc
push
popf
test
sub
stc
and
scas
sbb
jb
pop
fisubl
vpunpckhwd
repz
neg
xor
sbbb
cmp
xchg
mulb
cmp
xchg
mov
imulb
aad
inc
pop
cs
push
and
mov
inc
push
jge
pop
loop
dec
xchg
sahf
in
xor
jo
lret
adc
add
jg
popa
inc
mov
fnstsw
cmp
xchg
pop
icebp
ret
das
jno
push
and
xchg
rol
sub
and
sub
sbb
push
inc
sbb
ss
jp
lds
and
ret
xchg
mov
std
push
ret
dec
fisubl
clc
inc
popa
ja
mov
sbb
lods
enter
xchg
rcll
rcll
and
cmp
dec
mov
pop
push
jmp
cltd
mov
cmp
cmp
inc
pop
mov
jl
xor
call
dec
inc
push
enter
cmp
xchg
jbe
sbb
outsl
xchg
add
inc
sub
ljmp
xorl
repz
shlb
int3
jle
imul
dec
repnz
jnp
or
stos
mov
movsb
push
inc
arpl
ss
popf
cli
jle
dec
pop
fs
daa
cmp
jne
fs
and
fdivr
cmp
or
sub
inc
out
ss
push
lahf
nop
addr16
or
xlat
and
lods
add
mov
inc
push
pavgw
jge
jle
sub
pusha
and
lret
in
inc
push
test
movsb
mov
jbe
push
sbb
pusha
clc
sub
pop
insl
pushf
fcmovu
and
push
and
lods
cmpsb
pop
insl
fistpl
rorl
jbe
cmp
movsb
or
out
lods
inc
sti
mov
nop
int
add
mov
jmp
ret
jl
call
sub
testl
or
popa
fstpl
cmp
out
repnz
sub
mov
int
stos
jb
xor
repz
jp
cltd
sarb
fisubrl
imul
insl
inc
loop
stos
imul
ds
je
out
add
mov
jle
ds
stos
jae
sbb
ds
mov
stos
xor
sbb
adc
sub
ja
dec
and
cmp
arpl
jmp
adc
mov
sub
sbb
arpl
test
dec
jnp
inc
rcrb
aaa
mov
mov
pop
pusha
cmpsb
or
lock
and
mov
mov
sbbb
xchg
sbb
ss
pop
pop
push
adc
test
lahf
mov
xchg
loope
and
fmull
and
cmp
sub
push
push
mul
sub
arpl
je
jne
or
daa
adc
fwait
xchg
cmc
jge
stc
fcomps
jnp
aaa
sarl
ret
imul
enter
out
pop
sbb
adc
sub
push
repnz
dec
add
mov
mov
cmp
ds
outsl
cmp
cmpb
push
xchg
fcomi
xor
sbb
pop
add
push
push
stos
mov
jns
push
mov
aaa
mov
aaa
sub
ficomps
xchg
or
jge
mov
jo
jle
mov
shrb
out
mov
into
lcall
bound
dec
xor
ret
fiadds
adc
pop
cmp
pop
mov
mov
pop
rorb
imul
dec
ret
imul
insb
cmpsb
or
push
and
das
into
xchg
lea
xor
sahf
add
mov
xchg
cmp
std
jp
lret
mov
mov
aad
push
call
inc
cmp
xchg
iret
call
inc
enter
cmp
inc
add
in
js
jne
and
out
jge
jmp
dec
xchg
fistl
mov
lcall
movsl
nopl
sbb
mov
mov
dec
mov
out
jae
scas
sbb
ss
ss
lcall
pop
aas
data16
push
xchg
xor
pop
push
movsb
mov
and
push
lods
gs
fdivl
sub
stc
add
sub
adc
mov
push
shll
or
xor
and
mov
pop
aad
popa
cmpsb
xchg
add
or
push
negl
jge
mov
pop
das
sub
in
or
nop
sahf
adc
mov
ret
push
cwtl
push
sti
fs
mov
pop
test
mov
jb
push
mov
daa
push
pusha
sbb
loope
mov
cs
mov
mov
cmc
inc
icebp
fcmove
pushf
lcall
push
sbb
cmp
push
jb
jp
lcall
ljmp
adcb
inc
cmp
xchg
xor
aaa
mov
inc
loope
mov
loopne
rcl
into
sti
ljmp
rcrb
and
xchg
shll
in
xchg
scas
hlt
ss
lret
mov
mov
mov
aad
int3
gs
xor
cltd
pop
and
add
cwtl
aam
and
adc
loope
outsb
outsl
or
cs
test
adc
push
mov
divb
jp
push
stc
fnstsw
add
out
jno
dec
cltd
jmp
int
push
push
mov
das
out
outsl
cmp
mov
or
or
mov
or
inc
stos
pushf
xchg
mov
pop
sbbl
fmuls
cmpsl
mov
xor
aas
xchg
nop
ljmp
push
xor
test
pop
call
cmpb
sbb
test
dec
push
mov
mov
pop
test
fsubs
lret
pop
inc
call
shll
ficoms
insb
mov
jae
push
pop
int
xor
pop
out
dec
xor
fistps
mov
sbb
jecxz
loopne
and
clc
icebp
xor
xor
test
add
mov
dec
je
or
jg
data16
mov
test
std
cltd
ja
aaa
call
insl
subb
sarb
mov
xchg
and
adc
hlt
xchg
das
cmpsb
cltd
imul
stos
adc
xor
ja
movsb
cs
aad
pop
in
cs
loopne
mov
dec
sub
scas
fnstcw
mov
fs
leave
pop
mov
iret
mov
jl
add
movsb
adc
inc
arpl
inc
push
test
btr
jne
inc
mov
testl
push
fimuls
mov
mov
test
pop
gs
or
pop
push
mov
xchg
add
mov
in
call
jg
lea
dec
and
cld
add
enter
repnz
cmp
test
mov
mov
cmpsb
mov
es
mov
fstl
cmp
test
loop
fsubrs
xchg
xlat
jmp
jg
mov
or
sbb
outsl
fsubrs
sub
fstpt
cld
adc
fsubl
lcall
pop
loope
jg
imul
pusha
enter
mov
aam
hlt
lods
adc
and
rorl
xchg
jle
shrb
cwtl
and
int
loopne
inc
es
test
insl
daa
sahf
imul
es
je
pop
loopne
pop
daa
xchg
orl
cmp
or
popf
xor
sub
xor
push
jno
mov
or
cwtl
cmpsb
push
and
sbb
or
in
mov
cwtl
out
sbb
inc
cmp
xchg
push
push
xor
add
insb
or
outsl
rolb
add
in
jo
mov
call
cmp
lock
and
inc
sub
data16
sarb
jl
or
out
out
ljmp
pop
gs
xchg
cmp
pusha
sahf
aaa
enter
or
jmp
or
imul
or
adc
add
out
jmp
or
pop
inc
mov
data16
cmpsb
xlat
fisubs
inc
daa
push
sbb
inc
dec
pusha
sub
cmpsl
ret
push
int3
jb
repz
stc
aad
mov
dec
push
jo
lret
imul
sbb
std
int3
adc
jo
lds
mov
xchg
fadds
outsb
addb
pop
arpl
pop
stos
jbe
out
aad
cmp
jle
scas
xor
add
cld
orb
mov
ja
mov
fnsave
in
add
out
mov
mov
sbb
into
inc
mov
in
dec
aaa
es
lods
nop
sbb
sub
stc
aas
or
add
hlt
fisubrs
cmp
add
add
cmp
insl
inc
mov
jo
int
test
ret
pop
aam
data16
sbb
ds
xchg
sbb
clc
jl
mov
jb
cld
sub
dec
in
fs
sub
enter
mov
pop
mov
sbb
pop
int3
pop
jnp
push
lds
push
or
add
cltd
sahf
call
divl
sbb
mov
cmc
jno
daa
mov
icebp
out
sbb
shlb
fisttpll
fimull
xor
cwtl
or
mov
jg
dec
fnstenv
cmp
outsl
mov
shr
lock
pusha
out
pop
xchg
aaa
addb
das
adc
test
scas
cmpsl
pop
test
js
movsb
repnz
scas
jbe
lret
lock
out
sahf
pop
aas
popa
or
insl
mov
and
punpckhbw
iret
jle
ja
mov
cmpsl
mov
mov
andb
and
xchg
leave
cmp
pop
loopne
and
jle
inc
dec
cmp
gs
imul
out
cltd
add
adc
pop
cld
fstpl
mov
pextrw
push
mov
xchg
mov
mov
bt
aas
jb
and
test
lods
jo
pushf
scas
xchg
add
pop
or
jno
stos
insb
fadds
xchg
dec
jmp
popf
adc
cmp
fwait
clc
pushf
cmp
inc
sti
cmpsb
aam
leave
lret
and
mov
sub
pushf
xchg
mov
mov
xchg
mov
cmp
test
jecxz
and
cli
es
jecxz
inc
or
stos
mov
jmp
and
and
mov
mov
inc
cmpl
lahf
addr16
pop
jl
les
test
pop
jae
adc
xlat
icebp
ljmp
loop
rcr
movsl
les
aam
add
fs
mov
jnp
rcrb
inc
push
inc
lea
lret
repnz
in
test
dec
cmp
sbb
scas
lds
dec
test
mov
lods
dec
decb
add
pop
cmp
imul
out
insb
jnp
sarl
in
push
rcl
dec
sarb
push
icebp
mov
mov
fs
or
fimull
leave
jp
mov
mov
imul
cwtl
adc
lods
fadds
aam
rolb
popa
adc
mov
mov
mov
adc
mov
outsb
push
call
loopne
mov
inc
cmpl
divl
push
jns
idiv
cmp
xchg
mov
pushf
mov
mov
jge
rcr
mov
bound
rcrb
push
aas
sbb
mov
out
pop
and
divb
stos
xchg
inc
sbb
lds
lcall
jl
dec
mov
add
or
pop
dec
mov
mov
or
adc
and
inc
inc
or
lcall
mov
inc
shlb
mov
xchg
inc
jmp
push
pop
sbb
test
sub
sti
imul
decb
sbb
mov
inc
lods
dec
add
popa
cld
jle
xor
out
add
jp
int3
lods
sti
out
out
mov
lock
sarl
mov
fsubs
js
pop
xchg
in
dec
dec
xlat
mov
faddl
and
ds
add
pop
mov
cld
sti
pop
push
add
inc
cli
decl
imul
add
pushf
lcall
out
and
ja
push
push
adc
cmpsl
cmpb
loop
xor
rcrl
sbb
imul
jb
aaa
mov
jmp
jae
mov
testl
test
out
pop
lock
inc
jmp
jl
add
in
lods
pop
pop
xchg
movsl
push
push
fdecstp
aad
ljmp
inc
bound
fldcw
bound
lret
mov
mov
and
aas
lds
data16
cmc
mov
notl
mov
test
shrb
mov
imul
or
xchg
and
add
mov
ret
mov
daa
jns
out
mov
rorb
outsb
nop
or
and
mov
mov
jp
mov
sarb
mov
push
in
loope
sub
pop
xor
cmp
ret
insb
sbb
jge
outsb
fmuls
aas
test
and
pop
gs
es
sub
roll
xor
or
lods
icebp
lcall
or
shlb
xor
push
mov
dec
stc
fldl
xchg
jns
dec
push
mov
inc
and
ljmp
xchg
sub
sub
cltd
sub
fisttpl
pop
mov
pushf
icebp
lds
ja
js
add
fidivrs
xchg
lock
pop
das
mov
pop
mov
jp
int3
dec
dec
fnstenv
push
mov
fwait
aas
jmp
jle
and
rolb
orl
cmp
jae
push
pop
lods
xor
rcl
in
lret
sub
test
call
push
xor
lcall
hlt
pop
fwait
test
cmc
adc
ja
sub
loopne
push
inc
adc
in
inc
mov
xor
adc
les
jb
mov
and
movsb
cmp
shll
movsb
jae
pop
imul
push
pushl
push
mov
mov
xchg
xchg
stos
out
cli
add
mov
fdivl
jb
and
repnz
leave
cwtl
and
es
fbld
mov
jbe
js
push
cmpl
stos
mov
cmc
stos
lret
dec
test
into
addr16
and
not
mov
mov
aad
ds
pop
mov
out
roll
pop
fcmovnu
loop
es
sbb
in
xor
stc
aaa
pop
xchg
mov
adc
addr16
jmp
mov
push
aas
out
int
es
in
cmpsl
dec
rorl
stc
mov
aas
fsubrp
rol
clc
pop
jge
sub
mov
pop
sbb
xchg
push
dec
fcomip
testl
jecxz
gs
int
push
in
addb
mov
daa
lcall
fstpt
popf
add
pmulhuw
and
push
fildll
cmp
cs
fstpt
aaa
push
push
sbb
and
lock
cmp
shl
inc
mov
dec
add
mov
push
lods
stos
cld
add
sarb
lahf
add
adc
and
mov
dec
ds
sub
rcrb
and
js
mov
xor
ds
and
test
sbb
ds
mov
in
mov
icebp
sbb
jmp
push
jecxz
cli
sub
mov
int
js
xor
add
jbe
sbb
mov
arpl
ljmp
lcall
in
jbe
sbb
xchg
jl
pop
fs
lds
daa
mov
mov
popf
jbe
lock
in
jb
pop
push
rorl
cli
xor
push
and
loopne
insb
cmpsl
mov
rorl
loopne
mov
mov
and
lods
or
clc
sbb
pop
sahf
lcall
xchg
repnz
popa
loope
push
les
leave
xor
push
outsl
mov
xchg
pop
mov
iret
inc
dec
or
hlt
daa
out
aam
sbb
xor
test
cld
in
pop
les
incb
jbe
or
xor
lods
in
enter
push
mov
push
int3
xlat
cmp
scas
imul
je
out
xlat
inc
mov
mov
rolb
or
in
je
sub
sbb
fisttpl
jmp
mov
js
loopne
addr16
xlat
test
xor
jno
ja
sahf
out
comiss
push
push
movsb
popl
shlb
lods
mov
es
nop
pop
mov
mov
mov
pop
inc
rep
test
push
lods
gs
mov
cmpsl
add
mov
out
push
mov
add
sbb
mov
outsb
dec
je
or
dec
pop
out
shll
or
in
xchg
mov
adc
lcall
inc
stc
jl
and
fstpl
jge
xchg
mov
and
inc
inc
mov
std
sarb
adcb
bound
and
inc
cmc
jmp
fldenv
icebp
mov
imul
icebp
fnstsw
das
inc
test
in
add
outsb
roll
push
int3
in
testl
xchg
mov
xchg
loope
ss
imul
pop
dec
les
mov
aad
inc
cwtl
jb
and
test
int3
pop
cmpsb
ljmp
add
notb
pushf
loop
push
xchg
sub
sbb
xlat
push
in
push
and
hlt
fmul
pop
push
lds
js
cmpsb
sar
pop
out
dec
ja
lods
shll
icebp
xor
adcl
js
imul
adc
decb
inc
fcompl
or
mov
push
loop
mov
inc
cmpsb
enter
xor
mov
hlt
fsubrl
movsl
shl
and
repz
ds
push
mov
inc
pop
sub
loopne
std
enter
inc
fsubrs
loope
mov
sbb
shl
inc
mov
cs
icebp
das
mov
sub
daa
push
arpl
insb
repz
mov
clc
sahf
test
sub
repnz
mov
or
mov
scas
or
je
ret
into
int3
negb
rcrb
mov
sub
ljmp
stos
movl
pop
in
and
call
cltd
rolb
roll
movsl
insb
push
das
and
cwtl
ffree
repnz
sbb
notl
je
push
cmp
mov
je
and
in
xchg
xchg
pop
shl
cmp
data16
or
sbb
insb
cltd
stos
xchg
jg
jno
mov
jecxz
mov
out
in
cmc
add
push
and
or
stc
pusha
cli
xor
push
movb
imul
lds
push
std
xor
cmp
mov
inc
mov
rcr
popl
dec
push
sbb
test
push
pop
nop
pcmpeqw
pop
cld
pop
out
or
jecxz
xor
ret
mov
cmp
rolb
jle
xor
aam
in
out
sub
mov
mov
icebp
mov
mov
dec
xchg
xor
jl
imul
jnp
push
insb
add
xchg
popa
mov
loop
inc
and
push
lods
mov
adc
or
or
out
xchg
lcall
push
pusha
repnz
mov
rcrb
push
rol
or
imul
iretw
xchg
lcall
push
inc
popf
test
adc
push
inc
xor
mov
mov
out
das
sarb
sbb
es
and
hlt
sbb
add
jp
adc
cs
enter
cmp
lea
inc
ja
popa
push
or
cmp
orb
xchg
jmp
bound
out
subl
xor
fistl
in
notl
sbb
popf
iret
call
inc
or
out
dec
jl
mov
iret
xlat
pop
xor
mov
outsl
popf
mov
in
dec
pop
sub
ljmp
fsubs
mov
fiaddl
xchg
clc
call
mov
xor
ret
or
inc
out
inc
ror
inc
scas
cmpsl
adc
and
int3
insl
add
cmpsb
push
repnz
cmp
mov
into
scas
fstpl
mov
es
dec
enter
add
shrb
je
je
cwtl
or
inc
push
ljmp
cs
sbb
adc
fidivrs
mov
sbb
sbb
mov
dec
jl
mov
lret
mov
adcl
scas
jge
lea
lret
and
pop
jno
mov
fcomps
sbb
jo
fstps
xor
pop
rolb
ret
cmp
cmp
xchg
inc
jmp
adc
fisubrl
add
inc
adc
movsb
jbe
fidivs
lea
mov
stos
mov
bound
mov
int3
mov
jmp
mov
fldcw
pop
push
xor
mov
lcall
pop
mov
add
lret
xor
mov
jb
and
ds
js
add
push
lret
aad
out
xchg
pop
adc
jne
popf
lret
out
movsl
fistl
cltd
pop
push
pop
cwtl
dec
push
cltd
xlat
jns
bound
add
xor
scas
xor
and
jno
push
mov
lcall
loop
pop
mov
push
iret
movsb
sti
jecxz
push
mov
xor
iret
jge
xchg
cmp
xor
divb
mov
sub
cmp
movsl
sub
xchg
xchg
push
cmpsl
fwait
in
dec
in
bound
mov
roll
test
or
femms
and
pop
mov
and
jg
in
mov
lret
lea
sbb
sub
push
lods
orb
pop
mov
shr
popa
rcrl
imul
xor
inc
dec
adc
subl
mov
std
mov
adc
rolb
push
pop
lcall
dec
adc
mov
stos
dec
ljmp
es
push
pusha
jp
jae
add
scas
mov
lds
mov
mov
int3
mov
cmp
push
jp
inc
add
arpl
mov
or
mov
adc
cmp
cmp
push
sti
or
je
add
iret
or
movb
in
mov
mov
cmc
cs
sub
xchg
int
inc
push
sub
repnz
lock
into
fildl
mov
ljmp
sub
mov
pusha
call
fsubl
ljmp
mov
xlat
aam
xlat
pop
scas
xor
popaw
mov
addr16
inc
pusha
loope
and
fsubs
and
bound
sbb
and
xor
jmp
or
dec
inc
lods
dec
cmp
les
adc
mov
popa
pop
ret
movsb
and
mov
mov
lea
inc
sub
xchg
cltd
ljmp
xor
or
xor
mov
inc
mov
xchg
flds
imul
test
adc
push
jle
push
insb
inc
fdiv
mov
lock
push
dec
mov
mov
rcll
ljmp
rcrb
mov
rcll
mov
inc
repnz
mov
sti
dec
sbb
mov
cmp
out
inc
mov
pop
adc
xchg
push
das
xor
mov
dec
inc
inc
aad
mov
jg
cmp
fwait
jp
pop
sbb
jmp
pop
and
mov
sarl
sti
jg
divb
jo
sbb
xlat
out
xchg
lret
loope
push
or
jae
movl
mov
test
mov
jns
popa
fstl
leave
xor
cmovb
xchg
push
adc
sahf
xchg
call
add
ret
cmpsb
ljmp
sub
insb
mov
mov
mov
jle
xchg
cltd
push
mov
aam
pop
lret
inc
xor
imul
mov
mov
shl
mov
lods
adc
push
dec
fidivrs
sti
insl
lret
insb
addr16
fstpt
or
sbb
outsl
int
mov
xor
add
mov
adc
mov
adc
add
jl
lahf
imul
stc
sub
cmp
insl
ja
add
xchg
mov
mov
je
or
stc
dec
mov
jg
xor
pop
scas
push
sbb
lcall
bound
cmp
jnp
mov
lcall
pop
in
push
roll
inc
cmp
insb
adc
arpl
lcall
push
fistl
push
sub
sub
mov
mov
jns
or
mov
stc
or
lods
popl
aas
sbb
sbb
jmp
sti
jnp
jnp
mov
fsubl
lcall
rorl
sbb
or
jo
imul
xchg
xor
imul
add
cld
add
or
jg
fwait
push
add
sub
shll
repnz
pop
test
mov
or
dec
cmp
loop
jecxz
pop
inc
fisttpl
xor
aam
hlt
dec
sbbl
mov
pop
mov
arpl
ret
js
push
mov
aam
mov
fdivr
enter
lahf
rclb
dec
inc
jne
daa
xorl
add
fisubs
cmpsl
repz
pop
ds
push
jmp
ror
jae
dec
inc
adc
inc
aam
scas
xchg
pop
outsb
push
inc
pop
adc
xchg
cs
in
jecxz
rolb
push
iret
jo
xor
es
and
jmp
cltd
xchg
xchg
push
inc
loope
or
adc
repz
repnz
cmp
int3
sub
mov
cltd
xlat
loope
push
mov
es
inc
mov
xchg
ja
push
jbe
cwtl
arpl
inc
adc
rol
push
xchg
dec
inc
scas
out
nop
js
push
mov
call
ds
div
pop
fildl
jb
fcoms
mov
jnp
enter
mov
xorb
xor
pop
mov
xchg
cmc
or
in
bts
outsl
cmp
fistps
jne
xor
pop
aad
ljmp
inc
insl
pop
ret
add
loopne
mov
mov
or
push
aas
inc
notl
movsb
mov
cltd
sarb
jns
aad
add
and
xchg
sub
ret
mov
iret
ljmp
ljmp
xchg
cmpl
inc
mov
orl
ret
test
fldt
lahf
outsb
inc
shrb
jg
mov
push
es
mov
xchg
jle
adc
inc
mov
aas
push
pop
inc
shl
mov
inc
int3
cmc
jecxz
xchg
mov
sbb
mov
inc
jnp
push
or
jp
out
addr16
adc
lahf
inc
out
add
fcmovnu
iret
ret
stos
cmpsl
inc
dec
int
xorl
xchg
mov
pop
push
outsl
or
dec
xchg
mov
icebp
mov
mov
xor
cli
je
dec
mov
inc
pop
push
out
sub
xchg
push
shl
jbe
mov
mov
inc
cmc
mov
iret
clc
sub
in
jl
test
out
hlt
mov
cmpsb
mov
push
into
stos
adc
jg
ret
sbb
pushf
imul
mov
xchg
push
pop
outsl
xorb
cmc
or
sbb
dec
inc
dec
aas
out
xor
test
call
ljmp
movsb
shrb
clc
xchg
ljmp
pusha
pop
das
in
sti
pusha
es
dec
and
cmp
fdiv
xchg
mov
pop
popf
mov
pusha
hlt
das
scas
es
add
leave
js
outsb
in
xchg
ss
aas
mov
in
jno
sub
cmp
push
ds
ret
adc
subl
orb
push
push
pusha
fs
dec
push
outsl
scas
inc
fstpt
pop
in
pop
and
lcall
cmp
mov
into
test
fwait
xchg
fdivs
xorb
pop
mov
fwait
adc
mov
cmp
pusha
mov
ds
xchg
and
adc
mov
cmp
cmp
ficompl
lock
cmp
popa
test
mov
mov
push
ljmp
fdivrl
cmp
dec
adc
sub
imulb
jmp
out
je
lahf
stos
int
add
leave
ss
xchg
shll
dec
push
dec
pushf
mov
jmp
sti
cwtl
cmp
pop
push
pop
add
shll
les
jns
and
mov
ret
outsb
mov
dec
fistps
cmp
les
lret
mov
mov
mov
mov
jb
cmp
mov
mov
insl
xchg
inc
jecxz
add
into
inc
scas
push
pop
insb
push
adc
push
inc
add
fwait
mov
or
cltd
xor
cs
mov
nop
rcr
loop
lahf
add
adc
jae
inc
xchg
test
sbb
lea
cmp
call
lcall
jecxz
ret
inc
inc
aaa
or
popa
out
shlb
or
frstor
rorb
mov
outsb
shll
xor
outsl
jmp
imul
loope
hlt
jg
mov
js
mov
jb
dec
pop
mov
daa
fsub
cmp
sahf
jp
sahf
in
inc
outsb
lods
iret
xor
pop
fimuls
push
out
movsb
push
jns
cmp
xor
arpl
clc
jae
je
jns
nop
aas
scas
jge
nop
push
push
jae
ds
mov
lock
jecxz
mov
jle
push
and
cmpsl
stc
add
dec
nop
jo
xor
inc
add
lods
sub
cltd
ss
mov
add
ret
jb
dec
mov
jmp
stos
jno
enter
xchg
mov
scas
fs
mov
pop
sti
incb
repz
iret
inc
xchg
dec
cli
xchg
loope
stc
repnz
or
xor
dec
int3
subb
mov
cmp
pop
insb
out
push
push
pop
mov
add
je
stos
adc
lret
jl
pop
push
mov
test
test
add
cld
pop
xor
mov
frstor
adc
lea
std
mov
int
xchg
pusha
cmp
push
orl
aad
jb
lea
inc
fildll
iret
mov
cmpsl
test
or
mov
mov
out
push
clc
mul
and
int3
hlt
mov
sbb
mov
leave
xchg
jecxz
leave
adc
push
push
icebp
test
sub
dec
xchg
or
out
out
sub
out
aad
les
push
cmc
or
mov
dec
add
adc
clc
sarb
stos
sahf
xchg
dec
filds
stos
and
adc
jecxz
fldcw
leave
push
cli
enter
add
aas
arpl
shll
pop
cltd
xchg
pop
sbb
push
fildll
mov
out
mov
jecxz
mov
xchg
pop
adc
mov
in
and
in
sbb
and
cmp
inc
sub
sbb
xchg
jb
mov
mov
dec
fld
add
xor
out
mov
sbb
lods
daa
mov
sbb
fstpt
mov
adc
push
xor
jbe
daa
or
les
loopne
mov
xchg
mov
movsl
mov
popf
pop
inc
data16
and
fnstenv
inc
push
dec
sahf
lea
stos
fildll
test
lret
in
aaa
xchg
lods
adc
pop
cmpsl
mov
iretw
or
mov
roll
xchg
mov
dec
jg
jge
iret
xchg
sbb
lods
mov
stos
outsl
iret
mov
and
scas
pop
arpl
cmc
repz
mov
mov
sub
and
push
or
xor
jecxz
adc
lea
push
inc
gs
lock
mov
xor
loopne
jle
incb
xor
push
pop
sub
test
dec
fisubrs
mov
xchg
inc
or
dec
xchg
push
pop
jo
gs
push
mov
outsb
subl
adc
lea
jp
std
pop
jb
test
out
push
pop
xor
pushf
cmp
arpl
pop
cmpsl
or
out
shrb
les
lock
aam
arpl
call
lcall
xchg
pop
ljmp
pop
add
xchg
das
or
iret
scas
js
std
aad
iret
fsts
jno
fdivs
ja
sahf
adc
cwtl
mov
out
push
leave
push
sub
test
inc
xchg
aam
adc
jmp
or
xchg
cmp
push
rolb
dec
repnz
mov
jnp
in
add
outsl
or
pop
xchg
add
lods
or
xor
sub
test
ficomps
mov
lcall
je
add
sub
shrl
push
mov
sub
sub
adc
ja
inc
popa
or
adc
cmpsl
dec
mov
pusha
jle
add
mov
inc
cmp
sbb
xor
je
add
fidivs
add
sbb
ja
push
lods
out
nop
push
push
jge
dec
movsl
pop
and
insb
and
cmp
mov
push
mov
pushf
adc
jge
out
ds
imul
pop
leave
mov
or
pop
jle
jbe
mov
inc
dec
mov
mov
xor
or
pop
cmpsl
mov
add
or
pop
test
inc
lret
clc
add
add
push
or
pop
addr16
mov
mov
dec
js
xor
xor
and
loope
jge
pushf
or
in
mov
jno
notb
mov
stc
inc
jnp
cmc
outsl
sub
cli
lods
lret
sub
fstps
rorb
mov
aad
por
test
js
notl
clc
ret
js
mov
mov
mov
stc
int
or
and
decl
movsl
mov
or
gs
test
pop
lcall
inc
xchg
in
mov
sti
rclb
sub
inc
inc
jmp
push
mov
sub
ss
inc
out
insl
into
inc
loopne
or
mov
xchg
mov
rcr
std
mov
rclb
or
icebp
mov
imul
loop
mov
mov
adc
push
dec
add
lods
xchg
xor
cmp
addb
push
aad
aaa
aam
xchg
and
cld
adc
lret
test
mov
and
cli
fidivrl
jae
mov
mov
add
rclb
xlat
fdivrp
loop
jo
or
ds
jbe
in
push
mov
sub
rorl
adc
pushf
push
mov
adc
loop
aas
pop
dec
jnp
lods
test
dec
stos
adc
bound
mov
filds
rcll
jo
adc
pop
cmp
fld
xchg
or
test
pushf
je
out
sub
or
or
xor
dec
dec
push
cmp
jecxz
inc
sub
sub
or
xlat
push
cmp
dec
aas
or
out
and
jecxz
jmp
inc
jnp
push
mov
mov
or
adc
fdivl
int
shrb
xor
loopne
mov
scas
push
std
incl
or
adc
mov
jge
xor
test
push
pushf
cwtl
out
paddb
fcompl
inc
scas
outsl
aas
pop
pop
pop
xchg
sbbb
mov
fsub
jae
test
jl
lcall
mov
sbb
dec
ds
aas
push
loop
mov
ds
or
mov
pop
xchg
and
or
and
cmpsb
rol
pop
movl
movsl
jnp
and
pop
in
mov
js
dec
fstps
decl
outsl
push
call
cmc
hlt
cmc
jnp
add
sbb
mov
jle
cmpsl
repnz
mov
cmp
test
pop
shr
push
xchg
cltd
mov
mov
or
sub
sub
xor
fstl
xor
xchg
add
stc
add
add
rcrl
pop
and
test
push
xor
sti
dec
push
mov
aad
mov
push
test
jle
lea
pop
lret
mov
push
jno
incl
cmpsl
imul
ja
cld
in
jmp
leave
pusha
xor
repz
jb
pop
and
jp
loop
clc
into
addr16
aas
les
dec
mov
clc
int3
dec
xchg
add
ljmp
jns
imul
enter
adc
xlat
push
cld
iret
adc
sbb
cmp
jbe
das
cltd
cmovno
mov
add
sub
cmp
jle
out
xchg
mov
mov
test
and
push
mov
adc
push
cmp
mov
int
outsb
cmp
cmp
sahf
dec
xor
test
jmp
or
aad
ja
pop
in
mov
icebp
dec
test
lods
inc
inc
pop
stc
pop
jns,pn
test
jp
pop
jae
js
arpl
sub
and
sbb
aam
nop
jp
inc
fimuls
movsl
sub
shr
sub
jb
mov
loopne
adc
cli
shl
add
sti
dec
ss
mov
sub
xor
mov
lcall
loop
cmpl
or
xchg
add
mov
jne
add
fcoml
ljmp
movsb
dec
shrl
pop
orl
or
pop
cs
cld
lcall
fldt
scas
pop
pop
add
xchg
push
sbb
inc
pop
cmc
jp
cs
sub
outsb
mov
aaa
cmp
insb
xchg
aas
adc
fwait
int3
rclb
mov
lods
dec
icebp
jecxz
iret
orb
dec
mov
sub
in
movsl
inc
jmp
fs
or
adc
and
stos
pop
inc
shll
fs
mov
jmp
sahf
stos
mov
xor
addr16
outsl
aas
outsb
jo
lds
mov
mov
adc
mov
mov
pop
xchg
in
pop
add
lock
push
stc
sub
add
scas
jns
add
push
pop
dec
aam
test
cmp
adc
cmp
das
shl
out
fsubrs
adc
dec
pop
jb
addr16
pushf
and
cmp
lret
fdivr
iret
fs
mov
pop
sub
inc
faddl
ljmp
and
das
pusha
jge
shr
jno
xchg
mov
add
or
faddp
inc
inc
xchg
jp
sub
aaa
mov
jnp
push
xchg
stos
mov
and
out
and
pop
xchg
ficoml
push
lea
es
push
mov
push
inc
lahf
add
or
fstpl
aad
push
inc
loope
cmc
sbb
mov
js
out
mov
js
fldt
ja
add
dec
sbb
mov
int
out
test
pusha
add
or
fildll
mov
rcrb
andl
clc
xchg
jle
ds
inc
push
int
nop
mov
cli
mov
ljmp
shl
stos
rcll
pop
loopne
rcll
jb
shr
loopne
daa
je
das
mov
mov
mov
nop
addr16
dec
inc
cli
jl
dec
fsubs
jno
fistpl
xchg
test
jae
rcll
loop
jb
jo
adc
cmc
jnp
cltd
jg
pop
sbb
inc
push
xchg
jbe
xchg
dec
pop
adc
popf
adc
imulb
mov
data16
repz
test
xchg
sysret
inc
adc
loope
pop
shl
mov
sub
cmpb
push
rorl
and
ret
xchg
sbb
xor
shll
pop
mov
movsl
dec
sub
loopne
mov
push
mov
xor
mov
inc
movb
ficoms
mov
icebp
pop
mov
bound
adc
cmpsb
mov
ret
sbb
mov
mov
pop
xor
xchg
movsl
lahf
lahf
fsubl
inc
add
jbe
das
xchg
jl
into
add
test
pop
inc
cmpsl
insl
addr16
cmpb
jo
inc
cmpsl
lea
push
fstpl
daa
mov
xor
pop
adc
imul
dec
xchg
dec
out
pop
mov
sub
jp
insl
test
ficomps
and
or
push
repnz
and
dec
popa
lret
mov
cs
mov
imul
and
stos
out
mov
inc
push
mov
adc
jmp
lds
ss
pop
lods
inc
mov
inc
aad
pop
cltd
inc
pop
inc
mov
cmpb
cmc
jmp
pop
push
fldl
cltd
subl
bound
cmc
ss
add
lcall
or
fdivl
movsb
dec
xor
pop
dec
pop
xchg
xor
pushf
cmp
dec
out
push
jno
add
cmp
lcall
push
call
dec
sahf
inc
dec
add
pop
cwtl
in
rclb
enter
shl
xchg
pop
in
mov
cli
mov
in
push
cmp
jl
dec
mov
mov
fisubrs
movsb
xor
dec
push
jmp
xchg
addr16
and
push
xorb
and
andl
mov
pop
sub
arpl
lods
xchg
inc
leave
rsqrtps
das
add
lret
inc
outsb
test
add
lods
rcrb
xchg
mov
adc
call
stos
push
adc
jnp
push
jb
dec
pop
test
dec
jmp
mov
jp
and
es
out
adc
jns
inc
jae
pop
in
ja
and
push
fdivr
mov
sub
sahf
and
ret
addb
and
shlb
pop
mov
andl
int
imul
loope
pop
lcall
fmulp
push
sbb
arpl
mov
outsb
pushf
call
xchg
lcall
fdivrs
mov
pop
push
lret
cmpl
shrl
jle
subb
rorl
idiv
ljmp
xorl
gs
in
out
fcoms
enter
cmpsl
insb
or
mov
mov
inc
push
dec
sub
mov
add
jb
pop
imul
push
mov
arpl
movsl
mov
into
xchg
jnp
fdivl
inc
sub
aam
adc
xor
mov
xor
lret
inc
cmp
mov
sbb
or
jg
aad
mov
shl
jae
insl
dec
sti
and
daa
pop
add
inc
cmpl
mov
inc
pop
in
jb
push
push
adc
sub
jmp
push
je
cltd
push
xchg
stc
mov
out
adc
xor
js
xor
adc
fdivr
xor
sub
mov
adc
and
daa
cmc
out
mov
ret
pop
stos
and
movsb
dec
pop
jmp
enter
xor
push
jecxz
clc
pop
enter
lods
pop
nop
leave
mov
sbb
sbb
and
xor
xor
sbb
xchg
pop
xchg
add
daa
dec
lods
cmpsb
add
and
mov
mov
aas
pop
mov
adc
out
imul
mov
les
fcomp
sbb
and
popf
imul
adc
mov
adc
sahf
mov
movsb
push
lret
std
fnstsw
pop
inc
mov
mov
cmp
inc
mov
es
mov
mov
roll
rcl
mov
clc
xchg
test
mov
fimuls
cmp
mov
or
adc
rorb
gs
add
mov
mov
xchg
mov
ss
faddl
sub
into
cmp
xchg
daa
fistpll
or
xor
call
fdivrs
push
adc
fs
in
fwait
push
faddl
mov
pop
or
in
add
mov
int
in
mov
or
sub
mov
xor
ss
cmp
jno
mov
cld
add
sub
test
iret
inc
mov
pop
mov
jge,pn
ficoms
cwtl
add
cltd
mov
mov
lods
jbe
fcomps
bound
jae
mov
adc
jmp
or
enter
adc
dec
lcall
bswap
xor
fs
pushf
ja
test
repz
loop
out
xlat
data16
xchg
leave
xchg
push
mov
fldt
mov
mov
jge
xchg
shll
pop
in
add
xchg
mov
add
andb
push
mov
mov
mov
jge
call
pop
stc
aas
bound
ss
pop
add
inc
pushf
inc
iret
ljmp
sbb
push
loope
insb
and
out
repz
jge
sub
xlat
sbb
sbb
js
loopne
mov
in
or
ret
mov
and
jae
jp
mov
push
rolb
cmp
and
cmp
out
xchg
xor
shr
pop
xor
sub
xor
sar
sub
cmp
adc
lods
dec
or
push
in
cmp
xchg
xchg
push
or
cli
popa
aas
sbb
mov
test
xor
sub
addr16
xorb
or
cs
or
fcmovu
sbb
mov
std
adc
mov
fists
push
inc
enter
enter
hlt
outsb
sbb
movsl
daa
or
xor
je
iret
arpl
in
pop
pop
mulb
mov
jbe
cmp
pop
in
dec
fiaddl
push
fwait
mov
pushf
js
sub
mov
test
inc
mov
add
fsubl
fisubrs
stc
add
sub
lods
and
shlb
arpl
mov
jecxz
or
lock
aad
mov
ret
add
shlb
loopne
int3
pop
cli
scas
or
idivb
fidivrs
ret
addb
orl
adc
sub
dec
sti
inc
frstor
cmp
dec
outsl
stos
sub
mov
mov
mov
out
sbb
mov
fldt
jne
popa
and
rclb
pushf
rorl
jle
lcall
call
ss
inc
hlt
int3
push
mov
push
cmp
imul
lret
repnz
adc
fstpt
sbb
pushf
and
ret
cli
or
cmp
or
jno
shlb
xor
mov
xchg
xchg
xchg
fadd
adc
jle
adcl
rcrb
sub
xchg
rcll
std
and
push
pop
xor
hlt
lods
stc
inc
push
jae
xorl
adc
ss
inc
jg
xor
loope
xchg
data16
imul
push
jns
or
insb
scas
and
inc
stos
push
cmp
and
lret
repnz
mov
add
rclb
es
xlat
mov
mov
add
lea
jns
mov
jg
lock
mov
xor
adc
mov
bswap
pop
and
dec
repnz
sub
std
lock
add
cli
mov
fwait
std
idivl
lcall
and
enter
cs
jp
jge
repnz
xor
add
std
pop
mov
adcb
adc
push
addl
fs
pop
stos
fld
hlt
clc
pop
imul
test
jns
inc
pop
stos
mov
mov
clc
out
xchg
fisttpl
or
dec
fst
xchg
insl
push
fs
mov
stos
out
or
lods
pusha
or
std
fcmovne
jl
not
add
dec
std
cld
outsl
dec
pop
ret
sub
push
popf
cmp
adc
sbb
jp
pop
jmp
cwtl
push
and
xchg
and
dec
scas
mov
fdiv
mov
jmp
mov
push
dec
cmpsl
and
mov
jle
mov
add
or
addb
push
daa
sti
in
cmc
sahf
cld
pusha
popa
mov
jb
pop
and
aaa
imul
rorl
movsl
testl
loopne
xchg
aad
bound
js
mov
xor
pop
add
push
les
lret
hlt
repz
aad
dec
cs
sbb
lods
jno
cmp
xchg
outsb
movsb
ljmp
mov
pop
ficomps
sub
ret
out
popa
jb
push
xchg
je
int3
mov
and
out
mov
out
or
test
loopne
imul
jns
and
jl
mov
cmpsl
sahf
mov
cmp
movsb
rolb
inc
sub
fmull
out
mov
sbb
sbb
sub
aaa
add
push
ss
mov
or
dec
pop
add
mov
scas
loop
pop
loopw
mov
sub
push
scas
pushl
mov
inc
lock
dec
or
out
jno
inc
jb
repz
cmp
insl
pop
cmp
cmp
out
or
adc
mov
mov
stos
push
sti
fwait
xchg
xchg
adc
cmp
adc
leave
add
pop
mov
mov
add
std
loope
and
cmpsb
xchg
addl
aam
add
fistps
jns
rcr
jbe
lock
scas
daa
lret
mov
sub
rcrl
fildl
sbb
cmp
shll
in
and
cmp
sub
ret
rclb
push
inc
shrl
jae
mov
push
mov
aas
mov
testb
push
inc
mov
mov
or
das
lahf
mov
pop
sub
rolb
jecxz
lods
in
adc
test
idivl
faddl
mov
subl
and
in
insb
fisubrs
xchg
and
xchg
inc
jne
inc
mov
out
inc
orb
xor
cmp
iret
aad
popa
fistl
aas
dec
xchg
orl
mov
xor
rorb
ja
stos
movsb
smsw
jge
pushf
jo
or
lea
pop
test
xorl
fimull
or
imul
xorl
mov
inc
dec
aaa
cmpsb
into
jne
movsl
dec
sbb
jno
fwait
pop
out
popa
pusha
pop
or
jns
arpl
cmp
xchg
scas
xlat
int3
rep
mov
pop
stos
pop
cmpl
xchg
movsl
mov
or
lods
dec
cmpsl
mov
pop
mov
xchg
enter
enter
pop
pop
imul
movsb
aas
sub
pusha
and
out
fcoms
imul
nop
mov
mov
rcrb
std
lret
xchg
and
sbb
je
push
sarb
stc
lods
mov
pop
jbe
pop
sysret
xor
scas
push
or
popf
mov
xchg
add
notb
and
sub
xchg
outsl
xchg
adc
xchg
mov
pop
or
lret
cltd
shrb
fldt
push
iret
js
or
daa
sti
mov
mov
icebp
out
test
dec
ljmp
cmp
daa
cmp
pop
repnz
or
cmp
adc
ror
pusha
in
add
inc
pop
mov
xchg
call
aad
xchg
sbb
rorb
add
add
jecxz
sub
xchg
pop
loope
mov
cwtl
mov
loopne
inc
sarl
and
js
lods
pop
push
fiaddl
cmp
in
xor
cs
int
aas
fiaddl
leave
out
or
mov
sbb
or
mov
sbb
enter
xor
cmp
or
sub
push
in
push
jo
dec
repnz
pop
add
stc
jae
jge
xlat
inc
sahf
push
fnstsw
xor
cmp
subl
push
adc
iret
adc
xor
add
outsl
xchg
fcompl
cltd
pop
inc
xlat
sub
pusha
adc
jge
and
ds
xchg
adc
js
mov
push
sub
cmpsb
repnz
out
add
leave
xor
lret
jns
orb
test
xor
popa
mov
fs
sarl
into
pop
add
mov
mov
xorb
sub
xlat
jecxz
push
xchg
out
cwtl
mov
jle
addr16
ret
push
fwait
mov
pop
and
cld
dec
push
pop
ds
js
insl
test
jmp
movsb
mov
adc
imul
sahf
outsl
clc
loope
pop
push
xlat
ret
clc
loopne
aaa
and
test
loopne
xchg
xchg
cli
add
jae
add
fwait
int3
sub
sub
aad
xchg
sbb
push
lods
dec
and
out
mov
ljmp
xchg
shrl
out
xchg
pop
mov
loopne
mov
cmp
mov
mov
sahf
lahf
int3
rcrl
fs
cmc
and
push
sub
ret
jnp
int3
pushl
jmp
adc
cmp
stc
popa
enter
xor
mov
cmp
push
loope
std
leave
sbb
adc
iret
adc
xchg
and
sub
aas
insb
pop
lds
in
and
and
push
and
repz
aas
std
scas
dec
insl
xor
daa
cwtl
into
leave
push
mov
sti
loopne
js
add
and
jns
in
add
lahf
lea
loop
sbb
ds
out
flds
pop
mov
add
inc
xchg
push
dec
sbb
cmpsl
jecxz
xor
mov
cwtl
and
inc
and
std
mov
mov
fidivs
cmp
push
xchg
push
jnp
es
aam
mov
in
or
xchg
aas
mov
and
push
lock
push
cmp
inc
or
push
lret
pop
insb
addr16
xchg
mov
in
and
push
das
inc
out
fsubrl
jge
les
lret
push
pop
inc
jbe
test
pusha
mov
ja
push
and
cmpsb
and
and
sbb
sub
mov
ret
lahf
mov
adcb
ds
mov
xchg
add
jl
sbb
imul
into
push
push
nop
aad
push
cmp
sub
lock
jmp
ret
cmp
out
adc
jg
and
fadd
mov
hlt
js
inc
adc
cld
in
ja
mov
mov
lahf
jp
shll
sub
add
sahf
adc
push
mov
hlt
add
inc
sub
jmp
lds
mov
lahf
cmc
lds
das
insl
pop
sub
cmpl
and
push
jle
fs
out
cs
in
je
lret
mov
pop
jmp
mov
gs
pop
stc
sub
loopne
xchg
rolb
ss
lea
in
jno
jne
pop
shrl
jnp
jmp
jbe
in
ret
push
push
in
scas
cmpb
ss
dec
imul
aam
popf
enter
rorb
jo
arpl
stos
xchg
mov
movsl
shrb
add
imul
mov
jne
jg
push
or
inc
nopl
jmp
aaa
out
addr16
xchg
shl
mov
lea
mov
imul
cltd
sbb
add
xchg
stos
maxps
int
mov
ret
mov
add
repnz
je
jb
fwait
jge
jmp
push
jmp
iret
movsb
mov
xor
imul
xchg
push
cld
int3
out
sbb
adc
xlat
cwtl
dec
rorl
cmp
fisubrl
cmp
push
scas
mov
xor
xchg
xchg
jmp
mov
leave
jmp
cli
movsl
sahf
lods
lret
sub
lcall
pop
icebp
or
cs
sbb
mov
cmp
cmp
std
dec
push
xchg
in
imul
xchg
lahf
pushl
ds
cmp
push
mov
scas
stos
inc
mov
jne
lods
shrb
ds
xchg
idivl
loope
insb
lcall
fmuls
xor
outsb
sarl
in
loop
std
repz
stos
aaa
sub
ret
shlb
mov
dec
sbb
jbe
jp
fists
mov
rorl
adc
je
sbb
pushf
cmp
daa
imul
fcomi
mov
lods
jne
insl
adc
or
jb
xchg
or
push
pop
test
out
bound
pop
pop
fbld
arpl
jl
or
ljmp
testl
add
scas
xor
jg
push
xorl
stos
push
jmp
add
fs
xor
push
push
arpl
sub
into
and
nop
stos
je
aas
sub
decl
cmc
cltd
mov
mov
push
lcall
lret
inc
gs
cmpsb
pushl
stos
and
ficoms
lds
and
mov
gs
jle
push
stos
inc
dec
mov
pop
mov
inc
imul
das
subb
sbb
stos
mov
cmc
jo
push
xchg
int
pop
push
gs
pop
ja
sub
stos
push
out
push
xchg
add
aad
les
dec
call
stos
ss
cmp
adc
dec
inc
sarl
repz
in
mov
stos
or
xchg
pop
and
test
std
icebp
sub
cmp
lcall
in
xchg
and
add
lea
sti
in
mov
repnz
cld
lods
aaa
lea
xor
loopew
fwait
dec
mov
xchg
push
test
sahf
jmp
mov
mov
addr16
jae
mov
popa
mov
push
sarb
loopne
pop
sub
jge
orb
jmp
add
xor
xlat
and
out
fs
repz
iret
cmp
jae
mov
shl
and
xchg
mov
push
imul
cmc
popa
cli
fidivrs
lock
pop
jg
cmc
mov
lcallw
cmp
mulb
add
ljmp
mov
cmc
xchg
gs
fcomi
inc
movsb
add
jmp
rcl
fs
jmp
sahf
cmp
jmp
mov
add
sbb
pop
aam
sbbb
mov
sub
mov
add
jae
mov
lds
push
cmp
lock
imul
and
incl
out
inc
adc
lret
subl
jge
lods
jns
cmpsb
push
leave
and
dec
jl
mov
add
leave
xlat
enter
xchg
push
in
xor
mov
sbb
mov
out
cmp
fidivl
jmp
ja
sbb
js
int3
cwtl
add
sbb
cmpsl
mov
in
cmp
lods
repz
push
or
hlt
sub
cwtl
fsts
push
jae
ret
cmp
mov
and
mov
leave
and
out
sti
or
movsb
jae
jnp
add
mov
call
and
push
and
mov
cs
or
divl
mov
out
and
imul
pop
or
fadd
loop
test
jl
addr16
push
xchg
dec
stos
sbb
ud1
and
push
sahf
sbb
push
out
and
loop
push
xchg
iret
test
adc
mov
imul
lret
mov
or
aad
imul
aad
jl
push
insl
xchg
mov
aas
add
repnz
idivb
cmp
cmc
rcl
cmp
sbbb
jge
jo
flds
xchg
cmp
inc
push
pop
mov
ret
addr16
mov
adc
jbe
pop
test
sub
iret
fnstenv
sbb
push
xchg
daa
push
es
ljmp
iret
adc
lock
or
cli
mov
imul
mov
xor
sbb
adc
mov
mov
cmpsl
dec
mov
aaa
lret
adc
lcall
adc
int3
push
dec
push
cmp
hlt
push
in
mov
or
repz
xchg
addr16
pop
add
gs
ftst
stos
mov
mov
into
lods
mov
test
jae
cs
cltd
xor
mov
pop
add
out
dec
repz
negb
cmpsl
dec
scas
pop
ret
add
mov
sarb
ds
stc
pop
pop
add
pop
or
js
sbb
and
mov
mov
rcrl
mov
xor
cmp
sbb
daa
push
mov
out
stos
stos
outsb
insl
dec
xchg
mov
cmp
icebp
adc
push
test
push
jns
add
add
movsb
xor
push
jae
test
adc
inc
arpl
push
cltd
lods
xor
pop
and
outsb
pushf
and
clc
mov
xor
sti
es
jo
sbb
lods
push
xlat
cmp
push
xchg
loop
testb
pushf
or
push
fmulp
xor
pop
cltd
cmp
sbb
push
sbb
ret
lret
mov
jb
into
mov
mov
jle
je
stc
inc
in
and
cmp
jb
icebp
mov
fidivrl
bound
sahf
fcmovnb
push
inc
stos
pop
xor
mov
clc
xor
xlat
int
imul
sub
mov
loopne
shl
mov
mov
bound
xchg
fcomp
out
mov
sbb
out
aam
inc
rcr
arpl
es
push
inc
sbb
push
jle
push
and
add
cmp
jecxz
fsubrs
std
xchg
jecxz
or
bound
mov
adc
mov
mov
inc
outsl
aas
ficoms
pop
push
jge
sub
mov
lods
mov
adc
andl
fimuls
dec
adc
in
push
pop
mov
sub
jno
push
mov
push
jg
jnp
and
pushf
ss
pop
jb
jecxz
xchg
mov
xorb
out
mov
js
fistpl
add
loope
xchg
loopne
mov
pop
jbe
push
xchg
std
iret
gs
fmuls
sti
xorb
movsl
sub
lret
dec
xchg
sub
sub
daa
xor
pop
es
rcll
mov
xor
mov
imul
jg
dec
mov
inc
xchg
mov
cld
xor
mov
inc
sub
adc
movsl
push
dec
cmpsl
xchg
and
imul
dec
scas
and
cltd
insb
sub
out
mov
cld
orl
shl
scas
lods
ret
in
adc
mov
out
lret
or
mov
stc
push
lods
mov
adc
fsubr
insb
imul
xlat
mov
jg
fisubs
or
insb
dec
inc
outsb
push
xor
add
xor
jno
add
popf
test
mov
pop
cmp
or
insb
into
cli
adc
add
mov
pop
sub
rol
decb
sbb
push
pop
adc
call
inc
fldenv
insl
mov
jns
pop
add
in
dec
pusha
add
cmp
fiaddl
mov
or
cli
out
repz
stos
add
jns
sarl
fsubrs
fsts
stos
ja
icebp
or
das
ja
mov
jecxz
fistpll
aas
dec
sub
xor
repz
cmp
ja
test
shrb
mov
fadds
fcoms
xor
xor
cmp
daa
fnstcw
movsl
fldenv
push
rcl
xor
sub
xchg
and
push
push
xor
aam
in
aam
fcmovbe
clc
call
outsl
mov
out
imul
addr16
jecxz
push
jg
push
popf
mov
loope
jae
jge
shll
sub
mov
sub
mov
shll
cmp
call
std
mov
not
dec
mov
mov
xor
xchg
fmul
cld
jl
clc
enter
lret
into
add
aas
lea
out
insl
fnstenv
js
add
add
add
loop
pop
add
rol
jg
mov
movsb
pop
pop
mov
div
cld
inc
and
mov
add
cmp
mov
movsb
xchg
ficoms
int
ja
test
leave
xor
xorl
pop
and
mov
xchg
ss
scas
insl
fstps
xor
push
lret
xchg
mov
ljmp
jl
push
in
sbb
leave
mov
mov
inc
outsb
std
jp
aaa
mov
bound
push
pop
orb
xchg
xorl
int3
addr16
push
sbb
shll
xor
dec
cmp
cmpsb
mov
lods
pop
imulb
mov
dec
or
call
sub
dec
and
cltd
lcall
inc
stc
test
out
cmp
sub
mov
movsb
insb
repz
es
test
or
mov
jg
nop
push
adc
icebp
xlat
jge
sbb
in
lret
lcall
mov
test
inc
aad
ret
lods
lcall
adcb
adc
push
adc
pop
pop
lods
inc
rcr
pop
mov
in
and
add
pop
jno
mov
inc
insb
xor
adcl
or
dec
fistpl
lea
pushf
rolb
jns
insb
mov
inc
lahf
adc
or
dec
push
sub
sub
cmp
adc
scas
shrb
add
pop
pushf
ret
fistps
imul
xor
ja
outsb
scas
cmpb
test
push
add
ja
pop
pop
loope
cmpsl
mov
fs
repnz
outsl
pop
ds
negb
aad
jle
mov
pusha
mov
stos
xchg
sbb
aas
mov
xor
mov
mov
jbe
push
xor
jo
call
mov
repnz
outsl
mov
inc
lahf
stos
jg
add
stos
cmpb
sbb
mov
icebp
leave
in
lret
sbb
ja
out
cmp
ljmp
add
les
ret
add
cmpb
or
pop
je
fs
mov
pop
fistpl
call
and
or
jecxz
or
xchg
dec
outsb
pop
fisubrl
push
xchg
in
dec
cmp
sbb
inc
addr16
add
out
repnz
call
or
ljmp
add
icebp
cmpl
stos
mov
mov
enter
in
mov
out
bnd
and
scas
xchg
push
jno
jle
sub
or
cld
mov
mov
mov
cld
cmp
jecxz
mov
cmp
push
jae
subl
or
push
ljmp
jge
lock
mov
mov
xor
sub
xchg
mov
shlb
je
sub
push
repz
cmpsl
cmp
out
out
rcrl
pop
pop
sbb
roll
aas
imul
addr16
test
inc
sarl
nop
jno
iret
jle
cmp
sahf
jmp
add
aad
or
mov
test
dec
fdivl
or
push
lret
dec
scas
inc
add
ret
fisubl
call
filds
push
loop
or
call
jne
push
cld
fcomip
pop
push
insb
cmc
mov
fidivs
jmp
mov
push
and
jl
dec
nop
xchg
in
divb
int
push
pop
dec
or
xchg
mov
sahf
cmc
aaa
stc
mov
repz
xchg
cmpsl
pop
inc
or
dec
xchg
sbb
aad
ret
jge
push
pop
mov
mov
xor
mov
sub
dec
adc
sub
sub
lcall
mov
adc
loopne
mov
mov
mov
push
mov
data16
pop
jecxz
fimull
and
xor
push
mov
dec
rcrl
out
jnp
lret
cmp
rcrl
xchg
pop
test
mov
pop
add
sbb
cli
mov
jg
xchg
xor
fsubp
addb
and
shl
ja
xchg
fsin
orb
adc
cli
aam
sti
adc
cli
decl
cltd
sbb
push
mov
pop
mov
imul
cli
or
jno
pop
dec
mov
bound
shl
pop
mov
xchg
mov
lods
clc
pop
lahf
cmp
push
mov
push
into
fsubrs
xor
cld
fdivrs
mov
cmp
mov
and
push
xor
push
test
cld
pop
imul
mov
fiadds
dec
fwait
addr16
xchg
jae
lods
loop
push
imul
sub
ret
dec
jno
sub
xchg
inc
fsts
mov
es
cmp
test
les
gs
into
in
jno
mov
inc
lcall
ja
sub
sbb
js
jb
adc
daa
lea
ftst
xor
push
test
mov
test
subb
pop
fndisi(8087
fcoml
inc
xchg
xor
unpckhps
hlt
jl
inc
mov
push
mov
sbb
fnsave
insb
movsl
pop
mov
fsubr
xor
cmp
fdivl
inc
cmp
inc
mov
out
push
jb
mov
stc
fistl
adc
pop
je
ffree
mov
jb
mov
or
mov
cli
jno
mov
hlt
dec
cmp
mov
push
aaa
push
xor
pop
push
scas
lods
cmp
mov
pmuludq
pop
int3
jge
lea
xchg
orl
out
adc
sets
bound
mov
pop
dec
std
shl
mov
outsl
cmpsb
ljmp
sbb
jg
les
in
sbb
pop
pop
aam
jbe
cld
aam
jle
mov
adc
push
shrl
mov
in
shll
les
fcmovne
jne
sbb
push
dec
cltd
mov
repnz
mov
push
push
jge
dec
mov
mov
lcall
or
pop
inc
lock
jae
push
ljmp
add
pop
mov
pop
xchg
add
cmp
mov
lret
pop
xchg
test
dec
sbb
push
lock
xor
rcrl
negb
fs
in
addb
push
fidivrs
xchg
outsb
fwait
pop
or
insl
inc
push
dec
dec
xchg
aaa
test
std
and
cwtl
pop
push
jno
push
aas
dec
roll
dec
jno
in
test
push
sub
cmp
cmpsb
fnsave
push
mov
cmc
gs
popa
ret
int
enter
jnp
inc
pop
arpl
loopne
jp
iret
or
fmull
out
mov
xor
add
xchg
mov
jnp
sub
mov
mov
or
jae
lcall
popf
jns
cmp
xchg
int
mov
dec
xchg
mov
outsb
xchg
add
pop
mov
and
mov
mov
leave
in
mov
pcmpeqd
imul
into
xor
neg
imul
jne
mov
cmp
sub
cltd
jg
lods
es
xlat
iret
pop
jl
nop
cmpsl
mov
pop
or
sbb
push
imul
outsb
scas
push
test
add
jae
jmp
push
or
mov
repz
mov
in
push
cmpsl
xor
sarl
pop
lcall
push
or
movsl
xor
jmp
sbb
les
dec
mov
adc
adc
orb
mov
sarb
lods
push
aam
dec
pushf
xchg
jmp
xor
xor
insb
add
cmp
js
out
cmc
xchg
scas
imul
cmpsl
loope
or
scas
in
popf
inc
js
test
addr16
or
lahf
push
fs
sbb
push
lea
inc
mov
stc
dec
imul
fists
imul
ja
xor
mov
daa
mov
sbb
jns
adc
pop
sti
es
repz
cli
sub
ret
lret
jbe
insb
sbb
jb
fnstsw
mov
js
scas
test
xchg
inc
mov
and
mov
leave
push
lods
pop
rorl
into
ljmp
dec
ljmp
sbb
dec
cs
mov
aas
lods
or
add
ja
xchg
dec
and
inc
loop
cwtl
xchg
in
add
mov
ret
xchg
iret
stc
int3
mov
pop
sahf
daa
cmpsb
and
cmc
inc
add
cmp
leave
fldt
xor
push
test
cmpsb
ljmp
push
lods
cmp
xchg
xor
xor
inc
adc
jnp
mov
mov
lcall
adc
jl
jns
jns
dec
pop
addr16
or
stos
mov
fbld
push
push
popf
lock
sti
iret
lcall
mov
outsb
cmp
stc
push
lds
pushl
popa
sbb
mov
repnz
cmp
lods
mov
cs
jl
sub
js,pt
jecxz
jno
test
cmp
inc
in
adc
pop
adc
cmp
pop
or
test
and
arpl
or
shlb
inc
mov
test
in
jns
popa
mov
and
mov
hlt
lahf
jbe
dec
pop
adc
and
scas
addr16
insb
cld
pop
mov
adc
fldt
pushf
enter
icebp
cmp
jge
ret
out
pop
sbb
addl
mov
sub
xchg
xchg
in
push
jge
nop
cld
adc
jg
hlt
shlb
imulb
movsl
rorb
push
mov
inc
jno
sbb
insb
inc
jbe
mov
adc
je
pop
or
push
cmp
in
js
fs
scas
xchg
jecxz
test
popf
pop
add
dec
jae
pop
adc
and
movsl
aam
sarb
adc
adc
and
repz
sub
and
fs
jmp
pop
in
xlat
pop
cld
mov
and
rorl
outsb
jo
adc
dec
sub
xor
pop
push
mov
or
cmpsb
incb
in
insl
xchg
popa
aas
aas
adcl
fisubrs
in
stos
cmp
cmp
loopne
neg
stc
jecxz
das
cmp
jmp
outsb
fbstp
enter
or
movsb
dec
enter
stos
push
pop
repnz
rclb
shl
jnp
push
in
mov
pop
lds
xor
test
mov
out
mov
xchg
push
test
jb
or
xor
aad
xchg
push
loope
cmp
cwtl
or
repz
out
movsb
testb
mov
fdiv
mov
insl
imul
pop
mov
mov
outsl
arpl
xchg
push
sub
add
les
movsl
std
inc
and
jl
leave
mov
dec
mov
lock
cmp
jmp
cmp
ja
push
out
pop
fs
or
test
nop
sub
mov
ljmp
mov
mov
or
insl
mov
cmpb
dec
pop
ret
push
push
xchg
das
mov
pop
push
pop
dec
sbb
mov
jb
fwait
mov
pop
test
ds
and
int3
mov
fxch
xchg
in
push
aad
in
insb
lods
sbb
mov
inc
sub
adc
sarb
push
ss
or
shlb
roll
rorl
dec
mov
mov
cmpsb
mov
jmp
leave
xor
pop
mov
jne
movsb
add
into
adc
loopne
cltd
in
dec
das
inc
or
cmpsb
outsl
add
lret
loopne
addl
std
gs
and
or
and
push
mov
mov
pop
das
movsb
dec
popf
or
push
jge
dec
mov
push
insb
cli
sub
rolb
jnp
or
bound
mov
push
or
nop
fisubl
imulb
mov
ss
dec
mov
lea
ror
in
icebp
sbb
sbb
adc
and
sbb
push
orb
data16
and
and
daa
cld
out
into
mov
rcll
mov
mov
repnz
sbb
int3
outsb
lret
enter
cs
sbb
sahf
das
negl
mov
lret
mov
mov
loope
cld
pusha
jns
inc
jle
test
sar
insl
cltd
jno
and
or
das
or
xchg
and
add
inc
mov
pop
mov
ret
jle
adc
inc
sub
mov
popa
ja
frstor
push
sub
sub
mov
repnz
sub
scas
movl
mov
insl
xor
mov
mov
sbb
push
add
fld
out
mov
repnz
cmp
lock
mov
mov
imul
pop
or
idivb
out
shlb
ds
adcb
ret
mov
push
ds
jnp
mov
icebp
fstps
leave
pop
mov
stos
jnp
lret
add
sahf
mov
adc
repz
push
and
adcb
mov
cwtl
or
and
and
and
jns
adc
jle
cmp
test
loope
xchg
outsl
outsl
fcmovu
xlat
jp
out
jno
nop
stos
mov
roll
inc
out
jge
dec
cli
cmp
imul
testl
mov
sbb
lock
outsb
lcall
int3
clc
push
lds
fstl
sub
push
adc
add
insl
add
mov
aad
das
xchg
fwait
xor
cmp
jno
jnp
in
test
mov
mov
sahf
jl
and
cmp
add
aas
xchg
repz
mov
cmpsl
xchg
ret
inc
inc
dec
xor
dec
mov
dec
testb
pop
aaa
mov
out
add
jmp
xchg
cmp
mov
sub
mov
test
mov
jno
rcl
cmpb
sti
adc
jmp
inc
add
or
ret
jnp
jnp
cmp
and
adc
xor
or
jmp
hlt
hlt
stos
loope
ljmp
cs
push
xchg
jo
prefetcht0
mov
nop
or
ds
adcl
adcl
incb
std
cmc
or
xchg
mov
enter
xchg
test
inc
or
cmp
pop
add
pusha
movsl
sti
and
mov
push
lods
aaa
scas
lock
lret
aam
xor
mov
jbe
lahf
cmpsb
or
inc
call
adc
push
add
inc
add
int
mov
pushf
jne
adc
mov
push
mov
jb
mov
pushf
sbb
add
pop
data16
dec
and
mov
push
rorb
xor
xor
jo
xor
gs
call
push
stos
push
rcll
push
sbb
aaa
cmp
cmpsb
sbb
fidivs
mov
out
jmp
mov
or
test
jp
pushf
fdivrs
outsb
jle
in
xor
mov
push
mov
cmc
jmp
or
mov
ret
fisttpl
insb
sub
xchg
scas
jae
fldt
mov
sub
rcrl
fdivr
sbbl
inc
cmc
pop
pop
stos
mov
cmp
and
sbb
and
mov
mov
mov
in
add
mov
mov
loope
fidivrs
shlb
jo
mov
or
jg
jmp
mov
in
int3
push
xchg
xchg
sahf
mov
arpl
add
mov
or
fwait
cld
push
std
or
ds
dec
push
js
inc
jmp
shll
imul
inc
sti
xor
gs
add
cli
mull
pop
push
cltd
out
jg
repz
and
mov
test
cmp
cmc
mov
sbb
das
adc
push
mov
daa
push
adc
pop
mov
cwtl
push
popf
or
xchg
enter
sub
lods
pop
pop
cmp
mov
insb
sub
xor
xchg
dec
push
repz
lret
inc
mov
xor
xchg
hlt
aad
sub
rcl
notl
add
mov
adc
mov
adc
jl
pop
ret
je
fidivl
lret
mov
in
dec
push
jo
jns
in
fdivs
in
push
xor
mov
sarb
push
fcoms
stos
sbb
lahf
cmp
dec
sub
loop
adc
mov
push
dec
daa
test
daa
dec
mov
cmp
inc
das
cmp
jno
cld
imul
add
int
ja
mov
lcall
jns
sub
addr16
jne
add
ja
stos
outsl
push
les
pop
cli
jbe
lret
ret
es
xor
adc
push
cmpsb
add
movsl
push
stc
test
fisubs
sahf
cmp
add
xchg
pop
and
xor
cmp
jnp
mov
mov
push
call
sub
stos
gs
insb
add
sbbb
cs
arpl
negb
pop
pop
outsb
loope
adc
or
rorb
jb
ss
sbb
cmp
cld
rcrb
add
out
mov
outsb
push
in
stos
push
cmp
sub
cmp
jmp
jbe
mov
clc
add
ljmp
cmp
and
int
mov
in
pop
mov
and
push
xchg
mov
xchg
popl
pop
sub
imul
mov
je
xchg
rolb
jl
fs
dec
push
mov
xlat
push
xcrypt-cfb
cmpsl
gs
dec
mov
mov
xchg
jle
movsl
lock
pusha
sub
pushf
lock
mov
lock
fucomip
popa
insb
cmp
out
test
cmpsl
xor
test
stos
pusha
fistpll
add
cmp
pop
xchg
pop
pop
loopne
dec
cmp
adc
roll
sarl
je
rclb
in
cmp
sub
mov
push
inc
sbb
fs
outsl
xchg
push
stc
ljmp
ret
repz
sub
mov
mov
add
lahf
loop
push
addr16
mov
push
cmp
or
sbb
cmp
mov
mov
dec
mov
mov
rcrb
push
faddl
notb
push
fcmovne
inc
rcr
outsb
sbb
arpl
mov
pop
push
cmp
xchg
bound
repz
cmp
out
mov
xchg
pop
adc
shrl
loopne
call
dec
cmp
inc
mov
mov
add
cmp
ljmp
repnz
ffreep
and
cmpl
bswap
arpl
xchg
sbb
dec
xchg
insb
js
or
xchg
sbb
fwait
add
xor
outsb
mov
out
sub
loopne
mov
xor
insl
sbb
bound
pop
mov
mov
mov
mov
test
roll
fwait
clc
push
pop
in
je
addb
arpl
inc
incl
push
adc
lods
add
adcl
jnp
jnp
imull
cmp
iret
scas
jecxz
pop
adc
sahf
fwait
lods
xchg
mov
shll
dec
fnstenv
fildl
stc
jns
lret
sub
nop
cmp
push
insl
pmaxub
ret
xchg
xor
jb
adc
xchg
push
addr16
jmp
adc
sbb
add
mov
sbb
and
jge
ret
outsl
mov
dec
add
push
popa
mov
xor
aaa
xor
stos
mov
pop
jl
cmp
call
cltd
xlat
outsb
mov
push
mov
push
je
sub
setle
mov
add
mov
clc
stos
sbb
dec
push
push
bound
sbb
fs
ja
dec
push
fidivs
xchg
loopne
in
add
xor
cmc
jne
push
sti
dec
out
and
dec
xor
adc
push
lods
xchg
fistl
test
arpl
repz
outsb
movsb
xchg
adc
pop
imul
push
aaa
jl
sbb
out
test
lret
push
iret
jns
mov
in
pop
xor
xchg
loopne
push
inc
sahf
aam
push
das
fstps
je
inc
xor
xchg
mov
cmc
lock
fnstenv
cs
mulb
jns
in
lret
jb
dec
test
lcall
lods
pop
sub
outsl
pop
inc
andl
stc
mov
iret
popa
lods
cwtl
push
sbb
mov
pop
push
and
mov
inc
jns
dec
xchg
cmp
in
test
dec
jo
inc
mov
push
jo
xor
jecxz
arpl
jmp
pop
ret
or
rorb
fwait
inc
adc
into
jge
xor
jne
adc
divl
push
inc
push
ljmp
push
jmp
cmp
pop
add
dec
push
mov
inc
in
fnstcw
xchg
mov
cli
xlat
ficoms
popa
mov
and
call
cmpsl
ss
repnz
xor
loope
jns
xchg
ret
out
or
mov
rclb
mov
aad
inc
push
xchg
es
jbe
bound
xchg
ret
sub
movsl
subl
adc
fs
leave
and
jns
cwtl
sbb
das
ret
cmpsb
ss
cmpsb
xchg
push
adc
fdivrs
cli
jno
jno
xor
push
fdivs
push
fimuls
mov
push
in
outsb
xchg
dec
aam
sub
mov
enter
cld
pushf
sbb
pushf
shlb
gs
repnz
ds
lock
jo
jg
in
std
ljmp
inc
call
ljmp
out
and
aam
stos
or
xchg
mov
aaa
sbb
xor
jl
xchg
push
and
xor
cmp
jbe
pop
or
loope
bndstx
add
mov
xor
dec
fsubrp
jnp
int3
and
in
out
movsl
mov
jg
mov
out
out
xor
push
rorb
rcrb
jo
xchg
pushl
int3
ljmp
push
fldenv
push
pop
pop
cld
mov
jmp
add
ret
cmp
out
inc
jl
leave
test
and
add
outsb
pop
movsl
ja
adcl
mov
jecxz
mov
mov
mov
inc
mov
mov
push
jle
pop
es
or
je
lds
and
into
xor
pop
mov
fisubrs
test
or
adc
mov
pop
mov
addr16
in
and
cmp
testb
inc
xor
push
sbb
mov
sahf
nop
add
lcall
lds
or
js
call
ds
pop
push
repz
push
lds
sbb
sti
or
jg
sahf
mov
out
push
leave
test
loop
pop
dec
pushl
mov
sar
add
fisubrs
loopne
push
daa
sub
dec
cmp
cmp
popa
in
and
test
cmp
shlb
daa
hlt
jbe
cmp
xchg
mov
xchg
pop
pop
fiaddl
and
sub
mov
jmp
out
popf
push
inc
mov
fistpl
pushf
repz
push
pushf
aas
adc
fs
push
xchg
cmp
and
sub
fs
test
xchg
add
mov
addb
adc
jo
fbstp
mov
push
push
mov
fdivrl
sub
shll
call
mov
in
lods
fstpt
xchg
sub
xchg
fists
push
int
mov
pushf
adc
in
and
fistpll
sub
mov
mov
in
subl
clc
cmp
loopne
in
mov
loop
cld
pop
cmpsb
scas
loopne
or
repz
adc
idivb
adc
push
mov
jge
mov
sahf
arpl
sti
mov
mov
sbb
xchg
sbb
add
stc
pop
sub
xchg
ds
dec
in
fnstcw
mov
add
sti
outsl
outsl
mov
lea
into
and
loopne
pop
gs
mov
int
stc
or
pop
out
xor
xor
dec
in
pop
out
xor
dec
incl
inc
lret
mov
fstpt
sbb
mov
push
add
movsl
and
stc
mov
lods
mov
icebp
aaa
fsubrl
gs
out
outsl
sub
jbe
jno,pt
push
inc
outsb
cwtl
cld
inc
aas
insl
pop
inc
mov
mov
sub
stc
jnp
inc
test
xchg
es
cwtl
fidivrl
cltd
aam
push
lds
pop
dec
arpl
imul
jl
push
out
fldenv
stos
adc
xchg
cmpsb
push
arpl
fistl
cmp
lcall
fstl
add
outsb
add
loopne
pop
nop
lea
inc
dec
adc
dec
lret
mov
aas
out
xchg
out
xor
addl
pop
lahf
push
fwait
aaa
sbb
cmp
push
aaa
mov
or
cmpsb
pop
inc
sub
add
cmp
loopne
or
push
cmpsb
fldenv
out
cmc
or
xor
lock
cmpsb
test
push
push
pop
loopne
push
and
xchg
mov
push
aad
sbb
arpl
mov
adc
xchg
fadd
ljmp
cli
push
push
mov
rorb
call
test
sbb
dec
xor
jnp
out
lods
jnp
lret
inc
lock
fildl
lock
xorb
ja
lahf
or
mov
add
push
insb
imul
loopne
fs
push
push
sbb
addr16
cmpsb
jle
xor
mov
jmp
jecxz
pop
nop
dec
xchg
lret
cmp
and
cmp
inc
and
imul
outsb
sbb
hlt
pushf
lds
push
pop
enter
mov
cli
sahf
cmpsl
mov
mov
ficoms
xchg
cmp
js
sti
sub
mov
mov
cmpl
rcrl
and
popf
ja,pn
in
adc
or
push
in
add
daa
xor
push
mov
pop
sahf
fwait
loope
outsl
add
cltd
out
add
cli
add
cmp
pop
mov
in
sbb
jle
das
inc
mov
in
xchg
jmp
push
js
rolb
mov
mov
inc
test
inc
xchg
add
xchg
push
lea
sub
test
stc
jbe
lods
loop
idivb
test
in
cmpsl
or
sbb
mov
jecxz
adc
lret
lret
cmp
push
dec
repnz
and
jae
add
jbe
and
pop
pop
xor
lret
add
das
out
cld
mov
flds
sub
daa
push
and
xor
push
pusha
out
sbb
or
inc
cmpsl
stc
in
mov
xchg
jl
sub
cmp
and
sub
jg
xchg
push
and
pushf
test
pop
add
test
add
inc
jbe
xchg
jbe
xor
xor
xchg
ss
cmc
cmp
jge
push
xor
shl
inc
negl
push
clc
and
ficoms
shlb
scas
inc
or
mov
cmc
lret
sbb
and
outsl
loopne
push
aaa
cmp
movsb
cmp
mov
sahf
int3
xchg
and
sub
push
lds
repz
lea
adc
pop
mov
stos
xchg
sbb
es
sbbb
mov
pop
mov
sbb
ljmp
jbe
and
mov
xchg
std
lods
push
scas
xlat
push
iret
dec
or
pop
mov
mov
outsl
adcb
in
jnp
xchg
aad
adc
insb
data16
pusha
pop
mov
jle
loop
sbb
xor
pop
leave
or
addr16
mov
sbb
pop
inc
push
dec
imul
shlb
iret
push
xchg
leave
add
inc
aam
cmp
inc
repnz
enter
push
jns
fsubs
push
mov
ds
cs
out
jg
movsl
xchg
repz
cmp
dec
add
xor
std
test
lret
jle
fdivs
scas
popa
cmp
lahf
jmp
mov
jb
mov
pusha
inc
rcll
mov
lret
sub
popf
mov
mov
sub
add
jecxz
ret
addr16
inc
fildl
sub
jae
mov
sahf
or
jmp
adcb
jmp
mov
adc
cltd
and
flds
cmp
add
inc
mov
mov
dec
test
pop
push
dec
jle
dec
aad
xchg
xchg
adc
sbb
pop
lret
aaa
xlat
out
xor
add
adc
inc
rol
std
xchg
push
push
xor
pop
out
int
dec
repz
aam
jge
inc
lods
cmc
ds
mov
mov
out
or
or
aaa
shl
repnz
popf
push
repz
xor
leave
int3
pop
xor
dec
xor
adc
shr
loope
rcll
pop
and
scas
adc
inc
clc
or
push
pop
call
jne
mov
loope
cmp
adc
loop
ds
mov
scas
dec
add
sbb
mov
mov
pop
jnp
out
ja
jg
inc
loope
scas
push
jmp
mov
stc
cld
gs
sahf
mov
iret
cli
pushl
enter
insl
jp
xchg
cld
and
push
cmpl
cli
call
ja
cmp
cmpsb
dec
das
mov
fmul
loopne
sub
add
fwait
mov
push
xchg
inc
fldl
popa
aad
xlat
dec
neg
mov
jne
add
call
mov
add
movsb
xor
imul
cli
push
ret
and
lret
add
rclb
ljmp
mov
xor
push
test
movl
cmp
es
push
push
add
fnstsw
dec
enter
xchg
add
jns
enter
gs
call
fcoml
mov
jg
arpl
jg
and
pop
sbb
mov
orb
cmp
push
xchg
inc
mov
dec
dec
je
mov
cmp
call
lods
sarb
xchg
or
mov
mov
bound
out
pop
pop
and
fiaddl
es
loop
and
outsb
test
dec
movb
sbb
enter
mov
xchg
loopne
push
lock
dec
push
std
in
mov
bound
nop
cmp
aas
cwtl
fdivs
and
xor
hlt
test
out
cs
aaa
popf
dec
jl
mov
mov
xor
pop
adc
cs
jp
push
push
sub
rcl
xchg
sub
inc
xchg
aam
adc
mov
jnp
sbb
lcall
mov
mov
adc
stos
mov
pop
jl
push
sub
dec
xor
je
jbe
jmp
push
sub
push
jle
popa
and
push
pop
fsubs
inc
out
adc
jmp
push
lahf
push
ret
push
mov
in
pusha
xor
adc
mov
mov
xor
pop
lock
sbb
popa
xor
inc
mov
or
cltd
pop
xchg
loopne
xchg
scas
sbb
xchg
int3
xchg
mov
pop
nop
inc
outsl
or
xchg
js
dec
dec
dec
push
push
in
sti
mov
xchg
lret
inc
fildll
hlt
nop
movsb
je
push
aad
jne
std
cmpb
mov
mov
mov
dec
ljmp
sbb
add
mov
pushf
out
xor
pop
or
adc
jp
fnsave
out
cld
xchg
adc
scas
bound
testb
jnp
pop
jbe
xor
sub
gs
jo
mov
fadd
dec
push
inc
push
imul
inc
jl
sahf
pusha
addb
mov
je
fldl
fs
pop
pop
jmp
ss
push
dec
clc
jecxz
and
xor
xchg
and
sar
sahf
jns
lret
sbb
jno
xchg
mov
loopne
cmp
notb
jo
sar
jmp
lcall
cmpsl
add
mov
in
push
mov
push
fcomi
mov
dec
xchg
jmp
push
lret
mull
pop
arpl
xchg
pop
adc
xlat
pop
jo
insb
mov
push
cmp
mov
pop
les
aaa
int3
dec
loop
scas
or
jnp
xor
and
inc
adc
sub
arpl
add
xor
imulb
xor
stc
pop
aas
xorl
rcl
cmp
pop
lds
mov
mov
filds
and
xlat
pop
cmp
repz
mov
rorl
test
sqrtps
push
or
sbb
cmp
sbb
or
cmp
shl
sbb
repnz
sahf
push
mov
xor
pop
sub
out
ds
insb
jns
call
pop
loop
shll
jp
push
push
loop
xor
sub
mov
enter
fsubs
shlb
mov
inc
xchg
push
imul
and
je
adc
mov
mov
pop
fiadds
gs
jecxz
adc
call
call
mov
push
aad
out
or
addr16
stos
cmp
push
cmp
mov
js
xor
push
cmpsb
mov
int3
aas
push
fwait
mov
sbb
mov
les
fldcw
outsb
imul
sti
cli
push
addb
lret
fisubrl
xchg
inc
loop
jle
push
int3
xor
sub
imul
dec
loopne
mov
xchg
xchg
in
or
movsb
shrl
pusha
mov
addl
lea
xor
add
sahf
dec
fs
add
cmp
ds
mov
push
pushl
insl
xor
rcr
dec
adc
out
aam
cltd
lahf
cmp
cmp
push
fmulp
mov
loop
outsb
mov
sub
iret
adc
lock
mov
stc
inc
divb
pop
cs
jmp
xor
les
je
icebp
out
testb
xchg
dec
jo
mov
test
les
mov
lcall
mov
inc
or
adc
jae
push
in
jmp
jo
lcall
mov
aaa
mov
lods
pushf
push
cmpsb
repz
cld
and
test
xor
push
mull
push
gs
mov
fwait
cmp
jecxz
sbb
adc
cmp
loopne
mov
and
enter
and
data16
push
jne
in
fdivr
push
adc
sbb
arpl
lea
sbb
pop
pop
fsubrs
cmp
fnsave
out
lcall
mov
and
mov
scas
or
mov
or
sub
mov
add
insl
mov
pop
fs
imul
adc
lock
add
stos
test
and
xor
push
push
movsb
lret
insb
shr
push
adc
ja
imul
inc
dec
hlt
or
sub
fidivrl
sub
xor
pop
jb
int3
add
and
js
or
and
sbb
out
mov
pusha
sub
adc
out
gs
insl
mov
mov
add
pop
pusha
xchg
imul
sub
push
cwtl
xor
std
pop
push
mov
push
jo
xchg
xchg
fdiv
test
adc
and
je
mov
add
jecxz
cmp
pop
fcmovne
loopne
cmpsb
movsb
aas
adc
and
lret
xor
push
stos
and
adcl
jae
imul
cmpsl
dec
push
jle
and
xchg
jmp
xlat
cmp
lods
adc
cmp
xchg
add
imul
mov
adc
repz
dec
adc
push
or
adc
loope
mull
sbb
push
jl
jmp
or
and
adc
add
and
jle
leave
movsb
xchg
in
and
ss
ljmp
sub
xchg
out
out
sahf
lea
sbb
cld
sbbb
dec
add
push
mov
jae
jnp
ret
mov
dec
imul
je
jae
mov
test
out
dec
sub
push
lods
add
pop
sub
or
xor
shll
sti
push
jb
mov
xor
xchg
pop
xlat
pop
push
inc
pop
or
test
sahf
jnp
in
aas
inc
xchg
mov
sub
jno
sub
adc
cltd
xlat
lds
popa
or
mov
jmp
jle
dec
xchg
loope
sbb
jne
xchg
in
push
cmp
mov
jns
dec
or
aaa
enter
mov
rcr
cmpsl
scas
fcoml
add
fdivs
adc
fistl
xor
mov
cmp
lea
or
xchg
push
push
pop
pop
mov
or
fsubl
rcrb
in
dec
or
xchg
movb
test
xlat
rolb
or
int
inc
xchg
push
mov
lods
and
inc
mov
sbb
pop
call
adc
pause
shrb
aam
mulb
xchg
jno
adc
adc
out
ret
xchg
sbb
scas
outsb
and
xor
pop
and
sahf
ja
leave
xchg
and
movsb
or
cmpsb
sbb
ljmp
outsb
sti
pop
push
and
pop
mov
mov
adcb
popa
jnp
sub
fcomps
or
popf
out
mov
sub
pop
imul
xor
orl
scas
dec
sub
scas
inc
mov
ret
and
mov
frstor
mov
adc
xchg
jne
notb
clc
aas
adcb
dec
and
cmp
lds
mov
scas
movsb
insl
outsl
xchg
push
adc
add
xor
adc
cli
xor
in
pop
dec
add
ficoml
jne
stos
pop
loope
shrl
cmp
xchg
aam
xor
and
add
negl
inc
add
cmp
cld
sarl
inc
iret
add
adc
dec
scas
popf
lret
orl
xor
xor
xorl
xchg
loope
cmpsl
adc
movsl
iret
daa
fsqrt
and
or
lods
daa
cld
mov
mov
mov
mov
icebp
ja
loope
push
and
sahf
mov
lcall
sbb
pop
push
xchg
sub
push
or
inc
fs
fstl
shlb
pop
imul
inc
out
fdivs
xchg
sbb
fwait
push
cli
pop
mov
rcrb
clc
xchg
popa
shrl
adc
pushl
in
aad
hlt
inc
adc
and
dec
or
push
mov
ja
das
jns
lea
orb
and
in
out
jo
pop
push
xor
mov
dec
cmp
jo,pt
push
cwtl
or
ds
xor
test
fcmove
add
shrl
sub
incb
scas
mov
mov
mov
into
xchg
fists
inc
repz
xor
pop
fsubrs
pop
out
fsubrs
jle
daa
insl
mov
fdivp
arpl
decl
addr16
and
cmp
int3
aad
pop
push
inc
mov
pop
cmp
inc
xchg
in
jb
nop
or
out
sub
fsts
pop
mov
sub
dec
inc
sbb
mov
movsb
hlt
lret
mov
es
add
or
inc
jo
lods
dec
outsl
inc
pop
sub
mov
mov
and
nop
xchg
in
sub
pop
in
add
and
jmp
rcr
add
mov
aad
es
dec
imul
mov
fbstp
xchg
mov
hlt
jmp
es
sbb
jbe
push
insl
jmp
xlat
push
cld
aas
add
cwtl
pop
pop
test
jns
pushf
pop
adc
mov
popf
xchg
es
push
mov
or
or
insl
popf
out
sbb
dec
jmp
scas
pop
add
mov
cwtl
adc
into
jmp
or
xchg
dec
enter
ds
xchg
adc
or
std
sub
out
dec
fimull
aad
sub
sbb
icebp
icebp
jmp
cld
xchg
push
mov
mov
sub
das
push
cmp
adc
pop
and
movsl
push
mov
outsb
cmp
lea
inc
cli
divb
or
and
xlat
leave
pop
jle
stos
jp
insl
adc
shl
add
inc
jne
xor
inc
out
jo
mov
mov
in
out
cmp
out
xor
jb
pop
in
mov
in
xlat
push
scas
pop
arpl
push
fildll
addl
insb
mov
pop
mov
push
mov
pop
cld
fs
sub
aas
xchg
xchg
or
mov
stos
ljmp
sbb
inc
jmp
dec
cltd
add
lds
xor
popf
xchg
ljmp
imul
dec
and
and
das
fucom
lret
lcall
fs
ljmp
addl
lcall
lcall
je
faddl
mov
ljmp
fistps
in
mov
mov
xor
out
iret
sbb
xchg
and
mov
pop
sahf
dec
adc
xchg
adc
repnz
cmp
jmp
cmp
int3
das
lahf
in
add
push
mov
mov
insl
fdivs
dec
mov
lcall
sahf
inc
pop
add
push
lods
push
les
jp
push
mov
fidivrs
clc
out
adc
jp
pop
adc
mov
sarl
mov
sar
inc
orl
xchg
sub
loope
into
fnstenv
sbb
adc
jb
xchg
push
testl
jl
and
gs
scas
xchg
fimull
out
xchg
aad
push
lahf
out
testl
xor
in
fs
cmpsl
jl
test
mov
add
and
rclb
adc
pop
sbb
cmp
sti
push
inc
push
ss
push
cmp
rcrb
cltd
shlb
add
jb
ljmp
push
mov
fs
icebp
aaa
mov
push
sbb
scas
pop
int3
mov
sub
dec
lods
add
test
or
mov
mov
xchg
mov
add
pop
lret
xchg
int3
jno
mov
lret
test
jmp
and
hlt
jg
das
fimull
test
or
aaa
pop
add
fistpll
pop
xlat
test
mov
mov
sbb
outsl
ret
xchg
das
adc
dec
outsl
lret
loop
and
repz
or
pop
ret
pop
adc
stos
adc
mov
pop
les
dec
push
test
cmp
fidivrl
and
mov
xor
xor
loope
cmp
mov
or
in
cmp
in
or
push
jmp
dec
add
mov
gs
shrl
test
repz
add
sub
std
mov
push
adc
jge
cmpsb
cwtl
pop
or
fisubl
mov
push
out
je
jns
dec
pop
mov
add
sbb
or
ja
xchg
outsb
subl
pop
push
in
mov
rcll
and
stos
adc
pusha
dec
adc
aaa
mov
pop
test
cs
add
int3
push
adc
xor
into
pop
ljmp
in
rcll
cmp
lahf
mov
jno
out
mov
lods
mov
sahf
imul
push
loop
stos
mov
sub
sarb
daa
mov
loopne
and
add
lahf
loope
mov
mov
and
ja
mov
fnstcw
sbb
pop
xlat
fwait
out
adc
xor
popf
out
int
bound
inc
jae
inc
xor
popf
sub
sbb
push
dec
imull
cmpsl
insl
frstor
and
and
pop
sbb
lea
cwtl
sub
ret
xor
aas
adc
sti
dec
sarl
push
scas
xchg
sbb
cld
mov
mov
enter
mov
mov
dec
mov
outsl
cmp
vmovshdup
push
pop
cld
adc
faddl
lods
scas
pusha
jae
ret
push
sahf
mov
int
fucomi
mov
and
pop
shlb
aam
mov
pop
sbb
cmp
mov
enter
push
fsubrl
out
cmp
inc
test
clc
clc
sti
les
inc
push
xchg
cs
cmpsl
mov
movsl
imul
adc
jecxz
mov
aad
xchg
ds
xorb
aam
cmpsl
jecxz
add
inc
test
lds
dec
lock
pop
cmpsb
mov
hlt
cwtl
add
lds
jge
cmp
icebp
nop
sahf
repz
aaa
push
add
dec
cmpsl
jns
int3
adc
add
sbb
mov
lret
aad
xor
lods
in
cmpsl
adc
and
idivb
sub
jb
jge
shrl
in
and
fst
mov
pop
add
xor
imul
imul
add
test
add
inc
pop
into
outsb
jae
arpl
stos
inc
jnp
and
adc
cld
mov
sbb
movsb
ds
mov
sbb
gs
xchg
push
stos
dec
mov
scas
cltd
pop
or
inc
jo
aam
test
insb
dec
aam
cld
in
addr16
lcall
in
lods
mov
data16
or
repz
mov
lods
dec
jae
mov
idivb
outsb
mov
dec
push
jae
mov
mov
pop
and
sarb
sub
fsqrt
and
pop
pop
fsubl
addb
sbb
in
mov
mov
xchg
cmpsl
mov
ljmp
lods
inc
pop
xlat
fcmovnu
out
and
test
lea
xchg
fst
jp
pop
jns
cmp
push
jmp
xchg
out
loope
lods
mov
ret
repz
fsubl
shlb
lret
mov
mov
div
dec
mov
sbb
pop
adc
arpl
jg
sub
pop
lret
dec
stos
cmp
mov
xchg
pop
xchg
cmp
stos
in
es
inc
les
push
loopne
out
and
or
mov
addr16
sub
or
sti
ror
clc
sti
imul
pop
push
inc
fdivl
arpl
lret
scas
cltd
lret
xchg
inc
pop
push
setnp
icebp
fldz
jg
lcall
dec
mov
cmp
xor
bnd
mov
repnz
sti
loopne
subl
or
cli
mov
xchg
mov
xchg
pop
mov
pusha
mov
data16
push
push
scas
sbb
xor
cmp
add
sbb
sub
das
xlat
fstl
leave
dec
mov
mov
out
popf
movsb
scas
outsb
ljmp
mov
hlt
lods
shr
xor
lret
push
sbb
sub
mov
mov
push
push
mov
push
leave
ljmp
scas
popf
cs
xlat
in
cmovnp
scas
fneni(8087
popf
loop
push
icebp
jnp
push
lret
add
mov
push
popa
fmul
ljmp
rol
jnp
sub
mov
ljmp
fcompl
sub
lea
out
sahf
int3
fisttpl
xor
test
mov
cmc
and
imul
cs
or
add
pop
cmp
pop
jne
dec
mov
mov
insl
lret
xchg
cmpsb
lahf
stos
mov
jno
mov
sub
test
fistpll
outsl
mov
push
in
mov
pop
cwtl
jne
push
pop
in
scas
and
mov
hlt
inc
in
neg
testb
shll
hlt
xchg
sub
cltd
das
jmp
push
cld
mov
movsl
imul
push
push
jg
mov
subb
dec
pop
data16
xor
addr16
dec
cmp
cld
cmc
sub
sub
daa
mov
leave
push
sbb
pop
xorb
and
fimuls
insb
push
es
js
push
jno
sbb
and
sub
add
sbb
and
in
dec
add
or
js
in
ss
inc
pop
xorl
push
pusha
mov
or
cmovns
lods
fsts
sahf
xchg
es
ja
stos
out
push
and
rep
xchg
cmp
push
lds
push
mov
cmp
push
out
inc
sub
icebp
pop
sub
jno
xor
add
mov
push
loopne
nop
fnsave
jbe
add
pop
xchg
push
fldenv
insb
fisubrl
lock
cwtl
call
and
adc
pop
clc
jle
sarb
and
jl
adcl
jbe
nop
fidivrs
jecxz
fistpl
outsb
mov
xchg
cli
pusha
mov
cmp
loopne
mov
cmc
inc
adc
fcmovnb
xchg
js
xchg
xchg
xor
cmp
leave
dec
sub
movsb
aam
adc
xchg
fldt
or
inc
cmpsb
loopew
ret
inc
sbb
icebp
or
jl
sbb
add
repz
loop
clc
repz
call
lret
adcl
lds
fldt
jl
or
or
mov
pop
adc
cli
fnstenv
std
mov
push
push
xor
pop
mull
dec
addr16
push
adc
cld
cmp
sub
sub
inc
scas
inc
std
sub
inc
lock
sub
xchg
call
repz
mov
cmp
daa
loopne
enter
mov
leave
sub
ljmp
out
dec
mov
or
mov
pushf
sub
adc
jmp
add
xchg
mov
fldt
pop
cwtl
dec
mov
inc
filds
mov
out
cltd
push
or
sub
andl
lock
sahf
das
hlt
out
shl
flds
popa
fs
xor
popa
pusha
mov
cltd
inc
test
and
xlat
adcl
mov
mov
nop
rcll
xchg
mov
inc
shl
and
ss
cli
and
fwait
into
mov
fidivl
fbstp
adc
cmp
fists
add
pop
lahf
sub
repz
push
dec
lea
push
add
ljmp
xchg
stos
call
xchg
jp
leave
lahf
jl
sarl
outsb
jo
mov
shl
aam
fwait
addr16
lret
push
out
push
sbb
adc
xlat
in
imul
icebp
cmp
add
lret
jo
xor
cs
repnz
nop
repnz
xchg
dec
faddl
gs
pop
pop
cmpsb
sbb
inc
testb
insb
arpl
push
mov
jge
cmp
sub
sbb
cmpsb
in
lods
popa
jl
in
pop
cmp
and
sbb
dec
daa
pop
sub
sahf
cmpsb
mov
test
aaa
sub
rolb
pop
pop
repnz
jmp
sub
repnz
je
mov
lretw
movsb
pop
arpl
inc
cmp
cmp
and
fcoms
aaa
inc
cmp
aam
movsb
sbb
sbb
push
mov
ljmp
mov
call
add
and
out
mov
ljmp
pop
cli
lahf
rol
pop
xchg
inc
and
dec
jnp
push
jecxz
daa
lahf
push
jge
add
outsb
aaa
adc
add
test
mov
popl
xlat
push
dec
repnz
test
mov
sahf
and
add
icebp
push
mov
out
mov
xchg
dec
sbb
jmp
imul
das
sbb
idiv
pop
inc
out
fcoms
pop
mov
push
shll
cli
fwait
mov
pop
add
xchg
mov
dec
mov
jge
or
call
push
sti
xchg
out
repnz
movsl
insb
pusha
lret
pop
or
adcl
icebp
cltd
lcall
xlat
in
xchg
js
mov
push
call
out
xorb
adc
sti
pusha
dec
les
inc
and
jb
ret
push
ja
mov
in
adc
adc
sti
push
and
and
pushf
les
mov
dec
xchg
std
mov
in
imul
lock
testl
jno
je
push
or
lret
ja
pop
aam
jae
cmpsb
sar
test
mov
dec
mov
push
push
std
pop
rcll
xor
xchg
push
sti
jbe
rcrl
enter
negl
xchg
cmp
inc
add
cmp
iret
sbb
sub
clc
cmpsl
and
push
popf
cmpsb
dec
sbb
movsl
and
cmp
sbb
pop
or
mov
sub
lret
cmp
std
outsl
repnz
dec
aam
jl
out
or
mov
sub
rcrl
scas
push
movsl
ljmp
fxch
jp
cmpsb
dec
sub
cmp
bound
fistpll
insl
mov
add
xor
sbb
addr16
pop
inc
pop
dec
stos
jns
fdivrs
daa
adc
into
lret
dec
imul
or
or
sub
xor
mov
push
and
dec
mov
mov
int
pop
jle
insb
test
cmp
pop
mov
stos
mov
push
js
or
inc
inc
out
dec
out
sub
enter
popa
ds
fwait
out
mov
fwait
inc
xchg
insl
mov
out
push
xchg
cmpsl
xchg
lahf
test
add
js
inc
push
mov
std
mov
xor
sbb
aam
xor
or
hlt
mov
push
add
adc
insl
mov
pop
or
jno
pop
movsb
mov
clc
mov
mov
mov
pusha
clc
adcl
push
xor
repz
xchg
adcl
jmp
inc
mov
scas
xor
int
insb
pop
stos
mov
and
dec
xor
mov
inc
and
pop
lock
cmpsb
jns
jge
out
movsb
imul
icebp
dec
jb
mov
mov
into
cmc
and
jp
in
mov
xchg
push
je
lahf
out
sbb
dec
pop
lods
jb
or
pop
popf
pushf
in
push
jb
pop
fcompl
mov
lcall
xor
mov
adc
mov
jl
test
adc
jl
loop
pop
pop
daa
add
or
iret
lock
or
cmc
cld
scas
push
adc
jns
and
xchg
jge
fistpl
mov
jg
jb
lods
xor
ljmp
loop
shr
pop
inc
push
pop
add
add
dec
pop
xor
jnp
mov
dec
push
dec
jnp
fcomps
pop
push
jge
int3
or
sbbb
fadd
out
aam
dec
jae
push
ret
adc
incl
ret
xor
sub
ret
xor
iret
cmp
xlat
fdivs
data16
int
ficoml
pop
mov
push
sbbb
repz
mov
adc
popf
push
nop
xchg
mov
movsl
mov
xchg
stc
lahf
mov
adc
loop
mov
jno
xchg
sbb
jecxz
out
and
jb
lcall
pop
je
in
pop
pop
pop
repnz
mov
in
adc
frstor
and
cmpsb
aas
mov
jge
faddl
sbb
xchg
xor
dec
insb
int3
or
adc
pop
xorb
cmp
addl
sar
leave
adc
xor
mov
imul
js
xchg
clc
jns
das
jbe
push
fiaddl
std
and
les
xchg
jmp
addr16
lock
cmp
cli
mov
movsb
adc
adc
pop
push
push
mov
mov
clc
mov
push
xor
pusha
cmpsl
rcll
fimull
rcrl
mov
or
int3
push
fcmovnbe
mov
insl
or
dec
mov
cltd
xor
sbb
out
popa
mov
movsl
in
jo
data16
xlat
jmp
mov
cmpsb
xlat
adc
loop
xor
push
repz
pop
pusha
mov
fiadds
fcomps
inc
inc
cmp
pop
push
cmp
push
add
roll
test
enter
mov
lret
cltd
data16
imul
outsl
test
mov
sahf
lcall
dec
mov
dec
xor
sbb
subl
in
repnz
xchg
cltd
xchg
or
sub
jge
test
add
outsl
lods
test
mov
sbb
xor
andb
lcall
sbb
xor
push
mov
and
cmp
sbb
insl
enter
test
inc
repz
sti
pop
pop
mov
sub
and
and
adc
call
out
push
mov
xchg
pop
je
push
sub
or
out
sub
lods
shl
pop
cmpsl
lea
cmc
shll
subl
mov
xchg
sarb
adc
mov
mov
adc
add
aam
in
into
mov
ror
lods
sbb
pop
sub
daa
jae
cmc
or
and
push
jnp
stos
jecxz
fidivrl
fildl
sub
add
sub
add
les
xorl
add
pop
cmp
add
lock
jl
outsb
jl
movsl
fnstenv
pop
sub
cmp
or
xchg
dec
xchg
push
lea
insl
pop
clc
push
dec
or
pushf
xchg
stos
jo
pusha
pusha
jae
cmp
push
jg
mov
inc
inc
jne
jmp
mov
stos
mov
mov
sub
push
mov
movlps
insb
movsb
mov
movsb
outsb
xchg
clc
fcoms
mov
push
jbe
enter
sub
repz
xchg
dec
adc
inc
cmpsl
stc
mov
fistps
sbb
sbb
hlt
jns
jmp
mov
leave
mov
js
fdivrl
inc
popf
pop
out
mov
push
test
enter
ljmp
mov
xchg
pop
sub
loop
shrb
and
or
add
je
ret
push
adc
das
xchg
push
fisubrl
aam
xor
ss
pushf
leave
mov
push
repnz
mov
xchg
sub
inc
jl
ja
xlat
std
mov
in
sub
sbb
push
mov
fcomps
arpl
aad
mov
lcall
jp
iret
rcrb
jl
jmp
in
rorb
hlt
in
cmpsl
shrl
push
icebp
test
mov
mov
loope
fldt
add
inc
jns
or
or
sub
xchg
stos
shll
sti
imul
jg
movl
xchg
push
orl
jb
outsb
cmovne
xor
cmp
and
and
or
rorl
sbb
sub
inc
dec
ret
mov
negl
ret
mov
dec
pop
add
sbb
xchg
test
jb
test
pop
cmc
cmp
push
cmp
dec
test
sbb
xchg
and
pop
test
pop
mov
push
sub
dec
add
mov
cmp
out
iret
jg
cmp
xor
xchg
sbb
xchg
cmpsb
lcall
and
das
mov
xchg
cmc
push
adc
add
mov
rorl
mov
mov
xor
cmp
test
or
adc
loopnew
dec
cmc
leave
xor
xor
pushl
mov
push
and
mov
mov
pushf
jge
cmp
add
ljmp
dec
aas
outsb
adc
outsb
sti
leave
add
sbb
les
cmpl
js
gs
mov
mov
cmpsl
push
xchg
std
lcall
addb
test
loope
ja
inc
cmp
mov
pushf
pop
into
lds
mov
cmp
pop
xor
xchg
sub
dec
add
insb
or
fwait
cmp
outsb
sub
dec
pop
push
pop
mov
ret
dec
and
imul
rclb
sahf
leave
sbb
int3
lea
cmp
movsb
outsb
xchg
aaa
push
lcall
xlat
orb
iret
pop
sbb
jmp
or
mov
sub
xor
push
div
inc
pop
icebp
data16
cli
shrb
clc
test
loop
jne
cmp
add
push
clc
lret
mov
pushl
pop
jne
xorl
les
xchg
hlt
jg
dec
mov
xlat
cmp
loop
andb
adc
test
daa
mov
push
nop
xor
sub
das
lret
xchg
or
push
sbb
int
adc
mov
stc
mov
sub
sbb
test
adcb
out
mov
xor
xor
fstl
push
cmp
cmc
or
fsub
insb
imul
cltd
orl
mov
mov
and
lret
sbbb
sbbb
jnp
pop
mov
mov
xchg
addr16
sbb
mov
test
jl
orl
mov
mov
addr16
xor
jno
addb
cmp
pusha
stos
bound
mov
sub
ds
add
or
pop
xchg
js
dec
xor
xor
cmp
cmp
insl
xorb
xlat
in
je
adc
jecxz
stos
mov
and
mov
addr16
call
or
or
inc
roll
adc
mov
incb
test
xchg
dec
pop
cs
loopne
mov
aam
and
ret
pusha
ja
jmp
cld
in
mov
roll
out
sbb
add
push
stos
mov
lea
mov
push
pop
dec
dec
pusha
cltd
mov
xchg
mov
jecxz
jmp
test
and
mov
sbb
mov
mov
fcmove
ret
ret
bound
xchg
cmpsb
lret
cmp
push
imul
outsl
aam
mov
repnz
mov
aad
and
pmulhw
mov
enter
mov
pop
xor
lea
sbb
add
mov
mov
rclb
inc
fisubs
mov
mov
jl
gs
add
mov
mov
xchg
sarl
roll
stc
mov
jle
pop
or
jnp
movsl
mov
jae
xor
inc
inc
adc
sub
rcr
dec
pop
add
movsl
mul
push
mov
inc
scas
out
mov
popf
repz
mov
icebp
or
mov
in
fcom
call
xchg
lahf
popf
sbb
stc
ss
pop
je
xor
xchg
dec
and
mov
test
sub
pushaw
pop
nop
cmp
stos
iret
dec
clc
lcall
sub
xor
out
daa
sahf
iret
push
js
mov
rcl
mov
jo
cmp
out
call
cmp
jp
jae
sti
loopne
and
push
lret
test
push
out
aas
sub
jl
mov
lods
cwtl
pop
jbe
mov
pop
fisttpll
clc
xchg
stos
popf
stos
inc
mov
dec
ret
add
xchg
push
scas
push
out
pop
jecxz
pop
iret
fnstcw
mov
cmp
aam
int3
jne
es
movsl
outsl
in
repnz
mov
out
stos
jmp
sbb
pop
xor
mov
cmpsl
int
add
cmp
test
cmp
or
mov
mov
inc
mov
ds
pop
outsl
pop
jb
or
rcrl
sbb
iret
xor
add
fildll
mov
insb
pop
xchg
mov
add
orl
jecxz
popf
hlt
dec
mov
mov
loopne
xchg
test
xchg
loop
call
dec
pop
xor
jbe
mov
mov
sbb
outsb
test
or
push
jno
ja
scas
pop
cmpsl
adc
icebp
inc
jp
call
test
push
cmc
sbb
mov
sti
fstps
js
push
add
sbb
add
gs
jne
cmpsl
test
lods
out
mov
std
sbb
xorl
cs
inc
addr16
pusha
fcmovb
hlt
in
jle
push
jecxz
loopne
xor
js
mov
mull
jmp
push
and
sbb
or
cmpsl
or
mov
push
enter
and
adc
shlb
or
cmpsb
dec
xchg
ret
cmp
inc
sub
jns
jnp
xchg
aas
xor
sub
xchg
sub
mov
pop
inc
sub
mov
cmp
xor
cmp
mov
sub
sbb
stos
scas
sarb
lret
xchg
lret
mov
or
xchg
jmp
jne
pop
mov
mov
ja
insb
add
hlt
jo
js
inc
adc
out
daa
xchg
mov
jp
push
test
mov
mov
push
scas
and
add
or
xlat
cmp
jo
in
and
push
jle
insl
ret
push
and
cli
push
xchg
xchg
push
cmp
es
out
lret
cmp
pop
pop
xorb
pusha
mov
cmpl
adc
cmp
loopne
sarl
idiv
int3
push
enter
mov
mov
xchg
push
jl
push
fldt
dec
xor
enter
insb
aad
push
xchg
and
mov
mov
loopne
lahf
sbb
fld
lods
insb
jns
leave
inc
pop
dec
xor
or
sbb
add
lret
shll
xor
mov
repz
insl
std
stos
jbe
mov
int3
imul
lret
stos
add
aam
ss
push
xchg
andb
in
jb
mov
jg
loope
mov
mov
cmp
jbe
mov
fsubrs
jae
mov
lods
dec
and
sub
in
jne
pusha
pop
test
push
scas
dec
pop
fldcw
push
pop
mov
xorb
test
xor
fwait
mov
outsl
ret
bound
rcr
test
and
adc
andb
dec
inc
pop
jecxz
xor
lret
inc
imul
call
into
je
push
fnstsw
in
in
test
stc
mov
dec
push
cmp
loopne
bound
dec
cmpb
cld
push
jge
add
mov
std
lcall
mov
sbb
jecxz
inc
clc
loope
mov
mov
jl
push
or
fsub
add
inc
xor
xor
dec
pop
daa
lret
pop
push
clc
pop
and
sub
sub
sbb
dec
into
dec
sub
sti
fists
sbb
cld
shlb
sti
push
push
push
push
sub
insl
imul
in
jmp
shll
push
push
js
add
xor
add
enter
jns
call
scas
call
xchg
cmpsl
sbb
cld
and
sti
pop
sub
scas
mov
repz
jecxz
mov
addl
stos
mov
hlt
into
push
sub
lea
mov
fidivrs
outsb
push
out
add
cwtl
mov
push
imul
out
jae
add
sbb
imul
in
lds
sbb
cmp
inc
shl
mov
push
addr16
in
xchg
push
repz
es
mov
jl
lcall
mov
inc
push
xchg
mov
or
mov
loop
cmpsl
movsb
push
fiaddl
pop
loope
xchg
jl
aam
subl
mov
addr16
out
push
xor
or
in
jno
mov
or
and
ljmp
js
and
xchg
dec
lea
xchg
mov
hlt
and
stos
repz
sub
adc
mov
lods
pusha
push
inc
test
enter
jno
push
add
xor
sub
es
mov
imul
fildl
imul
insb
imul
push
xchg
xchg
lahf
mov
push
mov
sbb
fsts
dec
aam
add
stos
push
or
out
mov
mov
stos
sbb
push
xchg
or
xor
lret
push
clc
lahf
pushf
add
xor
imul
pop
mov
cli
jmp
push
pop
xchg
nop
scas
dec
test
loope
repz
mov
out
lcall
data16
dec
movsl
dec
imul
cmp
sbb
mov
sub
push
test
sub
mov
mov
loopne
imul
shr
ret
inc
add
xchg
mov
loop
lcall
or
pop
mov
push
arpl
pop
sub
push
sar
clc
mov
mov
mov
test
xor
and
lods
jg
lahf
xor
inc
iret
add
add
adc
aas
dec
and
das
mov
push
fwait
out
add
and
inc
push
xor
into
imul
mov
out
pop
ljmp
xor
sbb
pop
clc
dec
movsl
add
sub
jge
xchg
add
decl
xchg
rclb
cs
inc
fdivrp
inc
sub
ss
jnp
cmpb
call
cmp
aaa
sbb
cmp
sbb
aam
mov
fwait
stc
mov
pop
dec
xlat
fcomps
lock
fnstenv
xchg
out
xchg
jl
mov
pop
add
out
jnp
je
popf
out
repnz
leave
stos
rorb
or
sbb
push
fists
imul
push
das
dec
sti
jo
scas
pop
outsl
nop
push
add
xor
add
adc
cmc
xchg
pop
outsb
sub
pop
sbb
push
push
mov
arpl
inc
insl
jae
and
ss
and
cli
mov
stc
push
dec
lock
sti
mov
movl
call
rorb
mov
mov
dec
sbb
sahf
sti
mov
dec
addr16
add
dec
addl
xor
add
outsl
aam
dec
das
xchg
scas
loope
cmp
lret
and
xor
pop
xchg
adc
std
fxch
nop
test
stos
test
repz
pop
adc
pop
add
push
in
pop
sub
cs
in
addr16
jnp
ss
pop
or
aad
pop
and
push
int
inc
cmp
sub
push
sbb
jl
mov
sbb
sbb
ds
je
in
sbb
pop
dec
xchg
in
loope
lea
push
lahf
or
sbb
xchg
jnp
jb
xchg
xchg
stos
jle
popa
jno
frstor
or
dec
inc
lcall
outsl
sahf
inc
push
inc
loop
out
mov
mov
js
sbb
mov
xlat
mov
repz
in
and
sbb
add
mov
jmp
xor
imul
incl
bnd
sarb
xor
scas
icebp
sbb
imul
daa
mov
js
and
add
shrl
shrb
rorl
fxch
rcll
shl
sbb
enter
jecxz
aad
fs
lret
enter
mov
jne,pn
ljmp
ja
sbb
mov
adc
sahf
dec
imul
les
lds
cmp
or
jo
lfs
sub
push
test
test
es
insb
rolb
add
or
cmp
icebp
lods
or
aaa
xchg
insb
pop
cwtl
jle
cmp
subb
lock
aaa
or
std
out
push
fldenv
ret
cmp
or
lds
movsl
ljmp
mov
jl
adc
mov
sub
sbb
sub
pop
xor
xchg
xor
xchg
mov
or
add
or
push
stos
popf
cmp
clc
ljmp
stos
add
add
cltd
iret
jb
sbb
adc
test
imul
pop
or
leave
add
mov
lcall
shlb
xchg
mov
test
lods
push
repz
sub
dec
lret
xor
sub
dec
out
inc
mov
and
push
sbb
add
in
or
std
lahf
jle
mov
mov
mov
lock
add
popf
loope
ljmp
dec
jae
sbb
cmc
rcr
dec
cmp
push
jne
int3
bound
mov
aad
notb
add
lods
gs
lahf
dec
xor
mov
pop
mov
xchg
call
push
mov
mov
je
mov
pop
test
pop
adc
andb
xchg
pop
or
fisubrl
lret
ds
push
and
ljmp
xchg
mov
dec
xchg
insb
lret
and
mov
xlat
adc
aad
rcr
pop
mov
loope
pop
outsl
outsl
out
push
fistps
jecxz
sahf
in
or
mov
shlb
pop
mov
aaa
inc
cld
jns
xor
movb
in
jle
mov
and
inc
stos
jle
mov
and
push
aaa
sahf
cmpsb
shrl
push
mul
gs
mov
js
pop
pusha
sub
loopne
push
mov
cmc
bound
pop
cwtl
add
adc
mov
mov
xlat
push
ds
mov
clc
sbb
add
sarl
lock
mov
movsb
mov
jns
push
ja
push
inc
cld
xor
dec
inc
xchg
mov
jno
dec
outsl
mov
cwtl
pop
adc
sbb
jbe
int
loop
pop
imulb
jb
sub
pop
xchg
jb
or
dec
jecxz
lods
mov
sub
adc
push
sbbl
sub
push
mov
sub
mov
xlat
push
cld
sbb
in
xlat
adcl
add
repz
mov
incl
ret
push
pop
inc
adc
jae
add
imul
out
int3
and
add
sbb
mov
pushf
inc
mov
out
sarl
or
stos
loopne
mov
jmp
dec
setbe
leave
pop
cwtl
enter
mov
arpl
outsb
ljmp
rcr
cmpsl
add
sub
in
jecxz
popa
arpl
in
inc
shlb
cmc
ret
cltd
jno
jle
jge
adc
add
add
sub
jb
cli
mov
call
add
jne
lods
jge
out
fildl
test
data16
iret
ja
std
je
test
or
cmp
iret
and
or
shll
sbb
aaa
sub
loopne
lods
mov
mov
push
leave
push
push
or
sbb
test
ljmp
jl
mov
inc
xchg
loopne
insb
mov
iret
sti
mov
imul
daa
loopne
push
sbb
aaa
test
fs
mov
pop
roll
dec
mov
std
and
or
cmp
imul
mov
iret
dec
lcall
aam
inc
adcb
xchg
clc
push
sbb
aad
push
inc
lds
sub
xor
out
mov
lea
addr16
rcrb
dec
cmpsl
mov
jmp
out
mov
or
lcall
out
add
adc
aam
and
or
cmp
pop
lods
jne
mov
fcompp
add
xor
mov
sub
sbb
cmpsl
addb
jecxz
jnp
mov
je
xchg
popl
mov
clc
lods
into
xchg
mov
es
iret
mov
adc
lahf
inc
xchg
xchg
mov
mov
push
ret
leave
scas
dec
leave
insl
sub
mov
sti
repnz
or
cmpsb
fisubs
aaa
lods
jne
add
cmp
xlat
and
mov
dec
sbb
xor
fidivrl
adc
andb
clc
cmp
ljmp
repnz
je
ret
aas
rolb
fwait
scas
cmp
fistl
xor
jns
popf
add
jo
and
add
push
fs
loopne
mov
fisttpll
out
loope
lods
xor
xor
sbb
mov
sbb
adc
push
push
and
jns
pop
pusha
lds
shrl
lods
mov
cltd
mov
pop
jg
mov
inc
sub
or
lcall
popa
mov
adc
xchg
xchg
ret
jns
xchg
lret
mov
imul
xchg
push
sub
fimuls
xchg
cmpsb
imul
dec
fdivl
orb
aam
pushf
popf
jno
mov
sbb
and
leave
loope
mov
ret
adc
int3
lahf
jle
popa
sbb
jns
ret
std
xor
mov
out
and
xchg
pop
sub
mov
mov
cmp
pop
pop
cmp
es
pop
or
inc
insl
ljmp
int3
dec
scas
cld
dec
xchg
push
stos
push
mov
out
bound
or
pop
jge
shrl
pop
adc
jne
mov
pop
ficoml
xchg
jge
dec
int
dec
fstpl
daa
or
sbb
clc
inc
scas
jl
push
out
das
xchg
icebp
dec
cmp
jo
sahf
mov
test
lret
jns
xchg
imul
adc
enter
fs
xor
adc
hlt
jb
pusha
adc
shlb
add
in
mov
ret
cmp
popa
cwtl
neg
jmp
xlat
xlat
inc
shl
jp
lcall
sub
mov
jle
xor
test
jo
mov
inc
jge
mov
stos
scas
xor
xchg
adc
cmp
mov
xorl
xor
cmp
ljmp
push
arpl
aas
imull
insb
pop
test
xchg
inc
repz
pop
outsl
push
sbb
cmpsl
dec
jmp
rol
mov
jne
or
stc
popa
pop
popf
sahf
push
jnp
lock
imul
aad
aaa
cmpsb
dec
sub
cld
mov
aam
push
add
neg
dec
push
push
or
movsl
aaa
mov
mov
pushf
jmp
rol
dec
mov
adc
enter
sbb
shl
and
aam
outsb
mov
pop
insb
out
mov
clc
mov
cmpsb
jne
outsb
dec
add
jno
add
adc
outsb
adc
add
das
sub
jb
scas
hlt
mov
inc
ret
xchg
ret
inc
int3
add
out
cmp
loop
outsb
mov
dec
rcrl
sbbb
dec
jbe
aad
mov
rol
imulb
inc
out
lea
jno
sub
push
jmp
repz
mov
pop
inc
outsl
sbbb
inc
mov
cmp
lret
jb
ja
das
dec
test
mov
xchg
jmp
mov
jb
lock
flds
fstpl
sbb
pop
sub
imul
lret
sbb
cmp
lods
in
lcall
mov
test
pop
mov
stos
mov
pop
add
mov
aaa
cmp
aas
out
pop
fdivl
negb
cmpsb
daa
lds
dec
cmp
xchg
rorb
xor
mov
cmc
cmp
jnp
jb
insb
popf
sub
popf
fisttpll
notb
clc
dec
push
loope
rolb
mov
pop
push
push
jmp
pop
adc
in
xchg
mov
aad
dec
in
pop
xchg
fisubrl
dec
lcall
sub
lahf
in
sub
jmp
mov
xor
nop
mov
push
ret
push
mov
xor
adc
das
in
add
insb
or
shrl
movsb
xchg
lahf
cmp
mov
xor
pop
lahf
ret
jae
lcall
ljmp
in
inc
push
jle
cmp
fadd
add
push
lahf
fdivl
movsl
xchg
movsl
out
lret
push
fmull
jp
sub
arpl
dec
push
mov
test
out
cmpl
mov
pop
fptan
xor
lret
xchg
call
cmc
jmp
push
push
sti
sbb
and
fwait
cs
mov
push
add
pop
pop
inc
mov
or
icebp
sbb
cmp
mov
sbb
fcmovnbe
ljmp
cld
fucom
dec
sbb
xor
push
xchg
sub
das
jle
xchg
je
add
push
mov
xchg
jmp
push
dec
push
call
dec
insb
add
push
dec
int
sbb
out
xchg
mov
jne
mov
outsl
leave
ret
cmp
stc
pop
arpl
cmp
shll
dec
inc
call
xchg
cmp
loop
jl
sub
dec
pop
jno
rolb
sub
lret
out
xor
bound
imul
jb
imull
inc
movl
xor
adc
jge
xchg
fsubrl
popa
jle
clc
or
xor
out
sahf
sub
jb
imul
adc
add
add
in
cs
sbb
and
pop
dec
out
outsl
sub
push
mov
test
jmp
mov
mov
jne
push
sub
push
jmp
insb
iret
cltd
fcompl
mov
mov
add
push
jb
aaa
pop
mov
stos
and
insb
dec
call
jb
mov
pop
xchg
shll
movsb
clc
xchg
loope
js
aam
jnp
test
xor
inc
inc
out
or
and
push
rol
pushf
dec
fldcw
rorl
jl
fs
mov
sbb
test
cmp
pop
jp
mov
pop
dec
lods
xor
sahf
cwtl
mov
das
negl
sbb
ret
jns
xor
insl
loopne
ds
fildll
out
pop
adc
xor
xchg
xor
or
pop
leave
xchg
adc
pop
sub
shlb
mov
push
imul
fiadds
aam
gs
lea
xor
mov
stos
std
pushf
cmpsl
fildll
andl
jmp
loopne
shrb
sarb
cld
imul
pop
inc
inc
jmp
adc
mov
xchg
fadds
pop
dec
out
cmpsl
fldl
add
sbb
pushf
inc
sub
sub
mov
mov
inc
pop
inc
bound
loop
push
pop
pop
or
adc
sub
movsb
and
call
jo
mov
cmp
test
mov
ja
inc
testl
add
insb
xlat
mov
jae
mov
icebp
jl
xor
sub
daa
shlb
jne
in
and
mov
icebp
pushf
jae
fwait
outsl
or
cmp
subb
adc
cmpsl
pop
test
loope
mov
test
adc
or
divl
loop
arpl
cmp
cltd
dec
jle
pop
test
rcrl
inc
in
cmpsb
sahf
dec
jmp
ret
mov
pusha
sbb
push
mov
out
mov
fimull
sbb
push
in
adc
jl
xchg
addb
sbb
cmpb
out
dec
xor
jecxz
xchg
sbb
mov
mov
adc
mov
mov
sub
test
fsubr
or
jno
test
sub
adcl
das
push
aam
shlb
mov
and
push
fimuls
out
sub
lret
add
inc
aam
in
insl
pop
jb
inc
mov
or
jle
push
jo
add
pop
loope
cltd
push
fcomi
jae
and
cs
mov
dec
xchg
fldl
xchg
xchg
jns
icebp
cltd
inc
or
jp
cmp
mov
adc
bound
movsl
aaa
test
sahf
xchg
fldt
mov
or
insb
push
xor
xlat
orl
mov
aam
add
and
xor
mov
mov
hlt
movsb
or
and
mov
fiaddl
xor
inc
and
test
sub
lret
add
les
pop
test
aad
stos
mov
dec
int3
add
rclb
rorl
loop
jg
aam
nop
ja
add
mov
jle
cmp
in
push
mov
pop
addr16
mov
or
xchg
ss
cmp
xor
movsl
jp
fisttps
mov
adc
cld
in
das
outsl
mov
rcrl
stos
fstpt
loopne
jo
cmpl
call
stos
in
mov
sub
sub
add
lds
xor
jl
data16
cmp
outsb
push
jl
dec
cltd
sbb
jle
andl
mov
fwait
mov
inc
push
daa
repnz
jge
fwait
push
mov
int3
or
xor
xchg
mov
or
cwtl
cwtl
es
testl
pop
pusha
rcrb
fimull
addr16
ljmp
mov
xchg
mov
sahf
mov
push
mov
sub
js
rcrb
je
mov
sbb
mov
inc
ss
in
ljmp
jno
pop
rcrl
aam
dec
sub
adc
push
mov
adc
call
pop
jg
cmc
xor
insb
arpl
data16
jle
lahf
loopne
cmp
das
pop
mov
pop
outsl
mov
dec
leave
stc
add
xchg
mov
imul
lock
aas
sbb
inc
jmp
lret
push
push
aas
jmp
aaa
stos
add
stos
or
enter
cmpsb
and
mov
outsl
xlat
loope
loopne
push
pop
fsts
add
loopne
bound
fisubrl
repz
cmp
mov
mov
dec
pop
out
and
addr16
pop
push
repz
fisttps
mov
ss
int
mov
out
call
xchg
loopne
std
push
std
push
push
outsl
test
dec
jns
push
inc
pop
mov
clc
aaa
out
in
lods
xchg
lds
xlat
inc
sbb
adc
sar
rclb
les
cmp
lret
add
sbb
cmovae
pop
pushf
jno
fnstsw
pop
xlat
or
iret
xchg
inc
cmp
xor
xchg
cmp
mov
shrl
gs
xchg
push
pop
rcl
das
or
jbe
mov
jno
pop
fldt
push
repnz
lock
popa
or
sub
xor
loop
lcall
imul
stos
adc
ds
dec
ljmp
mov
mov
cs
xchg
jmp
ficomps
int
inc
adc
ret
sub
fisttpll
adc
in
jg
ret
cmp
pcmpeqw
push
lahf
mov
xchg
popa
out
push
test
push
mov
in
mov
mov
lock
or
mov
cltd
cmpsl
lcall
notb
pop
fistpll
scas
fs
ss
push
or
lods
pusha
jne
cmp
cmpsb
add
inc
xchg
cmp
roll
mov
jecxz
pusha
frstor
xchg
sti
test
pop
lods
icebp
xlat
dec
pop
inc
cmp
in
sti
jne
jo
shll
ja
dec
xor
lds
pusha
mov
mov
inc
mov
dec
rclb
pop
jo
outsb
pop
sbb
xlat
mull
jle
inc
lret
dec
testl
pop
xchg
fdivrs
loop
mov
xor
test
aas
cwtl
pop
int3
xchg
inc
ljmp
mov
shll
adc
ds
ja
jmp
pop
xchg
arpl
pop
das
and
dec
popa
jp
leave
leave
jle
test
xorb
stc
lcall
dec
xchg
insb
ljmp
mov
jb
int3
adc
push
popf
dec
xchg
scas
dec
ffree
jge,pn
jecxz
hlt
xchg
les
mov
das
ret
inc
fwait
pop
mov
mov
fs
or
push
push
pop
rol
daa
andnps
cmpsl
std
jnp,pt
sti
inc
inc
mov
cld
push
flds
ret
rorb
or
push
les
in
cmp
andb
pop
adc
rcr
aas
ss
push
mov
addr16
mov
push
mov
and
push
push
mov
out
daa
bound
jae
mov
pop
scas
pop
mov
clc
call
and
in
ss
ror
xlat
cmp
sub
scas
xor
xor
mov
mov
dec
cmp
sbb
add
mov
pop
push
rcrb
test
inc
push
test
lret
sarl
sbb
sbb
in
sub
lahf
pushf
xchg
aad
mov
ret
and
lock
or
sub
out
pop
gs
stc
dec
inc
xchg
in
scas
cs
out
add
nop
add
inc
out
xor
cmp
jmp
fbstp
xchg
cwtl
daa
cmp
iret
ds
shlb
add
rcl
loop
mov
inc
jmp
pop
cmp
or
test
xlat
ss
sub
or
sti
inc
and
popa
xchg
les
push
add
data16
jecxz
sarb
jp
mov
mov
mov
addl
sub
imul
in
mov
jg
cmp
xor
and
mov
sub
addb
in
arpl
aas
lods
mov
les
pusha
push
mov
imul
popf
fdivl
jno
xor
and
popa
rorb
add
mov
imul
leave
pop
call
jge
gs
cld
xchg
xlat
xor
hlt
out
ljmp
jl
clc
mov
es
movsl
aam
aaa
pop
iret
insb
inc
push
in
adc
lcall
mov
adc
inc
gs
imul
inc
lea
xor
js
jp
adc
stos
dec
dec
mov
fbstp
mov
jbe
sbb
inc
outsl
pop
jl
jbe
scas
pop
xor
cld
mov
hlt
call
xor
mov
xor
push
or
jle
sbb
aas
jne
jmp
sub
mov
mov
sbb
adc
adc
or
xor
xchg
das
push
out
popa
lds
push
sbb
push
jne
jno
dec
push
test
mov
icebp
aad
pop
adc
pop
sbb
mov
movsb
out
das
xor
mov
jnp
sub
and
clc
mov
and
arpl
and
xorl
std
pushf
mov
push
add
cmp
lods
mov
lods
xor
jns
push
scas
outsl
add
cmc
jbe
lahf
scas
sbb
dec
sahf
jb
adc
idivb
cmp
or
push
dec
addr16
jp
hlt
pop
mov
mov
repnz
std
cmp
cmp
adc
inc
sub
pop
loop
push
jno
stos
pop
leave
inc
outsb
gs
into
cmp
andb
inc
out
mov
inc
lahf
ja
mov
jne
and
cltd
dec
pop
loopne
inc
xchg
arpl
cltd
scas
pop
stos
imul
fs
fucom
enter
xlat
inc
push
ja
pop
adc
add
mov
dec
ficompl
out
lods
fbld
mov
dec
pop
bswap
cmp
jecxz
push
inc
jge
pop
lret
xchg
ret
bsf
dec
vphaddubd
test
jecxz
or
xchg
mov
mov
or
popa
scas
dec
mov
push
das
sti
stc
in
loope
inc
mov
mov
jle
mov
hlt
push
push
icebp
addb
gs
and
call
adc
sub
cltd
rcll
fists
imul
cli
inc
cmp
shlb
leave
pusha
in
push
js
dec
mov
sbb
insb
inc
mov
movsl
add
push
or
lret
scas
shrl
shrb
adc
int
push
and
mov
fidivs
fchs
dec
ret
xchg
jle
add
imul
dec
or
jnp
mov
cmp
loopne
repnz
push
or
xor
sub
xor
cmp
insb
mov
test
ss
in
adc
test
pop
enter
mov
mov
push
cmpsb
lret
rorb
add
dec
lret
pop
push
mov
mov
leave
aas
call
push
repnz
xchg
fucom
sub
sub
pop
in
dec
or
cltd
xchg
out
pop
pop
movsl
ja
xchg
push
je
outsb
das
sub
add
shlb
leave
call
loopne
sub
lcall
mov
data16
xchg
mov
xorb
inc
xor
or
pop
pop
mov
or
stos
lock
shl
pop
out
mov
daa
adc
in
repz
js
jg
add
test
xchg
jl
add
xor
or
push
insb
adc
andl
gs
mov
dec
sub
jge
push
add
es
dec
push
pop
pop
sub
xorl
jge
pop
or
insl
fdivl
shlb
ret
sub
adc
dec
pop
mov
cmp
addr16
inc
shr
loope
in
sub
lgs
stc
pop
mov
xchg
mov
and
testl
or
xchg
fs
dec
int
jge
xchg
sub
xchg
in
out
inc
cs
pop
xchg
add
scas
nop
rcr
pop
xchg
sub
pop
filds
shrb
mov
test
sarb
pop
push
fldln2
in
lahf
addr16
je
jmp
adc
sarl
jb
or
jno
sub
xchg
cli
push
aaa
xchg
dec
mov
push
xor
and
and
cmp
lock
lock
out
pop
daa
mov
sarb
mov
cmpb
cmp
outsl
movsl
out
xchg
add
mov
out
das
and
mov
sbbl
popf
sub
dec
enter
ret
aam
das
rolb
jnp
push
mov
nop
data16
sarl
pop
dec
not
and
inc
jecxz
or
mov
je
and
lret
mov
xor
loop
aaa
cmp
add
imul
push
sub
xor
js
or
pushf
and
lock
push
lds
mov
movsb
cmp
pusha
adc
out
fbld
xchg
jno
cmp
inc
add
add
and
jecxz
inc
jl
jmp
add
mov
sbb
pop
cld
add
add
rcrl
push
or
test
pop
pop
inc
ss
rolb
cmp
mov
popa
ja
or
inc
imul
insb
nop
inc
lea
lret
dec
sahf
adc
fwait
mov
or
push
je
stc
sbb
mov
push
insl
jno
fwait
aam
or
add
mov
dec
adc
jae
sbb
lods
xor
push
sahf
stos
add
jns
push
nop
int
jg
dec
dec
cmp
fldenv
loope
inc
aad
add
cmp
pusha
xchg
fsubrp
mov
es
adc
pop
jp
fs
popf
add
sbb
test
scas
nop
mov
mov
adc
loope
jno
js
in
test
cmp
mov
xchg
pop
popf
in
scas
mov
inc
mov
push
mov
stc
fisubrl
aas
xchg
jb
cwtl
cld
hlt
mov
adcb
and
sbb
test
pop
jp
push
adc
pusha
loopne
rorl
int
sbb
andb
ret
orl
adc
dec
push
mov
inc
jbe
jb
mov
pop
lcall
in
jbe
sti
repz
pop
scas
or
push
out
jmp
dec
mov
loop
push
ret
pop
out
jo
scas
mulb
std
scas
inc
pop
dec
mov
add
out
and
adc
sbbl
mov
dec
scas
mov
insl
fucomi
test
test
cmp
dec
fimuls
mov
cmp
stos
ret
pushf
sbb
dec
adc
cmp
cmpsl
mov
or
pop
add
lcall
jmp
insl
push
in
cmpsb
push
mov
adc
popf
repnz
sbb
or
loope
sbb
test
lock
pop
xchg
jb
sbb
pop
cltd
scas
xchg
adc
jl
cwtl
pop
pop
adc
cli
mov
andps
add
cli
xchg
repz
bound
lds
ficomps
fwait
pop
push
mov
push
scas
cld
add
jmp
rcrb
pop
jno
loop
repz
enter
aad
scas
outsb
push
and
mov
and
add
or
pop
stos
inc
test
jle
fsubs
ficoml
pop
jl
mov
xchg
push
roll
mov
jo
xchg
fldl
test
or
fmuls
ss
cld
dec
inc
dec
xchg
out
int
imul
imul
aas
cmp
aam
jno
movsl
mov
xor
in
leave
cmp
pop
stos
inc
mov
out
sbb
jo
in
pushf
cmp
out
mov
in
pop
add
dec
sbb
mov
and
cmp
bound
stc
push
das
je
mov
inc
and
mov
lcall
inc
and
mov
mov
popf
dec
ja,pn
jns
or
out
je
push
ret
shufps
adc
aaa
aas
rcl
adc
pop
addl
icebp
fisttpll
jno
nop
mov
pop
and
jnp
xor
adc
icebp
scas
lds
push
hlt
enter
cmpsl
inc
push
sbb
mov
fpatan
dec
adc
jge
ds
adc
mov
icebp
dec
jbe
lret
mov
mov
or
jle,pt
int
cmp
lds
jno
sbb
fldt
ficoml
mov
adc
cbtw
jg
xlat
enter
xor
mov
fnstcw
push
das
adc
in
mov
inc
cltd
fcomps
inc
cmp
lcall
push
xor
and
imul
push
and
pop
inc
lcall
push
mov
sub
loope
xchg
sbb
fnstsw
pop
jbe
mov
mov
stos
pop
push
imull
imul
cs
jg
hlt
dec
jbe
inc
lods
pop
icebp
shl
ljmp
push
add
fmull
add
loope
push
mov
mov
ret
jae
scas
lcall
mov
imul
jmp
push
pop
pop
test
movsl
andl
std
and
inc
and
push
dec
dec
or
movsb
aad
adc
pop
or
xor
xor
adc
pop
in
jle
mov
sub
outsb
dec
jg
out
sub
jno
dec
xchg
icebp
cmp
and
jl
les
inc
cmp
xchg
xor
sub
popa
cmc
jge
mov
jo
push
push
out
in
fidivrs
mov
inc
inc
call
adc
fcmovnu
or
pop
cs
stos
bound
inc
out
xchg
je
xchg
pop
mov
mov
scas
dec
jg
xorb
push
aad
test
add
cmp
mov
jg
mov
cmpsb
sti
adc
stc
push
leave
fadd
xchg
jl
mov
push
inc
js
cld
je
add
shlb
fs
xchg
add
mov
mov
outsb
or
pushl
test
test
xchg
inc
test
and
mov
rcll
xchg
arpl
pop
inc
push
xchg
jns
mov
aaa
sub
sbb
idiv
jo
inc
imul
xor
push
in
mov
aas
scas
inc
mov
test
sub
cltd
addr16
adc
mov
int
out
aad
icebp
int
push
lods
test
lods
outsb
fst
aad
jb
lock
or
sbb
adc
sbb
ljmp
xchg
mov
jge
sub
sbb
pop
jle
int3
jne
mov
pop
cltd
sbb
and
xor
xchg
pop
sbb
cmpsl
das
xor
ficoml
xor
pop
push
push
push
imul
pusha
faddl
repnz
push
adc
pop
subb
sbb
inc
xor
sbb
mov
orb
movsb
xor
lcall
jge
das
add
sub
push
bound
jmp
xchg
sar
les
cmp
dec
push
pop
lret
mov
add
pop
sarl
inc
sbb
and
int
xchg
mov
ss
cmp
pop
mov
mov
je
mov
mov
mov
and
or
imul
add
addb
popf
add
cmp
adc
sahf
test
sbb
cwtl
ret
cld
xchg
daa
add
adc
dec
lds
fs
push
pop
push
leave
in
ljmp
mov
xlat
in
std
inc
mov
dec
sti
nop
negb
jle
and
stos
xlat
popa
xchg
movsb
mov
push
test
lock
movsb
shrl
or
pop
imul
popa
xchg
pop
xchg
or
jae
ss
loop
filds
mov
rcrb
sbb
outsb
bnd
lret
stos
scas
xchg
lds
dec
mov
mov
xchg
stc
lahf
rclb
jge
push
mov
add
test
aas
stos
movsb
xchg
fsubrl
repz
xchg
push
mov
mov
mov
jo
jo
in
leave
sbb
push
xchg
scas
pop
popf
and
imul
fdivs
mov
in
sbb
jp
cmpsb
mov
inc
pop
pop
lods
or
mov
sub
out
divl
mov
dec
or
dec
xchg
es
and
nop
jge
lea
movsl
xchg
xchg
icebp
stos
arpl
pop
dec
ljmp
cli
stos
and
sub
daa
sti
rorb
subb
or
inc
in
mov
mov
ljmp
mov
pop
mov
jno
lret
push
pushf
popa
mov
popa
je
leave
das
mov
push
in
je
dec
push
cld
xor
lods
cmp
in
pop
add
add
dec
mov
xor
jge
test
insb
in
jmp
dec
jnp
xchg
add
shr
test
outsl
aam
lods
lahf
ficoml
push
add
cld
test
out
push
cmp
jo
and
imul
add
jecxz
out
hlt
and
faddl
repnz
pop
xor
or
fcoml
pop
hlt
dec
cli
cmpl
cmp
mov
dec
xor
int
popa
sbb
mov
loope
call
out
bound
pop
xchg
test
sub
mov
cmpsl
imul
je
imulb
add
inc
aad
mov
out
sub
dec
add
and
mov
mov
inc
insb
and
aad
xor
sbb
in
dec
push
and
mov
mov
jbe
out
mov
fs
xchg
pop
outsl
mov
icebp
mov
xlat
ret
mov
int3
daa
pop
add
and
lods
testl
mov
xlat
scas
or
pushf
jg
lods
xor
test
and
xchg
mov
cmp
addl
je
imull
pop
pop
popf
mov
xchg
push
mov
clc
push
movsl
inc
mov
mov
push
insl
aas
sbb
das
jnp
lock
dec
and
mov
xchg
push
adc
gs
and
int
and
push
pop
mov
rorb
mov
mov
jae
cwtl
js
lods
dec
pcmpgtb
xchg
pop
fcomi
icebp
mov
pop
fwait
dec
outsl
int3
aas
dec
mov
fmull
ss
dec
dec
outsb
push
jae
cltd
orb
cmpsb
and
movswl
pop
xor
enter
je
mov
lds
stos
orl
push
ss
shl
incl
outsl
pop
popf
pop
adc
addb
xchg
push
lcall
in
or
repz
imul
pushf
or
out
mov
fmul
add
xlat
adc
or
int3
ss
outsl
sub
arpl
xor
fcmovne
mov
outsb
fdivrs
xor
cmpl
add
loopne
dec
adcl
xor
mov
xor
fcoml
cmp
testb
push
bound
cmc
xchg
das
dec
jle
mov
dec
cmpsb
addl
xchg
add
push
sti
cwtl
and
loope
gs
paddw
sti
push
adc
cmp
xchg
aaa
xor
mov
mov
imul
mov
mov
dec
xor
mov
mov
sub
outsl
outsb
lcallw
loope
xchg
mov
dec
mov
lods
test
fwait
xor
pushf
push
push
aas
push
cmpsb
add
rcrb
or
inc
xchg
xor
mov
mov
cmp
adc
sbb
aas
cmp
orb
sahf
popf
jmp
push
mov
jmp
mov
dec
out
dec
inc
rcr
in
xchg
push
ret
enter
mov
push
leave
add
addr16
movsb
test
lea
xchg
add
lock
dec
lods
adc
sbb
ret
mov
inc
push
fadds
add
negb
pusha
mov
fsubs
js
jo
aad
cmp
lods
fwait
addr16
popa
add
mov
and
mov
imul
mov
cmpsl
mov
pop
pop
insl
jb
cmpsb
pop
sub
dec
roll
jbe
push
repz
jns
xlat
sahf
xchg
xchg
ret
in
clc
out
mov
push
dec
xlat
fists
adc
and
dec
add
bnd
xchg
aam
push
loope
push
push
out
ja
out
inc
leave
out
divl
mov
in
aam
xor
xchg
jp
lods
lds
jo
pop
sahf
into
and
cmp
dec
xor
add
push
test
sub
imul
out
aad
push
mov
push
hlt
xchg
popf
sti
pop
xchg
into
lods
subl
jmp
lds
fdivrl
jne
xchg
xchg
call
pushf
insl
sbb
mov
cmpsb
aam
push
test
les
int3
loope
mov
aas
sub
std
popa
andb
mov
push
filds
mov
jo
push
adc
mov
cmp
inc
xchg
call
shl
mov
sbb
sbb
pushf
inc
sti
sbb
pop
sahf
dec
sub
mov
in
les
lret
pop
aam
pop
pop
adc
aaa
je
push
jg
xchg
mov
inc
jb
out
push
dec
push
sti
subb
xchg
out
xlat
jl
dec
stc
divl
xchg
stc
sbb
rclb
stc
das
loopne
xchg
repnz
ret
out
sahf
mov
insl
xchg
popf
mov
mov
flds
mov
pop
ret
sub
es
stos
jns
jge
sub
popf
ret
jg
ja
mov
dec
inc
bound
loope
inc
xchg
jge
inc
pop
out
scas
inc
cmp
pop
addr16
cltd
mov
and
cmp
xor
dec
and
cmp
iret
add
inc
mov
jnp
jl
sahf
add
cmp
push
into
mov
out
rorl
cmc
lahf
faddl
xchg
aaa
lahf
sbb
mov
dec
jns
push
jbe
mov
xchg
mov
cmp
mov
cs
push
push
aas
xchg
ds
call
test
ret
cs
fidivrl
fcomps
dec
sbb
pop
daa
sbb
xchg
push
gs
adc
js
cld
push
sahf
vcvtss2sd
nop
out
jne
fists
repz
push
ret
in
push
mov
orb
add
jecxz
call
inc
inc
dec
xchg
fdivrp
imul
insl
ljmp
call
cmp
adc
or
repz
cmc
adc
aaa
cmpsb
sbb
jns
xchg
daa
xlat
stc
jne
mov
popf
in
xor
mov
leave
das
push
outsl
push
scas
pop
data16
pop
cmp
sub
or
sti
xchg
add
inc
sbb
adc
cld
xchg
mov
jle
lods
pop
push
and
sbb
pop
or
add
or
loopne
sbbb
leave
or
fmull
push
sub
cli
mulb
and
sarl
dec
sub
lret
mov
in
add
rdtsc
mov
sub
xchg
mov
inc
rcrl
adc
bound
nop
cmpsb
inc
sub
fnstsw
out
popa
imul
out
mov
cmp
dec
pop
pop
ror
addb
cwtl
pop
pop
icebp
idiv
cwtl
push
xor
xchg
es
js
bound
adc
cmpsb
jmp
jl
sbb
or
xchg
leave
js
fcmovne
sahf
into
push
push
cmp
inc
lds
and
dec
jnp
movsb
test
pop
leave
lock
sub
adc
jno
sbb
jl
in
js
mov
or
fsub
jg
inc
movsl
add
pop
xlat
stos
dec
mov
pushf
std
mov
ret
js
pop
pop
or
imul
inc
fcompl
push
and
cmpsb
cmp
div
xor
mov
or
sbb
subl
mov
outsb
inc
pushf
sbb
pop
mov
inc
mov
stos
mov
stc
mov
pop
das
test
pushf
pop
xor
pop
sarb
mov
xor
movaps
jp
push
pop
inc
pop
ja
aaa
dec
inc
sar
fwait
notb
or
repz
and
inc
outsb
lea
lea
enter
test
mov
inc
pop
jb
test
add
ja
mov
jge
pusha
xor
outsb
lea
test
sub
incl
out
cmc
xchg
leave
jb
mov
jb
pcmpgtb
aam
lea
cli
sti
and
mov
loopne
fiaddl
xor
pusha
and
add
loope
mov
and
sbb
andnps
movsb
adcl
shrl
ja
adc
cmpsl
add
or
sarl
shlb
ja
pop
inc
mov
dec
mov
push
pop
stos
stos
outsl
xchg
add
divb
loope
sub
jbe
jmp
push
mov
mov
lret
inc
cwtl
aaa
sahf
rolb
popa
pop
push
dec
add
aas
sbb
pop
out
cltd
pop
and
fwait
test
push
ss
and
rol
arpl
xlat
jns
ret
stos
gs
pop
cmpsb
or
xor
add
mov
pop
daa
icebp
mov
xchg
aas
mov
and
aas
int
cmp
in
outsl
in
stos
inc
inc
arpl
xchg
push
cmp
mov
push
and
adc
stos
mov
pop
inc
push
mov
push
fildl
dec
lahf
ss
cwtl
mov
pop
inc
std
dec
cmp
iret
nop
popf
stos
dec
stos
ret
mov
xlat
xlat
add
and
int3
mov
push
mov
push
cld
xchg
lock
push
fldl
shlb
ja
mov
cmp
sub
inc
mov
in
dec
stos
ja
pop
xchg
fwait
pushl
add
jno
sbb
xchg
cmp
lahf
mov
add
inc
dec
push
inc
mov
fnsave
xor
mov
cs
notl
dec
rcrb
pop
in
leave
push
dec
scas
xlat
mov
and
insb
mov
nop
fprem
ljmp
in
mov
aam
adc
hlt
and
insl
xchg
movsb
fucomip
dec
adc
inc
pop
add
and
pop
adc
aad
jno
cltd
insb
imul
ja
sbb
mov
dec
int3
mov
xlat
mov
mov
lcall
add
fmull
push
das
enter
fstps
test
mov
bound
hlt
lahf
rcrb
xchg
inc
cs
aam
icebp
fwait
sub
sbb
pop
sbb
out
enter
enter
cli
jns
insl
es
inc
das
mov
pusha
dec
dec
lahf
pop
xchg
push
mov
jo
shll
subl
setp
pop
cmp
aas
pushf
xlat
xchg
push
out
test
shll
sub
inc
js
pop
or
mov
iret
sbb
fst
jmp
or
lds
sbb
ljmp
aas
adc
sbb
push
imul
push
pop
hlt
cmp
in
adc
or
test
xchg
adc
movsl
xor
pushf
mov
fisubl
jo
or
imul
inc
js
lock
jne
aas
dec
cld
int3
pop
cli
xor
outsb
cltd
jns
jecxz
pop
out
pop
repnz
ljmp
fldt
or
jbe
jno
pop
mov
sbb
and
jp
pusha
xchg
inc
mov
movsb
pop
mov
je
outsl
lock
sbb
iret
dec
or
movsl
into
aas
dec
xchg
adc
addr16
mov
pop
xor
ds
les
addr16
inc
mov
insb
fldenv
cmp
sti
imul
jnp
cmpsb
pop
push
adc
jnp
in
dec
lods
stos
add
xor
jne
pusha
test
insl
repz
jb
cmp
jg
pop
lea
ja
inc
cmc
inc
lcall
les
xchg
sub
pop
ret
sbb
inc
xor
mov
pop
loope
add
xlat
pmullw
xor
fcmovbe
addl
mov
cmovo
push
dec
test
vcvtss2si
gs
dec
mov
mov
dec
jecxz
dec
cmpsl
push
add
or
jnp
dec
lods
sbb
jecxz
cld
xchg
scas
cltd
jbe
fsubr
cmp
inc
inc
fldenv
cmp
adc
pushf
adc
mov
in
test
sbbl
add
loop
loopne
not
sbb
adc
movsb
pop
inc
loop
mov
call
sub
out
xor
add
pushf
push
in
cmp
mov
jl
xor
loopne
dec
add
jns
xorb
cmp
and
dec
testb
push
cmp
or
inc
xchg
and
fisttpll
xor
and
popa
aad
xchg
clc
out
shrb
jecxz
push
dec
push
iret
divps
sub
xor
mov
dec
rolb
inc
mov
das
out
jno
fsubs
imul
adc
push
data16
orl
bound
and
and
lahf
lret
add
shll
repz
push
ret
sub
movsb
pop
add
scas
push
sub
lahf
inc
dec
test
mov
arpl
xor
pop
je
out
and
mov
call
push
mov
dec
inc
xchg
cmp
mov
xor
repz
sbb
jne
pusha
outsb
or
sub
aad
fidivl
pmaxub
mov
enter
scas
push
add
rorb
cmp
popa
inc
movsl
mov
xchg
pop
mov
lds
rclb
inc
xchg
jb
sub
in
xorl
xchg
inc
mov
and
jge
and
call
aam
adc
pushf
add
mov
popa
repnz
cltd
sub
lcall
adc
mov
sub
aam
adc
push
vzeroupper
sub
or
sub
dec
pop
mov
frstor
dec
mov
mov
or
dec
mov
xchg
xor
test
inc
fs
dec
loop
call
push
or
inc
sahf
pop
sub
or
push
dec
dec
lret
push
dec
sub
fadds
int
xor
and
leave
sbb
mov
imul
stos
jmp
or
popf
les
mov
xor
inc
loop
and
jnp
pop
dec
aaa
in
fwait
xor
sbb
cmp
jl
out
sarl
mov
das
enter
or
add
xor
mov
inc
xadd
xchg
inc
xor
xor
mov
movsb
xor
ss
inc
aas
xchg
fcomps
movsb
fisubrl
ret
xchg
das
add
les
jecxz
in
clc
aad
cmp
push
adc
push
fdivr
sbb
cmp
in
dec
add
divl
xchg
cmp
xchg
or
sbb
inc
mov
outsb
push
stc
xchg
mov
rorl
loopne
call
or
das
and
imul
mov
mov
jo
cwtl
pop
push
cmc
es
cli
inc
or
gs
roll
sub
cs
repz
fwait
lcall
jae
pop
jnp
popa
aam
and
clc
addr16
add
xlat
push
pop
inc
pop
vsqrtpd
pop
pop
leave
dec
cmp
adc
inc
mov
insl
ds
sub
sub
pop
jp
or
mov
dec
inc
jp
stos
je
test
imul
in
pop
fstpt
cmpsl
and
adc
nop
cmp
les
aas
cwtl
outsb
stos
daa
movsb
add
xor
and
sub
add
aam
imul
mov
movsl
test
aaa
mov
xor
push
mov
jae
adc
dec
fdivr
sbb
loope
cmp
push
ja
scas
pusha
and
in
sub
sub
js
add
dec
xchg
sbb
mov
push
out
gs
nop
cmp
cmpb
adc
lock
push
pushf
je
mov
and
fcmovnbe
aaa
push
or
push
dec
addr16
roll
adc
lds
test
pop
out
xor
mov
inc
jp
and
test
or
adc
cmp
lods
jmp
imul
sub
sti
mov
inc
aad
pop
cwtl
lods
mov
pop
mov
test
dec
xor
insb
cwtl
icebp
xor
inc
xor
mov
nop
mov
inc
pop
stos
jbe
dec
sarb
add
adc
cmp
je
pop
dec
fistl
add
outsl
daa
pop
sub
inc
iret
jp
rorl
push
loopne
push
jns
daa
repnz
and
sub
jb
cs
jno
stc
sti
xor
mov
int
mov
dec
sbb
mov
lcall
outsb
in
jmp
sbb
pop
pop
mov
cmp
mov
daa
mov
fldenv
insl
cmpsb
dec
mov
insb
or
mov
out
clc
lods
movl
repnz
cli
es
test
lock
and
xchg
out
push
frstor
loope
mov
leave
repz
inc
imul
adc
xchg
or
insl
ficoms
fs
test
mov
adc
pop
ss
xchg
or
sbb
aam
pushf
inc
bound
imul
jge
ret
cltd
pop
push
int3
push
imul
mov
xlat
xchg
sub
cmpsb
test
push
dec
xchg
xor
data16
sub
mov
int
fbld
mov
push
shrb
mov
pop
push
divl
mov
adc
adc
pop
testb
insl
pusha
sbb
jbe
xor
movsl
add
repnz
lds
push
jmp
aad
adcb
test
int
test
xchg
movsl
sbb
aam
add
sti
xchg
xor
sbb
mov
and
xchg
out
in
or
gs
movsb
adc
sub
lret
cld
jle
sbb
mov
xchg
ds
stc
mov
xchg
fs
stos
movsb
ljmp
mov
xchg
inc
sbb
pop
in
insl
xchg
dec
nop
or
insb
ljmp
push
jbe
push
xlat
movsl
mov
enter
jmp
js
dec
mov
jbe
mov
fildl
pop
loopne
xchg
xchg
dec
sbb
je
pop
lahf
fsubrs
mov
sarl
cltd
shrb
rorb
ret
jl
int3
xor
call
sbb
out
xlat
sarl
dec
mov
ret
xor
sbb
adc
adc
sar
xorb
enter
sbb
in
xor
sti
mov
xor
or
mov
shlb
xchg
or
xor
mov
out
xlat
out
lods
es
cmp
aaa
pop
pop
hlt
sbbl
add
add
adc
ja
jle
stc
add
and
ss
in
fidivrs
xor
adc
xchg
lahf
popf
out
pop
sbb
mov
ds
push
loopne
roll
inc
ds
out
mov
popa
clc
and
cli
xchg
outsl
scas
and
mov
popf
jp
cmp
xor
adc
repnz
insb
push
cmpsl
jp
sbb
cwtl
movsb
mov
cwtl
jl
fpatan
mov
fstpl
ss
popa
push
cmp
xor
pop
pop
push
sbb
mov
in
sub
push
jnp
iret
cld
and
dec
or
outsb
sub
jge
cs
xchg
mov
or
mov
xchg
cmc
mov
out
mov
les
std
rcrl
mov
sub
cmp
outsl
xchg
test
pop
mov
sar
les
ret
xchg
ror
aam
and
xor
mov
lahf
lods
fcomip
sbb
xor
cmp
fdivl
mov
sti
push
mov
xorb
scas
in
int
hlt
jo
pop
fs
mov
jge
or
sub
ss
ret
xor
mov
sub
xchg
mov
frstor
bound
lahf
pop
ss
xor
sub
push
push
fisttpl
addr16
pop
mov
incb
repnz
dec
jnp
popf
mov
std
lods
out
push
rcll
cs
negb
jo
lods
mov
and
jmp
neg
dec
lcall
mov
pop
dec
dec
sahf
movsl
jmp
jbe
adc
outsl
mov
negb
ficompl
ljmp
idivb
iret
mov
in
cmp
fs
in
lds
mov
dec
pop
into
lret
cltd
ret
aas
cmp
in
int3
xchg
das
cmp
or
jbe
call
jmp
jb
mov
cmp
adc
adc
daa
pop
mov
lret
xor
dec
xchg
negl
dec
test
mov
fnstenv
pop
sbb
mov
popa
testb
in
cmp
bound
push
jl
fdivrs
ja
bound
pop
add
adc
outsb
xor
nop
repnz
push
xchg
push
or
cmp
jl
and
or
ret
popf
out
cmpsl
loope
inc
aam
icebp
pop
mov
in
jae
cmp
int3
cwtl
inc
pop
push
mov
mov
mov
inc
jg
js
mov
loop
js
push
call
test
out
inc
imul
ror
xchg
sbb
out
push
sub
dec
daa
xchg
add
pop
mov
xchg
leave
adc
inc
jae
mov
add
call
and
imull
lret
pop
push
pop
xor
mov
int
movsl
push
jmp
jae
dec
mov
pop
mov
xorb
mov
xor
mov
jmp
subl
dec
bound
cli
outsb
sbb
dec
fsubs
inc
mov
sub
adc
out
mov
insb
xchg
inc
pop
push
cltd
ret
or
inc
xlat
shrl
jno
ss
cld
or
cwtl
push
test
add
adc
lock
in
xchg
and
fstps
sbb
movsb
cmp
mov
lret
xchg
lcall
or
or
out
sub
hlt
emms
in
sub
mov
cmp
mov
clc
bound
jp
and
lea
xor
in
rep
out
mov
add
mov
in
daa
jns
cltd
add
inc
add
add
repnz
sbb
fadds
adc
inc
repnz
sbb
jge
or
fildl
cmpb
mov
call
arpl
pop
inc
mov
test
adc
dec
xor
adc
and
fwait
xor
mov
pushl
dec
stos
sub
dec
and
pop
fucomp
or
mov
sub
inc
loope
ss
leave
inc
pushf
inc
push
rcll
idivb
pop
or
ffree
mov
ds
and
dec
or
icebp
xor
pop
cmpsl
sub
int3
adc
mov
jmp
faddl
out
insl
and
adc
dec
and
or
jb
xor
mov
and
mov
lods
daa
addr16
daa
add
cmp
jnp
into
add
xor
ret
decl
in
mov
test
mov
pop
or
lcall
lods
xor
or
jb
xor
negl
jmp
and
fisttpll
stc
xchg
cmp
and
daa
pop
cwtl
sti
test
movsl
aaa
cmp
rcl
push
dec
stc
dec
std
mov
stos
or
test
mov
fiaddl
loop
sbb
scas
xchg
and
shlb
cmp
sbb
dec
cmp
insl
loope
push
inc
dec
mov
imul
add
sbb
insb
mov
icebp
ljmp
movsb
inc
lret
mov
movsl
and
mov
ret
rcll
sahf
scas
xchg
aas
leave
ja
int3
dec
lahf
outsb
mov
sahf
iret
int3
rcll
call
insw
fistps
mov
ds
jl
xor
sbb
xor
pop
pop
fs
mov
dec
xchg
pop
imul
sub
out
push
mov
mov
jmp
ss
pop
sbb
outsb
inc
jo
xor
mov
rcl
mov
cmp
dec
push
xor
mov
cmp
sub
mov
aad
add
and
aad
mov
jge
cmp
sub
arpl
popf
and
dec
xchg
mov
call
push
mov
jo,pt
mov
stos
incl
jno
pop
mov
push
outsl
mov
sbb
dec
nop
ja
scas
imul
loop
pop
mov
jl
lds
imul
pop
mov
mov
mov
test
add
ror
inc
mov
jns
flds
push
or
fadds
push
leave
xor
out
jae
lahf
fwait
pop
jmp
mov
dec
outsb
out
cli
and
add
or
pop
xchg
out
pusha
aaa
pushf
xchg
inc
es
arpl
sbb
faddl
jo
lods
mov
aaa
dec
jp
aaa
mov
push
push
add
inc
and
xor
addr16
shll
or
inc
and
mov
jns
mov
mov
mov
rcrl
sbb
out
lret
repz
aad
ljmp
and
adc
dec
fildl
sar
mov
push
test
xchg
mov
leave
stos
push
cmpsb
fwait
jmp
in
xor
out
mov
into
push
jmp
scas
xchg
mov
mov
lcall
int3
mov
hlt
xor
loop
pushf
fildl
xchg
lahf
inc
sub
xchg
cmp
xchg
aaa
pop
nop
pop
jle
stc
out
dec
push
sbb
les
xchg
jb
ret
sar
insb
out
aad
mov
in
mov
xor
xor
inc
xlat
rcr
ret
mov
adc
movsl
icebp
cs
data16
add
cmp
movsb
shl
repnz
dec
loopne
dec
les
test
xchg
xchg
es
xor
add
and
movsl
dec
mov
xor
mov
cmp
mov
movb
jg
stos
sti
idiv
jl
sarb
aas
pushf
sbb
adc
sti
lds
das
into
add
and
int3
mov
outsb
xchg
sub
add
ret
fs
repnz
jmp
ss
jno
loope
jnp
out
mov
je
or
push
dec
and
jg
mov
inc
adc
adc
out
jmp
scas
jg
push
mov
outsb
fbld
dec
push
sub
or
mov
adc
rolb
fwait
loopne
mov
test
inc
mov
dec
xlat
incl
mov
fidivl
xor
inc
jb
push
mov
aaa
pop
outsb
and
sub
fldz
dec
fwait
int3
es
jb
mov
mov
ljmp
add
fsubrp
lock
pop
pushl
push
mov
mov
add
pusha
pop
pop
aas
and
and
loope
in
pushf
push
lods
jb
les
cmp
or
jecxz
adc
pop
mov
inc
push
cltd
mov
sarl
sub
mov
out
jg
dec
mov
scas
jp
mov
jl
push
inc
ret
jns
or
in
sub
stos
and
shlb
mov
fs
sub
in
lcall
sbb
jle
das
sbb
movsl
sbb
ja
bound
sub
std
cltd
aaa
pop
or
xor
ss
aaa
pop
pop
xchg
js
add
ret
call
rep
cmp
shlb
xchg
test
dec
jg
push
fisubrs
push
stc
mov
mov
xchg
in
testb
ror
mov
pop
fisubrs
or
lods
pushf
popf
xchg
mov
dec
mov
scas
ss
jp
and
cltd
push
xor
xchg
pop
mov
addr16
or
arpl
inc
push
inc
pop
xor
cld
fildll
or
shr
xor
fdivrs
lret
sbb
xor
mov
jb
fnsave
dec
daa
orb
mov
mov
roll
mov
leave
testb
pop
xchg
add
sahf
push
pop
and
lret
and
mov
shlb
xchg
mov
incb
sbb
stos
pop
xor
aam
mov
fldenv
gs
pop
mov
mov
aaa
daa
shll
insb
clc
notl
sbb
sub
inc
daa
inc
fiaddl
insb
fisttps
cmp
dec
xor
inc
push
pop
pop
lretw
mov
jno
out
repz
pushf
sub
out
adc
xchg
stos
jl
xchg
or
addb
push
push
inc
addb
mov
or
repz
xor
shr
add
pop
cmp
movsb
adc
sub
mov
xchg
xor
mov
nop
ds
xchg
mov
sbb
ret
jae
add
mov
mov
sbb
leave
in
dec
sti
xor
imul
mov
xorb
nop
add
mov
xorb
stos
nop
inc
or
loop
jecxz
outsl
movsl
xchg
mov
popf
xor
test
dec
cwtl
inc
xor
inc
sub
mov
gs
xchg
clc
loop
clc
or
cld
outsl
mov
jp
xor
shr
xchg
and
dec
std
sub
mov
pop
jb
out
sub
jns
pop
imul
jg
jne
xor
cltd
sub
mov
addr16
rcrb
inc
adc
inc
push
jecxz
mov
cmpsl
jns
scas
xor
xor
mov
shlb
xchg
inc
out
mov
outsl
lcall
imul
mov
insl
ljmp
pop
and
xchg
ds
out
adc
ret
xchg
add
pop
xor
cmpsl
cld
jnp
mov
xor
and
loopne
test
test
out
dec
insb
sahf
nopl
sub
cltd
ja
inc
sub
sub
sub
out
mov
pop
inc
push
lea
testb
or
jg
cmpsb
cmp
mov
mov
jnp
inc
add
into
jg
jp
pop
pop
add
shll
sub
test
xor
mov
inc
call
loopne
or
cmp
and
popa
stc
dec
sahf
mov
xor
mov
cmp
repz
or
fistps
out
dec
xor
inc
mov
lock
jnp
movsb
mov
lahf
inc
jo
cld
cltd
in
nop
push
add
and
jns
hlt
pop
int3
mov
in
and
xchg
lahf
cld
inc
sbb
scas
hlt
jmp
clc
cmp
repnz
and
outsl
call
aam
movsb
in
jno
xor
adc
mov
loopne
orb
and
lods
fwait
mov
or
push
adcl
cld
sub
pop
cmp
jns
jne
sub
push
js
pushf
jae
shlb
enter
and
jns,pt
mov
mov
cmp
adc
adc
arpl
xor
sti
loop
insl
or
push
xchg
lock
lret
fnstsw
mov
and
push
cmp
push
add
sbb
jle
std
movsb
xchg
xor
sbb
shll
test
mov
fmull
pop
stos
stos
jo
icebp
je
stos
loopne
test
test
lds
cmp
out
adc
lds
and
imul
mov
xor
jg
rorb
or
xchg
bound
lods
mov
mov
pop
lods
sub
mov
fptan
js
repnz
stos
es
push
ret
mov
add
inc
cmp
pop
lds
gs
mov
or
mov
or
popf
orl
dec
adcb
inc
cs
loope
push
out
aad
mov
push
sub
shlb
repnz
and
mov
adc
lret
nop
fsubrl
jns
outsl
jl
mov
jb
add
or
mov
cltd
sub
inc
xchg
add
out
jle
push
imul
lea
scas
mov
daa
aas
outsl
push
mov
into
push
jmp
ret
cmp
sti
cmp
leave
fidivl
fs
pop
sbb
push
cld
push
aam
test
scas
in
bound
jbe
std
lret
push
jge
les
or
loopne
xchg
or
sahf
sub
jae
lea
mov
jecxz
icebp
sbb
push
jmp
push
mov
xor
push
fcom
movsb
ret
adc
pop
ds
cmp
xor
sub
sbb
popf
repz
out
add
imul
lods
xor
jo
sub
jnp
lret
jns
inc
pop
xor
xor
cmp
inc
ss
sub
outsb
insb
cmp
mov
addr16
jg
call
inc
daa
fisubl
mov
repnz
test
rorl
xor
xchg
daa
stos
inc
enter
jmp
jg
push
push
loop
lock
mov
mov
mov
xor
jbe
sub
mov
cmp
dec
mov
adc
test
movsl
scas
mov
pop
or
out
roll
push
ja
lret
repnz
xchg
stc
rcll
xchg
test
outsb
or
jle
mov
ss
repnz
jb
movsb
pushw
xchg
jns
cmp
pop
test
daa
inc
jp
insl
sub
js
insl
xchg
push
stc
aaa
popa
lock
and
pop
mov
cmp
adc
mov
mov
push
sub
jbe
imul
movsl
jmp
in
es
push
pop
mov
mov
mov
add
push
or
leave
xchg
pop
cltd
push
sahf
outsl
outsl
inc
jb
mov
inc
test
jg
test
push
lock
insb
cwtl
stos
outsb
sub
mov
mov
ss
aam
xor
add
mov
xor
and
rcl
aam
push
mov
xor
pop
shr
lahf
aad
push
or
rorb
dec
ljmp
lea
lods
sarl
xchg
cmp
outsl
pusha
jg
in
push
lret
xlat
mov
scas
pop
fsubrs
in
sub
dec
ds
xor
push
lods
mov
fistl
stc
or
push
mov
dec
add
outsl
dec
adc
push
xchg
gs
cmpsl
mov
shlb
inc
movsb
rcll
dec
pop
call
in
jmp
xchg
out
pusha
test
mov
orb
jle
jl
jno
es
ficoml
fstpl
lret
fldcw
inc
out
jl
ljmp
add
jge
and
pop
and
inc
xchg
and
shl
imul
fists
push
xchg
cmp
int3
mov
xchg
mov
sub
lds
and
sub
add
add
adc
mov
jae
mov
push
arpl
fs
adc
fidivrl
lods
stc
repnz
adcl
ja
ficomps
adc
jmp
pop
sbb
add
sarb
cmp
pop
arpl
sbb
mov
jle
addr16
ja
insb
dec
xor
sbb
cmp
mov
sbb
lds
fnstenv
pop
push
jno
arpl
xchg
in
dec
inc
add
push
sub
movsl
lret
cmp
enter
shlb
subb
popa
loope
mov
push
imul
into
xchg
jne
pop
andb
jns
negl
mov
xor
sub
add
cltd
push
push
mov
pop
xchg
xchg
and
push
fldcw
ret
pusha
or
dec
or
ret
xchg
jl
jg
adc
out
and
shrb
cmp
loopne
lahf
jmp
inc
and
out
push
jge
js
mov
pop
call
xchg
add
test
dec
fwait
adc
push
mov
xorb
pop
sbb
insl
insb
enter
and
add
adcb
push
addr16
faddl
jns
aaa
outsl
mov
outsl
and
out
loope
dec
lret
lcall
fs
ja
push
inc
scas
push
rcrb
adc
jbe
xchg
scas
and
lds
mov
out
mov
cwtl
les
add
inc
xor
subl
mov
fadds
cmc
pop
lcall
mov
fcomi
aad
mov
cmp
dec
inc
popf
and
push
sti
add
xchg
push
subb
or
add
push
fsubrl
outsb
fdivs
push
sub
imul
pop
adc
scas
pop
xlat
sbb
clc
les
xor
aaa
push
and
aam
pop
inc
iret
nop
aam
imul
push
daa
lcall
jge
out
shrb
loop
dec
cltd
in
xchg
aaa
dec
mov
push
and
xlat
inc
jg
mov
out
insb
stc
sub
fistl
ljmp
loop
add
jns
cmp
lret
lods
pslld
push
inc
fldl
push
cmp
xchg
jnp
iret
mov
dec
fistl
in
adc
and
pop
shll
fisubl
rcrl
add
stos
push
nop
push
test
int
mov
mov
cli
stos
lods
mov
shlb
fbstp
adcl
mov
bound
inc
push
mov
pop
inc
es
ret
jno
mov
inc
in
fnstsw
shlb
lea
push
sub
shl
pusha
xchg
addr16
xchg
push
jne
sbb
inc
sub
pop
sub
push
push
push
adc
mov
xor
xchg
ret
sbb
sub
push
mov
data16
add
pop
pop
call
shl
and
sbb
mov
aad
jle
and
adc
not
loop
mov
lahf
cmpsb
imul
jge
sbb
outsl
cmp
adc
mov
pop
es
aas
mov
add
cmpsb
cmp
mov
push
add
mov
add
sub
repz
push
pushf
stc
out
ss
sti
outsb
sbb
es
lahf
test
int3
insb
jmp
loope
jle
popf
hlt
in
xchg
imulb
fst
ds
sub
leave
cmpsb
int3
sbb
mov
cltd
sarl
push
cltd
mov
pop
imul
cmp
dec
adc
loope
cwtl
test
jns
icebp
sub
dec
mov
jb
jmp
jnp
mov
xor
outsb
icebp
dec
dec
outsb
ljmp
add
stc
and
xor
push
adc
dec
stos
sar
jl
push
mov
fs
cmc
sahf
inc
push
push
mov
jo
cmc
imul
gs
loop
mov
fwait
data16
pop
mov
adc
in
and
aaa
call
popa
sbbb
lret
and
xor
inc
adc
push
mov
scas
or
sub
cmp
mov
mov
rcrb
sub
stos
sub
pop
lock
idivl
xor
mov
push
xchg
xor
fsubr
push
xor
fimull
pop
repz
mov
mov
xor
pop
mov
mov
dec
jecxz
pop
and
dec
ljmp
xor
jg
into
hlt
imul
sub
fnstcw
adc
sub
xor
or
sub
add
out
lahf
pop
ret
lcall
inc
mov
lods
pop
fwait
or
or
mov
inc
fwait
aam
nop
pop
mov
in
mov
and
call
je
dec
imul
out
jge
inc
or
leave
loope
fsts
mov
adc
push
mov
adc
shlb
popf
aas
mov
inc
mov
sbb
adc
aas
test
push
movhps
std
or
or
lds
cli
popa
outsl
insb
int3
xchg
cwtl
push
filds
pop
jne
mov
gs
adc
fwait
arpl
cli
mov
or
and
cmpsl
and
orl
xor
and
xchg
outsl
mov
adc
int
and
mov
cwtl
sti
dec
lods
xchg
xlat
sahf
jo
sub
cmpsl
movsl
pusha
lret
pushf
popf
bound
icebp
clc
clc
imul
jne
xchg
xchg
add
dec
movd
pop
xchg
add
dec
loopne
jg
ror
mov
cld
mov
sub
cmp
daa
int
loopne
jo
add
scas
mov
sbb
jge
adcb
cwtl
adc
mov
inc
cli
mov
outsb
sub
out
addr16
mov
mov
shll
xor
adc
cmpsb
push
mov
xchg
pusha
or
mov
arpl
das
clc
inc
lcall
push
movsb
inc
cmpsl
arpl
scas
jp
pop
push
sbb
loopne
mov
nop
fldcw
in
sub
push
add
stos
jae
les
test
push
fcoml
inc
inc
xchg
xor
int
mov
mov
lcall
out
js
xorl
outsb
sub
das
or
loop
ret
out
pop
or
add
jmp
shlb
sub
mov
mov
cs
xor
jbe
mov
jge
pop
jnp
pop
mov
add
lret
add
or
imul
stos
inc
jbe
mov
inc
inc
lret
mov
pushl
mov
xchg
fwait
lds
fs
dec
fdivp
mov
push
adc
aas
fucomp
xor
gs
dec
push
mov
jne
outsb
and
xchg
add
and
bound
cli
mov
ljmp
pop
gs
inc
jns
fsubr
sbb
push
cmp
push
lret
sub
ret
movsb
lods
push
mov
sbb
in
push
add
fs
push
mov
mov
dec
imul
mov
outsl
aaa
xor
iret
mov
iret
xchg
and
cmp
ss
sahf
adc
aad
out
and
mov
loopne
or
in
mov
add
lret
sbb
sub
loopne
adc
xchg
jns
movsl
test
jle
sbb
mov
push
into
inc
push
mov
mov
sub
lods
lret
fisttps
loopne
dec
fcom
xorw
cltd
rcll
sub
xlat
cli
pop
add
or
sub
int
cmp
pop
ss
add
popf
hlt
sbb
xor
ss
xchg
mov
cmp
das
push
cmp
mov
ljmp
adc
mov
sub
sub
pusha
push
jg,pt
cltd
push
mov
test
dec
pop
cmpl
cmp
jg
mov
roll
fisubl
adcl
mov
adc
out
sub
ja
bound
mov
jl
ja
outsl
add
and
mov
mov
mov
iret
mov
pusha
jle
xchg
cmc
push
enter
std
test
mov
sub
pop
mov
push
push
pop
mov
fldt
adc
adc
sbb
fisubl
xor
lods
add
fwait
add
lods
outsb
mov
mov
je
adc
fwait
adc
xchg
lods
jnp
lea
pop
andb
clc
rcrb
cmp
mov
sbb
icebp
and
and
lret
aad
push
fmuls
add
movsb
in
fiadds
call
mov
jecxz
mov
and
xlat
addl
adc
cwtl
push
cmp
sub
adc
cmp
scas
jnp
xor
rorl
fsubrs
jbe
or
jle
xorl
lret
jg
lods
into
inc
add
les
sub
mov
push
lret
aad
push
mov
jg
ljmp
pop
sbb
scas
push
pushf
push
pop
sbb
xlat
lds
xchg
lret
icebp
push
or
jl
xor
sahf
mov
jbe
mov
inc
int
je
jp
aas
or
and
movsb
sub
lret
cmp
add
push
rcll
push
mov
rcll
xchg
adc
icebp
jbe
lret
pop
stos
in
lods
out
adc
fwait
jmp
jp
and
push
push
mov
sub
inc
mov
mov
inc
test
sub
ret
dec
inc
jbe
jno
push
jb
shufps
test
push
or
mov
je
pop
sub
xorb
sarb
popf
in
mov
stc
xor
add
push
pop
psrlw
orl
push
fs
out
mov
ds
xchg
mov
sbb
xor
pop
repz
add
jb
sub
pop
push
ljmp
xor
jecxz
cmpsl
or
pop
jbe
mov
pop
loopne
mov
xchg
push
repnz
gs
xchg
sbb
aad
mov
mov
sub
popl
out
out
imul
xor
stc
sub
lahf
pop
inc
inc
jno
mov
fiaddl
jmp
inc
testl
in
cmpl
push
mov
pop
pop
push
or
mov
lods
sbb
add
mov
out
mov
sbb
or
das
stc
cs
cld
ret
out
data16
test
lds
mov
call
adc
or
fistl
lret
lea
or
push
push
arpl
stos
mov
adc
arpl
jle
into
jb
ficoml
stos
xor
xor
scas
inc
aaa
lods
inc
sub
mov
ja
inc
sbb
xchg
jmp
inc
subl
orb
mov
xchg
mov
cwtl
ret
ljmp
addr16
pushl
jno
jno
mov
lds
mov
xor
inc
fisttpll
dec
lret
out
mov
test
push
stc
call
sbb
xor
test
jbe
ret
xchg
int
test
sub
das
mov
mov
xchg
stos
es
stc
out
insb
jne
pop
xor
pushf
pushl
rcrb
call
xor
sbb
pop
in
popf
push
dec
dec
sbb
faddl
add
push
or
test
scas
in
outsb
test
mov
int3
jb
pop
push
stos
mov
lahf
mov
lcall
adc
int3
xorb
or
mov
or
sysret
push
pushf
cltd
push
pop
or
push
shrl
imul
sbb
push
mov
and
sub
popf
sub
jns
jge
pop
addr16
std
leave
aas
cmp
sbb
fistpll
aaa
dec
and
insl
insb
add
pop
inc
movsl
test
push
jmp
imul
push
les
jl
pop
mov
aam
push
mov
lcall
and
mov
push
adc
or
subb
mov
scas
pop
xchg
test
loope
xor
jg
lcall
mov
movsl
add
movsb
mov
out
push
cltd
jb
ja
test
loop
test
or
or
jae
sbb
leave
stc
mov
mov
jmp
imul
mov
out
pop
fildll
jns
roll
loopne
dec
xchg
into
dec
cli
cmpsb
jmp
fidivrl
int3
sbb
adc
dec
cmpb
test
pop
lea
inc
in
test
add
pop
and
ja
fwait
insl
lea
cmpsb
gs
add
fcmovne
ljmp
cmp
or
repnz
mov
adc
jge
rolb
insl
ja
rcrb
mov
mov
sbb
int3
imul
call
sbb
aam
movsb
xor
and
inc
sbb
sbb
or
ds
jg
cltd
shll
fistps
push
addr16
ret
inc
shl
mov
movsl
mov
fidivs
xchg
mov
push
and
loopne
cmp
je
mov
popa
les
push
sbb
and
into
js
out
or
mov
push
nop
ss
fwait
das
mov
jle
xchg
fs
repz
in
roll
out
out
sub
mov
hlt
or
sahf
subb
sub
insb
add
push
dec
repz
loopne
cld
lret
scas
outsl
loope
push
mov
es
repnz
push
pmaxsw
into
dec
adc
adc
bound
xchg
jbe
and
scas
arpl
jno
xor
mov
mov
subb
adc
sar
leave
sarl
jns
leave
sbb
inc
push
pusha
inc
popa
push
lahf
aaa
pop
mov
ds
rcrb
cmpsb
shrb
cmpsl
les
xor
mov
sub
xchg
mov
mov
bound
push
into
sub
lahf
ja
xchg
aaa
push
jne
shl
dec
cld
repz
incl
es
sarb
push
inc
cmp
loope
xor
lods
mov
ret
mov
addl
adc
negl
jle
test
movsl
jp
sub
fdivrs
adc
cmp
lock
xor
mov
loope
mov
or
push
push
mov
jmp
or
inc
xor
sbb
sub
add
pop
pop
push
stc
fistpl
inc
addr16
jne
fucomi
in
cmp
mov
xchg
cmp
dec
sbb
sub
inc
adc
nop
lods
ds
nop
lret
insl
and
test
or
mov
clc
out
insb
insl
sub
mov
push
push
pop
add
pop
iret
mov
mov
cmp
add
lock
arpl
xchg
fsts
and
call
cltd
loope
cld
and
xor
enter
mov
lcall
dec
lahf
mov
stos
xchg
jmp
jns
mov
push
incb
sarb
pusha
aad
push
call
mov
mov
movsl
add
mov
jo
stos
aas
aad
stc
jmp
jp
icebp
mov
push
dec
adc
add
dec
add
popf
or
push
add
mov
inc
int
pop
xchg
mov
fdivl
mov
sub
sub
es
loopne
inc
mov
ret
ja
inc
test
add
es
mov
mov
sub
enter
sbb
jp
xor
js
lcall
dec
fdivrp
roll
add
in
inc
pop
imul
push
stos
mov
int
outsb
jmp
xor
mov
ficomps
loope
ss
xlat
mov
push
or
push
inc
popf
adc
jae
stos
sbb
push
push
imulb
jmp
cwtl
cmc
imul
outsb
clc
xchg
xor
push
sahf
call
push
dec
test
add
mov
addr16
into
mov
or
push
mov
out
imul
inc
out
and
sub
lea
fldt
dec
dec
gs
mov
rcl
pop
sub
sbb
insl
lret
repz
movsb
inc
sahf
in
cli
push
mov
xor
xchg
jmp
mov
data16
sub
pushf
inc
jmp
insb
loope
fs
mov
lock
jg
daa
inc
inc
rclb
jp
cld
xchg
scas
je
cs
xchg
popa
dec
insl
lcall
xlat
dec
imul
pop
xchg
lcall
inc
aam
movsb
sbb
dec
mov
insb
dec
or
adc
mov
mov
rorb
addb
popa
stos
jae
mov
lret
mov
pusha
in
add
out
orl
and
push
mov
mov
mov
out
stos
pop
push
sbb
stc
fistpll
test
sbb
jmp
add
lds
mov
cmp
cltd
shl
insb
repz
movsl
out
lock
fidivrs
mov
ss
sbb
add
xchg
fadds
push
int3
pushf
and
pop
shlb
mov
bound
cld
decb
inc
int3
popf
push
xchg
dec
add
jle
push
leave
test
daa
dec
inc
sub
xor
stc
xchg
adc
or
pop
push
sub
std
push
lock
sbb
ds
or
enter
or
int3
in
push
mov
xorl
stc
and
xor
inc
or
adc
mov
in
dec
push
add
sahf
shrb
in
gs
sarl
arpl
mov
or
pop
hlt
cwtl
and
mov
cmpsb
add
into
outsb
test
cs
inc
ds
sub
adc
xchg
jno
out
jl
pop
pop
adc
xlat
or
rcrb
inc
je
mov
xor
or
imulb
ret
xor
push
bound
adc
or
jg
adc
aad
rorl
xchg
push
xor
cmp
mov
lret
pop
dec
stos
sbb
repnz
jnp
inc
lea
fwait
std
pop
push
cltd
inc
bound
arpl
or
inc
jmp
in
arpl
sub
movsb
sahf
imul
hlt
gs
movsl
push
shr
push
xor
mov
scas
out
test
dec
mov
mov
cmpsb
rcll
mov
ret
add
fisttps
ss
xor
stos
mov
or
roll
loop
mov
call
clc
push
and
jle
sahf
subl
loop
cmp
gs
mov
cmpsl
cmpsb
xor
dec
pop
dec
mov
lds
xor
gs
cli
aad
fidivrs
cmc
out
es
push
in
test
mov
movsb
lret
sbb
neg
lret
iret
mov
jl
adc
icebp
enter
lock
sbb
imul
mov
loope
jl
cmpsl
dec
inc
rorb
ret
stos
push
pop
sbb
aad
loope
cs
das
test
pop
ljmp
ret
dec
sbb
mov
add
arpl
outsb
cwtl
lret
cmp
pushf
dec
mov
xor
sarb
subl
aaa
add
cwtl
adc
inc
std
xchg
mov
lcall
loopne
mov
sarl
cmpsl
mov
cmpsb
push
js
jnp
insl
push
popf
mov
fadd
ss
fisubrl
movsl
sbb
adc
cmc
sahf
jle
inc
push
jecxz
cmp
test
sbb
sbb
les
and
cwtl
sbb
pop
sub
dec
mov
repnz
les
and
xor
outsl
test
push
nop
push
xor
cmp
ret
or
out
jnp
fsubrp
sti
mov
jle
xchg
out
and
pop
fimull
inc
les
or
push
shll
xor
cmp
jo
jmp
jae
jmp
mov
pop
and
xor
xorb
pushf
dec
cmc
pop
xor
mov
dec
aad
movsb
adc
dec
adc
fmull
ret
push
stos
xor
mov
fs
push
fistl
icebp
call
jle
sbb
cmp
mov
mov
and
sub
xlat
lret
cmp
mov
std
divb
in
repz
out
repnz
fiadds
mov
mov
inc
and
mov
lods
cld
into
leave
mov
fistl
sti
mov
xchg
sub
out
mov
int3
imul
or
sbb
decl
cmpsl
and
shr
lds
push
xchg
repz
out
imull
mov
add
fst
mov
daa
push
iret
push
mov
or
and
pop
and
cli
andl
jnp
jle
iret
pop
push
push
out
out
sbb
vpshuflw
popa
jne
push
xchg
ss
inc
cli
add
fstl
nop
adc
and
mov
js
lahf
inc
pop
sbbl
push
test
xchg
fdivr
lea
arpl
daa
clc
adc
adc
sub
xchg
pop
pop
mov
pop
std
xchg
icebp
jle
and
negb
cmpps
xchg
adc
and
cmp
shl
cmp
dec
fisubrs
mov
mov
fs
ljmp
movsb
fcompl
jb
lock
cmpsl
pop
ret
je
gs
outsb
cmp
adc
adc
ss
pop
pop
int
xchg
jge
addb
fmuls
insl
mov
in
into
sbb
adc
mov
xchg
inc
mov
mov
daa
pop
sbb
sub
adc
xchg
test
sti
loop
mov
cs
jecxz
flds
adc
es
mov
push
adc
mov
fidivs
xorb
push
inc
fldl
mov
xchg
fsubrs
push
and
push
pop
das
inc
mov
xchg
int
gs
ficomps
pop
lcall
mov
stos
cmp
or
test
fistpll
aad
pop
xor
pop
shrb
leave
cmc
adc
mov
lcall
stos
sub
add
mov
push
ja
and
and
sti
or
or
push
inc
dec
jns
mov
int
add
mov
cmpl
jg
cwtl
mov
sbb
int3
push
cmc
and
or
sub
push
dec
jecxz
add
out
jmp
addr16
fiaddl
mov
sbb
rorb
push
cmp
ds
jl
fildll
adc
dec
cli
mov
mov
and
ds
push
sbb
dec
jno
in
aad
repz
and
jae
in
xchg
out
pop
stc
mov
sbb
mov
out
cmp
sub
cmpsb
fdivrp
xor
ds
and
movsb
xchg
mov
inc
sub
adc
ret
rorl
mov
jb
cmp
into
sbb
xchg
pop
inc
mov
aas
xchg
mov
clc
jecxz
fwait
jle
insb
imul
aam
shlb
mov
cld
scas
js
inc
addr16
ss
pop
sar
inc
push
adc
adc
add
mov
add
movsb
pop
mov
xor
dec
movsl
mov
jno
jno
flds
push
sub
and
out
jno
inc
aam
lods
in
aam
lods
lea
fs
or
aaa
cmp
add
xchg
add
iret
sub
adc
inc
rcll
ljmp
subl
daa
mov
push
push
pushf
and
in
or
xor
fwait
pushl
sahf
ret
mov
mov
mov
push
out
int
lcall
sarb
into
mov
loope
call
adc
ljmp
cltd
loop
cld
dec
xchg
adc
xor
inc
hlt
jle
mov
dec
cmp
push
xchg
and
fildl
ljmp
dec
mov
mov
ds
and
outsb
cmp
gs
jb
andl
mov
frstor
mov
shr
movsl
dec
sub
sbb
loope
imul
sub
push
fcomp
xchg
lret
data16
add
leave
ficoms
mov
cltd
or
clc
popa
xor
daa
inc
or
mov
es
inc
xchg
mov
cld
xor
add
lahf
outsb
test
add
mov
mov
sti
cmc
jp
cltd
dec
push
fmul
inc
xchg
addr16
and
push
out
mov
inc
ds
jo
pushf
hlt
adc
cltd
jge
adc
mov
jl
push
dec
pop
push
loopne
js
sahf
lret
clc
scas
in
cmp
cmc
push
push
pushf
xor
testl
call
push
fadd
ljmp
push
sbb
stc
xor
div
cmp
rolb
pop
movsl
ret
add
mov
add
jge
dec
cld
fnsave
shl
pop
sbb
test
jno
aaa
dec
cld
ljmp
adc
rcr
lods
stos
test
lret
repz
icebp
push
sbb
add
mov
pop
fnstsw
decl
fs
adc
imul
pushf
test
je
add
dec
adc
sar
test
inc
mov
out
in
cmc
mov
fwait
mov
scas
mov
mov
and
dec
inc
or
ret
out
xor
mov
in
sar
pop
jmp
xor
pop
or
sub
in
shll
sub
mov
sbb
test
cmp
pop
fisttps
test
shlb
inc
in
test
test
lds
lret
pop
pop
insl
lea
mov
push
cmp
ret
inc
lret
aaa
mov
in
sub
and
xchg
pusha
jecxz
sldt
test
arpl
ret
movsl
shrl
aas
inc
xchg
mov
pop
mov
push
mov
adc
pop
jle
add
dec
push
mov
push
pop
andl
mov
mov
cmp
fisttpl
mov
add
lds
add
xchg
mov
cwtl
and
repnz
cltd
test
add
push
or
cmp
jae
mov
push
sub
jno
pushf
xchg
in
leave
out
pop
xor
je
fs
imul
movsb
fnstenv
adc
add
std
inc
jb
fdiv
mov
jo
pop
lcall
decl
pop
push
in
stos
test
lret
sub
jo
into
jle
mov
mov
mov
jno
fldenv
cmp
xchg
adc
sbb
ja
ds
mov
inc
daa
pop
mov
addb
jecxz
sar
and
jbe
cmc
dec
pop
repz
inc
xor
je
xchg
or
pusha
adc
dec
mov
lock
shll
sub
int3
xor
dec
jo
jne
scas
test
cs
lret
pop
jno
or
out
ds
pop
xchg
adc
test
mov
cwtl
jbe
loop
add
cmc
jae
filds
xchg
and
sti
loop
pop
pop
cmc
cmp
nop
fdivrp
in
push
or
loop
jle
inc
mov
shll
in
mov
adc
xchg
loop
or
shr
outsb
stc
fimull
pop
and
xchg
add
xchg
mov
inc
imul
leave
pop
subb
mov
dec
cmp
cmp
xchg
gs
mov
out
jo
push
cmp
or
hlt
stos
jl
iret
aaa
stos
pop
mov
ficomps
pop
cmc
jno
add
xchg
pop
mov
cli
push
sbbb
mov
movsl
gs
pop
mov
addr16
gs
xchg
insl
and
stos
inc
or
sub
imull
out
call
dec
push
arpl
loop
xchg
adc
jo
in
andnps
or
pop
es
add
std
mov
repz
xor
ja
sahf
inc
jge
jle
adc
gs
mov
out
mov
add
add
ds
sbb
adc
test
lods
sub
pop
sbb
adc
repnz
outsl
mov
push
mov
pushf
mov
mov
nop
mov
call
jmp
fcompl
jno
pop
rorb
mov
ds
push
sbb
pop
inc
push
dec
icebp
out
pop
jns
arpl
jo
pop
sub
push
das
mov
jg
or
fidivs
and
leave
push
cwtl
loop
loop
mov
popa
arpl
ja
add
test
fstpl
stc
xchg
sub
mov
or
push
inc
out
stos
sub
inc
sub
cmp
sub
cmp
adc
std
test
out
push
ficompl
int
sahf
retw
inc
sub
outsb
cmp
mov
stc
mov
fwait
test
stos
mov
inc
rep
xor
pop
jne
mov
in
push
sub
loope
xor
sbb
loopne
dec
pop
rcrb
mov
orl
cmp
cli
mov
xchg
or
sub
sub
popa
mov
outsb
and
scas
xchg
sbb
insl
push
cmp
hlt
cmp
mov
mov
adc
xchg
xchg
jle
mov
aas
jne
xor
ret
mov
dec
loope
imul
inc
stc
sbb
or
bound
inc
movsl
repz
imull
outsl
jecxz
dec
fcomps
enter
imul
lods
out
imul
or
cld
call
shr
mov
mov
jl
pop
repnz
xacquire
cmp
xchg
push
cmp
pop
std
aas
add
push
cld
out
push
cld
mov
dec
push
dec
repnz
stc
imul
push
push
ret
idiv
xchg
iret
fcomi
pop
mov
ret
mov
xor
or
inc
mov
lea
inc
push
push
mov
and
inc
orl
iret
fwait
fwait
adc
sub
push
xchg
notl
xchg
lret
ljmp
mov
cmp
test
xlat
fs
imul
inc
fidivrs
mov
xor
in
ds
lea
xchg
mov
push
pushf
jle
cmp
rcl
add
dec
sub
push
adc
testl
or
adc
push
jae
mov
cld
lods
push
sbb
pop
out
sti
mov
js
mov
mov
aas
sub
push
rolb
out
inc
xchg
lds
fisttpl
cmc
cmp
dec
imul
push
mov
stc
mov
js
das
or
sbb
loop
or
fildl
iret
sub
xor
lods
in
popf
dec
xchg
dec
mov
rclb
loope
cld
push
cli
xchg
add
dec
insl
mov
xchg
and
arpl
inc
fistl
bound
outsl
dec
popf
repz
xor
add
ds
inc
dec
and
adc
repz
lret
gs
roll
or
fildll
movsb
pop
nop
lds
cs
adc
fdivrs
lods
mov
clc
dec
xor
ljmp
insb
sbb
out
push
shrb
pop
mov
push
in
int3
sbb
js
les
ficomps
sti
or
addr16
mov
shlb
cmpsl
imul
sbb
xor
xchg
sarl
push
cmp
lods
call
push
flds
aam
daa
imul
and
fwait
mov
adc
inc
shr
div
shll
lahf
mov
jb
push
movsl
adc
mov
mov
stos
subl
add
lret
xchg
push
sbb
pop
ss
xchg
dec
inc
adc
xor
std
inc
sub
xor
div
bound
or
mov
jno
in
push
lds
push
or
and
aad
jg
add
inc
sub
sub
unpckhps
aas
mov
loopne
add
xchg
cmp
jns
and
xchg
push
sbb
pop
negb
and
fwait
js
jno
cld
ss
and
or
jno
sub
mul
repz
lcall
shrd
xchg
jl
push
xchg
cld
in
fmull
mov
xchg
inc
lret
cmp
sbb
pop
add
cmc
sub
mov
iret
je
into
fisubl
or
jne
int3
sbb
imul
xchg
pop
cmp
sbb
test
iret
inc
cltd
lahf
loop
mov
cld
xor
mov
jno
lds
ja
xlat
mov
rorl
xchg
ds
xchg
pop
and
cmp
xchg
jns
dec
pop
ss
lcall
add
lds
lcall
sbb
fldlg2
push
add
xor
cmp
push
popf
mov
inc
xor
push
int3
xor
sub
mov
scas
and
or
push
lock
movsb
dec
add
js
xchg
jne
mov
cmp
lods
fsubs
add
push
rclb
das
xor
stos
adc
push
outsl
nopl
dec
out
add
cmpsb
mov
push
dec
add
es
lods
jne
sub
push
inc
out
adc
and
cltd
adc
subb
mov
sub
popf
lret
add
mov
jnp
in
cld
out
pop
pushf
dec
cli
and
inc
mov
pop
js
in
xorl
pushf
cltd
sbb
lock
out
leave
ljmp
push
lods
dec
xchg
mov
push
scas
ret
pop
arpl
in
dec
popf
mov
leave
iret
fbstp
in
mov
and
push
outsb
mov
mov
out
loop
insl
inc
push
xchg
mov
mov
rcr
in
jae
enter
popf
dec
rcrb
addr16
adc
xlat
inc
std
repnz
test
pop
and
cmp
adc
push
ds
jmp
js
mov
pop
xchg
mov
mov
push
lock
or
repz
cld
fisubl
pop
pushf
imul
fucomip
pushf
push
out
fsubrl
mov
lcall
mov
aaa
jl
xor
ljmp
ja
dec
and
mov
int
js
mov
setl
sub
xchg
xor
dec
ds
lahf
nop
aas
sub
or
sbb
push
pop
mov
or
loop
push
jl
jg
sub
dec
rcl
push
and
push
fdivrp
incb
stos
or
fwait
inc
push
xchg
inc
pop
or
adc
stos
push
decb
xor
sub
add
mov
jno
cli
xor
cmp
cmp
push
enter
fnstcw
nop
push
shll
pop
stos
pushf
es
ja
call
test
mov
in
insl
jae
test
push
jl
xor
fcomps
or
jns
cmp
imul
jb
sti
ljmp
popf
test
addr16
add
mov
jmp
dec
xor
xor
xchg
jne
lret
rcrb
pusha
pop
jecxz
cwtl
dec
fstpt
dec
xor
xor
addb
dec
xchg
mov
mov
xchg
aaa
int
pop
push
xor
sbb
addr16
sub
imul
sub
push
add
or
adc
pop
stos
fistl
lea
cmp
sbb
frstor
cmp
shr
pusha
cmp
iret
cwtl
out
iret
lahf
out
lods
xchg
sbbb
aad
loopne
add
cmpsb
mov
add
adc
cltd
int3
dec
jno
xchg
sahf
mov
mov
in
xchg
loop
inc
mov
add
xor
xchg
incl
pop
inc
or
push
out
mov
xorl
and
sahf
imul
mov
rclb
lock
adc
insb
adc
pop
sub
repnz
fstps
jnp
pop
inc
jecxz
ds
cwtl
movsl
xor
cltd
cwtl
clc
cltd
adc
lcall
pusha
jg
daa
push
jne
ds
and
inc
xor
pop
mov
jmp
cwtl
jge
in
enter
in
movsl
hlt
fnstcw
xor
shrl
orb
ljmp
jecxz
dec
scas
pushf
lds
orl
sbb
push
mov
sbb
jp
jno
mov
dec
ss
sbb
lahf
imul
dec
push
fnsave
xlat
or
test
dec
sbb
in
roll
out
mov
lods
out
lods
pop
jle
js
in
xchg
into
ljmp
mov
test
jne
test
jl
into
push
clc
lods
aaa
popa
loope
int
mov
mov
mov
inc
fistpll
cmp
mov
das
xor
add
out
xchg
xchg
out
stos
pushf
fucomp
ror
mov
fs
pop
push
adc
dec
mov
lahf
arpl
dec
xor
jg
das
int3
js
push
pop
out
ret
add
mov
sub
mov
sub
imul
jo
cmpsl
jg
icebp
and
pop
cmpsl
call
jecxz
sbb
out
dec
rclb
fisubs
stc
repz
test
mov
lcall
dec
or
dec
sbb
popa
stos
ja
in
or
jmp
cltd
daa
rcrb
jo
fcmovnu
inc
mov
test
inc
std
mov
aaa
dec
cs
mov
shrb
jbe
enter
sbb
loopne
sub
cmpsb
je
cs
ret
xor
xchg
iret
push
dec
in
mov
add
fists
add
mov
cltd
jo
dec
std
xlat
pushf
inc
cmp
adc
sbb
add
rolb
into
mov
cmp
inc
addr16
add
or
push
add
jg
lds
jbe
test
jmp
xchg
pop
repnz
push
adc
imul
mov
leave
dec
push
mulb
jle
js
add
sub
out
push
imul
cmp
icebp
sti
lret
lret
push
cmp
push
iret
xor
pop
jecxz
pop
mov
jmp
in
loopne
pop
test
push
outsl
push
testl
push
in
xchg
xor
cmp
enter
xchg
xor
inc
je
or
mov
jne
add
ds
hlt
imul
pop
leave
mov
dec
imul
mov
rclb
rcrb
mov
xor
out
push
mov
es
lret
subl
cltd
and
or
imul
or
stos
adc
mov
movsb
sbb
jno
sbb
inc
xchg
xor
inc
push
aam
inc
jl
adc
and
ret
sub
pop
xor
lock
cltd
clc
adc
and
jle
jg
inc
xchg
inc
fistpl
inc
mov
fisubrs
pop
adc
rcrl
stc
push
or
xchg
pop
xor
jne
pushf
xchg
dec
mov
push
cmc
mov
pop
pusha
test
les
rcrl
xor
popf
es
imul
sub
pop
fidivrs
lea
std
jg
adc
and
inc
ret
cltd
dec
in
cli
lahf
in
outsb
test
or
add
subl
test
xlat
mov
push
leave
fistl
aad
jno
push
cwtl
fcmovu
mov
inc
pop
adc
push
ret
dec
push
add
or
xor
mov
jb
aam
mov
orl
xor
popf
insl
and
cmpl
push
and
mov
test
xor
dec
int3
jo
add
adc
shr
mov
stos
dec
sub
or
fimull
inc
push
mov
pop
jg
push
dec
pop
add
lock
dec
fwait
jge
or
add
fdiv
inc
sbb
fwait
inc
dec
arpl
in
dec
jb
lret
push
add
call
aam
cltd
dec
jge
cmpl
iret
outsl
push
fisttps
outsb
mov
mov
mov
repnz
mov
and
rorl
push
imul
cmpb
pop
rcrb
sbb
arpl
test
adc
pop
xchg
cmp
daa
xor
sub
std
mov
pop
add
aaa
xor
mov
mov
fmull
or
dec
add
add
cmp
adc
jl
and
test
mov
or
mov
sahf
mov
repnz
mov
and
out
xchg
mov
add
cmp
lahf
adc
sbb
push
sbb
jne
lcall
push
xchg
enter
pop
es
bound
mov
xchg
imul
cmp
test
mov
pop
jecxz
test
pop
dec
mov
popa
inc
push
mov
pop
jge
cmp
jne
test
addr16
popl
enter
adc
xchg
call
push
cmp
aas
test
dec
bound
hlt
mov
out
inc
clc
scas
fcmove
inc
push
xor
xor
inc
push
adc
and
dec
xchg
adc
jle
out
sub
mov
xchg
imul
fnstenv
xchg
incb
xchg
fcmovnbe
lock
inc
mov
push
add
test
cmc
in
inc
frstor
or
sub
jne
pusha
adc
out
adc
or
sbb
push
shrl
cltd
ds
arpl
notb
popa
daa
out
or
or
insb
cli
or
enter
push
xchg
sub
sar
ret
xor
push
outsl
nop
push
sbb
xchg
add
adc
push
dec
ss
push
pop
clc
jbe
cmp
sbb
xchg
mov
xchg
cmp
out
js
lock
mov
lock
mov
ret
mov
sub
outsl
lods
fsubrl
das
mov
xchg
movsb
fucomip
mov
cmp
nop
mov
jne
mov
mov
mov
push
fnsave
mov
stos
out
mov
sbbb
mov
push
mov
loope
repnz
sub
jle
jmp
xchg
test
or
sbb
sbb
jg
dec
std
inc
sbb
mov
out
das
add
pusha
roll
sbb
mov
jae
lods
push
mov
xor
dec
in
repnz
lret
mov
mov
out
sub
sti
cwtl
adc
lcall
dec
outsl
inc
inc
pop
mov
xor
aas
mov
loopne
xlat
xor
loop
jle
lods
loope
xor
jle
je
outsb
or
mov
jmp
ret
push
rcrb
shrl
arpl
pop
sbb
pop
out
sbb
mov
ja
leave
xchg
js
add
out
sbb
cmc
inc
lock
insb
add
nop
adc
in
push
fwait
rcrb
icebp
push
mov
dec
inc
cmc
mov
inc
and
rcrl
nop
cli
aaa
int
popa
in
mov
shl
insb
jg
adc
data16
adc
dec
fisttpll
mov
cmp
mulb
out
call
ret
push
xchg
lea
push
ja
loopne
push
push
or
leave
xor
ret
cli
rcrl
fidivrl
stc
in
mov
xor
bound
sbb
mov
jbe
add
mulb
mov
not
outsl
lock
sbb
in
pop
mov
cmc
fcoml
test
cmp
mov
inc
call
push
xor
loop
jno
sbb
jle
dec
sbb
and
iret
mov
cltd
mov
pop
ljmp
push
cs
xchg
mov
or
jl
pop
cmpsb
sbb
cmp
mov
js
jbe
xchg
aas
xchg
call
mov
push
xchg
pusha
imul
ja
js
repnz
push
dec
js
sbb
cld
xchg
daa
inc
dec
ss
movsl
lret
js
and
pop
aad
rorl
inc
inc
sbb
aaa
sub
mov
call
pop
rcr
mov
inc
xor
test
cmp
sbbl
mov
add
test
mov
data16
pminsw
loope
or
fisttpll
ror
add
out
cli
xor
pushf
fcoms
mov
out
aaa
dec
mov
push
mov
sarb
mull
sbb
jb
lods
jge
add
and
sub
sahf
leave
in
iret
cmpsb
sbb
gs
insl
idiv
ja
notl
std
mov
pop
push
pop
adc
cs
inc
add
sub
lock
cmc
push
xchg
loop
ljmp
cli
je
dec
scas
jle
inc
xor
jae
sti
test
push
or
dec
xlat
inc
inc
or
dec
jno
popf
sbb
adc
rcrl
lcall
dec
or
iret
cltd
leave
mov
ljmp
xchg
dec
shll
scas
insb
push
cmp
pop
das
cld
or
cmpsb
ss
xchg
add
sahf
mov
shll
inc
clc
mov
add
lcall
pushf
push
adc
cmp
jmp
sub
popf
fisubrl
dec
imul
and
ljmp
mov
or
stos
rcrb
add
sub
sub
idivb
out
jge
dec
insb
ss
dec
adc
sub
and
ret
adc
sub
fs
ror
fwait
icebp
jnp
sbb
inc
mov
adc
push
or
push
aas
xchg
jno
cs
push
in
adc
adc
lds
inc
fcmovb
sti
pop
pop
fnstenv
pusha
xchg
push
add
push
push
lods
xor
push
dec
in
les
mov
imul
aad
cmc
ret
xchg
inc
xor
sti
mov
ret
shrl
pop
fmul
or
fisubrs
pop
loopne
lcall
xchg
pop
sbb
and
iret
dec
dec
repz
rcrb
in
test
push
not
xor
xchg
mov
mov
push
xchg
mov
xor
enter
adc
pop
iret
inc
fstl
daa
push
in
ffree
inc
aaa
loopne
inc
into
repz
ja
pop
clc
pop
pushf
mov
xor
fcmovnbe
jns
mov
stos
add
jg
imul
pop
test
jne
imul
stc
test
adc
add
xchg
xor
arpl
push
dec
icebp
add
inc
or
cmp
sub
mov
or
cmp
stos
shll
mov
int3
xlat
sbb
or
pop
add
pop
popa
clc
push
adc
sub
cmp
sub
pop
test
jno
jl
stos
mov
call
push
mov
dec
fmul
or
nop
sti
insl
push
push
pop
mov
fdivs
or
insl
popf
fistps
lcall
mov
xlat
jns
push
call
mov
pusha
sub
in
jo
idivl
mov
cmp
jns
fbstp
dec
js
cwtl
xchg
mov
pusha
jns
shl
add
ds
jl
dec
addl
jecxz
iret
sub
pop
push
rcl
dec
xchg
lcall
pushf
cli
in
adc
and
jg
add
pop
pop
mov
push
inc
add
push
inc
pop
mov
add
xchg
and
cmp
repnz
pusha
lods
push
or
cmpb
jns
mov
aas
adc
aam
add
inc
sbb
or
test
xor
mov
pop
dec
push
clc
push
imull
call
sti
ror
ss
xor
push
lcall
shl
xchg
shrb
rolb
insb
or
mov
lcall
pusha
inc
xor
jge
xlat
inc
dec
pop
call
aam
stos
and
sbbl
push
mov
stos
xchg
rclb
jnp
insl
dec
jno
test
inc
cmp
adc
jno,pn
out
lret
out
dec
cmp
loop
rol
sahf
push
loope
dec
inc
das
fs
lret
out
adc
fnstsw
mov
mov
mov
pop
inc
cmp
push
adc
jmp
icebp
jecxz
cmpsb
and
neg
sub
dec
test
mov
xchg
enter
dec
cmpsb
fwait
cltd
add
je
jno
cmc
push
pop
push
lret
dec
inc
dec
imulb
mov
mov
or
adc
xchg
mov
mov
mov
jae
pop
push
xchg
aad
xchg
xchg
mov
cmpsb
lods
stc
push
jl
mov
inc
cmp
or
test
stc
out
stc
iret
dec
idiv
aas
inc
rclb
je
in
cmc
xor
mov
and
out
jl
pop
pusha
jnp
or
iret
aam
shrb
xor
adc
or
jmp
popf
stos
mov
jns
mov
daa
add
sub
pop
and
dec
fs
inc
mov
xor
xchg
ljmp
bswap
add
dec
sub
xlat
test
sbb
loop
rcrl
sub
es
in
ljmp
fdivrs
xor
js
in
icebp
jnp
cmpb
add
fcomi
jmp
pop
mov
jmp
sbb
insl
jmp
xor
test
push
push
xchg
jecxz
and
xchg
dec
push
fst
in
mov
jl
aam
pop
lahf
push
and
push
push
fdivp
mov
sbb
xor
jo
jae
daa
jl
push
gs
mov
insb
add
shl
xor
jmp
lcall
mov
mov
jns
dec
sub
das
outsl
mov
adc
mov
pop
push
xor
cmp
push
sbb
mov
jb
mov
out
cltd
ljmp
jb
iret
stos
enter
mov
sub
add
out
adc
push
rorb
bound
cltd
mov
int3
xchg
and
test
adc
inc
std
and
and
in
aam
jns
sbb
popa
hlt
mov
je
sub
scas
fs
xor
out
daa
in
and
mov
adc
lds
xor
ror
stos
ljmp
insl
lods
scas
cli
out
mov
jp
mov
sar
adc
lods
fnstsw
out
pop
push
std
xchg
sbb
inc
and
inc
leave
outsb
mov
push
cmp
cs
inc
into
in
xchg
leave
sub
sub
jmp
sbb
add
fcoml
pusha
popa
jmp
sub
push
jge
in
dec
mov
loope
jecxz
sbb
mov
push
es
ficoml
cmp
fstp
mov
adc
xchg
imul
inc
scas
test
int
xchg
cltd
cld
clc
sub
mov
std
gs
cmpsl
add
xchg
mov
mov
shll
ljmp
fwait
divb
shll
and
bound
lock
cmpsl
pop
mov
or
mov
iret
mov
sbb
iret
sub
aam
jle
das
faddl
sbbb
jmp
inc
jae
mov
push
repz
inc
mov
cwtl
gs
mov
adc
mov
and
ret
orl
mov
inc
les
adc
or
cmc
loop
xchg
xchg
repnz
xchg
mov
push
fists
add
call
cwtl
lock
js
cmp
jae
cmpsb
mov
inc
into
sub
movsb
mov
out
stos
xchg
inc
insb
int3
mov
xlat
hlt
sub
lahf
bound
mov
enter
inc
lret
inc
aas
clc
inc
dec
test
add
dec
mov
notb
add
lock
push
flds
jge
cltd
sbb
dec
cmc
fcmovu
inc
cmp
pop
xchg
sahf
xchg
jmp
aam
std
loopne
push
in
xlat
ret
pushf
fs
mov
sub
daa
adc
pop
ret
in
cmp
js
adc
pop
adc
mov
lock
in
and
sub
jl
dec
ffree
filds
outsb
lock
test
cmpsl
xchg
cmp
cmp
xchg
push
xchg
pushf
repz
lret
or
mov
push
dec
push
std
jne
into
push
mov
jp
pop
sbb
stos
jmp
sbb
add
xor
int3
nop
in
pop
and
xchg
sub
mov
add
add
mov
aas
nop
sub
or
fwait
adc
add
int3
lret
ret
cli
and
imull
xchg
cs
ret
mov
lret
pop
sub
add
push
ret
jo
aaa
enter
imul
inc
mov
mov
das
xor
fcomps
faddp
in
lretw
push
shl
fst
std
inc
adc
mov
cmp
sub
jmp
daa
addr16
fs
nop
cmp
pop
in
cwtl
mov
rcr
sub
push
and
adc
inc
add
push
aad
imul
shlb
cmp
xchg
xorl
add
and
out
les
adc
test
js
addr16
add
out
mov
std
les
push
add
sarl
inc
inc
or
pop
adc
out
and
inc
or
jl
push
cs
adc
mov
mov
xchg
gs
adc
push
inc
adc
adc
xor
gs
add
ss
jno
mov
xor
rcll
jno
mov
gs
lock
shll
call
or
mov
and
xlat
push
rcll
or
push
sub
push
push
jae
hlt
imull
xor
push
push
cmp
orb
jns
xor
fcoml
fwait
lock
stos
mov
enter
mov
cmp
sbb
xor
adc
nop
dec
mov
lock
int3
pop
imul
push
or
dec
xchg
pop
stc
stc
lds
mov
jmp
and
push
shlb
or
xchg
loope
inc
pop
pop
add
adc
lahf
cwtl
orl
pop
or
mov
xor
dec
jo
pop
orb
faddp
adc
cmp
leave
mov
js
xchg
call
adc
pop
popa
mov
push
inc
xchg
push
into
xor
sbb
imul
sub
imulb
pusha
pop
jecxz
jp
inc
push
mov
andl
movsb
mov
dec
sub
in
in
and
push
jl
jnp
loope
dec
pop
sbb
mov
lods
and
idivb
and
mov
push
xor
sahf
rcll
insb
jns
xchg
jo
inc
repz
cmp
pusha
popa
test
enter
pop
push
and
mov
jnp
fildl
adc
in
push
mov
rclb
in
imul
in
push
inc
pop
sub
aaa
fimull
adc
push
mov
add
nop
out
and
add
je
push
adc
adc
sbb
pop
push
xlat
sbb
adc
shll
insl
stc
sbb
outsb
shrl
stc
sub
pop
inc
dec
aam
mov
push
fdivrp
push
push
mov
repz
cmp
inc
dec
and
fsubr
negb
sbbb
stos
shrb
ffreep
xchg
push
or
cld
aad
inc
and
fwait
mov
imul
aad
or
rorb
inc
pop
call
sahf
lods
ds
xor
dec
mov
lgs
jbe
jno
mov
sbb
pop
xchg
cmp
in
mov
ret
in
lock
mov
mov
fildl
mov
rolb
pop
mov
pop
cli
aam
adc
cld
pop
add
xor
mov
test
popa
ret
sub
sbb
push
gs
cli
jg
js
cltd
in
outsl
scas
iret
lock
and
sbb
dec
dec
fs
ds
iret
sub
xor
cmp
sub
sahf
mov
pop
mov
mov
iret
into
mulb
mov
jo
shll
xchg
fs
xchg
push
nop
loop
lret
mov
jbe
mov
and
pop
enter
mov
add
paddsb
es
xor
adc
hlt
rorl
cmpsb
add
and
fldln2
aaa
or
mov
push
jne
dec
aad
gs
movsb
or
mov
movsb
shl
jecxz
adc
in
lods
lret
lock
push
cmovp
incb
lret
jo
dec
imul
int
pushf
mov
mov
adc
jne
sub
mov
push
outsl
push
adc
push
cwtl
test
stc
mov
stos
inc
mov
mov
test
pop
add
scas
pop
frstor
jbe
lea
lcall
in
or
fldl
stos
in
outsl
or
pop
pop
js
rcr
stos
in
fmuls
jle
rcrl
pop
aam
push
mov
loop
sbb
mov
add
subb
jecxz
ja
pop
add
mov
xor
ss
sbb
std
mov
imul
ja
jecxz
leave
push
stc
sbb
arpl
loop
cltd
mov
fwait
stos
jge
fldt
gs
daa
fdivl
test
fdivrs
inc
push
xchg
fwait
push
pop
jle
mov
fidivl
mov
pop
or
shlb
int3
sbb
pop
dec
das
pushf
or
sub
pop
stos
scas
ds
mov
dec
rcrl
and
sbb
test
add
ret
enter
daa
ficoms
sbb
ret
cmp
dec
jge
cwtl
xor
aas
or
mov
sub
aaa
mov
lret
ret
minps
push
lods
shlb
lock
cmp
aas
mov
std
lret
dec
fistpl
jnp
lock
jno
push
mov
das
orl
sarb
jl
cmp
sub
mov
insb
lods
jge
outsl
ljmp
add
dec
pop
dec
sti
cmp
or
jg
subl
repnz
outsb
aas
movsl
adc
data16
fildl
cwtl
inc
in
sti
mov
adc
mov
mov
jg
add
adc
push
aas
cmp
in
scas
nop
mov
push
pop
lea
jg
mov
or
lods
aas
pop
lods
lcall
inc
mov
cld
xlat
cmp
inc
orl
inc
pop
jl
xchg
xlat
std
push
fidivrl
jne
shld
int
mov
jno
mov
in
jo
sbb
ffree
fdivs
and
pop
adc
rcl
popf
jmp
insl
mov
and
push
inc
push
dec
mov
dec
fdivs
push
sbb
stos
xorb
xchg
pop
fldenv
mov
lcall
inc
aad
pop
inc
subb
or
xchg
shll
movsl
cmp
sub
push
inc
test
imul
jbe
push
cwtl
and
or
xor
orl
dec
mov
push
call
bound
fcomip
jae
clc
lods
sbb
jo
push
pop
fdivrl
shll
bound
es
hlt
cmp
aam
jl
mov
mov
push
inc
filds
aas
mov
sbb
inc
or
jmp
js
icebp
insb
inc
xchg
mov
mov
cmp
shrl
sub
lret
jg
mov
not
outsb
pop
sub
xchg
call
dec
testl
mov
into
mov
push
sti
push
loope
and
mov
out
mov
test
loopne
push
das
mov
fstl
jecxz
jo
push
dec
es
cmp
shll
and
dec
xchg
mov
add
inc
loopne
xchg
lds
divl
xor
icebp
dec
negl
out
xor
mulb
sub
sub
push
cltd
jns
imul
cmp
sub
icebp
mov
cmp
push
adc
lods
rcrb
mov
nop
xlat
xchg
aas
ljmp
sbb
cmpsl
push
lret
pop
je
dec
jmp
cs
outsl
enter
test
pusha
push
lcall
popf
pop
adc
mov
jbe
in
sbb
fimull
stos
loope
cmp
pop
jnp
bound
mov
cmpsl
xchg
or
pusha
sbb
push
les
mov
push
lret
jno
lret
xchg
das
js
enter
xlat
push
cmp
fsubrs
mov
mov
or
out
aas
mov
in
cmpsl
scas
in
testl
adc
insl
test
movsl
pop
stos
daa
inc
les
into
scas
stos
mov
pop
jb
fidivl
movsl
movsl
pop
jns
cmp
dec
xchg
xor
fs
rclb
aam
cmc
pop
mov
je
push
loope
sarb
cmp
pusha
sbb
adc
pop
test
daa
push
xchg
in
xor
mov
jmp
notb
roll
fildll
insb
sub
lods
jno
ror
cmpsl
dec
jbe
push
pop
wbinvd
mov
add
out
insl
pop
je
aas
xor
or
mov
push
mov
mov
sub
push
adc
lret
mov
cmp
cld
or
push
movsb
add
lods
or
cmp
aas
adc
sbb
cli
and
xchg
lcall
sbb
jmp
aam
movsl
es
ret
cmpsb
cld
scas
jl
pop
mov
push
lea
sub
adc
mov
mov
pop
add
mov
adc
data16
cwtl
fwait
ret
mov
jae
lret
xor
es
inc
xchg
out
cltd
lds
cmp
je
xlat
add
xor
out
sbb
xchg
int3
je
xchg
icebp
das
mov
andl
mov
inc
pop
cmp
dec
jp
addb
loope
adc
sub
repz
cmp
insl
out
adc
lds
and
cmpsl
lods
aam
lret
mov
dec
cld
xor
hlt
lds
fistpll
xchg
jecxz
jle
sahf
lds
stos
test
sub
or
in
movsb
daa
ljmp
mov
xchg
imul
dec
lret
lds
shll
jnp
mov
je
lods
or
add
jge
hlt
jbe
sub
notb
push
xor
mov
mov
into
std
dec
sbb
cli
sub
clc
jae
dec
loopne
jg
jecxz
pop
add
lahf
add
mov
adc
xchg
sahf
pusha
dec
dec
adc
mov
xchg
inc
repz
pushf
inc
loop
pop
xchg
dec
pop
ss
xchg
dec
sub
jae
jg
insl
out
or
pop
les
xchg
les
or
aas
jg
mov
shlb
in
add
sbb
shrb
andl
adc
aam
mov
sbb
ficompl
enter
xchg
jle
aas
and
jno
dec
ret
adc
push
xchg
lods
xchg
dec
pop
shlb
cld
clc
push
fcoms
fdivr
xchg
push
stos
icebp
xchg
and
adc
xchg
lcall
jnp
inc
lods
push
ret
inc
push
shlb
mov
jnp
and
adc
cmpsb
and
cmpsb
cmpsl
jnp
jno
cmp
cmp
lods
cmp
lods
fs
movsl
cli
pushf
scas
inc
add
notb
out
sub
into
mov
fsts
fwait
pop
cmp
and
test
mov
add
mov
cld
dec
jne
xor
push
addl
cmp
iret
jmp
cmp
push
sbb
pop
scas
ljmp
mov
pop
mov
scas
outsl
cmp
jmp
adc
std
add
lock
lret
inc
jnp
in
cli
xor
xchg
dec
xchg
loop
dec
add
shrb
fs
iret
xchg
push
stos
cmpb
push
ss
xor
xor
mov
pop
mov
aas
mov
sbb
lock
cmp
inc
imul
popa
mov
sub
out
mov
ljmp
sub
adc
push
popa
or
or
ja
ror
add
roll
dec
cmp
jnp
scas
jno
mov
movsl
sub
test
xchg
stos
aam
lret
jl
or
mov
into
inc
lcall
lret
and
jno
es
lds
in
push
les
pop
cltd
dec
xorb
call
pop
jl
repz
sub
and
jae
xchg
repnz
mov
mov
jle
jmp
hlt
jl
add
adc
ds
add
and
mov
mov
and
and
jns
pop
arpl
lods
out
or
inc
js
xor
call
cld
ret
jb
gs
filds
gs
pop
push
mov
sub
xchg
mov
sbb
rorl
xor
lock
dec
jle
int3
xchg
or
data16
pusha
hlt
lods
or
les
stos
aad
dec
loope
cmp
icebp
adc
jae
xor
mov
out
fsubl
pop
cmp
xchg
mov
pop
test
notl
js
inc
push
pusha
jb
pusha
loopne
push
xchg
mov
mov
mov
orl
ljmp
pop
mov
push
sbb
fmul
lcall
in
push
jmpw
inc
lods
and
adc
or
push
pop
and
arpl
lret
loop
in
push
lds
data16
push
nop
insl
ss
lea
lcall
xor
add
pop
test
lods
pop
lcall
xor
jecxz
addb
jl
or
xchg
pop
xlat
cmp
insb
pop
repnz
xchg
jp
ss
xor
in
push
stos
and
mov
dec
pop
out
aaa
and
or
imul
sarl
js
sbb
pushf
push
adc
fwait
push
mov
shll
push
cwtl
pop
jl
cwtl
or
add
jecxz
int3
arpl
test
jb
jg
data16
dec
cmp
pop
popa
sub
jg
and
adcl
push
repnz
pop
jle
and
testl
xchg
mov
lods
data16
xor
hlt
movsb
sbb
pop
leave
jo
adc
inc
cs
fstps
jae
test
mov
mov
sarl
jge
rcrl
sbb
pop
sarl
mov
push
inc
push
push
ret
rep
rolb
mov
mov
adc
jp
inc
adc
xchg
stos
sub
mov
adc
mov
imul
push
sarb
mov
in
or
imul
adc
lods
ss
adc
lcall
pop
aad
jge
adc
and
mov
fmuls
cwtl
or
std
std
push
fildll
call
fisttpl
mov
and
inc
cli
lret
mov
gs
jmp
fs
incb
pop
mov
test
test
sbbl
xchg
mov
pop
mov
and
push
jge
sahf
lcall
das
xchg
shl
sub
sub
cmp
lret
pop
cs
push
in
and
xchg
pop
mov
popf
push
int3
jo
mov
out
imul
inc
out
fimull
or
lods
imul
les
out
jg
sub
mov
adc
ds
adc
mov
push
cmpl
xchg
jmp
ds
pop
sahf
outsb
sub
aaa
in
pop
sub
insb
das
out
push
sub
mov
test
add
jecxz
fidivs
fstl
test
nop
jns
cmp
clc
dec
jle
jb
mov
push
cmc
jae
inc
aam
lea
insb
test
imul
inc
arpl
dec
jnp
dec
adc
lods
bound
negb
sbb
and
imul
clc
jb
ficompl
in
out
ja
or
jne
sub
aas
push
in
pop
fwait
mov
jae
ja
cld
fildl
in
jle
dec
fistl
movsb
fdivrl
mov
mov
ficompl
mov
cmpsb
inc
pop
fucomip
loopne
or
fdivs
movsb
pop
cmpsb
mov
out
cwtl
dec
adc
out
cmpsl
inc
shll
orb
int3
lret
sbb
push
loope
inc
das
in
push
sti
dec
jne
inc
dec
addr16
pop
xchg
test
hlt
out
xchg
push
mov
jle
pop
je
or
cmpb
push
pop
inc
inc
insl
out
cmp
inc
fucomip
mov
mov
movsl
or
fmull
cmp
shll
adc
xchg
cmc
dec
inc
daa
repnz
test
adc
or
mov
fbld
xchg
nop
fldcw
dec
mov
xchg
int3
pop
push
inc
jp
lea
movsb
lods
int
cmp
add
clc
fcomps
inc
stos
ss
mov
xchg
mov
push
and
subl
iret
shll
sbb
dec
mov
imul
lcall
pop
inc
add
lods
subl
add
lds
cmp
mov
push
mov
lret
push
rclb
pop
lds
mov
ss
jne
push
test
push
sahf
push
loopne
mov
dec
dec
fildll
mov
pop
hlt
mov
leave
sub
pop
pop
push
push
or
rcrl
clc
jns
push
pop
stos
sbb
aam
jge
imul
cmpl
bound
push
sbb
lds
ret
or
lods
fldln2
hlt
mov
sub
mov
aam
mov
push
add
inc
push
or
mov
retw
or
bound
cmpsb
add
cli
mov
lret
test
pop
leave
cmc
testb
adc
dec
mov
adcl
add
xchg
adc
push
fst
shr
xor
push
dec
int3
out
xchg
mov
adc
clc
test
inc
popf
inc
outsb
les
aaa
repz
dec
or
mov
dec
adc
and
in
inc
and
popf
cld
sub
loope
cmc
ja
sub
cs
mov
cmp
cli
loop
mov
icebp
mov
popf
imul
pusha
xor
rcrb
leave
sub
sub
sahf
jmp
push
testl
leave
imull
gs
jmp
sar
push
mov
mov
aam
fwait
cmc
cld
test
daa
jp
push
std
dec
xor
leave
cmpsl
mov
mov
sbb
mov
push
and
pop
adc
xor
cmp
aaa
cmp
pop
fldcw
cmp
rorl
pusha
lods
loop
pop
fidivrl
movsl
cmp
adc
test
inc
or
cmc
iret
xor
arpl
pop
in
movsl
inc
sub
mov
mov
or
or
push
loopne
cmpsb
jne
pop
pushf
das
outsb
mov
push
roll
pop
es
mov
mov
push
and
pop
fwait
cmp
mov
outsb
jns
test
lock
ss
jmp
loopne
xchg
add
sub
mov
fwait
mov
mov
push
lahf
mov
sub
inc
insb
mov
bndstx
das
rclb
and
pop
inc
mov
mov
cli
jp
add
mov
sub
sbb
inc
sarb
jle
xor
sub
lock
mov
push
jecxz,pn
clc
sahf
out
sbb
mov
lret
xor
mov
cmp
das
and
leave
jb
mov
push
faddp
jne
lods
pop
mov
nop
daa
cs
dec
mov
push
xchg
xor
cmp
cmp
mov
sbbl
jae
in
dec
lods
call
xchg
push
xor
andb
idivb
jmp
xor
jp
subl
xorl
mov
mov
adcl
pop
ds
out
mov
mov
mov
std
xchg
cmp
out
insl
lea
loopne
sub
and
or
xor
lret
aaa
bound
add
clc
lods
xor
clc
cmp
mov
jp
test
inc
bound
sub
out
sub
outsb
je
inc
bound
adc
mov
xor
scas
cmp
xor
aas
cmp
jne
dec
add
arpl
xchg
adc
add
test
fisubl
leave
sub
xor
adcl
pop
and
sbb
xchg
mov
test
mov
in
repnz
sbb
or
ficompl
inc
cmovp
inc
pop
out
hlt
sub
shll
mov
rcll
xchg
lock
sti
add
jo
mov
fcomi
xor
dec
fistl
ljmp
fsubp
push
jb
fisubrs
fisubs
and
sub
xchg
push
insb
push
xchg
and
jo
cwtl
leave
in
dec
int
daa
jp
sbb
push
mulb
mov
gs
mov
incb
fnstenv
sarl
and
adc
fisttpll
enter
jecxz
imul
loope
inc
inc
out
int
push
jbe
ja
rorl
pop
inc
xchg
mov
imul
in
repz
jl
jb
push
daa
insl
dec
push
jl
iret
fldcw
cmpsb
icebp
push
sbb
push
int3
ret
add
adcb
inc
jmp
clc
in
out
inc
cmp
outsl
out
jnp
mov
enter
out
ljmp
fmulp
lret
call
push
iret
pop
xchg
inc
gs
sbb
loopne
jne
out
mov
sbb
insb
ror
imul
bound
xchg
add
xor
orb
ja
ficompl
sub
movsb
fcmovnu
jg
pushf
adc
loopne
fimuls
add
and
fbld
movsb
orb
mov
repnz
pop
mov
test
movsl
imul
and
shlb
mov
dec
in
mov
pop
mov
sbb
cld
and
in
and
push
das
fisttps
addr16
pop
sub
xchg
push
push
fxch
mov
push
inc
aam
push
inc
mov
nop
mov
mov
mov
push
xor
outsb
mov
push
pop
push
mov
mov
pop
daa
daa
pop
outsb
sbb
xchg
mov
xor
fimuls
cltd
cmp
mov
cmp
cmp
test
test
insb
ret
shrb
loop
cmpsb
lahf
lret
movsl
aad
dec
aas
inc
test
repz
push
mov
mov
aas
jle,pt
lcall
mov
mov
xor
adc
fnstsw
les
mov
push
call
inc
ret
mov
jns
xchg
jge
and
stos
stos
pop
fiaddl
inc
iret
or
addb
dec
sub
cmc
test
loope
xor
pop
aas
loope
pop
lea
fabs
test
push
mov
int
adc
sahf
and
jmp
lret
push
gs
shl
mov
cli
outsl
sbb
stc
dec
mov
jnp
loopne
mov
cltd
dec
fmull
jo
aaa
dec
add
insb
sbb
pop
ljmp
jecxz
push
mov
push
paddb
gs
lea
sbb
js
insb
cmpsb
jmp
mov
cwtl
popa
mov
xor
fdivrs
mov
xchg
pushf
cwtl
mov
sarb
movsb
aam
nop
addr16
andb
inc
adc
mov
xchg
push
add
push
pop
lods
jne
shl
push
into
insl
push
or
jns
sub
jb
mov
add
pushf
ret
mov
mov
les
sub
ss
faddp
inc
std
fstl
xchg
gs
out
inc
sub
mov
iret
aam
roll
jp
enter
cld
cltd
fidivrl
imul
dec
add
mov
jo
mov
fwait
dec
test
jae
push
pop
add
jae
lds
popa
sarb
pop
repnz
lahf
xor
fildll
aad
pop
add
aas
pop
mov
inc
sub
mov
mov
jecxz
ret
jae
xchg
or
push
push
pushf
das
cltd
mov
int3
scas
xchg
jbe
add
pop
adc
subl
adc
xor
std
mov
xlat
addr16
jnp
nop
stos
xchg
int
les
pop
andl
push
ret
lea
push
and
mov
int
sbb
daa
dec
xchg
and
int
add
dec
loopne
stc
xchg
in
lret
bound
fdivrl
inc
rcrb
aam
pop
add
mov
and
loop
cs
outsb
add
out
fbstp
sahf
je
dec
dec
mov
insb
cltd
add
xor
outsb
pop
jns
mov
ret
sub
fsubrs
mov
push
jnp
mov
daa
push
and
outsb
in
jb
inc
shll
sub
add
cmpsb
fldl
ss
jne
fdivs
push
divl
mov
mov
jo
add
movsb
push
js
mov
fld
stos
push
outsb
out
fs
jmp
mov
mov
inc
mov
mov
mov
mov
xchg
dec
mov
jl
rcll
popf
xor
mov
sub
movsl
ds
and
lcall
sub
add
fsubrs
add
imul
leave
fiaddl
pop
fldenv
outsl
pushf
jno
xlat
or
and
sbb
pop
add
or
movb
push
lret
mov
mov
xchg
pop
fwait
imul
inc
push
or
fs
mov
les
loop
dec
mov
lods
nop
add
ror
push
pop
pop
xchg
pop
sub
mov
gs
insl
pop
mov
jge
pop
imul
push
mov
jno
popa
lds
rclb
clc
je
aam
fildll
and
sti
sti
aas
mov
push
icebp
mov
xlat
aam
mov
add
mov
mov
mov
popa
les
jp
sbb
popf
in
test
pop
scas
xchg
or
js
loope
jl
sbb
inc
addr16
sub
popa
imul
cltd
xlat
and
xor
fidivl
inc
xor
cld
test
mov
icebp
pop
cmpsb
arpl
test
addr16
pop
add
mov
shrl
fcmovu
les
pop
xor
shl
jno
sub
lret
pusha
sub
mov
or
addr16
dec
imul
sbb
fdivrl
xchg
test
xchg
lds
jae
sub
out
ret
clc
inc
cmpsl
int3
mov
out
pop
movl
je
popf
sbb
pop
jp
adcl
or
cmp
ficoms
outsb
inc
jae
out
fildl
hlt
jae
dec
cmpsb
sbbl
out
mov
bound
sub
mov
lret
pmullw
jbe
sub
mov
adc
movb
jl
std
icebp
loope
repnz
pop
out
and
mov
mov
cld
aaa
int3
cmp
add
movsl
push
mov
subl
inc
in
ds
shrl
loop
and
xchg
shrl
loop
pop
lret
push
push
test
aaa
stos
stos
lds
sahf
xchg
push
orl
cmp
cmp
scas
or
add
ds
xchg
pop
repnz
enter
rcrl
sti
cmpsb
xchg
lret
dec
mov
out
push
inc
add
out
rcll
inc
xchg
lods
sub
inc
out
js
roll
cli
mov
mov
pop
cmp
test
mov
ret
mov
mov
mov
xor
xor
out
sbb
mov
mov
dec
add
lret
ja
repz
mov
popa
adc
cmc
adc
xor
aad
in
sub
fisubrl
orb
fcoms
xor
pop
loopne
sbb
inc
fisubrl
fs
ficompl
sbbl
xor
icebp
data16
scas
pop
out
cltd
gs
push
dec
mov
stc
jno
mov
subb
xchg
cmc
fisubrs
push
add
adc
cmc
cs
cmp
lret
cwtl
inc
jmp
ljmp
icebp
mov
push
pushf
fisttpl
out
or
lods
lret
adc
daa
dec
hlt
rcll
or
lret
mov
insb
cld
xor
xor
loop
imul
sbb
xchg
aad
fstps
dec
jo
lahf
dec
inc
mov
mov
xchg
lret
dec
bound
loop
dec
and
add
out
pop
jp
aam
roll
std
and
leave
mov
scas
push
push
subb
fistps
into
ja
adc
mov
add
call
xorl
scas
sub
push
pop
sub
js
es
icebp
lret
inc
mov
dec
data16
ds
mov
xchg
inc
add
or
push
movsl
add
mov
and
jp
test
mov
jl
testl
cmp
and
jecxz
and
mov
and
add
ds
or
mov
mov
xchg
push
jl
xor
dec
repz
jne
or
sbb
adc
inc
jl
movsl
cmp
inc
fstp
int
cwtl
mov
push
dec
scas
in
in
bound
jge
popa
jae
jmp
jmp
add
test
iret
cmp
fidivrl
pusha
rcll
test
fists
cmp
adc
jne
mov
push
dec
adc
aad
or
pop
fsubr
and
push
mov
jp
mov
inc
sbbb
sti
xchg
and
mov
pushf
data16
outsb
adc
push
cwtl
xchg
inc
xchg
xchg
add
xchg
es
out
mov
lea
mov
jl
ja
mov
mov
mov
cmc
fldt
mov
inc
dec
loop
sub
push
dec
scas
lock
add
push
test
movsb
push
pop
mov
enter
hlt
cmc
add
loop
cld
ss
pop
jo
pop
hlt
or
sbb
dec
fdivl
test
and
scas
std
aam
inc
and
xor
xchg
inc
out
xor
xor
pushf
mov
dec
adc
ljmp
push
loopne
aaa
in
sbb
insl
js
mov
jbe
addr16
inc
iret
mov
xchg
stos
roll
aaa
xchg
mov
and
xor
in
xchg
jnp
cmp
jne
xor
xchg
enter
aam
lcall
dec
pop
push
inc
and
fsubl
push
aaa
xchg
pop
fstps
add
and
cmpsb
adc
sub
cmp
sub
rolb
sbb
xchg
sbb
or
fistpll
nop
imul
add
lret
in
pop
int3
pop
repnz
pop
xchg
adc
iret
scas
xchg
pushf
and
xor
pop
mov
loop
ja
push
sub
adc
out
repnz
jecxz
pop
imul
test
add
je
xchg
jecxz
jbe
add
mov
mov
mov
sbb
inc
inc
sbb
adc
fisttps
loopne
jb
rol
mov
mov
in
dec
cli
cld
mov
lea
in
mov
mov
mov
lods
pop
in
and
jo
pop
mov
or
jmp
loope
ljmp
sub
pop
sti
mull
inc
mov
test
mov
cmp
dec
xchg
popa
stc
addb
ret
cs
jp
les
dec
jae
cltd
mov
mov
jmp
inc
inc
cmpsb
ret
add
or
jb
mov
mov
mul
lock
cmpsb
mov
sub
bound
faddl
xor
ficoml
add
clc
rclb
cmp
xchg
pop
jge
ret
xor
mov
cmpsl
xchg
xchg
movsl
mov
mov
pop
scas
add
jns
or
sbb
rcr
in
fimuls
int3
xchg
nop
mov
cli
jbe
mov
mov
sbb
or
popa
mov
loope
mov
mov
jae
ret
popa
mov
inc
sub
dec
enter
les
notb
mov
mov
lcall
jae
mov
stos
adc
xchg
mov
cmpsb
aam
cld
insb
divb
insb
pop
add
das
dec
jmp
cmpb
hlt
gs
mov
stos
jecxz
loop
add
es
cmp
jp
sub
movsl
fisttps
fcoml
popf
adc
ror
data16
push
jg
and
in
js
cmp
and
pop
pop
push
notb
pusha
or
out
mov
inc
ret
sub
sahf
adc
arpl
test
decb
pop
in
ret
mov
push
loopne
cmp
push
movb
mov
jp
inc
xchg
adc
xchg
and
scas
inc
mov
repnz
sub
arpl
hlt
sbb
and
cli
scas
and
cmpsl
mov
cltd
add
jp
cmc
adc
divl
add
sbb
je
mov
xchg
jne
and
cwtl
jl
scas
movsl
pop
xchg
push
push
jbe
aaa
sub
adc
sub
push
xor
fdivs
addr16
xor
enter
mov
ja
or
fsub
push
dec
jbe,pn
movsb
adc
stos
push
xor
xchg
movsb
pop
fdivr
cli
or
ja
insl
xchg
adcl
not
out
dec
mov
inc
mov
jg
dec
nop
jno
dec
stos
mov
mov
xlat
xlat
cmp
pop
adc
das
jmp
pop
out
data16
pop
jmp
add
les
inc
aam
test
cmpsl
ret
pop
sbb
push
dec
mov
inc
out
outsl
fwait
dec
lods
mov
jb
aam
les
push
mov
push
sub
cmpsb
in
pop
orb
xchg
cs
sub
mov
insl
jne
xchg
cld
arpl
push
xchg
mov
xor
or
push
jl
add
scas
dec
xchg
pop
jle
into
int
repz
cli
loope
lds
arpl
xor
movsb
or
inc
in
sbb
jbe
xchg
inc
test
add
into
mov
add
cmp
lods
mov
jl
adc
mov
lahf
movsl
xchg
xchg
cmpsb
nop
les
sarl
dec
aam
rclb
dec
into
pop
push
mov
xchg
pop
sar
dec
dec
enter
adc
push
push
lods
and
sbb
lea
cltd
gs
jmp
mov
sbb
test
jl
add
mov
shlb
loope
jg
popa
xchg
jl
mov
mov
pop
insl
into
add
mov
lret
ljmp
jnp
mov
inc
addr16
mov
mov
dec
jge
jp
xlat
xchg
enter
mov
iret
fucomip
lock
lcall
pop
adc
adcb
sub
pop
add
mov
loope
imul
cmpsl
add
xorl
cltd
test
inc
jmp
xchg
cmp
inc
fwait
and
addb
inc
divl
shlb
push
addl
xchg
mov
decb
popa
and
inc
fs
cli
ds
add
jbe
pop
add
adc
inc
add
adc
sbbl
repnz
loop
mov
mov
outsb
pop
repnz
jo
add
and
imul
sub
int
and
mov
pop
jno
adc
jns
xchg
in
jb
test
dec
out
add
loopne
fldl
xchg
cmpps
push
lret
lods
dec
ljmp
int3
xchg
dec
insb
mov
repz
movsb
pop
cs
popa
or
stc
cmp
jle
std
xchg
mov
sbb
mov
aam
sbb
dec
enter
nop
dec
mov
lcall
push
rcrl
pop
mov
cmp
push
pop
push
xchg
mov
scas
les
mov
jbe
repnz
xchg
jp
pop
out
add
jg,pt
fcoms
in
cmpsl
addr16
inc
enter
movsl
lahf
sub
sahf
repnz
pop
mov
fildll
jle
je
xchg
jmp
xlat
std
sub
cwtl
pusha
push
mov
mov
ret
outsl
ffree
fdiv
add
inc
les
shrl
call
out
mov
adc
mov
rol
jecxz
inc
dec
ds
call
cmp
mov
enter
pop
insb
negl
cli
mov
es
pusha
jp
mov
push
lock
mov
divb
add
adc
push
jns
xchg
sbb
jg
stos
cld
ja
loop
jmp
ds
inc
data16
xchg
ret
pop
test
dec
nop
sub
jns
dec
sbb
lods
cmp
push
pop
jo
je
push
in
aaa
out
lock
xchg
leave
sbb
sbb
mov
in
mov
push
or
scas
mov
sub
sub
inc
jle,pt
test
xor
into
jg
mov
pop
mov
int
sub
add
push
inc
sarl
imul
fnstsw
movsl
shll
cmpsb
enter
imul
dec
iret
rorb
pop
or
and
pop
pop
test
or
xchg
and
sbb
cmpsl
fnstenv
adc
sbb
out
mov
mov
adc
cmp
adc
aas
mov
leave
jne
fs
or
imul
out
lcall
icebp
adcl
orb
mov
shl
fstl
lret
push
repz
shlb
js
xchg
pop
and
mov
imul
insl
rol
shlb
xchg
mov
div
or
jne
lret
cmpsl
pop
sbb
cmp
clc
mov
adc
mov
out
movsb
dec
data16
and
push
dec
notb
jno
sarb
mov
aad
jg
addb
sbb
ss
push
sub
insb
add
push
lods
ljmp
test
scas
out
test
push
divps
adc
fldenv
mov
or
jg
repnz
jb
hlt
lods
mov
add
sahf
push
jge
cmp
inc
push
lods
test
jmp
shl
stos
ja
mov
out
fidivrl
or
pop
or
dec
rcl
or
push
cmp
fadd
imul
xchg
sbb
inc
xchg
ror
insl
js
aas
xor
jmp
cmp
or
dec
mov
sub
sub
lahf
sti
xchg
xchg
leave
int
lahf
pop
cmp
dec
or
or
jne
popf
cmp
inc
stos
pop
push
rep
dec
lea
stc
xor
imul
lock
and
mov
call
mov
testl
and
pop
lret
popa
sahf
mov
out
aam
add
fstenv
cmp
pop
cmp
mov
js
mov
sbbb
mov
jne
jae
cli
push
or
add
push
jbe
int3
into
mov
hlt
nop
mov
fwait
aam
and
mov
loopne
sbb
cmpsl
fimuls
cmp
fisubrl
dec
addl
out
sub
sbb
popf
xchg
sub
inc
fcompl
jb
fstl
xchg
inc
aaa
inc
aam
dec
push
sub
adc
push
shlb
imull
push
or
push
movl
scas
dec
cltd
mov
shlb
in
int
jp
dec
push
cmc
sbb
std
cmp
adc
movsb
mov
rclb
fs
addr16
pushf
out
vcvtsi2sdl
lcall
js
jecxz
rcr
in
js
shl
xchg
xchg
mov
ljmp
mov
mov
mov
mov
stc
dec
xor
cmp
mov
and
add
lret
sti
test
add
mov
or
mov
cli
ljmp
push
jns
insb
dec
into
imul
fadd
test
out
aam
mov
push
dec
or
sub
or
xlat
ret
sbb
xor
or
out
mov
int3
add
mov
sbb
inc
jae
mov
pop
mov
hlt
xchg
sti
add
jp
adc
test
push
psrld
push
lcall
xor
mov
mov
push
ret
xlat
mov
iret
out
adc
pop
xchg
scas
test
xor
mov
dec
cmp
mov
xor
mov
aam
sub
in
stos
jle
iret
xchg
inc
jbe
jb
imul
ret
pop
cmp
add
pop
mov
pop
push
push
loopne
and
out
into
add
dec
out
ss
inc
shll
push
push
xor
pop
xchg
std
sbb
adc
push
and
adc
loope
outsb
pushf
ljmp
insb
xchg
js
xchg
and
into
adcl
mov
cs
cld
dec
out
fiadds
imul
popa
clc
push
mov
mov
lods
push
fnstenv
das
jmp
adc
sbb
xor
mov
add
pcmpeqb
int
out
xor
push
scas
in
pop
adc
jo
dec
mov
jecxz
pusha
mov
iret
and
data16
dec
loopne
sbb
mov
aam
rclb
loop
daa
test
lock
add
shll
or
sub
adc
call
inc
dec
mov
and
shll
xchg
out
ds
faddl
clc
push
rclb
adc
fidivrs
dec
outsl
or
jne
jl
cli
adc
xchg
sbbl
addr16
mov
or
fistpll
pop
sub
dec
dec
cmc
les
fimuls
nop
fstps
adc
outsl
pop
pop
pop
leave
mov
mov
sbb
mov
scas
cmp
fsubl
xchg
add
or
add
aam
outsl
lret
mov
jns
adc
sbb
aas
pop
push
mov
pusha
repnz
lret
mov
or
cmpsb
xchg
lret
std
push
outsb
push
icebp
lods
sti
aad
sbb
ret
dec
jbe
cmc
ja
add
jmp
les
stos
jp
mov
jb
pop
addr16
outsb
push
pushf
movsl
cmpsb
mov
lcall
inc
mov
es
lret
pop
shrl
aaa
xor
push
mov
sbb
mov
enter
ret
sbb
inc
stos
push
xlat
cmpsb
int3
and
sub
lock
inc
jbe
push
dec
inc
add
jmp
sbb
aad
insb
addr16
js
jmp
call
push
push
lods
add
push
in
sbb
jl
sub
dec
adc
rorl
lret
in
xor
adc
in
pop
movsb
loopne
data16
ficomps
pusha
and
mov
cmp
cs
insl
and
sahf
inc
adc
cltd
and
lret
xorl
out
inc
outsb
mov
mov
rol
sbb
pop
out
std
fiadds
xchg
es
add
pop
cmp
inc
cmpsl
cli
mov
jno
and
inc
les
pop
shrl
mov
mov
dec
cmp
ss
pusha
ljmp
ss
dec
xor
xchg
mov
mov
cwtl
adc
add
test
fstpt
fdivrl
xlat
or
cmpsb
sbb
mov
add
out
push
or
inc
clc
push
dec
pop
jl
sub
dec
jg
cmp
lret
jmp
xchg
subl
xor
ret
xor
out
xchg
frstor
rolb
loop
jmp
dec
adc
xlat
mov
lret
cmc
mov
in
push
fs
push
pop
outsl
jle
xchg
ret
aad
movsl
ja
aad
popf
pop
shlb
hlt
cwtl
lret
in
and
xchg
xchg
mov
movb
sbb
xor
shll
sub
xchg
mov
and
dec
dec
int
inc
cmpsb
dec
addr16
jae
adc
into
or
popa
addl
ss
cmp
pusha
test
ret
movsb
addb
push
mov
lret
test
out
adc
outsl
scas
mov
testb
dec
pusha
adc
xor
xor
addr16
das
pop
outsl
push
push
cmpsb
lahf
jo
repnz
pop
out
and
mov
cltd
or
push
sbb
cwtl
addb
pop
cli
lds
enter
dec
call
xor
cmp
out
dec
jns
xchg
pop
movsl
jp
fcmovnb
shlb
divb
jno
ret
jb
jo
test
lock
frstor
rclb
jmp
jns
loop
enter
adc
leave
je
mov
cmc
inc
push
push
popa
or
and
or
cli
pop
xchg
sub
jge
icebp
jae
stos
dec
decb
cltd
in
jmp
sub
idivl
dec
fs
add
xor
shrl
jecxz
and
or
dec
push
les
sbb
sbb
fldl
sbb
mov
scas
adc
repz
xchg
or
cmpsl
jo
test
aas
mov
mov
aaa
xlat
or
jl
adc
pop
rcl
aaa
cmpsb
mov
stos
push
jns
dec
fwait
dec
imulb
fsubp
adc
shr
sarb
inc
cli
and
xor
add
in
stos
out
xchg
jns
jmp
pcmpeqd
mov
push
mov
bound
sbb
outsl
out
push
insl
mov
fs
adc
and
leave
rep
insb
jp
not
or
jbe
sbb
sbbb
xchg
lods
and
add
out
scas
jnp
sbb
inc
mov
lea
dec
insl
cmpsb
adc
and
mov
cwtl
call
popa
and
das
pop
cld
repz
popa
lods
inc
cmp
cmp
jae
cwtl
call
sub
pop
mov
lods
lds
gs
pop
aas
mov
ss
testl
and
mov
pop
insb
stos
jge
push
ret
movsb
push
add
je
push
or
aam
dec
jne
outsb
cs
rclb
maskmovq
xchg
out
out
cltd
xor
sbb
frstor
icebp
mov
addr16
xchg
inc
cmc
jg
mov
sub
inc
or
das
inc
dec
mov
dec
mov
sub
xchg
testb
test
jb
leave
mov
testb
popa
test
cmpsl
adc
cld
xchg
adc
sub
es
mov
testb
dec
add
out
cmp
scas
pop
dec
outsb
pop
imul
out
daa
jne
mull
jl
xor
cmp
add
or
push
jns
mov
das
xor
mov
dec
out
in
ret
test
xchg
lcall
pop
add
jns
icebp
add
cli
nop
jbe
movsl
mov
pop
or
out
je
sbb
jge
or
xor
cltd
adc
sub
jo
jle
adc
xchg
xchg
imul
jg
test
fs
cmp
jbe
vmovups
sbb
stos
mov
nop
jno
pop
repz
xor
adc
test
xchg
call
dec
aad
lods
push
and
jo
mov
pop
jg
mov
enter
add
movsl
mov
or
and
xor
imul
or
ljmp
or
fldcw
jns
xchg
push
xchg
lahf
fdecstp
pusha
in
clc
addl
nop
fldt
jo
outsl
les
mov
orb
mov
push
hlt
jnp
xchg
out
dec
imul
aam
les
ret
cmpsb
aad
es
repnz
mov
ljmp
pop
test
pop
je
test
sbb
push
test
or
cmpsb
xchg
jp
dec
adc
add
pop
imul
out
and
jge
aad
pushf
lahf
push
in
sub
repnz
test
xchg
cmp
movsb
arpl
inc
xchg
out
jae
fidivrs
jp
sahf
repz
ficoml
btc
in
pop
mov
out
jne
hlt
test
xor
aam
sti
sub
push
adc
xchg
mov
xchg
add
inc
orb
or
push
sub
inc
outsl
cmp
sub
and
mov
mov
and
jmp
push
mov
inc
xchg
push
testl
dec
inc
cld
imul
lret
push
pop
mov
pusha
jp
inc
jecxz
pop
mov
mov
adc
shll
leave
cmp
and
xchg
stc
jbe
push
pop
inc
sbb
xor
repnz
mov
lods
mov
mov
sbb
adc
stc
xor
mov
mov
shll
out
mov
out
cli
jb
out
mov
inc
lds
inc
test
cmp
pop
test
mov
loop
cltd
lea
dec
push
scas
pop
mov
mov
cwtl
movups
mov
loopne
sub
fs
sbb
icebp
je
xchg
xchg
in
rclb
adc
mov
pop
dec
int3
xchg
shl
aas
mov
fldl
cs
outsb
popa
jnp
add
fsubs
mov
mov
mov
mov
mov
test
cltd
push
gs
mov
cli
jge
popl
add
pop
arpl
out
sbbl
daa
cld
gs
xchg
push
and
jl
dec
je
sbb
xlat
test
sub
xchg
jae
add
orb
sbb
pop
data16
ds
sbb
movsb
xor
out
and
add
sub
jo
scas
insb
xchg
bound
pushf
pop
subb
or
test
cmp
adc
loope
repz
mov
adc
mov
jno
cmp
push
out
lods
nop
shld
mov
adc
mov
outsl
imul
in
bound
sbb
stc
leave
jns
mov
xor
stos
into
pop
inc
add
outsl
and
mov
inc
pop
addr16
xchg
das
psubq
in
mov
out
repz
mov
aas
imul
repnz
jle
sbbb
pop
xchg
shlb
lods
insb
inc
or
push
xor
insl
xchg
repz
dec
jp
lcall
and
push
push
daa
sbbb
std
sub
div
mov
in
movsl
sbb
add
lock
std
and
cmp
mov
cmpsb
iret
add
outsb
pusha
imul
cmpl
addb
xor
jno
inc
and
ja
and
loope
loope
xchg
xor
mov
out
cld
fs
call
mov
lcall
cmpsb
push
loope
arpl
out
les
popf
aas
fsts
add
mov
in
imul
ljmp
dec
into
mov
adc
dec
xchg
pushf
out
or
push
mov
sbb
mov
fdivrl
xchg
jae
xchg
mov
mul
add
push
mov
testl
xchg
test
sub
sbb
and
insl
xor
lret
mov
rcll
clc
mov
movsl
mov
sbb
fdivs
aas
out
sbb
outsb
and
jne
dec
addr16
push
push
rcll
insb
daa
mov
xor
and
xor
inc
imul
cld
jns
ret
mov
sub
out
add
dec
fs
lcall
adc
aas
xchg
nop
outsl
pop
call
into
lock
in
loopne
add
nop
bnd
icebp
out
mov
pop
mov
mov
push
outsl
icebp
out
mov
fmull
fldl
and
das
rolb
lods
xor
adc
cs
mov
lock
or
popf
cmp
and
andb
bound
pop
sub
push
xor
push
or
mov
or
xor
bound
shl
pop
lock
ret
xchg
adc
in
test
pushl
mov
mov
fadds
ds
push
lret
ds
add
jge
and
jle
xchg
test
shll
inc
sbb
iret
inc
inc
lods
dec
push
dec
mov
icebp
addr16
xor
and
aad
aad
fst
mov
sti
nop
pushl
pushl
out
jg
pop
jno
jno
jno
out
and
test
pusha
lea
mov
sti
negl
adc
sbb
sub
scas
cmpsl
add
jmp
cld
insb
ror
sub
pop
sti
jo
test
pop
mov
cltd
dec
mov
repnz
call
sub
fsubl
cmp
rcrb
rorl
pusha
or
cmp
mov
push
xchg
mov
inc
sbb
ficoml
cmp
sub
fists
clc
push
or
bound
jg
mov
pop
in
sarb
pop
adc
push
xor
in
in
lods
bnd
loop
xorb
scas
xor
jbe
shlb
js
mov
leave
outsl
mov
lea
aad
push
mov
adc
xchg
pop
lret
mov
mov
inc
ror
ret
jecxz
and
mov
mov
sub
adc
sub
inc
jg
mov
or
adc
jb
sti
lock
pop
or
jne
imul
add
ja
sub
mov
cli
cmp
inc
xor
sub
test
in
daa
dec
push
rol
jo
nop
inc
push
movsl
in
push
insl
testl
mov
add
and
cmp
pop
in
loop
out
insl
jno
adc
sbb
jle
sub
mov
ljmp
fnsave
adc
out
jae
dec
mov
ret
aad
ja
pop
pop
ret
repz
and
popa
lods
and
addr16
jl
mov
frstor
pop
push
ffreep
test
dec
dec
add
sti
dec
lock
adc
cmp
out
inc
popf
xor
nop
xchg
and
dec
mov
push
mov
and
mov
hlt
and
addr16
pop
adc
addl
hlt
daa
and
sub
jbe
daa
inc
cmp
add
loop
shrl
xchg
cld
enter
pop
scas
jle
pop
ja
sahf
fmul
jge
das
sbb
add
jns
mov
insb
mov
push
sbb
mov
push
int
rol
into
mov
add
stos
and
insl
sbb
cmp
cmp
test
pop
sub
ret
jae
repnz
add
lcall
pop
dec
push
aas
dec
lret
data16
cvtpi2ps
ss
call
inc
dec
xchg
xchg
cmp
sahf
sarb
sub
mov
inc
pushf
sbb
or
dec
adc
add
loopne
xchg
lahf
mov
cltd
sbb
mov
sbb
xchg
pop
xlat
cmc
mov
mov
pop
jbe
dec
movl
out
xchg
std
adc
and
aam
xor
sbb
fldl2e
vhaddps
shrl
jno
adc
push
mov
push
jl
repnz
push
and
loopne
or
mov
jbe
js
mov
add
enter
cmp
pop
pop
repnz
ret
or
lock
outsb
push
jle
out
idivb
popa
mov
loop
and
ja
jge
add
pop
cmc
cmpsb
mov
testb
xorl
push
add
lcall
andb
lods
adc
stos
movsb
push
push
pop
mov
jb
fcompl
sub
jae
in
mov
add
pop
mov
or
fwait
sub
inc
push
sbb
pop
mov
cltd
xor
jae
mov
pushf
or
out
in
es
aam
push
mov
cli
adc
rcrb
data16
bound
add
cmp
add
fwait
jb
or
addr16
das
mov
or
data16
push
icebp
xchg
das
jg
or
inc
dec
loope
pushf
mov
xchg
pop
call
stc
sbb
in
or
add
sub
adc
inc
push
pop
jle
dec
or
cmp
daa
stos
dec
frstor
mov
xchg
aas
fisubrs
push
shld
scas
pop
mov
mov
cmp
enter
pop
insl
out
aaa
add
jge
aaa
adc
std
daa
aam
push
jo
outsl
mov
mov
out
rcll
jne
or
xchg
push
cmp
fldl
cmpb
movsl
leave
sub
add
push
cmp
popf
jns
and
sbb
push
sub
sahf
xor
jns
or
int
cltd
in
ret
xor
ficomps
loopne
add
mov
cmp
sbb
lds
stc
sub
repz
stos
sbb
in
das
flds
sahf
jno
and
sub
cmp
cld
ret
xor
sahf
js
mov
mov
adcb
lea
test
add
jbe
adc
mov
or
jecxz
iret
cmp
mov
inc
lret
cmpsl
insl
mov
pushl
push
icebp
lahf
mov
inc
jp
sbb
hlt
shrl
jl
mov
add
inc
or
lahf
cmc
iret
push
mov
dec
dec
xorb
stos
mov
fisubs
mov
imul
outsb
xchg
loope
lods
mov
test
fbld
test
mov
pop
ljmp
dec
dec
or
inc
or
ss
push
jae
stos
sub
sbb
inc
and
mov
inc
dec
sahf
ss
or
addr16
or
lods
xor
jno
cmc
push
filds
mov
icebp
imul
fmull
aaa
mov
fs
inc
or
mov
pop
mov
out
rcl
inc
sub
mov
in
popf
dec
out
lret
xlat
push
dec
lods
out
inc
xbegin
xor
repnz
call
inc
ret
hlt
popf
addr16
xor
cmp
lods
sbb
and
repnz
scas
fldenv
aaa
pop
or
aam
cmp
mov
sbb
xchg
pushf
dec
add
jg
fidivrl
cs
fldenv
sub
cmp
mov
fistl
add
inc
push
and
addr16
addr16
ror
mov
push
dec
inc
js
js
inc
push
in
cs
mov
xor
add
inc
jbe
into
icebp
dec
push
and
xchg
repz
fnsave
iret
hlt
mov
adc
rcrl
mov
mov
pop
inc
nop
das
push
add
pop
fsincos
pop
es
push
adc
ficompl
xchg
lret
add
sahf
dec
push
mov
jae
inc
fstpl
rcr
or
push
inc
out
push
insl
mov
pop
or
sub
outsb
mov
icebp
insb
daa
push
sbb
inc
call
fnstsw
adc
mov
mov
es
cld
or
pop
pop
sbb
mov
sar
xor
adc
sub
mov
jnp
cmpsb
jbe
and
shll
popf
daa
iret
pusha
cwtl
js
sub
hlt
push
inc
nop
sub
adc
out
mov
dec
call
or
arpl
out
xor
xor
jmp
movsb
seto
subb
lret
ficoml
push
es
insl
and
pushw
sbb
stc
dec
dec
fs
int3
inc
mov
loop
pushf
sar
inc
cwtl
or
sbb
add
ds
int3
fs
pop
daa
mov
add
in
lret
ljmp
outsl
pusha
out
cld
enter
sbb
in
pushf
stc
cmpsl
ret
push
loope
gs
mov
pop
cmp
icebp
rcrb
fsubp
addr16
dec
cmpsb
sub
mov
ss
mov
sbb
dec
jp
pushf
cwtl
shl
mov
xchg
jnp
push
push
mov
inc
sbb
aam
jmp
clc
fs
pop
cmp
adc
mov
ret
aam
pop
aas
cmp
dec
xlat
outsl
push
rcrl
bound
int
jp
jns
pop
jne
push
jbe
add
lret
mov
pushf
in
nop
push
mov
push
push
pusha
movsl
xchg
jp
addr16
cmp
dec
cld
ret
loop
test
pop
mov
in
sarl
adc
push
mov
enter
xchg
stc
inc
movsb
xchg
push
leave
xor
rcll
arpl
cmc
aad
sbb
js
xchg
sub
arpl
mov
dec
rol
push
add
adc
sbb
jno
adc
mov
lret
notl
xor
jmp
ds
jae
sub
cmp
sbb
adc
les
testb
jae
test
outsl
scas
jns
pop
xchg
pop
das
outsl
rcrl
jo
addr16
dec
xor
inc
sbb
cmpb
scas
add
add
js
and
mov
jp
das
pop
inc
iret
cmc
les
fisttps
outsb
xor
es
fwait
leave
xor
test
add
movsl
xchg
gs
mov
loopne
sbb
mov
imul
adc
adc
movsl
jp
pushfw
loope
push
sarw
or
jmp
lea
sahf
inc
scas
pop
push
push
or
add
mov
dec
imul
test
and
push
rolb
cmp
push
xchg
pop
out
mov
jmp
sub
clc
or
arpl
pop
pop
push
dec
push
mov
push
or
xchg
loope
xchg
popf
push
and
ret
pop
mov
mov
loopne
movb
es
inc
in
add
inc
dec
arpl
add
mov
stos
call
fisttpl
cmp
push
cmp
and
repnz
or
inc
imul
notb
inc
cmp
addr16
js
psubq
fidivrl
rcl
xorb
out
and
push
call
add
inc
and
popa
adc
inc
xor
pushf
call
lds
test
fnstenv
fadds
lds
stos
dec
xlat
mov
fistpl
xchg
out
jno
mov
lcall
sar
cmpsl
mov
test
sub
mov
repz
mov
imul
inc
arpl
and
cmp
mov
jp
inc
cmp
dec
cvtpi2ps
jns
sub
mov
ror
jecxz
sub
and
mov
pop
mov
in
push
movsb
or
inc
push
loopne
pop
fucomip
mov
movsb
push
stos
sbb
lret
xor
shrb
adc
lret
lahf
push
xor
int
imulb
sbbb
mov
cmpb
push
cmp
inc
lea
ja
lahf
or
cmpsb
and
mov
es
mov
fwait
ret
pop
jg
mov
cmp
cld
push
aam
int
mov
sti
lahf
sbb
jb
scas
test
dec
aad
les
lock
and
into
push
jne
adc
js
jmp
outsl
jle
cmp
mov
jle
adc
fidivs
mov
adc
mov
icebp
cmp
lret
int3
stos
xorl
lret
jp
push
popa
sbb
pop
jl
leave
jmp
aaa
mov
jbe
std
sub
push
lea
sahf
cmp
adc
lods
jb
cwtl
dec
push
sbb
sti
mov
mov
dec
pop
stc
or
push
ror
fbld
fmuls
or
fsubr
shl
lret
mov
xchg
push
dec
aam
mov
jo
fwait
clc
and
xchg
pop
outsb
sbb
cmp
xchg
fidivrs
psllq
add
aad
push
add
cmp
in
or
cwtl
dec
pop
pop
mov
mov
sbb
dec
jae
fnstcw
add
adc
xor
jb
jp
adc
int
push
and
lods
mov
loopne
sub
ds
adc
pop
jle
and
jbe
popa
stos
shrl
pop
push
inc
cli
adc
in
inc
outsb
sahf
adc
sti
push
sbb
or
dec
mov
inc
les
adc
cli
sbb
leave
dec
push
popf
sub
mov
pop
sbbb
mov
sbb
jmp
lods
adc
jp
repnz
outsb
add
pop
sbb
add
shr
popa
lea
mov
dec
lret
repnz
out
andl
mov
pop
pop
sbb
fildll
loope
mov
add
lahf
jno
icebp
inc
pop
jns
xchg
pop
adc
imul
imul
push
dec
mov
cmp
lea
pop
dec
pop
fisttpll
popf
dec
cmp
cmp
xlat
jge
fwait
test
add
or
fnstcw
mov
repnz
dec
loopne
ret
out
lret
sahf
das
cmp
cli
je
mov
or
cltd
adc
adc
scas
mov
pop
fsubs
mov
int
int3
jg
shll
inc
push
xchg
cmpsl
shlb
roll
repz
adc
cmp
outsb
xchg
lock
push
mov
mov
inc
ja
mov
into
mov
ficoms
mov
in
rorb
mov
cmpsb
push
inc
cmp
gs
lret
push
pop
test
pop
pushf
xor
cmp
mov
mov
mov
out
repnz
mov
lock
mov
lcall
jl
sbb
lods
lods
divb
mov
jp
cmpsb
jl
mov
mov
ja,pn
xchg
xor
subl
xchg
std
data16
aas
shl
adc
jecxz
or
in
icebp
mov
subl
xor
popf
mov
jle
test
shlb
sbb
sarb
inc
mov
adc
push
push
cmpsb
jbe
loope
pop
xchg
sub
mov
xchg
shlb
push
aaa
lods
adc
js
pop
inc
sub
ds
mov
ror
push
mov
ficoml
enter
test
movsb
in
adc
mov
pop
push
or
jecxz
dec
sub
xor
mov
adc
sbb
mov
shrb
cmpsl
ret
xor
imulb
mov
int
pop
xchg
daa
mov
hlt
sarl
xlat
xor
sti
ds
xchg
add
cmc
cmp
mov
dec
arpl
popa
dec
mov
add
aas
outsl
jle
loope
and
pusha
cmp
push
jb
inc
cmp
in
dec
daa
cmp
mov
popf
fadds
sti
adc
mov
aaa
es
cmp
in
es
mov
cli
xchg
loope
push
pop
push
cmp
das
cmpb
inc
inc
lock
les
push
jge
push
inc
dec
popf
scas
inc
pop
jle
mov
das
cmp
fists
in
mov
xlat
pop
inc
leave
call
dec
decb
leave
push
pushf
or
jge
into
cmp
inc
mov
xchg
aas
and
pop
mov
or
jge
push
jns
or
addr16
movsl
ffreep
mov
mov
sbb
ficompl
fisttps
inc
rclb
xchg
incb
gs
inc
sbb
lret
adc
inc
adc
repnz
pop
and
nop
jns
imull
pop
cmp
or
xchg
mov
out
call
divl
fistpl
cs
sbbl
int3
mov
out
insl
and
data16
fmuls
lcall
push
lcall
push
ja
insl
out
outsb
or
cmp
pushf
push
add
lea
jmp
clc
es
in
lock
popf
lock
jno
adcb
cli
out
fsubrs
pop
xorl
test
sbb
xor
out
push
sub
les
push
in
out
jns
inc
flds
pop
push
fisubrl
push
xchg
mov
cmp
sbb
pop
xor
imull
cmc
mov
cmc
add
jns
popf
int3
jno
ret
outsl
hlt
aad
xchg
ljmp
outsb
or
push
inc
sbb
outsl
adc
xlat
aaa
mov
rcr
mov
and
adc
std
xchg
ss
cmpsb
sub
stos
imul
mov
pop
sbbl
jmp
adc
push
fs
jl
stc
fcmove
scas
dec
sti
mov
loopne
stos
popf
jge
repnz
data16
rep
mov
adc
add
lods
shll
inc
ljmp
dec
add
inc
data16
dec
push
add
call
movl
push
pop
call
mov
jmp
cwtl
shrl
inc
lock
mov
mov
xor
and
jmp
adc
or
mov
iret
pop
hlt
repnz
dec
push
into
jle
out
fcomp
aam
xorl
test
in
jb
push
xchg
jae
cmp
loopne
scas
addr16
out
pop
adc
jl
mov
or
lea
and
sub
jno
pop
popf
shrb
cmpsb
push
clc
pushf
jbe
pop
cmpsb
push
rcrb
in
and
xor
sub
out
add
sub
iret
in
orb
lock
cmp
push
cmpsl
adc
jmp
pop
or
add
push
add
repnz
div
in
mov
and
loop
scas
mov
iret
inc
sbb
jbe
bound
pop
popf
int3
xchg
call
sbbl
adcl
mov
push
jae
jbe
sub
jnp
mov
adc
shlb
push
ds
ss
or
sti
lret
cld
pusha
aad
imul
add
cwtl
int
lcall
sub
adc
jne
dec
mov
outsb
xchg
inc
dec
adc
inc
mov
cmp
test
icebp
dec
sbb
mov
adc
cmp
sub
mov
mov
cmp
decb
jmp
insb
movsl
mov
push
jnp
iret
dec
adc
inc
cmp
xor
cmp
jl
mov
and
jno
lret
and
jecxz
sbb
repnz
xor
insb
pop
pusha
clc
mov
fcoml
jmp
pushf
adc
jbe
jmp
jno
mov
callw
xor
and
or
sbb
scas
xchg
push
and
aam
xchg
xchg
xchg
add
rcrb
xchg
cwtl
add
xchg
or
mov
mov
push
test
out
repnz
mov
mov
sub
jg
jno
lcall
sbb
and
dec
ret
outsl
inc
int
and
xchg
ss
rorl
rorb
and
and
or
mov
sbb
pop
push
pop
jnp
mov
and
inc
inc
xchg
fimuls
push
xchg
xlat
fs
inc
in
sbb
mov
call
popa
outsl
add
inc
jge
enter
cmp
push
cld
jl
or
stc
incl
mov
sbb
jg
adc
daa
sub
arpl
leave
push
pop
outsl
mov
cltd
test
out
out
push
mov
add
ja
dec
je
mov
and
fs
pop
sub
pop
add
movsb
jo
shlb
enter
ss
or
lahf
push
lahf
fisubl
and
dec
cmp
inc
push
xor
imul
inc
sbb
enter
rcll
xacquire
fisubrl
mov
adc
sub
insb
insb
push
mov
and
push
or
incb
ss
mov
lcall
or
xchg
idivl
aas
mov
into
ret
rclb
out
jae
and
test
test
iret
test
xchg
idivl
outsb
fistpl
add
sub
inc
mov
cwtl
scas
mov
mov
test
dec
outsl
loopne
jp
pop
outsl
jmp
mov
jb
sub
test
rclb
sub
repnz
lahf
or
xchg
and
and
jg
in
insb
add
inc
inc
je
fcmovne
mov
sti
cli
pop
push
pop
or
scas
sub
or
inc
dec
inc
scas
sbb
hlt
jne
rcr
in
int3
mov
inc
test
or
cmp
xor
stos
pushl
cli
daa
or
js
or
xchg
xchg
xor
jns
aas
adc
lods
shlb
inc
mov
subb
and
aad
sub
sub
das
sub
add
scas
cs
add
mov
pop
push
fildll
repz
xchg
popl
movsl
jge
pop
hlt
aaa
stos
ljmp
xor
pop
jecxz
sti
push
push
xchg
orb
push
sarl
dec
and
add
jne
cmp
clc
in
rolb
lods
sbb
enter
xchg
add
stos
jno
dec
jg
cmp
push
into
lock
test
jne
ret
add
mov
cwtl
mov
pop
inc
add
push
stos
jo
mov
lods
mov
mov
xchg
pushf
popf
jg
adc
aas
jp
xor
sub
fwait
sbbb
push
push
dec
cmp
push
out
mov
xlat
addr16
mov
jecxz
adc
or
jmp
cmc
inc
sub
pushf
mov
data16
fstps
fcompl
int3
aas
iret
adc
push
mov
mov
rcrb
pusha
jecxz
add
das
jno
sbb
xor
ficomps
ds
outsl
jp
ja
inc
pop
ss
lcall
jge
jo
adc
xchg
push
sub
and
push
int
push
mov
dec
adc
sbb
mov
inc
pop
loopne
sub
dec
fldl2t
sbb
imulb
insl
xor
jp
xor
pop
pop
popf
jmp
mov
iret
scas
pop
dec
lock
add
lods
shl
mov
loop
xchg
bswap
jmp
and
out
jecxz
sub
add
xchg
loopne
lret
push
cmp
cmpsb
push
ljmp
xor
call
inc
cmpsb
dec
negb
inc
outsl
cmpsl
push
fnstcw
ret
iret
test
aam
adc
dec
mov
sub
or
adc
pop
sub
insb
and
pop
push
cmpsl
imul
pop
sub
data16
nop
movsl
sub
adc
mov
push
cmp
push
sbb
addr16
call
loop
je
testl
pop
int3
adc
aaa
sbb
cmpsb
out
mov
outsb
pop
fsubr
test
pop
cli
pop
jae
ss
xchg
cwtl
daa
dec
jne
dec
xchg
sub
jl
dec
movsb
dec
sar
lods
test
out
imul
mov
add
push
pop
jae
push
or
fstpt
mov
out
ja
or
jle
addb
or
xchg
cmp
inc
add
sbb
scas
jp
mov
lds
add
enter
cmpsl
psraw
inc
ss
shrl
lcall
std
adc
cmovp
jb
jns
jne
mov
pop
jne
xchg
push
shl
xor
data16
pop
pusha
and
push
jmp
fiaddl
mov
cltd
pop
sub
ja
aas
push
inc
push
mov
adc
cld
cmp
lret
les
sub
test
pop
push
sub
out
pushf
lahf
daa
cmp
and
les
xchg
or
sub
push
aam
pop
xor
lcall
cmc
mov
out
push
hlt
lods
mov
jmp
xchg
rcll
lcall
popl
mov
pusha
lea
in
xchg
rcll
xchg
jmp
fwait
or
ds
pop
lds
dec
or
aas
js
test
sahf
sbb
pop
cmpsb
notb
and
inc
sub
mov
ret
inc
add
mov
push
or
loopne
or
test
enter
dec
pop
das
fucompp
adc
outsl
pusha
mov
mov
and
test
cli
call
cmp
inc
pushf
sbb
fmulp
fstps
test
jp
jg
push
aaa
std
test
mov
lods
push
sbb
ds
js
daa
lahf
mov
jne
mov
jl
dec
aad
push
fists
jp
mov
std
jbe
outsl
nop
jle
xor
mov
fildll
jl
push
pusha
mov
daa
and
je
pop
test
addr16
outsb
lock
mov
popa
xchg
lcall
icebp
sbb
arpl
cmp
in
ficomps
lea
adc
jb
into
jo
mov
or
pop
lcall
mov
dec
inc
cmp
add
popa
lret
adc
pop
call
ret
lds
sub
ficoml
out
push
jne
xchg
mov
or
and
decb
xchg
scas
ret
shr
mov
mov
and
mov
loope
push
test
adc
pop
pop
dec
push
or
mov
xor
inc
test
adc
push
mov
cmpb
push
jg
fstpt
subb
stos
xor
mov
orb
sbb
loope
lret
mov
sub
sub
inc
xchg
aaa
xor
arpl
xor
inc
jnp
test
cli
push
mov
xlat
mov
mov
xor
xor
jne
mov
mov
arpl
xor
sbb
push
cmpsl
inc
fdiv
pop
sub
cltd
adc
outsb
mov
and
push
rol
leave
ret
cmpsb
fsub
mov
mov
or
addr16
lcall
lock
repz
ret
mov
jne
sti
jp
mov
and
notl
arpl
sub
lahf
popf
int3
imul
clc
out
sub
dec
dec
adc
jns
imul
or
cmp
pop
fcomi
popf
pop
mov
pop
lea
jne
sub
loopne
fbld
movsb
repz
sub
adc
sbb
arpl
sub
out
test
out
gs
hlt
arpl
pop
cli
jns
cmpsb
adc
xchg
xor
icebp
or
pop
or
enter
outsl
stc
xchg
inc
xor
add
or
cmpsb
imulb
pop
xchg
inc
adc
cld
idivb
jmp
inc
xchg
jp
repz
imul
push
cmc
dec
loop
jl
xchg
or
push
arpl
fists
adc
mov
aad
pop
sbbl
xchg
push
cmc
ds
daa
or
xchg
movsl
enter
and
aad
cmp
or
mov
call
popf
clc
shrb
mov
lock
lea
das
jge
mov
inc
hlt
add
mov
sub
pop
movsl
cld
xor
sub
jge
lret
and
mov
dec
xchg
inc
cmp
hlt
or
into
add
jnp
lret
mov
cmpl
enter
push
inc
fildl
jnp
in
and
roll
shll
dec
mov
jb
push
scas
addb
es
dec
int
int
mov
inc
mov
xor
sub
ja
cmp
stos
data16
mov
cmpb
mov
mov
mov
and
mov
fcomp
lcall
dec
adc
cltd
or
xchg
sbb
outsb
stos
xchg
aaa
push
leave
insl
mov
test
add
popf
adc
mul
rorb
aas
xor
pop
inc
mov
cmp
data16
imul
sub
ret
cs
nop
and
xlat
lods
sbb
cmp
aam
mov
pusha
es
jmp
pop
out
fwait
loop
cmpsl
add
push
repz
pop
lea
inc
xor
pop
jb
sbb
iret
xchg
cmpb
inc
push
es
pop
in
adc
sbb
cli
das
add
xlat
int3
fs
mov
and
inc
push
rcll
cmp
ss
fwait
cmpsb
sbbb
jl
insb
hlt
sub
cld
mov
in
lock
inc
fmuls
pusha
std
cmovns
and
mov
fcoml
ljmp
jle
sub
cmc
mov
cli
negl
mov
popa
mov
into
aam
and
popf
arpl
outsl
scas
ds
icebp
addr16
rol
mov
dec
xor
sub
jge
push
shll
xor
pop
test
push
mov
mov
mov
cs
or
mov
adc
adcl
or
lea
out
neg
push
mov
cmpsl
mov
inc
leave
dec
mov
lods
push
jb
in
ja
mov
bound
inc
adc
into
mov
sub
idivb
or
mov
cmp
stos
sub
pop
fisubrs
xor
jge
mov
push
call
push
mov
pop
and
mov
mov
add
clc
sub
ljmp
call
imul
fwait
sub
mov
xor
inc
ja
or
cmp
inc
rcrb
inc
sti
jo
pushf
outsl
int3
stos
out
or
sub
pop
and
imul
jecxz
mov
and
ret
cltd
or
movsl
mov
ss
mov
loopne
mov
iret
ja
divl
jo
inc
sub
fstpl
int3
pop
push
test
test
and
js
jnp
loope
jnp
lea
mov
xchg
and
fiadds
imul
das
int3
dec
mov
xchg
jl
xor
dec
loopne
sub
sub
ds
in
sahf
mov
sbbb
lea
xor
add
dec
inc
and
mov
lods
push
mov
shlb
repz
enter
aad
adc
sbb
push
adc
in
and
xlat
cmp
dec
mov
cmpsb
adc
add
sub
fdivrs
out
inc
incl
notl
push
scas
add
inc
mov
jo
xor
cmp
pop
leave
push
icebp
adcb
fsubs
pusha
cmp
rolb
cmp
sub
cmp
lret
popf
shr
faddl
movsb
push
pop
lcall
jno
mov
lods
rorl
pop
jbe
mov
mov
mov
arpl
lret
inc
cmp
xchg
icebp
xchg
sub
and
sub
shr
mov
sub
adc
ret
jne
push
cmp
mov
mov
lahf
fsubs
mov
add
fs
adc
adc
jno
dec
cmc
outsb
mov
sbbl
mov
cmp
adc
xor
orb
and
xor
stc
loopne
or
in
test
pop
movsl
cmovne
pop
rcrb
or
sub
bound
mov
mov
rcrl
rorb
adc
pop
or
and
or
push
bnd
shrl
dec
out
rcrb
lret
jge
mov
loopne
sbb
and
idiv
out
push
cli
push
xchg
sbb
and
lcall
les
pop
jbe
jle
sbb
subl
es
ljmp
add
add
iret
fwait
xchg
cs
dec
jg
out
mov
jge
cmp
cmp
cmpsl
mov
ss
fwait
icebp
lds
xchg
in
cld
cld
bound
pop
call
test
int3
sbbb
arpl
sub
popa
adc
call
jp
cmpsl
lea
add
sbb
daa
fsubl
leave
ret
inc
jmp
pop
js
addb
sti
cmpsb
xchg
stc
jns
xchg
pop
cld
orl
or
out
mov
sub
push
int3
insb
andb
addb
or
and
fistpl
pop
loopne
pop
mov
xlat
xchg
lret
test
inc
adc
pop
mov
int3
mov
aad
add
xor
in
enter
int3
mov
push
push
mov
fmuls
sbb
inc
xor
pop
cwtl
nop
out
jno
and
cmpb
jp
xor
out
shll
push
mov
stos
xor
cmpsl
push
sti
ret
fs
cmp
movsb
fistl
adc
out
and
push
pop
dec
aaa
adc
or
inc
addb
in
sbb
xlat
das
dec
xor
jg
out
mov
jecxz
adc
fildl
lea
adc
dec
lret
inc
fwait
ss
dec
push
mov
jnp
repnz
fwait
dec
sub
xor
stos
sti
add
test
pop
ret
adc
outsb
mov
stos
test
loop
adc
dec
xlat
or
repnz
repz
outsb
int3
jmp
call
xor
ja
cmpsb
dec
js
rclb
jns
push
mov
xor
xchg
xor
mov
mov
jnp
and
loop
dec
jo
dec
aam
push
pop
sbb
push
ficoml
jns
popa
sbb
xchg
popa
add
pop
outsb
pop
sarl
adc
das
mov
mulb
ja
insl
mov
nop
mov
scas
fcmove
cmc
jne
fstpt
in
imul
jecxz
xor
jp
outsl
push
xchg
scas
dec
adc
mov
or
add
lock
mov
out
cmp
and
pop
pop
cwtl
adc
and
inc
outsb
cs
jb
xor
xchg
das
addr16
adc
outsl
mov
out
push
mov
out
jl
and
negl
add
lcall
fs
lahf
inc
mov
lret
push
lahf
pop
add
mov
jecxz
or
jp
fisubl
imul
sti
inc
mov
cltd
test
or
in
or
movsb
lea
cmpsl
mov
xchg
frstor
mov
mov
popf
jbe
mov
movsl
mov
ret
ret
xor
leave
stos
cmp
fidivrs
inc
add
mov
cmp
or
pop
adc
sub
into
aas
push
inc
int3
mov
jnp
gs
imul
lock
lea
out
ret
jno
sarl
push
xlat
addr16
jmp
adc
jns
shll
xchg
jae
rorb
shlb
hlt
mov
stc
gs
xchg
pop
xor
jmp
test
and
iret
pusha
mov
mov
dec
mov
and
dec
push
test
cmpsb
adc
int3
xor
inc
sub
inc
jns
repz
inc
mov
jae
mov
mov
stos
shll
xchg
add
les
lds
lret
ret
int
ret
das
fadds
ja
test
mov
ja
inc
sarb
sbbb
dec
stc
sub
fisubrl
test
hlt
jb
xchg
rcrb
leave
xchg
jle
and
jb
mov
add
pop
dec
fwait
jp
add
mov
pop
flds
cmp
xor
or
lds
push
in
pop
pop
mov
imul
mov
ja
add
xchg
jne
push
sub
pop
jbe
mov
mov
adcl
in
jge
in
fsubl
and
fwait
xchg
sub
cmc
ret
push
adc
adc
stos
shlb
adc
insl
fs
and
jb
iret
pop
lahf
xchg
mov
cmp
push
lcall
xchg
icebp
les
and
mov
fmull
pop
mov
scas
shlb
mov
les
sub
mov
xor
fdivl
mov
lods
faddl
js
outsl
scas
lcall
and
cs
jl
dec
mov
inc
mov
out
pushf
sub
push
xor
into
ja
idiv
js
imul
jnp
push
loop
movsb
xchg
add
lahf
adc
pop
inc
bound
xor
push
stos
mov
xchg
xor
mov
xor
mov
sti
xchg
out
cmp
mov
imul
ret
mov
jp
nop
mov
dec
call
adc
cmp
shll
xchg
in
or
into
cli
movsb
dec
movsl
dec
dec
mov
movsl
rcrl
mov
pop
fiaddl
cmp
sbb
pop
cmp
push
fadd
jo
push
or
xorl
push
xor
dec
movsb
lock
add
je
sub
xor
jp
lods
rol
push
push
mov
mov
mov
gs
jge
push
inc
fldl
aad
pop
mov
sbb
subl
stos
xchg
stc
pop
mov
mov
cmp
xchg
xchg
push
dec
aaa
cmp
sub
push
jb
subb
push
inc
add
icebp
or
pusha
cli
test
dec
jmp
jg
mov
les
loope
cmp
roll
and
out
dec
hlt
mov
or
in
jne
fmulp
xchg
mov
xor
jo
lods
cld
ss
xchg
jbe
dec
and
leave
sahf
jl
std
test
and
ret
sbb
scas
fisubs
sbb
push
add
mov
mov
repnz
inc
lret
add
data16
mov
hlt
pop
cltd
fwait
lods
and
sub
mov
jecxz
sub
clc
xor
and
add
or
add
loope
xchg
mov
sub
mov
pop
fwait
je
cmp
lock
push
imul
inc
inc
popl
mov
nop
jp
sahf
mov
add
dec
mov
repnz
inc
cmp
aas
pusha
mov
ffree
sub
push
cmpsb
and
fbld
in
imul
sbb
addr16
test
test
add
or
dec
cmpsl
lret
int
outsl
inc
xor
call
inc
pop
shl
fstpl
mov
add
push
xchg
shl
dec
stos
cwtl
aad
test
mov
add
or
ja
shlb
adc
cmp
sbb
sahf
adc
mov
mov
xor
flds
into
scas
pushf
jmp
movl
fisttpl
pushf
iret
fmull
pusha
add
mov
out
jl
inc
loop
add
or
movsl
jp
iret
inc
in
push
enter
arpl
jae
inc
inc
int
in
and
xchg
mov
dec
pop
sub
gs
cltd
cwtl
dec
cwtl
les
repz
mov
dec
or
lds
lods
cmc
test
xchg
popa
sbb
addl
add
cmp
call
sahf
pop
aaa
fwait
cs
or
xchg
ret
fcoml
push
push
mov
pop
and
movsl
push
cmp
adc
int3
test
push
mov
jbe
test
cmp
or
and
push
mov
jle
lcall
sti
sbb
pushf
pop
mov
mov
dec
lcall
mov
cmp
js
mov
mov
movsb
inc
add
inc
imulb
pushw
jge
mov
scas
andb
shll
test
xchg
rolb
push
and
test
mov
inc
hlt
loope
clc
pop
loop
out
adc
adc
jnp
or
loopne
xchg
pop
mov
je
out
fs
mov
cld
adc
xchg
inc
into
inc
add
ret
hlt
mov
cmp
mov
je
imul
int
rorb
inc
cmp
dec
icebp
mov
pop
fs
mov
or
movsb
xor
call
repnz
mov
inc
xor
inc
pop
dec
mov
sub
pop
adc
push
fistps
sahf
xlat
imul
xchg
lea
outsb
mov
or
pop
xchg
mov
fwait
aaa
adc
xor
pop
mov
int
xchg
dec
repz
adc
clc
xchg
mov
push
pop
and
pop
push
add
in
pop
adc
scas
gs
jmp
std
rolb
shr
adc
pop
fcompl
inc
lea
std
sbb
inc
adc
sub
loope
in
cli
dec
jb
call
cmp
push
mov
jns
xor
xor
push
mulb
or
add
inc
fiadds
pop
or
hlt
ss
fdivrl
mov
je
sahf
pop
in
imul
ret
shrl
repnz
sbb
pushf
xchg
dec
or
int
adc
movsb
lret
out
xchg
xchg
call
add
xor
jnp
pop
andl
imul
pusha
jo
cmp
and
cmp
mov
lret
addr16
pop
aas
icebp
sahf
imul
test
push
vmptrld
xchg
mov
jge
push
jns
adc
fimuls
mov
notb
leave
jmp
rcll
lds
dec
jno
push
mov
stos
ds
sarb
imul
aad
or
sbb
cltd
jne
jae
mov
and
enter
push
mov
test
xchg
lcall
cmp
cwtl
cmp
lret
addr16
pop
inc
imul
pushf
jg
lock
aas
orl
fwait
cmp
out
lods
xlat
out
std
out
mov
lock
or
out
xor
push
insb
dec
mov
ja
test
inc
in
test
sub
inc
in
imul
and
xchg
movsb
cmc
push
push
jo
movsb
mov
sub
adc
pop
nop
lods
cmpsl
xchg
imul
scas
lea
jne
js
jl
mov
add
pop
mov
dec
movsl
repz
subb
daa
orb
xchg
xchg
push
and
sarb
clc
lock
orb
jmp
or
lds
dec
add
movd
leave
push
and
sub
test
sub
mov
jno
add
imul
mov
push
pusha
negb
xor
mov
mov
xchg
jb
pop
push
sub
mov
sub
rclb
mov
rcrl
dec
and
mov
or
mov
xor
jb
pop
scas
push
imul
xchg
jge
lods
outsb
xor
pop
pop
aas
outsb
daa
push
or
hlt
shrb
pop
pop
mov
int3
imul
and
adc
sbb
scas
mov
je
leave
mov
mov
sbb
mov
aam
pop
add
mov
daa
mov
pop
add
rcrb
les
shll
push
cmp
push
xor
sahf
sub
and
xchg
scas
push
inc
inc
mov
movsl
dec
popa
stos
lret
add
ret
hlt
gs
add
adc
sbb
jg
in
rorb
fstl
add
aam
imul
leave
out
pop
nop
push
rcrl
ds
aaa
in
cmp
mov
pop
or
negl
pop
in
mov
nop
dec
and
jmp
inc
mov
stos
or
inc
rclb
and
jle
sbbb
mov
dec
mov
out
jnp
pop
jb
push
test
mov
xchg
lret
push
push
xchg
mov
push
push
mov
pop
int3
sub
in
cs
pop
mov
ret
and
into
add
or
test
int
inc
lock
je
xchg
loop
push
rcl
push
or
and
xor
mov
pop
mov
ror
movsb
dec
jle
add
push
and
push
testb
sub
dec
mov
xchg
cs
fadds
mov
outsb
je
sti
cmp
push
pushf
and
pop
adcl
jg
cmp
add
call
push
cmp
xor
xlat
xor
inc
imul
aad
push
push
cld
pop
and
test
lds
jmp
sub
mov
mov
inc
inc
mov
les
jmp
daa
in
mov
lock
inc
in
aam
inc
sub
daa
rcr
cmp
das
mov
out
push
in
or
mov
fsubl
and
and
jbe
imul
fcoml
roll
sbb
mov
mov
dec
insb
sub
daa
es
jp
dec
lcall
mov
in
push
cmc
adc
sbb
sub
pop
popl
test
cmp
jno
add
ljmp
jle
mov
mov
cli
push
xchg
mov
and
mov
inc
xchg
sub
push
sarb
insl
mov
jns
sub
imul
and
fs
repnz
call
ret
adc
aas
xchg
mov
fsubrs
jecxz
bound
call
sub
and
or
insl
loopne
xchg
and
add
arpl
sub
mov
sub
nop
cmp
mov
mov
sbb
xchg
imul
out
sbb
sarl
fcoms
popf
into
fidivrl
and
mull
lcall
add
or
sbb
push
repz
jg
mov
rolb
mov
fcoms
or
cmpsl
push
and
das
aam
adc
frstor
loopne
popa
out
stc
xor
aaa
test
mov
jnp
xchg
sbb
stc
inc
jg
ja
xor
sub
cmpsb
inc
xchg
rcrl
adc
out
outsl
fistps
fwait
jmp
mov
pop
into
movsb
push
mov
roll
and
pop
push
in
lds
orb
sbb
cmp
movsb
push
push
insl
push
mov
mov
std
pop
insb
add
in
orb
cmp
sbb
pushf
dec
stos
or
adc
js
sub
mov
dec
imul
jbe
dec
xchg
jle
adc
lods
sub
stc
or
sbb
add
loope
out
mov
sub
add
xchg
lahf
mov
ret
nop
sub
nop
xor
cmp
pop
dec
test
test
int
pop
xchg
add
push
mov
or
jne
movsl
iret
pop
or
aaa
in
push
fdivr
scas
dec
sbb
fnsave
xchg
daa
lods
jbe
add
insb
or
push
shrb
outsl
sbb
fwait
mov
push
pop
hlt
addb
enter
bound
mov
adc
lea
lods
movsl
out
dec
cld
cmp
scas
mov
inc
adc
jle
or
sti
lods
push
stos
adc
jl
push
int
push
int
add
mov
add
dec
cmp
adc
fdivrl
add
mov
sub
int3
inc
sub
or
push
mov
popa
xchg
jne
mov
js
or
ret
inc
dec
push
add
mov
lds
push
xchg
pop
lds
std
or
adc
jg
sbb
lea
xor
jnp
rcl
sahf
testb
jp
gs
jo
aas
push
test
jle
lahf
or
or
cmp
sub
xchg
and
jnp
repz
frstor
int
mov
shrl
sbb
mull
rcrl
and
or
and
das
mov
mov
mov
jae
mov
or
stc
jae
dec
cmp
lods
cmpsl
dec
jp
and
in
ret
jg
or
cmpsb
mov
dec
in
test
sub
stc
in
or
subps
loope
andb
dec
dec
sbb
fstps
jl
sbb
sub
mov
into
and
repz
pop
loopne
pusha
jae
sub
cmpsl
mov
fldl
dec
xor
adc
jle
mov
rorl
imulb
call
or
lret
adc
fisubs
mov
enter
ss
mov
in
insb
dec
sub
pop
xor
fwait
cli
xchg
std
xor
repz
push
jb
jno
xlat
mov
xor
inc
out
fldt
mov
stc
lds
sub
fimuls
call
and
jne
fisubrl
pop
fmulp
fbstp
dec
shll
xchg
rorb
in
mov
cld
outsl
fidivrl
mov
lahf
aaa
test
leave
jmp
das
xlat
add
daa
jge
std
xor
cltd
mov
movsb
clc
in
fistpll
inc
sub
stos
movsb
dec
adc
dec
jle
das
nop
outsl
in
cld
push
rorl
pop
pushf
or
stc
cmpsb
mov
outsb
push
dec
sub
pop
ret
push
out
pop
pop
lds
push
mulb
shll
pushf
imul
push
push
imul
jmp
int3
scas
xchg
cwtl
test
mov
outsl
test
sbb
mov
add
cmc
jnp
adc
mov
mov
ja
inc
push
jne
sub
and
jmp
add
imul
movsl
mov
mov
add
mov
cmp
iret
jmp
pop
pop
add
xor
inc
xchg
mov
push
pop
xor
or
cmpsb
ss
repnz
gs
sahf
add
std
ret
das
icebp
push
adc
xchg
xor
sahf
adc
add
stos
test
inc
jge
lock
ja
mov
js
pushf
cmp
sti
ret
add
mov
sbb
mov
lret
icebp
or
add
adc
jne
xchg
orb
sub
jle
xor
xor
gs
push
roll
dec
inc
cld
out
jae
negl
je
jns
jb
mov
in
adc
sbb
add
cmpsb
fldcw
dec
jbe
jge
lock
jmp
jg
xor
mov
and
sub
insb
mov
bound
jl
mov
out
and
xor
ljmp
mov
pop
cmpl
jb
xor
ficoms
pop
and
std
es
lock
roll
push
pop
jb
rcll
cmp
jecxz
add
push
mov
dec
test
or
mov
dec
add
mov
sub
xchg
lods
lea
popf
cmp
and
stc
repnz
out
test
mov
jo
outsb
rorl
mov
push
loopne
mov
cmc
cmc
inc
popf
cmpsb
in
sub
in
outsl
fsts
rcrb
xchg
icebp
dec
ss
imulb
movsb
push
mov
int
add
dec
xchg
or
imul
mov
pop
into
pop
daa
cmpsb
xchg
enter
fxch
inc
or
xor
mov
sbb
loop
in
lods
fcompl
lods
sub
icebp
cmc
inc
repz
adcb
insl
sub
adc
arpl
imul
xchg
cli
mov
mov
fcoms
cltd
push
in
push
add
fwait
jnp
test
scas
adc
gs
pop
addr16
sub
loopne
movsl
shrb
cltd
xchg
sub
loop
push
push
cs
jbe
add
sub
xor
sub
cld
dec
jbe
leave
ss
in
sub
and
and
and
enter
dec
mov
jae
cmp
into
and
aam
shlb
jmp
mov
dec
mov
adc
aas
aas
iret
lds
sbb
dec
push
xchg
jo
fsubrl
faddl
jne
xchg
dec
mov
or
ss
add
jle
out
mov
sbb
outsl
mov
mov
movl
roll
lds
mov
icebp
mov
pop
fdivs
nop
jo
je
jle
inc
arpl
mov
or
out
sbb
sub
xorl
push
pop
push
pop
insb
adc
xor
mov
ret
mov
jno
add
add
mov
sub
push
rorb
icebp
loope
xchg
test
mov
in
sar
movsl
sbb
adc
add
inc
mov
or
nop
add
fs
xor
sub
jo
mov
aas
cmpsl
fs
subb
ds
xlat
pop
and
dec
fs
ret
push
push
sub
sub
or
xchg
pushf
out
sbb
inc
or
rorb
pusha
mov
das
fiadds
push
pop
pushf
mov
push
and
test
mov
dec
ds
inc
sbb
sbb
adc
mov
jmp
or
out
lea
jns
or
fnstcw
mov
sbb
xchg
mov
or
into
dec
dec
cli
adc
outsl
pop
icebp
add
mov
adc
jge
mov
loope
fisubs
add
out
cmp
cmpsb
jo
aaa
in
mov
jne
lret
push
add
add
inc
or
jge
lcall
and
dec
fidivrl
pop
pusha
rcll
xchg
push
push
repnz
xchg
rolb
sbb
lcall
out
adc
loope
not
add
inc
lret
sbb
cmc
push
in
mov
xor
xor
and
inc
adc
icebp
xor
test
pop
lods
test
jg
cld
and
push
sahf
inc
test
out
fcmovnu
lcall
mov
inc
xchg
ret
mov
mov
punpckhwd
pop
pop
sbb
ficoms
das
popa
outsl
jo
inc
data16
lcall
stos
push
push
inc
sbb
fisttps
xor
leave
or
dec
xchg
or
in
or
fcomps
push
dec
cmpl
sub
push
iret
push
sub
push
test
les
mov
add
test
pusha
pop
push
or
pop
xchg
aaa
cmp
loopne
or
in
jbe
add
mov
shll
inc
add
xchg
nop
push
jmp
inc
es
movsb
aaa
dec
xlat
daa
in
fists
dec
inc
xchg
mulb
decl
sti
or
pop
pop
push
ficomps
mov
xchg
repnz
aam
jb
or
jg
push
dec
push
orl
pop
mov
jbe
aas
xlat
sbb
filds
dec
push
out
push
mov
dec
mov
mov
ss
adc
aas
loope
dec
notl
ret
insb
test
dec
sar
inc
cmpsb
pop
adc
daa
movsl
pop
aam
and
mov
addr16
int3
pop
or
jbe
aaa
test
mov
adc
cmpsb
out
popa
ficoml
inc
xchg
pop
push
and
push
call
cmp
inc
push
sarl
jae
inc
popf
and
out
mov
int3
outsl
cmp
sbb
mov
ljmp
stos
fnstsw
cld
loopne
and
aas
sbb
cwtl
xchg
test
std
out
jecxz
in
mov
enter
mov
mov
imul
xor
daa
out
sub
xorb
xchg
cmovae
xchg
jno
das
dec
insl
jge
repnz
mov
cmp
push
das
in
pusha
daa
pusha
mov
adc
fmull
out
jnp
add
mov
xchg
adc
and
mov
push
inc
loop
adc
enter
popl
nop
fstpt
pop
mov
aad
stc
int
enter
jp
lods
daa
push
fisubl
in
popf
cli
daa
lea
add
xor
je
mov
dec
pop
dec
adc
rcll
and
push
push
fcmovu
cwtl
add
sub
pop
std
pop
fimull
inc
mov
imul
aad
inc
add
movsb
and
xchg
orb
aam
pushl
sub
call
lods
fimuls
jae
fdivrl
dec
xor
std
jl
cmc
adc
push
add
dec
mov
rcll
dec
lahf
add
cs
shlb
add
cmp
into
stos
cmp
fcos
jo
mov
push
ret
js
icebp
xchg
divl
repz
stc
test
rolb
fwait
lret
lret
fistps
inc
icebp
mov
jo
subb
push
out
lock
xor
lahf
cmpsb
xchg
jl
xchg
mov
cmpb
and
mov
mov
cs
push
mov
mov
scas
stos
add
jle
sub
pop
lahf
dec
loope
xor
lds
shll
inc
push
ficoms
hlt
das
sub
pop
cmp
xchg
cmpsl
fisttps
fistpl
pop
mov
out
shr
mov
sbbl
push
add
sub
xor
movsb
sub
mov
mov
roll
xchg
inc
lods
mov
cmc
cmp
aas
aaa
in
js
fistl
cltd
jg
loope
out
push
lret
fdivp
pop
divl
mov
repnz
repnz
nop
adc
imul
ret
pushf
or
test
out
aas
jno
xchg
mov
stos
mov
movsb
lods
stos
daa
dec
push
das
fs
das
xchg
push
cmpsb
push
ja
adc
out
jle
add
pop
mov
arpl
or
sub
and
jecxz
aad
pop
xchg
icebp
xchg
mov
fmull
ja
in
xchg
mov
cwtl
push
jnp
mov
lcall
dec
mov
mov
mov
data16
sub
xor
sbb
xor
in
dec
lahf
mov
stos
xchg
sahf
sub
add
sbb
test
cmp
or
cmpsl
xchg
mov
push
jns
pop
pop
jo
dec
xchg
addr16
and
lret
xor
shrb
xchg
in
lcall
das
lret
rcll
fs
push
inc
jge
lock
fildl
dec
das
jg
mov
xchg
add
add
adc
push
pop
shll
scas
xchg
int
pop
add
mov
rorb
jp
lock
hlt
roll
pop
mov
mov
xchg
fidivrl
mov
popf
jp
cmc
popa
addb
stc
cltd
add
lods
lea
sub
lock
inc
sbb
arpl
mov
jg
int
shl
ds
test
adc
push
loopne
push
add
iret
ljmp
inc
aad
pop
mov
pop
inc
ret
dec
stos
pop
incb
mov
push
lcall
stc
xchg
mov
loopne
call
rorl
daa
jne
sbbl
push
and
aaa
mov
pop
rol
ret
dec
mov
fdivrl
cwtl
jecxz
movsb
mov
mov
mov
pop
fcompl
sub
sbbl
shll
jns
jmp
add
sub
repnz
test
xchg
in
inc
fwait
pusha
dec
stos
pop
es
rorb
popf
lret
daa
out
mov
cwtl
add
mov
mov
xor
ss
pop
pop
jne
lret
addb
mov
out
test
test
adc
int3
pop
inc
cmpl
js
add
in
adc
outsb
jge
push
sub
xchg
loope
xor
les
cmpb
push
or
in
mov
aas
icebp
mov
mov
jp
and
sbbb
arpl
and
out
sti
fsubrp
fstpl
jbe
and
push
mov
sti
jle
mov
scas
mov
jno
fwait
lock
addr16
gs
cltd
xchg
lahf
stos
xchg
jnp
repz
rclb
xchg
mov
mov
out
mov
dec
hlt
adc
jns
sub
adc
sbb
inc
in
jmp
mov
pop
int3
icebp
xchg
mov
adc
xor
mov
mov
inc
ja
jp
inc
pop
mov
leave
xor
lret
int
sbb
push
and
out
push
nop
adc
jnp
mov
dec
negb
sub
cmp
mov
hlt
cltd
dec
js
add
xchg
stos
or
mov
pushf
xchg
fildll
idivl
fdecstp
pusha
push
popa
inc
add
jp
mov
leave
mov
mov
dec
xchg
xor
cmp
sub
push
xchg
movsl
fwait
outsl
sub
mov
xor
push
ljmp
mov
pop
fbld
and
push
dec
mov
loop
mov
mov
aaa
jne
fcomi
jb
adc
mov
stos
sub
xchg
divl
inc
or
outsb
xchg
or
repz
jl
mov
push
push
clc
inc
dec
inc
and
add
aaa
adc
adc
lea
dec
adc
mov
mov
xlat
inc
scas
jl
notb
fcom
sub
xchg
cmp
cmp
aam
repnz
add
shll
add
addr16
or
dec
test
call
dec
movsb
lods
dec
adc
movsb
cmp
mov
scas
jecxz
cltd
and
rorb
arpl
mov
lods
push
int3
add
mov
add
mov
es
sbb
dec
mov
arpl
rorb
sar
out
sahf
repnz
pop
cmpsb
mov
mov
cmp
xor
popa
ja
jmp
xchg
jbe
pushf
mov
sbb
mov
sbb
mov
adc
lods
cmc
mov
mov
jne
mov
movsl
xchg
fdivrl
adc
dec
subb
in
dec
mov
jp
iret
xchg
xchg
sbb
int3
xchg
lds
sub
sahf
sub
inc
lahf
sahf
mov
mov
pusha
jmp
icebp
add
cld
dec
and
mov
sbb
or
test
pushf
and
call
cmc
xchg
push
cli
aas
cli
mov
enter
mov
shll
mov
jg
jecxz
ljmp
pop
lds
popfw
rorb
pop
add
out
push
aaa
fidivs
inc
mov
sub
rolb
jecxz
cltd
cmp
imul
adc
xor
pop
add
sub
pop
or
or
nop
xchg
lods
push
leave
adc
sbb
rcll
adc
adc
clc
jecxz
sbb
and
push
rolb
dec
das
mov
sbb
icebp
cld
mov
mov
out
sub
popf
imul
jge
adc
cmpsl
jecxz
or
xor
xchg
out
and
sbb
lret
xchg
stos
mov
xchg
scas
stc
push
imul
jmp
aad
in
stc
xor
loop
test
outsl
in
insb
inc
test
imul
push
inc
or
scas
lock
ja
dec
add
addr16
jb
cmpsl
pop
push
cld
loop
andl
push
add
je
xchg
and
sub
sarl
movsl
sbb
mov
shrl
int3
fildll
mov
sub
dec
add
loop
jnp
jg
loop
dec
les
or
aaa
dec
leave
aaa
ret
shr
adcl
mov
repz
adc
inc
xchg
pop
mov
stos
dec
popf
imul
push
ffree
mov
fistps
and
inc
fbstp
test
nop
jle
aad
sbb
cli
dec
push
mov
fbstp
and
or
decb
ljmp
lea
push
and
mov
add
mov
cmp
jp
sub
jb
shrb
pop
or
stc
xorb
mov
cmpl
mov
popa
sti
dec
inc
cld
pop
sti
cmp
outsl
and
and
out
xlat
dec
scas
inc
sub
add
aad
lcall
adc
jno
xorl
pop
and
sub
xor
add
sbb
js
orl
or
mov
mov
outsl
out
lock
jle
add
inc
pop
cmp
dec
movsl
rcrl
sbb
jecxz
inc
push
sbb
clc
cmp
movsb
movsb
xor
daa
dec
push
xlat
imul
std
jne
push
mov
pop
cmp
xchg
pop
inc
in
mov
mov
inc
xchg
and
sbb
icebp
or
xor
loopne
std
mov
pop
aam
push
pop
push
cmp
sbb
sbb
xchg
adc
jp
push
mov
lock
dec
loope
cmp
mov
xlat
test
mov
mov
mov
sbb
jl
aaa
jge
fwait
xchg
mov
push
push
add
mov
xchg
dec
shrb
xor
ja
aad
stos
test
aam
jl
stc
pop
addb
fdivs
push
mov
aam
add
cmovne
push
icebp
es
test
pusha
in
sub
push
cmp
pop
sub
test
mov
inc
cmp
mov
dec
repz
mov
sub
adc
fcomip
pop
les
and
insl
inc
in
aad
cmp
jo
bound
jae
insl
mov
pop
inc
mulb
js
inc
sub
adc
out
test
mov
movsl
sbb
mov
in
pop
aaa
xchg
out
cmp
mov
int3
push
cmp
shl
cmp
outsl
ret
stos
stos
sbb
adc
xorl
jne
popa
mov
enter
int
mov
mov
adc
pop
and
mov
adc
push
jbe
mov
sub
icebp
inc
mov
insb
sub
add
mov
pop
sbb
jbe
loope
mov
push
xchg
into
cmc
and
loope
testb
or
outsb
sbb
cmp
sbb
sbb
pop
mov
push
xor
inc
sub
push
imul
je
aam
in
mov
pop
test
and
cltd
dec
idiv
or
idivl
xor
out
sub
jb
sbb
std
push
xlat
add
dec
in
and
aad
push
jge
ret
cmpsb
push
es
ret
repz
dec
xor
xchg
push
mov
shrb
pop
nopl
mov
test
add
and
sub
cmp
mov
jecxz
lcall
inc
nop
and
mov
jmp
mov
inc
adc
es
daa
aas
orl
lcall
icebp
pop
and
dec
adc
xchg
test
fstps
fwait
jo
in
movsb
mov
imul
adc
and
xlat
sbb
mov
cmp
shlb
mov
lret
cmc
adc
pop
adc
movsb
imul
pop
pusha
and
lea
ret
testb
adc
or
clc
lods
pop
mov
pop
jecxz
inc
and
scas
mov
push
mov
int
pop
mov
imul
aam
lret
add
or
orb
out
pop
xor
insb
xor
pop
hlt
lret
mov
aad
js
into
sub
ret
popf
cmp
aad
dec
fstpt
pop
stos
outsl
push
fstl
daa
cmovs
loopne
jg
loopne
cwtl
out
pop
out
sub
mov
push
stos
decl
loopne
add
scas
scas
mov
jecxz
mov
add
xor
mov
insb
sti
sbb
loopne
push
xor
lods
add
dec
mov
adc
loop
sub
shll
fsubl
xchg
fsubrl
mov
lret
out
jo
iret
mov
imul
nop
paddusw
mulb
test
and
mov
push
sahf
std
jae
popa
shr
movsl
adc
mov
or
lds
setp
sbb
mov
mov
push
sub
push
fnsave
or
dec
push
out
and
cmp
outsl
ds
iret
cmc
ljmp
out
bound
out
sbb
daa
stos
mov
xchg
movsb
mov
jge
in
ja
xor
mov
push
xor
cmc
stos
xor
lret
cmp
mov
sahf
pop
fwait
aad
mov
jmp
pop
fidivs
mov
jp
hlt
push
je
mov
xor
je
fdiv
mov
jo
push
mov
mov
inc
lcall
or
dec
mov
popa
fadds
sbb
fmull
sub
lock
scas
xor
outsl
les
push
xor
xchg
adc
es
xchg
in
dec
hlt
es
loop
cmp
addr16
cmpsl
insl
jecxz
push
jmp
mov
or
pop
jbe
rcrb
pop
jle
fdivr
mov
ljmp
pop
xor
sbb
int
pop
jbe
inc
push
xchg
mov
je
aam
insb
addr16
cmpsl
xor
sti
sahf
fsubs
xchg
cltd
cmpsb
mov
push
add
fcomps
and
xor
iret
push
pushf
lret
setle
movsl
pop
push
lods
mov
or
or
roll
mov
out
adc
add
mov
ds
cmp
pop
loopne
rcrb
imul
dec
cltd
lods
inc
add
sbb
cli
sarb
mov
xchg
sbb
inc
xlat
and
xlat
sbb
cmp
jmp
nop
fcmovnu
push
cld
sbb
sti
jp
dec
and
xchg
xchg
push
hlt
or
shrb
inc
ret
add
xor
aaa
jg
pop
cmp
and
mov
xchg
jae
push
gs
mov
shrb
dec
repz
and
ret
lods
mov
test
aam
stos
adc
lods
push
push
mov
cld
sub
addr16
and
rcrb
jle
data16
jmp
xchg
xor
sti
bound
push
lea
pop
jl
movsl
add
push
mov
dec
cld
pusha
aad
mov
sbbl
sbb
divl
push
sub
fcmovnu
push
mov
xlat
lcall
fcompl
ret
and
ficompl
jmp
push
sub
inc
pop
mov
xchg
movl
and
and
mov
js
ret
adc
sub
cmp
mov
xor
pop
push
lds
lds
mov
mov
cs
pop
bound
imul
stc
mov
add
loopne
cmovo
lahf
add
pusha
dec
jns
test
mov
mov
or
imul
dec
lret
cs
cltd
pop
out
adc
cmp
push
cmp
adc
mov
scas
sarl
mov
inc
cwtl
out
jmp
enter
lcall
push
popl
pop
mov
outsl
or
jae
jno
pop
out
jnp
cmp
add
repnz
clc
dec
push
jnp
cli
push
dec
mov
xchg
cmp
ss
fidivl
pop
dec
outsl
mov
sub
and
xchg
lcall
jb
lret
sbb
int
dec
xchg
jmp
pop
jns
ret
loope
add
outsl
bound
dec
pop
pop
xchg
jge
in
and
lret
push
mov
iret
xor
cmp
or
push
repz
je
mov
dec
fldt
pop
popa
sub
jle
sbb
xor
outsl
jb
out
or
xor
push
inc
cmc
fcmovnbe
lahf
and
mov
xchg
inc
push
int3
fldenv
cltd
push
and
xchg
cli
out
filds
dec
aam
dec
movsb
mov
mov
or
xchg
dec
sub
gs
dec
or
faddl
cmp
sbb
mov
loope
int3
jnp
fdivrl
xchg
lret
mov
dec
push
fwait
pushf
aad
call
mov
stos
dec
out
jle
pop
sub
adc
cmp
inc
fnstenv
sti
jg
movsl
jge
adc
in
mov
aas
push
mov
sub
jb
mov
pop
sub
imul
mov
dec
dec
aas
sahf
and
or
dec
push
imul
mov
mov
mov
insl
sub
movsl
cmp
adc
in
and
cld
or
mov
shlb
dec
xor
cli
mov
jmp
shll
push
fistps
adc
mov
cwtl
sub
out
testl
xor
jns
enter
ja
gs
push
xor
xchg
push
xchg
stos
popf
add
jb
xor
push
jge
call
xchg
push
add
movsb
add
pop
pop
inc
sub
inc
adc
mov
negb
push
xor
bound
inc
stos
push
into
lret
in
movsl
out
out
sub
in
jmp
sbb
rclb
int3
scas
or
and
xor
and
push
adc
and
ror
inc
aaa
popa
ljmp
popa
movl
mov
movsl
sub
adc
cmc
jne
push
pop
cmpsb
loopne
mov
or
or
loope
and
inc
pop
sbb
jnp
mov
popa
cmp
sbb
cmc
cli
sub
mov
push
push
aaa
loop
movsb
pushf
ja
inc
test
test
sbb
cmp
scas
and
imul
sub
push
cmp
jbe
adc
lds
stos
test
sbb
sub
cmpsb
lcall
out
dec
mov
sbb
iret
jns
mov
xor
nopl
lahf
out
jns
aad
mov
aaa
add
cmc
scas
sbb
cmc
ret
mov
jecxz
push
pop
fwait
rorb
cld
cmpsl
adcb
lods
std
mov
je
fucomi
push
out
in
mov
cltd
mov
and
sbb
loopne
mov
out
sahf
cmp
xchg
out
jns
mov
sub
mov
xchg
testl
and
leave
nop
sbb
adc
insb
cmp
imul
repnz
in
mov
sahf
adc
lahf
iret
and
xorl
ja
scas
pop
nop
jle
outsb
into
in
in
and
rcrb
cld
xchg
adc
cmpsb
push
mov
jne
mov
lret
cltd
stos
adc
arpl
inc
dec
push
jo
je
inc
dec
adc
mov
dec
adc
or
xor
into
cmp
ret
lods
mov
or
sarl
xchg
inc
insb
add
shlb
mov
xor
or
cmp
cmp
cmpb
lret
cmp
aam
add
sbb
xchg
and
xchg
sbb
mov
lcall
pushf
sbb
std
mov
cli
mov
enter
push
lods
subl
xor
rcl
js
pop
pop
arpl
lds
jmp
lahf
cmpsl
fs
dec
adc
jl
stc
pop
adc
sbb
pop
xor
lret
jo
dec
roll
sub
adc
lcall
sub
cwtd
rclb
or
mov
add
mov
pop
sbb
xor
test
enter
jnp
dec
pushf
insb
lock
sub
jp
push
dec
cmpsb
xchg
lock
dec
jno
aam
fmull
inc
bound
popa
aaa
jno
addb
push
pop
jo
inc
notl
mov
push
iret
fldcw
pop
add
jecxz
or
mov
out
or
test
cmpsb
pop
mov
cmp
push
sub
cmp
sti
adc
repz
inc
notl
faddp
xchg
sub
sbb
dec
jo
pop
das
mov
pop
push
mov
cmp
pop
add
imul
arpl
inc
adc
xchg
inc
or
pop
out
ds
fstpl
push
mov
pop
inc
stos
or
mov
jno
enter
stos
js
shr
pop
bound
pop
mov
mov
cmc
outsb
pop
cltd
adc
call
das
outsb
call
insb
rorb
push
fwait
jge
movsb
sti
fwait
cmpsl
jg
inc
sub
gs
inc
fnsave
popa
push
or
lahf
jno
jo
sub
jp
mov
pop
xchg
out
pop
jl
cmpsl
and
xchg
das
scas
int3
aas
into
or
jo
arpl
adc
and
int3
adc
aam
inc
icebp
inc
scas
mov
add
in
push
rclb
cmc
sbb
jno
sti
sub
xchg
adc
mov
cmp
inc
dec
lcall
lret
shrb
lea
xlat
pusha
stc
push
mov
mov
in
sub
and
aam
popa
test
in
sub
scas
push
adc
sub
mov
loope
mov
enter
cmpsb
je
dec
jp
mov
mov
cmp
pop
push
scas
inc
scas
jmp
cmp
xor
xlat
add
jp
daa
fwait
pop
mov
and
inc
loopne
inc
popf
push
xor
inc
and
ffreep
ret
sub
dec
popf
dec
mov
imul
imul
enter
inc
dec
pop
arpl
jne
shll
sbb
lock
clc
shlb
sbb
and
xor
jle
nop
xor
cmc
push
and
mov
jge
clc
mov
and
rol
xchg
dec
aaa
pop
xchg
mov
mov
andb
mov
mov
in
mov
jp
scas
idivl
pop
rcll
notb
cwtl
ljmp
pushf
jp
sub
fsubs
rorb
insl
adc
jno
andb
jbe
jl
aaa
loopne
decb
in
pop
jle
jae
mov
mov
xchg
mov
cmpb
jne
push
dec
arpl
dec
outsl
pop
and
sub
data16
pop
or
push
push
xchg
inc
pop
daa
jl
xor
cmpsl
and
cmp
xlat
push
aas
mov
pop
jecxz
fisubrl
pusha
mov
fisubl
loope
mov
insl
iret
adc
out
mov
and
xchg
in
cs
pop
cmp
gs
out
xor
cmpsl
adc
aad
jmp
push
push
and
jmp
adc
fdivl
nop
cmp
cmp
lret
inc
clc
mov
lods
ds
pop
sub
imulb
pop
lret
int
and
popa
pushf
sbb
lds
imul
adc
mov
sub
fisubl
xor
sub
enter
pop
mov
je
mov
cmp
popf
roll
sarb
jne
pop
in
std
or
lcall
scas
push
inc
push
jno
jo
test
sbb
push
lock
inc
leave
stos
aam
inc
and
add
mov
jns
aaa
add
mov
jge
fisubrs
orb
pop
lods
rcl
sbb
mov
adc
or
dec
push
pop
ljmp
cmpsb
int
decb
push
scas
shlb
test
int
add
aaa
cmp
push
inc
repz
push
push
sub
pushf
stos
popf
rolb
pop
out
push
xor
mov
add
in
jge
mul
call
sbb
call
or
rcl
shrb
sub
and
sahf
mov
adc
push
pushf
push
or
inc
addr16
xchg
add
mov
xor
sahf
test
cmp
xor
sub
sbb
mov
push
ljmp
adc
sub
cmp
add
push
out
dec
jle
movsl
dec
ret
loopne
sbb
aad
ds
and
sub
adc
xor
sbb
push
jne
jmp
jl
or
add
adc
push
lods
xor
adc
dec
popa
sbb
pop
xor
cmpsl
fs
daa
jns
out
cmp
imul
pop
pusha
cmp
xchg
jmp
mov
lods
adc
lcall
sbb
mov
inc
int
inc
les
jno
pop
hlt
push
lea
mov
stos
push
mov
aaa
loope
mov
cmpl
call
out
xchg
enter
out
push
cmp
adc
loop
addr16
or
clc
pop
push
lds
push
imul
aaa
or
movsl
add
insb
mov
enter
insb
ret
xor
mov
rorl
xor
mov
mul
cmp
or
and
xor
ret
mov
and
xor
scas
sarb
and
inc
sub
insl
add
scas
iret
out
in
inc
cmp
jge
int3
sbb
push
insl
scas
jb
cmp
mov
pop
fsubrp
int
and
dec
mov
adc
xlat
adc
mov
int3
aad
in
mov
pop
pusha
idivl
xchg
cmp
add
dec
xor
pop
pop
mov
movsb
push
mov
dec
xchg
cmp
or
ds
scas
lods
and
lods
jb
movsb
fptan
iret
std
shlb
cmp
mov
data16
cs
lods
xchg
roll
cli
cmp
xor
jge
testl
jmp
push
inc
mov
cmp
cmp
push
sub
cmp
cmp
push
jge
cmp
sub
jecxz
xchg
fdivr
jno
xchg
out
orb
pop
xchg
in
mov
dec
xor
rol
data16
adc
div
mov
fwait
adc
or
pushf
arpl
xchg
cmpsb
mov
mov
jnp
dec
xor
jg
adc
int
sahf
push
sbb
je
inc
push
int3
xchg
add
and
lea
ret
adc
je
clc
xchg
push
and
jb
les
mov
inc
xchg
mov
inc
repz
inc
mov
lret
jne
fwait
sbbl
pop
or
push
repz
sti
popl
lea
jecxz
mov
popa
cld
mov
ljmp
std
push
jmp
int
insl
popf
add
and
mov
add
arpl
cmp
shrb
rcr
inc
push
sbb
xor
das
pop
sbb
inc
xchg
stc
pop
fistl
js
test
cmpsb
mov
cwtl
out
and
cmpsl
in
dec
inc
fsub
ffreep
xchg
and
push
push
int
add
cli
pop
lret
mov
sbb
lcall
xor
sub
and
jg
mov
mov
sbb
jnp
rcrl
nop
pop
sbb
aam
inc
mov
insl
imul
sub
lea
shrb
jns
lret
adc
gs
and
idiv
incb
or
fdivs
fstl
mov
jp
pop
pop
lret
or
in
stos
adc
xchg
test
ja
sub
dec
pushf
nop
mov
outsl
out
aaa
mov
inc
or
sub
mov
adc
and
dec
dec
inc
sub
sbb
aad
subl
ljmp
xchg
sbb
cmp
out
lods
mov
jb
aaa
outsb
xor
xchg
icebp
jb
subps
mov
loopne
or
dec
dec
inc
cmp
icebp
lret
out
lret
xchg
pop
sub
or
mov
jno
scas
pop
jo
and
mov
out
push
stos
es
imull
mov
es
jns
add
imul
out
repz
push
add
fstpt
notb
popa
les
xchg
and
insb
daa
icebp
insl
xor
aas
cmp
cli
sub
sti
add
test
lret
inc
mov
mov
mov
adcl
or
mov
mov
jmp
sub
adc
jge
mov
cmp
mov
fwait
and
xor
xchg
in
sub
cmp
arpl
ret
cmp
das
cmpsl
xor
in
push
out
mov
and
pop
and
cltd
repnz
jl
test
adc
imul
shrl
push
sarb
mov
pop
ficoms
xchg
dec
pop
mov
arpl
jae
les
add
icebp
sub
cltd
in
sbb
mov
xchg
mov
sbb
mov
int
pushf
pop
lcall
test
sub
aaa
out
je
fwait
test
xchg
subl
add
js
xchg
mov
pusha
cmp
std
mov
leave
mov
jne
mov
sarl
cmp
mov
xchg
lock
dec
jo
jb
aas
aam
addl
adc
xchg
pop
in
xchg
sub
adc
rcr
cmp
xchg
addr16
sbb
jae
js
xor
xchg
xor
std
and
pop
movsl
loopne
test
repnz
dec
cmp
les
dec
in
aam
sarl
enter
aad
fimull
or
jne
pop
fidivrs
movsl
or
mov
lahf
sub
insb
push
scas
cmp
cld
jae
adc
push
and
fsts
test
jae
nop
xchg
out
andl
inc
xchg
adc
or
aam
mov
aaa
test
repz
xor
mov
inc
pop
mov
test
outsb
bound
lods
pop
inc
int3
out
mulb
jae
leave
push
insl
iret
mov
scas
adc
mov
rcrl
cld
mov
jge
sahf
ror
ja
sahf
push
repnz
cmp
adc
lods
sbb
sub
and
mov
or
mov
xchg
stc
cwtl
or
cmp
xchg
inc
cwtl
sub
sub
fnstcw
cld
pop
imul
out
into
nop
jns
push
mov
inc
in
mov
xor
cmp
fs
and
sbb
inc
xchg
ds
mov
and
out
roll
arpl
pop
outsl
pop
bound
push
add
fnsave
daa
loop
add
in
fwait
adc
add
pop
inc
xchg
jmp
jno
dec
or
std
inc
and
mov
mov
enter
inc
pop
jp
ds
push
dec
stos
lea
cld
jecxz
data16
pop
in
out
mov
rcll
push
sbb
xor
insb
mov
jnp
mov
sub
sti
and
mov
cmp
nop
aad
cli
jb
sahf
and
pop
mov
xchg
stos
pop
mov
inc
xor
jae
in
mov
jecxz
pop
arpl
std
cmp
loopne
xor
sbb
cli
popl
inc
js
add
mov
push
into
sbb
lea
xchg
or
lcall
dec
daa
mov
mov
aam
inc
fimull
loopne
rorb
pop
jle
out
test
push
pop
push
mov
sub
dec
shll
fmuls
pop
mov
mov
xchg
dec
adc
popa
sub
or
lret
popf
jl
pushf
lods
fsubrs
adc
or
pop
data16
mov
lret
pop
in
nop
xchg
inc
and
insl
add
std
mov
jno
mov
ljmp
mov
jmp
or
mov
ficomps
aam
es
call
dec
cmp
pop
out
push
outsb
and
cs
fwait
dec
pusha
pop
add
mov
pop
ret
adc
add
clc
psrad
lahf
mov
sbb
jae
sub
or
pop
call
mov
sbb
out
xchg
sub
and
je
sahf
jnp
inc
xor
xchg
mov
lods
clc
jmp
xorb
test
data16
dec
sub
fidivrl
push
and
out
sbb
in
gs
pushf
roll
out
xlat
inc
push
ja
sub
pop
test
xchg
and
ficompl
jnp
stc
out
js
inc
pop
inc
jnp
inc
mov
mov
daa
mov
pop
cmc
jp
push
sbb
sti
in
xorb
push
pop
iret
jg
push
test
mov
adc
mov
mov
loop
adc
pusha
in
push
or
xlat
xchg
imul
push
dec
sub
aas
in
jl
out
dec
adc
imul
scas
and
stc
inc
xlat
hlt
sub
pop
nop
out
jbe
jb
jge
movsb
leave
xchg
mov
popf
mov
fiadds
push
ljmp
lds
test
push
and
cld
test
or
xchg
shrl
push
or
or
movl
inc
aas
pop
mov
lret
mov
insb
adc
and
mov
pop
mov
xor
dec
jecxz
popa
in
mov
pop
std
sbb
shr
pop
sub
iret
into
negl
push
lcall
fs
mov
pop
test
jp
ret
loope
pop
add
or
mov
shrl
xchg
rcr
sbb
dec
sub
sub
push
sti
cmp
pop
mov
hlt
cmp
outsb
jmp
fwait
repz
mov
lahf
push
pop
cld
sbb
xchg
sbbb
clc
arpl
loope
xor
cld
icebp
xor
cmp
mov
fldcw
fidivrl
jle
pop
pusha
fisttpl
mov
pop
inc
cmpsb
cld
push
popa
or
leave
das
jns
mov
add
push
fmul
xor
xchg
mov
push
jae
cmp
cmc
repnz
dec
daa
inc
adc
inc
subb
orb
xlat
adcl
fisubrs
ljmp
pushf
out
xchg
lds
in
xchg
xlat
push
mov
pop
fisttps
stc
or
roll
insl
and
inc
fstps
and
pop
xor
cwtl
pop
mov
add
jno
sub
sar
sti
pop
loopne
push
dec
cmc
jne
xchg
push
mov
mov
and
leave
mov
xor
push
cmp
js
mov
mov
dec
jle
pop
aam
shlb
pop
fs
fwait
enter
rorb
mov
pop
out
shrl
push
mov
mov
cmp
xchg
cmp
mul
test
mov
cmp
js
xor
fisttpl
sbb
in
lods
ret
sbb
aad
outsl
insl
xor
dec
push
orl
push
imul
in
or
and
das
mov
mov
lods
add
mov
or
loop
outsb
aas
pop
mov
rcll
lds
mov
mov
sarl
pop
sbb
lret
fistpll
std
scas
pusha
xchg
sub
ret
cmp
icebp
jo
xor
jo
inc
test
mov
mov
leave
xchg
dec
mov
lods
or
stos
and
repnz
push
aad
aas
mov
adc
cmc
pushl
loopne
mov
arpl
fs
push
jg
add
push
dec
lds
pop
fildl
movsw
aaa
imull
sahf
push
xor
dec
rcl
xchg
xor
loopne
stos
gs
ret
push
hlt
rolb
iret
xchg
sub
mov
sarl
cs
aam
punpcklbw
adc
jae
inc
mov
push
aad
mov
idiv
jnp
mov
pop
mov
mov
jge
mov
incl
inc
add
outsb
fs
or
jb
mov
mov
xchg
dec
dec
sti
sbb
and
adc
hlt
or
push
pusha
lods
xor
jns
jns
ret
aaa
jnp
jb
loopne
fidivs
cmp
int
mov
aad
adc
std
nop
outsl
repnz
xchg
rcl
mov
lcall
loop
shl
cmc
add
sbb
push
xchg
or
insb
pusha
inc
jle
aam
xor
sbb
pop
cmpsl
jne
and
push
jmp
int
rolb
sbb
stos
sahf
jle
xchg
aad
push
mov
mov
pusha
dec
or
loopne
ljmp
repnz
mov
push
sub
mov
aam
or
add
outsb
xor
rcrb
cli
inc
jne
shlb
adcl
lea
add
inc
add
hlt
ljmp
cmp
cmp
sahf
adc
xchg
dec
xchg
clc
sub
jmp
movsl
in
mov
scas
stos
in
scas
bswap
push
out
lea
int
loop
into
mov
sti
mov
mov
mov
xchg
rcr
mov
ret
dec
pop
cld
xchg
fcompl
xchg
clc
scas
jns
pop
lahf
pop
ret
out
sbb
lea
xor
adc
xchg
popf
daa
addr16
ficompl
mov
es
pop
sub
filds
adc
xchg
insl
inc
lods
dec
gs
xor
lock
xlat
lret
repz
test
pop
lahf
mov
pop
pop
xor
cmp
cli
int3
push
mov
jecxz
movsb
hlt
pushf
sti
das
cmc
lds
arpl
inc
in
ret
in
mov
mov
das
push
pop
repnz
or
mov
hlt
jecxz
push
lock
add
push
hlt
push
in
pop
sbb
pop
in
xchg
and
xchg
lock
and
aaa
sub
or
dec
dec
cmp
add
les
ret
aas
adc
andl
push
mov
movsb
adc
shll
or
mov
xor
push
pop
frstor
mov
lcall
or
gs
stc
ds
mov
push
pop
cmp
enter
ds
sti
jne
or
jo
inc
iret
lahf
add
loop
jg
and
out
ret
pop
mov
jno
xchg
sbb
push
jl
rcl
dec
dec
les
add
add
or
mov
sub
cmpsl
cmp
loop
mov
or
dec
inc
mov
inc
aas
push
imul
inc
cmp
sbb
and
jae
lods
lcall
and
pusha
jo
inc
pop
popf
aaa
cmpsl
inc
sahf
lret
xlat
xor
jbe
xor
ljmp
out
sti
mov
mov
push
pusha
dec
xchg
jmp
add
dec
inc
or
mov
mov
pop
clc
cmp
xlat
cmc
repnz
cltd
in
pop
inc
insb
cmp
dec
mov
jl
test
loop
jo
mov
fadd
pop
cmp
cmp
add
push
adc
andl
lahf
scas
in
enter
jnp
xchg
mov
out
sarl
loop
jnp
dec
addr16
pop
sbbb
in
cmp
adc
ja
push
add
jne
add
mov
repz
in
inc
xlat
scas
dec
test
subb
mov
into
push
mov
imul
inc
fidivrl
into
in
inc
dec
sbb
mov
inc
inc
clc
cwtl
or
int
jg
add
cmp
mov
or
dec
cmp
test
mov
jl
jns
xchg
insb
jg
and
lcall
fmull
sub
jl
and
cmc
shlb
pop
jne
mov
into
dec
xchg
lcall
in
mov
andb
cmp
jle
loop
je
pop
jge
mov
loopne
cwtl
cs
sub
lds
mov
stos
sbb
sub
fisttps
pop
sahf
test
mov
cmp
adc
xchg
daa
xor
lret
ds
push
xor
adc
or
inc
sahf
mov
dec
pushf
test
dec
pop
inc
mov
cmp
not
fsub
and
jmp
stc
inc
fs
in
test
test
mov
pop
push
sbb
mov
jg
out
add
sti
push
testl
fwait
mov
and
ds
pop
jecxz
xchg
push
push
push
fldcw
push
test
pop
add
cs
sub
les
cmp
dec
cmp
mov
loopne
mov
pop
rcr
mov
rorl
sbb
fisubl
inc
icebp
outsl
inc
pop
divb
inc
mov
enter
shll
inc
push
jo
mov
iret
ret
push
aad
rcll
imul
jp
jp
sub
and
mov
mov
loopne
cli
icebp
lock
loope
icebp
mov
add
mov
and
sbb
xchg
pop
lret
out
jae
arpl
sub
jne
lret
cmpsl
enter
test
mov
mov
outsb
mov
xor
xchg
push
aam
xchg
orl
jecxz
pushf
aam
test
popf
push
fmull
mov
pop
lret
sbb
clc
sub
and
jecxz
loope
jo
enter
pop
notl
pop
cli
das
sub
out
push
and
jnp
ljmp
push
xorl
imul
hlt
dec
cmp
insl
push
mov
dec
into
xchg
test
xchg
bound
fsubs
mov
xor
arpl
jmp
mov
bound
mov
lods
fisttps
test
and
sub
jbe
sub
movsb
lret
push
fiaddl
or
mov
dec
int
xor
andl
aas
pop
outsl
lret
xchg
mov
push
jge
test
test
push
mov
aad
dec
push
shll
imul
out
hlt
out
popf
xchg
addr16
mov
out
cmp
jl
cmc
add
lret
push
test
pop
and
cmpsl
sarb
cmp
lock
xor
enter
cmp
or
push
fsubs
inc
cmp
pop
repz
mov
pop
dec
fcompl
xor
push
decl
pop
cld
stos
push
adc
movsl
in
fdivs
das
xchg
in
xor
push
pop
out
std
imul
orb
or
xor
sbb
xor
or
bound
fcmovnbe
insl
xchg
inc
pop
cld
add
sahf
pop
sarb
inc
in
mov
movsb
jl
imull
clc
push
cmp
inc
xor
sbb
cmc
andb
pushf
push
shlb
iret
in
fiadds
mov
popf
mov
mov
add
jae
loopne
lock
lds
inc
cmp
xor
jp
movl
mov
jo
pop
iret
scas
fcomip
cwtl
push
sub
xor
xchg
sbb
mov
pusha
adc
inc
inc
mov
fs
fadds
insl
jo
jb
add
jl
xlat
lods
stc
repnz
jb
sub
xchg
arpl
jbe
fiadds
pusha
xor
sub
insl
adcb
cmp
sbb
pop
icebp
mov
mov
mov
pushf
inc
fmuls
pushf
cmovp
hlt
or
addr16
in
xchg
popf
add
cmp
dec
mov
aas
std
bnd
in
push
pop
cmpsl
imul
sbb
pop
dec
jg
je
mov
sarb
add
ficoml
in
jl
add
xor
in
mov
mov
int
daa
mov
xchg
jge
out
pop
fwait
pop
lcallw
sbb
shr
pop
sub
pop
mov
aaa
popf
xor
out
bswap
pop
cmp
or
push
sbb
aam
mov
jecxz
movsb
mov
std
and
jo
ljmp
add
imul
mov
cwtl
into
fsubl
loope
jo
push
lock
jo
dec
rcrl
cmp
aaa
pushf
dec
lea
add
sub
adc
jno
into
sub
inc
outsl
sbb
xor
fldcw
inc
xchg
das
cli
outsl
xor
subl
fdivrs
stc
pop
pop
jns
sub
and
and
jle
das
test
push
jecxz
cmp
add
outsb
and
and
mov
pop
inc
or
andl
int
jmp
scas
icebp
decb
js
pushf
int
pop
pop
jns
pop
sub
and
roll
sub
xchg
xor
lcall
ret
test
imul
lcall
sub
mov
jae
test
xlat
loop
fwait
pusha
lods
xchg
daa
test
mov
jbe
sbbl
mov
pop
scas
pop
pop
addb
aam
mov
xchg
mov
push
popf
xchg
jl
mov
mov
outsb
push
je
nop
lock
mov
out
cs
rcr
pusha
stc
xchg
hlt
mov
adc
or
cli
add
andl
fmuls
mov
mov
mov
mov
inc
or
xor
addr16
cmp
mov
dec
cltd
push
mov
ret
movsl
xor
and
add
cmc
mov
nop
xchg
popf
dec
sbb
repnz
mov
cld
fidivs
pop
dec
xchg
adc
sub
stos
movb
pop
xchg
das
xchg
cmp
loop
test
mov
lds
lea
add
pop
pop
jbe
jno
cs
sbb
push
bound
inc
int3
jl
mov
adc
call
mov
rcl
sub
popa
lret
xchg
shll
push
adc
jnp
sbb
jecxz
pop
popl
sub
std
and
mov
andl
test
pop
imul
xchg
shrb
rorl
push
lods
xchg
das
popf
add
mov
and
push
mov
insb
pop
in
mov
pusha
stos
push
or
iret
mov
sub
test
or
sub
bound
out
add
in
or
push
fldcw
jbe
out
sub
rol
push
dec
lea
mov
push
and
int
cmp
or
out
bound
cmp
outsl
mov
cli
std
ret
dec
jmp
es
fnstcw
or
outsb
push
jle
jne
loop
mov
je
add
xor
lret
mov
and
int
xchg
or
sub
jmp
jg
mov
aam
stc
lods
cmp
xlat
mov
and
mov
add
addr16
add
sbb
call
stos
sub
pop
cmp
outsb
adc
ds
sarb
or
test
sbb
mov
pusha
shl
nop
pop
cmp
outsl
cltd
loope
loop
ljmp
enter
xchg
mov
lock
stos
les
cmc
mov
push
nop
jb
sub
add
jle
and
cmp
stc
in
jge
xlat
xor
sahf
mov
das
mov
clc
lea
mov
ret
pop
inc
dec
outsb
aas
orl
push
out
imul
jo
mov
nop
cmp
sbb
aam
dec
cmp
sub
enter
sbb
pop
adc
dec
jge
or
loope
push
mov
push
rcrl
bound
mov
lret
sbb
daa
hlt
push
jmp
sarl
adc
outsl
ret
sahf
scas
jns
pop
xchg
inc
or
pushf
repz
lret
cmp
xchg
in
fnstsw
add
push
mov
xchg
aas
das
test
cli
out
mov
sar
incl
scas
fwait
shlb
pop
mov
cmpsl
and
test
add
mov
dec
jmp
test
xor
sub
es
pushf
shlb
ret
popa
xchg
jl
test
sbb
loop
jne
pop
gs
xorb
mov
mov
std
test
sbb
push
pusha
pushf
and
add
es
dec
lock
sub
lret
and
inc
movsb
mov
cmp
test
stos
aam
aam
jmp
push
arpl
mov
add
cmp
jb
xchg
clc
adc
push
lods
ret
dec
les
in
cli
adc
stos
or
shrb
mov
sub
mov
xchg
or
sarl
mov
cmp
xorl
dec
inc
push
inc
ret
cmp
mov
dec
fldenv
sbb
mov
adc
cmp
cmp
lds
jo
arpl
shr
in
inc
lock
xchg
lret
dec
lret
inc
stc
sub
jl
jp
lds
push
in
cs
pop
mov
sbb
xor
fimull
and
adc
sbb
add
jb
sarl
push
pop
pop
scas
pop
mov
sbb
lcall
das
xchg
jno
movsb
pop
mov
and
adc
movsb
inc
mov
imul
in
repz
sahf
push
dec
pop
shrb
int3
push
repz
inc
adc
mov
mov
sbb
xchg
xchg
mov
rcrl
mov
mov
cmp
xor
mov
inc
fisubrs
dec
jne
icebp
dec
xor
sub
inc
cli
rol
cmpsb
xchg
das
cli
pusha
mov
divl
adc
cs
clc
out
xor
sbb
mov
mov
loopne
popa
cli
ja
call
jecxz
xchg
icebp
lret
nop
in
cmc
mov
fsts
loop
adc
and
lock
pop
sbb
stos
sub
mov
push
test
stc
push
push
addl
fldcw
loopne
push
test
leave
icebp
xchg
mov
add
repz
push
xor
or
icebp
stos
sbb
data16
xchg
jecxz
lock
inc
fbld
cs
mulb
and
cs
sub
sub
pop
push
inc
xchg
pop
sub
inc
push
movsb
sub
rclb
push
aaa
loope
pop
jle
rcrl
add
and
push
lret
mov
sbb
pop
sbb
add
ret
out
add
add
xor
xchg
insl
pusha
idivl
push
pop
rcrb
and
mov
imul
loope
inc
add
push
ret
push
adc
dec
lret
cmp
xor
pop
mov
sub
fstps
jnp
inc
jbe
subb
icebp
pop
cli
stc
xchg
loopne
mov
cmpxchg
cmpb
cmp
cltd
mov
cmc
inc
popf
fcoms
mov
out
test
sarl
leave
std
xchg
push
filds
jl
stos
xor
pushf
dec
mov
jns
scas
mov
pop
sbb
sub
or
xor
mov
pusha
cmpsb
inc
std
out
and
jo
xor
sbb
dec
and
stc
pop
mov
iret
pop
orl
bswap
pop
jne
mov
cwtl
xchg
test
call
dec
add
in
inc
lcall
inc
push
iret
mov
jbe
mov
add
or
xor
dec
movsb
pop
xchg
add
cmp
cld
xor
ljmp
and
adc
cmc
scas
xor
data16
jo
aaa
and
dec
addr16
dec
inc
cld
and
inc
adc
sub
es
cmp
fists
dec
movsb
sub
mov
sbb
sbb
dec
inc
js
icebp
idivl
mov
xchg
push
or
shlb
fmull
sbb
fsub
shl
arpl
loope
jl
loope
movsl
aaa
shrl
out
cmp
je
push
xor
es
std
mull
add
hlt
jbe
das
sub
sbb
xchg
sti
ljmp
xchg
nop
push
sub
sub
mov
popf
stos
sub
test
popa
add
lock
xor
les
call
lcall
xchg
cmpb
mov
jmp
xchg
popf
in
outsb
mov
aam
shll
pushl
pop
sub
jne
push
fwait
xor
jecxz
je
jge
stos
adc
or
mov
test
cmp
out
xchg
ljmp
leave
das
lcall
mov
or
rcrb
xor
and
inc
mov
sarl
mov
loop
rcr
add
les
push
jae
xor
and
xor
gs
adc
pminub
xor
mov
xor
inc
fucom
jl
movsb
mov
push
pop
pop
sub
fdivrs
stos
sbb
dec
aaa
data16
jnp
inc
pop
pop
lcall
test
jge
jnp
adc
xchg
xchg
pop
bound
idivl
aam
cmp
adc
pop
xchg
cwtl
jns
jne
scas
mov
stos
dec
rcl
or
lahf
inc
mov
aam
fidivl
push
xchg
icebp
ja
xchg
cmp
loop
lret
push
xrelease
aas
add
mov
cs
add
iret
cmpsb
fdivp
dec
das
incb
arpl
sbb
sbbl
pop
cld
and
arpl
mov
sub
mov
popf
mov
js
enter
in
fs
mov
lock
xor
das
jne
pop
lock
dec
push
push
cmp
push
push
add
cld
outsl
inc
pushf
push
mov
sbb
inc
test
sbbb
xor
pop
xor
in
cmpsb
mov
cmp
jnp
push
sbb
test
lds
sub
jmp
fmuls
icebp
and
fldcw
dec
js
into
jge
mov
rolb
add
pop
sbb
lea
jo
call
mov
xchg
fimuls
ja
out
push
lods
rcrl
insl
pmulhw
adc
idivl
mov
push
test
mov
pop
inc
movsb
enter
mov
xchg
push
jmp
mov
and
jle
iret
lret
hlt
rclb
sub
in
push
cmp
mov
jne
jl
je
popa
movsl
idivl
xchg
sbb
xor
dec
hlt
pop
test
pushf
lea
sbb
test
mov
mov
adc
sub
add
call
sbbl
iret
int3
and
jno
pop
ss
push
outsl
jno
pushf
cld
cmpsb
data16
or
outsb
and
enter
push
inc
jns
cmp
xlat
mov
add
mov
inc
mov
addr16
outsb
sbb
mov
stc
and
nop
scas
cmpsb
scas
roll
adc
sbb
shll
aaa
push
push
adc
addr16
adc
aad
out
pop
out
adc
pop
push
sub
imul
nop
jne
sti
lret
imul
out
mov
gs
mov
jns
add
das
and
push
mov
hlt
adc
xor
insl
mov
stos
das
or
jl
pop
faddp
rcl
idivb
hlt
pop
shlb
or
pop
je
push
xor
sbb
or
aas
aas
pop
fdivr
push
and
dec
sbbl
sub
or
sysexit
out
cmp
into
sub
push
das
daa
cmp
shll
daa
in
jne
cmp
test
inc
sub
adc
daa
enter
mov
call
ds
pop
dec
sub
xchg
xor
ret
int3
cmpsb
mov
push
and
fmul
es
sbb
mov
fists
sti
insl
and
dec
push
daa
repz
clc
xor
or
push
repz
ja
fwait
ja
shll
or
adc
movsl
inc
call
adc
mov
repz
jmp
jne
mov
push
ret
mov
jl
addr16
test
lret
push
xchg
fsubrl
in
sti
jecxz
or
jle
ljmp
pop
pushf
and
fistpll
xorb
aas
outsb
stos
jnp
cmpsl
push
dec
mov
cli
dec
hlt
push
cmp
enter
mov
sbb
pusha
mov
adc
je
pop
rorb
mov
sbb
dec
jle
movl
mov
push
jo
cmpb
pop
xchg
inc
sub
sub
dec
repz
mov
mov
bound
push
xor
push
dec
jbe
sub
jnp
cmpsl
fwait
leave
lods
sbb
mov
and
mov
xor
je
xchg
lods
push
mov
inc
mov
fsubrs
jns
push
in
out
inc
aaa
mov
pop
mov
ss
push
cmp
push
stos
push
scas
insl
insb
mov
push
inc
push
cmp
mov
sub
dec
mov
jmp
dec
mov
inc
jnp
xor
adc
mov
mov
mov
pop
imul
addr16
nop
std
mov
test
rcrb
cwtl
add
fs
and
sbb
pop
adc
mov
bound
cmpsl
xchg
movsb
add
addl
mov
dec
cmp
sub
xchg
lock
xchg
shll
mov
mov
ret
xor
mov
dec
xchg
cmpsl
xchg
sbb
mov
cmp
xlat
sbb
dec
jg
cmp
icebp
xchg
into
inc
mov
push
pusha
sarb
cld
loopne
add
jle
jmp
pop
mov
inc
enter
or
sub
mov
jb
sub
mov
outsl
ds
scas
dec
jle
test
ljmp
call
mov
adc
lea
shl
mov
mov
jl
mov
xchg
scas
adc
mov
test
loopne
and
sub
jae
or
or
sub
mov
mov
sub
xchg
hlt
push
jne
inc
xor
cmpsb
mov
in
xlat
mov
adc
cmp
adc
add
sub
lcall
insl
pushf
roll
js
lods
add
sbb
push
fisttpl
repnz
dec
xchg
jp
mov
xchg
pop
jne
adc
lods
insb
xorl
jae
fmull
cld
xchg
subl
or
xchg
cld
cmp
adc
mov
jge
mov
sti
push
test
adc
push
or
inc
and
mov
xor
dec
inc
and
cmp
sbbl
or
pop
adc
jle
js
cld
cmp
xlat
div
xor
popl
inc
mov
dec
or
je
mov
sub
pop
into
fidivrs
dec
adc
or
sbb
lcall
inc
sub
rcrl
or
dec
mov
mov
test
std
fbstp
sbb
inc
sub
lcall
aas
lret
cmpsl
dec
push
sbbb
mov
xchg
jmp
divb
shll
jecxz
fmul
xlat
mov
pop
mov
jg
clc
fidivl
imul
mov
push
xchg
push
pop
stos
ljmp
pop
inc
cmpsl
mov
xlat
mov
movsb
out
or
push
xor
push
mov
mov
movsl
dec
mov
adc
fstpt
or
pop
std
xchg
adc
iret
and
pop
add
dec
out
mov
sub
aam
mov
mov
repz
dec
and
or
mov
inc
fcom
movsb
add
jmp
push
lret
jno
int
in
or
xchg
pop
cwtl
jg
in
lret
inc
xor
dec
jb
mov
pusha
enter
adc
inc
xchg
inc
lcall
imul
inc
push
loop
mov
jne
pushl
arpl
cmp
and
mov
movsl
adc
in
sub
rclb
popa
pop
and
sahf
jl
push
das
xchg
neg
ljmp
pcmpgtd
andb
cmpsb
pop
adc
andb
test
mov
xor
jecxz
jg
in
loopne
sahf
and
fsubrs
adc
add
fcomip
js
pusha
daa
xchg
clc
dec
insb
sub
shrb
and
mov
add
dec
shll
jae
mov
in
sbb
lods
call
sbb
outsl
inc
xchg
imul
in
data16
mov
test
and
cli
fwait
cmp
mov
sbb
fs
jb
jae
dec
ss
mov
arpl
lret
push
flds
sub
dec
push
test
jns
lcall
push
insl
cld
inc
mov
hlt
je
pop
and
add
mov
mov
dec
sbb
js
dec
jle
push
cmc
cwtl
jo
scas
add
xchg
pop
mov
cwtl
fsubr
pop
sub
ffreep
xchg
scas
pop
adc
sti
lds
xchg
imul
inc
jnp
cmp
cmp
loopne
imul
jnp
popf
bnd
pcmpgtd
shlb
into
mov
push
pop
mov
and
lea
mov
or
or
sub
mov
lret
xor
add
int
test
xlat
xor
and
stc
jne
lds
cmpsb
adc
jecxz
fisttps
jbe
xchg
xchg
mov
lds
xor
mov
in
jecxz
push
addr16
je
and
or
pop
sub
mov
lods
out
stc
mov
ja
adc
es
rcr
arpl
lds
gs
loopne
movb
xchg
add
sub
jns
ret
cli
aaa
sub
jmp
insb
cld
icebp
add
in
addb
dec
cwtl
jae
sub
scas
mov
out
notb
outsb
dec
stos
sbb
ss
lcall
fucomp
jns
xor
loopne
push
sbb
clc
pop
rclb
push
cltd
cmpsl
addr16
in
jg
cmp
dec
xchg
into
sbb
icebp
jl
push
daa
sahf
jmp
push
std
adc
sbb
cmp
xor
cltd
xor
out
pusha
mov
out
inc
sbb
out
adc
mov
test
mov
es
add
pushf
stos
repnz
mov
cmp
imulb
ss
insl
or
sti
sbb
loope
jo,pn
add
push
inc
mov
arpl
xor
shrb
lods
cmc
in
jno
xchg
adc
pop
repz
aam
push
gs
jae
lods
add
ja
sbb
and
icebp
cltd
jne
xchg
add
pop
pop
sti
mov
and
out
pop
xchg
ja
mov
xor
test
jae
push
sarb
xchg
xchg
insb
sub
dec
leave
std
jne
mov
out
lret
jecxz
pop
fcoml
cwtl
jae
call
jmp
add
cmp
dec
mov
in
imul
enter
inc
mov
lods
mov
divl
sub
jg
out
out
repz
xor
jmp
mov
adc
fbld
jp
jbe
sti
test
lods
and
loop
js
fldl
mov
mov
jb
xchg
dec
jne
testb
mov
lock
js
adc
hlt
imul
and
gs
mov
hlt
out
jge
push
adc
mov
or
adc
fld
iret
inc
stos
cmpsb
dec
push
add
fdivrs
out
and
cmc
loopne
aaa
sub
push
fs
div
pop
je
adc
pop
inc
xchg
loopne
cmp
pop
mov
sahf
jae
push
fldt
and
cmp
mov
adc
and
subl
push
jmp
xor
imul
fwait
dec
xor
jne
test
mov
pop
or
outsl
mov
outsb
ja
pop
mov
les
ret
std
and
scas
jecxz
xor
pop
add
push
fs
and
loop
imul
rcll
inc
lahf
xchg
mov
ret
lahf
dec
iret
adc
jbe
sbb
lret
ret
sub
int3
bound
and
ret
inc
gs
fwait
xlat
rorl
mov
nop
inc
sahf
xor
pop
or
mov
mov
inc
cwtl
push
or
pop
xchg
js
inc
xor
lret
dec
test
in
cmp
nop
cmc
pop
jl
sbb
test
pushf
xchg
pop
adcl
sub
jecxz
lds
popa
mov
cmp
rorl
add
and
test
pop
mov
pop
push
ss
add
jl
push
mov
dec
rol
cltd
sub
mov
pop
adc
test
lcall
mov
jecxz
addl
lret
cli
inc
sbb
lods
fisubrs
lret
addr16
cmp
pop
mov
and
fstps
shl
mov
inc
or
cmpsb
movsb
and
mov
cltd
mov
inc
xchg
sub
int
pop
movsb
icebp
and
lock
sub
popa
adc
ret
rcr
jb
repnz
lods
xor
fistps
push
dec
pop
xor
leave
jge
xchg
mov
inc
mov
cmc
test
sbb
in
ss
mov
lock
mov
bound
jg
popf
xchg
lods
js
or
mov
inc
pop
nop
fsubrs
dec
adcb
in
jmp
pop
out
out
rclb
cs
or
jae
je
ret
out
or
sahf
jge
pop
adc
movsl
xchg
enter
xchg
sub
jb
rorb
test
iret
rcrl
aam
or
in
mov
addr16
movsl
popf
call
adc
scas
insb
int3
mov
pop
fcompl
fsubr
cmp
pushf
aaa
repz
loopne
rcrl
jmp
into
outsl
pop
ljmp
cmpsb
inc
cwtl
dec
lods
add
push
pop
hlt
or
cmpsb
jnp
pushl
ror
xorb
push
call
dec
mov
arpl
jae
decl
and
xchg
xor
or
jns
insl
adc
jb
inc
test
mov
dec
mov
pop
jo
cmp
add
fisubs
mov
repnz
aas
jnp
push
and
mov
lcall
add
add
mov
mov
cmpsb
dec
push
push
or
mov
dec
daa
push
addr16
cmc
lret
cmp
sub
and
dec
cwtl
outsb
or
stos
loopne
pop
iret
sbbb
dec
aaa
das
lock
mov
shll
xor
xor
pushf
push
lret
rorl
fmull
push
jge
adc
loopne
pop
test
fs
mov
xor
mov
fsubr
jno
stc
xchg
scas
or
popa
gs
mov
sti
scas
xchg
inc
adc
mov
mov
pusha
xor
jp
jecxz
stos
mov
inc
loope
adc
jne
push
and
iret
mov
fwait
push
xor
cmp
sbbb
pop
lahf
jecxz
aas
lods
add
xchg
and
ret
data16
fldt
push
cwtl
xchg
xor
inc
mov
pop
lods
loope
mov
or
lods
cmpsl
xor
int
call
sub
lahf
cli
jne
test
add
and
sub
movsl
xor
imul
xor
aaa
shll
sbb
push
scas
xchg
cs
cwtl
fs
addr16
push
dec
jb
push
add
and
test
repnz
pop
outsl
jnp
inc
popa
jns
mov
stc
out
jge
and
xchg
jne
aas
or
xchg
les
jmp
std
lret
aad
add
cmc
data16
out
aas
push
cld
and
jmp
test
mov
lcall
xchg
in
cmp
lahf
pop
dec
or
insb
jmp
out
rclb
imulb
sub
daa
xlat
jnp
repnz
fcmovbe
push
sti
jbe
add
add
sub
repnz
and
clc
adc
mov
and
repnz
fs
sbb
inc
aaa
jle
popf
dec
rorb
dec
dec
and
stos
sbb
das
rorb
fisubs
or
insl
addr16
data16
sub
push
add
mov
ret
mov
fs
sub
jecxz
clc
xor
sbb
push
sub
or
fmul
in
or
out
mov
jle
cmpsl
sbb
cmp
mov
addr16
dec
fisttpl
cwtl
dec
xor
jmp
and
lret
das
outsl
aad
push
enter
jl
mov
inc
dec
and
mulb
inc
lret
mov
into
aad
xor
mov
mov
add
xor
cmp
xchg
add
mov
pop
aaa
rcrl
or
pop
mov
or
loop
popa
stc
lods
and
rorb
std
adc
pusha
cwtl
mov
or
bound
dec
out
sbb
fnstenv
fnstcw
pop
adc
mov
ljmp
das
xchg
xor
mov
movsb
daa
mov
add
mov
insb
shl
popf
sub
test
mov
push
icebp
cld
lods
fwait
cmp
or
add
lret
sahf
mov
out
loop
add
dec
lds
outsl
out
arpl
jmp
xchg
pop
push
adc
mov
mov
push
push
adc
add
in
out
arpl
inc
inc
push
adc
lahf
aam
pop
inc
jae
dec
cmp
or
int3
andb
or
rclb
mov
bound
inc
icebp
cld
xchg
fmull
lea
mov
pusha
cmp
insl
fs
and
or
aaa
mov
xchg
and
leave
stc
mov
mov
subb
js
shl
xor
fwait
push
adc
test
jle
sbb
in
fs
inc
pop
dec
mov
lret
repnz
and
cmp
insl
cmpsl
ss
or
pop
nop
not
sti
cmp
xchg
pop
ret
jnp
jb
in
cmp
rclb
insb
add
ret
outsb
cmp
cs
cmp
jb
pop
mov
or
jg
xchg
add
lret
pushf
pop
jl
aad
ret
lret
rolb
fwait
scas
shll
fldcw
adc
push
and
sub
daa
shr
push
sub
fldenv
xor
add
stos
xorb
fadds
notb
sbb
in
mov
inc
lea
mulb
adc
or
adcl
jmp
ss
add
and
push
rol
ds
rcrb
inc
adc
cmp
mov
insl
fwait
jmp
ss
es
mov
out
adc
jns
cwtl
loop
or
lds
push
and
into
push
sub
cld
movsl
jecxz
jb
add
xchg
mov
roll
dec
repnz
xchg
shrb
xchg
arpl
lea
jp
inc
stos
or
adc
xchg
loope
jmp
popf
xor
movsl
sbb
bound
cmp
aad
lds
mov
rcr
dec
loop
mov
les
into
mov
mov
fdivrl
or
xor
test
push
test
jae
mov
je
xchg
lock
movsl
hlt
inc
hlt
xor
mov
leave
inc
pop
lock
in
cs
movsl
push
pushf
inc
cmp
or
adc
outsl
lea
sahf
push
sub
imul
and
mov
das
jnp
sarl
inc
pop
mov
adc
lret
testb
mov
rcl
lds
ljmp
adc
out
sbb
adc
jecxz
gs
push
mov
pop
xchg
or
jae
push
in
lods
cld
rcr
sub
pop
repnz
xor
inc
push
cmp
dec
mov
cli
jl
jno
xchg
es
mov
das
pop
lret
jmp
jecxz
cmp
jecxz
aaa
add
sbb
cmp
pop
cmp
and
inc
pop
scas
lcall
jo
in
mov
xor
les
inc
lods
add
pop
sbb
sub
mov
imul
pop
mov
push
jp
stos
xchg
pop
cwtl
lcall
mov
scas
xchg
pop
iret
je
cmp
aaa
or
das
mov
pop
and
pop
insb
xor
inc
fdivrs
in
lcall
jg
movsl
adc
add
mov
test
filds
out
jl
jb
fisttpll
mov
xor
cli
call
jg
ficoml
dec
addl
arpl
jae
pop
xor
lret
pop
cmp
pop
clc
pop
cwtl
mov
test
push
mov
lahf
cld
or
dec
fdivrs
std
sub
push
frstor
fs
lcall
sbb
mov
iret
pop
mov
fcom
jmp
adc
sbb
sub
mov
sahf
orb
sub
mov
push
rcr
daa
int3
push
ret
jecxz
aas
jp
adc
ss
or
push
divb
repz
mov
cld
aam
imul
xor
xorl
dec
inc
mov
adc
hlt
sbb
jnp
pop
adc
jo
xchg
rcrb
inc
ds
mov
cmp
and
pop
sbb
sub
cmc
mov
leave
adc
imul
or
clc
ja
mov
nop
dec
subb
int
andl
fisubl
pop
dec
add
or
jecxz
movsl
ret
mov
push
jne
dec
push
movsl
mov
xchg
push
or
add
jmp
add
push
push
out
lret
and
sbb
mov
inc
sarb
cs
push
and
mov
leave
cli
es
xchg
mov
dec
sub
ds
arpl
inc
loope
mov
push
add
push
loop
cli
push
mov
or
out
mov
sahf
or
test
into
push
cmp
sub
lods
setb
inc
lods
fsubr
ret
int3
jecxz
or
into
in
fs
in
push
scas
fidivs
ds
inc
lcall
movsb
push
mov
pop
aam
cwtl
cmp
mov
call
test
dec
out
cmpsb
jge
lock
shll
push
xchg
mov
xor
loope
mov
jl
mov
out
test
test
fs
sbb
cld
or
mov
push
lods
mov
sbb
pop
sub
mov
jecxz
cmp
sahf
int
dec
push
ret
out
push
dec
adc
data16
loop
ja
repz
jp
sbb
dec
pop
cli
pop
in
cld
pop
mov
movl
ret
out
andl
push
lret
aaa
jno
push
movb
mov
or
lahf
cwtl
lock
jno
ret
ja
ss
in
push
imul
iret
sbb
sub
xorb
pop
clc
nop
add
std
insl
cmp
lret
mov
or
insl
xor
sahf
pop
mov
mov
fstpt
pop
cs
xchg
adc
push
jecxz
sbbl
stc
sbb
arpl
jecxz
imul
lret
ret
sbbb
push
es
jecxz
xor
std
xchg
daa
inc
stos
jae
add
pop
shll
cmp
stos
fdivs
sarb
cmp
push
mov
sbb
shl
push
pop
scas
mov
push
inc
daa
xor
mov
xor
mov
mov
sbb
movsl
or
pusha
jmp
movsl
fisubl
inc
xchg
in
jo
and
xchg
inc
jo
test
dec
aad
popf
stos
jbe
mov
cmp
mov
xchg
sbb
xor
pop
adc
cmp
and
ds
int3
dec
mov
xor
out
jb
mov
cwtl
shl
add
cmc
aaa
cmp
xor
add
and
fmul
mov
mov
push
shlb
or
mov
or
or
into
lahf
mov
or
data16
imul
bound
lahf
xchg
dec
or
cwtl
inc
popf
cmp
push
scas
jne
andl
push
lret
inc
fsts
jl
mov
jbe
loopne
aad
cld
or
pop
lods
out
sub
mov
fdivr
or
and
enter
push
sbb
mov
cmp
mov
mov
mov
adc
jns
sbb
out
xor
sbb
add
in
pop
loopne
cmp
sbb
and
inc
xlat
or
pusha
mov
add
cmp
hlt
out
call
mov
jle
mov
outsl
scas
inc
xchg
cltd
cmp
xor
sub
mov
cmpsl
fistpl
inc
cmc
mov
mov
xchg
dec
adc
outsb
push
mov
data16
mov
es
pop
push
cmpsl
push
fnstcw
mov
test
dec
jle
mov
cwtl
push
xchg
add
cwtl
xchg
outsl
insb
and
popf
xchg
mov
lcall
push
dec
int
pop
push
push
gs
adc
decb
or
jge
pop
add
sbb
dec
mov
jbe
pop
push
aas
jae
add
aaa
mov
jbe
cwtl
cmp
pusha
mov
push
sbb
push
test
mov
mov
ret
shl
xchg
das
pop
inc
ja
es
push
and
jb
lret
adc
sub
inc
ss
movsl
sub
int
mov
lahf
or
into
inc
and
std
divl
mov
pop
mov
loope
sub
nop
dec
cmc
pop
fnstenv
sub
jg
xor
stc
test
jb
xchg
add
stc
mov
das
das
sbbb
mov
push
adc
sbb
push
fcoml
rol
aaa
push
xchg
dec
lret
or
xchg
rcrb
insl
dec
and
fstpl
sti
jle
cmp
je
push
mov
out
movsb
cmpsl
imul
mov
clc
add
cmpsl
add
inc
sbb
mov
cmp
test
popa
inc
or
iret
and
lcall
inc
mov
insb
aam
cli
jb
rcrb
out
test
and
mov
shrl
mov
mov
and
loopne
rclb
ret
mov
daa
lods
push
movsl
js
gs
sub
cmp
aas
adcl
mov
xor
jge
mov
iret
mov
dec
rcll
inc
sub
lea
jae
xor
sub
xchg
inc
aas
test
mov
jae
pusha
or
dec
test
jae
jg
jne
je
stos
fwait
std
fcoms
sti
fiadds
ret
pop
push
cltd
out
mov
ja
xchg
ud1
add
add
jae
jbe
pop
ss
mov
lock
into
sbb
imul
cs
ja
fisttpl
icebp
push
fwait
addl
pop
xchg
pop
mov
data16
sbb
cltd
xchg
pop
mov
add
push
pop
and
sbb
dec
fisubrs
mov
pop
outsb
xor
cmc
xchg
mov
sbb
dec
mov
ret
sub
xchg
nop
pop
call
push
or
sub
inc
jg
out
dec
jge
xchg
shrl
mov
add
jg
std
or
shlb
loope
and
xor
subb
xchg
sti
outsl
into
inc
add
push
out
sbb
mov
xor
inc
mov
addr16
outsl
sbb
ret
add
mull
loop
jne
stc
aas
push
sbb
mov
inc
cwtl
add
cmp
inc
notl
mov
xor
adc
clc
popa
pushf
dec
lret
xchg
add
sahf
add
mov
outsb
and
inc
lcall
or
mov
incl
imul
or
push
push
cmpsb
in
mov
mov
out
push
sahf
test
add
jmp
jmp
cs
loope
icebp
jmp
test
shr
and
xorb
imul
jb
push
mov
sbb
dec
sbbb
leave
add
shlb
lret
stc
mov
lods
mov
ret
addr16
daa
dec
shr
flds
adc
mov
or
das
mov
inc
mov
cmpsb
popf
or
loopne
cmovg
fidivs
lcall
mov
xchg
in
sub
loopne,pn
jl
or
xchg
test
mov
sbb
sbb
roll
repz
test
inc
outsl
les
fdivrp
push
lods
ret
in
sbb
xor
hlt
mov
jns
loope
lgs
lods
fsubrs
pop
fidivrl
push
add
mov
mov
test
insl
sysenter
shr
lods
cmp
sbb
je
test
lahf
xchg
xlat
call
and
jl
mov
pop
sbb
hlt
cmp
pop
pop
inc
or
std
push
mov
jp
pop
dec
pop
inc
pop
mov
xor
adc
ljmp
or
lcall
cmp
sub
lock
pop
mov
icebp
dec
xor
les
pop
adc
orb
arpl
dec
jb
insl
pop
sub
test
aas
cld
stos
jne
out
lret
add
pushfw
add
and
add
inc
imul
sub
and
cmp
iret
jns
push
push
pop
and
xchg
xchg
js
xchg
push
iret
int3
shrb
jnp
rcll
mov
push
xchg
mov
adc
pop
loop
andl
fldenv
mov
jb
add
idivb
sti
leave
aas
nop
subb
mov
xor
xchg
jne
pop
inc
push
mov
sbb
push
es
push
ja
mov
leave
ret
mov
push
and
lahf
adcb
dec
lods
loope
aam
jnp
aaa
mov
lods
and
in
pop
xchg
jge
xlat
in
outsl
fisubrs
mov
inc
or
int
pusha
jo
test
adc
test
mov
adc
bound
xor
out
pop
fwait
mov
pop
adc
mov
add
outsb
push
lret
cltd
xor
test
xor
cltd
sub
repz
mov
mull
imul
in
rclb
popf
shrl
push
add
jle
gs
rcrb
inc
dec
mov
xchg
or
cs
int
push
sbb
ret
scas
shrb
enter
xchg
dec
lods
int3
jbe
fmulp
xor
lock
xlat
and
insl
pushf
sahf
mov
mov
scas
xlat
int3
inc
lods
cmp
adcb
shl
int3
not
xchg
sbb
scas
push
xchg
out
sbb
vsubsd
push
lods
pop
data16
lret
mov
dec
es
cmp
add
mov
in
mov
cmp
mov
test
insl
mov
and
shll
loop
mov
or
jnp
xchg
or
xor
xchg
jno
addb
rcl
lret
cld
popf
stos
addr16
jne
lds
lds
mov
or
mov
or
add
lahf
pushl
sarb
inc
in
adcl
and
iret
cltd
add
cs
leave
or
out
jae
fldt
dec
in
cmp
or
mov
imul
jl
clc
cmpsl
mov
or
push
repz
addr16
stc
xor
xor
sbb
mov
pop
xor
int
push
pop
in
movsl
ds
and
mov
mov
inc
sub
mov
push
or
mov
jb
adc
xchg
test
sbb
addr16
jo
jnp
imul
cmp
mov
pusha
xchg
in
out
inc
mov
inc
pop
adc
inc
push
flds
xchg
jnp
test
inc
pop
xchg
sbb
bound
mov
sub
aam
stc
and
mov
punpckhwd
dec
xchg
int3
mov
fldt
ss
insb
imul
movsl
adc
lods
aad
sti
mov
fldcw
aas
fcoml
lods
cmpb
out
push
jmp
sub
inc
es
insb
add
lret
mov
popa
xor
add
mov
pop
stos
andl
xchg
fisubrl
fcoms
in
mov
add
lods
dec
scas
lock
xor
ret
into
lock
jp
mov
int
adc
bound
decl
fcmove
dec
arpl
mov
into
test
mov
xchg
das
js
xchg
mov
adc
insl
mov
xchg
mov
fsubrs
jbe
jecxz
mov
rorb
push
add
add
addr16
out
sbb
les
and
int3
adc
or
out
repnz
out
adc
push
testl
clc
pop
sub
push
jo
xchg
push
push
xchg
in
push
push
je
stc
dec
popa
mov
add
fs
inc
mov
ret
popl
mov
sbb
mov
mov
aam
sbb
dec
popa
mov
add
push
sub
imul
faddl
xor
or
cltd
xor
pop
adc
imulb
test
push
pop
push
xor
sti
notb
pop
test
in
push
call
mov
inc
sbb
imull
repnz
sarb
mov
in
jae
imul
bound
ds
cmc
inc
lods
xor
add
mov
in
jns
jae
insb
jo
dec
jmp
sbb
cmp
lock
insb
push
hlt
stos
xor
jae
sbb
je
hlt
roll
mov
mov
and
nop
sbb
add
cwtl
mov
ret
outsb
and
pushl
int
mov
xor
out
jne
ror
lods
imul
mov
pop
push
sub
lds
and
icebp
pop
loop
notb
imul
js
dec
adc
xchg
shrl
push
lock
add
xchg
push
mov
icebp
ficomps
xchg
shrl
xchg
push
lret
mov
adc
int3
fstps
mov
and
in
fisttps
mov
sbb
pop
int3
fldcw
and
inc
cmp
pmulhw
clc
ss
dec
hlt
pop
push
lods
jne
sarb
punpckhdq
push
jns
push
mov
test
push
fisttps
test
sbb
and
mov
and
inc
adc
mov
jp
loopne
and
push
or
cmc
push
sub
cwtl
das
pop
and
fsubs
aas
ljmp
mov
and
cmp
enter
xor
push
lret
outsl
xor
shll
inc
pusha
mov
out
xorb
mov
push
mov
cmp
fdivl
add
dec
mov
sub
test
ds
xor
jbe
psubw
dec
cmp
jmp
adc
mov
iret
cmc
push
into
test
rorl
xchg
add
daa
movsb
add
scas
nop
mov
dec
jbe
inc
cmp
pop
test
in
out
je
adc
sbb
xchg
cmp
or
filds
adc
stos
pushf
mov
loop
fcompl
aad
sti
int3
mov
dec
add
mov
aaa
loop
xchg
xor
subb
sbb
xor
mov
vshufps
aas
les
aam
sub
fmul
aaa
xlat
inc
xor
jno
adc
lds
incb
ja
cmpsl
ret
sub
lahf
in
pusha
imul
lret
ljmp
aad
shlb
ss
jbe
jbe
cmpsb
dec
mov
sub
pusha
cmpsb
out
add
xor
pop
sbb
push
fsub
and
jg
imull
shll
faddl
sbb
sahf
shrb
imul
lret
and
fldl
es
jb
aaa
clc
rolb
mov
cltd
jle
rcl
ljmp
insb
cmpsl
pop
in
push
out
sub
mov
mov
cmpsb
push
inc
daa
shl
adc
pop
and
mov
das
sub
xchg
mov
push
push
mov
and
adc
addr16
jle
add
cmp
sub
pop
rorb
mov
addb
inc
bound
push
repnz
cmp
add
inc
ficomps
add
jo
filds
fdivrs
sbb
pop
int
push
ret
mov
icebp
cld
mov
mov
dec
xor
sbb
mov
cmp
push
fidivl
xor
in
push
in
in
ficomps
cmp
mov
arpl
cli
ret
daa
fdiv
stc
sti
cmp
add
pop
cltd
pop
cmp
es
popw
sub
push
cmp
fsubrl
inc
xchg
imulb
insb
adc
and
call
mov
mov
sub
aad
cmp
test
jl
gs
cmpsb
jmp
xchg
and
sbb
pop
icebp
lds
std
ss
js
out
ss
dec
mov
add
lods
rclb
mov
sbb
cmp
ljmp
dec
jb
adc
sub
int
test
es
dec
ljmpw
bound
inc
adc
xchg
dec
and
stos
push
out
xlat
pop
pop
push
or
ffree
in
pop
push
adc
pusha
cmpl
nop
lea
sub
fwait
dec
mov
popa
in
enter
ljmp
or
popf
inc
add
pop
popf
add
movupd
gs
mov
insb
pop
es
pop
dec
ffree
mov
outsl
jno
mov
mov
push
mov
mov
mov
adc
jecxz
jge
es
test
fistps
lea
iret
cmp
sub
jle
les
xchg
arpl
test
and
xor
xchg
out
cmp
insb
mov
sbb
and
mov
adc
test
jge
mov
inc
push
movsl
ja
xor
dec
sbb
ljmp
xchg
ret
inc
push
out
lret
std
pushf
add
mov
pop
dec
pop
push
sub
xor
dec
lcall
lods
and
jmp
add
fdivl
pop
into
jecxz
sbb
sbb
or
lret
or
dec
int
lods
xchg
out
cwtl
push
fildl
mov
mov
jbe
add
cmp
inc
aaa
cs
ret
sub
fwait
outsl
and
lods
mov
repnz
sbb
dec
rcrb
mov
imul
sbb
shrl
push
aas
or
stc
repnz
mov
data16
es
dec
dec
sbb
cmp
adc
iret
hlt
pusha
ljmp
cmp
daa
add
pop
push
pop
dec
outsl
insl
pop
or
push
xor
cltd
into
aaa
mov
xchg
movsb
sahf
imull
jne
movsb
cmp
cmp
ret
shlb
outsl
in
push
xor
jmp
push
xor
adcl
cmp
adc
fstpt
add
xchg
pop
jnp
stos
xchg
and
inc
inc
gs
in
cli
ljmp
pop
dec
jecxz
jbe
sub
adc
iret
sti
sub
sbbb
aam
jle
cli
mov
call
mov
mov
pop
xchg
xchg
int
push
xor
lahf
push
jmp
imul
jns
stos
mov
lock
inc
jns
ja
mov
add
or
arpl
mov
adc
push
and
jno
outsl
enter
mov
inc
mov
mov
push
popa
mov
xor
lcall
adc
test
ficoml
stos
insl
lock
add
jmp
outsb
and
mulb
sbb
push
add
jl
cwtl
decb
mov
loope
or
push
adc
dec
push
shrl
xor
cli
push
add
jb
adc
ret
sub
xchg
bndldx
lcall
fwait
add
das
icebp
or
mov
cmp
pop
jg
test
push
scas
repnz
fisttpl
push
pop
lock
cs
scas
cmc
or
xchg
dec
sarl
push
movsl
jle
fldcw
ror
mov
push
es
lods
test
test
mov
push
popa
sbb
fisttpl
xor
or
jmp
inc
lcall
push
jle
shll
sub
sbb
xchg
int
lret
mov
xchg
jne
inc
pop
aaa
int
test
stc
mov
jnp
imul
push
fcoms
mov
push
and
mov
mov
or
xor
or
scas
xlat
or
les
mov
iret
add
mov
mov
int3
sti
es
daa
jl
aas
lcall
pop
jecxz
push
popa
out
sbb
rorb
sub
pushaw
aad
mov
inc
std
cmp
jl
cs
inc
sub
daa
paddd
dec
mov
xor
adc
ss
xchg
jbe
nop
cwtl
sbb
and
pop
sahf
jg
xor
int
inc
fwait
nop
push
popf
push
sbb
mov
pop
icebp
dec
jne
push
pop
dec
xchg
pop
movsl
adcl
sbb
pushf
cmp
or
loope
push
add
test
xor
and
sbbl
insb
jo
pop
pop
lea
jge
pop
cmp
jl
daa
sbb
xchg
arpl
ret
sub
sub
xor
mov
in
call
sub
mov
pop
sbb
into
fsts
popa
mov
icebp
pop
dec
jbe
xor
stc
mov
insb
call
sbbl
scas
cmp
mov
scas
xor
mov
loopne
sbb
and
stos
xchg
xchg
mov
fmull
scas
test
in
out
xchg
aad
jge
xor
repz
mov
stos
or
popf
negb
stc
or
std
and
add
or
xchg
jmp
pop
pop
push
pushf
mov
mov
cwtl
in
aaa
push
sbb
mov
dec
popa
ficoml
icebp
push
push
fcoml
test
lds
out
mov
dec
mov
dec
dec
pop
stos
ds
dec
int
sti
addb
lret
cs
out
sub
mov
out
dec
mov
cmp
mov
leave
dec
mov
sbb
cmp
push
mov
call
mov
fcompl
push
adc
pop
orl
or
ljmp
iret
cmp
cmc
loope
push
mov
push
icebp
aad
lds
pop
inc
add
outsl
loopne
push
imul
xlat
push
into
xchg
xchg
push
add
stos
mov
mov
inc
push
loop
inc
jle
out
sbb
push
pop
push
xchg
sbb
outsl
in
adc
pushf
frstor
sub
test
aaa
cwtl
xor
pop
and
mov
pushf
sbbl
ficoml
push
or
push
sub
mov
popa
lret
outsl
fwait
test
fs
jecxz
jnp
in
mov
ljmp
add
pop
inc
jbe
sbb
pop
mov
mov
mov
add
adc
jb
ja
adc
ds
loopne
inc
or
arpl
sbb
insl
lds
add
pop
jmp
adc
push
mov
notb
xchg
push
cs
mov
pop
jmp
xchg
mov
adc
sub
roll
adc
cmp
stos
out
dec
hlt
mov
pop
fadd
xchg
jae
ljmp
inc
gs
jb
xchg
jmp
and
and
dec
lret
fwait
pushf
xor
dec
cs
jecxz
test
dec
lods
xchg
cmp
int3
inc
test
add
jg
lock
sbb
jecxz
jg
mov
in
arpl
int
aas
lcall
adc
cli
imul
xor
mov
mov
ret
add
push
jns
cmp
mov
sbb
ljmp
sub
sti
insl
xchg
xchg
add
jecxz
add
mov
enter
mov
cmp
xor
das
xchg
xchg
mov
pop
fdiv
aad
fisubrs
fwait
jmp
fistps
aaa
pop
or
cmp
in
add
lret
out
arpl
sub
mov
push
lods
das
lods
jne
cmpsl
fistpl
dec
xchg
cwtl
andl
dec
sbb
addr16
into
xchg
out
or
push
test
lcall
lods
pop
lcall
or
mov
icebp
pop
mov
sub
xchg
xlat
jl
cmp
aam
outsl
xchg
add
out
mov
cli
sub
lods
xlat
dec
or
out
cwtl
mov
lods
stos
pushf
ljmp
out
or
les
enter
call
xchg
insb
clc
mov
or
out
rcrl
push
dec
xor
mov
fs
adc
xchg
jle,pt
iret
mov
fs
fcoml
stc
pop
and
add
cltd
aad
andb
inc
pusha
xchg
push
jb
arpl
aam
sbb
daa
mov
aas
pusha
clc
stos
sbb
ds
shll
mov
ret
lods
adc
clc
outsl
push
sarb
adc
pop
mov
mov
loop
cvtps2pd
in
sbb
mov
mov
shlb
lret
jnp
xchg
push
sti
pop
lret
push
pop
les
stos
daa
adc
mov
pop
mov
cmp
fwait
and
imull
push
test
add
repz
cmpl
jns
imul
fs
mov
push
dec
push
cmovp
pop
jp
mov
gs
push
mov
es
cli
or
mov
xor
add
lds
outsb
push
mov
jecxz
and
pushf
imul
jg
ss
inc
idivl
mov
ret
out
enter
mov
dec
sub
jecxz
push
dec
jmp
adc
cmp
enter
inc
shr
dec
js
das
mov
iret
fnstsw
dec
pop
hlt
test
nop
out
cmp
sbb
subl
std
fwait
push
jl
push
lods
sub
out
pushf
test
les
inc
dec
mov
aaa
and
test
gs
inc
pop
adc
xor
icebp
addr16
lret
or
cli
mov
mov
jecxz
or
add
cmp
fisttpll
in
sti
cmpl
dec
jle
inc
daa
adc
jo
sti
mov
je
mov
loope
cmpsl
mov
mov
push
mov
imul
push
ret
lret
cmp
aas
sahf
adc
adc
sti
pop
inc
and
mov
inc
mov
add
sbb
rcrb
cmc
mov
dec
jb
call
je
dec
cmc
xchg
je
mov
stc
inc
push
testl
mul
xchg
in
pop
jno
inc
iret
push
mov
or
or
sahf
dec
mov
mov
js
pop
pusha
hlt
mov
sti
fidivs
jne
movsb
in
pop
adcl
cmpsb
or
sbb
dec
cs
push
inc
gs
pop
jae
lods
pop
mov
jbe
cld
jne
inc
mov
sahf
sbb
lahf
xchg
hlt
and
in
inc
cmp
es
push
test
sub
mov
and
and
or
dec
ja
lea
pop
mov
push
fsubrl
stos
jle
dec
in
or
ret
mov
imul
les
or
cld
cmp
mov
movsb
mov
test
or
fdivs
std
inc
cmp
push
dec
xor
sbb
xchg
jmp
xor
jo
subl
lock
inc
push
inc
mov
lods
cmp
and
mov
xchg
fs
or
popa
test
cli
mov
cmp
mov
ret
push
push
mov
pop
cld
pop
std
ss
orb
andb
cmp
test
out
jp
lretw
jne
fs
in
sbb
in
das
sbb
sub
clc
sbb
ret
hlt
adc
test
sub
dec
sbb
adc
xor
mov
sbb
pop
rcl
jno
cs
test
cmp
test
jl
mov
mov
mov
in
lcall
add
pop
sti
push
dec
inc
sbb
mov
fidivrs
fidivs
sbb
inc
add
lret
adc
stc
jecxz
push
mov
push
lea
push
pusha
lea
test
fildl
push
aas
iret
pop
shrb
mov
cmp
faddl
shlb
dec
loop
test
repnz
pop
adc
push
enter
jl
outsl
mov
xor
pop
fucomip
stos
cmp
xor
and
mov
iret
arpl
arpl
xchg
inc
adc
lock
lret
pop
andl
aad
sbb
lods
cli
xchg
mov
sub
rcpps
and
ret
fadds
lods
push
mov
cmp
xchg
add
push
ja
test
in
lods
scas
outsl
mov
adc
pusha
sbb
test
rorl
mov
jno
lcall
insl
jno
sbb
push
and
fstpt
push
call
incb
mov
ss
cltd
push
pop
add
or
movsb
addb
lahf
mov
mov
lds
mov
jp
imul
aad
adc
enter
cmp
jno
movsl
mov
sub
pop
orb
xor
movsl
dec
notb
jb
int3
ss
mov
inc
jo
push
adc
roll
repz
mov
cmpl
sti
dec
sbb
stos
cmpsb
scas
ja
shll
loop
andb
sub
outsb
adcl
mov
jl
icebp
movsl
sbb
jge
pop
sub
pop
mov
pop
mov
pop
or
xchg
and
mov
aad
cmp
inc
xor
ret
repz
into
sbb
js
jb
bound
push
xor
nop
cmp
ja
pop
adc
loopne
push
imul
sbb
sti
lcall
and
pop
or
xchg
mov
dec
adc
add
push
notb
ficomps
dec
js
jp
imul
mov
aas
inc
lods
fistpll
jg
lods
inc
fucomip
and
cmp
push
sub
repz
xor
loope
stos
or
cltd
fildl
movd
bound
test
or
ljmp
xchg
pop
enter
mov
or
adc
or
bound
fs
jmp
dec
shlb
enter
sub
and
jle
inc
flds
loope
inc
mov
push
pop
fsubs
mov
mov
add
mov
insl
and
push
fwait
outsb
js
aam
adc
pop
sub
ret
cmc
cmpl
lahf
mov
xchg
jmp
cld
lcall
xchg
push
push
pop
or
idiv
push
arpl
pop
js
dec
mov
out
mov
outsb
xor
lock
pop
loope
test
xor
scas
mov
push
pop
mov
inc
aam
in
arpl
sub
aam
lds
in
xchg
popa
sub
shll
xorb
mov
cmp
je
stc
stos
test
xor
lret
mov
lret
lea
xchg
dec
mov
jnp
or
or
cmp
jb
mov
popf
adc
ljmp
push
dec
repnz
add
mov
fists
cltd
loopne
mov
into
and
pop
xchg
add
add
push
out
jmp
test
mov
rcll
xchg
inc
inc
sub
cmpb
cs
push
mov
ds
call
cmp
movsb
incb
dec
rorl
cmp
movsl
mov
cli
pop
adc
je
in
and
rorb
cmp
and
mov
mov
xor
xor
adc
mov
call
mov
cltd
clc
mov
cltd
push
test
sar
xor
cltd
fdivs
jae
mov
out
jmp
push
adc
jae
xor
jmp
mov
out
jnp
xchg
cmpsl
mov
push
enter
push
push
mov
push
in
adc
pop
insb
rorb
mov
lahf
cmpsb
call
pushf
and
mov
scas
sbb
mov
in
scas
stc
mov
jecxz
pusha
adc
mov
rorl
add
ja
mov
inc
cld
jno
mov
xchg
mov
xor
dec
xor
push
decl
rcrb
imul
pop
mov
clc
pop
jno
cmc
sbb
sbb
cmp
cmp
jp
push
std
aaa
add
iret
and
push
or
movsl
out
inc
xchg
pop
data16
mov
cltd
xchg
imul
lods
ds
rorb
test
cmp
xchg
sbb
mov
bound
dec
push
cli
or
cwtl
mov
mov
flds
push
cmp
fs
leave
xchg
insl
dec
sbb
cld
adc
divb
stos
test
pop
mov
xchg
out
sbb
ljmp
jle
lock
roll
dec
lods
mov
jg,pn
and
loopne
int3
push
popa
pop
out
sub
imul
das
in
sahf
push
pop
std
pop
out
movsl
insb
leave
cmp
jbe
fdivrp
jno
clc
rcr
test
hlt
xor
and
inc
add
fisubrs
bound
add
mov
fisubl
and
fs
mov
jmp
lcall
mov
test
adc
jae
push
lret
insb
sbb
lods
mov
xor
push
pop
and
pusha
enter
pusha
push
inc
inc
mov
inc
sbb
cmc
movsl
xchg
sub
loope
pop
cmp
sub
pop
jo
and
mov
push
push
pop
sub
or
mov
push
movsb
cltd
pusha
sub
mov
dec
ljmp
jne
dec
mov
dec
sub
ret
adc
jbe
jo
jbe
xchg
mov
lret
rol
add
sub
fdivrl
cmpsb
xor
push
pop
and
pop
fstl
popa
test
int
ss
jg
rol
movsb
add
cmp
fwait
lret
jae
inc
stc
sub
cwtl
inc
mov
sub
push
cli
cmp
ss
lock
shlb
mov
xor
cmp
shll
cmp
iret
daa
test
inc
xor
push
inc
cli
in
shufps
xorl
cs
inc
mov
cwtl
out
mov
mov
push
or
xchg
sub
jne
sbb
pushf
sbb
push
xchg
lods
xchg
cwtl
sahf
test
mov
pop
mov
mov
mov
push
push
pop
insb
rcr
pop
xor
pop
cmp
pop
lods
mov
insl
fstl
dec
mov
mov
sub
xor
jnp
dec
jne
push
sub
into
fdivr
jb
add
out
shrb
jle
data16
dec
ljmp
cs
outsl
mov
sbb
sub
push
test
pop
sbb
outsb
cmp
cld
xor
movsb
pop
pusha
jl
enter
and
stc
push
js
addb
and
ja
jl
shl
aam
jno
lods
lret
add
xchg
and
adc
and
xor
fxch
int
je
insb
cmpsb
pop
jo
xchg
push
es
ret
shll
bound
push
test
jne
add
cmp
or
xchg
shrb
out
cmp
aad
and
xor
push
inc
nop
add
pushf
decb
iret
ljmp
repz
add
mov
inc
fwait
leave
jmp
mov
ljmp
push
into
cmpb
mov
sub
push
add
xchg
mov
icebp
sbb
mov
sbb
addl
fnstenv
pop
or
mov
cmpsl
jp
mov
aaa
mov
out
idivl
jle
inc
hlt
bound
cmpsb
hlt
add
lods
inc
sub
pushf
outsl
mov
lret
lahf
push
fisttpl
jno
cmpsl
imul
jmp
cmp
cwtl
pop
pop
cmpsl
push
jb
scas
addr16
mov
inc
jb
sbb
pusha
mov
inc
xlat
push
popf
mov
cltd
int3
into
push
dec
es
pop
jg
xchg
xchg
je
rol
mov
adc
lock
imul
xor
xchg
shll
jne
pop
aam
mov
icebp
inc
aam
or
or
jmp
lds
mov
insb
xor
mov
sub
pop
nop
adc
xchg
clc
pop
popf
insl
test
int3
xchg
loopne
push
lods
scas
arpl
and
aaa
adc
sbb
xchg
jle
jb
and
bound
scas
mov
in
xor
insb
shlb
ljmp
orb
leave
bound
jnp
xchg
jns
aas
sbb
gs
sahf
jno
fimuls
mov
add
push
xchg
fwait
in
jge
pop
adc
or
xor
xchg
lahf
lcall
inc
push
nop
jb
mov
inc
jo
cwtl
push
aam
aam
xchg
ret
fnstsw
lret
mov
inc
call
and
push
sbb
add
xchg
mov
or
jbe
repnz
adc
sub
or
or
outsb
push
sbb
out
nop
ret
mov
loopne
push
push
pop
loope
in
mov
lods
and
or
jl
or
pushf
sub
xchg
sbb
inc
rorl
mov
mov
test
add
add
mov
pop
test
and
fdivl
jne
sub
stc
icebp
cld
scas
adc
pusha
bound
cmp
adc
inc
xor
cmp
xor
lds
leave
test
cmpsl
outsb
pop
idivb
xchg
mov
add
sbb
sbbb
fnstsw
dec
push
in
fwait
call
push
add
mov
pop
inc
jmp
shrl
ret
mov
imul
es
and
push
mov
and
pop
in
mov
pop
stos
je
fs
cmp
scas
mov
sbb
clc
mov
cmp
shl
jae
cld
push
pop
dec
fmull
mul
or
stos
neg
aaa
jl
cmp
pop
test
addb
pop
inc
push
adc
mov
sbb
and
adc
lret
xchg
mov
popf
jns
jns
es
mov
push
push
iret
test
inc
aam
xor
lock
and
inc
mov
inc
xchg
ss
push
sub
shl
adc
adc
data16
dec
lcall
inc
movsl
lock
or
stc
testl
aaa
daa
push
adc
loope
or
mov
mov
xchg
inc
push
push
sbb
xchg
inc
jmp
mov
pop
fisttpll
mov
in
bound
rorb
and
add
sbb
movsb
fstps
out
jecxz
imul
dec
cmp
loopne
push
or
lods
sbb
jmp
mov
fsubr
add
imul
test
imul
loope
sbb
cmp
cmp
dec
je
xchg
mov
sbb
or
mov
fadds
pushf
loopne
sub
pop
push
sbb
xor
sub
std
jns
in
pop
fbstp
stos
cwtl
sbb
dec
movsl
jmp
inc
shrb
stos
push
adc
mov
push
or
xchg
pop
ret
nop
mov
push
xlat
dec
push
out
fstl
addl
fildll
lods
dec
int3
cmpb
divb
hlt
aad
mov
mov
into
js
adc
movsl
jne
add
push
inc
add
lret
sbb
cli
cmp
fs
cld
in
sub
sub
cmpsb
out
dec
repnz
cmpsb
jge
sub
pop
stos
ficoms
xor
push
and
xor
fmull
iret
jae
and
pop
mov
mov
cmc
dec
jo
sarl
inc
aas
mov
cmp
xchg
mov
cmp
sub
push
jmp
push
faddl
in
les
dec
mov
inc
pop
mov
adc
push
dec
out
addb
pop
mov
pop
jle
loope
addr16
ret
lea
enter
or
add
mov
jns
dec
xchg
pop
inc
or
lcall
push
mov
mov
test
stos
mov
mov
je
lahf
rol
dec
sbb
ret
das
dec
sbb
jno
enter
jb
add
aad
mov
movb
xlat
lahf
cmc
test
aas
ret
lahf
add
int3
mov
out
mov
mov
ljmp
mov
xor
inc
xchg
mov
dec
pop
mov
and
push
cmpsl
sar
sbb
cld
cmp
sub
and
lret
dec
pop
test
sub
xchg
nop
out
ds
push
fadds
test
inc
ret
jbe
jg
and
xchg
push
cmpsl
add
loop
push
or
test
xor
test
das
cwtl
addr16
cmpsl
pop
and
jl
rclb
movsl
jmp
or
es
mov
rorb
mov
adc
jle
jns
and
jmp
jmp
mov
in
add
pop
adc
icebp
xor
or
pop
into
cmp
mov
dec
dec
and
push
mov
mov
add
or
js
loop
mov
push
push
test
in
data16
pop
andl
xchg
mov
add
mov
pusha
mov
jg
es
flds
inc
bound
das
movsb
popf
stos
push
mov
hlt
dec
outsb
andl
mov
sbb
mov
xchg
sub
lcall
or
repz
cmpsl
aas
test
mov
jno
clc
orb
ljmp
inc
push
jg
lods
or
lods
lret
mov
scas
jl
pop
in
jecxz
or
aam
mov
lret
aad
push
pop
lcall
mov
adc
mov
lds
xchg
pop
mov
sub
jmp
test
in
pop
aam
test
inc
jle
mov
mov
pop
call
pushf
rcrb
xlat
cmp
fisubl
lods
xor
pop
aas
cmpsb
aam
mov
dec
cmp
jp
cmp
dec
sub
xchg
xchg
mov
mov
push
enter
pop
cmpsl
xor
lcall
sarb
cmp
push
iret
push
pop
jl
cmc
and
bound
test
and
into
xor
lods
or
test
xchg
lods
pop
lahf
mov
adc
pop
jnp
pop
xchg
call
in
sub
shrl
jo
sbb
pushf
jg
pop
xchg
mov
sbb
les
aas
dec
jmp
sbb
push
dec
lea
inc
inc
das
xchg
cld
or
jae
pop
jle
inc
cltd
notb
stos
stos
cltd
test
mov
and
adc
pop
mov
fdivl
into
mov
lea
xor
or
fcoms
mov
push
mov
stos
push
push
xor
dec
cmp
inc
ret
push
daa
std
inc
push
sub
data16
int3
jge
sbb
push
add
divl
lods
jmp
add
nop
xor
mov
cs
push
or
dec
clc
bound
xchg
movsl
adc
fadds
push
mov
inc
jbe
repnz
cmp
mov
dec
divb
testl
adc
sbb
insb
pop
add
dec
aam
push
xlat
lock
xor
stos
lock
cmpsl
stos
jecxz
or
gs
dec
mov
mov
and
pop
shrb
gs
mov
lret
sbb
mov
iret
test
stc
imul
and
cmp
std
add
cs
mov
andl
xchg
push
out
stos
pop
or
dec
rclb
ret
int3
cltd
or
stos
icebp
mov
push
hlt
nop
or
inc
dec
sub
call
sti
or
mov
sub
jge
mov
inc
jp
or
xchg
lods
nop
les
stc
jge
inc
aas
mov
popf
loop
lahf
xchg
dec
pop
negl
rep
xchg
jns
xor
or
pop
mov
xchg
mov
lcall
loope
subl
mov
rcll
xor
jle
inc
fwait
imul
mov
cld
decb
push
and
pop
jbe
dec
scas
inc
xchg
ja
pop
jae
and
pop
add
push
add
rcrb
aaa
dec
and
and
leave
ret
adc
enter
mov
cs
add
add
mov
and
xchg
adc
out
in
cli
jecxz
jecxz
cmpsl
mov
test
cmp
pop
mov
xchg
mov
adc
scas
imul
pop
adc
ss
push
scas
push
inc
ljmp
add
push
push
cmp
xchg
or
inc
push
bound
xchg
jmp
in
pop
sub
roll
sbb
xlat
or
push
push
out
mov
int3
cld
stc
fwait
sbb
test
jne
cmp
or
mov
sbb
out
jmp
push
or
insl
mov
int3
mov
bound
pop
xchg
mov
mov
push
pop
cmp
mov
sub
out
cwtl
jge
shrb
dec
fisubrs
dec
sub
call
jp
stos
orb
sub
repnz
or
jb
sub
cmp
insl
lret
repz
subb
dec
xor
adc
push
pusha
pop
out
or
pop
sub
cld
fsubrp
sub
mov
xchg
into
leave
adc
outsb
inc
scas
jb
imul
jae
sub
movsl
in
test
fstpl
inc
xlat
mov
dec
popf
lcall
cmp
sbb
rcrl
jno
jmp
pop
dec
pop
es
xor
roll
stos
sbb
mov
cltd
lret
je
mov
jno
in
iret
out
in
mov
out
push
lret
or
jmp
jns
mov
mov
xchg
adc
cli
jl
repz
adc
out
mov
fldenv
xchg
push
mov
sub
loope
in
aam
pop
and
jl
xchg
or
stc
sbb
icebp
inc
ljmp
repnz
ret
mov
fstpt
cwtl
insl
jmp
dec
mov
or
sbbl
xor
cltd
stos
push
jne
xchg
aad
repnz
jmp
aaa
mov
jg
pop
stos
lret
or
test
add
popa
into
mov
mov
divl
fcoms
and
push
in
xchg
jo
cmpsl
add
test
clc
loop
stc
add
push
sbb
push
add
mov
jo
push
adc
pop
dec
sbb
fnstcw
cmc
fs
int3
adc
test
ret
push
add
push
fisttps
loop
imul
sti
imul
js
rcll
shrb
rorb
add
push
pop
ror
dec
fwait
movsl
sahf
mov
call
xor
or
push
andl
cmp
idivl
adc
mov
adc
or
gs
mov
or
mov
add
jecxz
das
cmp
iret
inc
mov
inc
mov
push
orl
popa
insl
ljmp
cmpsb
pop
test
out
sub
test
mov
daa
rorl
rcrl
push
push
sub
pushl
or
popf
mov
mov
push
push
xchg
mov
fs
testl
loopne
cmp
jo
add
adc
mov
adc
pushf
std
stos
sti
adc
mov
out
xor
mov
xor
in
mov
imul
mov
sub
jl
es
inc
incl
mov
les
or
repnz
gs
pop
xor
cmc
inc
dec
out
insl
sub
inc
jo
add
xchg
rcrl
xor
dec
pop
mov
push
xor
pop
shrl
xchg
sbb
xchg
lea
fisubrl
mov
je
dec
adc
dec
pop
aam
ret
xchg
push
pop
out
jmp
sub
mov
jo
sbb
push
bound
movsb
push
xchg
or
shrl
scas
jmp
push
sbb
xor
insb
cmpl
dec
adc
shll
in
daa
inc
mov
cs
into
dec
out
arpl
ret
cmp
pushf
cwtl
lahf
jecxz
pushf
out
inc
movsl
enter
jecxz
pop
jb
and
fcompp
mov
xor
bts
into
lock
fistl
inc
scas
inc
jp
es
int
mov
lods
in
pop
cmp
call
push
sti
xchg
cmpsb
fxch
cmp
nop
jg
jbe
lret
xchg
roll
fcmovnu
outsb
push
inc
and
sub
pop
imul
mov
push
lret
push
pop
pop
mov
xor
pop
jno
inc
lds
shll
cmp
int3
in
jecxz
clc
pushf
cmp
cld
pushf
ljmp
mov
lret
dec
rcr
dec
stos
xchg
dec
sbb
fst
push
xchg
xor
lret
jo
sub
dec
fdivrl
push
sbb
fstp
jp
mov
in
pop
loop
addl
sti
outsb
fucomip
add
push
and
xchg
fnop
ret
popa
dec
jmp
xchg
fldl
repz
add
pop
or
pop
test
cmp
stos
sbb
int
push
ds
clc
dec
lret
or
mov
aas
mov
outsl
sbb
ja
imulb
sub
fwait
int
inc
out
mov
mov
movsb
fs
cltd
lds
and
imull
es
stc
jle
loop
mov
push
mov
lcall
cmp
flds
add
hlt
sbb
xorb
mov
les
inc
mov
cmp
mov
xor
mov
pop
inc
push
arpl
in
jns
inc
pop
sbb
ds
pop
lret
mov
test
in
and
mov
int3
xchg
jnp
push
repz
imul
pop
inc
imul
out
stos
mov
inc
sub
and
pushf
cltd
sbb
mov
cmp
or
flds
sti
xchg
xchg
flds
mov
xor
fidivs
inc
xchg
repnz
mov
cli
sub
cmc
inc
sub
iret
cmp
lock
mov
out
jns
mov
add
sbb
popf
ret
and
xor
push
pop
out
xor
bound
orl
loop
gs
mov
aad
jnp
leave
aam
mov
arpl
test
insl
push
fdivrl
scas
mov
sub
ja,pn
jge
jne
xchg
jae
cmp
sub
stc
mov
andb
xor
enter
imul
fisttps
xchg
iret
ficoml
adc
sub
or
sub
mov
movsb
adc
sti
or
test
pop
call
pop
mov
inc
inc
push
test
pop
add
lea
daa
gs
fs
lret
fstpt
ja
push
jo
mov
sub
insl
outsl
or
inc
fsubl
rcrb
lret
and
mov
repz
add
jne
enter
add
cwtl
xchg
in
cmp
test
into
push
inc
outsb
imul
lcall
dec
mov
mov
inc
decb
or
movsl
push
test
sbb
jl
in
pop
std
lret
inc
repz
mov
adc
add
call
sub
mov
xor
daa
out
sub
and
push
cmpsb
les
add
lea
adc
mov
or
outsl
mov
jg
imul
inc
arpl
je
add
xchg
mov
out
outsb
rcrb
fidivl
mov
and
lock
mov
mov
mov
push
inc
adc
sub
or
popa
iret
dec
xor
call
xor
jecxz
jp
push
sbb
test
int3
dec
inc
mov
outsl
mov
mov
lock
lahf
add
frstor
repnz
or
xchg
or
mov
add
fmuls
mov
dec
test
js
inc
arpl
jb
sub
mov
aaa
sbb
gs
jge
or
mov
jns
sbb
adc
outsl
and
stos
cmpsb
lret
sahf
mov
mov
sbbl
in
lcall
sub
aam
mov
mov
ficoml
rcll
sti
neg
jecxz
mov
leave
fistps
rolb
xchg
jl
add
jnp
sti
daa
mov
dec
sbb
sbb
pushf
push
lea
adc
popa
xor
in
sbb
dec
sbb
mov
xor
out
icebp
or
mov
mov
cmpsb
jb
out
mov
jnp
mov
imul
jmp
scas
jmp
push
jl
out
jmp
or
add
lahf
sbb
rclb
popl
lods
cmp
sbb
xchg
je
das
icebp
pusha
addb
das
ja
test
push
in
lcall
sub
in
aad
js
mov
pop
into
ret
dec
cmp
or
mov
sti
adc
dec
pop
push
xor
sbbl
inc
dec
fidivrs
cmpsl
inc
jl
cmp
scas
mov
mov
sub
push
ds
stos
mov
fmul
sub
push
fsts
mov
lret
mov
pop
int3
xor
jnp
mov
pop
pop
outsb
shl
icebp
pop
sub
test
sub
xchg
shl
jnp
mov
dec
daa
imul
xchg
fildl
insl
dec
stos
cmpsl
mov
mov
cli
add
outsl
mov
pop
jl
lcall
mov
inc
scas
mov
mov
mov
es
sbbb
mov
fdivs
xchg
outsb
mov
mov
inc
pop
fldlg2
mov
xor
leave
sbb
sub
mov
jmp
jns
icebp
pop
pop
inc
or
pushf
push
xor
pop
adc
int
jge
sbb
mov
jecxz
icebp
cld
out
xlat
jl
stc
mov
sahf
xor
daa
cwtl
cmpsl
mov
sub
cli
jecxz
inc
xchg
mov
je
mov
or
xchg
pusha
sahf
pop
xchg
out
xor
sbbb
push
jnp
enter
aas
cwtl
jb
mov
cmc
imul
shll
loope
popa
xchg
mov
cltd
push
cmpsb
jo,pn
testl
cmp
add
mov
pop
insb
daa
jmp
dec
roll
addr16
mov
test
ret
inc
movsl
fisubl
mov
aaa
xchg
xrelease
int3
icebp
cmp
pop
out
or
ja
mov
fmuls
xchg
pop
sahf
cmp
add
or
outsl
cld
mov
pop
jb
adc
lods
lcall
ss
ljmp
xchg
out
mov
xor
xchg
adc
sbb
loope
out
sub
sti
or
mov
ja
ficompl
test
jmp
ss
mov
dec
and
mov
sbb
dec
je
add
lock
in
icebp
dec
xchg
in
aas
inc
fiadds
rorb
pusha
cltd
idiv
pop
out
jmp
icebp
sbb
add
pop
lock
es
or
add
xchg
add
lret
jbe
mov
sbb
or
stos
out
xlat
mov
add
out
pop
cmp
lea
subb
aam
pop
aaa
or
in
dec
jl
cltd
push
mov
mov
andb
cltd
cmp
inc
push
insl
xchg
adc
les
inc
mov
add
ja
fldenv
lcall
jmp
push
sub
jne
je
or
cltd
dec
fmul
xchg
inc
mov
push
iret
decb
insl
jbe
mov
xchg
popf
cwtl
mov
inc
out
inc
sub
cs
and
dec
adc
jne
lea
pop
mov
std
cli
mov
xchg
xor
dec
mov
enter
out
sub
push
fidivs
test
mov
inc
gs
ljmp
lahf
insb
fldt
push
pop
and
pop
inc
insl
pop
lret
lods
cmpsl
repz
in
hlt
jnp
xor
bound
dec
cmpsb
insl
out
sti
push
pop
pop
xchg
mov
push
xchg
push
fwait
lock
sarl
xchg
xor
xchg
pop
movsb
dec
aad
adc
xchg
or
rclb
adc
jp
aad
mov
ljmp
dec
fwait
in
imul
push
jle
fists
push
mov
andb
fidivl
pushf
add
xlat
pop
fwait
lret
outsb
add
out
bound
xor
lds
mov
scas
and
jno
mov
imul
mov
in
cmp
mov
aam
fidivrs
mov
add
mov
fnsave
rcrb
inc
pop
shrl
insl
or
mov
and
cmp
push
pop
mov
inc
iret
ljmp
xchg
xor
outsl
cmp
ja
lret
cmpsb
push
mov
mov
outsl
sub
dec
das
out
inc
push
mov
out
pushf
outsl
loopne
pxor
sub
pop
enter
or
adc
imul
or
cmp
sbb
mov
movb
call
fstpl
leave
push
ds
nop
inc
adc
addr16
rcr
or
sub
or
mov
jbe
dec
dec
dec
cmp
or
inc
mov
stos
stos
push
and
xlat
gs
in
xchg
pop
or
les
in
and
jecxz
enter
push
popa
sbb
out
sub
pop
loop
mov
enter
scas
pop
adc
push
mov
das
inc
ret
cmp
or
rorb
sti
cmc
lret
test
dec
enter
shll
sbb
les
mov
out
aam
cmc
repnz
push
out
xor
pop
cmp
std
mov
cmc
icebp
xchg
in
jbe
subl
mov
push
popa
in
dec
scas
xchg
pop
dec
mov
cltd
sti
fcmovnb
leave
imulb
adc
fst
mov
dec
mov
xchg
xor
aaa
stos
xor
mov
cwtl
leave
ds
xchg
nop
cmp
cli
xor
aas
jbe
pop
adc
jecxz
shll
inc
sbb
cmp
dec
mov
adc
call
ss
hlt
nop
jnp
xchg
xchg
xor
jbe
aaa
xchg
pop
push
idivl
je
mov
mov
dec
push
mov
add
add
dec
sbb
mov
fsub
mov
iret
fsubr
into
pop
mov
ja
mov
ja
jns
shr
sub
dec
xlat
fidivl
xchg
lahf
out
add
fidivl
or
sub
test
outsb
mov
inc
and
jnp
inc
hlt
out
fimull
push
outsb
repnz
stc
inc
push
inc
jle
mov
mov
sbb
or
add
inc
sub
imul
cwtl
pop
mov
in
loopne
and
int
pop
sub
fmuls
sbb
lahf
lock
pop
cmp
mov
dec
and
shrb
xchg
mov
xchg
shrl
cmp
mov
add
out
jns
call
les
pop
cmp
and
xchg
mov
hlt
pop
stos
int
mov
xorb
mov
es
mov
jmp
inc
pop
outsl
mov
ja
or
sub
cmp
sub
adc
push
lods
inc
cmp
xchg
mov
cmp
mov
mov
fwait
mov
sub
subb
gs
dec
and
cmp
dec
push
shlb
lods
sub
in
aas
scas
jne
push
hlt
pop
xor
xchg
stc
out
rcrl
pop
jg
mov
scas
ljmp
aad
dec
push
call
and
dec
jbe
fucom
inc
xchg
inc
add
push
mov
sbb
pushf
movsl
pop
xchg
add
adc
sti
jb
jbe
push
subb
testl
cwtl
jl
cmp
ret
sbb
scas
mov
mov
and
lock
imul
prefetchwt1
or
sub
mov
in
pop
mov
mov
in
push
mov
rol
pop
loope
in
sub
test
cmp
stos
pop
jp
add
mov
add
mov
repz
and
repnz
lods
sub
add
mov
inc
bound
mov
movsb
inc
das
jno
les
loope
push
fcomp
movsl
mov
or
cs
inc
xchg
or
xchg
out
mov
sub
mov
rcl
cmp
ljmp
out
cs
mov
push
and
and
mov
pop
and
imul
xchg
sbb
scas
push
test
cmp
pop
movsb
out
scas
add
nop
stc
fidivrs
sub
jle
inc
jge
aad
xchg
sti
stos
fmulp
fwait
mov
and
fdivs
jbe
cld
cli
jno
ss
aaa
in
loop
test
dec
ds
sbb
lret
push
test
mov
or
mov
mov
loopne
cli
lret
loope
and
xchg
push
mov
test
lret
jb
lret
cmp
orb
lahf
xchg
fiaddl
adc
int3
pop
aas
outsb
jae
pop
mov
lret
jne
adc
cmpsl
inc
jl
mov
addr16
pop
cs
outsb
lcall
dec
imul
cmp
gs
dec
mov
mov
loop
and
xchg
xchg
jbe
ss
in
adc
hlt
add
cwtl
mov
mov
cmp
data16
ss
mov
push
das
fildll
fidivl
or
std
cld
xor
push
rcrb
stc
sub
hlt
xor
sub
movsb
test
mov
cmpsb
xchg
xchg
int
dec
pushf
sub
addb
inc
push
dec
push
lcall
dec
dec
xchg
adc
insb
test
or
icebp
fwait
cwtl
push
hlt
out
in
sub
stos
je
out
xchg
mov
movd
imul
pop
jo
cmp
shr
negb
das
lahf
push
xchg
dec
ret
mov
inc
scas
out
test
mov
insl
and
ficoml
insb
and
mov
xchg
xchg
scas
sub
dec
hlt
sub
inc
pusha
in
aaa
andl
dec
out
xlat
leave
dec
shll
mov
fsts
je
jns
sbb
mov
push
repnz
mov
xor
and
cmc
sbb
scas
mov
sti
aaa
add
idiv
nop
pop
adc
sbb
pop
jmp
mov
dec
ds
push
popf
jg
popa
xor
repz
mov
mov
imul
jb
inc
enter
lods
in
scas
adc
popa
pop
aam
lahf
aaa
cmpsb
lret
mov
imul
pop
in
xor
jmp
mov
rorb
aam
lcall
pop
pop
jg
jg
xchg
inc
icebp
dec
addr16
fistpll
scas
fwait
and
sub
dec
mov
in
xchg
xchg
and
out
cmp
sti
shl
xor
or
out
xchg
or
adc
mov
cs
sbb
icebp
out
push
shrl
lcall
lret
outsb
test
dec
js
insl
stos
xor
jecxz
in
into
push
hlt
mov
test
sub
jg
xor
mov
inc
jle
adc
mov
fistpl
loopne
xor
ja
jno
mov
popf
mov
bound
adc
test
loopne
ds
push
fldlg2
and
inc
fcmovne
sub
xchg
mov
xchg
adc
ds
or
fxch
aaa
insb
cmp
mov
push
sbb
mov
andb
and
inc
inc
repnz
rorb
out
cmp
cmpsb
pop
ss
adc
xor
or
jl
test
test
ja
or
push
icebp
rol
xor
sti
pavgb
clc
ljmp
ret
adc
xor
jecxz
mov
les
outsb
jno
push
and
shll
shrb
or
and
cld
lods
loop
jge
adc
push
sub
mov
mov
sub
dec
ficompl
js
sbb
rol
mov
fisubrs
bound
add
je
sub
test
lcall
test
xchg
push
push
sbb
cmp
mov
enter
push
hlt
ficoml
jnp
mov
and
fldt
pop
arpl
adc
fdecstp
mov
mov
leave
scas
xor
mov
mov
addr16
mov
movsb
lods
jae
lods
and
pushf
mov
mov
mov
push
mov
add
jne
mov
subl
shr
subl
adc
scas
and
mov
add
ljmpw
sub
push
xchg
add
push
push
push
mov
adc
jbe
lret
push
cli
ret
jns
sub
xchg
adc
mov
outsb
mov
mov
out
cs
mov
ret
cwtl
sahf
push
sub
lahf
inc
and
push
mov
movnti
and
fbld
loope
loope
cmp
or
in
jns
jl
outsb
loope
mov
imul
or
and
pop
popa
rcr
aad
je
mov
and
mov
dec
shlb
jns
bound
test
cmpb
sub
fstpt
outsb
dec
out
test
movsb
jne
stos
and
xor
and
scas
repnz
xchg
test
sarl
adcl
jl
out
repz
jb
cmpl
and
jne
cmp
jo
fidivrl
mov
push
insl
dec
int
sub
mov
dec
push
cwtl
mov
outsl
jne
adcl
push
fidivrs
in
xchg
fmuls
cmpsl
or
and
outsb
lret
lods
fstp
jo
pop
and
jmp
xor
inc
push
and
add
movsl
mov
lret
jb
sub
jge
add
aad
hlt
mov
sub
lret
dec
cmp
push
cmp
iret
popf
pop
jmp
cmpsb
sbb
fisttpll
or
orl
jecxz
push
or
out
xor
sbb
mov
out
jne
adc
test
sub
mov
jp
popa
test
ret
out
outsl
es
jmp
mov
mov
cmp
in
stos
add
sbb
mov
and
cltd
add
leave
dec
insl
jne
dec
lea
cli
jge
sub
and
cmp
mov
push
sti
jne
xor
cli
cld
lret
xor
cs
inc
gs
sbb
in
xor
xchg
mov
xor
aam
js
out
sti
inc
dec
int
inc
fsubl
inc
push
in
std
out
pop
fisubrl
cmp
in
cmp
push
inc
pop
push
inc
bound
loop
enter
jge
sub
mov
mov
jmp
and
sub
fbld
popf
push
stos
fs
xor
adc
fwait
inc
lahf
sub
pop
insl
xchg
jae
push
pop
xchg
or
ficompl
movsb
pop
loope
cmp
int3
adc
sub
pusha
or
cmp
sbb
fistl
imul
xlat
in
mov
mov
into
addr16
pop
pop
out
mov
add
xchg
inc
das
sub
add
in
fisubs
mov
and
shlb
ljmp
inc
popa
es
cltd
in
pop
imul
scas
xchg
cli
and
mov
stos
repnz
cmp
xchg
sahf
push
cmp
gs
adc
cld
repnz
add
mov
in
xchg
hlt
imul
inc
testb
mov
and
xorl
jne
mov
pop
push
mov
aam
loopne
mov
movsl
cmp
idivl
loopne
cwtl
or
fistps
lea
sbb
pmulhw
mov
stos
scas
jbe
inc
es
adc
lds
mov
dec
stos
xchg
lods
fsubrl
dec
xor
pop
je
test
add
xchg
add
bound
ficoms
into
fs
xchg
adcl
ret
ficompl
stc
rcll
mov
jo
insb
add
dec
push
sbb
aas
sbb
inc
jns
out
cmc
mov
xchg
test
js
pop
sahf
dec
loopne
xchg
sub
inc
mov
mov
imul
sub
and
pop
pop
daa
inc
pop
pusha
ret
inc
test
lcall
lods
push
mov
sbb
cmp
adc
xlat
leave
push
mov
sbb
cmp
mov
add
mov
jge
mov
pushf
and
dec
mov
mov
push
jmp
ds
jns
mov
mov
push
inc
or
clc
inc
push
mov
xchg
pop
and
jo
xchg
sub
movsb
pop
lcall
in
scas
cmpsb
in
int
push
sub
popf
shrl
cld
in
xorb
insl
out
out
sbb
test
pop
pop
sbb
test
jae
loopne
push
fistl
mov
xchg
jecxz
mov
es
jo
mov
mov
cld
push
gs
repnz
out
es
inc
stc
mull
pop
in
test
push
lahf
sbb
aas
adc
push
gs
ds
data16
sub
push
rolb
add
xor
pop
mov
out
push
loopne
pop
push
mov
scas
hlt
inc
pop
mov
xor
mov
jg
mov
xchg
or
jp
push
mov
sahf
mov
shl
pop
jecxz
or
int
push
lock
std
or
pop
add
dec
mov
insl
pushf
push
aaa
adc
mov
lock
cld
add
das
sub
push
mov
mov
sub
cs
lret
stc
rol
or
testl
mov
and
pop
push
cmp
movsl
mov
xor
fbld
sub
cmc
mov
pop
dec
jg
mov
or
sbb
test
adc
and
insb
jnp
mov
or
or
mov
mov
addr16
insb
sar
lret
jp
xorb
mov
aas
inc
call
bnd
cs
push
pop
call
ljmp
stc
or
and
jmp
mov
mov
push
mov
nop
lea
ja
pop
or
mov
inc
xlat
and
xchg
xor
shll
inc
mov
shlb
mov
bound
ds
dec
stos
pop
aam
test
daa
cmp
adc
pop
popa
test
int
xchg
jo
push
xchg
or
subb
xor
dec
gs
bound
dec
movsl
jp
jl
sti
push
push
mov
pop
cmp
inc
dec
insl
fidivrl
push
std
sub
addr16
add
inc
shrb
fwait
jl
popf
mov
fidivrs
test
adc
and
sub
out
xchg
fsubr
push
fs
xor
sar
nop
pop
js
pop
test
leave
cmp
and
jno
mulb
sub
cmp
out
mov
xorl
pusha
sbb
adc
das
into
mov
mov
test
pop
dec
jns
jb
rcl
shll
into
sbb
mov
jge
cmp
insl
in
lcall
mov
mov
out
mov
std
lock
leave
outsl
xchg
cmp
add
fildl
bound
fimuls
gs
movb
std
ret
insl
xor
mov
bound
outsb
xchg
stos
rcrb
mov
in
hlt
inc
push
mov
fdivs
outsl
fsubl
mov
std
ror
lret
lahf
and
loope
nop
mov
add
aaa
and
pop
cmp
pop
outsl
or
cmp
ljmp
ficompl
pusha
mov
orb
sub
in
movsl
push
movsl
cltd
xchg
filds
jmp
cmp
gs
push
cli
sbb
leave
push
cwtl
out
movsb
adc
jmp
and
scas
mov
test
pop
and
popa
out
add
in
enter
push
sub
fld
jg
call
push
cmp
aaa
inc
push
mov
shlb
cld
dec
dec
xchg
sbb
lods
nop
xor
cmpsb
sbb
jg
add
push
and
or
xor
lds
sbb
pop
mov
xor
push
inc
mov
sub
subl
add
ds
pop
push
aam
lock
lahf
or
mov
mov
jne
cs
mov
scas
jp
mov
sub
jbe
loop
pop
mov
inc
rclb
xchg
adc
mov
out
negb
xchg
or
mov
mov
mov
mov
out
test
jg
and
scas
inc
xor
cmp
pop
sub
stos
gs
outsl
aam
pop
jne
sub
std
clc
xchg
test
aas
mov
xchg
sti
jmp
mov
lods
sbb
xor
test
mov
adc
push
xor
pop
mov
adc
in
jnp
dec
fwait
cmp
mulb
jo
jne
lahf
loopne
idivl
test
jnp
pop
test
mov
add
adc
cmp
inc
jle
mov
cmc
in
jo
divl
pop
movsl
in
sahf
sbb
xor
mov
xchg
ja
stos
cmc
bound
and
addr16
loope
sub
pop
icebp
outsb
dec
call
popf
inc
and
fstpt
in
xor
ja
push
push
cli
popa
cmp
cwtl
test
in
xor
sbb
and
addr16
in
pop
repnz
popa
fwait
mov
pop
ret
daa
pushf
out
xor
mov
pop
and
dec
inc
addr16
push
mov
or
mov
and
dec
test
subl
dec
andl
fucomip
sub
bound
adc
adc
inc
ss
push
loopne
mov
pop
inc
jmp
fistpl
mov
push
pop
lret
cmc
jno
stc
insl
inc
pusha
adc
push
int
sub
mov
fsubr
dec
lock
out
faddl
mov
xchg
xchg
or
mov
pushf
sahf
lea
mov
add
sbb
imul
mov
into
mov
cmp
jns
mov
andb
inc
sbb
jge
xchg
ret
pop
mov
out
cli
xor
mov
mov
outsl
mov
or
leave
xchg
inc
popf
popa
mov
stos
daa
xchg
out
iret
jmp
mov
mov
xor
and
sbb
cli
jp
mov
stc
les
mov
shll
sti
xor
pop
push
push
xor
popa
xchg
xor
dec
xchg
in
leave
es
sub
push
or
xor
xor
aaa
aaa
inc
div
divl
shll
out
mov
enter
rorb
jge
xchg
addr16
pop
cmpsl
sub
cmp
pop
test
xchg
jbe
pop
xchg
pop
or
idivl
adc
testb
jle
sahf
adc
jbe
aaa
cld
lret
jne
sbb
out
loope
add
mov
or
push
hlt
dec
inc
cld
push
jb
and
das
jg
jg
sahf
dec
outsl
out
adc
fidivs
sub
negb
pop
pop
fmulp
jmp
sbb
push
or
pop
mov
into
sarb
in
addr16
outsb
adc
mulb
notl
enter
fwait
pop
cmp
out
push
dec
cld
cmp
nop
mov
pop
cmp
imul
sbb
in
sub
jne
add
outsb
rol
stc
mov
dec
and
cmpsb
aad
xchg
sti
jb
push
xchg
arpl
dec
cmc
push
bound
inc
inc
jl
xor
xchg
cmpsl
jne
or
pop
adc
gs
jmp
mov
sub
mov
push
cmp
xor
mov
push
and
fisttpl
jo
cmc
inc
dec
test
push
mov
or
push
mov
xchg
sub
imul
xor
ret
scas
pop
pusha
cmpsb
or
ficoml
mov
aaa
mov
testb
ljmp
jns
mov
pop
cltd
mov
outsb
pop
push
addl
out
xor
push
sbb
mov
mov
cmp
scas
and
out
mov
mov
jb
push
jne
mov
daa
mov
mov
addl
les
popf
scas
add
and
sub
jbe
and
iret
adc
pop
mov
mov
mov
sbb
out
mov
xor
push
and
pop
fbld
enter
pop
pusha
stc
jecxz
jb
and
or
enter
mov
rorb
xor
movsb
lods
mov
pop
lret
movsl
jne
hlt
dec
lock
xorl
lea
repz
loope
mov
andb
clc
mov
pop
fcoms
jo
sub
iret
xor
cmc
ja
ret
ret
inc
fsts
sub
jns
mov
in
rclb
iret
mov
inc
adc
bound
movsb
int3
adc
in
sub
ffree
inc
mov
and
cld
mov
xor
shrl
lods
mov
jge
arpl
inc
push
int3
sbb
mov
xchg
push
outsb
rcr
xor
movsb
xor
cmp
int
test
xchg
adc
enter
mov
sub
xchg
cmp
int
lock
dec
sbb
mov
clc
push
cmp
mov
inc
iret
add
popa
cmp
adc
shl
jae
into
js
adc
pop
mov
xor
or
or
xchg
adc
mov
sub
adc
sub
adc
enter
push
loop
out
adc
pop
and
cld
cmp
add
lods
mov
insb
push
addr16
mov
inc
icebp
push
mov
xor
outsb
mov
scas
dec
mov
pop
adc
rcll
cmp
orb
push
jo
and
fcomps
pusha
dec
add
addb
mov
lds
insl
lret
cmp
sbb
sbb
jle
sarl
fidivs
jo
nop
fbstp
xor
add
hlt
adc
test
inc
or
cmpl
dec
je
mov
rclb
ljmp
adc
loop
popf
dec
shlb
pusha
push
cmp
stc
or
inc
out
jae
pop
push
movsb
and
push
rorb
mov
rcrb
mov
setno
psubsb
test
sub
fiadds
int
jl
jge
lret
mov
mov
pusha
inc
insl
xchg
jp
int3
mov
mov
pushf
jp
in
pop
pop
lcall
stos
jle
pop
add
pop
push
push
xor
pop
lahf
inc
movsb
xchg
popa
or
xor
int3
aam
fiaddl
dec
xlat
fistpl
stos
negl
aad
rclb
jae
shrb
rcll
pop
repz
int3
and
mov
test
mov
pop
add
cwtl
dec
stos
or
fldt
pop
dec
push
mov
xor
sbb
ja
cmpsb
in
add
sbb
mov
mov
pusha
mov
or
lock
rcll
pop
add
sti
jmp
mov
mov
mov
cli
inc
dec
mov
fs
subb
repnz
stos
xchg
mov
dec
gs
orl
mov
sbb
jge
xor
call
jp
pop
incb
pop
adc
inc
dec
xor
and
cli
hlt
rcll
add
mov
or
lods
xchg
xor
jnp
hlt
and
bound
aad
xchg
lcall
pop
xchg
mov
push
and
add
shll
cwtl
dec
out
xor
mov
push
and
pop
mov
clc
cmp
xor
sub
pop
mov
push
ljmp
or
aaa
sbb
rol
mov
add
scas
mov
iret
sbb
inc
cli
add
or
add
dec
cmp
mov
jp
sub
test
lock
jb
shrl
into
stos
jge
stos
pop
rorb
ja
loope
adc
mov
aaa
pop
popf
dec
repz
pop
xchg
jae
and
adc
ljmp
mov
test
aaa
dec
pop
mov
push
mov
nop
push
jo
push
pop
cmc
push
fiadds
add
mov
pop
and
jle
push
das
inc
sub
out
pop
mov
push
sbb
negl
jne
out
fsubp
push
fxch
ljmp
psllw
cmpsb
pop
xor
jns
addr16
pop
pop
scas
outsb
and
in
ret
mov
xchg
in
sarl
mov
shlb
in
cmp
lods
in
jno
push
fs
out
dec
call
inc
push
adc
faddl
adc
mov
mov
call
stc
mov
cmp
addr16
into
mov
xchg
xor
mov
mov
fwait
jae
sub
mov
jo
lods
push
dec
je
xor
mov
jp
test
mov
frndint
fiaddl
out
scas
scas
dec
inc
push
dec
mov
pop
push
rorb
mov
inc
jbe
stc
repz
lret
pop
loop
mov
sti
stc
fcomps
iret
adc
je
pop
jo
sti
xchg
dec
jecxz
jae
or
cmp
icebp
xchg
jne
push
push
jle
add
stos
sbbl
jns
pop
mov
mov
sbb
adc
mov
mov
pop
pop
pop
les
mov
add
or
jb
adc
lods
push
push
ret
mov
rclb
aas
loope
shrb
dec
in
es
push
pusha
and
cmpsl
mov
xchg
inc
sbb
lret
xor
push
jl
das
negb
mov
push
adc
adc
mov
push
push
call
lcall
push
cli
jno
mov
dec
addb
mov
pop
les
dec
add
add
bound
cli
pop
pushl
bound
mov
inc
sub
dec
popf
les
shlb
pop
sub
mov
mov
les
nop
cwtl
das
mov
loopne
mov
xchg
fistl
sub
ljmp
jecxz
fsubl
movsl
stos
hlt
lea
dec
in
mov
xchg
inc
xchg
add
shlb
addr16
lods
popf
out
inc
popf
pop
inc
add
int
mov
pop
mov
sbb
sub
enter
jmp
setge
sahf
pop
ljmp
jno
or
and
xchg
and
xor
sub
add
mov
inc
pushf
icebp
and
or
test
sbb
and
inc
imul
fs
push
sbb
mov
mov
pop
add
xor
cwtl
pop
stos
and
in
sub
sub
sbb
loope
mov
dec
test
ja
enter
sbb
jge
push
imull
fbld
cmp
aaa
or
iret
mov
fildll
popf
test
push
fstpl
js
or
popa
mov
ss
xchg
push
aad
jg
mov
pop
mov
rcr
loopne
inc
sbb
or
sub
mov
mov
fs
shlb
mov
cmp
dec
fnsave
push
jo
iret
faddp
insl
pop
mov
push
clc
pop
dec
dec
daa
movsb
jle
adc
inc
iret
inc
std
mov
lds
or
inc
rcrl
jb
push
sbb
orb
mov
cwtl
add
pop
lret
in
sub
inc
cmpsl
pushf
sahf
mov
xchg
adc
test
bound
ljmp
jle
add
mov
hlt
shll
sahf
ja
iret
mov
mov
pop
das
cmc
enter
addr16
push
fstl
testb
rcr
dec
jmp
sbb
lock
add
loope
movsl
outsl
add
jo
ljmp
mov
push
mov
dec
sub
outsl
and
pop
jge
mov
dec
sbb
inc
cmp
movsb
lock
stc
inc
loop
clc
adc
xor
pop
push
push
lahf
insl
movsl
xchg
in
and
das
xor
imul
xchg
mov
rolb
push
pop
int
ret
or
mov
into
push
push
in
into
mov
jecxz
cltd
mov
cmpsl
dec
jge
imul
mov
lods
pop
cmpsl
sbb
dec
aam
dec
pop
fs
jbe
inc
add
inc
jae
jg
mov
in
mov
push
push
mov
insb
movsb
cmp
pop
pop
xor
mov
cmpsl
sub
push
stos
pop
lock
mov
xchg
in
sub
or
pop
dec
sbb
mov
inc
es
sbb
loop
call
rclb
cmc
cld
xchg
ret
fdivrs
dec
insb
sahf
jg
adc
fistpll
scas
adc
push
cli
les
cmpsb
jae
push
jge
add
ret
rol
cmp
dec
hlt
leave
lret
ja
in
dec
das
data16
push
jmp
or
adc
adc
clc
pushf
leave
cmp
pop
mov
pop
xchg
ret
mov
cmpsl
aam
jbe
out
mov
xchg
in
mov
sbb
push
xchg
out
outsl
test
xchg
arpl
or
mov
add
or
fiadds
loope
cmp
std
sbb
pop
div
lahf
sbb
pop
gs
add
lock
lret
push
lcall
aas
xchg
repz
push
and
push
fcompl
test
adc
lods
push
cli
loopne
xchg
pop
mov
dec
rcrb
push
test
leave
js
es
fdivrs
sbbl
jnp
insb
xchg
cmpl
push
call
mov
jae
cli
jo
push
loop
stc
sub
adc
jmp
xchg
loopne
jmp
add
pop
xchg
popa
mov
mov
mov
mov
idiv
dec
cltd
icebp
shll
adc
fsts
imul
pop
aam
jmp
aam
push
ds
xor
jbe
cmpl
repz
cmc
call
sbb
int
xchg
jnp
test
imul
in
push
in
mov
and
xchg
loope
enter
xchg
inc
inc
sbb
dec
lahf
popf
arpl
mov
popf
sub
jmp
adc
repz
movl
lret
sbb
mov
pop
ret
push
js
into
sbb
inc
push
cmp
dec
leave
rcpps
mov
int
stc
popa
push
jne
int
jp
movsb
daa
scas
rolb
std
scas
out
or
xchg
adc
cltd
xlat
or
bound
fs
adc
fadds
add
push
inc
mov
lcall
push
add
fwait
iret
loop
xchg
call
add
pop
cs
pop
popa
das
scas
mov
imul
xor
aaa
sarb
jp
lret
dec
in
inc
pop
sbb
or
andb
jb
dec
mov
and
sbb
sbb
test
repz
add
scas
xchg
int
xchg
js
cmpsb
pusha
inc
test
push
xor
pop
lds
jo,pn
mov
dec
ss
aas
jp
gs
adc
cmp
jecxz
sbb
inc
rorl
out
sbb
stos
mov
push
mov
shll
push
mov
pop
and
xor
pop
stos
sahf
xchg
mov
fimull
sbb
les
sbb
cmp
mov
dec
arpl
mov
add
cmpsb
xor
mov
jns
pop
xchg
sub
mov
dec
scas
mov
or
aam
scas
inc
test
cmpsl
pop
sbb
les
pop
mul
jae
xchg
jb
pushf
pop
xchg
cmp
jo
fs
lahf
mov
xchg
and
cmp
sbb
cmp
sub
pop
test
mov
dec
xor
clc
movsl
push
add
and
xlat
iret
mov
stos
inc
pushf
add
inc
lcall
dec
ret
lds
std
mov
pop
cmp
pusha
cmp
scas
jbe
js
cmc
mov
mov
out
and
inc
sbb
lret
jbe
std
nop
mov
scas
push
sbb
push
push
cmp
xchg
or
cmp
mov
ret
add
or
adc
adc
jp
add
mov
sbb
das
ja
lret
mov
sbb
enter
aam
outsl
or
inc
icebp
jo
mov
mov
or
cwtl
icebp
rcr
roll
adc
pop
out
sbb
push
pop
int3
jl
sbb
or
mov
and
or
mov
or
mov
or
mov
rorl
push
insl
dec
cltd
call
xor
and
mov
mov
orl
adc
outsl
xchg
inc
push
enter
and
movb
dec
xchg
lea
inc
cmp
xor
cmpsl
out
out
mov
inc
test
xlat
xchg
inc
daa
mov
xchg
sub
mov
shlb
add
cld
mov
mov
iret
rcl
sbb
xchg
add
mov
add
xchg
shll
ss
sub
cmc
jnp
cmc
xchg
cmp
mov
jmp
clc
push
add
jle
nop
je
xchg
xor
pop
mov
aam
shlb
push
jnp
imul
pop
push
repz
shlb
adc
pop
pop
aad
stc
enter
push
jo
pop
shl
ljmp
fistps
push
ficoml
xchg
bound
cli
cmp
pushf
mov
lods
mov
cmpsb
ds
in
inc
xchg
addb
xchg
loopne
mov
or
pop
in
sbb
mov
js
jne
loop
in
dec
jg
rorl
cltd
and
lret
mov
and
add
push
xchg
insb
std
cmc
cwtl
je
mov
ret
sar
aaa
sub
sub
inc
mov
stc
mov
mov
mov
adc
rcr
mov
cwtl
adc
cld
cmpsl
or
mov
pop
jp
call
dec
fildl
mov
or
and
jl
inc
and
stos
call
sbb
cmp
jbe
or
and
popf
mov
mov
mov
lret
loope
cmp
mov
add
pop
dec
leave
lret
push
jmp
arpl
xor
sub
lcall
lret
aam
push
int3
mov
cwtl
add
mov
pusha
sbb
cmp
mov
adc
test
xchg
xchg
jmp
add
fcomps
inc
mov
adcl
mov
fs
addr16
or
sub
inc
jge
jg
push
mov
fcmovu
or
sbb
jl
cmp
add
mov
add
lret
fcompl
aaa
cmpsl
divl
or
stos
in
sbb
xor
ret
scas
or
pop
mov
or
rcrb
xchg
shr
push
loope
pop
push
aad
jl
loope
or
add
mov
xchg
inc
push
mov
xchg
ss
xchg
push
and
scas
pushf
jecxz
mov
cmp
clc
daa
popf
push
xchg
lea
rcr
push
sub
push
shrl
xor
les
pop
inc
pop
mov
mov
jle
xor
mov
fisubrl
dec
adc
xor
sbb
enter
lret
lret
adc
imul
push
sbb
mov
pop
fisttpll
cmp
leave
dec
fcomp
lea
pop
add
mov
mov
cmp
dec
cmp
cli
add
mov
bound
scas
adc
test
ret
into
add
lret
das
inc
aam
sarl
fs
jb
jb
stos
xchg
mov
jle
mov
pop
sub
bound
cmc
loope
fs
inc
cmpsb
xor
jmp
mov
add
sarb
lret
add
lret
pop
sarl
dec
data16
sub
loope
cmc
mov
test
cmp
pop
or
popf
mov
loop
call
jl
mov
jb
mov
gs
ja
cmpsb
push
pop
lcall
inc
mov
mov
sub
sbb
aam
lods
or
out
pop
cmp
xchg
les
dec
mov
testb
xlat
jmp
lahf
xchg
es
movq
lds
stos
mov
pop
stos
imul
in
call
ret
lods
xor
or
mov
pop
out
add
sbb
or
adc
cmpb
jae
sub
push
cmp
cmp
sbb
sub
bound
jo
jns
or
add
add
and
mov
out
ss
push
call
and
loopne
sbb
cs
mov
and
xchg
add
pushf
fwait
shrl
enter
addl
sub
jns
in
stc
lock
leave
dec
imul
xor
stos
subl
dec
lods
imul
stos
mov
cmpsl
popf
xchg
cmp
mov
sbb
jecxz
loop
sahf
add
push
mov
pop
mov
idiv
in
stc
xchg
loope
sub
mov
cmp
inc
pop
or
and
pop
mov
pop
pushf
xchg
cmp
ret
scas
outsb
mov
out
ljmp
or
lcall
cld
push
fwait
lods
outsl
aam
pop
loope
idiv
loope
jo
dec
lods
stos
adc
loopne
add
loopne
mov
repz
mov
cwtl
or
push
cmp
jl
xor
lcall
in
dec
in
repnz
xor
push
dec
cmp
aam
adc
loop
inc
fcompl
sbb
sub
ja
imul
and
movsl
cmpsl
pushf
mov
mov
cmpsl
int
out
or
lahf
push
dec
pop
and
fadds
loopne
dec
add
outsb
adc
insl
fimuls
out
xchg
jle
arpl
dec
jbe
int
clc
pmuludq
lret
jg
pop
or
ljmp
add
aam
loop
outsb
pop
inc
mov
sbb
jmp
pop
mov
jne
ret
insl
fcmovnb
pop
push
jae
pop
inc
clc
out
inc
xor
addr16
js
inc
ljmp
fistpll
pop
pop
out
in
dec
shr
insb
movsb
outsb
shlb
je
sbb
mov
xchg
dec
mov
and
loopne
in
cs
sub
out
fisttpl
and
movsb
ljmp
sub
or
insb
fcmovu
and
test
sub
adc
clc
or
sub
imul
leave
adcb
sarl
aad
jp
pop
adcb
bound
xchg
popa
loop
movsl
or
inc
or
inc
pushf
mov
pop
pop
fstpt
and
jb
jg
mov
aas
pminsw
or
mov
sbb
pop
jnp
and
and
cmpsb
leave
rclb
testb
hlt
into
xor
cwtl
push
dec
testb
test
data16
fdivrl
in
aam
jp
ror
int
or
lahf
fistpll
add
cltd
xchg
push
aaa
mov
nopl
sub
xor
and
cmp
mov
aas
mov
push
sbb
cmp
cmc
lods
push
pushf
sub
dec
out
imul
mov
jmp
mulb
inc
xorb
je
fcmovbe
dec
es
jp
mov
add
lahf
push
xchg
jle
shlb
lods
ljmp
sub
sub
call
sti
sbb
clc
sbb
sub
leave
dec
xor
sbb
jmp
loope
out
add
fildl
mov
call
push
jnp
mov
nop
dec
aas
jmp
cmpsl
insl
sub
hlt
add
add
loop
sbb
xorb
mov
js
cli
mov
mov
jle
jae
dec
inc
mov
lcall
movsb
test
push
sbb
inc
pushf
xchg
fcomps
pop
cmc
mov
test
les
insb
mov
mov
out
adcl
ss
adc
repnz
mov
sbb
rcll
lods
pushf
pushf
adc
in
nop
mov
pusha
sub
and
pop
les
mov
mov
aaa
or
mov
push
inc
fxtract
mov
pop
cmp
mov
jb
adc
pushf
mov
adc
mov
mov
stos
sub
es
sbb
xor
sbb
ds
xchg
dec
daa
xchg
or
imul
loopne
xchg
andb
jnp
xchg
xchg
dec
cmp
test
aas
mov
stos
mov
xchg
xchg
aas
imul
out
dec
movsl
es
cmp
lock
les
mov
int
lods
mov
cmpsb
mov
out
sub
mov
mov
jns
xchg
popa
fistpl
mov
repz
mov
shl
pushf
xchg
and
cmp
stos
jb
xchg
jmp
jmp
mov
fnstsw
cmp
lcall
fsqrt
sbb
stos
repnz
adc
push
cld
cltd
aad
jge
jne
bound
pop
inc
loopne
and
xchg
mov
fnsave
mov
popf
aad
pop
cld
shl
scas
lcall
sub
lahf
inc
inc
pop
aas
comiss
js
sub
loopne
loop
fmulp
mov
add
add
or
cmp
mov
mov
lahf
dec
ss
xchg
jae
lods
inc
fstl
sbb
hlt
std
ficomps
dec
adc
mov
aas
pushw
mov
inc
call
push
push
lret
pop
add
test
push
jb
sub
adc
add
push
and
mov
cmp
andb
pop
int3
jae
pop
into
push
call
rcl
pop
inc
mov
pusha
lret
rcrb
andl
push
js
sub
push
stos
dec
mov
pop
lahf
clc
iret
inc
enter
out
sbb
mov
mov
dec
stos
pusha
shrb
fisubrl
call
mov
out
cmpl
loope
in
cmp
and
cld
dec
xor
add
pop
dec
push
and
icebp
push
out
adc
out
push
scas
jae
push
daa
rcrl
cmp
lret
sbbb
or
fsubrs
and
push
fisttpll
cmp
clc
add
or
fstps
mov
sar
iret
rorl
mov
pop
cmp
ja
pop
popa
push
pushf
xor
data16
dec
subb
mov
clc
mov
xor
cmc
sahf
adc
inc
cld
or
adc
insl
fstl
gs
arpl
ret
js
mov
push
repz
cmp
out
les
add
pop
pusha
mov
pop
js
mov
mov
cltd
xor
xchg
dec
or
ret
decl
ret
mov
sahf
xchg
inc
fnstcw
icebp
fs
sbb
std
lea
jmp
es
lock
adc
cmp
add
add
out
bound
lret
out
gs
jp
out
popw
pop
movsb
fsubr
sarl
mov
imull
out
rcrb
adc
ret
std
push
mov
test
dec
jp
fucomip
mov
sub
add
xor
pop
dec
push
insb
scas
and
pop
sub
sub
mov
add
dec
ljmp
push
jle
mov
add
sti
jl
mov
test
mov
rcll
inc
sahf
lea
divb
or
repz
pop
jo
mov
adc
jns
push
cmpsb
sbb
nop
fstp
lods
push
or
filds
mov
lahf
add
mov
inc
inc
jmp
and
xchg
imul
rcr
mov
dec
cmp
jmp
mov
arpl
push
xorb
fsubr
dec
pop
and
sbb
in
and
xchg
jnp
mov
in
les
dec
dec
bndstx
lock
insb
stos
mov
lods
adc
sub
pop
rep
test
ss
jo
lock
dec
push
aaa
not
rclb
push
dec
mov
or
movsb
sub
cmp
shlb
das
pop
mov
popa
inc
inc
mov
inc
jb
paddusb
jecxz
stos
mov
xchg
loope
sbbl
or
mov
mov
mov
jge
in
sub
popf
mov
inc
lret
add
enter
test
cmp
loop
addr16
inc
lea
enter
jp
mov
cld
subps
fisubrl
loop
test
test
lock
xchg
imull
movsb
jl
es
jg
sbb
xor
sub
mov
jne
fsub
pusha
cld
mov
outsl
aam
movsl
lret
add
int
push
ret
lock
add
addr16
bound
push
icebp
xchg
mov
mov
neg
leave
jmp
dec
add
inc
push
sbb
mov
mov
add
jmp
and
xchg
fdivs
shll
test
and
lcall
xchg
dec
mov
cmp
cli
sub
cltd
insl
mov
clc
mov
stc
lret
mov
mov
mov
jl
rol
jne
dec
mov
xchg
xor
icebp
pop
jecxz
and
dec
mov
push
imul
mov
je
loopne
repz
sahf
fldt
repnz
push
jnp
ret
dec
pop
push
ljmp
mov
jp
std
add
jns
int3
insl
push
mov
cmp
shll
paddusw
mov
cmp
pushl
imul
push
add
in
aam
pop
imul
dec
pop
pop
jmp
test
inc
and
scas
pop
popa
dec
popa
add
jne
mov
dec
xchg
jno
jp
and
add
bound
push
pop
in
jg
pop
ret
and
inc
mov
hlt
push
and
call
sbb
hlt
pop
cmp
lcall
cli
or
mov
aad
int3
dec
rorl
or
mov
mov
cmp
fistpll
ss
aad
push
fwait
add
push
sbb
idivb
inc
add
mov
sub
arpl
adc
adc
test
shl
or
pop
sub
lods
adc
std
adc
mov
ficompl
jmp
jl
mov
push
jbe
in
jae
cmp
orl
aad
xorl
aad
xchg
mov
fsubrs
xchg
pop
push
mov
sub
adc
lods
out
test
push
or
scas
mov
push
push
xor
scas
test
sbb
xorl
out
sub
mov
out
es
xchg
xchg
sub
mov
stc
add
ret
mov
andl
or
aad
js
rolb
inc
sub
mov
shl
xchg
push
sub
sub
sahf
cmpb
mov
out
mov
call
or
loope
jmp
cmp
mov
out
mov
dec
jge
outsl
in
inc
test
xchg
enter
jo
addl
loop
sbb
not
push
das
cmp
dec
cmc
jae
mov
lret
in
mov
imulb
rcpps
adc
sbb
dec
cmpl
or
lcall
cmp
movntps
gs
arpl
out
sub
aaa
adc
adc
mov
rorb
push
loop
pop
xchg
inc
mov
fistpl
stc
pop
lret
js
mov
popa
push
test
test
mov
cmp
xchg
mov
in
idivb
mov
pop
mov
xor
subl
xchg
push
pop
inc
test
add
or
pop
mov
ljmp
lret
leave
arpl
stc
jno
iret
iret
jo
jg
lret
dec
dec
pop
mov
lods
xor
addl
dec
cwtl
test
mov
daa
push
jo
insl
and
xor
div
jmp
popa
in
and
xchg
out
pop
adc
pop
cs
in
inc
or
mov
out
add
icebp
les
cwtl
fwait
jne
dec
cli
push
mov
mov
loopne
shlb
mov
xchg
in
dec
in
mov
out
inc
inc
mov
push
pop
rolb
mov
int3
mov
push
fdiv
not
sbb
push
pusha
mov
jge
icebp
movl
adc
adc
movsl
scas
into
mov
adc
leave
or
jmp
dec
imul
xor
sub
inc
or
sbb
xchg
push
mov
xchg
or
stos
inc
stos
pop
dec
testb
out
pop
sbb
lds
pushl
shlb
loope
dec
loopne
test
cmp
int3
test
stos
push
add
pop
or
sar
adc
fldt
adc
scas
lea
adcl
dec
add
outsl
pop
or
cmp
xor
xchg
movzbl
mov
stc
cmpsb
loope
cmpsl
into
pop
mov
dec
clc
sahf
jbe
jne
inc
out
fstps
cmp
xorb
push
arpl
jge
dec
rclb
lret
or
das
clc
jne
call
mov
jne
sbb
sub
cmpsb
xchg
jne,pt
or
mov
pop
pop
in
cld
cmp
stc
mov
mov
adcb
cltd
int3
jle
mov
sar
dec
push
fistl
sbb
ljmp
ss
aam
mov
es
jno
cwtl
cmp
dec
addl
sbb
xlat
xchg
xchg
mov
dec
cmp
jl
hlt
adc
jge
mov
lds
inc
imul
jbe
mov
lea
adc
outsl
into
mov
popf
repnz
inc
pop
arpl
fsubrs
inc
ja
inc
jmp
out
pop
cld
mov
dec
mov
jbe
xchg
xchg
xchg
insl
jmp
pop
jb
imul
ja
xchg
xlat
ja
imul
xor
and
popf
loope
dec
adc
into
je
push
in
std
gs
out
cmp
or
insb
dec
pop
int
pop
adc
into
mov
dec
loopne
mov
sub
xor
test
dec
cmpl
aas
mov
popa
clc
push
je
push
add
xor
jmp
ret
test
fcoms
aam
enter
or
jbe
out
in
outsb
dec
mov
lods
xor
lea
sbb
lahf
cmpsb
scas
mov
mov
mov
fs
mov
das
fdivs
aad
jg
adc
icebp
es
jp
das
xor
cmp
sbb
add
cli
cs
adc
fidivl
movsb
and
gs
or
mov
jp
scas
cwtl
jl
mov
out
mov
jge
repnz
aas
mov
push
dec
insb
in
lret
aad
inc
push
cmp
call
aaa
idivb
mov
dec
jmp
xlat
and
mov
add
cmp
loopne
leave
or
xlat
jle
sahf
adc
xor
mov
jae
mov
outsl
sarb
mov
shll
mov
push
ret
mov
cmp
dec
jns
xorl
push
iret
push
call
cmp
int3
pop
subb
xchg
ljmp
enter
fcompl
test
dec
xchg
fsin
adc
jo
mov
stos
push
xor
jg
imul
lea
or
and
lahf
pop
cmp
mov
int3
dec
testl
dec
mov
mov
cmp
sub
xchg
popa
scas
adc
dec
add
and
cmc
jae
clc
ret
ja
imul
in
mov
or
fisttps
inc
sub
mov
push
fimull
sub
cmp
lea
adc
sub
mov
ja
aad
inc
pop
mov
xlat
add
jmp
sahf
inc
lock
xchg
std
std
bound
jp
movsl
and
jnp
pop
addb
xor
inc
pop
sub
dec
pushf
jecxz,pn
xor
sbb
stc
push
mov
dec
jecxz
adc
test
xchg
fsub
jle
cmp
movsl
out
scas
out
add
enter
mov
jmp
mov
dec
pushf
sub
add
rol
jmp
cmpsl
mov
inc
xor
addb
rcll
push
enter
jo
cltd
cmc
loope
mov
fisttpll
push
dec
movsb
lds
or
inc
xor
pop
cld
sub
call
pop
addr16
xchg
mov
xchg
pop
jge
pushf
or
stc
sar
in
mov
push
mov
cld
mov
dec
cmpsb
fdivl
sbb
gs
xor
and
das
and
loop
sub
ja
jge
xlat
lods
addr16
and
rol
push
inc
xor
div
popf
stos
cltd
call
inc
out
lret
xor
cmpl
int3
sub
jno
imul
out
pop
movsl
mov
push
pusha
adc
adc
ja
push
jmp
idivb
movsl
ds
add
or
dec
repnz
sub
popw
lahf
cmpsl
jg
aad
arpl
enter
aad
adc
mov
imulb
jo
cwtl
popf
fwait
ljmp
sub
test
jle
push
data16
ja
cld
loope
mov
aaa
lea
repnz
cmp
push
and
cwtl
leave
leave
push
loop
inc
xchg
icebp
xchg
pop
test
mov
icebp
aad
mov
jp
xchg
adc
shr
stos
jmp
into
mov
mov
sub
push
sbb
cmp
popf
fwait
jmp
cmp
and
mov
sub
aas
adc
push
data16
aam
push
mov
popf
push
push
lds
pusha
or
pop
mov
push
or
cmpsb
adc
sbb
cmp
lock
sbb
push
push
sbb
lret
jne
cld
inc
dec
adc
imul
xchg
pop
fisubrs
pop
push
les
out
mov
pop
sub
into
ljmp
cmp
sub
and
xchg
xor
stos
decb
or
xchg
jbe
push
clc
fcoms
cmpsb
ja
imul
pusha
inc
or
jge
mov
pop
cmpsb
cmpsb
das
bnd
cmp
cmp
mov
or
pop
mov
sub
dec
jmp
scas
pop
mov
out
cmp
cmp
fidivrl
add
shrb
fmull
pushf
add
jmp
sub
inc
fistpl
dec
sti
fwait
mov
out
mulb
ss
cmc
fs
jns
loopne
jmp
call
adc
hlt
or
hlt
sti
mov
jl
or
notb
push
add
lods
fidivs
jne
lods
pop
sub
loopne
test
data16
scas
mov
arpl
inc
out
mov
mov
or
outsb
aam
mov
or
inc
icebp
out
inc
mov
push
mov
aas
imul
lods
mov
repz
mov
pusha
inc
pop
dec
cmp
xchg
adc
and
std
test
int3
les
cmp
dec
sub
sarb
pop
jne
rep
push
imul
ret
pop
cltd
xchg
in
pop
mov
xor
lret
nop
je
in
test
int3
std
cwtl
push
scas
add
int
add
sub
adc
mov
pop
orl
outsb
ljmp
fs
mov
mov
testl
lds
pop
ljmp
les
cmp
cmp
mov
loopne
push
sub
dec
or
into
or
jnp
stc
add
lock
lods
mov
or
rorb
jge
imul
hlt
sbb
pushf
dec
push
dec
shlb
jl
and
lods
mov
add
lods
push
fmul
rep
outsb
push
push
pop
test
aam
lcall
icebp
jl
subl
ja
cmp
fidivl
xlat
jp
mov
sub
lods
or
mov
and
iret
arpl
std
mov
push
clc
mov
jl
mov
repnz
push
stc
sub
jb
movsl
xlat
pusha
repz
mov
push
pop
add
pop
or
jl
xchg
jecxz
mov
mov
lcall
jb
sbb
adc
fst
xchg
push
cmp
mov
and
scas
cmp
orb
test
mov
jecxz
mov
inc
sbb
les
fisttps
push
pop
inc
and
daa
or
adc
xchg
sub
cmp
popf
jp
sahf
hlt
lret
and
and
inc
pop
push
fmul
dec
fwait
mov
lods
dec
sarb
testb
xchg
xchg
and
iret
mov
in
and
cli
push
dec
out
loopne
daa
mov
fists
ljmp
xchg
test
jb
mov
or
test
std
lods
mov
pusha
mov
cmpsl
xchg
mov
xchg
out
or
cwtl
push
fsubrl
andl
inc
sbb
ret
xchg
mov
mov
in
pusha
push
negl
iret
add
pop
out
andl
add
fs
fucomip
mov
in
mov
ficoms
cs
arpl
mov
shrb
ss
push
mul
push
jns
aam
and
rcr
xchg
jbe
sbb
adc
ror
sahf
stos
jns
pop
loopne
int
loope
addb
mov
ficoms
int3
mov
test
mov
push
lock
push
mov
fs
scas
hlt
aaa
icebp
je
cwtl
in
scas
cmc
xchg
in
pop
xchg
and
stos
push
mov
fcomps
jbe
pop
cmp
mov
jg
or
insl
fdivl
leave
movsl
lock
jns
push
push
pop
mov
loope
mov
pusha
mov
xorb
shll
add
pop
sahf
push
xchg
sar
insl
and
dec
jg
push
shlb
jae
std
lahf
push
pop
in
int3
sbb
in
addr16
pop
mov
pusha
jmp
aam
add
lcall
lea
gs
sbb
fists
pushl
or
and
dec
shlb
xor
push
push
ret
and
call
mov
repz
push
imul
sub
dec
sbb
jge
pop
xor
stos
inc
cs
mov
or
cmp
bnd
bound
stc
mov
mov
xchg
cmp
ja
out
mov
or
out
inc
movsl
arpl
and
pmulhw
xchg
and
dec
push
mov
pop
ds
push
in
inc
cwtl
inc
jg,pn
idivb
loop
arpl
lret
cmp
lret
pop
dec
sub
addr16
mov
xchg
in
popf
sbb
pop
sbb
fs
push
fsts
xchg
mull
lahf
cmpsl
dec
sub
test
xor
test
xchg
loop
fmull
cli
add
xchg
nop
mov
lret
and
test
mov
mov
stos
movl
pop
leave
sbb
mov
xchg
data16
fidivl
pop
and
pushf
push
ret
cmc
enter
dec
leave
xchg
imul
mov
xchg
loope
jg
xchg
mov
adc
xchg
fwait
dec
pop
incl
pop
stos
jecxz
jbe
repnz
mov
push
mov
mov
sbb
mov
push
mov
les
push
mov
inc
loope
stc
rcrb
loope
aaa
xor
xchg
push
outsb
lcall
out
mov
pop
adc
cmp
adc
pop
imul
push
into
push
jp
cmp
mov
or
mov
mov
pop
mov
pop
aam
call
xchg
cmpsl
iret
fldcw
adc
fcomps
popa
pop
cmp
fisttpll
out
adc
sub
dec
inc
iret
add
push
cmp
dec
or
aam
pop
lods
push
mov
insl
daa
pop
out
popf
out
xlat
lret
jns
imul
arpl
loopne
enter
or
cli
sahf
mov
or
push
sub
lock
fs
shrl
sbb
imul
out
pop
dec
fnstenv
mov
repnz
dec
sub
sbb
popa
or
inc
insb
sub
fsubr
js
outsl
jle
push
dec
test
arpl
insb
xor
sub
add
gs
mov
lea
fwait
sub
mov
adc
fistpl
aad
add
fsub
sub
and
sbb
inc
loop
xchg
andl
rol
idivl
fildll
ficomps
or
icebp
subl
cmp
mov
mov
cmp
or
outsl
push
pop
bound
dec
fldt
rclb
in
aas
inc
and
push
cltd
in
mov
add
daa
fildl
mov
int3
es
ror
dec
dec
mov
mov
push
push
sub
push
mov
cs
rclb
jne
cwtl
jo
rcr
add
push
psubd
out
xchg
sub
mov
les
fisttpll
aam
stc
mov
aas
push
aaa
push
popf
bound
mov
push
iret
mov
ss
lea
test
add
stos
das
out
mov
idivl
push
popf
rcr
lock
mov
or
push
scas
add
sbb
add
cs
mov
mov
push
cltd
sbb
jae
loopne
cltd
call
data16
dec
aam
es
jge
cld
mov
aad
xor
mov
jae
mov
es
aaa
mov
leave
movsl
ret
aas
int
movsl
fstpt
pop
je
scas
test
cli
fidivl
adc
sbb
mov
push
dec
dec
xor
xchg
mov
xor
in
fiaddl
scas
jle
sbb
inc
push
testl
negl
jae
leave
dec
cli
std
gs
or
jg
push
jge
inc
mov
icebp
xor
add
inc
out
pop
mov
jmp
sti
iret
out
fld
push
mov
push
sub
push
mov
out
stos
mov
lea
cmp
mov
mov
sbb
addr16
dec
inc
xchg
mov
roll
imul
or
loopne
ljmp
xor
filds
lret
fwait
setge
dec
jge
xchg
lea
mov
insl
mov
decb
jecxz
mov
push
jg
imul
test
pop
fisubl
loopne
enter
push
sahf
xor
mov
scas
push
xchg
std
arpl
mov
lret
test
test
fisubrs
int
jmp
aad
jno
adc
fmul
out
les
xchg
out
leave
lds
add
lds
call
mov
adc
adc
or
lods
jo
psrld
int3
inc
jbe
dec
js
xor
std
rcrl
ret
daa
adc
sahf
ss
sbb
mov
or
push
inc
movsl
jge
scas
sbb
mov
xchg
mov
push
pop
add
scas
ds
dec
shlb
pusha
ret
adc
push
outsb
ret
fnstsw
pusha
push
ds
dec
and
inc
lret
divb
mov
sub
add
push
lds
cs
xor
fdivl
inc
inc
cmpl
sbb
mov
insl
add
xor
or
cli
fs
push
mov
lcall
and
push
sbb
mov
adc
gs
mov
insl
lods
pop
stos
stc
xor
leave
add
sub
mov
int
pop
push
or
in
mov
dec
xchg
mov
int3
jo
and
jns
dec
sub
cli
mov
add
xor
leave
aam
dec
mov
jb
sarl
pop
sbb
sbb
lret
mov
jne
outsl
movsl
jmp
jno
nop
lret
sarb
outsb
enter
shr
cmp
movsb
pushf
dec
into
push
xor
sbb
add
aad
jg
repz
pop
fisttpll
int3
out
scas
push
aas
fwait
sbb
cli
cld
mov
push
repz
mov
in
ret
les
pop
outsl
fistpll
inc
popf
xor
mov
test
icebp
js
jb
add
gs
fisubrl
sbbb
adc
xor
divb
dec
out
in
sub
and
sarl
mov
pushf
mov
je
es
or
inc
lds
jle
out
addr16
leave
movsb
sbb
mov
jnp
pop
out
jmp
fdivs
fnstsw
mov
fcmovnb
imul
push
mov
test
mov
xlat
lret
bound
mov
in
add
int3
push
mov
xchg
jno
pop
push
xchg
out
sbb
xlat
dec
out
xor
mov
les
jmp
ljmp
mov
mov
fwait
lds
adc
scas
pop
out
sbb
div
push
call
mov
movsb
hlt
sbb
cmp
dec
cmp
pop
aaa
add
es
mov
mov
out
jl
cmp
pop
pop
sti
push
xlat
mov
cmpsb
or
xchg
clc
leave
into
dec
add
cmp
test
rcr
inc
mov
xor
movl
fists
add
out
xor
mov
sub
shlb
mov
add
cmp
pop
scas
mov
mov
mov
jmp
add
cmp
or
pop
push
aas
add
sbb
cmp
loop
out
aaa
push
push
in
insb
mov
pop
call
dec
ljmp
push
aas
jge
gs
fdiv
stc
or
aaa
daa
pop
mov
enter
cmp
leave
mov
rclb
jmp
mov
lea
xchg
jge
sti
jnp
sub
pushf
ret
inc
and
daa
fiaddl
add
adc
shl
dec
jo
pop
mov
movsl
fcomps
add
dec
xchg
pop
add
ljmp
dec
dec
out
dec
add
or
out
add
add
fwait
repnz
clc
mov
rcll
push
and
inc
bswap
jle
fidivs
jae
sub
les
mov
jno
mov
add
cmpb
out
scas
shlb
mov
fwait
and
xor
xchg
orb
xchg
pop
pop
pop
mov
mov
dec
mov
xor
lods
xlat
stos
nop
iret
xor
xor
pop
inc
mov
xchg
pop
test
nop
js
xchg
mov
cmp
das
pushf
cld
enter
imul
or
xchg
jp
xchg
xchg
loopne
leave
cmp
mov
push
jecxz
mov
aas
adc
mov
sahf
cmp
xor
push
inc
pop
sub
or
nop
sub
arpl
push
mov
mov
add
lret
fbld
sub
loopne
fwait
clc
mov
mov
pop
jl
test
ret
pop
jl
or
das
add
or
inc
push
inc
ljmp
xchg
stc
aaa
insl
in
pushf
sbb
cmpl
push
mov
or
test
addr16
sub
pop
xor
cld
nop
jb
cmp
push
imul
fdivrl
jmp
adc
cmpsb
push
loope
into
out
pop
xor
repnz
sub
inc
jo
insl
pop
inc
mov
xlat
in
jge
call
xchg
outsl
movsb
ret
int
cmp
mov
adc
cmpsl
dec
mov
scas
xchg
push
xor
or
int
inc
fldenv
push
mov
and
mov
or
adc
xor
mov
push
mov
lods
fldt
rcrl
in
cltd
in
aaa
js
imul
jb
adc
mov
stos
pop
cmpsb
ret
out
shlb
jle
jmp
push
fstpl
ret
push
inc
loope
adc
adc
in
loopne
loopne
jbe
fs
and
je
mov
ficomps
pop
mov
js
jae
push
lods
xlat
adc
stos
dec
cmc
fidivl
dec
fnsave
fwait
daa
ja
lahf
adc
lahf
pop
xor
lcall
mov
dec
or
mov
inc
loop
inc
cmp
lock
mov
stos
sti
mov
js
xorb
in
adc
mov
stc
inc
sub
xacquire
pop
jmp
mov
jb
into
inc
mov
jo
loopne
mov
rorb
call
adc
pusha
outsb
sete
es
repnz
rolb
int3
push
out
movsb
push
ss
push
mov
inc
sub
sbb
sbb
xlat
arpl
cmp
or
and
cmp
add
push
dec
aas
inc
sub
in
mov
shrb
adcl
in
xor
push
out
jo
ljmp
test
dec
jns
inc
pop
sar
out
or
add
and
mov
pop
dec
lock
movsb
inc
mov
mov
sbb
cmpl
lea
popf
xor
cmp
daa
mov
cmp
push
cwtl
pop
insl
cltd
cmp
ds
out
mov
push
and
adc
push
aas
outsb
and
in
sbb
xor
xchg
movsl
sbb
add
adc
sbb
movsb
scas
out
decl
fisttps
xor
lds
pop
or
cld
outsl
aam
outsl
push
xchg
fadds
sbb
js
push
push
loopne
or
mov
xchg
subb
jl
aam
aaa
adcb
movsb
mov
or
not
adc
insb
mov
je
cmp
cs
stc
loop
dec
loope
cmp
popa
mov
in
xchg
add
cmp
fbld
aam
mov
cmp
adc
inc
fwait
cmp
push
addr16
jp
jb
lods
inc
mov
punpckhbw
mov
pop
sub
xor
add
sti
std
cmp
mov
movsl
mov
mov
push
or
jns
stc
mov
cltd
pop
je
pushf
cmc
pushl
lock
out
jecxz
jo
fldl
dec
fimull
xchg
pop
xchg
aam
xchg
lea
cs
add
push
fidivrs
mov
adc
cmp
mov
sub
sbb
cmp
mov
cmp
cmp
insb
jo
mov
add
sbb
popf
gs
imul
jl
push
mov
xor
jle
aas
mov
loope
es
xor
push
push
aad
test
enter
lds
fidivrl
bound
adc
jle
in
sti
outsb
or
out
inc
lahf
push
movsb
int3
add
xchg
imul
sbb
xor
std
lods
stos
jb
mov
out
push
mov
adc
pop
or
mov
xchg
arpl
mov
sarb
sub
iret
dec
xchg
rol
popa
int
pop
pop
and
xor
jo
pusha
xchg
pop
js
lret
cmpb
fisubrl
or
dec
imull
sti
out
out
inc
pusha
ss
push
cld
cs
daa
pop
leave
out
sbb
push
lods
jp
das
cmpsb
add
dec
sub
out
sbb
dec
sarb
xchg
dec
jp
lret
adc
inc
sbb
hlt
mov
jb
xchg
movsb
cmp
jg
fnstsw
add
xlat
out
adc
out
add
mov
pop
fwait
int3
loop
divl
movb
xchg
call
mov
jno
cmp
fsub
andb
mov
pop
jle
lods
jno
or
outsb
cmp
aaa
pusha
adc
mov
fisubrs
push
cmp
add
fsubrp
mov
cmp
mov
je
mov
gs
xchg
aam
mov
mov
outsl
in
mov
xor
xor
pop
adc
movsl
fcmovnu
inc
pop
pop
scas
mov
outsb
push
or
mulb
stos
jns
mov
aad
xchg
lret
outsl
repz
jmp
adc
dec
xor
jb
sub
mov
and
sbb
cmp
jecxz
dec
sub
adc
pop
inc
inc
mov
xchg
xchg
inc
and
xchg
cmp
xor
inc
xorl
dec
imul
add
shrl
pop
shrb
push
dec
cmp
adc
cmp
jecxz
cmpsb
jl
fildll
dec
gs
mov
push
int
xor
jmp
add
cld
gs
scas
ljmp
gs
xchg
scas
jmp
pushf
in
xchg
push
dec
fldt
mov
push
ficoms
loope
in
stc
fwait
pop
cli
nop
fidivs
test
jg
adc
mov
gs
lcall
fdivs
repnz
mov
mov
std
xchg
in
cmpsl
mov
xchg
movsb
insb
sti
mov
pop
ret
xchg
jne
lcall
test
into
and
cli
and
in
popa
mov
xor
ds
jnp
gs
pop
jl
dec
je
pop
incl
stos
xchg
cmp
cwtl
push
push
cmp
aaa
sub
cmp
frstor
mov
in
or
mov
scas
cld
jecxz
mov
add
imul
test
push
faddl
push
enter
push
inc
out
add
fidivrl
jne
adc
push
adc
mov
loope
lcall
stos
inc
add
ret
loope
stc
cmpsl
push
jno
sbb
daa
jo
inc
push
aam
inc
and
push
sub
sub
cmp
jne
imul
and
dec
mov
into
push
sbb
mov
daa
push
pop
push
cmp
enter
cmpsb
jo
fs
test
cmp
push
loop
cmpl
mov
and
arpl
mov
in
and
xlat
sub
in
clc
aad
inc
and
or
or
sub
jnp
scas
inc
cmpl
imul
int
sbb
mov
movsb
xchg
or
out
bnd
test
push
pop
shufps
out
pop
test
mov
mov
add
add
or
cmp
pop
incb
xor
inc
xchg
lret
sub
push
mov
js
lods
or
inc
mov
jnp
adc
call
js
push
mov
mov
scas
cld
pop
or
dec
leave
xchg
test
lcall
dec
pop
xchg
mov
mov
mov
setno
jmp
mov
push
enter
pop
test
fistpll
fcoml
xor
mov
lds
enter
pop
mov
dec
lock
imul
and
xchg
ja
adc
lock
jmp
fcomip
daa
sub
rcr
xchg
cmpsl
inc
adcb
inc
movswl
jo
sbb
lea
mov
andb
add
lea
xor
jbe
out
jmp
cmp
push
push
add
cwtl
mov
setns
filds
ret
mov
subl
lret
scas
fimull
sarb
jb
sbb
test
push
ret
push
push
cmp
and
sbb
fiadds
fstpl
mov
insl
ljmp
xchg
pop
xchg
out
mov
lock
dec
out
pop
ret
inc
dec
shlb
nop
test
adc
aaa
inc
or
mov
lea
cmc
pop
xchg
pop
fisttpl
xchg
fstps
rol
ss
xchg
mov
test
sub
scas
lret
adc
test
dec
aam
loopne
xchg
call
cmp
cli
enter
leave
shrb
sbb
aad
xor
ds
mov
fcomps
into
dec
adc
cltd
push
loop
mov
cmp
pusha
mov
sub
lods
mov
jl
dec
leave
fcoml
adcb
test
in
cmp
pop
and
or
rcl
add
pop
dec
arpl
sbb
push
adcl
push
sub
stos
daa
cmpsl
pop
outsb
xchg
nop
or
out
push
xor
xor
dec
rcll
xor
jno
sbb
movsl
push
aam
mov
in
or
push
mov
es
loope
imul
sbb
mov
lret
or
ljmp
mov
adc
dec
lds
mov
inc
sub
sahf
lods
out
rcrb
popl
push
inc
cmpsb
aas
addr16
decb
cwtl
xor
insb
mov
enter
dec
in
or
jo
push
pushf
add
pop
ljmp
jne
or
add
test
jmp
xchg
out
pop
jb
cmp
push
xor
das
pop
cmpsl
and
enter
adcl
sahf
push
or
mov
ljmp
mov
push
arpl
das
dec
jbe
movsl
jmp
arpl
enter
pop
test
insl
push
call
ljmp
test
pusha
pop
push
scas
in
inc
or
hlt
mov
scas
jmp
pop
xchg
rolb
jb
sub
jae
mov
dec
sub
mov
sbb
out
cmp
in
add
pop
fisubrs
icebp
jg
cmpsb
cmpsb
or
es
mov
or
int3
mov
mov
adc
imul
mov
or
movsl
jae
outsl
xchg
push
push
sahf
movsb
sarb
out
xchg
fstpt
inc
pop
mov
out
cmp
cmp
test
je
dec
movsl
mov
js
inc
cwtl
pop
out
and
icebp
jno
movsl
fmuls
outsl
mov
sti
pop
outsb
push
pushf
xor
jb
push
xchg
fmull
divb
xchg
mov
jl
sbb
repnz
add
pop
and
jg
mov
mov
adc
pop
mov
push
dec
fsub
sbb
push
icebp
adcl
pop
sbb
lret
jecxz
mov
mov
add
leave
movsl
test
fistpl
ret
lcall
push
mov
aas
popf
cld
pop
pop
adc
test
rclb
inc
movaps
inc
daa
xchg
adc
pop
sub
adc
jecxz
pop
sbb
sbb
mov
rcr
pop
stos
sbb
cmp
sub
in
fwait
out
leave
enter
add
xchg
shrl
sub
fidivrs
lods
stos
loop
imul
push
mov
sub
adc
leave
mov
inc
xchg
rorl
mov
mov
sub
sub
pop
pop
rorb
hlt
aad
pop
sub
xchg
pop
mov
add
test
pop
push
cmpb
jb
add
cmc
setae
push
bound
ss
pop
jo
addb
adc
data16
mov
sbb
jbe
daa
xor
orb
das
leave
jg
gs
or
movsl
push
sub
shlb
repz
mov
addl
mov
and
cmpl
aas
jae
inc
xlat
test
cmp
jmp
or
and
mov
mov
jb
loope
jl
imul
jae
cmp
inc
stc
data16
pushf
scas
out
mov
mov
arpl
and
out
dec
lea
sti
xchg
xor
dec
imul
scas
pop
and
mov
stc
lret
pop
cmpsb
es
jne
das
or
movl
cltd
add
cmp
in
mov
adc
push
shrb
jbe
xchg
xchg
dec
fnstsw
scas
ret
jnp
into
push
and
out
jle
push
lds
ss
add
pushl
inc
inc
aad
dec
mov
jnp
das
lds
lcallw
lea
mov
pop
cld
sub
jae
and
or
scas
or
mov
sub
pop
and
push
shl
adc
mov
mov
jge
aas
mov
sub
adcb
rcrb
dec
xor
jnp
cmp
ret
cwtl
test
aaa
jge
and
shlb
cmpl
xor
fcoml
xchg
jne
cmp
pop
jl
and
pop
push
mov
loopne
ja
xor
inc
jne
mov
adc
insb
cltd
scas
out
int
mov
xor
movsb
push
imul
pop
sub
sbb
jb
lret
and
clc
dec
outsl
xchg
loop
mov
xchg
inc
and
movsl
or
iret
pusha
inc
icebp
dec
jae
shr
jno
lret
sbb
div
push
stos
xchg
fadd
mov
sbb
push
xchg
pop
in
cld
sub
pop
popa
int3
andl
sub
inc
pop
fwait
inc
xor
mov
leave
xor
push
dec
rcrb
mov
mov
hlt
mov
jnp
push
out
adc
mov
sbb
lahf
jns
es
test
out
outsl
pop
sub
cmpsl
movsl
xor
ret
repz
pop
data16
push
je
lods
cltd
lds
mov
xchg
sub
pop
mov
cld
sbb
add
add
repnz
cmpsl
pop
adc
das
adc
lret
js
sbb
or
cmpsb
mov
pop
sub
dec
repnz
jge
pop
or
cs
data16
fisttpl
roll
and
sub
out
lods
mov
insb
pop
xchg
cld
data16
pop
nop
sbb
sbb
push
inc
sarl
add
push
loop
push
or
inc
test
sbbb
mov
xor
push
out
pop
adc
mov
enter
push
popf
cmp
inc
outsb
repz
iret
pop
ljmp
or
pushl
push
call
jecxz
inc
in
cld
sbb
ja
jbe
daa
aas
pop
ret
sbb
xor
js
xchg
pop
mov
in
mov
push
mov
lods
insl
jne
dec
rcrl
repz
jno
enter
cld
mov
arpl
dec
xor
repz
mov
imul
out
add
cli
inc
sub
mov
adc
shr
xor
les
or
ljmp
cmpsb
and
test
cmp
cmpsl
sub
xor
mov
mov
es
and
pop
mov
fcoms
and
daa
scas
lea
vmwrite
lods
loopne
mov
scas
mov
pop
in
cmc
les
cwtl
pusha
add
cmp
ja
pop
jbe
pop
outsl
ficomps
fdivrp
dec
das
inc
xor
out
mov
push
nop
push
jns
andl
fiaddl
add
mov
pmullw
sub
loopne
fimull
lahf
jnp
mov
mov
lret
mov
inc
scas
mov
das
sub
cmp
pop
cmpsb
aam
out
call
std
mov
sub
jne
mov
in
jo
int3
rcll
inc
mov
dec
cltd
push
cmp
push
outsl
into
and
push
fadds
sub
xor
test
test
das
pop
out
sbb
repnz
add
push
add
sbb
or
aam
pop
push
in
shll
ret
sub
call
push
movsb
enter
jno
jno
cld
fmulp
push
addr16
dec
add
xor
dec
pop
dec
sub
insl
leave
clc
mov
sbb
fiadds
push
aad
sub
mov
mov
out
jle
jo
pop
mov
or
mov
mov
and
or
cltd
out
shrl
inc
icebp
stos
xchg
xchg
cmpsl
imulb
call
lahf
popa
fwait
inc
inc
es
adc
jo
int3
lods
jbe
pop
add
push
in
movsb
aas
les
stos
sti
sbb
cmp
push
add
pop
adc
fs
inc
cmp
adc
mov
adc
add
pushf
or
sbb
mov
in
adc
xor
clc
push
dec
pop
mov
mov
inc
dec
jle
cld
loopne
mov
sub
icebp
mov
sbb
mov
nop
pop
loopne
cli
jle
push
out
and
jp
idivl
ja
test
xor
stc
mov
scas
mov
dec
decb
popa
xor
dec
out
jmp
push
push
mov
mov
out
and
stos
inc
inc
cmp
mov
imul
in
pop
inc
subl
fstpt
sbb
cmp
xor
sbb
shr
clc
cpuid
mov
lds
dec
movsl
pop
adc
push
add
push
mov
dec
scas
dec
adcl
and
lds
mov
push
add
or
mov
push
push
jge
adc
adc
stc
inc
cmp
popf
aas
or
xor
xchg
int3
dec
loop
xchg
mov
inc
aad
das
adc
icebp
imul
add
fdivs
jns
sub
cld
sbb
mov
mov
stc
push
mov
sub
inc
lods
lret
push
pop
add
leave
iret
lret
das
add
mov
dec
add
test
and
fdivrl
xchg
shl
jns
sub
aaa
jne
xchg
add
daa
fisubrs
fstps
or
sub
cld
xchg
fisttpl
jl
je
sahf
xor
xchg
xchg
outsl
movb
dec
mov
cmp
pop
out
sub
add
fidivs
jae
loope
les
cmp
or
stos
mov
repz
adc
pusha
adc
pop
fwait
stos
jb
int3
jb
mov
aam
sbb
imul
sub
add
push
into
jno
jae
std
into
les
lock
and
imul
rcll
push
dec
lods
ficoml
pop
add
aam
fldl
and
mov
inc
shrl
sub
and
adc
out
stc
push
jno
ds
inc
lea
xor
push
rolb
pop
gs
loope
mov
add
mov
fidivrl
rorl
in
mov
adc
fsubrs
cmp
and
stos
push
mov
xchg
jo
movsb
les
into
ljmp
dec
push
adc
jne
jle
push
push
push
out
dec
jg
adc
inc
sub
cmp
inc
cli
or
mov
js
sbb
ret
addr16
enter
stc
mov
add
mov
sub
repnz
aas
jecxz
addr16
push
leave
imul
mov
push
lds
out
and
xchg
mov
mov
or
loop
mov
outsb
xor
in
in
inc
ret
ja
fs
mov
push
aad
mov
sub
push
xor
lds
mov
in
pop
movsl
repnz
fnstenv
pop
push
pop
mov
ljmp
les
inc
mov
jno
inc
cs
lods
cmc
dec
cmpsl
paddusw
popf
push
ljmp
mov
dec
mov
jmp
andb
pushl
fs
add
imul
push
mov
sub
pop
lods
ret
jl
movsb
subb
jno
shlb
js
test
lret
cs
and
lea
enter
mov
dec
and
es
dec
mov
shll
mov
add
mov
push
xlat
mov
mov
jp
mov
jecxz
xor
shrl
andb
shrb
xchg
mov
mov
jne
ljmp
out
mov
push
fiaddl
aam
mov
sti
mov
push
test
test
int3
mov
dec
xchg
and
mov
out
push
jle
sub
gs
popa
adc
out
mov
xchg
jg
or
sub
xor
int
cli
ds
out
int3
rcr
dec
fldt
std
xchg
cmc
dec
dec
je
lds
pushf
pop
out
outsb
fldt
jns
mov
jle
jmp
movsl
lahf
mov
sbb
imul
push
flds
xchg
jbe
inc
and
scas
sub
fildll
add
mov
es
sti
inc
lret
mov
dec
mov
pusha
push
xor
stos
vmwrite
bswap
jb
xor
mulb
dec
sub
mov
and
hlt
push
adc
sub
scas
shrb
shll
cmpb
cmpl
scas
gs
and
mov
mov
hlt
mov
cmpl
pop
dec
fsub
xor
add
adc
out
jl
cmpsb
sbb
xchg
mov
inc
lock
jl
pop
mov
xchg
sti
popa
in
jo
lods
imul
adc
xchg
adc
push
in
mov
call
adc
outsl
mov
ljmp
lea
out
xor
mov
fistpll
xor
shlb
pop
sti
ja
loop
sahf
inc
repnz
and
out
movsb
jmp
cmp
inc
iret
mov
fld
xchg
lahf
adcl
loopne
ds
xchg
sub
outsb
adc
or
icebp
aaa
outsl
mov
or
mov
jnp
dec
mov
das
push
div
mov
inc
mov
movsl
push
iret
pop
test
call
mov
fwait
imul
mov
mov
jg
lods
dec
pop
mov
fists
pop
sbb
dec
mov
hlt
nop
pop
mov
or
aam
sahf
movb
or
cld
int3
adc
sub
jmp
jo
mov
test
xor
jl
mov
sbb
jecxz
imul
in
push
scas
push
rorl
outsl
dec
cltd
pop
cmpsl
je
jne
xor
cwtl
orps
lock
xor
loopne
inc
sbb
add
sbb
dec
push
mull
and
lods
pop
insb
andb
mov
sbb
mov
add
into
mov
cmc
sub
repnz
cli
scas
out
add
bound
mov
outsl
mov
jbe
push
std
ljmp
orl
sub
arpl
out
enter
repnz
inc
sar
lea
daa
call
int3
sub
push
insl
jns
fldenv
fwait
in
stos
xchg
add
pop
jmp
push
jne
or
mov
push
sub
pop
ja
out
loop
inc
and
cmp
xchg
pushf
std
push
inc
js
mov
in
mov
sub
les
imul
xchg
loope
inc
in
cmp
add
sbb
xorl
dec
xchg
mov
lret
dec
jg
ljmp
or
dec
mov
movhlps
mov
in
addl
adc
stos
mov
repz
cltd
jecxz
neg
sub
clts
and
in
loopne
push
out
push
jp
loopne
scas
inc
inc
push
fbstp
roll
pop
cmpsl
insb
jmp
push
enter
cmpsl
cli
movsl
mov
out
fwait
sbb
sbb
rcr
fwait
lret
mov
sbb
movsl
dec
stos
dec
jmp
call
mov
xchg
scas
lock
cmpsl
dec
into
mov
icebp
in
mov
xchg
loope
ja
xor
pop
push
testb
cmp
repnz
add
jge
xchg
movsb
jne
jnp
in
jp
mov
imul
fsubrl
call
daa
lret
shll
imul
xor
out
cli
push
insb
jp
iret
adc
and
cmpsl
call
sbb
inc
movsb
dec
mov
xchg
inc
popa
ljmp
push
insb
int
adcl
xchg
add
stc
inc
adc
nop
jmp
jecxz
sbb
jecxz
cmc
cmpsb
std
add
jb
pusha
pop
int
test
fdiv
jno
mov
cmpb
outsb
insl
push
btc
sbb
lea
mov
mov
stos
bound
in
pop
or
sub
inc
sub
xchg
out
jmp
addr16
lea
imul
xchg
jbe
subl
sub
bound
mov
cli
in
lods
cmp
ret
jl
popf
cmpsb
dec
xor
leave
les
fs
rolb
sbb
in
jmp
jnp
je
jo
dec
out
and
sub
push
cmp
sahf
sbb
cmpsb
rcl
or
gs
addr16
cld
dec
xchg
jmp
and
imul
jle
xor
sub
mov
mov
cli
sub
xor
dec
push
adc
bound
or
rcl
das
jno
dec
mov
add
mov
sbb
inc
gs
jb
ss
movsb
inc
lret
add
push
add
cmp
into
loop
or
mov
inc
in
jo
mov
ds
sbb
mov
and
les
pop
rorl
dec
shrb
xor
dec
lcall
xchg
loope
dec
jle
and
lret
fisubs
or
pop
adcb
pop
cli
and
loop
in
xchg
mov
jnp
ficoml
or
imul
adc
push
jbe
fiaddl
cmp
and
dec
mov
add
mov
xlat
loop
test
xor
mov
fstl
std
and
stos
jp
loope
pop
sub
add
cmpb
enter
daa
jecxz
retw
out
xchg
into
movsl
jo
xchg
repnz
push
insb
xchg
add
and
mov
or
inc
stos
xchg
jb
sub
repz
repnz
sub
roll
fistpll
incb
lea
inc
fimull
int
repnz
xchg
inc
fs
test
mov
xchg
adc
in
out
insl
aad
ds
mov
loop
call
hlt
or
mov
bound
cli
lcall
ja
xchg
jmp
mov
adc
aad
cmp
orb
loope
loop
dec
push
mov
cmp
sub
pop
and
xor
and
xchg
jo
in
cmpsb
add
pop
cmpl
and
add
jp
pop
aam
and
xlat
cmp
sti
loop
ljmp
jb
mov
dec
adc
shr
lcall
and
sbb
inc
loopne
divl
adc
rcll
in
mov
in
xor
nop
mov
fists
lret
mov
jb
int3
adc
push
movsb
lock
shl
outsl
fbld
dec
push
add
xor
xchg
dec
fldl
ret
aam
xor
scas
jmp
dec
mov
pusha
orb
repnz
and
lods
adc
scas
cwtl
jbe
or
adc
inc
add
dec
adc
adc
scas
push
clc
orl
and
fildll
scas
jb
test
cmc
pop
mov
in
fxch
add
repz
jl
adc
in
and
cltd
sbb
call
outsb
push
mov
xchg
loop
mov
dec
mov
dec
and
pop
xor
ja
mov
cmp
in
int
scas
mov
xchg
loop
cwtl
or
sub
mov
cs
fsub
sub
sahf
xor
mov
addl
outsb
inc
rorl
sbb
xchg
xlat
push
add
aam
iret
sbbl
sub
int3
jge
xchg
and
xor
shrl
sbb
adcb
es
adc
mov
mov
sbb
fbstp
rolb
mov
out
movsb
xchg
xor
fnstcw
lock
mov
xor
les
push
stc
scas
jle
mov
jge
js
adc
or
insl
cwtl
pop
dec
lahf
push
xchg
pop
dec
mov
stos
std
jmp
xchg
shrl
out
in
cmp
out
inc
pop
sbb
or
xor
stos
jb
mov
je
mov
jp
sub
in
sub
adc
adc
mov
add
shrb
cmp
push
push
push
sbb
mov
push
add
arpl
out
jbe
xor
pop
xchg
pop
jmp
and
aad
pop
movsl
cmp
sbb
aaa
sub
mov
jle
rcl
imul
repz
pop
jbe
xchg
pop
dec
jno
mov
xor
cmp
inc
jecxz
and
cmp
into
cmp
lods
mov
xchg
dec
scas
ss
lds
repnz
orl
jecxz
insb
xor
lret
jne
scas
out
sub
adc
xor
scas
pop
fsubrs
mov
aas
fadds
arpl
inc
popf
nop
cld
leave
dec
jb
sbb
add
mov
pop
lret
jle
lret
flds
mov
sub
add
data16
into
xchg
call
inc
loop
sub
mov
aad
cmp
fs
stos
iret
pop
push
iret
mov
fldcw
cmp
test
bnd
fisttps
out
test
or
lock
cmc
jl
stos
out
fstpl
rorb
jb
xchg
lret
push
rorl
sub
pop
data16
cmpsl
lret
xchg
cltd
mov
cmpb
cmp
push
sub
mov
mov
cmp
sbb
jne
jne
iret
xor
mov
dec
cmc
ljmp
int
leave
jmp
movl
fbld
xchg
pusha
lret
mov
pop
cmp
adc
inc
push
cmp
test
jecxz
inc
adc
cmp
cltd
add
inc
ret
xchg
dec
add
cmc
push
mov
es
mov
dec
test
clc
out
sbb
cmp
sub
xor
mov
testb
mov
cmp
sbb
xlat
sbb
xchg
fnstenv
cmp
xchg
scas
dec
mov
pop
xchg
testb
test
mov
mov
dec
das
xor
rorb
pop
pop
test
sbb
add
imul
lds
mov
mov
loope
popa
scas
mov
lahf
imul
in
xchg
call
test
push
cli
inc
test
lock
sub
xchg
adc
add
insb
shlb
gs
aaa
pop
cmp
jmp
sbb
jl
sbb
fstpt
jae
filds
mov
sub
dec
mov
cs
jecxz
dec
or
aaa
scas
outsl
and
and
les
and
mov
jg
fadd
mov
aaa
scas
bound
leave
lea
iret
pop
mov
xor
jno
lret
sub
mov
in
mov
jae
jmp
je
sub
jne
xchg
call
cmp
sub
pop
inc
adc
dec
inc
movsl
movsb
push
xor
sahf
mov
jb
mov
sub
std
and
adc
adc
sbb
mov
repz
mov
and
and
jno
jns
lret
repnz
lock
imul
mov
sbbb
cmp
push
and
call
ret
mov
adc
nop
mov
xchg
outsl
sub
aas
cmpsb
mov
push
inc
sarb
adc
mov
imul
cmp
bound
mov
cmp
mov
mov
sub
inc
call
incb
cmp
mul
cmp
inc
push
add
fdivp
outsl
add
xchg
cli
jmp
and
sbb
ljmp
adc
jb
test
ljmp
xor
push
and
or
loop
pop
popa
movsl
push
sar
ja
sub
fwait
sbb
push
pop
mov
in
mov
cld
mov
int3
leave
push
or
dec
mov
mov
fadd
sbb
xchg
jl
sub
lds
frstor
leave
in
sub
int3
fstps
xchg
pushaw
movsb
ror
dec
sub
pop
lret
mov
dec
lock
loope
fldcw
mov
pop
out
dec
pop
les
or
dec
pusha
int
fnstcw
mov
jns
iret
push
mov
das
aam
insl
pop
dec
jmp
mov
dec
mov
stos
icebp
xchg
stc
and
pop
movsb
push
xchg
push
out
pop
ss
inc
adc
sbb
xor
push
rcrb
mov
outsb
mov
std
into
xchg
mov
dec
es
mov
sahf
add
xchg
or
je
push
inc
call
movsb
jg
dec
ficompl
fs
sub
lea
dec
sbb
imul
scas
lret
inc
xchg
aam
push
dec
repnz
inc
in
mov
mov
rolb
sbb
mov
push
jmp
mov
add
adc
pop
ret
into
test
leave
adc
xor
cs
and
push
jns
sahf
leave
sahf
iret
and
rclb
push
cli
dec
shrb
es
dec
stos
mov
cwtl
arpl
jmp
mov
push
fwait
jp
mov
shr
test
dec
or
mov
dec
mov
jg
inc
fsubs
test
sbb
fdivr
movsb
push
mov
add
sub
mov
mov
das
ljmp
dec
mov
and
xor
sub
fsubr
ljmp
add
test
inc
movsb
xchg
and
xchg
je
ds
shrl
xadd
and
sub
ja
mov
inc
sub
sbb
fs
cmp
mov
jno
jne,pn
or
stos
fcmovne
or
cmp
push
lcall
ret
push
xor
sbb
mov
in
xor
imul
mov
sahf
stos
gs
data16
data16
es
inc
jp
mov
out
mov
loopne
test
inc
xchg
cmp
adc
ret
mov
outsb
xor
jmp
mov
xchg
repnz
ljmp
mov
push
jecxz
outsb
and
cmp
lret
mov
push
movsb
or
fiadds
jle
sub
fstpt
pop
into
sub
inc
xchg
add
or
roll
fisubrs
jae
lods
movsb
push
in
fldt
ret
pop
xor
push
mov
les
add
mov
or
movsl
or
ss
repnz
add
repz
fwait
jg
jb
xor
mov
loop
lcall
daa
jb
gs
sbbb
lods
loop
subb
push
inc
or
outsb
jle
mov
adc
mov
xchg
adc
sbb
push
repnz
in
into
pop
jmp
add
sub
or
add
xor
xor
sub
push
fnstsw
fadd
gs
adc
dec
fldt
or
fisttpll
clc
pop
mov
les
mov
adc
xchg
push
orl
outsl
out
pop
movsb
and
jle
cmpsl
lods
mov
pop
lods
xor
fisubrl
add
lea
sub
push
mov
pop
outsb
xor
pop
mov
imul
and
iret
test
dec
jl
mov
push
loopne
lods
sbb
lods
pop
pop
mov
xor
lods
loope
and
les
lahf
pop
and
arpl
push
pop
jg
cmp
or
je
iret
xchg
gs
inc
aaa
je
cmp
fnstcw
in
sbbb
inc
mov
adc
clc
filds
inc
fildl
cmpsl
fnsave
sbb
testb
xchg
lahf
ret
sub
jns
fbld
cltd
fsubrl
dec
in
pop
mov
inc
stos
std
ja
xor
loope
jmp
jl
mov
stos
add
cld
sti
mov
mov
out
push
cmpsb
or
pusha
out
inc
sbb
mov
mov
sub
mov
dec
or
cmpsb
xchg
cmp
ja
sub
mov
out
fwait
xor
nop
test
push
pop
jge
adc
push
mov
mov
cmpl
movsl
fistpll
fisttps
lds
pusha
test
test
in
jmp
pusha
js
sbb
call
pusha
nop
xchg
mov
add
loope
flds
add
sub
jae
out
sub
stos
mov
stos
add
fcomps
clc
int3
inc
mov
push
sarl
pop
cwtl
pusha
sbb
stos
into
sbb
add
cmpsb
shlb
pop
xchg
faddp
pusha
lock
repz
into
xor
cmp
pop
sbb
lock
and
js
imul
pop
inc
sub
frstor
shrb
or
adc
or
cmpb
jg
xlat
jle
jl
pop
enter
mov
mov
fbld
in
fstpl
das
inc
push
push
inc
jge
pop
xor
xchg
mov
cli
enter
push
sub
mov
adc
dec
mov
xbegin
xchg
popa
push
xor
fisttpll
and
lret
and
ss
and
adc
pop
ds
xor
and
imul
stos
jae
add
mov
mov
or
sbb
add
mov
and
movsl
out
insb
test
imul
inc
mov
daa
push
sbb
cmc
adc
sbb
push
push
mov
shll
es
jbe
lods
in
cwtl
scas
push
out
add
mov
jb
imul
push
mov
mov
pop
or
and
rolb
push
bound
jmp
xor
sub
add
push
int
lret
mov
addr16
repz
mov
xchg
dec
sbb
inc
mov
outsb
repz
and
imul
push
aam
xor
add
lret
jnp
arpl
jmp
pop
lahf
ret
adc
fisubl
adc
jbe
fcomip
aas
and
cltd
ljmp
cmpsl
xchg
fcoml
xorl
bound
pop
xchg
mov
sbb
hlt
fcmovnu
xchg
imul
xchg
adc
std
call
cmp
cmpsl
int3
pop
fwait
dec
push
sbb
mov
mov
outsl
mov
jg
adc
xor
mov
stc
sbb
mov
dec
stos
cmp
xchg
adc
mov
dec
xor
ret
add
ljmp
arpl
jbe
cmpsl
mov
dec
xor
pop
f2xm1
imul
in
inc
loopne
outsl
mov
xchg
mov
xor
rcll
scas
cmc
out
and
das
es
or
mov
cmp
cmp
fidivl
jp
xchg
out
ret
ljmp
dec
cltd
mov
mov
push
movsb
mov
xor
in
pop
dec
mov
add
pop
test
inc
aad
out
push
hlt
dec
mov
movsl
ds
idiv
hlt
pop
add
imul
aam
xchg
xchg
xor
pop
sbb
mov
and
xor
std
cld
jmp
ds
fisubs
out
adc
push
cs
pop
dec
inc
jmp
shll
stos
or
sbb
or
sti
xchg
stos
out
or
pop
loop
jb
fisubrs
dec
nop
jle
movsb
cmp
cmp
jne
pop
xor
stos
imulb
xchg
or
or
or
fimuls
enter
or
xor
in
mov
insl
lret
lret
iret
pop
shll
jnp
dec
cmpsl
jge
cmp
adc
cmp
btr
aas
lds
xor
iret
ljmp
dec
adc
lea
ret
ljmp
xchg
adc
push
mov
add
add
dec
cmp
inc
les
lea
movsl
push
insb
push
cmp
xchg
lock
outsl
or
push
mov
xchg
mov
inc
pop
clc
or
sub
rol
enter
or
jae
subl
aaa
sar
jp
adc
push
pop
lea
pusha
sub
in
outsb
sub
hlt
sub
pushf
stos
push
pop
pop
mov
mov
test
std
repnz
mov
cmp
mov
lods
lods
fmull
and
repnz
dec
and
pop
rcrb
push
mov
cmove
xor
add
jl
js
inc
loope
pushf
insl
js
mov
xchg
repz
jmp
mov
stc
mov
sbbb
rorb
push
outsb
adc
push
cmpsl
adc
jge
test
in
stc
xor
lock
dec
sub
jbe
stos
jmp
pop
lods
sbbb
inc
pop
xchg
fidivl
loopne
outsl
add
dec
pop
pop
imul
dec
mov
scas
sbb
sub
int3
insb
inc
jns
fstl
mov
jb
mov
hlt
sub
sti
into
pop
push
sarb
xor
sub
out
roll
and
dec
inc
fxtract
popa
xchg
mov
add
push
ds
insb
pop
out
cmpsl
dec
or
leave
test
decb
xchg
mov
xor
js
test
dec
xchg
mov
test
and
dec
ret
mov
inc
call
jecxz
fistpll
mov
pop
mov
mov
ss
sub
lcall
adc
and
ss
mov
adc
xchg
std
mov
add
out
test
and
inc
ds
movsl
mov
ljmp
rclb
rcrb
add
in
pushf
jne
ss
dec
xor
std
in
xchg
sahf
popa
push
xor
ret
pmulhuw
out
dec
fistpl
mov
jle
ss
jl
and
int
mov
xor
iret
xor
popf
pop
ret
cmp
pop
sub
outsb
push
pop
or
dec
xchg
test
mov
out
out
xchg
cmpsb
push
out
sub
bound
pop
jle
xor
lods
jp
jnp
les
sbb
pop
sbb
and
fldcw
xchg
pop
movsl
movsb
dec
push
fldl
mov
lea
push
push
cmp
test
adc
call
jge
pop
cmc
cmp
pop
inc
lea
iret
cltd
test
dec
jbe
xchg
xor
insb
push
push
cld
xchg
pop
div
push
add
movsl
lods
mov
adc
push
loop
mov
int
pop
xor
xor
loope
fisubrs
push
das
jo
add
jno
xlat
enter
scas
adc
addr16
mov
pop
jns
xor
cwtl
ljmp
sub
in
pop
pop
mov
lcall
mov
adc
pushf
jb
dec
mov
and
dec
popf
mov
jo
sbb
pop
testb
orb
into
xor
int3
sti
mov
call
jne
sbb
mov
or
and
fdivrs
xor
add
nop
push
das
clc
pop
decb
or
add
dec
adc
mov
xchg
xor
jne
xchg
cs
cmpsl
out
pop
jge
push
mov
movsl
lods
stc
test
push
mov
xlat
out
sti
gs
xor
ja
mov
aam
test
movsl
cli
and
mov
out
lds
test
fisubrs
dec
ljmp
cmp
sbb
ret
testb
aam
sbb
and
jns
pop
push
dec
rclb
mov
mov
ffreep
shrb
push
pop
popf
clc
and
inc
mov
xchg
testl
int3
subb
ret
cmp
out
enter
cmp
mov
sub
outsl
loope
fiaddl
dec
jge
or
insl
or
xchg
frndint
add
scas
push
aad
xchg
negb
dec
cmp
push
lods
pop
adc
cmp
push
mov
fdivl
jge
das
push
or
test
out
add
ds
jne
pushf
imul
std
ret
push
outsl
adc
add
stos
fcmovu
call
repnz
sahf
cltd
jns
mov
fidivs
repz
pushf
cmp
dec
inc
sub
pop
cmpsl
imul
lea
jae
inc
adc
inc
inc
cmp
loop
ljmp
lahf
inc
mov
int
push
dec
adc
insl
test
testl
std
call
sub
imulb
nop
cld
ljmp
pusha
mov
dec
loop
jl
ret
cmc
and
sub
das
arpl
stos
test
jno
icebp
jp
mov
push
jle
push
adc
cmc
lret
inc
push
jle
enter
scas
stos
sub
sbb
sti
jno
xchg
cmp
stos
fimull
lods
adc
addr16
fbld
cmp
popa
iret
insb
mov
jne
xchg
or
or
push
scas
das
ljmp
ljmp
aas
or
ljmp
pop
push
lret
fdivr
lahf
lgs
inc
es
repnz
dec
insl
sti
stos
and
ljmp
mov
push
leave
ret
cmp
add
xor
icebp
inc
jnp,pn
mov
pop
out
aam
out
xchg
cli
mov
cld
cmpsl
iret
mov
iret
sub
repz
jns
dec
ret
es
xchg
jmp
push
mov
leave
ljmp
sarb
inc
gs
push
and
adcb
imul
sbb
scas
xchg
pop
or
dec
hlt
push
roll
sbb
in
repz
insb
adc
icebp
addl
arpl
xlat
hlt
mov
xchg
or
outsb
and
mov
mov
add
subb
call
add
call
lods
mov
es
lret
popa
xlat
sbb
iret
jbe
shll
cmpb
add
lret
clc
repz
push
nop
repz
push
add
sahf
movsb
mov
jmp
rcr
jmp
fiaddl
xchg
push
test
xchg
cltd
inc
sbb
xchg
insb
insl
decb
sub
mov
iret
enter
jmp
add
enter
mov
adc
mov
movsb
mov
ja
stos
aaa
loopne
xor
sahf
pop
hlt
cmp
fldcw
cwtl
xchg
dec
xchg
xchg
sub
dec
fs
fcmovne
xchg
xor
mov
lods
sahf
test
dec
push
out
lock
or
mov
cld
mov
xor
into
clc
or
or
test
jb
in
inc
jl
mov
jnp
adc
adc
nop
cwtl
lock
leave
and
mov
and
push
or
and
pop
and
adc
in
loope
dec
int3
cmp
adc
lds
mov
xor
xor
fnsave
adc
aad
xor
stc
pop
imul
sub
lret
xchg
dec
xor
mov
push
mov
push
fstpt
push
gs
lcall
ss
stos
adc
out
loop
pop
fcomps
int
ja
add
loopne
xchg
jl
xchg
lods
sub
pushf
and
dec
jmp
dec
mov
arpl
mov
subl
sar
js
cmp
mov
inc
sub
xor
lahf
ret
pop
push
pusha
sahf
sti
iret
lods
fists
lret
aad
into
in
and
mov
ja
iret
pop
loop
jp
mov
js
mov
lock
xchg
ret
mov
jnp
mov
out
push
jo
mov
stos
call
loop
pushf
xor
mov
xchg
add
cs
push
add
sub
cmpsl
adc
mov
sahf
mov
lret
lret
outsl
push
dec
mov
sub
jne
pop
jp
outsl
fistpl
cld
and
loop
out
in
sub
cwtl
xor
jno
add
xchg
ror
jnp
aas
mov
scas
testl
xorl
adc
jmp
mov
xlat
or
or
mov
dec
jmp
mov
call
lahf
push
sbb
adc
inc
dec
adc
pop
into
lea
jmp
xor
mov
push
mov
out
call
and
pop
mov
insl
loop
iret
xlat
push
mov
es
inc
mov
dec
popa
dec
js
mov
inc
mov
xchg
sbb
loop
jbe
mov
add
mov
fsubrp
pop
bound
jbe
iret
cld
dec
lds
inc
xor
sub
cli
dec
cltd
pop
std
ss
and
mov
and
xor
rolb
mov
xor
orl
ss
pushf
test
inc
sbb
mov
test
add
cld
out
sub
dec
jmp
xchg
loopne
inc
xchg
lcall
fdivrp
jmp
loop
mov
sbb
sub
push
jns
imul
inc
fmuls
push
jle
test
into
add
cltd
stos
daa
cmpsl
push
push
lret
jnp
jle
daa
add
pop
jecxz
fisttps
mov
jl
sarl
xor
cmpsl
mov
ja
sub
xor
lock
mov
add
jno
xor
pop
mov
loopne
mulb
fs
mov
outsl
push
pop
jmp
test
xchg
popf
rol
or
push
push
xorb
imul
cld
add
ret
adc
xchg
in
xor
test
xor
sub
xchg
clc
adc
mov
scas
push
or
int3
sbb
fiaddl
popf
mov
outsl
loop
push
xor
xor
fnstcw
xchg
mov
rcr
inc
mov
movsl
mov
adcl
dec
arpl
clc
repz
sub
xor
clc
adc
mov
loopne
repnz
push
cltd
nop
add
movsb
sbb
test
jno
in
mov
int
or
cmp
out
push
inc
mov
push
int
lds
xlat
rorl
stc
bound
loopne
mov
add
mov
in
das
fcmovb
je
or
mov
and
sarb
ja
xchg
jne
daa
movb
cli
adc
dec
scas
stos
sbb
call
mov
lcall
out
out
scas
lret
loopne
push
shll
das
jmp
loope
nop
lds
ret
rcl
out
pop
xchg
push
push
cmpxchg
das
fwait
scas
stos
test
stos
ss
arpl
push
xchg
inc
push
mov
js
mov
int
loopne,pn
jg
pop
dec
rcr
pop
fistpl
rcll
inc
daa
push
ds
sbb
xor
sub
mov
pop
clc
pop
pushf
dec
inc
out
out
fxch
xchg
out
and
pop
mov
lcall
test
repnz
test
hlt
adc
setb
push
xor
movsb
xor
sub
sbb
sbb
xchg
cmp
xchg
repnz
sbb
jl
loopne
sbb
enter
jle
inc
in
cltd
pushl
in
mov
pop
sub
repnz
dec
and
test
shl
push
dec
xchg
mov
cmc
xchg
out
decb
popf
xchg
int
outsl
sarb
xor
fsubr
xchg
xchg
stos
push
stos
cmp
into
loop
add
pop
jl
mov
or
push
imul
loop
sub
iret
mov
fldcw
jbe
and
mov
sti
lcall
or
mov
fiaddl
data16
adc
scas
std
jno
jmp
clc
mov
out
pushf
out
add
push
jle
popf
push
sarl
mov
xchg
mov
stc
cs
or
les
out
mov
mov
sarl
ja
pop
arpl
jne
cmp
ljmp
cs
sbb
push
xor
jg
imul
and
adc
test
cmp
jge
and
cmp
cli
test
arpl
jo
addr16
push
pop
jno
in
les
fmulp
xchg
daa
jge
push
std
stos
mov
les
adc
in
fprem
jecxz
adc
out
loopne
mov
pusha
fs
aad
cltd
dec
jae
fildll
cmp
fbstp
js
hlt
mov
test
push
jne
fbstp
or
cld
inc
sub
mov
sbb
mov
inc
cmp
movsb
fsts
and
push
xorl
std
pusha
and
cwtl
jne
mov
add
sbb
sti
pop
nop
jb
aaa
popa
cmpsb
xor
jg
mov
test
push
shr
test
or
sbbl
add
cmp
outsl
aaa
mov
out
in
cld
scas
icebp
sbb
std
jle
dec
xchg
push
int3
loope
aas
inc
out
mov
jg
daa
mov
adc
add
outsb
dec
adc
or
lods
lods
movsl
hlt
mov
daa
push
sub
fsub
mov
or
lea
xchg
scas
inc
dec
xchg
rcll
call
push
sbb
push
clc
sbb
xchg
in
pop
mov
or
cmc
scas
in
jmp
repz
es
xor
scas
repnz
add
ljmp
fs
jae
loop
sbb
repnz
xlat
mov
mulb
xor
mov
jne
push
and
push
call
cmpsb
pusha
jo
addr16
outsl
insb
mov
cli
push
push
pushf
sti
ret
mov
push
sti
cwtl
sub
sub
pop
add
scas
pop
in
loopne
sub
pop
mov
out
mov
bnd
jo
loope
inc
fmulp
lcall
push
xchg
into
fidivrs
inc
arpl
xchg
cmp
data16
and
push
sub
es
adc
xor
pop
xor
fdivl
add
mov
shrb
mov
outsb
inc
lret
loope
cmpsb
mov
out
fwait
push
jp
mov
xchg
jmp
mov
inc
jbe
inc
mov
bound
xor
mov
test
or
icebp
movsb
stc
mov
mov
les
imul
pop
fwait
add
or
mov
dec
mov
push
pusha
gs
les
dec
in
stos
jb
lret
cli
loope
sbb
popa
dec
test
aaa
aam
test
bound
cmp
sti
stos
xchg
leave
fwait
test
stos
cs
mov
pop
fsts
cmpsb
loop
mov
subl
push
dec
hlt
mov
icebp
mov
and
xor
mov
orb
lahf
sub
jae
jbe
shl
cmp
adc
xchg
mov
mov
inc
adc
and
cmp
mov
sub
pushf
aaa
repz
dec
notb
into
xchg
cmp
in
push
rcrl
insb
iret
adc
add
ffree
or
inc
cmpsl
sbb
jne
jecxz
mov
lods
mov
inc
push
jae
cmp
lret
shll
imul
mov
adcl
loopne
and
and
and
push
xchg
fwait
ljmp
mov
jl
loope
xchg
cltd
mov
aas
add
insb
push
sti
xorb
insb
test
fsubs
hlt
dec
mov
inc
cwtl
mov
push
add
push
fs
sbb
cs
clc
inc
in
pop
adc
mov
pop
loop
and
fistpll
and
lods
loope
sbb
hlt
mov
lahf
or
pop
pop
xchg
mov
mov
hlt
sbb
cmp
loope
mov
sbb
ret
add
mov
mov
aad
lods
int3
sub
insb
jle
sti
sbb
xchg
pop
xchg
push
jae
or
mov
negb
sahf
loopne
mov
loopne
push
mov
inc
addr16
adc
add
loopne
pushf
pop
cld
bound
push
lea
jns
push
xchg
push
or
pop
push
ja
mov
iret
inc
sub
in
and
jbe
add
lahf
loopne
inc
pushf
pop
jno
dec
loopne
push
fcomp
popa
mov
cmp
adc
imul
iret
cmp
js
push
mov
mov
popa
jbe
dec
dec
out
addl
incl
sbb
inc
lret
jecxz
ja
es
rclb
push
inc
mov
repnz
jns
add
xorb
int3
sbbb
sub
inc
push
enter
push
cwtl
sub
xchg
and
or
pop
ja
and
jge
jbe
push
arpl
fsubrl
jo
or
je
daa
cs
or
jae
mov
popa
push
mov
mov
xor
popf
xor
test
cmp
mov
in
add
inc
sbb
xor
jae
or
or
sbb
pop
ficoms
add
cmp
xchg
outsb
cs
adc
and
jnp
loopne
push
cli
imull
stc
je
jns
cmp
jo
mov
pop
mov
fldenv
push
gs
jmp
stc
xchg
repz
add
std
cmc
or
cmp
jo
jae
inc
adc
ja
jo
pop
cltd
int3
fistl
loop
dec
jmp
sub
inc
daa
sub
out
aad
cmpsb
mov
jecxz
into
jnp
jmp
das
add
mov
push
enter
sahf
xor
cwtl
push
in
popa
aad
loope
bnd
sahf
pop
mov
mov
daa
pop
stos
dec
fdiv
out
arpl
ret
fsubp
ljmp
pop
jb
fcmovne
push
pop
lods
pop
dec
stc
jp
jns
into
and
mov
push
cmc
push
mov
iret
jl
sbb
mov
add
mov
xchg
mov
xor
add
and
mov
stc
fs
sub
das
es
pop
dec
mov
das
imulb
shll
jle
add
fisttpll
sbbl
ret
in
push
cmp
arpl
in
pop
jbe
xor
shl
in
xchg
imul
adc
cmp
ja
jl
inc
daa
mov
cmp
sub
cli
add
icebp
jl
pop
mov
mov
and
cwtl
mov
push
inc
push
das
dec
pop
enter
int
xlat
in
jno
rcrb
cmp
loopne
push
sbb
adc
rolb
fisubs
or
dec
xor
movsb
dec
dec
mov
lcall
dec
pop
mov
add
mov
and
xor
and
add
or
into
xchg
imul
cmc
call
mov
push
adc
fsubs
fwait
repz
dec
xor
sbb
dec
insl
rcrb
sti
pop
aad
push
jp
mov
xor
push
sub
cmp
dec
inc
lea
jb
xor
test
mov
and
dec
xor
aas
jo
in
dec
inc
sbb
out
mov
jmp
mov
lea
popa
push
out
pop
mov
aas
or
fcomip
ja
push
mov
icebp
xchg
inc
sarl
xor
sahf
cmp
dec
xchg
jo
cmpsb
inc
movsb
gs
scas
cmp
mov
dec
add
jb
pop
outsl
ror
xor
push
adc
daa
adc
ret
xor
aas
inc
stos
mov
xorl
pop
xor
in
loopne
es
outsb
call
or
mov
sti
push
hlt
pop
or
mov
insl
jnp
roll
sbb
xor
xchg
xor
jnp
jg
add
fwait
leave
and
jne
mov
int3
push
push
mov
ret
sbb
sahf
lahf
cmp
repz
cwtl
dec
fnstsw
xchg
sbbl
sarl
xor
or
dec
hlt
mov
ljmp
and
out
and
arpl
dec
jecxz
push
jo
enter
bound
fs
sbb
mov
add
lret
fcoml
mov
sub
inc
cmc
cwtl
push
jmp
into
mov
sahf
lock
shll
daa
or
inc
lock
daa
psrlw
jmp
xlat
movb
sbb
icebp
push
pop
into
nop
push
dec
lods
and
fcomp
add
pandn
rorb
jbe
pop
int3
scas
dec
cmp
ja
fstpt
fbld
test
into
nop
sti
dec
movsb
mov
push
sub
pusha
out
fisubrl
out
adc
imul
xlat
push
adc
or
sub
andl
mov
call
cmpsl
mov
sbb
push
push
enter
inc
xchg
out
push
pusha
xor
fisttpll
in
in
popf
enter
jae
pop
sbb
push
pop
add
xor
jno
sub
or
dec
daa
mov
in
xchg
inc
cmc
sti
mov
xor
stos
pop
test
jmp
mov
xor
jmp
jno
nop
lods
dec
mov
and
push
or
xchg
fimuls
sbb
xor
cltd
outsb
outsl
idivb
std
cmp
lock
sub
xor
inc
stos
pop
mov
and
mov
push
imul
sar
loopne
sub
mov
push
adc
push
add
sbb
dec
mov
cmp
and
popf
mov
dec
int3
or
in
fnsave
mov
or
loop
lock
adc
mov
lock
sub
stos
jge
outsl
cwtl
sub
push
sub
sub
inc
scas
test
aaa
or
jbe
pushl
push
stos
mov
ljmp
jp
je
cli
dec
outsb
jg
xchg
mov
test
test
hlt
mov
cwtl
dec
fs
popf
sbb
or
mov
repnz
and
xchg
subb
ja
addr16
sbb
or
mov
in
xchg
int
mov
das
adc
jns
push
stos
cltd
cwtl
mov
pop
jmp
dec
push
push
jmp
add
outsl
and
shll
ljmp
lret
cmc
dec
sarl
ret
shll
cmp
inc
add
js
outsl
stos
ss
mov
jmp
mov
xor
fisubl
cld
dec
xchg
jmp
or
mov
mov
mov
inc
negb
xchg
mov
lods
xor
adc
xchg
cmp
mov
push
mov
add
add
iret
or
push
mov
xor
arpl
enter
sbb
mov
cmp
lock
cmpl
push
loopne
and
mov
test
dec
xchg
add
jle
pop
fiadds
sti
movsl
mov
shr
cwtl
lea
add
and
add
cli
pop
xor
sbb
in
rclb
sarb
cmpsl
xchg
mov
and
sbb
dec
mov
movsl
and
outsw
cmp
cs
inc
mov
lea
cld
inc
lret
mov
mov
cmp
or
push
lahf
inc
sbbb
push
insb
filds
imul
push
push
push
xlat
call
fwait
sub
ss
cmc
jmp
test
and
loope
mov
xlat
fimull
pop
or
test
mov
stc
sub
mov
addr16
fwait
insb
cmp
pop
ret
sbb
aas
mov
add
xchg
fidivs
insb
pop
icebp
push
mov
inc
fcmovnbe
mov
add
inc
mov
mov
dec
mov
popf
loopne
pop
es
data16
or
fnstsw
les
das
mov
dec
es
jle
xor
adc
jmp
xor
mov
mov
push
pop
jp
adc
call
lret
add
sti
repnz
push
mov
nop
or
mov
in
mov
inc
fcomi
mov
sbb
aas
or
in
jo
mov
pop
push
into
add
in
out
repz
stos
add
rorl
jge
mov
clc
out
inc
rolb
stos
sbb
out
xchg
mov
lret
mov
ljmp
std
pusha
icebp
or
and
push
xchg
loope
addb
int3
jae
lret
in
sbb
inc
mov
jnp
scas
pop
xor
fld1
sub
fnstsw
and
orb
out
leave
sub
and
mov
outsb
add
or
popf
xor
in
xor
pop
sarb
js
lea
mov
mov
ss
jmp
xchg
adc
test
add
lcall
test
or
mov
cmpsl
pushf
mov
dec
cmpsb
cmp
push
push
out
dec
scas
cmpsl
imul
icebp
add
pop
fwait
out
xor
add
inc
loop
cld
xor
push
cmp
sbb
inc
insb
aad
sti
xor
add
push
pusha
inc
and
xchg
ljmp
fcmovu
daa
mov
and
sub
mov
clc
jecxz
sbb
or
or
mov
dec
cli
test
push
cmp
rcl
add
test
adc
and
stos
test
hlt
lahf
sub
dec
stc
ret
cld
pop
jne
or
mov
leave
mov
or
adc
xor
mov
xlat
jl
jmp
mov
pop
fucom
lds
cmpsb
std
push
mov
movsb
fxch
sbb
push
adc
pop
or
dec
jb
push
mov
xor
adc
loope
fwait
sub
rol
xchg
inc
js
imul
outsb
std
test
sub
in
sahf
or
xor
outsl
cmp
inc
push
jnp
fidivl
movlps
mov
int3
xchg
pop
mov
add
sub
adc
and
cmpsb
fisttps
pusha
cmc
sahf
rolb
adc
in
icebp
xchg
xchg
jno
fisttpll
stos
ret
or
les
push
std
push
jg
and
push
lret
pop
pop
cmc
rcll
jmp
push
push
in
pop
out
jp
data16
cmp
fwait
pop
push
call
sbb
or
push
in
inc
pop
pop
out
mov
pop
jge
jbe
dec
imul
gs
outsb
arpl
cmp
sub
push
adc
inc
jns
js
lods
xor
std
and
add
lcall
jae
sub
rclb
jp
pop
dec
cmp
push
cmc
and
xchg
int
add
xor
dec
add
mov
mulb
xchg
stos
xlat
cmovp
pop
and
popl
sbb
adc
mov
push
cmpsb
jne
push
insl
iret
pop
out
mov
add
rcrb
sub
jmp
ficomps
int3
icebp
repz
and
or
mov
mov
cmpsl
daa
cmovnp
xor
cmpsb
mov
pop
scas
pop
fnstenv
arpl
imul
adc
test
add
outsb
or
xorb
in
add
fimuls
mov
orb
fwait
xchg
pusha
not
das
loopne
mov
mov
adc
rorl
daa
fdivrl
and
push
push
fcompl
xor
fimull
add
and
sbb
mov
jb
lcall
insb
or
lds
mov
pushw
push
sbb
add
cmpsl
xchg
mov
xor
push
cld
mov
out
jno
fsubp
cld
jle
arpl
inc
loope
fs
jp
arpl
outsl
jb
ret
xlat
pop
scas
xor
mov
out
add
xor
push
jmp
push
popf
and
mov
mov
rorl
loopne
in
push
pop
hlt
jb
aaa
popa
jbe
scas
lret
stc
clc
fwait
pop
lock
mov
jmp
in
stc
push
test
decb
pop
loopne
leave
push
add
movsb
out
add
inc
mov
sbb
mov
inc
pop
in
call
push
push
imul
xchg
test
insb
outsl
imul
in
and
inc
add
and
jle
sbb
incb
pop
les
loop
idivb
or
lret
mov
push
inc
lcall
push
stos
or
ljmp
adc
jl
dec
int3
push
xchg
ret
inc
sbb
inc
fbstp
push
clc
popf
arpl
mov
sub
ja
mov
popf
testb
imull
in
sbb
in
mov
mov
cs
imul
sub
dec
sti
mov
fucom
add
leave
sbb
rclb
fwait
pop
cwtl
aad
mov
inc
dec
sub
dec
sbb
or
inc
fbstp
jg
in
push
mov
nop
ds
lahf
mov
mov
test
outsb
sub
int3
mov
pop
fadds
sub
pop
mov
popf
push
out
lret
aas
or
jecxz
mov
loopne
xlat
movsb
or
or
ljmp
add
mov
test
orl
aas
ljmp
insb
cld
push
sub
add
xchg
dec
fsubr
mov
int
int
cmp
test
pop
cmp
jl
test
imul
jb
sahf
addr16
addl
cmp
aas
into
and
dec
jno
mov
js
pusha
int
lds
or
int3
xchg
or
rol
bound
lcall
aad
push
xchg
and
or
stc
imulb
dec
or
jae
jg
adc
mov
movsl
es
shl
push
pop
jno
mov
cmpsb
outsb
push
inc
andl
cmp
sti
lahf
xchg
lock
adc
enter
fs
mov
mov
pop
aad
inc
out
xchg
das
xor
cmpb
mov
ja
dec
jp
into
jns
jle
das
pop
mov
std
je
mov
rep
sbbb
leave
lods
rolb
subl
loope
push
adc
add
push
int3
jb
xor
pop
mov
and
imul
mov
jecxz
push
mov
imul
test
xchg
in
in
shlb
cmp
inc
fmul
jb
es
pop
in
jno
loop
int
lea
stos
pop
adc
and
pop
mov
add
mov
mov
lret
push
sbb
dec
push
fnstsw
in
jecxz
mov
lods
int
cld
adc
mov
sbb
xchg
push
jae
add
cmc
xor
cmp
mov
es
cmc
aas
xchg
xor
adc
mov
stos
and
sarl
mov
add
push
xchg
adc
in
inc
ss
fldcw
xor
add
out
call
and
call
insl
loope
ret
cmpsl
push
add
inc
add
fmul
pop
mov
cwtl
lods
mov
in
sub
cmp
enter
push
ret
mov
pop
mov
mov
icebp
insb
out
adc
mov
cs
xor
cmp
inc
and
push
iret
mov
shll
cmp
dec
inc
or
addr16
aaa
adc
jo
repz
es
ret
and
and
cs
sub
ret
scas
js
ljmp
mov
cli
fldt
lea
push
mov
mull
mov
sarb
adc
movsl
pop
and
leave
add
daa
inc
rcrb
movsb
lock
movsl
rolb
jb
push
lock
jbe
and
mov
stc
push
xchg
pop
pushf
or
inc
xor
mov
cmc
rolb
cmp
enter
and
push
and
xchg
or
xchg
aam
pop
or
mov
pop
ret
in
or
xchg
sahf
adc
insb
sahf
mov
ja
cmp
std
and
push
jp
shl
ret
pop
sub
inc
mov
xchg
ret
sub
fists
pop
cmp
cmpsb
xchg
shlb
inc
cmp
fildll
out
cli
add
jb
fistpll
adc
cs
cmp
aaa
push
test
ss
sub
cmp
adc
cmp
in
std
sbb
xchg
inc
rcll
mov
pop
in
xor
xchg
xor
cmp
cld
call
ds
mov
mov
xchg
js
cmp
iret
mov
iret
pop
mov
lock
out
cmc
and
in
fidivl
sti
add
scas
push
pop
into
lock
sub
and
into
add
bnd
sub
std
out
sbb
or
rclb
imul
sbb
aad
es
leave
dec
fistps
jl
mov
sub
mov
daa
outsb
cmc
or
pop
and
pop
and
stc
xchg
add
outsl
pop
mov
popa
pop
lods
mov
jbe
jo
into
xchg
ss
outsb
fiaddl
cs
stos
dec
outsl
mov
jecxz
or
lock
push
loop
fimuls
out
icebp
mov
not
fcompl
test
pop
das
jp
inc
fadds
push
pop
shll
stc
mov
adc
mov
les
test
pushf
jl
and
andnps
cmp
dec
add
inc
dec
rol
scas
xor
stos
jle
sub
test
fldt
shll
sub
jo
xchg
and
imul
insl
div
scas
add
inc
jmp
scas
insb
in
mov
imul
xor
push
mov
call
stos
mov
out
jno
pop
js
push
inc
leave
mull
test
dec
adcb
sbb
dec
mov
pop
inc
jge
adc
out
fidivrs
pop
mov
push
mov
mov
mov
add
push
ja
and
sbbl
cs
aas
or
add
insb
out
push
jno
std
mov
add
int3
cwtl
pop
and
pop
test
scas
jns
aad
daa
pop
push
pushf
dec
ljmp
mov
shrb
ret
fdiv
out
in
pop
inc
cmp
mov
mov
popa
mov
aam
fldl2t
and
pop
stos
mov
mov
neg
fcmovb
test
xor
adc
lock
adcb
add
dec
fidivl
sub
mov
bound
mov
push
or
loopne
dec
xchg
nop
clc
xor
flds
fimull
enter
rorb
add
mov
pop
add
js
mov
jle
adc
sahf
or
mov
repz
add
cmp
shrl
sub
dec
and
add
shr
add
push
pop
fiadds
aaa
pusha
and
add
inc
insb
dec
clc
pop
pushf
jns
sub
or
jg
das
mov
lock
mov
jg
add
aas
push
mov
push
and
scas
sti
out
mov
fadd
jns
shl
push
lods
cmc
ss
or
int3
inc
jecxz
shl
push
push
or
push
sbb
jo
xchg
insl
ds
cmp
push
sbb
insl
test
fnstsw
lock
lret
in
fcmovne
ss
hlt
jecxz
push
pusha
sbb
pop
loope
scas
daa
aas
and
leave
and
mov
pop
pop
adc
cmp
pop
imul
dec
push
test
data16
stc
fsubs
dec
pop
loop
mov
add
fisubl
jb
stc
cmp
mov
xor
arpl
jno
insl
jecxz
jnp
dec
cmpb
sub
and
jle
cmp
xchg
mov
lock
cs
push
adc
test
jbe
jmp
sbb
cmp
sbb
cmp
sub
add
pusha
xchg
inc
add
cmp
push
adc
pop
inc
cmpsl
out
jge
cli
and
cld
pushf
fimuls
push
jmp
or
shl
insl
pop
adc
sub
test
test
nop
mov
cmp
mov
jp
imul
jbe
ss
aam
js
adc
mov
jl
leave
test
mov
ja
test
sbbl
int3
das
mov
and
dec
int
lahf
aas
mov
inc
cwtl
mov
xchg
ficoml
shl
push
out
fldl
cmp
stos
mov
imul
xor
mov
scas
mov
aam
test
adc
mov
in
jl
push
pushf
xchg
inc
and
jecxz
les
in
jo
gs
cwtl
clc
iret
push
in
jnp
mov
pmulhuw
aam
jno
mov
xor
mov
xor
add
repnz
push
in
test
mov
loopne
xchg
lods
or
cmp
push
int
mov
sub
dec
add
imull
ror
je
es
mov
loop
dec
pop
jno
cmp
out
test
and
mov
aas
enter
int3
je
ja
repz
fstpt
pop
push
adc
pop
pop
inc
lds
jb
test
hlt
call
dec
cwtl
imul
cmpsl
xchg
sub
pop
mov
sti
enter
xchg
cmc
pop
mov
shll
pop
and
adc
and
and
js
pusha
inc
js
lods
mov
sbb
xchg
aad
div
cmp
lds
mov
xchg
jp
or
add
jge
in
mov
push
stc
repnz
movsl
cmp
push
ss
lahf
aaa
popf
imul
sbbb
mov
int3
mov
stos
dec
inc
fsts
jmp
xchg
ss
in
inc
bound
xor
fimuls
insb
repnz
das
loope
addr16
ret
leave
push
inc
fadds
push
add
ss
adc
xor
push
mov
insl
push
stos
lea
pop
mov
mov
cmp
daa
fstps
jp
fdivl
ret
mov
xor
aad
push
pop
xor
jno
out
xor
mov
mov
ds
jecxz
mov
xor
enter
or
push
pusha
or
sub
push
push
inc
fwait
dec
repz
cmp
or
test
mov
lahf
into
aam
xor
add
add
cli
mov
ret
testb
adc
xor
cmp
aad
aas
je
testl
pop
in
xchg
jg
test
cltd
mov
into
sub
push
jne
loop
pop
repz
mov
fbstp
mov
and
mov
sar
xchg
pop
and
dec
call
xchg
bound
mov
mov
ret
push
mov
push
shr
add
decl
pop
cmpb
into
and
shlb
add
jle
aaa
insb
dec
dec
insl
aad
cld
dec
push
sbb
jle
or
mov
sub
mov
ret
fiaddl
fwait
gs
cwtl
add
dec
push
int
xor
dec
jb
jno
fsubl
add
enter
add
jmp
jnp
cmp
test
jo
xchg
adc
xchg
sbb
scas
stos
repz
xchg
adc
mov
and
outsb
enter
cli
mov
and
mov
jp
xor
push
pop
jp
les
insb
push
mov
dec
stos
inc
or
pop
add
mov
adc
xchg
xchg
add
mov
sar
mov
leave
ffree
adc
xchg
xlat
cs
int
cld
mov
aad
rcrb
add
add
pop
iret
outsl
or
xchg
test
sbb
sbbl
mov
test
sub
mov
and
jb
test
cli
pop
stos
or
and
jnp
push
lcall
cmp
ljmp
bound
and
and
sbb
test
mov
adc
or
aas
xchg
sbb
rorb
push
andb
or
testb
outsl
mov
ds
test
xor
push
adc
xchg
out
mov
loopne
dec
std
or
notb
lea
xchg
aad
movsl
add
sbb
sbb
sbb
mov
mov
pop
xor
lods
iret
mov
std
mov
mov
andnps
cs
push
push
or
in
popa
adc
push
flds
lret
dec
std
cltd
add
mov
lea
loope
inc
lcall
js
pop
in
mov
push
jae
push
or
fucomip
and
popa
jae
sub
cld
jp
push
pop
xlat
cmp
cld
out
fidivrs
lds
repz
fstps
nop
cmp
subb
imul
mov
lcall
sbb
add
bound
ljmp
repz
pop
cmpsb
pop
fs
pop
clc
popa
jecxz
and
sub
lret
aaa
xor
pop
jp
outsb
scas
js
imul
ficoml
or
push
int
es
dec
inc
jno
inc
daa
cmp
lock
popa
jne
xor
fs
jnp
fldcw
sub
imulb
xchg
out
pop
add
xor
pop
adc
ret
sub
mov
adc
add
leave
nop
inc
and
cmp
dec
jmp
push
push
push
mov
sbb
mov
testb
pop
xchg
icebp
or
insb
out
sahf
sub
in
jle
push
mov
leave
xchg
in
dec
ret
jecxz
mov
xchg
or
outsl
lret
cltd
in
rorb
mov
push
stc
or
cli
cmp
sti
jnp
mov
into
lods
push
into
ret
pop
dec
cmp
pop
xor
insb
cmc
inc
push
movl
and
push
sub
sbb
jle
mov
pop
inc
xchg
popl
and
pop
push
lods
in
outsl
stos
xchg
add
push
xor
pop
mov
add
adc
shll
jo
mov
push
je
mov
inc
stc
jge
mov
in
mov
jns
fstpt
aas
sbb
pop
out
lock
dec
push
jno
push
sbb
ja
sub
filds
insb
jne
push
xor
ss
sbb
sti
icebp
repz
push
xor
xchg
sbb
dec
add
mov
sbb
shl
xchg
fistpll
dec
add
loopne
in
repz
popf
fucomi
push
jl
cld
xchg
nop
mov
das
fsubl
cmpsl
sahf
mov
xor
fimull
xchg
out
je
and
and
popf
inc
push
pop
test
pop
push
ja
adc
testl
push
cs
xlat
add
sbb
popa
lret
jle
loop
jae
add
cwtl
jnp
xchg
mov
pop
mov
mov
xor
test
mov
push
daa
inc
jo
xlat
outsb
test
or
daa
add
jl
stos
lock
and
outsl
shrl
in
pop
hlt
cmpsb
pop
mov
add
daa
fstpt
mov
add
js
fiaddl
std
adc
pop
in
hlt
add
fcompl
test
add
mov
enter
leave
ja
mov
scas
test
jp
and
push
dec
pop
lret
sarl
fnstcw
adc
and
xor
sbb
and
test
mov
xchg
add
rcl
add
daa
test
aaa
loope
cmp
insl
das
add
xchg
sub
xchg
inc
fdivrl
movsl
push
push
dec
gs
fbld
mov
inc
mov
push
or
mull
push
addr16
jmp
gs
mov
dec
fnsave
sbb
test
loope
sub
inc
fisubl
das
iret
mov
movsl
adc
mov
mov
fst
ja
and
je
shr
fwait
xor
add
repz
shll
inc
pop
aam
outsl
sbb
mov
mov
stc
std
out
add
test
mov
cld
adc
roll
inc
mov
add
negb
popf
pop
arpl
pop
pop
pushf
icebp
cmpsb
push
or
test
cld
mov
rorl
and
push
dec
mov
mov
pop
jbe
scas
and
inc
cmp
pushf
adc
ror
mov
popa
sub
aad
jmp
jo
sbb
sub
sbb
lods
sub
jle
pop
pop
ret
in
les
les
cmp
aaa
test
inc
pushf
scas
outsb
sub
adc
adc
push
pop
fsubr
in
mov
jl
imul
and
sbb
idivl
faddl
fsubrs
lret
jg
iret
adc
movsl
or
mov
scas
cmp
or
jnp
jo
dec
test
xchg
xchg
out
fldcw
add
inc
rcll
pop
idivb
nop
icebp
lds
lahf
adc
inc
xchg
jb
imul
rep
jne
and
xchg
in
adc
mov
sbb
push
leave
or
pop
inc
mov
lahf
in
pop
dec
fmull
sar
jge
xor
sbb
jb
je
mov
subb
cmpsb
sbb
sub
fxch
mov
cli
mov
mov
out
test
ja
adc
cmp
sbb
pop
dec
data16
jo
mov
inc
xor
dec
sub
xchg
fnstcw
mov
mov
sbb
int3
paddsb
int3
mov
sbb
push
and
mov
imul
cmpsl
cmp
jl
pushf
mov
adc
scas
aad
mov
js
sbb
jecxz
mov
xchg
inc
push
xchg
jg
andl
cmp
mov
es
fwait
push
fdivrl
and
add
mov
jno
in
cld
add
test
loop
mov
sbb
push
repnz
int3
push
fisttps
mov
mov
cmp
nop
xor
sub
clc
in
push
mov
packssdw
mov
jo
jno
movsb
jmp
pop
push
movsl
ss
ret
mov
mov
arpl
inc
nop
insl
inc
jge
adc
lret
cmpsb
xchg
inc
sub
je
lock
lods
stc
insb
push
xorb
or
mov
xchg
repnz
inc
push
sub
cld
std
mov
xchg
mov
push
cld
mov
leave
in
cli
shlb
sub
aaa
cmp
push
xchg
ds
adc
sbb
in
das
stos
pushf
fwait
or
rcr
jle
adc
ficomps
push
in
sbb
mov
lcall
rorl
in
ljmp
jb
mov
mov
lahf
inc
pop
sbb
jae
hlt
mov
aaa
pop
xchg
mov
xor
dec
and
sub
mov
mov
push
jbe
cmpsl
rcrl
xchg
cmc
mov
xchg
mov
aad
setle
pop
xchg
daa
cld
dec
push
push
test
xchg
and
cmp
dec
adc
aad
cwtl
xor
jle
push
dec
push
xchg
jge
inc
mov
dec
aas
xchg
push
in
adc
aad
adc
dec
fsts
jmp
cmp
pop
xchg
push
mov
mov
jg
or
arpl
pop
in
loope,pt
mov
inc
fnstenv
add
je
mov
cmc
orb
sbb
pop
and
or
lds
pop
mov
cmp
shrl
es
movsl
jnp
mov
div
in
loop
fcoms
ret
mov
xorl
cld
mov
pop
nop
bound
test
inc
xor
outsb
inc
sbb
push
or
lods
lea
mov
sub
jl
and
mov
test
sbb
cld
mov
inc
scas
mov
scas
push
stos
sbb
repnz
ret
mov
pusha
dec
cmp
jb
sbb
repz
mov
test
adc
hlt
cmpsl
out
pop
lods
adc
jl
xchg
mov
sub
jbe
or
sarb
fcmovne
adc
daa
push
test
jbe
push
mov
ret
cmp
imul
cld
and
pop
sbb
nop
xor
jae
stos
or
test
cmp
je
imul
dec
into
push
sub
inc
adc
xchg
testl
test
jl
lret
adc
cmp
mov
cmp
pop
ds
push
mov
mov
idiv
das
aad
lds
lret
adc
dec
or
rcrl
mov
dec
inc
fnstcw
push
call
mov
fldl
push
insb
in
and
push
popa
iret
andb
sub
gs
cld
or
inc
pop
out
mov
inc
cmp
insb
fwait
pop
xlat
gs
and
movsl
scas
rcll
cvtpi2ps
rcll
sarl
dec
neg
rclb
or
lea
dec
paddd
xchg
daa
bound
adc
adc
addr16
mov
fstl
cmp
aaa
adc
lods
jp
xchg
mov
scas
xchg
jnp
insl
adcl
cwtl
xchg
out
sub
sbb
shrl
ljmp
mov
push
out
sub
jl
cs
or
into
lds
mov
jge
jmp
shlb
hlt
mov
push
leave
pop
imul
add
int
push
mov
jp
mov
scas
adc
pop
pop
or
mov
loope
mov
mov
call
fisubl
mov
ljmp
rcr
cmpsb
sbb
mov
mov
xchg
scas
and
std
or
pushf
mov
sbb
leave
or
clc
je
mov
or
mov
in
repnz
loop
xchg
sti
add
rolb
jl
jb
dec
outsl
addr16
adc
sbb
push
clc
shrl
push
or
je
ljmp
decb
test
adc
in
idiv
adc
outsb
pop
arpl
inc
mov
jmp
pop
iret
arpl
or
movb
ss
test
dec
test
jp
and
add
push
movsl
jp
cmp
jns
shlb
sbb
xchg
cmc
loope
and
cli
lahf
jae
dec
adc
sub
fidivrs
xchg
inc
push
in
or
pop
jnp
iret
aas
xchg
adc
sbb
jle
ljmp
push
dec
adc
arpl
aaa
pop
flds
dec
movsl
and
and
xor
inc
int
xor
in
dec
xchg
movsl
jle
cmp
sarl
mov
push
sahf
mov
js
adc
iret
lret
jb
sbb
icebp
lods
and
shlb
sysexit
pop
shll
and
stos
push
ds
mov
mov
mov
movsb
shlb
and
aad
loop
mov
or
sub
cmp
and
jg
jmp
call
jbe
decb
or
jl
fmull
insb
jge
loop
inc
data16
in
mov
cli
mov
es
in
js
outsl
or
dec
stos
add
inc
dec
rcrb
dec
sub
ret
mov
dec
push
in
push
xchg
mov
jbe
push
push
fcomps
add
cmp
je
in
sbb
call
dec
dec
or
push
and
jge
mov
xor
fistl
pop
xor
gs
into
push
popf
stc
pop
or
loope
lock
sub
loope
adc
lea
mov
sbb
adc
mov
jno
out
stos
sub
adc
movsb
cld
into
xchg
xor
cltd
sbb
leave
mov
xor
dec
sbb
loop
xlat
lds
mov
aas
sub
les
or
mov
and
xor
cltd
cmp
dec
cmpsb
and
mov
sub
adc
lock
leave
mov
mov
pop
sbb
sti
loop
and
jbe
mov
cs
or
mov
mov
fldcw
dec
ror
test
or
jo
adc
push
jmp
lahf
flds
aad
call
rorl
testl
push
push
gs
insl
adc
push
pop
push
jg
rcrl
mov
inc
addr16
and
or
mov
xor
fwait
xchg
fdiv
mov
loop
xchg
out
insb
std
scas
cmp
rcll
sub
ret
pop
enter
imul
out
mov
push
hlt
jns
js
mov
fstps
mov
shr
lret
mov
rorl
cli
add
jae
pop
cltd
mov
xchg
cmp
mov
cmp
pop
das
mov
mov
icebp
jg
fs
mov
jg
add
or
cwtl
shr
push
aaa
cld
fadd
loope
cmp
test
mov
dec
fs
push
cmp
and
cmp
mov
pop
into
mov
aam
add
xor
cmp
sbb
ja
xchg
sbb
mov
xchg
lret
sbb
out
inc
cltd
mov
loopne
imul
cli
or
pop
ss
mov
fldenv
jmp
clc
xorb
scas
pop
and
lods
xchg
ror
inc
les
iret
ror
dec
dec
pop
and
push
add
inc
push
jo
fdivrs
pop
add
rorl
inc
add
jo
push
mov
pop
dec
enter
inc
xor
sbb
in
inc
sahf
jno
dec
mov
nop
sbb
xchg
cmp
inc
push
imul
scas
push
js
mov
jne
sub
call
dec
dec
adc
sub
in
add
addl
or
cmp
pop
mov
cli
ret
rorb
ficoms
fnstenv
pop
js
dec
loopne
shl
inc
dec
adc
movsl
jmp
sbb
mov
out
fidivrl
or
add
adc
cmpsb
fmuls
cli
xchg
in
cmpsl
jg
xlat
pop
mov
cld
jae
xor
stos
mov
cmp
out
xchg
mov
add
in
leave
push
xor
mov
cmp
daa
popa
testb
jno
clc
xor
cli
ror
aaa
mov
add
jmp
int
jge
popf
push
mov
dec
adc
push
into
in
push
mov
adc
sbb
sbb
sbb
ret
jno
insb
lret
mov
shll
mov
inc
xchg
std
cmc
fisubl
mov
add
xor
sub
jle
jb
pop
mov
js
das
xor
ja
in
mov
cs
or
lret
and
xchg
fimull
pop
jae
mov
sbb
inc
notb
cld
ficompl
repz
fucomi
imul
in
push
or
out
das
inc
jae
lahf
pop
int3
shll
mov
lea
out
pop
stc
out
cli
sti
jmp
aas
add
clc
lods
gs
lods
add
xchg
inc
xchg
icebp
data16
mov
or
loop
insl
lahf
hlt
andb
icebp
repnz
push
push
cmpsl
cltd
jmp
mov
pop
aas
packssdw
add
int3
xchg
and
aaa
negl
add
sub
imul
pop
enter
xchg
outsl
adc
xor
out
xorl
xor
leave
sahf
fsubrs
xor
or
xlat
hlt
inc
xchg
push
int3
adc
cmpsb
mov
outsl
push
jns
add
push
sti
sti
jmp
pop
scas
ret
call
adc
push
pop
test
push
rclb
mov
sub
popf
sbb
xchg
mov
xor
aam
dec
dec
sahf
push
add
or
daa
lcall
leave
ret
xor
sbb
test
test
inc
sub
repnz
sub
test
fwait
inc
inc
loop
jb
loop
leave
push
sub
push
sub
or
dec
sar
xor
mov
inc
cmpsl
scas
inc
mov
mov
pop
scas
xlat
and
push
jbe
cmpsb
mov
xor
adc
mov
cwtl
mov
xor
fmull
shll
jb
jbe
mov
pushf
inc
pushw
mov
in
out
lea
dec
mov
or
push
xor
mov
fildl
add
push
jp
jecxz
ret
push
xchg
push
fdivr
sub
lds
push
dec
clc
add
cld
insb
divl
add
sub
and
nop
test
jae
push
inc
sti
add
xchg
inc
insb
jmp
cmpsb
jno
adc
mov
or
add
repz
lods
xlat
pop
mov
dec
sub
lock
enter
es
notb
bound
inc
cmc
jge
out
leave
mov
jge
lods
sbb
fcomps
xchg
scas
adcl
stos
imulb
xchg
jnp
inc
jo
cmpsb
jae
es
subl
int3
xchg
cltd
push
push
adc
lea
aad
mov
jb
test
xchg
stos
mov
ret
test
mov
popf
cmp
hlt
sbb
or
insl
gs
push
stos
xchg
xchg
repz
pop
push
adc
jg
sarl
ficomps
xor
fs
repnz
add
xor
mov
cs
dec
xchg
xchg
add
pushf
fcoml
inc
pop
add
mov
mov
jo
inc
dec
fildl
xchg
imul
sub
fsubrl
outsb
push
jmp
popf
cmp
and
shlb
fistps
movsl
lcall
mov
arpl
cmp
iret
mov
hlt
mov
mov
inc
adc
adc
ret
ret
push
je
ror
lcall
aad
jno
cmp
sbb
push
shr
dec
shlb
fsubs
cmp
in
cmp
je
shrb
and
shlb
fistpll
add
sbb
dec
mov
sub
call
push
je
inc
add
fcomps
mov
scas
nop
ret
cmp
add
mov
mov
cmp
cmp
sub
imul
sbb
insl
cltd
sbb
pop
rol
data16
mov
cmp
xlat
cmp
jl
loopne
cmp
out
inc
pop
in
stos
daa
insl
pop
int
cmp
jmp
dec
icebp
xchg
outsb
mov
arpl
fcompl
test
arpl
and
dec
data16
aam
repnz
mov
sbb
jns
dec
or
add
jb
pop
cltd
push
pop
sbb
sti
imul
adc
stos
dec
xchg
std
scas
push
test
in
shl
int3
test
push
sub
fnsave
pop
popa
jge
insb
and
dec
pop
stos
mov
jp
mov
repz
in
lock
mov
xchg
ret
jno
fwait
lret
xor
movsl
lods
mov
rolb
jbe
clc
clc
cwtl
movl
jge
cmovs
or
enter
out
dec
add
add
cmc
jecxz
cmpb
nop
sbb
jnp
je
cmp
in
inc
ss
add
pop
pop
push
imul
fs
push
mov
xchg
adc
fs
jo
jo
add
push
add
adc
lds
lret
rcrb
or
mov
mov
sbb
dec
adc
pop
cmp
and
jle
xorb
icebp
jle
ret
test
and
stos
jl
fs
inc
xchg
xchg
lcall
loopne
outsl
clc
and
test
jl
push
mov
arpl
jne
das
cmp
jne
pop
shlb
lock
es
pop
xchg
mov
rorb
jmp
cmp
and
fcoms
or
jnp
in
add
inc
repz
mov
repnz
sahf
push
mov
mov
cmp
push
push
ret
sbb
mov
ss
jle
movsl
fidivs
rorb
icebp
call
out
or
adc
cltd
mov
add
mov
rclb
sbb
adc
test
std
add
push
cld
pop
jl
cmpsb
test
rolb
movsb
xchg
call
dec
or
dec
add
inc
xchg
xchg
gs
repnz
and
adc
xchg
rcrb
lret
or
push
mov
xor
push
mov
rcrl
mov
ret
lret
push
rclb
pop
xor
mov
xlat
push
or
cmp
cld
push
imul
xor
cmp
popf
das
mov
pop
mov
cs
lahf
mov
push
cmp
mov
xor
mov
dec
pop
imul
sub
and
and
insl
mov
mov
imul
mov
jae
insl
mov
xchg
testb
pop
cmp
pop
fidivl
outsb
out
jecxz
out
mull
mov
sub
mov
ljmp
and
mov
pusha
cli
jno
aad
jmp
mov
mov
test
sub
pop
jl
in
mov
mov
lcall
or
ret
mov
ss
pop
int3
add
int
fs
mov
pop
shll
loope
inc
push
rcr
pop
in
xchg
dec
in
insl
test
adc
into
in
in
push
mov
outsb
ss
outsl
jge
fisubs
std
loope
sub
inc
jle
das
jnp
lods
and
or
jl
int
xrelease
repnz
rcrl
mov
ret
dec
ljmp
mov
fimull
pop
dec
jp
pop
out
sub
and
adc
outsl
mov
or
jmp
clc
jp
dec
or
push
fmuls
lea
nop
mov
add
aam
xchg
cmp
out
js
ds
into
dec
inc
sbb
addb
xor
mov
sbb
push
out
fwait
jnp
jb
add
push
imulb
cmc
mov
lret
imul
insl
fdivs
out
ljmp
sub
jo
push
lock
mov
jbe
lret
cwtl
cmp
cmc
leave
add
mov
mov
ss
int3
repz
test
loop
push
push
pop
mov
sub
add
pushl
xchg
or
test
pop
gs
lcall
pop
out
sbb
dec
inc
ret
xchg
mov
js
xchg
sbb
fsubrl
push
dec
mov
cs
dec
cmp
fistpl
mov
jecxz
arpl
repz
sub
mov
loope
dec
inc
movsl
out
add
fwait
dec
dec
test
sbbb
or
adc
xchg
fimuls
subb
lds
mov
imul
ss
add
ja
xchg
ficoms
sti
outsl
mov
fcoml
scas
stc
data16
clc
scas
mov
push
sbb
cmpsl
arpl
mov
mov
in
or
insl
arpl
inc
jmp
sub
pushf
add
loop
out
ret
in
cltd
jl
in
add
test
fcoml
pop
add
xchg
pop
sub
cld
and
cmp
xchg
jg
push
dec
movsl
lahf
lock
sub
jge
mov
cmp
pop
jb
mov
test
cmpsl
pop
mov
add
jo
adc
addb
jecxz
lea
addb
push
sbb
jle
pop
xor
push
ds
inc
and
pusha
add
xor
std
sti
xchg
xor
fisubrs
int
mov
imul
adc
pop
out
sub
or
and
jecxz
gs
sbb
mov
push
arpl
adc
jp
pop
pop
arpl
dec
xchg
push
dec
jl
movsl
and
cmp
pop
cmp
sbb
inc
sub
cmp
shrl
sbb
add
ret
cmp
mov
lret
mov
sub
mov
or
rclb
pop
add
sti
js
into
jecxz
popf
clc
mov
pop
ret
ret
es
in
lea
inc
mov
or
jbe
test
mov
add
popa
mov
sub
cmp
sbb
adc
push
arpl
lahf
dec
push
fdivrs
mov
mov
jne
mov
clc
fdivr
xchg
clc
push
imul
adc
shrb
jnp
les
inc
sar
bnd
jno
xchg
outsl
out
sub
sbb
data16
sbb
or
cmp
sbb
adc
dec
adc
hlt
mov
or
sbb
push
cmc
std
outsl
mov
mov
aad
mov
les
lret
mov
lock
pop
jnp
add
and
xor
sbb
xchg
cmc
pop
sti
jbe
and
jge
cmp
shrb
bound
mov
call
add
stos
imul
faddp
cmp
in
ss
repnz
int
cmc
loopne
out
jmp
and
adc
loopne
cmp
dec
lahf
cltd
sub
inc
cli
in
mov
jg
scas
es
rcl
test
and
shlb
or
mov
aad
jo
mov
cmp
shlb
imul
les
lock
pushf
dec
pop
es
int3
repnz
mov
mov
bound
dec
jge
das
push
cmp
test
js
mov
ljmp
fbld
add
xchg
push
jno
jbe
mov
push
add
pop
sub
xchg
movsl
int3
insb
xor
in
js
adc
data16
xchg
repnz
sub
sbb
add
scas
lcall
sbb
fdivr
push
inc
movsl
and
dec
xor
cld
sbb
frstor
fnstenv
sbb
imul
add
aad
out
cmp
ds
push
rclb
icebp
jo
sbb
sete
lea
xchg
in
xchg
and
les
insl
pushf
leave
push
filds
pop
out
dec
fisubl
popf
jbe
push
fnstcw
xchg
push
ds
push
fwait
ja
sub
cmp
les
cmp
pop
and
popl
jbe
and
test
sub
negb
jo
ret
icebp
and
pop
cmpl
add
mov
dec
or
sub
jmp
jge
stos
scas
cmp
cld
lahf
add
and
stos
sbb
stc
inc
repnz
lods
sbb
popa
pop
xchg
aas
loopne
arpl
inc
or
insl
sub
int
mov
mov
push
and
or
aaa
idivl
in
aas
rorl
aas
nop
jge
adc
jmp
adc
in
movsl
mov
mov
cmp
imull
call
push
lret
jnp
cmp
or
addr16
jb
fistpll
pusha
aad
repnz
push
mov
push
xchg
rclb
adc
pop
and
lret
pushf
adc
jb
mov
int3
jns
repz
or
jle
out
mov
push
dec
dec
hlt
mov
pop
and
inc
mov
sbb
mov
xor
jp
mov
pop
dec
int
push
fnsave
sbb
out
xlat
jbe
dec
in
sbb
cltd
pop
or
or
les
mov
stos
or
sbb
aam
or
ss
roll
jp
mov
in
pop
push
pop
dec
cmp
jae
add
xchg
jmp
pop
push
arpl
pushf
adcb
fmulp
or
gs
dec
xchg
lock
add
and
lods
mov
xchg
test
fadds
enter
imul
add
push
or
mov
dec
test
jo
cmp
int
mov
insl
push
sub
push
shlb
in
in
fisubl
imul
fwait
jne
xor
mov
xchg
xchg
xlat
filds
ljmp
cltd
test
inc
add
mov
in
out
lea
shll
andb
mov
mov
imul
mov
cmpsb
inc
loope
scas
loop
and
dec
cmp
xor
or
sub
adc
in
jae
and
or
sarb
scas
into
push
mov
cwtl
aaa
inc
push
sbb
aad
cmp
cwtl
lods
shll
dec
mov
sbb
shrb
pop
and
ss
push
mov
or
mov
pop
ja
add
fs
insb
pop
jl
and
xchg
xchg
add
loopne
fildl
and
fmul
andl
mov
mulw
je
mov
lods
add
push
xchg
jmp
outsl
data16
ret
icebp
or
cs
xor
push
fists
cmpsl
push
adc
adcb
shrl
push
cmc
lea
mov
cs
rclb
cmc
into
lods
ret
mov
adc
add
sar
sbb
popa
test
mov
push
pop
pop
daa
insl
xchg
sbb
ficoml
adc
sub
negl
in
out
repz
jecxz
lock
mov
pop
inc
mov
pop
xor
sar
add
or
rol
out
push
stos
mov
or
cmpsl
xor
idivb
call
in
xchg
xchg
outsb
pop
mov
ds
add
dec
xor
sub
pop
pop
cmpsb
imulb
sbb
fildl
inc
fs
xorb
dec
and
fnstcw
mov
adc
xor
scas
jl
pop
jmp
pop
jp
movsb
aam
xchg
sti
xor
std
push
out
hlt
mov
jg
mov
xor
xchg
mov
and
iret
mov
fcmovbe
inc
or
push
xchg
push
or
jge
add
sbb
in
jg
mov
push
ret
inc
or
sbb
or
testb
idivb
adc
test
mov
pop
pushl
jmp
insb
inc
cmp
dec
inc
out
xchg
ficompl
daa
pusha
cmp
lahf
in
adc
sub
cmp
test
scas
add
pop
push
scas
hlt
add
pop
jecxz
pop
fwait
adc
adc
lock
fiaddl
clc
xor
out
scas
sbb
mov
sti
mov
push
imul
decb
imul
push
into
cltd
sub
fs
mov
pop
dec
sahf
pop
and
repz
adc
insb
aam
push
inc
sub
xchg
fwait
push
jne
jae
jmp
roll
dec
pop
inc
imul
cmp
adc
lahf
fs
insl
ret
fcmovnu
je
xchg
lds
jo
pop
ret
ret
fld1
push
shr
cltd
js
inc
xorl
adc
pop
cmpsb
mov
dec
xchg
cmp
loopne
cmpsl
pop
int3
mov
mov
sarl
lea
imul
jbe
xchg
and
mov
cmp
and
xchg
jge
or
ret
inc
aad
dec
sti
or
scas
cli
vmovapd
jle
or
dec
lahf
xor
mov
push
mov
into
in
or
and
pop
pusha
icebp
cwtl
test
arpl
mov
cld
push
push
jle
jo
xor
cmpsl
shl
loop
xchg
pop
or
sub
shll
mov
mov
fs
cmp
mov
and
xor
lea
rclb
xlat
xor
shll
jbe
and
mov
sbb
cmc
sar
and
xor
inc
pop
cmc
adc
fdivl
mov
mov
sub
int
int3
test
scas
fs
xchg
jmp
dec
sub
cmp
dec
aas
xchg
jmp
push
sbb
lahf
mov
dec
pop
mov
adc
mov
lods
mov
lret
push
xchg
psubsw
adc
sti
or
pop
into
mov
ss
mov
idivl
xor
pcmpeqw
nop
sbb
pop
call
adc
ret
in
mov
ds
cmpsl
mov
nop
js
les
cld
push
ljmp
icebp
mov
jp
adc
cmpsb
lds
xchg
cwtl
cmpsb
xchg
or
add
jbe
mov
pop
lahf
xchg
clc
dec
dec
lahf
cmp
and
push
aam
sub
sbb
lret
mov
fsubrs
dec
and
fildl
inc
aas
andl
xor
push
enter
dec
or
call
xchg
fmull
ds
cmp
mov
imull
gs
imul
mov
and
push
jp
adc
mov
mov
in
sbb
mov
xor
cmpsb
add
adc
leave
int
ret
push
into
ds
out
imul
shll
mov
sub
es
cld
bound
lahf
xchg
dec
sub
movsb
fcompl
dec
xchg
pop
ret
mov
fadd
inc
mov
pop
xor
cwtl
push
dec
adc
inc
mov
sub
in
xchg
cld
inc
repnz
jmp
in
dec
pop
dec
mov
xchg
add
pop
xchg
inc
and
out
je
jae
arpl
dec
in
lret
leave
mov
cli
dec
pop
mov
mov
pop
bnd
rcl
cwtl
and
cmc
or
js
cs
or
mov
mov
or
pop
fldl
les
arpl
mov
xor
lea
ja
movsb
jne
jae
push
dec
inc
fucomi
mov
mov
mov
adc
ss
fdivs
pop
sti
cli
scas
arpl
mov
fs
imulb
adc
les
mov
mov
mov
and
push
js
aaa
test
dec
cmpsl
sub
dec
fisubl
jge
sbbb
sbb
ja
mov
lds
cmpsb
pop
icebp
inc
lret
xchg
sub
addl
hlt
call
fidivrs
fs
jecxz
pop
mov
sbb
fisubrl
push
lock
stc
movswl
test
mov
data16
in
lods
pop
cmp
jge
cld
shlb
outsb
xchg
in
and
inc
add
ja
xor
mov
idivb
xchg
xor
fxtract
and
loop
push
jp
aas
test
pushf
mov
aam
mov
movsl
pop
je
sub
rorb
pop
jmp
push
xor
add
sub
xchg
inc
or
push
xchg
mov
cli
icebp
cwtl
sub
movsb
ret
cwtl
loopne
sahf
adc
jmp
mov
repz
aad
pop
pop
pop
adc
mov
xchg
ljmp
sub
jg
cltd
pop
outsl
sub
outsb
rcrl
mov
mov
imul
addr16
adc
jp
cmc
mov
fmul
adc
ja
xchg
cmp
cmp
js
clc
xchg
xchg
jmp
outsb
or
mov
ljmp
ret
ja
adc
test
scas
xchg
clc
cmp
push
sbb
pop
sahf
lcall
jbe
xchg
fwait
jecxz
pop
xchg
xchg
out
popa
and
stos
movsl
mov
or
pop
inc
rorl
hlt
mov
cmp
ja
icebp
push
lds
adcl
xor
xchg
xchg
or
nop
fsubl
ret
lret
scas
ljmp
mov
inc
aad
fadds
or
cmp
push
pop
faddl
mov
cli
movsl
adc
int
insb
cmc
or
push
scas
add
pop
sbb
inc
fs
movsb
ds
push
inc
lods
imul
pop
arpl
pop
sbb
inc
ljmp
fcomps
mov
pop
iret
lods
cwtl
xchg
pop
movsb
cmc
lahf
mov
cld
ja
inc
add
sbb
push
loop
sbb
xor
add
jae
mov
cmp
cmp
aad
push
xlat
xor
and
cmp
test
sbb
orb
jnp
xchg
pop
push
lock
push
xchg
pop
mov
mov
stos
inc
and
pop
and
hlt
lcall
xchg
test
and
xor
int3
jmp
cmpsl
push
das
in
pushl
cmp
cmpsb
loopne
fiadds
stos
mov
push
adc
adc
ja
ret
mov
repnz
jbe
sarb
push
add
and
jb
mov
dec
adc
sub
mov
xchg
push
mov
add
adcb
sbb
cmp
mov
mov
call
push
fwait
xchg
cmp
repz
sbbb
je
add
ret
cld
cmpsl
movsb
outsb
cmp
xlat
add
ljmp
dec
dec
push
cmp
lcall
dec
mov
roll
mov
dec
mov
inc
addl
out
mov
data16
adc
orb
push
and
pop
push
xlat
dec
cltd
xor
dec
xor
roll
add
push
addr16
mov
loope
movsb
push
mov
xor
enter
nop
test
jg
or
outsb
ds
stos
push
or
adc
loopne
add
push
or
or
cmpsl
rcr
repz
pop
xchg
mov
fnstsw
add
push
push
add
cmp
sub
pop
in
xchg
pop
mov
mov
imull
stos
lods
cmp
dec
outsl
pop
jnp
dec
sbb
mov
and
cmpsb
add
call
jmp
in
stos
fs
lock
pop
scas
mov
cltd
idivl
ret
hlt
xchg
push
lret
cmp
ds
push
repz
push
out
test
insb
fisubrs
push
pop
inc
push
out
in
repz
ret
inc
cmp
dec
movsl
xchg
ror
jb
aam
push
lcall
xchg
repnz
pop
jne
pop
data16
xor
fadds
call
sarb
push
mov
dec
mov
cwtl
lods
lahf
mov
mov
fisubrl
hlt
mov
loope
sbb
mov
int
mov
and
lret
scas
inc
mov
mov
aam
lret
sbb
fildl
dec
std
jg
inc
lret
push
lds
and
mov
mov
maxps
jnp
cmp
dec
addr16
fldenv
idivl
push
adc
jp
pop
out
insl
and
cltd
pop
scas
jmp
out
scas
xor
ret
cmpsb
stos
fwait
cmpsb
filds
cmpsb
cmp
cltd
out
pop
jge
ret
or
popa
js
fucomi
cmp
xor
repz
lret
enter
dec
jne
pop
test
leave
fldcw
jb
mov
cs
fstl
lahf
mov
jbe
in
xorl
or
push
arpl
jle
movsb
fistl
and
add
add
out
cmc
outsl
ja
sarb
hlt
jno
js
in
xchg
scas
dec
jne
jbe
or
imul
hlt
sub
rcrl
loopne
mov
rclb
aam
dec
call
andl
push
xor
and
imul
enter
mov
imul
sahf
aaa
push
xchg
xchg
pop
mov
jbe
mov
dec
dec
inc
mov
inc
insb
pop
push
jns
cld
jae
dec
jge
lahf
clc
aaa
mov
adc
jecxz
shr
sbbb
xor
out
movsl
mov
nop
push
xor
lret
jae
fwait
pop
outsb
xchg
fldl
shlb
es
xchg
pop
mov
pop
inc
cmpsl
daa
adc
add
pushf
dec
insl
cs
pop
stos
sbb
dec
iret
pop
inc
cmpsb
mov
pushf
enter
arpl
adc
leave
popf
dec
inc
jecxz
ret
fildll
ljmp
ljmp
mov
inc
xchg
mov
sahf
ds
push
in
movsl
sub
sbb
movsb
insl
lock
test
outsl
call
jno
mov
inc
aad
mov
movsl
in
sbb
movsb
fcomps
mov
add
jg
push
sub
fnstcw
xchg
ds
in
inc
icebp
lods
fidivrl
xchg
xchg
out
and
mov
push
rorb
lahf
push
or
mov
sbb
jo
jne
aaa
inc
in
cmp
sbb
sbb
mov
jl
mov
sub
push
jg
push
decl
lret
ds
ret
and
cmc
pop
cmpsl
movsb
enter
lahf
hlt
cmp
leave
xchg
out
push
push
jo,pt
xor
or
insb
daa
int
test
xor
jne
push
dec
ss
popa
addr16
mov
insb
int
loop
lods
xor
jmp
push
dec
sub
mov
mov
pop
dec
xor
push
neg
subl
ss
and
mov
xchg
mov
inc
popa
inc
or
fsubs
dec
in
loope
lret
ja
pusha
inc
sbb
jecxz
cmp
repz
loope
mov
fs
mov
sbbl
mov
adc
test
jge
int3
lds
sbb
add
in
push
insl
mov
stos
pop
iret
adc
cs
in
push
cltd
sbb
push
in
adc
mov
lcall
mov
xor
jp
mov
mov
insb
jl
sbb
push
in
mov
or
add
mov
sub
mov
lret
xorb
fwait
push
iret
sbb
push
sbb
add
and
lods
sub
cmp
and
out
clc
xchg
xchg
loopne
popa
dec
test
lock
lods
mov
es
and
stos
xor
jo
add
cmpsb
nop
mov
push
mov
test
push
xor
ja
rolb
add
jno
pushf
popa
push
adcb
imul
mov
sub
js
push
pusha
jg
call
xor
ss
scas
jbe
pop
push
mov
das
cmpsl
add
adc
cmp
lods
xchg
push
in
jecxz
cmp
nop
jg
cmp
xor
test
push
pop
push
pop
sahf
jns
scas
lods
notb
jbe
enter
aad
cmp
push
cmc
sbb
orb
pop
fisubs
and
mov
lods
mov
mov
into
lcall
popf
sub
cmc
out
cli
lahf
or
fbld
adc
lahf
daa
into
pop
or
lds
pop
add
sub
mov
sti
test
sub
xchg
je
popf
std
cld
imul
mov
movsl
push
xor
scas
inc
inc
sub
sbb
clc
cmp
mov
sbb
mov
test
pop
mov
xchg
and
outsb
xchg
add
pop
lcall
pmuludq
mov
lret
mov
adc
dec
sti
xchg
les
fidivrl
loopne
cli
add
aas
jnp
xchg
cmp
jmp
cmp
add
mov
cmp
adc
cmpsl
ss
fwait
iret
and
into
aam
pop
ret
push
push
aam
shll
sub
jmp
cmp
popf
push
mov
pusha
movsl
xor
fisttpll
fistl
cmpsl
clc
enter
pop
out
ljmp
outsb
movsb
push
xchg
aam
mov
xor
dec
jmp
imul
pop
std
adc
repz
test
insl
xor
ret
out
arpl
xchg
lock
mov
dec
stos
ss
scas
push
xchg
pop
jbe
arpl
mov
lcall
stc
cmpsb
push
popl
push
std
outsl
cmp
test
dec
xchg
mov
xor
fidivs
fcompl
ficoml
xor
mov
popf
xor
or
sbbl
mov
jo
cltd
scas
pop
mov
xchg
lcall
sbb
xor
xchg
out
mov
pop
push
add
mov
mov
out
add
inc
add
mov
lods
jns
arpl
inc
mov
int3
mov
neg
jb
inc
xchg
or
das
andl
addb
inc
leave
ret
dec
mov
and
push
sub
fprem
push
push
ljmp
popa
hlt
imul
insl
movsb
movsl
xchg
idivl
xchg
test
inc
cwtl
rorl
mov
mov
pop
mov
cmp
enter
mov
pop
fdivrl
lds
sub
cmp
movsl
loop
mov
mov
jae
adc
mov
jg
mov
out
cmp
mov
cmpsl
xor
das
cmp
xchg
frstor
sub
loope
call
outsb
test
std
pop
jl
xor
sub
xchg
cld
mov
arpl
push
pop
dec
ficompl
js
or
fsubs
mov
sti
lods
xchg
add
call
pushf
sbb
xchg
push
push
fbld
pop
or
mov
xlat
push
ret
push
sub
mov
pop
pop
pop
inc
add
inc
rorl
inc
xor
mov
sub
fs
loopne
mov
pusha
imul
scas
pop
or
test
sub
inc
in
jae
fimull
add
cmpsl
adc
adc
and
jo
and
cmpsl
mov
pop
add
mov
mov
dec
mov
pop
jl
je
mov
insl
jp
shr
mov
scas
fistpll
xor
movsl
into
push
insl
and
shrl
xchg
adc
aas
jp
add
inc
pop
aaa
fwait
pusha
add
adc
xchg
dec
je
mov
cmp
and
cwtl
mov
subb
pop
in
mov
adc
fistl
push
or
sub
xchg
fisttpl
lds
sbbl
enter
push
cltd
inc
pop
sbb
fs
imul
mov
xchg
add
adc
add
shrd
push
lock
adc
fisttpl
stc
iret
cs
sti
ds
xchg
loopne
hlt
cltd
add
dec
dec
pushf
mov
add
aad
js
fisttpll
in
faddl
xchg
push
loop
lock
andl
push
int3
out
leave
jecxz
cmp
sahf
xor
popa
xor
fisubrs
xchg
call
pop
movsl
and
decb
xchg
subl
hlt
inc
outsb
add
mov
dec
mov
je
cmp
outsb
push
adc
push
inc
out
dec
jl
mov
xor
nop
jl
dec
jns
or
sbb
shll
push
dec
cmp
das
xor
pushl
sbb
or
push
fs
in
cmp
js
hlt
and
scas
push
sti
xchg
lods
fldenv
dec
mov
add
jg
in
cmc
fists
jne
mov
xchg
push
adc
cmovp
stos
daa
repz
das
pop
cmp
dec
out
outsb
push
or
popa
dec
pop
popf
mov
add
and
ret
lret
ret
iret
enter
inc
push
out
push
sub
jecxz
mov
daa
sbb
psubusw
cmc
arpl
into
jle
pop
add
pop
sbb
cmc
jmp
in
enter
adc
mov
cmp
mov
fstp
xlat
leave
mov
hlt
fdivrp
or
rclb
stos
dec
pusha
rol
or
jno
cmpsb
jecxz
daa
lods
enter
scas
and
push
orb
hlt
xchg
pop
pop
cld
push
and
xchg
push
in
inc
adc
pop
in
int3
test
fcmovu
out
cld
pop
mov
lahf
jmp
dec
faddl
aad
mov
popa
sahf
mov
cmp
lds
sub
leave
js
add
or
mov
sub
cmpsb
inc
out
push
cmp
movsl
iret
es
xchg
ds
cmp
adc
add
cld
js
sbb
cli
lret
cmpb
js
adc
push
push
push
inc
mov
push
mov
sbbb
loopne
in
loopne
mov
fiaddl
push
dec
mov
ds
loope
daa
lret
sbb
divl
xor
sub
cmp
mov
adc
mov
faddp
sbb
push
pop
cmc
add
mov
rcrb
xor
or
movsl
out
push
pop
adc
adc
les
inc
sbb
movq
insl
jns
fisttpl
sbb
movsl
mov
loop
stos
movsb
jno
add
insl
lcall
jge
mov
sbb
cwtl
fists
xor
inc
pop
test
xor
and
outsl
push
xlat
or
cmp
aas
call
pop
inc
test
fisttpll
sbb
lret
pop
pop
loope
jp
xchg
cmp
and
add
test
les
imulb
mov
lea
mov
jae
dec
add
jo
inc
sbb
or
in
jmp
sahf
dec
add
movsl
int
sbb
std
pop
push
jmp
pop
sbb
or
cmp
jp
ja
fldt
outsl
mov
add
pushf
pushf
mov
test
in
stc
pop
push
mov
xchg
ljmp
js
test
mov
sub
push
call
daa
sbb
cmpxchg
mov
mov
jb
imul
popf
mov
pop
xor
loop
test
xor
iret
rcrl
or
sbb
enter
and
fnstcw
xchg
hlt
lret
mov
pusha
sbb
add
icebp
out
dec
in
xchg
fbstp
call
aaa
scas
jae
arpl
push
sti
ds
sub
into
pop
push
and
push
into
popa
repnz
mov
pop
in
or
pop
notb
int
cmovns
stc
or
insl
dec
mov
test
mov
mov
dec
pop
stc
inc
iret
adc
lods
jge
ret
aas
andb
adc
iret
jae
mov
push
jg
dec
mov
xchg
insl
jp
sahf
push
mov
cli
orl
lret
pusha
mov
jl
sbb
scas
shlb
pop
xor
sbb
mov
pop
cmp
xlat
test
sub
jo
mov
cli
outsl
inc
dec
jae
dec
mov
ret
push
repnz
push
push
lahf
push
mov
fldt
into
dec
xor
push
sbb
lahf
std
add
push
addr16
mov
dec
pop
inc
aaa
inc
test
enter
cmp
movsb
adc
adc
pushf
xor
dec
dec
jecxz
push
xchg
pop
ret
xchg
cmp
leave
pop
aaa
icebp
push
sub
into
pop
mov
jae
and
push
dec
xchg
add
adcl
jbe
pop
adcl
repnz
lds
inc
sbb
inc
fnstsw
and
sahf
cmp
cmpsb
xchg
fisttpll
sahf
shlb
push
je
xchg
dec
cltd
fdivl
scas
std
sub
pop
and
jns
sti
push
imul
add
bound
or
inc
jp
mov
movsb
std
adc
xchg
xor
jle
insb
insb
mov
out
mov
fsub
push
out
sub
in
adc
imul
dec
data16
cmc
jo
dec
movsl
lahf
shll
jns
dec
stos
sub
sub
sahf
andb
popf
jp
dec
loope
sbb
inc
xor
mov
lods
and
das
iret
cli
mov
leave
mov
sahf
cmpsl
icebp
sbb
sbb
adc
adc
cmp
sbb
xchg
into
int
xchg
scas
jge,pn
jge
push
icebp
not
cmp
test
or
shlb
lock
jmp
ja
xchg
inc
xchg
adcl
pop
aaa
rolb
leave
rcl
mov
adc
aad
in
cmp
sub
fwait
pop
decl
cmp
or
pop
push
loopne
pop
mov
adc
add
and
stc
lods
cmp
je
dec
lret
int
mov
cmp
cli
push
repnz
mov
imulb
push
loopne
adc
xor
roll
sbb
lods
pop
push
and
fcompl
test
pusha
push
xchg
jge
scas
mov
lods
mov
push
adc
iret
jne
mov
cwtl
adc
sti
mov
enter
imulb
pushf
mov
and
xchg
mov
jae
jnp
mov
and
xchg
cmp
sub
lea
call
or
dec
mov
sti
cld
in
imul
in
incl
adc
lock
jmp
fimull
inc
cmc
sub
insb
add
ffree
loop
mov
fucomi
mov
rorl
jmp
xchg
test
mov
les
cmp
cmpsl
std
ffreep
mov
adc
je
pop
jnp
lods
psrad
pminsw
in
inc
nop
jecxz
mov
or
mov
imul
test
xchg
stc
push
lods
es
mov
and
add
dec
push
inc
mov
aad
mov
mov
dec
mov
out
pusha
push
ret
fstpt
je
fucomip
pop
js
dec
pop
pop
rorb
and
das
aam
popf
jnp
dec
mov
jns
pop
jmp
shrb
sbb
fcompl
mov
mov
xlat
movsl
divl
xchg
mov
add
repnz
xor
jmp
les
mov
fsubrl
add
pop
xchg
pop
xor
lds
mov
cmp
in
insl
cmp
lods
mov
xchg
test
repz
add
pop
mov
adc
aaa
movsl
pusha
mov
call
icebp
les
push
xchg
rcrb
fadds
xchg
mov
mov
mov
cmp
add
movsl
test
and
test
cwtl
cli
fnstsw
int
jb
test
daa
and
cmp
mov
es
jmp
fmull
xor
push
daa
push
push
inc
push
xchg
mov
and
mov
fnsave
xchg
jns
mov
test
xor
cmp
adc
pop
mov
push
mov
dec
imul
inc
ja
xchg
jp
jmp
sar
repz
push
add
mov
jg
aad
fldenv
testb
cli
test
mov
ret
mov
cli
cmpsl
inc
fsubs
push
ficomps
hlt
pusha
ret
or
xchg
push
mov
cltd
pop
sbb
clc
imul
shlb
in
mov
inc
push
aam
cltd
inc
jnp
repz
mov
adc
pushf
mov
xchg
jmp
xlat
ljmp
fwait
popa
jmp
xchg
test
scas
std
and
sbb
das
out
cld
pop
inc
aas
xor
shll
pusha
test
jge
ja
sti
rcll
lods
ss
sar
sarl
mov
ficoms
into
cmp
push
jp
imul
pop
mov
pop
sub
cmc
sub
icebp
xor
adc
xchg
mov
ret
mov
inc
insl
int
lods
lret
xchg
into
mov
lods
mul
rolb
test
loopne
out
sbb
pop
sbb
add
ret
movsl
mov
mov
orl
arpl
sahf
mov
mov
pop
lods
mov
add
std
fdivl
mov
sarb
dec
fwait
adc
sar
sbb
popf
nop
mov
pop
imul
je
or
fucomip
inc
les
sbb
loopne
pop
push
add
cmp
mov
fbstp
mov
mov
je
jge
jg
sub
out
std
adc
fisubs
sbb
aad
ds
jle
movsb
inc
das
push
ja
out
xor
push
mov
movsb
jne
addr16
lock
jo
lret
mov
or
push
sahf
jecxz
orb
adc
andl
insl
movsl
subl
or
nop
int
enter
push
jmp
popfw
lret
xor
pop
pushf
out
lock
jmp
add
dec
sti
add
xchg
mov
push
loope
outsl
mov
inc
into
std
mov
and
in
out
push
xchg
insb
cmp
xor
cmpsl
or
int
lock
shrb
mov
sub
cmp
or
pop
aaa
xor
pop
cli
stos
and
adc
pusha
les
sub
push
aam
jne
xlat
push
cmp
fdivr
shl
mov
mov
add
leave
dec
out
and
loope
scas
lret
fcompl
test
cwtl
in
mov
or
adc
push
lret
or
and
xor
add
pusha
std
addl
mov
adc
xchg
lret
into
maskmovq
lret
das
xor
inc
ror
mov
push
adc
xchg
or
jmp
in
adc
lods
leave
push
pusha
adc
pushf
jp
sub
test
aaa
in
addr16
lcall
loopne
std
fnstsw
mov
jb
pop
add
adc
xchg
bound
shrl
outsl
daa
xchg
dec
notl
out
mov
cmp
lea
push
add
mov
pop
cmpsb
push
nop
mov
xchg
mov
xor
adcb
repnz
ficoms
push
mov
mov
and
cmc
ret
cmpsb
lahf
fdivs
sbb
movsb
mov
push
push
xchg
or
jl
pop
pop
popa
scas
mov
jmp
jns
xchg
inc
out
xchg
dec
test
cmpl
push
push
sahf
mov
cwtl
mov
adc
jp
jmp
sti
adc
pop
sub
or
dec
push
jle
mov
fsubrl
daa
mov
imul
imul
jnp
or
jnp
jmp
push
add
ds
sahf
mov
dec
aaa
pop
lods
dec
lahf
in
repnz
js
roll
imul
cltd
shll
std
push
pop
inc
pop
into
sarl
leave
sahf
pop
mov
pop
shll
xlat
mov
outsb
in
ret
adc
inc
dec
mov
insl
xor
inc
and
dec
adc
insl
pop
and
pop
sbb
sub
out
push
jmp
nop
xor
test
mov
out
ficoms
fidivs
fnstsw
or
dec
sbb
out
andl
adc
outsl
mov
mov
aas
pop
ja
lcall
pushf
outsl
sub
test
mov
loope
in
adc
and
dec
inc
lret
push
getsec
das
jbe
fldl
and
dec
and
add
jge
scas
insb
push
jb
sub
stos
imul
or
mov
push
out
lods
cs
jl
jg
and
push
loopne
subb
sbb
jle
sub
loop
xchg
movsl
add
cmp
mov
aam
mov
push
jmp
insb
fisubrs
fwait
mov
dec
and
pop
add
mov
and
cltd
jg
out
aas
insb
les
fildl
aaa
stc
out
and
and
cmpl
push
add
mov
and
and
aas
and
clc
cmpl
insb
jge
bound
mov
pop
mov
imul
leave
jecxz
cwtl
cld
jne
xor
pop
fdivs
ja
dec
shll
je
push
fisttps
add
inc
loopne
inc
and
mov
shll
jbe
into
jo
mov
nop
arpl
jbe
sbb
insl
ss
std
adc
sub
js
insb
mov
outsl
int
imul
jno
std
scas
loop
add
shlb
dec
mov
dec
xor
sub
out
ret
jb
or
imul
push
je
mov
cmpsl
push
out
jno
fidivrs
sub
cwtl
inc
call
pushl
aad
faddl
je
je
cwtl
out
add
add
in
mov
clc
sbb
test
add
mov
jecxz
add
lret
and
loopne
xchg
adc
out
mov
sbb
pop
fdivrs
cmp
cli
out
pop
cmp
jae
in
std
fnop
aaa
dec
xchg
data16
pushf
jo
sub
lahf
mov
xchg
icebp
mov
cld
jnp
cmpsl
jbe
push
jae
mov
push
xor
repnz
fucomp
mov
daa
sbb
inc
jb
inc
adc
fldlg2
cs
mov
stc
add
faddl
sub
jg
mov
add
xchg
sub
lea
icebp
into
jmp
and
xchg
mov
movsb
adc
adc
mov
push
add
adc
insl
aam
jp
cmp
adc
and
pop
hlt
adc
jae
test
fdivl
insb
jne
aas
ds
push
dec
dec
rol
popf
push
ret
jl
imull
ja
adc
pop
cmp
sbb
cltd
xchg
mov
cmpl
test
stc
jb
imul
and
fistl
cwtl
push
push
push
xor
loop
pop
xchg
pop
mov
xor
push
cmpsb
lret
outsl
stos
repnz
xchg
outsb
lret
jmp
addr16
insl
stos
mov
das
fdivrp
adc
pop
cmp
and
adc
xchg
cmpl
jecxz
scas
cli
int
enter
add
scas
sbb
add
sub
test
add
leave
idiv
stos
jmp
inc
dec
ficoml
sbb
cmc
push
inc
ja
adc
jge
push
aad
add
or
lret
cwtl
push
adc
sbb
mov
mov
mov
je
and
lret
test
xor
jo
mov
cmp
in
movsl
pop
leave
mov
jmp
xor
inc
or
js
out
push
or
jle
push
shlb
lods
lods
les
adc
sbb
lcall
gs
push
mov
and
cmp
shr
call
or
lcall
fdivrs
cs
ret
es
nop
push
xor
lret
inc
cwtd
loop
stc
sbb
dec
sahf
xor
xchg
mov
int3
mov
aad
mov
push
mov
mov
ds
sahf
leave
lea
or
jbe
xchg
xor
sbb
mov
mov
adc
mov
mov
xchg
or
fwait
repnz
pop
jb
pop
mov
dec
ljmp
ret
add
push
push
dec
aam
adc
or
ss
gs
inc
bnd
xchg
loop
std
mov
lds
pop
fcmove
push
arpl
inc
inc
ss
inc
lea
xchg
mov
mov
adc
idivb
pop
lods
rcll
pop
or
lods
pop
aad
aas
dec
dec
sbb
add
xchg
mov
cmp
push
jmp
imulb
cld
sahf
js
xor
adc
xchg
and
xchg
fwait
idivb
in
fwait
pop
or
add
cmp
push
mov
gs
adc
outsb
repz
cmp
les
pop
lcall
int3
in
add
mov
sbb
data16
xchg
sub
inc
dec
ret
jno
mov
in
cli
lods
lahf
pop
mov
test
inc
mov
aad
fsubl
jecxz
xor
ljmp
mov
inc
roll
dec
cwtl
sub
icebp
jns
jmp
mov
call
pop
pop
loope
scas
pop
into
pop
xchg
add
scas
dec
lcall
sub
sub
add
xlat
push
mov
insb
je
fnsave
cmp
sbb
addb
xchg
dec
aaa
jecxz
pop
ljmp
out
adc
fwait
popf
fadd
jmp
leave
pop
dec
xor
out
xchg
push
adc
xchg
cmp
cld
and
push
mov
push
aas
test
mov
pop
push
lea
push
xchg
scas
andb
pop
xlat
gs
inc
in
nop
iret
and
stos
or
popa
or
add
dec
data16
add
pop
pop
and
xchg
jmp
outsb
iret
push
mov
xor
in
sti
ja
mov
pop
jp
cmc
stos
movsl
test
pop
imul
ret
arpl
push
fldcw
or
jne
insl
loopne
clc
mov
and
mov
sbb
push
pop
movsl
mov
adc
or
cmp
mov
xor
or
ja
pop
push
inc
jg
pop
aaa
stc
dec
sub
data16
lret
adc
loop
popa
mov
fcmovu
scas
push
scas
ret
xchg
das
jo
je
mov
jbe,pt
ret
rcr
loop
dec
pop
adc
data16
dec
mov
jle
lock
mov
sub
lret
fistps
addr16
mov
mov
fstpt
pushw
in
xor
in
adc
pop
sbbb
dec
negb
pushf
int
andl
cmp
mov
sbb
addl
jo
fcompl
add
orl
sbb
lds
repz
dec
sbb
add
movsb
fnstcw
add
fisubs
and
out
or
push
ja
mov
in
dec
mov
out
mov
fwait
and
es
xor
loopne
loopne
mov
add
dec
dec
sbbb
out
inc
out
cmpsb
cmpsl
xchg
cmp
loopne
inc
sub
jmp
in
lods
pop
mov
lods
sbb
mov
mov
int
xchg
sbb
dec
lock
add
mov
repz
arpl
in
fsubl
sbb
lahf
int3
fstps
cwtl
xor
das
sbb
iret
xchg
gs
scas
ss
jb
fs
stc
test
xchg
sbb
inc
imul
aam
aas
pop
aas
inc
iret
pop
adc
sub
cld
xchg
or
sti
push
sub
sub
daa
xlat
bound
sbb
xor
mov
pop
shrb
imul
mov
dec
inc
scas
mov
xor
push
xchg
out
mov
pop
in
and
xchg
fcomps
jmp
adc
jno
inc
fwait
jno
into
inc
mov
push
js
sub
sbb
out
gs
mov
jb
les
ret
pop
test
pop
mov
sbb
inc
nop
ss
pop
es
jp
push
nop
fwait
shl
pusha
iret
and
mov
out
js
mov
dec
inc
xchg
jl
int3
push
test
xor
inc
das
push
sarl
adc
cmpl
and
ret
movsb
inc
das
fisttps
outsb
insb
cmp
sbb
loope
mov
test
loopne
lods
lret
pushf
aad
jle
dec
mov
lods
lahf
shl
mov
pop
push
divb
sahf
sbb
ja
enter
mov
mov
js
mov
sub
popf
jge
icebp
jge
ds
cmp
insb
ja
lock
adc
jle
mov
cmp
fldt
pop
fisttpll
dec
lods
sbb
stos
pop
sub
les
inc
clc
add
ret
xchg
dec
lcall
mov
cmpsb
mov
push
and
fcomps
mov
mov
cmc
inc
cmpsb
dec
push
or
cmpsl
inc
nop
aaa
mov
push
xchg
scas
inc
push
push
daa
jmp
call
in
dec
jns
xchg
mov
fnstsw
sub
xchg
aas
push
sahf
dec
stc
aam
pushf
sbb
pop
fidivrl
pop
mov
sbb
movsl
xchg
mov
cmc
jmp
pop
out
mov
pop
out
pop
test
cmp
dec
and
addl
shrb
jmp
xor
call
pop
ret
lahf
lcall
push
dec
adc
cs
in
clc
adc
add
add
or
mov
movsl
movsb
jb
sbb
shrl
push
mov
jecxz
mov
xchg
xor
mov
cmpsl
xor
and
adc
inc
int3
aam
adc
or
leave
jo
sub
test
repnz
lea
xor
leave
aaa
push
mov
xchg
sub
dec
int
mov
inc
out
scas
lds
adc
xor
sbb
movsb
divb
jne
call
jl
cmp
pop
sub
xor
lods
lret
pop
mov
mov
outsb
roll
rolb
inc
jge
add
xlat
sbb
sarl
dec
cli
lods
ret
sub
cmp
mov
int
loop
push
pusha
jo
popa
add
inc
out
mov
jl
and
jnp
icebp
xchg
sbb
nop
dec
divl
and
xlat
dec
sti
fndisi(8087
mov
loope
je
data16
dec
and
sbb
cmp
aas
sbb
xor
scas
push
pop
psrad
test
cltd
fwait
jecxz
mov
xor
testl
or
insb
jp
sub
sub
xchg
and
cli
subl
stc
pop
imul
in
adc
and
push
push
mov
mov
xor
pushf
xchg
out
daa
dec
pop
inc
filds
add
repz
pop
pop
cmpsl
inc
les
cmp
or
int
push
aam
add
shr
pop
roll
push
jo
pop
in
mov
fs
orl
std
fldt
adc
xchg
cmp
mov
xchg
inc
or
mov
ljmp
out
dec
outsl
aas
out
sbb
sub
mov
sbbl
xor
jns
daa
add
pop
inc
daa
cmp
mov
dec
dec
mov
ret
pop
lods
cltd
and
ja
mov
in
roll
dec
or
lods
cmp
dec
outsl
imul
push
xor
int3
pop
pop
dec
pop
push
lret
fcoms
rol
jmp
mov
jb
inc
daa
jp
stos
leave
inc
ret
jmp
cld
adc
xor
test
lods
lds
push
cmp
jl
lea
cmp
adc
or
inc
mov
mov
jmp
xor
stc
and
pushf
sbb
shlb
decl
jnp
call
fildl
add
cmp
pushf
das
negb
or
call
mov
and
cmp
das
sbb
cmpsl
jg
aaa
xchg
lds
das
xchg
lods
movq
jne
mov
cmc
jb
push
dec
sar
inc
push
push
mov
mov
push
mov
jnp
or
fcomi
mov
mov
cltd
cld
jl
dec
xor
shll
jbe
adc
lret
dec
aad
jo
lret
dec
or
loopne
mov
js
stc
call
addl
jo
dec
mov
pop
mov
adc
cmp
std
adc
subl
jae
mov
add
pushf
xor
stos
fidivs
xor
pushf
imul
jge
dec
bound
in
push
jl
mov
push
adc
push
mov
inc
pop
fcoml
dec
aad
inc
jbe
lahf
lds
insl
divl
or
add
pop
xor
fs
cli
xorl
pop
jle
in
push
arpl
loop
cmp
fistpl
mov
sub
imul
or
push
lods
cmc
repz
xor
enter
jne
es
xchg
lea
movsb
cmp
lret
adc
pop
inc
cld
dec
movsl
es
neg
xor
xor
lret
rol
test
push
adc
stos
or
out
dec
inc
xchg
mov
dec
xchg
pop
jne
ljmp
dec
cli
repz
push
jb
mov
add
add
mov
add
adc
xor
lahf
test
outsb
imul
test
sub
scas
dec
lods
sub
sbb
push
lea
out
cmp
insb
dec
xchg
imul
and
sub
mov
jne
out
out
in
sbb
outsb
imulb
jmp
xor
test
lcall
lods
popa
inc
pushf
mov
test
sarl
jo
ret
push
repnz
sbb
inc
xchg
mov
cmp
push
mov
mov
lods
and
mov
lea
mov
aaa
gs
inc
in
mov
popf
fadds
ja
dec
push
fdivrl
ds
mov
dec
jg
sub
dec
inc
aam
and
outsb
mov
in
add
andb
in
pop
cmp
shlb
stos
fldenv
or
pop
lods
in
and
inc
popf
rcrl
int3
insl
scas
mov
mov
inc
testl
sbb
xchg
jo
pop
adc
add
xor
in
mov
aad
pop
insl
scas
in
xlat
popf
mov
push
push
xlat
jmp
test
xchg
or
sbb
sub
bound
and
scas
pusha
mov
dec
sbb
sti
xchg
inc
addl
xchg
pop
cld
jecxz
and
jo
cmpsl
push
in
mov
dec
inc
das
xor
in
mov
int
mov
adc
cmp
mov
push
mov
cmp
call
ja
jns
sub
scas
jge
dec
pop
sbb
fiaddl
add
sahf
xchg
test
sub
lods
sbb
xchg
icebp
pop
inc
mov
jmp
sub
clc
in
or
rclb
iret
test
cli
sub
movsb
cwtl
dec
ror
push
sub
jo
jbe
jnp
jae
and
loop
jo
sbb
jnp
dec
lods
jno
pop
and
mov
outsl
cmp
cmc
inc
mov
lea
out
bound
js
push
xlat
cltd
jle
jo
ds
jbe
lods
jnp
out
shlb
dec
insb
sbb
enter
add
adc
loop
in
ljmp
jno
fwait
js
xlat
scas
outsl
fisubrl
lret
addb
mov
sub
jb
jmp
fs
fistpl
jp
data16
xchg
adc
pop
loopne
mov
in
rclb
dec
and
mov
mov
fildl
mov
cmp
icebp
mov
add
xor
push
mov
adc
and
pop
ret
cmp
ficoml
mov
push
pop
pop
mov
mov
stc
xor
popf
cmpb
xor
movsb
fisubrs
mov
cmpsb
into
xchg
add
push
add
ret
mov
sbb
push
sub
out
add
imul
rcl
icebp
in
cmpsb
jmp
and
dec
rcl
push
or
decb
ljmp
xchg
lods
cwtl
imul
push
or
iret
and
cmpsb
ficoms
xlat
sti
inc
xor
mov
js
repz
cmp
fcomip
xchg
dec
jp
int
lret
jne
mov
dec
loopne
add
jno
dec
xlat
in
sbb
rcrl
cwtl
mov
inc
repnz
icebp
mov
cli
sub
lret
insb
or
mov
inc
sti
imul
loop
cmpsb
sbb
test
xor
addl
rcrb
cs
lret
cmp
test
mov
or
fmulp
dec
shll
hlt
push
xchg
fldcw
and
aad
leave
scas
sti
hlt
xor
xchg
ja
bnd
add
addb
ja
jp
pop
in
rcll
inc
push
lcall
cmp
push
and
push
dec
dec
inc
pop
cmp
mov
int
cs
adc
inc
inc
pop
lahf
xor
dec
and
jo
add
mov
and
repnz
xchg
adc
and
xchg
inc
add
call
mov
jbe
testb
arpl
xchg
rorb
in
adc
xchg
mov
xlat
insl
mov
xchg
dec
or
jmp
dec
call
or
mov
es
lcall
jmp
clc
push
cmp
es
in
inc
add
lea
inc
packssdw
add
pop
sarl
ljmp
in
push
ficompl
aam
inc
adc
lds
imul
outsb
mov
push
into
bound
int
xor
xchg
or
xor
gs
repz
xchg
cmp
pop
call
dec
mov
sahf
jbe
dec
loopne
das
sbb
jge
pushf
sahf
rcr
je
das
and
mov
sbbl
ljmp
pop
pop
je
mov
aaa
data16
stos
or
hlt
incb
lret
scas
add
xor
ret
aaa
rcl
mov
jle
add
shll
pop
mov
mov
jecxz
sbb
test
jecxz
imul
xchg
mov
xor
xor
bound
stos
dec
adc
das
dec
adc
fcomi
inc
pop
mov
mov
jae
add
js
mov
jo
subl
jbe
xchg
sbb
xlat
and
js
mov
in
sbb
cmp
in
push
mov
popa
mov
xlat
and
cltd
bound
cs
or
sti
push
xor
arpl
pop
shrb
mov
dec
pop
shll
loope
add
fisubrl
push
xchg
dec
inc
mov
pusha
inc
aam
data16
lods
std
fwait
xor
dec
enter
stc
add
adc
or
out
push
jo
mov
addr16
rcl
rclb
test
jb
lcall
push
and
andl
cltd
pop
mov
dec
popf
movsl
inc
and
dec
add
and
data16
hlt
filds
pop
dec
stos
mov
mov
roll
bound
cli
rolb
notb
sbb
sub
sub
stos
dec
mov
ret
jl
in
test
test
add
lods
dec
push
xchg
mov
bound
pop
add
lds
sbb
xlat
loope
jbe
cmpl
mov
lret
and
stos
loopne
rorl
bound
iret
push
out
adc
int3
sbbb
push
xor
mov
add
clc
push
push
ljmp
mov
out
xor
push
leave
cltd
adc
sub
mov
test
cld
mov
xchg
out
or
fwait
aam
mov
bound
js
mov
sbb
sbb
addr16
mov
mov
out
cmpsb
jmp
and
call
insb
ds
mov
repnz
loopne
add
pop
test
mov
mov
jp
push
or
in
aaa
inc
in
jge
sub
mov
xchg
push
pushf
mov
aad
in
sbb
mov
push
test
xchg
pop
push
sbb
mov
and
pop
jg
mov
lea
fs
sbb
incl
fdivs
jecxz
loop
adc
das
mov
mov
not
shrl
cmp
mov
and
pop
pop
jp
and
cltd
aam
xor
jns
push
jo
addr16
rcrl
ret
cwtl
push
jecxz
pop
lods
inc
cmp
nop
in
xchg
sub
sti
mov
pushf
cmp
pop
xor
pop
push
sub
cmp
jae
mulb
dec
sbb
adc
fcomip
jno
jle
fdiv
sub
vmread
daa
jmp
jl
sahf
push
sub
mov
ret
inc
add
jmp
fs
mov
jecxz
push
mov
jmp
mov
jns
fs
jnp
dec
in
inc
gs
scas
cmc
mov
popa
stos
imul
icebp
outsl
xor
int
mov
lret
adc
pop
xor
adc
mov
sahf
mov
pop
cmpsl
femms
sbb
or
mov
hlt
xor
cmp
mov
mov
sahf
repnz
sub
xchg
ftst
das
push
push
xchg
jnp
jp
dec
mov
cli
add
arpl
repz
out
jle
bound
fimull
cli
rcll
xor
xchg
jbe
aas
insl
arpl
fisubrs
mov
lods
cld
rorb
sbb
push
imul
pop
das
rorl
push
jg
mov
xchg
addr16
cmpsb
add
fidivrl
in
cmc
adc
negb
inc
add
cmpsl
mov
mov
and
stc
push
xor
stos
div
sub
in
in
mov
sub
pop
jb
ja
out
cli
push
lods
dec
shl
xorl
aam
push
sbb
mov
sahf
jl
push
dec
pop
xchg
mov
int3
xchg
dec
cwtl
rclb
or
inc
jo
dec
loop
lahf
sub
adc
jmp
in
add
mov
xor
pop
sbb
cwtl
outsb
push
ljmp
jl
add
mov
and
mov
dec
sbb
shr
adc
and
and
je
push
aas
mov
fdivr
or
leave
outsl
push
mov
movsl
stc
or
pop
or
push
mov
mov
in
fs
dec
ljmp
or
xchg
popa
sub
push
mov
jb
push
popf
inc
sub
sbb
fists
hlt
jb
pushf
xchg
filds
andl
sbb
sub
shlb
fistps
mov
mul
scas
sbb
add
leave
push
hlt
lock
mov
or
mov
out
jmp
push
sarb
les
lahf
pmulhw
lea
scas
mov
and
jns
ret
add
mov
sub
inc
add
incl
ss
and
pop
push
mov
adc
in
inc
pusha
mov
rcrb
idivb
or
jg
ret
fdiv
mov
xor
sbb
cmp
or
cli
addr16
mov
jmp
push
or
dec
in
push
les
inc
negb
cmc
or
sub
or
and
jno
xchg
pavgw
cmp
sbb
sub
sub
jecxz
sub
call
mov
lret
jmp
arpl
mov
mov
js
mov
mov
jle
and
xchg
sahf
xor
mov
insl
dec
mov
inc
leave
push
push
jp
cmp
ja
aas
add
hlt
enter
adcb
sti
xor
and
orl
data16
dec
and
lea
push
or
push
mov
sbb
inc
in
jge
insb
pop
js
hlt
mov
pushf
sub
push
sub
and
mov
lock
imul
pop
ds
loop
clc
int3
dec
decl
or
lea
pop
scas
in
lods
lcall
je
jmp
sub
aaa
pop
sub
jp
mov
fcoml
mov
dec
adc
pop
and
and
cmp
cmpsl
xchg
sbb
mov
out
add
or
aas
dec
ror
in
roll
mov
sbb
std
fld
mov
ja
out
sahf
xor
push
xlat
fsubl
adc
sbb
mov
js
arpl
fs
call
frstor
or
mov
cwtl
and
leave
sub
xor
mov
pop
inc
xlat
sbbb
inc
push
pop
shlb
sub
test
sub
loope
mul
lods
ss
cmp
int3
scas
or
sub
es
arpl
fwait
insb
cmpsb
pop
add
sarl
enter
xor
mov
or
push
shl
jl
ret
mov
jle
clc
add
js
sti
divb
inc
jecxz
sbbl
and
mov
pop
mov
xchg
or
rcrl
ret
mov
inc
mov
cmpl
sub
dec
loope
inc
les
xor
jg
mov
sub
test
outsb
in
mov
ljmp
cmp
pop
push
mov
inc
adc
lret
sub
mov
jbe
pop
push
movl
sbb
int
and
imul
mov
testl
push
pusha
std
add
out
xor
and
cmp
mov
dec
rcll
int
popa
lret
clc
scas
adc
inc
push
test
jne
andl
popa
stos
cmp
fists
repnz
lods
iret
mov
inc
dec
and
pop
mov
adc
jne
andl
xchg
cmp
pop
jmp
xchg
pop
ja
les
sub
jb
int3
dec
add
repz
repnz
xor
push
dec
push
jae
push
and
ljmp
ja
push
sub
outsl
mov
xchg
divl
push
mov
stc
cltd
fidivrl
pushf
addr16
gs
test
lods
int
add
pop
mov
clc
addb
mov
mov
pop
mov
xor
rol
outsb
dec
pop
sar
xchg
xchg
dec
stos
and
push
lahf
or
movsb
lds
lret
inc
sub
bound
add
sub
jp
push
pop
mov
jo
dec
push
push
jne
mov
test
inc
popa
cmpsl
lock
gs
movsb
xchg
imul
sbb
int
inc
sbbb
shll
cmp
jmp
lret
fisttpll
jmp
adc
add
and
pop
add
mov
cmp
fcmovb
push
mov
or
leave
cli
push
lock
or
mov
jae
mov
aas
loopne
dec
sub
push
out
inc
xor
jb
push
mov
mov
ret
sbb
and
mov
cpuid
loope
bound
xchg
loop
xlat
ljmp
shl
adc
sbb
mov
loope
aas
push
sarl
sbb
aam
add
gs
jae
add
call
incl
lret
lret
cld
lahf
and
cmp
jbe
iret
jmp
adc
xchg
and
xchg
xchg
xchg
cmp
in
adc
out
xlat
add
lret
imul
sub
cli
shl
xchg
and
fwait
sbb
stos
popaw
shr
adc
and
adc
pop
mov
stos
inc
rorl
xor
cli
icebp
add
jge,pn
mov
mov
in
ljmp
fsubrl
and
popa
data16
mov
mov
cmp
lock
and
outsl
inc
ret
adc
sub
into
sbb
test
cmp
out
scas
gs
int3
jg
mov
mov
push
mov
xlat
mov
xor
xor
pop
call
insb
sbb
test
sub
fst
cmpl
loope
dec
dec
in
cmp
int
test
xor
lock
jmp
mov
xor
hlt
scas
lock
jo
ljmp
sarb
sbb
add
stos
sub
add
enter
loopne
stos
jmp
idivb
stos
stos
addl
xor
cltd
pop
test
aam
xchg
adc
mov
scas
mov
loopne
nop
xor
rcl
lret
or
xchg
jae
xor
or
jecxz
ss
fisubrl
popf
jae
fistpl
pop
push
cmp
mov
and
mov
cltd
jo
or
or
jmp
and
std
ds
adc
mov
lret
xor
adcb
loopne
out
xor
push
jno
stc
pop
data16
test
and
jle
lret
sbb
in
xchg
loop
adc
int
push
xor
jo
leave
fsubrs
mov
sahf
cs
pop
mov
mov
push
xchg
inc
ss
push
scas
inc
push
sahf
idivb
leave
shrl
pop
and
scas
pop
jns
aas
and
fmull
sahf
or
mov
mov
push
xor
mov
mov
repnz
mul
adc
push
stos
push
xor
sub
mov
rcr
and
aad
xor
daa
adc
and
push
mov
cmc
pop
inc
mov
adc
and
push
mov
das
clc
mov
jo
or
int
cmp
xchg
mov
add
pop
dec
cmc
adcb
lods
fnstenv
and
push
test
std
jmp
sbb
mov
in
mov
imul
xlat
adc
or
mov
ljmp
mov
ss
movsl
pop
dec
roll
inc
push
inc
sub
xor
int
push
imul
rdtsc
sbb
jp
nop
add
stos
lret
lods
repz
movsb
mov
sti
cs
lds
dec
add
out
int3
loope
pop
xchg
stos
push
mov
gs
pop
mov
pop
enter
imul
movsb
xor
inc
jb
addr16
jae
sahf
iret
inc
mov
jl
sub
lods
or
mov
xor
or
and
rorl
or
leave
into
mov
ss
popa
std
test
clc
inc
mov
je
sub
inc
lret
imul
lds
outsb
push
push
cmp
out
lea
aaa
mov
scas
mov
ficompl
dec
push
mov
lcall
gs
add
cmpsl
mov
loop
movsb
out
mov
cwtl
push
mov
add
mov
stos
js
out
js
xchg
pop
sub
enter
xchg
shll
cmp
cmpsl
repnz
pop
pop
mov
sarl
sub
push
fwait
stc
inc
inc
jl
push
sub
sbb
test
shll
adc
jge
sbb
mov
popf
cwtl
cmpsb
cld
ja
cmp
insl
repz
lret
hlt
lcall
push
xor
aad
dec
sub
daa
divl
ficoml
fcomps
or
mov
push
out
mov
rcll
mov
xor
cmp
in
pop
dec
rcll
and
adc
pop
icebp
inc
into
xor
inc
cs
lret
xchg
fwait
mov
sahf
mov
push
mov
sub
scas
lea
mov
ficomps
movsb
mov
xor
ja
hlt
fisubl
int3
std
jmp
cs
test
xor
mov
xor
sbb
pop
les
push
xchg
cmc
repz
sub
int
pop
mov
mov
pop
cs
lock
in
dec
repz
push
pop
and
inc
xor
nop
mov
in
or
flds
jp
jbe
fs
je
pushf
inc
fnstsw
test
mov
sub
mov
gs
cmp
subl
xchg
push
sbb
dec
arpl
clc
inc
imul
out
stos
fwait
cmp
jmp
leave
sbb
xor
dec
pop
aas
add
cld
cmp
cmpsl
loopne
dec
ss
mov
pop
in
cmp
inc
mov
addr16
mov
mov
and
mov
ja
xchg
push
arpl
lret
add
add
mov
dec
or
pop
xchg
outsb
jmp
pop
pop
leave
sub
push
ret
mov
mov
pop
inc
mov
imul
push
mov
bound
adc
mov
arpl
mov
loop
data16
rcll
andl
jns
rcll
in
or
rclb
inc
push
fsubs
dec
sub
subl
jne
scas
mov
pop
jmp
movb
out
xor
out
add
cli
iret
das
push
loope
fildl
cmp
inc
cmc
jb
scas
push
or
cli
sub
aam
xor
fs
and
dec
mov
mov
pop
cwtl
daa
scas
pop
pushf
inc
cmpsl
sahf
push
bound
xlat
into
andb
mov
fiaddl
pop
sub
fstps
cmpsb
or
repnz
daa
sti
mov
enter
mov
xchg
xchg
scas
jp
out
iret
loopne
ja
orb
mov
fists
jno
shll
and
add
mov
lods
push
adc
movsb
push
das
xor
sub
jbe
push
cwtl
pop
imul
scas
fistpll
fdivs
mov
lds
andl
jmp
fistl
jp
mov
jle
xchg
lods
pop
lds
dec
sub
xor
and
imul
nop
out
sbb
sub
xor
loope
dec
ret
in
lcall
loop
movsl
sub
xor
dec
out
popf
mov
cmpsl
sbb
add
mov
out
stos
xorl
lcall
push
in
subb
inc
xor
inc
lahf
lock
cld
shll
mov
jecxz
jecxz
jmp
mov
bound
addr16
mov
pop
lahf
out
pop
lea
cmp
sahf
rol
inc
loopne
cltd
ret
mov
push
pushf
gs
sbb
sub
stc
add
shll
mov
push
mov
add
mov
inc
enter
pop
jno
pop
fnstsw
push
movsb
add
sbb
in
sbb
imul
fildl
push
add
xchg
xor
movsb
inc
cmpsb
xchg
inc
xchg
and
out
mov
jbe
shr
push
into
sahf
lock
xchg
mov
aas
cmp
movsb
in
rcll
test
aas
xchg
pusha
xor
or
push
fsubrl
cmp
fcomps
js
cld
int3
dec
mov
fs
xor
inc
jae
mov
fiaddl
mulb
inc
push
data16
movsb
inc
mov
repz
std
cltd
or
icebp
fsubr
dec
fistpl
mov
adc
call
dec
push
cmpsb
in
pop
dec
loope
add
add
jecxz
mov
jno
pop
and
ds
loope
and
mov
arpl
in
ret
pop
xor
inc
fwait
testb
pop
mov
cmp
mov
add
lods
mov
sub
push
sub
pop
fisttps
or
sbb
arpl
dec
pop
xchg
and
push
jbe
adc
xorl
ljmp
bound
aam
lock
fbstp
pop
mov
adc
inc
adc
into
lock
mov
push
sbb
hlt
je
push
stos
pusha
mov
xchg
sub
and
cmc
cmpsb
fs
cs
in
push
int3
gs
insb
cmp
ljmp
xchg
test
xchg
clc
shll
jl
cmp
pop
in
mov
nop
nop
into
into
adc
leave
or
pop
popa
xchg
jns
add
out
outsl
adc
fisubl
icebp
xchg
xlat
ficoml
int
xor
mov
sub
mov
jns
cmp
mov
mov
int
xor
xchg
jns
dec
cmp
mov
push
hlt
dec
sbb
pop
push
out
lods
fldenv
mov
roll
sub
xor
pop
sbb
adc
nop
int
add
bound
lcall
ds
push
inc
mov
stc
cmp
inc
in
cltd
es
or
lea
cltd
add
adc
cmp
push
xor
pop
popf
xchg
pop
loopne
stos
mov
jno
cli
mov
mov
mov
rolb
mov
jo
out
lock
pusha
mov
mov
loope
arpl
lods
dec
jp
sub
add
push
mov
sbb
push
nop
cli
mov
cli
add
cmc
jae
aaa
xchg
insl
sbb
incl
pop
and
fidivs
push
xchg
sub
scas
jg
mov
dec
dec
cli
sbb
shlb
cwtl
push
pop
pop
jnp
or
xor
mov
add
cmp
adc
test
or
imul
dec
loopne
call
xor
fdivr
mov
or
xor
pushf
daa
adc
lret
aaa
ret
jp
dec
pop
je
or
popf
adcb
icebp
mull
or
pushl
inc
xchg
or
adc
xchg
jns
repnz
push
adc
jmp
addr16
xorl
mov
xchg
sbb
leave
add
dec
rcll
scas
shr
insl
out
fwait
and
retw
sub
lds
mov
movsb
fimull
inc
and
adc
stc
std
pop
xor
inc
or
decl
add
shll
pop
in
nop
pop
imul
or
ds
mov
inc
push
clc
lods
popa
aad
mov
pop
not
sbb
dec
iret
and
je
shrl
arpl
push
xchg
mov
inc
mov
mov
cmpsb
in
cmpsl
cmpsl
cld
mov
mov
dec
insb
xor
in
int3
or
push
push
test
lods
jmp
jno
sbb
jp
pop
pushf
ja
inc
cmp
stc
xor
pop
cmpsl
adc
mov
repz
out
dec
pop
outsb
jmp
adc
inc
es
dec
clc
xor
repnz
mov
lods
int
add
das
add
outsb
pop
clc
adc
cmp
repnz
jno
xchg
cmpsb
mov
push
in
xor
and
lea
sub
iret
aam
stc
enter
enter
mov
mov
pop
call
and
jb
jl
aam
mov
mov
cmp
pop
mov
jmp
xlat
mov
sarb
sbb
sub
ja
mov
ret
rorl
lret
dec
pop
xchg
sbbl
inc
push
shlb
dec
rclb
pushf
out
fs
dec
sti
inc
mov
mov
lea
mov
fs
push
imul
clc
jmp
shrb
ds
decl
cmp
jo
data16
cmpsb
lea
std
push
imul
inc
xor
dec
sbb
push
fdivrl
mov
aas
pushf
adc
sub
stos
enter
pop
bound
jno
push
test
stc
mov
data16
movsl
lahf
push
iret
jl
lods
lods
pop
mov
aas
jl
fistl
out
pop
adc
stos
test
mov
arpl
mov
lods
or
dec
cmpsb
outsl
pop
and
inc
ja
out
inc
ja
mov
pop
ret
sarb
jecxz
dec
test
lahf
push
mov
cwtl
out
dec
add
inc
mov
and
mov
sbb
xchg
sbb
inc
pop
je
dec
aam
inc
movsb
push
adc
mov
sahf
int3
mov
loope
mov
pop
arpl
add
cmc
fwait
cmp
rorl
mov
cld
fwait
sbbb
int3
notb
pop
lcall
data16
pop
test
inc
rorl
fists
pop
pop
jp
daa
add
sub
pusha
or
mov
aam
movsl
push
mov
lods
mov
test
repz
xchg
idivl
adc
cld
sub
and
xchg
cmpb
sub
cmp
sbb
jnp
sub
andl
or
or
sbb
nop
push
dec
dec
aad
out
xor
adc
dec
les
and
lods
cmp
aam
sbb
jns
in
sbb
jge
or
sub
jno
pop
pop
dec
gs
in
jmp
cmp
les
testb
rolb
inc
xchg
in
negb
addl
arpl
pusha
div
mov
xor
pop
fs
inc
add
inc
add
gs
out
jp
add
lcall
pop
int
mov
sbb
ret
int3
jmp
jle
inc
dec
dec
jp
add
jmp
add
sti
add
jne
push
adc
rclb
push
jge
mov
popf
cmp
bound
sub
dec
mov
mov
sub
cmp
idivb
jmp
call
cmp
mov
iret
test
js
out
mov
dec
fwait
cmp
cltd
push
aaa
push
insb
adc
inc
add
xchg
loop
inc
inc
std
nop
outsl
sub
ret
movsl
sub
je
and
aas
pop
out
cmp
cmp
adcb
mov
testl
ret
in
imul
cltd
sub
dec
add
mov
sub
cmp
and
sub
mov
inc
aaa
sub
dec
ds
dec
aas
lods
hlt
out
add
cmp
mov
xlat
lock
fists
lds
lods
xchg
jp
fsubrl
mov
into
stc
aam
cmp
adc
cmpsb
stos
inc
jb
cltd
fldl
and
mov
jns
stos
orb
push
and
cmp
cld
mov
mov
stc
and
gs
xorl
cmp
mov
jmp
mov
add
lods
xchg
dec
adc
outsl
add
sti
mov
pop
je
adc
arpl
sub
out
mov
je
dec
add
lods
push
mov
inc
adc
cwtl
mov
mov
jne
jle
cmp
shlb
stc
dec
stc
pop
xlat
push
jmp
popa
into
add
popa
pop
sub
loop
dec
test
inc
sbb
imul
movsl
mov
mov
and
nop
dec
scas
jae
repz
dec
xchg
popf
sub
arpl
fisttpll
sbb
dec
test
clc
dec
push
inc
out
pop
outsb
lret
or
cli
movsl
cli
out
insb
adc
mov
mov
push
push
jp
inc
push
sub
push
mov
dec
cmp
shlb
adc
mov
cli
movsl
stc
inc
popl
hlt
xchg
stc
outsb
mov
push
jg
mov
add
cli
add
mov
fiaddl
fwait
and
mov
pop
into
push
lods
dec
mov
xchg
es
cli
adc
and
fdivs
push
fwait
sub
and
aaa
or
xchg
out
dec
jp
repnz
xchg
in
mov
mov
mov
pop
rcll
pop
in
push
pop
xor
mov
xor
daa
pop
add
jb
jmp
bound
mov
mov
adc
sbb
add
dec
pop
ret
push
ret
adc
mov
adc
int
cwtl
loop
imul
pop
clc
mov
xlat
adc
push
push
and
sar
test
shlb
dec
jle
lahf
inc
cmpsb
dec
ja
repz
icebp
add
call
pop
xor
jg
mov
xchg
push
mov
cs
cmp
or
and
mov
test
jnp
cmp
repnz
jl
jb
imul
xchg
xchg
mov
mov
push
das
sub
mulb
pop
dec
push
inc
xor
cmp
mov
cli
mov
sub
push
xor
dec
pushl
ja
lahf
dec
inc
sbb
mov
aaa
push
mov
jno
dec
ljmp
and
push
inc
push
sub
ret
add
outsb
mov
stc
dec
or
movsl
xor
pop
test
adc
pop
jecxz
inc
test
int
ffree
int
jne
sub
mov
cld
scas
mov
cmc
push
push
add
jb
shl
push
aaa
ljmp
jne
lock
je
mov
jb
test
pop
mov
jg
and
ljmp
xor
xchg
mov
adc
mov
loopne
push
das
mov
cmp
dec
push
xor
in
out
outsb
fidivrs
inc
insb
dec
adc
dec
aad
aad
cmovge
mov
jle
lret
gs
imul
pop
daa
sub
ffree
cmp
add
das
fldt
repz
ss
call
subl
pushf
fs
enter
imul
dec
mov
daa
inc
sti
jnp
cmp
cmpsl
jae
xchg
les
daa
aad
pusha
mov
pop
fdiv
dec
and
lret
enter
sbb
xor
dec
pop
movsb
js
add
stos
test
or
mov
or
inc
in
inc
inc
add
aad
mov
inc
adc
push
in
push
sub
jl
pop
add
sbb
pop
lahf
xor
mov
push
pop
and
xor
fsub
rol
pop
bound
adc
mov
jne
dec
inc
nop
or
xchg
jo
fidivs
test
mov
stos
lods
fwait
jne
pop
out
fmuls
fwait
xor
js
dec
mov
addb
xchg
jno
ljmp
lret
int3
or
addr16
mov
aas
xor
dec
mov
jns
inc
push
and
out
call
repz
mov
repz
out
mov
inc
adc
sbb
rol
jmp
lahf
sbb
inc
add
iret
inc
push
cli
shlb
sti
add
pop
xchg
outsl
loop
dec
rcll
lds
enter
out
stc
and
loope
into
xchg
lods
inc
inc
push
inc
jge
xor
incl
jb
push
and
stc
shl
icebp
mov
and
mov
repnz
dec
hlt
mov
imul
cltd
out
dec
xchg
mov
or
and
push
cli
fs
pop
invd
or
add
and
mov
iret
and
pop
or
jns
or
push
roll
insb
or
aam
sahf
sub
dec
and
lret
sub
pop
jb
loopne
jne
xor
xchg
cltd
out
sarl
mov
lahf
adc
pop
in
cmc
cli
mov
adc
and
subl
sub
stc
mov
aas
inc
mov
fbstp
scas
mov
inc
cmpsb
jg
iret
dec
cmp
gs
push
xor
mov
pop
lds
in
push
scas
fdivl
aas
lods
pushf
adc
inc
adc
jno
fcompl
adc
jp
movsb
mov
sub
pop
jl
lods
mov
xchg
mov
cmp
jb
mov
xchg
stc
mov
inc
pop
jne
test
and
ds
ss
ljmp
cmp
pop
stos
xchg
mov
pop
adc
iret
fdivl
ficomps
sbb
xchg
mov
data16
push
and
cld
test
sbb
or
ret
bound
xchg
cmp
push
or
pushf
lahf
loope
and
shrb
fucomip
cwtl
cmpsb
nop
jne
es
mov
inc
add
pop
mov
mov
insl
into
jge
fistpll
out
xchg
adc
adc
sub
mov
inc
sub
or
cltd
mov
xor
dec
inc
adc
mov
in
test
adc
cli
fstps
cwtl
lahf
jp
ret
lea
rcrl
cmpl
aaa
cmp
cmpsl
xchg
xor
bound
rorb
jne
arpl
push
xchg
iret
sub
or
xchg
test
mov
mov
lcall
jns
mov
mov
add
push
insb
shll
sbb
inc
or
out
fidivrl
adcl
mov
pushf
jo
fcomi
jg,pt
mov
in
jp
mov
jae
adc
repnz
dec
stos
cli
decl
jmp
or
cmc
aas
jae
cld
das
lcall
inc
fdivrl
mov
cmp
pop
les
imul
addr16
dec
cmpsb
xor
lods
sub
cmp
jmp
add
mov
mov
jmp
scas
dec
xor
mov
fs
jp
out
cmc
xor
push
loop
push
mov
leave
sbb
fwait
jno
or
jmp
jl
xor
add
std
or
ljmp
fdivs
mov
mov
test
add
adc
sti
sbb
or
xor
cmp
push
fdivrs
lock
mov
js
mov
xor
inc
push
imul
cli
add
push
and
mov
mov
mov
in
arpl
enter
xor
popa
pop
in
sbb
or
mov
add
jno
ja
ds
dec
frstor
mov
stos
mov
mov
fwait
cs
hlt
fmul
aad
pusha
mov
ret
out
sub
push
aaa
mov
inc
lret
fstp
lock
enter
int3
sbb
lret
inc
stc
fcomp
pop
or
or
dec
sarl
insl
add
dec
fsubrl
jg
jmp
mov
jae
ljmp
movsl
or
incl
enter
and
jmp
call
in
xor
dec
iret
dec
loopew
push
xchg
lahf
or
add
xchg
jge
in
ljmp
jg
int3
test
enter
popf
dec
in
subl
lcall
outsl
adc
ds
mov
fisubrl
cmp
shl
jl
and
sbb
and
test
sti
xlat
sub
or
mov
xchg
not
xor
pop
sub
fstpl
rcll
imul
xor
inc
sbb
outsb
hlt
mov
jp
pop
jb
mov
inc
shlb
mov
test
sbb
inc
jne
ljmp
dec
and
iret
xor
shlb
jmp
and
xor
loop
imul
dec
xor
and
inc
das
lds
movsb
cmp
mov
cmc
lahf
mov
mov
lahf
or
popa
ficomps
mov
pop
dec
add
mov
scas
dec
xchg
mov
add
mov
jo
and
outsl
sub
inc
pop
out
mov
repnz
mov
stos
fildl
cmp
nop
imul
sbb
dec
adc
push
addr16
test
in
dec
add
test
mov
dec
mov
imul
mov
leave
shll
movsl
aam
mov
insb
idiv
mov
and
outsb
ret
sbb
call
rcrl
rorb
sarb
dec
in
repnz
jle
inc
out
je
xor
shrb
jbe
stc
xchg
imul
mov
push
sbb
push
jge
lret
mov
jne
sub
scas
jns
mov
sbb
aad
popa
shl
lods
cltd
xchg
lahf
mov
inc
push
fisubl
je
fdivrp
pop
jg
adc
test
xor
mov
lahf
sub
mov
lods
mov
sbb
test
sub
cmp
xlat
inc
jno
sub
int
mov
scas
ds
in
push
lods
mov
push
mov
inc
dec
out
aaa
adc
mov
dec
cmp
enter
push
mov
mov
xchg
sub
xor
cmp
popa
mov
negl
dec
adc
mov
xchg
xchg
pop
pusha
push
jmp
les
xchg
mov
and
dec
xchg
cmpsb
aam
divl
stos
xor
lods
std
test
mov
lds
call
pop
or
outsl
inc
inc
movl
filds
or
andl
mov
out
adc
or
imul
loope
aad
mov
jns
pusha
cmp
push
fdivrl
imul
push
mov
iret
fldenv
cmp
mov
mov
add
mov
pop
pop
sub
lret
ljmp
xchg
pushl
or
lds
aad
in
loope
jecxz
rol
jg
aad
movsl
inc
cmpsl
cs
filds
nop
test
rcrb
sbb
test
iret
cmp
or
in
aas
dec
sbb
mov
add
push
xor
adc
xchg
xor
in
sub
cmpsb
sahf
mov
jecxz
rolb
test
mov
mov
add
push
aas
out
and
or
pop
adcb
fimuls
mov
test
les
sub
xchg
rol
adc
sbb
aaa
andb
int3
adc
or
sub
loope
out
and
dec
cltd
mov
xchg
cmp
in
pusha
test
lock
sbb
sbbb
dec
movsb
rclb
push
mull
push
pop
dec
rcll
inc
fs
loope
sbb
ret
jl
imul
imul
mov
mov
push
xchg
lret
call
inc
loop
mov
aam
int3
sbb
int
inc
jb
aas
lret
mov
pop
ljmp
xchg
orl
sti
fs
fs
test
pusha
xchg
cwtl
push
lea
jnp
inc
ret
push
and
mov
xchg
movsb
movsb
std
ds
lcall
pop
mov
dec
or
xchg
jo
mov
cld
push
xchg
cmpsl
je
jp
pop
in
in
dec
cli
scas
sti
lods
fyl2x
or
add
ss
out
adc
les
ja
inc
mov
out
jnp
mov
fnsave
adc
je
cld
rolb
mov
int3
lods
test
testl
insb
or
es
rcll
lds
dec
test
movsl
fwait
outsb
je
fnstcw
pushf
jns
dec
mov
pop
inc
shlb
push
daa
adc
testb
rorl
shrl
out
pop
int3
ja
call
mov
pop
add
mov
jmp
cltd
ljmp
dec
insl
cmpsl
jle
lret
xor
mov
add
int3
les
jbe
dec
lods
stc
dec
jmp
or
cmpsb
mov
mov
cltd
xorb
out
test
test
xor
or
out
xlat
dec
xor
jl
push
lods
jmp
dec
out
mov
cli
sub
int
xchg
inc
je
cmpsl
dec
in
jnp
pop
cli
mov
mov
xlat
cmp
or
mov
jmp
inc
push
rcrl
dec
cltd
fadds
pop
push
xchg
imul
mov
lcall
sbb
lock
aas
pop
xchg
les
push
jne
rcll
ficompl
sbb
je
push
adc
cs
sbb
aam
insl
and
push
jae
lods
cmc
arpl
cmp
xor
or
xchg
insb
insl
push
andl
std
mov
and
mov
jmp
sbb
fldl
lds
fcoms
jae
gs
sbb
add
jbe
call
and
aam
cmpsb
cvtpi2ps
ffree
arpl
dec
mov
push
clc
xchg
pop
lret
sbb
int
mov
mov
data16
xor
cmc
xchg
sub
test
in
jns
cmp
mov
loop
shr
jb
dec
dec
cmpsl
sub
out
test
les
cmpsl
bound
insb
or
out
xchg
std
addl
pop
xor
xchg
iret
int3
dec
jnp
xchg
xor
loopne
inc
push
sahf
mov
out
mov
outsl
es
mov
call
cmpsl
mov
ret
adc
mov
notb
add
xchg
xchg
jo
std
xor
jb
outsb
mov
sbb
lods
inc
pushf
jbe
mov
lahf
mov
xchg
in
fcmovne
aam
popa
aam
jae
xchg
and
sarb
jbe
or
xchg
sbb
xchg
imul
jne
insl
inc
sub
imul
push
mov
sub
scas
adc
out
cmp
ds
push
insb
testb
or
dec
inc
mov
add
ret
movsl
test
cmp
outsb
mov
xchg
dec
jns
jb,pn
fimuls
out
out
jl
or
or
in
loopne
int
jb
jo
pop
test
pop
scas
js
add
mov
es
insl
inc
pushl
inc
out
jbe
outsb
pop
mov
int
xor
pop
cmp
fsubl
jno
pusha
in
lods
adc
adc
mov
dec
movsb
pop
shll
sbb
scas
dec
mov
mov
js
mov
das
cmp
push
stos
inc
jge
sbb
mov
xchg
cltd
fdivrl
and
mov
inc
in
mov
repnz
pop
ss
std
cmpsb
fsubl
mov
ds
pop
jnp
mov
jg
das
mov
mov
jne
and
push
mov
xchg
enter
enter
std
test
xor
shl
push
mov
iret
sbb
jmp
mov
or
jge
dec
and
dec
test
jno
or
ss
repnz
mov
push
test
pop
cmc
cli
push
mov
fs
fwait
sub
fidivl
mov
ret
jb
inc
call
adc
mov
cwtl
loope
cmp
cmp
stos
movsl
lods
or
repz
fcomi
or
iret
shrl
mov
sub
xchg
inc
jge
mov
ficoml
xlat
inc
dec
std
sbb
push
in
into
push
lock
inc
jmp
out
sub
xor
in
daa
and
addb
add
cmpsb
mov
jmp
jmp
lea
xor
fdivrs
mov
cwtl
arpl
jo
bound
imul
outsb
pop
and
cmpl
mov
mov
adc
testl
shlb
push
add
dec
aam
dec
jp
adc
jmp
push
xor
dec
adc
psrlw
and
sub
rolb
ja
cld
jg
sbb
scas
repz
sub
pusha
cmc
pop
int
fs
sub
fildl
xchg
dec
xchg
aam
mov
inc
stos
push
sbb
int3
lods
inc
sub
add
data16
add
add
lcall
xor
negl
popf
cmpsb
jbe
lods
jo
fs
adc
popa
stc
or
clc
leave
leave
leave
loope
in
xchg
xchg
sarl
push
push
mov
lret
stc
jle
aaa
lds
imul
rcrl
xchg
lahf
test
lds
shll
sbb
jne
mov
fldcw
pop
pop
pusha
dec
adc
ljmp
sbb
hlt
test
mov
scas
icebp
addr16
rcrl
int
popa
push
clc
xor
fildl
lods
add
mov
dec
pushf
pop
ret
out
sbb
push
push
faddl
or
adc
lcall
shrb
jl
push
rorb
into
push
das
mov
rcrb
pop
popa
sti
repz
and
mov
add
in
pushf
andb
xchg
enter
mov
sbb
inc
stos
mov
push
adc
xchg
sahf
jae
add
ret
pushf
mov
pop
outsb
arpl
cltd
jl
loope
test
or
dec
or
popa
lcall
imul
fmull
out
push
mov
sbb
push
in
xor
rorl
out
test
movsb
test
xchg
nop
ds
ja
xor
push
dec
sti
adc
repnz
leave
cmp
add
filds
mov
push
pop
fwait
scas
scas
push
jle
inc
push
pop
ja
or
pop
test
or
lods
adcb
add
ds
int3
outsl
shl
sbb
mov
jbe
addl
push
xorb
mov
mov
popf
push
int
lds
loope
outsl
mov
outsl
push
int3
in
pop
test
jg
cmpsl
inc
pop
push
jge
pop
es
mov
mov
jno
rorl
mov
mov
sbb
test
es
push
push
mov
sub
cmpsb
dec
addr16
ss
pop
fs
cmpsl
pop
lods
mov
js
movsb
imul
jns
ds
ljmp
push
rcr
inc
xchg
aad
mull
ds
mov
ficompl
mov
xchg
rcr
push
mov
shlb
sahf
into
lea
stos
jae
imul
into
xchg
mov
pop
sbb
insl
popf
cmc
arpl
sti
imul
shll
stos
push
cmp
and
mov
sub
xor
jne
lock
ret
lds
sub
js
addr16
push
fildll
scas
xor
scas
iret
lcall
mov
gs
sbbb
add
pop
mov
pusha
xor
int3
sbb
xchg
mov
add
sti
jmp
loopne
lock
mov
data16
add
mov
dec
push
xlat
movsl
sbb
lahf
xchg
roll
dec
das
and
fadds
jns
in
adc
sub
xor
mov
aaa
adc
push
dec
adc
push
jmp
loopne
pusha
xor
outsb
shlb
xlat
pop
adc
rcr
or
xor
push
pop
mov
xor
nop
add
inc
cmp
jae
call
jnp
in
jl
icebp
scas
std
int3
clc
bound
call
daa
mov
std
fidivs
imul
fs
dec
mov
inc
arpl
inc
fistl
mov
push
sbb
jle
sbb
fldl
call
das
shlb
jp
aad
dec
das
sub
or
movsl
xchg
xor
aaa
sahf
vmwrite
aam
test
loop
pop
xor
pop
or
xchg
cmp
xchg
lock
cmpsl
fcoml
imul
test
ror
dec
xchg
idiv
xor
mov
jge
add
inc
xor
loope
lods
rorb
lods
or
adc
mov
insb
das
xchg
jmp
aam
insb
popf
xor
call
fimull
insb
insb
enter
mov
xor
push
leave
jno
inc
test
mov
dec
jp
dec
mov
push
add
jnp
scas
outsl
test
cli
xor
inc
nop
or
cwtl
cli
sub
push
sahf
inc
ljmp
sub
and
lahf
push
sub
inc
lods
cmp
rorl
lods
loopne
lea
fisubl
nop
xchg
adc
ja
pusha
addb
in
in
out
jbe
jl
sbb
std
std
jge
add
xchg
test
push
sub
lcall
in
ret
xchg
or
dec
or
lock
push
jg
or
adc
inc
mov
popa
inc
out
adc
adcl
adc
cmc
imul
jge
add
jecxz
out
mov
movsb
iret
pop
sti
test
xor
jb
add
jno
test
sbb
cmpl
pop
jge
mov
jae
mov
test
andb
adc
enter
test
orl
mov
inc
cmp
mov
ja
cltd
test
add
push
stc
cmpsl
or
cltd
cmpsb
push
popf
cmp
daa
fnstcw
push
mov
hlt
xchg
lcall
cmp
xchg
pop
push
or
imul
ds
mov
mov
imul
clc
push
dec
dec
mov
bound
pop
in
incl
ds
add
xchg
imul
xchg
cmp
mov
adc
popf
push
aaa
pop
inc
push
cs
or
rorb
mov
xlat
cld
and
aaa
dec
mov
add
xchg
lahf
or
mov
incb
mov
outsb
pop
inc
loope
xchg
sbb
pop
aam
mov
test
push
push
popf
push
mov
aas
or
cmp
pop
imul
xor
cmp
loope
mov
jae
xor
pop
ljmp
pusha
int3
mov
inc
xor
mov
jge
hlt
sbb
inc
mov
xchg
lahf
lea
mov
xchg
xchg
xor
mov
inc
in
mov
xor
fwait
cmc
xor
loop
and
mov
imul
jnp
lahf
or
mov
clc
xorl
xor
int
mov
inc
cmp
sbb
out
cld
hlt
loopne
dec
push
rcll
fwait
cltd
pop
mov
js
out
cmpl
into
mov
cmp
push
adc
cmpsl
sub
cmp
lods
cmpsl
aad
fildll
imul
pop
inc
sub
std
pop
adc
lahf
cmp
cmp
jle
ss
or
or
dec
loopne
and
push
ljmp
xor
sbb
imul
cmp
sub
or
mov
loop
fidivs
and
loop
or
jmp
popf
mov
cmp
inc
mov
xor
sti
inc
fwait
shlb
mul
scas
into
imul
push
push
out
add
call
repz
leave
xchg
mov
mov
shr
in
test
pop
lret
sbb
or
dec
jge
movsb
shlb
add
test
movsb
hlt
das
inc
fidivl
enter
aad
dec
lret
pushf
or
roll
pop
lret
popa
mov
je
aas
inc
inc
ja
cmp
sarb
aas
pop
or
or
lods
add
cmp
add
mov
sbb
cwtl
mov
fs
sbb
cs
leave
int3
movsb
inc
ss
push
ds
in
xchg
push
or
std
dec
stc
cmc
fstpt
cwtl
lods
decl
xor
lea
call
sub
test
jl
paddq
ds
mov
mov
jns
imul
cmc
mulb
mov
pusha
stos
data16
test
ja
pop
enter
or
cld
mov
sub
ja
fndisi(8087
xchg
inc
xchg
mov
push
pop
xlat
jbe
sbb
add
sti
xchg
mov
insb
inc
dec
es
pop
inc
jb
fidivrs
add
xor
ret
push
je
dec
cmpsb
xchg
arpl
out
and
unpckhps
into
call
mov
cmp
and
lahf
aad
xchg
push
outsb
jne
pusha
push
and
xor
mov
mov
lahf
mov
fldt
call
mov
int3
mull
mov
fnsave
lods
or
icebp
sbb
add
shl
ror
adc
xchg
js
sbb
repnz
mov
mov
add
inc
and
das
jbe
mov
loope
mov
dec
test
xor
loope
int3
sbb
jmp
ud0
stc
sbb
mov
pushf
sbb
rcll
sahf
lahf
pop
mov
pop
ret
imul
rol
xchg
daa
adc
adc
inc
shrb
xchg
rolb
cmp
jo
lcall
sbb
ret
add
sbb
hlt
push
push
and
or
imul
fwait
mov
jo
cltd
cwtl
stos
cmpsb
push
pop
ds
xor
mov
add
jae
outsw
jbe
leave
or
cli
xor
ljmp
sub
ja
xchg
shrb
popf
out
jl
rolb
mov
xchg
or
loop
es
sub
mov
andl
jb
iret
sub
repz
jns
jno
sbb
in
sbb
sbb
sbb
sbb
and
inc
mov
adc
sub
mov
fnstsw
fistpll
xchg
dec
cmp
mov
daa
inc
cld
lret
gs
add
mov
je
jb
inc
push
insb
xchg
enter
xor
push
add
add
fs
adc
and
das
xor
sbb
xor
out
mov
or
mov
rol
mov
jl
push
shll
popf
and
jmp
push
xchg
xor
inc
inc
test
out
cmp
cvttps2pi
movsl
lock
mov
clc
out
data16
lds
fnstenv
ret
popa
mov
aam
pop
mov
xchg
inc
and
rep
out
dec
call
adc
jg
inc
in
sbb
movsl
push
ret
cltd
les
push
add
in
scas
mov
aaa
cmp
fsts
xchg
adc
sbb
ljmp
aam
xchg
rcr
push
cmpsl
arpl
push
dec
jne
inc
sub
or
push
scas
sub
xchg
jae
pop
pop
adcb
cmp
mov
mov
test
fadds
inc
loopne
adc
outsb
jl
mov
addr16
push
jns
mov
in
dec
xor
mov
repnz
filds
mov
mov
mov
and
enter
xchg
push
mov
iret
sbb
mov
push
or
jno
jl
adc
push
or
inc
jnp
sub
mov
sti
stc
mov
out
jle
cltd
or
std
inc
sbb
or
pop
pushf
cld
or
andl
and
scas
mov
and
jecxz
in
dec
add
ret
inc
lods
push
ljmp
push
and
in
andb
cmp
call
sbb
jne
fidivs
stc
cmpsb
mov
push
or
jle
add
fdivs
stos
dec
pushf
add
inc
cmp
or
push
jecxz
jge
les
jmp
push
pop
mov
hlt
stc
insb
js
mov
dec
insb
push
adc
out
adc
bnd
mov
jg
loop
jmp
pop
fnsave
inc
jns
sbb
or
or
test
gs
mov
into
filds
out
pop
mov
lcall
clc
add
test
xchg
mov
arpl
xchg
pushf
rol
add
mov
add
bound
clc
in
fbstp
adc
add
rorb
mov
jg
cs
mov
pop
inc
pop
pop
in
test
mov
lcall
movsl
imul
xor
dec
jae
call
or
and
jmp
fcoms
int3
mov
popf
insb
shll
negb
adc
insl
mov
pop
or
mov
popf
sub
pop
mov
imul
jle
divb
jo
sub
jae
fisttpll
jbe
cwtl
jge
das
pop
cltd
pop
sub
imul
inc
into
pop
lds
fstps
pop
pop
loopne
enter
ficomps
dec
push
jo
cmpsl
test
stc
ja
out
outsb
dec
iret
push
xor
pop
jbe
mov
imul
in
and
xor
jge
lcall
add
bound
imul
mov
dec
pop
test
ja
or
fisttpl
repnz
icebp
sbb
mov
shll
shr
notb
lcall
inc
jmp
mov
imul
loope
adc
ret
add
cmpsl
push
fnstenv
dec
rorl
push
insl
and
lret
clc
xor
inc
push
popa
jb
mov
lahf
imul
addr16
and
xchg
jb
push
outsl
push
aaa
xchg
xor
aas
push
mov
lods
cmp
add
jb
dec
imul
mov
jo
jnp
sub
pop
push
xor
mov
push
into
xlat
push
mov
jecxz
ficomps
mov
sti
dec
and
push
push
or
cmc
mov
test
mov
rcl
shlb
pop
stos
inc
mov
jmp
jb
mov
imul
lret
or
mov
sbb
or
scas
mov
dec
lea
xchg
popa
or
push
nop
jo
cmpsb
push
and
push
dec
add
push
xor
dec
lahf
add
sarl
je
xor
rorl
out
sbb
push
fildl
cli
mov
mov
mov
push
mov
repz
mov
sbb
leave
es
push
repnz
xor
cmp
cmpsl
popa
and
push
or
cmp
lods
mov
pusha
xchg
rol
cmp
idivl
cmc
rclb
lea
push
int3
lds
dec
popf
xchg
hlt
call
out
fcomps
cmp
fildl
pop
out
aaa
push
jle
notb
xlat
je
adc
add
mov
mov
cmp
sbb
lahf
fistl
sbbl
xlat
sbbl
sbb
push
inc
sbb
jp
pop
scas
js
mov
lahf
pop
dec
popa
adc
sbb
inc
test
push
mov
xor
imul
mov
jns
pop
daa
push
fmul
rorb
in
call
xor
mov
mov
dec
int
dec
jge
mov
sbb
es
rcrl
inc
inc
shlb
mov
mov
lea
xor
test
cmp
pop
mov
dec
pushf
fwait
leave
xor
addr16
add
pop
jecxz
repz
jmp
push
fnsave
test
push
cmp
push
fnstsw
cmp
jl
fs
mov
add
push
push
ljmp
clc
dec
in
cltd
xchg
mov
jle
add
scas
insb
fidivs
cltd
das
aaa
sub
gs
pop
fnstcw
enter
dec
addl
pop
or
push
test
mov
pusha
scas
mov
push
pop
push
adc
es
and
pushf
test
inc
cld
neg
hlt
dec
mov
mov
movsl
aaa
aam
and
out
xor
sbb
and
push
fnstcw
xlat
adc
mov
fldenv
xchg
jle
scas
mov
dec
mov
push
aam
shrl
add
cmp
stc
into
dec
pop
push
ss
dec
dec
jle
lds
xchg
and
mov
bound
aaa
sbb
add
pop
pop
stos
in
dec
jecxz
les
adc
and
ja
out
fwait
scas
xlat
push
pop
addr16
out
sbb
xor
shr
lahf
or
movsb
adc
nop
cld
lcall
mov
popf
int3
ds
jle
jo
in
movb
and
iret
xchg
sub
jge
cmp
out
mov
into
inc
out
push
jmp
cmp
jl
inc
in
jmp
cltd
aad
jno
outsb
pop
push
jno
test
xor
hlt
cmpb
push
or
xchg
pushf
mov
fistps
xor
cmpsl
adc
or
out
ficoml
out
sbb
inc
gs
push
mov
xor
add
mov
pop
mov
arpl
add
dec
xor
fstpt
mov
pop
pop
sub
dec
dec
arpl
pop
mov
ss
gs
fistps
cwtl
das
testb
das
ret
inc
fimull
push
jo
cmp
and
sub
rcrl
xchg
push
mov
add
cmp
popa
push
inc
mov
push
repz
subb
inc
xor
sub
adc
push
cld
leave
mov
cli
cmp
add
mov
mov
xchg
mov
jnp
push
sbb
fcmovu
imul
inc
stc
inc
and
jb
leave
mov
popa
add
add
outsl
push
pop
iret
sarl
imul
jns
adc
push
lret
xchg
sbbb
pop
sarb
mov
out
lods
add
pop
in
xor
clc
mov
mov
cli
mov
mov
ss
or
push
out
dec
repz
push
movsl
xlat
inc
pop
pop
adc
arpl
inc
mov
loop
pusha
push
jo
test
adc
pop
lcall
test
cmp
or
arpl
mov
jecxz
out
mov
mov
push
cltd
jb
roll
loope
pop
sub
mov
push
dec
push
stos
mov
ds
sbb
int3
cmp
test
loopne
cmp
ds
sbb
lea
mov
hlt
lahf
lods
test
negl
subl
fadds
and
stc
es
push
jecxz
xchg
or
popf
aad
pop
lret
and
jnp
out
jne
inc
repz
fnsave
sahf
test
pop
jg
pop
je
mov
dec
fs
hlt
aam
push
mov
lods
test
push
push
leave
loop
mov
push
jne
scas
push
in
add
sub
mov
mov
icebp
js
sahf
cmpsl
xchg
pop
xor
xchg
push
xchg
cmp
add
cmp
call
jne
mov
mov
cmp
mov
push
insb
fs
mov
add
ljmp
sbb
into
mov
pop
mov
rorb
sbb
les
jae
sbb
add
jl
mov
clc
dec
adc
dec
push
stc
push
mov
pop
sahf
pop
push
out
repnz
mov
ds
out
pushl
mov
mov
out
mov
pop
xor
outsl
stos
arpl
cmp
mov
sti
cli
das
dec
cmp
cmp
jnp
xorb
test
clc
xchg
call
ja
mov
push
sbb
imul
mov
xlat
pop
mov
into
mov
test
mov
outsl
dec
aaa
cmc
push
int3
pop
inc
pop
inc
sbb
jns
mov
cmp
mov
mov
leave
dec
xor
sub
pop
sbb
loopne
lock
jl
dec
dec
lcall
test
push
lods
xor
or
add
cli
mov
aad
sub
sti
inc
stos
pop
inc
xchg
cmp
mov
iret
pop
rcrb
insl
ja
pop
mov
sub
test
and
fistpll
push
subb
or
out
repz
cmp
adc
jb
pusha
xor
sub
loope
das
or
shll
jo
inc
or
cmp
loope
inc
inc
insb
es
cmc
inc
mov
dec
cmpb
rclb
and
xor
fidivs
xchg
push
imul
enter
and
ljmp
mov
xor
test
dec
xor
arpl
or
in
stos
pop
iret
ljmp
add
mov
inc
fmuls
rorb
push
dec
xchg
test
inc
rolb
ja
je
dec
pop
cmp
cld
push
jnp
or
jne
mov
rolb
jb,pt
or
jae
adc
sub
add
sti
adc
adc
cmp
xor
clc
and
in
out
subl
pcmpeqd
xchg
inc
aam
pop
cmpsl
xchg
jnp
hlt
push
push
cs
jl
test
add
adc
mov
movsl
testl
mov
ljmp
aaa
es
mov
sbb
sarl
jo
cmpsb
pop
jno
sub
sbb
hlt
push
gs
popa
movsb
pop
inc
jbe
xor
and
fnstsw
outsl
jbe
faddl
jne
inc
jge
arpl
xchg
adc
ja
neg
jl
ret
or
sub
jl
cli
das
or
test
int3
cmp
adc
inc
dec
and
sbb
mov
int3
es
sub
fwait
and
cmpb
loop
mov
iret
js
sub
je
ret
in
push
int3
inc
mov
jp
out
popa
movsl
and
jmp
inc
call
daa
icebp
and
cmp
out
ss
xchg
adc
or
sbb
cmp
mov
das
jge
xor
sub
es
or
mov
pusha
adc
cmp
and
aas
shll
dec
mov
dec
or
sub
fimuls
dec
xchg
mov
push
fwait
bnd
loope
ljmp
cwtl
std
sub
loop
lret
lea
lahf
call
int
dec
pop
lret
loope
loopne
push
test
clc
jb
ljmp
jo
pop
mov
rol
add
and
loopne
lea
out
addl
or
stos
mov
or
jp
shrl
push
or
data16
push
inc
dec
icebp
adc
xor
or
mov
rorl
ds
in
aas
pop
or
jg
andl
nop
mov
ss
shll
jns
sbb
or
sub
enter
or
dec
imul
jns
and
add
xor
adc
cltd
lods
and
add
mov
popa
icebp
pop
push
xlat
push
gs
and
scas
mov
cmp
jbe
mov
jbe
decb
or
movsl
or
ds
mov
lcall
maskmovq
testl
dec
out
mov
lcall
mov
mov
adc
in
mov
or
sbb
test
push
aaa
and
sub
sub
adc
sar
push
out
jno
push
lods
fcmovne
orb
dec
call
cwtl
cmpsl
xor
lcall
jle
mov
shll
fstps
xorl
lock
js
cmpsb
out
pop
stc
insb
movsb
out
aam
call
outsl
les
pusha
push
mov
xor
push
push
pop
insb
test
mov
pop
inc
mov
pop
out
aas
je
scas
cmc
lock
add
pop
mov
mov
cmp
subl
sbb
or
mov
adc
loop
test
fwait
mov
xchg
and
push
push
stc
mov
or
sbb
ret
fldcw
mov
daa
xor
push
das
cltd
mov
or
pop
jp
sbb
cmc
inc
dec
add
insl
movsb
fstps
sub
pop
fdivs
xor
jo
jns
ret
sub
and
insb
stos
cmp
cmp
mulb
xchg
or
in
in
adc
xchg
cmp
adcb
jmp
ret
cmp
loope
cmp
xchg
mov
mov
mov
es
or
jae
int3
adc
mov
mov
push
jne
das
add
fstps
in
enter
mov
mov
jbe
stc
leave
xchg
xor
dec
mov
fistpl
sub
mov
xchg
push
iret
cltd
dec
xchg
pusha
fdivp
cmp
shlb
mov
ficoml
and
mov
or
into
aad
mov
orb
push
popf
xchg
mov
and
cmp
pop
sbb
ljmp
rep
xchg
jo
jp
jo
inc
icebp
inc
pop
enter
int3
push
add
call
add
pop
mov
rorl
add
lahf
cmp
into
icebp
pop
aas
pop
ds
addb
sub
jnp
aam
add
cmpsb
cmp
lock
popf
xchg
repnz
mov
pop
outsl
jg
inc
invd
or
out
adcb
mov
popa
jge
call
fiadds
sahf
xchg
ret
mov
pop
pop
popf
hlt
outsb
lods
scas
es
mov
and
dec
aad
mov
xor
adc
out
es
and
xchg
jmp
test
mov
push
adc
jp
rcrb
lahf
sahf
add
gs
cmc
xor
lret
or
fstl
mov
pushf
dec
cmp
xor
xor
call
inc
lahf
dec
mov
mov
ret
iret
adc
add
xor
movsl
dec
push
pop
pop
mov
enter
fildll
iret
pushf
push
xchg
jmp
int
inc
ds
mov
jbe
and
adc
ja
push
fistpll
stos
clc
imul
mov
cltd
test
jge
mov
xchg
or
xchg
mov
and
in
lds
and
jmp
adc
stc
push
movsb
sbb
jl
mov
add
and
pushf
or
ds
jb
andb
sub
fisttpll
shrl
popa
xor
movb
push
loopne
pop
and
popf
mov
mov
repz
aam
xchg
dec
mov
aad
call
fwait
enter
out
or
xor
mov
insb
push
mov
dec
mov
inc
pop
inc
dec
fwait
jecxz
mov
leave
hlt
xchg
fists
fnsave
mov
shlb
push
test
jmp
push
lahf
add
insl
lds
inc
push
ret
loop
shrl
inc
jecxz
fdivrp
lea
clc
in
ds
lods
adc
fmul
enter
ret
fadds
mov
ret
mov
pop
cwtl
std
push
jae
sub
push
adc
divl
mov
inc
push
jne
mov
sbbb
sbb
lods
sbb
jle
mov
dec
rcrl
call
and
fmuls
es
lods
add
stos
pop
mov
xor
test
fidivrl
rcrb
in
pop
mov
and
fs
pop
dec
add
xchg
enter
aam
sub
mov
add
lock
push
and
lods
or
ja
hlt
mov
sub
stos
push
xchg
xchg
xor
mov
pop
push
mov
inc
pop
imul
test
fs
mov
nop
or
dec
pop
mov
cmp
inc
and
lcall
mov
out
cld
adc
cmc
cwtl
les
sbb
ja
insb
xor
jns
cmpb
and
cltd
push
sbb
hlt
xchg
or
push
fstpl
test
sbbb
in
mov
je
xor
xlat
loope
popa
jmp
mov
lret
scas
jl
mov
and
jo
in
ror
xchg
std
or
xor
or
leave
mov
lods
pop
push
sbb
pop
sahf
test
pop
daa
adc
inc
movsl
or
mov
fisubl
and
dec
adc
mov
enter
in
xchg
fxch
add
sub
stc
aam
dec
inc
mov
sub
push
adc
stos
push
aad
push
test
cwtl
dec
hlt
push
sbb
inc
data16
jno
sub
cs
and
add
arpl
adc
mov
sbb
mov
add
movsb
scas
cmp
push
sbb
adc
xor
push
pushf
pop
pop
mov
out
push
shr
pop
clc
and
ljmp
pop
out
es
mov
xchg
sbb
cmp
loop
rol
clc
jge
xor
mov
repz
adc
cmp
pop
adc
xchg
es
jecxz
xchg
or
mov
ds
out
sub
or
mull
push
pushf
fisubrs
cwtl
sti
xchg
aas
inc
ror
mov
in
in
push
sbb
gs
mov
test
fsub
stc
insl
mov
sub
dec
fs
filds
mov
pop
faddl
fcoms
repnz
iret
cld
xchg
inc
add
sbb
mov
jge
xchg
jp
dec
lahf
and
rep
fwait
ret
rorl
cmpsl
dec
pushl
pop
fiaddl
sub
push
mov
scas
push
testb
out
or
ret
dec
mov
mov
out
mov
jg
outsl
dec
inc
pop
jg
xor
push
dec
jo
out
fstpt
out
leave
mov
gs
jae
lret
mov
cld
loopne
iret
leave
mov
es
lahf
add
popf
daa
cmp
sbb
lods
jp
dec
popl
mov
arpl
jmp
push
scas
adc
mov
into
mov
cwtl
sbb
xlat
adc
icebp
pop
cmp
xor
mov
mov
jbe
incl
pop
xchg
dec
lds
dec
mov
cli
sub
sti
lea
cltd
loop
or
stos
sahf
sahf
cmp
mov
cmpsb
cld
pop
add
mov
push
mov
cmpsb
or
stos
mov
lock
enter
sub
mov
pop
mov
xor
imul
cmp
jmp
call
stos
insl
mulb
cli
fwait
or
shl
call
lcall
sarb
push
sbb
std
aad
hlt
mov
xchg
dec
pop
scas
int
sbb
sub
notb
sbb
outsl
hlt
dec
cmpsl
inc
repz
lea
adc
inc
jmp
cli
push
dec
inc
rorl
gs
outsl
add
arpl
inc
out
ja
and
xor
mov
pop
cmp
pop
sbbb
sub
cmpxchg
inc
dec
cmpsb
rorb
pop
cmc
stos
sub
cmpsl
pop
mov
loop
rcll
pushf
shl
mov
mov
test
xchg
dec
cmp
shll
add
cwtl
arpl
rolb
lds
ret
dec
cli
jo
nop
and
jp
or
adc
jmp
test
add
mov
xor
call
push
dec
and
mov
jg
bound
test
or
leave
sub
lret
int
sbb
fwait
clc
mov
out
sbb
imul
push
fldl
mov
mov
dec
mov
cmpsb
movhps
repnz
sub
insl
orl
mov
adc
push
pop
jmp
jp
inc
pop
stos
jp
lds
cli
push
fstps
xchg
jnp
bswap
decb
add
scas
mov
shl
outsb
test
pop
lea
les
adc
sbb
rol
ret
mov
iret
inc
int
dec
in
mov
pop
sub
cmp
mov
jb
int3
lret
and
insl
xchg
shrb
or
in
popa
push
push
xor
lods
adc
call
mov
mov
xchg
fwait
cmp
decl
mov
ret
push
addr16
mov
add
xchg
popf
pushf
pop
loop
aas
dec
and
push
jg
jo
dec
sbb
repz
pop
sbb
push
mov
fsubrp
out
and
popf
ret
pop
mov
lds
mov
aas
sbb
mov
pushf
fmul
lret
stos
cwtl
aaa
out
repnz
or
pop
jecxz
enter
repz
test
mov
aad
push
mov
push
sahf
and
in
xchg
jle
or
loop
mov
std
imul
mov
sbb
and
dec
sahf
add
jbe
into
ljmp
rorl
lret
mov
cld
adc
int
or
or
xchg
pop
sub
mov
cmp
mov
xchg
mov
test
test
or
popa
ds
insb
mov
jg
or
filds
sbb
sub
ret
jno
lods
loopne
icebp
mov
lcall
sar
jno
push
sub
loope
sti
adc
stc
cmpsb
outsb
add
std
xchg
cld
add
or
sub
jae
repnz
push
xchg
push
xor
cmp
data16
pop
mov
repz
dec
inc
or
xor
iret
xchg
xchg
xchg
lret
jmp
inc
cmp
dec
mov
sbb
pop
jge
movsl
je
test
cmp
imull
mov
mov
push
cltd
adc
int
int3
lret
cwtl
cmp
sub
pop
jge
cmp
push
dec
mov
ss
jmp
or
and
arpl
mov
and
xchg
test
leave
add
xor
cmpsb
xchg
cmp
pop
pop
addr16
add
fucom
or
mov
in
adc
fwait
loop
fldl
or
mov
aaa
push
lds
and
insb
clc
cmp
aas
push
arpl
add
lock
in
cmp
stos
push
insl
fwait
mov
pop
adc
push
mov
andl
inc
cmpsl
mov
mov
pop
inc
sbb
imull
jl
test
xchg
mov
mov
dec
pop
and
fldl
cltd
xchg
int3
xchg
aam
push
xor
popf
mov
jge
and
mov
sub
xchg
adc
cltd
outsl
popa
insl
add
fnstenv
shrb
xchg
or
arpl
jns
in
cmpl
adc
push
jmp
push
mov
lret
loopne
shll
pop
push
push
scas
in
inc
aam
dec
es
xor
and
and
sub
call
movsl
adc
inc
and
xor
insb
lcall
dec
lds
push
cmp
out
and
or
adcb
inc
ror
cmp
repz
stos
mov
in
dec
movsb
cmp
test
movsl
inc
lcall
jo
and
mov
xchg
or
push
push
xchg
pop
nop
mov
or
popf
clc
or
daa
pop
add
imul
jo
movsb
pop
je
in
dec
pop
push
repnz
jmp
test
adc
test
xor
xor
and
leave
pop
loope
xchg
das
push
fcmovnb
add
xor
mov
addb
into
sub
repnz
sbb
push
sti
or
mov
out
cli
div
pop
outsb
adc
xchg
or
dec
dec
push
inc
cmc
inc
adc
mov
es
ret
repz
push
dec
xor
pop
out
fsubr
pop
repz
fisttpl
adc
mov
int3
hlt
or
prefetch
or
enter
cmc
sbb
jge
sub
outsb
leave
out
sub
sub
imul
or
push
cltd
mov
push
mov
add
or
loopne
pop
inc
add
inc
cld
loope
ret
xchg
xor
pop
mov
xor
loope
sbb
aaa
push
das
addr16
jno
setle
adc
test
cmp
imul
add
jbe
and
out
mov
std
imul
bound
cmp
jne
mov
aad
mov
mov
mov
subb
pushf
test
imul
fs
lret
xchg
push
aad
push
hlt
fwait
sbb
int3
and
pushf
aas
jl
xchg
popf
push
mov
subl
scas
sub
out
pop
iret
mov
or
xchg
or
jg
cmp
pop
push
dec
aam
rorl
and
dec
cmp
sub
mov
es
rcll
in
jns
pop
test
adcl
jp
mov
fiaddl
cmp
cmp
imul
xchg
mov
sbb
lods
jmp
fcoms
les
mov
insb
mov
mov
cmc
lds
mov
mov
mov
rorl
pop
stos
imul
in
in
mov
dec
adc
sbb
lea
repnz
cmpsl
test
cs
and
fldcw
cmp
mov
fisttpll
sub
xor
addr16
pop
loope
ja
xor
cmp
fisttpl
lods
inc
dec
adc
add
jge
adc
lahf
sub
imul
adc
fs
leave
daa
mov
jmp
mov
mov
pop
push
adc
xchg
or
jns
cld
vpscatterdd
repnz
aas
mov
into
or
or
cmp
or
jno
in
add
outsl
test
nop
mov
lock
cwtl
dec
ficoml
push
test
sbb
inc
mov
lock
lock
jmp
push
adc
mov
stos
dec
adc
rcll
push
xor
xchg
inc
push
push
mov
xor
aam
nop
cmp
out
pop
cmc
jp
mov
cmp
out
addb
and
mov
out
mov
mov
lcall
push
clc
pop
jge
ret
adc
std
ret
out
arpl
xor
shlb
cmpb
clc
fmuls
sub
lods
mov
xor
adc
mov
filds
lea
sbbb
daa
scas
fsts
jbe
adc
pop
mov
mov
push
xchg
push
inc
push
filds
push
ret
xchg
pop
loope
shlb
sbb
and
in
add
pushf
and
push
xchg
jecxz
pop
xchg
ret
lretw
inc
adcb
loop
pop
sbb
xchg
mov
pop
or
sbb
fucomip
dec
xor
lea
xchg
push
movsl
dec
sbb
push
int
inc
dec
mov
inc
into
jecxz
negb
je
push
stos
mov
dec
dec
icebp
sbbl
mov
lods
int3
inc
fisttps
xchg
es
jae
call
push
fdiv
lods
lock
add
pop
pop
push
inc
jl
cmp
push
in
ret
or
rorb
addr16
push
pusha
mov
shrl
mov
rcrb
sarb
xor
add
lock
pop
imul
sbb
incb
xchg
cmp
inc
xor
aas
stc
jno
push
aaa
cmp
dec
sbb
iret
add
mov
orl
fwait
pop
pop
push
sub
dec
addr16
xor
fdivl
mov
pop
pop
popf
ds
mov
movsb
movsl
add
jns
push
scas
inc
icebp
mov
arpl
and
fcmovu
sbb
pop
ffree
aad
rcrb
jg
ljmp
push
lcall
stos
cmp
ss
xor
lret
mov
movsb
sbb
setnp
xor
sub
sub
cmpsb
inc
adc
in
mov
sti
andl
add
inc
leave
jp
adc
movsl
stos
mov
jl
dec
mov
jne
mov
ja
rep
sbb
addr16
pop
movsb
imul
mov
mov
ljmp
lcall
and
lock
push
imul
fcmove
iret
ret
out
cmpsb
xchg
push
in
and
push
jmp
outsb
mov
pop
popa
sbb
shrl
xor
or
stc
sub
xor
jbe
and
popa
rolb
xor
scas
push
sbb
sbb
push
pop
mov
lahf
ss
loop
add
out
xchg
popa
jge
pop
ret
rcr
popf
dec
movsl
dec
rcr
ja
lret
test
push
jnp
mov
mov
neg
sbb
aas
lds
enter
rsm
outsl
sbb
mov
lahf
jo
pop
bound
inc
leave
cmp
jae
call
cmp
mov
mov
push
fcom
sbb
xchg
out
ja
jnp
mov
adc
mov
das
scas
loope
mulb
adc
bound
mov
or
das
lahf
dec
push
js
das
mov
and
sub
or
adc
lods
mulb
mov
iret
adc
pop
sub
xchg
stos
es
push
push
cltd
cld
test
xchg
aas
xchg
insl
sub
inc
jecxz
dec
out
inc
push
mov
loop
or
cmpsl
mov
nop
xlat
scas
mov
sbb
sbb
popf
les
sub
push
cmp
pop
inc
arpl
lods
ds
and
notb
cmpsb
pushl
aam
je
movsb
push
mov
lock
mov
iret
bound
push
adc
out
xor
lcall
mov
ja
into
fs
mov
add
lea
sub
pop
jbe
dec
pop
mov
imul
arpl
arpl
les
xchg
and
mov
mov
mov
mov
pop
adc
add
xchg
cvtps2pd
inc
pop
cltd
or
inc
pop
sub
in
fcom
fs
pop
pop
ss
enter
fwait
pusha
mov
push
sbb
sbbb
dec
test
fldt
daa
sti
ret
pop
scas
rorl
mov
mov
xchg
aas
fiaddl
je
ss
xlat
pushl
leave
sub
inc
push
sub
gs
loope
das
int3
std
sub
lock
jge
jecxz
dec
insb
and
push
xor
icebp
lcall
pop
or
out
je
scas
popf
roll
lock
mov
mov
cmpsl
add
adc
adc
xchg
push
push
mov
addr16
lds
sub
dec
jno
aad
fisttpl
jne
rolb
mov
push
js
sub
test
push
dec
adc
idiv
test
pop
lahf
xchg
cmpb
push
jecxz
ret
push
jae
dec
mov
pop
pusha
and
jbe
shll
xlat
mov
sbb
inc
divb
ja
jb
xchg
nop
out
jbe
dec
mov
dec
fadds
lds
insl
fld
mov
xchg
popa
cmp
das
and
stc
into
int
pop
arpl
pop
lcall
fmuls
sbb
jno
fs
pop
mov
adc
in
push
cmpb
mov
xorb
cmp
mov
cwtl
add
push
mov
mov
push
test
lods
cmp
addr16
cld
jno
cmpsb
in
jp
sub
push
push
in
cmp
xlat
sub
push
add
repz
xor
pop
aas
rcrl
dec
stos
jge
ret
ds
movsb
push
ja
bound
scas
fnsave
jbe
addr16
in
xchg
clc
fldcw
and
push
scas
mov
add
jo
xchg
mov
xor
lret
sti
mov
push
mov
sti
jmp
jl
inc
pop
pop
aaa
xchg
xor
jmp
cmc
dec
cli
push
dec
mov
cmp
xor
push
pop
shll
mov
popa
dec
aas
sub
shlb
mov
outsl
push
push
and
sbb
fcomi
test
xchg
cmp
inc
sbb
loopne
jl
cmp
or
pop
push
push
push
jbe
nop
repz
and
pushf
and
outsb
movsb
outsl
mov
cmp
sub
xor
movsb
add
aad
loopne
fcoms
jns
jecxz
cs
mov
inc
divl
lahf
inc
cld
movsl
dec
pushl
adc
mov
sbb
push
sahf
cmc
les
mov
sbbl
jo
mov
test
xchg
std
push
adcl
and
enter
mov
push
add
or
push
cmp
jo
pop
out
cmp
lods
lods
sahf
cs
fisubrl
and
sarl
and
int
shrb
lock
xor
adcb
add
rcll
sub
incl
stos
cmp
sbb
aad
push
pop
mov
test
jg
inc
cmp
aas
inc
popf
out
inc
imul
es
dec
lods
clc
in
popa
repz
xchg
jl
icebp
test
jb
fwait
je
mov
aas
sub
adc
pop
xor
xchg
jbe
fwait
jo
dec
mov
mov
dec
andb
int3
xchg
sub
adc
add
movhps
mov
aad
jmp
fwait
test
push
cltd
jl
lods
inc
decl
cwtl
popf
pop
adc
sbbb
repnz
pusha
and
cmpsl
mov
xchg
push
mov
jg
in
mov
push
outsb
in
ljmp
imul
popf
scas
ss
push
push
pop
or
ljmp
cmp
std
test
xchg
ret
mov
adc
dec
push
lret
cmp
sti
sbb
mov
jmp
cmp
push
mov
mov
sahf
jl
mov
lahf
jl
aaa
cmp
imul
loopne
aas
call
rcr
sbb
dec
dec
pusha
dec
jns
xor
mov
adc
mov
push
out
dec
ret
add
dec
subb
dec
fidivs
jae
xor
cmp
xor
mov
ds
pop
sbb
aad
out
lock
rclb
les
out
mov
jl
and
inc
mov
int
jp
fimull
xchg
pop
test
mov
outsb
call
int
insl
in
in
inc
adc
pop
hlt
jecxz
adc
repz
jg
sub
outsl
xor
call
mov
push
leave
pop
out
inc
push
daa
lcall
mov
xchg
icebp
xchg
sbb
repz
cmp
jp,pt
cmpxchg
fsubs
js
fisubrs
inc
mov
jg
pop
add
das
mov
add
mov
aas
in
mov
mov
sub
subl
test
aaa
adc
cmp
repnz
sub
sahf
jl
cltd
les
sbb
mov
pop
add
push
add
ret
sub
outsb
mov
repnz
mov
jle
shl
repz
ds
adcb
cmp
clc
enter
orl
fldt
lds
push
in
sbb
inc
sbb
in
jbe
es
shll
jno
test
pop
fists
sbbl
in
je
jns
mov
je
and
dec
mov
push
mov
mov
roll
test
mov
dec
sbbb
lods
mov
loopne
out
add
mov
cmp
mov
xchg
xchg
js
push
mov
pop
lea
loop
xchg
pop
mov
jbe
aaa
jo
mov
fidivrl
sbb
mov
push
in
mov
sub
xchg
pop
call
sub
xor
mov
dec
cmp
sbb
inc
xlat
dec
outsl
jo
addr16
lock
stc
prefetch
cwtl
mov
push
outsb
inc
sub
repnz
mov
mov
scas
cmc
jp
jmp
aas
pop
mov
sub
testl
xorl
pop
mov
out
pop
movsl
or
mov
mov
ja
mov
jnp
mov
gs
cwtl
or
xor
or
sub
cltd
mov
rcr
arpl
fyl2xp1
adc
xchg
dec
daa
dec
in
das
int
xchg
popf
mov
testl
sub
mov
xlat
in
test
push
add
mov
mov
xor
add
push
rolb
mov
daa
add
adc
repnz
jg
add
cmp
add
push
shll
rcrb
pushf
movsb
push
sbb
stos
dec
lods
sbb
push
ljmp
loopne
xor
adc
pushf
cmp
call
test
scas
loopne
push
xchg
addr16
rclb
xor
call
pop
call
xorl
sub
rcr
ret
sarl
mov
clc
sbb
and
and
add
out
push
ja
lds
xchg
bound
inc
cmp
dec
pop
mov
jecxz
aam
pop
and
mov
xchg
inc
stos
out
push
out
aas
xor
add
jmp
mov
push
mov
and
or
xchg
or
scas
dec
mov
inc
mov
jno
and
mov
bound
cmc
lods
or
jl
dec
mov
adc
xchg
daa
ljmp
sbb
es
mov
clc
add
ret
out
fmulp
inc
sub
jecxz
push
mov
call
out
push
mov
or
mov
loop
mov
jmp
push
orl
fsubr
xchg
mov
das
frstor
and
inc
add
fidivl
ljmp
mov
dec
dec
mov
mov
test
dec
sti
pop
mov
push
cltd
xchg
into
sub
js
jne
mov
les
cli
addl
lcall
sub
imul
cmp
dec
cli
stc
scas
mul
test
es
pop
mov
sbb
nop
cld
icebp
test
mov
nop
jbe
pop
mov
sbb
push
inc
lds
std
or
lea
stc
test
imul
xor
lret
push
in
cmp
fldcw
mov
aas
sub
sub
sbb
lahf
pop
sbb
loope
inc
add
adcl
fsubrs
and
test
ljmp
mov
pop
pxor
lods
outsl
add
add
jl
ljmp
in
lods
pop
pop
leave
xor
adc
cwtl
and
inc
add
iret
pop
cmp
loopne
cmp
es
sbb
mov
out
clc
push
in
push
jecxz
adcl
jmp
sarb
cmovb
push
lock
xchg
mov
xchg
gs
sbb
push
sub
sub
insb
stos
pop
or
dec
outsb
jmp
ljmp
loope
jo
int3
mov
int
das
push
pop
aaa
frstor
jecxz
jns
sub
mov
sbb
pop
xchg
dec
adc
js
lods
push
pop
out
js
jecxz
fisttps
in
repnz
lea
enter
mov
or
lock
data16
in
cmc
icebp
aas
fs
dec
loop
mov
or
mov
aas
mov
pop
xor
add
adc
iret
add
sbb
fwait
icebp
sbb
and
adc
adc
or
pop
mov
cmp
fimuls
lahf
leave
pop
and
adc
or
repnz
subb
adc
mov
or
mov
fistps
cmc
mov
xlat
popa
mov
jns
lock
sbb
mov
push
test
pop
inc
push
stos
dec
out
fldcw
cmc
dec
and
jb
scas
push
nop
dec
adc
dec
pop
or
into
addr16
jle
lods
in
in
or
movsl
xchg
pop
lret
cmpsb
pop
pop
dec
jge
mov
into
mov
ret
mov
dec
jle
xlat
rcrl
ret
pusha
mov
andl
lods
test
mov
push
movsl
pop
jo
dec
xchg
jle
clc
mov
push
xchg
out
roll
xchg
out
mov
cld
adc
and
sbb
gs
cli
orb
adc
xchg
dec
jl
sar
fmull
rclb
sti
sub
pcmpgtb
aas
mov
or
inc
inc
adc
and
xor
clc
mov
jg
dec
pop
mov
jns
shlb
test
xchg
iret
pushf
cmp
cmp
or
and
enter
ljmp
fdivs
fsubrs
shrl
int
mov
pop
cmp
or
cmp
sbb
sub
mov
nop
mov
mov
nop
cmp
adc
jmp
stos
xchg
sub
jbe
jmp
ds
cmc
mov
xor
mov
cmp
inc
outsl
mov
dec
mov
or
rcl
hlt
inc
test
xor
cwtl
jo
xchg
push
sub
cmp
adc
cs
or
out
ss
mov
jae
jbe
push
iret
ljmp
sub
cmp
xchg
xor
add
dec
aad
cmpsb
sbbl
push
sub
into
dec
mov
cli
dec
xchg
sbb
lret
filds
cmp
pop
inc
adc
scas
into
mov
mov
jae
lods
shrb
or
pop
pop
cld
and
push
dec
cmpsl
loope
in
push
dec
jecxz
pop
pusha
jecxz
mov
inc
and
fildl
cmp
pusha
iret
xorb
xchg
sbb
cmpsl
fdivl
mov
sub
cli
stos
out
test
xchg
test
push
dec
mov
dec
sub
pop
jmp
fmul
xor
dec
jne
xrelease
jecxz
adc
faddl
mov
push
ds
in
push
lahf
repz
lahf
outsb
test
rolb
fstpl
sbb
add
insl
jbe
push
cmp
test
mov
push
lds
mov
outsl
push
imul
mov
adc
leave
in
or
fsts
cmp
gs
js
shl
mov
mov
pop
fucomip
mov
jmp
mov
xchg
pop
push
mov
pushf
sub
out
inc
push
add
pop
fdivs
mov
not
in
ret
mov
lret
mov
xor
pop
cmp
in
repnz
dec
push
and
pop
pushf
into
mov
mov
lock
rcrl
sbb
aam
lods
shrb
jp
fsubrp
xlat
outsb
xchg
mov
lods
mov
or
inc
fwait
cmp
adc
push
stos
cmp
inc
int3
test
es
in
shl
scas
inc
or
rol
sbb
mov
popf
mov
jae
pop
ljmp
adc
xchg
adc
je,pn
mov
int3
push
mov
mov
loopne
mov
int
sub
mov
pop
add
cmp
inc
mov
cmp
mov
xor
pop
mov
lea
and
movsb
mov
adc
filds
push
dec
mov
mov
push
dec
jmp
sbb
xor
inc
pop
xchg
push
pop
std
jns
scas
es
inc
jb
dec
in
and
cmpsb
f2xm1
push
test
push
ret
push
movsb
pushf
cmp
test
cmpsl
std
cli
mov
push
scas
bound
incl
out
xor
push
mov
mov
adc
mov
stc
push
cltd
cltd
push
aad
sub
jg
dec
loop
ret
push
pop
mov
iret
iret
push
jle
ror
xlat
in
outsb
pop
notl
lds
add
push
testb
mov
das
icebp
cmp
pop
cmc
sbb
sub
jb
dec
fs
cli
jecxz
test
cwtl
xor
mov
mov
out
nop
jne
mov
adc
lods
mov
js
mov
and
addl
adc
lods
les
xchg
notl
dec
xor
bound
and
xor
jo
add
xor
jp
fsubrl
mov
les
rol
popf
mov
fwait
sbb
xchg
and
mov
test
push
push
xchg
and
xchg
das
in
pusha
mov
xor
dec
testb
loop
fisubl
adc
push
adc
or
stos
push
sar
mov
in
aaa
cmp
jnp
das
mov
cmp
loop
xchg
inc
push
dec
inc
rclb
and
sub
mov
enter
pop
btc
test
cmp
test
fadds
mov
aad
pop
pop
sbb
jmp
pop
cmp
test
pop
imul
test
js
dec
setnp
pop
sub
int
nop
ljmp
mov
clc
inc
mov
xchg
fwait
jbe
sbbl
jnp
cmp
add
mov
push
cltd
adc
jnp
iret
xchg
inc
jne
dec
xor
aam
sub
movsl
inc
jnp
jp
xchg
sub
adc
insl
xor
iret
dec
mov
test
clc
sahf
cli
ss
push
sbb
pop
and
mov
cmpsb
call
or
mov
jno
mov
lret
dec
nop
or
bound
inc
sbb
push
movsl
sti
or
inc
or
cmpb
mov
jbe
les
or
and
jmp
pop
or
adc
xor
and
push
xorb
xchg
test
adc
adc
dec
or
mov
inc
jg
pop
xchg
mov
xor
jg
and
shr
test
test
outsl
cwtl
scas
adc
sbb
push
push
mov
pushl
cltd
enter
sub
cmp
inc
pop
popa
imul
fistps
ret
sahf
add
and
mov
push
loope
test
dec
pop
arpl
scas
xor
adc
adc
loope
pop
enter
or
out
int3
xor
scas
adc
mov
lret
sbb
int
xchg
and
loop
jae
xchg
adc
cltd
shll
scas
enter
aad
jnp
pop
push
rorl
out
imul
out
inc
mull
cmp
int
jl
lds
mov
jae
mov
ds
scas
push
pusha
sbb
sbb
jns
sbbl
pop
rcrl
sbb
mov
mov
jp
adc
pop
add
mov
sub
sti
and
loopne
or
loop
movsl
lahf
push
lods
fstl
data16
sti
dec
and
repz
stc
loope
push
inc
testl
xchg
mov
in
nop
insl
fsincos
and
sbb
insb
inc
addr16
movsb
ja
push
shl
cmp
cmpl
push
dec
lahf
xchg
mov
cmp
push
jno
mov
mov
notb
andb
xchg
scas
inc
xor
mov
mov
or
fisubl
or
sbb
adc
fisubrl
adc
clc
ljmp
fxch
scas
popf
loope
test
mov
dec
inc
push
dec
lahf
mov
push
xchg
pop
pop
fidivrl
pop
in
jnp
push
sbb
cld
jne
testl
dec
push
adc
dec
ss
in
pushf
addl
loope
int3
jl
out
loopne
inc
repz
loope
jae
cwtl
rcll
imul
jecxz
mov
in
int
incb
xchg
imul
ljmp
in
std
cmp
xorb
inc
add
outsl
insl
sbb
imul
push
sbb
imul
fimuls
popf
ror
imul
sub
adc
xorb
inc
adc
xor
ljmp
xor
adc
add
cwtl
push
mov
jl
pop
push
xor
xchg
push
ljmp
dec
inc
lods
out
rolb
mov
dec
movsb
test
adc
sub
pop
mov
adc
addr16
cmp
fadd
ja
inc
xor
pop
loopne
sbb
out
inc
xor
les
rcrb
stos
xlat
inc
mov
repnz
sbb
inc
test
jns
int3
insl
jecxz
in
push
xor
push
cmc
subb
mov
cmp
scas
and
xlat
rolb
and
jl
cltd
fxam
xor
xor
loope
pop
ds
push
mov
dec
xorb
stc
and
loope
mov
mov
xor
cmpsl
mov
movsb
in
push
out
push
test
push
sahf
push
ljmp
ljmp
inc
stos
push
outsb
in
push
push
mov
imul
or
jge
mov
jmp
popa
xor
lods
lds
inc
jbe
mov
mov
sahf
push
dec
cmp
jo
mov
sbbl
cltd
mov
aas
aaa
imul
mov
lret
jecxz
inc
loop
clc
and
push
dec
loope
popf
stc
lods
std
and
pop
xchg
movsl
aam
insl
popa
cwtl
std
xchg
sbb
jbe
shll
push
ds
sub
adc
in
inc
out
push
shll
mov
test
daa
call
push
add
pop
out
and
cmovb
xchg
jnp
mov
mov
or
js
pop
scas
cltd
mov
push
sbbl
or
push
sub
inc
repnz
xor
in
aaa
cmp
ja
xchg
pop
cmp
lds
inc
enter
or
dec
add
repnz
mov
call
ds
iret
pop
sbb
cld
mov
cli
sbb
daa
sub
pop
inc
out
push
scas
and
test
icebp
int
fiadds
cmp
sbb
in
jbe
push
mov
sub
std
inc
decb
sub
jbe
mov
out
jne
stos
inc
jns
jo
sbb
mov
aad
inc
pop
mov
push
xchg
dec
in
sub
xchg
stc
call
pop
aas
mov
imul
mov
or
adc
jle
pop
out
mov
repz
adc
cld
push
test
or
out
out
push
sub
xlat
lock
mov
mov
in
inc
divb
sub
jno
adc
push
inc
mov
push
push
inc
xchg
jo
cmpsl
mov
arpl
mov
and
mov
dec
sbb
cmp
jnp
nop
popf
repnz
gs
adc
int3
test
adc
inc
xor
in
mov
jo
and
jnp
xchg
shl
push
and
cwtd
cs
mov
fwait
lods
dec
push
rcr
inc
pusha
out
enter
mov
ret
xor
ror
xchg
mov
lods
fldcw
data16
fiadds
ret
push
inc
test
sbb
mov
push
mov
fs
mov
repnz
sub
or
push
fnstcw
js
adc
push
pop
fsts
cmp
mov
inc
enter
in
and
sbb
hlt
lret
in
jl
fs
mov
loope
cmp
cmp
or
push
pop
sbb
in
jp
jle
adc
pop
mov
or
or
sahf
mov
sbb
push
xchg
xchg
data16
xor
or
test
ret
push
xchg
sub
jb
stos
push
mov
int
pop
push
sarb
xchg
xor
divl
cmp
cs
xor
mov
cmp
sub
sbb
jns
aas
test
sahf
xchg
lea
push
test
test
xor
mov
sbb
adc
sbb
xlat
add
sub
push
pop
rclb
fistl
lahf
rorl
stos
cmc
cwtl
mov
mov
sub
aaa
sub
jne
in
and
add
hlt
jno
imul
mov
mov
leave
bound
or
mov
inc
xlat
aam
mov
xor
sbb
in
lds
shrb
stos
sbb
and
int3
movsl
push
les
stos
jo
jo
xlat
es
mov
shlb
mov
mov
mov
mov
fwait
jmp
or
mov
out
jae
pop
inc
sbb
cs
loopne
andnps
testb
inc
jl
adcl
push
sbb
cmp
jo
ss
jge
pushl
jp
stos
mov
dec
mov
mov
sub
xor
mov
imul
in
push
mov
divb
pop
sub
jbe
pop
mov
jnp
fimull
out
cmc
jl
xor
cld
dec
cltd
mov
clc
fimuls
jne
jmp
dec
sub
add
dec
rcrb
pop
test
push
mov
dec
aas
mov
sbb
xor
xor
mov
xchg
inc
push
jae
sub
ja
mov
movsb
sahf
mov
xchg
jnp
pop
xchg
push
ja
popf
pushf
mov
xlat
icebp
mov
pop
mov
bound
shl
cmp
fists
outsl
mov
mov
mov
cwtl
sub
sti
pop
xor
mov
jae
jmp
daa
pop
mov
mov
shlb
sub
clc
xor
add
into
aas
repz
dec
xchg
hlt
pusha
imul
dec
xchg
push
addr16
adc
mov
pop
and
rorb
mov
sub
aas
mov
mov
jmp
out
stc
hlt
mulb
sub
jo
sbb
stos
fisttps
cmpsl
popf
cwtl
xchg
andl
insb
jno
pop
mov
jne
imul
imul
sub
mov
sub
pop
mov
and
cmp
fwait
dec
jno
out
into
push
jne
in
or
cli
sahf
jmp
psadbw
cmp
inc
pop
adc
mov
scas
lahf
in
adc
jno
sub
or
lret
pop
shlb
cli
call
ljmp
adc
cs
pop
jge
shrb
lret
rolb
or
pusha
mull
lret
mov
inc
andb
aas
sbb
cmc
and
fadds
dec
repz
cld
pop
lcall
sub
aaa
pushf
pop
stos
push
inc
mov
xchg
fs
int3
mov
jmp
leave
sub
or
int
xchg
dec
and
push
test
fimuls
push
sbb
into
and
movsb
pop
aaa
and
xor
or
out
mov
shr
ss
push
mov
sbb
jp
insl
cli
dec
jo
push
adc
jmp
pop
movsl
xchg
mov
fs
mov
orb
mov
cmp
pop
xchg
sarb
lret
mov
inc
xor
fdivrs
les
nop
xor
negl
xchg
dec
negb
mov
pop
inc
mov
jl
jae
xchg
dec
das
fs
cwtl
sub
jg
ja
outsb
mov
xchg
jmp
mov
in
jle
addr16
xchg
fdivrs
into
insb
adc
and
lret
lock
inc
cmc
cmp
ror
out
sub
rol
adc
or
mov
pop
inc
fmul
ret
pop
shlb
xchg
push
std
ret
mov
mov
pop
mov
pop
add
js
roll
cmpsb
add
loop
cmp
jo
sbb
jge
and
dec
shll
jp
mov
adc
pop
nop
pop
mov
push
int
rcrb
push
and
psllq
xor
inc
mov
add
or
or
loope
add
xor
aas
inc
cltd
jnp
sbb
cmpsb
push
xchg
dec
lret
push
imul
cmp
mov
iret
in
cld
leave
sub
stc
in
dec
stos
icebp
pop
jp
outsb
pop
xchg
lds
xor
cmp
xor
sub
mov
cmpsb
scas
popf
push
xor
xchg
push
xchg
lea
ljmp
iret
sti
out
or
jp
sub
jb
pop
mov
in
faddl
adc
push
pop
adc
mov
test
out
and
in
scas
mov
cmp
int3
lock
mov
mov
dec
icebp
mov
shll
test
lea
push
pop
stc
xchg
pop
cltd
sub
and
into
ret
mov
cbtw
mov
xrelease
cmc
jle
or
lock
sbb
push
or
movsb
pop
call
in
cmp
arpl
sub
aaa
push
add
ja
cmp
jb
add
fmuls
lock
mov
push
outsl
pop
mov
add
lods
out
lods
sbb
adc
add
lds
add
mov
hlt
aaa
jecxz
insb
inc
mov
pop
mov
cld
les
push
pusha
pushl
nop
sub
mov
push
xchg
arpl
lods
ss
mov
enter
push
mov
inc
in
and
cmc
mov
push
adc
test
pop
dec
add
push
add
xor
and
mov
hlt
jp
or
jmp
mov
es
jnp
jmp
inc
pop
mov
mov
outsb
or
push
gs
ss
fs
and
flds
jg
mov
xchg
xor
xchg
fcmove
dec
lock
pushf
mov
or
aas
push
sub
js
lods
cs
jge
scas
scas
xor
mov
ja
jnp
xor
cld
cli
mov
mov
movb
add
pop
nop
jnp
cmp
push
cmp
push
movl
jae
fwait
cli
loopne
jne
lock
mov
lds
sbb
mov
cli
icebp
xchg
and
and
mov
xchg
or
mov
pop
movd
fisttpll
mov
cmp
cmp
xor
ss
roll
std
push
or
ret
es
lock
in
jae
arpl
nop
loop
rol
mov
mov
popa
fldl
sub
imul
loope
dec
cli
push
out
nop
jnp
and
aam
cs
mov
xchg
mov
cs
mov
ret
jp
daa
xchg
sub
xor
lea
aam
stc
mov
ret
xchg
xchg
into
popa
or
lcall
cmpsb
dec
cmpsl
aaa
popa
fisubrs
pop
add
sbb
lea
cmpsb
sub
lea
pop
lahf
inc
dec
push
int
mov
dec
outsl
scas
bound
add
inc
push
mov
and
dec
sbb
fsubrp
stos
cmp
pop
rcrl
pop
push
ljmp
inc
jnp
inc
cmp
or
inc
rclb
fdivs
inc
ds
add
sub
shll
cmp
sbbl
adc
xor
adc
mov
jle
ret
repz
xchg
push
dec
ljmp
sbb
sub
xorl
add
xchg
cmp
test
in
addl
roll
inc
enter
sub
jge
jp
shlb
pop
in
je
popf
clc
stos
xchg
mov
shlb
inc
loope
movb
lahf
xchg
push
adc
fs
stc
dec
mov
popa
pushl
fisttpl
xor
push
outsb
pop
clc
popa
iret
sub
aaa
ja
test
xchg
lcall
cmp
addl
mov
shll
fidivrs
test
test
jg
inc
or
loope
push
fiadds
cmpsl
call
push
or
pop
insb
dec
xor
and
sub
lret
call
push
xchg
mov
ds
xchg
shll
pop
lea
inc
ret
lea
loope
ficompl
jge
sbb
or
cmp
dec
ret
jae
mov
popl
mov
repz
test
test
mov
addb
stos
leave
std
rol
sub
sbb
sahf
sbb
ficomps
or
add
sub
scas
jle
repz
jne
ljmp
lret
idivl
and
pushl
mov
insb
stc
call
add
lock
ret
mov
push
cmp
icebp
rorl
cmp
fldln2
hlt
icebp
movsl
mov
mov
ja
or
pop
fwait
sub
xchg
adc
inc
or
loopne
bound
push
mov
es
lods
ss
add
pop
adc
orl
add
sub
adc
xlat
sub
fcomps
mov
out
bound
nop
stos
sub
sub
or
inc
imul
push
and
sarb
or
pop
cli
mov
test
xor
add
inc
mov
inc
test
fstps
sub
inc
mov
scas
add
icebp
or
out
lret
or
jns
xor
or
inc
mov
pop
push
jb
cmp
mov
sub
sbb
cmp
orl
adc
adcl
pop
jns
adc
and
pop
loope
jb
pushf
xor
lahf
insl
jg
mov
mov
scas
jle
mov
nop
repnz
gs
jnp
jmp
cmpsl
cmp
xchg
cmp
lods
sbb
xchg
pop
push
test
stos
dec
aas
mov
loope
cmp
sbb
out
idiv
dec
sub
push
ret
and
pushf
test
insl
imul
stos
push
daa
loop
out
push
out
push
pop
mov
pop
xchg
sarb
pop
int3
jle
hlt
fdivrl
adc
push
fiaddl
lret
dec
mov
fwait
jb
das
sub
or
cmpb
jecxz
subb
scas
and
sub
inc
push
push
sub
mov
test
mov
test
cmpb
mov
incl
rcl
test
test
orl
fcmovne
push
arpl
incb
pop
mov
add
test
inc
inc
outsb
push
repnz
jne
cmp
int3
outsb
sub
aam
mov
lret
stc
mov
cmp
lret
nop
inc
xchg
push
popa
jo
and
test
cmp
out
test
xor
add
ror
lahf
ljmp
inc
mov
sti
fisubrs
jnp
push
int
outsl
dec
pop
mov
dec
pop
out
jnp
pop
xchg
or
sbb
dec
pop
add
cs
mov
mov
sahf
and
or
mov
pop
and
push
test
lcall
mov
mov
mov
aaa
xchg
test
shll
add
and
fwait
hlt
rorl
cwtl
ljmp
int
lock
xlat
aaa
loope
ffreep
insl
ret
cs
stc
jge
mov
lds
testl
fidivrl
ret
fiaddl
push
stos
test
mov
int
jle
or
stc
mov
fmull
jnp
jae
mov
and
adc
faddl
jge
lods
cmp
mov
push
dec
insb
push
mov
mov
mov
or
mov
push
sbb
icebp
sbb
lock
stos
out
jp
cli
call
ljmp
shrl
xchg
sub
mov
cmp
stc
adc
or
mov
cmp
ficomps
inc
mov
sbb
fistl
les
add
insl
cmp
or
and
leave
dec
test
fildll
or
sbb
in
mov
dec
or
sbb
pop
push
repnz
movsl
cmp
or
or
dec
and
aas
jbe
inc
xchg
lcall
cmpsb
or
test
int3
dec
scas
mov
jp
fcomps
or
scas
or
pop
out
pusha
add
push
js
adc
mov
xor
nop
sub
jnp,pn
pop
ds
cmp
cmp
icebp
js
adc
std
out
mov
popa
jno
or
ret
insb
sub
adc
xor
sbb
outsb
xor
inc
cltd
add
stc
sub
mov
xchg
mov
pop
add
js
inc
xchg
rcll
sbb
je
and
jbe
mov
and
xchg
jb
sbb
or
cmc
or
rorl
and
push
bound
loop
into
sub
add
movsb
icebp
push
cld
je
ffreep
hlt
lds
lds
stos
mov
mov
lock
aam
mov
scas
ffree
sar
inc
and
jl
pop
clc
cmpsl
inc
loop
test
sub
and
sahf
xchg
arpl
push
mov
in
fisubrl
cmp
loop
push
sbb
or
pop
repz
dec
loope
sbb
dec
mov
jge
xor
pop
scas
shll
jnp
aas
mov
add
sbb
cmp
cmp
jle
push
mov
lcall
adc
xor
add
hlt
sub
push
xor
in
xorl
bound
mov
mov
mov
xchg
push
movsl
inc
fdivs
pop
or
and
or
mov
loope
lcall
add
dec
call
fucomi
out
or
mov
call
das
jns
pop
mov
les
push
lods
pop
jp
test
in
dec
add
scas
call
stos
adc
cmpsl
lahf
dec
in
popf
imul
xchg
ret
cwtl
mov
rorb
mov
or
mov
mov
and
shl
push
movsb
mov
mov
adc
jge
jb
ss
dec
fs
int
inc
mov
mov
mov
mov
mov
pop
mov
cmpl
inc
jb
mov
sti
xorps
sbb
mov
push
cwtl
cmp
dec
outsb
es
mov
push
pushf
decl
adc
xchg
cmpsb
mov
mov
push
sbb
lea
sbb
sarb
pop
cmpsb
loope
ficoms
adc
jmp
sysenter
pop
rep
cmp
xchg
mov
hlt
adc
or
pop
loop
push
inc
mov
fldt
fdiv
add
adc
out
xchg
dec
fmull
inc
or
mov
je
fcomps
pushf
cld
jmp
push
xchg
xchg
imul
out
jmp
rorl
dec
test
lahf
add
dec
sub
andb
sbbl
pop
xchg
pop
in
xor
mov
jo
test
mov
sub
in
pop
lods
jnp
cltd
rclb
testb
insl
scas
mov
test
push
push
repnz
cmpsb
lret
test
in
dec
outsl
in
inc
push
xchg
repz
cmc
adc
in
je
mov
divb
test
pop
push
insb
imul
jns
xchg
jns
cmp
xchg
add
mov
sub
das
inc
mov
xchg
fsubs
push
add
jnp
rorl
push
inc
xor
insb
cs
sub
sub
pop
push
and
out
push
das
lods
or
sbb
loope
sti
stos
fistl
jp
cmpsl
inc
test
or
jb
stos
mov
mov
pop
add
sub
xor
or
fcom
out
out
add
shrb
test
xchg
mov
stos
jg
dec
loope
xchg
loopne
fimull
jnp
dec
pop
sub
dec
add
addl
dec
cmp
int
xor
cmc
jnp
pop
add
ret
mov
not
rclb
xchg
out
les
aas
push
cwtl
xchg
xorb
shlb
pop
aad
loop
int3
push
jae
cmp
roll
in
pop
pop
pushf
adc
movsb
mov
or
js
test
aas
inc
mov
addl
fnstcw
stos
dec
fildl
faddl
adc
jo
insl
pop
jb
test
pop
push
imul
add
je
mov
lods
ja
out
jg
aad
addr16
faddp
jno
pop
add
inc
repz
push
push
mov
andb
add
pop
scas
fbld
cmp
cwtl
insb
xchg
and
jle
pop
push
sub
or
sarl
pushf
imul
iret
inc
push
xchg
jecxz
inc
inc
mov
faddl
int3
pop
pop
es
jl
mov
in
out
clc
push
je
addr16
insb
sub
push
das
ja
push
jle
mov
shrb
mov
aam
adc
pop
xchg
in
je
inc
xor
mov
sti
popa
inc
shr
jae
and
mov
jle
divb
insb
sub
push
cmp
cmp
jo
pop
das
sbb
add
dec
roll
outsl
lock
dec
cmc
leave
xor
stos
cltd
xlat
xchg
adc
and
jle
add
shll
pop
adc
xor
adc
icebp
mov
or
stos
jno
mov
lods
sub
popl
faddl
js
adc
aad
dec
pop
fnstenv
dec
cmpsl
imul
fs
xor
mov
cmp
pop
in
xlat
inc
int3
mov
sbb
lock
add
inc
push
leave
mov
jns
imull
aad
push
pop
add
stos
mov
loope
subl
mov
cmp
stos
pop
test
xchg
jae
mov
adc
mov
je
cmp
dec
sbbb
mov
popl
out
leave
mov
push
aad
xchg
dec
mov
mov
lods
jecxz
pop
das
imul
xchg
ss
sarb
fildll
cmp
xor
fimuls
jno
pop
mov
arpl
inc
enter
cmpsl
call
lock
xchg
cmc
int
nopl
mov
or
cmpsl
cld
pop
or
popf
jg
mov
stos
dec
repnz
sbb
jle
xchg
rclb
inc
aad
iret
sub
lods
inc
xchg
or
fstp
sti
jne
es
sub
fdivrs
dec
stc
mov
cwtl
dec
sub
lds
adc
inc
sub
js
sub
sbb
out
dec
sub
test
add
cmp
cld
clc
enter
xor
push
pop
cmpsb
call
mov
out
in
mov
mov
fcoms
xlat
mov
frstor
cs
xchg
cmp
add
je
or
and
push
fidivl
jmp
sub
mov
popf
fs
sub
xchg
sbb
mov
stos
cs
mov
jae
sti
jmp
jno
sub
pop
dec
jmp
cmp
in
or
mov
xor
fnclex
dec
jmp
and
push
arpl
sub
ja
dec
sbbb
jg
addr16
dec
clc
repz
iret
cmp
push
cmp
out
mov
psrlw
jnp
out
add
add
hlt
lock
push
pushf
cmp
test
adc
and
pop
outsl
cmp
std
cmpsl
fsubs
xchg
lret
adc
sbb
mov
lahf
in
jno
fiaddl
xor
gs
inc
cmp
and
and
push
mov
imul
sub
push
mov
jge
push
dec
out
int
loopne
xlat
sub
sub
hlt
ds
loope
pushf
mov
add
into
movsb
rol
fs
sbb
inc
mov
leave
cmp
faddl
adc
lds
xchg
jb,pn
jae
insl
mov
jmp
pop
cmpl
fwait
ss
movsl
hlt
adc
cmc
mov
adc
aam
lcall
mov
rorl
sbb
cli
mov
inc
jno
xchg
cmpsl
and
jns
adc
inc
pop
sti
mov
cwtl
pause
inc
push
jg
add
cmp
xchg
xor
sbb
lea
jae
pusha
in
ds
cmp
repz
cli
mov
cltd
ficoms
notl
jnp
mov
cmp
sub
xchg
jo
pusha
jne
movd
add
bound
jne
jns
fstpl
fs
sarl
lahf
jb
fsubrs
lea
push
inc
jb
es
cli
dec
enter
mov
outsb
xor
mov
sbb
push
fdivr
inc
sbb
movsb
mov
insb
fadds
outsl
imul
je
aas
mov
add
sbb
shrl
loopne
das
test
inc
mov
aas
data16
mov
addr16
stc
mov
in
pop
arpl
or
adc
les
ljmp
adc
adc
inc
outsl
sub
popa
sub
mov
push
dec
pop
mov
inc
scas
icebp
fwait
jbe
std
sbb
ja
les
int
mov
push
adc
push
popa
dec
cltd
mov
mov
lds
xor
movsb
sbb
fimuls
xor
cld
cmpsb
dec
push
mov
adc
inc
js
add
inc
adc
fiadds
jle
jle
je
fcomps
cwtl
and
cmp
ds
xchg
or
incl
ljmp
lods
xor
iret
add
fbstp
lcall
xor
mov
ss
fucom
out
aas
inc
loope
gs
add
cli
aam
jno
adc
outsl
or
mov
rorb
les
pop
insb
mov
gs
aas
add
mov
sbb
push
push
push
adc
xor
push
gs
push
mov
mov
loopne
xor
mov
out
xchg
test
mov
lds
shrb
xor
popf
mov
inc
test
xorl
int
xchg
mov
push
imul
int3
xchg
jb
dec
lahf
xchg
inc
je
stos
js
mov
push
jle
lods
lret
and
in
sub
shl
into
inc
js
inc
push
push
in
mov
inc
imulb
out
int
shll
pop
jo
mov
aaa
sub
mov
sub
stos
inc
out
xor
out
es
inc
shlb
int
stc
lods
test
in
out
mov
insl
arpl
insl
in
mov
add
mov
dec
movl
movsb
mov
sbb
adc
or
das
loop
jnp
and
jne
adc
sbb
cmp
aam
cmp
lds
mov
adc
test
ret
jg
mov
out
or
ret
test
pusha
mov
sahf
arpl
inc
or
mov
push
push
pop
xchg
push
outsb
lahf
ret
dec
fcmovb
cli
inc
test
fs
xor
movsl
js
fidivs
jae
pop
and
inc
sbb
enter
leave
jle
fiadds
scas
or
bound
inc
lea
mov
ds
ds
dec
and
or
cmp
inc
je
pop
cmp
sub
loop
jp
push
inc
imul
shr
jmp
cmpsl
xchg
test
jmp
test
mov
push
rorb
lods
mov
aas
in
popf
jg
dec
push
or
pop
add
or
pop
lods
rclb
jnp,pt
xchg
faddl
stos
xchg
mov
sub
or
xchg
pop
mov
subb
mov
popf
lcall
xchg
fisttpll
jo
mov
rcrl
mov
pushf
mov
xbegin
mov
or
xor
xchg
call
shl
xchg
popf
xchg
mov
push
test
icebp
iret
add
push
dec
cld
ret
test
out
dec
pop
lcall
xchg
popa
xor
bound
in
movsl
pop
dec
in
bnd
rol
push
test
jl
mov
jns
dec
sub
xor
ror
in
lea
jg
adc
mov
or
push
mov
or
inc
cwtl
insb
jne
or
xorl
gs
roll
nop
inc
pop
pop
xchg
lret
ds
sbb
mov
mov
bound
mov
push
mov
ss
ret
clc
divb
adc
subl
into
push
xchg
mov
scas
gs
pop
or
add
jo
inc
sbb
push
push
sbb
add
mov
mov
xor
inc
fstl
stos
pop
sub
aaa
pop
sbb
lods
out
and
aam
jl
sub
sub
pop
loop
int
jns
rclb
mov
into
btcl
push
jbe
xchg
add
call
es
arpl
pop
push
aad
subb
xlat
add
mov
popa
or
add
imul
aam
scas
mov
cmc
shlb
mov
aas
loope
subb
jne
lret
cmpsb
push
cltd
pop
test
stos
pop
imul
pusha
mov
mov
pushf
sbb
mov
loope
xchg
ljmp
les
adc
xchg
lea
mov
ss
xchg
or
push
shlb
into
sub
inc
addr16
mov
lret
add
fs
adc
and
jns
daa
mov
cmp
subb
nop
fwait
insb
jb
cmc
mov
std
xchg
cmpsl
out
hlt
pusha
std
mov
pop
pop
add
mov
sbb
int3
add
sbb
mov
lods
push
or
clc
icebp
repnz
mov
iret
cmp
dec
pop
aad
lahf
test
cwtl
sub
or
mov
adc
and
sub
loop
stc
adc
imul
mov
mov
jle
xlat
hlt
xor
push
mov
movsl
mov
ret
jo
imul
mov
and
adc
or
pop
pop
call
stos
jl
fildll
push
dec
xorl
fs
sub
inc
in
add
movsb
xchg
hlt
dec
aas
push
call
imul
lahf
lret
xchg
mov
or
out
inc
or
inc
sub
ss
sbb
shrb
aas
iret
movsl
imul
xor
sti
pop
mov
adc
xor
inc
scas
iret
xchg
cmp
es
fisttps
cmp
pop
inc
arpl
and
and
push
shlb
movsl
arpl
or
dec
push
testl
dec
push
mov
push
mov
shrl
pop
inc
mov
fistpll
loop
cmp
or
popf
xor
addr16
pusha
xorb
lods
pop
pop
or
mov
imul
adc
mov
push
out
popa
jl
mov
mov
sbb
lea
sbb
into
xchg
call
cmpsl
scas
mov
lods
sub
inc
pop
mov
incb
imul
cmp
in
push
push
incb
loopne
test
mov
xchg
xorb
xchg
jo
dec
lock
cmc
and
mov
jmp
dec
sub
shrb
mov
lea
inc
sbb
fbstp
icebp
xchg
and
stos
fcmove
jmp
push
jb
in
out
jg
repz
leave
adc
lret
mov
cmc
ds
fildl
fnstsw
cld
out
stos
daa
addb
add
ffreep
add
js
jecxz
call
inc
out
popa
xor
stos
add
in
push
int
ljmp
int
xlat
pop
sub
add
gs
js
mov
mov
insb
lret
jae
pop
sbb
movsl
xor
test
xchg
nop
std
ss
adc
dec
dec
std
push
fld
hlt
sbb
lahf
test
push
loop
out
dec
mov
inc
adc
data16
push
ret
adc
adc
pop
xchg
fbld
pop
pop
xchg
fsubs
or
pop
test
mov
jb
ja
xchg
ja
xchg
arpl
xchg
jmp
stos
stc
jb
xor
fsubrs
adc
cmpsb
adc
test
test
shl
mov
cmp
loope
jmp
adc
das
les
daa
cltd
imul
fxch
push
jno
sbb
inc
jbe
pop
and
add
or
and
jb
rcll
int3
jns
push
shrb
dec
sub
sub
imull
and
push
fnstsw
add
sbbb
idivb
iret
sbb
leave
sub
out
icebp
out
nop
push
clc
pop
sarl
dec
mov
xchg
pcmpgtw
cmp
pop
xchg
dec
iret
pop
fsts
sub
in
test
add
xchg
and
mov
mov
dec
or
stc
fs
mov
and
dec
rcrl
out
push
add
xchg
push
mov
or
ror
rcr
hlt
add
adc
mov
loope
jnp
out
ja
data16
mov
add
mov
xor
jns
ja
lret
jae
cmpsl
int3
in
lcall
cs
xor
mov
repz
insb
out
stos
inc
popf
ret
mov
add
push
xor
dec
cmpsb
adc
and
mov
cmp
pushf
push
jp
mov
push
xchg
stc
les
call
fisubs
cli
or
inc
mov
test
pop
jle
into
mov
adc
dec
aas
add
stc
mov
mov
fnstcw
adc
pop
jae
push
pop
xor
mov
fdivrl
ffree
jns
inc
sbb
dec
fnstsw
je
jl
mov
subb
cmpsb
and
inc
int3
xchg
pop
stos
arpl
jmp
push
stc
pop
mov
dec
js
daa
fdivl
dec
mov
xor
fcoml
pop
andl
jnp,pn
cmpsl
in
aam
inc
sar
mov
dec
mov
ffreep
stos
in
scas
insb
add
les
cmp
add
mov
nop
add
or
clc
fwait
stos
pushf
mov
in
js
das
mov
mov
xchg
fnstenv
test
icebp
ficoml
pop
or
pop
es
sbb
dec
xor
and
fnstcw
mov
dec
mov
sub
mov
stc
inc
sbb
leave
stc
cmp
in
fsubrl
xchg
sbb
inc
add
push
cmp
mov
adc
into
push
je
and
mov
imul
jb
lret
rcrb
mov
jle
movsl
mov
movsl
or
adc
mov
lret
or
mov
into
shlb
repz
mov
sub
hlt
movsb
push
adcl
fiadds
xor
xor
cmc
cmc
std
mov
cmpsb
daa
test
ret
test
push
sti
fildl
loopne
and
and
dec
in
sbb
addb
xlat
pop
ja
in
add
push
insb
pop
pop
in
aam
cmp
add
jecxz
ret
jg
and
push
jg
and
pop
outsl
xor
cli
cmp
cmpsl
and
jmp
fsts
mov
sub
sub
adc
mov
push
idivb
dec
jbe
fdivs
xchg
sbb
imul
fbstp
inc
repz
dec
or
in
mov
mov
sbb
lea
ficoms
and
mov
aad
ret
rcrl
mov
pop
test
push
sbb
out
push
mov
iret
fistpll
fisubs
or
cmpsb
add
or
out
sti
xchg
push
dec
shr
adc
mov
aaa
insl
aaa
or
mov
add
mov
push
pop
cmp
jmp
icebp
sub
movsb
scas
daa
in
movsl
fistpll
aas
lds
or
add
mov
ljmp
sbb
xchg
data16
out
stos
sbbb
push
scas
in
fwait
mov
sti
lea
xchg
aam
cltd
lods
inc
mov
int
push
push
loopne
mov
adc
mov
popf
sub
sbb
mov
add
fwait
sbb
sub
add
rorl
push
adc
ss
loop
mov
push
lgs
mov
pop
push
addr16
sbb
repnz
addr16
scas
push
frstor
add
or
fsts
lods
xor
or
js
sub
inc
xchg
sub
adcb
cmpsb
ljmp
std
std
int
jb
out
add
push
shl
pop
ss
popf
lahf
pop
inc
adc
push
scas
rol
adc
pop
fwait
dec
addr16
lea
dec
mov
inc
test
addr16
xor
adc
je
stos
push
stos
jecxz
xchg
cmp
mov
nop
sarl
jns
xchg
push
enter
xlat
jl
cmp
insl
add
jnp
sbb
push
or
je
inc
mov
or
xchg
rcll
sub
inc
sbb
ljmp
mov
jl
fildl
xchg
pop
mov
sbbb
cmp
push
xchg
adc
mov
shl
or
xor
xor
cmc
in
ds
or
daa
ja
into
and
fdivs
int3
and
jecxz
mov
cmpl
orl
cmpsl
scas
into
mov
xchg
mov
or
lahf
jo
ds
cmp
imul
push
cmp
test
pop
fldt
xor
lahf
xchg
push
pop
pusha
das
loop
loope
or
adc
out
mov
leave
pop
in
push
mov
into
js
add
or
mov
xor
aad
add
sahf
cs
iret
sahf
push
cli
push
orb
lods
fucompp
sti
mov
lcall
ds
nop
insl
adc
les
push
mov
loopne
or
scas
sar
ret
int3
jns
test
cmpsl
ljmp
or
repnz
pop
xor
inc
out
fimull
mov
testb
ljmp
cs
mov
loop
pushf
aam
testb
std
mov
cmp
sbb
fstpl
addb
jmp
and
xchg
addb
adc
rcrb
ja
mov
pop
enter
sub
hlt
aam
and
out
in
movsb
adc
pop
ds
pop
dec
cs
iret
sub
aad
pop
mov
aas
pop
push
insl
pop
inc
sub
inc
sbb
cmp
cmp
sbb
cld
bound
fidivrs
fs
mov
cld
add
lret
jl
into
fcmovnb
sbb
jb
xchg
lock
mov
dec
std
sub
lea
stos
push
mov
repz
or
or
out
test
push
sahf
mov
stos
push
aas
loop
rol
pop
cld
testb
sahf
cmp
inc
push
jae
fildll
pop
in
hlt
push
jno
or
mov
add
into
fsubl
in
mov
iret
les
repnz
lahf
jl
cmc
ds
mov
mov
push
adc
sub
fsts
aad
pop
fs
js
call
fnstsw
cmpb
pop
pop
jmp
push
je
sbb
scas
ds
cmp
xchg
sub
pop
push
sub
movd
mov
out
pop
ljmp
push
xor
mov
sbb
adc
fwait
mov
fstps
sbb
cmp
ret
nop
adc
pop
ret
movsb
and
push
cltd
push
sbb
mov
mov
sahf
fsub
cmc
adc
mov
mov
xor
pop
hlt
vminss
xchg
insl
dec
adc
add
leave
mov
int3
cli
jbe
sub
movsl
das
push
mov
adc
ret
out
andb
dec
out
dec
mov
adc
fs
nop
push
cmp
sti
inc
sbbl
add
aam
pop
loope
sbbb
in
movsb
add
mov
ret
or
repnz
mov
pop
lods
rorb
sub
jmp
inc
aas
in
inc
xchg
inc
int3
rclb
add
xchg
jle
mov
mov
push
es
jecxz
mov
or
mov
xorl
jl
pushf
xchg
push
mov
fdivl
incl
xchg
data16
cmp
les
dec
jae
das
sbb
enter
ljmp
mov
and
stos
es
mov
push
sbb
mov
call
imulb
xor
push
loope
test
cmp
cmpb
mov
or
mov
or
cmc
or
xor
inc
pop
imul
dec
pop
dec
shll
pop
mov
and
push
mov
push
jle
fildl
loope
adc
mov
add
xor
lock
es
inc
sbb
sbb
add
mov
add
adc
cmc
aaa
mov
sbb
es
pop
cmp
movsl
xor
lcall
rcrl
test
jnp
mov
jae
insl
sbb
xor
dec
mov
lahf
mov
add
xor
mov
push
es
push
test
rol
and
pop
sbb
sbb
ficompl
fsubl
mov
xchg
aaa
lods
lcall
lahf
xchg
push
jnp
xchg
out
adc
xchg
or
mov
mov
fcmovne
out
pop
hlt
mov
push
inc
testb
mov
insl
xor
mov
cmp
lds
jb
nop
lret
push
add
cmp
mov
jmp
push
idivb
ja
xorl
ljmp
in
xor
or
lods
jb
int3
or
dec
fdivrs
xchg
inc
push
xor
imul
mov
out
xor
int3
dec
jne
cmpsb
lock
push
fldl2t
cltd
xor
sbbb
insl
mov
sub
and
fldl
pop
ja
and
out
cwtl
jmp
bound
bound
lods
call
jl
int
jns
inc
mov
dec
fnsave
cmp
pop
ja
ds
sbb
mov
jmp
pop
outsb
mov
or
data16
loope
js
lea
icebp
fadds
mov
or
push
push
test
out
nop
iret
repz
inc
orl
enter
mov
push
and
int
dec
outsl
pop
fiaddl
mov
push
iret
or
mov
xchg
mov
lret
ret
insb
or
adc
pop
rol
in
xor
push
int
add
mov
mov
xchg
pusha
push
push
data16
jnp
sbb
imul
mov
ret
mov
jae
out
push
jo
mov
loop
sbb
jecxz
data16
arpl
sbb
and
push
pushf
dec
sub
jle
inc
dec
iret
inc
pusha
loop
pop
inc
push
pop
fs
mov
enter
jmp
iret
cmp
dec
add
lea
sub
pop
int3
icebp
cs
test
dec
cmc
xor
data16
push
into
int
into
pop
mov
icebp
inc
out
lods
cmp
and
sub
and
xchg
pop
idiv
loop
fisubl
mov
mov
in
int3
bnd
scas
sahf
hlt
push
out
mov
add
sub
cs
clc
in
jbe
sbb
xchg
sub
mov
push
out
or
adc
sbb
or
mov
repnz
xchg
mov
stos
xor
out
imul
rolb
jo
add
lahf
gs
fisttps
push
imul
mov
and
out
lcall
sbb
mov
lock
jnp
shll
imul
xchg
cmpsb
jnp
fsubl
nop
pop
jnp
pop
movsb
das
adc
int
pusha
cmc
pushf
add
jne
jg
ljmp
mov
add
sub
or
sub
in
or
xchg
cmp
xor
cmp
lock
cmp
stos
pushf
dec
jne
sbb
inc
push
add
sub
cld
test
jl
sub
das
xor
int3
movsl
out
aaa
int3
subl
stos
pop
rol
fwait
insb
cmp
pop
hlt
cmpsl
adc
adcb
cmp
pop
ds
cli
adc
in
push
and
and
pushf
out
xchg
inc
adc
cmpsb
in
push
inc
fadds
pop
in
dec
pop
xchg
inc
push
icebp
lds
xchg
or
mov
leave
in
push
icebp
add
and
test
dec
pop
dec
pop
add
das
shlb
orb
imul
xor
push
push
cmp
adc
outsl
jle
std
mov
enter
fs
data16
call
xchg
and
cs
add
xchg
xchg
scas
mov
push
fildl
test
lock
outsl
push
mov
shll
leave
out
mov
xchg
stc
fisttpl
mov
inc
std
or
or
cltd
test
jb
push
dec
pop
loop
movsb
sub
cmp
loope
bsr
shlb
inc
sub
or
repz
sbb
xor
ss
dec
push
out
fstpt
outsl
movsl
mov
mov
inc
das
mov
inc
nop
dec
stc
dec
ds
push
fstpt
jmp
adcb
inc
cmp
testb
daa
sbb
sub
jnp
push
dec
pop
inc
inc
push
pop
aas
insb
adc
mov
insl
xchg
leave
dec
pushw
xor
xor
shr
out
xor
testl
sub
inc
push
sahf
call
cmp
lock
rolb
out
cmpsl
shrb
mov
adc
jb
icebp
and
mov
xchg
fiaddl
lahf
xchg
dec
loopne
push
stos
scas
mov
jo
repz
fmuls
fnstenv
jae
pop
ja
and
sbb
add
addl
add
test
popa
repnz
popf
rclb
or
int
add
dec
movsl
fs
add
outsb
dec
sbb
loop
mov
mov
aam
stos
stos
mov
mov
jns
jmp
mov
pop
push
mov
lods
sub
in
int3
jbe
cmp
stos
mov
inc
sub
pop
leave
jp
lcall
xor
mov
jmp
mov
jmp
orb
test
push
xchg
mov
inc
insb
lds
std
xchg
add
jo
inc
push
lret
sbb
addb
dec
lret
fildl
and
or
test
data16
lods
scas
add
ret
ret
inc
rclb
jb,pt
lods
test
jbe
push
jmp
test
sti
xlat
cld
mov
mov
mov
xchg
lods
pop
adc
or
xchg
xchg
jno
or
jo
cmp
je
sub
or
add
sub
das
and
into
imul
push
int
aaa
fcomp
dec
xor
inc
rolb
mov
in
push
pop
mov
adc
push
test
cld
xchg
daa
pop
add
call
cmp
push
cld
ret
fld
xorps
mov
fcoms
mov
dec
inc
das
cltd
add
fcoml
jae
mov
mov
inc
pop
stc
subb
adc
idivl
cld
fidivrl
adc
jmp
cwtl
dec
ljmp
in
dec
fwait
bnd
push
push
dec
mov
pop
sti
push
cmp
in
sbb
add
dec
stos
inc
xchg
fbld
xchg
lods
sarl
adc
sbb
movsb
mov
add
in
std
push
daa
das
or
rorl
loopne
cmp
fnstcw
add
test
sar
sbb
push
mov
inc
mov
dec
mov
adc
dec
push
cmp
cmp
pop
jecxz
push
out
in
push
add
dec
and
mov
fidivrl
outsb
add
mov
xor
scas
rolb
add
and
sub
ja
push
movb
cmpsl
movsl
mov
enter
and
inc
xor
dec
jo
dec
out
add
shll
pop
inc
faddl
xchg
mov
mov
inc
pop
dec
inc
jne
sbb
push
lcall
repz
in
dec
cld
sahf
mov
data16
and
inc
mov
sub
mov
cmp
xchg
nop
sub
jbe
and
cmc
push
fcoml
xchg
je
push
in
bound
add
adc
data16
push
jle
pop
icebp
xchg
lods
sbb
and
hlt
mov
jae
pop
mov
sbb
ss
or
dec
and
mov
xor
in
xchg
xor
inc
mov
xchg
mov
fucomip
sub
stos
aam
mov
daa
xlat
ret
xchg
jb
push
add
fsubrp
cmc
loopne
ljmp
pop
mov
xor
dec
sahf
sub
xor
rorb
add
and
xchg
xchg
mov
push
jb
dec
loopne
and
pop
inc
lahf
jg
sbb
scas
xor
stos
in
call
xor
je
pop
lret
sbbb
sar
adc
dec
jmp
xchg
mov
jnp
sub
or
cld
adc
and
add
or
fsts
daa
cmp
or
push
push
jbe
lods
negb
shlb
sbb
push
sbb
jmp
xchg
dec
mov
inc
jp
adc
sti
shl
or
into
xor
and
push
inc
sub
out
lahf
clc
lcall
sub
mov
pop
test
pop
into
push
jae
or
into
or
xlat
adc
imul
and
in
and
cmpsl
cmp
lret
adcb
xchg
xor
inc
or
inc
lock
jg
or
scas
fsubl
xchg
mov
inc
pop
cmc
adc
rolb
add
inc
mov
and
hlt
cmc
sub
roll
mov
and
mov
adc
mov
pop
es
dec
cmpsl
inc
pop
insb
stos
xchg
xchg
mov
aas
repnz
mov
lock
push
repnz
imul
sbb
cltd
ja
xchg
repz
imull
jnp
sarl
stos
shll
into
and
int
popa
scas
out
push
cltd
mov
insw
sub
mov
mov
insl
sbb
ja
pop
ljmp
jmp
clc
test
bound
mov
push
xor
push
mov
movsb
adc
sbb
ja
dec
mov
mov
insb
insb
sbb
scas
xchg
addr16
cs
scas
jae
or
les
repz
movsb
call
sbb
ret
inc
jo
xchg
into
daa
sub
sarl
inc
stos
push
sahf
test
shrb
popa
or
stc
adc
mov
jp
xor
push
and
mov
inc
xor
imul
loop
sar
pop
mov
call
in
dec
jmp
je
repz
call
adc
out
cmp
ret
in
fs
pop
rolb
jl
xor
xor
ljmp
imul
xor
dec
fsub
stos
sbb
lods
scas
dec
dec
rolb
pop
rcr
js
aam
mov
mov
mov
addr16
mov
test
add
shr
je
push
dec
cld
hlt
push
ret
ret
lea
inc
test
lock
jae
std
lcall
clc
jbe
mov
xchg
and
dec
sbb
shr
jmp
in
push
mov
cmp
adc
push
fisubrl
lock
daa
pushl
sub
aaa
dec
clc
add
and
sahf
leave
mov
fnstcw
int3
jl
out
notl
and
mov
call
mov
mov
in
fistl
sbbl
and
jnp
cmp
sbb
lret
cmp
adc
inc
xchg
fldcw
lock
add
out
dec
xchg
xchg
mov
mov
mov
imul
ficoml
daa
push
push
int
stos
xor
jg
jecxz
pushf
leave
ret
pop
mov
test
das
mov
xchg
adc
jns
sub
cmp
mov
jl
inc
push
mov
lods
xchg
xchg
and
jmp
cmp
push
cmp
out
jb
in
cmc
ds
lds
ret
xchg
or
jle
mov
enter
rorl
or
outsb
jbe
add
out
repz
push
lods
call
mov
fimuls
lret
imul
subb
push
ds
sbb
test
mov
fcmovnbe
iret
dec
popf
fsts
and
dec
xchg
jns
stc
or
jno
adc
or
movsb
filds
sub
mov
out
mov
pop
push
add
push
push
loop
mov
repz
or
cmp
notb
push
repz
popa
pop
div
sub
sbb
js
fcoml
xchg
call
jno
testb
sub
cmp
xor
and
xor
test
push
mov
es
push
movsl
sbb
hlt
sbb
and
shll
pusha
neg
dec
enter
aas
push
mov
out
mov
and
mov
ret
loope
dec
dec
loop
cmp
jp
jbe
mov
mov
adc
or
and
xchg
adc
js
aas
pop
and
add
jmp
mov
repz
scas
jg
jns
imul
jne
enter
mov
sub
xchg
ficoml
iret
push
pusha
inc
bswap
pop
mov
add
xor
inc
aad
mov
sahf
mov
jnp
mov
mov
pusha
insb
into
shl
or
cwtl
lahf
imul
jb
cltd
mov
mov
push
sbb
sbb
push
int3
aaa
push
loope
cmp
sub
and
out
mov
push
jp
mov
clc
jb
std
popa
aaa
adc
idiv
pop
mov
jecxz
push
mov
notl
push
adc
push
xor
ds
les
sub
arpl
fwait
and
jle
andl
push
data16
jmp
imul
insb
and
aas
loopne
push
jge
add
mov
rolb
icebp
add
ja
inc
dec
adc
test
or
mulb
mov
push
in
push
scas
into
jne
push
insl
arpl
test
lds
hlt
mov
push
lcall
sub
fiaddl
or
add
iret
mov
and
fcmovnb
lret
scas
cmp
shr
adc
stos
gs
lock
inc
rclb
aas
int3
xchg
outsl
pop
add
mov
faddl
jp
std
imul
scas
stos
hlt
test
ror
mov
divb
cltd
scas
push
or
mov
adc
xorl
lret
fdivrl
sub
lea
std
clc
sub
arpl
scas
std
je
cs
cmp
and
shlb
or
imul
insb
dec
xchg
cmp
add
jmp
lret
cli
xor
push
insl
ror
push
sub
sub
sub
lret
int
jl
mov
mov
in
test
dec
mov
dec
into
insl
or
pushf
dec
shlb
ret
std
cmp
pop
test
in
sti
aas
pop
cmp
push
cmp
inc
pushfw
sbb
mov
in
sub
cld
subl
jle
cwtl
cmp
aad
das
pusha
rorb
sbb
cmp
mov
jmp
in
inc
frstpm(287
and
xchg
jns
ficoms
adc
adc
mov
out
test
pop
outsl
pop
data16
mov
rorl
mov
fistps
adc
xchg
inc
gs
lret
mov
neg
leave
add
xor
sbbb
sbb
push
aas
in
js
mov
rcr
mov
fldt
xchg
stos
mov
inc
add
test
aaa
jb
push
or
push
xlat
mov
mov
push
cli
push
pop
in
popf
or
mov
scas
jo
pop
insb
cmp
aad
add
sbb
dec
xchg
push
es
jnp
and
test
fwait
imul
xchg
lea
insl
jne
jbe
mov
jecxz
mov
lret
adc
add
jne
xor
cmp
pushf
in
js
jge,pn
out
insl
xor
xchg
adc
lret
sub
and
pushf
sub
ficompl
add
push
into
enter
fildll
push
leave
mov
sub
xlat
pushf
push
mov
xor
pop
clc
movsb
dec
and
lods
mov
add
adc
push
pop
jge
and
lods
mov
stc
pop
push
sar
cmovno
add
dec
in
mov
scas
fistl
hlt
sti
pop
jo
sub
imul
jmp
rorb
sti
shrl
sub
and
bound
mov
xor
nop
loop
jo
push
movsl
mov
outsl
je
lret
cmp
hlt
add
xor
sub
jae
out
test
aas
dec
push
add
pop
push
mov
mov
shll
adc
mov
xchg
jbe
mov
or
int3
sbb
push
jle
pop
fdivrs
mov
insl
sbb
dec
iret
enter
xchg
lds
push
xor
inc
fcom
dec
add
pop
inc
lret
pop
xchg
fisubl
es
daa
addl
ret
inc
push
push
adc
scas
insl
scas
cmp
mov
xchg
sub
cmpsb
movsb
cltd
mov
stos
in
pushf
cld
sub
mov
fimull
or
push
js
mov
pop
adc
push
outsb
sbb
in
sub
pop
cmp
aam
shlb
arpl
repnz
cmp
popf
lds
lds
mov
dec
addb
lcall
inc
xlat
int
mov
push
gs
enter
adc
lea
and
push
fdivl
sub
dec
dec
in
fucomip
ljmp
lahf
or
push
repz
inc
cs
xor
adcb
addl
fwait
rorl
xchg
in
out
pop
mov
nop
pop
xlat
aad
or
out
dec
xlat
push
cmpsb
rolb
ret
dec
outsl
insb
or
and
and
push
mov
sub
dec
shll
cmp
mov
jp
int3
scas
mov
aaa
mov
jb
xchg
xchg
hlt
jo
fdiv
test
lds
sbb
push
rcl
mov
out
sbb
push
outsb
imul
testl
pop
je
fstpl
insl
into
scas
push
pop
movsl
mov
mov
dec
sbb
mov
push
mov
testb
aaa
movsl
or
aam
mov
into
add
in
jp
sub
das
lods
inc
sbb
or
sbb
sub
mov
loop
and
adc
xor
inc
inc
andl
cld
jecxz
add
enter
cmp
sub
pop
or
out
push
cmp
iret
ss
test
jns
mov
push
and
fs
add
shl
mov
inc
or
orb
mov
pop
jns
sti
stc
popf
bnd
jge
jb
aad
div
pop
int
pop
scas
sub
jns
adcl
jne
leave
lcall
push
imul
jo
inc
mov
jmp
pop
and
or
mov
xor
lods
fxch
dec
cmp
mov
loop
mov
lahf
mov
pop
add
hlt
outsb
dec
mov
jecxz
xor
pop
orl
fiadds
xlat
lret
adc
cwtl
mov
andl
and
arpl
fstpt
cmp
inc
gs
lods
or
stos
fmul
scas
sbb
in
iret
ss
test
rol
shrb
and
xchg
sbb
inc
add
xor
sub
mov
in
push
cmpsl
lcall
fimuls
mov
ljmp
push
ljmp
popa
pop
xchg
jle
ret
mov
push
fcomps
cmpsb
in
cmp
sbb
push
loop
pop
lcall
pop
stos
jb
xchg
mov
mov
push
cmp
sbb
aad
add
lock
mov
movsb
rep
xchg
scas
xchg
inc
cld
fdiv
or
in
cld
lcall
xchg
clc
xchg
test
scas
xor
rclb
rclb
cmpsb
add
mov
in
xchg
bound
aas
out
mov
decl
movsb
scas
in
pop
test
adc
leave
or
lods
cmp
mov
lods
stos
mov
clc
mov
add
xor
add
dec
cmp
and
add
add
add
and
dec
jmp
inc
bound
pop
sbb
pop
je
pop
mov
ret
xor
mov
jnp
or
push
xor
sarl
xchg
test
fsubrl
sbb
cmp
dec
pop
and
dec
inc
mov
dec
mov
add
xor
cmp
iret
dec
add
pusha
or
xor
popf
inc
aam
in
xor
int
xchg
test
inc
leave
into
hlt
inc
mov
enter
ja
movsb
stos
push
mov
daa
mov
fimull
mull
add
aas
adc
inc
mov
into
dec
push
stc
mov
fisubrs
xchg
mov
repz
mov
dec
sti
inc
iret
push
lock
in
jbe
sbb
adc
les
les
jne
or
lea
dec
popf
rcr
jbe
pushf
mov
stos
scas
sbb
pop
movsb
add
add
nop
inc
lcall
cmp
push
xor
push
outsb
pusha
test
bound
inc
inc
xor
ret
js
lods
or
lods
push
pop
mov
jne
cmp
out
lea
xchg
lcall
cmp
xchg
add
sub
shl
shr
and
aad
popf
pop
mov
idiv
pop
mov
push
in
divb
cmp
mov
dec
pop
adc
xchg
mov
and
adc
setg
pop
pop
add
xchg
shr
ljmp
inc
sub
xchg
xchg
xchg
or
jecxz
enter
fsubr
fsubrl
jo
adc
out
into
push
dec
pusha
aad
cmp
ss
cld
dec
mov
lods
or
nop
lret
mov
cmp
xchg
adc
bound
insl
ljmp
and
ja
or
adc
sub
and
lds
jnp
cmpsb
and
sbb
lret
out
sbb
xor
push
je
sbb
xor
inc
ficoml
xchg
fdivs
or
repz
mov
cs
in
lret
roll
xorl
dec
insl
cld
mov
loopne
in
dec
je
xchg
lods
xchg
sbb
adc
je
int3
dec
cmp
pusha
js
sub
pushf
cmp
adc
mov
jle
stos
add
es
out
push
sub
cmpsl
lock
arpl
rcl
dec
jne
std
inc
cs
cld
loop
in
int
out
add
cmp
push
stos
fs
xchg
xor
adc
aam
stos
push
sbb
dec
sarb
push
ret
adc
lods
imul
xchg
push
std
dec
ljmp
adc
xor
fdivs
or
mov
in
clc
push
jo
repz
sti
clc
push
out
xchg
mov
clc
cmpsb
or
sbb
or
lock
cltd
arpl
adc
mov
push
out
jns
add
lea
push
or
xchg
loopne
cmp
cmp
cmp
jle
sub
inc
ljmp
sub
or
inc
adc
lret
xor
lahf
in
or
add
sub
lcall
add
lods
out
dec
dec
and
shll
dec
fsubr
fadds
mov
lods
xchg
and
or
lret
jo
jmp
cmc
or
aaa
cs
xor
cmp
fs
jge
cmp
cmpsl
inc
jb
stc
adcl
and
cmp
or
mov
out
ficoml
xor
je
adc
sbb
pop
mov
add
addr16
pop
ret
pop
add
or
xor
pop
pop
jne
adc
aas
les
and
subl
scas
push
cld
mov
dec
call
xadd
mov
pusha
xor
fcomp
hlt
mov
js
and
and
adc
jg
fidivrs
sbb
or
les
sub
inc
repz
lds
xchg
and
xor
push
insb
jbe
outsb
dec
sub
and
xor
in
sbb
xchg
adc
loopne
pop
inc
and
cld
cmp
xor
jnp
jmp
adc
js,pn
imul
es
ja
mov
lea
test
gs
sti
dec
aaa
add
popa
cmp
nop
fwait
cmc
push
xor
cwtl
push
sbb
push
push
test
mov
push
loope
dec
je
cmp
daa
xlat
imul
mov
out
jp
ss
incl
xchg
es
loop
push
xor
loopne
lahf
repz
push
add
xor
movsb
ss
mov
js
or
inc
add
inc
mov
and
repz
lahf
rcr
pop
in
into
js
test
or
mov
jo
mov
stos
test
stc
sub
bt
jo
push
idivb
or
ja
sbb
hlt
jo
dec
fs
rdtsc
int3
xchg
adc
js
add
push
mov
lea
out
mov
movsl
mov
dec
pop
and
sub
lock
hlt
push
std
and
adc
stos
repnz
lock
push
xchg
out
test
mov
and
jle
cltd
xor
and
mov
xor
dec
sbb
fmull
push
lret
aam
xchg
scas
adc
orl
xor
xchg
fists
cli
cld
pop
adc
jle
insb
fstpt
pop
inc
dec
mov
clc
cli
lea
in
xlat
loope
popf
test
aaa
pop
mov
gs
sti
sbb
push
sbb
jnp
jns
add
add
inc
out
gs
add
mov
cli
rcrl
ljmp
mov
rclb
mov
ficompl
in
in
int3
lods
sub
xchg
and
cmc
in
fwait
call
inc
aam
hlt
push
xor
jg
movsl
mov
in
ss
and
push
cmp
leave
and
call
in
cmp
xchg
or
aaa
fistps
cltd
jno
pop
jb
shll
cwtl
adc
inc
add
gs
lret
lods
arpl
movsb
leave
and
jne
push
lods
jl
jmp
and
sub
das
mov
bound
adc
lea
gs
inc
dec
inc
xchg
call
dec
ficomps
push
scas
sahf
mov
adc
xor
push
add
imull
mov
pop
sbb
push
repz
sub
jnp
sub
lret
add
xor
dec
in
lahf
jmp
cmp
mov
or
mov
push
notl
test
aad
test
push
xor
fsubrl
sub
pop
xchg
add
cmp
and
fnstenv
test
or
movsb
and
push
xor
cltd
ss
and
faddl
pusha
push
push
mov
cli
sub
hlt
jge
pop
adc
mov
aaa
decl
mov
aam
adc
bound
leave
jle
loopne
outsb
mov
mov
in
jns
aad
cmp
sbb
push
sub
movsb
mov
lds
and
leave
sub
loopne
and
pop
cld
cmp
mov
mov
pushf
xchg
pop
xor
lds
dec
sub
sarl
mov
fucomp
aaa
adc
fs
adc
fiaddl
outsl
loope
scas
jl
fnstenv
cmc
fimull
adc
jae
sti
cmc
mov
adcb
inc
sbb
jg
mov
fbld
jecxz
xchg
mov
loope
fsubr
insl
lret
xorb
adc
std
inc
insb
dec
pop
cltd
lods
stos
jle
mov
popa
lock
jnp
mov
jbe
data16
inc
mov
rorb
push
sbb
sub
adc
repnz
jbe
and
jge
inc
mov
bnd
push
sub
sbb
movsb
ret
es
sbb
mov
pop
aas
add
jp
lods
push
popf
add
aaa
movsb
lock
mov
sbb
or
pop
in
fsubs
xchg
movsb
xchg
mov
dec
pop
in
lret
or
cs
out
mov
les
inc
repz
aaa
imul
sahf
adc
bound
sti
push
add
or
sub
push
out
push
mov
sahf
fwait
test
push
movsl
and
add
inc
jbe
hlt
xchg
mov
xchg
mov
pmullw
popa
or
xor
and
lret
add
and
icebp
xor
roll
add
int
jl
and
xor
out
addr16
subl
outsl
and
xor
pop
iret
jb
je
xchg
and
fimuls
push
cwtl
or
sub
fildl
inc
add
and
mov
mov
sbb
xchg
mov
es
pop
push
fmul
push
cmp
andb
lret
cmpsb
and
xchg
fwait
imul
ss
jb
adc
jmp
push
cmp
or
lods
push
popf
lret
mov
cmpsb
mov
std
push
dec
clc
cmpsb
push
push
mov
stc
add
loope
jno
add
and
add
repz
add
das
repnz
pop
cmp
pusha
sti
push
sub
sub
out
loopne
pop
inc
mov
shr
cs
dec
jo
and
xlat
int
inc
subb
pop
fists
js
xchg
in
mov
mov
repnz
shl
lahf
insb
icebp
out
lret
cld
mov
mov
push
and
shl
jbe
pop
xor
fst
mov
addr16
push
sbb
arpl
shrb
jno
adc
testl
jg
adc
jecxz
mov
cmc
xor
jno
cmp
imul
and
stc
cmc
pop
inc
scas
jmp
sarl
jnp
clc
sub
rcl
mov
or
xchg
faddl
int3
fwait
iret
jbe
xchg
hlt
mov
mov
lahf
xor
icebp
adc
cmpsb
xchg
and
mov
shlb
push
add
cmp
push
popf
leave
daa
subb
inc
stos
mov
outsb
jecxz
stos
jno
pop
pushf
cmp
push
movsl
jno
adc
jge
xchg
adc
mov
lock
jae
aaa
push
and
subb
int3
rcrl
mov
mov
dec
out
or
cltd
sub
filds
xchg
call
lcall
xor
ffreep
insb
outsb
mulb
cmp
and
sub
jecxz
or
addr16
mov
test
cmc
fcomip
loop
lods
or
les
push
fildl
dec
leave
data16
cmp
pop
test
sub
mov
call
sub
xchg
jl
jo
jo
in
xchg
out
adc
inc
mov
lods
jo
cmp
xor
es
fsubl
aam
xor
mov
aas
popa
push
xchg
hlt
mov
push
xchg
lret
rcrl
xor
sub
lods
sahf
inc
or
mov
lret
mov
dec
popf
cli
mov
and
inc
add
mov
mov
out
outsb
xchg
and
jbe
pop
or
rorb
pop
loop
repz
cltd
xchg
or
popf
ljmp
pop
test
loopne
lods
cmp
add
pop
sti
cmpsb
jge
xor
sbb
incb
lea
rcrb
int3
xlat
roll
sub
xor
push
or
xchg
lods
sarl
lods
call
lods
pushf
push
push
push
jp
loopne
push
ds
cltd
jecxz
or
and
mov
push
xchg
lret
xor
mov
arpl
mov
jo
lods
and
mov
mov
push
jle
fidivl
mov
inc
out
xor
mov
jae
test
push
cwtl
enter
dec
pop
cmp
into
cltd
sbb
dec
cld
mov
cmc
push
xchg
mov
aad
cmp
faddp
mov
out
int3
fldcw
shlb
inc
test
scas
shll
or
rcr
fistl
data16
push
xor
in
inc
mov
clc
mov
mov
pop
icebp
inc
bound
mov
aam
stos
xlat
inc
xor
cli
push
dec
pop
shlb
insb
int
push
add
lret
and
mov
mov
cmp
jp
dec
mov
in
ss
repnz
cmp
loope
subl
movb
lods
inc
jb
pusha
xor
repz
mov
dec
mov
fiadds
lret
out
mov
cli
jo
flds
pop
aad
and
xchg
and
jae
mov
cs
sub
mov
repnz
jb
loope
bound
push
add
loopne
lods
or
out
shll
popa
icebp
out
aas
jo
sbb
loop
or
repz
mov
mov
xchg
adc
or
mov
mov
xor
adc
cs
xchg
push
cmp
pushf
push
cmp
pop
xchg
cmp
loopne
fidivl
inc
sbb
fnsave
sub
pushf
and
pushl
cs
dec
repz
and
adc
repz
mov
adc
xchg
mov
xchg
push
es
popa
xchg
in
cs
movsl
mov
mov
adc
call
dec
pop
xor
clc
dec
pop
bound
sub
loope
insl
push
pop
test
or
pop
xchg
scas
sbb
push
and
push
and
loopne
movsb
sbb
cmpsb
sub
clc
dec
xchg
fstps
pop
aad
outsl
pop
insb
out
jbe
mov
adc
rorb
cmp
movsl
movl
dec
test
pop
sbb
std
outsb
or
adc
aaa
inc
and
out
push
mov
scas
push
clc
and
pop
dec
push
insl
jo
sbb
add
cmpsb
std
and
scas
and
out
pop
mov
push
loop
lods
insb
cmpsl
inc
cmpsl
add
pop
inc
push
pusha
inc
sub
push
nop
dec
popf
mov
aad
jnp
stc
sbb
dec
aas
dec
dec
sbb
jnp
sub
cmc
hlt
adc
repnz
jg
loop
xor
popl
and
sbb
cmp
outsl
cwtl
jne
mov
xor
xor
hlt
ljmp
stos
xor
inc
mov
orb
into
and
js
out
test
pop
pop
dec
int3
and
addr16
inc
in
push
stos
sub
jno
mov
subb
fs
inc
arpl
mov
les
fsts
fisubrl
jae
sub
xlat
jmp
jmp
cld
jae
mov
or
and
jns
jge
xchg
mov
sbb
js
mov
inc
jno
cmp
mov
call
out
fadd
inc
push
daa
aas
in
lret
rcrb
stc
push
sbb
outsl
jg
inc
call
cwtl
xchg
stc
mov
orl
negb
add
sub
and
mov
cwtl
lea
cltd
mov
mov
stc
jle
sub
movsb
jae
adc
xor
test
addl
out
out
outsb
mov
outsl
xchg
ljmp
add
xlat
gs
fbstp
mov
rcll
scas
ljmp
cwtl
aaa
lea
cli
mov
pop
mov
push
adc
sub
outsb
scas
mov
jnp
daa
or
jecxz
std
xchg
inc
cmpb
andl
repz
imull
scas
mov
je
arpl
cmp
aad
jmp
cwtl
mov
ja
adc
cld
std
iret
cltd
push
push
retw
imul
dec
shl
pop
rcrl
inc
inc
jbe
mov
push
lcall
dec
and
out
dec
shr
ficoms
sbb
sub
fcmovnu
out
je
loopne
jp
test
aad
mov
sbb
outsb
js
xchg
inc
aaa
std
pop
cmpsl
fs
adc
lret
pop
inc
mov
inc
inc
subb
popa
push
add
rol
ja
mov
xlat
incl
push
in
je
gs
and
iret
mov
ficoms
int
xor
cmc
scas
rcll
pop
in
xor
sbb
push
pop
mov
push
xchg
pop
scas
stc
mov
stos
scas
rol
inc
loop
rclb
or
push
lahf
mov
mov
push
popa
lock
ficoml
mov
scas
jecxz
outsb
iret
fwait
cmp
aam
sbb
add
jmp
lret
test
pop
add
inc
mov
and
sub
scas
xchg
mov
xchg
mov
or
out
rolb
addr16
xchg
orb
adc
cmp
mov
fs
fimuls
mov
mov
shrl
push
dec
ljmp
movsb
pop
rcrb
negb
lret
int3
imul
test
aas
mov
gs
gs
adc
xchg
icebp
and
ds
fs
mov
dec
shll
call
ss
xor
cmpsb
test
shll
je
mov
inc
jns
mov
add
mov
aas
outsl
dec
mov
aad
mov
mov
mov
loope,pt
rol
cmp
mov
cli
or
cmpb
mov
jae
imul
adc
mov
and
cmp
push
arpl
adc
dec
imul
cmp
enter
mov
jb
notb
nop
pop
cmp
mov
sbb
xchg
or
or
sbb
fistps
mov
lcall
mov
rcrl
mov
mov
push
popf
jnp
test
loope
mov
aam
push
repnz
jne
xor
xchg
cmc
cmc
inc
movsl
dec
out
mov
fwait
leave
ljmp
add
cld
and
pop
pop
inc
xor
pop
pop
ljmp
aam
aaa
xchg
js
dec
int3
cmpsb
pop
and
popa
xor
xor
add
mov
repnz
jae
enter
cmpsl
test
testl
jg
push
mov
sbb
xlat
daa
mov
inc
in
nop
jle
pop
std
scas
lret
push
or
jl
push
sub
insb
adcl
or
mov
or
stos
sahf
imul
mov
lea
mov
and
in
je
in
sbb
stos
or
adc
cmpsb
or
divps
inc
ja
pusha
xchg
and
orb
fmull
aas
push
sahf
outsl
aas
cltd
jno
das
adc
or
les
add
dec
ja
mov
ret
pop
sub
inc
lds
adc
sub
add
test
xchg
aam
mov
and
inc
push
add
ds
adc
les
xchg
xchg
mov
xor
jp
sbb
es
pushf
cmpsb
cli
jge
inc
jmp
and
cli
mulps
decb
sub
sub
dec
pop
xor
xchg
fucomip
dec
mov
cmp
pop
mov
ds
cli
enter
jl
jb
or
out
add
sbb
cld
inc
sbb
inc
jo
fmull
cmp
js
dec
int3
in
movsl
fisubrs
adc
bound
xchg
adcb
sbb
cmpsl
and
in
shld
js
pop
mov
jb
push
cld
lds
dec
lods
ljmp
jl
jns
outsl
jl
and
ret
jge
adc
sbb
fsts
pusha
push
xor
sti
adc
or
xchg
iret
and
movsb
xchg
inc
dec
push
popa
pushf
xchg
fdivl
or
xor
push
cs
shlb
jns
pop
push
mov
add
cmp
dec
rclb
daa
clc
mov
mov
jle
rorl
xchg
pop
pop
adc
clc
add
insl
cwtl
pop
push
fistps
test
adc
ljmp
sti
aam
pop
mov
mov
jns
call
arpl
inc
sbb
or
sbb
push
cmp
or
jae
icebp
mov
sub
das
out
mov
pop
js
mov
add
add
or
xchg
out
mov
in
xor
dec
and
movsb
test
xor
fsubrp
jo
xchg
outsb
fildl
sbb
cli
dec
xor
in
xchg
movsb
loope
leave
popa
push
stos
ja
negb
push
xchg
leave
or
push
or
cmp
mov
outsl
mov
push
gs
ret
xchg
push
test
cmp
jne
xchg
add
int
push
or
aas
sub
and
jl
xchg
inc
scas
notb
mov
setle
sub
add
ljmp
ror
test
loopne
arpl
push
jb
mov
jns
sub
jp
enter
and
push
pop
xor
pushf
fld
cmp
xor
cltd
movsl
mov
jl
out
jae
sbb
shl
sub
cwtl
in
adc
dec
aam
aas
in
xor
mov
lds
xor
sub
jle
lret
repz
jno
addb
cmp
int3
inc
outsl
adc
dec
mov
bound
sbb
pop
mov
cmc
imul
and
jbe
pop
bound
das
mov
or
sbb
and
cmp
adc
dec
xor
sbb
mov
inc
shl
pop
push
lock
jmp
and
mov
mov
int3
pop
add
frstor
clc
mov
insl
push
jg
cmc
adc
pop
push
mov
hlt
stos
pushf
sbb
push
inc
js
imul
cltd
add
mov
in
in
or
out
mov
push
in
inc
cmp
mov
je
sbb
and
enter
cmp
mov
in
cmpsb
repnz
sti
jp
std
into
dec
xorl
roll
push
xor
fists
add
bound
jge
sahf
repz
ljmp
jno
pop
clc
subb
scas
sbb
dec
xor
pop
loopne
xor
sahf
jp
mov
jae
cmpsl
loopne
or
cld
mov
jmp
inc
ret
add
adc
inc
mov
enter
xchg
jns
jmp
jnp
xor
mov
leave
or
xchg
mov
clc
xor
dec
cli
idiv
adc
add
jl
xchg
into
lods
rol
pop
les
popa
lret
mov
lods
cld
sbb
bnd
jno
nop
mov
mov
dec
add
inc
push
xor
sub
psrld
ljmp
xlat
adc
into
stos
vminpd
jbe
cmp
repnz
addb
adc
sbb
xchg
jmp
push
fimull
jge,pt
fdivrs
jbe
test
pop
add
push
sarl
inc
sbb
add
mov
adc
inc
cmpsb
xchg
cmpsl
into
mov
adc
push
dec
shl
adc
inc
leave
pop
xchg
sbb
and
icebp
adc
sbb
add
mov
and
add
rolb
neg
sbb
adc
popf
aad
cmc
in
gs
mov
cltd
sub
int3
dec
stc
out
andb
mov
shrb
in
shrb
cmpsb
inc
mov
lods
mov
mov
sub
jae
imulb
push
test
fbstp
push
push
push
imul
push
ja
mov
sbb
scas
movsb
jae
and
fs
test
rcll
pop
xchg
out
mov
lcall
sahf
mov
and
jne
stos
lahf
and
popf
daa
loope
pop
mov
into
cmp
sbbl
in
popf
push
ds
in
xchg
pushf
out
adc
add
xchg
xchg
dec
xchg
xor
addl
pop
stos
mov
pusha
cmp
push
inc
sub
push
test
cld
inc
mov
insl
loop
ljmp
mov
jns
popf
xchg
repnz
aad
fcom
gs
insl
pop
push
pop
mov
aas
popa
cmp
ja
mov
dec
rcll
sahf
pop
inc
ja
insl
and
mov
push
jo
jge
xchg
mov
pop
xor
mov
ret
adc
or
adc
mov
sbb
xchg
sub
lods
or
adc
enter
loope
js
popa
out
sbb
in
inc
xchg
jae
inc
xor
ss
and
sub
lret
ret
adc
arpl
push
shll
xor
or
stos
fs
div
mov
push
hlt
inc
mov
sub
or
dec
es
xor
pushf
jne
gs
scas
clc
out
jp
inc
cmp
imul
scas
mov
sub
adc
out
sbb
and
push
fwait
rclb
mov
in
mov
out
mov
fs
pop
push
pop
add
ret
mov
mov
sub
push
je
pop
jb
mov
dec
mov
mov
test
jne
pop
xchg
test
adc
ljmp
fs
dec
cmp
cld
push
ja
mov
lods
andb
aad
sub
mov
sbbb
mov
in
testb
in
mov
push
test
add
out
lret
mov
xchg
push
pop
mov
out
jae
inc
mov
jmp
sub
insb
sbb
cmpsb
out
jns
popf
adc
imul
xchg
dec
sahf
in
outsl
test
and
nop
xchg
stc
add
push
inc
dec
jge
fisubl
and
into
testl
aam
jg
ds
xchg
push
loopne
loop
jmp
xchg
sbb
add
mov
movsl
jb
sti
mov
fwait
xchg
mov
mov
insb
subb
sti
mov
arpl
xor
dec
hlt
pop
inc
add
xchg
out
js
dec
lea
sahf
cmpsl
sbb
ret
stos
out
or
sub
repz
pushf
pushf
jp
or
outsl
call
fwait
xor
adc
or
push
mov
fadds
fcomps
mov
jne
int3
cs
gs
fs
xchg
cmp
iret
daa
test
insb
push
add
negl
mov
fisttpll
enter
popa
out
add
dec
insb
xchg
inc
mov
orb
xor
js
jle
adc
xor
repz
add
jp
push
add
dec
inc
outsl
pop
lret
in
lcall
inc
mov
inc
pop
or
cmpsl
mov
cmp
fnstenv
jmp
pop
lret
pop
shl
scas
mov
or
fadd
jo
sub
in
sub
stos
lods
push
mov
aaa
in
jle
movsl
ret
xor
cwtl
lret
iret
or
mov
inc
lret
fiaddl
shrb
cmc
iret
add
push
xchg
icebp
xchg
mov
out
out
out
mov
jg
dec
mov
xchg
and
push
mov
outsb
mov
int
xlat
push
mov
mov
push
inc
test
lcall
lods
dec
push
into
mov
sub
popf
leave
and
inc
imul
pop
in
loopne
movsl
mov
and
xchg
lock
pop
fdivrl
enter
adc
aas
mov
lret
mov
es
sub
fs
movsb
inc
push
inc
loope
sub
popf
xor
jg
in
nopl
clc
pushf
fistpll
das
sub
call
dec
in
mov
stos
in
lahf
subb
or
xor
or
mov
push
xor
sbb
pop
xchg
into
mov
and
push
pop
lds
inc
or
xor
into
push
pop
rclb
mov
scas
testl
scas
xor
push
adc
fst
jp
cmp
push
cli
les
rcrl
xchg
cmp
mov
out
push
lcall
xor
push
jp
jmp
sbb
xchg
mov
sub
xor
push
lock
fstpt
mov
mov
cltd
sub
mov
test
inc
inc
ret
sarb
cltd
lret
lock
outsl
push
push
mov
xor
aas
sti
mov
adcb
stc
xchg
js
movsl
jp
and
das
test
popf
movsl
mov
ret
inc
repz
pop
xor
cmp
mov
cld
das
sbb
dec
lret
das
out
cmpsb
shrb
das
and
push
sbb
out
out
aaa
test
fdivs
jg
nop
insb
pop
negb
push
out
dec
idivb
fs
xchg
movsb
pop
popf
dec
addr16
leave
sete
push
jl
popa
fisubl
sub
vcvttss2si
out
scas
mov
imul
in
lret
push
ret
pop
push
enter
jp,pt
jb
out
out
scas
hlt
lret
call
jle
jno
and
adc
add
push
subl
inc
mov
insb
xchg
outsl
lds
es
adc
enter
int3
cmp
adc
add
sbb
mov
add
jmp
fwait
mov
adcl
js
dec
dec
imul
imul
xchg
jno
cmp
decl
adc
shrl
roll
test
cs
sub
and
repz
loop
mov
sbb
xchg
das
stos
push
sub
pop
xlat
mov
cmp
pop
add
ret
dec
js
and
js
inc
pop
clc
add
cmp
xor
or
repnz
test
sti
dec
imul
out
mov
mov
lar
xchg
mov
sub
mov
iret
push
aaa
push
mov
shll
mov
fmul
xchg
xchg
lods
push
std
mov
repz
inc
mov
or
mov
push
pop
enter
jo
xchg
inc
cmp
fsts
or
jge
mov
adc
aad
andb
pushf
and
jmp
xor
in
dec
mov
cmpsl
test
add
test
adc
je
sahf
mov
popf
push
cld
pop
and
gs
xchg
test
or
pop
jg
sbb
sub
xchg
mov
insb
sbb
adc
lock
dec
or
icebp
cltd
or
hlt
das
inc
xchg
xchg
xor
mov
adc
arpl
je
jne
enter
xor
push
or
in
cmp
push
pop
scas
pop
sub
inc
sub
cmp
jge
and
stos
scas
in
jge
adcl
inc
aaa
xlat
dec
lock
jnp
repz
not
in
sarl
sbb
dec
mov
popa
mov
inc
mov
push
jecxz
sub
xchg
mov
mov
jle
mov
sbb
idivl
fimull
mov
cmp
jbe
mov
call
mov
xlat
push
imul
in
cwtl
es
pop
xchg
test
xchg
aad
mov
dec
imul
js
xchg
mov
test
push
and
sub
lods
sbb
pop
jp
mov
mov
and
ja
ret
pusha
jb
out
and
pop
mov
imul
pop
cmpsb
sbb
jae
ds
mov
data16
push
out
mov
stos
mov
std
inc
cli
jo
dec
pop
cwtl
lret
jmp
sbb
and
cmpsb
cmc
or
jnp
andb
jo
xor
cmp
out
fucom
push
sub
mov
negb
mov
mov
insb
out
icebp
push
xor
adc
xchg
dec
cltd
nop
scas
daa
pop
lahf
rcrl
aaa
dec
lods
sub
lahf
rcl
mov
mov
sub
into
mov
jmp
cmc
mov
push
mov
mov
jbe
pusha
lret
outsl
cmpsl
mov
ret
sti
cmp
fdivr
or
scas
pop
mov
fsubr
pop
dec
divl
jno
hlt
arpl
fwait
add
xor
sahf
cmp
add
cmpb
ret
jo
outsl
ja
test
jg
mov
xor
sbb
or
fsub
sti
mov
imull
sub
cmpsb
push
hlt
imul
sarb
mov
mov
jne
pop
lret
mov
xor
jbe
adc
cmc
or
xchg
sbb
mov
mov
sbb
jae
add
xor
stos
mov
fwait
xchg
loope
in
inc
int3
mov
jp
fnsave
pop
xchg
ficoms
lahf
into
scas
jno
mov
xlat
ja
pop
add
jns
jle
dec
repnz
les
fnstsw
cmp
dec
popf
aaa
out
push
ds
mov
adc
adc
in
loope
ss
mov
pop
xor
cmp
lods
jmp
mov
inc
loope
push
push
or
dec
pop
mov
sbb
cmp
push
xlat
js
fisubs
mov
mov
adc
mov
pop
pop
rorb
lods
insb
inc
mov
outsb
ror
or
scas
movsb
ja
pusha
pop
push
and
xchg
ljmp
lret
sub
push
adc
aaa
popl
sub
xor
mov
xchg
mov
sub
out
andl
dec
pop
fadd
mov
shll
rclb
jmp
lods
cmp
pop
jo
cwtl
xchg
push
xor
mov
sub
jae
cmp
inc
mull
and
out
insb
or
aaa
add
jp
pop
pop
stc
cmp
push
cltd
es
fistpll
xchg
mov
in
adc
dec
mov
inc
stos
sbb
loop
shl
dec
mov
dec
test
and
push
adc
xor
sub
jo
fsubl
sbb
sbbl
mov
scas
popa
lods
inc
mov
test
fcmovnu
les
test
dec
push
sbb
inc
addl
pop
mov
scas
add
nop
and
xor
nop
test
sub
shl
loopne
data16
mov
call
aaa
lret
int
mov
mov
repnz
dec
lock
mov
xchg
in
add
or
mov
adc
adc
ljmp
jo
jl
fmuls
or
sub
mov
push
cmp
repz
jp
popf
in
sbbb
ljmp
and
sbb
push
cmp
clc
notb
ret
imul
shll
adc
aaa
pop
shll
lea
lcall
int3
into
in
inc
xor
insb
pop
leave
adc
xor
stos
mov
ss
cmpsl
or
mov
das
and
cmc
ss
mov
xor
push
pop
or
je
andl
cmpsb
push
mov
pop
cmovnp
mov
sti
xlat
mov
xor
outsb
out
out
jp
or
into
add
movsb
sahf
ss
outsb
daa
push
and
sbb
pusha
repz
mov
insl
mov
mov
nop
add
xchg
pop
scas
xor
inc
lret
ss
clc
ficompl
push
js
push
sbb
clc
fdecstp
or
clc
les
add
dec
jl
cmp
add
pushf
mov
pop
fimull
ljmp
xchg
pushf
cmp
mov
aam
jno
cmp
popa
mov
dec
xchg
mov
push
clc
movsl
cld
xchg
leave
test
xchg
shrl
stos
xor
iret
sub
iret
and
push
cmpsl
mov
dec
xchg
push
int
icebp
xor
cld
pop
mov
movsb
cmpl
pusha
push
pop
push
mov
in
ljmp
xchg
jle
lahf
in
loope
or
test
sbb
js
mov
js
push
cmp
pop
andl
in
sub
jl
lcall
adc
aaa
pop
xchg
fwait
aas
jge
jnp
jbe
or
jmp
shll
lret
shll
inc
jmp
repz
lods
pusha
rclb
pop
mov
mov
mov
xor
sarb
or
insb
je
sbb
jo
out
push
cwtl
mov
xchg
jg
je
jmp
repnz
dec
sub
stc
inc
lods
xchg
idivl
adc
popf
cmp
aas
cmp
dec
inc
data16
out
sahf
ret
in
push
movsbl
xchg
subl
fistpll
jae
sti
lahf
popa
in
shrl
jns
insb
jp
leave
sbb
scas
out
and
inc
scas
xor
data16
pop
call
or
mov
push
fistpll
jmp
xor
pop
push
or
mov
xlat
jp
test
rol
mov
lds
ljmp
xor
fcmovu
inc
push
add
lds
mov
stos
int
cmp
add
leave
push
mov
dec
out
fs
jle
xor
rclb
and
inc
filds
pop
cs
outsb
pop
std
push
push
cld
inc
bnd
xchg
adc
mov
cmp
inc
mov
xchg
or
imulb
repnz
in
out
ret
pop
or
bound
lcall
and
daa
or
xlat
xchg
movsl
mov
or
lret
and
xor
mov
insl
sbb
dec
pop
lret
mov
popf
adc
addr16
sbb
aam
jge
test
stc
and
push
inc
ret
xchg
mov
pop
mov
loop
lret
cmp
std
andl
int
adc
mov
ss
inc
adcb
movsb
dec
pushf
mov
dec
dec
das
in
jmp
mov
mov
pop
and
xor
rol
aaa
dec
add
daa
or
adc
jecxz
mov
popa
add
inc
iret
jns
adc
loop
xorb
iret
cmp
and
int3
cmpsb
test
push
pop
roll
and
xor
push
sbb
sahf
icebp
pop
and
negb
imul
fwait
push
aam
cmpsl
out
push
in
pop
dec
cmpsl
out
or
pop
dec
aas
mov
popa
outsb
cmpsl
aaa
aaa
jno
shlb
filds
xchg
mov
mov
mov
jno
mov
dec
insb
sub
push
jo
or
inc
addr16
xchg
or
cmpb
jp
push
mov
pushf
mov
mov
cmpnleps
jge
mov
inc
adc
xchg
inc
sbb
mov
mov
cs
test
sbb
mov
or
lahf
pop
push
adc
gs
imul
inc
mov
scas
inc
lret
push
test
roll
mov
push
add
mov
out
add
mov
push
out
sahf
pop
mov
lods
bound
mov
jno
and
iret
rcr
jnp
push
add
int3
dec
into
jecxz
js
aaa
xchg
and
or
shrb
test
mov
jne
xor
pop
inc
mov
test
cmp
or
mov
pop
sub
fsubr
pop
rorl
out
xchg
jo
sub
add
mov
mov
cmpsb
aam
test
out
mov
xchg
mov
jne
adc
test
popf
jmp
push
dec
cld
fidivl
and
shll
loope
xchg
in
loope
ljmp
inc
mov
nop
lahf
add
repz
push
jmp
test
jmp
pusha
pop
shll
movsl
out
loope
fwait
and
push
iret
xlat
pusha
test
dec
cli
push
ljmp
icebp
scas
cmp
or
sbb
mov
or
pop
std
fldenv
das
pushf
cmpsb
fistl
push
sbb
cld
xchg
pop
inc
das
lods
jb
adc
sbb
jae
lcall
jge
dec
cmp
pop
xor
ret
arpl
and
sub
push
shll
inc
cli
dec
movsb
sbb
jl
lods
fdivrs
add
add
mov
push
repnz
in
and
ds
dec
jl
inc
dec
xorl
subb
fisubrs
loopne
adc
push
mov
inc
andb
ds
test
nop
cli
int3
push
push
jo
jge
int3
mov
pusha
adc
cmp
xchg
pop
hlt
mov
add
out
sbb
and
cmp
jle
mov
sahf
mov
jmp
mov
in
out
push
sbb
mov
or
dec
lret
test
add
inc
movsb
cmp
in
loop
sub
and
push
lea
ja
dec
testb
cmp
mov
xchg
imul
fstpt
ds
lcall
fscale
dec
jge
loope
cld
mov
enter
and
movsl
push
adc
fidivl
adc
sbb
add
data16
add
pop
jmp
leave
pop
pop
pop
sbb
lock
dec
lret
shlb
push
in
pop
loopne
and
stc
push
call
jns
mov
fscale
filds
cmpsb
jmp
adc
leave
xor
je
ficoml
gs
or
fmull
sub
mov
and
repz
xchg
push
mov
fs
jb
arpl
repnz
roll
addb
add
push
scas
stos
and
sbb
enter
ret
std
es
mov
pop
sti
or
into
xchg
scas
fisubs
out
fsubrl
jno
push
icebp
cmp
or
xlat
pusha
addl
orb
vpunpcklqdq
sub
mov
aad
xchg
adc
push
bound
icebp
pushf
loop
inc
test
mov
and
in
lock
jne
dec
ds
in
in
iret
iret
mov
or
inc
out
sahf
inc
xchg
jmp
pusha
sbb
mov
dec
addr16
testb
cmp
cmc
cwtl
scas
data16
mov
sbb
pop
lret
lods
add
roll
cmp
mov
ficoml
lret
jl
movl
push
mov
adcb
xchg
scas
lods
mov
adc
rorb
sub
out
xor
sbb
mov
out
push
outsb
arpl
inc
int3
adc
aaa
push
rcrl
in
fldcw
pop
cli
push
mov
cld
lods
into
call
movsb
push
mov
mov
cli
xchg
sub
sbb
stc
repz
test
jecxz
int
pop
movsl
std
mov
cld
cmp
pop
push
outsb
mov
leave
jecxz
ret
out
in
pop
jo
ret
sbb
shl
dec
and
sti
dec
in
sbb
mov
inc
xorps
add
imul
gs
dec
or
jg
andb
push
fidivrl
mov
cmc
jno
cmpl
jecxz
test
das
cs
inc
pop
add
sbbb
xchg
adc
pop
imul
outsb
lds
shl
sti
cmpsl
or
mov
jb
aam
jo
or
cmc
call
popf
or
lds
fildl
sbb
or
cmp
scas
mov
jne
add
movb
dec
push
rcll
cmp
scas
test
mov
in
pop
inc
sub
and
shrb
cmp
push
pop
rcrb
aas
jp
test
popf
popf
adc
sub
jmp
shlb
enter
aaa
inc
iret
out
sbb
enter
iret
mov
mov
orb
out
pusha
xchg
inc
test
lret
mov
mov
inc
cmp
incl
pop
andl
pop
inc
das
pslld
inc
sbb
inc
in
adc
pop
and
cmc
add
out
arpl
repz
push
bound
hlt
jp
jb
jne
push
pushl
pop
in
test
inc
xorb
and
push
sbb
loope
lcall
adc
insl
xchg
call
inc
pop
gs
cmpsl
out
inc
mov
ljmp
int
adc
js
sbb
xlat
test
out
mov
aad
xor
sub
movsb
jge
out
nop
cmc
jb
push
shrb
inc
cltd
cmp
hlt
sti
or
pop
push
in
dec
call
sub
test
or
imul
mov
shrb
lock
aam
gs
gs
adc
adcl
lds
sbb
shlb
pop
insb
bound
mov
xchg
dec
pop
sahf
stos
roll
push
sbb
js
test
fildl
jmp
sub
daa
sbb
cmp
andb
dec
lods
jl
push
ljmp
jl
inc
inc
push
jl
into
mov
scas
fistps
cmpsb
movsb
jne
int
ds
test
call
dec
sub
repz
or
rolb
fnstenv
cmp
iret
sbb
push
ret
ja
mov
mov
jle
xor
sub
repnz
push
sbb
lret
cmp
push
lcall
pop
lret
shlb
rcrb
jle
xor
shl
sbb
mov
and
dec
sub
aam
cmp
into
loopne
jl
imul
out
and
mov
xchg
fs
stc
jge
xchg
xchg
cmp
pop
int
cmp
lock
shll
fwait
std
cld
bswap
repz
rcll
mov
ss
pop
push
mov
push
fnstcw
add
dec
subl
clc
pop
xor
cs
hlt
scas
mov
pushf
pop
adc
dec
icebp
add
mov
fistl
push
pushf
add
insl
dec
js
outsl
mov
int
xor
aad
push
outsb
or
cmp
lods
pop
fwait
jo
mov
pop
lret
jg
cld
mov
push
mov
call
lret
add
add
fldenv
outsl
add
fwait
test
jle
insl
mov
adc
popa
sbb
testl
xlat
xor
mov
out
cld
or
das
sub
rclb
jb
inc
pop
subl
mov
loop
inc
xchg
insb
cmpsb
inc
mov
ljmp
dec
xchg
mov
jns
xchg
inc
test
outsl
insl
dec
lea
xor
dec
mov
les
dec
test
mov
add
in
sub
jl
add
call
hlt
test
test
cs
push
mov
in
jns
pusha
shl
pop
lods
sub
mov
xchg
out
or
roll
push
scas
mov
or
aaa
aam
pop
int3
adcl
inc
dec
dec
daa
jns
mov
jl
hlt
sub
idivb
ds
sbb
fsub
xor
pop
push
mov
loopne
or
rorb
mov
mov
jle
icebp
test
pop
cs
lret
mov
les
cwtl
mov
bound
cltd
jno
imul
roll
arpl
pop
or
pusha
push
outsl
loop
cmp
jns
mov
nop
aaa
push
xor
cmp
insb
fmuls
push
call
add
cmp
nop
sbb
rcl
jecxz
nop
or
add
jp
sbb
insl
inc
mov
loope
push
mov
je
orb
into
clc
mov
mov
push
cmp
or
xor
dec
ret
xor
lret
bound
adc
fcomps
and
mov
sub
add
lock
mov
pop
call
iret
hlt
repz
pop
jae
pop
out
push
add
divb
stc
in
ret
xchg
or
add
xor
xchg
jns
xor
pusha
xchg
mov
pop
test
orl
and
add
pop
mov
sbb
mov
test
rcrl
xor
and
js
dec
mov
out
mov
and
cmp
cmpsl
push
cld
sbb
mov
in
cmc
mov
pop
outsl
test
sub
repnz
sub
push
jnp
cmp
arpl
addr16
gs
sbbl
cmp
xor
and
cld
and
mov
pop
and
rclb
or
mov
push
or
fwait
xor
xchg
shr
xchg
cmp
push
lret
bound
mov
xchg
loope
xchg
add
adc
mov
mov
push
or
loopne
xchg
cltd
cmp
push
out
in
mov
adc
in
lds
push
push
sbb
ficoms
xor
jnp
leave
fcoml
pop
sbb
mov
push
inc
xor
cld
pop
mov
xchg
aam
les
adc
pop
enter
cmpsb
mov
or
out
repnz
pop
in
mov
push
out
xor
ja
adc
inc
daa
push
fnstsw
push
push
stos
xchg
sarw
mov
andb
adc
or
adc
nop
inc
pushl
sarb
xchg
xchg
iret
pop
sar
pushf
inc
xor
es
pop
stos
repz
lods
push
in
fdivs
int3
sti
addb
adc
fwait
pushf
mov
test
sbb
mov
outsb
aas
inc
roll
xchg
xor
pcmpgtd
and
mov
fnsave
inc
xchg
pop
lea
or
cmp
cmpsl
nop
sub
sarl
out
or
outsl
cmp
pop
shlb
aas
and
aas
pop
jbe
mov
cld
rcr
inc
add
jge
pop
cmp
icebp
call
int
stc
ja
and
jge
rcl
imul
pop
jnp
jp
test
test
xlat
test
popf
lock
aas
aam
mov
sbb
lock
push
add
ficomps
movsb
imul
or
push
cli
dec
das
or
outsl
call
push
je
addr16
dec
rolb
mov
subb
jns
adc
add
fists
dec
sub
mov
xorb
xor
push
add
inc
fdivrl
insl
sbb
or
rcl
jbe
repz
out
and
pusha
dec
fsts
int3
mov
cmp
sahf
mov
scas
inc
xor
fndisi(8087
outsb
ret
insb
jecxz
mov
jmp
add
cmp
cmpsb
outsl
and
cld
add
inc
jmp
nop
mov
push
or
and
pop
add
into
adc
sbbl
stc
ss
add
stos
test
xchg
scas
cwtl
inc
mov
imul
jge
cli
mov
push
cld
pop
xor
jno
mov
pop
lahf
sub
jp
pop
sbb
icebp
push
mov
and
sub
jo
gs
call
ficomps
in
repnz
xchg
roll
rorl
add
cli
push
shll
mov
faddl
repz
cltd
xor
cltd
imul
repnz
push
lcall
jge
or
sbb
xor
mov
mov
test
xchg
inc
pop
ss
xchg
push
mov
mov
addr16
fbld
xor
xor
mov
mov
push
lret
pop
jmp
mov
fldl
sub
mov
enter
sub
mov
ds
bound
test
cmp
dec
popf
mov
mov
jb
loope
lret
in
or
mov
pop
push
loope
and
jo
hlt
enter
cltd
fs
mov
add
scas
movsl
dec
or
mov
add
adc
ljmp
add
aas
les
inc
lahf
mov
inc
jmp
inc
jno
addl
lods
sahf
fxam
outsl
hlt
jo
addr16
shll
or
inc
and
pop
cmp
cld
and
dec
xchg
out
push
pop
stc
and
xchg
cli
dec
ret
jnp,pn
cmp
pop
and
push
pop
jnp
mov
pushf
and
bound
cltd
imul
push
xor
pop
cwtl
lock
xor
sub
fcomps
xchg
inc
fmuls
mov
add
loop
jle
sahf
subl
xchg
dec
mov
lods
mov
push
jae
addr16
aas
dec
inc
sub
fiadds
adc
xlat
in
cld
jg
bound
cmp
dec
test
stos
dec
inc
inc
mov
rcr
push
mov
in
cmp
cmc
jp
cmp
dec
lock
inc
lahf
add
sbb
loope
clc
testb
fwait
rep
dec
divl
outsb
lea
sub
test
out
les
dec
dec
mov
in
xor
push
cmc
xchg
xor
pop
stc
mov
cltd
lcall
sbb
out
fdivl
jo
repz
xchg
mov
dec
sbb
mov
pop
xor
dec
xor
das
int3
mov
out
cmc
mov
mov
aas
int
xor
lcall
ss
scas
stos
cmc
repnz
insb
pop
mov
mov
int3
xor
add
aam
fisubs
push
jae
fdivp
inc
xor
add
stos
dec
sbb
loopne
jmp
jle
cmpsb
jmp
clc
mov
hlt
pop
xchg
loopne
pop
mov
fldenv
test
shl
push
inc
adc
aam
xor
jecxz
mov
addr16
cs
push
pop
sub
nop
vpunpcklwd
mov
pusha
push
ficompl
jge
outsl
dec
push
repnz
lret
add
jl
pop
lods
mov
gs
in
imull
push
lods
and
mov
cmp
stc
dec
cmpsl
rcrb
shl
test
xchg
mov
sub
adc
dec
int
cmpsb
arpl
lcallw
push
cmp
shrl
jno
push
pop
popf
mov
dec
popf
or
popf
movsb
cld
sti
lahf
mov
mov
jno
adc
adc
mov
dec
sbb
pop
popf
lock
or
ret
shrb
add
insl
or
mov
and
inc
mov
mov
sti
test
pop
cmp
adc
jb
dec
in
movsl
sub
dec
aam
push
cmp
add
jg
clc
data16
std
or
hlt
test
cmpsl
into
inc
test
dec
cmp
jg
pop
cmp
cmp
dec
rclb
xchg
into
mov
daa
cmp
jo
pop
jmp
lcall
jo
fmulp
mov
gs
xlat
popl
lcall
lds
repz
inc
ficoms
mov
shrb
xchg
push
fidivrl
out
mov
jge
fadd
jbe
iret
popa
xchg
cmp
pop
cli
xchg
shll
cmpsb
add
cs
outsl
mov
outsb
jbe
adc
popf
dec
in
psllq
iret
sub
xor
ret
inc
lds
popa
mov
push
stc
out
je
push
pop
or
jns
or
or
test
xor
pop
jne
test
cwtl
pop
in
inc
mov
mov
xor
je
pusha
add
pop
mull
xchg
jno
mov
push
jnp
lcall
adc
stc
cmp
mov
inc
je
aaa
js
mov
lcall
xor
mov
sti
rcll
fs
dec
xchg
mov
icebp
insb
mov
into
dec
jmp
mov
add
notl
push
loopne
xchg
mov
jae
jae
add
xor
fcompl
lahf
sbb
jae
cmc
xchg
add
ss
sub
inc
cltd
dec
scas
sbb
jbe
idivl
sub
push
enter
mov
fwait
das
arpl
sub
mov
inc
pop
fwait
cs
sub
adcl
pusha
pop
test
mov
sub
rolb
fsubrl
adc
das
push
add
or
out
mov
icebp
xchg
pop
fxch
dec
arpl
js
fsubs
repz
jae
das
dec
sub
push
cltd
push
mov
ja
dec
bound
imul
xorb
and
push
int
and
inc
das
cmpsl
and
jno
mov
test
cmpsl
data16
aad
mov
push
inc
icebp
jb
gs
addl
outsb
sti
ljmp
inc
mov
xchg
add
mov
mov
lods
and
push
stos
sbb
mov
cmp
notl
ljmp
push
lds
pop
jge,pn
jge,pn
cltd
dec
adc
jae
outsb
mov
or
repz
or
lcall
sbb
dec
sub
mov
stos
add
out
fcoml
xchg
xchg
rolb
xor
icebp
pop
mov
mov
or
mov
fisubrl
arpl
add
xchg
sub
into
pop
in
insb
lea
add
gs
bound
sbb
nop
sub
push
int
scas
cltd
mov
stos
loope
jb
mov
aad
scas
lock
les
shrb
fcmovne
in
xchg
in
add
aaa
outsl
popa
test
cmpsb
lods
lods
fs
cs
out
mov
cmp
pop
xor
adc
in
roll
test
push
lcall
push
push
push
sub
adcb
add
mov
rol
mov
sub
gs
ficoml
sti
jg
scas
imul
lods
dec
popa
fucomip
cmp
arpl
jno
dec
jae
in
out
out
xchg
movsl
jbe
lcall
fbstp
aas
push
xlat
inc
push
dec
pop
icebp
push
and
scas
xor
iret
sarb
in
fstpl
addr16
insb
aad
fidivs
mov
pop
sarw
adc
insb
inc
jmp
dec
pop
fs
push
push
cmp
mov
cmc
imul
insb
pop
push
pushf
ret
ds
jae
add
jns
jbe
out
xor
adc
push
pop
jp
clc
leave
aas
cmp
sbb
cmp
dec
dec
mov
jb
cmpsl
jge
loopne
gs
out
xor
mov
adc
or
loopne
jmp
xchg
hlt
adc
int
in
pop
xorb
popf
fcom
inc
xchg
roll
testb
mov
popa
std
daa
dec
mov
add
adc
jmp
push
std
pop
push
cmp
add
mov
inc
ds
movsb
imul
sub
enter
ljmp
mov
out
dec
insb
or
das
or
or
xchg
js
or
dec
mov
sbb
repnz
push
fadd
cmp
jp
mov
cmpb
mov
pop
fistl
in
lahf
cs
xor
leave
push
jnp
lds
xor
dec
inc
out
mov
xchg
repz
jl
mov
sbb
out
sbb
xchg
push
inc
or
inc
jmp
fmull
dec
adc
sub
nop
subl
mov
push
xchg
ficoml
mov
stc
cld
pushf
pop
fwait
jne
pop
popf
pop
int
mov
sub
fadds
testb
cmpsb
xor
sbb
adc
notb
pop
out
inc
jbe
les
in
jecxz
adc
sub
xchg
adc
repnz
jecxz
pop
lahf
add
inc
out
xchg
or
popa
pop
jb
push
je
scas
mov
xor
push
dec
xlat
ljmp
ss
xchg
jb
das
sti
mov
arpl
fwait
jg
xchg
xchg
imul
icebp
mov
cmp
and
dec
jg
push
mov
in
lret
adc
pop
sbbb
mov
je
mov
jo
sub
fcmovb
dec
and
in
jmp
mov
sbb
cmpsb
addb
dec
or
cmp
daa
outsb
fldt
nop
sbb
ds
ret
pop
pop
xchg
mov
or
inc
sub
add
sbb
in
or
pop
lret
inc
repz
stc
cwtl
mov
flds
jb
nop
icebp
les
cmp
add
mov
push
xchg
and
insl
loopne
loopne
dec
mov
push
add
out
xor
out
bound
cmp
dec
aaa
das
push
dec
rcll
js
mov
sbb
sarb
xor
out
mov
clc
pushf
dec
aad
dec
scas
sbb
insl
frstor
into
pop
gs
jbe
dec
push
jl
je
je
push
adc
out
int
ja
inc
sub
in
cwtl
or
cmp
sar
out
sbb
test
jl
ja
idivb
or
jecxz
shlb
mov
arpl
and
out
nop
sahf
and
fsubrs
pop
fadds
pop
pop
imul
and
cmc
adc
add
cmp
jp
inc
in
pop
out
fnstenv
lds
inc
pop
push
mov
sbb
ss
inc
push
dec
jno
call
xorb
xchg
pop
movsb
xor
add
test
out
scas
or
int
repz
lea
xor
std
add
iret
mov
mov
dec
or
gs
cmp
adc
xchg
popa
cmp
or
mov
adc
mov
lods
imul
inc
inc
out
mov
int
add
jg
sbb
push
lea
mov
jecxz
xor
bnd
divb
mov
hlt
xchg
push
rcrb
cmc
lock
das
mov
xor
mov
dec
push
clc
add
or
dec
lcall
cmp
aam
push
add
jp
test
mul
fldl
sbb
dec
loopne
and
jle
xchg
sbb
xor
jg
shlb
sub
adc
int
pop
lret
js
cmp
add
ja
mov
hlt
das
loope
xchg
and
daa
mov
gs
test
repz
imul
xchg
inc
xor
sbb
xchg
repz
lcall
int3
mov
dec
push
fwait
jle
in
fisubs
orb
ja
sub
lods
cmp
jp
out
xor
insl
ja
imul
out
rclb
ffree
sarb
mov
out
js
adc
mov
leave
ds
ret
xor
dec
aas
mov
mov
mov
mov
add
inc
inc
insb
testl
lret
push
xor
mov
insl
jns
insb
decb
outsl
push
mov
inc
inc
sbb
sub
xchg
popa
pop
cwtl
dec
push
dec
push
bound
cmp
jne
or
cmpsb
inc
arpl
push
push
cld
leave
inc
sbb
aas
jg
int3
call
stc
subl
addl
add
in
sbb
pop
cmpl
daa
andb
dec
xchg
les
iret
mov
mov
inc
loop
xchg
or
pop
popa
scas
add
pop
dec
dec
loop
sbb
mov
inc
sub
mov
gs
push
cmp
jo
sbb
push
clc
jo
mov
push
scas
cmp
testb
dec
iret
mov
xor
enter
cmc
loopne
mov
cmc
mov
cmp
pop
std
sub
sbb
inc
sbb
push
das
sub
fistl
xor
dec
test
popf
and
jg
fnstenv
test
fwait
push
ja
inc
mov
ficompl
mov
cmpb
popa
dec
sub
out
int3
and
push
dec
imul
adc
jbe
in
push
xor
xlat
sbb
ret
inc
outsl
enter
xchg
pop
jl
pop
mov
xlat
daa
pop
and
gs
dec
arpl
push
in
call
xchg
das
push
fiaddl
movsl
orl
bound
insl
or
xchg
cwtl
mov
std
push
pop
mov
mov
out
es
dec
das
mov
insb
andl
push
jp
fidivs
xor
cltd
push
jnp
bound
sub
mov
cmpsl
sub
adc
or
pop
mov
mov
cwtl
jae
jae
jo
imul
mov
ds
test
int3
mov
pop
push
clc
mov
dec
cmp
stos
adc
push
cmp
pop
mov
xchg
mov
js
lods
pop
clc
std
lock
or
aas
mov
add
fmul
shll
xchg
mov
xor
inc
pop
pop
push
test
sarl
sbb
jle
adc
stc
cmpsb
test
add
inc
xor
inc
test
rcrl
mov
rcr
and
inc
insb
outsb
cli
jp
add
xchg
fnstenv
loopne
sbb
rolb
or
aas
xchg
jg
lahf
xor
pop
jl
xor
rcl
rolb
in
cmpsb
rcll
or
test
popf
and
pusha
push
mov
dec
sbb
or
jae
lods
or
pusha
xchg
mov
pop
popa
or
sbb
push
arpl
les
imul
rcl
int
xorl
in
xor
shll
pop
dec
fisttps
fsts
lahf
xchg
stos
pop
outsl
push
cltd
cltd
dec
clc
sbb
nop
adc
leave
fldenv
mov
out
psrld
pop
mov
or
add
out
xchg
inc
test
sub
jnp
jg
sahf
jno
lahf
add
ja
aas
or
in
cld
xchg
das
stos
and
jecxz
test
ret
ret
and
mov
fxch
pop
sahf
cmp
dec
mov
lds
inc
mov
xchg
or
fwait
jne
mov
or
fnstcw
jno
adc
jae
popf
jp
int
sub
mov
ret
leave
xor
mov
arpl
testb
cmpl
das
mov
hlt
std
stos
jmp
jl
aad
mov
test
imul
mov
and
push
sub
loopne
mov
loopne
jecxz
dec
or
movsb
stc
lea
ljmp
cmpsb
push
mov
fwait
aam
std
push
mov
inc
popf
iret
jne
icebp
adc
lahf
bound
mov
xor
inc
sbb
lret
mov
insb
or
adc
adc
addb
add
xor
jle
pop
xor
inc
mov
sub
cli
sub
shl
add
sub
mov
add
ffree
or
sarl
sub
jns
and
mov
aaa
pop
sub
xor
sbb
cmp
iret
mov
lock
sbb
sub
iret
mov
fisttps
cmp
pushf
lods
adc
aaa
imul
inc
xor
adc
xchg
cmp
clc
push
icebp
xor
dec
les
lret
inc
pop
adc
iret
add
lret
rorb
dec
cmp
lock
mov
xchg
rcll
adc
push
cmp
ffreep
outsb
sbb
int
rol
xchg
lds
cmpsb
icebp
pop
xor
mov
popf
lds
daa
xchg
pop
dec
xchg
mov
fimuls
cld
push
cs
lods
xchg
hlt
or
call
repz
mov
shr
popa
cwtl
out
lds
inc
sub
fs
mov
mulb
lds
xchg
mov
subb
insl
test
push
dec
jne
push
into
push
dec
sub
and
insb
and
fs
scas
mov
in
adc
iret
hlt
jg
sbb
mov
cmp
inc
sub
dec
pusha
mov
ss
cli
pop
pusha
rorl
loopne
jno
sahf
mov
rolb
lahf
mov
mov
adc
mov
mov
sub
mov
movsb
sbb
stos
not
mov
or
dec
sarl
popa
sbb
notb
sub
sbb
leave
adc
push
flds
rorl
adc
jge
imul
lea
or
insb
lahf
cmp
bound
inc
inc
scas
popa
push
icebp
lods
jecxz
pop
dec
sub
adc
sub
addb
or
leave
decl
movsb
lret
cwtl
pop
adc
mov
pop
fcmove
mov
pop
cmpsl
push
in
jmp
mov
mov
add
push
inc
sub
push
cmp
or
jno
shr
in
mov
icebp
fs
cmpsb
out
pop
cmp
in
and
pop
mov
and
mov
mov
cmc
lret
cwtl
mov
pushf
and
repz
add
fisubs
scas
repnz
movsl
xor
lcall
aad
push
push
xlat
outsl
imul
add
mov
lcall
outsl
jecxz
cli
stos
cmpsb
out
sbb
and
jnp
sahf
sub
pushf
ds
jnp
xchg
leave
add
pop
mov
xor
push
aas
xchg
dec
add
fs
push
pop
out
adc
sub
cmp
cs
sbb
cmpl
push
cs
aaa
mov
ja
inc
xor
mov
jne
sbb
push
fs
mov
shll
mov
out
add
mov
andl
cltd
mov
loopne
add
xor
push
out
mov
ja
sub
data16
mov
and
inc
add
mov
nop
jl
push
cmp
test
cmp
mov
cmc
xchg
mov
mov
sarl
xlat
dec
jmp
cmc
adc
or
into
loop
lret
inc
add
dec
popf
jno
pop
push
popa
xor
and
lret
cmp
and
stc
and
cmp
cmp
push
int3
pop
andb
or
movl
outsl
and
xchg
xchg
add
js
outsb
jae
mov
ljmp
xor
mov
xlat
scas
roll
jecxz
lods
pop
push
xchg
popf
sub
pop
int
stc
dec
mov
popa
jno
adc
lods
out
mov
pusha
jle
mov
fmull
popa
mov
jo,pt
mov
jecxz
lcall
sub
jge
mov
push
dec
fstpt
test
hlt
mov
sub
in
sub
xchg
lahf
imul
pop
push
ss
fmul
jge
mov
addr16
aad
stc
mov
mov
cmp
enter
arpl
bound
std
push
fwait
icebp
stos
mov
sub
adc
sbb
mov
add
dec
jnp
nop
dec
cwtl
jmp
lock
insl
in
xchg
jae
sbb
negb
lahf
cmpsb
jmp
add
dec
add
icebp
pop
das
out
into
cmpsb
mov
mov
push
fmull
and
out
xor
popa
in
scas
icebp
dec
pop
loopne
jo
sar
mov
lcall
pop
jae
and
mov
adc
in
aad
shrb
push
mov
mov
mov
sbb
ret
outsb
movb
repnz
pop
mov
or
and
cmc
mov
fildl
sub
test
movsl
pop
test
loope
into
cmc
lds
add
jp
push
sbb
lods
lds
pop
pop
mov
outsb
cmpsb
mov
jg
dec
shlb
pop
mov
insl
arpl
movsb
shr
cmp
jmp
lock
lret
pusha
outsl
fs
ror
int
dec
lods
sbb
sub
xor
cmp
mov
idivl
shr
mov
pop
test
jl
mov
sbb
fiadds
xchg
scas
or
clc
mov
dec
pusha
xorb
cld
sti
mov
call
imul
adc
jg
mov
movups
xchg
dec
push
mov
call
mov
mov
or
dec
xchg
cmp
addl
mov
mov
sub
imul
or
pop
pop
or
mov
imul
iret
orb
pop
pop
sbb
ja
clc
test
inc
lret
jb
ljmp
iret
adcb
jecxz
lods
and
arpl
pop
rorb
loope
clc
mov
adc
mull
and
loope
in
cltd
add
pushf
lret
test
xor
cs
adc
loopne
push
cmpsb
loopne
mov
lods
loop
jl
mov
mov
cld
cmp
pop
jp
scas
testl
inc
or
std
inc
call
lret
sahf
aam
enter
lods
lock
inc
subb
lods
lea
and
sbb
mov
jmp
push
cmp
dec
xchg
mov
outsl
pop
add
xchg
lret
xor
push
jmp
stos
dec
mov
jo
rorb
pop
in
mov
movsb
loopne
stos
aaa
jnp
out
sbb
xchg
cmp
pop
dec
lahf
hlt
push
add
jnp
mov
fimuls
sub
dec
mov
push
insl
push
aam
rolb
mov
adc
bound
lret
fsubrs
mov
xchg
sbb
push
flds
ds
not
inc
aam
icebp
mov
lods
mov
mov
std
adc
dec
bound
mov
aas
jg
call
movsl
mov
sub
into
mov
call
adc
sbb
jo
dec
inc
lcall
mov
pop
pop
leave
dec
push
call
es
pusha
sti
sub
imul
std
lret
ret
subps
inc
cmpsl
add
loopne
adc
leave
out
js
je
and
loope
pop
shrb
shrb
cld
sub
mov
sbb
jg
mov
jno
inc
inc
adc
inc
xchg
test
push
xchg
rol
inc
insb
jne
adc
sub
fisttps
insb
icebp
add
push
fildll
daa
sbb
push
or
pop
jbe
push
push
lea
ja
add
repnz
int
aam
adc
mov
jo
dec
rcl
dec
out
add
mov
adc
inc
int3
jp
test
data16
and
movsl
pop
pop
pushf
in
rolb
outsl
inc
cmp
sbb
add
and
fwait
adc
adc
cs
add
aam
ret
dec
adc
leave
jmp
and
pop
push
xchg
add
shrl
addr16
add
jp
jno
in
and
movsl
outsb
repnz
roll
pop
and
lods
push
inc
cmpsl
mov
add
and
push
fucom
xlat
rcrb
add
add
lret
mov
add
sbb
mov
sbb
mov
imul
test
mov
mov
push
xchg
cmpsb
and
ds
mov
stos
popf
in
sub
stos
pop
aaa
lds
or
rcrl
jne
mov
adc
push
push
stos
lret
sub
jl
add
xchg
dec
sub
pop
mov
cwtl
idiv
sbb
lds
gs
xor
ljmp
add
test
xor
popa
xchg
xor
pop
or
test
into
mov
push
inc
das
stc
inc
ret
rcrb
pop
xor
insb
sbb
mov
out
mov
mov
push
sub
icebp
test
xchg
xchg
cmp
cmpsb
out
pop
mov
jo
cmpsb
xor
je
xchg
xchg
jl
sub
push
xchg
das
inc
test
nop
xor
in
fxch
je
add
cmp
scas
mov
xchg
sub
sbb
bound
out
sbb
add
in
imul
xchg
mov
stc
lcall
mov
arpl
into
iret
mov
jge
inc
std
rclb
movsl
mov
mov
insb
or
push
mov
rcrl
je
dec
lcall
call
xor
cltd
mov
xchg
in
push
popf
gs
lds
xchg
jmp
mov
pop
popf
add
in
imul
xchg
and
stos
inc
jge
xchg
push
cld
dec
das
cmpl
and
in
fsubrs
fisubl
adc
adc
pop
push
je
mov
and
and
loope
add
iret
lahf
push
jbe
push
add
adc
or
and
lods
mov
shl
insl
sbb
ret
adc
pop
dec
loop
or
xor
cli
mov
int3
jl
xor
inc
in
and
loop
cmp
mov
adc
push
dec
into
cmp
xchg
arpl
lcall
cltd
inc
pop
mov
inc
daa
imul
cmpsl
mov
in
pop
stc
hlt
xchg
mov
les
or
aaa
mov
cltd
js
or
outsl
mov
test
scas
jge
and
movsl
add
mov
add
push
push
in
add
imul
or
sbb
lock
inc
mov
push
add
in
addr16
bound
stc
mov
xor
sub
movsl
and
jl
addr16
aam
imul
push
pushf
bound
cmp
adc
cld
pop
mov
inc
inc
jle
sbb
pop
mov
clc
xchg
rcl
mov
mov
cmpsb
cli
nop
mov
sti
sbb
dec
mov
mov
mov
pushf
fimuls
scas
test
xor
addr16
ret
test
icebp
out
sbb
xor
in
mov
add
xor
sbb
loop
addr16
leave
nop
fwait
add
jne
jg
pop
and
sarl
push
or
pusha
mov
push
mov
loop
repnz
sub
in
popf
push
repz
inc
dec
div
sub
jae
iret
sti
mov
cli
jne
adc
leave
adc
cmp
push
lods
or
fdivrp
dec
adc
out
test
xor
aas
loopne
xor
fisttpl
and
mov
sub
sbb
jp
test
sbb
movsl
sbb
cli
mov
dec
fisubl
pop
cmp
notb
sub
mov
cld
dec
push
push
mov
push
mov
lods
sub
sub
and
nop
nop
sbb
out
test
inc
xor
xor
stos
mov
lods
mov
xchg
dec
scas
movsb
adc
fcmovne
rorb
movsb
sbb
inc
ror
loop
jbe
adc
aaa
stc
fsubl
outsb
fldl
int3
ja
je
test
scas
pushf
xchg
sub
fsubr
mov
mov
aad
cmp
add
mov
clc
or
jl
cmp
push
pop
mov
ds
mov
dec
sbb
lret
adc
lret
add
cmpsl
daa
int3
add
in
sbbl
adcl
sbb
mov
into
pop
ds
movsl
mov
sbb
dec
sub
in
daa
pop
jb
bound
sub
sbb
and
faddl
xor
jle
inc
in
imul
stos
pop
xchg
mov
sti
sub
pop
js
cmpsb
mov
cli
mov
xchg
pop
mov
mov
int
mov
mov
notb
cmp
stc
fwait
aas
std
mov
ret
ret
movl
movsl
scas
pusha
xchg
shrl
insb
popf
push
test
cltd
cmpsl
xchg
enter
mov
call
sbb
sbb
cwtl
pop
adc
sarb
or
or
xlat
loopne
test
out
adc
dec
cmc
push
ljmp
or
sbb
xchg
out
in
pushf
arpl
inc
add
ret
or
jg
xor
mov
lcall
xor
loop
repnz
fdivrp
dec
mov
adc
pop
enter
xchg
pop
icebp
divl
outsb
mov
or
cmc
pop
js
xor
adc
clc
dec
dec
fsubs
xchg
insb
ret
mov
in
cmpsl
pop
out
fidivrl
iret
ret
lods
das
adc
insl
or
jo
add
sub
out
in
sti
push
sub
dec
pop
mov
or
mov
xor
fs
lcall
push
add
push
push
enter
inc
mov
jp
popf
xchg
mov
cmpsl
rorb
insb
divl
pushf
jmp
xchg
cmpsl
out
scas
sti
fcmovne
ss
in
push
pop
fists
cmp
clc
inc
xchg
xor
sar
mov
or
test
adc
add
outsl
xchg
outsb
adc
scas
das
cli
mov
sbb
scas
es
imul
xor
mov
in
cli
xchg
adc
inc
xchg
sbb
fisubs
adc
aaa
rorb
dec
sbb
push
and
fisttps
cmp
es
jle
mov
sub
mov
jg
cmp
inc
mov
pusha
insl
mov
rolb
and
add
repnz
insb
cmpsl
xorb
dec
and
pop
loopne
es
pop
sti
sbb
push
ret
notb
mov
fisubl
dec
jmp
icebp
pop
xchg
adc
sub
insl
cltd
inc
mov
jmp
loopne
out
hlt
cmp
lods
scas
dec
add
xchg
xlat
in
stos
leave
adc
sbb
nop
sub
cmc
adc
test
and
cmp
out
xor
mov
mov
or
jbe
cmpsl
enter
cmp
je
push
mov
test
mov
mov
into
push
roll
jle
insb
rcrb
xlat
push
jge
pop
pop
or
and
ljmp
pusha
addr16
outsl
xor
fmull
je
movsb
cmpsl
sbb
aad
cmpsb
push
out
inc
xchg
xchg
fldl
hlt
or
in
out
mov
iret
sub
push
inc
cmp
mov
rcr
jp
iret
mov
icebp
fiadds
cmp
inc
aaa
jg
ficoml
mov
mov
mov
repz
or
and
mov
xchg
call
ja
fsubrs
sub
xchg
sti
sub
lea
inc
xor
nop
movsl
test
repz
pop
or
xchg
cmp
and
cmp
aad
mov
and
bound
fcomip
sub
testb
xchg
mov
pop
or
inc
sub
push
mov
push
sub
mov
sbb
pop
pop
out
pop
mov
mov
mov
popf
cmc
in
sbb
ret
dec
sahf
cwtl
cltd
rcll
sub
stc
cld
int
sbb
mov
mov
or
pop
pop
testl
push
mov
mov
mov
cli
je
cmp
jo
push
clc
addr16
and
xlat
add
jp
or
push
sbbb
pushf
and
pop
imulb
insb
bound
enter
xlat
cmp
xchg
adc
pop
scas
xor
pusha
into
push
je
jl
cld
imul
stos
or
dec
leave
mov
adc
cmp
jl
or
dec
dec
ret
cmp
jecxz
lods
jno
pop
mov
jae
mov
cmp
xchg
xchg
movsb
mov
ss
cltd
rcr
testb
sahf
adc
mov
push
or
rcl
mov
pop
stc
mov
out
es
pushf
xor
adcl
sub
inc
leave
lds
pop
scas
push
xor
push
aas
ljmp
jp
and
adcb
cmp
outsl
xor
sub
adc
loope
shll
lea
mov
jle
scas
into
int3
mov
in
jmp
dec
scas
xchg
mov
cwtl
clc
fldcw
movsl
aas
mov
dec
mov
out
in
jecxz,pn
jb
stos
mov
dec
mov
sbb
addr16
sbb
lcall
aad
into
cmp
outsb
mov
popa
pop
add
movlps
dec
mov
adc
add
pop
imul
adcl
loope
ret
sub
sub
cmp
mov
mov
mov
addr16
arpl
mov
ja
lods
sub
adc
inc
jge
loope
mov
sub
adc
shl
add
pop
add
inc
mov
push
cs
pop
inc
subb
push
lcall
pop
xchg
stos
xor
lret
mov
xchg
sbb
xchg
test
shld
cwtl
add
rcrl
mulps
movsb
loop
pop
shrl
andl
jp
les
sub
lret
inc
sub
and
pop
fstpl
push
dec
stos
jae
adcl
mov
pop
cmp
mov
push
test
push
cs
jle
sbb
pop
push
push
loopne
lods
and
fucomp
adc
repz
mov
add
mov
mov
inc
fwait
clc
xor
nop
mov
mov
or
rcll
aam
cmp
int
sub
cmp
scas
ret
lcall
dec
lods
sbb
push
cmpsl
loop
add
xor
or
dec
xor
and
mov
dec
jo,pn
pop
pop
sub
aas
sub
mov
out
repz
sbb
jne
xchg
adc
or
sub
loop
or
mov
push
push
mov
pop
lods
inc
insb
je,pn
add
push
std
int3
mov
push
or
rcl
addl
mov
pop
imul
cmp
popa
cmp
in
ret
hlt
cmpsl
pop
cmp
sbb
shll
adc
push
shll
pop
sbb
in
pushf
iret
mov
sub
loope
fs
faddl
push
fnstenv
jg
xchg
mov
daa
cld
daa
jge
push
scas
xor
loop
leave
ret
filds
mov
mov
addl
pushw
push
jmp
outsb
pop
dec
shrl
jns
sti
cmp
jae
std
cmc
imul
add
aaa
fstpl
adc
mov
jnp
push
pop
stos
out
or
int3
dec
fisubrs
int
mov
pop
jg
mov
push
imul
int3
loopne
adc
loopne
sub
add
in
stc
dec
push
push
inc
add
inc
push
adc
pop
movsl
jns
adcb
repz
pop
xor
jl
and
xor
inc
ja
lret
es
pop
push
ja
sti
dec
leave
cwtl
or
jge
pop
in
pop
add
js
sub
in
gs
xor
lcall
mov
and
inc
insb
fcoms
imul
lret
fstpt
notl
dec
inc
xchg
outsl
js
lods
dec
fdivl
ret
push
js
xlat
jecxz
stc
fsubl
jle
idivb
movsl
push
in
dec
mov
mov
mov
cmp
mov
add
inc
sbb
push
adc
or
dec
loope
enter
aas
mov
push
ss
dec
push
sub
sbb
popw
enter
pinsrw
pop
das
cmpsl
subb
cmpsb
lods
cli
stos
notb
mov
lret
push
push
xchg
inc
jnp
sbb
mov
pop
mov
jecxz
pushf
adc
cld
inc
inc
insb
push
xchg
dec
shl
inc
aas
sub
outsl
adc
xchg
sub
add
addr16
out
mov
mov
cld
or
push
sub
sbb
aas
jg
outsb
xchg
int
xor
cmp
cltd
stos
sbb
nop
mov
xor
pop
mov
inc
je
dec
fiadds
test
out
pop
jno
xor
rolb
repz
sbb
push
jnp
push
mov
pop
pop
adc
nop
out
imul
add
enter
mov
scas
adc
push
adc
iret
mov
mov
into
lret
and
push
sub
lahf
test
cmp
xchg
inc
addb
adc
fs
mov
push
lcall
hlt
xchg
pop
insb
stc
mov
sub
pop
inc
mov
cmp
out
in
cwtl
pop
jnp
jge
add
add
inc
or
adc
aam
push
test
filds
push
cmp
imul
dec
cmpsl
mov
daa
cmc
and
cltd
pop
pop
imul
outsl
sbb
popf
push
aad
push
jp
shlb
sub
push
les
test
lret
add
and
push
add
clc
mov
in
mov
clc
or
shl
mov
ja
gs
inc
clc
cmp
movl
pop
dec
adc
pusha
aaa
cmpsl
and
jo
mov
iret
out
popf
mov
lahf
call
xor
into
and
dec
shlb
jne
mov
fistps
xchg
push
lods
fs
orb
add
scas
jo
mov
cmp
mov
and
and
lods
mov
adc
js
mov
and
loope
mov
mov
jecxz
rorb
inc
or
lods
add
call
push
in
ret
cmp
sti
xor
sbb
js
or
popa
loope
pop
jne
roll
rol
lock
and
mov
sub
je
lea
mov
push
fwait
inc
test
dec
cmp
addb
std
add
push
inc
adc
cmc
in
mov
ret
adc
mov
ljmp
and
push
insl
out
adc
inc
int
dec
dec
enter
and
out
cmp
outsb
daa
push
sbb
lock
adc
add
test
and
rep
jge
arpl
xchg
pop
aaa
dec
icebp
xchg
jg
test
cltd
push
lds
xlat
mov
xchg
jne
aas
pushf
test
cmp
jg
sub
jg
ss
pop
and
shll
orb
stos
data16
je
sub
or
addb
adc
mov
lcall
orb
push
int3
pop
add
mov
cmc
adc
dec
sub
out
xchg
sub
fsub
jb
lcall
push
in
pop
jns
pop
pop
or
pusha
shlb
xchg
in
mov
add
inc
adc
pusha
inc
pushl
and
add
adc
mov
cmp
ret
sbb
sti
xor
out
adc
xchg
push
adc
push
lods
dec
xor
add
fdivrs
cmc
popa
push
lock
loopne
sub
mov
xchg
orb
popf
jo
stos
out
outsb
jmp
sbb
mov
xchg
pop
xchg
push
lods
pop
jg
stos
in
sub
ret
add
add
adc
das
dec
dec
mov
loopne
das
sarb
mov
or
cli
je
pop
mov
rorl
fdivl
jg
test
add
cmp
mov
in
mulb
push
cmpsl
push
test
or
lret
loop
push
ret
push
pop
hlt
in
sbb
add
dec
shrb
imul
test
lahf
movb
cmpsl
lods
and
inc
int
push
daa
jmp
icebp
adcl
or
in
jno
push
dec
mov
sub
int
outsb
scas
jae
xchg
jbe
push
or
or
or
ret
dec
add
mov
pop
arpl
into
cmp
ds
push
test
inc
jo
cmp
dec
cmpsb
fisubrl
or
xchg
cmp
cmovo
fdivrp
leave
insb
pop
dec
hlt
push
push
repnz
adc
mov
adc
lods
jge
mov
mov
sub
int
xor
cld
in
jg
inc
push
adc
jl
fwait
sub
jl
scas
xor
movsb
movsl
adc
nop
daa
cmc
sub
inc
sahf
stos
mov
pushf
sahf
lret
mov
out
pop
pusha
adc
mov
in
nop
or
outsl
cmp
sbb
sbb
das
add
aad
mov
cmp
std
mov
cmp
sbb
jno
rorl
ret
jae
repz
sub
int3
cs
adc
test
jne
or
icebp
jb
cld
mov
sub
pop
jl
add
inc
movsb
mov
and
rcrb
lods
add
jg
jno
int
push
mov
jecxz
mov
dec
and
mov
pop
ds
stc
dec
xchg
mov
xorb
push
js
fdivs
mov
pop
inc
jns
pop
adc
loopne
cwtl
xlat
adc
mov
push
push
sahf
jmp
dec
push
nop
fistpl
pusha
cli
push
clc
cmp
enter
add
and
call
mov
icebp
and
pushf
cwtl
data16
lods
insb
cwtl
dec
sti
xchg
pop
and
mov
shl
cmp
or
xchg
push
test
fisubrl
adc
clc
in
xor
mov
push
int
pop
cmp
std
push
addr16
call
ja
add
js
cmpl
lahf
mov
and
je,pt
popa
xor
cwtl
push
jbe
inc
or
mov
push
lret
jae
fsubrl
lds
mov
fcoms
and
hlt
ficoms
add
xlat
movsb
jnp
sub
nop
add
inc
lds
addr16
push
clc
pop
add
push
add
ljmp
cmp
cmp
jno
shlb
sbb
jle
pop
insb
scas
push
adc
insb
insl
push
test
add
xchg
iret
xor
xchg
leave
lahf
push
push
jbe
pop
mov
fwait
pop
push
mov
sub
jl
divb
les
inc
mov
mov
in
xchg
mov
shlb
subl
push
sbb
inc
decb
lock
and
pop
xorb
rcl
das
cmp
dec
dec
mov
jg
mov
lret
jne
xor
ss
cmp
in
subb
aam
aam
adc
mov
sub
movsb
sbb
movsb
loop
add
or
test
aas
jp
pusha
aaa
push
or
dec
dec
in
test
stc
or
jle
sbb
mov
jge
jecxz
aas
mov
jmp
cmpsl
pop
add
xchg
xchg
cmp
lret
jo
lods
and
pusha
push
and
xchg
cmp
sub
pop
sarb
add
mov
in
cld
add
push
push
mov
sahf
arpl
sarb
jg
push
or
push
ret
mov
adc
or
mov
lock
mov
xlat
mov
lods
xor
and
aam
sub
ret
jmp
pop
aaa
xchg
xchg
push
inc
dec
test
gs
jo
punpckhdq
rcrl
xor
jns
jne
outsb
call
inc
mov
repnz
iret
or
add
fsubs
hlt
jnp
mov
shlb
int
adc
or
aaa
mov
cmp
mov
leave
lds
mov
mov
in
call
xchg
jl
test
jle
sub
enter
sub
mov
lods
popa
popa
shrb
loop
xor
jo
sbb
push
push
bnd
jne
cmc
cltd
and
lock
loopne
fdivrs
jae
je
imul
das
stos
adc
xchg
cmp
js
sub
push
jno
mov
loop
add
jae
les
jb
call
out
push
push
outsl
inc
cli
push
xchg
mov
cli
add
fbstp
jl
pop
cs
fs
add
daa
mov
dec
icebp
inc
cmpl
je
jb
pusha
pop
pop
hlt
add
mov
movsb
arpl
mov
pop
adc
mov
inc
pusha
fdivrl
enter
aam
mov
iret
notb
les
fcoml
jo
cmp
sbb
aaa
push
mov
xor
clc
sbb
out
lahf
rolb
cmp
fistps
lea
bound
xchg
jle
dec
mov
xor
pop
mov
outsl
mov
pop
or
mov
jo
push
lret
mov
lret
push
insb
add
negl
stc
xchg
xor
out
or
xor
dec
lahf
inc
js
test
or
ds
fld1
lods
test
fs
lret
addl
ret
xor
test
outsl
push
aad
int3
mov
rorb
xchg
es
in
adc
daa
sahf
jnp
call
lds
push
push
stc
jp
outsl
or
loopne
push
lds
sbb
sub
xchg
cwtl
call
jp
mov
roll
xchg
xchg
push
push
je
fimuls
popf
mov
repz
inc
ja
rcrb
loop
iret
adc
mov
sub
and
inc
jp
fmuls
jg
sbb
cmp
test
pop
orb
pop
out
cmp
mov
fistl
mov
jns
push
pusha
pop
lock
xor
lret
repz
je
dec
mov
das
ret
fcoms
pop
xlat
leave
push
cmp
jl
adc
push
cmp
in
sub
mov
movsl
repnz
jo
jb
dec
push
test
xchg
sbb
rclb
fimuls
jae
in
push
negl
push
dec
adc
xor
xor
mov
cmp
dec
jp
jno
loope
pop
lods
mov
push
push
jl
xchg
mov
in
cltd
pop
sbb
fdivs
mov
jbe
out
cmp
icebp
es
push
xor
sahf
js
mov
mov
test
cs
sti
and
cld
mov
cmc
mov
negb
popa
mov
stos
xor
adc
xor
mov
testl
mov
add
mov
adc
push
fdivl
adc
int
add
rclb
xchg
dec
int3
mov
jbe
mov
fldl
cmp
mov
sub
inc
add
jnp
add
mov
ret
out
mov
xor
ret
jnp
cmc
into
std
cmpb
pop
pop
idivl
sbb
sarl
push
scas
fdivrl
loopne
ljmp
xchg
les
bound
ja
out
jl
pop
and
cmp
mov
lea
sub
stos
pop
mov
jg
and
js
sub
or
add
call
inc
inc
fwait
add
scas
imul
sbb
inc
test
neg
je
movsl
imul
jo
hlt
in
loop
xchg
dec
enter
sahf
lret
subl
dec
xor
aaa
mov
in
outsl
mov
jo
cwtl
sub
ret
lret
clc
aam
lods
pop
fimull
shlb
test
std
add
scas
fwait
sahf
repz
dec
and
fs
out
sub
pop
push
sub
and
or
mov
call
xor
fimull
cli
dec
xchg
add
pop
or
sbb
mov
cmpsb
mov
insl
sti
pop
sbb
jge
insl
push
mov
pop
pop
outsl
cld
and
movsl
push
inc
dec
call
repnz
xchg
xor
popf
into
enter
aas
push
jbe
push
je
fnstsw
arpl
sub
xchg
xchg
dec
subl
sub
cwtl
jo
shrl
outsl
jno
out
mov
adc
adc
jp
inc
cwtl
faddl
scas
out
insb
mov
sbbl
mov
movsl
leave
mov
stc
and
cltd
sbb
addr16
and
int
add
sbbl
adc
sbb
ret
adc
stos
loop
mov
xchg
mov
aas
inc
and
push
int3
xor
dec
bnd
loop
xchg
in
fnstcw
pop
push
mov
push
movsl
mov
jns
aad
nop
pop
dec
mov
lods
negl
into
or
sahf
xchg
or
les
out
scas
fbstp
pop
fnstsw
jge
mov
push
sbb
aaa
popf
loopne
or
dec
popf
loopne
mov
divb
pop
mov
outsl
nop
and
sti
pop
cmp
mov
bound
addr16
jmp
sub
and
pop
daa
test
aas
inc
fstl
cwtd
sahf
xchg
sbb
sbb
or
fmuls
dec
ret
xchg
mov
sub
or
rorb
mov
dec
mov
adc
fs
fstl
xchg
pop
xor
test
fnstsw
pop
xchg
pop
scas
cmp
loopne
push
outsb
sub
cmpsl
cli
movsl
and
insb
sbb
popa
pop
and
mov
jo
int3
hlt
xor
jo
push
pop
ds
lds
repz
das
jae
lcall
inc
ja
or
aam
dec
mov
mov
aaa
or
cmp
fcomip
add
xchg
xchg
cltd
jl
push
andb
and
sub
pop
insl
pusha
ds
inc
jg
xchg
int
insl
push
push
or
lock
arpl
sarl
dec
mov
inc
push
jns
jg
xchg
mov
mov
mov
add
sbb
out
lea
test
inc
enter
lea
push
nop
arpl
mov
adc
aaa
and
fwait
jl
popa
push
cld
data16
push
pop
push
inc
test
adc
fs
or
cmp
gs
pop
xchg
loope
add
shlb
rcrl
jmp
inc
cld
dec
and
adc
enter
shrl
popa
adc
lds
cli
xlat
adc
jl
repz
cmpsb
int3
and
xor
ja
adc
into
daa
push
shll
inc
push
test
loop
mov
xor
insb
out
in
xchg
dec
bound
pusha
sub
aam
xchg
add
pop
cmp
mov
sahf
pop
jecxz
insb
das
push
into
rorl
add
adc
adc
push
cld
push
mov
mov
sub
sbb
jmp
int
repz
dec
addr16
mov
movsl
cmp
out
xlat
lret
mov
dec
or
lret
inc
bound
popf
pop
stc
xchg
mov
dec
adcb
mov
sbb
jae
push
lds
imul
imul
jbe
or
sbb
pop
mov
mov
xor
enter
cmp
xor
xchg
jo
xor
xchg
fildl
adc
loopne
dec
mov
and
mov
dec
jmp
jmp
sub
inc
rorl
pop
adc
adc
inc
je
loop
sub
jnp
lcall
stc
sbbb
bndldx
lds
ljmp
in
push
xchg
mov
dec
out
ljmp
popf
aaa
mov
mov
repnz
sbb
shrb
out
adc
mov
xor
mov
imul
sarl
mov
jb
fnstsw
es
sti
xchg
sub
loopne
in
out
jl
push
loopne
sti
xchg
pop
lods
in
shl
fwait
pop
jnp
out
cmpsb
outsl
mov
jae
out
jae
cmpsl
inc
sarb
jbe
adc
pop
inc
inc
pop
jecxz
stc
jbe
call
or
mov
lahf
add
mov
test
sub
xchg
inc
pop
aam
aaa
push
cmp
pop
add
xchg
adc
or
into
jmp
mov
outsl
out
mov
adc
imul
mov
xor
cmp
sub
mov
out
stos
add
sub
sbb
add
xlat
jp
jne
ja
or
in
test
test
adc
popl
xor
cmp
dec
push
jnp
xchg
mov
xchg
nop
fbstp
xchg
int
data16
sbb
nop
lock
cmc
test
pop
xchg
mov
inc
sbb
jle
jns
hlt
push
pusha
xchg
mov
add
icebp
mov
mov
xchg
adcl
mov
jg
dec
adc
inc
imul
mov
sub
jno
fcoms
test
jg
outsl
andb
imul
fs
push
adc
pusha
sbb
inc
ret
popa
xchg
mov
sbb
test
mov
imulb
dec
out
into
sub
shrl
rolb
mov
fisttpll
xor
in
mov
fidivrs
adc
and
sub
ficompl
les
jo
jnp
shr
add
outsl
out
or
in
repz
mov
loopne
push
xchg
jp
cmpsb
mov
and
fisubrs
enter
mov
jg
fistps
add
xchg
dec
mov
lcall
pop
and
cmp
cmp
push
cmp
fxch
push
xchg
push
divl
lret
scas
loop
cmp
or
adc
call
dec
mov
mov
pushf
fdivrl
cmpsb
cmp
in
mov
push
inc
loope
out
pop
cmp
push
pop
ljmp
pop
loope
jg
test
loop
jno
xorb
push
xchg
arpl
pusha
imull
aas
nop
adc
andl
xchg
fisubl
sbb
sbb
or
mov
sbb
stc
xchg
call
jge
incl
cwtl
in
icebp
cld
sbb
movzwl
loope
rolb
leave
or
mov
and
mov
sub
lods
dec
test
sbb
addr16
mov
mov
sbb
imul
push
ja
adc
push
nop
sbb
adc
cmp
xor
jl
ds
in
test
dec
pop
cmpsb
inc
stos
jns
mov
jp
les
in
ds
and
mov
vprotw
or
rorb
addl
xchg
xor
scas
mov
jbe
inc
jge
mov
pop
cmp
xorb
lcall
inc
jmp
cmp
orb
mov
jge
mov
mov
jbe
push
into
ret
outsl
push
push
fiaddl
inc
mov
insl
jl
xor
and
ror
mov
testl
pop
mov
push
fcompl
add
adc
cmp
mov
sbb
mov
mov
jns
xchg
mov
cmpsl
iretw
sbb
mov
mov
add
mov
iret
pushf
adc
aaa
sub
int3
popf
lret
das
fmull
jp
lcall
mov
push
aam
je
ljmp
mov
add
scas
imul
pop
cltd
pop
sbb
shlb
fwait
clc
jl
enter
jmp
mov
in
and
xchg
cmp
or
adc
sbb
xor
aas
fsts
int
icebp
jmp
aas
sbb
addb
hlt
push
rolb
out
filds
jmp
or
sbb
clc
sbb
loope
jecxz
and
sub
inc
xor
es
mov
mov
stc
test
adc
sub
cmp
ja
inc
and
dec
mov
mov
movsl
ljmp
xlat
jl
rcrb
mov
imul
adc
xor
in
fmuls
es
mov
hlt
icebp
mov
movsl
test
aam
lock
test
mov
cmp
xchg
pop
xor
fnstcw
lods
cmpl
mov
mov
cmpsb
add
or
hlt
fs
scas
xchg
out
adc
cmp
ja
push
out
pmulhw
push
shrb
mov
and
dec
cmp
loopne
paddq
pop
loop
mov
in
push
ja
ret
or
or
dec
add
mov
lret
lea
xor
xor
push
mov
sbb
jb
xchg
repnz
fmuls
dec
add
cltd
sbb
daa
ret
cmc
ret
je
call
and
in
push
or
or
iret
add
dec
jae
jb
add
ret
xorl
rsqrtps
hlt
sbb
movsb
fs
xor
mov
mov
xchg
jg
lds
mov
jp
dec
xor
loope
fldt
add
xor
inc
mov
fnclex
mov
aam
rcrb
inc
dec
xor
in
push
sbbl
cmp
flds
sub
jge
jne
push
and
in
mov
cmp
repz
sub
out
sbb
lret
push
mov
lods
sub
insb
and
rorb
cs
mov
aam
jmp
out
jle
pop
add
adc
mov
xchg
xchg
xor
jno
in
lcall
fs
test
out
movb
test
mov
inc
mov
pop
pop
repnz
loope
hlt
nop
pop
push
xor
inc
push
inc
xchg
mov
leave
xor
leave
into
fisttpl
add
sub
pop
mov
orb
and
inc
daa
aad
test
xchg
push
js
mov
add
add
loope
adcb
ja
outsb
cmpl
fnstsw
outsl
dec
jecxz
pushf
and
hlt
push
leave
jo
cltd
inc
notl
cmc
je
cmp
outsb
cmp
pop
mov
int3
push
inc
and
fprem
mov
and
repz
lods
push
inc
shl
mov
add
pop
insb
es
pop
std
inc
pop
mov
sub
adc
je
out
jge
xchg
and
push
or
xchg
or
and
add
and
adc
scas
or
cmp
sub
setno
add
repz
icebp
bound
lcall
push
maskmovq
push
xchg
push
out
mov
sub
mov
outsb
in
ljmp
cmp
adc
mov
pop
jo
ljmp
les
leave
push
cs
mov
inc
out
sbb
call
test
popf
imul
or
sbb
fstl
jp
lods
mov
cmp
jno,pn
scas
iret
add
pop
lret
mov
outsb
movb
cmp
loopne
xor
shlb
insl
pop
sbb
jns
cmp
int3
push
mov
pop
sub
test
push
jmp
jmp
add
enter
insb
inc
call
push
xchg
divl
aas
mov
push
xchg
and
jge
call
lretw
inc
sbb
cmpsb
in
push
pop
inc
and
push
jbe
xchg
fisttpl
in
xchg
loop
xor
xchg
inc
add
xchg
sbb
pop
popa
repz
ret
jp
mov
lret
in
mulb
jmp
sub
movsb
mov
negb
scas
out
insb
xor
stos
dec
not
cmp
and
gs
xor
ja
pop
in
ljmp
xor
mov
notb
pushf
mov
xor
repnz
je
inc
in
fisubs
mov
or
repnz
push
xor
and
sbb
jge
stc
ja
push
xchg
decb
push
inc
test
ss
sbb
orl
ja
dec
push
sbb
and
addr16
scas
cld
push
in
mov
ljmp
xor
cmpsb
fnstenv
mov
pop
xor
pop
jg
fdivrl
fbld
mov
out
add
sti
xchg
adc
ror
cmp
xor
insl
pop
fwait
sbb
push
int
pavgw
or
imul
fsts
jmp
das
mov
mov
loop
in
xor
das
lfs
mov
or
mov
fbstp
jge
add
gs
pop
int
or
add
addr16
movsb
gs
loope
inc
in
in
mov
and
add
and
and
push
lods
sbb
ljmp
adc
lds
dec
push
testl
shrl
dec
xor
cwtl
adc
loopne
test
int
inc
fsubl
dec
sar
aas
loopne
and
mov
cltd
js
stc
pop
je
cmp
fs
mov
or
jno
xchg
sub
jb
push
and
pop
xchg
cmp
jb
rclb
and
inc
pop
add
repnz
mov
dec
adc
mov
jle
leave
push
xlat
ja
inc
inc
nop
jo
and
fstp
pusha
imul
out
sbb
je
shr
popf
fildll
sbb
xchg
add
mov
pop
xchg
sar
lods
cmp
adc
stos
sbb
xorl
not
jl
loope
adc
xchg
fbstp
sahf
gs
mov
add
mov
loop
test
jg
fistl
jbe
xchg
pop
repz
inc
or
repnz
cmpsb
ja
mov
in
xchg
into
xor
icebp
mov
jb
fistpll
lret
fs
mov
gs
lret
cli
cmp
and
cmp
mov
cmp
jge
or
jecxz
cmp
testl
fldt
rol
mov
jg
xor
sbb
lds
dec
shll
mov
add
aad
xor
cs
mov
or
fadds
icebp
gs
cmc
push
dec
cmpsb
and
dec
jmp
xor
addb
pusha
inc
out
cwtl
mov
loop
push
adc
mov
gs
fistl
fiaddl
movsl
xor
mov
dec
dec
pop
ret
sbb
or
cmp
scas
sbb
xchg
pushf
or
shll
jne
aam
push
push
cmp
lods
int
loop
add
or
mov
call
clc
or
cld
call
push
sub
lea
shlb
pusha
jmp
dec
xchg
push
fisubl
ret
xchg
out
dec
add
out
sti
int
pop
or
stos
dec
cmpsb
fisubl
testb
in
xor
push
pop
jmp
ds
aad
pop
or
loop
sub
and
xchg
sub
sbb
in
sbb
hlt
shll
pop
dec
mov
test
xor
sub
mov
pop
repnz
and
pushf
jne
pop
cltd
sahf
adc
jb
leave
inc
int3
jns
push
xorb
std
clc
inc
push
or
pop
sbbl
daa
jo
inc
outsb
push
mov
or
or
mov
jecxz
add
mov
test
xor
xchg
arpl
xor
movsb
jmp
mov
jle
push
mov
lock
or
popa
adc
lods
inc
imul
pop
ret
jp
xchg
les
cmc
imul
fldcw
cmp
push
jg
pushf
inc
in
sbb
das
repz
aam
fwait
pop
add
jle
add
mov
xchg
inc
or
jnp
shlb
sarl
jl
testl
cmp
daa
out
sbb
mov
into
jmp
sbb
int
dec
cld
pop
fwait
or
adc
and
in
mov
stc
scas
pop
fists
jle
shrb
shr
fmull
and
jo
mov
jo
or
faddl
mov
jns
cmp
fnstsw
inc
test
fimuls
pop
pop
pop
out
or
mov
and
or
add
out
pushf
lcall
mov
mov
ret
stc
rcrl
lods
out
nop
insb
movsl
or
mov
out
or
push
cmp
mov
xchg
leave
pop
jo
jno
adc
lods
mov
mov
xor
xchg
sub
mov
std
push
into
mov
add
mov
adc
xchg
xchg
ret
imul
in
repnz
pop
pop
imul
popa
sbb
fcompl
leave
fistpll
scas
pop
xor
push
xor
in
mov
xchg
sub
lock
add
inc
xor
movsb
psubq
and
push
adcl
push
push
add
inc
dec
push
mov
cmp
in
mov
loope
sub
out
push
dec
aaa
loop
in
push
push
pop
fimuls
cmp
xchg
sbb
push
loopne
cli
sub
or
jbe
test
std
ret
pop
mov
or
sbb
ljmp
push
pushf
xor
dec
sub
xor
jmp
sub
add
outsb
sbb
or
push
add
fwait
adc
faddp
push
out
lahf
cs
mov
cmp
cmc
aam
popa
pop
inc
stos
arpl
xor
dec
lret
inc
lock
sub
daa
jbe
sbb
test
pusha
ljmp
mov
mov
mov
sahf
or
and
xchg
or
jg
inc
nop
and
cmp
clc
fiadds
call
frstpm(287
into
xchg
ret
cmp
dec
sub
sbb
pop
cmp
dec
sbb
dec
daa
idiv
xor
inc
das
repnz
shll
push
cs
cmp
fcoms
test
xchg
dec
xchg
pop
sub
bound
lock
sbb
roll
and
xchg
movsl
xchg
lods
push
outsb
lods
inc
jbe
pop
movsl
stos
fwait
add
mov
into
mov
sti
mov
cltd
push
pop
sbb
bound
jl
cs
push
jle
lret
es
stos
or
adc
ljmp
or
imul
decb
stos
mov
sub
out
aas
mov
cmp
push
push
notl
and
bound
lahf
ljmp
roll
ja
aad
fs
push
movsl
scas
add
mov
and
scas
xchg
aam
xchg
lret
pop
or
lods
push
imul
jae
pop
inc
mov
cli
add
fisubl
shrb
call
out
cmp
cmp
inc
ss
rorl
loop
sbb
cld
sub
daa
lahf
push
add
xchg
add
push
jbe
or
push
mov
subb
mov
add
shll
add
pop
js
pushf
and
aaa
lcall
adc
rcl
lods
push
ljmp
iret
xor
daa
aas
in
mov
out
shlb
fnstenv
pop
adc
pop
ret
push
aam
xchg
sti
out
lock
inc
test
jnp
cmp
shll
daa
mov
paddsw
insb
sub
pop
cs
pop
loop
cmovb
test
mov
ds
lret
rclb
pop
pusha
mov
jmp
mov
test
adc
add
mov
cmp
mov
aas
loope
lcall
jmp
xchg
and
pop
dec
inc
ja
or
mov
shrb
pusha
push
pop
xchg
jg
jl
xchg
and
call
idivb
jae
scas
sub
pop
stos
cmpl
jnp
shl
test
sub
insl
and
dec
lahf
mov
in
popa
lock
mov
sub
sub
hlt
dec
arpl
test
notb
js
call
dec
cmpsb
int
in
shrb
push
fidivrl
dec
movsb
mov
popw
rorl
pop
jp
xchg
inc
and
aam
enter
mov
inc
shlb
divb
jge
aam
push
stc
loopne
push
add
sub
mov
pop
cmp
shll
leave
sbb
sti
cld
dec
aaa
stos
call
pusha
push
mov
xor
out
cld
repnz
jns
xchg
cmp
xchg
cmp
addr16
and
lods
sbbb
shrl
jp
fwait
dec
inc
push
jmp
dec
lds
mov
out
xbegin
mov
adc
repnz
jle
push
adc
ret
push
cltd
xor
dec
leave
xchg
push
movsl
mov
pop
add
add
mov
mov
ljmp
mov
popa
shrb
scas
into
cmp
push
cmc
leave
xchg
movsb
mov
and
dec
and
out
rcll
dec
out
daa
fimull
das
jns
cmc
iret
xchg
fs
pop
fidivrs
jns
add
and
xchg
arpl
mov
ret
mov
mov
fwait
out
xor
or
insl
adc
hlt
jne
push
sub
icebp
test
sarb
or
repz
jno
sbb
push
gs
lods
cmp
scas
mov
rolb
mov
inc
jnp
and
xchg
mov
sbb
ret
jmp
sub
inc
mov
ret
cmp
or
pop
cli
popf
enter
mov
sub
xor
outsl
fimull
jnp
rcl
xor
sbb
int3
fldl
mov
sub
popa
xchg
inc
jge
cmpsl
div
push
stc
dec
xchg
daa
call
les
or
test
out
sbb
cmp
mov
rcl
mov
dec
mov
arpl
hlt
xchg
push
lea
sti
je
dec
test
insl
cs
cltd
insl
dec
cld
iret
cmp
bound
iret
mov
xor
jecxz
imul
rorl
cld
xchg
lea
cld
or
push
cs
fistpl
push
mov
sub
and
rolb
mov
lret
cmp
insb
xor
ds
push
int
movb
push
cmp
rcll
scas
cmp
fcomi
pusha
cmpsb
cmp
fs
aad
cld
push
pop
inc
xchg
add
mov
bound
fwait
mov
addr16
das
inc
add
nop
cmp
sbb
inc
mov
inc
dec
adc
inc
mov
jnp
out
adc
pop
jg
shr
and
or
sbb
jg
and
and
mov
xchg
ret
cli
mov
stos
fidivrs
dec
xor
sbb
mov
data16
cmp
xor
xor
daa
stc
xor
dec
jge
aad
xchg
push
cli
push
mov
incl
cmc
inc
inc
fsubrl
xchg
dec
inc
fcompl
stos
ret
pop
sti
push
ret
cmp
push
stos
stc
sub
sbb
dec
xchg
adc
lock
shll
outsb
shll
nop
fcomps
inc
xchg
scas
idivl
and
mov
xor
popf
xlat
mov
pop
test
pop
add
jl
mov
arpl
sub
dec
loopne
cld
loopne
jbe
popf
insb
pop
jle
adc
int3
xchg
sub
cltd
add
sbb
scas
mov
dec
sbb
mov
push
or
inc
dec
and
mov
clc
dec
mov
sub
mov
ret
push
cld
lcall
jae
xor
pop
xchg
xchg
cli
sbb
mov
fisubrs
fsubl
imul
mov
leave
or
insl
std
nop
stc
iret
lea
rol
mov
shll
pop
pop
and
fiaddl
mov
cmc
lods
jae
imul
loopne
mov
adc
xchg
movsl
lods
imul
or
xor
leave
jo
mov
inc
mov
es
jl
and
repnz
push
repz
xchg
imul
jb,pn
in
xchg
jg
ja
add
cmp
lcall
imul
sbb
push
cwtl
aas
icebp
sub
push
sbb
mov
pop
push
sub
subl
lods
pop
arpl
mov
pop
adc
pop
mov
sahf
inc
xor
jle
mov
push
popf
mov
es
loop
pop
stos
or
push
loope
add
and
mov
push
lock
cmp
lock
insl
push
xor
push
call
cmc
xor
or
stos
clc
sar
mov
dec
and
in
aad
lea
neg
xchg
adc
stos
add
shl
jecxz
pop
fwait
jp
inc
sub
push
fwait
mov
insb
add
loopne
clc
outsb
loop
sbb
sti
xor
xor
sahf
xchg
cmp
xor
mov
call
rcl
rorl
pushf
add
gs
mov
loop
inc
je
or
xchg
add
mov
dec
sahf
out
push
rorl
mov
loopne
movsl
add
mov
xchg
adc
mov
ja
js
je
stc
aaa
scas
lds
cmp
or
test
dec
push
mov
mov
sbb
push
js
sub
out
bound
dec
dec
into
lods
and
insb
stos
inc
data16
js
adc
nop
cmp
lea
and
push
jl
fcmove
push
ja
nop
and
adc
stos
pop
dec
push
and
rol
xor
into
outsb
mov
pop
filds
hlt
call
js
pop
ret
mov
mov
daa
and
add
loop
pop
add
xchg
push
push
in
ficomps
jge
imul
in
scas
xor
and
movsb
xor
mov
jb
sarl
ror
push
push
stos
adc
and
jo
xchg
rclb
jb
adc
fldenv
xchg
xor
es
shl
in
mov
aad
icebp
jb
fimull
mov
cmp
add
inc
push
mov
inc
dec
pusha
cmp
les
pcmpgtb
jmp
lock
pop
mov
jecxz
lods
mov
and
imul
push
ds
cld
jne
lret
xchg
pushf
dec
mov
mov
add
xchg
enter
sti
push
or
dec
in
adc
repz
dec
dec
aaa
rcrb
cmp
jg
jne
mov
lea
aad
adc
popa
adc
loop
mov
inc
outsl
cmpsl
and
mov
xor
sub
mov
in
sti
lret
pop
and
add
outsb
pop
push
and
scas
dec
sbb
jnp
fisttpl
push
divb
popa
xor
adc
cli
loopne
xchg
div
mov
adc
mov
pop
leave
cwtl
mov
cltd
pop
decl
dec
mov
dec
jmp
pop
or
dec
pop
mov
fdivrs
fsubl
xor
test
dec
cmp
sbb
sbb
mov
iret
dec
imul
push
jg
xor
sub
mov
push
testl
sub
das
jae
pop
movsb
push
bound
push
arpl
pop
dec
repz
sub
mov
lahf
lret
mov
jp
push
jmp
cmp
pusha
adc
inc
push
fidivrs
xor
outsb
mov
mov
inc
lret
mov
push
hlt
push
add
aas
sbb
lea
cmpxchg
xor
cli
int
xchg
pop
pop
or
and
icebp
or
aaa
add
fadds
jmp
lcall
xor
jno
fmull
adc
adc
cmp
in
lods
fldenv
inc
jne
jmp
out
pop
ret
add
std
cmc
pop
sbb
aas
call
xor
fwait
jl
fstpt
sbb
dec
dec
daa
sti
lods
push
jne
decb
cmc
mov
call
dec
das
push
pop
mov
sti
mov
insb
les
movsl
ss
pushf
movsl
out
cmp
inc
ss
lret
xor
xlat
dec
dec
add
sub
cltd
rclb
or
mov
out
fisubrl
mov
mov
xchg
push
mov
call
pop
mov
push
sub
clc
xchg
inc
pop
jle
pop
loope
xchg
jp
dec
nop
lods
sti
stos
shl
add
pusha
inc
in
insb
pop
push
aas
jp
leave
stc
xchg
cli
fists
cli
push
fdivrs
in
shl
test
test
sbbb
and
int
in
insl
sub
jo
or
aaa
and
pop
dec
adc
xlat
inc
test
pop
inc
xlat
add
imul
mov
sti
push
mov
and
subl
in
push
mov
movsb
jbe
mov
addr16
and
jge
lds
sti
leave
inc
push
cvtpi2ps
xchg
in
ficomps
xchg
cmp
out
mov
shrl
push
stc
or
stos
out
push
cmp
and
negb
imul
cld
or
mov
add
add
sbb
push
out
cmp
into
imul
xlat
out
dec
xor
sbb
out
and
mov
jg
cmp
sub
std
push
movb
mov
into
pop
movsb
add
pop
scas
inc
test
push
int3
repz
jp
mov
jmp
add
fstpl
mov
insl
dec
xor
orl
jns
sbb
push
shl
popf
inc
mov
or
shl
call
xchg
out
inc
inc
popa
rol
repnz
cmpsl
pop
or
dec
nop
out
jp
fucomp
push
inc
movsl
cmpsl
stc
xor
fldcw
cmpsl
hlt
cwtl
push
pop
push
mov
mov
addr16
xor
pop
pop
sbb
sbb
clc
jl
sbbb
loopne
repnz
sarb
xchg
cld
jmp
in
jo
xchg
loop
outsl
pop
jmp
mov
shrb
jp
out
pusha
fisttpl
subb
xor
adc
jne
in
xor
xchg
shrb
imul
daa
bound
out
dec
movsb
xchg
int
dec
or
imul
push
inc
mov
add
add
insb
sbb
jb
xor
scas
mov
fstl
jns
fwait
lret
cmp
gs
xor
mov
or
idiv
lret
testb
push
pop
pop
out
dec
mov
shl
cmp
lahf
push
cmpsl
jp
icebp
lret
ret
adc
sub
inc
je
pop
imul
mov
jne
cwtl
addr16
push
test
ds
out
psllq
mov
fsub
mov
adc
sbb
pop
mov
sub
or
arpl
int
into
aas
sahf
sarl
cwtl
jnp
sub
or
mov
inc
sub
cld
icebp
pushf
cmp
lods
dec
cmp
fisubrl
sbb
cmp
in
or
jecxz
jmp
xorl
dec
daa
or
xchg
mull
push
xor
sub
xchg
mov
add
xor
mov
push
mov
adc
jecxz
mov
cmp
cmp
mov
jecxz
xor
dec
sbb
pusha
pop
lret
imul
cmpsb
add
jae
mov
mov
lcall
std
sub
mov
in
mov
mov
loop
int3
inc
pop
stos
push
cltd
jns
cli
sbb
mov
nop
je
xchg
test
xchg
mov
cmp
std
inc
lods
mov
arpl
sub
or
mov
clc
dec
inc
shlb
cmpsb
jmp
sbb
fmuls
push
sub
dec
mov
sbb
rcrb
sbb
and
lret
in
fisttpl
xor
std
xchg
inc
xchg
jecxz
inc
jl
out
lods
test
insb
cli
push
shlb
scas
out
jbe
pushf
mov
and
cmp
mov
xlat
or
shr
add
jecxz
in
enter
add
mov
jg
sti
ss
mov
sbb
mov
fsubrs
loope
cmp
lahf
inc
aaa
addr16
std
cld
inc
adc
or
iret
shr
out
lods
xlat
push
xor
inc
popa
jnp
pop
ret
loope
jb
loope
ss
xor
out
aas
xchg
mov
adc
nop
mov
cmpsb
arpl
stos
mov
bound
aad
daa
nop
out
dec
mov
lahf
jmp
int
pop
mov
push
scas
mov
scas
mov
sbb
dec
dec
addb
int3
mov
outsl
mov
and
inc
mov
sub
pushf
loope
je
ficoml
cwtl
fldl
adcl
jle
and
jecxz
inc
pop
sbb
loopne
negb
sti
lods
cmp
pop
dec
sub
pop
cs
lcall
inc
push
sbb
ljmp
fwait
or
lahf
mov
nop
xor
or
dec
cmpb
lcall
lahf
nop
and
xchg
push
scas
mov
sbb
cmp
popl
data16
mov
pop
cli
dec
jp
iret
pop
cmp
inc
mov
shll
addr16
lock
inc
cmpsl
in
lods
xor
lock
aas
sub
sub
xchg
sbb
pop
sbb
out
rorb
lea
xorl
mov
popa
out
pop
add
cmc
fldcw
or
mov
mov
bound
sbb
push
frstor
xchg
ja
or
loopne
test
xchg
ret
pop
xor
test
test
pop
cmp
addr16
push
shll
fwait
jae
lds
out
filds
int3
cltd
fnstcw
loop
rcl
les
les
push
adc
jne
dec
popf
cmp
jl
addr16
add
sahf
xchg
jle
push
daa
jae
dec
scas
and
cmp
xor
arpl
mov
mov
ficoml
jns
cmpsl
cmp
adc
jmp
push
test
inc
orb
inc
or
call
or
mov
and
dec
stos
mov
sbbl
fdivrl
jle
imul
in
jne
and
into
pop
xchg
mov
push
in
das
mov
sarl
shll
loopne
repnz
popa
jp
popf
loope
fnstsw
lea
outsl
scas
ds
insb
aad
daa
leave
rol
imul
sub
or
mov
scas
out
popf
js
mov
add
mov
call
lods
xlat
aaa
xchg
mov
fisttps
int3
dec
fwait
and
add
xor
repz
cmp
cmpsl
int3
push
jge
sbb
idiv
loop
cmc
cmp
imul
test
mov
inc
fildll
hlt
pop
ficoms
cmp
or
pop
sbb
or
xchg
popf
imul
xor
lcall
fbstp
mov
pop
jecxz
xchg
jno
bound
test
imul
jo
adc
mov
xor
jge
pop
mov
movsb
sub
cmp
sahf
fsts
push
mov
adc
imul
push
inc
fistpl
pop
loopne
clc
iret
pop
mov
xchg
cmp
xor
sbb
mov
imul
repnz
jmp
stos
shr
jo
arpl
jge
sub
cs
add
jo
lods
and
inc
adcl
cli
insl
lds
inc
xor
cld
sbb
inc
push
sbb
les
jecxz
and
push
sahf
pop
mov
fdivrs
sub
sub
inc
out
jecxz
stos
mov
pop
cld
xor
mov
das
cmp
xchg
cmp
nop
test
mov
call
pusha
jl
cmp
push
pop
fdiv
adc
lret
pop
jle
inc
xchg
pop
out
xlat
xor
xlat
pop
js
xchg
popl
xor
fwait
std
pop
ljmp
cmp
xor
add
mov
inc
imul
inc
mov
push
out
bound
imul
mov
jmp
lock
jae
jp
insl
adc
jo
mov
into
cmpsb
repz
std
or
add
xchg
sti
enter
jae
lods
xchg
push
cmp
xor
jne
jge
flds
mov
fsubl
arpl
repnz
hlt
insb
cmp
out
dec
rcrb
cmp
mov
or
dec
ljmp
inc
fdiv
popa
xchg
cs
dec
in
cld
cld
dec
loope
mov
lret
das
movsb
sub
jp
dec
mov
adc
xchg
xchg
xor
mov
sub
sub
xchg
push
or
stos
fwait
dec
mov
cmp
aam
in
mov
fdivrl
mov
adc
mov
rclb
add
leave
pop
pop
test
push
lds
ljmp
ds
jmp
xor
pop
andb
out
inc
call
pop
pop
fstl
dec
cwtl
inc
jnp
outsb
aad
cmp
in
or
adc
cmp
push
pusha
decb
bound
adc
gs
rcr
nop
fwait
lcall
mov
rclb
test
xchg
pop
dec
mov
sub
imul
fildl
inc
das
adc
push
pop
xchg
adc
pop
pop
or
mov
sbb
je
arpl
push
movsb
mov
adc
fwait
mov
mov
pop
adc
and
push
or
add
cmc
sbb
sbb
rcr
mov
stos
fsubrs
stc
pop
xchg
xchg
jns
imul
jle
sti
adc
subl
call
inc
xchg
xchg
xor
inc
cmp
jmp
jbe
inc
or
movsb
roll
xchg
push
push
and
scas
sbb
xchg
push
fdivrs
aaa
push
or
mov
or
loope
das
mov
sbb
sub
push
mov
mov
inc
cmp
pop
add
xchg
xor
inc
cs
mov
hlt
lods
mov
xor
mov
jl
stc
jno
cmp
mov
push
ret
fcompl
inc
xchg
je
ret
aad
cmpsb
xlat
in
sub
mov
imul
xor
popf
shlb
loop
xchg
movsb
adc
adc
xchg
aam
out
in
sbb
movl
out
xor
pop
and
leave
push
mov
scas
iret
inc
lea
inc
movsl
aas
sub
push
test
cld
mov
cmp
fs
or
outsb
aam
jbe
popf
dec
clc
jl
test
mov
xor
inc
xor
xor
jecxz
addr16
hlt
lret
iret
xchg
inc
xor
icebp
push
mov
pop
sarl
mov
jp
bound
mov
cmp
stos
cmp
shlb
push
dec
cmc
mov
orl
sbb
sbb
insl
mov
push
jne
stos
rcrb
aad
movsb
xor
cmp
pop
pushf
loop
repz
xchg
bound
out
repnz
pop
push
js
jl
sub
or
inc
add
decb
adc
mov
jle
movsb
aas
dec
xchg
and
push
adc
and
insb
addr16
repz
fisubrl
into
iret
xchg
lret
aam
ja
cmc
jno
pop
lahf
jbe
jne
into
xchg
clc
cmp
push
iret
fs
xchg
dec
sub
fstpt
mov
xchg
jbe
mov
add
jne
jecxz
fldt
or
jne
and
xchg
in
and
fnclex
sti
sbb
das
jo
and
inc
and
fmuls
sbb
loop
js
cmp
sti
jecxz
mov
sbb
xchg
daa
xchg
or
imul
push
clc
iret
adc
or
xchg
pop
sbb
xchg
sar
ret
mov
jp
btr
mov
cli
lock
popf
icebp
pop
jl
dec
dec
push
leave
mov
outsb
test
jbe
dec
xchg
in
jg
test
or
shl
push
loope
aaa
push
mov
les
inc
sub
mov
daa
xor
jp
outsl
pop
mov
jo
aas
icebp
jo
jl
push
dec
clc
mov
jo
inc
push
pop
add
cli
mov
andl
mov
fisubs
fwait
imul
cmpsl
xchg
aas
scas
das
daa
xor
repnz
shrb
lods
bound
aas
mov
add
repz
cmpl
xor
push
sbb
dec
ret
insl
or
ja
mov
scas
sbb
xchg
add
jle
sub
jns
in
insl
out
test
or
lahf
jnp
or
ficoml
arpl
mov
and
pop
lock
xlat
leave
mov
xorb
ljmp
jns
inc
dec
dec
test
ficoms
sub
repz
or
repz
cmpsl
or
cmpsb
jne
xor
shrl
or
lea
repnz
in
psllw
jmp
test
lret
or
cmc
adc
adc
test
pop
les
xchg
lods
push
lcall
jl
mov
popa
out
jo
xchg
hlt
iret
xor
push
cmp
stos
mov
movsb
pop
pop
sbb
mov
cs
inc
scas
pop
lretw
jno
ficompl
rcll
mov
mov
xor
mov
jle
sub
repnz
sub
add
fdivrl
mov
scas
dec
movsl
mov
or
dec
cld
jno
inc
pop
stos
mov
pusha
or
xor
pop
adc
and
outsb
das
dec
out
push
test
lds
push
leave
cmpsb
aam
out
dec
bound
daa
test
mov
ja
lds
mov
rclb
fcmovb
fdivrl
xchg
nop
outsl
dec
stc
xchg
xor
xchg
sbb
add
scas
in
cmp
pop
dec
movsb
fidivs
mov
pop
lds
bound
dec
or
fists
daa
inc
daa
inc
stc
add
outsb
stos
jae
pop
xchg
mov
sbb
pop
fistpl
pushf
ficompl
jnp
daa
lret
mov
negb
aam
lock
dec
pop
andb
mov
sub
rcrl
push
add
addr16
pop
fiaddl
mov
loop
addb
lea
add
pushl
push
int3
pop
adc
or
mov
test
jb
es
ds
inc
sbb
add
dec
mov
imul
pop
test
mov
cmp
je
sbb
lret
ljmp
sahf
mov
daa
std
mov
lock
adc
adc
in
mov
mov
xor
lea
imul
mov
cmp
cmpsl
xchg
mov
mov
cmp
dec
push
gs
inc
mov
in
loope
xchg
and
jge
stos
and
lds
bound
push
and
jle
movsl
and
or
fdivrp
sahf
int
je
gs
push
adc
es
push
cmp
negb
sub
xor
jecxz
push
adc
pop
adc
aad
mov
cmp
push
loop
xchg
inc
lods
mov
or
mov
xlat
jae
push
mov
addb
adc
or
mov
loop
adc
jge
icebp
addr16
xor
jg
dec
dec
clc
pop
jg
xor
arpl
adc
lcall
shlb
pushf
xchg
out
pusha
test
ficomps
push
xchg
xlat
mov
fdivrs
or
mov
inc
lret
mov
lods
or
fidivl
push
lgs
jno
fisubl
nop
mov
add
sbb
and
jbe
nop
sbb
mov
jecxz
adc
clc
daa
cmp
adc
xchg
push
push
pop
pop
inc
outsl
cmc
inc
mov
mov
andb
mov
mov
push
pop
sbb
push
cli
jecxz
pop
mov
clc
and
imul
mov
jl
loope
jne
inc
jle
add
adc
pop
cmp
inc
lock
xchg
xor
pop
or
sub
jmp
cmc
fiaddl
hlt
test
repz
jbe
mov
mov
ljmp
push
fld
pop
mov
int
xchg
adc
into
mov
nop
js
mov
and
mov
data16
imull
sti
aad
inc
nop
daa
xor
mov
fs
or
push
pop
sub
nop
mov
lret
dec
add
fsubs
lods
inc
xor
fistpl
mov
jnp
pop
leave
popa
scas
add
inc
shll
scas
pop
mov
add
adc
clc
pop
adc
lea
mov
mov
mov
loopne
xor
pop
test
or
push
xchg
dec
fdivs
mov
cmp
mov
mov
xchg
xor
aad
inc
mov
dec
pusha
pop
push
cwtl
cmp
shl
jl
add
fistl
scas
lock
ret
imul
ds
adc
lods
adc
push
jg
mov
pop
jle
pop
dec
push
in
cs
dec
pop
jo
in
xchg
bnd
pop
fidivl
xchg
lods
div
sbb
lods
rcrl
jg
xchg
inc
xlat
inc
push
les
ret
sbb
js
enter
xchg
enter
lcall
and
add
movsb
cwtl
mov
cmpsl
in
push
cmp
adc
mov
imul
arpl
or
jno
imul
pop
cmp
xor
js
jb
cmpps
addb
jo
iret
insl
push
sub
jl
pop
adc
or
movsb
pop
pusha
cmp
cmc
rol
es
inc
rol
pop
imul
sbb
shrl
jl
dec
popf
inc
push
or
jp
and
lret
or
and
cmp
sbb
mov
push
addr16
inc
repnz
adc
and
adc
sub
xor
inc
jmp
push
xchg
cmc
xor
pop
mov
lret
dec
cs
clc
lds
mov
icebp
in
sbb
pop
stos
mov
pop
dec
push
ja
or
addb
and
push
push
pop
mov
push
out
lret
and
out
aaa
pop
jl
pusha
in
push
into
xor
or
or
mov
shlb
ljmp
push
or
jae
outsl
in
call
xchg
and
inc
xchg
decl
movsb
adc
or
imul
je
and
pop
add
mov
or
loopne
add
pop
and
mov
xchg
in
dec
push
aad
call
sub
pop
adc
mov
les
jp
das
addr16
in
sub
insb
js
cmp
scas
sbb
mov
pop
cmpsl
mov
adcb
adc
jge
dec
stc
xchg
cmpsb
jb
mov
pop
cmp
scas
xor
leave
call
xor
ja
mov
stos
jbe
push
iret
test
inc
in
mov
mov
lods
xchg
sub
mov
mov
int3
mov
pop
cmp
test
jmp
ret
ja
push
fwait
sub
adc
mov
outsl
jle
inc
cmpsb
inc
jno
mov
add
js
insl
xor
jno
lds
mov
call
xchg
popa
or
lret
in
adc
lcall
dec
xchg
ret
sti
popl
and
mov
insb
ss
push
pop
aam
adcl
mov
sahf
imul
jae
stos
jno
or
jae
lds
push
jns
sbb
jecxz
popa
daa
lods
hlt
or
into
cmp
insl
cmp
loop
mov
ret
xor
xchg
fisttpl
aam
sbb
sbb
int
hlt
out
sbb
inc
jb
std
jg
outsl
and
insb
dec
movsl
push
pop
dec
jl
mov
xorb
jb
in
jno
jmp
or
and
call
lahf
inc
test
sub
rorl
jge
pusha
adc
pop
icebp
enter
in
into
xchg
dec
dec
cmp
push
sbb
test
mov
inc
pop
sbb
jmp
lahf
addb
push
cmp
xchg
pop
mov
push
pop
mov
in
fidivrs
pusha
mov
ljmp
cltd
xor
mov
mov
lds
pop
repz
adcl
outsl
rcll
sbb
dec
jp
jmp
repnz
pop
fwait
jmp
xchg
test
enter
fstpl
xchg
mov
ficompl
popl
adc
push
mov
xlat
mov
push
ret
stc
iret
fidivrl
and
shrb
rorb
add
dec
lds
lea
mov
arpl
lods
or
and
fsts
xor
test
adc
sbb
mov
dec
mov
mov
repz
orl
push
push
xchg
mov
clc
aaa
cmpb
sahf
xchg
stos
or
iret
add
xor
jne
xor
out
lahf
icebp
mov
jnp
xor
xchg
hlt
call
fisttpll
sub
mov
adc
scas
jnp
cmpsl
shl
inc
dec
pop
dec
adc
scas
and
loop
cmp
fnstenv
mov
sub
js
imul
sub
mov
aad
and
mov
mov
jecxz
pop
addr16
out
add
rorl
push
les
out
int3
add
addr16
fisubrs
enter
pop
lods
jnp
scas
and
cmp
add
out
and
insb
cmp
mov
call
in
adc
movsl
pop
call
dec
js
pop
cli
mov
lock
mov
xor
xor
rol
lock
fisttpl
shrl
ds
vpmaddwd
mov
sahf
nop
jbe
fistl
in
pop
ret
nop
hlt
add
inc
lock
lret
outsl
fidivrl
mov
stc
arpl
orl
sbb
rorl
add
ljmp
and
push
pop
and
or
std
setae
pop
or
aam
int
fwait
adc
dec
add
sbb
xchg
icebp
ds
call
cmp
shlb
lret
scas
rcrb
rclb
pusha
cmp
popa
stos
jge
rcll
stc
aas
call
lea
jo
rcll
jnp
inc
mov
test
fs
sbb
pop
push
mov
out
or
ljmp
mov
imul
lock
xor
lahf
das
xchg
loopne
pop
cs
pop
jle
movsb
test
pop
sbb
lds
shll
sbb
inc
jo
push
jp
dec
mov
mov
lea
xchg
inc
xchg
adc
add
cmpsl
xchg
or
inc
adc
sub
notb
adcb
xlat
insb
lods
sbb
push
pop
mov
enter
cmp
dec
cli
dec
xor
cli
test
xor
sbb
sbb
push
mov
push
jl
add
ja
add
call
inc
mov
push
or
pop
test
jbe
inc
cmpsb
pop
lock
mov
mov
sbb
sti
loop
leave
call
icebp
push
push
xchg
add
jg
ret
xor
xchg
aad
je
inc
add
dec
ret
std
shr
xor
pop
inc
nopl
pusha
mov
mov
ljmp
aaa
mov
xchg
sub
mov
push
lods
push
clc
mov
jns
sbb
je
push
push
data16
decb
lret
push
cli
sub
jno
clc
insl
in
lcall
push
lds
mov
into
push
sbb
sbb
pushf
out
jns
jno
fildll
mov
cmpsl
rcl
push
fxch
std
pop
loopne
mov
and
in
push
rcr
out
push
mov
jle
shll
pop
mov
in
bswap
mov
scas
mov
cs
fdivs
mov
ds
jl
imul
push
add
mov
mov
jbe
call
mov
js
test
scas
and
popf
out
cltd
dec
mov
in
push
pusha
cs
inc
repz
daa
jb
xchg
or
addr16
stos
adc
popa
lret
or
xchg
ret
cwtl
lahf
jbe
sar
adc
xchg
sub
lcall
enter
xor
push
inc
in
stc
icebp
dec
mov
in
ret
jl
cmp
pop
sbbb
shlb
test
mov
dec
dec
mov
in
mov
mov
lahf
out
popf
das
sbbl
stos
sti
lcall
hlt
add
fnstenv
dec
dec
push
fwait
loopw
lods
mov
jnp
fidivrl
inc
fwait
mov
rorb
ljmp
inc
fs
lret
mov
arpl
jg
es
inc
aad
xlat
fcomi
xor
jnp
in
adc
fdivrl
xchg
and
and
int
lods
out
sti
pop
repnz
jbe
arpl
imul
jmp
hlt
pop
cmp
stos
jg
arpl
sub
repnz
out
mov
imul
test
cmp
mov
mov
lret
movsb
lahf
push
inc
add
mov
pop
xchg
lods
sub
jp
mov
cmp
out
stos
out
in
cmp
in
xor
mov
sahf
in
mov
mov
cmpsb
inc
xchg
xor
insl
fists
sub
incb
dec
sub
push
or
sbb
inc
cmp
ja
xchg
stos
and
fistl
lods
shrb
fnsave
insl
in
xchg
nop
xor
into
inc
mov
adcb
incb
and
xchg
sbb
adc
orl
fsubrl
xchg
int3
xchg
and
ljmp
lock
push
jbe
adc
lret
gs
push
loopne
xchg
mov
fisubs
int
call
jae
iret
loop
std
pushf
jb
aas
insb
push
dec
jbe
out
cmp
lahf
fstpl
push
adc
cli
addr16
cld
xor
rorl
jbe
adc
jns
clc
push
cmpsb
mov
or
add
mov
xchg
data16
sbb
fidivrs
mov
sub
mov
orb
ljmp
adc
sub
xchg
lret
sub
mov
inc
sbb
mov
cmp
mov
lods
lea
icebp
push
xchg
mov
inc
imul
mov
push
mov
loopne
mov
adc
in
cmp
and
repnz
push
arpl
mov
xor
cmp
cltd
lea
xor
pop
jmp
out
pop
pop
dec
jb
push
add
in
mov
adc
fxch
pop
or
in
push
repnz
xchg
into
hlt
test
scas
add
adc
arpl
add
jo
jle
stos
pusha
mov
xor
adc
pop
fnstenv
mov
mov
iret
mov
lret
lahf
icebp
stos
std
jp
push
inc
fstpt
pop
or
cli
shlb
data16
das
and
sahf
sbb
fisubl
pop
xor
jae
sub
sub
pop
jbe
cs
hlt
outsb
popf
pushf
lea
repnz
mov
dec
popf
mov
dec
sub
pop
and
jmp
pop
cmp
push
mov
sub
out
xchg
cltd
add
cltd
xchg
mov
inc
add
stos
push
lock
loope
out
xchg
sarl
adcb
push
pushf
mov
hlt
jne
call
sub
push
pop
push
mov
in
lcall
insb
js
add
sbb
and
sbb
mov
cmp
sti
add
testb
pop
jp
ror
mov
cmpb
cmp
divl
call
cmpsb
push
lret
adc
mov
dec
xchg
andl
arpl
aas
icebp
in
and
out
stos
mov
lret
xor
jo
dec
sti
pushf
lret
lds
out
mov
cltd
scas
mov
lods
add
push
jbe
dec
adc
lods
xchg
pop
test
jl
lea
add
add
cs
push
enter
sub
incl
fwait
lret
enter
sbb
inc
lods
pushf
call
pop
cltd
cli
or
push
mov
push
or
cmpsl
loop
mov
sub
push
mov
pop
scas
mov
shrb
lock
lds
cltd
js
dec
lods
mov
out
inc
scas
pop
orb
movhps
stos
dec
xor
ret
mov
lret
out
xor
loopne
fstl
jne
xchg
into
mov
or
das
cmp
adc
lock
sahf
js
imulb
js
aas
jo
add
sete
dec
dec
negl
rcrb
lret
push
bound
add
mov
sub
fwait
xor
ret
cmpsl
mov
jae
jl
outsl
mov
fsubl
loop
fcmovnb
loop
jg
and
or
push
cltd
addr16
adc
pop
ss
xor
jae
cltd
mov
fistpl
aaa
std
xor
filds
push
pushf
movsl
sub
jg
cli
push
jge
out
sbb
adc
out
int3
icebp
dec
outsl
inc
push
mov
xchg
fistl
out
sbb
test
add
in
inc
call
mov
cmp
testb
xchg
xorb
psubusw
mov
adc
mov
pop
mov
sbb
xlat
aas
ffreep
dec
xchg
dec
add
add
movsl
mov
in
fiaddl
xor
rclb
mov
mov
orl
pushf
add
das
sub
pop
jl
fdivs
repnz
cmp
adcb
sbb
repz
sbb
pop
pop
fcomp
enter
jmp
sub
mov
es
jns
mov
jl
cmp
notb
pop
jbe
das
nop
push
ss
inc
ret
cmp
jo
and
jo
mov
or
in
outsl
and
lret
xorl
in
or
sbb
fdivrs
mov
sbb
add
inc
pop
sbb
imulb
inc
inc
sub
dec
push
lods
pop
mov
aas
test
sbb
push
add
cwtl
add
lods
testl
push
mov
push
stos
sbb
mov
push
das
stc
mov
mov
push
in
loope
in
adc
jae
mov
push
movsl
cmp
loope
xor
lret
pop
mov
mov
data16
std
xchg
inc
and
sti
jmp
jns
cmp
fmuls
or
fs
mov
aas
adc
inc
jne
xchg
push
scas
outsl
mov
enter
popf
loopne
enter
adc
mov
xchg
repz
sti
repnz
nop
or
jnp
and
mov
icebp
jns
in
mov
int3
or
ficomps
adc
lret
loopne
push
idiv
xchg
mov
loopne
bnd
stos
fcomps
in
xor
popa
iret
xchg
adc
sahf
mov
or
cmp
mov
repz
gs
test
inc
cmp
les
leave
push
sub
jmp
fwait
sbb
icebp
jl
int
nop
jg
mov
cmpsl
jle
rol
pop
pop
jo
or
cwtl
push
bound
jns
popa
jle
pop
aaa
add
js
clc
repz
add
mov
or
adc
repz
ds
cmp
shl
testb
mov
pop
js
adc
dec
and
mov
or
xor
cli
pop
mov
cld
jp
scas
cltd
inc
and
stc
cmp
dec
inc
popf
xchg
movsb
stos
or
pop
rcll
lret
idiv
xchg
add
popa
pop
push
dec
pop
pop
lret
aas
cmp
dec
mov
cmc
fadds
inc
cmp
nop
dec
dec
dec
inc
cmp
imul
mov
sbb
rcll
xchg
lods
sbbb
jo
ljmp
cmpb
shll
push
repz
test
inc
jge
lret
insb
lea
ljmp
aam
xchg
xchg
into
fldcw
cli
push
data16
daa
xor
or
xchg
xor
loop
inc
cmc
mov
aas
mov
movsl
sbb
or
mov
jno
insb
ret
push
inc
iret
icebp
outsb
mov
addr16
outsb
lea
mov
sbb
out
inc
in
popa
xlat
aaa
cmp
dec
dec
pop
aaa
xchg
stos
and
sbb
into
or
test
xchg
inc
insb
fbld
movsl
push
or
aam
ja
mov
int3
pop
xchg
xchg
push
push
dec
fwait
stc
xorl
loopne
ficomps
test
push
ds
bound
test
es
push
mov
in
mov
imul
pop
movsb
clc
xchg
cmp
lods
iret
outsl
sbb
and
loop
pop
jns
cmp
fdivl
dec
mov
ss
lea
leave
xchg
bound
sbb
in
and
icebp
cmpsb
or
adc
ja
test
testb
data16
in
hlt
ret
xor
int3
pop
fsubs
mov
mov
cli
push
loope
pop
sub
cmp
and
sub
loopne
mov
in
lock
test
stos
mov
push
jns
fwait
or
out
mov
mov
loope
jmp
adc
mov
jecxz
pop
dec
pop
xchg
cli
mov
clc
adc
mov
in
push
scas
jae
xchg
pop
out
cmpsb
rcrl
jno
inc
mov
adcb
or
insb
xor
inc
negb
scas
into
stos
add
movl
sarb
mov
sub
imul
sub
popa
out
jne
imul
lea
mov
xchg
outsl
inc
and
leave
pop
aaa
pop
jge
and
sbb
fwait
pop
fisubs
push
and
or
das
ret
xor
sub
es
sbb
jnp
adc
rcl
xchg
dec
xchg
ror
xor
decb
inc
fldenv
mov
inc
cwtl
or
scas
jbe
jnp
pop
or
jl
sub
shrb
push
js
pop
fdiv
xchg
xchg
leave
jecxz
scas
mov
and
les
mov
push
xor
in
js
ss
sahf
hlt
arpl
into
aad
xchg
cmp
repz
sub
xchg
jnp
pop
iret
cmc
or
cmpl
mov
mov
mov
jg
dec
push
movsb
mov
test
push
adc
je
push
add
or
mov
inc
ja
jg
jl
faddl
imul
inc
sub
cmp
mov
js,pt
lret
enter
push
mov
jo
mov
out
jge
sbb
and
sbb
cltd
and
leave
cltd
mov
mull
adc
sarl
sbb
addb
mov
sti
outsb
scas
mov
shl
les
insl
addr16
mov
cltd
pop
loope
xor
in
cmp
add
incb
mov
aam
mov
xabort
push
cmp
fdivs
int
pop
jmp
mov
cmp
shll
imul
cmp
dec
scas
mov
cmpsl
push
iret
ljmp
sbb
dec
push
inc
jl
fidivrl
das
shrl
mov
and
jmp
hlt
mov
int3
fisttps
fmull
out
ret
enter
jo
add
inc
or
push
repz
clc
jno
xor
xor
xor
imul
mov
xor
ss
stc
addr16
es
jl
and
test
in
sub
mov
enter
xor
and
sahf
arpl
clc
cli
mov
fbstp
mov
mov
or
mov
or
cmpsb
push
add
inc
addr16
sub
movsb
fwait
sbb
lods
add
shll
push
push
das
in
jmp
arpl
pop
das
mull
sbb
aad
lcall
adc
outsl
xchg
xchg
sti
clc
dec
or
aad
push
pushf
bound
lcall
mov
out
sar
test
jns
mov
jge
adc
jl
sarb
jmp
push
sub
mov
and
mov
push
push
mov
imull
bound
xchg
mov
xlat
cmp
orl
push
add
jge
and
dec
sub
adc
shr
inc
std
xor
in
xor
xchg
inc
negl
push
or
xor
or
or
test
mov
mov
xor
aaa
ret
push
push
repnz
loope
sub
mov
gs
call
lahf
daa
dec
cmpsl
test
shrb
stc
push
inc
jne
lret
rclb
add
orb
and
push
jge
cmp
mov
xor
cld
test
pop
pop
in
scas
xchg
inc
jmp
ffreep
pushf
sub
or
bound
imulb
push
jecxz
jbe
mov
sub
mov
addr16
push
mov
mov
jp
mov
outsb
jg
loopne
fwait
cmp
adc
es
fs
inc
add
mov
xchg
add
dec
sysret
add
loopne
sub
cmp
xchg
inc
adc
sbb
cmp
std
dec
mov
insb
sbb
mov
shl
sbb
sub
sbb
xor
je
pop
cmpsb
xchg
mov
shll
xorl
dec
ret
je
ljmp
rclb
cmpb
orb
mov
pop
adc
sbb
pop
dec
sarl
push
cmp
sahf
inc
cmpsl
ja
pop
movsl
aad
stc
sub
mov
pop
decb
jns
inc
mov
push
jne
cmp
loope
movzbl
pop
std
dec
scas
pop
iret
jge
xchg
pusha
fdivrp
adc
pusha
out
insl
enter
shll
lret
or
dec
push
inc
sub
push
inc
mov
mov
lcall
jno
icebp
inc
push
int3
ret
push
movsl
sbb
data16
mov
roll
js
jns
add
aas
out
test
imul
cmp
cmp
insl
ss
mov
repz
rclb
cltd
enter
or
imul
mov
scas
stos
jmp
out
add
xchg
xor
int3
out
in
rol
jb
add
popa
xor
cmp
jne
test
sbb
mov
fcomps
sahf
add
and
pmullw
cli
xchg
cmp
dec
sbb
icebp
ret
mov
xor
lret
andb
aam
les
fstl
dec
inc
subl
stc
cmc
pop
pop
imul
pop
xor
inc
popa
mov
dec
sbb
out
jp
stos
mov
das
push
movsb
mov
movsl
ja
xor
push
jne
sbb
ljmp
cli
dec
sub
and
xor
mov
in
adc
jp
ljmp
test
dec
bswap
jnp
and
adc
xchg
das
into
cmp
and
and
adc
lods
add
in
inc
mov
jo
loop
jl
xchg
mov
imul
sarb
xor
inc
ss
loop
jp
push
and
int
insb
lds
pop
jae
add
popf
jne
bound
inc
pop
and
lods
jno
pop
rcr
in
ljmp
pop
mov
push
xlat
sbb
addr16
pop
test
inc
insb
jo
pop
mov
mov
gs
mov
mov
iret
andnps
sqrtps
pusha
fistpl
cmpsb
mov
xor
mov
dec
cmp
xor
cmp
xchg
orb
icebp
dec
mov
xor
fwait
or
test
loop
push
pop
mov
dec
es
stos
or
jbe
sbb
add
sbb
repnz
jl
icebp
addl
sbb
divl
xchg
gs
ja
data16
in
aaa
jno
xchg
adcb
cmp
mov
sub
and
mov
jo
inc
cltd
sub
xchg
leave
or
dec
pop
jg
stc
cmp
mov
rcr
add
mov
dec
add
roll
divb
sbb
movsl
add
mov
test
jns
divl
jb
rcll
out
inc
sbb
dec
lcall
in
pop
movl
cmp
pop
xchg
mov
xchg
ljmp
loopne
in
fwait
xor
mov
pusha
out
jp
test
call
adc
pop
mov
xchg
mov
and
push
repnz
rorb
fwait
fs
rclb
sub
mov
je
sbb
sti
cmp
fidivl
push
call
arpl
int3
add
push
scas
push
jge
cmpsl
test
hlt
cld
icebp
fistl
repz
ret
fisttpll
loop
xor
jnp
and
dec
xor
add
test
cmc
outsl
add
mov
dec
call
adc
dec
jb
data16
inc
dec
scas
roll
outsl
outsl
mov
add
xchg
rol
jbe
lock
in
jl
mov
fs
or
inc
push
and
jnp
in
shrb
sub
add
mov
mov
insl
adcl
pop
ss
rcrl
mov
add
jle
lea
lret
sub
shlb
pop
cmp
fwait
fdiv
push
inc
fs
push
test
dec
movsl
lcall
shlb
pop
adc
insb
sti
cmp
dec
inc
pop
inc
push
leave
mov
std
inc
inc
test
sub
sbb
cltd
cwtl
inc
mov
inc
or
jmp
in
lahf
xor
sbb
jb
mov
rol
jae
sub
xor
cli
lds
pop
js
fimull
icebp
lock
repnz
scas
jbe
push
push
lods
adc
fsubr
push
movsl
lea
mov
loope
clc
mov
mov
mov
jae
rcrl
fcom
imul
pop
inc
and
cmp
mulb
scas
xchg
pop
dec
mov
arpl
scas
mov
add
lods
popf
add
jb
dec
xchg
or
push
outsl
vldmxcsr
pop
add
cmp
cmp
je
mov
and
sbb
jne
jb
xor
add
jne
add
sub
or
mov
cmp
repz
cmp
mov
pop
lea
and
mov
mov
ret
dec
int3
xlat
clc
test
fs
jbe
loop
pop
cmp
inc
pop
adc
and
jmp
or
sbb
adc
cmp
enter
insb
push
lahf
mov
mov
fcom
sarb
adc
lret
ja
push
adc
push
clc
out
scas
cmpsb
repz
sahf
and
shrb
cmp
add
leave
xchg
jb
push
jg
ret
pop
das
stos
or
call
adc
adc
mov
test
jg
jg
addr16
loopne
lds
mov
xchg
bound
rorl
imull
dec
les
add
xor
clc
push
xor
nop
outsb
adc
jecxz
clc
mov
ljmp
lahf
jbe
test
ds
adc
xchg
pop
add
cmpsb
fmull
test
aad
dec
insb
insl
mov
aam
push
xchg
inc
and
pop
ljmp
mov
hlt
cmp
pop
xchg
jecxz
int3
push
mov
and
add
ljmp
sub
lock
xchg
sub
arpl
rcrl
dec
dec
aam
cmp
js
push
pop
fmull
int
ss
inc
pop
jge
inc
inc
cwtl
mov
jbe
lods
inc
cltd
scas
mov
add
mov
cmpsl
aad
xchg
ja
in
gs
es
add
xchg
stos
mov
fcmove
dec
inc
sahf
in
mov
popa
add
mov
mov
lret
pop
lahf
mov
movsb
push
add
cltd
xor
push
mov
mov
mov
ljmp
popf
jp
pop
rorl
je
dec
movb
repnz
push
or
jne
add
jmp
sbb
das
fmul
das
cmc
inc
add
mull
push
jno
pop
aas
cmc
filds
mov
xor
xor
adc
dec
sub
xchg
add
mov
pop
loope
inc
inc
lods
mov
pop
clc
cmp
mov
in
dec
test
inc
idivl
mov
insl
js
xor
shld
jnp
pop
sub
jl
stos
shrb
ret
popf
cmp
inc
cs
fwait
push
fiaddl
sbb
adc
mov
jp
dec
loope
mov
add
push
idivb
push
out
popa
rcll
and
or
out
jg
lahf
and
shll
add
xchg
pop
and
sub
adc
add
cmp
adcl
mov
and
pop
in
cld
mov
mov
outsl
scas
xor
sub
push
jmp
pop
xor
cmp
cmp
mov
sbb
jl
js
sub
inc
and
sub
int3
mov
sbb
pop
mov
repnz
jge
in
push
call
sub
cld
jl
add
lds
fidivs
and
xchg
dec
lea
add
sar
mov
add
pop
daa
sub
lahf
cmpsb
inc
int3
xchg
ljmp
xchg
pop
pop
dec
es
fwait
mov
fidivs
pop
push
ret
out
pop
sti
push
sahf
push
movsl
loope
jne
mov
dec
mov
xchg
sub
adc
or
scas
lods
jns
xchg
xor
xchg
dec
mov
pop
subl
inc
movsb
mov
mov
repz
out
dec
inc
jmp
and
mov
loopne
iret
ja
xorl
mov
jge
mov
lahf
add
xor
leave
jmp
fiadds
je
cmp
and
xchg
jge
push
jge
mov
mov
clc
mov
or
pop
ret
shrl
sbb
loopne
xchg
les
fs
push
out
icebp
sahf
out
fcmovu
pop
cmpsb
cmp
imul
aaa
push
jecxz
fucomip
inc
shlb
and
cmc
aam
mov
shlb
mov
or
pop
mov
into
popl
sub
outsl
rcll
jbe
test
ret
xchg
add
jnp
in
xor
lock
fldl
cli
fldcw
lods
push
jbe
pop
push
pop
mov
out
pop
scas
jo
insl
out
jge
dec
data16
push
sub
pop
pushf
into
mov
int
dec
movsl
inc
mov
fs
mov
rcr
int3
fsubrs
jb
mov
std
or
add
fwait
push
rcll
pop
cmpsl
insl
cwtl
push
cli
testb
xor
cmp
push
xor
arpl
jnp
jl
dec
ffreep
iret
inc
mov
jo
pop
lods
or
leave
in
mov
ss
xchg
sub
mov
dec
roll
idivl
in
arpl
sbb
movsl
pop
out
lds
inc
ja
aad
and
rorb
fsubr
rol
sbb
or
adcb
cmpsb
xchg
mov
pushf
add
imul
mov
fwait
xor
xor
stc
push
and
and
mov
leave
lret
pop
jae
push
push
and
lret
mov
mov
lock
fldenv
sbb
jnp
add
mov
fcompl
cmp
in
hlt
outsb
inc
pushf
test
aad
mov
mov
fistpl
leave
leave
das
mov
sub
or
or
push
jl
inc
aam
and
sbbl
dec
cmp
stos
fists
mov
enter
hlt
dec
loop
lds
imul
cmp
mov
les
add
inc
out
adc
push
cwtl
mov
rcr
outsl
lock
cmp
cld
add
popf
faddp
test
adc
xchg
test
xchg
pop
std
fildll
arpl
repnz
dec
pusha
fnstcw
daa
aam
shlb
orl
bsr
rcll
adc
fs
or
lds
pop
jmp
sub
lret
pushw
or
and
ficomps
fxch
pop
adc
push
call
push
imul
ja
lret
addr16
sub
mov
push
dec
pop
or
cmc
into
jne
loopne
jb
mov
lcall
adc
inc
aam
or
jecxz
mov
xchg
testb
sub
adc
jno
cmp
inc
into
add
pop
dec
sbb
dec
sub
sub
mov
xchg
mov
aad
mov
sbb
xchg
mov
fmull
loope
test
mov
and
pop
in
mov
dec
test
mov
outsl
sub
shlb
mov
inc
xchg
jmp
sbb
xchg
push
and
sarl
fildll
cmp
add
js
mov
arpl
orb
iret
cltd
fstpl
xchg
xchg
add
xor
fs
pop
jnp
dec
scas
aam
xchg
gs
mov
out
in
call
sbb
movb
in
pushf
push
int3
loop
mov
cli
dec
mov
sub
lret
jb
xchg
lret
jne
cmp
insl
push
and
nop
scas
loopne
and
pop
inc
inc
cltd
lock
add
daa
add
ficoml
outsl
xchg
pushf
shlb
fsubs
test
sbb
out
btc
out
cmp
mov
pop
fsubs
or
stos
or
push
xchg
push
pop
and
xlat
mov
sbb
addr16
push
lahf
sub
xchg
mov
mov
cmp
fisubl
inc
jns
fldl
push
and
aas
mov
xchg
test
std
imul
adc
out
mov
lahf
lret
dec
push
pop
dec
cmpl
or
or
cmp
sbb
jg
jp
pusha
mov
mull
xchg
es
ljmp
addb
sub
in
cmpsb
jnp
and
sbb
jae
outsb
xor
add
gs
sti
shll
push
xchg
mov
push
adc
xchg
rorb
mov
or
cmp
sub
inc
pop
movsl
repnz
dec
sbb
adcl
cld
lahf
dec
cmp
cmp
mov
xor
arpl
daa
sbb
out
lahf
cmp
jp
adc
in
lods
push
mov
cs
in
or
adc
sub
icebp
dec
xchg
xchg
pushf
fs
nop
add
loop
jecxz
lcall
fisubl
sub
and
mov
adc
ljmp
jecxz
aad
mov
cmovno
pop
pop
arpl
iret
jnp
adc
push
mov
xor
cmp
cmp
fs
pop
jmp
xor
hlt
adc
icebp
cld
arpl
mov
inc
popf
leave
push
ja
push
inc
shrl
js
sar
push
push
sbb
pop
fildll
enter
dec
mov
jle
sub
inc
push
cmp
arpl
adc
xor
lcall
pop
cmp
inc
ja
movsl
sar
xchg
shll
sahf
or
xchg
std
lret
movsb
and
arpl
test
or
jnp
jns
gs
inc
add
in
lods
jmp
cwtl
jae
stc
push
inc
ja,pt
pop
add
adc
leave
inc
mov
enter
lretw
popa
push
inc
dec
movsb
std
scas
and
mov
sahf
fs
xor
mov
push
push
int3
aaa
lock
mov
add
pop
in
notb
lcall
stos
xor
lret
inc
imulb
shr
xchg
in
push
cwtl
xor
dec
mov
fsubrp
int
push
popf
xorb
fstps
push
mov
jle
pop
push
jb
out
jb
cmp
add
add
addr16
daa
lods
adc
lods
bound
add
mov
add
add
mov
sbb
nop
notl
jl
sub
loopne
mov
movsl
das
test
add
out
ja
push
or
dec
lret
sbb
jge
repz
xchg
popa
lods
mov
jle
fisubrs
and
fimull
pushf
fdivrl
and
movsl
or
inc
ficomps
lea
or
push
mov
int
test
pop
lret
xchg
jae
orb
ja
in
mov
lcall
pop
and
ds
jge
cmc
push
mov
push
add
inc
mov
xchg
add
lods
cmc
inc
rcrl
sbb
test
pop
in
pop
and
ja
mov
les
sti
xchg
jle
je
movsbl
mull
cs
psubsw
lahf
pop
xchg
mov
cmc
sub
sub
jg
movsl
hlt
in
clc
ret
aas
lock
int3
pusha
pop
ror
loop
adc
xchg
mov
add
xchg
mov
xor
cld
xchg
jmp
adc
mov
hlt
stos
add
add
sub
and
cmpsl
inc
push
jmp
dec
or
hlt
mov
xchg
out
ss
push
or
mov
loop
es
push
jl
int
sub
negl
repz
out
mov
jg
jle
mov
nop
scas
xchg
lret
push
pop
mov
in
ja
push
sahf
stos
adc
pop
cmp
xor
push
aaa
test
leave
mov
cmpb
inc
rcll
xor
dec
jbe
xchg
int
arpl
ja
mov
js
adc
fcmovb
jns
sub
or
pop
rcll
iret
leave
lret
and
js
and
jne
xchg
cltd
sbb
fs
add
push
sti
in
mov
aas
dec
in
notl
out
adc
lret
rcr
add
leave
push
mov
icebp
dec
jg
and
inc
and
clc
cs
cmp
mov
std
in
dec
inc
aad
cmc
add
js
ja
fidivl
mov
jae
pop
into
int
les
add
jmp
inc
xorl
mull
sub
lock
xchg
cmp
inc
repnz
dec
jp
jnp
aas
push
bound
or
popa
test
icebp
add
jnp
dec
xchg
cwtl
add
mov
jno
jns
fisubs
cmp
fwait
xlat
loope
add
dec
xchg
or
mov
arpl
lahf
cmp
inc
inc
pop
jg
inc
in
das
xchg
sbb
and
xchg
or
sahf
push
ret
push
mov
and
jge
out
sahf
add
mov
adc
sbb
inc
mov
sbb
movsb
or
insb
xor
aam
push
ss
and
xor
push
aas
push
push
sub
in
mov
les
inc
adc
jae
add
stc
ret
jbe
fcmovb
cmpsb
out
stos
cltd
inc
xorb
and
scas
clc
add
xchg
test
xchg
outsl
rolb
movsb
push
or
xor
xchg
mov
in
mov
loop
fdiv
sbb
icebp
xchg
or
xor
mov
mov
int3
xchg
inc
cmp
and
dec
mov
insl
cmp
pop
popa
dec
lcall
sbb
mov
mov
mov
imul
gs
in
xchg
push
xchg
into
jge
pushl
jecxz
inc
pop
and
imul
jnp
std
jo
xchg
in
aam
push
stc
adc
cmp
and
push
jl
xchg
dec
fnstenv
repz
enter
push
cmp
pop
xchg
mov
stos
adc
in
les
inc
jae
pop
xor
jmp
es
inc
icebp
lcall
aad
rcrl
pop
pop
or
repnz
adc
xchg
lret
fstps
pop
in
pop
cmp
in
jno
and
xor
cmpsl
stc
mov
and
dec
push
pushf
jb
jle
jae
sbb
jmp
mov
lret
js
movsb
pop
sbb
dec
xor
inc
test
dec
and
fidivrl
and
mov
jns
cmp
xchg
jno
imul
in
out
jb
pop
aaa
jae
cltd
cli
and
and
push
mov
stos
jmp
inc
out
inc
nop
lods
cmpsb
inc
inc
mov
xor
xchg
mov
fldcw
stos
mov
into
lret
fcoms
mov
jns
stos
pop
in
pop
xor
addl
push
mov
sbb
stc
fmull
sub
cltd
sbb
cli
cwtl
and
sbbb
cmp
clc
nop
push
mov
jmp
addr16
add
jae
outsl
cmp
sahf
fwait
sti
lahf
jmp
jge
inc
pop
imul
test
loop
and
cli
inc
pop
ficoml
mov
cmpsl
dec
mov
adcl
repz
mov
repnz
pop
daa
data16
test
cmp
ficoms
std
jnp
outsl
cli
insl
mov
or
dec
movsb
and
das
adc
jns
lods
dec
ds
in
push
fisttps
imul
aaa
sbb
and
cli
clc
jbe
jne
push
pusha
shlb
lea
dec
out
push
ss
cmp
add
mov
inc
dec
mov
lods
out
hlt
add
aam
fcmovnb
inc
xchg
cmp
push
mov
out
xchg
xchg
xchg
scas
sbb
dec
cmp
cmp
out
imul
mov
push
sbb
pop
dec
and
fwait
dec
mov
cli
inc
gs
lock
pushf
notl
cmp
nop
mov
jg
lahf
outsl
cmp
mov
mov
inc
xlat
scas
dec
imul
mov
shlb
jne
stc
stc
xor
cmp
cmp
push
inc
push
loop
and
pop
fdivr
lods
add
out
mov
push
jp
arpl
movsb
lcall
test
gs
mov
shl
imul
mov
in
daa
mov
inc
in
lea
push
xorl
xchg
stos
fidivrs
pop
xchg
leave
cmp
mov
or
aam
fstl
adc
arpl
mov
test
lret
aaa
add
and
sub
daa
pusha
inc
ljmp
cmp
and
mov
call
mov
fwait
lods
xor
cld
aas
pusha
add
pop
xchg
fidivrl
pop
push
inc
outsl
shll
in
or
lret
nop
add
mov
inc
movsb
aad
mov
xchg
adc
push
shrb
sahf
jo
adc
xchg
inc
xchg
clc
les
xchg
push
mov
pop
stc
outsl
add
out
jmp
cmp
pop
fstl
dec
stos
and
push
mov
cmpl
jp
pop
cmp
fwait
test
xorb
imul
xchg
push
addr16
xchg
dec
jb
pop
mov
ds
iret
sti
cmpsb
loope
popf
in
sub
insb
cmc
push
mov
sbb
pop
jg
hlt
or
movsb
push
sbb
lods
adc
mov
mov
and
ds
aam
adc
and
test
sahf
in
imul
mov
shll
push
sbb
orb
test
cmp
lods
pop
sub
lret
das
testl
lea
into
push
rclb
mov
shrb
ss
ret
pop
inc
pop
andl
orps
xor
pop
adc
in
cltd
jl
jnp
cvtps2pd
and
pop
xor
sub
inc
mov
xchg
flds
test
je
jb
or
jbe
jg
scas
pop
push
cs
das
pop
lcall
cmp
dec
popf
mov
xchg
pop
inc
push
cld
sub
pop
icebp
call
scas
adc
sub
or
into
mov
ljmp
jb
mov
div
jb
lock
popa
cmpsl
and
mov
rcrb
cmpsb
xor
clc
movsb
mov
add
lds
cmc
ret
daa
sub
push
bound
ret
push
jae
inc
mov
das
test
imul
and
in
call
mov
pop
stos
sbb
dec
mov
inc
xchg
xor
outsb
cmp
xchg
cmpsb
cmc
mov
aad
mov
pop
cmpsb
add
popa
arpl
mov
add
push
pop
jbe
jae
mov
or
stc
repnz
pop
lret
inc
pop
mov
dec
mov
mov
clc
xor
mov
std
dec
cld
stc
push
mov
cmp
jecxz
push
repnz
xor
fcos
sbb
xchg
repnz
pop
push
fnstcw
adc
xor
inc
lret
push
xchg
xchg
mov
fildl
adc
xchg
pushl
dec
sbb
inc
rol
daa
cmp
daa
pushl
cmp
je
pop
mov
push
mov
je
push
mov
jae
push
mov
sti
ss
call
cmpsl
cmp
or
mov
add
lea
mov
ret
sar
dec
in
out
scas
xchg
dec
movsl
fldt
push
or
sbb
adc
inc
call
stc
sbb
pop
jno
in
inc
mov
push
pop
jmp
loop
in
fisubs
adc
jb
pusha
mov
negb
in
xor
and
or
icebp
lret
or
sbb
add
pop
mov
xor
pop
add
jl
adc
dec
and
test
pop
cmp
add
call
lock
call
adc
stos
xchg
cmpsl
add
mov
lea
aad
sub
mov
clc
and
or
inc
jnp
adc
sti
sub
clc
xchg
aam
or
mov
inc
stos
lahf
xor
mov
fisttpl
bound
movsb
cmpsl
sub
and
or
add
inc
pop
mov
lods
xchg
push
and
or
popf
ljmp
fs
insb
adc
push
mov
mov
jbe
enter
cs
jmp
mov
jne
pop
mov
out
scas
jge
adc
add
jmp
daa
xor
inc
fisttpll
dec
addr16
and
lret
clc
push
call
mov
mov
adc
mov
xchg
lock
push
sbb
adc
test
jecxz
inc
sbb
inc
imul
inc
repz
mov
test
sbb
inc
mov
inc
add
dec
or
jnp
mov
inc
imul
mov
jnp
popa
jo
xor
int
pop
stos
mull
mov
mov
push
mov
pop
dec
daa
call
shlb
mov
lret
insl
dec
xchg
sub
stos
mov
mov
ja
aas
and
ficomps
jge
stc
rcrl
cld
into
lods
inc
test
test
test
repnz
mov
jecxz
add
shlb
xchg
add
rorl
cwtl
lret
pop
popf
mov
hlt
cwtl
mov
std
insb
adc
sub
mov
popa
or
pushf
jg
jns
push
gs
shrb
pop
xchg
ss
subb
hlt
mov
add
sub
and
ret
and
adc
dec
dec
push
nop
mov
repz
xchg
pop
xor
mov
xlat
mov
adc
lahf
aaa
jnp
lods
jae
add
pushf
pop
pop
cmp
push
test
cmp
aas
pop
inc
cltd
andb
ss
and
push
or
movsb
orl
shll
or
push
xchg
pop
mov
jge
ret
in
or
adc
in
push
hlt
popf
mov
mov
fisubrs
mov
ficompl
jmp
ret
outsl
mov
mov
xchg
fadd
das
jns
xor
int3
dec
insl
jns
and
xor
dec
xchg
int
pop
les
fdecstp
jecxz
push
test
xchg
lahf
and
or
mov
pop
xor
mov
stc
bnd
adc
jb
std
dec
xchg
push
inc
scas
mov
jl
push
adc
add
xchg
or
daa
js
mov
popf
xor
sbb
fistl
sbb
mov
push
push
add
mov
pop
rolb
int3
fsubs
xchg
sti
outsl
push
dec
xchg
aas
aad
mov
dec
inc
push
adc
sbbl
or
rcl
mov
adc
adc
mov
inc
mov
ljmp
lock
fadd
insb
sub
sbb
lock
int3
mov
cs
mov
in
mov
arpl
dec
movsl
or
cmp
jno
cmpsl
es
fstpl
outsb
in
in
popf
cwtl
rcrl
and
ret
stc
ds
add
jns
xchg
in
and
sbb
notl
push
mov
pop
push
aas
aam
sti
xor
lcall
inc
jns
rolb
push
pop
xor
push
cwtl
fwait
pop
cltd
test
les
jns
jbe
add
neg
jl
xchg
sub
mov
int3
movb
mov
gs
scas
imul
loop
in
dec
in
in
dec
mov
stos
aaa
push
jmp
mov
jecxz
pushf
mov
xchg
mov
sbb
scas
lret
add
lcall
mov
mov
enter
dec
dec
fwait
adc
inc
push
xchg
push
cmp
push
enter
cmp
mov
xchg
jg
or
push
sti
into
dec
dec
jecxz
sbb
xchg
into
in
or
mov
cld
jge
int
xlat
add
add
cmp
push
inc
push
inc
adc
xor
add
push
add
mov
nop
into
jecxz
int
shll
push
mov
stc
clc
and
add
mov
jns
fwait
es
push
or
out
xchg
enter
fwait
push
xor
mov
push
jne
or
xchg
lahf
pop
dec
pop
js
pop
rcr
fsubr
mov
sub
test
insb
push
test
mov
shl
lock
dec
fcomps
or
push
int3
mov
pop
jle
icebp
mov
clc
jl
fimull
shrb
sub
cmp
repnz
out
and
add
mov
outsb
mov
pop
pop
mov
sub
pushf
push
mov
mov
add
bound
sub
stos
xchg
and
ss
pop
inc
jne
and
mov
mov
jo
pop
in
sbbl
jl
add
fmul
stos
popa
insb
xor
lahf
ja
outsb
cli
mov
fisubs
lahf
push
rorw
punpckhbw
mov
add
push
fcmovbe
push
cmp
push
pop
jo
insb
push
into
mov
adc
xchg
mov
lret
nop
xorl
jmp
call
jne
insb
call
push
push
sub
aaa
lock
jae
push
or
hlt
mov
std
jne
fwait
scas
pop
insb
daa
jmp
cld
sbb
data16
add
add
xlat
cmp
inc
push
pop
mov
lea
sahf
les
and
and
into
pop
es
out
sbb
fnstcw
pop
mov
rorb
inc
or
pop
xor
add
adc
mov
out
ret
mov
fbstp
fistpll
sbb
sub
outsb
fimull
js
das
andl
mov
in
int3
dec
loopne
jecxz
xchg
xor
xor
mov
int3
mov
adc
dec
push
in
fs
int3
lret
push
shr
cmp
in
mov
pusha
bound
jg
sti
pop
mov
mov
dec
push
pop
in
xor
jne
lcall
cld
call
es
push
test
mov
dec
xchg
sub
mov
out
in
sub
pop
and
stc
mov
inc
and
movsl
add
inc
jae
dec
inc
push
maskmovq
idivl
add
and
rcrb
jge
insb
div
clc
test
add
sub
push
or
pop
cmp
push
mov
aam
sbb
cld
mov
push
mov
mov
pop
sti
push
xor
sub
loope
adc
je
in
and
xchg
or
loope
sub
enter
leave
sub
or
dec
jbe
mov
pop
xor
repnz
adc
fbld
mov
xchg
adc
mov
inc
mov
lcall
std
mov
mov
lret
fsubp
popa
jl
shrl
sub
adc
hlt
mov
lods
cmp
nop
sub
mov
inc
or
xor
imul
aas
scas
neg
push
lret
punpckhdq
mov
enter
inc
dec
push
xchg
cmpsl
lods
enter
dec
xchg
gs
cmp
mov
fistpl
push
jbe
dec
or
xchg
or
push
dec
xor
xor
mov
movsl
enter
fs
shll
dec
popf
cmc
inc
pop
jnp
mov
inc
fldt
jge
inc
xlat
xor
push
add
or
sbb
sahf
and
into
pop
pop
insl
insl
jnp
shll
aas
mov
test
das
xlat
in
mov
xor
xchg
sbb
inc
int
pop
test
les
xor
mov
dec
dec
test
or
lods
jne
dec
rcrl
sub
loope
push
pushf
test
fcoml
xor
pop
pop
mov
je
and
dec
jbe
jae
and
addr16
jmp
addb
aad
sub
movsl
mov
aas
sti
andl
lods
push
inc
insl
pop
incb
orb
xor
in
adc
popf
and
movsb
mov
shlb
aas
push
data16
imul
mov
shlb
and
pushf
insl
ljmp
cmpsb
xchg
xor
jp
mov
jl
push
mov
mov
push
addr16
inc
add
mov
sub
cmpsl
xor
mov
andl
cmp
dec
rolb
and
iret
xor
mov
pop
ja
add
or
loopne
cmc
add
and
xor
fsubs
insb
in
inc
jbe
sbb
sarb
stos
mov
ret
nop
mov
adc
push
push
in
test
gs
jge
in
daa
hlt
cmpsl
or
movsb
adc
inc
test
xchg
daa
and
lods
cld
jb
mov
push
orb
push
push
dec
popf
dec
cmp
sarl
lock
mov
push
cmpsb
mov
adc
inc
mov
add
adc
push
inc
clc
rcrl
shll
add
repz
sbb
pop
hlt
adc
stos
shl
cmc
lds
fs
shll
xchg
adc
ljmp
aad
mov
mov
lret
frstor
mov
pop
jne
mov
sbb
jnp
mov
shr
leave
mov
ja
jo
aas
and
jg
or
das
pop
fst
mov
jge
test
repz
xchg
loop
pusha
sbb
push
push
out
xchg
in
push
ja
ss
testb
xchg
call
scas
xor
gs
add
js
push
int3
jno
xchg
mov
popf
mov
leave
mov
push
sub
jmp
inc
xchg
mov
mov
sbb
push
pop
push
stos
dec
adc
and
xlat
stc
nop
push
pusha
in
popf
addr16
or
add
roll
rorl
adc
mov
mov
cmpsl
test
lds
in
call
add
pop
push
xchg
push
jo
sub
xor
lahf
cwtl
and
xor
mov
int
add
xor
std
shll
and
xchg
jbe
daa
mov
adc
test
jp
add
popa
dec
lea
fwait
jge
pusha
sub
xchg
nop
cld
sub
cmpsl
pop
in
jne
in
add
jecxz
shlb
mov
adc
test
dec
inc
pop
call
ficoms
dec
mov
adcl
popf
loope
dec
les
fimull
in
in
jg
sub
sbbl
lods
sbb
pushf
push
mov
dec
cld
test
mov
cmp
insb
pop
enter
push
pop
cwtl
push
roll
jne
mov
leave
lock
sub
jle
xchg
ficomps
bound
sub
in
mov
push
lahf
add
add
in
adc
daa
scas
mov
xchg
clc
lds
xor
lods
and
sub
out
fwait
mov
sbb
push
and
lret
scas
jle
inc
aad
pop
cmpsb
shlb
adc
repz
imul
and
dec
lock
push
sbb
pop
mov
gs
mov
jmp
fs
jg
mov
lret
in
jns
in
jl
cli
cmp
fsubs
dec
lcall
xor
xor
xor
cmp
fsubrs
adc
dec
push
sarl
cld
jmp
cld
sub
ds
dec
or
xlat
call
sbb
mov
and
je
scas
cmp
cmp
cmp
push
xorb
jae
scas
loop
cld
push
stc
movsb
iret
aas
pop
ret
jb
cmpsb
ret
jbe
shrb
sub
mov
addr16
popf
jne
fistpl
sti
adc
pop
sbb
jns
jae
das
inc
mov
pushf
sbb
push
stos
loope
xorl
xor
lods
pop
sti
mull
loop
in
aaa
cmp
mov
mov
cmp
mov
fildll
test
out
fmull
repz
push
lcall
lods
pop
dec
leave
test
add
xchg
xchg
call
lock
shlb
out
fidivl
inc
xchg
outsl
sar
pop
ja
and
xor
and
std
cmp
xchg
push
dec
aas
fistl
inc
jbe
push
gs
dec
add
dec
jge
and
sub
out
xor
idivl
lret
xor
sbb
out
mov
jb
adc
ss
adc
sub
rcl
adc
xor
sub
scas
xor
cmpsb
aas
sti
js
sbb
stos
or
jge
pop
jp
push
int
pop
nop
xor
pop
jnp
push
lahf
aaa
push
sbb
mov
mov
inc
lcall
xor
or
out
pop
sbbb
fadds
fsubl
or
xor
mov
push
sub
sbb
fisubs
jnp
inc
mov
lahf
clc
mov
push
jp
inc
mov
mov
out
pop
sti
popa
pop
sub
fisubs
and
fldenv
mov
jb
lret
push
cli
jo
test
jns
cmpsb
inc
ret
push
sbb
imull
sbb
mov
cltd
imul
jmp
push
inc
out
fcomi
add
jecxz
addr16
jae
out
mov
inc
call
pop
and
sbb
and
out
push
jmp
or
mov
sub
cwtl
add
movsl
cmp
out
outsl
test
rolb
loop
insb
pop
shll
in
sub
insl
mov
xor
cmpsb
pop
xchg
fs
push
xor
adc
pop
inc
inc
mov
shlb
xor
pop
xlat
divl
inc
fwait
aas
adc
add
fucomip
dec
push
int
cmc
stc
sahf
adc
addr16
imul
jbe
inc
shrl
cmp
pop
pop
add
test
dec
xchg
cwtl
push
sub
jnp
sti
iret
enter
stos
aas
inc
mov
decb
add
jge
and
mov
loope
mov
ja
mov
aas
sahf
ss
jns
shrl
dec
xchg
loop
mov
das
lret
je
cs
mov
pushf
mov
ffree
sbb
lock
gs
loope
int3
add
decb
add
mov
sbb
and
dec
adc
leave
push
inc
cmpsb
popl
inc
pop
bswap
sbb
or
xor
adc
push
xchg
stc
rolb
sar
jge
cltd
ret
mov
loop
rcrl
imul
bound
push
add
pushf
jae
push
push
mov
and
inc
jns
out
movsb
sbb
inc
push
jno
cmp
mov
push
and
rorl
loopne
xchg
clc
mov
jbe
outsb
aas
into
push
push
fidivrs
inc
pusha
or
jo
mov
jp
int
pop
sub
pop
inc
jns
or
xor
enter
xlat
ficoml
xchg
cmc
jp
leave
fidivrs
mov
ja
push
dec
sub
xchg
adc
cmp
xchg
or
mov
push
mov
push
xlat
pusha
inc
add
pusha
push
mov
add
pop
pop
hlt
out
ljmp
pop
adc
call
aaa
mov
stos
inc
lds
sbb
bound
jle
call
stc
cmc
movsl
aad
and
cwtl
and
pop
push
push
mov
rorl
imul
fisttpll
inc
cmpsl
das
jbe
fs
sub
pop
sbb
or
mov
stc
insb
mov
sahf
lds
int3
mov
idivb
and
ret
sbb
pop
inc
mov
dec
add
in
jg
jl
sbb
add
daa
pop
in
into
mov
push
mov
add
jl
pop
aad
and
inc
sbb
mov
inc
pop
lahf
cmc
shrb
cmc
sub
sbb
pop
sbb
or
inc
adc
in
flds
cltd
pop
pop
fmuls
push
xorl
jp
xor
movsl
icebp
jnp
and
mov
les
add
xchg
les
pop
dec
jg
and
sbb
mov
int
inc
jbe
out
insl
sbb
repz
adc
xor
fisttpl
stos
mov
vmread
add
je
mov
mov
imul
gs
jnp
sti
fbld
mov
mov
leave
dec
pop
fsubs
lods
mov
ljmp
xchg
dec
inc
lahf
adc
das
in
dec
cs
mov
jo
add
mov
cmp
dec
pop
roll
adc
mov
lds
mov
dec
loope
adc
sti
lods
addr16
std
test
fs
xchg
mov
mov
add
pop
pop
fcmovnu
push
xchg
shrb
xor
xchg
das
dec
sbb
mov
mov
jbe
sahf
mov
test
sbb
out
pop
jne
orb
dec
mov
ret
sub
jo
loopne
mov
fists
push
cwtl
test
rol
push
out
sub
adc
lea
stos
mov
enter
out
push
pop
push
subb
xchg
rclb
jecxz
cmc
and
pop
cmp
call
stc
sub
cmp
out
nop
xlat
xchg
mov
mov
sarb
or
and
into
push
decl
ljmp
stc
and
xchg
call
rorl
mov
ljmp
mov
push
lds
loope
mov
pop
mov
sub
icebp
jbe
or
sub
out
mov
adc
and
mov
pop
adc
cld
xchg
test
pusha
aam
pop
pop
ficompl
lcall
negb
adc
xchg
mov
sub
lahf
or
sbb
cltd
xchg
xchg
xor
add
scas
out
mov
cmc
xchg
cmp
xchg
cmc
xchg
iret
dec
gs
jge
jmp
xchg
cmp
fsts
loopne
ljmp
fistps
call
mov
aas
push
or
mov
ret
pop
xor
fwait
push
fwait
adcl
jp
lret
aam
hlt
js
jmp
jbe
and
xchg
adc
fcmovu
leave
sbb
sti
pop
inc
mov
cmp
and
nop
mov
std
push
aad
mov
add
fucomi
mov
aas
data16
lea
pop
shrb
orb
push
jae
push
jns
jo
cmp
xlat
clc
rorb
cli
stos
addb
dec
dec
cmpsl
sarb
xchg
roll
pop
movsb
mov
arpl
push
adc
popa
pop
or
push
xchg
gs
int
cmp
cmp
push
xor
sbb
dec
xor
mov
jmp
inc
inc
inc
sbb
inc
mov
or
int
leave
rcr
or
lds
push
fcmovu
dec
inc
cld
and
ret
out
insb
adc
das
pop
adc
jne
dec
ds
call
cmp
outsb
and
pop
sbb
and
mov
lcall
in
lea
mov
pop
sti
cmp
inc
js
subl
popf
cmpsb
fiadds
mov
pop
sbb
rclb
leave
loope
and
into
dec
mov
pushf
es
jo
ret
ss
cmp
push
sti
or
int
out
ficomps
inc
jp
adc
push
adc
test
bnd
and
movsl
fstps
pop
fiadds
push
add
mov
fs
leave
rolb
xor
push
loopne
outsb
loop
mov
jle
sti
je
repz
les
cmp
sub
xor
sbb
jg,pn
fstpt
fimuls
arpl
xchg
cmp
mov
pop
addr16
push
ss
add
push
fstpl
imul
ljmp
inc
mov
xchg
mov
ficoms
scas
cs
jbe
xor
push
cmp
push
sti
dec
adc
mov
inc
sub
adc
inc
into
into
jno
inc
jae
testb
sti
sub
int3
sub
js
xchg
sub
cli
stos
xor
test
xchg
adc
pop
inc
mov
arpl
sbb
xlat
outsb
dec
fidivrl
stos
arpl
and
jbe
jbe
out
lods
iret
or
fsub
out
mov
out
push
fisubs
mov
push
mov
loope
mov
jbe
cmp
mov
push
xor
aad
xorl
add
stos
aam
jmp
sbb
mov
movsb
ret
xchg
cmp
pop
xor
js
push
ja
push
sbb
call
ds
cmpsb
mov
in
inc
out
mov
push
iret
mov
in
cli
movsl
xor
inc
aas
xchg
cmpb
mov
stc
fwait
jns
jp
mov
mov
je
push
imul
fnstcw
aas
push
pop
sub
in
pop
push
adc
xor
outsl
jmp
xchg
in
sbb
xor
push
clc
ret
repnz
jae
xchg
popa
lea
push
movsl
xor
cmp
mov
inc
push
pop
dec
or
andb
xor
or
sub
mov
xchg
push
sub
or
lds
enter
inc
stos
mov
and
clc
int
bound
fistpl
dec
and
nop
shl
add
inc
sarb
inc
les
loop
cmpb
imul
inc
push
mov
xchg
out
and
push
cmp
in
shrl
loope
pop
add
push
fldt
add
push
mov
jmp
and
push
cwtl
sub
nop
loope
dec
loop
aaa
jb
adc
mov
mov
xchg
adc
call
push
fisubrl
rcll
loope
test
push
das
sbb
loopne
orl
mov
scas
sti
aaa
ret
jbe
xchg
fadd
pop
jno
arpl
cmp
pop
jge
xor
cmp
sub
pushl
push
fildll
mov
xor
sub
nop
push
negl
push
orl
lahf
lds
xor
out
push
add
lahf
pusha
addb
js
mov
mov
and
mov
repz
pop
jmp
mov
std
enter
lea
pop
xorl
adc
xchg
sbb
and
lcall
or
jmp
xchg
adc
std
and
xchg
inc
or
adc
inc
testl
push
inc
and
loopne
into
or
sub
pop
dec
insl
mov
insb
mov
inc
movsb
enter
jbe
push
subl
mov
fsub
std
bnd
jmp
lcall
xchg
adc
lret
stos
pop
stc
js
jns
cmp
cmp
lods
es
and
and
aas
lods
dec
fldcw
pusha
push
mov
and
loop
cmp
imul
add
popa
xchg
mov
cmpsb
js
ret
xchg
or
cwtl
or
push
fsubl
hlt
mov
push
mov
lret
mov
test
sbb
roll
lret
mov
pop
mov
sbb
test
clc
jo
insl
sti
test
cwtl
sub
int
cld
rcl
mov
add
jae
and
jl
ret
add
je
jl
jg
xor
sbb
mov
pop
bound
clc
sbb
lds
lods
insb
dec
mov
daa
pop
nop
nop
ljmp
xor
xchg
xchg
js
xor
cli
inc
lea
jo
je
int
mov
das
int
jle
mov
xor
and
leave
and
jg
daa
fnstcw
and
es
es
cmp
dec
mov
leave
cmp
add
push
sbb
fistpll
pop
shll
or
data16
rclb
test
dec
dec
mov
push
stos
rolb
dec
call
pop
add
xor
sar
out
shr
mov
gs
pop
pop
xor
xor
mov
out
cli
cmpsl
ja
add
mov
enter
pop
rorl
pop
leave
adc
jg
pop
mov
cmp
pop
mov
add
cli
jg
mov
fidivrs
jnp
les
inc
push
mov
pusha
sbb
scas
xchg
dec
int
pop
sbb
out
pop
cld
inc
stc
fsubl
cmpsl
push
arpl
pop
push
adc
sbbb
jno
and
leave
adc
push
sbb
loopne
mov
mov
xor
repnz
imul
adc
sub
dec
adc
or
daa
mov
adc
mov
jo
popf
pop
inc
stos
push
mov
adc
in
or
mov
or
adc
mov
or
iret
mov
lcall
ret
popa
mov
divb
fs
mov
test
stos
pop
imul
dec
dec
adc
xchg
sbb
or
lahf
mov
push
fwait
dec
cmp
lahf
and
and
stc
dec
or
cmpsl
sbb
ficoms
neg
cmpsl
sub
xor
cmpsl
push
dec
xchg
cmp
adc
out
jns
lahf
adc
sti
popa
mov
imul
pop
pop
xlat
dec
mov
jnp
outsl
jne
xchg
scas
add
fistl
out
jae
aas
adc
jle
repz
mov
hlt
divl
iret
sarl
push
aad
inc
aas
pop
jecxz
push
add
jle
sbb
jae
sbb
mov
inc
xchg
movsb
mov
inc
pop
ficompl
push
mov
call
sub
and
mov
fucomi
scas
pop
fwait
and
repnz
cmp
push
mov
jno
jecxz
mov
xor
sbb
add
hlt
pop
shrl
rcl
jae
movsl
insb
fiaddl
lock
hlt
mov
ficoms
jmp
mov
out
imul
adc
jmp
out
mov
xchg
addl
fldt
int3
out
popf
or
popa
sarl
cmp
adc
lock
mov
mov
pop
sbb
push
push
inc
popf
loopne
cmp
adcb
aam
mov
mov
or
dec
cmpsb
pop
dec
les
mov
fsubrs
popa
adc
cmpsl
mov
jb
out
aad
and
mov
sbb
je
and
add
test
pop
out
lods
ficoms
jb
sbb
in
jb
cmpsl
ja
mov
or
inc
ds
add
pop
lcall
pop
inc
dec
cmp
sbb
dec
pop
add
xorl
jmp
mov
mov
cmp
in
add
push
and
sbb
mov
notb
daa
pop
leave
jmp
mov
leave
xchg
dec
mov
adcl
and
je
sub
stos
push
sub
lahf
jnp
shlb
jae
fwait
jp
ds
mov
jbe
out
in
mov
lret
test
jbe
and
out
inc
into
pop
adc
sbb
ret
or
push
xor
adc
sbb
div
rorl
out
imul
arpl
push
pop
stos
mov
shrl
icebp
sub
pop
fs
sbb
dec
mov
and
call
inc
pusha
fdivrl
clc
aam
pushf
xor
repnz
mov
mov
sahf
into
cmc
fnsave
jl
adc
icebp
pop
and
xchg
cmp
sbb
pop
in
hlt
mov
pop
imul
push
cmp
testb
lock
cmp
in
out
jmp
and
out
xchg
mov
mov
xchg
sahf
mov
popf
cltd
out
in
sub
xchg
pop
push
mov
fcoml
rdpmc
jp
xadd
mov
dec
cltd
mov
pusha
andl
push
jp
pop
jge
adc
inc
outsl
inc
aaa
inc
stc
ja
popa
sahf
mov
inc
test
outsl
jne
addps
or
pop
arpl
sbb
and
ss
out
sbb
cmpsb
outsb
mov
add
add
xchg
cmpsb
dec
out
lea
dec
add
inc
xchg
cmp
sbb
rol
out
stos
xchg
test
cld
cli
aam
mov
jmp
lret
repnz
dec
lods
mov
in
arpl
jo
lods
sub
test
and
sub
mov
test
dec
ret
cli
out
dec
popf
push
pop
jmp
mov
into
repz
push
out
out
aas
mov
dec
jno
or
lds
sti
dec
loop
inc
addr16
xchg
repz
in
xchg
lock
adc
cltd
stc
movsb
jae
cwtl
pop
cwtl
cwtl
mov
push
lea
enter
xor
add
sarb
pusha
push
insb
iret
mov
push
mov
xchg
fstps
ret
lret
stos
adc
shr
pushf
out
stos
ret
mov
jno
jg
out
daa
xchg
iret
pop
or
out
jg
repnz
adc
mov
mov
outsb
mov
xor
push
cmp
adc
fnstcw
lds
push
movsl
jp
xor
dec
xor
xorl
iret
fildl
dec
leave
dec
or
inc
adc
push
andb
in
sub
xor
scas
movsl
inc
inc
xor
hlt
fstps
add
loope
pop
fcoms
xchg
outsl
fldl
jge
dec
xchg
das
les
pop
mov
into
jnp
cmpsl
mov
push
out
sti
fwait
or
repz
dec
mov
scas
sub
add
push
sub
jl
test
mov
or
fstpl
mov
adc
mov
mov
bound
xchg
mov
and
or
xor
ljmp
fistpl
jge
mov
jl
mov
fs
inc
mov
popf
out
daa
jns
in
cs
dec
jnp
inc
sti
fildl
imulb
pop
stos
aas
aad
in
cmp
push
mov
ljmp
mov
xchg
mov
add
outsb
inc
xchg
fisubs
lahf
jnp
fisubrl
addr16
mov
fstl
dec
imul
fwait
sub
lds
cmpsb
or
ss
popl
incl
fiaddl
and
cli
shlb
or
mov
lcall
mov
mov
scas
fisttpl
pushl
xlat
push
inc
xor
sub
dec
sub
adc
cwtl
and
in
adc
adc
mov
adc
repnz
inc
sub
popf
aad
int
roll
pop
fxsave
addl
pop
je
cmpsb
out
imul
jb
xchg
push
lock
push
sbb
lods
sbb
sub
insb
dec
cmp
flds
inc
dec
sti
lret
adc
in
flds
adc
xchg
out
mov
mov
cli
xchg
sahf
cli
leave
xchg
push
xlat
popa
add
test
or
xchg
enter
movl
or
adc
push
add
xchg
jge
cltd
xchg
fmull
push
fdivs
add
pop
out
sub
dec
add
js
clc
pop
mov
in
cmp
jp
xor
adc
jp
enter
sbb
cmp
stos
loope
xlat
aam
mov
xor
pusha
rclb
leave
push
rol
sub
daa
fnsetpm(287
cld
jge
jp
lcall
aam
sbb
xor
loopne
jae
stos
mov
mov
outsl
xchg
push
mov
inc
inc
aad
inc
cmp
adcl
inc
sti
clts
ja
pop
decb
dec
xor
imul
mov
or
das
or
mov
cmc
xchg
fsubrs
icebp
icebp
fistpl
add
pop
data16
fsts
into
xchg
fldenv
ret
repnz
push
lret
loop
mov
inc
dec
push
aaa
pop
mov
pop
jl
jne
push
xchg
cmp
jbe
insb
xor
aad
adc
cmp
inc
fs
aas
jle
mov
dec
push
xor
adc
ffreep
mov
mov
add
add
subl
into
scas
pushf
aaa
shll
xchg
loop
arpl
jge
mov
add
rcl
xlat
stos
andl
subl
add
add
stos
push
xor
jp
cmp
scas
leave
mov
loopne
repz
jae
in
outsb
dec
xor
adc
cmp
push
xor
insl
testb
jmp
mov
test
rcr
pop
add
adc
jb
jmp
pop
inc
pop
xor
mov
push
aad
cmp
int3
cli
sbb
leave
fcoms
out
dec
pusha
scas
jnp
xor
mov
aaa
ret
scas
and
testl
xlat
pusha
das
inc
or
push
lcall
pop
adc
inc
aam
ds
or
int
rclb
mov
xchg
test
fcompl
rolb
repz
shlb
in
sahf
push
lods
push
negb
mov
cmc
stos
mov
es
dec
jae
xor
scas
push
lret
adc
fldl
jge
mov
pop
stos
outsl
stc
xorl
xchg
inc
sub
lds
adc
adc
xchg
and
js
popf
inc
mov
sahf
test
or
xchg
xchg
pop
iret
cmpsl
jnp
shll
inc
call
daa
and
xchg
sbb
xor
out
inc
and
or
mov
ret
lods
mov
insl
push
cmpb
test
push
push
scas
repz
and
mov
les
addr16
mov
xlat
out
pop
pop
sbb
mov
add
loopne
dec
lea
sub
or
and
cmp
test
iret
or
cwtl
les
mov
mov
int
fisubrl
mov
jno
cmp
pop
mov
push
fdivr
cmp
dec
fst
lret
fwait
ret
loope
add
pop
mov
fdivl
mov
fcomps
dec
inc
jmp
jecxz
outsl
pop
mov
sbb
mov
ficoms
xorl
mov
stos
sbb
xchg
pop
xchg
imulb
dec
xor
dec
xorb
jns
pusha
push
pop
imulb
or
mov
or
into
inc
fucom
hlt
pop
lcall
incb
imul
xchg
pop
or
push
mov
test
aad
inc
cmp
aaa
jmp
and
lods
mov
dec
int
shrl
mov
xchg
mov
repz
mov
xchg
nop
mov
lods
add
sbb
sub
jnp
scas
and
out
sti
test
in
xor
jae
xchg
cmpsl
loop
add
pop
and
lds
gs
jp
daa
fnsave
daa
movsb
clc
fwait
xchg
je
jecxz
mov
andl
mov
sti
xor
add
lea
nop
ret
in
cld
sbb
mov
and
dec
stc
aam
xchg
cmp
add
fcompl
mov
hlt
idiv
ret
jge
xor
cmp
cld
adc
jmp
cmp
mov
push
xor
popf
push
cmp
data16
mov
hlt
jp
es
hlt
cmp
add
sahf
sub
aas
movsb
dec
nop
jp
xchg
push
jl
adc
mov
insb
inc
mov
jae
sub
push
js
ret
and
add
mov
js
int3
jae
adc
mov
lods
in
hlt
jbe
das
sub
sahf
xchg
sarb
sbb
nop
imul
clc
scas
bsr
jbe
pop
clc
gs
or
xor
jmp
je
movsb
jp
inc
pop
xchg
jb
int
push
shl
loope
lret
and
xchg
dec
xor
lahf
lret
push
lret
out
scas
cs
pop
flds
loop
inc
cmp
xor
jbe
imul
popf
xchg
cmpsb
cwtl
rolb
pop
mov
add
adc
rcrb
mov
pop
inc
out
push
lret
dec
daa
xor
cmpl
jne
adc
jae
push
loopne
pop
or
out
js
rcrb
cmp
lock
cltd
push
jle
out
cmp
sub
cltd
in
hlt
aad
hlt
cwtl
push
dec
pushf
dec
sbb
loope
ss
jge
bswap
jmp
out
jne
dec
xorl
dec
pop
adc
pop
adc
sbbb
dec
js
jnp
and
mov
shlb
add
cwtl
sbb
data16
adc
lds
xchg
lds
pop
nop
pop
test
rcrl
nop
out
xchg
jl
sbb
pushf
push
mov
out
adc
mov
and
ja
aad
pop
and
daa
lods
lahf
jge
lock
xor
lods
and
aam
pop
mov
lret
or
imul
shll
xor
bound
push
nop
add
loopne
or
lods
paddd
fldenv
in
xor
mov
scas
aaa
mov
jbe
iret
mov
mov
lock
inc
cmp
jle
push
pop
cltd
aaa
mov
and
stos
pop
mov
sbb
pop
pushl
bound
loop
jp
imul
jge
and
mov
adc
and
sbb
jns
inc
pop
mov
mov
and
pop
call
out
fs
lahf
hlt
fmul
xor
out
push
ret
loopne
jnp
roll
mov
test
jae
shlb
and
icebp
jb
fisttps
andb
in
adc
les
out
dec
xor
cwtl
icebp
sbb
pushf
call
shlb
mov
loope
inc
loope
out
sub
xorl
sub
or
repz
adc
jge
inc
test
fs
aas
push
rcll
cs
aas
push
add
lods
das
mov
inc
jne
outsb
pop
or
call
mov
and
loopne
test
push
call
js
cmp
pusha
popa
dec
daa
adc
insb
or
mov
mov
mov
lods
xchg
aad
pop
or
xor
cltd
out
mov
mov
outsl
xor
pop
cmpsl
xchg
out
mov
pop
sbb
lods
nop
xor
nop
test
lret
ret
inc
imul
push
xchg
inc
mov
imul
outsb
or
popf
xor
fs
inc
add
shll
leave
mov
insb
inc
dec
loop
pusha
repz
jbe
pop
dec
sub
negl
push
jle
fisubrl
pop
push
aam
inc
test
setge
fldt
or
push
repnz
cmp
adc
xchg
pop
xor
xchg
mov
xchg
out
fnsave
push
dec
xchg
sar
push
into
push
pop
mov
in
movsl
cmp
cwtl
jge
in
filds
add
and
stos
sub
inc
cmp
add
int3
insb
iret
jmp
mov
outsb
test
enter
pushf
jl
xchg
lds
xor
inc
adc
sbb
mov
iret
mov
js
push
add
inc
hlt
cli
cmpsb
dec
or
inc
mov
stos
int
push
ljmp
adc
mov
addr16
mov
xchg
jbe
dec
pop
lods
pop
loopne
lret
imul
and
mov
fwait
pop
int
stos
cld
or
cmp
lds
pop
shll
mov
jp
jo
inc
push
sti
and
ljmp
or
inc
xor
mov
dec
jl
mov
cmp
iret
add
xor
icebp
xchg
shlb
pop
xchg
aaa
inc
mov
rcr
enter
xchg
les
push
ljmp
iret
aam
sbb
mov
xor
xchg
mov
cmpl
loope
inc
jb
mov
daa
or
sub
ficoms
inc
fnstcw
in
push
cmp
xchg
mov
scas
push
or
in
push
mov
fiaddl
loope
std
inc
and
jno
test
jns
pop
aaa
jne
jmp
sbb
mov
mov
stos
push
jns
and
in
mov
outsl
xchg
xchg
mov
rorl
adc
popa
movsl
mov
cld
shrb
incb
cltd
cltd
xchg
out
out
cmp
sbb
or
bnd
pop
push
addb
or
aam
outsl
inc
and
out
adc
ret
fsts
or
and
push
push
das
testb
orl
push
push
aad
and
repz
aas
stos
jnp
out
rorl
mov
es
jns
sbbl
aaa
sub
sub
xor
mul
fnstcw
cmp
pop
mov
mov
in
push
mov
shlb
cmp
test
pop
jecxz
cltd
imul
pop
push
dec
jno
hlt
out
pop
lods
or
add
push
call
popa
icebp
jmp
and
inc
out
dec
shr
test
outsb
rcrb
or
ficoms
pop
out
push
sbb
pop
mov
pop
mov
mov
inc
fistl
lock
push
jns
popa
ja
arpl
mov
loopne
and
push
subb
jmp
jbe
mov
test
adc
xchg
and
dec
cwtl
mov
ret
xor
sub
loope
jmp
pop
push
jmp
shl
dec
lds
inc
das
pop
popf
icebp
div
movsb
rorb
mov
xor
push
leave
cs
push
mov
lret
sub
inc
jle
inc
fsubr
jne
frstor
hlt
xlat
adc
enter
popf
cmpb
mov
in
add
jmp
cmp
sub
loopne
je
out
jae
iret
fnstenv
jmp
in
aas
arpl
test
push
fiadds
mov
cmp
jnp
pop
xchg
scas
fincstp
lock
jns
lods
mov
xor
into
push
lods
je
or
mov
arpl
sti
and
add
shll
add
pop
ds
xor
jo
lea
dec
inc
rorl
add
test
dec
lahf
add
and
sbb
lods
push
xchg
sti
in
icebp
lret
and
fiadds
mov
iret
fnsave
jne
push
push
mov
sbb
xchg
or
fwait
lahf
jae
xchg
lcall
cmp
push
jnp
data16
pusha
add
scas
mov
xor
mov
mov
stos
cmp
adc
xchg
jae
add
scas
push
dec
add
repnz
push
dec
cmc
in
repnz
jecxz
inc
push
sub
push
scas
and
and
jnp
test
xor
jnp
adc
icebp
mov
sbb
jmp
jmp
sub
out
pmuludq
push
add
ret
sbb
mov
sub
mov
jmp
aas
cmpsl
clc
out
fs
in
outsb
inc
pop
vcvttps2dq
popa
test
or
insl
je
rcr
push
mov
jle
add
not
fstl
adc
mov
mov
test
ja
fisttpl
xchg
dec
imul
mull
movsb
aam
fistps
stc
xor
int3
xor
push
in
push
ja
cmp
inc
pop
int3
out
in
sbb
sub
or
setb
dec
ljmp
enter
in
mov
and
jge
xchg
sbb
das
sti
and
in
pop
mov
lcall
daa
in
adc
inc
movsl
mov
adc
mov
pushf
jae
rep
out
lods
dec
xorb
addr16
xchg
cmp
mov
add
adc
mov
clc
inc
hlt
imul
xchg
sarb
div
xlat
insb
mov
adcl
cmc
xor
int
daa
cmp
outsl
mov
xchg
ja
jmp
dec
adc
gs
imul
mov
test
and
addr16
aas
pop
add
sub
or
cli
aaa
xor
insb
je
popf
sbb
and
loope
dec
mov
sahf
xor
or
mov
push
inc
xchg
xchg
mov
sbb
cld
fsubr
call
push
sub
cmp
adc
sub
inc
fs
cltd
das
xchg
popf
mov
insl
movsb
mov
or
add
jno
mov
fidivrl
or
jne
and
jne
jmp
ds
push
aam
sar
pop
inc
fs
icebp
sbb
add
jbe
xor
adc
test
in
loope
add
test
cmp
test
stc
dec
sbb
movq
push
pop
fnsave
push
fistl
es
pusha
iret
mov
ja
cs
xchg
or
dec
jno
adc
push
jns
push
xor
mov
outsl
repnz
dec
in
jle
mov
nop
pop
pushf
inc
xor
mov
push
dec
cmpsl
xchg
imul
push
xor
mov
push
cmp
leave
mov
add
movsb
mov
enterw
jnp
push
clc
loop
pop
int3
bound
notl
repz
dec
orb
cmpl
push
bsf
aad
sub
add
sarb
outsb
stc
jne
hlt
and
je,pn
lcall
in
adc
js
ds
sub
xorl
jno
mov
cmp
repz
or
ds
mov
dec
icebp
adc
stos
and
rolb
pop
mov
imulb
mov
lock
jl
aaa
aam
mov
pop
dec
leave
dec
xorl
jnp
lcall
mov
push
pop
cld
cmp
dec
jmp
pop
jo
jo
mov
jp
jno
inc
call
sti
jae
push
testl
out
adc
movsl
pop
fadds
je
and
push
jl
shll
cmp
inc
in
ret
mov
pop
fs
cmp
xor
mov
xor
enter
inc
mov
jg
mov
test
movsb
push
and
shlb
repnz
js
mov
lods
cmp
lret
insb
loope
fwait
xor
pushf
cmp
jbe
loope
add
aam
adcb
lcall
rcrl
lahf
inc
push
gs
push
scas
lods
mov
imul
loope
cwtl
and
mov
jmp
sbb
pop
push
idivl
xchg
popa
movsb
push
mov
je,pt
mov
jl
push
movsb
call
cmpsl
dec
mov
sti
xlat
or
and
imul
jp
cmp
dec
sbb
je
pop
push
imul
push
test
nop
jno
sub
mov
xchg
add
jne
add
xor
sbb
sub
xchg
lds
shl
pop
lcall
xor
repz
cltd
stos
or
jp
dec
jl
mov
stos
cmpsb
jmp
xor
cmp
dec
outsl
sub
xor
jp
fidivl
mov
cmp
test
xchg
lahf
out
andl
or
ficomps
stc
cmc
inc
das
cmp
repz
ds
mov
sbb
pop
loopne
mov
dec
in
sbb
sub
repz
rorb
and
jle
aas
ljmp
cli
stc
pop
or
out
cwtl
cwtl
jno
pop
ror
enter
repnz
jo
cli
mov
divl
aaa
hlt
xor
or
push
in
mov
cmpsl
loop
mov
mov
cmp
pop
jne
sbb
add
inc
pusha
mov
inc
push
mov
dec
or
and
jne
negl
fbstp
and
adc
lock
outsl
insl
mov
fbld
pop
stc
ljmp
xor
mov
jae
in
sbb
movsb
out
repz
fidivrs
cwtl
push
dec
inc
fucom
hlt
xor
ds
sub
and
in
sub
cmpsl
std
adc
jecxz
aaa
mov
mov
jo
jno
lods
push
inc
lahf
fsubs
xchg
pop
push
js
aad
pop
mov
pop
push
add
sub
push
out
xchg
movsl
in
jae
jo
aaa
jle
mov
dec
int
cwtl
faddp
xchg
mov
cmp
test
daa
cmp
jne
popf
sbb
xor
pop
mov
dec
xchg
daa
rcr
xlat
dec
or
adc
sbb
int
dec
and
es
xchg
pop
mov
jp
lods
xor
lret
pop
mov
mov
push
mov
fdivr
mov
ss
outsl
into
or
in
leave
jl
add
cmp
lods
jl
dec
xchg
inc
sub
aas
inc
test
imul
fisttpll
jp
xchg
xor
xor
push
dec
xchg
lret
repz
jb
jle
cmp
adc
pop
iret
shlb
repz
push
jl
data16
imul
je
cli
stos
mov
cmp
notb
mov
xor
push
aam
sbb
xor
inc
xlat
cltd
dec
es
push
xchg
cmpsb
add
int
add
push
popf
inc
or
fs
mov
les
dec
or
out
push
and
cmp
push
push
sub
xchg
push
xchg
jae
or
mov
jecxz
int
or
pop
mov
push
cmp
and
test
popa
cmp
lret
and
xchg
aam
mov
jle
jg
and
xor
pop
mov
in
or
add
dec
sub
sub
cmpsl
sbb
leave
pop
jle
lds
lds
sbb
cmp
jg
and
dec
sub
leave
insb
scas
cmpsb
push
clc
inc
jge
push
fs
aas
cmc
adc
gs
and
adc
xchg
xchg
fs
push
dec
xor
mov
xor
mov
idivl
sbbl
jg
and
push
adc
outsb
and
sbb
mov
outsb
in
rclb
push
adc
xchg
sbb
ds
cli
repnz
inc
pop
scas
and
je
repz
xchg
popa
sbb
and
sub
jne
cmc
adc
cmp
roll
cmpl
rcr
cmc
leave
sbb
rorl
pushl
jmp
aad
mov
add
mov
mov
jmp
dec
or
fstp
es
test
sub
arpl
dec
jle
lret
pop
mov
popl
xchg
lock
pop
xchg
lret
pop
push
aad
mov
rcll
add
and
push
or
ret
mov
and
jb
es
mov
and
xor
mov
jecxz
pop
mov
mov
shlb
aam
xchg
xchg
jg
push
bound
add
leave
pop
mov
sbbb
iret
cmp
repz
imul
pop
sub
fbstp
jle
fidivrl
mov
jnp
fcmove
xor
and
mov
maskmovq
testl
pop
pop
lahf
inc
outsb
jo
or
fs
inc
mov
xlat
inc
popf
hlt
shl
mov
and
dec
das
add
push
mov
add
adc
and
enter
fcoml
push
sub
insl
movsb
dec
stos
leave
sbb
lods
imul
repz
cld
push
leave
std
jg
addr16
push
dec
aaa
cmp
push
jl
js
es
imul
sub
add
xor
mov
imulb
lods
jge
mov
sbb
jmp
pushf
cmpsb
xchg
mov
cwtl
push
aaa
mov
cmp
shl
sbb
lcall
stos
push
mov
jmp
mov
or
cmc
push
mov
push
mov
popa
mov
push
aad
mov
out
ret
mov
movsl
divb
cmp
lods
pop
dec
mov
push
aad
sahf
cmpsl
jg
test
cltd
aam
jg
lret
adc
xor
and
push
jge
mov
repnz
sti
lods
pop
inc
adc
icebp
dec
jb
je
rclb
jmp
and
fsubl
popf
sbb
mov
sbb
xor
pop
nop
mov
icebp
nop
das
test
xchg
fmull
mov
sub
into
scas
cld
jg
and
mov
dec
dec
mov
pop
in
fcomp
mov
imul
scas
sbb
inc
or
mov
inc
sbb
dec
xchg
sbb
adc
add
arpl
out
cmc
xchg
nop
cmc
xor
andb
je
mov
scas
cmp
lcall
repnz
jno
sbb
inc
push
sub
adc
jg
mov
lods
inc
xchg
jbe
cmp
mov
or
cmp
out
mov
addr16
icebp
je
jmp
jp
pop
arpl
mov
test
sub
sub
mov
lods
cmc
cmp
or
fildl
push
loope
inc
std
push
addr16
or
cmc
aad
aas
repz
les
out
addr16
cli
ret
adc
xchg
scas
out
into
mov
mov
pop
sbb
push
ret
sbb
fstl
pop
cmpl
pop
mov
and
mull
jmp
add
xchg
stos
pop
mov
dec
in
test
xor
ret
push
ret
lods
fistpl
jmp
xchg
gs
int3
sahf
lea
mov
ljmp
mul
daa
push
xchg
sub
sub
push
mov
in
enter
xor
int
shll
mov
add
imul
or
pushf
dec
xor
shl
fildll
daa
jmp
or
cmp
cmpsb
cmp
popf
mov
add
testb
mov
push
rcrl
cmp
mov
xlat
mov
sub
or
rcr
mov
mov
jae
add
push
add
shll
ret
stc
imull
movsb
orl
inc
nop
imulb
or
push
imul
arpl
xor
dec
adc
mov
in
xchg
fnsave
cmpsl
push
sub
popa
xchg
arpl
dec
xchg
jne
and
sub
gs
jns
cmpxchg
jp
outsb
mov
push
push
push
dec
fisubrs
imul
ja
loopne
ret
xor
stos
push
repnz
push
call
jbe
addb
aaa
jl
cli
mov
insl
subl
aas
push
clc
mov
fstl
or
gs
setl
test
lret
jg
cltd
cld
inc
sbb
sti
mov
sar
mov
shl
lods
test
add
add
and
std
test
scas
bound
inc
mov
adc
jg
add
or
lods
inc
aad
in
sbb
addr16
and
decb
push
outsb
xor
arpl
sbbl
adc
std
dec
std
adc
or
pop
in
insl
in
fcomp
arpl
push
pop
xchg
std
or
jno
sub
je
adc
add
shll
xor
in
nop
mov
loop
cwtl
jg
xchg
jne
je
sub
out
add
bnd
daa
filds
lahf
call
cmp
push
jle
xchg
sub
push
shlb
stos
inc
jbe
imul
cwtl
dec
loopne
cmp
dec
das
rolb
fistpl
and
adc
sub
push
rcrb
mov
cli
mov
pop
or
pop
roll
call
lock
pop
add
cld
push
pop
loopne
cmp
cmp
adc
xchg
lods
inc
mov
roll
dec
fisubs
mov
cmpl
jae
dec
add
jge
jecxz
addr16
pop
sbb
and
shl
rolb
jmp
mov
test
daa
sti
jbe
cmp
mov
xchg
push
mov
icebp
jle
stos
sbb
mov
stos
dec
imul
sti
mull
dec
xor
int3
pop
pop
subl
add
insb
sbb
shl
cmp
fwait
mov
adcl
mov
jl
pop
popa
jb
in
nop
negb
outsb
fldt
movsb
loop
add
sahf
xchg
lods
lock
cmp
add
popf
test
pop
jns
jl
clc
ret
das
in
add
dec
jge
jecxz
pop
xlat
fisubl
add
xchg
data16
mov
shlb
sub
sti
or
xchg
sbb
and
je
ret
aaa
inc
out
cmp
mov
das
inc
xchg
jge
push
mov
test
push
and
mov
mov
ror
inc
xchg
pop
cmp
add
loope
add
test
aas
sub
inc
adc
test
inc
jle
ss
enter
or
or
std
shl
pusha
daa
test
push
and
push
ret
aam
push
sub
mov
adc
push
into
push
cltd
lds
xchg
movl
sub
aad
sbb
mov
cs
jg
dec
jo
mov
scas
mov
out
loopne
and
in
jb
push
jo
xchg
push
push
leave
test
xchg
inc
fisttpll
sbb
cmp
dec
aad
push
and
pop
adc
sbb
subl
jge
xchg
add
rclb
and
lods
inc
xchg
pop
dec
push
adcl
jnp
subb
lea
add
sti
lret
in
add
mov
xchg
clc
dec
mov
xchg
loopne
pop
icebp
xchg
jne
sub
mov
dec
std
push
jae
dec
mov
in
adc
inc
cmp
push
ficoml
jo
outsb
mov
jmp
pop
arpl
cmp
jb
jmp
and
mov
in
les
rorl
scas
cmc
push
mov
iret
add
inc
repnz
push
cmp
xor
lods
pop
push
or
jecxz
rcrl
lods
shlb
cmpsb
xor
cltd
adc
les
imul
daa
mov
push
cmp
add
cmpsl
in
movsl
js
mov
pushf
movsl
ljmp
es
pop
adc
xor
push
sub
arpl
and
xor
ret
and
or
mov
pop
in
fs
or
add
dec
mov
jecxz
lock
add
aam
sub
rcr
mov
ret
aas
mov
add
inc
hlt
jmp
adc
mov
and
repz
mov
or
ret
imul
or
dec
xchg
or
jmp
mov
pop
sbb
sub
push
adc
cmp
jmp
fisubl
push
lock
push
mov
adc
mov
popa
inc
mov
fimull
scas
push
sbb
shr
fldt
test
cs
js
push
sbb
insb
inc
out
jne
jo
dec
or
mov
in
lods
out
jecxz
jl
and
pop
notl
xchg
mov
dec
inc
idivl
mov
loop
sub
or
mov
jle
test
mov
ds
mov
inc
dec
and
jg
rcll
cs
frstor
jle
vandnps
imul
loope
mov
aad
roll
movsb
and
lods
ja
pop
lcall
dec
in
nop
cmp
mov
in
pop
movsl
test
jge
imul
iret
nop
loope
ret
push
icebp
aam
xor
adc
inc
cmp
out
xor
jmp
scas
ss
inc
insl
jo
hlt
dec
push
insl
lret
cmpsb
stc
xchg
repz
add
pop
outsl
or
mov
sbb
popl
pushl
imul
xor
cmp
or
clc
mov
popf
inc
clc
movsb
xchg
jge
sbb
rcr
test
push
fcmovnb
push
and
push
dec
xchg
dec
insb
lock
insb
fldt
jno
inc
mov
stc
xchg
push
mov
or
or
in
or
fisubl
cmpsb
rcrl
fidivs
idivl
and
out
inc
pop
push
xchg
fisttps
add
xchg
in
test
ljmp
push
inc
inc
or
cmpl
negl
jo
int
push
icebp
stos
xor
push
dec
push
push
rcrl
enter
mov
xor
negb
xchg
gs
adcl
cmp
xor
daa
and
loopne
out
add
roll
and
cmpsb
adc
or
jbe
dec
xadd
and
jb
icebp
outsl
fiaddl
mov
daa
out
clc
or
aad
movsl
cmc
sbb
ret
jne
xor
cmp
bound
sbb
mov
fsts
push
push
pop
mov
add
mov
and
arpl
mov
sarb
jnp
mov
push
int
movsl
jp
cmpsl
data16
dec
cld
out
int3
mov
dec
shrl
lahf
fldenv
mov
out
add
ret
std
sbb
jno
push
out
push
sarl
mov
popf
xchg
lcall
es
push
inc
jl
ljmp
adc
out
push
mov
es
and
aas
jae
jo
or
sbb
sbb
mov
push
lahf
repz
mov
iret
sbb
jno
add
xlat
inc
in
pusha
call
loopne
mov
mov
lahf
jnp
cmp
add
out
fsubl
jg
xchg
fisubs
mov
sbb
movsl
pop
inc
mov
xorb
mulb
popa
xchg
lock
jns
jbe
xchg
jmp
les
pop
sub
enter
into
stos
xor
test
int
shlb
dec
add
loopne
gs
pushl
shlb
push
daa
ret
mov
call
xchg
xor
daa
mul
or
lret
lret
jns
adc
lret
aam
rorl
adc
movsl
test
fistpl
mov
sahf
cmp
filds
mov
pop
mov
cmpsl
pop
out
and
stos
jno
xchg
hlt
fcom
push
pop
ret
jecxz
call
lret
inc
push
jl
jl,pt
mov
and
cmp
lahf
fdivrs
pop
lock
mov
arpl
mov
in
movsl
jae
pop
pop
mov
test
dec
scas
add
xchg
adc
add
mov
cmp
mov
xchg
pop
rcrl
pushf
add
fdivrl
jae
sub
fcoml
add
mov
pop
fisubrs
dec
rcr
sti
dec
adc
pusha
dec
call
mov
mov
ds
push
jnp
js
push
pop
jno
sarl
jnp
cmc
push
push
xlat
ret
mov
les
int
push
insl
and
pop
cld
rcrl
xchg
cmp
ret
sbb
cmc
jmp
ds
in
pop
push
mov
sub
and
xor
jl
sbb
pushf
loop
pop
mov
sti
jge
repz
mov
sti
daa
xchg
repz
sarb
sbb
dec
push
and
mov
jl
pop
ficoms
mov
pop
xchg
push
fsin
mov
and
hlt
mov
inc
xchg
jns
fsubrl
imul
push
mov
int
iret
adc
jmp
lock
mov
sbb
sbbb
add
data16
dec
scas
popf
dec
mov
gs
fnstenv
sbb
xchg
add
lahf
stc
scas
sbb
xor
testl
push
and
push
push
pop
xchg
ret
push
daa
sub
adc
ret
mov
stos
test
adc
jmp
dec
aaa
movl
cltd
inc
mov
dec
int3
mov
rol
stos
pop
push
mov
xchg
lahf
and
xor
push
push
cmp
aas
jmp
sbb
inc
cs
jge
rol
push
push
sti
dec
enter
mov
sub
fs
xchg
ret
jmp
fidivrl
pop
and
mov
adcb
aad
stos
sub
ja
mov
ljmp
jb
in
aad
imul
xchg
jg
adc
push
mov
cmp
int
cs
mov
outsb
xchg
cmpsl
inc
daa
push
repnz
popf
dec
xchg
pop
sbb
and
cmpsl
sub
add
ret
inc
dec
xchg
fsubr
xchg
mov
insl
rolb
loope
inc
xor
mov
lock
and
jbe
inc
push
adc
loope
fisubrl
sub
andb
jp
aas
pop
mov
ret
xor
pusha
mov
xor
int
sbb
testl
sbb
enter
pop
cmpsl
movsb
orl
dec
fldt
xchg
mov
add
dec
movsl
aam
dec
add
jnp
out
shlb
cmp
shrl
lea
mov
jge
popf
sahf
pusha
mov
clc
aaa
test
jnp
test
sti
jl
aad
adc
jno
adcb
dec
pop
and
dec
pop
in
fildl
inc
sahf
xchg
add
sub
mov
jecxz
mov
and
sub
mov
and
inc
inc
jl
js
or
cmp
xchg
xor
nop
aam
xchg
outsl
loope
data16
scas
movsb
dec
aam
shll
ss
lock
fsubs
dec
sub
subb
xchg
mov
inc
test
out
cwtl
cmp
or
ss
faddp
test
xor
es
dec
into
andb
popa
push
xor
jmp
adc
imul
orl
mov
sub
mov
test
jge
sbb
sbb
sbb
arpl
cmp
lock
ja
fstps
cmp
sbb
std
shll
mov
jl
jmp
mov
xor
shll
lcall
xor
ss
jnp
mov
or
mov
mov
scas
inc
and
js
xchg
idivb
pop
out
mov
cmp
adc
jnp
mov
aas
mov
cmp
sub
jb
lcall
xchg
cmp
fnstenv
sub
imul
lahf
or
push
sbb
stos
sbb
nop
xor
or
sti
and
mov
int
jle
sar
mov
mov
imul
test
sbb
dec
leave
mov
test
jo
iret
testl
paddusw
xchg
or
pop
fsubrl
mov
cmp
mov
mov
dec
enter
lret
aas
stos
cmpsl
negl
mov
ja
in
loope
je
dec
adc
pop
outsl
test
mov
adc
leave
sub
mov
lret
mov
or
dec
ljmp
xchg
out
jae
jae
fldl
pop
fdivrs
inc
mov
sub
xchg
in
mov
cmp
jmp
lcall
push
sbb
pop
enter
mov
pop
pusha
jns
push
sahf
std
movsl
cld
ljmp
xchg
mov
test
adc
xchg
out
or
mov
cmp
xor
mov
fdivrl
fisttps
sbb
jge
sbb
rcll
sbb
xor
outsb
lods
mov
out
test
pop
lret
push
loopne
stc
das
cmp
int3
mov
fldenv
mov
addr16
scas
and
sub
xchg
xor
or
pusha
cmpsl
lock
shl
dec
sbb
lds
mov
jbe
adc
mov
aas
mov
rcrl
lret
enter
movsl
roll
sub
add
mov
popa
xchg
push
out
mov
ds
cmc
insb
lock
and
mov
mov
aad
mov
jo
xor
out
jbe
lahf
mov
pop
xorl
loopne,pt
sar
div
xchg
loope
push
sbb
adc
add
xchg
int3
mov
fsubrp
cmp
fcoml
xor
and
inc
lcall
shlb
fwait
dec
or
jo
and
mov
sbb
int3
jp
into
sbbl
mov
test
dec
xor
dec
push
push
lock
fcomp
inc
inc
or
cmp
xchg
fildl
cltd
and
dec
pop
ljmp
dec
sbb
push
xlat
gs
mov
fwait
sub
mov
xchg
cmpsl
and
sub
mov
xlat
push
xor
push
jbe
pop
test
add
or
xchg
or
enter
shll
pop
mov
add
cmp
dec
rcrl
imul
mov
dec
cmp
mov
push
push
mov
and
mov
cltd
arpl
out
jnp
insl
imul
out
sub
fwait
push
cmp
xor
add
idivl
dec
inc
push
das
daa
stos
pop
sub
inc
jne
push
in
cmp
mov
and
jl
cmp
mov
leave
nop
mov
mov
pop
call
lahf
fsubs
mov
xor
push
push
pop
fldenv
popa
or
aaa
jmp
bound
adc
inc
int3
push
ficomps
repz
js
pop
andl
cs
imul
jecxz
and
dec
pop
inc
push
ljmp
mov
out
sbb
cwtl
adc
mov
cmp
push
test
mov
sbb
nop
aas
cld
gs
or
gs
xchg
or
inc
mov
jge
lods
in
rorl
fwait
sbb
jo
dec
shrb
ss
je
dec
arpl
out
push
and
bound
xchg
push
jb
cmp
rolb
cmp
sahf
xor
jg
mov
orl
stos
dec
dec
je
loope
popf
shr
rcrl
cli
mov
roll
mov
xchg
popf
xchg
add
sbb
and
scas
pinsrw
insl
jg
inc
lock
mov
rcl
aad
bound
jle
mov
mov
dec
dec
jmp
push
pop
adc
iret
cmc
popl
adc
pop
imull
mov
popa
mov
lods
mov
inc
mov
adcl
dec
push
jnp
add
hlt
xorl
es
pop
ficompl
lods
dec
mov
or
cmpsb
xor
jecxz
test
aas
mov
adc
unpckhps
aas
push
xchg
ljmp
mov
daa
cmc
test
sbb
adc
mov
rcll
cmpsb
pop
stos
fstl
xor
xchg
mov
jecxz
xor
mov
into
mov
jmp
fistpll
in
jae
inc
or
mov
inc
subb
dec
xor
pop
pop
popf
movsl
xchg
xchg
mov
in
movb
inc
fs
lret
lret
mov
or
call
push
orl
sahf
clc
int
nop
popf
lahf
sbb
push
ds
cwtl
adc
push
sbb
jb
dec
out
pop
popa
xlat
test
clc
pop
pop
pop
or
add
and
push
mov
repnz
mov
push
mov
or
incl
cmp
loop
adc
repnz
cmc
sbb
push
jl
sbb
icebp
into
xchg
adc
cmp
sub
pop
mov
xchg
sub
xlat
push
stos
sub
push
loope
inc
ds
adc
mov
fs
xor
scas
push
inc
mov
lea
mov
rorl
aam
sbb
jno
inc
mov
ja
fsts
sti
push
lea
sbb
aas
inc
jg
sti
inc
fs
lret
xor
push
stos
lock
rorb
mov
fnsave
repnz
push
mov
push
loop
mov
jo
add
ja
add
mov
mov
leave
or
or
lea
repnz
lahf
in
mov
imul
dec
ljmp
mov
add
mov
js
and
sub
hlt
pop
es
cltd
int3
mov
lea
lods
mov
xor
pop
mov
mov
mov
mov
push
cli
arpl
mov
out
mov
dec
jge
fs
jnp
mov
pop
insb
jno
loope
dec
aas
add
xchg
sbb
dec
mov
and
and
shrb
mov
pop
repnz
mov
and
mov
ja
mov
pop
pop
sub
pop
icebp
sbb
xchg
add
rcll
mov
push
sbb
and
push
aad
sub
ret
inc
inc
mov
sarl
pop
mov
ret
addr16
pushf
bound
ficomps
and
xchg
aaa
cltd
xor
mov
sbb
repz
shlb
scas
bound
aas
push
push
sbb
cli
push
lock
cmp
adc
andb
dec
sbb
lods
scas
jbe
iret
ror
std
adc
int3
mov
mov
mov
jg
sbb
repnz
aam
je
mov
lods
pop
push
cs
ficoms
ss
mov
std
arpl
jae
sbb
gs
xor
pop
sahf
inc
mov
add
sti
in
pop
insl
mov
pop
dec
fcoml
sbb
fs
push
pop
lret
call
bound
fcmovnb
subb
dec
lea
fstps
cmp
lock
adc
push
or
mov
ret
stc
sbb
adc
dec
les
mov
add
test
data16
dec
inc
sbb
inc
add
out
xchg
xor
mov
and
lcall
push
jne
imul
push
cltd
mov
in
enter
daa
aam
inc
dec
adc
push
add
scas
push
inc
jae
jp
xor
xchg
out
push
or
and
pop
mov
jmp
out
add
or
push
jnp
sbb
jmp
xor
insb
repz
clc
sbb
shl
pop
mov
add
loopne
fsts
pop
xor
mov
test
dec
add
popl
ja
inc
add
xor
rcrl
pop
cmp
jmp
bound
sub
xor
jp
loope
xorl
aas
es
push
lods
xchg
mov
push
mov
inc
repnz
scas
bound
mov
and
repnz
pop
dec
test
cwtl
stos
imul
fcom
rol
mov
rolb
mov
sarb
jecxz
xchg
lods
or
mov
mov
leave
inc
mov
jns
rcl
sbb
pop
enter
jp
xor
cmpsl
sub
enter
adc
data16
lahf
xor
cmpsl
aas
mov
push
dec
add
adc
pop
add
jbe
and
popa
lahf
dec
lods
mov
lds
fldl
outsb
fistpl
outsb
sub
fdivrl
fwait
loope
pop
stos
push
push
sbb
pop
aaa
movsl
mov
test
mov
push
jp
adc
ja
cmp
pop
or
and
addr16
pop
movsl
out
sbb
scas
cmpsl
pop
daa
jnp
sub
inc
adc
idivl
jbe
popf
test
cld
cld
into
rcl
std
daa
cli
and
lds
adc
jbe
xchg
lock
dec
dec
scas
dec
xchg
pop
enter
sub
xchg
fwait
cmpsl
out
add
jecxz
sbb
xchg
mov
xor
das
jo
cmp
arpl
push
clc
outsb
cmp
inc
lret
imul
lds
int3
aad
xchg
aad
ss
inc
add
xor
ja
loopne
or
sub
xchg
mov
push
fdivrs
jecxz
aas
inc
pop
lcall
cld
and
xor
or
mov
or
cmc
lcall
xlat
shl
pop
inc
lret
mov
mov
push
shrl
sub
xchg
sbb
or
out
push
test
out
aaa
pop
andb
cmp
push
pop
imul
add
xchg
fcoms
das
sbb
add
int
cmpb
cltd
dec
das
push
xchg
aas
jbe
add
push
pop
mov
xor
add
aad
push
bnd
push
pushl
aaa
outsb
cmp
jle
icebp
sbb
pop
push
stc
ret
pop
in
push
or
sbb
testb
adc
jge
sbb
mov
ljmp
xchg
mov
mov
cld
push
xchg
dec
xchg
arpl
je
int3
mov
ljmp
cmp
iret
loopne
cltd
add
xchg
fs
and
or
movsl
jo
cmp
jp
cmp
into
ds
repz
cs
sbb
jl
and
pop
mov
cli
pushf
add
vsqrtpd
xor
cltd
cmp
add
dec
data16
mov
or
jbe
leave
dec
popa
sub
sbb
pop
add
jae
and
lds
xchg
and
movsb
mov
rcll
pusha
pop
push
add
enter
push
jne
and
lret
mov
rol
cmpsl
or
dec
lcall
clc
sbb
mov
adc
and
lahf
call
adc
js
push
out
lea
dec
mov
sbb
add
inc
mov
xor
es
xchg
jbe
repz
add
cld
push
jnp
xor
out
imul
hlt
sub
inc
cmp
cmp
push
cmpsl
sub
cmp
push
fidivl
xor
push
scas
stos
stos
xchg
scas
xchg
xchg
mov
cltd
inc
les
lea
push
inc
test
dec
ljmp
pop
je
int3
test
jg
sbb
cwtl
dec
push
arpl
js
notb
mov
mov
inc
sbb
dec
jl
jge
mov
pop
ljmp
mov
jmp
cmp
dec
jb
scas
add
sbb
sub
mov
sub
and
inc
mov
push
pop
test
add
cmc
pushf
inc
push
loope
ret
add
jp
mov
test
mov
and
cld
xchg
jp
ja
out
enter
cmp
dec
jae
imul
sahf
cmpl
dec
fsubrs
in
bound
adc
daa
out
sbb
mov
sar
push
and
jbe
gs
xor
sbb
hlt
outsb
test
inc
iret
cmpsl
cltd
call
insb
jnp
xchg
jp
je
or
ss
or
inc
outsl
mov
and
daa
sbb
std
pusha
aad
push
mov
mov
neg
cltd
dec
xor
aad
sub
pop
int3
pop
mov
sbb
setg
or
push
das
push
scas
out
imul
inc
mov
or
add
add
aaa
dec
cwtl
dec
fwait
aaa
mov
dec
jmp
adc
fidivs
dec
xchg
shl
mov
jge
fdivl
push
cs
leave
mov
testb
fistl
jp
xor
rorb
fldcw
adc
test
cmp
es
jge
aad
mov
clc
in
push
test
sbb
lret
jecxz
sbb
lods
dec
adc
mov
dec
imul
jl
or
cmp
xorl
lods
push
out
test
out
sbb
insb
lods
mov
lock
adc
dec
dec
pop
ss
sub
popf
pop
or
adc
mov
enter
mov
sub
in
and
dec
jbe
insb
mov
cld
cs
jnp
xchg
loopne
sti
add
lret
popf
pusha
inc
push
loopne
pop
pop
orl
push
cmp
mov
xchg
mov
inc
sub
in
or
pop
add
and
in
lcall
iret
pusha
push
inc
repz
sbb
lcall
fiadds
inc
imul
xchg
cmp
and
getsec
into
xchg
arpl
scas
cld
pop
lods
mov
rcrb
cltd
pop
lds
popa
popa
xor
cmp
fisttps
cs
push
add
or
iret
sbb
mov
cmovo
mov
mov
sbb
or
test
xor
sub
pop
and
mov
mov
xor
shll
je
push
push
push
mov
mov
outsb
fldt
xor
jg
ss
or
or
cmp
fs
std
dec
mov
in
xchg
jp
sarb
std
cli
aas
pushf
jle
sbb
mov
loopne
ret
jmp
jge
jbe
jg
lahf
mov
sub
enter
outsl
or
cltd
std
negl
xchg
and
sub
cmc
fcompl
je
out
js
jecxz
add
push
and
push
mov
and
and
jecxz
movl
push
mov
jp
pop
mov
push
mov
xchg
popf
pop
mov
sub
pop
push
and
xchg
int3
cmc
cmp
sarb
jne
add
push
inc
mov
sbb
insl
sbb
call
jge
repnz
push
mov
lea
add
ficompl
sub
js
jg
xchg
mov
adc
dec
pavgw
xchg
shrl
inc
dec
cld
xorb
out
daa
or
push
in
std
in
mov
push
fnstsw
in
lock
pop
sub
and
aam
sbb
cmp
or
je
add
mov
inc
cmp
test
pop
lods
fs
dec
xchg
sbb
xchg
hlt
mov
sbb
aad
aas
push
cltd
dec
xchg
mov
lea
inc
and
pop
cmpl
add
or
or
xor
icebp
cmp
call
icebp
xor
mov
scas
cmp
cs
sti
sbb
mov
mov
inc
sub
ficoms
fadds
roll
xchg
and
daa
and
cmp
insb
sbb
sub
or
in
jo
mov
jno
jae
sub
pop
push
gs
xchg
popa
in
sbb
aad
add
push
repnz
xor
fcmovne
cmp
pop
mov
mov
adc
pop
inc
jg
std
in
inc
push
pop
jmp
fnstsw
cmp
fadds
xchg
call
adcl
jnp
out
mov
jmp
push
add
or
mov
lock
fwait
sti
loope
pop
and
jns
mov
xchg
pop
sbb
inc
and
or
jmp
xchg
call
xchg
outsl
aad
ficompl
loopne
clc
ud0
bndstx
xchg
mov
fldcw
sbb
fbld
pop
jge
mov
clc
lret
lods
lcall
xchg
das
cmp
jl
pop
pop
sub
push
xchg
fwait
scas
lock
out
or
sub
xchg
pushf
jge
mov
lea
push
xchg
loop
test
push
adc
sbb
xor
sub
xor
mov
ljmp
loope
xchg
loopne
popa
cwtl
das
popf
cmp
rcr
xchg
int3
cmp
cwtl
inc
mov
cmp
data16
stc
ret
mov
sbb
jp
test
movsl
data16
dec
out
xor
mov
enter
clc
cmpsb
test
inc
loope
rolb
or
cmp
lret
inc
or
cmp
test
div
sbb
xor
xor
push
nop
in
loop
rcll
xor
test
xor
xchg
sbbb
pop
enter
daa
fyl2x
emms
xchg
mov
jo
dec
js
push
inc
pop
lods
hlt
mov
jp
outsl
xor
xor
cmp
jns
popa
pop
outsl
scas
les
xlat
out
or
insl
push
cmp
ja
inc
or
lret
out
mov
inc
inc
lahf
mov
hlt
xor
xor
dec
ret
and
into
cmp
xchg
lcall
or
movsb
mov
xor
dec
pop
or
ljmp
add
adc
sub
pushf
dec
push
pop
icebp
dec
jns
push
jo
sbb
repz
cmp
add
or
or
push
enter
in
jb
je
xlat
cltd
jmp
xchg
jbe
cld
jno
jne
cli
add
fs
pusha
dec
cmp
int
clc
lods
ret
push
mov
mov
pop
in
sub
lret
inc
push
xlat
pop
mov
cld
or
aam
jnp
sub
and
arpl
stc
xchg
dec
popa
fisubl
mov
or
sub
popf
fisubrs
sub
inc
dec
sub
push
xchg
clc
repnz
int3
int
sti
dec
sti
jle
iret
outsl
aam
cmp
js
mov
repnz
test
idiv
jo
aas
push
lea
xlat
cmp
pop
movsb
push
mov
pushl
mov
inc
push
les
pop
adc
and
aaa
popa
mov
in
in
jne
ja
clc
xchg
lods
lods
xor
and
push
repnz
push
push
and
aad
xor
mov
aas
mov
push
add
push
les
sbb
sub
push
jnp
leave
adc
jmp
mov
shlb
add
stos
pop
mov
push
pop
daa
pop
cmp
lods
jp
push
lea
xchg
push
cmp
sarb
inc
or
push
out
int
adc
in
pop
repnz
xchg
movsb
mov
pop
push
add
push
mov
ss
popa
aas
dec
test
fwait
jl
add
add
push
add
jle
lahf
pusha
das
fwait
cli
jo
xchg
repnz
adc
cmp
test
sahf
pop
loopne
adc
xchg
cli
aas
mov
adc
mov
out
jne
ficoml
mov
cmpsb
xor
ss
cmp
lods
add
addr16
add
mov
mov
pop
sbb
sub
mov
mov
sbb
and
dec
inc
shll
xor
dec
mov
pop
add
or
xchg
xchg
aam
dec
fstp
ret
fsubrs
xchg
call
test
or
cmpsl
les
mov
mov
lods
out
jae
sbb
adc
xchg
adc
iret
add
xchg
inc
std
push
in
mov
mov
hlt
lret
lret
mov
cwtl
and
ret
sub
dec
aas
fs
mov
leave
push
inc
dec
stos
sub
loopne
sub
stc
rolb
sbb
data16
mov
movb
pusha
xchg
pusha
push
push
xlat
mov
xchg
sbb
decl
inc
and
or
popa
dec
jae
int3
fisttps
mov
adc
pop
mov
mov
shlb
xlat
pushf
bound
cs
shl
push
xor
lahf
dec
repnz
push
scas
test
iret
cmp
enter
xorb
in
xchg
iretw
add
mov
jb
sub
or
movsb
call
pop
mulb
test
xchg
cmp
rcl
jp
xchg
mov
xchg
sbb
xchg
mov
lret
scas
mov
addl
mov
jg
pushf
adcl
sub
jmp
lahf
scas
jl
jb
movsl
bound
lods
repz
rorl
jbe
adc
hlt
xchg
lahf
call
test
adc
or
loopne
div
sub
xor
mov
mov
outsl
lret
xchg
xor
imulb
inc
mov
movsl
inc
iret
jo
addb
cmp
jns
icebp
insb
adc
stos
xor
lcall
add
or
xchg
shlb
push
pop
sub
ficomps
and
jle
or
xor
push
xor
sub
add
jo
in
xor
sbb
xchg
sub
push
notb
mov
adc
shr
daa
scas
lahf
or
add
imul
pop
lcall
je
bound
push
roll
or
inc
mov
loopew
or
stos
mov
fsubl
mov
xchg
fnstenv
cwtl
jbe
pop
xor
push
cmp
pop
sub
dec
lahf
cld
dec
cmc
lds
push
rcrl
or
addr16
jnp
mov
pushl
test
hlt
bound
inc
adc
hlt
pop
dec
mov
ljmp
adc
adc
adc
outsb
jne
or
xor
mov
or
enter
cmpsb
filds
cmp
jne
int
popa
mov
jae
pop
andb
inc
xor
jne
push
insb
jmp
sub
test
dec
push
and
xchg
add
arpl
sbb
cmp
or
lret
mov
or
std
sbb
add
mov
out
je
ret
enter
outsl
push
or
ret
mov
jle
rorl
pushf
push
test
test
insl
inc
inc
icebp
pusha
int
push
push
fimuls
outsl
pop
mov
dec
addr16
movsb
loopne
mov
cmp
mov
loopne
leave
adc
mov
repz
xchg
cmp
inc
mov
in
add
fsubr
mov
jo
mov
scas
and
xchg
jecxz
lds
jnp
stos
jg
das
icebp
cmp
xchg
and
fucom
add
popw
jb
scas
pusha
dec
sub
inc
repnz
lea
aas
sti
cmpsb
dec
outsl
jbe
call
jg
in
push
xor
and
ss
rorb
out
loop
fwait
std
push
inc
or
rcr
sbbb
fisubrs
inc
xor
roll
cld
rcrb
stos
ret
mov
fnstenv
add
shl
cwtl
push
cmpsb
xor
and
xchg
fisttpl
cmp
sbb
fndisi(8087
out
test
out
cwtl
scas
cmp
sahf
mov
push
adc
push
jmp
inc
jne
hlt
cwtl
lock
rcll
jbe
jbe
dec
sub
lds
sub
sub
push
aam
add
incl
jns
lock
adc
aaa
mov
bound
xor
loopne
cmpsb
xchg
pop
push
sti
mov
loop
lret
adc
sbb
into
lods
cmp
shll
sbb
mov
jbe
jge
sub
inc
jmp
xchg
add
popa
push
mov
lds
scas
and
mov
fistpl
cwtl
ds
mov
sbb
ficomps
push
and
mov
fmul
imul
jns
or
mov
add
mov
jb
adc
xchg
aas
dec
lcall
jle
arpl
and
inc
mov
adc
ds
shlb
cli
out
sti
mov
pushl
into
sbbl
imul
rcr
xchg
adc
arpl
inc
mov
shr
mov
jbe
push
cmpsl
sbb
dec
adc
enter
pop
adc
cmp
stos
pop
sbb
inc
shrw
bound
ret
aam
leave
in
push
nop
shll
mov
push
sbb
mov
out
ljmp
repnz
and
insb
lock
mov
jns
mov
or
bound
cmc
xchg
lods
push
aad
insl
jg
lret
jge
dec
lret
int3
cld
js
xchg
jecxz
jecxz
cmpsb
ficoms
lret
repnz
je
push
mov
shl
mov
andl
mov
add
lock
mov
sub
mov
mov
ret
cmp
push
test
inc
cmp
jno
adc
movsb
jo
outsb
repnz
fldcw
outsb
mov
push
lret
push
xor
dec
aad
jp
inc
mov
jne
cli
dec
outsl
xchg
cmp
enter
pop
and
push
inc
inc
sub
mov
call
fstpl
xchg
cmp
mov
adc
xchg
sub
pop
pop
aad
xor
mov
cmp
jo
jp
mov
dec
cmp
icebp
into
loop
in
or
mov
cmpsb
js
or
mov
popf
ret
xchg
lods
add
mov
and
add
push
into
xchg
fs
in
aad
lods
mov
fsub
lock
push
sbb
fwait
out
inc
clc
jae
movsb
and
sub
dec
mov
lock
adc
ja
lds
add
repnz
popf
stos
out
jbe
and
mov
vcvtps2pd
mov
cmp
cltd
mov
xchg
sub
push
stos
and
mov
xlat
mov
addr16
cmp
push
test
scas
sar
dec
in
or
add
and
repnz
inc
jns
mov
jae
or
add
or
adcb
cwtl
mov
fdivrl
insb
rcr
clc
xor
bound
loope
jle
lods
jle
fdivs
out
idivl
je
scas
sbb
test
nop
rolb
iret
sub
jg
test
pushf
insb
xchg
cli
add
mov
adc
or
jnp
imul
lods
mov
sub
loop
aad
scas
sub
not
cmp
into
inc
les
add
and
shl
push
dec
arpl
sti
movsb
movsb
and
xchg
mov
sub
push
movsb
std
mov
imul
aad
push
push
aad
lahf
cmpb
pop
call
fucomp
jg
loopne
xor
jne
add
xchg
fwait
aaa
or
cwtl
cmpsl
mov
dec
sbb
mov
andb
shrl
pop
out
pop
mov
inc
ja
mov
add
mov
mov
das
aam
aas
mov
int
mov
pop
repnz
into
sbb
xchg
dec
inc
xlat
in
faddl
cmp
jo
fbstp
jns
aaa
push
lea
dec
dec
test
pop
add
push
ljmp
and
adc
shl
mov
xchg
in
push
fmull
pop
loopne
push
pop
ret
adc
popa
negl
aas
rcrl
imul
xor
ret
push
jb
hlt
mov
test
enter
nop
std
outsl
cmp
mov
xchg
or
cwtl
ror
dec
push
aaa
sub
dec
xor
lea
pop
xchg
aas
mov
mov
sbb
pop
and
or
ljmp
xor
shlb
push
jbe
mov
xchg
lcall
stos
subps
scas
jne
pop
arpl
and
cltd
adc
push
push
xchg
jns
mov
cmp
lock
mov
enter
adc
mov
js
gs
bound
insb
mov
mov
nop
sub
push
sbb
xor
imul
into
sub
xchg
mov
inc
mov
scas
leave
scas
pop
sbb
mov
loop
mov
addl
mov
or
sub
adc
push
fistl
lods
mov
jge
cmc
jle
leave
inc
pop
xchg
xchg
inc
cld
popf
fs
push
bnd
inc
ficoml
les
xchg
pop
xor
ja
inc
cwtl
lcall
mov
push
jbe
cmc
test
std
pop
not
imul
jle
popf
pop
cmp
and
jnp
je
xchg
cmp
mov
lock
outsl
xchg
mov
ret
mov
pop
fisubrl
dec
mov
dec
inc
js
adc
cmp
inc
jno
xor
pop
frstor
dec
cs
xchg
jg
cmp
mov
in
push
dec
jge
insl
repnz
negb
outsl
pushf
je
push
xchg
pop
pop
arpl
jp
call
sbb
jge
adc
inc
mov
xor
pop
sbb
in
xchg
adc
inc
scas
shr
cltd
inc
movsb
mov
jl
leave
daa
lret
arpl
movsl
push
into
sub
and
pop
adc
lret
mov
js
or
mov
mov
mov
or
ljmp
into
push
stos
ja
je
fidivrs
cmpl
jo
jb
inc
repnz
or
clc
shl
jecxz
inc
sub
jecxz
out
data16
mov
mov
sub
je
shlb
pop
push
sarl
jns
cmp
mov
daa
mov
test
orb
inc
iret
or
sub
cwtl
addl
sub
popa
inc
lods
fwait
out
aaa
insb
sbb
mov
je
rclb
stc
insl
mov
and
inc
scas
jg
dec
push
cmpsb
call
movsb
sbb
mov
push
outsb
nop
sub
stc
xor
xor
pop
dec
lea
or
and
test
aad
bnd
ljmp
add
lods
and
into
inc
insl
test
and
or
add
adc
stc
push
cmc
ljmp
into
clc
inc
inc
cmc
mov
mov
divb
pushf
jbe
mov
call
pop
rcrb
xor
cmpsb
mov
push
push
int3
mov
and
inc
incl
dec
mov
rorb
mov
ret
or
mov
dec
push
testb
inc
lret
repnz
cli
or
mov
mov
out
addl
or
xchg
cmpb
sub
addr16
out
jnp
mov
xchg
dec
cmp
xchg
sub
mov
mov
das
push
outsl
shrl
lods
add
dec
nop
cmp
mov
in
faddl
cwtl
outsb
movsb
jno
xor
cmc
outsb
sbb
fwait
jbe
mov
or
test
test
lods
add
mov
das
add
sbb
popa
add
xor
jp
ret
jae
int3
push
pop
inc
insb
stc
push
add
mov
mov
imul
inc
stc
std
mov
es
fidivrs
inc
mov
mov
sub
cld
mov
mov
adc
loop
inc
and
aaa
mov
and
fcompl
subl
cmp
cmpsl
xor
fildl
rclb
or
xchg
imulb
push
lret
jne
mov
inc
pop
fidivs
sahf
sbb
ret
stos
shrl
inc
lods
jmp
movsl
add
pop
mov
sbb
out
sbb
jmp
stc
and
pop
scas
mov
dec
ljmp
dec
lret
loopne
inc
lods
dec
mov
leave
gs
lods
inc
mov
pop
imul
cmp
cmpb
xchg
mov
repnz
dec
dec
ljmp
add
rclb
add
sarb
adc
fldcw
arpl
xor
xor
out
std
jle
imul
nop
pop
pop
jl
cmp
xchg
out
or
cld
xor
out
xor
mov
xor
jg
and
push
lods
mov
js
push
jo
stos
sub
mov
xchg
xor
js
cmc
rorb
xor
repnz
rorl
movl
xor
mov
cmp
roll
jl
cmpl
jmp
int3
sub
fstp
sahf
sti
cs
mov
and
imulb
rol
iret
sbb
cwtl
std
scas
push
sbb
cli
jns
inc
pop
ss
stos
sub
or
xchg
adc
in
add
lahf
insl
fdiv
addb
lcall
hlt
push
pop
dec
mov
jp
inc
add
rol
xchg
push
addr16
jp
cmp
cmp
jne
sub
scas
dec
add
iret
xor
inc
inc
cld
sub
aad
mov
sbb
dec
pop
push
jmp
and
push
sub
das
mov
imul
movb
xchg
dec
or
xchg
xlat
fs
add
or
icebp
add
lock
roll
notb
or
jns
or
enter
sbb
lods
stos
in
arpl
jno
pop
xor
inc
mov
adc
lret
icebp
xchg
mov
lcall
xchg
cmpsl
and
or
ret
xchg
daa
sbb
mov
outsl
mov
cmp
cmp
loop
call
scas
ret
xchg
out
outsb
jge
ljmp
pop
clc
mov
dec
repz
lret
psrlw
pop
cmp
lcall
push
mov
add
rcll
rorb
imul
sbb
xor
mov
enter
lock
inc
pushf
ror
clc
testl
add
in
repnz
ja
out
xchg
dec
cmp
xchg
dec
adc
aam
sbb
aaa
and
xor
mov
mov
pop
ror
daa
cmpsb
jecxz
leave
mulb
das
mov
fs
fwait
push
fadds
ja
icebp
in
xlat
pop
gs
dec
inc
mov
push
inc
sbb
out
cmp
jns
jae
dec
xor
sbb
jmp
outsb
lods
adc
inc
arpl
sbb
jmp
sahf
jmp
xchg
outsl
fisttpl
outsb
rolb
inc
sti
aad
jae
add
push
pop
add
xchg
dec
or
sbb
mov
push
sbb
sti
dec
and
dec
lret
test
inc
inc
jecxz
daa
lds
mov
sub
ror
jno
push
out
sbb
cmpsb
mov
dec
xchg
fdivs
mov
add
in
xor
sbbb
stc
sbb
and
sub
hlt
daa
jmp
jnp
pop
push
lea
and
sahf
outsb
mov
movsl
xchg
cs
push
cmp
repz
daa
arpl
das
pop
js
add
mov
xor
das
test
out
enter
sti
rol
xor
out
hlt
andl
sub
roll
jge
lods
xchg
test
outsb
data16
mov
pop
mov
lea
lret
or
inc
jge
push
inc
fucomi
movsb
adc
jmp
push
loop
les
hlt
into
lods
mov
push
push
jg
cmpsb
mov
into
jmp
sub
xor
xchg
jbe
sub
movsb
jl
dec
mov
or
ja
lock
dec
xchg
test
mov
jno
hlt
jnp
lods
sbb
cltd
dec
pop
inc
adc
and
outsb
insb
ficompl
gs
repnz
and
jmpw
jecxz
pop
aad
and
fcmovnu
mov
fbld
inc
ret
push
dec
les
out
jae
popa
ror
hlt
pop
cmp
sbbb
pop
orb
ds
or
add
xlat
outsb
push
lcall
ret
in
jge
subl
pop
scas
rclb
fcos
rol
ljmp
out
outsl
in
add
cltd
inc
gs
mov
fsubp
add
sub
push
ss
sahf
sahf
andb
xchg
ret
pop
or
stc
dec
fsub
movsl
xor
cmpb
sbb
lret
jnp
iretw
daa
daa
mov
lods
stos
mov
std
lahf
stos
dec
cmpsb
loopne
popf
aas
or
mov
push
adc
push
fmull
lea
addl
mov
aam
adc
fwait
andl
dec
mov
aad
mov
jg
dec
daa
loop
outsl
pop
ret
lock
in
push
ret
stos
fdivrl
and
ja
pop
ja
jb
jne
dec
cmp
pop
inc
in
cmp
inc
and
shlb
push
add
lret
mov
cmp
dec
cmpsb
xor
sub
cmc
out
xorl
in
and
loopne
cmp
pop
xchg
xchg
pop
out
pop
addl
inc
add
call
jns
or
add
cmp
sub
jno
out
sbb
js
packsswb
popa
inc
aaa
inc
xor
pop
mov
fldl
cwtl
or
jle
push
movsl
hlt
inc
repnz
pop
popf
cmc
ds
stc
int3
or
fsubl
mov
cmp
cmpsl
inc
aas
loopne
cmpsb
xor
and
out
push
daa
mov
es
mov
fiadds
jp
lods
loopne
pop
cltd
inc
pop
gs
lahf
outsb
aad
adc
lods
ret
stos
or
xchg
stos
xchg
inc
dec
mov
aad
mov
data16
lcall
adc
mov
cli
sub
lahf
in
js
push
leave
data16
jae
xchg
fcmovu
out
fdivrp
ret
mov
cltd
mov
pusha
leave
pusha
push
faddl
repnz
cmp
pop
lds
sbb
mov
or
push
dec
pop
dec
femms
icebp
movsb
js
mov
cmp
inc
xor
pop
cmp
add
pop
std
pop
rcll
loopne
icebp
data16
enter
call
and
or
push
mov
jp,pn
pop
sbb
mov
and
clc
imulb
sarl
jno
add
pop
jecxz
in
loopne
movsb
push
aas
repz
or
sbb
loop
je
test
sub
out
sbb
outsl
movsb
out
bound
fdivs
outsb
gs
cs
add
shrl
leave
cs
add
mov
mul
or
roll
add
rorb
scas
adc
mov
adc
sbb
mov
test
fabs
mov
int3
stos
mov
mov
fsts
aam
pop
pop
push
jno
sub
add
fidivrs
xor
ret
and
push
jmp
jno
cmp
sbb
jle
sbb
outsb
cmp
cli
test
adc
loop
and
subb
xchg
pusha
fists
pop
adc
sbb
pop
ret
enter
inc
ss
or
add
rcrl
dec
in
lods
mov
sarb
movsl
ss
add
fmull
add
pop
xchg
outsl
inc
in
jbe
fidivl
fnstenv
cmc
push
push
in
lcall
dec
jge
orl
pop
insb
xchg
ficomps
inc
repnz
neg
fsts
cmp
add
dec
sub
jno
add
lods
arpl
push
sub
rcr
xchg
dec
loopne
xchg
push
dec
mov
push
and
cmp
jmp
sahf
push
fisttps
lcall
dec
pop
cmp
cmc
xchg
add
or
jle,pn
cmc
dec
test
adc
loopne
xchg
mov
outsl
and
out
rorl
out
cld
jbe
pop
lds
imul
cmp
jle
mov
std
dec
push
fwait
mov
bound
insl
jo
aaa
adcl
pushf
sub
mulb
xchg
sub
insb
out
cmp
in
lock
mov
test
adc
inc
dec
sbb
jle
sub
add
ja
insl
loopne
cli
push
mov
int3
cmp
aas
lcall
fbstp
push
popf
and
rcr
mov
stc
cmp
sub
ja
jecxz
push
into
aad
out
lret
adc
int
dec
push
xchg
cmpl
test
lods
test
push
js
push
jbe
add
push
or
sbb
dec
clc
sub
int3
dec
rcrl
or
xchg
fstpl
mov
cwtl
lret
xchg
mov
ret
xchg
add
out
call
fldcw
inc
data16
add
mov
pop
scas
cli
iret
pop
sbb
mov
mov
push
push
orl
or
push
repnz
out
cli
bound
fisubs
icebp
pop
adc
in
cli
test
in
mov
lods
mov
fimull
mov
repz
sub
cwtl
sbb
dec
sbb
scas
gs
xchg
mov
pop
loop
inc
addr16
lods
xor
dec
test
xchg
insb
xor
push
cmp
pushl
adc
ficoml
cmp
jne
stos
xor
test
mov
or
jnp
clc
adc
xchg
sahf
mov
push
sub
sbb
mov
push
shll
mov
jnp
dec
icebp
sahf
xchg
imul
or
dec
dec
popl
xor
sahf
hlt
leave
inc
push
sarb
adc
pusha
dec
jecxz
or
xor
and
push
pusha
push
cmp
and
arpl
mov
lea
sbb
dec
xor
ret
pop
inc
fsubp
push
pop
out
xor
sub
dec
into
out
cli
pop
mov
pop
ret
jl
sbb
xor
sahf
out
nop
mov
xor
jecxz
aam
in
sub
pop
mov
mov
cmpsl
aad
dec
cs
inc
into
xor
push
sbb
jae
cli
popf
xor
call
xchg
subb
test
push
fwait
push
pop
fstpt
test
addr16
movsl
sub
dec
stc
push
mov
pop
sub
lret
inc
and
jmp
jp
addr16
mov
sbb
outsl
dec
ret
std
adc
xchg
lods
leave
mov
rcrl
mov
insl
lock
pusha
mov
shlb
pop
inc
fs
jge
inc
pop
jnp
push
arpl
xor
sub
xor
push
mov
dec
das
xor
in
test
cwtl
mov
test
jne
adc
dec
outsb
and
pop
rcrl
or
pop
push
jbe
mov
test
outsb
fwait
in
push
lahf
orb
jle
push
add
mov
out
repnz
mov
push
dec
fcmovnb
scas
cmp
pop
out
adc
adc
xor
mov
cltd
mov
jg
dec
jns
pusha
stc
cld
daa
in
xor
jecxz
push
ss
test
and
add
jne
loop
gs
sahf
stc
xchg
test
gs
add
je
jge
mov
add
shrb
testl
mov
addb
in
or
dec
jp
outsl
in
pop
and
cmp
mov
pop
insl
lods
push
movsb
scas
adc
dec
mov
jo
cli
push
imul
sub
mov
and
mov
push
out
pop
aad
jle
insb
mov
je
push
dec
add
lds
adc
aam
jmp
in
jp
sub
stos
jns
push
insb
out
jmp
push
or
out
lcall
cwtl
mov
push
mov
repnz
pop
push
sbbl
les
mov
push
jb
enter
shll
dec
xor
inc
sub
out
sub
lcall
lret
and
sti
je
mov
mov
test
xchg
out
push
outsl
mov
in
ror
ljmp
inc
ds
jl
and
and
stos
inc
xchg
jg
cmp
push
fcmovu
sti
mov
imul
imul
popf
and
mov
sub
sti
jmp
add
arpl
pop
or
mov
push
add
fs
mov
daa
xchg
jp
cmp
lock
nop
xchg
mov
xchg
out
addb
or
push
sbb
shll
add
or
mov
lret
pop
dec
add
xor
mov
dec
push
shrb
and
sbb
sub
jp
sub
cmp
idivb
xchg
pop
icebp
fcmovnb
dec
cwtl
lock
dec
inc
popa
push
push
xor
pop
sub
hlt
mov
push
dec
xchg
and
sti
cltd
xor
test
sbb
aad
loopne
lahf
sub
shll
stc
and
push
rcrl
cmc
pop
add
fsubr
in
or
test
pop
pop
add
decb
fisubrl
dec
rcl
cmp
and
dec
mov
inc
sub
pop
fdivl
popa
xor
and
mov
mov
stc
xchg
addr16
loopne
dec
ret
pusha
ja
mov
jp,pt
stos
shlb
insl
les
pop
cmpl
cmp
mov
add
add
cmpsl
push
jno
outsb
cli
inc
or
jb
cmp
rorb
imul
pushf
imul
repnz
fwait
sbb
jae
dec
pop
fildl
cltd
or
mov
ret
js
cmpsb
jmp
mov
fsubr
sub
or
jo
sbb
cmp
mov
outsb
cmp
mov
test
inc
ja
inc
cmc
call
inc
fdivrp
or
fs
pop
xchg
mov
sarl
loopne
outsl
push
faddl
insl
inc
xchg
jp
push
cmp
sahf
fnsave
fcompl
ljmp
pop
addr16
fdivrl
outsb
loope
dec
dec
clc
aam
cwtl
inc
inc
nop
mov
test
int3
sub
xchg
inc
out
test
push
mov
lods
or
cmp
jne
repnz
adc
pop
jbe
jmp
bound
adc
outsl
sahf
es
int3
out
mov
jecxz
es
mov
inc
aas
dec
mov
pop
dec
call
fisttpl
fsubl
addr16
mov
fwait
scas
push
lods
and
sbbb
and
cmpsl
xor
fcomp
sub
and
and
pop
adc
push
push
arpl
rcrl
jo
dec
ljmpw
stc
xchg
jmp
push
sarb
push
out
rcl
in
loopne
sub
push
xchg
xchg
add
jb
adc
jp
sbb
sbb
jl
fwait
jp
sbb
fcom
xchg
xchg
or
inc
mov
in
out
add
das
pop
adc
out
fsts
loopne
fwait
and
xabort
lds
sbb
cmp
leave
stc
pop
xlat
std
mov
push
in
dec
js
and
rclb
sti
mov
rcll
std
loopne
fprem1
dec
push
outsl
test
cmc
test
adc
jbe
bound
and
cmp
es
pushf
cmp
sbb
mov
xchg
stc
lods
fisttps
cld
and
cmpsb
test
sub
adc
push
sub
scas
push
or
into
ficoml
movsl
jp
or
cltd
out
and
bound
mov
xchg
pop
xchg
or
xor
inc
insb
mov
mov
sub
lret
test
cmp
add
insb
mov
mov
mov
pusha
sub
lahf
dec
aam
pop
push
arpl
pop
jb
lcall
xchg
mov
sub
cmpsb
sub
repz
cmp
test
sbb
lods
aaa
pop
add
out
in
xchg
push
out
sbb
mov
inc
add
nop
adc
sahf
mov
adc
lea
sti
jp
cmp
in
nop
add
or
inc
cmc
cmp
sbb
stc
sub
mov
cmpsb
xchg
ds
je
add
adcb
shll
inc
movsl
sahf
and
add
add
lods
cs
inc
fldcw
int3
cmp
js
adc
mov
in
pop
int3
pop
push
push
daa
test
lock
adc
cmp
jno
hlt
cmp
arpl
dec
aam
push
rclb
fdivrs
mov
cmp
iret
mov
negl
loope
je
leave
lahf
xlat
rcrb
pop
dec
xchg
bound
push
stos
iret
sub
aas
and
scas
and
jne
idivb
pop
jae
clc
sbb
in
jecxz
jne
repz
mov
aas
sub
aad
push
pushf
popf
push
inc
xor
push
jno
orl
cli
add
push
adc
push
out
fs
mov
push
xchg
add
sbb
inc
dec
jne
sub
jmp
lea
mov
loope
add
mov
push
push
jmp
pop
add
jno
sub
cmpsb
aas
pop
add
xchg
push
icebp
or
cmc
inc
lret
cmpsb
inc
out
jge
mov
enter
adc
repnz
mov
arpl
js
out
pop
jp
inc
cld
lods
aaa
mov
iret
and
inc
stc
pop
sub
push
adc
js
mov
cmp
inc
es
push
or
lahf
jg
xchg
sbb
jae
jmp
pop
sub
test
xor
shrb
imul
loop
sahf
in
fnsave
shl
pop
mov
std
lret
mov
lock
aas
mov
mov
xchg
scas
imul
iret
cmp
test
loopne
nop
inc
inc
lods
mov
arpl
and
add
lea
jmp
dec
push
ljmp
mov
cs
hlt
fsubs
ret
mov
lahf
xchg
add
lret
pop
xchg
shlb
cli
push
inc
push
and
rolb
lret
cs
leave
out
jmp
add
mov
iret
ss
push
inc
dec
mov
jg
and
cmovne
fwait
mov
push
lret
and
push
add
xchg
shr
jmp
sbb
in
cli
mov
cmpsl
mov
xor
jns
mov
cwtl
shrb
adc
aam
cmp
adc
cmp
mov
dec
sbb
push
movsb
insl
sub
cmpsb
call
add
jl
out
aaa
xchg
mov
fldenv
mov
lahf
mov
ret
out
lret
push
jge
xchg
or
push
mov
popa
stos
and
stos
or
sub
lret
and
arpl
cld
fldl
push
pop
add
lea
mov
mov
push
pop
dec
mov
and
fiaddl
adc
xlat
out
lea
inc
cmp
and
jle
mov
roll
aam
sti
cmpsl
adc
xchg
xchg
enter
pop
pop
stos
dec
js
adc
ljmp
aas
pop
mov
and
xchg
icebp
mov
jno
add
dec
fnsetpm(287
push
rclb
fcoms
mov
lahf
aas
fwait
push
imul
xor
aaa
pushf
push
pop
shll
mov
scas
rcrb
inc
addr16
je
adc
aaa
pop
ss
dec
aas
pusha
jmp
ret
cli
in
and
mov
enter
inc
mov
jns
notb
adc
cmp
sti
popa
pop
aas
insl
cmp
sbb
add
imul
scas
je
outsb
rcr
xor
cmp
ds
arpl
xlat
cmc
xchg
into
add
test
xor
pcmpgtd
inc
push
and
outsl
adc
jbe
mov
mov
jl
and
sub
mov
pop
jb
dec
and
push
cld
add
ss
movl
test
or
inc
nop
jmp
in
push
int
sti
xor
mov
mov
or
add
addr16
mov
sbb
mov
scas
adc
pop
pop
push
sub
cli
or
cwtl
sbb
pop
sbb
mov
inc
nop
push
sar
nop
adc
xchg
repnz
inc
jnp
in
mov
ret
mov
cld
dec
ss
iret
mov
pop
xchg
outsb
bound
in
out
ds
jge
pop
xor
out
sub
dec
mov
call
test
jge
mov
lds
scas
add
jmp
cmc
pop
je
adc
dec
clc
xchg
pop
push
xor
test
xorl
sub
push
xor
mov
mov
insb
inc
inc
inc
outsl
push
in
inc
lock
add
notb
cli
jae
mov
xlat
pusha
mov
test
sti
call
rclb
test
es
cld
mov
inc
and
inc
scas
mov
mov
xor
mov
cmp
loop
les
push
adc
inc
add
mov
add
hlt
addb
push
subl
xchg
pop
cmp
pop
popa
push
aas
inc
jp
add
mov
imul
rorl
dec
int
lcall
outsb
les
lcall
movsl
mov
mov
xor
movsb
scas
scas
jb
aam
std
bound
xor
aam
add
dec
mov
stc
in
pop
je
dec
jno
hlt
xor
push
ds
and
lock
stos
inc
mov
adcb
aas
aad
popa
xchg
xchg
lea
test
jns
lock
shl
into
xchg
test
push
ficompl
xorb
aad
stos
pusha
mov
adc
sub
mov
sti
push
pusha
and
out
fldcw
fs
pop
push
adc
or
lahf
popa
nop
sub
mov
or
rol
sub
inc
sub
mov
aad
sub
sbb
inc
loop
lahf
pop
lock
ja
icebp
mov
pop
pushf
addr16
jb
push
imul
xchg
and
sbb
std
mov
cmc
ret
pop
pop
push
out
scas
jb
mov
test
test
cmpsb
add
inc
and
loop
sti
push
sbb
rcll
in
test
enter
add
movsl
dec
aam
cmp
call
inc
ds
push
inc
test
adcb
pop
mov
inc
or
jnp
pop
sarb
mov
ret
adc
jo
jl
cmpsb
lret
push
fs
push
out
jb
jp
mov
ret
pop
pop
jecxz
jns
xor
and
cmp
mov
ret
sahf
dec
daa
lret
pop
or
push
pop
jle
mov
push
das
sub
jne
push
push
sub
or
jbe
mov
mov
jnp
push
cwtl
adc
scas
repnz
ret
movsl
or
adc
jbe
push
push
fs
mov
cmp
iret
shll
sbb
and
pusha
pushf
jnp
mov
gs
pop
shl
xchg
and
jp
ss
sbb
push
aam
sbb
jne
jge
loope
sbb
mov
push
inc
inc
in
pop
cltd
push
push
out
pop
imul
xor
stos
adc
mov
jecxz
inc
scas
xor
imul
pop
inc
push
mov
cmp
jo
imul
pop
aad
lods
push
push
mov
and
aas
cmp
xchg
mov
inc
mov
pop
test
fmuls
cmpsl
adc
cli
push
repz
pop
repnz
inc
stc
fidivrs
icebp
or
mov
cmp
cmp
cmp
in
out
mov
test
mulb
popf
pop
subb
or
xchg
push
xchg
dec
out
cmp
cmp
stos
out
outsl
mov
xor
das
movsb
sub
or
xchg
mov
daa
popf
sub
jl
add
add
ret
outsl
cmp
pop
movsb
cltd
cld
imul
or
or
dec
sub
call
daa
inc
adc
sub
lods
mov
leave
push
pop
pop
mov
scas
mov
addb
or
aam
in
mov
cmp
pop
xchg
mov
lock
aad
iret
inc
jbe
xchg
mov
in
ljmp
push
and
cmpsb
popa
pop
or
sub
lods
lods
mov
mov
xchg
mov
ret
and
pop
or
xchg
das
ror
lret
arpl
pop
mov
mov
cwtl
arpl
adc
dec
xor
mov
mov
push
mov
push
aas
cmpsb
adc
cmp
fstl
xor
xchg
mov
popa
add
int3
shlb
lret
cmp
ss
dec
fmull
stos
repnz
ret
adc
mov
repz
ret
push
das
insb
push
mov
movsl
add
or
cli
sarb
fwait
cmp
fcomps
ljmp
cltd
js
jp
push
sbb
mov
fs
push
mov
or
mov
testb
sarl
pop
cltd
fs
fmulp
shrb
dec
aaa
fcomps
subl
daa
adc
xchg
mov
pop
mov
mov
idivb
pop
inc
and
outsb
mov
test
ja
sbb
pusha
popf
mov
push
outsb
enter
fsub
mov
jle
cmp
push
inc
mov
sub
inc
in
mov
adc
dec
inc
stos
shrl
repnz
cmp
lea
in
add
lret
ret
sti
dec
xchg
xchg
arpl
clc
inc
dec
mov
dec
test
fucomp
jl
push
adc
popf
inc
lea
icebp
push
test
add
nop
and
dec
pop
fbstp
lds
shlb
lock
ds
jb
int3
shll
cmpsb
aas
in
add
dec
mov
or
inc
in
mov
pop
mov
cmp
sbb
fcomi
aas
cli
sbb
jnp
dec
pop
push
add
pop
cmp
in
xor
js
sbb
rcll
add
movsl
add
addb
inc
mov
popa
mov
cmp
inc
shl
subl
cmp
xor
jmp
sbb
adc
loope
mov
cmp
loopne
cmp
movl
inc
ret
add
lods
adc
and
out
push
in
xlat
mov
decl
pop
jnp
mov
and
orb
cmpsb
pusha
in
pop
pop
jmp
add
fsubp
das
cmp
mov
sub
movsl
mov
clc
or
jp
xor
mov
pop
int3
cmc
pop
dec
cwtl
call
loopne
lahf
xchg
inc
jns
dec
jecxz
adcl
jg
sbb
and
mov
nop
cld
xorb
xchg
jp
jl
mov
data16
add
leave
xlat
lcall
sub
rclb
lcall
loopne
dec
cmp
scas
cmp
stc
or
inc
ss
ljmp
push
push
lods
or
lods
xlat
lret
push
int
pop
gs
sahf
jno
shll
jle
adcl
jb
mov
cmpl
ret
add
fcmovnb
mov
add
sub
outsb
outsl
popfw
jg
hlt
jle
stc
push
mov
cmpsb
sbb
mov
sub
sbb
int
repz
xchg
add
pop
fwait
shll
mov
ja
icebp
sbb
ret
dec
push
xchg
push
push
jbe
mov
lret
xchg
mov
cmp
pop
xchg
or
popf
ds
add
fld
call
fdivs
ret
ljmp
sub
push
in
fnsave
lahf
add
bound
mov
push
out
push
nop
es
add
repnz
xchg
cmp
add
ljmp
ja
lret
mov
mov
jo
jne
sub
popa
jge
into
rorb
cmp
stos
rorb
stos
cmp
ja
mov
mov
loop
iret
shrb
fisttps
mov
mov
stc
pop
sbb
call
jecxz
lcall
cs
push
push
daa
shll
in
xchg
repnz
ficoml
popa
inc
inc
sub
outsl
dec
je
sbb
cmp
js
loope
aas
push
jl
mov
pop
mov
icebp
sub
xor
mov
jle
xchg
test
inc
gs
das
enter
jae
push
cmp
xchg
fcompl
test
mov
in
sbb
mul
adc
addr16
sub
and
xchg
sbb
adc
mov
jo
inc
mov
jl
out
push
std
inc
movsl
cmovg
push
mov
mov
repz
sub
or
pop
jp
js
dec
jl
jo
and
fimull
pushf
loope
pusha
adc
aad
xlat
mov
lock
lahf
movsb
inc
loop
add
mov
test
cmpsb
lret
cmpsl
outsb
iret
enter
cmp
bound
mov
daa
mov
push
andl
push
lods
pop
push
sbb
cmc
popl
jg
mov
jae
inc
mov
movsl
rorl
jg
gs
loopne
push
notl
ficoms
cmpsb
pop
pop
or
xchg
out
in
add
in
mov
gs
dec
scas
mov
pop
cs
add
mov
sub
ljmp
test
gs
outsl
adc
lret
notb
ret
call
pop
xor
ljmp
sbb
fcomip
stos
cmp
mov
mov
sub
sub
dec
jge
add
aam
je
cmpsl
jae
clc
das
and
jo
aas
pop
outsl
ret
cmp
cmp
pop
push
sub
push
jae
aas
movsl
cld
inc
push
cmp
dec
pop
adc
fstpl
cmp
out
repnz
mov
lahf
lock
jg
aas
loopne
leave
loopne
sub
mov
lods
test
movsl
inc
adc
pop
cmpsl
das
insl
cmp
xchg
sub
sahf
scas
mov
jp
and
test
lods
mov
lods
jae
push
test
int3
subb
std
push
jno
jne
sub
lods
cmpsb
test
fdivr
dec
jbe
in
mov
test
cmovo
stos
arpl
adc
and
push
add
dec
jecxz
scas
inc
in
mov
int3
cmp
repz
xor
cmp
cmp
ja
aad
lods
mov
test
mov
or
movl
sub
pop
bound
cmpl
push
jb
jno
cltd
iret
rcll
stc
addb
das
push
pop
imul
dec
test
jo
sub
inc
adc
cmp
xor
mov
lahf
ljmp
aaa
jbe
mov
sbbb
sahf
call
jl
push
mov
enter
ficoml
int3
sbb
push
movsb
bound
xchg
ja,pt
sub
fnstcw
adc
jle
sbb
pop
repz
iret
inc
scas
inc
es
inc
loope
mov
rcrl
adc
pop
mov
xor
push
ret
or
movsl
xchg
push
mov
fbld
xor
or
ljmp
add
imul
stc
int
inc
pushf
lret
lret
rcr
imul
icebp
arpl
test
dec
inc
push
aaa
xchg
add
ss
inc
push
movsl
int
mov
stos
dec
movsl
lret
outsb
mov
push
int3
out
xchg
lock
test
push
lahf
lcall
inc
stos
ret
inc
lahf
hlt
leave
imul
xor
sar
rclb
retw
xor
mov
hlt
push
adc
mov
mov
ja
sbb
sbb
les
test
cwtl
mov
add
outsb
add
mov
dec
inc
mov
lods
lock
push
imulb
shlb
cltd
mov
stos
imul
sarb
mov
in
mov
int3
loop,pn
mov
sub
stos
sub
jge
mov
loopne
mov
pop
cmp
aas
mov
mov
nop
jb
sbb
push
imul
xchg
aaa
xchg
mov
push
cmp
loop
xorb
pop
adc
lds
mov
inc
jnp
dec
aaa
cmpsb
mov
sbb
rorb
cltd
cmc
pusha
adc
and
adc
jge
or
add
push
jmp
sti
outsb
mov
jmp
ret
shld
fimull
pop
mov
pusha
pop
sbb
xor
aas
adc
repnz
movsb
and
jo
out
sub
sbb
subl
inc
jne
adc
insl
rcll
sbb
inc
aad
popa
pop
and
ss
sub
aaa
push
stos
test
mov
scas
inc
dec
jle
outsl
popf
mov
cmc
mov
adc
movsb
andb
inc
and
xchg
push
xchg
mov
nop
add
out
mov
lods
ds
sahf
lea
ret
aad
gs
jmp
push
out
jb
mov
xor
lahf
pop
adc
jbe
in
jecxz
jecxz
adc
jge
out
aaa
xchg
into
in
mov
mov
cmpsl
lret
cltd
or
inc
inc
leave
mov
in
mov
nop
sub
xor
sub
or
push
das
sub
movsl
and
xor
pushf
mov
mov
jl
into
mov
lret
push
mov
inc
les
pusha
mov
leave
int3
jno
js
cwtl
test
mov
mov
lock
cltd
icebp
mov
cmc
testb
inc
add
cmpsb
sub
cs
loop
test
xchg
outsl
xchg
and
loope
jb
mov
push
and
jb
adc
adcb
jmp
shlb
sub
divl
cwtl
pushf
ror
repz
push
popf
in
or
pop
gs
popa
jl
fnstcw
pusha
imul
mov
es
stc
sub
and
sub
and
int3
push
add
mov
imul
movsb
lret
inc
in
cmp
cld
jbe
pop
mov
pop
test
mov
inc
cmp
insl
rcl
jge
jbe
cmp
inc
loop,pn
mov
sbb
push
sbb
rcl
push
mov
dec
out
mov
cwtl
ds
lods
inc
xchg
ja
loopne
and
ja
fstpt
xor
aam
sbb
inc
ljmp
call
xchg
outsl
leave
repnz
fistps
add
xchg
mov
xchg
or
leave
mov
fists
mov
add
cli
ret
inc
lods
repz
fwait
dec
imul
jno
xor
movsb
imul
lods
mov
pextrw
mov
out
fsubs
push
out
lcall
and
das
jg
mov
in
popa
jnp
imul
repnz
fwait
orl
mov
icebp
push
pop
push
std
adc
lret
mov
xor
add
cli
sbb
js
ret
sub
or
and
cmp
add
fisubs
mov
mov
sub
ds
sub
dec
nop
xor
push
out
mov
negb
mov
fcoms
fdivl
ret
mov
jnp
and
mov
dec
jmp
sahf
mov
or
cmp
js
in
ret
popf
sbb
test
fstps
std
cmc
aas
nop
mov
pop
jmp
jle
in
je
adc
pushf
push
ljmp
inc
adc
xor
and
cmp
and
inc
push
pop
add
lock
sub
pop
mov
dec
imul
cwtl
mov
pop
inc
arpl
mov
or
int3
pop
fcomp
je
scas
xchg
pop
xchg
movsb
cmp
sti
adc
dec
daa
fisttps
jl
fsubrl
cmc
stos
cld
cmp
or
xor
lret
adc
idiv
movsb
ja
aaa
mov
sub
jne
subl
mov
fcoms
lods
loopne
mov
shll
pop
insl
mov
mov
push
cltd
addr16
sub
scas
rol
adc
add
xchg
cmp
dec
mov
loope
mov
mov
mov
mov
jno
jae
mov
iret
out
lods
aad
clc
into
and
push
pop
mov
mov
in
mov
or
inc
push
ret
ljmp
lock
mov
jbe
pop
cmp
popf
inc
mov
push
andl
sbb
call
xor
xor
push
in
mov
adc
in
fiadds
int3
jl
pop
repnz
mov
dec
add
bound
push
out
pop
mov
scas
push
mov
cmp
sub
xchg
xchg
aaa
sbb
mov
aam
fldt
push
xor
mov
stos
xor
mov
jecxz
cmp
scas
jle
neg
insb
fisubl
jns
enter
adc
lret
lea
cmp
movsl
test
cmp
incb
sub
hlt
repz
xchg
out
ret
movsb
stc
sahf
arpl
mov
je
mov
push
jp
scas
mov
pop
mov
ljmp
out
adc
int3
mov
push
sbb
cmp
stos
jecxz
and
adc
mov
mov
int
xchg
and
enter
mov
pop
ljmp
std
stc
fldcw
pusha
ljmp
fwait
cli
mov
scas
call
xchg
push
dec
ficomps
movlps
div
addl
sahf
mov
and
lods
lahf
jmp
test
divl
and
sub
jp
aad
dec
and
js
cmp
push
lcall
inc
fldl
mov
movsl
mov
xchg
push
out
sahf
add
stos
int
cltd
xor
lret
in
and
pop
dec
pop
pop
repnz
add
or
loope
int
enter
push
xchg
filds
xor
ret
test
mov
aas
inc
dec
fcoms
dec
or
in
mov
mov
ds
or
mov
into
push
xchg
test
cld
iret
and
xlat
repz
cmp
sub
xor
and
mov
mull
dec
inc
add
sub
jb
stos
push
mov
rolb
push
xor
dec
sti
xchg
sbb
mov
xor
sub
push
or
or
test
add
sti
xchg
orl
dec
jcxz
int3
sbb
fldenv
loope
mov
push
pop
movsl
pusha
int
xchg
xchg
rorl
adc
sub
cwtl
cmp
mov
stc
testl
ljmp
nop
pop
in
xor
or
lods
pmovmskb
scas
fcomip
sbb
mov
cmp
sbb
aas
stc
incl
gs
dec
add
inc
movsl
je
push
aad
xchg
mov
dec
sbb
dec
sub
push
inc
adc
lret
movsb
lods
inc
pop
inc
push
jge
add
idivl
mov
cli
call
stos
sarb
add
mov
jl
inc
sbb
jns
popf
dec
dec
das
mov
fnsave
sbb
cmc
jbe
out
xor
call
fucom
ja
mov
xor
push
push
pop
sbbb
mov
sub
mov
jns
addr16
inc
out
xor
out
cmp
cli
pop
aas
out
adc
scas
add
into
jns
adc
pop
mov
sti
shlb
aas
les
sbb
shll
cwtl
testl
jmp
push
dec
insl
fisubrs
frstor
sbb
mov
sahf
popf
scas
inc
push
add
cmp
mov
mov
pop
mov
cmpsb
mulb
std
pop
or
shll
lret
mov
outsl
pop
pop
jge
les
decb
jle
enter
jbe
jmp
xchg
decl
mov
rclb
rcll
mov
pop
test
sbb
jl
dec
std
mov
loope
cmpsb
imul
jle
testb
sub
xchg
or
dec
inc
or
data16
test
pop
add
in
push
les
lahf
mov
cld
cltd
or
bound
cmp
in
push
ljmp
mov
jne
adcb
adc
daa
lds
sub
push
adc
sbb
push
test
fstpl
and
cmc
lret
jmp
adc
aas
cwtl
sti
push
adc
movsb
lods
popf
add
addr16
shlb
and
gs
adc
jb
cwtl
das
push
mov
xchg
mov
xlat
pop
dec
sbb
mov
nop
cmp
aas
or
pop
test
inc
lea
in
pushf
xchg
push
push
orb
pop
push
push
fldenv
notl
shl
mov
or
gs
incb
dec
je
mov
sub
mov
enter
and
loope
xor
inc
fdivl
cmp
filds
scas
or
nop
mov
fdivr
xor
jle
ja
cmp
or
sbb
stc
mov
sbbl
ffree
adc
cmpsb
add
out
test
sti
roll
icebp
in
pop
jae
sub
ret
das
fs
leave
test
out
jae
jno
mov
lock
cld
pop
ret
fwait
xor
test
das
movsl
out
loopne
into
ljmp
jcxz
mov
or
push
loope
out
jge
aaa
pop
negb
es
inc
dec
scas
cwtd
add
xchg
pop
lods
xchg
or
xor
test
mov
in
out
xor
orb
loopne
pop
popa
xor
mov
push
dec
adc
ljmp
dec
movsb
hlt
adc
cltd
xor
adc
insb
shlb
push
stc
inc
mov
pop
mov
and
push
and
cltd
mov
ret
xchg
jecxz
xchg
mov
pop
push
gs
test
sbb
aad
in
add
xor
outsl
mov
add
sub
dec
insb
xchg
lods
mov
xlat
mov
jecxz
xlat
repnz
iret
test
sbb
divb
insb
mov
push
movlps
gs
jb
cwtl
cmpsl
push
mov
xchg
push
mov
int
addr16
push
sbb
jecxz
sbb
test
jno
push
xchg
xchg
clc
leave
pop
rolb
mov
in
insb
stc
dec
ja
sub
and
cwtl
push
mov
pop
jno
cs
sub
add
adc
mov
lahf
loopne
mov
ljmp
push
fwait
iret
cmpsl
cmpb
lret
jnp
cwtl
dec
xchg
call
sub
dec
daa
sbb
in
xor
cli
cmp
add
pop
add
sub
xchg
test
sub
out
and
bound
and
enter
inc
sbb
hlt
scas
loop
jmp
iret
mov
sti
sub
mov
popa
lret
xor
lcall
pop
scas
andb
dec
imul
or
test
cs
scas
jae
out
push
cmp
shrb
popa
mov
cmc
mov
fdivrl
pop
out
jp
loope
or
mov
enter
movsb
lods
imul
andl
insb
add
inc
jns
jmp
mov
and
out
xchg
popa
dec
push
jle
add
xchg
cmp
out
loop
in
mov
xchg
sub
mov
add
filds
jecxz
dec
inc
scas
xchg
popl
aas
add
push
lret
aad
lret
pop
xor
or
sahf
jl
nop
stos
fstp
rcll
stc
push
mov
cmc
fcoml
clc
dec
adc
movsb
mov
or
push
dec
adcl
dec
push
or
inc
jge
rorl
pop
push
shr
addr16
dec
dec
into
mov
ja
dec
or
cmpsb
out
int3
sbb
rorb
loopne
xor
mov
enter
push
cmpsl
xor
in
push
adc
sbb
sbb
bound
push
jbe
lea
cltd
pop
popa
xchg
add
xchg
mov
push
ljmp
das
in
mov
push
loop
add
ficompl
pop
jns
popa
test
mov
or
pop
rclb
test
sub
pushf
int3
scas
daa
pop
das
lock
inc
lcall
and
push
cmpsb
imul
jl
jae
retw
repz
arpl
jecxz
mov
sbb
dec
inc
int
aam
mov
stos
adc
jmp
mov
cmp
jl
jns
test
outsb
add
rclb
push
add
stos
and
push
ja
pop
popf
sbb
push
mov
mov
aad
icebp
xor
fsubs
cmp
std
testl
cld
pop
jo
jbe
inc
push
sar
cmp
add
jmp
and
fstps
add
es
outsl
cmp
push
shrb
aam
inc
mov
push
lock
or
push
add
mov
mov
test
pop
shll
out
js
fcompl
fdivrl
push
out
cmp
jmp
xchg
xor
mov
cmpsb
jmp
fldenv
adc
or
sub
hlt
inc
mov
pop
adc
or
test
sub
mov
sub
inc
pop
std
mov
xor
xchg
aas
iret
aaa
cmpsb
dec
xchg
cmpsl
shll
shrl
mov
mov
icebp
xor
mov
fs
jnp
adc
out
or
jl
cwtl
push
addl
das
push
test
ret
cmpsb
mov
push
rcll
ret
enter
dec
jnp
jo
mov
mov
clc
pusha
dec
stos
cmc
stc
xor
lcall
ret
sub
mov
fwait
mov
adc
arpl
mov
cmp
test
sub
sti
addl
push
sahf
repnz
je
mov
xchg
pop
sub
mov
mov
push
bound
dec
dec
and
inc
xor
xor
lods
jp
push
mov
jae
addr16
sbb
pop
jmp
push
test
addb
leave
push
dec
sub
jne
ja
push
xor
pusha
in
xlat
lret
jecxz
in
addr16
cmpsb
sub
in
mov
scas
scas
mov
or
movsb
or
or
in
mov
mov
dec
mov
scas
inc
mov
lret
push
mov
and
or
js
sahf
mov
push
inc
xlat
mov
lock
mov
cld
pop
subl
add
add
rcrb
in
lods
jmp
movsb
les
push
addr16
lcall
data16
loopne
jno
in
ds
xor
popa
in
out
jl
push
cmp
sub
notl
dec
nop
jge
mov
jb
and
and
dec
mov
testb
dec
mov
shl
shll
bound
pop
mov
jno
lock
pushf
pop
or
lods
rcl
xchg
mov
jns
jne
cmp
mov
sahf
mov
push
rcrb
cmp
int3
mov
scas
lods
leave
mov
sub
pop
xchg
stc
and
out
div
mov
subb
into
jae
aas
add
aad
add
popf
jp
add
xchg
fwait
jg
jns
pushf
out
lahf
mov
cli
les
ja
adc
ss
aad
loop
xchg
or
xchg
cli
mov
add
loope
push
mov
lds
ret
hlt
xchg
push
cwtl
sub
or
dec
and
mov
or
hlt
outsb
sbb
ret
stos
rorl
push
and
lahf
das
pop
pop
sbb
mov
pop
test
rolb
sub
insl
mov
fimuls
mov
out
shrb
in
dec
mov
and
mov
fs
cli
js
scas
test
sahf
and
push
and
or
and
sub
or
dec
cwtl
dec
out
and
cmp
mov
xor
mov
icebp
cmp
scas
dec
out
pop
movsl
jns
inc
mov
aaa
dec
push
sub
or
xchg
or
inc
lcall
sbb
int
repnz
mov
mov
fstps
mov
in
xchg
mov
arpl
push
sbb
cmc
push
pop
ret
scas
xor
clc
dec
test
sub
popa
cld
add
or
sti
pop
cmc
mov
clc
pop
pop
add
icebp
mov
mov
push
ja
xor
les
cwtl
dec
sub
cmp
xchg
push
xchg
and
test
movl
loope
xor
push
dec
inc
js
popa
mov
pop
inc
aas
mov
in
xor
push
or
adc
loop
push
mov
int
leave
gs
lea
or
add
and
leave
pop
dec
fwait
in
stos
xchg
xchg
test
fstps
jp
jno
xor
sub
sub
jg
lahf
inc
into
fdivp
daa
insl
xchg
mov
push
stos
in
stc
repz
imul
mov
sahf
push
xchg
xchg
jge
jne
lock
mov
jg
xor
add
cmp
xchg
or
int
jecxz
sbb
pop
or
js
movsl
int
push
popa
repz
rdtsc
pop
aaa
rorl
cld
ja
repz
aaa
dec
cs
xchg
add
mov
pop
pop
in
push
repz
sarl
inc
stc
mov
je
mov
in
movsb
stos
lods
sub
pop
mov
mov
pusha
icebp
popf
fbld
leave
int
popa
data16
std
mov
call
mov
rcrl
push
sub
dec
shll
push
ss
adc
leave
mov
jno
lods
std
insb
lahf
inc
or
sahf
fidivrs
adc
or
and
stos
fisttpll
add
in
adc
push
mul
mov
inc
and
cmp
mov
adc
lods
subb
fistps
fdivr
pop
mov
loopne
in
testl
mov
xor
xlat
push
push
pop
push
in
mov
push
cli
aam
pop
mov
mov
add
sti
mov
or
dec
cmp
ja
adc
and
outsb
pop
pop
inc
orb
inc
outsb
das
or
xor
xor
ds
dec
sub
mov
sbb
mov
push
imul
mov
mov
pop
ret
mov
push
mov
in
inc
jae
mov
ret
jmp
add
jo
cli
das
push
cmpsb
jp
repnz
subb
shrl
dec
mov
daa
or
add
cmp
push
jge
call
xchg
or
mov
push
sub
or
lods
dec
pop
popa
pop
pop
xchg
lods
jae
scas
shll
jbe
clc
mov
call
sub
mov
lods
inc
loope
movsb
andl
shll
icebp
mov
cwtl
inc
and
pop
cmp
movsl
scas
or
es
call
dec
add
cmp
roll
repz
bswap
xor
shrl
add
cmp
lret
fwait
cs
dec
mov
in
cld
push
add
lock
mov
sbb
adc
mov
je
orb
scas
scas
jnp
leave
push
mov
add
push
pop
orb
xchg
cmp
add
lea
cmpsl
pushf
mov
add
movsb
xchg
mov
pop
dec
rorb
jmp
jb
push
lea
sahf
fsubrs
pop
mov
sub
add
fwait
dec
push
nop
sbb
dec
shl
lock
dec
enter
sbb
gs
dec
je
mov
ret
rcrl
test
inc
push
addl
shll
movsb
movsl
mov
or
movsb
xchg
sub
xor
leave
add
loope
shll
mov
clc
out
push
out
popa
sbb
cltd
sbb
add
jbe
mov
mov
lret
loope
hlt
inc
xchg
lods
les
pop
lock
push
sub
bound
pop
xor
das
shrb
mov
push
add
cmp
add
adc
cmp
outsb
push
insl
sub
jnp
outsl
pop
push
xchg
push
daa
pop
dec
lods
sbb
mov
pop
jae
es
push
lock
mov
clc
icebp
dec
popa
sbb
lds
push
cmp
and
push
movsb
sub
pop
in
push
pop
push
adc
std
out
adc
push
add
scas
adc
out
mov
insl
or
mov
add
mov
push
mov
and
mov
lds
and
enter
mov
xchg
add
xchg
cmpb
in
and
ja
add
fisubs
sub
lods
push
jo
cmpsb
arpl
outsb
adc
dec
dec
dec
sbb
jl
dec
inc
fstpl
fdivrl
sbb
or
shrb
adc
jmp
into
inc
inc
cmp
jmp
mov
in
mov
dec
cmp
psllq
mov
and
out
cmp
jae
lods
push
mov
out
or
or
daa
lahf
xlat
lcall
ja
loopne
inc
mov
jo
fistpl
xchg
and
mov
fbld
insl
lahf
loop
mov
adc
iret
popa
push
dec
jno
or
and
imul
test
rorb
pop
scas
jmp
cmpsb
push
inc
arpl
sub
jp
jne
or
dec
xlat
add
inc
mov
push
iret
rcr
pmaddwd
sbb
cmp
in
scas
into
mov
mov
xor
or
mov
or
adc
and
adc
enter
stos
cmp
outsl
mov
jne
and
adc
mov
loope
inc
mov
fs
push
leave
mov
and
lods
bnd
leave
fdivrs
popa
xchg
dec
xor
sbbl
mov
pop
cld
insb
out
cmpsb
std
fdivl
mov
push
dec
test
std
js
iret
sbb
cmp
dec
xchg
xchg
mov
aam
dec
dec
test
pushw
push
fsub
out
scas
xlat
mov
mov
inc
jae
xchg
sub
or
pop
push
push
fsubrl
out
testb
repz
outsb
nop
in
mov
popw
jnp
cs
mov
lcall
push
jmp
pop
clc
fistpl
movsb
lds
cmp
mov
inc
lods
inc
sbb
lret
or
in
adc
mov
in
fstps
daa
mov
gs
scas
into
add
rcrb
pushf
call
or
shll
gs
stc
daa
sub
xchg
sbb
cmc
mov
adc
dec
xor
mov
aad
xor
cli
fisubl
imul
stos
jecxz
ror
cltd
xor
push
fnstcw
int3
xchg
dec
jns
dec
lcall
cmp
fsub
pop
push
xor
cli
push
sbb
arpl
jo
int3
test
leave
je
sahf
in
test
dec
fimull
hlt
inc
and
lret
mov
fidivrl
cmpsb
je
adc
lret
scas
lds
pop
mov
push
push
out
xor
sub
fsts
dec
movsw
test
jmp
sbb
mov
add
jmp
je
frstor
sub
fcmovnb
repz
dec
mov
leave
dec
xchg
hlt
sbb
cmp
mull
add
das
rcr
xchg
stos
in
loope
fistl
in
mov
movl
add
mov
xor
or
mov
sub
repz
js
cmp
pop
adc
hlt
lret
out
out
and
lahf
clc
and
add
push
mov
sbb
or
cmp
jno
and
data16
cwtl
in
loop
xchg
lods
xor
fucomi
jmp
mov
lahf
movsl
and
xchg
dec
xchg
dec
sub
cli
cmp
mov
pop
cmpsl
test
sahf
add
lds
popf
cli
pop
fcoml
repnz
jo
pusha
jge
lret
repz
and
loop
add
dec
push
push
rclb
pop
xor
and
jmp
jle
popa
dec
test
or
mov
push
mov
bound
imul
insl
inc
mov
dec
add
ja
js
ja
jns
scas
insb
sub
fwait
test
inc
push
and
sub
test
repnz
outsb
cli
ret
jae,pn
lcall
cmp
fs
sbb
mov
pushf
mov
mov
arpl
ret
and
xchg
aam
mov
std
jo
pop
pop
sub
aas
add
leave
pop
push
fildl
enter
shlb
icebp
mov
insb
xor
in
add
repz
xchg
cmpsb
js
add
shr
outsl
imul
aaa
fadd
gs
sbb
fbld
out
and
inc
mov
std
dec
jbe
dec
mov
add
ljmp
add
pop
mov
xlat
idivl
cmp
das
inc
inc
xchg
sbb
inc
ja
pop
mov
sub
shlb
enter
std
inc
sub
xor
in
sbb
jb
rcll
cmp
inc
push
and
adc
jno
cmpsl
call
or
or
adc
in
mov
sub
in
inc
aad
adc
sti
inc
lcall
sbb
xor
jmp
ja
aad
mov
jo
in
inc
sbb
ds
cmp
push
or
inc
inc
adc
into
and
xchg
jge
sub
cmp
lods
jnp
adc
add
or
push
movsb
je
sub
lcall
fwait
test
mov
out
hlt
mov
call
add
mov
ss
fs
xor
add
das
pop
ret
dec
cmp
mov
mov
shl
arpl
add
pop
add
adc
mov
inc
aas
or
xchg
mov
scas
xchg
mov
leave
sub
loope
mov
cmpsb
jl
cmp
adc
std
addl
aaa
jle
pop
and
sub
adcb
cmc
jle
add
in
pusha
xorl
in
outsl
mov
pusha
mov
fptan
std
push
adc
push
loopne
jmp
aaa
inc
cld
mov
inc
aam
mov
xchg
repz
std
pop
dec
push
and
popa
pop
sub
pop
add
pushf
popa
sbb
mov
imul
pop
mov
sbb
add
cmp
rcll
cmp
sbb
ss
ljmp
xchg
cmp
mov
jae
cltd
push
mul
mov
sub
mov
adcb
mov
lea
mov
imul
sub
sub
push
ffreep
xor
push
dec
fcom
addb
iret
xchg
xchg
dec
pushf
pop
lods
jmp
mov
mov
out
add
and
in
aad
push
es
sub
iret
pushf
inc
loope
andl
and
add
arpl
mov
lahf
mov
add
rcrl
lds
or
inc
xchg
les
jmp
pusha
movsb
jae
xor
cli
sahf
inc
xchg
loopne
cltd
aaa
ret
or
fsubrs
jg
in
mov
mov
add
mov
addl
and
push
jl
sbb
idivl
repz
aad
lret
or
adc
dec
movsb
cmp
mov
jo
imul
imul
adc
cwtl
out
adc
icebp
in
jp
xchg
subb
cmp
addr16
add
pop
icebp
xchg
aaa
xchg
dec
into
outsl
mov
xchg
xor
int3
jae
sbb
out
int
xchg
jl
mov
xor
adcl
and
mov
outsb
pop
lock
lods
xchg
testb
push
fxch
movsb
and
pop
fisubl
adc
in
push
int
punpcklbw
xor
add
fbld
shrb
xchg
lahf
xor
fists
sti
cmp
les
lock
pushf
pop
rorb
out
data16
rcll
mov
cltd
popa
sbb
addb
xor
out
scas
jle
loopne
push
jl
add
out
mov
outsb
add
cltd
add
pop
sbb
and
js
inc
adc
or
mov
dec
inc
adc
lahf
orb
add
lcall
adc
sub
mov
push
xor
call
pop
leave
ud0
fmull
sub
xlat
sbb
jbe
add
lcall
pop
xchg
pop
xchg
lahf
mov
test
mov
mov
in
lret
movsl
jb
dec
xchg
sbb
or
cli
aas
push
aas
ss
fstpl
in
inc
and
dec
sti
xchg
adc
pop
pop
cmp
sbbb
aam
mov
ja
sbb
pushf
ret
dec
fnstsw
test
shr
sbb
add
fnsetpm(287
out
mov
pop
xchg
mov
mov
xchg
xor
inc
lods
xor
inc
dec
jns
repnz
push
xlat
xchg
lret
mov
sbb
popf
test
and
push
or
das
out
jmp
adc
sahf
sbb
add
pop
sub
xchg
dec
js
mov
pop
adc
add
out
cwtl
dec
popa
push
xor
mov
push
sbb
pop
push
ficomps
xor
sub
jmp
ljmp
sub
sbb
sub
mov
faddl
ss
push
push
jb
rcrb
cmp
cwtl
jp
mov
dec
adc
popa
push
xchg
sahf
rorb
push
bound
stc
fstpl
and
loop
push
cmc
lahf
les
testb
outsl
divb
push
loopne
jl
dec
jbe
cmp
arpl
jo
inc
popf
ljmp
xchg
jne
test
pop
ljmp
mov
cltd
adc
lock
out
fmulp
xor
lods
dec
shl
lea
cmpsb
sub
adc
int
mov
fiaddl
mov
pop
mov
dec
mov
or
loopne
cltd
mov
add
cmp
js
push
outsb
xor
pop
imul
in
cltd
lretw
mov
jmp
sub
sbb
insl
fsub
xor
jb
mov
dec
cmp
loop
xor
popa
int3
fldenv
xchg
in
and
or
lret
lods
xor
icebp
fmuls
xor
mov
mov
pop
adc
and
cmp
insb
push
mov
sub
xchg
aaa
push
pushf
cmp
test
addr16
xchg
and
mov
jae
lods
ja
loopne
arpl
xor
sub
xor
or
leave
push
jae
mov
mov
rolb
mov
enter
lcall
std
jo
hlt
stc
mull
fwait
inc
dec
push
add
pushf
add
cmp
outsw
and
push
fsubl
mov
repz
enter
mov
aas
mov
jnp
push
sbbb
cmp
inc
jmp
fwait
sbb
pop
lcall
xor
movaps
push
mov
test
push
cmpsl
test
push
ficompl
cld
int3
fdivrl
adc
es
and
cli
lcall
mov
fmuls
and
or
and
cmp
adc
mov
outsb
ror
insb
mov
adc
aad
push
sbb
into
push
adc
daa
push
mov
sbb
jle
popf
sub
nop
aaa
cld
in
pop
mov
jecxz
or
jle
ss
sub
push
adc
enter
test
mov
jl
xor
mov
js
das
or
cmpb
scas
sub
dec
jp
inc
adc
lret
jbe
push
or
into
sub
mov
dec
ret
mov
sub
cld
repnz
imul
sbb
xchg
add
xchg
js
in
shl
jg
jnp
or
jecxz
push
lds
mov
sub
hlt
sbb
cmpsl
xchg
loope
sbb
adc
lock
in
mov
std
pop
inc
xor
push
aam
mov
push
or
out
cmc
xchg
sti
imul
adc
aaa
or
mov
inc
enter
shl
ds
lods
lods
cmp
in
mov
push
and
mov
push
sub
dec
sbb
jp
xor
cmpsb
xchg
sub
cwtl
div
mov
enter
jge
mov
and
mov
mov
xor
daa
cmp
mov
repnz
aas
xor
mov
push
sub
cmp
fldcw
cmpsb
cmp
data16
mov
jecxz
sbb
das
dec
aas
test
pop
cmpsl
or
ret
movsb
sub
cmp
pop
sti
jge
mov
fisubl
jno
out
jmp
inc
ret
xchg
fstl
mov
and
adc
ljmp
jecxz
adc
ret
xchg
jo
fcomps
mov
repz
adc
or
lods
push
lods
cwtl
pop
inc
mov
jae
jl
push
mov
xor
jb
sbb
sbbl
insb
outsl
xor
mov
lock
push
je
mov
fdivrl
xchg
dec
and
leave
xchg
imul
cltd
sbb
in
mov
push
xor
push
cmp
mov
jecxz
gs
jg
shrb
mov
cmp
and
outsl
push
dec
rol
jle
pusha
lcall
jbe
lods
test
leave
test
adc
push
xor
lcall
push
leave
add
jge
ljmp
fisubs
cmp
push
pop
sub
fdivr
xchg
lret
or
or
jbe
paddb
stos
mov
lock
mov
in
sbb
push
and
xchg
xchg
pop
mov
mov
aam
fdivp
mov
mov
imul
mov
add
or
std
or
sub
or
mov
clc
xchg
push
dec
pop
inc
mov
pop
es
xor
push
sbb
dec
ds
or
add
and
and
push
xchg
jo
shrl
dec
testl
pop
rcr
movsl
popf
xchg
push
pop
lcall
mov
push
or
lret
push
test
dec
mov
adc
xlat
xor
hlt
shl
mov
mov
push
xchg
iret
roll
adc
test
sbb
iret
xchg
fs
dec
or
mov
sub
xor
ja
xchg
fstpt
add
sub
push
cmc
lock
popf
mov
push
or
jg
xchg
jns
push
loop
cmp
stos
xchg
or
lea
inc
jecxz
and
add
and
mov
scas
test
scas
adc
mov
inc
pop
push
jno
xchg
xor
repnz
jge
aam
xchg
inc
out
fcoms
out
ret
cmp
lret
push
icebp
lock
mov
flds
cmp
jno
ror
xor
imul
popf
cwtl
sub
sahf
sbb
lods
lods
bound
mov
std
inc
out
pop
addr16
rcrb
pop
imul
aaa
repnz
lret
ds
cwtl
ret
inc
inc
adc
push
ss
pop
outsb
pop
incl
push
jns
loopne
cmp
repz
fucom
cmp
jbe
das
add
dec
jecxz
pushf
pop
pop
aaa
mov
sub
pop
xor
mov
iret
cmp
iret
popa
iret
jbe
mov
ret
sub
dec
xchg
or
xchg
pop
or
or
sti
insb
jno
imul
imul
loope
xor
lods
mov
push
out
push
pop
pop
xchg
xor
sub
insb
gs
clc
ficomps
stos
in
cmp
ficoms
lock
push
jae
adc
daa
insb
xchg
inc
mov
shlb
scas
adc
repnz
cmp
aam
mov
pop
sti
dec
mov
inc
mov
dec
add
enter
sbb
sbb
push
push
push
jge,pt
adc
mov
enter
sub
push
jnp
nop
push
or
mov
sub
cltd
sub
xor
test
add
insb
mov
hlt
sti
push
cltd
inc
push
mov
add
cmpsl
stos
xchg
int3
decb
sbb
test
pop
or
and
xor
loope
sub
repnz
inc
lcall
inc
je
stos
add
and
mov
cmp
dec
dec
es
pop
cmp
xchg
sub
sbb
or
fwait
repz
push
ss
xchg
out
into
inc
test
aaa
mov
xor
out
push
es
mov
jge
push
pop
cmc
pop
int
xor
sahf
cmpsl
pusha
jns
mov
mov
shl
xor
jb
shlb
pop
lret
lea
cmp
jle
fidivs
pop
scas
add
push
cmp
and
and
outsl
imul
fwait
mov
sub
out
sarl
mov
ret
aas
mov
aaa
sbb
mov
stos
push
fbld
mov
dec
mov
and
incb
imul
add
test
dec
xor
sbb
and
jg
jae
mov
testb
shlb
lret
dec
jne
cmp
dec
std
mov
test
xchg
sti
std
movsb
sbb
loop
repz
vmovq
sti
add
adc
js
add
test
adc
rorl
jb
lahf
mov
fcomi
mov
aad
arpl
push
inc
inc
data16
dec
ror
repz
enter
jns
fdivl
stos
cmp
dec
dec
and
jae
sarl
arpl
and
dec
mov
lret
pop
jmp
jecxz
cmp
lret
or
add
and
lcall
mov
in
leave
fidivl
xor
lds
subb
vprotb
xor
dec
adc
add
pop
mov
adc
push
in
dec
js
xchg
ds
stos
cmp
jno
rcl
test
iret
lods
or
int
cmpsl
push
jmp
jne
repnz
fiadds
xor
cmp
xor
pop
inc
imul
or
push
fldcw
jb
movsb
out
and
sbb
mov
and
or
test
xor
fistl
push
push
js
push
jp
insb
or
or
add
sub
rorl
lock
push
in
iret
mov
loopne
sbb
mov
fwait
sbb
ja
adc
lds
jge
insb
mov
stc
fwait
into
push
lock
rcll
les
sbbl
xchg
adc
fs
ret
sbb
mov
imul
inc
lods
mov
push
adc
mov
cmp
cmp
mov
mov
iret
and
sub
clc
jnp
shrl
cmc
test
mov
imulb
inc
add
stos
outsl
leave
lods
mov
xor
or
ss
ds
test
ljmp
mov
lret
jle
mov
int3
int3
or
adc
in
test
cmp
lock
cmpsb
jmp
add
in
and
xchg
cld
xor
jp
cmp
adc
clc
mov
sub
fcoml
xchg
adc
sbb
shrl
jae
addr16
stos
insb
jecxz
jge
js
mov
ret
imul
xchg
ror
aad
cmc
stc
or
clc
mov
jg
xor
push
ficompl
jns
dec
cld
movsb
push
jbe
mov
xor
mov
inc
lret
add
inc
sub
idivl
aad
dec
and
lcall
outsb
add
mov
and
pushf
gs
lods
das
xchg
add
xchg
sbb
mov
sub
xor
xchg
adcl
inc
aas
rcrb
cmp
and
pop
mov
insl
out
je
adc
shrl
xchg
adc
mov
out
out
loop
push
sbb
and
mov
fs
faddp
hlt
orb
scas
mov
sbb
ds
fdivs
ret
sub
jae
gs
mov
mov
sbb
and
and
cmp
les
fmull
mov
mov
jbe
jae
andb
push
dec
cmpsl
adc
call
cs
mov
lcall
ja
or
cltd
roll
dec
int3
mov
dec
dec
gs
jmp
adc
loope
mov
and
loopne,pt
insb
ret
mov
stc
loopne
cmpsb
daa
popl
adc
xor
dec
xchg
add
movsl
jnp
xchg
mov
xor
sti
scas
pushf
clc
insl
inc
xlat
sbb
shrb
push
mov
cmpsl
pop
sub
aam
push
pop
cmp
mov
fmul
and
add
xchg
gs
mov
or
adc
cwtl
shrb
mov
cwtl
mov
lods
xor
scas
stos
mov
push
mov
cmp
or
stc
sbb
and
sub
jp
jecxz
cli
dec
sarl
add
shrb
jbe
cmpsl
mov
pop
mov
les
fwait
xchg
shl
jne
sub
jmp
inc
or
andl
inc
or
adc
jmp
push
mov
cmp
sub
mov
jae
jmp
inc
aam
xchg
or
cli
dec
movsb
negl
in
or
es
push
push
das
pop
pop
mov
nop
jge
shll
cmp
cmp
mov
movsb
push
sbbb
pusha
shrl
xor
inc
clc
testl
and
jnp
mov
xor
popf
movsb
mov
push
push
mov
pop
fldt
ret
adc
movsb
pop
loop
cmp
and
mov
ret
fsub
jo
mov
jge
test
mov
lahf
mov
pushl
fwait
rcrl
cmp
insl
stos
mov
mov
or
xor
orl
sub
out
cmp
or
shll
push
xchg
mov
repnz
sahf
push
adc
xchg
sbb
repnz
sbb
xchg
cmc
jns
mov
xchg
imul
mov
inc
inc
out
repnz
inc
mov
in
insb
in
stc
push
fadd
mov
or
inc
or
test
and
ret
outsb
cmp
scas
jmp
jge
add
mov
aas
xor
mov
cs
into
icebp
adc
frstor
sbb
adc
das
jecxz
call
je
adc
sub
arpl
test
mov
fistps
mov
rolb
in
push
jae
sub
mov
jmp
pop
fidivrs
fbstp
sbb
and
jb
adc
fcoml
push
fdiv
das
mulb
lret
or
sahf
sbb
mov
lahf
nop
sub
push
inc
ljmp
je
and
pusha
lock
cmp
adc
dec
out
in
push
sti
pop
mov
add
xor
sbb
loop
ljmp
push
iret
xor
xchg
cmc
orb
mov
jb
cmpsl
jo
jge
shll
sbb
stos
or
cmp
or
lea
jl
add
jp
inc
jg
lock
jl
jo
in
push
jb
pushf
dec
pop
mov
push
jae
cmpl
dec
cwtl
shlb
sbb
xchg
idivl
cmp
mov
cmc
mov
jg
push
push
dec
shlb
scas
ja
pop
les
xchg
push
gs
xchg
xchg
jae
lret
jnp
fisttpll
in
xor
dec
mov
add
sub
loope
inc
cli
lret
and
data16
xchg
xorps
enter
jae
push
xchg
dec
jmp
xchg
es
lods
int
mov
js
movsb
nop
sti
dec
sti
adc
xchg
xchg
enter
cmp
adc
pop
xor
lock
pop
sti
shrb
lahf
test
mov
push
cmp
mov
cs
dec
subb
bound
xchg
add
sbb
mov
lea
pop
or
stc
and
out
enter
es
repz
cli
test
pop
push
inc
sub
mov
inc
icebp
mov
repz
fsubs
lret
mov
lahf
mov
js
mov
test
push
lods
push
enter
ficomps
and
insb
rorb
movl
mov
xchg
into
call
push
sub
xchg
nop
inc
xchg
sbb
add
push
push
pop
jne
xor
sub
xchg
mov
test
xchg
movsl
push
pushf
inc
jl
jecxz
adc
stos
mov
dec
mov
ja
out
sbb
xor
inc
pop
aaa
add
ds
cmp
or
shlb
lret
mov
push
mov
testl
fimull
es
sbb
daa
lods
ret
mov
shl
xor
fnsave
pop
test
gs
pop
sti
pop
bound
mov
jp
mov
xor
out
adc
int
jmp
mov
lcall
lods
adc
idivb
adc
lock
and
pop
fistpl
fs
jge
in
addr16
dec
adc
or
scas
xchg
mov
inc
push
stc
xor
mov
cmpsb
xchg
sti
repz
adc
orl
sbb
add
rcl
xor
add
call
mov
ret
and
rorb
inc
mov
and
or
insb
cmp
dec
inc
aas
insb
or
pushf
xor
rcll
dec
push
add
xchg
jmp
cmp
ret
sti
or
mov
push
inc
dec
push
jmp
xchg
repz
aaa
aaa
int
decb
ja
push
int3
fnsave
mov
xchg
psubusb
pop
stos
or
and
xlat
sbb
add
xchg
ret
mov
loop
hlt
aam
push
pop
loopne
or
test
adc
out
in
dec
popa
into
ljmp
lods
jo
lds
mov
and
jg
dec
out
add
filds
sti
cmpsb
cmp
pushf
mov
xchg
arpl
pop
js
sub
xor
jnp
push
pop
ret
arpl
cmc
iret
mov
scas
xor
add
cwtl
fst
sub
arpl
jbe
mov
fbld
push
xchg
mov
int3
mov
xchg
pop
popa
aaa
fdivl
or
leave
xor
push
pop
mov
gs
inc
mov
push
add
push
jle
jne
notb
aam
fidivl
mov
jg
fwait
sub
lahf
pusha
mov
nop
fdivrs
notl
cltd
sahf
out
sbb
scas
fistps
ss
adc
sub
cmp
stc
dec
hlt
mov
mov
out
ret
xor
out
cmc
rol
call
scas
jo
arpl
test
sbb
faddl
adc
sub
ljmp
mov
xor
sbb
xchg
shlb
push
imul
dec
je
xchg
add
add
dec
popa
out
addl
xor
or
sbb
repz
stos
pop
inc
push
adc
movsl
add
stos
loope
pop
inc
jl
mov
stos
adc
mov
in
dec
inc
sub
jo
push
dec
ja
fwait
rcr
clc
inc
inc
outsb
dec
xchg
into
inc
fs
es
cmp
mov
mov
mov
or
and
inc
loop
pusha
aaa
das
daa
inc
adc
add
gs
stos
subl
push
adc
mov
leave
dec
sarb
fcmovnu
clc
call
or
dec
adc
cmp
inc
mov
mov
inc
mov
mov
lahf
sbb
xor
inc
push
add
or
shrb
sbb
imul
hlt
dec
add
mov
js
or
repz
fdivrl
push
lahf
shlb
in
fldenv
movsl
xchg
aad
mov
xor
push
sahf
sub
popf
and
xchg
sti
mov
decl
mov
mov
fnstcw
dec
ret
aas
les
fimuls
jl
shr
mov
add
sbb
dec
icebp
cmp
test
lds
std
and
push
inc
xchg
xor
loop
mov
out
cmp
add
cmp
iret
rcrl
mov
fldenv
adc
pop
or
incl
jnp
jl
or
mov
shrb
inc
push
sub
mov
xor
adc
iret
push
and
int3
les
mov
inc
jp
xchg
sti
ljmp
decl
fiadds
lcall
inc
ret
pop
sbb
ret
outsl
fisttpll
mov
sub
dec
mov
mov
int
pop
dec
int3
ficompl
in
idiv
lock
dec
xchg
imul
adc
fcompl
jae
cmp
imul
loopne
mov
xchg
popf
fildll
repnz
sbb
pop
aam
in
test
mov
imulb
push
arpl
jb
push
adc
imulb
sub
bound
addr16
das
ficoml
inc
cld
mov
xor
lret
pop
pop
aas
hlt
pop
data16
out
repnz
and
test
test
out
lock
xor
push
sbb
addl
pop
stos
jg
gs
mov
pop
mov
jbe
sub
popl
into
and
inc
rorl
or
adc
sti
in
dec
lret
mov
cmp
mov
in
mov
xchg
fistl
add
aas
aaa
lods
xor
xchg
popa
jbe
sbb
lock
mov
pushf
fisttps
xlat
leave
pop
mov
pusha
popa
scas
xchg
mov
leave
add
xchg
or
push
push
jne
mov
sbb
cmp
inc
xor
mov
inc
jbe
in
push
ret
fsub
push
xor
push
or
sbb
or
cmc
push
ss
int3
adc
movsb
add
imul
inc
jl
cltd
mov
adcl
sub
xor
fisttpl
push
sub
and
enter
pop
push
push
jmp
das
xor
sub
test
mov
mov
and
jno
outsl
xchg
inc
xchg
icebp
andl
mov
out
arpl
fdivs
xchg
roll
mov
ss
pop
cli
stc
dec
add
inc
xchg
sbbl
add
sub
ror
sbb
imul
mov
popf
fnstenv
lret
mov
dec
jmp
lds
out
rorb
push
push
dec
mov
jmp
jnp
fbstp
dec
pushf
mov
push
loopne
adc
js
aad
fwait
sbb
ret
jnp
and
cmp
aam
jns
inc
movsl
fucom
or
adc
push
xor
jle
pop
cmpl
and
out
js
test
mov
jnp
jbe
jns
sahf
je
jo
in
add
pop
iret
into
pop
mov
js
cmc
xchg
and
pop
movsl
outsl
popa
adc
ret
add
sub
and
dec
lock
rol
test
lcall
jg
js
adc
shl
mov
push
ficoml
jmp
movsl
jg
push
imul
shlb
mov
jb
lea
or
adc
stos
fimull
push
ret
rorl
pusha
ja
pop
cmp
fst
inc
loope
dec
cmp
and
and
xlat
xor
cmp
cmpb
sub
mov
enter
mov
test
in
add
xchg
scas
movsl
outsl
cmpsb
shrl
pop
int3
fwait
cld
adc
lods
push
in
pop
jno
adc
mov
arpl
push
sub
add
sbbb
lock
icebp
fdivrs
push
jmp
xchg
push
jl
addr16
aad
sahf
jne
inc
jns
jg
and
nop
sarb
pop
dec
hlt
mov
sarl
cmp
movl
pop
mov
or
mov
mov
pop
aam
xchg
adc
mov
sbb
mov
sbb
icebp
xlat
push
mov
adcl
xor
push
fsubl
cmpsb
inc
rcr
test
or
ljmp
mov
mov
sti
cld
lret
pop
pop
jnp
test
jne
lret
stc
jmp
add
pop
addps
adc
or
inc
sub
sbb
pop
ss
dec
mov
and
xor
inc
cmp
outsb
xchg
lahf
outsl
xchg
jae
sbb
sbb
pop
adc
ret
jmp
mov
inc
icebp
cltd
shrb
rclb
ja
mov
jns
adc
shll
pop
xchg
mov
les
adc
lret
hlt
rolb
mov
dec
ret
lods
inc
incb
testb
mov
push
sub
fbstp
cmp
xor
addr16
outsl
imul
xchg
or
push
add
outsl
xor
mov
into
mov
out
sbb
in
mov
pop
mov
lea
imul
sti
cmpsb
jle
or
js
cli
mov
fcoml
add
stc
out
jmp
mov
dec
idiv
scas
cmp
cwtl
ds
push
dec
jl
hlt
stos
into
add
shll
dec
popaw
sub
sub
mov
push
jbe
hlt
jg
out
push
cmpsl
idivl
dec
sbb
dec
push
nop
stos
sub
fucomp
inc
in
ljmp
cwtl
add
jns
out
fcomip
call
mov
push
lret
sub
lcall
lock
jmp
cmpsb
dec
pop
mov
dec
xchg
jmp
je
ss
or
aam
and
mov
sbb
clc
decb
inc
xor
add
das
add
pop
in
xchg
pop
mov
scas
mov
jb
push
pop
mov
add
in
lahf
xchg
add
push
mov
inc
repnz
fdivr
sbb
push
cmpsl
push
sub
lret
in
inc
stos
loop
ret
daa
in
sub
add
pop
pop
test
int3
jle
call
push
cmp
adc
test
insl
leave
and
leave
aad
orl
pop
sarl
jle
sbb
mov
fwait
dec
push
dec
mov
jl
xchg
mov
sub
dec
popf
fwait
mov
enter
mov
pusha
sbb
test
ljmp
push
and
and
es
jnp,pt
add
fistps
int
lods
ret
jg
mov
out
and
add
in
add
out
outsb
xor
stos
sbb
outsl
fadds
imul
imull
cwtl
add
lret
ficompl
and
inc
psrad
sub
sti
cmp
inc
cmp
push
mov
xor
sbb
sbb
lea
stos
lods
dec
cwtl
iret
fld
test
xchg
dec
xlat
dec
lahf
stc
jecxz
fdivs
shlb
shr
scas
mov
cmp
mov
inc
ret
sub
push
mov
adc
bound
fs
scas
mov
jg
mov
cmpsb
iret
and
or
pop
mov
jo
pusha
in
jmp
shrb
hlt
dec
popa
sbb
daa
int
fwait
inc
jl
sbb
add
push
push
jnp
insl
imul
mov
pop
adc
call
pusha
inc
fidivs
jb
stos
std
adc
stc
jno
and
push
div
inc
roll
scas
dec
adc
orb
mov
inc
loopne
test
push
icebp
pop
repz
or
inc
xchg
fbstp
push
outsl
xor
shll
js
lcall
jnp
cwtl
sbbl
cmpsl
jne
hlt
scas
inc
mov
jmp
adc
cs
cpuid
jo
and
incb
mov
lret
outsb
test
and
cmpsb
dec
fwait
add
mov
cld
mov
ficompl
add
cltd
movsl
mov
mov
mov
movsb
clc
lds
pop
dec
push
aad
jb
xor
icebp
insl
push
popf
out
push
flds
or
mov
dec
push
aad
add
xchg
add
or
jecxz
imul
rcrb
jmp
andl
cmp
jno
or
push
inc
cmp
mov
pop
add
xor
pop
sub
xchg
dec
jmp
mov
or
test
loop
mov
jle
jb
cmp
loopne
ret
push
je
push
mov
jle
dec
or
lcall
cmpsb
shl
sbb
inc
cmp
sub
fwait
es
push
mov
push
in
std
jl
shll
inc
addl
test
jl
lret
sti
mov
aam
inc
push
nop
rcrl
cmp
and
mov
cmp
loope
adc
xchg
and
stos
sub
stc
pop
and
shll
in
push
xor
ret
inc
psubsb
out
dec
push
pop
or
lret
jmp
inc
mov
inc
add
fwait
inc
mov
fidivs
add
xchg
mov
jb
ret
mov
dec
int3
inc
nop
push
shrl
mov
call
cmpsb
push
xorl
mov
push
stos
sub
out
rol
clc
add
push
or
popf
mov
sub
stc
mov
mov
dec
xor
addr16
shlb
in
dec
mov
aad
push
pop
dec
fs
add
xchg
inc
jmp
mov
pop
mov
add
leave
pop
mov
inc
ja
dec
cmp
pop
ficomps
hlt
jle
daa
or
mov
into
mov
out
ja
mov
adcl
scas
mov
js
out
loopne
int
into
mov
fsubl
and
insb
test
pop
rorb
into
arpl
add
sti
and
pop
insl
cmp
and
je
adcl
loopne
es
push
vmovntps
sbb
mov
faddl
mov
xorl
jmp
insl
lahf
xchg
jle
or
fnstsw
push
cmpsl
adc
nop
popa
push
mov
xchg
xorl
mov
mov
adc
inc
leave
inc
pushf
and
ret
pop
jg
fldenv
dec
dec
data16
or
rsqrtps
push
pop
and
xchg
frstor
loop
scas
clc
add
xchg
outsl
jg
sub
pushf
cmp
je
fsin
adc
je
dec
sti
ljmp
dec
sti
push
and
jb
push
test
aaa
in
pop
cmp
mov
cmpsb
ja
mov
dec
mov
ja
stc
mov
out
clc
or
adc
jge
out
stc
mov
add
jne
rol
in
jp
sti
int3
cmp
ss
aas
dec
adc
mov
hlt
mov
inc
test
jnp
adc
adcb
repz
xchg
xor
jle
pop
add
jl
cmpsl
dec
xchg
out
fisttps
seta
dec
aam
xor
dec
adc
bound
lcall
dec
call
daa
insb
cmp
jecxz
in
sub
loopne
fstpt
dec
in
rclb
jb
mov
xchg
out
stc
sbb
add
inc
cmpb
in
outsb
aaa
mov
push
pusha
fistpll
mov
or
jmp
jp
push
mov
xor
lret
adc
in
add
mov
xchg
jno
test
outsb
mov
shll
popa
dec
and
int3
stos
xchg
test
cmp
cmp
cltd
mov
pop
roll
inc
in
in
dec
jne
pop
lods
mov
xor
sbb
movsl
fdivr
loop
mov
shr
hlt
popa
xor
jecxz
or
dec
jnp
mov
jmp
mov
push
pop
fdivrs
fistl
jg
int
adc
cmp
fs
fldt
ds
dec
cmp
cmp
jbe
lret
sub
in
aad
mov
jns
outsl
sub
sub
fiaddl
loop
ds
push
pop
jecxz
or
adc
sbb
cmp
cmp
and
sub
in
push
mov
jno
lcall
cltd
aam
jmp
jp
int3
int
mov
nop
lock
xor
sbb
std
inc
push
push
fists
loop
leave
xor
sub
pop
idivl
pop
bound
call
jp
loope
inc
jne
push
cli
outsb
jb
dec
inc
jo
sbb
inc
sbb
loop
mov
xor
mov
fstpl
push
lea
adc
jne
pop
xchg
ret
in
in
lea
sbb
ds
and
lds
inc
gs
add
into
test
repnz
cld
push
repnz
aam
and
push
push
daa
dec
pop
lahf
cs
pop
inc
std
xchg
rolb
and
shll
fiadds
daa
call
movswl
and
mov
or
cwtl
lods
jl
mov
mov
inc
sub
les
rcrl
or
fs
sbb
mov
lods
mov
jmp
sarl
iret
cmp
adc
lea
inc
mov
jecxz
imul
fwait
cmp
or
mov
lock
hlt
mov
sub
js
mov
mov
mov
sub
repnz
mov
inc
sar
sti
jae
pop
lret
and
mov
xor
pop
cmpl
jl
mov
stc
cltd
xchg
cmp
mov
call
mov
xchg
inc
push
xor
pop
sbb
or
cmp
push
sarl
sbb
ds
fs
xchg
cmp
or
imul
fstpl
and
clc
mov
pavgw
sbb
mov
fdivs
xorl
push
mov
add
shlb
popf
xchg
dec
xchg
sub
stos
lock
jbe
int
sub
decl
les
add
xor
data16
testb
shl
push
insb
imul
pop
stos
inc
iret
cmp
es
sar
fistl
or
scas
add
mov
test
jge
outsb
sub
std
jb
mov
jecxz
mov
sub
or
mov
mov
fcmovnu
sub
ja
sbbb
sub
mov
ljmp
xchg
cmp
sbb
inc
negl
xchg
jge
and
add
lea
outsl
add
cs
xor
test
cs
arpl
mov
jge
mov
pop
push
and
sub
cmp
xchg
fmuls
jge
fwait
xor
push
mov
cs
mov
mov
lcall
cmpsl
pop
add
jbe
fmull
testb
push
or
ret
int3
sti
popf
inc
push
jl
or
or
icebp
pushw
and
sbb
js
mov
jae
sub
push
and
pushf
push
inc
stc
cli
les
add
iret
js
mov
insl
adc
mov
jg
cmp
push
aaa
dec
cmp
push
cmpsl
orl
or
sbb
mov
mov
lock
and
adc
xchg
lcall
xlat
dec
in
andb
ss
int3
imul
sub
adc
pop
sarl
daa
aas
and
ret
test
je
adc
xor
mov
sub
inc
out
adc
cmpsb
mov
mov
bound
out
fsubr
loopne
and
test
sarb
in
and
and
jo
mov
sub
push
jne
cmpsl
cs
sbb
pop
push
or
sub
in
pop
dec
sti
dec
testl
cli
sub
shlb
push
sbb
scas
cld
das
mov
scas
subl
lret
xor
popa
jl
daa
sbb
pop
and
data16
inc
aas
movsb
or
cmp
sub
fbstp
or
ret
mov
pop
aad
dec
mov
test
xchg
dec
xor
stos
adc
iret
and
sub
loope
xor
xchg
or
adc
fbstp
and
push
pusha
xchg
fwait
sbb
repnz
sub
inc
filds
cmp
or
fisttps
repz
arpl
les
scas
mov
fs
outsl
mov
fsubr
sub
ds
inc
xor
jg
loope
fistpl
pop
in
mov
xchg
popf
ss
add
push
mov
into
test
sbb
push
push
mov
mov
push
adc
jbe
dec
and
imul
jo
bound
pop
out
xor
push
aam
enter
push
lea
sbb
add
sub
pop
sbb
cmp
fnstenv
sub
fldt
hlt
mov
xchg
add
jne
and
mov
add
mov
xchg
les
pop
imul
xchg
jecxz
insl
push
gs
js
sbb
xchg
cltd
pop
xchg
jno
jbe
jns
in
nop
in
ret
and
xchg
mov
adc
pop
inc
shrb
jmp
cmp
mov
lods
inc
jle
fs
andl
fistpll
inc
dec
addl
icebp
lock
pop
int
call
iret
test
or
mov
stc
jg
xor
outsb
clc
xchg
xchg
inc
inc
sti
push
cmp
cmp
in
pop
add
push
and
mov
lea
jmp
cwtl
popa
cltd
in
stos
in
xchg
and
pop
sub
cli
xor
sbb
imul
xchg
scas
xor
arpl
shlb
push
ja
push
xchg
sbb
or
nop
mov
sahf
xor
jl
loope
mov
iret
cmp
and
pusha
ja
push
subb
push
pop
add
cmp
pop
sbb
iret
add
pop
bound
lods
xchg
dec
outsb
cmp
mov
xchg
pop
nop
cld
cmp
jo
loopne
sub
repnz
aaa
outsl
shll
jmp
movsl
les
push
mov
pop
test
pop
lcall
sub
fidivrs
add
cmp
dec
mov
push
fcmovnu
xor
dec
repz
push
in
ficoms
stc
sbb
and
imul
scas
cmp
sarb
push
xor
cs
mov
lret
dec
fdivrs
mov
es
sahf
xor
xchg
ret
subb
add
ret
cmp
and
call
lahf
gs
hlt
das
orl
jge
mov
cmp
cmp
sub
aad
dec
jno
add
icebp
cmp
adc
jle
fstl
sahf
inc
mov
xor
xor
mov
sbb
push
cmp
aam
call
scas
xor
push
adcb
sub
inc
outsl
popf
push
or
bound
mov
sbb
pushf
popf
mov
faddp
push
mov
insl
scas
and
fs
push
stos
sbb
sbb
out
in
rcrb
fdivr
cmp
mov
fdivs
aam
fwait
mov
xchg
int3
pop
rolb
or
insl
cmpsb
dec
negl
into
inc
inc
jmp
mov
xor
ja
dec
cwtl
sbb
imul
and
mov
roll
inc
mov
xchg
clc
or
lock
mov
sbb
pop
scas
ficomps
jno
out
sarb
cmc
cs
sub
movsl
in
xchg
fxam
jp
add
mov
push
and
pop
fbstp
cmp
adc
push
lret
and
mov
movsl
in
jmp
lcall
rcrl
or
test
mov
rcrl
and
rorl
pop
or
sarb
shll
lock
mov
cmc
inc
mov
xchg
mov
mov
jne
mov
sbb
loope
adc
int3
fmull
inc
xchg
sub
mov
fiadds
sbb
test
push
hlt
jl
dec
push
jmp
inc
aas
lcall
sarl
add
sbb
push
sbb
xchg
dec
mov
adc
cmp
lds
imul
add
push
inc
lds
add
push
iret
and
sbb
movsl
push
xor
xchg
repz
cmc
cmp
pushf
lods
inc
ret
rol
xchg
add
out
or
mov
ja
mov
fcomps
fisttpll
mul
jbe
add
sub
xor
or
popf
dec
lahf
fsts
add
loop
push
inc
in
inc
push
jo
imul
lock
xor
mov
or
push
dec
mov
or
fistpll
cmp
mov
pop
into
xchg
mov
xchg
xor
outsb
mov
leave
cmp
and
in
call
sti
dec
mov
xor
ljmp
jb
adc
arpl
cmp
cwtl
xchg
std
cmp
shll
sub
cmp
xchg
out
jne
push
cmp
movsb
cld
pusha
fcompl
adc
inc
and
jg
mov
adc
aas
scas
pop
rol
popf
add
fiaddl
or
jecxz
pcmpgtw
test
mov
cmpsl
mov
test
in
jle
dec
mov
andl
data16
mov
add
mov
xor
scas
fld
out
push
jecxz
leave
cmp
lret
push
push
cmp
add
pusha
scas
or
pop
lods
nop
adc
mov
push
push
insb
call
jno
xlat
mov
stc
jl
pop
pop
jne
adc
pop
imul
mov
lock
inc
and
divl
gs
aas
rcr
inc
pop
fsts
sub
insb
int
cmp
insl
lcall
movhps
pop
add
lret
push
pushf
lods
lods
sub
scas
mov
mov
fcomip
dec
sti
clc
adc
call
hlt
mov
mov
sub
in
sub
and
mov
mov
sbb
pop
push
lods
iret
out
insb
stos
sarb
cmp
mov
jle
jne
inc
push
mov
movsl
pop
pop
cmpsb
insb
clc
add
push
jb
lock
dec
ljmp
adc
cli
sub
std
clc
sub
mov
push
cmp
dec
pop
adc
jmp
ret
int
xor
test
popf
negb
mov
movsl
popf
add
inc
adc
push
ret
js
rcll
js
dec
div
out
clc
je
nop
lods
les
xor
addb
push
jecxz
outsb
arpl
je
jb
ss
scas
mov
mov
push
repz
rorb
or
xor
bound
movsb
fidivl
clc
test
mov
inc
sub
and
cmp
sti
fsubp
dec
mov
mov
add
xor
sub
loop
sub
fneni(8087
test
loop
add
cmp
sar
lods
push
xor
mov
outsb
rorb
push
dec
jl
jp
repz
jbe
push
out
clc
or
sti
cmpb
rcll
sbb
xlat
insl
dec
pop
add
add
xor
fimull
mov
adcb
xchg
and
mov
movsb
jge
add
jge
ja
mov
scas
push
dec
in
movsl
or
xchg
rcrl
mov
mov
stos
subl
daa
push
shl
pop
or
flds
out
out
stc
lea
pushf
ljmp
inc
loopne
and
stc
mov
dec
xchg
mov
pusha
jae
pop
js
jmp
in
call
add
cmp
lods
fbld
sub
insl
fbld
hlt
scas
repnz
push
xor
xchg
push
sahf
and
sub
fnsave
std
or
jmp
lods
sbb
movsl
mov
cs
inc
into
mov
hlt
pop
mov
pop
out
and
xchg
push
xchg
dec
pop
mov
xchg
push
cmc
sbb
add
mov
fiadds
ret
push
dec
and
das
into
cwtl
sbb
xlat
fs
fdivrs
icebp
fbstp
out
stos
mov
out
xor
sub
repz
arpl
stc
nop
insb
jnp
sbb
sbb
es
iret
call
or
pop
xor
aas
in
adcl
or
sub
stos
je
adc
lcall
push
arpl
mov
call
mov
jo
mov
xorl
xchg
scas
or
imul
jno
and
repz
cli
pop
xchg
pop
je
pop
mov
sbb
aaa
mov
fsubp
mov
jns
arpl
add
pop
jp
mov
xchg
cmc
mov
push
sub
or
dec
cs
das
cmp
ret
xor
and
out
lods
adc
or
sti
jp
dec
jecxz
gs
mov
rcrl
jge
fstpt
push
shl
pop
ffree
mov
inc
imul
pop
push
and
inc
ret
add
stc
lea
xchg
dec
xchg
lods
repz
lods
sbb
adc
dec
rorb
pop
and
arpl
and
out
cmp
push
dec
movsb
xchg
test
or
pop
inc
shll
repz
dec
inc
in
mov
jle
pusha
mov
mov
leave
cmp
xchg
rorb
mov
mov
aam
or
movsl
xor
inc
jo
sbb
lock
add
out
and
cwtl
and
and
jae
movsb
sbb
lahf
cmpb
imul
divb
arpl
ljmp
jns
dec
fdivl
fs
sub
dec
hlt
cld
mov
cmp
pop
inc
sbb
dec
aaa
cmp
cmpb
cld
pop
es
rol
push
repz
inc
push
mov
stos
sbb
testl
faddl
xor
mov
mov
push
adc
sub
int3
dec
mov
jbe
jmp
push
test
xchg
insl
test
lea
pop
insl
xor
hlt
scas
dec
mov
rorl
sub
mov
icebp
mov
jmp
neg
cmp
or
mov
dec
das
push
xor
and
or
testl
icebp
ss
jns
lock
add
test
add
push
sub
sbb
data16
jo
jl
xchg
ss
jp
dec
fldl2e
lds
xchg
repnz
jno
mov
sub
enter
xor
lcall
and
xchg
jge
adc
push
shrl
das
pop
loope
pop
mov
in
or
adcl
xor
jmp
pop
push
nop
test
xchg
xor
and
fidivl
into
out
out
sbb
push
cmp
adc
or
lds
mov
std
hlt
loop
mov
pop
push
in
test
inc
jmp
sub
subb
lcall
outsb
push
outsb
lods
jl
add
in
push
shlb
out
pop
add
mov
add
or
out
and
pop
insb
imul
enter
jg
fdivl
into
mov
push
and
mov
arpl
sub
adc
add
inc
cmpsb
xchg
aaa
mov
mov
push
pushf
mov
fistps
sbb
jno
shl
aam
es
flds
push
sahf
inc
push
cmc
push
into
push
in
xor
ljmp
sbb
pop
cmpsb
lahf
mov
cwtl
inc
mov
mov
jle
dec
adc
push
test
xor
or
lret
fisttpll
imul
addl
in
pop
fs
and
pop
jne
shll
jo
cmp
sub
push
pop
or
add
mov
sbb
call
push
orb
jae
pop
xlat
dec
xor
adcb
sti
mov
jnp
xor
jge
stos
jbe
jmp
sbb
ret
pop
mov
jge
ja
in
stos
xchg
sub
cmp
cmp
sahf
fucom
hlt
and
daa
loopne
sub
or
rcrl
and
xor
out
xchg
xor
cmp
test
test
and
and
dec
movsl
add
xor
hlt
imul
xchg
out
xor
sbb
adc
aad
test
scas
and
subb
enter
icebp
cmpb
mov
mov
call
sahf
xchg
test
dec
lods
pop
push
in
sub
and
xchg
out
cmp
ret
pop
jp
aas
jb
dec
pushl
cmp
inc
mov
adc
or
inc
or
jg
call
lock
sahf
imul
dec
inc
cmp
xor
dec
cli
adc
rorl
mov
mov
xor
push
jo
mov
pop
dec
jle
jmp
adc
sbb
dec
jecxz
lahf
dec
mov
jnp
stos
sub
pop
insl
cmp
addl
lods
pop
imul
cmp
cltd
or
movsb
cmc
cli
push
sub
out
fdivl
and
push
rolb
jle
add
aas
and
add
and
or
test
jl
mov
adc
fcoml
sub
mov
sub
call
sub
imul
inc
mov
test
test
jae
call
sub
sahf
cs
push
in
rcrl
cmpsb
or
xchg
std
or
loopne
dec
int
shrb
inc
cmpl
inc
mov
sbb
add
xchg
in
lods
mov
inc
dec
movsb
lret
rorl
ja
jo
or
outsb
iret
jns
cmpsl
mov
cmc
xlat
sbb
shlb
mov
jo
inc
dec
lret
cmp
cmc
stos
aas
jl
jae
aas
mov
dec
jecxz
and
ja
mov
or
int3
mov
out
dec
push
loope
pop
lds
clc
cmc
test
or
mov
sbb
shlb
enter
add
inc
stc
fiaddl
jb
stos
jbe
cmp
cmpsl
lock
pop
stc
nop
inc
dec
xchg
pop
cld
mov
popf
fwait
sahf
ret
ret
sub
xchg
xor
fiaddl
push
call
mov
pop
insl
xchg
enter
sbb
cmp
add
jne
lea
mov
pop
fldt
bound
jge
fwait
pushf
jno
xchg
orb
xchg
les
sbb
stc
ret
pop
hlt
rcrl
push
aam
aaa
into
jp
and
pop
jmp
roll
adc
push
add
clc
pusha
mov
xchg
imul
shll
adc
fsubp
pop
dec
adc
push
lea
mov
xchg
aas
push
fistps
insb
loop
je
movsl
and
fcompl
mov
imul
test
sbb
cwtl
xchg
add
xchg
cltd
xor
mov
cwtl
cmp
cld
fcoms
add
ds
add
add
loope
lds
fistpl
les
popf
stc
test
push
mov
mov
jl
jne
pop
ja
jb
mov
aad
push
and
inc
jae
mov
insb
aad
pop
inc
push
ljmp
and
sbb
int
pop
adc
jge
or
cltd
cmp
mov
jecxz
sbb
cmp
lods
pop
stc
or
adc
xorl
out
out
or
sahf
scas
faddl
enter
adc
sbb
ret
cmpsb
jne
dec
jge
cld
inc
cld
xor
sbb
test
xbegin
add
mov
adc
push
cld
mov
add
pushf
js
out
mov
inc
xorb
std
insl
jge
clc
cwtl
mov
jbe
pop
and
cmp
inc
inc
or
fidivs
out
cmp
rcrl
mov
call
jmp
sbb
or
dec
pushf
aam
fstp
testl
inc
push
nop
xor
xchg
adc
int3
jp
dec
adc
loope
aaa
lds
inc
outsl
jb
xchg
or
shrl
out
movsl
sbb
adc
jge
jge
insb
rorl
or
mov
imul
icebp
sub
sub
sub
xchg
push
mov
or
jbe
movsl
xchg
jge
dec
push
sub
pop
add
fsqrt
shll
out
movsl
in
aas
mov
mov
notb
jl
ja
dec
sbb
push
aaa
dec
pop
jne
mov
out
stos
les
mov
arpl
out
jb
xor
mov
xor
or
pop
or
stc
mov
push
fwait
movsl
pop
or
fdivs
sbb
add
push
pop
sbb
push
pop
fsubs
mov
pusha
orb
or
push
jg
add
in
hlt
or
mov
dec
aas
icebp
mov
inc
lds
adcb
xchg
adc
xchg
jae
aam
jge
sbb
adc
roll
arpl
mov
xor
sbb
les
loope
add
dec
into
add
mov
cmpsb
mov
sbb
leave
aas
cld
fwait
rcl
and
clc
loope
mov
inc
inc
fstpl
sbb
imul
leave
and
jmp
mov
out
push
sti
les
dec
sti
in
and
add
cmp
out
je
shrb
lret
loopne
shl
enter
rolb
shll
subl
xchg
ss
or
les
loop
xor
fcompl
and
pop
mov
cmpl
js
push
repnz
inc
add
inc
sti
sbb
aaa
mov
adc
test
icebp
lds
cmp
rolb
daa
cli
add
jns
test
inc
movsb
cmp
in
imul
adc
pusha
xor
rcrb
pop
xor
int
aad
lcall
jp
mov
dec
lock
lds
mov
inc
jae
inc
sub
jecxz
ja
cwtl
adc
dec
and
cmp
sub
xchg
cmp
lcall
mul
adc
sbb
adc
int
sub
or
sti
cmp
sub
loopne
pop
and
nop
xchg
dec
lret
aad
jmp
test
sub
aas
fcmovnbe
xchg
sbb
add
in
adc
loop
addr16
push
repz
or
iret
push
mov
leave
push
or
mov
mov
scas
pop
xchg
inc
dec
cltd
dec
add
iret
pusha
fsts
or
sbb
push
pop
xchg
xor
add
out
sbb
cmp
push
nop
push
out
leave
or
pop
movsl
push
push
xchg
fimull
pop
shlb
ljmp
adc
lods
insb
rcl
je
pushf
xor
mov
push
cmp
xchg
shr
sub
in
ret
dec
frstor
push
fidivrs
cmp
sbb
popa
das
in
sub
push
movsb
adc
and
test
xchg
jge
lock
les
inc
lret
and
mov
ss
inc
cmpsl
push
cltd
mov
dec
jns
mov
add
xor
xchg
int3
mov
add
sti
mov
aas
aam
jecxz
movsb
dec
push
pop
sub
sbb
pop
mov
push
jecxz
and
push
mov
inc
dec
mov
out
xchg
dec
fsts
ss
out
iret
in
cs
push
lods
imul
fsubrs
xlat
jmp
inc
mov
aam
insb
aas
test
add
inc
lret
pop
cwtl
cmp
popf
jnp
pop
mov
into
iret
ljmp
test
out
push
in
mov
xor
sub
jmp
cmp
mov
sbb
inc
jae
pop
loop
cwtl
pop
xchg
xchg
scas
jbe
mov
outsl
and
mov
sbb
test
jl
lock
push
fsts
mov
jecxz
leave
popf
dec
and
inc
dec
movsb
and
mov
add
jge
jp
mov
popa
movsb
ficompl
mov
loopne
mov
int
mov
or
aaa
or
jns
ds
fs
mov
scas
jle
pop
or
daa
fwait
sub
subb
lcall
out
dec
rcr
sets
ljmp
jno
out
dec
add
cs
push
lret
adc
insb
pavgb
cmpsb
inc
push
mov
xor
add
mov
or
mov
inc
je
loope
cmpsb
cmp
rcl
sub
add
lret
jg
xchg
inc
xchg
pop
mov
jle
adc
mov
insb
and
xchg
inc
cmp
popf
test
and
xchg
out
aaa
inc
sbb
mov
cmp
cwtl
scas
icebp
int3
mov
mov
sub
aaa
leave
aad
rolb
sarl
mov
cmp
je
fidivrl
int
jae
mov
loope
xchg
shr
mov
movl
pop
fistl
push
psubsb
push
cltd
xchg
adc
das
test
mov
repnz
jg
xchg
call
iret
iret
jnp
xchg
cmp
loop
sbb
mov
fistps
jmp
or
push
adc
jae
ret
pop
sbb
or
sub
cmpsb
lea
jecxz
pushf
inc
inc
mov
cmp
jb
out
xchg
dec
push
sbb
push
and
xchg
lds
roll
jle
pop
inc
push
daa
outsb
inc
insb
add
outsb
push
adc
mov
dec
test
dec
mov
dec
lods
sbb
mov
adc
xchg
cld
cmp
lret
cmpb
push
mov
dec
lret
adc
adc
dec
and
out
movsl
jne
push
int3
imul
shlb
pop
out
rcr
jb
insb
stos
inc
cwtl
fdivrp
pop
jg
mov
loope
pop
dec
adc
orb
lahf
mov
xchg
push
pop
out
push
or
clc
and
mov
iret
mov
gs
sub
xor
int3
rcrb
out
and
jb
push
or
jno
int3
sub
pop
sub
jg
lcall
adc
jo
xchg
dec
xorb
xor
movsb
jbe
loop
add
or
pop
jmp
jl
adc
sub
or
inc
mov
jo
xor
movsb
mov
inc
jmp
inc
xor
rcrl
roll
aad
enter
fimuls
dec
jb
push
fisttpl
mov
push
inc
xchg
pop
push
xchg
push
add
outsl
cmpsb
cmpl
pop
push
gs
mov
pop
dec
mov
data16
push
xchg
pop
pusha
ss
pusha
cmp
mov
popf
lret
sub
add
or
sub
in
fstl
mov
loope,pt
xlat
dec
lock
dec
test
loop
outsb
out
arpl
pop
and
xchg
jle
or
je
xor
fwait
out
orl
cmp
dec
les
divl
mov
dec
inc
or
add
push
jne
movsl
mov
lret
sbb
nop
sub
pushl
adc
testl
mov
push
mov
push
mov
dec
add
and
sbb
outsl
push
or
mov
loop
aas
cld
hlt
insl
cmp
addr16
jb
inc
jae
pop
out
mov
gs
daa
aaa
cltd
and
xor
xor
lods
pushf
out
cld
lods
and
data16
mov
lds
cmp
push
sub
or
xchg
jno
lcall
es
pop
out
outsb
mov
sbb
test
aam
das
iret
mov
inc
xlat
std
jp
xchg
or
or
lea
dec
fidivs
cmp
sub
mov
roll
lods
xchg
adc
sbb
xchg
inc
adc
jl
stos
aas
xchg
fnstsw
add
or
jge
pop
xchg
pop
inc
in
stos
lods
mov
outsl
iret
shrb
inc
mov
stos
push
ds
pop
shr
popa
pop
outsl
xchg
js
lods
mov
shl
fiaddl
cmp
decb
push
stc
jo
push
mov
jne
pop
mov
fs
pop
dec
xchg
mov
out
es
fwait
xchg
hlt
inc
pop
adc
push
add
sbb
or
shl
lds
or
adc
data16
mov
mov
jmp
or
sub
lret
xchg
xchg
cmp
into
push
imul
push
sbb
out
in
lds
dec
or
pop
sub
mov
lods
inc
pop
call
add
and
jmp
daa
and
aas
or
and
jp
cmp
fwait
mov
pop
cmovnp
add
gs
mov
pop
das
mov
push
fisubrl
fdivrp
mov
testl
popa
or
les
xor
sub
shll
call
rol
inc
adc
fwait
push
dec
xchg
jae
mov
jnp
jbe
mov
mov
imul
fwait
xchg
movups
fdivl
push
inc
icebp
pop
sub
fwait
push
push
xor
cli
mov
inc
push
fisubl
pop
jl
mov
mov
nop
jl
and
mov
lcall
dec
jmp
adc
sub
sahf
push
jmp
pop
outsb
push
fadds
test
push
add
xchg
in
push
sub
sbb
out
out
cmp
adc
pusha
xor
adc
xchg
jmp
jecxz
ret
cld
hlt
fmull
xchg
inc
xchg
xorb
sbb
into
pusha
xor
push
dec
adc
cwtl
xorb
lret
add
mov
dec
mov
jne
mov
stos
popf
int3
inc
jecxz
mov
cli
iret
fwait
in
clc
sub
mov
inc
inc
in
or
and
mov
cmc
movsb
push
lret
mov
dec
push
mov
cli
push
ds
pxor
pop
inc
cmp
xchg
adc
mov
aas
xchg
ljmp
mov
hlt
scas
push
cltd
in
mov
xor
aas
cmp
fwait
rcrb
sub
sub
dec
mov
imul
sbb
subl
pop
dec
cmc
mov
and
pop
inc
or
out
out
xchg
ds
push
jbe
mov
ret
in
jbe
fs
ror
test
fsts
xor
push
out
cmpsl
rorl
lods
leave
dec
faddp
fs
xor
sub
aaa
mov
test
test
mov
and
sub
ret
repnz
mov
in
bound
sbb
aam
stc
or
add
stc
mov
or
mov
push
mov
rcl
fstps
xor
mov
fadds
xor
sub
leave
fwait
mov
sti
repz
sub
test
test
bound
call
loopne
jle
fdivrs
push
add
arpl
fsubrp
jno
gs
inc
mov
push
add
push
testl
mov
outsb
and
lret
rcrb
data16
test
rclb
dec
xchg
push
shl
or
cmp
pushf
jb
add
fwait
inc
jg
xchg
aad
add
mov
sbb
lret
mov
dec
test
add
adc
ficoml
push
aas
mov
test
les
cwtl
dec
jecxz
jno
push
dec
xchg
xorl
mov
add
stos
mov
cld
scas
cmc
and
je
adc
icebp
or
or
pop
arpl
inc
pop
inc
aam
stos
xchg
jnp
insl
movl
jnp
inc
add
pop
popf
popa
rcrb
idivb
xchg
dec
pushf
ja
adc
outsl
mov
adc
in
and
gs
aas
and
insl
jo
inc
jp
pop
leave
jno
mov
mov
cltd
push
lods
cmp
lock
cmp
es
mov
mov
push
sub
mov
test
xchg
rclb
mov
je
and
loopne
pop
lcall
mov
mov
push
and
lock
pusha
push
xchg
call
stos
arpl
push
dec
mov
mov
fldt
push
add
mov
ljmp
xorb
in
ss
push
inc
mov
std
dec
mov
test
subb
mov
sub
scas
ror
adc
inc
xor
and
mov
xchg
repnz
les
xchg
mov
jp
ljmp
fnsave
insb
sub
test
loopne
cmpsb
ljmp
inc
outsl
inc
mov
jne
stc
cmpsl
push
adc
jbe
scas
add
ds
lea
mov
in
scas
mov
stc
les
cmpsl
aas
pop
inc
and
mov
jno
inc
and
imulb
ss
ror
jmp
data16
fidivs
and
cmp
push
pop
mov
mov
mov
dec
dec
mov
repz
loopne
out
mov
adc
inc
lods
sbb
test
mov
shll
addl
addl
xor
sub
mov
pushf
enter
cmp
into
loopne
jl
idivl
aam
pushf
xor
les
test
dec
popa
aaa
nop
or
mov
pop
mov
rorb
jno
xchg
rol
or
sub
dec
mov
add
outsb
cli
insl
mov
bound
test
les
hlt
fs
cltd
pop
icebp
xor
adc
test
add
pop
adc
fisubrl
cmpsl
sbb
sub
mov
sub
inc
test
jle
loopne
mov
clc
jmp
orb
inc
add
aam
push
sbb
or
lahf
add
test
jmp
pop
push
dec
iret
xchg
les
cmp
aaa
mov
dec
jg
ret
iret
push
xchg
add
in
lock
out
out
lret
ret
imulb
pusha
in
xchg
rclb
fimuls
push
and
aas
xor
jge
or
sahf
lret
mov
push
sub
xor
or
aas
iret
dec
dec
pusha
dec
test
negb
mov
ja
inc
push
pushf
inc
inc
mov
sub
out
dec
push
ss
dec
out
cli
incb
push
mov
stos
movsb
cmp
fmull
cmp
cmp
repnz
hlt
and
cltd
imul
loop
and
dec
call
aam
cs
insb
mov
ret
pop
ret
enter
xchg
not
popf
out
mov
xor
data16
bound
js
stc
pop
andl
aas
ds
pop
jnp
js
out
sub
sbb
or
enter
cmp
jge
inc
xchg
inc
ljmp
mov
add
adc
stos
push
scas
pop
int3
clc
jns
xchg
hlt
jb
int3
mov
mov
mov
pop
iret
jl
sub
cmpsl
jne
std
fistpll
mov
sub
out
xor
imul
add
test
out
subb
cli
outsb
and
jg
jno
in
or
shll
cmp
xchg
adc
arpl
jp
scas
hlt
aam
data16
jb
rcll
cmpl
cld
xchg
xchg
sbb
or
pusha
aas
xchg
adc
int
dec
lahf
xor
das
mov
sub
popa
cmc
jge
mulb
mov
adc
cli
aas
icebp
clc
ds
sti
pushf
mov
push
outsb
cmpsl
lea
mov
or
push
xchg
sahf
orl
add
ja
xor
jae
stc
dec
jmp
or
je
pushf
jmp
dec
sahf
xlat
cs
iret
mov
inc
nop
sub
pusha
pushf
das
jmp
fisubs
ret
daa
pop
xchg
rorl
add
jne
dec
push
jns
in
stos
sti
jle
imul
sub
mov
adc
or
pop
push
sbbl
pop
cmp
mov
xor
fistl
icebp
xchg
push
loop
mov
es
xchg
sbb
test
fisubrl
je
sub
mov
push
rclb
lcall
fsubs
inc
or
push
iret
mov
daa
stos
and
mov
jmp
or
pushf
mov
mov
je
jge
push
andb
loopne
or
mov
out
jmp
mov
jo
mov
push
and
loope
mov
aad
and
and
sub
cmp
push
aas
push
mov
pop
sti
das
rcrb
cmp
in
fs
and
pop
mov
jmp
shlb
movsb
sbb
sub
mov
int3
iret
pop
loope
cmp
outsl
pop
adc
xor
repnz
dec
xor
mov
nop
mov
sarl
and
test
cli
adc
or
dec
cmp
mov
cmp
mov
jnp
jo
call
and
cmp
arpl
add
mov
push
lahf
mov
jl
dec
test
mov
mov
xchg
or
mov
xor
mov
out
dec
shl
fsubs
fldt
push
pop
addl
mov
es
shl
icebp
jno
stos
outsl
pop
dec
dec
mov
dec
fsubrl
mov
mov
dec
ja
jnp
pop
dec
inc
repz
dec
test
or
push
fwait
sahf
jne
xchg
sbb
push
in
xlat
aas
lds
mov
jns
add
fimuls
es
xchg
adcl
inc
add
mov
or
bound
js
mov
sbb
or
add
into
sbb
aaa
pusha
cmpsl
xchg
push
enter
mov
and
testl
mov
adc
lcall
xchg
es
outsb
cli
jecxz
ja
mov
jl
and
cmp
push
sub
inc
lds
jae
mov
fildll
clc
push
out
fbld
pop
push
jae
mov
add
aam
sbb
dec
jmp
add
bound
out
cltd
aad
lcall
int3
or
rclb
pop
or
jmp
sbb
pop
sub
shlb
pop
or
repnz
lret
ss
in
jne
dec
xor
orb
fs
das
push
mov
rcrl
sub
jl
or
push
add
test
mov
subb
xchg
pop
xchg
je
push
push
dec
xchg
shll
xor
pushf
lock
mov
cmp
insl
aaa
mov
push
fxtract
jl
repnz
sbb
mov
jns
push
and
dec
sbb
jp
mov
movsl
xchg
pop
jbe
push
sbb
xchg
adc
or
mov
repnz
or
ret
iret
jns
or
push
out
sbb
in
mov
subb
inc
push
add
or
cmp
pop
fucomi
call
or
push
adc
adc
push
mov
scas
add
inc
or
idivb
push
add
xor
mov
mov
xlat
sub
leave
dec
and
inc
or
xchg
mov
dec
jne
mov
sub
in
test
pop
scas
push
sysret
jmp
cmp
pop
xchg
mov
or
pextrw
dec
mov
movsb
into
xor
add
mov
insb
int
js
shll
mov
nop
faddp
rcrl
out
mov
inc
ss
push
divl
call
enter
in
pop
dec
sbbb
hlt
aas
dec
das
cmp
fadds
cmp
in
jl
pop
mov
repnz
and
pop
movsl
jno
dec
clc
les
repnz
xor
sbb
push
test
pop
pop
jmp
adc
push
decb
divl
ret
scas
xchg
mov
popf
hlt
lock
fstpt
aad
jp
ret
pop
rcrl
das
pop
push
mov
std
das
mov
imul
mov
xchg
mov
cmp
int
into
mov
dec
mov
das
xor
mov
add
mov
pop
loopne
mov
dec
sub
adc
movsl
arpl
mov
xorb
xlat
dec
lock
fsubrs
js
push
std
cmpsb
pmulhw
sub
scas
pop
push
push
sti
data16
xor
ljmp
lret
daa
xor
mov
adcl
xor
push
loope
xor
or
shrb
lcall
push
mov
mov
push
adc
movsb
adc
jl
test
inc
or
xor
adc
xchg
sahf
jg
sub
insl
fisttps
inc
mov
adc
mov
hlt
jmp
or
dec
jge
lret
jl
repz
mov
test
aam
js
shlb
loopne
out
lods
stos
fwait
jp
fildl
jp
pop
dec
pop
add
test
push
adc
cmc
into
repz
cmp
bound
ficoms
sbb
sub
hlt
push
cmp
pmaxub
loopne
add
test
sbb
push
add
sub
or
jecxz
mov
xchg
lea
dec
sbb
cltd
xchg
xchg
inc
mov
test
scas
cmp
push
jnp
dec
add
pop
and
cmp
leave
outsb
and
sbb
mov
xchg
pop
outsl
jmp
sbb
cmp
lods
mov
bound
gs
jno
das
inc
push
push
inc
aam
sbb
xor
adc
cmp
mov
add
cld
pop
fs
in
into
pop
push
popa
fisubs
mov
lret
fs
mov
xor
cmpsb
stos
out
pop
clc
fildl
push
cmp
shlb
mul
lcall
adc
xchg
xchg
or
jge
shl
je
cmp
jb
cmp
mov
fbld
lret
lahf
fwait
sbb
movsl
jg
aam
mov
lea
rolb
lds
sub
jle
das
outsl
inc
xchg
mov
cwtl
ds
xor
jecxz
lods
pop
test
pop
jb
call
jne
sbb
inc
mov
add
xchg
iret
sbb
jbe
pop
inc
push
and
cmp
das
dec
sub
mov
pop
lock
pop
in
pop
or
cmp
xchg
or
inc
aas
dec
push
or
fwait
lock
pop
jne
sub
mov
push
out
inc
mov
cmp
loope
xor
leave
fs
stos
jge
loop
push
xor
dec
movsb
test
test
add
cmc
sub
aas
jecxz
push
mov
movsb
ds
lea
aam
pop
mov
xor
jae
sti
sbb
pop
cmp
xor
jae
into
out
inc
inc
jg
movl
xor
cli
dec
push
pop
ret
idivb
inc
leave
jg
xlat
push
dec
std
add
jnp
push
lahf
mov
insl
adc
test
cld
xlat
lcall
icebp
lcall
mov
in
jb
bound
inc
mov
ret
xorl
pushf
sbb
jl
je
push
mov
or
in
imul
dec
mov
xchg
in
int
push
icebp
and
stos
inc
or
cmp
mov
mov
adc
mov
push
test
xchg
pop
ss
testl
xchg
mov
cmp
je
mov
adc
sub
sbb
test
push
fstpl
fisttpll
jne
rcrl
pop
data16
dec
jle
in
mov
scas
inc
jle
push
add
mov
sbb
and
cmc
sahf
popf
and
pop
jle
shll
sub
xchg
addl
mov
dec
ss
jae
sub
test
push
shll
lods
xor
cmpsb
cmc
push
dec
xor
aas
les
push
lods
popa
lret
jo
lods
xor
sub
movsl
js
xor
or
jo
or
fs
aam
stc
sub
into
mov
xchg
or
push
push
insb
and
imul
and
lret
popf
rol
xchg
jle
push
xlat
stos
jae
leave
or
in
repnz
cltd
fmull
and
inc
in
cli
gs
push
and
and
mov
movb
ds
cld
pop
and
push
stc
or
inc
xor
dec
out
push
cmp
xor
push
das
aad
mov
and
fs
pop
jp
inc
loop
cmpsl
jo
je
cmpsb
outsb
pop
cwtl
inc
or
xor
inc
test
imul
ret
and
xor
adc
jge
fwait
scas
outsl
mov
imul
clc
call
imul
nop
or
cmp
mov
test
pop
or
dec
flds
dec
aaa
loope
or
xor
iret
adcl
ret
insb
xchg
movsb
add
in
stc
cltd
aas
in
lods
cmpsb
movsl
lret
push
inc
lock
int
clc
daa
push
xor
ret
push
insl
adc
add
mov
shll
jmp
pop
jg
and
ljmp
inc
inc
push
decb
push
push
xor
lret
xchg
movsl
movsb
and
into
test
daa
mov
cmp
clc
pusha
das
xchg
sub
in
aaa
testb
sahf
loop
loopne
cld
stos
cltd
inc
mov
dec
cmpl
mov
pop
mov
out
scas
sbb
sbb
int
jmp
lcall
js
push
mov
mov
dec
sbb
fdivrs
ds
fsubs
mov
addr16
push
jp
jb
and
pop
xchg
movsl
test
test
dec
xor
add
test
mov
push
call
jbe
push
les
fmuls
int
imul
xor
pop
sbb
mov
daa
adc
dec
mov
sarl
out
push
ret
in
sbb
shll
fbld
insb
jle
xor
in
sub
add
cli
test
sbb
call
insl
mov
jbe
push
nop
dec
mov
xor
mov
inc
pop
es
xchg
es
shrl
dec
addr16
into
outsl
sbbb
test
sbb
popa
dec
les
mov
sbb
popa
mov
jge
dec
sub
repz
out
fstps
fs
test
xchg
stos
sub
jne
std
dec
push
enter
rcll
dec
inc
or
stos
ss
inc
jo
out
mov
jl
sbb
ds
or
pop
sub
movsb
dec
and
mov
mov
xchg
hlt
rorb
add
aaa
jg
jno
mov
pop
jb
nop
lcall
stc
or
xor
cmpsl
flds
lcall
lea
dec
inc
pop
xor
in
jp
and
es
jae
mov
mov
push
repnz
sti
dec
sbb
jge
mov
mov
or
mov
cs
std
pop
mov
in
js
mov
in
loopne
push
jl
in
cmp
push
cmpsb
mov
pop
mov
inc
mov
sbb
ret
out
sahf
sbb
out
mov
push
andb
loop
xchg
sbb
aad
add
int
jne
lret
mov
add
cmp
xor
sbb
xchg
xchg
lea
push
insb
in
lret
pop
fisubrl
xchg
test
sub
and
lea
xor
lcall
dec
shlb
jnp
insb
insb
jnp
pop
jb
int
sub
cld
push
test
inc
pop
pop
adc
pop
test
inc
or
je
stc
test
enter
pushf
xchg
lahf
movups
pop
lret
jnp
loope
in
push
and
enter
jbe
pop
jmp
jo
mov
test
mov
test
adc
fimull
mov
movsl
imul
fsubr
outsb
adc
gs
cli
xor
pop
loope,pt
lcall
inc
out
cli
sahf
sbb
repz
xor
mov
fldl2e
mov
push
mov
mov
and
rcr
xor
and
leave
add
fcoms
out
sbb
and
push
jmp
adc
fs
pop
data16
lcall
inc
push
sarb
lcall
mov
jmp
mov
je
aas
push
fs
daa
jae
fistps
pop
cmp
sarb
cli
fs
jmp
pop
into
mov
mov
pushf
fwait
inc
lahf
fiaddl
xor
lods
test
andl
rcr
and
cli
mov
sub
push
pop
adc
arpl
or
int
jnp
mov
int3
cwtl
push
jmp
in
xor
out
cmp
sub
xchg
jno
add
arpl
sbb
pop
sub
test
shlb
and
jg
pop
pop
aad
jno
cmpl
sar
or
and
sbb
lahf
push
jmp
xlat
subb
xor
jae
std
push
sub
sahf
mov
mov
clc
inc
rclb
gs
lock
aaa
daa
and
xchg
push
repz
leave
addb
pop
sahf
test
add
push
xchg
loop
pop
je
sarl
mulb
xor
add
sti
push
int
mov
mov
hlt
enter
inc
gs
push
push
loopne
and
jl
adc
add
test
and
sub
pushf
dec
dec
jbe
or
out
xor
xchg
in
mov
cmpl
incb
sbb
rsm
mov
push
mov
jecxz
push
cmpsb
xchg
pop
insl
divb
push
inc
mov
faddp
pop
popf
lahf
pusha
add
fsubr
rclb
mov
repnz
lret
stos
in
out
gs
inc
jecxz
sub
mov
in
shrl
adc
sub
aaa
ret
gs
aas
sbbb
add
ds
popa
dec
pusha
push
push
add
xlat
cmp
cld
cmpsb
inc
sub
jmp
or
lret
jge
pop
call
push
scas
inc
test
or
mov
sub
pop
mov
ret
jae
fistps
je
std
and
das
nop
ss
fsubl
cmp
arpl
shlb
jns
loop
stos
loopne
int3
leave
daa
pop
lock
cmp
jb
shll
lahf
pop
outsb
inc
mov
jo
push
mov
adc
jle
nop
leave
imul
int
cmp
jge
pop
xor
shrl
pop
mov
ds
fidivl
jecxz
push
cmpsl
sti
push
pop
xlat
and
push
cwtl
mov
imul
jp
lods
mov
or
mov
testl
xor
popf
xorl
add
imul
iret
xchg
xorl
or
sarb
xchg
mov
mov
mov
cmc
mov
inc
lret
call
jge
jb
addl
add
pop
ljmp
mov
leave
xor
pop
pop
sbbb
jns
std
sub
out
into
je
add
cmp
sbb
out
pop
mov
jbe
stos
daa
hlt
jg
push
jmp
inc
xor
cli
testl
ljmp
int
imulb
mov
ja
int3
bound
add
or
mov
add
test
jb
and
inc
inc
cmpsb
stos
inc
iret
lcall
loop
add
sahf
add
push
mov
out
arpl
stos
or
and
mov
or
aas
lahf
scas
mov
xchg
clc
ret
test
and
mov
fwait
andb
lahf
pop
je
arpl
cli
mov
inc
mov
add
and
loope
sti
xchg
pop
sbb
pop
icebp
and
pushf
push
andl
dec
daa
dec
push
mov
push
jbe
mov
lods
or
mov
mov
pop
jmp
sbb
push
rorb
mov
mov
sahf
stos
lds
outsl
dec
mov
ljmp
mov
cld
in
sbb
ljmp
xchg
cli
pop
cmp
iret
mov
mov
jg
dec
fmul
mov
dec
cmc
cwtl
lret
gs
fldenv
cmp
int3
sbb
mov
aas
dec
in
outsb
sub
push
lret
push
adc
out
cli
jge
push
mov
imul
jl
adc
fidivs
jmp
push
jmp
push
dec
fisubrs
xchg
mov
push
flds
xchg
fiadds
shll
cmp
or
xchg
lea
inc
pop
aas
test
and
lahf
aas
add
popf
xchg
cli
neg
int3
call
ds
pop
cmp
mov
xchg
loop
in
scas
lods
test
mov
pusha
inc
add
fisttps
or
icebp
push
fidivrl
cld
xchg
pop
subl
test
cmpsl
and
nop
jne
push
mov
push
cwtl
push
test
movb
push
gs
cwtl
push
push
stos
enter
mov
leave
jbe
inc
in
xchg
insl
xor
out
mov
sub
jmp
mov
mov
fistpll
loop
push
push
cmp
arpl
imul
xchg
dec
or
rclb
fucomp
stos
mov
mov
xchg
mov
idivb
add
nop
lds
sbb
dec
mov
cmp
jno
daa
sub
mov
jb
ret
adc
or
pop
mov
sti
in
stc
and
pop
sar
jecxz
stos
stc
add
fs
stos
shll
xor
pop
negl
sbb
xorb
icebp
ret
fcomi
jnp
bnd
movl
pop
je
adc
mov
xor
dec
pop
insl
cld
scas
inc
stc
cmp
add
fdivp
push
jo
mov
icebp
hlt
xchg
lret
or
cmova
scas
pop
mov
mov
push
or
sbb
pop
loopne
xchg
test
fadds
cmp
mov
cs
mov
leave
sbb
jle
aas
scas
inc
in
lret
lret
pop
add
xor
movsb
repnz
bound
mov
leave
lock
or
cmpsl
jg
push
jg
push
rorl
loop,pn
leave
pop
hlt
repz
jge
xchg
dec
and
jg
xchg
and
jle
into
mov
dec
xchg
rorb
pop
mov
lock
xchg
mov
xor
jg
sbb
mov
in
jmp
test
shlb
xor
push
push
pop
inc
xchg
in
pop
fbld
jo
divl
sub
dec
ret
popa
push
mov
push
xor
test
cwtl
out
test
or
out
push
movsb
cmp
lahf
mov
cmp
mov
mov
daa
xchg
mov
out
int3
and
mov
fsub
sbb
adc
cs
add
fldt
mov
test
push
push
xor
out
fcomps
lret
fimull
and
dec
out
subb
dec
out
cmp
lods
mov
imul
into
adc
lds
pop
pop
cmp
xor
outsb
xlat
addb
dec
movaps
sbb
dec
fbstp
pop
xor
jb
fistpl
sahf
mov
fsubp
lret
aaa
fcoms
loopne
jno
addb
sbb
jle
xchg
stos
xchg
push
cs
int
pop
rclb
jle
pop
mov
dec
push
out
xor
sbb
call
sub
and
cld
xchg
and
arpl
loopne,pt
jnp
xchg
pop
cmp
or
bts
stos
lock
inc
sub
loope
inc
fistl
jb
inc
jbe
shr
mov
testl
mov
pop
xchg
out
je
sbb
pop
inc
sbb
loop
loopne
or
xorb
jmp
inc
pop
in
shlb
sbb
out
cltd
loop
pushf
adc
lret
ss
pop
pop
pusha
shrb
aam
daa
int
decl
or
jae
jns
lret
cmp
lds
add
mov
fdivrs
lcall
inc
mov
imul
shrl
js
scas
sub
cmp
cmp
inc
roll
dec
outsl
andb
cmc
fmul
lods
push
outsb
loopne
ficomps
scas
xchg
nop
xor
mov
fimuls
jmp
mov
hlt
call
clc
or
cmp
ljmp
stos
add
adc
dec
lcall
or
push
sub
mov
xchg
aam
clc
mov
fdivl
push
sub
add
cltd
out
xlat
icebp
pusha
out
test
negl
xor
pop
jp
jno
mov
daa
pop
imul
mov
fildl
and
add
rcrb
rcrl
fwait
mov
xor
aaa
out
out
jl
imul
cld
jmp
or
lods
into
cmc
fadds
into
push
xor
add
sti
xchg
mov
fdivrl
jmp
dec
inc
pushf
push
push
jne
dec
add
leave
pop
pop
ljmp
scas
and
addl
mov
scas
js
je
daa
jg
repz
mov
or
or
arpl
mov
adc
cli
in
mov
sub
nop
sbb
push
sub
pop
imul
xor
pop
pop
das
inc
test
jnp
js
push
push
and
insb
pop
adc
add
aam
sar
mov
mov
ret
andb
loopne
dec
push
mov
mov
punpcklwd
xor
cmp
dec
push
insb
movsb
aaa
test
mov
lds
call
jmp
add
push
imul
xlat
test
std
bound
daa
push
cmp
sbb
mov
sub
inc
gs
jmp
mov
dec
dec
testl
mov
mov
rorb
aam
movsb
jmp
lea
push
xchg
pop
in
pop
fwait
imul
fiadds
je
push
jae
or
mov
lock
and
sbb
outsl
cli
gs
int3
inc
andl
cld
sbb
xchg
xchg
shrl
cli
and
addr16
mov
out
cli
mov
pusha
sub
stos
cmp
cmp
mov
xor
jecxz
dec
shll
dec
addl
add
push
pop
cmp
jbe
enter
imul
add
aam
js
stc
jmp
add
ljmp
dec
add
sbbb
jmp
mov
or
addb
mov
loope
pusha
gs
jl
add
loopne
push
shlb
pop
push
sti
test
out
lea
cmc
or
or
and
jp
inc
mov
mov
nop
sub
mov
jno
cmp
mov
dec
inc
shlb
dec
outsb
push
fdivr
jnp
fnstsw
stc
ja
cmp
mov
push
mov
jg
sbb
xchg
jg
sbb
mov
cmpps
leave
mov
out
fld
pop
inc
scas
mov
push
cs
enter
movsl
mov
push
sub
aas
sbb
imul
push
je
mov
adc
rorb
iret
pop
mov
or
imul
into
ret
cmc
jae
roll
inc
lock
xchg
push
adc
and
roll
mov
aam
xchg
add
add
mov
adc
or
jp
loopne
sti
in
push
out
fcoml
repnz
mov
and
scas
inc
stos
ret
stos
ret
addr16
cld
ljmp
xchg
insb
and
dec
ja
mov
or
jg
inc
jb
mov
jno
xchg
add
pop
inc
popf
jle
cwtl
outsl
cmc
subb
addr16
push
lret
cmp
pop
and
sub
mov
js
pop
sbb
adc
testl
push
out
imul
insl
test
cmp
imul
add
ret
js
es
mov
cmp
or
mov
outsl
add
sbb
sub
cmp
push
xchg
and
xlat
jno
add
stos
ljmp
cltd
lock
ss
test
nop
outsl
or
mov
jns
mov
mov
stc
pusha
sub
js
les
mov
xor
jg
jmp
cli
adc
shrl
mov
dec
callw
sub
mov
cmp
mov
bound
push
push
pushf
lcall
pop
add
cmpsb
mov
cwtl
or
pusha
xchg
xchg
or
enter
jmp
outsl
je
add
fcoml
addr16
or
mov
arpl
es
sbb
xchg
sbb
xchg
push
jne
popa
aad
arpl
cltd
test
inc
into
stos
shrb
ret
hlt
lahf
or
mov
mov
int3
shll
jmp
faddl
in
flds
jno
mov
push
lea
stos
repz
int
popf
mov
jb
leave
add
fisubrs
data16
call
sub
je
mov
pop
repnz
popa
xor
xchg
int
jp
lret
mov
dec
xorb
pop
xor
lret
mov
insl
sbbb
idivb
pusha
loope
gs
cltd
test
mov
jnp
jno
imul
fdivrs
xorl
and
xchg
or
test
mov
xor
xchg
ss
out
xor
or
jae
pop
popf
sti
mov
cli
add
movsb
ja
push
insl
push
push
mov
sub
cli
sub
movsb
mov
and
jl
xchg
mov
and
pusha
mov
xchg
jne
dec
sahf
sbb
lods
loopne
pop
xor
add
std
pusha
mov
sar
scas
cmp
mov
shll
xchg
insl
pop
cmp
jo
mov
orb
ja
shlb
mov
and
dec
and
fildl
insl
push
mov
insl
cmp
push
test
mov
pop
jge
insb
xor
inc
out
sbb
aaa
xor
mov
js
int
fcompl
insb
xchg
into
flds
in
mov
push
add
mov
push
xor
in
and
dec
sahf
mov
mov
xor
or
xchg
cmp
out
dec
mov
daa
and
xor
icebp
das
push
mov
bound
popa
jns
sub
ljmp
or
lea
loopne
insl
lea
jp
and
aas
rcrl
mul
cmpl
xchg
sub
outsl
and
ds
mov
cmpsb
push
sbb
or
and
out
mov
jge
in
sbb
and
inc
fwait
pop
mov
sbb
jle
xor
adc
mov
cwtl
out
jbe
imul
ret
lahf
std
xchg
sahf
sbb
jb
int3
idiv
sub
test
sub
pop
push
mov
jb
lds
and
divb
push
push
cld
cli
fstps
jp
imul
ret
inc
aam
cmpsb
jbe
insl
das
out
push
adc
pop
mov
popf
lock
arpl
mov
subl
js
addb
stc
dec
adc
in
enter
aam
xor
pop
add
aas
cmp
cmp
test
popa
sbb
or
push
aaa
ret
dec
push
and
dec
jno
cltd
fildll
cltd
les
cmp
xchg
jns
pop
fistps
sarb
jl
push
sub
cmp
in
jp
add
and
je
out
add
and
jb
fsubrl
sub
xor
mov
cld
popf
adc
xor
rorl
adc
lret
add
xchg
ret
add
push
adc
addb
movhps
pop
inc
mov
and
scas
ljmp
sub
mov
mov
push
jo
lods
push
pop
xlat
mov
test
mov
dec
cmp
fisttpl
ret
fiaddl
xor
addr16
rcrl
sub
stos
cwtl
pop
inc
push
aas
pusha
sbb
les
ficoms
xlat
sub
movsl
xchg
inc
out
jge
adc
shl
mov
in
add
inc
rcrl
cld
gs
je
jp
xchg
xchg
lret
xchg
sub
adc
jmp
inc
push
xor
add
and
mov
push
xor
stos
daa
into
insb
inc
fidivl
gs
popa
inc
jge
lahf
mov
mov
popf
mov
rorb
and
ret
bound
inc
dec
aam
test
loope
cmp
dec
and
jbe
test
mov
cmpl
jl
out
push
sahf
sbb
rolb
push
or
call
pop
cmp
mov
dec
fisubrs
and
mov
or
mov
mov
pop
xlat
cmpsl
jo
ljmp
push
loopne
mov
push
mov
dec
stc
rcl
lahf
jge
push
rcrl
and
loop
jp
pop
leave
mov
nop
fwait
jno
ds
movsl
jno
incl
jo
and
rcrb
cltd
and
mov
mov
or
dec
inc
sbb
lock
pushf
dec
dec
push
inc
inc
cltd
out
aas
push
imul
xorb
imul
pop
aaa
push
rcl
add
add
lods
mov
popf
fsubr
loop
cmp
stos
dec
push
push
xchg
jge
cmp
ja
mov
outsl
sbb
xchg
cmp
lds
mov
mov
xor
gs
mov
jns
add
aas
rolb
int3
ss
ror
sub
dec
rorb
xlat
stos
adc
fsubr
ret
mov
push
cltd
xchg
in
jno
jne
pop
ret
daa
into
sbb
jbe
negb
ja
imul
bound
or
sub
xchg
jp
orb
loop
add
cmp
loopne
aas
push
and
pop
mov
scas
stos
ljmp
cs
stc
adc
cmc
add
pop
pop
push
xor
or
movsl
pop
cmpsb
sbbb
aaa
iret
int3
outsb
out
shll
jo
shl
into
adc
hlt
mov
mov
iret
out
cmp
test
pop
pop
repz
sub
xchg
fs
in
mov
nop
pop
mov
popf
test
std
aam
pusha
popf
orb
sub
xlat
jge
ja
xor
push
leave
lcall
pop
xchg
xchg
add
mov
sbb
fbstp
pop
cmc
movsl
enter
pop
push
jnp
outsb
rcll
cmpb
or
jmp
mov
ja
je
mov
jae
adc
out
mov
mov
xor
lahf
jns
sub
dec
aam
cld
sub
pusha
test
cmp
lahf
mov
dec
scas
imul
mov
push
xchg
ljmp
xor
jbe
mov
xor
adc
pop
mov
out
pop
in
out
insl
and
insl
or
xchg
outsl
mov
arpl
loopne
mov
mov
and
sub
lret
dec
inc
sbb
shlb
insl
lods
dec
dec
sahf
jae
and
push
ds
es
cmc
sub
jnp
push
pop
push
mov
cmp
xor
pop
xor
sub
xchg
idiv
push
not
push
dec
jg
repnz
cmc
mov
sahf
mov
int3
mull
cmpsb
xchg
bound
mov
xlat
lret
shlb
xor
scas
xor
stos
push
mov
jmp
test
rolb
mov
test
xchg
daa
add
ret
or
dec
fistpll
mov
insl
xor
sahf
fs
aaa
out
in
jno
shrb
enter
rolb
outsb
popa
push
outsb
xor
insl
arpl
xchg
cli
push
and
lea
mov
ljmp
js
cmp
cwtl
rolb
rolb
dec
outsb
test
jb
add
xchg
je
push
lods
cmp
xchg
jbe
bound
cmp
lods
lcall
dec
int3
aam
fs
xlat
xchg
out
lods
xchg
cmp
popa
mov
aad
repz
daa
cmpsl
add
mov
sub
xchg
orb
pop
adc
sti
out
sbb
push
test
jecxz
lds
ja
mov
pop
test
rolb
pop
jmp
xchg
imul
aaa
imul
jle
xchg
xchg
add
cmpl
inc
jnp
pop
dec
aad
or
rcrb
aaa
adc
testb
fsubs
pop
inc
cltd
push
aad
push
movsl
repnz
dec
outsb
xchg
or
xchg
mov
cld
mov
sbb
ret
mov
or
int3
dec
xor
cltd
xlat
jge
mov
test
hlt
filds
adc
jge
xchg
insb
sub
sbb
cmp
mov
inc
cmpsb
icebp
cmpb
cmp
jp
push
add
ja
push
mov
dec
mov
mov
scas
nop
push
stos
jmp
outsl
mov
xor
push
fdivrl
inc
mov
hlt
js
insl
mov
aam
xor
sbb
or
pusha
loopne
and
cmp
xor
in
cmp
push
or
iret
xor
andb
inc
lcall
push
or
mov
mov
inc
lods
mov
mov
and
loopne
and
mov
mov
rorb
pop
mov
pusha
and
jg
in
scas
out
push
test
push
les
dec
jne
mov
pop
sbb
add
and
inc
xchg
sub
adc
out
mov
pushf
sub
xor
fldt
scas
aas
sub
jnp
mov
sbb
test
jle
clc
push
sbb
sub
jno
push
ljmp
fs
clc
jmp
jmp
fwait
fwait
sbb
inc
mov
lret
test
add
pop
fldl
dec
add
add
xorb
inc
rcrb
sub
cmpsb
and
add
push
out
frstor
stos
cmp
cmpsl
adc
xor
rol
jg
xchg
mov
arpl
dec
and
pop
fcom
fdivrs
or
mov
and
jae
push
int
mov
shrb
dec
dec
adc
cmp
cs
ds
mov
bound
add
cmpsb
pop
lahf
xor
inc
inc
popf
inc
cmp
pop
dec
cmpsb
mov
imul
mov
mov
add
xor
add
in
pop
ss
popf
insl
push
mov
add
divl
pop
lock
insb
or
std
lea
push
sti
push
into
dec
aaa
dec
xchg
rcrl
and
sub
loopne
adc
cwtl
sbb
mov
and
and
mov
mov
inc
mov
es
int
mov
sti
inc
pop
lahf
aam
hlt
dec
test
icebp
lock
jg
and
push
cltd
mov
xchg
adc
fisubrs
loope
jb
mov
sub
mov
popa
mov
mov
loope
in
ljmp
sub
js
add
cmp
mov
test
out
mov
mov
fidivrs
hlt
push
inc
jns
pushf
test
pop
mov
mov
cmc
ss
in
mov
and
loop
inc
test
fs
xchg
movsb
add
int
xor
pusha
mov
ret
push
das
icebp
add
xchg
or
or
cwtl
push
scas
insl
xor
mov
sub
xchg
inc
test
pop
movl
xchg
inc
mov
xchg
mov
adc
in
jb
push
dec
jns
je
cmp
add
inc
je
es
shrl
fprem1
pushf
mov
jmp
mov
ljmp
les
inc
std
dec
mov
mov
sub
pop
xchg
xchg
aaa
pusha
fldt
mov
xor
cwtl
add
sub
and
cmp
xlat
data16
push
scas
shll
and
sub
jg
mov
push
loopne
loopne
mov
aad
mov
cmp
sub
sbb
mov
mov
fwait
pop
adc
dec
movsl
sbb
mov
xchg
jle
leave
or
idivb
mov
jnp
lods
mov
push
sub
dec
jp
mov
adc
sbb
sbb
shl
inc
inc
shrb
mov
stos
dec
mov
addr16
mov
cwtl
sbb
fwait
enter
mov
daa
inc
sbb
xchg
insb
js
sbbb
fsubp
push
add
rclb
xor
lahf
je
push
sbb
mov
rorb
jecxz
int
dec
test
leave
iret
push
cli
js
insb
dec
fstl
adc
xor
jg
cwtl
arpl
mov
sbb
pop
rol
pushf
add
inc
out
hlt
je
insb
push
pop
loop
cmp
sub
mov
pusha
aas
and
cld
cmp
pop
xchg
jp
scas
sub
test
mov
insb
or
lahf
cmc
cmp
aam
fistl
pop
pop
jo
push
push
push
dec
mov
jle
filds
ret
push
movsl
sub
add
sti
xor
or
arpl
test
cmp
sbb
push
cmp
test
pop
ljmp
and
cs
jp
nop
or
jmp
cs
or
cld
test
outsl
subl
imul
xchg
in
clc
mov
jns
inc
xstore-rng
cmpsl
shrl
xchg
out
cmp
cmpsl
loopne
dec
xor
jnp
in
xor
push
add
aam
cmp
push
adc
inc
cmp
xchg
xor
or
adc
inc
adc
testb
pop
outsb
insb
push
test
push
les
or
shrl
int3
fwait
jne
icebp
incl
or
inc
out
cmp
cmp
mov
pop
scas
imul
mov
and
adc
jmp
jbe
adcl
jle
hlt
inc
mov
dec
imul
sbb
mov
mov
xchg
xchg
mov
ss
pop
mov
ja
outsl
cmp
inc
lahf
xor
test
push
rcrb
addb
gs
outsl
pop
add
mov
addb
mov
cmp
nop
es
sub
fwait
shr
cmp
cld
test
loopne
addr16
decl
outsb
jne
xor
mov
loop
sbb
dec
sbb
dec
jb
lock
mov
push
cltd
add
hlt
mov
lret
pop
adc
dec
sbb
push
ja
aam
ljmp
jo
push
lods
xor
pop
jo
xor
pop
in
fsubrl
scas
lcall
addr16
adc
mov
mov
orb
xchg
mov
dec
sub
es
mov
jno
addl
mov
cmp
and
cmp
insl
jecxz
mov
testl
mov
test
inc
sahf
fsubrs
cmp
dec
sbb
jbe
imul
test
pusha
aad
out
xchg
inc
adc
jne
pushf
mov
adc
mov
xchg
jno
incb
xor
sbb
mov
pushl
mull
fimuls
xchg
mov
fucom
inc
cmp
movsb
pop
or
jmp
lods
outsb
cltd
push
roll
adc
jns
or
cmp
lds
add
mov
aas
inc
iret
shlb
and
insl
out
mov
imul
int
xchg
xchg
push
daa
cmp
mov
xchg
shll
lock
xchg
adc
dec
popa
scas
add
popa
sbb
jb
mov
in
mov
fninit
jo
pop
std
adc
movsl
das
ljmp
int3
rcrl
xor
pop
push
jbe
sbb
inc
jno
xchg
cltd
mov
inc
mov
xchg
mov
mov
mov
js
sbbb
push
pshufw
sub
jbe
mov
xchg
fimull
add
jb
jmp
out
dec
xchg
xor
aaa
fwait
adc
pushf
fstpt
lret
xchg
inc
sub
xor
and
jne
lret
pop
in
lret
repnz
cwtl
cmpsb
sbb
push
xor
lret
mov
inc
xchg
jnp
cmp
arpl
push
icebp
push
inc
outsl
xor
lock
ret
ffreep
push
jbe
gs
mov
push
fbstp
stc
mov
stos
pusha
es
je
inc
push
jns
jg
js
sub
das
mov
mov
xor
std
out
inc
sbb
sub
mulb
xchg
and
jae
ret
shll
sub
mov
jle
lcall
and
sbb
icebp
fwait
inc
clc
push
cltd
ss
mov
fldl
mov
sub
imul
mov
xor
pop
jns
aam
movsl
mov
push
sti
jbe
mov
inc
jp
push
add
sbb
cmpb
add
roll
fdivrl
lcall
add
fwait
inc
xchg
inc
cld
gs
fnstcw
mov
mov
fmuls
inc
xchg
mov
sub
jae
jg
sub
xor
xor
arpl
jb
jb
cmp
xchg
pop
add
mov
or
aas
divb
push
mov
into
lret
jge
sbb
push
repnz
enter
push
cmpsb
les
mov
out
cmc
mov
pop
jge
jo
loopne
hlt
ds
dec
pop
outsl
jo
addb
and
fdivs
push
dec
shlb
arpl
cmp
ds
jbe
mov
mov
fdivrl
pop
pop
sahf
push
jbe
add
push
dec
xchg
pop
fstl
popf
xchg
ljmp
sti
jnp
sbb
shrl
inc
rcl
popa
pop
mul
xorb
inc
xchg
test
jmp
xchg
cmp
jp
dec
es
out
dec
pop
mov
adc
adc
sbb
test
dec
dec
jae
popa
or
sbb
mov
out
dec
test
mov
je
and
aad
add
xchg
mov
push
add
add
cs
data16
mov
cmpsl
cmp
jmp
pop
mov
cmp
or
es
imul
add
jmp
pop
pop
aam
mov
call
adc
cwtl
inc
cli
push
lds
mov
lock
iret
inc
sub
leave
lock
popf
jg
mov
pop
adc
jns
jle
fsubp
ret
adc
imulb
mov
xchg
xchg
mov
cmp
popa
js
cmpsb
ja
add
test
iret
mov
jo
and
sbb
push
push
negb
ret
int3
pop
cmpsb
adc
movsl
dec
pushf
daa
mov
fmuls
jg
int3
pop
imul
test
ror
inc
fadds
xchg
loopne
inc
adc
xchg
fs
add
or
jnp,pn
nop
ja
xlat
es
xor
bound
inc
stos
mov
sub
inc
pop
sbb
stos
fsubp
test
adc
mov
pop
adc
xchg
add
cmpsl
cli
ret
jno
fidivrs
lcall
and
ror
sub
push
xchg
int3
cmc
movsb
fstpl
jmp
scas
mov
bound
jmp
or
pop
jo
out
xchg
ret
push
jns
jge
pop
pusha
cmpsb
inc
fsts
sbb
sub
hlt
xchg
ds
movsl
xor
pop
fdivrp
and
cmpsl
xchg
fcoml
movsl
movsb
mov
pop
mov
movsl
into
fidivl
shl
sub
in
fwait
rclb
cmc
ds
adc
imul
in
cmc
add
or
test
loope
aas
out
shl
rorl
cltd
outsb
lret
lret
fdivrl
cmp
or
and
add
sub
mov
or
adc
cwtl
mov
out
pop
and
or
mov
cmp
mov
mov
stos
popa
mov
push
pop
int3
loop
pushf
rcl
sub
add
jge
mov
and
scas
iret
sti
ds
ficompl
xchg
jbe
jg
mov
push
xor
fcomps
cmp
icebp
pop
dec
popf
cltd
mov
sub
xchg
or
in
aad
mov
shrl
mov
xchg
ret
sub
cmpsl
inc
mov
xchg
ja
js
mov
xor
xchg
xor
cmp
sbb
sub
test
mov
and
push
push
jge
pop
push
and
insl
push
lret
jne
fwait
pop
mov
pusha
ja
jmp
bswap
mov
filds
aaa
scas
stc
stc
scas
sub
ja
pop
div
xor
stos
sbb
int
dec
rclb
loopne
insl
lret
js
dec
adc
mov
cmp
and
sarl
adc
dec
xchg
or
fwait
loopne
les
fnstsw
and
test
mov
lahf
xchg
aaa
outsb
rorb
sbb
loopne
add
into
mov
shl
rorl
mov
icebp
add
mov
push
je
xchg
sub
pop
mov
mov
xor
ds
fisubs
jp
add
jl
mov
ljmp
iret
ss
outsb
jb
pop
mov
inc
addl
cmp
add
daa
aad
jns
dec
adc
cs
lods
popa
push
fwait
adc
aas
sbb
roll
repnz
lea
mov
mov
mov
or
icebp
cmpsl
sub
jae
into
xor
mov
loope
fcomps
lret
bound
push
test
jb
dec
fadd
aas
push
aam
xchg
pop
bound
mov
enter
inc
insl
pushf
mov
andb
stc
lods
add
leave
ret
cmpsl
cmp
mov
mov
xlat
xor
mov
dec
in
mov
jb
push
cmp
imul
xchg
fisttpl
in
cmp
and
pop
or
ret
dec
sbb
or
sub
cs
mov
das
dec
push
jnp
and
mov
mov
clc
push
gs
xchg
shl
dec
leave
repz
repz
xor
scas
or
xchg
sub
sbbb
push
imul
xchg
mov
sahf
imul
int
ds
mov
or
lds
movsl
sti
les
popa
mov
cmp
and
jle
dec
mov
adc
addb
mov
mov
dec
xor
mov
inc
mov
in
push
shrb
ret
fxch
sbb
push
sbb
pop
jmp
mov
adc
mov
int3
push
cmp
adc
add
subb
and
fisubrl
sbb
mov
test
inc
mov
sub
jl
cli
mov
in
lret
pop
testb
jo
mov
adc
loope
lret
psubb
mov
ds
out
jmp
idivb
mov
divb
adc
xchg
outsl
and
push
inc
stc
mov
fisttps
lock
test
jle
pop
push
xchg
mov
and
aas
inc
in
add
out
ficoms
add
jecxz
mov
sahf
imul
test
in
mov
and
sbb
mov
adc
popf
and
in
dec
dec
jg
xchg
or
adc
pop
mov
mov
jbe
daa
popa
pop
jge
je
divl
push
out
mov
mov
sub
adc
and
cmc
loop
inc
mov
pop
xchg
dec
jae
outsl
pop
dec
push
push
jp
jmp
pusha
out
push
xchg
sbb
xlat
sub
or
jmp
or
movsb
xor
jge
ror
lcall
xor
imul
cmp
push
cmc
mov
lcall
ret
pusha
sahf
pop
fsubrs
lahf
fwait
insl
dec
dec
sbb
test
push
sti
out
jne
movb
or
es
cwtl
sub
dec
daa
jecxz
icebp
xchg
add
xchg
test
clc
arpl
pushf
add
ljmp
push
mov
out
sahf
decb
cmp
mov
mov
and
fldcw
inc
ret
mov
xchg
cltd
test
es
out
scas
mov
popf
add
ret
sarl
dec
mov
icebp
cmp
stc
aad
mov
mov
ljmp
mov
mov
inc
lods
daa
std
rolb
test
outsb
mov
pop
adc
jne
into
lods
xchg
into
jmp
ret
das
jbe
pop
pop
insl
and
jp
xchg
out
xchg
jne
stos
xchg
out
mov
test
iret
js
mov
pop
rep
jno
daa
std
scas
pop
dec
icebp
cmp
mov
mov
xorb
dec
xlat
fnstenv
mov
fnstcw
sub
insl
and
xor
ljmp
xor
addl
into
lods
sbb
pop
fcmovnbe
enter
cmp
add
jecxz
in
add
mov
jmp
into
dec
xchg
mov
stos
or
ljmp
mov
pop
out
pop
data16
gs
add
sub
dec
movsb
aam
packsswb
push
pushf
xchg
push
cli
fs
xchg
push
and
fstpl
mov
stos
fstp
add
fwait
je
lahf
or
shrl
mov
inc
mov
ret
aam
out
ds
inc
adc
ss
adc
adc
xorb
cs
and
adc
jne
scas
into
or
mov
into
mov
inc
and
sbb
jnp
popa
cmpb
loopne
cmpsb
adc
fldl
pop
add
xchg
cmp
cld
mov
pop
mov
or
int
or
add
outsl
shrl
bound
stc
pop
push
notl
je
test
push
cmp
add
rorb
push
xor
mov
mov
es
out
and
int3
mov
push
addr16
negb
pop
arpl
div
jge
daa
mov
or
mov
mov
adc
inc
sti
iret
idivl
pop
adcl
xchg
loop
stos
rcr
inc
xchg
leave
out
add
jb
add
rorl
and
icebp
mov
or
mov
jno
stos
rcrl
idivb
loop
icebp
test
dec
bound
ss
dec
in
movsl
es
push
shrl
loopne
push
lea
fwait
scas
pop
xchg
cmpsb
adc
or
mov
pop
mov
ret
cmpps
push
dec
mov
push
mov
sti
mov
pushf
ret
jecxz
lret
lret
gs
jbe
inc
aam
push
xor
ljmp
adc
pop
pop
pushl
mov
mov
stos
clc
push
jne
fs
out
mov
lcall
inc
jg
loop
add
cmp
xchg
es
jle
popa
pop
sbb
into
push
add
dec
sbb
fadds
cmp
dec
inc
int
pusha
pusha
fs
xor
inc
mov
xchg
sarl
lods
sarb
jecxz
mov
dec
pop
clc
movb
adc
sti
mov
fstpl
or
lods
jle
xor
cwtl
xor
leave
push
lods
pop
push
fs
out
in
add
ret
jmp
inc
nop
rorb
movsl
push
addr16
sbb
push
pop
fs
mov
pop
lahf
ficomps
pop
in
aaa
ja
jns
dec
add
cmpsl
int
or
mov
mov
dec
int3
je
loope
sub
or
sar
jb
or
sbb
mov
or
iret
jae
repz
ret
insb
push
pop
or
shrl
into
sbb
mov
gs
aas
loop
pop
nop
fs
fmul
xor
out
outsb
cmpsb
ss
loop
mov
cwtl
xor
arpl
insb
mull
push
bnd
jnp
xchg
add
pop
jns
test
je
cmpsl
scas
pusha
jg
ret
je
icebp
jb
xchg
jmp
sbb
push
ja
xor
xchg
mov
call
insb
and
xor
int3
call
hlt
arpl
fisttpl
mov
gs
adc
xchg
mov
mov
jg
in
inc
cmpsb
lods
stos
inc
or
mov
xor
sub
sub
xchg
scas
popf
mov
fsubp
and
and
pop
sbb
pop
scas
xor
repnz
ror
es
fsubrl
fwait
mov
add
inc
sbb
aam
sub
stos
adc
xor
pop
shrl
add
add
mov
mov
mov
insb
stos
int3
jmp
aas
push
jno
cmp
mov
cmp
fimull
addb
fnstcw
inc
jns
jns
sub
mov
ret
ficoms
pop
inc
push
sub
or
mov
jbe
popf
inc
cmp
leave
push
xchg
movsl
push
jg
and
sub
notb
mov
das
fistpl
clc
testb
ds
sbb
jnp
pusha
mov
adc
clc
stos
xchg
mov
mov
rcll
adc
pop
mov
and
pop
push
xchg
pop
cmovl
add
mov
stos
inc
sbb
addr16
insl
mov
movsl
mov
popf
inc
pop
sub
sbb
pop
lahf
hlt
jns
pop
arpl
jmp
cli
lea
pushf
adc
and
mov
xor
out
mov
mov
in
test
xchg
mov
sbb
iret
ja
lahf
loop
movsl
cwtl
push
inc
movsb
xchg
mov
xor
mov
imul
mov
in
bound
push
xchg
inc
cmc
and
add
outsl
je
cli
cs
adc
pop
mov
aas
jo
pop
and
xor
add
imul
or
jg
xchg
sbb
lret
sub
push
or
in
adc
hlt
cld
aas
aas
add
insl
mov
xchg
jmp
into
mov
out
dec
xor
sar
mov
pop
ret
dec
add
ficoml
hlt
out
aam
sti
jle
add
int
insb
test
frstor
xor
sub
mov
outsb
and
in
sti
jle
sbb
dec
adc
mov
subl
stc
stc
pop
repz
push
aas
loope
push
std
roll
xchg
mov
push
push
lods
sub
dec
cld
lock
mov
aad
pop
ret
loop
imul
dec
imul
jmp
sbb
pop
ss
jae
sub
jb
or
mov
jbe
xchg
mov
andl
loopne
rclb
adc
lods
xchg
mov
mov
pop
imul
mov
jbe
cmc
push
test
add
cltd
outsb
loop
ret
rorl
int3
adc
cmpsl
dec
lret
lret
iret
pop
fsub
add
push
negb
add
js
adc
mov
scas
dec
add
cmpsl
cli
adc
jmp
pop
xchg
mov
xor
pop
mov
jl
sub
mov
sbb
jle
mov
jb
cli
push
xor
xchg
mov
movsb
ret
mov
adc
les
xchg
insb
idiv
sbb
and
add
pop
scas
dec
mov
cltd
cmpsl
cmp
sub
gs
mov
jle
scas
push
cltd
jb
imul
mov
ljmp
mov
mov
dec
add
xor
lret
enter
loop
divl
fstl
inc
insb
fadds
xor
loop
inc
mov
xchg
ss
cmpsb
ret
out
repnz
int
fs
or
cmp
dec
dec
jb
movsl
aaa
insl
sbb
mov
xchg
jmp
int
sbb
push
rcrl
pop
andb
add
cmp
cmp
jge
arpl
bound
ss
fcomi
addr16
pop
push
cmp
sub
jns
aad
or
jnp
outsl
inc
into
adc
hlt
aad
stc
fistl
out
pop
add
loop
sbb
sbbl
mov
mov
lcall
cld
push
popa
pop
jecxz
out
push
sbbl
inc
xchg
add
xchg
pop
dec
sub
jb
in
inc
push
xchg
xchg
push
sbb
arpl
jno
movsl
lret
mov
xchg
in
mov
jo
xor
ja
inc
sbb
dec
inc
or
out
movsb
xchg
sub
test
xor
pop
fmull
scas
shlb
mov
cmp
lds
jne
xchg
push
dec
mov
leave
xchg
mov
xchg
sub
sbb
test
inc
cs
test
mov
xchg
enter
jl
adcl
inc
loopne
pop
and
test
shl
push
daa
repnz
mov
push
sub
jnp
cmpsb
fsub
into
lods
lcall
gs
rcrl
fildll
sbb
stc
mov
enter
sbb
mov
subl
fldcw
xchg
out
push
test
xchg
fcmovnbe
je
ja
or
les
xor
pop
jo
imul
stc
jns
pop
cmp
fs
jge
sahf
loope
fcomi
jns
adcb
dec
push
xor
repnz
mov
imul
imul
das
mov
fstpt
xchg
jne
xor
add
mov
jle
xor
in
in
sahf
popf
pushf
jmp
jb
loope
sbb
sbb
xchg
jg
test
xlat
and
mov
pop
xchg
repz
js
jl
xor
icebp
fstl
jno
in
loope
out
cmp
movsl
add
lahf
mov
stc
lock
or
lods
mov
mov
adc
arpl
es
out
dec
lock
enter
subb
adc
pusha
fimull
daa
or
scas
push
loope
or
nop
dec
mov
jne
ret
pop
in
daa
add
and
rcrb
std
mov
repz
push
pop
xchg
pop
daa
lret
mov
xchg
into
test
push
shrl
jns
push
jmp
rol
scas
ja
mov
xchg
sbb
bound
sbb
mov
xchg
pop
sbb
sub
xor
out
outsl
mov
sbb
sbb
lahf
std
fidivl
das
sub
ret
sbb
dec
mov
movsb
push
add
mov
shrl
sbb
or
inc
add
or
dec
fs
movsl
jle
test
shll
aad
int
push
push
outsl
dec
je
sbb
mov
mov
jmp
lret
aaa
fiadds
int
leave
mov
testl
mov
xor
pop
and
xor
jecxz
ljmp
mov
popa
cltd
stos
in
imul
xchg
shll
xchg
push
inc
lret
data16
sbb
shlb
jae
dec
bound
cmp
cli
pop
dec
adc
ficoms
test
out
xchg
mov
jo
pop
sub
inc
inc
mov
lds
push
sbb
cmc
insl
mov
out
das
fwait
xor
and
or
popa
dec
pop
fstl
repnz
or
jae
rorl
cmp
fisttpl
gs
jo
sti
or
movsl
pop
push
xchg
xchg
aaa
movsb
jge
mov
mov
xor
imul
mov
and
dec
xchg
iret
shll
add
mov
cmc
adc
lea
sub
into
lahf
call
gs
or
lret
lds
in
mov
scas
add
shll
incb
jle
in
push
mov
pop
cmp
dec
and
jnp
cmp
sbb
mov
dec
scas
js
jmp
in
mov
mov
jg
cmpsb
in
pusha
lods
pop
xchg
mov
mov
mov
fwait
jo
jle
scas
mov
lods
jl
das
hlt
mov
les
sub
rcll
les
pop
test
cmp
and
int
jle
lahf
into
je
pop
and
xchg
test
and
mov
sbb
leave
bound
into
fcoms
hlt
mov
cmpsl
cmpsb
mov
push
cmp
out
pop
pop
mov
mov
dec
pop
jns
les
mov
je
fdivrl
sub
lahf
cmp
addr16
mov
pop
aam
adc
addl
repnz
xor
adc
and
pop
or
mov
and
xchg
add
out
inc
cmp
movsl
sub
xchg
mov
mov
or
cmp
mov
lock
dec
arpl
mov
imull
pop
cmp
pop
pusha
es
sbb
pusha
shrl
mov
test
pop
push
std
inc
leave
xor
push
cmpsl
sub
andb
lret
int
jne
pop
test
xchg
push
imul
mov
mov
inc
sti
push
fucom
xchg
std
outsb
adc
xchg
cmp
sbb
nop
mov
and
aad
inc
pop
pop
nop
scas
adc
loopne
and
aad
xor
out
dec
xchg
rcrb
rolb
dec
mov
sub
sbb
out
mull
mov
mov
and
pop
jnp
mov
jbe
and
add
push
int
pop
adc
or
cmpsb
movsb
mov
mov
mov
dec
dec
insl
mov
aam
mov
add
inc
insl
outsb
mov
xchg
scas
mov
clc
and
fists
jmp
idivl
push
dec
pop
sbb
inc
addr16
lret
mov
inc
push
jbe
mov
inc
sbb
mov
or
adc
scas
push
lds
adc
out
cmp
adc
or
movsb
bound
lahf
jmp
mov
outsl
adc
and
int
xchg
mov
xchg
fsubs
sbb
pop
sbb
out
lods
shll
xor
pop
not
xchg
push
pop
push
push
xor
movsb
and
aam
jge
loop
push
fstps
pop
mov
add
ret
aad
sub
pushf
jo
inc
jecxz
sti
pop
inc
add
fadds
and
out
pushf
xchg
out
out
gs
mov
jge
push
cmpsl
mov
dec
and
inc
mov
cmp
insl
lods
dec
mov
call
jb
imul
xor
sbb
push
adc
xchg
mov
sub
dec
xchg
adc
ffreep
cmp
inc
fisubs
out
jl
stc
fwait
push
pop
mov
jo
xor
roll
ret
mov
ds
divb
stos
out
jns
in
out
divb
xor
shll
mov
jmp
xchg
aaa
lods
mov
leave
mov
jl
mov
jecxz
sbb
cld
rcl
jns
dec
mov
push
push
fldt
ss
dec
sub
adc
enter
cmpsb
dec
sub
mov
addr16
inc
shlb
and
sub
cmp
or
mov
into
jp
pop
gs
int
movsb
scas
lods
jge
pushf
out
int
enter
pop
dec
dec
outsl
mov
and
dec
mov
cmp
mov
adc
xchg
mov
shrl
aam
sbb
aad
arpl
and
inc
and
and
outsb
sbb
or
xlat
dec
out
shl
xor
mov
and
and
sti
xchg
pusha
xor
out
push
fiadds
jecxz
inc
sbb
jne
adc
fmul
ficompl
cwtl
adc
xor
loopne
sbb
inc
push
cmp
mov
sbb
enter
or
test
fisubrs
xchg
rcr
push
es
std
mov
in
adc
test
or
imul
lock
popa
mov
in
add
or
loopne
not
int
into
orl
ljmp
fdivrl
jne
test
inc
mov
xorl
out
stos
mov
test
and
mov
shlb
and
rcl
ret
popf
popa
cmp
mov
cmpsb
add
fsubrl
cltd
rcl
fdivp
imul
dec
mov
adc
sbb
sbb
enter
cmc
fwait
push
lea
mov
je
aas
arpl
adc
test
xchg
or
jae
mov
mov
fwait
mov
test
and
and
xor
mov
sbb
dec
dec
jo
cmp
push
and
adc
mov
xor
scas
fidivl
xchg
mov
push
xor
pop
scas
dec
clc
inc
mov
xchg
sarl
push
sub
cmpl
ja
imul
lahf
xor
into
push
lds
sub
sub
or
xor
inc
and
push
popf
arpl
push
mov
add
ja
and
sbb
mov
adcb
test
movsl
push
mov
cmpsb
add
dec
cmp
cmp
dec
shr
gs
or
sub
pop
push
in
xor
sub
stc
adc
fldenv
testb
aaa
pop
out
jl
mov
xchg
pop
test
pop
fdivrs
fstps
stos
cmp
out
lret
lea
cmc
or
shlb
pop
pop
pop
lret
adc
loopne
es
sub
je
dec
or
outsb
pop
mov
scas
fdivrs
mov
inc
pusha
and
lcall
int
insb
pop
stos
cmpsl
adc
push
add
lods
fcoms
fsubrs
rcrl
pop
mov
sbb
adc
ret
push
jno
fdivrl
gs
ljmp
std
inc
or
iret
pop
lret
and
sbb
movb
fsubrl
enter
fucomp
mov
test
rolb
xchg
cmp
mov
jg
push
cmpsb
sub
inc
xchg
mov
int
xor
daa
sahf
mov
xor
add
mov
into
jnp
out
mov
mov
inc
xor
cmp
jl
mov
stc
nop
int
test
sub
mov
pop
lret
sbb
mov
inc
adc
ret
std
add
movsb
and
loope
mov
xlat
push
sub
out
or
or
and
and
push
or
xchg
or
jae
ror
inc
and
dec
adc
pop
lods
popf
arpl
lock
pop
lahf
sub
je
aam
imul
movups
mov
aam
push
adc
cmpsb
push
leave
mov
xchg
cmpsl
mov
adc
mov
push
loope
xor
inc
cmp
pop
cmp
mov
push
jb
xlat
test
lret
test
lret
mov
fs
loope
and
xor
jp
mov
das
lahf
cmp
inc
idivl
dec
jl
insl
and
les
les
mov
inc
fldenv
push
out
outsl
jmp
test
push
fimull
pusha
imul
jbe,pn
dec
out
mov
pop
jmp
xchg
push
jmp
movsl
lods
je
xor
cli
xchg
out
in
xor
cmc
repnz
xor
adc
pop
ljmp
fisubs
rcl
sbb
mov
in
mov
mov
repz
cmp
out
sub
mov
ret
mov
xchg
pushf
enter
movsl
and
xor
or
xchg
addr16
sub
jb
les
les
dec
sub
add
push
mov
cmp
xor
loop
and
lds
push
pop
sbb
add
mov
retw
push
sahf
push
iret
pop
jmp
xchg
dec
inc
mull
stos
mov
jle
stos
push
sub
icebp
lods
xchg
jge
fbstp
imul
cltd
mov
jne
clc
jbe
mov
sbb
dec
ljmp
xor
dec
xchg
dec
push
mov
bound
pusha
xor
pop
xorl
jne
ret
dec
dec
nop
dec
mov
adc
aaa
jbe
sbbl
sbb
inc
movsb
xchg
test
cwtl
movsb
xchg
adc
mov
mov
clc
xor
out
mov
mov
lret
icebp
xor
in
jg
mov
push
cmp
test
push
lods
fistpl
call
push
mov
lcall
inc
and
cld
xchg
ret
push
mov
lods
pop
sbb
pop
scas
mov
pop
fisttpll
stos
cmp
and
popa
test
test
mov
mov
lea
sub
jns
ss
stos
jmp
mov
mov
push
flds
cld
das
sbbb
test
ret
jp
into
popl
dec
pop
lret
cmpl
cmpsb
or
xor
mov
push
mov
insl
dec
cmp
les
push
mov
push
mov
adc
in
shr
ja
xchg
mov
and
mov
data16
aam
xor
enter
roll
xor
arpl
js
xor
popa
and
add
xchg
mov
jecxz
rolb
pop
decb
cli
mov
stos
ja
xchg
xor
add
add
std
addr16
mov
and
repnz
sarb
jecxz
push
add
aas
mov
jg
sub
mov
fnstsw
movsw
test
pushw
dec
pop
cmp
je
add
cmpsl
push
add
add
add
xchg
insl
inc
pop
or
xor
inc
pushf
cmpsl
out
sub
sti
mov
jecxz
clc
sbb
aad
jne
loopne
fsub
xchg
push
mov
push
addr16
repnz
jo
sub
inc
insl
inc
hlt
jns
sbb
int3
lods
out
pop
and
pop
push
das
jmp
sub
in
sbb
mov
sub
mov
sbb
xchg
jbe
cli
xchg
xor
in
aaa
es
sub
aam
xor
sti
add
sub
in
gs
jl
xlat
push
push
xor
movsl
push
lods
pop
shlb
push
push
and
xor
xor
outsl
outsl
fwait
adc
sbb
int3
das
xchg
push
sbb
dec
inc
xchg
mov
ffree
lea
flds
loopne
xchg
xor
scas
inc
adc
rcrl
and
add
mov
into
sub
lock
mov
out
lret
aaa
mov
push
jl
pop
fsubrs
sub
sub
pushf
fsts
aas
xor
xor
jo
das
push
fidivs
mov
imul
pop
or
rorl
icebp
shrb
test
orb
inc
rolb
jne
sub
mov
dec
sub
imul
call
inc
nop
insb
out
lods
cmp
test
loope
popa
pushf
aas
cmp
xor
loopne
push
mov
cli
or
shr
in
inc
xor
xor
push
mov
call
and
inc
jns
xchg
packsswb
bound
bound
xchg
dec
popf
popa
pusha
cwtl
ret
mov
jmp
insl
xchg
mov
mov
mov
pop
div
mov
adc
mov
mov
cmp
xchg
aad
add
or
out
inc
fcompl
dec
ljmp
xchg
lcall
out
out
cmpsl
movsb
out
and
pop
pop
cmpsl
push
push
movsb
bound
push
mov
dec
mov
cmpb
aam
inc
lods
fstl
pushf
xchg
lret
mov
mov
and
dec
add
cmpsl
lahf
ljmp
xchg
push
push
xor
cmp
mov
jle
jo
xor
inc
xor
jg
je
nop
cld
inc
jle
sbbb
and
cmp
jbe
xchg
loop
xor
test
mov
cmpsb
sub
jb
and
into
dec
into
mov
and
lcall
and
mov
stos
gs
inc
rcrl
dec
xchg
inc
aam
cmovle
xchg
xchg
jo
nop
movsb
xchg
mov
push
fstl
mov
loope
add
adc
lea
rcrl
outsl
adc
mov
in
mov
sub
inc
adc
fldenv
mov
sti
scas
in
addr16
fld
shll
jb
or
jno
pop
test
jno
jnp
fidivrs
add
jae
loop
stos
jmp
lahf
ljmp
dec
jno
or
cs
daa
mov
jp
pusha
pop
pop
mov
and
adc
mov
scas
xchg
jp
xor
pushl
xchg
or
rcrl
adc
pushf
xor
clc
adc
adc
or
lea
cmpsl
mov
test
shrl
sahf
lcall
xor
or
mov
pop
das
xchg
push
sbbb
faddl
dec
sub
dec
xchg
hlt
lret
leave
sbb
mov
inc
es
xchg
pop
es
xor
mov
call
cmp
adc
mov
add
inc
movsb
jae
mov
mov
xor
mov
cwtl
jmp
pusha
jl
ret
inc
add
mov
push
icebp
aaa
inc
xchg
sti
movsb
shll
dec
xor
scas
loopne
or
adc
int3
mov
int3
cmp
bswap
jmp
dec
inc
add
cmp
imul
ja
xchg
mov
ret
aad
std
mov
clc
mov
cmp
sar
sahf
mov
xchg
ret
add
xlat
mov
xchg
aad
jecxz
insl
rcrl
xchg
loop
ja
and
das
xchg
or
scas
rcrb
idivl
cmp
inc
fiadds
jg
mov
cmp
add
movsl
je
scas
push
push
les
sub
sub
decl
sarl
test
adc
mov
test
inc
in
jp
fs
leave
xchg
pop
mov
lcall
test
fstpl
shll
add
xor
jmp
jl
xchg
pop
rorl
aad
sti
inc
shlb
lcall
jne
into
xchg
icebp
in
mov
fs
inc
movsl
jnp
pop
imul
sbb
pop
sub
pop
mov
adc
or
movsl
out
jg
mov
jb
xorl
xchg
mov
sbb
sahf
idivl
jl
xor
sti
sub
data16
pop
xor
pushf
cmp
pop
aam
xor
inc
dec
add
rep
sti
push
add
test
imul
inc
adc
jle
cwtl
and
mov
shr
mov
and
add
sub
lret
mov
and
mov
mov
call
imul
xchg
inc
inc
adc
inc
in
mov
xor
jbe
out
and
divb
inc
add
and
stc
pop
lock
jecxz
aaa
mov
inc
cld
shrd
ljmp
cs
and
mov
cs
pop
or
mov
mov
and
fldcw
icebp
inc
mov
jns
fldt
sbb
cmpsl
dec
mov
out
les
in
aad
pop
lcall
stc
rcl
loopne
js
mov
adc
xor
shrb
lea
sbb
mov
lcall
lret
inc
lods
mov
rclb
add
in
bound
je
shll
stos
xchg
pusha
inc
xor
aaa
aad
cld
and
cmpl
adc
dec
mov
adc
in
lret
fdivp
dec
jge
out
sub
push
shlb
mov
outsb
jo
shl
das
mov
mov
sbb
scas
fnstcw
mov
pusha
repz
shl
xlat
and
add
int
xchg
xor
sti
sub
jae
loop
sbb
or
bound
push
adc
jge
jbe
cltd
cmpsl
mov
push
mov
xchg
mov
fistpll
add
test
out
fld
lahf
inc
add
adc
cmc
ja
pushf
dec
and
or
inc
hlt
leave
pop
je
add
lock
add
insl
dec
and
xor
jne
fwait
dec
push
rorl
rcrb
nop
add
or
push
push
push
add
or
jmp
in
out
into
inc
pop
mov
popf
jo
ljmp
nop
call
or
xchg
fisubs
nop
cmpsb
mov
jb
mov
pop
mov
push
out
mov
jl
lret
int3
fidivs
sahf
and
push
or
andl
adc
dec
mov
leave
cmc
sub
adc
inc
mov
pop
popf
lds
or
jo
xchg
mov
xor
filds
cli
jp
cld
dec
push
test
jp
mov
bound
cltd
and
imul
pop
pop
lret
cmp
cmpsb
xor
add
add
sahf
xchg
mov
lock
loope
add
or
jle
sbb
test
shrl
pop
sbb
or
jae
cmp
icebp
fidivs
addb
lock
imul
hlt
jno
mov
mov
lods
or
jae
rolb
rolb
test
mov
fisubl
push
and
mov
sub
stos
lcall
and
lahf
add
or
jb
int
inc
xchg
xchg
fidivrs
mov
data16
jno
sub
in
pop
jo
fstpt
fiaddl
sub
in
jns
out
mov
mov
clc
add
loop
aas
icebp
sub
shr
fcomps
imul
mov
xor
in
push
leave
sbb
jecxz
xchg
pushf
std
jp
and
adc
fwait
in
jbe
enter
xchg
mov
popf
jbe
ds
mov
jecxz
ret
int3
xchg
ss
insb
into
pushf
repnz
xchg
test
and
sub
and
out
std
jns
out
popf
lods
jp
stc
jns
pop
idivl
pop
bound
ret
dec
mov
xlat
jo
or
xchg
mov
sbb
lock
mov
dec
xchg
mov
test
jl
mov
or
sub
and
out
cmp
jmp
inc
popf
inc
into
mov
loopne
out
mov
in
test
js
xor
sbb
fcoms
int3
jo
fucomp
repnz
dec
xor
mov
andl
jmp
push
push
sbb
mov
ds
dec
pushf
jmp
cmp
adc
fstl
or
cli
pop
adc
pop
xchg
or
xchg
icebp
lock
rcrl
mov
les
sbb
sbb
and
cltd
imul
mov
out
fstl
lock
outsb
add
gs
mov
fists
lahf
leave
aaa
aas
lcall
dec
or
jge
fbstp
inc
jns
adc
dec
bound
aam
icebp
scas
movsl
cmpl
loope
adc
cwtl
rorb
jno
push
jle
subl
aaa
push
pop
adc
pop
cmpsl
jne
stos
movsb
mov
adc
inc
std
push
xor
popf
aad
push
pop
cmpsb
mov
mov
mov
enter
lock
jp
bound
daa
stos
cli
gs
sub
sub
xchg
pop
pop
ja
sbb
test
fisttpl
ja
repnz
inc
outsl
fxch
lret
fwait
pop
das
sti
jmp
js
push
int3
loope
ret
xor
jno
dec
out
add
push
into
adc
icebp
adc
push
fstpl
jmp
xor
fidivs
lahf
adcl
jo
add
or
cmpsl
push
lret
call
inc
nop
sahf
sub
inc
rolb
stos
dec
push
gs
repz
loopne
pusha
fdivrp
or
inc
lret
mov
inc
pusha
in
or
ds
jo
aam
in
jnp
rcll
mov
int
jno
loop
incl
jg
push
inc
jnp
dec
add
loopne
mov
sbb
adc
mov
mov
cmpsl
mov
nop
fwait
pop
jbe
push
or
jl
mov
jg
sbb
push
jecxz
nop
rcll
lahf
jp
outsb
push
fs
mov
leave
jmp
adc
leave
sbb
mov
push
cmp
aas
xchg
je
xchg
jne
int3
pop
adc
or
imul
sbb
jge
and
stc
fidivrl
subl
test
pop
mov
or
push
sbb
insl
lds
add
movsl
out
imul
sbb
inc
frstor
or
inc
pusha
push
outsb
aad
or
adc
loope
repnz
or
gs
cmpsl
or
js
ret
fnstcw
cmp
or
and
fwait
insl
mov
mov
pop
sbb
loop
fcmovbe
adcb
movq
fwait
dec
mov
sahf
dec
cld
hlt
xor
rcr
xchg
xchg
cmp
xor
dec
mov
rcl
xchg
call
sub
add
mov
pop
sahf
popa
aam
cmpsb
cs
add
sbb
add
out
or
xchg
sub
aaa
stos
inc
sub
outsl
jb
jl
adcb
jb
call
sub
sbb
stos
sub
inc
push
mov
std
iret
or
push
rcrb
std
or
insb
loope
mov
adc
stos
pslld
movsl
push
repnz
loopne
sbb
test
mov
movsl
and
and
mov
xchg
ljmp
adc
in
inc
clc
movsb
xor
insb
inc
sub
insl
xor
jmp
xor
pop
push
shrl
mov
in
flds
loopne
inc
jb
mov
mov
sti
scas
pop
push
nop
cs
test
nop
pop
int
ret
dec
hlt
pushf
stos
sbb
sub
dec
sar
mov
bnd
jo
sar
sarl
mov
leave
andb
push
jp
or
rclb
sarb
xor
call
addr16
sub
jecxz
movsb
repz
cld
sub
jecxz
aam
add
icebp
rcll
stc
add
xor
mov
inc
lea
push
inc
or
rorb
test
xchg
aad
daa
xor
cld
add
daa
idivb
ret
sti
mov
and
outsb
test
mov
mov
frstor
jl
pop
push
mov
test
jg
cmp
imul
stos
adc
sub
xor
imul
addr16
mov
pop
orb
in
rclb
add
adc
cmpsl
push
lret
aad
pop
in
or
mov
mov
cmp
lea
sub
es
mov
jno
lcall
mov
pop
sbb
lea
je
and
iret
fs
xchg
push
or
add
fcmovbe
xorb
mov
mov
mov
adc
sbb
sarb
les
sub
inc
xchg
cs
mov
call
add
push
cli
ds
xor
dec
aad
outsb
into
xchg
pop
aas
cwtl
lods
ds
nop
shll
inc
pop
add
jae
jmp
mov
test
xorl
mov
ja
cmpsl
icebp
aam
adc
push
cld
sbb
jl
popa
cmp
in
in
push
popa
jecxz,pt
cltd
popa
and
push
lahf
nop
sub
jns
jne
sbb
sbb
xchg
xor
std
pusha
jge
aas
sub
je
lods
mov
xchg
or
movsb
fldl
push
cmp
jns
data16
ffreep
data16
sbb
cmp
loopne
sub
repz
cmp
adc
cltd
fcomps
mov
jmp
mov
test
add
add
lock
int
xor
push
mov
pop
sbb
push
push
pusha
and
in
test
cwtl
loop
je
lea
shll
xchg
mov
testb
mov
mov
gs
push
cmp
pop
fisubrl
pushf
ljmp
in
xlat
mov
insl
jns
mov
jecxz
lret
aad
lods
lea
pop
xchg
xchg
cmp
icebp
js
xor
or
fldcw
enter
add
subl
mov
ss
sbb
push
xchg
jmp
test
mov
mov
lds
push
fsts
push
jnp
jge
pop
xor
mov
mov
inc
popf
xchg
sub
bound
mov
hlt
xor
out
adc
ljmp
lock
out
movsl
xchg
inc
iret
xor
stos
jne
enter
cmp
cmp
cld
cmpsl
sbb
push
shll
dec
scas
addr16
insb
adc
mov
sbb
mov
in
adc
arpl
xor
outsb
ret
addr16
loope
cs
adc
pusha
jl
fmulp
mov
jmp
add
insb
mov
mov
aas
fsubrl
ja
rcrl
push
push
cs
adc
insl
push
jge
xor
push
imull
pop
ds
cwtl
mov
cmp
mov
push
cmc
fwait
push
addr16
lods
push
or
out
pop
ja
ja
ds
push
push
pop
or
outsl
iret
fdivs
out
lcall
adc
add
xor
pop
hlt
pop
ficompl
mov
mov
clc
clc
inc
sub
ljmp
cs
popf
xchg
mov
push
sbb
jge
mov
scas
rcr
and
out
sbb
push
add
loope
pop
jge
test
dec
push
add
adcl
cmpsl
repz
mov
pop
sti
xlat
insb
lods
sbb
cmpw
ret
jecxz
adc
lock
and
sub
jne
mov
movsb
andl
jp
pop
mov
ja
or
mov
rorb
mov
ffreep
jecxz
sbb
push
sub
int
xchg
jae
sbb
sbb
cmpl
mov
out
loopne,pn
sbb
dec
jge
ret
int
cmpsb
dec
mov
enter
jg
push
fldcw
jge
mov
xchg
lock
test
loopne
in
sub
loopne
cmpl
into
adc
icebp
add
and
lds
fcomp
push
mov
movsb
jmp
sbb
fldl
mulb
ret
xchg
xor
aas
sbb
stc
mov
cmpsb
or
mov
fldt
and
imul
out
mov
mov
cmpsl
es
popf
mov
test
mov
cwtl
xlat
sbb
jne
add
daa
mov
int3
scas
addr16
arpl
xlat
mov
int3
mov
mov
aas
mov
incl
xchg
cs
mov
cmpb
mov
mov
and
add
pushf
pop
dec
xor
mov
cmp
fyl2x
cmc
mov
stos
imul
push
and
fadds
lcall
idivl
fsubrs
insb
lea
repz
mov
int3
mov
xchg
repnz
scas
mov
fidivrs
or
xor
nop
sarb
add
loope
adc
xchg
stc
rep
push
testb
jbe
cld
xchg
movsl
sub
push
jne
mov
test
and
mov
or
ds
inc
jo
xorb
inc
test
std
call
xchg
pop
rcll
jnp
jno
xorb
outsl
shll
dec
inc
mov
mov
int3
cltd
cmpsl
jge
mov
jge
sub
popf
push
fistpl
aaa
ljmp
add
andl
cmpsb
lcall
out
mov
fdivr
xor
dec
xor
enter
sbb
mov
xchg
bound
mov
cmp
inc
rcl
inc
repnz
adc
ror
push
test
cmp
mov
outsl
std
rolb
out
shlb
jp
in
dec
in
mov
lods
call
xchg
ds
mov
mov
add
xlat
sub
imul
andl
les
mov
in
out
mov
cli
icebp
pop
inc
mov
nop
rep
xor
notl
in
lods
js
mov
jbe
push
xchg
pop
notl
call
mov
roll
lahf
jp
in
fstps
adc
jmp
lea
xor
pushf
fildll
sub
dec
int3
shll
sbb
inc
dec
leave
xchg
orl
cmpsl
mov
jmp
lahf
std
mov
cmp
adcb
sbb
fldl
dec
mov
push
jns
or
push
ljmp
pushf
mov
jecxz
lcall
adc
xor
imul
xchg
adc
push
mov
pop
push
jmp
push
cmpsl
dec
pop
mov
inc
frstor
mov
popf
insl
iret
jo
loopne
dec
data16
adcl
jecxz
sub
add
jge
or
negb
ret
xchg
jns
mov
and
sub
addr16
insl
and
mov
push
inc
push
xchg
mov
lahf
pushf
fs
jp
pop
xor
jle
dec
cmp
sbb
mov
mov
push
test
rcrb
and
lods
shlb
js
or
lret
xchg
adc
sbb
ja
pop
or
sub
fcomip
out
data16
cmpsb
or
stos
or
adc
mov
loopne
xchg
idiv
xor
aas
sahf
inc
cmp
mov
addr16
jo
hlt
mov
push
movsb
sub
push
xchg
mov
sub
pushf
sbb
ficompl
cmp
pop
aad
push
outsl
mov
jmp
ret
sub
mov
mov
rolb
ficoml
bound
xchg
bound
push
cmp
testl
push
or
ss
scas
imul
lret
push
mov
jae
cmp
iret
sahf
add
ja
ljmp
mov
mov
enter
loopne
lods
pop
lock
jne
insl
cli
inc
adc
daa
pop
push
xor
call
inc
fs
divb
jp
leave
andb
and
es
nop
xor
fadd
fs
xchg
enter
in
ss
loopne
out
pop
mov
xchg
lret
push
and
lahf
inc
mov
shl
lea
aad
lds
cmovno
push
push
repz
push
add
and
pop
dec
gs
daa
jnp
xchg
std
inc
xchg
repnz
lods
sarb
inc
adc
pusha
dec
add
stos
xlat
xchg
adc
cmp
aas
int
adc
inc
rcrl
sub
gs
xor
mov
out
sub
int3
andl
fidivs
xchg
jp
stos
and
fists
or
fmul
dec
and
out
stos
test
loopne
hlt
or
mov
mov
cmp
std
pop
pop
out
cs
inc
push
div
jp
aam
test
popa
or
xchg
push
lock
fucomp
push
jecxz
cli
xchg
pop
xor
pushf
inc
fsubrl
hlt
mov
test
jle
and
in
test
or
fidivl
rorb
dec
out
clc
lea
push
sbb
imul
sbb
shl
push
dec
dec
sub
aas
popa
movsl
sbb
or
push
pop
int
lea
and
dec
push
mov
jne
mov
mov
and
sarl
mov
hlt
jb
inc
stos
xor
js
jae
int
pop
pop
mov
sbb
sub
mov
scas
outsb
lret
jns
addr16
push
test
jmp
pop
add
mov
xchg
or
out
jo
mov
pop
mov
cmp
xchg
or
popa
fsub
mov
xor
cmpsl
mov
pop
inc
mov
cmp
xchg
mov
out
in
in
cmp
in
push
and
jmp
mov
jmp
inc
adc
movsl
pop
cmp
or
mov
push
and
mov
add
jo
js
cmpsl
add
mov
push
or
loop
aad
push
ret
cmp
mov
fistpl
xchg
mov
rcl
adc
cwtl
sbb
pop
mov
jmp
mov
sbbl
xor
xlat
stos
iret
lock
mov
stos
fs
mov
cmp
jns
lock
scas
incb
arpl
xchg
push
xor
or
int3
cs
dec
std
push
mov
imul
shrb
outsl
sbb
mov
pop
mov
push
and
mov
sbb
lods
or
and
add
add
lar
cwtl
cld
je
cmpsl
mov
nop
pushf
imul
mov
add
negl
or
sbbl
mov
lods
sub
repnz
and
roll
ret
mov
fs
in
frstor
imul
cmp
jo
xchg
pop
mov
pusha
out
inc
dec
loope
pop
stc
mov
or
sbb
mov
sbb
sub
pop
daa
push
aam
and
iret
xor
test
push
pop
dec
out
xchg
std
sbb
push
add
sub
scas
mov
ficomps
fmuls
test
mov
jne
cmp
push
and
daa
aam
int
jns
stos
xchg
pop
stc
mov
pop
int3
mov
sahf
sub
jle
sbb
xor
movsb
adc
or
mov
mov
in
xor
sub
mov
stos
stc
cmp
and
jbe
cmpsl
test
pop
sbb
push
push
in
jl
pop
divl
add
dec
push
stos
aad
int
shlb
sub
sub
hlt
shlb
bsf
insl
mov
sbb
test
add
add
outsb
rcrb
lahf
lock
jmp
cmp
mov
pop
ret
outsl
and
push
mov
or
adc
or
bound
fdivrs
inc
mov
mov
and
pop
fsubrs
ljmp
adc
out
pop
mov
or
cmc
lcall
add
sbb
shll
lods
cmpsb
popa
pop
xlat
fiaddl
inc
shr
mov
ret
out
jne
pop
es
add
lds
mov
push
rolb
lds
std
out
xor
xlat
pop
ds
push
outsl
jl
enter
pushf
ret
push
lcall
das
test
test
push
adcl
ja
fcoms
insl
stc
dec
lahf
pop
push
data16
jmp
mov
test
std
pop
outsl
fwait
sub
pop
xchg
leave
movsb
imul
mov
inc
push
or
sub
mov
or
mov
test
xchg
ret
add
aam
sub
int
leave
jo
inc
rclb
add
pop
aad
cmp
jae
movsl
cmp
xor
pushf
pop
or
xchg
pop
jg
imul
xchg
or
stos
jns
jecxz
sub
xchg
push
inc
mov
imul
push
inc
pop
mov
ljmp
out
add
or
insl
mov
pushf
data16
adc
addr16
push
je
movsb
out
mov
ret
in
sbbl
insl
test
sti
sub
pop
fcompl
je
xchg
xlat
push
or
nop
rorl
stc
adc
fcoms
aad
stc
sahf
lret
cld
or
inc
pop
push
mov
rcrb
cmp
or
mov
icebp
rcrl
cwtl
ret
or
inc
and
imul
and
clc
push
arpl
jmp
test
push
int
mov
arpl
lods
in
mov
inc
push
cmp
ja
push
sarb
fcoml
sti
aas
shlb
std
test
fwait
inc
pop
loop
push
leave
add
scas
jns
lods
dec
sub
jle
das
lcall
jmp
mov
mov
aas
lods
into
fcomps
enter
push
fcmovnbe
jo
fidivl
mov
push
pop
jne
sub
sub
pop
mov
mov
repz
int
pop
xorl
pop
scas
popf
insl
mov
insb
test
cld
in
sbb
ret
mov
data16
push
xor
push
xor
mov
cmp
inc
add
cli
lret
cmc
pop
outsl
scas
push
int3
xchg
cmp
or
sub
mov
negl
pop
pushf
lahf
enter
lock
cmpsl
mov
aas
adc
sub
out
lea
lock
push
cwtl
outsb
or
xorl
insb
mov
jmp
scas
and
dec
cld
xchg
push
jo
dec
daa
jae
nop
loop
leave
notb
add
hlt
or
and
or
ja
jno
xchg
push
clc
in
jne
mov
aaa
cltd
outsl
ds
mov
gs
inc
scas
adc
jp
outsl
push
sarb
push
cmp
mov
sbb
jecxz
stos
and
ljmp
test
adc
xchg
jle
lahf
jne
adc
add
adc
packssdw
cmpsl
mov
rolb
add
in
jecxz
test
dec
movsb
cmpsb
std
push
fwait
mov
mov
test
xlat
loopne
xor
out
pop
pop
cmp
leave
insl
jmp
mov
popw
lods
sbb
dec
or
cld
fxch
ljmp
pop
xor
push
shll
pop
sub
ror
and
aaa
jg
mov
fidivs
cli
fisttps
js
shll
into
xor
inc
xchg
adc
mov
cmc
jnp
push
xor
in
inc
mov
setns
js
mov
or
sbb
or
pusha
pop
int3
dec
outsl
outsl
pop
and
and
mov
std
xor
xchg
xlat
fisttpl
mov
push
mov
pop
or
aaa
jecxz
sbb
and
add
fwait
cltd
dec
and
stos
movsb
or
pushf
shl
sub
sbb
adc
jmp
mov
loop
adc
push
pxor
mul
cmpsb
ja
pop
addr16
loop
and
or
xor
int
lds
andb
sub
stc
inc
icebp
cmpsl
lods
jbe
or
addr16
jne
psadbw
int
aas
pop
jge
sbb
dec
pop
loop
lret
rcll
mov
mov
push
imul
lahf
es
jns
imul
loopne
xor
rol
and
daa
fsubs
das
aaa
xchg
mov
in
hlt
xchg
rcrb
mov
push
cmpsb
xchg
aaa
jle
or
xchg
or
in
ficoml
mov
and
xchg
je
push
aaa
leave
shlb
mov
or
imul
mull
loope
mov
aaa
stos
inc
push
fmull
loop
icebp
scas
popf
adc
out
or
sbbl
sbb
inc
clc
cmp
inc
ret
shrl
movsl
iret
adc
jnp
sbb
pushf
inc
hlt
push
fstl
xchg
rcll
mov
out
mov
push
xchg
mov
rcrl
dec
insb
call
imul
inc
jle
mov
sub
add
jb
or
adc
mov
or
inc
cmp
pop
sub
insl
jae
add
inc
aas
sub
ja
inc
mov
ljmp
sub
int3
loopne
in
dec
ds
cmc
orb
xlat
stc
std
dec
push
lcall
push
hlt
cmp
pop
repz
lcall
movsl
mov
fldcw
sub
sub
xor
jae
lods
mov
and
xchg
iret
jae
test
xor
je
push
sti
jno
dec
mov
scas
into
jo
daa
inc
or
mov
cmp
or
pshufw
jg
push
inc
ljmp
xchg
push
out
rcr
mov
adc
pop
cmpsb
loop
ja
add
push
push
jne
sbb
fisubs
loope
mov
xor
mov
sub
dec
fldln2
out
cli
aas
mov
stos
in
inc
xor
fiaddl
adc
cwtl
inc
sub
xchg
mov
or
and
out
xor
add
or
jl
pusha
mov
lahf
and
dec
cmp
out
scas
loopne
insl
sarl
mov
int3
add
mov
lret
and
cmp
adc
inc
mov
sub
mulb
mov
fcoms
jecxz
or
test
push
in
daa
rcrb
sti
push
sub
pop
std
cmp
jg
sub
rol
out
jecxz
and
hlt
or
xchg
mov
add
jnp
mov
lret
mov
es
push
out
sbb
loopne
test
xor
arpl
test
xchg
cs
mov
aad
xchg
xor
inc
cmp
and
imul
inc
push
jmp
testl
jo
insb
adc
fcomps
ret
xor
rcrl
fsts
lahf
push
xchg
cmp
xchg
mov
es
or
push
test
inc
iret
daa
ror
and
loop
test
scas
loop
lahf
dec
jg
mov
subb
stos
outsb
mov
mov
fstps
xchg
adc
mov
mov
in
popf
adc
scas
cmp
inc
mov
nop
mov
push
xorb
adc
push
ljmp
mov
cmp
lret
cltd
std
push
mov
sbb
push
out
ja
repnz
mov
sub
mov
cmc
test
push
xchg
mov
dec
jns
jns
mov
jb
loop
cmp
push
imul
fldt
ss
jge
icebp
test
fcmovbe
xlat
mov
push
daa
in
sub
imul
mov
dec
jne
mov
in
pop
out
inc
int
scas
push
fwait
sbb
pop
jmp
mov
ret
push
lock
pop
fcomip
je
jae
idiv
pop
adc
xchg
cmp
call
test
call
pmulhw
or
mov
add
mov
jo
pushf
adc
jae
dec
mov
sub
cmpl
cld
inc
negl
pop
mov
idivb
lods
outsb
nop
pop
aam
mov
push
xchg
idivb
sbb
cmp
repnz
idivb
out
dec
push
das
cmp
in
dec
mov
iret
mov
jge
in
push
cs
ret
repnz
mov
cli
inc
stos
fists
xchg
and
into
dec
loopne
lcall
add
mov
jae
jmp
and
out
adc
faddl
cs
mov
mov
xor
xchg
xchg
mov
inc
loopne
or
icebp
test
bound
inc
cmovs
test
repz
add
cli
cmp
mov
push
nop
out
pop
aad
inc
test
les
dec
ficoms
arpl
inc
jp
inc
mov
pop
jnp
loop,pn
lcall
and
bound
mov
sub
daa
addr16
and
shlb
push
outsl
mov
cltd
mov
loope
jmp
pusha
mov
loope
xchg
lahf
or
mov
or
arpl
mov
xor
gs
dec
push
mov
xlat
ret
cmc
jg
adc
mov
int
bound
out
xor
test
jne
push
and
sub
inc
leave
fidivl
scas
adc
sbb
int
in
xchg
sbb
insb
pop
inc
orl
fsubs
pop
sbb
popa
jmp
test
jne
das
mov
pop
pop
pop
push
leave
pop
dec
mov
and
inc
fsubp
push
negl
mov
je
imul
leave
mov
xchg
jno
nop
fisubrs
sub
jge
xchg
pop
cmp
idivl
outsb
xor
ljmp
fdiv
cwtl
iret
xchg
xor
dec
xchg
push
mov
out
outsl
inc
dec
cmp
cmpsb
sub
ds
repnz
pushf
add
dec
sbb
insb
sahf
mov
mov
inc
push
push
adc
dec
cmc
sti
test
addl
je
enter
fidivs
daa
adc
dec
test
dec
fstpt
add
and
or
call
xlat
and
or
out
cmpsl
sbb
push
cmp
xchg
fnclex
push
outsl
mov
lods
ret
aad
push
mov
clc
add
sbb
insl
mov
and
std
push
xlat
sbb
xchg
add
pushf
dec
mov
cmp
loopne
mov
lock
fistps
jmp
shr
jo
xchg
inc
test
inc
xor
mov
int3
int3
xchg
iret
sub
sbb
jbe
cmpsb
cld
mov
mov
mov
xchg
mov
push
insb
nop
adc
popa
popf
inc
ret
push
daa
or
mov
cmp
cmp
jne
pop
hlt
pop
imul
sahf
cmp
stos
mov
sbbb
sbb
mov
or
test
push
fsubrs
dec
push
iret
mov
or
mov
mov
cmc
mov
adc
popa
icebp
sub
sbb
mov
loop
push
sbb
fdiv
adcb
lahf
pushf
or
aam
adc
dec
jp
outsb
inc
test
pushf
add
or
outsb
stc
add
rcrb
jl
loop
aas
dec
xor
add
out
push
out
xor
dec
stos
xor
push
cmp
adc
out
adc
adc
mov
sahf
pop
xchg
lahf
xchg
leave
mov
dec
inc
push
mov
dec
movsb
push
dec
jo
or
push
cltd
call
ret
loope
jge
inc
mov
xchg
xor
rorl
sbb
jno
ldmxcsr
mov
rorl
pop
cmp
aas
fs
lods
jmp
push
mov
imul
inc
lea
inc
movsb
mov
jmp
lcall
sub
out
mov
and
cmp
mov
mov
cmp
inc
jecxz
stos
lahf
dec
inc
adc
mov
test
lock
sub
std
mov
or
sbb
sbb
fucompp
jb
jo
inc
test
sbbb
in
ret
mov
into
std
cmpsb
inc
icebp
inc
cmc
lret
out
iret
push
mov
cmp
inc
loopne
inc
mov
sarl
mov
mov
xchg
stos
lock
fsubrl
adc
data16
mov
mov
or
imul
testb
adc
test
mov
fwait
xchg
repnz
dec
jns
mov
mov
xlat
push
outsb
mov
clc
push
ss
xchg
and
inc
add
mov
cmc
sarb
pop
sub
lea
movsb
xchg
cld
or
aam
cli
jne
into
mov
jmp
es
adc
push
and
push
xor
sbb
mov
adc
sub
push
mov
mov
lahf
push
inc
jbe
fnstcw
outsl
pop
insb
out
out
cltd
leave
inc
andb
inc
push
data16
push
clc
imul
aad
sub
shrb
or
xchg
jge,pn
rorl
fisttpl
xchg
cs
rcll
stc
mov
repnz
mov
scas
xchg
add
popf
data16
xor
roll
leave
lods
and
add
test
pop
cmpsb
dec
cs
in
and
sbb
dec
mov
push
push
leave
xchg
stos
sbb
ret
adc
cmp
inc
in
repnz
mov
pusha
xchg
cltd
push
cmpsb
lods
xchg
dec
sub
push
dec
jo
sub
clc
mov
add
mov
lahf
push
lcall
and
lds
int3
cwtl
arpl
jo
xlat
jbe
mov
jle
popa
sarb
mov
xchg
hlt
inc
fstpt
mov
das
repz
xchg
movsb
in
out
dec
lret
xchg
fs
fisubl
push
push
fmull
mov
enter
and
arpl
mov
ja
lock
fdivrs
hlt
mov
out
push
dec
arpl
nop
gs
mov
fwait
mov
enter
popa
mov
stc
dec
pop
push
ds
ljmp
mov
jnp
frstor
add
dec
xor
inc
pop
push
inc
push
sub
push
cmp
in
mov
daa
sbb
bound
roll
mov
rolb
pop
cmpsl
pop
pop
iret
mov
cmp
mov
mov
clc
inc
sahf
stc
xor
stos
dec
stos
fs
loopne
or
mov
or
mov
sbb
xor
movsb
inc
xor
fistl
arpl
adc
stc
stos
sbb
dec
mov
add
popf
cmp
pop
mov
pushf
add
push
sti
cs
push
lods
test
scas
negl
out
pop
mov
cmpsb
mov
push
fnstcw
inc
xchg
push
xor
and
aad
mov
test
jae
outsl
cmp
cmpsl
outsw
xor
negb
out
mulb
xlat
jno
rol
sbb
mov
cwtl
mov
or
stc
jns
xchg
pop
popf
xchg
sbb
cmpsl
inc
cmp
xor
sub
inc
out
inc
aad
test
dec
gs
je
outsb
inc
mov
pop
cmp
out
dec
lods
xchg
mov
repnz
pop
out
or
xchg
divl
shl
jle
add
pop
decl
mov
and
dec
inc
iret
test
jnp
ljmp
add
shlb
aam
dec
mov
add
sahf
jns
loopne
pop
cli
mov
dec
xor
xchg
aam
push
icebp
idiv
lcall
test
mov
jg
fwait
pop
mov
jl
adc
in
sbb
popa
mov
pop
sbb
ret
sar
xchg
pop
jnp
adc
mov
adc
aas
ss
aas
loop
pop
push
nop
jmp
jle
xchg
stos
out
mov
jg
mov
adc
jb
adc
xor
cli
movsb
pop
aam
loope
sub
or
iret
cmp
cmp
add
push
xchg
mov
imul
insl
and
sub
scas
fiaddl
xchg
cwtl
out
add
icebp
testl
dec
lahf
repz
adc
pop
cmp
nop
sub
insl
hlt
dec
pop
push
loope
fiaddl
jmp
adc
sub
je
jg
fwait
mov
sbb
ss
mov
sbb
cmp
add
xchg
cmp
sub
inc
cmc
inc
data16
pop
jbe
sbb
pop
or
cmpsb
jl
test
and
mov
jle
push
inc
add
xor
fidivl
lret
inc
nop
int3
dec
dec
in
mov
cmp
insb
cli
std
aas
int
test
jne
dec
mov
in
mov
es
lea
loopne
push
and
lret
loop
cmpl
repz
mov
mov
lret
ljmp
cmpsb
insl
pop
gs
gs
shrl
sahf
cmp
mov
notl
pop
clc
insl
cli
push
aas
lock
adc
add
pushf
test
popa
push
cltd
pop
repz
ja
test
mov
inc
addl
loope
sub
pop
cwtl
cli
and
mov
inc
stos
push
xchg
jg
jno
xchg
sbb
insb
mov
cmpsl
out
sahf
pop
dec
mov
movsl
testb
push
mov
mov
in
jmp
xor
ljmp
stos
jo
inc
adc
inc
cmp
xchg
sbb
jns
imulb
popf
mov
push
addr16
inc
add
add
stc
or
dec
pop
ret
in
pop
incl
xor
xchg
call
hlt
enter
jne
es
or
out
xchg
mov
push
xchg
daa
call
push
fdivs
movsb
mov
jb
into
pusha
mov
into
mov
aad
pop
dec
push
mov
fimull
xchg
mov
mov
fnstenv
sbb
popa
je
xchg
xchg
enter
movsb
roll
mov
xlat
add
adc
shll
imul
inc
sbb
push
iret
xor
or
je
lret
sbb
sbb
lea
xchg
jecxz
test
js
jb
fadds
xchg
subb
cmp
icebp
ret
addb
mov
les
rclb
lds
dec
lods
pop
loope
imul
xchg
add
mov
dec
or
cmpsl
rcrb
fimull
out
sub
mov
mov
or
js
test
mov
inc
scas
call
pushf
and
xchg
adc
inc
xchg
test
mov
mov
lea
and
sub
int
imul
leave
stos
out
jb
aam
lock
nop
clc
sbb
pop
data16
sar
mov
in
fidivrl
jg
in
dec
fcoms
test
cmp
out
in
call
adc
sti
add
movsb
add
xchg
sub
inc
call
and
repnz
or
sbb
outsb
or
xor
adc
or
jmp
or
jp
pop
adc
and
bound
mov
mov
xor
xchg
cmp
xchg
inc
hlt
dec
xchg
jecxz
divb
cmpl
ds
fstps
mov
mov
inc
mov
push
pop
stc
jg
xchg
cmp
rclb
movsb
lcall
popf
test
lds
sbb
push
and
dec
sbb
lds
int3
mov
cmp
aas
jle
lcall
jo
mov
push
cld
inc
out
ja
repnz
subl
jp
dec
push
insl
mov
lock
int
mov
add
and
daa
je
jne
dec
mov
mov
ud0
incl
push
mov
jnp
cmp
sub
pusha
stos
inc
dec
xchg
hlt
out
push
scas
jne
pop
add
pop
movsb
xchg
mov
jb
test
mov
orb
dec
mov
mov
pop
jg
jae
xchg
add
out
xor
repnz
outsl
xorb
mov
cmp
subl
es
xlat
pop
out
jns
mov
mov
adc
push
cs
pushf
loop
cmp
fbstp
sti
sbb
adc
xor
in
shrl
push
das
sbb
push
pushf
icebp
mov
aad
adc
inc
pop
call
sbb
repnz
loope
ss
pop
dec
inc
mov
movsb
mov
in
cmpsl
jae
rcrl
sbb
cltd
imul
mov
lea
lods
mov
mov
ret
mov
jno
cld
jne
pop
int3
and
lock
test
add
mov
xchg
push
das
pop
sub
and
adc
sub
sbb
daa
divb
andl
mov
xchg
sub
xlat
adc
mov
call
int
sbb
pop
rorl
or
faddp
mov
jo
dec
dec
icebp
push
mov
and
jb
mov
shl
int
push
call
stc
inc
jne
sbb
clc
jmp
pop
mov
icebp
loope
sbb
icebp
mov
push
push
fists
xchg
inc
sbb
int
mov
pop
add
sub
jp
sub
daa
sahf
cwtl
outsb
ss
pop
jnp
jne
push
hlt
ja
dec
ret
xchg
les
js
icebp
add
and
test
push
sub
mov
shlb
shl
cmc
push
xchg
mov
imul
adc
idiv
push
xor
mov
aaa
aas
adc
mov
push
cltd
scas
je
push
repz
mov
pop
scas
jno,pn
mov
ljmp
xchg
gs
ret
add
dec
orl
sub
mov
gs
and
ja
cwtd
add
sbb
call
es
popf
xchg
mov
mov
dec
xchg
outsl
mov
or
mov
lods
pop
jecxz
push
mov
clc
test
out
cwtl
sub
cmp
roll
ds
push
push
sbb
ds
jo
sub
mov
mov
movsl
push
aam
enter
mov
mov
mov
add
cmp
insb
test
hlt
jae
lcall
add
cmpsb
mov
ljmp
std
mov
jb
bound
adc
imul
loope
sti
rcll
popf
xor
mov
mov
jbe
pop
scas
xchg
ljmp
cmp
lcall
or
or
jae
jne
clc
aaa
mov
jnp
push
xchg
xchg
push
jne
sub
or
sub
sbb
aam
jne
cwtl
and
sub
cmp
jmp
std
lret
jb
pop
inc
pusha
shr
cmpsl
dec
jg
add
test
sti
dec
dec
xchg
int
inc
dec
xchg
rep
add
jg
inc
adc
mov
mov
insb
cwtl
jge
outsb
dec
push
dec
add
outsb
jecxz
sub
mov
gs
clc
loop
scas
xchg
jae
sti
sahf
jb
xor
dec
and
inc
ret
in
sbb
cmp
push
sbbb
push
insl
shll
adcl
out
lock
pextrw
mov
cld
mov
inc
outsb
fwait
jg
push
push
jb
stos
test
into
add
sub
sti
cmp
test
aaa
add
add
mov
mov
inc
repnz
sbb
xlat
cwtl
repz
xor
mov
inc
dec
jecxz
stos
jns
fidivrl
sbb
pop
push
mov
mov
inc
jecxz
push
mov
or
jns
mov
cmpsl
cld
andl
test
inc
lods
mulb
cld
fnsave
cmp
mov
xchg
or
xchg
cld
mov
stos
stos
insb
inc
or
and
gs
mov
aas
mov
push
pop
push
shrl
pop
jge
jae
adc
std
cld
rcrl
mov
scas
stos
cmp
setb
shrb
loop
pushf
outsl
test
les
rclb
cli
jae
fcompp
lret
out
fiaddl
or
ljmp
xchg
scas
arpl
jbe
or
push
pop
inc
push
je
sti
push
sub
cmp
xchg
loop
scas
dec
mov
in
mov
jp
in
pusha
fldl
mov
or
pop
mul
sbb
push
xor
and
pop
add
mov
test
enter
iret
cmpsb
out
xlat
aad
imul
cmp
cld
je
rsqrtps
mov
mov
inc
test
js
xchg
loopne
xchg
scas
xchg
mov
jo
test
push
push
mov
cmc
iret
loopne
mov
jp
pop
stos
dec
daa
adc
gs
sbb
ror
call
cmp
ss
cmp
push
xchg
mov
dec
aaa
pop
inc
cltd
nop
aaa
jns
ret
mov
enter
fwait
push
or
push
imul
and
div
mov
mov
mov
daa
stos
push
jl
pop
test
adc
mov
mov
adc
pusha
rcrl
adc
arpl
mov
mov
add
xchg
stos
or
adc
cmc
call
lahf
shl
sub
fwait
sti
cs
test
inc
dec
mov
adc
and
pop
push
mov
push
and
xlat
jno
pop
sahf
imul
mov
int
or
flds
mov
iret
cmp
dec
stc
xchg
test
stc
loope
out
cwtl
mov
sub
popf
lods
sti
test
loope
xchg
jle
std
andb
push
mov
jl
jmp
add
outsb
das
mov
les
mov
int
xchg
cmpsb
cmp
fsubp
xlat
data16
dec
iret
clc
push
push
loop
jecxz
arpl
mov
fldl
pop
add
outsl
mov
mov
lods
je
inc
adc
and
mov
xchg
sub
or
jb
jg
incl
mov
push
sbb
pop
xchg
sti
nop
adc
inc
repnz
loope
movsb
mov
fsubrl
jae
pop
pop
popa
push
push
pop
xchg
call
pop
lahf
xor
lods
or
lock
push
push
cmpsl
pop
es
cld
add
cmp
aam
xor
out
idivl
inc
or
mov
or
pop
ss
roll
adc
sub
test
fld1
jne
sbb
push
arpl
dec
pop
enter
mov
cltd
aas
hlt
popf
test
mov
sbb
push
ljmp
es
rcrb
pop
sub
pop
cmp
inc
xchg
daa
sbbb
movsl
sarl
adcl
xchg
inc
adc
and
adc
lock
xor
ljmp
mov
ss
das
aaa
out
cmpsb
das
pop
mov
cmp
ror
sarb
iret
pop
add
shlb
lret
cld
cmp
das
in
pusha
and
sti
add
push
pop
pusha
adc
outsl
pop
push
mov
jae
xchg
cltd
jmp
cs
inc
cmp
xchg
sbb
mov
pop
push
jg
insb
sub
push
fcompl
sbbl
fwait
shlb
call
pop
xorl
ret
jmp
in
sub
rolb
mov
cmp
hlt
jb
and
adc
mov
sub
lret
into
inc
jp
sub
mov
mov
ret
roll
ja
leave
jmp
xor
popa
cmp
or
movsb
in
mov
mov
xor
ret
lds
icebp
pop
xchg
nop
orb
pushf
cwtl
adc
pop
in
les
dec
xor
cmp
push
mov
mov
popa
mov
adc
or
mov
mov
mov
cwtl
mov
pop
dec
mov
ljmp
adc
pop
xchg
jecxz
push
ror
lahf
fistpll
and
addr16
xor
cmpsl
mov
fwait
in
inc
sub
frstor
scas
mov
inc
dec
rclb
shll
sbb
shrl
scas
or
jnp
add
xlat
xor
mov
push
push
xor
add
adc
test
cmp
jb
insl
arpl
sahf
cltd
mov
dec
leave
popa
sbb
or
pop
mov
fimuls
mov
mov
adc
in
inc
adcl
std
pop
pop
inc
in
fisttpl
pop
sub
out
pop
aas
push
or
mov
mov
ret
test
xor
enter
test
xor
mov
popf
ftst
or
xchg
or
mov
mov
call
test
imul
cltd
stos
push
push
cld
rclb
ret
mov
gs
and
xchg
pop
add
pop
sarl
movsb
loop
cmp
dec
mull
mov
cmp
dec
cld
mov
pop
mov
jo
pop
test
nop
push
inc
and
mov
loop
stc
out
and
leave
or
aam
adc
mov
mov
mov
ror
cmp
notl
jnp
and
lock
dec
fldpi
pop
xchg
mov
adc
mov
cmc
fidivs
and
call
sbb
jmp
pop
les
hlt
xchg
sahf
aas
sbb
aad
cwtl
inc
or
stos
lahf
leave
dec
xchg
mov
add
cmp
mov
stos
lahf
pop
cmpsb
ss
cmp
jnp
out
mov
add
lea
add
jmp
jmp
ss
loopne
or
nop
call
cmc
add
sbb
loopne
jle
mov
or
inc
xor
push
movsl
enter
push
ret
push
inc
pop
dec
cmp
mov
jns
bound
cmp
mov
test
les
cltd
jmp
xchg
rorl
int
imul
add
call
out
xchg
jns
cmp
sub
inc
addl
jno
adc
pop
inc
mov
dec
adc
cld
sub
jmp
xchg
hlt
out
jne
adc
lds
xor
jb
mov
ficompl
jle
jne
fisubs
push
in
mov
pop
cmp
ret
mov
add
adc
mov
mov
scas
dec
mov
popf
es
xor
fisubs
or
pmaddwd
adc
inc
dec
test
jne
mov
test
sub
sub
sarl
mov
xor
mov
cmp
push
cmc
xor
sbb
dec
pop
mov
cmp
jl
mov
pop
inc
dec
cmp
sbb
fmull
dec
mov
push
xchg
pop
imul
cmpb
jle
fnstsw
and
cmp
in
adc
xor
and
and
into
dec
mov
xchg
xor
iret
jmp
sbb
and
push
popf
ss
mov
rcrl
jecxz
testl
in
adc
adc
pop
shrl
mov
xabort
clc
shlb
in
xchg
add
and
mov
rorl
sahf
xchg
cmpsl
push
jg
sub
adc
inc
fisttps
mov
mov
jno
push
clc
mov
push
sub
xor
sbb
jno
ds
push
push
cmc
mov
push
jge
lds
roll
mov
xor
out
push
movsl
and
dec
cmp
cmpsb
das
mov
inc
cmp
subl
push
push
push
and
inc
adc
cmp
xchg
jle
aam
mov
pop
mov
out
shll
orb
data16
jb
incb
push
push
fwait
shlb
sub
cmp
pop
pop
ret
in
out
mov
dec
and
in
fiaddl
push
in
sti
test
sahf
fisubrs
and
das
jo
rol
es
int3
outsb
xorb
adc
xchg
test
sbb
mov
dec
add
sahf
sbb
add
push
fisubs
test
dec
and
xor
cwtl
andb
push
loope
cmc
xchg
addr16
clc
adc
in
xor
clc
shld
inc
inc
mov
mov
mov
inc
imul
jae
or
addr16
cwtl
jg
and
xchg
or
cmp
nop
daa
and
das
pop
push
jne
push
rorb
out
mov
mov
pop
lock
outsb
sbb
mov
cmp
mov
mov
mov
and
shlb
loope
xchg
xlat
scas
pusha
into
sub
mov
adc
push
pop
mov
pop
cli
fcompl
xor
fsubrp
inc
sbb
in
out
cmp
mov
push
jmp
ret
hlt
lock
xchg
mov
xchg
leave
inc
sti
push
pop
pop
mov
loope
sbbl
mov
cmp
popf
fnsave
ja
jge
shlb
pop
dec
sarb
push
adcl
inc
jmp
mov
push
mov
inc
lahf
mov
pusha
dec
pusha
inc
mov
iret
fisubrs
out
popa
adc
pusha
int
ret
sahf
in
or
or
addr16
aas
xchg
idivb
add
mov
mov
loop
inc
outsl
pop
inc
and
cltd
leave
cmp
repz
mov
int3
sahf
call
lcall
and
push
mov
pop
lret
pop
aaa
mov
push
out
out
cmp
in
lret
imul
iret
stos
ror
sbb
mov
adcl
pop
jae
mov
out
jmp
pushf
cli
daa
dec
xor
dec
inc
or
les
sbb
fsubrl
mov
sbb
mov
xor
out
sub
les
cld
xchg
daa
ljmp
mov
pop
mov
ljmp
adc
mov
dec
pop
popf
or
pop
roll
das
mov
xor
fistpll
repnz
inc
adc
repnz
add
mov
dec
in
ficompl
lret
loopne
scas
cmpsb
fcomp
out
inc
imull
mov
imul
lcall
popl
pop
rcr
js
pop
add
jle
jae
jecxz
cmp
add
ljmp
mov
cmpsb
inc
push
decb
jb,pn
cmpsb
fiaddl
add
pop
push
in
jl
add
adc
xchg
orb
ret
mov
and
adcb
xchg
mov
ss
ljmp
adc
push
cmp
pop
inc
lcall
mov
iret
push
int3
sbb
sbb
mov
cmp
stos
popa
dec
xor
gs
lods
out
out
jmp
stos
add
fldenv
lea
push
imul
mov
inc
push
xor
jns
mov
ret
daa
push
call
sbb
mov
enter
in
ja
xorl
aaa
cmp
jnp
repz
xor
rorb
data16
in
adc
in
push
add
mov
sbb
jb
insb
pop
push
scas
aas
jp
scas
fwait
sbb
fwait
mov
fwait
or
nop
push
sbb
sbb
in
mov
hlt
or
test
stos
arpl
lods
pop
movsb
hlt
jbe
and
pop
mov
sub
icebp
cwtl
popa
push
cld
mov
into
addr16
pop
lahf
clc
stc
jns
mov
test
out
mov
gs
sbb
movsl
mov
popa
lcall
mov
cmp
and
insl
add
fsubp
je
stos
or
sub
popf
mov
std
sbb
dec
aad
push
dec
add
xor
mov
jo
and
add
pop
mov
loope
xor
test
jno
xchg
mov
testb
cmp
test
cli
mov
aam
xor
or
imul
mov
out
lods
mov
ljmp
pop
xchg
js
xlat
sub
sub
push
gs
lods
cmp
repnz
sahf
sbb
mov
shrb
push
iret
pop
sbb
cmpsl
mov
jne
push
lahf
outsl
mov
mov
inc
push
mov
data16
inc
test
negb
in
aam
mov
mov
in
mov
push
adc
cmp
push
inc
jb
adc
shll
sbb
pop
mov
pusha
neg
insb
imul
sbb
and
jne
jns
and
jp
jno
popf
les
les
hlt
inc
insb
cmp
push
enter
cmp
inc
mov
inc
xchg
lea
push
push
and
imul
jge
pop
movsl
and
sbb
sub
lahf
arpl
sub
icebp
cltd
push
cltd
fstpl
sbb
push
mov
shlb
jge
push
ror
push
and
ds
adc
inc
test
outsl
addr16
mov
std
xchg
push
pop
mov
out
std
push
xchg
cld
mov
sub
data16
outsl
and
xor
dec
fcomps
xor
les
lds
lods
xchg
pop
xor
jp
dec
inc
cli
mov
in
cmp
sahf
inc
cli
sbb
divb
clc
into
xor
and
jno
xchg
cmc
movsl
int3
mov
and
adc
loope
mov
dec
pop
shr
cltd
inc
fistpl
aam
xchg
pop
in
dec
xchg
lret
loopne
cld
pop
clc
and
sub
cmp
outsl
lock
jb
pop
movsl
insb
lret
and
movsb
into
cmpsb
cli
jg
jl
xor
dec
rorb
push
sub
sbb
fbld
push
inc
mov
popf
xorl
or
iret
mov
push
imul
rclb
cmpsl
dec
push
outsb
test
mov
aas
fs
shrb
decl
clts
sub
enter
mov
mov
or
mov
movsb
scas
loop
in
aas
mov
lcall
sub
mov
gs
xchg
adc
sarl
add
mov
in
cmpsb
ret
lods
cwtl
or
add
mov
fnsave
call
adcl
adc
jmp
pop
imul
andb
pop
stc
test
mov
popa
sub
cmpsl
jl
mov
hlt
test
ret
mov
rorb
adc
stos
lahf
shl
jge
in
sbbl
dec
ss
inc
xchg
cli
fs
sub
jecxz
lods
xchg
sub
dec
sbbl
mov
or
mov
fsubrp
ljmp
shlb
rcr
jl
or
sti
psubusb
dec
mov
dec
cmp
sbb
dec
andb
fstpt
sub
sbb
xor
shl
sub
adc
popf
fnstsw
cmp
js
jne
cs
cltd
dec
jge
jg
fisubl
dec
es
dec
mov
push
add
inc
outsl
xor
xor
adc
inc
inc
mov
or
mov
pop
adc
push
imul
in
and
xlat
mov
jno
xchg
add
jmp
and
sub
sbb
adc
lahf
lea
clc
ss
mov
test
pop
das
xchg
inc
jge
push
stos
pusha
cmp
fs
xor
imul
inc
mov
mov
add
jae
or
addb
leave
mov
icebp
push
mov
fbstp
dec
pop
les
xor
scas
push
sbb
fldl2t
xlat
test
and
cmp
inc
fisttps
roll
loope
popf
add
pop
pop
add
pop
mov
dec
push
xor
es
lods
add
shl
jne
scas
in
xor
fistps
xchg
jge
mov
subl
daa
push
xchg
pop
cs
lea
or
xchg
nop
mov
lahf
jb
inc
cltd
mulb
dec
outsl
call
cmpsb
push
xor
or
sub
xlat
xor
and
lcall
cmp
jmp
ja
mov
lods
gs
cmp
fwait
insb
pop
lret
testb
xchg
pop
repz
lahf
add
dec
dec
jle
and
fistpl
ss
jmp
jbe
dec
cltd
jns
mov
out
mov
fstl
jl
inc
add
push
rclb
mov
or
and
dec
in
adc
shrb
inc
fisubs
fsubl
pusha
fstps
sbb
stc
push
mov
ljmp
add
aad
ret
out
mov
mov
mov
push
xchg
pop
arpl
ret
adc
shll
jo
sbb
inc
fs
lods
fsubr
ret
and
dec
movsl
sub
push
gs
push
cmp
or
ret
sub
mov
fldcw
push
dec
daa
add
mov
mov
dec
xchg
mov
push
sub
cmp
or
add
out
lahf
mov
jo
lea
es
jle
pop
mov
mov
ds
nop
scas
mov
fwait
adc
data16
cli
sbb
add
inc
jecxz
sarl
stc
mov
xchg
scas
sti
sbb
fbstp
jnp
mov
mov
sub
jae
xchg
dec
rorl
xor
mov
cmp
or
mov
mov
sbb
gs
dec
ret
lds
mov
dec
jle
cltd
adc
sub
sahf
push
test
outsl
enter
je
test
loopne
shll
mov
inc
hlt
aam
and
shufps
and
sbb
scas
mov
sarb
push
mov
pop
xchg
insb
add
les
mov
and
mov
stos
mov
mov
cmp
std
into
push
pusha
mov
mov
cmp
pop
hlt
mov
xor
dec
mov
ret
dec
movsb
jmp
jecxz
ret
xor
inc
jl
xchg
ss
fcoml
jb
add
jo
mov
pop
sti
cmpsl
call
ja
and
mov
mov
push
mov
pusha
jp
inc
arpl
test
pop
push
pop
push
gs
push
mov
roll
movsl
and
loopne
add
lock
adc
push
jo
push
xor
or
jbe
ljmp
je
mov
test
repnz
add
mov
insb
shll
mov
es
sub
lock
test
pusha
xchg
lea
icebp
popf
repnz
ljmp
and
ret
bound
mov
in
jbe
fldcw
adc
fwait
dec
hlt
popf
icebp
sub
lods
mov
loope,pt
sub
mov
mov
ficomps
pop
xchg
in
je
bound
pop
pop
ss
xor
cmp
xchg
imul
xchg
jp
lret
cld
sbb
mov
mov
ds
out
subl
mov
lods
or
jb
mov
outsb
sub
xor
sub
movsb
mov
jge
mov
and
adc
sbb
mov
or
sbb
dec
or
imul
loopne
mov
in
pop
movsb
add
adc
subb
mov
xor
and
jae
cmp
xchg
pop
cmp
pop
in
data16
xchg
or
push
hlt
cmc
movsl
pop
scas
xchg
imul
sbb
xor
push
and
jo
test
ficompl
sti
in
mov
movsl
dec
pop
inc
sbb
pop
add
pop
or
clc
fwait
dec
dec
sbb
push
push
and
imul
test
sub
push
movsl
addr16
add
fsub
fs
or
push
ret
sub
xor
sub
pop
jbe
outsl
lea
or
jmp
cmpsb
ja
sub
jb
loope
and
xor
mov
xchg
pop
ret
adc
lods
mov
push
aam
imul
popa
daa
repz
cmp
gs
lret
aad
jno
add
and
inc
rcr
inc
push
cs
rcl
xchg
test
adc
fwait
aas
xchg
ret
and
cmpsb
pop
enter
push
in
das
dec
jo
cltd
stos
rcrl
dec
daa
inc
jle
fcmovbe
inc
adc
in
loop
pop
mov
clc
fwait
cwtl
cmc
mov
cmp
pushf
std
pushf
and
sub
xchg
jp
cld
push
out
arpl
cmp
xchg
push
sbb
movl
cmp
push
push
adc
sbb
or
lock
fiaddl
xchg
out
xchg
xchg
stc
std
sbb
test
stos
les
call
icebp
comiss
xor
push
push
sbb
ljmp
and
push
enter
pop
push
dec
dec
in
cmpsb
cmpsb
adc
in
inc
add
cmpb
adc
movsb
xchg
add
loopne
pop
subb
dec
dec
loopne
push
ljmp
fsubrl
loop
dec
and
jno
cld
push
xchg
xchg
mov
sbb
sub
shl
sub
ja
rorl
in
mov
jmp
js
cld
and
data16
mov
pushf
outsb
ret
ds
adcl
sbb
pop
ss
push
lret
or
and
mov
xor
or
aam
xchg
mov
sbb
in
ljmp
push
jp
adc
sub
out
mov
aaa
xchg
mov
dec
mov
arpl
out
cmp
mov
rclb
mov
out
jnp
inc
int
jg
jle
int
and
jle
pop
sub
push
decl
outsb
aam
fs
cmp
mov
repnz
pop
ret
jecxz
pop
mov
test
push
mov
jne
xchg
add
xchg
cmp
in
sbb
sbb
mov
insl
lret
repz
std
mov
scas
jp
in
sahf
inc
push
out
leave
mov
les
cmpsl
movsl
sti
push
movsl
je
ja
mov
in
imul
cmc
xor
inc
xor
push
sti
repz
inc
sbb
iret
scas
inc
mov
mov
insb
push
jle
jbe
push
pop
pop
mov
aam
or
shl
pop
cld
xchg
ss
leave
dec
xchg
scas
ljmp
es
fisttps
dec
fst
out
jp
clc
loopne
or
mov
add
out
out
out
lods
push
inc
mov
xorl
nop
stc
inc
fs
shll
jnp
jo
leave
pop
mov
mov
cld
mov
jne
jl
jne
xchg
xor
push
mov
push
xor
push
insl
fidivl
push
lret
mov
sti
cmp
out
inc
lock
xchg
mov
stos
gs
jle
aad
iret
mov
add
ds
and
cli
push
sub
ljmp
lahf
push
adc
repnz
das
and
mov
in
xchg
shll
push
mov
cs
daa
insl
dec
adc
dec
dec
and
pop
insb
cwtl
out
pop
lea
mov
int3
adc
mov
add
jbe
aas
cmp
out
add
stc
pop
fists
pop
stc
fwait
testb
mov
sbb
xchg
and
repz
sub
xchg
push
xchg
dec
mov
mov
cli
jnp
out
loop
ficompl
mov
adc
test
xchg
pop
mov
or
ljmp
push
in
push
fisubs
lcall
or
mov
rcrb
xchg
jecxz
mov
or
mov
leave
pop
ret
push
je
jl
and
cmp
xchg
push
iret
or
dec
bound
adc
ds
call
aaa
cltd
rorl
subl
push
popf
nop
sub
add
insl
in
pop
call
xor
js
sbb
js
leave
jne
lods
cmpsl
out
in
scas
pop
ret
cs
jmp
ss
pop
sub
insl
sbb
sbb
ficompl
sarl
mov
and
xchg
lods
push
jb
xchg
push
push
inc
xchg
lods
jge
xchg
pop
sbb
cltd
adc
jnp
int3
and
imul
inc
push
jl
jo
xchg
pop
push
mov
imul
mov
data16
lret
stc
dec
test
jb
cmpsb
notb
rorl
cmp
dec
adc
sub
push
sbb
xor
or
adcl
cmp
xchg
mov
addr16
mov
mov
xchg
les
dec
arpl
and
cmp
and
out
bound
and
mov
mov
add
test
andb
push
out
xor
mov
imul
and
mov
xchg
pop
lret
jg
sub
mov
test
adc
neg
pushf
dec
scas
or
or
je
push
jl
pushf
mov
pop
sbb
das
orl
cld
mov
xor
mov
aam
gs
add
mov
sti
ret
cld
loop
adc
push
rcr
test
inc
aam
add
sub
or
xchg
imul
jp
iret
jmp
fidivl
jnp
rorb
lock
or
rol
or
loop
shl
and
sub
jle
cmpsl
fldt
loop
int
mov
dec
add
outsl
mov
inc
fisttpll
lea
jp
in
daa
and
ds
stc
inc
aam
mov
mov
sbb
imul
xchg
loop
lret
js
and
dec
dec
jb
das
test
shrl
inc
cmp
lods
dec
push
imul
stos
add
sub
clc
pop
icebp
mov
data16
call
jge
sbb
clc
aam
jnp
int3
in
cwtl
pop
xchg
fwait
mov
pusha
jl
mov
sbb
jnp
sti
pop
xchg
pop
pushl
and
mov
sbb
inc
push
jne
add
push
or
sbb
adc
es
inc
sub
mov
rclb
mov
je
mov
jg
icebp
jle
mov
ret
sub
les
jb
mov
and
test
push
pop
insl
in
xchg
shrl
push
adc
ficompl
shrb
dec
push
jae
in
xchg
sub
jmp
push
mov
xor
or
cmpsb
sti
sub
inc
mov
ja
in
fadds
pushf
xor
rorl
sbb
fs
dec
fcmovnb
mov
loop
xchg
mov
push
jne
mov
sbb
hlt
lock
push
xor
in
xchg
fists
and
jmp
and
lret
cld
loopne
xchg
inc
cli
sub
les
mov
pop
je
into
out
adc
loop
fucomi
sbb
stos
out
push
les
fnstcw
add
xor
jmp
rcll
roll
out
pop
mov
in
js
mov
arpl
aaa
mov
cmpsl
push
pop
or
or
or
dec
enter
cmpsl
add
dec
pop
pop
push
rcr
or
jle
sub
sub
mov
shrl
insb
push
sub
mov
inc
or
dec
push
dec
loopne
dec
mov
test
xlat
fidivrs
test
sub
nop
pop
pop
xlat
xchg
addb
cmp
aaa
stos
mov
stc
push
xchg
cmp
test
dec
inc
jp
push
sarb
xchg
xchg
cltd
jecxz
orl
mov
rcr
inc
sbbb
pushf
stc
sbb
mov
mov
repz
jno
xor
shll
inc
xchg
and
adc
std
sti
inc
out
pusha
aas
shlb
push
push
inc
in
adc
sarl
mov
push
mov
es
int3
ja
xchg
mov
je
pop
mov
xchg
mov
push
roll
push
xor
xchg
adc
push
aam
jb
stc
insb
aad
icebp
cmp
out
data16
or
or
lcall
mov
adcl
fdivrs
das
and
and
push
mov
in
jns
push
cmp
jecxz
js
popa
sbb
and
pop
jmp
int3
popf
jecxz
mov
orb
mov
mov
sbb
jae
aas
aaa
push
pusha
cmp
gs
int
aad
je
clc
ror
sarl
xor
sub
in
leave
mov
xor
add
mov
out
int
sub
sbb
mov
inc
pop
xadd
scas
jl
cs
mov
mov
jae
push
dec
mov
mull
mov
push
sbb
or
add
aad
fnsave
lahf
jo
mov
and
outsb
add
mov
xorb
pushf
aam
adc
ret
movsl
adcl
or
out
or
cmpsb
aas
mov
loope
jne
out
cld
xchg
pushf
fmul
in
xor
mov
pop
sahf
adc
add
push
es
mov
jne
sub
or
inc
sub
popa
inc
lea
sbb
scas
ljmp
xor
mov
inc
add
test
adc
add
pop
cmp
hlt
push
dec
jb
in
push
push
lcall
cmp
bnd
sbb
stos
mov
fdivl
test
aad
ficomps
adc
bound
xor
dec
sbb
push
inc
mov
dec
sub
imul
push
add
sub
push
cmp
aam
loopne
gs
mov
daa
add
std
mov
sub
mov
or
nop
mov
mov
sarl
jp
subb
stc
sarl
jecxz
cli
push
pop
jns
je,pn
ror
jp
jmp
bound
or
mov
mov
xchg
mov
daa
imul
push
or
lods
imul
nop
mov
in
sbb
ljmp
add
lods
add
es
stc
das
shl
sub
flds
xlat
mov
push
incb
pop
lods
cmpsb
jmp
push
xchg
jb
jb
jle,pn
ds
push
xor
out
and
aaa
cld
mov
mov
add
xchg
dec
andb
ret
int
xchg
out
cmp
cli
dec
out
jnp
push
cmpsb
mov
jb
enter
adcl
insl
sarb
cmpsb
bound
loopne
push
or
sbb
cmp
mov
lahf
jmp
xor
stos
adc
lahf
lods
add
cmc
outsl
add
xor
xlat
inc
pop
xor
ret
sbbb
adc
sub
hlt
test
int3
in
or
mov
loop
arpl
cmp
outsb
cmpsb
xchg
mov
mov
test
mov
sbb
out
loop
cs
aam
push
mov
int
mov
fs
popfw
movsl
and
dec
lea
dec
jbe
jmp
inc
pushf
push
jp
loop
test
stos
data16
popf
jg
sub
and
lods
push
nop
pop
outsl
in
pushf
into
cwtl
aam
ret
int3
xchg
xchg
js
inc
push
dec
lods
dec
lea
lret
adc
add
push
xorl
int3
mov
jp
dec
outsb
mov
cmp
pop
jl
lret
mov
cmp
fsts
jg
pop
or
mov
dec
stc
ret
out
pop
sti
mov
out
pop
mov
mov
jbe
lret
and
pop
push
jl
fisubs
ret
mov
lds
mov
mov
insb
xchg
repz
add
xor
icebp
stc
or
subl
das
adc
mov
fisttpll
pop
jg
lret
xor
xchg
inc
mov
cltd
iret
je
shr
loope
inc
xchg
sbb
scas
push
sub
sub
bound
jae
and
or
stos
cmpsl
adc
repnz
add
jb
xor
dec
cs
dec
fdivl
clc
lds
fiaddl
dec
mov
testl
aad
cmc
fdivrp
fisttpl
jno
jnp
pop
xchg
imul
adc
inc
mov
je
inc
mov
fs
push
outsl
mov
xchg
mov
mov
iret
jp
outsl
or
out
xor
mov
mov
jb
sub
decl
nop
inc
shrb
cld
std
hlt
ficomps
mov
lock
sbb
ljmp
repz
fwait
xchg
push
xor
dec
add
mov
pop
scas
sub
xor
lret
loopne
push
cmc
fisubl
cmp
arpl
cwtl
xlat
sbb
and
ljmp
pop
sbb
adc
xchg
add
sbb
mov
mov
and
shrb
lds
xor
fsubl
ja
mov
pop
add
cmp
inc
dec
ljmp
test
lods
mov
pop
jns
ret
adc
push
mov
jnp
shrb
arpl
push
clc
inc
sbb
dec
add
mov
lahf
mov
sub
lret
mov
push
ss
xchg
lret
mov
pop
int3
pop
bswap
sbb
dec
data16
outsb
dec
nop
and
pop
or
hlt
or
ds
fcompl
dec
inc
sub
add
enter
xchg
cmpsb
inc
jmp
push
mov
scas
jg
inc
shlb
cmp
gs
daa
mov
sahf
jb
adc
mov
push
test
and
out
int
jle
in
mov
imul
imul
loopne
inc
xlat
pop
xor
push
inc
pushf
ljmp
xlat
sbb
into
pop
or
les
into
ds
stc
es
cmpsl
push
mov
icebp
lcallw
mov
xor
jno
popf
mov
push
insl
shll
stc
mov
inc
push
xchg
cmp
ja
mov
js
out
cltd
bswap
xor
int
inc
insb
sub
xor
cmpsb
int3
lock
outsb
mov
mov
pop
inc
popf
pusha
xchg
js
in
dec
in
lock
pop
int3
sub
xchg
adc
and
sub
add
dec
fcomps
loopne
fldt
push
adc
lea
and
mov
xchg
outsb
and
jl
cmpsb
movsl
int3
pop
adc
jo
roll
iret
add
in
jle
mov
fucom
push
sub
rclb
mov
pop
lock
notl
mov
push
outsl
dec
out
sbb
lcall
dec
pop
pop
or
pop
pop
popf
xorb
and
inc
sahf
xor
jle
xor
mov
jle
incl
push
shl
push
mov
dec
xor
int3
popl
mov
add
cltd
int
pop
int3
pop
push
mov
xlat
sub
sub
mov
arpl
inc
and
jle
mov
loope
aad
out
sbb
mov
pop
repnz
cmp
add
sbb
xor
sub
and
mulb
arpl
dec
xchg
dec
add
cltd
fsts
xchg
test
enter
cmp
cmp
push
xor
pop
aad
push
and
test
xchg
hlt
and
ret
lock
into
je
call
pop
and
or
sub
ss
adc
cmpsb
xchg
in
loop
cmpsl
jmp
cld
fimuls
imul
jns
dec
roll
std
cwtl
clc
gs
inc
rcll
jno
jae
into
stc
dec
and
sub
cmpb
add
pop
add
dec
lock
std
fmuls
push
mov
sub
cmp
mov
lcall
out
imul
out
bound
pop
pop
pop
adc
mov
push
jne
mov
lods
leave
cmpb
cmp
lods
fnsave
aam
mov
fildll
cwtl
and
inc
insb
bound
cld
bound
push
repnz
xchg
jns
shr
rorl
cltd
test
and
and
xchg
int
movsl
cmp
push
aad
mov
aaa
imul
inc
add
sbb
mov
addb
call
and
mov
loopne
adc
out
jecxz
add
cmc
jae
and
dec
sarb
enter
gs
subl
sbbb
adc
dec
je
scas
stc
cld
sub
mov
jge
out
shll
and
cmp
jno
pop
lea
or
rcr
fucomip
or
xchg
and
jne
sub
or
pop
pop
pop
sub
push
mov
enter
and
aas
add
repnz
daa
stos
sbb
cmpsl
push
pop
add
inc
clc
lods
test
jl
pop
in
sub
add
hlt
cmc
inc
xchg
jno
jns
adc
lret
xchg
pop
adc
out
cmp
shll
cmc
jne
inc
fld
mov
mov
xchg
int
aam
repz
sbb
or
test
cltd
cmc
pop
mov
lods
push
push
jb
movsl
push
sub
dec
pop
inc
dec
push
icebp
xor
jmp
or
stos
cmpsb
popa
sbb
outsb
cmp
jns
in
pushf
sub
subb
mov
lcall
data16
add
inc
and
mov
xor
hlt
movsl
and
push
cltd
push
mov
lock
sbb
fdivs
in
lea
nop
ffree
nop
pusha
inc
mov
pop
mov
cmp
dec
cmc
leave
stos
push
mov
in
das
gs
fcoms
push
mov
ljmp
stc
jmp
pop
lret
xchg
shll
mov
sarb
cld
sbb
insl
scas
shll
js
push
out
js
pop
je
sarl
mov
push
inc
lret
incl
jle
push
push
lret
insl
jbe
cltd
sub
fiadds
push
jno
lods
aas
fnstsw
push
ja
stos
rorl
loope
sbbl
int3
test
lods
cli
or
cltd
mov
test
inc
xchg
xor
adc
inc
lock
push
sub
inc
fmuls
subl
xchg
and
push
inc
rcl
add
and
stc
movsl
push
fnstenv
pusha
mov
jl
xor
stos
es
dec
sub
orb
add
into
xor
lcall
ljmp
or
inc
inc
mov
ds
out
push
mov
jno
pusha
xchg
lds
push
mov
push
inc
mov
andb
sahf
push
xchg
push
js
fdivrl
xchg
mov
out
xor
movsb
aas
and
ja
xchg
mov
xor
jno
stos
dec
push
adc
cwtl
add
out
ret
jp
jg
icebp
nop
jecxz
loope
test
mov
mov
cmp
push
adc
mov
and
dec
sbb
fisttpl
adc
adc
popf
mov
adc
dec
add
loopne
sbb
std
outsb
aaa
lret
loop
jnp
loope
sub
insl
and
int
add
cli
xchg
jbe
rcrb
aaa
test
cmc
fbld
xchg
xor
int
push
jb
xor
enter
sbb
cmp
ret
dec
stos
add
cmp
icebp
cmp
mov
push
mov
dec
xor
xchg
stc
xchg
enter
or
lcall
test
mov
add
std
cld
mov
sarl
fcomi
fsubrs
xchg
mov
xor
insb
lahf
or
mov
test
or
inc
jnp
mulb
push
js
push
jae
dec
ja
fcoml
ret
push
sub
mov
jmp
dec
mov
fldcw
in
xor
mov
clc
jb
mov
mov
sbb
inc
movsl
pop
mov
pop
sahf
in
test
inc
loop
dec
das
lock
and
jnp
xchg
mov
inc
ret
mov
cwtl
xor
cltd
sub
out
pop
adc
dec
sbb
push
movsl
fs
pop
mov
arpl
or
xlat
jecxz
js
into
fwait
gs
or
xor
stos
fisttpll
cmpl
push
test
pop
lret
pop
add
lods
xlat
ja
mov
add
pop
pop
loop
cmp
sub
jecxz
push
add
ds
test
int
shrl
rcrl
outsl
xchg
push
and
mov
test
push
jecxz
jle
mov
adc
mov
fcoml
gs
frstor
enter
xchg
lcall
cmp
xchg
jge
test
insb
cmp
jp
mov
xchg
xchg
sbb
sub
xor
in
or
js
je
pop
clc
fistpll
aaa
sbb
arpl
jnp
loope
shr
xlat
xor
push
push
repz
sbb
lods
push
mov
inc
inc
pop
stc
fadd
loopne
sub
icebp
mov
push
mov
dec
push
mov
jl
sbb
inc
pop
add
xor
jp
pop
cwtl
push
sbb
les
ja
mov
in
dec
aad
mov
dec
and
adc
outsl
shrl
test
imul
sbb
cltd
ss
cmp
movsl
sarl
sbb
mov
imul
jmp
fcmovne
cmpsl
dec
or
js
mov
push
xchg
jnp
push
xlat
dec
adc
or
push
cmpsb
loope
fdivs
orb
sbb
inc
jmp
mov
and
mov
ss
mov
push
xchg
in
lret
popf
cmpsb
cmp
bound
add
sbb
dec
xchg
in
inc
dec
sti
dec
push
test
adc
xchg
pop
jle
xor
sub
or
mov
mov
pop
js
cmp
clc
inc
dec
sub
out
lock
add
mov
or
mov
out
int
sub
andb
ret
mov
subb
xor
jnp
rorb
jmp
jne
mov
add
and
bound
xchg
lods
jg
jge
sbb
sub
test
jo
ficompl
hlt
sbb
pop
sub
clc
and
mov
cmp
dec
sahf
xor
mov
movsb
popf
in
mov
pop
push
lds
mov
push
sub
pop
dec
jge
push
and
nop
cmpsl
cwtl
mov
mov
inc
fiadds
add
or
fwait
xchg
xchg
sbb
bound
arpl
fcmovnbe
repnz
xchg
mov
xchg
sbb
shl
jb
icebp
jl
jle
add
aaa
xor
mov
loope
sbb
aam
inc
iret
dec
dec
xor
sbb
xchg
add
ja
mov
out
outsl
test
lret
ret
adc
inc
test
pop
fists
push
adc
cmpsb
arpl
out
push
xchg
scas
incl
add
call
shrb
fs
inc
jle
iret
sub
push
mov
adcl
mov
inc
mov
stos
or
cltd
jle
push
sub
mov
mov
stc
jb
mov
scas
das
incb
ds
adc
movsb
scas
sbb
fildl
in
push
in
dec
fadds
pop
fsubl
movsb
sti
popa
jbe
outsb
popf
shr
lea
bound
jo
xor
jg
dec
mov
hlt
pop
inc
or
xchg
ljmp
sbb
add
or
hlt
push
push
scas
and
add
pop
daa
arpl
mov
out
std
in
lahf
adc
fisttpl
bnd
jge
int
or
rcr
jae
and
cli
popf
pop
lock
lcall
adcl
int3
andb
stos
not
pop
cmp
adc
add
mov
ja
jo
pop
lret
loop
fnsave
test
out
testb
xchg
push
xor
sbb
jns
and
ret
fiadds
dec
xchg
pusha
cmp
in
fistpl
cli
outsl
aaa
ljmp
sarb
jbe
pop
xor
mov
xchg
mov
pop
and
mov
pop
outsl
xor
out
int3
lock
jge
push
push
inc
cli
inc
ja
adc
push
pop
fmuls
popf
add
mov
les
and
enter
mov
mov
xor
movsb
mov
jmp
inc
cmp
pop
cmp
jno
bswap
aam
sti
push
inc
int
push
mov
out
cwtl
push
push
aam
insl
sbb
test
iret
sub
std
push
stc
push
mov
or
pop
add
xor
sub
xchg
adc
mov
faddl
ror
mov
inc
pop
mov
cmpsb
lock
cmp
push
inc
shl
lret
sbb
xchg
insl
stc
cmc
jle
push
inc
sbb
mov
adc
dec
or
cld
push
add
ss
sub
lods
jmp
mov
inc
xlat
es
pusha
into
pop
pop
jg
mov
mov
rclb
mov
out
add
sub
cmp
faddl
mov
lds
fbld
mov
xor
arpl
or
xchg
es
inc
xor
es
addr16
push
cmc
lret
add
sub
aaa
cmp
in
jle
mov
xchg
dec
cmp
cmp
popf
mov
inc
das
sti
push
dec
notl
stc
pop
inc
aam
outsb
aam
into
jg
pop
mov
ja
pminub
inc
shll
loopw
adc
outsb
push
std
add
aaa
mov
and
fstpt
lock
xchg
push
mov
cwtl
in
insb
sub
sbbl
add
lahf
repz
jno
test
lret
xchg
iret
push
in
push
aad
jg
mov
mov
daa
fiaddl
stos
jmp
aaa
loopne
inc
or
add
mov
mov
js
jns
add
and
adc
push
loop
hlt
outsb
fst
fisubs
pop
les
lahf
test
test
mov
fnstsw
and
dec
lods
jle
ret
movsl
arpl
push
inc
sbb
xchg
jge
adc
sbb
push
adc
push
popa
clc
adc
les
insl
test
sub
and
test
cs
xchg
inc
out
sub
in
pop
pushf
xchg
pop
subb
gs
inc
add
dec
and
movsb
data16
sub
ficompl
scas
jg
lret
pop
je
les
loopne
or
xor
dec
in
pop
cmp
ret
ficomps
sbb
pop
cli
out
test
ror
push
pop
insb
or
add
outsb
insb
inc
xchg
sbb
mov
adc
lock
aaa
js
in
pop
mov
aas
jno
dec
mov
xor
push
ficoml
cltd
loopne
jb
xorl
divl
out
cmp
sahf
push
idiv
call
leave
ret
pop
lcall
lcall
rcrb
out
daa
or
mov
sub
xchg
sub
xchg
fmul
pop
lret
ja
adc
inc
adc
aaa
xlat
push
nop
jne
adc
mov
add
in
mov
stc
rcl
out
leave
mov
push
arpl
out
sub
jl
cmpl
inc
add
pop
ja
into
push
insl
test
ret
mov
sbb
mov
test
push
mov
jo
aad
push
shl
push
sub
testb
rcrl
cli
cmp
bound
ret
sti
push
dec
ds
enter
enter
add
pushf
les
jl
jno
enter
repz
jecxz
test
clc
adc
mov
out
mov
or
cltd
icebp
jecxz
pop
scas
push
andl
mov
ja
aad
pop
mov
mov
mov
push
pushf
loopne
popf
sbbl
add
dec
mov
repnz
add
aad
stos
push
add
imull
cmp
pop
mov
faddl
adc
scas
pop
push
ja
insl
mov
inc
adc
push
cmpsb
setns
sub
adc
mov
bnd
fisttpl
outsl
into
inc
repnz
hlt
sbb
fidivrs
arpl
bound
xchg
add
gs
mov
or
jb
cmp
inc
and
jg
test
mov
sub
cmp
test
scas
mov
rorl
rcrl
push
mov
cmp
and
iret
repz
cld
cvtdq2ps
jmp
inc
xchg
or
je
iret
lcall
std
mov
add
or
push
cmp
adc
fsubrs
jle
movsl
dec
add
andb
les
repnz
in
insl
mov
dec
divl
mov
mov
pop
jne
sbbb
cmp
add
push
cmp
xchg
inc
sti
pop
ds
or
sub
and
push
xchg
sbb
push
push
aaa
je
pop
inc
sub
cmp
ss
cmpsl
pop
pushf
fmull
and
inc
push
pop
pushf
sub
sarl
adc
sbb
inc
mov
and
cmpsl
ljmp
popa
sarl
int
rolb
repz
or
pop
inc
test
out
pop
mov
movsb
scas
lds
push
js
rorb
or
sarb
pop
hlt
sub
jnp
inc
sub
hlt
les
add
cmp
aaa
es
mov
addr16
xchg
mov
fmuls
sbb
mov
adc
sbb
mov
arpl
mov
iret
jns
or
sub
frstor
cmpsb
sbb
push
push
or
hlt
jg
mov
or
ss
out
adc
and
lock
add
enter
popf
mov
cli
cmp
xor
jl
insb
sub
pop
data16
jns
xlat
cmp
sub
mov
adc
mov
jno
pushf
lcall
sub
mov
insl
pusha
bound
ret
jl
mov
test
xchg
popa
fldl
daa
jp
xor
and
xor
xor
pop
cmc
xor
sbb
inc
lock
adc
into
pop
bsf
push
sub
test
aas
into
stc
cmpl
nop
out
out
inc
mov
addb
shl
xchg
out
mov
xor
fs
sbb
out
mov
stos
rorl
std
outsl
fnstenv
popf
inc
push
adcl
ss
and
add
push
call
mov
icebp
inc
cmp
add
int3
movsb
adc
scas
leave
movsb
fdiv
jecxz
sbb
roll
mov
sbb
pop
mov
add
pusha
push
sbb
popa
jle
and
stos
pop
sub
adc
sub
mov
push
sbb
fiaddl
ret
push
dec
ret
xor
into
or
cmp
clc
cmp
loope
adc
popf
insl
adc
push
push
xor
ror
loope
and
mov
fs
push
fcmovnb
or
inc
fbstp
add
cmp
insb
mov
pop
lods
push
dec
negb
outsl
mov
idivl
jb
sub
push
xchg
sbb
inc
in
out
push
mov
mov
push
in
jecxz
shrb
push
popf
lods
pop
imulb
inc
add
loopne
test
sarl
jbe
push
mov
shl
mov
in
jp
mov
jmp
add
scas
sahf
cli
bound
adc
mov
fdivr
and
adc
aad
fdivs
or
stos
lods
cltd
int
cmp
loopne
fsubrp
lret
xchg
or
shll
push
add
mov
orb
dec
test
adc
test
out
inc
and
mov
fisubs
sbb
xchg
sub
cmp
add
jne
gs
stos
icebp
inc
pushf
cmp
inc
sbb
test
fsubl
dec
mov
mov
dec
jg
xchg
and
shrl
dec
mov
pop
lahf
leave
jnp
ja
lock
jge
pop
add
imul
inc
add
xor
xor
add
popa
lock
mov
repnz
jo
shlb
sbb
sbb
lock
es
jmp
push
jl
divl
into
sbb
mov
xor
inc
repnz
dec
sti
sub
and
jge
mov
ds
cli
loope
and
rclb
mov
mul
movsl
stc
ds
shlb
xchg
jns
mov
jle
ds
in
ljmp
jno
jmp
push
loope
pop
fnstsw
daa
movsl
mov
shlb
mov
cmp
cmp
inc
xchg
rcl
fadds
xor
push
push
lds
jns
sti
push
frstor
mov
jmp
push
dec
jb
inc
data16
dec
add
sti
mov
push
jle
and
sbb
shrb
inc
or
xchg
fidivl
insl
shlb
dec
jg
lds
sub
lods
sub
xlat
xchg
shll
dec
sbb
adc
ja
lea
insb
jnp
bound
loopne
and
arpl
pop
sbb
fists
pop
mov
push
add
add
sbb
adc
xchg
cwtl
popa
ljmp
jno
gs
and
jle
sbb
dec
add
repnz
je
scas
pop
xchg
out
dec
in
mov
pop
inc
inc
out
leave
add
outsl
push
mov
jg
xchg
pop
stos
fs
int3
lcall
icebp
roll
enter
mov
ror
orb
hlt
sbb
popf
xchg
aad
iret
in
mov
and
add
subl
aaa
jl
das
in
lock
sub
fstps
add
inc
pop
push
mov
cmpsb
push
in
cmp
sahf
iret
pop
push
leave
iret
xchg
mov
lods
leave
repnz
pop
lahf
inc
pop
test
and
leave
add
js
aad
cli
xchg
xor
in
mov
xor
dec
jmp
push
gs
dec
sbb
xlat
ja
aaa
and
dec
mov
sbb
xlat
inc
cmp
pop
fldt
outsb
stos
in
xor
cld
push
inc
mov
xchg
cli
adc
imul
xchg
insb
or
sbb
imulb
repz
sbb
int3
out
data16
add
das
adc
sbb
sbb
negb
jp
xchg
adc
xor
push
lcall
adc
std
or
xchg
mov
mov
xchg
add
outsl
lret
sahf
sbb
aaa
imul
xor
test
jne
jbe
psubusb
fs
mov
lods
popa
in
ret
call
test
inc
hlt
testl
mov
outsb
lods
repz
dec
sub
jl
test
adc
sbb
cs
and
add
and
gs
repnz
xor
push
repnz
xchg
mov
add
jnp
addr16
test
incl
andl
ret
shr
cltd
bound
pop
call
mov
or
and
and
imul
lock
xor
pop
sub
pop
mov
inc
or
push
mov
lret
push
jne
dec
mov
aas
mov
push
test
mov
in
add
in
sahf
inc
cmpsb
fbld
loope
xchg
mov
in
mov
lea
in
subl
inc
cltd
and
sahf
mov
incl
mov
push
call
mov
lcall
mov
fsts
aaa
cmpsl
shlb
loopne
sub
or
es
shll
and
push
push
aaa
cmpsl
flds
cmp
or
scas
sub
aaa
loope
pop
jg
repnz
push
fisubs
aam
mov
cwtl
add
jmp
ret
xor
fstl
jb
or
xlat
inc
scas
jbe
cmpsl
pop
sbb
dec
xor
add
xchg
das
ds
cmp
sub
ja
push
dec
mov
in
sbb
data16
daa
mov
dec
int
das
dec
aas
scas
adc
cmpl
es
xchg
push
xchg
daa
stos
lods
push
inc
sahf
rcrl
or
push
or
mov
cs
sbb
xchg
cmpsl
sub
test
xor
mov
mov
fistps
lcall
addr16
and
hlt
stos
mov
pop
lahf
mov
repnz
adc
repz
jp
enter
dec
scas
and
sahf
rcr
mov
cmp
inc
pop
shr
xor
mov
and
icebp
shlb
fimull
adc
sahf
mov
jl
les
cld
add
mov
addl
sbbb
adc
adc
daa
inc
das
test
sub
xor
std
pop
andb
sbb
pop
jp
and
mov
addl
add
mov
jns
mov
sub
push
shr
fstpl
into
adc
movups
sub
ret
and
xor
jns
push
lcall
imul
cmp
mov
leave
mov
inc
jg
mov
ljmp
invd
cmp
fldl2e
xchg
pusha
adc
cli
mov
and
lcall
sbb
xchg
pop
sub
pop
inc
push
jecxz
jecxz
repnz
int3
sbb
fcompl
dec
pop
pop
testl
xchg
test
inc
cmpsl
mov
add
loopne
addb
xchg
bound
loope
into
testb
xchg
push
xchg
inc
aaa
hlt
mov
aas
sbb
cwtl
push
mov
sbb
pop
mov
dec
jmp
and
cmpsb
push
inc
pop
sbb
pop
sub
xchg
mov
mov
sarb
icebp
jns
jge
push
fucomi
adc
scas
es
stos
adcb
inc
pop
lahf
enter
mov
xchg
call
outsb
dec
push
negl
sbb
rcrb
js
addr16
sub
jo
or
ret
icebp
ret
pop
mov
or
push
push
mov
insl
pop
jns
and
cs
inc
adcb
xor
dec
loop
insb
out
cli
int3
aaa
dec
es
fstpt
mov
jmp
and
mov
cmc
push
and
jae
js
xchg
sbb
push
mulps
arpl
cmp
ljmp
aam
out
enter
xchg
ds
jbe
push
xchg
mov
iret
das
das
pop
adc
sahf
pop
hlt
xchg
xchg
out
frstor
and
inc
int3
jp
mov
inc
or
lret
dec
adc
std
xor
fldt
and
dec
das
icebp
cltd
or
inc
and
xor
mov
mov
add
mov
cmp
sarb
push
leave
ljmp
mov
imul
lea
jle
stc
in
pop
shr
fdivr
imul
ret
in
sub
inc
std
cmp
fisubs
and
cmc
lds
movsl
push
subb
scas
pop
sbb
das
inc
and
shll
scas
add
push
or
dec
adc
inc
scas
out
pop
int
aas
in
lea
cmpsl
xchg
sbb
and
daa
mov
in
insl
dec
insl
in
fldcw
arpl
xchg
pop
pop
cmp
jo
shlb
popa
pop
lock
dec
push
lods
outsl
je
outsb
xchg
jl
add
daa
imulb
iret
jge
movsb
fs
fnstenv
mov
pop
xchg
adc
lds
mov
xor
xchg
imul
cmp
jge
enter
cmpsl
mov
ja
push
dec
leave
push
mov
xchg
dec
cmp
into
sub
aas
xchg
mov
pushf
les
or
inc
jbe
ret
call
dec
filds
mov
lock
add
push
or
jge
sub
pop
loopne
push
outsl
fbstp
je
jmp
xor
xor
mov
xchg
adc
lock
scas
fsubl
and
sub
incb
mov
icebp
cmp
mov
push
sub
fldl
scas
leave
inc
int
ret
mov
xor
mov
sub
inc
push
ja
arpl
and
into
mov
inc
or
push
mov
mov
mov
mov
loopne
mov
repnz
push
xor
in
adc
lret
ljmp
sub
xchg
cld
aam
pusha
leave
arpl
incb
sub
and
psubb
inc
xor
repz
or
jle
adc
add
mov
mov
and
shr
add
add
call
popa
std
push
out
sbb
mov
pop
rorl
gs
aad
out
push
sub
jg
add
scas
mov
dec
xchg
mov
jp
leave
fcoml
mov
lock
push
jecxz
cmc
dec
jecxz
adc
xchg
incl
add
rcll
in
ss
ja
sbbb
add
clc
aas
fwait
lea
insl
fmuls
cmp
ja
fists
mov
and
inc
dec
mov
cmpsl
insl
mov
push
insb
cli
pop
dec
mov
dec
adc
outsl
rcrl
aad
xor
dec
loope
push
jecxz
imul
mov
cmp
mov
out
jne
pop
repnz
xchg
adc
leave
aad
int3
mov
jl
int3
pop
push
movsb
stc
fiadds
loopew
sub
inc
push
jns
shrb
or
push
movsb
pop
call
cli
pop
pusha
sarb
inc
ja
mov
test
cmp
adc
aam
lahf
mov
cli
mov
jl
lret
popa
push
ret
sbb
add
dec
push
scas
xchg
xchg
push
stc
call
push
lea
in
out
cmp
push
mov
rcll
fisubrl
pop
aam
out
mov
outsl
scas
push
iret
or
popa
dec
or
cmp
mov
jp
push
test
xor
add
ja
aad
popf
push
aas
or
mov
xchg
cmpl
js
std
es
adc
fs
dec
jl
in
lcall
push
mov
mov
adc
mov
pop
addr16
scas
dec
pop
pushl
adc
push
test
mov
clc
sub
adc
jg
aas
out
mov
jno
iret
pop
scas
in
popa
gs
push
mov
mov
aad
stos
pop
push
in
jne
stos
inc
sbb
pop
lock
mov
inc
lret
insb
nop
movsl
inc
test
test
and
pop
into
out
push
in
movsb
bound
or
iret
cmp
xor
mov
xchg
push
jbe
hlt
cmp
add
cmp
mov
mov
repnz
sub
xor
dec
jns
cs
push
ja
sub
stos
sub
push
js
mov
sbb
inc
inc
jns
aas
xchg
mov
cmpl
imul
xor
outsb
outsl
adc
sahf
cmp
sub
and
mov
out
adc
mov
movsb
mov
mov
les
jns
cli
mov
lret
ljmp
nop
fdivs
bound
shll
aad
sarl
dec
incb
mov
movsb
shl
and
xlat
fsubl
push
lock
aad
mov
iret
push
mov
pop
jno
adc
das
xchg
bound
lock
cltd
test
inc
repnz
mov
mov
cmp
pop
inc
sarb
add
sub
xchg
xchg
stos
cwtl
loop
out
ret
sbb
test
pushl
cld
je
std
inc
mov
daa
ds
lock
imul
sub
inc
cmpsl
or
in
aas
jb
cmc
aaa
out
shl
fldcw
mov
shlb
adc
hlt
xchg
and
xchg
fistpll
inc
mov
gs
add
lret
mov
mov
add
stc
lret
mov
mov
fcoms
mov
or
inc
loopne
push
inc
mov
lea
push
inc
ljmp
jnp
xor
push
and
std
push
je
or
testb
arpl
rorb
lods
jg
push
clc
shlb
psubsw
nop
aad
push
jg
sbb
sub
das
fdivl
lcall
aad
cmp
jecxz
out
ljmp
fwait
xor
cmp
lea
or
ret
mov
inc
or
dec
bound
sub
mov
popf
lcall
sbbl
inc
and
dec
inc
daa
outsl
decb
xchg
inc
shll
outsl
scas
lret
xchg
sub
in
outsb
dec
xchg
rcr
pop
mull
inc
add
xor
dec
pop
jae
lea
outsl
mov
fiaddl
loop
mov
jno
sbb
out
jo,pt
xchg
ds
cmpsl
mov
lods
clc
xor
icebp
shl
and
xchg
sub
xor
out
and
cs
roll
clc
jp
or
xor
xor
ror
testb
sub
ss
js
jle
jo
sti
int3
dec
rorl
movl
push
pop
cmp
add
add
pop
or
test
push
xor
daa
mov
fsubr
mov
cltd
or
mov
repnz
or
mov
pusha
sub
out
lds
inc
and
and
lea
stos
lds
dec
push
into
test
ret
in
xchg
fcompl
popf
mov
icebp
pop
jnp
loope
hlt
movsb
jg
outsb
inc
int3
push
shll
into
gs
out
inc
or
mov
fildll
xlat
add
sti
mov
loop
push
stc
mov
mov
adc
cmc
pop
in
ret
jb
xchg
jne
push
sbb
ljmp
lretw
psllw
out
lods
inc
push
pop
xchg
adc
jecxz
mov
shrl
jge
jp
xor
mov
adc
ret
inc
cmc
jno
dec
push
lcall
lea
outsl
push
inc
xchg
sub
xor
and
adc
xlat
mov
sub
mov
cmpsb
dec
iret
dec
push
xchg
pop
fst
lods
out
xchg
aad
and
andl
sub
adc
popl
xchg
shr
movsl
mov
sub
cmpsb
pop
cmp
sub
mov
lahf
mov
dec
xchg
cmpsl
cmpsb
test
add
fistpl
clc
cwtl
in
cld
daa
sbb
loope
test
push
push
je
xor
sub
imul
mov
inc
out
cmp
adcb
mov
jecxz
mov
xchg
push
sahf
push
jmp
xchg
clc
fdivs
fs
pushl
lret
push
mov
adc
and
in
stos
ljmp
mov
push
xchg
fwait
push
icebp
jl
rorl
out
ja
jo
mov
pop
fbld
mov
mov
sub
dec
js
gs
lret
mov
xor
push
push
mov
pop
imul
sbb
add
mov
push
push
xor
fbld
mov
mov
jnp
gs
sub
push
sbb
fildl
repz
adc
push
sete
mov
mov
mov
mov
dec
sbb
imul
mov
dec
ret
and
cltd
jns,pn
mov
cmpsb
mov
outsl
xchg
mov
sub
mov
sbb
cmp
push
scas
mov
cld
cltd
pusha
lcall
adc
notl
or
and
pusha
imul
xchg
dec
push
ret
fnstsw
and
repz
mov
jae
pop
daa
loopne
mov
xchg
push
imul
mov
xchg
in
push
sub
popw
call
ljmp
cmp
push
jg
add
and
inc
lret
sbb
and
fucomi
cwtl
int3
jmp
pop
push
cmp
or
and
xchg
mov
sbb
js
popa
mov
sub
mov
std
sub
jne
enter
pop
loopne
inc
mov
sbb
out
loope
mov
notl
sbb
stc
push
push
notb
pop
loopne
cmpb
icebp
je
xorb
out
jge
psllw
mov
dec
popa
mov
sbb
cmpsb
jecxz
xor
sbb
push
lods
pushf
fsubr
stos
mov
pextrw
nop
outsb
pop
mov
add
movsl
mov
xlat
jbe
sar
pushf
ljmp
jb
mov
dec
in
xor
out
mov
xorb
mov
pop
push
adc
push
nop
clc
mov
adc
jmp
xchg
add
mov
dec
inc
fbstp
jmp
xor
or
inc
popa
adcb
ret
les
inc
cwtl
sbbb
test
cmp
mov
sbb
mov
push
pop
outsl
and
dec
pushf
jns
cmp
lret
ds
cmp
scas
subb
mov
in
and
or
cltd
cld
adc
adc
clc
out
mov
push
sbb
xor
stc
xlat
push
mov
cmp
sbb
cmpsl
add
repnz
pusha
fisttpl
and
fdivrl
ljmp
pop
gs
rorb
mov
xchg
mov
inc
loopne
sbb
dec
cld
cs
data16
test
cmp
dec
fistps
xchg
inc
lods
test
adc
lods
stos
push
add
insb
cwtl
xchg
push
jnp
xchg
mov
sti
xor
movsb
sub
cmp
jg
push
jae
mov
jb
nop
jmp
push
add
fisttpl
cmc
ja
arpl
nop
pop
sub
mov
mov
dec
fs
lret
push
mov
aaa
pushf
adc
sahf
xor
dec
mov
gs
fsubs
xchg
add
das
mul
loope
jae
pop
ret
jo
inc
lret
inc
cmp
pop
xchg
jnp
xor
jl
push
xchg
cmc
adc
pop
pushf
adc
inc
mov
lea
pop
stos
dec
and
jb
jp
jl
out
mov
cmpsl
int
dec
adc
sbb
scas
stc
cmpsb
push
xlat
xor
sar
dec
cld
test
cmp
jmp
aas
fnstsw
scas
fisubl
ror
cmp
xchg
xor
insb
fmuls
dec
pxor
std
mov
push
movsl
cmc
popa
pop
jae
pusha
sbb
icebp
movl
idivb
cwtl
ss
in
xchg
xlat
push
ds
sbb
push
enter
lcall
ficomps
ljmp
out
das
push
in
fidivrl
cmc
in
mov
stc
jbe,pt
negl
add
sub
mov
adc
in
push
pushf
lahf
mov
in
mov
xor
sub
data16
lods
fisttpl
jle
loope
cmc
sub
cmp
mov
stc
cmpsb
pop
call
push
push
mov
ljmp
divb
popf
cmpb
pop
pop
fidivs
js
xchg
mov
rolb
test
ret
divl
ret
scas
sub
subl
mov
iret
sbb
lret
push
add
fmull
test
cmpsb
cmp
lods
inc
pop
scas
inc
add
insl
xchg
or
pop
pusha
jmp
push
xor
loope
pusha
inc
xchg
xchg
xor
xchg
pop
movsl
test
stos
and
ss
adc
rolb
jns
mov
shrb
mov
and
push
mov
adc
xchg
jno
and
cltd
repnz
adc
sbb
push
mov
out
mov
pushf
fnsave
popf
aas
les
ljmp
out
sti
stos
scas
mov
outsb
lds
inc
or
lret
std
mov
bound
in
or
nop
sub
icebp
mov
pop
ss
popf
mov
and
aam
aas
test
scas
jb
lret
ret
adc
cmc
int
popf
sti
nop
inc
outsl
lret
scas
scas
inc
cltd
and
sbb
rorl
ret
jb
lcall
ja
test
pop
mov
and
lret
out
loopne
mov
xlat
cmpsb
fsincos
mov
insb
in
aas
jmp
jp
push
pop
cmp
test
ljmp
int
pop
mov
imul
daa
shll
ja
mov
jns
fadds
or
das
fsubrs
int3
inc
cmpsl
lret
sub
cmp
dec
push
jnp
fisttpl
pop
xor
ljmp
outsb
aad
jns
and
inc
mov
mov
cmp
stos
cmp
test
fstl
dec
sub
aas
mov
dec
js
shrb
cmc
xchg
mov
data16
add
or
ficoml
mov
inc
push
pop
ljmp
pushf
sbb
ja
stos
push
mov
mov
pop
popf
mov
inc
mov
xlat
lret
test
movsb
push
stos
loope
jmp
test
mov
push
inc
push
inc
push
cmp
and
xchg
adc
mov
or
and
aas
dec
outsl
xchg
sub
add
jle
push
shrb
nop
cli
mov
sti
mov
stos
loope
xchg
sti
in
out
insl
enter
mov
arpl
push
jg
subb
mov
rcll
call
mulb
mov
out
fs
jne
jg
je
sbb
cwtl
mov
hlt
mov
push
adc
dec
push
mov
mov
inc
ret
fldt
in
pop
sub
add
jmp
es
jne
dec
dec
subl
into
adc
cmp
dec
ljmp
push
and
test
lods
dec
dec
push
faddl
add
jne
add
loope
mov
pop
fwait
sbbb
cmp
out
push
test
mov
daa
mov
clts
movsl
xchg
sbb
lret
stc
adc
jl
cld
data16
and
in
mov
sbb
out
xor
mov
mov
movsl
mov
jno
push
call
fs
jmp
ds
std
xlat
insl
ror
test
sbb
out
mov
iret
pop
in
fmull
push
scas
adc
add
mov
mov
or
test
push
inc
sbb
fwait
mov
pop
cltd
repnz
dec
lds
mov
jne
inc
dec
dec
out
pusha
test
xor
mov
sbb
adc
dec
sub
sti
xchg
mov
push
inc
pop
cld
mov
sbb
and
jl
aas
mov
mov
cmp
in
mov
call
addr16
or
cmp
adc
ljmp
inc
xchg
dec
push
jp
push
jb
add
mov
xor
stc
xor
out
shl
aaa
mov
fists
push
mov
pushf
adc
xchg
cmp
jb
adc
pop
pop
sub
xor
dec
movsb
adc
cmpsb
clc
mov
daa
xchg
rcll
ds
sub
lret
pop
dec
js
pop
inc
lea
add
xchg
int3
cmp
add
ljmp
das
mov
mov
jmp
es
pop
loope
enter
pushf
cmp
pop
mov
mov
lea
lds
xor
or
in
mov
in
inc
add
aas
sbbl
dec
cmp
push
cmpsb
jp
idivb
popa
addl
mov
cli
and
mov
xor
or
jbe
push
mov
hlt
inc
ss
nop
test
pop
into
jmp
add
push
push
mov
filds
push
push
add
je
gs
ss
in
lret
jg
push
test
mov
hlt
aad
fmulp
xchg
jb
loop
mov
or
ret
repnz
roll
push
push
cwtl
faddl
pop
or
dec
shlb
test
arpl
testb
push
pop
add
stos
xchg
data16
xchg
sbb
lret
ljmp
std
rcrl
in
sub
aad
jnp
ret
dec
or
stc
adc
sbb
add
ret
js
mov
pop
pop
cmp
enter
repz
test
pop
insl
pop
rclb
mov
sti
fwait
cmp
dec
gs
adc
out
pop
or
repz
dec
xor
or
cmpsl
add
enter
lahf
inc
cmp
ret
pop
cwtl
push
add
push
mov
cmpsl
loope
jp
scas
and
call
jle
mov
pop
sbb
in
dec
mov
clc
xchg
scas
popa
adc
jo
push
std
xlat
scas
push
nop
jmp
mov
inc
out
loopne
cmpsl
lea
sbb
pop
cmp
insl
pop
js
daa
lea
pop
xor
pop
mov
loope
mov
jle
or
mov
lret
fistpll
test
jae
hlt
je
clc
sub
fnstsw
jns
push
mov
pop
imul
movsb
mov
jne
adc
subb
ss
mov
or
mov
inc
lcall
je
dec
std
jb
push
or
xor
mov
mov
and
clc
fucomip
mov
cwtl
scas
test
cmp
push
sub
test
sbb
mov
or
mov
and
sahf
repz
into
cld
sub
mov
aam
push
ljmp
repz
inc
test
mov
fsubs
out
push
lcall
inc
mov
sub
jmp
sbb
xchg
pusha
xchg
repz
inc
push
fincstp
push
ret
mov
xchg
sub
or
push
shlb
xchg
pop
inc
or
jge
clc
neg
ficoml
mulb
aas
mov
bnd
sahf
xor
ljmp
cmp
dec
iret
xchg
add
push
xor
sbb
mov
mov
data16
sub
pop
fsubr
pop
dec
push
testl
jne
stos
add
lcall
add
push
xor
inc
cmc
dec
push
lods
shrb
cmp
cmp
cmp
into
xor
ret
mov
aam
pop
or
sti
xor
fisubrs
xchg
in
cmp
lea
mov
cmp
fwait
pop
add
adc
hlt
cs
adc
mov
aaa
mov
test
jl
out
cmc
ret
ss
test
adc
mov
repnz
icebp
jle
aad
adc
out
ds
jecxz
push
xlat
cmp
cwtl
decb
jo
aam
jg
and
nop
inc
sub
sti
xchg
xor
or
add
int3
outsl
sub
xor
popa
mov
xchg
cmpsb
dec
lock
or
clc
mov
stc
xor
jle
loopne
cmp
and
lret
lcall
lods
xchg
xchg
out
dec
xchg
and
jl
aad
popa
stos
pop
fldenv
xor
hlt
lret
in
sahf
scas
push
ja
mov
push
repnz
ret
jnp
aaa
cltd
leave
jle
enter
and
test
adc
xor
and
mov
fisttps
sub
test
pushf
pop
ss
jl
ljmp
daa
or
movsb
xlat
xor
sbb
lods
icebp
cli
shlb
mov
sub
jb
add
pop
fwait
pop
sub
fwait
lret
es
clc
loopne
je
test
mov
aas
fadds
nop
rcrl
xlat
or
push
fistpl
cmp
jno
lret
mov
pop
outsb
sbb
adc
xchg
mov
aas
mov
lcall
xor
cmp
xor
outsl
pop
shll
inc
push
repz
adc
mov
dec
xor
pmulhw
sbb
push
in
cmc
stos
sub
mov
ret
es
and
das
mov
push
mov
roll
lret
xor
cs
mov
int3
faddl
xchg
mov
and
js
insb
jg
jle
pop
push
mov
loopne
fsubp
pop
or
lds
xchg
sbb
jge
and
fnstenv
jg
inc
dec
cmc
jecxz
jb
std
mov
in
clc
mov
xor
mov
xchg
adc
push
int
iret
jmp
xor
pop
iret
rorb
data16
push
out
std
lods
push
lcall
shl
jecxz
addb
add
push
inc
aas
jnp
in
cmp
sub
xor
test
hlt
scas
pop
push
gs
test
and
add
or
bound
xorb
data16
pop
loope
ret
dec
pushf
pop
cmp
outsb
outsl
mov
xor
adc
lea
pop
insl
loopne
sub
or
sbb
out
fld
sbb
shr
je
add
bound
pop
faddl
xlat
sbb
mov
cwtl
mull
jnp
in
addb
jnp
sub
daa
test
movl
jo
cmpsb
cmp
and
aas
xor
inc
push
or
sbb
pop
orb
lods
call
jp
dec
std
in
call
popa
dec
mov
cmp
xchg
xchg
cli
aaa
fldenv
push
mov
and
ret
adc
sbb
in
in
lret
pop
xchg
sbb
sbb
jne
pop
add
test
rorl
add
cltd
loop
cmpl
test
outsb
or
push
sbb
or
and
movsl
aaa
popa
push
sbb
push
push
push
add
negb
out
mov
dec
jl
clc
scas
jl
out
xor
jle
add
add
ficomps
subl
aas
sarl
cmpsb
jb
out
xchg
pop
lods
scas
dec
sahf
mov
dec
mov
jo
xor
aam
jecxz
ds
xchg
add
pop
ljmp
call
push
jge
movsb
decl
pop
sbb
sbb
rcrb
mov
or
push
cmp
cmp
repnz
cwtl
aas
fistps
in
test
jne
sti
pop
outsb
dec
sbb
test
loopne
pop
in
out
mov
xor
pushf
test
lcall
les
sahf
shlb
sahf
pop
repnz
out
cltd
jns
push
push
and
movsl
loope
mov
jb
dec
and
pusha
add
sbb
xchg
jae
repnz
adc
loopne
das
push
es
out
adc
jno
test
pop
adc
cmp
and
and
sbb
sbb
jmp
or
test
addr16
add
and
dec
mov
ss
or
out
push
test
js
adc
sub
inc
push
jnp
mov
jnp
std
cwtl
stc
imul
shll
xor
push
sub
bound
jbe
out
jg
jno
out
and
cld
push
adc
pop
add
jae
xor
cmovg
mov
dec
das
lcall
jecxz
inc
xchg
sub
mov
or
shlb
mov
repnz
popa
lahf
mov
mov
push
aam
and
in
pushf
shll
popa
xchg
rcr
loope
cmp
pop
dec
insb
sbb
jecxz
les
cmp
ja
mov
int3
aad
push
cwtl
out
cltd
pop
fisubl
stos
inc
icebp
mov
stos
mov
xor
cmp
cmpsl
cmp
sub
cmp
sahf
push
pushf
jne
test
push
jne
sbb
popf
ds
lahf
and
sub
jg
jg
sbb
dec
fwait
adc
in
mov
sub
lods
add
loopne
xor
dec
cmpsl
popa
aaa
std
jmp
xor
mov
cmp
push
inc
xchg
lret
dec
xchg
rorl
sub
int
shlb
fdivl
mov
mov
notrack
xchg
mov
lods
lods
dec
add
cltd
ja
aas
mov
int3
in
cmp
sub
mov
mov
sbb
mov
xchg
rclb
add
mov
out
sbb
inc
sub
pop
jp
cmp
sbb
dec
inc
call
or
and
into
or
cmp
sti
mov
jno
pusha
ss
adc
aad
or
adc
and
and
sub
inc
lods
dec
lret
fdivrs
movsb
and
in
inc
gs
scas
repnz
lcall
mov
shl
pop
mov
xor
orl
dec
pavgb
fdivr
xchg
mov
std
push
aad
fiaddl
les
pop
jge
push
sub
mov
mov
xchg
pop
and
in
inc
pop
and
arpl
lahf
out
stos
ja
jae
mov
mov
mov
pop
js
jne
add
add
outsb
or
lcall
pop
clc
fcmove
in
lock
mov
mov
negl
dec
cwtl
mov
in
subb
popf
scas
mov
out
scas
jns
add
or
jg
scas
repz
xor
popa
fprem
int
je
mov
mov
cwtl
or
icebp
repnz
mov
mov
mov
xchg
rcrl
ljmp
loope
mov
les
add
or
xor
pop
in
enter
shrb
popf
fcomps
cs
call
in
dec
in
push
roll
insb
adc
in
inc
inc
pop
lret
sub
rep
das
jns
push
pop
mov
hlt
repz
sub
mov
pop
cld
addb
push
add
out
mov
push
lods
inc
mov
mov
xchg
mov
inc
adc
and
in
sarb
cmp
movsb
ja
inc
lds
jns
add
scas
cmpsb
out
pop
flds
cltd
add
lods
sbb
and
and
js
dec
lahf
add
adc
cmpl
pop
sub
enter
cmpl
mov
pop
les
add
movsl
xor
lahf
pop
jnp
pop
lds
pushf
and
aas
icebp
dec
push
test
bnd
hlt
xor
cmp
in
movntq
out
popf
aas
jnp
sub
pop
xchg
xchg
inc
cmp
lret
or
mov
lahf
mov
or
rorb
mov
xchg
add
xor
mov
inc
push
jl
xor
stos
jmp
fwait
aaa
jl
mov
rolb
cmp
loop
dec
ds
mov
push
push
inc
fstpl
ss
xor
lods
cwtl
mov
mov
xchg
lahf
dec
leave
loop
pop
imul
mov
or
mov
push
lods
and
imul
mov
inc
xor
mov
add
cmp
shl
lock
addb
cmpsl
xchg
movsb
mov
adc
xchg
add
jb
repnz
lcall
mov
mov
in
sub
mov
and
fs
lahf
mov
dec
jmp
scas
loope
lds
fistl
adc
jb
or
test
sbb
push
inc
pop
lahf
jle
outsl
lock
adc
push
sbb
jnp
sahf
clc
jg
inc
add
insb
dec
mov
xchg
subl
jnp
adc
cli
ret
iret
lahf
sbb
leave
push
rorb
lods
pop
insl
inc
call
pop
or
xor
aas
lock
jo
mov
push
push
sub
and
mov
mov
jl
sub
lret
mov
jno
orl
es
adc
adc
jbe
loopne
movsb
or
insl
cs
out
inc
jmp
js
stc
imul
pusha
xor
testl
pusha
sti
xor
push
jg
jnp
push
mov
inc
movsl
inc
push
sbb
sub
frstor
and
add
lret
mov
pop
push
xor
pushf
push
fistps
mov
xor
loop
pusha
addl
mov
add
in
push
inc
mov
mov
push
popf
movsl
mov
pop
nop
sbb
mov
sbb
jnp
jnp
jecxz
sbb
mov
test
push
add
test
rcr
movsb
je
xchg
push
push
push
repnz
mov
outsl
add
cmp
fwait
aam
pusha
andl
fstpl
xor
not
mov
ss
stos
jno
push
shl
xor
mov
aam
jne,pt
adc
push
push
inc
inc
push
mov
adc
jg
hlt
clc
push
test
push
xchg
mulb
or
push
push
add
rcll
xchg
push
js
lret
cmp
sbb
das
fstpl
xchg
cs
call
push
popa
add
jp
and
mov
jb
push
jg
xor
xchg
pmuludq
add
out
push
test
bnd
andb
mov
cld
pop
cld
sbb
mov
inc
imull
mov
jae
jns
mov
popa
jmp
in
push
repnz
cwtl
scas
sub
js
adc
and
adc
xchg
xor
or
and
pop
jae
arpl
and
sbbb
sub
mov
lea
xchg
add
es
or
mov
and
push
pop
dec
mov
cmp
xor
cmp
int
ret
sub
call
push
adc
nop
int3
xchg
xor
or
push
fldz
rol
mov
cmp
flds
dec
add
adc
rcr
mov
inc
cmp
mov
sbb
rorl
jbe
or
sahf
mov
pop
cltd
cmp
call
mov
mov
into
dec
icebp
mov
adc
aaa
loopne
arpl
lods
icebp
jnp
shrb
or
jge
push
mov
ret
cmpsb
ljmp
cltd
insb
scas
xor
fwait
lret
mov
adc
shlb
or
or
repnz
mov
lcall
in
cmp
and
insl
aam
push
imul
add
or
jno
outsb
push
es
mov
addr16
loope
mov
jo
mov
adc
rcl
mov
test
pop
adc
outsl
outsb
sti
sub
push
mov
movl
add
pop
push
movsb
jns
push
andl
daa
dec
fs
ret
mull
dec
es
sub
xlat
jle
in
pushf
call
inc
lea
in
adc
scas
fsubp
mov
cmp
les
pop
or
out
mov
cmpsl
in
bnd
sarl
hlt
fadds
imul
sub
xor
push
loope
dec
bound
dec
out
out
push
dec
push
xchg
add
popf
xchg
xor
pop
push
sahf
insl
sub
or
add
int
sbbb
jle
cmpb
lock
sbb
xchg
adc
es
std
enter
pushf
movsb
pushl
jecxz
sbb
mov
xor
mov
jns,pn
jmp
or
xlat
mov
into
jg
sbb
dec
imul
push
xchg
ret
mov
out
cmc
popf
enter
jne
movsl
das
jnp
inc
popw
out
repz
or
fstps
aam
add
js
mov
or
decb
out
jle
hlt
ds
pop
adc
ret
mov
pop
mov
inc
add
enter
rorl
mov
into
stos
fildll
in
jg
dec
mov
ss
mov
movsl
mov
arpl
ja
cmpsl
jl
loop
push
pop
cmpb
mov
inc
pop
and
lret
lret
jmp
and
mov
push
or
push
cmp
daa
fbld
add
dec
jle
cmp
test
les
push
sbb
stos
lods
mov
std
cwtl
mov
sti
ret
adc
pop
das
ror
shll
xor
stos
push
outsl
sti
mov
jae
cltd
out
outsl
pop
lods
shll
mov
mov
lcall
je
cmp
sbb
dec
pop
push
inc
add
inc
jbe
mov
in
sahf
fwait
test
xchg
and
and
mov
xor
mov
nop
pop
push
cli
int
sbb
aas
inc
clc
and
mov
adc
cmp
cmp
cltd
or
scas
fsubs
dec
xlat
ljmp
pop
pop
mov
dec
dec
cmpsb
xor
insb
sbb
adc
lret
mov
ljmp
dec
in
mov
popa
xor
push
pop
dec
cld
sbb
stos
or
mov
mov
call
dec
loopne
mov
and
mov
add
mov
rcl
pop
scas
or
dec
jb
je
jmp
adc
inc
add
or
pop
addl
adc
adc
popa
es
push
rcrb
cmc
jp
and
xor
repnz
mov
add
shrb
xor
and
sti
movsl
jp
inc
cld
hlt
push
jne
jl
clc
jge
bound
into
mov
outsl
sarb
fmuls
xor
jle
adc
pop
fbstp
aas
xchg
pop
mov
and
lock
cmp
mov
push
fdivrs
pop
test
xor
cli
scas
shr
cmp
mov
call
pusha
ret
jb
adc
test
loopne
or
jp
cli
shl
inc
pop
ret
ret
leave
xor
dec
pop
lods
adc
lods
jnp
mov
out
xor
sti
sbb
xor
mov
lcall
enter
enter
lods
sub
and
xor
je
jg
xor
in
aad
mov
daa
cmp
fimull
lcall
leave
loope
insl
or
js
addl
pop
repz
xchg
or
imul
call
fcomps
pop
dec
push
ds
mov
mov
mov
hlt
push
hlt
fisubrl
xchg
inc
dec
addr16
or
insb
mov
je
scas
imulb
movsb
popa
pop
push
scas
sbb
add
xor
jmp
fsts
jle
test
hlt
push
or
je
push
xchg
cmp
mov
movb
push
mov
push
stos
outsl
mov
cmp
enter
daa
fs
xchg
sbb
rorb
mov
out
jg
mov
xchg
jbe
xor
ret
adc
cmp
pop
daa
push
daa
mov
ret
iret
inc
mov
cltd
jge
loop
xchg
jmp
bound
ror
das
xorb
pop
fisttpl
sti
jae
sub
cmp
xor
dec
dec
mov
mov
repnz
mov
push
mov
xchg
out
and
fdivs
outsb
or
pop
mov
sub
in
mov
imul
gs
data16
mov
pop
sub
inc
loope
lods
lcall
nop
int
xchg
xor
loop
push
lock
aas
inc
mov
mov
popf
outsb
lods
mov
fadd
xor
enter
xchg
sbb
int3
pop
inc
xchg
add
or
dec
jno
xor
lahf
outsl
gs
fildll
aam
pop
mov
test
sarl
iret
cli
fisubl
dec
mov
push
ss
add
or
add
aaa
aaa
xchg
mov
fs
das
testl
jecxz
mov
xor
mov
out
sub
and
add
int3
xor
inc
xor
or
adc
mov
movsw
pop
jle
jnp
jle
jecxz
xorl
insl
nop
scas
out
lods
push
xor
into
mov
jbe
pop
and
lods
jmp
mov
pop
cmp
sti
inc
push
xor
icebp
vmaxpd
les
or
scas
and
test
mov
js
lea
hlt
fisubs
push
pop
inc
lods
mov
int
nop
arpl
icebp
out
inc
les
std
sub
mov
push
int3
jnp
sahf
and
decl
cmp
sub
or
sbb
rorl
imul
imul
mov
outsb
inc
loope
lcall
mov
aad
mov
das
mov
xchg
out
mov
sub
push
adc
sbb
xchg
adc
push
shll
cmp
inc
sbb
faddl
or
daa
inc
icebp
outsb
hlt
daa
mov
mov
or
or
add
dec
sbb
mov
ja
daa
scas
dec
pusha
out
pop
mov
mov
enter
jnp
adc
cli
mov
sbb
dec
lret
xchg
fs
inc
push
inc
push
es
into
dec
inc
das
rol
mov
or
adc
into
inc
push
inc
add
push
push
sbb
pop
das
dec
sub
sbb
cmp
imul
sub
cmpsl
lret
xchg
mov
or
jns
lcall
jp
les
int
mov
mov
fdivp
xchg
or
in
mov
add
fwait
pop
jle
add
mov
cmp
dec
push
and
mov
pop
inc
outsb
inc
inc
fldcw
loope
and
dec
cmp
dec
jbe
lods
inc
jecxz
mov
jbe
pop
pop
leave
jecxz
lcall
mov
cmpsb
arpl
jge
adc
cwtl
shr
push
jnp
fisttpll
hlt
cmp
mov
outsl
jns
pop
cwtl
mov
in
sbb
inc
lods
pushl
xchg
and
jge
jl
add
lock
aad
std
cs
aad
test
jg
fsubs
or
lods
pop
in
popa
push
xorl
or
int3
std
push
pushf
icebp
xchg
fidivs
aam
fsts
lea
push
mov
push
movsb
ljmp
adc
fsubl
int3
push
add
cld
add
subl
iret
push
mov
mov
mov
sub
notb
mov
insb
adc
pop
jae
jnp
mov
arpl
pop
popf
adc
lahf
adc
outsl
js
lcall
pop
inc
pop
ror
sub
adc
arpl
lock
loop
iret
bound
cmc
enter
cli
add
hlt
das
je
cmp
mov
std
nop
outsb
mov
sbb
mov
bound
mov
jo
or
aas
call
outsl
mov
and
je
lahf
add
inc
and
gs
mov
rorl
dec
addr16
ss
cmp
mov
ljmp
adc
pop
lds
clc
add
pop
pushf
ja
repz
test
add
mov
sbb
dec
in
jbe
cmp
stos
xchg
lds
out
mov
ret
jecxz
dec
and
shrl
or
mov
iret
mov
popf
xchg
ds
or
lods
cmpsl
inc
mov
xchg
mov
push
mov
inc
nop
mov
cmp
lods
shll
pop
xadd
cmp
push
push
jbe
mov
mov
inc
sub
shll
fmul
out
jg
push
imul
fcoml
sbb
cmp
pop
xor
sti
push
mov
jae
pop
adcl
fsub
xchg
stc
out
sbb
mov
call
mov
cli
mov
jbe
xor
adc
cmp
icebp
cld
and
cmp
add
push
jmp
cwtl
dec
js
dec
push
lcall
push
jmp
aas
lcall
test
das
adc
jmp
sbb
adc
in
jmp
adc
sub
sub
jo
mov
stos
jno
sub
mov
insb
sbb
int3
iret
or
sbbl
jmp
loope
jmp
dec
in
mov
lods
shll
push
push
fidivs
fsubrl
push
insl
inc
sub
mov
xor
xchg
mov
jmp
jno
out
lret
in
dec
insl
mov
xor
pop
iret
or
cmp
xchg
and
mov
sarb
mov
push
cmp
js
mov
dec
stos
ret
lea
jl
imul
ljmp
push
je
or
leave
movsb
cmp
scas
inc
in
popf
push
mov
dec
mov
push
fbld
xor
fsubs
ljmp
or
fs
push
xchg
aad
in
dec
cwtl
and
insb
sub
jg
adc
xchg
rcrl
es
les
stos
out
sahf
int3
cmc
mov
mov
or
iret
out
test
dec
popa
cwtl
lea
dec
and
fs
andl
gs
popf
data16
and
push
cmp
outsl
push
xor
xchg
jp
mulb
inc
mov
jmp
pop
cmp
dec
or
addr16
mov
jnp
adc
adc
fcomps
lock
and
movsl
enter
add
out
sub
pop
stc
or
and
mov
ja
dec
mov
inc
inc
sub
push
push
shlb
and
sub
push
xchg
sub
jo
and
cli
imul
movsl
add
pop
sub
pop
pop
mov
insl
mov
push
cld
jg
popf
xchg
mov
dec
pop
adc
adcl
mov
pop
pop
sbb
pop
dec
into
int3
in
cmp
jge
aam
out
loop
lret
mov
add
faddl
and
push
cli
add
outsl
fcoml
shrb
push
xor
js
cmp
adc
cmpsb
clc
cmc
adc
pop
insl
stos
cmp
jmp
sub
mov
xchg
in
or
insb
and
in
sbbb
icebp
cmpsb
jl
dec
mov
test
sub
popa
mov
imul
mov
inc
and
popf
arpl
into
out
dec
push
or
dec
pop
jne
cmc
jne
out
inc
aam
out
mov
xorl
in
sahf
xlat
incb
cmp
add
or
lock
aad
imul
les
add
or
sub
push
je
cmp
rclb
xchg
out
movl
or
icebp
push
mov
and
and
xor
in
jg
in
push
dec
dec
or
addr16
mov
mov
adc
mov
jns
xchg
mov
aam
fstpl
js
push
inc
push
sub
sahf
faddl
or
mov
rolb
testb
je
andl
jp
pop
clc
add
into
push
inc
mov
or
idivb
or
rolb
dec
popa
ret
out
lahf
jae
test
test
call
std
add
and
add
cltd
sub
mov
hlt
pop
jne
xchg
jg
arpl
fadd
xlat
jne
mov
adc
adc
pop
push
dec
dec
sub
fwait
cltd
jl
xorl
push
out
enter
push
insb
leave
out
inc
mov
push
dec
ret
xchg
divl
inc
adc
idivl
mov
addr16
jo
jp
or
loope
rcrb
or
jle
push
incb
out
add
or
mov
mov
scas
cmp
inc
ret
or
add
enter
repnz
jns
xchg
int
mov
ror
ss
inc
dec
sub
std
pop
cmp
imul
add
mov
push
pop
out
sbbb
pop
outsb
sarb
cmp
sub
rol
cmp
pop
push
and
or
pop
dec
dec
or
dec
movsl
gs
hlt
xlat
repz
mov
jg
imul
faddl
push
repnz
ja
and
aas
adc
jle
add
or
aaa
rorb
push
and
mov
inc
mov
sarb
cmp
sub
in
cmpsb
jecxz
dec
movsb
lcall
sahf
call
xor
mov
cmp
into
jp
xchg
push
adcl
cltd
outsl
dec
xchg
jb
mov
add
stc
xor
insl
push
mov
pop
push
outsb
test
mov
fsubrs
lods
ljmp
mov
jbe
int
add
out
icebp
inc
xchg
pop
sub
mov
mov
rorl
or
sbb
or
pop
pop
jle
sbb
enter
lods
sbb
insl
xor
xor
xchg
jp
or
pop
scas
hlt
enter
outsb
std
dec
sbbl
ljmp
pushf
cmp
nop
xchg
jbe
lahf
lret
loope
imul
fs
inc
orb
inc
lods
fdivrs
pushf
leave
mov
enter
dec
loop
mov
or
testl
push
lret
sbb
cmp
mov
mov
mov
add
imulb
pop
enter
test
mov
rorl
lock
pop
pop
test
mov
bound
gs
and
shrl
cmp
xor
jbe
push
aaa
push
out
aaa
out
mov
jne
inc
dec
or
repnz
inc
sbb
inc
jle
push
xor
lock
dec
iret
lret
and
push
insb
pushf
dec
inc
sub
aad
xorl
jl
push
dec
xchg
sub
pop
xor
fstps
or
add
sbb
mov
stos
js
sub
inc
aad
sub
dec
lret
cmpsb
or
adc
lahf
mov
lcall
xchg
sbb
push
fisttpll
push
sbbb
push
pop
push
mov
cmp
xlat
pop
ret
add
push
xchg
pop
loopne
cmpsb
xchg
or
in
aam
sahf
lret
dec
or
mov
jl
addr16
fidivrs
or
int
dec
mov
int3
or
aaa
gs
pop
mov
adc
mov
inc
cmc
imul
xchg
mov
add
or
mov
loop
jbe
ret
lcall
popa
and
iret
cli
pusha
shll
cmp
xor
dec
dec
aad
cmp
dec
and
aad
inc
xor
mov
ret
aaa
cmp
sti
adc
bound
scas
push
add
adc
push
subl
jp
pop
adc
fwait
in
pusha
fdivl
mov
imull
mov
aam
mov
push
pop
insl
call
add
pop
in
subl
xor
cs
or
push
roll
push
jp
adc
int3
mov
jo
add
shll
jns
xor
adc
cmp
fimuls
xchg
fs
or
pop
cld
addb
mov
sbb
cmp
mov
addl
add
outsb
cwtl
ror
xchg
dec
push
sbb
dec
jmp
push
in
mov
test
sub
stos
or
ljmp
fildll
scas
mov
cmp
test
inc
fdivrl
out
mov
sub
or
lds
cmc
insl
jo
jb
insb
push
pop
xor
inc
sub
clc
sbb
add
arpl
jp
fs
rcll
into
aad
push
mov
inc
scas
and
lock
imul
cmp
cs
mov
inc
rcr
mov
rcrl
or
scas
test
dec
mov
or
je
mov
mov
popa
pop
jo
sbb
sub
or
inc
nop
nop
pushf
mov
sti
push
inc
test
aam
in
mov
xrelease
xor
adc
jne
repnz
add
inc
lds
mov
daa
dec
hlt
xchg
mov
and
ljmp
roll
nop
add
outsw
cmp
mov
and
addr16
dec
dec
and
xorb
mov
xchg
or
jl
jp
push
cmpb
int3
imul
lock
push
fwait
lods
adc
sbb
or
scas
loop
mov
cmp
repz
xchg
mov
xchg
pusha
mov
icebp
in
sub
cmp
mov
dec
pushf
xchg
int
int
xchg
push
add
mov
xchg
sbb
icebp
mov
shr
or
imul
leave
xlat
dec
cld
xor
sbb
add
enter
sbb
pop
cmpsb
in
in
imul
push
adc
pop
cmpsb
leave
lea
lods
fimuls
cmp
jne
add
mov
sub
push
pop
xchg
xchg
sub
mov
push
cmp
and
inc
mov
movsb
into
add
nop
cmpb
adc
repz
leave
mov
xchg
mov
mov
mov
aam
mov
rorb
xchg
popa
xchg
cmp
aad
inc
insb
sub
jb
fs
lret
cltd
test
jg
cmp
les
shll
sbb
leave
xor
push
clc
mov
sbb
push
xlat
xor
fists
sahf
pop
icebp
mov
xor
lahf
shrl
stos
or
shll
test
aad
je
inc
mov
or
jnp
dec
rorb
cmpl
jecxz
pop
aam
stos
or
out
and
xor
pop
lret
lock
in
in
cltd
mov
mov
ds
icebp
scas
in
scas
fcoml
adc
add
inc
dec
xchg
and
mov
mov
add
cs
aaa
inc
mov
jp
xchg
popl
sarb
jne
sti
cwtl
mov
icebp
adc
addr16
cmp
push
xchg
lock
fstpl
xor
mov
mov
xor
pop
dec
test
add
aas
mov
sub
cli
push
aaa
mov
stc
data16
addr16
push
insb
insl
push
xor
out
daa
inc
push
movb
dec
add
fmulp
mov
inc
dec
js
xchg
pop
repnz
movsl
pop
sbb
dec
sti
and
aas
int3
push
lock
ljmp
xchg
sub
adc
and
enter
orb
mov
jg
jo
cmp
mov
pop
sub
das
mov
shlb
imul
out
mov
sbb
xchg
out
sbb
push
and
mov
mov
and
and
fwait
or
adc
cmp
pop
jne
add
outsb
rolb
pop
shll
xor
je
arpl
mov
popa
imul
push
lahf
mov
mov
sbb
iret
mov
lds
shr
lock
push
imul
cs
pop
fs
sbb
fstpl
insl
mov
mov
jecxz
psrld
shl
cmp
mov
popf
xor
or
in
jle
cld
movsb
mov
xor
xchg
jno
sbb
add
xchg
jns
push
call
sbb
jp
jmp
and
lock
push
insb
fcomps
mov
and
bound
mov
popf
push
jae
ss
push
nop
cwtl
in
out
or
ja
push
enter
sbb
mov
fsubr
pop
adc
xor
divl
rcl
scas
leave
rcll
fsubrs
popa
mov
adc
sbb
jge
pop
lods
or
or
inc
outsl
xor
cmp
dec
gs
mov
jle
pop
mov
stos
pop
xor
inc
pushf
adc
mov
shll
icebp
daa
dec
mov
scas
jge
cmp
daa
popa
push
int3
mov
imul
stc
push
cmp
add
pop
outsb
orb
xchg
mov
imul
mov
mov
mov
cmpsb
cmp
in
sub
movsl
fidivl
pushf
sbb
push
mov
sub
mov
mulb
shl
ss
stc
scas
jb
pop
and
icebp
mov
out
mov
and
mov
sbb
in
xchg
icebp
pusha
lret
dec
add
and
in
dec
orb
ss
sbb
loope
add
aas
popa
cs
imulb
int
test
jnp
inc
fidivrl
in
lret
dec
cld
movsb
mov
jg
loope
cmp
movsl
push
jns
cmpsb
dec
xlat
imul
and
decb
sbbl
dec
cmp
jecxz
xchg
xor
push
js
inc
inc
add
xorl
add
mov
sub
cltd
jl
subl
mov
pop
or
stc
movsl
xchg
fistpl
push
data16
or
mov
jle
mov
mov
xchg
mov
out
adc
fdivr
test
das
js
mov
xor
jge
ljmp
mov
lods
in
inc
dec
loopne
out
loope
pop
and
data16
or
loope
jge
cmpsb
icebp
sub
xchg
inc
mov
pop
test
jp
and
or
and
dec
mov
enter
nop
aad
xor
imul
outsl
add
mov
and
cmpsb
repz
adc
mov
mov
aam
leave
or
inc
mov
loope
inc
and
aas
and
jnp
jne
push
dec
mov
icebp
xchg
sub
xor
test
dec
push
and
mov
adc
adc
pop
push
add
mov
xor
jg
pop
push
idivl
js
jl
sti
ret
fwait
push
ret
push
dec
stos
cmp
inc
xchg
sbb
pop
lret
mov
mov
aaa
push
jbe
mov
daa
jge
xor
stos
lock
sbb
jg
xor
rcrb
mov
sahf
imul
mov
mov
ds
loope
ja
shrl
fidivrs
daa
lret
ds
push
add
mov
out
adc
mov
sbb
jb
out
call
dec
sar
out
or
add
das
cmpsl
jns
lahf
outsl
rorb
leave
push
jp
pop
sbb
ret
and
pop
mov
clc
mov
int3
loope
sbb
outsl
cmp
adc
xor
dec
icebp
cmp
add
fucom
repnz
cld
and
out
stc
pop
add
sti
and
or
jae
fildl
test
push
xchg
or
adc
bound
add
push
mov
push
push
inc
fs
das
loop
je
fwait
int3
xchg
lock
ret
xchg
mov
hlt
jle
aaa
rcl
adc
push
fs
xor
cli
xchg
xchg
inc
add
ds
fldlg2
fbld
push
mov
into
xchg
add
fdiv
mov
enter
lods
fldcw
inc
add
sbb
stos
adc
aad
and
mov
jne
call
into
mov
mov
arpl
or
pop
mov
sbb
arpl
jnp
sbb
push
push
xchg
add
add
jb
push
push
mov
jl
enter
pop
inc
push
repnz
daa
lods
adc
mov
dec
mov
jmp
pop
jle
sub
ret
pop
out
xchg
aad
test
rolb
push
push
cmpsl
mov
in
pop
data16
insb
je
fisubrs
xchg
pusha
add
adc
int
mov
daa
xor
lea
pop
enter
and
cmc
push
and
dec
cmp
repnz
es
jnp
mov
ds
out
pop
stos
testb
push
loop
out
movsb
pop
repz
jmp
dec
adc
jnp
flds
insb
pop
mov
jo
scas
cmp
jno
mov
lret
sub
sub
pop
mov
jae
mov
add
pop
out
or
mov
sbb
ss
or
cmp
mov
mov
test
push
xor
shl
enter
lcall
mov
add
popa
and
push
dec
mov
leave
jae
in
push
jae
adc
sahf
xchg
aaa
mov
push
mov
dec
or
shr
loope
negl
and
xor
test
call
shll
movsl
mov
scas
mov
or
cmp
inc
int3
mov
outsl
out
sub
xchg
in
mov
ret
add
rolb
icebp
subb
fdiv
jle
xchg
mov
mov
sbb
mov
idiv
inc
jge
sarb
pop
iret
pop
mov
movsl
fstps
loopne
jbe
pop
div
cli
out
sbb
cmp
sbb
out
dec
mov
enter
jmp
outsl
sti
cs
imul
outsl
or
jl
repnz
into
stos
pop
jb
and
push
shlb
and
stc
jle
mov
pop
inc
test
or
cld
imul
pop
xchg
loopne
sahf
mov
sub
cltd
sub
jge
aad
pushf
dec
dec
ret
pop
js
je
xchg
outsl
stos
pop
push
shrb
sub
push
out
xor
xchg
je
aad
es
loopne
cli
xchg
loopne
push
and
int3
lods
push
xchg
and
call
decb
xchg
xor
sbb
rcrb
cli
imul
xor
repz
inc
shll
fiaddl
call
cmp
aad
hlt
jno
jecxz
enter
xor
pop
add
ret
sub
arpl
mov
stos
pop
aad
add
mov
sub
pop
pop
insl
xchg
test
or
xor
fnstenv
cli
stos
in
cmpb
rep
and
add
icebp
mov
lock
mov
and
add
int
test
ret
cmp
cmp
fdivr
mov
or
dec
add
dec
loope
pop
orb
out
leave
xor
push
cmp
jns
paddsb
ret
lods
leave
push
sub
pop
jecxz
es
movsl
xlat
int
cmp
mov
pop
sub
test
popa
push
test
call
push
std
jle
std
outsl
sbbl
lds
outsb
fstps
mov
mov
cwtl
xor
ss
xor
cwtl
pop
rcll
jp
jg
cmp
xchg
push
or
add
int
loopne
jne
jl
mov
jge
movsl
and
or
push
jecxz
push
sbbl
mov
inc
movd
imul
ficompl
and
sbb
mov
test
shrb
and
fwait
cvtdq2ps
cmpsl
cmpsb
in
mov
dec
mov
gs
and
sbbb
imul
add
mov
lret
mov
lock
adc
pop
push
sub
inc
inc
pop
jg
sahf
and
fwait
adc
std
jmp
adc
dec
bound
es
mov
movsb
jecxz
aad
pop
test
aas
mov
dec
adc
mov
push
pop
sub
sub
add
dec
popa
addl
sti
aad
adc
adc
mov
add
mov
lcall
ret
movsb
roll
sub
and
sahf
sbb
mov
loop
imul
jnp
or
icebp
xchg
shl
xor
ret
xlat
adc
jae
jbe
test
add
or
xchg
stos
add
iret
call
xchg
cmc
mov
sbb
xor
push
jnp
push
jns
xchg
inc
sub
fnstsw
int
sbb
mov
push
jl
cmpsb
mov
and
push
inc
mov
shll
xlat
shll
sub
gs
mov
sbb
aaa
xchg
jecxz
add
shr
push
add
jle
pop
addr16
arpl
stos
lods
fstl
xor
xchg
xchg
fsubrl
nop
jle
loop
dec
push
xchg
loope
mov
pop
pop
mov
adc
fs
adc
aas
addr16
fs
rol
aad
sti
popa
andb
aas
mov
dec
pop
dec
ret
test
sbb
pop
es
inc
fst
mov
pusha
and
flds
mov
sbb
cld
gs
add
enter
mov
push
dec
daa
loop
inc
test
adc
fisubrs
rorb
push
bnd
lret
xchg
loope
xlat
aaa
cwtl
add
adc
push
ds
xor
add
push
inc
push
mov
lahf
outsl
out
out
lock
push
cmc
mov
popf
js
and
leave
sub
fnstsw
stos
pop
fwait
xchg
inc
and
mov
jno
mov
testl
cmp
outsb
aad
dec
xor
xchg
inc
nop
roll
mov
jmp
mov
popf
sbb
dec
adc
push
ljmp
or
mov
xor
test
and
lods
push
jo
add
jns
add
rol
jecxz
mov
cmp
cmp
mov
adc
imul
fisubrs
bound
dec
clc
pop
mov
ret
xlat
loope
cwtl
stc
cmp
mov
jge
mov
inc
out
pop
cmp
jne
std
das
frstor
insl
iret
mov
bound
jmp
sbb
cs
jo
pop
adc
fistl
inc
dec
sbb
iret
stos
hlt
and
xor
xor
stc
enter
xchg
inc
insb
movsb
xchg
push
xor
repnz
pop
cli
mov
push
insb
out
push
adc
push
xlat
test
cmp
sbb
sub
js
xchg
sar
cmpsb
mov
mov
and
mov
clc
add
dec
jne
scas
cmpsl
mov
push
pushf
aad
or
stos
ja
sub
jp
cli
fldt
sub
inc
pop
pop
pop
jno
popl
jno
mov
xchg
int
mov
mov
clc
mov
mov
mov
pop
dec
fst
cli
fdivs
loope
jb
imul
sub
daa
mov
dec
lcall
sbb
dec
cmpsl
dec
sub
out
push
loopne
ljmp
dec
test
jecxz
mov
push
adc
scas
dec
dec
xor
into
cli
in
jno
roll
push
sbb
and
pop
cmp
mov
mov
mov
pop
mov
in
push
test
add
sbb
xor
or
scas
push
dec
mov
out
outsl
inc
and
aaa
jne
stc
sti
jl
cmpsl
fists
nop
sbb
push
pushl
jne
mov
pop
or
outsb
scas
or
push
shrl
jno
push
dec
js
hlt
mov
sbb
or
pushf
add
negb
enter
push
mov
dec
out
cmp
imul
jp
cmp
cs
dec
addr16
and
es
xor
aam
xorl
mov
inc
sbb
fxch
bnd
mov
imul
es
add
hlt
ja
xlat
lcall
jg
cmpsl
nop
dec
mov
repnz
jnp
push
ret
pop
jmp
into
lods
fdivr
push
mov
out
pop
adc
fidivs
or
sub
xchg
cmp
outsb
sbbb
pusha
ja
je
outsb
xor
scas
stc
push
pushf
add
add
lds
xchg
insb
adc
jae
aad
in
push
dec
pushw
push
xor
test
pop
jle
idivl
sub
and
cli
adc
inc
inc
popa
lret
or
leave
or
mov
push
and
ja
out
mov
fcompl
jb
in
dec
mov
je
das
fs
ss
popf
jg
fsts
pop
inc
int3
inc
mov
or
icebp
outsl
jge
dec
fmull
xchg
cmp
outsl
dec
movsb
mov
adc
leave
sbb
xlat
shll
imul
mov
push
pop
fcomps
dec
xchg
xlat
enter
mov
cmp
adc
out
les
lock
repz
arpl
sahf
stos
xor
jmp
lcall
cmpsb
jge
iret
pop
push
int3
mov
out
cld
and
mov
sbb
adc
or
add
inc
fdivrl
icebp
sti
arpl
xchg
rcl
cmp
movsb
loope
mov
mov
and
ror
pop
jns
pop
push
cmp
andb
sub
notb
jecxz
mov
outsl
mov
and
dec
and
pushf
or
sbb
or
and
dec
xor
mov
rcrb
mov
mov
fnsave
sbb
fldt
cmp
push
lods
insb
sbb
fisubrs
movsl
inc
push
mov
xchg
sti
mov
jp
pop
dec
dec
sub
fcmovnb
pop
xor
adc
mov
pop
and
mov
enter
xor
leave
cmp
mov
test
adc
testb
and
and
jnp
out
mov
bnd
popf
ds
xchg
inc
sub
shrb
push
ret
push
mov
inc
icebp
xor
inc
das
hlt
add
xor
sub
jmp
xchg
add
push
pop
xor
jl
imul
sbb
mov
mov
rcrl
jo
ss
pop
inc
mov
cli
sti
std
adc
mov
cmpsb
out
sbb
xor
lods
lock
popf
xor
leave
pop
int3
jg
fisubs
es
inc
mov
add
je
insb
loope
inc
rcll
lods
add
add
jecxz
sbb
sub
pop
sub
sub
add
in
scas
sub
pushf
adc
sarl
shl
lcall
xor
sub
int3
fsubr
out
loopne
inc
xor
lret
ret
xchg
jle
bnd
inc
out
enter
xchg
mov
jl
cmpsb
push
mov
out
push
push
pop
push
fsub
mov
xor
out
int
sbb
sbb
xchg
mov
push
pop
pop
and
addr16
and
stos
xor
imul
ret
mov
pop
loop
aad
int3
xor
lcall
and
sti
sbb
loope
jle
add
add
cmpsl
push
mov
in
loopne
test
inc
in
inc
adc
popf
and
or
push
push
lods
adc
lahf
jbe
shlb
jmp
xor
cltd
push
sbb
and
mov
sub
leave
sub
insb
inc
sarb
ljmp
mov
adc
dec
pop
rcrb
mov
mov
enter
popf
insl
dec
pop
cltd
jl
aaa
sub
int3
pop
jb
pop
jg
sbb
push
xor
xchg
dec
stos
dec
je
test
xchg
sbbl
sbb
mov
cmp
into
roll
jo
push
rclb
notb
dec
call
pusha
mov
inc
pop
sub
mov
cmp
outsl
fistpll
xlat
test
hlt
pop
test
js
sbb
aad
adc
sbb
les
and
mov
out
arpl
popa
or
pop
and
add
adc
jl
fdivrl
les
inc
divl
mov
push
and
shll
adc
mov
xlat
dec
xchg
cmp
movsb
fs
push
and
repz
sub
ljmp
orb
jne
add
rorl
cli
add
mov
fdivs
inc
mov
addr16
pop
xchg
movsl
lcall
sti
stos
adc
push
ljmp
stos
ret
inc
mov
cltd
xchg
and
ljmp
adc
rcrb
enter
fisubrl
and
xchg
push
mov
aas
mov
out
mov
outsl
lahf
rcrl
dec
pop
xor
cmp
out
or
aad
leave
push
je
sbb
insb
daa
and
out
mov
sub
stos
pushf
popf
js
insl
mov
xchg
xchg
mov
xchg
mov
nop
pop
aas
loopne
jle
gs
cmp
ljmp
int3
aas
xchg
cld
int3
xorl
shrl
xchg
add
sub
inc
fadd
in
andb
int3
fs
add
rclb
pop
or
lahf
jnp
fidivrs
adc
lods
jmp
jl
push
ret
les
jecxz
dec
gs
and
and
enter
adc
xor
fcoml
int
inc
xor
in
adcl
cmpsl
xchg
xchg
pop
sbb
sub
divb
or
jmp
or
cld
clc
into
pop
adc
inc
ret
jp
xor
inc
sbb
adcl
dec
add
je
mov
out
imul
je
sahf
xor
das
ret
xor
and
test
push
lods
or
push
shr
cmp
js
popf
xlat
adc
xchg
and
xchg
and
out
mov
mov
movsbl
mov
int3
test
lock
dec
int
xor
add
aas
aam
jmp
xchg
sub
and
dec
and
stos
in
test
icebp
imul
in
fistpl
lea
nop
out
sub
idivl
cmp
lds
lock
and
dec
mov
rcll
jbe
insb
and
lret
mov
lods
aam
add
fmull
pusha
mov
cmp
movsb
icebp
int3
push
cmpsb
jle
inc
mov
insb
stos
out
xor
andb
sahf
sbb
test
cmc
push
popa
jne
das
movb
nop
inc
and
jo
fcoms
sub
cmp
pushf
add
and
mov
xchg
cli
cld
push
or
jns
out
notb
aad
std
sbbl
das
movsb
data16
xchg
and
ds
fsts
pop
das
xchg
jb
mov
push
add
test
loop
es
fdivr
and
aad
jns
test
push
ror
pop
aam
cld
or
mov
mov
or
out
xchg
inc
xor
add
sbb
mov
cmpsb
imul
std
mov
mov
mov
adc
lahf
sub
stos
fstpt
hlt
push
xchg
inc
setle
sbb
out
lods
addl
jns
sub
out
xchg
ja
test
mov
mov
push
jo
mov
aas
fxch
mov
push
roll
daa
leave
jl
lahf
jp
aaa
dec
icebp
and
xchg
scas
add
or
int
mov
push
data16
loop
dec
xor
sti
ds
addb
xor
js
cmp
xor
dec
adc
jmp
sahf
mov
stos
fimull
les
add
adc
mov
jmp
dec
dec
es
xchg
div
cmp
mov
pop
test
lock
int
pushl
push
or
cmc
ja
jmp
cmp
iret
xorb
clc
into
mov
xlat
dec
push
shlb
add
out
adc
in
insl
dec
dec
dec
jmp
push
pop
xchg
pop
inc
jmp
scas
lods
aam
sbb
sub
dec
mov
stos
or
pop
add
addr16
pop
call
cmp
cmpsb
mov
and
pop
test
xor
push
jmp
cmp
sbbb
lods
out
enter
pop
in
outsb
pop
out
xchg
xchg
arpl
xchg
fldt
out
inc
add
mov
imul
movsl
gs
pushf
popf
das
jae
call
outsb
ret
iret
sti
movsl
std
int3
mov
dec
mov
mov
pop
int3
cmp
xchg
notb
xchg
push
test
mov
sub
movsb
cmp
cmp
negb
scas
lret
jmp
aas
and
push
jnp
or
push
les
imul
test
or
push
jnp
lcall
lds
or
inc
sub
xchg
roll
mov
rcrl
add
pop
into
std
jl
mov
inc
mov
jbe
fimull
out
mov
jns
idivb
js
fistpl
jne
lods
into
outsl
mov
movsb
jg
int
xor
dec
rclb
sub
popf
xor
sub
es
mov
lods
sub
int3
and
pop
mov
jb
push
xchg
add
clc
out
jp
sahf
ret
leave
dec
cmpsb
mov
shll
push
sub
jmp
lahf
xchg
push
add
mov
in
ret
xchg
push
xchg
mov
lret
adc
daa
push
xor
push
in
sub
jnp
xchg
into
imul
xlat
lahf
vmwrite
push
cmp
rol
mov
inc
test
nop
test
xchg
dec
pop
icebp
das
daa
movsb
jb
ficomps
sbb
and
push
xor
lcall
jp
or
lods
xchg
popa
lods
jecxz
adc
imul
xchg
es
push
sbb
jecxz
shlb
pop
hlt
jmp
dec
jbe
xor
jmp
mov
or
cld
push
test
sbb
dec
fwait
mov
cmp
js
fildll
divb
pop
jg
mov
xor
out
ljmp
and
addb
adc
popa
cmpsb
divb
jecxz
dec
pop
test
or
mov
scas
shrl
popa
lods
push
lret
pop
es
scas
mov
nop
ds
mov
adc
cli
and
pop
aas
cltd
mov
cld
adc
mov
adc
cmp
dec
fstpt
das
sbb
jp
push
or
cmpsl
in
and
popa
xchg
mov
mov
insb
popa
or
bound
ret
jp
insl
cmpsb
cmp
or
ds
cmpsb
gs
repz
movl
mov
pop
lahf
repnz
inc
cmpsl
in
sub
rorl
int
in
in
es
test
lret
outsl
xlat
psubusb
rcr
inc
loope
mov
aad
fildl
xchg
iret
mov
push
aad
xorb
aas
popa
ja
into
ja
inc
push
sbb
imull
dec
shr
pop
xchg
aam
push
push
into
imul
mulb
and
lret
mov
push
lds
out
cltd
or
jb
cmp
jb
jmp
lret
and
test
int
adc
into
push
sub
sub
pop
notb
adc
xchg
lock
imul
rcl
cs
add
jge
mov
pop
in
dec
or
scas
out
cli
cs
mov
pop
int3
aas
fidivrs
xchg
out
jecxz
mov
xchg
loope
pop
out
mov
xchg
jmp
inc
stc
xor
loop
push
jns
and
or
daa
adc
fs
or
sbb
inc
xlat
inc
inc
lock
notb
clc
mov
mov
push
dec
dec
jns
clc
add
cmp
mov
mull
xchg
inc
jb
xlat
sbb
mov
js
sbb
add
push
int3
adc
leave
jno
lahf
scas
rol
dec
inc
leave
mov
cmpb
mov
gs
or
fcmovbe
add
dec
lock
xchg
mov
cmp
or
cmpsl
xor
int
dec
pop
jae
shll
sti
push
andl
mov
sbb
cmc
pop
sub
cmp
mov
lret
jmp
std
repnz
cltd
push
mov
sbb
xor
add
xor
xchg
aaa
cmc
mov
and
dec
lds
lcall
orb
fs
pop
bound
int3
lcall
stc
repnz
outsl
xchg
pop
int3
mov
fs
xor
inc
ret
pop
jno
mov
fcomps
push
or
inc
xchg
xchg
cmpsb
sbb
inc
imulb
jnp
and
adc
lcall
sub
sub
adc
mov
jo
cltd
lods
shll
add
cmp
stc
jl
add
movsl
insb
push
cmp
xchg
int
out
pop
adc
dec
jle
mov
lcall
add
pop
and
clc
dec
pop
ljmp
lods
fbld
dec
push
push
or
repz
je
jecxz
mov
roll
shrl
ds
in
repnz
js
lret
xchg
sbbl
fcomps
stc
xchg
and
pop
push
in
mov
jmp
imul
les
pop
mov
cmc
sub
sbb
out
out
rcr
pop
negb
ret
aam
pusha
mov
jne
mov
mov
movsb
in
mov
sar
daa
lcall
aad
mov
les
push
nop
stos
cli
jns
scas
cltd
hlt
push
arpl
int
pop
push
mov
shll
jp
sbb
xor
into
pop
jo
mov
push
xchg
daa
adc
push
je,pn
movsb
in
jbe
sub
sbb
cmp
pop
sbb
sub
sub
jbe
add
mov
outsl
and
mov
xchg
sub
je
jae
xchg
and
xchg
jl
jno
in
jl
mov
cli
lret
push
dec
cmp
xchg
cs
dec
mov
cltd
roll
sahf
or
ss
mov
adc
repz
imul
in
clc
add
and
xor
mov
roll
jp
push
xchg
push
loop
jne
call
push
cmp
sbb
adc
mov
loop
scas
mov
sub
test
mov
xchg
inc
pushf
cli
out
sti
sub
or
xchg
out
enter
push
aaa
sbb
je
lcall
add
fstpt
jecxz
lods
repz
gs
call
jge
add
enter
sbb
pop
aaa
aam
sbb
les
call
cmc
flds
ljmp
adc
pop
inc
dec
and
mov
adc
mov
mov
sub
or
mov
sahf
rorb
ljmp
xor
test
jne
ljmp
xor
push
ret
xchg
sti
pusha
dec
test
fimuls
call
mov
inc
je
push
mov
pop
adc
add
mov
std
or
jle
cmp
add
and
jnp
pop
jo
cli
arpl
sub
sbb
hlt
loopne
stos
push
xchg
stos
and
push
dec
jb
js
adc
in
push
or
hlt
add
mov
or
cmp
nop
outsl
jns
loop
push
inc
and
jl
es
int3
in
aam
outsb
pusha
or
cmp
dec
pop
outsb
push
stos
or
push
xor
cmp
push
dec
sbb
in
int3
nop
adc
push
scas
les
cmc
cmp
push
out
adc
aad
mov
rorl
fcomps
push
push
jle
dec
fs
bound
scas
sbb
ret
stc
xchg
fisttpl
lods
add
jo
repnz
jnp
imul
inc
cli
xchg
xor
xchg
addr16
movsl
rclb
imul
mov
aaa
fisubrs
mov
das
xchg
mov
and
and
xchg
repnz
lock
jno
inc
mov
or
das
aas
test
je
mov
lds
and
cwtl
dec
in
imul
scas
cmpsb
insl
mov
mov
mov
imul
notb
mov
or
or
loopne
cmp
inc
in
jge
rorl
cmp
cltd
sbbb
mov
push
andb
test
fcomps
jg
test
outsl
sti
stos
mov
jl
pop
jg
sub
aas
jno
mov
popa
cmp
jp
std
aaa
dec
jne
push
mov
outsb
mov
and
ss
js
xchg
lock
sahf
jnp
imulb
ret
sub
enter
das
out
push
pop
imul
fwait
pop
pop
fbld
xor
aaa
loopne
mov
fdivl
dec
test
mov
and
xchg
pop
iret
rcr
lcall
sub
subb
mov
push
fidivl
scas
jle
lods
xchg
xchg
jnp
lds
out
mov
add
mov
push
lea
sub
subb
or
test
jp
or
xor
inc
shrb
adc
fildl
mov
mov
and
xchg
and
fnstenv
pop
dec
push
mov
xchg
lret
push
lods
jno
repz
test
mov
shlb
dec
cmp
push
jnp
jl
cwtl
in
fsubr
lods
movb
mov
imul
and
jns
or
adc
shrl
out
add
loop
mov
stc
jg
adc
in
sub
mov
leave
mov
or
jae
out
ret
outsb
pop
mov
pop
aas
mov
push
stc
xor
sbb
cmp
and
lcall
mov
rclb
mov
lock
repnz
mov
insl
lods
jb
frstor
cmp
lock
cwtl
inc
rolb
or
inc
sti
mov
int3
test
pop
stos
mov
pop
ss
enter
movsl
aad
in
stos
jl
cli
pop
mov
xchg
push
es
xorb
jecxz
jg
arpl
sbb
adc
cmp
pop
sub
nop
imul
and
sub
js
fsubs
insl
out
jae
sahf
xchg
mov
add
xor
lea
push
and
ss
scas
loop
jb
sub
icebp
mov
shlb
xchg
or
lock
insl
jmp
dec
mov
fmull
jge
dec
clc
fildll
add
testb
stc
sub
pop
jmp
mov
jg
push
lods
xchg
inc
arpl
outsl
test
rclb
cwtl
js
xchg
rcrl
into
pop
scas
jbe
add
mov
loopne
xchg
mov
out
scas
push
shlb
stc
ljmp
push
sbbb
divb
jecxz
jmp
dec
mov
and
adc
scas
xchg
xor
push
stos
jnp
pop
test
push
push
xchg
pop
test
dec
mov
mov
mov
add
fdivrs
jecxz
cmc
cmp
in
sar
clc
push
sub
cmp
outsb
inc
adc
mov
loopne
inc
xor
push
int
push
sbb
lcall
adc
faddl
adc
cmpsl
je
bound
sub
movsl
outsb
je
or
idiv
dec
je
push
fisttps
in
int
sbb
movsb
call
sbbb
lret
insb
mov
push
inc
pushf
sub
add
cwtl
inc
lock
sbb
cmp
outsb
fdivrp
lcall
mov
ja
mov
imul
in
loopne
outsl
icebp
int3
inc
iret
aam
mov
lods
xor
mov
rolb
push
sbb
scas
daa
xchg
xchg
push
jno
stc
into
loopne
call
pop
adc
sub
shrl
xchg
ret
push
repnz
jmp
sbb
dec
cltd
cs
and
sub
rcrl
pop
mov
mov
xchg
cs
xchg
fistpll
notl
rorb
push
push
cmc
mov
filds
test
pop
sbb
mov
adc
jno
xor
loopne
push
in
test
add
jns
incb
out
inc
shlb
scas
mov
outsl
mov
push
inc
push
dec
fsts
adc
loopne
std
cwtl
inc
fstl
pop
pop
sarl
jg
imul
xchg
and
aas
aam
jge
mov
lds
in
scas
insb
movsb
fdivrl
jge
jmp
and
hlt
push
sahf
cmp
lret
outsl
mov
jbe
push
inc
pop
in
lret
out
mov
jne
sar
xorl
or
sarl
jno
jo
enter
sub
adcl
sub
lcall
popl
push
jp
ljmp
jle
cld
sbb
push
xchg
sahf
nop
pop
js
sbb
add
cmpsl
std
mov
fnsave
or
loopne
in
adc
das
xor
pusha
mov
cmpsl
push
je
ljmp
add
push
mov
lds
fadd
mov
add
int3
lcall
mov
loop
insb
ret
js
lret
addr16
out
mov
cltd
mov
mov
aad
dec
pop
dec
xor
js
push
push
push
xchg
nop
lahf
aas
sub
icebp
push
and
outsl
les
add
xor
dec
jg
rcrl
cwtl
xor
std
lret
repnz
jno
push
in
cmp
xchg
hlt
mov
dec
fbld
adc
and
push
repz
push
je
jne
in
xchg
sahf
pop
mov
push
pop
jae
cmpsl
or
or
mov
aaa
fnsave
test
and
sahf
fmul
add
mov
hlt
mov
out
in
mov
leave
xchg
bound
loopne
mov
jae
inc
mov
pop
movsb
scas
pop
inc
loop
add
push
mov
xchg
leave
push
mov
dec
in
cmpsb
sub
mov
mov
inc
lea
mov
jecxz
mov
js
pop
push
jae
adc
pushf
popa
in
xor
push
add
jo
adc
cmp
add
adc
push
pop
in
push
inc
mov
movsb
sbb
iret
test
mov
pop
xchg
lahf
cmp
mov
out
scas
inc
lods
inc
pop
sub
je
adc
dec
sbb
insb
cmpsl
inc
stos
or
int
std
enter
and
dec
jecxz
inc
cmp
insl
outsl
mov
aaa
cmp
stc
pop
mov
cmp
std
lds
mov
fsin
popf
mov
imul
fisubrl
cmpsl
div
lret
jl
outsl
dec
inc
popa
popa
outsl
loope
daa
xchg
pop
add
mov
adc
and
and
call
jae
sub
in
xor
pop
fwait
and
jnp
jle
stos
and
out
mov
and
pop
and
test
mov
push
test
aad
mov
lea
dec
xlat
and
xchg
addb
lcall
test
dec
std
mov
add
adc
and
nop
mov
pop
cmpsb
dec
aad
pop
daa
sti
popa
jecxz
rorb
out
adc
adc
sub
cs
inc
daa
and
jp
pop
pop
shlb
and
xor
inc
flds
test
jecxz
sbb
mov
test
xorl
int
xchg
mov
hlt
push
mov
testb
fs
aaa
inc
cmpsl
outsb
lret
ds
push
scas
sbb
or
cmpsb
pop
push
push
lods
insb
xlat
jmp
add
push
lret
out
daa
popa
out
pop
xlat
xlat
divb
jne
jnp
add
lahf
test
mov
sub
imul
add
fiadds
xchg
sub
push
jns
sbb
int3
add
push
std
fucom
gs
mov
scas
xor
fnstsw
add
cmc
sub
inc
sbb
push
adc
sbb
mov
ss
sbb
add
pushf
bound
lcall
lret
push
sbb
in
ja
je
jecxz
mov
in
fadds
imull
mov
je
xchg
jo
cmc
lahf
xor
mov
out
clc
arpl
or
out
inc
dec
dec
hlt
jo
popa
mov
inc
popa
div
cwtd
fs
lock
test
push
add
xchg
lds
outsb
test
out
add
lret
divb
mov
stc
cmp
jnp
adc
dec
xor
xor
sbb
mov
cld
mov
or
mov
arpl
out
add
ljmp
sarb
cmp
dec
ja
bound
sbb
cmpsb
es
xor
in
and
lret
mov
loop
xchg
lods
and
sbb
sbb
stc
das
fistpl
mov
jecxz
fbstp
call
push
out
jo
aas
pop
lock
dec
fwait
daa
imul
ror
lahf
and
pop
cmpsl
dec
stc
scas
and
lds
lea
dec
fstps
shrb
xlat
fmull
in
mov
xchg
call
gs
pop
int
xchg
mov
dec
mov
mov
stc
shll
add
addl
rolb
push
jge
mov
push
das
es
xor
xor
mov
xchg
addr16
adc
je
jmp
lret
dec
or
ja
xor
stos
or
xchg
movsb
bound
mov
insb
jbe
aam
dec
int3
icebp
sbb
pop
cmc
jo
mov
sbb
pop
les
aam
imull
sub
pop
add
aaa
loop
sub
popf
out
enter
lds
aaa
pop
push
enter
push
dec
mov
ret
sub
negl
sub
repnz
xchg
pop
adc
daa
inc
cmp
mov
inc
andb
jo
dec
dec
xor
repnz
xabort
int
mov
shll
lret
xor
jp
mov
inc
fidivrl
das
add
dec
xchg
mov
jmp
imul
cmp
pop
stos
addb
inc
inc
mov
lret
daa
push
xchg
and
dec
mov
repnz
mov
adc
push
sbb
dec
lret
adc
cmp
mov
lods
push
pop
lods
rclb
mov
ljmp
insl
stc
push
int3
leave
xor
icebp
je
insl
cs
mov
push
movsb
stc
inc
push
xor
cmp
push
mov
in
int3
add
cmp
stos
mov
jno
mov
mov
int
push
lods
xchg
popf
add
pop
or
dec
pop
enter
daa
pop
push
cmpsl
fisubrl
xchg
lods
inc
arpl
inc
movsl
push
pushl
idivl
movsb
push
jnp
xchg
loope
push
test
cmp
test
pop
hlt
pop
xor
push
lret
cmpsl
out
sub
xchg
mov
je
dec
outsb
negl
add
push
mov
subb
or
xlat
pusha
add
push
add
test
leave
mov
fcomip
lds
push
lds
and
nop
mov
scas
jl
jl
pop
xchg
mov
adc
sub
add
dec
loopne
in
dec
in
pop
push
dec
fsubrs
je
call
movsl
out
dec
pop
push
lods
mov
call
cli
ja
loopne
clc
sbb
loopne
pop
add
cmp
mov
inc
mov
rolb
sub
and
inc
push
inc
mov
fistps
pop
push
or
and
popf
ficomps
ss
sbb
lock
mov
movsb
and
lods
in
mov
loopne
jne
pusha
and
enter
out
test
loope
xlat
sbb
jns
dec
popf
ds
cmp
or
dec
cmpb
cltd
cs
push
lea
sub
xchg
mov
faddp
loopne
lcall
mov
sbb
cmc
lcall
pushf
sti
xlat
mov
or
pushf
jo
das
in
stc
outsb
inc
inc
fldl
sbb
push
mov
lods
fisubs
sahf
out
inc
and
loop
enter
scas
xchg
pushl
ss
jb
cmc
xor
imul
and
jmp
mov
sub
movsl
xchg
testl
mov
pop
add
inc
enter
inc
pop
mov
decb
pusha
cmpsb
xor
pusha
lock
data16
arpl
lds
sbb
xchg
out
cmp
mov
add
push
fistpl
dec
scas
aas
xor
lahf
outsb
test
xor
in
jo
jmp
jbe
mul
cmp
jae
add
js
je
ljmp
pop
fs
jecxz
inc
xchg
clc
movsb
shll
les
ret
fs
xchg
mov
xchg
pushf
add
mov
iret
xchg
xchg
rcr
mov
lock
sbb
mov
fwait
sbb
mov
popa
addr16
js,pt
lahf
inc
jecxz
push
cmpsl
mov
adc
or
popa
cld
mov
enter
jmp
sbb
mov
mov
jbe
sahf
xlat
sub
and
xchg
dec
lock
mov
insb
sti
sbb
push
push
movsb
fs
mov
popa
std
xchg
ret
sub
lret
enter
jne
jae
inc
mov
enter
in
js
cld
rclb
pop
mov
inc
lock
out
fldt
decb
cmp
sbb
mov
pop
cmp
push
xchg
jno
hlt
push
and
mov
jnp
nop
movsb
ja
pop
cmc
and
xor
inc
int
sbb
leave
sbb
cltd
xor
jnp
lret
push
and
out
test
rcrl
pop
clc
xchg
cmp
cmp
hlt
push
js
outsl
and
pushf
xchg
or
in
push
cmp
xchg
adc
scas
fsubr
inc
mov
fsubrl
or
dec
xor
lods
enter
and
sub
mov
jg
xchg
pushf
and
mov
repnz
add
pop
imul
jae
or
rolb
dec
mov
add
xchg
and
sbb
outsb
dec
mov
es
addr16
xor
xorl
push
push
dec
cwtl
adcb
push
bound
add
sub
dec
mov
mov
mov
xchg
mov
test
test
push
cmc
call
ja
jbe
lods
xor
jo
lods
xchg
out
lods
sahf
xchg
js
rcr
dec
cmp
sbb
lahf
jmp
and
adc
push
sbb
sub
mov
loop
cltd
loope
imul
cmp
cltd
lar
xor
inc
pop
mov
cmpsl
ret
enter
stos
mov
popa
filds
dec
jecxz
ret
or
popf
jo
mov
lret
shll
repnz
inc
push
mov
mov
clc
mov
loopne
sar
jbe
les
mov
adc
rcrl
in
pop
dec
sub
vpmacssdql
adc
mov
xchg
adc
push
lods
sbb
push
push
sbb
lret
mov
mov
push
sbb
sbb
xchg
jmp
mov
adc
or
rcrb
pusha
cmc
inc
lret
mov
mov
in
cli
xor
pushf
sbb
rcrl
ja
adc
add
sti
inc
pop
roll
daa
imul
shlb
xchg
jno
sub
movsb
cvtdq2ps
or
fwait
out
in
sub
jns
inc
jne
sub
in
lea
insl
adc
lods
aam
inc
mov
in
mov
subb
pop
stos
xchg
mov
int3
xor
jnp
and
pop
nop
sub
pop
outsl
cmp
cwtl
icebp
adc
mov
scas
ret
push
pop
inc
xlat
mov
iret
xchg
xor
ret
xchg
cmpsb
in
lock
cmp
das
rclb
push
shl
xchg
imul
neg
insb
in
and
add
dec
mov
in
cmc
push
push
arpl
pop
mov
scas
out
outsl
aas
inc
xchg
sahf
mov
jo
or
jle
xor
inc
jle
add
sbb
lds
ss
mov
pop
cld
or
inc
aam
or
test
cwtl
test
fstpt
lahf
mov
mov
mov
mov
in
pop
mov
cmpb
leave
ja
push
sti
pop
adc
cmpsb
jecxz
test
cmp
lcall
xor
into
mov
push
rorl
pop
jecxz
push
loop
data16
pushf
push
fnstcw
inc
addr16
and
xor
mov
add
push
mov
push
sbb
mov
mov
add
and
rol
add
add
into
rolb
aas
jge
cmp
add
and
adc
jmp
add
inc
sbb
scas
cmc
sbb
sbb
inc
je
push
shr
adc
jp
mov
push
inc
xchg
or
xchg
in
in
add
scas
xchg
and
or
cltd
inc
xor
outsl
or
pushf
mov
push
sbb
out
mov
jmp
xchg
aad
mov
fs
gs
xchg
mov
pop
sub
push
das
dec
rcrl
mov
sti
data16
push
jns
adc
mov
negl
mov
sub
ds
mov
sahf
fistl
sbb
rol
push
mov
inc
aam
pop
xchg
mov
cmpsb
mov
or
shr
mov
jb
jp
enter
mov
adc
xor
cwtl
push
loopne
ret
mov
and
shld
push
xor
xor
repz
lea
sbb
mov
sbb
jecxz
jbe
call
cmc
in
pusha
fstl
mov
jne
pop
mov
mov
push
add
das
mov
xchg
xchg
ret
jg
lea
xchg
lahf
sub
stos
aad
clc
mov
and
push
fbstp
or
cld
mov
lds
outsb
cs
testl
cwtl
leave
mov
sti
push
movsl
cld
ret
ss
rcrb
call
clc
and
cmp
pop
xor
fcompl
sbb
movsb
xchg
loopne
lds
pop
ljmp
push
cli
aaa
inc
sti
xchg
dec
in
sub
fcoml
jne
sub
fisubrl
inc
lea
cmpl
lods
sub
and
arpl
insl
and
and
push
pop
daa
push
repnz
testl
out
sahf
sar
ret
jne
fistps
lods
xchg
out
adc
stos
int
adc
aad
js
data16
ljmp
mov
push
scas
pop
jl
loope,pt
mov
jb
fstps
xchg
pop
pop
jp,pt
arpl
in
repz
imul
xor
std
pop
xchg
cmp
mov
lea
popa
sbb
jmp
setle
fisttps
push
pusha
jns
loop
jp
sub
mov
rcll
pminsw
repz
and
in
das
xchg
or
clc
pop
ficomps
add
bswap
sub
lea
sbb
shll
cmp
mov
push
dec
js
xchg
ficomps
inc
add
cs
push
sbb
call
jo
js
in
cmpsb
and
add
int
push
xor
call
test
mov
inc
leave
jbe
aad
sub
mov
add
mov
out
inc
shrl
insl
aam
insb
mov
int
push
in
loopne
stos
ret
cmp
loop
pop
push
mov
aad
test
xor
insl
mov
enter
addr16
inc
mov
mov
sub
call
jecxz
lret
scas
pop
adc
out
dec
xor
xor
jno
push
sub
xchg
inc
pusha
or
in
loop
push
int
jns
leave
jp
lock
fs
cmp
pop
jb
repz
rol
sbb
scas
mov
mov
lds
push
pusha
xchg
js
pop
add
jle
sub
push
lods
fistps
bound
cmpsl
mov
loope
fsub
jp
push
or
out
jne
ja
push
nop
cltd
out
in
cmp
je
adc
lds
es
mov
pop
mov
mov
shl
scas
aas
jmp
xchg
mov
xorps
pop
push
adc
push
push
sub
inc
add
sbb
jle
stos
push
ret
and
cwtl
clc
jae
out
xor
mov
lahf
adc
adc
inc
mov
cmp
fnstcw
mov
lcall
push
call
rol
insb
pop
popf
pop
dec
dec
pusha
bound
sub
and
jle
lcall
or
scas
push
out
shll
inc
mov
adc
mov
add
lods
aaa
das
pop
add
subb
call
rcll
xor
jmp
dec
push
enter
mov
mov
icebp
xchg
lds
xchg
push
addl
cmp
imull
push
js
gs
push
and
pop
sbb
jp
sbb
bswap
add
xchg
and
lods
sub
out
dec
push
test
mov
in
jo
lods
add
inc
push
sub
leave
push
inc
adc
popa
imul
addr16
pop
add
pop
loope
scas
ficompl
jge
pop
ljmp
adc
jmp
xor
fldcw
mov
cmpsl
sbb
mov
addr16
or
cs
inc
ja
lcall
pop
and
mov
ss
fidivl
int
dec
mov
aad
rolb
ljmp
loope
or
aaa
mov
adc
push
xor
dec
iret
cmpsl
mov
push
mov
orb
stos
idivb
popf
repz
push
aas
xchg
adc
imul
ret
fiaddl
js
pushf
jecxz
xchg
sub
iret
xor
imul
loopne
add
push
inc
ret
push
aas
mov
imul
or
mov
rcr
or
pop
xchg
cld
adc
jo
in
imul
jmp
adc
xor
pusha
dec
cmp
fsub
aas
inc
or
mov
pop
xor
push
leave
js
pop
scas
ja
ja
aad
jmp
ret
jl
mov
sbb
cmp
popf
subb
pop
arpl
sub
sbb
xor
inc
ret
popf
mov
mov
cld
push
sub
push
imul
adc
xor
or
cmp
out
sahf
out
shl
loopne
and
dec
testl
rcrb
std
ret
call
jle
clc
or
fisubs
dec
sub
mov
push
lea
lea
test
insb
pop
sub
xlat
ret
mov
je
sbb
and
insl
inc
fstp
pop
mov
mov
fstpl
ja
jns
andl
push
and
jp
mov
cwtl
test
cmp
push
fmull
fiadds
ficomps
inc
ljmp
icebp
fcmovb
les
scas
sbb
in
aaa
cwtl
mov
push
stos
xchg
adc
pushl
pop
add
xor
in
or
ss
fs
cltd
rcrl
push
jnp
mov
xchg
dec
dec
mov
add
sbb
sarb
pop
or
mov
mov
mov
sbb
lods
push
sahf
sahf
scas
es
sbb
ficompl
dec
div
inc
inc
jmp
jecxz
sbb
jl
sar
xchg
fnstcw
cmp
test
mov
int3
test
shlb
fsubrs
rcrl
fdivr
pop
sti
pop
pop
inc
push
in
xor
cs
push
mov
and
mov
inc
mov
sahf
stos
xor
in
outsb
movsl
mov
jp
dec
or
pop
jno
mov
mov
xchg
das
movsl
mov
cli
mov
subl
or
out
rclb
idivb
and
mov
cmp
jle
and
in
ret
lods
inc
mov
push
sti
inc
add
adc
push
push
mov
popf
insb
movq
cmp
sub
cmp
or
mov
jno,pt
pop
mov
jnp
sbb
fildll
xchg
sub
cwtl
fldcw
xchg
inc
aas
cvttps2pi
xchg
add
push
stos
mov
out
xchg
mov
mulps
xor
xor
jmp
add
jb
push
add
in
and
movsl
pop
pop
movb
jno
addr16
mov
add
les
dec
mov
jmp
push
xor
xchg
fnstsw
sbb
idivb
inc
into
inc
nop
mov
jge
gs
js,pt
stc
push
mov
call
popa
fcompl
dec
dec
lods
test
cmp
sub
scas
iret
je
das
in
rclb
xchg
fsubp
and
lcall
subl
arpl
adc
aad
mov
cmp
push
add
subl
sahf
sti
aas
ljmp
idivl
dec
xchg
test
jmp
push
out
test
stos
cmpsl
dec
mov
push
imul
cmpsl
or
les
repz
add
mov
cmp
sti
enter
jae
xchg
mov
and
xchg
lock
pop
xchg
rolb
and
je
xlat
mov
push
mov
inc
jo
sub
cs
cmpsb
mov
jp
pop
outsb
das
mov
lret
mov
push
dec
sbb
in
xlat
stos
mov
push
xor
aad
xor
or
mov
daa
mov
popf
cwtl
or
sbb
js
dec
ja
pop
pop
dec
outsl
xchg
hlt
push
addl
adc
fdivs
test
fwait
xor
pop
mov
addr16
and
loopne
stos
or
xor
frstor
xchg
pop
movl
mov
sbb
fisubrs
sbbb
dec
cmc
sub
sub
fildll
xchg
out
mov
push
mov
dec
outsb
xor
outsb
lock
inc
mov
mov
jle
mov
cmp
mov
subl
pop
or
cltd
cmp
xlat
sti
insl
jb
inc
inc
div
mov
pop
test
das
test
jmp
dec
jge
pop
dec
pop
xor
cwtl
xor
test
imul
jge
faddl
adc
cmc
inc
popf
and
jmp
scas
scas
jns
cmp
or
dec
call
mov
and
int3
fcoml
daa
cmp
das
rclb
lret
mov
out
xor
clc
das
adc
pusha
lahf
insl
sbb
lret
inc
mov
pop
or
push
inc
or
inc
ret
iret
movsb
sub
movsb
shr
les
fistps
les
dec
fldenv
adc
jp
sbb
insb
sub
push
aam
dec
hlt
ss
jecxz
ljmp
mov
ds
or
sbb
jo
jo
xchg
es
or
mov
jno
or
ret
popa
jbe
mov
jp
ljmp
xlat
leave
fisubs
fs
cli
dec
push
jg
lcall
sbb
xor
into
jne
insl
fnstsw
into
push
fisubrs
insb
into
dec
popa
mov
jo
neg
jb
xor
sbb
aas
test
add
pop
aaa
sub
movsb
xchg
lret
daa
mov
mov
pop
stc
cmpsl
mov
std
jnp
pusha
jnp
mov
dec
lret
sbb
repz
push
call
xor
jl
jns
test
mov
gs
lea
push
fidivrl
xor
test
fucomip
or
inc
lret
shlb
add
xor
fdivp
jecxz
mov
xor
xchg
mov
in
jno
in
sbb
fbld
xrelease
stc
fstl
push
lcall
cmp
dec
nop
mov
adc
stos
lret
and
fiadds
xchg
pop
push
cli
scas
sub
fscale
mov
jp
loopne
pop
mov
cmp
xor
mov
sbb
cmp
inc
in
pop
sbb
xchg
mov
loop
stc
xchg
dec
int3
fcmovnbe
fnstsw
repz
ret
pop
mov
and
pusha
and
sbb
jno
ss
xchg
shlb
sbb
jl
faddl
shlb
flds
xchg
cltd
test
popf
jne
loope
push
push
daa
jbe
jnp
pop
xlat
xchg
push
insb
mov
ja
and
stos
lahf
lea
sub
ficomps
mov
jmp
loope
cmp
push
pop
push
add
outsb
jns
js
loope
orl
pop
cltd
mov
cmp
int
or
mov
rcrb
xor
aam
pop
dec
shlb
jp
pop
cmp
int3
call
add
mov
jnp
es
leave
stc
sbb
jbe
push
stos
xchg
jbe
dec
pusha
repz
fcoms
or
jecxz
mov
faddp
outsl
lods
test
inc
scas
jae
daa
push
sub
call
or
or
hlt
shrl
mov
inc
xchg
push
sbb
flds
iret
lret
xlat
xor
dec
and
scas
js
push
push
push
mov
clc
push
outsb
dec
and
push
cmc
jae
sbb
je
outsb
loop
aas
lret
lcall
cli
dec
out
add
fadds
jecxz
aaa
jmp
adc
pop
insl
sub
adc
inc
mov
clc
and
xchg
inc
int3
sub
dec
or
test
fmul
fimuls
psllq
dec
mov
cltd
or
dec
icebp
out
push
or
push
clc
fnstenv
popf
ds
ljmp
jge
jmp
shrb
iret
sbb
jg,pt
loop
cmp
xchg
insb
icebp
push
pop
sbb
imul
dec
shrl
pop
xor
inc
scas
mov
popa
add
hlt
rorl
jl
pop
js
sub
dec
jmp
test
jne
fwait
jmp
ss
mov
push
je
icebp
jl
test
loope
adc
add
mov
mov
pop
add
dec
jmp
push
je
lods
and
insl
and
ret
js
data16
cwtl
add
sub
xchg
jbe
sbb
aas
fistps
or
stos
shrb
icebp
ror
jns
lods
xchg
sar
mov
cmp
sub
jbe
fsts
xchg
adc
les
clc
cmp
adc
lods
or
or
ret
int
mov
and
sbb
jae
cli
movsl
les
add
jmp
dec
repz
dec
sub
xchg
and
lahf
hlt
mov
sbb
leave
loope
cmp
iret
into
repnz
pop
inc
jge
xor
jg
loope
fildll
push
mov
jecxz
pushf
imul
xchg
jmp
testl
inc
add
sbb
cmp
popa
adc
xchg
pop
pusha
cmp
add
jbe
aad
pushl
mov
outsl
mov
push
std
loopne
jg
lock
icebp
sbb
int
add
lock
idivl
mov
xchg
mov
sbb
lret
adc
movsl
mov
sbb
push
adc
jecxz
je
shlb
sbb
cs
data16
cmp
bound
xchg
mov
dec
movsl
fdivrl
pop
lds
dec
jno
mov
cmp
inc
cmp
ficomps
cmp
or
sub
ret
pop
dec
dec
and
xchg
mov
dec
in
rol
or
aaa
dec
dec
fcompl
dec
push
lock
aaa
scas
cmc
xchg
nop
aam
movsl
sub
int3
das
add
jl
dec
cld
jnp
sub
enter
stos
outsb
mov
mov
repnz
mov
testb
sbb
ret
int3
roll
das
scas
xchg
es
xor
xchg
movsb
cmc
int
dec
cmp
jbe
in
int3
push
mov
xchg
jb
movl
mov
loopne
test
sbb
xchg
dec
aas
leave
sub
leave
cmp
sub
lret
mov
xchg
jns
test
cmp
xor
jnp
enter
sahf
cmpsb
inc
in
sbb
jle
aas
pop
aam
cmpsb
sti
cmp
andl
rcrb
fs
jge
or
mov
push
dec
adc
outsb
cmpb
sbb
std
outsb
mov
sub
in
ret
imul
sub
loopne
call
dec
jae
gs
xchg
push
clc
jp
mov
lock
xchg
lahf
add
inc
pop
sbb
sbb
inc
ja
sarl
sbb
in
jnp
jnp
xchg
jo
inc
jne
mov
jmp
ds
inc
cli
push
sbb
es
lret
nop
cmp
add
sbb
iret
rolb
mov
test
lods
xchg
sub
nop
and
sahf
cmpsb
fldt
xchg
jp
scas
hlt
outsl
adc
mov
js
pop
lret
lahf
popa
mov
jge
add
xchg
cmp
mov
jecxz
push
jbe
add
or
dec
arpl
push
mov
ret
sti
pop
xor
and
adc
mov
loopne
or
imul
push
mov
insl
arpl
or
adc
into
enter
cmp
dec
ja
xchg
jecxz
dec
and
mull
jmp
out
dec
sub
pop
xor
mov
adc
pusha
repz
adc
push
cmp
fimuls
and
xchg
movq
and
inc
ds
inc
jmp
movsb
filds
out
adc
movsl
lea
in
mov
and
arpl
mov
int
xor
cltd
mov
std
shrb
sbb
popa
hlt
jbe
mov
push
mov
test
mov
jp
and
mov
mov
scas
out
jmp
pop
and
cmp
cmp
cmc
push
push
repz
stos
ret
rorb
mov
loope
xor
andl
jg
mov
sbb
pop
fs
xor
pop
out
add
outsb
xor
repnz
nop
scas
add
fdiv
xorb
xlat
int3
pop
mov
jge
add
sub
fwait
hlt
pushf
sub
mov
lcall
and
sbb
mov
rorl
push
lock
ret
push
sub
cltd
xor
jne
sbb
int
jne
test
lock
and
leave
cwtl
or
bound
fmul
dec
and
add
push
int
fstpt
cmp
sbb
pop
dec
adc
ja
test
stos
pop
cmp
outsb
pop
icebp
cmc
outsb
btr
mov
sub
repnz
xor
mov
adc
fwait
dec
ret
js
call
inc
aas
outsb
mov
mov
cs
xorl
mov
cmp
pushl
jno
aaa
xor
loop
ja
setno
insl
sbb
pop
xchg
inc
mov
cmpl
jns
imul
cmc
mov
or
jg
pop
out
cmp
dec
pop
add
enter
cs
push
sahf
stos
xchg
outsb
ret
hlt
jg
out
andb
cmp
jno
or
aas
mov
mov
add
fdivl
icebp
adc
jo
sbb
mov
daa
pop
dec
dec
fnstenv
pop
inc
sbb
sbb
es
outsb
ret
dec
cmp
fbld
outsb
subb
cmc
rorb
daa
in
mov
je
mov
pop
int3
cmc
jae
lahf
sub
cmp
sub
cwtl
xchg
jge
push
sub
inc
mov
imul
jbe
add
pop
test
lcall
test
xchg
out
fcomp
lock
daa
test
jnp
test
xchg
lea
inc
frstor
arpl
mov
int
clc
inc
mov
mov
mov
push
cli
jg
and
dec
xchg
mov
jne
fwait
adc
shlb
movsb
and
xlat
test
inc
jnp
stc
cli
dec
loop
movsb
add
jge
into
in
pop
int3
pusha
xchg
in
orb
int3
xor
sti
sbb
pop
jmp
xchg
cmpb
xchg
cmp
inc
dec
jbe
cmp
inc
mov
ss
fisttpll
cld
mov
leave
dec
cmc
ljmp
sbb
pop
pop
fsubrp
xchg
cmp
push
xchg
popa
push
rcrl
js
push
mov
push
pop
fs
push
test
jecxz
rcrb
es
mov
and
test
push
pop
mov
popa
pop
dec
xor
jno
enter
popa
faddl
sarl
cli
aam
mov
pusha
push
dec
js
dec
xlat
jg
shrl
lea
js
add
push
inc
xor
add
push
cmc
dec
lret
aaa
sbb
dec
arpl
mov
cli
in
add
in
sahf
add
pop
mov
and
fcmovnb
xchg
mov
lds
aas
addb
mov
dec
pop
int3
sbb
push
cmp
stos
xor
aaa
shlb
insl
lods
stos
sti
es
cmp
mov
filds
fisttpll
lods
pop
rolb
cmc
dec
pop
sti
add
subl
insl
xchg
add
les
sahf
movsb
stos
shl
push
test
flds
cmp
sbb
lcall
iret
sahf
notb
test
inc
fs
lcall
sub
rclb
mov
or
std
adc
jbe
push
xchg
cltd
or
mov
enter
cmp
cli
sbb
rorb
jo
jo
mov
scas
ret
xor
int
gs
and
cmc
jb
rorb
jp
mov
or
xchg
cmpsb
mov
data16
inc
insl
mov
adc
imul
out
lret
mov
pop
mov
mov
and
pop
sbb
inc
mov
xchg
inc
arpl
jl
adc
loope
adc
mov
or
sub
mov
or
inc
leave
pop
push
jmp
into
pop
test
imul
addr16
jg
lods
popa
test
lahf
data16
lock
mov
xchg
mov
add
mov
stc
test
jmp
popa
les
pop
pop
cmp
fistl
cmp
inc
outsb
add
adc
jecxz
add
out
xchg
xlat
cli
sbb
pop
sbb
xorl
pop
adc
mov
sar
push
pop
rolb
xchg
lods
and
pop
jne
pop
pop
shl
into
cmc
jnp
xor
adc
jb
cmp
movsb
loope
cs
jbe
xlat
mov
fistl
out
loop
sbb
pop
movsb
pop
in
cmpsb
mov
bnd
cld
pusha
inc
aam
xchg
add
adc
xchg
pop
es
pop
sbb
pop
and
or
jnp
pop
add
out
xor
push
imulb
andb
fisubl
jae
std
pop
adc
push
or
pop
rolb
push
movsb
or
imul
adc
sar
int3
and
roll
sub
xchg
add
test
dec
mov
loopne
pusha
rcrl
push
cmp
out
femms
pop
nop
mov
xor
add
iret
aas
out
jl
cmp
bound
mov
mov
rcrb
lock
negb
add
ja
lcall
mov
ds
das
adc
dec
sub
mov
mov
push
stos
and
es
call
je
mov
pop
out
add
sbb
dec
or
ret
iret
in
hlt
sbb
lahf
inc
or
ja
cmp
fdivrs
dec
cmp
dec
ljmp
adc
jmp
mov
mov
mov
xchg
pop
inc
mov
lock
mov
shl
test
repnz
sahf
loope
ficoms
sbb
decl
aas
rorb
mov
lds
dec
jns
cmpsb
sub
xchg
fists
sub
pop
test
lret
lret
cmp
lods
add
mov
ds
shr
or
cld
push
xchg
mov
jno
repz
int
fbld
addr16
ret
imul
pop
scas
xchg
lahf
xor
ds
and
mov
loop
push
enter
lcall
adc
jno
in
and
iret
mov
xchg
mov
jmp
jge
push
in
cmpsl
out
sub
adc
aam
mov
movsb
sub
xchg
inc
int3
push
outsb
imul
leave
mov
out
mov
cmp
lcall
in
push
cmp
jp
cmp
jge
call
adcb
mov
xchg
dec
mov
in
pop
sahf
out
cltd
dec
jmp
pop
cltd
dec
pop
test
aad
imul
cmpsb
inc
add
ja,pn
aam
mov
dec
cmp
fistl
test
mov
dec
push
fidivs
and
push
sub
push
adc
iret
mov
fsubp
adc
imul
push
mov
popa
scas
jno
dec
into
sbb
scas
xchg
xchg
sub
in
rcr
insl
sub
add
ret
bound
ret
and
xchg
insl
je
push
sar
negl
add
arpl
or
clc
xchg
jbe
aam
sub
mov
orl
mov
out
dec
icebp
lods
cwtl
cli
scas
inc
sub
xor
lret
testb
pop
cltd
mov
test
jl
inc
adc
jle
sub
movsl
lock
sub
add
dec
inc
icebp
adc
push
inc
adc
mov
pop
push
in
lods
xchg
cmp
inc
jg
ljmp
mov
pop
adc
xchg
bound
sub
lcall
clc
out
push
ret
js
or
jnp
test
leave
jne
iret
xchg
movsl
mov
aaa
sub
dec
jb
loope
and
mov
stos
or
sub
adc
mov
push
or
outsl
add
cmc
inc
ljmp
cmp
insl
xchg
out
aaa
loop
add
sub
push
in
movsb
pop
imul
mov
sbb
cmpsl
out
push
dec
sbb
into
mov
sbb
mov
pop
or
ret
fsubp
enter
roll
or
or
call
nop
inc
sbb
stos
cs
movsb
jb
insb
and
loope
lret
add
mov
cmp
lods
add
dec
aad
pop
push
pop
dec
stos
mov
pusha
mov
popa
add
fnstsw
adc
je
sbb
repz
xchg
repnz
sub
pop
pop
rorb
pop
jge
shlb
dec
insb
xchg
add
int3
rcrb
mov
cmp
push
dec
aaa
loope
leave
sbb
movsb
in
je
cmp
adc
rcrb
pop
push
pop
inc
icebp
mov
dec
and
addr16
or
arpl
mov
test
in
pusha
ljmp
fdivr
xlat
jg
jp
scas
adc
insl
cmc
xchg
fsub
pop
arpl
outsb
imul
and
ret
scas
adc
and
xorb
mov
fxch
stos
push
push
imul
jle
aaa
shl
mov
push
aam
repnz
mov
mov
stos
mulb
sub
lahf
cmp
inc
sub
lods
aad
gs
outsb
or
jnp
mov
lret
loopne
lahf
mov
lds
rolb
ss
cwtl
into
sub
clc
mov
sbbl
add
test
orl
adc
dec
aad
fdivs
dec
cmpsb
push
leave
pop
and
nop
push
aam
dec
gs
shll
add
or
jo
lahf
rorl
dec
stc
and
or
mov
sbb
adc
test
sub
jecxz
lret
stos
mov
pop
dec
fwait
mov
cld
insl
cmp
enter
xchg
andl
movsb
sbb
enter
mov
cmpsb
cmpsl
test
decb
mov
sarl
stos
jle
fisttpl
std
add
mov
cmpsb
enter
loopne
movsb
xorb
loopne
adc
lea
or
and
imul
mov
js
lahf
pop
xchg
sub
in
adc
stos
js
ret
jmp
jle
cmp
lods
xchg
imul
out
and
dec
add
in
lock
dec
and
inc
xchg
mov
xchg
and
or
fidivrl
or
imulb
push
mov
or
cltd
js
in
mov
jmp
out
mov
cli
lret
ret
cmc
aas
stos
sahf
sti
fidivs
movsl
gs
leave
mov
sbb
sahf
les
bnd
cvtpi2ps
sbb
and
stc
sbb
in
ss
mov
mov
mov
sahf
cs
dec
ret
pop
jne
sbb
dec
in
icebp
mov
imul
push
or
mov
lret
daa
loop
push
mov
jae
or
popa
inc
and
push
push
mov
xor
xorb
or
and
jmp
fisttpll
push
adc
cs
lods
xchg
adc
and
jge
cmpl
test
insl
repnz
pushf
je
lret
xchg
mov
xor
icebp
or
sbb
xchg
pop
xor
sbb
mov
lock
xchg
mov
outsl
hlt
mov
daa
mov
in
addr16
scas
cmp
pop
add
call
mov
outsb
test
xchg
xchg
inc
xchg
lods
or
test
fidivl
mov
sbb
sahf
ret
add
push
outsb
loope
jns
mov
outsl
jle
pop
mov
loope
xchg
popa
and
mov
adc
fisubl
jnp
les
out
cmpl
pop
aaa
je
pop
stc
adc
jl
xchg
jmp
mov
shll
negl
cmp
jo
int
fcmovbe
ds
mov
sbb
add
lods
jge
sbb
es
sub
sub
int3
repz
mov
add
and
jae
popf
add
fwait
inc
outsl
xchg
jmp
inc
mov
shl
cmp
xchg
xor
adc
mov
sbb
cwtl
imulb
loope
popa
mov
loopne
push
test
pushf
movsl
inc
mov
cmpsb
adcl
xchg
sub
jno
pop
or
add
aad
shr
push
or
subl
inc
jecxz
jle
vpunpckldq
mov
sub
in
fisubs
mov
hlt
or
out
inc
jmp
rcr
pop
dec
cwtl
and
mov
xchg
jecxz,pt
mov
cs
jmp
repnz
cmpsl
pop
stc
dec
mov
or
insb
scas
xor
lods
pop
pop
xchg
ja
jge
or
and
pushf
add
jmp
xor
lcall
jne
aaa
or
ds
pop
decl
push
decb
adc
pusha
lock
mov
push
out
dec
jge
popa
leave
out
push
adc
ds
lcall
dec
lods
jno
add
lahf
outsl
jbe
outsl
pop
add
pushf
loopne
mov
xchg
call
mov
xchg
dec
add
cmp
push
cmp
xchg
fisubrl
pop
add
mov
pop
add
adc
ljmp
jecxz
xor
rorb
lret
xchg
push
mov
jb
jle
inc
out
dec
or
jge
movsl
push
xchg
and
cmp
es
mov
fwait
into
mov
arpl
pop
popf
shrb
outsb
dec
xor
sub
fnsave
out
mov
out
pop
xchg
push
lods
pushf
add
pop
cmp
mov
push
push
movb
xor
jo
mov
push
aad
popa
jns
mov
mov
mov
test
or
in
and
inc
int3
mov
xchg
push
stos
mov
les
je
outsb
jno
inc
mov
rsm
xor
adcb
and
push
outsl
xchg
rorl
aad
xchg
lcall
push
adc
xor
lds
lods
mov
xchg
jg
mov
pop
mov
xor
stos
cltd
dec
inc
movsl
or
mov
fdivrp
inc
adc
dec
stc
mov
testb
out
jmp
mov
fistps
mov
std
mov
lock
and
repnz
jne
adc
adc
in
loopne
out
fidivl
outsb
mov
movsl
mov
jecxz
call
inc
call
jnp
fbstp
imul
cld
iret
ret
mov
lea
int
xchg
push
scas
cltd
adc
das
gs
rcl
inc
ds
in
insb
shl
jg
testl
subb
push
inc
std
jo
out
test
mov
xchg
cmc
lahf
clc
movsb
idivl
xchg
bound
push
push
sbb
mov
dec
jge
xor
mov
test
pop
sahf
mov
jecxz
add
xor
notl
mov
sbb
or
ret
fdivr
push
js
and
dec
inc
push
inc
mov
mov
mov
mov
insb
addb
imul
dec
push
sub
stos
pop
in
mov
inc
scas
rcrb
mov
push
xchg
or
inc
pop
cli
mov
data16
xchg
mov
adc
xchg
jle
push
imul
cmpsl
push
or
setno
xor
mov
sub
sbb
sarl
xchg
repz
loopne
pop
mov
daa
scas
push
sarl
cwtl
inc
cltd
pop
xchg
push
notl
fdivl
int3
sbb
cmp
or
mov
add
out
cmpsl
movsl
or
insb
mov
pop
inc
jbe
xor
adc
dec
pop
movl
jns
jo
daa
push
sub
add
repnz
xchg
or
divl
leave
cmpsl
dec
testl
test
andb
mull
js
mov
xchg
icebp
jbe
in
dec
add
sti
jge
mov
xchg
pushf
loopne
sub
push
mov
sbb
sbb
mov
iret
xchg
inc
js
loope
cwtl
or
mov
insb
mov
and
daa
xor
cs
and
iret
jns
test
cmpsl
nop
sbb
xchg
shll
imul
push
addl
cmp
out
mov
pop
xchg
nop
movb
clc
sbb
data16
js
mov
int3
leave
lods
aaa
xchg
dec
in
and
or
test
iret
sbb
push
imul
mov
ljmp
or
inc
hlt
mov
fsubp
mov
mov
cli
xchg
out
push
and
repnz
pop
inc
ss
dec
mov
into
sub
jp
inc
cltd
sub
cmpsb
sub
push
adc
int3
loopne
daa
stc
mov
pcmpeqw
ret
mov
sahf
cmc
xchg
fnsave
cli
ljmp
xchg
adc
adc
pop
push
pop
aaa
add
pushf
xchg
mov
dec
pop
push
cmp
lea
inc
sbbb
test
int
jp
jle
faddl
cmc
mov
dec
test
xor
jno
xlat
ss
add
in
push
pop
arpl
cli
mov
lock
pop
push
fstpl
xor
aam
adc
push
outsl
jo
jmp
lcall
popl
push
xor
or
stc
stos
scas
ret
subl
xchg
and
mov
sub
gs
loopne
sti
rol
addr16
xor
test
es
testl
sub
jmp
dec
inc
test
mov
sub
mov
repz
xchg
lahf
call
cmp
ljmp
aam
out
out
adc
add
cmp
inc
push
ret
fidivrl
scas
inc
outsb
lods
movsl
pop
call
add
aas
jns
inc
scas
sub
adc
pushf
fstpl
sbb
in
cmpsl
rol
lea
push
rclb
lock
mov
out
out
xchg
mov
shll
xlat
pushf
pop
mov
gs
jl
adc
js
enter
shrb
dec
mov
xor
mov
rol
mov
inc
mov
lods
pop
lret
mov
icebp
call
add
cltd
pop
pop
lret
cmc
pop
mov
ret
cmp
stos
fcomp
pop
xchg
movsl
fwait
das
fcompl
mov
ret
add
mov
ret
ljmp
lock
shrb
aas
or
add
sub
movsb
push
pop
sbb
sahf
cmpl
adc
aam
nop
leave
push
inc
push
lret
in
scas
movsl
sub
or
or
cwtl
jecxz
dec
mov
movsb
xchg
in
pop
fdivs
ret
icebp
inc
fmuls
scas
or
jle
outsl
jge
jbe
insb
dec
jo
push
xor
inc
test
xor
dec
sub
out
std
in
iret
jle
insb
mov
ret
orl
adc
mov
outsl
stos
mov
cwtl
clc
inc
fbld
jno
scas
outsb
pushf
addl
test
lods
xor
outsb
add
mov
jge
sarl
aaa
pop
push
xor
xorl
push
and
and
add
and
movsbl
or
cmp
lret
lock
daa
push
adc
mov
xlat
cli
inc
roll
into
out
fdivr
dec
fsubrs
sbb
ds
vmwrite
add
daa
inc
sbb
stos
cmpsl
in
ja
push
jmp
xchg
mov
pop
pushf
repz
mov
js
cmp
jp
xchg
jno
cmp
insl
sbb
sbbb
xlat
sahf
xor
outsb
lock
push
pop
cmp
mov
inc
push
push
mov
clc
fisubl
xchg
mov
and
dec
dec
sub
jns
jge
jle
out
cwtl
ds
dec
pushf
push
xchg
or
sbb
pop
cmp
jns
mov
jns
out
ss
mov
push
push
std
pop
sbbb
dec
js
repz
test
xchg
lods
xor
xrelease
pushf
dec
mov
insb
inc
mov
daa
or
out
cltd
mov
pop
out
out
xchg
xchg
xor
dec
cmp
mov
mov
xor
jp
mulb
nop
push
pop
fnstsw
sti
cmpsl
arpl
and
enter
xchg
add
pop
push
repz
and
lods
xchg
xchg
jecxz
es
mov
icebp
lcall
pop
inc
push
insl
js
push
jae
call
out
addl
or
or
lods
add
sbb
icebp
sbb
ja
xor
rol
out
int
shl
loope
jbe
push
fildl
cmp
in
push
pop
push
insb
popa
addr16
and
sub
adc
fidivs
into
imul
inc
and
dec
aad
mov
orl
imul
mov
add
jmp
mov
or
inc
out
ror
lock
mov
adc
arpl
sarb
popf
fxch
fs
push
or
add
insl
cmp
call
lahf
adcb
ljmp
mov
mov
cmp
std
mov
in
xchg
cmc
lcall
leave
bound
push
addr16
test
pop
scas
cmp
xchg
sbb
popa
cmp
pop
and
sbb
or
int3
dec
shl
andl
mov
outsl
addb
mov
add
das
fistpl
push
push
fwait
ret
jecxz
push
jne
adc
test
imul
loopne
cmp
out
mov
sub
pop
dec
aam
int
sub
pop
leave
shlb
push
xlat
repnz
jle
or
std
ret
xchg
inc
jno
xor
lret
cmp
popa
mov
push
xchg
cmc
lds
pop
cmpl
mov
jge
add
mov
cmpsb
fsubl
mov
sbb
cmp
mov
adc
jnp
pop
out
getsec
fcoml
jge
push
xchg
iret
mov
fwait
sub
in
imul
cmp
pushf
aad
add
fidivrs
in
in
xor
sahf
sub
ja
cmp
pop
sub
addb
mov
out
sub
mov
shlb
sbbb
addb
push
inc
push
sbb
fld
lcall
adc
jp
and
mov
jmp
outsb
xchg
mov
cmp
enter
mov
cmpsb
outsl
lahf
or
xchg
cmp
in
inc
push
mov
sub
sbb
imul
xchg
or
scas
sti
mov
mov
push
or
mov
rclb
test
xchg
mov
pop
push
test
mov
push
mov
add
add
xor
cli
fnstsw
mov
out
mov
mov
insb
pop
mov
sbb
cmpsb
sbb
dec
mov
rorl
lahf
mov
xor
ljmp
pop
inc
xchg
and
xor
pushf
popa
and
scas
jmp
xchg
lret
pop
sbb
mov
add
or
or
movsb
push
sbb
out
iret
mov
cmp
inc
rcrl
adc
or
jecxz
or
imul
out
cmc
ljmp
ret
repz
and
sbb
int
les
je
jb
ret
mov
sbb
xor
inc
push
jno
dec
out
xchg
imul
xchg
adc
jle
sbb
adcl
jg
sub
mov
stos
push
sub
fbstp
jle
mov
scas
cmp
aad
adcl
stc
xor
pop
mov
xchg
aam
push
adc
mov
scas
mov
rcll
jge
adc
mov
shl
pusha
into
xor
hlt
push
cmp
add
fiadds
xchg
adc
sbb
aaa
test
xchg
add
in
mov
sub
lds
xor
and
xchg
xor
popf
cltd
mov
jl
lds
jb
inc
xor
and
adc
out
add
dec
cmp
test
jmp
dec
dec
fs
xor
mov
adc
dec
jle
jmp
orl
cmp
lret
fwait
jge
adc
and
xchg
dec
js
fimull
dec
fst
sahf
mov
jns
add
addr16
inc
test
ljmp
push
and
ret
addl
cwtl
ds
xor
jp
xchg
outsb
mov
pop
pushf
mov
fisubrl
mov
mov
push
sub
adc
push
lea
xor
stc
or
pop
and
rclb
loop
rorl
add
incb
mov
push
sub
das
ljmp
shrb
lea
and
cli
mov
clc
mov
jo
pop
push
mov
stc
popf
subl
xor
adc
push
jge
and
xor
arpl
movsb
jb
mov
cmpsl
or
scas
ljmp
sub
sbbb
popa
and
push
cmp
adc
or
push
lods
sub
scas
sbb
or
pushf
ret
xor
or
add
in
inc
cmp
push
xor
fcomps
add
in
jo
in
andb
or
dec
push
repz
jmp
out
rclb
cmc
je
insl
jae
fs
inc
pop
lds
push
push
pop
cmc
xchg
call
fidivrs
cmpsb
jno
testl
jmp
loope
iret
sbb
adc
dec
test
imul
mov
fdivl
pop
cmpsl
vphsubdq
cmp
ret
ret
je
xchg
or
lods
jl
mov
scas
pop
rclb
mov
pop
mov
push
test
cmp
arpl
shll
cwtl
outsl
adc
xchg
idivl
cmp
xor
ljmp
pop
lock
hlt
or
sti
pusha
dec
cmc
inc
pushf
mov
pop
lahf
cmp
cmp
repnz
out
adc
cmpsl
rclb
dec
fidivl
fisubs
xchg
pop
cmp
push
dec
mov
dec
mov
cmc
or
cmp
test
aad
lret
jbe
imul
push
sub
cmp
gs
add
dec
decb
push
andl
cli
lret
sub
jmp
xchg
xchg
and
std
adc
cmpsl
mov
out
mov
ljmp
clc
ffree
pop
add
enter
insl
adc
inc
stos
jne
mov
incb
or
jnp
add
jmp
pop
xor
mov
mov
leave
mov
mov
xchg
scas
insl
xlat
jo
xor
mov
push
scas
or
movsb
jne
clc
cwtl
pop
jb
js
adc
mov
mov
mov
fstl
mov
jbe
es
push
xlat
ljmp
mov
pop
inc
shrb
mov
stc
dec
or
xor
xchg
xorb
mov
fcmovnbe
sbb
scas
xor
xchg
dec
mov
stos
xchg
stos
and
rcrl
lret
mov
adc
cld
outsb
ss
loop
mov
push
push
mov
push
in
xchg
lret
adc
bound
aam
test
cmpsl
fidivs
pop
or
dec
pop
insl
sbb
loop
sbb
movsb
ja
inc
ja
xchg
nop
xlat
adc
repz
cld
mov
xchg
shll
dec
or
hlt
sti
inc
pop
add
jno
lock
loope
popa
imul
xchg
cld
leave
pop
add
sti
ljmp
loop
sub
jae
leave
mov
fidivl
pushf
imul
and
xor
mov
mov
mov
inc
out
jecxz
push
adc
xor
shrl
and
movsb
movsl
mov
xor
repz
mov
mov
xor
jb
sub
pushf
cli
mov
pop
xlat
adc
xor
cmp
dec
sar
andl
inc
mov
dec
pop
push
mov
push
jns
xlat
or
rcrb
lahf
aam
xchg
xchg
add
and
mov
xchg
jge
psubsw
int
xor
xchg
fwait
jb
push
mov
dec
add
dec
pushw
insb
mov
fcomp
test
jge
and
jnp
jmp
mov
adc
lret
push
mov
iret
jne
mov
loope
mov
test
ss
gs
dec
dec
add
stos
adc
loop
test
mov
ror
out
push
cli
inc
ret
popa
fildll
mov
bound
mov
mov
xchg
dec
pop
arpl
adc
mov
gs
pop
inc
clc
repz
push
bound
sbb
mov
push
notl
and
mov
dec
loop
pop
addb
shl
lea
enter
data16
ds
add
xor
sub
stos
mov
mov
lods
test
jnp
hlt
arpl
out
xchg
sbb
clc
inc
pop
aam
sbb
repz
or
jmp
mov
sbb
add
push
jb
ds
in
test
in
mov
arpl
lods
cmp
xchg
lcall
or
xchg
inc
inc
push
cmp
xor
out
subl
or
ret
movsb
pop
jmp
pop
adc
cmpb
jp
lcall
push
shll
jnp
mov
ja
mov
hlt
adc
inc
inc
inc
iret
imul
inc
nop
std
pop
mov
cmp
test
push
cmpsl
imul
xchg
test
mov
fcmovnbe
mov
loopne
sbbl
sub
out
dec
mov
mov
aaa
pop
adc
mov
jnp
and
fsub
jle
hlt
pop
add
dec
adc
sbb
jge
or
jnp
shlb
vpand
sti
lcall
gs
sbbb
leave
mov
mov
popf
add
fiaddl
ja
stos
cld
orl
dec
mov
xchg
sbb
test
add
iret
sbb
outsb
cmp
adc
jo
or
pop
loopne
out
imul
insl
je
lock
lds
cmp
push
sahf
scas
ret
je
mov
cli
push
xchg
rdtsc
lods
les
sti
or
jae
xchg
dec
adc
inc
mov
xchg
jge
sub
clc
cld
xor
loope
adc
pop
add
pop
jmp
cmp
jge
mov
rcl
and
cli
xchg
jle
push
fidivrl
cmpsb
cltd
rolb
test
cli
sti
loopne
jns
jae
sti
jp
adc
inc
mov
outsb
shll
xchg
rcll
dec
pop
fwait
icebp
int
mov
aad
mov
mov
ljmp
sti
push
mov
jbe
dec
incl
sahf
loope
pop
mov
imul
jo
dec
mov
sbb
xchg
mov
out
or
cmp
imul
sarb
insb
int
insl
cld
cltd
pop
ljmp
sbb
push
jmp
sbb
orb
adc
aaa
ror
jmp
jns
lods
rcll
in
mov
cmp
test
pushf
mov
dec
sub
movsl
in
ficoms
prefetcht0
nop
scas
mov
orb
fidivrl
mov
mov
jmp
cmp
lock
cmp
sti
push
cmp
cmp
test
jb
jmp
push
fs
and
xor
mov
lcall
fdiv
incl
sbb
xchg
cli
movsl
imul
adc
xchg
out
cmpl
mov
mov
sub
xchg
enter
gs
arpl
popa
push
test
lret
popf
iret
ljmp
jo
xor
jp
mov
cmp
push
std
movsl
inc
jns
addr16
pusha
lock
lret
dec
mov
lcall
pusha
int
lret
jae
mov
dec
lret
js
xlat
adc
std
rcr
xchg
dec
fsubrl
xchg
cltd
or
adc
loope
xor
mov
dec
push
dec
mov
dec
out
jge
mov
pusha
iret
testl
or
lcall
leave
sahf
inc
pop
lcall
nop
jp
mov
ja
cmp
push
test
enter
jp
mov
and
add
fs
int3
pop
inc
fwait
xchg
xchg
adc
mov
lock
xchg
mov
push
hlt
into
sbb
shrb
lock
sbb
insb
mov
pushf
test
lahf
mov
popf
fmulp
pop
sub
in
das
sti
ljmp
ljmp
lea
cmp
sub
cs
or
cmpsb
pop
or
push
sbb
roll
test
pop
and
push
sbb
stos
mov
enter
mov
xchg
xor
jmp
aas
cltd
jl
ja
popa
sbb
sub
add
out
sub
icebp
mov
push
aas
dec
mov
scas
cmpb
xlat
xchg
cmc
pusha
pushf
and
adc
push
pop
mov
ficoml
add
addr16
enter
jecxz
sub
cmp
xor
mov
loopne
sbb
push
int3
imul
xor
aas
push
xor
cwtl
imul
bound
shlb
push
lcall
lahf
in
mov
push
mov
xor
stc
popl
and
in
push
mov
cwtl
jns
jg
mov
dec
dec
dec
outsb
push
and
out
add
mov
cli
test
jno
dec
cmp
sbb
hlt
hlt
or
jle
push
mov
push
xor
dec
fcompl
dec
mov
mov
int3
ret
cmp
lret
movsl
pop
outsb
popf
add
js
inc
stc
pop
push
rcll
into
add
jo
cmp
fs
dec
into
call
dec
jns
movsb
das
leave
xorl
inc
mov
xchg
fisttpll
and
jp
test
imul
sbb
jae
int
jp
movsb
or
rolb
loopne
je
push
pop
add
outsl
dec
add
mov
inc
xchg
sub
shr
loopne
clc
das
jecxz
shl
lea
ficoml
jns
sbb
out
shl
mov
xchg
lea
mov
lret
cmp
cmpsb
nop
push
arpl
mov
lds
int3
xchg
imul
sbb
adc
xchg
sub
or
fistl
and
xchg
xor
repz
inc
mov
shlb
adc
sbb
sub
das
ret
or
outsb
sar
ja
movsl
rcr
xchg
mov
into
cmp
lea
rcll
mov
mov
mov
or
push
bound
test
mov
ss
xchg
mov
pop
push
test
out
add
sti
pushf
cs
arpl
and
jne
loope
icebp
push
mov
push
add
bound
enter
mov
mov
sbbl
repz
lods
jnp
movsb
cmp
movsl
out
out
out
sarb
jl
sbb
sbb
pop
mov
out
xchg
bound
dec
addr16
pop
cmp
shlb
arpl
cmp
outsl
aam
imul
mov
adc
scas
mov
movsl
xchg
mov
mov
cmp
mov
ret
add
mov
inc
outsl
shl
pop
or
std
xchg
scas
mov
icebp
pop
mov
xchg
cwtl
pop
jno
xor
int3
sbb
push
or
mov
lock
mov
adc
mov
mov
sub
mov
mul
pop
and
xchg
push
adc
jle
cmp
adcb
and
adc
cmp
pushf
data16
cmp
addb
sti
notb
pop
cmp
mov
aaa
xchg
adc
and
cld
insl
adc
out
jo
ss
mov
push
add
xchg
popf
pop
dec
ficoml
std
cmp
movsl
pop
jne
add
xchg
cld
or
add
jns
je
dec
aad
cmp
mov
sub
in
adc
rolb
test
dec
xchg
mov
sub
clc
inc
cmp
xlat
mov
fmul
sbb
and
jnp
es
das
mov
cltd
das
xor
add
subb
ds
sub
sbb
mov
shr
lret
adc
dec
or
adc
loop
cmp
cltd
call
imul
inc
xchg
test
lock
popf
aad
push
sbb
jne
loope
lods
and
mov
push
inc
xor
lock
fcom
xchg
jmp
fsubrs
bound
sub
xor
sub
or
fcomps
test
mov
inc
push
push
shll
iret
push
xchg
pop
stos
fdivrl
adc
aaa
dec
push
ja
ss
sbb
out
fldl
andb
in
stos
daa
mov
dec
mov
push
outsb
jecxz
sbbb
imull
int
cli
sbb
xchg
ret
cli
mov
cwtl
or
fwait
mov
xchg
imul
xor
dec
push
lods
cmovo
mov
mov
mov
mov
adc
fstpt
ret
push
push
ds
push
adc
mov
inc
pop
sub
and
fildl
push
xor
adc
idivb
add
cmp
pop
sub
mov
sub
sbb
dec
xor
outsb
mov
sbb
dec
fsubs
iret
mov
repz
sbb
mov
sti
cmpsb
cltd
mov
xor
sahf
aaa
adc
push
push
lea
mov
icebp
lods
fucomip
sub
loopne
enter
and
xchg
push
fnsetpm(287
nop
cld
xor
dec
shrl
mov
lods
jb
xchg
xchg
int
ret
sti
dec
mov
cmp
frstor
test
pop
out
sub
or
in
pop
repnz
dec
clc
cmp
daa
lds
pop
cs
jg
fisubs
mov
push
adc
mov
push
push
aam
into
cmpsl
mov
sub
mov
sub
jo
pop
mov
jnp
and
inc
inc
xchg
and
add
aad
out
fs
pop
inc
and
pop
push
dec
aam
push
movsb
fwait
or
pop
test
leave
sarl
push
fistpll
mov
daa
lret
lret
cmp
mov
in
ds
bound
stos
aad
aam
xor
mov
les
add
adc
xchg
xorb
pop
rcrl
xchg
das
sub
or
arpl
or
push
sbb
into
test
les
jle
bswap
add
std
dec
mov
mov
test
mov
or
dec
cwtl
lods
int
push
push
dec
sarb
mov
ds
mov
xlat
lea
outsl
jg
mov
pop
push
cmp
sub
rolb
sbb
mov
movsb
insb
push
test
fisubrs
ret
cmp
xlat
fwait
add
lret
xchg
cmpsb
add
inc
cmp
mov
fs
mov
push
int3
lods
inc
and
scas
dec
insl
xchg
dec
pop
test
outsl
js
sbb
xor
dec
aaa
lret
ret
push
mov
xor
xor
dec
or
mov
lods
test
jbe
pop
sbb
pop
orl
push
fistps
add
mov
cltd
or
xorb
into
cmp
enter
mov
push
mov
cwtl
dec
out
es
gs
dec
lahf
xor
scas
adc
fisttpll
dec
mov
pop
dec
jne
jbe
imul
dec
sbbl
mov
mov
mov
push
imul
std
inc
and
jb
cld
cli
aaa
xchg
pop
lds
imul
mov
add
jo
push
ss
mov
movsl
cs
shll
ret
mov
cltd
stc
push
test
add
pop
fnstsw
inc
dec
lock
aad
faddl
stc
repnz
and
nop
adc
fwait
ret
push
nop
repnz
icebp
outsl
pop
popa
inc
aad
inc
mov
push
add
in
popa
gs
inc
inc
dec
in
imull
clc
in
xor
xor
loopne
roll
std
dec
or
xor
mov
fiadds
in
and
cwtl
lret
outsb
sub
mov
push
jno
sub
sub
lock
add
inc
lret
mov
mov
aad
fsubr
lods
sbb
mov
add
divb
xor
leave
fsubs
xorb
shll
add
test
sub
sbb
jp
scas
mov
outsb
ss
jo
dec
outsb
popa
test
jno
jp
mov
pop
or
scas
imul
and
movsl
sub
fsubs
inc
push
pop
cmp
cmp
add
inc
adc
out
cmp
movsl
inc
shrb
icebp
std
arpl
aad
adc
mov
jmp
pop
xchg
xchg
mov
inc
inc
mov
pop
in
mov
jne
orl
jecxz
or
repz
stos
push
daa
movsb
xor
mov
ror
push
movsl
mov
mov
mov
fstp
movsb
fistps
xchg
adc
push
into
inc
imul
sbb
xor
int
fsts
push
leave
inc
std
fucomi
mov
pop
jae
fs
lret
jp
xchg
test
or
pop
imul
les
jl
jns
stos
push
dec
ja
or
ds
mov
push
xchg
loop
add
mov
inc
dec
pop
sub
inc
pushf
fildll
pusha
sub
xchg
mov
mov
cli
cld
out
movsl
sbb
rcrb
movsl
cmp
xchg
inc
mov
xor
call
nop
les
add
adc
aam
leave
mov
scas
clc
xor
mov
mov
mov
cmp
jne
shll
push
mov
xchg
mov
dec
mov
fs
pushf
sub
add
rclb
sub
sub
jge
gs
and
loope
aam
pop
xor
daa
enter
or
dec
mov
inc
repnz
push
mov
data16
repnz
cmp
inc
pop
push
lods
mov
jo
pop
ja
out
push
push
fisubl
xchg
dec
leave
stc
popf
mov
xchg
out
arpl
std
mov
inc
mov
xor
adc
fbstp
xor
jle
es
test
push
lods
or
mov
push
cmpsb
dec
inc
push
ficoms
mov
xor
cli
push
out
fimull
sub
je
out
in
jg
or
cmp
and
sbb
repz
add
dec
inc
inc
lahf
out
push
test
fisubrs
cmpsl
int
pop
das
leave
dec
mov
aam
push
decb
cmp
lea
popa
inc
sbb
aas
and
imull
sub
adc
inc
mov
inc
adc
fmulp
and
xchg
dec
add
mov
xchg
stc
popf
popa
scas
ja
cmpsb
int3
lea
push
fdivl
add
mov
sub
ret
lds
jb
nop
ljmp
les
or
ljmp
jle
aad
pop
imul
out
xchg
push
xor
mov
lahf
cmp
push
jp
je
push
leave
repz
sti
inc
aad
xchg
icebp
mov
sub
shrl
insl
or
addr16
and
sub
sub
adc
shlb
push
jne
or
mov
mov
mov
sub
rorb
cmp
stos
push
test
mov
adc
add
cmp
stc
outsl
jecxz
xlat
inc
int
and
adc
outsb
mov
xor
sub
push
jbe
inc
pop
pop
or
inc
clc
and
in
lcall
add
push
pop
sub
mov
push
jl
scas
sbb
lds
sbb
inc
fldt
lods
jbe
outsl
pop
xchg
nop
int3
enter
sub
mov
test
aas
mov
pop
gs
jecxz
cmp
inc
cmc
xor
lret
push
popa
gs
stos
sarl
loop
jg
cld
mov
fsts
sti
and
mov
call
xor
xlat
dec
cmp
mov
fs
mov
lahf
mov
ret
cmp
and
lahf
sub
push
mov
jp
mov
mov
push
jmp
aad
sub
inc
jbe
out
or
xor
push
stos
lea
and
mov
fdivs
or
imul
clc
or
and
xchg
add
enter
ja
mov
fldt
inc
jle
sbb
mov
roll
adc
addr16
dec
ret
gs
fiadds
inc
push
adc
in
inc
cmp
adc
pop
sub
outsb
mov
add
xor
cltd
test
xor
rcrl
pop
and
scas
mov
mov
pop
pop
pop
sub
enter
int
inc
pop
sub
stos
jge
sbb
hlt
jecxz
in
ret
or
pop
inc
add
push
lret
and
mov
pop
popl
jge
cmp
mov
pop
mov
pushf
dec
test
xlat
sub
bound
pop
xor
int
cmpsl
mov
dec
mov
dec
add
add
test
mov
ja
pop
leavew
es
fldl
cmpsl
push
mov
outsb
push
mov
lock
js
mov
mov
and
mov
rol
sbb
mov
sbb
or
aaa
enter
mov
jne
and
in
out
push
push
pop
pop
std
mov
xchg
lods
mov
movsb
lock
or
xchg
add
jecxz
xchg
mov
and
mul
clc
sbb
cmp
mov
xchg
add
es
stos
dec
dec
sbb
jg
sub
mov
sbb
xchg
dec
fdivl
mov
rcl
movsb
imul
fiaddl
test
call
mov
loope
xchg
pop
mov
das
mov
ljmp
test
loop
mov
inc
push
cmp
sbb
and
enter
inc
mov
or
push
icebp
icebp
cli
cs
imull
popf
ss
mov
xchg
inc
or
dec
fstpl
or
data16
pop
fsubp
pushf
data16
or
cmpsl
pop
and
inc
push
mov
cwtl
mov
jl
or
cmpsl
xchg
incl
daa
mov
and
fistps
outsb
jg
lds
sub
xor
xor
fwait
aam
cmpsb
or
fwait
xor
jb
fldt
and
jle
fs
hlt
cmp
push
push
jnp
or
mov
fbstp
insl
sub
or
and
mov
je
pop
popl
push
add
aam
js
jbe
push
insl
cmp
xorb
mov
mov
call
adc
lock
idivb
outsl
push
or
mov
mov
stc
pushf
jbe
cmpsb
push
repnz
mov
mov
jns
ret
xchg
mov
sub
mov
fldt
xor
cmp
aad
adc
jecxz
jmp
scas
dec
testl
push
into
mov
mov
fiaddl
sub
adc
rcl
push
into
loop
ds
repnz
xchg
fadds
xor
clc
inc
sub
test
into
xor
ret
cmpsb
mov
jo
inc
xor
push
and
aad
push
pusha
jecxz
mov
jne
jg
ljmp
int
sbb
cmovnp
sarl
cmp
cmp
cmpsl
cld
lock
lret
and
bound
outsl
and
fidivrs
repnz
mov
js
scas
fmuls
mov
and
shll
cmpsb
adc
ja
pop
out
xchg
jnp
insb
aaa
add
jo
loope
push
push
gs
mov
faddl
dec
add
das
mov
fsubs
xchg
jg
xor
cltd
pushf
inc
fnstenv
mov
andb
push
push
and
xchg
mov
inc
cmp
fisttps
jae
pop
ss
push
out
xchg
addr16
mov
inc
inc
xor
xchg
cmp
shll
cmpsb
mov
in
stos
mov
sub
arpl
pop
cs
stos
lods
fcompl
cld
or
mov
enter
cli
mov
fisttpl
add
inc
scas
lods
jne
nop
pushf
leave
mov
push
add
outsb
ret
ret
popf
dec
out
add
adc
or
cmp
repnz
and
insl
push
gs
inc
repnz
pop
mov
imul
or
les
and
xchg
in
dec
push
pop
test
adc
cmp
adc
data16
addl
jge
insb
pop
sub
in
in
loop
dec
xchg
out
mov
insl
popa
out
idivb
testl
pop
add
out
add
sbb
xchg
addl
mov
lods
jo
xor
mov
in
jl
mov
dec
jnp
es
stos
in
sbb
sbb
cmp
sarb
mov
int3
dec
mov
sahf
add
cmp
jmp
cmp
add
pop
sub
xor
ja
push
xor
daa
ljmp
jg
lcall
jle
or
xchg
fwait
pop
or
xchg
mov
es
pop
ja
pop
jmp
mov
pop
mov
sbb
xor
jp
cmp
pop
add
xlat
push
bound
jns
jl
loop
push
pop
mov
lock
jmp
subb
lcall
sub
mov
and
ja
in
mov
scas
ret
add
bound
fcompl
cmp
or
jge
dec
cmpl
lock
in
pop
push
fiadds
test
sub
sub
push
into
in
mov
frstor
mov
xchg
dec
push
adc
lret
nop
pop
and
sbbb
dec
ds
shll
js
imul
adc
push
pop
les
dec
xor
xor
sub
popa
pop
ret
test
adc
nop
sub
sahf
lock
mov
dec
xchg
cmp
push
mov
mov
dec
insb
jmp
iret
hlt
divl
outsl
and
mov
jmp
rcrb
cmpsl
jle
sbbl
das
dec
mov
lahf
xlat
loope
call
mov
fcomps
mov
xchg
loope
xor
sahf
xchg
ror
fwait
mov
adc
and
jb
scas
stos
push
pop
imulb
jbe
dec
mov
push
push
mov
mov
out
inc
arpl
push
out
push
adc
lods
out
test
sbb
or
popa
call
sub
iret
lea
cltd
ds
pop
add
cmp
std
pop
adc
ljmp
add
pop
lret
cli
scas
outsb
xor
mov
lea
fmul
ljmp
pop
xor
mov
popf
test
mov
adc
sub
daa
out
or
add
stos
lock
movsl
mov
or
fisttpll
mov
ret
stos
cwtl
add
cmp
iret
sub
andl
pop
cmpsb
movsb
test
xorb
ret
xchg
jne
loope
test
fiadds
push
mov
lock
shrl
dec
outsb
mov
lret
out
hlt
xchg
mov
adc
nop
pop
orl
push
jp
pop
jb
mov
out
testb
insl
add
cmp
imul
popa
jp
rorl
sbb
add
and
or
mov
dec
repz
addr16
and
test
popf
mov
push
pusha
jge
push
leave
push
and
movsb
jae,pt
ds
fidivrl
outsl
cmp
idivb
ss
dec
pop
mov
outsl
xor
in
xchg
dec
loop
mov
cmp
fistpll
xchg
shl
sahf
repz
call
adc
jne
jo
mov
pop
pop
sar
inc
btr
incb
pusha
jl
dec
dec
pop
je
or
adc
call
sub
into
ss
pop
repz
push
pusha
inc
xchg
sbb
fadd
xor
sarb
addr16
add
test
imul
rolb
ds
and
mov
daa
inc
dec
add
push
jne
fsts
daa
sbbl
aaa
mov
ret
pop
mov
icebp
pop
mov
das
xor
lcall
pop
lods
sub
loope
sar
hlt
outsb
push
push
push
jmp
push
or
mov
aad
inc
in
add
sub
fsts
mov
mov
leave
jo,pt
mov
mov
inc
xchg
cmc
xchg
pop
adc
inc
imul
pop
and
xchg
mov
or
push
cmp
mov
fsubl
adc
inc
imulb
imul
js
jnp
sti
out
ds
fcoms
fadds
in
pop
dec
push
ss
cmp
pop
ljmp
jns
sbb
pop
ror
push
cmp
lcall
popf
in
out
inc
rolb
aaa
sahf
jb
in
dec
xchg
push
jae
pop
or
insb
rclb
repz
ficoml
lcall
mov
sbb
jmp
dec
inc
pop
adc
rol
and
call
nop
arpl
pop
push
cmp
icebp
sub
test
jp
mov
push
mov
lods
mov
or
mov
jbe
push
les
in
or
mov
pop
test
push
push
mov
pop
mov
shl
xchg
jns
call
pop
xor
push
gs
cmp
jb
arpl
and
add
inc
outsl
out
test
inc
int
xchg
fdivl
cmc
and
add
add
xchg
add
add
std
add
add
inc
add
and
add
add
add
adc
out
ljmp
push
js
add
and
push
fnstcw
stos
xchg
push
test
stos
lods
stos
jb
push
movsl
imul
dec
pop
push
int
scas
aaa
xor
test
out
jecxz
data16
fildll
adc
or
fcmovnbe
ret
push
movsb
jbe
inc
scas
cld
mov
test
adc
out
imul
cwtl
cmp
and
mov
xchg
out
lahf
sbb
pop
jne
cmc
cmp
sbbb
mov
notb
or
add
mov
ret
push
dec
mov
cmc
enter
sbb
inc
pop
rorl
mov
loope
ljmp
cli
jge
cmp
scas
popf
lret
sub
pop
and
stos
cmp
dec
add
cmp
inc
pop
or
xor
push
mov
and
lcall
int3
lcall
aas
jae
nop
cltd
lcall
in
adc
fcoml
mov
stos
mov
xchg
cmp
or
and
repnz
mov
stos
jge
lahf
xor
mov
js
sbb
test
fbld
push
daa
daa
fiaddl
out
aas
pop
adc
stc
or
imul
push
add
xchg
outsb
test
sbb
cmp
sbb
dec
jns
or
and
out
pushf
adc
push
ja
cmc
loopne
jge
dec
and
and
les
and
sub
push
gs
jp
fdiv
pop
movsl
or
mov
add
push
xchg
add
fdivr
xor
jecxz
lock
stos
mov
adc
jns
xchg
addr16
or
inc
and
test
mov
ljmp
sbb
sub
in
mov
dec
incl
mov
sub
jb
fstp
jo
insl
dec
arpl
shl
call
gs
aad
add
fisubs
out
jne
pusha
dec
jge
shll
and
xor
sub
or
and
sub
addr16
jge
mov
das
fnstcw
adc
sbbb
add
push
push
mov
xor
xchg
inc
inc
out
repz
sbb
icebp
pop
addr16
ja
jle
jge
push
xor
lds
xchg
xchg
push
movsb
pushf
test
mov
dec
lcall
mov
fildl
test
ficomps
clc
orl
daa
incl
push
fldl
fcomps
and
mulb
adc
fs
jo
push
movsl
cli
jg
mov
out
rolb
xchg
out
or
out
orl
jl
pop
fidivrs
fistpl
add
cmp
mov
xchg
sub
dec
pop
ret
loope
pop
cs
in
or
lods
cmpsl
rcl
cs
jge
cld
mov
not
push
popf
xor
mov
cli
xchg
scas
jg
push
inc
adc
sbb
sbb
lea
ret
arpl
cmp
adc
inc
xchg
hlt
mov
jae
ja
cmp
sahf
dec
jnp
add
scas
nop
movsb
and
dec
icebp
add
leave
lods
jle
dec
int3
jne
hlt
mov
arpl
xlat
inc
or
adc
mov
testl
sarb
xor
lods
mov
test
mov
scas
and
jne
or
iret
push
cld
jbe
or
imul
xchg
or
pop
or
xchg
repnz
call
inc
mov
pusha
outsl
mov
jmp
jl
sbb
jmp
in
or
loopne
mov
mov
inc
xor
and
jb
cmp
inc
mov
and
lret
and
inc
lds
lret
lret
loope
cmpb
push
testl
sti
aam
cmp
dec
or
and
jb
or
inc
nop
adc
fldcw
insl
movsb
rcrl
jp
pop
cmc
inc
arpl
dec
mov
cltd
xor
inc
pusha
sub
ret
rcrb
mov
xchg
mov
lds
cli
popa
xor
dec
pop
and
xchg
mov
push
rol
push
adc
shr
fstl
mov
xchg
jnp
lret
jp
lcall
sub
mov
inc
push
pop
stos
daa
loope
popf
stos
call
xlat
mov
je
mov
decl
into
cwtl
inc
pop
jmp
jns
push
mov
xor
cmp
ret
mov
aaa
xchg
outsl
fistl
mov
imul
pop
fdivrp
repnz
dec
xor
leave
xchg
add
mov
fs
mov
cmp
and
fucom
test
sti
lods
add
push
dec
pop
test
fistps
adc
inc
fdivrs
pop
pusha
pop
ss
lret
sti
mov
ja
stc
and
mov
mov
cwtl
pop
pop
pop
aad
mov
ss
and
mov
pop
jno
sub
xchg
daa
insl
shll
outsl
daa
or
shlb
xor
jo
je
in
fmuls
inc
fnsave
mov
adc
push
and
mov
xchg
xlat
cld
roll
and
mull
cld
out
cwtl
aaa
shr
sbb
cmp
xlat
cwtl
mov
push
idiv
dec
cwtl
jne
leave
xor
enter
jns
cmc
cmp
cs
inc
scas
sti
jbe
insb
iret
movsl
jne
or
popa
mov
mov
xchg
insl
sub
xlat
mov
add
mov
sbbb
scas
ss
aaa
push
jmp
ljmp
data16
pusha
jmp
inc
stos
arpl
xchg
cmpb
ljmp
sub
popf
adc
cmp
inc
je
test
fidivl
lret
sbb
mov
and
jle
and
xor
test
ret
divb
cli
xor
pop
adc
lret
sbb
dec
sub
mov
and
sbb
add
xchg
mov
mov
jp
sub
pop
inc
int3
xchg
out
daa
fwait
inc
pop
fadds
shrl
andl
jecxz
sub
sbb
mov
clc
in
jge
push
data16
popl
pop
repz
icebp
subb
jb
cmp
std
jno
sbb
mov
iret
cmp
xor
mov
sub
dec
aaa
lock
cld
mov
std
pop
popf
dec
dec
aam
sbb
jmp
btr
sbb
adc
push
repnz
adc
sti
mov
cmp
mov
and
pop
enter
and
jl
lahf
inc
sbb
icebp
imul
cli
clc
filds
mov
in
arpl
daa
push
add
jno
adc
fwait
add
inc
xchg
push
and
mov
add
mov
lcall
in
divb
bound
xor
jne
out
ffreep
fwait
inc
mov
adc
xor
in
out
popa
pop
mov
fistpll
inc
xorl
pop
fiaddl
fs
cmp
js
push
adc
pop
fwait
int3
push
popa
sbb
or
jl
mov
adc
dec
pop
insb
mov
and
mov
call
gs
cli
enter
mov
and
xor
scas
repnz
cli
jg
mov
jnp
cmp
inc
pop
jo
add
bound
sbb
xlat
sarl
aam
dec
lock
adc
es
pop
roll
xchg
cmp
jp
mov
shrb
icebp
pop
mov
call
sub
std
push
addr16
cs
std
stos
out
scas
xor
call
inc
ret
jnp
in
push
imul
arpl
outsl
in
dec
or
negl
aas
add
mov
inc
xchg
hlt
and
lcall
rcrb
inc
jne
pop
xchg
inc
lret
cmc
push
ss
xor
sti
jge
xor
xor
movsl
mov
enter
push
mov
sbb
ret
sbb
insl
jecxz
fwait
repz
xor
fxsave
adc
pop
dec
repnz
pop
in
sti
and
mov
aaa
xor
clc
ret
lret
cltd
inc
test
push
loop
sbb
and
std
inc
sahf
inc
jb
jge
repnz
jecxz
pop
repnz
mov
add
pcmpeqd
add
mov
fstl
clc
dec
in
lret
lock
cs
incb
test
xchg
push
dec
scas
push
pop
ret
sbb
mov
sub
hlt
jle
scas
fisttpll
mov
outsl
lods
scas
movq
fwait
dec
fnsave
dec
aaa
shr
aam
in
daa
dec
lock
mov
xor
inc
jo
fldenv
test
push
sub
add
fiaddl
adc
iret
push
adc
and
in
add
push
popa
jno
adcl
aam
push
jg
xor
lods
sahf
sbb
dec
or
insb
loope
clc
jb
xor
ja
jle
pop
mov
xchg
leave
negl
or
adc
pop
mov
scas
mov
sub
push
and
push
mull
cwtl
es
dec
pop
xchg
sbb
sti
mov
je
mov
mov
lret
out
daa
flds
loop
or
cmp
js
inc
or
addl
mov
shlb
add
int
inc
xchg
fstpl
repz
inc
sbb
cld
mov
lods
data16
sbbb
dec
repz
xchg
push
call
fistpl
aam
aaa
xor
inc
inc
jns
jg
push
test
lods
jg
adc
btr
push
dec
add
lahf
cli
mov
push
xlat
cmp
lret
sbb
jae
cmp
pop
mov
int
int3
and
lahf
add
sti
dec
adc
cmpsl
jno
les
scas
sbb
mov
push
adc
add
fstps
sbb
pop
dec
addb
stos
bound
jecxz
add
inc
sub
iret
adc
je
mov
popf
ljmp
dec
ja
jae
pop
repnz
lock
icebp
mov
loopne
inc
icebp
inc
mov
push
cli
cmc
push
test
hlt
insl
scas
mov
outsb
out
loop
pop
sahf
sub
fdivrl
and
aas
sub
pop
push
pop
xlat
add
mov
add
mov
jbe
xchg
js
sbb
mov
lock
ffreep
sub
inc
xchg
sub
pop
xchg
sbb
add
mov
inc
stos
xorl
mov
fs
lock
adc
fs
fisubrl
js
inc
popf
push
sub
cmp
jns
push
dec
cmpsl
in
cltd
and
dec
inc
add
jae
push
mov
out
fsts
mov
insl
stos
stos
leave
sbb
test
lret
sar
cli
jmp
fcmovnu
loope
push
cmp
sbb
dec
add
add
fstpt
test
pop
and
jne
jp
out
push
and
hlt
cmp
push
lret
ficompl
or
orb
lds
xor
push
push
mov
adc
adc
arpl
popa
jno
cli
outsl
or
mov
push
cmpsb
xchg
int3
xchg
xchg
ret
mov
mov
pop
pop
xchg
mov
cmp
mov
ret
cmp
sahf
push
aaa
fcmovb
inc
sub
enter
pop
mov
xchg
push
jno
xchg
in
cs
pop
das
lea
sti
aas
rolb
pop
stos
inc
jne
inc
adc
pop
or
xorl
repnz
mov
jle
ljmp
insl
mov
iret
xchg
jg
mov
imul
daa
add
mov
pop
cs
popa
cmp
fsubrs
sbb
test
xchg
daa
ds
or
bound
sbb
mov
add
nop
cmp
or
addr16
jne
inc
mov
in
pop
adc
je
dec
xchg
call
mov
lahf
pop
sub
and
je
inc
bound
in
das
dec
add
xchg
or
sub
cmpsb
adc
aam
rcrb
jae
shll
scas
iret
inc
popf
adc
icebp
nop
arpl
xor
push
jmp
cs
rclb
cld
cli
sbb
fldcw
inc
adc
sbb
pop
int
mov
out
xchg
loop
sahf
pop
cmp
push
pop
out
gs
inc
ja
lods
clc
push
das
and
lcall
inc
and
mov
stos
fcomp
dec
mov
faddl
je
xlat
loopne
test
jmp
push
in
mov
add
imul
popf
pop
shlb
mov
fisubrs
lods
dec
test
sub
mov
pop
xchg
arpl
lahf
push
mov
in
mov
mov
dec
sbb
je
inc
xor
dec
lods
xchg
out
mov
dec
sub
imull
arpl
int3
cwtl
clc
in
iret
test
adc
adc
jge
je
adc
stos
sbb
mov
addb
fwait
push
mov
fnstcw
mov
nop
adc
adc
sub
jle
sbb
sub
cmp
or
in
rcrl
es
jno
fisttpll
lahf
les
cmp
and
mov
jno
loopne
pop
das
cltd
inc
mov
lods
test
lods
and
pop
mov
cld
jns
ror
mov
clc
mov
in
pusha
fdivrs
sub
sbb
scas
loope
pushf
das
or
inc
subb
xor
stos
pop
imull
jecxz
mov
aas
and
jl
inc
andl
pop
pop
xchg
xchg
fisttpl
sbb
addb
fsub
lds
ss
out
cld
cmpb
test
dec
cmp
and
jecxz
jle
sub
pop
data16
and
in
test
mov
fisubrl
repnz
ds
lret
lea
inc
call
push
outsl
outsl
adc
imul
sub
dec
push
ret
cmp
insb
jmp
jnp
xor
cmp
cld
orl
pop
aad
dec
pusha
popa
lds
movsb
or
lods
lcall
enter
fiaddl
jne
pop
or
sub
xchg
jg
aaa
xor
imul
fisttps
dec
in
mov
and
aas
jecxz
or
mov
and
adc
or
dec
ret
xchg
je
popf
pmulhuw
test
sbb
dec
adc
sbb
push
repz
and
inc
repnz
loop
inc
mov
mov
cmp
mov
daa
insl
lock
data16
dec
or
jmp
inc
mov
xlat
dec
inc
mov
xchg
les
fnstcw
stos
sub
inc
xlat
add
adcl
movsb
loop
arpl
mov
cli
mov
push
sub
inc
dec
dec
push
dec
into
rcr
jne
ret
and
lret
das
clc
insl
pop
or
out
sub
fistpl
sub
add
ud1
mov
xor
and
and
inc
sub
mov
leave
add
es
mov
addb
mov
idivb
paddsw
loopne
sbb
mov
jmp
and
fwait
leave
cld
ret
pop
in
cld
sti
cltd
mov
fs
push
stc
mov
test
outsb
mov
cmp
aam
aam
cmp
cmp
das
mov
into
mov
repz
stc
mov
and
call
leave
mov
popf
test
pusha
sarb
sbb
movsb
mov
xor
aaa
rcrl
sub
push
ja
fmulp
fxch
scas
out
test
dec
mov
mov
jne
push
mov
popa
jmp
mov
mov
out
lcall
imul
test
add
cmp
rcrl
ret
es
repz
cmp
add
jmp
jecxz
in
adc
push
sarl
sub
cmpsb
sarb
stos
js
ret
imul
xor
pop
pop
sub
or
sub
insb
fs
daa
add
jl
inc
lea
mov
lcall
inc
test
pushf
xorl
dec
mov
bswap
fwait
mov
adcl
out
adc
out
mov
lods
addr16
call
pop
bound
xor
imul
push
fsubs
sbb
mov
pop
xor
fisubl
in
cld
inc
mov
xchg
jl
and
ljmp
push
dec
stc
pusha
ljmp
jge
lods
xor
pop
or
fldenv
add
push
mov
movsl
add
xor
adc
mov
add
lret
sub
push
xor
mov
push
pusha
push
push
xchg
inc
xchg
push
or
adc
add
xor
xchg
or
les
int
mov
jg
fstp
es
xor
fmuls
push
jmp
mov
scas
popf
sub
sub
or
add
gs
mov
fwait
mov
cltd
ror
jge
enter
push
mov
dec
sti
sub
out
je
out
in
xchg
dec
add
imul
rcll
shll
dec
nop
repnz
jnp
mov
lods
repnz
fimull
cmp
or
push
push
mov
jnp
mov
shll
xor
das
or
cs
jae
sbb
xchg
push
dec
repnz
jmp
sbb
shll
aas
cltd
ficoml
adc
test
es
lret
fcomi
inc
loopne
aam
xor
push
inc
int3
or
cmpsb
or
gs
mov
cwtl
addl
cwtl
xor
inc
pop
dec
arpl
sahf
lret
fwait
sbb
fimull
jp
xchg
into
daa
mov
xor
and
out
or
adc
out
outsl
ror
jns
pop
push
rclb
xor
loope
fidivl
cmp
xor
test
sbb
adc
jg
pop
xor
jne
xchg
cli
lret
hlt
inc
dec
roll
mov
lahf
pushf
jle
xchg
andb
push
ds
push
dec
xchg
adc
stos
loop
mov
in
xchg
push
adc
adc
jge
cld
shr
inc
add
xor
inc
mov
add
mov
outsl
cmp
cmp
push
aam
sti
in
sbb
popf
bound
mov
inc
or
add
adcl
pop
pop
out
adc
mov
xor
mov
scas
push
repz
in
inc
mov
jo
jle
cmpsl
aas
aad
inc
arpl
gs
fs
mov
mov
arpl
dec
jg
add
lcall
sbb
lods
lods
ds
das
cmp
push
mull
cmp
push
jb
test
mov
test
test
inc
jp
fldt
call
popa
jmp
into
fistpl
test
popa
add
fcoms
ret
mov
js
or
pop
lock
or
data16
jg
adcb
jne
mov
jl
icebp
sbb
ss
push
orb
pop
lds
xor
ret
mov
jo
fwait
mov
ds
and
jnp
aam
mov
and
sbb
movsb
testb
outsl
sbb
popa
repnz
repz
xchg
or
ficomps
aam
shll
loop
and
rcrb
add
jg
daa
clc
mov
imul
add
cmp
xchg
std
pop
mov
fsubrp
cmp
jae
mov
pop
mov
jns
popf
out
dec
pop
xchg
xor
cmp
mov
test
popa
add
dec
addl
adc
pop
add
jnp
fldl
or
xor
ret
mov
mov
fdivs
in
ja
push
mov
jae
xorps
sar
js
inc
jecxz
int
cltd
and
or
adc
mov
inc
stos
add
cmp
or
add
outsb
iret
mov
jmp
mov
outsb
lret
movsb
jb
cmpsb
sarb
hlt
aad
jno
out
lock
mov
xchg
rorb
mov
push
sub
sub
clc
jmp
lret
or
dec
test
fildll
xor
scas
push
lea
ret
mov
sub
push
es
cmc
pop
movsb
dec
das
fcmovu
dec
popa
inc
and
sti
xchg
dec
mov
dec
cmp
jle
pop
sbb
int3
lea
dec
pop
out
and
test
mov
push
es
sbb
mov
mov
gs
sahf
fs
aas
and
xchg
imul
movsl
cmpsl
and
inc
clc
sha1rnds4
das
das
daa
or
aaa
mov
cmp
clc
int
push
jo
fmul
repnz
push
adc
sbb
into
lock
leave
mov
xor
add
pushf
xor
fwait
pop
sub
dec
sbb
int3
fwait
dec
sbbl
add
sbb
rorl
cmp
leave
out
lods
pop
push
sub
xchg
xchg
sub
mov
rol
ja
xlat
jnp
sbb
dec
popa
or
repnz
scas
and
movsb
cmpsl
sti
lea
xor
cs
aam
cmpsl
pop
add
sub
mov
jg
xchg
dec
icebp
outsl
sahf
out
test
jne
push
mov
dec
xlat
adc
std
xlat
push
push
and
mov
and
das
repz
scas
add
ficompl
mov
or
test
cmp
push
subb
nop
jle
cmp
aad
sub
push
ds
inc
out
aam
aam
sub
cld
jmp
jg
push
test
fldl
lods
in
xor
fwait
movsb
enter
scas
mov
dec
and
or
pushf
mov
push
pop
vpunpckhdq
test
pop
adc
inc
pop
shlb
loop
mov
into
dec
ret
jbe
cwtl
jo
push
mov
pop
inc
pop
and
std
ljmp
cmpsl
aam
mov
and
add
fwait
mov
fdiv
mov
lcall
test
decl
xchg
push
repnz
subl
jp
fstpl
loope
xor
or
pop
pop
pop
lea
outsb
cld
or
lea
gs
ret
mov
jecxz
test
adc
xchg
push
cmpsl
out
push
daa
push
rcl
inc
mov
outsb
repnz
out
leave
jecxz
fmul
in
fcoml
outsb
jg
or
dec
dec
cmp
int
loopne
pusha
cmp
lods
mov
pop
add
xchg
jg
rclb
push
inc
mov
in
cmp
call
jbe
mov
aam
add
pop
arpl
xorb
xor
repnz
lods
jae
cwtl
xchg
cwtl
mov
subl
push
sub
pusha
pop
mov
cmpsb
sbb
dec
dec
sub
push
inc
fs
out
cmpsb
xor
jo
stos
leave
inc
fwait
inc
fwait
ret
clc
or
fisubrl
ja
adc
out
sbb
dec
loopne
jns
fcmovnb
jmp
pop
stc
xor
sub
push
mov
jmp
mov
mov
or
andb
mov
jg
loopne
shll
cmp
das
mov
cwtl
insb
pop
call
sbb
jno
cld
mov
repz
inc
mov
pop
jg
into
fidivs
cs
push
int3
in
popf
xor
lret
jmp
bound
mov
jo
loope
addb
pop
cmpsl
mov
adc
xchg
nop
scas
pop
dec
testb
shll
or
test
xor
andl
call
push
mov
mov
stos
in
ret
add
push
push
cmp
xchg
movsl
push
adc
sbb
cwtl
sbb
into
lcall
into
xchg
jmp
pusha
or
push
inc
add
test
xchg
or
sub
pop
add
fiaddl
xchg
testb
xchg
jmp
rcrl
mov
dec
pop
mov
or
add
int3
pop
xchg
jnp
mov
sub
pop
xor
jbe
xchg
xchg
pop
loope
int
lret
in
fcomp
pop
sbb
push
push
push
push
cli
inc
mov
ss
lret
shl
lock
inc
xchg
test
mov
cli
je
scas
cld
movsl
mov
cmc
add
or
xchg
clc
pop
mov
lcall
test
or
hlt
pop
int3
ret
test
xlat
mov
test
loop
or
dec
roll
fstpl
adc
por
jo
dec
xchg
push
addr16
lock
mov
in
scas
in
lock
push
rcrb
or
push
jg
nop
cs
sahf
test
lcall
mov
mov
les
adc
xchg
jae
rclb
dec
gs
add
ds
lds
lret
sbb
add
int3
mov
dec
jbe
ror
lea
xchg
js
pop
push
add
jge
fstp
add
mov
pop
inc
push
mov
lahf
cmp
lods
add
js
into
into
pop
popf
xor
push
sbb
cs
sub
and
fisttps
sub
cs
mov
dec
lock
mov
lret
leave
imul
push
imul
mov
mov
mov
pop
jmp
push
adc
dec
jbe
xchg
and
inc
sub
xorl
xchg
dec
mov
mov
fnsave
lods
in
mov
push
push
mov
imul
jb
mov
jnp
aad
pop
or
stos
gs
sbb
inc
mov
mov
mov
repnz
pop
lods
and
icebp
das
jne
ret
cmp
add
ret
gs
fldenv
inc
aas
add
sbb
mov
mov
stos
inc
loop
insb
nop
lods
ljmp
inc
mov
lret
shlb
cmp
pusha
cmp
xlat
test
push
dec
or
out
pop
mov
cs
jmp
lods
imul
out
pop
lcall
mov
jge
jl
js
pusha
push
idiv
fs
jmp
pop
sbb
cmp
loopne
sahf
dec
imul
pop
sahf
pop
jg
cmpsl
inc
in
add
stos
pop
dec
mov
in
push
mov
adc
repnz
insb
push
pop
mov
adc
cmpsl
adc
and
adc
dec
out
out
pop
sbbl
xorb
xor
pop
fiaddl
jo
rcll
cmpl
addr16
icebp
xchg
lock
pop
ret
divl
push
jae
xchg
repnz
icebp
clc
bound
add
xor
cmp
scas
dec
jp
pop
push
sbb
subb
xor
outsb
mov
out
push
xor
in
sub
dec
cmp
jne
xor
add
mov
jp
jg
enter
jl
popa
inc
mov
jecxz
mov
and
gs
popw
push
jecxz
je
mov
int3
mov
loop
and
adc
lea
movsl
mov
dec
ljmp
arpl
call
sbb
fidivs
push
lahf
test
push
or
test
dec
mov
push
xchg
or
sub
xchg
add
jl
arpl
sahf
out
imul
add
and
popf
aaa
int
adc
daa
and
dec
popa
loopne
je
sub
xchg
subl
sub
mov
jl
adc
lcall
adcb
mov
int3
movsl
mov
add
ret
and
push
js
xchg
sti
lret
out
push
sbb
je
repnz
bound
push
and
data16
inc
pop
push
clc
mov
cmpsl
xchg
mov
gs
pop
insl
inc
xor
arpl
mov
xor
adc
imul
out
lahf
push
sbb
aas
mov
sub
mov
mov
push
fsubs
ficoml
rcrl
push
mov
jbe
in
add
psrlq
or
push
sbb
add
sbb
icebp
xor
inc
jns
lahf
in
out
dec
sbb
insl
rcrl
test
subl
mov
scas
sub
and
add
adc
xor
fst
dec
push
lret
push
inc
lock
xchg
movsl
jne
xlat
pop
push
xchg
push
jo
imul
data16
add
jg
test
test
iret
or
sub
or
inc
lock
and
cmp
or
stos
scas
pop
lock
pop
icebp
xchg
xchg
inc
xor
adc
bound
popa
shr
nop
test
xor
hlt
ljmp
rcl
mov
inc
push
mov
orps
inc
jle
dec
push
aaa
sbbl
iret
insb
psubusb
xchg
pushf
enter
in
cmp
xchg
jge
push
stos
ds
ret
aaa
out
vxorps
les
std
stc
movsl
pop
mov
inc
jbe
pop
gs
xchg
pop
mov
popf
jmp
add
xlat
add
push
cmpsl
loopne
aas
xchg
or
daa
xchg
mov
imul
out
sbb
adc
xchg
mov
pusha
in
xchg
repnz
xchg
shll
xchg
mov
sub
mov
mov
inc
out
and
sbb
pop
in
nop
fldt
pop
xchg
lret
push
popf
sub
xchg
and
add
cmp
jle
daa
nop
sahf
xchg
iret
out
inc
and
mov
jbe
add
int
dec
test
in
xchg
sub
not
idivl
enter
push
test
rcrl
adc
stc
icebp
xchg
shrl
push
xchg
pop
dec
lcall
push
push
sbb
jno
mov
xor
mov
jbe
mov
xchg
pop
frstor
adc
cli
and
cmp
loop
imul
fwait
lret
jp
pop
pusha
xor
lock
scas
dec
insb
dec
push
jns
imull
dec
cmp
or
aad
dec
inc
stos
fldln2
mov
enter
and
cmp
mov
mov
in
xchg
repz
in
sbb
aad
cmc
mov
lods
je
dec
dec
jno
and
sub
in
xchg
xor
leave
cld
out
xchg
or
fs
xchg
pop
cmp
dec
rcrl
xchg
sbb
push
fmuls
xor
mov
pop
mov
or
ja
mov
in
movb
pop
cmp
pop
and
or
and
rol
ss
add
adc
adc
scas
popf
scas
pop
mov
mov
xchg
sarb
push
das
cmp
jns
fnstenv
push
add
jge
sbb
ljmp
dec
lods
mov
addr16
cltd
pop
std
not
xlat
jmp
push
pop
gs
faddp
mov
adc
inc
adc
test
ds
mov
xchg
movsl
push
outsb
outsb
sub
je
hlt
out
movsb
lahf
mov
mov
xchg
jmp
repz
lcall
xor
xor
std
out
sbb
pop
repz
out
into
fdivl
mov
pop
stos
jl
int
hlt
add
or
mov
orb
cmc
push
sub
imul
subl
and
add
fildll
xor
mov
mov
mov
je
insb
leave
std
sub
pop
test
inc
dec
add
add
cltd
pop
and
andb
adc
fidivrs
xchg
popa
mov
addb
addr16
out
bound
mov
jecxz
push
jne
push
sub
and
jmp
jle
xchg
lret
cmpsb
pop
out
ljmp
cmpsl
hlt
mov
dec
js
int3
popf
repnz
mov
popa
xor
test
mov
sbbb
sub
cmp
iret
pusha
inc
mov
mov
sub
inc
popf
dec
nop
sahf
push
aad
movb
jbe
flds
imul
inc
mov
arpl
outsb
ds
or
repnz
ret
jecxz
mov
cmpl
ret
xor
or
lods
pop
loope
lods
fs
adc
mov
fwait
lret
int3
push
lods
xchg
inc
adc
mov
or
or
xor
mov
cmp
int
je
ja
adc
mov
mov
insb
push
cmc
lcall
in
mov
lds
sbbl
lds
adc
ljmp
push
mov
sbb
cmc
inc
pop
bound
into
lods
push
pop
aam
mov
inc
jns
xor
scas
and
faddl
outsl
cmp
clc
cmp
outsb
jnp
les
push
mov
lret
and
lcall
sub
mov
mov
popf
lcall
lcall
xlat
fbstp
sbb
add
test
lea
std
lods
out
or
push
scas
mov
rol
cld
daa
movsl
ret
jmp
int
pop
scas
mov
lcall
xchg
jne
cmp
cs
mov
mov
shll
push
decl
sahf
adcl
imul
insl
shl
mov
add
lcall
jg
mov
aad
call
sbb
inc
outsb
pop
mov
xlat
imul
insb
sub
insb
lcall
out
add
push
cwtl
pop
mov
fimuls
aas
ds
test
scas
dec
and
pop
xor
xor
arpl
test
loopne
xor
out
adc
fiaddl
inc
jb
iret
sbb
xchg
pop
and
test
dec
outsb
add
iret
cmp
out
movsl
jecxz
jnp
test
mov
ret
or
pop
jb
mov
mov
fs
movsb
pushf
daa
aam
push
daa
pushf
bound
xlat
mov
fwait
and
daa
sub
jne
sahf
dec
mov
cld
mov
loope
sub
ss
lahf
cltd
xor
rcrb
inc
icebp
mov
cmp
and
push
std
ljmp
jne
stc
lret
cld
mov
adc
mov
add
jp
sbb
xor
jns
sub
cmp
sbbl
xor
lods
loopne
mov
mov
nop
sub
cmpsl
movsl
xorl
cmp
inc
sub
iret
jmp
pop
out
pop
int
lods
movsl
into
mov
mov
sub
push
ss
push
hlt
insb
in
out
dec
adc
inc
cs
cmpsb
xor
popa
adc
add
xchg
shrl
jns
dec
inc
loopne
cs
sub
std
out
xchg
xor
xchg
ret
cmpsb
hlt
sbb
test
push
push
movsb
dec
enter
mov
jl
stos
sarl
stos
dec
pop
sbb
xchg
loop
xor
or
leave
push
adc
loop
les
pause
push
add
fbld
inc
inc
dec
and
shlb
sahf
mov
sarl
movsl
xchg
std
fwait
adc
imul
adc
pop
inc
call
ds
ret
nop
outsb
dec
push
outsl
lods
lcall
adc
cs
mov
cltd
lret
sarb
in
xor
adc
mov
jmp
inc
add
aad
pop
mov
pop
mov
cs
mov
call
dec
xor
icebp
inc
test
test
jno
or
mov
xor
inc
jle
or
dec
sub
ret
enter
lods
ret
lock
jbe
fidivs
push
pop
cs
ficomps
mov
mov
cs
aas
xchg
pusha
ret
repz
js
xor
xchg
add
add
jmp
sub
xor
lahf
mov
fs
dec
fcomps
or
xchg
dec
cmp
push
jb
xchg
lods
jmp
dec
sbbb
sysret
xor
mov
and
mov
xor
fs
ret
aaa
inc
cli
add
movsb
push
xchg
or
imul
or
test
ret
xchg
dec
mov
or
or
mov
pop
adc
jbe
fninit
push
cltd
jg
mov
fs
add
das
sub
sub
lock
insb
mov
fcompl
or
cld
inc
xchg
into
inc
jbe
cmc
test
or
jo
xchg
stc
mov
push
lea
adc
push
dec
sbb
rorb
mov
push
xor
jecxz
mov
cmp
cmc
cwtl
jmp
loop
dec
mov
xchg
mov
sub
xchg
mov
jp
frstor
xor
xor
ret
cs
jmp
and
stos
sub
jmp
dec
sbb
push
dec
mov
lret
in
lods
mov
jo
nop
xor
jg
mov
inc
std
ljmp
fistl
rolb
daa
adc
add
jmp
xlat
push
xrelease
outsb
in
jecxz
out
cs
filds
loope
mov
xchg
lods
mov
cmp
lret
xor
popf
sub
rcr
xchg
lds
push
add
repnz
popa
push
dec
lods
cmpsl
leave
inc
sbb
and
push
or
sbb
mov
sbb
push
push
mov
xor
or
cmp
sbb
loopne
in
jne
out
scas
sub
roll
add
adc
adc
push
push
mov
push
ret
out
ds
xchg
sarb
adc
lds
shll
adc
push
mov
pop
and
jmp
inc
or
shr
sub
mov
mov
or
pop
adc
mov
sar
ret
xchg
jp
aaa
mov
pop
inc
rorb
cwtl
lea
push
into
jmp
xor
mov
cwtl
daa
stos
addl
dec
sub
add
out
iret
loope
ja
out
mov
fimuls
les
int
mov
sti
push
imul
ficoms
scas
mov
mov
loope
lahf
push
mov
outsb
mov
cmp
sbb
sbb
and
shrb
shlb
sarb
push
vpmaddwd
test
data16
daa
in
popf
pop
cmpsb
call
jae
and
sub
addr16
test
inc
sub
imul
test
fcomp
fnsave
arpl
adc
pop
xlat
add
pop
faddl
inc
mov
sub
jne
ffree
lods
stc
sbb
xchg
adc
push
push
and
jmp
push
out
out
or
ds
dec
pop
imul
mov
in
add
dec
psubb
cmc
mov
adc
fldl
fisubs
and
xchg
cs
lock
into
xor
cmpsb
adc
mov
mov
mov
cltd
push
loopne
adc
jns
imul
mov
std
jb
ret
sub
mov
and
ficomps
dec
cmp
fdivr
mov
cmp
add
push
loop
dec
push
pop
mov
out
adc
xor
insb
js
out
mov
push
dec
pop
leave
movsb
loopne
jge
xchg
ljmp
xchg
out
inc
subl
fstl
mov
mov
mov
cmpsb
mov
jecxz
push
xor
out
ret
adc
push
jge
inc
push
push
call
xor
dec
enter
lret
pop
jno
sbb
mov
cmp
mov
stc
mulb
enter
xchg
ljmp
add
pop
cmpsb
cmpsb
into
or
mov
adc
sub
shrb
icebp
pop
std
lods
jne
scas
jno
call
sbb
mov
push
movsl
xorl
mov
mov
or
pop
push
out
mov
mov
insb
xchg
cmp
sub
inc
mov
sbb
das
pop
add
out
icebp
dec
mov
dec
mov
flds
loopne
mov
and
adc
les
loope
add
mov
es
pop
xchg
test
jge
aas
jae
add
leave
ja
insb
leave
cltd
mov
and
scas
std
scas
cli
xchg
ret
div
mov
sub
or
sub
adc
jo
hlt
inc
mov
cmp
lahf
pop
push
pop
inc
adcb
or
cmp
xor
movsl
fsubrl
sub
dec
lods
add
test
shr
jns
stc
and
or
xchg
shrl
inc
xchg
push
in
mov
xchg
aam
in
add
pushf
shll
je
dec
adc
add
xchg
xor
push
addl
xor
loop
mov
inc
cs
fdivl
push
test
xchg
adc
sbb
sti
sbb
int
mov
sub
mov
lods
push
mov
xchg
cmp
clc
andb
jl
dec
and
aam
add
lds
xlat
add
jle
mov
lock
cmp
iret
scas
loop
loopne
adc
jno
mov
dec
adc
mov
subb
mov
or
jge
call
or
scas
jae
cmp
fistpll
shlb
xchg
jmp
lret
rorb
ret
cmp
gs
or
xor
mov
movb
rolb
and
out
push
das
cmp
xchg
jl
subb
aad
fwait
xchg
inc
cld
in
sub
cltd
mov
popf
rcl
cmp
loope
add
sub
push
fists
or
negb
push
shl
dec
dec
sub
adc
add
push
add
push
adc
mov
or
dec
adc
cmpl
les
stc
stos
mov
imul
pop
pop
lds
xchg
gs
push
push
insl
lds
pop
hlt
je
fadds
jns
sub
mov
stos
loope
pop
jg
mov
in
mov
cwtl
jl
or
pop
jno
mov
sub
xchg
and
fsubr
lods
cltd
mov
andb
add
and
out
sbb
mov
push
push
and
mov
scas
loop
adcb
addr16
enter
sbb
sbb
iret
roll
repnz
add
jns
cmp
add
xchg
jbe
pushf
les
js
repnz
mov
scas
arpl
adc
cmp
jno
push
pop
cmpsl
mov
in
mov
mov
xchg
imul
mov
ficoms
add
out
icebp
pop
jne
fdivs
and
mov
xor
je
mov
push
es
cs
adc
ss
inc
cmp
orb
mov
jl
inc
pop
jge
loop,pt
imull
pop
adc
rorb
dec
dec
push
into
cmp
lds
mov
mov
lods
dec
addb
mov
sbb
popa
psubd
ja
popf
stos
insb
jmp
popa
dec
sub
cwtl
enter
jmpw
fdivrs
jno
lods
jmp
cli
mov
pop
test
or
fdivp
stc
loope
movsb
lahf
mov
das
pop
icebp
or
cltd
mov
stos
add
lret
dec
les
cmp
add
scas
les
aaa
das
subb
cwtl
je
int3
inc
dec
inc
or
jmp
inc
cltd
add
push
out
mov
in
outsl
or
adc
lods
loopne
inc
xor
xchg
inc
mov
sub
push
dec
or
pusha
push
arpl
jo
insl
add
push
xchg
out
shrb
inc
mov
add
inc
orl
ret
pop
aaa
xchg
adc
cmp
xchg
dec
push
xchg
in
sub
loope
aam
xchg
out
out
mov
mov
fabs
mov
cmp
push
push
xchg
and
inc
lret
cmp
mov
fistpl
xchg
into
nop
rcrl
dec
mov
or
ret
jge
fnstsw
sbb
les
xor
kmovb
vprotb
addb
nop
aas
scas
in
sbb
andl
cmpsl
add
mov
jecxz
int
sbb
dec
add
dec
lahf
cmc
mov
or
fstl
cmp
mov
js
inc
push
popf
leave
jmp
in
mov
push
iret
lods
lcall
inc
and
lods
push
jo
movl
or
clc
mov
pop
data16
cwtl
sti
mov
subb
inc
xchg
add
mov
add
add
out
sub
pop
add
pop
pop
xor
and
inc
out
inc
pop
jg
cltd
sarb
xor
insl
add
repnz
imul
outsb
pop
lea
push
mov
mov
mov
jmp
gs
icebp
sub
cmpsb
xchg
inc
sub
ljmp
ficompl
ret
pop
fs
sahf
add
aaa
mov
inc
xor
pop
or
push
daa
xchg
mov
fdivl
xchg
rcrb
xor
lods
repz
pop
xchg
imull
mov
cld
loope
out
fists
outsl
push
mov
cmpsl
std
cmp
sbb
stos
pop
movhlps
in
arpl
out
mov
adc
cmp
xchg
cmp
pop
adc
mov
rcll
add
dec
jmp
pop
push
aas
jbe
jne
mov
test
jo
jg
add
and
dec
lock
out
mov
je
fidivl
or
sahf
fdivr
movsb
push
cmp
fwait
cwtl
add
xchg
cmp
mov
pop
adc
xor
outsb
xchg
inc
xchg
and
enter
or
loope
xchg
lret
test
out
cwtl
fisubrs
lret
mov
sbb
insb
mov
sub
pop
imul
lods
mov
loopne
int
xor
repz
dec
sbb
xor
push
out
dec
push
cwtl
daa
jne
add
push
jo
mov
data16
mov
std
or
mov
jbe
outsl
mov
xlat
lret
stc
mov
mov
out
movsb
ret
mov
subb
jge
add
pop
ja
out
push
mov
mov
jo
and
add
sub
xor
mov
dec
sub
dec
pushf
xor
mul
repz
pop
pop
sub
push
or
mov
movsl
out
push
stos
std
ret
cmc
mov
cmc
sti
pop
cs
notb
adc
xchg
or
loopne
cmpsl
cli
lcall
and
sahf
jns
or
push
dec
sbb
cmp
outsl
cmpsl
fbld
and
cmpsl
inc
add
cmp
loop
daa
ud2
arpl
rcll
ljmp
xchg
mov
lods
mov
or
repz
loope
into
xor
push
pop
fwait
jmp
pop
call
or
pop
mov
cmp
subb
xor
push
iret
imul
pop
call
js
clc
lcall
add
push
pop
push
shlb
test
js
sub
jb
add
push
sbb
test
push
jmp
push
xchg
sub
pop
push
mov
shl
ret
clc
mov
sbb
jnp
sbb
inc
bound
push
cmc
or
fstl
pop
mov
dec
testl
in
daa
lret
test
sub
or
push
sbb
or
and
mov
addl
pop
in
aas
push
add
cmpsb
pop
data16
inc
sbb
fwait
and
mov
xchg
add
popf
cs
jl
sbb
stos
addr16
outsl
pushf
push
push
push
inc
data16
div
jb
sbb
out
in
inc
in
pop
or
andb
xor
out
mov
orb
and
stos
in
jl,pt
inc
cmp
sti
test
cmp
xlat
add
push
out
scas
xchg
insl
or
jb
test
sub
push
sarb
repnz
cli
jmp
out
test
jns
in
enter
dec
mov
mov
sarl
cld
jb
jmp
sahf
mov
sub
lods
jmp
mov
push
sub
js
in
mov
dec
mov
adcl
fucom
mov
and
mov
fwait
and
xor
pop
movl
pop
sbb
add
push
lods
scas
cmp
into
repz
cmp
shr
xor
lret
xchg
lret
cmp
xor
iret
or
divl
jae
sar
xchg
popl
sub
imul
pop
xchg
push
jo
push
rolb
scas
ret
es
arpl
andl
cmp
ret
data16
push
js
pop
sub
imul
or
or
xchg
jle
and
sbb
dec
xor
adc
sub
ss
xor
xchg
cmp
lcall
nop
jb
inc
dec
pop
sub
pop
popa
lcall
mov
leavew
clc
and
jb
add
xchg
sub
mov
xor
enter
mov
push
jbe
cs
pop
flds
outsb
pop
lock
cmp
shrb
movsb
dec
cmc
push
jne
fwait
inc
sub
jb
sbb
movb
xlat
pushf
jne
and
sub
dec
aam
notb
fcom
dec
jg
stc
inc
lds
xor
sbb
filds
loope
aaa
or
stc
stc
xor
mov
aas
cmp
movsb
mov
push
bound
lahf
ss
pop
jb
cltd
data16
sbb
mov
packuswb
jne
mov
mov
stos
inc
adc
sub
jo
fwait
orb
adc
lds
sbb
sub
les
xchg
mov
sbb
push
enter
fs
addl
nop
test
outsl
cmc
push
sub
push
mov
sbbb
fs
mov
push
sub
dec
add
rcll
lods
push
sarl
xchg
rclb
jp
test
inc
rorl
jae
decl
xchg
and
push
bswap
push
imul
pop
or
les
lret
lcall
mov
sub
imul
or
out
sti
adc
mov
or
lods
dec
shll
jnp
sti
rolb
pushf
dec
push
push
stos
jg
xor
int3
repnz
in
sub
inc
add
push
or
cld
and
lods
or
sbb
jmp
call
and
daa
out
addr16
push
std
loopne
cmpsb
inc
sbb
icebp
call
dec
or
pop
popa
cmpsb
mov
xchg
aad
inc
subb
incl
mov
xchg
push
mov
imul
pop
xchg
jno
or
repnz
loopne
divb
mov
cld
or
out
lret
je
scas
sbb
loope
add
jecxz
les
movsl
xlat
inc
jmp
dec
stc
mov
movsb
ja
js
xchg
sbb
call
cs
in
es
call
imul
jmp
loop
xor
lock
mov
dec
ficomps
pop
mov
or
and
lds
xchg
mov
add
testb
inc
in
inc
pop
daa
fisttps
pop
push
jns
push
cmp
jl
or
jl
jbe
push
mov
or
sbb
and
fs
hlt
repnz
test
data16
push
jb
dec
sub
inc
outsl
repnz
mov
mov
loopne
pop
dec
mov
or
jmp
cs
insl
gs
pop
or
lds
push
cs
dec
xchg
fldcw
shl
add
das
or
sub
in
mov
sbb
dec
hlt
mov
leavew
sub
rcl
mov
sbb
mov
cmp
push
je
dec
or
inc
sarl
sbb
and
sub
jae
mov
popl
and
hlt
pop
xchg
xor
xchg
mov
dec
clc
push
mov
pop
ja,pn
insl
mov
cltd
pop
mov
push
pusha
and
cwtl
add
enter
dec
and
dec
xchg
mov
push
dec
or
cmp
out
jmp
or
cld
out
sub
or
pop
sbb
in
cltd
sbb
repz
aas
int
or
int
and
xor
sub
mov
ficoms
push
mov
pop
fnstenv
cmp
cmp
popf
call
sub
xorb
fildll
xchg
stc
push
xor
sbb
rolb
sbb
loope
les
push
lods
nop
add
out
dec
fmull
lret
jg
in
imul
stos
pop
dec
or
nop
inc
sti
push
sub
insl
dec
push
das
out
adc
nop
jb
jne
pop
data16
out
rclb
mov
xchg
lods
mov
dec
in
test
mov
and
sti
clc
repnz
int
ret
aad
mov
repnz
adc
int
or
insb
sbb
adc
xor
popa
sub
mov
pop
data16
jb
add
cmpl
ret
rorl
inc
pushf
or
pop
xlat
pop
shlb
mov
fisttpll
cmp
subb
mov
dec
call
call
out
push
inc
stc
sub
rcrl
pop
mov
lahf
cltd
xchg
cmp
icebp
cltd
das
cmpsb
ret
fucomip
jmp
fs
cld
stos
mov
mov
bound
xor
enter
jns
je
out
and
jne
pop
sahf
pop
adc
xor
xchg
shlb
clc
cmp
addl
jbe
mov
xadd
movsb
lds
mov
pop
iret
int3
lds
in
fimuls
into
inc
jl
push
mov
mov
xchg
call
test
jne
xchg
xor
inc
pop
arpl
mov
jns,pt
ss
mov
sarb
mov
nop
jno
fldl
mov
push
aam
dec
stos
divb
push
pop
xor
adc
clc
xchg
adc
mov
notb
or
fnstsw
dec
sbb
mov
in
xchg
sbb
lret
insb
xchg
icebp
inc
and
aas
sti
fistpl
or
or
sub
sbb
scas
out
repz
arpl
jle
test
in
xchg
push
dec
pop
jmp
ds
jb
out
add
shrl
fsubl
arpl
pop
cmp
jp
sbb
into
cmp
xchg
orb
subl
mov
pushaw
lods
mov
adc
repnz
popf
lahf
mov
lcall
mov
mov
test
pop
cmp
adc
cmp
add
data16
mov
mov
sbb
repz
push
and
mov
cs
sub
jmp
xorl
sti
fidivrs
cltd
out
jle
mov
fdivp
rcl
dec
cli
xchg
xor
inc
adc
ljmp
push
cltd
shll
les
lret
jns
fwait
mov
jmp
pop
cmp
leave
mov
sub
jp
pop
call
xchg
mov
mov
in
divb
pop
push
add
jno
outsb
mov
sub
repnz
faddl
push
inc
cmp
hlt
rcrl
repz
adc
pop
cmp
push
sbb
rcr
repnz
or
jp
std
push
or
dec
jns
fnstcw
and
daa
fistps
pmulhuw
lcall
xor
inc
hlt
in
fnstcw
inc
pop
mov
cld
aas
and
jp
mov
jne
or
repz
pop
jg
sahf
jbe
fiadds
imul
pop
test
xchg
sbb
dec
sub
sub
xchg
movsb
add
cmp
inc
mov
movsb
mov
push
dec
mov
inc
ficompl
lahf
das
xchg
sti
int3
xchg
and
shrl
or
out
mov
lret
inc
cli
std
xchg
inc
insb
dec
lods
mov
xor
xor
loop,pt
push
out
loop
jnp
mov
jae
movsb
push
xor
push
add
jmp
dec
aaa
xchg
clc
ss
xchg
jns
out
repz
inc
mov
xor
in
cli
ret
shrl
lds
int
pop
sub
leave
pop
loopne
ja
and
je
ljmp
and
lea
lahf
mov
leave
and
arpl
lea
outsl
jae
fwait
sbbb
push
xor
jno
pop
pop
movsl
sub
gs
out
mov
push
mov
jbe
je
or
sub
xchg
xor
js
movsl
andl
pop
xor
mov
in
loop
aas
lret
scas
test
inc
or
sarb
call
popf
divb
loopne
scas
sub
ret
inc
xchg
arpl
jno
xchg
jl
xchg
imul
popw
jle
std
cmp
aas
outsl
cli
xchg
add
mov
out
jmp
pop
mov
fbld
inc
cmp
jnp
ss
pop
mov
addl
sub
clc
movsl
or
mov
aaa
fimull
mov
aam
imul
cmp
xlat
popf
xor
cmp
aad
xchg
ss
adc
add
pop
or
lret
sti
add
xor
repnz
add
xchg
push
mov
pop
cmpsl
or
dec
add
popf
ljmp
popw
aaa
pop
subb
add
test
mov
xchg
int3
pop
or
shlb
cli
ss
lock
mov
sbb
mov
xor
dec
jno
add
bound
push
mov
add
popf
push
ret
jecxz
out
fildl
ja
push
sbb
cmp
push
in
adcb
push
cmp
pop
rcll
jge
adc
and
stos
mov
ret
xchg
add
sub
mov
sub
push
push
cmc
or
pop
repnz
fiaddl
fchs
int3
in
lcall
adc
mov
pop
pop
mov
in
stc
push
inc
add
jbe
mov
xadd
pop
push
aam
outsl
and
push
popa
mov
mov
repnz
push
loopne
mov
pop
cmpb
mov
pop
inc
and
icebp
sbb
add
mov
jno
jns
and
dec
pop
xchg
test
mov
ljmp
xchg
imul
fistpl
rol
sbb
fcomp
push
cmpsl
push
xchg
xchg
movsl
hlt
inc
fs
data16
in
lcall
jbe
jnp
push
in
mov
loopne
cli
fstpt
pop
div
fcmovnb
fnstsw
xchg
jmp
out
in
or
inc
or
in
mov
test
xor
lock
bound
cld
shl
lahf
and
pushf
mov
inc
jge
hlt
dec
imul
mov
cmp
movsl
pop
aam
inc
or
mov
xchg
lcall
into
and
insb
imul
and
jae
rcl
sbb
pop
cmp
dec
pop
lea
xor
fisttpll
repz
mov
add
jge
lds
adc
inc
mov
and
outsl
pop
mov
repz
jl
cmpsl
arpl
or
fdivrs
dec
push
pop
lret
mov
sub
inc
pop
paddq
pop
xor
pop
fwait
int
mov
push
jae
pop
mov
and
cmp
mov
test
loop
sub
cmp
pop
iret
push
rcr
cmp
cli
ljmp
mov
mov
cmc
push
sub
enter
iret
out
sbb
jnp
pop
xchg
rcrb
sub
or
jns
xchg
add
repz
nop
inc
and
cmp
push
jl
clc
popf
bound
sahf
sub
idivb
inc
out
testl
pop
jl
sbb
pop
test
test
add
movsl
loop
and
inc
jo
inc
out
ds
xlat
pop
arpl
pusha
adc
and
subb
push
xor
sub
out
sub
jmp
out
lret
mov
sub
xchg
sub
push
push
lret
mov
xor
adc
sub
mov
bound
aad
leave
inc
mov
dec
das
dec
loop
ficoms
xchg
mov
cmpl
add
mov
pop
out
pop
rcll
xor
or
insl
jo
and
movsl
imul
mov
jmp
aam
sub
ss
push
popf
cltd
pop
out
cld
mov
cli
lret
xchg
mov
jg
push
jbe
push
lret
sbb
test
mov
sbb
leave
mov
cs
push
stos
push
data16
push
xchg
testb
clc
sub
in
xchg
addb
jmp
pop
cmp
imul
mov
jo
add
xchg
push
fwait
xchg
or
cmp
cmpsl
jbe
nop
cmc
es
mov
rolb
pop
bnd
jle,pn
xor
dec
test
xchg
sbb
mov
pop
mov
in
and
jmp
cmp
add
jge
and
retw
neg
sub
aam
sbb
mov
jno
or
add
adc
xchg
shl
ds
sti
insl
stos
push
movsb
sbb
sbb
and
mov
mov
movsb
fstl
xor
cmc
cmpsl
cmp
lods
jge
add
xor
push
lods
leave
insb
cmp
dec
jl
and
enter
pop
push
push
cs
stos
sub
cmp
and
mov
cmpsl
fisubrs
and
jo
jge
aaa
fmull
stc
push
movsl
mov
xor
xchg
xor
aaa
mov
mov
stos
xor
push
xlat
lcall
mov
cmp
xchg
cmpsl
test
mov
iret
cmp
inc
mov
scas
stos
push
sar
pop
pop
sbbb
and
push
mov
mov
xor
jmp
jbe
ljmp
add
mov
repnz
and
mov
in
sub
roll
jge
add
test
add
mov
fmull
in
jle
push
xchg
push
fldcw
push
sub
cli
xlat
jb
xchg
decb
outsl
sarl
cltd
outsb
pop
std
cmpsl
cmpb
loope
cmpsb
mov
pop
mov
aam
jp
loop
les
test
and
mov
push
inc
lea
pop
lods
mov
popf
scas
jl
xchg
pop
sub
push
fdivrs
ljmp
loopne
mov
mov
arpl
sub
cmc
imul
and
pop
ds
sbb
dec
insb
sbb
xlat
push
pop
push
and
test
inc
aad
pop
xor
xor
mov
ret
dec
lret
push
sub
push
std
cltd
pop
aad
jne
pop
iret
lds
mov
fistpl
out
push
cs
addl
mov
mov
mov
mov
sbb
jnp
mov
popa
dec
popa
xorb
jbe
int
in
and
mov
sub
sbb
int
dec
shl
mulb
gs
loope
lret
cli
stc
je
pushf
out
mov
ss
and
push
test
hlt
jmpw
rorl
pop
xchg
inc
push
mov
add
mov
mov
jp
mov
push
imulb
pushf
mov
and
xor
xchg
jnp
int
or
inc
in
fdiv
sarb
mov
mov
inc
lret
push
out
mov
inc
mov
rclb
cwtl
fdivr
jg
jmp
das
mov
sbb
imul
jge
sub
cld
insb
sub
cli
scas
cmp
scas
lds
sar
sub
add
adcb
aas
sbb
cld
mov
sti
lahf
popa
push
in
not
cmpsl
adc
mov
test
sbb
loop
leave
imul
sub
add
jp
out
mov
cld
mov
or
sahf
xchg
test
dec
insl
push
mov
loope
sti
sub
jmp
pop
insl
sar
xor
aas
pusha
shlb
std
xor
fs
pop
arpl
push
mov
mov
das
fiaddl
cltd
cltd
loopne
xchg
stos
std
push
ja
imul
cmc
pushf
xlat
pop
mov
rclb
shl
mov
xor
test
xor
cmpsb
push
jne
adc
fistps
pop
mov
aam
test
nop
loope
jb
mov
pop
jg
repz
aaa
scas
cmpsb
int
jge
cmp
inc
out
or
or
jl
loope
add
insb
lret
das
sbb
sbb
push
daa
jg
in
lods
push
mov
push
or
les
outsl
xor
sti
ret
pop
fidivl
into
js
and
add
xchg
pop
and
hlt
add
mov
xchg
sbb
add
dec
jmp
movsl
pop
pop
push
add
mov
xor
sbbl
xchg
repz
pop
imul
scas
call
add
and
sub
adcb
stos
jae
icebp
pop
loop
jae
dec
stos
lcall
imul
dec
mov
add
mov
dec
clc
xchg
orl
pop
cmp
enter
fisttpl
stos
xor
cmp
sub
fmull
ret
cmp
pop
pop
dec
out
and
test
mull
push
xor
mov
lahf
mov
xchg
mov
enter
mov
pop
or
gs
icebp
fdivr
adc
fabs
sub
sbb
inc
jno
jb
daa
loopne
into
xchg
adc
mov
cmp
and
cli
test
xor
imul
sbb
xchg
add
jp
in
sub
jle
shlb
inc
pushf
mov
sti
jg
sub
jge
cmc
xchg
sbb
add
sbb
stos
pop
test
out
jmp
lret
js
repz
or
adc
scas
pusha
sub
jge
flds
mov
add
push
jns
loop
or
add
adc
outsb
repz
lret
ds
jb
xlat
popa
loop
add
imul
add
lods
std
loop
add
loope
pop
insb
jnp
ficompl
and
nop
lods
and
fsubrp
add
inc
push
push
mov
bound
dec
adc
repz
dec
mov
mov
inc
jbe
repnz
lcall
mov
jecxz
aam
jmp
sbb
inc
out
mov
in
inc
andl
mov
imul
aad
pop
negb
mov
outsl
popw
in
xor
sub
xchg
sub
mov
fdivl
cmpsl
int
inc
inc
test
cs
stos
loope
int
inc
mov
xchg
inc
inc
in
call
push
loope
cmp
popf
sub
pop
imul
dec
mov
test
scas
dec
mov
xor
cmp
mov
outsl
or
sbb
xchg
mov
sbb
dec
sub
adc
xchg
adc
mov
or
jg
dec
jl
xor
fistps
notb
or
inc
xchg
cltd
sub
mov
cmp
mov
mulb
and
sub
decl
jmp
je
mov
jbe
fsubrs
lock
rorl
jle
inc
push
in
xor
cwtl
pop
pop
imull
jb
adc
out
fldl2e
andl
jmp
mov
mov
scas
jle
incb
or
jecxz
xor
jb
add
push
pop
mov
negl
pop
mov
mov
xchg
daa
mov
cmp
cmpl
cmp
mov
mov
push
inc
jmp
mov
popa
orl
sub
fimuls
cmp
ja
in
int
mov
shl
data16
jp
adc
lcall
mov
mov
scas
adc
xchg
cmp
loop
push
lret
mov
and
in
and
mov
push
sbb
jno
dec
pop
lret
in
fs
push
cwtl
fidivs
cmpsl
or
jne
jno
out
adc
rcrl
jns
cwtl
into
stos
adc
pop
pop
xchg
inc
stos
mov
in
out
and
popf
daa
fs
sbb
lods
fucomi
cmp
imul
subl
push
lret
rcll
test
mov
pop
inc
mov
dec
cltd
dec
sub
out
pop
inc
popf
inc
mov
out
aad
dec
dec
push
mov
icebp
outsb
dec
pop
add
fstps
jmp
xchg
icebp
inc
push
xchg
or
stc
repnz
xor
dec
mov
bound
mov
int3
jne
jg
into
pop
jp
fisubl
loopne
scas
popa
in
add
inc
dec
shll
dec
fdivs
jbe
sub
les
testb
mov
push
fstpt
outsb
lret
pop
leave
pusha
aam
es
xchg
test
fisubrs
rcr
nop
xor
cmpl
add
lods
lcall
pop
rorb
sbb
pop
fwait
mov
cmp
or
jno
mov
cmc
into
lods
push
add
sti
stc
repnz
cs
mov
jl
cwtl
mov
and
cmpsb
inc
jnp
mov
lock
lret
mov
sti
cmpsl
add
addr16
sbb
fwait
lret
es
xchg
add
xlat
mov
into
lods
insl
mov
mov
add
and
scas
jge
std
out
into
or
divb
push
adc
repnz
sbb
and
in
jg
jle
jmp
repz
lahf
lods
leave
icebp
aaa
popa
fldcw
sub
dec
pushf
int
or
xchg
lret
xor
xchg
adc
mov
ret
outsl
sbb
jecxz
xchg
mov
lret
xor
leave
shll
cltd
repz
lods
jge
cmpsb
jp
adc
pop
adc
push
repnz
popf
aam
scas
stos
dec
jle
inc
sbbl
push
cmpsb
inc
lds
sti
push
loope
ret
fldenv
lahf
jle
adc
jmp
in
subb
adc
ret
arpl
push
push
cltd
subl
pusha
subb
lret
inc
and
subl
nop
movsb
notl
or
jp
roll
xorb
negl
int3
inc
int
jmp
xchg
je
mov
jae
push
fcmovnb
mov
fsubl
lods
pop
inc
push
imul
xchg
fwait
jb
push
pop
jne
adc
fwait
int
push
lcall
into
mov
push
mov
aad
in
jae
add
shlb
nop
cs
pop
into
push
add
jmp
mov
fldt
mov
aam
pop
dec
inc
test
fwait
scas
stos
adc
fadd
fldl
mov
into
pop
andl
or
fsubrs
ss
sub
add
lods
inc
adc
std
ss
add
mov
pop
add
imul
leave
push
sub
mov
push
pop
hlt
test
aaa
push
adc
xchg
sub
in
inc
or
int
adc
push
inc
int
dec
das
sahf
push
in
dec
xchg
jae
sub
arpl
lock
test
mov
rorl
sahf
pop
jo
pop
shufps
jno
test
inc
and
jnp
xchg
or
add
mov
loope
jns
jp
lretw
leave
push
fwait
hlt
loopne
movsb
popa
mov
jae
inc
xchg
imul
incb
xor
test
cmp
fldenv
sahf
fwait
pushf
in
test
dec
inc
std
mov
outsb
dec
pop
mov
aas
addr16
xchg
mov
adc
adc
mull
imul
xchg
or
xchg
out
adc
xlat
fsubs
adc
push
and
sahf
out
and
subb
jbe
loop
inc
addr16
cli
insb
rcl
mov
xchg
sahf
adc
jge
mov
out
roll
decl
pusha
mov
xchg
fldt
aaa
push
lret
mov
mov
add
jmp
in
data16
cmp
pop
outsb
aad
shlb
maxps
and
dec
dec
jae
sbb
dec
inc
inc
sbb
xchg
push
cli
push
add
jp
jp
outsb
cs
xchg
outsl
stc
sahf
outsb
aaa
push
cli
rclb
mov
int
jge
mov
mov
dec
sbb
xor
mulb
repz
es
stos
and
ja
stc
adc
mov
add
out
outsl
lods
out
aaa
std
sar
rolb
shlb
rcrb
cmc
cmpsb
inc
jp
enter
adc
inc
inc
and
call
xor
mov
mov
hlt
add
loopne
and
cmp
flds
cld
adc
mov
sub
loope
mov
push
cmp
and
xor
mov
cmp
mov
cmc
pop
sbbb
add
jecxz
aaa
cmp
aaa
push
cmp
dec
xchg
jae
mov
dec
pop
jp
out
inc
jns
dec
inc
xor
sub
inc
sbb
incl
aaa
xchg
aam
push
aad
test
or
arpl
add
int3
jmp
cmp
addr16
lds
pop
js
lock
dec
pop
jmp
jb
rorl
sub
mov
fsubl
mov
xchg
js
data16
mov
cltd
mov
xchg
scas
mov
std
add
insb
into
cs
lock
outsb
test
imulb
xor
shl
xchg
mov
push
xchg
dec
push
pop
push
push
dec
fs
aas
fsubrs
xor
lds
inc
mov
mov
adc
cltd
jmp
jno
cmp
inc
xchg
inc
icebp
out
inc
jecxz
insl
sbb
arpl
aas
arpl
xchg
add
sbb
inc
mov
repnz
pop
ja
adc
sbb
or
xor
push
iret
out
dec
xchg
mov
cmc
sbb
insl
shrl
out
lcall
out
aas
dec
lret
push
push
jns
mov
clc
push
lds
sbbl
mov
pop
popa
mov
cwtd
add
test
pop
clc
scas
xchg
lods
cmp
movl
push
pop
or
add
jne
push
xlat
xchg
push
xlat
clc
xor
arpl
arpl
cmp
ret
xor
sub
lahf
adc
xor
addr16
ja
aaa
rcr
xor
sub
sti
cmp
mov
int3
jne
jne
shll
fdivrs
pushf
and
stos
in
es
lock
out
popf
mov
sub
icebp
adc
mov
lret
or
enter
shr
mov
mov
imul
int
dec
cmp
loopne
push
push
js
mov
enter
int
push
movsb
andb
mov
roll
inc
sbb
seta
lds
xor
enter
adc
cmc
inc
sub
aad
or
adc
and
insl
jns
sub
std
and
mov
cmpsl
fstpl
aaa
mov
push
pop
ljmp
pusha
movsl
out
add
push
jb
pop
pop
push
and
push
leave
or
jno
sub
loopne
stos
cli
adc
popf
inc
in
adc
lret
les
out
repnz
frstor
sub
jb
test
mov
push
shrl
xor
jg
cmp
gs
into
mov
sbb
ja
aas
fildl
lea
and
addr16
inc
arpl
or
add
stos
addr16
inc
pop
mov
jns
push
icebp
in
mov
or
xor
lea
dec
mov
test
test
dec
flds
sbb
lahf
or
pop
loopne
into
idivb
out
ljmp
xchg
fidivrs
dec
mov
int3
and
push
std
add
xor
mov
add
jne
pop
pop
and
repnz
out
sub
jecxz
subb
inc
push
sbb
pop
jo
cwtl
push
iret
sahf
jge
pop
pop
dec
and
mov
cmp
daa
jp
mov
and
xchg
push
or
mov
testb
aad
adc
add
fsubrs
ror
jb
xor
xor
gs
mov
dec
stc
pop
or
adc
xor
xor
dec
and
dec
mov
nop
pop
xchg
jmp
dec
pop
jl
jae
xchg
addl
hlt
lods
sar
jae
jae
test
roll
bound
lods
insw
iret
mov
cmp
adc
enter
lock
shrl
test
push
jae
iret
jnp
test
loope
popf
cmp
js
out
jp
stos
adc
adc
pop
lods
cmp
pop
nop
xchg
sbb
cmp
icebp
pop
mov
add
sub
repnz
cltd
xor
adc
lcall
fst
shrb
stos
xor
ret
xor
mov
fistl
dec
push
sbb
jle
std
push
adc
or
add
cli
sbb
mov
dec
push
mov
pop
jnp
dec
inc
inc
pop
xchg
mov
inc
call
jb
inc
pop
xchg
dec
addr16
mov
push
loop
mul
inc
sarb
dec
pop
jg
jbe
lods
pop
out
in
dec
push
sbb
mov
dec
loop
loopne
mov
cld
sbb
rcr
xchg
push
jns
or
push
mov
push
ja
cmp
pop
adc
and
int3
aam
mov
aam
hlt
jb
jbe
pusha
scas
aas
xor
in
sbb
push
jnp
leave
in
faddp
sti
repnz
ret
rolb
cmc
xor
xor
incb
mov
jecxz
pop
or
mov
aad
jmp
icebp
movsb
mov
pop
stos
pop
pop
cmpsb
cmp
fsubrl
sbb
hlt
push
and
and
enter
hlt
mov
xor
mov
test
fistpl
or
or
outsb
out
aam
jl
inc
clc
out
arpl
js
dec
mov
ja
mov
pushf
ret
rcrl
and
lret
sub
out
fcoml
mov
cmp
outsl
jnp
scas
outsl
lds
ds
and
add
jmp
jmp
out
lret
imul
mov
xor
addr16
push
enter
mov
inc
sub
repz
inc
outsb
cmp
pop
adc
pop
xchg
into
loope
ss
jae
js
sub
or
hlt
mov
cld
or
dec
inc
fwait
pop
xchg
les
aaa
add
es
sbb
dec
add
je
push
in
mov
clc
lahf
out
xor
adc
repnz
adc
mov
aaa
lcall
das
dec
insl
add
or
in
mov
xchg
out
and
xor
mov
popa
pop
scas
xor
mov
or
lret
xor
jns
xor
rolb
fistpll
cmp
leave
pop
and
andb
scas
inc
call
xchg
arpl
pop
sti
sub
dec
mov
adc
sub
sbb
das
out
aas
push
dec
aam
aas
push
add
lds
in
sbb
je
js
mov
cmpl
in
lret
push
xchg
and
inc
jp
mov
mov
inc
add
adc
stos
xchg
dec
add
cld
add
mov
dec
test
push
jns
add
xchg
movsb
mov
cmpsb
pop
jp
or
cmpsb
leave
fstpl
xchg
hlt
pushf
cmpsb
loop
cmp
pop
mov
inc
sbbb
push
in
push
mov
jmp
push
int
fiaddl
sub
pop
pop
cld
lock
sbb
call
mov
cmp
inc
cmpsl
lret
insl
mov
push
jl
nop
sbb
sarl
dec
xor
pusha
divl
iret
push
cmp
das
xor
push
repnz
mov
push
call
jp
pop
loopne
cltd
pop
insl
pop
cmp
cltd
loop
pop
add
orl
sti
pop
xchg
in
jecxz
mov
and
outsl
sbb
jne
lods
sbb
scas
lcall
mov
mov
xchg
add
adcl
int
aas
call
add
sarb
xchg
cli
sbb
filds
push
pop
sub
dec
scas
orl
cltd
jb
stos
ljmp
mov
xor
mov
lock
insl
cmp
ja
or
in
sbb
test
dec
sub
dec
shrl
add
inc
scas
out
jmp
lods
nop
rcr
cli
dec
ret
mov
push
das
iret
inc
cli
and
add
push
mov
cmp
sbb
clc
cltd
dec
mov
lods
pop
in
mov
xchg
inc
adc
dec
sbb
loop
add
dec
adc
mov
pop
mov
imul
ret
iret
mov
push
arpl
pop
pop
insb
and
data16
rorb
mov
in
pop
out
into
pop
dec
std
gs
pop
int3
dec
push
lods
push
push
addr16
nop
std
fwait
test
push
or
cmpsb
mov
cmp
clc
fld1
push
iret
in
or
xchg
xchg
shrl
push
inc
mov
lock
mov
cmp
sbb
in
faddl
sub
cmp
fwait
jge
out
adc
mov
xor
pop
je
inc
push
push
sub
testb
mov
mov
cmp
xor
loop
cmp
and
bnd
les
repz
lea
or
and
push
sbb
xlat
mov
das
push
pop
pop
hlt
and
out
pop
mov
in
shlb
mov
pop
cmp
lods
inc
inc
pushf
xor
pop
fsubrl
adc
decb
mov
mov
iret
xchg
inc
push
iret
push
mov
fsts
cmp
in
popa
dec
pop
je
cmp
fsubl
push
jg
lret
js
lods
rcrl
mov
rcr
cmp
ljmp
mulb
cmp
mov
daa
aam
lock
cmpsb
dec
lahf
dec
pop
mov
jno
sbb
insb
jp
or
mov
sbbb
mov
stos
xor
les
mov
cmp
mov
in
add
mov
or
ss
xor
xor
and
sub
xchg
dec
mov
push
lods
movsb
xlat
out
sbb
xchg
pop
ss
mov
andl
stos
es
imul
pop
dec
stc
loopne
pop
jmp
sti
cmpsl
or
jno
call
mov
dec
sbb
dec
fdivl
pop
mov
adc
lds
movsb
es
add
adc
inc
jae
es
jg
iret
xor
sti
dec
or
push
dec
jno
lods
mov
pop
dec
pusha
push
mov
xor
shlb
push
xchg
arpl
pop
shlb
cmp
jbe
xlat
add
sbb
in
das
mov
and
scas
stc
test
popa
pop
mov
mov
fcompl
gs
push
jnp
mov
lods
adc
xor
mov
subl
fisttpll
sub
insl
clc
bound
xor
sub
mov
data16
push
in
imul
mov
mov
pop
mov
sub
mov
mov
pusha
adc
hlt
aas
mov
dec
cmp
shrb
or
loop
xor
insl
data16
orl
rorb
push
fisttpll
pop
jg
mov
jbe
add
sbb
icebp
sub
or
js
sub
mov
mov
sbb
dec
aad
and
add
adc
repnz
add
daa
dec
add
lods
cmpsl
mov
push
mov
or
jae
imul
loopne,pt
data16
xchg
push
or
cmpsl
adc
je
cmpsl
ret
addb
aad
cli
ds
sarl
sbb
test
dec
xor
test
mov
sbbb
aad
inc
cld
and
cmp
loopne
or
ja
push
cs
pop
ret
filds
push
push
add
mov
push
cmp
inc
mov
fcmovnbe
movsb
add
pop
fdivrs
and
outsb
jns
pop
cmpsb
xor
mov
push
sub
test
cmp
dec
lock
push
xchg
push
pop
push
iret
and
push
cmpsl
mov
ret
and
arpl
xchg
pop
ficomps
xchg
pushf
insb
or
call
ljmp
or
int
std
jle
pop
push
int3
rorb
mov
js
in
dec
inc
dec
das
je
jns
rcrb
pushf
fadds
jge
pop
movsb
into
out
sti
insb
xor
pop
sbb
lret
add
xor
mov
lret
xchg
sahf
xchg
and
mov
cmpsl
fwait
push
adc
pop
dec
add
fs
fstpt
in
cmpsb
inc
cmc
push
cmp
push
lea
lahf
fwait
adc
and
imul
mov
rclb
movntps
cmp
mov
jnp
adc
in
push
jg
cmpsb
dec
jns
or
cli
and
arpl
fs
sub
iret
and
shr
inc
push
xor
sub
jmp
mov
leave
sti
divl
arpl
roll
loopne
iret
scas
mov
push
dec
dec
lcallw
fs
and
cmpsb
cmp
aad
jbe
in
push
std
jae
lcall
jae
das
pop
xor
test
cltd
mov
sub
repnz
pop
and
sarl
aad
dec
mov
aas
fimull
lret
and
in
dec
mov
sbb
jmp
idivl
loop
cltd
in
mov
stos
aam
cltd
adc
cmp
mov
fwait
out
mov
pop
sbb
and
scas
orb
push
hlt
test
lcall
out
mov
jo
in
push
in
mov
pop
or
dec
in
std
sub
add
aas
insb
push
movsl
push
dec
pop
sub
or
mov
imul
jg
cmp
pop
jae
sbb
jg
out
daa
scas
out
mov
jnp
jle
ljmp
cwtl
mov
clc
xchg
mov
pop
sarl
addr16
sub
sbb
sbb
xor
inc
jns
iret
mov
pop
adc
adcl
jo
lret
push
xor
mov
inc
dec
pop
add
into
mov
jecxz
sub
out
lret
or
dec
pusha
inc
jne
xchg
mov
stos
mov
adc
in
jae
enter
fwait
lret
sub
icebp
cmpsb
cmpsl
sub
push
nop
pop
jns
dec
xchg
xchg
jne
pop
sar
pop
rcl
jmp
xchg
jno
neg
in
xchg
jmp
pop
pop
or
add
idiv
cwtl
or
lea
outsb
aas
xor
jbe
clc
add
cwtl
cld
dec
pop
test
pushf
sbb
or
mov
or
adc
fisttpl
movsl
mov
cs
and
aas
and
sub
aas
fmuls
pop
jecxz
push
jno
mov
sbb
pushf
fs
sub
push
hlt
and
push
push
out
sub
into
cmc
or
dec
call
mov
rcrb
jp
arpl
jnp
sbb
mov
loope
rcrb
xor
lret
outsl
pop
dec
fiaddl
sbb
arpl
js
mov
pop
ja
sbb
xor
testl
cmpsb
mov
and
ss
pop
inc
adc
jb
fmuls
push
push
mov
ds
pushf
inc
enter
ljmp
xor
xchg
cmp
ljmp
mov
aad
inc
jl
sub
idivb
adc
jp
mov
mov
or
cmpsl
inc
pop
push
inc
fmuls
rorb
xchg
int
dec
mov
inc
fdivs
or
mov
outsl
ret
fsin
lock
pop
jmp
inc
add
fwait
pop
cmpsb
and
jg
das
add
cmp
out
jecxz
sti
push
jnp
lods
pop
fsubrp
gs
in
push
mov
mov
inc
pop
xor
sub
xchg
or
insb
in
pushf
jecxz
js
loope
cltd
in
pop
nop
mov
adc
std
add
shlb
mov
js
nop
sarl
lret
dec
ja
sbb
inc
adc
adc
xor
dec
mov
cmp
push
pop
inc
repz
push
shl
adc
sti
popa
ja
pushf
dec
loopne
sub
rcr
mov
sub
orl
xchg
xor
jmp
xchg
lods
push
jb
outsb
jno
enter
dec
mov
dec
xchg
sub
popa
inc
cmp
and
mov
mov
iret
push
cmpsl
or
lret
cmpsb
adc
cmpsb
shlb
test
sarl
ja
outsb
movsb
pop
pop
jmp
dec
xor
shll
mov
sub
rsqrtps
mov
ffreep
dec
repz
inc
xchg
xchg
pop
mov
shrl
inc
push
push
stos
cmc
mov
sbb
push
pop
cmpb
xchg
js
sarl
inc
jg
xchg
cmpsl
ror
dec
jne
push
out
popa
lods
add
cmp
mov
gs
sbb
push
movsb
push
push
sbb
mov
ljmp
xchg
mov
cmp
inc
jo
ss
addr16
adc
aad
adc
mov
xorb
dec
xor
lods
in
xchg
push
aam
adc
push
inc
leave
gs
addr16
xor
cmp
int
stc
mov
add
hlt
bswap
fisttpll
sub
fdivrs
lock
roll
jo
fucomp
or
in
scas
inc
addb
fsubl
jbe
mov
push
clc
lods
jb
sub
pop
sub
sub
inc
xor
les
testb
cmp
dec
stc
out
sub
neg
dec
lea
jge
out
inc
call
std
xchg
pusha
ja
mov
mov
jne
dec
push
loope
ficoms
jg
mov
arpl
loope
aam
sbb
sti
or
adc
roll
fsubs
xchg
int3
jo
and
xor
jbe
lock
inc
rcr
inc
mov
sahf
out
add
push
xchg
xorb
data16
push
gs
dec
sarb
mov
inc
into
inc
js
ret
stc
inc
pusha
dec
and
dec
xchg
or
daa
aad
push
mov
push
cmp
sbb
jno
xor
mov
insb
cli
xchg
push
daa
add
aad
mov
leave
pop
clc
aaa
lods
std
or
mov
movsl
mov
fsubl
jb
cli
pusha
cmp
pop
aas
arpl
jae
stc
std
shl
popl
push
dec
movsb
aam
inc
insb
cmp
mov
xchg
sub
test
or
cmpl
insl
and
pop
pop
popf
inc
inc
rcr
sub
push
inc
pop
jo
xor
pop
mov
jne
mov
clc
icebp
cmp
xchg
jge
jnp
repz
pop
mov
fistpl
jae
dec
xchg
lods
ja
test
daa
push
dec
jb
cmp
lock
ret
das
xorb
pop
lret
fcom
jecxz
fidivs
lcall
mov
push
jne
int3
es
pop
or
mov
mov
inc
inc
push
andl
or
push
pop
imul
push
repz
push
push
ud1
mov
movsb
mov
jbe
pop
cmc
jge
movsl
push
pusha
lods
fs
mov
xor
aas
mov
aaa
jns
sub
jecxz
fucomi
loope
dec
inc
xchg
dec
xchg
movsb
mov
mov
dec
loope
fs
sub
mov
cmp
cmp
jge
mov
scas
inc
pushf
subb
stos
and
add
and
or
rcll
pop
push
sbb
xorl
fists
adc
mov
push
mov
rcr
push
jl
xchg
movsl
stos
adcb
mov
mov
inc
cs
xor
and
push
and
sarl
jno
gs
in
gs
mov
xor
sbb
add
sahf
xchg
fwait
int3
fistpl
shrb
lods
sub
jns
test
mov
lret
in
and
mov
ds
bound
xor
dec
pop
decb
call
sti
out
pop
push
int
test
jne
in
xchg
out
aam
rcrb
sarb
nop
pusha
cld
popf
push
test
mov
js
push
dec
mov
fstp
ss
inc
hlt
cmp
mov
push
enter
mov
imul
jp
cmp
push
dec
pop
ss
mov
fimull
push
icebp
movsl
out
mov
pop
push
cs
ljmp
or
cs
add
mov
pop
aas
test
mov
lahf
in
test
add
scas
pop
push
pop
mov
cld
outsl
pop
jae
jae
stos
fildl
add
cmpsl
lcall
test
imul
movb
mov
push
shll
cltd
fadds
call
xchg
cld
fcoms
js
fiadds
jns
das
dec
or
jecxz
addr16
add
loope
push
fstpl
inc
cltd
or
cmp
mov
add
inc
addr16
idivl
mov
pop
addr16
ja
movsl
pop
enter
loop
bound
mov
push
mov
inc
mov
sub
aam
fsubrs
mov
xorb
xor
test
xchg
ja
and
pop
add
fsubrl
add
in
into
cmp
mov
sbb
mov
movsl
aaa
adc
mov
and
imul
ss
push
mov
imul
add
outsl
es
cld
mov
inc
popf
adc
bswap
adc
shl
xor
popf
and
loope
aas
cmp
and
xor
ficoml
std
push
iret
dec
int3
push
xor
lods
stc
rcrb
lods
mov
inc
and
push
push
inc
fs
adc
cmp
mov
push
inc
push
mov
stc
cmp
movsl
jns
cvtpi2ps
sub
ja
fimuls
shll
hlt
mov
adc
cmc
fiadds
fistl
jmp
jmp
stos
aam
insl
mov
mov
fwait
outsb
xchg
and
cmpsl
xor
dec
or
xorb
popf
cmc
and
inc
cli
lret
sti
lcall
jmp
add
push
mov
cmp
jno
in
or
loopne
xchg
push
xor
push
scas
jnp
mov
dec
je
mov
sub
cmc
movsb
xor
call
mov
and
call
scas
insl
mov
sub
dec
hlt
fldt
jecxz
sbb
sub
add
sbb
adc
add
add
push
insb
pushf
mov
iret
xchg
mov
jl
jp
mov
xchg
test
push
in
xchg
xchg
divl
shr
cmp
in
mov
adc
dec
jge
xchg
xor
push
push
pop
jno
jle
inc
cmp
bound
ret
adc
pop
ds
xchg
ja
or
inc
enter
ja
ds
mov
popa
sarb
push
movsb
mov
out
in
mov
decb
mov
je
pushf
inc
mov
jnp
dec
adc
testl
outsl
push
jecxz
mov
mov
sbb
test
mov
clc
and
das
jbe
sbb
or
push
cs
cmp
sub
shlb
pop
mov
jp
pop
jl
cmpsl
and
fs
test
outsl
push
pop
fidivrs
sti
sub
push
pop
pop
mov
xor
shrb
sub
push
and
and
enter
loope
mov
adcb
lret
mov
inc
jl
push
addr16
popf
adcl
loopne
sarb
jne
xrelease
mov
cmp
pop
jns
enter
mov
inc
fsubrs
xlat
lock
jo
push
pop
lea
adc
or
das
pop
fdivl
sbb
popa
mov
dec
lock
addb
scas
cmp
stos
subl
or
xor
xchg
pushf
xchg
pushf
jb
pop
push
mov
xchg
inc
subb
test
incl
andb
das
mov
imul
pop
sbb
adc
xor
movsb
pop
mov
jg
xor
jnp
add
out
jb
roll
jmp
push
pop
dec
xor
pop
fmulp
fcomip
dec
sub
xchg
ret
iret
push
jnp
push
xchg
es
gs
pop
cmp
mov
mov
divb
sbb
mov
outsl
jl
mov
xchg
js
fcoms
mov
jle
adc
test
cmpsb
out
mov
push
cmpb
outsb
push
mov
mov
or
pushf
push
into
mov
insl
jb
add
push
gs
or
pop
rcrb
xor
dec
and
xor
movsb
mov
in
jb
ds
push
cmp
movsb
adc
add
mov
inc
sub
cmp
insb
icebp
lret
aad
add
push
lods
lret
dec
cs
fistpll
jno
ss
mov
push
mov
ret
mov
mov
rclb
mov
pop
ret
rolb
pop
cltd
jo
push
push
xlat
jb
push
xchg
inc
inc
outsb
mov
repz
je
and
add
sarb
cltd
decb
adc
les
lods
popf
and
sbb
leave
jnp
pop
and
mov
xchg
rclb
inc
add
mov
int3
jbe
fs
or
pushf
pop
lcall
push
and
xor
sbb
xor
xlat
mov
mov
clc
roll
roll
addr16
or
imul
mov
ret
inc
ret
loopne
lret
pop
add
and
in
add
sbb
lods
ss
xor
dec
jg
call
mov
push
int
fwait
jb
cmp
mov
int3
gs
dec
jnp
popf
mov
in
mov
mov
es
fmull
push
mov
pop
pusha
sub
dec
push
cli
cs
dec
add
add
pop
mov
dec
and
pusha
mov
insl
popa
sub
dec
push
jl
push
popa
repz
and
aas
push
jno
push
xchg
push
mov
jo
call
sysenter
pop
add
push
inc
fs
jbe
pop
and
test
mov
fdiv
pop
cmpsl
sbb
aad
mov
pop
pop
cld
cwtl
add
cmp
xor
add
xchg
loope
xchg
cwtl
inc
sub
mov
cmp
sub
cmc
sti
sbb
testl
cmp
push
adc
seto
lret
or
jl
inc
push
icebp
sub
cmpsl
add
pop
xchg
leave
jbe
iret
and
sbb
pop
std
jp
push
push
ljmp
mov
cmp
push
jb
mov
xchg
enter
pop
dec
in
cmpl
pop
mov
pop
dec
das
popf
movsb
jmp
adc
mov
rorl
fstpt
out
nop
push
imul
mov
lods
lea
je
xchg
dec
js
movsb
sub
dec
shrb
mov
stos
fdivrs
lods
and
pop
or
test
jp
ret
negl
sub
xorl
stc
lcall
fists
dec
xor
rcrl
mov
dec
fildl
mov
jmp
stc
add
in
pop
outsb
push
hlt
mov
jmp
pop
cmp
adc
inc
aaa
jmp
lret
push
lcall
xchg
xchg
in
repnz
pop
inc
mov
popa
add
inc
cltd
aaa
cltd
mov
mov
xor
adc
or
xchg
dec
or
mov
stc
mov
neg
lret
mov
sub
fcoml
test
or
push
pop
sbb
or
cmpsb
lret
jo
stc
test
jo
cltd
add
fwait
arpl
dec
jns
mov
xor
mov
dec
in
roll
gs
and
mov
push
inc
pusha
or
push
fstl
pop
popf
and
jecxz
call
aas
dec
lods
or
fdivrl
stos
mov
push
pop
or
iret
add
add
jle
cmpsl
jecxz
out
cmpl
cmpb
xchg
movsb
inc
loop
or
stos
push
and
mov
jae
in
mov
xchg
sub
es
das
mov
movsb
inc
and
mov
bound
or
pop
sub
lods
je
test
test
mov
popf
xchg
ljmp
inc
shrb
mov
or
mov
fwait
xor
xchg
sub
add
in
in
adc
jbe
pushf
mov
jne
movsl
mov
pusha
jp
aam
xlat
push
sub
add
scas
repz
mov
js
dec
out
dec
aaa
push
cmp
cmp
xchg
in
mov
in
ljmp
pop
pusha
jle
cltd
decl
lods
sbbl
pop
std
popf
outsb
fdiv
push
mov
test
das
enter
std
jp
into
or
out
inc
mulb
cmp
add
imul
jo
pop
xor
subl
push
aam
push
imull
jecxz
out
mov
and
data16
iret
js
adc
xchg
xchg
cli
add
add
sarb
xchg
pop
int3
lcall
shll
dec
jle
aaa
add
fdivrp
mov
mov
or
das
int
adc
outsb
sub
js
loop
mov
adc
mov
jecxz
das
lea
mov
inc
int
into
arpl
scas
jmp
sbb
add
jle
push
pop
mov
mov
push
subb
push
stos
mov
nop
cmp
ds
mov
ja
pop
into
dec
jg
mov
jbe
jns
mov
and
mov
cmp
icebp
sub
repnz
xor
lea
pop
shlb
push
xorl
sbb
sbb
jecxz
mov
pushf
lods
pop
std
mov
or
inc
loopne
add
pushf
out
pop
sbb
movsb
add
dec
mov
into
test
mov
insl
fcom
in
mov
out
adc
add
pop
in
or
push
mov
inc
pusha
mov
bndldx
ffreep
cmpsl
clc
adc
jmp
xor
insl
mov
inc
repz
jecxz
test
xchg
mov
add
pop
dec
imul
jg
orps
out
or
push
cmp
adc
in
sahf
iret
sbb
or
jg
pop
inc
mov
pop
test
xor
das
lods
addr16
movsb
repnz
sbb
pushf
sub
mov
push
xor
mov
lret
push
xlat
sbb
inc
sbb
fdivl
push
test
pop
out
sti
dec
mov
inc
out
and
ret
jmp
in
loope
or
sbb
xor
dec
jns
dec
add
leave
and
shlb
iret
lahf
mov
adc
cmp
push
loop
test
lahf
mov
inc
aas
out
pusha
sahf
push
dec
arpl
jp
gs
cli
bound
inc
shrb
loope
mov
inc
adc
inc
adc
popf
mov
subl
jg
hlt
aas
cmp
cmp
or
mov
jns
imul
pop
dec
pop
xchg
sub
ret
pop
push
test
pop
sti
mov
insb
lods
mov
cmp
inc
add
aad
dec
xchg
jo
and
adc
mov
push
int
ret
cmc
pop
cmp
pop
or
jno
jmp
scas
xorb
mov
push
out
mov
and
mov
subb
mov
cmp
aas
mov
insl
inc
cmpsb
push
jo
mov
adc
pop
nop
stc
jg
scas
xlat
lds
loope
inc
dec
pop
push
cmp
adc
jge
cmp
or
leave
dec
push
scas
lcall
out
cwtl
or
xor
lret
xor
or
lcall
mov
jg
jns
and
lods
and
pop
icebp
lods
xor
add
fistps
ucomiss
lret
and
adc
or
xchg
cmpsl
sub
or
ret
push
add
sub
mov
cltd
lahf
sbb
mov
outsb
add
das
inc
cld
repz
lcall
andnps
pop
cld
xor
cmp
mov
shlb
jle
and
mov
stos
mov
xchg
filds
xor
and
push
sub
mov
add
xchg
mov
fldt
out
ss
data16
mov
mov
adc
sub
or
mov
lods
sub
lods
sub
xchg
int
xlat
xor
jne
popf
add
xor
inc
sbb
xor
incl
xchg
pop
insl
inc
adc
cmp
mov
jns
mov
pop
push
stc
sub
xor
inc
mov
jp
leave
out
or
lods
xor
arpl
lahf
cmp
push
fsubl
sub
jno
aas
in
lret
loop
sbb
mov
ret
mov
or
inc
push
xchg
lea
inc
mov
icebp
pusha
adc
mov
mov
push
jg
sub
push
lods
mov
cwtl
mov
nop
dec
jno
cmp
push
ja
push
rep
lahf
pop
pop
dec
cmp
sti
cmpb
ret
ret
xchg
and
jge
dec
cwtl
es
fnstcw
bound
lret
rorl
cmp
jg
xor
cmc
mov
les
adc
test
pop
imull
add
mov
jne
mov
mov
bswap
jecxz
or
jl
stos
jno
scas
sahf
lret
andb
loopne
push
jle
push
xchg
call
inc
je
add
lcall
lahf
sbb
pusha
sbb
xchg
testl
inc
xor
repz
push
enter
jb
shl
mov
pop
test
insb
lahf
pop
jg
xchg
sub
or
in
mov
les
pop
mov
inc
std
push
dec
mov
jo
fnstcw
testl
enter
testl
call
push
push
fs
lret
push
cmp
fmull
stc
jno
mov
sbb
pop
lock
cltd
shl
inc
fistps
daa
js
adc
jl
pop
in
pusha
mov
pop
mov
inc
jne
aam
pop
movsb
popa
cmpsl
xor
inc
out
nop
mov
adc
imul
dec
dec
lcall
and
andl
sarb
or
cld
and
jecxz
sbb
iret
daa
shll
jb
sbb
xlat
and
and
lods
inc
inc
or
loop
outsb
scas
int3
arpl
push
inc
sti
jae
nop
in
mov
jmp
pop
adc
fs
sub
cmp
fidivs
aam
sbb
xor
xchg
pop
fsub
loopne
ljmp
shll
cmpsb
stc
into
inc
imul
xor
loopne,pt
div
adc
dec
inc
mov
jo
dec
adc
movsl
jns
or
push
mov
into
inc
movsb
add
arpl
jle
pop
idiv
lahf
inc
mov
js
push
mov
dec
call
dec
fmulp
mov
out
das
push
repnz
lods
add
stos
out
les
push
loop
std
fwait
pop
pop
insl
hlt
ljmp
jmp
aad
lret
jp
out
or
cmc
loope
outsl
pop
cwtl
pusha
data16
cmp
adc
mov
jecxz
mov
fiaddl
popf
mov
insl
mov
mov
test
popf
dec
mov
cwtl
mov
and
dec
push
xor
popf
push
xor
cmp
xchg
lea
dec
cmp
out
sbb
hlt
adc
or
push
sbb
leavew
popa
add
sbb
cmp
adc
adcl
stc
lock
rcrb
cmp
lock
bound
inc
sub
or
mov
xorb
dec
cmc
push
testb
mov
sti
cwtl
clc
xchg
clc
xchg
push
sub
popa
clc
int3
inc
dec
ja
cmpsb
or
and
jne
cmp
pusha
mov
xor
cld
cmp
xchg
leave
push
pusha
mov
xor
mov
mov
pushf
push
cmp
cmp
mov
jne
inc
and
jb
movsb
jno
pusha
jge
aam
pop
mov
jge
jae
inc
or
lods
lods
mov
fsubl
cmp
jne
sbb
sbb
mov
sub
pusha
pop
cmp
xor
dec
lahf
inc
pushf
dec
cmpsb
and
mov
mov
fdivr
add
clc
push
adc
xor
jl
loope
jns
mov
out
xor
popf
pop
out
fstpt
cmp
mov
loopne
or
sahf
aad
mov
cmp
push
lret
xchg
pop
mov
mov
in
stos
sub
out
outsl
add
pushl
jl
ljmp
adc
loope
adc
pop
mov
xchg
push
stc
dec
add
sbb
sbb
andb
mov
push
daa
enter
aas
hlt
fwait
push
js
daa
outsl
cmp
data16
pop
jle
pop
mov
and
cmp
cmp
mov
lock
pushl
into
xor
lahf
stc
lcall
data16
out
mov
js
dec
stos
andb
mov
arpl
pop
ja
mov
sub
popf
xchg
pop
pusha
test
fdivs
adc
sti
nop
test
cwtl
shll
mov
fs
dec
sbb
mov
pushf
mov
xchg
jnp
adc
sub
dec
inc
jbe
cwtl
or
cmc
stos
das
movsl
movsb
out
jg
ja
js
xchg
mov
sbb
fnstenv
rclb
adc
sub
sbb
js
movsb
mov
jae
xchg
aad
push
cmpsb
pushf
jbe
ds
and
fucomp
imul
mov
out
repnz
nop
not
or
addl
mov
jne
hlt
mov
sub
cmpsl
mov
sub
inc
popa
aaa
xlat
pusha
or
adc
adc
fldcw
jnp
dec
xchg
test
jecxz
mov
mov
testb
out
into
pop
xchg
mov
cmp
in
cmp
gs
xchg
jbe
mov
movsb
imul
lods
mov
or
lret
jge
nopl
testb
mov
mov
lods
push
loopne
rolb
pop
hlt
jbe
nop
push
and
mov
fbstp
in
ret
stos
sbb
aad
inc
push
popf
inc
cvtpi2ps
jb
jmp
or
add
dec
adc
xor
mov
mov
xchg
enter
pop
xor
mov
orl
je
sub
lret
clc
nop
sbbb
fs
mov
pop
into
fistpll
jecxz
add
lahf
inc
cmc
push
in
loope
xchg
pushl
sbb
jl
sub
jecxz
ret
imul
jg
rorl
into
inc
jno
js
mov
imul
movsl
idivl
pop
inc
outsb
stos
or
or
test
push
sub
sbb
xor
push
mov
push
cmpsl
das
clc
pop
mov
sub
cmp
mov
fldenv
mov
cmovg
cmp
sbb
dec
dec
sbb
pop
scas
cmp
xor
popa
mov
lret
mov
xor
add
cmp
cld
pushf
out
aas
dec
divl
insb
sbb
and
cmp
inc
xorb
leave
arpl
add
cmpsb
movsb
inc
lods
add
add
daa
leave
lods
mov
sti
pop
pop
popf
andb
sbb
inc
cmp
jle
mov
scas
push
stc
in
aaa
iret
or
xchg
cld
fisttpl
inc
cmpsb
mov
loop
gs
mov
rolb
int3
inc
scas
mov
popf
cmpsb
mov
dec
out
outsb
mov
xchg
shrb
xchg
cmp
inc
ret
insb
jno
fdivs
add
dec
sti
cwtl
leave
add
push
fdivrs
std
and
cmp
addl
arpl
inc
shr
pop
inc
loop
mov
ds
mov
sub
xlat
sub
stos
inc
cltd
mov
jnp
repz
jl
adc
mov
pop
sbb
mov
add
movsb
in
aam
mov
jg
cmp
ljmp
adc
and
cs
mov
cwtl
les
rorb
jl
repz
add
pop
int
aas
or
shlb
jo
and
or
cltd
and
adc
out
movsb
cmp
jno
mov
jno
lcall
enter
mov
in
dec
test
inc
adcb
jno
pop
in
fdivl
dec
fwait
popa
dec
fsubr
add
inc
ljmp
gs
divl
inc
sub
inc
lcall
loop
rcrl
cmpsl
call
int
mov
mov
out
rcrl
sbb
jl
and
mov
enter
push
xchg
out
cmp
sub
fiadds
cmp
jmp
ds
pop
out
push
push
inc
mov
xor
mov
mov
xchg
aas
inc
mov
es
mov
dec
adc
jnp
xchg
std
push
sti
mov
add
sub
sub
stos
lret
in
repnz
cltd
outsl
icebp
xor
xor
add
arpl
movsb
in
mov
lret
jmp
add
cmp
mov
js
mov
fiaddl
sbb
dec
pop
mov
dec
fsubr
lods
and
shlb
lcall
inc
add
inc
and
outsb
push
mov
push
ds
dec
xor
sub
lods
xor
push
out
mov
mov
lahf
stos
test
test
mov
mov
rol
hlt
sub
movsb
sub
and
sbb
pop
adc
mov
ja
add
add
in
push
mov
and
pushf
insb
out
jbe
sub
call
lock
add
pop
mov
sub
mov
pop
mov
adc
out
sub
cltd
add
gs
sbb
outsl
lret
sahf
fdivs
les
inc
lret
ret
hlt
pusha
shl
cmp
mov
ret
pusha
pop
insl
mov
fisubrs
ficoms
and
xchg
add
inc
push
jle
and
xor
sbb
movsl
out
or
in
rcrb
and
push
mov
pop
mov
or
xor
push
ret
adc
push
lret
xlat
pop
sbb
push
mov
push
pop
std
cld
lcall
jo
ljmp
adc
sbb
or
xchg
adc
fildll
cmp
pusha
xor
cmc
fcoms
test
inc
inc
xchg
push
ffree
cs
add
inc
pop
lret
cmp
jecxz
lea
outsl
and
sbb
cmp
daa
sbb
sub
and
sbb
out
dec
lods
cltd
rclb
jecxz
inc
cmpb
aas
test
fsubrl
je
dec
movsl
pop
cmp
jle
lcall
loop
sarb
dec
xchg
sbb
sub
push
sbb
or
pop
add
mov
ds
nop
std
arpl
pop
cmp
stos
cli
dec
es
push
cwtl
dec
pusha
test
mov
dec
push
xchg
xchg
divl
mov
jnp
pop
ret
xchg
sahf
push
or
xchg
mov
inc
negb
mov
orb
outsl
and
clc
cwtl
xchg
mov
sbb
mov
or
or
nopl
pop
xor
test
int3
adc
or
inc
mov
ror
incb
cwtl
jecxz
xlat
xor
jns
push
sbb
inc
pusha
sub
mov
iret
and
or
mov
mov
jbe
cmp
out
sahf
sub
mov
call
jae
pop
arpl
fcompl
pop
mov
fsts
add
in
mov
jbe
adc
xchg
or
mov
mov
lods
dec
mov
cmp
out
fs
movl
je
testb
sub
lds
xor
pushf
mov
xchg
pop
sub
cld
stc
mov
jge
mov
xchg
nop
arpl
cltd
scas
rcrl
push
cld
add
orb
mov
jp
shll
stos
addr16
arpl
push
scas
dec
push
cmpb
gs
test
pop
or
adc
jo
leave
lds
in
fdivrl
movaps
xchg
pop
xor
mov
out
scas
sub
das
sub
jl
xor
lea
into
pop
add
sub
out
inc
cwtl
scas
fnsave
frstor
xchg
pop
mov
pop
mov
jb
mov
out
pop
inc
sub
scas
mov
fnstcw
in
decl
cmp
mov
push
andb
pmullw
sarb
nop
mov
stos
sbb
je
xor
les
insl
fistpll
xchg
fsubl
lods
adc
icebp
dec
add
enter
mov
and
repz
shl
outsl
add
inc
std
and
sub
inc
lea
push
mov
lock
push
in
pusha
leave
xor
jnp
cmpsb
cwtl
push
dec
mov
pop
roll
dec
in
je
add
xchg
pop
push
dec
fs
rolb
or
jl
sub
out
es
mov
sbb
lret
cs
data16
out
repnz
pop
ljmp
jl
aad
imul
inc
inc
mov
icebp
pop
or
leave
cwtl
ds
mov
jmp
jbe
aas
dec
dec
and
out
int3
lods
repnz
pop
test
or
adc
stos
icebp
mov
add
dec
mov
xor
push
add
jle
mov
or
pop
into
jb
pop
sti
test
movsl
pop
dec
cmpsl
mov
mov
aad
fstps
das
in
or
fistpl
push
xor
roll
mov
mov
popf
shll
mov
jbe
rclb
pop
mov
mov
or
insb
popf
mov
rcrb
rcrb
xchg
xlat
adc
icebp
mov
mov
bound
mov
bound
xor
jp
xchg
mov
lea
insl
int
cmp
stos
imul
dec
mov
scas
xor
jmp
jnp
push
popa
je
mov
jmp
leave
cmpl
xor
push
mov
ja
ds
mov
add
push
inc
cli
pop
dec
scas
stos
sbb
add
popa
mov
in
xchg
jb
xor
xor
sar
in
rcrb
out
mov
mov
enter
cmpsl
jns
xor
mov
inc
mov
jb
popfw
push
mov
iret
sahf
jg
add
popaw
and
mov
sti
stc
orb
rcrl
pop
fs
xor
jge
mov
push
lock
xchg
pop
outsb
pushf
dec
jecxz
int3
adc
xchg
xor
andl
ja
lahf
test
sub
test
pop
xor
dec
mov
cmp
cmp
pusha
push
inc
push
movb
push
and
xchg
sub
xchg
add
dec
repnz
and
add
jno
xor
sbb
sbb
es
mov
jo
jns
inc
dec
jbe
jae
pop
pop
mov
and
dec
dec
xchg
or
xor
std
mov
das
xchg
cwtl
and
mov
add
mov
sub
mov
push
fcomip
stos
testb
adc
xor
popf
insl
stc
mov
out
je
pop
xor
clc
cs
and
xchg
loopne
outsl
pop
push
dec
inc
pop
in
xchg
inc
inc
xor
add
jb
aam
cltd
or
adc
neg
dec
in
push
mov
aaa
adc
xchg
jae
sahf
stos
lds
dec
popa
sbbl
jns
stc
xorl
dec
sub
les
cs
cmp
shrb
mov
negl
or
jo
mov
xor
xor
hlt
into
ret
adc
lds
sub
mov
jmp
std
cmp
add
push
push
mov
mov
ss
pop
add
pop
mov
sub
insl
mov
bound
inc
cltd
jle
mov
or
mov
lret
mov
or
mov
or
pop
sbb
cmpsl
gs
xor
xchg
pop
aad
loop
sub
or
jecxz
and
gs
paddw
imul
push
mov
xor
xor
mov
push
xor
movsb
mov
aam
shr
sub
cld
movsl
arpl
and
inc
test
out
xchg
out
cmpl
shlb
cmp
test
fistpl
mov
dec
add
jnp
sbb
mov
and
repnz
push
jmp
shll
mov
imul
je
pinsrw
add
add
and
cmp
inc
jg
popf
in
shl
push
push
mov
mov
shll
cmp
js
cli
jnp
inc
nop
xor
inc
cmc
jg
lcall
xchg
mov
inc
hlt
scas
xorl
std
jmp
push
cmpsb
icebp
xchg
hlt
cwtl
mov
jne
or
aam
add
push
lods
cmp
enter
xor
outsb
mov
cmp
rorb
add
cmpsb
lcall
or
test
test
xor
nop
and
stos
mov
addl
lret
sbb
push
xchg
dec
xor
pop
xchg
dec
cmp
dec
jecxz
popl
cmp
adc
out
insl
bound
mov
mov
popa
adcb
imul
mov
push
sub
xchg
test
xchg
call
inc
xchg
out
shll
sbb
dec
shlb
lcall
push
mov
add
imul
pop
in
adc
adc
in
loopne
jg
bndldx
jne
outsl
cmp
gs
sbbb
movsb
clc
andl
jg
or
test
adc
pushl
jne
mov
rcrl
pop
call
mov
ret
lock
lds
push
jmp
or
cwtl
xor
sbb
sbbl
imul
sbb
mov
and
add
daa
push
xor
lcall
jns
outsl
cwtl
jge
popf
es
jb
orl
xchg
loop
sub
push
add
test
xchg
push
sar
adc
pushf
mov
or
enter
xchg
flds
jge
jnp
movsl
mov
inc
orl
pop
cmp
enter
lods
jl
mov
mov
imul
push
std
mov
xchg
ds
push
ds
call
imul
mov
jns
jle
imul
in
lret
pop
pop
sub
lret
xor
mov
mov
test
inc
test
xor
scas
or
push
dec
add
mov
adc
fnstcw
fcoms
and
dec
sub
mov
int3
lret
sub
or
repnz
pop
test
outsl
mov
lock
xchg
outsl
icebp
ja
sbb
xor
dec
stc
sahf
in
jmp
call
lock
pop
popa
sbb
xchg
push
lods
repz
jp
inc
mov
or
xor
fisttps
mov
sti
mov
mov
std
rcrl
inc
ss
dec
mov
lock
test
popa
or
push
cmpsl
jmp
sbb
mov
scas
push
mov
aas
or
popf
das
lcall
orl
mov
jne
push
sbb
push
add
cmp
loopne
pop
mov
jecxz
dec
add
shlb
ficomps
hlt
mov
cmpsb
mov
je
dec
repz
inc
ret
xor
popf
sbb
mov
repz
enter
mov
xor
sub
xchg
imul
or
sub
and
ja
insb
mov
idivb
repnz
mov
cmpsl
add
fstpl
and
out
imul
mov
cmp
pusha
mov
adc
std
cld
inc
std
add
mov
add
jmp
xchg
mov
in
cwtl
sbb
call
xchg
fmul
mov
gs
push
add
out
rcr
inc
add
out
jmp
out
dec
imull
dec
jbe
out
and
jns
imul
lahf
mov
lds
lret
ss
cltd
adc
cmp
std
pop
or
sbb
cmp
loop
lds
lds
clc
xchg
aad
mov
int
fucomp
ret
arpl
sbb
insb
repnz
add
scas
push
fwait
mov
add
push
sbb
loope
aas
daa
jg
pop
adcb
mov
sub
or
mov
movsl
fsubrl
adc
sub
mov
test
and
jae
mov
adc
mov
sub
fnstsw
lret
sahf
fs
repz
or
cmc
push
push
or
daa
cmpsl
mov
inc
lds
push
cltd
es
cli
or
dec
xor
in
mov
inc
mov
cmp
pop
ljmp
aas
pop
pop
ljmp
sbb
icebp
out
fdivrs
or
pop
out
inc
fwait
xor
add
add
pushf
mov
lret
push
rcrb
sub
push
or
fbstp
and
or
mov
test
lods
jne
adc
imul
out
sub
shll
test
cld
push
sub
dec
push
mov
jbe
movsl
movsb
cmc
pop
mov
inc
aad
loopne
xchg
insb
add
shrb
stos
dec
cli
loop
sbb
call
out
mov
pop
fnstenv
aam
sub
jmp
repz
pop
dec
cmp
insb
adc
mov
jne
cmp
inc
data16
xor
jmp
add
fwait
scas
ja
mov
mov
pop
xchg
inc
test
jno
ja
pop
push
rcl
das
cltd
lret
xchg
lcall
sub
cmp
cmp
fcmovu
xor
jne
sbb
sub
xor
loopne
jbe
xchg
shlb
popa
sub
sbb
outsb
sbb
ret
add
xchg
dec
mov
sub
lea
jnp
ficompl
push
push
xor
repnz
xor
fcomps
pop
cmpsb
jecxz
jbe
xor
jno
daa
orb
cli
inc
push
and
adc
adc
inc
imul
pop
mov
ds
lds
lods
pop
adc
jle
rorl
sub
jae
ret
pop
or
mov
and
and
into
xor
mov
cmpsl
daa
pop
dec
shll
push
sub
aam
fwait
xchg
sub
jnp
fldenv
jp
add
pop
lods
fnstsw
jle
movsb
ja
mov
push
mov
pusha
clc
push
push
or
cli
adc
fs
cmp
mov
jecxz
cmp
jbe
dec
psadbw
fmulp
xor
push
fcmovbe
sbb
aam
pop
push
or
or
xlat
iret
xchg
dec
out
jge
push
pop
int3
cld
push
xchg
aam
stos
lret
jle
stos
test
ds
push
push
mov
cld
adc
loope
hlt
xor
cmp
jne
cmp
cmp
fisubs
add
mov
hlt
add
lahf
mov
xchg
push
aas
pop
sub
adc
mov
ret
sub
mov
jb
rolb
and
sub
cmp
mov
divb
sarb
cmpsb
das
or
xor
mov
mov
fcompl
into
fdivr
add
inc
rcrl
shrb
not
adc
cmp
sahf
mov
test
and
mov
aad
mov
test
ret
push
sbb
lret
push
cmp
push
fsubrs
cmp
insl
addb
push
mov
pop
add
mov
mov
xchg
or
sub
jge
push
les
add
cmp
or
movsb
jg
loopne
xchg
xchg
int3
lods
insb
dec
xor
mov
jae
jae
and
and
and
movsl
push
add
cmp
repz
sbbb
addl
cwtl
fs
push
sbb
push
push
push
pop
cmp
cmp
movsl
pop
ffreep
mov
xlat
sbb
ss
pop
insb
mov
pushf
out
gs
and
mov
cld
daa
inc
test
stc
jge
inc
sbb
xor
mov
inc
inc
test
not
repnz
mov
mov
hlt
push
mov
icebp
pmaxsw
mov
push
mov
inc
adc
dec
aas
jp
adc
loopne
mov
aaa
out
xchg
iret
push
adc
mov
pushf
imul
and
or
sbb
mov
inc
sbb
mov
and
pop
sub
push
dec
aam
fs
sbb
sub
setns
and
push
add
mov
and
cli
and
adc
and
sbb
xchg
popa
add
adc
mov
insl
ljmp
inc
aam
jp
sbb
into
aad
es
mov
push
and
aaa
bound
ds
testl
pop
add
lret
sub
sbb
je
lret
dec
xchg
adc
push
mov
ret
cmp
sbb
sbb
push
ficoml
bound
jmp
adc
out
adc
out
scas
fstpt
cmpsl
add
shll
jnp
jp
xchg
mov
xchg
cmc
movsl
mov
inc
fildl
ret
inc
in
in
hlt
pusha
cwtl
mov
jmp
in
sti
les
bound
pop
icebp
lods
jle
jae
xor
mov
inc
jg
fxch
ret
mov
inc
mov
pushf
xchg
mov
sbb
lahf
aaa
imul
loop
jno
call
int3
adc
pushf
divl
push
shll
fisttpl
dec
or
icebp
jo
movsb
jg
sbbb
jp
cltd
in
loopne
add
sub
xor
pusha
mov
adc
loop
andb
out
xor
sub
adc
pop
mov
push
icebp
add
fwait
addr16
inc
ret
imul
js,pt
subb
mov
in
and
xchg
sbb
mov
gs
mov
pop
loopne
repnz
arpl
popf
push
and
push
pop
out
pop
es
push
paddusw
pusha
int3
mov
sub
push
test
les
movd
cwtl
outsl
cmpsb
inc
pop
cmc
dec
sahf
push
inc
mov
cmp
int
pop
pushl
push
or
inc
cld
push
mov
push
cmpsl
icebp
push
xchg
pop
stos
movsl
lcall
call
std
jb
stos
cwtl
insb
daa
imul
or
ds
ds
mov
insl
inc
adc
xor
pause
pop
pop
add
in
js
ljmp
lea
imul
das
cs
shll
mov
jmp
sub
jno
sarb
daa
add
add
or
js
shl
enter
repz
andl
in
inc
jne
test
loope
leave
fwait
add
xor
inc
or
out
jecxz
xor
dec
imul
in
adc
out
and
je
pop
sub
sub
outsb
push
push
xor
cmpsb
es
in
sahf
jnp
fists
pop
shrl
mov
jae
in
lret
stos
call
int
stc
pop
das
jae
inc
in
jg
nop
hlt
int3
ret
or
icebp
mov
outsb
out
adc
rolb
cwtl
mov
ret
lahf
insb
dec
cmpsb
mov
pop
mov
sbb
cld
inc
cwtl
and
and
enter
cmp
and
or
lahf
pop
mov
push
sub
inc
pop
adc
sub
xchg
testl
mov
lcall
out
in
sbb
int
mov
fldl
out
dec
fldl
popa
mov
mov
cwtl
nop
out
mov
int3
cli
sub
aas
adc
push
pop
or
sub
mov
mov
imul
inc
cmp
xor
or
lea
jbe
dec
cli
push
rorb
sub
xchg
push
fimuls
pop
out
cld
out
leave
adc
repz
sub
mov
jl
je
mov
leave
int
lods
mov
cmpb
adc
and
sbb
mov
insl
stos
sbb
add
ret
loopne
cmp
adc
ljmp
cmp
pop
pop
pop
xor
sub
lret
movb
loope
inc
pop
push
scas
push
and
jecxz
push
mov
into
mov
loope
lods
push
inc
mov
xchg
pop
jl
push
or
fcomp
cs
add
or
cli
or
add
mul
hlt
fists
jae
lds
daa
or
mov
xor
jne
xchg
das
call
in
push
psllw
test
inc
xchg
aas
push
mov
sub
fidivs
nop
jecxz
and
or
bnd
insl
les
icebp
cmp
push
jno
push
sub
jno
mov
ret
adc
jae
ret
sbb
out
insb
pop
or
fwait
and
lock
out
ret
in
mov
cmp
mov
mull
push
les
jnp
imul
pop
jne
ljmp
std
dec
jne
sub
dec
je
mov
and
fsubl
ljmp
sbb
test
das
mov
mov
mov
out
lods
or
mov
and
shl
cmp
bound
inc
mov
shlb
push
call
pop
jnp
cli
imul
pop
cmp
in
into
push
iret
push
and
int3
shlb
sbb
dec
rcr
mov
outsl
push
and
fsub
sti
or
movsl
leave
dec
insl
loope
push
lock
cmp
or
adc
mov
jge
fwait
push
test
or
pop
inc
sbb
sub
out
push
adc
jns
xor
loopne
cmp
shlb
ss
mov
shll
xchg
lds
fcomip
insl
scas
mov
jno
pop
inc
fcos
pop
push
pop
sbb
inc
push
fistpll
cmp
stc
lret
sbb
cwtl
push
jle
lahf
cmc
cmp
nop
movl
or
test
or
ja
jb
mov
xchg
insl
sub
or
lcall
ror
mov
insl
pop
dec
jg
xor
test
imul
xchg
cmpsb
adc
imul
dec
push
in
dec
inc
push
mov
inc
xor
xorl
push
loopne
imul
iret
jns
sbb
jp
jae
or
sub
add
mov
mov
divb
or
sbb
and
out
and
dec
sbb
lock
ss
ljmp
and
mov
pop
sub
mov
add
lods
fs
pushf
mov
mov
adc
cmp
stc
xchg
in
out
call
pushf
je
out
xor
push
push
pop
inc
pop
je
daa
xor
int3
mov
and
lcall
or
xlat
pop
mov
in
out
enter
mov
lock
mov
cwtl
ror
in
mov
adc
leave
jge
cs
fmulp
or
rorl
call
mov
dec
fldcw
in
pusha
xchg
lock
loope
insb
shrb
xchg
imul
rorb
loope
and
mov
push
scas
cld
sub
jg
test
nop
fimull
xor
add
lods
out
into
pop
mov
cmc
jmp
dec
sub
enter
jne
sub
or
dec
andb
dec
xchg
or
aas
aam
cmp
aaa
and
insb
test
inc
data16
aas
dec
xchg
aam
mov
mov
mov
roll
dec
pop
sub
adc
insb
mov
push
nop
mov
repnz
sahf
filds
jecxz
ss
addr16
cmc
inc
jle
std
out
les
loope
sub
call
popl
adc
adc
bound
ret
jmp
aad
aad
mov
cmpsb
dec
adc
xor
xor
sub
or
sbb
mov
dec
push
pop
lahf
cmp
inc
movsb
into
adc
jge
adc
push
rclb
fwait
movsl
adc
aad
aas
jae
mov
arpl
jge
mov
or
test
out
cmp
sar
rolb
and
push
jecxz
mov
lds
push
lahf
jecxz
xchg
and
xor
cltd
push
mov
and
cltd
inc
mov
xchg
adc
adcl
repz
or
pop
and
repz
ror
mov
lcall
xor
leave
cmp
je
sbb
subb
leave
nop
cmp
daa
fstl
rcr
lret
cmp
mov
rorb
aam
jle
ss
jae
inc
pop
sub
cmpsl
lret
pushf
or
scas
inc
fisttps
pop
inc
test
std
sbb
sbb
aam
jno
inc
addr16
mov
jne
or
inc
xor
stos
imul
fistl
aas
scas
jle
shll
out
xchg
push
push
outsl
dec
pop
jmp
sub
lea
mov
mov
sbb
inc
les
cmpsb
ficompl
mov
in
push
adc
and
pop
fisubrs
out
dec
inc
popa
lcall
push
xchg
dec
mov
test
daa
pop
movsl
xchg
push
jnp
out
inc
les
test
xlat
hlt
mov
divb
jbe
outsl
mov
or
mov
inc
xchg
into
fstl
das
dec
dec
cmp
lods
std
pop
or
test
and
xor
repnz
mov
loopne
pop
xor
incl
test
xor
pop
dec
test
std
adc
dec
mov
xor
add
lock
ja
es
pop
scas
pop
xor
and
xor
mov
jno
or
xchg
packssdw
insl
mov
push
data16
fstp
pushf
add
pop
inc
sbb
enter
mov
mov
dec
sbb
mov
adc
pop
je
inc
ljmp
jmp
cmp
push
add
xchg
xchg
adc
or
ret
out
dec
loop
add
aad
popa
or
sub
sbb
dec
scas
rolb
js
push
hlt
das
xchg
clc
sbb
stos
add
cmpsl
je
dec
mov
or
int
ds
adc
ret
enter
mov
movsb
imul
xor
cmpb
jmp
enter
pushf
and
inc
insb
jo
add
imul
das
pop
or
mov
fwait
hlt
push
sbb
fs
and
shll
mov
sub
mov
jecxz
push
in
pop
xchg
in
pop
stc
subb
push
cmp
es
in
movsl
mov
je
int3
inc
sbb
pop
jmp
aas
mov
addr16
mov
push
adc
pop
out
mov
cmp
add
push
add
push
popa
mov
sub
out
push
test
fimull
loopne
sub
popa
mov
mov
dec
cld
jmp
dec
pushf
shrb
aad
idivb
iret
xor
pop
mull
jmp
mov
mov
fisttps
into
jg
mov
adc
adcl
orb
dec
mov
jns
rclb
leave
fistpll
mov
cmp
and
mov
jo
icebp
xor
inc
mov
cld
fbstp
jg
mov
aad
into
lcall
mov
jno
sbbb
in
repz
sarl
stc
out
insb
adc
dec
mov
or
gs
dec
and
insl
lea
mov
call
fldt
push
out
pop
pop
jle,pn
insb
inc
pop
rcr
je
dec
in
cmpsl
pop
dec
out
push
xor
push
call
cs
ja
out
daa
dec
xchg
aas
adcb
add
pop
scas
push
das
jnp
jnp
jle
out
sub
or
sub
mov
adc
adc
int3
das
jno
adc
xchg
sub
out
shl
push
jns
push
cwtl
sub
lods
mov
imul
pop
pop
add
sbb
push
add
mov
and
xchg
push
or
jecxz
movsb
mov
push
outsb
xor
adcl
add
and
inc
jmp
push
sub
imul
popf
in
insb
jno
sub
and
jge
cld
jg
stos
pusha
out
sbbl
pop
jns
push
lcall
je
jno
ja
rcl
enter
out
inc
or
inc
pop
pop
cmp
fistl
pop
scas
push
cmp
sarb
insb
pop
dec
xchg
mov
fdiv
nop
xchg
sub
push
pop
jo
ds
mov
sbb
mov
cmp
mov
mov
int3
lock
mov
cs
cmpsl
mov
popa
ret
add
push
pop
cmp
lods
sub
push
mov
and
sbb
xlat
pop
xchg
cltd
sbb
hlt
pop
test
mov
stos
add
stc
in
mov
push
mov
or
xchg
loop
push
pop
jbe
cmp
js
cltd
stos
dec
dec
and
out
pusha
sbb
lock
mov
push
push
fucomp
out
popl
mov
out
in
jbe
cmp
clc
or
mov
xchg
mov
sub
and
scas
mov
daa
imul
lcall
stc
fs
xchg
pushl
scas
and
lret
cmp
lret
lahf
pushf
or
push
lret
das
stos
repz
daa
sub
mov
arpl
inc
and
pop
xlat
cs
push
xchg
test
inc
sbb
inc
aam
mov
mov
mov
rorl
test
and
xchg
push
push
pop
mov
scas
subl
add
add
repnz
pop
adc
out
jns
adc
inc
adc
jmp
arpl
std
xchg
jmp
xchg
pop
xor
mov
cwtl
xor
ja
adc
dec
mov
imul
outsl
ret
jmp
pop
in
pop
mov
mov
push
and
movsl
lods
sbb
movsb
and
pop
mov
rcrb
pop
lcall
inc
scas
test
add
into
dec
cmpsb
jle
mov
or
cmpsb
cmp
aas
jge
stc
lsl
cmp
inc
loop
dec
pop
add
cwtl
fstpt
js
jecxz
js
xchg
xlat
sbb
lock
push
mov
pushf
gs
pusha
xor
xchg
fildl
mov
insb
mov
and
jge
pop
mov
fistpl
cmc
mov
enter
fld
enter
mov
ja
adcl
nop
xor
sub
call
mov
sbb
movsb
push
adc
repnz
in
fwait
int3
cmp
and
lcall
bound
arpl
mov
mov
push
cli
mov
imul
ja
mov
cmp
imul
icebp
jbe
decl
jl
dec
in
shll
fs
movsb
das
jmp
or
push
jecxz
mov
mov
pop
popf
jmp
jmp
in
or
aad
or
dec
push
push
add
xor
mov
repnz
pop
stc
insl
shlb
pop
idiv
or
sbb
lret
cli
add
arpl
jae
mov
pop
hlt
and
xchg
int
xchg
pop
push
push
shl
subb
fxtract
add
les
mov
in
pop
inc
inc
add
add
lahf
sub
ljmp
adcl
in
xchg
mov
jmp
cmp
nop
xor
js
mov
cmp
clc
mov
xchg
pop
insl
mov
insb
in
xchg
or
jg
pop
enter
mov
adc
cmp
or
out
into
ja
fucomp
jp
movsl
bound
xchg
jb
pop
shl
negl
fsts
movsb
arpl
sarl
insl
xor
pusha
mov
sti
icebp
jno
roll
xchg
fmuls
sbb
jno
xchg
mov
jbe
mov
sub
mov
inc
or
sub
out
lock
inc
or
and
xorl
adc
enter
daa
xchg
mov
add
adc
aas
lret
mov
repnz
js
lret
mov
xorb
mov
jp
or
stos
dec
mov
cmp
es
jnp
push
mov
mov
inc
rol
sub
rol
aaa
xchg
notl
and
mov
push
jo
push
in
movswl
pop
or
adc
ljmp
mul
add
mov
sub
addr16
fbld
arpl
insl
fildll
pop
xchg
jns
arpl
insb
mov
hlt
pop
call
stc
incb
jmp
fiadds
in
imul
mov
pop
idivl
test
mov
sub
cmp
push
cmpsb
movsb
xchg
stc
mov
roll
lds
test
sbb
mov
aas
lret
sti
cmp
out
lock
inc
movsb
xchg
data16
xchg
rcrl
std
cmp
push
mov
mov
dec
sbb
mov
cmc
clc
jmp
fdivrl
adc
or
or
lds
cmpsb
cmp
mov
push
sbb
sbb
icebp
ret
jecxz
mov
imulb
in
sbb
pushl
sarb
jmp
scas
cwtl
jle
cltd
popa
push
imul
jl
arpl
mov
pop
inc
imul
mov
pop
mov
shll
je
push
bndldx
push
fwait
into
insb
mov
inc
xor
stc
sub
adc
push
xchg
dec
cmp
and
pop
fwait
int
mov
imul
dec
fmul
ljmp
int3
adc
nop
xchg
aad
push
inc
pop
sub
notb
repz
inc
add
rclb
push
movsl
inc
out
nop
inc
jecxz
stc
xchg
mov
cmp
xor
or
xchg
or
sar
mov
dec
shlb
dec
cmpsl
mov
outsl
dec
rclb
sahf
mov
push
xor
outsl
aaa
ret
aaa
or
pop
mov
sbb
pop
lea
cmpsl
mov
aaa
stc
jge
test
mov
ds
xor
lret
inc
mov
arpl
ficoml
ret
dec
insl
insl
adcb
push
aaa
sti
push
xchg
shlb
mov
out
add
mulb
adc
bndstx
jbe
call
cmc
dec
pop
enter
in
popf
mov
dec
lea
jp
jnp
or
hlt
mov
inc
in
mov
jmp
jo
mov
cmp
xchg
adc
int
sahf
imul
cmc
fwait
outsb
lods
cwtl
cmp
in
add
mov
addr16
popf
ret
jo
inc
or
xchg
dec
lea
pop
or
imul
add
mov
shrb
in
imul
dec
repnz
push
out
in
push
mov
xchg
in
loope
fnstcw
les
sar
fsubl
mov
dec
cmpsl
and
xchg
test
popf
fists
scas
vmwrite
push
mov
mov
cli
out
or
mov
mov
mov
addr16
outsl
ret
cs
sti
testb
jbe
outsl
jle
sahf
and
push
ret
and
or
push
xor
out
dec
or
or
mov
cltd
nop
sbb
mov
imul
fcmovnb
xchg
cmp
mov
cld
mov
ret
insb
xor
mov
dec
lea
stos
leave
mov
sub
ja
mov
sub
adc
sub
fmuls
push
in
int3
and
cmpsb
aad
lods
mov
push
ss
fnsave
fisubs
and
clc
sahf
clc
inc
xchg
lods
cmp
jp
or
or
mov
fsubr
incl
adc
or
add
mov
pop
or
loopne
ljmp
cs
lret
lcall
mov
xor
cmpsl
movsb
dec
pushf
or
sbbb
xor
cmp
stc
cltd
or
push
xchg
dec
aam
xchg
mov
push
mov
mov
lods
mov
rorb
mov
dec
mov
ficomps
xor
pop
inc
ja
filds
and
pop
adc
icebp
and
push
push
push
lock
push
sti
dec
cmp
xor
mov
divl
test
movsb
push
js
add
loop
xchg
stc
xor
and
adc
pop
rorb
cmpsb
add
sahf
pop
es
inc
aam
adc
add
testl
or
scas
dec
sarb
in
jno
loop
inc
cmp
arpl
shlb
in
xchg
xchg
cltd
testb
mov
pusha
mov
xchg
movsl
jns
jg
fdivrp
inc
sbb
pushf
sbbl
pop
mov
cmp
aaa
or
mov
xor
lods
call
cmp
stc
test
inc
dec
mov
push
outsl
jne
mov
mov
cs
mov
fisubrl
fdiv
xor
test
fs
xchg
aam
out
ja
adc
add
mov
pusha
into
cwtl
add
cmp
push
cmpsb
mov
or
xchg
pop
out
sub
push
stos
xchg
sar
xchg
mov
aad
loop
fs
push
and
pop
mov
mov
mov
insb
int
movsb
ret
movsl
fidivl
xchg
inc
mov
inc
jecxz
add
outsb
ljmp
mov
xchg
aaa
ja
add
push
das
dec
aam
cmc
les
pushf
push
xchg
fsubs
lock
bswap
rcrl
xchg
loop
pusha
pop
adc
adc
push
aas
fwait
into
add
dec
bndstx
inc
push
insl
lcall
int
scas
mov
shll
in
jle
rorl
popf
xlat
es
pop
out
loopne
add
push
xor
shrb
dec
inc
mov
pop
loopne
cwtl
push
outsb
and
cmpsb
push
fnsave
loope
mov
xchg
jno
lea
add
add
jno
orl
mov
movsl
sbb
mov
inc
jbe
mov
out
xor
dec
xor
cmpsb
jb
cld
or
outsb
mov
roll
shrl
rclb
lahf
out
xchg
enter
pop
inc
lahf
mov
in
sub
push
mov
cld
inc
mov
mov
sbb
mov
mov
sub
jecxz
xchg
pop
xor
fld
mov
icebp
imul
into
je
add
fnstsw
xlat
into
pop
dec
sti
stc
frstor
push
negw
push
pop
loope
not
pop
jmp
push
sbb
xchg
scas
pop
sub
addr16
lock
mov
shrb
inc
out
leave
out
adc
fnstsw
xchg
leave
jecxz
fisubs
lock
dec
xchg
out
fs
int3
xchg
push
mov
or
mov
cmp
push
cs
fidivs
inc
inc
and
in
nop
hlt
clc
ljmp
jl
cmpsl
add
fidivl
jae
mov
jbe
dec
mov
pop
pop
push
clc
xor
aaa
sbb
fnstsw
clc
call
dec
dec
lds
pop
adc
pop
adc
test
fwait
jns
adc
insl
dec
test
mov
ljmp
aam
mov
push
dec
jg
xor
mov
xchg
lcall
xor
frstor
adcb
inc
mov
in
or
add
push
je
das
mov
in
aaa
imul
xchg
sbb
icebp
mov
bnd
ret
movsb
cwtl
push
jae
jno
jmp
addr16
ds
outsl
out
jno
cmp
or
fldcw
out
call
test
mov
jge
pop
adc
pop
push
add
push
fcoml
cmpsl
pop
inc
fsubp
rclb
push
adc
sub
push
xlat
notb
testl
sbb
pop
cltd
and
jne
leave
sub
cli
sub
lcall
in
arpl
aas
movsl
mov
int
mov
mov
pop
adc
xchg
adc
aam
cmp
push
xchg
orb
or
pushf
test
xor
sub
faddl
test
dec
sbb
push
movlps
mov
cmp
in
xor
seto
repz
and
push
loop
dec
pop
in
mov
ret
pop
test
sbb
insl
cmpsb
pop
movsb
lcall
push
sub
movsl
mov
addr16
pop
lock
sahf
mov
mov
test
mov
add
mov
cmp
mov
adc
inc
dec
incl
jge
mov
sbbl
das
mov
pushf
aaa
add
add
adc
loop
mov
fwait
or
push
adc
sti
mov
pusha
xchg
add
sahf
jle
popa
xchg
stos
add
or
int
pop
fisttps
pop
dec
mov
pusha
aad
je
mov
jno
cmpsb
movsb
adc
mov
ret
pop
adcl
fiadds
es
mov
call
and
in
fcomps
hlt
dec
sbb
enter
test
clc
or
jne
sarb
addb
cmp
jge
into
xor
jecxz
movsb
add
jne
add
js
nop
and
push
scas
push
sub
ret
xchg
lahf
leave
popf
test
mov
sahf
aas
mov
inc
add
add
int3
rcl
pop
outsl
push
jle
add
pop
or
aaa
pop
jns
fsubs
mov
int
movsb
push
hlt
ret
jle
mov
ljmp
daa
adc
cld
lret
fs
filds
mov
adc
movsl
gs
adc
out
sahf
mov
adc
push
push
outsb
xor
mov
imul
ljmp
in
std
popf
fidivrs
add
add
inc
add
add
loopne
adc
verr
add
add
add
add
inc
or
