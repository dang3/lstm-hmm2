adc
adc
add
inc
or
adc
add
js
mov
or
adc
add
dec
or
adc
add
push
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
call
cmp
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
movl
mov
mov
xor
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
test
js
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
mov
jmp
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
push
lea
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
jne
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
mov
test
jne
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
test
jne
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
mov
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
test
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
mov
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
mov
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
call
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
test
je
mov
mov
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
mov
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
jne
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
push
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
call
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
mov
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
mov
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
mov
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
cmp
je
push
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
jb
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
cmp
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
cmpl
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
cmp
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
push
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
repz
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
push
push
call
mov
jmp
mov
cwtl
add
add
add
add
jne
cmpsb
mov
add
add
add
data16
in
hlt
push
mov
add
push
push
lea
push
push
push
call
outsl
popf
add
add
add
add
test
add
popf
add
add
mov
pop
in
add
add
scas
jl
add
std
jbe
repnz
in
xchg
lret
pop
mov
add
outsl
mov
mov
andb
mov
lcall
inc
in
push
push
push
push
push
lea
push
lea
push
push
push
call
out
mov
lahf
add
shrb
mov
add
in
add
divb
into
add
mov
outsl
add
add
in
add
fcompl
push
push
push
lea
push
lea
push
push
call
add
mov
jl
xchg
add
add
fiaddl
add
stos
add
mov
add
filds
lods
lock
pusha
addb
ret
data16
jns
add
add
add
add
xchg
jp
lret
imul
jb
in
in
lcall
push
lea
push
push
push
push
lea
push
push
push
push
call
push
add
cld
test
add
nop
lahf
add
add
mov
add
add
in
fiaddl
add
ficoms
add
mov
testb
lret
sub
pop
push
push
push
call
mov
add
lret
mov
add
jns
mov
cmc
add
jmp
add
cmpb
pop
mov
lahf
jno
xchg
add
add
lds
xorl
xchg
add
add
add
fcoms
fs
add
scas
add
add
push
push
push
push
call
out
add
lret
andb
cld
add
sti
jns
int3
xchg
lret
pop
add
add
add
add
push
nop
add
add
pop
je
pop
add
jp
sbb
pop
add
add
add
cmpsl
add
add
add
rolb
add
add
sub
pop
push
push
push
push
push
lea
push
push
call
out
imul
add
pop
mov
int3
out
add
add
add
stos
add
negb
add
cli
jecxz
mov
scas
lcall
add
add
mov
add
imul
push
push
lea
push
push
push
push
push
lea
push
call
fiaddl
add
xchg
icebp
fcmovne
add
scas
fadds
add
mov
arpl
mov
add
mov
pusha
pop
mov
rolb
enter
add
notb
nop
add
add
cwtl
add
pusha
lea
jp
out
xchg
lcall
lods
add
add
aad
xchg
mov
pop
sbb
lea
push
push
call
mov
cwtl
add
xchg
ljmp
addr16
in
js
mov
jae
add
mov
add
add
add
add
pusha
add
add
js
jae
enter
test
push
mov
add
ret
push
push
push
push
push
lea
push
push
push
call
roll
mov
icebp
add
add
add
add
repnz
mov
push
add
add
push
lods
add
out
jl
jae
negb
add
add
lcall
inc
hlt
push
lea
push
push
push
push
lea
push
push
push
call
jb
cwtl
pop
movsl
add
add
push
mov
cld
mov
lea
je
push
add
lock
add
push
orb
pop
hlt
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
stos
add
push
add
repnz
pop
mov
add
add
out
addl
lods
arpl
add
fwait
add
mov
fscale
out
int
add
xchg
add
add
lcall
pop
in
push
push
lea
push
push
push
push
call
aad
add
imul
add
popl
imul
add
leave
jge
add
add
mov
test
ret
add
add
push
lea
push
push
push
push
push
push
push
call
add
mov
add
andl
mull
insb
add
add
mov
push
rolb
add
add
add
aad
mov
add
mov
add
xchg
add
add
lcall
ret
inc
dec
add
push
push
push
call
sahf
add
js
add
add
sahf
jne
push
add
pop
cli
add
add
add
std
lods
add
add
jp
push
jmp
mov
add
add
add
jns
push
lret
scas
add
mov
pusha
loope
add
ja
fiaddl
mov
mov
add
addl
add
icebp
les
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
call
add
mov
out
leave
mov
push
add
sarl
fldl
push
adcl
add
ret
xchg
push
add
loopne
add
add
add
xchg
xchg
mov
mov
pop
mov
sub
pop
xor
push
lea
push
push
push
push
push
call
add
mov
add
shlb
mov
add
add
in
call
mov
add
in
data16
lcall
les
xchg
lods
push
shr
push
and
add
sub
shr
rol
add
sub
pop
add
pop
push
lea
push
push
push
call
stc
repnz
popa
in
mov
push
xchg
cmpsb
add
add
out
add
sti
push
add
scas
cmpsl
lods
xchg
xchg
sti
add
add
sub
xchg
int3
xorb
mov
mov
pop
mov
stos
int3
subb
cli
stos
mov
lds
lcall
jne
push
lea
push
push
push
push
lea
push
call
push
add
add
add
add
mov
push
pop
add
out
fdivr
add
rolb
add
add
pop
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
rcrl
add
pop
add
add
pop
add
int3
mov
add
mov
add
cwtl
add
add
loopne
mov
push
push
push
call
divb
leave
in
mov
pop
cmc
add
add
jbe
add
add
test
cli
add
add
sub
pop
movl
lea
push
push
push
push
push
push
push
call
add
push
jnp
int3
lahf
add
fs
add
add
pop
stos
hlt
pusha
mov
cmpsl
add
add
add
jo
icebp
fbstp
add
jbe
lcall
push
add
bound
mov
gs
stos
add
testl
rcrl
rolb
add
out
les
jbe
fwait
into
sub
pop
push
push
lea
push
push
call
scas
leave
mov
call
pusha
mov
add
xchg
out
xchg
xchg
popf
push
mov
add
cli
mov
scas
add
cltd
add
out
lahf
lds
pop
xchg
int
mov
rclb
add
add
lret
jl
add
add
add
jne
push
lea
push
lea
push
push
call
pop
mov
mov
add
add
xchg
mov
jnp
add
out
add
mov
mov
add
bound
cmc
insb
cwtl
add
push
add
cli
add
add
pop
push
add
rolb
add
fiadds
pop
mov
lock
pushl
push
push
push
call
test
mov
cltd
add
mov
pusha
add
add
mov
pop
into
add
add
pop
in
loop
addb
add
add
call
add
add
mov
add
xchg
add
fistps
int3
adcl
add
lcall
lds
add
inc
sbb
push
push
lea
push
push
push
call
pop
lds
enter
add
add
out
jle
add
add
add
loope
fs
in
lcall
pushf
stc
add
add
rcll
add
in
add
add
mov
jne
add
xchg
fcomp
add
add
sahf
sub
pop
pushl
pushl
push
push
push
push
push
push
call
loopne
cwtl
add
add
mov
mov
faddl
jno
push
mov
lods
mov
pushf
push
add
add
jne
push
add
bnd
add
fildl
bound
pop
add
mulb
pop
mov
add
lcall
outsl
aaa
add
push
push
add
sub
push
xor
add
add
sub
pop
dec
pop
push
lea
push
push
push
push
lea
push
push
call
add
push
les
push
mov
fdivl
mov
jmp
int3
push
push
icebp
add
ja
out
in
popf
push
add
popa
lock
add
jne
add
mov
fs
pop
cmpsl
bound
add
add
add
add
add
add
add
add
add
mov
in
in
pushl
push
lea
push
push
call
jns
test
push
push
push
mov
jns
fcomi
add
add
add
hlt
add
add
scas
rolb
rolb
add
jecxz
addb
add
add
mov
std
add
xchg
stos
jae
in
hlt
lcall
outsl
add
push
push
push
push
push
push
push
push
call
add
loop
aam
add
add
mov
test
cmpsb
pushf
arpl
cli
std
lds
add
mov
add
add
loope
add
cli
loopne
mov
mov
mov
add
sar
into
add
jb
push
icebp
movl
push
push
push
shr
rol
add
push
sub
add
add
inc
sub
sub
pop
lea
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
movsl
push
addl
rolb
pop
fistps
jo
push
lock
xchg
jae
js
add
fiadds
push
lea
push
push
call
add
add
add
cmpsl
add
pop
lods
xchg
add
pop
add
ja
mov
hlt
rolb
pop
mov
rclb
xchg
add
js
roll
mov
add
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
scas
leave
jle
pop
test
movb
arpl
add
pop
clc
add
add
fldl
mov
add
mov
mov
add
insb
cld
fsts
add
out
jmp
testl
mov
nop
mov
in
xorb
add
lcall
rclb
lea
push
push
call
xchg
add
sahf
pop
add
add
add
jbe
add
mov
add
add
lahf
shl
jno
loopne
sbb
js
movsl
add
add
lahf
fstl
movsb
mov
mov
add
add
in
gs
add
in
mov
add
add
test
lcall
clc
push
push
call
jne
jp
add
add
hlt
xchg
shl
movsl
add
mov
out
scas
fists
add
add
ljmp
pop
loopne
add
fdivl
cwtl
pop
mov
add
add
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
push
add
leave
add
add
scas
mov
jmp
mov
xchg
mov
lds
aam
pop
in
xchg
xchg
test
mov
pop
lds
add
add
add
jecxz
in
nop
mov
lock
add
add
jp
icebp
icebp
add
imul
fistl
jle
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
js
mov
add
xchg
movsb
mov
jle
mov
mov
data16
add
xchg
cmpl
xchg
push
faddl
sahf
ror
add
fiaddl
stos
sar
add
xchg
lods
xchg
mov
mov
jecxz
add
lods
add
sub
pop
mov
push
lea
push
push
push
push
call
pusha
lcall
add
out
add
mov
add
xchg
xchg
add
mov
add
add
out
fadd
test
jno
rolb
jmp
add
push
push
add
les
mov
add
jmp
add
ja
add
jmp
add
sub
pop
add
add
push
push
call
cmc
push
in
fidivrs
xlat
add
add
cli
fcmovb
jl
pop
add
mov
fldl
js
cltd
push
mov
pop
mov
mov
add
add
andl
js
in
hlt
add
outsl
mov
xchg
add
movsb
in
push
ja
add
push
sub
pop
add
mov
push
push
push
push
push
call
add
stos
add
mov
add
pop
add
rorl
push
add
clc
jae
mov
lcall
add
nop
inc
add
aam
incb
add
mov
add
jmp
add
add
add
add
add
jge
cwtl
lock
in
lock
lcall
xor
push
lea
push
push
lea
push
push
call
pushf
add
pop
mov
pop
add
pop
add
add
cli
add
aad
add
add
lcall
add
add
scas
add
add
mov
add
ja
jle
sub
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
jne
add
jmp
add
hlt
in
add
add
add
lcall
cwtl
test
lret
or
lcall
push
xchg
cmc
je
iret
pop
push
mov
test
mov
loop
push
add
push
add
lcall
mov
fiaddl
les
testb
add
sub
pop
add
push
push
lea
push
push
push
lea
push
call
frstor
jge
pop
add
out
add
mov
test
popf
testb
arpl
cmpsl
pop
add
add
add
add
movb
add
pusha
add
mov
iret
aam
add
in
lcall
inc
or
adc
pushf
lea
push
push
lea
push
push
push
push
push
push
call
mov
loopne
in
pop
add
stos
xchg
js
mov
outsl
add
add
les
ja
add
add
mov
add
add
jnp
mov
mov
mov
lcall
mov
sub
pop
add
push
lea
push
push
push
push
lea
push
call
call
mov
jne
in
add
xchg
add
add
add
in
add
add
mov
adcl
test
xchg
add
addb
out
lea
add
add
push
je
fwait
mov
sahf
jb
in
call
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
fisubrs
xchg
add
mov
push
in
sti
addb
add
xchg
add
sarb
push
add
lock
add
add
call
jo
add
in
add
add
pop
aam
mov
jecxz
faddp
mov
jb
in
fdivr
lcall
dec
add
icebp
xor
adc
push
push
lea
push
lea
push
lea
push
push
call
xchg
lcall
jno
pushf
stos
add
add
add
add
movsb
jbe
mov
add
out
cld
lret
out
test
add
add
add
push
mov
add
pop
mov
fadds
call
pop
push
push
push
push
push
push
call
jo
lcall
add
mov
imulb
out
add
sbbl
cltd
scas
xlat
add
int
mov
mov
shl
xchg
add
cmpsb
add
scas
add
mov
mov
xchg
add
push
add
sub
pop
mov
push
push
push
push
call
mov
add
add
add
add
jecxz
pop
mov
add
imul
call
add
ja
pop
mov
add
add
mov
add
pop
add
leave
mov
push
lcall
xchg
loopne
add
imul
pop
sub
pop
xor
push
push
push
push
push
push
push
push
push
lea
push
call
add
xchg
add
add
add
add
sahf
js
out
popa
add
add
roll
lret
mov
lcall
les
push
lea
push
push
push
push
push
push
call
shll
add
jecxz
add
add
enter
idiv
add
add
add
jbe
jl
mov
stos
lahf
add
mov
bnd
mov
imul
les
add
clc
lods
call
add
sahf
pop
test
sahf
mov
faddl
enter
sti
popa
jge
lea
push
push
push
call
add
lods
add
add
jl
pusha
add
movsl
mov
jp
add
je
add
jbe
jmp
scas
pop
add
mov
mov
mov
add
into
push
add
xchg
add
lcall
movsb
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
jbe
add
lds
mov
rcll
add
mov
add
add
add
add
scas
pop
add
mov
add
out
add
push
je
xchg
push
movsb
add
shll
nop
int3
mov
add
add
add
xchg
add
add
push
jle
sub
pop
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
mov
test
out
add
roll
push
leave
adcl
fnstsw
add
imul
mov
jmp
add
add
jne
add
lret
adcl
add
lret
push
in
pusha
add
add
add
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
jecxz
sahf
cmc
imul
mov
fdivs
push
aam
bound
sar
data16
mov
aad
push
enter
mov
lea
sub
pop
add
mov
push
push
lea
push
call
add
add
add
add
add
cli
mov
mov
add
jge
arpl
pop
jge
add
enter
mov
int3
nop
int3
mov
fnclex
pushf
add
test
jecxz
std
add
flds
jb
mov
add
cmpsl
std
jp
push
push
add
sub
pop
xor
push
push
call
add
int
arpl
sbbb
mov
add
ja
ret
out
pop
lret
xchg
pop
add
pop
in
add
out
add
xchg
ja
add
cmpsb
stc
pop
mov
add
loop
mov
xchg
lcall
lods
sub
pop
add
push
push
call
bound
push
fisubl
add
add
loope
jmp
std
mov
add
xchg
add
jl
fldl
jns
sub
xchg
ljmp
xchg
rcr
push
nop
add
mov
in
clc
pop
mov
xor
push
push
push
push
push
push
lea
push
call
push
imul
add
add
xchg
mov
mov
push
addb
push
pop
push
leavew
add
ljmp
lods
add
add
add
add
dec
sub
adc
cmp
push
push
lea
push
push
push
lea
push
call
enter
test
mov
add
aad
add
add
flds
scas
add
jp
push
add
add
add
bound
add
add
mov
in
fcompl
ret
cmc
xchg
push
mov
insb
and
inc
call
add
add
imul
add
xchg
call
fs
xorb
add
loop
add
push
add
mov
add
lcall
rcll
xlat
and
push
push
push
push
call
fbld
popa
push
je
lret
add
lds
movsb
movsl
mov
add
imul
mov
hlt
add
in
pop
add
in
pop
mov
push
push
add
dec
shr
push
and
add
ror
lea
xor
not
sub
sub
xor
pop
rol
add
pop
push
shl
add
pop
pushl
push
push
lea
push
push
call
mov
add
imul
stos
cwtl
add
cmc
ja
fsubl
jno
mov
add
add
add
testl
add
add
fucomp
add
add
in
lock
call
push
xor
shr
shr
pop
push
push
push
inc
push
and
add
xor
dec
sub
inc
pop
xor
ror
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
loopne
in
mov
leave
mov
insb
addr16
shll
push
ja
sahf
add
repnz
mov
lret
jae
adcl
fsubrs
add
add
std
out
add
in
fdivr
lcall
push
ror
shl
shl
pop
push
push
sub
pop
call
mov
push
inc
pop
push
push
lea
push
push
call
add
roll
mov
add
add
add
jle
xchg
orb
mov
mov
fldl
xchg
xchg
add
rcl
xchg
ljmp
add
call
fldl
test
cltd
out
mov
in
hlt
lcall
mov
push
push
push
push
push
call
fdivl
mov
cli
add
add
mov
test
add
cwtl
out
in
mov
mov
add
mov
add
add
int
test
add
enter
addb
jge
scas
mov
pop
add
xchg
add
push
add
sub
pop
add
add
push
push
push
push
lea
push
push
push
push
call
stos
add
add
js
fwait
in
cli
jecxz
add
shlb
push
notl
pop
scas
lds
out
add
add
add
mov
pushf
mov
mov
into
add
js
add
test
pop
add
lret
add
ret
inc
dec
add
push
push
push
call
push
push
nop
fcoms
add
jno
add
jecxz
jecxz
lahf
add
fld
jne
add
push
jecxz
add
in
add
add
pop
cltd
lahf
cli
mov
lods
add
add
hlt
fistpl
outsl
movb
fadd
ret
add
pop
mov
xor
push
pop
add
push
add
add
shr
sub
pop
push
push
rol
inc
shr
shr
pop
mov
push
push
lea
push
push
push
call
addl
test
add
popf
mov
test
std
test
add
int3
fstps
pop
push
insb
add
jo
xchg
mov
add
lret
popl
movsb
les
in
lock
xor
push
push
lea
push
push
call
adc
xchg
test
push
push
xchg
mov
lahf
lcall
mov
rolb
add
add
mov
pop
mov
push
add
lock
add
push
push
push
push
lea
push
lea
push
push
call
mov
sti
add
push
add
push
ljmp
add
add
mov
xchg
push
mov
xchg
nop
add
jmp
add
add
xchg
aad
filds
sahf
loop
cmc
add
xchg
add
cld
test
dec
add
imul
movsb
cltd
mov
pop
cmc
loope
fcmovnu
insb
add
add
push
push
push
call
add
out
mov
mov
add
int3
add
mov
add
mov
add
add
or
add
add
iret
mov
lcall
mov
xor
push
sub
sub
inc
inc
pop
rep
push
add
inc
pop
mov
xor
push
xor
rol
pop
or
je
push
shl
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
pop
jb
push
add
jno
jecxz
sarl
jb
std
add
loop
outsl
add
add
add
sub
pop
xor
push
push
push
push
lea
push
push
push
push
call
xchg
push
add
mov
pop
in
cwtl
fwait
mov
fadd
jl
mov
enter
xchg
fs
rcrl
pushf
add
out
add
pop
jns
add
add
lcall
les
push
push
push
push
push
push
push
push
push
call
movl
add
add
mov
into
add
add
call
xchg
imul
mov
lds
lcall
push
sbb
jno
adc
push
call
add
add
test
ljmp
movsb
pop
add
cmc
add
add
add
add
jp
add
add
insb
add
rolb
add
fwait
add
add
add
in
hlt
pop
xor
push
push
push
push
call
add
pop
mov
out
add
jns
xchg
add
xchg
add
add
scas
cwtl
rolb
push
jge
lods
add
fildl
les
add
push
sub
sub
pop
add
add
push
push
call
enter
into
add
test
fstps
add
add
faddl
imul
push
ror
pushf
pop
lods
loopne
rcr
add
cld
mov
scas
add
sub
pop
push
push
inc
pop
mov
push
push
push
push
push
push
push
call
xchg
add
add
aam
add
mov
outsl
stos
lahf
fildll
cmpsb
xchg
add
call
add
add
push
in
call
push
push
call
jmp
mov
pusha
fstpt
fsubrs
out
loope
pop
jp
cwtl
add
pop
add
loope
add
add
popl
xchg
loope
in
clc
pop
add
push
push
call
cltd
add
lods
in
jp
mov
data16
add
add
loopne
add
lret
add
add
addr16
pop
push
add
cmpsl
push
ret
ret
add
add
scas
scas
stos
fcmovu
mov
cmc
out
add
lcall
lock
dec
ror
pop
pop
rep
push
dec
pop
mov
xor
push
shl
pop
or
je
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
add
roll
add
add
popa
lods
add
add
imul
rolb
xchg
cmpsl
add
add
jb
jae
add
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
jle
mov
call
ja
add
int
stc
add
mov
outsl
pop
lcall
xchg
add
push
mov
mov
push
int
cltd
add
sub
movb
add
push
add
sub
pop
rep
push
push
lea
push
lea
push
lea
push
push
push
call
jmp
iret
add
orb
sahf
lret
add
out
mov
loope
lods
add
jge
mov
ja
jmp
imul
gs
loop
in
in
lcall
push
push
sub
push
push
pop
add
rol
not
not
rol
sub
add
not
ror
pop
inc
sub
shl
pop
push
lea
pop
pop
mov
push
inc
xor
pop
mov
mov
push
lea
ror
pop
jmp
push
push
push
push
push
push
push
push
call
in
add
js
add
aad
mov
cwtl
mov
add
les
sahf
add
int3
add
loop
add
enter
add
add
mov
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
jmp
add
shrb
push
jp
add
cmpsl
out
ja
add
out
mov
mov
mov
add
xchg
aad
add
add
out
addb
add
out
mov
jns
add
lcall
in
push
ror
sub
pop
add
push
push
ror
pop
push
push
push
call
add
js
mov
test
add
icebp
lods
testl
add
add
add
out
mov
imul
in
clc
lcall
push
push
not
dec
pop
mov
push
rol
pop
pop
pop
push
push
push
push
push
lea
push
call
add
scas
add
add
add
loopne
fnstsw
in
mov
mov
mov
mov
in
add
add
add
cli
pop
mov
jne
rcr
cmpsb
mov
add
mov
mov
into
iret
add
mov
add
sub
pop
pop
push
ror
pop
pop
push
shl
ror
pop
leave
push
push
push
lea
push
push
call
jo
cwtl
add
mov
aam
ret
fwait
loop
ficoml
mov
mov
add
arpl
nop
mov
sub
pop
ret
push
sub
add
dec
pop
push
push
pop
mov
push
xor
pop
add
push
push
push
call
add
fidivl
stos
add
outsl
jmp
mov
add
pop
xlat
into
imul
mov
loopne
add
jnp
add
mov
add
aam
fiadds
xchg
imul
je
roll
add
mov
jl
lods
add
add
sub
pop
push
push
push
push
push
call
sbb
add
pop
icebp
add
add
xchg
mov
pushf
add
add
push
push
add
add
lods
aad
lock
imul
mov
ljmp
add
mov
add
add
out
mov
add
in
testb
xchg
push
push
add
pop
movl
push
sub
pop
addl
push
push
push
lea
push
push
push
push
lea
push
call
lret
add
stos
push
jl
add
mov
add
sahf
add
rcrb
mov
shrl
int3
push
xlat
push
add
mov
add
lcall
rorb
popa
add
add
xchg
fnstenv
xor
pop
mov
push
lea
push
call
sahf
enter
in
jno
imul
mov
cmc
add
push
mov
push
jnp
jae
add
ja
add
popa
enter
add
stos
pop
add
mov
mov
pop
push
push
lea
push
push
lea
push
push
push
push
call
movb
xchg
mov
add
fiadds
add
add
fwait
les
sti
add
xlat
scas
cmpsb
add
mov
cltd
push
stc
iret
xchg
add
add
add
add
push
pop
mov
add
pop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
add
add
jle
stos
mov
shrb
add
data16
imul
add
mov
lock
push
mov
jnp
add
lods
push
push
imul
add
enter
sub
pop
pop
push
add
shr
xor
pop
leave
push
push
push
call
js
cmc
stos
in
add
in
add
add
xchg
ja
add
int3
add
fbstp
aad
push
add
jne
add
int
pop
xchg
add
jns
add
lcall
add
push
push
dec
pop
mov
push
lea
sub
pop
add
push
dec
pop
push
push
shr
add
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
cmc
add
add
enter
iret
lea
cmpsl
fcomps
iret
mov
out
jnp
movl
loopne
lcall
push
push
call
filds
add
add
add
add
mov
js
add
cmc
add
lcall
testl
push
ror
pop
addl
push
rol
inc
pop
push
call
push
push
push
push
push
push
push
push
push
call
mov
add
add
add
arpl
cmpsl
les
mov
add
je
mov
cwtl
idivl
in
add
add
add
add
mov
gs
fs
fcoms
imul
add
jp
add
push
add
push
add
add
mov
movsl
testb
cld
push
lea
push
call
sti
add
add
test
add
xchg
add
add
loope
fidivs
insb
fiadds
xorl
add
add
xchg
stc
lret
lods
incb
mov
add
jbe
mov
pushl
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
pushf
add
xchg
push
sti
mov
add
cmpsl
in
add
imulb
fldt
add
add
in
lret
add
mov
jl
push
xlat
add
add
add
add
jb
lret
add
ljmp
push
add
add
pop
call
push
push
lea
push
push
call
add
test
movsl
add
notb
jecxz
popa
icebp
pop
sti
mov
add
movsl
add
add
add
imul
add
add
test
cld
pop
jle
fnsave
add
hlt
add
ret
in
lock
lcall
jge
add
test
call
loopne
shl
inc
pop
pop
pop
push
add
not
shl
pop
pop
push
inc
sub
shr
rol
pop
pop
push
push
push
call
xchg
pop
icebp
leave
arpl
test
add
mov
add
add
add
mov
iret
add
cli
add
pushf
mov
out
js
cli
add
sub
pop
leave
push
lea
push
push
call
mov
js
ljmp
add
ljmp
add
add
mov
jne
add
icebp
cltd
mov
addb
add
aad
mov
fiaddl
add
push
sub
shl
pop
push
push
inc
shl
pop
mov
add
push
push
push
push
push
push
push
call
add
mov
cmc
mov
add
movb
rcrl
subl
shll
add
jecxz
add
add
add
stos
movsb
pop
add
add
add
in
cltd
add
fs
lods
mov
add
aad
sub
pop
push
push
add
pop
push
push
push
pop
push
push
push
push
call
mov
cli
in
jp
add
add
push
push
add
imul
addl
add
jl
add
add
sbbb
add
add
add
mov
sub
pop
movl
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
shll
fmulp
add
add
add
cmpsl
pushf
mov
mov
add
add
jle
out
xchg
push
add
mov
xchg
add
add
xchg
decb
add
lcall
add
je
lahf
push
call
add
add
add
icebp
mov
stos
mov
lret
add
movsl
out
pop
add
add
push
add
outsl
add
movsl
bound
add
add
add
sub
pop
call
push
push
lea
push
push
push
push
call
enter
add
incb
in
add
lods
testl
fidivrs
add
xlat
int3
out
jb
add
jb
leave
add
add
add
bound
pop
aad
add
xchg
jne
mov
mov
lods
jmp
add
add
sub
pop
push
push
push
call
push
add
ret
add
xchg
popl
add
cwtl
bnd
add
sahf
stos
xchg
lds
mov
add
loope
add
lret
ret
mov
int
in
clc
lcall
and
incl
xor
rol
pop
cmpl
jne
push
push
push
push
lea
push
push
call
jno
aam
mov
mov
in
add
cwtl
fildl
mov
fwait
outsl
movsb
pop
js
aam
add
aad
add
push
add
in
incb
add
pop
pushf
addr16
lcall
pop
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
cld
add
push
add
add
add
out
add
loope
add
mov
fildl
js
into
add
xchg
fldenv
push
mov
lcall
pop
push
shr
inc
sub
pop
leave
push
push
push
push
push
lea
push
push
push
call
jmp
add
xchg
add
loope
xchg
add
fninit
pop
stos
add
add
mov
add
stos
add
ljmp
xlat
mov
mov
sarl
add
add
add
pop
clc
add
into
jne
repnz
add
loope
xchg
add
add
add
add
sub
pop
ret
push
push
push
call
mov
mov
loope
add
fadds
sti
mov
mov
mov
cwtl
iret
movsl
fimull
arpl
push
add
mov
add
out
mov
shr
jmp
mov
cltd
add
in
clc
pop
mov
push
push
push
push
push
push
lea
push
push
call
ret
outsl
add
enter
int3
add
add
add
loopne
les
add
add
add
mov
add
arpl
add
cmc
add
loopne
add
ja
sahf
loop
in
loopne
add
push
push
sub
pop
push
push
inc
add
sub
pop
push
push
rol
not
sub
pop
push
mov
push
lea
push
push
lea
push
push
push
call
stos
add
add
je
add
xlat
xchg
sarb
sahf
add
leave
in
fcoml
int
xchg
lds
push
aam
movl
test
repnz
mov
add
add
xchg
xchg
pop
push
add
add
add
add
add
lcall
inc
cmp
call
call
add
aad
js
add
add
add
jmp
jmp
push
jne
out
or
add
add
jl
jns
mov
lcall
add
call
inc
mov
clc
pop
add
mov
push
push
call
test
mov
in
mov
add
push
mov
shl
push
rolb
add
hlt
add
lods
add
add
add
pop
add
divl
add
mov
stc
sub
pop
mov
push
inc
pop
add
add
push
inc
dec
lea
lea
pop
mov
push
add
inc
shl
pop
mov
push
xor
add
pop
cmp
jne
push
push
lea
push
push
lea
push
call
mov
imul
add
add
lods
add
add
into
cmp
jl
mov
ljmp
add
add
add
mov
sub
pop
cmp
jne
push
sub
add
pop
mov
movl
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
xchg
movsl
loopne
add
add
insb
stos
pusha
clc
xlat
push
mov
add
pop
xor
addb
add
jl
add
add
sarb
scas
add
jle
push
lret
add
icebp
loope
add
test
fldcw
sub
pop
jmp
mov
push
lea
push
push
lea
push
push
call
cmpsl
add
enter
add
leave
mov
add
push
add
sahf
stc
add
add
out
jp
add
jnp
push
add
fstp
add
add
rolb
xlat
pop
mov
sub
pop
mov
push
not
shl
rol
pop
sub
jne
mov
push
shl
pop
movl
jmp
push
rol
pop
mov
push
push
lea
push
push
lea
push
push
push
call
xchg
rcll
stc
int
pushf
add
pop
add
out
imul
pop
mov
cli
add
std
arpl
jle
sahf
cmc
jo
mov
mov
loop
loope
xchg
loopne
mov
in
in
lcall
nop
mov
add
cmp
jne
push
lea
lea
pop
mov
movl
push
sub
add
pop
jmp
push
shl
inc
shr
inc
pop
mov
cmpw
jne
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
add
cmc
rol
lods
andl
add
push
push
pop
movsl
pop
addr16
icebp
shrl
hlt
fimull
cmpb
sub
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
test
add
add
outsl
push
push
je
add
call
add
add
add
pop
arpl
scas
sub
pop
movl
jmp
push
not
pop
pushl
push
lea
push
lea
push
push
push
lea
push
call
into
cmpsb
cmpb
add
xchg
add
xchg
add
add
xlat
add
add
add
add
rol
add
mov
loopne
add
repnz
add
jge
mov
jns
jae
add
jno
jns
add
lea
call
pop
push
add
pop
mov
mov
push
push
push
lea
push
push
lea
push
call
out
push
xorl
add
cmpsl
jno
out
mov
add
mov
add
mov
loop
add
stos
orl
test
mov
add
pushf
aad
push
cli
add
push
out
enter
push
sub
pop
mov
push
push
ror
shl
not
push
and
add
xor
not
sub
ror
pop
shl
shl
pop
push
push
push
push
push
push
push
push
call
push
add
cmpsl
add
add
fildl
add
cmc
mov
add
loopne
push
test
add
add
add
add
add
push
push
push
lea
push
push
push
push
call
add
xchg
add
mov
add
add
add
add
movsb
mov
add
add
loop
ja
add
push
sub
pop
call
push
sub
pop
cmpl
je
push
push
not
inc
xor
sub
push
xor
add
dec
sub
rol
lea
rol
pop
pop
push
push
push
push
call
add
cmpsb
imul
test
xchg
icebp
out
rcl
mov
into
loopne
add
scas
pop
aam
xchg
add
add
fmuls
sub
pop
push
call
push
rol
shl
pop
cmpl
je
push
push
rol
shr
push
and
add
shl
sub
pop
lea
pop
push
push
lea
push
push
push
call
jle
add
addr16
add
jns
popf
add
lcall
add
push
add
fadds
push
mov
pop
add
add
add
jl
pop
xchg
into
jb
clc
pusha
pop
mov
add
add
fcmovnbe
add
sub
pop
push
push
push
push
call
add
addr16
cmpsb
into
add
loop
add
aam
add
add
xchg
push
add
push
test
add
addb
add
add
add
pop
add
addl
mov
sub
pop
call
push
rol
pop
cmpl
je
push
push
rol
add
rol
push
and
add
add
shr
sub
pop
sub
xor
pop
push
xor
pop
push
call
push
sub
pop
cmpl
je
push
push
lea
push
or
not
add
rol
lea
rol
sub
shl
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
fimuls
jne
jle
cld
xchg
add
mov
add
add
divl
add
add
add
lahf
add
add
sti
pop
jbe
jmp
add
add
jmp
push
fadds
add
mov
add
add
aad
addl
add
push
add
ror
pop
call
cmpl
je
push
push
ror
push
or
not
add
shl
sub
sub
pop
sub
add
sub
shr
pop
push
ror
sub
dec
lea
pop
push
push
shr
rol
pop
call
push
dec
inc
pop
cmpl
je
push
push
shr
push
or
not
add
shl
lea
lea
sub
rol
lea
pop
inc
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
pop
pop
add
add
add
add
fiaddl
push
mov
jl
in
push
push
add
mov
add
ja
sarb
lock
add
add
into
outsl
xchg
outsl
repnz
add
add
cltd
xchg
addr16
cltd
mov
lcall
call
push
push
lea
push
push
push
push
push
push
push
call
add
lcall
add
cmpl
rcrl
xchg
xchg
add
add
bound
test
pop
pusha
loopne
add
add
add
lcall
cmp
or
int3
je
push
push
push
or
inc
add
dec
xor
sub
pop
rol
pop
push
inc
shl
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
enter
decb
xchg
cmc
push
add
jbe
add
pop
mov
test
lds
add
push
movsb
pop
mov
add
jb
pop
add
std
movb
sub
pop
call
push
push
call
test
xchg
add
in
mov
rorb
in
add
std
xchg
movsb
bnd
add
add
add
stos
add
jmp
out
in
mov
out
fcomi
add
add
jmp
add
mov
add
add
mov
stos
add
add
jne
outsl
sub
pop
cmpl
je
push
push
shr
push
sub
add
sub
inc
shr
sub
dec
add
sub
pop
rol
sub
not
pop
push
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
pop
add
add
aam
add
add
add
lock
mov
cltd
xchg
idivl
rcl
pop
add
jle
add
add
xchg
add
add
add
mov
add
je
add
add
loopne
rorl
add
sub
pop
call
push
inc
pop
cmpl
je
push
push
push
or
not
add
shr
xor
sub
rol
xor
lea
dec
pop
dec
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
push
push
cmpsl
cli
mov
arpl
scas
loope
in
add
std
iret
mov
add
add
lcall
push
shr
lea
pop
call
cmpl
je
push
push
inc
push
sub
add
ror
inc
shl
sub
add
add
inc
pop
lea
inc
dec
pop
push
add
pop
push
push
push
call
mov
add
test
add
into
add
ja
sti
add
jae
cld
add
cld
add
add
add
std
mov
add
inc
hlt
add
addr16
add
sub
pop
call
cmpl
je
push
push
rol
shr
push
or
not
add
add
dec
sub
xor
pop
shl
not
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
pop
add
add
add
add
add
add
add
add
mov
pop
xchg
cwtl
add
rclb
jae
add
add
imul
add
add
lds
jp
xchg
pop
xlat
mov
add
lods
int3
xchg
add
mov
mov
jmp
jae
sub
pop
push
call
push
ror
pop
cmpl
je
push
push
sub
push
or
not
add
add
shr
sub
xor
not
sub
rol
pop
sub
not
pop
push
push
push
push
lea
push
call
mov
jno
sti
xchg
mov
add
add
mov
notl
add
cltd
add
stos
push
add
add
ja
xchg
test
add
add
into
add
lock
add
nop
add
mov
lret
shl
out
add
out
xchg
cmpl
in
lcall
push
push
push
push
push
call
test
in
add
add
ljmp
mov
add
add
pop
jne
fcompl
xchg
aad
add
xchg
mov
ljmp
movsb
add
add
mov
add
lret
pop
loop
add
add
add
jge
stos
jae
xchg
mov
push
add
add
add
mov
lea
push
lea
push
lea
push
call
mov
add
add
add
fdivrl
jge
rcrl
push
stos
add
add
addl
add
test
mov
pop
cmpl
jne
push
lea
push
push
lea
push
push
push
push
push
call
xchg
lahf
jmp
add
rolb
subb
add
xchg
movsb
test
add
add
mov
roll
cmpsw
cmpsl
jbe
add
add
test
js
clc
aad
push
mov
add
movsb
into
aad
add
lcall
inc
adc
jae
fmuls
push
push
push
lea
push
lea
push
push
call
mov
in
jecxz
xchg
leave
add
enter
add
ljmp
pop
add
int3
clc
roll
jge
flds
ljmp
cmpl
test
fdivrs
add
add
xchg
data16
lock
lcall
add
add
add
pop
jmp
push
lea
push
push
push
push
push
lea
push
call
mov
imul
shrb
in
push
add
push
lret
pop
hlt
add
test
add
sub
pop
xor
pop
push
xor
xor
add
pop
pop
push
push
push
push
call
add
add
add
add
ja
out
mov
mov
xchg
add
add
add
rolb
add
lds
arpl
rol
push
add
jp
add
xchg
add
cmc
xchg
add
lock
lcall
push
not
pop
pop
push
pop
leave
push
push
push
call
add
add
add
jnp
call
roll
add
add
xchg
jns
jmp
mov
add
add
lcall
or
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
idiv
add
in
add
int3
jo
fcoml
mov
add
mov
mov
int3
stos
mov
add
add
cmc
pop
mov
add
lcall
mov
push
shl
lea
add
pop
add
push
sub
add
add
rol
pop
cmpl
jne
push
push
xor
not
add
push
and
add
inc
sub
sub
add
sub
inc
pop
shl
not
pop
push
lea
push
lea
push
call
loopne
mov
add
cmc
cmpl
add
add
in
rcll
ljmp
add
addr16
mov
add
test
in
hlt
pop
pushl
push
sub
ror
add
pop
call
push
push
push
push
push
call
in
add
movsl
pop
les
add
add
int
xlat
add
out
xchg
add
add
clc
cmpsb
jne
xorl
add
shll
jge
add
pop
js
stc
add
mul
add
nop
std
out
aam
add
add
lahf
add
mov
in
lcall
call
lock
dec
pop
call
jmp
push
ror
lea
pop
cmpl
je
push
push
push
push
call
popa
imul
add
lret
add
add
jmp
cmpsb
add
add
lret
pop
add
shrb
mov
add
pop
add
mov
jnp
test
jne
jne
add
pop
aad
cwtl
mov
pop
cmpl
jne
push
push
push
lea
push
push
push
push
push
lea
push
call
jle
sahf
add
add
loopne
add
add
add
int3
clc
add
add
fisubrl
shlb
add
scas
mov
fdivr
lcall
inc
or
sbbb
add
ret
push
push
lea
push
lea
push
push
push
call
popa
push
pop
mov
cmc
cmc
mov
stc
add
add
icebp
add
mov
mov
rol
mov
jnp
add
add
push
outsl
add
push
mov
add
add
les
jbe
add
icebp
aam
xlat
jmp
mov
add
pop
jmp
push
push
push
call
add
mov
add
imul
xchg
hlt
lcall
mov
push
clc
add
jle
ffreep
add
sarb
hlt
pop
cmpl
jne
push
push
add
xor
lea
sub
push
or
not
add
add
lea
xor
sub
shl
add
lea
pop
sub
pop
push
push
push
call
add
push
in
mov
mov
push
fwait
add
mov
fdivr
mov
lds
pop
std
lods
pop
fs
mov
fs
pop
cltd
imul
pusha
xchg
add
cwtl
sub
pop
pushl
push
push
push
push
call
add
pop
fistl
enter
push
add
add
add
imul
add
je
mov
add
add
add
xchg
push
outsl
add
lcall
sub
add
rolb
sarb
add
xchg
or
push
push
call
clc
pushf
aam
mov
call
add
adc
in
add
push
jno
aam
cltd
ror
data16
mov
add
popa
xchg
lds
je
jae
stos
add
add
add
jle
add
lcall
lcall
rclb
ret
inc
loope
pop
sub
xor
rol
pop
jmp
push
push
call
iret
add
pop
in
mov
addb
loop
lret
outsl
bnd
xchg
mov
les
add
add
jae
mov
mov
sti
add
sub
pop
cmpl
jne
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
call
sahf
add
add
add
push
fadds
lcall
enter
lock
add
jbe
scas
sahf
aam
add
add
leave
add
repnz
iret
cmpsb
jns
fldl
jle
add
add
sti
divb
jne
lahf
add
ja
mov
shrl
sub
pop
mov
push
push
push
push
push
push
push
push
call
add
jno
push
add
jle
jnp
roll
pushf
add
add
xchg
mov
rcrb
movsb
add
add
mov
aad
loop
pop
andl
push
push
push
sub
push
or
inc
add
ror
sub
inc
sub
shl
pop
add
inc
pop
push
inc
add
shr
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
call
in
pop
add
add
rorb
add
arpl
je
add
fwait
add
add
mov
in
add
popl
orl
add
lcall
and
add
push
push
lea
push
lea
push
call
push
add
jae
add
add
add
hlt
mov
into
fld1
fiaddl
add
add
lock
push
add
mov
loopne
add
add
add
add
pop
ret
ja
add
je
add
push
lcall
shrb
pop
sarl
push
add
dec
xor
push
push
pop
add
inc
sub
shr
shl
sub
sub
shr
pop
shr
pop
push
not
shl
pop
pushl
push
push
push
push
call
xor
out
mov
jne
shrl
movsl
add
js
cmc
stos
push
imul
add
jae
push
add
add
add
mov
fsubr
mov
fincstp
andb
add
movsl
stos
rorl
std
std
sub
pop
call
push
lea
push
push
push
call
cli
movsb
add
int3
mov
icebp
stc
add
add
add
pop
add
add
add
mov
ja
fcomp
test
add
lock
call
push
push
lea
ror
push
xor
add
not
inc
sub
ror
pop
sub
pop
push
push
push
call
jno
add
add
add
add
gs
loope
push
ja
lods
push
jmp
cmc
mov
push
roll
add
popf
insb
lret
add
sbb
add
add
popf
mov
arpl
sahf
add
insb
mov
add
test
jno
xchg
add
loop
in
hlt
pop
pushl
push
lea
shr
inc
pop
call
call
push
push
inc
push
or
not
add
sub
not
sub
add
pop
sub
pop
push
dec
shl
pop
pushl
push
push
push
lea
push
push
lea
push
call
out
test
add
mov
add
add
add
add
mov
add
lret
add
pop
stos
add
leave
add
in
rolb
mov
addr16
fldenv
jnp
out
in
call
call
call
push
push
inc
shl
push
push
pop
add
shr
lea
add
sub
dec
pop
add
add
dec
add
pop
push
add
inc
not
pop
pushl
push
add
pop
call
push
rol
rol
sub
pop
call
push
push
inc
sub
push
xor
add
dec
sub
sub
sub
pop
not
add
shr
pop
push
push
call
jp
add
iret
add
mov
mov
scas
add
add
add
add
add
int3
test
push
out
int3
cmpsb
fs
sub
pop
pushl
call
push
dec
inc
ror
lea
pop
call
push
push
shr
lea
shr
push
sub
add
add
shr
shr
sub
sub
xor
add
pop
shr
add
pop
push
pop
pushl
call
push
shr
pop
call
push
push
add
shr
xor
shl
push
or
inc
add
add
add
ror
sub
add
pop
dec
lea
pop
push
pop
pushl
call
push
lea
push
push
push
push
push
push
call
jo
rcll
mov
mov
loopne
add
jmp
add
sahf
stos
add
add
mov
stc
test
jne
add
xchg
loop
mov
add
add
add
jo
xchg
pop
add
jae
stos
add
into
add
xlat
add
mov
sub
pop
call
push
push
shr
add
push
xor
add
xor
add
sub
sub
ror
inc
sub
add
pop
add
ror
sub
pop
push
push
push
call
add
clc
add
jge
out
jbe
out
cli
add
add
push
pop
add
mov
call
fiaddl
in
add
xchg
mov
js
js
add
add
add
pop
jbe
pop
push
mov
sub
pop
pushl
call
push
inc
add
ror
pop
call
push
push
push
or
inc
add
lea
add
sub
sub
shl
sub
pop
sub
pop
push
lea
push
call
mov
mov
lcall
xchg
xchg
pop
add
aam
add
xchg
addb
fdivs
add
pop
addl
add
xchg
add
in
clc
pop
pushl
push
push
call
pop
cmp
js
shl
jns
add
add
add
popf
arpl
cmc
ja
jne
add
sti
jl
add
les
sub
pop
call
push
sub
inc
pop
lea
push
push
not
sub
pop
call
push
push
inc
sub
push
xor
add
xor
sub
xor
sub
lea
pop
rol
sub
rol
pop
push
lea
pop
pushl
call
push
dec
ror
sub
pop
call
push
push
xor
add
shr
push
or
inc
add
ror
ror
rol
lea
sub
not
pop
not
rol
add
xor
pop
push
dec
pop
pushl
push
lea
push
push
push
call
mov
add
add
in
lea
add
in
fnstenv
push
add
mov
loope
testb
add
jecxz
push
addl
andb
iret
add
add
filds
lcall
and
add
movsb
xchg
push
lea
push
push
push
push
call
add
fdiv
add
mov
add
add
out
std
lds
add
add
fadds
cld
add
cli
add
mov
test
add
push
cmpsb
rolb
pusha
pop
addl
push
mov
cld
add
add
mov
gs
jb
mov
in
in
lcall
shrb
xor
push
dec
push
or
not
add
sub
sub
xor
add
pop
sub
sub
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
addb
cmpsl
add
clc
add
xlat
cmpsb
in
std
cmc
mov
xchg
add
add
shrl
add
into
sub
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
lahf
add
scas
jno
movsb
add
jae
add
push
test
cwtl
into
add
into
cmpsl
pop
mov
mov
xchg
cmpsl
add
push
add
mov
add
movsl
add
fiaddl
faddl
popa
mov
xchg
loopne
in
add
add
jbe
add
pop
add
jecxz
in
fcomps
mov
push
push
push
lea
push
push
call
jnp
add
add
add
add
lret
add
pop
add
add
std
jle
std
jo
movsb
add
push
add
cli
xchg
add
mov
mov
in
call
xchg
mov
int
leave
jne
loope
push
xor
add
shr
sub
add
ror
inc
sub
pop
lea
dec
sub
not
pop
push
lea
push
lea
push
call
mov
mov
lods
mov
pop
add
mov
filds
in
add
mov
movsl
push
add
add
add
add
mov
add
add
jge
stc
enter
pop
sub
pop
pushl
push
sub
ror
pop
call
push
push
inc
sub
push
and
add
add
lea
sub
rol
add
ror
pop
lea
dec
pop
push
push
add
lea
push
xor
add
ror
sub
add
pop
not
not
not
shl
pop
push
rol
lea
not
pop
call
push
inc
not
pop
pop
dec
jne
push
push
add
push
or
not
add
rol
dec
sub
sub
shr
shl
pop
add
rol
add
pop
push
shr
dec
pop
pushl
call
push
xor
ror
not
pop
lea
push
push
lea
push
lea
push
lea
push
push
call
xchg
out
fs
add
cmpsl
pop
pop
pop
js
add
out
mov
add
mov
mov
add
loop
data16
add
add
lock
jl
add
push
push
push
push
push
push
push
push
call
rclb
in
add
add
mov
add
mov
cld
mov
add
sarl
jb
add
testl
in
mov
jp
add
add
add
jle
add
add
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
js
pusha
add
mov
xchg
cld
fnstsw
add
add
roll
add
add
enter
cmpsb
mov
imul
add
add
rolb
add
ficoms
push
xchg
lea
sub
pop
push
push
push
dec
pop
call
push
add
not
pop
call
push
push
shl
add
push
and
add
sub
shr
sub
sub
inc
shl
pop
dec
ror
pop
push
ror
pop
pushl
push
push
push
push
push
push
push
push
call
mov
sar
lds
cmpsl
jne
mov
mov
sbbb
add
jl
cmpsb
lahf
xchg
imul
pop
iret
add
rolb
lock
add
xlat
popa
mov
pop
imul
mov
fildl
add
pop
add
lcall
push
sbb
add
cld
push
call
stc
add
add
scas
jge
add
add
jns
add
add
add
mov
lahf
add
popf
mov
cmpsl
add
cmpsl
mov
add
hlt
cltd
add
jecxz
mov
jle
pusha
push
into
fimuls
in
hlt
lcall
call
rol
ror
pop
call
mov
push
push
sub
lea
push
sub
add
not
sub
shl
not
pop
shr
inc
pop
push
dec
sub
xor
pop
pushl
call
push
push
push
push
call
mov
data16
add
mov
popa
add
add
lock
mov
add
imul
jns
mov
scas
jno
push
addr16
add
notl
add
add
fadds
add
add
sub
pop
lea
push
push
push
push
call
add
add
stos
pop
add
lods
add
add
insb
loop
aam
jp
jmp
lret
add
add
add
lea
add
add
popf
jmp
pop
out
add
std
add
jo
add
lcall
add
push
xor
pop
push
call
push
push
push
push
lea
push
lea
push
call
xlat
lret
stc
fildl
flds
stos
test
jl
add
jmp
outsl
popf
js
add
add
push
iret
add
pushf
and
ljmp
fwait
mov
xchg
push
or
not
add
add
add
sub
xor
shr
xor
pop
sub
xor
dec
pop
push
rol
add
dec
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
in
lret
jno
xchg
add
add
add
add
add
hlt
ror
add
rolb
mov
test
jo
jmp
movb
add
xchg
data16
mov
rcrl
lea
je
push
cli
push
add
add
lds
loope
sub
pop
push
push
add
rol
sub
xor
pop
call
push
push
dec
not
add
add
push
or
not
add
not
ror
add
sub
ror
pop
add
add
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
aam
rolb
ja
cmpsb
sarb
add
rcl
push
xchg
add
mov
xchg
add
pushf
pop
add
pop
je
mov
lcall
jne
call
push
shr
shl
pop
call
push
not
sub
ror
pop
mov
push
push
push
push
call
add
aad
pop
xchg
lods
add
into
mov
jae
add
mov
add
add
add
cmpsl
test
ficoml
in
lock
lea
push
push
sub
not
inc
push
and
add
dec
sub
rol
sub
add
xor
add
pop
sub
sub
pop
push
inc
inc
pop
pushl
push
push
push
call
movl
mov
outsl
pop
mov
loope
mov
jmp
push
jge
sti
in
add
mov
mov
out
jl
mov
mov
in
hlt
lcall
add
add
push
push
call
insb
clc
add
ljmp
xlat
jae
mov
jle
add
add
xchg
js
fcmovbe
xchg
loop
add
loop
fadds
add
mov
lea
push
push
push
push
push
push
push
push
push
lea
push
call
fadds
push
add
add
add
add
add
mov
cmpsl
add
jecxz
addb
test
add
sbb
mov
testl
sub
pop
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
add
popf
add
add
push
rclb
fisubrl
addb
add
icebp
pushf
int3
pusha
popf
add
xchg
mov
fadd
jb
testl
xchg
add
sub
pop
push
push
xor
pop
pushl
push
push
rol
dec
push
xor
add
not
sub
pop
shl
pop
push
inc
pop
push
push
push
call
cmpsl
ficompl
mov
add
ja
test
filds
mov
add
add
fadds
jo
cmc
rolb
jno
add
pop
mov
mov
call
push
push
rol
lea
push
push
pop
add
shr
xor
sub
xor
sub
ror
pop
inc
dec
pop
push
ror
pop
pushl
push
ror
pop
call
push
push
call
filds
lret
add
add
mov
add
lods
bound
lods
add
add
ret
add
push
movsb
mov
jae
mov
add
rcrb
add
addl
add
shl
lret
call
push
push
push
lea
push
push
push
push
lea
push
call
add
pop
pop
add
jecxz
add
push
lahf
mov
pop
add
push
add
ja
add
xchg
push
jb
mov
push
push
ffree
add
incb
mov
mov
pop
into
add
mov
sub
pop
call
push
push
inc
dec
push
or
not
add
shl
sub
inc
shr
sub
sub
add
sub
pop
dec
pop
push
inc
pop
pushl
call
push
push
push
push
push
push
push
call
add
push
add
loopne
add
mov
add
orb
add
pushf
add
mov
add
add
movsl
add
insb
sti
add
add
add
mov
data16
add
cltd
out
lods
jnp
enter
xlat
add
enter
add
call
push
lea
push
push
push
call
ljmp
add
outsl
mov
add
pushf
mov
add
test
add
add
jbe
add
add
add
add
in
lock
jmp
push
push
lea
push
push
lea
push
push
push
push
push
call
in
pushf
add
add
add
add
mov
out
add
jp
xlat
rcll
add
roll
cwtl
cmpsl
ljmp
mov
movl
in
fcompl
pushl
push
push
push
push
push
push
push
call
push
fwait
add
bound
add
xchg
mov
add
stos
add
jb
xlat
addb
add
cltd
add
movsl
aad
ja
add
insb
imul
add
rol
mov
rolb
add
sub
pop
mov
jmp
push
push
lea
push
push
pop
add
rol
add
inc
sub
shl
pop
sub
pop
push
push
push
push
push
push
push
push
push
lea
push
call
int3
in
or
mov
jnp
add
add
add
enter
arpl
jo
fstp
mov
add
sub
pop
pushl
push
push
push
push
push
call
add
add
mov
mov
xchg
mov
pop
push
addl
popf
jecxz
add
jp
into
rcl
mov
lret
add
jecxz
mov
add
test
xchg
test
push
js
in
in
lcall
fistl
add
push
push
push
lea
push
call
shl
add
movsl
fldl
push
into
add
add
insb
mov
imul
movsb
loopne
add
add
add
add
jecxz
nop
add
add
mov
lock
push
call
push
push
shr
shl
lea
add
push
and
add
shr
sub
rol
inc
pop
lea
sub
rol
pop
push
push
call
stos
lock
add
mov
in
mov
add
cmpsl
in
add
add
lock
add
imulb
movsb
xchg
push
add
popl
lods
add
int
mov
add
jmp
enter
clc
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
test
mov
mov
add
xchg
xchg
add
imul
add
aad
and
add
mov
ljmp
pop
hlt
imull
add
push
add
add
mov
sub
pop
call
push
inc
dec
pop
push
call
push
ror
add
not
xor
pop
leave
push
push
push
push
lea
push
call
add
fadds
fwait
fwait
jl
add
add
mov
mov
push
add
in
add
add
add
add
add
xchg
cld
fdivp
add
xlat
push
jmp
add
add
sub
pop
add
push
lea
push
lea
push
push
push
push
push
call
add
add
fnstsw
add
scas
add
add
add
add
add
mov
lods
jbe
xchg
add
add
lcall
add
add
xchg
mov
ja
ficoml
jnp
shlb
jle
push
mov
in
add
cltd
add
add
jle
mov
in
in
pop
push
shr
rol
add
lea
pop
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
in
out
clc
add
jp
cwtl
shrl
mov
leave
cwtl
add
mov
data16
outsl
add
addl
xchg
imul
loop
add
stos
jne
add
hlt
add
fists
add
mov
cltd
iret
add
lcall
push
xor
shr
shr
pop
xor
push
pop
inc
push
push
push
lea
push
push
push
call
add
in
add
mov
std
add
mov
add
in
add
jno
popa
in
push
mov
add
mov
mov
jmp
lahf
mov
popa
mov
nop
fdiv
enter
in
lock
cwtl
add
pusha
add
test
je
icebp
add
lcall
or
push
inc
pop
leave
ret
push
push
call
lcall
scas
mov
jne
cmpsl
sahf
mov
hlt
add
mov
loopne
mov
add
data16
xchg
add
insb
fadd
mov
sbbb
mov
mov
add
push
push
int3
loope
add
enter
mov
clc
pop
push
mov
push
shl
inc
shr
pop
cmpl
jne
push
xor
add
ror
sub
pop
mov
jmp
push
rol
not
add
pop
mov
push
ror
dec
xor
sub
pop
and
push
inc
pop
xor
xor
push
rol
rol
inc
pop
add
xor
push
sub
xor
add
sub
pop
dec
push
push
lea
push
push
call
pop
pushf
add
add
insb
add
test
pusha
add
pop
cwtl
imul
neg
add
test
add
aam
add
movsl
hlt
jb
scas
lahf
pusha
in
lret
idiv
lds
add
add
int
add
mov
add
jnp
call
icebp
loopne
jbe
stc
pusha
mov
icebp
xchg
roll
adc
add
push
push
push
call
add
xchg
in
add
add
jp
push
pop
add
add
add
lret
iret
rolb
add
mov
mov
add
mov
mov
xchg
pushf
rcrb
add
jmp
sub
push
push
call
loop
jle
stc
mov
out
add
iret
add
test
in
add
mov
mov
pop
add
cmpsb
add
stos
je
add
xor
cmp
adc
push
add
add
in
js
lahf
add
jno
imul
add
test
mov
xchg
jns
jnp
add
mov
fstl
lret
jae
add
add
add
lahf
add
hlt
add
aad
mov
lea
add
out
clc
add
enter
cld
add
in
in
hlt
pop
pop
push
dec
shl
pop
sub
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
pop
add
mov
call
add
add
pop
rcll
add
movsl
insb
pop
fldl
add
add
sti
add
jge
insb
pop
lret
stos
jno
mov
add
mov
add
sub
pop
cmp
jne
push
push
lea
push
push
push
push
push
call
rolb
add
xchg
add
add
add
add
add
push
xchg
rolb
jb
stos
fs
test
xchg
add
cld
pop
movsb
loopne
jnp
add
add
rolb
add
mov
add
add
push
xchg
not
pop
movsl
std
jo
jnp
movb
arpl
js
add
lcall
enter
push
push
call
add
sarl
add
jne
imul
test
clc
add
addb
pop
lea
sub
push
add
pop
mov
shr
push
dec
add
rol
pop
add
sub
push
ror
lea
shr
pop
pushl
pop
push
push
push
lea
push
push
push
push
push
push
call
filds
push
mov
add
ret
jbe
test
add
flds
add
stos
add
add
add
movsl
add
lcall
jmp
incl
add
ror
pop
sub
push
sub
pop
cmp
jne
push
lea
push
push
push
push
push
push
push
call
mov
mov
pusha
add
mov
scas
stos
push
mov
mov
sti
mov
xchg
add
enter
shlb
pop
add
in
scas
mov
leave
push
push
push
push
lea
push
lea
push
call
movsb
hlt
arpl
xchg
add
scas
jmp
neg
add
pop
clc
cltd
add
ficoms
lea
in
lret
xchg
imul
add
add
add
imul
xchg
fs
pop
ret
push
lea
push
push
call
xchg
jle
pushf
mov
add
add
mov
xchg
add
test
loopne
add
pop
in
jns
leave
popa
add
add
into
out
xchg
add
pop
add
add
add
lcall
push
add
shl
pop
mov
add
push
lea
pop
push
push
push
lea
push
push
call
add
cmpsl
jmp
add
jns
jle
add
add
lret
lahf
add
les
fadd
shll
mov
loope
ror
call
add
mov
in
lock
push
push
push
call
mov
out
add
sarb
mov
add
rcrb
push
out
add
scas
add
cmc
insb
mov
aam
imul
add
pop
movsb
add
add
add
popa
lahf
imul
add
mov
sub
pop
push
push
not
pop
push
push
not
xor
sub
not
pop
push
push
push
lea
push
lea
push
push
call
mov
ret
push
add
hlt
rolb
outsl
add
add
add
add
add
add
int
cli
push
pop
movsb
bound
scas
add
add
xchg
add
cmpsl
pop
mov
add
call
xchg
mov
push
mov
add
fs
cmpsl
sahf
movsl
movsb
cmpsb
push
jae
add
sub
pop
mov
lea
push
push
push
push
push
push
push
lea
push
call
add
sahf
out
fs
mov
mov
mov
popf
and
xchg
add
pop
add
loopne
jmp
add
addb
iret
aad
add
mov
mov
lret
pop
jmp
push
add
jns
add
stc
sbbl
lret
add
mov
pop
add
in
loopne
lcall
ljmp
out
lea
push
lea
push
push
call
add
add
pop
faddl
add
add
iret
hlt
add
add
mov
repnz
add
lods
sub
pop
mov
push
lea
push
call
pop
repnz
add
in
gs
std
int
push
lods
mov
gs
gs
add
xchg
add
add
add
addb
mov
add
rcr
add
iret
xchg
mov
cwtl
fnstenv
add
add
mov
lods
pop
add
lea
add
mov
mov
stc
loopne
int3
add
cli
addl
add
add
call
sub
pop
shr
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
cmpsl
jno
aam
jne
jb
add
add
mov
insb
sarb
pop
lahf
fldl
push
add
loop
mov
mov
add
push
add
add
fwait
repnz
fldl
movl
add
lcall
fimull
add
mov
cld
push
lea
push
push
push
call
pusha
add
ja
stc
mov
add
mov
std
add
les
add
add
add
add
xchg
add
les
jnp
jae
rolb
mov
roll
test
cmpsb
add
xlat
std
mov
add
add
out
xchg
add
add
call
pop
add
push
lea
push
call
jnp
data16
lcall
je
add
add
add
pop
add
cwtl
xchg
push
xchg
in
add
mov
sar
out
leave
add
add
testb
std
push
leave
add
hlt
add
mov
in
rcrl
pop
mov
pop
xchg
addl
in
fst
je
sub
pop
mov
add
push
push
push
push
push
lea
push
push
push
push
push
call
add
arpl
test
add
add
add
mov
mov
pop
push
add
test
push
stc
rorb
add
mov
lds
add
ja
add
cltd
clc
notl
mov
icebp
add
add
add
mov
pop
add
add
mov
xor
push
inc
xor
sub
pop
mov
push
shr
pop
and
push
push
lea
push
push
call
add
add
mov
lea
int
cmpsl
cltd
loope
roll
add
mov
out
lods
push
add
pop
mov
add
push
add
sti
add
add
jmp
cltd
add
add
mov
add
lds
add
in
lock
rol
rol
push
push
push
call
fisubl
mov
pop
les
gs
out
add
stc
enter
fildl
mov
add
addl
loop
mov
sub
pop
xor
push
rol
inc
shr
pop
inc
push
push
push
push
call
jle
add
jle
mov
roll
mov
jle
add
add
jmp
out
add
add
pop
mov
movsl
add
ja
jno
popa
add
add
xchg
add
insb
sub
pop
cmpb
jne
push
sub
lea
pop
add
push
push
call
fistps
add
sbbb
xchg
add
add
data16
add
add
mov
add
mov
add
incb
add
call
mov
popf
test
add
lcall
inc
or
test
add
add
negl
ret
adc
sub
shl
lea
rol
pop
cmpl
jne
push
lea
inc
add
pop
xor
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
pop
popl
jmp
cmp
add
test
div
jns
cmpsl
fisubrl
add
insb
imul
add
add
popl
lret
push
out
add
add
add
add
mov
pop
pop
pop
push
lea
pop
pop
push
push
push
push
push
push
lea
push
push
call
movsl
jle
repnz
jae
jge
jmp
lds
jbe
add
add
mov
add
out
sti
mov
add
mov
jle
add
add
imul
stc
jecxz
nop
add
in
add
jo
shlb
fwait
add
add
mov
add
pop
leave
push
lea
push
push
push
push
push
push
push
push
push
call
cmpsl
push
in
ror
scas
hlt
add
cli
lea
xchg
add
add
into
add
test
add
mov
add
xchg
add
add
mov
mov
leave
add
rcrb
jl
xlat
roll
mov
pop
add
add
mov
add
add
lcall
or
push
push
call
add
add
mov
mov
add
add
jmp
cmpsb
out
ja
add
ljmp
mov
mov
mov
stos
arpl
test
add
add
xchg
add
add
xchg
jle
add
pop
mov
push
push
push
call
flds
jb
add
add
repnz
add
out
sahf
xchg
lods
int3
cltd
pop
cmpsl
add
add
jo
add
pushf
xlat
add
cld
add
add
cmpsl
lcall
lcall
push
or
xor
add
not
not
shl
pop
mulw
push
shr
pop
pop
push
lea
push
push
call
fsts
in
add
add
add
pusha
add
add
scas
jp
add
add
add
sbb
mov
ja
add
mov
lock
mov
add
mov
into
add
mov
xchg
xchg
add
sub
pop
call
push
push
lea
push
push
lea
push
push
lea
push
call
movsl
add
add
stos
repnz
cltd
add
test
jne
sti
out
addb
add
repnz
add
pop
jo
pop
add
insb
add
iret
xchg
pop
add
add
nop
add
add
shl
mov
pop
lods
pop
add
add
lcall
mov
call
lret
test
xor
pop
push
lea
rol
pop
pop
push
lea
push
push
push
push
push
push
call
lret
jle
push
add
jae
mulb
add
out
cwtl
add
iret
pop
bound
jne
add
add
roll
test
add
in
in
pop
push
shr
pop
pop
pop
push
push
push
push
call
fldenv
add
add
add
lret
add
jmp
mov
push
add
clc
push
shlb
add
sub
pop
leave
push
lea
pop
ret
push
lea
pop
push
push
dec
pop
mov
push
lea
push
push
lea
push
push
call
mov
xchg
add
add
pushf
call
lea
add
add
mov
add
test
shr
int3
out
sti
roll
xchg
insb
cli
add
add
cmpsb
add
clc
add
add
jb
add
add
pop
sub
pop
add
push
add
pop
push
push
pop
push
push
sub
ror
ror
pop
push
push
push
lea
push
push
push
push
lea
push
call
mov
lock
imul
call
add
mov
lds
mov
add
add
jle
add
push
add
addr16
movsl
add
ljmp
add
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
add
popf
dec
add
ret
add
add
xchg
movsl
mov
shr
lcall
movsl
ljmp
in
cltd
add
jno
jle
add
add
sub
pop
push
pop
push
push
push
push
push
push
push
call
add
add
faddl
add
clc
add
jecxz
lock
aam
add
cmc
fidivrl
xchg
add
lret
add
jno
loopne
push
xchg
in
lret
test
insb
enter
popa
stos
je
incb
add
sahf
in
add
add
cli
add
call
push
pop
ja
add
push
cmp
lea
pop
sub
push
add
pop
mov
push
xor
pop
shr
add
push
lea
push
call
add
add
xorb
out
icebp
pop
mov
fsub
add
nop
add
jbe
fsubr
add
add
add
jbe
stos
add
add
add
mov
leave
mov
jo
fcoml
cwtl
jae
lret
fadd
nop
add
push
into
sub
pop
mov
push
lea
ror
pop
add
pushl
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
xchg
lods
add
mov
lods
in
add
addr16
add
add
pop
xchg
jns
pop
stos
cmpsl
sub
pop
popl
push
dec
ror
dec
inc
pop
mov
add
push
add
xor
rol
pop
xor
lea
push
lea
push
push
push
call
fstp
add
add
out
mov
add
arpl
jne
push
add
mov
add
mov
push
pop
out
xchg
mull
mov
add
int3
negl
xchg
outsl
sbbb
icebp
add
add
add
push
pushf
fs
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
push
call
ljmp
add
push
pop
add
cwtl
add
add
push
lret
add
mov
enter
add
add
jle
scas
add
add
in
loopne
add
push
shr
not
pop
xor
rol
push
push
lea
push
lea
push
push
push
push
push
call
push
cmpsb
add
in
into
push
add
lret
push
std
movsb
push
cld
popa
add
xchg
jne
jne
mov
aad
cwtl
outsl
ja
in
loopne
lcall
push
xor
shr
add
add
pop
nop
xor
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
hlt
popa
pushf
add
add
add
mov
add
lods
nop
cli
add
add
add
out
mov
add
in
fcomps
push
lea
push
push
push
lea
push
call
test
ret
add
in
add
xchg
add
data16
xchg
mov
cli
imul
add
mov
add
jecxz
add
jle
add
add
add
loope
ficoms
xchg
push
fiaddl
add
xchg
movsb
test
lret
sub
pop
nop
push
sub
sub
pop
inc
nop
push
sub
sub
rol
add
pop
nop
push
lea
push
lea
push
call
add
icebp
add
cmpsb
xchg
add
enter
add
test
iret
add
add
mov
faddl
add
enter
lahf
sti
pop
add
mov
sub
pop
cmpb
jne
push
ror
ror
ror
pop
add
nop
push
push
push
push
push
lea
push
lea
push
call
add
stc
js
nop
push
test
mov
lds
add
int3
jmp
iret
lahf
add
roll
add
lods
add
lcall
push
dec
pop
cmp
je
nop
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
test
add
add
mov
scas
jno
xchg
jbe
add
mov
add
jge
xchg
stc
add
scas
insb
push
dec
xlat
rolb
pop
nop
inc
push
sub
pop
nop
push
pop
nop
cmp
jb
push
add
pop
xor
jmp
push
add
sub
shr
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
popa
test
aam
add
add
push
testb
add
mov
out
add
js
in
fdivr
lcall
rcll
push
push
lea
push
push
call
push
add
cli
loopne
scas
jae
mov
loop
roll
add
imul
movl
add
push
mov
stos
std
sub
pop
movzwl
push
xor
shr
pop
mov
push
inc
rol
pop
add
mov
push
pop
xor
xor
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
out
jmp
lret
je
mov
add
pop
mov
add
add
add
push
bound
popa
loope
add
push
popa
jo
rcl
add
xchg
add
pop
jnp
add
add
test
pop
shl
push
xor
pop
xor
shl
push
rol
ror
pop
xor
push
sub
pop
shl
push
dec
pop
xor
push
xor
dec
pop
mov
push
push
push
call
clc
mov
loop
or
loopne
sarb
bound
add
pop
xchg
in
into
out
add
imul
add
add
in
add
imul
roll
testl
cltd
add
ret
scas
add
add
push
loopne
filds
push
int3
data16
add
add
sub
pop
add
push
push
lea
push
call
add
out
call
add
mov
add
shl
add
enter
add
add
add
std
add
test
jns
lret
shl
add
pushf
mov
in
hlt
lcall
pop
push
push
push
push
push
lea
push
push
push
call
add
icebp
add
xchg
lahf
roll
mov
add
in
jle
ret
mov
stc
adcb
in
loopne
lcall
push
sub
pop
pop
push
push
push
push
push
call
add
add
fwait
add
add
fdiv
mov
cwtl
add
stos
pop
or
fldlg2
add
xlat
cmpb
mov
add
add
sarl
add
add
add
add
loope
icebp
add
scas
movb
add
mov
sub
pop
leave
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
fldl
mov
mov
jo
lods
repnz
jns
movsl
in
sahf
cwtl
stos
mov
add
stc
loope
add
in
add
add
int3
mov
add
xchg
imul
lds
in
fcomps
or
push
push
pop
mov
push
push
ror
sub
lea
pop
push
push
push
lea
push
lea
push
push
push
call
jae
mov
xchg
lahf
nop
add
cwtl
pop
add
add
lahf
add
lcall
scas
mov
filds
jne
mov
add
iret
lret
push
ret
in
pop
push
push
not
pop
mov
push
dec
xor
add
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
jp
add
add
xchg
stos
mov
mov
rolb
add
add
popf
jecxz
add
add
nop
cmpsb
pop
insb
add
jae
add
add
xchg
add
push
pop
test
mov
sub
pop
mov
test
je
push
lea
push
push
call
add
pop
mov
fmul
add
into
faddl
add
add
add
add
lahf
loop
imul
imul
lcall
jno
test
je
push
sub
shl
pop
mov
push
push
lea
push
push
lea
push
call
call
mov
add
add
repnz
filds
push
popa
test
mov
rclb
iret
cmpsl
rol
add
pop
add
idiv
add
arpl
popf
pop
std
ljmp
push
xchg
add
add
add
movb
or
shl
shl
lea
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
negl
add
cmpsl
mov
add
lcall
roll
add
mov
iret
xchg
add
add
cwtl
pop
addr16
add
xchg
cltd
mov
add
add
jmp
push
add
flds
xchg
in
sub
pop
inc
cmp
je
push
dec
pop
test
je
push
push
lea
push
push
lea
push
push
call
mov
in
roll
mov
int3
mov
ffreep
add
mov
mov
jle
out
pusha
cmc
add
push
mov
mov
aam
add
mov
add
cltd
sar
add
add
addr16
popa
out
xchg
into
ret
fcmovne
iret
lcall
iret
add
mov
xchg
rol
sub
pop
mov
push
add
dec
add
pop
inc
push
sub
dec
pop
cmp
je
push
push
call
hlt
add
jge
xchg
add
imul
push
repnz
mov
mov
add
jbe
ret
push
add
jno
ja
pop
test
add
xlat
add
add
add
add
mov
add
add
fiaddl
add
push
bound
jae
push
scas
sub
pop
test
jne
push
dec
ror
pop
xor
push
push
push
push
push
call
mov
add
add
add
add
lahf
int3
stos
add
mov
test
out
jae
add
add
add
add
add
hlt
sar
mov
mov
mov
fldl
rcr
cld
lcall
mov
xchg
add
sub
pop
pop
pop
push
push
push
push
call
jno
jle
stos
jne
add
pusha
int
pop
add
imul
jbe
add
popf
int3
add
pop
cmpsb
jl
mov
add
jecxz
cmc
xchg
jge
mov
add
into
xchg
lods
add
add
fcompl
sahf
xchg
add
test
lock
lcall
push
push
push
call
jns
stos
les
sahf
imul
add
add
add
test
fimull
aam
mov
loop
add
clc
jmp
in
hlt
pop
pop
leave
push
lea
push
push
push
push
call
pop
fiaddl
rcrb
mov
test
add
add
add
xchg
add
add
cmc
pop
add
add
lret
add
lcall
or
push
lea
push
push
call
fdivr
lods
popa
add
lcall
add
add
jmp
sub
jle
xchg
add
add
mov
movsb
leave
lret
add
add
xchg
in
shl
add
add
mov
add
cli
mov
add
push
jo
loope
pop
insb
sub
pop
mov
push
not
pop
inc
push
lea
push
push
push
lea
push
push
call
add
scas
add
xchg
jmp
outsl
add
add
fstpt
rcrl
jle
scas
mov
in
push
add
fwait
cld
iret
lcall
lcall
lock
push
lea
sub
add
not
pop
lea
mov
push
dec
shl
pop
test
je
push
dec
xor
pop
mov
push
dec
pop
add
cmp
jne
push
rol
pop
mov
test
je
push
rol
add
shl
pop
mov
push
lea
shl
add
pop
add
cmp
je
push
lea
sub
pop
jmp
push
inc
pop
xor
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
imul
mov
mov
leave
stos
add
add
fidivl
push
push
mov
lods
add
bound
pop
mov
push
lea
add
mov
xchg
add
add
add
sub
pop
pop
push
dec
shr
sub
pop
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
test
add
add
in
add
push
add
ja
jo
in
lret
ret
add
add
mov
into
pop
push
iret
add
add
in
call
push
lea
push
push
lea
push
push
call
add
add
add
fldl
ljmp
popa
jbe
add
add
cld
lock
push
cltd
add
jnp
in
call
lea
push
lea
push
call
aad
std
add
add
add
add
push
add
add
xchg
add
add
pop
add
test
fucom
mov
lods
pusha
push
sub
pop
pop
push
push
push
call
pop
iret
add
add
imul
mov
leave
pop
pushf
jmp
push
in
cltd
rolb
lcall
add
aam
add
pop
add
std
mov
hlt
pop
pop
push
push
push
push
call
xchg
lcall
pop
add
pop
outsl
rolb
test
push
add
mov
add
mov
add
mov
add
add
push
scas
movsb
add
add
jns
mov
add
mov
pop
popf
sti
add
les
movsb
pop
lret
lods
jecxz
add
xchg
add
lcall
push
push
push
call
cld
fstpl
add
fwait
notb
cld
mov
mov
mov
test
add
add
lcall
push
push
push
push
lea
push
lea
push
call
jle
add
stos
push
cli
add
jo
sarb
aam
idivl
outsl
mov
jmp
loop
lods
in
pop
mov
add
hlt
shl
lahf
add
xchg
add
lcall
push
xor
shl
sub
pop
ret
mov
push
push
push
call
add
cmpsb
jno
insb
mov
call
jae
add
add
add
add
add
test
xlat
test
roll
lea
add
add
add
gs
pop
push
mov
mov
mov
add
imul
fdivr
iret
add
add
clc
add
addl
add
sub
pop
pop
push
push
push
push
lea
push
push
call
jae
addl
movsl
add
pop
andb
add
out
popf
jns
repnz
pushf
add
add
test
push
add
xchg
je
add
add
add
lcall
push
lea
push
lea
push
push
push
push
push
push
call
push
push
mov
scas
add
aad
imul
mov
popf
add
add
outsl
pop
mov
addb
imull
add
arpl
add
loopne
add
scas
jno
add
jb
add
lcall
push
push
push
lea
push
push
lea
push
push
push
push
call
add
fisubrl
add
pop
stos
add
push
sar
in
mov
xchg
push
loop
add
iret
nop
add
add
jmp
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
fimuls
into
into
imul
push
add
nop
pusha
out
add
add
flds
push
out
add
ljmp
add
in
loopne
lcall
push
push
push
push
push
push
call
je
mov
mov
rolb
mov
mov
in
enter
out
cwtl
xor
add
pop
add
jne
cmpsb
cli
fs
loope
cmpsb
add
fnsave
jns
jle
add
insb
add
pop
add
addr16
mov
add
jbe
insb
mov
add
addr16
add
sub
pop
ret
xor
cmp
testl
adc
adc
adc
xor
adc
sbb
adc
popa
cmp
xor
adc
add
add
and
test
fcompl
add
push
push
xor
arpl
cmp
cs
or
cmp
sahf
xor
cli
data16
jmp
nop
hlt
sub
fstpl
push
lret
out
les
fwait
and
fs
mov
in
sbb
movsl
out
mov
mov
cmp
pop
popf
dec
push
inc
add
hlt
mov
ja
icebp
add
fiadds
xchg
push
sbb
pushf
pop
sub
xchg
ljmp
popa
sub
push
and
popf
mov
pop
ret
in
into
fcmovnbe
shrl
inc
test
jg
sbb
fs
cli
dec
push
mov
add
outsl
sub
jae
pop
dec
bnd
pop
push
fistps
cwtl
add
sub
dec
lods
mov
rcl
aas
hlt
fs
aam
jns
pop
lret
pop
fdivl
enter
jbe
loopne
sets
cmc
mov
fistpll
sub
add
jp
dec
std
xchg
test
addb
mov
out
mov
jne
int
loopne
in
daa
mov
xlat
incb
pop
fwait
adc
jne
add
into
test
ds
into
movl
mov
mov
pop
sub
popa
cmpsb
sub
out
mov
mov
pushl
mov
dec
out
out
iret
arpl
push
inc
push
or
daa
popa
mov
loope
sub
imul
xor
sub
inc
insb
or
pop
jb
lock
sti
les
dec
rolb
mov
mov
outsb
xchg
fucompp
lods
in
fistps
xor
lret
scas
mov
jp
insb
pop
iret
add
pushf
cmpsl
cmp
enter
jle
mov
pop
pop
scas
arpl
stos
rclb
enter
mov
jge
jno
sbb
mov
bnd
xchg
fistpll
mov
xchg
dec
andb
cli
mov
inc
xor
push
pusha
jmp
repz
jge
fistpl
pop
popf
xchg
inc
outsl
pop
mov
push
pop
popl
jne
pop
sub
add
xor
in
adc
sbb
jge
enter
jns
xor
and
fistps
mov
push
das
add
xchg
arpl
adc
mov
outsl
jne
sbb
loop
es
les
cmc
ret
ja
cmp
sub
test
sub
gs
mov
mov
cs
test
jmp
adc
movsb
pop
fstpl
mov
in
cld
pop
jne
js
scas
pop
inc
pop
add
iret
inc
movsb
shll
xchg
out
shlb
jo
int
jb
inc
push
mov
xor
and
rcrb
xchg
mov
sub
outsl
outsb
lret
mov
fcomi
in
sbb
lret
mov
mov
bound
sbb
inc
jl
cwtl
loop
inc
sub
push
adc
or
mov
sub
mov
subl
and
pop
repz
push
das
xor
hlt
mov
int3
push
clc
push
pop
lock
sahf
jp
nop
push
xlat
add
imul
enter
fsubp
push
mov
sete
int3
sbb
mov
test
insb
cmp
inc
pop
subb
negb
xor
xchg
jmp
pop
je
enter
add
push
adc
in
cmp
adc
xchg
fidivl
mov
dec
in
or
cld
pop
jnp
jnp
push
jmp
cmp
mov
lock
sarb
xorl
les
arpl
jno
loop
mov
clc
bswap
mov
sbbb
test
xchg
mov
out
mov
dec
xchg
enter
rclb
jle
mov
ret
or
xchg
test
jle
sbb
sub
mov
test
test
pop
or
push
test
sub
adc
mov
sbb
out
cltd
std
sti
cmpsl
insb
adc
lret
shrb
daa
xor
adc
xchg
rcl
call
push
inc
pop
xchg
mov
mov
pop
cwtl
dec
cmpsb
dec
mov
adc
daa
push
adc
mov
ss
jmp
in
mov
and
xchg
cmpl
mov
jbe
mov
jg
and
popa
pop
lods
lea
sahf
cmp
and
adcb
push
add
ror
movsl
je
outsl
inc
or
shll
scas
out
sub
sahf
mov
subl
jo
outsl
jno
xor
jg
scas
or
leave
ljmp
xchg
mov
aaa
sub
int
xchg
out
mov
cmc
pop
push
int
jle
stos
cmpsb
ljmp
enter
fcompl
cmpl
sbb
cli
push
in
in
sub
push
and
push
adc
push
lods
ss
fcom
fistl
lahf
mov
xor
shrb
jbe
ret
aaa
push
and
int3
in
fadd
cmp
popf
shrb
insb
imulb
outsl
mov
imul
sbb
lahf
mov
daa
pop
jnp
clc
stos
loopne
pusha
or
aad
imul
cs
sbb
push
mov
outsb
jne
popa
mov
rolb
jl
and
loop
mov
out
into
adc
stc
gs
xchg
or
fs
push
cld
stc
pushf
sbb
jae
adc
mov
gs
shrl
jns
mov
add
add
push
sbb
sbb
es
mov
in
aaa
das
and
pop
popf
iret
and
pop
sbb
aam
push
jno
subl
mov
fdiv
fdivrs
pop
sti
xor
arpl
sbb
adc
icebp
adc
xor
push
int3
sub
mov
pushf
aam
xor
les
pop
call
pop
mov
imul
test
stc
aam
repnz
or
test
jmp
mov
pop
mov
clc
cmpsb
push
push
lcall
sub
add
push
lret
push
pop
andl
or
xchg
push
rolb
pop
std
or
aas
shlb
in
jb
mov
jno
mov
fimuls
fucomp
cmp
push
mov
adc
jnp
cmpsl
movsb
push
movsb
out
jno
bound
dec
pop
push
mov
xchg
mov
adc
lods
add
mov
popa
cmpl
rol
or
and
fdivrp
pop
inc
insb
into
mov
or
dec
sub
cmp
push
lds
test
nop
and
into
cltd
or
cmc
in
fs
push
push
pop
es
imul
cld
adc
testb
fwait
stc
or
loopne
pop
add
xor
fsubrs
xchg
stos
adc
lds
pop
inc
inc
push
pop
mov
add
add
jae
adc
jge
push
adc
push
das
push
shll
xor
in
insb
adc
dec
inc
pop
mov
sub
lcall
sbb
mov
mov
dec
rcrl
and
test
push
sbb
mov
push
nop
ret
int3
jecxz
push
push
sbb
leave
ret
pop
popa
stos
xchg
mov
rep
into
testl
adc
jg
mov
stos
jnp
gs
cmp
std
fnstcw
mov
push
dec
jmp
sbbl
xor
cltd
mov
repz
sbb
cmp
inc
lods
add
fistl
jns
mov
mov
push
cmp
lea
push
shlb
ret
ret
outsl
sub
popl
dec
xor
add
hlt
mov
test
jb
ret
jae
mov
xchg
adc
mov
fldenv
rclb
loopne
mov
repz
xchg
inc
arpl
call
xchg
lcall
xchg
dec
cmpl
xor
ficoml
push
jle
bound
in
mov
bound
sbb
outsl
sub
movsl
std
imul
arpl
cmpsb
adc
xchg
fwait
pop
loope
ljmp
popf
fisubrs
test
enter
call
inc
and
sbb
push
pop
imul
push
sbb
pusha
mov
sub
gs
push
add
push
popf
fmulp
adcb
in
lock
inc
ja
mov
fcoms
imul
lods
jg
xor
sbbb
xchg
inc
std
xlat
mov
sub
mov
shll
aaa
pop
lahf
or
xor
out
mov
dec
lods
xor
xchg
lea
cmp
xchg
lcall
aaa
and
div
sub
stc
mov
or
nop
mov
movsb
lahf
sub
and
and
jnp
pop
add
add
jmp
mov
stos
xor
loop
mov
add
rcll
xor
add
in
sbb
jne
push
cmp
mov
inc
sti
xor
movsb
mov
sub
dec
popf
adc
nop
out
xchg
xchg
lret
lret
pop
push
sti
rcl
test
mov
push
aas
add
idiv
icebp
pusha
mov
jae
push
pop
arpl
int
and
mov
inc
movsb
andb
xor
shrl
xchg
xchg
pop
and
fistl
push
jmp
es
movsl
add
mov
push
ljmp
jl
arpl
lods
cmp
imul
inc
sbb
pop
push
pop
orl
jmp
xchg
in
mov
fistpll
les
push
sub
imul
jmp
lods
or
or
pop
push
shr
xor
nop
push
cwtl
mov
inc
pop
enter
les
adc
and
push
add
adc
cmpsb
sub
cmp
lret
enter
cwtl
lock
in
ja
hlt
cmpsl
ds
fwait
mov
rcrl
cmp
inc
inc
xchg
pop
jno
lret
in
dec
xor
inc
sbb
addr16
fildll
push
add
push
inc
js
lret
dec
push
icebp
sub
jle
das
sub
loop
out
fwait
lea
pop
out
inc
mov
or
push
adc
mov
push
jecxz
sub
cltd
addl
pop
mov
out
xor
enter
repz
sbb
in
push
cmpb
mov
xchg
shl
xchg
adc
or
dec
push
pop
out
sti
pop
rolb
mov
add
dec
xor
js
mov
jno
mov
mov
cltd
stos
sub
dec
pop
push
mov
jl
ja
jo
jae
loopne
adc
rolb
test
clc
xchg
imul
and
xchg
ret
cmp
pushl
add
rol
mov
xchg
xchg
sbb
adc
xor
loop
jmp
mov
jns
xchg
xor
sub
xchg
fstl
mov
xchg
and
notl
frstor
sbb
and
jnp
fstl
adc
aad
or
insl
jae
sti
fistpl
jmp
push
scas
jb
enter
sbb
aaa
shlb
std
call
aas
in
cmp
ret
jle
pushf
mov
int3
mov
and
or
jge
popa
jge
add
push
xor
out
shlb
inc
out
clc
push
repnz
dec
jbe
xor
das
fdiv
mov
pop
cmc
mov
xchg
jnp
loop
faddl
dec
xchg
xor
xchg
dec
adc
lret
dec
fildll
pop
mov
mov
jno
mov
pusha
dec
in
fisubl
adcl
mov
cld
xor
xor
push
dec
inc
aas
aas
add
fadd
jnp
test
sub
loopne
lock
sub
nop
pop
cmpsb
ret
stos
fucomi
xchg
dec
sbb
sti
mov
fcmovu
ret
lds
dec
xchg
pop
mov
mov
jle
mov
sub
ljmp
sahf
mov
aad
xor
push
scas
loope
ljmp
cwtl
jno
mov
xlat
mov
test
shll
pop
pop
ret
jecxz
popa
adc
cmp
and
add
push
lods
subl
lock
in
or
jl
hlt
inc
fildl
ja
xor
cmp
push
or
and
dec
sbb
aam
arpl
ret
push
andl
jecxz
jg
jno
std
mov
mov
mov
aad
addb
outsb
popa
dec
hlt
mov
sub
shl
push
lcall
fwait
lock
dec
jge
add
xlat
cmpsl
mov
lcall
pop
fsubs
xchg
sti
pop
je
in
mov
icebp
jmp
mov
cmp
adc
loopne
add
data16
mov
imul
pop
and
test
fcmovu
movl
ds
shlb
fs
fwait
and
and
mov
stc
out
xchg
dec
adc
aaa
outsb
jo
add
add
popf
adc
or
push
dec
je
sbb
cwtl
loopne
mov
stos
xchg
sbb
jecxz
das
pop
mov
cmp
fldenv
ja
sub
xor
add
loop
jp
test
push
lock
fisubrs
adcb
add
daa
rorb
push
stc
push
pop
insb
out
shlb
pop
xor
mov
add
fmull
jp
jg
push
out
push
mov
bound
loopne
adc
add
imul
lea
dec
dec
add
xor
mov
pop
je
icebp
in
mov
testl
popa
lods
cmp
fcomip
mov
adc
sarl
gs
adc
scas
cmp
pop
shll
je
scas
jb
sbb
xor
cmpl
jne
mov
mov
pop
push
aam
dec
add
das
push
imull
dec
push
xchg
or
arpl
shll
mov
jecxz
jbe
push
lods
leave
psrad
sub
imul
sti
outsl
out
fwait
outsb
ds
adc
ret
and
pop
mov
or
xor
xchg
mov
sub
or
test
mov
loop
mov
mov
adc
mov
jne
cmp
add
sbb
mov
add
push
jecxz
flds
cmc
jb
cmp
xchg
daa
or
ds
push
mov
cmpsb
mov
out
xor
xor
sub
push
or
pop
xchg
pop
mov
imul
loop
add
gs
in
insb
cwtl
icebp
push
adc
outsl
add
sbb
mov
xor
fwait
test
mov
aam
loope
adc
xor
test
jo
cmp
icebp
inc
popa
adc
push
rolb
inc
mov
xor
in
aaa
imul
lret
pushf
fsub
neg
jg
aaa
jae
std
or
enter
rorl
jo
nop
movsb
push
xchg
out
int
sbb
sbb
loop
ss
dec
addb
in
ljmp
xchg
gs
out
rclb
aaa
jo
fcmovu
sub
inc
cmp
mov
xchg
jne
les
push
mov
sbb
inc
jmp
push
enter
ret
aam
loop
jb
das
and
xchg
movsl
pop
movsb
mov
xor
add
std
mov
cld
adc
sarb
pop
movsl
lahf
inc
or
push
pop
imul
inc
add
push
dec
sbb
mov
mov
aad
jae
push
dec
and
aas
rcrb
imul
push
mov
sbb
mov
or
ret
scas
cmpsl
add
mov
js
das
sub
cmp
bound
adc
or
movb
push
jp
stc
repnz
jecxz
or
lahf
mov
xchg
add
cmp
pop
sub
sub
xchg
mov
xlat
scas
aam
sbb
pop
sti
sti
jle
cld
imul
or
push
pop
mov
aaa
outsb
cmpsb
jl
xorl
push
pop
xor
xchg
pop
adc
xchg
inc
icebp
fdivrs
xchg
inc
jne
or
mov
movsb
sub
pop
push
lods
sbb
lret
bound
pop
fisttpll
flds
xor
push
push
test
sti
mov
dec
movsl
cmp
sbb
add
push
sub
push
inc
out
xchg
mov
lret
leave
aad
cld
push
pop
callw
inc
inc
xchg
faddl
inc
push
sti
loopne
inc
divl
adc
jb
or
fcoml
mov
iret
xor
jge
pop
movsb
fdivl
mov
lahf
inc
test
inc
sub
push
inc
jno
or
aas
mov
add
pop
ret
push
int3
xor
mov
out
loopne
add
pop
inc
arpl
mov
outsl
gs
fcomps
addr16
out
mov
inc
or
aam
mov
mov
mov
pop
test
lods
adc
pop
aam
xor
movsl
cmp
jb
dec
push
mov
mov
jo
mov
clc
std
movsl
xchg
imul
inc
jbe
xor
push
sub
idivl
push
data16
movsl
repz
pop
xlat
mov
xchg
xchg
xchg
mov
sbb
es
jb
outsb
mov
fcmovbe
pop
pushf
jle
fptan
jecxz
movsl
push
mov
sub
test
add
aad
cli
dec
inc
mov
push
hlt
loopne
fldenv
repnz
and
ljmp
sbb
add
xchg
sub
shl
loop
insb
dec
pop
cmp
pop
hlt
js
cmpsb
int3
or
sbb
mov
sub
mov
sbb
sti
scas
adc
out
xor
jae
es
arpl
push
mov
es
xbegin
lea
pop
xor
lret
out
and
and
mov
pop
lcall
hlt
ret
pop
mov
or
pop
and
sbb
in
sub
rep
cmp
mov
imulb
xchg
aaa
mov
xor
mov
lret
and
push
cmp
int
xchg
or
fldt
sbb
test
sbb
movsl
test
push
add
mov
push
add
or
call
test
adcl
xor
icebp
mov
push
test
int3
mov
out
das
jo
jecxz
jnp
sbb
test
jge
sahf
loope
mov
jl
das
mov
sub
adc
fcompl
inc
icebp
gs
push
stc
arpl
pop
jno
push
xchg
or
mov
notb
push
mov
movsl
push
aaa
ret
cwtl
jecxz
mov
xor
inc
mov
inc
dec
add
leave
inc
jns
aam
or
add
push
or
push
dec
pop
repnz
push
enter
clc
rclb
sbb
ret
push
dec
sbb
push
push
mov
dec
jg
sbb
xor
push
int
outsb
es
ja
cmc
popf
loopne
add
sub
add
sub
neg
sbb
pushf
faddp
loopne
dec
int
mov
jo
xchg
inc
insl
or
xlat
rclb
push
and
xchg
sub
jnp
cmp
dec
popf
shrb
dec
stos
adcb
and
out
mov
inc
dec
arpl
adc
jne
jno
dec
and
jle
pop
cwtl
inc
int
jne
inc
rcll
imul
and
jp
fdivl
cld
cmpsl
icebp
aas
inc
add
mov
mov
cmpsl
fadds
fidivrs
push
int
sbb
pop
test
sbb
jl
cmpsb
sub
mov
arpl
dec
fildll
dec
xchg
data16
popa
inc
add
dec
sbb
rcrb
cwtl
cmpsb
jle
add
aam
xchg
sahf
jne
mov
aaa
mov
sub
cmpsl
icebp
inc
pop
adc
ds
ja
out
lea
mov
xor
mov
mov
in
sub
stos
dec
sbb
cwtl
push
mov
cli
mov
jnp
jp
in
dec
jge
cmp
mov
sub
and
xor
xchg
sub
aas
add
jo
mov
mov
push
add
lcall
inc
or
ds
jmp
pop
mulb
cmp
inc
lods
cmc
add
sti
in
rolb
js
clc
inc
sbb
lods
adc
xchg
inc
adc
adc
insb
lret
lret
sbb
inc
mov
and
int
dec
aam
cmp
ror
fnsave
xchg
cmp
mov
clc
repz
imulb
or
orl
fiaddl
insl
mov
cmpsb
fisubrl
mov
repnz
xor
cmp
fs
jbe
aad
push
push
jg
cmpsb
and
idivl
adc
pop
hlt
stos
xchg
push
loopne
test
mov
add
jo
int3
dec
out
mov
leave
inc
mov
pop
arpl
int
movsb
or
mov
frstor
mul
lock
push
push
loope
adc
xchg
xchg
dec
push
cmpsb
lds
adc
xchg
mov
pop
cmp
mov
jb
mov
test
scas
pusha
ja
push
mov
xchg
arpl
test
ja
fdivp
cmp
mov
aad
add
adc
enter
lea
lods
dec
adc
int
into
orb
pop
jnp
bound
jbe
inc
sbb
jnp
sbb
xchg
inc
and
jne
pusha
jb
jge
xchg
icebp
icebp
cld
mov
mov
sub
out
add
std
sub
lahf
adc
test
fmul
push
xchg
pop
sbb
sbb
lock
popf
repz
sub
xor
adc
ljmp
dec
in
sub
xor
mov
icebp
stos
mov
push
jmp
addl
and
push
popa
aaa
ret
push
repnz
pop
lods
sbb
fistps
cmp
jns
jp
int3
fwait
xchg
inc
sub
push
gs
and
jns
or
xor
ret
fbstp
push
lret
pop
jne
fists
enter
lcall
push
jns
aaa
fimull
jecxz
sub
add
xchg
add
push
mov
mov
lret
and
adc
push
and
stc
sub
leave
fwait
push
dec
inc
add
mov
ds
mov
dec
stos
stos
inc
insl
pop
mov
mov
mov
imull
leave
xchg
lods
ljmp
and
adc
sahf
loop
xchg
andl
rclb
divl
popf
je
inc
inc
jns
clc
insb
push
and
or
sbb
mov
mov
and
pop
lea
push
mov
mov
loop
add
and
nop
std
in
add
and
mov
lods
or
jl
dec
test
cmp
loopne
subl
lods
cmp
adc
mov
xchg
and
shll
pop
fidivs
xor
fidivs
ficompl
repz
out
push
or
adc
popf
pop
aaa
sbb
ja
xchg
out
popf
cmpsl
and
aas
in
and
stos
popa
adc
inc
sub
es
cmp
and
in
sub
jnp
add
pop
push
inc
cmp
push
nop
idivl
std
or
xchg
clc
leave
sbb
data16
mov
sahf
fdiv
xchg
pop
cmp
xchg
push
in
pop
sub
inc
gs
push
out
les
in
hlt
sub
xchg
jae
inc
mov
pop
lret
mov
js
popf
pop
xor
xor
jp
push
pop
jae
jne
in
aas
loope
mov
imul
call
or
fisubrs
outsb
gs
inc
int3
and
loopne
sub
fsubs
sub
jo
dec
nop
aad
ja
add
lcall
jmp
and
jp
loope
daa
cs
xorb
pushf
cmp
cmpsl
pop
sbb
pop
inc
fidivs
daa
push
push
psrld
mov
xor
jp,pt
fs
cltd
enter
push
fs
fdiv
xchg
cmp
das
les
add
fmuls
fisttps
cmpb
dec
lods
adc
push
jne
mov
popf
es
jmp
jp
mov
clc
jle
fcomps
xchg
xchg
push
lret
lret
mov
jae
inc
std
das
jno
movsb
mov
aad
jecxz
scas
std
lods
ljmp
jns
inc
nop
dec
aaa
xchg
pop
arpl
adc
movsb
xor
jo
pop
xor
lds
jbe
push
js
xor
ret
dec
pop
mov
xchg
mov
fadd
dec
jae
cli
dec
hlt
or
rorl
filds
dec
xor
xchg
aas
mov
dec
sub
cli
push
mov
cmpsb
mov
hlt
fwait
push
imul
push
mov
adc
jg
dec
jnp
dec
addr16
pop
repnz
add
mov
pushw
dec
dec
repnz
aam
gs
dec
aas
dec
faddp
inc
cwtl
movb
dec
xchg
mov
or
add
in
loop
imul
mov
jo
sahf
mov
jp
cmp
add
xor
add
cs
or
jb
aam
and
push
ds
movsl
sbb
mov
stos
lret
setne
sti
nop
mov
push
cmp
xlat
pop
sub
mov
rorb
lds
push
ret
inc
mov
xchg
jb
test
adc
dec
and
ljmp
or
cmp
fmul
inc
xorl
jmp
test
lcall
imull
je
add
mov
push
into
bound
fimull
or
push
add
ficompl
imul
sbb
ljmp
adcb
jns
testl
cmp
rorb
add
movsl
fwait
cs
pop
push
jmp
pop
xor
xor
ss
or
sahf
cmp
lahf
mov
inc
mov
out
mov
lcall
fisubrs
xor
nop
push
out
outsb
repnz
jns
mov
push
jle
cld
stos
fistl
or
lahf
cmp
cmp
shl
sub
pusha
or
xchg
aaa
idivb
sub
sub
jae
xchg
jb
jb
cmpsb
ret
inc
xor
cmp
mov
mov
or
or
das
sbb
xchg
in
pop
push
iret
fdivl
shlb
sub
inc
cmp
inc
std
loop
aad
loope
inc
sub
pop
subl
in
sbb
sahf
xchg
repz
push
jg
push
jg
mov
mov
sahf
push
sub
mov
adc
xor
xchg
sub
pop
pop
lods
jle
cmp
push
mov
mov
lahf
lret
test
jbe
call
enter
xor
lcall
lock
scas
mov
and
sub
cs
xor
cmp
out
rcrl
movsb
ret
pop
outsb
xchg
fs
bound
loopne
xchg
cwtl
pusha
or
mov
outsl
shufps
mov
mov
add
xor
mov
mov
sub
daa
pop
adc
ss
pop
pop
push
scas
mov
testb
dec
cld
mov
sbb
mov
add
mov
adc
adc
fstp
sarb
std
mov
add
push
dec
jl
jnp
dec
push
pop
pop
in
stos
ret
fildl
popa
aas
push
jg
sub
push
dec
mov
stos
sbb
pop
movsb
stos
shr
mov
mov
test
cwtl
adc
adc
cltd
adc
sbb
mov
adc
ficoms
xchg
jns
adc
mov
inc
and
inc
loopne
sub
jne
inc
push
faddl
aaa
mov
fildll
insl
mov
rcll
add
imul
xor
mov
fisubrl
scas
add
out
mov
adc
jl
xchg
std
jmp
jnp
outsb
mov
movsl
adc
dec
or
push
pop
xor
mov
add
add
mov
mov
mov
xor
rcrl
jbe
mov
jnp
addr16
rcrl
cld
leave
or
out
hlt
imul
call
cltd
or
fisubrs
hlt
enter
add
aam
dec
adc
ds
sbb
mov
dec
jns
clc
sbb
mov
dec
cmp
push
and
xchg
cmpb
mov
iret
cmovs
fldt
dec
daa
lds
fcoms
mov
dec
cmp
das
push
jecxz,pt
pop
faddl
orl
stos
mov
sarl
fistpl
dec
cld
fcmovne
push
jns
insb
xchg
jno
jne
fwait
jne
dec
xchg
pop
iret
mov
jg
cmpsb
loopne
fdivrs
js
rcr
ds
fldenv
adc
cmpsb
jecxz
or
push
jns
stos
call
cld
xchg
mov
mov
jl
cmpsl
cmpsl
dec
inc
popf
xchg
sbb
fs
mov
add
fidivl
xor
in
aas
cmp
pushf
es
movsb
mov
push
sbb
jnp
cli
add
cli
out
adc
push
cmp
or
jg
add
mov
mov
jae
jnp
insl
mov
loop
rcrl
mov
mov
or
mov
pop
sub
into
stos
add
ret
pop
pop
xor
mov
mov
testl
mov
or
rolb
jo
jge
pop
in
sub
dec
xor
inc
pop
out
mov
push
xor
ret
gs
fisubrs
mov
cmp
mov
sub
in
shrb
dec
arpl
aas
loop
inc
test
sbb
out
int
and
andb
cs
push
into
jne
mov
jp
movsl
das
jp
call
mov
test
stos
jne
push
cmp
out
and
push
ficoml
in
xor
or
rcrb
adc
mov
pop
jle
sahf
jns
jle
data16
pusha
add
and
push
jp
fwait
stc
mov
cs
or
and
imul
sbb
jno
lods
mov
test
test
cli
xchg
dec
std
fcomps
iret
sbb
lods
ret
add
iret
inc
out
nop
out
dec
inc
es
dec
scas
popa
repz
lret
jg
xor
fwait
add
mov
enter
subb
dec
dec
xor
ss
addl
sub
pop
cmpsb
mov
cmc
test
data16
ds
out
dec
xorb
cwtl
sbb
inc
imul
fwait
out
xchg
clc
mov
xor
or
xor
fs
sbb
leave
aaa
ja
movsb
gs
test
out
push
or
outsl
movb
data16
xchg
xchg
push
mov
mov
xor
sub
outsl
sub
xchg
daa
dec
fnsave
inc
inc
add
push
arpl
xchg
mov
shl
sbb
fsubs
cmp
xchg
lock
sub
data16
xchg
mov
or
jne
and
xor
mov
fsubrl
cmp
push
push
dec
jg
lds
lods
cmp
sti
repz
jo
xchg
add
lahf
push
jmp
cmovne
jnp
add
shl
mov
rorl
in
dec
mov
xor
add
jle
jb
ret
mov
sbb
mov
xor
ja
call
icebp
mov
stos
mov
and
jbe
mov
rcrl
mov
inc
hlt
dec
insb
and
xchg
and
out
push
and
fstl
loope
subps
or
mov
dec
jmp
pusha
dec
bound
mov
int
adc
sub
subl
xlat
roll
ss
adc
loopne
pop
cmpsl
nop
pushf
stos
and
pop
decl
loop
test
push
out
mov
push
cmp
xchg
mov
mov
xchg
inc
sbb
clc
test
out
ja
and
inc
test
push
mov
pop
mov
cmp
mov
cmp
jo
js
mov
ds
add
mov
or
in
or
cmp
lcall
push
mull
mov
jno
adc
lahf
fs
cwtl
xchg
jnp
data16
rolb
xor
pop
icebp
sub
in
jne
push
and
mov
jb
xchg
dec
jo
cmp
imul
sahf
cmp
popa
mov
or
aaa
jnp
nop
mov
jmp
or
ds
movsl
fmul
cli
sub
xor
sbb
sbb
xor
mov
add
jnp
in
fsubs
outsl
loop
mov
daa
flds
pop
mov
cmc
add
jge
flds
addl
jb
jae
cmp
scas
sbb
mov
cmp
test
shlb
pop
mov
ret
sub
cltd
pop
mov
jecxz
mov
int3
cmp
mov
aaa
out
out
jmp
mov
and
mov
fcmovu
inc
test
dec
mov
mov
cmpsb
dec
cld
arpl
or
iret
fnstenv
rcll
push
lods
pop
cmp
cli
pop
sti
adc
fwait
pop
jbe
daa
mov
es
flds
mov
test
add
jmp
and
dec
scas
in
xor
dec
lret
adc
mov
in
or
sahf
cmpsb
xor
mov
adc
mov
jp
testb
xchg
ret
and
data16
inc
or
pop
pop
pop
jbe
push
mov
pop
or
and
sbb
test
jg
sbb
inc
push
inc
inc
mov
adc
call
lea
clc
mulb
mov
or
mov
lea
lret
sbb
push
inc
add
jo
fwait
shll
mov
test
xchg
inc
cmc
enter
ljmp
mov
inc
out
push
xchg
hlt
aaa
and
and
cmp
and
jb
into
enter
scas
xlat
jnp
lea
xlat
and
xchg
stc
sti
jo
push
icebp
mov
or
dec
sub
mov
lahf
sub
push
jbe
loope
mov
dec
push
xor
addl
int
push
push
rorb
mov
dec
call
das
pop
imul
mov
dec
rolb
add
daa
xchg
push
lea
sub
jo
dec
cltd
pop
jg
add
mov
mov
lock
rcrb
in
ds
jge
cli
scas
dec
cmp
mov
int3
inc
inc
sbb
movsl
lret
dec
rcll
popf
adc
mov
js
pop
rolb
cli
mov
jmp
push
push
sbb
mov
dec
adc
in
xor
xor
pop
push
or
pop
loope
pop
stos
loope
sti
ret
ret
pop
adc
cltd
and
pop
pop
fidivrl
sub
cmp
cwtl
jnp
movsl
cmp
cmp
inc
or
adc
out
xchg
sahf
sbb
aam
out
enter
mov
mov
dec
aad
ja
inc
imul
inc
and
insb
xchg
xchg
sbb
jae
sbb
daa
sbb
push
fiaddl
shll
lahf
aad
xor
xor
lea
mov
push
jo
dec
nop
sub
xchg
cmp
in
divb
push
adc
dec
lds
les
arpl
sarl
mov
pop
add
sbb
mov
aaa
jge
inc
pop
and
mov
mov
push
dec
inc
sub
xlat
adc
fwait
iret
xor
xor
cmpb
pop
das
shrb
test
cmpsl
imul
fsubrl
std
or
push
pop
loopne
movsb
dec
cmp
daa
dec
pusha
cmp
push
mov
cmpsb
xor
xchg
sub
dec
xchg
fisubl
mov
xchg
mov
sub
push
fwait
sbb
push
addr16
in
jge
ret
out
xchg
xchg
movsb
sub
pop
cmpsb
and
push
pop
add
jmp
inc
test
fcmove
shl
hlt
pop
dec
mov
sub
decl
add
setns
mov
cmpsl
mov
mov
dec
aas
push
orl
cmp
sbb
mov
inc
dec
js
push
push
scas
add
xchg
sub
inc
pusha
enter
dec
add
mov
push
inc
xorb
ss
and
lret
sbb
add
fsubl
lret
mov
rclb
stos
or
leave
loop
xchg
repz
out
jge
insl
push
add
test
xchg
shlb
hlt
repz
ljmp
cli
aas
adc
sbb
mov
mov
insl
xlat
hlt
mov
ja
cld
mov
cmp
dec
addr16
iret
stos
or
ljmp
test
fcomi
popa
jne
ds
je
fstp
xor
mov
lock
gs
xchg
xlat
sub
pushf
push
rol
outsb
fimull
fiaddl
xchg
mov
add
mov
add
sti
dec
lahf
sbbl
scas
xor
jnp
cmp
jg
jbe
lcall
in
lcall
mov
xor
cmp
lods
xchg
stc
fcomip
sub
fdivr
mov
or
adc
add
sub
sahf
xor
mov
xchg
aaa
adc
lds
mov
test
in
mov
pop
aam
lret
or
pusha
dec
mov
shll
out
mov
and
mov
cmp
js
mov
mov
and
or
dec
dec
jp
incb
jecxz
dec
pop
xor
loopne
fcomi
mov
push
call
lock
or
iret
sbb
add
jb
mov
mov
cmp
lret
dec
mov
daa
mov
insb
push
incl
jns
movsl
loopne
cwtl
cltd
jmp
aas
ret
xor
xor
mov
ljmp
xchg
xor
xchg
mov
test
add
jge
and
lock
add
mov
mov
out
push
sbb
sub
jb
jg
and
push
jne
scas
mov
pop
popa
and
pop
mov
push
xchg
or
xchg
pop
dec
sub
mov
stos
pop
fisttpll
xchg
inc
mov
and
cld
mov
in
call
in
jp
jg
and
in
mov
jbe
stos
jp
or
sbb
xor
bound
std
jns
dec
icebp
mov
insb
pop
add
mov
push
sbb
lods
add
inc
mov
adc
aaa
push
mov
test
fcmovb
jl
adc
push
inc
jbe
incl
addr16
pushf
pop
popf
test
jle
repz
mov
xchg
dec
fcomps
cmp
lods
movsl
int3
xchg
add
and
sbb
insl
sbb
sub
sarw
fadd
loop
nop
mov
and
ljmp
scas
aaa
jbe
cmp
lcall
xor
fmul
mov
stos
loopne
adc
dec
xchg
int
or
lret
repnz
lcall
dec
mov
fnstsw
sbb
push
lds
or
dec
cltd
mov
cmp
dec
or
dec
mov
mov
or
sarb
jge
sbb
es
cmp
sbb
jmp
jno
push
loop
xchg
fidivl
inc
dec
push
popf
roll
es
std
int3
mov
adc
xchg
cmp
lea
push
pop
insb
dec
subb
lds
out
mov
mov
pop
adc
insl
and
shlb
movsb
xor
repnz
call
push
imul
push
jge
jle
or
sbb
mov
push
mov
outsb
xchg
xchg
push
pushf
xchg
jl
add
xor
daa
outsl
cmp
fidivrs
or
adc
pushf
add
mov
pop
and
loopne
lock
gs
adcb
dec
fldcw
pusha
lods
in
fsubrp
dec
push
or
push
repnz
sbb
add
inc
bnd
inc
mov
dec
inc
dec
jmp
jb
aam
xor
mov
loop
sbbb
shl
sub
sub
repnz
in
fwait
hlt
inc
cmp
imul
je
dec
sahf
outsl
and
jb,pn
stos
in
popf
repz
repnz
aad
in
mov
jmp
shlb
fnsave
rcrb
cs
xchg
mov
mov
sbb
pop
pop
sub
je
add
mov
jecxz
or
push
fs
jg
pop
push
lods
mov
lock
test
and
dec
and
push
cwtl
fnstcw
aaa
fst
mov
hlt
inc
addb
or
js
dec
xchg
cmpsb
sti
xor
mov
push
cli
inc
iret
cwtl
cld
sahf
ja
scas
data16
jl
lcall
xlat
leave
leave
lods
xlat
xor
inc
mov
test
fimull
sub
mov
inc
xor
cld
dec
pop
cltd
idivb
xchg
rorl
in
push
sub
int3
shrl
xor
pop
adc
lahf
popa
iret
lods
outsb
mov
jmp
mov
imul
adc
insb
mov
jge
addr16
dec
stos
addl
out
mov
jne
call
lds
mov
movsb
inc
add
es
into
mov
push
adc
es
fstl
ds
loop
push
dec
push
push
or
xchg
imul
mov
sub
insb
sub
inc
imul
sub
add
xchg
out
push
psubq
pop
dec
stos
mov
mov
fldenv
call
push
adc
push
int
test
pop
in
arpl
cmp
cmp
insb
xchg
sbb
popa
shl
sbb
fistps
dec
sub
stos
mov
mov
add
movsb
sbb
cmp
sbb
dec
add
fadds
leave
in
pop
stc
jmp
orb
sub
aad
xor
xchg
pusha
stos
inc
xor
sub
testb
das
roll
push
test
into
dec
dec
cmp
sbb
repz
sti
ret
out
or
addl
cmp
insb
fimuls
mov
mov
decb
call
lcall
jnp
adc
pop
fwait
cld
add
addb
add
rol
cmc
push
fs
js
mov
dec
or
iret
or
mov
mov
jle
addb
iret
mov
test
inc
leave
mov
sub
cmc
pop
pop
or
fistl
lea
cmpb
jb
xchg
pop
dec
les
mov
push
push
test
cmc
inc
fwait
std
std
in
or
imul
es
sarb
shlb
aaa
std
cmp
stos
push
mov
xchg
pop
popa
cmp
mov
mov
xor
lock
stc
cld
scas
jle
stos
pop
and
mov
xchg
push
inc
fcoms
imul
xchg
xchg
lret
filds
dec
lods
cmp
sub
add
nop
imull
addr16
xlat
lock
leave
in
xchg
inc
lods
out
cmpsb
das
mov
pusha
cmp
and
ror
jmp
je
xor
ret
cld
gs
sbb
cs
sub
and
xchg
mull
inc
push
xchg
sbb
sub
mov
xchg
and
inc
lods
cmpsl
adc
lea
loope
scas
clc
xor
pop
push
push
inc
lcall
jl
rorl
orb
or
add
in
push
aam
add
pop
ret
jp
rcrl
stc
jp
pop
cld
test
pop
inc
stos
stc
aad
ds
xor
cmp
xchg
dec
cmp
add
cmpb
pop
xor
and
xchg
cmp
mov
cmp
repnz
bound
lods
mov
mov
or
dec
incl
jnp
shlb
repnz
pop
cmpsb
pop
lret
ljmp
rorb
mov
sub
cmp
dec
outsl
and
pusha
or
dec
add
cwtl
xor
icebp
aas
int3
gs
and
repz
mov
xor
es
xchg
cmp
int3
ljmp
into
imul
dec
and
dec
push
fimull
xchg
lods
jae
dec
in
dec
mov
cmpl
aam
xor
negl
negb
fdivl
mov
stos
jle
in
jno
imul
and
mov
inc
push
xchg
out
mov
jnp
imulb
add
rol
dec
scas
fcmove
loope
divb
push
movsb
mov
mov
xchg
enter
push
pop
sbb
jno
lock
pop
pop
in
scas
stc
dec
mov
dec
out
mov
and
xchg
mov
cmpsl
std
push
loop
enter
repnz
inc
or
fnstsw
mov
insl
mov
mov
ss
dec
push
xorl
cmp
hlt
int3
in
pop
or
je
xor
push
xor
and
push
pushf
bound
cmpsb
adc
icebp
inc
cwtl
out
jg
xchg
stc
mov
in
and
or
mov
mov
fidivl
push
pusha
jmp
sbb
popa
mov
lret
loop
mov
rcrl
loop
push
in
jmp
pop
inc
cmp
stos
sub
js
in
call
sub
test
inc
lds
jmp
clc
mov
shrb
test
jnp
xchg
sahf
lahf
aad
adc
cmpsb
in
or
jb
lret
xor
mov
es
dec
adc
arpl
or
lds
ds
dec
push
fistl
cli
mov
cmp
lret
mov
fstpt
lret
test
dec
in
fildl
mov
mov
add
adc
xchg
mov
scas
fnsetpm(287
repnz
mov
pop
hlt
fisttps
sbb
pushf
push
push
lcall
xor
enter
xchg
ret
push
ds
push
jl
das
pop
mov
bound
movsb
jbe
call
xchg
hlt
in
mov
test
push
pushl
lods
hlt
jnp
gs
cwtl
adc
sbb
sub
fists
stos
xchg
fs
adc
and
aas
mov
mov
into
daa
pusha
aad
add
mov
test
lahf
jno
ret
mov
cmc
mov
ficoms
cmp
or
inc
mov
jb
or
cs
dec
neg
out
daa
mov
sub
gs
add
rorb
sti
cmp
jb
cld
outsl
cs
sbb
ja
ret
mov
pop
jb
xlat
imul
jne
mov
out
in
popf
cmpsb
mov
jmp
rolb
imul
out
aad
push
add
mov
xchg
out
jg
pusha
iret
lcall
dec
repnz
cmp
add
shll
je
cmp
sbb
stos
cld
cbtw
and
lcall
pop
cmpsl
add
jne
xor
mov
lret
add
idivb
sub
arpl
or
push
aaa
sub
dec
test
mov
sub
mov
sbb
xchg
push
lock
gs
cltd
ss
push
pusha
cld
inc
popa
lods
or
out
incl
and
pop
sbb
adc
out
loop
in
push
sbb
lret
fmull
in
aam
not
mov
pop
dec
icebp
pop
sub
out
sbb
outsb
dec
into
fwait
sbb
mov
std
aas
sbb
or
sbb
into
stc
scas
rep
out
inc
push
sub
xchg
dec
dec
out
add
mov
push
add
mov
test
pop
adc
mov
fdiv
sbb
pop
xchg
adc
xor
inc
or
or
add
outsb
push
push
gs
int
or
push
enter
pop
fs
mov
scas
sbbl
cmp
xlat
out
ret
xor
add
xchg
icebp
and
pop
mov
sbb
cmpsb
mov
fsubs
mov
fucom
and
in
or
lods
mov
lds
cld
std
add
jg
std
sub
sarl
sub
aad
lea
or
fildl
inc
mov
lahf
imul
in
mov
jnp
adc
gs
cmp
pop
sarl
push
adc
cmp
lds
scas
pop
enter
mov
aad
jb
inc
mov
add
std
psrlq
loopne
movsl
and
paddd
pop
mov
int
mov
fistpl
cmpl
scas
sti
pop
xor
hlt
xacquire
mov
and
sub
push
pop
cwtl
lea
lcall
cmpsl
lods
mov
pop
rcrl
loopne
movsbl
jno
int
mov
cwtl
mov
loope
mov
fmuls
adc
fwait
xor
int
roll
xor
fs
pushf
and
and
fdivrl
mov
mov
dec
xlat
bound
fnsave
jp
add
insb
scas
cs
push
test
mov
sbb
mov
cmp
inc
aas
scas
imul
xchg
mov
or
xor
cmp
sbb
stc
jge
or
sbb
pop
inc
xchg
lahf
flds
jecxz
std
adc
std
inc
mov
xchg
xchg
mov
xchg
mov
ret
and
fs
sub
adc
and
sbb
pop
mov
pushf
mov
hlt
xchg
call
inc
mov
push
subb
lock
xchg
sti
jecxz
lahf
sub
popf
mov
dec
push
inc
cmp
ja
add
sti
std
add
int3
test
scas
cmp
sbb
xlat
mov
sahf
clc
popl
js
movsl
lods
pop
add
jl
adc
or
dec
cmp
sub
fisttps
addr16
or
pop
outsl
popa
mov
dec
and
mov
or
and
rolb
leave
cmp
es
sub
lcall
jns
push
shr
mov
cmp
xor
fs
cs
ss
sti
cmp
hlt
xchg
out
cmp
pop
or
mov
mov
push
cmp
pop
jp
mov
aaa
or
inc
int3
iret
mov
inc
rorl
test
and
push
shll
out
mov
leave
xor
pop
push
cmp
jle
jmp
arpl
inc
lcall
mov
popf
xor
jae
mov
fsubrp
int3
shlb
mov
dec
in
cli
xor
jo
cwtl
xor
xor
sub
mov
push
cmpsb
jae
stos
loopne
cltd
push
test
push
popa
decb
xchg
mov
loope
add
sub
ljmp
jns
cmp
cmp
lods
mov
pushf
int
xor
aas
xor
and
mov
adc
and
jno
cmp
adc
mov
cmp
lods
fs
imul
jecxz
std
push
rcrl
icebp
xor
or
pop
in
ja
je
push
ret
adc
js
insl
repz
jae
push
insb
adc
fcmovnbe
testl
js
leave
jle
sub
insb
pop
mov
pop
ss
pop
sub
andl
xchg
mov
add
imul
sub
pushf
jcxz
add
sti
mov
sbb
pop
ds
daa
fnstenv
cld
data16
addr16
mov
and
gs
sbb
ds
outsb
scas
mov
xchg
push
pop
out
fwait
push
xchg
cmpsl
fstps
and
adc
dec
je
mov
pop
jecxz
cmp
test
mov
push
inc
clc
outsb
das
mov
hlt
adc
pusha
ret
push
sub
xlat
fimuls
cli
fadds
add
sahf
adc
nop
mov
jge
ds
cmpsl
shll
adc
insl
jmp
and
push
push
xchg
mov
frstor
testl
jecxz
cld
lcall
mov
pop
addr16
sbb
cs
dec
bound
push
orl
scas
and
popa
mov
clc
hlt
imul
mov
popf
mov
add
imul
sbb
stos
ja
setg
dec
fwait
sbb
jmp
and
sub
cmp
dec
push
add
mov
jo
dec
arpl
cwtl
sti
pop
xor
test
stc
mov
sub
loop
test
or
lods
loop
movsl
insl
sahf
cmpsb
lcall
mov
testb
data16
xchg
dec
pop
dec
adcl
xchg
xchg
frstor
sbb
or
vmwrite
jne
pop
adc
test
push
ds
std
mov
lret
daa
lds
out
ret
sbb
icebp
xlat
pop
cmpsb
adc
or
adc
push
or
lahf
in
dec
adc
gs
and
iret
xor
ljmp
xor
pushf
sub
in
iret
repz
jns
xchg
add
pop
lock
js
xor
sub
push
test
push
and
add
mov
pop
ds
in
xchg
xor
sarl
adc
sbb
xlat
adc
dec
mov
adc
xor
rcl
dec
push
and
adc
mov
scas
push
jne
or
aad
fsubrs
push
lods
repnz
jge
fcmovb
test
outsb
scas
leave
adc
jl
popf
and
mov
mov
or
mov
mov
sub
int
daa
mov
or
push
scas
call
push
add
repz
aas
mul
fwait
test
daa
dec
xchg
mov
mov
cltd
push
cmc
lea
data16
dec
cltd
jbe
sbb
mov
clc
xor
std
fildl
dec
scas
shrl
dec
dec
roll
xchg
movsb
sub
mov
movsl
xchg
dec
popa
fs
cmp
add
mov
pop
in
lret
pop
in
mov
inc
popa
stc
imul
push
orb
in
jbe
stos
adc
dec
pop
outsl
subl
jle
loope
arpl
xor
div
and
pop
lea
out
les
divb
rcll
out
ljmp
xor
out
test
push
aaa
mov
ficompl
sbb
sub
mov
jns
jae
divl
call
adcl
roll
jnp
stos
loopne
shrl
sub
jl
jl
jae
outsl
js
rolb
pop
mov
inc
cwtl
sub
out
sub
cmpsl
xchg
pushf
stos
fs
jno
mov
or
sub
mov
cwtl
repnz
xorb
pop
xlat
jmp
imul
push
push
push
xchg
add
jbe
test
add
or
test
cld
mov
test
adc
fadds
jp
popa
jp
cltd
jp
stc
jmp
push
addr16
pop
movsb
fisubs
and
icebp
cs
pop
jns
fcmovnbe
rolb
and
push
pop
push
cmc
subb
aaa
push
add
out
in
fs
sbb
mov
stos
inc
outsl
jbe
and
in
mov
cmp
ja
push
sbb
stos
or
jnp
leave
adc
imul
mov
divb
stc
inc
cmc
or
orl
push
movb
js
movsb
pop
out
in
cmp
inc
pop
outsb
push
inc
mov
in
js
je
pushf
bound
adc
out
jnp
mov
in
fstpt
movsl
pop
xor
xchg
cmp
jbe
int3
xor
movsb
addr16
psubusw
mov
jmp
and
xchg
jmp
xchg
stos
inc
mov
repz
std
jb
add
add
les
xorb
insl
jnp
and
out
mov
adcb
lods
enter
push
xor
outsl
push
add
cmp
cmpsl
out
add
push
inc
bound
aas
arpl
push
call
idivb
in
popa
mov
sbb
or
cmp
jbe
push
sub
int
int
insb
repz
inc
icebp
xchg
mov
push
dec
fnstcw
xchg
push
push
or
repnz
jmp
pop
cmp
sub
cmp
roll
mov
mov
fsubrp
inc
cmp
shl
cld
lahf
add
fsub
dec
aam
je
mov
xchg
ja
push
sub
jnp
testb
out
fstl
popa
int3
inc
lds
xor
cs
pusha
ss
out
pusha
xchg
push
lret
mov
push
push
mov
add
pushf
xchg
mov
test
out
test
xor
dec
negb
out
int
push
cmpsb
fcmovnbe
pop
in
mov
daa
jo
popf
lods
dec
test
mov
bound
int
jp
and
jl
xor
ss
in
dec
cmp
lret
xor
cmpsb
dec
stos
nop
mov
sub
aam
jl
add
daa
ss
repnz
pop
rcrb
xchg
jo
out
ret
jecxz,pn
in
shr
xor
mov
or
je
in
fucom
mov
push
cmp
inc
fwait
les
cli
int
icebp
pop
ss
push
sarl
out
bndstx
and
add
and
push
mov
imul
xchg
mov
iret
push
xchg
dec
repnz
mov
lret
mov
shlb
and
pop
shlb
fistl
inc
dec
into
pop
xchg
mov
pop
out
imul
dec
movsl
xchg
jbe
fwait
mov
jp
jg
xor
movsl
sub
pop
enter
test
pop
mov
add
loop
and
pop
and
dec
add
mov
adc
dec
jmp
or
sahf
inc
cmp
fcomps
add
pusha
push
sti
cwtl
repz
pushf
clc
es
sub
or
andl
mov
cli
cs
and
mov
jae
inc
mov
icebp
addb
in
mov
sbb
xchg
iret
cld
loope
push
ret
mov
and
push
mov
pop
inc
dec
shrl
iret
in
pop
jno
outsb
lock
ret
scas
xabort
mov
xorl
les
mov
lahf
dec
jae
mov
scas
mov
or
es
cld
aam
and
xchg
icebp
scas
sar
xchg
add
xchg
lret
ffree
jecxz
out
out
mov
cmp
xor
in
mov
sub
push
movl
adc
add
and
xor
leave
in
sbb
int
imul
xor
dec
enter
lret
cmpsl
push
fcomp
mov
mov
test
das
xchg
ud2
fisttps
inc
call
stc
sub
push
into
lods
and
push
aaa
push
mov
cltd
sbb
js
cmpb
movsl
jo
mov
or
push
testl
xchg
adc
xor
cmp
mov
flds
insb
movsl
push
pop
or
add
pop
cld
sbb
aam
out
jno
scas
aad
pop
inc
jns
jmp
test
mov
xchg
sbb
and
mov
out
fsubr
jl
fidivs
cmp
mov
jl
jb
jl
repnz
push
out
ja
outsb
fists
pop
or
or
loop
jmp
out
andb
mov
insl
notl
movsl
in
mov
movsl
add
jmp
jecxz
sahf
dec
and
push
pop
ljmp
scas
mov
popa
cmp
pop
fld
push
jge
sub
mov
fsubrl
out
int
test
cmpsl
mov
jecxz
bound
out
mov
push
nop
add
jl
dec
push
mov
mov
popf
mov
fldenv
popf
cltd
pushf
scas
and
sub
push
inc
loope
inc
les
inc
ret
xchg
adc
adc
adc
mov
in
in
cmp
jbe
stc
push
push
call
sub
leave
ror
push
orl
popa
imul
inc
aas
push
nop
mov
sub
or
pop
dec
jecxz
xor
adc
xchg
adcl
out
pop
int3
ret
incb
es
sub
mov
cmc
out
out
sbb
in
cmpsl
mov
insl
loopne
and
mov
in
cmpsb
or
cmp
pop
cwtl
cmp
push
lea
sbbb
dec
push
outsb
push
inc
aas
clc
sub
inc
or
sbb
cmp
pop
dec
mov
inc
add
or
jecxz
test
arpl
loopne
adc
jno
shll
out
scas
loop
movsb
adc
and
cmpsl
and
das
pop
mov
inc
test
out
cli
cmp
cmp
popa
inc
incb
inc
sub
divb
add
mov
andl
add
outsb
mov
adc
jp
insl
xor
lret
fstpt
mov
cmpl
sub
dec
into
loope
xchg
add
push
cld
scas
lods
les
negb
shl
fwait
js
mov
insb
dec
lcall
or
lret
lock
repz
mov
jle
iret
loope
cmc
mov
pop
add
adcb
jbe
mov
cli
cmp
shlb
mov
js
xor
test
hlt
xor
les
call
fmull
mov
mov
rorl
sarb
push
cmc
rcll
or
out
out
fs
push
js
and
or
adcb
mov
out
dec
shlb
ret
adc
or
ss
imulb
mov
cs
mov
outsb
ret
mov
sbb
enter
mov
mov
and
pop
and
das
lea
xlat
in
or
fidivrs
add
stos
inc
sbb
mov
pop
rdtsc
in
cli
idivl
lret
test
sub
mov
fcoms
mov
sti
fimuls
mov
mov
in
push
mov
enter
sbb
lock
xor
in
int3
dec
xchg
out
test
rclb
movsb
or
int3
xor
jl
movsb
cli
add
nop
lret
push
or
ds
mov
mov
cli
movsb
mov
jns
xchg
add
xlat
push
mov
ljmp
movsl
xchg
jno
push
sub
outsl
lds
mov
lret
xor
aas
outsl
jp
dec
fmulp
loope
insb
push
fnsave
jae
cli
fisubs
je
jmp
or
push
sahf
fcmovb
and
icebp
popl
cmp
jge
subl
mov
aas
push
pushf
and
cmp
push
sbb
arpl
arpl
push
mov
sbb
shrb
lea
ds
call
sbb
lahf
pop
mov
push
fisubrs
push
xchg
imul
popl
ds
pusha
mov
jl
fs
pop
cmp
adcl
into
lret
cbtw
ds
pushf
mov
push
addr16
out
xchg
and
sbb
fsubr
fidivl
jb
pop
sbb
aam
pop
jg
xchg
xchg
xor
inc
hlt
movsl
fists
push
or
test
mov
jnp
mov
adc
cmp
mov
stc
gs
inc
push
inc
jo
sti
fdivrs
out
lret
xchg
push
repnz
push
cmc
push
ss
fisubl
add
notl
repz
push
pop
mov
iret
pushf
mov
push
cmp
outsl
ret
and
xchg
imul
rcl
in
sbb
into
rcrl
in
in
push
inc
mov
das
mov
inc
xor
inc
test
sbb
call
jp
mov
and
movsb
iret
mov
jae
sarl
mov
out
xor
fidivl
int3
inc
enter
popf
cmc
dec
loopne
std
fisubrl
popa
dec
icebp
cmp
mov
sbb
fisttps
fldenv
lock
pop
xchg
cltd
dec
std
inc
jl
xor
in
addr16
sub
dec
lahf
inc
mov
inc
out
push
pop
setae
mov
shll
out
mov
or
lds
mov
mov
or
into
or
les
insl
xchg
rorb
mov
iret
and
or
pop
js
push
or
jb
adc
cmpsl
or
ss
jg
jbe
mov
lds
popf
mov
pop
cmc
cmpsb
hlt
out
xor
push
jmp
into
loope
mov
in
push
push
movsl
in
jmp
adc
adc
fmuls
fistpll
fs
jne
pop
mov
push
and
pop
xchg
xor
jno
test
test
iretw
cmpl
jne
shr
pop
das
push
sub
cmpsl
sarl
cs
sbb
push
mov
sub
pop
add
cmpsb
push
test
popf
je
lret
inc
movsl
push
jge
jno
stos
pop
ds
out
daa
jbe
adc
fsubr
cltd
outsl
xchg
ljmp
mov
cmp
jno
jns
js
fcoml
push
fstpl
imul
daa
je
idivb
jle
jg
sub
jae
inc
sarb
dec
push
movl
les
ja
test
xor
dec
pop
sbb
and
xchg
lcall
dec
sbb
mov
movsb
jmp
sbb
dec
jo
out
jge
or
sub
hlt
mov
insl
xchg
ljmp
dec
xor
xlat
cmp
std
outsl
xor
pusha
pop
adc
lds
sbb
xchg
iret
xchg
lret
mov
nop
shll
clc
push
call
call
xor
movsb
imul
ds
dec
push
xchg
jae
sbb
pop
jmp
and
or
repz
insl
sti
cmp
push
inc
sbb
jb
jbe
mov
pop
ret
icebp
lcall
mov
fsubrp
xor
mov
dec
cmp
imul
dec
push
call
hlt
fstl
loopne
cmp
add
fcoms
je
hlt
ljmp
and
push
add
ja
xor
jmp
movsb
or
xchg
stc
sar
push
mov
movsl
enter
stc
and
addr16
mov
repz
cltd
jae
xor
pop
loopne
xchg
icebp
inc
pop
inc
mov
fcomps
jp
icebp
lcall
in
popa
dec
adc
pop
and
subl
shl
xor
jl
mov
pop
inc
jl
jecxz
adc
mov
aam
push
sbb
out
mov
push
mov
or
mov
pop
pop
mov
and
test
scas
loopne
outsb
adc
aad
jge
lcall
shrb
mul
sub
popf
push
in
sbb
dec
fidivs
fistps
lret
jno
iret
sahf
and
movsb
mov
dec
ljmp
loopne
jnp
inc
out
inc
sub
or
fisttpl
xor
mov
mov
aad
fidivrl
pop
sub
fstps
insl
mov
movsb
imul
sahf
notb
ljmp
stos
xchg
aaa
xchg
mov
xor
push
es
sub
mov
mov
cs
jle
xor
lods
mov
shll
add
pusha
ss
out
and
jns
jbe
stos
lret
fldl
jae
mov
test
xchg
xchg
rorb
inc
mov
es
loope
add
xor
imul
pop
push
xor
sbbl
scas
dec
and
inc
das
popf
repnz
lods
fildll
jbe
ss
lods
fisubrs
dec
sbb
sub
pop
sbb
jle
imul
lcall
shl
fnstenv
mov
mov
loop
test
jmp
out
ja
dec
push
ret
pop
ret
cmp
jmp
scas
out
test
mov
mov
jbe
xchg
arpl
jno
mov
mov
add
xchg
outsl
ljmp
jo
inc
mov
and
lods
adc
sub
cwtl
push
cmpsl
in
xchg
mov
popa
push
das
lock
mov
inc
sbb
bound
shlb
cmp
loopne
mov
push
leave
jns
scas
repz
push
or
stc
and
daa
jmp
sbb
movsb
mov
xchg
cs
cmpsl
mov
add
add
mov
pop
in
jg
push
dec
jp
imul
movsl
lods
push
jge
rcrl
xor
cwtl
repnz
jmp
aaa
je
nop
sarb
cmc
xor
dec
mov
cmpl
mov
lret
mov
test
mov
pop
shlb
std
scas
add
push
mov
repz
loope
fistpll
mov
int
pop
popf
push
inc
push
roll
ljmp
sbb
loope
test
cwtl
icebp
iret
stc
test
lock
scas
or
jecxz
stc
pop
arpl
leave
cmc
pusha
lea
repnz
pop
mov
add
sti
sub
je
xchg
sbb
ficoml
cld
loop
pop
ror
mov
hlt
inc
push
sub
insl
sbb
ss
pop
lret
sub
mov
dec
inc
ja
sbb
add
cmpsl
adc
jp
cmpsl
ljmp
dec
xlat
jae
int3
fstpl
xor
fwait
jbe
es
lret
in
pop
xlat
jg
aaa
lods
sub
mov
xchg
rcll
add
jp
int3
iret
xorl
adc
test
mov
dec
sub
jg
outsb
scas
xchg
push
cmpsb
push
jle
pop
pop
pop
mov
imul
inc
xor
sarb
hlt
repnz
orb
add
push
dec
aas
movsl
mov
pusha
aad
xchg
and
dec
sub
mov
rcll
or
push
clc
xlat
xor
mov
pusha
dec
mov
jmp
repz
dec
aam
negb
mov
xorl
pop
mov
dec
or
xchg
outsb
fisubs
test
pop
loopne
test
faddl
mul
popa
xchg
dec
adc
cmpsb
jbe
testl
inc
clc
jp
cld
es
sbb
inc
cs
leave
jg
xchg
pop
ret
lret
xor
mov
mov
jb
cmpsl
xor
jns
sahf
jg
pop
sbb
outsb
hlt
mov
mov
lret
js
arpl
pop
push
push
xchg
clc
int
in
pusha
loope
push
sbb
lea
shll
lea
imul
shrb
daa
daa
adc
movsl
aam
inc
in
dec
mov
and
call
imul
shrb
in
insb
and
stos
int3
xchg
or
js
movsl
xchg
sub
fisttps
fcmovb
ds
xchg
cmp
int
scas
xchg
lea
rcl
sub
sub
movsl
add
xor
adc
push
cli
lods
mov
sub
jge
mov
mov
sbbl
add
sub
ret
repnz
or
or
in
push
xlat
xchg
sarl
sarb
mov
mov
jbe
sbb
test
inc
add
test
jg
mov
jp
or
adcb
adcl
push
inc
sbb
mov
js
mov
into
pushf
aaa
cltd
xor
sub
xchg
fwait
icebp
mov
jnp
sbb
testb
icebp
push
adc
or
jo
fs
ds
sub
adc
mov
push
mov
pop
xchg
fwait
cmp
mov
mov
xchg
das
dec
cltd
adc
and
add
push
inc
mov
fisubs
ljmp
lea
mov
outsl
cmp
lock
pop
pop
mov
dec
cli
or
add
cmpsl
jno
xchg
fsts
in
adc
out
sub
mov
add
lock
cltd
xor
mov
int
ds
mov
test
fsubs
andb
pop
sbb
repz
rorl
jo
cwtl
mov
ret
pop
mov
divl
cmpsb
outsl
lcall
mov
rcrb
inc
sbb
lods
arpl
inc
sbb
add
adc
jne
nop
movsb
jle
adcb
pushf
lret
outsb
les
popf
aas
out
jg
and
xorl
cmpsb
mov
lods
pop
pop
xor
in
adc
call
adc
push
dec
gs
lahf
jge
pop
rorl
fwait
jne
push
jae
in
rorl
and
mov
add
sbb
pop
clc
test
push
xor
dec
dec
xchg
pop
ss
sbb
in
iret
pop
imul
add
sub
iret
dec
inc
mov
clc
mov
add
and
cmp
leave
jmp
add
and
add
paddsw
pop
dec
cli
clc
cmp
or
in
fdivrp
dec
in
shlb
outsl
jle,pt
and
movsb
mov
sahf
aaa
fwait
xor
data16
out
es
insl
mov
inc
repnz
or
clc
gs
inc
xchg
dec
mov
lcall
shr
js
arpl
and
jnp
xchg
push
push
cmpsl
and
push
insl
cmp
pusha
push
sub
data16
xor
xor
es
and
scas
stos
adc
sub
das
les
jle
sahf
mov
adcb
or
and
pop
arpl
ret
dec
cmpsl
cli
out
int
mov
jge
mov
rclb
dec
push
pop
sti
mov
jo
fldcw
mov
les
sbb
sub
pop
adcl
xchg
stos
jae
js
loop
notl
jmp
xchg
mov
and
pop
pop
pop
roll
insb
scas
js
xor
out
push
sbb
inc
push
mov
movsl
fldenv
addw
dec
mov
mov
ret
sbb
fistl
popf
push
inc
xor
rcll
ds
pop
call
adc
mov
pop
mov
lock
jg
or
add
inc
dec
test
loop
mov
addb
addr16
mov
mov
mov
dec
nop
sbbl
popa
mov
mov
aad
fnstcw
sub
push
xor
xor
das
shrl
add
stos
or
jl
mov
les
cmp
es
inc
dec
outsl
rcrb
mov
gs
mov
inc
int3
cmp
cmc
sbb
mov
xor
xor
push
lret
dec
mov
mov
dec
fmuls
xchg
into
or
push
loope
movsl
cmpsl
sub
out
in
lds
shrl
inc
pop
push
das
ljmp
xlat
ss
arpl
push
adc
mov
popf
or
movsb
and
rcrl
push
das
ss
pushf
mov
movb
mov
cmpsb
icebp
add
adc
dec
leave
or
mov
fnstenv
rol
add
pop
pop
xor
jmp
inc
movsb
sub
jnp
pop
xchg
mov
ret
ret
cwtl
xchg
cmp
data16
aad
jbe
test
sbb
jno
push
fs
mov
inc
inc
enter
dec
fwait
imul
add
add
addr16
mov
test
mov
out
outsl
ret
jae
mov
data16
cmp
or
idivl
out
and
test
mov
mov
pop
xlat
cmpb
jecxz
pusha
aaa
or
push
addr16
sarl
sbbb
leave
xchg
inc
add
enter
cli
movsb
push
subl
dec
adc
push
std
xor
mov
xor
ja
fadds
ja
cmpsl
cmpsb
xor
and
aad
cmp
fucomp
loop
mov
xchg
inc
and
test
pushf
lahf
fdivrs
cmp
ja
outsb
mov
hlt
xor
lods
mov
or
and
fcomps
aas
push
or
enter
xor
dec
jns
inc
jecxz
or
aam
mov
cmp
mov
iret
sti
push
sbb
xor
addr16
or
scas
dec
inc
push
out
pusha
shlb
ja
sbb
fdivl
imul
sarb
cltd
push
sub
xchg
pop
adc
cwtl
cmp
sbb
fmuls
das
js
mov
and
scas
sub
stc
add
sbbb
in
test
scas
fildll
push
out
push
addb
pushf
nop
popa
pop
xor
inc
andb
test
data16
lods
sub
aad
sbb
lret
xchg
fdivr
lahf
mov
arpl
xor
lret
and
push
fldenv
or
pop
xchg
pop
or
movsl
mov
add
aad
push
jo
add
inc
pop
pop
jne
adc
add
fsubs
push
fsubs
push
sbb
aad
rolb
sub
out
adc
loopne
mov
inc
mov
and
mov
gs
clc
and
pusha
repnz
sti
xchg
out
adc
enter
dec
mov
cli
into
add
repz
cmp
loopne
enter
jle
jbe
out
cmp
popf
xchg
loope
cltd
add
pcmpgtd
mov
add
clc
pop
cmp
jg
jecxz
sub
cmp
push
push
add
sbbl
stos
cmpsb
das
cmp
incl
shrb
mov
pop
cmp
lock
push
arpl
ret
xlat
jb
sub
insl
inc
mov
jle
test
shlb
dec
movsl
jns
nop
loope
jle
push
dec
insl
push
stos
xor
roll
xchg
sbb
lock
insl
out
rcrl
or
xor
in
dec
sarb
push
jns
jne
cmp
sub
pop
in
push
mov
dec
stc
cltd
pop
stos
addr16
lods
or
and
call
in
and
dec
and
xor
mov
mov
push
nop
scas
xchg
inc
int
mov
incl
jp
sub
ja
dec
mov
sub
mov
in
pop
xchg
jmp
push
sub
movsl
orb
aas
in
bound
repz
mov
mov
sahf
jb
and
xchg
loop
fidivl
mov
adc
xor
cmp
add
jmp
or
add
mov
mov
pusha
data16
adc
xchg
and
jo
fwait
mov
stc
mov
dec
lret
es
push
push
or
and
pop
addr16
test
daa
mov
inc
sub
dec
add
fwait
cmp
cmp
pop
cmpsl
jo
sbb
and
push
xchg
adc
pop
push
iret
xlat
lea
cmp
shll
xlat
js
ret
jg
into
jle
cmp
pop
dec
in
push
mov
or
cmc
push
cmp
add
mov
out
xchg
into
inc
lea
pop
inc
mov
je
dec
psubq
mov
jns
sub
pop
cltd
xchg
sbb
cmpsb
pop
out
push
shl
pop
and
fcmovne
ds
push
aam
adc
mov
sbb
mov
mov
inc
cmp
inc
filds
xchg
aaa
dec
cld
cmpsb
dec
add
mov
stos
mov
dec
xchg
xchg
sub
dec
dec
pop
jmp
mov
out
mov
mov
sub
jle
sbb
pop
jmp
ret
aam
cmp
mov
cmp
mov
repnz
or
xchg
push
outsl
std
outsl
repz
push
cltd
ficoml
aad
sbb
pusha
stos
clc
sub
outsb
pop
shll
xor
in
jns
pop
mov
mov
push
loope
fldcw
aad
jb
jnp
cmp
jecxz
dec
sub
subb
pop
mov
push
daa
inc
xchg
pop
lds
hlt
pop
mov
aaa
push
add
shlb
repz
subl
pop
aam
aas
into
stc
insl
rcrl
fsubl
cmp
xchg
icebp
or
dec
jne
push
fiadds
leave
pusha
xchg
aas
jne
js
jo
mov
rol
inc
imul
cli
repnz
xlat
push
loop
sbb
sbb
mov
or
out
push
xor
sbb
shll
lds
pop
lock
xchg
imul
js
jb
push
sbb
insl
int3
mov
sahf
jg
fcoms
movsbl
xor
fwait
mov
jno
ja
and
stc
in
or
cld
adc
lret
add
and
adc
cltd
cld
enter
inc
push
pop
je
cmp
fsubp
sbbl
lcall
ja
xchg
xchg
fstpt
jle
sahf
inc
mov
mov
fstps
jge
test
or
xlat
xchg
loop
lcall
movsb
sub
je
jp
push
stos
jge
jmp
add
rcrb
adc
cmpsl
sahf
inc
in
repz
stos
or
xchg
push
inc
xor
mov
jo
sar
adc
push
outsb
adc
mov
out
lods
mov
cmp
gs
add
xchg
pop
and
pop
and
cmp
inc
dec
mov
into
aas
adc
cmp
mov
push
mov
int
mov
arpl
mov
push
sub
lret
pop
sbb
dec
ljmp
popa
into
push
in
in
xchg
lock
test
jns
outsb
sub
iret
mov
mov
gs
xorb
xor
or
inc
mov
rclb
jp
add
gs
pop
imul
outsl
jl
and
movsb
mov
icebp
repz
pop
pop
jbe
and
jb
cmp
push
clc
repz
pop
xchg
push
clc
lcall
inc
out
adc
jne
or
pop
hlt
pop
jecxz
das
mov
sub
add
mov
lods
jmp
mov
inc
mov
adc
sbb
sub
rclb
push
mov
cmp
pushf
or
mov
dec
int3
lcall
pop
mov
andl
lods
ja
xchg
sahf
pop
cmp
ja
jb
rolb
or
fs
push
mov
adc
xchg
lds
hlt
mulb
sti
outsb
jb
popa
mov
pop
push
and
adc
and
scas
inc
nop
ret
imul
cmpsb
ljmp
scas
js
loop
in
jmp
imul
sub
cmp
push
and
xor
cmp
push
mov
lock
daa
popf
adc
lods
and
pop
pop
lret
mov
fbstp
push
test
add
std
mov
out
mov
pushf
les
dec
lret
lods
insb
bound
inc
pop
dec
stos
cmpps
adc
lea
adc
ret
imul
notb
jno
mov
mov
fsub
sbb
nop
imul
and
pop
jnp
mov
mov
mov
inc
shr
shlb
mov
push
ja
popf
icebp
cmpsb
sub
pop
andb
sbb
lcall
push
popa
pop
jb
dec
mov
iret
jl
cmp
leave
push
pop
dec
sub
addr16
iret
sbb
adc
mov
add
push
sub
mov
xchg
xchg
push
lcall
adc
add
sbb
dec
cmpsl
push
iret
gs
sub
shlb
and
push
sub
test
aas
insb
shlb
pop
jb
loope
lahf
call
xchg
jns
mov
and
loope
repnz
mov
dec
xchg
aam
in
mov
jae
mov
pop
cwtl
movsl
mov
cltd
xchg
cmp
or
sub
idivl
testl
rolb
xchg
xchg
fildll
pop
mov
gs
cmpsb
mov
sbbb
subb
es
mov
inc
sbb
inc
push
aad
fsqrt
out
subl
dec
bsf
outsb
jmp
sub
sbbl
clc
lcall
imul
sbb
imul
jecxz
xlat
adc
in
lds
mov
stos
call
xchg
mov
shl
pop
imul
xor
mov
fimull
adc
xchg
sahf
xor
push
mov
mov
push
stos
xchg
popa
sbb
ret
push
leave
mov
cmpsl
lock
adc
inc
movsl
lock
sbb
or
push
mov
mov
mov
test
clc
shrb
jl
lret
idivb
add
cwtl
sbb
adc
jg
loope
adc
inc
xor
cmp
std
jns
xchg
mov
push
sub
movsl
lock
idivl
fcmovnu
xchg
and
cld
xchg
xchg
sbb
syscall
pop
and
xlat
test
jnp
mov
cltd
pop
outsb
out
int
stos
ja
sub
jl
popa
xchg
into
icebp
lock
cmc
int
add
fadds
int
push
xor
mov
pushf
push
les
sbb
ret
jo
push
gs
pop
aas
decb
shll
jno
leave
rorb
pop
ret
aaa
loop
xchg
in
mov
jns
ja
out
xlat
jmp
clc
dec
mov
fmuls
aaa
int3
test
test
jne
add
mov
push
out
cli
and
cli
scas
flds
jne
popf
call
les
repz
jb
sub
sahf
ds
dec
lret
and
sbb
mov
std
cmp
into
shrl
jge
push
push
out
pop
faddl
inc
js
sub
frstor
vpmacsww
les
jbe
ljmp
pop
cld
test
push
or
mov
into
dec
xor
cmpl
outsb
dec
loope
cld
jmp
cli
sbbl
movsb
dec
xor
loopne
inc
icebp
xchg
lret
mov
out
sahf
bound
xchg
test
sbb
sub
cmp
test
or
add
into
in
mov
lret
push
add
sbb
inc
inc
fwait
or
xor
sub
test
ret
out
dec
cmp
std
aam
call
cmp
xchg
push
js
pop
or
loopne
dec
ds
call
pop
sbb
xchg
jnp
and
or
nop
gs
push
adc
outsl
insl
xor
cwtl
xor
subb
ds
xchg
insl
dec
mov
inc
test
divl
mov
xor
add
or
xchg
mov
jae
cs
mov
pop
mov
movsl
mov
push
insb
adc
mov
mov
loopne
jmp
dec
push
jo
cs
loope
fs
data16
bound
rcll
xchg
ljmp
repnz
or
sub
sbb
pusha
cltd
push
cmp
mov
cmpsb
pushf
outsb
adc
les
and
mov
std
pop
push
sahf
frstor
mov
test
push
push
out
xlat
or
dec
add
imul
repz
fcmovbe
movsb
int
iret
adc
inc
xchg
aad
or
mov
testl
lods
sbb
mov
jmp
mov
add
and
jne
jl
sarl
mov
pop
or
cmp
jl
mov
dec
push
xlat
dec
arpl
call
mov
pop
pop
cmp
mov
pop
mov
andl
mov
mov
cmp
stos
stc
add
push
rcll
fucom
lods
jp
or
sahf
lea
mov
mov
imul
push
push
xchg
mov
lock
inc
mov
in
xlat
xchg
insl
addr16
jp
push
adc
adc
push
movsb
mov
push
pop
loopne
call
or
or
mov
xchg
fists
pop
dec
mov
dec
add
daa
dec
adc
mov
cmc
dec
popa
aam
hlt
push
enter
dec
jbe
jae
ret
out
sub
imul
adc
dec
inc
add
jg
cmp
pop
push
pop
insb
in
xor
mov
cmc
jno
mov
movl
daa
pop
mov
out
dec
pusha
in
iret
lret
adc
ljmp
xor
sbb
add
add
or
in
xchg
ljmp
sbb
out
sarb
pop
bound
subl
rolb
test
clc
mov
stc
mov
repz
fldl
into
lods
je
aas
push
scas
mov
dec
insb
cltd
sub
fcmovu
cmp
pop
xor
imul
notb
sub
orl
call
fmull
mov
mov
mov
out
xchg
call
or
push
test
jb
mov
dec
jbe
push
lods
jb
dec
adc
rorl
pop
push
add
pop
mov
sbbb
sbb
mov
jo
bound
and
jl
jbe
jns
icebp
xchg
sbbb
mov
test
mov
sarl
ret
mov
sbb
and
sahf
out
pop
pushl
movsl
xchg
sbb
mov
cltd
jbe,pn
dec
scas
sub
xor
repz
jmp
sbb
decl
lods
mov
sahf
mov
pushf
mov
sbb
gs
shlb
add
sub
sbb
cmp
hlt
sub
in
test
or
ret
mov
insb
inc
push
jp
out
inc
jg
in
pop
rolb
aas
jb
stc
call
pop
jae
popf
in
or
test
test
test
jae
jg
pop
mov
add
jns
insb
popa
popf
mov
push
push
mov
jmp
movsl
inc
test
in
push
sti
in
push
push
push
push
jmp
mov
stos
fnsave
xchg
mov
incl
imul
xchg
aad
mov
cmpsb
cmpsb
loope
nop
mov
xchg
loope
sbb
jno
lcall
jp
clc
out
sbb
cmp
pop
lods
sub
or
xor
ljmp
dec
add
adc
mov
or
inc
push
push
xchg
mov
mov
fldt
addr16
insl
arpl
in
cmp
adc
inc
test
adc
push
xchg
dec
sub
mov
jae
add
loope
aam
sbb
jae
aaa
arpl
push
sub
or
out
mov
fldln2
mov
adc
fstpt
jl
das
adc
inc
mov
pushf
dec
popa
sbb
test
dec
aaa
iret
fidivl
test
mov
nop
inc
dec
lcall
imul
and
dec
push
mov
es
mov
in
jbe
sbbl
dec
out
xor
xor
das
out
pushf
mov
lahf
dec
ret
iret
fsubs
add
in
test
add
stos
clc
dec
or
xor
mov
fdivrl
push
xor
sub
movl
and
jne
xchg
lods
cmpsl
adc
insb
out
and
jbe
push
imull
insl
cld
jl
jmp
addr16
dec
mov
push
mov
or
add
push
imul
out
push
push
and
and
cmpsb
xchg
fs
jecxz
adc
stc
imul
and
bound
loope
imul
movsb
pusha
cs
aaa
int
cmp
mov
xchg
inc
sarb
rolb
jp
adc
or
test
mov
jne
pcmpgtw
hlt
lret
fiadds
push
lods
mov
jo
jnp
adc
cmp
sbb
jl
push
fs
in
je
jmp
mov
push
and
or
mov
pop
push
lcall
movb
arpl
mov
es
sbb
inc
xchg
aaa
mov
sti
bswap
ljmp
adc
pop
sub
das
out
and
jns
add
outsl
push
bound
movl
into
adc
or
in
outsb
xor
and
push
cmpsb
cli
cmp
hlt
jne
sbb
jb
mov
daa
test
out
subb
pushf
push
aaa
jnp
lods
push
sbb
jp
push
adc
call
stos
xchg
mov
and
repz
fwait
mov
sub
flds
adc
ss
std
fwait
push
fdivs
insl
jp
xchg
lret
jp
xchg
mov
push
pop
clc
std
and
jnp
pop
loope
mov
inc
mov
sbb
ljmp
mov
testl
jmp
jo
mov
imul
sub
sub
int3
imul
jp
repz
jbe
mov
scas
xor
inc
incb
and
jge
bt
inc
lea
push
sub
pop
mov
cmp
adc
arpl
imul
cld
jbe
jbe
in
jecxz
popl
aad
xchg
loop
mov
dec
sbb
sbb
fstpt
ret
xchg
push
std
sub
nop
into
and
mov
mov
aad
out
ficomps
mov
mov
xor
lcall
ja
movsl
xchg
movsb
lds
testb
jbe
push
adcb
inc
lret
jno
jge
inc
clc
and
roll
out
push
mov
add
cld
mov
and
sbb
push
xchg
mov
jae
push
sbb
cmpsb
stc
push
mov
sub
inc
xor
push
sub
pop
adc
fstps
cmp
sbb
mov
mov
loop
out
cmp
cli
in
sbb
push
fdivp
push
xchg
pop
lea
adc
fimuls
lcall
mov
lret
pop
jne
loope
push
je
test
orl
in
shll
into
movsb
out
sahf
xchg
arpl
popf
clc
or
xor
gs
inc
stos
inc
push
jns
leave
int
jmp
lea
inc
and
nop
add
and
push
mov
sub
mov
nop
push
and
pop
test
test
mov
pandn
pop
sub
ret
lods
jl
fcoms
addb
pop
idivl
dec
vmovntps
pop
jb
or
adc
in
leave
cld
add
dec
add
es
push
xor
outsl
pop
mov
inc
add
fucompp
rcll
xor
insb
imull
push
sub
lret
shl
fisttpl
popa
divl
sbb
fdivr
scas
sbb
push
subb
inc
mov
push
xchg
addb
add
stos
jecxz
jne
ret
dec
imull
movsl
stc
pop
mov
jae
mov
loopne
in
enter
ficomps
data16
test
lret
cmp
es
loop
push
hlt
pop
push
mov
xchg
xchg
pop
mov
xchg
xor
mov
inc
mov
repnz
cs
pop
movsl
add
out
pop
pop
arpl
inc
sbb
fiaddl
es
xorb
movsl
pop
ficoml
lods
xor
cmp
ret
test
pop
push
push
loope
xor
in
dec
or
std
sti
jb
js
cli
mov
dec
dec
iret
dec
xchg
cmp
jmp
lret
ja
push
mov
in
subl
add
imulb
ror
repnz
sbb
lret
xchg
into
add
add
das
sub
cltd
lret
stos
loopne
popa
ucomiss
das
out
sbb
push
cwtl
add
push
mov
dec
jnp
adc
mov
sarb
mov
jp
lods
pop
pop
or
pop
jno
int3
stc
daa
cwtl
js
mov
lahf
and
lock
pop
js
jmp
mov
gs
test
push
cmp
sbb
fsubrs
mov
jne
mov
xchg
cmc
mov
lret
and
pop
dec
adc
xor
push
jbe
sub
and
sub
adc
out
cmp
xor
rcl
out
into
pop
mov
cwtl
call
sbb
xchg
test
stos
xor
push
in
mov
outsb
fwait
lret
mov
jecxz
xchg
inc
or
out
adc
shl
push
pop
pop
adc
mov
inc
xchg
mov
jge
adc
shlb
jns
dec
divl
and
data16
and
push
test
fldcw
mov
out
lahf
xor
mov
pop
repz
add
and
xor
scas
add
ja
ret
je
or
push
in
iret
movsb
mov
xor
mov
mov
lret
sub
jmp
test
test
mov
xchg
lea
push
lods
stc
push
cmp
fdivrs
cli
in
adc
test
adc
cmp
enter
mov
shrb
movl
jmp
sbb
and
in
adc
icebp
popa
xchg
lea
cs
push
std
lods
or
pop
jbe
lcall
int
and
xor
xchg
ffreep
and
enter
xor
insb
loope
jg
cmp
and
test
popa
xlat
push
sub
into
daa
xor
into
inc
jne
jp
mov
cmc
jle
jmp
mov
in
popa
out
sti
adcl
jo
mov
clc
fldt
scas
sub
jle
stos
mov
fadd
pop
or
mov
ret
inc
pushl
add
jae
lret
jg
fs
out
push
mov
mov
pop
cmp
fdivs
dec
fstpl
push
or
pop
jmp
fdivrl
mov
add
mov
outsl
push
andb
adc
mov
loop
pop
inc
enter
jp
daa
cmp
aas
dec
outsl
leave
xor
lock
fdivl
imul
xchg
cltd
call
aad
fs
test
mov
and
push
sbb
and
cmpsl
mov
comiss
sbb
dec
repz
andb
movb
loopne
pop
out
imul
imul
and
inc
push
xchg
ds
push
rolb
mov
jne
mov
aaa
or
or
bound
inc
roll
cmp
mov
dec
aaa
cmp
mov
dec
xor
or
and
push
cmpsl
out
lcall
pop
sbb
neg
sarl
daa
push
push
das
pop
sti
cli
clc
fbld
into
frstor
popa
fwait
inc
andb
mov
insb
or
rcl
mov
push
mov
sbb
divl
pop
ret
insl
lods
les
or
leave
insl
cmpsb
cwtl
mov
lods
add
pop
xchg
and
add
icebp
jp
js
dec
push
or
loop
push
filds
ljmp
dec
xchg
leave
sbb
lea
dec
xchg
adc
push
enter
xchg
loop
cmp
or
test
adc
sbb
add
push
lds
fcomip
xor
mov
mov
int3
movsl
adc
lahf
sti
and
adc
pop
push
aad
and
out
lret
mov
in
mov
incl
rcll
fidivrs
cmpxchg
aam
divl
mov
daa
push
add
mull
mov
in
or
mov
mov
jne
dec
outsl
fstpl
jnp
out
in
int
out
jp
add
cmpsl
mov
push
mov
push
add
in
dec
sub
xchg
in
in
pop
inc
jae
stc
mov
rolb
pop
imul
fs
popa
in
loopne
sub
cmc
sbb
lcall
pop
xchg
xchg
push
push
test
fimull
xchg
push
mov
xchg
jnp
jl
test
lahf
sbb
sub
add
clc
mov
lcall
pop
movsl
fisttpl
scas
adc
sub
ja
sub
popf
lret
push
fsubl
or
pop
mov
sbb
xor
jbe
xchg
in
ja
xor
jg
movsl
push
add
mov
test
jp
lahf
subb
mov
jp
fnstsw
sbb
ss
mov
fcmovnu
shr
test
pop
inc
mov
sbb
add
pop
ja
fsub
xor
dec
scas
repz
mov
mov
pop
rcr
dec
push
lahf
je
ja
in
pop
popa
add
scas
sahf
xchg
ret
inc
ret
test
add
xchg
cmp
in
repz
clc
out
add
jno
in
jne
push
ret
stc
fs
shl
xor
imul
int
test
dec
mov
hlt
add
push
scas
lds
inc
mov
lds
push
outsl
pop
adc
lret
fildl
mov
cs
enter
inc
and
in
and
mov
les
and
sub
enter
sub
psubusw
pop
stos
push
repnz
and
es
xchg
ds
ret
fsub
cmc
jg
in
call
jbe
sub
pop
ret
hlt
adc
popa
mov
adc
jle
jl
rorb
xor
cmp
or
ret
leave
pop
imul
fmuls
lock
inc
push
ss
call
xchg
mov
test
jecxz
mov
cmp
mov
push
out
or
jmp
fcomi
addb
and
mov
push
fdivrs
jmp
lods
sub
mov
pusha
imul
adc
sub
xchg
xor
enter
das
mov
fstl
xor
inc
inc
test
push
xchg
jne
cmp
adc
pop
mov
sbb
push
insl
push
xchg
jle
xor
sbb
incb
aaa
dec
fnstcw
push
add
cmpsl
sar
mov
cmp
jg
push
push
mov
lds
or
jl
fistpll
jae
sbb
and
out
sub
pusha
cmpsb
lds
fld
mov
imul
sti
jg
jno
shlb
pcmpeqw
insl
mov
lret
int3
jp
cwtl
data16
xchg
aad
push
ret
popf
mov
pop
fmull
xor
out
mov
adc
mov
mov
clc
or
neg
or
filds
addb
loope
jno
mov
ljmp
fdivs
push
push
stc
jo
xchg
push
iret
lods
inc
sub
mov
pop
cs
push
push
sbb
mov
into
addr16
dec
cs
push
clc
outsl
gs
daa
sbb
fdivs
jmp
into
adc
xor
dec
mov
in
lea
jmp
out
mov
xchg
je
sub
out
stos
inc
sub
lods
test
fwait
movsl
pop
popa
loop
xor
in
adc
cmp
sbb
repz
mov
shl
ficoml
aaa
sbb
clc
pop
test
add
scas
repz
mov
lods
enter
push
je
xor
push
xor
jp
add
add
divl
mov
cld
pop
mov
outsb
addl
test
cmp
pop
inc
lods
jg
lret
aam
sub
jbe
and
push
iret
pop
push
fcoms
cwtl
sahf
sbb
mov
xlat
inc
xor
das
mov
test
das
in
push
jbe
jecxz
push
cmp
fbld
icebp
or
sub
mov
lock
cli
jp
aaa
push
add
xlat
cld
out
aad
xchg
inc
cmp
out
rolb
xor
xor
scas
and
scas
pop
mov
and
xchg
enter
icebp
ja
cmpsl
les
inc
mov
les
jecxz
inc
pop
or
fstl
mov
xchg
mov
insb
or
sbb
pop
fsubs
sub
push
loope
aad
es
sbb
or
push
xor
xchg
xchg
call
pop
mov
pusha
or
das
cmovne
xor
stc
mov
cmp
ss
divb
leave
jno
inc
fwait
inc
fisubl
pop
adc
leave
or
add
cmp
lret
imul
icebp
test
mov
sahf
push
add
mov
loope
addl
add
push
jae
xchg
xchg
sbb
jmp
inc
dec
mov
push
scas
lea
in
and
sarl
mov
rcrl
jp
jns
cmp
aaa
xchg
out
lcall
bound
mov
or
xor
pop
imul
jg
cmp
mov
ds
mov
sub
and
lcall
cwtl
adc
cmc
jmp
scas
es
push
cmp
cmp
push
in
cmp
mov
aas
pop
mov
mov
out
lods
insl
adc
push
scas
mov
lods
sbb
loope
jbe
ja
imul
jno
aas
xchg
pushf
movsl
or
scas
les
aas
cmp
stos
out
outsb
jle
xor
test
cwtl
xor
mov
mov
stos
mov
nop
repz
insl
ror
dec
sub
arpl
pop
push
push
jg
insl
fwait
lret
sbb
xchg
enter
pop
les
or
push
fdivl
xor
repz
cwtl
stc
outsb
mov
inc
or
lock
xor
sbb
or
fisubrl
sub
cltd
sbb
and
push
iret
push
pop
adc
sub
sti
or
sub
aam
test
imul
gs
iret
push
dec
stc
icebp
int3
outsl
mov
jge
pop
xchg
fidivs
lret
call
icebp
into
add
adc
sahf
and
add
mov
and
imul
aaa
sbb
lret
jnp
icebp
mov
rclb
js
xor
ljmp
iret
jge
sub
inc
jle
test
xor
dec
jge
dec
push
rcll
mov
xor
andb
daa
jno
ljmp
pushf
fldl
xor
and
addl
aaa
shlb
mov
and
cmpsl
inc
and
pushf
push
mov
cmp
shrb
push
pop
mov
jecxz
iret
dec
shll
or
xor
test
xchg
subb
dec
call
push
fbstp
mov
movsl
xchg
data16
imull
xor
and
cmp
sub
sub
cmp
out
sbb
mov
dec
fs
test
jecxz
xlat
mov
mov
dec
xor
lea
test
mov
jo
add
or
xor
clc
inc
inc
sub
aad
mov
lea
cmovo
pop
xchg
mov
pop
inc
jae
aaa
or
add
dec
mov
cmp
rcrl
movsb
inc
mov
imul
sti
push
stos
loope
jb
hlt
aam
lock
js
push
adc
out
clc
hlt
leave
adc
std
aam
xor
sub
dec
stos
xor
fistl
int
push
jno
jne
mov
mov
mov
mov
push
add
or
sub
sbb
addr16
scas
in
insl
sbb
jno
in
stos
push
js
sbb
imul
repnz
pop
loop
jne
test
ljmp
or
inc
sub
ljmp
enter
ljmp
js
test
stos
sub
inc
ja
repz
fwait
in
sub
dec
inc
es
sti
stos
add
sub
or
arpl
jge
mov
les
jle
and
xchg
xor
xor
ja
push
dec
add
push
jbe
repnz
addr16
mov
pop
mov
push
or
popf
mov
cltd
mov
lret
lods
sbb
pop
arpl
inc
jl
sub
mov
mov
or
pop
call
jl
mov
and
pop
mov
pop
fs
popa
hlt
mov
mov
sbb
mov
or
js
mov
mov
sbb
mov
sbb
sbb
aam
cld
pop
scas
add
stos
pop
mov
push
mov
jbe
or
adc
daa
in
iret
inc
sub
sti
popa
enter
ss
pop
loop
aas
shll
mov
std
add
cltd
je
test
jmp
aam
shlb
jg
scas
inc
out
aaa
daa
jo
dec
cmpb
adc
mov
jo
inc
and
out
daa
cmp
clc
push
popf
xchg
dec
inc
gs
inc
and
push
rorb
mov
aas
daa
test
nop
hlt
sti
mov
jns
stos
ret
std
mov
in
mov
jne
sub
mov
dec
cltd
fsub
jl
movsb
or
or
add
sub
dec
andb
sub
pop
adc
aam
cld
aaa
icebp
adc
mov
sub
adc
jo
push
or
sub
jnp
sbb
scas
cmpb
cld
dec
inc
pop
adc
js
pop
mov
pop
jns
enter
xor
aas
outsl
xor
mov
push
imul
arpl
popa
mov
mov
mov
push
ds
icebp
in
or
sbb
les
pusha
lret
mov
xchg
pushf
xchg
mov
mov
dec
push
and
fwait
adc
ss
pop
js
jmp
in
inc
jecxz
pop
fs
shrb
enter
das
dec
sbb
xchg
fisttps
xor
mov
ret
insb
pushl
push
testl
mov
fnstcw
cmp
stos
ret
lcall
pop
in
dec
fstpt
outsb
ror
ja
jns
or
jns
mov
inc
xchg
sahf
xchg
ljmp
test
leave
push
jnp
mov
mov
jnp
dec
cmp
push
stos
sub
dec
fmulp
xchg
test
jae
arpl
inc
not
test
and
jne
inc
add
in
xor
xor
mov
popa
js
lret
sub
addr16
inc
mov
gs
scas
sahf
rep
jnp
pop
sbb
popa
xor
cmp
mov
push
sub
xlat
fidivrs
and
out
cmp
js
add
mov
push
dec
cmp
jnp
movsl
pushf
mov
mov
lods
out
rcll
lahf
js
popf
mov
pop
jo
lods
stos
xor
out
cmc
fldl
lock
dec
sti
jecxz
js
xor
mov
mov
pop
cmp
jo
jl
cmp
dec
pop
mov
orl
ljmp
dec
mov
xor
pop
inc
sbb
inc
imul
movb
xchg
in
icebp
and
clc
jmp
xor
imul
sub
jno
imul
pop
pop
cs
popf
inc
add
mov
arpl
pop
sbbb
fmulp
xchg
and
cmpsl
push
pop
fidivl
rol
dec
xchg
xchg
cs
cmp
insl
sbb
stos
mov
sbb
pop
sbb
fisttps
mov
sbbl
sub
jb
mov
fsubrs
push
inc
cmc
fimull
inc
pop
pushf
dec
pop
jno
sub
int
pop
adc
imul
mov
stos
cmp
push
jg
stos
jle
fistpl
stc
mov
adc
jg
pusha
lods
mov
loop
inc
loope
mov
ljmp
mov
stos
ror
mov
or
mov
xchg
sub
and
cmc
mov
push
lahf
arpl
xor
push
and
imul
push
lcall
fnstenv
mov
push
dec
lods
push
stos
popf
insl
sbb
push
int3
sub
je
lds
cltd
push
pusha
repz
adc
xorb
inc
jo
and
mov
sub
adc
cmp
mov
sbb
subl
cmp
cmp
bound
mov
hlt
mulb
shrl
cmp
lcall
loope
push
cli
into
jg
or
pop
popf
decl
daa
aaa
cmp
inc
aam
xchg
add
aaa
sub
push
inc
and
loope
sbb
xchg
lods
xlat
and
data16
setno
lds
fiadds
add
sub
pop
pop
cmp
xlat
test
and
ret
stos
dec
cmc
sub
mov
rcrb
xor
push
aad
roll
scas
stc
popl
pushf
in
sbb
mov
dec
jnp
cmp
leave
ss
sub
pop
mov
outsl
test
dec
pop
cs
repnz
inc
mov
psllw
sahf
add
lock
dec
cs
out
pop
ret
mov
inc
or
mov
outsb
adc
mov
push
or
popa
das
xchg
adc
je
jb
lcall
addr16
arpl
je
loop
inc
fwait
test
pop
test
js
lock
xor
pop
dec
add
addl
xlat
or
leave
das
sbb
data16
dec
stc
fwait
and
fistpll
lahf
les
mov
stc
sub
icebp
fwait
test
ljmp
add
mov
and
mov
mov
or
es
ja
and
nop
cmp
std
je
roll
fwait
inc
fs
test
int3
push
outsl
pop
sub
mov
xchg
mov
cwtl
adc
cmpsb
stc
jl
loope
sbb
jb
les
ss
jmp
out
mov
fwait
test
mov
pop
pop
test
mov
stos
fs
leave
mov
sti
fcmovnbe
push
jne
pop
icebp
out
fst
jp
adcl
insl
stos
pop
or
arpl
push
lcall
sbb
out
push
subl
repnz
xor
inc
cmovnp
stc
adcl
jg
out
sub
add
mov
cmp
insl
xchg
int
movsl
or
popa
pop
jl
jl
add
push
aam
sub
mov
outsl
or
stos
pushf
add
lods
sti
mov
mov
cs
ljmp
sbb
pop
out
sbb
lret
or
pop
sbb
lods
jmp
imull
int3
shll
xchg
test
sub
fisttpll
or
out
aaa
pop
out
jb
ss
or
sbb
mov
xchg
aaa
mov
push
or
in
jmp
dec
push
cmp
imul
in
sub
enter
dec
popf
jnp
test
lods
add
mov
xor
insb
or
cmc
popf
jl
mov
push
mov
or
push
add
or
jnp
and
loope
ja
add
cmpsb
pop
adc
outsl
adc
ljmp
lret
aaa
jne
cli
sahf
scas
sbb
ljmp
sub
cmp
xor
pushw
sub
adc
shrl
testb
mov
push
and
jnp
mov
or
mov
inc
sub
cwtl
and
xor
cwtl
xor
movsb
mov
nop
dec
lods
enter
jmp
packuswb
xchg
xorb
adc
lcall
inc
clc
stc
sbb
adc
in
test
ljmp
add
hlt
fildl
fmull
leave
add
imul
jno
aas
imulb
push
shrl
cmpsl
je
out
pop
mov
stc
inc
repz
test
jmp
pop
imul
adc
js
cmpl
div
jmp
pop
cltd
lret
lahf
lret
inc
sub
scas
mov
std
dec
movsb
mov
fwait
gs
jns
inc
inc
or
jp
lods
stos
mov
pushf
out
loop
pushf
stc
test
cmp
mov
lret
shrb
dec
jbe
gs
push
in
sub
rcll
ss
lcall
mov
push
dec
out
sbbl
push
jnp
lahf
mov
hlt
test
xchg
orb
in
mov
in
outsl
or
loope
sbb
insb
mov
jp
outsb
lret
xchg
or
das
loope
jecxz
call
jmp
xor
lret
shlb
imull
add
or
dec
testb
ret
cwtl
cltd
pop
popa
enter
and
mov
loop
bound
xor
sbb
js
mov
add
xor
mov
jb
jp
jmp
fnstenv
test
or
jns
fstl
mov
jbe
fs
movsb
mov
cmpsb
testb
shrb
mov
xchg
aad
rcr
inc
jnp
dec
adc
mov
xchg
shl
add
mov
cmp
ds
xor
iret
fnstcw
cwtl
addl
push
fcompl
jl
inc
mov
rcrb
dec
ljmp
xor
push
jnp
inc
lret
lret
js
push
and
lea
fistpll
xchg
sahf
inc
les
dec
xchg
cmpsb
xchg
stos
and
sbb
popf
in
je
pop
push
push
orb
jae
test
push
mov
xor
adc
int
jp
outsb
pop
xchg
and
and
pop
call
stos
test
les
cltd
sub
movsb
test
xor
xor
cmp
mov
jecxz
or
inc
adc
pop
ret
adc
rorb
out
aad
movl
subb
cmp
imul
icebp
push
incb
outsl
hlt
popf
dec
add
addr16
mov
inc
outsl
or
fidivs
dec
mov
lea
push
hlt
outsb
xlat
push
or
fcmovu
and
aaa
ret
ljmp
test
leave
jmp
es
inc
imul
repz
jge
jl
xor
js
adc
lret
sbb
sbb
mov
hlt
add
mov
mov
jecxz
rcll
test
rcl
notb
or
int
sbb
jecxz
mov
mov
push
stos
fmul
cwtl
jle
clc
imul
sbb
adc
es
xor
add
or
inc
shrl
sti
mov
repnz
mov
cmpb
xchg
jle
ljmp
xchg
jg
jmp
sahf
jecxz
js
out
pop
mov
jns
ret
adc
popa
fcompl
inc
fistpll
cli
je
lock
outsl
ja
fbld
pop
mov
nop
cmp
add
push
xor
jmp
sbb
inc
mov
loopne
pop
icebp
pop
add
inc
lahf
cwtl
loopne
cmp
pop
inc
movsl
pop
push
add
enter
pop
decl
mov
cmp
daa
lret
js
divl
sbb
and
pop
aam
sub
and
fildll
out
and
mov
and
pop
inc
inc
xchg
mov
mov
push
push
jb
adc
out
pop
mov
enter
shll
fsubrs
popf
mov
lds
in
jl
mov
in
rorb
inc
jmp
repnz
shr
lahf
sahf
xacquire
fdivrp
pop
icebp
jno
lds
dec
add
sub
jo
dec
cld
movsl
cmp
add
and
pop
inc
jne
movsb
fildll
lock
pop
mov
daa
fwait
mov
imul
mov
scas
push
inc
inc
fdiv
and
aad
sbb
ja
or
xchg
jg
dec
add
cmpl
mov
push
repnz
jbe
aam
cmp
decb
push
call
testb
addr16
lea
push
xrelease
inc
sub
adc
inc
das
jbe
repz
and
fs
lret
fidivrs
sahf
cmp
xlat
arpl
cmp
pop
pushf
cmp
push
dec
negl
add
sub
push
add
adc
pop
rcll
call
xchg
xchg
xor
aam
add
icebp
std
gs
int
sub
mov
pop
imul
jae
fwait
xchg
loopne
ss
or
mov
mov
lods
sti
mov
cltd
dec
xchg
push
leave
cmp
jmp
mov
loopne
jb
cltd
popa
cli
les
aas
or
mov
ljmp
fcomip
push
nop
leave
and
out
mov
xor
mov
gs
or
pop
mov
jae
pop
ret
jnp
xchg
and
data16
in
xchg
xchg
fwait
hlt
mov
mov
xor
jecxz
in
pushf
fxch
outsl
xor
in
dec
rol
add
jnp
fldenv
cmp
mov
xor
cmp
mov
sysret
inc
je
subb
cmpsb
or
shrl
or
mov
pop
jl
pusha
jl
adc
ljmp
movsb
shll
and
fiadds
mov
pop
xchg
push
jmp
pop
daa
xorb
or
jmp
xor
test
jbe
jae
or
stos
loopne,pn
fwait
jbe
jmp
jno
rorl
aas
xor
sub
sub
aam
inc
sbb
repnz
dec
jle
mov
stos
icebp
xchg
icebp
dec
ficoml
sub
ds
sub
fwait
or
cmp
pop
test
mov
pop
xchg
add
adc
in
inc
dec
rcrb
pop
inc
cltd
sbb
in
nopl
movsl
adc
sub
inc
int3
adc
imul
mov
jnp
mov
fs
jecxz
pop
adc
jmp
es
mov
add
mov
mov
mov
jg
push
test
and
gs
adc
pop
sub
das
xchg
test
shll
iret
pushf
dec
outsb
mov
imul
sbb
lea
imull
xchg
jns
xchg
lods
inc
inc
lds
cmp
xchg
leave
stc
jge
mov
mov
jns
dec
inc
in
inc
je
ss
scas
pop
outsb
mov
add
pop
xchg
rol
sbb
xchg
mov
jge
fwait
loopne
mov
testb
jge
cmp
leave
addb
inc
add
roll
mov
rorb
mov
out
lea
test
or
je
lods
arpl
ljmp
rol
roll
rorb
test
mov
dec
inc
sbb
imul
data16
cltd
js,pn
cmp
xchg
fcompl
sbb
or
push
aaa
adc
out
or
inc
xchg
xor
lods
imull
gs
mov
stos
sub
in
sub
sbb
test
shll
cmc
or
push
push
in
inc
dec
add
sub
int
push
lcall
mov
lcall
inc
enter
fadd
cmp
jb
xor
stos
inc
jp
in
fsub
or
outsl
jge
adc
ss
pop
bound
call
push
das
inc
loop
sub
fwait
jne
push
sbb
mov
pop
insl
pop
rorl
rcrb
popa
in
inc
lea
xchg
jg
iret
mov
sbb
or
fwait
jmp
int
push
arpl
int3
cmp
push
ljmp
or
in
cmpsl
aas
cld
jge
xor
test
das
pop
or
and
cmp
scas
xlat
mov
mov
outsl
add
int
test
inc
and
je
add
push
mov
ficomps
or
loope
sbb
pusha
xchg
dec
shrb
je
lahf
add
scas
ror
inc
fisubrs
pop
sbb
cld
sahf
test
pop
test
xor
pop
rclb
xchg
fildll
inc
scas
out
mov
push
add
jle
sbb
or
cmc
jp
push
mov
pop
jmp
cmc
cli
lods
xchg
adc
adc
inc
outsb
test
lret
lods
stos
lahf
std
cmp
int3
in
push
cmpsb
dec
pop
dec
xchg
inc
jg
dec
bound
push
mov
jmp
jl
lret
and
or
enter
mov
cmpsl
jne
push
ss
in
lret
imul
jge
loopne
aas
movsb
ret
lret
les
push
push
clc
bound
test
pop
pop
mov
inc
jmp
and
sub
cmp
rcrl
jl
mov
mov
adc
inc
sbb
leave
xchg
cmp
sub
or
and
imul
imull
xor
leave
les
xchg
in
cmp
out
and
push
cmc
aaa
push
push
mov
cmp
in
je
mov
jns
mov
enter
mov
pop
jg
push
xor
mul
mov
aad
scas
push
popa
add
insb
iret
jnp
cwtl
int3
popl
push
fistpll
std
xorb
out
out
pop
mov
adc
xor
dec
sbb
mov
inc
test
xor
xchg
mov
das
loopne
mov
mov
push
mov
fdivrl
gs
jge
jmp
inc
jmp
mov
shl
rcll
xchg
jecxz
cmc
dec
inc
mov
jmp
cmpsl
mov
mov
pop
mov
gs
popf
std
sahf
xchg
lret
jle
je
or
mov
mov
sar
push
dec
pop
mov
fnstsw
inc
shlb
sbb
shrb
jmp
jp
mov
xchg
movsl
insl
leave
loop
pop
push
jg
nop
mov
mov
pop
fisttps
out
add
dec
jno
movsb
push
lcall
sub
or
sub
movsb
pop
mov
jne
call
repz
sti
loope
mov
adc
lcall
lea
mov
je
pop
fiaddl
inc
adc
add
dec
imul
cld
adc
lock
push
mov
push
mov
test
pop
in
ja
and
lods
dec
sub
sub
inc
cld
ret
inc
popf
mov
push
xchg
shrl
mov
sub
adc
ja
test
jecxz
cli
xor
les
outsb
sub
inc
inc
pop
fldenv
aam
inc
int
jg
lock
adc
mov
or
daa
xchg
pusha
and
bound
iret
mov
bound
add
sub
pop
and
repz
ljmp
sbb
push
test
pop
test
out
filds
inc
adc
pusha
sbb
lcall
xor
pop
xor
and
ret
sub
sbb
outsb
out
mov
movsl
xor
jg
pop
lods
es
jp
or
cmpb
fildll
jb
daa
in
fwait
adc
cmp
mov
push
sti
xchg
sub
jne
xchg
cmp
sti
inc
movsb
out
xor
sarb
lahf
jg
lds
cmp
arpl
pushf
add
test
pop
les
jnp
negb
jne
push
shrb
sbb
repnz
aaa
mov
adc
mov
or
pushl
sub
psllw
pop
sbb
jmp
out
sub
sarb
dec
int
jp
or
call
add
add
xchg
cmp
mov
aas
out
aaa
movsb
push
sub
sub
out
pop
shll
subb
dec
lret
sti
clc
or
sti
or
daa
dec
ret
push
icebp
shrl
int
mov
mull
mov
scas
fisubrl
push
ret
adc
hlt
rcrl
gs
ret
dec
mov
fidivs
aas
cpuid
int
mov
mov
sub
push
dec
or
rclb
fiaddl
les
push
addb
cwtl
dec
push
lcall
pop
adc
fsubs
test
xorl
and
loope
cs
ficompl
fisubl
pop
into
roll
bndstx
in
or
pop
xchg
and
mov
movsb
les
sub
ja
sahf
sahf
inc
xor
stos
pop
mov
xor
xor
ja
movsl
rcll
adc
jge
int
fnsave
lea
dec
mov
shlb
sbb
imul
data16
daa
cmp
orb
lret
cld
mov
mov
cmp
jp
and
cmpsl
xchg
daa
inc
icebp
sub
sub
mov
sbb
divl
jo
jbe
into
jge
xor
pop
pop
stc
jb
fs
rorl
sub
or
or
fisttpl
out
cmp
mov
das
mov
jge
and
inc
xchg
sbb
mov
stc
inc
xchg
jp
or
push
dec
mov
cmp
or
xchg
imull
and
pop
xchg
sbb
push
inc
xor
xlat
out
mov
pop
and
addl
movsb
sbb
push
mov
ja
arpl
push
sub
push
subl
test
test
mov
stos
adc
jmp
or
push
dec
and
pop
aas
add
and
sub
sub
shrb
push
xchg
or
mov
popf
adc
ss
out
inc
lea
sbb
aas
inc
cs
into
jb
add
pop
rorl
push
out
rcr
pop
aam
stc
mov
mov
cmpsb
xor
push
dec
and
scas
flds
xor
lcall
loopne
shll
xorl
hlt
adc
xor
imul
push
fcmovnb
jl
or
shll
es
cmpsb
xchg
aam
mov
or
pop
das
xor
mov
mov
aam
je
sub
mov
outsb
xor
ljmp
outsb
lock
int3
mov
xor
xor
and
push
mulb
rcl
dec
fwait
ss
mov
add
xor
mov
lcall
int3
mov
imul
repz
lret
mov
ja
ret
xor
orl
mov
aaa
jns
fisubrl
dec
jae
jnp
cmpsb
pop
inc
xor
adc
mov
test
xchg
scas
arpl
inc
inc
jo
cltd
lds
test
cmpsl
stos
clc
cwtl
push
mov
inc
fstps
orb
and
dec
test
in
pusha
inc
cmp
or
mov
mov
xchg
xor
arpl
mov
outsb
jmp
sbb
out
mov
fs
repz
in
mov
in
or
push
jge
out
add
adc
jmp
jb
cmpsl
adc
lods
insl
movsb
adc
push
dec
jno
jno
movsb
popf
xchg
stc
cmp
enter
pop
xor
ret
nop
mov
jp
pop
cmp
jle
xor
popa
pop
sub
cmp
jo
sub
xor
jp
and
pop
cmc
dec
xor
and
xchg
jge
or
cwtl
mov
push
add
inc
mov
icebp
inc
mov
adc
mov
mov
les
cmc
shlb
mov
push
int
aam
xchg
jo
mov
lods
ds
movsb
clc
je
pop
data16
cmp
cld
leave
mov
adc
cs
mov
mov
sahf
mov
lock
xorb
test
mov
prefetcht2
dec
xchg
mov
outsl
inc
xor
pop
dec
or
es
inc
mov
jns
sbb
test
jae
mov
popf
mov
dec
adc
and
mov
add
inc
out
dec
pop
sbbl
shll
push
sbb
lock
sahf
cli
data16
dec
sbb
jo
aam
xchg
push
scas
mov
xchg
or
insl
inc
into
push
and
mov
fwait
iret
ja
ret
cmp
sbb
mov
clc
sbb
sub
push
lcall
add
stos
mov
ret
pop
mov
xchg
push
mov
mov
xchg
mov
cmp
dec
push
aad
adc
arpl
cld
rcr
out
sarl
lret
cmpsl
inc
movsb
sbbl
cmpsl
imul
sbb
test
in
cmc
mov
dec
aad
cmpsb
cmp
or
xchg
jmp
ror
xor
push
loop
testl
aam
and
out
mov
xchg
ljmp
sbb
mov
pop
mov
shrl
or
pop
bound
dec
xchg
adc
faddl
or
call
imul
adc
mov
iret
cli
cld
cmp
lea
int
nop
jl
or
out
xor
out
bound
mov
cmp
fcomip
adc
lret
adc
jne
dec
dec
mov
rcl
icebp
scas
mov
push
idivb
popf
negb
sbb
lahf
cmpsl
or
xchg
mov
in
fstpt
dec
inc
jg
xchg
lret
cld
in
jne
iret
dec
insb
jb
aas
mov
add
xor
cld
andb
and
push
scas
cli
shll
xlat
dec
cmc
call
lock
push
imull
jno
jle
lds
adc
stos
lret
lahf
call
shr
pop
stc
xor
add
bound
sti
mov
push
sub
icebp
mulb
imul
xor
jnp
push
cmp
fimuls
fsubl
pop
inc
loop
xchg
ror
mov
sbb
sub
xor
faddp
inc
dec
lock
mul
pushf
lea
or
outsl
and
ret
add
mov
jne
cmpsl
cmpsl
push
jns
adc
adc
shl
push
dec
int3
sbbl
fwait
sbb
out
enter
sbbb
fcomip
daa
or
in
es
sub
mov
stos
stos
lea
test
lret
jnp
mov
je
inc
daa
aad
rcrl
add
rcll
or
icebp
stos
add
int
aas
gs
loop
push
and
in
insb
ja
mov
std
data16
leave
negb
cmp
sbb
xor
push
aam
xchg
popa
test
add
push
dec
hlt
mov
add
inc
aas
dec
sarl
les
mov
fists
jg
cmp
outsb
lret
filds
sbbb
test
sbb
mov
push
push
adc
stos
cmp
pop
arpl
sbb
sahf
push
and
in
out
into
mov
mov
mov
ret
pop
aaa
cmp
addr16
pushf
int3
mov
push
xor
popa
test
jae
mov
pusha
imul
or
ss
sbb
inc
gs
push
xchg
lea
hlt
fdivl
mov
lret
add
dec
jnp
jp
jg
popf
fs
sbb
js
sahf
jbe
jb
into
scas
mov
sub
xchg
xor
imul
xor
mov
jg
stc
xchg
pop
flds
mul
mov
iret
cli
cmp
std
sti
out
inc
test
ss
mov
into
add
arpl
add
mov
mov
dec
insl
inc
test
sti
cs
in
inc
loope
shrl
das
outsl
loope
lret
ss
icebp
jne
ljmp
xlat
int
push
jae
scas
mov
push
movsl
jle
repnz
ss
in
add
in
sbb
mov
out
push
jl
pop
lret
popf
or
out
and
js
iret
dec
mov
andb
and
cli
in
dec
loopne
push
ret
fs
dec
dec
inc
nop
repnz
inc
or
cmpsl
ds
mov
out
adc
mov
shrb
xor
sub
adc
jg
std
and
adc
loop
jmp
mov
aad
sub
push
xchg
cmpsb
aam
add
or
mov
iret
rolb
push
push
mov
inc
lock
out
data16
inc
pop
aam
out
and
fadds
cwtl
test
andl
dec
adcb
dec
repz
dec
sub
popf
mov
leave
or
call
inc
test
push
loopne
imul
sub
push
jnp
mov
sub
ret
ficoml
lods
enter
lods
lcall
sbb
notb
pop
and
pushf
pusha
xor
test
fsubrp
pushf
push
mov
aas
jo
jmp
sbb
xchg
imul
xchg
push
mov
sub
lret
fs
add
and
mov
cmp
test
adc
dec
dec
loope
and
lret
dec
xchg
out
int
cmp
std
pop
fs
xor
sub
mov
jb
inc
jmp
pop
out
aad
shll
rorl
repnz
rcrb
dec
dec
in
lds
mov
dec
xor
dec
ret
or
cs
and
sbb
sub
cmp
mov
in
mov
and
push
out
call
dec
cmp
into
addl
xor
loope
sub
or
jb
cmp
icebp
outsl
pop
bound
shll
pop
pop
jg
iret
and
push
adc
or
fcomip
cltd
mov
mov
adc
xor
cmc
movsl
pusha
lret
sbb
mov
push
test
pop
pop
push
or
mov
pop
xor
pop
and
clc
loope
adc
push
int3
pop
insb
fstl
shl
movsl
cmp
clc
push
movsb
je
pop
and
js
xor
dec
cmp
mov
cwtl
mov
mov
jb
inc
adc
ds
mov
rol
fisttpll
jg
mov
mov
dec
xor
shll
test
sbb
pop
xlat
mov
adc
push
add
jl
cmp
leave
pusha
insl
fdivs
sub
jmp
mov
pop
jbe
or
sub
fs
push
fsubrs
out
cmp
cwtl
adc
aad
pop
es
ja
mov
sbb
fmuls
and
fstpl
inc
inc
cmp
idivl
cli
mov
imul
cltd
push
xchg
aam
pop
sti
mulb
or
cmc
repnz
out
inc
mov
and
sbb
xchg
dec
pusha
test
mov
add
inc
iret
test
jmp
fcom
or
pusha
je
ret
mov
push
movsb
leave
sbb
scas
and
and
pop
rorb
sbb
mov
lret
mov
xor
loop
jae
push
in
out
inc
add
add
gs
aam
adc
dec
sbb
popa
loopne
sbb
outsb
or
pop
stc
sbb
mov
outsb
mov
arpl
std
xor
mov
pop
daa
and
and
sbb
shll
dec
bound
and
xor
orl
mov
dec
scas
orl
push
dec
xor
lcall
cmp
push
mov
mov
inc
xor
mov
inc
rorb
add
fdivrl
pushf
call
push
int
sbb
fdivs
xchg
jne
mov
pusha
push
std
lahf
out
and
incb
push
add
sti
pop
xchg
sub
dec
fwait
cmp
or
pusha
das
mov
nop
lret
mov
loopne
xor
into
scas
test
sub
add
mov
das
imul
mov
jno
sub
mov
xor
add
inc
lds
imul
xor
das
jae
rol
mov
adcb
or
push
insb
loop
sbb
test
rcrb
mov
jnp
xchg
in
stos
lahf
dec
inc
out
cs
and
dec
jl
jno
mov
mov
inc
fs
xor
or
frstor
and
cld
out
xchg
inc
aad
lea
ja
scas
in
in
pop
dec
fcmovne
dec
push
ret
stc
adc
flds
pop
mov
adc
xchg
jbe
xor
negl
lods
and
int3
imul
inc
filds
lar
cmp
dec
hlt
inc
aas
inc
push
sbb
jmp
sub
mov
or
add
jne
leave
xor
mov
mov
lock
xchg
push
lret
cmp
leave
test
imul
xchg
out
js
decl
push
mov
jnp
push
pop
sbb
push
xchg
out
rep
nop
outsl
push
dec
jp
in
xor
sbb
int3
cmp
insl
sbb
jb
or
and
nop
xor
and
sub
cmp
loope
in
loopne
and
inc
call
bound
or
and
cli
aaa
int
xchg
aam
addb
sbb
mov
mov
jg
lods
jle
inc
cwtl
mov
lret
sbb
mov
pop
in
sub
testl
fisttpl
arpl
rol
lds
xor
jl
or
jno
sti
outsl
jbe
sub
cmpsl
lock
mov
in
xor
mov
or
xor
pop
iret
es
mov
jbe
adc
xchg
push
incb
pop
mov
loope
imul
in
cmpsb
cmpb
cltd
xor
inc
test
mov
pop
test
test
sbb
lea
adc
test
pop
jb
iret
cltd
cmpsb
int3
ja
jmp
dec
xchg
lahf
sub
adc
or
ja
popa
stos
xorl
es
decb
cmpsl
inc
lret
ja
jp
ja
push
movhps
sbb
sbb
mov
pop
jp
jl
mov
inc
dec
flds
cmp
cmpsl
ret
xor
pop
notb
shlb
xchg
xor
out
ret
mov
or
add
adc
cwtl
sahf
and
je
insl
subb
xor
scas
xor
fwait
arpl
scas
adc
mov
dec
lret
cmp
mov
shlb
cmp
xor
adc
imul
xor
cmp
push
sar
jns
nop
fisubl
xlat
mov
mov
ret
xor
sbb
and
jl
repz
pop
js
mov
sbb
xchg
sub
and
inc
test
push
pop
ja
test
adc
inc
rcl
mov
inc
dec
int3
adc
sbb
out
jo
popf
pop
mov
psraw
data16
das
mov
shrb
pusha
das
push
sbb
and
mov
sbb
gs
pushf
fiadds
mov
xchg
cmpsl
in
aam
push
les
nop
push
cmp
sahf
add
fcomps
sbb
xchg
inc
dec
sarl
and
lods
insl
add
mov
mov
pusha
loop
pop
and
lcall
sub
add
pop
pop
dec
push
pop
movsl
andb
popa
sub
and
popa
test
shl
sub
shll
inc
sahf
lcall
sti
sub
xor
mov
mov
sahf
mov
xchg
sbb
sub
ret
cmp
js
or
aam
pop
dec
enter
pop
sti
cmpsb
xchg
cmp
popf
dec
jno
xor
lret
adc
push
jbe
push
nop
xor
ret
out
ficoml
dec
nop
push
mov
sub
inc
mov
xor
jnp
inc
sti
adc
loope
mov
push
and
adc
xchg
adc
fmuls
int3
cmpsb
rorb
arpl
push
pusha
push
jge
push
mov
push
or
cli
inc
push
xor
push
dec
test
inc
in
and
loop
mov
xor
movsb
pushf
popf
fwait
mov
pop
aaa
add
mov
mov
mov
jp
fsub
push
rorl
fldenv
movsb
sbb
stos
mov
call
movsb
ss
jmp
shrl
icebp
and
sub
pop
popf
ljmp
cmc
push
dec
and
mov
xor
stos
decl
jbe
test
xchg
pop
cli
fldl
adc
jbe
addr16
pop
leave
mov
jge
or
in
mov
mov
into
sub
leave
add
dec
mov
es
pop
inc
xor
xchg
lret
dec
inc
fs
push
test
pusha
adc
cmp
and
mov
scas
sarb
test
adc
cmp
lods
ret
lahf
mov
jl
xchg
mov
mov
pandn
out
xchg
outsl
sub
mov
pop
mov
jecxz
push
add
xchg
xor
jbe
jg
leave
scas
ljmp
pop
fcmovnu
mov
mov
jno
xchg
and
outsb
xor
es
sbb
fildl
jp
adc
out
icebp
jne
enter
jae
jp
cmpsb
xchg
pop
ja
aad
clc
pop
popf
into
mov
adc
xor
rcll
clc
dec
inc
inc
ljmp
and
mov
ljmp
imul
mov
jg
mov
mov
cltd
sahf
mov
insl
xchg
dec
adc
adc
jg
jl
mov
mov
xor
in
pop
mov
imul
push
cmc
leave
dec
sub
cmc
xor
jbe
adc
int
std
xor
in
out
test
inc
repnz
fists
mov
inc
xchg
mov
inc
jae
sbbl
in
imul
xchg
add
test
mov
repnz
jecxz
shl
mov
add
sub
mov
sub
inc
cmpsb
push
xchg
gs
cmp
add
mov
xchg
jl
lret
sub
lods
daa
test
movsb
inc
xchg
inc
adc
or
and
xchg
push
adc
aam
mov
cmp
lret
pop
fs
dec
adc
mov
cmpsl
xor
lcall
dec
and
outsl
push
in
push
sub
mov
cmp
push
fdiv
or
cltd
inc
adc
xchg
popa
xor
out
cmc
jno
in
and
push
dec
scas
shlb
push
pushf
xchg
mov
inc
push
aaa
push
xchg
or
pop
lcall
jnp
pop
insb
jp
jbe
packuswb
xor
pop
lods
pop
xor
sti
out
dec
mov
movl
add
push
sbb
lcall
mov
aad
bound
mov
or
fs
add
and
add
insl
addl
jecxz
xchg
sbb
pop
xchg
insb
jnp
inc
xchg
dec
or
ret
ss
inc
push
push
loopne
lods
lea
jae
std
sahf
int
push
xchg
mov
cwtl
ss
inc
lock
push
xchg
dec
inc
clc
cmpsl
pop
jbe
dec
or
lret
fimuls
mov
lock
xor
ror
rorb
push
cs
popa
ret
mov
xchg
mov
inc
hlt
sub
outsl
adc
pop
aas
outsl
xchg
in
mov
movsb
in
fcomip
daa
into
push
gs
and
adc
mov
dec
xchg
popf
add
mov
push
push
aaa
mov
lods
xorb
mov
mov
and
adc
pushf
jne
xchg
testb
pushf
lret
fwait
cld
mov
repnz
in
loop
incl
dec
into
cltd
std
dec
es
fsubs
fidivl
mov
ds
inc
mov
inc
inc
es
ss
xchg
fildl
enter
jg
call
adc
mov
cmp
or
pop
jnp
push
scas
inc
inc
hlt
mov
fisubs
lret
test
xchg
and
stos
call
add
call
mov
outsb
das
ja
sbb
inc
jno
movsl
dec
mov
or
aas
xchg
push
aas
push
or
and
cwtl
adc
cmpb
pop
mov
jb
pop
ret
pop
mov
lret
xchg
ret
mov
mov
mov
push
je
mov
int
rcrb
cmp
outsb
fs
aad
fbld
inc
sbb
inc
pop
push
pop
cmpsl
add
aam
roll
jl
mov
cmpsl
jbe
mov
fs
adc
repz
mov
cmpsl
rcrb
mov
mov
jne
ficomps
mov
jo
shrb
or
mov
xor
movsl
test
push
dec
int
push
sti
mov
and
sbb
cmp
xor
xor
push
iret
pop
repz
or
jecxz
subl
push
sub
sahf
loope
pushl
or
aam
add
scas
adc
in
rcll
xchg
ret
and
mov
mov
iret
xorl
mov
cmp
adc
insb
hlt
in
pop
inc
scas
testb
mov
cltd
dec
lods
fistpl
ds
inc
and
adc
cmpsl
sbb
daa
inc
lret
mov
xor
xchg
add
cli
push
sub
movhps
cmp
shll
xor
xchg
cmpsl
stos
cmc
mov
lret
adc
xchg
cli
jnp
jbe,pt
lcall
imulb
fildll
loope
mov
mov
pop
inc
pop
fisubrl
arpl
out
pop
ja
pop
iret
into
fwait
out
mov
cli
mov
cwtl
in
ret
pop
inc
je
ljmp
test
mov
rcrb
sbb
inc
outsb
pop
or
testb
out
jnp
jbe
xor
push
pop
iret
mov
stos
or
out
mov
mov
std
lock
test
push
push
jo
sub
xchg
mov
mov
push
mov
fstpl
or
push
clc
jns
sbb
xchg
push
out
popa
and
daa
daa
cmp
sbb
mov
mov
shll
sbb
dec
xlat
or
sbb
jno
filds
pop
mov
and
sbb
lock
adcl
std
mov
stos
into
mov
cmpb
das
cmp
clc
dec
testb
pop
faddp
and
dec
jb
hlt
pop
cmp
mov
jp
sbb
fwait
push
and
mov
adc
pop
lahf
mov
movsb
stc
xor
dec
xchg
xchg
gs
sbb
cmp
std
mov
fisttps
stc
inc
scas
dec
mov
push
dec
push
outsb
push
adc
mov
js
mov
gs
sub
addr16
and
outsb
ret
add
stos
xlat
mov
in
dec
xchg
pushf
push
sub
idiv
jns
add
mov
sbb
jno
xchg
pop
sbb
popf
xor
pop
mov
cli
enter
sub
mov
loopne
test
test
int
dec
ficompl
push
cltd
mov
loop
into
adc
test
sbb
or
add
xor
stos
in
jne
repz
jnp
xor
ja
mov
cmp
imul
or
roll
popl
xor
pop
or
mov
inc
cmp
pop
push
inc
test
stos
in
pop
jl
mov
divl
orb
mov
inc
xor
sahf
sbb
test
out
dec
xchg
insb
pop
mov
sub
sub
xchg
popa
loopne
imul
mov
fs
in
mov
loopne
push
and
lret
loop
stc
or
mov
jae
leave
sub
mov
xlat
movsl
push
sti
lds
pop
and
sahf
jne
aaa
das
dec
cmpl
mov
test
sti
out
mov
test
lods
mov
xchg
push
das
xchg
push
jne
and
mov
fcompl
xchg
call
mov
pusha
dec
je
insl
loopne
and
lock
mov
iret
push
sbb
pop
int3
xchg
adc
sbb
push
xchg
sbb
mov
es
push
push
cmpsb
scas
push
inc
mov
leave
pop
mov
fidivl
insb
ds
sbb
add
add
add
fbstp
shll
fmull
movsb
dec
push
mov
fldl2e
jnp
cmp
stos
test
outsl
cmp
push
out
int
icebp
daa
imul
ljmp
fisubs
stos
pop
cwtl
leave
sbb
xorb
ret
xchg
int3
dec
sbb
das
xor
cmpsl
or
xor
or
orl
xor
lret
lret
scas
ljmp
faddl
fbld
sub
sub
in
test
nop
mov
notb
orl
cltd
arpl
fincstp
mov
push
pop
adc
push
negb
in
push
inc
lret
adc
xchg
out
sub
cmpb
fildl
roll
mov
xor
mov
ljmp
aas
xor
mov
dec
push
dec
sar
inc
neg
cmp
xchg
inc
lods
scas
imul
mov
dec
stos
jmp
dec
sbb
mov
rcrl
pop
addr16
pop
aas
fldenv
pminsw
ljmp
repnz
jge
mov
scas
ficoml
and
mov
clc
lret
cmpsb
lret
addr16
sub
push
into
cmpsl
xchg
les
test
xlat
add
mov
inc
xchg
test
in
cmp
sarl
push
imull
add
repz
sbb
cmp
ret
lret
out
inc
sub
xlat
xchg
mov
push
xlat
out
add
mov
fldt
arpl
add
xor
jns
dec
mov
sub
fcomps
inc
les
lods
sbb
adc
sbb
jge
push
pop
and
mov
inc
decb
sarl
cwtl
loopne
mov
into
repz
inc
push
ret
hlt
in
and
aas
cmp
cwtl
mov
ret
pop
pop
jb
dec
ds
call
sub
int
xchg
shll
add
jge
andb
out
cltd
lock
std
add
push
fistpl
pushf
nop
test
imul
pusha
xchg
mov
mov
jge
or
int3
jno
rcl
mov
pop
mov
js
stos
mov
rep
or
xchg
and
orl
adc
sub
js
outsb
out
sbb
xor
mov
mov
lret
sub
test
into
and
sub
jbe
ret
ficompl
and
cmp
push
js
arpl
out
aam
xchg
inc
mov
or
mov
daa
mov
call
lahf
mov
sub
cmpsl
inc
inc
lods
sub
lds
sbb
daa
and
mov
sub
xchg
mov
push
lcall
and
adc
dec
je
je
negl
mov
push
jo
xor
int3
ficomps
clc
jmp
ds
cmpsb
int
jae
jnp
jge
add
mov
int
sub
dec
xchg
mov
repnz
mov
ret
sbb
int3
out
mov
and
push
loopne
ja
jae
or
addr16
loopne
leave
add
add
jp
lret
push
mov
and
add
and
add
sub
sti
cmpsl
cltd
fisttpll
dec
pop
push
mov
leave
out
int3
add
shlb
cmp
mov
adc
loop
mov
push
jmp
cmp
daa
and
arpl
pusha
adc
push
mov
stos
loop
push
stos
add
dec
loope
in
movsl
mov
roll
imul
cli
mov
cmpsb
and
or
fcoml
in
mov
and
outsl
lcall
in
movsl
bnd
pop
xchg
cmc
mov
repz
sbb
xchg
cmp
push
aad
sub
xor
push
push
and
mov
add
pop
stos
mov
xorb
stc
mov
jg
jle
in
mov
js
mov
lret
ljmp
popl
movsb
aad
call
mov
icebp
fldenv
cwtl
jne
or
out
sahf
mov
jns
pop
inc
fldenv
sbb
xor
scas
add
mov
pop
enter
sti
add
or
mov
pop
out
lret
jno
bound
mov
adc
jmp
pop
push
lret
popf
cmp
lretw
es
push
out
mov
pusha
adc
in
xor
cmpsb
push
and
andl
out
xchg
sbb
push
xor
pop
les
cltd
push
sub
cld
gs
sbb
mov
stos
clc
inc
mov
out
or
push
lds
add
xor
xor
stos
arpl
inc
sub
pop
dec
filds
push
jge
mov
cmpsl
into
inc
or
iret
sbb
adc
pop
leave
cmp
add
pop
dec
lahf
scas
cld
test
push
xchg
pushf
xor
stos
push
push
adc
inc
ljmp
dec
jmp
cmpb
cld
xchg
mov
and
jmp
lret
and
adc
mov
fidivrl
push
shlb
outsb
sbbb
mov
inc
mov
mov
popa
ret
inc
jnp
das
adc
fxch
rorb
data16
mov
adc
sub
mov
cmp
das
push
cmp
inc
sar
or
orb
pop
insb
inc
push
push
loope
aas
add
pushf
pop
test
loope
pop
inc
mov
lock
daa
mov
jb
inc
ret
push
in
xor
add
mov
dec
cmp
outsb
fwait
popa
add
enter
add
push
test
xchg
mov
cmp
mov
fwait
mov
addb
dec
roll
pusha
lds
loopne
int3
dec
jo
fimull
and
fisttpll
sysexit
jmp
mov
adc
adc
popf
pushf
inc
fcmovne
mov
xchg
mov
loope
push
jbe
lcall
mov
inc
inc
sub
mov
jb
loope
popa
data16
lea
mov
add
mov
dec
sub
iret
and
mov
ja
and
aam
cwtl
add
shll
das
sbb
xor
xor
xchg
lods
pop
push
or
fsubs
movsb
mov
aad
fdivl
jecxz
and
pop
fs
js
adc
andl
lods
push
mov
cltd
cmp
jo
push
in
xchg
push
inc
scas
movsb
shrl
mov
in
test
fs
mov
pop
out
sub
enter
jne
test
pop
or
push
xchg
mov
bound
adc
mov
call
lods
inc
repz
push
mov
cwtl
int3
aad
test
mov
mov
ss
test
cs
sbb
cli
testl
cmpb
stos
movsl
xlat
mov
fadd
adc
fistpll
in
mov
adc
popf
cmp
enter
sti
dec
ljmp
mov
testb
test
aam
adc
sbb
cmp
scas
test
jns
icebp
xchg
jge
sti
jl
push
movsl
xor
pushf
rcl
cwtl
adc
dec
pop
popa
fldenv
popa
mov
or
mov
jge
mov
push
test
jae
xchg
sub
mov
popl
mov
fiaddl
sahf
cmp
inc
and
mov
add
push
push
sbb
push
movsl
incl
xor
rcrb
push
mov
dec
push
adcl
mov
lcall
fstl
xchg
push
into
cmc
inc
sub
or
jl
ds
inc
call
pop
xor
clc
or
sub
mov
sub
xlat
add
mov
cld
inc
add
stos
dec
pushf
jns
xchg
ljmp
xchg
shrl
out
in
outsl
add
arpl
pop
movsb
add
adc
sub
sub
call
data16
add
in
adc
nopl
add
sti
in
add
sub
sub
cli
popa
push
mov
rol
fldt
jl
fs
stos
test
xor
mov
aad
and
or
stc
dec
and
sbb
fs
push
jge
fdivr
movsb
dec
int3
adc
push
mov
cmp
cmpsb
roll
int3
inc
jmp
rol
jle
icebp
enter
mov
icebp
jmp
insl
lret
enter
sub
inc
icebp
imul
cwtl
in
loopne
sbb
es
jbe
es
add
pushl
pop
scas
cmp
jg
mov
repz
cwtl
sti
add
lcall
sub
fs
inc
jno
lret
sub
sahf
mov
xchg
adc
clc
ret
inc
jne
cmp
popf
scas
mov
sbb
cld
mov
es
sahf
cli
sbb
mov
and
sub
mov
inc
sahf
or
sbb
int3
push
adc
loopne
mull
fsub
in
gs
jns
push
jge
scas
fucomp
xchg
cmp
pop
mov
imul
hlt
mov
sub
pop
xchg
cli
cmp
jp
mov
loope
mov
jbe
sub
fsubrp
jns
or
xor
loop
arpl
in
faddp
adc
inc
sub
lret
nop
fidivrl
push
push
mov
pop
sub
xor
lea
aas
jb
ret
fmul
rolb
sbb
mov
mov
jnp
dec
shll
inc
dec
movsb
test
pop
jae
pusha
in
fwait
pop
pop
dec
sub
cmpsl
inc
pop
lret
mov
insb
push
xchg
sub
into
sub
lret
adc
xor
loopne
clc
scas
lea
lods
pop
push
es
push
dec
aas
hlt
movsl
pop
and
cwtl
mov
inc
pop
in
xor
add
and
inc
add
xor
aam
stos
mov
sub
nop
fmuls
iret
mov
jl
xchg
cld
call
adc
cli
dec
cmc
xchg
dec
aas
out
ja
in
sahf
lds
adc
cmp
in
fs
sub
sbb
les
hlt
test
js
stos
repz
adc
push
shll
enter
push
add
fdivl
les
xor
cmp
testb
mov
mov
mov
xchg
stc
xchg
gs
xchg
xor
adc
mov
push
aam
shl
push
add
pop
and
movsl
ficompl
shll
loopne
or
push
jne
xchg
out
mov
cmp
fadd
mov
xlat
aam
in
lea
pop
bound
jbe
jge
push
pushf
fbld
mov
ss
ret
and
sahf
inc
sti
les
clc
and
jb
xor
iret
lret
sti
and
scas
negl
adc
adc
lcall
loop
ja
in
pop
adc
into
mov
ja
add
stos
cli
jmp
adc
pop
clc
pop
or
aam
mov
aam
xchg
jmp
inc
mov
shlb
bound
lods
sbb
mov
mov
test
inc
test
xlat
jnp
mov
out
test
cmp
mov
rorb
xlat
lret
fldt
xor
ss
adc
adc
scas
loope
incl
repnz
sbb
mov
cmp
arpl
in
push
data16
in
or
insl
xlat
mov
loope
cltd
inc
jnp
inc
xchg
xchg
mov
insb
inc
cmp
cmp
jg
jge,pn
aam
add
xchg
call
pop
aas
inc
cs
addr16
xchg
xchg
inc
add
xchg
push
jns
rclb
jnp
fwait
mov
hlt
sub
stc
daa
std
rclb
jb
push
aam
fwait
pop
notl
clc
ss
in
add
outsl
add
add
aaa
lock
cmp
jmp
adc
pop
rorl
jb
xchg
mov
push
lea
xchg
aaa
adc
daa
mov
xchg
push
push
mov
cs
pop
mov
fcompl
std
sub
aas
mov
jnp
sbb
mov
iret
pushl
jns
iret
mov
jne
mov
loopne
out
aad
cltd
mov
push
xchg
push
xor
dec
fimuls
cwtl
sub
movsl
lcall
cli
loop
pop
or
cli
call
jne
jge
push
jb
stos
sub
data16
filds
xchg
enter
repz
jns
sbb
add
popf
out
and
lds
fldenv
jge
xchg
repnz
ret
jl
xchg
scas
outsb
int
xor
rol
fidivrs
sti
test
loope
mov
push
data16
inc
outsl
gs
mov
push
push
pushf
clc
ret
cmp
mov
push
imull
add
or
pop
sbb
or
add
xor
fisttpll
sbb
icebp
aad
xchg
adc
or
mul
sub
jne
bound
int3
sub
mov
and
fistpl
int
jl
xchg
lret
imul
popf
sub
cmpsb
popf
rorl
cmpsl
inc
inc
jns
rol
sbb
sbb
and
add
mov
mov
cs
insb
inc
loope
in
imul
aas
ret
push
and
xchg
sarb
sub
das
add
sub
add
cmp
nop
ljmp
mov
mov
fs
xchg
fs
shrl
inc
cmc
nop
clc
je
and
mov
mov
fiadds
xchg
neg
dec
jb
jb
lds
adc
je
sbb
outsb
jp
cmp
daa
and
iret
mov
scas
pop
out
dec
sbb
mov
ret
mov
sbb
sbb
mov
sub
fsubp
mov
sbb
pop
push
aad
ret
mov
add
dec
loopne
inc
jne
dec
xor
sub
and
push
lods
or
aad
xchg
cmp
mov
sahf
mov
addr16
pop
insl
in
lds
lock
mov
mov
jmp
add
mov
test
loope
cld
sub
jo
cmp
mov
mov
mov
pop
mov
lahf
inc
cli
xchg
int3
test
scas
repz
pop
movsl
cmp
jae
mov
int3
sub
jne
pop
aad
push
out
in
in
cld
mov
out
xor
mov
mov
out
mov
aas
xchg
mov
sbb
jmp
je
sbb
xor
lcall
pop
loopne
ficomps
out
mov
xchg
mov
fists
out
push
orb
pop
push
loope
adc
cmpsb
cmp
enter
movsl
int
loope
xor
lret
mov
mov
inc
imul
ret
ret
sbb
aas
cmp
cmp
popf
adc
orb
xor
in
dec
jp
push
int3
jb
inc
in
cmp
push
and
dec
push
pop
add
inc
outsb
pusha
imul
aaa
popf
jle
nop
fisttpl
mov
xor
sbb
adc
push
test
mov
mov
jecxz
jecxz
insb
add
pusha
mov
shl
pop
pop
push
push
bound
call
testb
sbb
push
adc
enter
call
ret
mov
pop
xor
lods
je
gs
mov
loop
mov
dec
int
imul
fiadds
push
cmp
or
adc
xor
inc
jo
jle
mov
bound
xchg
lds
shlb
cmp
inc
loope
sub
mov
daa
inc
mov
fiadds
rcll
mov
test
sahf
lds
mov
sbb
mov
in
int3
fsts
mov
xchg
mov
ficoms
rorb
aaa
outsl
pop
dec
loope
insl
repz
mov
and
xor
xor
rorl
test
cltd
stos
cltd
pop
xor
into
test
sub
enter
fistpll
out
stos
cmpsl
mov
sub
loopne
add
xchg
aas
or
dec
pop
push
lods
rolb
ljmp
push
out
lret
sbb
sbb
jo
sub
mov
mov
push
push
push
mov
pop
adc
or
push
sahf
sub
fdivl
xor
scas
nop
mov
mov
test
stos
cmp
testl
movsb
test
cmp
rolb
mov
mov
xchg
pop
lret
sbb
cltd
cmpsl
sbb
mov
fistpl
mov
cs
push
es
ret
and
popa
outsb
xor
ja
mov
mov
int3
jns
js
aad
jns
mov
dec
nop
sbb
xor
cwtl
cmp
clc
dec
cmpsb
mov
dec
mov
mov
repnz
roll
dec
xor
mov
sbb
xchg
iret
lret
mov
loop
xor
sbb
iret
lret
popa
mov
test
mov
cld
test
rorb
loope
or
jns
gs
inc
dec
push
insb
mov
lea
test
push
lcall
imul
ss
mov
mov
lea
enter
call
or
cmpsb
add
icebp
out
dec
mov
sub
jb
orl
adc
test
subl
pop
xor
add
sbb
push
jb
inc
sarl
mov
ret
fcompl
in
cs
mov
fwait
icebp
addr16
pop
add
aas
movsb
icebp
pop
xchg
jno
movl
lahf
es
ja
cmp
flds
sti
cwtl
fistps
and
xlat
fistl
mov
outsb
push
mov
xchg
icebp
jae
fiadds
inc
ljmp
test
pop
jne
int
aas
jnp
sbb
out
jl
and
cmp
dec
mov
add
pop
bound
jp
xor
and
mov
pop
push
and
mov
add
ja
fsubrl
into
fsubl
sbb
sub
pusha
popa
xlat
ficoml
in
add
and
adc
cmpsb
xchg
mov
out
cli
add
adc
mov
mov
inc
mov
add
sub
jp
nop
cmpsb
xchg
jp
add
sahf
pop
lahf
rorb
mov
scas
repz
mov
pop
adc
out
xchg
dec
adc
adc
or
jmp
mov
mov
outsb
lret
rolb
and
rcrb
lods
lods
mov
push
mov
ljmp
pop
mov
push
decb
pop
jbe
push
jno
ficoml
adc
das
cmp
xchg
subl
lea
ret
mov
movsl
out
loope
cmp
push
outsb
inc
fsub
pop
in
xchg
stos
pop
enter
mov
out
addr16
sbb
test
jo
xchg
push
arpl
inc
pop
jmp
enter
pop
mulb
or
ret
jne
scas
lock
pop
dec
cs
cmp
insl
add
in
cwtl
aaa
jge
jnp
adc
pop
fs
lret
insb
dec
icebp
sbb
mov
repnz
int
jmp
sub
das
and
and
inc
out
xchg
or
jns
inc
pop
insb
sub
push
or
xchg
sti
ds
into
out
les
sub
and
mov
pusha
or
out
out
sahf
aas
push
jg
push
xor
jne
adc
jecxz
scas
adc
imul
andb
lea
sbb
jo
mov
xchg
jae
jb
in
in
nop
pop
mov
and
std
out
adc
mov
xchg
aas
push
mov
and
ret
mov
and
inc
mov
rol
pop
in
cmpsl
fs
push
imul
insb
scas
iret
and
push
dec
pop
leave
out
xor
rolb
cmp
jl
add
sti
ja
stc
stc
outsl
ja
xlat
jmp
mov
mov
in
mov
or
sub
dec
xor
repz
and
lock
es
loopne
gs
lret
insl
push
lcall
cmpsb
pop
mov
cltd
adc
xor
int
or
and
fistl
aaa
lods
jns
jg
push
aaa
pop
mov
popa
lcall
sbb
mov
xor
dec
mov
mov
xor
add
pop
arpl
negb
pop
lahf
cs
movsl
mov
xchg
inc
or
dec
sbb
jp
pop
dec
cmpsl
leave
push
outsl
push
das
fmuls
pop
inc
jmp
lret
jnp
aas
mov
inc
fdiv
cmp
add
clc
push
xchg
shll
cwtl
xor
cmpsl
aad
and
cmp
in
daa
push
pop
popf
inc
sub
ror
cmp
int
inc
fdivrl
mov
sub
ss
jne
jge
mov
loopne
add
mov
adc
adc
leave
and
and
cmp
adc
pop
adcl
pop
push
int
xlat
fmuls
mov
xchg
aaa
in
rclb
adc
cwtl
filds
sahf
mov
shlb
pop
jnp
scas
lods
fisttps
out
ret
rcrb
push
loopne
ljmp
mov
mov
dec
dec
push
lcall
sahf
xchg
add
je
int
insl
mov
ret
rolb
xchg
push
dec
add
aam
inc
out
push
add
push
out
or
jne
dec
mov
add
enter
cltd
and
fwait
jp
jno
fdivrl
jmp
xchg
sbb
and
jmp
push
xorb
pop
cmp
out
sub
out
ljmp
and
es
dec
arpl
fsubrs
nop
push
mov
push
xchg
jns
into
sub
or
jmp
xor
fwait
xor
hlt
jne
sahf
jp
push
roll
jb
cmp
inc
lea
push
mov
aam
push
jl
fdivs
sti
ret
js
stc
scas
push
jl
sti
ja,pn
aaa
lock
jbe
add
push
ljmp
pop
cmc
shlb
fnstcw
int3
dec
push
sbb
scas
xor
lret
jmp
clc
xor
add
mov
or
loop
mov
movsb
xor
jne
mov
mov
in
repz
jno
add
imul
test
lahf
and
push
in
fcmovnu
mov
aam
add
movd
movl
int
adc
push
xor
cmp
inc
repnz
and
inc
out
pop
dec
imul
pop
stos
inc
push
sub
out
xchg
xor
pop
mov
cmpl
push
push
dec
inc
je
adc
pushf
movsb
xchg
pusha
jecxz
jno
pop
scas
jne
in
or
scas
std
in
jmp
lcall
rclb
insl
sub
inc
orb
in
and
and
das
push
sub
outsb
lahf
mov
jp
or
jbe
mov
hlt
push
adc
rcrl
xchg
adc
movsl
popf
repnz
xlat
insl
push
pop
enter
int
cmp
pop
mov
mov
je
cmpsl
orl
sahf
or
sub
imul
mulps
xor
cmp
scas
jge
jo
scas
jl
pop
xor
xlat
mov
fdivl
shrl
iret
sbb
pop
sbb
cs
subl
imul
and
addl
rolb
pop
push
je
ret
add
in
sarl
jns
nop
and
int3
cmpsl
ds
and
hlt
push
mov
lcall
inc
bnd
dec
daa
and
imul
sbb
xor
dec
or
std
imul
pop
fidivl
nop
pop
rcr
daa
jns
std
xlat
xor
ds
adc
js
rclb
int3
pop
jmp
adc
pop
out
jl
pusha
adc
adc
xor
pop
test
aas
fbstp
inc
stos
nop
gs
pusha
or
xor
cmc
inc
mov
mov
push
jl,pt
push
stos
mov
mov
ja
push
jecxz
push
push
jb
sub
shld
or
mov
std
add
shrb
sub
aaa
scas
or
push
leave
sbb
sub
daa
add
xlat
xchg
das
sahf
fnsave
je
mov
mov
xchg
adc
pop
cmp
adc
pushw
or
mov
jl
mov
fsubrs
jp
lahf
push
dec
push
cwtl
inc
jo
dec
fwait
inc
mov
addb
repnz
in
stos
dec
lds
call
in
int
or
stos
aad
pop
xchg
jns
lret
dec
jge
les
sbb
hlt
jns
mov
xor
std
xlat
aaa
out
stos
adc
in
les
cmpsl
fldcw
out
mov
test
jge
push
jle
jne
adc
lock
push
jns
mov
jbe
movsb
pcmpeqw
into
add
mov
sub
fiadds
inc
push
sbb
dec
mov
pop
icebp
jnp
pop
pop
outsb
inc
cmp
shrb
outsl
daa
sub
sub
cmp
or
frstor
adc
jne
lcall
in
fdivrl
movsb
pop
inc
and
out
loop
inc
jmp
sbb
fs
xor
out
jecxz
push
ljmp
and
fxrstor
ss
scas
xor
addr16
sarb
subl
scas
int3
ficoml
sub
adc
pop
lcall
jo
data16
loop
mov
and
pushf
cmp
das
cwtl
mov
stos
repnz
loope
test
xor
int
lahf
in
arpl
mov
ret
push
imul
movsl
adc
imul
cmpsb
mov
push
movsb
lcall
mov
es
fnstcw
add
adc
dec
fstpt
negb
ret
iret
xor
or
icebp
sub
popa
out
lods
xor
lds
mov
sub
inc
es
int
xchg
notl
xchg
jne
jae
sub
test
fistpll
jp
orl
and
arpl
pushf
test
pop
xorl
enter
inc
pop
cmp
sbb
frstor
ljmp
pop
xor
outsb
outsl
dec
or
std
leave
mov
pop
jbe
pop
add
or
xchg
sbb
cmp
hlt
or
negb
mov
push
lods
imul
stos
imul
pop
jle
dec
leave
inc
xor
or
fnstenv
std
mov
cmp
cmp
imul
mov
xchg
jbe
insl
rclb
aaa
pop
mov
mov
repnz
push
std
testl
push
fldl
int
adc
stc
fidivs
inc
adc
mov
stc
adc
andb
inc
inc
lret
mov
xchg
icebp
out
jge
dec
mov
mov
cli
lcall
xor
mov
aad
mov
push
fsubrl
pop
sahf
mov
fdivs
leave
gs
mov
orl
pop
inc
aad
pusha
dec
iret
mov
cmp
fsts
cmp
movsl
inc
dec
xchg
cmp
sti
js
pop
cmp
in
les
or
xor
mov
inc
push
add
mov
mov
out
push
xchg
xchg
aad
shlb
mov
cltd
mov
mov
in
loop
sbb
fadd
in
ret
sbb
pop
add
in
fmull
xchg
mov
cld
add
ds
inc
xor
mul
loop
fstps
test
sgdtl
adc
jns
aad
ficoms
sub
aaa
mov
gs
xchg
inc
ss
mov
fnstcw
mov
push
cmp
and
out
pop
add
push
ja
je
test
shll
sbbb
adc
adc
pusha
insl
nop
cmpsb
jle
fisttpll
mov
cmp
inc
pushf
cmc
xor
sub
add
add
mov
sbbb
fisttps
cs
iret
sbb
mov
movsb
mov
int
add
rcrl
sbb
mov
insb
adcl
sub
lret
cmp
mov
dec
mov
dec
push
jno
dec
pusha
pop
fld
push
movsl
cwtl
or
jl
or
pusha
lock
fisttpll
or
movsl
add
pop
sbb
loop
popa
repz
mov
push
cmp
mov
cld
and
xlat
mov
ljmp
stc
cmp
sbb
insl
dec
xor
sub
movsb
cltd
jmp
roll
push
pop
dec
roll
arpl
cmpl
pop
cmpsb
jge
jmp
xchg
outsl
aad
adc
sub
adc
fwait
fs
out
in
jno
call
sub
loop
std
add
aas
cld
mov
rorb
rorl
add
pop
add
idivl
repnz
and
jl
loopne
pop
std
xchg
int
sbb
je
fldl
les
xchg
dec
mov
call
insl
lcall
mov
push
int
mov
repnz
cli
scas
mov
out
mov
in
insl
rep
out
test
sub
xor
data16
jo
shlb
and
mov
adc
or
out
dec
mov
dec
jbe
inc
push
jb
push
sbb
mov
dec
inc
xchg
stos
xchg
adc
cmp
ret
adc
fistpl
dec
xlat
fstpt
xor
shlb
add
sub
shr
and
mov
add
out
shll
jg
loopne
jmp
andl
jge
lret
xchg
mov
mov
int
inc
loopne
inc
sub
push
xchg
jge
dec
sbb
insb
push
and
xchg
imul
mov
jmp
arpl
subb
ja
mov
or
fbld
pop
inc
push
xor
repnz
sub
and
cmpsl
js
pop
or
mov
cmp
cmp
call
mov
lods
adc
push
stos
mov
movsl
pop
xchg
fisttpl
jp
adc
push
scas
imul
imul
stc
mov
stos
in
lret
jl
inc
mov
fwait
mov
lods
xlat
cmp
lds
mov
out
mov
and
xor
sbb
mov
mov
out
jmp
push
in
dec
jnp
and
adc
ja
aas
jae
sbb
xchg
jecxz
in
add
mov
roll
fists
adc
ss
sbb
push
cwtl
xchg
lret
mov
lret
sti
inc
out
pusha
sahf
cli
jle
fldcw
rcrl
fdivrp
dec
ret
and
lods
into
push
aam
dec
and
cmp
pop
jbe
cwtl
pop
shll
and
or
sbb
mov
enter
cltd
jmp
arpl
inc
icebp
mov
ret
mov
sub
push
mov
int3
pushl
cs
pop
sti
xchg
outsb
fs
push
pop
pop
mov
sarl
arpl
cmp
inc
popf
lret
lret
out
or
push
outsl
into
and
xor
cmp
out
rcll
ret
int3
iret
inc
fs
xor
dec
cmp
sub
add
pop
sub
jbe
jmp
lea
add
push
and
repnz
adcl
int
stos
xchg
pusha
push
shll
mov
mov
lcall
xchg
in
lods
dec
je
inc
push
ja
scas
cmp
in
push
inc
sbb
aaa
loope
mov
repz
vpmadcswd
int3
inc
or
dec
add
jg
imul
push
fs
test
add
xchg
adc
fs
and
dec
in
arpl
inc
add
outsb
repz
sub
dec
ret
inc
adc
jo
repnz
repz
incl
scas
adc
out
sbb
and
fcomps
push
sub
rclb
jae
jl
or
jg
ret
iret
or
mov
push
jle
cmpsl
mov
xchg
shrl
and
imul
cmc
je
mov
sbb
lock
insb
xor
mov
lods
addl
and
push
dec
stos
cmp
pop
adc
push
jne
fidivl
push
or
and
push
jne
shrl
xchg
xchg
stos
sub
and
or
add
sti
inc
jge
sub
jmp
in
xor
mov
jbe
inc
icebp
pop
cmpsb
mov
fsubl
mov
mov
push
dec
xor
lock
lret
in
cmp
rolb
xlat
pusha
lcall
mov
sbb
mov
loopne
out
mov
mov
dec
je
test
orl
adc
mov
mov
ds
cmp
dec
mov
test
add
mov
jo
sti
and
xlat
mov
sub
movsb
insl
movsb
out
not
movsb
rep
sub
ja
out
pop
sbb
sbb
ret
clc
in
es
push
lock
mov
outsl
adc
call
into
adc
fdivs
js
inc
in
add
popf
testl
and
enter
shr
call
ret
mov
push
xlat
add
dec
jmp
push
outsl
dec
push
pop
lods
adc
jl
cmp
addr16
fs
dec
adc
add
fsubp
push
inc
dec
mov
nop
std
xor
sub
jbe
or
and
or
and
mov
cmpsb
sub
adc
pop
ja
gs
dec
ja
jno
and
popa
jg
push
jp
dec
pushf
aas
movsb
addl
push
jno
mov
in
mov
jo
icebp
int
push
push
in
xor
cmpsl
lods
movsl
mov
gs
daa
jecxz
subl
arpl
ss
lret
adc
dec
int
nop
aas
cmpsl
in
inc
rol
push
sub
mov
leave
dec
mov
adc
bound
lmsw
pop
dec
cmp
ret
adc
jl
xchg
cmp
testb
dec
jmp
addr16
std
test
dec
sub
mov
pop
into
jne
int3
popf
or
mov
xchg
cmp
xlat
and
das
std
mov
dec
push
insl
or
je
loop
lret
xchg
aas
mov
xchg
push
outsl
or
test
insb
sbb
pop
test
push
mov
fisubs
ficoml
int3
outsl
pop
push
jge
add
and
and
xor
hlt
inc
mov
mov
mov
sub
mov
sbb
iret
jmp
xlat
and
out
jbe
inc
repz
push
dec
xchg
add
addps
enter
enter
xor
push
adc
shlb
test
rolb
xchg
mov
ja
xchg
add
imull
push
fstpt
mov
mov
cli
xchg
fisubrs
push
jo
fnstcw
lcall
jle
imulb
jb
pop
or
aam
pop
dec
inc
movsl
test
lds
xchg
xchg
or
lahf
and
jb
sahf
xchg
imul
mov
inc
mov
cmp
inc
jnp
inc
repnz
fistl
cmp
jmp
testl
lods
std
pop
cmp
mov
js
push
js
pop
or
dec
cmpb
mov
pop
fwait
or
icebp
adc
mov
pop
jno
jnp
test
in
rorl
movsb
mov
sub
cmpsl
mov
fimull
adc
xchg
mov
shlb
nop
mov
fcmovb
xor
xor
mov
movsb
clc
sub
scas
mov
fwait
pop
adc
sbb
mov
shr
dec
fildl
xchg
push
dec
cltd
aad
ret
mov
out
rol
test
inc
push
xor
xchg
add
frstor
addb
cwtl
inc
std
fsubrp
adc
scas
divl
mov
sub
idivb
cmovs
fmull
sahf
jbe
inc
jno
push
or
mov
nop
mov
mov
rcll
cmp
sub
sbb
xor
mov
mov
in
lods
xor
leave
adc
mov
push
xchg
and
xchg
out
in
rorb
movsb
mov
pop
das
out
cmc
cltd
cmc
cwtl
cmpsl
sub
add
test
mov
in
sbb
dec
scas
les
flds
push
and
cli
add
pop
pop
pop
pop
ljmp
mov
stos
pop
testl
std
mov
clc
loop
xchg
inc
int3
jno
ja
ja
lcall
adc
out
dec
jb
addr16
push
inc
mov
push
inc
insl
clc
mov
jne
das
ret
dec
pop
loopne
sub
popa
outsl
cmp
es
xchg
pusha
mov
mov
xor
or
outsl
dec
cmp
movsb
daa
xor
dec
adc
sbb
sub
pop
push
sub
lret
dec
mov
add
mov
dec
jp
movsb
and
sbb
cld
aam
out
pusha
sub
cli
clc
pop
lea
fisttpll
or
arpl
xor
nop
insl
xchg
xchg
jne
mov
mov
dec
insl
fldt
aam
mov
and
mov
std
mov
js
fst
push
mov
inc
outsb
jo
pusha
inc
jae
shll
pop
pusha
pop
fisubs
adc
jecxz
out
adc
jne
scas
add
loop
mov
sub
add
nop
xor
scas
jmp
movsl
dec
js
inc
jae
test
add
adc
popf
scas
test
add
fistl
roll
cmpl
daa
push
cltd
nop
roll
js
outsb
mov
and
pusha
lret
ret
push
stos
inc
and
lahf
cmp
aas
test
jge
push
add
jno
inc
scas
jecxz
sub
stos
pop
xchg
dec
ja
mov
test
mov
mov
mov
push
sti
dec
mov
mov
fbstp
pop
inc
repz
enter
inc
push
in
ret
dec
pop
xchg
movsb
dec
popw
arpl
jecxz
push
or
aam
iret
mov
lods
or
lods
sbb
cltd
cmp
in
jbe
jmp
out
sub
stos
xor
push
fisubrl
pop
sbbb
cmp
rcll
push
add
adc
sub
sbb
repnz
popf
cld
incl
ss
jl
lds
leave
add
xor
push
mov
ret
mov
xchg
in
pushf
pop
dec
mov
xchg
or
shll
inc
inc
ret
roll
adc
adc
inc
adc
mov
and
dec
sti
into
mov
in
test
fldl
cmp
mov
and
lock
call
jg
mov
fldl
adc
pop
in
add
call
sbb
inc
test
sti
ljmp
xor
cmpsb
icebp
std
enter
or
mov
popa
adc
lcall
adc
pop
pop
xchg
xchg
int3
xchg
pop
xlat
scas
out
subl
sbb
xor
out
ret
dec
add
sbb
pop
daa
push
fs
push
dec
test
mov
sub
dec
repnz
into
stos
int3
sbb
loopne
inc
movl
jl
dec
pusha
dec
imul
sub
xchg
fisubrs
fcoml
mov
adc
test
divb
jno
pop
mov
imul
dec
xchg
xchg
or
ds
dec
jg
jle
xchg
movsl
jg
dec
dec
pop
into
lock
lods
leave
out
or
inc
push
jnp,pn
scas
mov
cmp
scas
ds
jno
cmp
pop
ficompl
movb
into
or
fstpl
push
jno
nop
fcom
push
lock
insb
or
pop
cmp
mov
xchg
lock
es
out
and
add
and
push
addr16
xchg
rcrb
xor
sbb
pushf
pop
inc
fcompl
mov
push
lret
mov
xor
or
jbe
mov
lods
repnz
int3
mov
mov
mov
adc
rcl
nop
pop
cmp
into
jnp
adc
cld
shr
mov
lea
je
mov
clc
pop
fisttpl
sahf
fiadds
jp
mov
or
and
in
pop
movsl
pop
sbb
jecxz
ror
and
js
xor
adc
cmpsl
int3
loopne
pop
jge
ret
into
insb
je
data16
mov
cmp
filds
fdiv
pop
push
and
enter
and
dec
push
dec
icebp
mov
ljmp
push
pop
aad
mov
cmp
fwait
sbb
or
shrl
sbb
into
push
in
pop
arpl
scas
adc
out
popa
add
cmpsb
fdivl
adc
cmpsl
insb
push
mov
popf
popf
or
pop
fildl
cmp
adc
push
inc
pop
jno
shr
mov
outsl
hlt
jl
lret
mov
shrb
sub
xor
mov
clc
out
cltd
cmc
mov
in
xchg
jns
jmp
cmp
mov
jp
push
test
mov
cmpsb
jno
xorl
mov
mull
mov
add
hlt
mov
inc
dec
push
cld
add
lcall
aas
cmp
fs
and
imul
gs
int3
dec
pop
lahf
dec
icebp
dec
inc
imulb
mov
xor
inc
in
xchg
fwait
dec
adc
or
icebp
jmp
sub
lcall
repz
inc
xor
popa
hlt
xchg
xchg
inc
push
rcrl
inc
jl
add
pop
lods
add
mov
xor
jne
cmp
scas
sarb
xor
lahf
adc
and
or
icebp
loopne
out
jbe
dec
dec
mov
push
fsqrt
push
lcall
pusha
dec
test
out
incb
in
push
or
or
shll
jnp
notl
pop
shrl
shrl
mov
out
outsl
mov
and
insb
fwait
xchg
in
push
fnstenv
movsb
sahf
dec
ljmp
cmp
xchg
sub
shl
int3
sbb
ljmp
adc
dec
xchg
adc
sahf
pop
bnd
andl
sti
or
vminss
cmpsb
sahf
hlt
imul
xchg
ljmp
jo
cmc
xchg
out
addl
sbb
lods
mov
jne
cs
jne,pt
in
and
scas
mov
sub
stos
ss
pop
and
xchg
repnz
fsubrs
add
out
jo
dec
mov
pop
nop
lret
ret
push
push
loopne
ficompl
lahf
in
fsts
mov
out
loopne
ds
es
inc
fbld
xorb
inc
xor
in
lahf
jae
mov
mov
ljmp
sub
cwtl
mov
das
gs
push
testl
movsb
bound
movsb
cmpsb
iret
cmpsl
ret
imul
out
push
fwait
dec
sub
subb
inc
pop
fists
test
idiv
pop
and
arpl
adc
xchg
lahf
cltd
jnp
pop
adc
shrb
es
ret
ret
jge
xchg
js
mov
mov
cmpsl
repz
iret
jmp
adc
dec
shll
mov
mov
fs
loopne
stos
fs
pusha
fisttpll
ficoml
int
mov
rorb
mov
pop
or
pop
cmc
mov
fcomp
pop
lock
cmp
lods
test
movsl
push
xchg
int
lds
out
inc
cmp
xchg
cmp
addb
inc
mov
call
rcrl
fsubl
bound
cmovp
jns
cmp
int
dec
mov
aaa
or
jg
jne
aad
test
add
ljmp
shlb
or
cmp
fsub
dec
outsb
sbb
xchg
push
lds
mov
inc
and
dec
adc
repnz
js
and
mov
push
std
jns
dec
shll
inc
xor
jno
mov
inc
dec
call
mov
fbld
mov
or
pop
cmp
mov
inc
cmpsl
pop
add
lods
out
xor
push
add
stos
imul
sbb
mov
mov
push
mov
cmp
jbe
fwait
jg
std
insb
popa
fmulp
cld
pop
mov
test
jo
icebp
xchg
aas
inc
push
xchg
mov
clc
inc
pop
sub
mov
aam
pop
addb
dec
cs
sub
adc
pop
xor
jae
lret
addl
inc
dec
fdivrl
idivb
xor
loopne
mov
arpl
dec
les
mov
fs
repz
jb
sbb
movsb
pop
mov
or
lds
out
xchg
loopne
pop
push
dec
mov
push
enter
push
std
push
mov
clc
push
add
dec
or
mov
jbe
xchg
jecxz
cmp
test
xchg
add
xor
mov
mov
push
repnz
add
and
stc
xchg
nopl
push
fisttpll
adc
dec
cmc
push
xchg
add
shr
inc
mov
sbb
add
xchg
psubusw
sub
hlt
dec
adc
jp
pop
das
mov
push
inc
cmc
dec
adc
or
stos
clc
push
cmp
xchg
add
cmp
call
mov
jae
mov
add
and
xchg
movsb
fadds
lds
popf
cld
mov
cmpsl
push
mov
out
mov
cmp
jns
mov
add
pop
mov
loope
dec
ror
mov
inc
je
sub
mov
lock
or
rcrl
shrd
sti
cwtl
cld
icebp
mov
hlt
cli
les
sub
clc
and
jo
mov
fidivrl
inc
mov
and
mov
in
js
sbb
xlat
rcr
mov
dec
lcall
pusha
sub
or
mov
add
cltd
mov
sub
out
xchg
inc
xor
or
push
popa
aas
nop
notb
mov
mov
dec
outsl
pushf
sahf
lcall
jno
cld
imul
notl
rclb
jmp
sbb
addb
mov
jmp
inc
and
or
scas
inc
stos
add
out
nop
cs
loope
fs
or
lea
das
dec
cmp
into
ret
xchg
bound
mov
xrelease
dec
fst
mov
dec
jns
ds
sbb
ror
cmp
cmp
add
mov
sbb
testb
mov
cmp
cmpsl
ret
mov
sub
insb
push
jge
xchg
pop
andl
call
dec
nop
enter
sahf
xchg
pop
push
fldenv
pop
pushf
rcll
mov
fisttpl
mov
add
fisubs
repnz
rolb
rcll
lds
jecxz
push
mov
xchg
inc
and
xor
cld
mov
xchg
mov
fs
jge
push
adc
das
inc
xor
test
adc
pop
xor
shrl
or
xchg
ret
xchg
loope
out
xor
ds
sub
stos
add
icebp
pop
inc
lahf
daa
in
lods
mov
or
aad
sbb
daa
pop
mov
ss
das
mov
jge
aad
or
fwait
mov
imul
or
push
dec
adc
pop
js
fstl
cli
loop
sbb
fnstsw
push
clc
mov
orl
mov
movsl
push
jmp
sbb
pop
xor
pop
cli
jecxz
xor
dec
add
aas
mov
fnsave
stos
adc
int3
push
out
in
mov
test
xchg
dec
lea
nop
test
mul
cmp
mov
mov
dec
repnz
add
lret
sahf
shr
jecxz
adc
xchg
shl
stos
ljmp
in
repz
fwait
test
add
or
out
scas
dec
gs
or
cmc
sub
mov
mov
pusha
fdivrs
and
clc
mov
inc
jne
stos
xchg
test
ss
pop
int3
lret
mov
insb
dec
pop
scas
in
xor
hlt
xchg
push
push
cli
sti
pop
dec
lods
dec
scas
in
inc
dec
cmp
subl
das
mov
lret
lods
sbb
fwait
das
lods
fsubrl
repnz
ja
jae
jbe
pop
mov
lock
sub
cmp
mov
dec
ret
push
rcrl
cmp
sti
push
dec
stos
cmpsb
popa
jle
fldcw
subb
mov
rol
outsb
mov
fstpt
xor
or
orl
pop
ss
leave
lret
pushf
shll
fs
inc
addr16
js
into
jae
pop
jae
and
lods
iretw
xchg
sahf
adc
mov
dec
mov
inc
mov
out
sbb
sub
xor
sub
dec
imul
addb
push
dec
fucomp
loop
pop
push
pop
pop
mov
sti
ror
mov
add
sbb
gs
fdiv
lods
adc
imul
jg
xor
int3
out
xchg
sbb
stos
push
dec
add
jp
insb
stc
mov
scas
mov
or
enter
jp
pop
out
iret
cmp
jns
insl
std
ss
mov
ret
cmp
lods
shl
sub
push
push
push
cmp
mov
into
cmp
jae
mov
push
sarl
mov
bound
jno
mov
stc
lret
in
pop
sub
mov
xchg
outsl
mov
cltd
cmc
inc
xor
push
lret
mov
push
dec
popa
sti
xchg
dec
notb
inc
cmp
pop
sbb
out
xorb
pop
push
leave
loopne
rclb
dec
mov
jg
fnsave
imul
or
je
mov
pop
imul
or
ss
test
dec
adc
sbb
or
add
jnp
aam
push
int3
jp
mov
ja
mov
out
sahf
fstpt
out
mov
xchg
ss
es
aad
icebp
ljmp
mov
jle
mov
mov
and
out
and
loope
stc
mov
cwtl
arpl
jge
mov
dec
xchg
mov
xchg
lret
jbe
xchg
shlb
cmp
push
xor
scas
addb
xor
dec
sti
cmp
mov
fisubs
mov
and
cltd
cmp
lods
gs
imulb
stos
sub
pushf
orl
stos
mov
rcrl
jnp,pn
enter
gs
sub
mov
in
mov
mov
xchg
clc
pop
lret
mov
mov
pop
es
nop
add
jge
xor
cli
xor
int
into
xchg
jl
pop
xor
and
dec
out
mov
sbb
fpatan
gs
and
cltd
sub
push
and
mov
daa
xchg
jecxz
arpl
inc
mov
orl
xchg
test
mov
and
arpl
shr
nop
pop
rclb
lret
mov
fs
cmp
out
mov
daa
ret
popa
aaa
xchg
cltd
push
push
mov
push
jnp
or
mov
data16
sub
dec
push
pusha
xchg
xor
pop
seta
sbb
mov
jne
pop
test
daa
cmpsb
jbe
fisubl
int
test
push
xchg
rolb
inc
add
xor
or
pop
sbb
aas
dec
cli
cmpsl
and
call
xor
lret
jb
cmp
cmp
dec
xlat
mov
jno
dec
addr16
inc
jecxz
xchg
rcrb
fiaddl
inc
js
test
mov
sub
loope
mov
pop
mov
xlat
inc
dec
addr16
push
push
fsubr
mov
xorl
out
in
pop
sti
push
cwtl
xlat
mov
xchg
push
sub
xchg
mov
insl
cmpsl
movsb
cld
movsl
arpl
push
mov
je
push
xchg
dec
insl
popf
xor
cmp
cs
pop
outsl
mov
adc
xlat
jne
cld
dec
xor
and
int3
or
xchg
xchg
popa
out
mov
xor
loope
mov
xchg
mov
mov
sahf
cld
or
adc
arpl
push
lret
inc
jp
jne
cmpsl
sti
sahf
cmp
loopne
pop
cmc
push
pop
sub
add
arpl
lcall
cwtl
popa
mov
push
cltd
jae
xchg
pop
popa
mov
add
nop
add
mov
mov
push
xchg
inc
jo
and
inc
adc
cmpsb
gs
rcrl
inc
mov
outsl
sbb
into
mov
and
mov
scas
add
nop
cmp
dec
out
sbb
popa
ss
dec
push
in
leave
mov
hlt
dec
data16
int3
jb
in
mulb
mov
not
sub
push
adc
xor
jno
mov
cs
mov
inc
cmp
push
ss
cmp
js
jbe
push
popf
repz
test
xor
dec
idivl
jl
stos
mov
sbb
repz
mov
gs
mov
aam
dec
pop
jnp
sbb
loop
cwtl
add
arpl
rcll
fucom
sub
mov
inc
and
lret
or
lea
adc
push
stc
daa
dec
test
outsb
push
xchg
loope
hlt
stos
test
xchg
ret
outsl
aad
icebp
xor
sub
adc
push
cmp
xchg
or
or
insb
inc
ss
fisubl
cmp
out
adc
jge
int
lods
shrb
out
jecxz
stos
adc
fsts
push
pop
add
js
enter
subb
adc
xchg
push
popf
cmp
mov
addl
fsubl
outsb
mov
movsb
loop
and
jle
scas
cmp
icebp
xor
sub
int
push
jecxz
or
orb
les
xorl
cmp
arpl
push
mov
mov
inc
out
mov
movsl
lahf
and
jae
mov
daa
adc
cmpb
emms
mov
add
cmpl
outsl
cmc
adc
jp
lock
mov
mull
jns
les
aad
daa
popa
test
mov
mov
push
add
mov
push
shlb
jl
mov
xor
lcall
pop
or
sbb
cltd
mov
add
push
arpl
push
mov
sbb
arpl
inc
mov
loope
lods
xchg
pop
inc
imul
mov
addr16
adc
clc
sbb
js
mov
jnp
cli
sar
inc
call
loope
xchg
jp
push
movsb
mov
or
dec
daa
dec
cmpb
lods
loopne
pushf
int
sbb
xor
or
aaa
dec
repnz
sub
jmp
pop
fwait
pop
and
mov
pop
fcmovne
icebp
ljmp
pop
mov
scas
inc
stos
push
aam
dec
dec
fmuls
clc
mov
out
in
push
popf
pop
aas
stc
fstpl
or
cltd
lods
mov
aaa
adc
push
out
mov
mov
mov
and
inc
push
fisubs
mov
push
testl
mov
xchg
mov
adc
adc
fcmovne
add
lret
pop
scas
pop
xchg
fwait
xchg
push
pop
stos
add
bound
leave
mov
stos
js
and
jno
pop
inc
je
dec
or
fucomip
dec
add
pop
in
push
movsb
add
pop
and
in
loope
outsl
mov
or
into
gs
mov
push
push
lods
push
cli
movb
pushf
test
scas
sbb
push
sar
pop
xlat
or
xchg
push
clc
dec
adc
cltd
aaa
cld
ljmp
xor
clc
cli
jl
xor
jge
fstl
adc
popf
stos
xchg
push
cwtl
sub
push
mov
inc
cltd
fs
adc
clc
and
sarl
fistl
mov
lahf
push
xchg
int
fimuls
adc
push
push
push
mov
dec
adc
sti
js
adc
xor
in
loop
jbe
lret
roll
stos
pushf
insl
add
inc
inc
loopne
arpl
cmpsb
in
sbb
inc
int
cmp
pop
pminsw
add
or
adc
loopne
lahf
or
mov
mov
push
xchg
xchg
iret
fstps
sbb
orb
dec
in
stc
xor
mov
mov
mov
jecxz
gs
iret
leave
repnz
ret
outsl
test
pop
int3
mov
xor
cmp
push
adc
pop
add
ljmp
jno
mov
cmp
outsb
inc
and
iret
push
fadds
pop
xor
pop
adc
or
mov
fcmovnbe
stos
cmp
inc
xchg
shll
sbb
enter
jp
sub
push
mov
inc
dec
mov
mov
mov
xchg
test
push
sbb
imul
pusha
jno
cmp
lret
adc
stc
jbe
data16
ret
mov
sahf
xchg
and
mov
mov
sbb
aas
hlt
sbb
or
ret
aaa
pop
push
cmp
lahf
pusha
mov
imull
mov
sbb
or
xchg
lods
sub
pop
jge
lahf
or
into
stos
and
xchg
bound
inc
lret
movsl
mov
repz
shrb
das
clc
int
repnz
iret
jno
adc
dec
xor
push
cltd
insl
fwait
daa
add
stc
insl
dec
push
les
cltd
pusha
ja
mov
xlat
push
dec
cmpsl
xor
jo
cmp
das
fwait
aad
cmp
mul
in
push
inc
pop
dec
fs
mov
call
adc
shrl
dec
rcrb
jnp
ss
ljmp
jnp
popa
sbb
lock
or
inc
cwtl
movsl
pop
add
mov
mov
mov
push
xor
xor
cmp
cltd
lea
daa
scas
repnz
dec
mov
test
sub
loopne
cmp
adc
jne
mov
gs
sub
and
ja
adc
push
dec
push
fxam
lcall
scas
dec
and
mov
jo
arpl
mov
cmpsb
aam
in
int3
jmp
lods
loopne
mov
repz
fdivs
push
popf
adcl
outsb
jmp
into
push
jb
push
inc
daa
push
out
out
sbb
call
std
roll
imul
out
fcmovu
scas
mov
push
inc
dec
shlb
movb
loopne
jge
inc
and
xor
dec
scas
cwtl
xlat
lds
shlb
shlb
add
enter
dec
aad
jns
inc
adc
pop
jns
adc
nop
rclb
sbb
movsl
sbb
mov
pusha
xchg
aad
lea
jns
sub
mov
push
lock
sahf
mov
and
nop
and
int3
leave
mov
mov
add
js
aam
cs
mov
fldcw
cmp
in
adc
sbb
out
mov
push
pushf
test
lahf
je
mov
scas
fldl
jle
rcl
xchg
pop
cli
push
sub
ficoml
mov
lods
lds
mov
shll
cmp
mov
addr16
inc
jecxz
movsl
cmp
addb
jp
test
mov
test
sarl
xor
inc
xchg
dec
cwtl
lock
mov
and
jbe
outsl
scas
push
adc
xchg
rorl
icebp
jae
leave
jne
lret
mov
dec
lret
pop
pop
inc
stc
sub
adc
das
mov
xlat
imul
leave
icebp
add
hlt
pop
sub
clc
pop
rorb
ds
adc
daa
out
cld
jle
xchg
pop
loope
jp
mov
mov
dec
push
mov
fisubrs
rorb
push
or
idivl
ret
mov
lahf
int3
leavew
movsb
lods
cmpsl
in
sbb
loop
dec
psrlw
enter
jne
enter
mov
mov
movsl
push
xor
mov
mov
push
sarl
fs
or
pop
shlb
fadds
push
jbe
push
out
imul
mov
bound
pop
ljmp
les
cld
cmp
data16
or
or
sbb
cmpsb
ficoms
pop
mov
incb
or
fldenv
jecxz
jne
cmpsb
xchg
jo
aaa
pop
stos
sbb
adc
mov
and
mov
adc
test
inc
dec
sbb
push
daa
je
sbb
inc
dec
and
call
inc
mov
xchg
outsb
stc
push
clc
sbb
sub
lret
mov
cmp
jecxz
ss
add
bound
dec
enter
mov
inc
cltd
fmull
repnz
add
roll
insb
jbe
sbb
popf
es
cli
gs
fwait
jbe
jp
push
clc
cs
pushf
jb
inc
cmp
frstor
cmc
movl
mov
adc
stos
pop
aas
scas
xchg
pop
or
fstpl
sbb
loopne
hlt
mov
stc
scas
lret
or
add
sbb
enter
pusha
push
fidivs
sbb
insb
mov
enter
neg
fidivrs
mov
pop
add
divb
in
incl
sbb
fdivrl
push
or
dec
add
in
icebp
xchg
data16
mov
out
adcb
sbb
mov
loopne
push
movsb
addr16
call
lock
push
and
fsubrl
mov
mov
dec
scas
into
pop
fs
xchg
scas
imul
mov
push
fwait
pusha
clc
mov
adcl
pop
in
and
es
push
ja
push
cld
inc
mov
ds
iret
mov
lods
psubd
xor
push
xor
jecxz
lds
xchg
stos
xor
icebp
enter
adc
inc
adc
sbb
dec
pop
xchg
jl
cmp
inc
mov
hlt
pop
cmpsl
jmp
dec
pop
and
clc
xchg
jne
mov
push
dec
add
ss
fistl
clc
jae
dec
sub
jge
add
out
pop
outsb
or
pop
into
mov
imul
mov
stos
cld
mov
dec
pop
nop
nop
sbb
imul
jb
push
nop
dec
mov
stos
movsl
sbb
sbb
inc
enter
cmp
mov
testb
out
cmpsl
aaa
pop
aad
repnz
ss
sub
mov
mov
or
inc
xchg
movsl
dec
xchg
cmp
lahf
scas
stos
xor
pop
push
add
sub
jb
xor
sub
lds
arpl
add
aaa
xlat
push
pusha
sbb
fsubp
mov
jecxz
jge
sbb
pop
jmp
aaa
or
lods
in
scas
and
xor
pop
shrl
sub
insl
dec
int3
lahf
cmp
push
cmp
inc
jne
sub
mov
ljmp
and
xchg
add
mov
sub
jg
inc
hlt
push
jb
and
mov
outsl
jbe
dec
bound
in
sub
mov
xor
inc
icebp
rorb
cmp
test
and
push
int3
and
adc
push
jl
and
dec
pusha
mov
mov
xor
cld
addb
push
es
pop
push
neg
outsl
mov
jbe
nop
cmpsb
and
lcall
mov
shll
pop
pop
test
lock
mov
push
mov
sub
fbstp
les
mov
push
add
adc
and
call
fnstcw
outsl
loop
daa
repnz
pop
push
cld
in
out
xor
xor
jg
daa
xchg
jns
data16
inc
xor
jp
jg
jbe
sub
adc
adc
cli
push
call
cmpsb
stos
mov
test
jg
sbb
dec
add
aam
cmp
jecxz
add
and
fbstp
outsl
lret
mov
inc
pop
stc
adc
dec
mov
fimuls
pop
fisttpl
mov
jge
pushf
mov
aaa
in
mov
out
movsl
and
enter
js
push
adc
shll
fwait
leave
rolb
cmpxchg
push
jp
cmc
iret
jno
mov
jo
and
xchg
adc
shrb
dec
insl
out
aaa
jecxz
xchg
sub
pop
iret
mov
ljmp
insl
jae
movb
rorb
or
ljmp
sub
fildl
in
lods
movsl
sub
push
xchg
shrl
mov
aas
push
shrl
ret
mov
scas
cli
int
mov
pop
add
cmp
ret
dec
aam
dec
pop
loopne
lahf
mov
fcompl
mov
mov
or
mov
inc
repnz
nop
pop
fwait
push
sub
dec
int
sub
daa
sti
cs
cld
jl
sbb
shr
out
mov
lret
push
je
ja
sbb
jle
cld
adc
sahf
pop
jmp
push
push
jnp
inc
jp
push
ret
push
loope
jno
and
pop
inc
sbbb
scas
test
mov
add
sbb
inc
cmp
dec
mov
jp,pt
mul
jb
ljmp
sahf
adc
pop
cltd
mov
xor
shrb
int3
in
or
xor
andb
mov
mov
xor
clc
call
cmc
insb
les
mov
sbb
pop
mov
jle
pop
xchg
mov
dec
jns
pushf
dec
adc
cmpsb
lods
add
inc
cmp
fsub
pushf
mov
into
xchg
sub
aam
mov
jnp
xor
ds
lds
out
mov
jnp
or
inc
mov
lea
push
sub
sub
pop
movsb
nop
pop
jae
clc
test
dec
icebp
mov
sub
ret
dec
lret
jle
sbb
or
pusha
adc
jnp
and
inc
pop
into
notrack
std
add
in
imul
adc
arpl
in
pop
jl
cmpsb
dec
out
adc
add
repnz
int3
negl
xchg
mov
imul
and
xchg
add
cmpsb
test
add
lcall
jnp
inc
push
imul
xchg
mov
in
in
int3
rcrl
movsl
fsubr
cwtl
xchg
add
mov
inc
clc
pop
ffreep
sub
jg
cli
sbb
xor
jecxz
xor
cmp
adc
and
lcall
shrb
loope
push
jnp
scas
gs
pop
pop
lock
add
mov
adc
or
es
mov
and
cmp
movsl
fwait
xchg
fwait
mov
mov
pop
xor
xchg
fsubrs
addr16
dec
js
fmulp
cmp
xchg
cld
sti
and
jnp
xor
and
cli
cwtl
mov
mov
push
or
adc
adc
popa
aam
cmp
movsb
das
negb
pop
jl
cwtl
pop
dec
or
push
lods
imull
outsl
mov
cwtl
push
dec
dec
stc
mov
in
sub
push
xor
test
or
rorl
loopne
call
lcall
xor
jbe
cmp
jae
lret
push
ljmp
xchg
mov
xor
inc
lock
add
adc
cli
mov
stos
mov
sbb
sbb
hlt
xchg
rolb
sbb
jno
inc
test
cld
outsb
lret
adc
mov
dec
pop
stos
ss
fmuls
mov
imul
xor
mov
mov
sbbl
mov
xor
mov
mov
repnz
mov
jns
dec
mov
gs
pinsrw
dec
xor
jg
add
mov
inc
loopne
push
lea
xchg
add
mov
and
mov
aaa
xlat
xor
iret
es
loop
in
shll
loop
xchg
scas
outsb
les
mov
gs
in
out
sbb
xor
cmp
xor
xor
jecxz
mov
ds
inc
pminub
insl
and
aas
sarb
sub
sar
pop
mov
jp
mov
dec
mov
xor
ljmp
test
popf
inc
popf
lds
mov
xor
cli
pop
inc
inc
je
cmc
test
cmp
clc
cmp
out
add
cmp
cs
cs
movsb
mov
pop
cwtl
stos
dec
popa
lret
fs
cs
and
pop
mov
shl
dec
lods
add
outsl
aas
jecxz
push
popa
add
insl
out
loop
push
mov
gs
push
test
iret
and
sub
in
pop
lcall
inc
loop
sbbb
xchg
aas
jno
add
jp
rcrl
sub
jmp
add
jmp
cmp
adc
pop
aad
fwait
js
aas
je
or
xor
fs
and
push
test
pusha
xchg
subb
xchg
scas
arpl
ds
jmp
pop
cltd
push
leave
mov
jns
inc
adc
jmp
insb
xchg
push
lods
mov
leave
sub
push
stos
subb
rcrl
mov
fldenv
mov
out
adc
add
leave
frndint
sbb
xlat
addr16
jecxz
pop
shrl
xchg
mov
in
sahf
divl
cli
xchg
ret
add
xchg
lods
sbb
fldl
mov
push
ja
sub
xchg
dec
ss
pop
rorl
iret
jb
outsb
cld
fidivs
cld
add
xor
es
rcrb
shlb
rcrl
xchg
xor
xchg
push
push
push
jns
js
movsl
mov
int
or
sti
or
imul
add
add
adc
mov
enter
lods
lods
cmpsl
or
xor
enter
shrl
inc
jmp
inc
mov
sahf
ds
xor
add
orl
mov
loope
fdivrs
rol
pop
mov
leave
mov
sbb
imul
and
out
xor
push
sahf
mov
push
roll
pop
and
xchg
cmp
mov
mov
xor
mov
rcll
xchg
test
xor
sbb
adc
or
es
ss
test
iret
pop
or
mov
push
popa
pop
shrb
shll
adc
leave
ss
dec
and
dec
int3
movsb
xchg
jle
bound
cs
mov
and
jecxz
mov
lock
stc
inc
mov
in
subb
mov
lahf
mov
repz
mov
pusha
outsl
push
mov
sahf
sbb
roll
add
and
addr16
popf
sub
pop
lret
adc
call
ja
fcoms
and
ja
pop
and
int
add
ret
push
rcl
ret
or
push
adc
aas
sub
pop
push
or
xchg
lock
push
lcall
stc
xadd
sub
push
sub
push
jg
arpl
loope
lods
out
cmp
mov
sub
fadd
hlt
sbb
mov
adc
iret
movsl
out
cltd
or
sbb
inc
fnsave
faddp
sub
or
inc
out
dec
ficoms
push
fwait
inc
pop
rorb
inc
pop
lea
and
loope
test
std
jo
dec
rcll
in
mov
dec
mov
nop
inc
xor
shll
call
addr16
or
pusha
js
xchg
out
mov
js
dec
pushf
iret
ret
fucomi
sbb
xchg
inc
pop
lods
and
adc
mov
stos
pop
lret
sbb
adc
stos
inc
sub
push
jecxz
pusha
jnp
cld
cmpsl
daa
push
push
adc
push
push
pop
lds
stc
mov
outsl
push
mov
or
stos
jbe
mov
and
icebp
mov
lods
hlt
dec
aaa
ja
insb
lahf
jle
and
dec
mov
test
test
push
xchg
xor
push
jmp
leave
test
idivb
push
imul
pop
sub
lar
inc
xor
inc
nop
add
cmpsb
jbe
mov
out
stc
push
jp
divb
mov
push
mov
mov
xlat
adc
adc
push
push
mov
mov
fcmove
inc
inc
mov
shll
je
pop
xchg
aam
dec
loope
xor
je
in
aam
outsl
ljmp
pusha
js
daa
mov
iretw
jb
pop
test
test
mov
xchg
loop
shr
lcall
mov
fstps
outsb
cltd
mov
jp
push
imul
dec
lods
or
scas
xchg
jp
lds
dec
ljmp
mov
dec
scas
and
fstl
pop
fsts
xlat
mov
insl
loop
dec
mov
out
popl
push
fwait
iret
mov
scas
add
dec
leave
push
xor
sub
pop
jle
repnz
xor
dec
imul
xlat
pusha
pop
stos
fucomp
pop
nop
shll
xor
jg
sbb
or
jne
xchg
dec
pop
jmp
aaa
clc
mov
fdivs
ljmp
mov
mov
cmp
sub
std
incl
sahf
test
out
loopne
mov
stos
or
cmp
push
xchg
test
cmpsb
rcr
jp
data16
pushf
pop
mov
pop
jmp
jbe
inc
sub
jl
inc
push
roll
movsb
jecxz
dec
lret
xchg
adc
stc
shrb
push
xor
popa
push
daa
out
cmp
lret
aad
jbe
lret
xor
scas
cmp
mov
jle
pop
out
das
dec
fwait
test
pusha
pop
xlat
cmp
jbe
cmc
mov
mov
cmc
enter
inc
and
mov
and
aas
push
rorl
scas
push
imul
mov
sbb
dec
xchg
fwait
imul
les
mov
stos
divb
dec
fs
mov
test
mov
outsl
pop
and
fildll
jns
aas
and
push
inc
std
insl
jno
ljmp
cmp
cmpsl
or
sbb
and
push
cmp
pop
mov
pushf
inc
test
and
jp
add
cmp
andb
ja
pusha
fimull
out
pushf
scas
pop
xchg
jne
pusha
mov
cmp
xor
in
aad
sbb
fs
outsb
pop
insl
fidivl
ljmp
push
inc
inc
cmp
stc
nop
mov
call
jg
outsl
shrb
clc
pop
sbb
mov
jg
adc
inc
out
adc
test
ret
or
push
or
adc
mov
dec
adc
test
into
fdivrl
ror
dec
sbb
movsl
jno
sbb
fldl
jae
rorl
or
fucomip
adc
xlat
pop
jp
mov
adc
xchg
ds
inc
xorl
into
pop
cmp
pop
das
pop
fnstenv
cmp
xlat
dec
scas
je
or
cmp
dec
pop
outsl
fnstenv
or
jne
lods
cs
push
inc
test
dec
fistl
mov
sub
cmpsb
sub
pop
cmc
xor
cmc
push
jp
cwtl
orl
daa
sub
test
adc
cmp
jbe
adcl
cmp
pop
push
fldt
popa
leave
insl
fsubrs
xor
cmp
shrl
into
mov
call
sahf
and
or
pop
push
add
ret
cmpsb
lahf
or
mov
shll
xchg
add
mov
pop
pop
and
push
pop
xchg
enter
cli
dec
shll
ret
push
add
cmp
insl
or
mov
cmp
mov
subl
dec
xor
pusha
inc
xchg
mov
aaa
fisttpl
pop
adc
xchg
adc
lcall
xchg
daa
xor
xchg
shlb
inc
pushf
dec
pop
out
xor
mov
mov
push
mov
or
cs
adc
mov
inc
push
sti
mov
sbbb
daa
inc
and
shlb
iret
insb
inc
shr
inc
xchg
cltd
lret
outsb
ss
xor
pop
iret
lock
cld
sbb
sbb
cltd
jno
loopne
pusha
xor
add
scas
and
bound
sub
cmp
push
int3
dec
fisubl
int3
jmp
std
mov
pop
and
jnp
frstor
cmp
dec
lcall
add
and
push
xchg
push
enter
push
js
rcll
enter
dec
insb
dec
sub
outsb
test
popa
pushf
inc
sub
sahf
iret
arpl
fucomip
jge
cmpb
gs
or
in
mov
or
into
insl
pop
aam
dec
sti
arpl
and
decl
or
add
nop
and
xor
cmp
aam
pop
ljmp
jecxz
dec
pop
cwtl
lock
stos
popf
xchg
lea
inc
xor
adc
loop
and
push
popa
adc
xchg
push
lds
or
in
xchg
mov
leavew
lds
xlat
push
lds
push
adc
outsl
test
and
mov
daa
jno
pop
xchg
push
repz
mov
push
add
rcll
les
pop
pop
mov
mov
mov
jb
adc
adc
scas
ret
popa
cld
sbb
or
mov
sbb
inc
jmp
push
fwait
pusha
test
dec
sub
sbb
arpl
inc
cmp
push
adc
push
add
in
xor
lock
imul
or
addr16
faddl
scas
imul
loope
aas
jne
xor
xor
imul
sbb
adc
out
rol
outsb
adc
xor
popf
adc
dec
mov
fcmovb
push
movsb
sahf
push
das
add
xchg
sbb
mov
xchg
xor
aam
push
push
mov
test
cmp
cmp
pop
jns
insb
es
je
int
iret
mov
dec
loopne
mov
inc
sbb
mov
add
mov
pop
test
sub
push
dec
lret
mov
cs
sub
and
or
add
fistps
inc
pusha
jl
hlt
test
sub
adc
and
mov
fbstp
popa
cmp
lds
jl
cs
imul
dec
sti
cld
push
pop
jne
adc
sbb
ss
mov
mov
roll
xchg
imul
cmc
cmp
cmc
ja
mov
mov
orl
daa
xchg
mov
jl
std
pop
mov
sub
daa
fmull
stos
dec
pop
scas
js
xchg
sbb
pop
cmp
aad
add
jmp
mov
call
fwait
test
test
push
bound
cli
push
mov
mov
sbb
ret
or
or
sbb
adc
in
push
sbb
xchg
cmp
xlat
arpl
je
push
in
jle
in
imul
push
loope
push
cmc
or
and
lock
adc
or
hlt
inc
xlat
fsubr
sbb
and
mov
pop
lret
mov
inc
or
pop
std
leave
loopne
out
loope
or
into
push
outsl
or
xchg
scas
xor
movsb
add
xlat
cwtl
idiv
mov
imul
out
jb
mov
pop
inc
ss
push
cmp
hlt
addb
mov
dec
mov
dec
mov
and
sub
fdivl
mov
push
xor
rolb
and
stos
mov
lock
movsb
and
andps
dec
xchg
fldenv
je
cmpsb
adc
xchg
stos
insb
jle
xchg
fidivrs
loop
push
mov
jbe
mov
rcr
adc
adcb
cmpsb
lock
sub
cmc
mov
mov
xor
add
rcrb
ret
mov
std
inc
movsb
rclb
nop
ret
add
sahf
je
movsl
inc
inc
mov
sbb
je
push
in
mov
lods
ss
fs
cld
adc
xor
mov
ss
popf
sar
hlt
clc
dec
xchg
inc
fwait
cmp
sahf
sbb
ja
dec
mov
jae,pn
ret
mov
lods
shr
sbb
je
cmp
movsl
jmp
repz
int3
les
pop
into
lret
sti
xchg
out
shll
dec
xor
je
pop
in
adc
adc
jmp
jmp
pop
cmc
cmp
push
push
daa
xchg
adc
fs
repz
insl
loopne
aad
or
xchg
cmpsb
movsb
jns
insl
add
loope
cmc
pop
add
fwait
out
xor
sub
sti
hlt
push
test
and
dec
ret
cmp
jl
dec
lcall
ret
mov
andb
dec
xchg
loope
ja
cmc
mov
dec
xlat
xchg
roll
cmp
jno
pop
ja
out
cmp
in
push
pop
xor
loope
and
sub
push
inc
ss
fdivrp
int3
xchg
cmp
pop
add
rolb
lret
lock
movb
jb
out
lds
int3
cwtl
test
fdivl
into
leave
jo
in
aaa
subb
adc
stc
loope
loopne
cmpb
add
xchg
sub
sbb
push
push
es
inc
mov
mov
scas
and
mov
sub
pop
fistpll
mov
push
lahf
dec
add
xchg
push
and
imul
pop
aad
xchg
aad
jg
jb
dec
fadds
cs
pop
int3
lretw
mov
cmp
xchg
stos
sti
jg
inc
cmp
sbb
mov
fidivrs
stc
xor
test
popf
fcoml
dec
pop
sbb
sbb
std
gs
test
pop
pusha
sbb
cli
sbb
push
sub
sti
xchg
in
adc
roll
imulb
scas
jmp
lahf
ja
shrl
into
es
jo
xchg
das
inc
sbb
daa
jecxz
testb
dec
subb
mov
mov
insb
lret
push
imulb
lcall
insl
sub
pop
pop
sbbl
iret
das
arpl
lahf
imul
cmp
xor
mov
mov
dec
adcl
push
data16
push
push
in
adc
inc
popa
and
dec
jae
sbb
sbb
les
int3
xor
fstpl
adc
push
cmp
pop
lods
fisubrs
fs
aas
push
je
jns
pop
pop
and
and
stos
loopne
cmp
andl
jbe
int
mov
into
fdivrl
sbb
dec
adc
shlb
js
jb
in
mov
xchg
aaa
cmpsl
adc
push
cmpsl
rolb
xor
iret
jo
inc
mov
sbb
cmp
lods
je
lret
and
add
outsb
in
test
rcrl
xchg
pop
into
mov
adcl
fcompl
cmp
add
mov
inc
outsb
iret
lea
inc
and
shl
mov
faddl
mov
jecxz
ret
popf
das
or
adc
sbb
lcall
sub
xor
and
add
push
jmp
ljmp
add
insl
addr16
inc
cmc
mov
shlb
mov
jecxz
loope
add
dec
es
jb
repz
call
movsl
fisttps
dec
and
test
inc
jmp
or
xchg
sti
int
lock
outsl
mov
add
std
cmp
std
push
rclb
fwait
add
roll
popl
and
push
rorl
inc
sub
mov
insl
mov
mov
aad
push
and
jns
stos
push
data16
hlt
mov
lock
cmc
shll
daa
insb
and
xor
push
fstl
jle
xchg
aaa
dec
ss
cmp
add
mov
jb
out
fsubl
scas
xchg
adc
ss
sub
fdivrs
push
lahf
add
fnstcw
stos
pushf
pop
pop
fstl
inc
sbb
and
mull
mov
pop
add
iret
adc
daa
push
push
aad
inc
int3
fstpt
lret
in
out
inc
or
sti
add
push
cwtl
or
xchg
hlt
daa
mov
mov
loopne
push
inc
cmpsl
inc
decl
pop
fidivl
in
mov
hlt
cmc
xor
repz
imul
add
je
insb
pop
adc
adc
push
dec
mull
addr16
pop
jp
xlat
mov
jb
movsl
mov
jbe
idivl
or
sub
pop
inc
insl
inc
or
fs
insb
fistpl
clc
call
sub
mov
lds
mov
pop
pop
inc
scas
jge
loopne
mov
pop
insl
in
pop
pop
jbe
mov
int
cmpsb
jnp
insl
bound
dec
sub
cld
xor
stos
into
andb
ffreep
mov
push
ja
mov
ja
jae
xor
lods
pop
sbb
ds
sub
and
dec
insb
ja
adc
or
shrb
cmpsl
in
xchg
daa
or
mov
mov
lds
ss
fldenv
mov
ret
cmpsl
dec
mov
dec
imul
sub
lret
out
movsb
clc
rolb
loop
ss
aas
loope
jmp
repnz
mov
gs
cmp
sbb
jmp
cmp
shlb
push
mov
sub
je
pop
cld
test
sub
dec
mov
out
inc
xchg
add
icebp
in
notb
dec
shlb
into
aam
movsl
ror
daa
mov
pusha
push
es
xlat
outsb
dec
push
add
out
sub
into
xor
outsb
in
xchg
xchg
xor
mov
clc
cs
test
lret
jge
lds
dec
dec
call
mov
fs
pusha
cli
xchg
mov
fldcw
xchg
data16
clc
mov
ret
mov
adc
xor
scas
aas
out
adc
adc
jmp
iret
push
cltd
pop
test
cmp
inc
mov
imul
and
mov
jg
loopne
outsl
fisttpll
dec
mov
aad
xor
fwait
mov
pop
sbb
push
in
call
dec
shr
test
xor
lds
push
jne
rep
push
mov
mov
lock
cmpb
and
jbe
leave
cmp
mov
sti
jne
mov
adc
pop
insl
jae
sbb
rcl
enter
loop
movsb
pop
clc
jo
leave
popf
mov
pop
repnz
negl
inc
lods
push
mulb
clc
sbb
push
sub
sub
and
shll
call
subb
scas
call
scas
push
cmp
in
int3
insb
or
iret
cmp
stc
cwtl
pop
add
adc
push
sbb
xlat
les
jns
dec
pop
cmovno
jae
cmpsb
inc
fwait
push
stos
jae
or
loop
and
outsl
add
or
lcall
hlt
lea
add
es
clc
out
cwtl
shrl
repz
jge
mov
stos
movsl
stos
nop
stc
mov
push
and
fstp
jp
pop
fs
fwait
sahf
mov
push
jno
movsl
pop
adc
stc
subb
jae
dec
ret
mul
sbb
xor
icebp
inc
jno
jmp
xchg
xor
pop
in
inc
in
sub
mov
rolb
mov
stos
in
sbb
push
dec
mov
jp
jp
call
scas
mov
inc
push
mov
push
lods
dec
push
les
icebp
nop
mov
push
mov
add
test
movsl
push
cmpsb
insb
sub
stos
mov
push
sub
rclb
mov
sbb
add
cmpsb
sub
inc
jnp
or
xor
out
in
or
jmp
and
call
cmp
xor
mov
ss
jp
aas
arpl
jp
movsb
sbb
add
and
and
int
pop
rol
and
into
imul
nop
jne
ljmp
push
jg
jb
dec
ja
add
lea
dec
fwait
mov
jno
and
shr
fimuls
das
inc
addl
pusha
mov
sarl
push
aaa
scas
cmp
ss
cld
roll
out
inc
aas
xor
sbb
sbb
arpl
jmp
icebp
stos
repnz
movb
shl
inc
rcrb
mov
xchg
rolb
jg
aas
gs
out
sub
pop
xor
adc
je
test
adc
push
inc
ja
xchg
push
icebp
aaa
xor
shrl
aas
test
pushf
pop
call
mov
out
jmp
enter
pop
icebp
cmp
movsb
repz
cmp
and
jmp
add
dec
enter
shll
inc
addb
add
loopne
es
daa
rcrb
out
dec
int3
and
sub
cwtl
mov
pusha
cwtl
les
lahf
sbb
push
das
lds
xchg
into
enter
pop
mov
sub
les
iret
sbb
jmp
maxps
mov
add
wbinvd
xlat
out
sar
adc
arpl
fmull
cmp
sarl
push
ja
dec
int
push
test
outsl
clc
out
inc
dec
cli
mov
push
sub
adc
scas
ja
xor
or
and
aaa
and
sarl
xorl
and
cli
lea
loopne
mov
cmp
fcmovne
jnp
jno
mov
add
cmp
cmp
dec
mov
mov
scas
cld
xor
mov
sarl
popf
addb
cmpsl
movsl
jae
popa
out
xor
cmp
notl
and
and
pop
ret
jnp
aas
and
leave
mov
movsb
lock
sub
inc
movsl
mov
and
sti
mov
cmp
jmp
jbe
mov
mov
sub
xchg
push
jg
fsubs
sbb
pop
or
cmp
pop
std
xchg
xchg
adc
cmc
jno
cmpl
ret
adc
jne
icebp
pushf
xor
data16
and
dec
xor
cmp
mov
mov
mov
or
loope
stos
cmp
decb
sbb
popf
xor
mov
xorl
sub
scas
push
imul
bswap
sbb
adc
ja
jmp
sbbb
es
xorl
xor
or
push
push
xchg
jae
and
call
lods
test
or
push
lods
insl
lea
out
inc
dec
daa
mov
mov
cmp
sahf
movsb
fisubrs
jne
nop
into
and
inc
xor
push
je
sti
sbb
push
xchg
inc
push
sub
adc
cmpsl
enter
scas
and
stos
jle
popf
int
add
in
pop
adc
test
sub
sub
push
and
xchg
out
loop
jns
loop
cmp
inc
sbb
daa
hlt
dec
jl
outsl
pop
mov
loop
je
mov
push
dec
call
lahf
lcall
scas
jge
push
jge
pop
ljmp
jge
fldt
jg
add
sbb
sub
stos
mov
mov
mov
cmp
addr16
imul
stos
scas
push
js
adc
pop
fcomps
jns
mov
push
cld
push
icebp
pop
aas
hlt
inc
daa
imul
mov
hlt
lret
incl
test
es
xor
xor
fisubrs
scas
push
sti
ss
mov
cmp
ljmp
in
dec
add
adc
loope
lock
push
jae
sub
ss
and
fs
nop
imul
dec
loope
inc
in
push
lods
out
adc
xchg
fimuls
loopne
dec
rclb
sbb
popf
mov
into
cmp
in
lahf
incl
mov
dec
add
jle
cs
movsb
mov
mov
cmc
add
inc
out
imul
pop
stc
loope,pt
out
sbb
xor
lahf
add
das
pop
cli
xchg
in
icebp
jg
cmpsl
into
xchg
fs
xchg
in
jae
sbb
imul
psraw
mov
mov
rcrb
movsb
loopne
popa
movsl
mov
mov
nop
pop
cmpsb
xchg
scas
push
lds
repz
sar
mov
dec
sub
cmp
outsl
fs
aad
xlat
inc
mov
cmpsl
in
pop
push
sar
insb
clc
jb
push
clc
sbb
inc
cld
push
insl
fiadds
xchg
jge
testb
pop
loopne
mov
stos
xchg
cmp
stos
stos
jbe
movsb
test
inc
mov
and
imul
cmp
inc
mov
popf
xchg
add
jae
filds
lret
aam
lahf
lods
inc
jp
jle
enter
xchg
call
cmp
and
cmp
cmp
sub
jo
sbbb
into
xor
test
add
push
subb
xor
std
pop
in
add
push
inc
inc
nop
call
pop
push
les
mov
mov
xchg
cmp
push
xchg
cmp
loopne
aam
dec
pop
lods
imul
das
xchg
mov
mov
pop
fiadds
inc
pop
dec
xor
or
xchg
add
pop
pop
scas
pushf
lock
stos
pop
dec
sub
out
mov
or
mov
mov
roll
cmp
push
es
xchg
in
xor
data16
inc
adc
clc
inc
test
incl
xchg
mov
lods
repnz
sub
adc
jg
cltd
sbb
lret
jbe
call
xor
mov
icebp
bound
out
inc
dec
shll
out
rcr
push
into
lock
dec
leave
dec
xor
bound
ret
imul
fwait
pop
xor
imul
add
fildll
push
adc
jbe
outsl
add
fstps
lods
arpl
adc
gs
mov
push
mov
int
paddusw
fisttpl
cmp
cwtl
add
lcall
fisubrs
dec
inc
call
mov
push
int3
pop
notb
popa
hlt
rcll
dec
andl
push
imul
pushf
scas
push
xchg
hlt
loop
popa
jno
xchg
jg
xchg
out
cld
daa
scas
push
clc
or
fldl
icebp
scas
or
loop
scas
inc
xchg
in
lods
xchg
and
jns
mov
imul
mov
es
add
ret
xchg
jno
lret
xchg
mov
add
or
and
inc
cltd
pop
add
lods
cmp
dec
mov
jge
bound
lcall
and
aaa
mov
pop
dec
dec
mov
xchg
and
mov
and
mov
push
cltd
in
addl
out
jp
and
xchg
adc
imul
and
cmp
decb
lret
loope
stos
cld
cmpsb
push
push
in
xchg
inc
add
and
aaa
jb
push
mov
xor
loopne
mov
or
or
ja
out
mov
or
cmpsl
add
int
pop
orl
dec
ljmp
stos
fisubl
outsb
imul
and
or
inc
scas
jge
lock
xchg
sbb
mov
mov
fwait
mov
mov
pop
or
lods
jmp
jmp
pop
mov
mov
fidivrs
xor
rcl
jmp
add
cld
or
flds
sbb
lcall
test
dec
das
pop
dec
cmpsl
cli
jge
cmp
xor
mov
shll
loope
cli
pop
enter
mov
enter
push
push
xchg
fs
test
loope
sub
fs
scas
pop
jae
enter
push
fstl
dec
mov
out
add
sarl
push
mov
mov
jmp
sub
enter
xor
or
or
mov
mov
add
insb
jb
arpl
jns
mov
sbbl
sub
sub
in
outsb
stc
outsl
std
dec
shll
push
add
cmp
xchg
sub
sbb
clc
mov
cmp
xchg
filds
jle
test
das
xlat
push
or
ljmp
das
jno
add
div
sub
sahf
sti
add
xlat
dec
mov
gs
mov
test
pop
dec
test
sub
pushf
lahf
push
daa
sti
jp
pop
and
inc
lret
ss
sub
cs
in
sbb
scas
jecxz
test
push
popa
int
out
movsl
xor
push
sbb
aaa
and
pop
mov
mov
mov
pop
js
xchg
cmp
xchg
lahf
sbbb
pop
add
jbe
mov
outsb
and
sub
pop
pop
jo
add
in
int3
ja
in
pop
enter
stos
sub
fbld
sar
movsl
mov
jns
aad
jle
iret
dec
and
inc
inc
in
test
scas
and
loop
inc
dec
cs
aaa
xor
flds
sbbl
add
lods
lods
jl
cmp
cmp
mov
lods
xor
and
pop
outsb
mov
pop
int3
shrb
add
ds
sti
and
inc
jmp
cmp
cmp
xchg
mov
faddp
xchg
mov
sbb
clc
mov
lods
aaa
adc
xor
stc
aam
rorb
sbb
xor
sbb
cmc
pop
aas
rclb
jb
mov
arpl
fdivl
or
out
xchg
imul
or
inc
push
add
mov
and
cmp
movsl
fmull
lods
pop
ds
mov
or
popf
mov
jns
movsl
cmp
insl
jae
or
pop
rcrb
mov
popf
inc
xchg
imul
aam
cld
gs
xlat
call
pushf
lds
jae
and
imul
ss
or
pop
aad
mov
popa
aam
arpl
mov
lods
dec
push
jmp
sub
pop
mov
cmp
adc
mov
cmc
jbe
jmp
xchg
lret
sbb
lcall
sbb
pop
xchg
jle
xchg
mov
push
xchg
jecxz
add
xchg
and
dec
xchg
xchg
sub
cmp
sub
rcrb
and
sbb
push
shl
out
leave
in
jmp
lods
cmp
adc
out
fucomp
sti
mov
push
idivb
daa
test
sar
imul
insl
lock
pop
shlb
and
out
inc
cmp
iret
stc
jo
popw
fcomp
fdivp
jne
push
movb
repz
cld
test
cmp
popf
or
mov
jmp
and
ss
xchg
movsl
add
sbb
fdivrl
jbe
xor
aam
imul
add
push
lock
and
mov
stos
mov
xor
pop
pop
or
shrb
divl
dec
sub
rcrl
jg
lods
mov
sbb
jae
mov
test
mov
dec
insb
nop
cmp
ja
adc
mov
pop
dec
cmp
mov
movsl
pop
add
jnp
adc
jmp
sub
inc
jnp
xchg
jmp
cmp
imull
leave
into
inc
mov
shlb
in
mov
adc
pop
nop
cmp
cmp
jecxz
ret
cmpsb
xor
jae
xchg
in
daa
jb
cltd
xor
insb
int
dec
idivb
jg
adc
test
push
mov
xchg
push
xchg
leave
insl
xor
adc
dec
push
pop
mov
push
dec
outsb
cmp
sbb
jne
xchg
rcll
lods
push
push
xor
mov
cmp
outsb
cmp
je
jp
enter
dec
inc
xor
push
sub
or
pop
xchg
xor
fldl
and
dec
mov
dec
subl
push
shrl
jo
inc
xchg
cmpsb
test
sbb
movsl
mov
mov
xlat
add
sub
mov
push
imul
lea
inc
fimuls
push
cmpsb
and
sub
rcl
sub
cltd
add
add
add
dec
gs
lahf
int3
cmp
arpl
lea
mov
iret
mov
addr16
std
sub
jg
insb
sahf
nop
hlt
and
and
outsb
lods
add
sbb
bndstx
sub
xchg
into
mov
imul
shrl
mov
xchg
mull
add
inc
xor
ja
and
int
mov
cltd
ror
pushf
dec
push
mov
cmp
push
mov
mov
stc
int3
cs
mov
jbe
cmpl
enter
and
mov
fwait
add
sub
jb
dec
je
xchg
into
cld
push
cmpsl
dec
inc
push
cmc
loop
aam
xor
sahf
call
adc
and
stos
inc
aam
push
clc
jo
test
xchg
jp
adc
daa
mov
aas
das
testl
add
sub
outsb
add
sti
fidivrl
mov
mov
mov
push
push
or
mov
dec
jmp
movsb
dec
int
or
fisubrs
lcall
and
and
cmpsl
shlb
xchg
push
mov
pop
outsl
dec
dec
or
cmpsl
jnp
mov
push
ret
js
mov
loop
cmp
and
mov
psrad
dec
push
push
insl
xchg
xchg
mov
dec
fmuls
js
into
aad
cli
mov
out
mov
dec
dec
dec
sbb
movsl
xor
rol
jo
loope
roll
dec
loopne
or
mov
adc
jb
js
mov
lods
cmpsl
test
dec
call
pop
jae
shll
and
insl
test
ja
es
xchg
push
inc
loopne
frstor
pop
cltd
and
adcl
lret
mov
inc
data16
pop
lods
mov
jne
sbb
jnp
pop
dec
jbe
into
jne
cs
inc
push
stos
xchg
jmp
push
ror
dec
lahf
jg
stc
cmp
rcll
je
imul
mov
jnp
ficoml
mov
jecxz
and
ficomps
push
xor
hlt
fs
stc
cmc
rcl
jb
mov
adc
mov
sti
xor
popl
adcb
or
les
jmp
lods
icebp
dec
sarb
sbb
and
ret
leave
pop
cwtl
and
pushf
jge
xchg
mov
adcb
lcall
sbb
push
push
test
jge
pushf
enter
js
negl
push
fs
xor
dec
or
mov
mov
sub
adcb
push
pop
and
insb
rorb
push
cltd
cmp
jae
clc
outsb
sti
xlat
pop
and
and
psubb
push
pop
loope
sbb
push
call
xor
pusha
xchg
cmpsl
xchg
pop
out
pop
movsb
inc
mov
out
jae
inc
rcr
loop
or
xlat
fwait
sub
adc
out
jp
sub
jmp
mov
mov
mov
ljmp
popf
mov
mov
cwtl
mov
and
mov
or
jle
mov
xchg
sti
or
fcompl
ja
lahf
jge
and
sbb
js
jbe
loopne
cld
sub
add
jmp
adc
xor
add
jl
lret
aad
shll
cli
mov
inc
push
inc
dec
mov
jnp
cmpsl
lret
sub
rol
push
sahf
fnstcw
mov
sub
cltd
jle
jl
shrl
dec
pushf
mov
sub
dec
fdivp
mov
rol
sti
mov
outsb
add
sahf
xor
push
adc
cmpl
sub
iret
jg
fldpi
adc
inc
shlb
jb
sar
jns
push
xchg
mov
mov
jle
pop
mov
cwtl
leave
mov
ja
mov
push
and
adc
das
decb
xor
inc
mov
dec
xchg
xchg
divb
push
add
fwait
mov
pop
pop
lods
call
movsb
popl
pop
cmp
inc
adc
daa
pushl
mov
cmp
xor
jo
sbb
inc
add
bound
lock
push
movsb
in
ljmp
aam
sahf
in
aam
inc
jecxz
aas
or
mov
lcall
sahf
subl
xor
int
int3
adc
inc
cmc
mov
xchg
cmp
popf
jnp
aam
fsubp
jp
dec
std
mov
xor
xor
call
adc
sub
sub
test
test
aad
inc
mov
mov
push
mov
icebp
sti
xchg
or
push
scas
es
mov
or
xchg
xchg
lods
lock
in
and
mov
inc
fnstsw
adc
call
and
pusha
sbb
lock
add
out
mov
sti
ss
es
fwait
jg
mov
jne
fidivs
mov
add
sub
push
daa
push
add
lea
adc
pop
loope
inc
mov
pop
push
jo
das
dec
cmp
xchg
cs
and
loop
int3
ret
outsb
std
pop
jg
push
jp
stc
xchg
sub
mov
rolb
xor
xchg
lea
sub
out
inc
mov
out
mov
sbb
ret
shlb
movsb
pop
out
cmp
cmc
pop
inc
lock
sub
pop
dec
xchg
pand
lods
pop
pop
shrl
scas
repnz
xchg
xlat
jmp
nop
andb
or
mov
jo
inc
push
sbb
iret
xchg
arpl
add
test
xor
xchg
in
inc
adc
sbb
test
dec
test
xchg
les
mov
in
hlt
enter
stos
arpl
jecxz
ljmp
push
mov
dec
pop
jae
js
xchg
pushf
mov
cmc
imul
add
adc
in
fimull
mov
mov
dec
inc
lret
sbb
faddp
cld
mov
jns
push
sub
addb
push
xchg
stos
mov
xor
jecxz
test
mov
mov
fcomps
les
cmp
sarb
inc
sahf
xor
sub
shrb
cmp
xchg
rcrl
xchg
xor
sub
pop
xorl
incl
dec
fbld
xor
jno
push
call
sbbb
ds
call
stc
mov
cmp
pop
jbe
fnsave
mov
movsl
jg
aam
push
sbb
push
stc
inc
adc
sub
jns
mov
dec
jl
xchg
pusha
xchg
ret
push
cmp
add
adc
cwtl
inc
mov
fisubrl
xchg
out
dec
add
adc
lret
cwtl
imul
push
ss
addr16
cs
mov
xchg
scas
out
pop
ja
jle
stc
xchg
mov
and
cs
cltd
cld
cwtl
test
xor
fnstcw
dec
mov
xchg
mov
lcall
out
xchg
add
mov
xchg
fucomi
push
insl
repz
inc
jecxz
aam
test
inc
and
nop
insw
stc
std
adc
push
fldcw
push
clc
fndisi(8087
lods
push
xor
jns
xchg
and
popf
addl
and
shl
testb
mov
add
jae
pop
cmp
ss
sahf
mov
lods
out
push
and
mov
fidivl
lds
or
mov
loop
push
lods
popf
and
adc
xor
xor
push
sub
lock
lcall
fnstsw
pop
ficompl
adc
jae
fsubrs
sub
bnd
sub
jmp
fsubrp
outsb
ja
dec
shlb
mov
mov
xchg
sub
cmp
push
mov
dec
dec
cltd
movsb
xor
mov
movsb
jae
and
inc
push
incl
mov
insl
or
sub
cmp
bound
les
out
movsl
jl
and
push
outsb
add
adc
les
cmp
inc
dec
inc
fdivrl
inc
idiv
addr16
xor
lret
fs
dec
addb
loop
out
jae
push
inc
xor
and
push
xor
stos
pop
inc
mov
inc
out
mov
lods
ret
cmp
scas
jle
mov
and
cmp
scas
sti
or
outsl
fwait
lret
int3
and
popf
ja
loope
xchg
or
dec
inc
xchg
sahf
inc
adc
addr16
into
fisubs
pop
sti
mov
jns
xchg
into
fs
enter
hlt
mov
inc
test
xorb
test
clc
sub
mov
cmc
ss
xchg
pop
stos
fildl
xchg
xor
mov
and
ss
les
push
xchg
sub
xchg
jmp
or
fildll
sub
sarb
call
mov
gs
sub
stos
xor
pop
fnstsw
je
sub
dec
imul
inc
cli
push
adc
je
out
xchg
jl
out
mov
cld
add
fwait
sub
xor
xor
xor
adc
movsb
inc
push
insl
enter
imul
push
cmp
fnstenv
pop
pop
movsl
es
xchg
in
das
pushf
push
xchg
push
dec
call
ret
inc
mov
adc
mov
adc
pusha
daa
push
scas
arpl
cmc
mov
mov
dec
sbb
icebp
push
add
push
adc
sbb
lods
push
shr
ds
test
lcall
es
dec
xchg
xchg
ret
out
pop
cmpl
push
cmp
sbb
push
and
outsb
mov
and
dec
jecxz
mov
rclb
xchg
imul
push
enter
and
shr
push
ljmp
add
xor
call
mov
mov
clc
cmp
callw
cs
cmp
mov
in
push
push
mov
lahf
rorl
mov
mov
adc
lret
stos
xchg
jns
out
test
mov
xlat
mov
xor
push
pop
sbb
gs
mov
and
jle
out
jle
testl
pop
js
out
out
div
out
sti
aas
aas
loopne
testl
push
repz
lods
sub
lret
push
push
sbb
pop
std
or
rcll
adc
in
divl
jae
into
arpl
int
sbb
lret
or
adc
lahf
loop
mov
sarl
outsb
xor
stc
test
ss
data16
cmpsl
adc
test
xor
dec
xchg
lret
adc
fdiv
lahf
sarb
cmp
mov
add
mov
xchg
mov
dec
pop
xchg
ret
cmp
push
sahf
add
inc
mov
adc
out
insb
mov
sub
inc
push
cmp
or
mov
cmpsb
mov
xchg
jle
gs
pop
xchg
cltd
outsl
cmpsb
mov
movsl
popa
xchg
xor
adc
or
jae
data16
outsb
jecxz
push
mov
movsb
movsw
lea
push
arpl
sti
xor
jb
popa
aaa
cmp
push
push
ja
int
in
xchg
and
adc
xlat
addr16
push
in
inc
jmp
jno
inc
xchg
hlt
out
mov
and
jle
adc
scas
and
mov
mov
mov
inc
push
movsl
jnp
lds
shrb
inc
dec
mov
push
std
popf
insb
dec
dec
add
mov
int3
jbe
cld
aaa
cltd
aaa
cmp
lcall
or
in
add
imul
enter
xor
call
lods
jo
mov
jnp
movsl
lret
add
mov
popf
ds
xchg
dec
push
push
jns
insl
addr16
cmpsb
or
cmp
and
fcmovu
xchg
push
lods
or
cmp
xor
aad
dec
movsl
ss
pop
cmp
jge
jle
dec
and
jmp
jne
xor
fwait
mov
cwtl
dec
out
insl
test
mov
mov
sahf
daa
xor
pop
xor
push
xor
out
fimuls
mov
fisubrl
pusha
xor
test
pop
imul
cmp
pop
push
sub
jecxz
out
adc
int
jp
add
xor
stc
lret
loop
push
adc
push
inc
in
adc
and
fmuls
sbb
jb
mov
test
fisubs
je
pop
test
mov
sbb
push
pop
lret
jp
aad
dec
adc
fwait
popa
in
std
adc
jmp
pop
xor
push
inc
lahf
push
add
incb
lret
pop
or
pushf
jmp
xchg
cmp
sub
stc
mov
lods
test
mov
jbe
je
fnstenv
aam
ss
sub
adc
gs
lcall
xor
cwtl
pop
in
pop
mov
pop
fcmovnb
cmpsb
idivl
push
mov
inc
mull
iret
or
cmp
adc
push
dec
clc
add
sub
inc
mov
cmp
push
mov
fnstcw
or
hlt
inc
adc
adc
cmp
sub
test
xchg
sbb
fbld
ficompl
jno
xor
popf
sti
mov
dec
in
mov
ficoml
and
xor
bswap
xor
xor
or
cmp
mov
ror
stos
inc
cmp
mov
push
sbb
or
loopne
and
cmc
push
popf
rol
and
cmp
mov
cli
arpl
jg
imul
add
movsb
into
jb
adc
scas
cli
ss
jp
jmp
mov
cltd
push
mov
xorb
dec
out
fiaddl
rorl
push
xchg
xchg
add
ss
lods
out
mov
shr
sub
mov
or
cmp
adc
hlt
lock
sahf
xchg
push
insl
mov
xchg
or
fadds
dec
and
nop
mov
cmp
popf
add
call
lds
sbb
xlat
outsb
in
ret
addb
sub
push
ss
xchg
add
jecxz
cmp
and
xorb
cmp
mov
aam
inc
in
add
push
push
in
xchg
test
iret
jmp
xchg
cld
jno
es
dec
pop
pop
mov
mov
sub
sbb
jne
sahf
sbb
add
mov
jl
in
mov
push
test
scas
sbb
mov
or
rol
aam
lds
adc
mov
mov
jo
add
arpl
int
pop
mov
and
inc
ffreep
ret
xchg
sbb
int
addr16
int3
mov
dec
arpl
enter
inc
popa
xlat
loopne
mov
pop
das
lods
adc
jp
jle
xlat
cmp
jno
jecxz
ljmp
or
into
roll
pop
or
icebp
sbb
cmp
insb
jle
cwtl
int
std
clc
lret
popa
hlt
pushf
push
mov
jl
xor
inc
mov
mov
xor
movsl
outsl
mov
gs
adc
stc
loop
jge
insl
stc
cmpsb
cmp
dec
fcoml
iret
push
dec
mov
int3
clc
frstor
mov
push
jbe
enter
push
xorb
mov
push
pop
pushf
mov
loopne
and
popa
outsl
jl
mov
cmp
popf
das
int
jne
mov
clc
add
add
and
subb
sub
rorl
and
jo
add
xor
ret
arpl
sbb
cmp
mov
int3
jo
xor
addl
or
mov
push
add
cmp
jno
mov
jmp
cmpsb
push
fistps
xchg
movsb
dec
fmulp
lret
mov
push
idiv
inc
mov
mov
cmp
aad
out
shlb
add
push
adc
push
mov
adc
mov
lcall
loopne
cmc
push
mov
orb
jnp
inc
lock
loop,pt
cmp
xchg
jp
insl
pushf
ds
aad
or
mov
xor
movsl
lret
les
ret
test
sbb
sbb
add
addr16
or
imul
das
shll
mov
cmp
mov
out
adc
and
repz
cmp
rcr
jle
lods
inc
cmc
cmp
push
rclb
xchg
js
outsl
push
jle
data16
mov
xor
sub
pop
pop
adc
dec
jg
sbb
pop
jl
sub
xor
or
std
cs
subb
jmp
loope
lahf
xchg
cld
add
addb
in
xchg
mov
popa
enter
cmp
sahf
mov
sahf
add
and
into
stos
add
fsubrs
dec
popa
sti
out
mov
and
push
addl
pop
inc
add
aaa
out
jg
movzwl
pop
and
inc
nop
push
mull
push
dec
jnp
dec
push
test
pop
sub
sbb
push
sub
inc
xchg
jno
scas
xor
xchg
stc
push
mov
mov
pop
call
gs
int3
inc
xor
mov
jbe
add
test
jle
andb
pop
dec
test
aas
lret
mov
jge
dec
loop
jle
adc
out
add
push
dec
jl
imul
inc
sbb
ret
stos
cmp
mov
and
xchg
iret
test
dec
imul
jp
mov
rol
jne
mov
jne
pop
mov
push
lock
insb
sub
bound
adc
les
lea
mov
adc
add
test
push
loope
cmp
roll
aad
pop
pop
cmp
jecxz
mov
out
test
stos
daa
cli
movsb
pop
jmp
incl
add
or
jbe
insb
loop
and
add
jae
outsl
jo
push
scas
mov
sbb
adc
in
lods
mov
mov
sar
sub
mov
sbb
rcrl
lea
dec
push
push
les
dec
stos
fisubs
test
sub
mov
or
iret
fldl
repz
mov
jp
sub
push
jae
ret
mov
stos
sbb
adc
adc
out
inc
ds
fdiv
outsb
sbb
jge
xchg
and
rorb
lret
xor
mov
sti
aaa
cs
pop
cmpsb
cmp
cmp
cmp
jg
fs
aas
mov
sti
movb
es
push
pop
enter
aaa
in
ret
inc
sbb
int3
lcall
sub
mov
dec
cmp
inc
add
outsl
dec
jns
jns
lahf
push
dec
push
jmp
fisttps
mov
dec
jmp
xor
inc
push
pusha
sub
clc
lcall
adc
popf
cmp
pushl
andb
loopne
movsl
fxch
pushf
mov
iret
xor
cmc
pop
scas
loop
push
sub
sar
xchg
mov
add
loop
mov
lods
stos
add
inc
out
cli
fld1
iret
hlt
shll
test
je
std
mov
imul
mov
dec
pop
imul
push
andl
pop
popa
out
xchg
dec
cmp
in
jl
xchg
in
mov
mov
cli
push
push
adc
fildll
dec
xchg
xor
loop
push
scas
in
lock
dec
lock
fstps
mov
cmpsl
mov
push
std
rcl
cwtl
imul
repnz
jecxz
stc
pop
dec
mov
daa
aam
scas
push
repnz
adc
lret
fnstcw
sub
fs
inc
das
and
jb
rcrl
mov
mov
jb
jae
mov
adc
dec
add
sub
sub
add
fs
add
jl
add
cmp
cmp
inc
test
jbe
fdivs
nop
or
cli
dec
ss
fcomip
fdivr
int
mov
lcall
mov
jmp
adc
mov
pop
out
test
ja
loopne
faddl
add
mov
jle
ret
adcb
insl
iret
jmp
mov
jecxz
js
roll
pmuludq
fs
mov
mov
outsb
sub
insl
bound
adc
lcall
mov
inc
jecxz
dec
cld
mov
xchg
bound
ret
xchg
or
movsb
addb
and
pop
xchg
std
ret
repnz
jno
mov
aaa
xchg
sub
add
test
mov
push
call
test
lea
mov
or
push
icebp
or
sbb
and
jle
arpl
stc
fildl
scas
inc
add
mov
notb
jae
sub
stc
dec
sbb
dec
push
insb
das
xchg
mov
in
cmp
mov
sub
dec
ja
gs
stc
inc
xor
inc
adc
stos
and
push
cmpl
fadds
xor
cmp
xchg
stos
cmc
stc
mov
out
or
sub
mov
sbb
dec
ret
in
data16
in
lea
xchg
adc
push
std
jno
mov
mov
bound
push
mov
push
inc
imul
movsb
add
pop
clc
icebp
push
mov
shrb
adc
cmp
dec
popf
lret
jecxz
push
xchg
daa
xor
imul
mov
pop
mov
lcall
fmul
dec
and
cld
scas
or
jecxz
dec
outsl
adc
push
xor
dec
mov
daa
pop
jle
sti
dec
adc
lret
outsl
xchg
mov
pop
push
jmp
cmp
push
and
mov
imul
sbb
inc
jnp
push
adc
sti
mov
jns
movsb
lock
or
es
cmp
mov
lea
mov
movntq
fsubr
add
pop
xchg
mov
add
mov
push
mov
push
ljmp
sub
loop
ja
jb
cmp
jne
shlb
movsl
inc
jns
mov
mov
cmp
subl
pop
mov
out
orl
je
inc
in
xchg
and
popa
out
lret
xchg
mov
lock
cmp
sub
int3
int3
ss
push
cli
xchg
cmpb
movsl
jl
inc
mov
loop
mov
test
sub
and
imul
jbe
jo
lds
mov
pop
push
sahf
jle
mov
sbb
fnstenv
lods
jnp
sub
or
es
pop
cmc
repnz
mov
or
sbbl
fidivrl
aam
push
ds
sub
mov
mov
mov
push
xorl
leave
pop
stos
sub
or
or
idiv
xchg
mov
enter
das
enter
cmp
cmp
dec
add
mov
in
pop
cltd
or
jg
sti
xchg
rcrl
adc
clc
cltd
pop
mov
sbb
pop
or
mov
mov
mov
into
push
out
xor
rcl
not
jae
insl
ret
testl
adc
sub
icebp
sbb
fs
sub
add
add
pop
je
nop
mov
ds
int3
out
in
xchg
scas
aaa
add
mov
cs
insb
sbb
pop
rol
inc
insb
add
add
lods
jne
adc
movsl
mov
test
cmp
leave
xchg
lea
pop
push
jmp
xchg
imul
testl
pop
pop
push
cli
jno
sbb
lods
adc
nop
adc
mov
hlt
jmp
push
add
stc
fdivrs
les
shlb
xor
sti
js
inc
out
add
popa
mov
stos
or
decl
jl
ret
lret
adc
stos
push
add
in
sub
mov
call
mov
leave
fwait
push
cmp
aas
or
fimull
lret
jge
leave
fucomip
mov
imul
adc
fucom
xor
push
sbb
mov
dec
push
xor
pop
test
inc
fsubl
mov
rorb
fdivl
lret
cmpsb
and
test
call
test
imul
cmc
push
pop
xchg
outsl
and
mov
fidivs
ret
mov
aaa
push
in
inc
adc
cmp
movsb
push
cmpb
scas
adc
dec
xchg
mov
pop
out
mov
psubd
jae
sbb
pop
pop
test
lcall
dec
inc
movsb
cmpsb
movb
es
mov
and
in
and
pop
mov
push
pop
repnz
mov
push
movl
roll
or
sbb
add
pop
cmp
out
xchg
popf
repz
xor
repnz
adc
cmp
fnstsw
adc
fs
lea
pop
fsubrp
and
cmpsl
mov
and
xlat
xor
jne
add
ss
das
in
dec
mov
lods
outsb
add
stos
and
xchg
cli
jae
sbb
xorps
mov
pop
icebp
popa
cmp
movq
pop
pop
sti
divb
pusha
mov
dec
cli
pop
mov
pop
add
dec
or
inc
push
pop
dec
xchg
sbb
hlt
add
mov
and
leave
and
test
xor
pop
push
pop
lods
xorb
xchg
or
sub
mov
test
inc
mov
hlt
addr16
in
xor
idivb
sbb
cltd
jp
imul
call
xchg
pop
enter
jecxz
xchg
fwait
mov
push
xor
fiadds
stos
sbb
movsl
test
les
mov
push
mov
mov
inc
daa
imul
neg
jg
or
ds
push
and
xlat
es
cmpb
mov
mov
cmpb
addb
cmc
pop
lret
push
pop
das
xchg
add
and
adc
inc
dec
add
cltd
mov
lea
test
ficoms
es
or
pop
sub
fsubrs
jg
enter
out
and
inc
cmpsl
push
jnp
pop
jns
mov
es
add
push
adc
rcr
or
dec
mov
fwait
cmpsl
pop
jle
ret
mov
in
dec
cltd
jnp
and
mov
mov
push
mov
mov
mov
pop
pop
sti
sbb
mov
in
dec
fwait
shll
scas
fs
sbb
aaa
movsb
mov
lcall
push
adc
sahf
dec
gs
dec
std
xor
xchg
mov
jl
into
pop
push
call
out
inc
mov
cmp
pop
and
movsl
adc
dec
dec
cmpsl
xor
out
stc
stos
mov
cmp
fistl
xor
inc
mov
test
push
outsb
imul
cmp
cmpsb
inc
xorl
inc
stos
jae
xor
xor
adc
and
sbb
jp
stos
in
iret
rcll
jne
jp,pn
rolb
xorb
out
cwtl
sub
leave
hlt
xchg
jae
push
xchg
lods
leave
mov
xorl
aad
dec
add
in
cld
test
ss
mov
cli
shll
push
loope
dec
cmpsb
mov
push
das
test
push
fdivr
push
mov
in
cmp
jnp
in
jmp
jl
arpl
inc
jae
data16
push
pop
xor
aas
data16
mov
shl
xor
adc
mull
adc
or
test
out
xor
and
mov
lds
cmpsl
pop
xchg
cmp
add
test
jns
cmp
dec
filds
mov
dec
mov
andb
call
sub
xorl
dec
jl
std
cmp
stos
and
sbb
xchg
stos
int3
iret
xor
aas
lret
push
xchg
sbb
push
inc
cltd
jnp
mov
xlat
cltd
add
repz
xchg
jl
sub
hlt
pop
popf
js
mov
or
xlat
xlat
push
stos
add
arpl
mov
and
scas
jb
pushf
sub
enter
aam
aas
push
jne
int
movsb
int3
sub
sbb
dec
add
sub
stc
mov
adc
lods
sahf
outsl
fildl
ja
mov
cmp
testl
sub
mov
mov
push
fistpll
icebp
je
xchg
and
jbe
cs
and
imul
ds
adc
mov
aad
hlt
dec
setg
into
sub
or
pushf
mov
arpl
cmpsl
outsl
cltd
jecxz
test
enter
lret
sub
rcrb
sbb
cs
push
shr
lahf
xor
cmp
vbroadcasti128
bound
add
or
adc
iret
lahf
loopne
rorb
adc
inc
rclb
sbb
dec
adc
push
pop
mov
insb
aaa
in
pop
pop
clc
mov
shrb
add
jecxz
cld
pop
cli
mov
mov
or
push
or
add
aam
jecxz
bound
push
pop
inc
js
sahf
pushf
inc
sbb
in
mov
fs
or
fnstsw
ds
repz
mov
mov
mov
xor
xchg
lret
pushl
and
push
test
or
sub
fwait
lcall
jo
push
pop
aas
push
lcall
mov
in
lret
xor
imul
repz
sbb
xor
pop
aas
push
stos
pop
xchg
inc
fisubrl
loopne
movsb
sub
lahf
mov
clc
or
xor
cmp
adc
or
sub
mov
adc
cs
cs
inc
out
shr
lret
fstpt
rolb
cmpsb
fdivrl
fs
pop
test
cmp
fsub
add
mov
pop
add
dec
inc
xor
notl
mov
xchg
hlt
ds
inc
mov
leave
sub
ret
jbe
push
sub
mov
repz
lea
inc
or
mov
jbe
adc
dec
cmpsb
in
mov
jne
ret
or
xchg
je
or
pop
sahf
push
ficompl
loop
test
movl
dec
jp
push
decb
push
cmp
push
sarb
lods
les
cld
xchg
cmpsb
xor
stc
jb
pushf
adc
rcrl
cmp
in
pop
repz
mov
jne
or
sub
sub
jae
lret
int
push
pop
out
jp
jmp
rorb
lock
enter
or
lahf
pop
call
inc
jg
xchg
dec
sarb
sbb
inc
push
inc
loope
ds
testb
xchg
sub
xor
pop
in
hlt
stc
pop
jne
sbb
and
fldt
js
adc
cmp
and
fmull
xor
popf
adc
popa
pop
repnz
lea
iret
sub
and
adc
adc
mov
adc
jns
arpl
or
in
push
sbb
aas
inc
cmp
bound
sub
dec
sti
sub
adc
mov
test
jle
or
sub
daa
mov
rorl
daa
data16
jno
xchg
pop
mov
adc
fimull
push
divb
and
and
ljmp
adc
in
stos
sbb
cld
mov
divl
mov
shr
mov
jge
clc
jmp
mov
std
movsb
mov
jecxz
lods
ret
xor
cmc
scas
xchg
cld
je
dec
clc
dec
pop
push
jmp
loop
nop
jle
daa
cmpsl
and
sbb
mov
push
pop
mov
cltd
dec
clc
adc
push
xor
mov
repnz
pop
jo
fwait
dec
jnp
lods
cli
addr16
cwtl
rcll
fidivrl
mov
js
loopne
sbb
cmp
mov
cwtl
mov
mov
insl
xor
cmp
jne
rcrl
ficoms
insl
pop
sahf
shlb
lods
add
mov
imul
insl
sbb
adcl
cltd
and
pop
cmp
rcll
pop
sub
mov
sbb
popa
jno
xor
leave
mov
faddl
imul
ds
repz
cmp
cmp
inc
bound
outsl
dec
xor
mov
xchg
pushf
inc
sbb
dec
push
lods
sti
pop
fnstenv
and
xchg
add
sti
mov
pushf
inc
sbb
push
bound
call
sti
stos
int3
out
mov
sarl
fdivr
adc
mov
scas
insl
adc
sbb
ss
rorb
and
fdivrs
dec
movsb
push
mov
pop
pop
sbb
loop
mov
shlb
psubusb
pop
ja
clc
arpl
lahf
je
xchg
mov
mov
in
add
leave
lret
inc
xchg
cmpsb
cltd
jge
sub
pusha
xchg
scas
rcll
mov
xor
push
cmp
addr16
int
sbb
push
int
mov
in
mov
hlt
cltd
adc
ret
lea
aas
mov
pusha
sub
scas
imul
hlt
dec
pop
fstpt
in
sub
mov
push
shl
pop
cmp
aam
mov
out
pushl
xor
push
es
cwtl
sarb
or
mov
jae
push
icebp
add
lahf
push
jmp
cmpsb
sub
fildl
mov
inc
stos
inc
xchg
call
sbb
xchg
sbbl
pop
in
pop
shr
jbe
jnp
in
cmp
jo
or
and
arpl
nop
in
xchg
int3
jmp
mov
imul
add
sbb
cmp
adc
out
loopne
and
inc
add
insl
popf
imul
js
adc
and
test
jnp
fstps
mov
xor
adc
push
aas
xor
add
ret
mov
or
dec
add
popf
stos
xchg
movsl
int3
mov
inc
adc
rcl
xchg
enter
movsl
xor
test
pop
mov
jb
sbbl
cmc
push
in
inc
sub
xchg
sbb
fs
imul
aas
sbb
mov
pop
pop
fistl
pop
and
jbe
lcall
jle
mov
in
shlb
test
scas
outsl
cs
inc
in
inc
inc
pushf
pusha
mov
or
pop
test
and
nop
inc
dec
add
loope
add
dec
cmp
dec
fstpt
dec
mov
mov
add
std
shll
or
scas
scas
rolb
pop
cmc
ds
fadds
test
adc
push
imul
testl
sub
adcb
cmp
xchg
cmp
sbb
cmp
dec
rolb
xor
add
mov
push
lahf
push
inc
add
loope
sub
out
in
xor
ret
movsb
jbe
pop
add
in
pop
sbb
ret
xchg
pop
jae
cld
lods
jne
xchg
fsubl
inc
movsl
cmpsl
sub
or
inc
pushf
cmc
pop
mov
xchg
stc
dec
pop
sub
std
ror
adc
repnz
fwait
mov
mov
fldt
cltd
add
mov
hlt
fwait
inc
icebp
push
push
ds
test
sub
scas
inc
mov
repz
and
stos
shrb
and
adc
fwait
ljmp
xorl
cmp
sbb
mov
aaa
xchg
pop
jno
xchg
fcmovnu
push
mov
sbb
or
mov
pop
cmp
inc
sub
mov
cwtl
mov
pop
jbe
loopne
in
jnp
pop
mov
inc
xor
mov
ret
cmp
es
or
jnp
cmp
mull
or
cmpl
call
mov
std
clc
fimull
ljmp
test
arpl
mov
or
push
sahf
pshufw
mov
or
inc
hlt
push
fdivs
sbbb
inc
iret
sbb
test
adc
leave
pop
xor
ror
jmp
shll
mov
inc
in
lds
pop
call
jp
je
les
jnp
int3
xor
in
lret
lea
aaa
xchg
and
sahf
scas
das
mov
or
push
mov
push
cmp
gs
adc
push
mov
mov
movl
dec
mov
dec
or
packssdw
pop
sbbl
lods
popf
sbb
push
or
ror
decl
xchg
iret
lds
aad
out
movsb
rcr
stos
mov
lods
bound
adc
sub
clc
adc
xchg
jb
data16
frstor
add
xor
cs
mov
gs
add
gs
popf
sub
xchg
mov
jg
jl
sbb
dec
xor
sbb
jb
adc
fcom
dec
cld
clc
fcoml
mov
jmp
cmpsb
cld
sub
loopne
pop
clc
out
iret
add
call
cwtl
shll
icebp
xor
mov
bound
pop
jg
pop
jnp
data16
push
cli
hlt
and
mov
jns
rorl
push
jl
inc
sbb
pop
sarl
fcom
pfnacc
dec
adc
ret
incl
les
add
mov
xor
or
pop
cwtl
jno
call
xor
or
pop
mov
fildll
pushf
push
ret
xchg
in
push
mov
dec
and
cmpb
pop
xchg
lret
loope
cmp
dec
cmpsl
in
fisubl
xchg
in
fbstp
cmpsb
mov
lea
out
in
js
xchg
inc
fistpll
adc
lret
sub
xor
bound
jecxz
out
or
nop
sti
sti
mov
sarb
add
or
stos
pop
or
ljmp
and
xor
xchg
pop
jg
pop
je
sub
xor
mov
shl
test
xchg
mov
stos
add
rorl
mov
lcall
mov
mov
jae
push
stos
test
xchg
fists
jns
mov
jp
mov
push
sbb
jge
fcmovne
jae
stos
aam
xlat
push
std
push
bound
and
adc
push
ljmp
fisubs
adc
shl
push
xor
outsl
pop
out
sbb
xchg
iret
fcompl
push
repz
xorb
shl
add
into
fcoml
shll
push
mov
xor
in
mov
dec
arpl
pop
lock
and
inc
mov
daa
mov
fs
icebp
adc
xchg
sbb
loope
lret
imul
add
loope
lock
pop
pop
jno
jle
inc
aam
mov
hlt
sahf
inc
sub
mov
dec
cmp
icebp
jns
fimuls
movsb
cmp
js
inc
xchg
sub
mov
lret
frstor
pop
jp
decl
decl
mov
jo
xchg
inc
pop
xchg
into
cs
fs
xchg
jae
jns
add
pushf
or
pop
dec
mulb
push
shrb
clc
add
mov
xchg
sbb
push
dec
andl
or
sub
out
xchg
aaa
sub
fldcw
push
in
jbe
rclb
in
ss
mov
adc
pop
bsr
mov
cmp
and
mov
xor
stos
fldln2
rclb
stos
std
js
stc
repnz
loopne
in
lret
imul
popf
out
popa
pop
test
inc
ljmp
sbb
jl
mov
repz
pusha
ret
in
pop
and
jns
adc
lds
rol
lock
mov
cmp
jbe
mov
in
and
loope
xor
or
mov
scas
imul
and
pop
mov
pop
pusha
fldlg2
iret
inc
jns
std
enter
mov
movsl
mov
or
cmp
xor
xor
xor
mov
ja
dec
xchg
xchg
addr16
fmull
popa
daa
incb
dec
js
jb
stos
aas
push
add
fnstsw
jne
bound
jp
and
pop
mov
xor
push
dec
xor
stc
in
shl
sub
vpaddsb
data16
add
in
jl
pop
les
in
sti
icebp
xchg
cmp
cltd
push
ret
in
fstps
movsl
jbe
pop
icebp
jmp
sbb
and
fstpl
or
aas
gs
xor
and
out
xor
shr
push
add
fadds
adc
sahf
xchg
mull
cmp
dec
xchg
mov
dec
jo
jmp
sub
xorb
add
ja
leave
enter
push
mull
ficoms
and
movsl
cmp
shr
aaa
call
ret
dec
cmpsb
outsl
lds
cltd
mov
cmp
mov
jl
xchg
fucomp
adc
inc
fildll
xor
dec
add
test
in
or
jo
mov
jo
cs
jo
xchg
inc
stc
scas
pushf
ljmp
add
lret
jns
add
test
incb
mov
addb
jb
es
rolb
mov
loopne
out
sbb
cmpsb
adc
insl
fmull
xor
stc
cmp
mov
mov
mov
jb
repnz
test
ret
jl
pop
int3
jg
cmp
dec
xor
mov
rol
and
testb
push
mov
mov
outsb
push
scas
sub
hlt
push
cmp
data16
jecxz
fstpl
shl
ja
test
and
sbb
xchg
cwtl
mov
xchg
mov
xchg
fstpl
jl
cltd
cwtl
ds
adc
pop
outsb
dec
daa
into
andl
mov
lret
fdivs
and
push
adc
test
fwait
and
out
outsl
xorb
stos
fldt
lcall
leave
or
cmc
jp
lods
testl
pop
clc
jg
sub
cmpsl
loope
fnstenv
pusha
stos
lcall
leave
ss
int
mov
jns
test
cmp
sub
sarb
and
lock
adc
addr16
int
into
sub
es
adc
notb
loop
fstpl
add
sub
cmp
test
inc
adc
movsl
andb
jne
andb
lock
inc
add
ja
shll
call
pop
out
scas
into
inc
dec
data16
imul
loopne
lods
xchg
repnz
push
dec
jl
bound
hlt
sub
and
pop
dec
out
fisubs
faddp
sub
sub
mov
jmp
jmp
dec
stc
stc
and
pop
push
cmpsb
or
or
stc
jecxz
pop
or
sbb
imul
aaa
and
aad
imul
and
in
or
inc
push
lret
add
adcb
add
movsb
mov
sbb
push
std
mov
test
aas
jne
mov
test
test
adc
loope
mov
pop
mov
lods
push
push
mov
xor
cmpsl
outsl
sub
push
mov
pop
fmuls
mov
pop
dec
aaa
lret
aam
mov
cmp
addr16
xchg
dec
sahf
insl
push
es
lods
mov
sub
jb
lret
mov
mov
jo
pop
dec
xor
fadds
in
clc
xor
es
dec
mov
sub
mov
add
mov
clc
push
adcb
lahf
jmp
mov
inc
daa
enter
jbe
push
pushf
into
imul
mov
xor
jp
jmp
mov
lock
and
out
iret
in
bound
mov
and
cmpsb
mov
aad
mov
xchg
mov
popf
stc
jecxz
jmp
ja
cmpb
clc
jb
jp
in
lret
hlt
sbb
lods
mov
daa
invd
int
sub
pop
mov
cli
sbb
popa
stos
jg
sbb
dec
inc
mov
adc
cltd
mov
adc
outsl
repz
popa
xchg
addr16
dec
push
pop
fwait
mov
add
jbe
adc
out
sub
add
test
in
jp
fsubr
stos
dec
jecxz
mov
inc
imul
in
enter
cmp
adc
test
dec
jmp
sbb
adc
jecxz
int
xchg
fisubs
sbb
ljmp
mov
dec
cs
sbb
pusha
shlb
sub
rol
mov
push
xchg
or
pop
cmp
orl
mov
mov
lock
push
lock
lcall
sub
fcoms
add
cmp
scas
lea
movsl
loop
fsubr
scas
loope
sbbl
cmpsl
mov
aaa
fcmovne
pusha
cmp
rorb
mov
inc
roll
std
dec
inc
fstpl
inc
outsl
in
mov
or
cmpsl
or
insb
inc
sbb
sbb
mov
stos
add
xor
and
mov
jp
imul
mov
inc
das
jbe
push
and
mov
xor
cmc
dec
ret
cmp
mov
fwait
or
and
or
mov
dec
mov
lods
es
lods
scas
sbb
push
fisttps
xchg
mov
sbb
rclb
pop
inc
imul
stos
pop
mov
add
and
pop
mov
into
xlat
xlat
jae
push
mov
rcr
mov
leave
mov
add
jp,pt
mov
inc
sbb
pop
mov
mov
std
jns
test
mov
imul
fwait
subb
ret
lds
fisubrl
loopne
data16
pushf
push
add
xor
cmpsb
xor
xchg
and
xchg
and
fwait
xchg
leave
das
enter
nop
sbb
dec
imul
jae
and
mov
popa
jp
jbe
aas
test
in
js
mov
push
sub
cmp
ss
push
adc
std
cltd
fidivrl
dec
jns
cmp
push
push
enter
gs
mov
mov
xchg
dec
pop
pushf
cli
pop
push
sbb
and
jle
ljmp
sahf
xchg
and
pushf
pop
pop
mov
movsl
stc
je
jg
ds
mov
aam
fsubrp
push
adc
hlt
femms
test
std
outsb
movsl
mov
dec
cli
cltd
ljmp
jmp
fs
push
cltd
sbb
add
movd
xchg
jae
mov
fs
and
or
mov
ss
adc
divl
leave
fsubrl
push
mov
pop
adc
xchg
cwtl
sbb
jg
inc
fyl2x
mov
lock
mov
sub
leave
imul
mov
in
fidivrl
mov
jmp
dec
xchg
leave
mov
cmp
repnz
aad
dec
movl
mov
sbb
aam
sub
inc
jg
lea
clc
nop
mov
fisttpll
pusha
jg
in
sbb
jmp
inc
adc
mov
cli
dec
data16
loopne
mov
or
jbe
scas
mov
adc
mov
dec
mov
test
mov
shlb
stc
push
scas
pop
sbb
dec
loop
mov
jae
push
leave
mov
sbb
mov
js
cmpsb
shlb
das
sbb
xor
mov
jns
lret
add
jg
jo
mov
pop
jae
scas
adc
mov
mov
xor
xlat
gs
outsl
pusha
repz
cmp
cmp
and
fadds
push
adc
jl
lret
mov
insb
inc
xor
mov
int3
mov
and
loop
jno
js
lods
in
lods
arpl
jb
pop
sbb
test
or
loop
aad
mov
push
mov
xchg
or
fimull
cmp
mov
or
out
in
mov
adc
cmp
mov
sbb
lock
clc
push
mov
in
push
push
dec
add
out
inc
inc
addr16
pop
dec
shll
sbb
push
adc
out
dec
push
repnz
fwait
pop
push
adc
ja
mov
cli
leave
std
add
mov
fbld
cmp
out
dec
sbb
push
js
ss
lret
push
ljmp
js
pushf
mov
pop
pop
shll
incl
cmpsb
daa
add
adc
cmp
pusha
jae
inc
sbb
sti
lahf
push
adc
and
mov
jae
pop
dec
xchg
push
cmp
rep
sub
cmpsb
test
mov
jl
leave
hlt
pop
fcoms
lds
in
or
mov
cmpsb
cmp
andl
jg
mov
xlat
pop
push
adc
in
mov
inc
pop
push
scas
jbe
dec
and
inc
add
sbb
std
and
cmp
sub
mov
clc
cld
jp
fldcw
ret
das
xchg
mov
jns
in
sbb
imul
dec
sub
dec
repnz
ds
mov
cmpsl
or
lret
test
sbb
insl
cwtl
mov
mov
mov
mov
lds
aaa
stos
inc
xchg
int3
mov
xchg
jo
aad
daa
das
xchg
xchg
xor
mov
jne
loopne
insl
mov
sti
lret
aaa
pushf
jecxz
mov
rorb
dec
pop
clc
les
imul
fnstsw
iret
dec
xchg
popa
cmp
sub
cmpsl
shrb
inc
shll
sub
das
cltd
js
mov
mov
cltd
loope
xlat
xor
std
dec
lret
std
pop
iret
xor
xor
je
fcompl
loopne
jbe
aad
mov
push
sbb
mov
fwait
pop
outsl
xor
xor
scas
cld
decl
pop
pop
or
in
mov
xchg
sar
pop
cwtl
mov
ljmp
adc
cltd
insl
sbb
mov
inc
insb
lahf
push
push
pop
inc
mov
in
jecxz
lea
add
arpl
mov
out
mov
xchg
aaa
das
xor
loopne
lock
subl
sub
std
dec
mov
dec
popa
push
xor
adc
rol
jg
jne
test
jns
leave
jnp
fsin
jb
lret
jp
cmpsb
push
mov
fistpll
out
adc
jecxz
jno
sbb
mov
fisttpll
lahf
push
mov
mov
mov
pop
xchg
es
and
stos
mov
dec
scas
cmpsl
push
imul
push
push
or
inc
and
mov
clc
pop
notb
std
mov
or
sahf
insl
add
inc
inc
test
lds
arpl
mov
xchg
movsb
test
imul
inc
adc
dec
dec
mov
mov
jns
loope
cmp
repz
aas
gs
js
movsl
test
cmp
push
jne
sbb
mov
ja
test
shrb
in
inc
sub
lock
aaa
call
push
cmp
lds
and
in
scas
stc
rcr
fbstp
jmp
aas
ljmp
nop
xor
push
dec
ja
or
dec
repz
cwtl
clc
lret
jmp
mov
test
jge
and
pop
lock
add
cld
int
inc
jle,pt
mov
les
je
or
mov
inc
xor
stc
rcl
inc
fstl
dec
rcrl
adc
push
dec
xchg
pop
xchg
fldcw
pusha
data16
xchg
repnz
jae
sub
jo
and
pop
orl
push
andb
lea
pop
testl
aaa
pop
pop
jnp
or
inc
movsb
sbb
out
mov
mov
and
push
into
scas
push
xchg
pop
sbb
cld
cltd
pop
mov
mov
das
pop
mov
std
pusha
popf
jnp
lcall
ftst
cmpb
mov
int3
mov
cmpsb
cld
jnp
inc
arpl
mov
xor
repnz
aaa
and
ljmp
loopne
call
sbb
sub
insb
psubq
js
inc
pop
aad
aad
repnz
mov
es
jae
icebp
in
adc
jns
add
movsl
mov
adc
pop
push
inc
xor
mov
in
pop
mov
sti
xlat
push
das
push
pop
add
scas
jmp
das
mov
gs
dec
loopne
mov
repnz
jge,pn
dec
and
pop
js
xchg
lret
push
pop
pop
push
bound
movsb
outsl
roll
test
add
outsl
inc
pop
dec
jmp
movsb
popa
sbb
jne
adc
jp
shrb
fimull
js
sbb
jecxz
sub
test
xor
pop
pop
das
or
ret
sbb
mov
dec
or
xor
jl
xchg
aad
out
mov
lock
nop
fcoml
cwtl
rcrl
sarb
pop
inc
test
outsl
pop
jne
xchg
movsb
jge
pop
int
dec
cld
cmp
dec
outsb
cmpb
xor
int
xchg
aaa
int3
push
insb
xor
loopne
addr16
bound
pop
pop
mov
js
lret
lahf
fcoms
inc
movsl
mov
leave
dec
mov
jecxz
jge
mov
pop
xlat
mov
mov
in
inc
jnp
or
outsb
lods
fnsave
add
ret
in
dec
lock
pop
in
fidivrl
data16
push
dec
icebp
lret
push
pop
or
sti
jnp
push
xchg
out
or
sub
fnsave
sti
push
ret
mov
adc
fildl
int
lahf
mov
add
mov
lods
loop
jbe
cmc
pop
jns
arpl
adc
push
enter
scas
mov
ljmp
fistps
clc
out
xorl
fsubl
js,pt
fs
cmp
or
lcall
mov
inc
sahf
lret
scas
insb
or
push
pusha
dec
movsb
shll
mov
adc
dec
cmp
inc
push
enter
cs
adcl
adc
int
stos
pop
push
lret
lds
in
popl
xorl
loopne
loop
dec
jo
add
sbb
je
das
push
cltd
subl
or
testb
dec
and
in
inc
mov
loopne
out
test
jmp
std
and
clc
cltd
int3
mov
iret
stc
sub
push
pop
ret
fstpt
fimull
lea
out
add
jne
sub
je
in
mov
push
jp
loope
push
or
mov
movsl
rcrb
cmc
or
xchg
adc
mov
push
mov
fwait
mov
xchg
adc
int
jecxz
sub
sbb
es
mov
lahf
push
shrb
push
imul
outsl
add
push
orb
sbbb
in
xchg
adc
jl
sahf
fsubrl
adc
push
fwait
xchg
xor
xchg
popf
adc
mov
loopne
push
add
ret
pop
mov
jmp
dec
mov
push
xor
xor
pop
mov
sub
or
mov
lock
push
ss
mov
inc
mov
and
dec
mov
sbb
dec
pop
repnz
je
or
jp
adc
push
cmp
scas
sarb
aaa
cmpsb
pop
mov
push
lcall
iret
gs
or
das
sbb
dec
inc
sarl
jno
mov
add
push
push
ret
or
pop
in
insb
inc
lret
xchg
lahf
fmul
add
stc
push
xchg
insb
idiv
xchg
leave
mov
loope
jno
xchg
fcom
ljmp
sub
push
int
push
cmpsl
lock
push
test
mov
mov
pop
push
pop
call
mov
arpl
adc
mov
or
mov
inc
and
pusha
cmp
push
jle
sub
nop
mov
cs
jle
outsb
dec
add
xchg
cmpsb
pop
jmp
das
stos
mov
xchg
ds
imul
sbb
add
das
ds
or
testl
xchg
push
sbbl
test
mov
lock
gs
stos
mov
out
out
fcompl
mov
dec
dec
shrb
pop
out
pop
das
mov
sub
cmp
test
add
jmp
push
mov
icebp
xor
mov
mov
aas
mov
xchg
push
or
fwait
pop
and
add
rcll
inc
outsb
loope
dec
inc
movsb
mov
xchg
xchg
jg
es
mov
pop
cs
scas
mov
out
jae
sub
jg
mov
cmp
xorl
xchg
in
insl
jecxz
or
daa
cmp
mov
push
jp
mov
dec
xor
dec
lea
fldl
cmc
mov
out
je
bound
fs
add
std
cmp
dec
sub
dec
mov
outsb
push
fcoml
pop
xchg
repnz
fs
push
mov
les
sbb
jle
xchg
pusha
cmp
adc
testl
dec
adc
ljmp
notb
cltd
stos
lret
les
jle
mov
adc
subl
fidivs
push
pop
cmp
cld
pop
cmpsb
mov
cmp
and
mov
cld
dec
xor
jnp
xor
int3
xor
push
imul
add
stos
and
mov
stos
aad
movsb
dec
jge
add
inc
lcall
rorl
cli
xchg
inc
data16
gs
iret
pop
daa
mov
push
lods
mov
out
lahf
xchg
ljmp
outsl
rol
xchg
xor
lods
cmp
imul
pop
mov
into
mov
imul
sbb
mov
sbb
aam
push
adc
jle
sbb
int
popa
xorl
cmc
pop
inc
xchg
out
mov
in
cmp
mov
pop
adc
push
mov
and
addl
cs
daa
xchg
pop
mov
adc
adc
addr16
rcrl
loope
sarl
hlt
fistpll
ss
inc
or
das
sub
enter
inc
mov
andl
dec
std
cmp
mov
mov
jbe
dec
sub
cld
pop
insb
push
add
or
scas
adc
mov
lahf
pusha
cmp
iret
pop
and
mov
add
or
jnp
cli
mov
lret
loope
mov
imull
stc
jl
test
sbb
dec
sub
mov
std
clc
dec
push
mov
xchg
loopne
ds
pop
sbb
in
sbbl
arpl
rcrl
sbb
icebp
or
out
fs
inc
ja
pop
mov
push
and
mov
pop
gs
xchg
or
fs
ret
movsl
mov
daa
out
rcrl
xor
mov
adc
shrb
repz
ja
pop
aaa
adc
lds
loope
mov
mov
scas
push
adc
add
sub
call
push
int3
roll
ret
sti
mov
cmp
push
jo
mov
or
xchg
mov
jb
adc
add
mov
loopne
cmpl
scas
and
jnp
adcl
xchg
xor
xor
pop
std
xchg
out
jns
test
jl
call
lds
pop
aad
jns
insb
shl
iret
sbb
cmc
mov
pop
add
lret
into
adc
sbb
add
in
adc
cmp
mov
sub
fsts
loopne
or
jmp
mov
imull
sarl
in
xchg
dec
inc
mov
outsb
inc
popf
ret
adc
dec
mov
out
inc
leave
jmp
in
xchg
or
xchg
icebp
mov
mov
mov
pop
mov
pop
pop
loope
inc
adc
xor
insb
sub
int3
addr16
nop
into
jb
in
pop
or
cli
in
shll
add
dec
mov
adc
xor
fiadds
sbb
js
jne
test
jbe
lock
adc
xchg
data16
jnp
ficomps
dec
mov
add
add
cmp
aas
sti
loopne
push
fisttpl
movsl
mov
xchg
js
jecxz
jae
scas
or
rcrl
test
lock
int
sbb
es
out
pop
push
hlt
push
adc
insb
in
lock
fsubrs
aaa
xor
fcompl
pop
popf
xor
dec
xchg
scas
xchg
pop
or
pop
jnp
pop
in
je
aad
lods
out
jae
stos
test
adc
sbb
xchg
sbb
xor
dec
xor
mov
gs
out
push
cmpsb
xchg
data16
outsb
adc
cmp
sbb
or
push
les
cmp
arpl
mov
jp
ret
xor
push
pop
jno
fadd
int3
dec
push
sbb
sbbb
mov
add
call
arpl
adc
loope
mov
mov
shlb
loopne
outsl
or
jle
lret
std
scas
nop
loopne
xchg
flds
dec
mov
jb
nop
pop
fisubs
push
mov
fiaddl
xchg
pop
test
pop
clc
test
push
inc
in
inc
idivl
mov
lcall
dec
or
and
add
pop
xchg
lds
shll
popa
fwait
les
leave
mov
dec
xor
icebp
jb
sbb
movsl
sahf
mov
jecxz
mov
sub
sub
adc
mov
jns
enter
test
das
sbb
pop
je
push
inc
add
out
mov
jb
dec
icebp
jnp
mov
adc
sbb
aad
arpl
pusha
imul
lds
xchg
das
test
or
je
dec
pop
mov
leave
test
mov
je
aam
insb
sbb
push
or
cmp
fimuls
jge
insb
mov
insl
mov
or
mov
fstl
and
ret
cs
mov
inc
mov
jno
xor
push
repnz
mov
movsl
mov
outsb
xchg
aaa
mov
fcoms
addr16
or
add
inc
clc
mov
sbb
leave
mov
movsl
add
xor
mov
mov
dec
cli
clc
aam
stos
icebp
inc
mov
inc
rol
scas
loope
pop
lods
sbb
mov
xchg
into
rcl
sbb
mov
in
call
icebp
fists
mov
rorl
xor
sbbb
sub
hlt
cmpsl
sub
dec
es
ret
rcl
loop
mov
imul
in
out
adc
cmp
loop
test
ljmp
xlat
mov
add
sbb
adc
rcrb
xchg
nop
dec
sti
mov
mov
push
inc
stos
mov
sub
mov
mov
outsb
and
data16
inc
sub
mov
xchg
cmp
es
mov
adc
or
mov
fnsave
xchg
fsubp
cmpsl
jnp
lcall
pop
fdivp
jo
push
cmp
push
push
and
adc
aaa
jge
pop
popf
int
mov
inc
push
or
mov
and
cmp
jnp
call
aam
dec
ss
lcall
mov
cmp
mov
inc
jg
out
sti
ret
sub
fdivr
pop
or
clc
jbe
xorl
mov
xchg
or
mov
leave
inc
fdivrl
test
popa
pop
outsb
add
pop
test
inc
adc
test
les
roll
cmp
push
sub
lea
jns
jecxz
jp
imul
sbb
aam
cmpb
jmp
shll
popa
xchg
ljmp
sub
dec
repnz
mov
and
test
incb
or
inc
shll
dec
shl
adc
mov
movsb
dec
xor
jle
and
lret
ds
sub
xchg
out
cltd
pushf
rcrb
lds
xor
rcrb
jecxz
shlb
adc
mov
inc
adc
xor
movsb
cmpsl
lcall
mov
xchg
das
push
sarl
data16
push
sbb
xchg
sar
fs
mov
inc
jmp
std
shlb
lock
addr16
pop
and
aas
sbbl
ljmp
dec
aaa
test
inc
mov
sub
lods
stc
cltd
movsb
pop
arpl
push
jne
pop
xor
xchg
fdivs
js
cmp
rclb
push
inc
jg
push
test
or
ret
dec
or
ds
push
mov
fldcw
in
aas
test
inc
lret
into
jb
pop
xchg
lock
fwait
sbb
dec
xor
in
cmp
cmp
loop
ret
clc
push
aam
xor
cmp
xchg
pushf
cmpsl
in
dec
daa
dec
push
and
adc
test
stos
xchg
shll
cltd
outsl
xchg
xchg
repnz
and
mov
clc
xchg
dec
or
addr16
jg
pop
int3
mov
mov
jno
xor
hlt
xchg
push
rorb
pop
jp
adc
adc
inc
sbb
lahf
xlat
les
mov
testl
ds
dec
test
jge
pop
bound
add
sub
sahf
je
iret
sbb
mov
shrb
mov
es
loope
adc
add
push
icebp
mov
push
and
js
or
sarb
or
push
push
dec
push
or
jbe
mov
mov
ljmp
cmc
cld
pusha
or
lahf
es
push
push
dec
outsb
movsl
fildll
jno
shll
sub
pop
in
fsubs
and
jecxz
lods
or
sarb
adc
icebp
pop
cmpsl
mov
xchg
and
jp
dec
inc
cmpsb
mov
cmpsl
int
stos
push
out
xor
out
inc
lret
sbb
adc
shlb
out
or
mov
jae
pusha
pop
jle
hlt
adc
enter
xor
scas
repz
outsb
xor
pop
jno
cmpsb
push
xor
fcomps
adc
cltd
aam
xor
inc
sub
sbb
pop
lcall
push
push
sbb
dec
out
mov
cmp
inc
es
and
lret
xchg
pop
in
adc
push
std
cltd
inc
stos
dec
jns
out
mov
lds
lcall
xor
mov
mov
lcall
out
add
inc
adc
sbb
xchg
bound
aas
and
repnz
out
adc
ret
dec
lahf
jnp
adcb
pop
inc
cmp
adcl
pop
xor
mov
jae
or
aas
xchg
sbb
pop
loopne
or
call
inc
outsb
sub
je
es
adc
imul
inc
xor
imul
lcall
push
orb
mov
push
and
scas
fadds
xor
fwait
into
int3
cmp
pop
adc
dec
lcall
lret
mov
xchg
loop
leave
insb
jbe
pusha
sub
push
dec
bound
cli
xor
push
test
push
addr16
fisubrs
jno
xorl
mov
pop
aas
mov
dec
sbb
push
andl
xor
mov
cs
fstl
sbb
negb
add
inc
les
mov
xchg
or
jmp
rorl
shl
ljmp
fwait
paddq
xlat
jg
mov
sub
inc
pop
or
pop
clc
outsl
dec
test
arpl
aas
or
xor
lret
in
pop
or
arpl
clc
mov
popf
push
lret
mov
push
add
sub
sub
ficoms
mov
mov
jns
inc
test
adc
aad
pop
jle
dec
sar
stc
ret
xchg
pusha
mov
xor
inc
xor
jg
sbb
cwtl
das
fiadds
adc
mov
pop
pop
add
mov
cmp
cs
sbb
daa
push
sbb
mov
mov
jb
mov
mov
cltd
adc
lods
iret
push
dec
mov
mov
enter
sub
addr16
insb
dec
jns
jns
mov
xchg
push
in
mov
xchg
sbb
aam
xchg
add
enter
lds
push
xor
xchg
pop
push
jnp
enter
sub
es
adc
repnz
and
xor
ljmp
adc
aas
ljmp
inc
mov
fadds
push
dec
lds
cli
sub
jle
and
fucomip
pop
xchg
xchg
jp
xchg
nop
sbb
sbb
mov
stos
leave
fs
mov
movsb
jecxz
addl
mov
push
imul
sub
sub
inc
mov
mov
xchg
push
sub
push
cmp
cmp
push
sbb
cmp
sbb
cmp
movsl
outsb
hlt
stc
sub
das
mov
arpl
sahf
and
testb
mov
add
icebp
inc
ljmp
repz
je
jns
xchg
int
or
pushl
jbe
pop
adc
call
stos
pop
pop
in
and
push
dec
js
inc
jl
icebp
rorb
mov
mov
push
mov
insl
mov
sbb
je
sti
movsl
fldt
add
xchg
scas
jae
cmp
das
cmp
and
adc
rorb
cmc
loop
test
adc
inc
stc
push
call
leave
dec
and
push
mov
aam
sbb
add
mov
out
insb
sub
sahf
inc
imul
cmpb
lds
or
adc
addr16
cld
je
jbe
lret
mov
shrw
les
fwait
push
push
mov
push
sbb
jg
and
icebp
xor
sbb
or
push
xlat
out
adc
stos
stos
lea
fildl
inc
rcll
in
fs
adcl
inc
ljmp
fmul
mov
xchg
jbe
xchg
jge
pop
dec
cmp
dec
out
mov
inc
cmpsl
pusha
test
daa
dec
neg
mov
and
in
repnz
xchg
out
mov
sub
push
jge
divb
adc
loop
sbb
adc
cmpsl
jl
testl
push
xchg
lret
mov
sbbb
std
fbstp
into
in
fsubrs
or
cmp
push
mov
push
lahf
cmp
loopne
sbb
fildll
out
movsb
sub
lcall
push
cmp
aad
mulb
mov
imull
adc
test
dec
push
ss
lods
cmpsl
push
jecxz
scas
mov
fidivs
cltd
fiaddl
addr16
sub
cld
aad
adc
jae
mov
in
pop
mov
xor
popf
les
ja
inc
mov
ljmp
add
mov
add
sbb
jne
sbb
jb
aas
inc
jge
pusha
sub
mov
jne
sub
and
and
mov
js
lahf
addl
push
push
pusha
mov
push
ret
roll
inc
xchg
movsb
mov
dec
pop
adc
out
hlt
stos
mov
dec
mov
int
stos
adc
cli
cmc
jp
sub
push
sbb
cwtl
push
lret
sub
lods
jecxz
jae
push
das
hlt
jo
jno
push
cs
mov
in
sbb
pop
int
enter
xchg
sbb
push
ss
mov
jmp
cmp
jg
lods
or
xchg
inc
rcrb
shll
xchg
outsl
loop
jae
inc
bound
xchg
in
or
cli
cli
scas
jp
in
xchg
push
dec
mov
jno
cs
push
nop
jle
gs
adcl
leave
in
add
iret
and
xlat
push
repnz
rorl
jo
dec
and
bswap
insb
pop
out
dec
hlt
xor
sub
mov
sbb
prefetcht1
rorb
cmp
xchg
push
leave
push
imul
pop
and
cs
into
mov
dec
jae
push
adc
add
push
int
xorb
sbb
mov
loopne
test
dec
jo
out
pop
mov
xor
mov
and
mulb
and
xor
add
jb
dec
repz
and
fnsave
xchg
ja
ds
inc
add
cltd
daa
jns
jl
add
fs
jb
scas
loop
cmp
rorb
sub
gs
adc
push
daa
pop
jae
inc
jbe
push
aaa
add
sub
sbb
and
pop
test
jnp,pt
loop
xor
push
jbe
mov
push
das
mov
xchg
das
in
fmulp
cld
add
out
pop
lea
jp
sub
lret
sub
dec
push
xor
xor
sub
xchg
sbb
cmpsb
arpl
pushf
jns
mov
push
out
jmp
mov
mov
sahf
bound
xchg
rorl
arpl
cmp
mov
sub
dec
dec
mov
adc
dec
es
fisttpll
add
jno
jle
divb
add
iret
fldt
dec
lods
inc
or
pcmpeqb
mov
test
sbb
vpunpckhwd
ret
jbe
int3
mov
adc
push
int
fstl
lock
lahf
add
sti
mov
mov
or
add
mov
push
and
into
mov
jbe
imul
cwtl
in
lret
xchg
pop
and
inc
aas
mov
fisubl
sbb
push
orl
test
ss
cmpsl
call
roll
push
push
and
push
fisttpl
jmp
mov
int3
out
adc
add
and
rorb
addb
mov
dec
js
jae
dec
inc
sarb
xor
ljmp
adcl
int3
fs
fwait
or
outsl
pop
cmp
pop
in
cmpsb
mov
inc
addl
mov
arpl
xchg
int
push
int
and
imul
call
xor
pop
cmp
xor
xor
jns
cmp
cmp
shll
fsubrs
mov
iret
mov
inc
in
jno
ljmp
test
daa
into
fldcw
mov
pop
or
push
imul
call
cmc
out
sbb
xchg
test
cli
gs
vmovlpd
push
addr16
jl
jo
fstps
fisubrs
xchg
inc
adc
xor
xor
mov
test
lds
outsb
and
or
in
clc
cmpsb
push
fiadds
mov
inc
cld
pop
rcrl
rorb
jo
cmp
ret
sub
jne
stos
push
movsb
fs
and
shlb
sbb
fimuls
inc
cmp
adc
push
js
mov
sahf
sar
sahf
adc
inc
and
pop
les
les
jnp
jne
stos
add
xchg
xchg
sub
imul
lahf
mov
pushf
fisubrl
ficomps
test
int
sbb
adc
pop
rol
andb
sbb
sbb
add
popa
mov
sub
add
add
aaa
sub
orb
mov
mov
push
outsl
mov
fsub
sbb
jle
sub
push
shlb
arpl
lock
xchg
scas
std
adc
sbb
pushf
sbb
in
lods
stc
and
cmpsb
and
push
gs
mov
fldenv
insb
pop
sbb
xor
and
js
cmp
mov
hlt
inc
pusha
outsl
push
lcall
xchg
sub
lret
inc
idivb
lcall
push
and
stc
lods
mov
stc
xchg
jo
jecxz
inc
push
mov
cmp
adc
aad
ret
add
or
stos
lret
data16
rol
loopne
mov
inc
sti
lea
cmpsl
push
cmp
aad
push
xor
sub
and
push
cmc
and
jmp
fwait
sbb
xchg
inc
and
fldt
aas
out
jno
inc
call
test
mov
imul
and
fsubrl
xor
sub
xor
pushf
or
and
arpl
outsb
shrl
test
cmpb
jge
scas
or
jmp
mov
lahf
aam
mov
mov
inc
cmp
scas
out
sub
insl
adc
dec
push
insb
pop
cli
out
pusha
fldenv
cld
sub
loope
int
cmp
nop
inc
bound
pushf
mov
adc
push
mov
mov
lock
inc
call
mov
scas
roll
out
faddl
jg
inc
iret
jp
sbb
inc
jo
cs
and
cmp
sbb
mov
adc
xor
aaa
mov
adc
mov
xchg
mov
test
aad
add
jbe
push
icebp
cmc
jmp
xchg
iret
outsl
sub
adc
rcrb
mov
mov
loope
xchg
es
pusha
leave
jae
or
test
xorb
cmpl
lea
xor
insl
dec
mov
hlt
push
scas
cmp
subl
insb
xchg
jno
jnp
aaa
pmaxsw
shll
fdivl
inc
sbb
adc
jle
and
or
adc
dec
push
addl
or
xchg
imul
clc
push
mov
sub
xchg
mov
sub
out
cwtl
mov
adc
outsb
and
fidivl
xor
cli
adc
or
into
add
data16
subb
dec
and
xor
mov
cmp
xor
adc
xor
out
sar
jecxz
andl
mov
out
sub
xchg
mov
jo
loopne
jp
mov
repnz
ja
dec
push
or
ret
mov
gs
xor
in
test
jno
xchg
loope
mov
adc
xor
cmpsl
pop
push
pop
int3
psllw
pop
add
cld
mov
and
in
inc
mov
cmp
cmpsb
jns
sbb
jecxz
add
push
in
dec
cmp
push
gs
dec
lret
push
fs
insb
cmp
addr16
cmp
aam
bound
mov
cmp
sbb
cwtl
push
lret
lret
loopne
adc
dec
mov
mov
clc
das
push
scas
jbe
cmp
cmc
sub
and
stos
cmpsl
push
sbb
loope
loopne
lahf
aaa
in
cmpl
push
outsl
das
pop
add
inc
scas
lcall
cmp
and
leave
mov
mov
movsl
xchg
inc
push
outsl
push
mov
mov
add
inc
mov
filds
push
je
jg
fs
pusha
or
mov
daa
mov
movsl
faddp
in
jbe
push
imul
sub
mov
data16
adcl
int3
pop
mov
add
lock
mov
xor
push
mov
insb
xchg
out
cld
shr
mov
ja
push
shlb
mov
hlt
in
pop
mov
xchg
xlat
stc
ret
fisubrs
xor
js
or
cli
adc
jns
imul
adc
iret
imul
aam
fmull
push
xchg
call
add
dec
movsl
jge
xchg
or
or
mov
adc
jecxz
add
jae
clc
sbb
repz
xor
xchg
sti
test
inc
mov
loope
stos
sub
test
data16
mov
xchg
fisttpl
orl
sbb
pop
fisttpl
pop
push
ja
mov
mov
jmp
fs
outsl
outsb
mulb
dec
addr16
cmpl
into
lcall
and
loope
clc
pop
jnp
push
jle
cmp
and
call
inc
or
out
inc
imul
ret
dec
xchg
push
fnstenv
cltd
xchg
dec
sub
cli
call
push
push
pop
add
or
loop
repnz
pop
test
adc
sub
pop
addl
cmp
bnd
pusha
cmp
movsb
xor
out
jg
mov
fs
cmpsb
ds
int
cmp
std
enter
sub
fisttps
inc
test
fyl2x
xor
mov
or
lods
fisubs
rcrl
push
jb
ror
cli
jg
mov
lret
insl
scas
cmp
pop
fnsave
cmp
and
cmp
sub
push
dec
and
push
pop
call
in
mov
cmp
jnp
lret
lea
xor
sub
std
push
ret
or
sti
ss
mov
inc
push
jbe
push
ljmp
rcr
subb
xor
push
pop
mov
push
or
mov
cmpl
seta
data16
andb
and
inc
xlat
push
inc
rcll
mov
test
cmp
int3
pusha
mov
xchg
and
sbb
cmpsl
sbb
sahf
and
push
mov
add
xchg
sbb
cmp
sti
aas
push
push
push
rorb
sbb
xchg
inc
sub
lcall
lret
lcall
cltd
mov
out
or
nop
xchg
sbb
mov
das
and
shll
cmp
pop
jno
mov
pop
lock
mov
js
cld
and
pushl
repz
int3
int3
xchg
dec
scas
xor
inc
cmp
jg
push
push
and
int
jp
lcall
pop
cmp
jbe
loop
inc
cld
leave
xchg
dec
cmp
sbb
movsb
sub
mov
les
cwtl
popf
lock
stos
mov
sub
or
ljmp
cld
scas
jmp
std
je
xchg
xor
mov
xchg
or
out
out
sbb
xchg
mov
pop
add
xchg
sbb
ljmp
mov
mov
add
pop
sahf
push
mov
outsl
jg
and
cli
jg
sub
jl
das
clc
jae
insl
pop
sub
rclb
js
stos
sti
addr16
fdivrp
loopne
add
mov
incl
scas
cmpsl
movsb
mov
cli
sbb
in
inc
shrl
or
pop
movsb
bound
adc
push
push
faddp
inc
rcrl
leave
add
arpl
int
lds
add
outsb
fs
pop
shl
js
xchg
into
sub
les
in
or
out
je
sbb
stc
sub
mov
call
mov
push
scas
jmp
les
xchg
cmpsb
sub
rsm
jmp
test
das
nop
bound
loopne
fwait
cmp
and
jno
push
xchg
jnp
inc
loope
je
lods
roll
xchg
xor
cmp
faddl
push
test
pop
mov
inc
sbb
fstpt
mov
jge
sub
push
push
or
cmp
mov
xlat
or
cmpsb
jo
jns
testb
sub
dec
daa
xor
test
cld
jl
xchg
inc
jmp
cmp
imul
mov
dec
push
fs
movsl
dec
stos
ret
sahf
cmp
mov
in
xchg
je
push
jb
add
scas
and
mov
js
add
xor
sub
push
mov
hlt
leave
pop
clc
xchg
and
in
pop
pusha
loopne
ljmp
jne
scas
push
inc
lret
jmp
xchg
int3
sbb
jmp
lods
vcmpps
dec
and
fs
pop
or
aaa
and
mov
cmp
mov
adc
mov
xchg
nop
mov
push
and
enter
addr16
pop
aaa
pusha
test
mov
daa
pop
push
or
inc
fldcw
pop
push
test
inc
hlt
pop
mull
jb
jecxz
aas
sahf
cmpsl
add
test
adc
int3
rorl
sahf
pusha
fiaddl
sbb
add
xchg
iret
hlt
push
and
aad
sbbb
fldl
sub
addr16
inc
in
in
and
insb
add
dec
lea
out
mov
or
add
mov
and
lds
inc
adc
js
push
xchg
jno
push
mov
cmc
fimuls
and
sbb
jbe
dec
jmp
add
push
push
frstor
addr16
out
xchg
add
and
push
jge
push
stos
mov
jne
enter
and
sbb
inc
mov
aam
push
lock
in
xchg
cmp
jle
push
cmp
mov
jge
lcall
lret
inc
inc
sub
ds
mov
or
mov
addr16
push
cmp
dec
and
inc
cmp
dec
adc
clc
inc
sbb
and
sub
inc
add
int
or
jb
jns
mov
jmp
adc
shll
ljmp
jo
jno
arpl
cli
pop
fistl
movsl
cs
lcall
inc
icebp
pop
int3
lods
jae
pop
mov
inc
xchg
xlat
jecxz
xor
mov
xor
mov
add
jle
mov
xchg
out
int3
xlat
cmp
js
movsl
stos
cmovl
mov
inc
mov
cmp
dec
mov
sub
mov
dec
jecxz
cltd
add
xor
int
popa
push
nop
push
xchg
mov
das
push
mov
ja
hlt
push
mov
cmpsl
pop
adc
cmc
lahf
push
xor
inc
in
xchg
dec
orl
addr16
inc
sub
fsts
mov
jo
mov
mov
adc
insl
out
push
fs
je,pt
adc
stc
ja
cltd
fisubrs
push
jno
pop
imul
mov
imul
or
lea
aad
pop
jge
shlb
pushf
xor
and
cs
lret
js
or
notb
mov
ja
outsb
xor
jecxz
hlt
outsl
mov
shr
lahf
and
ja
mov
jnp
scas
pop
lahf
out
fildl
icebp
mov
pop
lock
ljmp
fldt
mov
lret
adc
adc
aad
adc
adc
pop
sub
lock
inc
fisttpll
mov
sub
jg
pop
lcall
outsl
frstor
fwait
mov
call
imulb
dec
loopne
aam
mov
mov
xor
push
stc
fwait
mov
arpl
xor
xchg
push
fcmovnb
test
bnd
aaa
lahf
and
jno
insl
das
ss
call
loopne
outsb
fidivrs
movsl
cmp
fwait
lahf
sbb
xchg
movsl
and
fnstcw
xlat
out
test
das
icebp
fidivl
mov
pop
xchg
sbb
mov
loope
add
adc
mov
inc
add
daa
jecxz
test
pusha
inc
jo
xor
cmpsb
jecxz
xchg
sub
iret
out
into
mov
shlb
lods
rclb
lahf
xchg
mov
cli
int3
cmp
jns
mov
xchg
push
stos
insb
data16
jbe
shll
xchg
lret
les
add
inc
jmp
mov
xor
sbb
iret
outsl
cmp
pop
fbld
pushf
cmpl
pop
and
repnz
loopne
pop
mov
cmp
pop
orl
xchg
popf
out
fisubrs
pop
cmpsb
cmp
add
cmp
xor
divl
xchg
in
decb
clc
sti
pop
shl
jne
push
push
aaa
mov
jl
mov
push
inc
sbb
pop
mov
lods
xchg
sub
nop
insl
sub
out
sub
and
lds
fstl
dec
fmuls
sbb
ss
icebp
arpl
xchg
jmp
outsb
lea
xchg
shrl
dec
repz
das
test
xor
cmp
mov
cmpl
mov
je
xor
fnstenv
aad
sub
insl
or
xor
stc
sub
and
fidivs
das
and
in
dec
shl
xchg
sub
out
cwtl
sahf
sub
ret
fistpll
xchg
notl
inc
inc
mov
mov
insl
bound
jo
aad
aas
popf
xchg
scas
lock
addr16
add
pusha
fistpll
pushl
lcall
shr
test
test
sti
arpl
js
pop
add
inc
push
icebp
pop
mov
mov
insb
enter
pop
mov
jg
loopne
sbb
sbb
fsub
sbb
sub
xorb
dec
mov
cwtl
push
pop
xor
outsl
jmp
aam
addl
fdivs
xchg
loope
jbe
mov
sbb
aam
pop
sub
lods
jp
fs
push
popa
sub
and
popf
shrl
cwtl
dec
pop
lds
mov
pop
jb
stos
jge
or
lret
fisubrl
or
push
xor
aad
mov
rorl
cmpsl
adc
inc
xchg
mov
fucomp
jle
sub
add
sub
adc
pusha
pop
fwait
lea
sub
sub
js
pop
adc
sub
dec
inc
xor
shll
aad
jnp
test
fildl
stc
inc
aam
sti
jg
imul
ja
sti
sti
xor
inc
aam
xor
lret
mov
push
pop
sbb
ljmp
mov
loop
xchg
int
inc
aam
adc
mov
cmp
iret
adc
and
sbb
add
pop
mov
and
repnz
pop
test
iret
loopne
xchg
ficompl
std
ret
aas
sbb
jnp
cld
jl
out
shlb
into
push
sbb
mov
xchg
ja
and
dec
sub
addb
mov
aaa
adc
inc
xor
jge
lock
jne
leave
sahf
int
imul
adc
dec
pop
xor
jmp
add
cmp
and
push
mov
fadd
fildl
andb
sbb
jno
stc
mov
sub
add
xchg
enter
dec
pop
dec
cmp
test
mov
mov
jl
push
cltd
shll
mov
mov
mov
lds
das
loopne
ljmp
ret
arpl
sbb
pop
test
xchg
sbb
mov
mov
mov
and
sbb
mov
int
cmovae
je
jg
std
addr16
jmp
gs
and
aad
cmp
xchg
and
xchg
lock
fstpt
push
xor
jmp
and
mov
test
pop
or
fistpll
movsb
mov
insl
pop
xchg
push
xchg
dec
xchg
ficompl
push
push
pop
inc
cmpsb
ss
sub
loopne
test
popa
adc
cmp
jle
xor
xchg
scas
push
and
sub
clc
imul
cltd
stos
pop
lock
mov
ficoml
xchg
xor
or
push
mov
adc
cmp
mov
andl
mov
dec
lods
inc
mulb
test
jno
sbb
dec
jnp
sarl
subl
sub
cmc
push
cmp
test
repz
dec
sti
data16
adc
shl
adc
mov
dec
sub
jle
dec
mov
in
sahf
std
lea
sub
and
add
inc
das
mov
pushf
rclb
aas
cmp
lea
push
cmp
mull
ljmp
jbe
in
leave
push
push
cmp
and
fists
jae
mov
mov
jns
xlat
ljmp
aas
roll
jae
frstor
cmp
push
push
pcmpeqd
lods
mov
xchg
xchg
or
jecxz
lahf
push
push
jge
shrl
fs
inc
fwait
mov
data16
insl
ja
push
xchg
out
mov
jae
test
aas
subl
add
or
push
sbb
sub
dec
cwtl
out
cmp
dec
mov
fs
das
gs
roll
shr
push
jecxz
mov
or
fildll
sbb
in
push
sbb
sahf
jns
jl
lea
mov
sbb
je
sarl
sub
cmp
pusha
sbb
mov
jbe
daa
out
pop
add
stc
dec
lock
adc
dec
inc
jl
in
mov
cltd
enter
push
in
sub
andl
and
or
xchg
inc
sub
jp
and
mov
jp
mov
pushf
pop
inc
inc
mov
imul
shrl
into
mov
push
js
jo
out
pop
popa
lahf
test
inc
out
fnstcw
jbe
jns
xchg
iret
fcoml
cwtl
nop
nop
xchg
pusha
popl
sbb
ret
push
push
cmp
jo
push
lock
popa
popf
stos
bswap
dec
negb
sub
adc
push
pop
jp
std
xor
mov
sbb
mov
aas
cltd
iret
push
jle
xchg
ret
popf
lahf
ret
mov
lcall
pop
repz
push
sub
les
sub
aas
jge
test
lret
out
shll
and
shll
xchg
or
notl
pop
xchg
subb
inc
cmpsb
outsl
pop
iret
dec
mov
cli
data16
push
dec
cli
xor
in
sbb
xlat
arpl
adc
sub
clc
cli
pop
push
lcall
jne
inc
xchg
shrb
shlb
push
adc
mov
rolb
push
push
xchg
mov
push
sbb
scas
push
int3
sub
push
or
xchg
rcl
cltd
push
cmpl
lahf
cmp
fucomi
and
mov
lret
add
xchg
push
mov
ja
jb
lods
push
dec
dec
inc
fisttpll
js
stos
sbb
push
popa
jle
or
popa
int3
sub
adc
aas
int
stos
mov
mov
sbb
mov
insb
push
incb
mov
jge
out
mov
ds
add
mov
jne
xor
ret
insb
and
shrb
or
xchg
aad
testl
popf
ror
pusha
xlat
fldl
cmp
sub
mov
cmpsb
push
xchg
rcll
int
cs
clc
push
dec
nop
and
push
adcl
mov
mov
dec
mov
das
jno
test
cli
inc
jmp
adc
pop
shrb
push
and
and
test
idivl
in
inc
mov
pop
fwait
hlt
sbb
jo
js
mov
and
daa
jae
mov
xor
lods
mov
mov
lods
hlt
cmp
out
xchg
mov
insl
bound
shrb
cmp
cs
pop
sete
add
cwtl
cltd
mov
jne
mov
xor
jl
mov
jp
sub
pop
fidivl
sahf
imul
inc
cmp
insl
jmp
xchg
push
and
call
in
mov
cmp
mov
fdivl
inc
xchg
adc
pop
mov
mov
mov
jae
addr16
sti
int3
insl
sub
sar
and
inc
hlt
test
dec
in
pop
xchg
push
mov
mov
scas
cmp
insl
js
loopne
jb
sub
cmc
jmp
jle
lea
js
ds
in
mov
xor
jno
xor
adc
mov
sbb
push
pop
inc
cmp
sub
push
inc
push
xchg
icebp
or
mov
dec
enter
sahf
pusha
mov
xchg
pcmpeqb
fwait
add
dec
stos
adc
call
out
jns
pushf
fstps
pop
adc
jbe
xlat
or
mov
dec
sub
jecxz
pop
sub
or
or
mov
fidivl
and
mov
shl
outsb
out
ror
and
fwait
jmp
push
dec
loop
add
mov
scas
test
ret
sbb
jno
sbb
in
sbb
lock
cwtl
inc
add
xchg
imul
movb
bound
jmp
scas
in
xor
add
repnz
sbb
sbb
fdivrs
inc
dec
and
cld
mov
dec
xchg
push
sub
mov
das
scas
and
xlat
inc
pop
lods
pop
outsl
or
mov
lock
ss
jmp
push
pusha
sub
xchg
call
inc
out
xor
scas
mov
mov
push
pop
lret
push
repnz
repnz
cmpsl
add
push
bound
cmpsb
je
dec
inc
cmp
fdivrs
mov
sub
sbb
mov
mov
mov
push
faddp
push
mov
adc
cmp
cmpsl
sti
das
add
sbb
fstpl
push
pop
sbb
push
mov
and
push
aaa
leave
jl
stos
cmp
cs
ljmp
aad
pop
push
lods
outsb
mov
mov
imul
pop
movsl
stos
cmp
mov
lods
shl
mov
mov
pop
push
hlt
fmul
xlat
in
dec
sub
xchg
je
mov
sti
sub
sahf
xchg
xchg
push
popa
sbb
push
arpl
xchg
addl
aaa
cmp
add
and
or
or
pop
int
add
int3
xor
les
mov
pop
out
dec
jmp
add
das
xchg
pushl
cs
sub
jns
lock
in
or
out
push
dec
jg
pop
jnp
clc
xchg
jae
enter
dec
fs
dec
aam
or
mov
and
cmp
mov
xchg
xor
sub
adc
in
add
sub
inc
push
pop
shll
or
mov
roll
fst
lahf
cmpb
mov
mov
jbe
mov
fs
stc
fdivs
fcoml
ja
mov
test
lret
out
mov
scas
dec
adc
xchg
in
lret
and
lds
mov
dec
int3
loop
lahf
or
jge
lret
imul
insb
jo
adc
imul
sbb
sub
or
xchg
mov
cmpsb
outsl
sub
mov
xchg
sub
or
les
add
out
sub
nop
stos
insb
push
sub
xchg
and
data16
shlb
gs
ds
adc
xchg
addr16
scas
cld
repz
addr16
incl
vlddqu
jno
test
jmp
sbb
test
daa
hlt
xchg
fwait
inc
je
mov
clc
inc
fidivs
repz
pop
cmovbe
sti
ljmp
cmp
rol
inc
roll
dec
lock
test
js
sbb
das
dec
outsl
mov
adc
dec
dec
dec
mov
push
mov
and
mov
addr16
movsl
shll
adc
sub
or
mov
xchg
movsb
inc
mov
notb
or
or
shlb
cltd
dec
mov
or
mov
imull
out
add
inc
add
cmp
loop
sbb
out
mov
mov
push
sbb
cli
mov
or
ss
or
xchg
pop
adc
icebp
orb
push
xchg
scas
mov
ljmp
stc
fcomip
xor
jmp
fwait
stos
add
sub
and
push
ja
sarl
mov
push
cltd
popf
ljmp
mov
pop
fisubl
jecxz
jmp
mov
ja
stc
mov
and
dec
jecxz
iret
in
sub
xchg
scas
mov
aam
mov
push
ret
xlat
or
ss
xor
xchg
call
jno
in
js
xchg
repnz
jns
movsl
mull
lea
lea
pop
subl
xchg
inc
add
and
lock
xchg
gs
test
ret
or
jne
testb
mov
and
daa
and
test
aaa
mov
inc
mov
lret
in
push
rclb
fdivrs
dec
sub
out
mov
xor
sbb
cmp
gs
xor
xchg
pop
pop
xchg
xlat
scas
jo
push
repnz
das
shrl
mov
mov
pop
cmpsl
pop
sbb
mov
or
mov
jp
dec
xchg
aad
rcll
jae
or
push
mov
lcall
sbb
aas
jg
mov
mov
icebp
int3
sub
and
lods
out
dec
dec
out
rolb
mov
or
mov
jecxz
mov
cmp
das
jp
or
test
test
mov
lret
push
pop
insl
lods
or
adc
cltd
in
dec
or
test
jb
dec
and
popa
push
out
les
cmp
cmp
aad
mov
pop
fmul
loop
mov
inc
dec
repnz
notb
cmp
das
ret
pop
gs
or
nop
incl
shlb
ja
jns
int
stos
mov
dec
cmp
push
push
or
jns
insb
xchg
mov
mov
nop
clc
rcl
jmp
fnsave
mov
inc
dec
inc
cli
push
pop
or
fnstsw
add
dec
movsb
cltd
minps
repz
mov
sbb
iret
data16
insl
cltd
addr16
lahf
loop
cmp
lea
sbb
add
pop
or
stos
enter
shrl
jnp
mov
mov
pop
xor
dec
pop
mov
mov
push
rcrl
push
pusha
popa
lret
jmp
sub
xchg
jbe
xor
imul
xor
jg
add
gs
cmc
add
insl
ret
fs
add
arpl
shll
pop
adc
jno
ss
xor
mov
sahf
ret
das
arpl
add
xor
xchg
aad
add
jle
jae
add
dec
addr16
rorl
xchg
push
fmul
lcall
cltd
int3
test
cmp
inc
imul
mov
daa
sbb
pushf
xchg
sbb
jg
and
add
jb
push
inc
lret
push
dec
es
loop
sti
sbbl
pop
ljmp
jecxz
sub
cwtl
or
fdivrs
cmpsb
aaa
jle
mov
push
push
lahf
lods
inc
divl
or
cltd
mov
jg
xor
jne
fsubrs
sub
adc
scas
ret
popf
ficomps
mov
mov
sarb
cmp
mov
push
and
sarl
pop
ret
ljmp
mov
sbb
sbb
dec
lods
cwtl
xchg
incl
pop
in
pop
leave
fnsave
pop
fwait
dec
lret
std
fmull
fldcw
pop
outsl
ficoml
sti
test
cmpsb
sbb
and
adcb
lret
mov
dec
out
gs
xchg
jns
pop
dec
mov
mov
sub
dec
leave
cli
int3
xor
sahf
cwtl
sub
fsubs
jle
movsb
xchg
clc
int
enter
ret
scas
jno
mov
cld
pop
sub
test
adc
dec
nop
insb
js
xor
and
pop
inc
and
scas
leave
nop
cmc
cmp
mov
jecxz
cltd
xchg
mov
insl
pop
hlt
test
xchg
test
inc
ja
and
mov
mov
fwait
lods
and
lods
mov
ret
scas
mov
and
xchg
or
icebp
sahf
mov
inc
enter
dec
cmc
das
out
pop
xchg
jle
adcl
int
mov
out
aad
mov
fisubs
xor
lods
xorl
and
or
mov
push
subb
gs
cmp
iret
add
mov
fs
pop
cmpsb
jo
test
push
aaa
jns
jmp
dec
dec
push
xchg
iret
jl
and
out
loop
imul
jp
popl
adc
gs
push
add
and
cmp
iret
dec
rcr
ss
cmpsb
outsl
push
xor
jmp
pop
fisttpl
in
adc
les
xchg
jl
out
imul
scas
mov
add
or
outsb
fs
jbe
out
repnz
push
movsl
adcb
cmp
lods
jns
xchg
icebp
mov
adc
iret
mov
cmp
add
or
mov
pusha
gs
lcall
clc
sahf
arpl
fnstsw
push
or
shrb
and
jp
dec
add
add
inc
loopne
lds
cmp
in
inc
add
add
mov
or
cmp
movsl
scas
push
xchg
cmc
outsb
dec
cli
xchg
sti
push
xchg
fbld
lods
cltd
dec
pop
ds
hlt
cmpsb
cld
sarb
mov
orb
int3
inc
jmp
ror
movsl
sahf
mov
fadds
bound
mov
mov
cmc
int3
ss
ror
inc
mov
aam
cmp
ret
pop
sub
mov
pop
dec
and
pushf
shl
rclb
mov
sbb
fwait
cmc
adc
adc
gs
int3
ja
mov
out
add
movsb
fdivrl
jbe
add
dec
test
mov
loopne
jecxz
inc
jno
jo
negb
jecxz
dec
xor
add
or
or
jmp
es
movsb
inc
sahf
test
xor
mov
bound
add
mov
repz
clc
rcrl
pop
aad
adc
cmp
in
daa
js
dec
add
fistpl
loopne
cmpl
cmp
test
inc
xchg
pop
sub
mov
loopne
test
mov
xor
orl
and
adc
jne
dec
ret
out
shrl
add
fists
cmpb
or
out
jl
or
push
mov
or
or
inc
sub
push
adc
rclb
sbb
lds
mov
fidivrl
cmp
push
or
fucomp
lret
xchg
ja
push
ficomps
je
push
xchg
adc
outsl
cmp
rorl
iret
push
mov
sbb
adc
shll
test
loopne
adc
pop
rcll
outsl
clc
cmc
add
mov
lock
lock
in
jb
inc
adc
addr16
loopne
jmp
add
aam
call
cmp
jb
push
dec
pmovmskb
inc
jmp
stos
adc
inc
fnsave
mov
sti
or
jae
and
xchg
dec
push
out
mov
sti
inc
out
fs
pop
pop
xlat
adc
or
adc
push
inc
xor
push
xchg
push
jns
add
jp
mov
mov
and
rol
jae
pop
pushf
sbb
popa
pop
push
jno
es
std
movsl
mov
and
cs
pop
adc
push
lock
leave
sti
arpl
mov
lret
mov
add
pop
fimuls
mov
fisubrl
cmc
cmpsl
icebp
lds
jecxz
arpl
inc
or
mov
pusha
pop
fisubl
pop
icebp
dec
push
sbb
loop
scas
sub
pop
or
pop
lock
pushf
push
negb
cmp
mov
pusha
sbb
shll
fisttpl
or
or
hlt
xchg
adc
in
shl
sahf
adc
lds
outsb
test
stos
pop
sub
or
sub
push
pop
adc
js
std
push
mov
scas
std
imul
rcrl
std
inc
inc
jecxz
fadds
dec
or
cwtl
movsl
daa
cltd
and
cmp
scas
push
loope
into
test
dec
mov
roll
push
imul
nop
in
push
test
add
mov
rcl
jns
fwait
sarb
out
pop
jae
jg
jecxz
push
lods
pop
int
pop
xchg
or
inc
xchg
jbe
ret
mov
hlt
inc
subl
sarb
push
hlt
arpl
mov
or
pusha
cld
xor
leave
xchg
dec
mov
sbb
mov
cmp
xchg
cwtl
xchg
add
icebp
pop
cltd
addr16
gs
icebp
daa
xchg
jmp
pop
arpl
sub
iret
sti
inc
sub
jg
xor
sbb
xor
inc
xor
icebp
pop
pop
and
adc
mulb
pop
adc
in
nop
rorl
and
xor
xorl
mov
sub
mov
mov
sub
pop
cmp
inc
push
in
push
popf
cmp
pop
sub
push
dec
sub
dec
rcr
cmovg
add
mov
int3
mov
adc
out
outsl
mov
dec
push
jle
cs
pop
cmp
mov
hlt
cmpsl
testb
push
or
outsb
jg
stos
insl
jns
data16
stc
push
mov
add
repz
mov
inc
push
inc
sub
stos
jg
xor
ds
sub
in
mov
out
jns
mov
lret
push
pop
cltd
ror
inc
fcomps
inc
in
insb
mov
outsl
jp
sub
fwait
negl
jno
mov
push
jbe
ficompl
loope
xchg
in
es
lret
inc
or
lret
mov
cmc
lahf
add
shlb
icebp
fs
mov
mov
out
in
xlat
sub
add
pop
arpl
jl
add
push
jno
sub
insb
hlt
into
inc
orl
popa
xor
jle
std
fidivs
lret
push
xorb
popf
repz
stc
dec
jns
push
jae
loop
push
cmp
mov
push
or
stc
xchg
push
sub
push
icebp
pop
jnp
mov
cmpsl
pop
pop
push
mov
loopne
pop
pushf
popf
mov
push
mov
cmpsb
loop
push
fdivrp
pop
repnz
leave
xor
inc
pushf
movsl
inc
pop
fs
pushl
lret
xlat
nop
or
lcall
scas
and
das
lahf
insl
and
inc
push
pushf
mov
mov
movsl
iret
jo
shl
jle
jnp
lock
mov
mov
lds
xor
or
in
movl
xor
adc
push
and
xor
mov
test
stc
mov
and
aas
enter
xchg
les
icebp
mov
test
jae
cld
xchg
sub
push
fmull
pop
cld
jl
movsl
pop
ja
push
test
aad
loop
and
insl
and
and
dec
test
sub
add
stos
cmp
cmp
and
dec
sub
jle
cmp
mov
jo
int
loope
cltd
cmp
jb
jmp
pop
lret
out
subl
fucomp
enter
inc
shr
mov
cmc
cld
stos
mov
stc
dec
jo
lock
pop
sbb
cmp
scas
add
mov
nop
mov
loopne
pop
mov
push
and
orl
adc
cmpsb
or
pop
pop
push
filds
daa
inc
lcall
inc
dec
les
insb
or
lods
mov
mov
pop
sub
jg
jecxz
cmpsl
xchg
pushf
out
xchg
push
push
mov
jmp
inc
jns
xchg
aam
cmp
mov
mov
push
cmpsl
das
lcall
push
out
out
add
stos
jp
sub
and
add
adc
sbb
mov
push
je
in
repz
jnp
dec
pop
sysret
or
aam
push
xchg
push
dec
sub
inc
fnsave
mov
adc
cmpsl
jmp
fnop
in
mov
test
pop
loope
or
pop
xchg
sub
jg
mov
mov
lahf
lcall
push
pop
call
mov
dec
rclb
aad
pop
ret
jbe
push
mov
adc
sarb
adcl
out
addr16
daa
out
jl
inc
mov
addr16
mov
mov
fisubs
test
mov
aad
sbbb
adc
dec
sbb
lds
imul
xchg
mov
add
xchg
jbe
or
push
mov
inc
daa
adc
sbb
cmp
int3
lods
testb
pop
sbb
mov
cs
pop
enter
pusha
sub
xchg
es
push
cmpsl
add
xchg
or
sar
or
rcrl
leave
mov
add
aaa
fsubrs
stos
ss
cltd
xor
pop
ljmp
stos
ja
dec
repnz
test
dec
inc
mov
das
cmp
pop
push
or
cmc
xchg
popf
inc
dec
mov
jl
gs
push
lahf
insl
xchg
loop
jnp
inc
lret
adcb
out
es
sbb
movsb
add
cmp
jle
outsb
popa
or
xchg
fistps
rolb
aam
arpl
inc
jmp
lret
mov
adc
scas
inc
stos
cmp
outsl
push
xacquire
cmp
lods
sahf
sbb
je
and
scas
add
fsubrs
sbb
adc
inc
outsl
and
dec
push
xor
mov
out
sbb
jp
push
pushf
mov
outsl
sub
gs
hlt
mov
ds
popa
and
in
icebp
and
fdivrs
sbb
mov
and
enter
sbb
test
aad
pop
pop
popf
mov
iret
out
pop
pusha
xor
imul
out
mov
pop
cwtl
xor
cmp
adc
pop
push
imul
mov
pop
mov
jg
jge
sbb
sub
xor
rclb
nop
adc
push
push
xchg
add
sbb
xchg
mov
cmp
push
subl
xor
mov
and
jle
xchg
push
push
out
xchg
sub
add
jg
xchg
call
les
cmp
ret
nop
stos
jbe
or
push
push
pushl
inc
out
xchg
adc
adc
cmp
push
jecxz
cmp
mov
enter
hlt
fs
sub
clc
lods
repnz
aad
cld
aaa
es
ljmp
sub
jge
push
pop
dec
inc
mov
shrl
sub
lcall
jbe
jb
push
loop
bound
push
mov
imul
push
imul
mov
pop
imul
dec
pop
cmp
nop
lea
cmp
mov
add
outsb
repz
aad
mov
bound
test
pop
adc
and
aam
push
mov
cmp
aaa
add
testb
sbb
in
rcrl
add
mov
xor
jne
cmp
and
cmpsl
std
pop
mov
mov
pop
test
test
mov
cs
lret
jo
call
lret
lea
mov
in
sti
xchg
dec
mov
sub
loop
jmp
enter
inc
mov
mov
xor
or
xlat
out
fisttpll
xor
vpmacsswd
sub
cwtl
dec
test
xchg
in
popa
add
aas
out
stos
sahf
out
mov
mov
out
loope
push
je
mov
xchg
imul
arpl
scas
add
fs
adc
stos
dec
insb
popa
or
aas
push
mov
ljmp
cwtl
test
fildll
pop
fadds
or
pushf
pop
mov
mov
cltd
mov
rolb
cmp
cwtl
cmpsb
xchg
aad
xor
fisubs
pop
sarb
lret
push
xchg
adc
gs
in
cmp
ds
push
cmp
insl
test
adc
and
pop
adc
push
inc
mov
int3
lcall
mov
add
adc
push
sub
aaa
pop
test
xor
lods
shr
pop
adc
add
ljmp
call
cmc
jns
push
or
call
jp
jl
loopne
add
cmpsb
sub
imul
push
jmp
lock
xor
test
inc
test
mov
cmc
add
dec
scas
call
xor
and
movsb
sbb
xchg
jmp
mov
sub
scas
into
sarb
xor
adc
xchg
ss
popa
xchg
fbld
call
out
xlat
pop
outsb
idivb
adc
and
pop
jb
aas
dec
mov
outsb
push
test
nop
push
mov
into
cmp
dec
movsb
or
cmp
insb
pop
sub
jle
pop
jbe
jae
jmp
push
imul
cmp
xor
nop
jmp
pop
pop
sbb
cmp
incl
ret
sbb
test
stc
adc
mov
xchg
mov
stos
or
data16
xor
pop
pop
push
call
pop
jecxz
popa
pushf
sub
mov
adc
sub
mov
xor
js
pop
jns
addl
lahf
push
mov
fldl
mov
xchg
adc
push
mov
in
mov
sti
insl
mov
cltd
xchg
xchg
std
add
scas
aad
mov
incb
fiaddl
sbb
nop
adc
push
ret
aad
imul
scas
ljmp
and
jmp
xor
and
cmp
pop
testb
jmp
scas
push
in
xorl
sbb
pavgb
in
es
adc
js
mul
es
xor
insl
out
inc
insl
cmova
push
fidivrs
push
fs
inc
jnp
adc
int
loopne
pop
fcomi
inc
les
adc
xchg
push
lcall
shl
gs
ret
mov
xorl
sbb
push
or
mov
mov
cmpsl
pop
sbb
mov
scas
and
xchg
pop
div
add
lahf
inc
ljmp
rorl
and
idivb
stos
sbb
push
sbb
xchg
jl
inc
fcoml
lods
push
xor
andb
and
movsl
leave
scas
lret
test
cmp
insb
fstps
cwtl
cmp
mov
ja
and
pusha
mov
imul
cmp
orb
ss
or
mov
into
popa
jne
movsl
in
lds
or
inc
pop
out
inc
jl
mov
sub
das
andb
add
sbb
fidivrl
insl
pushf
dec
leave
rorb
inc
enter
outsb
push
cmp
xchg
jmp
dec
sbb
cmc
push
jl
icebp
mov
xchg
iret
mov
das
jl
jle
mov
icebp
mov
lahf
dec
sub
dec
inc
jbe
jecxz
leave
jmp
imul
jnp
cmp
pop
add
fisttpll
loop
and
clc
or
add
cltd
jmp
inc
pushf
sbb
pop
xchg
cmp
je
pop
mov
inc
xor
ret
xor
dec
sub
dec
jbe
mov
sub
je
cltd
dec
mov
mov
or
lea
cltd
dec
sbb
xchg
xorl
hlt
xor
repz
xchg
mov
cmc
xor
mov
imul
dec
lret
gs
clc
pop
arpl
mov
lock
test
push
ss
or
or
clc
jnp
ret
pop
enter
in
jl
nop
es
pusha
xchg
in
bnd
xor
imull
jns
shr
or
or
je
rcll
push
out
fs
mov
xchg
sarl
cltd
popf
push
and
stos
out
push
pop
cli
pop
sbb
scas
or
lock
lods
xor
xchg
xor
push
xchg
in
or
jbe
fucomip
push
dec
add
xor
lock
addr16
dec
sub
int3
jbe
lods
repnz
ljmp
add
and
cwtl
pop
push
pushf
add
ljmp
inc
push
dec
sbb
mov
xchg
sbb
xor
pop
and
mov
mov
ds
inc
xor
in
and
xchg
ds
inc
cmp
mov
jno
in
leave
mov
fs
in
outsl
ljmp
lret
dec
xchg
ss
jae
je
mov
cs
hlt
add
jmp
adc
mov
std
ljmp
out
jbe
jmp
andb
and
fsts
xor
sub
push
fstps
rorb
jle
iret
cmpsl
insb
clc
fidivl
sahf
push
rcrl
in
pop
sbbl
cld
xchg
cwtl
rcl
rorb
mov
movhps
cmp
mov
rcrb
je
outsb
popf
mov
lods
xchg
int3
loope
aad
pushf
nop
cmp
jge
ja
dec
xchg
lock
ja
mov
insl
add
cmp
imul
lock
inc
sbb
xlat
cli
or
sbb
lds
inc
cmp
inc
pop
add
test
sbb
jo
scas
out
mov
aam
xchg
ja
jns
scas
incl
mov
mov
sub
addr16
lret
arpl
push
fwait
xchg
jb
stos
jmp
icebp
aad
fistps
nop
cmpb
add
scas
leave
pop
cmp
dec
jle
and
iret
test
sub
lret
or
add
lret
ss
mov
rorb
jl
xchg
das
and
andl
push
jbe
add
scas
inc
jo
cmp
jb
std
dec
in
mov
imul
jns
hlt
loopne
dec
fxch
lahf
mov
aad
test
in
movsl
aad
mov
jns
adc
or
sub
les
dec
outsl
and
mov
iret
loopne
loope
inc
xchg
mov
pop
cmp
sub
push
lahf
xor
jg
xchg
insl
sbb
mov
mov
aas
aam
in
mov
dec
dec
mov
data16
jne
call
jge
dec
add
mov
lahf
or
jp
cli
jmp
push
mov
fnsave
insl
mov
or
sahf
mov
push
or
ret
jns
pop
mov
xchg
adc
pop
je
pop
mov
xor
jo
fstps
sub
sub
aas
dec
pop
push
pop
mov
inc
rolb
out
pop
mov
inc
cs
mov
sbbl
add
cmp
pop
lcall
in
or
nop
cli
mov
stc
cmpsb
lock
push
jnp
xchg
mov
sub
ja
aas
mov
int3
pop
dec
mov
arpl
pushf
aas
pusha
aam
in
pop
nop
push
out
fiadds
dec
nop
jl
aam
les
fiaddl
jmp
xchg
outsl
pop
sbb
fs
leave
xchg
adc
jl
jmp
xchg
sbbl
sbbb
fucomi
stc
lock
xchg
mov
sub
das
inc
je
pushf
cmp
mov
decb
jmp
fdiv
sub
push
inc
mov
mov
mov
aaa
gs
ret
xor
mov
call
mov
xchg
push
data16
or
lahf
fcmovu
sbb
cmp
push
inc
pop
add
mov
ficoms
xor
std
out
or
sub
mov
or
cld
mov
stc
or
or
repnz
popa
aaa
dec
mov
aam
sti
mov
push
out
fnsave
inc
push
test
popf
sub
inc
ret
out
add
push
fs
xchg
xchg
js
or
or
leave
jecxz
sbb
push
jmp
fwait
lret
arpl
xlat
ret
cli
shll
stos
mov
xor
or
fstl
jecxz
fs
imul
stos
cmp
xchg
adc
out
sub
sahf
data16
xor
mov
je
add
and
cmp
cli
cmp
push
inc
adc
jp
fisubrs
mov
dec
jb
rcll
scas
sub
pop
scas
imull
push
data16
add
lea
out
mov
imul
push
test
adc
mov
inc
icebp
clc
outsb
sahf
mov
and
jmp
jge
mov
mov
clc
mov
xor
lock
xor
mov
imul
movsb
xchg
lret
outsl
test
and
mov
inc
add
xor
ja
cmp
sub
and
add
repnz
mov
jbe
jnp
nop
add
jp
xor
mov
test
pop
ret
mov
or
lods
movsl
data16
cmc
scas
pop
insl
adc
int
lods
sarb
pop
dec
dec
lock
fcoms
sub
int
mov
inc
test
sub
sub
pop
sub
push
sub
xchg
scas
aad
mov
or
fs
xor
addr16
pop
push
imull
and
rcrb
insl
sub
test
sahf
dec
dec
xchg
hlt
jns
loope
push
jecxz
adc
mov
xor
clc
gs
or
addl
sbb
mov
or
jno
shlb
lret
xor
out
int3
das
jg
jae
add
dec
pop
cmp
and
and
add
mov
and
pushf
cli
divl
js
push
inc
rorb
mov
sub
ret
dec
subl
push
ljmp
test
push
out
xchg
lcall
adc
mov
and
xchg
popa
xchg
insl
fnstenv
adc
adc
flds
add
in
cmp
lcall
mov
into
js
inc
cld
arpl
sub
fidivs
or
ret
jmp
mov
fidivrs
divl
cltd
fwait
mov
push
or
call
sbb
xchg
mov
push
sarl
ljmp
popf
mov
inc
imul
insb
repz
mov
add
test
mov
js
mov
xchg
loop
leave
sbb
jbe
ja
dec
jmp
sub
daa
xchg
xor
dec
les
hlt
mov
push
fcoms
jb
mov
out
ffreep
cmp
cli
mulb
daa
adc
call
stc
push
test
pop
int3
cmpsl
pop
push
dec
shlb
dec
mov
arpl
adc
pop
push
pop
es
dec
pusha
xchg
cmp
aam
fwait
insb
sbb
jb
dec
dec
pop
fsubrs
dec
fwait
pushf
pop
icebp
sub
sub
mov
in
in
hlt
xchg
addl
int3
adc
das
outsl
fucom
add
les
fucomp
mov
sbb
shlb
fidivrs
mov
mov
outsl
shl
test
jle
lods
fwait
loop
and
fstpt
cmpsb
pop
addr16
rcrb
pop
aad
ds
adc
pop
sbb
xchg
repnz
inc
out
lock
popf
dec
mov
sbb
mov
push
fimull
and
pop
gs
loope
in
push
cmp
pop
mov
in
mov
stc
pop
in
xor
adc
loop
push
je
mov
inc
fwait
loopne
mov
inc
add
in
push
sub
pop
inc
es
addr16
fldt
push
xchg
or
ffree
notb
push
lahf
lods
dec
cmpsl
mov
adc
shrl
mov
mov
popa
mov
lcall
loop
inc
inc
mov
sbb
xorb
pop
inc
in
hlt
push
push
cwtl
into
mov
out
mov
out
pushw
push
iret
mov
stos
cwtl
int
mov
scas
sbb
dec
or
pusha
ds
loope
add
jno
inc
lahf
sbb
xor
inc
addb
xchg
mov
ds
pop
mov
xchg
and
cwtl
inc
movsb
cmpsb
fisttpl
sbb
subb
xchg
jle
mov
mov
sub
adc
adc
mov
dec
jne
mov
push
sub
jne
push
cwtl
rolb
mov
xchg
xor
insl
call
push
ret
iret
cmp
jmpw
lret
cmpl
pop
ds
stc
and
cmp
jp
mov
mov
imul
scas
inc
push
fwait
jg
fsts
stos
outsb
filds
push
cwtl
push
rol
cs
insb
call
inc
mov
add
sbb
stos
pop
les
xchg
jp
ss
push
loope
xor
mov
jns
stc
aas
pop
inc
xor
imul
pusha
js
cli
xor
rcll
arpl
ret
rorl
fstpl
cwtl
mov
push
jp
pushf
pop
lods
cmp
arpl
lock
pusha
dec
rcll
inc
jle
cmp
xor
stc
or
add
lcall
jge
xchg
loopne
lea
mov
mov
outsb
pop
lret
imul
jo
fidivrl
mov
mov
aam
mov
cmpb
xor
and
push
jl
xor
push
jno
add
es
push
and
stos
jmp
mov
fs
movsb
jno
add
sahf
adc
inc
pop
sbb
push
cmp
movsb
int
out
mov
je
data16
xor
mov
popf
mov
fiadds
neg
pop
mov
imul
dec
push
mov
or
in
lret
negl
dec
mov
jg
pushf
mov
stos
push
push
or
daa
cmpl
mov
mov
lea
arpl
and
int3
pusha
cwtl
mov
test
int3
popf
sub
mov
inc
leave
addr16
js
mov
sbb
lods
cmp
dec
or
or
and
jmp
xchg
push
sahf
sub
jle
xchg
hlt
popf
je
cmp
fldcw
mulb
push
lods
lcall
repz
in
loopne
mov
pop
data16
mov
popa
out
mov
repnz
scas
mov
push
add
mov
sub
mov
hlt
inc
mov
sub
cmp
arpl
hlt
sbb
daa
push
std
mov
pop
mov
ret
movl
xorb
lret
es
fldcw
bnd
bound
xor
dec
dec
push
cmp
push
outsb
push
xchg
and
enter
cld
xchg
std
movsl
xor
and
test
adc
push
outsl
data16
mov
dec
dec
jecxz
sub
loope
daa
lahf
mov
adc
push
aam
mov
pop
jbe
fnsave
or
jno
outsb
into
lds
jo
lcall
mov
xor
xor
inc
movsl
fcompl
jecxz
or
mov
adc
repz
cmp
xor
sbb
sahf
arpl
adc
mov
xlat
cmp
in
xchg
sbb
mov
les
xchg
mov
cld
mov
scas
mov
into
lods
push
dec
pop
add
mov
jmp
scas
stc
pop
and
stos
stc
cmpsb
es
and
out
imul
push
insl
sahf
mov
push
sbb
lret
mov
push
loop
xor
inc
aam
lahf
sbb
pop
test
sub
dec
sbb
mov
test
sti
ja
lock
cmc
in
or
mov
adc
push
push
mov
cmp
mov
bound
icebp
add
push
cld
aaa
ret
jge
jmp
push
fwait
inc
shrl
sbb
jmp
or
aad
rcr
dec
and
rcll
sbb
xchg
mov
loopne
rol
push
shrl
aaa
xor
xchg
adc
decl
mov
mov
iret
movsl
data16
bnd
sub
dec
cli
or
lcall
push
mov
adc
outsl
pop
inc
je
xchg
aas
pop
icebp
aas
call
sbb
adc
fisttpll
add
pop
fistl
pop
dec
fwait
out
fs
mov
sbb
inc
sbb
mov
inc
pop
jg
out
js
add
xchg
adc
inc
mov
push
out
xor
bound
xchg
das
mov
insl
mov
push
sub
inc
mov
xchg
ja
adc
movsl
loopne
imulb
xchg
lea
xor
inc
test
sahf
dec
shrl
xchg
mov
and
dec
std
push
std
ss
ja
adc
icebp
add
je
dec
daa
std
or
add
ss
into
or
sbbl
into
mov
test
aaa
subb
popf
push
popa
mov
ret
stc
icebp
jl
rcrl
add
mov
add
aaa
inc
movsb
push
xchg
int3
lea
hlt
lret
lods
fwait
xchg
push
ja
jno
fs
mov
test
cli
neg
adc
addr16
mov
inc
daa
jg
xor
pop
cld
pop
gs
mov
xor
stos
xor
outsb
mov
test
cmc
xor
adc
sub
sub
lahf
sub
jle
cld
shl
inc
subl
jl
imul
test
popf
push
push
dec
xchg
cld
push
sti
jmp
out
subb
jb
sti
mov
cwtl
push
push
sbb
popa
int
scas
jae
push
dec
mov
ss
shrl
ret
xchg
jmp
popf
cmp
stc
or
pop
pop
xor
jl
inc
mov
leave
dec
cld
xchg
xorl
fidivrs
mov
scas
jmp
inc
es
cmp
sbb
dec
pop
inc
in
cmpsl
xchg
jle
ss
inc
add
popf
inc
lcall
adcl
mov
insl
xor
mov
dec
add
mov
pop
pop
fwait
insb
stos
cmp
rcrb
je
and
sbb
jne
or
mov
and
in
loopne
or
xor
xchg
pushf
push
lcall
inc
loop
in
push
mov
gs
movsl
scas
es
cmp
enter
inc
mov
push
mov
je
mov
pop
lods
arpl
xor
daa
ljmp
or
je
cmpb
cld
cld
addl
test
add
stos
cmpsb
and
dec
pushf
or
jmp
mov
mov
adc
mov
push
cmp
mov
or
insl
and
jb
rsqrtps
pop
pop
aad
repz
testb
pop
mov
lret
or
lret
mov
hlt
lea
jmp
enter
push
pop
fildl
loope
ljmp
jb
scas
xor
pop
and
sahf
test
cvtpi2ps
sbb
mov
pushf
sbb
mov
jp
sbb
inc
ret
cwtl
cmp
mov
repnz
cmpl
xor
xchg
push
cwtl
jp
sti
mov
xor
sti
hlt
cmpsb
inc
push
xor
mov
out
sbb
clc
in
pop
les
cmc
sbb
repz
loopne
lds
and
mov
sahf
add
xlat
adc
mov
pop
xchg
adc
sahf
xchg
mov
mov
movsb
adc
test
clc
mov
test
mov
jbe,pn
in
sbb
insb
test
inc
insb
mov
pop
adc
fstl
fs
inc
mull
dec
ja
dec
push
test
inc
fbstp
pop
dec
xchg
test
adc
sbb
cmp
xchg
iret
clc
add
fst
std
bnd
push
add
shrb
add
js
aaa
xchg
cmp
sub
dec
call
rorl
jl
lret
pop
leave
in
and
sbb
aam
int
lcall
sbb
adc
ljmp
pushf
adc
insb
lret
rcr
xchg
mov
adc
xchg
cmp
inc
addr16
sbb
lret
cwtl
sti
mov
test
dec
pushf
in
pusha
or
filds
cmp
jbe
push
mov
mov
cmp
xchg
push
cwtl
push
fwait
or
jecxz
lock
loope
or
mov
mov
addr16
shll
rcl
sub
cmc
imul
shll
mov
fdivr
add
test
ret
cs
shll
jmp
mov
orl
push
jecxz
aaa
or
jle
pop
mov
mov
mov
je
rcrb
gs
dec
sub
mov
cmp
add
cmpsl
jmp
popf
sbb
cmp
mov
or
cmp
jne
es
cmp
cmpsl
and
pop
mov
in
insl
loop
les
jl
pop
or
mov
addr16
gs
sub
mov
xlat
das
loopne
jne
fisttpl
int
stc
xchg
pop
adc
fldl
push
mov
ds
out
lcall
clc
rol
sbb
pop
xlat
xor
fwait
jo
sbb
or
push
cmp
push
mov
icebp
mov
das
ss
bnd
ja
pop
popf
js
sti
xor
mov
and
into
insl
mov
iret
push
add
mov
xchg
testl
jns
dec
cmp
aad
dec
jmp
cmp
mov
mov
scas
mov
ret
inc
xchg
mov
test
in
outsb
loope
insb
sbb
add
adc
sbb
jns
pop
or
adc
minps
dec
push
pop
addr16
xchg
push
movsl
adc
filds
and
adc
movsl
shl
pop
in
push
and
fcmove
pusha
stc
lods
ja
push
loop
pushf
stc
fs
add
inc
mov
int
jge
inc
jne,pt
mov
fwait
xor
cmpsb
aaa
cmp
xor
jecxz
lods
repz
add
mov
dec
insl
jl
gs
pop
xchg
jb
out
mov
mov
das
ds
inc
add
outsl
fldenv
loope
cli
jbe
cmpb
outsb
pusha
jne
test
test
or
mov
pop
push
xor
cmc
inc
sub
fdivp
stc
lea
and
xchg
je
icebp
sub
xlat
in
xor
imul
push
xor
and
fisttps
push
shl
cs
jnp
outsb
shl
inc
hlt
push
nop
dec
adc
jle
test
adc
imul
andb
pop
dec
cmp
mov
ja
xchg
pop
mov
dec
es
es
in
fisubrl
jne
inc
stc
mov
cmp
pop
test
pop
jmp
iret
ret
mov
lcall
popf
aas
xchg
sbb
stos
js
and
leave
divb
das
out
push
xor
add
cmp
adc
adcl
pop
xor
adc
bound
xchg
rcll
sub
scas
ja
cld
aad
xbegin
xchg
jb
xor
sbb
inc
rcr
mov
mov
popf
jb
adc
pop
push
or
lret
dec
xor
xchg
add
dec
mov
in
dec
sahf
push
cli
call
or
dec
dec
test
adc
stos
int3
mov
scas
aaa
adc
loopne
inc
mov
or
inc
and
lods
pop
mov
adc
sbbl
adc
sub
clc
jmp
std
cmp
dec
adc
loope
push
adc
add
scas
testl
mov
pop
arpl
mov
ret
cli
aas
mov
xor
sbb
and
scas
lock
pop
add
pop
std
dec
sbb
cltd
imul
mov
push
xor
loope
push
lds
fcmovnu
inc
loopne
xchg
or
sub
popf
sahf
pop
cld
mov
or
out
jmp
and
imul
jg
mov
or
cmp
aas
add
insl
add
aad
and
pop
mov
js
out
add
fsubl
cmp
ljmp
push
cwtl
pop
cmpsl
pop
mov
movsl
mov
loopne
outsl
jp
push
jle
shlb
pop
push
mov
inc
ja
pop
mov
or
addr16
lods
add
jecxz
mov
push
inc
cmp
test
mov
int3
xor
push
xor
insl
mov
inc
addr16
imul
and
jo
pop
xchg
fistl
sbb
mov
loopne
rclb
or
cwtl
xor
sub
xor
adc
jno
push
mov
enter
insl
sbb
in
loop
mov
fxrstor
adc
cmp
hlt
lods
lds
dec
in
sbb
push
sub
mov
ds
loopne
in
xchg
xchg
jmp
add
cmp
call
jg
xor
bound
sub
push
aas
pop
popf
mov
cmp
pop
cmpsb
mov
cmpsl
or
lea
jno
xchg
xchg
data16
iret
pusha
ss
xchg
mov
iret
test
sbb
cwtl
pop
or
and
loope
jg
sub
test
xchg
mov
xchg
mov
jo
shlb
push
xchg
ljmp
test
jmp
pop
int3
fcomp
arpl
cmp
add
int3
into
mov
inc
lods
cmpsb
sbb
mov
sub
xor
lret
lods
sbb
fcomp
sahf
sti
jo
rcr
sbb
cs
mov
push
lods
pop
fwait
nop
sub
dec
fcoml
imul
adc
stos
and
push
cmp
push
sar
cmc
inc
push
fdivrl
mov
filds
pop
pop
mov
jbe
mov
lret
repnz
jl
adc
lods
addr16
addb
adc
push
xchg
xchg
adc
cmpsl
xchg
jecxz
mov
push
test
jg
in
outsb
aas
int
jp
nop
and
shll
test
cmpsb
std
dec
or
inc
xor
mov
in
cmp
push
jg
sub
enter
cltd
js
ja
mov
jge
fwait
sub
cmp
ds
mov
test
aad
stc
dec
ds
ds
jge
ss
int
mov
cmp
in
sarl
adc
dec
idiv
and
mov
sbb
mov
mov
or
inc
cmpsl
or
arpl
push
daa
fisubs
clc
xor
inc
fimuls
sub
sub
push
mov
jmp
or
test
movsl
dec
mov
mov
in
xchg
stc
mov
cmp
dec
jp
xchg
pushf
inc
loope
mov
loopne
mov
daa
pop
pushf
hlt
adc
and
mov
ja
out
add
jnp
sti
ret
mov
cmpl
cmp
pop
shll
jbe
adc
mov
push
dec
loopne
mov
or
adc
pop
push
xor
mov
mov
rdpmc
lcall
mov
or
fisttpl
push
and
push
dec
inc
inc
xchg
mov
or
add
cli
push
adc
mov
and
fnstcw
cld
das
mov
xor
push
sbb
sarb
cmp
imul
insl
cmp
data16
push
add
ret
cmpsl
xchg
repz
pushf
ret
stos
in
and
xchg
ja
jo
shrb
scas
jl
cwtl
notrack
addb
cmp
mov
pop
sbb
fldt
or
or
mov
jae
je
pop
gs
dec
pop
mov
dec
nop
imul
or
das
mov
aas
outsl
icebp
movsl
lods
push
sub
testl
in
scas
add
inc
nop
xchg
jle
xor
insb
dec
in
push
xor
mov
pusha
cmp
je
jmp
xorps
fsubr
stc
dec
jg
test
out
pop
or
pop
test
imul
push
lret
mov
enter
out
adcb
test
iret
inc
fimull
and
adc
or
and
inc
mov
mov
xor
mov
xor
sbb
cmp
mov
hlt
mov
clc
mov
movsb
jo
xchg
call
xchg
int3
hlt
sub
sub
mov
imul
ss
pushf
das
mov
shl
xor
js
arpl
xchg
clc
repz
popf
inc
test
pop
adc
shlb
gs
test
cmp
insl
pop
leave
push
cmp
sbbb
loope
iret
xor
popl
mov
jns
js
lea
icebp
sub
mov
and
sub
sbb
inc
gs
test
cmc
sbbl
je
cmp
add
addr16
sbb
adc
je
and
ret
sahf
mov
pop
or
mov
pop
inc
sub
mov
loopne
add
lds
mov
xchg
push
cmc
pop
cmp
in
popa
or
adc
int3
sub
jns
adc
add
cmp
pop
jp
dec
xor
sub
fists
fidivl
jge
push
iret
pop
xor
mov
stos
adcl
pop
iret
mov
jne
pop
inc
inc
sub
push
std
xor
sbb
xchg
push
fistl
xor
insb
and
mov
add
rol
in
lcall
jg
xchg
mov
push
mov
push
outsl
loopne
movsb
cwtl
push
gs
mov
scas
add
jg
mov
add
jmp
dec
sahf
add
mov
xorl
jmp
inc
and
lret
inc
or
adc
xchg
mov
fildll
push
das
mov
and
jp
out
dec
and
test
fldcw
ja
les
sbb
andb
push
add
jne
add
push
sub
lds
in
rorl
sbb
adc
jecxz
fcomi
bound
push
icebp
sub
sbb
or
aam
push
jbe
stos
test
sbb
int3
sbbl
push
jb
cltd
stc
ljmp
mov
xor
mov
repz
stos
adc
fsub
lds
int3
dec
mov
addr16
dec
mov
add
popf
and
inc
or
mov
pop
dec
leave
push
cld
and
or
les
ljmp
xchg
cltd
test
movsb
aad
inc
xchg
ja
xchg
out
je
je
push
mov
mov
vpsubsw
jae
inc
lcall
mov
cs
cmp
mov
movswl
test
and
outsl
mov
cld
stc
jbe
out
lret
lret
inc
je
xor
movsl
fidivs
add
mov
and
into
out
cmpsl
hlt
xor
fildll
sbb
and
or
test
dec
dec
adc
lcall
inc
or
rcrl
pop
iret
dec
movsb
imul
xchg
xor
jg
jne
push
je
sbb
cwtl
sbb
aas
lods
shrl
xor
insb
arpl
pop
scas
xchg
adc
neg
dec
nop
and
sbb
leave
aam
mov
or
push
pop
lahf
mov
jb
jle
pusha
jmp
adc
xchg
mov
mov
lods
cmp
out
out
testb
shll
insb
int
xor
mov
cltd
clc
int
jle
into
and
jno
or
ficomps
or
in
out
mov
ss
shlb
cmp
push
adc
xchg
sbb
jns
aaa
xchg
rol
xchg
mov
mov
cmc
fsubr
and
enter
jns
mov
loop
movsl
push
mov
into
aam
jne
inc
sbbb
add
outsl
xor
test
mov
cmp
int3
insl
call
mov
dec
mov
les
push
dec
cmpsb
and
lds
push
push
add
fcomps
sbb
sub
jns
inc
mov
loop
dec
mov
les
mov
filds
inc
inc
out
jecxz
dec
and
dec
lahf
jo
sbb
ficompl
in
ljmp
adc
test
iret
pop
and
stc
shlb
sarb
and
or
in
xchg
outsb
cmpsb
or
mov
push
sub
outsb
and
push
mov
fldt
rcrb
mov
movsl
push
mov
popa
arpl
pop
cmp
ret
mulb
test
daa
std
pop
or
sbb
orl
aas
icebp
mov
xchg
cltd
xor
sub
push
mov
imul
mov
xchg
xchg
ja
dec
addr16
mov
pop
shrb
sub
xchg
pop
ret
out
lds
mov
or
dec
or
shll
wbinvd
ret
fucomp
jle
mov
xchg
pop
cmp
sbb
in
cmpl
push
mov
scas
imul
lds
ret
aas
jg
in
add
xchg
sarl
push
xchg
repz
cmp
orl
add
inc
cmp
pop
fbstp
push
movsb
xchg
inc
adc
cmpsl
dec
movl
lock
or
aas
aad
xor
dec
jo
je
gs
pushf
sbb
shl
or
xchg
lods
sbb
mov
inc
in
out
repz
test
std
pop
jno
dec
mov
insl
fadd
mov
cmpsb
pop
pushf
jl
xor
push
fs
out
daa
insl
mov
hlt
or
stos
mov
dec
cld
adc
xchg
es
sub
rclb
add
hlt
dec
jl
jae
and
dec
lret
pusha
pop
add
push
icebp
inc
inc
int3
sbb
ret
inc
hlt
outsl
fcoml
fsubs
scas
cs
inc
es
mov
xor
inc
popa
jge
ret
movsl
dec
cmp
fstpt
gs
sub
and
iret
jae
test
mov
ret
push
xlat
pop
xchg
in
out
inc
lahf
inc
xor
mov
aas
stos
push
mov
outsb
mov
push
pushf
mov
mov
lret
fildl
jo
pushf
rorb
and
fidivl
xchg
fxam
sbb
movsb
mov
cmpsb
les
sarb
jbe
dec
call
stc
in
jp
inc
jns
lcall
dec
je
push
mov
mov
es
ss
mov
popf
inc
jae
or
inc
insb
push
outsl
sbb
lcall
or
int3
les
mov
insb
jge
aad
fldt
sahf
inc
inc
jmp
mov
push
inc
stos
shll
sub
mov
cld
mov
call
or
or
or
pop
fmull
repz
imul
dec
out
prefetch
clc
repnz
lcall
insb
insl
xchg
int
insl
ret
inc
push
inc
and
daa
push
pop
jbe
mov
add
mov
cmp
iret
lea
mov
stos
bound
aad
mov
xor
mov
adc
sahf
xchg
out
dec
andb
push
vmread
in
push
mov
loop
ja
cmpsb
xor
xchg
xor
sbb
not
push
divl
and
pop
loopne
test
fmuls
cmpsb
insl
pop
jae
nop
movsb
xlat
popa
es
mov
es
xchg
pop
add
jmp
lods
sbb
cmc
push
ljmp
cld
add
sub
call
cmp
and
outsl
lret
loopne
fmull
sti
cmp
enter
add
xchg
or
jge
sti
jmp
or
stc
jns
std
sbbl
arpl
aaa
add
jo
dec
and
in
xor
aas
popa
lret
daa
pop
add
sti
adcb
stos
lods
push
cld
aam
push
in
cmp
test
orb
mov
xchg
test
mov
cmp
hlt
mov
xchg
xchg
add
popf
insb
jno
and
fldl
jne
dec
inc
xchg
jae
add
push
cmp
adc
repz
jb
adc
mov
int3
jle
mov
icebp
cltd
jne
movsl
into
push
into
xor
add
aam
inc
aad
outsb
push
scas
sbb
loopne
cmp
and
pop
mov
cmp
pop
shl
jns
and
inc
mov
xchg
jecxz
int3
fsts
inc
aam
rclb
xchg
pop
or
pop
stc
or
pop
inc
leave
cmpb
lret
xchg
out
pop
dec
mov
mov
pop
jge
dec
jmp
hlt
addr16
mov
cld
out
ficomps
loope
cmp
cmpsl
jecxz
xchg
sbb
xchg
mov
repnz
sarb
fstpl
sub
push
jg
out
mov
inc
icebp
int
sbb
into
or
add
push
mov
stc
stos
je
sbb
sbb
mov
inc
stos
jg
push
push
sub
aad
mul
cmpsb
cmp
pushw
add
or
jle
dec
and
pop
or
repnz
cmp
jg
xor
lods
addr16
jne
out
aaa
in
or
pop
scas
jno
mov
sub
xchg
inc
fcmovne
je
pop
push
mov
mov
cmp
insl
in
xchg
cwtl
fldcw
push
xchg
push
fsubrs
lea
out
pop
jle
dec
test
lods
mov
dec
das
jb
or
mov
hlt
inc
add
jae
outsl
in
or
mov
faddp
or
inc
sbb
or
push
pop
mov
int3
push
sbb
dec
aaa
int
sub
and
lret
pop
mov
sbb
imulb
mov
xor
pop
clc
pop
push
aaa
or
and
push
xchg
sti
jb
mov
adc
rorb
or
push
push
cltd
ret
lcall
pop
or
or
icebp
icebp
clc
shrb
dec
insl
int
cmpsl
das
jo
push
pushf
cmp
cmp
fwait
cmc
cld
xchg
inc
insl
cld
cwtl
pushf
imul
addr16
xor
testb
in
xor
fldl2t
xor
insb
inc
jl
test
rorb
pop
fwait
data16
mul
aad
pushf
mov
mov
in
sub
rcr
inc
sub
push
imul
scas
xchg
dec
push
out
or
leave
sub
inc
cld
out
mov
push
jns
xorb
mov
mov
movsb
xor
adc
mov
daa
clc
addr16
lcall
sbb
cmp
popa
lods
test
lcall
mov
aaa
das
inc
dec
and
movb
sub
out
xor
imul
mov
or
xor
pushl
in
xor
adc
scas
mov
psubusw
test
pop
push
sbb
int3
ret
jl
loopne
mov
pop
push
cli
adc
xchg
cltd
das
dec
xchg
cmpsb
inc
push
popf
jmp
dec
pop
inc
sub
pop
ljmp
and
out
lea
dec
mov
data16
xchg
sbb
lea
mov
subl
icebp
cltd
xor
sub
dec
sub
inc
jb
lret
mov
inc
iret
push
scas
push
add
xor
inc
js
add
ljmp
jge
mov
sbb
aad
lods
xchg
adc
mov
mov
mov
mov
xor
push
pusha
es
adc
dec
das
lods
xor
in
js
scas
mov
xchg
push
pusha
inc
mov
pop
adc
das
cld
clc
fsub
xor
lds
sahf
cmpsl
out
dec
int3
adc
sar
xor
loopne
iret
push
dec
and
mov
cli
dec
loope
pop
push
dec
xchg
js
sub
push
lret
cmpsl
xchg
psrld
jns
stc
xor
clc
mov
aaa
aam
jno
or
sbb
push
jg
inc
das
xor
pop
dec
cmp
and
insb
rcll
inc
pushf
imul
mov
in
dec
add
mov
shrb
mov
push
leave
in
sub
jp
aas
xor
pop
jbe
sub
cmpsb
jg
and
leave
sbbl
stos
or
in
mov
sbb
xor
jp
and
jle
xchg
ds
pop
std
nop
or
xorb
sub
mov
mov
sbb
inc
cltd
shrb
jle
push
test
inc
test
jl
fistl
mov
inc
out
push
sbb
jo
mov
add
push
repnz
pop
pop
in
imul
sbb
mov
push
stos
xchg
aam
out
sub
mov
stc
lods
mov
jp
sub
sub
rclb
xor
je
icebp
jle
dec
fxch
cmpsl
push
and
movsb
add
fsubrs
jg
mov
enter
scas
aas
mov
mov
sub
nop
iret
popf
xchg
mov
jge
inc
jge
mov
inc
cmp
push
mov
enter
into
cli
les
out
add
icebp
mov
pop
jge
xchg
sub
jl
loope
dec
cmovae
mov
pushf
mov
push
jnp
xorl
adc
pop
cltd
outsb
frstor
mov
ss
pop
je
lret
dec
xchg
jmp
mov
repnz
popf
cmp
xchg
ja
icebp
out
lahf
inc
add
add
dec
cmp
divl
xlat
addb
xor
push
mov
jp
ss
inc
xchg
push
mov
inc
gs
repz
mov
ret
xlat
cwtl
mov
pop
stc
cmc
inc
mov
pop
jmp
cmc
jmp
pop
pop
les
outsl
xor
dec
repnz
not
fcoml
das
jp
fildll
cmp
bswap
dec
adc
add
aas
xor
test
vgatherdps
pop
pop
aad
movsl
xor
cmp
push
adc
sti
lret
test
enter
pshufw
sbb
push
mov
pop
jne
push
pop
fisttps
sbb
das
shrb
pop
mov
cmpsl
lock
insl
mov
cmpb
out
lret
in
xlat
jl
call
cmp
push
add
mov
aaa
scas
adc
cmp
repnz
xor
cmp
add
int3
cld
out
pop
sub
sarl
jle
mov
aad
ret
add
arpl
pop
mov
jns
mov
and
mov
fcmovbe
mov
sbb
pop
jns
fdivrl
sti
xchg
out
inc
hlt
int
roll
outsb
xchg
inc
cmp
xchg
xchg
mov
movsl
in
repnz
pusha
or
popf
sub
pop
pushf
jno
sbb
push
and
sti
sbb
sbb
das
mov
cld
sarl
add
lods
lods
push
sbb
mov
rcrl
pop
cmp
aam
xchg
adc
insl
cmp
pop
push
mov
or
jecxz
lret
gs
andb
fistpl
hlt
jp
and
ror
fsubrp
pop
cld
sub
and
iret
mov
pusha
dec
push
add
lcall
test
dec
shlb
and
mov
cmp
scas
inc
mov
jae
cld
ret
daa
das
jle
out
lock
mov
adcb
aad
test
push
icebp
popa
xchg
and
jb
or
sub
movsl
pop
in
iret
jmp
in
mov
jge
dec
xor
push
sahf
add
out
in
movsb
mov
into
add
xor
call
xchg
inc
push
jl
or
sub
xchg
cmpb
std
sub
mov
adc
jecxz
sub
pop
shl
pop
or
fstl
insl
pop
frstor
add
ss
jne
cmp
vpermilpd
je
mov
subb
aaa
mov
sbb
jbe
ja
js
and
xor
inc
inc
pop
dec
push
scas
sbb
lahf
iret
loopne
gs
call
push
shrl
or
mov
stos
daa
xchg
dec
ss
jns
scas
adc
xchg
inc
mov
mov
cs
xchg
xor
and
xchg
addr16
imul
rorl
jno
in
jno
inc
cmp
mov
stc
ss
into
ja
pop
mov
adc
mov
sti
or
enter
in
xchg
aad
xchg
cli
inc
out
pop
pop
jbe
arpl
and
add
je
and
lds
cmp
cmp
out
stos
imul
in
dec
and
and
popa
xor
pop
inc
inc
or
lock
xchg
dec
outsb
mov
push
or
ret
adcl
pushl
lods
mov
dec
push
imul
icebp
in
sbb
mov
xchg
lret
rcrb
sub
xorb
lods
mov
lret
xor
rclb
adc
inc
imul
ret
sbb
or
add
scas
aas
dec
insl
test
enter
xor
jg
mov
cs
mov
xchg
mov
pop
lock
mov
roll
sbb
inc
add
cmc
frndint
pop
out
jmp
ficomps
aad
movd
xchg
lret
cmp
int
and
xchg
adc
imul
mov
pop
fucompp
jno
test
jno
mov
test
fstps
inc
and
cmp
xor
jmp
cwtl
mov
jno
push
insb
dec
and
and
cmc
sub
jae
jns
add
aaa
mov
repz
fwait
xor
or
mov
adc
and
movq
lea
ljmp
mov
pusha
das
pop
jnp
test
pop
inc
cmpb
add
out
xchg
cmp
aam
and
sub
lahf
sub
inc
jle
sahf
xlat
mov
adc
add
inc
xchg
cmpsl
lock
mov
or
fcmove
lea
inc
push
ja
xor
dec
outsl
dec
cmpsb
push
ja
jl
jl
leave
cltd
fimuls
mov
add
outsb
push
repnz
add
rolb
ds
pop
sub
mov
inc
jno
xchg
pop
out
jg
pop
or
cmc
fwait
fsub
push
sub
hlt
in
shll
cld
xlat
xchg
mov
dec
repz
dec
xor
mov
add
pop
frstor
cmp
fdivs
ljmp
dec
mov
arpl
in
sbbl
call
mov
push
mov
and
push
sub
mov
test
sub
pop
ja
xchg
sbb
cli
outsb
enter
es
loop
xor
out
sub
loopne
dec
adc
inc
inc
jnp
xchg
dec
adc
jle
fisttps
cld
testl
xor
hlt
sub
insb
or
sbb
repz
jmp
sub
xchg
pop
arpl
insl
clc
add
push
sbb
test
sub
fldcw
shll
add
inc
mov
pop
mov
pop
addr16
xchg
mov
daa
mov
es
xor
lock
sub
loop
pop
cmp
aaa
sub
rcrb
lods
ja
outsb
xchg
add
addl
pop
loope
icebp
sub
and
inc
sub
jecxz
pop
push
xor
and
insb
mov
sub
outsb
inc
push
cmp
sub
push
repz
jg
ficoms
add
add
leave
into
pushf
cmp
loopne
inc
push
lahf
adc
jns
repz
cmp
or
or
pusha
stos
into
pop
inc
push
test
out
push
inc
mov
loop
or
xchg
in
lret
mov
imul
daa
sub
insl
decb
push
in
push
test
sub
mov
rcll
cmp
mov
adc
gs
jg
jl
int3
add
mov
cmp
ret
inc
jbe
xchg
mov
and
ljmp
cmpsb
cmpsl
push
add
jmp
xlat
outsb
bound
push
mov
es
fisubrs
pop
or
scas
imul
movsl
stos
pop
lea
out
pop
pop
inc
leave
jg
pop
bound
dec
dec
xorb
push
test
pop
leave
std
adc
test
aad
repz
not
mov
mov
mov
js
dec
fwait
pop
stos
cltd
jns
mov
sub
push
dec
ljmp
jne
nop
mov
lea
jo
mov
or
mov
scas
mov
sbb
es
mov
cli
dec
adc
stc
xchg
out
xor
cmp
scas
cli
dec
notb
sbb
mov
lock
loop
jl
jmp
lret
jg
push
push
cmp
push
xchg
sub
scas
daa
loopne
ret
out
and
pushf
jo
and
fidivl
pop
icebp
mov
jmp
fcoml
fstpl
sbb
std
lret
lret
shll
xor
pusha
push
xchg
and
in
sub
faddl
lret
inc
aam
loop
push
mov
test
xchg
ds
and
adc
add
inc
lds
jno
mov
shll
lahf
push
repz
das
dec
scas
xchg
and
jbe
sbb
cmpsl
ljmp
dec
push
jne
push
push
dec
in
mov
lods
call
dec
pop
and
xor
mov
loop
adc
out
daa
jne
jp
mov
jno
clc
aas
imul
je
cmpsl
gs
int
cli
js
es
outsl
pop
lahf
outsl
fdivs
es
je
std
xchg
cwtl
test
out
push
adc
daa
push
jecxz
mov
jmp
nop
cmp
sub
popa
push
jno
dec
decb
and
test
rclb
and
pop
aad
mov
fcomi
fwait
xchg
outsl
jl
dec
pop
xchg
sub
lcall
xchg
ljmp
fwait
mov
mov
xlat
sahf
fcomp
mov
sbb
stos
push
les
out
dec
aad
ds
and
outsb
nop
cwtl
jb
outsl
push
or
sub
outsb
push
sub
mov
shl
and
loop
jbe
pop
sub
xor
sbb
test
icebp
sar
adc
les
mov
out
mov
adcb
test
sbb
push
jno
sub
and
int3
clc
loope
movsl
dec
ljmp
lods
scas
add
mov
jne
pop
loop
fidivs
jecxz
outsl
jecxz
pop
out
pop
adc
clc
das
push
jge
jmp
adc
inc
mov
push
push
push
cmc
cmp
imul
test
fiaddl
popf
cwtl
xor
lahf
pop
and
ds
and
adc
xchg
push
jge
dec
pop
inc
mov
loope
sub
iret
fsubs
sub
lods
inc
jg
dec
ds
and
daa
daa
add
repnz
mov
leave
mov
adc
cli
mov
leave
adc
shrl
pop
ljmp
out
pop
std
cmp
pop
sbb
sub
cmpsb
movsl
adc
mov
cmc
pop
loope
int3
xor
in
push
leave
iret
std
imul
fwait
dec
mov
inc
loopne
mov
jge
sahf
fisubs
pop
lds
or
jne
push
push
ret
out
or
mov
jb
mov
mov
dec
xchg
jg
add
in
test
mov
sub
icebp
inc
add
outsl
mov
addr16
cwtl
mov
push
jae
jne
and
rol
shll
and
push
loopne
cwtl
es
sub
inc
xorl
push
mov
mov
addr16
xchg
stos
dec
nop
cmc
pusha
fbstp
subl
sbb
cld
outsl
fsts
lret
mov
subl
test
mov
push
mov
addr16
xchg
jle
mov
sbb
cld
gs
mov
add
es
pop
inc
jnp
push
cmpsb
stos
movsl
fidivs
cmp
jge
xor
pop
jnp
int
or
push
subl
pop
test
out
les
push
push
push
xchg
push
lock
dec
pop
test
and
aad
fs
mov
sub
loope
cmpsb
and
mov
std
enter
dec
dec
je
pop
adc
movsl
mov
jae
les
jno
mov
sbb
lds
push
jnp
and
lret
jmp
lods
mov
cmp
pop
sub
add
out
lods
xor
sbb
sar
pop
sahf
mov
and
cli
aad
ret
sbb
sub
mov
es
vphaddwd
mov
mov
pushw
adc
push
jne
fbstp
setbe
push
pop
int
es
mov
and
adc
pushf
fisubrs
jle
sbb
std
dec
or
jge
test
sbb
std
iret
jnp
mov
movb
clc
lahf
aaa
pop
push
sti
pop
sahf
jbe
mov
dec
pop
in
clc
cmp
xchg
pop
pop
scas
cmp
sahf
sbb
sub
mov
dec
cmpsb
and
cmc
cld
pop
incb
pop
popa
xchg
inc
pop
jns
in
pop
je
outsb
mov
inc
push
mov
pop
lods
pusha
test
test
test
mov
int3
jne
sbbb
sbb
mov
cmp
pop
mov
dec
push
aam
stos
or
or
mov
add
adc
sahf
insb
xor
pop
subl
fbld
adc
push
fisttpll
cld
push
mov
lahf
ss
fistl
mov
mov
adc
push
mov
aam
cld
subl
fsubrl
inc
sub
mov
fwait
dec
push
cmpsb
iret
add
xor
xor
cmpsb
mov
push
cmp
dec
bound
pushf
jg
dec
cmc
das
fcoml
xor
xor
aam
fidivl
imul
dec
inc
pop
and
ret
adc
mov
add
gs
insl
out
lock
jmp
xchg
push
mov
js
adc
mov
shl
xchg
dec
fldcw
cmpsl
testb
pop
add
dec
dec
mov
pop
jp
mov
insl
xchg
insl
jne
and
mov
dec
sbb
pop
add
gs
sbb
test
push
mov
out
scas
inc
stc
dec
shr
lods
out
lahf
lret
push
jne
cwtl
xchg
mov
push
repnz
xor
mov
mov
or
cld
jb
lds
inc
fisttps
xor
mov
sbb
in
lods
imul
inc
mov
jb
pushf
mov
clc
es
and
pop
push
adc
xlat
push
aad
inc
and
adc
bound
ljmp
xor
fdivrp
out
sbb
fmull
popf
popf
jbe
dec
or
fnstenv
cld
xchg
lock
push
adc
mov
inc
jle
lock
and
dec
jbe
dec
mov
mov
rclb
popa
mov
cmp
xchg
inc
out
push
js
popw
push
cwtl
mov
ja
daa
mov
insb
fsubrs
jle
dec
mov
sub
ficompl
and
in
cli
mov
enter
inc
jg
ds
dec
and
pusha
movsl
int3
jl
shlb
pop
mulb
add
push
pop
mov
inc
test
xlat
or
xchg
mov
dec
imul
add
xchg
mov
jne
and
xchg
push
lods
addr16
fcmovnu
or
cmp
push
lods
xor
or
or
popf
in
arpl
fiadds
xchg
int3
rorb
test
cmp
ss
xchg
mov
repnz
cmp
pop
mov
push
imul
hlt
outsl
das
iret
out
mov
sub
js
shrl
mov
dec
push
mov
inc
inc
mov
xor
out
cmpsl
rcll
mov
fwait
popf
sub
fs
sub
mov
mov
add
gs
stos
mov
sbb
xor
add
xor
pop
out
imul
inc
push
jo
add
lock
popl
mov
int
or
pop
movsl
int
mov
fcompl
xchg
pop
fs
test
xchg
aaa
iret
xlat
mov
ret
push
pusha
or
jne
clc
adc
stos
push
sub
add
jnp
dec
ret
sub
inc
ja
in
push
adc
repz
push
fimuls
push
ret
in
push
lret
imul
pop
adc
sbb
stc
icebp
add
add
push
push
mov
jne
rcrl
out
test
cld
xor
sbb
mov
mov
cmp
xchg
jae
xchg
sbb
aam
shll
adc
sub
cmp
pushf
scas
xchg
rcll
pop
xchg
push
mov
jecxz
inc
sub
imul
leave
arpl
jo
add
sub
pop
fdivl
jae
mov
test
sarl
cmp
ja
sbb
fwait
mov
and
cmp
outsl
sub
repnz
adc
scas
aaa
dec
dec
scas
pop
fdivr
rcrl
sub
mov
and
or
dec
mov
mov
or
mov
lcall
and
and
fstl
movsb
jle
pusha
mov
test
and
sbb
cli
adc
fwait
mov
xchg
dec
les
push
sbb
jmp
mov
fldenvs
sbb
mov
pop
cmc
rolb
daa
cs
or
pop
popf
push
pop
mov
xchg
mov
push
pop
into
fcomi
mov
jno
push
xchg
ja
and
cld
cmp
fldt
push
jle
aaa
inc
inc
test
ljmp
gs
push
ljmp
and
pushl
dec
mov
jecxz
sbb
movsb
mov
insb
xchg
shl
pusha
dec
jg
fiadds
xchg
insb
lds
int3
fidivrs
push
lahf
js
fwait
shrb
lods
clc
or
ljmp
das
pop
outsb
ds
sbb
dec
fldt
stc
jp
aad
mov
mov
or
jnp
lahf
mov
arpl
cmp
lds
adc
adc
mov
das
xor
ds
xchg
loope
ljmp
insl
invlpg
popa
xor
xchg
add
imul
sub
or
mov
xchg
out
sbb
lret
sbb
push
lds
cmp
cld
ljmp
out
cmp
xchg
iret
push
sub
sub
inc
pop
movsl
scas
mov
xor
mov
push
fstp
sahf
pop
dec
or
mov
push
pop
pop
bound
sbbb
or
or
stos
pop
or
sub
fsubl
lods
mov
stc
fptan
jl
imul
pop
pop
xor
testl
push
xor
xchg
jl
movsb
jle
out
pop
je
nop
sbb
aas
sti
cltd
add
adc
lods
pop
cld
jl
mov
pop
mov
sti
cmpsb
xlat
sbb
arpl
mov
test
leave
sarl
scas
call
lea
fcmovbe
imul
leave
pop
jg
das
jmp
nop
insl
add
scas
insl
daa
ljmp
and
fstp
mov
mov
jne
and
xchg
mov
je
or
in
push
sub
cmp
xor
sti
jb
mov
call
mov
aaa
cmp
pushf
enter
xchg
movsl
sbb
xchg
jmp
jle
inc
roll
fsubr
xlat
mov
jb
xlat
rcr
outsl
sbb
or
xor
scas
adc
cmp
loope
push
ljmp
mov
push
add
and
or
gs
ficoml
call
pop
or
lcall
out
and
push
xor
and
sti
mov
sub
sarl
je
les
inc
shll
addr16
cmp
or
int3
push
or
xor
or
out
lods
sbb
xor
push
xchg
push
arpl
inc
ja
lds
jne
xor
ret
shl
lods
sub
mov
js
or
push
xchg
mov
jecxz
push
sbb
dec
dec
cmp
scas
loop
jmp
in
adc
lods
dec
add
mov
imul
mov
outsb
addr16
sub
dec
pop
mov
inc
dec
stos
add
mov
add
popf
jecxz
ret
pop
xor
dec
sbb
ffreep
pop
mov
in
incl
sub
sub
or
adc
mov
add
test
and
call
test
popl
fidivrs
xor
mov
sti
movsl
add
cld
clc
mov
xchg
mov
add
out
push
adc
push
inc
xchg
add
pmuludq
mov
mov
std
dec
push
sub
lock
dec
dec
jae
aaa
movsb
jp
add
jmp
and
js
push
push
loopne
hlt
rcl
pop
mov
fistps
lahf
mov
lods
sub
insb
insl
xchg
fwait
loope
xchg
ljmp
cld
mov
mov
mov
mov
fldenv
jmp
fsubr
ret
shll
push
std
mov
in
inc
pop
cmp
dec
or
ffreep
xchg
in
arpl
in
movsl
pushf
lret
push
ja
leave
mov
outsl
sbb
and
sbb
je
clc
adc
jno
add
and
stos
and
push
fstps
adcl
push
jle
adcl
dec
sarb
push
sbb
clc
xchg
pop
das
inc
inc
int3
popa
mov
mov
out
sub
adc
aam
and
mov
in
testb
mov
fstpl
cmpsl
pop
lcall
mov
dec
and
loope
aad
js
pop
aam
subl
call
mov
sub
ljmp
jo
or
imul
xorb
cmp
adc
jmp
loopew
mov
pusha
es
push
push
lcall
xchg
insb
sub
jb
bound
xchg
test
adc
in
das
call
gs
arpl
xorb
pop
pop
pop
sub
sub
aad
ficoms
and
xor
outsl
popf
push
cli
add
nop
or
test
jmp
stos
imul
es
dec
pop
shll
mov
les
outsb
pop
or
lods
pop
icebp
sahf
inc
push
add
jae
add
rorb
pop
cmp
add
arpl
inc
dec
test
stos
ljmp
xchg
fadds
ret
fcoms
pop
negb
rorb
cmp
xchg
mov
div
es
ss
jo
jno
movsl
and
outsb
sbb
pop
push
jae
inc
es
test
pop
movsb
divw
jbe
xchg
testl
ret
inc
xchg
and
daa
adc
jmp
les
sub
add
lret
cmp
lcall
adc
add
scas
stos
lret
inc
aad
cmp
idiv
imul
fldcw
out
imulb
cld
loopne
dec
je
and
xor
in
xchg
in
sub
cwtl
dec
cmp
loopne
sbb
outsl
cmpl
push
mov
pop
add
call
insl
mov
push
shl
xor
push
aam
nop
mov
ds
cs
mov
hlt
fisubrs
lds
scas
nop
in
mov
pushf
aaa
or
adc
xchg
fcoms
mov
xor
in
and
cwtl
mov
je
and
mov
es
cltd
mov
subb
push
hlt
aas
int3
push
xlat
xchg
jae
sbb
lods
cwtl
arpl
popa
out
leave
push
enter
test
movsl
cmp
xor
cmp
fiadds
imul
je
outsb
fisttps
into
sbb
and
shlb
inc
mov
cmp
mov
in
dec
cmp
pop
cld
pusha
ffree
xchg
push
adc
lcall
hlt
data16
mov
pushf
mov
in
icebp
adc
xorl
enter
daa
cmp
push
into
xorb
dec
fucomp
adc
fcmovbe
fs
test
mov
dec
scas
xor
jl
jg
outsl
repz
rcl
or
fs
jl
mov
mov
or
popf
aad
xchg
data16
dec
push
and
adc
push
sub
sbb
std
fidivrs
dec
mov
leave
fnstenv
lcall
icebp
inc
repnz
mov
xchg
xchg
jbe
jo
in
pop
lret
dec
jno
in
sbb
ret
into
insb
cmpsb
adc
pop
lahf
mov
frstpm(287
loope
fbstp
and
icebp
das
nop
sub
mov
xchg
inc
cwtl
cmp
jno
mov
mov
xor
lret
lret
mov
outsl
mov
movsb
test
dec
divl
jge
push
subl
rclb
jp
xchg
popf
aaa
cmc
outsl
into
dec
lret
jbe
xlat
sbb
pop
out
xchg
dec
sbb
jo
lds
jge
cmp
hlt
lock
addr16
lods
fidivrl
add
push
pop
int
cmpb
xchg
fcompl
jb
jb
pop
sbb
imull
in
in
inc
sub
js
je
aas
and
loopne
lds
xchg
iret
cmp
xlat
gs
cmpsl
pop
cltd
mulb
fs
test
in
test
xor
inc
test
nop
into
ss
and
adc
and
pop
aas
push
aaa
jb
dec
inc
testb
adc
and
pop
out
imul
push
in
mov
int
cmp
call
fistpll
adc
loopne
data16
xorb
pop
mov
lock
sti
dec
mov
in
pop
push
cmp
add
sbb
jle
add
arpl
add
ret
sahf
mov
and
sbb
and
pop
in
aam
mov
mov
in
repnz
mov
sub
lcall
pop
test
pop
xlat
add
dec
in
test
repnz
movsl
stos
sti
or
cltd
in
or
gs
sub
fcmovu
orl
push
mov
cs
lcall
mov
sub
mov
mov
lods
sub
repz
push
pushf
mov
addr16
push
and
loopne
push
mov
mov
sub
out
xlat
shlb
addr16
fidivl
push
dec
push
cltd
xor
jecxz
iret
mov
inc
popf
mov
xor
rolb
sbb
mov
inc
js
fnstsw
shll
dec
ljmp
dec
test
icebp
jns
enter
stos
fidivs
sbb
outsb
fdivl
sbb
cmp
jnp
popa
xor
stc
cmp
jmp
aas
cli
adc
gs
sbb
mov
sbb
fcos
xchg
out
dec
mov
jmp
or
adc
push
add
mov
dec
jnp
cmp
mov
jae
dec
in
adc
sbb
cmp
mov
push
into
mov
xchg
test
lods
add
aad
cmp
sub
or
popa
repz
aam
cmpl
push
add
rcrb
in
movsb
and
xor
jmp
jae
jae
js,pn
inc
pop
ljmp
adc
test
pop
sub
fldenv
popf
in
lahf
xchg
in
sub
rolb
and
xor
ficompl
jb
cmc
pop
xchg
aam
pusha
mov
mov
lods
xchg
fisttpll
xchg
nop
inc
mov
imul
insl
push
add
int
cwtl
in
data16
jb
xor
cmp
fadd
loopne
mov
mov
dec
mov
xchg
pop
xchg
mov
insb
cmpsl
outsb
mov
lock
mov
into
push
fbstp
imul
popa
push
cmp
mov
pop
inc
push
in
xchg
lahf
mov
xchg
or
add
mov
push
jle
push
jg
flds
popf
popa
lahf
sbb
popa
scas
inc
push
stos
add
jbe
sbb
outsb
adc
xchg
cltd
lcall
add
cld
andb
mov
lret
xor
mov
xor
jno
out
into
cltd
sbb
icebp
inc
fildl
setl
icebp
cld
mov
add
pop
sub
dec
loop
pop
sarb
js
mov
fwait
je
or
dec
int
shlb
addb
shrb
daa
popf
mov
sbb
jg
push
adc
loopne
pop
mov
pop
in
out
mull
cmp
enter
or
shlb
shr
push
movsl
xchg
cmp
cmp
cmovs
andl
cld
sbb
nop
lcall
loop
fs
test
or
xchg
mov
push
and
js
test
mov
ss
divb
aad
sti
mov
movsb
scas
sarb
xchg
push
adc
out
add
jne
xor
sub
push
out
arpl
xor
sbb
lret
sbb
mov
lds
je
call
mov
xlat
mov
push
jnp
nop
inc
outsb
pop
pop
adc
movsb
xchg
ret
es
pushf
push
ret
inc
lods
push
fwait
ja
inc
rcrl
fnstenv
jnp
jno
xchg
sbb
daa
push
push
lds
push
negl
orl
sub
or
push
inc
lds
loope
cmp
jmp
push
dec
not
pop
movsb
pusha
adc
xor
jmp
call
icebp
mov
push
orl
pop
aad
push
or
mov
sbb
cltd
iret
fistpll
lret
sub
mov
jle
sbb
xor
and
mov
shr
inc
jmp
or
mov
jp
mov
mov
adc
xchg
xlat
es
das
add
push
mov
xchg
inc
mov
mov
cmp
pop
xor
test
repnz
inc
jg
pop
fcmove
and
into
dec
pop
jnp
xchg
add
dec
xlat
mov
fs
test
outsl
cs
aas
cvtps2pi
sbb
jae
out
or
xor
push
xor
mov
mov
les
inc
daa
ret
out
leave
es
add
dec
or
fistps
xor
loopne
adc
pop
add
mov
or
mov
pop
xchg
cmpsl
addr16
sbbb
lahf
das
jo
outsl
adc
adc
xchg
inc
in
inc
add
scas
or
negl
pop
test
das
add
adc
cmp
mov
push
add
or
ror
add
mov
jns
pop
pop
push
test
lock
in
ret
or
mov
int
into
adc
lret
cmp
enter
xchg
lock
lret
and
and
jbe
pop
dec
jge
dec
jne
cltd
jmp
lea
das
xor
ja
cmp
popf
jo
jle
call
and
pusha
xchg
inc
mov
cltd
push
mov
xchg
pop
imul
xor
inc
push
xor
mov
push
sub
xchg
inc
cmp
fnop
aam
dec
inc
add
test
mov
sub
in
mov
xchg
cli
mov
dec
jo
fsubs
push
popf
add
leave
daa
daa
enter
inc
push
xchg
adc
push
hlt
frstor
cmp
fbld
jb
out
push
xchg
pop
jp
sub
dec
in
mov
sub
jne
xchg
jno
addr16
pop
dec
pop
pop
fwait
pop
std
loop
lods
xchg
arpl
dec
cmpl
add
aam
gs
vmread
das
stos
clc
mov
push
inc
pop
or
xchg
bound
loop
sbb
fsub
or
cmp
pusha
xor
pop
in
repnz
mov
sbb
lds
mov
xchg
sub
push
xor
dec
sbb
xor
loopne
pop
daa
jmp
push
adc
push
test
in
movsl
pop
cmp
dec
adc
push
and
in
sub
scas
or
cmp
push
rcll
jbe
push
xor
mov
pop
ljmp
jp
enter
dec
scas
pop
xor
repz
shl
pop
in
cmpsb
lret
out
jne
insl
fs
mov
stos
xchg
push
pop
jno
mov
sub
shl
in
cmp
jnp
jg
fsts
je
fiadds
xor
iret
push
mov
lds
hlt
sub
mov
cmp
daa
pop
push
hlt
imul
jecxz
bound
or
je
jge
scas
cmpl
pop
lds
lods
jg
lea
outsl
and
xor
mov
sub
pop
pop
push
ds
in
mov
push
rcl
pop
outsl
cmpsb
cmpsl
clc
jmp
and
es
int
ds
cmp
and
out
test
sbb
mulb
cmp
mov
test
jp
add
dec
xchg
sub
mov
sahf
or
mov
cmp
outsb
jb
cli
cmp
mov
scas
daa
insl
aam
mov
sub
sbb
pop
addl
mov
mov
xchg
mov
push
stos
mov
out
jle
sub
jecxz
pop
pop
cmp
testl
movsl
xor
jg
in
subl
xchg
sbb
push
je
push
loope
mov
jecxz
insb
add
add
dec
sbb
xlat
and
xor
test
xchg
ss
test
inc
mov
das
mov
fidivrl
mov
inc
jmp
jp
es
adc
inc
hlt
mov
sbb
fwait
pop
cmp
or
and
loope
xchg
imulb
sub
in
lea
push
in
mov
or
loopne
jge
mov
inc
popf
movsb
inc
pop
scas
cmpsl
aam
jl
push
or
pop
loopne
jl
int
sub
mov
andl
and
inc
insl
and
pop
shrl
mov
push
pop
test
xor
jmp
xor
push
jp
icebp
adc
pusha
addr16
arpl
dec
jp
sahf
lret
mov
dec
cmc
mov
or
filds
imul
movsb
dec
in
mov
fmull
sahf
push
test
aaa
js
sub
cld
push
inc
cmpsl
and
lahf
sub
int
sahf
mov
jp
cmp
in
inc
adc
jecxz
iret
adc
xchg
shlb
pop
ret
int3
inc
scas
mov
push
out
inc
loop
xchg
into
fldt
sbb
ficompl
cmp
icebp
addl
pop
insb
and
adc
pop
cwtl
inc
push
test
fstl
mov
adc
mov
jl
xor
mov
inc
cltd
sti
imul
lds
jo
cs
shrb
aam
inc
dec
jp
fisubl
push
push
mov
icebp
pop
cltd
imul
and
movsb
mov
mov
push
enter
mov
adc
les
adc
sti
cmp
or
or
mov
dec
adcb
xor
pusha
gs
aas
xor
insb
inc
mov
add
cmp
pop
popa
pop
and
ret
xchg
mov
mov
mov
pop
cmpsb
pushf
mov
rorl
cmpsl
mov
jmp
ret
mov
stc
test
dec
adc
popf
xchg
xchg
adc
mov
add
add
cmp
pop
fwait
lods
dec
cmp
dec
iret
adc
sub
shll
movsl
call
mov
mov
inc
sti
add
in
out
divb
inc
dec
dec
jns
mov
icebp
mov
nop
jne
pop
fisubs
push
push
daa
ret
cmp
mov
or
cmp
add
cld
jecxz
mov
sub
or
pop
call
fcoml
pop
das
test
sub
scas
pop
scas
jb
vmwrite
pop
dec
pop
dec
mov
xor
or
sub
xchg
push
icebp
or
cmp
fildl
dec
mov
mov
jnp
xchg
test
xchg
mov
add
add
xor
mov
stc
cld
push
lds
sarb
xor
or
rcrb
dec
popa
sbb
mov
arpl
lock
fidivs
subb
aad
dec
imul
fisubrl
jnp
dec
inc
js
fldt
das
sub
xchg
loope
add
adc
sahf
mov
incl
mov
xor
adc
loope
test
in
mov
pop
testb
das
jle
mov
test
jl
jmp
pop
jp
int3
enterw
loopne
fiaddl
push
mov
sub
sub
and
mov
mov
push
cmp
into
cwtl
cld
test
jle
pop
addb
aaa
jl
sub
sub
pop
add
inc
mov
arpl
ss
loope
icebp
mov
sbb
push
leave
xchg
nop
hlt
aad
add
cmp
fcomip
jmp
mov
js
outsb
int
fmuls
sbb
mov
dec
xchg
mov
addr16
xorl
jnp
xor
add
into
jno
mov
or
leave
jnp
cmp
outsl
icebp
outsb
xchg
or
les
pop
jne
and
jmp
fmul
shlb
int
xchg
add
push
adc
sbb
test
mov
ljmp
es
cltd
xor
in
or
inc
push
inc
mov
dec
inc
inc
cmpsl
cmp
mov
mov
push
pushf
cmp
outsl
scas
sbb
cli
inc
adc
out
std
mov
mov
out
addr16
add
push
inc
into
add
jb,pt
and
aaa
shll
in
mov
xchg
push
sti
into
mov
adc
sarl
push
sbb
ss
dec
aas
adc
scas
push
xor
pop
cltd
xorl
decb
cmp
fwait
inc
movsl
mov
mov
mov
fcompl
dec
pop
fadds
scas
ficoml
imul
lock
or
mov
fnsave
or
push
jno
adc
and
fcom
jge
int
jmp
das
shrl
or
adc
inc
pop
add
cmpsl
adc
pop
lret
in
push
mov
out
idiv
mov
fistpll
fnsave
jo
sbb
pushf
jle
jl
insl
push
fstpl
push
xor
test
mov
test
cmp
xchg
roll
into
add
adc
mov
cltd
pop
jo
cmp
dec
je
pop
mov
in
lea
cwtl
aam
pop
sbb
stos
add
cmpsl
insb
cmp
xor
and
or
and
andl
mov
icebp
jne
mull
addr16
cmp
cltd
push
fdivrl
dec
into
mov
mov
pusha
ds
test
jbe
addr16
and
dec
sbb
add
inc
cmp
imul
js
xchg
pop
and
cmp
and
mull
xor
mov
or
pop
arpl
pop
out
and
sbb
mov
add
ja
scas
adc
sbb
mov
xor
dec
xor
add
stc
fiaddl
lds
add
dec
stos
outsl
imul
mov
inc
adc
add
in
xor
mov
ds
push
or
and
pop
pop
mov
jecxz
and
les
cmpsb
jbe
insb
and
lods
mov
cmp
adc
inc
xor
shll
pushl
pop
fwait
cmpsl
adc
cmc
adc
or
rcrl
xor
rclb
out
jmp
shrl
push
xor
xor
sub
or
pop
rolb
lcall
ljmp
dec
ja
insb
sar
mov
das
mov
repnz
sbb
int
xlat
rcl
jl
push
jmp
lret
mov
sbb
or
jnp
icebp
cltd
aas
push
iret
cltd
insb
in
pusha
aaa
rorb
mov
dec
dec
adc
mov
mov
mov
jbe
fwait
sbb
lock
lds
inc
lret
lock
cld
mov
nop
ret
cltd
dec
cmp
add
inc
aad
inc
addr16
outsl
sub
adc
sbb
adc
and
scas
int3
fs
test
ja
fwait
jge
in
push
dec
rcll
out
movsl
stos
and
es
mov
jmp
aam
xor
cmp
dec
inc
popa
fwait
popa
sbb
cmp
out
push
mov
outsl
lds
lret
ljmp
shll
sbb
in
push
es
call
mov
pop
sbb
fiaddl
sub
or
push
jo
pop
dec
cmpsb
ja
sbb
stos
push
rol
sbb
inc
mov
sbb
cmp
or
pop
fsubs
enter
cmp
stc
cwtl
fs
insb
or
mov
xchg
nop
movsl
ja
mov
pop
jp
lock
data16
subb
movsl
add
repnz
sbb
out
mov
xchg
adc
push
sbb
lock
jmp
popa
xchg
sbb
mov
dec
jo
xlat
sbb
add
or
inc
test
mov
rolb
repz
jge
cmp
popa
push
imul
add
or
inc
out
ret
cmp
addl
hlt
mov
and
push
mov
pop
inc
out
gs
orb
and
and
jge
test
jae
sub
in
push
or
jle
jae
lahf
nop
xchg
cmp
inc
mov
push
add
imul
and
sahf
add
and
and
lret
sub
ljmp
push
add
scas
xchg
imul
addr16
cmp
and
xchg
inc
inc
mov
lcall
push
adc
push
test
lahf
loopne
inc
insl
mov
or
popf
cli
dec
outsl
scas
sub
adc
adc
dec
in
cmovns
jb
fisubl
inc
pop
and
notb
movsb
jp
xchg
out
xchg
xor
fdivr
loope
adc
sub
xor
pop
inc
cmpsl
lret
ljmp
int3
cmpsb
sub
xchg
test
pushw
push
test
sub
stos
add
add
mov
bnd
pop
insb
loope
ja
cmp
testb
lcall
popa
sbb
rcrb
ret
jmp
shll
sahf
daa
jl
and
and
addr16
jge
in
out
lock
aaa
fldcw
mov
sub
shlb
stos
mov
dec
sti
sub
lret
cmpsl
icebp
cli
sbb
inc
sbbl
xor
stc
insl
lods
xor
jns
lret
and
lret
stos
and
pushf
xor
inc
out
js
repz
mov
jl
pop
ja
test
fcom
mov
sub
fsubrp
shrl
cmc
mov
int
fldl
fldl
jb
sbb
in
dec
sub
gs
int3
xchg
mov
imul
push
add
pop
pop
push
add
xchg
lret
cmp
xchg
gs
adc
inc
lahf
ret
test
movsl
inc
addr16
add
sub
sbb
inc
mov
cmp
shlb
sbb
enter
push
dec
test
mov
mov
xor
pop
cmc
out
das
loopne
popa
loopne
shll
js
push
inc
lock
scas
dec
mov
ss
movsl
enterw
xor
add
mov
mov
stos
push
xor
inc
sub
push
cmp
pop
adc
negb
dec
fs
push
in
ja
xlat
adc
sbb
jp
mov
scas
lcall
mov
pop
std
gs
sbb
jno
dec
and
mov
ds
pop
loopne
imul
movsl
fldl
and
mov
pop
fists
movsb
add
and
addl
es
fdivs
push
in
or
push
mov
fdivr
mov
test
cld
add
mov
mov
scas
jbe
mov
xchg
cli
cltd
in
add
into
jp
or
push
faddl
inc
loop
into
cmp
aad
cs
push
ljmp
iret
adc
mov
push
test
pop
ret
xchg
sub
mov
xchg
mov
inc
movsl
jl
hlt
inc
icebp
inc
rcr
scas
xchg
arpl
addr16
mov
and
dec
and
jne
aas
sbbl
sub
mov
cmpsb
pop
dec
jge
jbe
loope
js
sbb
pop
pop
xlat
jnp
jl
pop
add
insb
xor
sub
imul
cmp
lock
iret
mov
and
push
jbe
arpl
int3
icebp
inc
sbb
fsubp
sub
faddp
fildl
cmp
mov
loope
jbe
xchg
ffree
enter
adc
scas
sub
inc
mov
stos
push
stos
jge
test
mov
lret
mov
leave
jg
popa
push
inc
mov
push
jmp
xor
xchg
cmp
in
cmp
jbe
lds
push
cltd
dec
jae
jo
fbld
and
or
in
pushf
inc
das
scas
insb
lret
inc
mov
test
cltd
mov
rorl
lret
cmp
xchg
repz
sbb
lcall
mov
stc
or
mov
inc
stc
ret
pop
ja
cs
out
mov
push
testl
mov
fnstsw
neg
xor
mov
sbb
out
dec
je
lea
cli
inc
mov
mov
add
jae
in
sbb
inc
enter
sub
mov
icebp
dec
xor
fidivrs
or
lcall
adc
dec
rolb
out
mov
aam
aas
inc
xor
stos
jo
out
adc
cmp
not
btl
mov
sbb
xchg
mov
mov
clc
fsts
inc
enter
pusha
insb
mov
aam
adc
fwait
lret
jno
xchg
in
out
inc
ss
ds
dec
xor
or
sub
pop
pop
movsl
mov
mov
in
test
add
mov
int3
xor
std
mov
mov
dec
adc
fnstenv
je
mov
mov
arpl
mov
fnstsw
mov
sub
aaa
cmp
xor
pop
ret
imul
adc
cmp
outsl
mov
xor
inc
out
pop
int3
in
lret
pop
sbbb
inc
dec
inc
fsubl
xchg
add
push
ljmp
xor
aaa
inc
out
jae
jmp
and
subb
fsubrl
sub
iret
xchg
sub
in
adc
inc
add
jo
int3
jbe
xor
cmp
adc
xorl
std
insb
pop
jno
or
out
inc
and
mov
aaa
cmp
ret
sbb
cli
cltd
ret
sarb
add
xchg
imul
or
idivb
daa
push
lcall
push
cmp
aas
stc
add
imul
dec
sub
das
adc
add
jp
cli
cmp
out
jb
mov
xor
jne
sbb
test
cmpsb
mov
inc
movsl
pcmpeqd
pop
and
jne
addr16
pop
push
mov
sti
xchg
pop
mov
sub
outsl
xchg
add
add
pop
pop
pusha
sarb
xlat
or
dec
nop
repnz
dec
fisubrs
mov
pop
mov
test
or
je
repz
fldcw
xchg
aas
push
nop
mov
pushf
pop
pop
xchg
cmpsb
mov
adc
andl
scas
sub
in
notb
int
ffreep
test
cs
test
jo
add
popf
mov
insl
aam
jmp
negl
mov
mov
add
imul
iret
push
dec
dec
and
adc
pop
int
cmp
jne
mov
mov
and
mov
add
jecxz
or
scas
call
addr16
stc
in
mov
fimuls
xchg
jae
xchg
fisttpl
movsb
enter
les
jmp
sub
test
xchg
jge
or
je
cmp
movsb
push
mov
mov
mov
push
mov
addl
test
imul
pushf
mov
ja
jge
lahf
sbb
stos
in
add
dec
lret
aad
ret
pop
pushf
xor
mov
mov
inc
enter
sbb
scas
notb
js
iret
xor
mov
xor
jne
ljmp
js
ja
mov
aam
mov
ds
stos
xchg
cmp
in
pop
sub
mov
test
popa
lock
jns
les
test
inc
outsb
sti
cmpsb
insb
aas
cmp
pop
and
stos
jmp
or
fiadds
loop
shrl
pop
imul
push
fsubl
ret
fnstenv
push
fsub
pop
xor
jl
lcall
ret
aas
into
shrb
insb
mov
insb
ljmp
mov
shrb
fadds
jle
stos
push
jle
lea
push
jo
and
adc
cmpsl
fistl
daa
sub
mov
sub
cwtl
test
mov
add
mov
fs
inc
enter
mov
roll
std
call
xor
dec
bound
push
shll
push
mov
push
jmp
or
ror
clc
cmp
adc
add
pop
lcall
lock
cmc
jg
test
mov
inc
fistpll
mov
pop
aas
lock
loop
cld
outsl
jns
int
dec
mov
mov
dec
es
cmp
xchg
pop
fchs
lcall
and
pop
stc
clc
dec
cmp
or
mov
stos
jo
jge
loopne
pop
dec
in
bound
and
imul
pop
idivl
dec
pop
adc
add
cld
jb
xor
inc
call
popa
and
imul
dec
xor
outsl
call
aad
jp
dec
jecxz
or
dec
inc
ss
inc
and
mov
cvtps2pd
xchg
dec
ss
pushf
mov
sahf
jo
push
cmp
cmp
add
js
enter
dec
xchg
dec
aaa
adc
aas
loope
cmp
inc
mov
ds
inc
movsb
lea
je
xor
out
iret
push
jge
dec
jge
jecxz
or
push
or
aam
sub
scas
daa
and
pop
aas
cmpl
lods
or
lahf
xchg
inc
popa
in
scas
mov
es
and
lods
mov
or
jl
jno
jg
push
mov
adc
lret
xor
jb
sbb
scas
aad
push
iret
leave
dec
sbbb
xchg
xor
dec
scas
pop
adc
sub
jbe
mov
call
jnp
in
lea
xchg
pop
add
loopne
jecxz
rcrb
adc
jge,pn
xchg
adc
nopl
arpl
xchg
pop
adc
push
sahf
push
mov
xchg
adc
daa
in
and
mov
cmp
dec
mov
dec
pop
inc
add
and
mov
mov
inc
les
xor
mov
arpl
push
enter
dec
divb
and
sub
daa
loop
xchg
and
popa
jb
mov
sbb
dec
jb
xor
dec
pop
dec
subb
repnz
mov
xor
addb
mov
xlat
enter
daa
lock
xchg
xchg
xchg
dec
dec
in
push
xchg
cmpsl
pop
pop
mov
sbb
or
and
adc
or
jae
std
push
cs
fldl
cld
ja
mov
nop
movsl
or
cmpsl
jle
xchg
insl
loopne
addr16
aad
outsl
imul
mov
test
pop
test
lea
test
loop
mov
lahf
aam
ret
push
sub
cli
jle
push
or
jge
int
sub
xchg
outsb
sbb
or
dec
or
sub
mov
jecxz
mov
push
in
roll
adc
pushf
in
push
ficoml
shrl
dec
fwait
adc
mov
nop
cmc
leave
lea
imul
or
cli
sbb
mov
sub
lods
imul
jo
aaa
fadds
mov
shll
mov
dec
test
pop
movb
jp
or
push
test
fadds
test
lret
cld
cmp
adc
aam
adc
mov
hlt
mov
gs
out
out
mov
dec
xchg
hlt
adc
sarb
outsl
loopne
or
outsl
mov
movsl
pushf
xchg
loope
jbe
call
dec
ja
loope
cmp
and
pop
fisubrs
ret
xor
shll
xchg
pop
inc
lret
gs
inc
lock
add
sbb
pusha
cmp
cmp
mov
cmp
mov
ret
jp
push
movb
xor
aad
push
int3
cmp
xchg
xchg
mov
int
or
fcoml
insb
lret
das
repz
and
insb
ds
jmp
jns
enter
jecxz
int3
mov
mov
scas
or
frstor
sub
and
ret
jno
xchg
or
pusha
pusha
sahf
sub
sti
insb
and
movsb
cmp
xorl
fsts
inc
xor
nop
int
pop
mov
xchg
jb
inc
or
cmp
js
dec
jg
add
rclb
je
repnz
shl
mov
mov
adc
push
push
cmpsl
cmp
adc
shll
adc
cltd
or
push
push
lods
mov
fisubl
out
in
pusha
loop
ret
paddq
popl
pushf
jnp
and
fidivs
xchg
insb
insb
int3
negb
insb
out
jecxz
mov
scas
push
pop
ljmp
cmp
shll
jbe
mov
stos
add
hlt
clc
and
iret
loop
sbb
test
push
and
pop
xchg
or
repz
std
xorb
int
fsubrs
mov
pop
out
loop
sbb
mov
outsb
xor
aad
jo
push
jo
push
xchg
cmp
cmp
or
movsl
test
mov
bound
icebp
cmp
je
divb
dec
test
inc
xlat
pop
push
popf
adc
cmc
push
jne
push
out
xlat
push
push
xchg
aaa
and
popf
xchg
data16
popa
jmp
mov
inc
imul
jl
sub
lock
jge
dec
mov
inc
adc
dec
push
stc
ret
mov
sub
es
cmp
dec
cmp
dec
cmp
pusha
dec
rcll
mov
mov
outsb
clc
int3
pop
imul
xor
addl
sbb
mov
sbb
mov
xchg
sbb
lret
dec
rclb
mov
fdivrs
rcrl
cs
ret
xchg
dec
push
add
mov
jae
aas
out
rcrl
daa
xor
shlb
in
repz
adc
cltd
jb
shlb
dec
lret
push
mov
js
fcmovne
xor
mov
and
pop
adc
xor
test
pop
cld
jb
mov
mov
dec
arpl
aad
mov
or
es
pop
imul
push
mov
sub
push
in
mov
arpl
jo
sbb
inc
jle
sub
stc
jle
pop
scas
leave
and
mov
cmp
lea
pop
push
inc
pop
out
and
test
daa
adc
out
fdivl
dec
adc
sbbb
add
mov
push
or
add
and
add
jecxz
aad
dec
mov
push
and
fnstcw
mov
js
push
pop
in
mov
dec
or
shl
jecxz
mov
sbb
outsb
ja
pop
lret
icebp
ret
mov
in
jns
add
loopne
dec
fildll
add
and
shlb
lret
icebp
shlb
mov
sti
gs
push
fs
mov
push
inc
mov
insl
xchg
iret
cmp
mov
decl
inc
inc
fwait
adc
inc
insl
mov
or
std
cmp
les
jnp
pop
jns
clc
dec
fcomps
mov
stos
imul
out
scas
stc
or
test
imul
shl
movsl
mov
inc
cmp
cltd
into
dec
incb
popf
dec
popf
sbb
push
clc
fisubrl
addr16
mov
jbe
add
popa
mov
les
nop
mov
push
pop
sbb
dec
push
jp
or
std
repz
jnp
rol
inc
out
fiaddl
and
add
mov
or
jmp
or
test
push
mov
sbb
pop
pop
push
gs
scas
subl
fimuls
sahf
dec
sti
loopne
imul
lret
mov
lahf
subl
outsl
es
cmpsl
add
jle
adc
ret
mov
xor
inc
mov
cwtl
insl
testl
mov
in
in
movsb
mov
inc
add
xchg
fdivrs
js
mov
mov
mov
clc
test
dec
rolb
rclb
xchg
lock
cld
inc
divb
fs
mov
mov
pop
or
sub
repz
outsb
and
nop
fbstp
sub
push
jmp
int
xchg
mov
dec
sbb
mov
mov
filds
pop
jecxz
mov
ret
or
xchg
fwait
jbe
loop
popf
aas
dec
jo
rorl
and
jnp
aam
inc
testl
push
lcall
imul
jb
and
adc
sar
lods
outsl
hlt
scas
test
scas
aaa
das
xlat
aad
pop
xchg
xor
pop
std
jne
repnz
pop
adc
insl
movsb
sbb
aas
inc
jo
mov
dec
cmp
mov
sub
jo
jne
divl
cld
and
loope
or
test
jnp
inc
dec
repz
rclb
and
adc
adc
jb
idivl
sahf
inc
aaa
lcall
xchg
test
push
icebp
shlb
adc
or
fcmovu
xor
xor
ret
jle
mov
sti
out
adc
lea
lahf
push
stos
orl
push
ret
sbb
sub
cli
sbb
xchg
xor
and
jp
pop
pop
orb
mov
ret
pop
insb
test
iret
je
imul
xor
add
fisttps
pop
mov
mov
lock
daa
cmp
cld
in
xlat
or
xchg
addl
lds
push
nop
les
sahf
std
mov
pop
jne
sti
and
andl
add
test
pop
xorl
mov
popf
test
sub
inc
fdivrp
push
pop
sub
cmpsb
sarl
out
lcall
addr16
dec
and
jae
push
push
jbe
adc
pop
mov
ja
shll
and
cs
cli
cli
mov
cwtl
mov
lret
push
adc
add
mov
addl
jo
sbb
inc
outsb
cmp
orb
adc
fucomi
lcall
xchg
inc
scas
push
sub
mov
push
xor
shl
addr16
leave
lret
into
insl
pop
pop
mov
iret
shl
xor
ret
cmp
ret
or
lahf
std
sbb
pop
adcl
sub
jno
pusha
and
std
adc
popf
rclb
in
ds
jp
mov
dec
jle
outsl
ja
push
push
cltd
push
jae
mov
testl
test
call
add
les
sbb
imul
sbbb
dec
or
sbb
out
js
sub
mov
jno
or
icebp
and
pop
sahf
cs
adc
add
cmp
sbb
mov
ja
ret
sbb
not
jg
scas
jecxz
adc
add
push
clc
push
xchg
loop
cmp
cltd
sbb
mov
add
mov
loope
mov
and
sbb
mov
ja
cli
cmp
jnp
mov
jecxz
leave
mov
shlb
insb
dec
pop
push
add
js
inc
inc
push
jge
mov
and
ret
popa
inc
stos
xchg
jg
and
push
adc
lret
and
xor
xchg
je
mov
xor
mov
cmp
mov
sub
push
daa
jmp
bound
scas
jnp
fimuls
sub
pushf
dec
mov
out
xor
outsl
adc
mov
outsb
mov
mov
or
or
adc
push
lds
insb
icebp
aad
xchg
xor
ficoms
and
or
or
mov
pmulhw
cld
cmpl
xchg
push
dec
fwait
repz
push
insl
dec
adc
push
stos
jmp
mov
out
push
jge
idivl
ds
sub
enter
outsl
push
repz
ljmp
sbb
pop
int
subl
mov
repz
lcall
sbb
pop
xor
fnstenv
ret
notb
dec
es
vxorps
cmp
mov
je
nop
xor
mov
outsb
xchg
ds
cmp
and
scas
xchg
adc
out
cmp
adc
sbb
sar
add
mov
push
fs
dec
cld
scas
sbb
imul
out
mov
cs
outsl
xchg
pushf
pop
les
or
pop
cmp
dec
push
icebp
pop
and
ja
xor
fisttpll
jns
cmovbe
adc
push
xchg
or
das
inc
add
add
into
push
lahf
subb
or
or
pop
fbld
int
cmp
fs
inc
mov
subl
test
popf
push
hlt
adc
mov
and
sbb
nop
bound
push
jnp
fdiv
sarb
shrb
push
arpl
movsl
push
push
inc
ds
mov
shll
inc
sub
loopne
test
dec
dec
add
out
mov
and
xor
and
rcr
jnp
jl
sub
jg
cmpsl
push
jb
inc
or
jno
mov
sub
repnz
cmpl
out
sub
cltd
aaa
adc
aam
in
outsb
ret
mov
cmpsb
push
mov
fwait
stos
mov
repz
fcoml
xchg
xor
push
lahf
in
mov
dec
dec
and
mov
neg
jne
shll
std
jbe
sub
cld
arpl
insb
subl
pop
sub
push
hlt
push
xchg
jb
sub
pushf
std
push
daa
cmpsb
xchg
mov
xchg
clc
cs
shll
js
adc
sub
sbb
push
push
shrl
push
mov
inc
mov
or
test
add
cmp
jne
hlt
call
push
adc
cmp
pop
js
nop
xchg
mov
in
sbbl
fidivrl
in
adc
out
fstpt
aam
push
leave
xchg
xchg
xorb
fwait
nop
push
leave
mov
mov
ljmp
xchg
mov
shl
mov
sub
daa
xor
ja
stc
and
cmc
movsl
insb
dec
or
call
cmc
out
fmuls
push
mov
cmpsb
mov
push
xchg
repnz
pop
loope
lret
mov
inc
jecxz
cmp
and
dec
aas
pop
add
jnp
loop
sub
dec
test
pop
iret
mov
test
fwait
decb
xchg
sbb
push
pop
jp
xor
fs
inc
sub
loopne
dec
ror
mov
std
fsubl
cli
pop
orb
lret
insl
je
ds
ret
stos
push
out
add
lods
outsb
lcall
or
rcrl
sub
imul
adc
xchg
lods
push
insl
push
int3
sub
mov
je
mov
popf
hlt
add
ror
aad
fwait
lret
in
mov
mov
xchg
cmp
cmp
add
push
dec
iret
loop
xor
xor
nop
repz
or
or
xchg
enter
stos
insb
repnz
ja
add
std
mov
mov
sub
mov
sub
fidivs
add
xchg
xor
lahf
popa
mov
jp
jecxz
adc
cmp
add
xor
mov
and
jl
iret
or
test
adc
pop
and
adc
xor
sbb
sub
sub
jle
jle
bound
cs
cli
dec
sub
adc
xchg
jge
pop
jne
dec
out
adcb
mov
ss
cmp
add
push
mov
sub
or
inc
filds
jecxz
xchg
out
leave
cmp
loopne
ds
enter
xchg
lcall
sbbl
jle
les
push
adc
fchs
pop
pop
mov
jb
hlt
insb
faddp
or
push
push
xchg
ss
call
mov
and
out
pop
mov
pop
sub
and
outsl
mov
adc
jl
jmp
xchg
ss
push
add
dec
mov
jae
push
xchg
xchg
call
sub
dec
subl
adc
or
mov
fidivs
dec
push
scas
dec
aas
ret
sbb
gs
dec
xchg
fistpl
call
inc
xchg
fidivs
sbb
adc
and
adc
xchg
mov
int
or
jnp
call
dec
xchg
mov
xchg
sbb
mov
push
cwtl
arpl
and
add
sbb
adc
iret
flds
cmp
jnp
aad
int3
in
fdivl
inc
xchg
cmp
aam
gs
sub
in
pop
loop
imul
adc
lret
jge
jp
ljmp
push
scas
in
xor
sti
or
pop
jno
jg
ljmp
jbe
test
out
cmp
fcmovb
into
imul
ss
or
je
mov
jno
imul
cmpsb
js
out
test
push
or
add
push
movsb
rcr
cmp
cmp
mov
xchg
push
inc
movsb
pop
inc
daa
add
push
cmp
lahf
notb
mov
fists
pusha
jns
or
xor
pop
mov
outsl
repz
sbb
adc
bnd
shl
scas
fsubs
or
and
xor
sbb
repz
sti
movsb
imul
xchg
pop
xchg
cmp
jne
pop
xchg
jmp
mov
cmpl
xor
sbb
test
xlat
mov
mov
into
inc
rcrb
mov
inc
mov
and
pusha
leave
mov
xchg
jnp
or
mov
repz
pop
shrb
push
rcrb
sub
fwait
or
jo
data16
out
cmp
imul
jno
mov
outsl
push
jne
push
ret
and
dec
sub
mov
adcl
cmp
inc
mov
sbb
cmp
mov
push
mov
clc
mov
xor
jle
or
ret
je
cmp
xor
xchg
mov
in
pusha
sahf
jno,pn
ljmp
stos
sub
jmp
xchg
cmpsl
loop
jp
adc
jg
cmp
sbb
mov
xchg
jbe
jno
xorb
aam
sbb
stos
jle
adc
mov
leave
insl
jle
sub
inc
add
xlat
push
pop
dec
ds
call
cmc
xor
mov
mov
das
mov
or
xchg
and
xchg
call
xor
sbb
ret
nop
jecxz
pop
jno
push
mov
aad
loop
xor
repnz
iret
add
xor
shrb
inc
mov
movsl
inc
xchg
pop
mov
push
xor
inc
jg
inc
popa
add
pop
sub
ror
enter
lock
mov
mov
dec
pop
js
test
xchg
xchg
jne
mov
subl
mov
sub
xchg
push
push
pop
mov
popf
mov
mov
test
fdivrp
out
push
cltd
repz
call
ljmp
lods
int
cmpsl
adcl
mov
inc
popa
call
loop
jg
test
push
jae
add
shll
rcll
adc
pop
ss
cmpsb
xchg
stos
sub
insb
ds
xchg
pop
xorl
ret
inc
xor
mov
dec
cmpl
ja
outsl
pop
lds
add
jne
dec
scas
inc
lret
or
fmull
fwait
jb
out
stos
dec
jg
lcall
scas
test
sahf
testl
xlat
stos
inc
sti
xor
je
ja
jo
js
ja
outsl
sub
roll
xchg
test
mov
mov
add
jno
sub
cmp
les
dec
repnz
inc
cli
lcall
iret
mov
jle,pn
pushf
or
mov
or
cmc
pop
jge
sahf
sbb
in
fs
pop
and
dec
cltd
push
push
push
test
ss
cmp
hlt
cmp
ja
subb
sbb
xchg
pop
cltd
or
loopne
xchg
lret
lcall
push
sub
test
das
sbb
gs
dec
lods
push
into
mov
mov
les
test
push
jge
xor
js
add
popl
jecxz
mov
xchg
mov
nop
sub
pop
lock
out
push
stc
fwait
insb
orl
cwtl
popw
jl
out
scas
lret
push
js
hlt
push
fs
scas
fcomi
cmp
imul
dec
filds
add
imul
adc
mov
or
inc
shrl
or
mov
shll
imul
rol
pop
das
or
cmpsl
mov
jb
insb
adc
push
sub
dec
loopne
adc
popa
lahf
popf
sbb
xchg
sub
xor
popf
in
lahf
lods
ficomps
xchg
es
repz
insl
and
scas
dec
je
pop
mov
sbb
push
inc
pop
subb
dec
pop
push
inc
push
sub
xor
in
add
lret
lret
aad
fstpl
pusha
add
adc
outsb
and
cs
imul
cmpl
cld
mov
xchg
cmp
jle
sbb
mov
add
mov
mov
fsubl
imul
sti
iret
subb
popf
push
cwtl
xor
xchg
push
inc
or
xchg
in
xor
push
sub
repz
sbb
loop
outsl
mov
aas
inc
push
mov
sub
les
ret
filds
mov
je
lret
ret
loopne
add
inc
adc
pop
ljmp
stos
jmp
jle
adc
in
outsl
test
pop
ss
sbb
mov
es
mov
repz
sbbl
popa
xchg
cmp
dec
rcll
pop
push
push
jnp
scas
in
test
fwait
insb
aad
dec
arpl
out
imul
mov
testb
in
jns
cltd
sub
dec
insl
xor
nop
adc
push
stc
mov
inc
add
jle
mov
shlb
adc
int3
add
xchg
mov
sbb
xorb
mov
lods
cmpsl
in
mov
add
mov
mov
sbb
stos
test
fstpt
jecxz
repz
int
dec
xchg
insl
hlt
sbb
cmp
shl
lods
imul
cwtl
pushl
inc
test
mov
daa
inc
in
ljmp
inc
enter
in
add
pop
pop
sub
jl
cmp
mov
ret
repnz
inc
hlt
insb
leave
roll
jp
mov
addl
js
stc
hlt
cmp
ss
cs
das
push
cmc
xchg
iret
inc
movsl
in
mov
test
mulb
mov
movsl
and
jge
pop
cmp
and
cmp
dec
or
mov
xchg
push
mov
cmpsl
cmp
les
fisubrl
rclb
dec
sub
pop
rcr
cmp
adc
mov
fisubl
jae
mov
push
inc
mov
jecxz
add
cmpsb
orl
jmp
or
and
mov
or
pop
push
pop
adcb
aam
xor
js
cmp
cwtl
xchg
iret
fdivl
popa
sub
in
or
repz
je
mov
shlb
sub
mov
dec
movsb
jb
mov
jle
pop
xchg
stos
movsl
ds
inc
or
xchg
aad
pop
jge
aad
jp
xor
mov
roll
xchg
movsl
fcoms
data16
imul
add
mov
orb
pop
addl
popf
push
adcb
add
xor
mov
sti
mov
mov
sub
pop
dec
xlat
les
xchg
push
insl
mov
jo
sbb
xor
rorb
aad
orl
mov
jg
int3
pop
adc
movsl
lods
and
push
xchg
xor
stos
jge
mov
das
sub
cmp
dec
fsubl
or
icebp
fwait
and
push
pop
pop
xchg
dec
ss
xor
arpl
in
sbb
aad
cwtl
add
fwait
aas
add
lcall
scas
ficompl
scas
lock
popf
ror
mov
fdiv
ss
out
xlat
rorl
movsl
mov
fs
and
sbb
negl
in
int
add
cld
pusha
mov
mov
mov
out
jnp
insb
bswap
ds
aas
dec
imul
test
dec
add
jecxz
add
inc
jb
test
xchg
loop
loope
pop
mov
xchg
int3
arpl
loop
cli
sbb
hlt
test
xchg
mov
mov
mov
dec
sbb
cmp
add
lods
add
adc
push
lcall
pop
inc
jns
stos
fstenv
adc
pop
adc
mov
sub
add
push
mov
inc
aas
mov
push
orl
xchg
test
inc
xchg
sahf
lret
xlat
loope
and
in
cmp
leave
dec
negb
pop
pop
or
movsl
pop
sahf
movsl
fidivs
sub
std
inc
and
inc
mov
xorb
mov
sbb
ljmp
sbb
fldl
mov
incl
call
test
std
xor
jnp
add
mov
or
cmp
shrl
sub
fidivrs
push
lds
push
call
les
mov
ljmp
inc
iret
fimull
dec
mov
adc
aaa
add
jo
mov
cld
sarl
jecxz
push
fimuls
xlat
in
add
aaa
shll
xchg
popa
in
lock
stos
cmp
add
cld
jns
rclb
in
pushf
cmp
movl
iret
xor
outsb
sbb
sarl
and
imul
xchg
loope
jge
xchg
rcll
pop
xchg
cmp
sub
fidivl
sbb
das
push
out
push
jecxz
cmp
mov
sti
nop
aaa
adc
loopne
shrl
cmp
jb
rcr
dec
sahf
out
addr16
loopne
mov
dec
fcompl
mov
mov
loope
imulb
push
mov
stc
mov
or
test
imul
mov
inc
mov
out
pop
icebp
int3
or
add
pop
jne
add
inc
dec
jnp
pop
cwtl
sub
pop
jnp
fldt
pop
int
sub
rclb
add
lret
lcall
jb
stc
jne
xchg
push
pop
sti
lret
pop
aad
mov
popf
jmp
adc
jge
xchg
pop
divl
fistl
movsl
pop
stc
popf
int3
mov
add
enter
ljmp
arpl
je
mov
adcb
xchg
or
dec
je
arpl
jbe
push
add
in
vphsubbw
stos
mov
and
in
push
xchg
fstl
cmp
pop
shrl
divb
xor
lcall
dec
stos
push
xchg
sbb
sbb
xchg
mov
mov
scas
sbb
in
sbb
fwait
in
inc
hlt
jno
lds
push
or
dec
or
fs
mull
mull
push
jecxz
and
fisubl
in
mov
mov
clc
dec
mov
dec
and
adc
lock
jg
stos
fsubl
stc
ficoms
jnp
negl
xchg
mov
jmp
xor
push
cwtl
adc
in
and
mov
mov
dec
mov
dec
fs
push
adc
dec
fldcw
les
popa
inc
js
jge,pt
ficomps
jne
xchg
xor
mov
addr16
pop
mov
add
stos
pop
xchg
xchg
jmp
xlat
stos
and
pusha
push
push
aas
fdivs
pop
mov
inc
or
arpl
test
jns
xchg
sub
jp
cmp
out
testl
mov
pop
pop
call
jge
cmp
xlat
je
ja
pushf
ret
mov
add
inc
push
lret
dec
stos
xor
mov
pop
lret
arpl
cmp
add
jbe
bound
push
cmp
jmp
jmp
pop
test
lea
into
and
cmp
dec
ljmp
dec
push
mov
out
fists
lret
pop
push
daa
adc
int
cmc
lret
push
std
test
mov
sub
scas
push
mov
es
mov
push
push
movsb
inc
out
movsb
enter
inc
xchg
lods
dec
cli
xchg
leave
adc
movsl
dec
out
adc
cmc
fs
dec
aas
sbb
mov
jnp
jno
iret
pusha
jg
ret
dec
push
das
aaa
cmpsb
sub
add
into
test
mov
scas
andb
cltd
xchg
sub
push
stos
ffreep
push
ds
insl
out
inc
cwtl
movntps
test
cmp
test
imul
xchg
adc
lahf
push
and
mov
aas
fisttps
mov
adc
stos
pop
popl
cltd
lret
insl
pop
insl
bound
cli
lret
aaa
lret
aam
stos
adc
dec
pop
jns
mov
dec
mov
mov
or
fstpl
fnstenv
imul
push
xor
pop
xsaves
ljmp
gs
mov
arpl
inc
xchg
adc
push
lods
or
sub
imul
xchg
lea
jae
roll
pop
mov
fisubs
jge
xchg
in
out
fwait
sub
and
dec
pop
movsl
fwait
sub
xchg
lea
jnp
xchg
pop
mov
and
jbe
mov
mov
sub
xorl
inc
mov
iret
or
sub
out
shlb
mov
pushl
jo
lods
leave
cs
cs
mov
push
lea
xchg
int
shl
push
hlt
jmp
and
pop
cmc
scas
insb
ret
cld
mov
pop
lret
out
push
cmp
rcrl
addr16
call
arpl
mov
inc
fdivr
mov
xor
xchg
jecxz
sub
dec
fs
adc
and
aaa
ljmp
sbb
lcall
sbb
loop
push
jnp
sub
mov
xchg
pop
arpl
pop
dec
push
cltd
adc
lahf
sbb
aam
xchg
hlt
fs
cltd
cld
jnp
adc
ror
aas
or
fnsave
fildll
arpl
imul
mov
mov
rclb
mov
jl
jp
mov
enter
andl
sti
ret
cli
lret
adc
sti
mov
sbb
pushl
enter
fs
xor
pop
test
mov
and
in
cmc
mov
fists
xor
aam
mov
or
mov
pop
mov
mov
out
jno
mov
add
jo
ret
mov
mov
fbld
iret
lret
ds
jbe
mov
push
mov
mov
fs
jge
lock
enter
cmp
jle
adc
repz
jmp
sti
mov
push
cmc
leave
jno
mov
das
mov
ret
popf
xor
bnd
pusha
push
fcompl
jge
xor
nop
sahf
and
sbb
xlat
jns
cmpsl
adc
add
pop
xor
outsl
push
dec
sub
dec
addl
xor
pop
xlat
dec
xor
jle
jp
iret
cmp
into
push
mov
arpl
int3
push
sahf
or
repz
mov
sub
lds
or
out
or
sbb
mov
pop
fmuls
or
push
adc
xchg
fnstenv
cmp
pop
cmp
pop
cmp
pusha
add
mov
jns
addl
pop
rorl
sahf
fstpt
shrl
das
cld
aam
js
jge
lret
pop
repnz
aad
imul
sti
mov
sbb
test
cmp
dec
add
icebp
mov
outsl
std
dec
push
dec
ret
sub
call
inc
pop
movsb
or
outsl
cmp
mov
fildl
dec
mov
clc
or
mov
fadds
das
push
int3
adc
mov
fstps
and
or
inc
sbb
mov
pop
pop
fisttpl
sub
int
popf
data16
popf
pop
jmp
push
fidivl
pop
sub
mov
repz
fwait
outsl
xor
std
sub
mov
sub
in
adc
stos
push
cmc
jo
aaa
rorb
xchg
in
pop
popf
jo
arpl
inc
inc
add
test
popf
cmp
lret
push
imulb
enter
sbb
sub
adc
mov
notb
adc
out
mov
mov
pop
out
xor
flds
outsb
xchg
and
xchg
lds
jmp
dec
and
imul
mov
jnp
adc
jbe
repz
pop
fdivrl
xor
je
pop
je
or
dec
mov
adc
out
xchg
loope
cmp
fidivrs
mov
push
in
jl
popl
daa
fwait
nop
es
cmp
icebp
in
popa
dec
mov
push
jne
fstpt
mov
cmpsb
dec
inc
mov
cmpsl
adc
rorb
scas
xor
cmp
fidivrs
and
out
movsb
nop
out
int
pop
test
push
jp
cltd
outsl
jb
dec
or
fisttpll
out
dec
bound
mov
xor
mov
add
mov
xor
in
dec
loopne
dec
or
int
movl
mov
fisttps
fcomps
jbe
jl
stos
leave
jae
and
filds
add
push
rol
out
popf
dec
lods
mov
add
ret
mov
xor
ja
jae
xchg
lea
or
add
jo
sub
or
push
scas
sbb
cmp
dec
aaa
addr16
mov
daa
mov
mov
add
mov
dec
clc
xor
hlt
add
insl
stos
addr16
lock
pop
xchg
dec
inc
imul
stos
rorb
insl
out
sahf
ljmp
pop
jge
mov
pop
or
clc
das
addr16
sbb
add
push
lea
nop
xor
ret
test
push
inc
jl
mov
loop
sub
aaa
mov
jg
xor
jp
adc
int
add
or
mov
adc
pop
sbb
scas
mov
sub
push
adc
mov
in
movsb
xchg
dec
xor
xlat
test
lods
add
int3
fwait
hlt
mov
insl
sbbb
xchg
in
push
mov
pop
and
push
std
test
fxch
das
sub
add
push
imul
jl
sahf
dec
mov
xor
sub
sbb
cmp
cmp
adc
dec
movsl
xor
or
or
xor
or
sti
bound
orb
xchg
push
andb
aas
push
pusha
insb
enter
xor
gs
in
xchg
fistpl
cwtl
mov
and
mov
pop
xor
shr
jne
and
sbb
lret
outsb
gs
inc
push
and
repnz
xchg
jle
stos
jno
adc
inc
aad
mov
sahf
shll
sub
adc
je
inc
and
jle
xchg
and
call
loope
add
pop
cmp
pusha
pusha
xor
js
enter
dec
mov
cld
sarb
aam
xchg
inc
push
in
leave
int3
cld
lods
imul
xchg
mov
mov
leave
jae
xor
popa
popa
les
fstps
rclb
mov
out
and
sarb
push
xchg
push
pop
sahf
cmp
jno
movsb
add
in
xor
sub
or
data16
les
lock
inc
xlat
dec
add
mov
pop
leave
pop
sub
ret
dec
mov
out
fidivrl
fists
outsb
xlat
in
pop
adc
dec
dec
lock
adc
mov
xchg
sub
arpl
cmp
fmull
jo
mov
rol
cli
or
out
ret
and
mov
or
clc
lcall
xchg
shl
and
popf
dec
bound
cli
pop
pop
pop
inc
xchg
ret
adc
mov
cmp
loopne
pop
inc
jae,pt
sub
mov
pop
inc
test
inc
mov
rcrl
sar
mov
sbb
and
ljmp
test
pop
shll
sbb
pushf
jb
les
inc
icebp
push
inc
jbe
xor
sub
xor
inc
xchg
adc
xchg
pusha
add
adc
xchg
sub
aam
push
add
xorb
xor
sti
push
jae
je
or
xchg
jb
jbe
adc
sub
mov
popa
cmpsb
jge
sahf
insb
jmp
push
not
popf
push
insb
add
pushl
sbb
adc
insl
cmpsb
das
fisubl
jl
inc
test
jnp
inc
and
mov
xor
xchg
or
das
jg
clc
adc
push
mov
cli
out
test
cmc
in
mov
inc
scas
mov
dec
nop
pop
mov
pushf
mov
or
jl
mov
das
jle
dec
je
mov
out
loop
mov
xor
arpl
sti
mov
in
imul
sarl
xor
iret
daa
add
aaa
inc
jne
mov
add
push
and
inc
lods
adc
js
fsubrs
mov
and
cmpps
xlat
fildl
and
scas
lds
push
lahf
fs
psadbw
cltd
aaa
sub
and
repnz
icebp
pop
jmp
insb
cli
dec
stc
sbb
jne
mov
jo
jmp
sahf
pop
pusha
push
mov
adc
ret
mov
push
pop
fs
xchg
and
lcall
or
enter
cmp
jle
les
cmp
mov
mov
mov
lret
cmp
jp
js
repnz
sub
jl,pn
sti
les
adc
aas
popf
pushf
shr
imul
adc
mov
inc
sub
lock
jnp
loop
hlt
dec
push
pop
faddp
or
scas
call
add
leave
sbbl
fisubl
add
fs
xchg
mov
pop
shrl
mov
cmp
popa
enter
mov
enter
dec
jge
xor
adc
pop
mov
aad
int
xchg
sub
ficompl
stos
sbb
mov
add
xchg
inc
iret
je
cmp
cs
ja
inc
adc
or
xchg
outsl
pusha
mov
dec
xchg
mov
inc
push
mov
repnz
xor
pop
and
rorb
sub
xchg
jno
rol
mov
add
adc
push
shr
adc
nop
shlb
testb
das
mov
mov
stos
arpl
popf
jno
ds
mov
push
icebp
fimuls
inc
and
rorb
dec
scas
movsb
call
in
sti
cltd
in
scas
xor
and
jmp
add
mov
cmp
xchg
sbb
mov
andb
cmp
rolb
movsb
dec
inc
daa
mov
popf
test
test
fs
mov
push
fwait
lret
mov
jmp
adc
and
fdivrl
mov
pop
aas
ret
push
cs
lods
push
int3
mov
mov
inc
sub
jae
cmpb
xlat
pop
inc
pop
ror
push
xlat
imul
icebp
out
sahf
ljmp
les
mov
dec
or
sub
fwait
stos
mov
cwtl
addl
dec
jno
xchg
test
xlat
jns
and
jmp
jl
push
popa
xchg
lcall
inc
mov
fcoml
add
fldl
pop
pusha
jnp
add
sbb
iret
cld
sub
add
inc
cmp
clc
xor
jecxz
jp
gs
std
stos
outsb
stos
adc
and
int3
popa
mov
icebp
mov
out
push
or
add
xchg
iret
xchg
mov
fistpl
cli
popf
jbe
jne
jl
test
ret
sarl
xor
fldcw
sbb
es
jmp
in
xor
jo
jb
push
pop
out
add
aas
lods
mov
xchg
loop
mov
ret
jmp
test
inc
add
mov
sbb
mov
sti
icebp
push
lds
into
test
pop
lret
xchg
mov
cmp
push
push
nop
pop
pop
mov
lcall
movsl
lret
mov
stc
adc
jnp,pn
int3
push
subb
xor
mov
mov
xorl
call
movsb
lret
sbb
push
in
mov
or
xlat
push
test
adc
fdivrs
fwait
jle
mov
dec
adcb
or
out
xchg
loop
push
or
push
jmp
xor
mov
jbe
adc
ret
daa
xchg
scas
ret
sbb
pmuludq
fucom
mov
gs
shl
and
inc
ret
lods
dec
xchg
testl
fildll
xor
faddl
test
pop
push
dec
inc
loope
mov
mov
adc
cmp
push
push
inc
push
loope
pop
shll
iret
cmc
and
xor
fldt
jge
hlt
imul
stos
jnp
gs
fdivr
insb
fcomps
adc
in
pusha
icebp
int3
sbb
mov
cltd
rolb
pop
mov
or
andl
pusha
inc
inc
addl
xchg
xrelease
aas
push
jge
cmp
arpl
cwtl
test
push
ljmp
ds
adc
notl
sbb
in
int
sbb
push
or
out
xor
cs
push
cmp
out
std
jb
test
decb
add
pop
in
dec
or
cmpsl
push
or
outsb
fs
ret
sbb
inc
arpl
xor
pop
movb
dec
adc
mov
dec
add
push
cltd
jns
ljmp
mov
dec
cmp
push
xchg
xlat
xor
fisttpll
pop
adc
jg
adc
sbb
int
insb
xchg
pop
fstl
sub
sub
and
jp
subb
jl
mov
je
jle
xor
loope
addr16
lret
inc
fiadds
push
les
add
imul
xchg
mov
popf
sbb
in
lods
fidivs
nop
call
push
xor
xor
je
into
rcrb
js
icebp
clc
xchg
xchg
pusha
insl
out
jne
jge
pop
mov
shlb
leave
icebp
or
fidivl
mov
dec
mov
cld
icebp
out
and
mov
and
add
push
pop
lret
or
data16
or
jp
fildl
pop
add
lahf
in
xor
add
aaa
sti
in
jl
mov
xchg
sbb
push
jmp
leave
ror
lds
arpl
aaa
test
adc
pop
push
lahf
mov
test
cmpsl
mov
pop
js
imull
mov
mov
inc
dec
std
popf
aad
fnstsw
mov
aaa
ds
mov
aam
cmc
fs
mov
pop
and
xor
pop
std
xor
ja
cmpsl
sbb
stc
out
movsb
adc
mov
push
out
jecxz
lods
mov
arpl
js
imul
push
ss
call
jno
add
sbb
xor
out
push
ret
aad
pop
and
cmp
dec
and
out
jnp
or
divl
rcrl
dec
push
cmp
xchg
cld
test
out
jns
pop
mov
lods
pop
std
arpl
sbb
cs
out
jmp
je
pop
cmp
and
cmp
insb
inc
lret
dec
lds
jp
adc
pop
insb
arpl
push
sbb
into
cs
fs
cmovbe
mov
jle
ss
dec
mov
imul
outsl
add
dec
inc
test
or
lahf
xchg
fwait
sbb
jecxz
imul
lret
jle
test
mov
xor
out
and
inc
rorl
jns
test
dec
sub
das
mov
aas
fildll
in
dec
out
push
stc
and
or
pop
inc
sub
pop
ss
sbb
sub
clc
and
sub
test
pop
mov
xor
push
outsb
cmp
xor
outsb
inc
fldl
mov
jl
mov
int
inc
mov
cmp
imul
sbb
les
mov
xor
xchg
sub
pop
pop
popa
into
sbb
bound
in
and
add
mov
or
minps
sbb
mov
pop
call
inc
lds
out
jne
sahf
mov
rorb
xchg
jl
incb
test
into
and
or
lahf
test
push
mov
push
add
or
cmpl
push
jbe
mov
test
jle
xchg
fs
outsl
lods
xchg
push
inc
idivb
mov
xchg
push
mov
ret
mov
or
arpl
sbb
add
test
jno
lahf
test
fcoml
ret
mov
test
lods
jge
mov
xor
or
arpl
jns
or
add
ss
andl
dec
fsubrs
aaa
sahf
xchg
int3
xor
fimuls
jl
mov
add
add
subl
inc
add
push
xchg
lods
fwait
mov
cs
icebp
inc
mov
gs
ds
push
jge
enter
sub
cld
dec
pop
dec
push
shll
mov
mov
sub
aaa
xchg
or
mov
mov
lock
sub
enter
or
mov
lods
mov
in
ret
inc
or
pushw
test
push
stos
mov
adc
subl
out
add
ljmp
adc
jns
push
jl
mov
inc
adc
jmp
jl
lods
daa
cmpb
ljmp
sub
pop
in
lods
adc
lea
mov
cmp
add
add
add
test
pop
jmp
jne
push
adc
dec
push
scas
ja
lods
lea
or
fisubl
sti
flds
and
fcmove
movsb
andb
mulps
xor
sbb
je
inc
repz
mov
fimull
in
pop
jl
test
je
mov
idivb
popa
call
xchg
pushf
lret
push
xchg
test
insb
scas
dec
sbb
call
in
sbb
mov
jns
std
inc
mov
mov
pop
pop
repnz
dec
repnz
test
push
sbb
data16
nop
adc
js
adc
out
cmp
loopne
ss
cmp
ret
sbb
pop
inc
les
ret
leave
push
lods
sbbl
lods
femms
fcmovbe
mov
xchg
jbe
and
adc
or
das
test
inc
call
inc
push
xor
lret
lock
sbb
out
jl
and
cmp
outsl
sub
inc
imul
dec
repnz
pop
repnz
lods
sti
fldcw
cs
push
jbe
mov
bound
pop
aas
jecxz
lret
jmp
mov
adc
lock
or
sub
lods
xchg
in
pop
add
repz
pop
jmp
push
mov
inc
and
cmpsl
sbb
xor
call
loope
es
jl
je
ret
sub
pop
movsl
xor
and
shrb
popa
lret
xchg
sbb
lret
xchg
mov
jo
mov
push
sbb
pop
cmp
or
pop
xor
pusha
or
out
mov
mov
les
mov
lcall
sarl
movsl
adc
test
flds
nop
leave
adc
dec
push
mov
test
scas
clc
dec
pop
imul
cmp
repz
bound
je
cmp
jo
aas
dec
ja
sahf
or
dec
and
sti
lods
cmp
xchg
pop
into
rcr
jecxz
xchg
test
test
xchg
inc
or
test
jmp
pop
jbe
test
cmpsl
jg
pop
imul
push
into
inc
aaa
jb
mov
adc
dec
mov
in
mov
fwait
sbb
adc
or
xchg
lock
ret
mov
insb
sbb
and
sub
xor
sti
and
xchg
and
test
out
add
into
or
cmp
test
dec
mov
cld
test
xorl
adc
xor
dec
mov
inc
es
and
lret
popf
push
xchg
test
ljmp
in
lods
xchg
or
dec
dec
sub
mov
test
mov
xchg
rcrl
cltd
inc
jo
stc
int
in
jbe
fiaddl
dec
or
into
jno
call
and
dec
mov
jecxz
in
or
inc
jne
dec
idiv
fldcw
loope
push
lahf
lock
push
lret
mov
sbb
mov
lea
testb
mov
mov
pop
sbb
mov
cld
dec
mov
push
cli
sub
add
out
and
sbb
orl
cmp
ljmp
popf
pop
mov
inc
sahf
push
fisubs
repz
xlat
cltd
ss
repnz
dec
adc
inc
jne
pop
or
cmp
adc
jmp
ret
nop
hlt
dec
pop
push
jmp
jle
jmp
sub
leavew
stos
hlt
aad
dec
xor
ljmp
mov
pushf
sub
jb
lods
in
pop
jb
popa
sbb
leave
aad
or
and
daa
and
movsl
xchg
shll
sub
jo
pop
mov
std
scas
jp
cmc
pop
aad
mov
push
sbb
clc
jo
ljmp
dec
adc
inc
or
fidivrs
push
add
pop
addl
pop
cmp
push
int3
adc
sarl
cmp
cli
ret
sbb
jl
pop
dec
lahf
xor
push
lret
pop
scas
mov
aas
dec
dec
filds
hlt
pop
scas
push
xchg
jne
mov
mov
clc
mov
lods
or
rcrl
imul
dec
jmp
scas
mov
insl
sti
out
fs
xor
dec
enter
xchg
and
movsl
mov
mov
jp
cmp
jo
sub
mov
lret
push
inc
jo
out
scas
mov
dec
shlb
mov
pop
mov
add
push
push
mov
repnz
nop
jno
fsubl
mov
cmpsl
pop
dec
sub
sbb
int
add
adc
and
and
mov
mov
or
rcr
lds
cmp
adc
jg
gs
add
xchg
sub
in
or
push
dec
outsl
dec
stos
mov
mov
mov
sub
loopne
mov
xchg
clc
loopne
dec
scas
xor
movsl
stos
lcall
sub
stos
xchg
xlat
repz
aaa
lahf
nop
inc
push
inc
xor
mov
push
cmc
jle
loope
cmp
dec
xchg
cmp
icebp
testb
mov
cltd
dec
es
imul
mov
clc
ja
pop
ja
or
mov
or
adc
in
incl
add
arpl
out
ret
std
xor
fistpll
dec
sarl
inc
jp,pt
mov
mov
mov
cld
mov
xorl
jbe
je
inc
lea
stos
jb
jge
scas
jo
pop
push
dec
imul
jno
shl
mov
rclb
int3
sbb
mov
shl
cwtl
sbb
add
outsb
push
jmp
mov
repz
imul
jne
hlt
mov
inc
pop
loopne
inc
jge
push
sbb
or
lods
add
push
rcrb
andl
push
cmp
mov
ja
pop
sbb
pusha
addr16
insb
push
xchg
push
mov
in
or
mov
lock
or
aas
pop
add
pop
jle
out
shr
pop
sbb
in
add
fsubr
cmpsl
push
std
push
fidivl
std
sub
pop
add
dec
fs
std
rcr
rclb
insb
and
aaa
xor
push
js
icebp
ljmp
xor
mov
leave
ret
lcall
mov
lods
or
repnz
jne
add
nop
movsl
fildl
adc
jo
psrlw
sub
mov
call
cmpsl
fstpt
movsb
add
dec
in
lods
out
sub
in
cltd
xchg
insb
cmp
xchg
lahf
pusha
fs
mov
cltd
sub
je
sbb
cmp
sub
cmc
jmp
ret
and
mov
sarb
das
int
insb
fistpl
mov
pop
mov
mul
test
les
sub
mov
js
into
adc
test
daa
call
dec
dec
aad
sub
jo
dec
int3
jmp
mov
adc
cld
dec
sbb
add
add
das
loope
xlat
icebp
mov
sbb
xchg
sbb
into
inc
pop
shlb
pop
scas
and
leave
jae,pt
add
daa
sub
pop
mov
stc
xor
rol
push
frstor
jg
xchg
or
xchg
dec
push
lcall
push
jecxz
push
insl
mov
decl
or
dec
jbe
stos
call
movsl
mov
lahf
cld
gs
pop
dec
cmp
sbb
cwtl
call
and
sub
sbb
push
push
cli
xchg
loope
dec
fsubs
cmc
push
daa
in
sahf
mov
clc
filds
test
loopne
pusha
or
fs
rcr
idivb
dec
xchg
push
jg
stos
mov
jnp
sub
orl
lods
mov
aaa
sub
loopne
mov
ret
adc
je
xchg
jge
pusha
lock
xchg
out
cwtl
or
cmp
gs
idivl
push
fnstenv
leave
dec
push
dec
push
shrl
int
adc
in
xchg
out
ret
jge
mov
in
mov
cmp
jne
out
or
mov
add
or
stos
test
jmp
outsl
xor
cmpsb
pop
mov
stc
jbe
fdivs
ja
mov
movsw
pop
xchg
xlat
hlt
xlat
gs
jg
or
sbb
mov
push
out
stos
jo
inc
mov
and
call
adc
xor
xchg
xor
movsl
int
ds
in
fmuls
jnp
repz
insl
insb
xchg
dec
and
mov
sbb
dec
inc
fs
lcall
fdiv
call
fmull
mov
inc
pop
xor
adcl
sti
cmc
mov
push
push
incl
bound
sti
mov
enter
jl
data16
xchg
mov
fdivs
addr16
xchg
repnz
mov
push
mov
movsl
sarl
icebp
ss
jae
sbb
loopne
jae
lcall
cmpsl
mov
and
mov
mov
out
js
xchg
sbb
ds
sbb
aad
int
pushf
int
cmpsb
mov
xchg
cmp
pop
dec
add
roll
mov
int3
es
push
jno
jno
addr16
xchg
out
sar
inc
cmpsb
add
pop
cmp
mov
xor
sbb
nop
cld
jnp
and
mov
jnp
pushf
adc
mov
mov
sahf
sub
lret
add
scas
iret
cld
fs
shl
cmpsb
push
test
aas
add
mov
jg
sbbb
dec
sub
cmp
sub
std
mov
add
or
adc
xor
fildll
sahf
inc
or
lock
and
pop
out
enter
and
dec
insb
fs
daa
stos
adc
out
out
mov
cmp
out
movsl
test
dec
fisubl
aam
mov
add
inc
ss
lods
mov
sahf
stos
addl
mov
or
int
cltd
outsb
std
jns
ljmpw
stos
jle
mov
test
sub
xor
out
aad
fcmovb
and
rolb
add
std
stos
sbb
push
or
mov
stc
fcmovb
call
aad
fimull
test
cwtl
jp
cmp
call
xor
call
jns
or
aam
aas
jbe
cmpsl
inc
adc
xor
xchg
sbb
cs
cltd
lods
xchg
xlat
cmpsb
orl
pop
jnp
pusha
add
xchg
mov
push
adc
dec
je
sbb
mov
fimull
xchg
das
ds
mov
sti
and
test
gs
imul
cmp
pushf
test
fwait
ljmp
pop
and
pop
mov
loope
out
xor
xlat
daa
sbbl
xchg
cmp
dec
test
scas
xchg
jmp
xchg
push
jp
test
movsb
mov
sbb
cmp
hlt
mov
push
cmp
arpl
sbb
push
lods
out
lahf
dec
inc
dec
xor
sahf
inc
leave
lea
in
sahf
aaa
mov
cs
enter
test
jp
fdivrl
jle
xor
movsl
fidivs
std
push
iret
xor
popf
and
sub
cltd
aaa
movsb
inc
cmp
mov
xchg
jae
cmp
pushf
mov
ljmp
mov
fsubrs
xchg
das
mulb
and
repz
dec
adcl
push
fbld
add
xor
dec
ljmp
ret
sub
into
negl
mov
mov
xchg
cmc
xor
iret
dec
lock
in
stos
in
jbe
sub
les
test
add
jno
mov
nop
loop
xchg
mov
std
icebp
mov
cwtl
lret
loope
or
ljmp
outsb
cld
cmp
jo
ret
cs
in
add
ja
mov
rcrb
jnp
aad
push
pop
inc
xor
cs
ret
or
or
adc
test
and
push
popf
repnz
add
mov
rorb
mov
int
mov
cli
jnp
imul
sbb
cld
fwait
mov
dec
in
fcmove
mov
loope
dec
popf
in
int3
mov
mov
mov
in
mov
push
into
or
push
xchg
outsl
mov
xchg
cmp
hlt
lds
nop
cmp
fucomi
movl
sub
stc
cmp
and
cmpsl
mov
repnz
and
imul
scas
and
mov
fcomip
pop
adc
mov
cmc
divb
xchg
aas
jmp
dec
inc
cmp
adc
mov
pop
enter
or
cli
mov
xchg
sbb
xchg
pop
pop
and
repz
in
xchg
jnp
add
sarl
adc
pop
add
inc
mov
test
inc
out
dec
imul
adc
jae
fnstsw
imul
pop
filds
mov
push
data16
mulb
mov
mov
iret
push
sbb
rorl
push
insl
pop
pusha
push
push
loope
sub
dec
clc
ja
mov
push
adc
jmp
pop
add
sub
cwtl
jl
dec
dec
dec
mov
or
movsl
cltd
sub
lret
shlb
fcmovbe
mov
jo
lahf
or
push
push
test
mov
int3
outsl
in
adc
ret
pop
fidivs
dec
stos
fsts
jmp
mov
xor
fsubl
sar
pop
add
adc
iret
xor
add
mov
loop
jbe
mov
pop
jmp
push
jmp
inc
push
xor
mov
jns
xchg
jp
fdivl
imul
dec
dec
movsl
pop
lcall
inc
mov
push
fst
sub
clc
xlat
aam
mov
add
into
repnz
xchg
fdivl
jae
mov
lods
and
das
cmp
pop
test
jo
addr16
incb
or
aad
and
stos
fwait
mov
cmp
push
jne
and
clc
lock
mov
jg
mov
mov
mov
sarb
test
inc
push
add
sbb
add
mov
enter
rorl
imul
stos
and
push
sbb
out
test
mov
aad
fists
cmp
lea
push
enter
bound
push
test
test
fidivs
xchg
std
mov
xchg
js
mov
mov
sub
rcll
scas
aaa
jb
imul
fisubrl
stos
loopne
scas
je
lods
aaa
test
fs
orl
xchg
daa
fdivrs
imul
xchg
or
bound
xor
dec
sub
mov
rclb
ret
dec
ror
addr16
lock
sbb
je
mov
mov
int3
cmp
rcrb
in
shrl
dec
xor
xchg
daa
jbe
mov
scas
sahf
mov
data16
ss
lods
or
arpl
cld
repz
sub
lret
mov
dec
mov
adc
fiadds
lahf
xor
fildl
inc
add
xor
mov
fimuls
int
jle
ja
jmp
dec
fwait
pop
fstpt
xchg
aam
jnp
shlb
mov
cmp
mov
daa
adc
dec
jo
push
push
add
aam
js
sbb
insl
inc
pop
aaa
les
xlat
icebp
mov
test
shll
mov
cmp
cmpsb
add
and
lods
stos
dec
lds
shlb
mov
dec
imul
in
adc
jmp
mov
loope
fsubrl
or
jg
dec
jnp
mov
sbb
in
aaa
xor
mov
add
jecxz
lcall
jne
ljmp
popa
fisubs
stos
jnp
add
sbb
add
dec
pop
xchg
and
mov
js
fdiv
mov
loope
testb
ds
xchg
pop
xchg
dec
mov
xor
incl
movsb
imul
dec
cld
mov
xor
mov
cmp
sbb
orb
lahf
stos
popa
mov
popf
jae
sub
xchg
sbb
sbb
push
sub
in
and
adc
xor
rclb
jbe
mov
bound
or
and
out
cmp
xor
sahf
pushf
dec
xor
adc
sbb
loope
in
rorl
add
cwtl
rcll
aam
cmp
mov
jle
xchg
jo
sahf
rorb
jge
mov
iret
je
sub
aam
push
scas
in
in
cmp
cli
out
inc
cltd
xchg
dec
shrl
sbb
dec
mov
sub
and
ficomps
lcall
cmp
hlt
pop
insl
push
pop
addl
sub
sub
orb
repnz
lahf
and
mov
cwtl
inc
pushw
cmc
lcall
sub
fldl
push
mov
xor
and
adc
or
mov
das
cld
out
int
cli
out
mov
mov
ret
add
push
push
cli
fildl
jg
test
adc
mov
jne
cwtl
sbb
stc
xchg
xchg
in
incb
pop
daa
xchg
xchg
scas
and
scas
movsb
daa
repnz
aad
addb
dec
lock
push
fnsave
pop
fucomp
adc
sbb
mov
ss
fcmovnu
pop
jp
xchg
test
mov
je
mov
cmp
imul
push
cmpsb
pop
adc
sti
ret
push
scas
jo
adc
dec
xchg
movsl
mov
add
or
mov
add
add
xchg
pop
stos
pop
or
mov
inc
fwait
lock
xchg
call
subl
adcb
sub
fmul
sbb
fbstp
sub
popf
sbb
std
mov
dec
mov
xchg
decb
inc
js
sub
push
pop
andb
inc
popf
sahf
sbb
sbb
pusha
sub
leave
or
jne
and
mov
lret
jmp
mov
lods
cmpl
movsl
enter
outsb
cmc
je
add
out
ds
sbb
sub
mov
idivb
shlb
fmull
shrb
cltd
movsl
je
xchg
das
dec
pop
mov
popf
cmp
add
clc
sbb
addb
int3
or
push
or
sub
rol
in
jne
aad
addr16
iret
sarl
jle
hlt
ds
fcmove
cmpsl
mov
fldl
pop
int
sub
push
sbb
or
fnstcw
mov
and
xchg
mul
sbb
imul
in
sub
test
fisttpll
mov
pop
mov
inc
lret
dec
sbb
xor
xchg
push
add
or
cmpsl
mov
inc
xor
push
out
jb
inc
enter
mov
mov
or
mov
inc
sbb
xchg
dec
call
fwait
push
insl
inc
icebp
inc
sti
les
and
push
mov
sbb
insb
sbb
jno
enter
stos
pop
test
shll
fdivr
stos
jae
adc
adc
testl
outsb
push
ljmp
and
sbb
xor
cmp
mulb
mov
adc
arpl
cmpsb
movhps
mov
inc
movsl
in
push
mov
ret
es
pop
adc
cltd
dec
mov
inc
enter
cld
loop
mov
fwait
adc
int
insb
imul
in
test
fisubl
in
hlt
nop
cmp
dec
sub
aaa
jp
aas
insl
aaa
inc
popa
add
or
mov
push
mov
repnz
lret
aas
mov
mov
cmpsb
pushf
dec
push
mov
sub
aaa
pop
outsl
mov
xchg
sahf
lcall
and
mov
sbb
push
into
inc
mov
inc
jmp
mov
scas
dec
jl
repz
and
clc
fwait
cmp
inc
mov
loope
imul
bound
mov
add
mov
outsl
mov
sarl
mov
imul
int
push
add
mov
lock
inc
mov
mov
ret
nop
jbe
sub
subb
outsl
adc
dec
stos
mov
mov
das
lea
and
rcll
or
mov
into
cmp
test
in
outsb
xchg
dec
mov
call
int3
mov
sahf
mov
sbb
jo
add
fisttps
loope
int
loope
jmp
call
adc
add
xchg
and
or
stos
sbb
jecxz
inc
pop
lret
jmp
adc
push
mov
push
inc
push
inc
mov
add
xchg
dec
adc
or
lea
movl
dec
loop
sub
clc
iret
mov
xchg
mov
mov
inc
outsl
popf
icebp
lods
xchg
and
loop
pop
inc
inc
movnti
lods
stos
dec
lret
clc
aaa
insb
stos
jecxz
leave
flds
movsl
in
push
leave
mov
sub
in
mov
fcomps
lods
in
aam
int3
push
inc
sub
insl
mov
fwait
add
or
pop
sti
lods
xorl
scas
push
jne
enter
sbb
loop
inc
push
into
xor
ss
mov
aaa
and
adc
aas
xchg
jo
test
and
mov
stos
loope
add
arpl
push
inc
or
testl
pushf
fcmove
stos
ret
out
jp
lods
push
ret
nop
pop
xor
outsl
cwtl
push
imul
xor
addr16
repnz
sub
cmc
daa
add
inc
js
mov
fldt
xor
cmp
out
add
icebp
lock
jmp
or
pop
out
inc
bound
scas
arpl
movb
xchg
inc
or
into
add
push
dec
or
or
and
insb
push
hlt
fiadds
repz
sbb
shll
xor
xchg
mov
push
xor
xor
pop
sbb
popf
into
push
and
es
fnsave
lea
xchg
mov
mov
fstps
stos
xchg
push
xor
jb
mov
enter
sarb
pop
adc
std
inc
daa
scas
or
and
mov
test
pop
iret
imul
lcall
cs
dec
pop
mov
out
in
pop
mov
and
mov
mov
rol
mov
fiadds
int3
xchg
xor
adc
dec
mov
les
data16
xlat
mov
xchg
mov
mov
inc
xchg
sti
xor
xchg
mov
xchg
add
xchg
repz
in
mov
stos
adc
or
jnp
or
pushf
call
xchg
xchg
cmp
push
mov
pop
sahf
jns
xchg
cltd
push
push
jb
mov
scas
jl,pt
insl
mov
mov
in
inc
movsl
pop
test
push
std
adc
xor
jno
fldl
lock
rcr
mov
loop
scas
test
daa
hlt
xor
cmpsb
and
out
mov
cmpsb
int
add
fistl
or
jmp
jno
pop
jno
movsb
push
dec
xor
push
aad
push
adc
adc
xchg
jle
inc
sub
add
pop
aad
in
pop
insb
mov
movl
shl
enter
negb
add
f2xm1
into
xchg
and
mov
loopne
repnz
sub
jno
sbb
adc
xor
insl
fldenv
ljmp
mov
mov
xchg
outsl
stos
ret
cmp
inc
movsb
shl
push
and
jo
pop
jb
pop
fwait
lds
leave
xor
sbb
popf
cmp
push
xchg
xor
sahf
movsl
std
popa
mov
les
inc
pushl
push
in
jl
mov
mov
cmp
iret
pushf
movsb
mov
ljmp
imul
gs
pop
outsl
mov
jb
repnz
dec
ss
jns
js
sbb
rclb
push
roll
clc
sbb
pop
mov
pop
mov
add
jecxz
loope
push
movsl
gs
dec
pop
ja
fcompl
mov
jle
mov
mov
mov
out
je
sbb
adc
jle
inc
mov
ret
mull
and
mov
ret
stos
cmovl
adc
cmp
fidivrs
dec
and
add
lods
sbb
nopl
pop
stos
js
ljmp
mov
inc
cmpb
mov
and
push
mov
cmp
push
addr16
clc
cs
fcoms
add
mov
mov
out
sarb
call
pop
push
and
jne
loop
je
jb
or
and
xor
pusha
xchg
inc
cmpl
push
sub
or
sbb
push
push
into
jno
daa
adc
hlt
das
movsl
imul
and
push
or
pop
fcomps
ds
adc
pop
cld
lcall
mov
icebp
push
imul
lret
xor
sub
stc
jno
lock
add
imul
fadds
mov
xchg
inc
sub
sub
rorl
jns
mov
cmp
jnp
pushf
and
ret
dec
movsl
es
cli
jae
jmp
mov
fs
jno
in
out
call
mov
clc
cmp
cmp
cmp
icebp
sbb
sahf
or
iret
sbb
jl
xchg
push
xorl
mov
push
lock
cld
scas
inc
test
mov
xchg
movsl
stos
inc
sbb
or
mov
push
iret
sahf
hlt
mov
jl
fldt
lods
dec
cmp
mov
adc
imul
int
xor
adc
jl
mov
imul
std
cld
mov
pusha
jno
pusha
outsl
adc
mov
inc
jo
test
add
dec
pop
jo
mov
test
mov
mov
pop
pop
xor
sbb
adc
mov
loope
push
xchg
loopne
jmp
lret
sub
jmp
int3
xor
xchg
adc
cwtl
aam
add
sub
std
scas
and
inc
sub
cmp
sti
leave
aaa
mov
lock
js
sub
pop
iret
xchg
push
fidivrs
xor
jbe
ss
xchg
pop
push
pusha
adcb
push
lods
scas
loop
lahf
sbb
inc
cli
jns
jmp
arpl
and
jge
outsl
cmp
pavgw
sub
cmp
cmp
mov
sub
inc
or
pushf
or
mov
add
or
add
cwtl
cmp
push
add
jecxz
daa
jg
xchg
sar
xchg
jbe
add
mov
repz
or
fisubrs
lret
ret
repz
inc
repnz
jecxz
ljmp
jmp
push
cmp
je
pop
cmp
xor
or
and
jp
fmul
inc
fsubrs
shlb
out
sbb
adc
inc
jge
clc
add
mov
add
enter
outsl
lahf
and
mov
dec
lcall
enter
xchg
out
imul
ljmp
xlat
movsl
inc
das
aad
mov
mov
repz
dec
xchg
mov
dec
pusha
loope
sub
cmpl
jge
ret
scas
loop
lock
popa
call
mov
jecxz
mov
mov
push
fwait
das
bound
or
pop
push
test
adc
fisubs
enter
xchg
mov
xchg
jb
pop
lcall
aam
add
adc
jbe
sub
and
lret
jg
push
push
call
vhaddpd
mov
fs
cmp
cmpb
fwait
sub
decl
sbb
xor
out
cwtl
leave
icebp
call
in
fwait
movsb
xor
shlb
clc
jl
push
stc
cld
xor
mov
sub
dec
cs
xchg
sub
jno
cwtl
xchg
sbb
inc
push
ss
dec
mov
lods
jmp
test
xchg
je
mov
push
mov
xor
icebp
test
fdiv
add
adc
aam
cmp
ljmp
lea
jmp
jge
mov
icebp
cld
lods
mov
aaa
rcr
cli
dec
jge
inc
or
mov
mov
sbb
adc
add
popa
rclb
add
ficomps
fstpt
in
loope
mov
jo
fmull
jmp
aaa
loopne
fwait
mov
jge
inc
fcom
fidivl
sbb
aam
shrl
imul
es
mov
into
fdivrl
cwtl
popa
cwtl
outsl
push
repnz
popf
push
inc
test
stos
shr
shrl
dec
jp
jl
push
test
leave
jle
jo
lea
out
in
push
cmp
stos
loope
xchg
incb
out
cmpsb
mov
bound
xchg
jmp
call
mov
cmp
in
mov
mov
arpl
scas
fdivs
int3
dec
push
and
cmp
dec
xchg
inc
adc
adc
cltd
rorb
insb
adc
adc
adc
data16
jnp
mov
and
mov
jne
insb
push
inc
jbe
pop
in
stos
test
xchg
ret
loop
pop
sbb
dec
and
in
je
and
lods
ficoml
mov
jp
sub
sub
or
inc
dec
hlt
loopne
mov
push
push
xor
aam
shlb
sub
cmc
movsl
je
lock
mov
sbb
bound
arpl
cltd
ret
or
je
cmp
ficompl
jmp
xchg
pop
add
and
out
sub
mov
sbb
rclb
dec
cltd
jo
mov
push
xchg
sub
pop
push
jge
xchg
dec
mov
dec
sub
enter
cs
push
es
pushf
mov
xchg
ds
mov
pop
xor
mov
adc
add
sub
add
fwait
xchg
hlt
xor
int3
or
ja,pt
or
enter
adcb
jg
inc
nop
pop
std
cmp
sub
into
add
adc
sbb
or
or
cwtl
fcoml
xor
adc
ss
xor
dec
add
cmp
sbb
cs
rcrb
in
jbe
push
out
and
pushf
xor
jae
popf
jmp
fs
shll
mov
push
mov
sbb
insb
push
fwait
adc
cmp
mov
cltd
out
clc
jg
mov
jne
sub
divl
mov
xchg
pop
cli
orl
scas
aaa
cmp
push
repnz
int3
push
cmp
xchg
outsl
xor
ja
les
cmp
fwait
xor
push
dec
sub
xchg
shrb
jns
in
arpl
sbb
push
cmpsl
dec
repz
xchg
js
js
ljmp
and
sbb
popf
sahf
pushf
jle
push
cmp
dec
clc
iret
sbb
pop
enter
cwtl
sub
fcomp
or
repnz
mov
or
sub
orl
stos
and
icebp
mov
addb
and
hlt
lds
inc
cwtl
aas
aas
dec
pop
jns
jb
nop
mov
or
xchg
jge
test
int
push
movsb
inc
jg
push
int3
ja
mov
adc
hlt
add
mov
fsincos
test
xor
imul
arpl
gs
popf
or
cli
cmp
add
scas
push
inc
dec
mov
pop
jecxz
push
mov
testb
fadd
fwait
push
loop
mov
das
jmp
fidivs
rcr
dec
and
leave
cmpl
in
push
mov
xor
jns
int3
mov
ss
iret
push
mov
sub
cs
jg
or
test
daa
xchg
inc
movsl
cmp
inc
insb
push
movsb
pop
xorl
lret
fldl
adc
push
mov
xlat
push
push
and
and
or
dec
xchg
movq
xor
cli
push
push
sbb
jo
mov
aaa
xchg
ss
mov
outsb
orl
or
dec
mulb
filds
mov
dec
inc
mov
mov
jae
cmpl
mov
xchg
fisubs
mov
loopne
mov
clc
popa
jns
loope
or
inc
repz
adc
adcb
xchg
fsubs
cmc
movsl
shll
orl
push
adc
inc
pop
or
sarl
lret
je
add
dec
cmp
mov
add
or
push
ljmp
in
orb
sub
inc
lcall
jnp
js
inc
jmp
lds
mov
iret
orl
ret
fisttpl
cmp
test
and
mulb
addl
les
ljmp
or
scas
sbb
cmp
scas
mov
mov
andb
adc
jp
fidivrl
and
aas
leave
pusha
jg
leave
fs
insl
rclb
cmp
dec
sbb
sub
dec
push
imul
xchg
insb
mov
jg
pop
test
ja
lret
std
repnz
adc
dec
sbb
rclb
jnp
insb
test
dec
out
filds
add
cmp
or
lahf
jge
xchg
push
cmp
fcmovnbe
and
cs
xor
ljmp
xchg
adc
push
negb
aaa
or
dec
leave
int
stc
stos
insb
xchg
xchg
pop
jno
cmp
popf
data16
mov
dec
scas
dec
cmp
adc
inc
fisubs
push
outsl
test
xor
aas
jo
movsb
repz
enter
push
out
xor
dec
fldenv
and
dec
in
loop
into
push
in
sub
arpl
inc
push
imul
lahf
sub
sub
ret
out
adc
mov
inc
stos
jmp
popf
mov
inc
inc
add
dec
popf
rcr
testl
and
inc
mov
or
dec
addr16
subb
cwtl
add
mov
or
mov
sub
pushf
mov
mov
hlt
and
ret
push
pop
jg
mov
int3
rol
adc
imul
adc
cmp
xchg
cltd
push
aam
mov
xchg
adc
es
clc
jnp
je
scas
adc
adc
pmaddwd
nop
jl
pop
sbb
add
dec
sub
shlb
pop
jl
jmp
frstor
lods
sahf
mov
inc
mov
cli
xor
cmp
xchg
mov
sub
sub
push
xchg
sarb
inc
mov
jbe
mov
lds
ja
adc
neg
insl
aaa
stos
out
mov
dec
or
fdiv
imul
and
fwait
stos
add
inc
call
mov
loope
dec
shl
js
mov
mov
outsl
cltd
xor
xor
pop
jle
fdivp
push
jbe
pop
test
aas
je
push
jmp
lret
jp
xor
inc
jns
push
ficomps
cmc
cmp
mov
xchg
repnz
jecxz
jmp
cmpsb
inc
call
out
fldenv
sbb
andl
jg
jo
scas
jns
icebp
hlt
ja
imul
xor
out
test
or
test
je
or
xchg
mov
inc
sub
push
cmc
push
cmp
fnsave
clc
push
fcoml
dec
fidivl
js
in
sub
rolb
jo
xchg
mov
xor
aad
dec
xchg
xchg
loope
or
rclb
jle
inc
loopne
insb
add
fcomp
cmc
sarl
sub
inc
and
les
push
push
negl
mov
mov
aad
aaa
rol
push
dec
mov
iret
decl
inc
add
lock
shl
xchg
sbb
in
sarb
clc
adc
adc
mov
in
and
lods
aaa
dec
push
repnz
pushf
leave
pop
cmc
iret
imul
fnstsw
mov
stos
stos
xchg
adc
stos
pop
imul
nop
xor
jp
inc
inc
sbb
jge
pop
jg
mov
xor
dec
jno
fcomp
fdivs
xchg
fistps
aad
inc
lret
xlat
rcrb
sahf
and
test
xor
add
add
fs
pop
inc
lcall
jg
dec
test
in
cmp
pop
inc
mov
adc
pop
shlb
add
push
push
std
jp
in
ja
lods
ficoml
lods
addr16
and
inc
das
push
test
xlat
popf
bnd
adc
xor
scas
jp
test
cmpsl
mov
sbb
mov
clc
add
push
sub
lea
mov
mov
fldt
push
sti
mov
aas
repnz
inc
sbb
pop
push
ja
repz
frstor
bound
and
sbb
push
jo
addr16
push
inc
push
test
adc
inc
mov
push
lahf
cmp
test
xchg
sbbb
cltd
mov
push
lcall
insb
or
xlat
cmc
test
xlat
iret
push
cltd
push
je
fsubrl
out
xchg
ljmp
jbe
stos
cwtl
lahf
out
ljmp
xchg
jno
sub
xor
shll
test
mov
rorl
or
into
gs
int
xlat
in
pop
stos
sub
cld
imul
fwait
dec
pop
mov
cltd
mov
enter
xorb
rcll
fstps
mov
push
jge
xchg
cmpsb
xchg
xor
mov
sub
je
sti
dec
adc
pop
mov
cwtl
xor
mov
dec
ficoms
imul
inc
xchg
jno
arpl
into
stos
popf
outsl
sarb
mov
sub
push
iret
mov
xchg
and
sub
mov
mov
adc
sbb
lahf
out
pop
mov
jbe
jne
test
push
mov
jnp
xor
fsubrl
in
incl
push
faddp
out
jl
sub
pop
mov
pop
jns
add
xor
shrl
sbb
ret
cs
push
rolb
xchg
das
cmc
xchg
mov
andl
or
add
js
push
pushf
insb
ret
jmp
mov
sti
cmp
lcall
std
mov
or
sbb
xchg
adc
and
rol
jge
loopne
or
adc
xchg
inc
or
arpl
das
or
sbb
aam
dec
mov
xchg
cld
hlt
imul
sub
inc
arpl
popa
mov
movsl
push
outsb
push
hlt
repz
cmp
loopne
nop
insl
or
popa
mov
fidivrs
ret
jge
dec
push
jp
adc
ja
js
dec
inc
pop
pop
mov
ja
js
pop
add
mov
mov
push
ja
pop
add
mov
jo
imul
cmp
mov
rcrb
cmovle
vpsubd
fstl
lock
mov
mov
cli
xor
cmpsb
or
xchg
loop
mov
out
test
xor
rclb
xchg
sub
push
cltd
jnp
leave
pop
in
mov
cli
mov
and
insb
cltd
xlat
sub
addl
loope
mov
insb
xchg
std
mov
imul
sbb
mov
cli
je
aad
icebp
dec
nop
add
lcall
push
dec
mov
xchg
mov
ja
mov
dec
mov
lcall
movsb
or
frstor
sub
loopne
daa
ret
mov
fsts
jle
xor
subl
jg
aam
adc
dec
xor
pushf
scas
stos
aas
movsl
inc
add
cmp
sahf
stc
xchg
push
sub
fldt
imul
lret
outsl
fsubrs
and
mov
adc
cmp
cmp
lret
movsb
loopne
or
xor
xlat
call
fwait
mov
jmp
lret
lea
push
xor
xchg
jle
add
or
lods
loopne
jne
and
jl
cmp
mov
lcall
lds
and
mov
cmp
inc
jle
gs
outsb
xchg
popa
lcall
hlt
push
adc
xchg
push
mov
sub
mov
rolb
pop
push
mov
dec
lods
dec
mov
mov
data16
das
ss
aam
pop
add
push
not
mov
adc
in
sbb
loopne
dec
je
ljmp
dec
cmp
cli
or
insb
clc
push
mov
and
adc
test
mov
push
mov
lods
sub
aam
push
lcall
add
pop
mov
add
popf
xchg
xor
gs
test
xlat
or
stc
jae
xchg
repz
xchg
sarb
rorl
cs
sarb
scas
iret
idiv
mov
mov
out
gs
lds
popf
fiaddl
gs
repz
adc
test
push
xchg
jnp
insl
adc
push
push
inc
int3
repz
in
push
es
bound
xor
jae
sub
loop
dec
ja
stos
ds
into
dec
inc
xor
pop
pop
shl
cmpsl
aam
gs
or
jb
jg
xor
stos
jge
mov
ss
and
push
mov
pop
loopne
xchg
hlt
mov
xor
xor
fwait
roll
mov
sbb
mov
dec
icebp
push
and
adc
mov
add
fs
sbb
addr16
lds
clc
cmpsb
js
cmpsl
inc
inc
and
jo
jecxz
jl
test
stos
mov
xchg
inc
jnp
lret
lret
inc
or
mov
les
clc
inc
test
pop
sbb
and
sahf
or
outsb
jl
lahf
sbb
shr
js
and
xor
sbb
and
sub
fistl
cmp
pop
dec
add
jp
or
xor
push
test
test
out
xlat
mov
xchg
int3
cmp
sub
push
jb
xor
cli
mov
mov
sbb
pushw
lret
mov
add
cwtl
jmp
jl
inc
sahf
xchg
hlt
aad
xor
pop
aas
inc
dec
rorb
push
pushf
mov
lds
xor
cmp
out
into
mov
roll
sub
xchg
sarl
jb
sahf
movsb
xlat
test
inc
stos
mov
ret
jmp
shrl
popf
jg
xor
data16
sbb
adc
jg
subb
push
imul
test
jo
in
and
dec
mov
push
push
push
lods
xor
rol
fcmovu
decl
push
mov
fdivrp
lock
mov
jmp
xchg
sbb
sbb
je
dec
or
lds
mov
cmpsb
scas
jge
movsb
rolb
sub
test
inc
inc
mov
sub
dec
loope
xor
sub
add
rolb
inc
stc
cltd
mov
notb
sub
pop
pop
mov
xchg
ret
arpl
daa
ss
pop
js
mov
dec
mov
jge
push
imul
push
ljmp
movsl
add
in
cmp
es
ljmp
pop
add
or
and
pop
lahf
and
push
into
pop
xlat
cmp
and
xchg
ja
xor
and
stc
xor
aas
andl
sub
jecxz
jmp
adc
mov
repz
add
adc
sbb
inc
shl
pop
dec
je
cli
push
stc
cmp
pusha
daa
lds
inc
adc
fldt
xor
push
mov
mov
scas
rcr
std
aas
adc
iret
add
lcall
enter
dec
es
cmpl
add
fs
dec
xor
je
inc
xor
int3
push
imull
mov
xchg
pop
mov
sar
iret
les
jmp
xlat
out
pop
mov
movb
jnp
clc
and
and
pop
pop
sbb
in
fstl
lds
add
pusha
ret
pop
jg
push
mov
cmp
subl
fs
insl
imul
and
xchg
add
cwtl
lahf
movsb
jne
adc
dec
jnp
push
in
pop
loopne
mov
adcl
push
jge
xor
mov
cmova
popa
fbstp
mov
and
movsb
inc
shlb
dec
dec
cmpsl
js
xlat
push
push
lds
inc
pushl
dec
fs
fs
pop
dec
lahf
enter
je
xor
pusha
sahf
mov
jg
stos
mov
out
adc
stos
arpl
lods
arpl
pop
pop
xchg
mov
push
jne
subb
mov
sarb
push
cld
ficomps
add
lcall
iret
scas
mov
loope
push
clc
fs
add
push
mov
add
lods
imul
mov
aam
inc
adc
xor
pop
rorb
test
vucomisd
movsl
jge
pop
xor
aaa
mov
sbb
dec
pop
push
iret
cli
mov
call
fbld
addr16
mov
lds
xorb
stc
and
imul
rorl
cld
xor
movsl
dec
stc
cmp
call
aad
fstps
fdecstp
test
mov
popa
mov
out
mov
movsb
or
sbb
and
fisubrl
mov
insb
and
xlat
cmp
xchg
and
rcll
and
cld
adc
or
cli
or
cmpsl
ret
and
nop
or
push
popf
movb
mov
lcall
or
xchg
jns
or
pop
into
mov
mov
lcall
push
push
xor
xchg
sbb
xchg
test
adc
xchg
lock
sbb
cmc
cld
rcrl
pop
mov
incl
aaa
dec
mov
jge
xlat
or
mov
js
push
or
mov
mov
test
push
mov
inc
xlat
es
cmpsl
dec
das
int
sbb
mov
add
inc
inc
popf
and
push
xor
imul
xor
pop
cmpsb
scas
inc
or
pop
out
subl
push
int
insb
test
add
lods
aaa
cmpsl
xor
loopne
inc
repz
adc
sbb
clc
sti
test
pop
imul
push
arpl
sbb
jbe
test
imul
cmp
pop
test
ljmp
and
stos
ss
and
shll
dec
hlt
xor
or
mov
insb
imul
cmp
popf
loopne
push
ljmp
flds
mov
icebp
imul
int
stc
or
dec
testb
push
stos
in
xor
mov
fadd
cwtl
pop
jns
xchg
in
push
pop
fnstenv
xchg
sub
or
aam
fiadds
xor
jb
add
pop
adc
sub
mulb
movsl
inc
sub
aad
push
jg
inc
les
xchg
jbe
outsb
pushl
out
sub
xor
push
add
das
mov
les
and
pushf
in
ds
inc
xchg
repz
or
stos
push
inc
mov
mov
mov
lea
push
mov
pop
push
insl
test
fmulp
mov
imulb
lods
jl
dec
push
push
lds
rorl
mov
sbb
test
repnz
loope
pusha
scas
popf
cwtl
orl
adc
mov
xor
dec
lahf
in
ficoms
pop
ja
std
mov
dec
ret
fiaddl
inc
jp
sub
mov
sbb
fcmovu
dec
addr16
iret
sub
xchg
xchg
call
daa
jne
mov
es
ljmp
sub
jb
pop
mov
divb
adc
adc
adc
mov
push
js
sub
lahf
roll
sbb
mov
sti
shrb
loop
inc
stc
in
dec
xor
mov
lods
out
sarb
pushf
cltd
adc
mov
dec
and
cmp
scas
outsb
std
loopne
mov
rcr
jge
std
aaa
into
and
int
jno
cmpsb
sbbl
je
test
mov
adc
out
xchg
xchg
aas
cmpsl
pop
pop
enter
xchg
push
or
aam
or
leave
cwtl
or
negb
ljmp
pop
mov
add
jmp
adc
push
inc
sub
cmpsb
je
adc
sub
push
shll
std
les
xlat
jle
adc
push
rol
hlt
mov
pop
dec
pop
ja
stc
mov
and
aad
xchg
cmc
fcompl
sbb
and
insb
xchg
add
and
jns
mov
das
jge
adc
pop
mov
push
xor
sbb
mov
shrl
add
mov
call
rcll
cli
sub
xor
test
sbb
pop
sar
dec
mov
outsb
pop
repz
xor
sub
mov
fldenv
outsl
or
lcall
adc
repnz
int3
mov
scas
ljmp
jecxz
ljmp
in
xchg
dec
test
rolb
sub
or
int3
pop
lock
addr16
and
xchg
hlt
mov
je
in
pushf
mov
int
push
dec
or
jmp
in
mov
push
mov
incb
pusha
int
notb
jno
lock
mov
lahf
sbb
andl
sbb
es
iret
add
jo
hlt
sbb
mulb
adc
imulb
adc
lcall
cmp
sbb
inc
lret
mov
mov
push
out
out
hlt
xor
pop
dec
cmpsb
dec
out
subb
dec
into
or
push
shr
ljmp
and
sub
daa
movsb
and
dec
ja
dec
sub
lods
push
xchg
and
call
cmp
and
stos
movsl
inc
or
ljmp
ret
jbe
lods
lret
or
xor
das
add
xlat
mov
addl
add
push
repnz
jp
jns
mov
lods
jne
pop
insl
test
or
dec
cmp
in
repz
push
push
les
mov
push
mov
mov
repz
cmp
mov
cmp
jno
int3
dec
dec
cmp
cwtl
adc
xor
and
rcll
mov
js
fidivrl
xchg
andl
repz
inc
mov
stc
ret
scas
xor
mov
outsl
mov
xor
cmp
insb
imul
cltd
mov
int3
mov
dec
mov
push
leave
push
movsb
ret
xor
out
sbb
insl
rcl
adc
and
ja
push
push
xchg
mov
jl
sarb
sbb
jns
movsb
xchg
cmp
xor
cmp
enter
and
and
push
in
mov
sub
jae
sub
stos
xchg
jns
xchg
data16
fisttpl
ret
les
rcrl
enter
cmpsb
mov
out
mov
icebp
aam
push
ljmp
and
dec
pop
stos
cmp
and
add
ret
ss
jbe
imul
pop
test
jg
jae
xor
cmp
mov
mov
pop
jge
lea
jno
das
gs
jo
sbb
testl
gs
mov
and
xor
xor
mov
lds
popa
push
imul
test
adcb
mov
imull
aam
cmpsl
nop
mov
add
stc
and
cmpsl
jae
lahf
dec
adc
or
mov
cmpsb
push
ret
xchg
sbb
shll
pop
dec
lret
in
mov
ja
cmp
mov
repz
push
inc
or
and
mov
out
adc
sub
iret
div
push
mov
mov
adc
fwait
imul
rorl
aad
pop
inc
pusha
pop
ss
shl
lea
jns
xor
addr16
add
sbb
int
dec
xchg
aad
inc
lret
les
lods
pop
inc
fadds
jl
das
ss
pushf
add
ljmp
out
fwait
mov
sub
rcrb
ds
or
das
lock
cwtl
jno
push
ljmp
dec
in
push
imul
pusha
stc
xor
fcmovu
add
icebp
inc
ret
aas
cli
mov
sbb
inc
sbb
fwait
add
ljmp
mov
in
push
aas
je
mov
sti
fisubl
dec
test
xchg
les
cmp
shl
cmpsl
enter
jbe,pn
mov
enter
push
sub
insl
loopne
aas
dec
cmp
push
inc
jnp
pop
outsl
jo
lods
jmp
sbb
movsb
repz
pushf
adc
shlb
test
loope
nop
dec
pop
mov
clc
sbb
and
sub
xchg
in
mov
in
sti
pop
cmp
cmc
fldt
mov
mov
inc
std
sbb
iret
xor
mov
outsb
and
add
mov
movsb
add
push
push
in
sahf
cltd
sbb
dec
sub
test
dec
mov
scas
and
int3
and
jle
stos
cwtl
stc
jge
push
iret
jnp
pop
xchg
in
mov
leave
or
and
fnsave
in
sbb
push
jge
icebp
xchg
nop
out
out
inc
cltd
mov
adc
push
adc
sbb
stc
dec
and
stos
pushf
or
fs
jne
rol
sbb
ror
outsb
cmp
mov
fdivrp
or
add
add
push
or
and
push
dec
cmp
insb
or
xchg
inc
add
fs
les
stc
lret
icebp
jbe
insl
scas
bound
push
xchg
stc
or
pop
mov
in
dec
push
orb
push
inc
sti
adc
out
mov
sub
popf
cmpb
les
cmpsl
xchg
arpl
mov
out
push
int3
and
pop
imul
fwait
data16
arpl
fisttps
clc
adc
xorb
inc
cmp
and
pop
dec
ljmp
add
cmp
cmc
jge
xor
rcrl
and
push
out
sbb
in
daa
sub
mov
push
or
insb
sbb
sub
movsb
cmpsl
inc
push
mov
rclb
xchg
cmpsl
shl
mov
daa
sub
fnstsw
xchg
jno
test
fdivrl
sbb
xor
jnp
cmp
insl
pushf
stc
add
js
jmp
jmp
pop
dec
test
sarl
sub
pop
out
cmp
std
ret
sbbl
adc
jbe
mov
jmp
stos
ss
fs
sbb
leave
test
and
or
adc
incl
outsb
jle
cmpsb
pop
pop
cmc
test
in
popf
sub
add
xchg
fsubrp
push
inc
mov
pop
fimuls
pop
cmpsb
xchg
cmp
sti
dec
sbb
clc
cmp
jge
inc
or
mov
out
sub
push
push
jl
mov
add
ret
das
int
fwait
push
jbe
popf
or
fmul
add
sub
cmp
fdivl
fucomp
jno
adc
stos
mov
ss
push
pop
mov
sub
hlt
inc
int
mov
cmp
mov
call
sbbb
or
mov
mov
loopne
iret
inc
icebp
aaa
inc
mov
and
stos
inc
cmp
dec
pop
mov
push
psllw
stos
push
inc
stos
cltd
inc
xor
in
pop
mov
frstor
add
aam
sbb
sub
ret
aas
fcomps
stos
fisubl
movsb
das
mov
scas
insb
mov
addr16
or
jl
mov
mov
mov
test
test
pop
shl
push
js
mov
test
outsb
xor
lret
push
pop
mov
push
aad
ret
push
ficomps
pop
mov
jbe
jnp
or
shll
nop
inc
repnz
insl
add
icebp
lret
xor
fidivrs
pop
jmp
push
insb
cmp
sbb
ss
es
fsubs
scas
out
mov
lock
sbb
ret
or
jg
pop
dec
jecxz
daa
dec
addr16
clc
dec
mov
mov
std
jg
and
mov
add
outsb
inc
cmp
movsl
jae
and
jo
mov
ret
add
or
xchg
and
add
inc
jg
jns
in
adc
inc
mov
test
pop
xor
cld
sbbb
imul
sbb
movsb
pop
scas
push
mov
movsb
fcoml
shll
ret
or
push
hlt
mov
loopne
dec
jmp
xchg
movb
repz
and
cmp
jg
bound
std
mov
sbb
cmp
pop
sub
xchg
push
xor
data16
push
fsts
sbb
pop
sbb
leave
inc
out
or
jne
jne
push
add
out
ret
sub
data16
dec
xchg
int
sub
stc
pop
inc
aad
in
stc
mov
mov
js
push
push
xchg
inc
les
and
cmp
cmp
sbb
mov
push
das
mov
rolb
adc
add
shl
or
sbb
loop
je
lock
mov
arpl
into
and
mov
push
mov
pop
ret
mov
jl
or
inc
test
mov
shlb
lcall
inc
jg
les
xchg
lret
cmp
and
dec
push
pop
adc
test
ljmp
das
mov
jnp
outsl
xchg
sbb
pop
es
roll
mov
xchg
mov
enter
or
ja
adc
cmp
sub
stos
jmp
mov
jnp
inc
adcb
ljmp
cld
cwtl
push
aad
cltd
pop
jnp
add
jb
xor
sub
pop
jnp
lcall
push
lock
adc
add
add
lods
scas
xor
cmp
movsl
rorb
ja
neg
pop
fnsave
daa
jb
jge
mov
orl
lods
inc
adcl
lcall
xor
popa
cmp
push
faddl
push
inc
xchg
mov
pop
and
daa
dec
or
inc
dec
xchg
in
jle
stos
nop
adc
movsl
add
xor
lock
movsb
jae
jo
sbb
mov
mov
mov
iret
add
loope
mov
ret
cmp
loope
mov
and
mov
rclb
insl
icebp
ss
jl
jecxz
push
das
mov
scas
jle
cmp
out
xchg
sub
push
adc
movsl
jmp
bound
data16
mov
outsl
test
add
add
push
xor
pop
inc
out
dec
dec
cwtl
or
cld
and
push
sub
dec
iret
and
mov
add
ljmp
mov
cmp
andl
sbb
stos
cli
loope
push
adc
les
and
lret
inc
add
fisubl
clc
jns
fmull
dec
mov
and
jae
int3
add
push
push
stos
shl
dec
add
mov
lea
aaa
jl
in
push
or
xorb
iret
scas
sbb
fildl
lcall
mov
mov
mov
movsb
loope
int
push
xor
ficompl
mov
in
lret
mov
pusha
mov
push
popf
pop
mov
nop
mov
aas
outsl
mov
and
test
shll
rorl
push
sbb
insb
push
jecxz
cld
xchg
mov
js
jnp
xor
repnz
adc
pop
scas
mov
ljmp
lock
jmp
or
dec
fiadds
xchg
mov
cmp
inc
sub
sub
dec
adc
xchg
cmp
inc
inc
cli
aad
movsb
mov
cltd
or
mov
pop
jmp
fbstp
mov
jle
sahf
push
ret
outsl
sub
pop
test
lds
jnp
bound
xchg
adc
lea
iret
pop
cmpb
dec
dec
divb
jp
cmp
add
xchg
xor
aaa
andl
and
imul
test
jo
insb
mov
xchg
enter
test
jae
pop
movsl
sbb
movsl
push
inc
lock
jbe
mov
fadd
pop
lahf
jp
mov
aas
xor
pop
fsubrl
cld
jnp,pt
sbb
sub
sub
test
popa
test
nop
xor
xor
stc
outsl
std
out
xchg
or
lods
jp
shlb
pusha
cwtl
adc
sbb
scas
into
pop
or
out
inc
dec
rorl
and
pop
jle
mov
aas
cmp
insl
sub
jb
pop
xchg
adc
jae
dec
adc
xchg
sbb
shll
push
aas
adc
xor
inc
das
sub
adc
icebp
mov
out
mov
push
sub
push
push
out
mov
stc
jno
jae
out
arpl
pop
arpl
dec
and
mov
fidivrs
and
dec
jmp
mov
push
pop
sti
sub
push
mov
adc
or
lea
popa
sub
movsl
ja
add
push
inc
aam
add
les
dec
xor
in
fwait
mull
cmpsl
ljmp
pushf
testb
cmp
cmpsl
adc
xchg
pop
pop
mov
mov
push
xor
out
dec
or
xor
aaa
mov
dec
popf
cmpsl
sub
sti
sti
pop
cmp
cmp
out
add
pop
loop
pop
dec
loop
out
xlat
or
pusha
cmp
jp
addr16
inc
xchg
push
push
mov
fsts
or
ret
dec
icebp
inc
xchg
arpl
insl
negb
xor
mov
pop
sub
frstor
stos
xchg
pop
stos
pop
ret
mov
cmc
pop
enter
xbegin
out
xor
fsubrl
jbe
in
movsb
pop
add
dec
es
jae
pop
fs
scas
push
pusha
stc
shlb
ret
movsl
xchg
mov
daa
pop
es
aam
xor
push
mov
loopne
jmp
pop
and
inc
mov
cmp
adc
lods
mov
and
shll
pushf
jns
pop
jg
fnsave
mov
push
int
shll
notb
das
repnz
imul
push
mov
inc
mov
andb
sbb
stos
jg
mov
inc
imull
lock
adc
das
in
jle
mov
lock
faddl
stos
stos
jno
notl
add
loopne
mov
push
fwait
mov
mov
leave
jnp
das
mov
fisttpll
adc
stc
dec
rclb
xchg
aaa
cli
imul
or
dec
inc
xchg
mov
mull
arpl
je
movsb
ljmp
rcl
lcall
out
dec
mov
mov
neg
cmp
mov
stc
cmp
lock
jmp
cwtl
inc
ljmp
mov
add
hlt
rcrb
loope
stc
in
insb
jmp
xchg
push
adc
repnz
popa
loopne
cmp
stos
cmp
fnsave
aaa
xchg
popa
cmp
dec
insl
les
ret
mov
cld
cld
lret
out
loopne
outsl
push
arpl
push
cmp
ffreep
push
mov
mov
and
insl
adc
add
rol
cmpsb
pop
imul
xchg
scas
xor
out
daa
fwait
aas
jp
cwtl
xor
lods
cs
inc
popa
enter
shlb
lcall
hlt
push
popf
inc
in
aam
cmc
outsl
xlat
mov
lods
subb
imul
iret
push
outsb
pop
mov
inc
push
pop
cs
pop
jmp
pop
inc
scas
sbb
cmpsl
pop
jge
xchg
out
mov
mov
jg
adc
std
cld
or
movsb
dec
test
xchg
es
rep
scas
pop
lds
sbb
sub
xor
dec
adc
repz
push
dec
subl
jl
pop
or
inc
daa
mov
aas
sub
inc
mov
hlt
test
pop
push
sbb
mov
arpl
sub
enter
mov
in
mov
push
sub
xor
mov
mov
fucomi
addr16
mov
movsb
xchg
push
dec
cmp
test
insb
pop
in
cmp
jmp
fwait
inc
in
das
xor
xchg
in
inc
mov
push
or
cmpb
insl
repnz
jne
bswap
push
push
andb
inc
push
jl
xor
js
xor
cmp
push
pop
incb
mov
dec
clc
sub
aam
test
in
jb
cltd
pop
xchg
das
push
sub
ret
xchg
ja
into
cmp
dec
pop
sbb
adc
jecxz
sbb
negl
rorb
dec
xor
jg
ljmp
push
lods
jne
stos
mov
push
jmp
and
mov
and
mov
xor
jae
pusha
lods
mov
or
mov
scas
cmp
negb
push
repnz
repnz
mov
and
lahf
lret
cmpsl
push
enter
pop
or
mov
fucom
jmp
shrl
outsb
into
cmp
fcmovb
stos
pop
daa
xor
push
imul
xor
mov
sarl
repz
imul
pop
not
xor
xchg
mov
bound
sub
jns
jo
push
je
add
into
cmc
adc
push
mov
scas
xor
or
in
hlt
jae
lret
cmp
push
fistpll
test
inc
je
stos
pop
adc
xor
jae
mov
pop
add
and
mov
xchg
xor
jae
jnp
insl
fcom
xchg
insl
xchg
mov
clc
xor
mov
jno
iret
call
dec
and
xchg
jl
xor
cmp
insl
sti
push
jmp
sub
neg
aaa
xchg
out
sahf
push
sbb
jecxz
mov
pop
add
cltd
ret
sub
adc
dec
movb
out
mov
aam
xor
call
fs
out
xor
jnp
pop
movlps
push
sbb
cli
jecxz
jge
lret
add
mov
mov
insl
pop
mov
sti
inc
daa
fidivrl
lret
add
cmp
bnd
test
mov
add
mov
xor
dec
inc
lret
or
iret
cmc
sbb
movsl
repnz
daa
pop
mov
sti
rolb
jge
jno
push
xchg
lret
ljmp
cld
andb
mov
sub
or
pusha
sbb
icebp
push
dec
imul
stc
and
xor
repz
sub
ja
sbb
stos
arpl
push
mov
mov
push
rcl
jmp
lcall
out
add
pop
sbb
cmp
cmp
das
push
mov
aam
lock
sub
inc
xchg
jmp
push
xchg
sbb
jb
jg
or
jge
adc
and
push
sarl
movsb
lret
xor
ljmp
pop
adc
fidivrs
add
sbb
cmpl
push
test
aaa
mov
sub
push
sub
ret
add
scas
or
xlat
lahf
insb
sub
fsubrl
and
push
icebp
add
push
xor
cld
add
mov
fidivl
cmpsb
lods
pop
mov
addr16
and
f2xm1
scas
fmull
mov
shrb
jnp
pop
out
enter
inc
fmul
xor
in
shr
dec
jl
nop
fwait
lods
out
lods
fwait
xchg
sub
jb
js
push
jnp
inc
sub
mov
mov
adc
and
add
test
dec
add
or
mov
fistpl
hlt
mov
rcrb
daa
mov
sbbl
push
movsl
mov
mov
inc
hlt
jge
or
pand
int
sbb
add
and
stc
test
xor
add
mov
xlat
xchg
std
pop
push
pop
jmp
push
cltd
out
xor
ret
xor
aaa
mov
or
sbb
pop
jnp
cmp
fisubl
cmp
mov
push
outsb
pop
test
arpl
jo
daa
shlb
pushf
cmp
dec
int3
movsl
int
or
push
loop
cmc
inc
mov
movb
xchg
or
xorb
cmp
mov
jg
sahf
and
movb
and
and
or
int3
sub
call
sarl
ss
cmp
adc
nop
mov
sbb
je
je
cmpsb
icebp
push
mov
pop
and
loope
xchg
cwtl
dec
pushf
lods
sub
push
and
in
jle
out
pop
outsl
inc
jl
pop
pop
mov
jecxz
xor
ja,pt
and
scas
imul
xor
sub
add
sub
stos
lahf
imul
sbb
fs
and
jle
xor
add
jg
in
js
lret
dec
in
lock
inc
pop
shrl
packuswb
push
mov
ret
jb
bound
sub
push
popf
fidivrs
and
cmp
add
out
cmpsb
sub
mov
mov
fs
pop
adc
mov
push
arpl
sbb
xchg
pop
push
hlt
fsubs
cwtl
lret
loopne
xchg
rorl
dec
xchg
inc
jbe
push
sar
sbb
loop
js
imul
rcl
lods
mov
popf
and
cmp
mov
xchg
les
mov
insb
into
push
ja
cld
pop
mov
aas
xor
popa
mov
cmpsb
push
sub
sub
dec
rorb
aad
rorb
test
inc
mov
ss
fnsave
test
dec
jmp
jp
dec
negb
push
bound
add
fwait
add
sbb
jbe
add
push
pusha
scas
ret
mov
cmp
xor
icebp
roll
scas
testb
stos
xchg
scas
mov
pop
into
mov
or
pop
repz
add
test
push
add
addr16
jbe
mov
mov
xchg
or
les
int
pop
test
fsubr
inc
test
mov
loop
sub
cs
push
and
bound
dec
adc
xchg
fisttpll
mov
aaa
mov
sub
ds
fs
in
xchg
add
and
nop
int3
loopne
loope
fnstenv
loope
mov
xchg
inc
pop
rcll
cld
adc
xor
sbb
dec
xor
ja
test
filds
stos
das
in
pushf
add
les
sbb
xor
jns
or
out
xor
in
nop
arpl
xor
or
xchg
xchg
and
inc
cs
pusha
push
mov
pushf
add
mov
push
out
xor
and
mov
pop
inc
int
lock
adc
xor
pushf
jg
lods
rcll
dec
fcmovne
and
subl
or
cmp
pop
or
enter
aaa
dec
rcrb
cmp
mov
xor
jge
repnz
adc
les
decb
adc
addl
sub
sub
jp
scas
xor
mov
hlt
pop
pushf
mov
call
mov
mov
fcomps
cmpb
adc
mov
xor
rorb
pop
dec
into
xor
mov
and
out
cmpsl
outsl
and
mov
jo
in
outsb
inc
xchg
sub
daa
lock
xchg
lcall
jnp
xchg
int3
xor
add
fstps
js
js
jmp
pop
xchg
xchg
icebp
popa
sub
mov
mov
popf
iret
ucomiss
inc
mov
adc
outsl
or
pop
mov
inc
mov
inc
cmp
orl
xorb
daa
cmp
in
pop
inc
cmp
dec
dec
mov
inc
xor
outsl
or
aas
in
add
outsl
lock
das
gs
enter
sub
shrl
xor
repz
loope
xchg
inc
xchg
fistpll
out
das
daa
in
lcall
daa
je
iret
out
not
xchg
push
rorl
dec
pop
pushf
xchg
rcr
pop
jns
test
mov
add
jne
fsubrl
shlb
push
inc
sub
pusha
bound
ja
adc
xchg
enter
aad
inc
cmp
jecxz
lea
xchg
pop
add
inc
repnz
inc
pop
lds
jecxz
mov
adc
jo
stos
popf
cmp
inc
and
or
adc
adc
mov
mov
sbb
or
and
ds
dec
fwait
cmpsb
into
mov
sub
cmp
dec
clc
add
jno
test
mov
sbb
pop
inc
mov
pop
insb
and
test
cld
fidivrs
scas
sbb
std
jecxz
jb
sbb
stos
mov
test
add
les
scas
xchg
rcrb
mov
dec
add
and
xchg
sbb
inc
pop
push
and
xlat
xchg
repz
lret
cmpsl
adc
mov
dec
fsubl
or
dec
fidivrs
das
pushf
pusha
pop
xchg
popf
les
adc
rclb
mov
push
in
out
movlhps
or
mov
addl
lcall
pop
loop
sbb
pop
add
ss
fsubl
scas
push
and
mov
sub
push
inc
push
push
xor
enter
repz
cwtl
sbb
jo
inc
xor
dec
rcl
shlb
mov
push
fisttpll
push
cmp
inc
xor
lea
jecxz
or
fs
je
mulb
adc
jns
mov
lock
insb
out
mov
add
mov
and
or
aad
data16
xchg
xchg
test
clc
sbb
enter
js
xlat
in
xchg
jge
addr16
xor
jae
out
pop
push
rorl
ret
call
mov
insl
mov
fisttpl
cmpsb
popf
loop
je
or
mov
or
rolb
insl
movsb
into
mov
sbb
fbstp
xchg
iret
jae
adc
cmp
mov
loope
int
cmp
inc
fisubs
add
arpl
push
ficompl
ret
push
pop
dec
stos
cmp
aad
and
sub
nop
sbb
push
jne
ds
cmpsb
pop
outsb
cmpsl
mov
jo
adcl
aam
jmp
add
mov
ljmp
mov
sub
ret
icebp
dec
sbb
mov
cld
scas
repz
test
inc
jg
xchg
mov
cmp
into
subl
mov
popa
add
fcmovnb
fsubrs
xor
mov
in
pop
pop
mov
mov
loop
adc
mov
xchg
mov
clc
xchg
movsb
mov
ljmp
cltd
push
adc
cmp
inc
nop
sub
sahf
jae
push
pop
insl
out
jo
lahf
push
ja
lret
and
jmp
jnp
push
je
add
mov
je
loop
sub
sbb
pop
dec
cli
clc
cld
ljmp
push
cvtpi2ps
repz
subb
push
std
lods
shl
add
dec
jge
dec
mov
test
and
adc
xchg
dec
lods
dec
cmp
sti
mov
loope
sbb
mov
cmp
ficompl
scas
add
loope
fnstcw
cmp
pop
add
xor
dec
stc
dec
ficoml
or
cmp
mov
xor
addr16
jno
push
mov
lahf
ss
cli
xor
fistl
sub
push
pop
xchg
stos
negb
inc
cmpsb
cmp
mov
hlt
xchg
mov
add
in
add
or
jl
xor
je
out
push
mov
rclb
sub
xchg
fcmovne
cmc
adc
in
icebp
mov
popf
sahf
testb
push
mov
das
rorb
inc
xchg
push
push
sarb
xor
xchg
subb
movsl
mov
add
es
xchg
rcr
sub
ss
int3
mov
jle
scas
dec
in
add
sti
clc
jae
dec
js
ds
and
sub
add
mov
mov
or
mov
mov
mov
mov
loope
inc
mov
sbbl
int
addr16
mov
xor
movsb
push
out
in
xor
pop
fs
ret
add
mov
in
fildll
pushf
xchg
cmp
sahf
inc
scas
imul
loopne
mov
testb
lds
outsb
jne
std
cmpsl
jge
push
jo
popa
stos
xchg
das
leave
mov
rcl
pushf
push
sbb
shll
and
aaa
movsl
pop
jle
ljmp
dec
icebp
jo
jmp
cmp
int
add
pop
cmpb
fildll
into
ljmp
adc
push
negb
adc
jl
lret
fistl
pop
sub
setns
stos
test
pop
and
xor
test
sti
and
mov
mov
or
push
dec
adc
xchg
mov
repnz
xlat
daa
fdivrp
xor
mov
jno
or
sub
mov
les
cmc
aaa
arpl
inc
in
popf
mov
stc
pushf
gs
jne
xor
daa
mov
dec
inc
and
in
stc
mov
or
pushf
add
inc
sub
and
fnstsw
adc
inc
divl
jg
sub
or
push
lret
jbe
int3
xchg
movsb
mov
jae
sarb
movsl
rcrb
orl
mov
in
sub
push
inc
fidivl
jo
mov
insb
dec
pop
cs
push
or
fs
cmp
mov
mov
adc
and
aad
dec
push
xchg
jg
pop
mov
adc
xchg
mov
add
loope
js
mov
scas
push
pop
bound
lret
xor
push
mov
xchg
or
add
adc
jmp
pop
ret
insl
cmpsb
jns
stos
or
sub
and
xor
mov
sub
outsl
mov
xchg
mov
jns
test
scas
rcrl
push
dec
or
mov
cmp
pop
rcll
push
xchg
sub
repnz
jle
sarb
imul
into
xchg
sbb
dec
xor
xor
test
fdivl
fwait
and
lods
lahf
aam
xor
loopne
cwtl
fwait
jae
sbb
mov
popf
push
imul
add
sbb
bound
lea
test
int
or
adc
arpl
leave
test
scas
sbb
jb
aad
jnp
mov
test
movhps
xchg
js
dec
inc
hlt
cmp
sbb
movl
mov
and
fnstsw
dec
loope
out
sbb
push
sbb
mov
push
xor
je
xchg
inc
lds
ds
adc
sub
mov
out
xchg
pushf
add
lahf
cmpl
inc
movlhps
lret
ja
and
or
dec
sbb
jmp
call
mov
mov
jmp
jmp
inc
aad
pop
adc
jp
test
mov
loope
lea
fwait
cmpsl
sti
cmpl
xor
fcmovb
jns
andb
jge
popf
ja
test
imulb
mov
xor
movsl
clc
nop
jmp
xchg
jns
pop
add
pop
out
add
mov
lahf
clc
or
jge
push
mov
mov
jo
add
or
pop
shl
xchg
xor
fwait
mov
jecxz
test
lret
mov
push
jecxz
ljmp
add
mov
push
jge
cld
cmc
mov
push
sbb
loopne
rcll
sahf
cmp
push
xchg
cmc
test
lret
xchg
adc
test
addr16
dec
stos
scas
xchg
sbb
pusha
xchg
xor
test
sub
pop
pop
sbb
mov
inc
adc
leave
jg
lcall
mov
add
imul
fcomps
xor
icebp
and
ja
push
sbb
cmp
jae
inc
scas
stos
xlat
lcall
ja
adc
pop
push
clc
mov
test
mov
lds
sahf
iret
mov
enter
cmpsb
outsb
scas
mov
ds
shrl
nop
dec
mov
outsl
stos
mov
sbb
jmp
enter
ret
xchg
gs
outsl
popf
jbe
jmp
jmp
mov
push
or
mov
das
ja
inc
and
xchg
movsl
jge
daa
shlb
loope
stc
icebp
adcl
aas
mov
sub
int
pop
aaa
or
push
fsts
daa
in
mov
add
loope
and
mov
dec
push
mov
inc
pop
mov
xchg
pusha
jmp
out
xlat
push
sbb
sbb
mov
push
and
rclb
stos
add
lea
loopne
sahf
adc
or
add
mov
adc
mov
insl
jp
jge
jge
or
add
outsb
jmp
rcrb
fisubrl
mov
aad
lds
dec
and
imul
sbb
imull
in
sbb
pushf
xchg
add
inc
xchg
lret
mov
andb
push
call
andl
xchg
xchg
xor
jb
jmp
sbb
rorb
mov
scas
fcoms
xor
jl
adc
pop
out
in
dec
jo
jl
mov
jns
jb
push
sbb
hlt
cmp
cmp
pop
movsb
push
sub
mov
jle
jmp
lds
sbb
cltd
sbb
repz
cmp
cmpsl
jmp
pop
push
push
pop
or
movsb
enter
sub
xchg
adc
adc
hlt
inc
sub
test
xchg
pushf
xor
mov
popf
shrb
cmpsb
xchg
add
dec
mov
sub
fs
add
push
and
rcrb
cltd
sbbl
adc
dec
mov
movsb
xor
cmpsl
dec
adc
jp
insb
cs
out
cmp
int3
imul
pop
push
repz
jecxz
mov
cmp
push
dec
sub
mov
jecxz
div
sbb
mov
inc
xchg
adc
cmp
hlt
stc
test
fldt
xor
xchg
shl
mov
leave
dec
mov
xchg
stos
cmc
mov
je
jge
adc
xchg
bnd
and
add
mov
mov
mov
xchg
fwait
adc
mov
popl
out
mov
sbb
add
dec
mov
std
push
ror
cwtl
popl
mov
arpl
je
dec
sub
cmp
lahf
push
pop
inc
xchg
clc
mov
stos
inc
dec
add
addr16
add
xlat
mov
iret
into
push
pusha
mov
sub
mov
aas
and
iret
mov
gs
daa
rcl
leave
movb
ss
jae
mov
mov
pop
push
loop
daa
loopne
imul
push
jge
movsb
std
fnstenv
mov
int
inc
sub
mov
cmp
repz
arpl
aad
je
xchg
loope
pop
dec
les
test
test
ret
push
scas
or
cmp
and
pushf
mov
jbe
scas
push
cmpsb
mov
adc
xchg
dec
enter
cmp
inc
push
xchg
sbb
push
add
add
adc
cli
into
mov
sqrtps
jmp
punpckhdq
test
cltd
xlat
mov
add
aad
add
pusha
pop
mov
sbb
cmp
imul
insb
cvtps2pd
popa
push
test
mov
and
andb
adc
hlt
xchg
lods
lahf
cmp
movsb
add
mov
mov
push
daa
pushf
pop
daa
jl
push
cmpl
fistpll
jl
ss
and
and
mov
sbb
mov
xor
adc
in
jns
das
fisubs
ret
or
rcrb
ss
lret
cmp
mov
jno
aam
pop
mov
dec
xor
stc
inc
mov
pusha
push
std
and
pop
pop
aam
sbb
mov
leave
loopne
jl
jecxz
repnz
in
sub
mov
enter
lds
cld
in
iret
insl
bound
out
bound
sbb
adcb
cmp
and
popf
mov
jle
shrb
mov
popf
or
pop
push
in
dec
sub
cmp
lahf
test
cli
jno
aaa
jp
enter
sbb
andl
sbb
mov
pop
cmp
jge
add
test
repz
fisubrl
stos
jl
mov
lret
mov
pusha
pop
cli
or
dec
mov
mov
mov
ss
mov
sbb
sub
xlat
pop
xchg
jo
rorl
and
aad
lods
arpl
lcall
test
enter
adc
cltd
insl
or
xchg
jecxz
loopnew
jecxz
cmp
loopne
aas
fmull
jl
or
sbb
sub
xor
sub
cmpsb
mov
fcomip
je
es
jns
add
sti
sub
stos
lahf
mov
xchg
les
loope
or
push
sbb
jle
out
les
js
popf
and
sbb
jp
sub
jge
sub
adc
push
dec
sbb
sub
aad
push
xor
inc
mov
aaa
and
add
sub
pushf
fisttps
adc
loopne
es
adcb
pop
out
xchg
pop
push
stos
cltd
rorl
or
xchg
repnz
ffreep
ss
and
xchg
aam
les
inc
lds
fstps
mov
pop
call
stc
xchg
std
mov
xchg
fldl
iret
xor
outsl
rclb
pop
bound
xchg
mov
sbb
push
xchg
sahf
pop
lods
lret
mov
mov
mov
xchg
mov
xor
lcall
jno
pop
sub
dec
xorl
call
mov
pushf
or
adc
push
jns
xchg
fwait
pop
outsb
cmc
dec
jl
insl
ret
push
loope
ja
dec
in
lock
fnstsw
pop
aaa
pop
flds
aaa
mov
test
push
aas
xor
mulb
data16
cli
mov
fldt
cmp
gs
scas
cmp
mov
movsb
ds
int3
aam
aaa
clc
stos
sub
add
push
mov
adc
sbb
stos
in
cs
sbb
cmpsb
push
xchg
loope
call
lea
sti
jle
xchg
or
fisttps
das
inc
jmp
push
xchg
adc
jle
push
push
xor
xchg
mov
xchg
orb
dec
mov
or
cld
lret
sbb
ds
xlat
xlat
push
cmp
pusha
sub
jo
cmpsb
jns
or
mov
fsubp
imul
loop
jp
jle
ret
sahf
test
xchg
stc
sahf
jno
inc
and
sub
mov
cli
mov
cmpsl
stos
or
jno
adc
inc
aad
mov
mov
push
mov
push
push
adcb
mov
inc
push
pushf
rol
xchg
jbe
aam
lcall
lods
mov
iret
jae
data16
stc
pop
test
fstl
stos
cli
xor
dec
les
sbbb
adc
pop
sub
sbb
sub
cmp
lds
inc
lds
push
into
jo
fcomps
fadd
jb
fadd
jnp
xor
add
js,pn
jp
pushf
out
jne
adc
imul
jno
or
mov
xlat
xchg
repnz
pop
jge
cmc
mov
push
in
push
add
cld
lahf
add
mov
das
sub
in
mov
add
xchg
add
sub
sub
movsl
je
cltd
xchg
pop
jecxz
rorl
dec
or
add
scas
ljmp
or
mov
sub
movsb
inc
enter
enter
xorl
or
pop
subb
sbb
ficoml
push
ds
jle
nop
adcb
adc
repnz
jecxz
ja
or
das
ficoms
cmp
pop
add
or
fisubrl
sti
pop
add
int3
mov
std
dec
mov
fildll
jae
mov
ret
inc
dec
dec
sub
sahf
xchg
jecxz
imul
pop
push
cmpb
or
mov
enter
mov
in
jmp
mov
inc
mov
pop
add
mov
not
inc
iret
inc
sarb
pop
je
push
mov
inc
stc
daa
adc
repnz
bound
gs
xlat
rcrl
stc
into
mov
lods
outsb
cmc
inc
test
imul
sbbl
inc
push
dec
packuswb
nop
nop
nop
stc
dec
sbb
mov
jle
lock
xor
aas
lret
cmpsb
cmpsl
mov
push
pushf
fisttpll
notb
les
ja
fcoml
add
int
cmp
push
jbe
push
aad
mov
fs
jnp
pusha
jle
repz
movsl
data16
mov
xchg
int3
dec
and
sub
cmc
inc
mov
popa
push
adc
and
inc
nop
inc
dec
fwait
xlat
pop
or
test
jnp
add
scas
cmp
stos
xchg
xchg
jne
shrl
cmp
out
cmp
push
ja
mov
lods
fs
inc
int3
sbb
pop
in
inc
pop
push
dec
aas
pop
test
xchg
pushf
stos
fwait
mov
in
push
pop
cmovne
sub
pop
insb
enter
roll
dec
and
cwtl
cmpsb
jae
cmp
sbb
cmp
in
jb
pop
adc
mov
test
popa
push
cmp
movsb
inc
xchg
sbb
aas
adc
cmp
dec
test
ljmp
push
sbb
shl
and
or
cmp
xlat
sarb
enter
add
ljmp
lds
jno
cmp
mov
inc
lret
mov
outsb
pusha
fstpt
sub
outsl
inc
pop
add
test
jno
mov
or
xlat
imul
dec
sub
movsl
jno
xchg
xor
movsl
pushf
mov
sahf
aam
std
enter
jns
filds
sahf
xchg
ja
test
push
ret
jae
push
cs
daa
sbb
pcmpeqb
cli
fcomps
adc
out
mov
cmpsb
and
bound
mull
lahf
push
mov
je
mov
out
mov
mov
stos
test
mov
jo
loope
shl
sub
inc
sbb
push
sub
mov
cmp
fsubl
or
pusha
inc
or
cltd
lcall
pop
jp
xchg
dec
ficompl
rorl
cmp
cmp
mov
xchg
aam
jb
mov
push
mov
enter
add
cmp
cmpsl
or
in
mov
les
adc
pop
xor
mov
sahf
sarb
aaa
xchg
loop
jge
icebp
xchg
cs
jbe
dec
ss
mov
adc
sbb
loop
or
out
sbb
pushf
adc
repz
add
lods
mov
mov
cmpsb
mov
mov
push
xor
data16
and
inc
dec
add
xlat
pop
pop
sub
mov
leave
aad
in
xchg
dec
ss
sbbb
outsb
push
push
stc
fucomp
jge
lahf
push
sub
push
das
add
out
xchg
xchg
push
mov
xorl
mul
leave
push
mov
shlb
xchg
or
pop
cmpsl
adc
movsb
sbb
jno
dec
aad
sbb
call
ret
popf
mov
push
lods
lods
cmp
fwait
sub
push
cld
pop
mov
mov
mov
subl
sub
inc
add
inc
jg
add
fdivrp
test
xor
dec
pop
lret
sahf
adc
jae
std
sbb
popf
mov
adc
jp
lods
fidivl
rcll
rcrb
scas
xchg
xor
pop
aad
push
adc
push
xchg
outsl
in
pop
and
mov
cmpsl
nop
push
sub
int
lea
in
cmp
or
xchg
test
mov
movsl
enter
insl
lahf
push
mov
test
fbstp
stos
cmp
fildl
push
and
addr16
sub
mov
out
and
fldcw
mov
test
imul
enter
mov
test
xor
or
sub
sub
nop
loope
ljmp
xchg
jns
fnstenv
nop
dec
out
pop
lock
popa
sahf
test
push
test
cmp
iret
lahf
fsubrs
jp
fsubs
out
ret
arpl
lret
cmp
push
pop
cmp
xchg
dec
mov
test
out
lret
stos
mov
sti
sbb
pop
imul
xor
push
adc
jo
lds
adc
adc
mov
mov
adc
pusha
mov
les
jg
xlat
test
sbb
mov
jne
or
inc
gs
dec
dec
ss
mov
cld
xor
arpl
call
and
sub
jg
add
lock
adc
movsl
repz
mov
mov
mov
jo
daa
test
cltd
cmp
fidivs
mov
aaa
sbb
scas
pushf
xor
pop
mov
adc
aam
out
into
mov
or
inc
lret
fisubl
fwait
repnz
shlb
sub
dec
jb
out
inc
in
test
je
arpl
inc
movsb
mov
xchg
xor
loopne
sbb
jae
xor
aaa
push
pop
leave
adc
out
hlt
jmp
leave
fst
aad
fscale
add
icebp
icebp
inc
mov
repnz
sbb
nop
dec
inc
add
imul
int3
cltd
aas
and
ret
mov
and
push
add
xchg
mov
mov
lret
ret
insl
fwait
inc
sub
out
lock
imul
ss
cld
ljmp
pushf
loopne
pop
nop
mov
in
adc
dec
popf
cmp
movsb
add
flds
addl
in
hlt
mov
sub
mov
gs
inc
xor
xchg
fstps
jl
fcmovne
xor
jg
pop
cmp
fimuls
lret
add
sub
cltd
imul
les
mov
xor
test
xlat
cmp
imul
cmp
xor
mov
int
ret
stos
leave
mov
ret
mulb
add
ljmp
fimull
imul
inc
sbb
sbb
xchg
xor
xor
repz
fnstsw
cwtl
push
push
pop
sbb
test
and
lret
push
movsb
jecxz
add
pop
add
inc
xchg
mov
and
xchg
cmp
mov
jl
int
or
jbe
rcrl
xchg
test
mov
or
daa
pop
mov
mov
xlat
mov
pop
insb
les
xchg
pop
inc
pop
sub
in
sbb
xor
pop
dec
mov
sub
sbb
and
jg
pop
in
add
es
or
pop
mov
mov
dec
fmul
and
insb
mov
or
mov
sahf
xchg
rcll
popa
or
test
lea
mov
inc
repz
scas
bound
flds
in
xor
rcr
nop
andl
popf
adc
pop
mov
lahf
std
sbb
int3
fcos
imull
sarl
xor
fbstp
add
sbb
hlt
pop
cmp
lahf
cmp
and
adc
fwait
test
pushf
test
mov
pop
pusha
nop
xchg
dec
mov
pop
cmp
daa
flds
mov
xchg
es
pusha
push
push
xlat
xor
pop
pop
sub
inc
adc
xchg
stos
out
inc
outsl
adc
push
lahf
push
mov
hlt
ja
mov
addl
dec
test
xor
xor
stc
inc
cmc
xchg
loopne
pop
pop
les
mov
stc
pusha
push
mov
imul
dec
jnp
mov
imull
jp
and
negb
jno
sub
inc
cmc
mov
mov
add
adc
dec
and
add
ja
das
jns
or
mov
aad
into
arpl
fdivs
and
wbinvd
cs
xchg
test
pop
sahf
push
xor
out
sub
or
cmp
mov
sub
push
jl
add
scas
repz
mov
inc
pop
aam
and
lret
jnp
xchg
lock
or
sub
sahf
and
cltd
icebp
or
and
and
sbb
xchg
cld
mov
incb
push
push
test
in
lcall
in
stos
adc
mov
jl
push
iret
es
addl
mov
add
mov
xchg
cmp
sub
ret
jl
fsubr
stos
pop
sti
outsb
stc
mov
cs
imul
pop
mov
mov
fs
jnp
sbb
mov
ret
sub
add
cld
std
cmpsb
inc
add
cld
inc
jmp
push
push
mov
jge
add
movsl
mov
lock
cmp
dec
sbb
cmc
add
sub
pop
push
jnp
fucomp
inc
insl
dec
pop
mov
ret
imul
add
cmpsl
cmpsl
jnp
jbe
and
xor
push
sbb
mov
dec
pop
pushf
daa
ljmp
add
stos
pop
je,pn
inc
mov
add
fidivrs
int3
jmp
fs
adc
dec
cmp
cmp
sahf
push
jge
fsubrs
jmp
lock
cli
inc
xor
fidivs
jae
bound
cmc
mov
inc
daa
cmp
insl
push
popf
aam
into
mov
out
mov
jge
inc
imul
lods
sbb
fst
xchg
cld
mov
sti
mov
sub
add
cmp
fcmove
cmp
mov
addr16
mov
mov
outsl
lea
in
lahf
inc
pop
cmc
adc
repz
inc
fistpll
fucomp
mov
ret
sahf
xor
push
xchg
and
pop
jns
inc
cmp
push
aaa
push
mov
mov
lods
ficoms
and
add
ja
push
outsb
fsubr
mov
sub
ds
arpl
ret
arpl
jne
stc
dec
xor
and
mov
adc
fstps
pop
subb
hlt
sub
add
icebp
push
and
icebp
jns
mov
adc
mov
repnz
gs
lods
xchg
out
sbb
xor
xchg
push
pop
mov
mov
mov
xor
cmp
sahf
inc
shlb
add
in
lret
mov
push
loope
sbbl
inc
sbb
jnp
push
pop
loop
xlat
out
movmskps
ficoml
push
shlb
popl
aas
test
or
mov
insl
push
ss
cmp
jae
fs
daa
and
or
inc
dec
xor
pushl
dec
lock
pop
in
test
inc
movsb
sbb
push
add
adcl
pop
jne
mov
je
sub
cmp
stc
adc
jne
fnstcw
orb
and
push
jp
or
fxam
jns
out
rorl
rol
push
cmpsl
push
jmp
push
xor
lds
or
mov
repnz
inc
sti
in
mov
test
mul
fwait
mov
test
add
sbb
jle
out
mov
arpl
sti
ret
subl
jp
mov
aad
jl
icebp
shlb
insb
iret
fadds
jns
cwtl
dec
mov
push
add
ja
fcompl
add
stos
xorb
inc
adc
loop
mov
fmull
xor
mov
mulb
xor
mov
scas
test
jg
test
sbb
adc
sub
sub
mov
sub
adc
or
testb
stc
xchg
cmc
outsl
lcall
daa
addr16
cmpsb
pop
xchg
jnp
push
ret
das
pop
ret
sub
or
inc
arpl
push
xor
pop
dec
mov
jp
lods
outsl
dec
imul
push
jno
mov
testb
adc
mov
add
stos
int3
mov
dec
adc
shrb
and
sahf
mov
cmp
lock
cmp
mov
out
popa
lcall
push
inc
xchg
mov
push
imul
test
scas
loope
dec
aam
adc
in
pop
movhps
dec
push
fldt
mov
scas
push
mov
icebp
test
inc
sub
cmc
or
cltd
sti
sbb
cmpsb
sar
daa
sbb
sahf
jecxz
ret
mov
int3
ret
fldl
cmp
sub
out
jmp
mov
out
jmp
mov
jl
inc
xchg
movsb
aad
fisubl
jo
adc
pop
jl
cli
cmp
pop
lret
adc
sub
xor
xor
and
fildll
or
imul
imul
and
jns
or
mov
sti
lret
sub
leave
pop
inc
cmp
inc
sub
aaa
cmpsl
sbb
outsl
mov
mov
and
sub
add
adc
dec
ljmp
movsl
or
icebp
test
mov
cli
rcrl
enter
pushf
mov
movsl
push
pop
sbb
sub
les
aam
mov
dec
or
sbb
jmp
and
add
mov
in
inc
mov
lahf
sub
mov
cltd
xchg
outsb
xor
jb
cmp
push
jge
sbb
cltd
adc
push
push
pop
ljmp
mov
test
pop
dec
andb
or
in
fidivrl
mov
sbb
push
mov
dec
push
mov
shlb
inc
cmp
addr16
ficompl
inc
fdivs
hlt
push
sti
inc
add
xor
repz
out
mov
xor
jecxz
add
pop
test
xor
repz
xchg
enter
cmp
mov
in
ss
lock
imul
sub
mov
lods
cmp
pop
sahf
lock
xchg
adc
sahf
cmpb
add
std
sub
xchg
add
daa
xlat
loop
sub
jp
pop
or
sti
pop
push
aaa
jae
inc
jecxz
mov
inc
jno
cmp
in
movsl
cs
aas
shr
daa
mov
inc
dec
cmpsb
icebp
jg
jns
cli
clc
vpsubusb
js
pusha
rolb
inc
mov
inc
mov
sub
or
test
pop
adc
dec
add
xor
pop
hlt
mov
mov
sarb
ret
stos
daa
fs
xorl
loopne
mov
cli
mov
inc
sub
andl
movsb
xchg
rcr
das
dec
les
xor
jge
jle
sub
xor
inc
mov
jmp
dec
loop
mov
mov
dec
movsl
outsb
test
inc
pop
cmpsb
cmc
xorb
sarl
mov
ficompl
adc
pop
jp
pop
inc
xor
call
sbb
dec
fisubl
outsl
pop
mov
cmp
push
or
push
leave
jne
push
fistpll
test
dec
push
sbb
mov
jbe
movsl
fistpll
jmp
movsb
js
or
into
fldt
push
and
cmp
add
push
sub
xor
adc
cmp
jecxz
and
scas
aaa
filds
pusha
movsb
call
pop
mov
cmp
cwtl
dec
ljmp
mov
fstps
dec
in
adc
imul
lahf
stos
inc
outsb
loopne
icebp
hlt
add
enter
jb
out
pop
dec
ljmp
sarl
mov
push
pop
sbb
and
xor
xchg
fbld
mov
xchg
loop
inc
ret
aam
mov
xor
xor
clc
scas
jmp
and
mov
jbe
pop
jg
pop
push
es
jae
aad
iret
mov
ss
test
mov
std
jg
pop
cmp
fs
mov
ja
push
jns
jae
xchg
enter
outsl
sahf
add
aas
mov
xchg
pop
xchg
jae
ljmp
mov
ret
sub
pop
cmp
in
mov
adc
imul
dec
xchg
loopne
clc
dec
fdivs
mov
in
dec
mov
lea
xchg
cmp
mov
pop
pop
push
popf
inc
adc
dec
aad
test
or
and
aas
aas
dec
sahf
mov
xorl
dec
push
cmp
ret
sub
and
sub
daa
mov
push
divb
fcmovu
test
lods
fldcw
xchg
fcmovu
adc
cmpsl
pcmpgtw
je
popf
jno
test
xor
pop
xchg
data16
pusha
call
mov
arpl
mov
inc
int3
push
hlt
mov
cli
nop
dec
push
mov
pop
les
sub
jb
lret
out
enter
xor
jnp
sbb
fidivrl
test
or
jge
xor
js
mov
adc
aaa
push
leave
push
aaa
jne
mov
or
pop
xor
sbb
add
bound
mov
inc
ljmp
sub
cmpb
mov
sub
adc
add
push
pop
push
jne
xor
adcb
jecxz
pop
sarb
ret
adcb
iret
and
push
push
std
int3
jo
hlt
movsl
arpl
sbb
or
int3
push
push
push
aas
xor
loopne
repnz
bound
fs
add
outsl
js
cltd
dec
mov
repnz
daa
adc
sub
pop
push
aad
scas
sub
add
ret
add
addr16
mov
f2xm1
jbe
je
les
ss
cld
and
jp
cmp
jmp
mov
insl
adc
push
sbbb
mov
jmp
xlat
jl
mov
js
scas
sti
or
mov
sbb
jb
add
jno
ljmp
arpl
insl
int3
pushf
jl
inc
mov
dec
data16
jg
loop
push
sub
xchg
movsb
mov
xorl
pop
jp
dec
iret
iret
jp
sub
xor
shrb
adc
into
push
cmc
inc
push
lock
mov
in
adc
dec
cld
cmp
test
push
pop
out
mov
push
sbb
xchg
inc
push
jns
sbb
push
adc
int3
push
andb
and
or
xchg
je
jb
lds
in
mov
std
lea
xor
loope
rcll
inc
adc
mov
std
cmovge
dec
stos
lret
cltd
lret
mov
ljmp
es
push
scas
loope
xchg
bound
lods
and
pop
rcrb
cmpsl
iret
lcall
cmp
xlat
outsb
mov
out
fisttpll
scas
das
and
lret
sub
test
cmp
sbb
arpl
lret
jns
sbb
cmpsb
sub
pop
test
mov
xorb
push
movsl
or
mov
dec
jmp
push
xor
and
lods
mov
mov
inc
das
lcall
dec
adc
scas
push
push
js
adc
out
inc
test
enter
xor
int3
arpl
mov
fcoml
orb
cltd
ljmp
pop
xor
in
cld
lock
sbb
nop
cs
jo
int3
int3
mov
cld
push
add
in
adc
adcb
ret
adc
push
test
xor
stos
stos
push
push
jo
jbe
psllq
adc
mov
and
cmp
repz
loopne
xor
xchg
xchg
dec
dec
fldcw
dec
aaa
stos
inc
pop
jns
push
fadds
jb
lahf
lea
add
sbb
stos
push
xor
sbb
cmp
outsl
out
mov
mov
inc
mov
pop
bound
push
push
and
sub
movsl
into
clc
cld
lea
inc
pop
int
fsubs
leave
adc
bound
cld
fsubrl
fcom
pop
cmpsb
out
add
jmp
in
adc
adc
push
xor
and
mov
outsl
call
je
aas
js
lret
mov
xchg
lods
jecxz
scas
ds
rcrb
and
dec
or
jmp
sub
add
push
lret
fisubl
push
imul
movl
mov
adc
adc
cmp
push
mov
fcoml
out
push
shll
loope
insb
gs
mov
ffreep
aad
shll
int
cld
movsl
sbb
popa
and
dec
scas
sbb
cwtl
add
flds
js
rorb
jbe
xchg
xchg
iret
push
sahf
mov
add
pop
bound
mov
data16
ss
icebp
jp
mov
in
dec
ds
adc
xchg
addr16
ror
faddl
int
scas
adc
imul
loope
je
mov
loope
or
push
paddd
xchg
test
dec
loop
cmp
xor
mov
dec
mov
inc
mov
push
xor
add
xor
ror
jns
lods
scas
sbb
inc
mov
fcmovnbe
jno
fsub
and
jmp
xor
pop
pushf
and
jo
out
dec
in
inc
sti
test
push
adc
fsub
pop
aaa
aaa
lcall
movsb
ret
out
test
xchg
rcll
in
insb
popf
in
fmul
cli
xchg
xor
lret
inc
cmp
xchg
jmp
or
sub
out
sub
data16
mov
cmp
add
sti
push
push
cmpsb
pop
decb
add
nop
icebp
mov
orw
outsb
mov
lret
lds
fldcw
outsl
xchg
adc
add
cmp
jl
cmp
lcall
pop
clc
ficoms
lcall
std
pushf
and
call
mov
es
jnp
sbb
push
ljmp
jg
dec
push
lods
add
cmc
dec
sbb
adc
pop
sbb
inc
pop
in
sub
test
inc
sub
mov
sub
and
sti
mov
call
scas
ja
addr16
loop
dec
jb
mov
sub
mov
dec
fs
xchg
call
bound
push
into
sahf
shrb
cs
sub
pop
enter
add
dec
push
adc
js
mov
sbb
jge
lret
subl
push
mov
ja
insb
xor
add
mov
popa
gs
jmp
dec
out
inc
sbb
dec
xchg
dec
loopne
call
pushl
aam
mov
and
xor
lods
lods
mov
push
cmp
pop
je
decb
mov
cmp
xor
test
or
lret
addb
rcrb
pop
lret
sti
dec
call
add
jmp
iret
adc
add
or
cmp
mov
add
lahf
inc
lock
jge
stc
fsubp
push
adcl
push
cmp
imul
mov
mov
pushf
movsb
jae
mov
call
jmp
inc
push
mulb
hlt
repnz
xorb
jnp
adc
pop
imul
mov
test
jle
sbb
cmp
adc
in
lret
js
ds
cmpsl
sahf
jns
xor
lock
stos
imul
or
xor
jbe
aam
aam
mov
mov
and
or
pop
mov
or
cwtl
push
mov
sahf
add
dec
mov
fbld
and
add
xor
xchg
flds
push
add
fists
jecxz
dec
fs
add
add
add
repnz
push
icebp
aas
js
mov
sarl
popf
sub
push
fstps
mov
sarl
jle
stc
and
xchg
fsubrl
jecxz
pop
xchg
pushf
pop
mov
push
pop
mov
mov
add
mov
repz
add
pushf
fstpl
xchg
add
mov
in
dec
sbb
idiv
gs
sbb
daa
imul
sbb
cmp
ss
xor
push
out
popf
into
jne
or
mov
adc
dec
adcl
stc
inc
sahf
and
push
jo
jge
pop
mov
mov
push
fisttpll
lcall
addr16
jmp
pop
lea
push
loope
outsl
push
in
xor
repz
cltd
pandn
pop
stos
decb
xchg
in
repnz
out
out
add
ja
xchg
in
lret
je
sbb
jbe
or
jp
sub
and
or
lds
out
sub
aas
mov
mov
jge
cmp
pop
sbb
fsts
mov
push
aam
jmp
and
int
pop
jo
outsb
ret
mul
stc
stos
sbb
jmp
cli
rcrb
sahf
jmp
pushf
sbb
and
iret
ret
xor
sub
aas
and
aam
cmpsl
test
call
out
mov
jg
js
or
mov
cltd
fcmovu
mov
inc
mov
test
cwtl
iret
fsubs
aad
add
pop
fnstcw
insb
fnstenv
aas
push
jle
push
xchg
clc
fstp
les
std
cmp
dec
in
jmp
fsubrl
mov
jb
data16
inc
sbb
jg
jne
mov
cmpsb
aad
fisubrl
popa
cmp
sbb
in
push
test
test
and
inc
mov
mov
lea
test
in
inc
clc
fbld
jp
sbb
adc
or
and
or
mov
ljmp
jmp
insl
mov
les
jmp
and
mov
sbb
mov
dec
ret
push
outsb
std
call
mov
aaa
stos
fs
xlat
pop
enter
fwait
insb
cltd
and
add
jo
aad
jno
mov
sti
mov
sarl
insb
sub
subb
and
mov
js
sbb
jl
xlat
push
imul
cwtl
loopne
leave
les
leave
jle
ja
cwtl
dec
mov
pop
jo
int
jl
add
idivb
pop
es
out
loop
pushf
xchg
fstpl
rol
xchg
push
int3
mov
push
fmuls
cs
jecxz
js
hlt
push
add
pop
sti
push
add
into
aad
fsts
outsb
sbb
add
jmp
or
xchg
into
push
push
fcom
test
lds
inc
fstpl
ljmp
sti
js
adc
push
aas
jno
mov
aam
loopne
lds
test
or
add
icebp
inc
fs
dec
in
imul
shlb
add
icebp
test
pop
pop
imul
push
fldl
xor
popf
adc
push
pop
sbb
insl
or
ret
xor
rclb
popa
inc
inc
and
stc
sub
or
stc
mov
add
jmp
es
setne
jl
pop
jae
movsb
and
push
xor
insb
add
aad
push
imul
das
cli
or
cltd
xor
stos
adc
nop
out
daa
pop
roll
mov
push
pop
imul
movl
test
push
inc
ror
addr16
pop
or
xchg
push
repz
aam
bound
pop
in
shrl
dec
and
repnz
mov
popa
adc
push
mov
xorl
jecxz
push
sar
scas
icebp
shll
scas
ret
daa
pop
out
movsl
scas
push
dec
xchg
cmp
into
adc
adc
scas
sahf
mov
dec
inc
sti
arpl
push
jmp
mov
fstpl
addr16
lcall
cmpsb
stos
mulb
popa
cmp
sbb
xchg
add
loopne
aad
pop
mov
xchg
add
leave
xor
clc
movsl
js
mov
mov
add
xor
std
fs
adc
pop
push
mov
pop
es
push
cvtps2pi
outsl
mov
sub
int
std
test
loopne
jb
inc
xor
mov
imul
dec
mov
test
addr16
push
push
pop
mov
jmp
push
gs
repnz
movsb
mul
mov
addr16
pop
jns
ja
call
jne
lahf
xor
pop
in
add
mov
les
sbb
fnstsw
fstps
sub
repz
mov
mul
movsb
cmpsb
or
scas
xchg
je
and
xlat
adc
xchg
ds
aam
mov
cmp
iret
lret
test
shrl
cltd
fsub
lds
lcall
mull
mov
inc
fdiv
pop
lds
ret
pop
push
jae
stc
pop
mov
fbstp
dec
es
mov
into
pushf
into
cmpsl
xorl
push
rorl
push
outsl
inc
idivb
ss
or
btc
aaa
imul
xchg
pushf
inc
cmp
sbb
fwait
cli
lcall
loope
cmp
bound
pop
scas
cli
mov
add
push
mov
mov
add
push
dec
adc
jno
dec
dec
insb
out
cmc
jne
movsl
sub
jmp
pop
cmpl
inc
mov
xor
xor
test
cmp
stos
stos
xor
sbb
mov
adc
sbb
arpl
mov
mov
repz
pop
rcrb
fidivl
xchg
dec
dec
iret
shl
add
or
fs
sbb
jp
fsubl
dec
idiv
sbb
pop
jnp
movsl
test
dec
dec
stos
jge
loop
sub
mov
push
loope
add
pop
dec
lods
hlt
cmp
popl
push
test
les
jns
pop
xchg
cmpsb
aam
jl
out
sub
pop
test
in
lahf
push
mov
aas
ret
push
cmp
in
jmp
mov
in
mov
in
or
xchg
pavgw
iret
jmp
sahf
push
mov
mov
mov
loopne
xchg
lock
mov
mov
jno
sub
xor
push
fistpl
xchg
lahf
mov
out
push
popf
jecxz
mov
lret
out
or
or
add
adcl
addr16
jnp
enter
and
sbb
push
popf
ljmp
repnz
pop
rol
and
mov
outsb
fs
idivl
je
test
add
xor
fs
dec
in
mov
cmpsb
and
sbb
dec
push
and
subl
lret
stos
enter
outsl
cmpsl
dec
aad
icebp
iret
insl
mov
addr16
aaa
es
push
pop
sbb
jb
or
push
pop
mov
imul
popa
dec
sub
dec
fmull
fidivl
xor
lds
mov
out
jae
pop
or
repz
mov
cmp
popa
dec
lret
lock
pop
movsb
test
sub
ljmp
and
fsts
lods
addr16
mov
adc
mov
jl
shrl
push
jg
movsb
sbb
sub
call
pop
sarl
push
adc
xor
and
cmp
pop
and
jl
cmp
lock
cmp
mov
leave
sub
int3
mov
cmp
cmpsb
and
fldt
dec
in
fwait
jp
je
jmp
xchg
push
cmpsl
mov
mov
loope
mov
sub
jns
stc
dec
cmp
add
lods
scas
xchg
insl
add
jmp
add
sub
and
xchg
cld
or
sub
fdivl
pop
or
dec
aad
xchg
jbe
push
sbb
add
adc
jns
flds
mov
addr16
cmp
sbb
test
les
mov
aaa
test
dec
fisubs
fs
sarl
decb
push
adc
lahf
pop
sahf
adc
pop
dec
mov
loopne
inc
cmpsl
adc
jge
xchg
or
cld
cs
inc
lret
mov
pop
out
in
bound
mov
mov
cmp
psllw
xchg
dec
adc
cmp
addr16
orb
inc
xor
ljmp
mov
pop
sub
outsl
shll
inc
mov
pop
pop
inc
inc
out
lea
mov
call
xchg
mov
push
cld
or
mov
dec
sub
arpl
outsb
cmp
clc
cmp
xchg
ds
cmpsb
mov
shl
pusha
sub
test
scas
popa
jmp
sbb
sub
ljmp
xchg
subl
and
repz
loop
adc
mov
inc
dec
cmp
mov
aas
dec
xchg
sub
adc
mov
xor
inc
cmp
nop
test
jno
inc
cmpl
push
mov
pop
adc
neg
repnz
pop
cld
mov
out
ret
push
push
push
sub
push
fadds
add
mov
jno
incb
jo
scas
jecxz
push
lods
loope
sbb
xchg
cltd
lret
fs
cwtl
push
or
cwtl
mov
subl
gs
or
mov
inc
pop
xlat
xchg
loope
sub
xchg
dec
aam
xchg
or
fnstsw
mov
and
adc
jecxz
rdtsc
gs
mov
cli
ljmp
clc
movsb
jmp
loopne
dec
xchg
mov
pop
push
mov
xor
cmp
or
lcall
rcrl
popf
cmp
pop
hlt
cld
dec
stos
xchg
std
in
push
test
in
sahf
in
stos
cmp
in
test
add
imul
xchg
das
inc
inc
in
push
pop
mov
or
outsl
popf
loope
adc
jnp
xchg
ficoml
mov
cmp
test
sub
rcrb
test
rcrl
nop
xchg
popa
enter
test
int3
imul
mov
cmpsb
mov
mov
sub
mov
pop
sub
test
mov
or
jnp
sahf
imul
ficomps
push
pop
jp
pop
lret
fwait
test
and
jmp
stos
mov
pushf
mov
add
lods
out
lods
outsb
fwait
data16
fcomi
lahf
outsb
add
dec
popa
push
xor
jle
movsl
addl
cltd
cmp
cmp
ret
sar
out
pop
int3
push
add
mov
lods
mov
dec
pop
int3
xchg
in
and
stc
mov
daa
mov
inc
inc
imul
pop
cs
jmp
icebp
pop
lcall
dec
sub
adc
fistl
xchg
jecxz
mov
dec
sub
adc
xchg
cmp
mov
jo
jge
ljmp
inc
inc
clc
mov
cmp
push
lock
int
sarb
test
push
mov
sbbb
adc
inc
add
inc
add
jle
mov
cmpsl
pop
ret
dec
fiaddl
lods
xlat
lret
mov
lret
pop
jae
insb
pop
mov
add
test
mov
ja
mov
mov
aam
mov
fnsave
and
unpckhps
jge
ss
mov
mov
mov
js
xchg
inc
mov
clc
scas
xor
mov
int3
imul
lock
dec
sbb
jns
xchg
sbb
es
mov
push
aam
inc
cmp
xor
loopne
push
or
or
ja
xchg
inc
imul
xacquire
into
mov
add
pop
fidivs
add
sbb
push
adc
cmp
push
adc
xchg
mov
jl
lahf
test
sbb
outsb
xchg
jecxz
add
pop
stos
xchg
jle
adc
ret
and
pop
insb
not
addr16
mov
imul
dec
sti
push
xor
mov
mov
movsl
loopne
enter
jl
shll
xlat
pusha
call
jmp
mov
xor
inc
and
jbe
aad
cmp
inc
cmp
lcall
pop
cltd
cmp
and
test
sub
sbb
jl
xchg
addr16
pop
push
lds
push
jb
pop
push
ret
les
shl
mov
inc
pop
and
xlat
push
add
jl
sbb
sub
mov
dec
mov
add
xchg
popf
push
mov
test
das
add
mov
fstpt
dec
sub
inc
hlt
mov
mov
push
jecxz
rcrb
xor
push
ljmp
adc
push
push
ficoms
std
mov
lret
and
ja
out
imul
mov
sbbb
rcrl
out
sub
adc
mov
push
or
xchg
adc
das
mov
adc
adc
pop
sarl
subb
imul
test
loop
sub
subb
adc
fcmovne
jecxz
sub
lds
stos
mov
dec
push
add
mov
fs
adc
mov
and
and
and
stos
inc
xor
js
mov
mov
inc
outsl
stos
pop
in
ja
add
jbe
xor
xchg
jb
dec
loop
arpl
pop
mov
xor
inc
pop
push
mov
popf
fstps
or
mov
or
mov
lods
rcrb
dec
aad
dec
fldt
and
cmpl
adc
dec
pop
scas
jge
stos
cmp
lret
dec
pop
add
jge
cmpsl
mov
jg
arpl
push
leave
adc
pop
ret
pop
jp
scas
and
mov
jo
cmp
jle
cwtl
pop
sbb
in
ds
jne
lahf
out
jl
adc
mov
mov
dec
xchg
sti
in
popa
push
loopne
xor
and
rcr
pop
std
xchg
lods
movsl
push
loope
xor
pop
push
loop
inc
and
pop
add
movaps
out
fisttpl
out
cmp
test
mov
push
pop
test
add
in
xchg
inc
adc
nop
or
push
fiadds
lret
adc
push
mov
repz
cmp
insl
dec
adc
mov
xchg
fsubrs
out
add
pop
inc
inc
push
push
dec
pop
xor
mov
jns
jnp
sub
dec
sbb
xchg
repnz
inc
test
nop
jg
jb
pop
inc
cmpsb
fcomip
jg
scas
das
jno
daa
push
mov
fimuls
mov
xor
jne
mov
nop
cmc
sub
ja
jmp
addb
mov
scas
js
movsl
sti
or
rorb
sub
dec
fadds
inc
add
jne
cmp
sub
cmp
jbe
idivl
ss
mov
push
fldenv
inc
enter
lods
icebp
cld
int3
jb
shl
int3
cld
pop
inc
leave
cmpsb
cmpsb
xchg
fcomi
je
xor
shll
je
mov
jl
sub
data16
or
repz
stos
inc
or
sub
out
adc
fisubl
add
xlat
cmp
mov
fs
mov
sub
in
pop
sub
clc
aad
inc
mov
leave
out
xor
adc
inc
into
inc
lods
dec
cmp
sbb
hlt
popa
fwait
pop
pop
cmpsl
ret
into
test
mov
imul
je
xchg
sarb
mov
jmp
sbb
dec
jg
jp
cmp
cmp
lret
add
outsb
out
addb
jp
mov
inc
and
mov
fadds
inc
divl
test
sbb
repnz
jg
mov
dec
enter
fadd
xchg
insl
loop
xor
or
rcll
push
mov
push
xorb
sub
add
mov
add
insl
push
decl
cli
fsts
push
or
repz
mov
mov
loop
sub
stos
add
test
adc
lods
aas
fbstp
pop
push
mov
mov
push
xchg
xor
scas
adc
xchg
sub
in
cmpsb
xor
push
repz
rcrb
mov
pop
push
ss
dec
mov
sub
cmp
sbb
xchg
jge
mov
stos
mov
fsubl
lcall
ja
mov
or
xor
inc
push
sub
pop
pop
sbb
imull
nop
push
inc
les
cs
lahf
andb
mov
sbb
ffree
rcll
add
arpl
cmp
fwait
add
ret
js
jns
aas
ret
std
cmpsb
push
xor
cmpsb
test
insl
pop
rcr
mov
xchg
adc
pushl
dec
pushf
lahf
cmp
adc
mov
repz
pop
scas
and
mov
mov
arpl
xlat
push
adc
out
aam
lcall
pop
mov
lret
push
or
arpl
xor
dec
out
into
cmp
out
movsl
int
clc
ljmp
and
xchg
adc
insl
outsb
ds
fists
lods
ret
shl
add
mov
scas
xchg
xchg
jl
or
clc
popf
outsl
repnz
hlt
inc
pop
push
or
pop
loopne
fs
scas
xchg
push
push
xchg
ret
push
pusha
es
sub
push
rcr
cltd
sub
xchg
jmp
movsl
cmpsb
and
je
push
xchg
xchg
aad
add
xlat
or
push
and
push
ret
stos
lea
or
rorb
adc
pop
mov
jp
lods
fstpt
call
or
mov
mov
outsb
aam
fadd
sti
inc
pop
and
xchg
jp
add
loopew
pop
jle
adc
in
ja
repz
dec
test
lods
xor
push
add
inc
inc
out
gs
lods
sub
je
mov
or
ficomps
sub
xchg
iret
mov
adc
fldl
push
mov
pushf
xorb
push
xor
int
js
imul
cld
cmp
mov
dec
cmpsl
ljmp
jno
lds
xchg
adc
fisttps
out
add
sbb
mov
add
mov
icebp
fsubr
pop
fdivs
jl
loopne
