mov
test
add
in
cmp
adc
rolb
jo
lcall
fiaddl
push
add
xor
mov
sbb
mov
es
add
mov
pushf
fstl
sub
adc
iret
xchg
push
sub
mov
mov
push
sub
loop
repz
add
mov
add
adc
pusha
ud0
jo
or
fldt
mov
fdivr
push
test
or
xchg
mov
push
fdivr
adc
in
leave
in
push
sub
jnp
mov
fstpt
pop
das
dec
loope
or
in
int3
and
and
push
loope
push
cld
and
nop
push
jl
mov
ror
fistps
dec
sub
jle
rorl
daa
mov
xor
jmp
or
sbb
jp
sub
in
and
fisubrl
lods
testb
in
sarb
jne
insl
std
add
into
pushl
rcl
mov
bound
push
add
or
mov
push
leave
ja
push
int3
std
and
or
or
bound
jg
xor
clc
push
and
or
loop
pop
push
dec
mov
inc
add
push
dec
inc
call
xor
mov
rcl
scas
push
setg
inc
mov
xor
leave
mov
cli
push
dec
rcl
sub
pop
add
cli
dec
add
dec
add
dec
mov
je
sti
sti
shlb
hlt
das
xchg
hlt
outsb
repz
hlt
mov
fimuls
or
pop
xchg
out
add
scas
shr
scas
hlt
sbb
nop
lock
inc
add
add
add
lret
adc
fcomp
pushf
data16
jmp
push
cld
std
sub
lcall
mov
sub
mov
pop
ljmp
push
cld
mov
fistps
mov
adc
xor
push
decl
inc
mov
mov
in
ror
fxch
jge
daa
mov
xchg
sbb
cld
sarl
mov
xor
scas
add
lcall
sub
adc
shl
mov
pop
cld
movb
hlt
scas
lock
mov
rcrb
or
sti
cmp
add
cmpsl
adc
std
repnz
lock
lcall
xor
cwtl
xlat
and
sub
push
cmp
pop
jl
je
jge
into
sub
imul
imul
xorl
pop
mov
notb
cmp
cs
sti
inc
mov
jns,pt
fwait
mov
mov
mov
and
jno
mov
push
into
add
pop
pop
inc
push
mov
outsl
stc
repz
xor
jge
pop
fisttpll
mov
clc
inc
jno
popf
cmp
je
jge
sarl
je
je
sub
dec
aam
mov
add
je
dec
insl
jae
pop
jge
std
or
pop
jp
jmp
dec
pusha
sbb
cmp
outsb
jno
sub
and
rcrb
add
clc
ja
mov
aas
gs
push
lcall
xchg
shlb
mov
xorb
jl,pt
aad
adcl
ja
mov
popf
jns
jnp
imul
xchg
in
mov
push
les
push
pop
or
jne
mov
push
rclb
ja
scas
gs
xchg
pop
push
je
addb
lahf
sub
popa
pop
hlt
push
inc
jle
je
jns
in
inc
fs
cwtl
aam
mov
dec
fdivs
dec
xlat
jge
frstor
pop
out
push
mov
movsl
dec
loopne
mov
xlat
push
mov
and
jecxz
jae
dec
movsl
jl
repz
sub
leave
dec
sub
or
aad
stc
dec
cmp
imul
aaa
jmp
jl
xor
je
aad
sub
ret
push
mov
jge
pop
test
xlat
push
jmp
jnp
jecxz
nop
sbb
mov
je
cmp
mov
jp
sub
movsl
jl
pusha
cmp
dec
xlat
ja
mov
jne
aam
or
xlat
pop
enter
outsl
xorb
mov
pop
push
lods
cmc
dec
lcall
jecxz
or
js
mov
sub
sub
and
sbb
js
dec
testb
clc
adc
out
imulb
jbe
je
rcrb
dec
in
clc
inc
mov
das
js
lods
test
les
inc
rcrl
dec
int
push
fisubrs
mov
lock
push
mov
icebp
aad
stc
jg
je
jno
push
mov
mov
jns
pop
mov
cs
mov
cs
test
xlat
inc
jno
jne
inc
test
pop
mov
aas
add
pop
dec
stos
sbb
jb
push
xchg
mov
sarb
add
pop
push
fstpt
ljmp
pop
shrb
xchg
push
test
or
mov
cmpsl
xchg
xchg
lods
mov
out
hlt
je
jge
or
push
je
push
aam
outsl
pop
cs
xchg
jno
push
jno
cs
pop
rorl
xor
pop
or
popf
lret
mov
push
je
jno
loop
jge
sbb
xlat
push
mov
icebp
aad
pop
jg
je
jno
push
mov
add
stos
jno
arpl
aam
aad
lods
xlat
push
inc
loop
pop
push
and
inc
out
adc
pop
clc
in
iret
ss
push
aam
xchg
je
jge
sub
jge
and
push
fadds
movsl
or
and
js
pop
les
xchg
icebp
fs
je
jg
pop
movsl
dec
out
add
clc
push
jg
andl
mov
ret
sbb
and
out
pop
jbe
hlt
popa
icebp
cmc
sahf
jge
je
or
lock
jge
jne
dec
jge
paddusw
popf
movsb
jg
je
jge
je
jge
pop
cmpsb
jge
jno
jge
je
jge
jne
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
jb
jge
mov
out
and
dec
aad
mov
fsub
cmp
pop
shll
push
int
rclb
call
push
shrb
cld
push
dec
fdivr
leave
adc
arpl
in
outsb
je
jge
je
jge
popa
movsb
jge
jno
jge
leave
jecxz
xlat
je
jge
je
jge
jae
jns
jo
jge
sbb
jge
mov
jge
mov
jge
mov
jge
hlt
fnstsw
je
jl
mov
jge
jl
jge
je
jge
je
jge
je
jge
je
jge
xor
jge
jl
jge
je
jge
je
jge
je
jge
mov
jge
je
jge
mov
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
hlt
fnstsw
jge
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
and
pushf
outsl
jne
jge
mov
jge
mov
jge
sbb
jge
jl
jge
je
jge
je
jge
je
jge
je
std
push
cmp
mov
jne
jge
jge
jge
hlt
fnstsw
mov
jge
je
jge
je
jge
je
jge
jne
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
je
jge
aam
jge
pop
fidivrs
je
jge
jae
jge
xchg
mov
xlat
dec
movsl
std
jnp
pop
mov
aam
ret
jnp
je
push
aam
mov
xlat
sarb
mulb
fcomps
loop
xor
mov
mov
ja
ja
ja
pusha
shrl
outsl
test
jae
test
xor
in
lahf
add
xor
mull
clc
inc
pop
mov
jnp
ficoms
jns
xchg
mov
je
adcl
mov
les
bnd
cmp
mov
stc
fistpl
gs
xlat
push
xchg
int3
xchg
pop
adc
lock
imul
movsl
insl
mov
pop
xor
xor
cmp
inc
cmp
pop
test
xor
shrl
pop
add
adc
dec
cmpsl
out
lds
pop
xchg
pushf
sbb
sarl
lods
adc
ja
cli
dec
jo
mov
je
jns
add
pushf
mov
mov
cli
mov
fistpll
push
addr16
dec
mov
ss
mov
inc
rorb
xchg
xlat
out
mov
jge
dec
mov
inc
ret
fimull
jae
jge
xor
pop
aam
push
cmp
jns
lods
fldl
mov
mov
ret
inc
mov
push
je
push
aam
cmp
push
push
pop
data16
mov
icebp
test
cld
movsl
ljmp
je
dec
aam
scas
dec
in
xchg
jge
push
mov
aad
mov
sbb
dec
ss
jns
push
mov
adc
pop
rcrl
sub
enter
inc
push
add
adc
bnd
fdecstp
outsl
sub
dec
mov
push
dec
addl
fadds
fcmovbe
inc
aas
popf
and
ret
jle
rclb
or
jo
loopne
sbb
dec
aam
push
sbb
outsl
jge
je
push
aam
mov
loop
enter
mov
cmpsl
out
lds
outsl
es
adc
pop
sub
inc
loop
mov
mov
xor
xchg
mov
pop
shlb
or
dec
dec
sahf
xor
inc
jno
xchg
dec
test
jns
jae
jge
add
push
aam
mov
mov
ficompl
outsl
pop
xchg
push
jle
iret
imul
add
jno
and
push
mov
scas
insb
xorb
dec
sub
icebp
rcr
push
shlb
jge
push
test
das
loopne
xchg
jge
cmp
push
aam
mov
and
lds
outsl
es
xor
pop
sub
push
loop
mov
fwait
stc
add
fcoms
dec
mov
jb
and
rorl
mov
mov
inc
push
lock
loop
adc
repz
lods
int
mov
and
mov
xlat
jo
pop
xchg
je
fxam
outsl
mov
fnstenv
test
cltd
imul
shlb
jne
xchg
js
jge
test
mov
ss
jns
push
mov
adc
pop
test
push
fmulp
loopne
ljmp
jge
jb
jge
shlb
push
jns
push
jb
inc
lahf
cli
rcll
push
les
cmpsb
jge
jo
aas
aad
cmpsl
mov
pop
mov
mov
lds
push
rcrl
push
mov
pop
sub
inc
loop
mov
cmp
mov
push
mov
bnd
fdecstp
outsl
ds
pop
bound
push
fisubl
out
jnp
inc
rcrb
push
push
lock
xchg
mov
cld
or
dec
loop
xor
sub
shl
pop
in
ds
mov
inc
jb
movsl
jge
ror
dec
mov
push
jno
xchg
jmp
sub
push
test
das
loopne
xchg
jge
cmp
push
aam
mov
and
lds
outsl
es
xor
pop
sub
push
loop
mov
fwait
stc
add
adcb
dec
mov
push
shl
xchg
loop
inc
mov
sbbb
sub
adc
jb
lahf
pop
aam
mov
std
sahf
in
clc
pop
in
xchg
incb
movsl
loopne
and
adc
pushf
cmc
ds
lock
mov
push
cmpsl
shrl
dec
xor
ret
jge
shlb
inc
imul
leave
fnstcw
inc
aas
popf
and
ret
jle
rcrb
std
ds
clc
xchg
mov
faddl
xor
clc
in
dec
subl
jb
and
ret
lcall
lods
stc
ds
clc
mov
jge
add
and
incb
movsl
xorb
sub
icebp
or
push
lock
mov
push
cmpsl
shrl
dec
cmpl
jp
pop
lahf
and
xchg
jno
test
inc
xor
in
fdiv
inc
aas
popf
and
jp
ret
jns
scas
push
and
incb
movsl
xorb
sub
icebp
or
push
lock
inc
rcrb
orb
pop
movsl
pop
ss
and
xchg
jns
outsl
push
push
push
xchg
dec
lock
ret
jne
je
push
push
mov
cld
aad
mov
mov
int
in
aas
mov
adc
cmp
mov
popa
lds
xchg
push
mov
cld
aad
ret
ja
jge
je
mov
pop
push
pushf
mov
lahf
testb
addr16
dec
rorl
lcall
outsl
cs
into
enter
inc
push
sub
xor
bnd
fdecstp
outsl
cs
lods
ret
outsb
not
mov
dec
dec
lcall
dec
aad
sbb
clc
jns
aas
aam
sub
cld
inc
mov
push
push
mov
lcall
inc
scas
das
xchg
je
jno
and
outsl
insb
cmp
call
mov
cli
add
mov
pop
aam
lret
mov
je
jns
test
mov
ss
jns
push
mov
adc
pop
mov
in
mov
mov
xor
xchg
dec
mov
pop
shrb
test
in
cs
xor
dec
jb
aad
mov
mov
shl
cwtl
xlat
add
outsb
cmpsb
stos
dec
lock
jge
scas
loop
icebp
out
pop
fildl
jno
dec
mov
xor
sbb
xchg
cmpb
std
jns
outsb
into
je
jge
cmp
push
rclb
dec
cmpsl
out
lds
outsl
es
push
pop
test
inc
orl
mov
out
xchg
inc
rcll
sarl
jns
push
mov
fidivl
outsb
pop
xor
lret
mov
repz
mov
push
je
jge
cmp
push
rclb
dec
cmpsl
out
lds
outsl
es
push
pop
test
inc
mov
orb
stc
push
cmpsl
shrl
push
mov
ret
jge
ror
jp
pop
lahf
and
repnz
add
repnz
mov
add
bound
outsl
cs
cmp
mov
aad
movsb
inc
sarb
repz
jno
leave
int
or
push
mov
xchg
sarl
fildl
push
fcomps
mov
sti
pop
fs
xchg
sub
push
aad
sub
inc
mov
pop
push
xor
cmp
and
pop
stc
jns
dec
scas
or
jle
jne
aad
add
push
sti
pop
xor
mov
pop
lock
sub
xlat
push
lods
cmp
in
add
rolb
pop
mov
lahf
pop
jle
xor
xchg
fnsave
les
jecxz
popa
adc
add
xchg
aad
icebp
xchg
movsl
push
or
pop
jbe
lahf
ss
mov
jp
mov
cmp
and
repnz
pop
jg
outsl
fistpl
push
int3
cmpsl
dec
cwtl
inc
arpl
fistps
test
movsl
sub
cli
popf
cmpsl
xor
mov
leave
lahf
rcrl
inc
in
fstpt
xlat
xchg
or
aas
adc
lods
out
popa
mov
arpl
jo
cwtl
lds
mov
jle
icebp
add
mov
ficomps
int
jnp
push
lret
cld
push
pushf
orb
and
jp
adc
loop
cld
ficompl
push
in
mov
mov
test
lahf
leave
stos
ret
xchg
hlt
or
test
mov
push
xor
int3
mov
inc
daa
adcb
xchg
xchg
push
shr
jmp
in
sub
push
fldenv
and
cmp
cmc
shl
xlat
cmp
addl
and
add
mov
sub
or
loopne
mov
pusha
out
cld
arpl
pop
or
fldcw
dec
pop
hlt
call
outsl
sub
add
lahf
fdivs
pop
or
mov
popf
insb
pushf
push
push
adc
or
lret
ficompl
mov
xlat
stc
cmpl
movsl
mov
inc
lret
cmp
notl
cmp
ss
imull
adc
pusha
and
add
stos
jns
and
jmp
cmp
daa
xchg
lahf
out
lods
dec
add
cmpsl
iret
xor
xor
es
push
add
into
push
clc
jne
pop
fsub
nop
jmp
aad
scas
xor
xor
mov
enter
aaa
pop
sub
mov
push
sub
dec
aaa
fwait
cmpsl
inc
loope
add
dec
jae
fcomps
mov
popf
inc
push
xor
in
je
jp
clc
loopne
add
ds
rorb
js
data16
pop
mov
pushf
inc
out
popa
mov
pop
push
imul
aam
fcoml
jbe
in
leave
jmp
push
push
fdivrs
pushl
push
mov
push
or
loop
adc
mov
cmp
in
stos
arpl
lret
int3
mov
repz
test
jns
in
fwait
sti
jns
sub
jns
popf
xor
call
sbb
mov
and
bound
mov
mov
mov
repz
jecxz
ss
mull
add
pop
ja
rolb
mov
fwait
pop
jno
adc
and
test
pop
fwait
jge
xchg
daa
lds
insb
xor
jecxz
popf
loop
mov
movsl
mov
xchg
ja
push
test
and
add
fstps
iret
push
arpl
push
dec
sub
pop
data16
xor
cli
lds
dec
ljmp
and
insl
pop
sub
jne
mov
xor
fbstp
mov
das
xor
sub
in
mov
fcoms
cld
cmp
stos
ja
jge
mov
dec
inc
jne
cld
test
lock
rcrl
or
xchg
popa
loopne
lcall
sti
scas
rcrl
repz
jge
divps
in
mov
push
mov
sbb
jmp
adc
sub
fcom
pop
mov
dec
jb
adcb
cmpb
sbb
mov
cmp
or
test
cld
into
push
pop
out
inc
es
dec
arpl
or
js
imul
and
inc
xchg
and
mov
mov
push
mov
mov
shl
inc
lret
inc
movsb
push
pop
xchg
ja
nop
jb
pusha
andb
xor
call
and
mov
jmp
cmc
add
and
fnstsw
imul
push
cli
mov
sub
mov
cmpb
push
daa
fucom
movsl
push
mov
push
push
and
in
in
jle
shll
outsl
mov
adc
inc
xchg
push
dec
mov
sbb
scas
xchg
push
ss
push
loope
adcb
push
pushl
mov
pop
push
out
cmp
insb
adc
or
scas
sub
sti
and
test
in
mov
sbb
mov
pop
mov
dec
addr16
dec
shlb
or
lods
test
das
mov
xor
jmp
cmp
loope
fldl
arpl
fimuls
xor
sub
pop
adc
imul
pop
jg
loop
movsl
add
adc
stc
or
push
mov
lcall
test
pop
ret
out
sub
mov
cwtl
mov
cmpsl
pop
cmpsl
mov
xlat
aaa
fwait
sub
xlat
push
xchg
mov
inc
mov
jb
add
mov
sbb
dec
pop
sbbl
pop
push
cwtl
add
xchg
das
nop
negl
bound
pushf
mov
add
push
mov
mov
fists
pop
sub
in
addr16
stos
int
mov
or
xchg
pop
repz
addb
push
les
and
mov
loop
xchg
lods
lock
sub
xor
loope
or
mov
sub
out
in
nop
leave
dec
outsl
cmp
xor
aam
xor
fsubr
cmc
cltd
iret
push
lret
xor
int3
sbb
lods
mov
sbb
insb
rcll
pop
aad
gs
leave
mov
loopne
jo
sub
fs
and
sub
and
hlt
scas
pop
mov
daa
xor
test
fldcw
insb
jmp
inc
int
sub
add
sub
dec
mov
nop
xor
fs
dec
cmc
dec
mov
shl
push
icebp
sahf
sbb
dec
xchg
cltd
and
xchg
mov
imul
enter
ret
cmp
test
mov
in
jnp
fldl
cmp
lahf
pop
dec
sbb
movsl
movsl
add
lret
jg
iret
fstl
je
jns
dec
inc
mov
scas
dec
mov
in
push
mov
pop
xchg
inc
jno
fcmovb
addr16
inc
rcll
jae
cmp
fwait
jae
fcmovu
and
movsb
unpckhps
sarl
das
mov
inc
cmp
iret
jp
pop
es
cmp
pop
lret
jmp
das
int
cmp
fildl
inc
popa
fistl
fmull
jle
pushl
pop
jne
insb
xor
bound
mov
sbb
pop
xchg
lret
fisubs
imul
popf
inc
cmova
add
xchg
fidivrs
adc
outsb
mov
sub
cmp
sbb
icebp
sub
xchg
mov
sub
stos
sbb
testl
arpl
add
test
fwait
lock
and
rol
cs
adc
adc
test
daa
cmp
push
in
dec
shr
add
dec
push
xchg
sub
xor
cmp
cmp
aas
div
push
lcall
cwtl
repnz
mov
push
inc
mov
mov
pop
add
movsl
mov
test
push
jno
mov
jo
xchg
in
pop
outsl
test
xor
fidivl
add
sahf
ja
mov
in
sbb
pop
repnz
mov
xor
or
adc
push
sahf
and
les
mov
aam
call
jp
add
push
xor
sub
xor
nop
jge
ret
inc
mov
stc
pop
in
aam
xchg
add
add
mull
xor
and
mov
jbe
jge
dec
rolb
icebp
cmp
stc
das
push
push
hlt
stc
xchg
ljmp
fs
ret
in
lahf
push
fs
and
xlat
jae
repnz
popa
mov
jbe
pop
and
push
leave
add
test
sti
add
push
or
mov
jne
mov
imul
lea
jno
inc
and
leave
insb
mov
rcll
in
dec
mov
filds
fdivl
push
dec
aas
popf
pop
push
scas
xchg
pusha
jo
les
scas
pop
pop
paddw
cmp
xor
int
test
jmp
outsl
leave
sbb
or
add
dec
fucomp
xor
in
mov
inc
mov
dec
std
in
aaa
fcmovnbe
mov
movsl
fisttpl
jo
pop
pop
pushf
sar
fsubrs
loope
fdivl
xor
in
cwtl
lahf
movsl
xchg
sub
scas
mov
fisttpll
fiadds
ljmp
xchg
cmpsl
dec
jne
incb
or
sbb
call
inc
call
hlt
movsl
cmp
inc
lret
vrcpps
imul
daa
lds
aad
stos
ds
movsl
pop
cmp
sbb
inc
cmpsl
lods
mov
scas
sub
mov
and
sti
push
bound
sub
int3
fbld
sub
and
out
leave
popf
loop
xor
insl
ja
hlt
into
xchg
ds
jle
mov
movsl
jo
or
and
mov
sub
or
jp
rolb
out
mov
imul
out
bound
or
icebp
jbe
inc
in
mov
and
push
dec
lret
sbb
push
add
arpl
and
xor
cmp
cmc
dec
negb
lods
ds
or
xor
adc
fcoml
xchg
outsb
sti
xchg
cmp
stos
sub
sub
push
pop
arpl
adc
icebp
iret
scas
cmp
insb
adc
or
jecxz
loop
jae
and
rclb
mov
imul
xchg
and
mov
in
push
lods
imulb
jmp
or
mov
add
push
sti
repz
andl
xor
cmpsl
push
fwait
adc
sub
clc
addb
pcmpgtd
and
shll
mov
xor
lock
pop
and
adc
mov
mov
int
cld
call
flds
decl
adc
jno
sti
data16
mov
test
or
jge
lods
repnz
loopne
and
sbb
mov
and
mov
hlt
jp
push
fnstenv
cmpsl
movsb
rclb
cmp
or
push
lret
test
out
pop
jns
dec
repz
scas
insb
insb
dec
stos
add
cmpsl
mov
jle
push
push
xchg
jo
nop
adc
sbb
xchg
loop
cltd
leave
out
and
inc
lds
call
mov
push
jb
negb
lods
cmpsl
pop
ret
rclb
test
fldenv
inc
outsb
xor
das
in
mov
inc
jae
int3
mov
add
push
add
inc
dec
cmp
test
cmp
jae
cwtl
call
inc
out
cmp
les
outsb
jae
pop
jg
pop
pop
jl
inc
fiadds
stc
push
inc
xlat
add
inc
aad
xor
sub
rcrl
push
in
insb
in
sar
add
dec
movsl
lock
fistpl
fsubs
fildl
loopne
mov
xchg
mov
mul
push
test
mov
xchg
int
lds
dec
mov
xchg
fcmovbe
sbb
lret
xchg
jo
icebp
fsts
dec
rcrb
adc
mov
lahf
stos
mov
add
aaa
or
or
jo
pop
jmp
cmp
mov
mov
cmp
pop
push
lret
jae
sub
cmpsb
js
out
adc
xchg
and
je
xor
sbb
mov
adc
lahf
xor
je
sbb
sub
pop
jbe
push
hlt
pusha
fidivl
adc
aad
jnp
lods
loopne
gs
dec
mov
repnz
jl
enter
mov
fs
push
int3
je
lods
loop
or
or
pusha
inc
add
pop
jno
cwtl
scas
in
in
dec
xor
mov
repz
push
shlb
imul
mov
inc
ret
mov
imul
mov
push
add
dec
inc
pusha
jle
jne
push
dec
cltd
lock
jbe
mov
int3
enter
mov
lea
and
call
lret
sarl
ret
in
mov
clc
inc
or
icebp
in
push
test
xchg
imul
mov
popf
popa
dec
outsl
pop
loop
cs
adc
out
inc
mov
xchg
pop
dec
xchg
mov
repz
sbb
jo
xbegin
fstps
repz
mov
lcall
orl
add
stc
imul
sbb
leave
rolb
inc
add
sub
or
mov
lcall
xchg
clc
aaa
xchg
xorb
sbb
sbb
mov
fisttps
dec
repnz
ds
stos
pusha
test
cwtl
dec
cmc
js
das
pushf
int3
push
xor
sub
ret
or
ftst
push
loope
jns
or
inc
testl
nop
mov
xchg
cmpl
jge
push
jae
jbe
arpl
jae
mov
and
in
ja
cld
rcrb
ret
adc
mov
dec
shlb
aam
mov
movsl
cs
popa
or
aam
in
out
add
in
es
inc
and
jbe
mov
xor
arpl
test
xor
push
or
inc
pop
xor
jo
push
sub
subl
cs
dec
dec
mov
rclb
xchg
inc
shl
out
or
xchg
movsl
xchg
mov
inc
mov
inc
push
xor
loop
pop
aas
mov
jl
mov
ror
sub
sti
mov
das
mov
adc
into
inc
insb
mov
pop
cwtl
scas
pop
scas
std
imul
adc
test
orb
pushf
ret
xor
or
adc
add
inc
add
push
and
xchg
xor
and
mov
jle
push
arpl
adc
lahf
mov
adc
push
repnz
push
mov
incb
adc
scas
jle
push
sub
and
cwtl
sub
sahf
jmp
movsb
sbb
sbb
lret
sbb
lcall
mov
mulb
mov
sahf
xchg
cmp
dec
lods
loop
push
push
je
add
fidivs
stos
idivb
pop
jg
mov
and
sub
shl
roll
pop
jns
or
push
aad
cmp
lods
jno
icebp
sbbl
cld
mov
mov
repz
xor
jo
add
repz
scas
aas
mov
cmp
in
fldenv
ret
pop
mov
mov
inc
pop
lock
mov
imul
xchg
jo
pop
cmp
and
mov
mov
xchg
jae
mov
js
ss
aas
int
and
mov
test
les
std
mov
ret
push
mov
jecxz
sub
leave
add
adc
pop
aad
jle
mov
push
mov
push
cmp
test
xor
popa
inc
sub
mov
add
bound
ret
mov
sbb
fwait
int3
sahf
lret
jl
ss
ret
inc
xor
xchg
jnp
aad
cli
mov
addr16
fcoml
lahf
pop
movsb
mov
push
push
adc
sbb
cli
dec
das
fcmovb
jno
cmc
stc
sbb
shrb
ret
sub
mov
rcll
xchg
push
cmp
sub
adc
lods
and
xchg
nop
cmp
or
in
sar
orb
mov
sbb
jmp
jg
xor
jg
out
inc
mov
dec
jg
int3
outsl
jp
outsb
xchg
out
inc
mov
daa
or
inc
lcall
imul
out
inc
lods
dec
jae
and
inc
stos
lea
dec
adc
add
stos
push
cmp
int
insb
mov
xchg
sar
mull
in
or
pusha
push
pop
mov
push
std
push
sbbl
outsb
ss
out
mov
adc
push
sti
stos
les
inc
add
ror
jbe
xchg
or
mov
pop
icebp
test
mov
lds
sarb
fisubrl
nop
pop
pop
xchg
out
sbb
jp
int
dec
fcmovnu
inc
dec
dec
imul
popa
es
cmp
jno
xchg
shlb
stos
pop
adc
pop
jmp
lret
das
xchg
jnp
das
iret
ret
xorl
in
or
and
xor
insl
stos
sti
je
into
sbb
xor
jmp
sbb
xchg
inc
pop
dec
mov
es
xor
pop
xchg
ret
mov
jno
lret
cmpps
ret
bound
in
int
outsl
stos
push
insl
mov
adc
cltd
mov
cmp
mov
gs
cmpsb
and
lret
loop
xor
fstpt
jbe
mov
mov
push
ljmp
std
data16
ja
xchg
lea
inc
je
jge
int
xchg
mov
xlat
xchg
iret
adc
arpl
hlt
scas
popf
insl
jge
scas
cmpl
sbb
aam
mov
xchg
shrb
pop
aam
pop
dec
popa
scas
sti
imulb
pop
test
subl
shll
lds
scas
ss
out
adc
repnz
fstps
cwtl
inc
testl
xor
xchg
dec
push
mov
jecxz
mov
repnz
fistps
adc
push
and
sbb
mov
jl
xchg
rol
lahf
imul
mov
mov
xor
fwait
ja
adc
ret
mov
cs
jg
sub
cld
inc
das
or
idivb
fidivs
or
mov
dec
cs
pop
jnp
push
outsb
sbb
inc
or
sbb
ja
sub
mov
mov
imul
mov
mov
dec
or
pop
test
outsl
clc
subl
into
addb
mov
xchg
inc
fcmovu
or
mov
daa
inc
xor
lea
fmulp
out
push
inc
out
loop
push
inc
stc
daa
cmc
mov
in
cwtl
jb
mov
outsl
or
push
jmp
mov
ffreep
lock
movsl
insb
sbb
mov
icebp
mov
popf
mov
push
lahf
stos
dec
sbb
cltd
dec
inc
dec
fists
leave
popf
js
js
push
mov
or
sub
or
sbb
jb
nop
ret
aas
js
popa
lock
push
mov
adc
ds
jne
jp
or
add
testb
or
dec
push
dec
mov
and
int3
jmp
or
ljmp
or
mov
lahf
rolb
add
rcr
icebp
lods
in
hlt
rclb
jno
push
mov
aaa
mov
or
mov
mov
test
iret
push
mov
add
add
movsl
xchg
adc
fwait
sahf
ljmp
ror
stos
xchg
mov
into
add
arpl
jl
and
mov
divl
out
arpl
jnp
call
inc
push
dec
test
dec
mov
mov
or
jecxz,pt
arpl
out
daa
dec
jecxz
notb
notb
push
jb
shr
dec
sbb
outsb
loope
cmp
jge
out
popf
shl
imul
ret
push
cmp
xor
mov
pop
out
cld
sbb
and
fnstenv
pop
cmp
lock
inc
addl
inc
scas
add
daa
decb
lods
push
adc
test
addb
jnp
negb
in
mov
data16
lods
sbb
dec
clc
shlb
aad
cmc
inc
enter
aad
fcom
lret
jbe
sbb
mov
and
pop
iret
xchg
rcl
in
push
pop
ret
mov
and
shlb
mov
jecxz
and
lds
xor
clc
mov
and
bound
clc
fnstsw
push
mov
daa
add
sbb
jle
mov
dec
cmp
test
xor
sub
add
enter
mov
int
out
add
pop
add
cmp
ljmp
cs
leave
sub
das
xchg
xor
mov
pop
pop
clc
adc
cmc
popf
std
xor
hlt
pushf
jne
lea
push
fimuls
aaa
pop
shlb
push
or
mov
cltd
and
add
addr16
daa
stos
cwtl
or
jne
enter
and
jle
xor
imul
jno
mov
push
push
cmp
out
jbe
fisubrs
jp
cltd
pop
movsl
mov
hlt
cmc
add
mov
mov
lods
mov
sahf
sub
push
shrb
sub
inc
push
lods
mov
js
inc
and
pop
jecxz
mov
iret
imul
scas
int3
loop
pop
repz
jb
cwtl
scas
aaa
jae
hlt
xor
pop
pusha
cmpsb
popf
pop
stos
adc
xor
ljmp
xor
dec
mov
xchg
xchg
push
repnz
int3
scas
push
adc
mov
andb
sub
test
pop
mov
scas
dec
jmp
mov
sub
stc
mov
sub
xchg
pop
add
mov
out
rclb
mov
push
lcall
movb
pop
cwtl
jb
push
cwtl
out
inc
sbb
push
xchg
jp
pop
iret
xlat
shll
shrl
push
ss
lock
sbb
adc
dec
push
cmpsl
fimull
dec
mov
les
cs
fiadds
in
mov
into
jnp
mull
sbb
cmpsb
into
sbb
mov
insb
aad
shlb
pusha
int3
and
inc
mov
movsl
mov
outsb
push
mov
ja
into
dec
out
pop
jge
xor
ret
mov
or
push
sbb
xchg
test
jl
icebp
and
push
xchg
jns
out
mov
sbb
sub
cwtl
insb
mov
pop
dec
andl
pop
into
cmp
aas
rorb
pop
push
sbb
inc
fidivs
inc
jne
inc
cltd
inc
xchg
lret
sub
fcmovbe
in
pop
add
jne
inc
insl
add
push
stc
xchg
sub
sti
cltd
mov
adc
jb
pop
mov
xchg
jbe
int3
ret
ljmp
ja
outsl
fs
jecxz
and
or
fbstp
fcmovnu
jo
dec
call
jbe
pop
xchg
stos
fdivp
jb
cmp
lock
sub
pop
pop
cmp
push
iret
mov
adc
mov
es
shll
rcrl
mov
movsl
mov
sbb
outsb
cmp
loop
push
mov
sahf
add
push
jae
dec
and
add
cmp
into
mov
inc
cld
fcoms
sbb
or
test
icebp
int3
inc
loopne
sbb
push
mov
pop
jb
or
jne
lea
push
insl
test
cmp
in
jp
test
sub
sbb
xor
cmc
mov
loopne
pushf
and
jecxz
nop
cmpsb
inc
test
and
outsl
mov
push
jp
xchg
fsub
pop
push
xor
popf
nop
dec
rorl
stos
xor
mov
scas
hlt
fidivrl
scas
jmp
jmp
jecxz
pushf
rol
pop
sar
gs
test
lea
pop
jb
dec
test
xchg
imul
jb
repnz
sbb
push
xor
roll
in
sbb
pop
out
sub
mov
nop
add
inc
adc
pop
jge
adc
cmp
push
cmp
push
push
mov
shrb
cmpsl
stc
inc
adc
hlt
aas
testb
xor
or
pop
loopne
mov
jo
mov
cmp
mov
push
fildll
pop
sub
iret
mov
jmp
popa
and
xchg
fisttpl
sub
pusha
inc
andl
add
push
cwtl
pop
inc
pushf
sbb
lods
mov
sahf
and
jmp
lret
shll
data16
mov
insl
cs
add
and
mov
addl
cmp
and
inc
add
out
shrb
pop
test
arpl
cmp
lret
imul
cmp
stos
gs
adc
inc
repnz
insl
or
inc
and
cmp
dec
pop
jecxz
popa
ja
clc
fnstcw
sbb
cltd
mov
mov
add
inc
into
xchg
pop
shll
adc
lock
popf
cmp
call
leave
adc
addl
imul
push
jle
outsl
ds
push
jnp
sbb
in
adc
mov
mulb
pop
repz
int3
js
subb
outsl
shlb
scas
pop
push
scas
jmp
mov
fisttpl
in
xchg
lock
jne
popa
adc
outsl
push
test
fstpl
jg
cmpsl
fistps
xchg
mov
inc
mov
mov
movsl
mov
push
iret
mov
movsb
mov
iret
jns
push
mov
sbb
xchg
stos
sbb
jge
pop
call
mov
add
cmp
mov
push
fwait
nop
out
jns
dec
std
js
insb
rolb
cltd
aad
out
test
cmp
xor
fsubs
push
ljmp
jns
mov
and
add
jo
mov
imul
ret
rcrb
bound
sbb
shrl
jmp
xor
test
cmc
inc
call
inc
repz
dec
cmp
call
ds
fcomp
fisttps
xor
les
sub
jbe
iret
lods
mov
xchg
out
fdiv
cmp
loop
jnp
sbb
mov
cmp
or
push
mov
dec
add
inc
repnz
daa
pop
insl
pop
test
subl
lret
mov
push
xchg
cld
daa
push
xchg
aam
and
data16
mov
xor
mov
std
mov
enter
les
cmp
andb
mov
xchg
lock
and
icebp
aas
cmc
data16
je
mov
mov
popa
cld
arpl
fidivrl
cld
lock
jmp
lcall
repnz
adc
adc
mov
xlat
xchg
add
in
jecxz
arpl
das
clc
sbb
add
sbbl
fstpt
push
mov
fisubrs
xor
je
pop
dec
mov
jae
out
cmp
sbb
sub
pop
adc
and
das
movsl
scas
hlt
jno
or
mov
sub
mov
pushf
xchg
mov
pusha
mov
add
aad
pushf
or
negl
push
repz
scas
mov
jae
pop
ljmp
fs
push
stc
stos
bound
inc
xor
nop
enter
inc
fwait
std
in
push
filds
or
pop
adc
outsb
jne
xchg
mov
sub
inc
push
cmp
xchg
insb
adc
fcmovne
imul
dec
in
sahf
dec
subps
ja
pushf
pop
cmp
jno
add
js
push
push
repnz
cmc
add
aam
in
jp
xor
lcall
inc
es
lret
dec
and
jmp
jmp
minps
stos
bound
shll
inc
add
popf
into
xor
lods
dec
sbb
inc
dec
sbb
mov
mov
push
out
push
bound
mov
mov
push
or
push
mov
push
lea
dec
out
cltd
add
or
adc
pop
daa
push
lods
push
test
jecxz
rcr
ds
cli
mov
xchg
loope
and
pop
pop
pop
cmc
fcmovnbe
adc
dec
cmc
mov
movsl
xor
call
ljmp
stos
add
jmp
mov
movsl
clc
jg
xor
jmp
stos
gs
dec
push
int
adc
ret
in
cmp
cmc
sbb
mov
add
cmp
or
dec
xor
add
fldt
and
in
lea
xchg
fidivl
mov
shll
and
stos
arpl
jmp
cmp
in
push
jge
int3
cmpsl
shl
mov
mov
add
and
nop
mov
jo
mov
stc
inc
sbb
cmp
leave
imul
inc
ret
out
mov
push
inc
push
add
push
lea
dec
jg
sbb
imul
add
push
adc
insl
stos
sub
mov
inc
jno
pop
inc
mov
data16
mov
adc
cmpsb
or
pop
mov
out
fs
dec
sarb
sbb
inc
xchg
dec
sahf
xchg
repz
shll
jmp
and
and
inc
jmp
fldcw
xor
loop
xchg
scas
movb
jecxz
popa
div
mov
xor
mov
jg
mov
mov
adc
outsb
popa
shr
call
stos
test
lret
mov
inc
cmpl
test
mov
scas
jle
scas
popl
pop
push
mov
popa
mov
hlt
inc
outsb
add
insb
jmp
cmp
aaa
jns
pop
pushl
loope
fidivl
das
mov
stc
xor
xchg
mov
push
add
xorl
inc
xorb
cltd
push
xor
or
adc
push
jo
sti
data16
xor
jmp
inc
insb
pop
cmp
inc
clc
ljmp
cmp
testb
dec
jle
nop
xchg
and
ljmp
cmp
addr16
xor
pop
inc
lret
fwait
das
pop
in
aad
aam
rcll
sbb
xor
mov
push
xchg
aas
ds
add
out
fwait
roll
pop
cmp
insb
xchg
es
jge
xchg
rolb
push
out
popa
sbb
sarb
or
mov
mov
pop
xor
lahf
jns
jl
jle
lods
sahf
lcall
dec
out
in
cmpsl
fidivl
xchg
in
outsb
pop
dec
mov
lahf
mov
aad
loope
adc
rcr
jno
mov
les
mov
mov
psubb
dec
ss
adc
adc
mov
hlt
les
jl
ret
test
jnp
popf
shr
out
fst
scas
fmulp
addb
mov
loope
cld
jp
mov
mov
out
pop
mov
test
ljmp
mov
sti
lcall
in
xchg
nop
repz
or
popf
pop
fdivrs
stc
mov
jl
out
imul
in
pop
ret
addr16
mov
mov
cwtl
sbb
adc
iret
pop
fcmovu
je
repz
xor
lahf
jb
add
std
stos
ja
xchg
push
jmp
or
out
sbb
shrb
in
test
out
push
loope
negb
and
ret
xchg
jge
cltd
divl
dec
push
lock
sub
lea
ja
and
cmc
pop
mov
push
jecxz
sub
inc
inc
repz
aad
stc
outsb
sub
jecxz
loope
fsts
js
rcrl
pop
sbbb
ja
mov
mov
lahf
nop
xor
xor
cmp
sbb
or
sub
adc
mov
cmp
je
ja
rcrl
mov
lret
sub
aas
cwtl
mov
push
clc
add
xchg
cmc
jb
in
push
fiadds
xchg
in
cmc
je
sbb
mov
sub
or
decb
push
push
int3
fldl
xchg
adc
jp
das
faddp
loopne
add
jp
int3
push
hlt
aaa
jl
mov
hlt
mov
pop
mov
repnz
mov
popf
sarl
jb
sbb
andl
lcall
adc
sbb
lods
or
adc
or
fwait
cmpb
leave
xor
xor
pop
cmp
fistl
sub
clc
ret
jne
sahf
and
jle
data16
test
lds
xchg
enter
push
xchg
xor
xorl
subb
mov
js
sub
or
xor
inc
sbb
dec
in
cmp
out
leave
rep
sbb
in
xchg
int3
xor
jne
mov
jl
lods
aam
shlb
cmc
jp
lods
daa
jo
rcpps
iret
cld
nop
jbe
cmp
bound
scas
jmp
and
xchg
jne
lcall
mov
outsl
insb
push
lea
cmp
icebp
pop
cmp
popf
divl
lock
mov
out
testl
test
ljmp
xchg
and
mov
arpl
cmovno
pusha
add
mov
xchg
aas
add
in
popf
jb
add
jp
lods
pusha
jns
fstps
mov
pmuludq
pop
jne
pusha
inc
ficoml
lds
inc
test
or
pop
cltd
fcomip
fucomi
xchg
pop
inc
xchg
sub
dec
into
and
cmp
adc
cmp
pusha
std
mov
jb
stc
add
in
scas
mov
out
aas
and
push
pop
add
iret
xchg
jl
ret
outsl
daa
jbe
daa
lods
sarl
sub
xchg
imul
mov
lret
dec
rolb
sarb
aam
inc
jg
aaa
adc
jb
testl
add
in
scas
mov
xchg
outsl
clc
mov
rcll
fisubrs
and
pop
jnp
or
jno
enter
loopne
pop
jae
inc
dec
add
std
mov
mov
mov
rcrb
cli
cltd
inc
and
je
cmpl
hlt
adc
jl
cmpsb
out
hlt
xchg
outsb
cld
dec
xchg
loopne
andl
mov
repz
xor
push
dec
std
push
shll
mov
cwtl
add
pop
xlat
sti
fmulp
and
lret
pushf
or
test
mov
push
ret
jg
xchg
pop
sub
shrb
insb
jae
mov
sub
lahf
mov
sbb
sub
cwtl
pop
ret
lock
add
jbe
std
loop
in
push
pop
cmp
lret
add
loope
and
jne
adc
lcall
push
into
cs
pop
ds
pushl
jbe
xor
into
push
and
ret
xor
call
shr
lods
pop
xlat
es
pushf
mov
push
push
xor
iret
xchg
test
sbbl
pushf
data16
push
rcll
xor
pop
mov
imul
jne
sub
cld
movsl
pop
ljmp
inc
out
bound
das
cld
dec
push
pop
out
inc
jne
ret
or
lahf
int3
pop
mov
pop
imul
sbb
out
mov
int
sub
pop
hlt
cmp
icebp
jnp
add
movsb
jmp
ret
jecxz
aaa
cwtl
out
xchg
fcomp
test
or
aad
mov
int
xor
idivb
sbb
cmp
mov
inc
xchg
mov
fnstsw
ds
decl
in
ss
cmp
xchg
add
sbb
cld
inc
jge
pop
adc
dec
jnp
clc
cltd
loop
xchg
push
add
mov
addr16
clc
dec
dec
test
rorb
pop
loope
inc
inc
daa
push
mov
mov
adc
test
movsb
xchg
add
lret
scas
push
jbe
or
pop
add
int
hlt
ja
lods
or
sub
repz
mov
cmp
push
cmpsl
jl
push
cmc
dec
and
or
das
inc
xorl
mov
push
iret
mov
shrb
mov
sbb
xchg
idivb
je
add
push
push
int3
mov
cmp
add
cld
mov
inc
mov
ss
jbe
or
insb
sub
lods
dec
loopne
push
add
fwait
add
repz
fcoml
jp
movsl
xchg
lods
pop
in
movsb
pop
dec
gs
sbb
jne
aas
ss
out
ss
dec
dec
jmp
movsl
das
imulb
jbe
dec
xor
stos
dec
lods
sbb
push
jl
adc
loopne
fs
mov
mov
xchg
xor
cmp
mov
mov
in
movsb
sub
stc
int3
xor
xchg
or
xchg
stos
shlb
sbb
int
andl
lahf
mov
push
jmp
jg
mov
test
or
push
lcall
pushf
fst
and
movsb
ret
adc
insl
mov
and
jecxz
fsubrl
stos
adc
loop
mov
aaa
add
daa
and
ljmp
scas
into
jbe
inc
inc
add
mull
sahf
nop
int3
jns
icebp
js
adc
adc
sbb
sbbb
or
in
loopne
lods
pop
sbb
adc
sub
mov
inc
fcomps
lock
lret
lods
xor
cmp
sub
mov
js
inc
cmp
xchg
pop
fdivl
mov
mov
jl
hlt
data16
mov
sub
or
loope
sysexit
loop
std
cmpsl
iret
hlt
mov
sbb
nop
sarb
inc
movsb
loopne
dec
inc
or
lods
dec
jl
lret
add
jmp
mov
mov
mov
add
inc
or
fidivl
push
mov
sub
arpl
cs
gs
sbb
xchg
ja
ljmp
sbb
rsm
sbb
arpl
push
mov
xor
sbb
ret
xchg
sbb
insb
mov
nop
aam
stos
xchg
jecxz
push
xchg
cmp
push
es
scas
fstl
daa
and
and
cmpsw
fwait
inc
movaps
iret
aam
scas
outsl
sbb
icebp
call
push
sbb
pusha
cmp
movsl
jnp
cmpb
lds
inc
iret
inc
xchg
pop
cmc
arpl
insb
cltd
repnz
jb
aaa
popa
arpl
or
imul
sbbb
mov
adc
cmpsb
pop
jne
push
pop
clc
mov
out
xor
adc
ficoms
rclb
repz
loop
mov
rclb
pop
or
cmp
cmp
xchg
mov
out
mov
aam
xor
arpl
cmp
push
xchg
or
xor
cmpsb
ja
or
sub
ds
icebp
sar
into
in
fwait
cmp
test
aas
in
push
inc
repnz
pop
push
popa
enter
sub
and
loopne
pop
fsubrl
inc
mov
sti
into
gs
jp
mov
outsb
rcl
xor
fcoml
adc
arpl
jmp
in
jg
pushf
lods
and
int3
lods
pusha
test
inc
repnz
or
sub
imul
mov
into
lea
mov
iret
xor
test
xor
stc
scas
jl
adc
mov
into
test
push
push
pop
mov
repz
and
out
and
fisubl
in
push
imulb
jmp
cwtl
enter
xchg
inc
jns
or
pop
aas
sbb
mov
pop
sub
mov
int3
add
cmp
fucomp
jo
mov
lret
outsw
mov
int3
mov
jae
pushf
fbstp
fistpl
testl
inc
xor
imul
mov
mov
lea
rcll
in
stos
inc
notl
out
mov
icebp
mov
inc
rorb
or
mov
jle
jae
mov
int3
inc
outsl
jno
repz
dec
push
mov
leave
add
mov
or
filds
cmp
mov
shrb
arpl
fldl
addr16
scas
jmp
sub
stos
cmp
loopne
pop
leave
dec
mov
push
pushf
stos
push
jp
pop
and
imul
aam
pop
out
cmp
mov
test
jno
xor
ds
dec
pusha
cltd
shll
mov
push
or
iret
xor
bound
pop
mov
in
bound
or
js
sbb
and
out
mov
insb
movswl
iret
into
out
push
adc
push
add
or
add
inc
cmp
jnp
jmp
addr16
loope
ficoms
lods
popf
jmp
ret
mov
into
lods
cmc
fisttps
and
jno
xchg
xchg
lock
jle
and
scas
dec
xor
in
or
mov
rcrl
add
stos
sbb
stc
cld
xor
mov
push
scas
fs
xchg
adc
xlat
icebp
enter
pop
aas
je
xor
mov
sbb
int3
mov
movsl
fsubrs
dec
icebp
test
popa
add
aaa
inc
ret
adc
testb
dec
sub
mov
or
int
leave
xchg
or
mov
inc
cmp
sub
setp
pop
jb
dec
dec
mov
clc
sahf
mov
int
add
pop
jns
mov
arpl
xor
cmp
icebp
cmpsb
adc
popa
jns
mov
xor
rorb
mov
xchg
imul
sbb
cmc
push
xchg
pushf
push
test
adc
dec
cmpsl
sbb
mov
jo
rclb
ret
mov
in
add
ss
dec
pusha
clc
out
scas
sahf
or
inc
and
sbb
call
add
daa
mov
jns
repnz
inc
jne
arpl
shrb
addr16
push
jmp
cmc
push
fldenv
mov
cmc
sahf
mov
inc
sti
add
or
outsb
jl
scas
add
pusha
mov
mov
push
jge
mov
in
mov
cmpsl
arpl
mov
ds
aas
js
sub
out
xchg
test
jecxz
mov
xchg
mov
pop
shll
fwait
rolb
insl
jns
dec
xor
fwait
pop
sub
ret
aaa
mov
aas
mov
dec
sahf
cmc
xchg
movsl
ret
cwtl
sbb
aam
push
pop
insl
mov
cmpl
adc
add
inc
add
inc
push
daa
vmread
and
sub
mov
adc
or
gs
cld
sub
addr16
xor
or
in
cwtl
mov
std
pushf
or
sar
or
dec
dec
mov
xchg
cmp
mov
out
ja
test
cmp
adc
addr16
sbb
push
jp
ret
popa
pusha
sub
or
popf
or
fisubrs
jne
sbbb
out
add
arpl
cmpsl
adc
and
jle
push
arpl
outsl
adc
mov
push
dec
jl
in
cli
popf
mov
mov
and
ret
iret
mov
xor
lods
or
popa
sbb
out
adc
push
test
sub
negl
mov
cmpsb
mov
or
jns
cwtl
sbb
jmp
adc
test
mov
cmp
mov
dec
or
cmp
lcall
pop
mov
adc
repz
stos
enter
lock
pop
sub
popa
movsl
xor
mov
jle
stos
cli
push
mov
lret
mov
sti
mov
cmc
inc
inc
lcall
lods
or
pop
cmpsl
filds
push
out
test
jg
outsl
mov
stos
sub
fcomp
mov
cmp
push
pop
loopne
incl
mov
pop
xor
aas
dec
add
fs
idivb
dec
lret
insb
test
jl
stos
clc
pushf
gs
ss
dec
pop
aas
test
sub
pop
int
cli
or
adc
jne
push
aaa
inc
xor
pusha
xchg
ss
sti
ljmp
jb
jae
daa
sub
dec
adc
xchg
into
dec
pop
xor
arpl
mov
mov
adc
inc
push
clc
movsb
mov
mov
fs
leave
loopne
loop
daa
adc
scas
cs
test
inc
imul
sbb
xchg
js
cmpsl
ds
and
mov
xlat
iret
dec
sbb
mov
loop
ret
lea
leave
in
mov
int3
sbb
addr16
ss
or
int3
mov
add
pop
mov
mov
mov
mov
xor
xor
mov
loope
mov
pop
sub
dec
jg
enter
rclb
rcrl
add
jmp
inc
enter
jno
sbb
loop
arpl
out
xchg
jg
ljmp
shrb
jmp
call
sbb
js
add
test
nop
and
cwtl
imul
sbb
jle
inc
push
loopne
sbb
jo
leave
lsl
sbb
pop
mov
in
insb
mov
pop
stos
cs
and
nop
or
jl
loope
mov
push
orl
cmp
test
mov
pop
inc
or
push
test
sub
loop
je
jne
cmc
rorb
scas
push
pusha
fisttpll
jge
push
sub
leave
or
mov
cmp
dec
lock
pop
inc
push
int
les
out
insb
sbb
or
out
dec
loope
inc
sub
cmp
fstp
stos
fadds
xor
push
push
clc
push
test
pushf
adc
cmpsb
fwait
push
add
stc
icebp
adc
ja
cli
push
movsb
mov
mov
mov
outsl
xor
hlt
inc
dec
cmp
ret
push
sbbl
pop
aad
push
jae
mov
shrl
xor
and
dec
push
jae
loop
imul
shll
sbb
xlat
xchg
data16
pop
cmpsl
int3
push
pop
and
fnstsw
inc
sbb
test
adc
js
sbb
fs
lea
pop
mov
fidivrs
add
fsts
test
inc
xor
cwtl
or
mov
xor
mov
and
lret
fstl
xchg
dec
push
xchg
mov
push
sbb
dec
sub
sub
sbb
fwait
addr16
insl
lock
mov
jg
xchg
iret
js
mov
into
sub
jbe
mov
les
lahf
jp
sbb
jno
lret
pop
adc
cmp
ljmp
call
cwtl
dec
lds
xchg
pop
push
cltd
in
xlat
fdivrs
divb
pusha
push
fisubrl
ds
lcall
jne
test
jmp
inc
mov
pop
sarl
push
jns
addr16
dec
push
dec
cmp
lcall
fdivrl
pusha
pushf
call
popf
add
mov
pop
ljmp
xchg
ficoms
or
jmp
rcrl
movsb
imul
out
inc
lock
ljmp
mov
orb
pusha
xchg
bound
inc
std
fs
and
cmp
aad
or
clc
mov
popf
mov
cmpsl
or
jno
jo
fnsetpm(287
fcompl
lret
fisubl
inc
fmuls
sub
fs
sbb
fwait
mov
imul
cmp
xchg
sahf
aam
mov
hlt
loope
sbb
popa
jge
arpl
push
addr16
daa
inc
or
add
mov
mov
jno
xlat
inc
and
xchg
scas
add
cmp
repz
mov
pop
sub
dec
sub
inc
out
mov
cmp
insb
pop
aad
std
and
ljmp
jo
popa
push
adc
adc
cmp
stos
mov
in
sub
jns
xorb
push
subl
xchg
inc
testl
lods
jbe
mov
stos
xchg
sbb
popf
das
add
or
inc
and
mov
dec
stc
ds
mov
ret
lds
mov
sub
bound
xlat
dec
ret
push
outsb
jp
sti
inc
lcall
jae
movsl
and
push
sub
leave
xchg
and
xchg
test
lock
lds
outsb
jle
xchg
mov
lds
xchg
xchg
push
inc
mov
lret
push
nop
pop
pusha
lods
adc
xlat
loop
in
push
aad
add
stc
pop
xchg
inc
jp
jae
mov
jmp
cmc
xchg
loopne
push
mov
jg
std
jo
xlat
dec
or
jg
or
or
test
dec
pop
fs
jmp
subb
lahf
shlb
addr16
and
mov
mov
mov
pop
xchg
insb
add
dec
movntq
shll
push
pop
add
out
out
out
roll
mov
ret
xor
lods
fidivl
std
sbb
xchg
negb
push
js
adc
lret
cld
popa
adc
add
aad
fcompl
or
xor
and
insl
dec
mov
imull
adc
xor
fisttpll
mov
sbb
test
add
add
xchg
dec
repnz
test
subb
or
gs
jmp
mov
popf
in
cli
cmp
dec
pusha
dec
popa
jp
test
loope
pushf
aas
imul
cltd
xchg
mov
push
adc
push
gs
rcll
mov
add
or
scas
add
push
inc
jns
and
fildl
push
jae
adc
int
jl
in
mov
sarb
repz
sub
addl
sub
fcompl
mov
test
mov
popa
mov
pop
sub
sub
jno
and
mov
or
movsl
cld
imul
loopne
aad
sahf
es
mov
cmp
fsubl
insb
inc
popf
in
repnz
and
xlat
adc
fdivp
dec
mov
mov
mov
jecxz
stos
scas
inc
lret
scas
into
push
dec
cli
rorl
cmc
cmc
sub
and
pop
mov
jg
faddl
cltd
dec
pop
loop
popf
dec
aad
fidivs
push
xchg
fisubl
sub
cmovg
mov
pop
in
or
hlt
lods
inc
push
push
or
and
mov
fsubl
div
pop
push
and
icebp
dec
stos
pop
daa
cmc
pop
mov
cmp
xor
hlt
inc
mov
scas
cs
cld
popf
cmp
pop
jle
lods
jl
addl
dec
int
dec
xor
mov
idivl
and
cmp
mov
idiv
jae
add
stos
rolb
mov
icebp
mov
push
inc
pop
iret
cltd
pop
test
imul
push
fldcw
cmpsb
sub
outsb
lcall
pop
xor
add
jg
movsb
push
cmp
cmp
adc
jb
adc
cmp
mov
pop
aaa
jae
lcall
arpl
mov
add
pop
sti
in
pop
lret
mov
aad
mov
cmc
jp
sbb
nop
pusha
addr16
lds
nop
or
jg
sub
jnp
or
cmp
xchg
aaa
lds
xor
repnz
push
xchg
cs
xchg
movsb
sahf
jo
ljmp
push
les
mov
in
insb
inc
popf
out
idivl
sbb
jno
mov
add
pop
xchg
out
call
mov
or
int3
pcmpgtd
daa
sahf
sbbb
jo
pop
dec
iret
xchg
pop
mov
add
popa
sbb
andb
mov
inc
inc
sub
xor
xor
lock
push
stc
mov
mov
test
daa
test
sbbb
jnp
xor
push
sub
cld
mov
sahf
outsl
pop
repnz
stc
loope
dec
cmp
sub
rclb
dec
jb
xchg
enter
sbb
mov
cwtl
nop
mov
sub
fwait
ret
fcmovnb
pushf
cmp
mov
mov
push
xchg
imul
mov
pusha
pushf
outsl
or
sub
push
xchg
mov
lds
aad
xchg
fcos
dec
pop
push
mov
push
xchg
sti
jp
movsl
fimuls
or
push
call
jae
arpl
nop
add
scas
cmp
xchg
push
inc
fildll
adc
aad
ljmp
jge
mov
cs
fstl
shrl
push
cmc
jge
xchg
in
adc
and
sub
imul
push
mov
or
jns
mov
in
cmpsb
mov
jne
xor
mov
sahf
push
fbld
in
into
sub
xchg
xor
in
sbb
mov
lahf
xor
addl
jnp
jmp
shrb
pop
ljmp
cld
push
cmpsl
das
out
outsb
pop
xor
hlt
stos
sub
adc
incl
mov
pop
sbb
sub
arpl
fistpl
push
add
lea
orb
stos
ss
int3
ret
xlat
ficomps
outsb
inc
push
lahf
mov
fisttps
mov
in
xchg
adc
inc
aas
or
mov
out
jmp
dec
pusha
cwtl
mov
ljmp
jns
sub
int
mov
xchg
adc
cmpsl
stc
mov
mov
pop
jmp
mov
xorl
loop
mov
out
jno
in
and
adc
test
cmpsl
bound
mov
push
jns
cmpsl
test
lcall
adc
test
sub
test
xchg
pop
xchg
mov
mov
inc
adcb
sbbl
push
cmp
mov
cli
xchg
rcr
cmpl
xchg
push
imul
pop
lret
or
imul
loopne
jo
jg
inc
xor
leave
cld
dec
xchg
adc
add
push
dec
idivb
int3
aam
sbb
in
gs
ds
pop
jb
mov
push
push
pop
xor
sahf
fdivr
es
mov
dec
mov
or
lea
mov
test
push
mov
jae
xchg
add
les
cmp
shrl
imul
shl
sarl
add
insl
cli
pop
xlat
out
jge
jmp
mov
popf
imul
or
sub
mov
aad
xor
notl
adc
sbb
jecxz
mov
outsb
sar
cmpsb
xor
out
add
mov
sbb
xor
mov
stos
mov
ss
shl
xor
mov
xchg
data16
repnz
xor
push
outsl
push
fs
pop
sar
ljmp
mov
sbb
push
mov
in
jg
mov
adc
mov
xchg
jns
data16
jb
or
sub
ret
inc
cmp
cmp
cmc
push
mov
xor
sub
test
out
dec
jmp
mov
xchg
ret
pop
xor
mov
jp
or
adcl
xor
jns
xor
push
imul
pop
inc
outsl
xlat
xchg
inc
lds
sbbl
push
mov
ret
xchg
add
fimuls
dec
inc
out
jnp
push
mov
fnstsw
orb
xchg
imul
ss
add
jne
adc
pop
repnz
mov
inc
lret
icebp
popa
jp
inc
stos
mov
loop
mov
sub
sbb
push
fisttpl
jo
jno
mov
jge
push
pop
idiv
call
mov
aam
add
inc
pop
inc
xchg
cltd
jecxz
or
add
cmp
cld
cli
pop
push
or
fcom
mov
dec
xchg
adcl
add
lahf
scas
fsubr
adc
lcall
inc
xchg
mov
xor
out
mov
dec
push
sub
ret
pop
mov
pop
sbb
xchg
dec
insl
movl
inc
jae
sbb
sti
sahf
fwait
test
outsb
mov
divb
ja
dec
es
std
xchg
cmp
inc
or
mov
shrl
lds
cli
sar
sub
ficoms
dec
mov
xor
loop
sbb
loopne
stc
inc
call
icebp
mov
mov
push
rcl
mov
cmpsl
sbb
xchg
mov
pop
jecxz
and
addl
pop
or
adc
pop
mov
or
es
fdivr
jp
add
std
push
stc
mov
adc
rcrb
jmp
call
aad
clc
loopne
and
dec
inc
imul
cwtl
fwait
movsb
mov
jle
aaa
gs
ret
add
je
cmp
sbb
mov
fstpl
mov
jecxz
out
mov
std
outsb
nop
sar
daa
inc
aam
mov
in
out
pop
std
loope
adc
xor
adc
fsub
pop
xor
adc
in
push
fildl
and
add
jmp
sysenter
and
xchg
mov
jo
call
jnp
pushf
push
pop
jcxz
push
mov
cmp
jge
push
rorl
cmp
jl
adc
mov
jnp
push
jmp
ss
mov
js
shlb
fiaddl
push
and
pop
mov
xlat
sub
pop
stos
inc
mov
jne
inc
xchg
sbb
xchg
pushf
pop
sub
daa
mov
lret
adc
sub
out
sbb
imul
pop
jnp
jno
mov
stos
aad
in
and
add
pop
push
into
rclb
roll
xchg
fidivs
repz
pop
jmp
aaa
and
addr16
mov
adcb
lods
stc
dec
mov
pop
xchg
pop
push
nop
inc
fs
mov
mov
outsl
lcall
jp
out
pusha
mov
adcl
pusha
jae
dec
mov
movsl
fisubrs
out
cmpsl
xor
sub
shr
jns
sub
inc
mov
rcrl
daa
movb
push
xchg
mov
xor
idivb
stc
push
push
jg
sarl
scas
push
jae
xchg
or
andl
sub
dec
ljmp
and
pusha
xlat
sub
cmpsb
rorl
pushf
rcrb
in
stc
jge
adc
fsubr
add
or
jecxz
pop
clc
incb
jo
popa
stc
pop
pop
jl
jo
adcb
fucomp
mov
fs
inc
cmp
jge
shl
loope
xlat
pop
movl
shrd
mov
dec
sub
inc
jle
popa
daa
cmp
jecxz
cmp
sub
jns
and
inc
adc
aad
adc
adc
dec
movsb
pop
loop
je
in
cmp
adc
mov
out
adc
dec
lahf
mov
sbb
orl
adc
sub
inc
imul
cmpsl
cli
stos
xchg
ss
xchg
std
sbb
dec
cli
sbb
mov
mov
movsb
in
adc
mov
insl
sbb
inc
xchg
int3
inc
aas
cmp
pop
cmp
je
push
cmp
fnsave
xor
jno
stos
fadds
add
out
fwait
xchg
ljmp
call
xchg
rcrb
nop
pop
mov
add
movsl
insl
or
enter
and
out
sub
jmp
mov
rorb
mov
ret
dec
push
mov
aad
negb
shr
addr16
jne
adc
arpl
mov
or
pop
imul
and
inc
push
and
cmp
cmpsl
mov
and
loop
pop
repnz
out
dec
shlb
jnp
xor
loope
adc
and
scas
rclb
push
inc
outsl
stc
lret
test
pop
mov
out
sbb
sub
mov
mov
push
andb
shl
mov
cltd
fs
mov
hlt
flds
mov
or
xor
mov
sub
pop
mov
imul
adc
test
add
aas
jge
stos
push
cmp
in
cwtl
nop
cli
mov
les
jnp
pop
push
add
xchg
lea
dec
jb
outsb
out
and
in
scas
and
loopne
pushf
inc
out
push
add
in
ljmp
push
dec
push
fstpt
test
push
lret
adc
mov
adc
fldl
fsubs
je
inc
jo
or
and
das
sbb
pop
fisttpl
or
rolb
out
add
dec
or
mov
mov
mov
repz
pop
shll
enter
inc
imul
lret
lods
cld
sub
repnz
popa
jge
test
inc
into
adc
pop
inc
lods
xchg
nop
das
jns
inc
outsl
fsubrs
pop
fldl
and
mov
pop
cld
xlat
out
lret
in
mov
sub
mov
mov
inc
addb
out
cmc
outsb
lds
xor
add
sub
stos
out
ljmp
out
xchg
cltd
sub
mov
movsb
ljmp
in
mov
jp
xor
push
sbb
lock
dec
loope
cmpsb
dec
pop
mov
adc
jl
xor
mov
orb
mov
push
pop
leave
pop
int
pop
mov
dec
mov
adc
push
xchg
sahf
scas
popa
jne
dec
pop
adc
xor
xchg
out
lret
adc
xchg
pusha
shlb
outsb
pop
or
and
adc
scas
enter
mov
adc
rorb
ret
imul
adc
pop
jne
sbb
stos
rorb
adc
mov
sbb
repnz
bound
ljmp
sbb
xlat
ds
in
fistl
mov
sbb
bound
jb
enter
sbb
adc
out
jp
pop
xor
xor
cltd
adc
jno
out
nop
jle
push
fidivs
xchg
xchg
imul
std
adc
mull
ds
pop
xchg
hlt
out
sbb
idivl
ret
fwait
push
mov
ja
gs
sti
lahf
jle
fimuls
not
cmp
mov
andl
and
push
adc
cmpsl
loopne
jne
or
push
icebp
mov
xlat
inc
js
xchg
push
clc
and
or
aam
pop
and
icebp
sti
adc
adcb
jb,pn
xchg
xor
push
jl
or
adc
int3
daa
sti
jns
out
cmpsb
rcll
pop
stc
out
adc
es
xor
lcall
pushf
cmp
mov
push
nop
movsl
or
jo
mov
adc
out
repz
scas
fsubs
cmc
pop
or
test
mov
cld
sub
mov
xor
faddl
mov
xchg
call
push
mov
fldt
insb
arpl
arpl
movsb
jg
xchg
or
sub
push
xchg
ret
fsubr
das
add
cmp
jne
test
mov
dec
pop
rcr
dec
mov
pop
push
sahf
cmpsb
int
mov
xchg
xchg
inc
inc
lods
flds
or
cmc
xorl
iret
mov
add
cmc
pop
cmp
test
adc
adc
addb
sbb
andb
pop
add
in
push
sbb
int3
xchg
test
sar
adc
dec
inc
push
sub
jecxz
or
insb
add
sub
push
mov
xchg
cltd
pop
xchg
mov
loopne
xor
fs
cmp
mov
cmp
cmc
cli
outsb
jp
loop
xorb
inc
mov
lea
dec
ret
addb
mov
inc
cmpsb
adc
mov
or
insb
pop
push
movsl
div
stos
xchg
dec
lahf
sub
push
push
lock
fptan
xchg
mov
sbb
xchg
int3
outsb
add
popa
jge
mov
rsm
test
mov
push
aam
sbb
jmp
aas
int3
fldenv
clc
pop
loopne
jp
icebp
inc
mov
pop
ja
jno
stos
or
call
in
mov
mov
movsl
mov
jmp
out
jns,pn
pextrw
stos
xchg
add
mov
add
loope
push
mov
rolb
cwtl
jle
sub
pop
jne
lret
and
movsb
addr16
jno
or
lret
mov
pop
xor
int
sahf
xor
mov
adc
mov
mov
out
lret
mov
dec
je
ja
sbb
add
xchg
cld
cmp
cmpsb
xlat
pop
aad
mov
and
loop
lcall
sbb
adc
imul
add
push
mov
xor
lcall
out
fnsave
or
aam
mov
inc
add
and
lret
mov
aam
pop
shlb
mov
jecxz
add
xchg
xchg
js
or
mov
sub
and
pop
xchg
out
xchg
pop
test
mov
pop
mov
mov
or
outsb
mov
aam
inc
les
cmp
outsl
test
cltd
cwtl
aas
pop
ss
jmp
inc
popf
les
xchg
sub
adc
pop
jmp
add
js
in
in
loop
fs
mov
inc
push
or
mov
xor
mov
iret
xchg
sarl
stc
sbb
lcall
jnp
cwtl
sbb
sahf
cmovle
int3
xchg
fwait
insl
sbb
xchg
into
add
mov
out
cwtl
sarl
mov
jle
or
add
pop
jnp
insl
clc
dec
and
jne
dec
rol
mov
insb
push
push
test
mov
mov
addr16
out
sub
mov
mov
pushf
subl
inc
mov
loop
dec
mov
in
cltd
mov
or
or
cltd
cld
out
xor
push
ljmp
dec
mov
aam
pop
push
and
pop
lods
lcall
cmp
dec
es
xchg
mov
cmp
and
repnz
test
aam
xchg
inc
sbbb
fisttpll
je
and
ret
test
and
jb
call
push
sub
sbb
push
loopne
cmp
cli
out
pop
jne
xchg
xor
loopne
push
ret
add
pop
adc
das
cmpsl
aad
cs
ja
pop
rol
push
adc
loopne
mov
fcoml
aaa
jecxz
cmpb
adc
mov
rol
inc
mov
cmc
xchg
ret
sub
mov
fs
and
ss
lret
or
movb
mov
mov
scas
and
jmp
adc
push
inc
xchg
movsb
outsb
pusha
pop
mov
out
jno
xor
fidivrl
jmp
pusha
cmpsl
cmp
mov
xor
jge
aad
jae
or
movsl
cmp
cli
cwtl
or
lahf
sbb
sub
cmp
pop
decb
enter
dec
add
lds
stos
leave
insl
hlt
fs
cmp
ja
pop
cltd
jnp
or
sub
or
xchg
rorl
ret
fbstp
jle
pop
pop
mov
xchg
jo
inc
and
ljmp
or
xchg
cmc
outsl
and
fsubrl
mov
cmp
ret
xchg
iret
cmp
jae
movsb
xchg
incb
mov
lahf
fcoml
int3
sbb
cmp
popa
push
clc
and
fs
popa
lods
cmp
adc
scas
mov
push
test
or
cmpsb
push
adc
and
pop
xchg
add
out
enter
loope
test
sahf
push
sbb
and
or
loope,pn
jb
mov
and
add
inc
mov
mov
inc
shrb
push
idivb
stc
add
imul
and
xchg
int
pop
lret
loopne
add
jge
sbbl
stos
loopne
xor
orb
dec
shll
popa
frstor
xchg
pop
shl
nop
push
sbb
push
sbb
sti
aad
and
addb
shrl
subl
rclb
xchg
dec
arpl
sub
out
in
movsb
repz
out
lahf
fcoms
dec
clc
hlt
jne
and
dec
inc
insb
xchg
ret
jecxz
rcrb
pop
aam
add
pop
fcom
loope
inc
cli
sub
fwait
stos
dec
sbb
test
mov
bound
adc
and
lea
fcmovb
and
fcompl
lret
std
dec
in
in
mov
orb
rcll
fisubrl
xchg
mov
cs
mov
mov
insb
dec
cmp
mov
xor
and
push
and
imul
add
test
cmp
les
ret
fadds
sub
mov
dec
daa
cmp
sahf
xchg
pop
rclb
popa
mov
mov
loop
nop
out
sbb
or
incl
lea
notb
and
jne
jg
cmp
fcmovu
rol
adc
aaa
push
daa
pop
adc
outsb
mov
popf
pop
cwtl
mov
mov
mov
xor
add
add
pusha
insb
inc
fcomps
nop
jg
in
sbb
add
cmp
xchg
je
outsl
dec
cld
cld
cmp
inc
aam
jle
inc
cs
pop
add
enter
loope
in
jge
jl
jle
cld
mov
xchg
push
aad
sub
pop
lahf
or
je
lea
sbb
adc
jmp
mov
icebp
dec
data16
push
sub
ret
test
mov
push
je
addr16
lret
aam
test
push
push
push
stos
cltd
adc
add
loope
sti
pushf
and
stos
aad
addr16
jg
out
push
sbb
sbb
add
add
loop
fisubl
mov
std
sub
fcoms
xchg
cli
adc
scas
jae
cmp
lods
lock
out
pop
xlat
add
gs
and
cmp
aas
push
repz
xor
cmp
subb
pop
aaa
imul
lods
sub
lret
inc
out
mov
mov
fistps
sub
xchg
cld
and
rcr
addb
cmc
or
in
push
movsb
lods
jo
mov
fs
adc
cli
outsl
adc
pop
and
fcomps
lcall
aam
push
pushf
pushf
push
clc
jae
mov
xorl
adc
cmp
hlt
imul
pop
xor
lea
bound
cs
mov
xor
daa
pop
fstpl
cmp
fidivs
repz
int3
sub
lods
fsubp
dec
jmp
adc
sub
inc
nop
stc
clc
ret
inc
outsb
inc
lds
jl
sbb
xchg
lret
mov
push
pusha
cmp
push
pop
fs
mov
and
insl
inc
xchg
jg
or
popa
cld
mov
outsl
arpl
and
ret
popf
and
pop
ja
fidivl
cli
lret
dec
cmp
cld
push
icebp
push
fs
test
or
insl
in
push
gs
push
xlat
sti
movsb
jb
rcrl
mov
dec
dec
jecxz
add
shrb
sub
cmp
push
lods
and
lods
mov
gs
dec
fcoms
jne
lcall
jno
xor
lock
rcrl
xchg
iret
loope,pt
ret
xor
in
inc
jns
pop
mov
lods
push
inc
push
sub
add
je
enter
fildll
inc
sbb
mov
jb
jns
sub
pop
inc
ret
push
mov
aas
les
imul
fstpt
cs
int
or
pop
xchg
push
and
cmpsb
incb
or
adc
cli
sbb
jb
sub
adc
stos
inc
sub
cs
fucomip
stc
jns
and
gs
scas
mov
mov
push
ret
push
mov
or
aaa
in
cmpsl
cltd
cmp
dec
pop
aaa
mov
addl
xchg
mov
push
arpl
or
scas
jl
xchg
push
pop
push
push
cmp
out
fsts
mov
int3
movl
mov
sahf
xchg
sub
lock
jae
cmp
scas
pushf
sub
lods
or
in
test
lret
cmp
int3
add
addr16
mov
lea
sub
ret
xchg
scas
and
ret
mov
pop
shl
add
cmovo
pop
inc
jae
mov
leave
fs
dec
js
fldenv
push
movsl
xchg
out
add
dec
nop
fnstcw
popa
mov
js
js
bound
mov
xorb
cmp
mov
inc
cli
aaa
in
add
mov
in
lret
outsl
and
jp
insl
pushf
and
mov
aam
sub
sarb
arpl
aad
xchg
add
ss
andl
push
xor
mov
xchg
xchg
test
fisttps
adc
sbb
dec
sub
cwtl
or
mov
sbb
iret
fldt
mov
and
adc
ljmp
dec
sbb
jae
mov
rclb
and
lea
shrb
jae
xchg
data16
ficompl
inc
daa
setns
adc
inc
push
in
into
jmp
mov
sbb
inc
jo
hlt
stos
ss
pusha
pop
loope
cmp
push
cld
icebp
hlt
jmp
sbb
popf
lods
or
inc
sti
mov
clc
loop
loop
ret
mov
cltd
adc
movsb
mov
pop
lret
in
aaa
or
pop
pushf
add
scas
mov
test
fnstcw
lock
and
ds
lock
repz
fmuls
fsubrs
int3
into
lea
sbb
xchg
add
gs
mov
pushf
jl
mov
add
scas
popf
jb
xor
mov
stos
cld
or
testl
stos
cs
or
adc
add
mov
jae
rcl
dec
bound
mov
or
outsl
mov
cmp
sub
test
movsl
ja
enter
int3
or
lcall
pop
mov
adc
mov
mov
lds
push
xchg
mov
movsb
push
fisubl
add
cmpsl
sahf
aas
push
es
inc
enter
cwtl
sub
fsub
add
jle
ret
aaa
push
enter
mov
negb
mov
sub
lods
dec
ret
pop
jle
mov
fiaddl
xchg
sub
push
imul
mov
mov
lods
aad
cmp
adc
adc
xlat
aaa
das
push
jmp
mov
xor
mov
adc
mov
mov
mov
cmpsl
and
push
jle
aas
sbb
sbb
fs
xor
repz
bound
insb
push
das
repz
inc
imul
notb
pop
movsb
lahf
fiadds
jg
bswap
es
cmp
stos
jnp
pop
ss
js
and
pop
fxch
rorb
fmuls
sbb
xchg
pop
jg
or
inc
popf
push
test
daa
bound
xor
es
jnp
push
mov
xor
insb
inc
sub
jb
push
loopne
fsubr
cld
adc
pop
or
jnp
mov
fwait
dec
xor
inc
aad
push
outsb
cltd
mov
lods
pushf
outsl
xor
addr16
movsl
xchg
outsb
aas
xchg
mov
inc
pop
jecxz
inc
sub
xor
mov
mov
inc
cmp
leave
jno
out
sub
xchg
pushl
fdivrs
mov
sbb
in
dec
cmp
inc
and
jge
add
cmp
dec
repz
sub
push
and
sub
or
notl
push
stos
cltd
inc
subl
or
leave
xchg
adc
jbe
lock
sub
mov
fimuls
dec
ror
dec
cmp
ds
xor
cmpsb
jne
fistpl
push
das
cld
xor
int3
shrl
dec
scas
pusha
lods
mov
leave
insw
xchg
fs
inc
push
stos
loopne
sahf
jg
lock
mov
test
add
and
add
xor
inc
mov
jmp
cld
pop
mov
mov
lahf
cmc
inc
mov
inc
and
jg
xor
ret
repz
imul
cs
aaa
pushf
bound
sbb
push
jmp
push
pop
repnz
pop
mov
jns
iret
mov
jl
xor
dec
push
cld
out
mov
push
mov
ds
cli
fiadds
mov
das
cmp
shrl
repnz
push
mov
pop
sub
inc
add
sarl
pop
lods
dec
aad
mov
les
aas
imul
push
dec
test
sub
cmp
sti
fmul
xchg
push
sub
aad
and
or
clc
addr16
lret
pop
sahf
mov
cmp
aad
inc
mov
out
and
jmp
sub
fdivp
outsb
xorps
xlat
int3
addb
in
popa
cmp
popa
sub
mov
jnp
addr16
es
xor
lahf
jno
int
xchg
sbb
ljmp
mov
xchg
xchg
jo
xor
orl
aaa
push
mov
dec
and
mov
push
xor
sahf
push
adc
rcll
test
sbb
in
push
out
shl
cltd
imul
cmc
dec
dec
jo
mov
add
and
jecxz
cmpsb
mov
call
cmp
test
push
jae
ss
test
dec
jecxz
pusha
fwait
push
inc
cli
sub
outsb
fiaddl
xlat
filds
sub
xchg
repnz
es
loope
and
pop
push
pop
psubusw
test
out
jl
and
jae
paddw
mov
dec
add
and
jbe
les
scas
test
mov
daa
loopne
and
jp
xchg
ljmp
cwtl
sahf
sbbb
push
mov
or
shrb
mov
into
ficompl
push
push
push
ljmp
mov
repz
xchg
jbe
push
repz
jmp
xchg
cmc
adc
dec
frstor
mov
mov
mov
in
negb
es
cmp
fists
jecxz
add
dec
adc
mov
imul
xor
das
sbb
jb
mov
push
ja
dec
jmp
je
jge
mov
add
lcall
popa
repnz
int3
xchg
fst
push
stos
and
xchg
test
and
xor
adc
enter
pop
loopne
test
jne
outsb
and
test
dec
xor
jmp
adc
insl
or
cmpsb
test
dec
fsubrs
cmpsl
sub
daa
lds
xor
outsl
cmp
jg
cmp
inc
add
and
add
dec
pushf
fldt
adc
shlb
jg
dec
les
lods
arpl
push
in
imul
add
into
pop
mov
jae
xlat
pop
add
xor
dec
inc
cmc
rorb
mov
in
push
xlat
mov
jnp
divb
or
add
and
les
and
jge
bound
or
cmc
mov
mov
dec
lret
sbb
test
aad
sub
adc
rcrb
sbb
movsl
xchg
dec
push
or
movups
inc
push
cmp
test
mov
in
inc
in
lea
adc
repnz
fcoms
cltd
inc
mov
adc
push
in
cmp
pop
inc
outsb
mov
out
xor
sbb
mov
ja
or
sub
xchg
stc
inc
cs
sub
inc
mov
jb
cli
pop
push
xchg
push
sti
push
cs
loopne
bound
gs
stos
cmpsb
jl
inc
mov
and
idivl
rclb
rcr
pop
push
jne
repz
cmp
push
mov
daa
mov
mov
mov
or
cli
out
ror
xchg
scas
mov
adc
popf
xlat
jo
push
or
xor
in
xlat
out
inc
mov
das
cmp
inc
dec
imul
movsl
sub
ret
inc
hlt
mov
cmc
adc
in
leave
sbb
inc
xchg
jg
in
mov
sub
mov
push
push
dec
and
std
mov
xor
popa
aaa
test
push
cmp
or
ljmp
lahf
addl
sbb
call
jo
ja
aam
ja
jecxz
add
jnp
sub
test
out
imul
lahf
iret
rclb
mov
xor
sbb
dec
daa
fwait
imul
xor
xchg
xchg
push
mov
stc
inc
push
dec
orl
or
pop
gs
and
add
xor
call
and
in
sbb
cmp
inc
cmp
pop
testb
sbb
iret
imul
out
cmp
fmul
cmp
roll
pop
adc
lret
stos
mov
add
gs
dec
dec
mov
jge
pop
pusha
imul
mov
lds
dec
fldt
dec
fsubrl
and
pop
jecxz
sti
lret
mov
out
insb
sbb
sub
dec
aam
pop
add
pop
push
sub
adc
cmpsb
adc
cmc
insb
or
adc
data16
sub
cld
pop
lock
xchg
or
sbb
push
mov
pop
addl
pop
mov
jbe
daa
ja
dec
inc
dec
jbe,pt
and
cmp
shll
lret
inc
sbb
mov
mov
iret
dec
in
popf
addl
adc
sbb
paddusw
outsb
out
daa
fdivl
js
mov
addr16
sti
out
adc
push
gs
xchg
hlt
aad
push
lret
xor
stos
jb
jp
test
xchg
frstor
pop
fcmovnbe
push
pusha
pop
mov
out
push
push
aaa
scas
adc
test
jp
add
clc
aas
dec
pop
mov
insl
mov
mov
push
or
adc
imul
sbb
mov
test
fcomp
cmp
cmp
out
gs
loop
pop
cwtl
mov
xor
lock
jnp
cmpsb
sbb
fcoml
sbb
fstl
xchg
dec
orb
ja
cwtl
xchg
hlt
iret
add
frstor
fistl
jb
xchg
in
sbb
and
dec
jno
popf
mov
imul
das
nop
adc
lods
loop
sub
and
mov
rol
mov
adc
push
jp
jb
sti
repz
dec
aad
dec
fiaddl
add
or
inc
sahf
xchg
ds
dec
adc
dec
push
shlb
xchg
shll
addr16
pushf
or
cmp
out
adc
icebp
in
pop
test
es
mov
add
inc
xchg
cmp
or
clc
int3
popa
sbb
mov
sbbb
cmp
jg
js
dec
aad
cmp
cmp
les
mov
push
and
faddl
das
xor
out
inc
add
cwtl
push
cmp
mov
decb
loop
jmp
inc
push
adc
mov
pop
push
cmc
dec
aam
je
and
inc
in
iret
xchg
jp
sbb
div
mov
notl
jmp
sub
aas
movsl
adc
lahf
repz
ljmp
or
ja
cmc
sar
inc
shrl
pop
sbb
inc
jg
mov
imul
add
sti
into
js
loope
lahf
inc
push
push
or
cmc
dec
fnstenv
inc
mov
ds
adc
jno
sbb
ja
xchg
fcoms
pushf
xchg
jmp
lcall
jl
adc
jp
fnstcw
inc
fcompl
push
stos
add
mov
xor
jae
xorl
pushf
mov
icebp
push
cwtl
push
sbb
mov
lret
vandnps
out
cmc
sbb
fwait
jns
setne
adc
dec
mov
dec
rclb
adcb
xchg
incl
pop
mov
push
or
sahf
fstpt
test
add
pop
in
dec
outsl
adc
dec
seta
jg
add
insl
mov
shll
cmp
fadds
mov
pop
sub
push
sbbl
xlat
fidivs
mov
jge
xorl
call
jge
fstpt
fs
add
jo
iret
xor
mov
sbb
xchg
sub
shlb
or
sbb
push
into
movsb
cld
mov
sbb
nop
arpl
pop
out
aam
fdivr
and
jp
jnp
jno
pop
xchg
ja
sub
jae
rcll
mov
xchg
int
push
or
fdivp
jmp
mov
outsb
lret
retw
call
or
lods
inc
mov
lret
mov
enter
ljmp
rcrb
ds
mov
nop
jns
roll
into
pop
push
xor
xor
ljmp
cltd
leave
mov
xchg
sub
int3
bound
jnp
call
mov
repnz
inc
jl
pop
pop
xchg
js
loop
or
ljmp
xchg
and
gs
imul
and
repnz
mov
cmpb
test
test
stc
mov
inc
mov
push
xor
daa
mov
cmp
insb
pop
adcl
adc
les
xchg
or
xchg
xor
insl
xlat
pusha
xor
mov
pop
call
mov
xchg
cmp
enterw
popa
out
or
pop
test
or
push
pop
mov
popf
out
jg
lret
lcall
and
lds
and
jmp
mov
cwtl
js
ds
divb
inc
add
cmp
xor
ret
mov
inc
mov
aaa
adc
lds
sbb
add
push
adc
hlt
pop
mov
popf
dec
jne
loope
push
xchg
int
xor
add
outsl
cwtl
mov
outsb
mov
sbb
lds
xlat
movsb
adc
mov
cmc
cmc
xor
and
je
in
sbb
fisubl
push
fiaddl
orl
sbb
fldl
fst
inc
inc
pop
adc
mov
dec
out
inc
getsec
mov
std
pop
stos
dec
pop
outsb
pop
sbb
xchg
cmp
lret
jnp
repz
push
dec
pop
loope
inc
xlat
cmovl
arpl
lods
iret
mov
lods
icebp
and
outsb
mov
loop
mov
inc
dec
dec
pushl
jbe
lret
nop
jnp
nop
scas
loope
icebp
shlb
mov
jmp
inc
pushf
mov
xor
andb
pop
iret
push
dec
lahf
mov
gs
dec
jbe
adc
jmp
ret
aas
cmp
sbb
xchg
test
jp
inc
mov
ds
bswap
mov
jg
mov
cmp
mov
mov
cli
sbbl
push
jb
into
xor
fsubp
test
jno
and
jg
sub
stc
dec
pop
sbb
and
mov
cmp
mov
lock
push
sub
pop
and
stos
and
sub
popf
ret
xchg
push
jb
add
xchg
das
lret
mov
ds
mov
mov
or
lret
fisttpll
nop
mov
lret
dec
in
jmp
mov
andb
mov
insl
arpl
inc
inc
pop
rcrl
push
pusha
dec
xlat
sahf
arpl
rcll
std
push
mov
add
jo
shll
stos
xchg
test
aad
jnp
mov
and
xchg
pop
sbb
js
shl
fld
cmpsl
mov
pop
pop
pop
dec
jo
repz
xchg
xor
scas
bound
pop
dec
adc
xchg
cmp
pop
and
and
xchg
sub
xchg
jnp
in
mov
and
push
shrl
cmp
nop
push
push
xlat
insb
fdivp
add
add
cltd
leave
cmpsb
inc
jbe
sub
and
cmpsl
rcll
jns
loope
mov
xchg
mov
neg
pusha
dec
pop
shll
sahf
cmp
mov
mov
jecxz
cmp
std
ja
jo
pop
insl
cld
sub
iret
push
sbb
adc
xchg
lds
loopne
hlt
adc
fstps
jnp
into
push
roll
and
out
cmp
incl
mov
pop
cmp
mov
mov
mov
cmp
xchg
repnz
jne
mov
sbb
add
pop
cld
cwtl
std
pop
ret
aaa
les
fdivrl
pop
pop
outsb
push
xchg
in
push
insl
adc
dec
das
je
xorl
or
outsb
mov
into
xor
outsl
out
stc
insl
sbb
sarb
call
mov
sahf
cmc
dec
xchg
cltd
fs
jb
mov
xchg
xchg
fimull
lods
jmp
or
xor
sbb
jmp
fs
sahf
sarl
cli
jmp
push
test
test
xlat
pusha
imul
fwait
pop
addr16
inc
icebp
jmp
into
and
pop
jne
mov
mov
out
jnp
pop
xchg
pop
testb
das
hlt
hlt
outsl
xor
test
addl
dec
icebp
cmpsb
fmuls
stos
mov
ja
push
das
mov
out
push
fwait
pop
out
fisubs
std
mov
pusha
loope
stc
insl
cmc
dec
mov
stos
mov
mov
xor
inc
jg
pop
cmp
daa
sti
jecxz
or
scas
xor
xchg
add
movlps
jg
outsl
and
adc
mov
adcl
test
dec
add
aaa
jnp
sbbb
sbb
mov
jne
hlt
sarb
sbb
mov
pop
push
mov
icebp
lahf
push
add
icebp
dec
out
sarb
iret
inc
xchg
bound
xchg
jbe
sub
int3
ret
xchg
fists
mov
push
fildll
pop
cld
sbb
lret
fimuls
cltd
sub
fsubs
mov
xchg
mov
xor
hlt
fmul
imul
mov
test
lret
inc
cmp
cmp
cltd
mov
pop
jns
lret
lods
in
dec
xor
jecxz
ss
into
push
ds
popf
sbb
mov
cmp
adc
shll
cli
fwait
xchg
ja
shl
rorb
fwait
addr16
sub
int3
gs
mov
aaa
add
cmc
cmpsb
cmp
mov
xor
ja
dec
push
pop
js
xlat
xchg
jo
decb
jmp
pop
xchg
mov
mov
adc
fisubs
jnp
mov
je
mov
jns
dec
sub
pop
push
xchg
mov
jl
and
out
pusha
mov
addr16
jmp
ret
cmp
int3
into
dec
cmc
inc
fidivs
out
xor
int3
jne
adc
and
scas
or
fs
pusha
ljmp
push
addr16
sub
dec
jne
jge
arpl
sbb
int
ret
ja
mov
loopne
adc
mov
filds
sbb
and
nop
and
add
fists
imull
mov
aas
setae
jle
cltd
inc
inc
add
mov
mov
gs
psrlw
fcmovnbe
lods
ret
bound
stos
xor
inc
dec
fwait
bound
test
insl
push
push
jns
fcmovbe
and
pop
cmp
sbb
je
cs
rorb
mov
fcompl
mov
push
and
push
add
es
push
das
inc
fnstsw
nop
mov
test
cmc
andl
fimuls
add
stos
pop
add
call
jnp
mov
dec
jmp
mov
xor
and
mov
cmc
call
push
xchg
cmp
dec
or
or
fldenv
jns
inc
or
mov
lea
pop
orl
mov
push
leave
sub
call
jnp
mov
mov
push
xor
push
mov
mov
and
jge
adc
push
inc
lock
sub
sar
add
fldl
jae
xor
push
inc
xlat
fs
push
pushw
and
jne
enter
std
jp
test
icebp
mov
xor
ljmp
cli
mull
and
jae
cmp
push
cwtl
pusha
int3
xchg
insl
xor
add
sub
movsl
xor
pop
scas
xor
adc
movsl
ljmp
push
mull
xchg
add
jae
inc
pop
repz
pop
sub
mov
fnsave
iret
das
sbb
dec
xchg
hlt
or
out
dec
stos
inc
imul
or
enter
in
cmp
xlat
push
pop
fcompl
xor
inc
in
aad
push
mov
shl
jmp
fcmovnbe
imull
movsl
loope
cltd
xlat
cmp
jns
cwtl
nop
adc
test
das
jbe
ret
scas
cmp
dec
pop
sub
or
rcrl
iret
push
mov
xor
xor
in
dec
in
in
sti
ljmp
lcall
test
aas
in
xor
add
loop
dec
adc
out
fwait
shrl
dec
mov
lods
mov
add
mov
or
nop
push
out
es
push
loopne
jecxz
notb
les
xchg
cld
cmp
call
mov
fdivrl
jno
adcb
or
into
scas
dec
fnstsw
sbb
mov
sbb
mov
or
jb
dec
xor
adc
stos
jnp
negl
add
mov
jb
sub
sbb
or
fs
insb
dec
inc
mov
push
dec
fwait
pop
mov
insb
mov
sarl
loopne
add
lods
jle
push
mov
sbb
inc
das
pop
push
mov
jp
insb
xlat
jb
out
ret
and
cwtl
mov
sahf
rcl
lret
rcll
mov
push
pusha
push
inc
imul
jno
sti
sub
test
add
jo
push
sbb
push
out
mov
jno
and
or
add
int
pop
daa
cs
cmpb
dec
cmp
out
data16
sbb
sbb
sbb
leave
mov
push
mov
les
bound
jmp
out
sbb
sub
mov
mov
xchg
repz
xor
and
xchg
jmp
fcoml
ret
loop
stos
xchg
adc
dec
ficoml
cmpb
out
daa
outsl
insl
or
aad
jg
testl
mov
and
out
or
enter
faddl
stos
pushf
test
shlb
imul
add
push
cmp
mov
dec
faddl
pushf
sbb
cltd
shll
pop
sbb
xor
hlt
repnz
push
jmp
cwtl
pop
and
data16
adc
or
sub
insb
jle
and
and
les
test
xchg
leave
dec
xor
dec
cli
mov
sbb
out
rcrb
cmp
nop
fistl
imul
and
mov
int3
sbb
pop
push
mov
dec
mov
mov
inc
jge
pop
xchg
jno
dec
mov
outsb
cmpsl
jp
adc
imul
jmp
loope
insl
es
fsubs
repz
rcrb
test
jp
jle
cmc
add
dec
sbb
into
sub
and
div
arpl
jo
leave
mov
pop
jp
jmp
jmp
ficomps
divl
push
cmp
outsb
cmc
add
cli
mov
pushf
inc
inc
cmp
jmp
adc
icebp
and
and
inc
push
pop
jg
lret
jae
test
repz
clc
fdiv
or
and
xorb
xor
adc
push
jns
xchg
push
scas
dec
nop
stos
cmpsl
mov
mov
mov
mov
mov
pause
loopne
sbb
pusha
lock
push
inc
mov
clc
lock
add
jl
mov
add
xor
or
scas
sbb
mov
adcb
mov
pushl
or
sbb
testl
int3
add
sahf
push
je
ljmp
or
movsb
enter
mov
loop
vmovhps
inc
push
push
jge
add
in
or
aas
mov
cld
mov
fsubrp
xchg
push
pop
je
xor
ds
dec
ret
adc
pop
push
xor
clc
fmull
dec
out
call
pushf
jl
pop
les
fs
push
js
in
jo
mov
mov
ret
das
hlt
adc
xchg
cmp
xor
sbb
xchg
sbb
mov
rolb
lcall
les
dec
stos
loope
in
adc
jnp
cmovb
rcr
into
jmp
fbstp
sub
and
inc
xchg
mov
sbb
xchg
push
loopne
sbb
cmpsl
add
push
sahf
sbb
out
xchg
mov
push
fcom
scas
mov
cld
sub
mov
or
addr16
in
adc
jg
aaa
in
xchg
push
mov
int
or
outsl
and
xor
dec
and
dec
imul
adcl
adc
mov
es
adc
xchg
mov
mov
sub
mov
dec
cmp
push
test
cmp
sub
repz
mov
cs
xchg
out
into
pop
rcl
dec
jge
lods
leave
jns
push
add
es
mov
pop
mov
pop
jbe
push
mov
push
imul
lret
pop
divb
mov
adc
or
ss
push
out
xchg
lods
add
push
test
dec
mov
sbb
or
je
xor
jo
mov
push
jnp
dec
icebp
xchg
jno
mov
jae
push
aad
xor
imul
fstpt
and
bound
inc
ss
add
mov
sub
mov
not
jmp
xorl
adc
dec
pop
imul
lds
xchg
jnp
xchg
jbe
int
fsubrs
and
sti
sbb
push
sbb
inc
ss
xchg
xchg
push
adc
test
mov
push
mov
fistl
ret
fldl
fildll
push
rorb
push
dec
and
xchg
lock
sbb
sbb
push
pop
fsubr
inc
imul
mov
sbbb
pop
cltd
fmul
imul
pop
add
xor
mov
inc
mov
xor
cwtl
stos
sbb
sub
cmpsl
sbb
pushf
add
xor
inc
sbb
dec
xor
js
ret
out
sbb
or
add
iret
add
ss
lret
nop
insb
call
adc
or
jno
inc
dec
push
call
jne
mov
jecxz
push
inc
mov
rorl
push
fcoml
dec
mov
rcl
jb
mov
lods
imul
sbb
das
cmp
out
dec
out
add
lret
jae
cli
ficomps
je
pusha
xchg
push
ret
mov
mov
enter
nop
and
pop
adc
call
mov
mov
out
and
cmp
xchg
mov
xor
inc
push
std
mov
pop
mov
xor
xor
xor
adc
sbb
sbb
add
gs
push
mov
xlat
cmp
push
add
cmc
testb
clc
sbb
xchg
pop
aaa
lahf
push
sbb
add
in
xchg
imul
adc
ljmp
fcmovb
mov
cltd
jae
test
mov
subl
loope
clc
js
movsl
mov
repnz
pop
push
xchg
dec
js
sbb
incl
pop
insl
pop
add
fisttpll
in
imul
sbb
orb
adc
xor
sub
mov
pop
aas
mov
xor
pop
std
push
pop
push
sub
lods
push
mov
xlat
add
ret
and
xchg
lods
loopne
mov
jmp
aam
popa
cmp
add
cmpsl
lret
mov
mov
in
adc
mov
mov
xchg
xchg
mov
mov
fbstp
ret
pop
push
int3
test
rorb
inc
mov
imul
inc
loopne
inc
sub
icebp
call
testl
daa
insl
mov
add
movups
jle
aas
xchg
rorl
or
xchg
cmp
clc
add
int3
incl
jl
dec
jns
pop
sub
aaa
aaa
mov
pop
dec
pop
scas
es
mov
rcll
jno
fdiv
xor
fisubrs
xor
dec
negb
xchg
nop
and
jmp
mov
sbb
rcr
xchg
mov
jge
scas
movl
inc
pop
shll
dec
pop
into
cld
cmp
adc
pusha
cmp
mov
push
xchg
sbb
lret
push
push
and
loopne
pop
or
mov
notb
pop
leave
testb
pop
aaa
inc
lods
add
call
je
out
cld
dec
imul
sbb
in
pop
loop
sbb
cmpsb
es
mov
rcl
cmp
fidivl
lea
out
dec
ret
mov
inc
outsl
ret
push
mov
cli
mov
jb
aam
ret
dec
and
push
aad
fisubrs
clc
mov
je
mov
and
inc
adc
popf
mov
mov
jmp
cmpsb
stc
pusha
ljmp
pop
out
jb
gs
fstp
jnp
out
xchg
aam
cwtl
xchg
insb
and
int
lcall
xchg
jg
in
fdivrs
cltd
bound
fsubrl
xchg
mov
xlat
lret
test
lock
mov
or
xchg
jne
jno
cmp
add
aam
push
sub
mov
orl
fcmovnb
and
sbb
mov
call
and
sub
roll
je
movsb
mov
xchg
out
dec
popa
add
rorb
cmp
jne
inc
inc
jns
dec
movb
cmp
imul
push
lret
hlt
out
cmpsl
inc
clc
or
bound
je
out
push
or
sbb
and
rcll
mov
fwait
in
pushf
lea
jnp
adc
sarb
btc
loop
fistpl
pop
pop
sbb
int
push
pop
jnp
pusha
jl
rcrb
mov
lahf
push
fcmovbe
enter
sti
push
outsl
mov
mov
jle
in
pop
xor
push
dec
or
mov
std
push
div
iret
jecxz
or
mov
sub
lret
xchg
push
push
adc
mov
xor
dec
int
stc
lahf
xchg
out
inc
pop
xchg
dec
pop
jne
test
xor
negl
push
les
pop
xchg
jp
cmc
lcall
test
xchg
clc
js
sub
dec
cmp
mov
jmp
dec
arpl
test
int
xor
add
aas
gs
std
and
lahf
test
xchg
shrb
sbb
stc
add
dec
in
mov
xor
xchg
jbe
adc
cli
xor
sbb
ljmp
add
jns
ss
sub
sbb
std
mov
lcall
stc
mov
out
adcb
fimuls
jnp
aas
sbb
jle
xchg
sarb
pop
adc
jno
lds
inc
sub
push
mov
jl
movntq
dec
add
mov
hlt
in
aaa
cwtl
mov
pusha
cs
push
xor
xor
loop
or
popa
sub
jno
idivb
lock
mov
inc
into
jbe
mov
jne
in
jnp
xchg
and
js
movsb
aas
dec
hlt
es
dec
mov
mov
adc
mov
cmp
icebp
fs
test
sub
cmp
mov
scas
push
and
aad
movsb
sbb
or
inc
inc
push
push
xor
mov
subl
bound
nop
cmp
sbb
add
arpl
lret
xor
xchg
shlb
jb
inc
jge
mov
sub
cs
mov
cmp
in
jbe
insb
mov
and
sbb
add
imul
mov
data16
jbe
jnp
neg
lds
dec
addr16
and
and
dec
adc
adc
mov
dec
dec
mov
or
mov
mov
jmp
insl
or
pushf
stos
mov
push
add
mov
mov
in
mov
sub
cmp
aam
mov
dec
sbb
jbe
xchg
lahf
sbb
ja
cmp
gs
sbb
xchg
dec
rsqrtps
lock
push
mov
or
int
popl
or
jns
out
call
stos
psrad
cmpsl
sub
add
dec
xchg
aaa
out
jmp
ja
stos
fnstcw
pop
xchg
or
lret
insb
call
outsl
in
adcl
lods
repz
ljmp
aaa
sub
arpl
inc
jle
push
inc
xchg
fwait
push
ret
jg
call
inc
lods
push
js
movsl
stos
push
jp
test
xchg
stos
repnz
fdivrl
sub
test
push
aam
dec
fistpl
dec
int3
xchg
xchg
pop
outsl
push
pop
in
push
fisubrl
mov
ss
test
movsb
xorl
iret
fwait
add
push
imul
addl
out
in
divl
adc
add
jmp
ljmp
rorl
stos
mov
mov
lock
xchg
cmp
movsb
in
dec
mov
cmp
imul
xchg
into
xor
jp
dec
jp
jl
adc
or
cs
push
mov
push
jmp
pushf
xor
or
xor
idivl
sub
mov
int3
lock
push
icebp
pop
movsl
fidivrs
mov
xchg
cmpsb
xchg
mov
imul
jg
int
adc
in
ja
fcoms
in
lods
aas
cwtl
subb
lock
lahf
pop
pop
in
mov
cwtl
inc
scas
popf
test
addr16
xchg
clc
scas
mov
jbe
mov
pop
xor
iret
lret
aaa
cli
int3
pop
out
mov
xchg
mov
pop
ljmp
inc
push
leave
cwtl
sub
lahf
insl
push
mov
fiadds
push
xchg
jno
and
ficoml
or
or
mov
test
cmp
dec
lods
xchg
out
inc
leave
xchg
iret
out
xorb
mov
jmp
nop
js
andl
jne
pop
movsb
loop
adcb
adc
add
sub
or
and
mov
mov
imull
in
jbe
mov
das
jnp
adc
adcb
sub
mov
push
inc
inc
pop
xchg
adc
mov
sub
jnp
sahf
or
outsb
mov
mov
stos
adc
inc
and
jb
pop
icebp
fstpt
add
dec
mov
sbb
xchg
cli
out
sbb
movb
push
sysenter
in
push
cld
fisttps
dec
jae
shlb
mov
sub
data16
out
gs
dec
out
movsb
mov
push
and
xor
fnsave
pop
je
loop
lret
sbb
and
add
and
sub
or
sbb
imul
add
sbbb
mov
adc
testl
jno
sub
or
adc
mov
push
xor
out
dec
push
in
and
mov
add
fprem1
rcll
dec
pop
outsl
sub
mov
lods
repnz
out
pop
stc
mov
xorw
inc
movsb
pop
xor
xchg
pop
or
ljmp
pop
fistps
sub
xchg
sbb
ss
lahf
mov
dec
iret
stos
jo
sub
xor
add
jge
dec
out
push
inc
push
cwtl
ja
lahf
mov
clc
jl
lahf
or
int
daa
fisubrs
dec
add
push
mov
mov
and
dec
shr
jmp
mov
and
fistpll
mov
jno
pop
dec
mov
nop
mov
push
xchg
and
repnz
rcl
in
adc
das
enter
int
xor
push
jl
shlb
psubsw
sbb
jg
lret
jmp
jl
je
cmp
pop
ret
pop
mov
loop
xor
stos
ja
pop
ret
in
sbb
xor
sbb
cmc
cwtl
pop
xor
xor
push
pop
fs
xor
sbb
int3
mov
stc
push
mov
push
insb
cmpsb
or
sub
dec
hlt
jno
jne
sub
or
repnz
cmp
push
xchg
insl
adc
jnp
and
sbb
ds
mov
inc
enter
mov
add
movsl
dec
and
leave
mov
sbb
shll
dec
sub
cmp
push
imul
sub
iret
push
popa
or
dec
in
jl
adc
xchg
movsb
in
outsb
fildl
mov
orb
cmpsl
sub
xor
mov
mov
addr16
sti
xchg
lcall
test
cmp
mov
push
mov
je
fcompl
push
add
dec
icebp
lock
mov
rcll
mov
nop
xchg
xchg
negb
insb
lods
mov
mov
cmp
mov
outsb
insb
jns
xlat
enter
cmp
push
lock
hlt
mov
sub
mov
ljmp
lahf
adc
push
pop
mov
repz
test
repz
in
leave
hlt
pop
xlat
or
pop
mov
stos
scas
vpsubsw
bound
jecxz
push
pop
popf
data16
fdivrs
std
cmp
pop
sbb
sub
hlt
and
aas
pop
xor
lods
lea
call
gs
lock
sub
mov
popa
inc
cmp
or
in
ret
cmp
imulb
or
add
out
mov
iret
or
push
pop
mov
ret
adc
mov
mov
adcl
inc
pushf
repz
and
pusha
add
jecxz
daa
in
in
sbb
fcoms
push
cld
mov
lcall
or
xchg
jl
xchg
lods
jmp
ljmp
adc
push
sub
jmp
insl
leave
cld
lods
cmpsl
mov
mov
inc
pop
or
aad
divl
cmp
fsubrl
or
jmp
lods
mov
loop
dec
es
lods
cmp
mov
movsb
cmp
mov
test
roll
out
jbe
jnp
or
lds
stos
sub
mov
jmp
push
add
push
je
pusha
fisubl
pop
cmpsl
ds
adc
jl
sahf
xor
ficompl
inc
jae
fcoms
lods
mov
loopnew
stos
sub
dec
push
aad
fwait
test
movsb
mov
and
sahf
dec
pop
mov
dec
pusha
shrl
rclb
mov
adc
xor
cmpl
inc
mov
and
mov
rcrb
or
pushf
jmp
add
fmuls
pop
mov
add
in
mov
xchg
mov
ret
loop
xchg
mov
jge
jp
xchg
movsl
sbb
xchg
inc
in
or
out
jl
call
mov
insl
int
sub
sbb
ljmp
gs
xchg
push
push
inc
mov
xchg
lods
test
nop
clc
lock
sbb
inc
sub
adc
mov
jbe
xchg
or
cmp
push
loope
sub
ljmp
cwtl
mov
mov
rcrb
pop
jae
les
xchg
es
in
sub
or
mov
mov
icebp
push
div
divl
popl
aad
add
jo
gs
mov
sbb
or
jnp
cmp
lock
adc
mov
adc
loopne
cmp
lds
push
pop
ret
mov
mov
pop
add
ficomps
dec
mov
stc
dec
lods
neg
scas
xor
sbb
or
cmpsl
movsb
xor
loop
sahf
push
lcall
inc
mov
sbb
fbstp
and
push
aas
or
cmp
mov
sub
mov
push
inc
dec
inc
cld
add
lcall
add
stos
dec
movsb
or
xchg
xchg
aaa
int
jge
sti
loop
cmc
mov
fdivrl
mov
movsl
int
mov
mov
push
aad
cli
pop
add
stc
xchg
xchg
fldenv
inc
mov
pop
sbb
gs
neg
xchg
je
test
or
adc
dec
ret
arpl
xchg
inc
ljmp
jbe
test
cmp
cmp
mov
sub
popa
xchg
mov
sbb
or
push
cmp
jge
mov
leave
out
xor
ret
pusha
jno
movsl
stc
and
pop
gs
lods
clc
mov
or
mov
push
jne
or
pop
add
or
out
pop
notb
ljmp
and
incb
loope
push
pop
dec
sbb
add
fs
orps
das
pop
aas
imul
addl
popf
xor
mov
fs
notb
dec
lret
jnp
pop
mov
xchg
lret
pop
popf
jl
enter
outsl
add
aas
mov
aaa
int3
mov
and
cmpsl
popa
pop
and
mov
roll
imul
sub
cmpsb
test
arpl
pop
mov
rcrb
push
cmp
loopne
pop
fwait
push
outsl
scas
fs
mov
sbb
aam
jp
gs
jp
imul
cmc
hlt
ja
sub
sqrtps
cmpsb
mov
jle
stc
xchg
sub
subb
adc
fcomp
dec
jne
fisubl
roll
inc
clc
int3
bound
or
dec
fdivrp
push
xchg
incb
inc
lret
pop
lret
jg
mov
cld
jmp
repnz
shll
int
je
xor
inc
xchg
dec
xchg
inc
js
cltd
imul
test
mov
and
adc
mov
jb
xor
inc
pop
mov
nop
mov
mov
dec
jg
xchg
xchg
add
jge
dec
jae
pop
mov
lahf
lret
aam
int
cmpsb
lea
mov
fcoms
lock
lret
cmp
sbb
call
loop
and
pop
push
pop
fdiv
sti
dec
jno
xchg
xor
fstps
jbe
cmp
int3
imulb
cmp
mov
and
lret
xchg
adcb
data16
or
jnp
insb
xchg
loopne
lahf
cmp
add
mov
enter
test
fsts
sub
movsl
imul
std
dec
mov
test
stos
jae
daa
cmp
mov
loop
jo
sub
cmp
rclb
int3
scas
xchg
sahf
jo
fsubr
out
repz
das
push
int3
mov
or
and
pop
mov
popf
adc
movsb
ret
in
into
je
sbb
iret
lock
mov
mov
aas
arpl
popf
pop
sub
jbe
and
or
fwait
inc
sti
jnp
mov
nop
cmp
push
adc
sub
pushf
adc
jecxz
shll
ds
adc
jnp
fcompl
adc
pushf
fdivrs
popa
inc
mov
sbb
aas
in
hlt
sbb
movsl
and
adc
orl
negl
dec
and
ficoms
mov
push
out
push
inc
adcl
jg
pushf
jbe
cmp
scas
pop
enterw
mov
adc
outsl
jmp
inc
in
dec
push
and
sbb
add
imul
cli
cltd
insl
in
pushl
roll
xor
enter
push
sub
call
lret
adc
push
lret
cmp
mov
cltd
pushf
push
cs
stc
loop
arpl
gs
fsubl
mov
push
fsubr
add
fbstp
pusha
cwtl
jl
movsb
test
dec
mull
stos
and
mov
sbb
pushf
cmpb
add
jne
stos
cmp
sbb
lods
inc
jne
enter
in
jp
xor
ss
enter
loop
sbb
ret
jp
pop
pop
cmp
pop
push
push
daa
xlat
scas
lock
mov
cmc
push
or
add
orl
mov
pushf
and
aaa
mov
out
pop
fcoms
cmp
fcoml
mov
sarb
push
mov
aad
inc
mov
lods
fs
dec
movsl
jge
addr16
in
lods
push
sub
dec
sub
xor
test
dec
in
jo
orb
xchg
das
dec
pop
call
xchg
cmpsl
repz
rcr
icebp
xchg
fisttpl
cmpsb
dec
xor
mov
push
inc
cltd
in
in
xchg
lods
cltd
pop
mov
mov
adc
lret
sbb
or
push
xchg
shll
or
arpl
lods
nop
rcl
sbb
mov
mov
insl
mov
sub
fprem
test
ret
jg
push
cmp
jne
pushf
jmp
cli
rclb
inc
add
test
aas
lea
jmp
and
mov
cmp
and
sub
pop
mov
cmc
fucompp
and
out
adc
imul
adc
je
dec
inc
mov
push
rorl
cmp
cwtl
mov
mov
pusha
lods
lcall
clc
scas
sbb
mov
adc
aaa
xchg
jp
rcr
push
inc
push
sbb
arpl
sub
pushf
sbb
loopne
faddp
repz
xchg
adc
rorl
mov
lcall
inc
out
and
jb
or
stos
mov
mov
or
mov
mov
lret
pop
pop
sub
outsb
mov
mov
mov
add
mov
or
mov
jg
rcrb
or
scas
mov
fdivl
int3
aas
push
sbb
pushf
or
mov
cmpsb
inc
push
xor
pop
in
data16
inc
mov
dec
out
mov
lahf
hlt
das
shlb
imul
mov
das
mov
xor
daa
sarb
imul
test
sub
sbb
or
xchg
sbb
rcl
sub
out
fiadds
xchg
add
icebp
push
cld
cmpsl
test
dec
sahf
mov
lods
inc
dec
les
les
inc
xchg
test
lea
leave
xor
xchg
inc
fs
push
out
sub
and
int3
mov
jnp
cmpsb
xchg
dec
cmpsl
vmwrite
lea
dec
movsl
dec
dec
fldl2t
lahf
insb
xor
pop
jno
pop
cld
mov
movsl
lahf
mov
sub
stc
xor
cmp
das
xchg
mov
aad
and
data16
sub
cmp
out
jae
pop
push
mov
addl
xor
mov
sbb
pop
inc
cli
xchg
lret
cmp
dec
in
jmp
push
call
cwtl
fildll
and
inc
adc
mov
xor
movsl
mov
add
int
clc
mov
dec
mov
aad
repnz
xor
loopne
xchg
loope
or
dec
mov
inc
mov
and
lods
popf
xchg
jge
sub
dec
and
pop
dec
icebp
jl
cmpb
sahf
add
test
inc
add
shl
fs
aaa
push
cmp
or
pop
icebp
lret
jbe
mov
adc
mov
cmpsb
pushf
push
dec
push
cmp
sub
dec
adc
mov
out
je
and
push
xchg
cmp
jp
rcr
data16
pop
mov
jb
pop
shlb
inc
mov
inc
sti
mov
mov
push
nop
je
cmpsb
lods
xor
and
sbb
sbb
sbb
push
cmp
shll
mov
jb
loope
dec
xchg
jecxz
mov
cwtl
aas
push
or
fcoms
clc
xor
repz
mov
pop
outsb
sub
sub
nop
sbbl
repnz
sub
fbstp
daa
push
dec
jmp
addl
mov
mov
inc
jo
inc
pop
inc
out
xchg
add
lea
iret
mov
imul
lods
lea
mov
ja
cmp
push
lret
push
mov
das
andl
sbb
lock
and
add
shlb
lahf
popf
fnstsw
cmp
les
out
insb
and
jnp
stos
push
inc
inc
fucomip
int3
mov
push
aas
nop
xor
iret
mov
daa
lock
mov
roll
inc
rclb
fcoml
jns
inc
adc
int
cmp
xchg
sarb
xchg
add
pushf
mov
daa
movsb
ljmp
cmc
mov
jae
inc
push
je
pop
iret
out
into
mov
popf
popf
jle
scas
insb
outsl
push
and
add
in
jbe
mov
jnp
dec
loope
push
adc
push
push
mov
lahf
sub
shl
mov
mov
fdivrs
stos
push
sbb
dec
and
xor
scas
es
inc
cltd
adc
and
pop
das
loopne
aad
jno
jbe
cmp
xchg
jle
ljmp
pop
enter
mov
cltd
sbb
mov
and
call
add
xchg
adc
daa
mov
dec
subb
xchg
jno
cltd
jo
jmp
scas
mov
push
sub
adc
sahf
xlat
testb
out
xor
insl
sub
xchg
dec
subl
push
xor
adc
push
cwtl
inc
sbb
mov
add
sbb
je
cmp
inc
inc
pop
enter
mov
pop
dec
subl
insb
jns
ja
aas
out
mov
unpcklps
insb
jmp
out
dec
jl
push
cltd
in
jb
aaa
pop
add
in
in
mov
xor
and
adc
jmp
rcll
dec
ret
inc
dec
outsl
or
cmc
cli
mov
cmp
ficoml
xchg
pop
stc
mov
inc
jae
pop
mov
in
push
call
cmp
data16
adc
sub
ja
stos
lods
lahf
movsb
jns
mov
or
lods
mov
push
mov
testb
test
aaa
push
adc
test
xchg
pop
mov
mov
sbb
jno
arpl
mov
cltd
and
pusha
mov
xchg
outsb
lock
dec
dec
filds
adc
jle
pop
xor
fisubl
std
imul
push
pusha
push
jge
imul
adc
fimuls
enter
push
cmp
loope
add
xor
lret
mov
mov
xor
pop
mov
fsubp
pop
pop
test
cld
mov
cli
cs
jns
mov
jne
inc
mov
lret
sub
sub
pop
mov
pop
imul
mov
push
mov
cmp
cmp
xor
mov
push
insb
mov
inc
lret
mov
stc
adc
in
xchg
pop
repnz
popa
and
xor
stos
push
sbb
sub
mov
mov
jns
fnstsw
fistpll
sub
cmpsl
jecxz
and
cmp
adc
pop
mov
inc
sarl
mov
je
inc
cli
inc
xlat
pusha
pop
nop
andl
mov
call
cmp
nop
shlb
push
jmp
jae
jecxz
pop
push
and
cmc
jl
mov
rep
xor
pop
fildl
out
pop
add
stc
xchg
xchg
inc
mov
push
pop
sub
loop
nop
stc
clc
test
insl
mov
mov
mov
pop
aaa
xor
or
cli
push
scas
int
and
mov
and
mov
sbbb
fwait
iret
adc
jbe
scas
xchg
jnp
sub
orl
adc
ror
ljmp
ficomps
push
out
or
or
or
ljmp
cli
jno
xor
pop
js
dec
fucomi
mov
fdivr
sti
pusha
xlat
arpl
or
sub
pop
xor
jmp
or
push
mov
add
xor
mov
xor
imull
test
scas
outsl
fistpl
sahf
scas
pop
movsl
daa
mov
aaa
popf
std
gs
sub
ds
call
iret
loopne
adc
mov
add
mov
into
push
lahf
movsl
jg
sub
test
cmp
add
sahf
cmp
movsl
cmc
daa
js
push
cmp
pop
xchg
fsubrl
sti
or
leave
mov
out
mov
stos
pop
mov
insb
icebp
mov
mov
in
aaa
xor
je
xor
pop
sbb
dec
psadbw
inc
pusha
lret
in
mov
mov
jmp
out
push
je
and
aas
int
adc
add
adc
arpl
sbb
imul
dec
mov
mov
cmp
loop
dec
xchg
lret
fst
inc
test
pusha
sahf
sbb
or
into
cli
es
cmp
push
and
dec
test
jns
mov
xor
adc
mov
pop
xchg
xchg
out
jbe
add
into
lock
xor
ljmp
sbb
enter
or
sti
push
lods
outsb
pop
cwtl
push
les
lds
movl
fwait
or
clc
movsl
inc
push
dec
mov
sub
shrb
outsl
ret
cs
xor
dec
dec
cltd
es
stc
fwait
out
nop
ljmp
lcall
fmul
lcall
addl
popa
movsb
stos
and
pop
jo
fs
and
pop
into
insl
pop
push
rorl
xor
in
jecxz
stos
fs
mov
out
into
sahf
stc
fs
decl
and
rcrl
lahf
or
mov
sub
fucom
sbb
cmpsl
hlt
and
insb
sbbb
mov
mov
pop
push
test
iret
lds
jnp
dec
sub
jmp
gs
lcall
cmc
cmpsb
or
clc
stos
jmp
xor
xchg
xor
cli
and
jns
mov
testb
dec
arpl
mov
and
push
push
rcr
aam
aaa
stos
jb
mov
test
arpl
and
leave
stos
ret
shlb
shl
dec
pop
loope
add
shll
fists
push
clc
pushl
dec
cmc
cmpl
dec
mov
loope
shrb
mov
jmp
adc
adc
aam
mov
and
bnd
mov
cld
pop
xor
into
cli
adc
inc
aas
add
dec
aad
fisttpl
add
add
notl
push
ret
lahf
fcmovnu
mov
pop
jns
cwtl
xor
imul
mov
es
jle
in
add
hlt
ljmp
sub
iret
addb
call
outsl
das
dec
jl
pop
dec
cld
daa
jmp
jg
leave
jmp
jl
cmc
mov
jmp
sub
jmp
push
loope
cld
jl
xor
in
add
enter
out
or
mov
out
cmp
mov
das
pop
in
call
insb
outsb
xchg
scas
scas
xchg
jns
or
cmc
push
iret
xchg
xchg
lock
fwait
cmpb
lcall
xor
sbb
mov
in
frstor
aaa
fisttps
sub
gs
xor
inc
pop
mov
dec
dec
test
lock
not
mov
dec
sbbl
push
jne
add
int3
inc
stos
rorb
and
sbb
and
sarl
movsb
insl
fidivs
in
repz
mov
push
xor
inc
mov
frstor
push
or
idivl
ljmp
xchg
loop
out
pushf
and
or
and
jb
inc
mov
out
xchg
mov
in
push
das
daa
sahf
and
aas
pushl
pop
jecxz
loopne
pop
movl
dec
inc
pusha
mov
cmp
scas
xchg
dec
dec
mov
testl
adc
pop
mov
sub
mov
adc
adc
fs
addb
aad
das
mov
mov
lahf
mov
mov
mov
outsb
jp
inc
nop
mov
inc
sbb
mov
xor
or
unpcklps
sbb
lret
sahf
arpl
sti
fcompl
xchg
jnp
sti
mov
mov
lahf
mov
jge
stc
stos
xor
std
insb
ss
ret
jmp
jmp
dec
ss
movsb
xor
mull
ljmp
pop
sti
je
xlat
dec
xchg
sbb
mov
sub
inc
mov
adc
adc
aas
adc
adc
je
sub
pop
pop
push
fstl
inc
test
add
add
imul
or
adcl
cli
fldl
mov
xchg
inc
in
pop
cli
inc
aam
call
or
and
xor
cmp
sbb
jbe
sbb
sub
fiaddl
in
enter
ja
pusha
lret
mov
mov
out
mov
xor
push
mov
push
lret
shrl
jmp
mulb
imul
ss
inc
adc
dec
dec
outsb
sbb
leave
cwtl
scas
sti
push
inc
imul
cmc
loopne
int3
mov
cwtl
xchg
test
pop
inc
cwtl
lock
data16
imul
insl
in
mov
dec
pop
jp
mov
ds
mov
pop
mov
xchg
cwtl
push
mov
sbbl
xor
data16
xchg
mov
cmp
push
call
rolb
enter
dec
mov
scas
mov
adc
jno
call
insl
rcrl
pop
mov
pop
shrl
lods
inc
fldt
in
mov
popa
cltd
lea
gs
xor
stos
mov
shl
scas
xor
mov
pop
dec
inc
fwait
pop
mov
ror
dec
mov
mov
xchg
and
repnz
lret
or
jns
mov
push
insb
loop
pop
ljmp
mov
ficomps
jmp
movl
pushf
dec
or
and
mov
cmc
mov
dec
mov
xchg
lods
or
adc
daa
sahf
and
insb
arpl
mov
cltd
pop
out
pop
outsl
push
jno
int
mov
add
sbb
negb
dec
and
mov
or
sub
push
in
aas
sbb
clc
es
ss
mov
scas
mov
popf
fidivs
sti
mov
inc
xor
adc
lret
cmpsb
lret
ret
xor
inc
dec
sub
sbb
sbb
jnp
cmp
push
cmpsl
shll
jmp
insb
mov
outsl
jbe
or
pop
dec
adc
mov
cltd
dec
push
orl
test
xchg
aas
fisttps
dec
sbb
sahf
repnz
addr16
je
fcoms
adc
scas
mov
ds
jp
insl
imul
and
jns
jmp
mov
mov
sbb
ret
sarb
subb
in
loopne
sub
cmp
mov
push
fmull
jge
push
jbe
ret
adc
out
cmp
dec
test
loop
imul
hlt
xchg
rcrl
mov
insb
jmp
movsl
xor
insl
nop
mov
mov
cmp
pop
lock
sbb
out
mov
es
popf
inc
test
jl
into
out
mov
lods
arpl
dec
fistl
and
mov
adc
ja
outsb
ret
testb
xor
xor
lret
push
stos
jb
xor
mov
ds
lcall
pop
cmovge
test
inc
xchg
xchg
xchg
jnp
inc
or
movsl
rorl
ucomiss
add
imul
in
sub
hlt
subl
xchg
jle
popa
xchg
sar
lods
push
add
xor
cmpsb
repz
xchg
jg
push
sub
and
in
push
bound
outsb
and
mov
cmp
xor
clc
in
addr16
or
or
mov
in
jo
fisubl
js
dec
out
inc
xor
adc
in
aam
shl
cmp
out
jle
push
dec
inc
cmp
pop
bound
fcoml
pop
cs
adc
pusha
sbb
cwtl
add
push
and
les
cmp
scas
sbb
add
popa
jae
leave
iret
jp
gs
and
lcall
sahf
push
push
inc
jns
pop
and
mov
add
xchg
test
std
scas
lock
push
push
icebp
inc
or
sub
or
adc
mov
outsl
inc
dec
lock
fdivrl
dec
cmp
lods
inc
and
movl
xchg
add
gs
sarb
mov
imul
andb
lret
std
test
xchg
jg
insb
and
pop
ljmp
imull
mov
push
aas
mov
movsb
xchg
mov
sbb
inc
jecxz
cld
int
fsubrs
test
jg
xchg
loopne
test
mov
mov
cmp
push
or
push
inc
mov
jg
pop
adc
dec
and
lret
sbb
jnp
mov
scas
sub
sbb
adc
hlt
cmp
imul
pushf
scas
adc
pop
loopne
or
add
mov
ds
mov
les
testb
inc
pop
xchg
in
lcall
outsb
adc
insb
shl
stos
mov
xor
arpl
cmpl
ret
and
mov
lea
mov
adc
pusha
popa
lea
shrl
in
mov
call
dec
iret
sbb
push
clc
mov
push
inc
cmp
jg
ljmp
lret
js
adc
cmp
jg,pt
and
xor
insb
pop
pop
and
add
xor
push
mov
pop
sub
loope
dec
add
adc
lea
mov
or
jb
pop
xchg
cmpl
pusha
push
push
cmpsl
outsl
mov
mov
mov
bound
push
mov
test
mull
mov
push
and
xor
mov
bound
or
adc
testb
xchg
outsb
dec
inc
push
hlt
sub
push
movsb
or
jmp
and
and
daa
daa
add
mov
testl
push
cmp
cltd
jne
jecxz
push
sbb
js
sub
or
xor
std
inc
mov
jmp
sbb
cltd
test
jp
sbb
mov
sahf
ret
jbe
xor
cli
xchg
lret
adc
inc
push
lret
lret
out
out
int
decb
ret
and
clc
aam
cmp
cli
push
call
jo
jl
or
adc
pop
push
mov
and
ret
rorb
popf
aad
iret
adc
inc
push
dec
sbb
add
rolb
cwtl
scas
jnp
bound
adc
pop
mov
andb
sbb
js
cmpb
xchg
scas
sbb
or
sub
test
loope
das
iret
lret
cmpsb
mov
movsb
js
and
cwtl
and
out
or
out
jno
mov
pop
fs
inc
mov
mov
out
imul
jae
adcb
arpl
lcall
cld
sbb
and
lods
xor
popf
cmpsl
push
ljmp
mov
push
or
fld
xchg
clc
mov
leave
out
loope
sub
sub
sub
test
xor
cwtl
ficompl
dec
in
in
retw
rol
sub
add
scas
lret
mov
js
or
cmp
push
add
jno
adc
addr16
push
fdivr
les
pop
dec
adc
fimull
lret
pop
mov
fldcw
push
imul
in
loope
das
mov
mov
cmc
fstpt
pop
push
cltd
adc
mov
filds
test
imul
cs
dec
sti
cltd
cmpsb
rcrb
mov
mov
adc
shlb
cmc
push
rclb
mov
adc
jmp
pop
mov
sbb
aad
push
bound
mov
data16
inc
jp
ret
ret
jnp
and
test
dec
jne
insl
and
jo
repz
inc
mov
jle
out
outsb
cmpsl
insb
jno
popf
in
xor
cmp
ret
scas
pop
dec
popf
insb
push
push
dec
bound
push
rorb
decb
xchg
cmp
iret
movsl
sbb
test
xchg
mov
adc
add
inc
leave
cmp
adc
testl
mov
cmp
inc
nop
dec
mov
daa
cmp
pop
lret
cwtl
sti
in
test
inc
dec
pop
stos
fdivp
fldenv
cwtl
rorb
push
mov
xchg
xor
and
dec
pop
js
gs
mov
pop
frstor
icebp
aaa
inc
popf
cmp
int
cmp
nop
fcmovne
mov
jbe
fisubrl
dec
xor
jo
es
std
and
es
jb
sti
lretw
cmp
push
sub
ja
sarl
xchg
jno
mov
in
mov
jg
sub
xlat
xlat
scas
inc
dec
andl
push
push
and
insl
mov
push
data16
sub
js
subb
cmpsb
lock
addl
insl
mov
mov
lods
pop
ljmp
stos
fdivp
stos
mov
fisttps
iret
xchg
fisubs
mov
sbb
or
adc
movsl
js
mov
loopne
and
push
leave
push
lret
icebp
fldcw
test
std
adc
fcomps
adc
aas
jne
sbb
sub
mov
inc
out
cmp
jmp
xor
adcb
loope
push
dec
les
mov
loop
fnsave
dec
ret
dec
mov
outsl
enter
cmp
rcll
mov
into
mov
xchg
cmc
lret
lret
movsl
sub
pmaddwd
imul
adc
sub
xchg
pop
pop
jne
sbb
int3
inc
movsb
push
and
icebp
and
jle
jl
add
pop
pop
jl
mov
mov
fcomps
ficoms
and
fdivrl
popa
add
les
stc
pop
xchg
rolb
fidivl
and
adc
jle
sbb
xchg
sub
jbe
xchg
aam
insl
pop
sub
adc
fcoml
dec
lds
aad
outsb
inc
pop
mov
cmp
addr16
mov
pusha
arpl
dec
cmc
mov
xor
pop
addr16
insb
mov
dec
cmp
ja
or
add
sbb
dec
pop
and
xchg
adc
dec
xor
push
pause
and
lea
sub
stos
jecxz
and
lret
sub
lods
mov
jae
jle
jb
xor
push
ret
ret
fs
xor
mov
push
pop
out
xor
push
pushf
and
int
or
mov
fs
and
neg
cs
scas
ljmp
sarl
shrl
inc
jg
cmp
mov
test
sub
sbb
cs
ss
shll
dec
xor
pop
loopne
bound
pop
js
mov
sbb
sbb
addr16
faddl
inc
adc
out
shll
mov
mov
std
bound
cmp
cmpsb
ja
out
lahf
push
push
stos
add
cmp
popa
cld
cwtl
repz
cwtl
cmp
pushf
cmp
lods
sbbb
test
jno
pop
rcr
pop
cmp
sbb
mov
push
sbb
repnz
imul
adc
dec
inc
mov
sub
les
fstps
jmp
jnp
xor
pop
jecxz
shll
add
pop
shll
fidivs
pop
lcall
cwtl
mov
stos
dec
icebp
pop
or
stos
pop
fildl
cmp
jp
addl
push
pop
in
pop
sub
ret
adc
pop
mov
fsubp
vxorps
nop
les
cmc
cltd
add
int3
fidivrs
lret
cmp
jns
push
roll
lret
insb
mov
adc
les
push
mov
or
adc
and
popa
dec
xor
int3
ds
sub
sti
mov
jl
xor
jmp
lcall
pusha
mov
adc
loopne
out
outsb
loope
xor
push
out
aas
adc
mov
jecxz
add
out
int
pop
rolb
shl
xchg
or
pop
orb
mov
out
in
sub
lock
cmp
or
and
ficoml
cmp
xchg
popf
jns
adc
js
test
sub
push
rcrl
scas
in
dec
out
add
push
test
sti
into
es
push
mov
or
cwtl
jb
and
fstp
cmp
or
int3
cmp
jmp
sub
jbe
push
jp
sub
add
adc
lds
inc
pop
push
cmpsb
pop
es
mov
fistl
cmp
mov
push
mov
cltd
jle
rcll
mov
cmp
jp
xor
cmpb
jnp
adc
pop
xchg
mov
rcrl
test
xor
mov
xchg
mov
sbb
out
mov
cmp
mov
push
dec
add
out
stc
loopne
xor
jmp
loopne
push
jne
or
enter
add
fmul
mov
mov
fnstsw
sub
or
pop
insb
adc
xor
rcll
out
jle
lcall
push
mov
add
adc
add
pop
add
mov
and
fnstcw
stos
bound
xchg
mov
xor
push
fcom
xchg
xor
dec
xchg
sahf
cld
adc
aas
ss
fldpi
int3
repz
mov
jmp
std
sub
mov
mov
and
pop
xchg
out
xchg
xchg
and
imul
xchg
fwait
push
aam
fidivl
sbb
repz
je
adc
sbb
pop
add
xor
into
xchg
lea
adcl
cmp
inc
adc
clc
shll
inc
push
mov
pop
out
cmp
inc
cmpsb
xor
xchg
jmp
psubsb
lods
cmp
nop
out
pop
repnz
loop
adc
xchg
dec
xor
inc
cmp
lcall
xchg
sbb
sub
or
or
mov
nop
aas
dec
daa
or
pusha
cs
ds
xor
imul
nop
out
lahf
dec
inc
std
aaa
mov
and
leave
or
mov
sub
in
sahf
mov
fcmovb
xor
mov
jmp
aad
in
dec
cmp
test
mov
xchg
push
mov
mov
or
or
das
pusha
xor
movsb
push
fsubrl
sti
add
xchg
lret
mov
mov
into
or
test
dec
or
leave
pop
clc
xchg
mov
lahf
shrl
inc
dec
mov
dec
mov
inc
fs
roll
and
insb
mov
jo
leave
mov
mov
pop
out
ficompl
pop
push
push
negl
mov
pop
or
hlt
cltd
mov
or
outsb
mov
cmpsl
push
jge
xor
sub
fistpl
push
push
jl
cmp
sub
mov
adc
mov
pop
sub
popf
out
sub
jae
xchg
jle
rclb
movb
mov
inc
ret
jge
fcoml
add
jnp
repz
loope
sub
je
pop
inc
inc
int
gs
pop
add
aaa
dec
sbb
addr16
push
addb
in
mov
sti
lods
cmpsl
lock
das
dec
dec
inc
stos
ss
stos
jb
adc
out
rcrb
and
push
gs
or
xchg
mov
aaa
adc
dec
sbb
mov
jge
loop
nop
insl
jns
xor
add
fbstp
int3
mov
movsb
cmp
adc
adc
repz
arpl
pop
rolb
pop
push
cmp
jno
jmp
sti
loope
and
fdivrs
and
rolb
inc
jnp
mov
and
outsb
jmp
ja
or
inc
xchg
frstor
or
jnp
adcb
lods
bound
mov
cwtl
xchg
mov
dec
and
aas
sub
jnp
dec
push
cmp
imulb
ret
inc
scas
push
pop
xor
cld
add
in
sahf
mov
add
sbb
rclb
pop
push
or
jecxz
jecxz
dec
push
add
mov
aam
add
or
mov
lcall
in
dec
xchg
mov
into
cwtl
daa
into
dec
scas
add
cmp
xor
pop
out
push
sbb
mov
pop
out
test
push
icebp
xor
ret
jae
pushf
jno
imul
lahf
mov
xor
rep
inc
mov
into
adc
repnz
push
frstor
imul
mov
xor
inc
popa
jecxz
jecxz
add
sbb
movsl
fstpl
repnz
pop
jnp
inc
ljmpw
leave
in
jge
cmp
scas
cmc
sub
cmp
dec
jle
cmp
js
adc
leave
push
jg
lea
jg
jge
cmp
push
shlb
enter
in
or
push
and
pop
and
jne
and
and
jns
mov
and
shll
movsb
in
push
xchg
loope
inc
int3
leave
je
sub
mov
out
pop
aas
fwait
xor
scas
jp
test
aaa
mov
aas
fcomps
or
sub
dec
cmp
test
sahf
sub
imul
out
mov
adc
dec
lret
xor
mov
in
push
jo
sbb
cmp
test
mov
sub
rolb
and
pop
shll
and
faddl
mov
pop
inc
mov
mov
pusha
inc
icebp
popf
push
adc
push
rclb
pop
fsts
add
dec
fisubrl
xchg
sahf
stos
dec
cltd
xchg
lea
sub
xchg
lret
jp
jnp
sbb
mov
adc
out
mov
int3
rcll
inc
dec
pop
mov
movb
mov
mov
std
insb
out
cs
lock
jecxz
sbb
popf
mov
ret
jb
ja
stos
aad
ret
sub
popa
or
sub
xchg
mov
imul
push
icebp
xchg
pusha
orb
fisubrl
pop
lret
int
inc
arpl
xor
rorb
cltd
dec
not
cmpl
jg
fsubr
in
mov
and
jecxz
arpl
push
stos
aaa
mov
cli
dec
jne
mov
dec
pop
ret
das
pop
push
xchg
xchg
stos
loop
jb
add
pop
push
movl
pop
stos
push
enter
in
fidivs
loopne
and
pop
inc
push
sub
cld
pop
int
mov
pushf
cmp
aas
lret
movsb
loope
push
stos
xor
sti
dec
jg
sub
jbe
xor
xor
in
jge
inc
pop
mov
addl
pop
push
or
fdivl
hlt
inc
add
ljmp
aas
pop
mov
ljmp
dec
loop
xchg
lea
sbb
dec
sbb
sbb
mov
fists
pop
adc
xchg
sbb
adc
daa
repz
popa
xlat
mov
xor
test
addr16
pop
imul
pop
or
daa
and
push
mov
mov
sub
nop
xchg
aas
mov
cmp
ja
mov
adc
les
or
mov
ss
push
push
fdivrp
repnz
out
jge
push
addb
insb
mov
mov
repz
mov
inc
pop
xchg
mov
or
loope
ja
lds
jne
aam
dec
push
sbb
mov
ja
xchg
popa
shlb
push
call
mov
test
movsl
movsb
popf
std
jg
orl
fcoms
sub
imul
pop
jnp
subb
sbb
fiaddl
adc
repnz
shll
loopne
lea
push
std
scas
js
mov
imul
add
or
jmp
inc
xchg
out
mov
cld
xor
pop
insl
mov
inc
movsb
push
popf
pop
lds
sti
push
filds
loopne
hlt
cmp
mov
xlat
dec
mov
inc
adc
arpl
mov
mov
sub
inc
jp
dec
in
cmp
test
out
js
inc
push
cmp
mov
xchg
insb
ret
sbb
sbb
sarb
lea
and
sub
push
pop
les
jp
mov
xchg
lods
mov
adc
insl
test
imull
mov
pop
or
lock
movsl
lret
lea
mov
jb
mov
out
push
push
out
aaa
mov
mov
outsb
clc
sub
or
bound
xor
adc
jp
js
xchg
mov
ret
adc
test
mov
movsb
pusha
scas
cmp
and
mov
push
xor
fwait
popf
imul
xchg
int3
stos
popa
cli
mov
jae
push
std
mov
fidivl
les
mov
call
dec
test
pop
dec
inc
mov
sub
in
adc
dec
mov
loopne
pop
mov
lret
jo
pop
jbe
mov
sbb
js
dec
cwtl
pusha
push
pop
std
jle
jle
inc
lret
jmp
fmuls
int
inc
mov
mov
xor
cs
imul
inc
orb
jo
dec
lds
push
mov
push
les
stos
out
loop
cmpsb
lcall
add
mov
imul
hlt
test
fcomps
outsl
js
sbb
shrl
mov
lods
rolb
add
stc
lock
xchg
push
pop
mov
sbb
test
jbe
inc
movsb
fmuls
shr
outsl
jmp
mov
test
pop
jb
mov
ds
add
cltd
mov
or
jge
push
mov
icebp
in
lds
int
xchg
xor
clc
in
dec
xchg
jnp
std
xchg
out
or
inc
pop
jbe
sti
sbb
jae
xchg
lret
xchg
mov
mov
loopne
xchg
scas
in
mov
in
inc
sbb
add
fisubrl
cwtl
inc
aas
dec
lods
inc
test
sub
cmp
mov
mov
imul
xchg
sti
jo
or
arpl
sbb
inc
sti
mov
push
xchg
movsl
sbb
dec
daa
rcll
fidivl
dec
imulb
jbe
mov
add
mov
imul
dec
jmp
xor
mov
stc
out
cmp
mov
push
js
cltd
or
sbb
je
adc
xchg
mov
lahf
xorb
cmp
shll
sub
mov
mov
mov
sbb
push
bound
push
mov
jb
xor
int
test
test
jge
xor
dec
xchg
gs
push
mov
sub
sub
dec
mov
push
mov
test
repz
int
in
mov
mov
rolb
adc
sbb
push
dec
les
push
push
mov
xor
cmpsl
sub
xchg
sub
popf
mov
adc
in
sar
adc
repnz
scas
push
inc
test
loopw
int
ja
shll
test
cltd
nop
xchg
and
lret
sbb
cmc
xchg
jno
jo
mov
pop
xor
pop
cmp
and
lods
mov
add
jae
or
or
ret
adcb
mov
repnz
mov
push
dec
stos
loop
sarb
int
xor
dec
into
cmp
stos
adc
leave
lret
push
pushl
call
mov
fisttps
mov
bound
inc
pushf
jns
pop
pop
mov
aam
mov
xlat
pop
cltd
cmp
adc
bound
cmpsl
es
dec
add
ljmp
mov
shr
ret
cmp
out
in
cmp
mov
pop
xor
in
or
enter
inc
vpshaw
ret
xchg
cmp
and
jns
fs
mov
adc
enter
cltd
test
adc
test
rep
cmp
inc
xchg
pushf
mov
shlb
mov
jmp
imul
mov
xor
mov
setne
lea
je
add
sbb
xchg
xchg
inc
lcall
bswap
mulb
out
adcb
mov
mov
or
and
cpuid
aam
fildl
or
daa
jmp
das
ret
andl
sub
cld
and
adc
jecxz
push
in
daa
and
push
sbb
std
mov
das
mull
pop
cmpsl
xlat
inc
lods
aad
dec
sub
push
sbb
or
xor
pop
inc
xchg
add
pop
mov
push
push
ds
jae
fwait
lock
jnp
mov
fsubs
xchg
sub
adc
ret
cmp
jle
stc
int3
mov
sub
jnp
mov
push
xor
push
adc
ret
repz
loope
arpl
sub
add
inc
and
inc
in
sub
push
std
or
mov
lahf
xor
cmp
cmp
or
scas
jl
int
test
stos
out
fstpt
pop
out
xor
movsl
leave
sub
in
jle
inc
lcall
shll
xlat
gs
fcmove
fstps
push
outsl
lcall
mov
xor
dec
jbe
mov
hlt
lret
xchg
gs
xchg
mov
cmc
aam
sahf
outsb
fdivl
fistl
pop
jnp
mov
push
pop
jns
insb
pop
lods
push
inc
test
xchg
cmp
sub
dec
stos
xor
push
add
jns
clc
pushl
fidivrl
cli
cmp
leave
hlt
loope
cmp
adc
xchg
pop
mov
or
hlt
mov
or
rcl
shrl
adc
mov
adc
inc
push
inc
ret
vucomiss
jmp
mov
sbb
jmp
jecxz
dec
adc
fcmovnb
out
or
xor
xchg
inc
fisubs
ja
push
or
or
push
data16
mov
pop
jbe
sti
lcall
call
out
insb
adc
jno
out
fisubl
and
sar
or
or
sub
add
mov
ss
es
mov
test
lods
int
inc
je
and
jp
clc
rcr
ss
sub
dec
pop
lea
mov
mov
push
popa
sbb
cld
mov
xbegin
sti
add
add
in
or
sub
fst
lahf
xor
mov
jp
call
or
push
in
xor
lock
pop
adc
lock
bound
jno
cmp
int
fcompp
sbbb
jg
cmpsb
jno
pop
out
std
dec
insb
es
mov
ss
inc
jg
sbb
jg
rclb
cmpsb
test
lahf
sti
xchg
mov
inc
sub
ret
push
sub
cltd
lahf
es
repz
push
scas
stos
movsl
jo
push
test
das
daa
popf
adc
aaa
dec
add
dec
adc
cwtl
adc
enter
adc
sahf
jge
lods
js
pushf
jne
jne
gs
push
aaa
std
adc
imul
xor
je
es
rcl
cmp
in
cmp
pushf
mov
xchg
xchg
loopne
mov
add
int3
sar
mov
jne
push
outsl
out
adc
popa
cmp
xchg
daa
mov
jge,pt
inc
pop
scas
xor
or
mov
push
pop
mov
cwtl
pusha
jl
jp
dec
ficoml
repnz
fsubr
pop
pop
sti
fcom
pop
or
stc
lea
sub
and
mov
popf
mov
fisubrs
cmp
cs
bnd
dec
jne
stos
adc
ret
pop
cmp
scas
and
sub
fcomps
nop
sub
movsl
insl
push
xchg
jmp
sub
addr16
xorl
adc
pop
lods
jge
pop
inc
add
add
and
push
pop
jno
add
add
pop
mov
and
and
adc
repnz
cmp
into
sbb
cwtl
lret
addb
lahf
cwtl
dec
cmp
mov
sub
push
pop
outsl
out
push
ffree
mov
movsl
xchg
sti
mov
dec
int
fmull
pusha
xchg
add
adc
sub
sub
insb
pop
jmp
jo
pop
ret
pop
popa
adc
das
or
test
call
xchg
sbb
movb
aas
insb
aas
xchg
xchg
rolb
push
imul
mov
scas
sub
jo
lahf
dec
pop
lahf
sbb
cmpsb
sub
xor
mov
lods
push
mov
or
or
stos
mov
out
out
fdivrs
add
stos
add
ret
cmpsb
daa
ljmp
test
and
sbb
jo
in
push
sub
out
or
jo
xorb
cmp
fidivrl
fisubl
movsl
lahf
cmc
mull
fst
cmp
popf
sbb
xor
dec
inc
mov
sbb
sub
jb
sbb
ja
mov
aad
mov
hlt
add
nop
les
cs
xor
dec
sahf
flds
int
jp,pt
mov
pop
flds
lahf
xchg
push
jno
xchg
jne
cmp
jne
lret
jecxz
scas
fdivr
inc
cmp
iret
jecxz
test
aam
stos
aam
and
cld
in
subb
imul
std
mov
jmp
xor
push
mov
movsb
outsl
dec
movsb
sarl
mov
pop
repz
add
mov
push
add
cli
push
xorl
sti
xchg
jmp
jecxz
inc
adc
frstor
push
pusha
xchg
lods
pop
stos
jl
into
or
and
inc
xchg
lods
jg
add
xchg
and
out
mov
icebp
push
repnz
cs
push
ss
je
fisttpl
jle
insl
xor
aaa
lret
jne
xlat
cmp
insb
add
add
cmp
jb
rolb
push
scas
adc
add
fs
xor
cmpb
cmp
sbb
std
xchg
cltd
jnp
es
push
inc
mov
jb
enter
push
and
cld
pop
ja
cmp
nop
jno
clc
shl
sub
and
dec
adcl
and
rcrl
cs
or
cmp
shrb
xchg
xor
fs
insl
ljmp
sarl
out
lods
fcompl
or
lods
outsb
les
sarl
pop
in
add
rol
mov
mov
sbb
mov
pop
mul
pop
add
xchg
jl
stos
roll
xchg
mov
xchg
dec
out
addr16
pop
mov
mov
pop
cmp
push
call
adc
testl
cld
sbb
add
divl
out
pop
fwait
pop
add
std
mov
cmp
insb
lds
mov
push
mov
bound
mov
cmp
daa
and
fldl
push
push
mov
cmp
add
and
lods
xor
jp
xchg
pop
stc
mov
sti
pusha
dec
aam
scas
mov
arpl
cmp
pop
inc
sbb
jle
push
xlat
mov
mov
push
outsb
negb
push
mov
fnstenv
mov
cmc
push
mov
inc
add
stos
imul
pop
or
push
movsb
jmp
mov
sub
comiss
or
pop
lret
repz
adc
add
xorl
push
pop
jle
ret
xchg
adc
mov
mov
lret
icebp
dec
jb
mov
div
loopne
subb
dec
cbtw
xlat
clc
nop
sbb
adc
mov
arpl
out
mov
xor
out
jo
pop
inc
call
xchg
insb
and
pop
outsl
sbb
push
sbb
push
mov
rolb
dec
loope
dec
in
pop
ret
ss
pop
pop
fwait
jle
gs
pop
int
pop
adc
push
push
arpl
cltd
mov
mov
push
aaa
call
pushl
push
out
or
lds
pop
adc
sub
and
bound
sarb
mov
sbb
leave
add
imull
ret
pop
adc
adc
mov
mov
aam
and
fidivl
ds
pop
mov
out
pop
jp
pop
aam
pusha
repz
cwtl
sbb
cmc
pop
sbb
sub
insl
in
push
pop
xor
in
insl
add
test
jl
push
inc
sub
insl
imul
imul
mov
les
pop
into
dec
xor
lea
ret
icebp
loop
shlb
fs
insl
mov
xor
dec
pop
stos
push
mov
and
das
pop
ja
cmc
fwait
sbb
jge
add
add
lock
adc
aas
mov
into
and
lods
dec
jnp
in
movsl
test
insl
add
adc
inc
cltd
push
idivb
int3
mov
push
xchg
stos
jle
idivl
mov
das
cmpsl
fldcw
mov
and
call
or
xor
dec
dec
int
pusha
ficomps
and
xchg
pop
cmpsb
mov
fiaddl
js
loop
call
es
mov
dec
cmpsb
bound
sbb
xchg
loope
loop
loope
sbb
xor
fcmovu
mov
inc
shll
adc
mov
loopne
sub
dec
sub
in
outsl
cmp
sti
adc
add
leave
adc
and
and
pop
sub
pop
mov
jg
imul
dec
mov
xchg
fwait
iret
insl
fs
ljmp
cmp
and
mov
cmp
popa
lahf
sbb
mov
jmp
dec
adc
cmp
lock
imul
popa
mov
outsb
dec
pusha
jl
ret
ds
inc
movsl
mov
mov
or
stos
push
stc
inc
ret
fsubr
das
mov
int3
daa
dec
pushf
cwtl
cmpsl
dec
aad
jp
aaa
repz
flds
sub
sbb
jp
inc
popa
call
ljmp
pushf
cmp
push
imul
xchg
and
out
sub
cltd
lcall
push
sub
sbb
lret
neg
sbb
arpl
ljmp
dec
adc
push
popf
aas
fbld
sub
fisttpl
inc
lods
cwtl
fcomi
adc
popf
adc
fwait
ret
arpl
pop
cli
xchg
sbb
mov
xor
mov
sbb
lea
jmp
sub
shrb
shl
jae
pop
pop
les
inc
mov
cmp
aas
out
insb
movsb
mov
aaa
addr16
fstpl
adc
andb
pop
push
aaa
imul
hlt
jmp
repnz
add
filds
test
ja
jle
cmpb
adc
out
cs
loope
cmp
pop
inc
and
push
lret
es
jnp
ds
xor
push
pop
jl
inc
sbb
lods
movsb
out
aas
cltd
into
and
pop
movsb
push
insl
and
fwait
dec
push
sbb
jge
repz
pop
inc
or
mov
or
cli
aam
cwtl
fidivl
std
and
inc
dec
movsl
cmpl
push
cmpsl
in
add
adc
ljmp
push
jg
push
dec
mov
pop
push
addr16
repz
mov
and
xor
subb
xchg
mov
cwtl
adc
outsb
pop
inc
stos
lods
mov
pop
dec
test
inc
cmp
add
pop
jnp
shl
and
xor
fists
imul
jae
fsubp
insb
cmp
addl
in
xor
ror
and
and
cmp
call
cli
sub
rclb
js
mov
push
xchg
or
or
mov
mov
sti
sbb
pop
sbb
fadd
rol
stos
shll
lods
add
xor
push
push
dec
jle
fs
pop
cmpsb
test
hlt
out
ja
sub
sbbb
add
and
rcrb
xor
out
xchg
cmp
dec
dec
jo
sbb
test
mov
mov
enter
push
xor
lcall
push
mov
fs
repnz
repz
fldenv
cmp
dec
push
leave
pop
or
jg
inc
lods
outsb
push
cli
test
loop
sbb
xor
popf
mov
mov
and
int3
pop
aam
std
in
sbb
adc
and
adcl
lcall
popa
jmp
sti
outsl
fisttps
fmull
popl
mov
pushf
mov
or
cmp
mov
inc
int
scas
jnp
add
inc
test
mov
pop
pop
jo
cmpl
add
mov
inc
out
pop
imul
xor
scas
sbb
cwtl
popf
mov
jmp
pop
ljmp
fcmovbe
enter
enter
lret
into
dec
push
sbb
cmc
or
insl
and
cmp
pop
lcall
mov
add
sti
shlb
rcr
clc
addr16
push
scas
aas
int3
push
stos
and
push
sub
std
mov
nop
leave
ret
push
arpl
faddl
insl
insb
js
call
mov
and
or
ret
rcll
mov
pop
mov
or
cmp
add
arpl
pusha
or
fs
hlt
sbb
incl
insl
out
jle
cmpsb
push
shlb
sub
stos
stos
data16
outsb
jne
stc
jns
jle
push
xchg
orb
sbb
mov
cmp
sub
stc
xchg
xchg
cs
loopne
cwtl
shlb
sub
aaa
mov
enterw
cmpsb
xlat
push
cmc
cmp
sbb
divl
mov
ds
push
andl
test
sub
mov
xor
fisttpll
pop
add
push
aas
shrl
and
xor
add
sti
dec
jo
xor
push
mov
or
and
nop
cltd
push
adc
mov
leave
mov
popa
vpshlb
or
xlat
fs
add
mov
sub
mov
push
xchg
test
leave
in
mov
daa
or
and
out
lea
mov
mov
jo
mov
imull
loopne
mov
movsl
inc
mov
daa
and
mov
stc
clc
insl
call
sbb
sbb
push
and
std
rcr
stc
mov
fwait
loope
and
inc
lcall
fs
lea
mov
shl
mov
cvttpd2pi
cmp
clc
inc
cmp
sbb
into
add
sbb
mov
adcb
push
inc
ret
test
jmp
inc
addb
cld
leave
adc
loope
sub
pop
pop
adcb
or
sub
push
sbb
outsb
push
mov
jnp
or
mov
xchg
mov
mov
jnp
pop
ljmp
pop
mov
xchg
les
mov
rclb
sub
rcrb
pop
jecxz
inc
push
mov
out
mov
cwtl
dec
scas
int3
adc
cmc
insb
mov
cmp
mov
pop
bound
test
jae
add
inc
and
jl
cmp
add
ds
test
outsl
test
lret
sar
test
icebp
mov
jnp
adc
rcll
imul
pop
leave
ret
ljmp
lock
mulb
jmp
jns
iret
push
xor
xorl
push
and
dec
xchg
mov
lods
cmp
daa
dec
shlb
outsb
mov
xchg
ret
cwtl
pop
gs
adc
ret
cmpsl
sbb
add
test
inc
and
xlat
arpl
xor
test
aaa
pop
mov
test
adc
movsb
and
xchg
cltd
push
add
fstl
inc
push
sti
jnp
lods
xor
push
fs
ljmp
lock
insb
sbb
lahf
outsb
ljmp
call
popa
jo
enter
dec
jae
adc
enter
insl
inc
lea
pop
sub
leave
popf
xchg
xor
xchg
add
aaa
xchg
or
imul
pushf
lcall
pop
xor
cmp
push
cltd
jle
mov
imul
ficomps
mov
add
sub
clc
movsb
cmpsb
nop
xchg
mov
sahf
push
js
sbb
sbb
div
xchg
sti
xor
psubsw
fs
pop
loopne
data16
jae
lock
gs
xchg
add
outsl
cmp
pop
lahf
add
pop
jns
sub
xchg
push
fisttpl
ds
or
nop
fadd
or
xor
jle
nop
aas
rolb
ja
lods
wrmsr
sbb
inc
inc
addr16
fmuls
adc
adc
xlat
add
frstor
loope
mov
scas
or
pop
push
js
sbb
dec
pop
xchg
adc
bound
jo
xor
ja
mov
dec
insl
dec
ja
cmp
clc
pop
jmp
fcmovb
loope
clc
imul
es
dec
sub
lcall
sti
cmp
xor
push
mov
cmp
cli
cmp
mull
scas
repz
xchg
adc
pop
cwtl
in
xor
test
iret
test
inc
lcall
pop
rol
fsubs
aad
xchg
or
pushf
xchg
pop
scas
pusha
push
ljmp
mov
das
sub
mov
cmp
add
mov
mov
sahf
decl
movsb
or
pushf
ljmp
test
rclb
or
jnp
loopne
aad
sub
loop
mov
pop
pusha
mov
or
mov
inc
and
stc
inc
pop
in
bound
or
inc
push
cmp
mov
fwait
insl
loope
fcmovnb
dec
inc
movsl
inc
pusha
xchg
mov
and
or
push
push
call
dec
adc
jg
je
insb
jg
fistpl
xchg
popf
loopne
cwtl
addb
js
shll
insl
fistps
divb
pop
mov
popa
xchg
cli
fs
cmp
inc
call
rorl
in
sub
mov
push
mov
pop
sub
adc
call
pop
dec
dec
sahf
cmc
aam
stos
or
push
cltd
cmpsl
mov
daa
sub
je
mov
or
cmp
repz
pop
xchg
icebp
cmc
sub
mov
pop
pop
divb
pop
jne
clc
mov
fcompl
sbb
jmp
jle
and
xor
adc
repz
adcb
loop
icebp
sub
xchg
jp
int
pop
out
sti
int
stos
lret
dec
inc
sub
add
sbb
ret
shll
sub
testl
dec
xor
jne
dec
popf
sub
adc
test
in
sub
xchg
int3
jl
mov
into
in
aaa
das
sarl
lret
sub
jae
jne
jl
ret
movl
mov
pop
adc
shr
xor
push
adc
pop
popf
out
and
add
lret
repnz
pop
imul
cmp
mov
out
xor
xor
dec
push
jle
or
xchg
in
pushf
divb
test
stc
xor
and
push
pushf
push
loop
jb
jno
push
adc
mov
roll
inc
mov
xchg
cmp
pop
and
sbb
ljmp
xor
subb
insb
aam
pop
fildll
popa
adc
cmp
rcl
push
jo
ss
cld
xlat
pop
fisubs
push
rorl
fmulp
push
or
insl
and
mov
or
dec
mov
mov
jmp
push
insl
insb
ds
rorb
idivl
jmp
ret
adc
stos
mov
cmc
adc
mov
xor
jb
unpckhps
scas
push
cld
ror
sub
mov
jl
xchg
das
std
divb
lods
test
push
seto
dec
inc
pop
xchg
xor
push
jnp
pop
inc
sbb
xchg
dec
cmp
and
repz
mov
dec
imul
insb
cmp
and
lock
ffreep
jbe
imul
cmp
xchg
inc
adc
xor
fsubrs
call
cli
inc
xchg
aad
das
iret
dec
mov
shrl
inc
or
add
daa
lock
mov
sub
xor
dec
mov
lret
xchg
das
jecxz
inc
pusha
mov
xor
xor
mov
adcb
dec
outsb
les
jge
xor
add
lds
mov
or
lds
cmpsl
xchg
stos
lcall
idivl
xchg
xchg
push
movd
adc
cs
mov
out
shrb
sbb
jle
stc
adc
scas
lret
andl
addr16
fildl
xchg
or
push
scas
lods
adc
nop
xchg
or
xchg
sbb
mov
shlb
xchg
sub
mov
sub
xor
mov
test
cmpsl
into
xor
xchg
pushf
mov
ret
outsl
repz
mov
mov
pushl
push
cld
jnp
sahf
adc
rorb
pop
testb
and
out
test
push
std
subl
imul
and
fstpl
pop
jo
xor
clc
loop
inc
sbb
mov
out
sahf
mov
sub
push
mov
je
jmp
push
pop
nop
es
dec
sbb
sbb
mov
and
and
sar
add
bound
sti
xchg
loopne
test
insl
fiaddl
jnp
xchg
daa
js
push
pop
and
repz
jne
jle
push
add
dec
or
sbbl
movsl
mov
out
into
adc
mov
jno
lea
lea
loopne
and
ja
dec
addb
popa
dec
add
dec
aam
out
ret
fs
mov
jae
dec
sbb
das
sahf
mov
adc
inc
or
mov
pop
stc
push
cmpb
sub
add
outsb
rcr
incb
xlat
hlt
or
jb
sbb
subl
xorb
jecxz
pop
cmpsl
shl
xor
pop
test
mov
cmp
mov
sarb
int
iret
repnz
stc
outsl
jne
sub
addr16
and
movsb
call
xlat
lds
lahf
add
test
add
cmp
or
cmpsb
lds
adc
pop
and
leave
or
lock
and
hlt
push
lock
lods
jg
xlat
and
inc
cli
shrl
dec
dec
or
rcr
sbb
pop
cmp
rcrb
into
nop
hlt
jle
and
fs
inc
jno
js
xchg
jl,pn
jecxz
decb
pop
inc
fs
mov
xchg
mov
aam
mov
pop
add
sarl
or
push
sbb
ficoml
mov
out
fldenv
or
push
dec
jecxz
and
xchg
add
push
cmpsb
mov
sahf
mov
push
push
mov
cmp
cmp
repz
adc
fwait
nop
repnz
popa
xor
fcoml
movsb
xor
mov
test
sbb
call
loopne,pt
das
push
push
arpl
inc
inc
idivl
mov
push
loop
mov
jecxz
ds
sarb
jno
lcall
xor
push
test
xchg
scas
enter
shlb
test
xchg
stos
daa
int3
adc
nop
xchg
cmp
and
xor
iretw
call
and
or
loop
push
outsb
dec
insb
scas
sub
pop
movsb
sub
lds
mov
inc
sub
mov
xchg
mov
inc
fildl
lods
mov
sbb
cltd
fsubl
jb
addr16
sub
pop
cltd
mov
adc
pop
and
xor
hlt
mov
pop
pop
lods
push
subb
iret
fistps
stc
sub
sbb
push
dec
mov
mov
les
sbb
dec
xchg
adc
repz
mov
bound
popf
test
out
sub
js
shlb
fs
in
cltd
mov
in
xchg
jecxz
cmp
repz
cmp
rcl
push
xchg
jge
dec
imul
clc
mov
mov
call
push
mov
aas
into
fnsave
ret
out
adc
fstl
cmp
push
sarl
mov
pop
fcmovb
push
sub
cmp
cmpb
mov
add
fnstenv
dec
sub
inc
rol
cmpsl
int
arpl
pop
test
scas
mov
imul
lods
mov
lds
movsl
stos
fistpl
and
adc
insb
sub
fmull
sbb
jbe
and
repz
fwait
pop
push
xchg
add
outsl
out
out
lret
sbb
xor
cmpsl
cmp
mov
add
aam
nop
aas
push
pop
loop
jns
jmp
bound
jb
les
test
xchg
inc
add
icebp
subl
push
clc
adc
push
add
xchg
sub
xor
jbe
and
mov
xchg
dec
out
dec
mov
add
dec
jnp
icebp
adc
lds
stos
sub
in
stos
push
imul
xchg
mov
xor
or
call
movsb
pushf
xor
rolb
cwtl
mov
pop
je
push
cld
sub
aas
add
ljmp
jnp
sbb
adc
dec
pushf
pop
xchg
push
dec
xor
mov
pusha
cltd
sub
inc
dec
fbstp
in
test
mov
add
cwtl
adc
sub
mov
xchg
clc
cmp
out
xchg
pop
sbb
xchg
test
jge
add
mov
push
add
mov
movsl
fs
jp
mov
clts
aam
imul
in
and
or
lea
xor
dec
into
mov
mov
loop
push
stos
pop
push
sub
call
fstps
stos
pop
daa
sub
cmpsl
or
cwtl
push
sbb
fstps
or
mov
sub
insb
xchg
push
mov
xchg
mov
dec
test
jno
ljmp
cmp
xor
imul
cmpsb
sarl
sbb
ficompl
xor
xchg
dec
or
mov
mov
mov
adc
aam
pushw
mov
and
mull
pop
fs
mov
inc
out
inc
movsl
dec
cld
mov
fcoms
push
mov
and
pop
pushw
or
fbld
push
adc
mov
iret
shll
xchg
push
daa
addr16
pushaw
loope
and
push
add
mov
inc
mov
mov
popf
pop
adc
cwtl
shlb
lds
mov
decl
and
fcmovnbe
push
xor
lods
cltd
andl
mov
push
jbe
mov
xchg
addl
lods
jmp
in
push
mov
stc
movl
aas
lahf
into
dec
adc
adc
sahf
sbb
stos
push
imul
ret
lret
xchg
sarl
xchg
lret
jle
pushl
iret
scas
mov
push
cmpsl
hlt
xor
sub
stos
hlt
cmpsb
sub
loop
fdivl
cld
jnp
mov
jne
imul
mov
jg
xor
jmp
in
bnd
jg
xlat
fxtract
in
push
insb
xchg
mov
cmc
into
xrelease
push
fwait
popa
or
pop
push
sub
or
sub
mov
inc
dec
andb
in
rclb
loope
jmp
and
push
lods
jle
cmpsl
ret
test
lock
popa
lcall
sbb
push
jb
sahf
xchg
hlt
cltd
adc
push
jmp
or
test
aas
adcl
movsb
mov
sti
into
jb
jl
fldcw
pop
out
add
or
pop
loopne
into
stos
adc
sbb
xchg
fwait
jp
inc
xchg
test
and
push
dec
lock
leave
push
outsb
jo
mov
mov
add
sub
sub
jl
adcl
inc
iret
cltd
and
jbe
mov
adc
xchg
mov
lret
sbb
cld
sti
mov
adc
enter
pop
mov
lock
adcl
add
dec
test
mov
mov
or
push
or
xor
xor
out
movsb
inc
call
mov
dec
lret
jae
xchg
iret
dec
punpckldq
xchg
fdivrs
pop
or
imull
ret
and
cmp
inc
stos
aad
pop
bound
loopne
cmpsl
dec
push
sbb
enter
pop
sarl
lods
xchg
cli
mov
pop
loope
negb
add
int
stc
pop
sub
mov
mov
js
jae
stc
aaa
addr16
jmp
dec
or
inc
fists
adc
movsb
andb
inc
push
and
out
dec
xlat
testl
mull
xchg
sub
dec
inc
sub
adc
fprem1
jmp
rorl
or
ja
mov
dec
hlt
ret
and
bound
and
push
mov
jne
xor
lret
cmpsl
mov
enter
cld
push
int3
lods
jbe
jne
lret
out
stos
jo
ljmp
push
adc
mov
xchg
ljmp
push
lret
lods
inc
jo
mov
inc
mov
popa
push
push
sti
testb
adc
mov
add
notl
dec
rclb
sub
cs
pop
mov
in
les
or
popf
sub
mov
jno
imul
push
pop
xchg
push
out
mov
leave
push
das
sbb
jae
mov
test
jg
test
aad
sub
xchg
je
mov
adc
scas
sbb
lcall
xchg
cmpsb
mov
cld
mov
shrl
mov
nop
adcl
dec
ds
fimuls
jae
push
pop
inc
cmpl
adc
dec
adc
das
or
data16
fmul
es
xor
addr16
fildll
inc
xchg
leave
pop
mov
add
dec
pop
in
mov
and
lea
pop
rolb
and
add
sarb
pop
mov
jg
jecxz
pop
cwtl
out
jno
jns
mov
dec
xlat
mov
push
stos
jb
sub
lahf
or
jne
mov
inc
jp
std
fildll
fwait
or
push
scas
enter
pop
jae
jae
push
jle
mov
pop
pop
fadd
pop
or
mov
icebp
imul
shll
mov
mov
fnsave
test
out
mov
cmp
sbb
jnp
pop
mov
out
repz
inc
mov
sar
jmp
xchg
cmpsb
mov
pop
xor
or
ret
popa
icebp
cmp
mull
int3
lods
scas
out
pop
sbb
pop
xor
mov
dec
mov
pop
movsl
jno
mov
cs
xor
pop
mov
xor
mov
push
adc
fdivp
xorl
imul
dec
push
into
sub
sub
jo
fwait
jp
cmc
sub
daa
dec
sbb
push
out
jle
mov
adc
jecxz
divb
mov
lcall
ret
xor
jnp
aaa
sub
adc
push
sarl
into
mov
cmc
out
lods
cmp
into
rcrb
xchg
pop
js
gs
and
ds
xor
xchg
fsub
xor
loop
mov
jae
bound
sarb
fistpll
test
ljmp
orb
xor
fs
fldl
xchg
outsb
xchg
or
fisubs
sub
cmpl
aam
leave
ds
push
in
fstps
jb
repz
mov
hlt
nop
in
jae
hlt
and
mov
out
scas
or
fwait
jae
sahf
dec
mov
popf
les
sub
sbb
insb
scas
mov
jns
addb
nop
imul
lods
dec
pop
les
fs
jl
add
test
ret
clc
mov
les
andb
jae
negl
leave
lea
dec
fistpll
mov
push
or
fistl
sbb
add
mov
pop
push
mul
sbb
jp
xchg
out
dec
inc
icebp
mov
push
or
movsb
arpl
js
gs
imul
or
in
cmp
mov
clc
inc
push
lret
aas
mov
or
mov
insb
and
pop
pop
lcall
sti
cmpsb
xchg
in
xchg
aaa
mov
out
sub
adc
loopne
inc
dec
mov
sbb
cmp
lahf
lds
ret
in
out
xchg
rol
xor
cmp
inc
mov
bound
mov
xor
cmp
dec
mov
cmp
fstp
inc
inc
out
popf
popf
es
rcrl
mov
bound
lcall
xor
adc
push
inc
notl
fsubrl
sbb
and
pop
dec
dec
stos
mov
cwtl
stos
mov
add
sub
lahf
stos
lgs
mov
pop
mov
dec
push
push
insl
sub
push
and
pop
or
test
xchg
cld
fcmovnb
sbb
in
xor
bound
inc
addr16
repnz
lcall
mov
xchg
daa
sbb
je
lods
lods
jae
adc
lret
aad
daa
xchg
mov
shll
enter
cld
gs
xor
mov
sbb
xor
inc
scas
bound
loopne
test
sub
sbb
jb
or
cwtl
popf
push
pop
pop
cmp
or
cs
loope
mov
out
frstor
inc
inc
mov
das
shrl
fidivrl
pop
dec
repnz
mov
aam
test
es
mov
xor
adc
imul
sahf
add
jl
insb
scas
xchg
push
cmp
adcb
ds
test
and
insb
loopne
test
outsb
mov
mov
enter
mov
sbb
inc
mov
pop
pop
adc
mov
aas
nop
mov
ds
fbstp
jecxz
push
lds
repnz
add
lret
inc
fsubl
imul
cwtl
and
sbb
push
xor
popl
and
jmp
inc
xchg
xor
pop
cs
stc
cld
and
xorl
mov
sub
mov
pop
add
mov
insl
and
mov
popa
sub
adc
mov
pop
adcl
or
out
test
lret
cmp
xchg
cmp
xchg
mulb
mov
sub
cmp
sbb
lds
mov
mov
xchg
sbb
mov
lock
mov
inc
inc
push
aam
cmpsl
ja
lahf
xchg
aaa
push
sub
add
mov
push
enter
cli
add
lahf
xchg
outsb
int3
sbb
aaa
jle
xor
xchg
mov
subb
testb
cmp
test
pop
jle
cmp
div
cmp
gs
and
cmpb
int
dec
cltd
or
sbb
ret
mov
in
push
sub
mov
aad
bound
out
add
mov
out
adc
pusha
pop
ds
enter
frstor
fucomi
out
fldl
inc
pop
movsl
xor
pop
jge
enter
mov
adc
pop
fimull
repnz
sub
xor
ret
ja
dec
scas
push
enter
lret
mov
insl
adc
jbe
mov
fistl
ret
pusha
mov
mov
lahf
int3
add
movsl
pop
ljmp
ret
mov
je
cmc
lcall
icebp
sbb
ret
lret
ljmp
adc
ja
je
push
nop
jo
sub
push
cltd
sub
shll
loopne
jmp
xchg
jne
sub
mov
lea
inc
lret
jg
push
shll
or
pushf
adc
mov
push
out
push
push
insb
je
daa
je,pn
mov
out
cs
dec
and
push
inc
add
cmc
dec
test
das
sub
js
fistps
aam
dec
push
cltd
mov
xchg
xlat
mov
int3
gs
lds
mov
dec
loope
jp
or
cld
and
mov
fsubp
push
inc
fwait
dec
xchg
mov
mov
cmp
pop
int3
add
inc
inc
mov
bound
movsl
sbb
mov
cmc
push
shr
push
shrb
mov
movsl
jle
cli
dec
jne
int3
sub
aaa
incb
fdivl
dec
in
push
loop
clc
nop
hlt
inc
jbe
adc
pop
stc
dec
push
imul
or
sbb
jmp
out
mov
scas
iret
jmp
std
fnstcw
adc
fidivrl
push
data16
adc
pusha
loopne
sbb
xchg
mov
jg
mov
mov
cld
sbb
ljmp
mov
push
shlb
push
loope
test
xor
aam
pop
jge
cmp
dec
outsl
movsl
mov
ret
in
mov
lock
inc
cmp
cltd
call
sub
sbbb
out
inc
lcall
or
push
adc
inc
cmpsl
pop
in
out
sbb
call
jp
xchg
test
or
int3
and
iret
mov
mov
lds
inc
or
es
enter
pop
in
add
js
stos
shrl
mov
das
insl
sub
shlb
fildll
daa
inc
cmpsl
aaa
mov
inc
fldl
es
sub
enter
scas
jne
mov
rclb
sbb
cmpl
lods
push
cltd
sti
stos
inc
popa
sarb
in
popf
mov
xor
mov
int3
sbb
das
les
mov
sub
jg
dec
lea
xchg
dec
mov
push
inc
je
pop
ja
int3
shl
add
call
sbb
mov
test
mov
xor
dec
loop
dec
clc
insb
data16
mov
pop
loopne
es
sbb
sub
xor
out
push
sub
mov
pop
lea
pop
pmovmskb
movsb
jge
cmp
or
test
adc
shlb
jl
push
out
int
icebp
stc
adc
sbbl
aad
push
and
sub
lahf
stos
adc
xchg
and
mov
mov
fcoml
cld
dec
rcrl
ret
fcmovu
aad
sarb
adcb
rcll
int
cltd
pop
jecxz
sbb
es
add
popf
scas
sub
or
push
jle
into
adc
test
and
scas
sbb
xchg
cmp
xor
cltd
dec
add
jle
adc
mov
ret
int
or
xchg
or
xchg
popf
push
mov
mov
pop
pop
inc
sub
pop
or
test
rcrb
or
mov
lcall
leave
sub
adc
in
iret
test
cmp
xchg
xchg
cmp
stos
and
and
insb
lods
mov
sub
cwtl
xlat
and
stc
inc
push
jecxz
lea
jae
pop
push
dec
jle
or
mov
test
adc
xchg
sbb
mov
loop
push
repnz
je
xor
das
sub
adc
push
adc
pop
imul
push
push
sub
nop
inc
xchg
xchg
dec
or
add
pushf
jae
stc
jo
pop
js
inc
inc
mov
jo
psubq
in
popw
jmp
adc
jecxz
inc
mov
mov
ss
push
push
and
sub
xchg
xchg
out
inc
icebp
loope
jmp
scas
outsl
fistpl
mov
aaa
jg
lahf
icebp
add
mov
cli
inc
cmp
push
scas
jne
idivl
mov
adc
loope
pop
jns
mov
lods
test
cmp
xor
mov
xchg
xor
mov
push
pop
ret
cli
jnp
inc
loop
push
push
shrl
js
xchg
sbb
mov
mov
push
lock
sub
mov
hlt
pushf
fldcw
and
dec
sub
je
out
in
sbb
repnz
add
leave
xor
sub
mov
jae
or
clc
stos
lcall
adc
add
pop
nop
push
mov
ret
xor
rol
insl
mov
int
adc
in
xchg
add
jg
mov
mov
jg
xor
outsl
iret
fisttpll
mov
orl
or
rep
call
push
pop
push
enter
loope
stc
imul
aaa
mov
add
mov
idiv
push
dec
out
mov
or
pop
repnz
dec
inc
loope
jg
xlat
iret
call
cmp
and
jnp
out
sub
data16
xor
les
cltd
mov
rorb
mov
lds
data16
daa
or
pop
lods
arpl
sbb
fnstsw
xchg
cwtl
les
and
ds
in
dec
mov
push
jno
push
out
xlat
cmp
adc
jecxz
or
and
cld
fcmove
adc
lods
std
shl
sbb
nop
imul
pop
cmpsl
push
xor
push
or
and
in
cmp
lahf
cmp
lods
out
pop
aam
dec
jp
arpl
testl
cs
into
lods
pop
in
xor
leave
rolb
jmp
ljmp
out
xor
test
sarl
dec
scas
pop
insl
cs
adc
movsb
push
ret
push
pushf
idivl
sahf
inc
pop
dec
mov
lret
jbe
mov
test
push
inc
inc
pop
popa
push
mov
cmpsb
lods
xor
mov
mov
push
fucomi
jbe
xchg
mov
icebp
testb
imul
xchg
and
xor
or
filds
sti
cmc
dec
mov
mov
mov
int3
imul
xchg
mov
pop
testl
and
sbb
push
sub
dec
jno
mov
pop
movsl
or
movaps
sbb
add
sub
lret
xchg
sub
pop
jbe
out
cmovne
mov
outsb
add
cmp
outsl
jbe
js
xor
test
mov
insl
int3
sub
lods
mov
pop
orl
es
mov
pop
pop
and
insl
sbb
lock
mov
movsl
jge
mov
aaa
jmp
jg
loope
xor
fwait
cmp
aad
test
fs
or
ljmp
cmp
sbb
xchg
popf
mov
nop
mov
mov
xchg
inc
stos
loop
popa
rcrb
imul
inc
mov
mov
mov
sbb
lock
mov
dec
lcall
mov
aas
popf
das
loope
push
fbstp
call
jo
jmp
pop
and
popf
jecxz
xor
mov
inc
std
call
call
aaa
fmuls
mov
jb
sbb
jle
mov
lock
cltd
insl
push
xor
fists
pushf
pop
negl
leave
mov
jns
and
and
pop
xchg
loopne
push
push
imul
jecxz
add
inc
lcall
lods
cmp
push
out
out
push
jnp
lods
lcall
xor
xor
sahf
ljmp
negb
cmp
int3
cmpsl
fcompp
and
sbb
lea
mov
std
rcr
inc
sub
nop
daa
lret
aam
arpl
pop
or
lods
adc
fistps
push
inc
adc
andl
shll
push
dec
push
xor
pop
inc
mov
lods
add
cmp
dec
dec
ss
inc
mov
mov
xor
mov
js
sub
out
lea
pop
xor
xchg
outsl
jns
in
sarb
add
aam
push
pop
push
test
scas
into
or
sub
push
xlat
insb
mov
push
sahf
jns
jns
sahf
les
cmpl
dec
rcrb
cmc
incl
lea
jmp
cld
mov
mov
xchg
pop
dec
sub
inc
shlb
inc
lds
sbb
dec
cmp
ret
pop
cli
stos
outsb
cmp
xlat
pop
jb
repnz
fst
xchg
das
ficomps
mov
mov
rorl
shll
rcrl
mov
mov
push
lods
out
mov
int3
sbb
mov
outsl
loop
rcrl
loopne
mov
or
fucomp
jl
sarl
mov
push
jge
mov
in
mulb
les
jle
insb
mov
fwait
lcall
pop
mov
mov
jo
mov
mov
out
mov
xchg
les
lahf
movl
dec
test
xchg
cld
push
arpl
ljmp
cmp
int3
push
sti
sub
enter
insl
loope
mov
mov
mov
jmp
sahf
test
mov
in
xor
das
cld
or
xor
andl
out
out
test
fs
mov
or
sbb
xchg
pop
addr16
stc
mov
adc
mov
jmp
add
divl
pusha
jecxz
lds
mov
sub
sbb
cmc
notb
fstpt
dec
mov
dec
ss
test
push
xchg
mov
lea
mov
aaa
cmp
mov
xor
and
xor
cwtl
leave
out
add
rol
inc
mov
mov
shrb
ret
loop
lcall
pop
jae
or
imul
push
and
push
mov
sti
lcall
mov
popf
lcall
xchg
push
push
fstpl
add
fistl
movd
andb
bound
mov
mov
in
lret
add
xor
decl
add
sti
gs
cmp
inc
inc
and
test
orb
cltd
adc
inc
iret
shlb
xor
or
decb
mov
sub
stc
and
or
clc
dec
add
incl
call
xchg
mov
scas
and
ja
lock
adc
xchg
jae
push
out
inc
xchg
mov
mov
dec
adc
xchg
pop
icebp
in
mov
adc
inc
xor
xchg
test
sub
xchg
cli
movsl
and
insb
inc
das
jns
rorb
cltd
dec
dec
or
mov
mov
aaa
lret
inc
jmp
ror
pop
cmp
or
lret
sbb
cs
repnz
insl
adc
push
aaa
rorb
or
dec
pop
arpl
das
imulb
icebp
sbb
negb
popf
inc
mov
dec
lret
daa
mov
addr16
mov
cmp
test
sbb
mov
inc
std
insb
add
dec
fdivs
scas
pop
shlb
stc
cmc
shll
scas
int3
ljmp
inc
fstpt
xchg
sub
push
cltd
rorl
push
cld
dec
cmp
and
xlat
filds
pop
push
push
mov
int
jecxz
cli
dec
addl
push
mov
or
roll
xchg
xchg
cli
mov
sahf
pop
or
cld
lret
push
ds
jne
fsubs
test
xchg
cmp
imul
and
sub
mov
dec
pshufw
xor
jg
mov
cmpsl
pop
xchg
sahf
lahf
out
mov
xchg
loope
sub
mov
or
jns
adc
or
sahf
test
push
and
aas
sbbb
or
and
dec
popa
in
fcmove
mov
jge
xchg
js
sbb
les
loope
les
jle
xor
sub
scas
lds
dec
mov
mov
sub
arpl
movsb
daa
sbb
testb
adc
jmp
mov
cmp
movsl
add
inc
inc
out
xchg
or
stos
add
ret
mov
xchg
aaa
in
fistpll
std
mov
ret
mov
pop
ucomiss
push
pop
not
int
lock
es
push
adc
sbbl
add
pop
lcall
aaa
test
sub
pop
dec
mov
movq
inc
inc
lahf
jl
xchg
sbb
dec
xchg
in
sub
notb
or
lds
cmp
pop
xor
pop
gs
fdivrs
cs
std
lea
icebp
pop
outsl
sti
push
cmp
xorl
mov
xchg
shr
adc
mov
sub
inc
lahf
std
fcomip
sub
mov
sub
aas
ret
mov
cli
xchg
cmpsb
outsb
in
out
cmp
mov
and
call
mov
pop
xor
or
xor
xchg
xchg
pusha
outsl
outsb
fdivs
sub
dec
fmuls
pop
out
sub
jbe
mov
mov
adc
out
pop
pop
ficomps
enter
mov
incb
inc
shll
inc
lea
imul
jno
dec
cwtl
in
shrl
xchg
adc
xchg
adc
imul
xor
imul
push
fiadds
inc
popf
pop
jbe
lcall
aad
fidivrl
inc
xchg
test
jnp
adc
inc
sbb
sub
cmpsb
push
cli
hlt
add
jne
aam
outsl
test
mov
shlb
xlat
test
mov
out
mov
lahf
cs
jno
push
add
out
mov
mov
mov
mov
add
aas
cmp
inc
pslld
adc
das
or
mov
mov
ja
jne
sti
out
adc
add
std
mov
push
mov
xor
xchg
jo
in
jp
xchg
jnp
and
aaa
std
js
mov
lret
jno
sub
push
imull
fld
lahf
mov
aaa
sbb
in
int
jae
test
fbstp
xor
sbb
mov
or
sbb
push
fdivl
stc
out
aad
push
and
sbb
mov
dec
xchg
push
out
cmp
and
and
icebp
mov
push
or
neg
add
js
outsb
rcll
movq
leave
jbe
xor
aaa
pop
or
pop
pop
es
int
sub
aam
and
add
add
addr16
xor
movsl
pop
in
mov
loop
cmp
and
adc
mov
and
mov
mov
stc
add
mov
jne
ret
arpl
push
scas
aam
mov
push
ficoms
sub
lds
push
inc
iret
jmp
or
fcomps
out
cmp
xchg
popf
je
in
repz
push
int
xor
push
int
in
push
add
scas
inc
test
adc
pushf
pushf
jle
sbb
mov
push
loop
adc
jge
sbb
fucomi
jp
or
ljmp
out
fwait
enter
push
add
pop
xlat
add
lahf
jecxz
jecxz
push
popa
sbb
pop
pop
stc
test
call
dec
popf
lret
mov
lahf
mov
push
sbb
push
xchg
jnp
cmpsl
push
ds
mov
sar
icebp
mov
adc
add
push
sbbl
cmpsl
jp
jg
std
stos
lret
shlb
ret
or
add
inc
cmc
pop
or
movsl
add
aas
pop
fucomp
das
jge
bound
sti
inc
test
mov
cli
mov
je
jo
icebp
mov
or
icebp
imul
fcoml
loop
imul
hlt
push
cmc
mov
bnd
std
in
cmpsb
lock
and
sub
or
inc
imul
push
push
pop
outsb
mov
sbb
or
insb
jno
jb
data16
mov
imulb
push
push
fisttpll
mov
sarl
pop
sbb
pop
gs
xor
ds
fcmovu
add
mov
push
jge
cmp
stc
jge
xchg
enter
mov
mov
mov
or
push
repnz
pop
iret
add
scas
leave
push
cmpsl
and
pop
cmp
sahf
testb
jae
inc
jns
out
fmuls
inc
cltd
cs
pushf
rcr
sbb
je
sub
xchg
jnp
mov
clc
cmp
jno
loopne
lret
stc
pop
push
scas
mov
sbb
sarl
jno
cmpsb
arpl
pop
and
sub
push
pop
mov
jg
aad
fcom
mov
xor
in
mov
faddl
sub
daa
scas
js
ds
stc
lock
jg
cmp
subb
cwtl
sbb
mov
dec
jno
and
enter
or
movsl
es
sub
adc
push
jg
add
into
daa
gs
dec
dec
test
out
stos
cmc
fwait
fadds
mov
pop
push
xor
adc
xor
and
mov
je
lret
xchg
and
ret
repz
adc
adc
lahf
imul
sbbb
subb
push
push
jae
sub
pop
add
inc
ss
movsb
sarb
repnz
inc
mov
lock
subb
fcmove
mov
in
adcl
or
sbb
inc
mov
stos
push
leave
jae
in
or
loopne
pop
or
andl
test
xchg
mov
mov
dec
sbb
dec
push
mov
div
sbb
or
and
mov
dec
pop
and
adc
sub
dec
mov
sbb
push
nop
jnp
cmpsb
xor
fs
std
inc
aas
and
aas
sbb
cmp
hlt
jmp
xor
dec
out
ss
lahf
movsl
pop
inc
lret
mov
inc
cld
jno
mov
mov
xchg
popa
es
sub
int3
stos
xor
imul
dec
add
jbe
mov
mov
xor
pop
adc
lret
cmpsb
mov
lock
popa
call
inc
pop
vmwrite
or
js
lahf
jmp
xor
mov
pop
cld
ret
mov
jo
xlat
in
enter
mov
or
and
pop
inc
push
aaa
fstpt
jo
push
cs
int
jnp
pop
in
rcll
pusha
sahf
cmp
inc
add
shr
and
xor
add
xlat
mov
jae
mov
scas
xor
mov
mov
adcl
xchg
pop
leave
stc
xchg
shl
popf
lock
stos
sbb
fldcw
stc
lods
xchg
lret
push
pop
or
into
decb
sub
negl
into
jno
xlat
xchg
pop
inc
loop
add
pop
ss
cltd
xchg
in
sub
loope
push
jle
pop
mov
insl
shr
mov
mov
jge
loope
sahf
or
mov
repnz
stc
sub
mov
outsl
decl
enter
mov
pop
and
mov
rcrl
nop
mov
out
push
inc
rcrl
mov
fldenv
or
and
mov
mov
hlt
out
je
mov
cmp
sbb
js
mov
sub
xchg
adcl
ret
stc
es
fsubrs
fcom
out
sbb
fcoms
testl
repz
xchg
jns
jns
or
popf
ret
out
lea
push
xor
jl
pushl
xor
push
loop
lcall
and
arpl
mov
inc
cmp
jae
cltd
inc
or
mov
fcmovnb
stos
adc
or
jge
pop
out
std
cmc
test
ja
call
add
push
fstpt
push
arpl
stos
sbb
sbb
ficompl
fdivs
or
inc
push
jp
out
adc
sub
sbb
in
inc
sbb
adc
mov
mov
inc
out
icebp
dec
pop
jg
lds
push
in
jno
dec
pop
addr16
out
adc
cmpsb
std
jo
mov
pop
andl
pusha
cld
mov
mov
pop
mull
jg
xor
xchg
lock
into
sti
je
test
pop
insb
pusha
les
dec
mov
nop
fisttpl
mov
pop
or
adc
fimuls
and
sti
or
movsb
dec
sti
and
mov
aaa
clc
dec
jns
cmp
sarl
fldt
dec
jmp
cmp
inc
jb
mov
push
jmp
icebp
and
sub
mov
mov
addr16
mov
dec
enter
jp
inc
rcr
nop
pop
pop
xchg
jbe
jge
push
cmp
shlb
aas
out
pusha
push
jle
shlb
icebp
sub
dec
leave
mov
out
mov
mov
push
cli
dec
push
pop
mov
iret
cmpsb
dec
shlb
aam
or
pop
push
bound
lock
mov
inc
mov
and
idivl
rcll
fistps
stc
push
cmc
xchg
mov
cmp
mov
clc
test
hlt
mov
cmpsl
pop
mov
cmp
int
in
inc
lcall
data16
mov
xor
fcmovnb
sbb
jl
stos
enter
sarl
mov
jp
popl
int
fiadds
pop
sbb
sarl
iret
lcall
mov
andl
push
out
ficoms
jge
lret
pop
mov
mov
cld
das
ret
mov
xchg
ret
psraw
addr16
pushw
nop
and
push
nop
cmp
jecxz
test
pop
inc
push
fs
scas
es
or
add
fdivl
jl
mov
pop
add
pop
in
arpl
fadd
mov
mov
pushf
push
sarl
adc
aad
xchg
mov
in
int
add
out
les
fnstenv
jle
jbe
xor
out
jmp
fidivs
and
push
pop
mov
pop
or
sub
scas
das
xchg
bndldx
and
fstl
push
into
insb
int3
cmp
mov
lahf
imul
xchg
ja
cli
push
subb
int3
pop
adc
cmp
mov
sbb
sub
pop
daa
mov
sub
xor
dec
jmp
es
mov
dec
das
add
test
aam
cmp
loope
rcrl
mov
mov
pop
pusha
and
test
sti
jbe
iret
scas
lods
add
sub
xlat
pop
pop
imul
test
xlat
test
inc
push
lret
imul
sbb
and
loope
int3
cmp
lds
mov
cmp
js
imul
jle
int
mov
jbe
sub
dec
lods
mov
xchg
xchg
mov
daa
aam
scas
insb
clc
xchg
pushf
mov
adc
push
sub
sti
mov
cmp
pop
or
jno
div
mov
pop
push
xchg
mov
ret
sbbb
lret
ss
hlt
and
mov
sti
arpl
iret
mov
dec
xchg
rcrl
xchg
inc
cmpsb
dec
or
lods
inc
data16
leave
nop
lcall
scas
pop
xor
sbb
test
lea
mov
pop
es
pop
push
xor
pushf
push
fwait
pop
add
inc
es
test
movsb
popa
push
outsl
popf
sti
fs
inc
mov
mov
xchg
leave
push
sub
cmp
mov
in
inc
enter
xchg
in
lret
sbb
insl
imul
aas
push
cpuid
cmp
test
les
or
adc
dec
rcrb
das
ljmp
dec
cmpl
aas
sub
in
in
or
out
aaa
cld
push
adc
sti
aaa
enter
fwait
sbbl
test
fsubrl
xor
repz
pop
pop
fmuls
push
and
test
pop
inc
sub
cmc
or
sbb
sti
jg
dec
insb
dec
fidivrs
sar
add
adc
pop
mov
scas
int
jle
xorl
xchg
xor
mov
icebp
mov
repnz
rorb
out
mov
mov
and
dec
adc
in
cmp
push
pop
push
outsl
int3
xchg
xor
cmp
movlps
add
dec
gs
jmp
in
rol
data16
pusha
sub
add
je
sbb
test
cmp
sbb
mov
mov
mov
fwait
sbb
jl
mov
push
jle
cmp
push
test
in
cmp
nop
insb
rcll
mov
push
andl
push
xchg
std
shll
jae
movl
out
in
rolb
add
clc
mov
mov
sahf
test
movl
and
lret
enter
ror
ds
cmp
xor
sti
xor
out
sub
mov
es
mov
lret
add
test
lods
popl
jecxz
movsb
pop
pop
mov
fldt
iret
sbb
inc
or
mov
ljmp
adc
mov
imul
ljmp
pop
cmc
cli
out
sub
cmp
xchg
out
mov
nopl
jne
sub
dec
outsl
pop
pop
fmul
or
jnp
jecxz
pop
jmp
jnp
sbb
mov
add
jge
xlat
pop
cmp
sbbl
jns
sahf
pop
mov
inc
insl
jle
sub
leave
loope
push
enter
insl
pop
stc
jg
pop
inc
cmp
jbe
loope
scas
cmpsl
xchg
aam
add
addb
dec
push
sub
outsb
inc
arpl
sub
mov
add
xchg
pop
mov
fnsave
ret
inc
push
adc
arpl
pop
jne
push
ja
xor
xor
sub
mov
loop
psubq
sbbl
sub
filds
loop
js
jnp
iret
lods
fs
inc
xor
test
call
ljmp
xchg
jo
jl
imul
push
mov
subl
cwtl
cmp
mov
cmp
dec
jl
das
xchg
movsl
test
mov
fbstp
addr16
int3
pop
pop
and
and
in
ja
repz
and
leave
cli
mov
adc
fs
inc
inc
test
loopne
jne
int3
adc
mov
sbb
jmp
cmp
cmp
lcall
pusha
mov
push
ja
inc
and
mov
jp
and
pop
mov
push
cmp
lea
popa
sbb
push
lcall
lods
sub
test
dec
ficompl
enter
cltd
cltd
adc
sarb
jl
mov
aam
add
mov
mov
xchg
xor
subb
pop
xor
dec
xchg
mov
jl
cmp
pop
mov
mov
and
jmp
data16
vmovhps
xchg
add
ss
orb
scas
mov
les
xchg
xchg
lret
add
jl
adcl
in
ss
cs
das
xchg
iret
loope
lret
and
lret
jae
pop
inc
arpl
fidivs
dec
fimull
jno
test
call
jns
sbb
push
cmp
mov
or
out
leave
add
xor
jb
pop
stos
xchg
sub
adc
outsb
and
mov
cmpsl
clc
andb
int
shlb
je
add
sub
push
adc
gs
dec
mov
mov
xchg
dec
dec
mov
mov
add
shll
fists
sbb
and
add
cld
repz
xor
sbb
icebp
or
xor
pop
sti
setne
and
jns
out
clc
jb
xor
iret
fsubrs
ja
mov
cmp
push
xor
movsb
aam
movb
cmpl
cmpsl
fsubrs
or
insb
xor
pop
ds
pop
shrl
gs
add
loop
or
sbb
xor
ss
shlb
movsl
mov
mov
pop
ds
push
insb
clc
jmp
jg
stos
dec
hlt
mov
sbb
ljmp
and
jae
stc
dec
adc
ret
add
and
daa
clc
aam
xchg
mov
test
mov
sub
inc
clc
and
mov
xchg
adc
les
movsb
inc
lods
mov
dec
adc
es
and
sti
push
mov
add
decb
jns
test
mov
add
fildll
add
sti
sbb
loope
pop
adc
mov
cmpsb
aaa
dec
inc
pop
sub
dec
mov
aas
je
push
mov
mov
pop
ja
jb
mov
adc
cmp
das
icebp
xor
inc
mov
pop
sub
mov
loop
mov
nop
das
outsl
arpl
mov
xchg
dec
out
test
jge
std
xchg
js
cld
cmp
cvtps2pi
add
mov
dec
jo
mov
outsb
xchg
or
xor
push
mov
bnd
outsl
and
lcall
xchg
push
test
xchg
in
cmc
lcall
in
out
mov
jno
xchg
js
in
cli
and
dec
add
push
mov
fistpl
fprem1
adcl
into
push
jecxz
ror
cmc
sarb
inc
call
inc
in
out
adc
xchg
cmp
std
jbe
movsl
imul
ljmp
jg
out
xchg
test
cmpb
cs
loopne
stc
push
adc
fisubl
push
or
jmp
cmp
jmp
add
lret
jne
mov
and
stc
cmp
arpl
addr16
cmp
inc
mov
add
push
xor
js
cmp
cmpsl
mov
or
stc
cmp
sbb
out
arpl
dec
push
sbb
jae
pushf
xlat
dec
dec
and
iret
divl
lods
xlat
adc
ljmp
push
outsb
mov
divl
inc
lock
pop
sub
add
dec
ss
and
pushf
xor
test
xchg
mov
mov
sub
push
out
adc
adc
in
jnp
sbb
push
mov
movsl
das
sub
movsl
jge
adc
fisubl
mov
decl
in
pop
mov
xchg
push
xchg
ljmp
push
dec
int3
adc
data16
xchg
adc
pop
fnsave
inc
shlb
pop
ror
lea
or
mov
pop
sub
movb
jl
mov
mov
loop
xor
mov
data16
cmc
ss
mov
pop
mov
sbb
stos
daa
std
movsb
out
notl
cmp
mov
cmp
test
push
adc
out
mov
xchg
cmp
jle
leave
pop
mov
call
es
scas
out
mov
mov
jg
fstpl
xchg
and
arpl
enter
adc
test
xor
cmp
and
enter
or
aas
outsb
xchg
or
mov
sbb
sarl
jno
mov
or
jb
shll
add
jge
mov
push
sub
adc
ja
mov
test
adc
fists
mov
adc
int
mov
mov
in
xchg
imul
adc
mov
xchg
inc
mov
mov
fwait
xor
push
push
lret
jno
lds
xchg
adc
or
pop
fwait
mov
ret
lret
aaa
xchg
mov
xor
pop
pop
jecxz
dec
rolb
mov
and
icebp
cmc
sub
fcompl
and
fisttpl
mov
jbe
testb
sbb
insl
lock
adc
aaa
pop
and
inc
imul
sbb
ss
sarb
shrl
jg
sub
popf
mov
lcall
sbb
loop
movsb
cltd
xchg
test
out
xlat
fldcw
int
mov
pop
xchg
pop
mov
call
bound
inc
jo
les
mov
fcmovnb
mov
dec
adc
fadd
adc
jecxz
cmp
shll
adc
shl
cmc
push
fcompp
mov
dec
mov
fs
gs
lret
jns
lock
jo
and
ja
mov
dec
in
push
popa
shr
jns
insb
pop
int
sub
jae
out
int
xor
cmpsl
imul
negb
test
std
mov
es
xor
je
mov
push
dec
insb
les
push
mov
cs
sbb
sbbb
sahf
dec
push
outsb
fs
shrb
in
out
js
mov
sbb
xor
sub
jbe
in
inc
mov
std
push
cmpsl
arpl
ds
lea
nop
mov
and
cld
xorb
adcl
xchg
stos
cmc
sub
cld
ret
enter
rolb
nop
xchg
mov
and
jge
scas
xor
or
loop
push
into
daa
lahf
push
in
mov
jb
add
xchg
popa
cmp
lret
add
dec
sub
or
fildl
dec
leave
call
js
mov
shrl
sti
ret
adc
ljmp
cli
jo
xlat
jl
and
lea
aaa
mov
add
mov
sbbl
push
jle
inc
ret
xor
dec
sahf
jae
and
mov
pop
repz
inc
and
sub
inc
pushf
incl
and
std
outsl
xchg
mov
int3
repnz
je
mov
sbb
dec
sub
jge
inc
inc
and
fists
into
or
push
pop
push
outsb
dec
dec
lahf
cmp
mov
sbb
inc
sbb
iret
mov
xchg
or
mov
inc
add
scas
ret
push
or
in
sbb
stos
in
mov
jp
add
lea
fadd
cmpsl
sbb
cmpsl
loope
mov
ret
xchg
push
jo
inc
sbb
arpl
stos
adc
call
xchg
and
pop
mov
xchg
cmp
dec
mov
stc
mov
pop
call
cmc
push
je
push
mov
mov
ret
mov
jb
shlb
js
popa
pop
add
push
mov
cltd
insl
xor
inc
push
aam
cmpsl
fldcw
mov
cli
mov
pop
sarl
mov
dec
push
in
xlat
mov
hlt
pop
data16
pop
add
dec
xchg
add
mov
ficoml
jecxz
pop
xchg
mov
fldl
pop
in
jg
jno
daa
or
out
inc
dec
sbb
fmull
loope
push
xchg
mov
popf
push
enter
cmc
sub
nop
jl
mov
xchg
dec
cmp
mov
pop
notb
jb
push
aas
rclb
jmp
pop
addr16
sbb
sar
rclb
es
xor
inc
pop
fistpl
fisubrs
ljmp
push
negb
mov
out
sub
add
add
xor
xchg
xchg
outsb
shll
aad
mov
cmpsb
bound
adc
dec
pop
rol
sti
ljmp
xor
fildll
mov
cmp
ss
add
cmpsb
mov
ret
aam
into
xchg
inc
xor
aam
fcomip
fs
sbb
gs
push
leave
std
pusha
test
mov
xor
leave
es
gs
cltd
inc
dec
fidivl
fisttpl
cmp
sub
lahf
in
insb
fwait
jmp
jmp
rolb
mov
gs
mov
pop
imul
mov
fld
in
add
aad
pop
leave
jmp
test
shlb
fildl
test
fs
xor
int3
cmc
cmp
mov
mov
dec
jle
xor
mov
leave
gs
mov
test
push
out
xchg
mov
mov
dec
or
addr16
call
mov
inc
scas
imul
mov
jae
pop
push
xchg
xchg
sti
pop
push
xchg
jb
in
test
aaa
hlt
mov
inc
scas
adc
fistps
mov
pop
push
pusha
mov
out
leave
lret
in
mov
add
mov
xchg
fadd
fcmovnb
imul
fsubrl
mov
rol
cmpsl
out
cmpb
mov
xlat
insl
pop
inc
and
insb
cmp
xchg
sahf
jno
out
call
ja
insb
xchg
aam
ja
mov
icebp
sbb
ds
and
jg
sub
repz
jle
inc
aad
inc
jbe
pop
and
adc
imul
dec
or
fs
xchg
sahf
fwait
lock
filds
dec
dec
cmpsb
sbb
jle
push
pop
push
mov
mov
stc
minps
cmp
sub
xchg
push
xchg
xchg
out
inc
mov
dec
pop
es
xor
into
and
test
rol
cwtl
repz
lret
add
jnp
mov
pop
dec
sbb
frstor
shll
mov
lcall
mov
into
lcall
xor
mov
inc
repz
call
add
xchg
cwtl
mov
roll
jae
sub
fadd
dec
pop
leave
aaa
cmpsl
jl
rcrb
xchg
lret
push
sahf
ljmp
sbb
xchg
pop
pop
sub
and
arpl
mov
fnstcw
pop
dec
jne
dec
dec
movsb
push
jns
filds
adc
push
fwait
jecxz
dec
in
dec
xor
loopne
mov
into
pop
enter
xor
repz
pop
mov
jb
xor
sbb
sti
ja
sbb
enter
mov
jno
out
sub
aas
call
out
bound
push
jmp
insl
inc
mov
and
inc
adc
adc
mov
cwtl
es
lock
cmc
mov
stos
stos
fistps
xchg
rclb
rcr
shl
aam
es
in
test
add
jg
movsb
push
fsubl
lahf
inc
lret
aam
aaa
in
xlat
sub
insb
add
add
pop
lods
lret
loopne
arpl
jb
cmpsl
outsb
sbbl
jl
xchg
pushf
hlt
movsb
push
cmc
shr
push
push
stc
js
cli
or
add
xchg
ss
xor
inc
fisubrs
mov
popf
inc
rcl
mov
mov
loopne
push
bound
add
mov
movsl
int3
jno
out
addr16
push
cld
fiaddl
outsb
pop
enter
cmp
sub
ljmp
push
jl
sub
push
pop
inc
xor
and
push
push
cmpl
pusha
aad
inc
pop
pop
lret
push
pop
insl
sbb
je
inc
sub
xchg
xchg
bound
or
out
ljmp
in
js
jmp
shr
inc
mov
jmp
inc
ret
jle
cmp
mov
adc
lcall
mov
jecxz
outsl
movsl
adc
push
imul
sbb
dec
in
test
mov
rcll
popf
in
adc
jo
sbb
adc
pop
sbb
cmpsb
cmpsb
enter
jmp
aam
cld
dec
xchg
clc
jb
stc
repnz
fcomps
stc
stc
stc
pop
xor
ss
cmpsl
pop
cmp
cmp
add
adc
and
jl
xchg
xchg
push
out
lret
sbb
push
sarl
fs
xor
imul
rolb
loope
or
sub
dec
popa
sbb
rclb
loope
enter
inc
insb
inc
xchg
xor
push
testb
lcall
ja
push
ja
mov
dec
dec
dec
and
pop
cmp
lea
inc
notb
cmp
xchg
icebp
mov
lret
push
push
dec
sbb
in
xchg
or
pop
jg
xchg
sub
cld
cmp
pop
inc
popf
xchg
mov
movsb
mov
out
aaa
mov
pop
gs
mov
adc
sub
dec
gs
enter
inc
mov
dec
lods
idivl
xchg
repz
pop
xchg
jns,pn
and
outsb
dec
or
fimull
jecxz
pop
loopne
and
sub
pop
add
xchg
out
dec
sub
test
int3
adc
jmp
push
scas
jb
mov
imul
add
movsb
adc
mov
jns
pop
ljmp
ret
setg
jp
mov
xchg
lds
inc
je
fnsave
test
mov
mov
ret
mov
mov
loop
and
repz
daa
shlb
testl
cwtl
int3
jae
xchg
xor
cwtl
inc
pop
cmp
mov
adc
push
rclb
xor
push
pop
push
gs
stc
adc
call
rep
mov
fisttpll
cmp
add
cmp
jne
subb
test
bound
stos
sbbb
push
fs
cmp
mov
push
xchg
rorb
add
out
mov
icebp
xchg
lcall
fistps
add
iret
test
lret
loope
cmc
add
movsb
add
or
aad
mov
js
jmp
pushf
test
push
xor
sbb
mov
fisubs
cltd
jno
inc
or
lods
cmp
icebp
into
cli
lret
cmp
lock
sbb
out
sti
mov
cmp
pop
stos
xor
lds
cwtl
gs
fdiv
sub
cmp
cmp
xor
push
mov
popa
jle
fcoms
add
mov
adc
dec
in
adc
addr16
mov
cmp
sbb
pop
dec
ja
push
mov
lds
shll
xchg
pop
es
mov
sbb
mov
add
in
fiaddl
mov
std
mov
mov
mov
cmp
push
sbbb
test
or
push
mov
mov
hlt
jmp
push
xchg
dec
or
mov
mov
push
into
push
scas
pop
aas
fistl
lods
jae
incb
inc
cld
fmull
xchg
fcompl
mov
inc
sub
insl
ja
or
jae
sub
out
arpl
mov
jne
icebp
aad
dec
notb
add
pushf
jo
inc
jle
dec
adc
push
mov
and
sub
lret
xchg
pop
xchg
les
iret
lds
xchg
xor
and
fdivrs
jne
stc
movsl
iret
in
sarl
mov
push
roll
cmp
cmpsb
rorl
rclb
mov
mov
cmp
repz
movsl
icebp
loope
cltd
sahf
pushf
dec
dec
inc
jecxz
adc
int3
pop
mov
jecxz
jmp
and
iret
jae
je
add
dec
sbb
and
or
jmp
mov
xchg
leave
and
fstps
ljmp
lea
jbe
jmp
adc
in
leave
push
add
sbbb
jle
inc
dec
pop
cltd
mov
out
sbb
aas
adc
sub
dec
das
out
inc
push
cltd
test
nop
mov
inc
pop
jbe
rclb
sahf
in
fsts
xor
cmpsl
cli
sbb
sub
mov
enter
adc
aas
stos
mov
add
fldl
cmp
jns
lahf
leave
pop
fcomp
mov
es
inc
push
nop
jae
inc
push
jnp
data16
scas
push
xchg
jmp
insl
loop
mov
jl
leave
orl
jmp
sub
popa
jae
cmc
aaa
aad
and
loope
mov
sbb
push
fsts
dec
cmp
push
mov
cmp
jmp
icebp
shrb
lods
dec
les
les
and
mov
ljmp
mov
cld
sti
data16
push
push
jae
bound
inc
loop
cmp
dec
loope
andl
mov
call
add
jae
xchg
push
or
sub
popa
lcall
ljmp
repz
sbb
push
or
cltd
pop
add
mov
sub
push
or
jo
out
test
js
inc
movsb
or
mov
addr16
push
vpsubd
cmp
out
aam
lds
xor
fisubs
orb
insl
out
aam
jge
push
adc
or
ret
adc
or
clc
fs
test
mov
mov
cmp
dec
lret
lahf
out
inc
into
sbb
dec
pminub
shrl
incb
xor
inc
cld
mov
test
cmpl
rcl
cmpsb
popa
pop
mov
pop
movsb
jp
movsl
cltd
aas
and
mov
fidivrl
mov
mov
mov
xor
mov
pop
repnz
cltd
sbb
push
call
dec
adcb
icebp
int
movsl
insb
mov
fiadds
pusha
shrb
or
movl
loopne
hlt
int3
pop
inc
cmp
push
add
pop
push
pop
sbb
into
push
lods
or
mov
lret
cmp
cmp
dec
out
icebp
aam
cs
loop
test
pop
out
cmp
push
stos
scas
add
arpl
sub
or
mov
mov
rorl
inc
mov
or
stos
inc
cmp
ss
sbbl
cmp
push
mov
sub
mov
add
jae
arpl
push
push
cmp
in
inc
cltd
xchg
push
xchg
out
pop
xchg
das
add
push
xorl
inc
pop
fsts
hlt
jae
xlat
inc
jge
data16
enter
das
and
sbbb
test
rcrl
cmp
or
xor
imul
inc
mov
mov
mov
clc
mov
mov
xor
imul
pop
fisubrs
push
ljmp
pop
icebp
or
push
mull
outsb
sbb
cld
cmp
mov
add
add
dec
jno
test
cmp
cs
outsl
test
je
icebp
jmp
daa
stos
in
daa
addr16
mov
add
imul
or
repz
fs
cmpsl
ret
mov
lret
xor
into
pop
test
cmp
push
stos
pop
lahf
push
stos
addr16
loopne
push
xlat
add
sbb
dec
xchg
and
pop
cltd
icebp
sub
adc
mov
xlat
adc
cmpsl
gs
pop
je
mov
cs
or
fsub
xchg
or
add
sahf
imul
dec
adc
ds
xchg
inc
jl
aaa
stos
fnstsw
bound
pop
mov
insl
sbb
add
xchg
cld
sub
loopne
clc
test
mov
inc
aas
pusha
lcall
aaa
jno
mov
cmp
xchg
xchg
pop
ret
mov
insb
pop
sub
push
je
pop
int3
mov
add
repz
jb
scas
sahf
mov
xchg
stc
push
fcmovb
bound
mov
mov
cmpsb
xchg
ret
je
cld
cmpsl
jbe
ret
mov
jle
add
mov
out
jecxz
push
mov
xor
mov
test
mov
and
or
lock
xchg
jo
push
mov
pop
and
scas
imul
dec
addr16
mov
pop
js
out
xor
aam
fs
imul
fsts
inc
outsb
out
sub
jno
icebp
push
jbe
dec
xor
loopne
aaa
or
fisttpll
xor
xlat
cmp
sub
mov
add
mov
cmpsb
add
gs
xchg
loop
into
sub
clc
imul
data16
insl
lret
out
dec
insl
ljmp
push
mov
insl
xchg
test
adc
repnz
in
xorb
inc
clc
lds
sbb
and
ffreep
jecxz
jb
sbb
aam
jns
xchg
lea
es
sarb
out
xchg
or
or
jmp
mov
inc
fdiv
mov
fnsave
pop
aaa
pop
add
mov
inc
mov
insl
push
lods
cmp
je
inc
fildl
xchg
jbe
imul
push
add
cmpsl
stc
xchg
sbb
fs
pop
enter
out
fisubl
movsl
int3
test
insb
dec
rorb
xchg
jge
inc
pop
mov
test
decl
rol
imul
mov
ret
rclb
mov
std
mov
aam
out
cmpl
out
fcoml
dec
gs
xchg
cwtl
fbld
arpl
das
xchg
mov
cmp
jg
sbb
xchg
cmp
sahf
xchg
ds
dec
or
ret
pop
je
scas
jecxz
adc
cmp
mov
movsb
sub
or
push
test
cmc
gs
shlb
mov
fcmovnbe
push
dec
mov
mov
out
mov
lahf
enter
sbb
ficoms
rcrb
inc
leave
in
inc
inc
sub
add
pop
cld
out
js
dec
inc
cs
push
inc
jbe
gs
push
dec
dec
dec
fwait
sahf
stos
xchg
adc
mov
cmpsl
lret
push
cmp
dec
pop
fdivr
jns
jle
icebp
adc
sbb
or
push
ds
add
push
aaa
fdivrs
cmpl
sbb
test
dec
add
out
in
lods
adc
inc
lock
dec
roll
xchg
jle
outsl
jg
ret
xchg
ficoms
es
idivl
in
mov
mov
mov
mov
mov
int
mov
idiv
mov
or
push
ret
icebp
pextrw
push
xlat
adc
movsb
mov
loope
ljmp
add
andb
out
pop
push
int
cmp
insl
pop
lcall
sar
cld
loop
ss
xor
cltd
popf
push
arpl
mov
movsl
push
pop
int
data16
inc
shll
or
inc
pop
js
rcr
dec
cmpsl
push
or
or
faddl
push
sbb
repz
cmc
jbe
jle
lea
sub
or
fwait
ret
fwait
push
sbb
xchg
call
pop
ja
add
stmxcsr
hlt
fisttps
fst
jb
sub
push
xchg
xchg
stos
ret
out
sbb
push
and
mov
out
popa
pushf
pop
stos
les
gs
lea
addr16
inc
je
cld
je
push
xor
mov
nop
push
jl
aas
aam
push
mov
and
pop
inc
mov
sbb
xor
lods
cs
stos
push
dec
and
mov
pushf
cmp
cmp
pop
xchg
jb
sub
xchg
mov
pushf
stos
cld
ss
loope
bound
roll
mov
pop
out
mov
push
sub
add
inc
sbb
jge
pop
lods
push
test
insl
pop
dec
ss
and
sub
adc
or
xor
scas
xchg
call
cmc
sahf
xor
jo
cmp
sbb
stos
hlt
pop
movsl
shlb
add
and
movb
fidivrl
test
sub
mov
fimuls
and
push
ror
mov
mov
testl
mulb
clc
mov
out
stos
sti
sub
not
ss
push
inc
pop
stc
cmp
cld
jb
cli
pop
addr16
repnz
add
jp
sbb
cmp
fwait
sub
stc
lret
stc
fidivl
jae
mov
xchg
push
aam
ret
andb
mov
jnp
mov
test
sbb
mov
sbb
sbb
mov
rorb
jo
int
rcl
outsb
push
ja
scas
and
sub
sbb
xchg
adc
cmp
into
push
push
scas
jns
aaa
inc
or
dec
push
mov
loopne
fnstenv
imul
lods
or
inc
in
dec
enter
stos
clc
inc
sub
int3
or
inc
xor
mov
mov
dec
ljmp
mov
fbstp
rcrl
xor
pminub
roll
inc
mov
dec
jmp
scas
rorl
lds
out
xchg
shr
mov
stc
jg
addr16
pop
and
repz
mov
out
es
sbb
sbb
andl
xor
movsl
pop
or
dec
hlt
jo
pushl
pop
mov
mov
cmp
cltd
dec
enter
sti
xor
mov
push
xor
mov
in
or
ffreep
insb
mov
inc
sub
rclb
fneni(8087
cli
ljmp
fisubl
push
out
stc
cmp
xor
cmp
fidivrs
mov
push
push
incb
jg
lods
mov
in
jns
inc
mov
mov
adc
pop
shl
mov
xchg
fimull
or
jg
adc
mov
pop
out
test
add
rolb
xchg
or
pop
paddsb
shll
mov
in
out
jno
ljmp
lcall
inc
out
xlat
pop
sbb
cmpsl
pop
pushf
incb
bound
shr
movsb
jb
sbb
mov
outsl
repz
mov
xchg
mov
sub
mov
sti
jle
loope
out
fwait
add
push
les
daa
mov
rolb
sbb
movsl
pop
aaa
push
mov
andb
pop
outsb
cltd
arpl
inc
ja
push
dec
out
loop
in
popa
jo
aad
xchg
mov
sub
clc
icebp
mov
adc
fistpl
and
adc
jmp
sti
ror
push
test
fnop
mov
fmull
push
pushf
mov
jae
bnd
cmpl
scas
lret
dec
sub
imul
imul
sub
test
inc
pop
fists
mov
loope
movsb
clc
test
mov
arpl
shrl
ss
dec
and
stc
out
jmp
pop
jo
or
xchg
insb
scas
adc
jl
sub
cmp
dec
int
sbb
mov
push
rorb
mov
clc
push
movsl
push
cmc
jmp
jno
cmp
ficompl
sbb
jl
sub
dec
popf
popa
push
jecxz
loop
icebp
jle
mov
ret
xchg
pop
repz
xor
clc
cmp
movsb
mov
cmp
in
hlt
xor
or
les
int
inc
icebp
andb
xor
or
jbe
fsubrp
mul
mov
xor
sub
add
inc
cld
inc
push
add
or
pop
mov
mov
rorb
mov
jp
aam
add
fisubs
inc
arpl
idivl
add
test
xor
jg
icebp
sub
cltd
push
xchg
dec
sbb
sti
cltd
into
cmp
stos
fildll
das
push
int3
adc
lds
xchg
pop
xorl
pushf
mov
mov
jns
inc
inc
xor
pushl
mov
add
dec
fs
mov
inc
or
cs
push
addr16
je
cmovp
ror
movsb
pop
cmpsb
movsl
iret
es
push
inc
inc
push
out
idiv
xchg
pop
pop
insb
leave
jbe
pop
jmp
lahf
add
mov
dec
es
xlat
xchg
lcall
jmp
jge
push
sbb
fidivrs
loope
and
outsl
sbb
scas
xor
adc
out
mov
and
leave
cli
and
cmpl
mov
jnp
ljmp
add
dec
lret
popf
sbb
lods
dec
pop
movsb
lods
fistps
cmp
push
push
cmp
stc
sbb
dec
and
add
ficoms
rcrb
xlat
jp
gs
loope
sti
and
push
mov
add
call
call
call
call
push
push
push
push
push
push
push
call
mov
cmp
jne
call
pushl
call
pushl
call
pushl
call
push
pushl
call
push
pushl
call
push
pushl
call
call
mov
pushl
call
push
pushl
push
pushl
call
call
mov
call
push
push
push
push
push
push
push
call
mov
pushl
call
push
pushl
call
call
call
mov
mov
mov
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
xorl
call
addl
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
jmp
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
pushl
call
lea
push
call
pushl
call
push
push
push
push
push
push
push
push
call
mov
push
pushl
call
push
push
push
push
push
push
push
push
call
mov
pushl
call
call
push
push
push
push
push
push
push
push
call
mov
cmp
jne
pushl
call
pushl
call
push
pushl
call
mov
mov
subl
push
push
push
push
push
push
push
call
mov
addl
call
call
call
call
leave
ret
movb
fcmovu
rcl
adc
ja
or
dec
or
jmp
mov
sub
sub
negl
sub
rorl
negl
negl
add
dec
jne
leave
ret
sub
stos
dec
sbb
mov
in
