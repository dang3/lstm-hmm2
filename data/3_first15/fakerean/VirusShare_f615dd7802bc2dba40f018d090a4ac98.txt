add
add
add
call
and
add
add
ljmp
add
add
inc
add
sbb
add
clc
add
and
add
mov
add
add
aas
add
sub
add
inc
aas
add
dec
aas
add
fadds
add
add
pushf
inc
add
test
add
add
pusha
inc
add
dec
inc
add
cmp
add
inc
add
sbb
add
inc
add
clc
inc
add
ljmp
add
inc
add
idivb
add
sahf
inc
add
mov
add
add
push
inc
add
inc
inc
add
xor
add
and
add
add
idivb
add
call
aas
add
mov
aas
add
mov
add
jb
add
push
aas
add
add
add
adc
add
cwtl
cmp
add
cmpb
add
add
adc
add
cmp
add
loopne
add
sarb
add
je
add
push
cmp
add
xor
add
adc
add
push
cmp
add
in
cmp
add
cmp
add
cmp
add
add
add
sub
add
sub
subb
add
sub
add
enter
fsubrl
add
add
add
sbb
add
cs
dec
add
bound
add
jl
add
xchg
add
movsb
add
mov
add
les
add
add
call
add
adc
add
sub
add
cmp
add
dec
das
add
pop
das
add
insb
das
add
subb
add
das
add
mov
add
das
add
fsubrs
add
out
das
add
add
add
adc
add
xor
add
add
pop
xor
add
add
add
add
mov
add
les
add
fdivs
add
ljmp
add
xor
add
add
sub
add
cmp
add
dec
xor
add
add
xor
add
add
xor
add
add
les
add
loop
add
cli
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
jp
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
inc
xor
add
add
add
add
mov
add
lcall
add
xor
add
xor
add
xor
add
add
sbb
add
add
cs
add
add
dec
xor
add
add
jbe
add
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
and
add
cmp
add
push
xor
add
push
add
pop
sub
add
add
js
add
mov
add
xor
add
xchg
faddl
sub
add
sub
add
sub
add
sub
add
add
add
clc
inc
add
push
inc
add
add
add
pushf
add
lods
add
shlb
add
add
loop
add
out
add
add
add
push
aaa
add
push
aaa
add
cs
add
ds
add
dec
aaa
add
push
aaa
add
push
add
jp
add
mov
add
xchg
aaa
add
stos
aaa
add
mov
aaa
add
fdivs
add
divb
add
or
add
sbb
add
sub
add
cmp
add
dec
cmp
add
add
outsb
cmp
add
add
xchg
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
cmp
add
mov
add
add
mov
add
cwtl
cmp
add
add
enter
aam
add
loopne
add
out
cmp
add
cmp
add
add
sub
add
cmp
add
dec
cmp
add
add
insb
cmp
add
cmp
add
add
les
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
inc
cmp
add
add
mov
add
add
test
add
xchg
cmp
add
xchg
movsb
inc
add
add
fidivrs
add
in
cmp
add
add
push
cmp
add
cmp
add
add
pop
cmp
add
add
jle
add
mov
add
cmp
add
add
dec
add
cmp
add
sub
add
push
add
or
add
clc
xor
add
les
add
lcall
add
add
add
add
push
add
call
add
add
sub
add
sub
add
sub
add
add
add
add
sbb
add
lret
add
add
data16
jbe
add
test
add
lret
add
addb
add
adc
add
adc
add
sldt
orb
add
or
add
or
add
aaa
add
xorb
xorb
add
add
add
add
add
jae
add
outsl
add
xorb
add
adcb
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
push
jne
jb
push
popa
insb
jne
push
add
push
inc
push
push
dec
dec
dec
cs
insb
add
push
push
inc
push
je
imul
fs
jae
inc
add
xor
xor
fs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
in
inc
insb
jne
push
inc
jne
data16
add
in
add
gs
outsl
outsb
jae
insb
gs
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
xor
inc
gs
outsl
outsb
jae
insb
gs
imul
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
jne
jb
outsb
je
push
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
imul
imul
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsl
arpl
push
imul
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jne
inc
gs
outsl
fs
gs
imul
add
jbe
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jp
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
jb
arpl
jae
gs
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
je
jb
jne
dec
outsb
outsw
push
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
inc
imul
jns
add
push
jns
je
insl
inc
imul
jns
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
fiadds
inc
gs
gs
imul
inc
gs
gs
imul
loopne
inc
gs
gs
imul
jmp
push
imul
imul
jns
add
in
add
outsl
bound
inc
fs
je
insl
push
add
out
add
outsl
bound
inc
insb
insb
outsl
arpl
lock
outsl
bound
inc
gs
gs
inc
je
insl
add
repnz
outsl
bound
inc
imul
push
add
add
outsl
bound
inc
insb
popa
addr16
cmc
add
outsl
bound
inc
jb
add
testl
popa
insb
inc
gs
je
insl
dec
popa
insl
gs
add
clc
add
outsl
bound
dec
popa
outsb
fs
add
stc
add
outsl
bound
dec
outsl
arpl
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
popa
fs
outsl
fs
je
add
sub
dec
jae
popa
fs
gs
fs
je
add
sub
dec
jae
popa
fs
jb
je
push
je
add
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
imul
add
dec
add
popa
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
arpl
inc
jb
add
dec
outsl
arpl
push
gs
insb
insb
outsl
arpl
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
push
popa
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
add
insb
push
outsb
ja
outsb
fs
add
je
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jb
outsl
jb
outsl
fs
or
push
gs
jbe
outsb
je
add
add
je
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
cmp
push
gs
outsb
push
gs
js
gs
imul
gs
inc
add
gs
dec
add
insl
imul
outsl
arpl
jae
add
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
imul
push
arpl
add
fs
push
dec
jne
je
inc
jns
add
gs
imul
imul
je
push
jb
imul
imul
call
gs
jb
imul
imul
insb
jae
jb
popa
je
add
mov
insb
jae
jb
insl
jo
add
mov
insb
jae
jb
insl
jo
add
mov
insb
jae
jb
insl
jo
inc
add
arpl
imul
je
arpl
push
add
mov
jb
jo
outsb
push
add
insb
outsb
inc
add
mov
jb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
fs
jae
push
imul
arpl
add
or
inc
imul
push
imul
jae
sldt
imul
outsl
ja
outsl
push
outsl
jo
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
popa
insb
insb
push
imul
outsl
arpl
cmp
inc
push
outsb
jne
je
insl
add
inc
insb
imul
arpl
outsb
add
dec
add
jo
push
arpl
popa
add
gs
je
push
imul
push
add
push
imul
outsl
arpl
add
gs
imul
jae
add
je
outsl
jns
outsb
jne
cltd
add
je
outsl
jns
imul
add
jo
je
push
popa
addr16
add
mov
ja
gs
push
add
add
popa
bound
outsb
jne
je
insl
add
les
inc
outsb
popa
bound
imul
lds
inc
outsb
fs
gs
imul
jae
fildl
inc
outsb
jne
push
push
push
imul
fiadds
inc
outsb
jne
push
imul
filds
inc
jno
popa
insb
push
arpl
add
je
arpl
gs
imul
add
je
popa
jo
jne
add
stc
add
je
insb
popa
jae
dec
outsb
outsw
push
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
insb
imul
je
or
inc
gs
jne
jae
jb
outsl
jae
add
inc
gs
inc
add
add
je
gs
je
jo
imul
adc
inc
gs
insb
addr16
je
insb
dec
inc
add
adc
inc
gs
insb
addr16
je
insl
add
push
add
je
outsl
arpl
add
pop
add
je
outsl
jb
addr16
jne
fs
imul
add
je
gs
je
je
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
inc
gs
outsb
jne
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
add
je
outsb
jne
je
insl
dec
inc
add
add
je
outsb
jne
je
je
add
cmp
inc
gs
gs
popa
addr16
outsl
jae
cmp
dec
gs
popa
addr16
imul
inc
gs
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
inc
gs
popa
jb
outsb
je
dec
add
je
jb
jo
add
pop
add
je
jne
dec
outsb
jne
add
inc
gs
jns
inc
outsl
insb
outsl
jb
pop
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
xchg
mov
je
jns
je
insl
dec
gs
imul
inc
gs
outsl
jo
imul
push
inc
gs
imul
add
je
imul
outsb
addr16
add
jae
inc
gs
imul
popa
arpl
outsb
je
add
gs
imul
arpl
add
je
imul
js
push
add
jle
inc
jb
jns
je
imul
dec
outsb
jbe
insb
imul
je
add
arpl
imul
jae
imul
scas
add
push
imul
popa
bound
add
imul
jae
bound
mov
dec
imul
add
fs
arpl
insb
gs
je
jb
push
add
fs
imul
add
fs
jne
jae
jb
add
fs
arpl
push
add
add
fs
outsb
jne
add
add
fs
je
imul
dec
popa
jo
imul
imul
dec
gs
popa
addr16
outsl
js
add
add
imul
push
add
add
imul
jae
addr16
add
add
push
outsl
jae
dec
gs
popa
addr16
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
dec
outsb
push
arpl
sbb
push
imul
popa
jae
push
add
sub
push
imul
outsb
outsl
ja
gs
popa
addr16
add
sub
push
gs
gs
jae
inc
popa
jo
jne
add
sub
push
gs
gs
jae
inc
inc
add
outsl
jbe
push
jb
jo
add
add
jne
gs
inc
inc
insb
push
popa
jb
insl
add
xor
push
arpl
outsb
push
outsl
inc
insb
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
outsb
fs
gs
popa
addr16
add
inc
add
je
arpl
gs
imul
add
je
jne
jae
jb
push
add
je
outsl
arpl
add
push
add
je
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
popa
add
je
outsb
jne
je
insl
inc
imul
imul
gs
jb
jo
add
insl
add
je
arpl
jo
jns
add
push
gs
imul
add
je
imul
outsb
addr16
add
addl
gs
imul
jae
add
push
imul
js
push
add
mov
push
gs
imul
outsl
outsl
imul
add
inc
add
fs
outsl
jo
jo
add
roll
outsl
ja
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
gs
gs
dec
jne
push
add
test
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
outsb
jae
popa
je
dec
gs
popa
add
scas
add
push
imul
outsl
outsl
imul
mov
push
outsb
jo
arpl
inc
inc
insb
push
popa
jb
insl
add
imul
popa
jae
push
add
mov
popa
je
push
imul
ret
add
insb
imul
je
add
add
imul
gs
add
outsb
dec
gs
jo
add
xlat
add
jo
imul
push
inc
push
xor
cs
insb
add
daa
add
gs
je
inc
imul
add
gs
inc
inc
add
popl
inc
gs
gs
dec
bound
arpl
aam
inc
jae
popa
jo
add
fiadds
inc
js
push
gs
dec
jne
push
add
inc
gs
insb
imul
imul
gs
gs
arpl
popa
jo
add
dec
bound
arpl
add
push
je
arpl
bound
arpl
aad
dec
data16
je
imul
dec
jb
inc
js
icebp
add
push
imul
cmc
add
arpl
jae
bound
add
push
gs
outsl
jb
inc
inc
add
add
jbe
inc
inc
add
or
push
arpl
gs
imul
inc
js
inc
js
add
add
popa
insb
gs
imul
je
js
add
add
insb
arpl
push
arpl
adc
inc
imul
outsl
jb
add
add
je
popa
jo
outsl
fs
cmp
push
gs
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
inc
js
inc
js
add
add
je
imul
dec
jb
inc
js
add
push
gs
imul
je
js
add
push
gs
dec
jne
push
add
inc
inc
dec
xor
cs
insb
add
add
fs
jb
outsb
je
jb
outsl
outsb
outsb
arpl
outsb
push
add
add
outsl
jae
push
jb
outsb
je
jb
add
add
gs
push
jb
outsb
je
jb
outsl
outsb
outsb
arpl
outsb
push
add
inc
add
jne
outsb
je
jb
jo
jb
imul
inc
outsb
jne
push
jb
outsb
je
jb
push
add
gs
jb
outsb
je
jb
popa
je
push
add
inc
gs
jb
outsb
je
jb
add
dec
jo
outsb
push
jb
outsb
je
jb
add
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
sbb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
outsl
jae
push
gs
imul
insb
add
mov
inc
gs
imul
outsb
je
outsl
jne
arpl
fadds
inc
jno
popa
insb
push
imul
gs
imul
push
imul
imul
je
push
roll
jns
pop
add
je
imul
push
jns
add
add
je
imul
push
jns
outsl
jne
je
sbb
inc
gs
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
inc
gs
jae
jb
popa
insl
gs
add
xor
dec
outsb
imul
push
arpl
imul
imul
add
push
popa
insb
imul
add
imul
arpl
jne
je
popa
insl
gs
add
dec
add
imul
arpl
jne
je
imul
outsb
push
jb
arpl
jae
outsl
imul
add
push
inc
dec
popa
outsb
popa
addr16
add
scas
add
outsb
push
gs
imul
add
outsb
push
push
push
outsl
imul
roll
jne
jb
push
gs
imul
jne
add
leave
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
outsl
je
data16
push
dec
gs
popa
insb
jne
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
cli
add
addr16
gs
popa
insb
jne
inc
js
add
incb
push
imul
outsb
je
outsl
jne
arpl
add
or
push
gs
jb
inc
jbe
outsb
je
add
or
push
gs
jb
push
outsl
push
gs
data16
das
add
je
arpl
imul
imul
arpl
add
je
push
push
outsl
imul
add
push
inc
push
dec
xor
cs
insb
add
pop
add
addr16
imul
inc
add
addr16
jne
jb
inc
imul
inc
dec
dec
xor
cs
insb
add
dec
inc
push
dec
xor
cs
insb
push
mov
push
push
call
cmpl
je
mov
cmp
jne
mov
mov
leave
ret
and
add
mov
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
call
sub
add
add
push
sub
add
sub
add
add
push
sub
add
add
add
sub
add
add
loopne
add
out
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pop
sub
add
add
jl
add
mov
add
loopne
inc
add
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jl
add
nop
sub
add
mov
add
lret
add
sub
add
cld
sub
add
sbb
add
and
add
xor
add
ds
pop
add
subb
add
add
enter
fsubrl
add
out
add
add
push
das
add
push
das
add
ss
add
inc
das
add
push
das
add
data16
add
jbe
add
subb
add
das
add
mov
add
ret
add
das
add
call
xor
add
xor
add
xor
add
add
dec
xor
add
add
je
add
xorb
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
xor
add
add
dec
xor
add
add
add
mov
add
mov
xor
add
add
fidivl
add
in
add
repnz
add
xor
add
add
xor
add
xor
add
add
add
add
sub
add
add
add
add
pop
sub
add
add
add
add
add
add
mulb
add
loopne
add
adc
add
add
add
adc
add
sub
add
xor
add
add
jae
add
add
add
outsl
add
xorb
cmpb
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
add
add
les
add
shlb
add
add
add
fs
and
add
mov
add
sub
add
add
outsb
sub
add
add
add
add
cmp
add
je
add
dec
xor
add
add
push
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
call
sub
add
add
push
sub
add
sub
add
add
push
sub
add
add
add
sub
add
add
loopne
add
out
sub
add
sub
add
add
push
sub
add
sub
add
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pop
sub
add
add
jl
add
mov
add
mov
inc
add
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jl
add
nop
sub
add
mov
add
lret
add
sub
add
cld
sub
add
sbb
add
and
add
xor
add
ds
pop
add
subb
add
add
enter
fsubrl
add
out
add
add
push
das
add
push
das
add
ss
add
inc
das
add
push
das
add
data16
add
jbe
add
subb
add
das
add
mov
add
ret
add
das
add
call
xor
add
xor
add
xor
add
add
dec
xor
add
add
je
add
xorb
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
xor
add
add
dec
xor
add
add
add
mov
add
mov
xor
add
add
fidivl
add
in
add
repnz
add
xor
add
add
xor
add
xor
add
add
add
add
sub
add
add
add
add
pop
sub
add
add
add
add
add
add
mulb
add
loopne
add
adc
add
add
add
adc
add
sub
add
xor
add
add
jae
add
add
add
outsl
add
xorb
cmpb
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
add
add
test
inc
jb
jo
inc
arpl
imul
gs
inc
add
xchg
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
mov
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
inc
mov
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
add
je
rol
inc
add
arpl
imul
push
dec
inc
gs
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
jo
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
pop
add
gs
je
dec
popa
insl
gs
imul
add
gs
je
push
jb
arpl
jae
add
add
gs
je
push
gs
popa
jo
push
mov
imul
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
imul
arpl
insl
gs
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pushf
add
jne
push
gs
jne
arpl
popa
insl
gs
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
mov
inc
js
je
push
add
mov
gs
imul
arpl
inc
imul
mov
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
roll
inc
imul
inc
imul
imul
jne
arpl
add
add
jne
push
inc
jne
data16
add
out
inc
insb
jne
push
dec
inc
imul
jb
popa
je
gs
popa
addr16
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
outsb
jae
insb
gs
push
add
sub
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
sub
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
cmp
inc
gs
jne
jb
outsb
je
imul
jns
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
popa
add
je
jne
insb
push
popa
je
pop
into
inc
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jb
inc
gs
outsl
outsb
addr16
popa
je
nop
fildl
inc
add
jne
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
lret
add
je
gs
jo
popa
je
push
inc
add
inc
gs
imul
je
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
filds
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
bound
addr16
jb
jae
outsb
je
xor
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
gs
jne
arpl
add
dec
outsl
arpl
gs
jne
arpl
add
dec
popa
jo
imul
insb
add
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
inc
jbe
outsb
je
add
jp
dec
jo
outsb
push
jb
arpl
jae
jle
dec
jo
outsb
push
push
add
addl
jne
inc
bound
push
je
imul
add
imul
gs
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cwtl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
fwait
add
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
gs
jae
push
gs
popa
jo
fwait
rolb
mov
outsl
jbe
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
jae
insl
gs
push
add
lret
je
push
outsb
ja
outsb
add
add
je
outsb
fs
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jbe
outsb
je
add
push
gs
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
gs
js
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
add
je
push
push
jb
outsl
jb
je
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
jp
outsl
push
gs
jne
arpl
add
push
insb
gs
dec
add
insl
imul
outsl
arpl
jae
add
push
gs
imul
mov
push
add
inc
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
je
outsl
jb
imul
push
arpl
add
imul
insb
gs
bound
arpl
add
je
popa
insl
gs
imul
add
fs
push
dec
jne
je
inc
jns
add
je
inc
outsl
outsb
jae
insb
gs
add
je
inc
outsl
outsb
jae
insb
gs
add
gs
imul
inc
dec
xor
cs
insb
add
sbb
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
add
inc
push
arpl
cmp
push
push
inc
push
outsb
add
push
push
inc
push
outsl
arpl
je
add
push
push
xor
xor
fs
insb
add
fiadds
dec
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
and
add
mov
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
test
add
je
add
bound
add
inc
xor
add
xor
add
xor
add
xor
add
add
add
add
out
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
xor
add
sub
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
sub
add
add
pop
sub
add
add
add
xchg
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jbe
add
mov
add
test
add
ret
add
sub
add
imulb
add
es
ss
inc
add
push
add
pop
add
push
add
js
add
test
add
mov
add
loopne
add
imulb
add
push
das
add
and
add
xor
add
inc
das
add
push
das
add
fs
add
jl
add
mov
add
pushf
das
add
lods
das
add
mov
das
add
fisubrs
add
in
das
add
cli
das
add
or
add
push
xor
add
xor
add
add
xor
add
add
xorb
add
add
add
add
add
add
loopne
add
hlt
daa
add
add
add
pop
sub
add
add
add
add
adc
add
sub
add
add
add
add
orb
add
push
add
cmpb
add
add
add
or
add
jae
add
jo
add
xchg
sub
add
add
outsl
add
xorb
sldt
adcb
add
adc
add
adc
add
pop
add
adcb
add
add
add
les
add
shlb
add
add
add
push
add
add
add
mov
add
fs
push
sub
add
add
insb
sub
add
add
mov
add
mov
add
cld
and
add
add
cmp
add
dec
add
push
and
add
add
add
add
adc
add
sub
add
ss
add
dec
daa
add
pop
daa
add
push
add
js
add
mov
add
cwtl
daa
add
lods
daa
add
shlb
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
test
add
je
add
bound
add
inc
xor
add
xor
add
xor
add
xor
add
add
add
add
out
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
xor
add
sub
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
push
sub
add
add
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
sub
add
add
pop
sub
add
add
add
xchg
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
push
sub
add
jbe
add
mov
add
test
add
ret
add
sub
add
imulb
add
es
ss
inc
add
push
add
pop
add
push
add
js
add
test
add
mov
add
loopne
add
imulb
add
push
das
add
and
add
xor
add
inc
das
add
push
das
add
fs
add
jl
add
mov
add
pushf
das
add
lods
das
add
mov
das
add
fisubrs
add
in
das
add
cli
das
add
or
add
push
xor
add
xor
add
add
xor
add
add
xorb
add
add
add
add
add
add
loopne
add
hlt
daa
add
add
add
pop
sub
add
add
add
add
adc
add
sub
add
add
add
add
orb
add
push
add
cmpb
add
add
add
or
add
jae
add
jo
add
xchg
sub
add
add
outsl
add
xorb
sldt
adcb
add
adc
add
adc
add
pop
add
adcb
add
add
add
test
inc
jb
jo
inc
arpl
imul
gs
inc
add
xchg
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
mov
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
sbb
push
popa
je
mov
inc
add
arpl
imul
push
dec
inc
gs
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
sbb
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
add
inc
push
arpl
cmp
push
push
inc
push
outsb
add
push
push
inc
push
outsl
arpl
je
add
push
push
xor
xor
fs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
jo
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
pop
add
gs
je
dec
popa
insl
gs
imul
add
gs
je
push
jb
arpl
jae
add
add
gs
je
push
gs
popa
jo
mov
add
inc
jb
popa
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
imul
arpl
insl
gs
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pushf
add
jne
push
gs
jne
arpl
popa
insl
gs
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
mov
inc
js
je
push
add
mov
gs
imul
arpl
inc
imul
mov
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
roll
inc
imul
inc
imul
imul
jne
arpl
add
add
jne
push
inc
jne
data16
add
out
inc
insb
jne
push
dec
inc
imul
jb
popa
je
gs
popa
addr16
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
outsb
jae
insb
gs
push
add
sub
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
sub
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
cmp
inc
gs
jne
jb
outsb
je
imul
jns
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
popa
add
je
jne
insb
push
popa
je
je
inc
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jb
inc
gs
outsl
outsb
addr16
popa
je
xor
inc
add
add
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
lret
add
je
gs
jo
popa
je
ror
inc
add
inc
gs
imul
je
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
filds
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
bound
addr16
jb
jae
outsb
je
xor
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
gs
jne
arpl
add
dec
outsl
arpl
gs
jne
arpl
add
dec
popa
jo
imul
insb
add
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
inc
jbe
outsb
je
add
jp
dec
jo
outsb
push
jb
arpl
jae
jle
dec
jo
outsb
push
push
add
addl
jne
inc
bound
push
je
imul
add
imul
gs
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cwtl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
fwait
add
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
gs
jae
push
gs
popa
jo
or
add
mov
outsl
jbe
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
jae
insl
gs
push
add
lret
je
push
outsb
ja
outsb
add
add
je
outsb
fs
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jbe
outsb
je
add
push
gs
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
gs
js
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
add
je
push
push
jb
outsl
jb
je
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
jp
outsl
push
gs
jne
arpl
add
push
insb
gs
dec
add
insl
imul
outsl
arpl
jae
add
push
gs
imul
scas
inc
add
push
add
inc
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
je
outsl
jb
imul
push
arpl
add
imul
insb
gs
bound
arpl
add
je
popa
insl
gs
imul
add
fs
push
dec
jne
je
inc
jns
add
je
inc
outsl
outsb
jae
insb
gs
add
je
inc
outsl
outsb
jae
insb
gs
add
gs
imul
inc
dec
xor
cs
insb
add
push
add
ss
inc
add
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
add
mov
and
add
add
lock
add
fsubl
add
sbb
add
xor
add
inc
daa
add
pop
daa
add
data16
add
mov
add
lcall
add
daa
add
add
add
mov
add
cmpsb
xor
add
add
fdivl
add
pop
sub
add
add
add
nop
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
mov
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
dec
sub
add
add
je
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
add
add
mov
sub
add
sub
add
sub
add
sub
add
es
add
inc
sub
add
je
add
test
add
scas
sub
add
aam
add
loopne
add
out
sub
add
data16
add
add
and
add
ds
data16
jle
add
xchg
add
lods
add
shrb
add
add
loop
add
repnz
add
add
sbb
add
sub
add
cmp
add
dec
das
add
pop
das
add
data16
add
jl
add
mov
add
cwtl
das
add
cmpsb
das
add
mov
das
add
out
add
add
add
adc
add
and
add
xor
add
inc
xor
add
add
data16
add
add
xorb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
int3
xor
add
add
add
xor
add
add
add
add
call
add
add
xor
add
add
add
sub
add
sub
add
add
add
add
je
add
sub
add
inc
xor
add
add
jo
add
jae
add
add
add
add
add
cmp
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
push
add
or
add
mov
add
les
add
add
add
add
add
fs
push
sub
add
and
add
xor
add
and
add
add
push
xor
add
add
and
add
cwtl
and
add
add
mov
add
add
lock
add
fsubl
add
sbb
add
xor
add
inc
daa
add
pop
daa
add
data16
add
mov
add
lcall
add
daa
add
add
add
mov
add
cmpsb
xor
add
add
fdivl
add
pop
sub
add
add
add
nop
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
dec
sub
add
add
add
mov
add
mov
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
xor
add
dec
sub
add
add
je
add
mov
add
lcall
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
pusha
sub
add
add
xchg
add
add
mov
sub
add
sub
add
sub
add
sub
add
es
add
inc
sub
add
je
add
test
add
scas
sub
add
aam
add
loopne
add
out
sub
add
data16
add
add
and
add
ds
data16
jle
add
xchg
add
lods
add
shrb
add
add
loop
add
repnz
add
add
sbb
add
sub
add
cmp
add
dec
das
add
pop
das
add
data16
add
jl
add
mov
add
cwtl
das
add
cmpsb
das
add
mov
das
add
out
add
add
add
adc
add
and
add
xor
add
inc
xor
add
add
data16
add
add
xorb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
test
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
int3
xor
add
add
add
xor
add
add
add
add
call
add
add
xor
add
add
add
sub
add
sub
add
add
add
add
je
add
sub
add
inc
xor
add
add
jo
add
jae
add
add
add
add
add
cmp
add
or
add
or
add
sldt
adcb
add
adc
add
adc
add
push
add
adcb
add
sbb
push
popa
je
dec
lds
outsb
imul
inc
add
insb
gs
dec
gs
add
push
dec
dec
push
inc
push
dec
cs
insb
add
jo
inc
arpl
imul
gs
inc
add
xchg
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
mov
jo
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
addr16
insb
outsl
jae
dec
gs
int
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
in
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stc
add
addr16
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
jo
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
gs
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
imul
jb
popa
je
inc
imul
outsb
addr16
add
push
add
gs
je
inc
imul
jb
popa
je
dec
jne
gs
add
pop
add
gs
je
dec
popa
insl
gs
imul
add
gs
je
push
jb
arpl
jae
add
add
gs
je
push
gs
popa
jo
jl
inc
add
add
inc
jb
popa
je
push
push
add
jp
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
gs
gs
inc
imul
imul
arpl
insl
gs
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pushf
add
jne
push
gs
jne
arpl
popa
insl
gs
add
movsl
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
scas
add
imul
jae
mov
inc
js
je
push
add
mov
gs
imul
arpl
inc
imul
mov
gs
imul
jae
gs
push
imul
inc
imul
gs
add
outsb
fs
imul
gs
add
roll
inc
imul
inc
imul
imul
jne
arpl
add
add
jne
push
inc
jne
data16
add
out
inc
insb
jne
push
dec
inc
imul
jb
popa
je
gs
popa
addr16
add
in
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
imul
cmc
add
je
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
outsb
jae
insb
gs
push
add
sub
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
sub
inc
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
cmp
inc
gs
jne
jb
outsb
je
imul
jns
add
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
dec
add
je
jb
jbe
push
jns
gs
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
dec
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
js
je
outsl
fs
jb
arpl
jae
add
inc
gs
js
je
outsl
fs
push
add
inc
gs
imul
bound
gs
add
pop
add
je
imul
pop
add
je
imul
popa
add
je
jne
insb
push
popa
je
std
enter
add
imul
popa
jae
inc
jb
outsl
jb
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
arpl
gs
outsb
outsw
push
add
jb
inc
gs
outsl
outsb
addr16
popa
je
add
inc
add
add
inc
gs
outsl
fs
gs
imul
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
inc
dec
inc
push
add
cwtl
add
je
jb
arpl
fs
jae
add
fwait
add
je
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
je
dec
popa
outsb
fs
add
mov
inc
gs
je
imul
inc
add
mov
inc
gs
je
imul
push
add
mov
push
jns
je
insl
dec
outsb
outsw
add
push
jns
je
insl
push
imul
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
jo
imul
add
lret
add
je
gs
jo
popa
je
push
inc
add
inc
gs
imul
je
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
flds
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
filds
inc
gs
gs
imul
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
or
dec
gs
jo
gs
jb
jns
or
dec
gs
jo
jb
add
adc
dec
gs
jo
gs
insb
insb
outsl
arpl
adc
dec
gs
jo
imul
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
push
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
inc
bound
addr16
jb
jae
outsb
je
xor
popa
insb
imul
add
add
push
popa
insb
imul
add
add
popa
jo
je
imul
add
popa
jo
je
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
dec
add
fs
imul
add
dec
add
fs
gs
jne
arpl
add
dec
outsl
arpl
gs
jne
arpl
add
dec
popa
jo
imul
insb
add
outsl
jbe
inc
imul
jne
je
inc
jns
gs
outsl
push
imul
add
dec
jo
outsb
inc
jbe
outsb
je
add
jp
dec
jo
outsb
push
jb
arpl
jae
jle
dec
jo
outsb
push
push
add
addl
jne
inc
bound
push
je
imul
add
imul
gs
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
cwtl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
fwait
add
imul
jo
imul
push
gs
fs
imul
gs
gs
jae
dec
jne
gs
add
gs
jae
push
gs
popa
jo
add
inc
fiaddl
outsl
jbe
inc
imul
jns
add
ret
gs
je
jbe
outsb
je
add
add
jae
insl
gs
push
add
lret
je
push
outsb
ja
outsb
add
add
je
outsb
fs
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
jbe
outsb
je
add
push
gs
imul
bound
gs
add
push
add
je
imul
gs
add
add
je
imul
gs
js
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
je
dec
popa
outsb
fs
add
add
je
push
push
jb
outsl
jb
je
add
add
je
outsb
push
gs
js
gs
imul
gs
inc
add
jp
outsl
push
gs
jne
arpl
add
push
insb
gs
dec
add
insl
imul
outsl
arpl
jae
add
push
gs
imul
push
ret
add
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
jb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
push
outsb
push
gs
js
gs
imul
gs
add
push
outsb
insl
popa
jo
imul
insb
add
push
imul
insb
insb
outsl
arpl
add
push
imul
jb
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
add
je
outsl
jb
jne
je
jo
gs
bound
arpl
js
add
je
outsl
jb
imul
push
arpl
add
imul
insb
gs
bound
arpl
add
je
popa
insl
gs
imul
add
fs
push
dec
jne
je
inc
jns
add
je
inc
outsl
outsb
jae
insb
gs
add
je
inc
outsl
outsb
jae
insb
gs
add
gs
imul
inc
dec
xor
cs
insb
add
push
add
pushf
ret
inc
add
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
sbb
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
add
add
inc
push
arpl
cmp
push
push
inc
push
outsb
add
push
push
inc
push
outsl
arpl
je
add
push
push
xor
xor
fs
insb
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
xor
add
xor
add
add
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
nop
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
mov
add
xor
add
sub
add
sub
add
sub
add
push
call
mov
add
add
xchg
add
mov
add
into
aad
add
rolb
fidivrl
addb
out
add
xchg
fnsave
cmpsb
loope
lret
insb
insb
ffree
add
sahf
mov
out
add
add
pusha
fsubp
add
add
mull
shl
out
mov
add
add
xchg
out
imul
outsl
add
add
add
add
fadds
addb
movsl
mov
mov
cmc
jb
add
add
mov
add
push
add
add
arpl
movsb
pop
ljmp
add
jle
add
bound
xlat
add
int
out
add
add
add
std
add
add
add
jae
add
mov
add
in
add
push
push
push
push
push
lea
push
push
lea
push
call
add
push
pop
add
add
jns
add
mov
into
cmpsb
icebp
pop
add
jl
mov
movb
add
aam
out
add
add
movb
test
add
std
add
add
repnz
jns
lea
addl
test
ja
jns
loope
add
xchg
fiaddl
movsl
out
jo
add
pop
pop
push
mov
lea
pop
movl
push
push
push
push
push
lea
push
push
push
push
push
call
add
rolb
cwtl
in
add
push
mov
scas
add
aad
stos
add
add
fs
add
add
std
incb
add
add
xchg
add
call
fidivl
add
xchg
test
jo
add
add
add
add
mov
add
hlt
mov
aad
add
jbe
add
pop
popl
push
push
push
push
push
push
lea
push
push
push
call
add
push
pusha
nop
add
fsubp
add
push
sahf
add
cld
jecxz
add
push
jo
mov
in
add
add
mov
add
lods
add
ficoml
add
in
in
add
mov
mov
xlat
add
xchg
add
mov
test
add
add
push
add
xchg
out
jns
pusha
arpl
add
add
lahf
add
sarl
sbb
push
push
call
push
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
jecxz
add
mov
jo
mov
imul
lcall
xchg
test
add
add
add
iret
mov
add
lock
mov
rcrl
mov
jmp
add
jmp
cltd
ror
stos
add
test
cmpsl
aad
repnz
jbe
rolb
add
outsl
int3
cmpb
pop
clc
pop
jmp
add
pop
loopnew
loopne
add
add
mov
aam
bound
pop
call
push
push
lea
push
call
add
add
add
gs
jl
hlt
add
xchg
add
enter
add
lret
lods
add
add
jle
cli
in
add
push
shl
mov
shrb
movsb
add
jae
jp
mov
rcll
add
testl
add
fdiv
add
pop
ljmp
add
add
aam
bound
pop
call
push
push
push
push
call
rcrb
pushf
popl
add
test
std
int3
xchg
mov
popa
nop
aad
mov
add
outsl
hlt
nop
add
jle
add
add
add
rcr
lds
sahf
movsl
mov
loop
jnp
mov
scas
lret
add
mov
add
add
push
push
mov
lea
pop
jmp
ret
mov
push
push
push
push
push
push
call
out
negl
add
jl
pop
lret
int
mov
mov
out
fisttpl
mov
add
out
add
add
add
cmpsb
mov
add
xchg
add
lds
nop
mov
add
data16
xchg
add
add
add
lds
add
sahf
push
pop
jo
push
add
add
cwtl
add
icebp
outsl
add
pop
add
test
mov
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
not
jge
testb
xlat
add
xorl
rorl
mov
mov
in
les
add
rcl
add
push
stc
add
insb
fwait
enter
jne
add
out
jl
adc
pop
out
cwtl
icebp
movsb
add
add
add
pop
xchg
hlt
add
add
sahf
add
push
mov
jb
add
call
sub
pop
in
push
push
push
push
lea
push
push
call
pop
add
add
mov
add
add
faddl
add
mov
sahf
mov
add
sarl
add
sbbb
clc
std
add
ja
sahf
fldl
iret
jge
add
cmpsl
xchg
add
addr16
bound
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
arpl
adcb
in
lahf
lock
jnp
stc
ja
add
add
add
pushf
mov
add
mov
xchg
stc
add
add
test
pop
mov
lods
mov
mov
add
add
rcl
cld
lods
mov
jb
add
add
shll
add
flds
add
add
mov
add
lea
pop
add
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
std
add
add
repnz
mov
add
fadd
mov
movsb
add
add
push
add
add
xchg
arpl
pop
add
xchg
lods
add
adcl
mov
push
in
mov
lahf
insb
fwait
fs
mov
sahf
gs
add
pop
ret
push
lods
into
add
call
mov
out
mov
lea
pop
xor
push
push
push
push
lea
push
call
push
add
pushf
add
shll
adcl
roll
mov
fildl
fcmovu
in
clc
cmpsl
out
add
fistps
out
add
in
xchg
rol
add
add
adcl
jo
ffree
rolb
add
mov
add
add
xchg
add
add
loope
add
arpl
add
push
push
push
call
loop
shlb
add
add
add
mov
add
add
add
fisttpll
rorb
sahf
add
out
add
mov
add
clc
fwait
pop
add
lahf
in
nop
add
cmc
int
add
add
add
addb
jmp
add
lcall
stos
in
mov
add
add
pop
mov
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
fiaddl
mov
add
cmpsb
clc
add
pusha
push
add
xlat
jge
add
push
push
add
mov
add
loopne
mov
add
aad
add
mov
lods
add
mov
add
cltd
push
add
add
pop
pushf
mov
add
data16
mov
jp
lahf
pop
int3
ljmp
fwait
into
mov
lea
pop
call
mov
push
push
push
call
imul
shrl
movsl
add
mov
xchg
shlb
out
js
jae
fwait
jae
lret
add
mov
mov
add
add
push
aam
in
popa
repnz
loope
add
add
arpl
addb
add
mov
push
add
push
pop
sar
imul
mov
lret
add
lret
add
add
movl
lods
std
add
scas
add
scas
mov
lea
pop
xor
push
push
push
push
push
call
xchg
mov
add
cmpsl
stos
add
add
add
movsb
filds
add
add
mov
rolb
mov
add
mov
mov
fcom
pushf
int
add
pop
insb
scas
fadds
xchg
add
loope
add
add
jle
shll
int
mov
xchg
je
mull
cwtl
pusha
cli
add
pop
add
push
push
ror
shr
ror
push
and
add
inc
xor
ror
ror
sub
lea
pop
dec
sub
inc
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
cltd
mov
call
add
imul
mov
pushf
movsb
iret
jle
filds
mov
pop
add
add
add
add
mov
add
orb
bnd
pop
data16
add
pop
loope
xchg
jnp
clc
add
add
xchg
jae
add
pop
pushl
push
push
push
lea
push
lea
push
call
mov
push
ljmp
add
int
ja
in
jns
jns
add
ljmp
add
add
add
test
fsubp
test
add
add
xchg
add
add
loop
aad
mov
add
xorl
add
aam
xor
ljmp
add
std
lret
ljmp
add
clc
add
pusha
popf
add
arpl
call
mov
push
push
lea
push
push
push
lea
push
push
push
call
arpl
mov
add
jb
add
push
push
insb
les
add
ffree
add
lock
add
mov
add
add
idivb
push
mov
add
lods
ja
add
cmc
repnz
in
add
leave
ljmp
jne
add
xchg
std
repnz
ja
add
cmpsl
cld
add
popa
add
hlt
lea
pop
movl
lea
push
push
push
push
push
lea
push
push
push
push
push
call
rol
fwait
add
movsb
add
add
ret
ljmp
in
addl
push
add
push
stos
add
add
add
lds
mov
jbe
scas
int3
mov
ljmp
out
out
scas
rolb
into
rolb
insb
leave
add
add
lret
cld
add
xlat
fbld
in
insb
xchg
mov
lea
pop
push
pushl
pushl
push
push
push
push
call
ret
add
in
mov
mov
in
jns
add
add
mull
add
lods
ficoml
add
add
add
loope
add
lea
cmpsl
cld
cwtl
fcmovu
add
mov
mov
aad
test
out
mov
add
add
pop
add
cltd
test
mov
jp
mov
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
call
jne
mov
add
jns
add
pop
loopne
je
add
leave
hlt
xlat
pop
lcall
testb
add
add
pop
sahf
sbb
mov
push
xchg
loopne
mov
lret
movsb
cwtl
int
mov
xchg
fldt
mov
mov
mov
add
add
jnp
jmp
cmpsl
lahf
add
mov
add
int3
mov
lea
pop
pushl
push
push
push
call
lcall
add
mov
add
pop
add
pusha
gs
divb
cmpsb
mov
add
add
add
movsl
lods
xlat
js
fs
add
jbe
add
add
pop
jo
fwait
pop
add
add
stos
aad
push
add
push
add
add
add
add
pop
add
jnp
mov
arpl
pop
add
clc
mov
lea
pop
pushl
call
push
push
inc
sub
xor
inc
push
xor
add
inc
lea
not
sub
sub
pop
sub
lea
pop
push
push
push
push
push
push
call
add
stos
xchg
add
add
push
cltd
lods
add
add
out
rol
mov
add
mov
pop
mov
add
add
test
fiaddl
add
xchg
rcrb
xchg
mov
pushf
add
lret
add
mov
add
add
add
mov
mov
add
pop
shr
add
push
popf
jae
add
mov
lea
pop
pushl
call
push
push
push
add
sub
push
sub
add
xor
inc
not
sub
xor
pop
add
sub
pop
push
lea
push
push
lea
push
push
call
add
xchg
add
jbe
add
add
lds
int3
add
mov
clc
add
fdivrl
add
push
add
jno
add
mov
mov
add
movb
outsl
stos
xchg
add
add
add
add
add
add
add
pop
pop
fadds
lcall
les
add
mov
filds
std
add
mov
jp
mov
lea
pop
push
push
push
push
call
add
test
mov
add
add
orl
jl
pop
add
fcoms
add
aam
add
lods
add
add
push
enter
loope
add
add
add
les
mov
push
mov
jl
add
loopne
call
in
add
mov
aad
mov
data16
push
push
lea
push
call
jns
pushw
clc
scas
add
mov
insb
hlt
add
cli
add
add
sti
mov
int3
add
add
mov
movsl
add
loop
fisubs
in
cmpsl
pop
add
add
lcall
cwtl
fiadds
add
aad
stos
add
add
add
pop
imul
lods
add
ficompl
add
cmc
add
add
adcb
movsb
add
cld
lea
pop
call
mov
push
push
push
lea
push
call
jnp
pop
add
add
add
add
add
int
flds
clc
jge
jb
add
addl
add
xlat
add
add
xchg
js
jb
lods
mov
fiadds
add
add
xorb
pop
add
add
xchg
hlt
mov
mov
mov
add
add
add
pop
rorl
pop
push
mov
push
push
push
push
push
call
add
ret
add
int3
in
call
add
jo
xlat
iret
out
movsb
add
add
add
popa
add
imul
jle
lret
int
add
add
stos
out
pop
add
add
ljmp
jb
jbe
jmp
mov
add
test
pop
add
add
add
add
jns
mov
les
xchg
lea
pop
add
add
push
push
push
push
push
lea
push
push
call
mov
flds
add
in
add
test
xchg
jle
rclb
std
je
lret
add
cmpsb
add
add
rcrl
out
ljmp
add
fldl
add
mov
pushf
push
fstl
xchg
mov
xchg
mov
add
lret
lock
cli
add
pop
add
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jne
add
add
out
mov
roll
add
add
add
popl
arpl
mov
scas
add
stc
into
les
pop
add
mov
xchg
cmpsl
pop
add
add
bound
mov
add
loop
add
add
ljmp
in
mov
add
testl
mov
hlt
lea
pop
mov
xor
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
je
push
mov
rorb
add
int
clc
sti
shr
scas
int3
add
add
add
add
jns
mov
add
rcrl
mov
add
addb
mov
movsb
add
add
jge
bound
add
add
add
add
jno
mov
mov
lea
pop
add
push
push
push
push
push
call
jge
mov
add
jmp
mov
add
imul
aam
jmp
add
add
add
fstps
gs
mov
add
jns
mov
add
add
xlat
add
test
pop
add
hlt
jl
add
add
add
aad
mov
add
cmc
jecxz
mov
lea
pop
push
push
push
lea
push
lea
push
call
add
rcl
jbe
add
cmc
add
add
cmpsl
insb
fadds
fs
push
pop
xchg
mov
add
jl
aad
fs
jmp
pop
enter
lret
add
add
add
roll
add
xchg
lret
add
pop
jbe
xchg
mov
push
add
jge
lahf
outsl
popa
jmp
std
mov
lea
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
xchg
call
add
jecxz
add
add
push
jns
add
aad
rclb
add
mull
roll
lock
mov
in
mov
jnp
add
mov
add
testb
add
add
test
mov
insb
je
jle
stos
mov
jmp
ljmp
xlat
fsincos
add
pop
mov
lea
pop
add
push
push
lea
push
lea
push
push
push
call
ja
lock
xchg
mov
add
add
mov
vpsraw
roll
clc
ftst
scas
push
mov
insb
ret
adcb
mov
xchg
lcall
int3
add
mov
pusha
les
add
add
add
add
rcll
add
cwtl
add
push
fs
cmc
leave
add
xchg
push
int
add
add
add
fidivrs
jmp
lea
pop
pop
push
lea
push
push
push
push
push
push
call
into
add
out
add
add
mov
cmc
add
add
add
add
scas
add
xchg
add
testl
lds
push
add
add
mov
shrl
addl
cli
add
xchg
in
add
mov
stc
push
push
popf
xchg
add
add
mov
xlat
add
add
cld
fwait
mov
lea
pop
mov
xor
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
add
add
clc
jnp
push
mov
lret
add
roll
iret
mov
add
add
add
add
aam
lret
fildl
rolb
out
add
add
lock
mov
les
add
add
loope
cld
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
int3
cltd
add
test
mov
pop
lret
leave
add
add
shrl
mov
lods
lock
icebp
add
add
mov
add
add
mov
pop
jp
rolb
call
jno
lock
add
mov
add
jmp
add
add
pop
add
add
push
add
pop
add
filds
add
add
mov
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
push
lea
push
push
call
leave
movsb
imul
add
leave
add
jno
shlb
add
add
push
mov
add
testb
xchg
add
pop
add
add
add
add
pop
addb
add
add
mov
add
add
fildl
xchg
pop
scas
mov
iret
clc
into
call
xchg
add
call
add
les
les
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
jl
add
js
call
add
test
out
add
jns
stos
test
les
add
add
mov
add
mov
add
sti
xchg
in
add
add
add
stc
scas
add
jle
add
add
add
add
push
add
stc
mov
lea
pop
sub
push
push
push
push
push
push
push
call
pop
jno
fiaddl
xchg
jp
add
addl
leave
add
add
fsubrl
in
mov
mov
add
add
notb
scas
stc
add
add
add
mov
add
nop
add
pop
movsl
mov
leave
jnp
in
shlb
add
add
cli
add
sbb
add
add
lds
lret
sub
test
push
mov
arpl
pop
rep
pop
push
lea
push
push
push
push
push
push
push
push
push
call
imul
sahf
mov
add
add
add
fidivs
add
iret
add
add
add
mov
roll
icebp
bound
and
add
add
lahf
xchg
add
js
pop
out
jle
add
add
add
xchg
jnp
add
add
add
add
pop
mov
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
enter
insb
add
addb
std
add
lock
jno
loopne
add
mov
addl
aam
stc
jmp
cmpsl
lret
movb
mov
mov
cmpsl
int3
jne
push
lds
xchg
add
pop
test
add
add
add
mov
add
lea
add
mov
pop
add
add
push
push
push
push
lea
push
push
call
add
add
mov
add
rcl
jno
int
jno
add
hlt
jle
xchg
les
add
mov
popf
sahf
out
add
pop
add
add
out
jno
add
mov
mov
add
cli
add
lods
sahf
jnp
mov
mov
lea
pop
add
mov
xor
push
lea
push
push
push
call
add
sahf
jne
stos
fldl
mov
test
jl
scas
jne
addr16
enter
scas
lock
mov
xchg
faddp
in
je
mov
add
mov
aam
add
scas
add
lds
add
add
add
mov
pop
add
mov
mov
ljmp
add
lret
add
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
mov
rcrb
add
mov
mov
lahf
mov
mov
aam
push
addr16
add
push
lahf
mov
mov
out
add
cmpsb
add
js
outsl
sahf
scas
add
jle
stc
add
out
add
fistpll
add
xchg
add
out
add
sub
adc
push
push
lea
push
lea
push
call
add
add
add
fimull
cmc
mov
add
fucomp
add
push
loop
add
mov
mov
add
add
add
jbe
jne
mov
add
add
mov
jns
add
push
pop
add
push
jnp
add
mov
mov
add
mov
add
add
xchg
sahf
lcall
adc
les
lea
push
push
call
push
pop
add
mov
movsl
jb
add
add
xchg
xchg
bound
add
lahf
add
jmp
add
push
push
les
decb
call
add
jle
add
add
aam
add
pop
scas
ret
add
enter
mov
enter
andb
fnstcw
incb
mov
lret
push
clc
mov
lea
pop
mov
xor
push
push
lea
push
lea
push
push
push
push
push
push
call
lods
out
add
fsubrl
mov
addr16
add
add
jne
mov
gs
into
add
test
imul
add
add
add
clc
les
add
add
mov
add
nop
add
push
movb
jle
addl
add
mov
ret
cmpsb
enter
loopne
add
mov
add
pop
add
add
mov
push
push
shr
sub
push
sub
add
shr
sub
sub
sub
lea
pop
dec
lea
inc
pop
push
push
push
push
lea
push
push
push
push
push
call
cli
fistpl
std
scas
push
stos
add
add
pop
js
add
add
push
add
leave
rcl
add
shlb
add
pop
les
icebp
faddl
jle
add
pop
mov
mov
add
add
out
arpl
aad
add
outsl
add
mov
sub
add
stos
add
add
icebp
add
mov
add
into
add
insb
mov
clc
rcrl
and
pushl
call
push
push
push
dec
push
push
pop
add
sub
sub
add
add
dec
pop
shl
dec
sub
pop
push
push
push
call
xlat
imul
imul
add
loop
xchg
out
test
add
test
add
push
in
push
jmp
iret
add
lahf
add
xchg
pop
mov
jmp
imull
add
add
push
add
pop
add
xchg
loope
insb
add
add
pop
mov
loopne
stos
mov
cltd
out
mov
pusha
or
push
push
push
push
push
push
lea
push
call
add
add
fldl
out
shlb
sbbl
add
jo
movsb
je
add
add
add
add
enter
add
add
cmc
push
push
add
add
add
orb
fldt
push
add
add
add
add
repnz
push
add
add
data16
add
push
push
push
call
insb
add
scas
add
add
push
lods
movl
add
push
add
rolb
push
hlt
roll
xchg
add
nop
add
xchg
gs
add
mov
xchg
stos
add
add
add
push
push
add
sahf
add
push
mov
add
lret
leave
lret
jns
jnp
pop
add
add
insb
jle
pop
test
add
add
pop
add
popa
adc
call
mov
push
lea
push
push
push
push
push
push
call
rcll
add
pop
shlb
xchg
mov
hlt
add
add
mov
add
mov
cmpsl
cli
int3
ljmp
pusha
aad
mov
add
add
aad
mov
add
jns
mov
out
cwtl
fcomp
stc
nop
jns
add
add
add
add
stos
mov
pop
out
stc
ret
les
push
push
push
call
in
add
add
add
push
jl
fwait
add
add
mov
out
add
mov
add
add
add
hlt
lea
icebp
add
xchg
hlt
xchg
add
jne
popa
pop
add
add
add
add
faddl
mov
mov
fldl
cmc
fistpl
popa
pop
mov
add
mov
lea
pop
push
mov
push
push
call
icebp
mov
add
mov
inc
mov
movsl
int3
loopne
loope
add
ja
add
mov
sti
add
addl
add
cmpsl
jl
subb
add
add
add
shr
add
jecxz
add
push
gs
scas
pop
add
add
cmpsl
add
rorl
js
mov
pop
add
add
add
push
push
push
push
push
lea
push
call
mul
add
pop
fcompl
out
add
add
push
add
add
add
add
lods
jl
lea
add
add
in
mov
add
add
add
cld
add
scas
les
cmpsl
add
push
mov
push
add
scas
push
roll
cltd
in
mov
xchg
mov
lea
pop
mov
xor
push
add
pop
add
push
mov
push
push
push
push
call
xchg
pop
add
roll
jo
xchg
loope
divl
add
loopne
push
add
add
ja
add
lret
add
add
add
add
add
pop
add
test
xchg
stc
arpl
add
rcrb
add
jbe
cld
add
add
add
icebp
xchg
lods
xchg
loope
loopne
add
add
add
or
xor
push
lea
push
push
push
lea
push
call
int3
clc
add
clc
data16
test
jmp
stc
ficompl
add
out
add
pushf
push
roll
stos
add
mov
jno
fwait
addl
into
add
cmpsb
mov
mov
push
jge
add
popl
mov
add
mov
add
pusha
mov
mov
mov
shlb
mov
add
add
mov
lea
pop
add
push
sub
pop
add
pop
mov
push
push
lea
push
lea
push
push
call
iret
pop
push
add
addr16
aad
lahf
add
add
add
jb
xchg
add
add
data16
lea
out
imul
nop
add
test
add
mov
pop
jmp
xchg
add
test
jno
cmpsb
ja
add
mov
nop
add
hlt
add
xchg
add
data16
int3
popf
jns
int3
add
scas
add
pop
fnclex
je
gs
movsl
add
pop
xor
push
push
lea
push
lea
push
push
lea
push
call
add
les
add
test
add
aad
add
push
pop
filds
add
bound
aad
xchg
add
add
add
mov
movsb
add
test
add
movl
flds
repnz
add
pop
add
pop
add
add
add
roll
popa
sbb
les
add
push
sub
shl
not
pop
rep
mov
xor
push
xor
lea
pop
or
je
push
push
push
push
push
lea
push
push
push
push
call
into
add
add
clc
hlt
xlat
add
add
push
add
in
add
add
pusha
lods
jns
clc
stc
add
mov
mov
js
xlat
roll
add
add
stos
add
add
test
add
add
mov
pushf
jb
mov
test
movsl
add
add
flds
add
mov
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
call
add
xlat
stos
push
add
mov
mov
cmpsb
leave
add
jbe
ja
pop
add
mov
mov
push
rclb
mov
mov
add
add
add
add
add
incb
add
in
data16
imul
xlat
add
jle
add
shlb
stc
outsl
add
leave
jecxz
jge
add
add
hlt
lea
pop
xor
push
lea
push
push
push
push
call
js
rol
add
js
jnp
mov
in
push
add
mov
add
add
in
popa
pop
fwait
scas
icebp
ror
test
mov
mov
fiadds
mov
test
flds
jne
fs
add
xchg
add
add
add
add
mov
add
add
mov
mov
insb
add
add
push
add
in
mov
lea
pop
add
push
inc
dec
xor
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
out
add
test
add
out
faddl
add
int3
mov
add
add
push
int
add
mov
add
push
out
out
add
add
std
hlt
sub
cmp
shrb
mov
mov
addl
leave
push
ret
cmpsb
scas
jnp
add
jge
rolb
jno
add
fwait
out
js
mov
jl
out
add
mov
add
mov
lea
pop
xor
push
push
push
push
push
push
call
shlb
jns
add
rcr
movsl
int
push
lock
aad
lahf
call
ljmp
test
filds
add
add
aad
cmpsb
cmp
lret
add
imul
filds
out
addl
add
andb
add
add
roll
lret
movb
add
add
pop
xchg
fsts
sbb
les
repnz
push
push
push
push
push
push
call
add
stos
loope
ror
add
addl
movsb
add
mov
cmc
loope
mov
loopne
push
lock
add
add
add
sahf
add
add
fistl
jbe
pop
add
mov
add
add
cmp
mov
add
jne
add
push
add
pop
add
push
lea
pop
push
push
sub
add
pop
mov
push
push
lea
push
push
push
push
call
fiaddl
mov
addb
ror
iret
xchg
test
add
add
add
orb
loopne
lods
out
pop
sarl
rclb
cmpsb
mov
mov
mov
add
add
mov
add
stos
iret
add
add
add
pop
mov
int
jb
add
jo
jle
push
cmpsb
scas
mov
jnp
add
filds
add
mov
lea
pop
xor
push
push
lea
push
push
push
push
call
shlb
je
add
add
add
add
lcall
cwtl
fmulp
jl
pop
nop
add
test
add
add
popa
repnz
cmpsl
out
add
jge
add
add
add
jbe
sti
lea
pushf
add
mov
jmp
push
clc
stos
lea
add
add
add
out
mov
lea
pop
add
push
inc
pop
add
pop
push
rol
pop
rep
mov
push
push
push
push
push
lea
push
lea
push
call
scas
add
jbe
les
add
add
fidivrs
add
rorl
int
rcll
add
repnz
jnp
add
and
xchg
add
stos
pop
add
in
cwtl
out
add
addb
add
cmpsl
aad
cwtl
add
add
jns
add
cld
loope
add
data16
add
xchg
test
add
mov
mov
ja
mov
lea
pop
xor
push
push
lea
push
push
lea
push
call
movsb
jle
test
scas
pushf
mov
add
add
out
add
ljmp
rolb
add
add
mov
mov
add
add
mov
add
loopne
add
pop
leave
add
int3
lcall
add
add
mov
add
add
push
in
push
add
mov
lea
pop
add
push
push
lea
push
lea
push
call
movsb
icebp
pusha
push
add
add
mov
mov
add
add
jo
stos
add
add
pop
xchg
imul
pop
bound
lret
xlat
add
add
push
add
stos
add
fisttpl
jmp
ja
add
loopne
add
fiaddl
push
loop
ljmp
div
mov
popa
adc
leave
je
push
push
call
jle
add
jae
add
add
in
add
add
sahf
add
jb
mov
add
add
jo
mov
add
add
jae
add
lods
add
in
mov
add
xchg
add
in
lea
mov
add
add
jmp
call
fadds
jns
ljmp
int
mov
lea
pop
mov
add
push
push
call
add
sbbb
add
mov
arpl
add
pop
lods
js
cmpsl
jp
add
mov
idiv
pop
mov
fldt
add
add
in
out
mov
mov
xchg
fsubr
mov
add
jno
pushf
pop
in
add
add
outsl
call
stc
add
xchg
xchg
xchg
add
mov
add
pop
pop
loope
mov
sarb
arpl
pop
add
rep
pop
push
push
dec
sub
sub
push
xor
add
inc
lea
sub
sub
inc
shl
inc
pop
sub
add
pop
push
push
lea
push
lea
push
push
push
push
call
movb
add
xchg
les
fstps
stos
add
cmp
jmp
insb
xlat
jl
fistps
movsb
add
push
add
enter
add
pop
pop
mov
aad
out
add
add
fs
jle
icebp
mov
add
add
addb
add
add
add
mov
jo
add
pop
pop
mov
push
pop
mov
push
shl
sub
inc
pop
mov
push
lea
push
lea
push
push
push
push
lea
push
call
nop
add
notb
cmpsl
jb
lret
pop
mov
mov
cli
rolb
popa
mov
add
leave
pop
fists
movsl
sahf
add
jecxz
flds
jmp
mov
fldcw
test
add
add
mov
add
jecxz
pop
add
add
add
add
cltd
push
jb
mov
add
mov
lea
pop
jmp
push
lea
add
not
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
fwait
add
test
mov
roll
mov
imul
leave
jle
jge
add
add
js
add
sahf
cltd
add
add
cmpsl
cwtl
add
cmc
jecxz
lods
add
add
add
pop
mov
andl
pop
aad
cmc
cwtl
test
lret
push
pop
mov
lea
pop
mov
push
ror
sub
ror
pop
add
push
push
push
lea
rol
sub
not
pop
push
push
mov
push
lea
push
call
add
add
out
add
add
jo
jmp
mov
mov
mov
adcl
mov
cli
mov
pop
add
sarb
push
fld
add
add
sbb
fiadds
add
add
std
add
cmpsl
insb
mov
jmp
mov
xlat
add
popa
or
pop
push
push
push
lea
push
push
push
push
push
call
fsubrl
fildl
add
arpl
add
pop
pop
push
cmpsb
imul
add
pushf
add
loope
push
add
pop
movsb
mov
mov
add
jnp
loop
add
jge
add
add
add
pop
fmul
add
xchg
add
jno
fldl
pop
fildl
add
bound
push
jne
mov
rol
add
add
subb
add
call
int
test
aam
bound
pop
pop
push
push
push
push
push
call
add
in
add
pop
into
loope
lret
test
int
push
in
mov
mov
add
popa
xchg
lods
mov
add
push
cld
add
mov
mov
ffree
mov
mov
out
rolb
add
pushf
jmp
jo
add
add
add
add
movb
fs
add
pop
pop
push
add
add
pop
leave
push
push
push
call
add
add
addr16
push
rcr
add
push
ljmp
add
test
int3
push
add
out
jae
lret
push
pop
fstpl
add
mov
jnp
flds
popl
jbe
add
jle
lods
add
call
add
mov
test
jle
add
outsl
add
mov
add
add
bound
ret
push
mov
push
push
lea
push
call
icebp
pop
add
add
pop
cwtl
enter
ljmp
push
lea
lret
add
pop
xchg
mov
mov
push
add
add
add
add
xchg
loopne
fdivrp
fstpt
sti
add
add
addr16
lods
add
add
mov
out
add
lret
arpl
stos
loopne
testl
push
push
push
shr
sub
add
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
stc
cld
xchg
add
add
lods
add
cld
cmc
add
push
js
hlt
add
aad
adc
imul
jle
xchg
testb
mov
add
lock
add
add
push
lea
jle
pop
push
pop
in
add
push
movl
cmc
mov
add
mov
nop
pusha
add
stos
add
mov
pusha
sbb
movl
addl
push
shr
add
shl
shr
pop
test
je
mov
pop
push
xor
add
pop
pop
push
push
lea
push
push
push
push
push
call
int3
int3
out
ficompl
bound
jbe
add
add
mov
mov
pop
add
mov
popa
push
rorl
mov
add
xchg
add
jecxz
jae
cld
add
push
faddl
mov
call
add
lret
nop
add
add
icebp
add
add
repnz
mov
add
mov
lret
add
out
add
shll
scas
movsl
idivl
test
push
mov
xchg
cld
cli
mov
lea
pop
pop
push
shl
add
pop
pop
push
push
push
lea
push
push
push
call
xchg
add
add
jbe
call
add
popf
pusha
loope
add
add
push
jmp
fadd
add
pushf
scas
in
add
xchg
movsl
add
mov
add
jnp
in
out
scas
add
add
int3
add
jmp
add
jnp
fwait
cmpb
push
xlat
add
add
add
into
add
pop
leave
ret
push
push
not
dec
rol
pop
mov
add
push
push
add
pop
push
push
push
push
lea
pop
testl
addl
push
push
push
push
lea
push
push
call
jae
add
add
rolb
lahf
add
shll
test
in
shl
enter
repnz
fucom
add
add
fildl
mov
xchg
in
xchg
add
add
add
add
incb
add
add
shlb
imul
add
mov
lods
jbe
add
xchg
mov
lea
pop
call
push
push
push
push
push
push
lea
push
push
call
loop
push
add
out
add
add
scas
lahf
add
gs
add
shll
add
imul
mov
jnp
out
fisubl
movsl
add
push
add
add
add
test
mov
add
add
pusha
lahf
pushf
push
mov
add
ret
push
jecxz
rolb
add
scas
not
mov
lea
pop
mov
pushl
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
andl
insb
rcl
add
add
jmp
stos
and
fiadds
add
add
gs
out
iret
fsincos
jne
out
push
lahf
push
cmpsb
faddl
jae
scas
lds
mov
add
sahf
add
add
xchg
add
add
lret
fldl
jae
fdivl
mov
pushf
fisubrl
lea
add
add
add
pop
push
call
push
ror
xor
not
not
pop
cmpl
jne
push
push
push
push
call
mov
scas
sarl
out
shrb
test
js
pop
mov
push
rorb
xchg
movl
nop
sti
add
add
jae
add
push
jp
popl
not
add
mov
cmc
add
shl
insb
fldl
mov
mov
push
add
mov
add
notb
jne
jnp
add
sti
cmc
add
add
mov
lea
pop
pop
push
lea
inc
xor
add
pop
pop
push
xor
pop
pop
push
push
call
mov
add
fwait
xchg
add
add
add
pop
in
outsl
add
fsubp
sahf
ljmp
mov
push
popa
enter
add
divb
pop
push
out
add
pop
add
shrb
lods
add
shrl
push
push
mov
add
add
add
test
int3
add
mov
or
push
lea
push
call
push
add
add
aam
add
in
add
mov
add
stos
sahf
push
push
add
add
push
add
mov
add
mov
jge
fnstsw
stos
add
je
add
repnz
jae
les
add
cmp
jmp
mov
in
xlat
lret
add
pop
add
mov
lea
pop
leave
push
lea
push
push
lea
push
push
call
stos
push
add
jl
mov
mov
add
pop
lret
or
xlat
aam
pop
add
push
add
add
test
movl
add
cwtl
push
jb
add
movsb
add
pushf
add
add
jne
add
loop
shrb
add
add
fmull
add
push
mov
push
dec
pop
add
push
push
ror
pop
push
push
push
push
push
push
call
add
xlat
call
fadd
add
movsb
add
add
add
push
popf
hlt
std
in
jmp
jecxz
add
adc
xlat
jo
scas
popa
jle
lea
add
add
add
aad
add
out
push
icebp
mov
neg
add
add
in
add
mov
ljmp
jmp
scas
add
je
add
subb
xlat
xchg
add
hlt
lea
pop
movl
push
push
push
push
push
lea
push
push
call
add
and
push
add
add
add
outsl
add
les
add
add
cli
xchg
push
lock
add
add
out
add
jns
test
add
test
add
test
loope
add
add
scas
int3
mov
add
add
add
popa
cltd
fwait
fs
idiv
add
jmp
nop
xlat
jnp
add
repnz
fistps
les
add
shr
pop
call
push
push
lea
push
call
xchg
cmp
xchg
add
add
add
ffree
add
mov
xchg
mov
rolb
add
into
add
push
fucomip
pop
add
jmp
fnstcw
testl
push
sar
leave
enter
je
add
mov
jo
add
add
add
mov
mov
popa
or
stc
incl
jge
add
test
call
rcrb
pop
push
lea
push
push
lea
push
push
call
add
push
fisubrs
ret
add
mov
xchg
add
lods
jecxz
mov
add
test
lods
push
testb
add
int3
add
test
clc
pop
add
cltd
stc
push
add
ljmp
arpl
scas
add
add
add
test
out
cmpsl
add
lods
cwtl
add
call
mov
lea
pop
pop
push
lea
push
push
push
push
call
add
insb
add
int
jp
add
xchg
add
std
in
repnz
add
mov
into
pop
add
mov
add
add
mov
jmp
cwtl
add
add
add
add
pop
add
test
add
mov
push
add
add
push
add
add
add
mov
add
out
fistpl
add
push
jo
mov
lea
pop
pop
push
ror
pop
leave
push
xor
dec
rol
pop
ret
push
mov
push
shl
add
shl
pop
add
push
dec
shr
rol
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
add
xorl
push
int3
out
xchg
scas
stc
addr16
add
add
idiv
into
out
add
mov
mov
mov
add
loope
add
in
je
add
add
leave
add
sbbb
mov
add
xlat
pop
add
test
hlt
lea
pop
push
push
push
lea
push
lea
push
push
call
add
add
xchg
andl
add
fwait
xlat
fldl
mov
sahf
or
lods
mov
add
mov
data16
into
add
scas
ja
data16
in
iret
jl
jl
popf
add
add
add
pop
add
add
add
les
mov
add
lods
mov
push
mov
out
insb
mov
lea
pop
push
mov
lea
push
inc
dec
pop
sub
mov
push
lea
push
push
call
mov
cld
bound
loopne
add
add
add
stos
pushf
add
add
pushf
aad
test
std
add
push
arpl
out
add
add
mov
iret
xchg
add
add
out
add
enter
add
call
ja
add
jnp
add
mov
call
xchg
test
add
movl
xchg
addl
mov
lea
pop
shr
push
lea
pop
add
push
inc
add
add
pop
mov
mov
push
add
shr
lea
pop
add
add
mov
push
push
push
push
push
push
push
call
xchg
imul
pop
test
add
popa
cli
mov
add
bound
add
fs
mov
in
mov
nop
pop
add
pushf
add
mov
add
jl
add
je
add
cmc
add
lahf
ljmp
add
jge
in
faddl
roll
add
add
add
add
add
lea
push
into
mov
cld
fiadds
fiaddl
data16
mov
push
push
lea
push
push
push
lea
push
call
int
xlat
add
push
test
add
cwtl
cmpl
add
jp
roll
movb
add
cld
add
test
add
popa
nop
add
les
add
je
popf
add
add
cli
incb
xlat
popf
push
xchg
xorl
lea
jp
add
add
mov
lea
pop
cmp
jne
push
shr
add
xor
pop
cmp
jne
push
push
push
push
call
jns
add
add
add
lds
stos
add
insb
add
add
call
add
xchg
add
addr16
add
mov
sti
mov
pusha
fdivr
add
test
call
out
mov
leave
bound
add
clc
add
mov
pop
jnp
mov
mov
iret
mov
add
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
push
add
jp
scas
xchg
mov
add
add
add
add
push
cld
pop
iret
mov
stos
repnz
out
add
add
jp
jmp
xchg
jno
push
add
filds
pop
mov
cli
add
pop
add
int
xchg
jno
add
fs
xchg
add
add
mov
add
xchg
add
jmp
xchg
fildl
mov
lea
pop
movl
push
inc
pop
jmp
mov
mov
push
inc
pop
sub
jne
push
pop
mov
push
sub
pop
movl
jmp
push
shl
xor
not
pop
mov
push
add
sub
ror
pop
mov
cmp
jne
push
ror
inc
shr
inc
pop
mov
movl
push
shr
shr
pop
jmp
push
lea
push
push
lea
push
call
add
jbe
add
enter
add
lock
pop
add
xchg
add
fdivrl
xchg
popl
mov
add
push
add
add
jmp
add
pop
movb
hlt
add
mov
fwait
add
xchg
add
movsl
fwait
mov
add
add
clc
fnstcw
pusha
mov
xchg
xchg
lret
add
xchg
iret
xchg
add
push
mov
lea
pop
mov
push
pop
cmpw
jne
mov
movl
push
push
push
push
push
push
push
push
push
lea
push
call
lods
mov
lods
int
enter
addb
add
add
mov
cltd
repnz
sahf
jge
cld
shrl
andl
mov
test
mov
mov
fdivs
loopne
add
cld
xchg
mov
add
stos
call
arpl
pop
jmp
push
push
call
test
mov
stos
cltd
push
std
add
add
jns
add
fisttps
mov
mov
lret
add
mov
add
cld
add
jb
mov
jge
add
jo
add
add
test
lds
add
add
mov
push
jmp
add
ret
push
add
movsl
test
add
pop
pushl
push
lea
pop
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
js
loop
jo
mov
frstor
add
flds
stos
add
add
test
aam
add
add
movsb
add
test
mov
in
cmc
add
repnz
imul
les
add
lock
add
mov
lea
pop
mov
mov
push
push
push
or
inc
add
add
sub
sub
add
ror
pop
dec
inc
pop
push
shl
rol
add
pop
push
push
shl
inc
pop
call
cmpl
je
push
push
lea
shl
push
and
add
sub
add
inc
sub
dec
dec
sub
inc
pop
sub
shr
pop
push
push
push
push
push
call
add
add
xchg
add
clc
arpl
bound
loopne
fildl
in
mov
add
push
add
push
add
add
addr16
add
pop
mov
sahf
add
add
out
lds
rolb
add
int3
rol
mov
mov
lea
pop
push
call
push
shr
sub
rol
pop
cmpl
je
push
push
ror
dec
push
or
inc
add
ror
sub
sub
pop
sub
pop
push
shr
pop
push
push
rol
not
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
add
test
filds
lods
add
xlat
jo
outsl
data16
je
add
int3
add
add
js
ljmp
add
add
add
add
jno
add
out
jnp
mov
mov
filds
lahf
xchg
jnp
pop
fnsave
add
add
loopne
arpl
pop
cmpl
je
push
push
shr
not
push
or
not
add
shr
shl
sub
pop
ror
pop
push
push
push
push
push
push
push
push
push
call
add
mov
nop
add
pop
add
mov
scas
add
mov
add
stos
add
mov
movsb
pop
call
xchg
add
data16
push
push
mov
push
loopne
jns
rolb
jb
add
add
mov
add
add
push
add
add
hlt
lea
pop
call
cmpl
je
push
push
shl
add
sub
push
sub
add
add
sub
sub
add
pop
ror
pop
push
rol
sub
shr
pop
push
push
push
push
call
mov
add
sahf
add
aad
xorl
push
fld
loop
mov
pop
fcom
lea
mov
xchg
add
imulb
push
add
cwtl
xchg
add
insb
addr16
in
pop
jmp
pushf
add
test
ljmp
push
add
mov
insb
loop
rolb
roll
out
scas
movsb
rol
loope
add
add
xchg
fisttpl
pop
call
push
ror
add
dec
add
pop
cmpl
je
push
push
lea
push
xor
add
inc
sub
add
not
pop
shr
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
movsb
add
fiaddl
jl
lret
mov
add
add
xchg
lea
int
cli
xchg
add
imul
std
xchg
add
add
fsubr
add
add
pop
add
repnz
add
add
push
add
scas
jle
lea
mov
add
mov
mov
add
add
add
loope
js
add
mov
lea
pop
push
push
push
call
lcall
fcoml
in
mov
add
add
mov
add
cli
add
add
add
test
rcr
mov
lods
js
out
mov
add
icebp
vpshufd
jne
add
aam
jge
push
lahf
testb
add
movsl
add
xchg
shll
add
pop
ja
lahf
jecxz
cld
lea
pop
call
cmpl
je
push
push
ror
add
shl
push
or
not
add
shl
sub
sub
dec
pop
sub
pop
push
lea
xor
pop
push
call
push
add
shr
xor
pop
cmpl
je
push
push
dec
shr
sub
push
or
not
add
shl
shr
sub
xor
sub
sub
pop
dec
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
in
jp
mov
cmc
pop
iret
add
lea
add
mov
popf
add
add
jmp
lock
mov
int3
outsl
mov
add
add
int3
add
popf
add
testl
add
mov
lahf
cltd
cli
add
mov
loop
fiaddl
add
sahf
lea
iret
addb
out
add
icebp
add
mov
lea
pop
push
push
shr
add
pop
call
push
sub
pop
cmpl
je
push
push
shl
xor
push
xor
add
shr
shl
add
shl
sub
inc
shl
ror
pop
pop
push
rol
dec
lea
add
pop
push
call
cmpl
je
push
push
sub
dec
rol
push
push
pop
add
add
add
rol
sub
sub
sub
not
pop
ror
lea
lea
pop
push
lea
push
push
push
call
cld
mov
mov
lret
loop
add
add
add
add
fadds
add
addr16
add
jne
add
jmp
lret
movsb
roll
add
imul
out
in
iret
mov
add
out
jmp
ret
mov
cld
test
call
mov
add
mov
in
add
fimuls
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
add
fsubl
fucomip
movsb
lahf
mov
add
scas
add
pusha
ret
xchg
add
icebp
cmpsl
add
mov
ja
pushf
add
shrl
loopne
mov
fstps
sarb
lret
sar
subl
add
push
add
jbe
add
add
add
addl
in
add
mov
lea
pop
call
push
add
pop
cmpl
je
push
push
rol
add
shl
push
or
inc
add
add
xor
sub
inc
pop
rol
dec
inc
pop
push
push
dec
shr
dec
sub
pop
call
cmpl
je
push
push
ror
push
push
pop
add
rol
rol
lea
ror
sub
lea
add
pop
inc
shl
rol
sub
pop
push
shl
pop
push
push
push
push
push
call
nop
in
mov
add
add
mov
imul
test
cwtl
add
add
add
icebp
scas
in
into
add
mov
jbe
add
add
add
stos
leave
add
cld
mov
add
fwait
add
cltd
movsb
mov
scas
jl
ljmp
add
add
sahf
int
repnz
cld
lea
pop
call
push
push
push
push
push
call
rolb
rolb
leave
add
add
add
jp
je
mov
cmpb
push
fldl
fmul
pop
mov
cli
add
xchg
push
out
xchg
scas
into
add
mov
xchg
add
pop
pusha
mov
add
add
popl
push
jecxz
add
add
cli
jle
cld
lea
pop
cmpl
je
push
push
shr
push
sub
add
rol
sub
shl
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
idiv
add
test
addl
add
mov
in
push
push
add
cli
mov
mov
mov
loop
shr
mov
add
jno
icebp
push
sti
sti
js
xchg
loope
lcall
fiadds
std
add
add
into
testl
lea
pop
call
push
add
add
dec
pop
cmpl
jne
push
push
call
clc
out
nop
movsb
movsl
add
mov
rcl
add
in
add
movsb
addb
add
mov
mov
out
arpl
mov
outsl
lahf
ret
insb
sahf
mov
add
movsl
add
add
add
movb
xlat
testb
mov
xchg
add
mov
xchg
jo
add
gs
add
add
add
add
xchg
add
mov
lea
pop
mov
push
shr
not
not
pop
movl
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
cltd
loopne
mov
add
mov
mov
addl
in
xchg
add
mov
add
ja
add
add
loope
add
mov
add
nop
in
add
add
insb
lea
ret
addb
imul
je
pop
bound
mov
add
jmp
add
add
push
cmc
add
add
push
add
xchg
add
jo
add
and
jmp
xor
push
shr
dec
dec
add
pop
pop
push
shl
lea
lea
lea
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
popa
add
xchg
add
cltd
clc
add
jb
cmc
lods
int
clc
pop
outsl
add
rcr
jle
test
mov
movl
lock
clc
icebp
mov
jns
mov
insb
mov
push
add
add
jnp
add
push
add
add
add
adcl
push
add
lahf
add
aam
shlb
add
pop
pop
leave
ret
push
add
rol
pop
push
mov
add
push
pop
cmpl
jne
push
push
lea
shl
push
sub
add
add
dec
add
sub
shr
pop
ror
sub
pop
push
push
push
push
push
call
fiaddl
enter
cltd
add
je
mov
mov
fnstsw
add
add
ja
add
addb
sahf
mov
ret
add
push
scas
mov
xchg
xchg
jmp
xchg
loopne
addl
add
add
insb
jbe
ljmp
add
pop
xchg
std
out
mov
add
test
mov
hlt
lea
pop
pushl
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
nop
hlt
iret
add
stc
add
add
mov
scas
popf
mov
imul
mov
mov
add
lds
test
add
mov
mov
gs
add
out
pop
add
lods
add
add
jl
add
sub
add
xchg
popa
gs
lea
pop
call
push
push
lea
push
push
push
push
call
in
push
push
add
nop
add
add
test
test
mov
add
call
xchg
pop
mov
icebp
push
fs
pop
add
add
push
stc
jne
add
add
xchg
rclb
xchg
add
add
outsl
movsl
add
add
subb
add
rclb
aam
bound
pop
push
call
jmp
push
inc
xor
inc
pop
cmpl
je
push
push
push
push
lea
push
push
push
lea
push
push
call
add
lods
stc
jp
mov
push
add
add
add
jecxz
add
movsb
add
clc
movsl
add
push
add
add
cmpsb
add
pop
mov
add
lods
mov
mov
popl
fwait
les
mov
fwait
add
fstp
idiv
push
pop
add
mov
lea
pop
cmpl
jne
leave
push
push
push
push
push
call
popa
popa
add
cmc
hlt
add
mov
add
cli
ret
iret
add
push
mov
xchg
mov
imul
add
add
add
xchg
jmp
in
ja
add
add
mov
add
add
mov
fstpt
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
call
into
out
add
fcomip
jge
enter
xchg
add
mov
add
add
add
bound
stos
hlt
sti
add
push
popf
std
add
add
pop
add
bound
pop
mov
test
negb
add
shlb
nop
mov
add
xchg
stc
mov
add
lea
pop
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
jmp
mulb
add
scas
add
cli
add
scas
add
push
mov
jnp
mov
add
nop
out
add
leave
scas
add
aad
cmpsb
add
pop
add
aam
add
fiadds
add
add
jno
add
ret
mov
movsb
add
add
add
push
add
rcl
add
test
pop
mov
lea
pop
pop
pop
push
shl
pop
leave
push
ror
xor
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
ror
jno
jbe
ja
hlt
jmp
add
add
add
xchg
jae
add
add
cltd
add
add
add
mov
add
test
add
add
xchg
add
add
add
test
mov
jmp
add
mov
add
outsl
outsl
pop
outsl
testb
add
fstl
add
imulb
fmull
jmp
push
sub
add
pop
cmpl
jne
push
push
xor
add
add
push
or
not
add
rol
sub
xor
sub
sub
shr
pop
sub
sub
add
pop
push
shr
pop
pushl
push
push
push
call
enter
out
bound
mov
enter
add
mov
add
add
fistpl
in
mov
mov
jnp
xlat
add
add
popf
add
add
add
fldpi
jge
add
mov
std
add
add
add
sarb
movsb
mov
lea
pop
call
push
push
call
jb
shr
mov
mov
lret
addl
add
les
push
cld
jmp
xchg
test
sti
ficomps
jnp
add
data16
add
in
add
add
add
add
nop
add
xchg
push
sti
mov
in
imul
mov
xchg
add
negl
jge
add
ljmp
add
mov
add
lds
add
pop
mov
lea
pop
push
call
jmp
push
add
pop
cmpl
jne
push
not
shr
add
pop
mov
mov
push
push
push
add
rol
push
or
not
add
not
sub
sub
pop
shl
dec
pop
push
ror
sub
shr
sub
pop
pushl
push
push
call
jl
add
add
loope
js
je
add
mov
add
add
add
cmpsb
test
add
add
outsl
iret
and
movl
lods
mov
iret
bound
add
flds
lret
add
fwait
add
add
push
mov
jp
add
ret
js
mov
aad
add
in
mov
add
fs
lea
pop
call
call
push
push
shl
ror
push
sub
add
not
sub
shl
sub
pop
shl
ror
pop
push
push
push
push
lea
push
call
pusha
jae
fdiv
stos
push
add
iret
add
mov
xchg
add
icebp
mov
add
add
fs
je
cmpsl
add
add
lods
add
mov
js
add
mov
add
add
stos
into
add
add
add
not
lret
push
add
addl
xchg
mov
xchg
stos
fstps
add
scas
add
mov
lea
pop
pushl
call
push
inc
shl
pop
call
push
push
add
ror
push
push
pop
add
add
sub
ror
add
add
add
pop
rol
pop
push
dec
dec
pop
pushl
push
sub
pop
call
push
shr
ror
shr
pop
call
push
push
sub
push
sub
add
shr
sub
not
add
pop
sub
dec
inc
pop
pushl
push
pop
call
call
push
push
add
push
push
pop
add
sub
sub
xor
shl
pop
add
dec
shl
pop
push
push
lea
push
push
push
push
push
call
add
xchg
add
fldl
mov
jmp
jecxz
add
add
add
push
rcrl
adcl
out
jl
add
loope
add
add
std
add
and
cmpsb
out
jp
add
popf
adcb
xchg
rorb
mov
out
popa
jnp
jo
lds
movsb
add
out
icebp
cwtl
pushf
pop
stc
xorl
fwait
add
pop
pushl
push
push
push
push
lea
push
lea
push
push
call
ja
add
lds
lea
add
pushf
mov
add
popf
add
jle
add
lret
xchg
jp
or
add
add
jge
incb
test
rcl
sahf
stc
cmpsl
add
xchg
cld
add
out
movb
add
jle
jo
add
int
xchg
mov
lret
add
test
xchg
sti
jmp
add
mov
pushf
nop
add
cmc
push
add
hlt
lea
pop
call
push
push
call
mov
add
cwtl
cld
mov
pop
je
add
jecxz
xlat
mov
mov
stos
mov
test
add
arpl
add
pop
fiadds
mov
add
add
mov
add
add
jmp
xchg
push
xchg
add
mov
pop
add
repnz
add
add
add
add
add
lock
mov
pop
call
push
push
xor
shl
xor
shl
push
push
pop
add
not
sub
xor
add
pop
dec
xor
pop
push
lea
rol
pop
pushl
call
call
push
push
sub
ror
dec
shr
push
push
pop
add
add
sub
sub
sub
pop
not
pop
push
push
push
lea
push
lea
push
push
push
call
add
les
pop
add
xchg
mov
je
int3
push
add
pop
in
pop
stos
add
loope
add
int3
add
add
add
fwait
mov
in
mov
fistps
xlat
add
xchg
cmpsl
lahf
xchg
stc
movb
add
jbe
mov
les
jne
call
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
add
add
popa
add
jno
push
nop
add
add
add
mov
add
mov
add
mov
add
call
cwtl
mov
hlt
add
xchg
pop
pushf
pusha
add
add
mov
add
add
push
add
sti
je
data16
fdivrl
les
les
jp
pop
add
mov
lea
pop
call
push
push
ror
inc
sub
push
xor
add
add
sub
not
sub
add
dec
add
add
pop
shr
shl
pop
pushl
push
pop
call
push
sub
xor
lea
pop
call
push
push
sub
inc
rol
push
or
inc
add
add
shl
sub
lea
not
ror
xor
pop
lea
xor
rol
inc
pop
push
lea
push
push
push
push
push
call
jecxz
mov
roll
lds
mov
lods
add
mov
add
mov
xchg
vdivss
pop
aam
add
ljmp
mov
jge
mov
test
mov
test
imul
add
push
xchg
push
add
shlb
mov
lea
pop
pushl
push
push
push
lea
push
call
iret
in
in
add
add
loope
sbbb
add
lods
add
fstpt
add
add
jno
add
add
loopne
mov
repnz
add
push
add
iret
add
insb
add
add
out
add
add
popf
fs
lea
pop
call
push
lea
push
push
lea
push
call
lds
add
int
lea
pop
sbbb
insb
loopne
xlat
faddl
pop
add
out
add
add
ret
outsl
rol
pushf
add
pop
mov
shlb
mov
mov
out
jge
lret
pushf
add
add
xchg
add
add
mov
mov
push
loope
popa
addb
mov
aad
hlt
lea
pop
call
push
push
sub
rol
push
sub
add
not
sub
shr
add
sub
pop
shr
pop
push
ror
pop
pushl
call
lea
push
sub
rol
add
pop
push
call
push
push
add
not
push
push
pop
add
sub
dec
sub
inc
xor
shl
sub
pop
add
add
pop
push
push
lea
push
call
add
pop
mov
in
jo
add
add
jo
add
hlt
cli
add
data16
les
add
add
add
out
add
mov
out
add
xchg
add
outsl
add
add
push
add
test
pushf
fiaddl
roll
add
les
add
pop
rolb
addr16
add
hlt
add
add
sbbb
pop
pushl
push
xor
dec
not
pop
call
push
add
add
pop
push
push
push
push
push
push
push
push
lea
push
call
ret
add
leave
lods
add
data16
pushf
mov
mov
mov
jnp
push
mov
pop
mov
push
pushf
popf
loopne
ret
xchg
add
mov
add
addb
jnp
add
push
mov
add
add
add
jo
add
nop
add
mov
add
add
add
data16
shrb
idivb
lea
lea
push
or
inc
add
sub
pop
rol
sub
add
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
leave
add
cli
jmp
jae
mov
xor
mov
xchg
add
loopne
xchg
add
add
int
add
loopne
add
andl
mov
add
add
jmp
add
pop
in
mov
add
add
fidivrs
add
test
rorb
fs
add
lds
pop
call
push
inc
pop
call
push
push
shl
add
push
or
inc
add
sub
not
ror
sub
add
pop
shr
inc
shr
rol
pop
push
add
add
ror
pop
pushl
call
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
loop
nop
add
jl
imulb
cmpsb
fs
add
out
fildl
mov
jge
push
add
call
lret
add
add
add
imul
fiadds
cltd
into
mov
add
lock
jae
xlat
push
jle
mov
sti
add
out
lods
mov
rorl
pop
call
push
push
shl
not
add
add
push
sub
add
sub
shl
add
sub
sub
add
pop
pop
pushl
push
push
lea
push
push
push
call
rcr
loope
add
add
ror
leave
clc
icebp
lock
add
mov
mov
add
mov
add
mov
pop
add
mov
imul
mov
fs
add
add
imul
test
scas
xlat
insb
pushf
iret
push
cmc
mov
ret
add
add
ja
push
jno
add
add
mov
arpl
call
call
lea
push
push
shl
push
or
not
add
sub
sub
dec
rol
sub
dec
pop
shr
inc
pop
push
lea
push
call
add
aam
stc
pop
stos
mov
pop
test
push
sahf
add
leave
mov
lock
faddl
arpl
mov
aad
mov
add
fs
mov
outsl
push
jns
pop
test
imul
lods
add
fwait
mull
xchg
push
sbb
add
push
rolb
jnp
incb
orl
fidivrl
fdivrs
pop
add
jo
mov
lea
pop
pushl
call
push
sub
lea
pop
push
call
push
push
xor
shl
push
push
pop
add
inc
sub
sub
pop
sub
pop
push
push
call
mov
xlat
cmpsl
add
jle
add
add
jecxz
jbe
fldl
add
add
cli
arpl
les
clc
mov
cmpsl
icebp
mov
jp
call
add
add
add
add
xchg
call
jae
add
add
mov
leave
enter
mov
add
push
mov
add
jae
mov
lea
pop
pushl
push
dec
not
dec
dec
pop
call
call
mov
push
push
shl
push
push
pop
add
ror
dec
shl
sub
add
not
pop
pop
push
push
push
lea
push
push
push
call
stc
movl
sahf
add
nop
xchg
add
lret
gs
add
push
faddl
pusha
add
testl
add
popa
xchg
lea
xchg
add
mov
out
fimuls
nop
xchg
ret
add
popf
add
test
lods
add
add
popl
stc
out
add
mull
sbb
jne
push
push
push
push
push
push
push
call
pusha
pop
fstl
add
pushf
jno
int
jmp
test
add
popa
add
imul
add
data16
fcmovnb
js
add
add
add
les
fmuls
add
push
jmp
add
add
push
data16
ja
mov
lds
mov
lea
add
pop
call
push
push
xor
pop
call
push
push
xor
rol
xor
push
or
not
add
sub
lea
xor
sub
inc
add
dec
pop
pop
push
push
push
push
lea
push
push
call
std
mov
add
add
add
enter
add
fstp
xchg
add
add
add
add
popa
arpl
lods
add
add
add
mov
add
nop
add
mov
add
jge
add
push
int
std
mov
mov
xchg
mov
add
add
test
pop
scas
add
les
pop
pushl
push
sub
shl
add
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
repnz
bound
mov
rolb
lods
add
sti
adc
add
add
cli
add
in
mov
les
cld
add
enter
popf
out
fidivl
pop
fildl
aam
mov
add
stc
out
add
mov
add
mov
add
xlat
add
add
aam
test
gs
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
test
add
cwtl
add
lahf
add
in
mov
int3
add
insb
fiaddl
stos
add
add
iret
mul
loopne
fsub
push
add
cld
add
add
push
test
in
pop
add
push
mov
pop
movb
add
mov
lock
out
jae
add
add
scas
mov
stc
add
xchg
mov
lea
pop
pushl
push
push
push
push
call
add
add
lods
add
jae
out
jp
add
add
add
fildl
jl
add
test
andb
scas
mov
add
jge
add
add
mov
hlt
xor
js
jmp
add
add
add
popf
fadds
add
add
add
lret
cli
push
clc
add
testb
add
adc
shrb
add
cs
shl
push
and
add
rol
sub
ror
sub
pop
shl
sub
ror
pop
push
shr
pop
pushl
call
push
push
add
shr
push
xor
add
sub
sub
dec
sub
pop
xor
sub
dec
not
pop
push
push
ror
sub
push
and
add
add
lea
inc
sub
shr
sub
shl
inc
pop
dec
pop
push
dec
sub
pop
call
pop
dec
jne
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
pop
add
sbbl
shlb
add
mov
rcrl
pop
pop
test
add
lret
jmp
rolb
fsubrs
adc
push
mov
test
out
add
add
test
imul
pushf
pushf
jno
div
mov
add
je
icebp
mov
add
cwtl
mov
add
mov
lea
pop
jmp
call
push
push
dec
lea
xor
push
xor
add
add
shl
sub
inc
pop
xor
not
add
pop
push
push
lea
push
push
push
push
push
push
call
fnstenv
jge
lods
pop
add
sahf
mov
cmc
pop
add
scas
jbe
aad
test
add
bound
roll
pusha
lcall
scas
add
cmc
push
in
add
imul
scas
sahf
add
add
filds
cmc
mov
add
out
jmp
xchg
push
add
add
jns
mov
nop
add
add
mov
lea
pop
pushl
push
push
lea
push
push
push
push
push
push
call
add
add
lret
test
add
popf
jb
adcl
out
cli
add
pop
clc
add
add
stos
int
in
mov
into
pop
test
imul
movl
imul
add
stos
out
add
jmp
insb
mov
mov
in
add
imul
add
add
push
mov
add
mov
pop
call
push
ror
dec
pop
push
call
mov
push
lea
push
push
push
push
push
call
add
add
add
add
mov
add
test
jno
add
add
fsub
add
add
shl
std
xor
mov
fdivs
add
add
sti
mov
add
add
into
mov
mov
fcomip
into
and
mov
jnp
pop
jnp
add
mov
mov
movsl
incb
mov
lea
pop
lea
push
push
inc
ror
add
push
and
add
shl
rol
ror
sub
not
sub
pop
sub
dec
pop
push
sub
dec
lea
pop
pushl
push
push
call
add
add
cmpsl
jp
in
insb
into
testb
pop
rcl
fsubr
rcr
add
frstor
add
add
add
mov
add
add
push
mov
add
mov
scas
add
add
ja
into
add
xchg
fs
add
rolb
pop
lea
fs
lea
pop
call
push
rol
pop
push
call
push
push
ror
ror
shr
push
or
not
add
sub
sub
pop
ror
pop
push
sub
shr
pop
pushl
call
push
lea
push
lea
push
push
push
lea
push
push
push
call
stos
add
call
jae
fiadds
mov
add
xchg
out
mov
cmpsl
test
add
cli
loopne
in
add
call
xchg
xchg
xchg
add
repnz
stos
addb
jae
add
mov
add
repnz
jge
push
add
add
lret
lcallw
scas
add
mov
lea
pop
call
mov
lea
push
push
inc
sub
push
xor
add
sub
sub
sub
shl
pop
shr
pop
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
mov
add
xchg
add
fdivrl
jmp
fbstp
stc
mov
add
pop
mov
jo
rclb
add
push
xchg
jp
pop
iret
add
lea
add
negb
add
add
outsl
add
mov
lea
pop
pushl
call
lea
push
pop
push
push
push
sub
inc
sub
pop
push
pushl
push
push
sub
add
push
sub
add
sub
sub
rol
sub
pop
inc
xor
pop
push
push
lea
push
push
call
fistps
ljmp
jno
pusha
mov
add
add
add
pop
icebp
mov
ljmp
cwtl
add
icebp
add
jae
pop
movsl
pop
mov
add
xchg
lret
icebp
add
lods
push
add
push
add
popa
add
add
add
lock
add
call
cmpsb
js
jmp
add
mov
imul
push
push
lea
push
call
xchg
hlt
add
out
movsb
loopne
xchg
add
fld1
jne
in
add
int3
lods
add
add
into
leave
add
add
add
lods
je
add
fs
mov
mov
mov
lock
jecxz
bound
add
add
add
add
stc
addl
add
add
in
idiv
add
mov
fnstsw
push
mov
lea
pop
call
push
push
not
push
or
inc
add
inc
lea
dec
sub
xor
add
pop
dec
shr
pop
pushl
push
push
call
add
push
add
push
test
nop
cmpsl
flds
popf
test
xlat
mov
int
add
test
add
xchg
mov
add
xchg
mov
pop
xchg
scas
mov
lea
add
add
int
add
add
sahf
rolb
std
mov
flds
mov
mov
repnz
add
add
int3
lea
pop
call
push
call
push
push
lea
push
xor
add
inc
add
shr
sub
sub
add
shl
pop
lea
dec
pop
push
add
pop
pushl
call
push
inc
rol
pop
call
push
pop
jmp
pushl
mov
push
inc
pop
jmp
push
push
dec
shl
add
push
or
inc
add
add
sub
add
pop
lea
pop
push
push
push
call
arpl
mov
add
lahf
in
jmp
add
imul
sahf
add
add
out
add
add
test
popf
add
jp
movsb
mov
cwtl
js
add
lds
add
add
int
add
add
gs
add
add
add
pop
pop
sti
stos
pushaw
je
jmp
xchg
mov
mov
lea
pop
pushl
call
push
push
lea
push
lea
push
call
mov
mov
push
add
add
add
jo
cld
jbe
add
addb
pop
mov
test
xchg
push
add
push
add
je
add
add
test
add
faddl
add
jb
mov
xchg
add
insb
add
mov
mov
testb
add
add
mov
add
add
pop
call
push
push
lea
push
and
add
rol
lea
sub
sub
shl
pop
not
lea
pop
pushl
push
shr
ror
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
add
out
fcompl
add
data16
mov
mov
outsl
add
add
lea
add
ljmp
add
imul
add
aad
add
add
xchg
mov
mov
incb
jecxz
add
rcr
iret
add
movsb
add
add
add
arpl
push
call
push
push
push
lea
push
push
call
add
sahf
xchg
subb
pop
jge
clc
xchg
fiaddl
add
arpl
add
cld
nop
add
add
jp
add
pop
mov
pop
hlt
lods
in
pushf
int3
lock
addb
scas
pop
mov
mov
stos
mov
add
mov
js
add
popf
add
bound
test
add
mov
lea
pop
leave
push
inc
inc
pop
add
push
push
push
push
push
call
add
mov
add
addr16
enter
add
lea
iret
stos
stos
int
fdivrl
cli
jp
add
pop
add
add
mov
std
add
push
add
add
mov
fwait
lret
cmc
fs
ja
add
rol
add
add
lods
add
add
out
add
mov
add
adc
pop
pop
push
pop
pop
push
inc
pop
pop
leave
add
push
lea
push
push
call
add
scas
add
pop
push
jnp
add
add
add
jp
scas
aam
add
cmc
imul
imul
mov
add
add
fwait
hlt
lret
mov
add
add
mov
add
xchg
add
add
jae
add
mov
xchg
aad
out
add
add
jbe
add
imul
xchg
lock
stc
add
xchg
pop
mov
lea
pop
ret
push
rol
add
lea
add
pop
leave
ret
push
push
push
call
out
jmp
mov
add
lea
nop
into
add
roll
mov
leave
cmc
xchg
aad
add
xlat
add
ja
add
add
mov
int3
add
loope
scas
imul
add
ja
pop
add
pop
js
int3
add
pop
mov
add
push
popa
pop
lcall
idiv
add
mov
lea
pop
mov
cmpl
jne
push
push
push
push
push
push
call
add
mov
pop
pop
ret
jecxz
cwtl
xchg
ljmp
add
add
sarl
test
add
scas
jge
push
add
addr16
rcr
pop
testw
jnp
loopne
mov
sahf
leave
loop
mov
pop
cmpsb
push
pop
mov
std
push
add
pop
push
lea
add
aam
bound
pop
mov
jmp
push
sub
add
add
pop
mov
and
push
shl
xor
shr
pop
xor
push
dec
pop
xor
push
push
push
push
lea
push
push
call
mov
cli
xor
add
add
pop
fs
add
shll
mov
add
mov
add
add
roll
faddl
push
xlat
xlat
add
pop
add
out
mov
add
jno
addb
testl
mov
add
add
lret
popf
add
push
jmp
add
xlat
rcrl
js
add
pop
add
push
dec
pop
xor
push
inc
sub
rol
ror
pop
dec
sub
push
lea
push
push
push
push
push
push
push
push
push
call
jb
jp
push
push
add
lcall
fnstenv
add
add
gs
pop
add
push
js
add
push
ret
mov
pop
test
add
xchg
xchg
jp
mov
call
add
lods
xor
in
cmc
mov
add
add
call
mov
add
lock
imul
add
fmull
dec
add
add
xchg
fisubrs
ficoms
push
call
cwtl
in
aam
jp
mov
add
pop
add
mulb
outsl
mov
add
shr
int3
enter
in
add
cwtl
repnz
mov
add
add
loope
addr16
xchg
mov
add
add
hlt
lock
add
add
add
add
add
add
mov
fadds
xchg
add
add
lods
add
aam
bound
sub
pushl
pop
push
sub
rol
pop
sub
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
insb
in
add
add
pop
jl
pushf
data16
add
jae
mov
int
stos
add
add
add
jmp
rcrl
aam
jmp
mov
pop
fmul
add
add
in
add
lret
mov
xchg
add
les
pop
lods
ret
lods
add
fisubl
jmp
add
scas
add
jmp
fimull
in
je
jge
add
pop
cmp
jne
mov
lea
push
lea
push
push
push
push
push
call
jge
into
fcoml
popa
cwtl
add
add
add
rolb
out
shlb
cltd
mov
add
cld
enter
jb
add
incb
add
rcl
add
push
test
push
popa
add
mov
pop
mov
mov
cmc
out
add
int3
lea
pop
sub
push
xor
rol
rol
pop
mov
push
push
push
call
add
push
add
mov
mov
fidivl
mov
add
loopne
xchg
imul
add
pop
mov
xlat
push
out
add
cltd
add
xchg
add
movsl
add
push
xchg
lock
aam
add
add
add
bound
add
add
cltd
add
mov
mov
lea
pop
shr
push
sub
shr
pop
add
sub
push
push
push
call
mov
add
add
test
roll
add
out
scas
mov
add
stos
ja
pop
add
add
aam
pop
xchg
add
push
pop
out
xchg
xchg
mov
add
int3
testl
add
add
add
mov
xchg
ljmp
fmull
xor
addr16
rclb
add
add
imul
mov
add
add
out
aad
add
out
add
out
add
xchg
add
out
imul
add
cmc
xchg
sahf
add
ficoml
pop
js
add
add
jo
add
add
mov
filds
pushf
add
mov
subb
add
cmc
mov
lea
pop
pop
shr
push
push
push
lea
push
call
mov
mov
jp
ficoml
sti
push
negl
add
imul
cmpl
mov
add
sahf
fldl
lods
mov
ret
test
mov
lahf
out
xchg
add
add
aad
add
cmc
in
int
arpl
add
push
add
stc
lcall
lea
pop
and
sub
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
jns
xchg
pop
add
test
add
pop
add
push
icebp
add
add
add
xchg
mov
jle
add
add
add
add
int
add
add
jae
enter
aad
test
jb
add
into
add
add
mov
add
add
jecxz
add
loop
add
add
lods
out
ja
jmp
add
arpl
pop
cmp
jne
leave
ret
push
dec
pop
push
push
push
lea
push
push
call
add
xchg
add
movsb
std
mov
add
cld
mov
shlb
add
call
jge
in
add
add
add
mov
imul
mov
fwait
je
imul
push
lock
add
arpl
addr16
ljmp
add
add
cli
in
stc
mov
lea
pop
mov
add
push
shr
rol
inc
pop
push
push
push
lea
pop
push
push
ror
add
pop
push
push
lea
push
push
push
push
call
jb
enter
add
jmp
add
add
mov
mov
clc
push
add
cmpsl
cmc
add
filds
add
add
outsl
add
arpl
pop
faddp
into
imul
add
add
jmp
jbe
cltd
add
stc
add
sbbb
add
subb
xchg
add
sti
movsb
add
addl
roll
out
mov
lea
pop
push
mov
lea
push
add
pop
sub
push
shl
pop
mov
push
shr
not
pop
shr
push
push
lea
push
call
mov
stc
push
add
test
add
fidivrl
cmpsb
in
add
add
add
test
jno
add
mov
cld
test
cli
jno
scas
add
pop
add
add
shrb
add
shr
lret
jecxz
lret
lods
xchg
addb
je
jbe
jge
stc
jp
mov
push
push
add
mov
cld
lea
pop
add
mov
push
dec
pop
add
push
ror
ror
pop
mov
add
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
add
fdivrl
jmp
data16
pop
call
mov
fiaddl
fs
add
mov
mov
add
into
jns
add
pusha
add
imul
ja
add
add
mov
push
add
iret
jnp
fucomip
movsl
push
jae
add
enter
mov
data16
loopne
mov
mov
addr16
mov
push
push
push
lea
push
push
lea
push
push
call
addl
out
cltd
xchg
add
cmc
add
add
fisttpll
add
pop
mov
add
add
mov
testl
add
add
add
repnz
in
js
add
mov
jo
jle
jge
add
mov
mov
fwait
mov
pop
fisttpl
out
add
mov
mov
lea
pop
and
call
push
not
pop
add
cmp
je
push
sub
xor
shl
xor
pop
add
push
lea
sub
lea
pop
cmpl
jne
push
push
call
fiaddl
mov
xchg
add
popa
add
add
add
into
lahf
add
add
hlt
mov
js
addl
fs
int3
add
mov
in
xchg
add
add
add
add
nop
jns
fildl
add
pushf
iret
add
add
in
add
mov
add
in
add
xchg
mov
or
rcrb
push
push
push
lea
push
push
push
push
call
into
add
add
xchg
movsb
push
add
xchg
pop
out
icebp
push
push
lcall
cli
sahf
movsl
int
mov
add
mov
cld
mov
je
call
jns
add
loop
add
arpl
mov
popf
call
mov
add
mov
mov
lea
pop
pop
push
add
pop
pop
pop
leave
push
push
call
add
add
add
mov
fcomp
jnp
add
jge
xchg
jecxz
out
cmpsl
enter
add
add
fwait
imul
faddl
movsb
mov
add
add
std
fcmove
pop
xchg
add
add
add
jge
xchg
add
add
mov
jbe
out
jb
int
movsb
push
push
mov
scas
add
mov
pusha
addb
add
rcr
shrb
mov
lea
pop
ret
mov
push
lea
push
push
push
push
push
push
push
push
call
add
push
push
add
add
ja
add
xorl
jmp
add
add
in
add
test
add
stc
add
xchg
fists
add
add
add
movsb
cltd
jbe
add
sti
hlt
int3
int3
add
xchg
jns
xchg
add
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
call
ror
jns
mov
jle
add
push
add
lahf
add
aad
jecxz
fnstsw
rolb
add
mov
add
lcall
lret
push
add
js
mov
push
faddl
mov
insb
add
js
nop
add
mov
int3
mov
add
aad
jp
aam
bound
push
push
push
rol
add
ror
add
pop
pop
push
rol
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
test
add
xchg
in
gs
arpl
jmp
add
add
add
xchg
fadds
add
add
jmp
add
xchg
je
pop
test
add
add
add
add
add
addl
ficoml
add
sahf
stos
add
les
fdiv
add
roll
pop
xchg
add
mov
mov
add
lea
pop
mov
push
push
shl
rol
inc
add
pop
call
xor
pop
push
add
dec
pop
pop
pop
pop
push
push
lea
push
lea
push
call
add
add
roll
mov
add
add
mov
add
rolb
add
add
mov
mov
addl
add
add
out
add
add
add
add
add
add
imul
lahf
flds
cli
js
jns
mov
rcrl
jmp
add
cltd
add
lea
pop
pop
leave
push
push
push
push
push
push
push
push
push
lea
push
call
ja
pop
xchg
mov
fsts
push
pop
jo
add
repnz
pop
enter
outsl
test
add
jo
add
add
mov
add
imulb
sahf
mov
fldl
out
add
add
add
test
out
aam
mov
loop
aad
icebp
add
mov
lea
pop
ret
push
push
push
lea
push
push
push
push
call
jnp
add
iret
pop
pop
loop
add
lods
push
or
add
add
add
add
mov
loopne
mov
scas
add
add
popf
add
sbbl
pushf
add
fldl
test
mov
in
add
or
add
add
in
into
xchg
pop
popa
jecxz
lods
mov
add
jae
add
flds
cli
add
jno
mov
lea
pop
push
mov
add
push
push
call
lods
add
mov
fs
add
lods
in
add
sahf
shrl
roll
insb
into
mov
pop
roll
lret
in
ja
mov
add
add
push
push
aam
add
add
mov
mov
add
add
lret
clc
jecxz
add
add
fmull
push
xor
sub
not
dec
pop
push
push
push
push
lea
push
call
add
lret
add
add
cmc
mov
mov
fyl2x
out
in
lahf
aad
add
lock
lret
lret
add
add
add
loopne
add
add
add
test
mov
data16
add
push
in
add
test
add
mov
add
clc
pop
add
clc
mov
add
jbe
mov
lea
pop
push
push
pop
mov
push
lea
push
push
push
call
leave
mov
add
mov
std
xchg
out
jo
add
mov
add
add
add
add
add
rcll
in
jae
add
mov
add
add
stc
addl
mov
push
add
add
mov
jmp
jae
mov
into
add
add
add
int3
lea
pop
push
pop
push
inc
pop
lea
push
shl
ror
sub
pop
sub
push
shr
ror
pop
mov
push
lea
push
call
incb
add
add
jle
pusha
mov
cmp
jnp
add
lods
add
xchg
rcr
test
add
out
jl
push
arpl
fmul
add
jecxz
outsl
loope
add
jno
lret
push
add
jbe
add
add
add
add
add
cli
add
pusha
jno
mov
shr
add
add
pop
shr
push
add
shr
inc
pop
add
mov
add
push
rol
shl
pop
pushl
popl
mov
push
ror
rol
shl
pop
add
xor
push
not
inc
inc
pop
lea
push
shr
ror
shr
pop
mov
add
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
in
add
mov
push
add
add
clc
add
add
push
sarl
insb
add
add
loopne
add
add
push
gs
add
add
cmpsl
fiadds
into
add
add
add
stc
add
jbe
jbe
js
mov
pusha
add
add
cmc
stos
xchg
mov
cld
fistl
mov
movsb
lea
add
add
shr
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
xlat
add
in
pushf
shll
repnz
scas
add
add
xchg
push
std
lcall
nop
std
fs
push
add
xchg
out
add
cltd
nop
jb
clc
cli
xchg
add
test
fsubl
mov
jp
cmc
iret
xchg
movl
rolb
out
mov
in
jmp
add
add
add
add
cmpsl
fildl
xchg
add
add
pop
call
push
rol
shr
not
add
pop
add
nop
push
lea
push
push
push
push
call
mov
in
add
std
call
mul
add
add
rolb
add
pushf
add
orl
popl
add
add
add
xlat
movsl
pushf
add
test
add
mov
mul
add
xchg
int3
add
add
add
lds
in
shlb
add
mov
jl
add
mov
fwait
sahf
mov
pop
push
rorl
pop
nop
cmp
je
push
push
lea
push
push
lea
push
push
push
push
push
push
call
push
add
add
add
movsl
movb
xchg
add
add
iret
lcall
int3
push
add
add
add
test
add
aam
roll
nop
mov
add
xorb
add
jae
mov
add
aad
mov
ja
add
jecxz
jne
je
scas
std
mov
lea
pop
nop
push
pop
nop
inc
push
push
lea
push
push
push
call
xchg
add
out
add
adc
jae
add
pop
mov
add
add
pushf
add
add
add
rol
add
jge
add
mov
add
add
push
add
ljmp
and
jb
add
roll
add
std
mov
rcl
jl
ja
add
mov
lea
pop
nop
nop
cmp
jb
push
xor
dec
pop
xor
push
add
inc
add
pop
jmp
mov
push
push
call
jb
add
add
testb
fiaddl
mov
movsl
mov
mov
push
sahf
add
push
add
add
add
jle
arpl
repnz
lret
movsb
add
fldl
mov
loope
jnp
cmc
std
fiadds
add
add
leave
pop
movsl
push
jecxz
mov
add
mov
add
add
mov
cld
lea
pop
add
push
shl
sub
add
lea
pop
movzwl
mov
add
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
push
add
add
lods
addb
rcrb
clc
add
test
mov
out
push
add
add
mov
rcr
add
popa
add
jnp
jnp
xorl
pop
lea
add
jmp
in
sahf
mov
add
xchg
jns
pop
mov
fiaddl
cwtl
lods
pop
push
add
bound
pop
mov
xor
xor
push
push
push
push
push
push
push
push
call
mov
add
xchg
jge
lcall
xchg
ljmp
add
add
in
popf
in
int3
add
add
add
lods
add
clc
jmp
roll
flds
add
add
lcall
iret
mov
call
in
xchg
add
adcb
push
iret
add
add
xchg
lods
add
push
add
mov
lea
pop
shl
xor
push
ror
lea
pop
shl
push
dec
sub
dec
not
pop
xor
push
lea
push
push
push
lea
push
push
call
mov
jp
shll
add
add
mov
imul
jmp
add
push
shrb
add
cmpsb
push
in
repnz
add
add
out
pop
mov
jbe
add
xlat
icebp
subl
in
je
add
add
add
push
push
add
stos
fcomp
clc
add
ja
push
add
pusha
add
out
fwait
insb
loopne
fwait
jbe
hlt
add
fcmovu
mov
icebp
add
sbb
loope
push
push
push
call
add
jecxz
add
pop
pop
jmp
bound
imul
jbe
lods
add
add
je
add
out
add
add
imul
mov
add
add
outsl
incb
cli
cwtl
mov
add
add
insb
add
out
outsl
leave
shlb
push
add
cmc
xchg
add
popf
add
add
mov
add
pop
xor
mov
push
push
push
call
add
enter
addl
add
roll
notb
cltd
pop
add
add
add
add
and
clc
in
mov
add
add
pop
pop
add
cltd
adc
add
add
les
jge
add
je
xlat
add
test
lock
jno
std
xchg
and
add
add
jbe
test
jae
add
pop
add
pop
add
push
push
lea
push
lea
push
push
call
cli
add
add
add
jae
mov
fadds
pushf
add
in
add
add
scas
lods
add
add
mov
add
incb
push
jge
mov
jo
add
mov
jge
outsl
add
mov
add
scas
mov
add
add
mov
push
jl
add
add
mov
lea
pop
pop
push
sub
add
pop
pop
push
shr
inc
rol
rol
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
add
mov
lahf
je
leave
pop
in
cmpsl
pop
add
sahf
xchg
mov
xchg
cmpsl
cli
stc
push
add
add
push
add
jbe
out
push
push
add
add
lret
mov
add
sti
push
mov
cmc
scas
add
add
add
add
mov
add
scas
add
jo
mov
fldt
push
add
loope
mov
fwait
add
pop
leave
ret
push
push
shl
pop
mov
push
push
push
push
push
push
push
push
push
call
pushf
pop
test
add
mov
add
bound
add
popa
xorl
mov
add
add
addl
mov
jae
in
mov
add
add
mov
clc
add
lock
lret
imul
ja
add
mov
add
add
add
movsb
pop
arpl
loopne
xchg
mov
lea
pop
push
push
not
xor
shr
pop
push
push
sub
lea
add
pop
mov
mov
push
push
push
push
push
push
call
enter
add
fcom
cmpsl
out
xchg
cld
insb
add
add
add
mov
lahf
out
in
xchg
scas
add
fiadds
cli
jnp
add
mov
mov
add
je
nop
push
add
fsubl
mov
roll
add
xchg
add
mov
jnp
fidivl
mov
add
xchg
insb
jb
jle
push
jno
add
fmull
jge
push
lea
push
lea
push
push
call
add
add
jo
loope
add
bound
add
add
add
div
add
jmp
push
add
add
add
push
add
sti
mov
mov
imul
imull
fsub
mov
mov
mov
add
push
add
add
add
add
mov
negb
adcl
data16
rorb
test
add
mov
test
je
push
sub
lea
shl
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
lea
pop
gs
sbbb
add
pop
push
rolb
add
add
movsl
mov
add
testb
mov
cld
roll
add
add
in
add
add
add
fld
add
cld
fildl
add
add
add
lret
mov
pop
add
add
cwtl
enter
test
add
add
add
add
jnp
out
scas
mov
lea
pop
mov
mov
inc
push
lea
push
call
popf
mov
add
add
push
std
xchg
iret
add
add
test
fistpll
xchg
add
jl
popa
mov
mov
lret
repnz
cltd
stc
xchg
xchg
pop
repnz
push
outsl
xchg
add
fdiv
add
add
fcomip
add
pop
pop
add
xchg
jb
add
add
lea
pop
cmp
je
push
shr
pop
test
je
mov
inc
push
lea
push
lea
push
push
push
push
push
call
add
add
jecxz
add
jbe
add
add
push
clc
add
imul
fcmovnbe
pop
jae
mov
add
jae
jl
loopne
add
add
mov
xchg
lret
push
pop
cmpsb
add
jl
out
add
xchg
cmc
jo
jnp
repnz
pop
fdivr
lods
add
popa
add
add
ret
mov
add
mov
lea
pop
cmp
je
test
jne
push
lea
pop
xor
pop
pop
push
ror
sub
pop
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
ljmp
push
mov
flds
clc
out
xchg
add
aad
add
cld
out
lret
rorb
add
add
mov
aam
loope
mov
lcall
mov
lahf
lods
nop
add
add
sahf
fidivrl
lock
add
push
loop
popl
lea
pop
leave
push
push
push
push
push
lea
push
push
push
push
call
push
xchg
mov
push
lret
jge
add
add
add
pop
add
scas
xchg
mov
decb
scas
add
add
int3
popf
add
cli
jecxz
xchg
add
testb
add
mov
add
add
jae
add
notl
add
scas
fstl
clc
push
call
std
mov
lea
pop
ret
mov
inc
push
push
push
lea
push
push
push
push
push
call
add
jns
call
jle
fwait
add
add
pop
xchg
bound
insb
pusha
add
add
leave
add
mov
add
add
add
jnp
add
enter
js
mov
int3
jbe
add
add
cld
add
icebp
add
lods
add
add
mov
push
add
mov
lea
pop
cmp
jne
push
push
push
call
lcall
add
pop
cltd
cmc
add
add
pop
xchg
mov
scas
fistpl
mov
add
add
lea
jns
mov
add
imul
loopne
pop
cmpsl
pop
push
fwait
jmp
add
mov
mov
add
jo
je
add
stos
mov
lea
pop
lea
push
add
inc
lea
pop
mov
push
push
push
push
push
lea
push
call
in
stos
fadds
add
cwtl
lahf
add
add
mov
add
ret
add
mov
mov
pop
popl
xchg
add
int3
mov
lock
pop
add
add
add
add
jns
mov
imul
add
add
int3
add
nop
int3
add
hlt
lods
push
jae
stos
js
push
flds
add
std
icebp
roll
popa
je
in
mov
lea
pop
test
je
mov
add
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
mov
aam
bound
add
add
add
out
mov
add
enter
cltd
ljmp
add
icebp
js
in
pop
pop
cld
insb
add
add
scas
jo
fldl
fnstenv
pop
loope
stos
pop
add
adcb
xchg
add
add
add
cli
add
mov
lds
pusha
sub
loopne
test
decl
je
push
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
cld
fsubr
stos
iret
add
xchg
in
add
je
add
add
add
mov
scas
push
add
mov
add
xlat
add
add
pushf
add
aam
jae
popa
add
jp
cld
add
push
int
scas
add
stos
xchg
add
icebp
add
fldl
jmp
add
out
add
jmp
fdivrp
add
bound
hlt
lea
pop
add
push
push
call
test
xchg
add
jo
data16
add
lcall
add
flds
jge
out
stos
mov
movsl
aad
mov
xchg
cld
xchg
fdivrl
add
loope
add
iret
movsl
cmpsl
xchg
add
data16
ljmp
mov
fiaddl
add
add
cwtl
add
ret
je
fmull
loopne
test
dec
stc
pushl
rclb
inc
add
shl
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
add
push
add
push
add
xchg
js
jp
test
roll
mov
add
fisttpll
sahf
add
add
test
add
rolb
addb
cmp
in
xchg
add
movsl
loop
mov
loop
arpl
push
in
cmc
add
jl
cwtl
arpl
aad
loopnew
jno
add
add
add
div
test
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
imul
mov
out
add
add
xchg
ret
mov
imul
into
mov
add
testb
add
add
les
add
mov
add
nop
add
jp
movsb
add
add
cmpsb
add
mov
enter
in
mov
data16
pop
push
not
lea
pop
pop
push
shl
pop
leave
ret
lea
push
rol
ror
pop
pop
pop
pop
push
push
push
push
push
push
call
mov
sti
add
jne
int3
lcall
push
orb
fs
popl
add
add
add
fprem1
xchg
repnz
mov
add
testl
fs
add
mov
into
add
leave
add
data16
test
add
mov
lea
pop
pop
leave
push
push
push
push
push
lea
push
call
add
rolb
add
lcallw
test
jle
incb
add
icebp
mov
add
enter
xchg
lcall
cmc
in
cmpsb
jo
add
add
stos
mov
gs
mov
jmp
mov
ficomps
movb
jne
add
movsb
xchg
lret
mov
mov
mov
fadds
mov
add
mul
iret
add
add
scas
out
lret
push
mov
pop
ret
mov
push
shr
lea
ror
pop
pop
push
ror
pop
pop
pop
push
inc
rol
pop
pop
push
pop
leave
ret
push
add
sub
pop
rol
push
add
sub
pop
rol
xor
push
sub
pop
inc
push
sub
xor
ror
pop
cmpb
jne
ret
adc
and
xchg
and
imul
adc
and
pop
and
push
and
sub
and
scas
and
push
and
aam
jno
push
cmp
jno
call
lret
addb
pop
lock
insb
sub
jae
dec
out
in
push
xor
clc
push
or
push
cli
cltd
cmpsb
or
pushf
cmp
dec
pop
inc
inc
jmp
loop
add
ror
sbb
dec
ds
call
pop
es
lret
or
pop
rorb
xchg
out
sbb
jmp
rolb
fcompl
pop
in
sti
out
into
mov
fsubl
stos
cs
movsl
clc
mov
js
fildl
js
lds
fmul
jecxz
xchg
or
inc
pop
aas
push
jmp
mov
and
addr16
pop
shll
je
add
aaa
and
push
test
mov
mov
inc
cmp
sbb
push
mov
fs
pop
dec
add
dec
cmp
pop
sbb
dec
inc
lret
in
jg
js
lods
test
xor
xor
cmovno
popa
mov
lret
push
xor
cmp
lcall
mov
out
jmp
add
cwtl
mov
jno
hlt
in
scas
mov
push
jo
test
mov
hlt
imul
aad
fstl
cld
inc
dec
mov
push
mov
test
fistpl
push
lea
popf
mov
pop
es
sbb
stos
leave
xchg
arpl
lods
jle
push
test
fildl
ret
mov
enter
lret
jbe
pop
loop
mov
sub
dec
pop
mov
sub
fsubrs
mov
pushf
popf
cmpsl
rol
daa
jo
test
js
inc
push
shrb
jbe
scas
aas
pushf
outsl
hlt
and
frstor
jle
in
aas
mov
add
imul
cmc
mov
mov
lods
sub
sarb
cs
adc
or
mov
mov
out
notb
adc
add
je
and
inc
sub
push
ret
or
iret
xchg
add
mov
dec
mov
cmp
add
repz
mov
xor
cmp
movsb
fisubs
imull
xchg
xor
add
mov
sub
aaa
repz
xlat
lcall
lods
icebp
dec
mov
xor
mov
xchg
or
out
sbb
movsb
outsb
xor
push
pop
bound
scas
mov
shr
jno
mov
jo
ss
cld
sti
dec
mov
fsubs
mov
sbb
sbbl
loop
lods
lret
call
inc
dec
sbb
test
push
sub
cmp
hlt
stc
sarl
imul
mov
out
lret
outsl
adc
mov
jge
aas
js
fwait
je
stos
lods
mov
mov
push
mov
je
aam
mov
push
push
mov
in
in
pushf
imul
push
scas
sub
lea
push
mov
mov
imul
aad
flds
sbb
push
test
mov
cld
insb
adc
cmp
mov
mov
pop
mov
jge
rcrb
and
mov
cmp
push
stc
dec
rorb
cld
aas
jmp
sbb
sub
inc
mov
aaa
clc
pop
jbe
dec
add
aas
lret
clc
inc
aaa
mov
mov
jl
outsl
and
pop
inc
cmp
shrb
adc
sub
lock
cmp
ret
cli
xchg
stos
in
mov
in
sbb
inc
cmpsl
mov
adc
dec
jno
push
xlat
mov
pop
sbb
and
and
call
dec
cmc
mov
or
aaa
call
cld
fistl
pop
cli
fcmovnu
pop
out
cmp
mov
mov
movsb
push
xchg
mov
xchg
jbe
jg
jbe
fsubrs
loope
test
push
inc
lret
enter
add
push
imul
sbb
fistpll
jl
jbe
xchg
lods
fsubs
add
in
imul
sub
inc
jno
xchg
cmp
dec
cmp
or
push
fs
push
xor
fwait
stc
and
dec
mov
js
stos
loope
fisubrs
sbb
out
call
les
sarb
adc
xchg
gs
cmp
hlt
in
std
pushf
or
andb
xor
repz
pop
xchg
stos
jbe
test
popf
adc
outsl
mov
inc
xchg
shlb
mov
imul
pop
sub
outsl
mov
xor
or
mov
mov
inc
mov
stos
cmc
mov
cltd
lods
mov
vcvtdq2ps
dec
push
ss
test
adc
add
pop
in
pushf
or
lods
jecxz
mov
andl
xchg
orl
and
popf
dec
iret
idiv
add
rorl
push
repz
ljmp
sahf
repnz
sahf
or
test
ror
cmpb
dec
pop
bound
mov
pop
mov
dec
in
jae
out
push
pop
dec
adc
inc
loope
aad
je
and
mov
sub
mov
mov
pushf
fstpl
or
dec
vmread
or
add
inc
arpl
cmp
mov
fadds
imul
dec
xchg
aas
jmp
and
pusha
nop
and
sub
in
or
arpl
mov
mov
cmpsl
inc
loope
or
enter
xchg
pop
jmp
in
out
xlat
cmp
sti
inc
mov
and
ret
stos
imul
sub
mov
or
jecxz
out
cld
mulb
add
pop
sub
mov
mov
push
and
mov
es
fsubr
mov
out
mov
push
xchg
mov
xlat
icebp
cmp
popa
pop
jl
mulb
cmp
lods
outsl
arpl
mov
hlt
add
jns
adc
ljmp
fs
sbb
xor
and
mov
xchg
hlt
xor
popa
das
fucom
sbb
out
push
lock
xor
aas
pop
and
inc
stos
ret
ret
xchg
pop
lret
daa
cltd
xchg
dec
std
inc
push
cld
mov
dec
inc
jbe
stos
sbb
add
inc
pop
mov
addb
or
lret
insb
sub
jnp
lret
inc
push
push
xchg
jg
or
pop
push
cmc
ret
cmp
mov
push
stc
stc
fsub
out
fistps
adc
push
mov
mov
repnz
mov
fisubrl
mov
pop
push
dec
pusha
cmp
xor
andb
push
lret
and
mov
dec
xchg
jns
jb
sarl
clc
pop
mov
and
cli
push
push
push
inc
pushf
repz
mov
lods
ds
xor
cltd
scas
bound
out
mov
jle
mov
out
push
sbb
daa
arpl
dec
in
movsb
ret
outsl
addr16
ljmp
in
repnz
test
xchg
sub
in
imul
adc
in
push
fcoml
stos
dec
cld
cs
std
pusha
jmp
jg
cld
sub
cmp
jb
xchg
pop
ret
mov
and
lods
sbb
cmp
pusha
sbb
cmp
sti
icebp
push
mov
cwtl
push
icebp
and
lret
add
push
out
mov
stc
pop
rcl
imul
mov
popa
adc
sub
jp
bnd
mulb
loopne
pop
jbe
xchg
movsl
out
bound
lret
ret
popf
repnz
lahf
mov
aam
lds
out
loope
and
mov
mov
jns
pop
inc
dec
xchg
or
out
adc
push
aam
add
rcll
pop
and
sub
adc
addb
jp
sahf
int
pop
out
mov
lods
inc
xor
subb
adc
xchg
xchg
xchg
jo
daa
cmc
mov
jne
fwait
mov
ficoms
int
fs
inc
lock
inc
inc
jb
outsb
dec
clc
pop
jle
pop
sarl
fwait
dec
pop
adc
add
add
mov
cmp
xor
or
and
fbstp
nop
lret
loope
mov
mov
fisubs
adc
mov
aad
aas
sbb
icebp
icebp
and
js
pop
daa
xorl
aam
in
sahf
cmp
arpl
push
aad
push
ja
xor
pop
nop
and
sub
push
es
sub
mov
dec
mov
popa
pop
cld
cmp
iret
mulb
lret
dec
mov
arpl
je
pop
jle
jne
mov
dec
sbb
inc
test
jmp
mov
push
sbb
xor
xchg
adc
and
fidivl
mov
fstl
pop
add
fwait
pop
or
dec
mov
cmp
dec
insl
pop
dec
pop
jo
das
jbe
pop
dec
js
mov
shrl
iret
ja
jmp
cmpl
jg
jo
dec
movsb
cltd
test
adc
cmp
aaa
insb
pop
add
or
dec
inc
mov
movups
aaa
test
sub
mov
rolb
test
and
sub
mov
dec
fcmovbe
pop
xor
cmovbe
pop
repz
and
pop
add
insl
stos
sti
hlt
mov
loopne
adc
jge
inc
mov
in
es
pop
fcoml
cs
pop
cs
imul
jns
icebp
rcl
or
inc
mov
xchg
je
mov
int
pop
ret
inc
fmuls
adc
jp
jmp
push
std
jbe
adc
pop
sub
out
leave
mov
pop
movsl
xchg
mov
cmpsl
or
cmp
rcll
mov
or
xlat
int
pop
incl
lret
add
jo
test
ds
xchg
test
adc
or
repnz
xlat
pop
ds
popf
in
sbb
sbb
push
das
or
mov
dec
xor
push
push
shl
lret
int
ds
xchg
fsubrs
rolb
daa
mov
and
mov
enter
in
lahf
dec
xchg
add
pop
pop
jno
and
fadds
std
jb
or
mov
fisttps
mov
flds
dec
fbstp
push
insl
loopne
mov
mov
cs
add
aad
sub
mov
outsl
stos
ret
xlat
stc
pop
mov
popa
sbbl
aam
or
dec
fdivrs
xchg
and
mov
add
xor
jge
test
inc
sbbl
pusha
push
push
jl
cmpsl
cmc
add
in
pop
sarl
or
int3
imul
ficoml
sub
push
shll
push
or
mov
movsl
sub
icebp
rcl
testl
aad
dec
scas
fimull
push
and
add
jge
mov
xor
or
je
inc
jnp
scas
and
dec
mov
insl
mov
outsb
add
sub
mov
out
repz
jo
lock
popa
push
out
sahf
pop
lock
out
lea
xor
jl
dec
pop
insl
pop
outsb
sub
jbe
imul
aad
lahf
lret
lods
jno
rol
popf
push
into
push
lret
loop
int3
lods
jno
sub
add
sbb
shll
or
jne
fildll
push
dec
adc
imul
shlb
stos
bound
data16
repz
mov
addr16
inc
mov
inc
mov
inc
xchg
mov
jle
stos
xlat
cwtl
jg
inc
sbb
push
or
loopne
push
push
and
pushl
mov
add
pop
mov
xchg
xor
dec
sub
jae
enter
push
arpl
mov
jl
cmp
mov
push
clc
hlt
loop
out
std
sub
imul
fisttps
sub
mov
pop
sub
mov
push
repz
int
pop
xchg
mov
mov
mov
add
nop
lods
mov
scas
adc
jb
movsb
repz
and
and
out
add
out
pushf
rolb
jp
adc
mov
xlat
das
mov
and
subl
sub
insb
insl
xchg
sub
pushl
pop
mov
xchg
mov
popf
data16
outsb
rcll
ljmp
add
jg
mov
inc
jae,pt
inc
adc
les
insl
sub
ds
jmp
aad
push
aad
lret
fs
ljmp
pushf
in
sbb
mov
adc
orb
inc
push
nop
fs
mov
repnz
cmpsl
jo
bound
gs
std
cmp
push
mov
cmp
cmp
mov
jmp
xchg
dec
test
mov
sbb
sub
in
xchg
mov
shrl
int3
ljmp
cmpsb
push
hlt
arpl
cld
repz
test
lcall
das
mov
adc
fstpt
mov
inc
call
pop
sahf
sahf
sub
ret
ret
push
loop
das
pop
mov
xchg
lahf
das
push
movzbl
movsb
clc
sbb
lods
aad
loope
pop
lcall
and
sahf
mov
scas
test
leave
popf
mov
adc
and
int
mov
loopew
into
dec
out
aas
dec
xchg
rcrl
pop
xchg
out
out
sub
mov
jb
cmp
xchg
ret
daa
sub
dec
lds
clc
xchg
jbe
mov
xchg
mov
cmc
xor
push
push
cs
inc
fldenv
dec
inc
dec
rcll
lods
mov
mov
int3
mov
push
jns
fcmovnbe
notl
icebp
xor
adc
adc
rcll
andb
nop
dec
push
and
or
mov
add
push
sub
jge
mov
gs
dec
stc
das
add
or
jae
pop
imul
jo
clc
enter
add
cltd
shrb
cmp
xor
lcall
imul
push
cs
nop
in
sqrtps
out
adc
es
xchg
adc
jecxz
mov
fsubp
fnstenv
jle
arpl
dec
js
add
fnstenv
enter
scas
in
ret
push
in
xchg
pop
dec
jecxz
cmpsb
fisttps
or
and
pop
jns
ljmp
mov
mov
aaa
shrl
mov
sbb
jne
lahf
lahf
add
iret
push
xchg
insb
in
cmp
dec
popa
mov
scas
mov
inc
mov
sub
sub
outsb
sub
dec
mov
xlat
xchg
scas
lret
pop
loopne
lret
xor
in
add
fidivrl
add
inc
xorl
in
pop
in
outsl
fwait
data16
lock
cmp
iret
sti
cmpsl
outsb
and
icebp
jb
out
insb
mov
cs
pusha
rclb
inc
xor
cld
push
mov
cmp
or
imul
stc
roll
mov
push
pop
adc
mov
push
inc
aas
movsb
int
mov
rcll
push
xor
arpl
sub
mov
sub
push
add
jb
and
adc
aam
ret
test
ja
jb
jl
insb
mov
mov
int3
mov
dec
lret
xor
pop
add
jns
bound
mov
jmp
or
je
imul
mov
cmpsl
and
stc
sahf
sbb
xchg
push
inc
call
test
lahf
mov
or
xchg
sbb
fsubl
in
adc
xorl
mov
dec
pop
outsb
ds
add
iret
add
pop
repz
hlt
jne
fwait
push
adc
mov
test
in
idiv
test
or
movsl
cmc
jb
mov
aad
jmp
sti
sarl
das
adc
data16
out
push
dec
add
js
xchg
xlat
mov
scas
sub
push
js
xlat
sbb
cmc
or
pop
jp
add
xchg
sub
cli
cmp
punpcklbw
and
add
cmc
lret
pop
dec
cmp
int3
sub
xor
test
repz
sbb
jge
arpl
mov
icebp
std
icebp
imulb
xor
das
lds
push
pusha
sbb
into
adc
or
fidivs
mov
adc
das
push
sub
sbbl
xlat
lret
adc
inc
in
repnz
imul
mov
mov
dec
sub
add
insl
enter
insl
push
imul
inc
enter
in
push
fcmovu
mov
sub
sbb
add
mov
popa
mov
cmp
dec
jmp
jb
jb
dec
or
xchg
xchg
imul
dec
xchg
fsubrs
sbb
fbld
ret
pop
pop
fadds
xchg
add
sbb
cwtl
lret
mov
ret
roll
enter
int3
push
cmp
outsb
sub
test
int
mov
xor
push
xor
loopne
lcall
xlat
aam
mov
cmpsl
imul
lret
pop
popa
adc
stc
std
mov
xor
add
movsl
adc
enter
outsb
mov
loop
lods
jo
fwait
sbb
popa
xor
pop
int
mov
fs
mov
xor
and
jmp
add
test
gs
push
add
mov
pop
mov
mov
mov
std
pop
adc
xor
xor
shrb
lock
push
mov
mov
popa
xchg
sub
into
push
inc
sub
movsl
mov
popf
sub
testb
dec
cmp
cmp
shrl
shll
cmpsb
adcb
loopne
icebp
sahf
push
das
fs
push
dec
je
repz
dec
xor
repnz
cmpsb
jmp
movsl
jb
int3
xchg
cwtl
out
xlat
jecxz
xor
std
lock
dec
dec
test
clc
sbb
icebp
js
je
dec
inc
add
ret
enter
pop
ret
mov
push
pop
leave
iret
dec
push
jle
loop
push
pop
or
mov
or
adc
mov
fiaddl
test
dec
push
push
dec
sbb
fiadds
adc
cmp
or
mov
iret
dec
cmp
stos
jns
pushf
dec
adc
adc
mov
outsl
mov
pop
loop
pusha
les
movsb
dec
add
mov
and
mov
jno
in
int
sahf
mov
into
cmpsl
mov
sbb
xor
adc
les
jae
test
jmp
inc
pop
in
pop
imul
fnsave
xorl
pop
mov
lahf
sbb
inc
int
dec
push
loope
inc
pop
jge
ja
popa
pop
cmpsb
add
sbb
data16
push
cmp
es
in
lea
push
jl
pop
test
sub
pop
lock
and
sub
mov
dec
int
or
jmp
lock
sti
inc
cmp
mov
cli
out
xchg
push
dec
or
jns
xchg
jno
addl
loope
lds
pushf
cltd
out
dec
int
stc
cmp
xor
shlb
fs
push
mov
adc
push
sbb
pop
repnz
ret
sbb
push
push
xchg
outsl
or
cmp
ret
jbe
mov
mov
inc
sbb
cmpsl
inc
imul
int3
bound
cmp
ljmp
loopne
icebp
je
jbe
mov
loop
jl
scas
leave
mov
push
jmp
pop
cmc
lret
sub
or
test
push
sbb
shll
sbbb
out
adcl
jecxz
fisttps
lods
test
test
sbb
jl
and
and
push
pop
dec
xchg
aas
xchg
mov
adc
or
dec
and
lds
jae
add
ret
out
aad
into
testb
loopne
or
jge
push
mov
jge
push
cmp
and
inc
out
nop
or
jno
jno
sub
mov
fwait
dec
aaa
lcall
dec
orl
and
dec
adc
repnz
dec
mov
pop
imul
pop
lret
fldcw
lret
pop
andb
push
jmp
out
jg
pop
pushf
inc
aad
mov
es
mov
sub
push
jecxz
cmp
insb
test
cli
pushf
push
and
shlb
adc
imul
xchg
mov
jo
adc
int
sub
adc
loopne,pt
loopne
sub
fidivs
mov
push
mov
dec
out
stos
dec
jmp
and
xchg
fs
mov
jb
pop
cmp
push
add
pop
shrb
mov
outsl
ret
mov
scas
mov
mov
sti
and
mov
add
sub
dec
sbb
fiaddl
int3
ds
adc
out
mov
mov
pop
pop
or
imul
sbb
jae
bound
or
mov
js
call
imul
mov
mov
mov
shrl
add
xor
sub
rcl
cmc
stos
pop
add
cmp
or
fsubrs
xchg
loop
shrl
cmp
dec
loop
jbe
movsb
cmpsl
addr16
cmp
xchg
and
cmc
test
ret
pop
shrl
mov
sub
shl
imul
xchg
cmp
fldt
stos
mov
sbb
aam
hlt
adc
and
fnstcw
into
sub
xor
mov
dec
arpl
lods
dec
popf
jne
test
mov
fimull
or
add
lods
rol
push
mov
outsl
in
and
and
lret
cmp
dec
loopne
in
data16
cmp
lods
push
stos
mov
sbb
test
arpl
push
sahf
mov
lods
pop
add
and
ret
ss
mov
into
lahf
lret
loope
dec
inc
cltd
shrw
pop
test
mov
cmc
out
cmp
mov
ds
insl
sti
insl
test
push
push
shlb
fiaddl
xchg
mov
lods
xor
adc
pop
mov
push
int3
andl
or
sbb
js
adc
shll
sbb
test
mov
jg
or
mov
adc
jg
mov
jge
in
sub
sub
xor
jecxz
and
call
movsb
sub
adc
iret
mov
insb
mov
pop
and
sahf
cmp
jl
mov
xchg
insb
loopne
mov
test
aam
in
ret
repnz
std
lret
adc
arpl
mov
sti
jle
pop
and
sarl
ret
jl
pop
and
in
rcrb
mov
xor
pop
into
xchg
inc
lret
js
iret
test
xor
repz
mov
std
cmp
cmp
dec
mov
add
fisubrl
and
arpl
push
push
repz
and
fisttps
or
xchg
inc
cmp
mov
fiadds
sbb
inc
cltd
xchg
imul
mov
mov
notl
lahf
jo
jg
insl
gs
jle
lahf
mov
out
nop
sbb
imul
xchg
mov
pop
in
shlb
push
stc
xor
jg
pop
sti
xchg
dec
mov
pop
stc
out
xorl
lret
xchg
in
jbe
xor
inc
push
pop
mov
lahf
arpl
test
dec
mov
push
or
aas
sub
inc
xor
pusha
inc
xor
inc
loop
mov
push
in
pop
add
jle
dec
mov
ds
out
sbb
xor
outsl
rolb
jmp
andb
lcall
adc
pop
mull
shll
sahf
xor
cmp
aaa
add
push
or
and
sbb
les
shrl
add
enter
push
fildll
jne
jmp
jo
xchg
insb
scas
outsl
aas
repnz
cmpsb
lds
aam
sub
fisubl
movsl
mov
bound
cmc
arpl
mul
fwait
mov
xor
ret
sub
push
je
inc
js
sub
fsub
jb
and
int3
adc
and
insl
ss
addr16
aad
adc
xchg
enter
push
xchg
sbb
jl
or
dec
loop
inc
jge
xor
clc
das
clc
sub
call
repnz
popa
stos
lea
cmp
sarl
cmp
mov
mov
xchg
add
adc
repnz
sub
jno
fists
and
jecxz
add
lret
or
mov
int3
mov
xchg
scas
and
cmp
scas
xchg
sub
in
icebp
mov
cmpsl
xchg
pushf
and
aam
insl
sub
jle
fdivrl
pop
int
sbb
es
mulb
mov
sti
jp
sub
imul
flds
pop
push
sub
ja
jbe
mov
fnsave
orl
lods
pushf
ficompl
sub
insb
sbb
les
xchg
loop
shl
mov
je
out
jp
je
idivl
push
xor
xor
mov
sub
cmpsb
subb
adc
loopne
inc
mov
sub
js
out
and
sti
sub
or
dec
or
jo
cwtl
sbb
inc
es
inc
lret
push
mov
xor
or
outsl
add
mov
push
dec
fdivrl
scas
mov
xor
fs
cmp
arpl
cmp
repnz
xchg
mov
xchg
push
int3
pop
ljmp
rorb
pop
sub
out
xchg
cmpsl
sub
mov
sub
imul
dec
test
orl
sbb
fbstp
shll
add
scas
mov
cmpsl
push
push
inc
jns
pusha
adc
movsb
dec
xor
sahf
inc
mov
shrl
incl
lock
xor
xor
sub
loop
jle
or
mov
mov
adc
and
insb
lret
icebp
push
outsb
mov
jge
pop
inc
mov
mov
and
shlb
fstpl
lods
movsl
inc
aad
xchg
jne
push
or
jb
xchg
cmp
jmp
push
add
icebp
mov
lods
hlt
mov
in
repnz
push
cmp
xchg
adc
insl
je
fwait
xor
push
xlat
js
loope
and
push
dec
cmpb
sub
adc
pop
scas
or
mov
call
pushw
add
jo
mov
es
aad
outsb
clc
sahf
inc
cmpb
lea
mov
add
adc
std
mov
jle
jecxz,pn
cmp
shl
mov
pop
nop
insb
insl
lods
cmp
adc
pop
jo
sahf
dec
lcall
inc
mov
outsb
xchg
dec
adcl
ljmp
test
push
ds
ret
mov
imul
scas
pop
lahf
adc
xchg
add
ficomps
add
jge
leave
pop
cld
cmp
cmp
jge
scas
idiv
dec
aaa
pushf
fistpl
mov
cmp
lods
cmp
mov
jle
arpl
xlat
xchg
js
cmpsb
adc
pop
and
pusha
fmull
shlb
adc
cli
and
js
push
add
int
sub
loopne
cld
and
vandnps
aam
pop
cmc
arpl
fnsave
insl
mov
pusha
pop
xchg
fucom
rcr
inc
leave
negb
sbb
xor
inc
fidivrs
and
imulb
pop
jl
dec
loope
or
int
mov
mov
mov
jns
clc
daa
jb
int
pusha
or
push
std
inc
test
mov
shll
add
dec
xor
mov
xchg
mov
sbb
pop
test
ljmp
clc
push
jg
ret
nop
mov
jb
jle
movsb
addr16
outsl
out
push
call
add
pop
pop
lods
fidivl
std
push
rcrb
insl
xchg
loop
icebp
xchg
cmp
into
sti
inc
push
cmp
jecxz
mov
and
jb
ret
mov
aaa
outsl
xor
gs
jo
fxtract
jmp
decl
call
pop
leave
nop
xor
xchg
lea
aad
jecxz
sbb
pop
sbb
cmp
into
add
fildl
nop
sub
in
sbb
push
xor
add
dec
stos
mov
mov
cmp
inc
repnz
fs
shrb
pushf
movsb
sbb
cmp
mov
xor
inc
cltd
imul
test
mov
loop
lcall
add
lods
add
ds
xchg
sbb
inc
stos
mov
jb
test
xchg
mov
int3
mov
push
lret
in
sarl
dec
pusha
and
jge
add
lods
or
xor
pushl
mov
sbb
pushf
sbb
fisubs
cmp
jae
sub
cmp
mull
cmp
jmp
divl
loop
out
inc
ffree
cwtl
and
adc
mov
pop
bound
shr
mov
decl
push
inc
in
aas
xor
in
xor
xor
adc
int3
and
jno
dec
mov
insb
pop
cmp
jmp
insb
mov
clc
cmp
ds
mov
mov
loopne
jg
repnz
ja,pt
add
repnz
lcall
idivb
jne
sub
sbb
and
mov
add
sbb
cmc
sub
aas
stc
dec
test
stos
jo
daa
insb
nop
mov
mov
xchg
mov
sbb
cmc
fwait
adc
lods
sbb
bound
mov
stc
idiv
out
pop
je,pn
mov
sahf
out
fisttps
xchg
add
and
ds
int3
sbb
sti
dec
cs
dec
fidivrs
or
popa
pop
subl
ret
mov
aaa
mov
call
inc
fsubl
in
dec
pushf
mov
ret
lret
mov
sti
aaa
popa
cmp
addr16
lods
scas
dec
mov
sbb
inc
pop
inc
dec
stos
cmp
jge
dec
mov
scas
ror
lret
in
xchg
sbb
repz
stc
f2xm1
out
dec
sub
jno
lcall
call
fimuls
hlt
pop
fimull
loop
shrb
pop
xorb
jl
ss
or
es
clc
dec
inc
dec
das
inc
icebp
jg
loop
lcall
mov
push
sbb
fcompp
inc
data16
out
mov
js
loope
mov
int
mov
mov
push
int3
cmp
das
out
dec
add
sub
dec
and
cmpsl
scas
fs
and
aad
mov
xchg
ret
inc
xor
insb
push
sbb
xchg
mov
mov
sbb
ja
repz
xor
add
pop
sub
test
add
cmpsl
sub
dec
mov
mov
mov
pop
imul
mov
std
xchg
aad
je
mov
shll
xor
sbb
xchg
mov
dec
fdivrl
mov
xor
lods
push
sbb
mov
movsl
push
dec
ror
sbbl
vphaddbd
in
icebp
das
or
std
mov
rcll
or
lret
bnd
loopne
xor
xor
cmp
mov
pop
outsl
jle,pn
sub
adc
bound
out
cwtl
lock
bound
xor
mov
jo
leave
icebp
jnp
imul
jp
fisubrl
dec
jae
adc
ret
mov
je
popf
adcl
mov
dec
adc
clc
jp
js
mov
dec
push
test
jno
bound
lods
xchg
mov
nop
sahf
xchg
sub
jg
int3
xchg
in
stos
js
adc
div
or
fadd
or
negl
mov
xor
adc
inc
push
pop
jge
test
dec
mov
in
pop
push
and
push
pop
cld
fdivr
or
outsb
jge
mov
push
cmc
jecxz
cltd
and
insl
pop
dec
cmp
bound
push
int3
pop
movsb
test
xchg
and
pop
jb
xchg
mov
push
ret
je
ret
lret
and
fnstsw
cmc
jb
push
xor
xor
pop
lods
rcll
dec
jno
cmc
adc
jno
adc
int
cmp
pop
repnz
sub
icebp
js
mov
icebp
lcall
dec
and
es
sbb
dec
test
pop
xchg
loopne
mov
mov
xlat
outsb
fdivrs
adc
jnp
subb
ret
and
es
mov
adc
loope
popa
dec
push
out
lods
jo
sub
fldl
das
mov
pushl
sbbl
adc
iretw
sarl
into
xor
adc
add
jne
push
mov
jbe
push
jge
add
xchg
scas
cmp
pop
jae
cmpsl
cmp
scas
mov
add
movsl
sbbl
fistl
leave
sbb
sti
cmp
ds
xchg
ret
sub
dec
xor
xchg
mov
inc
iret
ljmp
in
cmp
decb
inc
mov
ljmp
inc
fsts
shlb
addr16
pop
lods
add
mov
mov
les
dec
add
clc
mov
xor
pop
sahf
ror
inc
test
xor
or
and
ficoms
mov
jmp
sub
sub
ss
movsl
cmp
shrl
add
sub
subl
mov
mov
mov
mov
std
mov
ret
fdivs
mov
sub
or
rcll
les
jg
jne
orb
xchg
loop
loop
daa
dec
clc
movsl
jge
fmul
xor
mov
int3
xor
push
sbb
daa
push
icebp
or
jp
cmpsl
push
into
mov
sub
mov
out
mov
push
mov
cmp
dec
push
sbb
xor
pop
xchg
jns
or
mov
mov
or
mov
sub
test
subl
stos
cltd
xchg
and
or
mov
les
add
mov
rolb
out
fadds
lret
shll
stos
mov
inc
imulb
pop
xchg
stc
rcrl
sub
clc
call
call
mov
jle
adcl
jo
shlb
shll
bound
lods
xor
movsb
les
or
mov
arpl
mov
leave
sti
test
das
movsb
sub
and
xchg
outsl
andb
jmp
lret
mov
movsl
nop
and
mov
movsb
cs
in
ljmp
dec
dec
imull
in
mov
fadds
and
xor
outsl
xor
imul
dec
mov
bound
pusha
outsl
pusha
imul
pushf
jp
in
mov
jge
add
ss
dec
mov
lods
and
adc
addr16
dec
lods
pop
jo
repz
out
jge
cltd
dec
mov
out
int3
jno
add
inc
xor
iret
push
sbb
inc
xchg
movl
adc
aas
pop
fsubr
cld
sbb
ss
push
sub
xchg
mov
int
mov
lea
mov
imul
mov
pop
lods
add
cmp
xchg
repnz
mov
cmp
add
cmp
iret
xchg
xchg
adc
imul
sub
xor
data16
xor
mov
ss
ret
dec
xchg
push
xorl
dec
mov
jecxz
test
fs
lds
mov
sbb
mov
inc
cmp
cmp
cli
sarl
cwtl
jnp
adc
or
jo
or
add
sub
xchg
jne
inc
mov
fisttpll
cmp
jecxz
ljmp
and
sub
sti
xchg
cmp
mov
dec
aaa
push
test
cmp
xchg
or
idivb
push
mov
and
repnz
bound
ret
hlt
lcall
dec
cmp
and
mov
negb
push
mov
call
clc
sub
jl
jne
stc
out
pop
add
ficompl
inc
inc
ja
outsl
pop
test
test
jb
push
add
neg
add
fdivrs
inc
dec
rcll
mov
jl
sbb
data16
and
or
sub
and
dec
pop
jns
jg
sub
imul
xchg
bound
or
fnstenv
push
movsb
mov
fabs
mov
mov
ficoml
xlat
shl
aas
xchg
call
or
aaa
dec
sub
cmp
pop
popa
mov
add
add
xchg
inc
stos
stos
mov
sbb
pop
shl
enter
or
mov
jo
lahf
shll
pop
jmp
sbb
adc
cmp
fs
mov
jl
sbb
das
xor
inc
add
cld
mov
sbb
aad
push
scas
out
into
jle
or
shl
mov
mov
clc
adc
cmp
xlat
leave
inc
out
mov
xchg
adc
shll
shrl
shll
pop
xor
popa
sub
cmp
jecxz
es
or
test
jmp
push
js
inc
outsl
imul
push
mov
or
mov
xchg
xchg
inc
cmp
icebp
or
loope
aam
sbb
pop
test
push
dec
sub
add
fimull
sbb
push
pop
mov
jg
ret
fsubl
push
mov
aam
dec
in
jmp
lods
es
test
push
pop
mov
pop
test
sbb
frstor
mov
push
mov
test
bound
xor
and
jge
rorl
mov
xchg
rcll
sub
mov
mov
mov
jne
movsb
movl
pop
lock
movsb
or
pop
adc
inc
adc
dec
and
xchg
pop
and
fisubrl
pop
dec
lock
and
jge
shr
shlb
decl
js
mov
jno
movsb
dec
in
dec
dec
arpl
sbb
fwait
mov
popf
cli
sub
inc
rcll
fucomip
add
xchg
lahf
stos
pop
or
xchg
fmulp
cmpsb
leave
ljmp
jle
mov
or
adc
jge
pop
bnd
push
xor
shl
xchg
enter
rcll
push
testl
dec
dec
sti
inc
push
ljmp
fistps
das
in
repz
je
add
test
pop
add
ret
insl
cltd
adc
pop
out
mov
mov
mov
in
jnp
xchg
cmp
dec
stos
xlat
jecxz
cmc
mov
test
xchg
popa
push
andl
xchg
and
dec
add
pop
fistps
lahf
fidivl
popf
add
inc
cmp
mov
sub
mov
push
jecxz
call
ja
insb
ss
or
pop
sbb
mov
xchg
popa
mov
repnz
sbb
and
lret
xchg
xor
sub
pop
fwait
test
icebp
xchg
xchg
xlat
data16
or
xchg
je
pop
cmpsb
mov
xor
call
cld
and
stos
adc
push
jp
jmp
push
rol
cs
push
clc
and
mov
sbb
lret
lock
out
sub
xor
stos
mov
pop
fmul
cwtl
mov
adc
das
jecxz
adc
mov
aas
in
stos
lcall
inc
adc
xchg
testl
mov
jmp
data16
popf
mov
imul
mov
or
ret
push
pavgw
push
dec
pop
adc
add
lods
inc
repnz
push
or
inc
ja
mov
lods
lcall
mov
ljmp
sarl
xor
ljmp
dec
inc
in
xchg
add
cmp
or
mov
adc
scas
lret
lret
push
or
pop
xchg
jecxz
xchg
adc
or
jecxz
dec
fcoms
pop
cltd
std
sbb
jle
push
lcall
cmpsb
xchg
or
or
sub
mov
call
dec
or
xchg
fdiv
jge
cmp
dec
lock
dec
jp
cli
rcrb
lods
lods
aas
fstl
lcall
out
xchg
or
pop
adc
jg
jge
shll
pop
push
icebp
dec
add
push
aaa
roll
aam
aas
js
cli
inc
mov
add
adcl
mov
sbb
mov
pop
clc
in
loop
adc
mov
mov
cmp
ss
sarl
mov
cld
and
ss
cmp
fstpt
arpl
xor
add
xlat
inc
jo
loopne
lahf
inc
xchg
xlat
push
sbb
ds
xor
sub
and
int3
cmpsl
mov
sub
push
xor
xchg
pop
or
cmpsb
sub
dec
pop
int
das
test
add
outsb
test
dec
jns
push
outsb
cld
in
lea
fwait
aaa
les
hlt
or
and
cmp
rorb
pop
ret
jg
mov
lcall
dec
out
rorl
adc
rcr
push
pop
sub
out
fstp
xor
nop
dec
xchg
push
cmpl
mov
popf
cld
push
insl
lcall
movsb
in
adcl
sbb
into
lret
daa
lret
or
mov
jo
icebp
cmp
lahf
loopne
aas
cmp
repz
jge
sbb
sub
sahf
scas
dec
bound
loop
int
jbe
xchg
ffreep
insl
xchg
test
push
or
leave
inc
test
add
xor
gs
in
xor
lret
add
mov
testl
ret
lock
push
inc
fbstp
add
dec
scas
pushf
lret
scas
push
mov
xchg
cmp
jmp
cld
outsb
inc
mov
pop
xor
insl
dec
addr16
inc
xchg
mov
adc
int3
sub
test
push
ss
nop
fildll
add
push
lock
push
out
push
push
or
pop
fiadds
adc
inc
jp
int
shlb
xor
fdivl
inc
mov
sarl
jbe,pt
sbb
push
das
test
xor
loopne
mov
add
data16
dec
or
dec
xchg
pop
or
adc
mov
mov
pop
in
sbb
mov
mov
or
pushf
mov
ljmp
iret
fmull
mov
jge
dec
push
push
sahf
imul
jmp
jecxz
cwtl
pop
mov
js
addb
outsb
aad
push
lret
cmpsb
fstps
jmp
mov
stc
push
inc
rcl
xchg
lock
lea
cld
mov
sbb
js
pop
jg
shlb
jle
into
adc
pop
dec
je
mov
gs
push
sub
jno
sbb
sub
xchg
adcb
fildl
mov
jo
fdiv
jnp
push
shll
adc
mov
xchg
icebp
shll
jnp
shll
sbb
ss
aaa
sbb
lret
xchg
and
adc
lcall
lods
sbb
rcrl
sbb
dec
xchg
push
pop
jb
inc
pop
xor
jecxz
orl
arpl
sti
subb
testb
sub
iret
fisttpl
xadd
cmovl
dec
outsl
dec
pushf
jb
cli
cmc
mov
subl
sub
aam
stos
xor
pop
mov
adc
add
fildll
sub
inc
int
push
inc
data16
jl
daa
outsl
mov
adc
loop
sub
mov
jno
rcll
inc
pop
movsb
adc
sbb
enter
insb
mov
in
adc
adc
add
stos
shrl
aaa
js
push
out
xlat
scas
scas
mov
test
fstl
cltd
js
out
xchg
stc
push
daa
ja
cs
xchg
cmpsb
lret
adc
or
fldt
divl
fisttpll
pop
les
lds
gs
cmp
mov
faddl
imul
dec
pop
incl
fcomi
adc
imul
inc
loopne
xorb
addr16
stos
push
ja
mov
repnz
push
insl
clc
fistps
test
out
mov
and
scas
iret
and
dec
jno
jl
xchg
out
lret
jmp
shrl
sahf
mov
push
flds
loopne
pop
cmp
fwait
mov
popa
out
scas
cltd
aas
xchg
mov
push
inc
fsubl
add
inc
decb
scas
out
mov
mov
mov
in
mov
adc
inc
je
scas
cmp
int
or
add
outsl
icebp
lret
cli
notb
pop
pop
and
outsl
or
rol
jne
pop
in
jge
lods
inc
xlat
ljmp
call
outsl
bound
push
insb
cld
shr
loop
sbb
inc
mov
pop
mov
mov
movsl
iret
aam
pop
clc
fiadds
in
jge
lea
mov
sub
shlb
adc
mov
jns
jnp
inc
mov
in
inc
pop
popf
shll
stc
jae
push
jecxz
jae
je
test
mov
mov
mov
inc
xor
mov
mov
test
mov
pop
adcb
movsb
mov
push
sahf
cld
ja
push
cmpsl
fildl
push
cmp
inc
mov
popa
cmp
xchg
push
dec
mov
idiv
and
ds
int3
cli
mov
rdtsc
cli
mov
test
jg
xor
hlt
shrl
push
les
or
jle
sub
sahf
adcb
mov
sbb
xor
xchg
xchg
inc
sar
pop
add
xlat
stos
mov
cmp
mov
pop
sarl
xor
sub
lods
cmp
mov
fdiv
mov
shlb
fnsave
xchg
inc
nop
fmuls
jecxz
inc
or
icebp
xchg
mov
popl
mov
or
and
in
mov
mov
lahf
mov
adc
xchg
subl
int3
mov
sub
mov
out
pop
mov
xchg
push
mov
mov
jo
sbb
push
ljmp
repz
fldt
push
add
sbb
mov
movsl
mov
sbb
sub
sub
push
sub
call
loope
push
or
enter
ss
fcmovnu
adc
repnz
imul
adc
add
ret
nop
pop
sbb
sti
xchg
adc
cs
pop
rcll
push
in
in
xor
dec
dec
movsb
pusha
push
shll
movsb
pop
adc
sti
in
xor
test
cmc
jle
idivl
imul
sarl
sbb
in
and
jle
lret
push
nop
xor
int3
stos
inc
fwait
cld
cmp
out
loop
rorb
mov
stos
push
or
icebp
mov
xor
mov
push
dec
add
aaa
mov
cmp
pop
jae
and
ret
sub
fmuls
nop
cmc
add
dec
fwait
inc
outsb
adc
call
subb
inc
repz
mov
push
sbb
pop
out
xchg
in
dec
xor
mov
shlb
std
sub
mov
cld
test
outsl
pop
inc
orb
in
inc
loopne
out
arpl
xchg
xor
add
mull
clc
adc
or
inc
clc
mov
test
sbb
dec
loope
mov
imul
add
nop
into
outsl
adc
xchg
and
pop
ljmp
outsl
stos
and
int
mov
cmp
out
inc
mov
ljmp
mov
pop
mov
inc
sub
lods
sti
cmp
mov
pusha
movsb
push
add
push
icebp
rclb
repnz
or
sub
or
cs
jp
std
mov
push
movsb
das
pop
push
mov
bswap
xchg
outsl
xorb
dec
and
lea
mov
psubusw
cmpsl
push
add
fcoms
rorl
int
mov
push
pop
push
popa
out
pop
add
pop
cmpsl
xor
rclb
push
popa
or
jb
notl
cmp
imul
jne
es
jl
std
addl
std
into
xchg
jp
sti
jmp
mov
xor
pop
sub
out
or
mov
xor
mov
jne
jnp
xchg
push
shlb
add
mov
add
fsubr
add
sub
and
lods
test
xchg
ficompl
xor
stos
lcall
ret
push
aaa
out
jae
jg
xchg
sbb
mov
sub
sti
scas
cmpsb
cmp
pushf
inc
and
xor
xor
mov
cmc
push
cs
mov
adcb
and
push
movsb
pop
in
jmp
es
in
cmpsb
mov
inc
xor
push
arpl
mov
sub
pop
jg
jns
adc
add
push
or
std
or
pop
repnz
je,pn
bound
int3
mov
pop
movsb
sbb
fldcw
xchg
das
push
outsb
mov
pop
cmpsl
inc
ret
xor
cmp
xchg
arpl
adc
aaa
fwait
out
adc
jmp
sub
push
sarb
mov
lods
jge
fwait
inc
imul
fstp
xchg
cmp
ljmp
icebp
cltd
dec
cmp
xor
push
sbb
into
mov
mov
stc
nop
stos
add
adc
push
jg
and
rcrl
mov
test
cltd
adc
cld
jle
cmpsl
cmp
add
mov
fsubr
ljmp
ss
imul
push
movsb
jmp
jnp
cmpsb
arpl
pop
loop
std
adc
push
or
faddl
je
xor
adc
sahf
xor
rcrb
jns
cmpsb
and
pop
dec
ret
or
mov
mov
jae
dec
aaa
sub
testl
mov
fbstp
lahf
into
sbb
or
jmp
jecxz
in
xchg
iret
xchg
outsb
mov
cli
push
xor
add
push
sub
adc
jmp
andb
in
mov
imul
jle
andl
sbb
xchg
mov
sbb
mov
popf
jnp
pop
mov
fdivr
dec
push
popf
iret
add
mov
fld
fcom
push
or
movsl
sti
js
std
andl
dec
cmp
add
std
movsl
loop
sub
push
add
cmp
daa
sti
mov
stc
jmp
iret
mov
inc
dec
mov
xor
cmp
sbb
fists
jb
inc
cmp
js
insl
jl
sub
pop
or
out
jb
push
mov
push
repz
pop
pop
shrl
out
nop
movsl
shl
push
lret
out
jne
sqrtps
pop
sub
aam
mov
jl
aas
dec
or
rclb
aas
jne
lds
or
test
adc
mov
dec
jne
sbb
push
mov
push
xor
mov
push
lds
dec
push
sub
inc
fmul
movsl
cmpsb
bound
mov
cltd
cmc
dec
or
ret
and
ds
imul
loope
push
jl
sbb
jne
xor
inc
int3
or
test
jne
mov
sub
mov
int
inc
cld
inc
iret
pop
loopne
pop
sbb
outsb
cld
adc
sbb
insb
loope
shlb
mov
fstpt
pop
push
xchg
rorl
adc
mov
ror
push
inc
out
mov
and
out
dec
sbb
mov
mov
outsl
mov
popf
out
pop
xchg
repz
test
lcall
push
lret
sub
xchg
mov
ss
sub
mov
out
sub
lock
sbb
les
push
popa
fbld
iret
sub
jnp
sbb
mov
lret
sub
in
and
lock
push
jle
insl
outsb
push
and
mov
adcb
addb
fidivs
pusha
mov
cmp
sarb
push
or
xor
je
cmp
xor
push
mov
cmp
scas
nop
xchg
faddl
clc
inc
sub
mov
sub
out
outsb
push
lods
andb
mov
xchg
sar
lods
xchg
outsb
sbb
js
lcall
pop
loope
test
xchg
or
xchg
inc
inc
sub
inc
je
movsb
add
mov
pop
pusha
xorl
and
repnz
push
xchg
loope
outsb
sub
xor
inc
popf
sti
or
cli
mov
add
cmpb
stc
jge
das
in
xchg
or
jmp
xor
xor
leave
shll
xor
mov
and
lret
mov
push
xchg
sbb
sbb
jns
push
cmp
lods
mov
jbe
test
cmpsb
xor
mov
roll
jp
cmp
jl
mov
sbb
je
push
jbe
mov
dec
imul
and
lcall
sub
fildll
inc
scas
pop
insb
inc
inc
ret
lods
fcoml
mov
mov
cmpsb
or
jg,pn
das
std
ljmp
scas
jbe
fs
or
clc
push
mov
and
pushf
pop
cmp
out
outsb
out
popl
push
cmp
decl
push
and
fs
mov
out
dec
xchg
xchg
cmp
mov
and
lds
pop
stos
aad
xchg
jnp
sub
shl
loope
xor
out
in
adc
into
out
adc
xchg
nop
call
jne
push
mov
imul
shlb
in
cmp
int
ljmp
ja
xchg
cmpsl
and
jl
addl
push
mov
and
adc
mov
mov
clc
imul
movsl
inc
mov
cltd
jl
popf
xor
add
bound
dec
mov
xor
jmp
rcrb
adc
xchg
std
xchg
push
push
divb
and
repz
mov
xchg
sub
pop
ja
inc
add
or
pop
pop
sbbl
lods
and
push
adc
in
inc
clc
or
out
mov
push
xchg
and
mov
sbb
xor
sbb
push
mov
mov
inc
testb
xor
push
fistl
push
jp
and
cmp
test
mov
test
shll
adc
addb
adc
ficomps
cs
cli
cmpsl
adc
ss
push
insb
pop
dec
nop
xchg
and
in
cmp
out
icebp
push
jo
pop
jb
sub
mov
cmc
xchg
sub
xlat
pop
and
int3
insb
mov
xchg
xchg
shlb
arpl
mov
hlt
aas
addr16
add
or
xchg
mov
cmp
and
ss
lcall
cmp
rcll
lods
mov
add
jg
stos
ret
push
int3
jmp
xchg
mov
mov
mov
jb
gs
test
sub
ljmp
xlat
push
cs
add
pop
sub
jae
nop
imul
add
add
mov
cmp
insb
pop
xlat
jns
pop
sbb
cmp
clc
jne
cmp
insb
cmc
mov
inc
add
xor
pop
mov
outsl
and
push
out
fcompl
ja
jmp
sub
mov
push
cmc
daa
movsb
add
adc
idivl
jns
fldt
sub
pop
mov
jnp
jae
pop
rorb
shrl
scas
stos
push
and
cmpsb
icebp
loope
jb
jno
mov
adc
jle
les
loop
xchg
out
xor
xor
aas
mov
clc
cmpsl
sahf
pop
mov
pop
imul
inc
adc
call
push
inc
subl
mov
push
dec
add
and
js
jo
stos
or
sbb
shll
cmp
push
call
mov
cltd
dec
mov
dec
mov
xchg
sbb
pusha
or
and
pop
jne
inc
cmpsb
js
in
out
add
dec
dec
xorb
les
mov
and
jnp
ss
ret
pop
popf
xchg
add
incb
les
shll
push
negl
ja
cmp
lods
or
mov
inc
inc
dec
int
fnstcw
movsl
pop
das
push
dec
gs
mov
dec
jae
outsb
in
pop
jno
push
pushf
push
scas
adc
ljmp
fistpll
ret
add
lcall
sbb
lods
lods
cmc
loope
pop
add
sbb
mov
sbb
mov
pop
sbbl
leave
and
ret
aaa
mov
inc
mov
adcl
inc
sbb
ret
or
test
pusha
insb
aaa
sarb
push
mov
xchg
push
inc
outsl
mov
jmp
push
daa
pop
sub
jns
mov
push
or
mulb
enter
pop
dec
cltd
mov
sbb
xor
cs
sbb
mov
push
dec
out
pusha
push
nop
aad
add
js
adc
inc
js
mov
adc
sbb
scas
cmp
push
test
sbb
jo
inc
shll
mov
cmp
jae
adc
sbb
data16
xchg
lahf
mov
insl
xchg
inc
push
cmpb
jg
inc
mov
lea
ror
sbb
pop
ja
xchg
insb
iret
mov
popf
mov
add
leave
sahf
je
cmp
rcrl
stc
xchg
in
xor
notb
into
jge
out
adc
push
test
sub
icebp
dec
inc
sbbl
add
pop
ds
hlt
mov
sub
sti
cmp
fdivrs
js
mov
int
push
sbb
dec
call
repz
lock
jge
in
mov
pop
testb
shrb
fwait
ret
sbb
adc
out
shr
sbb
mov
pop
pusha
xchg
insl
cs
lret
bt
call
shlb
cs
lahf
mov
pop
lods
push
es
push
sub
cwtl
mov
in
int
negl
xor
jb
movsl
arpl
mov
and
cmp
leave
int3
cmpsb
sub
sbb
inc
push
push
enter
popl
popf
xchg
rolb
ss
adc
jno
rolb
inc
pop
mov
lock
and
adc
fwait
add
scas
push
xchg
call
pop
das
xor
sub
inc
dec
sbb
and
int3
lods
movsl
sbb
nop
mov
test
out
push
jl
ds
inc
ljmp
fs
out
enter
lock
push
fwait
jbe
ss
jge
jg
int3
jp
mov
adcb
imul
lods
add
in
addr16
aas
xor
lods
fmulp
lods
decb
dec
mov
leave
int
fiadds
out
jmp
dec
mov
mov
mov
dec
cmp
loopne
arpl
iret
sub
sbb
movsl
and
and
cmc
sbbl
dec
movsb
loope
xor
sub
pop
pop
pop
mov
pop
and
out
test
add
outsb
sub
sub
xor
sahf
cmpsb
xor
in
mov
bound
andb
jne
and
jmp
outsl
sti
push
rolb
sub
fsts
stc
jns
xor
push
inc
int3
adc
xor
aad
pop
xor
inc
xchg
bound
cmc
mov
jae
push
rcr
xor
pop
add
popf
inc
adc
sbb
btl
mov
cmp
lea
jmp
les
lods
ljmp
jbe
imul
mov
lds
sub
popf
xchg
lea
push
or
dec
aad
rep
addb
sub
dec
jecxz
aas
jbe
cmp
fwait
rcrl
lret
add
cltd
mov
push
inc
lret
xlat
xor
pusha
add
dec
das
dec
mov
iret
pusha
fmuls
out
and
in
fisubrl
sbb
dec
mov
xchg
inc
out
push
pmullw
or
movsl
push
jmp
arpl
test
or
push
mov
imul
mov
das
fnsave
sbb
pop
fiadds
or
push
adc
repnz
sub
xchg
mov
mov
iret
add
add
aas
sbb
jle
sub
adc
imul
push
cltd
cmp
insl
fisubl
cwtl
mov
clc
movsb
ss
shll
int3
add
pushf
mov
mov
xchg
jno
sub
cmp
cmp
pop
mov
int
pop
sub
mov
in
test
or
add
jns
xchg
pusha
pop
lock
mov
dec
add
fstps
sbb
xchg
hlt
test
jmp
stos
inc
pop
jge
into
arpl
aaa
out
sub
and
and
not
hlt
pop
loopne
add
sbb
decl
sub
push
int3
cmp
loope
loope
and
shlb
pop
and
inc
push
adc
sahf
cmp
inc
inc
jbe
or
outsl
and
cwtl
call
lds
insb
lahf
dec
fists
cmp
mov
sbb
lods
bound
inc
mov
daa
add
dec
mov
cwtl
adc
lcall
inc
loope
mov
push
test
test
xor
inc
xchg
clc
push
repnz
mov
jno
cmc
jle
push
adc
dec
enter
imul
pop
pop
out
imul
cld
dec
cmp
pop
movsb
sub
cmp
in
bound
in
call
mov
xor
nop
into
jle
and
fdivs
test
das
push
push
jne
push
pop
jne
in
and
adc
inc
call
hlt
inc
push
or
mov
jmp
adc
xor
es
sbbb
xor
incb
pop
addr16
bound
mov
xor
lret
test
fidivrs
inc
or
in
imul
outsl
cmpb
pushf
in
dec
sbb
inc
loopne
pop
divl
movsb
dec
outsb
inc
ret
xchg
and
in
scas
call
ja
jmp
xor
sub
sub
mov
icebp
cltd
insl
and
xchg
xchg
dec
xchg
jb
sub
fsubrl
js
shlb
negb
jo
fnstenv
shl
dec
mov
into
insb
enter
jb
mov
out
jecxz
mov
pop
in
in
jmp
clc
and
mov
lods
mov
cmp
inc
outsb
xor
push
mov
mov
jmp
cld
mov
xor
mov
mov
cmpsb
ffree
movsl
out
rolb
pop
add
mov
hlt
inc
push
sbb
xchg
stos
add
mov
aas
pop
mov
addr16
fiaddl
aas
sub
mov
lea
out
mov
inc
les
cmp
call
addr16
sub
jmp
xchg
sbb
mov
in
xchg
in
mov
mov
ret
mov
mov
aaa
xchg
adc
xor
repnz
es
stos
push
lods
insl
rcll
sbb
gs
xchg
adc
xor
adc
adc
and
shrb
popa
icebp
cmp
punpcklwd
xlat
or
lahf
xchg
imul
lods
xor
movsb
adc
lea
jne
pop
mov
and
fistps
add
iret
inc
clc
mov
adc
es
iret
fstl
outsl
sub
dec
push
and
sub
jb
movsl
ret
mov
sarl
xchg
es
aad
shrl
or
shrl
inc
cmp
mov
ret
ret
push
insl
enter
push
xchg
mov
scas
movsb
push
adc
dec
or
and
pop
rcll
inc
adcl
int
lret
xchg
push
cmp
mov
notl
clc
xlat
jp
pushf
int
xor
inc
jge
aad
mov
idiv
or
cmp
nop
jns
dec
loopne
mov
cmp
pusha
dec
mov
jmp
ret
adc
add
repz
ret
mov
cmp
mov
push
test
js
sub
sbb
outsb
mov
jbe
inc
push
adc
sahf
test
loope
ret
adc
and
jmp
pop
lahf
inc
pop
cmp
push
outsb
dec
dec
shlb
sbb
jle
int3
mov
outsl
ljmp
mov
mov
fwait
mov
sub
cmc
testb
out
scas
push
dec
ja
sub
test
hlt
int3
cmp
and
inc
fmull
and
xor
add
in
or
rclb
testl
cmpsb
push
out
add
in
adc
add
add
jnp
insl
pop
cs
fcomi
movsl
cltd
cltd
push
dec
cmpsb
mov
in
inc
pop
ret
fxch
ret
ret
mov
outsb
mov
test
sti
sub
dec
in
aam
movsl
pop
cld
in
stos
mov
add
ret
lret
outsl
out
push
cmp
rclb
dec
pop
fdivrp
popa
inc
or
mov
sbb
sub
push
in
adc
inc
and
into
inc
test
stos
adc
add
jbe,pt
ficomps
xchg
cltd
orb
and
sbb
in
inc
sbbb
rorb
cltd
xor
mov
or
xor
push
daa
cmp
mov
or
stos
ljmp
jbe
lea
pop
leave
icebp
push
in
mov
ret
dec
inc
call
cmc
bound
or
lret
andl
fbstp
inc
ds
and
mov
aam
push
or
dec
popf
cwtl
cmc
mov
mov
cmpsb
stos
mov
inc
xchg
or
js
filds
inc
lods
sbb
xchg
aam
cmc
call
cwtl
mov
mov
aad
lret
sbb
mov
jmp
adc
jno
mov
and
add
lods
daa
loope
js
sub
imul
mov
sub
push
sahf
stos
jmp
xchg
andb
mov
mov
test
lds
mov
jge
sbb
jo
popl
data16
cmpsb
decb
shl
push
push
sub
xor
js
push
sbb
pop
cmp
xchg
test
insl
pop
jnp
xor
test
je
insb
sub
jnp
mov
jnp
js
rolb
push
or
dec
movsb
rclb
ljmp
mov
mov
jo
aaa
cmp
call
inc
popa
scas
fildll
inc
movsb
and
stc
addr16
add
stos
pop
ds
sbb
pop
fcoms
mov
lea
les
ret
sub
sbb
push
push
pushl
push
cmp
imul
and
insl
daa
jne
stc
lret
mov
mov
leave
inc
icebp
jg
push
icebp
stc
jmp
ret
les
stos
push
scas
aas
sbb
enter
mov
mov
lods
ss
jle
inc
add
xchg
mov
popf
push
sbb
pop
and
push
aam
out
cmp
cltd
jns
std
fdiv
scas
adc
jg
add
gs
xchg
xor
mov
xchg
mov
mov
in
fistps
insl
loope
hlt
adc
and
lods
push
sub
in
mov
xchg
test
adc
rcrb
inc
sub
inc
mov
dec
mov
out
fnsave
cmpsb
je
and
popa
mov
enter
les
mov
aam
jl
in
js
sbb
hlt
lods
xor
pop
and
jo
or
add
addl
mov
dec
mov
sarl
adc
push
mov
inc
test
xor
out
mov
adc
pop
sti
xchg
js
incb
rep
jne
adc
mov
cmp
call
xor
jne
xchg
imul
push
in
adc
ror
sbb
push
shlb
xchg
push
push
pop
pop
mov
xchg
sbb
fstps
cwtl
jbe
scas
lods
push
pop
data16
imul
outsl
les
adcl
sub
repnz
mov
or
jge
fcoms
push
pusha
inc
mov
call
push
sbb
sarb
out
mov
orb
adc
xchg
lret
popa
mov
or
add
bound
test
cld
scas
nop
cmpl
sub
cli
dec
js
pusha
sbb
or
int
inc
xchg
stc
enter
fidivs
icebp
icebp
push
cmc
dec
adc
loop
adc
add
out
sbb
cmp
mov
jg
test
inc
popf
stos
sbb
mov
fdivrp
in
or
inc
jl
stos
jge
cmp
pushf
xlat
xchg
test
dec
cs
sbb
push
lods
insl
and
jge
ret
ja
and
fucomi
mov
cld
xchg
ss
cmp
dec
cmp
sub
dec
mov
test
cltd
cmpsb
mov
mov
shrl
mov
lahf
mov
ljmp
jmp
push
inc
mov
or
dec
and
pop
jbe
out
push
push
cmpsb
jle
jl
insl
and
pop
and
inc
fwait
arpl
negl
or
add
icebp
movsb
sbb
sti
stc
or
ja
pop
jge
shl
add
nop
xor
aaa
ret
cltd
or
jmp
or
lret
jne
push
push
xchg
cld
adc
dec
cwtl
testb
test
pop
test
pop
or
push
stos
push
and
sub
sti
mov
dec
sub
xlat
std
add
test
add
and
jg
jne
sbb
inc
fs
popf
or
fs
nop
mov
repz
test
mov
sti
mov
bnd
scas
mov
cmp
insl
jl
int
ret
jne
ficompl
stc
jb
aam
xchg
sbb
jge
insb
jae
add
adc
shrl
ret
nop
add
sub
xor
hlt
pop
jbe
mov
aas
jp
sub
cmp
lock
ljmp
adc
hlt
lds
int3
xor
inc
insl
std
stc
dec
loop
fs
xorl
cmc
mov
lret
pop
lods
mov
inc
cmp
movsl
lret
sti
jl
push
mov
sub
into
daa
dec
out
pop
or
cmc
jmp
sahf
mov
cltd
fbstp
arpl
and
aaa
stos
lcall
push
clc
push
cmp
ss
sbb
lods
cmp
faddl
aaa
pushf
loop
mov
mov
xchg
lods
popl
or
js
inc
mov
mov
push
jge
rorl
pop
out
adc
negb
mov
ds
scas
and
push
out
mull
push
inc
pop
jae
jo
imul
xchg
lret
sti
repnz
mov
pop
int3
aad
dec
and
fldenv
xchg
repz
ret
adc
inc
adcb
mov
mov
in
lahf
in
daa
add
daa
outsl
pop
xchg
lret
sbb
dec
and
iret
pop
clc
inc
gs
js
fcoml
dec
jo
jl
in
fwait
xchg
jecxz
xchg
orb
jg
imul
imul
andb
fdivp
inc
aas
mov
bnd
fidivrs
fwait
or
mov
cmp
and
lret
movsl
lahf
pop
push
out
mov
xchg
cs
clc
clc
mov
jp
in
call
mov
fildll
mov
dec
or
repnz
daa
iret
dec
mov
aaa
loopne
sti
inc
dec
inc
aaa
xlat
dec
leave
dec
insb
das
js
cltd
lods
push
into
loope
daa
jns
cmp
out
xchg
mov
dec
mov
scas
lahf
adc
cmpsl
and
int
xchg
jae
xor
aam
in
ds
mov
xor
rcll
dec
and
cmp
jb
push
scas
sbbl
fsub
jl
dec
mov
test
popa
les
imul
std
popf
sahf
ficomps
subl
stc
fiaddl
or
xchg
dec
cltd
lods
xchg
xchg
into
pop
pop
addl
scas
rorl
and
stos
jns
jle
cmp
add
pop
cmp
push
je
or
pop
dec
call
mov
inc
loop
add
sub
outsb
cwtl
repz
pusha
into
cmpsb
and
mov
inc
inc
jg
push
xorb
dec
and
lods
mov
out
out
inc
mov
cmpsl
ljmp
jo
push
out
std
iret
hlt
adc
sub
mov
cmp
rol
mov
mov
movsb
in
lea
fcoml
fwait
test
je
test
iret
adc
cmp
fcmovbe
out
jecxz
mov
aas
xchg
sbb
push
push
mov
mov
add
lods
or
pop
shlb
shr
shl
xor
ret
mov
js
sub
xor
lcall
cs
sub
cld
mov
xor
fcoml
or
mov
sbb
mov
jl
mov
insl
int
enter
popf
dec
je
lret
mov
jae
test
and
inc
xchg
xchg
xchg
sahf
icebp
pop
mov
and
imul
mov
mov
imul
test
cmp
je
mov
popa
addr16
pop
popa
add
cmpsb
jp
scas
adc
inc
pop
sub
scas
rcrl
fisttpl
cmpsb
push
stos
addr16
lock
stc
int3
test
xchg
scas
icebp
inc
add
in
jne
cs
imulb
outsl
data16
mov
enter
lret
mov
mov
jo
rclb
shl
inc
or
dec
sbb
push
in
int
loop
leave
lods
push
scas
imul
or
stos
ja
sub
fldcw
les
outsl
out
movsb
sub
les
push
push
pop
cmp
fldt
das
inc
imul
inc
loop
push
jne
fimuls
cwtl
arpl
push
jle
outsl
loope
mov
lahf
popa
addb
enter
mov
movsb
mov
fbstp
inc
sbbl
mov
mov
sti
xor
mov
inc
pop
mov
mov
bound
fimuls
insb
loop
leave
sarb
mov
xchg
or
mov
jno
pop
cmp
cmp
mov
mov
movsl
out
and
bound
mov
icebp
in
sbb
das
fs
sbb
outsl
pop
xchg
push
push
je
test
mov
or
jle
xchg
and
inc
xor
jl
mov
addb
cmp
and
xchg
inc
mov
notl
sub
jmp
shlb
pusha
add
adc
jb
jbe
sbb
xchg
mov
push
mov
aad
jmp
add
add
test
int3
push
push
sbb
incl
aas
addr16
cs
insb
stc
xlat
jb
aad
push
fistpll
mov
pop
das
popa
xchg
adc
fs
loope
xor
loopne
lods
mov
test
sub
xlat
inc
lods
sbb
rcrl
dec
cli
rcrb
cmp
inc
lods
mov
jb
addb
cmp
mov
push
lcall
out
scas
clc
in
xor
xor
fsub
xchg
jb
push
jae
pop
cmp
sti
in
xchg
mov
mov
jmp
subl
push
pushl
push
pop
and
test
rcl
dec
push
jp
mov
cmp
inc
mov
or
inc
das
lret
pop
popf
pop
popf
sarb
push
inc
je
add
inc
ja
dec
clc
aaa
push
xlat
mov
jno
pop
add
inc
dec
xchg
dec
adcl
fisttpl
fistpll
mov
dec
arpl
cmp
xor
test
sub
lods
icebp
aaa
rclb
mov
mov
xlat
mov
lret
lcall
shll
cmp
popl
lock
movsb
push
int3
jge
pop
ret
jge
xor
shll
sub
pop
faddp
stc
sbb
xchg
or
pop
pop
jmp
add
stos
lock
xor
sub
mov
mov
sub
std
ja
icebp
xor
lods
sub
pop
out
nop
xchg
and
push
leave
lods
arpl
hlt
add
adc
and
icebp
cwtl
shll
gs
jb
cmpsl
lods
and
cmp
push
loopne
into
jbe
xchg
jbe
push
cmc
nop
repnz
jbe
loope
jge
pop
aaa
add
mov
push
je
ficoms
mov
xchg
mov
mov
mov
lea
xorb
cmpsl
push
mov
mov
mov
lock
dec
add
aas
mov
jmp
fnstcw
mov
sub
addr16
fdivs
imul
cltd
mov
rcrb
inc
js
leave
icebp
ja
inc
scas
int3
mov
jl
outsb
fdivl
rcll
jnp
das
fildl
add
cmpsl
das
inc
adc
pop
xchg
iret
push
jno
inc
int3
xchg
shlb
aas
addb
adc
fistpll
add
repz
out
stos
iret
insb
jl
jmp
sbb
push
mov
jne
fs
lret
pusha
popf
adc
scas
ret
inc
sub
subl
pop
jl
repz
or
in
in
stc
ficompl
je
jle
cmp
sub
add
orb
mov
sbb
call
scas
push
cmp
dec
fcomps
lods
lods
push
pushl
push
inc
jecxz
add
jno
repnz
outsl
mov
and
xchg
fimuls
inc
aas
lcall
mov
mov
cmp
loopne
mov
jmp
xchg
and
cmp
fisubrl
push
mov
insb
nop
add
push
and
add
adc
ret
cmpsl
sbb
lds
mov
test
pop
adc
lret
fstl
orl
cli
ljmp
lret
cli
into
repnz
rcll
xlat
adc
out
sub
cmp
lret
sub
pop
cmpsl
pop
push
mov
in
add
mov
out
or
rcrl
lods
into
xor
add
xor
es
mov
mov
fldl
addr16
lret
sbb
test
out
in
push
popf
cmpsl
xchg
xchg
jns
fistps
push
dec
sub
addr16
push
mov
or
push
stos
loope
dec
ret
fcmovnu
clc
add
xor
ret
cld
mov
push
idivl
in
rcr
into
test
or
pop
or
cmc
cs
pop
mov
jb
stos
ja
mov
fcomps
cmp
cmp
outsl
pop
inc
inc
cmp
ja
cmp
inc
mov
fstpt
xor
jecxz
mov
insb
mov
repz
fucomip
and
adc
mov
adc
pop
push
fnsave
inc
ficompl
mov
pop
mov
sbb
fimuls
mov
jae
push
cmp
jnp
mov
into
outsb
nop
sub
jge
test
fwait
xchg
ja
sub
loope
xor
in
and
movsl
cmp
push
push
pop
mov
xchg
mov
push
push
fdiv
aas
rcll
mov
movsl
cld
stos
push
int3
lahf
xchg
mov
aas
adc
or
sbb
xchg
in
outsb
ja
fwait
in
mov
xchg
loopne
repz
jbe
pusha
or
and
xchg
and
mov
mov
notl
insl
jbe
les
ret
sarl
inc
mov
pop
and
rclb
lahf
push
xorb
add
fs
in
lretw
pop
adc
push
int3
pushf
scas
int3
sub
inc
mov
daa
xchg
jb
mov
sub
loopne
mov
fldenv
push
cmc
lret
cmpsl
mov
jb
nop
loopne
in
sub
jns
push
shll
push
push
and
sub
repz
pop
rcrl
and
pop
loop
inc
jl
mov
xor
jle
out
cmc
leave
push
popf
roll
mov
lods
fmuls
xlat
repz
mov
add
popa
mov
lcall
sub
rorb
out
sbb
ja
fwait
sbbb
or
mov
cmp
inc
cmp
js
sarl
and
push
pop
xchg
mov
out
and
clc
repnz
mov
movsb
loop
and
dec
pop
and
cli
shrb
outsb
nop
mov
insl
push
rorb
dec
inc
xchg
es
subl
jb
test
xorl
pushf
add
add
scas
leave
in
mov
in
jnp
jecxz
in
dec
and
mov
into
scas
or
fists
push
rcl
dec
jg
rolb
pop
mov
pop
addl
xor
movsb
inc
outsb
inc
jnp
andb
inc
mov
lods
xchg
xor
sbb
lahf
and
in
enter
mov
sub
in
movsl
cli
dec
iret
mov
out
cmpsl
mov
mov
mov
inc
xor
mov
scas
push
das
js
loopne
and
popf
cmp
out
jp
mov
addr16
cli
data16
jmp
imul
iret
push
rorb
int3
fstl
sbb
int3
mov
and
inc
and
sub
loop
mov
mov
and
ret
test
scas
repz
sbb
inc
mov
push
mov
jbe
mov
or
arpl
sti
pop
jo
lahf
lcall
stc
shll
mov
gs
inc
rol
xchg
mov
jno
addr16
ja
adc
jnp,pt
mov
stos
icebp
mov
pop
lret
addr16
mov
adc
mov
xchg
loope
cli
pop
enter
inc
cld
cmp
dec
cwtl
pop
mov
xlat
and
and
and
paddw
fisubs
test
push
repz
lret
lods
leave
mov
dec
inc
and
mov
jo
pushl
adc
ds
hlt
int
dec
and
mov
push
pushf
and
fpatan
popa
les
inc
lea
jo
and
aas
cwtl
scas
call
adc
adc
repnz
mov
test
xchg
cld
sti
jo
and
xchg
call
int3
cli
pop
jge
ret
or
mov
mov
adc
xchg
inc
mov
xchg
dec
xor
cmp
and
adc
xchg
fisttpl
mov
leave
repz
out
push
std
adc
xchg
or
sub
mov
addr16
xchg
in
idivb
sti
inc
pop
xor
popf
rclb
xor
inc
xchg
jno
jp
push
and
cmp
inc
inc
sbb
dec
fs
xor
xor
sbb
mov
xor
lcall
push
fildl
add
enter
mov
dec
push
mov
fnstcw
shl
pop
test
sbb
jns
jl
mov
loop
fs
add
cltd
inc
xchg
pop
push
fcmovu
out
or
in
test
sbb
jbe
sub
cmpsl
dec
xor
les
jmp
sbb
xchg
cmpsb
or
negl
dec
icebp
dec
out
mov
loopne
leave
dec
mov
outsb
notb
jge
adc
lock
test
push
loopne
dec
mov
dec
add
mov
bnd
inc
aad
push
jo
aaa
int3
adc
lea
mov
and
out
xlat
cmpl
mov
aas
rol
in
movl
sub
subl
push
xchg
into
xor
clc
cmpsb
inc
xor
call
mov
mov
jle
jl
mov
sub
cli
popa
push
mov
push
test
pop
sbb
je
jg
mov
or
mov
inc
adc
shlb
loopne
out
in
mov
mov
addr16
sub
stos
mov
fsubrl
mov
xchg
xchg
pushl
xchg
adc
dec
aam
pusha
jae
sbb
movsl
xor
inc
and
or
cmc
add
lods
decl
adc
mov
jp
or
or
aad
dec
cli
addr16
cld
ljmp
push
sbbl
jmp
push
sub
add
fisubrs
lea
inc
xchg
mov
push
cwtl
push
mov
int3
mov
xor
pop
popf
andl
lock
into
push
add
lahf
ja
jg
leave
int
dec
imul
ds
jb
adc
jmp
cmpsb
dec
inc
cltd
negl
je
mov
jno
push
popf
inc
mov
test
pusha
cld
into
movsb
mov
into
mov
add
mov
mov
scas
mov
shlb
add
mov
xor
insl
or
movsb
lods
cmpsl
mov
cs
cmp
cmpsl
rclb
xchg
inc
mov
test
cmp
repnz
mov
xchg
arpl
push
mov
add
orb
sub
push
cmpsl
adc
icebp
or
and
sbb
inc
dec
nop
rolb
pop
stos
jmp
imul
add
test
sarb
inc
cmp
pop
cmc
cli
push
lret
mov
das
add
or
arpl
adc
pop
sbb
or
push
push
xchg
in
mov
and
roll
xchg
cmp
mov
mov
lock
mov
jl
xor
popa
xor
jne
movsl
ret
lods
sbb
arpl
repnz
xor
sbb
cmp
mov
stos
add
mov
pop
add
sbb
xchg
cmp
xor
jb
pop
dec
sbb
jne
testb
std
sbb
cmp
pop
int3
std
shll
lcall
popa
jl
std
lock
xor
add
addl
cmpsb
mov
fisubl
adc
adc
call
loope
mov
stos
stc
mov
mov
sti
bound
popa
dec
das
mov
fbld
mov
and
dec
cmpsb
sahf
loope
lahf
xchg
inc
jnp
adc
insl
mov
inc
mov
inc
mov
pop
ja
jge
pop
xchg
jns,pn
push
roll
mov
les
add
cmp
adc
dec
pop
shlb
test
sbb
xchg
push
call
mov
sub
enter
jb
pop
sbbl
rorl
popa
lds
into
mov
mov
stos
sahf
mov
out
sbb
sbb
int
cmp
jmp
jne
and
popf
cmp
into
xlat
mov
inc
sub
pop
ret
sbb
jae
fisubl
add
mov
jns
rorb
ljmp
scas
mov
enter
ja
mov
iret
cmp
aas
inc
ja
add
xor
pop
sub
mov
jmp
outsl
jns
sbb
dec
and
push
pop
outsl
mov
dec
jg
xor
aaa
and
push
es
fildl
les
in
sahf
pop
and
rclb
cld
daa
stos
and
push
pop
jmp
xchg
popa
cwtl
into
and
add
and
jl,pt
push
and
lock
push
mov
mov
sbb
pop
and
rorb
pop
push
cld
xchg
push
pop
mov
jle
jo
sbb
xchg
clc
dec
push
jmp
cmpsl
movsbl
xor
pop
mov
daa
jg
jae
sbb
adc
popa
mov
and
ds
and
dec
cmp
inc
pop
inc
pop
decl
add
mov
call
xchg
jecxz
out
fldcw
add
dec
mov
out
or
dec
or
int3
shll
or
adc
fsub
adc
fwait
in
das
fs
sub
xchg
xchg
inc
adc
mov
rorb
and
andb
cmp
mov
lods
pop
mov
rcl
jae
dec
pop
mov
fwait
cmp
and
cmp
cmp
imul
or
adc
push
mov
xchg
cs
in
test
push
jo
pop
or
pop
out
arpl
ss
lcall
inc
push
std
fnsave
dec
aad
xchg
jle
addb
das
leave
sbb
push
inc
pop
inc
or
inc
jecxz
les
sbb
add
leave
je
jb
fs
sbb
cmp
and
jl
fisttpll
bound
push
and
fdivrp
jp
fucomi
jmp
stc
ret
push
cmpsl
lock
cli
bound
or
test
lea
rcll
pop
xor
mov
test
outsb
cli
lret
adc
sub
sbb
and
ret
sbb
mov
mov
or
fs
jae
sbb
mov
push
daa
test
adc
pop
loopne
cmp
xor
or
cmpl
mov
test
mov
inc
adc
and
xor
or
aas
aas
pop
add
icebp
pop
mov
or
enter
add
clc
sbb
ficoms
inc
dec
inc
lret
popa
jecxz
pop
shll
push
fcompl
inc
cmp
cmp
repnz
add
mov
int3
and
in
mov
xor
adc
pop
aam
pop
sub
and
mov
int
test
mov
lods
daa
test
xor
pusha
test
lock
fxch
push
incb
sub
rcrb
sbb
loope
cmp
test
xchg
fldcw
adc
xor
aaa
je
mov
or
in
push
cmp
out
mov
insl
sub
imul
cld
insb
sbb
mov
jmp
jg
bound
cwtl
sub
and
addr16
les
pusha
hlt
inc
in
push
out
jmp
sbb
les
mov
roll
div
xchg
adcb
inc
cmp
dec
mov
sti
les
rclb
jl
mov
or
add
aam
subl
push
cltd
cmpl
out
push
cmp
jo
mov
pop
push
sub
sbb
sub
jecxz
pop
sub
add
test
mov
xchg
mov
jl
pushf
lret
enter
into
das
xchg
call
fnstenv
lods
loopne
jo
inc
xchg
mov
mov
aas
in
fs
lcall
mov
push
push
push
push
jae
ja
stos
aad
add
xchg
test
test
inc
add
mov
lret
xchg
daa
or
inc
scas
cs
into
mov
cmc
outsl
js
cmp
cmp
loope
push
out
mov
lds
adc
or
pextrw
jb
scas
inc
call
test
mov
movb
ljmp
lcall
xchg
cli
add
loope
sub
mov
shrb
sbb
pop
pop
icebp
gs
xor
xchg
xchg
jecxz
pop
std
xchg
ds
jno
jnp
jne
out
dec
ds
aas
pop
pop
mov
cli
sbb
fidivrl
mov
ss
push
cmp
mov
adc
cli
inc
ljmp
test
shlb
out
mov
mov
jle
mov
xlat
test
xchg
push
in
and
sub
test
or
jno
inc
jmp
ret
cmp
xlat
jnp
lahf
stc
clc
fiadds
xchg
gs
push
mov
push
rcll
sub
leave
add
inc
outsl
sub
add
push
repz
inc
inc
setg
fistps
test
mov
jge
in
loop
jno
and
lods
xor
jge
insb
jbe
aad
aad
fiadds
test
int
xchg
or
mov
sub
arpl
repnz
push
inc
pop
jne
and
fs
sbb
out
dec
cmp
ret
sbb
scas
stc
push
inc
test
int
mov
aaa
rorb
xchg
push
pushf
test
roll
jle
cmc
lods
mov
jne
imul
pop
pop
inc
cltd
ss
inc
add
mov
jno
mov
sar
sbb
push
icebp
roll
xchg
bound
push
inc
lret
scas
cmc
nop
jmp
popf
int
arpl
cld
in
sub
sbb
mov
inc
test
jns
scas
pop
andl
icebp
cli
enter
adc
pop
add
mov
les
mov
lret
ret
mov
fs
jmp
jnp
pop
into
cmpsl
pusha
push
or
xchg
loop
fimull
lahf
les
sbb
xchg
outsb
in
imul
call
andl
insb
dec
inc
jns
fsubrs
push
pop
jg
in
pop
or
pushf
cld
js
mov
or
xchg
repnz
xchg
push
pop
sub
popf
or
mov
xor
cmp
test
add
fs
xchg
fucomip
sbb
aas
icebp
mov
jb
ret
add
dec
stos
rolb
sti
imul
xchg
sub
inc
das
sbb
outsl
mov
popf
lahf
dec
jmp
cmp
add
inc
arpl
xorl
pop
fwait
add
pop
jnp
popa
lcall
sub
and
mov
sub
pop
xorl
inc
aad
mov
nop
and
mov
xchg
sub
jl
push
add
ds
ljmp
lds
faddl
sbb
imul
or
xor
mov
mov
bound
jae
ffree
jmp
pop
xor
cwtl
mov
push
jmp
gs
fidivl
jb
popf
dec
imul
push
lahf
xor
xchg
mov
ds
data16
fstpl
add
mov
arpl
mov
sbb
dec
xor
mov
clc
data16
inc
push
test
leave
mov
mov
xchg
pop
mov
push
push
test
sahf
data16
fcmovne
mov
sbb
int3
and
cmp
adc
adc
int
std
adc
dec
mov
jl
es
xchg
push
dec
test
cli
test
jno
dec
xlat
xor
test
dec
std
lock
fisubl
pop
sbb
dec
xor
xchg
jg
into
arpl
sub
inc
cmovl
fcoml
push
inc
sub
xor
lods
pop
push
stc
ret
adcl
mov
and
vmovupd
xchg
ret
pop
pop
lcall
push
das
lcall
inc
shlb
out
ljmp
out
jns
fldcw
or
xor
sbb
jb
push
adc
arpl
and
ficomps
movsb
arpl
ret
mov
std
push
sub
mov
mov
jbe
and
dec
jecxz
xor
ds
mov
inc
sub
in
dec
sbb
ret
cmp
dec
and
cmp
imul
out
xchg
add
cmp
aam
hlt
lock
fs
adcb
orl
lcall
les
ss
dec
or
mov
jo
out
sahf
ja
mov
cmp
je
loopne
nop
js
aaa
mov
fucom
pop
scas
inc
sub
cs
jo
mov
shll
lahf
pop
xchg
pop
pop
lds
nop
inc
or
andl
div
mov
orb
push
jbe
enter
pop
call
leave
dec
sbb
jnp
aam
stos
pop
rcr
or
push
push
cmp
push
adc
cmp
add
pushf
jns
repz
test
cwtl
mov
leave
cmc
mov
mov
jle
inc
cmpsl
dec
or
sbb
mov
xchg
mov
or
stos
jnp
sbb
xchg
adc
mov
pop
stc
cmp
jo
add
xor
or
hlt
lahf
lret
and
jno
cld
bound
mov
jae
pop
mov
out
dec
test
movsl
fildll
movb
jne
cmp
test
mov
xor
mov
cmp
and
sub
cmc
pop
or
or
xorl
jnp
push
mov
pop
jge
cmp
or
lret
out
xor
inc
out
mov
xor
outsb
xchg
push
fnsave
testl
adcl
jle
mov
lret
rol
pop
test
and
cmpsb
and
in
push
add
mov
addr16
jo
insl
dec
mov
dec
fwait
mov
setg
inc
js
jnp
imul
lahf
and
fs
aam
orb
push
in
sbb
sbb
fwait
sbb
push
push
pop
insb
xchg
and
inc
mov
daa
jae
jo
adc
mov
jl
add
lock
std
imull
or
add
daa
ja
jbe
add
fstpt
ds
jb
call
aas
jmp
mov
repz
nop
mov
cmp
rorl
pushf
fwait
xor
xor
es
fcoml
rcl
jg
or
pushf
mov
mov
stos
rorl
mov
mov
lret
sub
stos
or
scas
rcr
add
filds
push
cs
inc
rcll
jle
setno
es
stos
xor
xchg
jecxz
adc
fcompl
ds
negl
cmp
jae
decl
sub
inc
xchg
mov
fisttps
gs
cmp
or
pop
pop
sahf
fildll
fcomi
ret
inc
imul
sub
repnz
nop
sbb
adc
add
cld
out
loopne
pop
out
das
and
and
or
stos
test
movsl
cmp
mov
dec
fcomip
sub
mov
pop
add
repnz
pop
movsb
fbld
jle
mov
loop
push
imul
sar
ds
lret
out
sbb
lock
mov
xchg
ret
inc
xor
mov
xor
fldcw
test
loop
or
xchg
ret
ret
add
sbb
jo
in
stos
sbb
mov
pop
loopne
pop
clc
fimuls
ret
test
dec
shll
xor
clc
add
rcrl
xor
add
es
scas
fisubrs
push
push
ds
in
dec
mov
test
pop
pop
push
nop
pop
jnp
or
push
mov
jle
scas
lret
cmp
jmp
inc
lcall
fidivl
fucom
lea
cmp
bound
lock
xor
pop
push
sub
fcoml
movl
stos
movsl
daa
js
push
jnp
sbb
push
push
iret
adc
lcall
and
data16
es
add
add
dec
sub
ficompl
out
rorb
xchg
sbb
xchg
cmp
mov
fsubrs
aaa
add
pusha
adc
cld
mov
cmpsb
add
and
xchg
mov
mov
xchg
xchg
mov
mov
sbb
mov
sbb
aad
jbe
in
cmc
cmp
xchg
sbb
adc
nop
cmp
pusha
xorl
test
pop
add
sub
xchg
call
out
push
fisubrs
imul
dec
ja
mov
call
popf
data16
js
cmp
imul
sbb
inc
mov
inc
or
or
pop
inc
aad
mov
sahf
jl
repnz
scas
hlt
jno
pushf
pop
and
pop
adc
dec
inc
add
test
xchg
mov
fdivrs
jecxz
ret
add
sbb
sub
je
or
add
aaa
je
in
sarb
sub
sub
inc
pusha
or
testl
fmul
lret
jno
jnp
loope
jg
xor
stos
xchg
push
sbb
clc
cmpsl
test
xchg
inc
or
xor
mov
mov
movsb
and
cmp
cltd
sar
dec
dec
test
cmp
pop
inc
xor
stos
jg
push
xchg
xchg
push
mov
pop
sub
mov
mov
pop
adc
push
filds
cmc
mov
mov
popl
add
add
in
cwtl
scas
mov
mov
hlt
mov
cmc
shlb
loope
xchg
push
jg
xor
lea
ret
addr16
mov
sub
push
iret
and
mov
jmp
mov
adc
xor
push
mov
xchg
filds
jge
xchg
jg
test
sbb
ljmp
push
cmc
test
mov
clc
jmp
test
sub
or
xor
mov
stos
cltd
and
aas
or
pop
sub
adc
psadbw
add
mov
pop
dec
sbb
inc
pop
mov
sbb
inc
add
jo
pop
nop
jmp
out
mov
cld
call
mov
clc
push
pop
mov
repz
lea
cltd
lcall
sbb
fisttpl
insl
or
lods
les
jle
das
push
jno
loopne
lcall
in
dec
int
fcmovnb
ret
adc
stc
mov
mov
shlb
xor
psraw
mov
sbb
cltd
loopne
mov
scas
ljmp
mov
pop
inc
mov
loopne
jb
sbb
xor
jnp
lahf
jb
xchg
cmp
lret
insl
fwait
push
testl
fcmovnbe
fidivs
sahf
xor
popf
dec
mov
mov
pushl
outsl
xchg
mov
add
stc
arpl
add
xchg
shrl
lea
inc
scas
repz
bound
and
sahf
rol
insl
adc
xor
cmpsl
sbb
ficompl
xor
add
xor
fs
out
push
jl
cli
lahf
movsl
std
cli
in
mov
pop
fimuls
fwait
mov
cmp
jle
stos
fsubr
ret
sbb
ds
mov
nop
xor
jmp
pop
xorl
shrb
mov
mov
xor
rorb
mov
mov
aaa
mov
jno
popf
jmp
cmp
mov
in
push
push
dec
cmp
jg
or
imul
xchg
aas
jns
jnp
imul
mov
cmp
adc
push
out
mov
enter
and
pmaxub
aas
fcmovbe
je
and
mov
ficompl
or
pop
es
sti
scas
shlb
jp
shl
jg
jns
jne
test
leave
in
lods
cmp
ljmp
jp
ljmp
and
mov
ret
std
sbb
loop
inc
add
test
adc
mov
pushf
pop
inc
notl
xor
das
loop
push
call
push
xchg
pop
ret
clc
int
push
inc
pop
mov
push
ffreep
arpl
imul
popa
insl
pop
fiaddl
inc
pop
xlat
inc
jnp
insl
jae
xor
mov
lock
test
cltd
and
xor
adc
pop
pop
xor
enter
push
inc
lods
cmc
jecxz
or
push
xchg
inc
stos
cs
inc
mov
inc
mov
rcrb
cwtl
lahf
test
in
xchg
imul
push
dec
js
icebp
inc
nop
mov
pop
in
jne
arpl
cmp
icebp
fiadds
mov
inc
mov
fucomp
test
mov
xchg
mov
repnz
xchg
sbb
dec
push
lahf
js
shrw
dec
scas
push
ror
sarl
and
fldl
sbb
cs
test
dec
and
aaa
data16
rorl
jecxz
push
dec
fiadds
xchg
push
cmp
cwtl
and
lret
cmp
into
jo
stos
jae
pop
fidivs
jle
data16
adc
stos
insl
cmpsb
fcoms
cmpsb
enter
fmull
test
rcr
or
or
xor
sbb
lahf
cmp
and
sub
pop
in
jae
repnz
dec
lea
cwtl
stos
or
or
and
fsts
pop
push
dec
sub
and
add
aam
jp
cmp
and
je
imulb
int
data16
push
fisubrl
jnp
cvttps2pi
addb
fdivl
xor
daa
or
repz
lds
mov
push
sbb
in
fcompl
adc
imul
xchg
sub
jle
pop
jmp
fidivrl
pop
ds
add
shl
add
je
xchg
mov
and
and
psubusb
daa
movsb
sbb
xor
loopne
xchg
or
iret
movsb
jmp
add
dec
push
pop
loope
adc
insb
push
clc
adc
pushf
pop
jge
ror
arpl
mov
mov
add
out
jae
scas
and
outsl
in
aas
pop
sbb
dec
mov
sbbb
sub
pop
jno
cmc
rolb
std
je
xor
inc
sti
das
xchg
rol
lcall
cmp
fcoms
push
lods
ret
nop
jmp
frstor
pop
xchg
xchg
mov
push
pop
fistpll
and
sbb
push
call
ret
mov
xchg
les
aaa
stc
mov
mov
jns
push
fidivrs
jecxz
xchg
xchg
push
bound
jmp
sub
pop
pop
mov
and
jns
and
out
push
sub
push
inc
mov
cmp
pusha
inc
es
xchg
push
sarl
scas
nop
out
daa
mov
sahf
cmp
xchg
push
inc
mov
outsb
jb
mov
enter
fdivp
push
cltd
insl
and
inc
xor
mov
dec
inc
jg
clc
or
mov
out
scas
push
scas
inc
mov
mov
adc
std
jp
cmpsl
jne
pop
jb
shll
repz
add
pop
jp
mov
add
dec
push
repz
lcall
fucomip
or
and
loop
in
jae
mov
pop
xchg
push
not
setle
xor
iret
pushf
aad
inc
push
lret
arpl
fwait
jnp
add
aaa
mov
mov
rcrl
xor
xchg
daa
je
or
test
test
cwtl
sbb
mov
lds
sbb
xor
fildll
mov
jns
sbb
jo
sub
mov
rolb
or
fnsave
adc
stos
xor
push
or
jmp
inc
dec
arpl
negb
movsl
pop
setnp
fwait
mov
mov
cmc
in
pop
iret
cmp
cmc
jne
insb
mov
sub
ljmp
mov
leave
setno
add
push
xchg
push
stos
jecxz
sub
in
sahf
and
sbb
jae
sahf
jo
or
dec
pop
sbb
mov
gs
into
inc
push
fadds
and
pop
jge
in
addb
jno
in
xchg
arpl
sbb
or
fs
cwtl
add
leave
pop
pop
inc
jge
in
mov
mov
adc
xor
pop
into
stos
adc
test
pushf
xchg
iret
out
lock
cmpsl
test
or
fwait
and
mov
jno
lret
dec
mov
mov
fcoml
aas
adc
cs
mov
cmpsl
stos
ret
jae
test
and
and
adc
fwait
cmp
je
add
addr16
dec
psadbw
add
out
push
jecxz
mov
mov
pushf
daa
inc
mov
mov
outsb
lret
call
lods
cs
test
xor
sub
push
scas
mov
pop
xchg
fisttps
lahf
push
movsl
rcl
es
insl
or
imul
nop
mov
cmc
sub
xchg
test
fdivrs
sub
int
cltd
cmpsb
pop
test
mov
jecxz
pop
sarl
cltd
fsubs
movq
aad
hlt
sbb
lods
mov
mov
js
incb
mov
xchg
test
cmc
sahf
cltd
negb
int3
fs
push
push
mov
test
ret
fst
js
gs
pop
mov
or
mov
testl
cmpsl
and
push
mov
mov
stos
lahf
pop
jge
lods
mov
add
jae
mov
in
xchg
push
enter
xor
pop
sub
sub
mov
sbb
or
popf
test
mov
sub
push
mov
pop
xor
mov
and
cltd
sahf
inc
shll
sti
in
aaa
inc
xor
jge
fsubs
jp
rorl
xchg
and
mov
lds
jbe
push
sete
xchg
in
lock
inc
popa
sahf
xor
pop
lret
hlt
shr
pushf
push
or
mov
cltd
popa
or
repnz
rclb
fwait
jno
or
and
dec
repz
xchg
ljmp
std
iret
mov
push
cld
jbe
xchg
sbb
jg
sub
sarl
roll
fisttps
sub
pop
insl
mov
jo
xchg
xor
shlb
ret
jnp
lods
and
push
ret
into
and
mov
jmp
notb
jmp
arpl
cpuid
mov
mov
test
fidivl
add
xor
clc
lret
aam
inc
negl
and
mov
push
xor
fwait
or
jl
lods
cmp
mov
mov
pop
adc
in
aam
jge
int3
sub
cwtl
lahf
movsl
call
push
and
je
dec
push
fs
jle
cmp
popf
xor
sub
adc
xchg
add
rol
pop
push
test
push
sbb
fnstsw
cltd
dec
mov
ret
xchg
sbb
lret
nop
out
push
adc
pop
or
or
scas
cmc
adc
jmp
mov
ret
cwtl
pop
xor
scas
pusha
inc
scas
xlat
hlt
mov
sub
data16
mov
test
adc
fidivs
adc
dec
daa
mov
xchg
mov
ds
sarb
adc
pop
or
mov
popf
inc
xchg
xchg
mov
fwait
adc
push
add
push
jmp
mov
dec
aam
xchg
stc
popa
jg
cs
mov
jb
in
lods
mov
popl
xor
xor
mov
es
push
sahf
data16
dec
lea
push
cmp
rcll
aad
sbb
loop
adc
sbb
mov
or
incb
adc
pop
jo
or
rol
in
lea
fwait
test
cmp
in
xchg
sahf
and
mov
mov
push
jno
fisttpll
jne
sahf
mov
or
jb
sbb
mov
lahf
insl
jbe
nop
vandnps
arpl
mov
and
mov
mov
adc
in
addps
and
adc
and
pushf
inc
test
popf
push
push
mov
movsb
lods
daa
push
movsb
adc
xor
es
iret
push
bound
cmc
movsl
mov
mov
push
fcompl
xor
xor
pop
orb
mov
inc
cld
xchg
test
out
les
mov
sub
imul
and
xor
mov
leave
push
jmp
mov
in
pop
popf
mov
shlb
shll
fdivr
cmp
or
add
or
add
mov
pop
push
mov
jmp
nop
xor
cmp
lds
cwtl
in
mov
mov
mov
xor
loopne
insb
insl
dec
jno
sub
nop
clc
push
subl
push
clc
jp
xchg
mov
out
ds
push
inc
jne
mov
sub
pop
cmpsb
movsb
inc
imul
mov
push
pop
sbb
push
ret
mov
repnz
jbe
dec
jno
or
or
lret
jg
pop
stos
arpl
rolb
les
pop
xchg
sti
xchg
adc
daa
adc
aas
xor
pop
push
sub
push
mov
add
dec
mov
mov
sub
mov
adc
cmp
cmp
mov
fsubs
xchg
dec
shll
clc
and
in
lds
xchg
jb
push
push
mov
ret
jne
mov
xlat
xor
subl
int
xchg
sbb
vpcmov
cwtl
pop
xchg
repz
or
pop
sbb
xchg
inc
sbb
ss
in
inc
inc
push
xchg
dec
jne
xlat
lea
mov
jecxz
push
xlat
bound
aam
loopne
lcall
popa
push
lcall
lods
push
sbb
hlt
mov
sarb
daa
in
jle
xchg
mov
stos
in
xor
mov
mov
mov
pop
in
dec
sbb
gs
nop
incb
inc
dec
push
inc
call
inc
cltd
inc
pop
fidivl
cmp
cld
cmpsl
mov
imul
add
leave
jne
icebp
fwait
inc
subb
and
jne
add
xchg
fmull
push
xchg
jns
lea
gs
sbb
leave
mov
or
inc
xor
dec
or
cltd
inc
xor
leave
cmp
cmpb
push
shrl
xor
popf
loope
or
and
outsb
shr
sub
mov
gs
shlb
cmpsb
mov
jnp
ds
popf
scas
call
stos
negl
testl
in
iret
and
pop
and
adc
inc
inc
mov
push
negl
lahf
loopne
repz
mov
pop
push
mov
jns
inc
rcll
cwtl
test
nop
push
cmpsl
les
xor
lcall
mov
stos
add
or
push
mov
sbbb
jl
test
or
jge
mov
mov
adc
xor
push
mov
pop
jo
cmp
int3
inc
pop
movsb
xchg
pop
das
aad
add
out
inc
out
lods
imul
and
insl
fcompl
push
sbb
fstps
xchg
dec
into
and
icebp
aam
icebp
leave
adc
cmp
or
jno
inc
mov
jge
xlat
sti
rcl
mov
cmp
hlt
sub
cmpsb
jae
int
dec
lret
xchg
movups
mov
cmp
mov
dec
pop
icebp
in
add
mov
jmp
xchg
mov
dec
cmovno
jge
xor
dec
adc
ss
push
add
sub
dec
addr16
cmp
ret
cmp
add
mov
sbb
mov
cmp
push
out
mov
mov
adc
push
fcomip
shrl
add
jnp
push
push
xlat
test
fsts
cwtl
loope
push
push
hlt
hlt
dec
xchg
clc
leave
repz
dec
mov
ret
icebp
mov
xorl
scas
shl
jae
ja
roll
sbb
arpl
push
push
mov
sbb
xor
jbe
and
pushf
jmp
dec
lock
mov
imul
fldl
shll
xchg
cmp
xchg
and
ljmp
lods
cmp
or
mov
leave
insb
adc
fsubr
push
stos
push
adc
push
mov
and
movsb
jbe
outsb
push
hlt
and
out
arpl
inc
and
pop
pop
aad
dec
dec
adc
popf
and
movsb
add
shr
xchg
pop
sub
pop
mov
jo
pop
jae
das
mov
popf
or
adc
int3
adc
sarl
decb
pop
bound
shrb
adc
xlat
or
fbld
sub
pop
jnp
or
je
adc
jo
hlt
outsb
push
fiaddl
enter
adc
lds
pusha
or
dec
jmp
notb
push
insb
sbb
jnp
dec
mov
mov
jne
test
adc
inc
in
pop
out
pop
scas
fisubrl
cmp
jnp
roll
inc
aad
test
aam
ret
jp
pop
lods
pop
sub
hlt
add
pop
je
lods
and
sub
or
imul
std
mov
test
inc
test
outsl
xor
pop
mov
xor
mov
imul
idivl
fisttpll
ficoms
fisttpl
pop
xorb
or
dec
jg
insb
cmpl
add
ffree
push
push
dec
and
push
pop
push
int3
xchg
adc
in
daa
jb
adc
pop
mov
dec
data16
cmp
cs
mov
cmp
xor
sahf
cwtl
aaa
add
popa
mov
xchg
shll
data16
inc
sti
pusha
fidivrl
xor
gs
jp
push
pop
pop
shlb
push
and
cmp
pop
loopne
fsubrs
fiadds
insb
es
sbb
mov
sub
int
push
dec
pop
push
cmp
pop
faddl
mov
sbb
jo
push
roll
popf
add
jb
sbb
mov
mov
jae
addr16
test
mov
inc
sbb
in
pop
lret
jecxz
jmp
jg
notb
jge
movsl
ret
cmp
dec
pop
aam
fisttpll
lock
cmp
push
int
out
dec
cmp
and
xchg
or
repz
mov
repz
fstpt
xor
xlat
adc
cmp
outsl
mov
mov
mov
mov
lods
clc
call
mov
lcall
add
xchg
or
divl
xchg
and
cmp
pushf
cmp
fstpt
inc
es
rcll
jl
je
mov
int
adc
push
mov
cli
xchg
sub
jmp
push
push
int
dec
sbb
bnd
in
sub
ljmp
push
dec
xor
mov
scas
test
mov
cmp
outsb
lahf
adc
jnp
lods
cmpsb
mov
pop
jmp
pop
xchg
sbb
sbb
adc
imul
nop
cs
fidivrl
xor
popa
jp
enter
push
xor
loope
lahf
mov
mov
sti
repz
call
enter
adc
lods
scas
sbb
pop
cmp
addr16
pop
imulb
xchg
inc
mov
jmp
mov
mov
xor
negb
pop
push
push
sub
sbb
mov
out
xor
sbb
repz
out
inc
push
adc
idivl
mov
inc
icebp
dec
inc
aad
jp
lret
sub
push
mov
out
lret
sub
lahf
loop
imul
or
cltd
aad
loop
sti
les
jl
xor
das
int3
mulb
shrl
adcb
add
xchg
mov
fcoml
inc
mov
aam
loop
and
cmp
jbe
lret
adc
push
ror
inc
aad
rcl
and
fidivl
xchg
pop
adc
movsl
and
rcl
jae
mov
iret
xor
scas
or
inc
leave
jmp
dec
pop
mov
sub
imul
pop
xor
mov
ja
xchg
sbb
add
jecxz
push
pop
xchg
aam
sub
jno
adc
dec
fwait
out
push
clc
adc
sbb
out
enter
push
in
stc
flds
pop
xchg
pop
mov
and
cmp
pusha
and
lret
int3
outsl
int
and
dec
sub
cmpsb
imull
mov
leave
push
in
je
sub
ret
loope
fcoml
xchg
mov
push
add
pop
fcompl
adc
bound
push
shrl
mov
jo
cmp
lds
dec
cmpsl
bound
and
test
push
movsl
sahf
lds
jg
jns
jns
cmp
sub
lret
cmp
adc
add
shrb
sub
mov
int3
bound
out
xchg
fcoms
lcall
and
cmp
pop
repnz
push
sub
enter
out
add
xchg
cmp
addr16
cmp
push
fstp
pop
xchg
in
dec
sub
enter
xchg
in
xor
fdivr
mov
push
stos
inc
xor
cmp
or
repnz
lds
mov
int
xchg
xchg
jno
test
and
in
ljmp
sbb
out
mov
inc
pop
xor
mov
and
cmpsb
mov
test
push
pop
dec
dec
fmuls
cs
pop
mov
or
aaa
shrb
lret
lods
test
jnp
orl
ret
sbb
cltd
cmc
mov
push
or
pop
repz
xor
mov
loopne
xor
mov
cmpsb
inc
std
pop
std
and
sub
mov
into
fs
or
adc
mov
xchg
cmpsl
sbb
add
sbb
jge
insl
clc
in
inc
inc
in
iret
pop
daa
stos
lods
add
mov
sbb
decl
pop
cmp
push
add
and
faddl
rol
jb
xor
dec
sub
outsb
pop
fdiv
add
and
shrl
push
dec
pop
repz
sarl
cwtl
imul
xlat
daa
insb
lods
inc
out
or
xchg
fisttps
jne
fdivl
cs
fimull
mov
pop
sub
mov
lret
push
cmp
jecxz
adc
dec
push
lret
sub
push
subl
in
sbb
xor
stos
lock
sub
outsl
loop
add
fnop
mov
sub
cmc
xchg
lods
addr16
xchg
cmp
xchg
icebp
call
cs
mov
mov
in
mov
imulb
stc
daa
jno
add
dec
inc
xor
mov
jle
sub
mov
daa
push
aaa
pop
outsl
mov
ss
pop
je
jle
repnz
mov
out
jecxz
fisttpl
xor
in
cmp
inc
std
jne
inc
stc
gs
push
addr16
sub
push
cmp
adc
loopne
push
jo
sub
inc
push
fcomip
mov
out
and
sbb
ja
xor
push
sub
jg
push
cltd
or
and
lahf
outsb
pop
dec
ds
lods
insl
je
push
mov
mov
jp
lea
addl
arpl
lcall
jp
push
and
mov
dec
pop
fisttpl
dec
shl
mov
jae
shll
scas
cmp
repnz
mov
insb
ficomps
or
mov
fwait
adc
testl
sub
or
push
mov
or
mov
loopne
shlb
adc
or
xchg
mov
sahf
dec
arpl
stos
stos
cmc
jecxz
inc
sarb
stos
jnp
nop
adc
xor
xchg
cmp
rorb
jb
test
test
fwait
or
aam
leave
adc
call
mov
or
sub
pop
imul
outsl
pop
add
enter
add
jo
jecxz
aas
pop
xchg
shlb
mov
hlt
xor
mov
scas
push
mov
hlt
mov
out
test
mov
jb
push
adc
sti
ljmp
js
rolb
fsubl
adc
mov
jl
ds
xchg
xor
repz
push
cwtl
jmp
popa
mov
add
loopne
out
xchg
and
inc
stos
dec
sub
xlat
push
shlb
out
mov
sub
mov
push
push
add
int
sbb
mov
inc
mov
xchg
mov
sbb
in
xchg
loop
and
fdivs
mov
scas
push
outsl
into
or
pop
in
pop
xor
add
push
mov
mov
sub
aam
mov
inc
loopw
cmp
int
pop
xor
jg
popf
int3
call
and
lret
push
and
jmp
pop
jmp
mov
mov
adc
ds
pop
jae
dec
mov
testb
in
in
push
test
das
inc
sub
les
mov
stos
dec
icebp
aas
jns
push
inc
in
adc
decl
xchg
mov
fcompl
sub
loop
aad
jmp
xchg
mov
dec
insl
dec
lret
stc
adc
cmp
or
mov
adc
jb
sbb
cmp
push
and
sub
jg
pop
or
addr16
rclb
stos
cld
jmp
int3
mov
add
and
dec
lods
out
movsb
incl
cmp
sbbl
or
push
push
sbb
adc
push
aad
aas
adc
add
xor
nop
pop
push
mov
ljmp
jp
stos
fs
outsl
mov
inc
fimuls
frstor
jmp
xchg
scas
sub
imul
fdiv
jp
in
test
int3
mov
inc
bound
out
cltd
fldenv
cmp
xor
cmovg
test
cs
dec
sub
icebp
push
xchg
mov
aad
mov
fwait
jp
cld
insl
repz
xchg
leave
arpl
lods
and
and
push
dec
ja
add
loop
out
push
cmp
gs
xor
jb
mov
add
xchg
bound
mov
push
jb
mov
js
push
rcrb
pop
fmuls
jge
aam
mov
call
arpl
leave
bound
out
lahf
std
ljmp
scas
xchg
mov
and
xlat
jae
jb
mov
xchg
xchg
pop
cli
push
fadd
xchg
inc
xchg
in
inc
pop
mov
mov
xchg
jle
pop
movsl
xchg
daa
jne
sub
or
jmp
pop
sbb
xor
adc
aad
jnp
pop
icebp
in
clc
dec
sbb
or
mov
sti
std
test
adc
cmp
adc
add
loope
cwtl
mov
push
cmp
xor
aad
push
rolb
mov
xor
jmp
sub
jl
and
mov
popf
icebp
dec
or
test
xlat
cltd
int3
inc
icebp
outsl
add
pop
mov
ds
lcall
ja
cwtl
aas
cli
push
fsts
mov
test
sti
xor
sarb
pop
mov
mov
into
in
xor
sbb
xor
and
movsl
in
xlat
sub
mull
mov
inc
sbb
mov
into
aaa
out
adc
mov
push
ljmp
mov
sbb
mov
xor
rcr
sti
add
adc
mov
dec
das
adc
rorb
das
add
sub
dec
push
mov
mov
popa
pop
xchg
xchg
inc
movsb
mov
jmp
je
sub
fiaddl
das
imul
movsl
cmpsl
addr16
mov
mov
cmc
pop
insl
jbe
jecxz
loope
mov
add
pop
jecxz
repnz
xchg
jecxz
ds
xorb
mov
cmpsb
mov
stc
inc
mov
adc
idivl
mov
mov
fnsave
scas
test
xchg
push
mov
shrb
stos
imul
lcall
in
and
insl
cmp
in
jmp
adcl
lcall
mov
dec
fwait
data16
mov
cmp
loop
out
push
ds
and
jecxz
jb
dec
loopne
and
sub
into
cli
pusha
or
push
adc
mov
inc
dec
add
jp
push
adc
bound
push
xor
fisubl
popf
test
mov
mov
lret
adc
inc
mov
dec
cmp
pusha
dec
aas
dec
icebp
test
ja
inc
hlt
mov
cmpsb
jbe
ds
sbb
insl
in
sub
mov
cmpsl
sbb
xchg
sbb
xor
ret
aad
cmp
xchg
sub
int3
push
leave
mov
pop
adc
in
jne
push
sbb
add
jo
je
or
ds
xchg
dec
pop
lods
lods
adc
pop
les
dec
push
cmp
lods
cs
sbb
imul
push
dec
lods
mov
sbb
bound
mov
outsl
cwtl
lea
test
bound
std
dec
out
insb
inc
fs
loope
mov
jle
jns
pushf
imul
mov
pop
dec
sub
inc
add
mov
add
fldt
call
mov
aam
lea
fnstenv
mov
ds
sbb
in
xchg
mov
cltd
adc
push
mov
ljmp
sub
add
jo
cmc
sub
mov
mov
add
lahf
adc
xchg
push
sub
push
in
mov
movsl
mov
push
rorb
mov
hlt
push
jne
cmove
aaa
test
rcrl
mov
pop
push
gs
je
arpl
pop
adc
mov
repnz
repz
lcall
jo
iret
fmulp
mov
mov
push
xor
cmp
mov
je
sub
adc
inc
std
mov
inc
daa
test
stos
inc
fstpt
sub
mov
lods
lods
dec
sti
push
and
pop
pop
cmovl
jp
mov
pusha
scas
movsb
or
mov
cli
hlt
inc
fdivrl
rclb
lock
xchg
add
xchg
js
fdivl
mov
xor
lret
rolb
stc
iret
push
aaa
and
enter
or
and
loopne
inc
int
shrl
fabs
adc
cmpsl
scas
dec
test
or
ds
fidivrl
lock
and
jns
mulb
jo
lret
pop
incl
mov
ret
inc
or
or
aam
dec
dec
test
addr16
adc
push
cmpsb
mov
inc
imulb
call
bsf
mov
test
push
push
xor
push
cmpb
std
inc
jbe
add
sbb
xchg
xchg
cmpsb
add
test
dec
repz
arpl
rol
in
jb
sbb
sbb
sbb
orb
and
and
out
fwait
imul
aaa
cmp
dec
dec
push
inc
push
lods
fwait
test
pop
es
jae
mov
out
addb
and
ljmp
dec
fwait
mov
fsubrs
xchg
ja
arpl
jae
pop
sbb
ljmp
xchg
out
gs
sub
or
jns
sub
dec
or
push
int3
mov
stos
jbe
addb
adc
in
pop
repz
jg
lea
shlb
add
mov
jmp
in
sbb
loope
js
js
jnp
push
ds
jl
in
sub
scas
cmp
in
pop
jo
and
addr16
aam
jbe
das
shll
bound
dec
push
xchg
outsl
add
notl
mov
bound
inc
aaa
cwtl
ljmp
jae
daa
int3
sbb
loopne
sti
fs
je
ja
daa
into
ds
lret
icebp
jo
and
xor
pushf
pop
xchg
or
sub
pop
shlb
inc
scas
in
and
adc
data16
les
xchg
dec
clc
fmul
cmpb
daa
xchg
gs
sbb
xchg
fmull
ret
add
dec
cmc
lret
jne
sar
bound
fdivs
clc
hlt
sbb
mov
fwait
pop
push
out
cltd
cmc
subl
inc
adc
roll
sbb
data16
adc
hlt
nop
les
outsb
lret
je
mov
pop
jns
jl
mov
sub
push
mov
push
popa
lods
pop
sahf
cmp
out
les
lock
inc
test
mov
push
fists
or
xchg
push
dec
mov
inc
push
test
xchg
add
fnsave
fadds
push
or
and
adc
jecxz
lcall
out
cmp
cmp
pop
cmpsl
xchg
les
jp
sbb
and
in
cmpsb
les
ds
pusha
pop
repz
push
add
mov
les
scas
lods
fdivs
sarb
sbb
add
sti
add
and
int
scas
pushf
xchg
push
add
cmp
jo
add
rorb
and
je
push
pusha
cmp
push
ret
cmp
test
jecxz
mov
insb
aaa
mov
push
pop
aas
jne
fcmovbe
xor
sbb
cs
icebp
in
pop
outsb
mov
fst
mov
push
mov
lods
dec
inc
aad
cld
cmc
sub
std
mov
xchg
and
jmp
cwtl
or
scas
mov
stc
pop
int3
xchg
je
fsub
cmpsb
aas
push
add
mov
cmc
dec
mov
lahf
mov
xlat
rorb
push
or
stos
test
inc
ret
ljmp
jge
push
cld
pusha
push
add
xor
outsb
loopne
add
push
sub
add
shlb
dec
jmp
data16
or
jl
mov
pop
loop
sbb
mov
sub
dec
inc
shll
adc
jmp
lds
xor
cltd
aad
cmp
push
xchg
arpl
pop
pop
cmpsl
lret
es
sbb
add
pop
jnp
sub
jl
and
adc
cmpsl
cmp
cmp
lret
lods
hlt
jg
inc
jnp
mov
test
aaa
push
jecxz
movsb
out
outsl
loop
into
and
sub
cmp
nop
add
rorb
fidivrl
imul
mov
jg
loop
xchg
jg
push
or
loopne
push
jecxz
xchg
insl
mov
enter
fdivl
arpl
out
fimull
stos
push
xchg
sbb
mov
leave
mov
popf
gs
cli
popf
inc
inc
cmpsb
dec
cmp
loop
sub
mov
jb
or
insb
in
pusha
cmp
loop
test
repz
cmc
add
pop
test
add
enter
aaa
rorl
mov
lods
sbb
sbb
imul
je
out
cmp
mov
lods
sbb
mov
push
jb
jno
lret
call
push
daa
int3
xchg
and
outsb
pop
scas
cli
push
cld
pop
cmp
lret
lock
daa
add
mov
xchg
jmp
pop
outsb
imul
insl
fwait
std
sbb
cmp
pop
lea
loop
imul
cmp
pop
inc
sbb
jnp
xor
mov
sbb
orb
jno
mov
imul
inc
jg
lret
mov
push
sub
mov
push
adc
movsb
rcll
or
mov
push
push
leave
mov
dec
add
xchg
lea
sbb
pusha
rcpps
outsb
mov
mov
lea
leave
mov
xor
push
es
mov
aas
jne
mov
push
mov
jp
cmp
or
inc
into
mov
mov
into
or
sub
sbbl
mov
fwait
and
jae
testl
stc
ss
mov
sub
jno
ss
call
pop
fiaddl
shll
test
xchg
fildll
in
movsb
xor
push
and
adc
mov
pop
ret
jg
push
cmpsl
cmp
std
rcr
mov
jbe
cwtl
xlat
imul
dec
int
pushf
and
jecxz
clc
xchg
mov
push
sub
outsl
into
loop
add
and
cli
xchg
mov
pop
push
or
dec
fs
movsl
mov
sub
inc
in
repnz
push
mov
test
sbbl
mov
aaa
add
xchg
lret
push
inc
bound
mov
xchg
pop
daa
adc
cmpsl
mov
add
into
mov
fcmovu
mov
cmp
xlat
pop
dec
adc
pop
pop
sbb
lret
adc
xchg
out
fidivrs
rcrb
xor
loop
adc
adc
and
mov
out
aam
push
push
movsl
repz
inc
fldl
fldl
stos
mov
add
imul
jae
sar
lods
and
cs
inc
jmp
shrb
cmpsb
adc
adc
lcall
test
sub
out
rorl
mov
je
dec
out
mov
jae
cmpl
aam
icebp
pop
jmp
je
xor
test
push
xchg
testl
mov
lret
fnstenv
out
mov
adc
dec
cmp
inc
cmp
arpl
aam
mov
shrl
sub
hlt
xlat
xlat
xor
fisttps
mov
xor
pop
je
mov
ret
jp
push
jge
pop
subl
test
outsb
push
fisubs
jmp
pop
incl
in
pop
inc
cmp
adc
mov
pop
mov
les
add
cli
push
scas
jle
sub
and
pusha
aaa
fldt
jae
test
clc
cmc
or
rcrb
repnz
test
mov
fcomps
sti
ret
int
fs
out
in
mov
pop
xor
fmul
cmp
popa
lcall
jae
call
or
test
xchg
aam
pop
iret
out
les
int
stc
arpl
sbb
orl
shlb
dec
jo
mov
aam
pop
icebp
insb
insb
pop
clc
inc
push
cmp
adc
xchg
cli
outsb
push
inc
pop
mul
call
adc
sbb
imul
aas
outsb
add
std
imul
push
or
push
dec
fsub
adc
mov
in
popf
insb
lock
mov
imul
pop
jo
outsl
fstpt
xor
stos
addr16
add
shlb
and
in
shrl
gs
in
push
movsl
mov
dec
insb
mov
test
xchg
xor
inc
gs
out
xlat
out
jns
sbb
sub
adc
sbb
xorl
out
jb
imul
repz
cltd
cmc
outsl
pop
ret
pop
adc
add
gs
clc
pop
push
popf
addr16
xor
mov
xchg
xchg
je
jg
mov
imul
std
sub
lea
or
hlt
call
cmp
mov
push
push
xorb
add
and
cmp
lock
outsb
pushf
and
out
imul
cmpsl
and
out
lret
insl
icebp
sbb
pushl
push
icebp
sbb
das
aam
adc
cmp
out
testb
inc
nop
inc
cmp
mov
cmpl
jno
pop
add
loopne
js
xchg
scas
cltd
jae
inc
jmp
mov
mov
ds
stos
xor
cmp
xchg
incb
imul
mov
mov
movsl
and
mov
test
lods
out
xchg
into
pusha
and
mov
stos
clc
mov
ror
lcall
adc
ss
push
inc
dec
push
aad
xchg
lret
enter
jg
inc
test
and
enter
fs
cltd
cmp
cmp
adc
test
pushf
cmpl
fwait
stos
in
jmp
add
in
mov
lods
pop
out
out
inc
xchg
jg
and
sti
adc
mov
das
xlat
cmc
pop
out
incl
and
lds
imul
sub
hlt
xor
jbe
movb
in
mov
scas
push
mov
call
scas
outsl
fs
jbe
pop
sub
movsl
ja
inc
enter
sub
adc
mov
test
dec
mov
shl
jp
clc
stos
pop
sahf
stc
sbb
adcb
mov
xchg
sub
dec
rcrl
pusha
dec
xchg
ret
popf
test
xchg
xchg
insl
inc
fwait
and
or
bound
xor
sub
pop
loop
pop
mov
sahf
ds
xchg
in
iret
imul
mov
fildll
cmpsb
jnp
imul
mov
jmp
in
lcall
ret
ret
mov
loop
daa
lcall
or
leave
scas
daa
dec
insb
push
fists
fmull
mov
push
mov
hlt
dec
dec
fs
sbb
push
jae
inc
jb
lods
sub
arpl
pop
sbb
fnstcw
dec
sub
insb
inc
mov
fisubrl
and
and
lods
lahf
daa
or
aaa
sub
mov
xchg
add
push
and
adc
adc
cmp
pop
je
push
jg
pop
into
dec
inc
pop
mov
adc
stos
imul
mov
out
or
jle
testl
shrl
clc
push
aas
fidivrl
lea
push
jne
mov
pop
stos
dec
out
xor
dec
jno
pop
shrl
fidivs
or
sbb
sbb
callw
sbb
mov
jnp
push
lds
test
pop
push
mov
out
ss
pop
mov
nop
negb
in
jl
xor
cli
insl
cmp
jno
mov
pop
lds
dec
mov
mov
or
aad
lock
or
cmp
inc
mov
fs
mov
dec
shll
dec
push
mov
lcall
inc
pop
pop
xchg
jo
jge
popl
jle
ljmp
and
sbb
pop
popa
sbb
adc
cmpsb
lods
leave
pop
divl
mov
adc
add
dec
push
push
test
jo
cmpsb
inc
push
stc
dec
nop
rol
fildl
ret
test
in
mov
jmp
xor
les
push
mov
inc
pop
inc
jg
push
dec
push
push
sub
lahf
fwait
jle
push
lods
inc
mov
fwait
nop
jnp
jmp
testb
mov
cwtl
fs
insl
pop
push
roll
lock
xor
aad
shrb
xchg
jb
nop
xchg
inc
xchg
roll
xchg
dec
cmc
sti
shl
push
push
fidivrl
push
cmpsl
movsb
xchg
xchg
push
rep
stc
mov
cwtl
dec
push
repz
and
mov
push
dec
addr16
sahf
pop
push
fldl
pop
enter
fildll
loopne
cmp
shll
cmp
out
aam
push
mov
loope
pop
cli
pop
out
cwtl
cmpsl
insb
xlat
dec
rcrb
repnz
cmc
in
out
adc
add
sbb
iret
cld
pop
loopne,pn
inc
pcmpgtb
decb
inc
and
xchg
scas
jb
sbb
inc
and
out
loope
xchg
dec
jae
xchg
int
xchg
pop
xchg
sahf
adc
mov
test
arpl
push
dec
or
mov
shlb
jae
adc
pop
lcall
xchg
inc
dec
es
out
in
lods
ss
and
outsb
sbb
and
rolb
pop
je
sbbb
inc
call
aad
adc
mov
sar
sub
cmp
out
or
jmp
jg
adc
movsl
daa
repnz
adc
jns
push
xchg
mov
or
test
arpl
pop
ret
fbstp
mov
mov
pop
add
mov
xchg
rorl
popa
sub
sbb
aad
mov
push
in
cltd
push
out
jle
dec
push
mov
mov
mov
sub
out
mov
jnp
pop
jmp
fisubrs
mov
cmp
shr
or
xor
cli
bound
into
jnp
scas
daa
and
jae
push
sbbb
jo
shrl
iret
dec
fnsave
das
scas
mov
mov
bound
push
test
inc
dec
push
jg
sbbb
in
jecxz
test
mov
loop
pusha
mov
pop
out
leave
jle
mov
loop
in
mov
test
xchg
add
addb
les
fcmove
cmp
movsl
mov
outsl
sub
lret
lock
int3
insl
imul
push
push
sub
jle
leave
popf
jbe
add
pop
jecxz
add
lea
xchg
pop
pop
repz
movsl
fimuls
cli
std
lock
dec
cmp
mov
mov
xor
stos
add
jb
leave
dec
fstl
and
push
mov
jbe
lea
sub
mov
das
sti
movsl
bnd
fnstsw
mov
andl
sarl
and
dec
addr16
jbe
fisubs
adc
daa
jl
rcrl
idivl
rorl
adc
call
pop
scas
les
pop
int3
das
lea
popf
es
das
in
and
pop
addr16
push
mov
sbb
loope
mov
sti
pop
xor
fs
mov
jle
test
mov
and
jge
push
mull
lret
sub
sbbb
cmp
cmp
mov
xchg
pop
bound
xor
ret
popf
fsubrs
cmp
pop
in
inc
subb
stos
rolb
add
adc
jbe
dec
shl
xor
mov
cmp
or
lret
pop
push
iret
jp
jp
xchg
lods
lret
push
mov
xchg
in
repz
mov
push
fyl2x
fnsave
add
xchg
xor
xchg
mov
pusha
jae
testb
mov
mov
int3
pop
fbld
xor
scas
push
push
mov
cmp
add
cmp
stos
push
cwtl
scas
push
test
je
mulb
mov
cmp
mov
and
xlat
push
xchg
jae
out
sub
sbb
sbb
inc
sub
gs
inc
cmp
push
jnp
imul
jmp
stos
bound
pushf
and
adc
pop
mov
test
into
dec
cmp
out
mov
xchg
pop
cld
pop
lods
mov
out
lahf
rolb
loop
insl
sbb
xchg
dec
in
lcall
mov
in
cmp
fnstenv
pushf
in
push
push
mov
adc
inc
fcoml
lock
test
packsswb
dec
or
les
iret
and
push
in
jbe
push
pop
addl
outsl
loopne
pop
stos
mov
faddl
cli
shll
insb
sahf
repnz
mov
out
cmp
in
test
sbbb
add
fcomp
cmp
fmuls
bound
test
inc
jecxz
ret
xchg
sub
jge
shlb
outsb
ds
mov
dec
add
inc
rcr
mov
adc
arpl
jl
mov
mov
lock
lds
push
addb
push
xor
mov
leave
rcrl
cmpsl
jp
jne
pop
or
adc
xchg
lahf
and
pop
inc
testl
rol
addr16
aas
mov
sbb
int
cmp
loop
xchg
rclb
outsb
push
aaa
idivb
dec
mov
into
xchg
mov
ffree
enter
mov
test
mov
fsubs
lods
mov
fisubrs
jb
lret
orb
aad
imul
mov
iret
xor
mov
sub
xor
add
sbb
dec
sti
xor
cmp
mov
fdiv
lods
xchg
or
or
in
jne
xchg
jmp
add
inc
out
cmp
mov
jns
add
inc
popf
cli
dec
rolb
nop
das
push
leave
pop
push
shll
xchg
cmpsb
les
or
dec
mov
adc
test
je
fisubl
or
popl
add
movsl
xor
or
adc
jb
clc
jnp
sub
mov
imul
inc
pop
stos
push
xor
rcr
mov
imul
mov
dec
xor
iret
adc
pop
mull
jns
sbb
sbb
mov
push
aaa
jle
mov
jmp
in
cmpsl
or
imul
ret
fldenv
pop
xor
pusha
loopne
pop
ja
arpl
jmp
fs
sbb
adc
mov
adc
dec
add
lods
stc
lea
add
out
dec
or
and
xchg
imul
sbb
pop
mov
outsb
mov
mov
add
or
lds
jge
jae
xor
test
xor
pop
sahf
jmp
inc
aas
or
xchg
mov
sbb
xor
insl
loope
pop
test
xor
es
jnp
dec
imul
mov
int3
or
mov
test
xchg
outsb
adc
or
hlt
xor
push
xor
aaa
loopne
test
enter
loope
in
js
test
pop
jb
cmp
ret
adc
arpl
cmpsb
xchg
mov
jmp
cmp
add
adc
jbe
imul
fwait
pop
arpl
daa
ds
sub
and
aas
dec
std
xchg
mov
sbb
mov
aas
movsl
add
xchg
push
dec
xor
push
adc
xchg
ss
dec
mov
test
outsl
xchg
xor
cmp
mov
pop
js
cmp
add
and
sbb
cld
jb
in
xchg
das
sub
daa
xchg
cmp
ds
add
inc
ret
dec
popa
gs
add
imul
push
push
cmp
jo
dec
cli
xchg
push
sub
aam
add
test
push
clc
das
push
js
and
ret
outsl
paddw
cmp
mov
add
adcb
adc
mov
cmp
add
add
pop
sbb
in
mov
mov
cmp
mov
dec
pop
adc
push
xchg
sub
fs
insl
int3
test
or
sbb
add
es
ja
in
sahf
out
sti
fadds
mov
insl
fs
xor
imul
lock
sub
lds
data16
insw
cltd
xchg
and
sub
fsub
pusha
mov
sbb
div
push
std
dec
imul
mov
aad
mov
scas
hlt
pusha
aad
addr16
mov
adc
and
push
jo
sub
arpl
jge
mov
mov
jbe
jp
arpl
fs
mov
and
mov
inc
mov
ja
mov
lods
gs
movsl
sub
das
sub
sub
fs
iret
cld
fsubs
pop
xor
mov
clc
xor
mov
pop
and
sti
adc
adc
in
or
cld
xor
fmul
sar
bound
stos
mov
call
cli
fs
cmpsl
push
je
fwait
arpl
shlw
mov
bound
cld
push
cli
loop
jo
inc
xor
loopne
pop
loope
mov
mov
ja
pop
lahf
mov
repnz
mov
dec
daa
stos
mov
divl
divb
ljmp
push
loop
mov
mov
aad
ds
sbb
sbb
mov
movsb
push
cmpsb
sbb
subl
xchg
or
cmp
std
and
jno
inc
jge
jecxz
jns
add
into
push
aas
insl
dec
or
aam
and
incl
pop
shr
insl
addl
xor
cmp
push
aam
lcall
pop
out
sub
mov
sub
shll
pop
sbb
jmp
or
mov
adc
cs
fdivrs
out
push
mov
push
dec
insl
xchg
movsl
add
ficoms
lret
imul
push
das
xchg
jb
les
mov
je
mov
mov
sub
mov
icebp
not
loop
int3
push
push
cmpsl
cli
mov
stc
outsl
or
mov
mov
dec
test
loopne
cltd
inc
popf
mov
movsl
into
cmp
jge
push
jo
inc
movsl
jnp
cmpsb
jecxz
adc
mov
cmp
dec
jbe
adc
mov
lock
test
movsb
dec
sbb
aaa
push
jne
hlt
fiadds
rcl
cmpsl
insb
daa
push
inc
lcall
pop
add
mov
aaa
dec
insb
mov
mov
or
js
and
ret
cld
mov
sbbb
or
add
fiadds
jbe
imul
jbe
ss
test
enter
movsl
daa
mov
jg
cmc
cmp
jge
popl
pop
dec
repz
push
xchg
dec
cltd
xor
lea
call
notb
imul
jne
adc
sti
fwait
mov
icebp
dec
cmpsb
lods
icebp
push
xchg
test
xor
lock
jnp
cmp
inc
add
dec
pushf
stos
mov
in
mov
adc
je
outsl
imul
jg
push
xchg
stos
mov
loop
cmp
roll
cli
xchg
nop
push
add
sub
add
mov
fbstp
push
fistpll
inc
jl
sarb
inc
popf
lret
aas
cmpsb
xor
cmpsb
sarl
inc
xchg
outsl
xor
sahf
mov
ret
dec
mov
jae
iret
mov
repz
mov
out
lock
or
inc
sbb
mov
xor
push
imul
aam
inc
pushf
scas
mov
lret
test
xchg
and
mov
jne
push
inc
in
fs
xor
mov
push
sbb
sbb
scas
push
incb
dec
jge
fdivs
out
lahf
xor
outsl
or
insl
movsl
aam
sbb
movsb
pop
push
aam
and
xor
mov
outsl
sarl
or
cltd
and
es
scas
push
and
repz
sbbl
mov
adc
rcrb
out
cmp
mov
sahf
repnz
cmp
push
icebp
adc
adc
xor
test
je
adc
notb
daa
fildll
dec
or
adc
pop
je
inc
cmp
dec
in
test
inc
cmpsb
mov
das
xchg
pop
jno
ljmp
pop
mov
xchg
fldpi
ljmp
jg
jbe
jnp
mov
bound
xchg
push
mov
mov
mov
pop
rcr
js
xchg
mov
clc
cmp
pop
pop
mov
imul
fsubl
mov
adc
push
and
aas
inc
pop
pop
add
mov
mov
mov
add
rcll
jmp
inc
std
cmp
mov
add
or
loop
fdivl
mov
js
xchg
into
enter
cli
mov
cmp
fsubrs
je
mov
mov
outsb
and
fwait
inc
int3
fstp
loopne
push
pop
cmc
jb
out
mov
pop
mov
push
mov
mov
pop
sub
jecxz
cmc
cmp
xchg
cmpsb
insl
fists
addr16
test
inc
jl
push
sbb
adc
adc
mov
rclb
repz
pop
sub
dec
ljmp
test
mov
push
aas
negl
jbe
loope
in
sbb
inc
out
test
sub
incb
data16
aas
loopne
rcrw
mov
stc
cmp
loop
mov
gs
dec
mov
jecxz
add
ficoml
jo
cli
leave
sbb
rcr
xchg
adc
or
fnstsw
mov
pop
ret
sti
insb
lock
push
xchg
aad
adc
call
push
pusha
test
dec
pop
imul
jmp
adc
ljmp
dec
sar
test
fucomp
mov
push
mov
mov
dec
test
daa
fwait
pop
jle
push
push
and
lock
fdivrs
in
sarl
scas
dec
outsb
sbb
xor
fisttpl
cli
sbb
mov
xchg
imull
sti
sub
push
data16
add
cmp
imul
outsl
movsb
dec
xchg
jmp
jb
adc
mov
movsl
and
push
xor
push
add
ja
sbb
jmp
lahf
mov
and
negl
call
inc
jmp
mov
add
dec
mov
mov
sbb
sub
test
jg
xchg
ss
or
xchg
xchg
les
mov
mov
mov
pop
jns
cld
mov
addr16
cli
jge
aas
sbb
std
subb
jns
vcvtsi2ssl
test
sub
cs
mov
mov
mov
jl
test
daa
cli
pop
jb
inc
xchg
xor
mov
dec
xchg
daa
dec
clc
pop
inc
call
sarl
push
ret
test
gs
jge
pcmpgtb
roll
adc
jecxz
dec
or
push
or
sti
mov
mov
ds
cmp
mov
je
jp
mov
mov
xchg
adc
cmp
pop
push
lcall
daa
xchg
add
icebp
adc
mov
jb
inc
inc
mov
aaa
add
cmp
lret
gs
divl
bound
inc
mov
sub
cmpsl
cwtl
push
xor
push
hlt
icebp
pop
push
jbe,pn
adc
push
fdivl
mov
jmp
cmpsl
sti
xchg
mov
cmpl
pop
test
mov
jb
aam
sub
scas
or
push
mov
std
lahf
test
push
in
fs
aam
scas
dec
push
in
xchg
mov
cwtl
popa
cld
mov
sub
imul
xchg
fmull
dec
xor
out
outsl
jle
std
inc
shlb
mov
xor
xor
or
test
andb
lret
push
cli
jge
mov
mov
jmp
cwtl
mov
ja
fisubs
add
pop
pop
ret
mov
pop
xchg
sar
cmp
inc
mov
sbb
jge
iret
lahf
daa
mov
nop
and
jns
clc
xor
mov
movsb
popf
test
and
rorb
sub
testl
mov
sub
jne
mov
dec
iret
adcb
xchg
out
pop
and
ja
push
mov
mov
daa
movsl
sub
jb
mov
xchg
cmp
xchg
dec
adc
mov
cmp
notb
pop
in
jns
sbb
or
pop
sahf
mov
in
out
xor
and
inc
lock
outsl
jg
rcrb
and
jns
mov
and
ficoms
mov
decl
adcb
cmc
lahf
push
adc
je
addr16
cmp
jbe
sub
mov
push
mov
or
inc
std
aam
and
xchg
mov
mov
jo
dec
cli
mov
je
imul
xchg
test
scas
ret
add
lret
flds
lods
insl
cmp
bound
andl
aam
sahf
push
sub
xor
out
pop
repnz
jbe
xor
adc
xchg
mov
aad
pop
daa
xchg
push
hlt
dec
aad
jmp
mov
and
inc
clc
sbb
inc
sbb
ljmp
add
popf
and
jo
ss
xor
push
sub
getsec
nop
loope
push
das
in
or
gs
in
out
arpl
mov
jmp
mov
aam
push
out
sbb
lods
mov
inc
jle
popf
mov
push
pusha
out
dec
mov
bnd
dec
lcall
fs
mov
out
inc
lods
mov
mov
xor
clc
mov
or
iret
xorb
mov
inc
mov
movsb
push
cmp
pop
out
jg
jae
cltd
ficoms
inc
inc
and
fists
test
in
popf
push
dec
inc
pop
add
jecxz
or
sub
sbb
shr
sub
cmpl
repz
adc
pop
pop
out
stos
fidivs
enter
add
test
pop
mov
and
lods
cmpsl
mov
shll
sub
sub
sbb
sbb
pop
mov
pop
push
jae
xchg
sub
out
sub
je
mov
shrl
mul
or
repz
jmp
dec
sbb
in
fs
in
imul
nop
outsl
inc
mov
popa
scas
les
sti
sti
ds
mov
xor
into
add
test
dec
adcl
test
movsl
push
xchg
pop
sub
out
xchg
sarb
pop
fnstenv
rcrb
rorb
cmp
and
cli
push
call
add
pusha
mov
and
cmp
xchg
movsb
push
sahf
iret
enter
add
xchg
inc
sbb
in
inc
and
pop
jbe
outsl
xchg
in
repz
mov
pop
sub
sbb
iret
inc
dec
data16
push
sub
mov
pop
sub
cli
sbb
loopne
es
aad
or
inc
jle
cmp
cmp
ret
mov
cmp
dec
movsl
mov
flds
lahf
or
lods
mov
jge
and
pop
sbb
mov
rcrl
push
and
int
int
push
fcoml
cmp
popf
fdivrl
mov
mov
push
xor
xor
int3
inc
and
and
and
lcall
inc
pop
sbb
and
roll
dec
stos
xchg
inc
xor
sub
adc
or
mov
or
mov
push
push
scas
movl
dec
popa
cmp
xlat
test
into
push
sbb
push
stos
fiaddl
adc
pushl
sub
cld
sbb
ljmp
pop
adc
jl
pop
nop
adc
es
iret
push
sub
or
ret
xor
cmove
push
iret
fs
in
inc
insw
int
pop
xor
stc
push
rolb
das
cmpsb
or
xor
ljmp
hlt
jnp
cmp
jge
or
sub
fdivrs
mov
movsl
cmp
inc
lahf
adcb
jl
xchg
fisubl
test
add
in
enter
add
jo
scas
jo
out
outsl
aas
mov
shlb
bndldx
data16
and
lret
ffreep
lret
divl
add
push
xor
jp
test
aas
pop
adc
popa
or
push
lret
inc
test
push
int
jecxz
sbb
pop
mov
cwtl
cmp
sar
psrlq
sbb
sbb
mov
cmp
lds
add
xchg
push
pop
scas
test
sub
mov
add
cmc
insl
add
fsubs
xchg
jbe
xchg
adc
daa
aaa
sub
sbb
sti
mov
mov
aaa
pop
adc
sbbl
mov
add
xor
pop
cmp
cwtl
jmp
je
daa
test
sahf
mul
pop
pop
mov
dec
sub
sbb
imul
mov
mov
push
cltd
sti
sbb
sbb
push
cmp
ror
lret
jne
adc
sbb
repz
iret
clc
mov
mull
int
mov
test
enter
loopne
xchg
jbe
pop
popf
sub
mov
xchg
mov
jnp
das
pop
add
lret
nop
sub
jae
pusha
or
out
outsl
jbe
ret
mov
dec
cli
cwtl
imul
andl
push
sbb
xchg
jecxz
cmc
pmulhuw
js
cmp
cmp
adc
test
dec
cmpsb
xchg
push
insb
cmp
pop
call
leave
pop
pop
and
or
or
pop
js
divl
stos
and
loopne
sbb
adc
pusha
and
mul
mov
ja
flds
ss
xor
or
cmc
mov
jb
push
maxps
cmp
sbb
out
pop
in
fisttpl
insb
data16
jae
dec
xchg
imul
movsl
in
adc
bound
mov
xchg
addr16
xchg
sub
leave
mov
sub
mov
jae
out
ljmp
push
mov
push
out
inc
jne
sub
test
dec
in
mov
pop
sar
shl
and
testl
fildl
xor
jle
mov
add
ds
stos
mov
xchg
cmpsb
push
cmp
sbb
and
xorb
add
stos
popa
lds
imul
mov
hlt
gs
stos
scas
mov
out
push
dec
movl
sub
mov
inc
out
inc
push
mov
xchg
rorb
mov
bnd
pusha
leave
fs
shll
cmp
xchg
mov
push
pop
imul
div
idivl
and
popf
mov
insb
inc
and
sub
mov
mov
xchg
ja
xchg
and
popf
sbb
jmp
inc
mov
out
sub
fwait
pushf
leave
rclb
es
stos
je
mov
loop
nop
nop
sub
mov
cmp
nop
addr16
xor
push
sti
lea
fdivrl
inc
in
mov
addr16
pop
xor
mov
ret
cmp
lret
add
or
mov
xchg
out
pop
ss
xchg
xor
mov
cmp
leave
add
iret
xchg
dec
and
pop
push
movsl
imul
jge
shlw
pusha
mov
add
aam
cmpsb
data16
sub
in
mov
ljmp
bound
xchg
repnz
push
jns
sub
and
xor
hlt
loop
mov
int
andl
cmc
pop
les
or
mov
push
fs
imul
sbb
mov
fwait
aaa
mov
sbb
xchg
out
push
dec
outsl
and
adc
mov
sub
cmpsl
mov
mov
jmp
lcall
iret
std
dec
test
daa
jmp
aam
mov
inc
lret
sub
xor
sbb
and
fbstp
jl
add
ret
inc
ret
xor
pushf
inc
cmp
push
rorb
mov
fdivl
and
sbb
arpl
xor
mov
mov
pop
repnz
in
lds
jb
es
pop
pop
jb
in
lods
sbb
jb
test
aaa
das
daa
pop
lock
ss
xchg
es
repnz
pop
cli
movsb
nop
adc
xchg
sub
data16
sbb
inc
cld
mov
cmp
leave
fcmovnb
mov
mov
in
arpl
enter
jns
push
cmp
adc
sbb
scas
negb
fists
insl
sbb
fcom
jp
jae
sbb
jae
andb
jmp
jbe
xchg
sbb
mov
inc
jge
into
movsl
push
or
xchg
sub
mov
dec
mov
jp
in
lahf
mov
mov
jge
cmp
cmp
cmp
and
imul
scas
das
mov
sub
pop
pop
addb
add
fucomip
addr16
xchg
push
push
cmc
cmpsl
vpmaxsw
rorb
addr16
pusha
and
jmp
sbbb
cwtl
mov
ja
mov
inc
jg
xchg
div
mov
sar
and
push
or
inc
xchg
xchg
mov
jl
jne
adc
pop
or
and
stos
arpl
test
xchg
push
subb
mov
dec
mov
jmp
icebp
lds
imul
pushf
sarl
popf
das
and
jecxz
jae
add
sbb
stos
popa
lahf
mov
push
inc
xchg
sbb
fprem1
hlt
mov
pop
jl
push
adc
daa
aas
gs
sbb
dec
or
aaa
adc
cli
mov
sbb
xchg
sub
lods
adc
push
or
inc
cmp
adc
cli
std
sbb
fdivrs
sarb
xchg
mov
je
loope
imul
pop
and
pop
pop
pop
mov
ja
mov
sarl
adc
and
or
sarb
das
push
pop
lods
bound
and
inc
call
pop
jle
hlt
jae
add
divl
mov
mov
mov
scas
popa
dec
mov
mov
into
mov
lcall
imul
mov
xor
dec
mov
pop
fdivrs
xor
sbb
js
jmp
sub
test
fists
jmp
add
jae
push
xchg
sarl
daa
dec
imul
cmpsl
xor
or
lock
loop
das
sub
dec
cmp
sbb
or
adcb
ret
jno
inc
cli
ret
aad
nop
xchg
loope
xchg
int3
arpl
out
icebp
fdivr
dec
push
cld
aad
bnd
das
pop
and
daa
fwait
pop
cld
sarl
cmpsb
gs
inc
imul
xor
cmp
jmp
xor
xchg
inc
mov
out
cmpsb
or
je
push
adc
out
loopne
push
les
jge
mov
jnp
push
outsl
out
push
stc
jnp
sbb
psllw
sub
pop
repz
adc
dec
add
cltd
je
adc
mov
js
fldt
sbb
pop
push
insb
leave
push
pop
into
sbb
addr16
or
stos
adc
bound
inc
adc
aaa
mov
shrb
pop
shll
adc
out
addb
popa
outsb
add
sarb
inc
fdivrs
or
lods
mov
mov
mov
popl
dec
jne
cmp
mov
mov
push
insl
inc
sahf
and
mov
mov
lock
sbb
into
lret
popf
outsl
sahf
mov
lock
aas
xchg
scas
xor
clc
fstpt
sbb
rclb
in
push
sub
mov
push
jo
out
adc
cmp
mov
push
fwait
pop
push
repnz
fiaddl
ljmp
sub
push
push
jbe
aam
repz
pop
or
pop
call
out
jl
in
mov
cltd
dec
push
shrb
or
sbb
cmp
mov
push
fldenv
mov
lods
and
jmp
es
xchg
sub
and
arpl
dec
lcall
sub
inc
sub
add
cmp
movsl
out
fstpt
or
test
adc
pop
push
cmpsl
notb
ffree
sub
mov
add
add
xchg
xor
jno
idivb
rcll
xchg
iret
mov
cmc
ret
cmc
mov
add
out
xor
push
adc
xchg
test
mov
rorb
pop
dec
lret
movsb
add
adc
aam
insb
ror
scas
mov
inc
mov
mov
and
mov
aam
scas
aam
popa
push
ss
nop
mov
je
movsb
insl
lock
dec
daa
adc
jge
xchg
sbb
fstl
xor
movsb
movb
sbb
inc
inc
fisubrl
or
stos
push
dec
pop
lcall
aad
jae
add
fisttpl
pop
daa
push
enter
jg
lcall
in
fwait
aaa
aam
inc
outsb
ja
fistps
out
mov
mov
inc
test
sub
daa
inc
adc
cltd
fadd
sbbb
arpl
sub
or
pop
fwait
popf
mov
cmp
movsl
pop
mov
je
pop
in
mov
inc
sub
adc
mov
out
xor
push
xchg
stos
rorl
mov
les
mov
data16
popf
faddl
test
xor
pop
repz
jp
adc
push
call
and
and
int
and
jne
pop
pushf
shlb
in
or
bound
repnz
add
dec
mov
js
inc
ret
push
iret
mov
adc
pop
mov
push
mov
loopne
push
cmp
xchg
out
dec
mov
sub
or
mov
push
mov
xor
scas
ljmp
sub
mov
mov
jnp
cmp
mov
test
arpl
mov
fidivrs
mov
sbb
inc
cwtl
rcrl
stc
mov
stos
mov
test
ljmp
iret
and
mov
pusha
xchg
xchg
mov
call
push
mulb
rorl
mov
js
sub
pop
insb
mov
adc
scas
test
stos
test
add
mov
dec
inc
cmp
loopne
xchg
sbb
fincstp
sbb
movsl
imul
or
jg
je
fidivrs
xchg
clc
scas
push
xor
lds
jo
cmp
cmp
bnd
ljmp
dec
mov
inc
outsb
das
jno
push
jne
out
lods
xchg
in
shll
js
inc
cmp
lret
pusha
sub
mov
sbb
inc
pop
and
test
xchg
pushf
add
jmp
push
jnp
scas
dec
xchg
and
inc
dec
movsb
jecxz
cmp
push
clc
pop
cmc
push
in
imul
mov
mov
mov
xor
fmuls
orb
cmc
es
sub
mov
mov
rorb
dec
xchg
xor
sbb
pop
sub
jnp
out
sub
mov
cwtl
xor
add
mov
into
fistl
inc
aam
shrl
bound
and
add
scas
mov
mov
sbb
cmpsb
ret
sbb
ljmp
mov
push
push
inc
push
stos
nop
scas
lcall
add
inc
aaa
xchg
js
into
stos
inc
adc
add
sbb
or
pop
stos
mov
inc
pop
push
cwtl
xor
push
push
fisttps
sbbb
mov
xchg
stos
mov
rclb
pcmpgtb
pop
pop
mov
cmpsl
sub
adc
sbb
mov
repnz
outsb
mov
xor
adc
bound
cmp
inc
cltd
dec
adc
pop
push
pop
mov
xchg
pop
and
xchg
shl
mov
mov
mov
mov
push
movsb
xor
and
lret
js
add
add
add
xchg
mov
jb
inc
sbb
mov
xor
jb
mov
jp
aas
cmpsb
mov
add
adc
mov
shl
mov
icebp
outsl
xchg
sbb
xlat
fidivrl
arpl
xor
js
inc
inc
cwtl
sbb
jecxz
in
leave
add
xchg
sbb
mov
loopne
cld
loopne
dec
and
sbb
xlat
jne
xor
lret
sbb
int3
mov
xlat
xor
sahf
adc
cld
xor
jmp
pushf
lret
cwtl
mov
pop
inc
lock
jns
cmp
prefetch
or
lea
ja
push
sub
imul
es
pop
sbb
jecxz
inc
sub
adc
cmp
inc
out
or
filds
xchg
scas
in
adc
sub
sub
inc
mov
mov
inc
dec
cmp
sbb
mov
dec
test
and
jnp
mov
fildll
sbb
inc
call
mov
xor
lds
inc
inc
xchg
icebp
movsl
aas
repz
fwait
xlat
cmp
shrb
in
pop
push
push
inc
adc
pushf
sub
pop
nop
fbld
js
mov
mov
outsb
push
mov
jecxz
mov
insb
cmpsl
fldenv
or
std
mov
pop
popf
or
pop
mov
test
mov
jl
xor
cmc
lock
ret
andb
das
pop
dec
out
and
mov
mov
or
insl
xor
inc
daa
fmul
mov
gs
out
fstp
daa
aam
push
cltd
das
jbe
mov
div
movsb
add
add
rorb
mov
icebp
or
xchg
sbb
dec
aaa
inc
out
das
lcall
test
leave
xchg
or
ret
filds
fucomp
xchg
xchg
pop
push
xchg
movsl
jo
inc
scas
inc
xchg
xlat
int3
ss
fwait
out
cs
pop
in
inc
or
push
imul
pop
adc
mov
pop
sbb
add
sti
jnp
pop
add
xor
test
sub
jge
fnstcw
sub
push
xchg
lock
sahf
int3
pop
mov
cli
je
push
cs
into
sbb
pushf
cmc
aas
jbe
sbbb
pusha
into
lahf
cmc
shrl
sbb
mov
aad
adc
mov
adc
outsb
daa
mov
mov
cs
push
dec
sub
leave
mov
testb
jl
adc
or
dec
add
push
imull
movups
ja
and
add
sahf
jnp
loop
daa
push
mov
ss
xor
call
cld
gs
sbbb
dec
push
cmp
cmp
xor
add
out
xor
sub
and
mov
imul
mov
xchg
xchg
inc
mov
lret
scas
pop
fcompl
sub
cmp
xchg
mov
xchg
xchg
mov
cmc
xor
fisttps
outsl
xor
jno
or
test
push
loope
sbb
pop
adc
jnp
int3
bound
lret
fs
int3
in
push
add
daa
in
inc
mov
cmp
stos
pop
mov
cld
clc
lods
inc
mov
out
push
mov
cmpsb
les
ret
pop
mov
jle
vmovhpd
into
inc
inc
mov
mov
lcall
lahf
sbb
push
ljmp
bound
add
cli
fbstp
insb
xchg
dec
aas
fwait
cmpsb
js
nop
stc
lods
pop
test
and
shrl
pop
push
pop
mov
insb
dec
xchg
iret
adc
lock
fnsave
lods
test
int3
mov
xor
cwtl
outsb
fisubrl
std
shl
cmp
push
or
pop
nop
sbb
mov
imul
xor
sbb
imul
pop
scas
outsl
dec
xlat
std
dec
push
cmp
pop
sahf
pop
sub
push
sbb
dec
cli
xchg
outsl
gs
add
adc
pushf
cli
dec
addr16
or
sahf
xor
jecxz
lret
mov
sbb
mov
pop
push
mov
mov
push
jl
jmp
out
dec
ss
mov
bound
lods
xor
ljmp
sbb
imul
mov
adc
lods
mov
cmpsl
and
sub
lods
out
push
dec
jmp
cld
movsb
ja
sub
mov
das
pushf
dec
or
sub
jmp
sub
hlt
xchg
push
fcmovbe
shlb
push
xchg
adc
sahf
nop
cwtl
pop
jmp
jl
ja
mov
pushf
int3
jg
mov
jnp
inc
ja
xchg
dec
sub
adc
adc
lret
pop
fwait
mov
cs
out
cmpsl
or
sbb
orl
inc
ret
ret
int3
xlat
sbb
xchg
decl
mov
adc
mov
mov
jo
arpl
xor
repnz
adc
cmp
pop
mov
sub
mov
test
lret
dec
loop
movsl
or
daa
rorl
xlat
cli
fs
or
stos
lcall
push
push
xchg
jmp
xor
lret
sub
fmull
daa
out
ret
stos
mov
add
dec
and
pushl
and
shll
incl
sub
mull
xchg
sbb
pop
pop
pop
filds
cwtl
cltd
mov
cld
faddl
in
adc
loope
push
shl
sub
jge
mov
push
mov
sbb
inc
sbb
mov
cmp
test
icebp
mov
inc
add
or
xchg
popf
in
jle
sub
add
cltd
jae
fs
clc
sbb
mov
pop
out
mov
enter
arpl
dec
and
adc
fdivrl
adc
adc
fbld
nop
out
mov
push
fcoml
or
iret
pop
pop
out
stos
in
pop
decb
aam
lahf
or
mov
cwtl
mov
lahf
sub
xchg
into
adc
dec
dec
rorl
rcll
cmpsb
es
xchg
pop
frstor
js
pop
pushf
sbb
inc
add
mov
call
sbb
xchg
addl
int3
mov
and
push
inc
inc
cmp
int
mov
popf
jle
mov
les
jl
jp
loope
inc
in
out
jns
data16
cmp
xor
int3
orb
sbb
loopne
cmc
mov
xor
inc
sub
js
jge
lret
jl
mov
mov
repz
and
push
lods
add
mov
fdivr
sbb
xchg
push
xor
mov
les
ja
xchg
ss
sub
ret
insl
fidivrl
xchg
test
decb
jmp
fsubrp
inc
popa
xorl
imul
push
int
fisubrl
mov
scas
or
push
adc
cwtl
mov
xor
lcall
pop
jo
xchg
jecxz
and
jmp
pushf
fsub
xchg
or
repz
test
call
stc
mov
outsb
xor
int
sti
push
aad
push
orb
lods
sub
pop
or
or
jg
repnz
adc
or
xchg
loope
add
lcall
aad
std
inc
push
push
xor
clc
adcl
jo
inc
rcr
push
out
addr16
and
repz
sub
setno
xchg
ja
cmp
jle
xchg
pop
jecxz
jnp
insb
mov
xorl
cmpsb
push
insl
mov
xor
or
popf
mov
sub
jge
data16
mov
test
jle
in
inc
testl
jle
or
cmp
dec
insb
iret
ret
cli
jmp
cmc
ja
or
pop
enter
mov
push
pop
sti
insb
sub
mov
pusha
pop
inc
sbb
push
bnd
and
mov
pop
xchg
adc
daa
jg
stc
insl
sbb
or
push
fwait
xor
adc
fucomi
aad
das
scas
or
cmp
adc
shlb
nop
loopne
nop
mov
loope
mov
lds
nop
insl
cwtl
mov
jmp
jb
jg
inc
xchg
dec
pop
jecxz
sub
sub
push
pop
inc
and
stos
mov
pop
outsb
and
push
jmp
pop
mov
fstpt
daa
fisubs
shrb
daa
dec
push
mov
mov
xchg
xchg
ss
push
sbb
popf
dec
std
adcb
rclb
dec
fsubrl
outsl
sbb
jbe
xchg
lods
mov
sub
lock
std
jns
push
sahf
lcall
xor
inc
dec
mov
or
icebp
test
sub
sti
mov
outsb
and
in
jecxz
xchg
sbb
cmc
push
add
xchg
movsb
roll
dec
push
cmc
jbe
dec
jbe
inc
and
add
xor
adc
decb
sbb
mov
flds
adc
divb
xchg
or
fdiv
add
test
xor
inc
inc
mov
icebp
cmp
lcall
add
inc
push
jns
adc
ljmp
into
es
and
roll
mov
loopne
test
filds
pop
icebp
clc
fnsave
xchg
adc
mov
fildl
and
xor
ds
repz
fidivrl
mov
inc
fistpl
mov
out
out
jmp
int3
dec
sbb
cmp
stos
jne
xor
rcrl
dec
aaa
outsl
movsl
out
sbb
adc
jl
inc
scas
loope
rcll
imul
dec
mov
jbe
aad
lock
das
push
sahf
adc
cltd
sbb
data16
or
adc
jge
add
jb
jl
test
mov
push
sub
lods
cmp
jle
call
cmp
jb
or
and
or
notl
push
adc
mov
mov
sbb
sbbl
inc
push
and
ljmp
add
fisttpll
gs
aad
xchg
inc
push
add
cld
gs
cli
inc
pop
movsb
jae
fnstsw
and
mov
pushf
mulb
aaa
ret
aaa
adc
lret
mov
imul
adcl
enter
insb
jbe
shl
mov
or
mov
mov
cwtl
cs
dec
ret
das
adc
mov
push
out
jae
imul
add
lods
les
add
js
xchg
or
repz
sbbl
and
je
mov
xchg
popf
pop
xchg
int3
cmp
inc
and
or
ret
hlt
out
pop
int
mov
xor
push
mov
fdivl
sbb
xchg
add
jae
scas
sub
ret
ja
or
out
xorl
jb
fbstp
inc
sbb
lret
xchg
popa
test
dec
ret
and
dec
insl
sbb
add
pop
or
ss
push
in
popf
and
add
mov
mov
mov
mov
push
dec
sarl
das
mov
fstl
inc
push
jg
mov
push
pop
jne
inc
imul
mov
cli
xlat
sbb
rcrl
jge
incl
insb
jne
shlb
mov
iret
mov
pop
push
push
mov
jg
pop
push
xor
lret
pop
and
negb
inc
push
xchg
lock
test
jb
mov
xor
inc
repz
sbb
push
hlt
loop
int3
daa
push
rclb
out
mov
loopne
push
and
cmpsl
push
movsl
mov
ret
lret
xor
xor
adc
sbb
dec
mov
ljmp
fldcw
shll
sub
cltd
loop
lock
cwtl
sub
add
fchs
jle
cmp
mov
pop
test
dec
insl
or
fstpt
cmp
clc
xchg
push
push
loopne
mov
cmc
push
outsl
testl
addr16
sbb
popf
int
arpl
aam
jge
cld
movsl
lret
and
std
push
ret
insb
pop
xor
jnp
fdivl
dec
orl
pop
test
sarl
sarb
lea
cltd
and
jbe
sub
insb
arpl
repnz
mov
inc
pusha
mov
jo
in
ret
and
push
mov
or
cmpsb
cmpsb
sarl
sbb
cmpsb
mov
std
decb
dec
ja
clc
std
mov
add
and
or
push
cmp
jg
leave
and
or
push
test
cmpsl
sbb
add
inc
mov
jle
lret
test
mov
psubusb
inc
mov
push
cwtl
scas
cmpsb
sub
jnp
sbb
inc
sub
mov
push
iret
sub
push
push
sbb
dec
popa
xor
iret
pushf
or
loop
rorl
loopne
stc
enter
popf
jge
jl
pop
ja
call
or
sub
outsb
fistps
mov
mov
push
arpl
add
xchg
or
inc
ret
adc
push
sbb
and
pop
clc
mov
into
sbbl
and
in
add
cmpsl
stos
add
pop
inc
push
dec
jo
ret
push
adc
pop
pop
mull
jge
xchg
jecxz
incb
xor
sbb
pop
jg
hlt
mov
scas
pop
xchg
out
mov
adc
movsl
or
mov
xchg
jecxz
cmp
imul
sbb
sub
cmp
fsubl
push
and
shll
loop
and
out
push
and
inc
xor
cmp
mov
dec
push
sbb
mov
das
pop
mov
pop
out
int
dec
push
jp
fld
sub
inc
cmp
in
aas
inc
or
dec
fistpll
repz
jmp
es
shr
sub
pusha
test
jne
ss
jle
sbb
mov
push
pop
bound
stc
movsb
add
int3
push
adc
push
lahf
jns,pt
adc
inc
insl
xchg
movsl
fisubs
pushf
pop
shll
dec
add
and
leave
mov
fldcw
in
sarb
iret
fmuls
sbb
pop
imul
xor
xor
dec
adc
xor
push
fiaddl
aaa
paddusw
ficomps
jns
dec
push
xlat
ror
or
lds
sub
dec
jnp
jp
sbb
and
dec
mov
repnz
lret
cmc
jecxz
out
and
mov
xor
inc
jle
repz
es
mov
fcomps
leave
cmp
sbb
mov
or
imul
xor
jbe
std
es
and
cmp
adc
in
push
mov
in
daa
jns
popf
xor
lahf
cmpsb
jne
movsl
xchg
push
jmp
rclb
mov
xor
push
mov
sub
mov
or
out
out
js
or
and
cmp
stos
mov
mov
jbe
imul
clc
cmp
lods
mov
mov
inc
data16
push
fdivs
ror
sbb
xlat
mov
push
test
push
repz
mov
enter
or
icebp
push
xor
cmpl
xor
ss
dec
mov
scas
ret
jl
xchg
push
mov
ja
mov
push
roll
add
cmp
sub
mov
pop
stos
cmp
mov
gs
add
ja
jecxz
cmpsb
inc
push
inc
rcl
por
fidivs
sub
inc
jmp
mov
jg
and
cmp
sahf
aam
sbb
bound
fdivrl
test
imul
sub
push
bound
in
adc
pop
inc
dec
or
pop
imul
push
pop
cmp
mov
mov
jae
adc
insb
mov
jns
xorl
sbb
jecxz
and
sbb
push
sub
cmp
scas
dec
push
jno
sbb
fnstcw
das
pop
add
push
xchg
sbb
cmc
or
push
mov
shrl
lahf
adc
ret
repz
jae
nop
mov
int3
sbb
push
das
je
dec
mov
mov
stos
fnsave
jnp
xor
fmull
mov
xor
rcl
scas
adc
cs
lcall
adc
insl
int3
testl
icebp
mov
cmp
repz
std
sub
jmp
xor
cmp
rcrl
jo
mov
xor
aaa
arpl
sub
mov
or
mov
flds
add
and
mov
iret
cmpsb
stos
aas
icebp
xor
sbb
in
xchg
aad
leave
shrb
fsts
pavgb
jmp
push
mov
popf
repnz
push
inc
add
imul
jae
xchg
in
sbb
or
es
dec
xor
fildll
repz
inc
cmp
test
enter
test
insb
sbb
sbb
sub
cmp
pop
outsl
and
inc
lods
add
or
loopne
test
pop
stos
scas
bound
out
xor
xor
roll
leave
adc
jae
js
mov
or
xor
out
push
and
dec
jp
cmp
dec
test
lret
repz
rol
cmp
cld
jmp
mov
dec
mov
mov
jno
loope
insl
lret
in
hlt
cmpsl
sbb
push
mov
fwait
jle
mov
and
lods
sub
cwtl
add
xchg
rclb
loopne
js
ja
shrl
cwtl
jne
stos
mov
adc
jo
and
ja
mov
mov
sar
shrb
jo
sbbb
rclb
inc
or
mov
shll
cmp
cld
lods
clc
repnz
lds
adc
mov
cmp
sub
out
popa
inc
xchg
rorl
stos
xchg
sbb
pop
stos
lock
pop
mov
jmp
xlat
mov
or
pop
add
std
out
fwait
pop
rcrl
push
dec
adc
sbb
dec
xchg
or
xchg
lods
mov
loopne
scas
sub
es
inc
ret
push
mov
inc
in
push
lahf
mov
mov
fs
aad
data16
inc
cld
adc
ljmp
imul
push
cmp
enter
aaa
scas
andb
mov
add
inc
or
gs
xor
push
int
pop
pushf
out
gs
icebp
hlt
jno
mov
mov
sub
out
add
into
jnp
mov
in
jns
lcall
sub
jns
mov
es
aas
mov
or
inc
into
stos
fwait
and
fildll
mov
jg
into
adc
fildl
pop
sbb
inc
data16
and
pop
sahf
mov
fsubs
pop
jge
jo
push
push
xchg
int
push
into
xchg
rolb
jae
xchg
xchg
enter
adc
insl
or
data16
push
jl
mov
fstpt
sub
test
xlat
fcmovnb
xor
popa
inc
xchg
inc
cltd
sub
cmp
or
sbb
dec
jg
cli
jecxz
loop
jge
lods
pop
xchg
lret
outsb
lea
sub
mov
sub
pop
scas
xor
stos
inc
divb
mov
cmpsb
jp
ljmp
lods
jmp
lods
xchg
push
icebp
fldt
mov
jne
push
scas
scas
rolb
ds
data16
or
and
add
jle
jle
jbe
dec
or
sub
adc
lods
lods
arpl
xchg
and
test
loop
jg
jp
mov
mov
xchg
xchg
pop
push
add
sub
adc
pop
aam
sbb
jecxz
popf
arpl
lret
mov
mov
mov
sbb
imul
outsl
push
sbb
sub
adc
sub
xor
daa
sti
sub
hlt
add
push
push
jmp
shrl
xor
movsb
xchg
scas
aad
jbe
adc
lock
addl
aam
das
test
js
int3
add
jb
add
scas
pusha
dec
jge
adc
xchg
popf
fldt
pop
cli
jp
aam
add
arpl
loopne
cmpb
dec
inc
pop
xchg
outsl
inc
mov
jbe
cmp
adc
jecxz
push
and
cltd
ja
mov
jb
xchg
mov
stc
mov
movsl
pop
paddusw
and
xchg
adc
es
dec
cmp
imul
fadds
out
out
loop
sbb
leave
adc
jno
push
sub
lcall
or
jbe
xchg
leave
push
xor
mov
into
mov
push
pop
lret
xor
xor
push
std
insl
mov
cmp
sub
js
rorb
adc
das
ljmp
inc
lds
out
aam
xchg
sti
mov
dec
cld
rcrb
push
sub
pop
mov
and
jo
jle
and
inc
sbb
cmp
pop
jnp
or
stos
fs
cltd
push
mov
mov
and
xchg
xor
xchg
test
add
stos
add
dec
lret
mov
cmpsb
sbb
sbb
xchg
pusha
fidivrl
and
fcmovne
and
add
shrb
gs
jbe
add
mov
cli
fs
add
mov
jbe
push
js
sarb
arpl
imul
sub
sti
fisubs
lods
push
mov
out
xlat
pop
or
sub
notl
adc
addl
out
cmp
pusha
sbb
outsb
push
ljmp
jmp
mov
js
rcl
std
insb
mov
into
mov
notl
lcall
dec
jne
xlat
inc
sar
jmp
push
mov
pop
fisubrs
ljmp
jecxz
mov
dec
lret
pop
mov
xchg
testb
jge
in
shll
popa
fistpll
cld
je
mov
push
in
pushf
cmpsl
lods
xor
fnstcw
pop
lods
xchg
loopne
adc
sbb
cmc
ret
movsl
xchg
je
cltd
pushf
dec
out
fdivrs
pop
outsb
mov
sbb
and
push
push
pop
xchg
icebp
int3
jns
ficoml
stos
pop
test
dec
loope
mov
sub
fldcw
push
push
aaa
aad
push
loope
cwtl
aas
lret
sub
jmp
mov
imul
dec
pop
mov
ret
inc
sub
imul
call
adc
adc
pop
mov
es
in
movsb
mov
mov
cltd
xor
cmp
add
int3
aas
cmp
mov
push
cmp
cwtl
leave
mov
enter
xor
outsl
lahf
outsl
xchg
xchg
jmp
mov
rcr
cmp
pop
je
jne
movsb
int3
jno
bound
mov
into
ja
sub
movsl
adc
xor
jae
into
sub
jno
mov
aad
nop
out
lret
fisttpll
bound
insl
mov
jle
adc
jge
add
add
data16
rorl
ret
and
or
dec
push
in
and
or
xor
es
roll
cli
je
pop
ret
xor
orl
sbb
or
pop
xor
js
sarb
popf
jne
jmp
push
pop
xor
or
pop
mov
ljmp
imul
in
push
adc
lahf
test
adc
lret
push
mov
dec
js
lea
cmp
xchg
cwtl
dec
and
sub
mov
xor
in
push
or
aas
in
pusha
xchg
call
jle
nop
lods
cmp
dec
mov
bound
pop
cmp
mov
ret
nop
popa
loope
cs
inc
dec
push
dec
xchg
jbe
loope
aad
mov
aas
xor
int3
outsb
mov
and
das
push
or
push
test
notl
sbbl
inc
mov
call
popf
push
add
out
xor
mov
or
xchg
mov
test
popf
call
sbb
lea
test
dec
cmp
ss
enter
enter
adcb
lods
jg
xchg
insl
rorl
imul
ficoms
xor
cmpsb
fdivs
cwtl
and
test
out
and
jmp
fneni(8087
jge
cmc
mov
sbb
insb
sbb
loop
push
sub
fstpl
jge
add
or
push
pop
pop
mov
push
mov
je
jmp
ret
mov
cmp
jae
dec
stc
adc
mov
flds
mov
push
icebp
pop
in
sar
sahf
cmpsl
jo
popf
sti
ret
ljmp
jl
jo
stc
jnp
cmp
or
into
stos
xchg
bound
push
mov
inc
xor
sbb
push
push
call
int3
imul
jne
mov
out
shll
jmp
jb
inc
in
lds
out
repnz
xchg
mov
cmp
and
shrb
dec
and
mov
cltd
xor
dec
ficomps
lock
insl
and
pop
dec
les
or
inc
lar
and
add
fstpt
sub
pop
mov
int3
jnp
stos
or
pop
int3
pop
mov
dec
sahf
cs
xchg
and
aas
jecxz
loopne
lock
cs
dec
test
jge
mov
push
pop
fisttps
sbb
pop
jmp
mov
fidivrl
fucom
pop
mov
cmp
sbb
mov
mov
or
xchg
adc
xor
fstl
fcompl
int3
pop
xchg
out
sahf
dec
sub
pop
sub
gs
lahf
in
cmc
xchg
dec
das
aas
mov
pop
in
mov
mov
ja
cmp
rcrb
lahf
test
cmp
add
add
dec
std
jno
scas
lcall
adc
and
inc
push
stc
inc
sub
mov
xchg
je
jle
dec
loop
popf
and
das
repz
dec
mov
xchg
xlat
iret
xchg
in
test
cs
or
sbbb
mov
xor
jl
mov
test
aad
push
adc
test
mov
into
std
out
loop
testb
div
outsl
sbb
push
movsb
push
dec
push
mov
add
xor
mov
sub
bound
sbb
add
add
mov
cmp
sub
inc
adc
pushf
mov
cmc
js
jo
fstpt
jb
inc
fnstenv
ja
notl
push
loope
adc
sbb
je
movb
stos
cmpsb
jge
inc
sub
mov
pop
rcr
xor
push
cmp
pop
ds
pop
mov
rorl
sub
out
adc
xchg
adcb
cmp
ret
imull
test
movsb
mov
add
push
xchg
sahf
je
insl
jb
pusha
jge
sahf
cmc
jle
hlt
into
aad
and
mov
mov
cmp
mov
cltd
push
pop
sub
ljmp
stc
ds
sbb
and
mov
nop
arpl
mov
xor
out
rcll
dec
and
cmp
je
sub
daa
mov
outsl
jle
rorl
fiadds
aas
and
mov
andb
mov
push
sti
int3
daa
xchg
or
mov
cltd
xchg
ret
pop
testl
pop
push
adc
lods
mov
addr16
xor
iret
int3
jg
mov
addl
push
clc
scas
andl
inc
mov
jmp
bound
dec
test
fstl
cmp
jbe
pop
sbb
cmp
out
mov
mov
mov
icebp
scas
jle
stc
mov
xor
sbb
jno
mov
sub
lahf
add
sbb
std
test
mov
jmp
xchg
inc
ljmp
andl
inc
fdivs
adc
pop
loopne
int
shr
jg
jecxz
lret
jl
mov
cmp
cld
mov
jns
idiv
adc
mov
cmc
mov
lds
inc
aas
jmp
frstor
filds
sub
lock
xchg
xchg
and
je
xchg
loope
and
lahf
in
lock
inc
pop
test
rcrb
xchg
mov
lcall
cmp
sub
or
arpl
imul
test
nop
aaa
push
cmc
or
cmp
pusha
icebp
mov
in
add
aam
or
mov
jmp
mov
jno
frstor
xchg
mov
rclb
in
push
mov
or
or
dec
imul
mov
scas
dec
jno
data16
push
dec
notl
loope
push
outsb
out
insl
int3
push
mulb
int3
sub
pop
lds
cs
mov
filds
mov
push
jl
push
adc
fs
rcrl
mov
addr16
scas
in
aas
das
int
inc
lret
xchg
addl
cli
mov
enter
mov
push
xchg
inc
movb
jmp
arpl
pop
or
pop
ror
subb
or
pop
mov
jne
xlat
push
xchg
leave
in
sbb
xor
jecxz
and
push
mov
jge
xor
pop
xor
jbe
inc
cmp
pop
nop
rcrb
and
push
gs
push
test
cmp
roll
loope
ret
mov
adc
in
imul
loope
sub
xchg
sbb
pop
dec
xor
stos
test
leave
popf
push
dec
inc
iret
in
xor
sub
pop
dec
pop
push
mov
cmp
sbb
inc
jg
shll
popf
mov
xchg
dec
mov
hlt
insl
dec
jne
fstps
dec
ret
add
rcrb
cmp
pop
cmp
mov
sbb
adc
mov
lret
jp
in
pop
out
inc
adc
imul
cmp
mov
inc
cmp
inc
sub
mov
pop
adcl
xchg
out
xchg
push
pusha
fnstsw
pusha
adc
push
xor
outsb
and
sbb
xor
jge
es
inc
inc
mov
sub
mov
aad
test
mov
mov
xchg
data16
loopne
mov
pop
inc
xchg
loopne
rcrl
pop
push
inc
lahf
shll
bnd
push
lahf
xor
jns
mov
mov
cwtl
add
clc
xor
ds
scas
jmp
in
popf
push
jnp
fs
fildll
divb
mov
aaa
lock
push
lods
out
rcrl
sub
mov
dec
sub
out
mov
notl
loope
mov
jb
xor
loopne
ret
loopne
pop
rorl
test
stos
dec
dec
cmp
xor
insb
mov
lcall
jmp
jl
xchg
inc
push
mov
pop
cltd
fildl
and
adc
add
cmp
ret
das
dec
xor
mov
cmp
pop
mov
pop
push
jae
mov
pop
mov
fwait
cmp
dec
enter
mov
add
in
fs
xchg
dec
push
mov
insl
adc
popa
xorl
sti
out
ss
inc
mov
mov
xchg
pop
out
push
jp
mov
in
sbb
dec
xchg
or
pusha
movsb
in
fldl
je
xchg
push
ja
shlb
jl
xchg
jmp
mov
js
cmp
xor
lock
cmpl
mov
pusha
push
fildll
pop
pop
cmc
fldl
ljmp
popa
loopne
cmp
addr16
push
pop
sub
xchg
psrlq
pop
lahf
cmp
scas
jb
arpl
or
and
cmp
xor
outsb
popf
pop
lahf
sbb
adc
cmp
jge
cmpb
jnp
lret
insb
adcl
sbb
or
xchg
or
mov
fnstsw
test
sub
shrl
fmul
push
xlat
jne
adc
idivb
pop
dec
fdivl
repz
fs
xorl
sbb
push
xchg
pushf
cmp
jno
xlat
inc
pop
push
popa
pop
hlt
or
lods
xor
pusha
push
pop
inc
sub
sub
andb
push
pop
cltd
dec
pusha
add
stos
icebp
test
adc
inc
mull
icebp
push
test
inc
and
js
sti
loopne
adc
mov
clc
push
pop
sbb
adc
xchg
sub
jmp
lods
xor
mov
les
or
test
vpaddsb
sub
and
rolb
out
ss
jae
addb
fwait
adc
xor
lods
jecxz
pop
dec
shlb
add
mov
adc
shrb
jo
dec
pop
push
lods
xor
dec
in
mov
sbb
mov
lahf
pop
movaps
lcall
aam
jg
out
jo
inc
cwtl
popa
jb
int
pusha
clc
jnp
cs
mov
xor
data16
cmpl
push
adc
sbb
mov
sub
jge
testl
inc
sub
ret
seta
in
pop
int3
test
aad
mov
outsb
rcll
sahf
mov
sub
sbb
push
ret
sbb
push
dec
mov
adc
je
add
dec
jg
loop
dec
jne
xchg
push
mov
mov
cs
gs
lods
stos
rcrb
scas
sti
mov
sbb
jns
cmc
fimull
mov
stc
ss
pop
cmc
and
push
loopne
sbb
popa
leave
in
test
hlt
pop
sti
pop
jp
dec
cmp
cs
das
inc
xchg
dec
test
and
inc
stos
icebp
mov
pop
sub
fnstsw
insl
jo
inc
outsb
mov
int
pmulhuw
jno
pop
lock
inc
add
mov
mov
imul
je
pop
push
mov
xlat
push
inc
cmp
push
pop
movsl
into
shll
xor
dec
inc
xchg
push
adc
push
sbb
sub
mov
xchg
add
xchg
test
push
fcomp
dec
inc
aaa
ja
lret
out
mov
jmp
lret
xchg
mov
push
stc
outsb
push
dec
push
mov
sub
addb
cld
popa
out
sub
dec
mov
xor
sbb
pop
sbb
push
fstpl
shrb
fldenv
or
ficompl
fnstcw
xchg
lods
out
pop
push
popa
sti
in
push
stos
cmp
jecxz
mov
jne
addr16
dec
push
and
mov
stc
repnz
lds
push
pop
in
add
sbb
xchg
adc
push
adc
es
inc
ror
mov
cmp
inc
cmp
seta
cmpsl
fldt
les
pop
insl
push
js
xchg
das
repnz
push
int
sahf
xor
inc
call
sub
test
pop
xor
dec
add
outsl
daa
sti
sbb
jnp
lods
shrl
ja
movsb
xchg
mov
loope
mov
iret
dec
jcxz
stos
lret
mov
sub
aaa
mov
mov
mov
cmp
shl
add
enter
xchg
fmuls
mov
fnsave
and
lock
andl
xchg
dec
and
push
xor
fstl
push
inc
mov
mov
cmp
int
or
dec
mov
jecxz
xor
add
pusha
mov
push
cmp
imul
inc
adc
ss
hlt
in
push
scas
subb
sub
je
testb
scas
in
cld
out
jecxz
or
pop
adc
shlb
ret
mov
and
mov
dec
jge
mov
cld
adc
or
subl
jecxz
test
sbb
push
dec
shlb
pop
mov
push
pop
pop
rcl
sbb
mov
xor
sub
mov
leave
mov
mov
push
sbb
scas
out
in
out
in
dec
mov
push
dec
cs
mov
test
nop
scas
lcall
jmp
cwtl
ja
test
push
pop
mov
ljmp
sbb
out
push
test
aaa
adc
xor
mov
insl
notl
inc
mov
insb
or
fistl
aas
add
faddl
aaa
int3
jns
in
ret
inc
je
js
mov
sbb
adc
inc
fs
subb
xor
daa
mov
sub
js
gs
shl
fdivl
mul
nop
dec
add
aas
add
int
dec
adc
and
push
scas
mov
cmp
pop
xor
dec
sub
loope
enter
sbb
mov
mov
mov
jne
add
clc
stos
pushf
mov
mov
xchg
dec
sub
inc
pusha
mov
sub
cli
mov
pop
bound
xchg
sbb
cmp
and
xchg
pop
pusha
sbb
adc
inc
push
mov
jno
movsl
scas
aas
icebp
mov
lret
sahf
inc
dec
push
hlt
aas
cltd
in
inc
sub
addr16
aas
inc
arpl
mov
aaa
stos
movsl
jnp
sub
mul
inc
stc
sub
push
mov
popa
daa
add
rcrw
fwait
pusha
test
mov
xor
sarb
popa
pop
pop
js
mov
shll
das
pushf
imul
push
cmpl
rcr
iret
dec
ss
jo
fucom
xor
jl
or
js
insb
mov
xor
jmp
and
xchg
lret
inc
leave
sbb
jmp
sbb
add
aam
aas
jl
xchg
inc
cmp
popl
aad
pop
fcomps
push
shlb
mov
and
ja
ss
gs
sub
repnz
jmp
daa
std
lcall
imul
push
sub
faddl
nop
outsl
xchg
aam
add
mov
push
sub
repz
mov
in
jp
jl
inc
lcall
mov
sub
sbb
or
and
subl
gs
out
mov
sbb
in
fldl
and
outsb
mov
rol
clc
lods
xchg
mov
in
shlb
fs
nop
and
push
sub
mov
sti
add
cmpsb
adc
sub
dec
xor
inc
sbb
dec
ss
insb
lock
sbbl
lret
dec
jo
pop
sub
out
mulb
dec
lods
addl
in
add
inc
stos
lods
xor
mov
aas
add
add
call
cmp
stos
insb
push
inc
sub
out
sub
lcall
std
fcmovnbe
sbb
jl
ds
das
jnp
dec
push
dec
and
fs
jge
dec
xchg
adc
mov
mov
lcall
push
xor
pop
negb
shll
es
test
sub
cmpb
loop
mov
add
dec
add
push
loopne
xchg
lds
stos
clc
xor
stos
inc
push
clc
sbb
lods
or
and
int3
bound
sbb
dec
jle
les
jb
fsub
outsb
mov
mov
dec
out
dec
jnp
mov
xchg
fisttps
add
jge
sbb
outsb
add
push
inc
xorl
sub
xor
cwtl
jne
addr16
movb
lahf
cld
shlb
adc
pop
mov
das
mov
out
pop
inc
adc
inc
xchg
ret
add
icebp
insb
cltd
out
jmp
cmp
icebp
push
push
popa
and
rorl
je
das
cs
and
jecxz
fcmove
sub
fisubl
out
hlt
or
mov
inc
daa
xchg
fbld
jl
mov
scas
lret
or
mov
shlb
dec
stc
xchg
mov
xchg
mov
sub
jae
out
mov
cmp
or
les
subb
jp
pop
or
jle
or
xchg
mov
jmp
mov
cmc
sub
ret
test
mov
or
je
mov
inc
cmp
push
aas
mov
xchg
leave
pusha
push
dec
scas
je
push
mov
push
fldl
xchg
insb
sbb
xchg
add
orl
lahf
sub
aad
push
xchg
jecxz
cmp
adc
lcall
jmp
mov
sub
jge
gs
push
mov
adc
daa
pop
std
inc
leave
and
and
mov
jecxz
dec
mov
jae
jnp
dec
adc
push
gs
fistl
push
repz
test
and
in
cmp
inc
lds
std
aas
stc
in
ljmp
repnz
mov
rep
leave
fmulp
sub
pop
jge
xor
clc
andb
adc
xchg
and
sub
test
cmpsl
or
std
je
arpl
fidivrs
push
sbb
out
repz
xchg
inc
repnz
or
movsb
call
xchg
gs
and
aad
stc
inc
fisttpl
mov
popa
imul
sub
popf
mov
and
in
push
xor
cmp
sub
lret
repz
sub
xor
pop
aas
xchg
punpcklbw
xchg
and
lahf
and
int
xchg
jle
ficoml
daa
outsb
divb
addr16
orl
dec
and
aam
out
loope
inc
xchg
out
lret
dec
enter
dec
mov
nop
rorb
fnsave
xchg
pop
or
repnz
adc
dec
call
ljmp
xchg
jmp
fisubrs
ds
fcomps
insl
cmp
mov
push
movsl
rorl
mov
lcall
dec
test
nopl
dec
dec
adc
push
stos
and
jnp
popf
int3
popa
pop
cmp
out
mov
mov
push
jno
push
mov
lcall
jle
push
add
push
jo
imul
ss
lds
fiaddl
sbb
dec
mov
sbb
shrb
xchg
cmp
fidivrl
push
mov
xor
pop
outsb
sub
call
mov
sti
cmp
test
leave
inc
ret
inc
dec
cld
push
pop
push
push
in
lret
jnp
pop
ds
addr16
jmp
cmp
fnstsw
movsb
addl
icebp
mov
inc
mov
xchg
adc
jns
cli
xchg
jb
xchg
jle
test
shrb
stos
hlt
rcl
and
mov
imul
aaa
xchg
sbb
pop
clc
ror
adc
fs
loope
mov
outsb
jbe
pop
xor
lds
inc
pop
int3
mov
and
ds
xchg
aaa
ret
or
or
jbe
sbb
cmpsl
push
test
mov
psrld
cmpsb
lret
rcll
or
shr
iret
jbe
push
in
ljmp
cmp
enter
mov
dec
call
ret
fistpll
hlt
popf
cmp
out
ljmp
aad
jmp
movsl
sub
fldenv
cmpsl
add
sbb
repz
test
pusha
out
dec
sbb
push
mov
or
add
xor
cwtl
lret
cmp
sbb
xchg
sub
addr16
xchg
xor
lcall
add
inc
repnz
push
aam
mov
dec
cmpsl
aas
add
hlt
pop
test
mov
in
xchg
push
movsb
mov
sub
push
movsb
pop
hlt
mov
and
pop
adc
lods
int3
adc
into
lret
test
jle
dec
ret
inc
sub
cltd
shrb
xchg
add
mov
rol
mov
adc
xor
data16
or
cmpsb
push
mov
icebp
mov
addl
dec
push
jecxz
mov
ret
xchg
xor
xchg
add
shlb
mov
jo
or
adcl
les
xchg
mov
sub
xchg
cmpsb
gs
lock
arpl
xor
mov
or
imul
and
stos
jo
mov
lods
movsb
in
mov
jg
incb
ds
test
xchg
sbb
jbe
imul
enter
cmc
or
scas
orb
out
decb
in
xorl
aaa
xchg
mov
scas
or
mov
cmp
inc
jbe
je
push
scas
nop
mov
fistps
inc
shl
inc
in
mov
fcomi
adc
inc
inc
sub
or
popa
sub
xor
std
outsl
fisttps
inc
mov
dec
mov
repz
jle
outsb
mov
subl
mov
jg
lahf
mov
sbb
int3
adc
jno
stc
adc
jb
cmpsb
iret
ljmp
movsl
ja
push
mov
jns
cmp
insl
outsl
enter
aam
sarl
push
aam
divl
imulb
adc
sub
inc
cmp
aad
je
aam
shr
push
sbb
push
or
mov
mov
cltd
add
mov
xor
push
outsl
lods
outsb
nop
and
loope
xchg
int3
xchg
in
clc
loope
adc
push
lcall
shlb
int
andb
jbe
push
pop
js
push
sub
jle
mul
adc
jmp
aam
jne
xchg
mov
lcall
fstpt
mov
sub
pushf
aad
push
push
sahf
sub
repnz
push
pop
mov
cmpb
aad
mov
je
inc
push
cmp
dec
jecxz
pushf
add
rcll
clc
mov
test
ljmp
iret
das
inc
jne
aam
cwtl
mov
faddl
dec
cmp
cmp
jmp
mov
enter
dec
mov
loope
iretw
orb
arpl
pop
mov
arpl
es
xchg
shl
pop
add
jns
enter
mov
movntps
mov
adc
nop
xor
push
dec
js
lea
test
dec
dec
daa
mov
aas
mov
push
mov
pop
jl
pop
enter
mov
mov
and
jle
adc
mov
roll
push
add
sti
orb
mov
in
sub
inc
icebp
lods
xchg
or
fldt
push
lds
loop
dec
cs
jecxz
adc
mov
mov
xchg
inc
adc
pop
aas
jno
mov
fwait
add
cmp
mov
push
xor
or
adc
adc
pop
aaa
sbb
xor
inc
and
out
xor
or
cli
addr16
add
std
js
add
cmp
in
adc
pop
sbb
int
add
popf
cmp
adc
fistl
mov
pop
jno
push
repnz
aas
mov
popf
add
icebp
divl
lods
dec
loopne
cld
test
sbb
mov
in
in
icebp
icebp
xchg
sbb
mov
pusha
mov
mov
idivl
mov
rcrb
and
mov
jp
jns
pusha
in
ret
mov
cmp
push
cld
pop
push
mov
fs
iret
loop
xchg
pop
dec
sub
mov
movl
stos
push
rorb
jecxz
shlb
push
jb
loopne
out
test
and
or
or
sbb
daa
add
iret
lret
jno
test
xor
dec
int
inc
and
xlat
ljmp
inc
mov
cs
adc
xchg
stos
pop
pop
cmp
sbb
filds
sub
pop
adc
pop
out
mov
push
mov
add
sub
adc
cmpsb
fstpt
sub
sahf
pop
jb
fisubrl
jne
rorb
movsb
jno
ret
test
pop
cmp
test
cmpsb
into
mov
mov
sbb
sbb
push
call
lods
inc
andl
or
cmpl
leave
fstl
jge
push
or
lcall
jb
and
out
sub
and
jb
or
add
ljmp
scas
sub
push
sub
adc
movsl
ss
mov
out
jp
mov
xchg
add
inc
mov
add
xchg
mov
cmp
repnz
es
inc
cli
popf
add
adc
cmp
pop
xor
sbb
arpl
jle
push
repz
cs
mov
mov
lret
fldcw
pop
xchg
cwtl
mov
add
roll
sub
xchg
inc
mov
push
sbb
sarb
iret
mov
adc
lcall
inc
mov
loope
fisubrl
or
iret
push
sbb
mov
xlat
enter
mov
mov
cmpsl
xchg
je
lea
xchg
pop
sbb
mov
and
shr
cmp
or
adc
push
aam
lahf
xor
fwait
clc
and
ret
mov
and
xor
call
stc
lcall
mov
cli
mov
hlt
cmp
xor
clc
cltd
jmp
mov
sbb
sub
lret
jo
sub
jb
jb
sarl
cmp
test
jg
pop
data16
dec
arpl
jno
adc
fisttpll
cwtl
cmpsl
mov
mov
loopne
inc
xor
jno
push
xor
push
pop
pushf
xor
add
dec
push
arpl
cmpl
out
or
mov
xor
iret
js
cmpb
adc
ficoms
dec
inc
loop
mov
mov
into
jg
mov
cli
faddp
jg
negl
cltd
aam
push
push
sub
mov
inc
sub
add
xchg
les
add
mov
dec
inc
xchg
mov
ds
std
shrb
fidivs
pop
xchg
arpl
xchg
loope
and
mov
cli
mov
jmp
ret
rcr
jp
inc
or
gs
insl
fsubl
push
addb
out
sub
inc
dec
cli
mov
sub
jmp
pop
cs
mov
hlt
enter
sub
movsl
lret
stc
pop
xor
arpl
mov
popa
call
pop
cmc
or
or
in
dec
adcb
popa
mov
movsb
inc
xchg
psubsw
cmc
pop
push
fadd
icebp
pop
cmp
aas
push
jns
mov
loope
leave
mov
jg
cmpb
pop
xchg
outsb
movzwl
lahf
ja
cs
and
test
iret
jecxz
push
xor
sub
or
xlat
fimull
loopne
shlb
fimuls
mov
inc
jp
lret
add
fdivl
movl
xchg
lahf
cmp
int
sub
sbb
jo
mov
dec
mov
xlat
xor
scas
sub
insb
pop
or
lock
insl
and
repz
divl
push
aam
popa
je
sahf
xchg
jle
push
push
int3
sbb
sbb
sub
mov
fldenv
es
xor
lret
aad
inc
in
stos
movsl
xlat
xchg
mov
insb
out
sbb
test
sbb
dec
icebp
sub
inc
lcall
push
shrb
jae
jle
push
xchg
mov
imul
xor
mov
fwait
add
add
add
add
push
xor
sub
nop
push
je
sub
icebp
fnstcw
add
xchg
pop
xchg
adc
outsb
aam
mov
pop
fcompl
in
das
bound
es
hlt
mov
inc
rclb
ja
stc
daa
fstpt
addr16
mov
pop
cmp
mov
cmp
dec
lcall
scas
decl
pop
sbb
and
js
scas
xor
mov
stc
jo
dec
mov
xchg
mov
inc
mov
popa
xchg
movsb
popa
xorb
sub
js
adc
pop
out
jmp
nop
cld
adc
mov
sbbb
inc
pop
stos
sbb
add
into
aam
icebp
movsb
pop
push
push
jp
pop
cmp
mov
pusha
dec
sti
add
jae
mov
mov
fistps
push
nop
sahf
in
add
test
std
mov
dec
stc
push
xor
adc
adc
pop
push
sarb
ret
scas
gs
xchg
mov
sbb
mov
push
repnz
cmp
mov
outsb
popf
les
mov
cmp
mov
out
cmp
push
int
shufps
dec
loope
xlat
pop
aas
xor
ds
sub
cwtl
dec
push
stos
jno
mov
dec
out
jl
cmp
test
jge
inc
in
mov
out
sbb
xor
test
in
jge
rcll
out
addr16
add
add
pop
filds
dec
mov
lret
xchg
ret
pop
test
xor
stos
fsubs
xor
int3
jecxz
xchg
xor
aaa
mov
scas
mov
adc
test
out
pop
ljmp
xchg
jg
repz
inc
xor
pop
leave
mov
jecxz
in
ret
mov
sti
in
fcompl
pop
or
jo
adc
add
push
mov
sbb
and
ss
mov
cmp
ret
cwtl
jns
movsb
nop
mov
push
sbb
pop
inc
aad
inc
xorb
and
push
push
sti
add
nop
xor
mov
or
test
das
inc
stos
sbb
inc
outsl
dec
jns
lret
pop
sub
mul
cs
cmp
pop
and
jge
aad
add
push
or
dec
ljmp
test
out
or
mov
in
mov
imull
ret
sub
inc
aaa
lret
sub
inc
push
ss
adc
push
mov
pop
xchg
scas
lds
xchg
xchg
popf
inc
out
adcb
dec
jb
push
pusha
nop
mov
stc
xor
add
mov
or
and
lea
ljmp
or
fstl
jne
mov
psubsw
out
shl
bound
push
sti
sub
inc
loopne
pop
imul
mov
adc
testb
lock
mov
lahf
pop
sub
push
in
loope
push
fildl
std
sbb
xorl
xchg
mov
push
iret
out
jge
sbb
sarb
in
or
clc
test
fwait
loope
test
dec
lret
js
fildll
shl
jle
and
xlat
mov
xchg
sbb
cmp
xor
xchg
xor
fldl
xchg
push
mov
loopne
fwait
or
mov
lcall
aaa
inc
and
sub
xor
std
sarl
jl
inc
push
lods
stos
lds
in
cmpsl
push
adc
je
and
mov
adcb
adc
imul
cmpl
jno
aas
cmpsl
ret
pop
pop
cwtl
sbb
fcoml
cwtl
test
pop
dec
ror
mov
push
xchg
mov
sbb
lret
popf
push
adc
xchg
mov
and
rclb
stos
in
pop
std
loopne
lods
ljmp
shlb
lahf
cmpsb
insb
lods
stos
xor
fildll
adc
push
and
loope
ficomps
pop
popf
ret
sti
jnp
fistl
movsb
sub
mov
ds
loope
cmp
dec
in
sysenter
fisubl
cmp
mov
fsubrs
mov
pop
out
loop
xorl
dec
sub
xor
sbb
fdivl
push
sub
notl
jg
push
icebp
or
in
xchg
sbb
mov
jecxz
cld
push
push
mov
inc
xor
cmpsl
cwtl
mov
fdivl
jns
mov
js
test
cmpsb
pop
hlt
xchg
sbb
adc
or
in
lret
std
add
ds
dec
or
scas
pop
lahf
mov
mov
mov
iret
lock
jmp
and
pop
in
popa
andb
inc
clc
push
clc
int
repnz
out
xchg
mov
xor
bound
repnz
mov
inc
adc
and
stos
pop
jecxz
mov
movsl
ror
insl
mov
fwait
cld
xchg
push
lahf
daa
mov
shrl
fnstsw
add
jmp
xchg
rorb
xor
test
push
adc
sbb
push
xchg
ds
sub
dec
and
pop
xor
ss
in
out
push
xor
les
cmpsl
adc
xorb
in
cmp
std
test
add
ffreep
leave
mov
or
jg
xor
movsb
push
frstor
push
inc
push
dec
movsb
mov
int
xchg
test
sbb
jnp
bound
dec
push
inc
mov
mov
xchg
fwait
call
out
lcall
scas
sbb
cmc
jae
adcl
pop
shr
pop
ficoml
jae
adc
fwait
inc
sbb
sub
push
leave
mov
or
in
xchg
aas
cmpsb
mov
pop
scas
adcl
aad
jge
sti
ss
jns
and
loop
cmp
out
mov
push
mov
mov
xchg
in
gs
outsl
mov
and
xchg
ss
xchg
bound
jmp
mov
mov
shl
aaa
xchg
imul
sub
mov
je
sub
add
rcr
inc
xchg
outsb
in
lock
cmpsb
mov
cmp
sbb
in
daa
cmpb
mov
aad
jge
mov
xor
je
pop
les
push
jno
cmpsb
int3
mov
int
cmpsb
adc
xchg
sbb
cmpl
es
adc
cmp
mov
mov
push
test
out
mov
scas
cmp
dec
xchg
mov
add
aaa
mov
jmp
pop
jno
mov
xor
cmp
sahf
inc
xor
inc
push
rcl
jmp
inc
push
inc
dec
or
and
inc
test
jg
xor
jle
jne
out
xchg
push
ret
push
xchg
test
fimull
jne
jp
ds
je
xor
cmpsl
js
pop
jmp
mov
or
fdivrl
cmp
bound
lret
stos
pop
and
jg
dec
add
cmp
fs
mov
ljmp
jp
jmp
push
popf
clc
lcall
addr16
mov
ljmp
mov
sbb
or
or
test
fisttps
imul
sbb
ja
ror
fisttpl
jg
pusha
inc
sbb
mov
xchg
fnstsw
loop
push
imul
mov
push
mov
pushf
sub
mov
test
lcall
jnp
addr16
adc
stc
or
sahf
cltd
ror
into
enter
xor
or
cmpsb
inc
pop
lret
cmp
mov
inc
dec
jge
imul
movl
ret
dec
cmpsl
jecxz
jo
ficoml
sub
mov
sbb
xorl
sub
sbb
ds
push
sbb
xor
push
adc
stc
jle
push
mov
fisttpl
call
push
in
xchg
ljmp
popf
xor
jl
jne
jnp
fisubl
jmp
es
inc
popf
jbe
pusha
dec
mov
in
inc
xchg
add
subl
jbe
push
xchg
mov
jl
outsl
or
popa
mov
test
fstp
test
sbb
cmpsb
imul
adc
jmp
push
in
int
adc
stos
fidivrl
or
jno
push
ret
adc
int3
lretw
mov
inc
aam
loop
mov
mov
arpl
je
les
mov
and
cld
jecxz
popf
add
jp
dec
mov
mov
dec
leave
pop
push
mov
enter
mov
js
sub
and
das
cmp
dec
jnp
je
stos
ret
or
inc
sub
adc
es
jecxz
sbb
add
inc
cmp
out
inc
arpl
insb
adc
es
subl
decb
push
cmpsl
sbb
outsl
les
sub
add
movsl
mov
dec
rorb
test
call
push
in
mov
mov
and
mov
or
ds
xlat
fists
pop
fistpll
dec
mov
jno
cmc
cli
adc
mov
rcl
mov
sbb
xchg
mov
jno
xlat
or
pusha
test
fnstcw
jns
lods
addl
jae
sub
mov
test
ja
insb
mov
or
and
cs
and
stc
fwait
aaa
pop
mov
push
fucomp
jns
jmp
fmul
inc
in
into
xlat
idiv
or
jb
xor
mov
aam
sub
sub
dec
lock
addr16
imul
sti
pop
mov
bound
lock
push
adc
mov
jnp
jmp
jno
jg
out
sbb
add
xor
xchg
out
dec
adc
lahf
xchg
push
enter
cwtl
mov
in
push
frstor
cmp
push
idiv
lret
lea
enter
or
ds
in
push
adc
pop
xchg
xchg
in
mov
scas
dec
and
or
cmpsl
in
ret
pop
lea
pop
jae
call
jno
sbb
je
inc
add
push
sub
into
mov
or
pop
mov
mov
push
xchg
pusha
stos
dec
push
xor
sbb
in
in
inc
push
dec
int3
lret
sbb
pop
testl
in
mov
imul
mov
lock
push
mov
cmc
or
inc
je
push
cwtl
int3
neg
and
fldt
jnp
imul
out
enter
psubusb
or
mov
xor
sbb
jae
cmp
iret
jmp
push
xchg
imul
in
dec
xor
sub
inc
call
jnp
jl
in
mov
hlt
jg
mov
push
or
test
lds
cmp
inc
je
ds
sbb
sub
add
fwait
cmp
ret
std
sbb
xchg
dec
jecxz
xchg
push
jmp
jb
cltd
pop
lock
push
mov
imul
subb
ja
add
repnz
add
dec
push
cmp
popf
loop
adc
add
cmpsb
adc
sti
push
jecxz
pop
icebp
fbld
das
dec
cwtl
mulb
test
cmp
and
sbb
inc
dec
sbb
scas
scas
xchg
loop
jb
xor
or
xchg
cmc
sahf
push
pop
aaa
sahf
je
xchg
mov
mov
stos
loopne
jbe
mov
mov
aam
jle
mov
cmc
adc
iret
pop
das
lds
inc
movsl
pop
adc
nop
pop
xor
or
mov
inc
xchg
out
sbb
out
inc
enter
pushf
or
fldt
xchg
cmp
push
mov
dec
or
rclb
ja
lahf
lret
mov
std
jmp
pop
lock
push
or
ljmp
adc
sub
inc
sub
jb
je
rolb
add
mov
inc
add
inc
movl
jl
mov
sub
hlt
inc
mov
pop
mov
push
jge
sub
adc
lods
sub
loopne
or
mov
scas
loope
dec
lret
leave
je
and
push
cmp
gs
mov
push
out
mov
fwait
mov
mov
cmp
call
xchg
sbbl
scas
ss
ljmp
dec
ret
push
jge
dec
jo
leavew
fcomps
jp
jmp
xlat
pop
out
subb
int3
insb
pop
and
cmp
jp
lret
jne
in
jecxz
jge
je
xor
dec
push
nop
int
mov
jecxz
faddl
jno
push
add
lahf
xchg
lcall
push
jno
cmp
jo
cmp
lret
mov
jo
enter
les
fwait
push
into
dec
fs
add
xchg
pop
or
jmp
shll
fdivl
lock
lret
cmp
cmp
adc
mov
sub
pushf
mov
imul
mov
jnp
push
pop
arpl
pushf
mov
sarl
pop
cmp
jge
inc
mov
add
mov
inc
and
popf
int3
jb
ret
lea
adc
in
dec
test
dec
add
sub
mov
insl
das
lret
leave
cmpl
push
rorb
adc
cwtl
pop
mov
fwait
push
sub
mov
jns
roll
cmc
adc
jmp
das
or
adc
lods
pop
mov
scas
jns
shll
dec
mov
xor
fcoms
or
jp
sub
push
cmp
jl
fisttpll
test
test
jp
ljmp
mov
bnd
insl
mov
inc
bound
mov
mulb
xchg
jns
int
mov
popa
call
test
add
dec
cmp
and
fnsave
xchg
loope
mov
lret
fmull
jns
loope
movsb
rol
dec
jnp
pop
icebp
and
scas
sbb
mov
fists
xor
mov
clc
in
xchg
out
fcoms
mulb
adc
loopne
push
popa
cltd
outsl
jne
iret
sti
arpl
cmp
fs
lret
mov
push
test
out
xor
push
mov
test
lret
push
setns
lods
ret
pop
fidivl
int
inc
inc
test
int
pop
xchg
add
mov
out
mov
xor
pop
pop
imul
imul
pushf
cmp
dec
cmp
pop
shll
mov
loope
pop
aam
into
mov
cmp
mov
jg
movsb
sbb
pop
push
lahf
rcrb
push
push
adc
jno
xor
jge
les
xchg
cmp
dec
xchg
mov
pop
lods
and
jp
jne
popf
mov
xchg
lods
xchg
pop
lea
fwait
xlat
add
in
fistl
dec
int
mov
mov
rol
clc
cmp
cmpsb
jecxz
pop
rorl
xchg
jb
adc
xor
es
icebp
xchg
out
add
mov
sbb
inc
add
mov
cltd
jp
push
mov
adc
in
out
add
out
imul
insb
shll
pop
stos
xor
sub
sahf
lds
cltd
dec
mov
add
jno
loop
add
idiv
lods
outsl
mov
jnp
cmc
int3
inc
xchg
adc
mov
xchg
sub
cld
xor
lret
and
sub
pop
cmc
shlb
and
ret
xlat
or
int3
sub
or
and
xchg
into
or
pop
push
dec
cli
loop
loop
lods
cmc
pop
mov
push
icebp
sbb
pop
lods
xor
mov
mov
in
cs
dec
in
mov
mov
adc
dec
xchg
ret
sar
lds
push
lds
pop
lock
pop
xchg
outsb
jb
addr16
mov
mov
faddl
mov
repz
lcall
dec
push
or
sub
in
pop
fldt
mov
scas
jle
and
es
sbb
lea
rclb
mov
push
loope
mov
mov
sbb
out
add
lret
xor
push
xchg
sbb
xlat
shll
adc
cli
or
es
in
stc
ljmp
popa
adc
pop
f2xm1
stos
sti
ljmp
into
inc
dec
rorl
mov
sbb
dec
in
fs
mov
aaa
repnz
dec
out
push
xchg
sub
adc
inc
sbb
stos
flds
leave
js
rcrb
adc
xor
mov
jbe
pop
push
mov
fs
daa
mov
mov
mov
push
and
add
xchg
stos
inc
pop
hlt
ss
nop
outsl
mov
repnz
gs
cli
push
mov
cmp
jbe
ss
ret
ss
fst
mov
inc
popf
mov
ret
loop
out
push
rorl
pushf
xchg
dec
daa
into
fwait
mov
in
pop
loope
int
out
insb
and
cmp
push
mov
dec
xor
out
mov
inc
lahf
in
lcall
and
xor
xchg
jne
loopne
push
mov
test
or
xorb
lcall
sbb
sbb
jae
add
int
mov
or
cmc
ja
xor
icebp
xchg
sbb
lods
sbb
dec
das
sub
push
ljmp
dec
dec
jecxz
cmp
sub
and
pop
in
int
mov
jmp
xchg
sub
cli
sbb
rclb
nop
xlat
stc
pop
popa
push
jle
jbe
aam
pusha
or
dec
push
pop
inc
pusha
mov
imul
leave
fists
test
mov
inc
add
inc
inc
scas
stos
pop
mov
lock
adc
xchg
inc
cmpsl
fiaddl
mov
lods
and
mov
outsl
jno
mov
fwait
mov
mov
mov
call
mov
out
adc
repz
shrl
or
cmc
pushf
pop
mov
lds
mov
pop
sbb
mov
cmpsl
test
xchg
mov
sbb
shll
cs
mov
adc
nop
jle
imul
add
xchg
mov
stc
sbb
outsb
andb
scas
iret
mull
or
jmp
jb
xor
xchg
mov
std
mov
mov
popa
insl
movsb
popa
andb
cmp
fcompl
mov
cmpsl
ljmp
clc
sub
cli
js
push
and
aad
add
inc
push
ss
or
notb
add
divb
pop
inc
int3
mov
add
into
or
inc
mov
outsl
pusha
pop
dec
fs
fists
xchg
mov
testb
add
addr16
fs
mov
test
mov
lock
xor
and
sbb
imul
es
push
mov
xor
adc
mov
movsl
adc
testb
jge
mov
jg
cld
lahf
jge
loop
outsl
test
sbb
ficomps
sar
out
mov
lret
or
fsubs
xorb
data16
dec
aad
syscall
mov
pop
and
insb
nop
pop
dec
in
push
push
add
aas
jne
mov
jecxz
test
scas
add
aaa
dec
mov
jns
popa
push
mov
das
ss
mov
jecxz
mov
mov
and
mov
lods
mov
dec
jne
pop
push
int
js
repnz
cld
clc
iret
and
call
pop
jnp
adc
test
pop
or
jb
shll
xorb
pop
out
cli
insb
push
pop
sbb
and
popa
cmp
cmp
cmovb
and
ljmp
or
inc
or
out
imul
inc
push
mov
sbbb
iret
stos
lret
ja
inc
lds
jp
loopne
and
bound
inc
sub
push
fs
cmp
xlat
fwait
sub
add
sub
sub
popa
shr
cmp
ficoml
js
xchg
in
xor
mov
lods
pop
xchg
aaa
and
aaa
mov
fistl
icebp
jns
ss
movsl
leave
cmc
fsubr
push
je
fstl
rorb
cmp
orl
push
dec
xchg
ret
cld
cli
repnz
int3
dec
inc
pop
dec
push
sti
fmulp
nop
xchg
mov
sbb
push
stc
inc
fdivrl
jb
push
clc
xchg
push
xchg
mov
adc
inc
pushf
pusha
dec
adc
xchg
fimull
shl
stos
mov
xor
scas
movsb
cs
push
fs
out
jb
orb
push
xor
test
fidivrs
pop
repz
sbb
nop
pop
pop
pop
std
xchg
les
mov
jae
test
mov
and
insl
sbb
repnz
or
add
inc
xor
mov
sbb
fsub
insl
nop
xchg
fsubl
jns
adc
adc
frstor
sbb
cmp
cmp
inc
shlb
xchg
and
mov
into
mov
jne
push
push
syscall
sti
mov
mov
repnz
bound
jl
xchg
sbbb
mov
int3
jmp
and
pop
push
push
mov
push
or
inc
enter
je
jge
xchg
out
lods
mov
cmp
jbe
pop
mov
cltd
inc
sbbb
add
iret
xlat
add
mov
dec
in
push
ja
arpl
cli
pop
or
popa
mov
mov
out
arpl
bnd
in
outsl
inc
nop
and
ds
cmpsl
pop
decl
rorb
dec
faddl
into
outsb
iret
ss
gs
fnstenv
pop
and
xor
adc
jge
push
cmp
dec
scas
movsb
in
xor
gs
jb
add
and
test
push
sti
cmp
mov
push
outsl
jo
jno,pt
test
mov
fwait
stc
and
mov
cmp
mov
fadd
aaa
sub
je
push
lahf
cltd
sbb
pop
repz
sbb
lret
xor
imul
div
xor
xor
push
icebp
pop
and
das
jecxz
ror
lahf
dec
fldenv
sbb
pop
sbb
and
mov
and
inc
movsb
aas
lods
push
repnz
dec
mov
shl
pop
mov
lahf
aas
test
and
sub
push
mov
inc
pop
lods
mov
fmuls
sbb
cmp
jns
call
dec
test
dec
cmp
push
adc
ret
push
popl
jae
test
jmp
push
xchg
pop
add
jnp
outsl
add
les
mov
leave
gs
dec
push
lods
xor
ja
mov
call
rcrb
out
and
jbe
mov
lahf
mov
cmpsb
pop
cmp
test
sbb
shlb
roll
mov
or
xchg
outsb
and
sub
push
ja
popf
int
fcoms
or
pop
in
cs
in
clc
ja
jge
je
loope
es
in
sbbb
dec
dec
add
rorb
mov
cwtl
cmp
sbbl
outsb
ljmp
and
add
andb
xchg
add
mov
jmp
mov
pop
pop
lods
out
sbb
sarb
or
inc
stos
in
pop
call
and
cld
cwtl
mov
aad
xchg
add
outsb
decb
repnz
pusha
mov
xor
push
xchg
repz
ja
mov
push
je
inc
jecxz
push
insb
divl
or
or
stc
mov
outsl
fildll
jmp
in
mov
dec
incb
sub
daa
cmc
fmulp
cmp
fisttpll
xchg
rorb
cmpsl
out
and
dec
in
mov
test
rcrb
dec
mov
loopne
call
pop
pushf
clc
aaa
fs
mov
fldcw
ucomiss
dec
fdivs
sub
inc
push
xchg
xchg
push
cmp
push
daa
das
and
mov
sahf
xchg
pop
and
sahf
pop
pop
lods
push
popf
stos
daa
stc
jle
sahf
adc
xchg
in
sahf
stos
xor
jmp
das
mov
pop
pop
dec
inc
cmp
test
xchg
mov
rclb
ljmp
getsec
push
mov
cli
popf
cmc
scas
adc
xchg
mov
movb
mov
sahf
inc
cltd
loopne
loop
dec
lods
movsl
add
ret
lret
jb
sarb
mov
push
sbb
xlat
jg
add
stc
test
xor
out
sbb
leave
pop
into
mov
ljmp
call
movsb
or
cmp
or
loop
inc
dec
mov
push
jecxz
pop
inc
and
mov
imul
cmp
xchg
out
fnsave
add
js
push
jb
push
fmull
inc
aam
xor
cmpl
mov
push
xchg
xlat
stos
lock
push
push
sub
scas
das
dec
in
nop
repz
iret
inc
xchg
inc
icebp
mov
clc
pop
adc
cmp
iret
dec
cmp
lea
dec
sbb
cmp
cs
fldt
mov
fwait
outsl
or
flds
dec
int3
cmp
mov
xor
mov
mov
jne
sar
lret
dec
lret
xchg
mov
mov
das
pop
stc
jp
mov
dec
pop
out
mov
aas
xor
xor
fdivrl
mov
sub
xchg
dec
arpl
sub
fbld
in
push
pushf
mov
cmp
insl
aaa
xchg
pop
aam
xchg
lods
insl
xchg
enter
cld
sbb
pop
in
push
add
fs
sub
notl
int
pop
or
and
jmp
xchg
xchg
jl
fucomi
jmp
imul
into
mov
fwait
test
clc
pop
fists
and
fisubrl
xor
pop
mov
pop
mov
xchg
movsb
sub
repz
movsl
cld
push
rorb
fmuls
adc
lock
dec
aaa
jmp
adc
xor
fwait
ds
pop
jno
ds
aad
jge
sbb
div
xor
mov
sub
popf
sar
js
cmp
xor
dec
ret
push
push
enter
and
add
dec
add
gs
add
leave
sub
pop
sarl
pop
or
push
adc
call
pop
inc
divb
clc
pushf
pop
add
fdivrl
shll
sahf
popa
outsl
jno
dec
adc
aaa
cmp
cld
mov
cmp
cmp
arpl
or
lahf
std
mov
lock
cltd
fcmovnb
clc
mov
xchg
push
push
aam
pusha
pusha
xchg
pop
mov
xor
dec
adc
adc
mov
push
int
xchg
movsb
push
icebp
data16
adc
push
pop
mov
xchg
push
shrb
fcmovbe
or
subb
push
push
cmpsl
sbb
adc
sub
sbb
iret
cmc
roll
out
pop
sub
xchg
in
clc
xchg
popf
sub
shl
mov
js
in
inc
xor
jbe
mov
stos
xor
xchg
jg
outsl
xchg
ret
loop
dec
lods
mov
mov
lods
adc
jp
mov
sahf
imul
aaa
dec
repz
and
fwait
push
and
cmp
mov
lret
mov
aam
add
mov
adc
push
jae
es
cmp
and
lock
xchg
stc
adc
cmpsl
push
sbb
loop
aad
jg
lock
das
and
pop
inc
and
xchg
jge
cli
inc
fwait
js
xor
out
sub
sub
pusha
or
fidivl
bound
notl
movsl
mov
lret
lahf
mov
xchg
mov
out
push
pop
jbe
add
cmp
adc
roll
add
imul
or
movsb
mov
lods
orl
push
loopne
adc
loop
ss
pushf
inc
sbb
lret
mov
mov
aaa
push
inc
mov
jb
sbb
addl
imul
xchg
add
and
mov
adc
adcl
pop
imul
push
fisubl
shll
pop
mov
sbb
cmp
dec
add
mov
jnp
pop
jbe
pusha
loope
ret
scas
mov
and
insl
and
pop
dec
loop
ret
loope
repz
aas
jge
cmp
lret
push
xor
cmpsl
jo
out
jne
push
and
test
aam
stc
lahf
jo
jecxz
enter
or
popl
cmc
or
test
mov
ds
and
jmp
es
push
subb
aam
adc
test
sti
fidivs
push
fiadds
imul
xchg
dec
fs
mov
or
push
notl
aas
add
mov
push
jmp
repnz
mov
movsl
push
fs
mov
mov
inc
inc
in
inc
jae
jecxz
push
test
xchg
pop
jb
jle
cmp
sahf
mov
pop
ljmp
inc
repnz
inc
decb
sub
adc
xchg
sbb
mov
dec
push
dec
nop
jle
jbe
push
loop
xchg
mov
push
push
ja
outsb
mov
cmp
push
adc
sbb
roll
mov
pop
sbb
fistpll
hlt
sti
jo
sbb
sub
pop
push
xchg
ljmp
mov
or
shl
pushl
sbb
pushf
jnp
sub
call
sbb
mov
pop
lds
sbb
fcom
adc
adc
push
xchg
shll
jb
jecxz
or
jo
jb
iret
cli
into
cmpsl
icebp
loopne
xchg
adc
inc
imul
out
mov
scas
bound
mov
push
loop
push
sbb
iret
mov
or
cmpsb
push
pop
adc
fbstp
test
mov
pushf
mov
push
mov
jnp
ret
out
adc
cmp
rcl
in
sbb
ficoml
cmpsl
pop
popa
jmp
in
add
mov
lock
push
xchg
fiaddl
int3
dec
push
mov
mov
inc
stos
aas
nop
aas
dec
out
aad
rcll
push
dec
test
repnz
lret
cli
jmp
out
lock
cltd
push
lock
mov
inc
out
repz
adc
sbb
jmp
andb
mov
js
jp
pop
clc
cwtl
notl
cmp
jle
outsb
mov
outsb
add
in
out
ja
mov
inc
lea
stos
stc
sbb
xor
add
dec
pop
notl
dec
jge
ja
xor
lock
cmc
call
adc
sbb
in
mov
out
or
sahf
push
popa
lret
sub
sbb
mov
mov
notb
std
aaa
testl
shlb
xchg
mov
nopl
mov
add
in
cmpsb
aam
into
cmpsb
cmp
adc
xor
sub
push
shlb
pushf
pop
gs
jle
enter
daa
jecxz
push
jb
push
lret
data16
repnz
fcoms
jbe
xor
movsb
stos
xchg
mov
dec
cli
xchg
mov
fdivr
pop
scas
inc
dec
aas
xor
or
mov
pusha
inc
mov
sahf
cmp
mov
mov
iret
xchg
fisttpll
clc
dec
pop
fwait
decb
test
scas
adc
push
ret
mov
xor
mov
jno
sub
mov
fwait
xor
movsl
outsl
jp
xchg
xor
jno
inc
cmp
mov
repnz
mov
inc
push
call
loopne
push
sbb
std
gs
outsb
pop
cmpsb
push
js
scas
sub
pop
sbb
or
sti
sbb
lahf
xchg
loop
cmp
icebp
enter
fistl
inc
xchg
clc
movsb
pushf
adc
and
mov
testb
push
mov
jmp
outsl
int3
ds
jo
xor
add
jmp
loope
stos
fdivs
ret
mov
loopne
mov
mov
cld
test
adc
arpl
push
sar
fnstcw
jle
lea
inc
or
and
inc
sbb
jg
test
stc
sar
fwait
movsb
movsl
arpl
push
cmp
enter
testb
sub
or
sub
movsl
hlt
lret
cmp
and
sbbl
jb
and
iret
stos
add
sbb
outsb
outsb
test
mov
push
and
insl
dec
insb
mov
push
jmp
push
pop
sahf
inc
rolb
dec
test
sub
mov
push
test
jg
out
cmp
dec
xor
pop
xchg
sahf
mov
in
inc
mov
pop
sub
lahf
aaa
jne
scas
push
mov
pop
sarb
adc
and
sub
push
test
inc
cmp
xchg
faddp
dec
mov
inc
movb
icebp
ljmp
mov
cmp
adc
mov
mov
stos
mov
fisubs
nop
xchg
inc
push
or
add
scas
ret
popf
aaa
ret
or
cli
int3
testb
mov
pushf
fs
pop
inc
xor
mov
or
lcall
loop
lret
stos
dec
es
add
sti
lds
hlt
cmp
cltd
xchg
pop
dec
adc
sub
lods
inc
xor
clc
out
lods
pop
ret
cmc
mov
xchg
mov
push
in
mull
sarb
scas
mov
loopne
bound
cltd
jg
adc
mov
pop
popa
inc
ret
lock
mov
addr16
jecxz
addr16
xchg
cmp
push
xchg
daa
jnp
insl
xchg
mov
xchg
sbb
mov
lahf
mov
mov
cmpsb
das
adc
mov
out
xchg
mov
inc
mov
int3
js
xchg
push
jp
sbb
aad
into
adc
daa
sub
mov
testl
mov
push
dec
inc
imul
mov
movsb
mov
loop
dec
popa
mov
mov
outsl
jo
lcall
pop
in
insl
fs
popa
fwait
or
cltd
mov
data16
jge
iret
shlb
xchg
jg
or
adc
aaa
sahf
mov
shrb
mov
or
pop
jg
add
adc
cmp
sub
inc
in
cltd
pusha
mov
mov
aaa
outsl
stos
sub
jp
push
jmp
arpl
js
out
adc
sub
jne
pop
movsb
dec
xlat
push
mov
push
jb
test
mov
ss
push
pop
dec
sbb
test
insl
loopne
insl
sbb
outsl
add
or
cwtl
jae
into
cmp
bound
into
mov
test
mov
movsl
adc
scas
sbbl
dec
pop
dec
jmp
test
sbb
mov
mov
push
fistpll
ss
fmuls
or
das
mov
or
rclb
inc
adc
pop
aad
dec
or
ds
aam
xchg
je
data16
je
pop
cmp
testw
mov
jne
dec
out
and
imul
insb
add
xor
or
sbb
pop
mov
jnp
xor
stos
std
xor
mov
movsl
aaa
popa
fiadds
dec
mov
jb
repnz
mov
push
mov
xor
sbb
pop
push
pushf
stos
nop
adc
imul
lods
pop
fidivs
into
cmp
add
cmp
xchg
shrb
sbb
or
mov
mov
xor
test
out
fdivrl
inc
push
dec
jno
adc
add
mov
movsb
push
test
std
test
or
pop
inc
xchg
loope
jbe
test
sbb
jl
pop
push
andb
lods
and
lods
sub
sbb
dec
xchg
loopne
sbb
dec
pop
mov
mov
in
sbb
inc
cltd
inc
push
pushf
dec
add
fcoml
jo
icebp
aad
call
pop
lods
fistps
es
mov
imul
and
stos
jl
sahf
adc
sbb
xor
mov
shrb
std
inc
sbb
or
mov
daa
test
addr16
xor
mov
call
loopne
add
out
jp
dec
rcrb
adcl
roll
fisttpll
outsb
pop
rolb
push
xchg
insb
aam
cmp
adc
inc
fstpl
adc
mov
and
shrb
aas
jge
addl
aam
mov
jnp
js
ret
dec
ret
je
aaa
and
scas
sbb
loopne
je
mov
sbb
scas
push
xchg
and
insl
xchg
out
into
xchg
mov
ret
jno
jecxz
jne
out
fimull
movsb
xor
fmul
int
sub
cmc
xchg
and
jbe
sbb
out
adc
cmpsb
dec
shll
aas
std
adc
ret
mov
out
aas
mov
movsl
stos
jne
cwtl
scas
sbb
movsl
inc
jnp
lds
lock
movsl
pop
push
faddl
pop
or
pop
leave
shll
pop
sti
pop
sbb
js
rcrl
pop
jge
xor
sub
and
mov
rorl
mov
pop
stos
mov
sbb
adc
or
mov
dec
addb
fsin
pushf
iret
sub
mov
shll
dec
jnp
xchg
out
adc
dec
ljmp
inc
or
lcall
adc
push
adc
inc
jae
stos
push
gs
add
out
jnp
mov
or
cs
dec
mov
fldl
mov
adc
xchg
fcomp
jno
rorb
and
pop
xchg
mov
mov
xchg
test
sarl
mov
and
sbb
add
test
jp
add
outsb
and
shrl
xchg
shrd
mov
xor
sub
adc
addr16
adc
in
cmp
decl
xor
jo
stc
les
ds
add
mov
inc
mov
enter
cmc
aad
notl
stc
inc
call
rorl
push
fdivr
insb
lods
pop
iret
aad
ret
out
mov
loop
fstps
mov
lea
shl
inc
sub
sahf
mov
std
in
es
sub
lret
mov
pop
and
clc
in
mov
loope
daa
jl
or
dec
aaa
jmp
dec
repnz
aaa
in
es
loopne
out
inc
outsl
je
imul
mov
rorb
jecxz
enter
push
fistpll
cmp
imull
lea
lock
pop
xchg
dec
jg
dec
xchg
fs
scas
xchg
push
xor
pop
outsl
sbb
rcr
inc
mov
inc
xchg
stos
loop
andnps
push
sbb
mov
mov
les
insb
xchg
add
sbb
and
lods
push
ret
jg
xor
xchg
mov
jmp
dec
mov
add
negb
add
ds
pusha
scas
pop
mov
sbb
lods
add
sbb
push
and
xchg
mov
sub
or
cmp
jne
xchg
pop
cmpsb
push
shrl
mov
jb
bt
add
insl
ss
mov
xor
add
inc
sub
aad
addl
sub
adc
and
sub
scas
mov
add
pop
cwtl
imul
xchg
sbb
cld
pop
or
jo
mov
addr16
mov
fisttpll
out
mov
adc
add
pusha
clc
outsb
mov
pop
push
mov
xor
call
cmovae
pop
ja
lods
ljmp
shrl
xor
insb
rcl
jecxz
je
fwait
jp
push
rol
std
dec
sbb
aaa
xor
cwtl
popa
lock
in
xchg
insb
dec
xchg
flds
lret
sbb
mov
aad
stos
push
sub
jne
xor
mov
pusha
pop
dec
push
push
mov
dec
pop
fiaddl
rol
xlat
mov
adc
lods
jecxz
jb
jecxz
mov
gs
shl
mov
pop
adc
xor
aad
hlt
outsl
andb
add
sub
scas
add
or
adc
cmovle
adc
jbe
pushl
mov
xchg
xchg
sbb
aam
sbb
pop
dec
leave
movl
push
jg
lahf
out
mov
mov
xor
xor
adc
mov
cld
mov
dec
xchg
loope
int3
iret
lea
push
dec
jae
pop
mov
mov
adc
mov
mov
jmp
xor
mov
pusha
pop
imul
pop
jmp
inc
sub
push
sbb
out
icebp
push
xor
jo
sub
jae
iret
pop
addr16
sub
push
pop
out
sbb
repnz
out
in
xchg
stc
fdivrs
push
sub
int
cmp
push
push
or
mov
outsb
lds
int
and
mov
mov
scas
ret
add
iret
and
outsb
push
dec
mov
insb
std
shll
xor
stos
out
test
xchg
pop
inc
pop
daa
mov
adc
adc
xchg
scas
dec
cmp
loop
mov
sub
sub
loope
fcoml
add
nop
scas
jae
push
clc
jo
push
cli
push
lock
mov
pop
ljmp
cmp
jecxz
fisttps
sarl
ds
push
push
call
gs
hlt
pushl
xchg
cmpsb
leave
js
and
pop
sub
xor
xchg
mov
shr
sub
push
push
pushf
mulb
push
sub
sahf
addb
mov
cmp
cwtl
mov
sbb
mov
in
sub
pop
mov
mov
or
sbb
dec
imul
loop
cmp
add
pop
cwtl
clc
insb
bnd
lods
cmp
daa
ja
add
mov
cmp
cs
aaa
mov
xchg
aas
sbb
push
out
jle
xchg
outsl
loope
jmp
dec
inc
jns
mov
arpl
sub
cs
lahf
adc
inc
popf
lock
jge
jns
xor
add
fildl
pop
into
aas
int
lcall
test
clc
aam
mov
lods
xlat
xchg
xadd
dec
xchg
ja
mov
loopne
out
ja
jnp
nop
mov
movsb
aas
inc
xor
add
lcall
fwait
mov
cwtl
mov
push
ss
push
jne
push
nop
rcrb
add
and
dec
jp
sti
enter
mov
lods
add
addr16
pop
jne
cld
sbb
int3
xlat
add
fcomps
pop
rcl
inc
lret
mov
lret
pop
das
arpl
aam
push
adc
cmpl
scas
sub
pop
pop
and
jnp
cmp
mov
ret
popa
dec
dec
mov
les
cmp
out
out
lcall
xlat
mov
cmp
cs
xchg
cwtl
mov
aam
xchg
pop
loopne
push
jns
sar
rorb
loopne
ret
push
shrl
ja
pop
iret
push
add
mov
sbb
sub
mov
jg
out
mov
in
dec
mov
or
int3
adc
pop
faddp
xor
mov
and
adc
int
mov
out
movsb
stos
push
dec
cmp
jp
jg
pop
cmpsl
mov
add
cmp
mov
mull
xor
mov
push
jl
cmp
and
cmp
dec
and
jge
adc
lcall
push
jle
jge
adcb
addr16
sbb
scas
mov
fildll
cltd
sbb
sub
pop
movsb
cltd
jb
jge
or
push
add
cmpl
xor
sbb
fcompl
add
xor
aaa
push
movsb
aas
ret
pop
ret
insb
push
iret
sbb
outsl
push
push
mov
sbb
push
jo
js
jnp
mov
aas
sti
adc
int3
imul
pop
icebp
jnp
inc
or
xchg
hlt
sbb
sbb
jg
fstpl
orb
idiv
cld
out
xor
out
loop
jmp
sbbl
cltd
call
js
ja
and
mov
loopne
inc
or
push
dec
aas
sbb
addr16
repz
mov
mov
push
shlb
pusha
xchg
push
daa
in
cmp
pusha
mov
sbb
gs
addr16
fisubl
je
sub
loop,pt
inc
rolw
jmp
xchg
pop
push
mov
movzwl
lret
les
loop
jmp
ret
nop
mov
inc
adc
div
cltd
cmp
pop
push
inc
xor
jo
pop
sub
out
fdiv
pop
aaa
push
add
lret
lds
mov
lahf
jno
pop
push
cld
loopne
jne
adc
data16
fstp
subb
adc
loope
lods
rcrb
pop
rcll
pop
mov
xor
jp
shlb
js
gs
in
push
icebp
mov
pop
cmp
out
sbb
lock
pop
xchg
psllq
adc
shrl
into
lock
inc
shrb
pop
std
sti
jb
idiv
add
inc
ljmp
mov
fwait
xchg
call
sub
cld
lods
lret
loopne
adc
push
xlat
arpl
pushf
sub
pop
addb
fnstcw
jbe
mov
adcb
lret
cmp
lcall
xor
mov
lea
push
jne
imul
xchg
push
addr16
stc
jg
jbe
xchg
add
aam
xorl
stos
imul
shrl
gs
or
sub
sar
scas
cli
jge
push
adc
int
icebp
jmp
ja
cmp
pushf
jp
inc
push
out
arpl
fnstsw
cmp
xchg
cli
clc
xor
inc
lods
add
add
ljmp
jl
and
and
stos
std
in
push
and
cld
sbb
popf
sbb
shlb
out
arpl
add
xchg
repnz
scas
cld
out
cmp
fsubs
fldl
divb
cmpsb
stos
sti
imul
add
ficoms
insl
jno
pop
pop
dec
or
je
es
mov
test
insl
insb
cmpsl
xor
fs
pop
push
scas
jge
into
fwait
js
mov
push
stc
mov
push
inc
addr16
sub
addr16
clc
push
xchg
xchg
repnz
mov
mov
ror
push
adc
in
mov
rcll
aaa
sbb
pop
ds
mov
sti
push
test
mov
test
mov
adc
loop
imul
ss
popf
pop
lret
aam
and
das
lahf
mov
addr16
icebp
xchg
out
push
and
adc
loope
push
ljmp
cmp
mov
shrb
mov
push
pop
pop
xchg
inc
xchg
push
lea
mov
lods
mov
cmp
xor
mov
daa
or
jo
adc
sub
shr
shll
jg
pushf
bound
out
scas
adc
sarb
mov
dec
or
mov
push
xchg
xlat
enter
in
push
vmaxsd
in
jmp
cmp
fistl
loope
mov
mov
pop
push
lea
fdiv
sbb
inc
mov
js
push
xchg
dec
push
or
jbe
mov
daa
insb
stos
sahf
insl
clc
in
jns
push
and
jne
adc
filds
and
scas
mov
mov
insb
mov
jg
bound
lret
or
jp
dec
fidivrs
and
mov
enter
push
lods
ret
lcall
into
imul
sbb
hlt
xchg
ret
jmp
testb
das
int
nop
data16
in
pushfw
xor
push
mov
int
mov
test
sti
mov
icebp
mov
push
es
loopne
or
popl
mov
push
rcl
cmp
loop
jns
jmp
std
shll
xchg
pop
loopne
sti
jp
push
scas
cmpsl
adcl
es
aam
into
jle
in
xchg
jne
cs
cmc
xchg
imul
fwait
mov
shll
iret
shl
fcmove
add
roll
adc
je
adc
mov
int3
adc
in
cmp
jl
xchg
ret
das
into
xlat
pop
dec
stc
orb
mov
or
movsb
inc
cmpsb
xor
sub
push
mov
xor
out
mov
cmp
mov
adc
shll
push
pop
arpl
fwait
and
sub
mov
sub
mov
adc
jl
push
aas
jnp
mov
aad
es
cli
or
loop
ds
addl
in
lahf
mov
stc
adc
xchg
xchg
pop
mov
jl
scas
lds
icebp
mov
fstl
jae
push
popa
je
loope
in
sub
scas
adc
icebp
mov
mov
shll
ljmp
ffree
daa
xchg
fwait
mov
lds
pop
pop
push
xchg
push
dec
mov
into
repnz
push
cwtl
sbb
jge
push
psrlq
fnstcw
jg
jae
dec
arpl
mov
sub
xchg
or
cmpsl
and
ja
repz
push
cmpsb
push
into
mov
xor
mov
xchg
outsb
cwtl
or
pusha
pop
xlat
sti
js
ffree
daa
leave
incb
cmpsb
push
pop
sbb
push
xchg
add
scas
int3
imul
jbe
cld
sub
ljmp
add
rcr
das
mov
adc
ffree
xchg
lea
adc
cmp
pop
xchg
and
in
adc
adc
in
mov
lret
hlt
push
mov
loopne
jmp
xor
cmp
push
ret
movsl
ss
jg
dec
adc
xor
jge
push
in
dec
sbb
popf
mov
add
fists
pop
lcall
movl
in
xor
subl
jg
sbb
add
sub
pop
push
sub
and
dec
es
mov
sbb
fmuls
fldt
xor
inc
push
or
enter
into
push
paddd
movsl
stos
aad
cli
push
shll
mov
enter
data16
sub
outsl
das
push
sbb
stos
cmc
adc
outsl
mov
stc
icebp
cmp
xchg
shl
mov
int3
nop
aad
int3
adc
loopne
cmp
fcmovnb
sti
popa
fnstsw
fildl
sub
addb
inc
cli
add
rclb
andps
mov
test
sub
out
repz
shl
pop
lea
scas
lret
mov
movsl
push
pop
dec
daa
daa
push
xchg
test
mov
loop
xchg
sub
or
mov
jl
loop
lods
std
int
ljmp
test
int3
clc
in
and
arpl
push
pop
xchg
pushl
int3
test
test
lcall
in
inc
xchg
and
mov
sbb
sub
in
imul
mov
out
rorl
out
test
loopne
add
push
lret
stos
add
lods
shll
aaa
dec
inc
mov
mov
or
inc
mov
or
stc
mov
in
out
mov
shlb
test
push
sub
jnp
mov
out
cmpsl
pop
hlt
sub
add
sub
addr16
or
cltd
pop
out
shl
aaa
in
shlb
jle
data16
imul
fnstenv
ret
scas
jge
add
aad
fnstsw
stos
fwait
mov
fdiv
ret
sub
rorb
sti
mov
outsb
pop
sbb
pop
fsts
add
jne
jne
shr
sbb
repz
cltd
sub
jg
shlb
xor
mov
cli
dec
mov
dec
fsubrs
scas
xchg
mov
stc
int
xchg
dec
fnstenv
inc
cwtl
idivl
push
js
jnp
ds
sub
lret
dec
cmp
jnp
hlt
xchg
js
notb
scas
lods
pop
decb
cli
call
cmp
cwtl
cmpb
sbb
jge
jo
inc
lock
xor
xchg
sahf
mov
pop
jecxz
in
test
ja
sub
and
adc
lahf
dec
jns
fcmovne
rorl
cmp
xlat
push
in
imul
dec
jnp
std
mov
int3
pusha
dec
add
fadds
in
lock
adc
nop
adc
dec
out
jp
repnz
cltd
and
cmp
jne
mov
shlb
pop
sub
fildl
scas
xchg
dec
pop
push
cld
and
xor
fmull
sub
lods
jo
adc
and
out
cmp
enter
clc
push
popa
add
aam
cmp
xchg
xchg
mov
xchg
mov
mov
repz
out
mov
ljmp
mov
mov
sbb
xor
push
lods
addr16
push
xchg
fwait
mov
cltd
pop
inc
inc
jno
test
mov
mov
add
data16
sub
mov
mov
je
xor
mov
jo
lret
lahf
movsb
fnstenv
or
fwait
pop
adc
fsub
lock
mov
loope
arpl
rdpmc
aas
add
mov
add
stos
fwait
sti
xor
fwait
movsb
pop
ja
mov
push
mov
cmc
popa
in
ret
cs
test
cli
fidivl
or
sub
add
xchg
inc
mov
into
mov
cmpsb
insl
fs
outsb
push
xchg
mov
je
adc
icebp
out
mov
pop
ret
jb
cmp
repnz
sub
cmp
int
shrb
aaa
mov
push
and
cmp
insb
sub
imull
addb
jo
or
jno
inc
sbbb
test
mov
aad
iret
int
ljmp
rol
cli
and
gs
sbb
sub
pushl
setb
movsl
in
xor
push
test
shll
ret
push
sbb
xchg
mov
cmp
xor
mov
adc
ret
xchg
xchg
fidivrl
decb
jmp
and
pop
xchg
adc
call
jg
mov
cmp
fisttpll
cmp
inc
or
imul
sub
adc
push
das
adc
dec
ja
xor
aaa
jne
repz
inc
mov
jno
and
js
fcmovbe
push
sbbl
adc
bound
push
mov
xor
xor
ljmp
or
sarb
inc
pusha
sbb
test
hlt
mov
inc
inc
and
sub
out
mov
pop
inc
inc
cmp
pop
xchg
push
test
adc
cmp
xor
sbb
hlt
inc
fsubs
test
sub
std
adc
jnp
cwtl
rcrl
add
mov
pop
pop
mov
fs
pop
cmp
mov
add
inc
xchg
xor
adc
push
or
outsl
imul
in
sub
lret
or
mov
push
lahf
test
test
and
push
pusha
loop
ljmp
lds
jecxz
mov
add
adc
sub
jno
jo
dec
mov
mov
xchg
pusha
push
sub
scas
sbb
inc
xchg
repz
cmc
sbb
pushf
fists
jmp
mov
jo
or
loop
fidivrs
sub
fsubrl
jmp
push
stos
xchg
sub
ret
jecxz
cs
pop
dec
pop
popf
xchg
inc
scas
or
stc
cmc
push
mov
push
dec
or
add
lret
cmp
mov
fsubrs
inc
addr16
lods
stos
inc
xor
aaa
iret
mov
ds
lds
sti
jmp
mov
dec
outsl
movsl
cltd
mov
mov
sti
in
fmulp
jge
push
push
mov
movsl
out
arpl
stos
outsl
cmpsb
out
mov
andb
mov
xchg
inc
rorl
xchg
dec
adc
pop
add
roll
das
jbe
xchg
add
movsl
test
test
lods
outsb
out
lea
insb
add
bound
leave
out
lods
dec
xchg
test
and
out
aas
or
xor
test
hlt
xlat
fs
or
mov
nop
outsb
cli
inc
cltd
push
pop
pusha
mov
dec
push
dec
loop
shll
mov
in
xor
fucomip
push
fldlg2
dec
clc
in
jle
or
adc
mov
cmp
jle
push
mov
mov
in
iret
andl
dec
mov
hlt
imul
test
outsb
pop
and
pop
std
inc
pop
or
inc
in
outsl
je
mov
clc
imul
xor
loope
orb
mov
or
xchg
xlat
ret
aas
and
pop
arpl
jg
das
sbb
movsb
sub
push
ljmp
pusha
insl
rclb
push
jo
inc
fldenv
add
push
rcl
dec
test
dec
push
fdivr
or
push
subb
dec
sti
ret
push
adc
hlt
pushf
loop
sbb
fcoml
pop
fldt
jns
scas
iret
icebp
ret
data16
xor
sbb
imul
mov
int
les
out
cmpb
xchg
loopne
scas
insl
lds
shll
scas
ja
push
movsb
dec
cmpl
pop
leave
adcl
pop
push
ljmp
xor
lcall
mov
mov
push
fiadds
stc
movsb
pop
add
ja
jo
fs
jne
mov
adc
movsb
push
insl
enter
xchg
mov
dec
test
icebp
adc
jae
or
repnz
cmp
add
shlb
adc
data16
sahf
or
jb
inc
push
loope
out
nop
dec
dec
adc
std
jo
dec
int
sbb
sub
add
fwait
das
push
push
insb
outsl
imulb
jns
stos
push
ja
mov
je
mov
xchg
lret
std
sub
mov
dec
gs
mov
xchg
lcall
test
pop
inc
imul
mov
add
push
sub
inc
fs
mov
in
sub
rol
in
dec
add
push
or
jg
test
dec
xchg
int3
js
sbb
nop
mov
arpl
rorb
sahf
test
push
daa
je
push
push
popa
sti
cs
pusha
cltd
mov
xchg
arpl
push
pop
mov
add
mull
mov
arpl
adc
cmp
repz
cmp
inc
ret
add
and
mov
movsb
das
add
and
out
ss
xor
cmpl
int
nop
jns
mov
sbb
or
and
pop
sbb
push
cltd
fldcw
add
mov
adc
in
cmc
iret
dec
xchg
jno
cmp
cli
mov
dec
dec
mov
jae
jmp
inc
cmp
in
mov
fnstenv
shlb
movsl
jb
insb
jns
mov
add
and
sub
cwtl
mov
xor
jmp
xchg
shl
popf
loope
lods
ret
mov
xchg
adc
or
xchg
es
das
pop
mov
ret
push
jg
shr
jo
and
clc
rcll
push
ret
xchg
xchg
or
or
stc
cmpsb
inc
pop
mov
push
dec
pop
jns
mov
pop
jno
mov
fisubl
mov
sbb
outsl
mov
cmp
mov
xor
mov
adc
rclb
loop
les
sub
mov
adc
leave
add
fwait
ror
sub
out
cmpsl
shl
cld
lcall
in
aad
add
aam
push
mov
loope
or
jbe
jle
stos
dec
sbb
out
sbb
pusha
call
dec
leave
loope
imul
mov
or
mov
mov
je
sahf
cmpsb
test
mov
jo
pop
shlb
ja
xchg
jb,pn
cmp
pop
jnp
adc
out
fs
fsubl
mov
mov
out
repnz
lea
jg
sub
mov
jb,pn
add
cmp
test
fstpt
subl
mov
mov
movsb
inc
in
sub
stc
imul
push
sub
aaa
fwait
ljmp
sbb
sbb
pop
push
fldt
or
mov
pop
out
sub
jne
jmp
mov
sub
ret
fsubrl
nop
mov
ss
add
cmp
dec
lods
repnz
adc
xor
lods
cs
loop
sub
enter
pop
ja
clc
push
aas
iret
out
fisubs
jg
mov
xchg
mov
movsl
jp
mov
les
mov
arpl
sub
and
cld
add
pusha
das
lcall
pusha
addr16
add
insl
xor
dec
adc
lds
jbe
lea
push
lret
cwtl
or
adc
mov
xor
idivb
cmc
jns
push
pop
fcmovnu
or
push
xchg
cmpsb
sbb
repz
mov
mov
scas
inc
icebp
addr16
ja
ds
pop
int3
orb
iret
pop
sub
test
pop
inc
mov
lret
jp
push
clc
dec
aas
jnp
leave
rcl
mov
pop
data16
push
cmc
rep
jae
fimull
cwtl
pushf
xchg
inc
ds
push
jo
mov
sbb
push
sub
mov
xchg
adc
inc
pop
cmp
fcmovb
data16
fimull
stos
mov
dec
scas
fsubl
and
popa
ds
sbb
add
jl
sbb
jge
js
in
ret
stc
or
dec
jle
ljmp
imul
movsb
repz
addb
pushf
repnz
addr16
mov
adc
test
iret
jecxz
push
push
ljmp
mov
mov
mov
aas
fldenv
sarl
mov
shlb
inc
cmp
test
add
sbb
lahf
add
pop
or
enter
adc
push
lret
jl
lea
hlt
cmpsl
fiaddl
fnstcw
js
pop
push
mov
ss
lods
xor
mov
mov
add
imul
out
movsb
loope
xor
jg
fcmovne
int3
aaa
jl
inc
adc
jg
xor
xchg
xor
adc
daa
dec
jnp
cwtl
dec
fistpl
sub
jo
mov
je
bound
pop
loopne
push
pusha
pop
push
adc
push
icebp
sub
subl
xor
mov
xchg
or
pop
sbb
xchg
sbb
rorl
jae
and
pop
insb
inc
and
cmp
or
mov
popa
imul
jnp
in
push
add
sahf
pop
jecxz
lahf
mov
jbe
jae
xlat
daa
add
mov
gs
aas
insb
add
gs
and
add
mov
add
fcompl
iret
and
in
inc
or
aas
jmp
fcmove
xchg
dec
sub
nop
mov
sub
cltd
jecxz
lea
or
jae
dec
imull
popf
jns
jmp
and
subl
mov
icebp
pop
int
push
int3
les
shl
andl
imul
pop
sbb
cs
jne
inc
push
dec
and
mov
pushf
xchg
iret
sub
aad
stos
mov
and
les
sub
mov
nop
inc
icebp
or
and
mov
scas
push
subb
jmp
push
mov
mov
and
enter
inc
das
iret
jl
fs
es
add
mov
jl
sbbl
ret
arpl
adcb
xchg
aas
mov
jnp
sbb
js
mov
out
pop
pop
fwait
push
sbb
test
aad
insl
dec
dec
sub
lods
xchg
aam
out
jge
sbb
int3
add
mov
or
pop
mov
nop
adc
xchg
pop
mov
and
push
sbb
out
jp
pusha
push
pushf
adc
dec
or
stc
test
mov
jno
test
mov
pop
inc
adc
les
jmp
xchg
add
jmp
pop
rolb
xchg
stc
cli
mov
inc
fnstsw
jecxz
fisubl
mov
add
and
sub
push
pop
out
inc
test
sbb
fwait
popf
lahf
and
stos
or
dec
inc
sbb
mov
dec
and
mov
in
test
dec
ret
nop
pop
cmp
pop
xor
pop
aam
mov
mov
popa
clc
lret
cmp
mov
and
lahf
cld
push
mov
fcoms
repz
hlt
push
mov
and
inc
lds
xchg
add
sbb
mov
mov
and
ror
push
dec
pusha
pop
mov
xchg
pop
push
xor
test
fucomp
sub
or
cld
fidivl
and
sub
inc
xor
lea
in
cmpsb
data16
xor
lock
clc
imul
dec
jl
icebp
ret
add
jle
add
pop
sbb
orb
imul
dec
jge
add
popf
sub
fsubrl
insb
push
jb
sar
dec
mov
popf
js
pop
psubq
rclb
sub
xor
andb
ss
sub
add
int3
scas
movsl
mov
mov
xor
and
lret
stc
push
dec
inc
xor
adc
mov
inc
test
inc
cmp
das
push
fstpt
sub
leave
jmp
pop
imull
mov
in
push
lock
movsl
shlb
pop
mov
and
cld
pop
or
nop
mov
cwtl
cmp
loopne
out
push
out
in
sbbb
lock
mov
pushf
mov
addb
mov
pop
cmp
fdivs
cltd
imul
pop
aaa
lea
sbb
xchg
int
leave
mov
adc
xchg
or
imul
lcall
test
ss
or
into
addl
in
sub
jbe
push
or
cli
jb
xlat
push
test
js
push
into
outsb
stos
outsb
push
mov
enter
div
dec
and
cmp
jb
push
push
mov
jb
in
lea
loopne
and
push
lods
and
negb
int3
cs
sbb
stos
int3
mov
mov
loope
inc
movsb
cmp
adc
sub
and
pusha
out
xor
enter
stc
inc
das
inc
out
out
ljmp
jae
or
test
pop
push
or
in
loop
pop
aas
sahf
lds
jp
vpsrad
aam
ret
mov
lret
pop
pop
jne
sub
lret
pop
mov
mov
icebp
fimuls
sub
sti
sahf
pop
cli
repz
push
lahf
imul
mov
push
mov
cmp
push
hlt
sub
jge
xchg
rcrb
das
sub
cltd
hlt
shrl
dec
data16
cmpsb
sti
pop
adc
add
mov
xchg
rorl
push
in
std
xor
fadds
xchg
cmp
call
insl
movb
pop
mov
mov
push
stos
sub
orb
test
adc
pop
addr16
push
mov
xchg
xor
test
aaa
or
inc
inc
das
push
in
rclb
xor
cmp
mov
lret
cmpsl
cmp
jle
neg
movsl
in
sahf
lods
int3
sbb
out
in
and
test
xor
or
lea
jp
bound
out
and
call
dec
call
inc
xchg
pop
jne
repz
js
das
jb
fldenv
or
add
mov
sbb
xchg
out
inc
xchg
aad
lods
imul
dec
insb
cltd
adc
bound
es
mov
repz
in
stc
dec
mov
pop
shll
addr16
pop
mov
adc
pop
cmc
pop
fcoms
orb
push
mov
pop
adc
mov
pop
push
ficoms
shrl
mov
mov
inc
fwait
jbe
or
xor
sbb
cmpsb
jno
or
push
jl
movsb
dec
push
jmp
xchg
repnz
inc
jno
rcrl
mov
in
mov
inc
in
jb
adc
lcall
dec
ret
fs
dec
sub
mov
and
fisubs
fs
mov
pop
flds
in
jbe
and
pop
push
loopne
iret
xchg
popa
adc
daa
adc
imul
sarb
cltd
call
xlat
cwtl
or
test
iret
addr16
clc
adc
outsb
cmp
xor
sahf
addr16
lock
jle
pop
ss
mov
shll
das
adc
jecxz
mov
inc
mov
test
movsl
xchg
int
push
jb
inc
lcall
fidivl
in
push
push
jns
jp
jmp
push
and
adc
mov
lods
sbb
sti
in
shll
out
mov
cmp
push
lock
jb
std
cmp
jl
pop
xor
mov
cltd
out
addr16
lahf
pushf
cmpb
cmp
cmpsb
bnd
xchg
push
ret
pop
inc
xlat
lcall
imul
xchg
mov
stos
xor
in
adc
popa
and
xor
js
sbb
or
fsubl
call
mov
adc
js
inc
sbbl
movsl
add
sti
stos
sahf
mov
imul
mov
xor
jb
adc
pop
pop
pop
in
cmp
cmp
fstps
push
jl
add
mov
popa
push
loopne
dec
aam
add
jmp
aam
das
xor
xor
xchg
mov
mov
push
mov
jae
hlt
and
adc
add
cmp
fnstcw
mov
loope
xlat
cmp
cmc
mov
int3
push
pop
and
cwtl
inc
andb
push
dec
or
cmp
mov
pop
cmpsb
je
sbb
les
mov
leave
sti
xchg
cmp
movsl
push
cmpl
data16
ja
fldln2
popl
dec
and
and
mov
iret
jecxz
cld
xor
mov
pop
xor
xchg
or
adc
sahf
negb
or
rorb
loop
cmp
js
or
xchg
arpl
andl
pop
arpl
cs
mov
lea
cs
mov
cmc
pusha
jne
mov
rorb
sub
adc
je
xchg
dec
jp
into
bound
cld
mov
jle
xchg
outsl
adc
jmp
fdivrl
mov
sub
decb
out
insb
ficoml
push
out
out
cmc
sbb
lods
xchg
cmc
stos
mov
shlb
fsubs
fsubrs
lods
divl
xor
dec
jbe
mov
pop
adc
ss
rcrb
inc
ficoms
cltd
nop
pop
mov
lcall
sub
lds
xchg
adc
sub
js
jns
or
inc
in
mov
jmp
bound
fwait
lret
dec
and
pop
push
enter
mov
and
mov
fildll
add
dec
jp
inc
sbbb
insl
jecxz
and
fidivl
aaa
mov
inc
mov
out
mov
enter
rclb
adc
loope
sub
enter
gs
stc
lahf
jg
stc
retw
cli
push
jp
and
xor
flds
jge
lahf
lret
decl
in
sbb
aam
sub
push
out
pusha
std
scas
in
push
sub
jo
pop
sbb
cmp
cmc
stc
push
pusha
int3
xchg
mov
push
ss
mov
sahf
loope
mov
xor
fimull
int
in
mov
xor
inc
jp
sub
mov
mov
shll
cmpsl
sub
push
imul
fxch
push
cmc
dec
xorl
xor
xchg
inc
mov
mov
dec
loope
mov
sbbb
cmp
insl
arpl
push
add
repz
adc
push
jb
adc
movsb
xchg
mov
dec
adc
leave
jge
add
int3
cli
orb
mov
xor
inc
mov
push
stc
sahf
lret
mov
sub
ficomps
jnp
lret
mov
shrb
push
and
push
mov
fsubrl
outsb
push
sub
mov
out
das
decl
jecxz
push
pusha
mov
jns
and
jge
pop
lods
aas
jnp
cltd
jmp
mov
pop
jno
and
mov
fstp
into
xchg
fs
mov
sub
ds
pop
add
mov
out
sbb
mov
lea
push
mov
sub
ret
xchg
imul
decl
or
pop
outsb
fwait
or
sar
ret
es
cld
or
addr16
les
fcomip
rcll
pop
jp
lret
arpl
test
testb
or
mov
push
cmpsl
int
dec
mov
enter
add
sbb
in
or
imul
fwait
dec
out
mov
jnp
pop
or
jo
daa
pop
cwtl
rolb
jg
popa
dec
pop
out
or
out
loop
jecxz,pt
or
into
mov
je
push
mov
mov
jl
sub
js
imul
jbe
sbb
mov
in
jl
push
xor
sbb
adc
sbb
add
es
xlat
inc
xchg
punpckhwd
xor
sub
inc
int3
lods
int3
lds
fcomps
sbb
ror
jo
adc
xorl
push
inc
rol
sbb
addr16
subl
xor
cmp
xor
add
mov
cltd
mov
jle
jecxz
out
data16
xor
mov
add
dec
pop
inc
jle
mov
push
jne
in
and
fadd
mov
stc
jmp
gs
xchg
clc
lret
lods
cmp
mov
xchg
aas
pop
add
insb
sub
inc
fs
cs
dec
add
add
fs
sub
sbb
lahf
push
cwtl
pushf
adc
andl
push
adc
dec
movsb
xor
mov
sub
in
cld
daa
loopne
xchg
pop
addr16
gs
fadd
push
jns
mov
push
jp
fwait
xchg
xchg
jae
pop
xor
loop
testb
fidivrl
int3
or
and
in
scas
dec
dec
sbb
push
xor
dec
inc
ret
into
addr16
cmpb
pop
sbb
xchg
movsb
jecxz
mov
mov
jmp
jno
rorl
mov
cs
xlat
fmulp
das
fwait
aaa
xchg
push
push
sub
push
mov
loopne
clc
fadd
ja
sbb
mov
loopne
jno
imul
jecxz
inc
add
sbb
lahf
mov
rcll
int3
fs
xor
mov
subl
out
pop
mov
pop
bound
mov
movsb
mov
cltd
adc
test
pop
dec
test
jmp
mov
test
movsb
mov
jle
add
dec
push
fwait
mov
into
aad
jae
mov
gs
jmp
jo
push
das
stos
cmpsb
in
jae
lahf
daa
add
and
roll
or
iret
jbe
mov
adc
mov
pop
mov
insb
cltd
add
bound
inc
xchg
add
mov
jl
pop
xchg
test
enter
test
in
push
scas
out
pop
movsl
repz
push
in
mov
ljmp
jbe
dec
jnp
mov
xchg
lea
lret
in
inc
arpl
imul
xchg
inc
sub
je
sbb
insb
cld
mov
xchg
and
sbb
pop
inc
mov
clc
push
test
lret
mov
shll
add
xchg
movsb
test
inc
cmpsl
out
pop
pusha
or
sarl
cmpb
mov
xor
ljmp
adc
pop
cmp
dec
mov
aad
xchg
hlt
xor
inc
mov
int3
mov
push
pop
mov
mov
addb
mov
shrl
adc
stc
xchg
jbe
sub
sahf
mov
inc
sub
icebp
add
mov
shl
dec
ds
mov
cwtl
lea
pop
ljmp
test
pop
xchg
in
sub
inc
es
hlt
syscall
leave
clc
imul
inc
or
les
cwtl
cmpsb
mov
xor
nop
xor
adcl
aam
cmp
imul
leave
add
aaa
sbb
rcrl
and
xchg
jmp
sbb
std
test
shrl
cs
jbe
xadd
adc
push
cli
lcall
dec
in
cltd
in
aas
mov
daa
ds
push
sub
pop
fldl
fldenv
adc
aad
ljmp
pushf
inc
jmp
mov
mov
push
gs
arpl
cmp
leave
test
jp
cs
addr16
add
cmc
es
dec
int3
sbb
ljmp
xor
fldl
sub
jo
cmp
mov
push
mov
pop
push
es
mov
push
mov
jns
repnz
pop
mov
push
test
gs
leave
out
mov
cli
or
pop
sub
inc
dec
movsb
jle
lock
sahf
mov
movsb
or
mov
sahf
jmp
adc
aam
mov
sti
lods
cmp
aam
cmpsl
rcll
rolb
or
mov
sub
shl
loopne
call
addr16
pop
add
xchg
push
cmp
popa
and
or
aas
test
xor
outsb
or
mov
popa
and
loop
call
ja
pop
das
pop
push
test
clc
sarb
rcr
mov
movsl
mov
xchg
pop
in
mov
jmp
repnz
sbb
sbb
jne
outsb
xlat
cmpsb
mov
add
lret
fiaddl
pop
adc
arpl
and
stos
cltd
mov
addb
cwtl
into
pop
adc
js,pt
iret
arpl
scas
loopne
cmpsl
xchg
lods
cld
add
mov
mov
dec
nop
fwait
int
xor
outsb
inc
xchg
in
insb
inc
mov
sti
xchg
mov
push
lret
inc
lock
mov
jb
or
cmp
push
lea
dec
gs
pop
xchg
mov
cmc
rorl
rorl
dec
out
lods
adcl
ret
mov
xor
cmp
aas
cmc
mov
push
xor
xchg
fucomip
sti
data16
mov
fimull
sub
add
in
in
push
sub
repz
add
mov
in
imul
rolb
mov
movsl
hlt
xchg
push
in
mov
xchg
lret
pusha
inc
fmuls
xchg
jl
adc
jp
dec
lcall
mov
jge
popf
mov
push
cmpsb
cmp
addr16
jge
popa
xchg
mov
jge
or
iret
sarb
comiss
inc
and
out
sub
jg
push
push
aaa
jb
aas
sbb
xor
jecxz
ret
jp
shll
jns
mov
subl
pushf
push
jne
and
xlat
hlt
movsl
mov
mov
pop
les
mov
mov
dec
fnstcw
xorb
dec
or
cltd
and
jle
mov
sub
cmp
and
sti
jecxz
add
clc
jo
sub
std
rclb
shlb
popa
inc
repnz
mov
inc
push
bound
in
nop
mov
ror
aad
outsl
je
inc
shr
mov
mov
push
xor
cltd
sbb
ror
icebp
sub
xor
mov
fstps
nop
pop
xchg
das
test
sub
or
test
jl
push
sub
pop
jne
cmp
fnstcw
push
ss
mov
dec
lods
repz
lock
lods
imul
xchg
mov
and
test
cli
or
mov
pop
call
clc
orl
jg
inc
dec
mov
cltd
aaa
push
and
nop
cmp
ret
xor
in
jno
sbb
adc
mov
idivb
out
ljmp
jp
adc
dec
ljmp
lods
xchg
arpl
insl
sbb
mov
mov
test
mov
sub
sub
mov
dec
sub
movsl
jle
shl
sti
mov
pop
orb
into
fnsave
cmp
mov
inc
xor
pop
and
mov
xchg
loop
inc
push
outsl
dec
xor
inc
scas
jmp
in
test
or
hlt
ljmp
mov
test
inc
mov
xchg
inc
stos
sbb
stos
std
lods
and
repnz
jbe
repnz
push
add
idiv
lcall
xchg
enter
mov
jl
mov
push
mov
sti
cli
scas
push
dec
mov
push
pop
decb
mov
xchg
mov
out
adc
pop
mov
mov
aaa
adc
jae
lock
sbb
dec
add
mov
or
push
inc
addr16
cmp
scas
cmp
mov
xor
push
or
shlb
fs
push
mov
outsb
scas
cmp
fwait
popa
xchg
sti
sarb
clc
and
push
js
sub
inc
ret
jp
mov
cmp
mov
aam
mov
sub
xchg
rcl
cmc
pop
int
inc
ret
mov
les
and
outsl
mov
cmpsl
pop
xchg
jno
and
dec
adc
mov
jo
fs
pushf
fwait
test
cs
fiadds
pop
push
mov
jecxz
stos
xor
inc
add
mov
addb
xlat
scas
std
xchg
scas
push
sbb
inc
sarl
mov
daa
sub
sub
aaa
push
pop
pop
jno
fwait
iret
mov
mov
imul
test
dec
push
arpl
push
lret
mov
lods
mov
lock
repz
lods
jbe
cmp
dec
push
insl
icebp
jo
or
dec
xor
fs
or
addb
ret
movsl
xor
lcall
jnp
daa
inc
add
cmp
jbe
sti
das
mov
fisubrl
cmpsl
fdivr
insb
pop
mov
out
xchg
add
push
gs
ljmp
add
pop
mov
outsl
pop
xchg
sbb
dec
aad
int
mov
loop
lret
outsb
ret
mov
push
es
xor
push
div
xchg
movsb
in
rorb
lahf
xchg
mov
dec
js
jle
test
icebp
mov
lods
bound
or
lahf
rcll
int
dec
push
adc
fwait
int
mov
in
push
pushw
mov
xchg
mov
arpl
ja
vcvtsd2ss
or
cmp
jl
movl
call
imul
pop
jbe
fildll
xchg
add
pushf
leave
jmp
add
shl
test
popa
imul
cld
mov
mov
ret
pop
inc
add
mov
inc
fstpt
jns
pusha
mov
pop
inc
imul
movhlps
push
mov
mov
mov
sub
lret
in
add
sub
popa
test
int3
repnz
jp
adc
addl
mov
fiaddl
dec
or
jns
js
imul
cmc
jle
in
sbb
push
cs
bnd
out
out
inc
aas
lahf
pop
je
loopne
fldpi
decb
fwait
je
or
pushf
aam
in
jge
jb
rclb
loop
or
jmp
icebp
fistpll
fildl
adc
sti
cld
mov
jecxz
jbe
mov
hlt
aad
js
mov
pusha
xchg
lods
sti
out
cmc
jge
ja
mov
mov
add
lock
aad
pop
cmpsb
push
pop
mov
ret
in
icebp
add
cmpsl
leave
jg
fwait
daa
push
sbb
cmp
out
jmp
out
test
test
jecxz
mov
mov
and
sbb
sti
mov
das
scas
cld
inc
loop
inc
bnd
pop
jnp
fs
lea
sub
and
outsl
mov
or
and
sbb
inc
xor
fs
add
shlb
repz
push
ds
sbbl
imul
js
mov
jle
xor
push
push
xor
aam
xchg
adc
iret
push
insb
mov
aam
push
jnp
adc
leave
inc
loopne
xchg
bound
shll
push
push
or
lock
inc
mov
adc
jmp
or
dec
lods
js
mov
push
loopne
imul
and
inc
jecxz
iret
xchg
mov
xchg
aaa
xchg
jp
xlat
sbb
imul
mov
fadd
cwtl
les
xor
mov
leave
push
lds
xchg
cmp
sub
fdivl
jecxz
daa
pop
daa
xor
and
xchg
jecxz
lret
cwtl
mov
mov
int
sub
out
pop
mov
push
and
inc
pusha
fisttpl
out
inc
jp
sbb
ss
daa
mov
inc
pop
cwtl
das
xor
cwtl
fwait
pop
inc
std
out
mov
jne
dec
adc
mov
ret
dec
and
mov
add
dec
xchg
cmp
rcll
insb
jle
popf
and
ss
popf
loop
cmp
adc
jmp
mov
insl
mov
adc
dec
push
cmp
push
pop
push
roll
jno
jge
dec
les
add
xor
jno
cmp
outsl
push
ds
pop
cmp
and
fsts
sbb
mov
sub
repnz
dec
mov
stos
mov
adc
fstpl
push
or
outsl
dec
dec
dec
rorb
fwait
push
xorb
xchg
fisttpll
sahf
mov
mov
dec
xchg
pushf
mov
cmpsb
dec
fdivrs
gs
out
lcall
cmp
pop
and
jns
jae
aad
sbb
pop
jl
movsb
ror
inc
bound
inc
pop
stos
pop
adc
sub
gs
rclb
notl
and
scas
aad
lcall
push
and
cmp
pop
jmp
push
shl
mov
mov
movsl
popf
daa
lds
in
sub
ficompl
pop
fldcw
push
nop
mov
popf
test
mov
push
sub
mov
movsl
repz
push
hlt
adc
sbb
iret
dec
test
mov
jle
int
sub
lods
jmp
testl
iret
mov
add
pop
mov
call
aam
inc
popf
lahf
xchg
addr16
jl
in
jb
iret
fwait
daa
mov
cmp
mov
push
iret
adc
sbb
fsubl
mov
sarl
faddl
jg
push
add
xchg
out
cwtl
add
pusha
pushl
aas
xchg
out
jmp
inc
mov
loopne
aam
rcrl
cmp
hlt
fwait
cs
dec
les
stc
xlat
cmp
gs
test
adc
and
jge
enter
jecxz
movsb
in
sub
push
jmp
adc
pop
rclb
mov
jno
mov
or
lret
dec
mov
fcompl
fwait
into
dec
jecxz
jmp
ljmp
add
int3
xchg
add
mov
test
xchg
mov
xlat
and
lods
sbb
mov
lret
scas
push
cwtl
cmp
push
mov
dec
mov
lea
fdiv
insl
int3
sbb
jp
inc
adc
sbb
fidivl
and
push
mov
repnz
ds
fnstenv
inc
mov
int3
pop
sub
decl
jmp
mov
inc
and
xchg
fstpl
lret
daa
xchg
daa
sbb
jno
sbb
mov
jae
add
add
pcmpeqw
mov
add
mov
gs
out
mov
aas
pusha
mov
jp
xchg
shrl
imul
push
mov
movsl
inc
int
data16
jnp
je
sub
sub
mov
arpl
ffree
repnz
test
repnz
jecxz
jle
test
mov
in
dec
cmpsl
cltd
xchg
enter
mov
xor
add
xchg
outsl
jnp
loop
dec
scas
ret
and
test
cmp
out
rorb
pop
aas
cmpsl
jmp
jg
mov
nop
cli
pop
xor
pop
and
mov
aam
imul
stos
sahf
fildl
das
cmp
stos
loop
or
loop
test
mov
add
lahf
repz
fidivl
ficoml
mov
jl
dec
push
sbb
lcall
cmp
js
cs
cmp
stc
pop
out
repz
mov
mov
loop
jle
inc
nop
idiv
fcmovnb
shrl
cmp
cmp
pop
pop
mov
das
movsl
jno
mov
add
xchg
idiv
hlt
xchg
jmp
cmpsl
inc
lret
sarb
jle
leave
or
pop
sbb
mov
cmpsl
mov
mov
pop
outsl
pop
adc
std
fbld
bound
push
int3
in
insb
push
mov
jecxz
rorb
popa
sbbl
pop
jno
or
and
xchg
mov
jno
scas
add
sub
orl
out
pop
and
bound
dec
cmp
loop
push
enter
adc
sbb
sub
jb
cmp
ret
test
pop
jge
rcrb
add
ja
lock
pop
shufps
loope
xchg
push
lahf
push
push
pop
adc
pop
in
mov
loopne
hlt
lea
push
pop
push
ja
cltd
stos
dec
sbb
pusha
int3
pop
es
dec
lods
test
jnp
push
add
test
repnz
or
cltd
popa
pop
xor
dec
jo
mov
mov
cltd
out
mov
cmpsl
arpl
gs
dec
into
xchg
push
stc
ljmp
js
jns
xchg
les
lahf
mov
out
sub
je
add
js
sbb
stos
std
dec
fisttpl
mov
daa
adc
iret
sub
push
enter
dec
or
lea
cmp
push
pop
outsl
push
fistpl
call
sbb
jnp
repz
xlat
clc
mov
mov
cmc
in
pop
test
or
or
das
mov
pop
stos
sub
jno
fstl
sub
movb
int3
cmp
sub
outsb
stos
push
adc
sti
mov
or
aaa
test
data16
push
cmp
mov
or
and
addb
mov
push
jo
inc
push
out
neg
imul
nop
xchg
jmp
cmpsl
push
ss
dec
push
dec
push
das
or
adcl
dec
rolb
nop
mov
lcall
cltd
call
sbb
and
rorl
or
xlat
call
mov
jno
sarb
push
inc
push
sti
lock
add
xchg
sub
add
dec
push
pop
cs
loopne
and
xchg
mov
cmpsl
or
mov
pusha
ljmp
or
fs
rorb
das
fsub
jns
mov
jle
insb
test
push
loopne
subb
aaa
add
rcr
imul
sub
cli
stos
mov
add
ja
inc
inc
sub
bound
inc
jnp
pop
in
fcmove
subb
sbb
mov
in
sub
leave
push
push
rcl
in
push
dec
cs
xor
jg
inc
ret
into
mov
or
pop
lods
mov
cmp
rcr
fildl
pusha
mov
in
imul
out
imul
inc
repnz
ret
arpl
addb
cmpsl
jno
mov
das
cmp
insb
imul
push
xor
stos
mov
es
shl
push
jns
pop
aad
xor
lea
cmp
jle
mov
loopne
jmp
xchg
add
mov
pop
xor
popa
push
leave
inc
adc
cmp
cmpsl
push
cmp
pushf
pop
add
fmulp
mov
cwtl
insb
in
cltd
insb
pop
inc
ss
xchg
xchg
imul
adc
push
and
push
adc
jb
jo
into
frstor
test
mov
pop
xchg
cmp
lret
and
mov
call
cwtl
clc
outsl
pop
cltd
push
ljmp
pop
xor
mov
lods
hlt
jns
push
out
mov
repnz
mov
movsb
mov
lds
jle
add
das
fwait
or
jb
fdivl
or
push
xchg
and
clc
cmp
es
pop
fcmovb
dec
lock
sub
ss
icebp
jne
push
jmp
mov
sarl
pop
stos
sub
xchg
jno
xchg
int3
inc
sti
cmpsb
pop
xor
pop
pushf
stos
outsb
jne
and
push
leave
or
push
mov
fisubrs
mov
sbb
inc
or
ret
stos
adc
dec
push
ja
jnp
sub
push
fnstcw
adc
dec
sbb
cmp
pop
fsubrs
data16
bswap
sub
lret
push
mov
popa
sub
or
pop
and
jno
mov
fs
rorb
fld
and
out
ret
mov
shrb
test
xchg
arpl
divl
movsl
aaa
lock
fs
jp
icebp
sbb
dec
leave
mov
shlb
aam
lcall
cmp
nop
mov
pop
push
pop
xchg
testb
sub
loop
mov
popa
sbb
jns
adc
inc
movb
mov
dec
orb
lahf
fdivr
dec
xchg
div
jg
int
imul
lahf
inc
popa
repz
addr16
lahf
or
sbb
dec
outsb
imul
adc
jbe
popf
and
sub
lods
ret
jp
imul
inc
push
repnz
push
addb
xchg
cmp
insb
fnstcw
iret
push
xor
mov
pop
pop
sbb
xor
inc
xor
subb
mov
sahf
shrl
inc
stc
fnstcw
ror
roll
inc
mov
mov
pop
pusha
rclb
pop
rol
call
outsl
jg
cmpsl
arpl
stos
int
xor
sti
ret
and
popa
stos
out
cmpsl
adc
rcpps
popf
dec
mov
jnp
inc
dec
jae
or
inc
xchg
fsubrp
push
dec
mov
or
in
sbb
pop
cmp
fs
clc
lcall
iret
inc
pop
mov
mov
push
int3
pop
pop
push
and
idivb
rorb
or
and
add
and
ret
mov
pushf
mov
dec
xchg
test
add
add
inc
lock
mov
fs
cmpsb
xor
into
loop
mov
les
arpl
arpl
and
push
movl
sub
add
pop
xor
mov
sub
sub
jbe
shrl
repnz
xor
out
imulb
and
push
push
pop
ja
fimuls
xor
push
xor
jmp
push
lods
lcall
clc
mov
and
fmul
iret
cmp
inc
or
pusha
pop
sbb
jmp
cld
addr16
inc
frstor
or
dec
cs
cmp
sarl
jne
loope
adc
jmp
sbb
lret
xchg
in
js
cli
xchg
pop
jb
jne
ja
popa
push
sub
xor
mov
gs
mov
enter
iret
and
xchg
je
paddd
and
orps
mov
mov
ret
sti
cmp
pop
adc
cmp
sbb
into
mov
xchg
rclb
pushf
xor
std
cmp
repnz
mov
scas
xchg
jns
mov
in
or
sub
and
xchg
and
lcall
js
adc
sub
aad
sub
mov
xor
xor
sahf
add
jge
stos
mov
mov
push
stc
adc
jmp
inc
popa
aam
lret
push
in
or
in
mov
loop
mov
neg
pop
jge
cmp
jne
das
pop
xchg
repnz
out
xor
scas
in
cmp
and
stos
cmp
inc
lea
scas
mov
lods
mov
sbb
imul
movb
jp
stc
sarl
mov
mov
lret
cld
ror
pop
xchg
aas
dec
imul
add
lea
aas
xor
shlb
sub
xor
mov
cmp
dec
ret
mov
test
loopne
bnd
mov
les
stos
sbb
xlat
mov
mov
setg
pop
std
mov
sti
je
jno
jns
lock
cmp
adc
daa
jbe
xor
pop
std
cld
lods
int
mov
dec
jp
sub
ss
enter
mov
mov
jmp
mov
rorl
cmc
cwtl
pop
mov
jmp
jg
mov
mov
fisttpll
or
cmp
adc
call
pop
mov
scas
fisubrl
hlt
dec
int
sbb
jecxz
idiv
sahf
or
lret
inc
dec
enter
sbb
loope
fwait
loop
gs
push
stos
push
imul
jmp
insl
and
xor
or
mov
xor
mov
ret
dec
push
cmp
jge
into
nop
addb
pushf
jne
or
cmp
mov
rorb
in
repnz
cmp
jnp
cli
mov
aas
cwtl
xor
ja
inc
hlt
je
std
dec
adc
jae
jecxz
pop
pop
in
sar
sub
xor
and
rol
cmc
aam
ret
repz
pop
mov
dec
in
push
sbb
or
adc
inc
dec
xor
mov
xor
sarl
mov
sub
movsb
push
jns
fmull
sbb
mov
jo
add
out
roll
push
inc
pop
lahf
test
dec
bound
jge
push
imul
jge
aam
xchg
push
shll
push
inc
insb
in
sub
sbb
cmp
out
fwait
mov
add
or
mov
imul
arpl
loope
not
sub
test
scas
insb
jo
adc
push
es
xchg
in
cmp
es
push
rolb
lds
lea
push
and
out
hlt
lods
cld
gs
add
ds
add
stc
call
add
je
orb
in
jl
sbb
cmp
jecxz
aas
enter
in
inc
pop
cmpsb
hlt
scas
pop
dec
xor
fwait
jp
push
outsl
sarb
inc
add
pushf
sbb
push
pop
mov
loope
mov
mov
pushf
mov
sahf
sub
dec
push
lret
push
pop
pop
in
js
popa
and
cmp
inc
cmpl
push
and
scas
or
iret
mov
dec
inc
out
lds
pop
test
push
pop
dec
cld
pop
add
mov
xchg
pop
lds
mov
std
in
mov
test
das
testb
sbb
push
in
test
imul
cmpsb
pop
repz
push
xchg
cmp
and
fmuls
call
fcoml
ret
cmc
fdivl
and
faddl
cmp
pushf
sbb
adc
aad
stos
bound
lret
jecxz
fistl
and
jl
fistps
or
and
fisubl
stos
and
push
sbb
lret
push
xchg
xor
add
push
sub
jl
lahf
jo
ja
cwtl
inc
jo
in
add
mov
push
ss
xchg
bound
dec
pushf
cmpsb
xor
or
inc
add
xlat
shlb
and
xor
int
mull
bound
mov
jne
dec
inc
push
or
test
iret
or
fcmovb
xorb
pop
ret
jmp
pop
inc
xchg
movb
jb
call
sahf
pushf
je
fdivs
addl
cld
cs
mov
inc
pop
xor
out
xchg
test
scas
cmp
sub
scas
push
xchg
cmp
mov
dec
xchg
mov
jnp
mov
sub
mov
loopne
pop
shlb
rclb
mov
cltd
std
mov
pop
mov
shlb
cmp
xchg
test
push
xor
daa
popf
push
adcl
xchg
nop
jnp
adc
xchg
popl
jl
sbb
je
aas
in
cwtl
sub
ret
dec
sub
scas
sub
stos
pusha
mov
idiv
sbb
outsb
mov
leave
mov
add
cmp
fists
mov
xchg
and
mov
xchg
in
leave
rolb
sub
mov
insl
imul
mov
mov
int
inc
out
repz
loopne
imul
inc
add
lods
ret
shl
jge
cmp
and
jb
and
jge
insl
xchg
xor
out
int3
ds
faddl
and
xchg
adc
aad
fstpt
inc
jl
inc
popa
or
mov
pop
add
xchg
cmp
add
pop
xchg
cli
pop
hlt
jbe
imul
mov
int
jbe
shll
adc
in
jecxz
jl
pop
adc
cwtl
dec
xchg
sub
lock
in
xor
cwtl
lcall
adc
or
sarb
daa
push
or
xchg
inc
ljmp
or
shll
gs
push
inc
xor
das
sub
adc
pop
scas
inc
pop
jb
cmp
arpl
aaa
cmp
xor
sub
roll
not
clc
or
mov
mov
dec
lods
inc
data16
pop
arpl
push
pop
icebp
out
jle
arpl
je
in
mov
pop
jg
push
cs
jle
and
sub
aad
es
fxch
dec
clc
repz
sbb
sbb
lcall
sub
adc
xchg
arpl
movsl
cmp
and
jae
repz
cmp
stc
rcrb
data16
inc
and
ds
jns
xor
push
mov
rcl
dec
jns
pop
jns
mov
icebp
sbb
subb
out
mov
in
insb
push
jns
cmp
int
mov
int3
loope
lods
xlat
mov
inc
cmp
jecxz
cmp
ljmp
test
inc
sti
ret
aas
fsts
es
int
lret
mov
ret
inc
xor
lock
mov
pop
cmp
or
push
dec
sub
adc
sti
mov
sbb
jnp
imul
and
xchg
test
cwtl
das
lods
js
push
add
xor
add
mov
fwait
movsl
xchg
mov
das
negl
std
iret
call
lcall
aam
push
unpcklps
int
adcl
outsb
decb
push
xchg
aas
imulb
pop
mov
fistps
loopne
mov
in
mov
enter
in
lods
insb
lret
push
mov
mov
repz
jg
rorl
xor
shrl
imul
nop
int3
bound
or
iret
cmpsl
pop
inc
out
jns
sbb
call
cmc
mov
fwait
daa
repnz
mov
xchg
nop
pop
adc
icebp
xchg
and
or
or
mov
fsubrs
mov
in
push
mov
mov
mov
lds
adc
pop
inc
inc
adc
cmp
pusha
jg
mov
push
pop
cmp
and
sbb
and
xor
mov
bound
test
add
movsb
int3
jge
fiaddl
xor
out
bnd
mov
jb
dec
std
cld
cltd
mov
cmpsb
cltd
xchg
cwtl
pop
xor
addr16
lock
xchg
fmull
addr16
lret
pop
je
repz
cmp
aam
popf
out
cmp
movsl
pop
jg
push
push
mov
push
mov
inc
xchg
add
imulb
mov
adc
adc
sbb
push
outsb
jne
psrlq
sub
icebp
pop
or
imul
add
push
int3
dec
mov
sbb
xchg
sbb
jo
mov
or
jge
mov
sbb
test
cwtl
sbb
jae
lock
add
add
cmp
sub
das
pop
sub
pop
test
or
and
and
push
scas
inc
adc
push
outsl
aaa
ss
lds
das
into
sub
fs
add
cli
inc
lcall
mov
in
jo
push
in
ret
lcall
dec
movsl
js
dec
cmp
out
push
mov
pop
xchg
jl
out
nop
dec
repnz
outsb
dec
or
test
mov
and
je
popf
adc
inc
adc
sub
cmc
xor
daa
inc
inc
shrl
or
dec
out
popf
push
and
lock
cmp
or
cmp
cmp
mov
or
cmc
and
lds
sbb
in
neg
sbb
fwait
leave
push
xchg
sbb
dec
sti
leave
mov
sti
mov
in
mov
xchg
lods
mov
sarb
and
or
pop
jno
cmpb
arpl
pop
cmp
lahf
rcl
dec
divl
call
jl
ja
add
mov
lock
aam
xor
cltd
mov
xlat
lcall
sub
jp
incl
fs
out
ret
mov
xor
mov
dec
lcall
lret
adc
xor
hlt
imul
sarb
bound
aas
pushf
clc
dec
mov
sub
jo
mov
decb
xchg
inc
fcoms
push
jnp
pop
mov
stos
fs
cmpsb
sub
and
movsb
out
xchg
add
clc
jmp
sbb
loop
sub
mov
movsb
pop
incl
fsubrl
lds
add
add
andb
lahf
push
cltd
adc
push
testb
lea
push
addb
pusha
call
jo,pt
outsb
ja
in
rclb
and
aas
scas
out
xlat
cmp
mov
sbb
decl
mov
lea
je
dec
cli
loope
mov
lret
cmc
xchg
or
add
out
cltd
xor
shlb
js
lock
push
iret
fcompl
insl
cmp
mov
mov
add
cmp
lock
bound
xor
lret
dec
dec
xor
dec
dec
test
xchg
sarb
loopne
or
pop
sub
ss
mov
lods
aam
mov
icebp
jp
movsb
mov
lea
cli
add
or
cmpsl
imul
sbb
mov
rcll
mov
enter
pusha
cltd
adc
cmp
and
scas
out
jne
cwtl
std
int3
dec
dec
out
sbb
xchg
sub
pop
and
xor
adc
pusha
xor
mov
in
mov
add
mov
push
xor
adc
jb
mov
pop
ret
fiaddl
inc
data16
xchg
pop
xor
out
fcmovu
sub
add
mov
aas
pop
cmpsl
addr16
or
stos
pop
flds
movsl
int
dec
pop
sub
movsb
loop
bound
test
scas
cwtl
jb
sub
push
call
inc
ret
xchg
xchg
jne
shr
cli
lahf
jmp
gs
pop
decb
xchg
cmp
xor
lock
pop
push
aad
pop
xchg
push
lods
ret
fdivr
xor
popf
dec
add
out
push
rclb
lea
push
mov
fistpl
cmpsl
decl
sbb
loopne
and
loope
out
xor
jnp
outsl
adc
and
orb
add
rclb
adc
ljmp
lea
adc
pop
mov
scas
repnz
orl
in
div
sub
xor
push
je
pop
adc
dec
sub
adc
xor
cmovl
fnstenv
mov
addr16
repnz
mov
data16
add
dec
loop
mov
stc
int
inc
fiadds
ss
pop
xchg
mov
loopne
mov
lds
push
push
lods
xchg
into
sbb
adc
hlt
mov
mov
pop
mov
clc
jge
cmp
out
mov
inc
and
int3
mov
inc
fs
mov
ret
jb
xor
xlat
cltd
repnz
mov
add
ret
das
or
pop
sub
xlat
push
jl
aaa
stos
mov
cltd
pop
jbe
lock
jo
xchg
dec
cmpsl
jo
stos
jbe
test
fcompl
xor
ss
add
xor
pop
xchg
fsts
sahf
xchg
pop
sbb
aaa
push
inc
iret
pushf
rorl
lock
add
inc
fisubrs
lock
mov
adc
inc
pop
ja
cltd
add
and
test
ja
adc
add
sub
scas
orl
and
icebp
rorb
das
mov
push
xor
mov
mov
outsl
add
jge
and
push
inc
cmc
mov
jp
fwait
pushf
add
pop
cmp
xchg
cmp
sbbb
pusha
lods
mov
imul
test
cmp
outsl
pop
and
les
cmp
push
mov
pusha
mov
fistpl
aam
and
les
daa
adc
fcoms
sbb
outsb
jno
mov
jne
lock
bound
xchg
mov
and
xor
mov
test
and
fisttps
fcmove
lahf
fistps
mov
frstor
and
or
pusha
pop
orl
addr16
add
lea
imul
xchg
inc
fstps
movsl
pop
or
mov
dec
and
mov
ret
cmpsb
adc
sub
xchg
mov
in
out
push
mov
mov
sub
les
sbb
and
nop
outsb
shl
insl
lcall
jecxz
enter
out
pop
mov
shll
ret
scas
lock
jmp
scas
dec
mov
jmp
dec
push
enter
jg
mov
or
movsw
mov
or
adc
clc
pop
mov
ja
or
pop
pusha
mov
or
mov
leave
xor
mov
lahf
iret
pop
sbb
mov
sub
mov
fdivp
iret
sbb
or
xor
aaa
add
inc
lods
repnz
push
xor
push
cli
test
dec
push
outsl
clc
repz
adc
xor
sub
xor
sbb
ss
mov
lret
mov
aad
mov
xorb
mov
out
jg
daa
sbb
xchg
cld
fsubrl
adc
inc
int3
mov
push
mov
adc
and
cwtl
out
fldenv
cmp
push
inc
xor
loope
mov
inc
jg
adc
ja
notb
mov
ret
push
ret
sub
pop
lock
push
xchg
andl
fldt
ja
mov
pop
jmp
jl
fcoms
mov
aas
in
inc
aam
rcr
lcall
inc
mov
push
xor
ljmp
jnp
das
pop
sub
jl
xor
movsb
pop
ret
mov
ret
sbb
lahf
push
mov
fimuls
out
cltd
pop
and
pushf
scas
out
pop
fisttpll
ror
or
add
ds
xchg
scas
dec
out
hlt
icebp
jle
dec
xor
sets
dec
sbb
push
push
sbb
in
mov
inc
sbb
lcall
pop
mov
ds
pop
popl
cmp
or
dec
out
mov
push
movsb
push
out
push
enter
sbb
push
cwtl
jge
arpl
cld
std
call
subb
inc
rorb
pusha
jmp
imulb
loope
jno
outsl
or
ds
inc
gs
mov
mov
addr16
xor
mov
ds
and
add
sub
dec
insl
aam
inc
jp
mov
cltd
js
mov
inc
lahf
push
pop
sahf
repz
cmp
cmp
sbb
and
mov
sub
xor
mov
inc
and
push
int
repnz
pop
dec
lea
sub
icebp
inc
cld
xchg
in
xor
pop
js
cli
daa
push
pop
fcmovnb
lcall
lods
mov
sbb
or
jl
jae
adc
popa
cltd
and
jns
pushf
sar
jle
je
mov
rolb
ret
inc
cmp
inc
jmp
xlat
pop
aaa
scas
push
pop
out
in
dec
int3
adc
mov
inc
dec
mov
mov
scas
xor
ret
mov
mov
popa
adc
les
pop
sub
mov
test
dec
inc
call
nop
repnz
xor
or
scas
cmpsl
xchg
in
mov
insl
or
cmc
and
jbe
cmp
adc
push
jecxz
jecxz
add
push
dec
sub
push
stc
lcall
cmpsl
sahf
loopne
call
inc
jnp
lods
mov
bound
dec
js
pop
pop
mov
add
inc
rolb
imul
mov
xchg
rol
pop
incl
dec
jb
fwait
jg
xchg
or
jmp
push
sub
push
mov
aaa
sub
pop
cmp
outsb
dec
ret
lret
lret
jge
inc
aad
fildll
mov
stos
inc
ss
leave
cmp
mov
out
lods
sti
loop
fisubl
call
dec
dec
lret
jmp
std
out
inc
clc
adc
fucomip
clc
xor
cld
call
xorl
add
jae
repz
or
cmp
xchg
sub
mov
push
nop
mov
xchg
lods
arpl
mov
imul
je
and
sbb
lret
jl
enter
pop
out
mov
mov
pusha
xor
in
push
fwait
add
cmp
in
add
mov
shl
jne
push
pop
cmpsl
jbe,pn
sahf
xor
rcr
pop
lods
xor
or
mov
xchg
push
iret
xchg
mov
in
daa
or
cmp
enter
int
insl
mov
mov
repnz
mov
test
test
inc
popa
mov
test
mov
out
cwtl
lds
push
mov
push
repz
int3
mov
incl
fldl
jg
mov
sub
shlb
dec
js
push
pop
sar
xor
add
dec
mov
lret
loopne
iret
js
adc
jp
xorl
