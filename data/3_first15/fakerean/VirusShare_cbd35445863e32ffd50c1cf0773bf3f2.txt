jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
sbb
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
mov
inc
add
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
jnp
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
xchg
lds
ja
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
lea
sbb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
or
inc
add
add
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
push
mov
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
movsl
inc
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
int
inc
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
add
sbb
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
aaa
popf
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
mov
pop
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
movsl
mov
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
dec
mov
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
lods
inc
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
loop
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
dec
lret
inc
add
push
and
mov
movl
movl
movb
mov
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lahf
adc
add
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
pusha
push
call
mov
cmpsl
pusha
jb
ljmp
pop
addr16
xchg
add
shll
add
stc
add
ffree
scas
js
lcall
jb
add
add
add
lods
int
pop
out
add
addb
lret
add
cmpsl
enter
jb
ror
add
into
fstl
add
fmulp
add
add
jp
add
jecxz
test
jge
stos
xchg
add
push
call
xchg
fildl
add
jecxz
cmpsl
mov
add
mov
arpl
add
nop
hlt
mov
mov
add
mov
add
pop
fiadds
test
loope
ljmp
add
add
into
add
mov
iret
add
add
xlat
cwtl
add
push
notl
mov
add
loopne
adc
popa
push
push
push
call
mov
add
lahf
insb
push
add
out
movb
add
imul
stos
fs
add
in
out
loope
arpl
add
leave
pushf
mov
add
add
idivl
pop
mov
nop
mov
add
cltd
add
ja
add
cld
subl
xorl
pop
movl
popl
push
push
push
push
push
call
add
add
out
lds
mov
mov
into
shr
les
add
add
push
xchg
mov
arpl
popf
jno
fs
add
cwtl
add
add
jmp
add
outsl
mov
lods
jecxz
mov
lods
add
add
mov
xchg
shll
test
mov
lea
pop
push
push
push
push
push
call
add
jne
xchg
lods
fiaddl
add
push
lcall
shrl
pop
add
add
fucomi
addl
add
jge
add
hlt
cmpsl
jle
mov
add
add
in
add
xchg
xchg
sahf
mov
cmpsl
mov
add
mov
add
add
xchg
add
lock
mov
mov
arpl
jns
push
lock
mov
add
add
or
mov
pop
mov
lea
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
ffreep
add
add
lcall
scas
mov
add
mov
iret
xchg
addb
mov
cmpsl
add
mov
out
out
pop
add
in
add
add
js
fidivrl
add
stos
add
sahf
add
add
add
add
jns
xchg
out
scas
add
aam
bound
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
jnp
mov
out
add
add
add
add
in
lahf
add
add
jne
add
pushf
mov
out
add
stos
add
sti
stos
mov
pushf
mov
add
mov
lcall
add
std
push
pop
fiaddl
data16
mov
pop
pop
add
add
add
add
jp
xchg
ja
jne
out
in
xchg
xlat
in
stos
pop
push
add
mov
lea
pop
call
call
push
push
lea
push
push
lea
push
push
call
add
add
add
add
mov
lahf
popa
in
xlat
mov
jge
test
pop
add
insb
cmpsl
lods
pusha
lods
cmpsb
pop
fs
jae
mov
add
mov
add
add
add
add
iret
add
add
cmpsb
addl
add
add
add
lcall
add
pop
pusha
out
mov
add
cld
lea
pop
push
push
lea
push
push
lea
push
push
call
add
add
mov
add
add
nop
add
mov
add
jne
js
lods
add
roll
add
add
iret
add
test
shl
test
add
in
push
add
add
xchg
lahf
add
mov
stos
aad
xlat
add
filds
add
add
add
test
addr16
call
jmp
ret
push
push
push
push
push
push
push
push
lea
push
call
add
add
addl
add
fiaddl
pop
int3
jge
sti
add
add
addr16
add
add
pop
out
aad
add
test
mov
add
mov
add
hlt
pop
ret
xchg
pop
add
scas
add
addb
xchg
add
add
jbe
push
jo
rolb
popa
testl
jbe
addb
les
inc
in
mov
push
push
push
push
lea
push
lea
push
push
call
into
add
pop
add
subb
add
js
add
add
push
add
movsl
add
mov
add
jge
push
stos
add
add
mov
pop
out
imul
mov
cmc
add
add
lcall
add
mov
fadds
mov
add
loope
adcl
sbb
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
jp
js
fstpl
add
lods
jp
ret
jle
pop
push
xor
test
faddl
add
add
addb
add
xlat
test
mov
add
pop
add
lcall
add
add
add
jbe
add
mov
add
clc
fistpl
mov
into
pop
lcall
add
mov
cld
lea
pop
add
add
mov
push
push
push
push
lea
push
call
les
test
add
mov
mov
fwait
add
mov
mov
add
add
add
jmp
xchg
rolb
add
push
mov
add
mov
xlat
sahf
mov
test
add
mov
fisubs
add
mov
add
cwtl
addb
add
add
in
jp
add
push
mov
lea
pop
xor
push
push
lea
push
call
push
ja
push
add
add
add
mov
mov
jae
fildll
lock
test
add
push
add
mov
add
xchg
in
add
iret
add
add
add
add
lds
mov
add
add
mov
add
add
fimull
mov
sti
cld
add
add
data16
add
push
push
push
lea
push
call
add
add
add
xchg
add
add
bound
fildl
add
add
jmp
add
mov
scas
push
add
jmp
out
add
stos
add
add
add
add
mov
push
add
icebp
mov
in
add
roll
add
add
loope
into
lock
cli
pushf
popa
add
bound
pop
add
call
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
push
call
jns
add
add
rolb
xchg
jp
add
add
orl
mov
pop
out
add
icebp
fwait
push
lret
add
xchg
add
clc
mov
add
add
fiadds
lcall
lret
mov
add
add
clc
outsl
push
rolb
les
sbb
push
push
push
push
call
add
insb
xchg
je
mov
je
mov
add
add
xlat
loope
cli
mov
mov
scas
xchg
add
push
fcompl
add
add
xchg
enter
jnp
mov
push
add
fldl
lods
pop
add
mov
jbe
xchg
insb
add
orb
add
int
lock
add
add
pop
rcl
add
cwtl
add
cld
orb
add
push
push
not
lea
not
rol
push
xor
add
inc
shl
dec
sub
sub
pop
lea
rol
lea
pop
push
push
push
push
push
call
add
mov
loopne
leave
repnz
mov
into
add
pop
aam
add
rcl
imul
pop
lret
loope
add
add
cwtl
add
add
imul
pusha
add
rolb
xchg
test
jnp
cwtl
ja
add
add
add
iret
jae
mov
add
add
add
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
loope
push
add
stc
add
xchg
mov
add
int
cld
add
aad
fsubrs
int
add
mov
add
rcr
test
add
add
add
push
jns
test
mov
add
add
add
fdivrl
jo
jae
mov
lea
pop
call
mov
movl
push
push
push
lea
push
push
lea
push
call
aam
insb
faddl
add
push
jne
roll
add
stos
out
add
loope
add
jecxz
add
jl
add
add
add
jmp
add
xchg
xchg
jae
mov
mov
add
jae
mov
fbstp
mov
roll
out
scas
add
add
add
lods
loop
jecxz
pushf
add
mov
mov
clc
pushw
rcrl
pop
mov
lea
pop
lea
push
push
lea
push
push
push
push
push
call
add
out
movsb
add
cmpsb
cwtl
mov
push
out
xchg
jbe
hlt
mov
cld
add
insb
stos
add
add
mov
push
cmc
test
iret
aad
push
add
out
add
pop
in
popf
add
add
add
jbe
aad
mov
mov
add
add
add
add
add
ja
mul
cwtl
pop
fdivs
mov
lea
pop
push
pushl
push
push
push
push
push
push
lea
push
push
call
add
add
xchg
xchg
test
push
scas
add
addb
add
add
add
pop
roll
add
xchg
push
fcompl
mov
jne
gs
add
jb
jbe
add
mov
stc
add
jns
add
sti
mov
enter
cmc
roll
add
ljmp
add
lret
js
ror
lods
lahf
imulb
roll
mov
int3
lea
pop
pushl
call
push
push
push
push
push
call
sahf
mov
iret
add
int3
add
cli
out
add
loopne
add
loopne
add
add
push
loopne
aad
lds
pushf
lahf
mov
enter
push
xchg
enter
add
push
stos
test
movl
imul
add
add
mov
add
add
push
add
add
pop
jl
sti
mov
mov
lea
pop
pushl
push
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
lcall
add
add
add
cltd
add
add
fidivrs
jo
add
mov
cwtl
mov
popf
loop
out
out
nop
mov
add
pop
rolb
mov
popl
mov
shrl
add
push
mov
add
add
gs
cld
arpl
pushf
rorb
pop
pushl
call
push
push
sub
push
sub
add
dec
sub
sub
sub
lea
shr
pop
rol
add
pop
push
push
push
push
lea
push
push
call
mov
push
mov
add
push
add
add
add
sarl
xchg
add
mov
add
add
rolb
add
push
push
mov
loop
add
push
addl
add
add
mov
push
popf
add
add
enter
xchg
add
add
cld
add
out
ja
add
pop
pushl
push
push
lea
push
lea
push
push
call
add
xchg
mov
push
mov
add
pop
icebp
add
jbe
mov
test
mov
out
add
add
outsl
fadd
add
mov
aam
jp
in
mov
add
lret
cmpb
add
testl
add
pop
add
andb
add
mov
lea
pop
call
push
push
push
not
shl
push
or
inc
add
lea
not
sub
ror
add
pop
shr
pop
push
push
push
push
push
push
push
push
push
call
stos
add
stc
add
mov
pusha
add
xchg
add
xchg
add
stos
cmc
scas
addl
mov
aam
mov
test
rolb
testl
roll
addr16
mov
add
ljmp
add
les
add
jbe
mov
jne
add
sar
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
int
int
cli
add
add
out
xchg
add
fdivl
add
test
je
nop
pop
loope
pop
rclb
add
incb
shl
add
test
subl
in
loope
popf
int
mov
mov
nop
pop
add
xlat
int
arpl
add
js
add
add
add
movb
pop
add
jmp
bound
sub
rorb
shrl
push
pop
pop
lea
push
push
lea
push
push
lea
push
push
push
call
movsb
stos
add
add
add
lret
jo
add
jo
loope
int3
add
add
add
stos
mov
mov
insb
add
clc
jns
loopne
jnp
xchg
add
pop
mov
jle
add
add
aam
loopne
mov
add
add
add
add
clc
lods
mov
movb
push
add
aam
xorb
lea
pop
push
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
les
test
add
pop
add
add
jp
xlat
add
push
sahf
add
lods
fs
push
test
imul
push
pop
in
jns
testb
pop
incb
add
add
lcall
testb
add
sahf
out
out
mov
rcrw
fnstenv
iret
add
gs
jp
gs
add
xchg
subb
faddl
int3
add
mov
lea
pop
add
add
add
push
push
lea
push
call
mov
add
add
in
stos
icebp
jge
add
add
xchg
add
add
add
add
jmp
add
mov
add
add
add
imull
mov
add
popl
fsubp
xchg
add
cmpsb
xchg
add
add
add
fdiv
add
add
test
jae
mov
out
rcr
loop
int3
push
add
mov
mov
lea
pop
mov
xor
push
push
call
mov
add
pop
pop
add
mov
sbb
les
add
add
mov
add
add
pushf
add
add
add
data16
test
mov
lock
add
shl
add
mov
leave
test
pop
xchg
imul
add
shlb
pop
loop
call
mov
mov
push
in
add
mov
lea
pop
add
push
push
lea
push
push
lea
push
call
fisubrl
add
jle
add
pop
mov
imul
mov
add
je
add
xchg
jns
je
jp
int
pop
imul
xchg
fcmovu
test
add
add
push
push
add
jne
mov
bound
add
xchg
add
push
pop
xchg
add
add
push
jae
push
sti
imul
les
mov
xor
push
push
call
repnz
mov
add
clc
add
jo
jp
jl
loopne
add
add
add
out
fadds
cmpsb
mov
les
add
mov
add
add
add
add
add
into
in
add
mov
add
add
add
repnz
jnp
lahf
aam
ret
lea
fdecstp
xchg
add
into
test
fsubs
aam
fildl
iret
fadds
mov
lea
pop
add
pop
mov
xor
push
lea
push
push
push
push
push
push
call
jne
mov
xchg
add
js
enter
mov
add
xchg
xlat
add
add
push
mov
add
add
mov
fisubs
fucom
add
add
leave
xchg
cmc
add
add
add
jnp
mov
pusha
add
mov
lock
xchg
scas
add
fwait
mov
xorb
les
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lahf
add
iret
in
add
add
out
leave
in
add
stc
fsubs
out
xlat
mov
in
ja
neg
pop
add
pusha
add
add
int3
mov
add
mov
scas
xchg
cmc
cwtl
test
add
jp
lods
mov
test
stos
in
pop
push
clc
push
loop
out
add
add
cmpb
add
ficoms
clc
scas
lock
in
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
cld
stc
mov
add
add
add
lock
movl
into
loope
lea
add
push
aad
arpl
add
loope
sahf
les
add
aam
out
insb
add
imul
add
fnstsw
add
add
add
add
add
cwtl
add
lea
pop
xor
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
mov
add
lea
flds
mov
out
mov
push
popa
push
clc
add
mov
mov
roll
add
shl
add
jns
add
test
xchg
test
cld
mov
sub
imul
mov
hlt
lret
mov
xchg
jns
add
rolb
add
les
les
lea
push
push
lea
push
push
lea
push
call
mov
stc
add
cli
mov
lahf
mov
add
fwait
hlt
imul
add
add
mov
pushf
add
lea
add
add
ja
cwtl
pop
add
add
cmpsl
enter
jmp
jae
test
mov
jns
mov
clc
mov
add
add
add
fstps
addb
mov
xchg
push
add
mov
lea
pop
sub
pop
rep
push
push
push
lea
push
push
call
outsl
add
jle
add
popa
cmpl
add
add
insb
add
push
pusha
jne
ljmp
jb
jns
mov
incb
movsb
add
mov
loop
push
add
int
lods
add
mov
std
add
add
push
add
add
add
mov
lea
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
fildl
mov
ljmp
test
movb
mov
mov
add
fs
cmpb
mov
repnz
ljmp
ja
add
scas
add
jp
push
pop
jge
popf
fiadds
rcr
add
add
lds
int3
add
mov
lea
add
add
into
mov
insb
jmp
incb
pop
mov
lea
pop
mov
push
push
push
call
cmc
test
add
jns
pop
faddl
add
add
add
add
add
out
ficompl
xchg
add
add
add
add
add
add
pushf
add
add
mov
rcrb
jmp
push
in
push
add
xchg
add
addb
sahf
iret
rclb
add
pop
add
add
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
movl
jecxz
test
in
insb
add
test
add
mov
loopne
add
stc
add
scas
adcb
sarb
add
jb
add
add
add
nop
add
repnz
lret
bound
add
pop
popf
add
clc
add
add
push
mov
orb
add
push
push
lea
push
lea
push
push
lea
push
call
add
js
mov
lret
add
add
pop
nop
add
add
cltd
add
out
add
mov
add
in
xchg
push
push
pop
stos
fildl
push
roll
add
aam
addr16
mov
clc
add
add
add
mov
add
popa
add
mov
popa
push
in
lods
pusha
loope
add
mov
mov
add
movsl
mov
mov
add
jl
add
imul
mov
lea
pop
mov
push
push
push
push
lea
push
push
call
push
cld
add
fs
add
mov
add
add
popf
add
fwait
add
ja
stos
add
add
out
int3
arpl
in
xchg
push
add
add
add
cld
xlat
add
add
rcr
rolb
out
mov
xchg
add
jnp
into
add
add
add
fisubl
add
xchg
add
add
mov
lea
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
test
sti
pop
rolb
jno
stos
add
jle
ret
add
add
add
hlt
add
scas
add
loopne
add
in
loope
add
in
add
add
add
add
add
mov
test
mov
addr16
out
cmpsl
jmp
xorb
cmc
add
add
sahf
mov
mov
lea
pop
add
push
lea
push
push
call
add
add
lret
add
mov
add
add
arpl
jmp
cltd
add
rolb
lret
add
add
ret
scas
add
add
ljmp
cmc
mov
add
add
fcomip
or
add
push
push
jae
add
test
mov
add
pop
jle
add
pop
mov
push
push
push
call
xchg
add
add
jge
mov
rolb
add
loope
add
lods
mov
lds
lods
add
stos
mov
add
add
add
cmpsl
add
jl
add
sti
mov
add
addr16
jo
add
enter
add
add
add
add
add
rorb
mov
lea
pop
xor
push
push
call
lock
mov
movb
jne
cld
frstor
loope
add
mov
add
push
add
add
imul
mov
stc
mov
pop
mov
mov
add
pop
in
add
out
mov
add
mov
incb
add
test
push
add
mov
lea
pop
add
push
push
call
xchg
jbe
jae
stos
add
arpl
add
lahf
cmc
add
add
add
add
lock
stos
add
jle
mov
cmc
test
add
add
enter
arpl
iret
nop
jmp
add
std
add
add
lret
aad
push
add
add
add
pop
add
xchg
pop
mov
lea
pop
mov
xor
add
push
lea
push
push
push
lea
push
push
push
call
popa
in
add
fdivrl
add
fistpll
mov
push
lcall
bound
add
add
mov
orb
mov
pop
add
xchg
push
add
popa
cmpsb
mov
stos
add
lea
add
push
test
add
pop
pop
add
stos
jmp
sahf
scas
add
flds
jmp
mov
lea
pop
add
push
push
push
push
push
push
push
push
call
add
add
add
add
rolb
add
add
mov
fs
decb
pop
les
add
add
pop
add
test
cli
add
in
test
lret
jns
add
sar
cld
ja
add
add
xchg
mov
lea
pop
mov
push
push
sub
add
push
or
not
add
dec
inc
sub
shr
sub
ror
inc
pop
add
pop
push
push
push
push
call
imul
xchg
call
lock
mov
add
xchg
add
add
scas
flds
iret
add
xchg
add
jbe
add
pushf
rcl
add
add
add
fadds
gs
add
stos
add
add
add
mov
roll
add
mov
add
fiaddl
mov
out
scas
lods
filds
push
add
mov
lea
pop
pushl
call
push
push
push
call
jae
mov
mov
fadds
lds
in
bound
add
mov
jmp
je
push
add
add
add
push
pop
mov
add
lret
cmpsl
add
add
mov
mov
add
add
in
cld
nop
xchg
mov
cmpsl
fildl
add
into
data16
pop
push
push
push
add
lea
push
sub
add
sub
add
pop
shr
ror
shr
pop
push
push
push
push
call
divb
mul
xchg
add
shl
add
add
jne
sti
add
test
popa
mov
filds
cmc
stos
mov
add
fcomi
add
add
repnz
xchg
rolb
add
add
add
add
add
enter
movsb
lret
xlat
lods
nop
jle
mov
bound
pop
push
push
call
push
push
push
lea
push
lea
push
push
push
push
call
int3
add
add
add
add
xchg
add
test
into
add
fwait
add
add
fistpll
add
addb
add
jns
xchg
add
add
add
repnz
mov
out
jp
cli
mov
gs
addb
add
pusha
stc
add
cmpsb
add
add
add
mov
lea
pop
mov
push
push
call
add
add
add
fadds
in
add
xchg
imul
lock
add
mov
in
mov
mov
lcall
mov
cwtl
icebp
add
mov
push
xorb
fldl
sarl
arpl
scas
add
test
add
add
pop
add
jb
mov
lea
pop
push
push
mov
push
lea
push
push
push
push
lea
push
push
push
call
call
popa
jb
mov
add
add
mov
in
push
add
fs
add
add
jno
add
loope
lcall
add
add
add
shrl
jbe
mov
insb
jmp
add
add
int
pop
add
lods
out
add
vpxor
mov
mov
arpl
insb
push
add
arpl
jmp
loop
add
mov
lea
pop
add
add
add
push
push
push
push
push
push
push
push
push
call
mov
xchg
add
pop
xlat
add
add
stos
pushf
add
mov
add
add
add
add
iret
push
sahf
out
mov
fwait
popf
add
add
std
add
mov
mov
shrl
xchg
test
add
cltd
int3
pop
add
jl
mov
add
popf
mov
jbe
cmpsl
add
add
fmull
jae
xor
push
push
push
push
call
mov
lret
cwtl
push
add
add
rol
add
add
cltd
add
lods
loope
pop
add
lret
add
pop
add
imul
lock
rolb
add
add
addl
add
add
xchg
test
xchg
mov
cmc
rcrb
add
mov
jb
mov
lea
pop
add
push
mov
push
push
push
push
push
push
call
add
add
push
push
movsl
add
loop
ljmp
roll
rolb
push
insb
jge
add
arpl
arpl
mov
in
lock
xchg
stc
mov
lret
add
mov
add
add
add
mov
add
add
pop
add
mov
xchg
fwait
arpl
jmp
add
mov
lea
pop
xor
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
xchg
ljmp
add
pusha
add
add
pop
icebp
out
add
cmpsl
leave
sarl
enter
test
movsb
add
mov
add
add
filds
jae
lods
subl
push
dec
add
add
rorb
add
int3
lea
pop
add
push
push
push
push
call
in
add
in
stos
add
rcr
add
add
shrl
loop
push
add
andl
imul
repnz
mov
mov
jae
add
add
jb
jns
add
test
pop
jle
filds
jnp
add
stos
pop
add
add
add
mov
lea
pop
add
push
push
lea
push
push
lea
push
call
jle
add
push
add
add
add
add
add
fucomi
mov
lods
mov
filds
jae
jmp
xchg
cld
in
popl
sahf
in
add
fiaddl
loope
cwtl
loopne
std
flds
jp
add
mov
mov
aad
xlat
flds
add
mov
xchg
popf
insb
add
add
add
add
in
in
jbe
mov
test
adc
pop
mov
xor
push
push
push
push
push
push
push
push
lea
push
call
add
add
js
outsl
mov
add
roll
add
les
add
add
gs
add
push
push
scas
js
fwait
in
mov
mov
add
mov
pusha
add
add
add
add
mov
rolb
jae
fiaddl
mov
add
add
add
testl
add
pop
rep
push
lea
push
push
push
push
push
push
push
call
enter
push
in
add
mov
mov
pop
xchg
xchg
mov
add
push
testb
pop
add
add
or
xchg
add
push
jnp
fmulp
add
lods
cmp
add
add
cld
jne
lods
mov
add
jnp
nop
add
aad
fiaddl
popf
lret
add
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
lock
lret
mov
ja
add
xchg
push
les
add
fadd
mov
jbe
shll
jmp
add
rclb
mov
pop
imul
xchg
add
add
add
push
test
add
out
in
scas
push
add
test
nop
lcall
add
add
add
add
icebp
add
stos
add
add
addr16
jno
int3
lea
pop
xor
push
push
push
push
push
push
lea
push
call
push
push
push
lcall
add
pusha
add
add
fcmovnbe
outsl
push
movl
mov
cli
add
add
add
data16
add
mov
rolb
add
add
icebp
test
ljmp
add
loopne
pop
out
add
pop
add
jns
mov
fmull
les
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
int
iret
stos
mov
mov
pop
add
mov
add
mov
scas
add
ljmp
data16
xchg
fists
lcall
nop
ljmp
jl
push
add
cmc
out
add
ljmp
mov
shlb
lea
pop
or
je
mov
xor
push
lea
push
push
push
push
push
push
call
add
add
jb
shll
test
add
pop
cld
mov
lcall
mov
mov
fstps
push
add
cwtl
add
je
jb
add
popa
add
ret
out
fidivl
lret
addl
adc
filds
mov
loop
push
add
pop
mov
xor
push
push
push
push
push
push
push
lea
push
push
lea
push
call
pop
add
movsl
add
faddp
mov
mov
add
pusha
incb
aam
in
faddl
jle
subb
mov
add
add
xchg
jl
enter
mov
add
mov
lock
bound
add
int3
rcrb
add
add
jbe
add
out
cmpsl
add
mov
into
add
insb
add
fsubrl
rolb
mov
lea
pop
add
push
lea
push
push
push
push
push
push
call
testl
add
scas
int
out
pusha
ret
add
mov
push
add
mov
add
add
add
jno
hlt
add
insb
add
add
add
pop
jl
aad
add
push
add
arpl
jnp
fsubl
xchg
push
loopne
add
lods
rolb
push
jge
jp
push
xchg
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
add
lahf
add
add
lahf
add
mov
mov
pop
movsl
add
gs
add
add
add
push
pushf
pop
add
leave
addb
add
incb
xchg
add
cmpsl
add
out
loopne
add
add
in
add
add
xchg
popf
add
jns
mov
mov
add
lds
test
add
add
add
pop
mov
push
push
lea
push
push
push
push
call
out
aad
jb
add
pop
push
loope
clc
out
loope
mov
call
mov
add
pop
std
lock
jnp
andb
int
add
add
popf
fwait
jmp
movsl
int3
mov
add
test
push
jecxz
sahf
xchg
mov
pop
add
jns
stos
add
lahf
add
mov
mov
lea
pop
xor
push
push
push
lea
push
push
call
add
rolb
xchg
jne
mov
add
movsl
test
add
mov
add
push
add
icebp
push
pop
add
xchg
stos
jp
imul
xchg
lds
fisubl
push
add
add
add
in
addr16
xlat
loope
roll
add
add
enter
xchg
js
add
negb
add
decb
pop
add
push
shl
shl
add
rol
pop
add
pop
push
add
add
xor
pop
rep
push
pop
mov
xor
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
push
fsub
pop
cmc
push
jnp
in
pop
pop
add
lock
add
pushf
pop
jnp
add
outsl
add
js
xchg
mov
pop
xchg
jmp
pop
mov
fildl
fsubrl
add
add
jmp
cwtl
mov
add
in
xchg
add
lcall
nop
jb
mov
call
out
xchg
pop
mov
lea
pop
or
je
mov
push
lea
push
call
loope
cld
call
enter
add
sbbl
insb
push
movsl
scas
add
jno
jnp
sti
nop
add
xchg
repnz
add
js
in
mov
add
cmpsl
js
add
push
loopne
mov
pop
pop
add
mov
add
add
mov
lea
pop
add
push
lea
push
lea
push
push
call
fwait
insb
add
mov
add
cmpsb
add
jcxz
test
lret
cli
aad
add
fcmovu
add
cwtl
call
pop
out
add
outsl
add
mov
add
mov
lahf
imul
test
imul
lods
add
mov
mov
add
sarl
add
pop
add
push
dec
pop
rep
push
sub
pop
pop
push
push
rol
dec
shr
push
xor
add
not
ror
xor
sub
pop
ror
pop
push
dec
add
add
pop
pop
mov
mov
push
push
call
iret
mov
stc
mov
mov
sahf
enter
lea
mov
into
fs
movb
mov
pop
add
in
add
add
add
mov
add
add
add
add
add
add
add
jb
lock
add
rclb
out
add
fdivrl
shlb
jnp
movsl
fwait
add
call
add
add
or
inc
and
push
push
push
lea
push
call
fbld
lods
add
cmc
loope
cmpsb
add
jecxz
add
add
add
int
xor
loope
loope
add
add
jnp
add
add
mov
clc
addb
cld
sahf
pop
add
add
mov
lods
cmpsl
add
pop
addb
pushf
movb
xchg
mov
pop
in
push
addl
mov
add
mov
lcall
adc
loopne
lea
pop
push
mov
push
push
push
push
call
iret
pusha
add
movsl
mov
add
add
lret
jmp
insb
hlt
mov
add
fcomip
fs
add
cld
rorl
mov
int
int
add
outsl
pop
mov
fistps
add
push
addr16
stos
add
push
add
add
scas
test
pushf
mov
lea
pop
add
push
push
push
inc
not
shl
pop
push
push
push
push
call
loope
mov
mov
out
arpl
mov
int3
into
fsubl
add
enter
mov
arpl
add
mov
add
jo
add
add
jbe
mov
add
add
add
fadds
mov
add
jbe
add
jnp
add
jle
add
mov
call
lcall
pop
data16
sahf
fldt
lahf
mov
lea
pop
push
push
rol
shl
pop
mov
pop
push
push
lea
push
lea
push
push
push
push
call
call
add
scas
repnz
lret
mov
add
add
ljmp
jmp
faddl
je
add
lret
add
jp
jb
add
xorb
add
jb
jecxz
mov
add
mov
lret
add
in
add
add
jne
clc
mov
lea
pop
pop
pop
pop
push
push
push
push
push
push
push
push
call
movsl
movsl
add
lock
add
ret
test
out
fildl
int
mov
add
add
mov
in
scas
add
fs
pop
add
sahf
add
out
add
add
enter
loopne
add
mov
jmp
xlat
xchg
cli
ja
add
pop
in
jae
icebp
jmp
xlat
test
add
cld
add
push
fwait
enter
fmull
push
push
push
push
push
call
popa
lret
add
add
in
add
pusha
mov
add
mov
pop
sbb
jmp
push
sbb
mov
in
ja
pop
jns
add
mov
int
jmp
out
push
js
jp
mov
add
cwtl
xchg
add
lret
mov
add
mov
push
mov
mov
bound
ret
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
add
arpl
add
add
mov
pop
fs
add
add
scas
push
add
mov
add
add
add
lods
add
addb
add
addr16
add
add
imul
add
addr16
jo
mov
aam
add
icebp
jne
mov
in
add
mov
cld
sti
gs
xlat
hlt
out
data16
add
jecxz
aam
bound
pop
mov
add
push
lea
add
ror
pop
push
push
dec
rol
not
sub
pop
push
push
push
push
lea
push
push
call
loopne
add
jge
outsl
jle
add
mov
shll
push
jae
shll
add
mov
add
iret
shl
push
add
add
bound
loopne
clc
add
addr16
mov
mov
add
add
icebp
test
add
add
push
enter
add
scas
lcall
pusha
adc
push
push
dec
inc
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
jmp
mov
mov
add
push
ja
add
sti
add
out
mov
add
loope
add
stos
lods
lea
add
add
xlat
nop
int3
cli
add
in
jge
add
add
xlat
les
popa
fsubs
in
jecxz
aad
add
jae
pusha
add
lea
pop
movl
push
add
add
pop
addl
test
je
push
xor
inc
pop
mov
pop
push
lea
push
push
push
push
push
lea
push
lea
push
call
scas
out
jnp
mov
add
mov
jle
add
mov
cmc
pop
mov
ja
add
lock
add
in
add
add
js
pop
pop
push
add
lcall
fldl
add
mov
add
xchg
add
popl
fstpt
add
add
in
add
imul
movsb
add
pop
pop
push
push
push
push
call
add
add
add
mov
add
in
push
sti
xchg
push
push
mov
fnstcw
leave
add
add
add
add
push
add
add
add
add
rcrb
push
cmc
add
add
movsb
add
jl
fucomi
cwtl
mov
xchg
add
mov
lea
pop
pop
pop
leave
push
not
not
shr
rol
pop
ret
push
push
push
push
push
push
call
jl
popl
xchg
add
mov
in
cmc
jae
push
cmpsl
xchg
aam
cwtl
popf
add
jge
mov
stos
jmp
cmpb
add
add
add
shl
roll
add
add
add
jnp
add
add
xchg
rolb
pop
ja
cwtl
jmp
add
push
ljmp
add
mov
lea
pop
mov
add
push
push
push
push
push
lea
push
push
call
xchg
ljmp
ljmp
add
xchg
add
add
xchg
add
xchg
testl
add
loop
add
loop
push
mov
add
mov
testl
add
mov
jne
xchg
jbe
push
add
add
pop
add
pop
cmc
mov
add
add
mov
lea
pop
push
push
push
push
lea
push
push
push
call
stc
pop
cli
add
jnp
add
lahf
nop
in
add
add
mov
lods
movsb
xchg
mov
stc
add
add
xchg
fisttps
js
out
addb
js
cmc
mov
loop
roll
add
add
add
add
imul
xor
jmp
rolb
stc
loopne
add
add
add
add
scas
mov
lea
pop
push
push
push
push
rol
lea
ror
pop
testl
push
add
add
add
pop
addl
push
dec
lea
lea
pop
push
push
lea
push
lea
push
call
pop
add
add
jbe
add
xchg
lds
fs
out
add
je
push
push
iret
pushf
lret
enter
lahf
add
mov
add
cmc
lock
mov
mov
lods
add
add
add
add
push
push
test
add
add
je
add
xchg
add
ljmp
scas
add
faddl
add
roll
fsts
insb
mov
lea
pop
call
mov
push
not
dec
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
add
pop
mov
mov
movsl
ficomps
add
add
mov
lret
int3
jmp
add
xchg
jno
add
fildl
add
testl
out
xchg
add
add
mov
mov
imul
add
rolb
cltd
scas
pop
lock
add
jp
lret
cmc
pusha
add
jmp
add
mov
rolb
lds
cmc
mov
add
scas
mov
cld
lea
pop
push
call
push
not
dec
inc
pop
cmpl
jne
pop
pop
push
lea
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
roll
add
add
mov
jne
add
popf
scas
add
addb
mov
shl
cmc
mov
in
ficompl
add
mov
stc
dec
testl
add
scas
add
add
nop
test
pop
add
cld
mov
add
mov
lret
mov
lea
pop
pop
leave
push
not
pop
ret
push
mov
push
dec
pop
add
push
lea
push
push
push
push
push
push
push
push
call
add
imul
test
movl
xchg
xchg
mov
mov
sti
add
movsb
xchg
push
cmpsb
add
icebp
mov
add
add
cmpsb
add
incb
je
mov
add
out
add
fsubs
mov
add
out
scas
xchg
mov
lcall
push
add
cld
lea
pop
push
push
lea
push
lea
push
push
push
call
add
aam
mov
in
jae
add
ret
push
add
roll
iret
add
add
mov
mov
testl
loop
add
push
jnp
in
add
xlat
mov
cmc
add
xchg
add
popl
mov
popf
nop
cltd
add
addr16
mov
mov
mov
add
add
pop
iret
add
add
jmp
add
not
xlat
xchg
mov
lea
pop
push
push
add
pop
push
push
xor
pop
push
movl
push
shl
add
dec
pop
push
call
push
xor
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
hlt
add
add
add
test
add
add
add
add
fbstp
jl
fsubl
std
popf
add
iret
lcall
pusha
sti
add
jl
add
add
add
fiadds
add
rolb
jne
add
add
fcoml
repnz
add
cmc
call
add
in
aad
push
in
mov
fcmovnu
add
lea
pop
call
subl
push
push
call
mov
add
add
pop
add
rcrl
mov
add
idiv
pop
add
lods
add
add
clc
shll
fs
add
out
mov
leave
insb
mov
add
add
lcall
add
into
pop
in
mov
mov
xchg
pop
ljmp
pop
add
jns
mov
js
mov
lea
pop
cmpl
jne
pop
push
push
push
push
call
cmpsb
add
add
movsl
inc
add
mov
add
xchg
movsl
mov
leave
add
add
fadd
call
test
pop
stos
loope
jmp
add
mov
cmc
jae
add
test
add
add
add
add
add
add
rclb
xchg
pop
xchg
add
add
addb
add
faddl
add
push
fadds
add
add
arpl
lea
pop
pop
push
lea
push
push
push
push
push
call
add
add
xchg
add
add
jns
push
in
leave
add
add
add
add
xchg
nop
test
mov
lahf
pop
push
mov
rcr
add
add
bound
add
hlt
add
addl
test
add
add
add
add
nop
mov
add
int3
pusha
mov
add
lods
roll
mov
fiaddl
add
out
mov
xchg
add
popf
add
leave
pop
leave
mov
lea
pop
pop
pop
push
push
push
call
add
xchg
push
mov
push
add
xchg
fucomip
add
xchg
add
data16
fwait
lret
add
push
jae
cli
add
push
mov
flds
mov
insb
add
add
lds
add
add
repnz
mov
add
add
pop
addb
loope
outsl
add
pop
mov
std
xchg
fsubrp
add
rolb
add
mov
mov
add
push
scas
mov
lea
pop
leave
ret
push
push
ror
add
add
pop
mov
add
push
push
push
lea
push
call
xchg
mov
add
mov
rolb
stc
add
add
add
je
popf
add
int3
aam
mov
pop
ficomps
out
mov
imul
mov
mov
aam
add
cwtl
fiaddl
jns
add
arpl
mov
les
bound
pusha
add
add
add
cmc
sahf
add
add
add
push
cltd
cmpsl
cmc
xchg
leave
mov
or
push
push
push
push
push
push
push
push
push
lea
push
call
add
cmpsl
jbe
add
mov
add
addr16
add
test
xchg
pop
xchg
in
int3
mov
add
add
pop
imul
add
leave
add
pop
xchg
add
fistps
fwait
add
add
jne
jb
pusha
ja
out
add
test
xchg
mov
repnz
loope
scas
add
add
incb
fs
fwait
pop
mov
fmull
push
sub
shr
pop
mov
lea
push
shl
ror
pop
sub
push
push
lea
push
call
roll
lahf
cmpsb
fadds
jbe
mov
add
mov
popl
flds
add
fiadds
add
add
add
fwait
add
add
clc
add
jl
aad
mov
mov
pop
data16
fisubrs
mov
xchg
add
add
push
add
add
into
add
add
add
mov
test
jmp
jne
add
jbe
loope
sarl
subb
pusha
or
mov
push
push
lea
push
push
push
call
fldlg2
add
pop
add
leave
add
ja
imul
popa
add
mov
add
ja
mov
sbbb
ja
push
loop
add
nop
mov
mov
mov
add
std
mov
add
loope
js
subb
add
jae
shrl
shr
push
push
call
rcll
jno
ficomps
add
je
pushf
add
jns
mov
add
add
jae
add
add
add
add
ror
scas
add
add
add
stc
test
rolb
xchg
add
xchg
add
add
in
add
jb
add
push
ljmp
int3
add
add
shlb
jl
fucomp
out
scas
mov
lea
pop
add
push
shr
pop
mov
mov
add
push
push
push
call
mov
add
test
add
test
mov
add
add
cmpsb
add
add
add
fdivl
ficoms
add
push
call
jb
add
add
mov
pop
add
add
mov
add
icebp
enter
jecxz
mov
out
lcall
add
push
lea
add
pop
mov
push
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
addb
sti
add
add
sahf
add
add
mov
add
xchg
push
in
rolb
push
add
lea
mov
add
jo
mov
jp
add
movb
je
mov
mov
add
add
pop
lahf
add
out
aad
in
jb
aad
aad
out
icebp
mov
add
add
mov
lea
pop
cmp
jne
cmp
jne
push
shl
sub
rol
sub
pop
mov
push
push
push
push
push
call
test
mov
vpsrld
pop
add
push
mov
scas
mov
jp
mov
add
add
xchg
add
xchg
arpl
fnstenv
add
mov
test
pop
ja
out
xchg
mov
jae
jne
lret
test
out
add
popf
mov
into
add
add
xchg
add
mov
mov
add
add
lea
pop
movl
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
cmc
fiadds
test
add
sti
into
push
cli
jbe
add
add
sbb
insb
mov
add
iret
test
mov
add
add
add
add
add
add
int3
jecxz
add
jbe
cltd
mov
cld
cmc
pushf
add
add
rcll
test
mov
pop
clc
add
call
out
lods
lods
add
add
pop
jmp
mov
mov
push
push
push
call
add
jnp
mov
add
push
add
popf
add
add
cli
roll
xchg
add
add
mov
cmc
outsl
subb
push
mov
xchg
fwait
rorl
pop
add
popl
mov
mov
push
add
popf
nop
test
js
xchg
add
add
cwtl
pop
add
mov
cld
add
or
sub
jne
push
inc
add
pop
mov
movl
push
push
call
add
jo
mov
add
mov
jle
add
sbbl
add
add
add
push
add
pop
add
jle
add
pop
mov
xchg
push
mov
les
mov
add
mov
mov
add
add
data16
jae
cltd
add
mov
jo
mov
mov
add
testl
shlb
js
add
mov
lea
pop
jmp
push
lea
push
push
call
mov
xchg
xchg
fdivrl
add
add
out
jns
add
gs
add
gs
add
add
fists
add
add
enter
jl
add
lea
add
add
mov
jbe
leave
add
cld
add
add
int3
lret
into
add
out
mov
add
lods
test
rcll
loope
mov
mov
lea
pop
mov
mov
cmp
jne
push
push
push
push
lea
push
push
push
push
lea
push
push
call
into
movsl
jmp
js
testl
lods
lea
add
add
aam
xchg
push
add
add
lods
add
add
test
imul
add
lods
jnp
jl
add
jecxz
xchg
add
cld
hlt
add
addb
lcall
xchg
cmc
add
add
lods
jle
add
add
lods
rolb
mov
add
pop
add
cwtl
mov
pusha
sub
inc
adc
add
add
add
rolb
shl
dec
pop
jmp
push
lea
push
push
lea
push
call
fistpl
pop
mov
mov
add
add
push
add
test
outsl
add
add
add
add
add
int3
mov
repnz
jmp
test
leave
popf
mov
hlt
push
add
xorl
mov
ljmp
mov
ret
add
add
mov
lea
pop
mov
push
rol
ror
add
pop
cmpw
jne
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
cwtl
pop
add
add
add
xchg
stc
add
add
cli
xchg
add
loope
jmp
add
jae
add
fucom
jbe
jp
jno
push
add
hlt
mov
in
add
add
add
loope
stc
jne
repnz
mov
int3
add
add
out
bound
push
add
push
add
mov
stos
gs
ljmp
pop
mov
push
dec
pop
movl
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
cmpl
push
add
mov
aad
add
mov
enter
add
scas
push
lcall
add
in
leave
fiaddl
xchg
js
add
test
pusha
aam
add
testl
arpl
fadds
add
add
inc
int
xchg
add
mov
fs
pusha
add
pop
jmp
push
lea
inc
xor
not
pop
pushl
pop
push
pop
mov
mov
push
rol
pop
mov
push
push
inc
shr
xor
push
sub
add
rol
sub
add
sub
sub
ror
inc
pop
rol
not
pop
push
inc
add
pop
push
call
cmpl
je
push
push
rol
push
xor
add
sub
inc
shr
dec
pop
ror
pop
push
add
inc
pop
push
call
push
lea
push
push
push
call
add
hlt
mov
add
fdivrs
fists
add
add
add
add
add
jns
add
add
fstl
sti
xlat
add
out
sbbl
mov
xchg
into
add
add
sti
add
add
mov
movsl
add
add
mov
mov
add
mov
fistps
outsl
in
mov
loop
aam
bound
pop
cmpl
je
push
push
not
push
xor
add
add
sub
not
sub
ror
pop
lea
dec
pop
push
push
push
push
push
call
add
cld
mov
out
rcrb
pop
pushf
add
jge
add
add
add
add
je
popa
jmp
add
add
cltd
add
add
add
mov
push
loope
int3
mov
add
push
jnp
mov
add
cli
push
imul
mov
cld
add
add
add
mov
xlat
iret
add
rcrb
pop
call
push
add
sub
pop
cmpl
je
push
push
sub
add
add
rol
push
xor
add
add
sub
sub
xor
not
pop
dec
pop
push
lea
sub
pop
push
call
cmpl
je
push
push
shl
not
dec
add
push
xor
add
lea
add
sub
lea
inc
pop
add
ror
pop
push
push
call
int3
mov
mov
pop
std
add
mov
mov
jae
loop
add
add
add
loope
mov
lahf
add
add
fdivrs
faddl
add
add
mov
test
cmpsb
add
add
add
nop
sahf
mov
xchg
pop
addl
filds
add
loop
jo
in
roll
add
pop
cli
mov
lea
pop
push
call
cmpl
je
push
push
push
or
not
add
lea
rol
sub
shl
lea
add
lea
pop
dec
add
add
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
add
testb
stos
add
mov
je
bound
cmc
add
add
add
add
pop
pop
add
notl
fldt
mov
imul
add
testl
ret
add
je
mov
add
add
pusha
mov
add
add
add
add
add
pop
push
call
cmpl
je
push
push
add
not
push
and
add
sub
sub
ror
pop
add
pop
push
xor
sub
add
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
addb
push
mov
add
jmp
sti
sahf
add
add
cltd
pop
lea
fadd
pop
add
mov
mov
add
add
mov
add
xchg
pop
mov
push
mov
pop
jge
xchg
add
push
jle
mov
add
lahf
lea
in
add
int
add
je
xchg
mov
add
mov
lea
pop
call
cmpl
je
push
push
xor
push
and
add
dec
ror
sub
sub
ror
xor
shl
pop
pop
push
lea
push
push
push
call
lcall
add
test
add
push
add
add
ror
mov
add
add
stos
lret
ffree
add
add
mov
shrb
jmp
add
add
int
mov
test
mov
add
repnz
iret
lret
xchg
jge
add
mov
aam
bound
pop
push
push
push
call
fdivl
fidivrl
xchg
nop
add
test
add
add
leave
jo
add
pusha
int
in
mov
jge
push
add
cli
lods
movsl
ljmp
cmpsl
xchg
pop
add
popf
add
add
cmpsb
mov
mov
lcall
jl
out
lea
add
mov
aam
add
push
add
lcall
hlt
lea
pop
call
cmpl
je
push
push
inc
push
sub
add
sub
inc
sub
xor
not
dec
pop
rol
sub
pop
push
add
add
pop
push
push
pop
call
cmpl
je
push
push
lea
lea
shl
push
sub
add
inc
sub
dec
shr
rol
pop
inc
pop
push
lea
push
push
call
push
shlb
xlat
pop
arpl
add
in
jl
jge
movl
add
push
add
aad
movsl
jo
shrb
leave
jne
popa
cltd
mov
pop
pop
mulb
testb
nop
fcmovnbe
add
add
pop
mov
pop
cli
jmp
add
add
push
pop
pop
fistpl
pusha
or
push
push
push
push
push
push
push
call
fistpll
out
jno
add
imul
mov
xchg
add
mov
add
add
xchg
stos
mov
add
pop
add
add
add
add
add
add
loop
rolb
add
add
add
fwait
cltd
lock
add
add
mov
add
mov
lea
pop
call
cmpl
je
push
push
dec
sub
shr
push
push
pop
add
xor
sub
add
sub
pop
add
shl
not
pop
push
xor
lea
pop
push
call
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
jae
add
add
fisttpll
lods
add
lods
xchg
add
jl
pop
enter
lea
add
add
add
std
add
add
add
fnsave
testl
jno
pop
xchg
testl
incb
fadds
test
test
mov
add
add
leave
add
xchg
add
lret
mov
lea
pop
cmpl
je
push
push
not
push
or
inc
add
dec
sub
sub
shr
lea
sub
shl
pop
sub
dec
ror
pop
push
shr
dec
pop
push
call
push
shr
pop
cmpl
je
push
push
ror
push
sub
add
sub
not
sub
ror
sub
dec
pop
inc
not
add
pop
push
sub
sub
pop
push
push
not
add
pop
call
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
shr
arpl
popa
add
loop
in
mov
clc
add
mov
out
xchg
mov
xchg
lods
jp
add
mov
mov
clc
add
scas
fdivs
add
mov
xchg
imul
add
mov
add
popa
movsl
lret
add
mov
push
jecxz
bound
loope
add
add
add
addb
add
add
lea
pop
cmpl
jne
mov
movl
push
push
push
push
push
push
call
lods
add
fadds
add
add
je
push
jmp
xchg
add
mov
in
int
add
add
push
add
jmp
add
xchg
add
mov
mov
add
add
movsl
loope
xchg
add
mov
cmc
xorl
add
lods
add
mov
outsl
pop
add
push
stos
pop
add
mov
pop
jmp
xor
push
push
push
push
lea
push
push
lea
push
call
mov
lea
out
notl
add
test
add
xchg
ljmp
add
add
mov
cli
insb
add
add
add
popa
mov
mov
add
iret
lea
add
roll
xchg
add
rclb
out
add
add
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
movb
push
add
mov
nop
mov
add
popa
jp
mov
iret
insb
mov
std
push
xlat
mov
add
gs
add
call
cmpsl
xchg
add
add
mov
in
pop
add
add
mov
mov
push
lret
xchg
add
add
cmpsb
xchg
mov
imul
add
add
jnp
add
mov
add
add
hlt
pop
cmpsl
add
pusha
and
push
sub
dec
ror
pop
pop
pop
push
rol
sub
xor
pop
leave
ret
push
push
lea
rol
xor
lea
pop
mov
push
push
call
jecxz
lcall
add
out
mov
lock
add
jp
jl
add
sti
mov
mov
add
in
push
jns
call
repnz
xchg
out
add
in
add
add
mov
add
arpl
jne
xchg
mov
out
jecxz
rolb
fnsave
mov
add
fcmove
cld
mov
mov
lea
pop
add
cmpl
jne
push
push
ror
xor
push
push
pop
add
dec
rol
sub
lea
add
pop
sub
add
shl
shl
pop
push
lea
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
add
lea
in
pushf
lret
add
test
add
add
lds
add
add
loopne
mov
in
std
sti
jno
gs
add
add
sahf
loope
lcall
gs
add
jl
test
add
jnp
xchg
add
cmpsb
mov
add
xchg
testb
add
fldl
jl
jecxz
into
mov
in
cld
lea
pop
call
push
xor
xor
add
pop
jmp
cmpl
je
push
push
push
push
push
push
call
add
insb
add
add
add
add
add
add
fadds
insb
add
sti
repnz
add
loopne
add
pusha
mov
add
shrl
cmpb
ja
add
lret
add
clc
data16
xchg
add
add
add
add
add
in
add
add
add
insb
movsl
test
pop
cmpl
jne
push
add
add
pop
leave
push
sub
add
pop
add
push
push
push
push
push
call
mov
in
add
add
push
lret
add
loopne
je
add
fnstsw
lds
lods
pop
add
shlb
lock
xchg
mov
pop
rcr
add
add
add
jmp
add
rolb
leave
add
pushf
push
add
flds
pop
add
mov
add
lea
pop
pop
push
ror
not
xor
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
addb
add
mov
mov
test
mov
pop
sarb
add
add
fistpl
add
out
add
in
imul
iret
xchg
mov
pop
add
jnp
add
add
lret
stos
scas
ret
in
mov
add
stos
add
add
pop
std
sti
add
push
add
add
jns
add
fistl
add
mov
lea
pop
pop
pop
leave
push
add
pop
add
ret
jmp
push
add
sub
rol
shr
pop
cmpl
jne
push
push
shr
shl
push
push
pop
add
lea
inc
sub
sub
add
pop
sub
pop
push
lea
add
ror
pop
pushl
push
not
shl
pop
call
push
call
push
add
ror
ror
pop
jmp
push
inc
pop
cmpl
jne
mov
push
lea
pop
mov
push
pop
push
push
push
dec
push
push
pop
add
xor
sub
lea
inc
pop
rol
pop
push
lea
push
push
push
lea
push
lea
push
call
js
arpl
add
cmpsl
imul
add
shl
mov
push
add
cld
bound
add
in
add
scas
mov
jno
add
add
jo
add
mov
add
movsb
cwtl
pop
xorl
xchg
fldcw
push
add
roll
sahf
add
mov
sbb
jne
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
movsl
jp
fadds
out
into
pop
in
je
movsl
jae
add
jecxz
mov
add
add
out
add
add
add
mov
add
mov
add
out
add
imul
popa
add
pop
je
aad
add
out
add
idivb
add
xchg
loop
add
aad
pop
add
int3
lea
pop
call
push
inc
pop
call
push
push
dec
xor
push
or
not
add
add
ror
sub
pop
shr
rol
dec
pop
push
lea
ror
rol
pop
pushl
call
push
push
push
push
call
lahf
jmp
int
add
mov
mov
andb
xor
popa
add
addb
jo
add
add
add
add
test
jb
je
add
out
add
add
add
add
std
fwait
add
add
add
loope
xchg
pop
add
in
bound
add
add
mov
cld
lea
pop
call
push
push
lea
add
add
not
push
sub
add
shl
sub
rol
pop
rol
not
shr
pop
push
xor
inc
pop
pushl
push
not
pop
call
push
xor
sub
pop
call
push
push
sub
add
shl
add
push
xor
add
sub
not
sub
add
inc
pop
pop
push
push
sub
push
push
pop
add
inc
sub
shr
dec
pop
sub
pop
push
inc
add
pop
call
pop
dec
jne
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
lcall
pop
cmpsl
out
add
bound
bound
add
js
subb
pop
sahf
add
fiaddl
pop
add
add
xchg
add
add
popl
out
fcomps
add
subl
add
arpl
push
mov
lea
pop
call
push
push
call
xchg
add
addl
rcr
jb
leave
add
mov
lcall
scas
shlb
add
xchg
xchg
add
ljmp
fdivr
out
add
add
pusha
add
pop
mov
mov
les
movsb
add
add
stos
add
repnz
call
add
mov
out
push
cwtl
add
roll
add
mov
icebp
add
add
push
insb
jb
jge
cmpsl
ficoms
fmull
das
or
add
sub
push
push
push
push
push
lea
push
push
call
cld
roll
add
lods
jo
add
add
push
sahf
add
stc
add
mov
lcall
add
pop
addl
push
movsb
add
out
cwtl
nop
xchg
add
add
add
stos
mov
add
add
add
add
lods
fldl
lock
add
push
mov
out
add
in
insb
lods
ret
testl
mov
lea
pop
call
push
push
sub
ror
push
sub
add
sub
ror
shr
sub
rol
sub
lea
pop
ror
dec
pop
pushl
push
shl
inc
dec
pop
call
push
shl
pop
push
call
mov
push
lea
push
lea
push
push
lea
push
lea
push
call
add
pusha
xchg
add
add
shll
mov
sti
sahf
shl
add
js
add
jge
jno
sti
add
add
mov
xchg
add
sahf
pop
push
lods
add
add
add
add
ret
add
call
pop
pusha
add
sahf
loope
add
add
mov
testl
add
add
mov
add
add
pop
lea
push
push
shl
push
or
inc
add
dec
dec
lea
shl
sub
lea
pop
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
jecxz
stos
add
pop
add
lret
add
pop
add
pop
add
add
repnz
add
push
scas
add
add
scas
lret
add
call
add
add
push
add
testl
jle
stos
add
add
lcall
jp
in
out
les
std
in
les
pop
call
push
push
add
pop
call
push
push
push
and
add
sub
sub
ror
pop
add
shr
sub
pop
push
push
lea
push
push
call
lcall
shlb
add
shr
outsl
add
addr16
out
fldcw
add
add
in
add
mov
xchg
cld
lods
add
add
push
xchg
test
ja
add
jge
incb
add
hlt
cld
mov
lahf
mov
pushf
lods
leave
loop
xchg
pop
mov
xchg
bound
add
add
mov
mov
lea
pop
pushl
push
lea
push
push
push
push
call
imul
movl
stos
add
add
add
ret
mov
fstp
pop
stos
add
fdivr
test
js
mov
add
add
test
addl
mov
rorb
add
add
fadds
in
scas
pushf
hlt
jno
jmp
pop
add
test
fcomp
add
add
lahf
loopne
popf
pop
jecxz
mov
je
int3
lea
pop
call
call
mov
push
add
pop
lea
push
push
sub
lea
xor
push
or
inc
add
inc
dec
add
sub
add
shr
pop
xor
pop
push
not
add
rol
pop
pushl
call
lea
push
push
push
push
push
call
pop
add
push
add
add
add
lret
add
push
ficoml
sahf
add
add
add
mov
add
add
add
scas
add
mov
add
fcomp
add
scas
add
hlt
in
mov
mov
add
lahf
stos
lret
add
andl
jge
cli
add
lea
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
div
mov
add
mov
loop
out
mov
xchg
mov
push
shl
bound
add
add
add
add
add
add
out
imul
push
add
movsl
int
push
movsl
scas
jo
add
add
lret
add
imul
push
pop
rolb
add
xchg
add
iret
fucom
jecxz
mov
lea
pop
push
push
pop
push
pushl
push
push
shl
ror
xor
push
push
pop
add
not
add
sub
sub
dec
sub
pop
not
sub
sub
pop
push
add
dec
pop
push
push
xor
lea
lea
pop
call
push
push
shl
not
ror
inc
push
sub
add
not
sub
shl
pop
shr
ror
shr
pop
push
pop
pushl
call
push
push
lea
push
lea
push
push
call
add
add
jge
jnp
push
add
in
out
add
loop
mov
pop
add
add
mov
cltd
fisttpl
pop
orl
mov
add
ljmp
mov
add
in
add
cwtl
clc
leave
add
lea
scas
bound
roll
add
mov
add
int3
lea
pop
call
push
push
xor
sub
ror
inc
push
push
pop
add
sub
sub
sub
pop
rol
lea
not
shr
pop
push
push
push
push
push
push
call
in
add
cltd
mov
add
int3
push
add
mov
in
add
add
add
imul
add
push
mov
mov
faddl
push
pop
bnd
cli
xchg
jb
add
add
lock
pop
add
add
aam
push
mov
movsl
add
add
int3
jne
fdivr
xchg
pop
add
mov
loopne
add
popf
les
test
jno
add
mov
lea
pop
pushl
push
add
lea
sub
xor
pop
call
push
lea
pop
call
jmp
push
lea
push
call
lods
test
cwtl
insb
add
shrb
xchg
add
popa
add
insb
mov
shlb
sti
stos
rolb
stos
pop
add
add
xchg
fstl
pop
add
stc
jecxz
add
cmpb
xchg
push
add
lods
popf
mov
add
frstor
cwtl
pop
loop
in
push
add
add
mov
pop
fiaddl
mov
add
push
mov
lea
pop
pushl
mov
push
push
push
push
lea
push
push
push
push
push
call
popf
jae
ret
ja
sti
add
add
ret
add
ljmp
add
push
test
pop
gs
aam
add
mov
ljmp
add
jb
stos
into
add
rorl
pushf
jne
mov
test
lret
add
pop
leave
aam
addl
add
imul
stc
add
lea
pop
jmp
push
push
inc
sub
push
or
not
add
inc
add
sub
xor
pop
add
pop
push
push
push
push
lea
push
lea
push
push
call
xchg
mov
jp
lock
push
pop
add
add
add
lret
push
mov
je
test
pop
roll
add
pop
fldl
add
add
add
shl
mov
jne
jno
mov
add
mov
mov
add
int
add
mov
cld
pusha
cltd
add
hlt
add
enter
mov
jle
pop
mov
lea
pop
pushl
call
push
push
push
push
push
push
push
lea
push
lea
push
push
call
bound
add
mov
add
mov
add
add
add
mov
testl
shlb
push
data16
outsl
fisttpl
xlat
add
cmpsl
scas
roll
imulb
fiadds
add
add
test
lret
push
call
mov
lret
jecxz
mov
add
add
test
incb
popf
sahf
add
fists
add
pop
call
push
push
shr
sub
sub
add
push
or
not
add
add
sub
shr
pop
sub
pop
push
push
push
lea
push
push
push
push
push
call
add
subl
add
ret
add
jl
add
add
out
out
add
xchg
scas
add
add
jbe
add
add
popa
add
lret
add
push
add
fnsave
mov
pushf
add
mov
add
loope
loop
out
cwtl
mov
cwtl
les
jnp
jnp
add
add
xchg
test
add
jb
stos
jnp
mov
lea
pop
pushl
push
shr
sub
pop
call
push
push
push
push
push
push
push
lea
push
call
lds
add
addb
pop
out
add
js
int
testb
addl
add
xchg
add
mov
add
lock
add
je
pop
arpl
jp
stc
xchg
add
test
scas
jb
add
add
cmpsl
pop
aad
roll
jge
pop
cmpsb
add
add
add
xchg
mov
in
les
data16
call
push
shr
pop
leave
add
push
push
push
push
push
lea
push
push
call
out
jge
add
add
test
push
add
popl
je
push
add
jmp
jae
cli
mov
add
add
add
int3
add
popf
add
out
roll
test
add
jmp
push
insb
mov
hlt
add
mov
jns
add
les
mov
xchg
add
lods
popa
add
jnp
add
cmp
add
push
mov
lea
pop
pop
pop
pop
push
lea
push
call
lcall
add
add
add
mov
mov
add
add
lock
add
iret
mov
mov
add
add
cmpsb
outsl
xchg
fiadds
mov
add
cltd
in
add
add
loop
mov
mov
lea
pop
pop
leave
add
push
push
push
call
add
add
addb
movsb
iret
add
out
push
add
add
add
sti
je
mov
rcrb
out
add
imul
mov
add
add
add
jecxz
fcmovu
push
add
mov
rorb
add
mov
imul
add
aad
clc
add
stos
add
add
add
stc
cmc
lds
into
lret
ret
mov
lea
pop
ret
leave
push
push
call
out
mov
cltd
shlb
iret
add
jge
add
jle
jb
scas
hlt
mov
in
cltd
add
roll
add
mov
scas
lret
stos
add
out
mov
cli
add
cwtl
cltd
movsl
add
xchg
lods
test
jp
jge
add
lcall
out
sti
sti
addb
mov
add
imul
in
jnp
add
mov
mov
lea
pop
ret
push
push
lea
push
lea
push
call
addb
int
jp
add
add
add
mov
ljmp
add
add
pop
add
xchg
add
add
add
mov
add
mov
pop
xchg
add
add
add
mov
push
add
cmpsb
add
add
push
lret
ljmp
add
outsl
xchg
add
lcall
sahf
jbe
hlt
push
mov
out
mov
lea
pop
push
mov
cmpl
jne
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
fidivs
iret
loopne
add
add
mov
fs
add
add
add
add
imul
out
push
jne
add
add
fsubr
add
hlt
mov
pop
add
repnz
add
adcb
cmc
add
mov
mov
add
add
jb
les
inc
and
push
push
lea
push
call
pop
mov
add
add
add
cltd
mov
pusha
hlt
add
mov
add
sar
xchg
rcr
leave
pop
std
cmpsl
mov
mov
add
lds
loope
add
mov
mov
mov
add
mov
fldl
push
gs
sti
jmp
out
lret
add
jne
add
add
loop
scas
mov
add
add
mov
lea
pop
jmp
mov
push
pop
and
xor
xor
push
not
xor
shr
shr
pop
add
xor
dec
push
push
push
push
lea
push
push
push
call
filds
into
outsl
fdivs
add
in
xchg
jo
addl
icebp
lods
add
jne
add
loopne
aad
movsb
mov
pop
add
mov
add
mov
add
out
add
push
mov
jecxz
fcoms
cmpb
lods
push
add
pop
add
movsb
mov
add
mov
lea
pop
sub
jmp
push
lea
push
lea
push
push
call
xchg
in
add
mov
add
movsl
stos
add
add
fsubrs
pushf
loop
push
aad
push
jbe
push
adc
mov
lahf
mov
jbe
popf
scas
add
fildl
pop
add
flds
add
mov
lds
mov
ja
add
mov
jl
lods
sahf
add
add
add
add
nop
lret
loop
arpl
mov
add
int3
lea
pop
sub
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
jmp
pop
xchg
xchg
ljmp
mov
jecxz
cltd
jmp
xchg
xchg
add
aam
add
loope
ljmp
in
int3
in
pop
add
add
pop
fnstenv
shrb
jbe
mov
push
out
les
add
add
scas
add
add
fcoml
add
add
mov
lea
pop
pushl
push
rol
not
sub
pop
pop
sub
push
rol
pop
cmp
jne
mov
lea
push
lea
push
call
push
add
pop
out
add
add
scas
outsl
stos
jl
loope
add
add
mov
add
cmpsb
scas
add
pusha
adcl
fcmovb
xchg
mov
js
aad
add
add
stos
pop
movb
push
mov
fistps
add
add
add
add
in
aad
lea
mov
pop
aam
add
mov
mov
sbbl
add
fadds
mov
lea
pop
sub
push
push
lea
push
push
call
jno
jle
add
lret
add
mov
jecxz
mov
ljmp
add
push
jb
int
add
push
out
in
add
add
add
pop
movsb
mov
xchg
test
cmpsb
mov
arpl
pop
jp
jp
jb
jns
fadd
ret
loopne
nop
add
pusha
jb
aam
add
out
mov
lea
pop
mov
shr
add
push
push
push
push
call
jle
add
add
movsl
add
add
xchg
lea
cltd
iret
add
xchg
add
add
xchg
jp
add
add
add
addl
add
lahf
jmp
stc
mov
enter
push
mov
add
into
add
iret
pop
loopne
add
add
add
add
add
mov
add
add
scas
aad
xorl
mov
lea
pop
sub
pushl
pop
push
push
push
lea
push
push
push
push
push
call
int3
add
mov
add
add
add
addl
addr16
imul
mov
jae
xchg
push
jmp
cli
stc
add
add
test
repnz
jle
in
push
pop
add
arpl
add
add
lods
lods
add
lock
js
add
push
lods
add
mov
add
add
in
flds
and
jmp
dec
add
inc
pop
and
push
sub
not
pop
sub
push
push
push
call
fcoms
pop
add
add
popf
add
popa
test
push
js
cmpsl
loop
add
mov
mov
addl
out
sahf
sarl
jl
add
add
std
sahf
mov
mov
aam
push
shr
jno
add
add
loop
add
xorl
add
add
out
mov
add
pop
cmp
jne
push
ror
pop
leave
push
push
call
jno
cli
add
mov
push
leave
add
insb
add
mov
int3
add
add
push
int
add
ljmp
add
lret
lods
jecxz
add
jnp
mov
hlt
add
notl
std
nop
add
shrb
mov
shlb
lock
fldl
add
faddl
pop
pushf
xchg
jb
mov
push
fcompl
int3
lea
pop
ret
push
mov
push
add
rol
inc
pop
add
push
push
inc
ror
xor
pop
push
push
sub
add
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
in
cld
xchg
icebp
mov
arpl
flds
add
add
iret
pop
add
enter
xlat
jnp
std
add
stos
add
add
add
jne
fsubr
imul
je
pop
add
sarb
cld
add
xchg
lcall
je
xchg
repnz
add
mov
lea
pop
push
push
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jbe
pop
bound
add
add
jno
cld
out
std
add
iret
bound
add
mov
add
mov
shll
lods
add
lahf
add
pop
mov
add
add
jb
out
lret
aad
in
jle
rclb
push
add
flds
add
add
push
jle
mov
pop
iret
add
lea
pop
lea
push
shl
shr
pop
sub
push
shr
pop
mov
push
inc
pop
shr
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
ljmp
add
jnp
in
jmp
lds
mov
aam
bound
hlt
push
add
cmc
add
pop
nop
mov
xlat
add
mov
add
loopne
add
in
add
popa
jge
add
add
pop
stc
add
add
add
mov
pushf
xchg
test
add
fildl
rorl
pop
add
mov
push
shl
lea
pop
add
mov
push
inc
dec
pop
add
xor
mov
push
push
lea
push
push
push
push
lea
push
call
jo
mov
add
add
mov
lea
mov
jmp
fwait
pop
mov
add
add
add
data16
mov
jmp
repnz
mov
cmpl
jmp
icebp
arpl
add
add
movsb
add
jno
jbe
pop
add
js
std
jle
add
jmp
lock
mov
add
xchg
rcr
mov
lea
pop
and
push
push
lea
push
push
push
push
push
push
lea
push
push
call
sahf
les
shr
xchg
add
mov
add
add
incb
add
add
arpl
add
in
xchg
add
stos
in
in
pop
sti
in
add
add
add
add
gs
push
add
add
mov
add
add
jmp
jo
add
sub
jo
add
add
push
shr
lea
sub
sub
pop
cmp
je
add
cmpl
jne
push
rol
add
sub
add
pop
xor
push
shl
rol
pop
pop
pop
pop
push
push
push
lea
push
lea
push
call
mov
std
add
clc
cmpsb
add
push
mov
addb
add
jno
loopne
popa
add
add
mov
lods
add
xchg
add
mov
add
outsl
xchg
hlt
xchg
mov
pop
scas
add
stos
add
add
shll
ljmp
mov
jmp
scas
add
add
movb
add
lds
sti
pop
arpl
cmpsb
mov
lea
pop
pop
pop
push
xor
shr
add
pop
leave
ret
push
xor
xor
add
pop
mov
push
push
push
push
call
add
mov
add
mov
add
clc
jle
mov
pop
popf
out
cli
fiaddl
iret
add
lret
add
out
addr16
into
jmp
add
add
int
out
mov
adcb
add
add
add
add
add
add
add
lea
pop
jbe
push
xacquire
add
fmull
push
or
push
push
push
push
push
push
push
push
push
call
lds
loope
add
pusha
imul
mov
cltd
add
out
pop
addl
add
repnz
add
add
mov
lret
add
int3
std
add
add
cmpsb
shll
add
add
add
add
ljmp
stos
xchg
sahf
add
pusha
add
mov
out
add
mov
add
add
arpl
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
shr
js
out
add
push
in
popf
shll
add
xchg
mov
rcrl
add
mov
add
ja
fcoml
add
add
arpl
orl
popf
cwtl
addb
pusha
add
xchg
pushw
add
xchg
scas
push
loope
pushf
add
add
pop
mov
push
push
sub
pop
call
push
xor
lea
pop
xor
pop
pop
push
lea
push
lea
push
push
call
add
lcall
xchg
mov
add
mov
add
xchg
cmpsb
ljmp
faddl
add
cmpb
add
xchg
jmp
cltd
xchg
xchg
mov
cmc
add
arpl
mov
xchg
loopne
mulb
pushf
add
fidivrl
add
into
mov
lea
pop
pop
pop
pop
push
add
add
inc
pop
leave
push
push
call
pop
mov
rcrl
into
imul
jne
add
add
ljmp
jb
add
clc
leave
js
pop
mov
xchg
bound
in
aad
fnstsw
popa
leave
push
movsl
lock
add
jns
jns
andl
rolb
jbe
popf
call
rcrl
mov
stos
jae
add
add
repnz
mov
mov
lea
pop
ret
push
add
lea
shl
pop
push
push
sub
pop
mov
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
stos
jae
je
out
add
fiadds
addl
leave
jb
mov
add
add
add
add
jl
add
add
movb
loope
je
lahf
stos
mov
jmp
add
fstps
out
xchg
scas
xchg
mov
cld
xchg
pushf
outsl
je
add
mov
lea
pop
push
push
push
dec
pop
push
push
shr
pop
push
push
ror
add
shl
not
pop
mov
push
pop
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
fildll
add
push
xchg
cmpsb
mov
ljmp
add
add
movsb
add
hlt
mov
mov
jb
fiaddl
gs
pushf
stos
out
xchg
mov
add
mov
add
jae
add
mov
sti
pusha
bound
loope
faddl
test
mov
aad
add
outsl
add
and
lea
push
shr
pop
sub
mov
shr
push
push
lea
push
lea
push
push
call
lea
data16
int3
add
xchg
add
jecxz
bound
lea
xchg
cwtl
cmpsb
lret
test
xchg
push
xchg
jbe
outsl
addr16
fwait
jecxz
jnp
cld
add
arpl
lret
add
add
add
fs
gs
flds
pop
push
test
add
mov
enter
add
xchg
mov
lea
pop
add
mov
add
push
push
push
push
lea
push
push
push
push
push
push
call
add
pop
fstp
loopne
push
add
add
mov
mov
ret
add
add
jmp
add
cwtl
shl
add
jb
add
cmpsl
add
test
add
add
xchg
mov
mov
adcb
fidivl
add
add
lock
add
fdivs
enter
out
add
pop
pushl
popl
push
dec
not
ror
pop
mov
add
push
push
push
push
call
cmpsl
fiadds
add
add
jecxz
jns
add
popf
add
scas
test
add
cli
add
aam
pusha
out
lahf
nop
icebp
cmpsl
add
add
add
orl
fsubr
add
jp
add
les
jmp
sti
add
add
rolb
std
jl
pop
out
jo
nop
xchg
add
add
fst
clc
add
xchg
data16
adc
testb
push
push
lea
push
push
push
push
call
scas
add
scas
pop
jns
cmpsb
ja
add
xchg
sti
add
movsl
cmc
add
pop
fsubrl
pop
pop
mov
add
add
in
adc
in
pop
add
mov
in
in
popf
xlat
add
lcall
add
sarl
gs
add
roll
add
adcl
add
mov
les
shll
shr
adc
add
adc
iret
xchg
xchg
xor
nop
push
shl
pop
cmp
je
nop
push
push
lea
push
push
lea
push
call
add
add
add
push
add
mov
mov
pop
add
stc
add
add
add
xchg
pop
ja
push
rolb
add
bound
add
mov
out
std
add
imul
cli
mov
ret
nop
add
add
mov
add
add
xchg
jmp
iret
xchg
add
lea
pop
nop
inc
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
mov
add
call
pusha
add
add
cli
ficompl
add
jns
jle
pop
add
fs
push
add
out
test
push
out
bound
xlat
popa
jns
imul
push
mov
mov
push
add
mov
add
mov
add
mov
lea
pop
nop
nop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
jl
rolb
rcr
bound
add
add
add
add
pop
xchg
add
jb
add
add
std
add
addb
incb
add
add
add
add
add
roll
add
add
and
add
cmpsl
mov
add
enter
fistpl
add
popf
add
fmuls
pop
mov
lea
pop
cmp
jb
xor
push
push
lea
push
push
push
lea
push
push
call
mov
out
add
add
add
add
fldenv
xchg
add
pop
add
add
add
add
jp
scas
xchg
loop
mov
loopne
mov
and
lcall
fcom
pushf
xchg
add
mov
xchg
shll
mov
add
xchg
iret
mov
add
insb
add
jo
add
mov
xchg
add
mov
ffree
mov
mov
lea
pop
jmp
push
ror
pop
mov
add
movzwl
push
lea
push
lea
push
push
push
push
push
push
call
add
lods
add
add
icebp
xchg
add
jp
jle
jno
loop
mov
cwtl
add
fscale
jb
add
add
cwtl
pushf
push
add
add
mov
add
lret
out
add
enter
add
lret
mov
repnz
leave
jbe
leave
lods
iret
push
mov
add
scas
add
andb
into
scas
enter
add
int3
pop
add
je
fimuls
pop
mov
add
mov
push
xor
pop
xor
push
xor
rol
pop
xor
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
mov
add
mov
into
add
cmpsl
sahf
pop
xchg
add
fwait
out
iret
add
test
add
data16
add
jo
add
roll
pop
call
push
fadds
repnz
push
push
add
push
add
lods
sbbl
add
cwtl
lret
jno
pusha
add
out
test
pop
shl
push
push
push
push
push
call
mov
pop
flds
add
add
add
insb
not
add
push
add
pop
add
push
int
add
stos
add
out
add
mov
jmp
add
xlat
add
jno
mov
mov
add
cld
add
out
jl
les
add
aad
lds
add
filds
adc
xor
push
pop
shl
xor
shl
push
lea
push
push
lea
push
call
add
ja
add
icebp
add
mov
add
add
mov
add
stos
imull
add
add
add
aam
add
push
xchg
add
ret
add
stos
mov
add
cld
fldt
add
pop
lea
outsl
iret
add
pop
add
jecxz
les
or
mov
add
push
shl
shr
sub
rol
pop
pop
pop
push
lea
push
push
push
push
push
push
call
mov
add
insb
add
fadds
lock
pop
testb
orb
add
loopne
add
idivb
add
add
add
jne
in
stos
add
add
mov
add
add
test
or
add
add
add
mov
push
test
lea
pop
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
int
mov
xchg
mov
lds
add
add
xchg
jns
pop
in
add
add
add
add
loopne
add
jno
add
ffree
scas
js
add
add
push
push
iret
popa
add
sahf
add
add
testl
jle
in
int
push
loope
data16
add
data16
leave
push
push
lea
push
push
push
push
push
call
add
xchg
aad
mov
iret
fcompl
arpl
push
add
jae
jmp
push
add
add
cwtl
push
xchg
sti
mov
stc
shl
addb
movsb
pushf
out
mov
mov
add
add
push
nop
movb
push
add
add
nop
subl
jns
add
jecxz
mov
add
push
mov
add
lahf
add
add
aad
xchg
out
add
icebp
add
add
arpl
ret
push
lea
push
push
push
call
add
add
add
fnstcw
addb
add
mov
loope
fldl
mov
loopne
mov
jae
movsl
add
add
mov
add
add
out
add
jecxz
add
add
push
faddl
add
mov
mov
rcrl
lahf
add
mov
add
lods
add
mov
mov
lea
pop
push
mov
push
push
add
pop
push
push
pop
push
push
mov
push
lea
push
push
call
add
pop
addr16
add
into
enter
fs
push
push
add
rolb
add
fdivs
add
lock
fxch
mov
loop
add
add
add
jnp
add
mov
in
push
insb
rolb
add
andb
add
popa
pop
pusha
in
pop
add
add
add
lret
mov
xchg
add
pushf
mov
lea
pop
mov
mov
test
je
push
lea
push
push
push
call
ja
stc
pop
jo
add
rcll
add
fimuls
cltd
push
mov
add
fiaddl
add
add
stc
add
jmp
movsb
add
ret
add
jmp
add
clc
movsb
add
pop
jle
repnz
add
jmp
iret
add
add
jge
pop
add
pop
movsb
add
jp
add
js
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
xorb
push
add
jge
mov
push
add
fs
add
xor
add
add
add
add
ja
jle
add
pop
cmc
cmpsb
fmull
add
xchg
andb
mov
enter
mov
add
add
scas
roll
lods
subb
add
mov
add
fwait
cmpsl
mov
mov
lea
pop
test
je
push
inc
dec
pop
mov
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
jl
jbe
add
add
mov
int3
ret
add
add
leave
add
jl
add
cli
add
push
roll
pop
jp
pop
in
mov
add
fwait
add
push
push
iret
mov
icebp
clc
xchg
add
movl
lods
mov
pop
add
add
popf
mov
popf
addr16
add
mov
lea
pop
mov
inc
cmp
je
push
ror
add
not
pop
test
je
push
push
push
push
lea
push
call
out
in
ret
xchg
testl
in
popf
mov
add
bound
js
add
fadds
mov
js
in
ret
outsl
rcll
in
add
cltd
cli
add
push
add
add
int3
add
fistpll
fwait
mov
in
rolb
test
add
add
add
add
in
lock
add
testb
add
pop
mov
push
sub
not
shr
pop
inc
push
sub
ror
pop
cmp
je
push
inc
pop
test
jne
xor
push
shr
not
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
sahf
jmp
fsubrs
add
jo
add
out
push
shl
sarb
ljmp
stc
add
test
enter
add
pop
xchg
in
mov
mov
jne
ljmp
mov
add
rolb
add
add
loop
xchg
stos
sarl
in
mov
insb
cwtl
add
xchg
enter
int3
lea
pop
pop
pop
push
ror
dec
pop
pop
push
push
call
jae
iret
add
int
add
add
lock
imul
add
add
xchg
mov
js
add
add
add
add
xchg
fcomip
add
sahf
pop
mov
add
add
pop
out
add
mov
mov
add
add
add
add
add
push
push
in
add
pusha
or
ret
mov
push
ror
lea
rol
add
pop
inc
cmp
jne
push
push
call
loopne
fwait
jno
add
add
push
add
cli
imul
pop
add
push
arpl
mov
mul
not
iret
add
add
jle
fs
nop
incb
push
add
stos
add
push
add
roll
add
loope
add
outsl
jns
add
add
mov
mov
cltd
add
jns
add
jnp
add
add
movsb
jge
int3
lea
pop
lea
mov
test
je
push
lea
xor
sub
ror
pop
mov
add
push
lea
push
push
push
push
push
call
test
mov
add
fnstcw
add
mov
lcall
add
test
xchg
in
mov
push
mov
cli
in
lahf
add
les
mov
hlt
push
mov
repnz
mov
std
lretw
pop
ljmp
cld
into
rcll
xchg
cmpsb
clc
mov
iret
add
lret
add
pop
add
pop
cmp
jne
mov
push
not
shl
pop
test
je
mov
add
push
push
push
push
call
add
fsubs
push
add
mov
mov
xchg
jbe
pop
mov
jp
add
xchg
add
add
add
add
shll
add
add
xchg
add
add
add
clc
pop
repnz
mov
add
icebp
add
mov
sahf
mov
lea
pop
cmp
je
jmp
xor
push
rol
inc
lea
pop
pop
push
sub
dec
sub
not
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
jbe
add
jne
add
add
add
add
add
fwait
int3
ljmp
jns
mov
add
mov
rolb
add
add
mov
add
call
cld
add
loope
divl
sarb
stc
add
add
pop
add
mov
mov
popl
add
add
add
data16
jge
mov
pop
insb
mov
lea
pop
leave
push
push
push
push
push
push
push
push
push
call
mov
rolb
stos
add
add
sar
fists
add
stos
add
push
int
mov
cmpsl
test
mov
cmc
pusha
imul
mov
add
add
mov
push
add
add
add
pop
shl
xchg
add
js
mov
fcomi
add
add
out
add
add
pop
movsb
fsubs
loopne
mov
into
add
mov
lea
pop
ret
push
push
push
push
push
push
push
push
push
lea
push
call
mov
fs
stc
add
insb
cwtl
add
shlb
filds
xlat
add
popa
mov
loop
in
outsl
push
xchg
jp
nop
mov
xchg
add
push
popf
xchg
mov
add
jmp
pushf
insb
imul
push
repnz
aam
add
scas
out
jmp
push
mov
add
jne
pop
mov
lea
pop
lea
pop
pop
push
shr
xor
pop
pop
pop
push
add
pop
leave
push
ror
sub
pop
ret
push
lea
push
push
push
push
call
xchg
lcall
addb
xchg
mov
add
mov
add
add
jae
push
xchg
into
lods
rolb
cli
add
mov
imul
out
add
add
fildl
sar
add
ret
roll
add
add
add
add
vpavgb
jmp
add
add
add
add
jbe
aam
bound
mov
pop
push
ror
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
jl
scas
xlat
pop
add
shl
rcrb
subl
pusha
add
addl
cmc
cwtl
add
add
aad
loope
fidivrl
lret
rolb
jbe
add
add
fiadds
adc
outsl
mov
test
xchg
add
push
xchg
stos
lcall
add
fildl
mov
jp
bound
leave
push
add
mov
gs
orl
shlb
pop
pop
push
lea
inc
pop
leave
ret
rol
push
add
xor
shr
pop
rol
xor
push
push
call
mov
roll
jle
imul
xchg
jo
mov
add
add
mov
cli
icebp
mov
add
add
popf
add
pop
stos
cltd
xchg
movsb
fs
add
mov
add
add
add
jmp
fiaddl
push
xchg
cli
add
ret
popa
test
push
hlt
loop
add
add
mov
jl
add
mov
lea
pop
inc
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
pushf
test
sti
stos
pop
mov
sti
movsb
shlb
sti
sarl
inc
rcrb
mov
xor
popf
stc
sbbb
clc
sub
ret
cmc
mov
sub
sub
mov
mov
lahf
adc
pop
jmp
jae
xor
mov
jl
cld
lret
test
xchg
loop
into
fldt
fwait
mov
aad
adc
add
ds
ja
dec
sbb
pop
mov
mov
adc
pop
dec
push
cmp
imul
xchg
push
cmc
fwait
ds
adc
sub
in
lahf
jle
fidivrl
xchg
inc
pop
adc
push
les
or
ljmp
and
mov
mov
cmp
testl
pop
lret
lret
push
in
notb
nop
cmp
mov
aas
arpl
movsb
jge
mov
mov
out
cmpsl
leave
out
mov
jge
fstpt
scas
aas
sub
mov
out
bound
mov
lods
push
xlat
mov
adc
sbb
push
pop
inc
ja
cmp
fsubs
cmp
mov
fidivrs
xlat
ficompl
mov
ficompl
fs
daa
dec
inc
cmp
jno
xor
mov
dec
int
pushf
mov
pop
subb
rcll
push
push
cld
lock
inc
roll
je
nop
xlat
pop
mov
inc
add
pusha
stos
aas
or
lahf
mov
xlat
loopne
xor
ds
pop
push
sar
jmp
divl
int3
sub
or
pop
mov
je
add
fwait
sbb
pop
push
repz
pusha
adc
dec
cwtl
jl
jo
mov
cltd
cwtl
adc
sbb
lea
pop
mov
inc
jb
outsb
push
jbe
cmp
cmp
xchg
inc
pusha
and
call
jo
loop
dec
xchg
add
jbe
xor
dec
sti
sbb
orl
mov
inc
push
gs
xlat
add
jge
sub
push
cmp
aaa
in
jmp
add
mov
push
xchg
jnp
pop
nopl
int3
arpl
cld
cmc
leave
or
leave
out
push
popf
test
cli
cmp
cmpsb
and
jne
sbb
add
loop
xchg
enter
mov
dec
inc
fxtract
mov
sub
out
fnstsw
movsb
and
out
dec
pop
dec
cs
jbe
xor
or
iret
xchg
sub
push
enter
mov
mov
dec
pop
adcb
pop
xor
popa
sub
jbe
sub
out
cmc
mov
dec
leave
js
pushl
scas
cmc
cmc
pop
and
cmpsb
cmpsl
divb
and
repnz
test
mov
dec
pushf
dec
lahf
add
cmp
pop
jno
popa
lea
insb
push
dec
dec
push
jmp
sarb
push
data16
dec
repnz
imul
les
sbb
and
add
cmp
cwtl
jecxz
jmp
out
sti
mov
subb
mov
data16
cmp
mov
std
push
sub
mov
iret
shl
adcb
fwait
es
notl
mov
bound
repz
xlat
sbb
xchg
jg
inc
mov
cmpl
movsb
mov
cmp
mov
out
jno
out
icebp
imul
outsl
pop
mov
sbb
cmp
pmaxsw
or
lea
in
mov
pop
in
inc
imul
es
popf
pop
unpcklps
or
insb
js
sub
shlb
cmc
gs
push
bound
int
pop
xor
roll
sbb
mov
ret
fisubl
movl
push
adc
mov
rcrl
pop
jg
inc
push
jne
aas
fnstenv
arpl
pop
insb
and
addr16
add
mov
int3
adc
cli
arpl
xchg
shrl
aad
movsb
pop
push
add
pop
xlat
mov
mov
out
dec
add
loope
mov
gs
cltd
jo
mov
mov
sub
sbb
adc
arpl
xchg
jge
enter
icebp
adc
mov
je
outsl
adc
cld
mov
pusha
mov
and
pop
jp
call
jo
mov
pop
stc
mov
rorb
pop
loop
out
stos
lret
adc
pusha
mov
cmp
aas
out
mov
mov
jge
insb
es
fst
mov
scas
add
cltd
aaa
push
std
arpl
popf
sub
pop
cmp
pop
and
cwtl
rcrb
add
repz
mov
js
or
mov
cmp
push
scas
decb
jecxz
outsb
lret
dec
xchg
movsb
imul
in
lods
aam
inc
lahf
fdivrs
xchg
leave
sbb
inc
scas
andl
pusha
out
jbe
cltd
fwait
hlt
cmp
mov
out
and
das
xor
sbb
test
ss
pop
mov
mov
sub
sub
lret
daa
jp
inc
push
int
ret
push
cwtl
ret
mov
shl
fisubs
in
int
or
ficoml
mov
jb
add
adc
fisubs
fsubs
sbb
pop
jp
sahf
lds
add
pushf
adc
xchg
sahf
jne
lret
int
test
leave
jmp
adc
mov
sarl
in
mov
int3
in
pop
push
jno
xor
outsb
xchg
rorl
add
ss
sub
inc
inc
cwtl
jecxz
push
aas
mov
scas
cmpsb
mov
push
incb
imul
out
out
dec
shlb
push
cmp
jg
shl
cmc
mov
test
or
out
iret
fsts
cmpsl
jo
push
popa
jmp
inc
and
ljmp
sub
push
inc
ja
aad
in
ss
add
movsl
fwait
pop
mov
xor
std
outsb
imul
mov
cmp
xor
enter
and
insl
into
ret
xchg
fcom
leave
push
jae
faddl
lahf
sbb
test
test
filds
mov
inc
lea
dec
nop
repz
insl
and
pop
mov
or
clc
push
push
arpl
jb
arpl
sub
xchg
fwait
mov
in
mov
test
aas
jg
popf
xor
xor
mov
cmp
std
mov
jbe
mov
cmc
sub
xchg
add
adc
loope
pop
ret
js
ret
or
push
fistpll
mov
fmull
sbb
lahf
clts
cmp
inc
xchg
push
lret
add
sahf
sbb
pusha
inc
sub
inc
cmc
inc
int
jbe
out
pop
int3
hlt
cltd
pop
in
xor
js
inc
jns
subb
jns
sub
xor
push
mov
jae
fisttpl
jnp
test
outsb
mov
cmp
int
push
cmpsb
push
sub
in
xchg
fcoms
sub
jo
adc
push
fwait
pop
das
scas
jg
iret
sti
shrl
sub
mov
xchg
loope
divl
cmpsl
xchg
mov
and
mov
scas
cwtl
rclb
insb
push
mov
popf
loop
mov
arpl
inc
mov
mov
mov
mov
enter
add
mov
xor
cmpb
mov
jno
out
mov
jo
inc
outsb
jecxz
xchg
pop
dec
push
ret
pushf
lds
out
pop
cwtl
pop
jl
lret
add
push
ja
mov
nop
jmp
cmp
addb
cs
cmp
or
dec
out
xor
mov
and
and
scas
es
mov
inc
inc
push
or
mov
inc
das
ror
jbe
cmpb
inc
ss
movsb
fimull
movsb
mov
pop
xor
xlat
arpl
loope
push
in
bound
repnz
cmp
xor
stos
and
xlat
mov
xchg
inc
imulb
stos
xchg
adc
fs
jecxz
mov
cltd
mov
sub
push
add
push
ja
jbe
scas
pushl
fstl
mulb
dec
lock
cmpsl
and
call
jbe
imul
push
mov
xchg
icebp
fmuls
or
repz
subl
fdivl
mov
shrl
adc
mov
xor
and
std
cld
and
rcrl
cmp
push
daa
jnp
in
mov
push
dec
int
mov
jne
xchg
push
jmp
dec
data16
cmpsl
aaa
dec
mov
stos
pop
inc
pop
add
aas
push
fiaddl
idivb
in
or
add
xor
loopne
jnp
scas
xor
xor
scas
dec
pop
dec
lcall
xchg
xchg
cmpsl
push
loope
clc
push
mov
cli
mov
xor
clc
sbb
pusha
sub
xchg
pop
cmp
inc
jns
pop
jmp
loopne
je
mov
stos
xor
movsl
mov
mov
or
xor
scas
cli
test
adc
lods
xchg
sbb
sbb
out
mov
ficoms
rclb
sbb
test
ret
rcl
sahf
cmp
sbb
xor
orl
stc
iret
in
adcl
shl
sbb
scas
aad
test
and
lea
push
jae
inc
out
arpl
int3
fwait
dec
mov
in
add
sub
hlt
das
cs
es
rol
mov
insb
xchg
aad
popa
shlb
jmp
test
cli
and
push
lahf
jmp
sub
enter
mov
je
loope
pop
pop
jb
stc
push
pushf
mov
push
jnp
xor
push
loop
push
inc
push
movsl
mov
out
aaa
lock
rcrl
iret
inc
push
jb
out
das
sub
popa
xor
scas
test
cmp
mov
fcmovb
movb
hlt
sbb
js
sbb
lahf
cmp
mov
je
push
cwtl
not
cld
sbb
jmp
cwtl
adc
mov
cli
jmp
rclb
sub
push
jnp
pushl
push
pop
xchg
ret
pop
out
ror
outsl
shl
xchg
mov
mov
lahf
test
pop
movsl
stc
ror
es
bound
iret
push
sahf
cltd
jne
sbb
adc
mov
pop
pop
cld
int
jg
push
popf
cli
outsl
ret
stos
dec
test
leave
dec
dec
mov
aaa
insl
loope
cmp
ficompl
loop
idivb
out
xor
push
mov
ljmp
int
fdivrs
iret
idiv
pop
stos
aas
mov
sti
addb
test
popa
pushf
icebp
clc
lcall
aam
div
adcl
aad
pop
in
adc
fucomi
imul
jecxz
cmp
clc
inc
lcall
jae
or
sub
outsb
mov
imulb
repnz
add
lret
mov
mov
dec
out
mov
pop
lods
movsl
mov
lea
add
sti
jnp
in
mov
mov
and
lret
mov
xor
ret
dec
xchg
xchg
pop
xchg
mulb
lret
cwtl
stos
mov
adc
insb
push
sbb
add
cmp
xchg
test
fsubrl
out
mov
jg
mov
xor
aas
add
gs
cmp
mov
sub
sub
jns
int
iret
cmp
sarl
in
xlat
jo
inc
bound
inc
cmp
mov
dec
adcb
mov
push
outsb
hlt
pusha
jecxz
les
add
daa
jmp
cmp
mov
xchg
jo
fs
outsb
andl
mov
pop
push
in
xchg
mov
pop
lock
mov
and
and
or
jle
and
movsl
push
test
or
lock
int3
mov
or
adc
jg
pop
jb
dec
rorl
cmp
adc
mov
adc
jno
les
jns
mov
and
or
data16
std
dec
mov
push
mov
loop
enter
mov
aas
push
dec
mov
jmp
xchg
mov
xor
mov
addl
in
fs
xchg
fidivl
out
push
cmp
cmpsl
mov
fldl
dec
in
imul
leave
push
push
cltd
mov
dec
movb
addr16
sti
sub
lock
je
mov
test
ja
mov
xor
fs
imul
jnp
mov
push
cld
ds
std
and
mov
gs
movsb
xchg
jl
dec
loope
les
aam
incl
sub
iret
xchg
lret
jmp
adc
sahf
outsl
ss
lea
cwtl
ret
sub
pop
or
add
inc
jnp
mov
cmpsb
jae
test
mov
inc
movsb
or
jae
add
mov
aaa
sti
loop
lret
je
sbb
in
jbe
lock
je
push
or
pop
push
hlt
insl
inc
cmp
jae
push
js
xchg
fs
dec
jns
les
insl
shl
fisubrs
dec
mov
sbb
pusha
pop
push
or
je
add
leave
cmp
xor
mov
cwtl
dec
or
mov
xchg
push
int3
leave
xchg
dec
sahf
dec
repnz
std
push
in
xchg
lock
punpckhdq
fstp
mov
std
popa
aad
dec
idivb
and
popa
mov
xchg
pushf
sbb
imul
sbb
jb
push
jg
stc
xor
add
push
leave
jnp
lods
outsl
test
test
dec
sub
test
cmp
outsb
push
insl
cld
add
cwtl
sbb
sub
outsb
or
dec
mov
loop
jle
popf
mov
mov
arpl
inc
arpl
lods
jge
and
jo
les
xlat
dec
cmp
or
jae
add
sbb
xor
shr
fiadds
aad
inc
mov
fmulp
je
cmp
test
push
adc
mov
addr16
ds
aad
test
fcmovnu
mov
in
pop
mull
test
push
arpl
xchg
sub
cs
fsubp
sbb
lcall
or
add
jb
cwtl
sub
xor
fmull
cmp
jae
pop
add
mov
pop
ja
jge
popl
sar
int3
fwait
call
rolb
js
fiaddl
sub
loope
call
xchg
cmc
xor
xor
jmp
repz
cmp
mov
movsl
xchg
call
mov
mov
or
inc
xchg
or
jp
dec
dec
inc
psubq
mov
mov
xchg
mov
lods
cli
fcomps
add
pop
incb
nop
pushl
call
aaa
adc
adc
or
inc
ljmp
push
lds
data16
dec
or
into
push
jmp
jmp
mov
loope
sahf
sbb
jne
jo
adc
pop
movb
push
sub
imul
test
xchg
in
stc
add
imul
sbb
mov
push
cmpsb
cmp
mov
sbb
dec
lods
and
mov
adc
add
stos
cmp
sbb
movsb
ljmp
gs
xchg
push
frstor
pusha
cld
mov
add
jae
mov
mov
mov
jle
jmp
mov
push
xlat
loope
ja
sub
dec
lds
adc
inc
jmp
inc
xor
jmp
mov
outsb
enter
es
aad
sahf
repnz
push
jmp
cmp
or
adc
les
xor
sbb
lss
clc
cmpl
jne
loope
cmp
cld
out
movb
addr16
inc
inc
jb
pop
and
jecxz
pop
ljmp
cwtl
jns
cs
mov
mov
adc
mov
pop
add
nop
xor
pushf
mov
in
stos
aad
lock
xchg
or
add
sbb
loope
test
bound
fcoms
sbb
mov
pop
inc
xor
mov
dec
inc
in
jecxz
mov
dec
sbb
ret
push
fstps
push
stos
shrl
and
mov
xchg
fcomi
jo
loopne
fisubl
and
loope
push
sbb
mov
fbstp
ret
stc
out
or
mov
outsb
ret
push
inc
add
pop
in
cmp
xor
xlat
sti
cs
cmpsb
push
lock
aad
jg
in
data16
test
mov
pushf
xchg
filds
movd
in
int3
lret
sub
lea
arpl
insb
inc
test
shlb
pop
push
shrb
loope
fidivrl
nop
outsb
sub
xchg
hlt
imul
aam
in
jo
sbb
loopne
mov
adc
imul
ret
xor
inc
pop
bound
dec
xchg
test
jg
movsb
lods
xchg
and
repnz
stc
and
pop
test
cmpsw
mov
fs
sbb
jmp
in
in
pop
inc
xor
ret
cli
xchg
push
arpl
stc
xadd
lods
gs
pop
mov
sub
fdivrl
sub
adc
aam
jo
dec
xchg
ret
into
mov
pop
les
inc
jo
mov
pop
in
orl
adc
jmp
sarl
movsb
adc
dec
push
ficomps
setbe
or
call
fisubs
insl
fsubrl
icebp
flds
fldt
xor
push
jae
loop
aas
aam
std
inc
repnz
movl
and
mov
pop
shll
push
fistpll
in
or
sahf
ds
rcll
inc
push
aaa
sahf
adc
xor
xor
cld
arpl
sub
mov
jg
fildll
or
nop
jne
lret
xchg
adc
mov
inc
loop
push
push
lcall
fucomi
lahf
mov
or
dec
pop
push
and
popf
dec
out
lock
jg
push
cld
pop
les
mov
in
mov
or
lea
hlt
movsl
daa
notl
enter
sub
xchg
sub
jae
addr16
out
sarb
loop
fadd
test
or
sub
mov
mov
cmp
adc
test
gs
repz
add
das
mov
aam
mov
dec
lcall
inc
std
cltd
ljmp
nop
xor
bound
sub
xor
les
xchg
sbb
push
mov
and
mov
mov
jmp
insl
insb
sbb
add
and
jns
xor
xchg
pop
sub
cmp
inc
push
fcmovnb
xor
pop
inc
outsb
incb
aaa
sub
xchg
aaa
jne
outsb
jge
stc
cmp
or
pop
pop
fisubrl
sub
insl
test
loop
push
fwait
mov
dec
or
arpl
std
dec
add
pusha
and
sbb
shll
mov
sub
imulb
or
sub
fsubl
fwait
jne
call
nop
stos
fisubrs
xchg
orl
lock
xchg
das
push
xchg
and
repnz
ljmp
and
cmc
dec
test
jno
movsl
ljmp
mov
xchg
add
fwait
mov
jmp
pop
mov
sub
pop
inc
xchg
outsb
pop
mov
sbb
mov
dec
imul
mov
fmull
or
add
cmp
add
mov
hlt
mov
inc
aas
int3
adc
jp
inc
sbb
inc
int3
and
pop
jge
imul
fsubl
xor
mov
nop
mov
inc
cli
pop
mov
mov
and
jle
inc
hlt
pop
xor
dec
fwait
testb
sbb
daa
out
fwait
dec
pop
ljmp
mov
mov
adcb
enter
daa
lret
icebp
gs
sub
out
loope
cmp
jle
mov
insb
movsl
inc
jno
ds
jecxz
ret
jnp
rclb
and
mov
dec
popa
xorb
call
sub
ja
inc
mov
push
mov
cltd
push
hlt
dec
sbb
push
aad
loop
int
push
or
adc
inc
jbe
je
fcmove
rolb
mov
mov
fxch
add
xchg
xlat
std
xchg
jno
mov
test
pushf
pop
push
ds
xchg
scas
stos
aam
test
movsl
push
add
dec
call
loope
popa
dec
xchg
pop
popf
pop
pop
jns
xor
test
xchg
std
pop
shrb
pop
jle
into
out
and
iret
lahf
xor
add
push
sub
inc
cmp
pop
xchg
pop
dec
stc
and
mov
lds
mov
je
push
or
loope
adc
out
arpl
fcmove
inc
clc
stos
mov
pop
lock
xchg
faddl
ret
jl
out
xchg
fsubrl
pusha
sub
mov
loop
in
repnz
in
and
divb
jl
mov
arpl
gs
in
push
xor
adc
mov
mov
adc
mov
cmp
nop
sbb
mov
xor
push
dec
popa
push
xchg
pop
adc
push
lret
jp
out
hlt
inc
sbbb
xchg
xchg
cmpsb
push
out
and
mov
les
sub
xchg
pop
or
mov
dec
les
add
cmp
mov
mov
out
add
and
lods
fsts
adc
mov
pop
fdivrs
inc
xchg
mov
cmp
mov
aas
iret
mov
test
rcrl
shl
das
inc
lret
cmp
or
sbb
xor
mov
pusha
mov
pop
cmp
inc
cmp
pop
mov
mov
mov
xor
push
cmp
aad
sahf
mov
sub
scas
cmpsl
mov
xchg
inc
daa
ret
fistpll
xchg
shlb
rolb
decl
insl
push
in
push
fs
aam
sub
das
jbe
lods
in
cmp
popf
cmpsl
pop
in
in
arpl
js
scas
lds
push
test
test
jbe
cs
arpl
loop
fildl
jno
idivb
push
fwait
jb
adc
or
push
popa
lea
inc
insl
faddp
pop
fisubrs
or
and
lret
lret
cmp
dec
ss
pusha
xchg
sbb
pushf
mov
mov
push
lret
dec
pop
test
imul
mov
sahf
sbb
imull
in
add
pop
lret
push
test
sub
xchg
pop
sbb
cmp
mov
add
test
xor
push
jmp
icebp
in
or
xor
or
and
adc
sub
mov
sub
daa
mov
push
fnstcw
fcomp
mov
les
daa
and
fbstp
add
pop
pop
int3
rep
xlat
xchg
jae
inc
mov
movsl
mov
push
iret
int
push
and
std
repz
adc
cmp
sbb
and
cltd
xchg
ss
jae
push
push
andl
in
push
push
dec
jg
insb
mov
aaa
push
ljmp
test
add
sub
inc
test
sub
fidivl
ljmp
out
or
mov
jecxz
repz
int
xchg
and
sbb
insl
and
test
add
pusha
push
scas
ds
inc
push
xor
xchg
cld
sti
xchg
test
stos
pop
xchg
rol
lock
mov
stos
jg
sahf
pop
hlt
cltd
mov
or
cs
adc
cltd
dec
xor
mov
pop
inc
test
repz
cmp
push
dec
xchg
lcall
mov
repnz
xchg
imul
jbe
xor
cmp
in
loop
test
xchg
mov
cmp
pushf
test
jne
in
or
movsl
cmp
cmpsb
xchg
or
je
adc
mov
mov
cmp
mov
out
arpl
ss
lock
mov
xchg
scas
inc
xorl
mov
xchg
or
rol
mov
addr16
mov
sub
imul
push
movl
jp
lea
daa
pop
jg
call
lret
movsl
lds
cmp
cmp
xchg
mov
add
push
adcb
jne
out
sbb
mov
test
jnp
popf
xor
dec
pop
xorb
orl
sub
xorb
loopne
adc
xchg
mov
inc
sub
cmc
push
add
adc
push
inc
rcr
xchg
sub
std
sub
bndstx
test
lcall
je
adc
hlt
pop
enter
fmul
xor
hlt
scas
push
sahf
imul
pop
test
stc
inc
xchg
add
loope
or
xlat
mov
roll
test
dec
sti
sbb
sub
rcll
pop
mov
push
popf
and
cmp
add
lods
out
lods
mov
jg
mov
jge
les
ret
test
push
aad
or
mov
inc
cli
inc
scas
jmp
jmp
jge
and
ret
push
jl
call
fdivr
and
push
test
test
lahf
jle
les
pop
jmp
sbb
pop
adc
enter
nop
fisubs
hlt
cmpsb
in
inc
jecxz
mov
loop
mov
movsl
pusha
imul
inc
je
xor
and
inc
scas
xchg
popa
xor
pusha
in
filds
repnz
repz
cmp
push
inc
testb
daa
sbbl
movsb
mov
test
cmp
mov
jbe
push
arpl
addr16
sahf
loopne
jne
cli
scas
lahf
iret
jl
iret
inc
sub
lret
fcoms
fwait
cmp
shll
push
and
jb
int
xor
jp
jno
sarb
push
push
xorb
push
xor
mov
sub
pop
stc
loope
rorl
add
cmp
cmp
std
adc
mov
ret
mov
xor
push
inc
loopne
push
sbb
and
and
rorb
push
loop
pop
sarl
jge
mov
sti
in
pushf
outsl
sub
fcoms
xchg
cli
mov
popa
sbb
enter
mov
repnz
jmp
roll
jo
xchg
fstpt
mov
int
or
cmpsb
dec
pop
dec
xor
out
out
mov
pop
push
mov
dec
addr16
adc
adc
in
mov
lcall
inc
cli
pop
adc
fdivr
pop
add
rol
ja
sahf
dec
push
sar
movsb
fldenv
loop
mov
jb
cmpsb
or
int
loopne
push
push
repnz
mov
pop
inc
sbb
nop
dec
imul
cwtl
lahf
or
mov
movsb
cmc
adc
dec
dec
add
out
arpl
or
adc
add
xchg
push
stos
mov
inc
cli
jb
pop
or
inc
push
mov
xor
mov
inc
adc
dec
mov
cmp
icebp
jp
ljmp
fs
pusha
out
dec
mov
lods
leave
push
cmp
push
mov
xchg
inc
pop
gs
or
daa
test
pop
jecxz
cwtl
outsw
movntq
dec
out
mov
scas
or
xor
adc
test
inc
pop
movb
pop
jnp
cmp
das
adc
hlt
mull
mov
sub
or
or
sub
lret
repnz
ss
icebp
xchg
inc
enter
mov
shl
in
jo
test
ror
jns
dec
xorb
add
outsb
sbbl
dec
jmp
cmpb
stc
xor
push
inc
dec
and
sarb
adc
test
movlps
cmp
test
lods
lahf
sub
test
clc
xchg
pop
mov
mov
xor
int3
popf
inc
add
fstpt
ds
inc
in
xchg
out
mov
lock
mov
push
aam
add
jnp
sbb
sub
shrb
jnp
test
out
cli
test
mull
inc
repz
mov
mov
arpl
mov
aad
mov
test
in
fstpl
mov
rclb
gs
loope
pop
sbb
aaa
cs
outsl
mov
mov
je
xchg
dec
xchg
out
aam
rorb
loop
test
popf
dec
sub
inc
cmp
test
in
aaa
cmc
stos
lcall
mov
pop
scas
setno
xchg
adc
jae
jmp
add
xor
sub
push
iret
adc
cld
cmp
aas
and
xor
sbb
xchg
scas
mov
daa
in
mov
cmpsl
sub
loope
in
xchg
in
repz
ret
inc
js
scas
fcoms
je
mov
hlt
dec
nop
add
mov
jp
fdiv
aas
sbb
shrb
sub
xor
mov
mov
stos
mov
call
sarb
fildll
dec
icebp
cmp
stc
outsl
lock
xchg
fcomip
add
mov
or
cmp
sub
ret
push
dec
ficoml
dec
add
stos
aad
mov
insl
fcomps
lea
jecxz
sub
sbb
std
push
fstpt
push
xor
inc
popa
test
mov
mov
ds
les
pop
or
in
jge
sahf
fisubrl
loope
int
dec
lds
je
test
cmpl
addr16
add
rorb
ret
fbld
or
adcb
add
cmp
aas
ljmp
push
pop
icebp
jge
add
int3
mull
pop
les
mov
shll
inc
inc
adc
jae
fdivl
mov
imul
nop
sbb
aas
mov
sbb
addl
push
arpl
loopne
add
mov
xchg
out
inc
push
push
cmp
inc
xchg
inc
xchg
xchg
jle
dec
iret
enter
jp
js
xor
test
es
mov
stos
clc
fisttps
pop
rcrl
or
movsl
push
dec
aam
mov
repz
daa
dec
ja
sub
mov
adc
add
jo
stos
jp
xchg
shlb
jae
scas
xchg
mov
xchg
das
das
push
jb
cwtl
inc
inc
stos
xchg
pop
adc
cmp
cs
mov
jae
enter
fidivrl
movsb
sahf
adc
mov
std
ljmp
fistps
xchg
lea
add
int3
cmc
sub
mov
add
ret
dec
sbb
jae
cmc
cmpsl
fst
mov
notl
cld
add
pop
push
loop
leave
stos
ljmpw
movl
test
fcompl
jecxz
xlat
jno
hlt
int3
jo
ret
push
scas
pop
fwait
mov
mov
jno
add
or
jecxz
insl
sbb
sar
ret
repz
mov
adc
xchg
sbbb
pushf
and
jg
fnstenv
mov
test
in
cmp
push
inc
inc
roll
lret
or
imul
roll
nop
bound
mov
sbb
adc
outsl
movsl
sbbb
ljmp
add
adc
mov
xor
push
clc
loope
inc
mulb
dec
imul
shrl
cmp
inc
bound
lods
push
rcrl
repz
push
push
out
arpl
jb
pop
cltd
movsl
stos
outsb
negb
clc
rorl
inc
xlat
xchg
add
test
pusha
imul
sbb
cmc
ds
or
imul
sub
in
inc
rclb
enter
adc
mov
dec
fdivr
loop
jb
popa
rorb
dec
cmpsl
movsl
jmp
popf
bound
add
sbbb
in
roll
andl
inc
mov
popa
fmull
inc
xchg
cmp
inc
fs
cltd
adc
adc
or
jl
repz
adc
fisttpl
xchg
xchg
jnp
mov
pop
add
dec
add
pop
dec
cmp
add
fucomip
sar
add
mov
mov
sub
daa
lock
mov
repz
cmpsl
mov
dec
cmp
cmpsb
outsb
pushf
dec
push
xchg
ds
cwtl
in
lds
sti
mov
cmp
ljmp
push
stc
rcrb
push
imul
shlb
shrb
dec
jnp
out
ret
iret
mov
pop
mov
sub
mov
xlat
outsb
xlat
ret
ds
je
mov
dec
or
int3
lds
push
leave
inc
lcall
loopne
lret
idivl
xchg
dec
sbb
lods
into
out
lock
cwtl
icebp
fcmovu
sbb
lods
adc
adc
pushf
shl
rorl
jnp
mov
pushl
inc
ss
sub
add
cmpsb
push
punpckhbw
aam
popf
cmp
leave
add
mov
mov
leave
outsl
sbb
fisttpll
js
cmpb
js
jb
sub
ret
pop
mov
cmpsb
fnstcw
adc
inc
push
dec
hlt
and
enter
fdivrl
add
jae
aam
leave
or
push
or
adc
and
push
mov
mov
rcl
jmp
pusha
pusha
cltd
lds
out
sub
les
dec
or
fcos
popa
fsubs
fwait
pop
pop
mov
sub
call
pop
ss
sub
test
adc
into
cmpsl
and
pop
jne
ret
scas
imul
sarb
push
mov
rolb
push
outsl
sbb
jle
push
and
imul
dec
mov
arpl
icebp
test
or
mov
mov
and
jns
and
daa
testl
xchg
ds
mov
call
gs
dec
mov
test
inc
lret
lret
les
mov
pop
cli
mov
adc
outsb
outsb
out
lods
pop
sub
mov
mov
clc
inc
pop
adc
fsts
lret
popf
push
insl
xchg
adc
inc
push
jg
add
mov
fcomps
jbe
push
outsl
jbe
in
xchg
data16
jb
fistl
sarb
pop
stc
aad
das
flds
lret
dec
fmuls
sarb
out
lea
clc
out
xor
les
jmp
loope,pt
or
jns
lahf
mov
iret
push
xchg
adc
adc
pop
testb
andb
sub
imul
jp
push
add
int3
push
fiaddl
jge
out
mov
ret
and
add
or
bsr
aad
lret
ss
fsubrs
out
push
jne
aaa
test
outsl
iret
mov
mov
lods
mov
jmp
addl
cmp
sbb
cltd
mov
insl
testb
pop
jle
sti
repnz
scas
psrld
shlb
lods
mov
lods
xor
les
jmp
mov
push
cmc
mov
pop
sbb
cwtl
int
shlb
cmp
fstl
mov
and
jmp
sbb
sbb
mov
int3
add
orb
idivb
push
out
imul
sarl
dec
es
js
adc
mov
mov
ja
imul
or
mov
call
add
pop
push
pop
jae
lahf
jmp
mov
repnz
dec
ds
xchg
jp
jo
lock
push
daa
jae
add
mov
sahf
cmp
js
sub
cmpsb
pusha
lcall
test
dec
int
mov
stos
dec
fiaddl
or
fsubl
pop
dec
mov
test
fmuls
dec
dec
and
mov
pusha
stc
popa
clc
ljmp
adc
add
push
push
push
cmp
pop
call
mov
add
in
push
es
sbb
xchg
js
in
xorb
mov
add
pop
push
and
aad
or
mov
adc
jnp
sub
mulb
pop
jo
fdivs
xchg
int3
jo
out
dec
pop
ds
outsl
cmp
mov
dec
lret
sbb
ljmp
out
push
mov
cmpb
mov
clc
out
jmp
and
sti
outsb
popf
xchg
xchg
mov
jg
pop
enter
test
add
and
cmc
push
mov
into
cmp
and
popa
inc
pushf
fs
or
sub
ds
and
lods
cmpsb
in
ljmp
jg
stos
repz
lcall
mov
mov
mov
jmp
mov
mov
sub
cwtl
push
jb
cmp
cmp
xchg
xchg
xor
sti
loop
pop
add
movsb
mov
inc
push
jg
outsb
cmpl
dec
xor
lea
stc
in
xor
xchg
and
and
fldenv
mov
popf
sahf
stos
push
mov
mov
cmc
insb
inc
xor
ja
adc
xchg
mov
dec
mov
pop
les
mov
pop
dec
jnp
clc
adc
mov
lds
sbb
fldenv
dec
imul
xchg
mov
ja
les
push
jno
jg
or
mov
mov
lea
enter
xor
xchg
and
test
aad
rcl
push
cmp
inc
imul
jle
adc
cmpsb
loop
add
mov
mov
push
cmp
int3
scas
xor
movsb
cmp
stos
int3
xlat
and
shl
add
dec
das
pop
cmpsl
mov
mov
or
inc
mov
shl
sbb
sbb
je
sbb
sbb
outsl
sarl
push
mov
popf
add
aam
pop
jecxz
mov
dec
dec
sub
testl
add
inc
hlt
pop
call
data16
popf
js
lret
test
mov
jl
inc
cmp
je
dec
ret
repnz
sbb
xor
cld
or
lcall
jo
sub
inc
bound
add
adc
stc
mov
mov
pop
je
mov
iret
mov
loope
enter
icebp
mov
js
movsb
jo
mov
jle
out
test
mov
xchg
idivl
inc
cmc
sub
stos
cld
adc
push
sbb
iret
in
pop
shrb
loop
pop
xorl
push
dec
dec
lahf
mov
lods
in
mov
push
pop
xor
addr16
stc
mov
cmpsl
mov
push
jns
nop
test
into
add
mov
fnstenv
xorb
aaa
push
mov
es
cmc
inc
jae
pushf
test
adc
pop
cmp
inc
and
lods
inc
sub
pop
mov
jge
push
into
repnz
call
out
sbb
les
iret
push
das
mov
dec
ret
mov
adc
enter
cmp
pop
pop
xor
jl
sub
push
in
dec
int
cmc
loop
hlt
cmp
cmc
or
jbe
mov
subb
rorb
inc
hlt
icebp
loop
aad
test
test
int3
xchg
int
cmpsb
popl
cmpb
cli
aam
pop
rorl
pop
test
shrl
pop
pop
dec
mov
mov
mov
or
gs
out
pop
dec
jns
js
mov
pop
adc
adc
jge
in
adc
mul
add
icebp
xor
out
cmpsl
jecxz
pushf
rcrb
lods
cli
jae
cs
stc
mov
lds
mov
pushf
call
dec
es
cmp
mov
in
icebp
addr16
and
stc
lea
push
and
xchg
lods
std
data16
in
mov
scas
pop
mov
addr16
xor
out
mov
sbbl
out
cmp
shll
xor
outsb
adc
pusha
in
and
mov
cmc
dec
popf
popf
xchg
jg
clc
popa
add
lods
dec
ud1
or
cmp
pop
and
sub
cmpsb
xchg
ja
or
cmp
xor
inc
adc
mov
aam
pop
js
in
leave
sub
ja
cs
jg
jnp
cmp
les
push
add
sbb
mov
jl
dec
push
inc
cmp
add
int3
jnp
stos
lea
test
adc
movsb
inc
imul
and
mov
mov
add
cmp
out
sahf
not
sub
sbb
inc
inc
or
lret
push
mull
cmp
outsl
mov
popl
scas
pusha
lret
dec
mov
fstpl
push
jmp
cli
lock
cmp
and
pop
xor
enter
movsb
rorl
mov
aaa
dec
jns
test
dec
pop
sbb
cld
stos
or
rcrb
enter
test
cmpsl
sub
leave
fisttpl
imul
xor
out
sub
jg
sbb
adc
incl
sbb
push
aam
inc
dec
cli
push
sub
into
cltd
sub
cmp
cmp
xchg
shl
xchg
in
mov
outsb
mov
jns
jnp
push
inc
push
int3
outsb
shll
js
cmpb
fcoml
rol
jo
daa
fdivrl
adc
adc
cvtpi2ps
gs
lods
mov
loopne
rcrl
mov
fimuls
divb
mov
pop
movsb
ljmp
xor
mov
xchg
or
insb
dec
xchg
mov
or
xor
dec
pop
sti
leave
fidivl
sub
or
adc
push
xor
inc
fs
cmpsl
cmp
jns
stc
pop
adc
xchg
add
or
push
xchg
mov
insb
testl
adc
jmp
mov
or
inc
fs
mov
les
sarb
mov
pop
cltd
mov
jl
lods
int
pop
xor
cmp
ds
nop/reserved
fcom
xor
mov
rcrl
push
sub
lods
aad
lock
pop
and
and
push
leave
or
lock
pop
mov
mov
push
sbb
adc
mov
cmp
push
cmp
add
jge
or
aaa
call
test
xchg
in
cmpsl
adc
cmpsb
or
inc
xor
daa
das
push
xor
add
movsb
pushf
xchg
jb
mulb
sbbb
jo
add
jae
xlat
movsb
xor
rorb
addr16
jae
pop
or
cmp
into
mov
jmp
fwait
pop
mov
aas
inc
dec
jne
das
test
sarb
push
shl
outsb
jg
stc
rorl
add
sub
cmpsl
js
cli
xchg
insb
sti
movsl
std
ret
inc
push
test
lea
or
ljmp
mov
sahf
imull
mov
xchg
dec
sbb
int
add
pusha
stos
lea
dec
fldenv
rolb
lods
lods
or
pop
adc
push
fists
pop
sbb
jo
les
mov
pop
jno
stc
ret
mov
pop
pop
fidivrs
mov
mov
or
jmp
test
push
mov
decb
cmp
xchg
sbb
xchg
daa
pop
pop
xchg
addb
push
xchg
and
sahf
jg
movsl
mov
inc
out
push
pop
int
fisttpl
lds
shl
dec
fldcw
insl
xor
mov
data16
lcall
cld
stos
lods
mov
pop
jmp
mov
adcl
aam
repz
data16
inc
insl
bound
push
push
fs
sahf
scas
mov
jnp
sub
cmp
pminub
ljmp
insb
in
out
adc
mov
and
insl
cltd
add
mov
sbb
mov
push
cltd
std
lods
cli
clc
push
push
pop
mov
leave
dec
dec
xchg
sahf
jnp
jne
mov
cmc
xor
sar
and
sub
xor
rcll
sub
dec
lock
gs
fwait
add
in
fiaddl
mov
loope
aad
lret
js
outsl
or
and
xchg
and
cmp
dec
mov
mov
repnz
cmp
pop
out
jo
mov
sub
and
xor
cmp
jp
mov
sbb
jmp
push
enter
shl
push
mov
imulb
or
or
xchg
or
sbb
scas
sub
clc
add
xchg
jle
or
ret
cmc
adc
xor
cmpsb
sbb
into
xor
into
mov
mov
jns
cmp
xchg
inc
xchg
lret
mov
jge
mul
sbb
mov
pop
add
pop
cld
mov
mov
xlat
ja
fnsave
sbb
jmp
or
or
add
or
mov
aas
jae
sbb
add
mov
dec
mov
int3
stos
fwait
icebp
sub
cwtl
shlb
jecxz
in
pop
testb
and
icebp
fiaddl
push
cmp
add
fdivs
stos
mov
in
fldenv
mov
gs
xchg
ret
pop
xor
arpl
cmp
mov
clc
out
insb
addr16
int3
jmp
push
stos
mov
loop
aas
sbb
ds
lds
sub
popf
ss
xchg
roll
mov
add
pop
jg
mov
cltd
movsl
xlat
mov
insl
scas
test
rorb
adc
mov
mov
pop
sub
xor
movsl
push
lods
inc
icebp
and
adc
pushf
pop
ret
or
push
xchg
ljmp
sarb
adc
dec
aaa
add
xchg
xor
or
push
dec
sbb
mov
jecxz
mov
insb
and
in
lds
insb
adcb
and
xor
icebp
dec
inc
xor
or
outsl
xchg
in
test
adc
pop
add
mov
lret
mov
setle
jnp
xlat
shrl
and
loop
nop
ljmp
cltd
lds
sub
jp
mov
call
sbb
leave
rcrl
jbe
repz
test
idivl
loope
adc
push
sbb
xchg
mov
pop
rorl
xor
outsl
test
add
cmc
lret
daa
pop
dec
jne
jl
cmp
push
xor
jae
clc
push
and
stos
or
xor
sahf
jge
in
cmp
inc
rcrb
cmp
lods
jnp
or
jnp
mov
add
pop
daa
lock
nop
stos
inc
ret
into
enter
lret
lods
mov
mov
out
mov
sub
push
jae
sbb
popa
jle
mov
xchg
dec
jnp
ficoml
mov
inc
push
adc
mov
pop
xlat
nop
imul
push
adc
sbb
push
daa
cmp
fsub
mov
sbb
jo
sub
sbb
ja
jl
hlt
xchg
mov
out
lcall
inc
nop
sti
xchg
jl
mov
es
push
popa
xchg
jl
cmp
popf
cmp
icebp
popf
cmpl
push
fisttpll
shll
inc
scas
pop
hlt
incl
imul
mov
pop
push
in
pop
xchg
dec
or
rcll
pusha
aas
andb
lods
adc
pop
dec
and
popf
call
in
add
pushf
js
mov
call
mov
in
mov
push
mov
mov
lcall
pop
cmp
jb
shll
and
push
adc
xor
imul
call
dec
les
adc
jns
jne
xor
loop
ds
pop
or
sub
or
testl
out
inc
add
dec
jmp
adc
sbb
in
loope
jns
lahf
jp
movsb
adc
push
rorb
inc
aas
sub
xchg
adc
lea
mov
int3
aaa
push
es
lea
jmp
pop
cmp
push
sarl
popf
mov
xlat
push
add
test
pop
lret
pop
add
mov
lods
dec
aaa
inc
xchg
pop
in
test
push
inc
loopne
push
ja
xor
mov
out
aaa
insb
sti
mov
pop
jle
sbb
movsl
jns
insl
lds
xor
xchg
xor
add
lods
int
pop
fistl
lret
aaa
or
in
rcr
add
inc
loopne
or
int3
leave
jecxz
mov
push
xor
jle
push
fsts
loopne
jecxz
mov
es
xor
cmpsb
pop
dec
sub
mov
or
or
mov
dec
das
mov
sti
lret
cwtl
cld
jle
inc
pop
inc
mov
test
push
notl
jmp
imul
movd
mov
xorb
inc
fimull
int3
sub
je
sbb
dec
dec
inc
jl
jl
xor
xor
pop
mov
mov
xchg
data16
adc
es
pcmpgtw
sub
stos
and
pop
flds
jl
dec
sahf
add
xor
sbb
imul
rclb
in
inc
mov
jmp
lods
dec
ljmp
inc
jbe
cmc
mov
pop
lock
inc
dec
pop
sbb
insb
sub
repz
nop
add
test
or
dec
dec
mov
push
add
jge
xchg
add
ljmp
mov
nop
xor
sbb
sbb
and
add
mov
add
shr
pop
push
push
insb
popa
jge
inc
push
shl
es
popf
je
hlt
in
sub
or
xor
xor
aas
xor
adc
stos
dec
dec
cmp
in
ss
popf
and
sahf
data16
push
pop
fistps
xchg
cmp
sti
xor
jmp
sub
mov
clc
out
xchg
pop
out
push
fdivs
pop
sub
es
rcrl
add
lods
dec
or
clc
push
negl
lock
mov
icebp
js
icebp
inc
mov
mov
dec
cwtl
xchg
adc
push
jo
pop
jmp
and
lahf
inc
loop
pusha
xlat
movsl
test
cmc
or
lcall
jno
xor
call
fidivrs
ss
jp
in
insb
nop
inc
jno
mov
and
cmp
or
out
fildll
in
cli
call
pop
or
cmp
outsb
imul
out
sbb
ss
push
popa
inc
xorps
add
cltd
mov
fists
es
pusha
sub
out
push
jecxz
and
fnstcw
inc
insb
push
gs
ja
sub
sub
push
out
xor
dec
fs
inc
pop
addr16
insl
out
push
jl
dec
add
jno
cli
mov
pop
data16
sub
and
in
and
cmp
or
into
fs
cmp
mov
xor
push
enter
lret
fadds
push
shlb
fldenv
jle
scas
xor
ds
enter
push
fnstcw
adc
push
add
sub
stos
jae
test
cmp
cmp
mov
mov
shrb
scas
add
das
or
jmp
dec
push
push
push
out
mov
bound
cmp
lods
and
lcall
xchg
imul
sbb
pop
dec
pop
jo
fldenv
lock
jg
sbb
movsl
fists
lret
mov
loope
stos
sbb
mov
pop
mov
or
sbb
jo
mov
xor
add
in
movsb
insl
scas
cmp
jmp
cwtl
or
femms
fcmovb
xchg
sub
mov
add
in
ss
fdivrs
pop
adc
mov
jge
cmpsb
data16
jge
rclb
push
inc
or
daa
lea
xor
mov
xor
and
andl
popf
pushf
imul
repz
leave
adc
dec
icebp
sub
aaa
outsb
in
pushf
jl
push
popl
cmp
jae
ret
fldln2
jg
ret
je
mov
out
dec
enter
int3
cmp
jmp
mov
adc
sbbl
inc
xchg
js
imul
fsubrs
imul
test
pop
shlb
ss
ret
xor
loopne
sahf
push
scas
mov
fisttpll
out
dec
mov
and
shrb
sub
push
xchg
pop
or
mov
sub
in
jbe
sub
add
cmp
add
jb
dec
sahf
imul
shrl
incb
cmp
push
icebp
fisubrl
jb
inc
inc
bound
sbb
aas
popa
jno
mov
and
xor
fiaddl
rorl
movsl
xchg
lods
and
add
out
loopne
jp
scas
fistpll
pop
sbb
rclb
cmp
stc
fstpl
shll
pop
dec
mov
ret
shl
xchg
add
mov
xorl
fstl
adc
iret
divl
push
repnz
lods
pop
sbb
int
sbb
or
and
and
mov
outsl
mul
push
jle
push
mov
sub
dec
add
sub
or
sbb
ja
lret
mov
cmpl
mov
cmp
out
mov
mov
add
mov
mov
mov
aas
in
jge
pop
in
and
out
pop
and
push
xchg
pop
je
add
into
sub
cmpsb
and
push
jle
lret
xchg
sub
imul
jg
repz
cmp
mov
cwtl
cld
jge
inc
mov
xor
sbb
test
push
pusha
jae
jge
cwtl
mov
mov
mov
lods
fisubs
add
imul
pop
xchg
sbb
in
daa
push
and
push
pop
mov
xor
jne
cmpsl
xchg
ljmp
sbb
rcll
cmc
daa
mov
inc
add
out
cli
mul
sbb
jno
jno
inc
fnstsw
sahf
je
pop
jle
xlat
add
fcmovb
jne
aaa
arpl
dec
inc
mov
stc
inc
lcall
fstpl
dec
lahf
mov
mov
in
push
xor
pop
lret
ja
lds
ret
pop
cmp
xor
jecxz
idivl
flds
or
shrl
and
fs
scas
xchg
fcmovnbe
jmp
divl
scas
int
in
sbb
ss
es
dec
mov
cmp
cs
mov
dec
fwait
pop
inc
orb
xor
jle
adc
stos
mov
jne
cltd
popa
jne
popf
aad
adc
shlb
les
or
add
adc
sti
dec
cmp
fldl
testl
inc
addr16
fists
push
pop
mov
mov
mov
rol
sub
fsubrs
adc
cld
or
fs
sarl
out
and
mov
mov
cmp
lea
dec
add
dec
imul
loop
pop
xor
mov
xchg
lea
daa
or
jle
ja
or
mov
addr16
jle
cmc
mov
cmp
dec
jbe
shl
loope
add
dec
jl
std
push
das
clc
outsl
leave
rcrb
gs
addr16
pop
bnd
stos
das
mov
xor
jns
call
iret
jg
iret
fidivl
push
sub
je
dec
dec
mov
add
xchg
lods
ret
sbb
or
out
push
add
mov
jg
insl
xor
lea
dec
hlt
sbb
lods
sbb
mov
mov
lret
pop
and
lock
dec
sahf
fwait
or
mov
mov
mov
sahf
cmpsb
adc
push
pop
adc
data16
cmpsb
add
faddl
pop
iret
aas
fnstcw
test
sti
call
xchg
mov
sub
sub
clc
or
sub
aam
add
prefetch
or
stc
inc
xchg
addr16
inc
push
mov
xor
arpl
xchg
rcl
mov
lea
insb
push
inc
enter
addr16
in
xor
insl
pushf
pop
cmpl
mov
xor
test
pop
xor
test
test
sub
add
cli
inc
xchg
push
pop
out
ds
inc
shrb
aam
push
fwait
and
outsb
xchg
cmpsb
dec
popf
jno
mov
add
pop
dec
mov
mov
out
cmpsb
inc
movsb
ds
and
andb
rcrb
mov
adc
jp
ffreep
lcall
pop
push
adc
rol
mov
popf
out
cmp
mov
inc
out
sub
mov
ror
jl
in
mov
adc
popa
adc
stc
jae
adc
insl
adc
lods
fs
call
cwtl
movsl
fstl
jg
in
mov
inc
or
mov
ficoms
cmpsb
dec
les
jp
mov
mov
jne
mov
in
add
imul
gs
jb
arpl
pop
cmp
lahf
lret
addr16
jge
dec
adc
push
lret
push
pop
sbb
mov
pop
push
xchg
xor
mov
push
add
mov
cltd
push
rcrb
push
mov
cmpsl
push
sbb
xor
ljmp
jno
in
std
rolb
jg
add
adcb
ret
push
or
scas
mov
or
and
outsl
fsubr
inc
mov
fadds
imul
adc
jo
test
inc
pop
push
sar
stos
popl
push
adc
mov
data16
shrb
adc
sub
bound
arpl
jb
addr16
fsubl
sbb
push
mov
jbe
mov
mov
jne
push
ds
in
mov
cmp
xchg
cmc
dec
adc
adc
outsl
xor
and
in
or
push
pop
je
add
pop
stos
push
or
cmp
test
mov
cmc
lret
mov
mov
mov
filds
in
cmp
stc
out
enter
push
test
andl
sti
hlt
out
sbb
cmpsl
cmp
xchg
int3
add
bound
xor
scas
outsb
xchg
dec
cs
out
mov
push
loop
xchg
test
gs
ja
shrl
cmp
and
dec
pop
xor
lret
add
popf
jp
pushl
iret
cmp
mov
lahf
cli
ja
nop
pop
daa
and
in
push
inc
xchg
jl
movsl
ljmp
xchg
mov
mov
xchg
aas
jl
fldt
pop
jbe
insb
push
cwtl
inc
pop
clc
xor
cmp
jp
dec
cmp
imul
cli
sub
mov
arpl
sub
andl
daa
ficoms
mov
das
subl
mulb
pop
bound
imul
push
xor
sub
dec
repz
fcomi
push
iret
js
out
lods
vpaddusw
jge
out
stc
jb
pop
mov
jecxz
jnp
enter
insb
repz
lods
xor
jnp
in
mov
sub
hlt
jbe
push
pop
jo
imul
jecxz
sub
andb
lods
mov
pop
mov
push
mov
mov
mov
add
pop
sbb
pop
mov
inc
out
es
ds
adc
scas
inc
mov
dec
gs
push
pop
xchg
popf
lods
xchg
add
aas
cld
adc
xchg
popf
int3
jl
mov
test
cmpsb
mov
lock
iret
outsb
es
das
cmp
mov
pop
mov
dec
xor
or
pushf
fsts
xchg
test
jo
and
aam
mov
xchg
xor
stc
mov
xchg
dec
aas
adc
mul
addl
or
clc
in
cld
fwait
jns
lret
dec
push
xor
bound
mov
gs
adc
stos
jmp
xor
aam
inc
inc
or
xchg
sub
push
dec
push
and
int3
push
cmp
fs
test
cltd
sub
or
pushf
idivb
daa
mov
ret
rorb
dec
nop
aad
adc
enter
and
enter
inc
mov
popf
add
jecxz
or
pop
pop
daa
std
jne
dec
syscall
xlat
or
cmp
dec
in
cmpsl
int3
lock
outsb
sub
arpl
mov
mov
push
fcoml
insb
jecxz
and
ljmp
dec
and
imul
out
cmpl
push
out
pop
jae
inc
imul
out
addb
push
cmpsl
cltd
sarl
push
sbb
add
cwtl
scas
add
in
mov
xor
sbb
dec
or
or
arpl
mov
loope
mov
subb
push
xor
or
loope
inc
push
adc
or
stos
test
lods
jb
jbe
lods
imul
cld
fsincos
mov
bound
push
cmp
popa
into
stos
lods
pop
aam
lret
inc
ja
add
popa
push
leave
lock
icebp
jecxz
call
lock
sbb
cmpsb
rorl
xlat
mov
xchg
mov
sub
dec
test
and
je
push
adc
dec
rcrl
or
xchg
push
lret
push
into
jge
fs
and
and
jle
stc
cmc
fnsave
enter
lock
in
dec
sub
xor
xor
stos
jle
je
mov
cmc
vphadduwq
mov
and
mov
mov
lret
insb
ffree
pop
shr
sub
fdivr
aam
insl
add
bound
push
xchg
xchg
cmp
xor
xchg
fmull
aam
mov
inc
inc
inc
or
mov
dec
ds
xor
loop
jne
push
mov
movsb
lret
add
ds
lret
sar
aam
in
pop
fisttps
bound
adc
adc
add
mov
iret
mov
mov
xor
sub
aad
cmc
push
rorl
cwtl
ds
fstpl
lods
cmp
pop
sub
mov
shlb
jl
sub
ja
rcl
jnp
out
push
mov
jnp
sub
sbb
popa
loope
aam
rorb
sbb
xor
js
mov
adc
and
out
aad
mov
pop
jmp
pop
pop
mov
sub
cmp
aad
fdivrp
in
jg
test
pusha
xor
fcompl
mov
cpuid
cmpsb
mov
loopne
jmp
push
insb
or
dec
cmp
sbb
and
dec
jno
xchg
mov
testb
add
xorl
and
or
out
ror
sub
dec
in
inc
push
or
ret
push
xchg
cmp
ret
stos
mov
lods
loop
pop
cmc
arpl
scas
pop
push
sub
inc
push
mov
xchg
leave
out
cs
push
sbb
sub
mov
popa
push
neg
cmp
cmp
in
gs
lahf
xchg
jnp
xor
jae
movsb
push
call
lock
push
xor
jmp
fsubp
mov
and
mov
ret
xchg
test
sub
nop
dec
orb
dec
fdivl
test
sbb
or
xchg
shlb
xchg
test
dec
or
pusha
in
lock
jmp
int3
out
loope
cmp
and
pop
mov
in
push
fcmovnbe
jg
pop
or
jmp
nop
push
call
fwait
mov
dec
dec
ds
xchg
xchg
mov
inc
in
push
push
mov
int3
and
add
inc
pop
into
imul
aaa
inc
mov
xor
pop
mov
and
jg
pop
add
jae
fsubrs
mov
or
jns
add
inc
faddl
and
jno
mov
dec
xor
cwtl
pop
rcrb
pop
inc
jg
xchg
jns
data16
loop
addb
push
push
pusha
leave
sub
push
and
sub
popf
and
lcall
jg
jle
jo
cmpl
aam
scas
xchg
aas
jns
repz
push
loop
cmc
dec
cwtl
lds
jp
xlat
push
cld
rorb
rorb
fcomps
ret
pop
xlat
rorl
rcl
lods
and
js
mov
jb
cmp
sub
inc
cltd
mov
movsl
movsb
pop
xorb
mov
push
cmp
out
sbb
xchg
jle
or
adc
dec
lea
lahf
in
lods
xor
xchg
pusha
lock
mov
loop
and
fsubp
pop
shlb
xchg
sub
pushf
push
ficomps
cmp
cmp
mov
lods
push
adc
jno
repz
call
sarl
les
les
jne
andb
divb
jo
adc
mov
rclb
xor
sub
sbb
les
cmp
cmp
xor
sbb
sti
dec
mov
mov
scas
inc
cld
mov
adc
mov
sahf
dec
repnz
aaa
xchg
mov
scas
adc
dec
rclb
sub
jle
push
push
test
out
xor
adc
add
int3
and
ret
pushf
xor
shll
and
push
dec
addr16
sub
out
movsb
dec
icebp
push
inc
test
int
daa
pop
stc
and
int3
outsl
loope
jecxz
jmp
xchg
stos
jg
lcall
add
daa
cmp
insb
push
xchg
ret
inc
pushf
dec
push
add
lret
call
add
lea
push
inc
and
gs
dec
adc
popa
jbe
aad
in
repnz
out
sbbl
dec
and
sub
xchg
mov
xchg
lods
stos
xor
push
lret
imul
mov
jae
mov
jge
cltd
add
push
jmp
pop
cli
sub
xrelease
add
xor
cmp
lock
add
lds
push
cwtl
ljmp
and
push
adc
ja
call
mov
xchg
add
push
sbb
dec
in
fcompl
or
stos
outsb
or
lcall
in
mov
lods
sub
xchg
jmp
insl
cld
pop
imul
jae
add
arpl
push
pop
faddl
lret
jmp
mov
incb
stc
xchg
or
scas
sahf
add
movsb
xor
rcll
rorl
pop
stc
mov
arpl
inc
add
fadd
mov
sbb
mov
icebp
out
pop
stos
xor
mov
in
lahf
fs
ret
sti
fstl
loop
mov
testl
rolb
jg
imul
sub
mov
in
lds
orb
mov
iret
fcomip
xchg
sti
mov
xchg
mov
xchg
pop
ja
fdivr
jp
subb
pop
mov
push
mov
out
imulb
add
cwtl
add
fs
sar
xchg
nop
push
lea
xchg
jbe
dec
dec
int3
cli
fistps
iret
mov
mov
mov
pushf
pop
cmpsl
xor
or
mov
push
scas
scas
cltd
dec
sub
fs
sub
add
push
pop
popf
mov
push
lcall
lahf
add
rorl
rsqrtps
test
inc
adc
les
xchg
aam
inc
hlt
pushf
xor
sub
sbb
sbbb
insl
push
loopne
cli
mov
xor
int
shr
cmp
ss
pop
add
xor
jle
mov
sahf
call
aad
dec
sbb
es
pop
xchg
arpl
jne
stc
imul
insb
nop
pop
jnp
pop
fxch
and
jns
mov
and
sbb
ss
jne
mov
push
movsl
jno
pop
cmp
xor
imul
neg
lahf
jge
scas
fdiv
lea
addb
jo
nop
scas
lock
fiaddl
dec
sub
sbb
push
mov
xchg
scas
flds
arpl
and
pop
cmp
jecxz
int3
jae
inc
inc
int3
sub
adc
inc
sbb
test
test
pop
out
mulb
cs
lret
push
fwait
push
fidivrl
or
ret
add
and
add
movsl
and
bound
cmpsl
mov
js
add
fsubs
je
jecxz
nop
fnstenv
out
and
cmp
mov
test
cmp
xorl
nop
movsl
cmp
arpl
or
and
mov
xor
xchg
push
addb
cmp
ja
std
fiaddl
mov
sbb
stos
int3
sarl
mov
jecxz
je
testl
int
iret
roll
sbb
dec
mov
push
dec
and
jle
fnstsw
mov
outsb
or
ja
xor
adc
or
jne
insl
sti
in
ss
mov
sub
sub
mov
adc
mov
das
stc
inc
out
imul
fsubr
pop
std
xor
lds
mov
xlat
xor
jp
daa
add
cmc
int3
sbb
ret
into
fstpt
add
in
sbb
js
inc
fisttpl
mov
lret
pop
adc
out
push
jle
scas
push
fadds
jmp
xor
cltd
xchg
dec
mov
push
push
xor
xchg
movsb
or
fdivs
inc
out
fildl
push
pushf
push
mov
jle
fdivs
cltd
stos
mov
cmp
xor
adc
outsl
gs
push
leave
lcall
int
mov
xor
bound
jns
adcb
add
lret
pop
lods
xlat
mov
out
xchg
pop
movsl
nop
scas
ret
xor
repz
adc
outsl
push
pop
adc
xchg
mov
sub
insb
mov
addb
jo
sbb
add
pushf
iret
inc
xor
sub
inc
sbbl
push
cmp
mov
std
iret
dec
mov
pop
fildl
inc
es
sub
nop
sbb
inc
call
push
fcomip
fistl
and
sub
andb
test
sub
outsb
sub
mov
cmc
and
xor
mov
sub
xchg
lcall
dec
icebp
sbb
ss
mov
add
xchg
push
pop
out
or
xlat
fnstsw
fidivs
test
xor
push
fmuls
sub
push
iret
xchg
outsb
fisttps
mov
xchg
out
mov
xchg
imul
aas
addr16
or
stc
loope
xlat
rcrb
push
fistpll
pop
lret
cmp
lcall
xor
inc
xchg
push
cli
shll
xor
in
xchg
cwtl
cli
arpl
enter
fists
addr16
cmp
jp
aas
in
mov
xor
lahf
xor
or
test
jb
xchg
sbb
push
jno
fiadds
hlt
into
stos
xor
shll
and
xchg
pop
fsts
out
pop
jp
imul
icebp
add
inc
aas
in
sbb
cs
cmp
in
pop
call
std
push
call
push
aad
push
roll
cmp
std
jns
out
xor
fwait
scas
sarb
mov
iret
in
cmp
ljmp
pop
push
push
in
cmp
cmc
sbb
out
fs
test
aam
push
adc
pop
jno
jnp
jnp
stos
jbe
sbb
aad
or
outsl
shrl
or
xor
dec
fcoml
rol
jnp
xchg
mov
inc
inc
mov
into
insl
out
insl
rcl
lds
pop
inc
lods
cmpsl
idivb
movl
dec
repnz
mov
jl
or
scas
outsl
adc
mov
jecxz
scas
jp
mov
jmp
and
cmp
push
xchg
xchg
ret
andb
arpl
pop
cmpsl
push
stc
movsb
pushf
aam
popa
cld
pushf
or
dec
dec
arpl
je
enter
pop
sbb
out
push
enter
outsl
xor
ret
in
cmp
xchg
lea
push
lea
mov
out
sub
inc
push
fisubrl
push
andb
cmpsb
cmp
sub
sbb
push
adc
mov
icebp
inc
cmpsb
xor
outsb
daa
daa
je
mov
fistpl
add
cmp
hlt
mov
fsts
and
push
push
call
jne
mov
in
mov
xchg
pop
js,pt
insl
pop
shl
inc
jle
and
dec
stos
dec
pop
popa
fstpl
mov
adc
fdivrl
pushf
push
adc
les
mov
add
mov
sub
push
insb
stos
sub
xchg
xchg
adc
ficoml
gs
sbb
jns
mov
cmp
loop
in
or
subl
pop
repnz
push
cmpb
daa
mov
sti
xchg
mov
mulb
test
leave
jno
sub
enter
xchg
ljmp
and
adc
sbb
adc
pop
in
test
lret
xlat
sub
rcrl
jns
test
cmp
jl
jg
movsb
sbb
mov
pminub
or
pop
sub
adc
push
and
addr16
mov
jb
mov
mov
or
push
popa
sbb
insb
fisttpl
clc
stc
jp
mov
cmpsl
scas
dec
xchg
mov
aas
push
aam
mov
mull
das
or
ret
movsl
jbe
clc
in
fisubrl
adc
ds
push
xchg
and
dec
ror
or
xchg
add
sbb
fistl
and
sbb
mov
and
out
inc
sub
jmp
hlt
fnstenv
mov
in
push
aam
nop
push
jb
loop
jle
dec
jecxz
rcrb
xchg
jmp
into
loopne
fstpl
ss
leave
sub
hlt
mov
imul
sub
adc
sub
or
sbb
js
out
mov
mov
or
push
xchg
loop
lret
jmp
dec
jo
pushf
mov
fimull
fld1
repnz
cmc
dec
xlat
jecxz
cmp
jl
or
mov
and
rcrl
mov
daa
dec
les
lret
add
or
add
sbb
inc
ficomps
pop
and
push
inc
mov
cwtl
xbegin
dec
add
jb
rcll
xor
mov
push
xchg
gs
xchg
imul
and
pop
mov
inc
fimull
push
adc
lock
bnd
sbb
sub
das
andl
aad
jl
int
ret
add
insl
inc
sub
push
mov
sbb
cmp
add
pop
imul
sub
push
in
and
mov
popa
fwait
ss
cmp
jo
mov
lods
mov
sbb
js
mov
dec
inc
push
bound
mov
pop
fcmove
cmpsl
mov
lock
mov
ljmp
shll
mov
jl
mov
pop
mov
int3
fcoml
push
sub
xchg
cmp
adc
add
loope
mov
test
leave
cmpsb
xchg
dec
es
ficoml
adc
in
mov
aam
dec
movsb
iret
push
push
or
fistps
dec
pusha
pop
mov
outsl
fwait
xlat
pop
push
popa
or
out
aaa
negb
sbb
ret
pop
imul
xchg
lahf
scas
fisubrs
stos
add
decb
bnd
cmp
mov
cld
mov
push
in
mov
call
pop
loopne
lock
daa
jae
jae
pop
mov
cmp
sub
jb
mov
mov
les
pop
cmpsl
fbld
jno
mov
idivl
xlat
adc
cltd
sub
shl
and
cmc
aad
sub
in
dec
aaa
icebp
inc
sbb
je
fnsave
stos
or
adc
adc
rcrb
xchg
das
cltd
ret
sub
dec
ja
inc
scas
cmp
jle
mov
push
mov
scas
cmpsb
jge
mov
jmp
dec
clc
pushf
lds
jno
xor
pop
dec
addb
imul
mov
and
or
push
mov
int3
sbb
mov
lds
inc
xor
jl
test
pusha
xor
push
jo
xorb
pushl
adc
mov
jae
testb
mov
loopne
mov
pusha
jne
lods
clc
pop
cmp
pop
out
dec
cmpsl
mov
jge
push
in
dec
loop
push
es
jp
adc
pause
ficomps
lock
sub
repnz
add
int3
xor
or
or
and
xchg
mov
mov
inc
inc
cmpsl
repz
loopne
mov
push
xor
mov
add
lret
add
hlt
pop
mov
cwtl
test
inc
xchg
rcll
pop
orl
fwait
into
mov
mov
loopne
sarl
mov
fdiv
xchg
movsb
sbb
and
negl
fsubl
out
outsl
add
mov
mov
mov
adc
jmp
adc
xor
cld
repz
dec
xchg
pop
fsubl
or
lahf
fsubl
lahf
leave
dec
mov
movsb
inc
mov
roll
sti
enter
push
mov
fadd
sub
xor
pop
shll
movsb
or
ss
sbb
sbb
xchg
fdecstp
pop
mov
pop
jne
and
jg
push
imulb
lret
jno
popf
popf
in
mov
push
add
bound
ljmp
gs
bound
mov
into
in
bound
les
cmp
pop
dec
mov
ss
dec
xchg
add
mov
or
sub
push
adc
test
sub
cwtl
clc
inc
mov
mov
repz
scas
mov
mov
mov
push
sub
dec
mov
jno
jo
inc
xor
movsl
pop
fbld
pop
xchg
mov
and
inc
cs
call
xchg
ret
xor
mov
bound
xor
ja
xor
xchg
inc
movsl
mov
and
jg
aam
cmc
mov
mov
lock
inc
shlb
mov
inc
in
adc
out
cmp
push
sub
mov
and
sbb
cmp
cmpsb
or
daa
pop
lahf
popf
or
mov
adc
loopne
sub
ss
icebp
jp
mov
jecxz
sub
mov
dec
scas
cwtl
sub
ds
out
cmp
mov
rolb
sbb
pop
fs
les
push
jmp
inc
xor
pop
xor
pushf
stc
leave
add
loop
loop
mov
mov
fimull
mov
fiadds
push
xor
or
push
cltd
dec
jp
into
jae
inc
push
insl
jle
mov
or
adc
ret
sbb
fistps
scas
out
divb
outsl
jmp
sbb
push
adc
movsl
subl
pushf
aaa
nop
sahf
jmp
push
movsb
lock
cmp
in
test
enter
xor
sub
arpl
push
pop
mov
dec
out
pop
mov
insb
xchg
jmp
push
test
bound
or
dec
xchg
cwtl
inc
mov
out
push
inc
dec
pop
enter
in
mov
popa
in
ret
imul
mov
sub
in
ret
out
add
mov
frstor
mov
repnz
push
es
pop
in
mov
insb
stos
test
push
and
fstps
cmpb
nop
pusha
daa
clc
lea
call
add
stos
lods
mov
gs
rol
push
enter
push
stos
jecxz
jae
push
mov
cmp
add
push
inc
sti
sbb
mov
push
mov
inc
jle
jno
cld
xchg
mov
xchg
add
and
jmp
add
sbb
add
sbb
mov
mov
ja
inc
adc
lahf
push
ds
cmp
fcomps
dec
daa
mov
jg
xchg
mov
jg
or
aas
test
arpl
push
pushf
adcb
aas
fs
lret
jg
hlt
data16
mov
cmc
jp
aad
fsts
mov
jmp
cmc
dec
inc
aad
push
jns
and
aam
inc
mov
or
lea
test
and
sbb
xchg
sbb
mov
fsubs
lret
and
sahf
pop
cwtl
and
cmpsb
inc
and
xchg
mov
add
cld
stos
ja
dec
jge
cld
jp
cmp
xor
shrl
and
neg
cld
stos
xchg
cmp
xchg
imul
sbb
scas
mov
call
pop
cmpsl
fnstenv
xchg
mov
cli
shll
jge
ja
add
xchg
test
roll
orl
sti
jmp
hlt
xor
xchg
dec
into
and
inc
loop
mov
int
dec
sub
int
int3
push
test
dec
mov
into
add
add
push
imul
cmp
add
fwait
dec
adc
push
int
nop
test
push
fiaddl
faddl
lods
mov
mov
fidivrs
ret
cmpsb
lds
push
inc
cltd
xchg
fsubl
mov
scas
in
sarl
sahf
aam
mov
jns
push
sbb
sbb
dec
jg
and
cwtl
dec
adcl
icebp
mov
add
in
push
call
shrl
out
lcall
inc
stc
push
pop
out
push
jle
cmc
jns
mov
cmp
pop
cmp
mov
andl
dec
push
sahf
int
cmp
rcl
shll
mov
fisubs
inc
xchg
int3
imul
add
and
mov
xor
fmul
jl
pushf
loope
sti
add
push
or
ret
xor
dec
popa
push
mov
clc
push
sub
add
mov
es
imul
push
fsubs
dec
aaa
repz
inc
add
sbb
jnp
or
sub
fucomip
js
xchg
xchg
fbstp
and
and
pusha
dec
push
int3
push
rorl
filds
jns
fcoms
loope
cmpl
mov
je
popa
ret
cmpsb
stc
adc
ret
cwtl
rorb
xchg
push
push
pop
pop
xor
jb
bnd
xchg
je
jns
and
add
jl
outsl
cmp
push
xorl
lds
aam
mov
sub
mov
and
adc
lds
out
stc
fistpl
adc
js
pop
sbb
jb
cmp
inc
xor
popf
outsb
fisubrl
push
jno
mov
movsl
jp
add
jno
mov
mov
lahf
or
inc
scas
lcall
push
jmp
dec
icebp
dec
adc
ljmp
in
adcb
pop
sub
mov
les
insl
sti
clc
outsl
inc
mov
cmpsl
addb
inc
fists
add
push
outsl
popf
popa
out
maskmovq
testl
sbbb
jae
push
movl
sub
cmpsb
int3
mov
clc
pop
icebp
clc
pop
add
sub
mov
mov
jmp
push
pop
shll
ja
push
daa
iret
xor
iret
and
das
in
pop
insl
addr16
movsb
insb
jmp
jae
dec
or
adc
xor
cmp
inc
sub
dec
cmp
and
adc
mov
inc
mov
repnz
dec
mov
xchg
jle
pop
divb
mov
xlat
push
push
lods
push
sub
mov
aam
outsl
in
inc
outsb
mov
mov
adc
xor
mov
shlb
cmp
addl
push
int
es
pushf
dec
lea
xchg
js
mov
mov
dec
inc
dec
mov
out
pushf
and
jp
pop
leave
or
cli
jae
mov
dec
xor
test
sbb
xor
call
jns
dec
mov
sub
xor
nop
cs
push
test
in
push
mov
dec
dec
cmp
dec
add
notb
xor
jno
and
je
and
pop
lds
hlt
pop
movsb
int3
in
and
xchg
push
fidivrl
jne
cmp
sahf
shll
cmp
std
pushf
out
pop
orb
dec
shlb
jno
clc
pop
push
jmp
jae,pn
cmp
test
pop
imul
push
mov
jno
bound
xlat
clc
jp
xchg
mov
dec
jbe
fsubrs
and
pop
jg
mov
jno
shll
jmp
cmp
xlat
push
aas
jns
pop
cmpsb
fildll
cmpl
add
addr16
xorl
cmc
fucomi
js
shll
mov
jo
icebp
sub
xlat
leave
das
icebp
mov
mov
add
fwait
test
pop
lcall
lds
bnd
aas
in
and
inc
adc
stc
xor
fs
sbb
rolb
or
in
jae
out
xchg
movsb
push
xor
inc
out
rorb
and
pop
mov
test
gs
xchg
or
mov
xchg
int3
jecxz
in
mov
cmpsl
lret
xchg
lods
pop
ss
into
pop
arpl
jl
outsl
mov
mov
jbe
add
sub
adc
testl
repnz
popa
or
mov
jne
movb
fstp
pop
xchg
loope
xchg
js
test
xchg
lcall
daa
hlt
push
mov
cltd
dec
xchg
dec
into
loope,pn
inc
mov
js
rclb
push
fcompl
lds
xchg
dec
subb
sub
std
test
pop
call
jns
imul
or
jno
adc
mov
icebp
call
adc
sub
mov
jne
sbb
inc
mov
xchg
neg
jns
and
sbbb
add
lea
sub
shrl
aas
arpl
fucomp
out
sub
rcrl
js
push
dec
pop
adc
inc
faddl
movsl
aas
jecxz
push
adc
out
lods
xchg
mov
or
dec
mov
fildl
dec
or
xchg
mov
push
sub
test
adc
je
mov
mov
cmpsb
lret
lock
mov
sub
cmp
in
out
or
xor
imul
repz
enter
pop
mov
pop
es
cmp
ds
adc
std
fimuls
sub
push
cwtl
lea
cmc
in
sub
loop
add
popa
pop
and
fld
ret
inc
imul
cmp
pop
mov
les
dec
insl
push
sar
mov
jle
repz
loope
mov
pop
ret
sub
lret
fidivrl
sbb
jmp
push
dec
pop
ss
leave
mov
adc
jmp
jo
pop
cmpsb
lods
movsb
sbb
and
pop
and
je
sbb
mov
xchg
data16
and
pushf
add
out
sbb
leave
xor
xor
adc
mov
sbb
cmp
es
or
leave
jmp
ficompl
sbb
std
scas
pop
popa
jae
mov
out
aas
mov
stos
cmp
insl
fnstsw
repz
sub
fadd
movsb
adc
dec
jns
test
clc
out
add
lds
mov
fst
fiadds
xchg
test
lods
bnd
insl
repz
int
jmp
jae
push
mov
ljmp
jno
push
movsb
je
xchg
jmp
scas
pushf
push
imul
inc
hlt
int3
mov
xchg
lock
test
fisttpl
push
xor
cmpsb
test
jp
inc
inc
jge
jle
xlat
iret
lahf
fcom
cmp
out
jp
loope
rcrb
in
adc
sbb
jnp
pushf
push
mov
pushf
xor
or
sbb
xor
in
imul
add
sub
aad
and
inc
lret
lret
inc
bound
aas
and
mov
cmc
dec
jne
lea
pushf
pop
roll
sti
xchg
mov
push
es
dec
mov
rol
jno
and
sahf
pop
pop
add
jns
push
lea
or
movsl
dec
sub
inc
mov
imul
mov
jns
mov
ds
shlb
data16
int
pop
pop
lods
popf
aas
enter
cmp
addr16
push
fcomip
jecxz
xchg
mov
add
jne
repnz
pushf
or
dec
cmp
sahf
pop
cmp
pop
in
lea
dec
mov
add
testb
adc
mov
mov
push
cwtl
mulb
mov
xor
js
rorl
or
dec
add
clc
mov
sbb
xlat
mov
push
xchg
add
sahf
lcall
dec
mov
xor
loope
sbb
lcall
movsb
mov
sbb
mov
iret
xor
mov
or
inc
xor
sub
jecxz
clc
rol
and
jo
or
jae
xchg
jnp
mov
cmpb
pop
int3
or
jp
mov
xor
mov
in
iret
repz
sub
sarl
mov
mov
outsl
pusha
repnz
movsb
rol
call
mov
iret
sbb
xchg
xchg
mov
imul
mov
xorb
adc
lock
mov
out
jb
imul
add
cld
sbb
push
shl
popf
out
jo
imul
test
loope
xchg
rorl
adc
xchg
cmp
xchg
fldt
lods
push
mov
jg
test
fdivrs
inc
push
pushf
push
ficompl
dec
loope
dec
and
adc
pop
in
xor
adc
loop
ret
lods
push
xchg
test
mov
sbb
and
outsb
push
nop
lahf
sub
stos
lret
inc
xchg
inc
push
ret
out
push
dec
add
add
jae
outsb
das
inc
loopne
add
gs
outsb
add
mov
xor
push
add
xchg
out
pop
out
sub
mov
lret
test
mov
dec
push
mov
mov
insl
mov
cmp
stos
cmp
push
cmp
aas
stc
mov
lcall
mov
fbld
mov
or
inc
inc
dec
add
mov
test
pop
enter
fwait
rolb
pusha
lret
movsb
test
push
mov
ret
imul
ficoml
xor
flds
mov
add
in
sbb
push
xor
sbbl
mov
ret
add
jno
sub
stos
out
cmp
in
rol
push
mov
inc
lds
pop
or
outsb
push
sub
jae
fisttps
scas
std
xlat
test
sub
jbe
popf
cmp
mov
repz
scas
add
icebp
sub
fistpll
imul
dec
mov
sub
es
xchg
push
jnp
mov
sbb
aas
cmp
enter
loop
and
out
and
test
sti
bound
and
jne
jp
lahf
cld
js
and
ret
sub
ret
mov
and
inc
pop
imul
push
dec
in
lcall
xchg
test
xchg
ret
push
jp
testl
lahf
and
mov
or
jl
shrl
or
pusha
xlat
lea
mov
shlb
arpl
and
fiaddl
loopne
int
call
jbe
inc
in
cmp
cmc
xchg
push
in
bswap
scas
push
or
adc
cs
scas
mov
call
dec
xor
mov
les
js
outsl
push
jp
mov
in
mov
dec
pop
clc
jecxz
andl
sbb
addb
dec
xor
mov
std
and
or
mov
cli
cmp
xor
hlt
inc
sub
mov
scas
fwait
lret
xor
test
pop
decl
or
jecxz
dec
mov
imull
adc
cmp
mov
pop
sbb
sti
pop
sbb
repnz
insl
mov
fwait
shlb
hlt
leave
dec
adc
in
lea
sub
outsl
scas
loope
iret
decl
adc
or
imull
pushf
test
jbe
pop
jecxz
lcall
lahf
xchg
push
fsubs
inc
nop
insl
sarb
xchg
pop
out
lcall
dec
jmp
sbb
dec
sub
data16
je
out
pop
ja
iret
ss
push
xor
je
test
ss
repnz
pop
ja
shll
stc
insl
jo
jge
push
or
jnp
cmp
fistl
movsl
jbe
jne
fcomip
add
add
adc
fstps
cmp
dec
in
and
push
aaa
inc
jns
pop
jmp
cld
insl
fnstenv
mov
arpl
lret
sub
int
sti
xor
stos
mov
xor
in
sub
ljmp
inc
cwtl
mov
adc
cwtl
andl
inc
enter
in
lock
imul
add
sbb
popf
mov
ret
or
mov
jp
mov
dec
pushf
repnz
into
mov
gs
sbb
pop
or
push
int
jl
push
cmp
dec
repz
addr16
ret
cld
aaa
dec
mov
pusha
cmp
sarb
or
push
mov
jge
cmp
mov
sub
or
int3
sbb
pop
pop
sbb
pop
jle
jnp
stc
mov
jle
aaa
jmp
sahf
lcall
sarb
insb
and
pop
data16
lcall
sahf
loope
pop
or
outsl
test
push
fimull
js
ret
mov
jge
pop
out
sbb
in
cmp
sbb
cmp
sub
dec
lahf
repnz
mov
jno
push
dec
loope
rcrb
xor
push
jmp
loope
dec
in
clc
mov
popf
dec
push
jp
push
popf
je
lock
cwtl
pop
in
setne
sarb
sub
push
sbb
enter
mov
push
mov
push
jbe
mov
inc
loopne
and
add
mov
push
gs
jg
test
lea
pop
mov
add
push
dec
in
ret
push
sbb
int3
dec
pop
pop
aas
cld
gs
or
cmp
jns
orb
imul
inc
lcall
cmc
addr16
and
sti
mov
rol
add
mov
dec
es
jg
in
mull
xchg
ficoms
and
fistpll
decl
push
fstpl
dec
pop
imul
mov
jle
mov
enter
adc
xorl
and
xchg
aam
cs
insl
jae
out
es
sub
sub
pop
add
aas
in
mov
dec
lcall
mov
push
nop
and
lret
insl
jbe
insl
inc
pop
cwtl
ja
out
xor
mov
and
imulb
out
dec
inc
cs
test
aad
adc
cli
push
mov
out
fists
push
fdiv
int3
xor
mov
mov
iret
xchg
pusha
ret
add
scas
inc
nop
mov
in
add
mov
dec
inc
int
mov
adc
push
push
fildll
mov
mov
fsub
decb
jle
clc
mov
cli
imul
jge
fcompl
dec
out
or
int
sub
adc
addr16
sbb
cltd
dec
bound
cmpl
xchg
sbb
lds
ja
cmp
cmp
roll
or
xor
xchg
fidivs
cmp
movsb
outsb
lds
lea
cwtl
push
aad
mov
sub
add
hlt
aas
outsb
adc
shlb
mov
lret
xor
pop
adc
pop
sbb
ds
call
out
jle
std
jp
pop
or
push
cld
pop
inc
outsl
dec
xor
add
daa
loop
xchg
jmp
mov
xor
cld
shrl
rcrb
popf
mov
test
pop
adc
push
pop
pop
inc
sbb
xchg
rcll
push
je
xchg
mov
pop
jg
nop
add
incl
mov
jl
or
sti
insb
in
int3
xor
jo
mov
inc
xchg
divb
ret
in
nop
das
add
add
jge
subb
cmp
add
lods
rorb
and
jmp
cmp
in
xchg
dec
lds
dec
inc
pop
scas
mov
xor
and
pop
insl
pop
dec
push
xor
out
cmp
cmp
mov
lret
xchg
outsl
in
sbb
arpl
insl
aam
inc
dec
popf
push
inc
pop
mov
sbb
stos
fs
xlat
cwtl
std
sbb
mov
push
mov
in
cmp
inc
xchg
loopne
push
fincstp
rcr
ficomps
xor
pop
int
sbb
shll
or
sub
cmpsb
add
mov
std
lea
inc
xor
divl
fwait
cmpsl
sbb
push
inc
lcall
pop
sub
roll
sbb
mov
lock
xchg
sbb
inc
push
push
xor
jns
mov
mov
adc
pop
or
popa
andl
mov
jns
xchg
inc
mov
fsubrs
xlat
jo
xchg
jp
mull
push
es
pop
je
cli
cmp
jbe
loop
push
mov
stos
jle
out
inc
call
push
mov
mov
pop
cmp
rcrb
mov
push
sarl
data16
test
repnz
pop
push
imul
jbe
popa
cmpsb
call
inc
icebp
xchg
pop
js
scas
jno
xchg
and
push
mov
cmp
je
push
and
pop
cmp
mov
push
pusha
out
inc
lcall
and
in
lods
jmp
ret
sbb
enter
and
sub
push
popf
bound
xchg
repz
jne
push
mov
mov
in
sub
hlt
pop
cmp
insl
in
jle
push
adc
cmp
jb
jmp
aaa
insb
push
or
add
sub
aaa
enter
outsb
lret
pop
popl
and
push
hlt
cmpsb
out
sbb
dec
stos
dec
cmpsb
les
stc
dec
ror
sub
pop
jecxz
mov
fsubl
popa
and
pop
aam
inc
and
xor
xor
jne
xchg
les
repnz
adc
out
xlat
or
xlat
shll
push
mov
jo
or
jb
mov
fildl
xor
or
shlb
loop
aad
mov
xor
push
xchg
mov
aam
xor
pop
cmc
add
fcompl
inc
clc
inc
and
cmpsl
aas
push
sbb
xchg
xchg
cwtl
push
outsl
sbb
leave
sub
ljmp
js
jge
ror
push
pop
add
add
push
cs
xchg
fsubl
sarb
inc
movsl
mov
into
jo
push
movl
sbb
push
outsl
push
xchg
mov
subl
mov
xor
in
jbe
mov
cmp
lods
inc
test
vpsubd
add
cltd
mov
and
in
push
das
lret
lret
mov
xor
fwait
xor
cmpsb
and
mov
adc
mov
hlt
push
fistpll
cld
cmpsl
xchg
scas
xchg
outsl
sahf
ds
std
shl
pusha
mov
repnz
sahf
jno
sqrtps
lret
test
mov
pop
add
inc
iret
sbb
andl
cmpsb
xchg
into
dec
sbb
push
and
dec
mov
shll
enter
mov
sub
adc
imul
adcb
adc
fs
ror
adc
leave
rorl
sbb
cs
lock
xor
repz
and
hlt
dec
and
dec
repz
pop
mov
stc
out
add
push
ds
sub
pop
fs
push
add
imul
test
call
pop
lods
pushf
jae
js
xor
or
cmp
scas
pop
jecxz
fcomps
mov
cmpsb
push
pop
clc
inc
jb
dec
daa
into
cmp
pop
adc
mov
rolb
ja
pop
jl
mov
mov
insb
mov
bnd
sub
scas
xchg
jno
test
test
cmp
loopne
inc
pop
xor
outsl
add
xor
movsb
lret
or
mov
fdiv
shlb
fldt
rep
lret
jg
mov
inc
mov
loop
sub
push
adc
clc
icebp
bnd
into
push
lret
pop
dec
cmc
sbb
in
fwait
sub
ljmp
adc
cmp
and
xchg
shlb
stc
dec
subb
add
insl
adc
dec
cs
dec
jecxz
nop
jne
xchg
scas
inc
leave
imul
leave
daa
aas
cld
mov
and
dec
push
jmp
imul
and
std
repz
pop
inc
shrl
ljmp
pop
jns
add
popf
loop
jecxz
pop
jecxz
pop
sbb
popf
adc
imul
repnz
push
inc
in
pop
sub
sub
lds
les
lods
fmuls
inc
testb
popf
jcxz
repz
sti
icebp
cmp
scas
push
or
push
mov
and
xlat
xchg
out
pop
cmp
fidivs
nop
jle
and
sbb
leave
fcmovb
popf
pop
pop
insl
fdivl
insb
mov
jbe,pt
shlb
out
jb
pop
and
push
pop
sub
xor
adc
xor
divl
cmp
mov
insl
xor
cmp
jmp
mov
hlt
xchg
aas
pusha
xlat
jp
pop
ret
aas
addr16
test
xor
pusha
sahf
cld
data16
arpl
mov
or
jecxz
push
mov
inc
je
stc
sub
mov
jp
hlt
jne
jmp
and
xchg
mov
leave
pop
and
fsubl
lcall
mov
shrl
movsl
lret
daa
sub
cvttps2pi
pop
imul
adc
or
bound
push
pusha
cmp
loop
lcall
mov
mov
cmp
mov
inc
or
pop
je
shl
das
mov
sub
mov
sbb
icebp
xchg
mov
jmp
jmp
inc
pop
popa
cli
cmp
or
loope
pop
dec
sub
popa
pop
cmpsl
xor
stc
add
mov
scas
mov
bound
jo
movsl
repnz
das
inc
mov
addr16
int
cmp
inc
or
pop
pop
inc
daa
loope
jns
mov
sbb
insl
mov
or
aas
bound
bound
mov
nop
test
dec
xchg
xchg
sbb
scas
daa
mov
xor
mov
push
pop
jl
sub
adc
cmp
aad
stc
popa
out
sbb
test
fsubl
mov
xor
cmpsb
std
pop
popa
xor
mov
scas
stos
mov
je
cmp
roll
aad
jbe
inc
sub
sbb
and
jno
dec
pop
nop
dec
mov
dec
in
or
add
inc
push
outsl
insb
pop
ficoml
jmp
inc
loop
cmp
adc
add
mov
fbstp
mov
and
mov
rorl
test
cmp
pop
int3
push
mov
fs
cli
xlat
inc
inc
fcoml
dec
imul
pop
test
in
aas
cmpsl
sub
xor
pop
add
inc
adc
loopne
mov
sub
cmpsb
jmp
lds
dec
hlt
dec
in
xchg
leave
daa
out
cwtl
and
fistpl
rorl
sbb
xor
cmpsl
push
mov
xor
popf
lahf
mov
mov
leave
mov
jns
pop
enter
ficoms
cmpsl
repz
enter
adc
lcall
idivb
in
jne
mov
jns
mov
mov
mov
fisttpl
cltd
pop
add
loope
mov
pusha
or
adc
mov
inc
or
test
iret
insb
insl
sti
mov
mov
jp
incb
mov
inc
sahf
loope
xchg
dec
scas
shlb
int3
adc
add
pop
mov
or
push
sub
xchg
es
mov
pop
or
lods
xchg
pop
jbe
inc
sarb
mov
and
shrl
adc
shrb
sbb
mov
stos
mov
and
pop
testb
add
es
and
cmc
mov
inc
add
negb
mov
enter
out
push
mov
js
repnz
push
push
pop
jno
nop
mov
popa
adc
in
mov
out
pop
aas
lods
pop
and
jns
adc
subb
repz
jl
and
pop
inc
movsb
test
and
mov
xlat
xchg
pop
jno
dec
cmc
jne
shl
nop
xchg
cmp
sub
dec
xchg
xor
xor
dec
push
mov
fnstenv
into
in
inc
daa
fstps
dec
lahf
adc
pop
add
push
seta
cmpsb
pop
jl
sahf
push
pop
jb
xor
out
ret
mov
pop
daa
and
xor
addr16
fistpl
dec
inc
popa
adc
fcmovnbe
test
mov
push
sbbb
mov
xor
cmp
outsb
jae
mov
test
fs
cmp
mov
aas
mov
mov
pop
gs
ljmp
or
xchg
ret
mov
dec
push
mov
js
pop
js
movsb
or
pop
adc
xchg
cmp
inc
in
leave
add
stos
push
repnz
repnz
inc
jge
mov
lahf
cmp
in
add
cs
jae
pushf
jmp
inc
push
push
xor
pop
and
imul
jecxz
inc
pop
push
cld
mov
ret
dec
cmp
add
repz
push
sti
cmpsl
push
push
push
adc
mov
cmp
mov
sub
mov
mov
mov
mov
popa
cmc
or
jecxz
jmp
incl
push
add
push
arpl
push
es
jle
sub
and
loope
shr
loope
rol
push
rcr
movsl
xchg
inc
std
pusha
mov
or
inc
or
and
pushf
and
xor
xchg
adcb
dec
cwtl
jb
jb
sbb
fidivrl
sbb
dec
inc
stc
hlt
leave
and
mov
jecxz
fimull
push
inc
cmp
mov
and
and
jg
mov
xchg
push
loopne
jb
xchg
or
in
inc
lds
rclb
lds
and
test
divl
dec
adc
pop
fidivl
int3
popf
jno
jnp
bound
mov
clc
cld
mov
sub
gs
cmp
or
inc
int3
adc
cmp
pushf
pop
push
sahf
xor
clc
lret
or
pop
dec
ret
imul
push
rorb
out
dec
out
int
divb
or
ret
or
or
arpl
repnz
cmp
jb
lcall
insl
xor
xchg
out
mov
pushl
xchg
mov
push
xchg
frstor
daa
sub
cwtl
cmp
ror
mov
loop
decl
or
pop
add
sarl
dec
ret
mov
mov
xor
insl
clc
mov
iret
lods
popf
jl
mov
dec
xchg
xchg
insb
jnp
lret
mov
mov
lcall
adc
fsubrs
push
jns
mov
inc
mov
test
lahf
cwtl
dec
or
jge
xchg
xchg
test
dec
mov
ficomps
enter
push
out
shr
jecxz
ja
repnz
getsec
jl
es
test
inc
les
pop
jne
icebp
xchg
and
lret
test
fwait
jae
mov
push
test
out
in
pop
cmp
mov
sahf
stos
scas
pop
add
and
pop
aaa
jp
dec
in
mov
loop
in
sbb
jecxz
and
bnd
or
adc
fs
and
fisttpl
cmpsb
outsl
test
mov
js
insb
mov
mov
mov
stos
xchg
sub
cmp
ja
nop
mov
popf
fwait
jnp
jle
and
insb
jmp
jmp
cmp
lcall
mov
ret
ja
and
sbb
arpl
test
lret
pop
inc
inc
dec
push
xchg
push
sbb
enter
pushf
inc
push
stos
daa
xor
add
xor
jecxz
or
push
push
xor
or
bound
push
out
in
inc
addr16
inc
push
sbb
mov
xor
cmp
or
popf
cs
test
insl
mov
push
cmpsl
mov
mov
add
rcrb
mov
stos
mov
cmp
mov
sub
aam
jmp
jecxz
mov
jl
mov
idivb
lcall
jp,pt
and
xchg
and
push
jb
mov
add
adc
lcall
outsb
sarb
rcll
scas
int
xchg
and
mov
icebp
sub
or
xchg
pop
mull
mov
jecxz
mov
jae
pop
xor
data16
mov
addr16
push
in
dec
lahf
adc
stos
cltd
stc
out
repnz
movsb
hlt
mov
int3
aad
jge
repz
sub
sbb
xchg
inc
and
xor
pop
pop
mov
int
push
hlt
push
pop
lods
sub
dec
daa
adc
mov
in
or
xchg
cmp
ret
pop
outsl
inc
xchg
mov
sbb
dec
popa
adc
push
scas
int
adc
mov
fnstcw
or
inc
ljmp
out
mov
xchg
sbb
sti
jmp
xchg
sahf
das
xor
jne
jbe
mov
imul
push
dec
mov
inc
pop
cmp
mov
push
adc
loope
jo
lods
jae
mov
cwtl
pop
mov
add
inc
push
or
adc
adc
rcrl
mulb
mov
aam
cmpsl
test
mov
cmp
repnz
mov
ljmp
testl
dec
lea
cmc
mov
xchg
or
stos
or
test
adc
jns
add
ret
scas
lret
pusha
iret
jbe
inc
add
xchg
loopne
xchg
test
or
out
scas
pop
and
or
arpl
mov
sub
mov
sub
and
call
push
into
enter
cmp
inc
xor
in
cli
cmc
sbb
mov
sub
cld
or
jae
into
pop
orl
shll
xor
xchg
fisubrs
dec
xchg
test
das
addr16
lods
cmp
lret
mov
cmp
adc
or
gs
mov
xor
mov
mov
fwait
bnd
movsl
inc
lods
push
sbb
xor
push
push
cmp
xchg
adc
gs
xor
dec
push
ret
lock
scas
push
and
sbb
sub
lcall
leave
lods
mov
cmp
into
je
sub
jl
xor
push
mov
call
sbb
cld
push
push
lds
lds
push
inc
jnp
fdivp
scas
lret
or
push
xchg
dec
outsw
mov
and
jmp
mov
jnp
in
nop
or
dec
jecxz
popa
jmp
cwtl
lahf
insl
cmpsb
divb
shlb
loopne
movsb
imul
push
leave
adc
sahf
movsl
stos
mov
dec
or
push
es
into
dec
adc
push
aaa
nop
fimull
test
movsb
mov
pop
push
stc
mov
sbb
icebp
test
jo
subb
sub
hlt
mov
je
mov
pop
mov
mov
out
cli
dec
xor
hlt
jns
leave
push
mov
lahf
jne
push
subb
les
push
fistpl
mov
in
xchg
stos
mov
mov
push
mov
roll
ljmp
jecxz
pusha
repnz
or
mov
pop
xor
out
cmpsb
ficoml
stos
in
jnp
and
pop
imul
shlb
retw
mov
cli
cltd
dec
inc
push
fisubs
out
adc
aas
jmp
out
fidivrs
repz
pusha
mov
or
mov
push
inc
and
ret
mov
mov
cmp
cltd
pusha
jbe
jae
cmpsl
mov
inc
pusha
ja
shrl
leave
cmp
dec
mov
sub
popf
mov
lret
lahf
and
adc
inc
mov
imul
add
ds
loop
pop
pop
ljmp
xchg
fidivrs
xchg
pop
ror
pop
test
xchg
xchg
or
ja
lahf
mov
decl
fiaddl
mov
rclb
jnp
lods
jl
fsubrp
or
dec
clc
movsl
dec
or
ret
sbb
les
scas
in
mov
pop
add
into
mov
out
jb
mov
adc
fisubrl
enter
andb
or
leave
jo
aas
out
ret
rclb
xorl
cmc
xchg
lods
stc
cltd
xchg
daa
sub
mov
stos
or
into
rcrl
jp
sahf
fwait
or
dec
push
and
adc
stos
scas
xlat
push
cli
sub
inc
out
jne
jp
hlt
ljmp
daa
pop
ss
lret
sbb
xor
jnp
jno
clc
flds
inc
mov
add
outsb
jmp
cltd
dec
xchg
pop
or
aad
out
hlt
test
ss
cmpsb
xchg
int3
ret
movsb
es
in
ljmp
bound
outsl
sbb
test
jmp
jge
outsl
inc
pop
jae
or
movsl
push
cmp
or
sbb
roll
xor
mov
psrlq
fdivr
add
xchg
in
cmpb
or
mov
in
fisubrl
mov
popf
or
enter
add
into
imul
popa
inc
movb
add
cmp
sbbl
pop
mov
dec
adc
mov
rcll
lcall
adcl
movsl
pop
inc
std
xor
jmp
add
cmp
hlt
les
push
enter
mov
insl
sbb
cmp
out
jmp
stos
dec
xchg
dec
mov
jmp
jge
push
lcall
pop
adc
out
adc
or
in
xchg
and
jecxz
popa
mov
test
sbb
icebp
xchg
jle
add
cmpsb
mov
fxch
aaa
enter
or
xor
jg
adc
imul
pop
sbb
ja,pt
or
out
js
out
faddl
push
shl
out
outsb
jo
aaa
inc
call
push
mov
test
ja
pop
pop
sti
jno
cld
cli
loope
add
add
fisttpll
jne
data16
inc
or
add
adc
jno
es
stos
sub
mov
decl
inc
and
call
aaa
sub
mov
daa
ud1
sub
jno
mov
push
orb
test
movsl
fwait
pop
std
ret
gs
ret
xor
mov
popa
fisttpl
fiadds
and
aas
mov
mov
cwtl
xchg
xor
sbb
fidivs
sti
sub
cmp
hlt
and
mov
shl
js
aas
mov
sbb
imul
or
mov
cltd
hlt
pop
stc
pop
xor
mov
dec
pop
dec
or
sub
jne
add
out
loopne
push
dec
push
lahf
push
jae
sti
jae
test
mov
leave
inc
xor
cmp
mov
pop
pop
scas
in
or
adc
fsubp
sbb
daa
jo
in
fidivrs
pop
push
xor
pop
lret
dec
jns
daa
into
cmp
loopne
xchg
xor
das
pushf
xor
lock
cwtl
out
in
inc
scas
test
push
mov
int3
popa
pusha
daa
je
in
xchg
add
rol
jno
dec
lods
enter
xchg
jp
inc
ficoms
and
sbb
sbb
popl
xlat
jae
lcall
stc
dec
add
out
fcmovne
out
mov
mov
mov
aad
into
movsb
dec
sbb
pushf
xchg
inc
mov
orl
in
ret
sub
inc
inc
xlat
mov
sbb
xchg
and
jge
test
xor
add
push
pop
test
xor
adc
push
adc
sub
inc
mov
cld
fcomps
stc
fisttpll
push
iret
adc
cltd
test
stc
adc
or
dec
outsl
add
fimull
call
stos
push
ror
xor
test
outsl
and
fcmovnu
std
out
mov
sub
cmp
cmp
mov
shlb
out
mov
and
fwait
mov
roll
push
notl
lret
out
xchg
sub
xchg
addr16
cltd
mov
inc
in
insb
cmp
jbe
lahf
and
mov
movsl
mov
xor
out
xchg
and
pop
add
sub
es
pop
mov
xchg
adcb
adc
pop
and
pop
add
rolb
ja
sub
mov
sti
aas
dec
cmp
orl
ljmp
pushf
sbb
inc
inc
daa
dec
xor
jne
mov
add
stos
mov
xchg
loopne
iret
mov
fnsave
cmp
dec
xchg
cli
mov
sub
scas
sbb
shll
out
rsm
or
lret
inc
pop
xlat
sti
mov
mov
fnstcw
loope
imul
and
enter
sarb
int
je
int3
mov
lahf
and
icebp
xor
dec
cmpsb
mov
push
mov
xchg
pusha
jl
xchg
cltd
jae
push
arpl
or
push
inc
jmp
stos
cmpsl
pop
sbb
test
or
test
das
jge
popf
dec
mov
and
ret
sbb
mov
movb
in
adc
gs
pop
mov
shl
das
mov
jbe
jmp
fcmovnu
push
stos
push
mov
lret
mov
jns
sbb
cmp
out
lcall
jmp
outsb
or
test
cld
arpl
mov
pop
fucomip
popf
or
xor
sbb
in
inc
out
mov
out
mov
add
loopne
lret
jmp
icebp
clc
inc
imul
mov
xor
ret
enter
sahf
xchg
into
ret
pop
ja
dec
test
mov
push
xor
sub
les
fisttpll
mov
xchg
ljmp
roll
and
inc
and
inc
inc
cmp
inc
sarl
movsb
aam
inc
ds
add
mov
fwait
das
fwait
clc
out
in
inc
push
adc
dec
lods
inc
inc
adc
movsb
cmp
and
in
mov
mov
and
daa
pop
mov
es
jge
jle
or
testl
and
mov
inc
dec
in
fdivr
cmp
cmp
rcrb
sub
push
aaa
pop
loopnew
cmp
dec
adc
pop
xchg
add
aad
nop
lds
mov
test
scas
bswap
ja
imul
js
mov
push
mov
push
jnp
xor
lods
outsb
loop
add
out
inc
cltd
shll
xchg
sbb
and
in
ror
fldl
lds
pushf
adc
mov
in
shrl
jecxz
mov
sub
in
out
shrb
jo
ret
xchg
movsb
fdivl
dec
pop
jnp
cmp
push
mov
sbb
mov
push
push
and
mov
or
repz
mov
imul
inc
scas
sbb
mov
ja
add
push
pop
mov
push
inc
and
inc
repnz
jo
cmp
sti
lea
int
inc
jb
rcrb
push
mov
nop
rcrl
xlat
enter
in
arpl
mov
jge
movsl
cmp
push
movsl
popf
sbb
movsb
stos
inc
stos
mov
mov
push
mov
adc
fstp
mov
ss
and
add
or
mov
daa
push
nop
or
pop
jne
mov
test
gs
inc
cmp
nop
popa
addb
out
les
iret
add
adc
add
xchg
test
mov
les
fxch
xlat
int
test
xlat
ss
clc
sbb
jb
scas
push
or
pop
outsb
cmp
xchg
test
jl
mull
jae
mov
dec
sbb
xchg
out
fincstp
and
cmc
ret
fildll
and
push
pop
movsl
jb
aam
pop
clc
cmp
mov
inc
sahf
or
pop
test
xchg
imul
xchg
stc
adc
pop
lret
mov
mov
test
jmp
push
xor
adc
enter
je
lahf
loope
rorb
xor
sti
lret
xchg
stos
cmp
sub
mov
ret
mov
add
fldl
xor
mov
add
push
xchg
xor
idivb
push
aam
or
xchg
scas
fildl
aaa
decl
mov
sahf
jae,pt
sub
fidivrs
ret
or
mov
lea
mov
sub
ja
mov
into
ret
cld
out
jecxz
loope
sar
out
adc
sub
sub
int3
or
cmpsl
lea
mov
fcmove
mov
cltd
cmp
jo
daa
adc
loop
fidivl
ss
shll
push
adc
jb
xor
or
and
mov
cmc
fcomip
pop
test
xchg
shlb
test
mov
out
push
push
bound
jge
imul
jbe
cli
push
push
loope
das
xorb
je
pop
and
cmp
movsb
cs
xchg
test
ss
mov
fs
pop
mov
dec
shrb
dec
daa
sub
and
mov
icebp
mov
xor
shr
inc
into
sbb
addb
mov
or
ds
test
orl
and
inc
xor
jl
mov
jle
jmp
mov
addr16
sbb
sub
xor
lock
in
iret
call
xorb
inc
mov
insb
je
stos
mov
movsl
jge
xor
add
scas
dec
lret
loopne
std
xor
pop
dec
repz
dec
loop
cmc
repz
int
rcrl
hlt
int
add
movsb
pop
pop
push
xor
and
jecxz
push
lea
test
loope
sbbb
jb
mov
push
popaw
movsb
pop
outsl
mov
aas
mov
mov
lods
ret
mov
sbbl
mov
ds
pop
ja
cwtl
add
push
test
cwtl
xor
popf
or
out
xor
sub
icebp
cmp
and
adc
aas
ss
sbb
jns
clc
fists
add
icebp
mov
sub
add
cmp
sti
mov
push
fidivrl
xchg
imul
adc
lds
inc
movsb
and
ja
bound
sub
push
pusha
test
or
int3
push
push
lds
mov
rcl
int
dec
pop
in
push
mov
jmp
scas
les
je
push
clc
pop
sub
mov
call
xchg
cmp
dec
rcrl
sbb
cs
cmp
mov
and
mov
jns
movsl
inc
lret
push
mov
push
outsl
mov
push
cmp
aam
xchg
jg
cmp
jbe
icebp
sahf
or
test
stc
or
mov
or
popa
sbb
sahf
or
adc
xor
adc
add
add
adc
mov
cwtl
in
std
jl
cmp
fisubl
les
dec
jle
je
cld
sbb
xor
cld
cmc
test
adc
push
cli
xchg
or
xchg
xrelease
fdivrl
ret
jle
mov
mov
dec
cmpsl
adc
adc
call
and
bound
test
pusha
and
aam
out
je
sub
sub
into
xchg
repnz
scas
mov
xchg
xorl
push
jecxz
jg
int3
stos
push
aas
movsb
pusha
mov
cwtl
rcll
out
mov
test
push
aas
ja
fsts
das
sub
jecxz
in
add
inc
les
inc
js
test
jl
out
clc
outsl
sub
jg
ficoms
mov
xchg
xchg
testl
xchg
pop
sete
int
push
add
pop
popa
call
incb
xor
int
daa
mov
insl
imul
movsb
pop
lods
mov
jo
rcl
int3
ror
stc
data16
pop
addb
fadd
and
push
jns
xor
in
ret
xor
and
jne
out
insl
aad
repnz
sub
jg
repz
out
push
fistpll
and
pop
cltd
loop
loopne
and
aad
mov
popf
adc
fimull
push
enter
ja
jo
fists
mov
lock
int
mov
stc
loopne
jl
mov
js
or
in
dec
push
aaa
pushf
ljmp
sbb
or
icebp
out
outsl
adc
rolb
add
cmc
int3
ret
cmc
adc
inc
data16
aas
or
iret
sbb
push
lds
mov
imul
or
or
mov
mov
sbb
cli
je
mov
mov
xchg
jae
dec
rcr
mov
mov
cld
es
loope
aaa
and
push
aam
ficompl
sbb
mov
pop
sub
enter
arpl
jg
dec
ret
adc
cs
sti
sub
xchg
inc
fsubl
jecxz
sbb
and
fwait
inc
sub
sub
andb
out
sbb
dec
int3
fdivl
pushf
sub
mov
loopne,pt
flds
xor
sqrtps
adcl
sbb
es
push
mulb
jmp
fs
pusha
mov
loope
cmpsb
iret
sub
sbb
xchg
scas
sbb
dec
xor
xlat
loopne
into
popa
jns
adc
lret
jge
mov
repnz
fimull
cmp
push
sbb
into
mov
xor
daa
sub
frstor
dec
sbbb
jno
cld
push
push
pushf
mov
mov
fwait
xlat
fst
rcll
fnsave
jo
sub
std
mov
xchg
add
out
mov
scas
jnp
shrl
dec
mov
ds
sbb
pushf
sbb
dec
xlat
add
inc
push
mov
btr
cld
sub
inc
mov
arpl
fildll
pop
movsl
dec
fadds
xchg
cmpsl
mov
jne
push
rcrb
or
dec
ret
lds
in
fiaddl
lock
xchg
add
cmp
jle
sub
ds
mov
fs
fiaddl
mov
sbbl
je
jle
dec
mov
cmp
cmp
push
jne
jl
mov
mov
or
in
aas
popf
sbb
aas
xchg
jns
sbb
mov
push
mov
xchg
sbb
and
repnz
arpl
loope
add
jnp
daa
xchg
out
mov
repnz
xor
dec
cmc
mov
push
jmp
out
push
adc
xchg
js
mov
xchg
sub
inc
into
iret
push
movsb
adc
dec
xor
mov
ficoms
jne
jle
jo
js
mov
dec
mov
movsl
dec
mov
inc
sbb
fistps
push
test
inc
movsb
icebp
std
mov
out
lock
hlt
push
subb
adc
xchg
bnd
inc
rcll
lea
mov
mov
mov
popa
cltd
aam
loopne
sbb
pop
js
stos
les
nop
int
push
mov
sub
cs
jns
lds
add
or
mov
or
popa
dec
add
push
es
pop
fnsave
sub
inc
sub
out
mov
jnp
sub
xchg
xchg
ljmp
mov
repz
imull
orb
ror
insl
ja
bnd
lcall
std
xor
mov
mov
fistps
sti
inc
call
push
sar
test
addl
test
fistps
xchg
mov
add
into
or
mov
das
or
mov
push
fcoml
repnz
shlb
cmp
add
adc
pop
fdivs
sarb
push
sar
pop
je
adc
in
xor
movsl
out
mov
fs
ljmp
outsl
cs
iret
ljmp
ljmp
fwait
mov
ljmp
jmp
test
mov
pop
out
mov
incl
data16
daa
jb
cmp
fmuls
stos
fistps
gs
and
ljmp
jmp
add
aaa
adc
xor
adc
rolb
sub
test
mov
repnz
sbb
fnsave
pusha
and
adc
mov
iret
enter
sbb
cmpl
sar
xchg
pop
mov
sub
test
repz
cmc
inc
xor
inc
sbb
in
xor
daa
mov
inc
fists
push
pop
into
adc
ret
fwait
in
sbb
push
add
test
ret
jb
mov
flds
in
cld
imul
cs
movsb
jge
push
xor
jmp
enter
dec
cld
in
in
pop
adc
jns
hlt
imul
dec
jmp
ljmp
pushf
jnp
xchg
push
mov
into
mov
xchg
xchg
clc
mov
fwait
push
cld
int
lods
cmpb
sub
sub
cmp
cmp
dec
sub
and
jmp
fsubl
mov
movsl
dec
and
scas
lea
or
sbb
nop
pop
adc
adc
shl
jle
sbb
fiaddl
mov
push
movsl
lahf
or
sub
pop
out
mov
mov
jl
fiadds
mul
or
inc
popa
mov
lds
loope
ret
or
mov
out
mov
jle
idivb
nop
add
pop
mov
stc
xchg
sub
std
dec
sub
adc
push
addb
add
int3
cltd
and
xor
pop
add
pop
xchg
cltd
jo
dec
mov
add
and
stc
pop
addl
cmp
fchs
jns
or
push
inc
sub
and
loop
jno
shl
psrld
push
aad
mov
jmp
filds
pop
mov
sub
or
test
icebp
testb
lods
out
out
in
bound
pop
shrl
imul
shlb
rclb
test
xor
sub
test
mov
js
pop
scas
mov
arpl
pop
int
in
jle
divl
cmp
mov
push
inc
popf
test
imul
xor
inc
inc
cwtl
gs
xor
lock
jb
jne
mov
in
cmpsl
adc
int3
add
xor
mov
dec
les
test
fs
mov
cltd
imul
es
cmp
fstl
add
mov
std
rol
out
sub
cmp
push
push
push
and
out
lea
shlb
imulb
mov
repnz
lds
sub
int
pop
fcmovne
pusha
add
and
pop
fcom
sub
lret
in
dec
adc
in
imul
icebp
mov
cmpsb
fidivrl
insb
pop
test
in
movsb
in
push
pushf
dec
out
mov
sub
dec
fwait
imul
and
jae
ds
mov
mov
aaa
mov
cmp
mov
cmpsl
pop
test
xchg
aas
mov
in
mov
or
mov
jle
bswap
dec
or
push
psrad
pop
pop
push
insb
sub
test
pop
sbb
js
fs
cmp
mov
mov
mov
cmpsl
loopne,pt
push
daa
dec
dec
pop
mov
sub
adc
inc
imul
push
cmpsl
cld
addr16
cmp
mov
sbb
jp
cmpsl
mov
sbb
insb
call
cs
neg
dec
cmp
xchg
sbb
mov
mov
xorw
call
stc
idivw
adc
sbb
mov
dec
repz
push
inc
les
sub
mov
sub
and
sub
aas
test
ljmp
xor
in
stos
fnop
mov
and
mov
and
dec
roll
mov
outsl
mov
jg
jae
inc
sbb
xchg
call
aaa
orps
enter
popf
pop
out
stos
sbb
mov
ror
ja
cmp
or
outsl
cmc
test
stos
push
ja
add
push
mov
movsb
lds
or
jmp
mov
xchg
jae
cmc
cmpb
repz
stos
inc
mov
pop
in
or
mov
icebp
jo
cs
test
aaa
lock
imul
inc
cld
push
adc
mov
cli
ljmp
cwtl
sbb
add
pop
adc
lods
iret
push
fisubs
xor
aas
data16
sub
into
in
or
dec
daa
fyl2x
fidivrl
push
sub
pop
pusha
dec
jp
jno
int
addl
shll
dec
cmp
dec
adc
shrb
jb
or
fs
jb
sbb
cmc
push
mov
movb
cmpsb
popa
xor
mov
ret
mov
push
mov
jecxz
jo
xchg
mov
in
mov
jle
fincstp
inc
lret
fdivrs
cmp
cmp
xlat
pop
mov
push
push
fmuls
lods
mov
clc
sbb
or
add
or
pop
jp
mov
pop
cmpl
xchg
out
xor
dec
dec
cltd
imul
add
mov
adc
xchg
pushf
jge,pn
xor
sbb
inc
pop
jnp
lock
in
ljmp
or
mov
stos
sub
pop
cmp
xorl
pop
ret
pop
movsb
or
mov
gs
add
adc
inc
mov
mov
imul
sub
ror
cmc
push
in
jno
sub
test
imul
sti
fsubrp
int3
push
imulb
loopne
nop
mov
add
stos
scas
inc
dec
pop
pop
pop
sub
cmp
ret
lods
in
cltd
pop
xor
lds
push
or
xchg
arpl
je
scas
adc
outsb
lcall
cmp
inc
int
mov
sub
lds
mov
dec
push
pop
mov
mov
jle
out
cmpsl
or
aad
mov
dec
push
and
pop
mov
std
cmp
jo
xchg
jne
cmpsl
test
lcall
push
add
jge
lahf
ds
jg
push
hlt
xchg
lock
mov
cmp
les
fs
jo
or
push
mov
repz
icebp
clc
test
inc
pushl
sbb
xor
sbb
outsb
pop
test
fs
shll
ds
movsl
cmp
cmp
popa
fildl
push
or
test
addr16
dec
int3
push
pop
pop
adc
sub
js
inc
add
lahf
sbb
mov
mov
xchg
and
jne
cmp
sbb
aaa
lahf
lea
jne
insl
hlt
out
adc
cmp
pop
mov
andl
std
pop
or
sbb
add
inc
in
or
aas
push
lret
inc
in
pushf
lods
cmp
mov
adc
insb
lods
daa
int3
mov
add
iret
je
push
loop
les
sbb
add
xchg
enter
pop
out
cmpsl
dec
adcb
add
arpl
push
cld
xchg
or
mov
popf
mov
dec
and
ss
sbb
sub
je
pop
xchg
mov
inc
jns
adc
ljmp
stos
stc
bound
jbe
mov
or
ret
rcrl
int3
add
pop
xchg
mov
dec
push
loope
hlt
dec
xchg
aas
push
mov
addr16
xchg
rol
bound
cmc
lahf
test
cltd
aas
mov
cwtl
cs
mov
ss
add
jg
jl
or
push
add
inc
sub
adc
rorb
pushl
sbb
ret
cwtl
inc
clc
push
insb
mov
aaa
cld
out
rcll
jae
push
rclb
stos
mov
mov
fnstcw
ja
xchg
mov
daa
push
out
add
ret
mov
popf
aaa
sbb
xchg
aas
push
pop
lcall
fnsave
addb
aad
mov
mov
pusha
xchg
popa
pop
mov
mov
pop
push
mov
add
dec
lods
leave
rol
or
pop
outsb
je
incb
sbb
ja
mov
push
hlt
mov
jl
out
adc
or
cmp
xor
jo
in
mov
sahf
mov
call
jb
or
call
vmovq
ljmp
pushf
push
es
xchg
xchg
pop
inc
sbb
lret
push
fstpt
cmp
push
xor
push
adcl
push
lahf
leave
lret
dec
dec
adc
lods
sub
mov
nop
pop
or
lahf
mov
pusha
jmp
xchg
pop
scas
jecxz
and
lahf
mov
cli
sbb
cmpsb
bound
adc
dec
add
mov
jmp
push
cmc
pop
cli
cmc
mov
sub
fxch
adc
mov
dec
sti
loopne
hlt
je
add
mov
pop
loopne
cld
outsl
cmc
test
mov
mul
jnp
inc
xor
dec
pop
lods
stos
mov
lock
add
sbbb
mov
xchg
imulb
mov
les
adc
sub
mov
lret
lods
jle
push
fs
jns
outsl
xchg
loop
clc
jmp
nop
push
pop
loope
push
in
pop
sub
mov
sub
call
jbe
add
xchg
add
mov
pop
jae
cmp
pop
sbb
ret
mov
repnz
jae
loop
jns
pop
or
insb
mov
rcrl
insb
jmp
out
aaa
setnp
or
jae
xor
bt
pop
push
call
and
in
test
loope
fmul
call
repnz
pusha
cmp
cltd
lock
sub
popa
lods
sbb
dec
in
inc
mov
mov
push
jns
dec
das
jg
pop
shr
and
mov
fcomps
push
xor
and
data16
mov
mov
jno
out
insl
in
inc
icebp
cmp
subb
dec
andl
sbb
enter
ret
ja
movsb
inc
je
add
loopne
leave
lock
mov
jo
jne
add
pushf
add
aad
xchg
add
jnp
aas
xor
add
jecxz
inc
aam
iret
xchg
push
mov
sbbb
push
fwait
and
imul
or
inc
pop
sahf
pushf
jmp
adc
mov
and
or
fwait
loope
pop
fldt
push
sub
cmp
or
in
dec
dec
ret
mov
mov
data16
adc
sahf
in
push
lds
pop
adc
jge
fisubs
add
push
cmp
js
aaa
lods
mov
dec
ljmp
into
add
xor
lea
dec
jge
das
jns
and
mov
adc
mov
cmc
xchg
mov
lock
in
xor
push
and
leave
dec
popf
shll
add
xchg
mov
cltd
adc
fidivl
fistpl
gs
and
add
cmp
pop
and
test
sbb
adc
imul
dec
lahf
mov
sub
pop
cwtl
subb
int
out
push
push
sahf
lret
int
sbb
push
mov
sub
les
xchg
sarl
pusha
xchg
add
fisubrl
xchg
loopne
ja
out
sub
xor
adc
out
push
stos
ret
mov
mov
call
test
inc
dec
mov
lcall
ja
outsb
mov
and
aas
fwait
inc
dec
cmp
inc
add
and
lret
pop
xchg
fistl
repnz
and
dec
mull
imul
std
incl
inc
mov
insl
and
fldenv
inc
xchg
dec
stc
mov
adc
ret
adc
movsl
ret
loop
sbb
xchg
push
pop
loop
rcr
sbb
xorl
pop
push
fs
nop
jno
pop
add
pop
nop
cmpsb
ss
cli
imul
out
imul
push
pop
imul
std
lods
dec
cs
xchg
cld
jno
mov
stos
lds
outsb
dec
pop
cltd
xchg
or
jo
sahf
adc
icebp
nop
ds
out
lds
sahf
and
sahf
jbe
cmpsl
popf
nop
arpl
add
cmp
xchg
or
mov
and
sub
cmc
jge
xor
jge
es
dec
std
or
and
call
lods
pop
add
mov
push
fisubl
ds
push
sub
or
mov
inc
rcl
xor
popa
dec
nop
xor
pop
pusha
or
jmp
dec
sbb
fwait
das
das
pop
adc
and
ret
or
lret
nop
add
sti
je
icebp
fwait
add
mov
lock
jb
sbb
enter
adc
lret
out
or
bound
cmp
mov
push
push
rolb
push
jmp
mov
loop
sub
jle
bound
mov
dec
cwtl
add
sbb
pop
push
out
out
pop
out
or
or
mov
and
xor
rcl
insl
adc
and
push
mov
lret
mov
jbe
jp
repz
loopne
pushf
ja
cli
repz
and
movl
sub
insl
in
sub
mov
fidivrs
loope
or
inc
jle
sbb
nop
push
mov
dec
lock
lods
bound
adc
ss
rcr
bound
fs
test
pop
imul
mov
in
or
mov
js
add
pop
and
pop
inc
sub
jae
adc
mov
cltd
lods
subl
and
insl
push
cmp
aas
mov
jp
push
scas
sti
fsubrl
and
jne
push
sahf
mov
scas
add
pop
dec
aad
movsl
mov
in
int3
in
loopne
jle
jmp
popa
push
adc
clc
cmp
push
stc
fldl
jno
cmpsb
insl
push
cltd
repz
ret
mov
inc
jmp
bnd
push
add
loop
jns
nop
mov
lret
inc
lds
ret
pop
and
sbb
jl
dec
fs
or
js
ret
add
popa
pop
jecxz
test
pusha
daa
testl
xor
lcall
roll
sub
fsts
inc
imul
sbb
pop
ljmp
or
in
mov
decb
jg
js
ficoml
mov
dec
in
cmp
shrl
or
push
add
or
inc
lds
fcmovne
in
sub
subl
xchg
cmpsb
outsb
sbb
cmpsl
dec
sub
or
loop
mov
negb
or
les
push
jmp
aaa
fsubrs
sbb
dec
inc
mov
nop
rorb
adc
pop
lahf
or
fwait
cmp
xor
mov
out
push
jb
push
or
sub
lods
out
enter
lahf
jno
andl
popf
sub
or
lahf
pop
pop
into
in
or
mov
add
les
and
lret
inc
add
cmp
or
or
cmp
xor
mov
jne
fidivs
mov
dec
and
out
xorl
xor
jl
add
push
lods
cmpsl
imul
ret
cmp
mov
dec
mov
mov
sub
lcall
clc
inc
dec
stos
jb
daa
or
jne
fdivrs
xlat
insl
mov
pop
cwtl
inc
stc
in
mov
jnp
pop
test
cvtdq2ps
mov
add
cmc
cld
and
in
mov
inc
cmp
movsb
sti
pop
xor
push
in
out
lds
out
and
ret
push
ret
mov
or
mov
test
inc
jo
mov
ret
dec
jbe
mov
test
cwtl
sbb
jae
ljmp
movsl
pop
xchg
cmp
cmp
dec
daa
scas
jbe
imulb
push
inc
push
dec
mov
mov
mov
jl
or
test
in
xchg
shll
and
dec
sbb
lcall
out
push
push
and
call
mov
jmp
gs
inc
incb
sbb
repnz
xchg
mov
cmpsl
out
mov
inc
dec
out
dec
in
cmp
inc
inc
jp
push
lret
jg
ret
lcall
pop
sarl
mov
test
call
mov
xchg
push
mov
das
mov
sbb
imul
add
dec
dec
mov
repnz
xor
mov
xchg
rclb
jp
jg
xor
popa
in
dec
shlb
test
aad
push
insl
inc
xor
cwtd
mov
and
add
pop
stos
stc
cmpsl
dec
std
test
xchg
mov
sub
adc
mov
cmpsb
out
mov
pushf
xchg
adc
loop
pop
push
or
sbb
mov
adc
xchg
daa
addr16
call
je
mov
sti
mov
in
jl
mov
pop
pop
mov
daa
int
mov
inc
fs
jmp
gs
aaa
mov
or
in
cmp
xchg
test
cmp
inc
bound
daa
or
hlt
ja
shrb
cmp
scas
ret
mov
cmp
or
push
add
pop
in
inc
mov
scas
dec
out
mov
iret
cltd
mov
dec
push
mov
jp
jmp
popl
clc
dec
test
sbb
sub
out
sbb
xchg
push
movsl
push
and
or
in
adc
cmpsb
jmp
sti
gs
lock
inc
xchg
and
mov
jno
xchg
not
mov
cld
dec
push
xor
mov
into
int3
mov
sbb
xor
loopne
loop
sub
sbb
lahf
call
loopne
ret
jl
iret
sarl
and
xchg
fimull
and
data16
adc
add
push
jl
sub
mov
outsb
data16
pop
jecxz
xor
add
push
xchg
gs
test
loope
das
and
ret
je
lret
shll
in
mov
adc
gs
outsb
mov
cmpsb
pop
mov
in
into
pop
jne
dec
jae
jae
add
mov
out
loope
dec
loope
mov
clc
sbb
fistpl
imul
je
adc
not
out
add
rcrl
mov
scas
jge
cltd
and
pop
outsb
aaa
jge
icebp
andb
roll
lret
les
fists
ret
mov
xlat
and
cmp
xchg
mov
in
jb
adc
int3
push
sahf
bound
movsl
jmp
inc
xor
out
out
les
push
pop
mov
dec
sahf
jne
mov
xor
in
bnd
fs
pop
stos
scas
inc
cld
rol
loop,pn
xor
adc
cmp
inc
mov
clc
fwait
sbb
mov
in
push
and
mov
aam
sub
pop
or
arpl
jae
mov
mov
imul
pop
icebp
mov
testb
pushf
fnstcw
pop
loopne
imul
jno
jne
loopne
sub
mov
rol
xchg
incl
roll
int
dec
cmpsb
mov
jb
dec
sbb
in
pushf
iret
movaps
mov
stc
sbb
lods
fldl
add
lcall
sub
ljmp
mov
jno
cmp
jge
xchg
mov
insb
aaa
insl
icebp
sub
cmp
or
fcomip
insl
stc
outsl
or
mov
push
pop
dec
ja
jns
xor
out
mov
add
hlt
push
ret
mov
std
stos
mov
jae
int3
imul
sbb
fstl
mov
dec
jns
sbb
repnz
cmc
xor
lods
inc
add
outsl
adc
test
lods
lods
add
pop
push
or
cmpl
mov
icebp
fwait
stos
fcoms
rcll
aas
mov
call
out
add
cmp
push
jbe
maskmovq
mov
push
sti
int
cli
das
cmp
and
addr16
cld
pushw
xchg
insl
inc
jecxz
and
xor
ret
jmp
push
inc
cmpl
adc
and
xor
orl
inc
dec
pop
sarl
cmp
daa
imul
cltd
add
lcall
sbb
popf
push
xchg
insl
data16
iret
cmp
jnp
cmpsl
xchg
sarb
adc
fldenv
loopne
shrb
cmp
mov
out
or
push
jge
xor
ja
jne
xchg
jecxz
fldt
push
and
por
pop
xor
cmp
hlt
mov
adc
shr
or
fistps
out
out
mov
test
sahf
jns
push
popa
test
cwtl
addl
xlat
xchg
es
fsqrt
sbb
mov
fisubl
call
push
mov
data16
rol
loop
shll
mov
adc
jne
repz
frstor
mov
es
loopne
or
mov
int
imul
pop
pop
pop
loope
lahf
pop
sbb
aad
repz
jmp
sub
loopne
lret
lods
or
inc
cmp
pop
push
jge
iret
jns
gs
insb
push
push
aaa
mov
divl
movsb
lret
data16
xchg
dec
fisubs
out
mov
das
inc
dec
divps
sbb
fdivs
movsl
scas
lods
xchg
outsl
mov
pop
sub
mov
arpl
ja
stos
mov
lds
ret
bound
and
andb
or
sbb
mov
hlt
or
dec
idiv
xchg
cltd
rolb
xor
movsl
shrl
jb
mov
dec
jne
sahf
jne
imul
pop
push
inc
mov
xor
outsl
outsl
and
xchg
inc
stc
aaa
ret
adc
stos
pop
jecxz
or
cmp
movsb
das
jge
push
imul
cmc
jns
add
cwtl
cmpsl
xchg
sub
loop
pop
jbe
in
or
lret
dec
sub
adc
dec
jmp
shll
adc
pop
dec
daa
xor
cmp
pop
pop
dec
repz
xor
ja
lahf
mov
pop
aaa
sbb
cli
hlt
shll
push
fisubrl
lret
pinsrw
sahf
in
adc
loope
mov
sbb
in
int3
or
sub
clc
popa
mov
mov
sub
pop
fcmovb
in
lcall
ficomps
out
divb
inc
add
adc
pop
sub
scas
xor
sbb
jae
ss
mov
stos
xchg
mov
sbb
push
imul
les
idiv
xor
push
mov
fiadds
negb
dec
hlt
xor
cmpb
enter
push
shr
mov
sarl
cmp
ss
sarl
jp
subl
into
rolb
jl
sbb
cld
or
sbb
sbb
add
loope
xor
ja
pop
mov
negb
out
xchg
mov
in
push
and
sub
cwtl
testl
aaa
lret
xor
cmpsl
cmp
jg
jae
aaa
mov
clc
js
push
add
inc
sbb
add
or
loope
outsb
dec
mov
push
stos
pop
dec
loope
rcrl
andl
sub
faddl
push
adc
ja
sbb
inc
gs
hlt
adc
jmp
inc
movsl
pop
nop
mov
xchg
dec
enter
inc
repz
data16
cwtl
jb
test
cmp
jecxz
xor
jo
into
xor
ret
incl
push
xchg
shl
cmp
out
pop
xor
loop
clc
in
adc
sub
jnp
sbb
xor
aas
cwtl
sub
xchg
and
les
cli
outsl
inc
xchg
adc
mov
rep
testl
sub
pop
dec
xchg
jge
dec
dec
mov
mov
iret
xchg
fnstsw
dec
add
adc
cmp
mov
mov
pop
push
mov
jecxz
pop
addr16
popa
xlat
or
loopne
or
outsl
das
sbb
push
push
mov
xlat
jge
add
cmpsb
pop
add
lahf
add
jne
popf
mov
pop
aaa
std
into
inc
xor
sbb
fdivr
scas
xchg
mov
sub
sbb
mov
into
lret
scas
xchg
jnp
mov
in
push
inc
lcall
aad
ffree
idivb
loope
xchg
mov
xchg
ret
cs
jmp
push
nop
add
xlat
dec
shrb
nop
leave
pop
shlb
aaa
icebp
mov
shld
ret
xchg
icebp
cmpsb
ret
add
push
sbb
into
dec
je
mov
fcoml
sbb
cmp
adc
xchg
int
vsubsd
outsl
int
jp
dec
push
pop
xchg
icebp
and
adc
mov
push
lods
jno
mov
pop
repnz
sbb
push
cmc
or
add
fs
aam
add
lods
and
sti
sahf
mov
ficoms
pop
sub
cmc
orb
pop
int
push
or
into
sub
shl
cmpsl
lret
cli
mov
orb
ja
mov
xor
imul
dec
in
stos
cmp
pop
lret
jmp
int3
adc
jbe
mov
adc
pusha
int
xorb
cmp
pop
aaa
pushf
sub
dec
test
or
jmp
or
pusha
adc
out
dec
or
pushf
movsb
in
nop
or
mov
mov
mov
popa
pop
ss
movsl
xchg
movsb
rorb
xchg
fistpll
or
cmp
mov
test
pop
int3
xor
fdiv
sub
xlat
mov
mov
lods
pop
divl
int3
jp
rcrb
add
lods
loopne
dec
mov
aam
add
movsl
push
inc
and
jg
ljmp
test
nop
pop
ds
mov
gs
adc
imul
pop
mov
pop
pushf
mov
popa
jae
cmp
cwtl
xor
ret
xchg
inc
fsubrp
lcall
lret
test
pop
out
mov
sbb
adc
popf
mov
sbb
cwtl
das
dec
or
mov
andl
shll
cmp
test
mov
shr
adc
mov
sub
pop
sbb
adc
mov
fistpll
fstp
lcall
sub
inc
mov
xchg
mov
divb
mov
mov
adc
or
arpl
cli
and
pusha
imul
insb
xchg
shrl
nop
aam
jns
dec
sbb
dec
sbb
mov
push
cld
mov
add
adc
lret
add
jns
push
jecxz
addl
sub
cmp
addr16
push
out
bound
addr16
jg
test
punpckhbw
test
out
shlb
mov
jae,pt
dec
ss
xchg
rorb
int
leave
push
mov
loopne
nop
inc
nop
xor
dec
std
dec
movsb
pusha
fidivrl
push
lret
test
imull
xchg
xchg
jmp
cs
call
loopne
pop
cmp
push
fwait
adc
push
jecxz
popf
dec
cmpsb
das
jno
mul
push
jp,pn
sbb
pop
mov
dec
mulb
cmp
or
mov
push
add
mov
std
adc
cmc
sbbb
test
cmp
add
xor
stos
xchg
aad
es
mov
aaa
out
or
out
js
fbstp
lods
xlat
insl
cmpsb
xor
xor
ja
mov
jle
xorb
cmc
mov
xchg
add
mov
push
outsl
adc
loope
mov
andb
cmp
push
fnstsw
not
add
scas
lret
jp
loope
pushl
test
daa
cmp
sar
xchg
cli
stos
pop
or
scas
icebp
loop
sbb
pop
and
fs
push
mov
pop
adc
sbb
push
push
push
mov
push
insb
fisubrs
pop
sub
out
mov
and
xchg
aas
fistpl
xchg
mov
jo
xor
jo
lods
into
lea
xchg
idiv
xchg
jle
and
aas
test
cs
sbb
sub
or
add
mov
mov
fsubl
js
iret
punpckhwd
orl
ljmp
imul
int3
and
and
inc
outsl
cld
outsb
sbb
xchg
hlt
adc
adc
jb
js
icebp
and
aas
les
pop
mov
xor
adc
adc
adc
adc
lahf
adc
cmp
inc
movsl
jle
fs
jns
mov
popa
mov
js
pop
inc
cld
loope
and
push
in
call
sbb
fucomi
hlt
scas
and
gs
jg
adc
push
xor
out
pop
inc
mov
mov
xchg
call
cmp
cmp
adc
aaa
mov
fimuls
dec
rorl
mov
and
aad
scas
es
add
sub
push
dec
cld
mov
bound
add
in
and
cmp
into
xor
cld
leave
iret
xor
xchg
cli
imul
jnp
int
in
mov
cmp
sub
add
inc
clc
leave
repz
call
mov
inc
cmp
cli
aas
leave
shrl
das
fistpl
mov
push
xor
and
cld
enter
leave
mov
mov
inc
into
repz
or
cmp
insl
mov
lret
mov
rorb
mov
and
cmp
cs
outsl
imul
push
fsubr
ja
daa
mov
orl
mov
pop
jge
lock
popa
fs
ret
sub
es
stos
inc
fdivrs
out
xchg
adc
mov
stos
mov
loope
and
push
outsl
pop
push
ja
jecxz
lea
or
jmp
mulb
mov
lods
jne
mov
arpl
negb
jecxz
pop
mov
popf
cmp
jnp
pop
adc
dec
sub
inc
in
pop
cld
dec
clc
imulb
cmpsb
pop
adc
adc
incb
lret
jb
cld
mov
je
stos
sbb
ret
es
add
dec
push
mov
ja
lea
stos
cwtl
jnp
movsl
popf
xor
ret
pop
test
mov
dec
sbb
pop
scas
xchg
into
inc
addl
sbb
insl
ffreep
les
sbb
cltd
jl
push
in
inc
rep
jnp
popf
test
push
dec
jae
dec
mov
xchg
mov
adc
dec
int
mov
sub
sub
xor
cs
out
test
mov
insl
or
xor
mov
pop
jb
addr16
add
add
add
cld
rcrb
inc
out
mov
xchg
sti
mov
pop
les
lods
hlt
and
dec
call
repnz
outsl
lret
jae
ljmp
pushf
sub
push
mov
out
jns
pushf
xlat
inc
push
pushf
jle
adc
leave
pop
push
dec
repnz
jb
pop
mov
and
ss
pop
lods
lock
iret
aad
je
in
push
and
inc
test
cmp
fidivs
and
sbb
pop
fstpl
js
xor
xor
mov
out
sbb
test
xchg
mov
jns
and
ja
sti
push
scas
jbe
fisttps
inc
addr16
dec
mov
mov
xchg
cld
jp
les
add
gs
mov
out
dec
or
dec
sbb
rcrw
lahf
arpl
push
and
jo
cmc
push
lods
repz
jo
sbbb
lods
jmp
mov
jmp
adc
test
int
stc
ret
stc
out
and
mov
cwtl
cltd
pop
lds
movsb
mulb
add
jmp
dec
subl
or
push
sar
mov
inc
ja
mov
insb
cld
dec
aas
inc
xchg
fisubrl
leave
test
sub
lahf
bound
imul
sbb
mov
and
daa
jl
push
sub
int3
es
xchg
movsl
lcall
mov
movsb
aaa
dec
ret
dec
pop
ja
les
jns
lahf
sub
into
mov
and
stos
mov
or
loopne
push
push
mov
xchg
cmp
sbb
cmc
in
cmc
mov
mov
xchg
xchg
sti
pop
sti
in
pop
movsl
push
pop
sub
dec
repnz
into
cmpsb
aas
push
cs
rolb
mov
insl
pop
jle
insb
pop
inc
mov
and
setno
xor
flds
ret
insb
jge
bound
loopne
and
sarl
shrb
inc
mov
int
pop
aas
scas
aaa
into
shll
pop
pop
xchg
xor
incb
push
xchg
getsec
sub
js,pn
push
xor
cltd
test
xlat
or
mov
push
shlb
imulb
xorb
mov
inc
int3
mov
xchg
aam
fstl
jne
push
lock
cmp
dec
and
adc
inc
fwait
dec
lcall
fbstp
or
dec
lds
lods
stos
jp
into
sub
xor
mov
cwtl
xorl
outsb
push
and
bound
push
rcll
mov
mov
xlat
jae
loop
add
inc
or
pop
out
mov
int3
repnz
jbe
aam
pop
xchg
jle
out
call
int
int
aaa
cmp
mov
test
dec
xchg
adc
outsl
std
shlb
or
mov
fidivs
test
sbb
sbb
in
cmp
ret
pop
test
inc
xchg
loop
and
enter
cmp
insb
pop
xchg
pop
push
fcos
xor
frstor
cmp
or
mov
xor
or
sub
inc
mov
or
mov
pop
sub
and
gs
cmp
add
or
xchg
adc
jno
faddp
cwtl
mov
push
clc
jle
insl
rcl
jo
or
pop
add
mov
xor
out
ret
inc
add
test
adc
dec
cmp
or
hlt
decl
jl
das
leave
repnz
add
jmp
jns
test
cmc
mov
push
sub
jbe
fcomi
jbe
lock
aas
adc
leave
in
mov
call
sub
jmp
ja
add
dec
jnp
jnp
mov
add
pop
inc
push
sub
ss
push
xchg
cmc
aas
bswap
sbb
sub
sub
sar
xor
cmp
pop
clc
push
cld
shl
sbb
add
std
and
adc
cmp
adc
fwait
add
sahf
ret
or
inc
mov
sbb
daa
add
bound
sti
mov
push
test
out
lret
sub
xchg
sub
test
sbb
adc
push
iret
and
stc
stc
add
leave
mov
or
sub
pop
pop
push
cs
cs
imul
jo
dec
outsb
es
cmp
clc
lret
jnp
lcall
jg
out
lods
mov
orl
cmp
mov
mov
es
enter
push
push
or
adc
ljmp
push
or
insl
inc
movsl
mov
clc
bound
ds
pop
add
pop
out
pushf
shlb
mov
test
xor
xor
shr
daa
push
xchg
jge
or
stmxcsr
pusha
adc
cmp
or
aaa
call
mov
pop
aaa
mov
rorl
ds
pop
les
addl
xor
jo
push
lods
add
pop
dec
mov
test
aas
dec
iret
ja
test
call
repnz
sub
mov
stc
adcl
sbb
push
lar
jnp
cmpsl
sub
push
test
lcall
arpl
les
xchg
cmp
shll
xchg
add
pop
jp
mov
not
imul
mov
mov
inc
les
mov
mov
xchg
repz
aad
xchg
fiadds
jb
test
sub
add
repnz
sbb
push
movl
pop
pusha
inc
ret
lea
insb
mov
xor
lcall
loop
jecxz
dec
popf
in
ret
inc
fmuls
gs
jae
jg
dec
mov
popa
sub
mov
lods
out
dec
mov
fsubs
adcb
xlat
push
lret
out
xchg
or
test
mov
je
push
xchg
mov
mov
cltd
adc
dec
lock
mov
mov
out
push
pop
fcoms
inc
or
dec
stc
mov
arpl
cwtl
sub
out
jmp
insb
push
cmp
add
cmpsb
fdivs
pop
sbb
sahf
fdivl
jecxz
cld
mov
adc
lcall
cmp
jo
popf
pop
movsb
fstpl
pop
xchg
ljmp
adc
test
mov
std
cmpsb
push
pop
jge
add
push
push
mov
clc
cs
push
lret
pop
ror
mov
xchg
cmpsl
sub
sub
inc
push
rcrb
mov
les
test
std
fstpt
mov
sub
outsl
popa
and
pop
sbb
inc
mov
stos
aas
push
rorl
cltd
icebp
aaa
pop
pop
sub
loope
pop
inc
inc
lods
xchg
into
xchg
cmp
sarb
dec
cld
and
bound
pop
sub
cld
jp
cmp
sbb
add
adc
push
js
in
cmp
lods
fstps
xor
loop
addr16
mov
jbe
cmp
inc
dec
cs
shll
xlat
mov
and
sub
lret
fldenv
stos
cmp
dec
ret
jnp
fmuls
aam
mov
test
or
cmp
sub
fadds
lea
cmpsl
or
push
push
test
ja
dec
movsb
mov
pop
leave
mov
and
mov
cmp
ficoml
inc
jl
pop
jnp
in
call
or
and
push
xchg
mov
cli
xor
repnz
cmpsl
cmc
sbb
mov
push
inc
push
or
sahf
les
clc
dec
jnp
cmp
mov
sti
and
enter
or
adc
xchg
lret
aad
mov
mov
scas
mov
cld
lcall
es
xor
cmpsb
mov
pop
xor
out
xchg
xchg
dec
lcall
mov
pop
pop
movsb
fcmovnb
push
push
js
ret
hlt
cmp
push
int
mov
in
rcrb
jnp
xchg
test
lret
int3
push
mov
test
cmp
pop
cltd
fcoml
and
popf
xchg
add
jge
and
notb
mov
pop
mov
mov
pop
pop
sahf
int3
dec
adc
fs
or
mov
jno
nop
cld
aaa
addb
mov
fadds
inc
arpl
fbstp
aad
in
add
ss
rorb
xor
dec
adc
fadds
mov
loopne
fst
push
push
or
popf
pop
and
adc
jmp
and
cld
repnz
mov
inc
cmp
dec
inc
cwtl
xchg
mov
pop
jge
push
xor
testb
lret
aad
or
fiadds
sub
xlat
testl
inc
scas
out
jl
sti
out
xlat
xchg
xchg
clc
cmp
dec
xor
dec
sub
adc
das
mov
bnd
nop
and
dec
mov
cmp
mov
repz
stos
xor
fs
or
daa
mov
adc
sub
insb
cltd
aad
lds
sub
inc
repnz
cltd
inc
daa
push
add
pop
popf
jmp
mov
lock
adc
mov
scas
add
mov
movsl
ficompl
sbb
dec
sar
adcb
mov
imul
ret
push
shrl
mov
add
push
cmp
shlb
ljmp
lret
jmp
ss
and
inc
out
imul
cli
pusha
sub
and
mov
test
add
mov
iret
dec
fnstenv
xor
push
jmp
push
inc
jnp
cmp
adc
xchg
dec
stos
call
push
aam
jmp
lea
jecxz
inc
cltd
cmc
or
test
jle
push
jae
dec
jl
or
arpl
fxch
push
xchg
outsb
fsubrs
and
and
or
imul
mov
inc
iret
or
mov
insb
lds
sub
icebp
or
and
mov
js
imul
cmp
mov
jno
lret
fisubs
mov
mov
add
add
cltd
inc
add
inc
pop
scas
xor
fstpt
inc
sarl
push
push
sub
push
movsl
ret
jg
daa
and
xor
dec
rorb
cmp
ret
mov
subl
add
clc
mov
int3
xchg
call
loop
lds
adc
stos
popf
mov
mov
ds
add
sbb
mov
popf
iret
and
enter
pusha
fistpll
dec
inc
popf
jnp
lods
push
pop
mov
rcl
mov
out
add
push
sbbl
js
jo
out
nop
lods
jp
xlat
jns
xor
dec
out
in
sub
out
push
add
ljmp
push
xor
mov
stc
adc
nop
mov
mov
movsl
mov
loopne
xchg
adc
in
es
sbb
pop
pop
mov
loope
adc
lar
or
outsl
lea
clc
mov
pop
jge
ret
pop
fstpl
gs
shrb
push
repz
or
sub
cltd
hlt
sub
scas
cmp
inc
in
into
rcll
dec
cmp
shlb
stos
adcl
push
fnstenv
in
sahf
sbb
push
mov
outsl
cmp
cmpb
sub
daa
sar
loop
and
cld
add
xlat
stc
test
lret
insb
mov
cmp
int
fistps
pop
in
cwtl
aad
inc
lret
sub
cwtl
inc
cmp
daa
or
adc
and
xchg
in
push
int3
call
mov
xor
cld
and
push
inc
add
cmp
cwtl
out
sub
xchg
int
cmp
or
fnstenv
aam
cltd
or
mov
bound
jp
test
je
cld
data16
int3
in
push
sbb
mov
loop
pop
sbb
push
push
dec
or
pop
sar
mov
scas
pop
fisttpll
push
push
mov
mov
sbbb
push
rorb
mov
cmc
xchg
idivl
rorl
pop
xchg
iret
rcrl
jl
add
cmp
or
lods
xor
adcb
lcall
ja
push
aam
dec
aad
dec
in
jae
mov
add
sub
or
xchg
sub
mov
xchg
fs
xor
sub
insb
mov
lods
sub
jns
lea
mov
push
sub
pop
fldcw
xchg
pop
insb
aas
sbb
add
sbb
jecxz
imul
addr16
sbb
add
xchg
cmpsb
imul
mov
std
mov
cmpsl
pushf
and
xor
lea
in
sbb
adc
mov
push
arpl
gs
inc
je
add
push
xor
mov
and
int3
gs
aaa
scas
add
xchg
pop
test
sbbb
sub
sti
iret
gs
js
and
jns
icebp
add
sbbb
sarl
cmp
push
pusha
loop
fistpll
add
cltd
out
xchg
mov
add
sahf
xor
stos
mov
cmc
js
xchg
xchg
jl
mov
mov
mov
call
sbb
pop
in
loop
or
das
addb
jl
adc
aaa
scas
sarl
or
roll
lea
or
int3
jnp
int
scas
fsubrs
adcl
pop
test
test
lea
push
ds
les
mov
mov
mov
stc
loope
icebp
lds
pop
gs
add
nop
clc
jg
mov
mov
es
jmp
dec
mov
outsb
inc
fimuls
insl
aam
shrb
adc
loop
xchg
int3
xlat
push
inc
lldt
rcrb
gs
xor
out
dec
jl
ds
ret
clc
scas
fnsave
cmpsb
in
cmp
nop
mov
or
and
shlb
hlt
movsl
loopne,pn
mov
outsl
mov
xor
mov
test
push
loopne
jg
and
pop
orl
loop
jne
xlat
adc
dec
cwtl
mov
and
fdivrl
addr16
sbb
repnz
outsl
sbb
and
mov
clc
inc
push
inc
xor
pop
xchg
aaa
fs
xchg
xchg
daa
mov
mov
sub
adc
jbe
aaa
dec
inc
add
jne
dec
jbe
test
push
or
pop
jnp,pt
mov
sbb
stos
mov
ljmp
ds
sbb
stos
fs
fdivs
lock
and
in
push
scas
sbb
pop
cmp
mov
inc
dec
cmp
std
and
xor
lahf
jne
push
xchg
pop
cmpsl
mov
xor
adc
rcll
fdivrs
cmp
imul
cld
lds
xchg
lods
out
fwait
scas
add
pusha
clc
daa
and
sbb
jle
push
xchg
jno
call
mov
add
dec
aad
mov
or
adcl
into
mov
test
ljmp
std
pop
int3
cmc
push
lods
repz
or
fldcw
std
pop
push
std
dec
sbb
or
push
sbb
enter
push
icebp
inc
aas
sbb
loop
sub
cmp
sbb
xor
inc
int3
mov
sub
inc
js
xchg
incb
inc
or
dec
scas
rclb
nop
xchg
cmpsl
jp
ficoml
fdiv
and
mov
popf
add
stos
push
nop
push
lock
insb
push
inc
mov
pop
aad
cmp
arpl
mov
add
inc
adc
and
into
nop
shrl
pop
push
jge
sbb
je
dec
hlt
fsubrs
mov
adc
lret
rcll
jns
push
sub
roll
loope
push
ret
iret
and
pop
aam
std
jbe
addr16
outsl
mov
testl
loop
mov
sub
mov
cmp
notl
pop
popa
mov
lea
call
stc
movsb
xor
inc
insb
pop
jl
jae
inc
jge
aaa
inc
xor
stc
gs
fsubs
dec
pop
mov
stos
stc
ffree
imul
dec
jo
or
cmp
imul
sub
xor
lea
rorb
cmp
add
mov
fimull
mov
out
clc
push
es
fwait
xchg
inc
add
daa
jp
cwtl
mov
rcl
fmuls
jo
jbe
xor
or
out
dec
push
insb
xchg
mov
test
add
mov
push
or
gs
mov
cmp
repz
dec
cmpb
xchg
das
aam
insb
and
adc
leave
pop
stc
bound
lret
mov
mov
cmp
pushf
lahf
inc
jmp
fmuls
arpl
stos
ret
add
xor
lds
mov
movsb
push
push
xorl
inc
lods
loope
pop
lods
ss
xchg
adc
shll
movsb
loopne
dec
or
cmp
dec
sbb
push
lods
adc
push
adc
jge
dec
pop
out
andb
add
inc
mov
int3
repnz
icebp
loop
pop
rorb
mov
cmpsl
lods
sti
adc
in
push
push
dec
cmp
out
and
repnz
sahf
fisttps
negb
adc
pop
mov
or
sbb
jmp
inc
push
cltd
mov
mov
cmp
xchg
or
xchg
cs
stc
and
or
js
pop
stc
pop
or
arpl
and
int
jp
sub
out
mov
xchg
sbb
mov
xchg
xor
xor
mulb
jns
sbb
lods
ror
push
sub
dec
fdivl
mov
shrl
pop
cmp
fistpll
popf
aas
jg
dec
push
lcall
clc
movsl
pop
nop
pop
out
movsb
shll
add
mov
jl
xor
inc
or
stc
test
add
psllq
or
shrl
push
lret
xor
test
or
mov
aas
ret
fiaddl
daa
jo
test
outsb
loope
filds
push
pmulhuw
dec
and
test
add
push
xchg
sbb
pop
inc
sub
mov
mov
sbb
sub
pop
inc
adc
push
mov
mov
popa
xor
jbe
or
test
xor
in
scas
es
imul
push
pop
imull
dec
lret
sbb
sbbb
push
sub
xor
out
iret
inc
mov
xor
sub
pop
mov
loopne
movl
pop
or
push
push
fildll
loopne
fwait
sahf
lea
mov
fisubs
jbe
mov
adc
jnp
repz
adc
bound
jae
inc
pop
ja
pop
repz
mov
xchg
cli
xlat
or
cmpsl
fimull
fs
and
sub
jg
in
dec
mov
dec
dec
inc
rolb
mov
out
gs
push
lret
mov
in
movsl
adc
mull
sete
fcomps
out
or
mov
rcr
mov
xor
sbb
call
mov
popa
fmull
pop
sub
add
test
pop
xor
fwait
into
out
out
xchg
test
mov
out
xlat
pusha
rcll
fwait
icebp
push
push
and
jno
fcoms
sub
sub
adc
jge
cwtl
in
mov
loopne
movsl
decb
push
pushf
sbb
in
mull
sbb
sub
pop
sub
shlb
icebp
adc
jecxz
cmp
pop
faddl
push
fcomps
dec
push
loop
jp
dec
and
adc
insb
stos
jge
lods
dec
jmp
loopne,pt
adc
sbbl
out
in
sbb
shrb
mov
cli
jae
xchg
push
shll
mov
pop
mov
dec
sub
add
cld
mov
push
ljmp
pop
shl
and
or
mulb
mov
sub
dec
fucomip
cmp
mov
movl
xor
rcr
mov
pushf
adc
pop
jg
test
jle
mov
imul
aam
jae
adc
iret
hlt
adc
or
mov
das
fcoml
lods
fldt
pop
jecxz
sub
cmp
inc
mov
mov
inc
inc
push
aas
psraw
hlt
cld
mov
and
xchg
sub
pop
notb
sub
shr
scas
in
inc
ja
xchg
and
das
mov
addr16
mov
out
arpl
dec
inc
gs
inc
inc
ret
push
aad
dec
add
push
jne
mov
das
out
xchg
test
decl
inc
xchg
sub
mov
ljmp
aam
lods
scas
cmp
mov
dec
jb
mov
xchg
mov
movsl
mov
push
in
or
dec
jge
jns
mov
cld
or
xor
xchg
movsl
push
int3
mov
fidivl
ret
loope
pop
dec
jg
jle
xchg
pop
aaa
enter
es
rcrb
sub
cmp
outsl
hlt
xlat
cwtl
aas
mov
ja
lea
mov
adc
mov
dec
mov
ljmp
jb,pt
fs
dec
lsl
addr16
sbb
jmp
arpl
mov
pop
push
aaa
lds
fs
lock
insb
jb
jo
push
mov
aaa
jp
test
clc
adc
std
insb
and
test
cli
sub
sbb
cmp
mov
lods
jmp
dec
jnp
pop
cmp
sbb
test
jae
mov
fistps
or
test
dec
lods
adc
sub
push
sub
inc
adc
and
int
mov
out
ja
addr16
jbe
ret
sti
loopne
je
add
sarl
ds
orl
mov
add
sarb
xchg
imul
in
data16
pop
jb
sbb
lods
jbe
cli
sbb
dec
loopne
loop
cmp
sbb
inc
in
and
testb
movb
dec
mov
add
pusha
inc
jecxz
test
sbb
out
shrb
rclb
ja
mov
mov
loope,pt
movsb
xchg
add
push
mov
jl
idivb
adc
mov
mov
sub
test
daa
mov
cltd
ds
outsb
cmp
fnsave
jno
ljmp
loope
add
sarb
xchg
imul
add
mov
xor
dec
add
sahf
es
mov
cmp
lret
insl
lods
test
pop
loop
stos
xchg
insl
mov
pop
fcompl
add
addb
fs
xorb
push
xchg
sub
dec
pop
push
inc
dec
pop
adc
sbb
cmp
mov
push
imul
mov
js
je
mov
fnstcw
cmp
notb
mov
std
cs
or
out
sub
push
jp
les
fcoms
pushf
add
mov
xor
cmp
adc
dec
shlb
es
enter
dec
and
adc
mov
js
cmp
movsl
or
and
mov
fnsave
mov
push
es
lret
pop
aas
pop
or
push
je
sti
add
pop
mov
insb
ljmp
jge
add
xchg
testl
dec
scas
pop
lahf
push
ds
mov
test
popa
scas
sbbb
scas
push
jo
lcall
test
mov
jl
aam
push
push
filds
shrb
and
or
sahf
rorb
lods
out
loop
jp
jmp
xchg
push
mov
cmp
iret
jp
test
dec
test
mov
aad
int
pop
and
adc
fcom
ja
or
cmp
cmp
or
iret
fcomi
cltd
popa
sub
xchg
xchg
xor
aam
inc
call
inc
xor
cli
icebp
adc
mov
jnp
rcrl
loopne
or
mov
jle
pcmpgtd
notb
rorl
stos
mov
pop
jae
jae
xor
fsubrs
outsb
hlt
je
test
sub
inc
sti
repz
xlat
xor
add
fdivrs
adc
and
dec
out
and
mov
data16
stos
cmp
shl
cmp
pop
mov
das
adc
adc
ret
notl
mov
jge
das
outsb
adc
jno
mov
xchg
int
jle
roll
lret
out
mov
sub
dec
movsl
cltd
jmp
sbbl
cmp
sbb
lds
jmp
cltd
jae
mov
sub
outsb
lods
jmp
or
pushf
movl
popf
xchg
dec
push
pusha
push
shr
push
push
mov
mov
dec
stos
jle
clc
ret
or
lods
pop
pop
mov
or
popf
jb
into
and
pop
mov
ljmp
cmp
pusha
xchg
cmpsb
jl
test
lods
sub
and
mov
ficompl
call
inc
mov
aas
cmp
mov
call
rcrl
push
pop
mov
xorb
flds
and
adc
pushf
xor
js
ret
ljmp
cmp
test
ret
out
inc
scas
hlt
push
out
nop
mov
adc
insl
mov
pop
add
or
xchg
jb
jle
jae
push
mov
outsl
sarb
arpl
scas
fxam
mov
cltd
push
mov
or
iret
xchg
aad
pusha
mov
push
lret
js
sbb
adc
mov
push
cmc
xchg
ds
lds
addr16
int
sbb
jecxz
test
add
cli
imull
lods
xchg
addr16
stc
movsb
push
ds
xlat
lret
scas
jnp
mov
insb
inc
cmp
jl
hlt
lds
ret
cltd
sbb
mov
adc
pop
jle
cltd
es
adc
sub
clc
repz
les
push
adc
rcrl
pop
pushf
mov
sbb
xchg
mov
mov
jne
mov
pop
xchg
or
rcrb
scas
dec
mov
pop
add
xlat
mov
or
inc
add
sub
cmpsl
aas
mov
jmp
into
pop
and
jnp
rorl
jge
or
test
test
cmc
es
iret
lret
scas
xor
icebp
xor
mov
and
and
lcall
xor
movsb
lret
flds
stos
stos
jmp
testl
push
and
lret
add
or
inc
scas
push
xor
sub
jb
pushf
jno
inc
mov
and
pop
inc
ds
repz
mov
inc
mov
inc
push
jo
sarl
mov
cld
addb
sub
mov
nop
pop
cmp
add
cmp
fdecstp
lret
bound
pushf
shll
ret
xor
mov
in
test
sbb
rorl
pop
inc
jnp
scas
and
xorl
mov
cmp
adc
mov
inc
inc
pop
mov
jp
adc
ret
jge
adc
xchg
cmp
sarl
or
mov
add
movsb
movsb
add
or
clc
fdivs
inc
inc
pop
add
shl
gs
out
adc
clc
jae
xchg
mov
andps
or
fnop
jmp
xor
and
jnp
into
mov
inc
and
mov
cs
jno
or
xchg
repz
pop
lods
and
out
mov
jno
xchg
mov
push
movsl
cs
pop
xor
pushf
dec
mov
cwtl
ja
xchg
jne
inc
adc
fmuls
stos
bound
cmp
jne
ljmp
or
add
repz
outsl
sbb
rorb
mov
dec
or
cmp
dec
or
out
or
adc
movsl
popa
shlb
aad
les
adc
pop
cwtl
fwait
adc
ret
rclb
xor
add
rep
andl
jg
movl
out
sub
movsb
pushf
jl
and
pop
add
inc
aas
pop
mov
filds
mov
les
mov
mov
sahf
test
mov
add
mov
pop
arpl
xor
xor
je
jl
pusha
or
pop
pop
iret
jns
aas
mov
nop
adcb
arpl
arpl
repnz
pushf
adc
pop
sub
stc
mov
lea
pop
mov
ret
roll
jae
sub
xchg
movsl
push
and
jae
pop
stos
out
or
mov
popa
mov
pop
sub
and
inc
mov
ret
push
jmp
mul
int3
inc
in
fisttps
data16
pop
push
dec
fstl
push
lds
outsb
decb
dec
dec
ficompl
stos
xor
std
or
sbb
in
int3
mov
cmpl
movsl
xchg
jg
testb
mov
out
and
iret
push
adc
mov
les
fcomip
mov
jecxz
xchg
sub
mov
addb
jg
mov
mov
mulb
hlt
jb
xchg
inc
jg
cmpsl
daa
out
daa
pop
nop
xchg
aad
jb
cs
nop
push
lods
cld
jle
push
mov
xor
xchg
or
fstpl
jp
loop
test
mov
pop
shl
pushf
rclb
cmp
aam
adc
cmp
mov
stos
jns
out
call
push
mov
inc
mull
mov
shl
inc
inc
and
cmp
xlat
add
int3
pop
sahf
mov
popf
or
xor
daa
ds
out
mov
xor
ficoms
sub
dec
jle
fsub
rsm
mov
std
into
std
mov
loope
bound
xchg
xchg
xchg
pop
test
or
gs
and
push
faddl
negb
cmp
jmp
mov
fstpl
jbe
iret
sti
push
fdivrs
rol
mull
fs
or
cmpsb
xchg
pusha
push
cmp
fnstsw
adc
sub
ret
imulb
dec
pushf
inc
jnp
lret
push
lods
mov
fnstenv
dec
orb
mov
add
push
and
push
push
pushf
mov
sbb
mov
cltd
cs
int
adc
sbb
cmp
sbb
jecxz
xchg
inc
in
int3
call
or
xchg
daa
inc
icebp
lcall
scas
insl
filds
cmp
jg
cmp
clc
fnstsw
das
and
mov
dec
push
das
repz
stc
push
jg
and
or
pop
imul
xlat
pop
push
xor
imul
xor
incb
enter
ja
loope
mov
fcmovbe
push
cmp
jecxz
adc
lock
gs
insl
inc
dec
or
hlt
fcomip
iret
leave
mov
dec
adc
or
sbb
mov
js
scas
or
or
psadbw
xchg
mov
mov
cltd
push
lcall
fidivl
cwtl
push
pushf
and
into
fidivs
int
push
ljmp
xchg
mov
cmp
mov
lea
mov
aas
dec
adc
sbb
minps
sub
in
sub
out
sub
push
pushf
in
cmc
data16
xchg
or
jne
mov
push
adc
stc
xor
mov
pop
fisttpll
xchg
lods
pop
pushf
lods
xor
mov
orb
dec
cmpsl
ret
mov
add
notb
imul
sub
bnd
lcallw
mov
test
xchg
inc
mov
sbb
and
stos
mov
mov
mov
ficomps
mov
dec
sbb
jnp
orl
mov
rorl
and
inc
sahf
popf
ret
xchg
clc
or
sbb
sub
dec
int
adc
test
mov
cld
mov
shrb
mov
pushl
mov
ret
idivb
test
cltd
xlat
xchg
adc
cmp
jae
cmpsb
cmpsb
xchg
movsb
dec
pop
std
add
mov
mov
loopne
push
adc
inc
sub
repnz
rclb
aas
mov
leave
sub
cmp
test
nop
in
pop
mov
or
mov
mov
lret
lea
adc
cmc
add
stos
inc
int
pcmpeqw
xchg
adc
int
mov
int
xlat
mov
adc
inc
outsb
mov
adc
pusha
mov
push
and
loop
lods
cli
roll
js
popa
sbb
arpl
lret
sbbb
sub
xor
sub
sub
pop
sub
push
cmp
scas
cmpsl
lret
cmp
pop
addb
fdivl
inc
xrelease
dec
loope
int
or
in
cmc
js
out
inc
mov
cmp
jp
shlb
daa
imul
in
lcall
xchg
jecxz
idivl
mov
dec
cmpsl
test
cmpsb
dec
inc
cmp
popa
repnz
jg
and
hlt
cmc
std
lock
lcall
insb
faddl
adc
std
pop
lock
fistpl
or
xchg
dec
adc
insb
jns
cmp
pop
and
clc
sbb
popa
jae
xchg
int
cli
mov
test
push
insl
sub
ds
mov
xchg
call
jle
adc
cmp
jmp
push
lea
and
arpl
jae
rclb
sarl
jb
lea
out
or
loop
bound
xor
xlat
pop
fldcw
inc
inc
imul
mov
stc
lds
jno
inc
stos
ret
adc
cli
jns
sbb
xchg
adc
xlat
mov
mov
dec
cmp
fdivr
mov
popa
stc
in
fwait
scas
inc
inc
leave
leave
sti
push
mov
jb
lcall
js
cmp
fisubrs
ss
iret
adc
data16
cmpsb
jne
sbb
imul
pop
test
ds
or
je
cmp
jecxz
cld
ljmp
rclb
mov
xor
xchg
ret
cmp
push
fwait
push
movsl
xorb
sbb
pop
add
repz
shrl
mov
add
shlb
insb
dec
adc
mov
jecxz
es
mov
add
out
pusha
enter
les
jecxz
ds
mov
cld
xchg
xchg
adc
js
adc
gs
aad
imul
jmp
mov
call
sbb
mov
mov
jno
cmpl
pushf
inc
mov
jg
lret
in
jge
push
stos
fucom
out
ret
lds
loope
dec
in
in
iret
cmp
push
mov
loop
xchg
xchg
ljmp
pop
mov
ror
rolb
lods
cltd
ds
lods
lods
stc
sbb
sahf
mov
adcb
mov
popl
dec
pushf
sub
push
push
jmp
mov
stos
or
ret
arpl
push
int
loop
test
sbb
push
movsb
jo
jl
mov
push
cld
movsb
mov
pusha
mov
loopne
rcrl
popa
mov
pop
xchg
cs
pop
cmp
add
scas
adc
rorl
rol
pop
arpl
fucomp
sub
pusha
add
nop
cwtl
clc
imul
int
dec
pop
loop
jecxz
jno
ds
jmp
pop
or
mov
and
scas
jecxz
lods
jmp
rclb
or
inc
mov
inc
xchg
inc
lods
mov
cmp
cli
push
aaa
repnz
addr16
mov
xor
fcompl
pop
icebp
add
sbb
shll
fwait
incb
jnp
loopne
test
jnp
lahf
enter
fbld
dec
cmp
push
movsl
push
cmp
cld
scas
cwtl
addr16
lock
push
lcall
pop
cmc
jo
jo
lods
lret
shlb
xlat
jg
aaa
push
ss
cld
or
iret
mov
loope
mov
inc
lcall
mov
fyl2x
movsb
mov
mov
ret
bound
or
mov
mov
adc
mov
mov
pop
shll
dec
push
in
cli
jne
sahf
mov
add
pop
inc
and
lods
gs
push
pop
scas
ror
cmc
adc
mov
and
pushf
sahf
mov
adc
push
or
or
gs
inc
cmp
adc
sub
pushf
outsb
mov
dec
mov
mov
or
arpl
cmp
and
hlt
call
mov
sbb
adc
and
add
mov
cmpsb
add
push
xchg
aam
sti
out
addr16
test
ror
into
jl
pop
scas
aam
inc
inc
popl
in
add
cmpsl
xchg
inc
jge
aas
nop
mov
fs
xchg
jno
jns
mov
pop
sub
add
adc
xchg
xchg
fldenv
xchg
jno
lods
sub
movsl
inc
test
aad
mov
dec
stos
or
ljmp
cmpsb
into
mull
mov
in
dec
repz
dec
or
arpl
inc
inc
movsb
in
mov
jp
add
push
add
mov
mov
sub
stos
test
loopne
insb
cmp
test
mov
cmpl
sbb
out
mov
pop
xor
imul
mov
test
addb
pusha
lock
xchg
xchg
scas
xor
sbb
pop
push
icebp
mov
jbe
push
jbe
cwtl
or
jno
mov
mov
scas
pop
inc
fstl
mov
in
test
inc
int
icebp
fidivrs
test
cltd
in
sbb
mov
lcall
xor
fimuls
dec
jbe
cmp
es
test
pop
adc
xchg
pop
dec
hlt
scas
push
cmp
daa
fcoms
jecxz
ja
dec
sbb
lret
ljmp
adc
pop
jle
sbb
cwtl
mov
mov
or
divb
gs
fcoms
fs
mov
lds
test
stos
push
loop
pop
pop
les
lret
hlt
sti
jp
lods
add
stos
filds
xchg
xor
lahf
jb
mov
cli
mov
xor
imul
aad
xchg
lods
aam
call
inc
mov
ljmp
cltd
repz
push
lods
mov
inc
add
scas
in
pop
xchg
xchg
repnz
adc
xchg
mov
mov
shr
mov
mov
daa
outsl
xchg
in
add
aas
fisttpll
outsl
xorb
xchg
cmc
inc
jmp
scas
enter
mov
and
mov
mov
sti
imul
cmp
add
aaa
in
cmp
inc
inc
in
xchg
inc
jbe
pop
xor
scas
loope
cmpsb
dec
push
aad
in
xchg
or
aad
add
lea
leave
lock
mov
xchg
pop
inc
push
rcr
call
xchg
sbb
dec
out
sub
arpl
ret
or
incb
mov
cmp
sbb
sub
jb
mov
rcr
or
mov
mov
decb
sub
jmp
or
xchg
and
push
inc
add
vphaddwq
push
fsts
dec
orb
popa
pushf
fs
xchg
lock
scas
pmaxsw
outsl
dec
aas
pusha
adc
ljmp
xorb
out
test
and
test
aad
movsb
sub
popf
dec
in
lahf
je,pn
mov
lods
xchg
sbb
cmp
pop
jl
mov
mov
ficoml
mov
adc
mov
mov
addr16
push
cmp
je
mov
imul
lret
mov
jns
aaa
add
ja
out
sub
dec
mov
dec
sub
mov
insb
sub
or
sbb
cmpsl
leave
xor
flds
mov
fdiv
in
sub
push
das
popf
in
mov
add
sbb
push
mov
mov
rcll
adc
pop
shrb
sbb
jmp
add
add
adc
sbb
pop
mov
pop
ds
dec
jg
lahf
outsl
outsl
xor
fldl
adc
inc
cmp
stc
shll
inc
dec
cmpsl
add
sti
inc
jmp
sub
test
xorb
es
int
inc
mov
pop
sub
dec
repz
adc
mov
xor
sub
bound
std
jmp
sub
xchg
adc
cmp
fcmovu
jle
or
pusha
cmp
xchg
push
pop
aad
mov
adc
cmpsb
movsb
pop
cs
cmp
aaa
or
pop
xchg
icebp
les
dec
loope
rcrl
nop
les
mov
sarl
mov
negl
repnz
or
jg
push
loop
sbb
or
xchg
adc
jmp
mull
addl
loopne
int
jne
jle
dec
int3
movsb
xlat
lea
in
mov
or
mov
xlat
lahf
jnp
or
mov
or
sub
cmc
pop
aam
add
lret
loopne
xchg
cmpsb
mov
sti
push
fisttpl
cmpb
pop
dec
xchg
dec
sbb
mov
gs
scas
in
mov
std
cmpsb
out
ficoml
repnz
dec
notb
mov
jno
lea
fdivrs
push
les
scas
mov
sub
mov
call
mov
mov
adc
lret
test
lret
mov
bound
fists
sub
fnstsw
push
push
fsubl
cmpsb
inc
aas
dec
movsl
leave
sbb
mov
in
or
insl
sbb
add
or
jge
ja
outsb
in
inc
fs
or
repnz
movsl
fninit
inc
in
add
in
jmp
push
mov
gs
sbb
inc
pop
and
test
adc
std
xchg
cli
sahf
mov
xchg
jne
lods
inc
stc
push
sbb
jo
xlat
cmp
scas
hlt
xor
mov
cli
fistl
jbe
and
mov
std
repnz
cmpsb
movsl
mov
test
fyl2x
jae
mov
pop
rol
aas
and
out
out
mov
addr16
jmp
xchg
popf
lea
sub
in
addr16
add
dec
inc
xor
pop
push
lods
mov
loop
cmpsl
scas
repz
adc
mov
dec
xor
xor
xchg
mov
ror
inc
leave
and
sti
in
or
xor
cmpsb
jg
ss
cmc
inc
cld
adcb
movups
pusha
inc
clc
movsb
cmp
fidivs
stc
add
loop
sbb
fmull
je
mov
imul
in
add
mov
mov
adc
repnz
enter
xor
imul
inc
dec
mov
jne
push
sbb
in
cld
dec
aas
fistpl
insl
xor
incl
dec
into
push
imulb
movsl
dec
cmp
leave
and
insl
mov
out
cmp
scas
adc
stc
imul
mov
mov
cli
mov
xchg
mov
and
sbb
jmp
das
mov
cli
cmp
adc
xchg
lods
jg
xchg
rol
push
negb
mov
cmpsl
dec
outsb
gs
loopne
pop
push
or
int
dec
and
shrb
into
in
aas
pop
les
lods
jbe
xchg
das
cmc
int3
cmpsb
int3
outsb
xchg
dec
inc
pop
mov
loop
je
push
lret
and
jne
dec
push
push
push
lret
test
repnz
xchg
inc
lods
sbb
lock
mov
pop
adc
jb
inc
ret
clc
aas
std
and
mov
add
xchg
add
shrb
lods
cmc
ds
daa
in
scas
pop
cmpsb
mov
mov
mov
mov
inc
jge
sub
cmp
jno
xchg
cwtl
jmp
repz
jle
out
popf
adc
cmpsl
pop
pushf
dec
jbe
sub
loopne
xor
test
movsl
insl
insb
push
xor
jle
test
sbb
and
xlat
push
mov
fdivrl
enter
rol
and
mov
scas
mull
xchg
jge
dec
cwtl
divl
decl
cmp
pop
ds
push
shll
stos
mov
int
sub
cmp
push
data16
loop
xor
je
add
or
and
movsl
push
in
rolb
cmpb
mov
loopne
jb
or
hlt
push
lcall
push
pop
mov
nop
shl
lcall
std
sti
adc
mov
lods
pop
add
add
pop
or
aam
les
jno
jb
fdivr
test
mov
fcoms
inc
mov
mov
or
cmpsb
cmp
push
repnz
mov
xchg
aam
mov
dec
push
or
or
fildll
mov
push
xor
enter
cwtl
aaa
adc
push
lods
jbe
cwtl
mov
and
sbb
xor
xchg
aam
stc
cmpsl
int
jo
dec
mov
in
ljmp
rclb
mov
and
push
xor
pop
test
cmp
inc
aad
aas
into
mov
add
sub
jne
mov
inc
in
xchg
jmp
jecxz
clc
cwtl
ror
sub
add
cmp
mov
push
dec
pop
sub
outsb
adc
add
jbe
rcl
pop
leave
std
pop
xor
out
mov
test
ror
icebp
nop
mov
pusha
mov
sub
inc
idiv
stos
iret
xor
push
or
scas
push
dec
out
test
js
push
test
rcrl
nop
repz
pushf
movsl
aaa
mov
pop
xchg
adc
xor
repz
cmc
xor
cmp
aaa
xchg
cmpl
jmp
int3
push
test
das
mov
cs
add
shll
xlat
mov
js
fistpll
sbb
fwait
subl
or
outsb
in
jnp
insl
lods
fisubrs
ja
xlat
gs
rclb
sahf
clc
mov
insl
xor
fldt
and
mov
xor
mov
js
push
pop
out
icebp
mov
into
inc
mov
aam
pushf
dec
push
xor
adc
iret
loop
lds
mov
out
pop
mov
leave
jge
testb
cmp
inc
jb
xchg
movsb
sbb
pop
xchg
fisttps
xor
xchg
sbb
pop
fdivr
add
jo
sbb
add
call
cld
xor
in
dec
mov
out
shlb
inc
enter
pop
aas
jo
jo
xchg
mov
sub
sbb
scas
xchg
pop
jbe
rorl
test
mov
mov
idiv
push
mov
into
rcr
sub
mov
sbb
mov
sub
inc
ret
cmpsl
nop
jo
xor
inc
push
push
mov
ret
icebp
gs
insb
mov
outsb
cmp
imul
repnz
sbb
push
xor
ljmp
rcrl
adc
dec
rolb
sub
inc
daa
cs
sub
loopne
scas
test
inc
aaa
mov
repz
lcall
das
cmp
mov
cmpsb
sub
out
add
adc
rcrl
cmp
cmp
bound
mov
mov
add
psubusb
inc
jnp
xor
mov
jno
sbb
sub
pop
divl
dec
movsl
into
or
jmp
add
xor
leave
in
sbb
js
fidivs
mov
cs
fwait
data16
inc
loope
rorl
into
inc
add
jbe
adc
add
jbe
add
pop
xor
idivl
mov
loopne
dec
push
lahf
lock
enter
jbe
jmp
les
and
mov
int
cmp
stos
add
insb
cli
jp
xchg
mov
int
sub
mov
out
leave
stc
in
adc
inc
outsl
hlt
adc
fdivrl
inc
mov
in
arpl
adc
enter
push
pop
xor
and
fimull
dec
mov
int3
cmp
test
pop
xor
test
push
mov
addr16
jnp
fsubl
lea
cwtl
cmpl
mov
push
sub
dec
pop
cs
or
dec
mov
push
out
insl
mov
or
mul
mov
push
in
data16
dec
fwait
in
jl
jbe
das
jae
add
jo
fwait
test
into
xchg
jno
push
fists
or
mov
ss
sbb
jp
scas
sti
rcrb
xchg
or
dec
push
jo
sbb
fstps
jae
call
test
inc
cmp
push
and
inc
sub
clc
add
lock
mov
sub
pop
xor
out
stos
je
iret
or
inc
inc
jns
jno
push
lock
or
into
cmp
adc
xchg
js
cmp
daa
xchg
rol
and
inc
repnz
loope
push
or
pop
mov
ljmp
mov
push
jae
std
push
mov
and
out
fwait
pop
aas
leave
or
mov
roll
jg
orb
outsl
lret
mov
xor
and
jb
cli
xorl
ret
jbe
push
popf
dec
push
mov
fstpl
daa
inc
pushf
sub
imul
mov
mov
enter
add
cli
out
std
scas
xor
orb
out
mov
cmp
or
test
xlat
out
mov
mov
cld
mov
icebp
std
mov
push
inc
pop
and
jb
push
pop
pushf
loope
pop
inc
xor
js
pop
mov
aas
mull
lock
aas
icebp
in
cli
std
negb
lds
ret
dec
std
push
lahf
loope
inc
imul
hlt
jg
dec
cltd
dec
flds
mov
sbb
out
xor
mov
and
mov
loope
mov
dec
fwait
into
movsb
fadds
cmpb
cmpsl
outsb
arpl
cltd
xchg
enter
fwait
ret
repz
in
shrl
sbb
aam
mov
or
push
xchg
scas
cmc
xor
pop
sbb
jecxz
sarb
mul
cmp
movups
stc
out
fisttps
mov
outsl
rolb
fisubrs
push
lock
xchg
fwait
pop
cld
jecxz
mov
cmp
aas
shll
icebp
pop
lods
jle
cwtl
xchg
pop
pop
push
pop
in
popf
out
cltd
ret
lock
lret
out
mov
sbbb
mov
test
outsl
rcll
popa
push
adc
ret
das
lcall
jg
in
jle
sbb
lret
jnp
adc
out
xor
jp
ret
out
sub
dec
cmp
out
sbb
fnsave
call
jne
jp
push
dec
xor
mov
sti
jae
sbb
dec
xchg
pushl
pop
in
movsb
fimull
aaa
lea
js
mov
cmpsl
shl
subl
test
fistps
and
cmc
into
std
xchg
cli
out
int
jno
pop
call
repz
mov
dec
loopne
or
jb
xchg
data16
push
outsb
bound
test
dec
ljmp
xchg
inc
mov
mov
or
cmpsb
popf
pop
dec
or
push
sti
clc
sbb
jmp
sbb
sahf
jo
xchg
test
inc
enter
out
and
jp
jecxz
fs
cmp
push
inc
hlt
les
pop
sub
adc
scas
lret
movsb
dec
sbb
fstpt
lcall
hlt
bound
push
out
loopne
jb
ss
in
cmp
loope
cmp
lods
andl
bound
add
sub
mov
adc
cmp
into
or
xchg
and
outsl
fmull
in
and
int3
sbb
in
daa
pop
sbb
mov
icebp
push
orb
rcl
cmpsb
mov
xchg
mov
popf
mov
add
lods
xchg
inc
fldenv
sbb
mov
sub
push
xchg
mov
add
in
movsl
iret
or
std
jbe
cmpsl
aam
cmp
cmp
mov
loope
arpl
icebp
clc
int3
pop
cltd
pop
outsb
shl
or
ret
test
or
mov
call
push
lcall
jg
mov
inc
sbb
push
xor
lret
xor
sbb
add
hlt
xchg
mov
test
sub
arpl
pop
movsb
ja
lcall
sub
cmpb
mov
out
jae
push
xchg
cmp
popf
fadd
insl
jecxz
out
cmp
sbb
fisubrl
outsl
les
push
inc
push
push
or
mov
addl
fimull
dec
out
cmp
sbb
pop
enter
test
push
and
inc
leave
xchg
mov
adcl
pop
jb
sahf
call
cmpsl
adc
or
dec
sti
mov
loopne
jns
sub
lods
fsubrs
rorl
repz
arpl
movsb
hlt
arpl
cs
push
outsb
lods
sbb
pop
pop
loope
arpl
fcomps
or
ljmp
mov
xchg
jecxz
lock
mov
pop
push
in
bound
mov
pop
loope
pop
cmp
insb
pop
mov
push
add
std
outsb
ret
mov
sub
in
push
sbb
jp
sti
adc
test
or
call
push
pop
sbb
adc
stc
icebp
mov
data16
mov
outsb
ja
and
rorb
and
pop
or
add
mov
pop
inc
pop
mov
aad
jmp
les
push
out
mov
xchg
js
push
call
mov
dec
fwait
imul
mov
rcll
popa
cs
push
xchg
movsb
int
pusha
shl
mov
pop
popa
test
jb
pop
call
repnz
rolb
cs
sbb
sbb
movsb
or
push
pop
lods
jl
pusha
adc
inc
jno
pop
ret
stc
xchg
cltd
push
dec
xor
mov
cmp
loopne
ret
push
ret
xchg
lea
les
pop
icebp
pop
or
in
rorb
ss
or
stc
ja
leave
mov
pop
adc
push
in
push
cmp
bswap
movsl
or
xchg
leave
bnd
push
sbb
sti
imulb
loopne
push
jge
push
mov
sarb
pop
mov
sub
mov
nop
xor
mov
adc
int
xchg
add
in
and
jl
loop
pop
lods
in
sar
pop
dec
xchg
push
or
xchg
mov
and
into
aas
mov
scas
xor
pop
pop
jmp
mov
imul
pop
out
xor
sbb
fsubl
sarl
call
mov
mov
sarl
in
out
sbb
cmpsl
pop
jp
dec
or
inc
ss
ficoms
out
mov
push
in
xchg
pop
dec
aaa
sub
sahf
out
mov
mov
dec
popa
popa
or
xchg
test
sbb
cwtl
loop
ja
xor
jecxz
loop
loope
in
mov
mov
push
aas
subl
xchg
int
adc
movsb
dec
pusha
sti
ja
lcall
xchg
pusha
or
or
rcr
pop
fldl
xorb
rcrb
adc
sbb
pop
jb
adc
notb
cmp
pop
pop
test
inc
clc
pushf
into
faddl
shrb
insb
add
dec
cmp
xchg
fwait
sahf
stc
hlt
xchg
or
xor
lcall
adcl
ret
mov
int3
jg
push
rcl
fisubl
movsb
iret
adc
jne
shlb
dec
jp
xor
mov
arpl
push
cld
in
mov
dec
fisttpll
jecxz
mov
lcall
mov
or
movsb
stos
push
push
mov
pushf
jge
scas
xchg
xor
push
mov
shl
jb
out
inc
cmpsl
xor
jmp
pusha
outsb
test
fldt
xchg
or
push
fidivrs
out
fwait
cmp
fistl
pop
and
cmc
in
into
xchg
push
das
ficoml
sub
cmpsl
xor
inc
dec
int
addl
jge
or
push
xchg
xchg
sub
sbb
add
add
loop
popa
xchg
dec
ljmp
cmp
test
inc
push
pop
aaa
cld
mov
xor
cltd
add
loop
mov
dec
sbb
jno
cmp
jmp
cmp
xor
in
dec
mov
lcall
push
or
add
daa
lret
sub
clc
arpl
in
push
imul
and
bound
mov
andl
inc
push
cli
outsl
pop
cmc
dec
mov
test
test
push
fwait
push
inc
es
aad
js
pop
adc
sub
test
push
sub
xchg
mov
std
outsb
repnz
jb
cmp
sbb
cmp
aad
mov
stos
lcall
jb
daa
arpl
xor
push
and
les
push
mov
into
shrl
roll
add
pop
imul
inc
shrl
xor
mov
jmp
out
xor
and
push
push
cld
dec
aas
lahf
inc
out
testl
jecxz
es
inc
jno
mov
sub
sbb
adc
xor
or
mov
mov
fistl
adc
fadd
fwait
adc
call
cmp
outsl
sbbb
xor
or
es
loopne
arpl
cmpl
cmp
outsl
setle
insl
jecxz
mov
dec
mov
pop
fsubrs
sahf
or
xchg
xchg
enter
xor
mov
xchg
pusha
add
jne
and
sbb
enter
pop
cli
xchg
push
mov
movsb
jmp
fadd
xchg
mov
adc
enter
nop
mov
aam
cmp
mov
ret
mov
sbb
shrl
insl
jl
adc
rolb
sbb
insb
sub
adc
cmpsl
fiaddl
adc
int3
fwait
std
nop
add
mov
inc
mov
in
out
xchg
mov
pop
ja
sub
fmuls
mov
mov
test
sarl
int
rcl
loope
lods
fs
xchg
imul
mov
es
insl
test
scas
clc
notl
cmp
imul
fidivl
xor
cmp
jno
jno
pop
stc
pop
ja
sub
test
mov
mov
shll
js
inc
sbb
push
hlt
outsl
xor
mov
lret
mov
jg
mov
cld
mov
mov
lahf
pop
xlat
cltd
mov
mov
inc
into
and
int3
jge
mov
push
mull
mov
mov
mov
shrl
dec
sbb
xchg
scas
xchg
dec
sbb
xor
repnz
shlb
out
pop
jecxz
pop
ret
jg
xchg
mov
xorb
dec
push
dec
push
lahf
stos
jmp
sbb
mov
ljmp
pop
adc
mov
mov
jle
push
outsb
ror
inc
pop
lock
mov
fisttpl
mov
or
cmp
jo
cli
pop
loop
mov
adc
sbb
and
sbb
sub
test
mov
mov
ret
loop
push
xor
pop
jmp
inc
rcrl
fs
or
mov
in
jp
mov
pop
mov
pushl
imul
push
mov
cmp
fistpll
insl
fildll
and
addb
jge
les
shrb
pop
mov
cmp
and
add
mov
mov
daa
mov
sub
mov
jp
pop
aaa
push
out
push
jp
push
xchg
in
sbbb
ja
in
aaa
xor
or
mov
dec
in
mov
lock
call
mov
push
lret
ljmp
jg
inc
adc
outsl
out
or
js
and
subb
cmp
jnp
xchg
daa
xchg
and
xor
pop
das
sub
mov
jge
adcw
sahf
mov
daa
mov
xchg
loop
pusha
pop
adc
push
inc
aam
fnstsw
popa
dec
fdivp
jp
xchg
jmp
push
jb
out
mov
sub
test
pop
add
fildll
add
xchg
das
dec
test
jae
mov
or
pop
push
xchg
sbbb
xchg
in
mov
sarl
pop
stos
jecxz
jb
mov
rcrl
addr16
pop
ret
or
push
jmp
es
inc
stos
jecxz
push
daa
sub
stos
jmp
mov
in
push
mov
pop
loop
push
addr16
out
orb
int3
aad
pop
jo
mov
sarl
jbe
rcll
sbb
mov
movsb
test
jle
shrl
push
fnstcw
jns
lods
cmp
push
cs
pop
inc
mov
outsl
inc
mov
or
incl
xor
mov
clc
cmpsl
sub
outsb
mov
push
xchg
jle
xorb
xchg
jae
and
stos
cld
sbb
in
or
sub
mov
rcrb
and
push
fiaddl
insb
aas
sbb
clc
jnp
sub
and
pop
test
cmp
pop
insl
aam
aad
xchg
pop
jge
int3
daa
mov
jno
cmpsb
nop
mov
repz
test
xchg
lahf
in
xchg
mov
fnsave
mov
mov
add
mov
jl
jae
test
aad
pop
sub
stos
out
insb
jl
sub
xchg
add
sahf
or
lss
mov
pusha
mov
jmp
sahf
sub
and
xorl
or
pop
call
rep
call
pop
or
jecxz
sub
cmp
fucomi
aas
xchg
or
in
cltd
add
xor
push
xor
xor
dec
xor
stos
xchg
stc
pop
push
push
dec
sti
outsl
mov
je
sub
adc
xchg
aam
shll
and
sub
jnp
movsb
push
adc
jo
inc
prefetch
adc
mov
jno
or
mov
pusha
pop
out
sub
inc
jge,pt
adc
xor
jbe
xor
aas
jo
mov
mov
push
stos
sbb
adc
shl
push
xchg
cmp
andl
std
sub
fs
add
cwtl
mov
push
mov
xor
sub
stc
add
sbb
push
setne
fldl
or
leave
mov
pop
inc
push
jbe
jecxz
daa
mov
or
cmc
mov
shrb
mov
dec
aam
jl
popf
mov
add
loope
mov
psubsb
push
movsb
cmp
adc
xchg
lods
adc
test
subl
jnp
adc
lcall
add
cwtl
mov
std
loopne
pushf
ret
cmp
repz
xchg
mov
add
dec
inc
xchg
cli
add
fistpl
pop
and
out
xchg
out
ret
test
shll
push
sbb
movsl
pop
inc
or
adc
mov
sti
add
pop
adc
lcall
mov
enter
jl
dec
ss
es
ret
lods
adc
xchg
shl
mov
cltd
in
ja
push
cmp
jp
stos
loop
stos
cld
jg
or
out
icebp
jae
mov
lret
lock
inc
dec
adc
test
or
mov
fidivrl
scas
andb
jecxz
packssdw
call
popf
rol
rol
test
in
lcall
lahf
adcb
pop
jge
in
in
test
lock
faddl
mov
adc
push
fs
push
std
stos
hlt
add
cmpsl
lock
sahf
inc
shlb
test
sbb
out
pop
and
call
test
xchg
scas
and
jno
sti
push
loope
sub
adc
seta
into
push
push
stc
xchg
push
test
test
movups
fwait
loopw
adc
xor
and
insb
sub
lcall
sub
push
scas
push
jo
les
stos
mov
repz
xor
lock
ret
shlb
jp
sahf
dec
cmpb
cmp
test
lahf
rolb
pop
xor
and
jns
and
pushf
cmp
adc
addr16
adc
mov
jp
push
pop
cmp
and
clc
mov
mov
pop
lret
jl
notl
aam
dec
data16
xor
xchg
or
sub
orl
or
pop
popf
push
jle
lods
stos
aaa
mov
pop
sbb
cmp
mov
and
inc
hlt
mov
inc
inc
add
sub
scas
aaa
imul
aaa
insl
test
arpl
mov
int3
cmp
mov
das
and
xor
divb
dec
fidivrl
mov
ss
aad
lcall
and
imul
mov
pop
sbb
sub
lahf
xlat
sub
and
mov
mov
push
pop
pop
xchg
mov
or
int3
xor
dec
fimull
jmp
inc
dec
adc
jo
aad
mov
popa
js
xchg
sub
mov
push
xlat
jl
mov
cmp
mov
out
fstp
pushl
outsl
jno
rclb
mov
lods
loope
push
mov
push
out
add
jge
cmpsb
mov
sub
lods
xchg
aad
jns
xor
je
push
bound
sbb
push
loopne
push
xorb
or
sub
mov
ja
or
mov
stc
cmpb
cli
std
ja
fwait
jo
andl
push
pop
xchg
imul
inc
ss
mov
add
andb
jle
test
and
xchg
stos
mov
into
mov
mov
iret
mov
sub
inc
mov
and
and
adc
sub
imul
push
in
lock
adc
orl
leave
out
jecxz
dec
sub
sahf
outsb
je
adc
mov
cld
sbb
in
daa
movl
imul
fs
out
clc
push
and
test
ret
sub
mov
and
push
jo
inc
cmc
mov
shrl
movsl
mov
fs
je
mov
cld
dec
jp
or
cmc
add
and
lret
shlb
shll
test
mov
mov
xorl
and
add
jmp
jnp
cmc
add
aad
jmp
call
xchg
lret
xor
std
aam
mov
mov
pusha
out
cmp
mov
aaa
sbb
ss
fsub
xor
and
cmpsb
pop
jp
fimull
sub
xchg
insb
dec
or
sbb
inc
fsub
rcrb
dec
movsb
and
adc
mov
or
dec
mull
sub
lret
and
cmp
and
int
in
xor
in
fwait
loopne
cmp
pop
popf
sub
cld
xorb
mov
or
les
out
jne
and
mov
pop
and
data16
in
mov
dec
popa
sahf
and
or
shrl
jb
and
lahf
cli
lret
fstpl
cltd
out
sbb
or
xor
fst
sbb
ljmp
lahf
mov
dec
and
dec
xor
xchg
or
xor
inc
inc
adc
cmpsl
movsl
jecxz
adc
fwait
xor
call
sbb
adc
fdivr
fisttpl
or
add
outsl
movsb
std
lcall
xor
pop
lret
lods
mov
mov
ret
in
out
pop
pop
pop
test
mov
and
rcll
aad
ja
idivl
and
ret
leave
sub
xchg
fcompl
aas
jne
pop
cmp
das
lret
into
mov
pop
or
xchg
cmp
xor
loope
aas
imul
je
xor
ss
out
mov
xor
push
ja
mov
add
stos
or
or
sbb
int3
mov
fsubrs
jmp
or
add
cmpsl
mov
inc
inc
pusha
and
mov
stos
xor
add
ja
inc
movsl
inc
push
dec
addr16
pop
mov
xor
leave
jp
jo
mov
jno
adcl
dec
sti
cwtl
rclb
dec
sbb
int
jl
adc
ljmp
aad
mov
mov
je
pop
xlat
and
pop
xor
loop
add
subl
sbb
cmpsb
add
movsb
jns
ret
fimull
popf
cld
dec
add
cmp
popf
xor
and
add
jp
lret
ficoml
es
add
testb
sarb
fld
xor
xchg
dec
sbb
notb
add
out
push
ljmp
cmp
cmpsb
inc
cmp
repnz
dec
adc
inc
push
adc
das
roll
push
xchg
push
or
jl
addl
mov
daa
push
sub
push
pop
addb
cmpsb
out
add
jne
test
popf
filds
pop
je
sub
push
jle
test
xor
jmp
cmp
fcos
addl
addr16
movsb
or
cmp
jg
jle
and
cli
cmp
fstps
into
test
sbb
movsl
pushf
stos
mov
jne
out
or
add
popa
and
imul
cmpsl
pusha
add
pop
testb
or
adc
push
and
dec
sub
mov
mov
stos
push
inc
ds
jl
jge
xor
loop
insb
inc
push
and
lea
fisttpl
icebp
bound
out
fwait
out
fildl
xchg
sbb
xchg
or
pusha
mov
dec
jecxz
popf
std
movb
mov
aas
popa
addb
loopne
mov
inc
lds
mov
into
push
mov
shll
pop
dec
lea
in
sub
scas
shlb
notb
loopne
fmuls
ljmp
les
add
pop
int3
mov
mov
mov
test
and
xchg
add
pop
jae
arpl
inc
mov
push
ret
stos
lods
mov
sarb
add
inc
int3
jmp
cmpsl
pop
push
aas
mov
hlt
xor
sub
lcall
movsb
pop
adc
dec
push
or
aaa
int
dec
jmp
mov
mov
sar
icebp
movsb
mov
fstl
lahf
mov
mov
out
fildl
movsb
and
dec
pushf
lcall
data16
cmp
push
add
cmp
adc
cs
pop
jmp
jl
insb
push
lea
test
jnp
hlt
idiv
enter
mov
ljmp
gs
nop
add
dec
add
in
jo
nop
aas
test
fbstp
dec
mov
ss
xor
pusha
jbe
mov
hlt
clc
xor
icebp
mov
inc
jo
mov
sti
adc
imul
pop
out
push
mov
cmpsl
xchg
dec
pop
test
cmp
inc
insb
inc
fst
lcall
mov
add
mov
test
popf
mov
pop
push
xor
ljmp
jno
inc
insl
ds
push
sahf
sbb
and
leave
mov
cmp
pushf
push
fstps
push
add
subb
add
lods
or
icebp
stc
sbb
add
ja
and
mov
mov
std
pop
negl
cs
incl
les
imul
sub
pop
push
stos
icebp
sahf
jo
mov
cmp
adc
icebp
out
mov
jo
push
mov
push
xchg
pop
inc
ret
and
and
cwtl
xchg
loopne
stos
movsb
fnstenv
movsl
push
mov
rcr
dec
mov
pop
xchg
mov
out
stc
insl
ljmp
inc
fidivs
adc
lret
inc
adc
iret
dec
push
push
pop
add
and
mov
in
push
outsl
stos
rcll
js
scas
jnp
imul
xchg
mov
xor
or
dec
cltd
cld
sbb
sbb
dec
mov
pusha
cmp
mov
into
jae
movsb
xchg
push
ret
cwtl
jmp
outsb
fstps
gs
test
xchg
lds
xchg
xchg
cmp
jmp
pop
xchg
inc
insl
aad
mov
sbb
dec
loop
xlat
jl
rcrl
xchg
outsl
outsl
xchg
orl
jg
or
and
ret
aaa
jns
cmp
or
xchg
call
in
fidivrl
cmp
das
adc
lret
add
popf
fstp
and
push
int3
jo
outsl
hlt
out
pop
imul
sbb
mov
test
push
cmp
sbb
xor
pop
xchg
xchg
mov
dec
pusha
push
aas
push
ret
push
push
jge
adc
sub
sti
cmp
xchg
mov
popa
mov
cld
lahf
or
aam
adc
pop
inc
dec
jnp
movsb
sub
xor
add
fsubrs
inc
mov
sub
cltd
xor
insb
pop
sbb
stos
sbbb
mov
sub
xor
lods
popa
inc
in
mov
cmp
adc
dec
mov
push
clc
mov
lock
push
lret
ret
mov
cmp
sbb
and
push
jmp
dec
pop
and
testb
into
xchg
pushl
xor
lahf
xorl
iret
stc
rcrb
cmp
dec
fidivrl
xchg
mov
pusha
dec
mov
fnstcw
fcmovnu
mov
sub
insl
out
mov
mov
push
sbb
loope
sti
jecxz
mov
push
outsl
pusha
lods
fs
imul
scas
jno
jg
cmpsl
pop
xbegin
mov
rcrl
cwtl
inc
jne
popa
int3
mov
gs
add
inc
xor
cmp
mov
pop
aam
xchg
mov
add
jne
cmp
push
pop
cwtl
jl
and
iret
push
jno
scas
aam
icebp
mov
xor
xchg
or
into
subb
sti
aam
addb
cmp
xchg
xchg
loope
ljmp
inc
dec
loop
inc
in
mov
inc
bnd
push
frstor
xor
stc
lods
shl
cmp
cmp
and
outsb
dec
jl
push
sbb
add
dec
pop
cmp
pushf
rcr
data16
add
lock
sub
inc
std
sahf
imulb
push
lret
xor
imulb
sub
jle
mov
add
xchg
dec
mov
fildl
out
aaa
xchg
xor
or
push
call
pop
shll
xchg
sub
xchg
jecxz
cmp
shrb
iret
jp
in
add
sub
and
ljmp
rolb
hlt
dec
test
add
aas
dec
xchg
mov
or
mov
mov
inc
in
xchg
dec
bound
push
je
pop
movd
jbe
clc
pop
lods
mov
push
jns
jmp
pop
mov
cmpsl
pop
outsb
and
pop
cmp
push
xor
bound
out
mov
jbe
dec
loope
ss
dec
das
loope
sti
xor
das
mov
fnstcw
ror
cld
and
mov
test
insb
mov
cmp
or
loopne
cmp
test
and
xor
test
neg
jge
pop
call
adc
inc
outsl
adc
ds
lods
fs
mov
pop
xor
sub
push
imul
push
pop
mov
and
or
paddw
add
nop
out
loopne
sub
dec
xchg
ss
stc
stos
or
movsl
push
popa
sbb
scas
lea
xchg
das
inc
stos
sarb
jg
dec
mov
pop
enter
inc
push
notl
fisubs
sub
mov
or
scas
dec
fists
xchg
std
pop
mov
int
cmpsl
insb
cmpsb
notb
mov
mov
push
cltd
sbb
or
pop
popa
inc
das
sbb
mov
sbb
or
and
xor
mov
jb
dec
decb
pusha
cmp
cmp
mov
push
dec
sub
lea
shlb
and
push
jge
jmp
mov
testl
and
xchg
ljmp
xor
out
jecxz
xchg
add
daa
ret
sub
aas
xchg
sub
ds
push
pop
movsb
cmp
ficoms
sbb
or
push
cltd
push
sbb
jecxz
xchg
js
loopne
lahf
push
inc
push
and
sbb
dec
pop
das
fdiv
fdiv
fcmovnbe
push
or
mov
mov
jno
mov
fnstenv
popa
pop
jo
inc
bound
ljmp
or
cmp
adc
dec
ja
push
pusha
aas
fisubl
push
lods
xchg
fmul
test
dec
or
dec
in
int
imul
and
xor
and
mov
jmp
ja
xchg
negl
xor
mov
fnstcw
push
dec
cmc
int3
xchg
pop
pop
mov
ds
inc
aaa
dec
push
mov
test
jl
mov
mov
sbb
je
push
push
scas
sti
pop
roll
cmp
js
fs
jno
fsubs
sbb
adc
dec
add
add
inc
push
sbb
je
push
xchg
in
ds
loop
add
xchg
aaa
mov
inc
xchg
imul
repnz
and
cmp
xor
outsl
xor
mov
scas
pusha
sub
roll
add
out
jae
data16
add
inc
ret
add
push
jnp
push
das
cs
icebp
inc
xchg
mov
test
mov
mov
cmp
hlt
sahf
and
arpl
ficoml
pop
in
repz
push
ficomps
scas
dec
and
pop
push
lods
xchg
test
call
sub
push
cmp
outsb
or
movsl
int
dec
and
and
push
lea
pop
xchg
fcoms
stos
mov
aaa
jg
fbld
add
inc
mov
ja
scas
xchg
pop
ret
in
ja
imul
and
push
xor
mov
or
loopne
adc
icebp
mov
imulb
arpl
mov
lret
jnp
stos
jge
lds
adc
pop
lret
xchg
dec
lret
sahf
pop
movsb
cwtl
imul
cwtl
fcoms
popf
or
or
sarl
or
or
push
xchg
pop
cmc
mov
insb
jmp
out
pop
ja
pop
test
fsub
in
jecxz
fs
std
push
out
pop
dec
inc
fnstenv
ds
mov
jnp
xor
inc
sub
rorl
dec
ficoms
pop
ret
movsb
ror
aas
inc
jbe
push
insb
push
jo
lods
adc
daa
ss
push
cli
dec
dec
sub
add
int
fwait
lea
and
dec
addr16
lcall
pop
loope
loopne
jnp
push
loopne
mov
xchg
cmc
shrl
or
and
mov
dec
fdivrp
sub
pusha
fiadds
jno
test
dec
mov
sbb
ficoml
mov
jnp
fldl
test
loop
add
pop
popf
rcrb
add
loopne
or
xor
mov
fs
mov
aas
loop
pop
push
cmpl
fstpl
or
lods
xor
jnp
mov
roll
rcrb
pop
popa
sti
subb
adc
lea
cmpsl
add
jbe
test
adc
js
push
test
lret
out
std
imul
js
cmp
xchg
pop
addb
or
xor
mov
clc
cmc
in
fcomps
test
rcrw
icebp
test
outsb
mov
pop
push
push
add
adc
mov
xchg
mov
jno
xchg
cwtl
jb
mov
push
outsl
cmp
int3
sub
sub
inc
out
sub
ja
div
mov
jge
outsl
cmp
sub
cmp
or
push
sub
out
pop
lds
cmp
and
loopne
lock
or
test
xor
cmp
nop
fwait
out
mov
pop
int3
fwait
les
sub
insb
imul
inc
dec
imul
sahf
push
mov
mov
test
cmpsb
pop
fmull
fdivl
aam
mov
es
push
inc
outsl
dec
shl
push
int
icebp
outsb
xchg
fs
inc
cmp
leave
add
mov
nop
push
int
ret
dec
adc
sbb
enter
xor
pushf
std
pop
ret
or
mov
scas
fsts
ljmp
fistpl
nop
dec
push
xor
pop
outsl
mov
rorl
xchg
lahf
imul
outsb
and
imul
fcomps
ljmp
cmp
lahf
dec
outsb
mov
insl
jnp
pop
movsb
sahf
mov
sti
shr
dec
lods
sub
in
jmp
mov
mov
push
sti
and
out
ss
pop
push
leave
fst
negb
in
push
push
xor
movsl
outsb
xchg
and
test
fiadds
outsl
xchg
jmp
sarl
fs
mov
lods
lea
mov
mov
fwait
inc
icebp
sti
pop
lock
mov
adc
jb
inc
jp
or
xor
dec
cmpl
cmp
mov
adc
jno
nop
push
fnstenv
dec
inc
jge
jmp
movsl
sbb
das
xor
cltd
push
cmp
lahf
cld
std
shl
or
testb
sahf
mov
call
jg
loopne
xor
sub
cmp
adc
std
cmpsb
mov
pushf
addl
cmp
lret
out
leave
fbld
sub
out
fcoms
out
arpl
inc
adc
movsl
xadd
or
clc
movsl
pop
ret
mov
je
add
cwtl
aaa
rorl
mov
aad
mov
lock
stos
push
inc
mov
cmp
in
and
push
mov
jbe
mov
cmp
cmp
dec
out
jns
xchg
push
lret
mov
sbbb
sbb
cmp
cmpsl
push
ffreep
jne
adc
cmp
sbb
aaa
fdivrl
lea
inc
sub
cmp
push
xchg
push
push
xchg
ss
inc
jo
cmpsl
sti
cmp
xor
mov
loope
jecxz
mov
xchg
jne
sbbb
dec
cmc
push
and
movb
jne
pop
mov
jnp
arpl
dec
mov
jge
add
sub
push
rolb
gs
test
lret
imul
adc
in
clc
jns
jns,pt
test
inc
mov
mov
lea
mov
sbb
les
push
aam
insl
or
push
imul
sbb
movsb
out
xor
jno,pn
test
xchg
mov
jne
mov
outsb
movsl
push
int3
fcmovnu
and
data16
add
cmp
into
mov
movups
shl
insb
xor
pop
movsl
adc
sarb
lea
mov
mov
clc
inc
mov
cltd
mov
cmpsl
cwtl
and
mov
lahf
dec
mov
mov
jp
dec
daa
lahf
xor
imul
nop
in
lret
adcl
ja
push
push
adc
aam
cmp
push
fwait
cmp
call
cwtl
or
int
xor
shl
inc
push
lret
add
push
mov
xchg
out
add
adc
fnstsw
leave
outsb
fwait
pmaddwd
rolb
fsubrl
inc
pusha
pushf
dec
loope
push
lods
rcrb
pop
push
nop
mov
out
push
lret
xchg
pop
imul
je
jmp
nop
cld
add
dec
je
push
adc
push
fiadds
and
push
rcll
lea
xchg
pop
pushf
cmpsl
cmp
lods
cmp
sarl
push
jae
inc
xor
pop
dec
hlt
les
lods
sub
jl
jg
sub
jns
test
imul
sub
add
dec
inc
inc
outsl
lret
lcall
int3
inc
bound
shl
lahf
xor
mov
pop
ret
inc
and
dec
subl
pop
inc
adc
mov
lods
loop
xchg
les
sbb
mov
sub
stc
sub
inc
push
lahf
loope
sbb
sub
sub
nop
xor
or
scas
sub
adc
push
mov
mov
push
pop
cmp
jns
xchg
sub
mov
inc
inc
inc
popf
xchg
mov
inc
imul
popf
int
les
pop
xchg
cmp
cmpsb
je
insl
xlat
jo
jb
or
sbb
add
stos
jne
or
dec
in
mov
xor
imul
lods
xchg
cmp
mov
mov
shll
pop
fisttpl
mov
pop
aaa
fisttpl
es
jle
loopne
jbe
push
gs
insl
lds
inc
cmc
add
ret
lea
imul
push
push
rcr
ss
push
rclb
bound
xor
insl
je
xor
and
ss
je
fsubl
or
xor
sub
cmp
push
imul
pop
stos
xchg
pop
pop
fcompl
add
jb
ja
daa
flds
jmp
sti
dec
int3
pushf
mov
shrl
mov
lret
mov
shl
mov
mov
jle
mov
inc
cli
sub
test
bound
sub
sub
mov
add
lds
push
nop
mov
or
lahf
dec
cmp
clc
push
push
sbb
xor
inc
sbb
sarl
push
lods
cmpsl
sbb
sahf
sbb
into
sti
int
stc
ja
xlat
ss
pop
or
popf
xlat
cwtl
sub
jo
out
jl
cmp
xchg
cmp
int3
lcall
in
add
jbe
pushf
cmp
testb
repz
pop
adc
lahf
repz
stc
leave
scas
mov
pop
repnz
cld
adc
xchg
jbe
jae
stos
movsb
or
jb
push
sub
mov
cmp
sbb
movsb
or
push
push
icebp
shl
pusha
inc
dec
mov
push
leave
and
icebp
mov
addr16
pop
push
xor
push
sub
stc
sti
pop
testb
jnp
xchg
bound
sbb
jns
fstl
nop
jo
es
imul
pop
je
xor
shlb
mov
shll
insb
pushl
push
shll
lock
inc
jne
sbb
mov
loope
movl
or
inc
loop
mov
int
jno
add
adc
mov
pop
sbb
or
test
cwtl
out
daa
mov
loop
push
xor
mov
out
lret
ja
lods
dec
mov
push
cmpsb
out
jp
jns
dec
lcall
imul
and
push
push
movsl
loope
xchg
mulb
sbb
test
dec
aas
add
adc
or
js
shlb
outsb
push
test
fisubrs
cmp
in
mov
pop
xchg
sub
jo
jecxz
adc
mov
push
hlt
rolb
mov
fcoms
inc
shlb
and
jecxz
movsl
aaa
cmpsb
lret
mov
fnstsw
sbb
addr16
hlt
call
imul
or
adc
sbb
inc
add
adc
or
notb
jp
push
das
outsl
jno
cmpsb
gs
sub
add
lcall
loopne
notb
and
mov
stc
xor
jl
xchg
fs
and
mov
repnz
in
test
cltd
push
fs
repz
sbb
adc
js
mov
adc
or
and
daa
xchg
test
jns
cmp
dec
sbb
ret
cs
inc
inc
jo
xor
mov
enter
sti
mov
je
rclb
dec
sub
addb
pop
inc
loopne
subl
adcl
push
dec
aam
loope
mov
incb
fisubrs
ds
xchg
into
mov
icebp
push
cmpsb
test
adc
mov
mov
lock
outsl
popa
adc
jp
sub
jne
je
push
jae
cld
mov
mov
mov
pop
dec
loopne
call
mov
test
lods
pop
nop
pop
mov
inc
hlt
pop
push
cmpps
sbb
push
adc
fdivrs
jo
push
push
shlb
lea
jo
cltd
lock
data16
mov
jnp
jo
push
test
mov
leave
add
xchg
or
lret
jnp
and
outsl
lds
xor
xchg
or
mov
fwait
jg
sahf
std
cmpsb
outsb
lods
lods
dec
cmpsb
lock
jno
inc
jne
fcmovnb
out
cmpsb
mov
mov
jp
cmp
dec
std
bound
dec
sbb
icebp
and
pop
push
adc
sub
fldl
fimull
std
jecxz
sub
in
mov
xchg
cmc
and
jp
inc
xchg
mov
mov
aaa
pop
idivb
insb
inc
lret
jmp
outsb
inc
push
xlat
xor
jl
jnp
in
loopne
jnp
mov
cltd
mov
shrl
data16
sub
sbb
dec
jnp
cwtl
push
ja
push
outsl
mov
mov
out
out
in
xor
ss
jmp
mov
lea
aaa
addr16
adc
cmp
test
sbb
push
scas
loopne
inc
cmc
imul
add
jmp
dec
shl
ret
inc
fwait
in
and
mov
arpl
dec
les
and
inc
inc
push
adc
dec
iret
fisttps
adc
dec
mov
insl
push
pop
out
add
or
ljmp
mov
aad
into
outsb
idiv
mov
pop
mov
dec
pop
das
inc
xor
pop
push
es
ss
cmpl
inc
mov
mov
dec
lea
dec
inc
mov
xlat
dec
imul
and
xor
orb
repz
or
je
mov
push
movsl
sub
leave
movsb
or
xor
insl
je
adc
add
daa
and
hlt
mov
das
rclb
mov
clc
popa
jbe
aas
test
fimull
jg
mov
rcl
sub
adc
mov
xor
mov
and
mov
in
mov
nop
add
cmp
sahf
cmpsb
jp
and
test
shll
pusha
pusha
rcll
cmp
sub
mov
cmc
or
inc
inc
test
mov
and
jle
jmp
jl
jle,pn
mov
push
fmuls
sub
loopne
cltd
xchg
mov
xchg
mov
inc
or
pop
add
ror
out
lock
andb
mov
repz
mov
fisubrs
or
push
mov
xchg
into
cmp
cmp
sahf
jp
pop
dec
or
push
jl
arpl
icebp
sbb
stos
xor
outsl
sbb
sar
movsl
or
mov
fdivl
in
xchg
pop
jp
mov
rclb
adc
addr16
out
insb
adc
and
shl
loop
sti
insl
cmp
test
push
test
xchg
popa
jle
addr16
sbbl
mov
lret
repz
ljmp
out
das
sar
pop
jmp
mov
neg
dec
mov
shlb
cmp
es
movsl
jmp
pop
mov
call
jnp
pop
outsb
icebp
fisubl
gs
out
adc
sbb
daa
jae
jecxz
popl
bound
mov
cmpsb
or
scas
cs
lock
stos
push
scas
aam
jp
pop
mov
adc
adc
test
out
push
push
sti
jmp
jecxz
arpl
mov
mov
ret
jo
je
push
inc
fcoml
xor
mov
dec
test
fdivrs
test
push
out
divl
dec
sti
insl
dec
adc
aas
add
mov
sbb
scas
push
stos
imul
inc
mov
into
jo
cmp
lods
mov
lea
xchg
addl
xor
dec
sahf
insb
lods
sbb
jae
clc
xorl
cmc
rolb
dec
sbb
icebp
dec
adc
std
add
outsl
std
icebp
sbb
xchg
cmpsl
add
mov
sti
mov
dec
mov
test
sbb
fcoml
mov
rolb
cmc
push
or
push
push
les
mov
dec
lcall
xchg
cmp
xor
xchg
mov
lock
push
stos
push
cmp
gs
scas
popa
test
push
leave
jno
pop
push
inc
fsts
inc
bound
fs
repnz
test
mov
loop
rorl
xor
xchg
sbb
xchg
sub
jg
lret
pushf
xchg
sbb
pop
out
adc
popa
out
dec
jg
rolb
add
testl
mov
pop
sub
and
adc
call
mov
mov
add
mov
arpl
loopne
pop
xchg
push
xchg
stos
fwait
inc
stos
xchg
add
mov
jbe
and
push
adc
in
jae
popf
adc
es
out
pop
push
jae
jmp
loope
imul
popf
and
stc
add
enter
call
lock
mov
out
cmp
cmc
scas
ret
loop
push
mov
add
je
aaa
and
lods
pop
jno
xor
fiadds
mov
in
xor
scas
and
test
adc
cwtl
repz
xor
fidivrl
stos
or
popf
into
sbb
add
add
mov
sub
lods
and
clc
push
pop
sub
aaa
sti
mov
xor
sbb
lahf
lock
pop
inc
das
mov
dec
push
gs
loopne
lea
mov
pop
mov
pop
push
jae
push
enter
hlt
test
jl
out
and
cmpb
lods
jmp
repz
roll
cmp
add
cmp
outsl
shl
pop
loopne
fldt
inc
jmp
jno
adc
pop
xchg
cmpsb
and
mov
and
sub
push
mov
fistl
xchg
or
dec
jnp
mov
cs
xor
or
bound
out
ret
ljmp
insl
dec
nop
imul
sbbb
mov
mov
inc
in
loop
cmp
pop
jno
jb
inc
push
out
pop
bound
jns
jg
inc
add
sbbl
sbb
int3
clc
jl
in
mov
mov
es
pop
inc
imul
pop
daa
aad
mov
pop
mov
dec
cmp
xor
add
lods
xlat
push
mov
iret
aad
cmc
mov
in
sub
jae
shlb
std
ljmp
cli
nop
dec
mov
out
in
lret
test
incb
push
stc
xchg
jecxz
int3
xor
insl
inc
mov
and
mov
loope
imul
push
movaps
inc
pop
sbbb
add
lods
jl
dec
mov
and
fistl
xor
cmp
les
pop
scas
enter
jg
inc
cwtl
cs
imul
popa
adc
pop
mov
movsl
push
repnz
inc
call
inc
add
xchg
and
sbb
lods
scas
mov
out
test
repnz
imul
outsb
push
into
push
fwait
je
jle
mov
xchg
mov
sbb
jecxz
push
stc
and
mov
imul
ret
test
inc
negl
jae
mov
dec
add
shrl
cmp
xchg
inc
cmpsb
lcall
and
dec
dec
sbb
jmp
inc
or
fdivr
cli
dec
lock
xchg
fistl
push
popl
mov
add
loopne
push
and
sub
shrb
mov
je
dec
dec
loope
jno
cmc
or
mov
sub
pop
jae
xor
sti
sti
inc
adc
and
mov
cmpsb
and
lahf
cmpsl
push
mov
push
gs
sub
loopne
cltd
add
pop
das
mov
repnz
push
fdivl
loop
gs
fmuls
stc
xor
add
shll
mov
add
sub
fistpl
inc
std
rorb
mov
jae
jae
lock
pop
jbe
into
pop
out
mov
pusha
mov
adc
adc
pop
cmp
popa
and
pop
addr16
cli
clc
enter
push
xor
loopne
push
data16
pop
adc
mov
jne
shrb
mov
jo
loopne
insb
mov
js
stos
iret
loop
imul
mov
test
lahf
sub
cld
xor
enter
test
jns
or
mov
shl
push
push
lahf
shrl
fists
cmp
sub
dec
imul
sub
dec
dec
in
cmp
out
adc
cmp
adc
inc
or
adc
jp
sbb
add
popf
cmpl
mov
pushf
dec
or
hlt
xlat
push
mov
pop
cmp
mov
iret
push
mov
sti
jne
lret
daa
sbb
movl
sbb
jns
outsl
jns
jg
cld
cmp
push
lcall
out
movsl
push
test
pop
or
cmc
jb
out
cli
add
imul
cmp
pop
xor
in
dec
adc
out
mov
std
cs
pop
xchg
push
pop
xchg
xchg
cmpsw
data16
mov
xchg
jo
stos
mov
dec
iret
cli
mov
dec
test
xchg
cltd
fdivs
repnz
loope
sbb
cmp
jne
lods
or
repnz
mov
dec
fnstsw
out
mov
incb
sarb
mov
loopne
scas
jg
sbbb
in
pop
rcrl
mov
cmp
mov
pop
mov
mov
inc
xor
cli
xchg
push
jmp
lods
or
inc
or
rcl
sub
cmp
jl
scas
push
les
mov
mov
aad
int3
imul
or
add
insb
inc
lcall
fcoms
sbb
nop
das
pop
nop
xor
add
push
mov
fildll
inc
repnz
jl
xchg
loopne
mov
mov
pop
in
je
test
fisttpl
and
lahf
clc
mov
lcall
mov
dec
popf
push
cmpsl
jno
clc
or
jb
adc
dec
mov
or
push
mov
negl
push
push
xor
jae
dec
nop
cld
mov
sub
imul
pop
push
jnp
pop
nop
outsb
or
cltd
jp
push
xchg
and
icebp
jmp
cwtl
es
cwtl
in
lea
scas
pop
dec
addr16
dec
aaa
roll
faddl
sbb
xor
jecxz
not
mov
rcll
aas
xchg
mov
add
sbb
pop
sti
rcr
es
lock
out
sub
cltd
add
test
sahf
nop
adc
sbb
inc
pop
mov
dec
sbbl
xchg
xchg
cli
pop
jo
or
sbb
push
or
enter
mov
addr16
mov
cltd
cmpb
and
adc
xchg
gs
pop
enter
sub
mov
mov
sub
xchg
sub
mov
gs
mov
add
out
and
fdivrl
jns
xchg
pop
and
fbstp
pop
xchg
sarb
dec
fstl
dec
push
or
mov
cwtl
cwtl
ffreep
inc
add
pop
add
adc
lret
xlat
jne
adc
rcll
pop
int
stos
mov
pop
lods
xor
mov
jmp
dec
popa
cmp
mov
xchg
dec
stos
xor
mov
xor
leave
xor
imul
mov
cwtl
mov
iret
mov
sahf
das
jg
fsts
pop
push
inc
pop
lahf
xchg
ret
movsl
push
sti
bound
cmp
or
or
push
or
ljmp
out
and
aam
adc
sbb
sbb
jns
hlt
push
adc
imul
jbe
daa
xchg
jbe
movsb
shl
xchg
mov
nop
jmp
vpcmpgtb
or
push
sti
fists
mov
push
es
jge
mov
cmpsl
jno
pop
xchg
addr16
or
out
mov
sbb
rcrb
mov
lds
inc
dec
repnz
stc
push
lds
cmc
fsubrs
test
xchg
in
lret
scas
and
push
jge
xor
adc
pop
fcomps
xor
rcrl
push
pop
mov
cli
cmp
insb
inc
hlt
mov
mov
mov
sbb
lods
pushf
in
mov
scas
addr16
xor
and
test
push
pop
pop
and
cmp
hlt
dec
test
push
sub
add
mov
das
xor
add
sub
jnp
xchg
inc
jnp
jmp
fwait
lcall
add
sub
push
aam
sti
xor
adc
cmp
and
sub
and
cmp
mov
lret
mov
jl
jmp
mov
mov
cmp
fwait
icebp
push
push
mov
sub
in
pop
dec
xor
adc
inc
cmpl
cmp
jbe
and
jbe
jno
add
cli
cltd
push
es
pop
out
repnz
fists
icebp
hlt
mov
aad
and
lahf
lret
fcoml
in
cmp
dec
in
xlat
xor
in
mov
arpl
int
lods
lods
stc
enter
incb
shl
xchg
mov
frstor
mov
das
inc
mov
ljmp
sub
das
aaa
mov
dec
lahf
jb
mov
insb
push
test
push
subl
fcomip
jbe
jae
add
bound
test
xor
ds
test
push
xchg
pusha
rorb
nop
sar
push
push
and
out
jmp
clc
pop
shr
inc
repz
loope
adc
test
xchg
pop
pop
das
adc
xchg
pop
push
jmp
test
push
popf
cmp
mov
fwait
enter
out
jg
mov
aam
jno
es
out
lret
jmp
mov
arpl
adc
popl
icebp
shll
dec
adc
jmp
jnp
mov
or
mov
sbb
cmp
jecxz
addr16
nop
xchg
dec
sbb
test
cld
jnp
aaa
addr16
push
repz
inc
pop
cmp
mov
call
push
lcall
in
inc
xchg
pop
adc
out
sub
mov
test
ss
int
dec
es
mov
add
sub
sbb
push
cmp
or
cli
call
sub
add
xor
and
test
daa
iret
xor
adc
gs
pop
pop
dec
xchg
imull
jle
or
fstl
mov
xchg
xchg
inc
add
icebp
push
scas
ret
xor
jne
add
popf
fistps
xlat
jb
les
jns
fistpl
adc
xor
add
shll
pop
repnz
out
imul
shrl
cmp
and
pop
sahf
adc
mov
xchg
enter
in
sbbl
lods
sub
ret
sbb
loopne
mov
mov
cmp
mov
lahf
jne
outsb
xchg
push
adc
int3
mov
cltd
mov
add
in
sub
out
jo
mov
sub
mov
pop
xor
sub
fbstp
jp
push
outsl
les
jns
les
in
fmuls
rcrb
xor
cmp
jns
mov
shrb
push
xor
jmp
xchg
pop
enter
xchg
mov
cmp
scas
popf
xchg
addr16
or
sub
jl
fildll
ds
xlat
push
jb
xor
test
iret
inc
sub
xlat
ret
mov
popf
cmpsb
inc
in
lods
and
mov
dec
push
pop
dec
and
adc
inc
leave
xchg
dec
int3
pusha
fs
dec
cmp
sti
lret
sbb
popa
xchg
pop
add
adc
into
mov
ja
add
lock
mov
mov
push
mov
mov
cltd
sub
xor
mov
or
adc
arpl
sarl
in
jl
test
sub
lea
sbb
popf
inc
or
push
jns
test
stos
adc
lret
sbb
adc
imul
or
dec
mov
in
repz
out
xchg
cmp
push
jl
into
sar
rcrl
dec
xlat
jno
out
addr16
hlt
stos
and
xor
mov
aas
pop
jae
loope
les
stos
mov
aas
ret
rol
imul
mov
mov
jbe
lods
test
aad
sbb
inc
cmpsl
ljmp
dec
icebp
fisubrl
in
add
sarb
dec
pop
jg
mov
jmp
addb
push
pop
or
jne
xchg
add
sar
xlat
hlt
cmp
ja
in
int
lcall
cmp
arpl
inc
es
dec
sarl
jnp
aam
pop
dec
jno
push
popf
jge
out
lock
jno
cmp
mov
mov
sahf
cmpsl
fs
cmp
scas
add
outsl
jecxz
push
sbb
mov
dec
mov
dec
dec
xor
arpl
imul
jge
cmc
xor
or
xchg
pushf
into
pop
adc
insb
and
and
xor
loop
outsl
jle
sti
cmp
pusha
out
enter
pop
or
lds
mov
or
cmp
outsl
pop
sbb
lods
mov
icebp
filds
push
cmpsb
jns
xorb
aaa
push
dec
inc
sbb
inc
cmpsb
mov
pop
lods
sbbl
and
jnp
outsl
out
jb
imul
orl
les
aas
cmp
add
sub
pop
jmp
add
pop
fisttpll
push
aaa
js
cli
insl
scas
fisttpll
cli
adc
dec
and
leave
lds
movsb
cmp
dec
ss
xchg
xchg
loop
mov
jb
test
inc
testb
jecxz
xchg
in
fs
fidivs
insb
aaa
je
lods
rorl
inc
pop
cltd
xor
cmp
lret
xchg
imul
cmp
dec
es
pop
push
dec
pushf
xchg
andb
jp
sahf
mov
repz
movl
shlb
int3
stos
fdivrl
shlb
jecxz
ret
dec
pop
inc
add
les
pusha
stc
pusha
pop
arpl
add
outsb
adc
adcb
push
adc
cmp
mov
inc
add
lods
outsl
push
les
in
pop
and
dec
mov
inc
movsl
pop
sbb
cmp
rorl
out
dec
pop
psrld
jne
shll
mov
fisttpl
enter
subl
leave
ret
daa
dec
fstpt
shll
inc
repnz
sbb
pusha
or
cld
xchg
inc
lock
cltd
andb
stc
jae
mov
cmp
xchg
mov
jae
jae
adc
pop
xorl
inc
mov
mov
dec
sbb
sbb
cltd
nop
les
fistpll
rcll
cmp
xor
mov
ficompl
dec
mov
xchg
xchg
sub
out
sti
aaa
das
int3
push
pop
jno
xchg
test
pop
cmpsl
in
fidivs
hlt
cmp
addr16
push
test
enter
add
imul
mov
or
xor
xor
push
ficoml
push
cmp
mov
arpl
adc
jne
aas
out
lods
test
pop
dec
adc
ret
push
repz
or
out
dec
sbb
mov
xchg
cmp
sub
mov
es
mov
ja
and
inc
xor
ljmp
sub
mov
ja
outsb
jne
mov
flds
lahf
dec
or
in
sbb
mov
pop
xchg
jbe
iret
out
pop
mov
in
mov
fldenv
xor
in
scas
pushf
imull
jp
or
pop
and
in
push
loop
jle
mov
sbb
stos
pop
nop
pop
lcall
pop
stos
stc
mov
lds
jns
mov
xorb
rcrl
jo
pop
or
adc
and
jo
aam
cwtl
sub
faddl
xor
inc
mov
shll
inc
ret
ds
fnstcw
xchg
rol
fwait
sub
fsubl
rcrb
rorb
pop
or
data16
pop
dec
add
popf
dec
fchs
lret
mov
sub
insb
sub
addb
insl
mov
in
dec
int
imull
test
div
shl
ret
movsl
ficompl
ss
adc
imul
mov
cmp
jo
mov
leave
mov
call
xor
push
cmpsl
test
dec
iret
movb
in
mov
in
pop
cmpsl
fs
push
fmul
lret
xor
jge
ljmp
daa
pop
jo
adcb
xor
int3
dec
mov
jp
cmpsb
outsb
sbb
inc
outsl
push
out
out
add
in
and
mov
fwait
and
rol
push
std
pop
sbb
inc
sub
andl
cwtl
sahf
add
fcoml
add
mov
outsb
jns
adc
das
outsl
sti
data16
arpl
or
ss
xor
or
add
ss
jae
pusha
push
imul
adc
ret
jb
jmp
loop
repz
loopne
testb
ljmp
sbb
pushf
loopne
loop
cmp
lahf
adc
in
pop
loope
add
out
adc
mov
xor
ret
pop
sbb
cmp
imul
shll
jns
repnz
push
jl
aas
jecxz
shrb
xor
dec
pop
popf
cmp
mov
cs
aad
and
pop
lea
sub
gs
gs
in
mov
les
fistpl
rcl
sub
inc
mov
add
insl
iret
jno
or
dec
outsl
and
xlat
in
push
xchg
in
xorb
or
xlat
xchg
and
mov
sbb
mov
or
ds
js
xchg
movsl
shrb
orl
mov
inc
sahf
fldcw
mov
dec
ja
movsb
cmp
daa
pop
orb
ret
pop
pop
xor
mov
insl
pop
nop
push
pop
mov
stos
adc
pop
xchg
ret
cmpsb
adc
arpl
cmpsb
scas
or
hlt
daa
cli
push
lds
fsubrs
mov
mov
sti
cmp
cmpsl
pushf
movsl
repnz
les
pop
ljmp
insb
inc
cltd
js
sub
lods
xchg
jnp
add
fmull
mov
iret
incb
sbb
ret
movsb
orb
adc
shlb
or
popl
add
mov
adc
cli
adc
push
in
inc
add
fcomps
push
add
sbbl
repnz
jnp
xchg
mov
sub
idiv
cltd
jle
dec
push
daa
mov
rcll
lahf
mov
jb
jp
lods
in
fwait
not
sarl
fisubrl
icebp
sub
dec
or
add
fisubl
inc
lods
clc
xor
rorl
inc
xchg
repz
mov
inc
cmp
arpl
mov
out
fdivrp
in
jle
stos
sbb
es
and
subb
or
insb
pop
push
insb
cmp
jg
js
sarl
mov
shll
call
mov
adc
mov
lods
xchg
in
xor
dec
dec
fnsave
sub
jl
sbb
stc
sub
mov
xor
mov
mov
inc
fisubl
lods
in
jns
loop
sub
inc
sub
mov
lods
mov
cmp
sbb
sbb
jecxz
cmc
scas
outsl
adc
sarb
or
adc
jb
or
cmpsl
mov
daa
pop
inc
xchg
sti
sbb
xchg
data16
mov
adc
inc
lret
pusha
fmull
dec
push
in
in
mov
mov
or
sub
jg,pt
jnp
cmpsb
cmp
shrl
fld
adc
push
sub
mov
mov
dec
mov
repz
jnp
mov
cmp
leave
popa
pop
imul
and
cmp
mov
mov
insl
add
mov
push
in
imul
dec
sbb
int3
inc
push
out
and
mov
sahf
xor
mov
test
xor
dec
enter
sub
sbb
sti
scas
insl
nop
pop
inc
es
mov
scas
fisubl
cwtl
pop
pop
adc
mov
push
cmp
ljmp
push
scas
dec
call
loop
lds
jle
rolb
in
mov
jge
movsb
xchg
lock
rorl
inc
test
notb
mov
xchg
sub
jb
lcall
lret
pop
push
lahf
call
mov
sbb
pushf
addl
jns
jb
movl
cmp
mov
dec
or
jns
mov
dec
sub
test
ret
or
dec
push
push
jbe
and
icebp
xor
and
mov
push
mov
pop
jmp
fdivrl
cmp
ja
pop
jo
pop
lock
aaa
add
mov
sti
in
and
dec
and
outsl
inc
pop
movsl
push
and
dec
es
jge
xchg
fsubs
jg
fldt
push
idivb
add
sbb
push
repz
flds
add
pop
sub
mov
enter
jmp
imul
xchg
repz
lock
fstps
xchg
popa
out
dec
xchg
rcr
mov
xchg
idivl
push
pushf
push
or
fdivp
fidivrl
xor
out
adc
xor
fidivl
ud1
mov
jp
sbb
data16
and
add
jns
xor
mov
mov
sub
sbb
push
pop
aad
inc
icebp
addr16
mov
rolb
dec
or
fcomip
cmp
pop
les
jmp
fidivrs
sub
xchg
ret
xor
or
mov
mov
mov
mov
push
fwait
lods
mov
dec
insb
clc
sarl
je
movsl
arpl
pushf
in
mov
cmc
mov
inc
mov
cmpb
mov
mov
or
cmc
xchg
adc
or
sub
push
rorb
sbb
add
out
lods
in
xor
jno
adc
pop
unpcklps
push
pushf
decl
out
leave
jp
bound
dec
jmp
pop
jg
mov
aad
mov
movb
mov
testl
stos
repnz
popa
sbb
push
fs
jg
aaa
cmp
add
fbstp
mov
adc
mov
or
pop
es
arpl
rorb
outsb
scas
xor
xchg
dec
lahf
mov
int3
inc
gs
mov
js
daa
in
mov
xchg
push
pushf
mov
push
daa
mov
mov
cld
testb
test
out
es
inc
mov
fidivs
enter
fmulp
sbb
test
cmpsb
scas
pusha
mov
mov
xchg
mov
aas
dec
sbb
movsb
std
xor
cmovne
lahf
aad
fwait
or
cs
sbb
fs
testl
and
xchg
adc
dec
xor
dec
je
sub
in
scas
cmp
push
pop
pop
ljmp
jg
sub
cmc
clc
icebp
scas
xchg
dec
idiv
mull
ret
enter
imull
xchg
sub
jle
adc
int
push
add
mov
xchg
dec
rcl
push
aas
test
inc
aas
dec
cli
and
aad
mov
jl
jg
aam
pop
sub
cmp
test
mov
cs
out
loope
cmp
pop
jmp
xor
or
test
leave
push
jge
xchg
dec
jmp
pushf
pop
pop
jae
cmp
mov
xchg
adc
imul
mov
sub
lcall
pop
scas
mov
pop
jbe
cmpsb
lcall
icebp
out
je
cmp
in
imul
outsb
dec
imul
call
xor
push
jo
and
xchg
xor
mov
jb
jp
popf
xchg
fstl
lds
mov
xor
and
fstps
sbbb
push
out
mov
adc
add
mov
cwtl
mov
sbb
inc
mov
xor
add
jmp
test
inc
dec
sarb
pop
sbb
push
xchg
sti
dec
pop
inc
sub
lahf
fldenv
jnp
dec
repz
inc
lods
mov
mov
jmp
call
or
sahf
adc
xchg
jne
imul
pop
in
inc
mov
inc
mov
in
mov
daa
test
ja
mull
les
xor
cwtl
std
arpl
cwtl
arpl
in
scas
jg
mov
jge
test
lcall
das
push
movsl
aas
rolb
out
sbb
adc
stc
add
add
lea
mov
into
lret
sub
cmc
imul
push
sub
mov
push
in
cmc
cld
or
pop
xchg
mov
add
adc
out
xor
int3
add
dec
mov
dec
lret
inc
xchg
jb
lea
orb
mulb
sti
cmp
mov
out
gs
jb
or
xchg
push
adc
mov
add
sti
or
adc
loop
sub
lods
lock
xor
add
aad
xchg
push
jne
and
pop
mov
xchg
out
popa
roll
push
ds
jmp
es
mov
je
fwait
sahf
mov
adc
aam
rclb
xor
ds
pop
inc
adc
and
push
aam
icebp
push
or
add
test
sahf
cli
ror
xchg
cmp
sbb
nop
scas
ja
ret
adc
sbb
int3
negb
fbstp
and
or
sub
cmp
in
xchg
inc
xchg
psignd
xchg
mov
xor
mov
cld
mov
popf
movsl
mov
mov
or
sub
sbb
or
imul
mov
rcr
dec
jne
mov
and
xchg
sahf
jnp
jae
add
test
xor
push
push
or
std
sbb
push
push
add
out
aam
pop
ret
cld
aas
aas
jp
lods
add
popa
popf
jb
xchg
dec
and
pop
mov
pop
dec
jge
jecxz
or
cmp
jno
adc
dec
push
dec
adc
lahf
xchg
fwait
xchg
loope
inc
or
aam
pop
push
mov
outsl
mov
loopne
arpl
mov
mov
ret
int
js
adc
sbb
mov
icebp
dec
cmp
push
rcll
xor
cmp
xchg
xchg
dec
aas
sub
pop
fnsave
mov
xlat
in
xchg
dec
mov
push
outsb
daa
mov
cmc
addb
push
pop
mov
je
jg
cmp
mov
pop
pusha
cmp
lock
mov
and
push
pop
add
rcll
pop
cmp
jns
adc
outsl
js
add
scas
fnstcw
lods
mov
sbb
push
daa
cltd
aam
push
mov
mov
hlt
notl
cltd
adc
sbb
je
into
imul
lahf
push
lods
sub
pop
out
dec
add
jl
orl
cmp
xor
in
sub
dec
pushf
sbb
shrl
imul
sbb
enter
jae
lods
mov
and
inc
sub
dec
pop
sub
stos
add
mov
into
ja
adc
into
ficompl
rcr
inc
mov
or
dec
lcall
xchg
frstor
int3
sbb
sbb
fwait
call
mov
bound
mov
push
push
mov
mov
loope
in
xchg
xchg
and
stos
sbb
enter
movsb
imull
cmp
movsl
aaa
stc
jge
ret
lea
aam
repnz
cmc
rcrl
jecxz
mov
push
mov
lock
rorb
movsb
cwtl
cmpsb
insb
dec
push
dec
dec
roll
lahf
lods
mov
and
hlt
mov
cltd
pop
push
into
cmp
adc
xor
mov
jp
mov
mov
ljmp
movsl
inc
loop
sarl
fists
out
dec
mov
adc
dec
cmpsb
sti
scas
mov
daa
mov
mov
xor
inc
hlt
fwait
dec
cmp
out
frstor
sub
shl
mov
test
shr
and
icebp
fwait
or
loopne
je
add
push
inc
sahf
xor
test
jp
jbe
setnp
int
jmp
iret
test
xor
cmpsl
or
ljmp
add
imul
ja
aam
jecxz
inc
movsl
cmp
or
jle
out
xor
icebp
xchg
cmp
int
and
inc
jl
pop
test
mov
fidivl
xor
mov
mov
sbb
insb
das
cli
inc
cmp
jl
mov
add
pop
call
jmp
pop
sarb
test
inc
push
push
or
xchg
mov
insl
pop
clc
xchg
xor
in
cmp
xchg
jge
pop
add
mov
inc
cwtl
cmp
adc
and
jne
add
adc
pop
mov
in
outsl
mov
inc
mov
std
sbb
pop
js
sub
xchg
lea
push
lods
orb
movsb
jle
lods
adc
frstor
mov
sti
fwait
adc
ret
add
xchg
dec
jno
sub
fmuls
mov
xchg
js
push
inc
pop
cmp
mov
add
aas
sbb
movsb
or
push
aas
divb
mov
add
mov
or
fsubs
incb
int
punpckhdq
push
jb
testb
sarl
scas
mov
push
jno
mov
out
push
pop
shll
mov
nop
sub
fistl
fcom
jg
xchg
sub
and
repnz
rcll
fistpll
call
imulb
inc
popf
mov
data16
pushf
std
xor
ljmp
dec
cmpsb
or
ja
jmp
leave
mov
lret
adc
dec
sbb
ljmp
and
pop
adc
enter
outsb
mov
outsb
xor
in
sbb
and
xchg
add
cmp
mov
rorl
add
jb,pn
imul
es
aaa
or
iret
pop
aam
cs
or
outsl
cmp
int
mov
mov
out
and
or
inc
sbb
jne
cld
stos
sbb
adc
push
lea
inc
ljmp
or
mov
xor
push
mov
daa
mov
mov
cli
sbb
in
fimull
inc
stos
cmc
push
sarb
pop
in
or
cmpsb
sub
mov
cwtl
fcomi
std
popa
fwait
dec
je
test
into
xchg
add
imul
xchg
jbe
popa
stos
es
mov
fsubrs
fisttps
jno
dec
push
jbe
mov
fmuls
repnz
mov
scas
cwtl
mov
js
je
push
inc
cmpsb
femms
and
fs
pop
cmpsb
lret
cmpsl
mov
add
cmp
push
les
insl
mov
jns
mov
cmp
shll
cmc
inc
popa
fnclex
sbb
leave
adc
jae
mov
inc
xlat
push
outsb
cld
xlat
scas
int
dec
out
iret
testb
fldenv
sbb
sbb
int
sbb
mov
repnz
cmp
or
das
push
lcall
jb
or
addr16
mov
xchg
pop
pop
aas
pop
pop
enter
lods
fnstcw
cwtl
mov
popf
sub
cmp
xor
pushf
rcll
andb
rolb
stc
sahf
arpl
inc
inc
daa
mov
mov
mov
imul
inc
leave
les
cmp
pop
leave
sbb
dec
sbb
xchg
mov
jno
std
jns
cwtl
repz
mov
push
mov
push
mov
rcl
sarl
xor
jmp
addr16
js
cmpsl
test
insl
decl
leave
sub
sbb
nop
stos
mov
rolb
jnp
xor
arpl
sub
test
mov
cmpsb
inc
jne
lret
lcall
jo
pop
mov
fwait
inc
fsub
mov
jns
js
jmp
sub
jmp
adc
push
sub
in
les
orl
adc
dec
popl
mov
ljmp
or
pop
or
push
insl
fs
inc
sbbl
cltd
insl
sbb
mov
loop
cs
inc
add
rcrl
mov
mov
ds
xor
mov
ds
in
sbb
mov
mov
les
push
shr
cltd
test
andb
out
pmullw
sub
cmpsl
fisttpl
dec
dec
aas
out
cmp
lods
jne
or
stos
loopne
pop
rcll
cmp
js
mov
call
andl
dec
lods
out
aam
add
push
je
arpl
lock
loop
jge
into
enter
mov
lock
outsl
ja
push
outsl
xchg
mov
dec
dec
arpl
and
dec
xor
lds
popf
pop
outsl
popa
xorl
out
add
pop
push
fidivl
call
xchg
xchg
cmpsb
imul
cmpl
out
xchg
jg
out
jl
in
mov
andl
dec
xchg
sahf
aad
jecxz
in
jge
pop
mov
pop
in
dec
ret
ja
inc
and
xchg
cltd
rclb
roll
mov
add
mov
xor
cmp
inc
popf
movsl
clc
out
inc
cld
sub
mov
inc
push
movsb
ja
push
nop
mov
repnz
jecxz
ljmp
psubb
movsl
mov
icebp
jbe
xchg
pop
callw
fwait
and
sbb
inc
jecxz
push
fs
insl
add
xor
fisttpl
mov
movsb
in
mov
js
sub
adc
xchg
pushf
loopne
sub
orl
cld
loope
fistps
sbb
dec
ss
mov
pop
inc
stos
shrl
lcall
lahf
pop
idivb
add
or
lret
sbb
jg
inc
and
cmp
fldt
mov
out
sbb
xchg
jmp
mov
fcompl
lea
xor
insb
mov
ds
idivl
orb
mov
nop
sbb
sub
or
scas
push
repz
xor
dec
push
jae
or
mov
imul
repz
mov
pushl
test
int
fisubl
test
lods
out
int
add
mov
imul
call
xchg
pop
xlat
imul
movsb
push
ret
sbb
cs
stos
xchg
ds
jb
mov
pop
pushf
adc
cmp
cmpsl
lret
stc
dec
inc
cmp
mov
inc
xor
cmc
and
sub
push
cmp
push
push
fcmove
clc
cmp
lahf
popa
lcall
call
pop
sbb
arpl
push
push
sbb
out
inc
mov
repz
cmpsl
jg
testb
jmp
popa
sub
cld
jno
push
mov
pushf
cmp
in
dec
ja
scas
pop
adc
int3
add
into
call
insl
pop
test
inc
ja
jne
outsl
fwait
push
test
lret
loop
int3
stos
and
sbb
ret
add
mov
fwait
pop
and
daa
inc
jno
cmp
add
xchg
psubw
jp
rolb
sub
jmp
xchg
rcl
xor
je
fs
and
pop
cltd
es
sbb
sbb
sub
push
mov
out
jp
push
pop
inc
enter
dec
sub
push
sysexit
lock
fld1
sub
and
or
inc
jbe
or
xchg
sbb
jb
das
and
es
xchg
xlat
das
adc
std
sbb
jge
xchg
and
les
lods
push
mov
push
cmpsl
gs
pop
pop
stos
xor
push
mov
rclb
mov
jnp
and
cs
movsb
adc
jg
lcall
xor
ss
push
dec
mov
dec
mov
fldcw
push
ret
dec
mov
mov
sbb
test
xchg
sub
xor
jg
stos
mov
dec
mov
or
xchg
xor
add
lret
push
subb
icebp
mov
dec
out
cmc
pushf
pop
and
dec
sbb
sbb
adcl
rcll
addr16
adc
mov
jmp
movsl
enter
repz
sbb
jp
shlb
call
sub
dec
push
dec
negl
xor
fsub
push
fsubl
pop
cwtl
or
repz
mov
insl
adc
push
xor
cld
fnstsw
or
addb
push
pop
gs
push
mov
xchg
adc
cmp
cmp
jge
shrl
std
add
in
fsubrl
rcll
rcrl
cmp
jge
clc
icebp
lea
es
xlat
jnp
mov
push
add
pop
jae
mov
and
test
divb
clc
dec
xchg
push
adc
sar
mov
pop
rcll
idivl
mov
xchg
xchg
outsl
inc
rcrl
jmp
and
mov
sbb
xor
push
adc
sub
loop
push
inc
sbb
jae
mov
mov
cmpsl
clc
xor
cmc
addb
jmp
push
cmp
imul
aaa
stos
cwtl
ljmp
loopne
fldl
daa
movsl
mov
sarb
int
mov
dec
pop
imul
xor
pop
pop
sbb
shr
jno
lahf
fstps
push
xchg
jmp
insb
ljmp
call
daa
jge
jno
cmp
mov
adc
pop
aas
test
cmp
inc
ljmp
scas
dec
dec
cmp
add
enter
xor
cmp
adc
in
test
in
lods
jg
test
or
xchg
sahf
and
xchg
adc
sub
in
pop
jg
and
loopne
mov
mov
lcall
sbb
pop
pop
dec
sub
mov
ret
xchg
in
mov
sarb
leave
push
xchg
or
mov
adc
rolb
and
ret
lcall
adc
lahf
or
call
inc
dec
push
jno
pop
int3
inc
rorb
adc
push
pushf
mov
call
xchg
stos
push
lret
push
clc
in
push
pxor
clc
repz
setns
jno
xchg
stos
sub
gs
das
inc
dec
mov
aam
call
xor
out
nop
pop
adc
jecxz
add
es
sub
lret
fadds
sahf
into
adc
inc
dec
jbe
test
mov
fildl
adc
push
arpl
fwait
push
icebp
movsl
cmp
test
mov
push
pop
enter
daa
adc
pop
sbb
pop
or
cmp
shl
movsl
push
add
mov
cld
xchg
iret
inc
adc
inc
pop
mov
cmp
lods
or
lahf
test
or
shll
pextrw
pop
sub
pop
cmp
jno
and
sbb
bound
lods
xor
lea
adc
jb
stc
pop
sarb
rcrl
xchg
into
add
inc
repz
mov
shr
imul
ret
loop
aas
jge
mov
arpl
push
dec
adc
jge
in
ja
cmp
cmpsl
sahf
aaa
ficomps
not
push
cmp
or
es
pop
sbb
and
push
or
hlt
outsb
xor
gs
xor
jmp
push
xchg
push
jns
adc
imul
add
jbe
je
cmp
xchg
adc
sahf
clc
inc
lret
cmpb
lret
das
push
pop
cs
xchg
ret
xchg
push
shlb
lock
pop
mov
test
shll
adc
adc
cmpsl
pop
enter
add
cmc
fxtract
or
xlat
fbstp
xor
push
or
lcall
xor
jp
jne
cmp
fs
pop
inc
lods
lods
push
std
fimuls
mov
arpl
out
mov
add
and
mov
test
aaa
mov
jo
cmp
xor
mov
stos
std
cmpsb
add
mov
push
jmp
repz
sbb
xchg
xchg
insl
std
pushf
fs
in
xchg
ss
mov
xchg
or
shr
test
cmpsb
jg
add
clc
in
inc
stos
pushf
sbb
es
adc
aas
sti
cmp
sub
and
add
rolb
fmuls
xor
sbb
leave
mov
sub
and
mov
push
out
loopne
or
sub
dec
stos
in
or
ds
or
jno
call
roll
adc
js
or
popa
adc
cmp
scas
push
add
stos
adc
out
mov
mov
outsb
add
xchg
add
cmp
loopne
jnp
cmpsb
nop
outsb
cli
jae
mov
negl
imul
data16
mov
mov
pop
std
jecxz
pop
mov
out
jl
scas
dec
mov
sbb
add
push
xchg
sbb
mov
fsubrs
lret
mov
into
fdiv
pop
sarl
mov
pop
dec
das
xchg
test
shlb
and
xor
nop
jmp
mov
add
fmuls
lret
dec
mov
xlat
lods
enter
or
adc
daa
jmp
fmul
ret
out
out
push
push
push
and
xchg
imul
push
int
pop
ds
inc
popf
pop
insl
push
xchg
mov
bnd
popf
clc
mov
sahf
jecxz
cli
cli
or
fdivl
clc
pusha
pop
ja
fadd
jl
mov
jbe
or
mov
mov
xchg
cmc
lahf
rcrb
add
repnz
or
pusha
cmpb
in
fiadds
mov
dec
and
sub
add
cmp
loope
sbb
sti
pop
int3
mov
pop
add
add
int3
jmp
imul
mov
shll
inc
jae
lea
popa
data16
nop
pop
adc
ja
mov
jmp
sbb
add
push
pop
sti
sub
xor
adc
das
sbb
je
jne,pt
push
inc
dec
fstpt
cwtl
and
mov
ss
nop
cmc
sub
jbe
iret
jecxz
lahf
ljmp
or
sbb
jns
jnp
clc
jmp
insb
adc
out
and
enter
jae
dec
dec
lods
mov
insb
add
std
cmp
push
jne
pop
popa
insb
sti
sbb
divl
sub
jne
ret
std
push
sbb
js
pop
call
or
cmp
sbb
lea
adc
icebp
jge
mov
loop
sahf
adc
decb
xchg
jp
test
cmp
push
dec
mov
or
mov
push
lret
dec
adc
orb
mov
fcomps
sar
push
dec
ret
lods
lret
pop
cmp
mov
stos
cmp
mov
jo
pop
cmp
or
imul
orb
add
xor
inc
mov
in
mov
cmpsb
loopne,pn
test
mov
and
cmpsb
pushf
adc
pop
call
shl
inc
inc
inc
inc
push
push
inc
repz
push
retw
mov
leave
jle
jle
sub
cmp
push
mov
sbb
dec
jecxz
hlt
cmp
orl
cmp
jne
pusha
fdivs
xor
ficompl
or
mov
std
mov
jge
or
xchg
inc
popa
enter
insl
and
inc
aad
data16
mov
bound
xor
addr16
repnz
sarl
mov
inc
lods
mov
je
sbb
inc
xor
insb
js
cmpsb
int3
cmp
mov
imul
xchg
lea
push
fdivrs
mov
imul
add
jns
mov
sbb
ljmp
sub
xor
and
je
sub
sub
mov
mov
test
jno
cmp
mov
cmpsl
dec
push
repz
or
jne
xor
int
das
mov
js
sbb
xchg
sub
loop
ljmp
push
imul
cmp
test
rep
scas
push
sbb
mov
pushf
imulb
mov
sahf
hlt
rcr
divl
fxch
adc
int
aam
jb
jno
cwtl
pop
aas
cmp
lock
push
inc
clc
cli
daa
addb
mov
mov
ja
arpl
cwtl
adc
enter
cwtl
or
add
xchg
jno
add
clc
cmp
jnp,pt
fcoms
into
ljmp
loopne
scas
testb
mov
dec
enter
jg
popa
dec
mov
jns
or
fcoml
inc
inc
hlt
jge
adc
push
adc
xchg
and
mov
xlat
rcl
jle
rclb
jl
dec
lahf
jmp
xchg
push
cmp
add
inc
lods
sub
mov
movsl
in
xor
inc
shrl
push
outsl
lods
mov
xchg
arpl
cmp
icebp
js
int
pop
out
les
aaa
fildll
dec
adc
mov
inc
stos
cmp
clc
lea
and
movsb
stc
xchg
in
pop
mov
mov
add
inc
cltd
test
mov
or
xchg
fwait
stc
dec
lret
rcrl
xchg
pop
sub
call
pop
xor
or
mov
in
xor
lock
sahf
xchg
icebp
lcall
push
jae
mov
aam
or
dec
pop
pusha
stc
sub
and
mov
call
outsl
adc
mov
bnd
aaa
adc
scas
pusha
inc
push
lret
sbb
inc
sbb
xor
subb
or
shlb
dec
or
mov
jge
lret
imul
sbb
xor
cmpsb
jb
ds
inc
inc
cmc
pusha
sahf
push
movsl
sub
pusha
pop
mov
adc
push
movsb
jg
out
imul
cs
jp
dec
mov
out
pop
pop
push
mov
hlt
clc
pop
mov
loop
enter
test
inc
mov
jecxz
loope
dec
dec
fwait
cmp
or
ds
mov
loopne
je
mov
adc
ss
data16
test
dec
mov
out
in
mov
jns
mov
pushf
andl
mov
jbe
add
out
xor
fsubl
cmp
enter
in
lock
pop
loopne
mov
and
mov
maxps
ret
or
shlb
out
sbb
das
loop
jno
out
out
iret
int
sub
pop
daa
add
and
mov
pop
shll
imul
test
adc
dec
inc
mov
popa
xlat
imul
push
dec
push
pop
lahf
push
iret
sarl
cmp
lcall
jmp
es
ficoml
testl
fldenv
cmpsb
jbe
sbb
jmp
adc
jo
aad
pop
sub
xor
clc
push
sbb
ljmp
inc
lock
into
loop
sbb
adc
movsb
push
inc
in
push
cmp
ret
dec
xchg
mov
icebp
sbb
gs
stc
sbb
ret
into
pop
push
xchg
fcompl
rep
pop
xchg
and
loop
rcrb
mov
shl
pop
push
mov
cmpsb
and
sub
mov
call
xchg
ds
invd
push
xchg
xor
adc
ljmp
int
imul
cmp
lds
fcmovne
push
mov
add
inc
mov
pusha
mov
lock
jp
sbb
ret
insl
pop
mov
aam
pop
test
adc
inc
fidivrl
xchg
imul
cwtl
pop
cmpsl
jecxz
dec
xor
add
jle
push
inc
call
sbb
xor
enter
nop
mov
pop
pusha
orb
mul
pop
xchg
mov
mov
hlt
sbb
in
das
and
xorl
and
cmpsb
pop
sbb
cld
add
cmp
cs
cs
mov
sub
jecxz
cs
mov
das
sbb
push
nop
jmp
fadds
outsl
sti
mov
push
pop
sub
or
int
pop
sub
xor
clc
sbb
clc
pop
mov
cmpsb
fwait
fwait
sub
sbb
mov
aad
push
js
clc
loop
pop
mov
cmp
mov
mov
cli
push
xchg
sbb
xchg
xlat
push
xchg
xchg
xchg
add
or
pop
inc
push
and
shll
xor
icebp
pop
dec
pop
out
and
stos
dec
loopne
fs
loop
dec
push
icebp
icebp
lahf
jecxz
inc
dec
mov
xor
aaa
adc
arpl
push
sub
inc
rcrb
scas
mov
and
sarb
mov
test
ljmp
mov
inc
fildl
mov
mov
cld
mov
and
out
ja
sbb
aad
sbb
inc
out
mov
or
adc
rcrb
pushf
addr16
rol
jo
add
xor
push
rclb
mov
add
mov
fs
adc
leave
sbb
inc
pop
ret
cs
xorb
mov
js
xor
mov
inc
loope
outsb
mov
adc
jnp
std
adc
fadds
jge
pop
data16
sarb
imul
jne
sbb
mov
xchg
xchg
das
sbb
das
push
in
or
pop
test
jl
pusha
lcall
dec
xlat
pop
data16
roll
leave
xchg
pop
jp
xchg
punpckldq
shl
pop
stos
or
mov
push
xor
out
fsubrs
dec
shlb
pop
mov
sub
decl
pop
dec
push
mov
aad
push
fs
dec
jmp
mov
pop
or
inc
mov
jecxz
adcl
or
insl
insb
cmp
ret
push
dec
mov
push
adc
pop
ja
add
clc
cmp
cmc
jmp
orl
ret
lock
mov
xor
scas
or
lcall
jae
clc
mov
data16
loop
inc
adc
test
mov
push
hlt
dec
mov
pushf
stos
iret
sbb
lds
push
sub
and
sub
sbb
sbbl
ss
pop
jno
fcmove
sub
adc
jae
push
pop
sub
mov
mov
dec
jmp
repz
fistl
dec
ljmp
jo
dec
xchg
leave
shrl
sub
aaa
mul
lahf
sub
dec
and
adc
xchg
sarb
pop
stos
sub
jnp
mov
mov
aam
add
popa
out
jg
out
and
sbb
push
cltd
cltd
adc
jno
lds
fcmovnb
push
test
add
xchg
jns
lret
out
das
in
mov
mov
and
stc
jp
sti
incb
mov
push
int
sub
cmp
clc
xor
or
lahf
lods
inc
in
and
pop
and
inc
and
imul
out
out
es
inc
lock
insb
fcomi
popf
scas
pop
sub
sbb
adc
pop
jg
fdivr
xor
mov
sub
leave
push
add
outsb
and
test
or
push
and
push
xchg
and
out
add
call
cmp
test
xchg
add
nop
sbb
adc
shll
pusha
in
jnp
sti
das
fs
aas
pop
xchg
test
and
mov
mov
cmp
dec
mov
mov
daa
mov
xor
popa
pushf
hlt
aad
adc
ljmp
nop
cmp
push
test
mov
sti
mov
push
xor
out
push
andb
ss
aas
and
mov
lds
jmp
sub
sbb
sbb
pop
push
or
mov
sahf
lret
sbb
jno
dec
bound
rorl
mulb
or
push
outsb
out
fnstenv
dec
out
mov
or
scas
mov
jae
cs
and
es
push
xorb
out
pop
push
aam
mov
roll
mov
mov
into
push
pop
or
add
lret
or
xchg
mov
adc
jle
cmc
mov
in
push
or
adc
fsubl
fldt
mov
inc
add
sub
imul
xor
pop
sbb
mov
loopne
in
jae
shll
shrl
imul
push
int3
jmp
add
in
push
fs
inc
in
push
fisubl
adc
xor
add
out
mov
or
loopne
sbb
sarl
mov
cmp
inc
jne
xchg
xchg
jbe
xchg
jo
addr16
in
sub
mov
jp
pop
lahf
subl
insl
lret
in
push
add
mov
test
jmp
adc
inc
gs
lret
cld
in
lea
sbb
adc
xor
jnp
filds
insl
pop
lods
jb
call
mov
and
fsubrs
sub
fisubrs
push
loopne
andb
in
movsl
cmp
dec
cmp
insl
xor
cmp
in
mov
std
cmpsl
int3
cmpsl
pop
sub
loopw
pushf
xchg
testl
mov
call
lret
hlt
xor
es
popa
ret
mov
popa
icebp
or
inc
jnp
ret
iret
rorl
xor
jbe
stos
mov
sub
in
cmc
inc
mov
orl
sub
add
lcall
xchg
push
imul
into
stc
jg
rclb
jle
gs
jb
sti
push
stc
lea
cli
push
adc
into
movsl
mov
xchg
push
popf
sar
dec
adc
fwait
cmp
fsubs
pop
inc
jl
iret
inc
imul
pop
sahf
xor
push
add
test
inc
mul
loope
fwait
xor
out
repnz
mov
lcall
mov
jns
jge
push
rorb
mov
movsl
jle
jnp
push
cmp
lods
inc
xor
lahf
xchg
and
jg
scas
sub
jecxz
sub
mov
addr16
push
leave
and
fisubs
jno
adc
and
popl
xchg
adc
and
xlat
mull
lret
jne
cld
out
cmp
pop
mov
inc
xchg
mov
inc
movsl
mov
jmp
dec
jbe
fcomip
xchg
xor
mov
push
mov
sub
mov
negl
jb
add
test
xlat
pop
leave
pop
das
and
mov
nop
std
xor
test
jnp
pop
std
xchg
push
jno
es
xchg
in
mov
fnstsw
add
lock
mov
or
mov
push
aaa
cmpsb
dec
daa
sbb
in
in
lods
sti
flds
push
fistl
mov
push
orb
in
xor
or
lcall
je
leave
sbb
or
subb
iret
test
jecxz
fldl
cmp
or
adc
mov
xchg
jns
mov
push
insb
mov
icebp
fs
jb
insl
pop
movsb
dec
mulb
xchg
loop
ljmp
out
int3
fwait
int
movsb
pop
stos
xchg
loop
mov
and
iret
clc
shrl
xchg
lcall
adcb
push
jns
sub
add
loopne
cmp
cltd
or
cmpsl
add
lock
sbb
jmp
arpl
mov
xor
mov
xorb
clc
fisubrl
add
dec
sub
xchg
jno
cld
iret
adc
int3
and
outsl
mov
push
ja
insb
cmc
sbb
cmpsl
jb
xchg
icebp
movsb
leave
movsb
imul
je
cli
or
add
or
jl
lea
cmpsb
jb
mov
les
cltd
mov
cmc
call
imul
add
cs
js
jge
mov
mov
mov
icebp
in
pop
jb
sahf
test
nop
or
pop
jp
cmp
loope
push
mov
mov
aam
mov
rolb
movups
dec
cmp
outsl
out
sahf
popf
xchg
dec
loope
push
add
mov
jle
mov
inc
or
adc
cmp
xor
mov
lock
repz
subb
cwtl
data16
ret
fiaddl
test
scas
mov
add
xlat
xchg
lds
add
iret
imul
sub
mov
arpl
dec
stos
je
dec
fidivrl
sbbb
ljmp
stc
mov
es
lcall
jno
rolb
or
mov
shll
insl
adc
add
pop
imull
roll
mov
sbb
xor
add
or
les
insl
rol
mov
scas
jns
std
loopne
xor
xchg
in
repnz
push
inc
std
sub
adc
inc
jnp
or
add
popf
push
push
call
pushf
js
xchg
lcall
xchg
xor
out
sub
mov
xchg
rclb
push
inc
std
out
jne
lods
shl
cmp
pushf
ret
dec
pop
lods
sahf
outsl
add
mov
imul
fwait
stos
repz
xchg
lds
adcl
movsb
je
test
imul
arpl
shll
mov
sub
mov
sti
movsl
push
in
sbb
mov
jnp
aam
xchg
inc
or
inc
int
dec
adc
mov
repz
push
lods
inc
dec
sbbl
ss
lahf
cmp
popf
repnz
movsl
fstl
popf
jmp
inc
cs
fwait
or
sub
push
or
ljmp
mov
mov
add
cli
jnp
pop
call
lock
and
cmp
mov
adc
push
test
push
mov
aam
xchg
stc
scas
test
scas
test
jae
sub
mov
idivb
dec
push
ret
sub
inc
dec
xchg
mov
push
js
dec
or
or
mov
outsb
testb
fwait
es
cmp
xchg
adc
cmpsb
rcrb
push
sahf
mov
test
mov
hlt
aas
ret
ja
leave
xor
in
add
cld
sub
test
jno,pt
xchg
xchg
stc
or
mov
jno
lahf
lcall
ss
fldcw
test
push
add
xor
es
xchg
push
xor
xor
loopne
mov
cmp
ds
aad
scas
cmc
shld
pop
xchg
pop
cmc
leave
sbbl
inc
mov
xor
enter
jge
lret
pop
mov
add
sbb
xchg
push
add
sub
lcall
pushf
mov
gs
test
int3
cmp
push
js
gs
xor
jbe
shl
sub
loopne
pop
clc
push
int3
and
jbe
movsl
pop
mov
test
dec
test
sub
les
dec
les
dec
jmp
pop
sub
popf
inc
jne
add
mov
xchg
loope
push
pop
sbb
xor
mov
push
sub
inc
jb
cld
test
cmpsl
jnp
push
and
pop
xchg
lahf
push
shrb
jnp
leave
cmpl
js
push
dec
loope
lret
dec
cmp
cmpsl
adcl
test
movsb
sub
pop
or
jecxz
loop
mov
lods
jp
int3
xchg
xchg
add
dec
out
pushf
sub
xor
shll
or
lret
cmc
scas
jge
xor
jmp
scas
jmp
leave
mov
lcall
lea
in
dec
psrld
ljmp
cmpsl
push
je
hlt
pop
pop
setae
orl
enter
gs
jo
or
int3
pop
jae
std
xchg
and
jmp
pop
ret
adc
inc
jp
cmpsl
and
xchg
dec
pusha
dec
outsl
inc
jns
pop
xchg
lret
mov
data16
into
outsl
and
or
ds
pop
pop
fbld
orb
or
stc
dec
idivl
arpl
mov
loopne
pop
insb
push
push
dec
and
xchg
xor
repnz
lret
jmp
lret
cmp
adc
cmp
cmp
sbb
pop
mulb
pop
icebp
xchg
jl
dec
mov
cmpsl
fldl
mov
mov
pop
mov
jmp
cmp
popf
push
cmp
lcall
addr16
sbb
inc
lret
cmp
loope
in
dec
into
cs
lock
das
scas
scas
pop
dec
sub
aaa
push
data16
insl
cmp
mov
mov
arpl
xor
cmp
dec
xchg
lock
push
lahf
int3
int3
insb
xor
adc
icebp
jl
addr16
aam
in
sbb
sub
fisubrs
test
adc
sti
lret
repnz
mov
jnp
push
lods
loope
lcall
ds
fbstp
fisubs
lret
lret
ja
sti
xchg
fldt
ret
mov
dec
adc
outsb
les
mov
push
xchg
pop
cli
cmp
jno
loope
arpl
ja
nop
mov
aad
call
sub
mov
xor
loopne
xor
sub
pop
pop
pop
mov
addb
loopne
mulb
pop
mov
out
or
ds
shrl
cmpsb
mov
cltd
sub
xor
adc
adc
jno
in
push
push
bound
add
nop
scas
scas
test
test
insl
mov
movsl
movsl
loope,pt
sti
cli
cwtl
js
mov
mov
movsb
push
sbb
xor
stos
push
pop
stc
xor
ja
ja
push
outsb
jne
jge
popl
ss
or
aad
add
cwtl
push
scas
fabs
dec
inc
ret
popa
cmp
adc
in
dec
pop
dec
xchg
les
cmp
popw
movsb
mov
imul
jle
out
inc
mov
dec
pop
je
and
lds
inc
dec
arpl
add
add
shlb
jl
in
add
lret
xchg
pop
push
or
rolb
inc
hlt
xchg
ret
mov
enter
imul
sub
std
iret
mov
or
sub
lea
jp
mov
test
daa
push
inc
xchg
adc
fldlg2
push
cmpb
dec
in
inc
add
dec
add
rep
adcl
dec
adc
xchg
out
and
adc
inc
mov
push
daa
inc
fldt
pushw
mov
mov
in
inc
mov
sbb
or
leave
stos
jbe
xchg
popa
xchg
sub
mov
xor
cwtl
iret
push
cmpl
jge
and
enter
xchg
dec
fwait
rclb
lcall
fiadds
mov
inc
jge
out
es
push
jge
mov
dec
popa
divl
mov
jl
push
stc
insl
sti
das
and
cmp
repnz
sbb
sbb
lahf
sub
lret
cmp
scas
lea
sbb
lret
cld
pop
test
int3
xor
in
xor
cmp
je
inc
lahf
add
xchg
sub
lods
orl
sbb
mov
mov
push
out
cmc
xchg
andl
int
jbe
mov
adc
jl
test
cmpsl
ljmp
mov
dec
sbb
push
call
push
gs
lds
aad
dec
adc
jle
and
mov
shlb
ss
fisttps
je
sub
aam
mov
jl
scas
sbb
pop
gs
push
jge
push
in
pop
outsb
mov
iret
xchg
addr16
test
cld
pop
lahf
in
add
jge
cmp
inc
mov
pop
out
enter
mov
leave
pop
cmp
xchg
sti
sbb
in
sti
add
lea
arpl
dec
dec
lret
inc
ret
ret
adc
ret
pop
std
cmp
pop
iret
sarb
pop
aaa
pop
shl
cmp
cmp
mov
mov
iret
call
fnop
xchg
pop
sbb
jno
testl
shl
mov
sbbb
mov
loopne
xor
lahf
inc
mov
mov
push
out
out
mov
fstl
jle
push
or
leave
movsl
add
push
jmp
jae
xor
and
push
dec
fcoms
mov
cmpl
mov
pop
or
lahf
dec
out
dec
in
push
cld
aaa
pushl
cmp
movsl
test
fsubrl
xor
arpl
sub
lea
add
and
push
dec
pop
test
mov
mov
aam
jge
clc
cs
mov
cmp
jne
cltd
adc
sbb
xor
inc
xor
fidivl
jl
js
lock
insl
sti
xor
adc
nop
sbb
inc
adc
push
xor
jno
cmp
mov
mov
in
in
jg
mov
cltd
jno
push
loope
add
stos
cld
aam
loop
mov
xchg
push
pop
pop
mov
mov
loopne
mov
ljmp
insb
daa
in
mov
cmp
movsl
adc
fmulp
arpl
in
jb
test
jp
insb
pop
scas
clc
add
inc
adc
out
pop
out
mov
mov
insb
es
in
jbe
daa
rclb
sahf
test
xor
sbb
and
arpl
jae
sahf
int
mov
std
fs
mov
push
nop
xchg
ss
icebp
int
cmp
mov
mov
jb
and
mov
pop
push
leave
cmp
lods
call
mov
not
pop
in
push
fistpl
clc
pop
in
nop
fisttps
shlb
xchg
fimull
sbb
sbbl
scas
ljmp
scas
pop
mov
sbb
sbb
lret
in
out
jnp
xchg
mov
inc
roll
push
mov
adc
loope
out
int
adc
xchg
cmp
imul
cli
lret
add
imul
cld
std
adc
push
loope
inc
out
int3
imul
fs
pop
mov
jp
jne
xchg
mov
or
iret
pop
xor
jl
inc
mov
mov
insl
shl
mov
rclb
sub
dec
jmp
ss
das
xor
pusha
push
jle
cli
test
push
mov
into
mov
xchg
gs
outsl
ss
test
rolb
add
and
adc
test
inc
inc
jle
scas
pop
mov
hlt
aam
sbb
adc
or
fs
and
cmp
es
add
ss
ret
aaa
adc
pop
pop
clc
mov
fs
roll
dec
mov
out
in
fwait
pop
push
mov
or
lahf
clc
rorb
repz
ja
mov
cld
fistps
sub
add
test
sarb
iret
jg
leave
xor
dec
mov
repz
lea
lahf
mov
rclb
mov
in
jae
insb
ljmp
pop
inc
fs
xor
out
pop
pop
orl
fwait
lods
lea
data16
sub
test
das
cmp
imul
jno
jecxz
shlb
jl
xchg
jg
inc
adc
and
pusha
mov
jl
jmp
inc
push
ljmp
popa
les
rcll
push
xor
lret
ds
add
or
xor
fildll
jno
xor
mov
adc
aaa
into
cltd
jl
jmp
xor
insl
sbbl
js
js
sbb
mov
adc
rolb
xor
test
fsubp
dec
data16
jle
ror
loopne
add
aas
loope
push
mov
sbb
lret
cmp
inc
dec
pop
xor
push
xchg
cmp
push
or
inc
add
pop
orl
adc
cld
fldl
mov
or
sbb
jne
enter
pop
or
in
jmp
and
or
mov
jne
fisubs
mov
xlat
sbb
add
ja
dec
mov
mov
mov
cmp
sub
jmp
cmpb
sbb
dec
xchg
xchg
leave
outsl
orb
jnp
shl
jne
outsb
sub
mov
and
sbb
shll
int3
stos
hlt
cli
cmp
sub
push
push
fnstsw
push
movsl
aas
cmpb
std
lods
arpl
pop
pop
jmp
adc
mov
mov
jmp
mov
faddp
cmpsl
gs
iret
fnstenv
mov
arpl
icebp
cltd
lods
out
fs
jmp
jo
sub
out
iret
dec
or
or
lahf
int3
aas
sbb
adc
fucomip
ljmp
and
mov
inc
inc
pop
inc
push
stos
insl
insl
mov
mov
push
mov
pop
aad
test
xchg
jae
lahf
adc
outsl
fistpll
test
or
adc
adc
jnp
jno
stos
orl
mov
movsl
push
cmpsb
fdivrs
repz
int3
int3
lods
popa
mov
aaa
cltd
pop
sub
mov
mov
sub
sti
inc
pop
rcr
test
clc
repz
pop
cli
xchg
xchg
call
fcoml
jmp
and
mov
daa
or
rclb
inc
add
sbb
inc
mov
shrb
xor
test
jno
pop
cltd
pushf
mov
push
push
jns
mov
mov
ljmp
xor
pop
aad
test
jnp
jl
ret
inc
xor
bound
jle
loopne
nop
lock
movntps
add
popf
aaa
loopne
pop
xlat
jae
cmpsb
cmp
lcall
mov
imul
sub
and
out
fistpl
rcll
mov
enter
test
cmp
mov
test
dec
pushf
mov
push
aas
xor
add
push
mov
daa
inc
adc
das
pop
dec
mov
jl
mov
sahf
xor
fnstcw
pusha
mov
repz
pop
stc
xchg
mov
sub
or
sub
push
mov
movsb
mov
dec
sbb
clc
and
test
push
jne
mov
xchg
sar
add
jmp
push
mov
mov
cli
xchg
xor
mov
scas
mov
fcomps
push
mov
or
mov
out
jg
xor
mov
sahf
dec
sbb
pop
mov
sbb
push
cmp
cmp
inc
fsubrp
mov
adc
inc
xor
rcll
xor
mov
push
or
mov
xchg
mov
mov
stc
push
jg
xchg
test
sub
bound
rep
icebp
and
je
push
mov
lahf
jo
push
fwait
out
push
pop
xor
mov
or
shll
xchg
and
cwtl
lcall
sbb
pop
mov
cmp
movsl
or
cld
test
lret
mov
adc
rcl
xor
test
lds
jnp
ret
and
aaa
mov
push
sbb
test
outsb
sub
fstps
and
std
arpl
rcll
ja
mov
or
adcl
cli
jno
and
xor
push
pop
aaa
mov
mov
mov
pop
or
lret
and
icebp
cmpb
movsb
orb
mov
mov
jle
mov
ljmp
les
fmuls
cmp
and
push
xchg
mov
add
or
push
sbb
jbe
push
call
sbb
pop
dec
fisttps
popf
nop
into
jmp
in
out
jo
or
pop
loope
lret
mov
out
sti
lds
popa
sbb
outsb
jge
add
repnz
pop
pop
push
iret
jae
rolb
sub
out
ljmp
mov
add
add
mov
sbb
inc
arpl
lods
loop
imul
enter
inc
aas
inc
and
mov
cmp
stos
sub
lds
adc
dec
lods
jns
push
pop
sbb
sub
movsl
imul
out
mov
scas
hlt
jmp
aam
push
push
lods
xchg
test
fstpl
scas
sbb
rolb
adc
testb
inc
mov
xor
ja
dec
jae
aaa
pop
in
push
ret
loope
sub
inc
pusha
mov
jle
test
jb
dec
cmp
in
dec
mov
fwait
or
fs
mov
jp
mov
movsl
ds
pop
jns
or
adc
jns,pt
jnp
or
xor
fcmovb
fs
sbb
jae
shr
xchg
jge
repnz
and
sbb
call
mov
jbe
mov
enter
bound
inc
jge
cmpsb
and
mov
and
movsb
sub
push
push
dec
push
insb
iret
jbe
xchg
sbb
loop
fs
pop
mov
mov
cmp
addr16
cmp
adc
cmpsb
add
dec
sbb
mov
ljmp
fldt
arpl
cld
outsl
adc
sti
sbbb
jb
out
or
fidivl
aam
imul
fwait
test
xor
shll
int3
jo
add
mov
mov
mov
jle
scas
xor
out
jg
clc
insb
xchg
xchg
jg
lds
movsl
js
jle
fwait
in
inc
movsb
outsl
inc
mov
fnstcw
dec
test
xor
inc
add
stc
sbb
mov
data16
int3
cmp
icebp
xchg
scas
sbb
cld
lods
lock
sub
xor
test
push
jno
mov
pop
adc
mov
jmp
movsl
pop
inc
dec
xchg
jle
xchg
push
cli
jb
sub
xor
add
jge
cmp
adc
cmp
pop
stos
cmp
imul
mov
xchg
dec
rcr
dec
jle
mov
inc
sarb
fstpt
fisttps
mov
adc
push
out
mov
cwtl
movb
xor
mov
ja
movsl
mov
mov
leave
out
sbb
cmpsb
pop
mov
push
mov
add
pop
jge
mov
pushf
nop
or
outsl
add
push
push
std
lock
push
lret
mov
or
inc
xor
sub
hlt
mov
daa
out
inc
xor
xchg
ret
enter
test
pop
daa
cld
push
inc
testb
scas
cmp
inc
aad
xlat
stos
out
mov
arpl
cwtl
xchg
scas
or
inc
movsb
aam
in
sbb
xor
arpl
jo
int
or
rcrb
int
hlt
out
cli
pusha
sub
inc
dec
nop
cli
stos
jo
rorl
outsl
dec
push
cmpsb
lea
loop
insl
bound
int
call
addr16
inc
lods
mov
je
shr
push
dec
cld
outsl
orl
lahf
je
inc
int3
aam
dec
adc
jmp
and
mov
adc
and
sahf
jle
loop
mov
cmpsb
or
stos
adc
daa
mov
cmc
and
xor
lods
sbb
dec
cmc
inc
ret
cmp
pop
pop
lods
ja
xchg
cmpb
scas
popf
jno
mov
jecxz
rcll
xor
mov
sarb
cwtl
les
add
inc
jbe
insb
jae
dec
jo
rcrb
repnz
mov
shrb
or
fdivr
std
mov
adc
xor
jl
cld
daa
push
ss
ret
inc
pop
popa
roll
jp
lods
pop
inc
popf
push
out
or
mov
dec
lret
pop
filds
test
fisttpl
push
dec
les
popa
fwait
add
repnz
dec
movsl
fiadds
sbb
sub
push
mov
pop
cmp
pop
imul
pop
mov
xor
jnp
pop
cs
loope
stc
add
add
adc
enter
mov
repnz
arpl
jge
add
imull
insl
add
push
dec
jle
sbb
rorl
mov
and
in
clc
add
add
inc
ret
scas
jecxz
test
adc
ja
xchg
andl
and
sub
orl
orb
scas
jno
or
pusha
testl
int3
imul
or
cltd
movsb
rep
sub
shll
lods
mov
xchg
leave
push
loope
outsb
bound
xchg
lods
adcl
fmuls
sahf
sub
add
cmp
das
or
jb
xor
dec
nop
test
fld
cmpsl
adcb
lods
lea
inc
sbb
mov
lods
data16
out
in
les
sub
out
mov
cwtl
or
inc
and
repnz
mov
pop
adc
jae
stos
jl
mov
xor
bound
outsl
xchg
or
or
mov
cmp
jle
push
inc
push
loopne
cmp
imul
pop
jecxz
aad
pusha
or
or
out
imul
jmp
loopne
mov
cltd
js
stos
mov
jbe
shrb
loopne
js
sbb
arpl
daa
add
mov
xchg
fcmovnu
cmp
shrl
xor
aaa
rcrl
jmp
pop
push
call
mov
sbb
rol
aam
data16
push
xchg
and
and
jae
repz
test
jmp
mov
dec
sahf
cwtl
jmp
mov
add
cmp
fisttpll
pop
dec
push
lods
scas
aad
add
and
lea
or
xor
push
loop
fwait
pop
cmpsb
shrb
jle
cmovbe
mov
xchg
stos
lds
aaa
xchg
push
pop
sbbl
pop
xlat
mov
mov
popa
and
dec
mov
insb
xchg
mov
xchg
das
leave
and
inc
iret
jnp
pop
aam
adc
sti
dec
negl
push
jns
sti
and
ja
mov
push
stos
xor
cmpsl
push
dec
dec
lahf
push
shll
cmp
inc
mov
lds
mov
mov
cmp
jb
jbe
outsb
jno
mov
cmc
xchg
stos
fistl
push
or
pusha
psllq
adc
cmp
addl
mov
inc
xchg
stos
mov
mov
stos
pop
jnp
xor
roll
sbb
scas
js
outsb
cli
push
dec
or
stc
xchg
inc
mov
mov
mov
sti
xchg
hlt
ljmp
pop
xchg
and
cmp
cmp
mov
and
cld
and
jns
mov
jge
mov
adc
push
xor
stos
jae
adc
icebp
aad
cwtl
lahf
loopne
jnp
addl
mulb
or
mov
in
out
inc
adc
jl
xor
std
nop
sarb
call
add
jae
jae
je
imul
mov
and
mov
ds
je
adc
add
pushf
addr16
or
mov
nop
test
mov
and
sub
pop
imul
fwait
in
ss
inc
shrl
push
jp
ret
cmp
inc
and
inc
push
mov
jb
ror
mov
dec
inc
stc
lret
popf
cltd
popa
cltd
pop
xchg
mov
daa
xchg
cmp
into
push
pop
imul
jne
xor
adc
and
in
movswl
testl
mov
stc
fcmove
dec
loop
mov
xchg
fdivp
iret
or
sub
iret
dec
into
push
push
jns
sub
inc
sbb
dec
aaa
push
add
outsb
mov
out
mov
push
mov
std
sbb
jne
cmc
mov
aam
int
cmpl
xchg
imul
jnp
in
loop
jns
popf
mov
jae
leave
std
iret
orb
call
push
add
repnz
pushf
pop
xchg
fs
mov
je
scas
decb
cmp
arpl
cmpsl
movsb
jl
sub
mov
jp
inc
adc
into
repz
js
in
arpl
sub
cmp
mov
in
inc
lret
mov
xor
addr16
lret
cmc
rcrl
sbb
cmpsl
je
cmp
push
pop
xchg
push
fmull
push
rcl
inc
push
push
push
test
mov
jle
sbb
cmp
xchg
mov
pop
xchg
ds
mov
dec
mov
dec
cmp
add
insb
push
leave
div
nop
jne
push
mov
outsl
cld
adc
adc
or
jno
cmp
loopne
fsubs
pop
pushf
insl
sub
add
pop
out
adc
push
lret
and
dec
je
lret
pop
and
pop
adc
rcrb
test
pop
jl,pn
add
jle
push
adc
cmp
dec
clc
nop
lods
adc
mov
ret
out
cmpsl
add
xchg
outsl
dec
cmp
jbe
ss
fcomip
fistpll
in
out
or
adc
popf
popf
shll
inc
mov
sbb
mov
inc
sub
pushf
int3
mov
xchg
cmp
jb
adc
rolb
adc
popf
insl
movsb
nop
enter
aaa
into
aam
adc
mov
and
mov
loope
js
pop
push
int3
flds
mov
sbbl
xlat
outsb
cwtl
out
push
jns
jle
arpl
dec
mov
pop
sbb
mov
hlt
fnstenv
inc
dec
fcom
fcomp
sub
and
out
add
inc
dec
cmp
adc
pop
push
and
add
iret
pushf
div
jge
cltd
cld
sbb
cli
and
push
nop
dec
adcb
nop
cmp
adc
or
insb
jb
push
fcmovu
mov
negl
dec
mov
jne
popa
mov
cmp
push
pavgw
sahf
mov
jae
out
lods
ja
add
ja
adc
push
mov
jmp
shll
das
mov
push
sbb
dec
mov
dec
into
or
adc
and
dec
push
insb
sbb
adc
ljmp
cmp
xchg
mov
cmp
cmp
fwait
cwtl
sbb
jmp
mov
fisubl
push
aaa
cmpsb
pop
mov
mov
and
std
nop
xor
or
pop
mov
or
inc
xor
push
notl
mov
sub
enter
shll
das
outsb
lahf
cmpl
rorb
cmp
push
cli
pop
pop
daa
test
xor
sub
jg
push
lock
and
mov
sbb
adc
loopne
loope
and
das
cmpb
aaa
aaa
hlt
aam
push
out
add
ret
iret
dec
dec
neg
push
xchg
fs
adc
adc
and
loop
push
dec
jl
fwait
lret
xchg
movsb
mov
stc
or
fnstsw
mov
inc
rorb
daa
ret
sub
lds
inc
rcrl
pop
fisubrl
mov
repnz
inc
insb
sbb
dec
leave
fbstp
sub
inc
jp
repnz
ja
mov
loopne
dec
ret
sti
test
insb
and
mov
cs
sbb
sub
cmp
add
lods
enter
mov
and
cmp
and
mov
pop
sub
and
aaa
xlat
leave
inc
popa
lods
add
andb
jge
push
rol
loope
out
fnsave
stos
aas
scas
sub
ret
mov
insl
cmc
daa
movsl
ret
hlt
nop
cmp
fisubs
cltd
lods
sahf
inc
mov
testb
gs
out
cmp
mov
mov
inc
aad
std
mov
pop
call
ficoms
adc
mov
jg
mov
mov
or
popa
aad
cmp
mov
in
dec
sbb
sbb
inc
cli
stc
inc
dec
adc
inc
jp
repz
loope
sub
in
call
adc
dec
ds
push
pop
jnp
or
outsb
mov
test
xchg
loopne
test
sbb
push
mov
mov
push
jp
jnp
stos
popf
sbb
aad
lods
cmp
dec
mov
pop
xchg
aam
test
scas
jb
mov
aaa
mov
adc
mov
dec
rcl
jne
loope
arpl
jo
icebp
mov
ds
mov
cmp
fs
mov
xor
xor
jp
mov
add
or
rcrl
cmp
hlt
iret
subl
iret
lcall
xlat
lahf
jg
pop
pop
push
cmp
sahf
pushf
ret
xchg
fs
push
adc
pop
loopne
cli
fsubrs
jb
filds
mov
and
insl
jb
xor
stos
cmpsb
ja
mov
test
inc
in
clc
lcall
and
inc
lea
add
out
clc
lods
push
inc
lcall
repnz
mov
ss
aam
lcall
add
lret
sbb
rcr
adc
mov
sub
fidivrs
test
cmp
xor
fs
cmp
ds
pop
jp
pop
pop
jns
scas
mov
pop
in
and
inc
pop
lcall
xchg
aad
mov
xchg
or
fdivl
cmpsb
movsl
jge
sub
int3
shlb
add
fnstsw
sbb
xlat
cmp
jns
jg
roll
dec
cmpsb
mov
call
fmuls
dec
inc
test
sti
or
fbstp
mov
or
mov
jg
push
lea
pop
pop
fwait
mov
enter
test
inc
jno
shll
insl
dec
imul
ds
cmovg
jg
xor
add
push
imul
repz
fs
or
in
push
lahf
adc
scas
loop
xchg
push
cmc
pop
sub
mov
fsubr
fmul
fldl
and
movsl
mov
cld
xchg
das
shrb
scas
xor
pop
push
add
mov
icebp
fs
sti
shll
std
arpl
imul
xchg
adc
jecxz
jne
ret
popf
push
int
sbb
jae
sbb
outsb
add
jl
dec
ret
or
jbe
mov
xchg
cmp
lcall
xor
mov
inc
data16
in
repnz
and
pop
adc
push
stos
fadds
cmp
popf
dec
sub
cmpb
inc
in
pop
jno
or
adc
shrb
xor
pop
xchg
test
pushf
cmp
mov
cmpps
sbbl
aas
jg
ret
cwtl
into
sar
das
cmp
in
fsub
jnp
lods
shlb
push
cmc
pushf
cmpsl
out
xor
enter
xor
push
int3
test
jb
adc
xchg
aad
xlat
xchg
mov
jno
jb
inc
xor
mov
out
xor
lahf
mov
adc
xchg
imulb
addr16
mov
fisubs
stos
test
pop
jmp
inc
mov
repz
sbb
push
inc
mov
insb
inc
cli
lds
lahf
jae
fiadds
