jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
and
sub
leave
add
mov
call
dec
or
sub
sub
add
mov
or
xor
mov
and
mov
sub
sub
or
mov
jmp
and
inc
dec
push
sub
and
sub
push
sub
and
push
add
call
inc
and
mov
add
push
xor
or
mov
call
xor
add
or
cmp
mov
mov
mov
mov
je
mov
dec
or
mov
mov
je
sub
add
sub
mov
mov
add
add
xor
cmp
mov
mov
mov
je
or
xor
mov
push
xor
and
xor
call
or
mov
and
mov
dec
mov
sub
mov
push
or
and
and
push
xor
dec
and
add
push
or
inc
push
sub
and
mov
push
xor
add
add
call
and
mov
add
add
shr
dec
dec
or
lods
and
or
sub
mov
xor
sub
or
add
mov
sub
sub
or
dec
mov
mov
jne
and
mov
pop
add
and
and
pop
and
add
and
pop
xor
xor
jmp
xor
fstps
xor
xor
int
xor
mov
cli
int
mov
orl
dec
or
jae
fwait
cmp
lock
xchg
and
dec
lret
jae
ds
jle
divb
push
cmp
pop
aam
clc
mov
and
cmc
lahf
test
mov
jnp
test
imul
mov
xor
or
cmp
enter
das
pop
dec
pushf
fs
lret
shrl
and
push
das
mov
idiv
mov
push
pop
sti
in
lds
ficoms
mov
dec
mov
mov
mov
lock
sub
js
xor
lret
adc
inc
xorl
test
xchg
pushf
js
mov
into
test
out
je
mov
or
jg
lock
lret
popl
xor
test
cmpl
imulb
into
test
push
xor
jg
cmpl
inc
xchg
cmp
es
test
mov
mov
jnp
mov
in
xor
mov
jnp
push
cltd
inc
mov
mov
adc
out
jnp
mov
jnp
push
in
sub
repnz
mov
cmc
mov
push
cmp
and
mov
push
flds
jnp
sub
aad
add
cltd
outsl
ss
ret
mov
push
cmp
out
movups
lock
xor
insb
jmp
cltd
inc
mov
ret
push
mov
mov
orl
xor
jns
addb
js
jbe
cmp
pop
je
test
sahf
mov
lahf
outsl
add
test
pop
mov
xchg
outsl
sbb
out
sbb
pop
sahf
sbb
jnp
dec
enter
js
dec
cld
xchg
xchg
mov
mov
cld
xor
in
xchg
xchg
loope
repz
mov
cmp
cmpsb
nop
xchg
sbb
movsb
lcall
jmp
icebp
mov
fidivrs
mov
fwait
sti
and
pop
sbb
or
out
cld
sub
xchg
and
add
pop
adc
out
fcmovbe
adcb
or
incb
js
imul
inc
mov
mov
mov
nop
adc
popf
or
xchg
mov
adc
imul
or
insl
les
xchg
aaa
add
or
xchg
or
mov
mov
xchg
in
xchg
jecxz
cmp
mov
out
lahf
push
sbb
mov
adc
xchg
aaa
je
sbb
sarb
jne
mov
cmp
add
mov
sbb
insl
lock
sbb
mov
cmp
sbb
xchg
adc
add
aad
ror
in
sbb
sbb
mov
aad
sbb
sbb
or
das
mov
mov
aas
les
lods
addr16
test
faddl
xchg
and
xchg
xor
cmp
sbb
mov
or
cmp
sbb
xchg
into
mov
nop
xchg
push
fs
add
xor
cld
jg
push
xor
out
ja
out
add
data16
or
lahf
popl
xchg
push
cmp
mov
out
cld
int
test
mov
imul
and
repnz
add
mov
lcall
sbb
fidivrs
mov
fwait
sti
and
pop
repz
jecxz
push
addr16
and
xchg
xor
sbb
js
popf
pop
pop
pop
daa
aaa
js
movsl
sarl
repz
adc
sbb
adc
je
jne
adc
mov
mov
and
mov
stos
in
cmpsl
int
test
imul
cwtl
imul
lret
xor
movsb
test
jecxz
sti
cmp
cltd
xor
sbb
lret
cmp
pop
dec
xchg
mov
mov
es
push
in
ja
push
dec
and
fstpl
js
repnz
ja
mov
lahf
negb
jecxz
inc
decl
out
bnd
sbb
repz
adc
add
out
test
insl
and
dec
in
cmpl
adc
mov
or
xor
mov
adc
imul
push
mov
out
xchg
add
xchg
ds
mov
sub
jmp
stos
add
imul
mov
cld
add
insl
push
jg
movsl
and
jnp
jmp
pop
fstpl
shrl
addr16
adc
push
repnz
add
inc
sub
and
adc
sbb
push
lret
sbb
ja
adcb
jnp
adc
or
pop
orl
je
sbb
sbb
mov
imul
hlt
test
jecxz
test
addr16
orl
out
mov
mov
push
add
cmp
jecxz
add
hlt
push
test
jecxz
rorl
not
repz
cld
and
int
inc
or
jp
ret
ja
scas
lahf
int3
fsub
sbb
js
and
or
out
ja
fcomps
or
push
jae
unpcklps
aad
mov
shl
sub
jo
jecxz
js
sbb
cld
cmp
out
ja
gs
xchg
sub
cld
mov
mov
sbb
jnp
adc
ss
jns
daa
sbb
adc
arpl
repz
pop
jbe
in
icebp
fidivrs
push
out
ja
mov
mov
out
ja
insl
sub
lret
es
js
imul
xchg
or
jae
push
pop
adc
jbe
xchg
negl
out
aaa
je
pop
jnp
scas
add
sub
xchg
sbb
js
push
outsl
or
in
jg
mov
jge
dec
fidivs
mov
mov
or
nop
and
sub
jp
adc
mov
out
mov
and
adc
lcall
lea
jne
pop
xchg
add
adc
fadds
sub
xchg
mov
cmp
sbb
pop
cmpb
hlt
push
push
loopne
ljmp
sbb
jl
nop
or
imul
sti
mov
stos
fisubrs
push
outsl
orb
loopne
mov
and
sub
or
les
jl
jb
mov
sbb
cmp
cmp
in
lods
add
jbe
in
jp
push
pop
pop
call
and
int3
push
xchg
jb
std
jl
je
mov
jl
ds
xchg
test
es
arpl
adc
ja
pushf
outsb
push
cmp
push
jge
mov
ds
in
push
add
xchg
xchg
lea
pop
sub
add
je
pop
jl
sbb
in
popa
dec
jp
hlt
sbb
xchg
mov
test
xchg
repz
daa
iret
in
sbb
cld
inc
or
imul
xchg
cwtl
mov
mov
repz
jmp
and
fidivs
push
xchg
xor
mov
xchg
sti
je
ss
fsubrs
and
aaa
cmp
imul
cmc
and
xor
push
jecxz
or
out
divl
add
fistpl
lcall
or
incl
cld
mov
adc
mov
xchg
scas
inc
out
jo
and
mov
incb
mov
iret
xchg
fadd
cltd
mov
cwtl
add
sub
mov
xchg
mov
fstpl
jb
adc
xchg
sti
test
sahf
sbb
mov
das
mov
jo
ret
push
imull
mov
mov
pop
inc
or
push
sub
and
data16
sub
cmp
outsl
call
out
sbb
insl
xchg
pop
ja
fldl
xor
std
aaa
inc
insl
popf
mov
insb
inc
push
jo
xor
or
fnsave
test
adc
xor
sub
sahf
or
fmuls
add
xchg
ljmp
xor
mov
add
or
and
jecxz
pop
sti
pop
outsb
cs
add
sub
loop
cld
lret
aad
gs
mov
jno
mov
mov
or
insb
ret
inc
push
enter
sbb
jmp
icebp
cmpl
jle
push
adc
xchg
xor
inc
pop
mov
cmc
je
jo
push
repz
or
sub
sub
sub
daa
xchg
xor
and
rol
xor
jg
pop
sbb
mov
inc
push
hlt
push
cld
pushf
repnz
setl
cmp
mov
push
jo
data16
ljmp
cs
push
cmp
xlat
jo
aam
mov
std
aad
mov
adc
jecxz
add
mov
imul
in
pop
movb
fsts
scas
rcpps
cltd
int
pop
pop
sbb
jg
out
aam
stos
movsb
sub
out
add
sub
push
jo
test
pop
cld
out
fnstcw
std
inc
mov
movsl
fs
ss
pop
outsl
pop
pop
pop
jae
sub
push
je
mov
pop
sub
lahf
aas
jbe
and
jge
dec
add
sub
mov
jb
data16
into
xchg
cmp
punpckhwd
or
mov
loop
lret
pop
dec
inc
aaa
push
nop
jecxz
sahf
stos
rcl
js
pop
mov
ret
adc
cmp
add
arpl
xor
shr
jbe
in
hlt
mov
xor
enter
loop
in
addps
loop
xor
push
stc
mov
orb
out
aad
adc
into
fcoml
lahf
je
xchg
xchg
cwtl
push
adc
xchg
xor
lcall
mov
push
je
ss
hlt
imul
ja
les
insl
or
and
int3
repz
neg
pushl
testl
push
mov
ret
jo
cwtl
xor
loopne
lcall
jl
inc
fcom
pop
dec
or
xlat
pop
inc
gs
jb
xor
push
jnp
addr16
cmp
outsb
xchg
sti
mov
data16
std
add
mull
push
xchg
mov
or
hlt
push
testb
ljmp
repnz
sbb
cmp
aaa
adc
adc
mov
push
cmp
fmull
cmp
stos
jne
in
imul
adc
ss
daa
nop
dec
in
cld
pop
push
clc
lock
sbb
out
pop
sub
insb
sub
push
ja
ficoml
and
jae
push
clc
sar
iret
dec
daa
or
jbe
or
xchg
add
insl
jnp
ret
jae
jbe
popf
inc
mov
push
ret
popf
data16
loope
mov
xchg
mov
pop
arpl
popa
or
jg
rclb
jle
outsb
mov
lock
adc
inc
dec
adc
add
ss
sub
jg
cmp
and
cmp
arpl
push
adc
mov
in
pop
lret
dec
xor
out
popa
imul
arpl
clc
mov
lods
pushf
cmp
lock
mov
mov
daa
or
dec
js
sbb
imul
sub
xor
stos
jno
or
addr16
pop
sar
loope,pt
leave
push
mov
fisttpl
popf
mov
insl
pushf
inc
sbb
arpl
out
mov
lret
je
insb
sub
bound
stos
dec
jnp
xchg
pushf
add
cmpsb
xor
inc
adc
repz
and
and
je
xor
pop
nop
addr16
add
ds
mov
mov
push
in
pop
notl
js
popa
ja
mov
push
xchg
add
add
daa
xor
repz
pop
adc
mov
add
pop
dec
fcoms
cld
pop
jecxz
cli
or
lods
ret
sbb
inc
pop
xchg
cmp
adc
xchg
clc
ljmp
insl
dec
test
jnp
jmp
or
lahf
sub
mov
fbld
jp
xchg
stc
pop
pushf
or
movsl
and
lock
insl
aad
adc
sbb
jnp
int
lods
aad
jg
hlt
in
xor
dec
lahf
and
mov
dec
les
pop
mov
inc
mov
sub
shl
xchg
inc
mov
xchg
pop
nop
xor
lcall
loope
push
mov
daa
hlt
push
inc
sbb
push
push
add
jns
pop
mov
sbb
and
push
adc
xor
xchg
pop
scas
mov
push
andl
ret
xchg
pop
cmp
pop
cld
cmpb
jbe
mov
dec
push
push
loop
mov
mov
xchg
mov
xchg
mov
and
mov
ja
dec
mov
inc
sti
lret
test
es
sbb
mov
sbb
fcmovbe
inc
or
pop
shrl
and
jno
sarl
jnp
test
and
ljmp
xlat
push
jmp
call
push
pop
mov
cmp
xchg
into
jbe
push
data16
mov
pop
mov
loop
pop
outsl
repnz
sar
cmp
stc
call
sub
int3
in
mov
and
repnz
out
inc
outsb
push
cmp
fldenv
dec
inc
add
mov
fiadds
in
adc
pop
hlt
cmp
nop
inc
nop
ficomps
cmp
adc
cmc
mov
call
cmp
movsb
popf
outsl
cmp
je
jle
pushf
inc
jecxz
push
add
testb
or
flds
mov
sbb
push
and
lods
xchg
mov
sbb
dec
mov
inc
je
jecxz
and
inc
fcompl
inc
inc
sbb
cwtl
call
xchg
fs
or
outsl
testb
adc
cmp
and
push
cmp
jno,pn
fidivrs
fwait
pop
loop
pop
adc
or
imul
testl
in
call
xor
std
ljmp
mov
inc
mov
je
inc
mov
maxps
xor
mov
outsb
cmc
sub
test
jg
inc
xchg
loopne
out
icebp
movnti
and
dec
jns,pt
rcll
movsl
inc
push
mov
das
int3
insl
cmp
nop
pop
pop
imul
fdivrl
push
cmp
pop
add
mov
aas
mov
jb
mov
lea
lock
mov
push
clc
mov
push
daa
test
dec
jb
loopne
pop
mov
cmp
and
lret
orb
jle
mov
movsl
inc
jb
or
lret
hlt
aad
mov
out
dec
xor
push
divl
and
xor
mov
hlt
xor
xchg
sub
cmp
inc
sbb
aam
popa
in
rcll
dec
mov
lock
adc
add
jo
cmc
out
in
je
outsl
xchg
or
pop
out
leave
fsubrs
jb
mov
mov
xor
ja
js
jge
cmc
push
xchg
js
or
adc
xchg
or
push
roll
xchg
fadd
jge
cmp
in
lcall
ss
out
xchg
xor
cs
rcl
pop
mov
cmpsl
xor
adc
clc
push
fdivr
into
jae
sub
jnp
mov
daa
cli
sbb
dec
and
xchg
push
inc
stc
dec
mov
cmp
push
popa
call
leave
test
cmp
lahf
das
sub
cwtl
mov
ficoms
addr16
sub
out
pop
mov
sbb
iret
add
test
cs
enter
sub
mov
pop
add
dec
jmp
xchg
xchg
xor
mov
loopne
jecxz
or
cwtl
sub
jne
hlt
hlt
cmp
cwtl
lret
enter
mov
mov
aas
add
shrl
call
xchg
in
push
subl
jbe
mov
mov
mov
fs
cld
mov
dec
pop
insb
js
mov
shl
int3
push
cs
popa
xor
leave
rcrl
push
pop
mov
jg
xchg
mov
and
dec
pusha
and
shrb
pusha
dec
decb
pop
add
jns
dec
mov
loop
pop
in
mov
jmp
shll
push
sbb
jmp
fidivs
pusha
inc
adc
xor
mull
cli
stc
les
ljmp
mov
push
add
jp
pop
jg
js
repnz
ret
pop
jle
lods
jo
mov
aam
insb
and
in
and
jle
push
xor
push
inc
sbb
gs
setg
iret
rcrl
xor
push
sub
fstp
sub
jmp
test
notb
ja
mov
push
mov
gs
inc
bound
lds
cs
test
mov
in
repz
dec
jle
sub
mov
cs
push
shlb
sub
iret
aad
xor
aad
ret
push
and
sahf
xchg
adc
add
mov
mov
loop
mov
fwait
ret
jg
addl
out
or
ds
inc
push
imul
rorl
std
imul
arpl
call
pop
mov
dec
loopne
add
cs
jo
decb
adc
out
shlb
jle
andb
js
stc
jne
jge
or
mov
clc
mov
out
inc
xchg
pop
pop
push
mov
fwait
mov
mov
sbbb
or
cmp
mov
pushf
hlt
mov
cli
jecxz
das
ret
pop
outsl
sbb
out
sbb
roll
lret
fs
pop
sub
push
sub
call
or
mov
dec
subb
movsb
mov
ds
sti
pop
test
pop
cli
cmpsl
xor
xor
cmp
inc
and
mov
mov
roll
ret
jae
imul
push
idivb
je
jg
hlt
xchg
and
lods
fstl
dec
fistps
jg
jecxz
mov
xchg
ss
xor
jo
xor
add
bound
notw
stos
or
pop
jle
adc
jl
xor
add
push
fldcw
daa
jno
ss
subl
jmp
fdivr
xor
xchg
fcompl
iret
pop
sbb
add
mov
jnp
sbb
cmp
leave
xor
test
xorb
hlt
fidivrs
lret
imul
mul
out
rcl
xchg
xor
nop
cltd
xchg
jle
sbb
mov
lock
jbe
aaa
hlt
mov
push
scas
je
mov
adc
jne
add
aaa
add
movsl
push
ret
dec
xchg
mov
inc
inc
jno
push
or
push
jle
mov
loopne
data16
cld
and
idivl
sahf
jb
outsb
pushf
lret
sub
out
lcall
ds
pop
das
clc
xchg
divb
bnd
sub
mov
mov
gs
push
or
jmp
sbb
add
out
in
divl
push
clc
rorl
dec
mov
out
xor
mov
add
xor
testl
jne
pushf
or
sbb
aad
inc
xchg
fsubs
pop
icebp
mov
daa
outsl
or
and
jp
int
xchg
aaa
push
into
daa
jg
push
jae
fsts
cmp
jnp
pop
jae
or
pusha
negl
sub
push
es
cmp
je
bound
fdivrs
loop
daa
out
sahf
movsl
add
cmpsb
mov
xchg
cli
hlt
jl
fst
add
or
mov
sti
jbe
inc
mov
mov
sti
sbb
and
sbb
adc
cmp
pop
in
in
icebp
stc
aam
pusha
mov
push
add
sub
pop
or
fcmovb
adc
add
lea
lret
sbb
mov
cli
imul
xchg
rcll
and
repnz
pop
ds
xor
test
insl
jg
testb
inc
push
xchg
js
or
inc
or
adc
sbb
out
pop
outsb
out
cli
cs
stos
addr16
ret
xor
ja
pop
dec
xor
lret
xchg
pushf
mov
lea
jg
lret
daa
fbld
arpl
xor
and
sbb
test
loope
add
insb
sti
mov
in
outsl
push
jnp
imul
mov
jmp
outsb
xlat
mov
imul
inc
or
push
decl
or
mov
xor
cmp
bound
push
pusha
jns
xchg
aad
cld
push
mov
nop
jo
jo,pt
push
inc
push
popf
gs
shrl
sbb
pushf
inc
sbb
dec
xor
xor
mov
push
out
adc
in
jmp
push
jl
test
xchg
cmp
dec
fwait
xor
jecxz
je
inc
sub
js
dec
inc
ja
dec
inc
aas
adc
jmp
aas
mov
aam
aaa
in
loop
adc
adc
std
mov
repz
mov
ds
in
jmp
aaa
loop
sbb
dec
xor
sub
loop
push
paddd
mov
sbb
and
inc
lds
xlat
mov
xor
hlt
jecxz
sub
cs
and
nop
sarl
mov
rcrb
movsb
mov
mov
lcall
imulb
outsl
ret
retw
mov
adc
xor
lods
cmpsl
dec
inc
and
mov
cld
jecxz
cmp
add
push
popa
jne
fmull
sub
outsl
in
dec
ja
in
jle
fsubs
test
mov
mov
fwait
aas
fisubl
aas
je
jnp
jbe
out
popa
pop
or
cmp
mov
pusha
sbb
in
shll
mov
repz
pushf
jge
lds
mov
imul
decl
inc
jg
inc
lahf
ret
rcrb
sbb
cwtl
arpl
andl
and
std
cmp
mov
test
mov
xchg
cmc
into
adc
jecxz
and
mov
sub
aaa
scas
push
pushf
pop
lret
icebp
jnp
cmp
inc
inc
and
push
push
add
les
push
push
lret
enter
mov
and
pop
mov
dec
xchg
cmp
mov
adc
dec
sbb
in
arpl
sti
test
wrmsr
pop
jns
jo
push
call
mov
pop
rcll
jo
pusha
testl
jb
repnz
pop
repz
or
or
mov
and
js
mov
stc
and
mov
test
adc
fisttpll
pusha
ret
call
xor
sub
lods
pop
out
insl
js
pop
mov
cli
pop
cmp
test
add
ss
mov
sub
add
sti
mov
push
sub
pop
or
das
push
cwtl
or
and
lret
cmpsl
inc
je
filds
sub
or
inc
mov
jecxz
inc
fsubrl
shlb
aam
imul
xor
or
pushl
jns
jp
add
add
cli
jecxz
adc
cmpsb
movsw
call
aam
movsl
lahf
add
cli
sub
mov
call
mov
fstps
dec
push
insb
bound
and
mov
sbb
imul
sti
xchg
adc
ds
mov
mov
std
sbb
add
testl
repz
ljmp
shr
movsb
outsb
mov
push
mov
mov
movsb
or
aaa
popa
in
dec
outsb
inc
addr16
fwait
pop
std
fdivrs
lock
aas
push
les
lock
cmp
push
jo
fwait
mov
outsl
pop
scas
mov
roll
pop
mov
mov
imul
js
push
adc
jp
outsl
jae
enter
jecxz
jmp
sub
or
imul
adc
popl
jle
loope
pusha
sub
mov
testl
jp
and
cmp
imul
cli
ja
data16
push
dec
mov
ret
add
pop
mov
mov
jp
cmp
ret
insl
jecxz
pushf
pop
cmc
jne
rclb
push
std
ret
repnz
loopne,pt
jmp
sbb
lahf
and
in
push
addr16
ds
jecxz
xchg
repnz
repz
imul
and
mov
ret
int
pop
ja
outsl
jne
jae
dec
popa
jnp
stos
mov
ja
sub
stc
aas
loope
mov
xchg
inc
stc
pop
push
jp
jp
dec
in
xchg
xor
cmp
int
mov
mov
xor
fiadds
int
lret
push
mov
enter
icebp
xchg
int
push
dec
push
mov
aas
jg
sub
dec
add
jp
shll
daa
cmp
sbb
push
lea
cmp
outsl
mov
fst
pop
jbe
and
mov
sub
enter
mov
xchg
push
pushf
pop
repnz
xchg
xor
pop
push
adc
pop
cmc
add
cmc
inc
ja
test
dec
nop
cmp
repz
xor
hlt
sbb
movsb
pop
std
xor
jge
cmp
sub
pop
mov
and
cli
pop
mov
lcall
xchg
xchg
pop
std
push
fs
mov
int
out
scas
cld
fdivl
mov
pop
inc
dec
push
or
ss
inc
loopne
ror
daa
stc
sahf
jns
movsb
cmp
cmp
popf
sbbl
insl
lahf
add
add
cwtl
movsb
push
hlt
or
addr16
jecxz
push
std
cltd
clc
push
push
jns
and
and
es
cmp
jle
sub
push
jg
lret
push
sub
lahf
jo
in
call
lret
cmpb
stos
stos
add
dec
sbb
pop
push
stos
push
pop
out
push
test
jno
fmuls
out
inc
repz
mov
in
or
dec
xchg
jge
cmpsl
inc
dec
aad
sbb
push
arpl
push
push
xchg
subl
xchg
dec
stos
ret
cmp
sub
and
xor
adc
or
jmp
lret
leave
stos
cmc
int
dec
or
push
rcr
mov
push
cmp
enter
cli
pop
ss
movsb
pop
push
adc
testl
int3
cli
add
sub
aam
cmpsb
imul
fs
lds
pop
in
mov
push
dec
inc
xor
movsb
inc
xchg
xchg
iret
sub
iret
sbb
repnz
scas
dec
and
pop
jecxz
sub
mov
aad
mov
loopne
xchg
ss
ljmp
nop
nop
in
cmp
sti
aas
aas
lret
mov
sti
mov
pushf
dec
sub
aas
dec
outsb
jnp
cmp
addr16
andl
movb
dec
fstpl
mov
fisubl
lret
imul
xor
out
xor
mov
inc
int
mov
lcall
pop
add
sahf
es
push
fsubrl
sub
lods
pusha
jne
mov
shr
dec
cmp
mov
cli
mov
and
push
nop
sbb
jmp
arpl
subl
je
cmp
pop
in
ss
cmp
mov
outsb
test
push
push
mov
inc
ficomps
call
inc
cmp
scas
pop
dec
adc
movl
add
and
outsb
in
arpl
stos
stc
pop
adc
int
sahf
nop
sub
cmp
jae
shr
aas
out
fidivrs
or
jl
adc
adc
mov
push
out
es
mov
call
pop
push
insb
or
scas
pop
inc
stos
push
in
test
sbb
xor
ret
popa
fs
outsb
push
xchg
pop
mov
enter
loop
pop
sarl
pop
mov
sub
push
jge
fcompl
xor
sbb
out
mov
mov
and
inc
cltd
sbb
out
in
out
aad
and
test
xor
or
ljmp
sbb
push
adcl
cmp
push
pop
lret
cmp
test
mov
stc
add
insl
mov
ret
mov
sub
out
stos
push
fs
push
lea
push
adc
repnz
rcrb
mov
insb
out
xchg
fwait
repnz
in
mov
mov
fsin
lea
fadds
push
pop
jl
lea
push
lods
lea
ss
fdivl
loopne
sbb
pop
subl
xchg
stos
pop
mov
xchg
imul
or
mov
sub
cs
adc
cmp
mov
push
mov
and
jno
xchg
mov
rclb
add
mov
push
jo
aad
cmp
filds
clc
scas
or
inc
sahf
mov
cmp
pop
lods
dec
push
sbb
scas
iret
lock
sbb
push
sub
out
out
in
add
dec
mov
ret
jne
cltd
iret
sbb
cmp
sbb
cmp
mov
test
repnz
push
fstl
repz
mov
xchg
decl
mov
popa
pop
bound
dec
ja
mov
push
cmovns
cmc
out
fsts
adc
jg
jno
jmp
inc
hlt
mov
lret
mov
and
jmp
daa
pop
xchg
dec
inc
jmp
jp
add
in
mov
mov
mov
xor
xor
mov
rcrl
es
sbb
popa
sbb
and
out
xlat
mov
pop
ret
jnp
pusha
push
pop
iret
arpl
dec
stos
mov
jmp
adc
xchg
mov
ss
mov
jl
in
xchg
push
or
sahf
xchg
pushf
mov
pop
jne
ds
addr16
inc
sbb
jbe
xor
lods
dec
dec
mov
cmpsl
jb
insl
cli
ret
scas
hlt
bound
jp
outsb
outsl
mov
es
push
jnp
fisubrl
ds
cld
es
pop
cmpb
std
adc
cmc
adc
jl
aaa
mov
lcall
sarl
push
out
push
push
jo
sbb
imul
jp
add
add
call
or
in
jnp
add
test
ss
nop
test
movsb
mov
repnz
jmp
idivb
jo
loop
jae
sbb
xchg
movsb
push
divl
or
mov
in
pop
xchg
push
xchg
push
or
pop
jle
push
cmc
pop
add
aas
sbb
jbe
nopl
rclb
out
mov
dec
mov
mov
adc
repnz
push
xchg
lret
pop
jno
and
pop
inc
ljmp
sti
int
inc
or
into
stc
cs
sti
fisubs
or
lret
fs
pop
xor
out
lahf
lahf
mov
push
or
jge
sbb
xor
adc
fs
ss
add
add
pusha
pushf
dec
or
imul
pushf
jne
and
cmp
inc
ja
mulb
jle
inc
mov
lahf
or
daa
push
pop
aas
pop
jae
mov
ret
pop
js
push
push
loopne
mov
out
jg
inc
gs
sub
xchg
cmpsl
cltd
ds
je
test
sub
lcall
imul
in
jle
push
cmp
sti
and
popf
add
repnz
inc
test
hlt
cld
mov
jecxz
jecxz
lahf
leave
sbb
fisttpll
mov
push
xor
add
mov
fs
std
jle
shl
data16
inc
daa
outsb
jl
push
jne
sub
and
shll
mov
sub
mov
adc
aam
xchg
int3
pop
mov
mov
add
sbbl
xor
mov
sarb
and
sbb
sahf
sahf
test
lcall
sar
loopne
pushf
sbb
test
push
shr
cld
loope
je
dec
jp
jmp
int3
push
leave
imul
stos
inc
mov
movsb
pop
sub
adc
in
jl
loopne
incl
lcall
add
jg
xchg
mov
and
ss
shr
xchg
cmpsb
mov
dec
outsl
sbb
push
ljmp
adc
out
cli
maskmovq
jbe
div
push
mov
pop
mov
cmp
mov
js
dec
cli
xor
xor
js
sub
cmc
mov
and
gs
or
pop
inc
inc
loope
or
jbe
pop
xchg
or
xor
inc
xor
mov
push
enter
cmp
and
jle
jb
xchg
cmp
fcomi
les
push
push
out
adc
hlt
and
fisttpll
das
pop
push
jne
ja
lahf
bound
cmp
cli
xchg
dec
out
aaa
pop
push
cmp
mov
inc
sbb
and
mov
test
push
xchg
or
pusha
xchg
inc
mov
je
fcomp
xor
mov
add
push
pop
inc
mov
pop
scas
aaa
cmpb
or
xchg
mov
sar
insl
jno
inc
dec
mov
push
xor
push
sbbl
add
fsub
out
arpl
mov
push
mov
mov
pop
mov
insl
sbb
mov
mov
pusha
shlb
xor
xchg
ljmp
icebp
mov
sarb
fcomps
imul
add
push
hlt
fdivp
jbe
adc
movsl
imull
push
outsl
fs
data16
mov
mov
add
js
das
dec
push
mov
test
and
pusha
xchg
cmp
adc
loope
cmp
jno
jecxz
mov
subb
test
ljmp
adc
xor
repz
cmp
je
push
jl
push
push
push
sahf
xor
insl
rclb
xchg
sub
insb
icebp
push
cld
sub
add
jmp
lret
mov
or
imul
lods
out
in
ss
jp
imul
adc
push
mov
shlb
mov
fidivl
or
mov
movsl
cmp
sahf
xchg
push
sbb
xlat
rorb
cld
mov
mov
cld
inc
jp
push
sub
adc
fucomip
jecxz
push
fcomps
xchg
mov
lahf
dec
xor
add
iret
test
cmpb
sub
adc
mov
adc
inc
push
push
scas
lret
popf
mov
jo
call
push
insb
arpl
cmpsl
rol
mov
mov
movsl
push
mov
lahf
inc
lods
pop
fs
pusha
je
lcall
jmp
les
mov
jnp
add
jo
mov
push
lods
scas
rolb
mov
cmpsb
add
inc
insb
cmpsl
jbe
cs
mov
mov
outsl
je
ret
lods
clc
data16
sub
insb
into
js
imul
jmp
cltd
call
pop
jne
mov
mov
or
mov
in
inc
ffree
sub
adc
dec
jle
lods
jne
xchg
dec
adc
scas
das
popl
and
dec
addr16
jmp
fwait
lock
jle
adc
push
call
fsubs
sbb
inc
and
sbb
scas
pusha
dec
mov
inc
adc
inc
mov
pusha
rorl
ret
inc
xchg
sub
xlat
outsb
insl
rcl
push
dec
inc
mov
test
not
jle
dec
cltd
out
scas
leave
mov
dec
pusha
fldt
ret
nop
jl
lods
lds
push
push
insb
and
sub
test
dec
ds
cmpsl
pop
push
adc
jg
push
jb
jge
mov
loop
jns,pn
rcrb
lea
call
flds
add
dec
dec
push
xor
fstpl
jmp
and
mov
movsl
push
popf
mov
fwait
and
loopne
gs
sbb
add
into
pop
xor
pinsrw
out
arpl
pusha
cld
bound
xor
add
xor
mov
xorb
xchg
sbb
jl
pusha
cmp
sub
enter
xchg
xor
cmp
inc
repz
sbb
repz
jg
sahf
lock
and
sbbl
pop
sti
cmp
push
in
je
into
jae
in
or
mov
adc
sub
or
xchg
cmp
mov
outsb
jle
leave
imulb
cli
inc
pop
into
in
fs
mov
movsl
in
int
outsl
jbe
and
xchg
mov
int3
out
gs
lds
movsb
test
jbe
ffree
add
sbbb
dec
push
or
mov
sub
and
push
xchg
and
dec
pop
and
mov
pop
mov
cmc
fistl
paddsw
xor
lret
pop
sub
hlt
dec
or
sub
and
pusha
jnp
jecxz
rolb
cld
adcb
inc
out
ret
mov
xor
xlat
mov
adc
call
xchg
pushf
movsl
cs
mov
dec
iret
xor
pop
add
imul
pop
cli
in
dec
pop
and
jo
push
nop
inc
mov
jp
inc
dec
xchg
xchg
dec
dec
dec
pop
add
mov
mov
arpl
in
dec
aam
push
jmp
divl
out
gs
lcall
jg
outsb
or
mov
inc
es
mov
push
pop
mov
pop
xchg
out
add
and
jae
push
aam
rclb
inc
shlb
sahf
sub
inc
jb
inc
cmp
test
lds
inc
mov
shrl
and
cli
jl
setg
or
jmp
js
shlb
and
jcxz
sbb
pop
or
xchg
and
outsl
imul
inc
lods
pop
or
xchg
movsb
je
xor
dec
sbb
pusha
hlt
adc
mov
fxch
mov
pop
or
aaa
sarl
rclb
hlt
xchg
and
and
push
negl
repz
or
push
jg
fstp
cs
je
inc
lock
adc
xchg
fsts
decb
ja
sbb
jle
mov
mov
daa
outsl
pushf
jp
in
decl
arpl
pop
inc
pusha
push
mov
ror
xchg
xor
addr16
mov
cwtl
mov
gs
dec
out
xchg
repnz
ret
push
mov
loopne
popa
lock
sti
pop
pop
iret
jge
adc
xchg
iret
lret
scas
in
rclb
les
or
cmpsl
dec
gs
pop
mov
jmp
aam
sub
adc
es
nop
repz
cmc
hlt
dec
mov
nop
fwait
push
lods
fwait
jge
cmpsl
loope
xor
aas
shll
mov
shrb
ljmp
xchg
push
dec
inc
test
sti
pop
push
std
add
and
aas
aam
xchg
insb
sub
stos
push
in
mov
fcompl
das
mov
mov
dec
mov
into
inc
aam
loop
insl
daa
xlat
je
lahf
adcb
jae
jo
inc
iret
jmp
stos
cmc
adc
sbbl
in
sub
imul
not
mov
and
ret
mov
cmp
and
out
push
push
out
push
mov
or
cmpsl
xchg
cmp
faddp
dec
fsts
mov
mov
out
in
hlt
js
and
cwtl
jl
mov
insb
in
cltd
inc
stos
adc
inc
and
cmp
cmp
sbb
int3
mov
mov
ret
and
xorb
adc
sbb
add
lods
jecxz
push
sbb
ljmp
xchg
mov
fcompl
movb
jle
sbb
jne
sbb
divl
adc
out
inc
mov
add
in
hlt
test
push
push
outsb
inc
insb
jp
adc
xchg
push
and
xor
iret
stos
insb
lcall
lret
lea
inc
or
lods
dec
mov
mov
es
cmp
int3
das
and
cmpsl
or
lea
pop
lret
mov
hlt
cs
pushf
xchg
sub
dec
pop
in
mov
dec
xchg
jp
push
pop
daa
cmpl
aaa
push
insb
test
add
adc
imul
sbb
push
inc
push
mov
jmp
cmpsl
fisttpll
adc
arpl
fsubs
mov
subps
out
mov
lea
movsb
or
loopne
dec
push
pusha
add
lahf
xchg
lret
repz
add
ds
xchg
sbbb
outsl
mov
inc
mov
repnz
cwtl
daa
test
adc
ljmp
mov
or
dec
push
iret
and
mov
and
and
and
mov
mov
and
xchg
lcall
sbb
pop
xchg
xor
faddl
je
or
mov
ret
and
cmc
pop
dec
out
push
mov
dec
jecxz
jb
sub
inc
cwtl
lock
add
xchg
repnz
ror
sbb
hlt
loopnew
inc
shlb
loop
out
stc
xor
lret
xor
pop
mov
int3
jle
mov
sarl
mov
rorl
cmp
fwait
mov
aaa
lock
inc
stos
inc
jmp
mov
dec
ja
xchg
adc
inc
fcmovnb
inc
xor
push
mov
rorl
push
cmc
imul
add
cmp
test
fsubr
and
jl
adc
lret
in
out
inc
ficomps
dec
mov
xor
stos
jle
icebp
pop
mul
inc
mov
out
dec
imul
cmp
fwait
add
push
je
xchg
inc
daa
bound
jmp
inc
adc
mov
dec
cvtps2pd
jl
stc
sbb
mov
sti
daa
sub
sub
aaa
aam
xor
jp
xchg
dec
sub
cmc
inc
xchg
lret
jns
cs
push
fbld
sbb
and
hlt
add
std
je
or
aam
lock
repz
or
mov
test
and
xor
hlt
and
jae
xchg
neg
test
ljmp
movsb
inc
out
xorl
add
mov
jle
mov
outsl
fdivl
xchg
pop
test
mov
pop
mov
cmp
mov
inc
or
mov
mov
mov
add
fisttpl
or
mov
and
xchg
jo
ret
mov
push
orl
jmp
sti
dec
xorl
sbb
push
stos
incl
jge
cmp
and
adc
lea
into
pusha
fistpll
mov
dec
rclb
insl
sti
test
jbe
rol
mov
add
fs
scas
pop
loopne,pn
push
ficomps
xor
add
outsl
aam
mov
pop
pop
cmp
or
pop
pushf
xor
sar
scas
rolb
je
pushf
fs
xor
movsb
fs
add
sbb
pop
jg
pop
mov
mov
push
cli
pop
addr16
mov
xor
fcoms
std
jbe
pop
cli
dec
addr16
fimuls
in
data16
cmp
mov
sbb
pop
sbb
sbb
push
cmp
daa
in
inc
cmc
daa
mov
out
push
push
mov
xchg
ret
scas
jb
shlb
ss
mov
les
ja
cmp
jne
hlt
add
inc
insl
xchg
and
aam
aas
test
imul
mov
lock
or
xchg
shlb
mov
mull
outsl
int
mov
out
mov
xchg
sbb
nop
mov
and
adc
outsb
sub
fwait
cmp
push
or
push
cmc
adc
sub
cld
test
out
lock
push
loopne
sbb
sub
daa
loop
jl
push
xchg
cmpsb
jmp
cmp
loopne
sub
push
ja
cli
jmp
jno
fcoml
sahf
shll
mov
test
scas
test
jecxz
hlt
adc
dec
mov
out
mov
lods
add
jae
mov
leave
mov
addr16
test
and
add
bound
mov
xor
push
xchg
nop
rcr
sti
sub
cmpsb
dec
mov
pop
imul
push
mov
iret
stos
div
inc
je
pop
xorl
add
xchg
add
es
pop
xor
ss
mov
cmp
push
and
pop
xor
mov
jns
popl
out
pop
ret
cmp
ljmp
adc
bound
shl
lahf
cmp
jbe
subb
pop
pushf
fidivs
movsb
lcall
push
loopne,pn
js
dec
pop
inc
repz
fcompl
ds
hlt
in
bnd
sub
xchg
jnp
das
aaa
fdivr
mov
dec
loop
jl
and
cmp
sbbl
pop
adc
pusha
sub
out
cmp
jne
cmp
das
mov
xor
loope
aas
xor
jnp
add
xor
aam
ja
sar
cmp
adc
or
sub
mov
jg
stos
pop
es
jp
xchg
push
push
sub
mov
cmp
and
xor
xchg
inc
mov
sbb
sub
xor
xor
imul
hlt
addr16
js
pop
mov
pop
jl
xchg
scas
outsb
inc
aas
lret
jmp
ds
xchg
sub
lahf
mov
add
sub
jne
insl
cmpsl
push
lcall
adc
push
sbb
rclb
enter
jl
lcall
jmp
in
ret
mov
loop
dec
lds
dec
jb
add
pop
imulb
or
jns
aas
sarl
xlat
dec
cs
add
inc
and
test
xchg
roll
cmp
pop
dec
xchg
stos
push
pop
inc
inc
xor
cwtl
das
push
add
inc
mov
sbb
sub
mov
imul
iret
pop
cmp
and
sub
movl
and
adc
arpl
sbb
shlb
sub
or
pusha
das
outsl
fbld
adc
int
mov
data16
pushf
je
jo
imul
mov
inc
add
aad
pop
shlb
icebp
decb
je
je
sbb
fisubrs
pop
es
bound
jg
add
nopl
inc
outsl
adc
ret
push
push
into
inc
push
icebp
dec
or
xor
mov
mov
stc
fists
jno
xor
add
sti
dec
adc
xor
lea
push
outsb
jno
arpl
sbb
call
xor
lcall
sti
imul
or
mov
cmp
dec
push
xor
frstpm(287
rolb
cld
push
sbb
out
adc
cs
pusha
jo
jb
lret
add
stc
push
arpl
lret
dec
fcompl
jge
ret
cli
lods
push
es
inc
outsb
inc
outsb
push
repnz
or
sub
jo
and
mov
xor
and
clc
mov
jb
cmc
loop
mov
adc
push
push
lds
lock
xor
arpl
daa
inc
cmpsb
insb
lds
and
lret
lds
bound
sbb
sbb
cmp
ret
div
jb
imul
pop
fmulp
sbb
insl
xor
ficompl
iret
ja
pop
dec
push
add
xchg
sub
sahf
cmp
push
and
mov
mov
xchg
negb
jge
push
fbld
imul
mov
xor
fisubrs
cmp
dec
out
xor
xchg
paddsw
sub
insb
xchg
mov
in
sub
lds
mov
out
jb
add
pop
jle
mov
xor
inc
nop
sbb
mov
jle
int
outsl
shr
je
pop
add
xorl
in
lret
imul
sti
adc
add
aaa
testl
adc
xchg
and
int3
jae
push
jg
xor
jl
ljmp
xor
or
xlat
mov
mov
sub
push
or
inc
push
hlt
mov
mov
xor
jbe
push
jp
sbb
inc
cmp
add
jmp
mov
or
out
js
aam
insl
lahf
push
push
into
imul
cmp
imul
test
cmp
mov
lret
dec
push
test
mov
std
cmc
daa
xorl
in
aaa
xchg
xchg
iret
sub
sub
lock
out
push
outsl
sbb
lock
sbb
testl
lock
and
pop
fadds
out
je
mov
fildll
and
loopne
enter
popa
and
movsb
es
pop
lret
or
mov
add
icebp
adc
jmp
movsl
fldt
mov
push
lock
xor
dec
xor
mov
mov
iret
pop
pusha
pop
insl
xchg
inc
outsb
mov
cmpsl
inc
inc
add
sbb
cmc
jp
inc
jnp
jmp
out
jp
inc
fsubrs
mov
aam
lods
sti
cmp
mov
cs
cmpl
shl
test
enter
cld
outsb
xchg
ljmp
ds
cmp
ljmp
add
mov
les
pop
ret
fsubr
pop
inc
push
fisubrl
cmp
xor
push
inc
push
stos
cmp
mov
inc
pop
mov
mov
mov
mov
mov
js
sbb
fdiv
cmp
push
out
data16
dec
inc
ds
imul
jle
push
or
int3
rolb
pop
mov
addr16
jmp
mov
sbb
imul
cmp
and
imul
aam
adc
cs
addr16
lret
sbb
push
ljmp
aas
cmpb
and
test
leave
mov
push
push
pop
push
lea
mov
das
or
lock
sbb
pushf
push
loop
xchg
pop
push
pop
cli
pop
loop
mov
xor
sub
in
or
movsb
jo
sub
ja
jge
repz
add
ljmp
pusha
outsl
mov
es
imul
dec
and
push
mov
inc
out
push
test
mov
and
inc
push
ja
cwtl
adc
mov
mov
ss
adc
ss
cmp
ljmp
insl
stos
dec
arpl
das
testb
notl
jae
and
iret
jbe
je
insb
pop
int3
or
and
or
xchg
adc
adc
mov
or
pop
rcrb
es
in
loopne
adc
fsubl
jmp
pop
mov
gs
gs
frstor
and
pop
cwtl
add
and
jmp
cmpb
mov
int
pop
and
movsl
je
add
in
adc
in
lods
mov
xchg
scas
es
mov
mov
rorl
hlt
push
inc
pop
mov
xchg
inc
stos
pop
in
sub
mov
repnz
xorb
adc
aad
jo
sub
sbb
stos
ret
jp
push
or
mov
test
into
xchg
jge
jge
push
jp
jmp
xor
out
fisubs
movsl
mov
jo,pn
xor
mov
mov
adc
push
mov
rol
stos
cmp
das
fs
pop
cs
and
insl
ljmp
in
inc
fiadds
scas
bound
sbb
sti
mov
jl
push
movsb
jmp
adc
enter
fcomps
lea
imul
hlt
jecxz
mov
pop
loope
push
xor
sub
xor
or
divl
test
nop
push
scas
fucom
negl
inc
cmpsb
cs
lods
andl
mov
aaa
and
push
push
jns
jbe
iret
movb
roll
inc
sub
in
mov
sub
imul
rcrb
dec
loope
mov
imul
mov
out
mov
and
cld
jb
mov
arpl
int3
or
mov
hlt
pop
out
cmpsb
push
outsl
mov
xchg
jnp
fst
cmp
inc
ret
mov
xor
test
stos
pop
rcr
sub
nop
mov
mov
jb
out
and
pop
sbb
push
shlb
and
aam
imul
push
fsubrs
pop
sbbl
push
sahf
dec
js,pt
mov
adc
xor
incb
lea
incb
add
clc
fucom
mov
push
push
out
inc
add
stos
adc
gs
fwait
adc
int3
lret
push
jle
mov
aam
pusha
xchg
enter
out
jnp
lds
fsubl
or
pop
jmp
or
pop
out
lahf
lea
xor
mov
out
inc
mov
and
cmp
or
daa
adc
cmp
ret
sub
or
push
push
mov
inc
add
xchg
xchg
inc
jp
push
push
out
orl
sbb
loopew
cmpsb
mov
fiaddl
fiaddl
pop
sti
pop
push
mov
cmp
inc
xchg
loop
adc
cli
and
aad
and
jnp
sbb
sbb
jo
or
mov
pop
mov
push
imull
adc
mov
cmp
xchg
and
imul
cmp
pop
je
sbb
add
or
mov
cmc
xchg
xchg
cmpsl
lcall
loope
out
and
ds
push
jb
and
mov
push
and
push
sarb
jae
adc
pushl
ja
adc
insb
mov
jno
pop
lods
fimull
nop
nop
push
imul
fcomip
data16
jbe
arpl
in
insl
mov
in
mov
outsb
ja
call
stos
clc
es
push
in
outsl
sub
sti
add
adc
or
scas
lea
shlb
arpl
mov
jo
aas
cmpps
rorl
push
andl
or
add
sbbb
in
push
movsl
dec
bound
jnp
xor
fisubs
and
add
int3
dec
movl
pusha
fstps
mov
arpl
add
ljmp
or
jg
fcomps
jecxz
jno
in
cld
jo
push
mov
mov
repnz
inc
and
cmp
in
push
cmp
nop
in
and
adc
jns
pop
jbe
inc
push
pusha
and
add
ljmp
je
divb
push
es
jbe
dec
ljmp
sbb
int3
je
xchg
push
xchg
mov
std
dec
cld
inc
int
repz
loop
add
inc
addr16
push
push
inc
mov
adcb
insb
fildll
lods
pop
or
adc
jo
mov
cmp
cmc
icebp
pop
and
mov
mov
xlat
cli
jne
push
sbbl
inc
xchg
jbe
cmpsl
pushf
je
jmp
rol
jecxz
jge
jp
sarb
push
adc
sbb
adc
inc
pusha
addr16
bound
pop
or
sub
push
push
movsl
not
add
into
xchg
jp
sub
dec
ss
xor
ds
movsb
add
inc
repz
adc
push
mov
cld
lea
jge
xlat
lods
dec
cli
sbb
ja
arpl
xchg
aaa
pop
stc
xor
jl
jns
dec
and
andl
pop
pop
inc
cwtl
test
clc
sbb
mov
inc
or
xchg
sub
adc
ds
mov
in
mov
mov
dec
jne
test
push
mov
dec
sbb
push
push
lret
xchg
bndldx
ret
jbe
push
fdivrs
cli
pop
iret
mov
xchg
test
add
adc
mov
cld
mov
dec
fwait
int
add
push
mov
fidivl
inc
in
push
add
je
mov
push
scas
adc
pop
pushf
adc
pop
scas
enter
ss
add
push
push
xor
pusha
lahf
mov
test
cmp
stos
dec
push
add
es
pop
xlat
add
and
inc
mov
xor
sbb
addr16
mov
inc
stos
and
mov
ss
adc
push
xchg
out
xor
enter
mov
sub
xchg
mov
jle
mov
loopne
lahf
fildll
enter
ret
or
daa
sbb
aam
rcl
mov
and
outsb
cli
pop
repz
sahf
in
push
daa
sub
mov
fistps
dec
insb
sbb
dec
cs
push
incb
subb
js
sub
push
test
xlat
push
xchg
enter
lahf
cmp
dec
out
xchg
adc
add
scas
jne
and
mov
loopne
xchg
xor
imul
scas
loopne
jno
bound
xchg
call
bound
outsl
fdiv
inc
out
mov
mov
addr16
dec
mov
adc
test
int
cmp
sub
int3
pop
mov
cltd
push
js,pt
fbld
cmc
xchg
adc
mov
rorb
es
popa
inc
sbbb
ret
mov
jecxz
into
xor
add
mov
and
xor
adc
inc
js
xchg
sub
int3
cmpl
pop
lods
inc
fwait
mov
lahf
movsl
push
mov
setae
or
mov
dec
push
adc
jb
outsb
dec
mov
add
dec
push
and
pop
sbb
sub
add
cmc
push
outsb
ds
and
inc
and
and
nop
sub
push
or
or
hlt
mov
push
and
in
adc
mov
scas
pop
dec
and
aas
sub
pminsw
call
outsl
inc
test
adc
mov
ret
pop
mulb
add
arpl
mov
mov
mov
das
loop
and
cmp
xor
sub
inc
shrl
jecxz
and
adc
pop
icebp
xlat
add
cmp
scas
decl
gs
stos
mov
sbb
cbtw
jl
or
cmp
xchg
cmpsb
ret
arpl
in
lret
xchg
fldenv
push
loop
pop
iret
test
push
les
out
jno
mov
mov
daa
inc
xchg
icebp
loop
fnstcw
add
arpl
or
dec
insb
ljmp
sub
daa
scas
das
xchg
push
cmp
add
add
fistps
add
pop
xchg
lds
gs
cld
inc
xchg
scas
push
sbb
pop
fidivrl
hlt
sbb
jmp
or
ljmp
outsl
shrl
inc
mov
ret
xchg
shlb
insl
xorl
gs
jno
inc
lods
enter
bound
outsb
or
mov
fdivrl
out
loop
fdiv
cmc
aaa
nop
xchg
addb
mov
xchg
inc
cmpsb
pushf
pop
nop
cmc
call
sbb
jle
push
pop
push
je
jmp
inc
mov
lahf
insl
jne
xchg
sbb
ss
adcl
adc
negb
cltd
jbe
cwtl
mov
push
push
xchg
push
mov
cs
cmp
fwait
call
push
ja
lods
dec
cmp
mov
decl
repz
adc
xchg
fdivl
cmp
cmp
out
xlat
daa
jge
iret
imul
je
sti
push
scas
dec
shlb
pop
push
cmpsb
loopne
arpl
push
std
aam
ljmp
adc
push
jp
testl
inc
xchg
lret
leave
cld
hlt
nop
push
mov
out
sub
bound
xchg
scas
jnp
sbb
fisubrs
cmp
inc
pusha
mov
je
test
cld
lret
bound
xchg
inc
dec
mov
cmp
xor
xchg
cmpsl
cltd
enter
pop
sbb
pop
xor
or
xor
cs
add
cld
inc
sti
and
orb
mov
outsl
fiaddl
shrl
in
clc
hlt
ficomps
push
pop
cmp
fs
dec
and
leave
or
push
sarb
xchg
mov
dec
clc
je
add
cmp
ret
dec
movsl
jno
jecxz
sbb
adc
or
and
cmp
or
mov
dec
xor
movsb
in
das
ud1
aaa
addr16
mov
sbb
dec
and
cmp
in
xchg
push
jg
mov
out
rcll
sub
pusha
jae
push
out
pushf
cmpsl
sbb
jecxz
jno
xor
inc
inc
stos
out
inc
pop
jbe
jns
ret
push
adc
push
push
sub
inc
cmp
inc
fsubs
and
dec
push
insb
inc
cmp
adc
pop
jp
dec
aas
pop
int
ljmp
out
cmc
mov
pop
sub
sbb
xor
std
xchg
dec
jne
cmp
mov
mov
inc
jo
les
shrb
testb
mov
sub
pop
lret
out
push
lahf
adc
frstor
in
add
inc
ret
vminss
sub
push
mov
cmp
xor
pop
imul
into
jecxz
sbb
sbb
outsl
push
jnp
out
dec
or
jo
dec
shl
lcall
cmp
enter
leave
ss
shll
icebp
add
movsl
das
sbbl
hlt
lret
pop
inc
pop
mov
cmp
xor
mov
jmp
aaa
mov
cmpl
sbb
pusha
leave
js
push
rdpmc
imul
push
daa
pushl
push
je
sahf
sub
stos
call
mov
dec
es
dec
jae
fistpll
dec
mov
shlb
lahf
cmpsb
aaa
xacquire
in
mov
xor
push
data16
sbb
pop
mov
inc
mov
pop
mov
adc
add
pusha
repz
sbb
shrb
adc
ljmp
or
sarb
mov
mov
dec
jmp
xchg
dec
dec
imul
jo
adc
mov
mov
jmp
sub
sub
sbb
sbb
outsb
loop
mov
xor
sub
lret
cmpb
mov
hlt
sbb
mov
push
dec
lret
sub
cli
pop
jnp
arpl
sti
int3
mov
lods
mov
fsubr
cs
out
add
dec
xor
jb
int
in
and
mov
leave
std
adc
pusha
into
repz
sbb
inc
mov
cwtl
cltd
xor
faddl
lods
rorb
fisttpl
inc
jb
daa
mov
inc
mov
incl
ss
cltd
fs
pop
pop
loope
andl
outsl
xor
mov
stc
movups
jo
in
lahf
pop
cltd
jecxz
bound
and
idivb
icebp
cmp
lea
out
or
xor
cltd
shlb
pop
and
pusha
ret
movsb
sbb
ds
mov
add
jne
pop
pop
bound
sub
dec
das
dec
push
and
mov
ljmp
test
add
loopne
jnp
xlat
and
int3
int3
int
xor
xchg
push
or
loope
sub
icebp
mov
xor
jmp
mov
scas
aas
push
insb
pop
cmp
jnp
fldl
add
push
imul
int3
push
push
stos
hlt
aas
out
andb
lods
mov
decl
daa
call
cmpsb
inc
pop
stc
andb
cmp
mov
mov
repz
test
ds
push
mov
sbb
mov
imul
std
push
sub
pop
stos
pusha
mov
push
xlat
ljmp
inc
and
mov
loop
jge
repz
fs
xchg
in
mov
icebp
hlt
sbb
sub
imul
mov
sub
push
adc
dec
std
dec
push
out
inc
scas
scas
dec
pop
sbb
dec
daa
jge
add
xor
push
arpl
inc
fs
scas
xchg
pop
dec
xchg
data16
ds
dec
ja
sub
std
add
fnstenv
pop
sub
jb
cmp
jg
push
in
jge
and
loope
pushf
pop
xor
les
dec
lods
xchg
inc
mov
xlat
xchg
mov
jecxz
lea
jo
out
lahf
xacquire
addl
imul
mov
mov
add
outsl
inc
and
add
insl
lahf
shll
jge
xor
call
dec
push
imul
jmp
mov
push
out
mov
data16
jae
in
dec
das
xchg
push
xor
icebp
loop
or
out
or
pop
mul
jg
pop
sbb
sarb
ljmp
pushf
addr16
sbb
addr16
push
and
jae
mov
out
cmpsb
xor
nopl
mov
sub
scas
push
jns
cmp
aad
call
mov
jecxz
pop
std
loop
iret
jg
js
xchg
mov
adc
add
repnz
sahf
jmp
aaa
icebp
mov
dec
jnp
jnp
lods
pop
xchg
pushf
aaa
jle
leave
xchg
sub
or
aam
jmp
in
pop
icebp
std
pop
imul
icebp
stc
jle
push
push
les
ret
push
xlat
ljmp
hlt
test
or
mov
arpl
repz
je
mov
lds
dec
es
fisttpll
pop
mov
pop
repnz
dec
push
pop
push
add
je
inc
in
inc
repnz
pop
arpl
cmp
ret
xchg
int3
xchg
adc
pusha
test
out
mov
aaa
dec
cmp
arpl
cmp
ret
mov
dec
inc
xchg
mov
or
imul
imul
cli
movsb
xchg
jno
fwait
scas
test
adc
mov
and
pop
and
xchg
insb
mov
ror
pop
ficomps
pop
jns
push
icebp
or
repz
push
xchg
sub
push
sbb
popa
or
dec
leave
mov
push
mov
pop
mov
adc
outsb
repz
fcompl
and
enter
cmc
pop
mov
xchg
or
xorb
and
in
aaa
fmul
hlt
cmp
mov
out
mov
inc
pop
sub
es
push
push
and
ss
xor
ds
test
push
cli
cmp
push
push
addr16
mov
fidivl
pop
sub
inc
mov
les
mov
call
incl
int
stos
out
ficoms
ret
fcompl
daa
jg
mov
insb
push
ss
aaa
in
jnp
ss
xchg
mov
jo
movsb
je
ljmp
repnz
and
repz
inc
or
aad
and
pop
xor
adc
pop
jb
jae
insl
push
adc
push
adc
push
lret
or
push
lahf
imul
popa
insb
lods
popf
subb
pop
jmp
push
ljmp
xchg
dec
inc
adc
pop
sub
mov
adc
dec
xor
scas
test
mov
and
test
fsts
dec
adc
xchg
sahf
andl
jg
mov
sub
loop
lock
cmp
jns
mov
das
inc
cmp
fsubrl
xor
add
mov
cs
or
adc
bound
out
inc
hlt
dec
xchg
es
cmpsl
adc
sbb
adc
and
adc
add
pop
push
push
or
pop
mov
or
jo
jmp
inc
push
lret
xor
lret
pop
jg
mov
add
pop
rcl
je
insl
arpl
jl
mov
int3
xchg
or
push
push
mov
fiaddl
das
lods
xchg
jno
imul
pop
jg
not
sub
ds
stos
call
or
repz
shl
or
out
imul
dec
cmp
movl
sbb
out
test
imul
orb
je
inc
xchg
jae
jmp
repnz
cli
sbb
xlat
push
cmp
or
mov
popa
dec
clc
stos
pop
xchg
mov
call
push
cli
out
adc
in
mov
fsubr
xchg
aas
jbe
xlat
add
lock
idiv
and
clc
ficoms
sub
mov
dec
insb
fiadds
lds
lea
in
xchg
or
mov
fiadds
push
push
mov
outsb
movsl
es
sbb
push
popa
fucomp
lcall
fsub
mov
enter
sub
fstp
pusha
mov
cmp
pusha
fnstsw
mov
xor
dec
and
xchg
xchg
xchg
pusha
loop
aas
je
xchg
movsl
popa
jbe
and
out
dec
mov
addb
xor
jo
out
out
jae
popa
repz
xchg
loop
mov
movsl
shll
es
push
mov
insl
scas
loop
adc
movsb
lret
cmp
ret
push
push
fdiv
sbb
adc
les
stc
jno
ja
mov
dec
and
mov
iret
cmp
mov
xchg
add
adc
pop
mov
pop
mov
clc
test
dec
imul
lock
mov
and
jle
pop
mov
cmpl
decb
sub
xor
or
imul
lar
add
push
call
jae
repnz
add
xchg
cmp
int3
mov
mov
mov
adc
insb
push
ds
push
dec
cwtl
mov
mov
stos
adc
lret
pop
arpl
insb
adc
add
dec
icebp
frstor
lret
orl
xlat
int
rorb
notb
and
push
mov
xor
cmp
mov
xor
push
es
movsb
fistps
dec
push
mov
loope
jo
hlt
jecxz
test
out
ja
out
pusha
imul
lock
add
scas
cmp
add
scas
cmp
add
adc
cmp
ds
push
sbb
aad
inc
inc
es
cld
fwait
pop
cmp
sub
add
mov
inc
ret
cmp
xchg
pusha
hlt
push
fldenv
out
test
mov
addr16
push
ja
idivb
ret
call
jbe
scas
inc
mov
aas
and
addr16
add
and
bound
inc
ficoms
fcompl
push
xor
jno
xor
sub
xchg
inc
insb
push
shll
sub
inc
loopne
pop
mov
movsl
fwait
xor
mov
mov
popa
push
gs
cli
mov
cltd
clc
repnz
jp
inc
icebp
data16
mov
add
inc
xchg
sub
fcmovb
or
mov
sbb
push
sbb
jbe
xchg
clc
push
cmpsb
xor
lahf
mov
scas
mov
dec
or
lcall
imul
pop
inc
subl
in
jb,pt
fstpl
imul
jnp
addr16
cs
add
mov
lcall
mov
cmp
cmp
in
in
into
dec
or
mov
jge
insb
movsb
jl
dec
and
cmp
dec
fwait
ret
xchg
jns
insb
nop
jle
scas
adc
movsb
sbb
je
call
adc
add
push
sub
jno
shl
mov
repz
push
adc
or
test
movsl
sub
sub
mov
or
loope
adc
xor
pusha
daa
mov
adc
stos
mov
iret
and
inc
mov
test
cmp
pop
sbb
push
in
rorb
andb
mov
cmovp
loopne
mov
rorl
data16
mov
scas
mov
mov
cmp
and
cltd
hlt
pop
je
cmp
lock
sbb
lds
inc
out
sbb
jmp
ret
je
push
mov
inc
nop
mov
daa
jno
inc
push
icebp
cmpsb
sub
jl
loopne
clc
jbe
test
daa
or
lock
mov
cmp
aad
aas
xchg
push
adc
or
dec
pop
xor
ss
cmp
pop
mulb
xchg
out
xchg
imul
pop
fistpll
push
mov
mov
cs
lcall
push
push
aas
pop
outsl
adc
icebp
push
push
movsb
mov
mov
xlat
test
xor
ds
xor
add
xchg
imul
xchg
loopne
jmp
fdivs
dec
xor
pop
gs
dec
rorb
mulb
pop
jnp
out
push
mov
xlat
aad
imul
sbb
int
iret
faddl
push
sar
mov
cltd
gs
in
mov
mov
scas
fmul
push
imul
fstpl
ret
mov
test
jne
mov
cmp
xorb
jbe
mov
iret
mov
clc
lods
pop
cmp
push
insb
sub
jo
jns
xchg
adc
outsl
mov
xchg
fnstcw
aaa
xchg
test
ds
cmp
cwtl
and
pop
cwtl
mov
sbbb
push
or
jo
xor
rorl
decb
cld
mov
cwtl
push
in
je
shlb
jns
imul
ja
arpl
pop
mov
push
add
outsb
add
jle
mov
mov
fstpl
sti
jmp
pusha
push
ret
pop
jne
movsl
aam
mov
movsb
out
test
mov
ret
or
lods
xchg
mov
test
xchg
sbb
popf
jns
mov
sub
je
data16
adc
stos
mov
jg
lret
imul
movsb
movb
loopne
dec
or
mov
pop
xor
xchg
pusha
lret
cmovb
xchg
fcoml
pushf
push
pop
pop
inc
lock
push
stc
shl
repnz
ja
xchg
pop
sbbl
adc
jo
sbb
aas
pop
pop
nop
arpl
jbe
das
das
jg
insb
cs
add
push
mov
push
aas
incl
fs
sub
das
cmc
clc
nop
es
fs
pop
cs
and
ret
adc
icebp
push
mov
stos
outsl
adc
lds
mov
loop
mov
jb
inc
inc
push
stos
xor
push
aaa
mov
mov
sub
sbb
mov
pop
mov
and
test
es
sbb
xchg
mov
jecxz
clc
outsl
cmp
loope
sub
jle
fwait
mov
enter
cmc
ljmp
dec
outsl
xchg
jno
jbe
scas
hlt
call
push
fimull
dec
jns
insl
int
pop
sub
cmp
adc
fsubl
cmp
rolb
add
dec
stc
pusha
imul
mov
pop
sub
scas
popf
xor
xor
mov
add
fisttpll
push
cltd
xchg
xchg
inc
jo
leave
mov
mov
sbbl
inc
sub
shrb
in
pop
arpl
jbe
fs
mov
lods
mov
loope
js
stc
mov
adc
in
movsl
inc
sbb
das
test
pushf
mov
and
js
mov
stc
int3
sub
sub
adc
iret
sub
jnp
ja
xor
cmp
push
jno
add
movsl
cmpsl
fcomi
ss
push
push
lret
lea
jmp
mov
cmpb
or
xor
mov
pop
hlt
xchg
adc
or
mov
jl
imul
xor
dec
mov
add
rcpps
mov
and
nop
aam
mov
aas
mov
jmp
push
sub
adc
pop
std
cmp
aam
xor
shrl
mov
in
xor
inc
inc
stc
popa
movsb
cmc
fnstenv
sbb
dec
ljmp
sub
and
push
loopne
adc
mov
push
push
mov
adc
push
pusha
mov
lret
inc
addr16
add
and
pop
push
push
ljmp
xor
fcmovb
arpl
dec
in
jb
mov
scas
sub
add
std
push
or
mov
loopne
bound
push
outsb
ret
jo
dec
mov
xor
aam
or
fs
or
xor
fs
xchg
shll
pusha
mov
enter
bound
push
iret
addb
jbe
scas
dec
aas
cs
adc
jmp
test
xchg
stos
insb
orb
xor
clc
jg
aad
aaa
or
mov
repnz
frstor
push
xor
stos
add
mov
loope
sti
or
insl
push
stos
xchg
push
mov
scas
cmp
es
mov
ss
cld
test
sub
sub
pop
mov
ds
fstpl
mov
out
add
loope
scas
insb
pop
loop
xchg
cmpsb
call
push
mov
pop
push
shll
and
in
push
sbb
pop
cs
cmp
inc
in
inc
loope
and
mov
sahf
repz
xchg
mov
push
push
fimull
push
mov
dec
fisttpll
jmp
mov
iret
cwtl
mov
pop
mov
and
fxch
fidivl
mov
jmp
test
icebp
push
or
xcrypt-cbc
cmpsl
xchg
pop
fisttpl
jecxz
bnd
xchg
adc
mov
add
xor
loope
jg
rorb
push
cmp
pusha
sbb
mov
push
jae
loopne
jnp
orl
adc
xlat
cmp
mov
mov
and
push
push
aaa
int3
mov
sub
sbb
fs
and
cmc
mov
dec
xor
iret
adc
mov
mov
fwait
sbb
mov
jl
cmp
inc
mov
mov
imul
loope
lret
iret
outsl
adc
aad
fs
out
arpl
sub
sbb
pushf
popf
xor
jp
out
dec
mov
adc
pop
nop
imul
pop
ss
cmp
in
mov
imul
sub
rolb
or
sbb
aaa
icebp
xchg
sbb
sbb
dec
push
jo
cmp
add
xor
add
push
insb
push
mov
test
push
sub
je
jno
push
jl
repnz
and
lret
cmp
pop
cli
xchg
je
into
lods
jns
dec
pusha
cmp
iret
jg
mov
ret
pop
and
cs
dec
mov
testb
sub
xor
sbbl
adc
mov
out
arpl
leave
sub
inc
mov
adc
lock
adc
dec
cli
and
push
jge
lods
out
ss
adc
dec
mov
mov
loopne
lea
push
jp
mov
lods
add
iret
fwait
push
scas
xchg
clc
cmp
stc
pop
xchg
inc
in
mov
out
add
in
loopne
stc
mov
jb
movsl
cmpl
pop
mov
adc
sub
mov
pop
outsl
sbb
lcall
mov
pop
inc
outsl
mov
dec
cli
leave
bound
rorb
push
lahf
sub
imul
inc
cwtl
fsubrs
das
sbb
inc
sbb
fidivrl
push
aad
in
mov
xchg
and
xchg
sub
inc
xor
push
ljmp
adc
mov
dec
or
xor
ja,pt
insb
xchg
mov
pop
push
mov
popa
push
xor
outsb
jns
and
push
or
sub
addr16
testb
and
lahf
popl
dec
push
push
sub
ficompl
lret
add
popa
mov
hlt
test
out
dec
and
test
decb
cmp
nop
jmp
subl
inc
sub
push
adc
push
aas
imul
sahf
and
fldenv
mov
add
fistl
jmp
pop
lods
pop
xchg
cmp
cmp
cmp
cmp
sbb
int
gs
sub
call
and
xchg
mov
xchg
pop
int3
test
mov
pop
jle
lcall
and
adc
loopne
pop
nop
aaa
pusha
dec
sbb
sbb
dec
fdivp
das
lcall
push
push
dec
das
and
pop
mov
mov
xchg
out
dec
xchg
aad
gs
sbb
sbb
xor
sbb
adc
jne
sub
lret
aas
mov
out
xlat
mov
ja
xor
or
push
ret
and
fcom
fldt
into
dec
das
add
cs
lods
ret
push
xchg
clc
cmovno
je
push
add
lahf
mov
xor
jb
cs
jb
inc
in
and
addr16
insl
inc
addr16
outsb
push
stc
fimuls
add
lret
js
xor
jmp
fs
or
mov
jg
xchg
shll
or
sub
xchg
addr16
jbe
notl
and
adc
out
iret
or
outsb
xchg
popa
pop
ds
or
pop
add
mov
add
adc
mov
pop
xorb
stos
cld
fstpl
leave
cmp
lret
loopne
or
in
stc
xor
aas
stc
sbb
out
sbb
push
and
daa
pop
sub
pop
push
lock
push
cmp
jns
pop
mov
test
mov
roll
addr16
xor
cmpsb
xchg
mov
dec
cltd
adc
movsb
pop
push
xor
jo
pop
xchg
mov
aad
aad
xchg
add
sub
mov
loopne
pop
xor
add
or
cmpsl
outsl
ss
xchg
sti
mov
shrl
negb
push
inc
sahf
fnstcw
popf
adc
out
mov
outsb
dec
push
and
popf
dec
add
adc
mov
mov
push
push
or
inc
sbb
jg
into
hlt
cltd
adc
push
jns
clc
ja
nop
das
fwait
js
and
daa
pop
rcr
jl
mov
jae
mov
ja
xchg
or
mov
mov
fs
out
jnp
jae
sub
sub
fidivs
add
sub
adc
into
andl
add
lods
adc
dec
or
jno
fcmovnb
insl
dec
xchg
mov
aad
dec
xor
or
arpl
std
gs
dec
sub
and
sbb
push
sub
jmp
fidivs
fs
push
test
add
test
or
xchg
xchg
xor
icebp
add
out
mov
inc
sub
ja
pop
xorb
dec
jno
sub
fldenv
jmp
xchg
add
cmp
enter
lds
and
inc
push
cmpsb
test
fstps
hlt
insl
pop
dec
data16
and
stos
adc
or
outsb
imul
push
mov
ljmp
lods
out
jg
std
add
arpl
daa
xchg
aaa
or
inc
sbb
js
fnstcw
scas
push
std
dec
jp
cmp
mov
rolb
jns
adcb
xor
mov
cmp
cmp
mov
push
push
and
bound
inc
cs
push
rcrl
xchg
test
xor
loopne
cli
sbb
jno
pop
pusha
cmp
push
push
repz
sub
imul
insb
test
in
cmp
mov
js
aad
daa
bound
movb
or
xchg
jp
sbb
sbb
pop
sub
pop
mov
mov
stos
lods
sub
lds
in
push
insb
arpl
mov
lods
pop
int3
in
lods
in
rcrl
fmuls
sbb
adc
leave
stos
inc
incb
mov
inc
jb
movsb
dec
dec
sub
push
cltd
xchg
test
fiaddl
or
xor
adc
xor
cmp
jge
cmp
std
sbb
scas
inc
xchg
xlat
addr16
pushf
xchg
xlat
movl
sbbl
xchg
add
jnp
and
cltd
xor
add
sbb
call
pushf
imulb
xlat
push
shll
add
popa
fmuls
rclb
adc
aam
scas
adc
mov
aad
jg
outsl
lods
sti
xchg
ds
lods
imul
cwtl
inc
cmpsl
add
cmp
out
or
pop
sbb
int
jg
adc
lret
push
mov
mov
leave
outsb
pop
repnz
mov
jbe
mov
pop
shl
push
lahf
and
cmp
lock
lahf
movsl
mov
in
scas
sub
das
das
add
shr
xor
popf
and
push
sub
xor
ja
outsl
pop
iret
mov
mov
add
js
add
in
cmc
cmp
jne
jae
insb
cltd
fwait
or
ret
stos
push
aam
shll
mov
add
mov
lahf
push
cwtl
mov
mov
gs
pop
jg
lock
das
aas
js
inc
mov
jnp
movsl
sub
iret
xchg
pop
in
dec
int3
inc
nop
sbb
fucomp
iret
push
or
out
out
dec
push
adc
mov
ljmp
inc
lods
pop
popa
jo
jnp
rorb
inc
push
xor
push
leave
scas
pusha
push
mov
in
lods
imul
dec
repnz
and
sub
xchg
mov
ds
pop
or
add
push
insl
lret
sub
mov
arpl
push
xchg
sbb
cli
adc
arpl
into
mov
jge
call
jb
add
add
xor
popa
pop
add
xor
mov
andb
scas
fsubrl
lods
dec
insb
stos
adc
lret
add
pop
out
mov
inc
add
or
jbe
lds
shll
pop
xor
inc
bound
pop
or
lock
sub
sbb
inc
mov
lahf
xor
xor
mov
inc
adc
mov
loop
in
push
mov
ret
pop
daa
mov
or
mov
std
xor
stc
aam
fs
jns
cli
jecxz
dec
xchg
cmp
sti
sbb
xchg
mov
xor
push
push
sub
or
xchg
or
push
jae
push
inc
cmp
mov
sbb
sub
test
mov
jg
loope
icebp
and
pop
das
aaa
fdivs
lcall
dec
push
out
scas
test
inc
jp
les
dec
adc
stos
adc
and
xor
jb
fldt
sub
gs
mov
cli
add
adc
xor
subl
lea
aam
mov
jge
and
push
pushf
lods
push
xchg
jle
shrb
fldt
mov
fistpll
repnz
sahf
fldl2e
xor
jge
sbb
pop
int
mov
pop
repz
sti
and
test
cmp
fidivs
sbbb
jl
mov
cmpb
icebp
ret
ds
xchg
mov
jns
dec
cmp
jo
xor
xor
mov
insl
imull
popa
std
xchg
jg
ret
dec
mov
adc
flds
and
fidivl
scas
mov
push
fistpl
mov
imul
pop
xor
imul
out
scas
jg
ret
mov
add
das
pop
cld
mov
mov
jg
nop
testl
paddw
filds
jl
xor
mov
out
js
push
lods
dec
jmp
jnp
lret
cmpsb
jns
or
pushf
jbe
mov
lret
lea
insb
sub
mov
xchg
test
ljmp
jno
pop
ljmp
mov
xor
fwait
lods
sub
inc
lods
cmp
mov
mov
je
push
ret
pop
data16
add
out
cmp
sub
xor
gs
inc
out
fwait
cmp
outsb
sbb
mov
aas
or
aaa
jns
insb
sahf
incb
pop
jae
cmpsb
sti
lods
icebp
and
ret
pop
dec
push
stc
jmp
push
lcall
outsl
mov
ret
mov
les
mov
or
push
hlt
sub
scas
dec
out
les
cli
push
cmp
mov
repnz
test
adc
hlt
jb
add
mov
fadd
mov
ret
scas
push
cmp
pop
ja
addr16
push
shr
jle
push
movsl
push
jno
pop
mov
push
ret
sub
push
push
mov
or
jle
inc
mov
xchg
ds
jle
or
ds
xchg
loop
aas
out
movsb
addr16
ds
cmp
adc
xchg
xchg
lds
push
push
sti
xchg
jbe
jge
aas
pop
jle
jg
fwait
jno
push
scas
pop
cs
arpl
xchg
fldt
cmp
xor
icebp
jno
punpckhwd
xor
dec
ret
ja,pn
push
adc
push
out
pop
inc
push
iret
jmp
add
pushl
mov
jg
pop
call
add
push
inc
adc
jne
loop
jle
je
jnp
insb
sbb
xor
test
popf
test
jle
add
sbb
cli
jg
jg
pop
cmp
and
push
subps
in
jp
pop
and
cmp
sub
scas
jle
ret
mov
adcb
out
pop
push
dec
outsl
pop
gs
jle
or
push
ljmp
jle
outsl
sub
ret
pop
mov
xchg
add
gs
mov
aaa
jns
mov
mov
inc
pop
cld
push
or
ficoms
mov
push
cmp
pop
ljmp
push
call
xor
lods
push
ja
stos
push
cmp
mov
and
mov
push
and
inc
sub
sbb
jbe
adc
jb
pop
xchg
insl
add
js
fs
add
sub
inc
dec
shll
push
leave
sbb
pop
or
std
jl
or
push
out
pop
dec
jecxz
xor
pop
cmpsl
imul
out
leave
inc
cmp
xor
cmp
test
movsb
push
mov
add
adc
cmp
ficompl
push
sbb
repz
icebp
dec
sbb
paddsb
jae
sbb
shl
push
inc
addr16
nop
adc
jmp
outsb
cltd
inc
adc
inc
sbb
xchg
out
push
ds
in
je
pop
scas
jbe
push
ss
push
mulb
mov
js
xchg
pop
pop
pop
xchg
pop
mov
inc
pop
cmpsb
pop
dec
push
cwtl
xchg
pop
scas
pop
xchg
push
xchg
jns
mov
jae
add
stc
stc
sub
cwtl
pop
jmp
sbb
rorl
scas
xchg
outsb
sbb
stc
decl
xor
mov
ds
cmc
mov
inc
mov
xor
xchg
loope
push
leave
pop
cmp
imul
xor
bound
cmp
in
aaa
fxch
pop
aad
outsl
mov
aas
mov
aam
ds
fdivrl
xchg
imul
inc
jno
ds
xlat
mov
fists
out
dec
repz
jbe
es
sbbb
and
outsb
fwait
aaa
imulb
rclb
out
jecxz
jne
jno
lods
test
cmp
mov
jge
int
aam
xchg
imul
in
cmpsl
cmpl
addr16
popa
jge
mov
movsl
dec
insl
push
jno
aas
xchg
rol
xor
push
cs
pop
dec
sub
xchg
pop
iret
adc
or
or
mov
sbb
jns
jno
push
and
adc
jne
not
jp
mov
sti
mov
sub
imull
insb
rcl
push
dec
adc
jo
mov
fisubrl
jb
mov
fcom
shl
lret
je
or
aaa
jl
mov
std
jmp
mov
bound
arpl
jb
das
je
popl
popf
int
sub
push
add
jl
sub
sbb
mov
push
or
test
testb
pop
shlb
push
dec
shl
push
fisubrs
or
jmp
pop
dec
pushl
adc
aaa
out
jb
xchg
jnp
dec
jle
pop
insb
and
add
jb
cmp
out
aaa
jae
or
cmp
jne
mov
push
mov
jecxz
mov
fcomp
outsl
and
inc
jo
jo
shl
sbb
movsb
mov
mov
cmp
xchg
jl
mov
int
adc
clc
vmovdqa
loope
aaa
lret
inc
jg
out
mov
outsb
scas
loope
xlat
test
cmp
addr16
sti
sbb
cld
not
push
fcomps
cmp
lds
xchg
imul
bound
push
mov
jns
jne
pop
pop
pop
push
push
fdivs
cli
mov
pop
out
gs
scas
jns
add
inc
or
cmp
dec
out
adc
mov
sbb
rep
mov
inc
and
repnz
lahf
negb
inc
push
sbb
or
into
icebp
adc
scas
cltd
dec
iret
push
lods
clts
sbb
jg
xor
mov
daa
push
add
dec
into
xor
stos
cltd
mov
jbe
aaa
push
xchg
out
repnz
mov
xchg
rorl
out
adc
push
add
push
adc
dec
xchg
sbb
pop
pop
inc
xchg
fstps
or
iret
daa
and
daa
js
mov
xor
sbb
mov
outsl
rolb
xor
pop
and
pushf
add
mov
outsb
inc
fsubrs
jo
add
mov
lock
adc
jecxz
mov
sbb
mov
sbb
fisttpl
push
test
sub
dec
mov
out
cli
mov
into
pop
mov
cwtl
jle
jno
adc
pop
xchg
lock
mov
or
test
lea
or
imul
or
cli
sbb
lcall
push
fdivr
out
dec
je
pop
outsb
sbb
mov
je
jnp
and
xor
pop
daa
in
xchg
mov
ja
in
pop
push
sub
lods
and
testl
push
outsl
test
fbstp
jecxz
add
dec
stos
inc
popa
test
adc
cwtl
in
fbld
div
mov
leave
or
jecxz
ds
push
out
jge
adc
lea
push
pop
add
push
cmp
pop
out
and
cmpsl
sbb
lcall
outsl
push
loop
cmp
cli
xor
out
mov
mov
lcall
push
sbb
lahf
adc
cmp
push
mov
into
popa
push
inc
outsb
xor
fldl
dec
imulb
in
mov
sbb
or
add
lret
push
adc
shl
je
lods
stc
imul
mov
jo
bound
adc
test
adc
js
pop
mov
and
adc
std
in
xchg
mov
xchg
add
fsubrs
cmp
out
sub
lods
xchg
push
xchg
push
mov
mov
add
lahf
pop
pop
stos
push
hlt
jns
sub
xor
daa
cwtl
data16
mov
push
jbe
fistps
cmpsl
add
push
jbe
jb
adc
add
push
les
ret
out
fimull
push
ss
add
leave
mov
sub
push
shl
movsl
jge
mov
xor
sbb
xor
push
xchg
insb
enter
sub
out
loopne
dec
xor
mov
mov
gs
xchg
push
mov
mov
pop
fidivrs
push
sahf
mov
cli
ret
pop
mov
sbb
jns
push
and
adc
mov
cmpsb
add
adc
inc
ds
push
cmp
xlat
push
enter
mov
fs
inc
out
jg
icebp
aas
outsb
sub
hlt
dec
cmp
popa
divl
mov
sarb
add
jg
push
in
ljmp
add
or
lods
fwait
mov
xchg
