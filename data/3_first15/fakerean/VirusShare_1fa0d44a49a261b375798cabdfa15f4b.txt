sbb
add
imul
pop
mov
cmc
inc
or
bound
cmp
ja
add
pop
dec
mov
rcrb
mov
in
mov
mov
cmp
xor
pop
popa
test
imul
sbb
jp
out
xchg
dec
jno
ss
mov
jae
movsb
fcoms
pop
stos
ds
xor
aad
or
pushf
rcr
aam
pop
out
push
sub
insl
ja
adc
ja
iret
popf
cmpl
or
mov
push
xor
shr
sbb
aad
lds
jns
sar
fs
mov
sbb
and
or
es
imul
pop
xchg
add
dec
mov
pop
mov
cld
push
mov
data16
js
sarb
adc
jns
adc
jl
dec
xor
push
sub
xchg
inc
xchg
dec
add
cmpsb
fdivrl
movsl
push
js
mov
nop
adc
cmp
sbb
negb
fnstcw
cmpsl
rcl
push
mov
mov
das
in
mov
mov
test
sbb
mov
jmp
repnz
cmc
pop
out
push
add
lea
test
cmc
sub
add
xor
clc
sarb
xlat
cmp
test
or
sbbl
cmpsl
leave
aas
add
push
push
or
cli
cmp
and
xor
add
test
pop
cmpsb
or
and
push
jnp
sbb
sbb
int3
xchg
clc
roll
lds
push
ja
mov
mov
jmp
mov
adc
iret
les
sub
popf
mov
push
adc
addl
jbe
loopne
xchg
mov
dec
nop
pop
sub
loop
push
push
rolb
add
pop
xchg
or
jl
cmp
test
std
dec
and
cwtl
ret
data16
in
arpl
or
push
and
or
cmp
mov
pop
pop
jmp
mov
xor
push
dec
fsub
iret
enter
sbb
xlat
out
mov
push
dec
add
cmp
sub
jbe
lret
sub
jne
push
pop
push
mov
xchg
jmp
icebp
push
inc
or
mov
daa
fiadds
xor
lahf
scas
rcrb
sbb
push
add
out
call
jg
and
stos
mov
shrb
push
pop
inc
bound
add
cmp
sbb
lods
and
xor
inc
enter
and
fimull
mov
adc
mov
sti
call
fsubr
into
sbb
ja
repnz
xchg
imul
mov
ret
cmp
fs
and
movsb
fistps
sbb
adc
dec
sbb
adc
out
gs
push
push
pop
add
jb
cmp
in
jno
pop
imul
jmp
jmp
push
dec
nop
inc
cmp
cmpsb
rcll
pop
jo
cmpsb
mov
lea
push
sub
mov
lods
sbb
xchg
and
push
shrl
pop
adc
sarb
sbb
outsl
stos
cmpsb
push
sbb
jo
bound
rcl
mov
and
adc
or
mov
movsb
lret
stos
xor
sub
shll
movsl
jo
pop
or
push
adc
add
gs
testl
out
jmp
in
sub
out
ljmp
or
mov
stc
mov
je
lock
pop
test
lods
sbb
or
add
in
out
cmp
dec
dec
int
or
jge
or
aad
push
mov
xchg
sbb
aam
jne
in
pop
dec
dec
sub
div
mov
outsb
enter
dec
jae
sub
lahf
jns
inc
push
lds
dec
int3
adc
aas
in
ret
sbb
cmc
adc
ja,pn
inc
or
outsl
in
mov
xor
rorl
xor
sub
inc
sbb
inc
mov
outsl
mov
mov
es
dec
push
mov
cmp
pop
inc
fisttpll
xlat
mov
fidivs
fistl
pop
adc
nopl
and
push
xor
sbbl
cmp
ret
outsl
mov
and
jo
ljmp
lahf
xchg
mov
lcall
push
outsb
test
ds
gs
mov
jo
ret
sub
adc
jne
aas
mov
ret
pop
enter
xchg
ret
into
cwtl
sbb
adc
and
or
add
fs
test
xchg
loope
loop
test
mov
das
push
inc
push
sub
aam
rcrb
mov
cwtl
push
jne
outsl
and
repz
sub
dec
jge
or
mov
mov
dec
ret
pop
mov
push
not
fisttps
xchg
jne
cmpsb
das
call
daa
mov
fdivr
cwtl
fnstcw
add
lcall
mov
mov
push
mov
jg
mov
or
loop
ror
and
jns
push
inc
cmp
cmp
les
add
cmp
add
rcrb
push
or
shl
mov
and
inc
dec
jns
andb
inc
inc
imul
sbb
sbb
ret
mov
mov
movsb
out
js
sub
ret
fcoms
out
psrlq
scas
jbe
xor
and
jns
mov
or
nop
inc
movsb
fdivl
fstpl
xor
xchg
mov
push
fadd
mov
aam
push
in
inc
adc
jne
out
andl
hlt
sti
aas
out
jns
adc
int
push
std
std
or
lea
stc
mov
and
xchg
cmp
ret
and
es
popl
cmp
or
sbb
in
shl
in
call
add
aas
fstpt
inc
jns
inc
jae
out
push
lds
lock
les
pop
lods
lea
std
out
mov
push
mov
jo
mov
loop
negl
xchg
lret
sub
jae
dec
xlat
nop
mov
scas
and
adc
mov
movsl
lock
mov
loope
pop
jne
pop
fistpl
cmp
pop
out
mov
imul
adc
bound
xor
inc
adc
push
jg
xchg
sub
pop
sbb
cmp
xchg
fsub
add
mov
cltd
pop
jb
jne
cmpsb
out
std
into
pop
or
icebp
mov
mov
ja
sub
cmpsl
int
stos
sbbb
jg
in
ficoms
xchg
add
sub
pop
jo
pop
ret
ret
sub
shl
sahf
ret
in
and
repz
cld
enter
cmpb
repnz
scas
lods
inc
xchg
mov
or
cmp
fmuls
pop
into
sbbl
pop
fnstcw
icebp
test
sub
mov
sub
xchg
icebp
add
mov
xor
dec
shr
jecxz
push
and
jb
lock
fidivs
out
jo
div
daa
xacquire
cli
adc
mov
xchg
adcb
movsl
clc
in
fistpll
sub
decl
xchg
and
mov
cwtl
mov
bound
lock
mov
mov
push
jp
and
add
push
sbb
cmp
pop
adc
xchg
insl
ret
imul
enter
jnp
out
or
xor
pop
lods
dec
lahf
sarb
push
test
lods
ds
fsubrp
sti
fmuls
dec
sub
stos
mov
sub
xor
mov
push
lcall
gs
cwtl
sub
mov
or
dec
cmp
mov
xor
dec
xchg
sub
mov
xorb
pop
jg
lock
sbb
mov
fs
cmp
out
and
lods
mov
xchg
stos
jge
js
popf
mov
xchg
mov
cmpsb
pusha
sbb
and
jne
mov
mov
push
aad
push
es
lea
repnz
add
push
jecxz
out
mov
es
mov
and
data16
nop
or
pop
sub
imul
imulb
ds
insl
add
mov
add
sbb
dec
iret
out
ja
add
jp
mov
dec
sbb
fsts
xchg
mov
or
andb
sub
popf
in
lock
movsl
inc
sti
mov
fcompl
push
mov
loop
fbstp
sbb
mov
rclb
xchg
lods
stc
pop
push
fs
fstps
sub
fnsave
fcmove
mov
mov
or
test
lods
jnp
int
shl
mov
inc
out
into
pop
xchg
in
inc
dec
ja
fbstp
mov
shlb
xorl
and
aam
addr16
and
adc
inc
jmp
shrb
clc
cmp
push
add
in
test
xchg
pop
pop
sub
sbb
ja
gs
xchg
xor
js
jnp
xchg
mov
shr
and
cmp
subb
mov
lods
pop
out
in
shl
sub
js
cmpsb
jge
add
fcmovu
add
push
jecxz
mov
xchg
adc
mov
js
add
test
sbb
ss
fidivrs
bound
mov
lods
pop
daa
xchg
push
shl
mov
sahf
cltd
xchg
adc
hlt
mov
fstpl
pop
nop
test
dec
mov
lret
fwait
jno
cmp
imul
or
pop
cmp
adc
xchg
xchg
dec
add
push
bound
mov
popf
or
push
dec
cli
adc
pop
roll
add
xchg
xchg
popa
imul
or
sub
les
xchg
out
leave
mov
xor
push
mov
cmpsl
aam
xchg
or
jnp
jbe
pop
stos
sub
xor
mov
adc
stos
scas
sbb
mov
in
dec
jmp
bound
pop
js
pushl
fcmovnbe
push
outsl
imul
hlt
jno
mov
fisubl
inc
icebp
leave
sti
enter
xlat
cwtl
jne
addr16
shlb
dec
or
mov
mov
iret
cmc
jmp
dec
mov
push
sbb
dec
xchg
stos
lods
jnp
incb
into
jg
in
add
pop
cmc
test
cltd
out
into
add
push
mov
add
cwtl
aam
and
mov
mov
dec
pop
fnstenv
int
iret
pop
mull
mov
les
mov
cwtl
pop
sbb
adc
and
or
idivl
test
dec
xor
mov
dec
int
rolb
aam
stos
xor
js
je
xchg
js
add
sub
mov
and
or
or
cmp
or
into
jnp
repz
sahf
inc
enter
loop
inc
xchg
dec
pop
add
dec
xor
pop
andl
int3
repz
lahf
in
or
out
rorb
inc
rol
sub
xchg
repz
int3
sbb
je
lahf
insl
mov
jo
loope
jle
sbb
test
xchg
out
and
dec
mov
cld
rclb
outsb
jb
push
jecxz
jae
mov
mov
dec
adc
gs
adc
cmp
sbb
outsb
mov
mov
xlat
and
dec
mov
and
shll
jg
sbb
push
outsl
stos
pop
dec
dec
adc
adc
ret
adcl
out
cmp
or
addr16
fstl
rcl
roll
es
mov
clc
pushw
sub
mov
cmpsb
insl
clc
inc
mov
sbb
outsb
or
inc
vmwrite
sub
sbb
ss
fldl
xor
bound
pop
je
jp
icebp
mov
popa
or
nop
nop
push
stc
stos
xor
cmp
push
push
cltd
or
mov
or
cs
mov
into
adc
jp
pop
jp
outsl
jmp
or
sbb
mov
fxch
sbb
cmp
ficoms
adcb
xchg
inc
fs
das
ret
pop
cmp
sub
popf
aas
pusha
xchg
jecxz
cs
cltd
les
or
test
mov
inc
gs
inc
hlt
pop
adc
pop
xchg
xchg
push
xor
sbb
pushf
cmp
pushf
stc
inc
mov
inc
cltd
inc
inc
int3
sbb
pop
cmp
or
outsb
mov
inc
fistps
fwait
mov
jbe
push
aam
imul
enter
add
ret
pop
movsl
sbb
aam
cmpsl
adc
mov
dec
ret
stc
xchg
shlb
subb
hlt
mov
cld
mov
cmp
push
adc
xlat
mov
dec
loop
inc
and
xor
imul
fdivrl
mov
pop
mov
ficompl
je
icebp
fs
mov
je
sbb
xor
in
jmp
stc
and
insb
lahf
dec
dec
and
mov
aaa
pop
lcall
push
and
cltd
sbb
pop
dec
imul
xor
dec
mov
pusha
cmpl
aad
xor
imul
dec
jns
into
mov
into
push
test
inc
xchg
shll
xchg
in
and
sbb
mov
sbbb
rcrl
fimuls
mov
jge
setae
xchg
and
push
out
outsl
cmp
xorb
cmpsb
add
das
shlb
jmp
xchg
push
add
or
and
std
mov
xor
divl
jb
stc
xchg
repz
in
shlb
mov
cld
jo
cli
xchg
lcall
cmp
cld
lock
ljmp
in
lret
mov
cmp
faddl
lods
cmc
dec
pusha
xchg
mov
sub
mov
sub
addr16
imul
fs
mov
jae
ror
ja
lret
xchg
mov
sub
xor
push
cmp
icebp
ret
dec
jecxz
ss
jl
mov
pushf
xor
push
mov
push
mov
xchg
mov
or
pop
andb
mov
xchg
adc
std
loope
or
mov
call
fidivl
into
mov
loope
or
pop
pop
dec
adc
fldenv
mov
mov
std
ljmp
out
das
add
dec
jp
pop
push
ss
push
mov
fiaddl
mov
add
push
and
in
jecxz
sub
push
sub
pop
sub
fildll
testb
xchg
xlat
cld
jno
xchg
outsl
sub
sbb
pop
out
push
mov
mov
addr16
dec
daa
push
int3
push
out
pop
es
xor
pop
mov
add
mov
push
fs
jbe
sub
pop
js
mov
adc
test
out
xor
jp
ret
ljmp
icebp
sbb
icebp
lods
cmc
adc
push
cmp
mov
imul
aad
movl
loopne
jle
ds
ret
xchg
pop
les
push
incb
sbb
add
pop
cmp
nop
pushf
insl
stos
imul
mov
push
nop
imul
dec
lds
test
jp
in
pushf
mov
fisubs
pop
rorb
push
mov
ja
inc
push
call
popa
insb
and
cwtl
dec
adc
add
inc
data16
xor
push
sarb
je
jecxz
mov
adc
and
cld
addb
mov
enter
push
inc
cmp
mov
pop
fcmovb
xchg
test
lods
repz
dec
inc
into
ja
or
lock
mov
std
jns
lcall
push
ret
cmc
std
lock
push
rcr
xchg
std
pop
nop
xlat
lret
pop
jb,pn
out
in
rorb
roll
mov
in
inc
leave
out
rolb
clc
push
ljmp
lret
dec
dec
mov
sbb
ss
ljmp
push
divl
jmp
jb
sub
inc
outsl
nop
pop
inc
add
test
lcall
add
stos
lods
mov
and
cmp
cld
jne
dec
int
in
sahf
sahf
and
iret
scas
mov
cmpsb
dec
not
inc
insl
orl
fcmove
jae
dec
inc
cmp
add
push
stc
sti
dec
or
pop
lods
xchg
add
or
push
jge
inc
xchg
je
pop
repz
mov
stos
sub
incb
cmp
jp
fmuls
stos
cmp
es
push
push
xor
insb
lock
shrl
pushf
dec
nop
pushf
movsb
mov
or
icebp
sbb
call
and
push
jmp
dec
into
push
mov
jmp
js
inc
sbb
mov
pop
ss
mov
sbb
dec
popa
mul
sbb
fiadds
jg
and
jmp
int3
in
push
addr16
out
aas
lock
ljmp
into
dec
pop
mov
cltd
cmpsl
aam
sub
and
fcompl
sub
cmc
jno
rcr
push
jnp
jp
icebp
and
adc
insl
mov
jnp
cmp
lretw
push
mov
cmpsl
jecxz
xchg
insb
popf
cltd
pop
mov
movsl
shrl
icebp
push
cltd
xchg
out
sub
fwait
or
mov
pop
add
mov
and
sub
pop
cmc
test
jne
pop
fwait
add
mov
inc
lret
push
push
lea
add
out
fdivl
mov
ljmp
scas
jbe
mov
cmp
mov
adc
xor
js
xchg
sbb
out
lret
adc
sub
push
inc
out
jecxz
sbbl
sub
fisubrl
adc
test
icebp
mov
mov
cmp
negb
jo
ds
push
test
mov
cmpsb
inc
popa
popf
pusha
mov
adc
sub
dec
or
icebp
cs
pop
cmp
mov
out
or
mov
imul
popa
and
pop
sub
fisubs
dec
arpl
aad
mov
xchg
add
push
loopne
aas
out
add
aas
add
lds
jg
push
xlat
sbb
enter
loopne
cmp
and
sbb
mov
and
decb
stos
xchg
daa
or
sbb
add
into
adc
xchg
int3
arpl
pop
jle
scas
mov
jae
sub
ret
xor
push
ficompl
jmp
icebp
jl
inc
iret
shrl
ja
hlt
cmpsb
mov
xchg
mov
mov
sbb
leave
outsl
in
inc
pop
cwtl
add
iret
sbb
xchg
loope
repnz
insb
test
push
mov
enter
xchg
cmc
ja
fldcw
jg
cmp
lcall
xor
test
add
outsl
add
fistps
fld
lods
jl
movsl
sub
int
inc
arpl
inc
fdivrl
cmc
mov
add
push
insl
and
jge
loope
sub
jp
cmp
and
lret
and
pop
nop
lahf
push
jnp
xlat
scas
mov
movsb
out
rcrb
rorb
push
aam
sbb
or
mov
mov
ds
or
orl
push
js
mov
ljmp
fwait
mov
imul
fs
es
jae
mov
int
popf
leave
pop
notl
jle
or
notl
xchg
pushf
and
sbb
xchg
push
or
and
int
push
mov
adc
dec
adc
sub
sbb
sbb
addr16
xorl
jae
loopne
dec
jl
scas
or
loopne
mov
arpl
ljmp
inc
jo
and
pop
faddl
loope
sbb
ret
fisubrs
enter
cmpsb
pop
jae
jnp
fs
data16
js
pop
loope
mov
pop
dec
data16
rorb
es
push
mov
inc
cltd
mov
push
mov
push
push
ss
dec
mov
cwtl
sar
lret
or
push
sarb
loop
jo
inc
jle
lahf
das
push
sub
mov
sub
push
mov
jbe
in
mov
rclb
or
sbb
icebp
xor
mov
add
data16
dec
leave
sbb
jno
jg
filds
popa
sub
push
stc
xchg
out
push
ret
test
daa
mulb
mov
mov
aam
pushf
out
test
push
scas
add
je
adc
aam
scas
push
mov
add
imul
fcmovnbe
xchg
dec
std
add
mov
insl
adc
int3
sbb
fnstcw
sub
out
cmp
out
outsb
addr16
sti
or
jo
sub
pop
movsb
out
shll
cmp
aad
mov
and
mov
outsl
sub
cmp
loope
les
leave
jo
xor
push
jns
cltd
mov
imul
pop
fistpll
cmp
jg
insl
cwtl
imul
or
adc
dec
imul
test
adc
xor
mov
outsb
loopne
mov
es
rcrl
repz
clc
or
push
cmp
in
shr
pop
dec
test
push
pop
test
sbb
fdivrs
mov
mov
jae
or
fdivs
lcall
inc
mov
ja
sub
es
pushf
xchg
lahf
fidivs
sarb
cmpsb
out
in
xor
mov
adc
les
xchg
xchg
outsl
movsl
leave
jp
pop
pusha
xlat
cwtl
aaa
fidivrl
ljmp
js
sbb
xchg
push
dec
sub
rolb
cmp
or
test
lock
cwtl
scas
mov
jle
and
xlat
jecxz
add
ror
jg
sarl
test
ds
push
or
repz
dec
pop
jge
push
loop
mov
ljmp
mov
jp
push
sub
addr16
fcmovu
xchg
call
adc
inc
adc
cmpsl
test
gs
inc
xchg
js
out
sarl
dec
push
sbb
jno
xchg
pop
xlat
popf
adc
jg
push
xchg
xorb
clc
cli
jl
dec
mov
pop
push
push
jb
xor
push
push
push
dec
sbb
xchg
add
pop
cmpsl
into
jmp
push
arpl
mov
movb
test
pop
mov
data16
lret
sbb
pop
sbbb
sub
call
add
insl
sub
pusha
mov
add
pop
or
mov
pop
jp
push
or
testl
arpl
jae
mov
cld
ret
jne
mov
jnp
pop
sbb
aaa
mov
fcom
lret
sbb
cltd
loopne
iret
mov
je
xchg
push
dec
addr16
mov
xor
cmp
jl
mov
add
pop
lock
fs
ss
dec
xor
xchg
std
data16
outsb
js
mov
mov
cmp
push
xchg
xchg
cmp
inc
jno
push
cmpsl
enter
mov
adcl
jnp
popf
sub
int3
aam
push
mov
pop
cli
icebp
jb
es
and
xchg
or
pop
fisttps
mov
loopne
mov
les
int
dec
and
inc
sbb
movsl
jne
pop
les
jmp
imul
lock
mov
inc
xchg
lret
mov
pop
mov
pop
push
inc
repnz
jae
or
sti
sbb
jl
pop
and
jp
gs
ds
jg
mov
pop
xchg
push
push
or
push
test
lahf
pop
inc
je
mov
dec
ret
sbb
or
or
cs
lcall
sub
mov
push
fwait
icebp
mov
rcrb
lods
out
adc
in
adc
inc
mov
mov
mov
push
jb
and
xor
add
mov
jmp
movsl
out
mov
outsb
add
pop
pop
fimuls
popf
iret
bound
ret
ss
jns
mov
add
aas
lods
jae
arpl
data16
inc
jg
dec
and
cltd
mov
test
lret
leave
sahf
ss
xchg
mov
in
mov
mov
repnz
inc
mov
and
inc
pop
jbe
fldl
push
and
ds
xchg
lds
lock
cmp
ret
or
out
fs
popf
dec
add
out
or
int3
imul
jns
mov
xchg
mov
push
das
adc
cmp
dec
test
dec
inc
lock
push
mov
cmc
adc
mov
mov
sub
in
in
cld
pop
jp
in
push
jno
dec
aaa
sti
or
inc
push
pop
sar
add
sti
or
ficoms
test
push
sbb
dec
push
add
mov
xchg
mov
out
repz
lret
sbb
sbb
ret
scas
data16
cmp
cmp
ss
or
jle
add
mov
mov
fwait
out
xlat
push
sub
mov
pop
sbb
nop
notb
shrl
les
adc
pop
and
sbb
push
sbb
in
enter
rcll
ja
xor
cld
pop
jnp
outsl
pop
push
pusha
insb
jne
cmpl
nop
ret
pop
push
cmp
aaa
xor
xor
pop
mov
out
lahf
into
inc
inc
xchg
jns
push
mov
sbb
mov
sub
lahf
fisttps
aaa
and
test
dec
xorb
insb
popf
mov
cli
xchg
dec
fcomi
fists
lea
xor
fldl
lock
mov
mov
jmp
cmp
clc
sub
cmp
popa
jo
jo
or
inc
fwait
jo
xor
imul
xor
lock
fistpll
neg
scas
insl
sahf
js
pop
fsubr
test
lahf
pop
aad
push
into
cmp
push
sbbl
xchg
outsl
and
jecxz
dec
sqrtps
xor
cmp
mov
cmp
out
imul
loopne
fldenv
arpl
jns
pop
cmp
pop
pop
fdivl
lods
cmp
xchg
push
daa
call
sbb
push
cmp
xchg
shrb
adc
bound
xchg
bound
mov
fcompl
adc
add
and
ret
jp
or
int3
push
test
shr
mov
mov
aaa
sti
int3
or
pop
or
xor
and
pop
or
cmc
call
ljmp
andl
stos
outsb
xor
xor
inc
or
add
xor
int3
insl
jno
test
cwtl
cltd
cltd
test
fsts
icebp
cwtl
mov
scas
dec
jb
cs
in
insb
negb
push
pusha
ret
adc
andnps
andl
dec
in
fists
les
iret
mov
mov
sbb
mov
imul
xor
push
lret
sbb
jecxz
js
fmul
xchg
add
dec
leave
clc
mov
aaa
daa
imul
mov
bound
mov
mov
lods
mov
xorl
dec
mov
sbb
mov
add
push
shl
scas
inc
jne
jmp
loop
push
rep
imul
jbe
or
mov
xchg
imul
cwtl
adc
cmp
pop
ffree
int
jle
cwtl
jp
push
pop
sahf
les
xchg
popa
adc
jmp
insb
jmp
incb
ret
sub
add
dec
movsb
rorl
negl
jo
adc
add
and
icebp
mov
jge
sub
pop
lahf
and
lret
jge
jne
and
adc
and
push
cmp
nop
xchg
rorb
lret
arpl
pop
xor
repnz
add
mov
test
std
cwtl
add
push
jno
insl
enter
repz
xlat
sbb
xor
fidivs
mov
adc
mov
lcall
add
mov
stos
xor
jae
aaa
ss
scas
cmp
pop
cltd
push
ja
call
xor
lret
pushf
aad
iret
xchg
jnp
out
cmpsl
jne
fwait
mov
jmp
adc
sahf
pop
sub
add
add
jnp
test
xchg
add
lods
out
ljmp
jae
shlb
stos
add
cmp
movsb
inc
mov
rorb
ljmp
cmp
inc
lret
lds
sub
xor
lcall
cmp
pop
mov
fnstsw
and
int
fwait
je
shl
inc
daa
stc
jb
loop
out
imull
fs
jnp
and
push
jl
daa
and
popf
movsb
dec
cmp
outsb
push
sub
ss
jl
int3
jns
lods
je
sub
dec
cltd
jne
testb
dec
inc
mov
xchg
popf
sbb
and
push
adc
ret
mov
subl
or
jmp
cli
adc
or
pusha
imul
inc
xor
in
or
push
push
fisubrs
dec
mov
pop
leave
add
cli
ss
ljmp
jb
loope
sbb
cld
sub
ret
enter
mov
mov
pusha
mov
lahf
inc
lock
cmpsb
xor
rcrl
mov
mov
push
ret
sbb
cwtl
cli
push
sbb
mov
mov
cmp
xchg
xor
fsts
dec
lret
out
inc
scas
jmp
xchg
in
push
ret
mov
mov
xlat
iret
sti
xchg
jns
cmpsb
dec
shll
lcall
adc
andb
mov
jae
imul
adc
orb
outsl
das
and
add
pop
pop
and
pop
jo
cmp
shr
cmp
xchg
jle
xchg
sti
xor
xor
fdivs
xlat
push
ja
call
out
add
scas
jg
push
pop
mov
cmpsl
mov
ret
add
or
cmp
movsl
mov
movsl
out
shufps
negl
xchg
dec
cmc
xor
insl
mov
in
jmp
loope
push
push
cmp
cmpsb
negl
fs
pop
mov
ds
lods
movsl
stos
xchg
out
scas
push
lret
addl
sbb
imul
aas
ret
and
pop
xlat
xor
aas
xchg
into
call
and
dec
shr
fnstsw
mov
cmc
repnz
testb
lcall
std
or
mov
rcrb
mov
pop
nop
lds
cmp
cmp
and
or
push
or
int3
lret
pslld
int3
ja
inc
lcall
sub
pop
dec
sbb
mov
fsubl
shrl
adc
cmpsl
insb
mov
xchg
mov
dec
aaa
push
adc
dec
in
mov
idivb
mov
jmp
mov
lar
push
mov
pop
pop
roll
jns
push
inc
mov
orl
out
stos
jecxz
daa
lods
cmp
push
shlb
cwtl
hlt
adc
cmc
dec
lds
clc
lea
mov
xchg
incl
mov
roll
mov
sti
pop
mov
mov
mov
test
or
inc
adc
les
and
mull
sub
loopne
imul
sbb
dec
or
cmp
adc
test
push
mov
fstps
sub
jne
xchg
bound
mov
mov
ja
adc
mov
dec
popf
je
push
jmp
mov
sbb
sbb
sbb
das
pop
shr
fstpl
mov
cld
getsec
test
jl
out
sbb
or
pop
inc
add
mov
shlb
sbb
mov
push
lret
dec
std
aaa
nop
popf
push
testb
cmpsb
into
gs
cmp
sbb
push
mov
and
lret
aas
je
mov
ljmp
add
rcrl
adc
pop
js
inc
mov
scas
jne
push
jg
push
insl
cwtl
std
ja
mov
mov
adc
jo
subl
mov
adc
test
dec
mov
pop
insb
mov
popa
pop
jbe
rcll
in
into
ds
insl
shll
movsb
xor
xor
cld
cmp
cmc
int
lcall
decl
push
xor
mov
adc
pop
inc
scas
pop
dec
jmp
add
and
and
jp
mov
subb
mov
add
jg
sbb
int3
and
les
les
xor
shrb
test
divl
cmp
sub
je
adc
int
xchg
push
test
xor
mov
sti
ja
fnstcw
mov
outsl
cli
jle
insb
imul
jge
add
jne
lods
mov
fs
fnsave
push
roll
jb
in
shl
gs
aaa
push
les
jb
pop
mov
adc
shlb
loopne
mov
adc
ret
sub
popa
hlt
lahf
push
cmp
xchg
movl
enter
movsl
gs
les
rdseed
imul
xchg
aas
xchg
inc
movsl
and
mov
fs
xchg
out
pop
jp
dec
test
jecxz
lds
mov
push
cltd
int
mov
mov
fnstcw
dec
pop
and
jae
clc
lods
cld
negb
sbb
rcrl
sbb
dec
stos
rcrl
test
roll
enter
aam
ss
jp
popa
jne
pop
fnstcw
xorb
push
dec
push
xor
lock
push
dec
cmp
outsb
push
fbld
push
dec
bound
pop
add
shld
fs
rolb
shl
jecxz
lcall
sbb
sbb
loop
cli
lods
mov
cwtl
subb
addr16
cmp
or
xchg
sub
cwtl
lods
clc
dec
push
push
scas
insb
in
fwait
addl
clc
push
and
sahf
jb
fwait
xchg
push
sti
xchg
jno
lds
cwtl
inc
xchg
fcmovnb
and
clc
add
leave
cmp
inc
leave
je
jo
sub
dec
push
push
sahf
fidivl
jp
or
or
mov
add
clc
cmpsb
mov
or
push
inc
sub
mov
shll
dec
and
mov
sub
dec
das
adc
pop
jg
mov
jge
loop
shlb
pusha
int
lret
xor
inc
shr
loope
cmp
add
jg
ss
inc
sahf
jecxz
sbb
cmpsb
jb
pusha
adcl
shrl
add
cmpsb
cltd
or
aas
mov
jnp
sti
icebp
out
mov
mov
dec
imul
fidivrl
mov
sbb
cltd
adc
in
xlat
cli
mov
adc
adc
je
inc
xor
stos
dec
into
test
shll
mov
fmull
xchg
mov
mov
push
sahf
mov
outsl
je
fdivrs
aad
mov
cmp
int3
insl
mov
push
adc
outsl
dec
or
inc
adc
and
add
subb
push
add
mov
cmpsl
jbe
rorl
cmp
jl
add
sbb
movsl
pop
int3
mov
push
inc
inc
or
push
rol
xor
xor
mov
stc
dec
in
aaa
imul
mov
nop
push
push
inc
clc
jl
fidivrl
ffree
cmp
lcall
add
fdivr
je
jns
push
orb
dec
jne
xchg
cmp
mov
mov
test
fsubrl
xor
popa
dec
xchg
xchg
sbb
fidivrs
mov
rol
and
push
out
mov
int
dec
popf
je
xchg
push
les
mov
or
arpl
imul
push
adc
andb
icebp
shr
test
sahf
xchg
mov
cli
in
test
cmp
iret
scas
jp
stc
repz
ljmp
mov
jecxz
fnsave
or
jnp
popa
outsl
leave
jae
ljmp
int
rcrl
mov
xchg
pushf
lea
push
add
dec
std
inc
pusha
jecxz
push
mov
add
dec
ficompl
jmp
lods
mov
mov
jne
pushf
inc
or
mov
mov
orb
dec
push
cld
mov
aad
mov
stos
mov
ficoms
pop
stos
lret
adc
call
mov
outsl
push
cmpsb
ja
or
andb
shlb
lods
pusha
call
pop
inc
sbb
movsl
sahf
insl
lods
aas
movsb
push
mov
loop
pop
cmpsb
ret
and
iret
scas
lods
rorl
cmc
mov
mov
xchg
add
outsb
and
pushf
xchg
sbb
xchg
or
or
or
nop
mov
mov
mov
jbe
test
mov
cwtl
sahf
push
testb
loopne
mov
dec
sub
imull
cli
xor
jne
stos
mov
or
cmc
outsb
fildl
fsub
and
xor
dec
pop
adcb
stos
mov
inc
aas
xchg
jb
mov
xchg
cld
mov
sub
in
aam
mov
jo
sahf
int
xchg
mov
out
inc
xor
jo
int3
into
inc
imul
test
data16
adc
div
cmpsl
in
shrl
add
push
imul
push
int
pop
fxch
push
mov
ss
data16
adc
into
pop
rorl
xchg
ret
mov
std
add
push
dec
pushf
data16
popf
sub
mov
imul
and
idiv
shl
dec
enter
imul
inc
divb
dec
iret
pusha
mov
fldenv
fisttpl
shr
jo
aaa
rol
inc
sbb
jle
call
xchg
repnz
int
pop
mov
xchg
daa
scas
stc
pusha
test
movsb
fadd
loop
mov
ljmp
inc
aam
in
adc
stc
push
inc
inc
or
repz
dec
add
iret
repz
repz
scas
imul
adc
pop
cwtl
das
or
push
add
adc
test
pop
or
scas
movsb
fildll
in
and
lea
xchg
mov
adc
mov
aaa
clc
out
les
xchg
lcall
xor
mov
and
mov
mov
popf
mov
pusha
mov
push
fiaddl
sub
push
adc
loop
repz
shll
arpl
mov
fimull
adcb
push
and
jle
xchg
iret
mov
jmp
mov
insl
das
xchg
jbe
out
mulb
fisttps
fwait
pop
ds
test
xchg
test
out
adc
in
push
pop
lret
decl
iret
dec
idivl
sub
jecxz
inc
lahf
lods
inc
jge
pop
mov
pop
add
fcmovnu
sub
lcall
jl
sub
or
xor
push
add
pop
jecxz
pop
mov
pop
xor
jecxz
push
jne
pusha
hlt
cmp
lcall
jmpw
sbb
loop
mov
mov
or
jle
es
in
bnd
lea
gs
cmpb
xorb
rclb
sub
push
daa
mov
fcomp
or
push
insb
push
rclb
into
js
repnz
negb
shl
jle
mov
mov
or
pop
pop
mov
inc
pushf
movsl
movsl
pop
and
sbb
dec
xchg
popa
test
js
mov
xchg
int
pop
mov
test
test
mov
ljmp
jnp
pop
cli
mov
adc
roll
sbb
and
je
jns
in
test
andl
jp
push
dec
or
pop
lods
adc
ret
xor
jmp
mov
les
lea
xlat
push
test
or
push
arpl
in
mov
rcr
jae
adcl
sti
xchg
mov
movsl
cmp
repz
ja
pop
lods
hlt
or
adc
xor
shr
cmc
imul
data16
jp
mov
pushf
dec
xor
push
testb
add
jnp
cmpl
test
xchg
inc
mov
enter
add
xchg
sub
ds
push
shrd
aaa
out
enter
mov
popf
ja
jl
mov
test
sub
pop
pop
cmp
xchg
adc
mov
repnz
dec
adc
in
pop
shrb
ret
mov
mov
scas
cmp
jae
pusha
shll
cmpsl
loop
mov
aad
ret
or
clc
test
in
and
xor
test
repnz
loope
pop
mov
aam
in
movsl
cmp
lods
dec
test
pop
sbb
fs
into
gs
into
push
mov
jmp
xor
loope
insb
pushf
ret
fxam
pop
xchg
icebp
jl
in
rcrb
jge
xor
out
loop
xor
divl
hlt
cmp
dec
push
xchg
cmp
jp
icebp
ds
add
sub
data16
movsb
push
push
lods
mov
leave
adc
test
adc
adc
sub
sbb
rcrb
ret
leave
sbb
xor
xchg
daa
and
inc
adc
mov
push
lock
addr16
push
or
lea
pop
push
hlt
push
jbe
lcall
pushf
imul
dec
xchg
pop
lds
lahf
decl
sbbl
nop
fnstcw
sub
lret
jo
aad
hlt
fnstsw
and
add
clc
jle
mov
and
add
aas
lret
scas
add
cmpsb
and
lret
sub
and
mov
fcmovne
decl
mov
pop
mov
jae
jae
loopne
jb
shll
adc
out
xchg
in
stc
xchg
cmc
std
or
sub
and
ror
jl
xlat
es
outsl
dec
mov
aam
scas
in
pop
fwait
push
mov
mov
mov
push
mov
adc
leave
repz
jle
outsl
loop
leave
sbb
or
pop
ljmp
xchg
lods
dec
adc
and
sbb
sahf
sbb
sbb
dec
repz
pop
mov
lds
stos
repnz
call
xchg
lcall
fwait
lahf
cli
hlt
jns
iret
shl
cs
imul
loopne
inc
dec
push
es
js
fwait
mov
aam
pushf
aas
jne
icebp
cmc
rorb
mov
xor
and
pop
xchg
push
repz
int3
pop
addl
or
adc
inc
xor
rorb
push
adc
ds
mov
dec
jmp
icebp
test
add
cmp
mov
inc
fsubrl
test
xchg
mov
lds
jge
or
cld
adc
popa
dec
in
pushf
pop
mov
sbb
mov
adcb
and
sbb
xchg
pop
adc
mov
push
jmp
pop
cli
ja
pop
or
orl
ucomiss
jnp
cwtl
mov
pop
mov
xchg
call
xchg
pop
sub
push
mov
mov
mov
and
jp
mov
xlat
jl
push
xorl
sub
xor
mov
loope
xchg
xchg
push
mov
push
xlat
loope
adc
repz
repz
pop
aam
add
cli
in
sti
pop
mov
mov
sbb
xor
stc
xchg
std
mov
push
dec
add
dec
mov
jle
pop
mov
mov
in
or
cmp
loope
cmp
xor
fnstsw
aas
movl
xor
testl
nop
dec
in
shrl
push
imul
sar
pop
pop
je
push
jnp
test
mov
and
adc
or
xor
lea
std
inc
andl
in
fwait
or
out
jp
jbe
cltd
push
cmc
pop
cmp
sbb
pushf
into
or
push
sub
adc
inc
push
pop
xor
or
adcl
mov
cwtl
sub
xchg
insb
add
add
and
cmc
stos
add
sahf
bound
movsb
cmp
add
dec
ss
out
rorl
and
decb
fidivrs
nop
jbe
rcl
lahf
dec
test
xor
shll
lock
nop
mov
cmp
pusha
fbld
and
add
mov
pop
or
lcall
js
pop
adc
inc
call
xchg
push
cltd
sub
into
stc
adc
dec
dec
push
lret
stos
push
mov
idivl
loope
rclb
mov
add
push
and
lock
into
jns
pop
xor
cs
xor
and
mov
or
push
cmpl
dec
cltd
xchg
xchg
sbb
js
daa
outsb
mov
pop
mov
cmpsl
stos
mul
add
dec
hlt
pop
cmp
rolb
aad
pop
in
sbb
lahf
rolb
faddl
test
mov
sarl
ss
and
repz
cmp
mov
mov
sub
jg
pop
inc
int
jno
xor
aas
in
mov
and
xor
push
arpl
mov
fwait
les
xlat
xchg
fimuls
mov
test
test
xor
push
pop
stc
outsl
cmpl
xchg
int3
imul
and
jbe
pop
mov
mov
std
cmp
xchg
aas
and
adc
or
cmpsl
test
jb
out
pop
sahf
mov
mov
push
mov
inc
cmp
jo
imul
dec
pop
pop
imul
hlt
xchg
cmp
xor
dec
es
test
mov
shlb
test
call
jge
jmp
or
push
imul
push
pop
mov
jae
adc
mov
sub
sub
push
aaa
mov
add
inc
add
sarb
scas
dec
xchg
inc
and
pop
push
mov
inc
repz
aam
xchg
sbb
rorl
xchg
out
pop
adc
ds
fisttpl
in
mov
inc
mov
mov
push
inc
ljmp
mov
shlb
fisubs
out
test
les
stc
pop
fcmovnu
pop
sbb
mov
aam
addb
adc
divb
inc
popa
mov
gs
cwtl
push
adc
xor
cli
addl
mov
xchg
mov
and
xor
xor
inc
add
push
popf
ds
cli
mov
mov
xchg
cmc
cmp
call
aad
fidivrl
lahf
ljmp
lret
outsb
lods
es
xor
jae
inc
mov
lcall
sbb
and
xchg
in
sbb
cltd
pop
push
lahf
pusha
lcall
ss
inc
ds
mov
lcall
pop
jl
mov
add
pop
inc
mov
xchg
ljmp
js
or
sbb
out
jns
jle
mov
jp
dec
cmc
movsl
pop
jecxz
mov
mov
cmp
ds
and
mov
js
adc
inc
cmpsb
adc
gs
dec
repz
mov
sub
ss
int3
xorb
lock
mov
in
loopne
inc
or
adc
test
cmp
lods
test
add
mov
sub
rcrb
testb
mov
stos
iret
das
inc
cmpsb
pop
bound
test
enter
cmpsb
dec
jg
inc
cmp
jno
mov
push
push
pop
dec
stc
and
fidivrl
cmp
in
push
xchg
and
adc
lods
mov
push
mov
jb
inc
enter
pop
or
add
divb
in
ljmp
or
inc
mov
cmp
dec
ljmp
int3
mov
add
loop
or
push
mov
jo
cmp
icebp
popa
iret
outsb
pop
jno
cs
insb
mov
lods
movsl
pop
inc
adc
mov
repnz
mov
addr16
mov
faddl
and
pmaxub
jae
jmp
adcl
push
lcall
sahf
sbb
notb
das
ss
xor
rcl
pop
lods
rclb
pop
fstl
or
mov
pop
aaa
movsl
mov
adc
or
push
lret
mov
push
jle
and
xchg
imul
xor
lcall
and
dec
sbb
pop
dec
jmp
xchg
xchg
sti
out
movsb
mov
mov
in
leave
jge
lods
push
ror
sbb
les
jbe
test
xchg
adc
shlb
dec
pop
or
sub
add
xchg
in
aad
loopne
nop
mov
push
mov
shlb
xchg
xor
pop
fwait
xchg
cmp
push
xchg
ja
es
adc
mov
rcrb
sbbl
hlt
cmpsb
sbb
ds
out
dec
inc
ljmp
xchg
and
enter
mov
rcll
mov
xchg
adc
popf
xchg
inc
xor
sub
test
inc
inc
pop
inc
jg
push
imulb
push
sti
mov
sub
add
and
push
int
lea
inc
pusha
les
push
add
push
push
fcmovnbe
push
sbb
sbb
fadds
int3
rolb
sbb
or
imul
mov
push
xchg
rorl
push
lock
inc
jbe
add
pop
xchg
mov
sahf
cmp
scas
dec
adc
nop
call
mov
mov
xor
pop
dec
or
and
packuswb
outsb
data16
pop
cs
xchg
mov
push
ss
xor
call
push
ljmp
cmp
fs
imul
xchg
out
sub
lret
cli
popa
scas
sbb
cwtl
pusha
xchg
rcrb
notl
rcr
lcall
xchg
movsb
add
ret
pusha
sbbl
shll
jg
or
out
jo
add
xchg
xchg
mov
ret
sbb
xchg
and
jbe
int3
cmp
mov
jo
jb
pop
aas
or
xchg
sbb
mov
mov
lahf
rcr
mov
sti
das
push
xor
pop
mov
fidivrs
push
mov
ficompl
mov
push
jp
iret
mov
das
adc
mov
out
in
inc
xchg
jno
sbb
xchg
or
mov
mov
leave
inc
js
lock
mov
or
mov
ror
sti
inc
xchg
cmp
aaa
jno
add
popa
sub
lcall
cmpb
push
es
jle
mov
inc
popa
jg
fadds
ret
xor
inc
icebp
rorl
lods
paddsb
sarl
pop
aas
repz
dec
mov
test
jno
ret
jnp
sti
movsb
sub
int3
cmp
repz
mov
xor
inc
je
xchg
xchg
push
mov
mov
cld
scas
dec
mov
dec
push
sbb
fdivrs
repnz
mov
mov
cmp
mov
test
add
test
sahf
insb
push
addr16
and
pop
xor
add
jno
cld
into
cli
arpl
ja
in
sub
push
inc
xchg
lock
cmpsb
loopne
popa
test
lock
loopne
pop
push
sahf
sahf
mov
mov
adc
stos
sarb
fnstcw
in
insb
fs
jg
lcall
into
jp
stos
fwait
sbb
inc
cmp
imulb
stc
dec
sub
xor
add
inc
xchg
loop
mov
jge
xchg
jbe
addb
sub
mov
stos
mov
fs
orl
sbb
stos
or
nop
push
mov
in
jg
cmp
or
mov
jmp
pop
add
fsubl
lret
fcompl
inc
xchg
mov
xchg
adc
mov
or
xchg
test
jnp
jnp
cmc
mov
inc
add
into
mov
sub
aas
sbb
dec
inc
jno
add
mov
into
es
cmp
jge
loopne
pop
std
adc
mov
inc
jl
dec
mov
insl
push
inc
xor
cmp
and
ja
sub
sbb
pop
xor
mov
sub
dec
ficoms
bound
cmp
idivb
add
bnd
and
aas
jge
jl
xor
ror
xchg
inc
mov
lahf
dec
push
loop
icebp
or
fwait
icebp
inc
cli
add
cmp
mov
call
loope
aad
pop
popf
shlb
xor
imul
mov
or
dec
add
ja
fisttps
loope
shrl
push
cwtl
jbe
sbb
pop
fldenv
into
dec
pop
cmp
addl
lahf
mov
fldt
sbb
repnz
into
ss
loop
add
cmp
nop
xlat
rorb
sbb
movsb
out
loop
pop
push
jmp
in
xchg
mulb
sbb
sub
mov
sub
in
mov
xchg
dec
mov
movsl
aad
xchg
imul
inc
icebp
das
mov
inc
xchg
in
std
in
data16
pop
in
rorl
iret
mov
or
movsl
dec
push
and
add
adc
leave
imul
push
pop
popa
bnd
xchg
push
inc
pop
sbb
jp
xchg
insb
sub
arpl
sub
std
out
fnstsw
adc
shlb
sub
sbb
pop
xchg
inc
bound
pushf
cmp
sarl
test
sbb
icebp
xchg
inc
xchg
jo
imul
fstpt
lock
sub
push
aaa
mov
sarb
je
xchg
fsubrs
cli
mov
push
cmp
icebp
jbe
pop
test
or
pop
outsl
push
jp
fs
mov
sub
ret
dec
pop
fidivl
xor
insl
out
loop
cmp
sbb
mov
dec
add
outsl
pop
jp
negl
daa
xchg
daa
fs
stc
push
insb
and
mov
sbb
add
shl
or
call
cs
cmpsb
sbb
sub
pop
xor
jge
test
movsl
or
cli
lret
int
add
repnz
fistl
shll
mov
movsb
cmp
rorb
mov
hlt
cld
sbb
leave
in
mov
mov
add
inc
dec
out
inc
sub
inc
push
imul
mov
push
dec
sbb
mov
inc
incl
pop
push
popa
jb
jl
orb
mov
stos
outsl
jge
mov
jge
lret
je
pop
or
and
dec
frstor
data16
push
cmpsb
inc
adc
ficoml
call
push
ret
or
fsubl
jp
xlat
outsb
filds
inc
mov
adc
xchg
cmp
sarb
xlat
aam
and
gs
sbb
pushf
lods
mov
lods
xchg
leave
repnz
test
push
pop
xor
lods
ds
and
mov
sbb
ror
imul
push
cwtl
inc
add
or
stc
push
out
imul
jns
push
and
popf
aaa
xor
mov
mov
sarl
test
icebp
notl
and
xchg
cmpsb
daa
jl
imul
loope
popa
cmp
mov
inc
es
add
out
jecxz
adc
fisubl
fmuls
mov
or
cli
popf
dec
out
loop
cmp
inc
gs
xor
xchg
jnp
pop
ret
out
fldt
push
stos
lcall
adc
loope
mov
pop
inc
test
adc
arpl
int
or
mov
into
sahf
add
int
pop
jle
dec
push
xor
pop
adcl
mov
jmp
inc
xor
cld
xor
fwait
pop
or
push
cltd
jg
roll
inc
subl
test
repnz
push
mov
mov
dec
adc
leave
adc
or
in
add
cli
outsb
mov
sub
leave
clc
outsl
ljmp
insb
add
test
push
cs
and
xchg
filds
pusha
mov
fs
lret
fcoms
mov
sti
mov
push
je
jge
push
lea
mov
cmpb
pop
subb
inc
loope
pop
movsl
rcll
gs
call
xchg
sub
mov
add
add
mov
lock
xchg
jl
xor
cli
cltd
adc
ror
pop
idivl
lahf
test
int
add
cmp
push
das
out
aaa
cmp
add
xlat
or
mov
lret
mov
fs
inc
add
mov
imul
adc
and
push
jns
xchg
xchg
adc
add
jnp
pop
pop
or
clc
cmpsb
iret
push
add
xchg
test
subb
sahf
or
pushf
mov
inc
jns
mov
lret
sbb
popf
ret
xchg
call
arpl
cmpsl
gs
lea
ret
xor
les
push
and
jmp
pop
loopne
scas
lods
pop
push
or
xor
add
data16
mov
rol
movsb
inc
insb
mov
xor
insb
arpl
and
or
xor
js
jg
mov
inc
stos
shll
pop
inc
mov
movsl
push
fsts
cmp
subl
mov
and
subb
jg
std
popf
cmp
ret
mov
adc
jmp
xor
pop
sbb
add
inc
or
rcrb
clc
xlat
fbstp
sub
test
sarb
xchg
insb
scas
mov
test
stos
loop
stos
jnp
arpl
dec
lret
aad
or
gs
or
pusha
loope
mov
leave
adc
aam
ljmp
enter
and
orl
cld
push
stc
sbb
pop
lock
pop
fdivp
sbb
sbb
mov
cmp
addr16
pop
lock
out
inc
les
inc
sbb
mov
cwtl
leave
testb
add
dec
xchg
test
sarl
ljmp
sub
jno
mov
insb
mov
xchg
jno
dec
pop
movsb
sbb
mov
pop
xor
sub
xlat
outsb
lods
mov
xchg
jge
sub
mov
jg
dec
ds
stos
aaa
push
sahf
test
mov
jo
sub
add
or
pop
loope
icebp
push
fs
and
imul
push
adc
repz
push
fisttps
pop
in
ret
adc
fidivrs
and
adc
xor
push
jmp
push
push
lock
mov
sbb
xchg
ds
adc
dec
mov
jmp
cmp
in
xchg
icebp
sub
jp
sti
inc
popf
scas
lcall
cmp
fdivs
addr16
and
ds
add
dec
pop
xchg
mov
addb
repz
les
sbb
mov
pop
test
mov
mov
stos
mov
subl
fadds
cltd
lret
pop
ficompl
lcall
scas
adc
add
jno
in
xchg
ja
lret
adc
push
or
call
fdivl
mov
int
cmp
or
push
mov
fildl
aam
shll
jno
leave
cmovle
and
repz
sarb
stos
or
iret
gs
in
call
mov
cmp
cmp
lods
or
gs
push
cmp
int3
add
cld
sti
fwait
push
mov
dec
add
call
andb
mov
and
nop
xchg
ds
repz
les
test
add
lahf
sbb
les
stos
dec
mov
and
or
xchg
mov
mov
dec
fistps
pop
cmp
and
jno
pop
cmp
mov
popf
pop
jne
in
push
repnz
and
xor
je
cmc
cmpsl
or
fcmovbe
sbb
dec
cwtl
mov
pushf
xchg
push
dec
xor
jns
add
mov
xor
into
bound
pop
insb
or
cmpsl
rcrb
movsb
mov
rcrb
ds
mov
lods
fcom
mov
mov
mov
repnz
inc
movntq
mov
sbb
push
test
cmp
pop
test
fisubrl
push
int
adc
or
scas
cwtl
sub
dec
in
int
push
push
dec
int3
and
rorl
dec
jmp
int
loop
fs
popf
push
in
mov
push
adc
leave
scas
into
bnd
adcl
xchg
int
lds
nop
adc
mov
call
mov
ljmp
lret
jbe
xorb
sub
add
in
cmp
or
cmp
add
sub
jo
ret
rcrl
mov
adc
ja
add
gs
shr
or
dec
adc
mov
std
push
mov
jle
jno
nop
adc
lahf
out
jb
jp
dec
mov
bound
and
adc
jbe
test
repz
pop
mov
inc
add
cltd
test
insb
pop
jg
push
je
xchg
popa
jnp
pusha
dec
push
mov
and
push
test
imul
ret
adcl
xor
movsl
mov
dec
cltd
pop
pop
pop
shr
push
pop
imul
fwait
int3
push
mov
test
sahf
xchg
and
push
pop
out
mov
pop
add
xchg
mov
adc
fwait
sbb
jmp
dec
add
cs
add
and
sub
stc
mov
inc
dec
adc
mov
inc
inc
cld
loope
stos
lock
cli
rcll
sbb
rcrl
push
pushf
ret
sub
dec
mov
mov
leave
sti
mov
je
or
adc
jp
jmp
xor
lods
sarb
fimuls
lcall
sbb
ret
sahf
fsubs
insb
fucomip
cmp
loopne
pusha
icebp
sub
mov
data16
inc
add
adc
iret
fiaddl
xor
adc
jb
insl
subl
add
jecxz
setbe
inc
jg
jle
aas
aaa
cmpsb
sbb
aaa
cmc
adc
fisttpll
pop
aaa
or
leave
inc
add
mov
stc
sbb
jge
jle
push
lea
mov
popf
jp
push
dec
mov
iret
lret
rcll
inc
shlb
jae
jns
jbe
and
fistpll
sub
cmc
adc
xlat
rorb
pushf
or
jg
xor
lock
add
mov
nop
mov
outsb
inc
cwtl
pusha
leave
scas
push
insl
aam
adc
sub
fwait
out
gs
inc
pop
jnp
push
test
testb
aaa
jp
fwait
shlb
xor
mov
mov
je
add
popf
out
repnz
jb
push
and
clc
fdivl
cmp
inc
xchg
jl
pop
mov
jns
sub
jmp
sbb
subl
lea
pop
idivb
pop
mov
push
mov
jnp
cmp
xchg
orl
inc
stos
jnp
loopne
fisubl
jmp
ret
mov
lods
adc
adc
ss
ret
test
std
movsl
jl
or
add
repz
test
fdivl
arpl
sub
ss
daa
xor
adc
dec
repnz
and
jbe
outsb
inc
cld
repnz
repnz
fnstsw
add
das
in
push
cmp
aaa
xlat
push
icebp
stos
cmpsb
jno
xor
into
pop
scas
adc
stc
push
fisttps
daa
mov
adc
jne
icebp
sub
dec
les
xlat
jl
mov
mov
pushf
insl
jecxz
popf
bound
add
sub
dec
mov
mov
inc
int3
shrb
addl
repz
cwtl
outsb
mov
lods
mov
cmp
clc
loope
fstps
sbb
or
pusha
call
int3
jp
mov
imul
aad
lods
xchg
test
jge
push
adc
rclb
icebp
jl
sub
jge
adc
mov
iret
sbb
int3
dec
lods
sbb
cli
sbb
pop
xor
mov
imul
mov
push
sbb
test
pusha
sbb
arpl
xor
enter
sub
lcall
inc
dec
inc
push
jb
inc
mov
push
and
nop
in
les
insl
insb
add
pop
push
sub
or
inc
ret
dec
fiadds
jnp
jmp
xchg
jecxz
xor
inc
sbb
rolb
in
jg
pop
leave
pop
sbb
pop
add
in
imul
scas
cmp
daa
add
and
fs
xorl
sub
cwtl
insl
insl
push
cld
jecxz
push
inc
cmc
add
push
dec
mov
or
movsb
mov
movsb
in
or
sub
cmpb
and
popf
sub
sub
cmp
in
jno
inc
mov
shl
sub
sub
loopne
out
xchg
cmp
mov
nop
mov
fadd
mov
and
sbb
cmp
outsb
or
mov
shlb
sub
mov
lods
mov
pop
push
sbb
rcrl
out
sahf
ljmp
pop
mov
fiadds
inc
mov
xor
mov
push
or
pop
orb
movsl
inc
movsb
movsl
inc
or
or
jae
adc
mov
ret
fidivrs
push
je
push
jbe
push
pop
xor
sarb
push
push
sub
hlt
xchg
imul
inc
lods
cld
lret
aaa
mov
mov
mov
sahf
outsb
pop
shl
mov
nop
push
leave
adc
repz
enter
mov
test
lds
and
in
lret
sti
sbb
push
shrl
add
dec
push
in
sbb
cltd
cli
push
xor
dec
mov
repnz
stos
mov
outsb
arpl
out
jne
mov
sahf
mov
xchg
lds
and
fdivl
add
adc
mov
cmp
sahf
arpl
xchg
sub
in
xchg
bound
cmpsb
jno
xchg
add
and
mov
call
lds
cmc
ficoml
inc
add
pop
cld
sub
gs
lods
lahf
mov
jmp
jbe
out
xchg
loop
ss
out
pop
lcall
dec
pop
mov
jbe
out
sbb
mov
mov
dec
xor
jg
je
inc
aad
adc
les
cmp
daa
test
and
jp
xchg
xchg
idivb
sbb
cld
lods
cld
stos
mov
mov
ja
push
cmp
or
test
sub
xchg
adc
ds
popa
mov
idivl
mov
std
les
mov
cmp
ret
or
add
ja
incl
add
std
jge
jmp
ss
cld
add
imul
sbb
adc
insl
pop
rcr
xchg
subl
lcall
push
mov
ret
mov
rcl
popf
mov
sub
xor
call
inc
lods
sub
dec
push
inc
stc
outsb
push
inc
adc
cli
cwtl
into
and
sti
xchg
fsubs
or
pop
sub
add
inc
xchg
out
int3
out
out
orl
xor
lock
call
cmp
xorl
icebp
jae
add
out
movsb
jge
xor
dec
xlat
loop
jae
add
push
mov
fisubl
adc
leave
fsubrl
jno
jle
push
dec
jmp
mov
sub
out
fsubs
hlt
push
mov
sub
xchg
mov
sbb
xlat
stc
fimull
or
push
jns
fsubl
jmp
loopne
dec
xor
and
xchg
jns
cmpl
test
cmp
and
cmpsl
or
pop
cld
mov
xchg
sbb
mov
adc
std
cmp
dec
icebp
adc
xchg
mov
aad
mov
mov
jp
out
xchg
inc
sbb
sti
jge
dec
rcll
sti
push
fsubrp
xchg
pop
mov
xlat
and
ds
ror
cmpsb
out
bound
xchg
aam
orb
mov
or
xchg
test
mov
mov
sbbb
pop
dec
out
cwtl
mov
lock
rol
dec
mov
mov
sbbb
push
sbb
dec
mov
cli
push
mov
or
add
movsl
stos
ljmp
int3
dec
addr16
mov
dec
mov
repz
xor
xchg
xchg
sub
pusha
xchg
xor
ds
mov
fsubrs
cwtl
imulb
clc
mov
sbb
test
lahf
roll
add
xor
into
ret
les
push
rorl
out
jp
mov
mov
add
jne
sahf
repz
cmp
movsb
je
lds
andb
stos
mov
cmp
repnz
mov
pop
das
outsb
jmp
adc
sbb
pop
inc
aaa
xor
insb
cmpsl
mov
pop
and
test
lods
lock
leave
adc
push
bound
push
push
addr16
fidivrs
add
mov
mov
rclb
aas
lret
aad
pop
and
sahf
jp
xchg
fldl
arpl
testb
xor
xchg
cmp
lods
push
rcr
arpl
mov
push
jnp
sahf
and
dec
hlt
cmp
jecxz
js
jecxz
shrb
sbb
or
pop
cltd
sbb
mov
mov
iret
lods
push
negb
inc
dec
cmp
mov
mov
mov
cmp
mov
shl
lock
mov
dec
pop
sbb
mov
in
stos
ficompl
pop
xor
loope
adc
cmovno
push
out
and
push
cli
sbb
inc
mov
lods
ds
daa
sbb
sub
ds
enter
xchg
out
stos
cli
aam
iret
sarb
xchg
xor
xchg
enter
jb
shl
mov
out
push
jp
repz
mov
cltd
aaa
push
xor
push
or
sbb
sbb
sti
iret
sbb
push
in
rep
into
dec
sti
cmp
stos
ret
sub
sbb
push
mov
loopne,pn
mov
sbb
xchg
push
mov
daa
xchg
out
xor
test
test
push
outsb
jmp
sahf
push
rcr
dec
ss
adc
icebp
test
jl
push
pop
or
loop
xor
in
adc
out
insb
pop
rcr
sbb
push
js
mov
lret
movsb
and
in
inc
inc
xchg
lret
sub
jno
or
mov
jne
lret
cld
adc
xor
mov
cmp
shld
fldt
sti
jg
test
dec
stos
inc
notb
orl
in
push
cmpsb
mov
push
test
jle
xchg
in
mov
cwtl
sbb
gs
xchg
movl
es
xchg
dec
dec
stc
mov
pop
inc
mov
sub
jae
mov
jecxz
or
orl
mov
push
enter
enter
sbb
pop
in
mov
dec
iret
mov
xchg
add
shl
cld
fmuls
popa
mov
pop
mov
out
sahf
jmp
scas
aas
inc
andl
jp
mov
test
loopne
int3
cld
loop
or
xchg
loope
mov
xchg
jnp
fsubrl
fiadds
loopne
adc
lahf
fcmovu
mov
sub
push
ficoms
mov
cmpsb
ret
or
push
and
and
in
inc
mov
xor
in
dec
aam
sti
js
mov
sub
lods
std
xchg
mov
out
adc
xchg
in
dec
and
or
cmc
rcl
jl
and
xchg
shlb
xchg
jmp
push
addr16
fwait
cwtl
aam
sbb
ret
data16
repnz
xor
rcrl
movsb
mov
push
inc
or
adc
ss
cs
sub
jp
mov
sbb
in
mov
lahf
push
stos
mov
inc
inc
shrb
cmp
dec
es
or
adc
repz
js
dec
int3
adc
stos
insb
test
dec
jp
outsb
ret
pop
stos
shrl
iret
gs
imul
enter
sbb
xchg
or
aas
pop
push
test
ret
add
inc
xor
dec
mov
call
in
sbb
fisubrl
add
nop
xchg
dec
lcall
jns
inc
test
dec
int
push
or
fdivr
fs
imul
adc
mov
scas
push
cmp
xchg
xorb
or
aas
cwtl
sub
inc
cwtl
jnp
pushf
adc
push
cmpsl
cld
jo
jg
bound
jno
pushf
lods
or
xor
inc
inc
lcall
mov
imul
mov
or
shl
mov
xchg
imul
idivb
stc
fs
bound
fbstp
sahf
and
push
aaa
inc
cmp
pop
gs
ja
test
push
sti
leave
jg
popf
adcl
cmpsb
xor
adc
rcl
leave
mov
inc
dec
cmp
sub
or
xchg
mov
sub
repz
pop
mov
mov
sub
inc
add
inc
push
call
xor
pop
int
jge
xor
dec
loope
adc
cmp
nop
fiadds
push
fwait
push
push
adc
or
cli
mov
push
stc
push
rcll
mov
lret
popa
lea
cli
in
nop
nop
inc
sbb
cs
cmpsl
popf
or
pop
adcb
cmpsl
into
xor
xchg
icebp
push
arpl
cmp
rcrl
rol
xchg
aad
pop
sub
sbb
mov
sbb
lcall
gs
xor
loopne
popa
rcll
mov
mov
pop
orps
sti
mov
jb
adc
push
sub
pop
movl
jbe
mov
or
shll
push
inc
repz
mov
xor
divb
rclb
add
mov
cltd
cmp
xchg
ret
icebp
js
mov
xor
mov
jmp
loop
movsb
sbb
jecxz
push
loope
cmp
mov
loopw
out
adc
shll
push
lock
es
xchg
mov
jb
lock
push
jno
dec
lea
sbb
mov
mov
fldt
fcom
jge
repz
lret
mov
mov
cli
stos
adc
push
pop
repnz
aas
aaa
ds
pop
cmc
aas
loopne
outsb
xchg
repnz
ret
shr
and
out
into
mov
mov
jo
push
stos
inc
movsl
cs
jmp
mov
daa
out
lea
insb
jb
sub
scas
mov
jg
xlat
pop
fimuls
arpl
sub
fcmovne
mov
inc
cli
outsb
cwtl
testl
pop
adcl
xor
mov
jns
xchg
xor
jno
xchg
cmp
pop
mov
mov
imul
gs
divb
push
mov
cmpxchg
cmp
mov
inc
add
nop
push
jle
icebp
scas
sub
and
or
xchg
repz
out
clc
scas
xor
add
mov
or
nop
push
repz
repnz
repnz
push
mov
rcr
xor
mov
dec
enter
or
add
and
xlat
scas
pop
mov
mov
add
ss
repnz
ficoml
movsb
or
xchg
mov
fimull
dec
fildl
outsl
mov
jbe
ret
outsb
rclb
mov
cli
movsl
stos
cmp
popf
mov
ss
push
mov
outsb
or
pop
out
andb
xchg
jmp
inc
xor
leave
xchg
mov
sbb
loope
mov
xchg
mov
add
sbb
addl
shl
int3
fcomp
nop
ret
sub
pop
push
xor
jno
dec
movsb
dec
sub
xchg
in
mov
mov
out
movsb
jnp
push
xor
enter
jns
fwait
lret
push
xor
adc
mov
aad
sub
sub
mov
je
stc
sub
hlt
adc
icebp
pop
inc
sarb
fimull
fistpl
or
cmp
test
xor
inc
sbb
inc
xchg
leave
mov
out
imul
or
mov
dec
and
push
mov
in
outsl
fidivrl
andl
xlat
leave
stos
scas
and
mov
mov
xchg
sub
in
xor
pop
and
cmp
xor
mov
jne
mov
mov
out
push
cwtl
data16
dec
mov
pop
inc
lret
mov
test
out
inc
pushf
sbb
jmp
and
xor
inc
push
data16
das
into
inc
pop
add
leave
cltd
stc
fcompl
sub
cld
jnp
data16
mov
js
xor
nop
jg
push
sub
jnp
addb
inc
mov
mov
ja
js
cmpsl
jmp
movsl
push
outsl
and
arpl
pop
pop
fisttpl
or
and
mov
in
push
pop
mov
stc
mov
in
pushf
jb
stc
pushf
pop
xor
jg
add
lods
mov
hlt
jo
mov
lods
out
dec
xchg
icebp
sbb
in
into
divl
movsb
std
dec
imulb
xchg
and
cwtl
push
jge
aam
jno
ja
cmp
mov
out
dec
int3
rcl
pop
lods
adc
mov
jbe
ds
in
pop
add
lahf
xchg
aaa
nop
xchg
dec
dec
mov
iret
jne
xchg
imul
cmp
sbb
jne
mov
add
dec
test
jle
jg
xor
call
sub
jecxz
add
es
pop
jp
sarb
movsl
fwait
dec
cmpsl
fwait
orb
mov
andb
outsl
loop
mov
adc
mov
xchg
insl
or
jle
out
outsb
cmp
popf
fwait
pop
ljmp
xor
subl
loopne
or
mov
sub
subb
or
jb
mov
rcll
out
fwait
cmp
xor
movsl
out
jg
lods
test
mov
jo
sbb
aas
mov
pop
dec
add
lds
daa
inc
je
sub
js
fwait
movsl
push
push
cmp
imul
imul
adc
inc
add
mov
je
pop
xlat
xor
and
aad
cltd
test
jecxz
dec
in
fwait
jo
loope
loope
hlt
add
and
jp
add
ret
xchg
cmpsl
mull
fs
cmpsb
repz
mov
div
sub
sbb
stos
repnz
aam
push
push
orb
cmp
bound
and
lcall
daa
mov
push
adc
sub
fnstenv
mov
bsf
insl
mov
push
cs
mov
popa
push
and
outsl
or
mov
sub
add
adc
dec
adc
pop
xchg
mov
sar
stos
jg
daa
xor
stos
mov
jb
inc
stc
adc
pusha
and
push
outsl
push
sub
stc
adc
xor
adc
inc
mov
cmpsl
jbe
inc
pop
cmp
fisubl
lret
add
scas
in
arpl
mov
mov
sub
push
aas
mov
and
xor
roll
addr16
repz
shl
popa
movsb
test
inc
dec
jl
std
push
adc
xchg
mov
mov
cld
add
pop
jmp
jge
dec
pop
or
leave
aaa
mov
push
jp
imul
push
out
ret
adc
push
or
pop
sahf
jl
loope
mov
jae
wrmsr
add
push
pop
inc
and
xchg
lret
ja
sti
mov
jl
push
mov
test
test
fwait
incb
push
cwtl
add
push
bnd
test
xchg
inc
test
dec
cmp
mov
or
fwait
xchg
hlt
mov
xchg
sti
fs
nop
popa
mov
fs
push
pop
aaa
xchg
jmp
in
int
mov
fs
out
lock
adc
xchg
icebp
add
jle
pushf
adc
lcall
cmp
add
es
mov
push
jg
cltd
jl
cmpsb
test
push
pop
xor
inc
clc
aaa
aas
sbb
cs
inc
sbb
ss
imul
int
mov
aaa
mov
imul
xor
sahf
pop
scas
or
pop
or
int
sbb
sbb
orb
add
mov
mov
les
push
cmp
and
adc
fiaddl
nop
gs
mov
cmp
dec
fucomp
js
cmp
ret
ficomps
lcall
out
sbbl
xchg
shlb
mov
or
enter
out
lods
pop
outsb
outsb
push
dec
xchg
fistpll
or
inc
cmpl
das
out
pop
push
sar
push
idivb
in
and
in
and
inc
jp
sbb
sub
test
loopne
and
ret
bound
loope
jns
pop
xchg
mov
lods
pop
insl
sub
imulb
push
loope
ljmp
int
insl
cmp
or
mov
ret
jmp
add
fs
loopne
lock
nop
jle
in
aam
fidivs
loop
in
push
adc
out
xor
xchg
xor
popf
dec
pop
fs
mov
jge
cld
dec
or
inc
imul
cmp
aas
push
and
fbld
mov
lret
movsl
pushf
dec
sahf
mov
dec
jnp
loopne
cltd
aaa
and
mov
jae
and
cmp
dec
into
adc
hlt
lds
dec
sub
ss
rolb
sub
aas
leave
mov
xchg
insb
enter
loopne
test
jne
or
add
das
cmp
inc
outsb
sub
jae
mulb
sub
mov
inc
mov
test
imul
shlb
pop
js
lock
pop
daa
cmp
rcll
inc
sub
push
inc
lods
jbe
rclb
mov
mov
jle
sub
pop
gs
sti
mov
out
cmpsb
loop
sarl
pop
pop
pop
ret
pop
dec
xor
scas
gs
cmpsl
sti
mov
push
das
out
mov
ja
movsl
hlt
gs
repz
orl
addb
ret
stos
out
iret
push
add
push
stc
test
and
jns
jecxz
int3
in
call
ds
mov
jns
fistps
repnz
std
jl
adc
mov
mov
xchg
push
mov
lea
gs
xchg
or
fwait
mov
push
movsb
fbstp
lea
daa
mov
fwait
dec
dec
push
cmp
dec
xlat
jmp
jb
sbbb
dec
ficoml
mov
pop
sar
cmpsb
add
mov
nop
mov
jbe
adc
sub
fldenv
cld
add
into
jge
cwtl
bound
int
scas
in
fbld
lret
cmpsl
or
lods
jne
cmp
fisubrs
int
repz
sbb
sarb
rorb
xchg
sbb
stos
aaa
xlat
push
mov
pop
mov
nop
xchg
push
and
shll
fsubp
mov
mov
sub
hlt
mov
fdivl
add
data16
shrl
push
mov
fsubr
mov
fisubs
enter
sub
and
orl
and
mov
cmp
fcompl
mov
jae
call
sub
inc
adc
mov
xchg
cmp
inc
outsb
cwtl
mov
sub
add
push
xor
jp
dec
hlt
popa
pop
dec
ljmp
into
ds
push
orb
push
cmp
das
pop
fimull
and
and
sbb
and
pop
xor
mov
dec
gs
jmp
xor
add
nop
outsl
addr16
push
xchg
pop
stos
popf
cmp
add
mov
jmp
test
fdivrp
lcall
pop
je
push
jnp,pn
rclb
mov
sub
mov
daa
add
shl
inc
sub
mov
adc
mov
jo
test
push
les
les
push
jecxz
pushf
fcoms
push
jp
fsubl
imul
pop
adc
ljmp
rorl
dec
fxch
push
call
xchg
adc
sub
pop
xor
dec
cli
and
jns
adc
xrelease
cltd
cs
enter
add
mov
repz
pop
loope
cmc
arpl
pop
sub
mov
inc
test
pop
lea
popa
faddp
adc
sarl
push
dec
fwait
push
add
mov
sub
call
sar
dec
push
adc
in
and
int
mov
sbb
insl
xor
xchg
dec
dec
xlat
sub
ljmp
lds
inc
pushf
push
mov
imul
or
and
or
sbb
aam
fsubs
or
xor
mov
mov
push
pop
cmpsl
inc
pushf
sub
cmpsb
jo
cmp
sub
add
xchg
test
std
mulb
pushf
xchg
cmp
jmp
std
sub
fwait
push
daa
mov
jmp
fisubrl
jp
in
or
xchg
aad
sbb
dec
push
clc
cmc
pusha
mov
mov
in
andl
sbb
nop
and
in
enter
test
push
ljmp
out
mov
cmpsl
mov
mov
sbb
dec
mov
subb
dec
or
test
popa
pusha
jecxz
mov
scas
pop
test
enter
inc
push
hlt
inc
out
add
push
mov
daa
and
pushf
mov
pop
mov
nop
rclb
shll
lds
add
dec
pop
cmp
ret
inc
push
inc
jg
sbb
jp
sarl
and
movsb
cmp
sarl
cmp
cmp
add
jg
adc
daa
or
inc
push
je
mov
cld
clc
nop
insl
jge
cli
cmc
sbb
fucom
sti
fisubrl
jo
mov
xorl
xchg
add
sbb
jbe
pop
add
pop
mov
imul
das
es
in
xchg
jl
mov
in
clc
sbbb
push
enter
mov
stc
cmp
mov
push
mov
loop
dec
ja
jmp
or
sbb
lret
inc
outsb
test
je
sub
pop
test
jl
test
mov
imul
mov
mov
fcmovbe
pop
subb
stos
mov
jl
bound
nop
dec
mov
mov
rcrb
dec
push
cmp
outsl
and
mov
test
jl
rcrb
fstpt
and
ficomps
jl
ds
dec
xorb
cwtl
mov
fldcw
xchg
jb
adc
push
mov
aaa
mov
subl
lret
sub
push
jae
pop
or
lret
mov
xor
fs
sti
sub
mov
sub
int3
into
and
aaa
and
jbe
push
out
sbb
repnz
jbe
icebp
sbb
pop
dec
fdivrp
xchg
out
jbe
or
inc
xchg
addb
stc
push
div
dec
test
hlt
pop
test
and
lea
ja
mov
test
in
rolb
movsb
xchg
out
mov
xlat
xor
shlb
ret
inc
jns
xchg
adc
js
fwait
les
pop
clc
and
or
add
sbb
mov
inc
mov
push
push
test
scas
mov
es
lds
pop
sbb
lahf
orb
pop
lods
and
push
push
in
fisubrs
cmpsl
fwait
insl
push
stc
and
xor
pusha
pusha
rol
int
loopne
inc
push
fsts
pop
pusha
and
or
ret
sub
pushf
xchg
int3
fstpl
push
rolb
aam
mov
daa
in
pop
cwtl
push
add
ds
leave
adc
push
adc
dec
movsb
ja
mov
daa
inc
cmp
loop
sbb
sbb
insb
loop
subl
mov
ja
nop
jg,pt
xchg
cmp
mov
push
and
stos
orb
mov
cmp
mov
xor
xorb
mov
aaa
hlt
add
adc
pop
push
or
popa
mov
push
inc
dec
mov
in
push
mov
xchg
shll
pop
loopne
and
je
and
aam
xor
xor
sahf
mov
movsb
lea
mov
jne
inc
cmp
mov
cs
add
fsubr
mov
sarb
xor
inc
das
fucomi
fisubl
ficoms
bound
pop
lret
ds
jns
cld
inc
idivl
in
push
or
vcvtss2si
push
push
jmp
outsl
aam
gs
push
popa
movsl
jl
xchg
scas
addb
inc
hlt
inc
jp
outsl
cmp
push
cli
sbb
jmp
xchg
jnp
bound
fwait
dec
push
lock
add
std
mov
jno
mov
sahf
ss
xchg
jle
rcrl
lock
dec
or
outsl
mov
call
subb
test
or
stos
mov
int
mov
testb
mov
ljmp
lock
pop
lcall
xchg
jb
mov
aad
cmp
jmp
int3
ffreep
out
lods
lcall
inc
movsb
mov
pop
fistl
stos
push
gs
les
icebp
shrl
cmp
fnsave
ret
sub
mov
loope
xchg
jmp
jns
adc
addr16
loop
push
pushf
push
dec
lods
fistps
or
aad
xchg
sub
sub
into
icebp
cmp
sub
pop
sbb
aas
mov
mov
push
clc
fcompl
xchg
jmp
pop
inc
fucom
or
dec
jo
jne
dec
fidivrl
mov
xchg
rorb
cmp
mov
sbb
imul
xlat
cld
addl
in
push
sbb
mov
or
fstl
loopne
jecxz
dec
jle
test
inc
or
mov
stos
or
and
mov
mov
push
popf
bound
dec
das
sbb
dec
roll
mov
pop
sub
push
pop
aaa
aas
push
jbe
push
stos
imul
cmp
fwait
cmpb
imul
jne
or
mov
push
data16
ja
sbb
in
pusha
mov
add
out
test
xchg
adc
xchg
std
fsubr
test
out
jl
xor
sahf
dec
push
and
pop
stos
jmp
sub
movb
call
lock
mov
push
jae
mov
pop
lcall
scas
cmp
stos
adc
sub
cmp
push
cmpsl
clc
test
cmc
shl
loop
sub
pusha
push
dec
xor
loopne
insb
hlt
arpl
push
fsubrl
mov
out
push
mov
int
jb
jmp
rclb
es
lods
adc
sub
xchg
idivl
in
and
pushf
les
les
pusha
and
testb
mov
mov
sub
sbb
mov
sub
dec
xor
call
stos
sbb
pop
std
lock
inc
fbld
mov
pop
sub
dec
jbe
mov
lea
sti
imul
xlat
stc
jne
sub
pop
popf
or
push
test
test
mov
outsb
movsb
mov
cmpsl
lds
je
cli
lea
add
and
test
rorb
and
sub
dec
outsb
mov
jl
test
in
rclb
mulb
scas
jbe
push
xor
xchg
or
xchg
dec
test
ljmp
sbb
inc
sahf
and
out
lret
lods
lock
dec
add
aas
rolb
shlb
stos
scas
xchg
rol
inc
xor
rcr
cld
fdiv
add
cmp
mov
push
dec
rclb
mov
mov
sub
popf
mov
push
aam
clc
iret
push
pusha
push
sbb
mov
xor
cmpsb
cmp
test
mov
sub
hlt
inc
jecxz
push
inc
cmp
call
pop
rcrb
or
js
xchg
rclb
mov
sub
add
rcrb
mov
xor
addr16
movsb
cmp
loopne
add
lret
inc
mov
js
in
nop
mov
icebp
lret
cmp
jno
outsb
dec
hlt
sti
test
mov
fbstp
cmp
pop
mov
ret
push
add
or
in
mov
jnp
mov
pop
inc
xchg
xchg
fs
int
pusha
inc
push
stos
xchg
inc
imul
je
xorb
movsb
and
cmp
pop
lret
jl
icebp
xor
mov
mov
inc
mov
or
xchg
add
mov
ss
shl
popa
dec
push
inc
test
cld
pop
movsl
mov
das
mov
fadd
mov
push
or
push
aam
and
aas
in
fisubrs
xorb
jbe
or
adc
mov
in
es
dec
jg
cli
int3
jmp
adcl
das
and
cmpsl
push
push
jns
or
sbb
dec
ret
xor
mov
dec
xchg
jg
add
shl
mov
lods
or
out
mov
test
pop
pop
pop
loope
and
ret
js
xor
dec
enter
sbb
negl
pop
xor
orl
nop
sti
dec
cmovae
add
mov
cltd
cmp
shrb
lret
jg
xchg
repnz
stos
in
orl
mov
pushf
into
cmp
push
in
jnp
outsl
push
out
into
cmp
shlb
pop
dec
mov
jo
rorb
icebp
sbb
cmpsb
in
mov
jle
mov
jge
jo
xchg
popl
lods
daa
ss
je
cli
jmp
cld
cltd
loope
lcall
and
pop
cmp
repnz
movsl
mov
sar
out
push
add
je
mov
pop
fidivl
push
push
pop
mov
or
in
inc
lahf
and
inc
les
push
jp
jp
push
inc
add
in
push
jae
sbb
daa
scas
cmpsl
xchg
fildl
ja
std
add
jge
or
test
cmp
nop
cmpb
in
lret
iret
outsl
dec
lds
xor
cmpsb
sbb
in
in
adc
mov
jl
mov
push
add
loopne
or
mov
leave
push
dec
xchg
lods
test
xchg
pop
mov
xlat
pop
movsb
or
jle
negb
jmp
mov
arpl
stos
shlb
mov
push
jns
jae
pushf
je
cmpsb
mov
mov
into
sub
inc
inc
into
mov
cmp
jns
shlb
shrb
xor
cwtl
into
and
adc
xchg
sti
add
imul
or
cmpsb
call
cmp
out
gs
jno
cmp
jb
sub
in
sbb
dec
pop
and
sti
xchg
les
stc
mov
ds
test
or
mov
and
mov
and
fs
and
aad
stos
and
xor
in
mov
mov
orb
mov
std
mov
push
aas
mov
test
sahf
cmp
or
call
cmpsl
lahf
data16
ds
aam
push
pop
nopl
cmp
loope
jnp
sub
jo
aas
or
adc
dec
pop
sub
pop
cmp
sar
add
mov
dec
cwtl
pusha
push
adc
and
nop
insb
xchg
scas
mov
mov
pop
test
cwtl
addb
in
xor
mov
int
jl,pn
mov
mov
jns
and
push
push
sub
jo
mov
add
mov
insb
xor
mov
add
pop
jl
les
jne
push
inc
cltd
xchg
es
in
sbb
dec
lret
sbb
inc
pop
aaa
jmp
stos
pop
lahf
int3
sarl
xchg
mov
xor
sub
xor
pop
adc
or
lret
push
mov
pop
stos
dec
and
jecxz
test
dec
and
and
jge
push
push
jbe
sbb
add
aas
std
sub
inc
and
ljmp
ret
jp
vaddsd
aam
nop
sbb
add
decb
sbb
cmp
mov
aaa
push
fs
lock
mov
movsl
xor
into
sbb
pop
sub
adc
nop
and
adc
pop
dec
je
cmp
xor
hlt
mov
in
mov
adc
bswap
inc
addl
les
push
jbe
out
in
mov
mov
arpl
dec
mov
rol
mov
and
jg
fcompl
nop
outsb
xchg
mov
pop
jne
data16
rolb
lahf
jg
stos
adc
adc
push
pop
das
and
pop
xor
or
mov
dec
int
pushf
cmp
push
iret
push
js
gs
out
popa
inc
jne
xchg
nop
in
popf
mov
jge
mov
clc
xchg
js
add
lcall
dec
stos
jmp
inc
mov
stos
mov
push
fiaddl
or
jnp
push
xchg
jle
push
dec
sub
sbb
mov
outsb
stos
fwait
mov
mov
push
xor
adc
sbb
cs
lahf
adc
xchg
jg
pop
and
mov
inc
mov
into
dec
inc
sbb
nop
test
fisubl
sbb
sbb
sbb
cld
xchg
cmp
movsl
dec
add
jmp
out
mov
pusha
pop
pop
not
or
ljmp
pop
scas
ficoml
dec
adcl
les
ficoml
dec
mov
jp
jge
sub
outsb
test
xchg
mov
outsb
pusha
pop
add
jge
mov
adc
adc
jge
cmpsl
loopne
fstpt
pop
in
das
fldenv
in
out
lods
incl
ret
and
xor
mov
mov
dec
and
sbb
mov
nop
pushf
jge
jle
stc
scas
movsb
add
hlt
lahf
or
loop
addr16
adc
xchg
inc
loope
inc
inc
xchg
les
cs
call
xchg
fmuls
arpl
clc
and
xor
inc
fcomi
das
sub
andl
dec
scas
and
xor
adc
push
xor
pop
sahf
mov
stc
lret
loope
rcll
sub
mov
pop
arpl
sub
pop
cli
dec
aad
xchg
xchg
adc
insb
inc
loopne
push
clc
inc
mov
ljmp
xor
pop
insl
loope
gs
mov
mul
cmpsb
out
repz
inc
pop
leave
push
sbb
rclb
ljmp
fwait
loop
fidivl
sub
mov
stc
fisttps
add
scas
imul
stc
fnsetpm(287
pop
fwait
aad
mov
xlat
adc
aam
sub
jmp
inc
mov
andl
sbb
ret
xchg
fucomip
repz
or
hlt
lea
adc
push
xor
fdivs
addl
pop
adc
sub
test
xchg
mov
sub
or
xor
mov
adc
popf
mov
imull
mov
inc
repnz
stos
test
int3
mov
mov
icebp
fidivl
xchg
xchg
call
mov
mov
push
xchg
cmp
xlat
popf
and
xchg
pushf
movsb
jecxz
pop
gs
add
test
adc
xchg
adc
mov
bound
cmc
ljmp
or
and
lret
pop
sub
repz
adc
lret
push
sbb
out
cs
cmp
hlt
add
mov
mov
das
ljmp
insb
xor
sbb
insl
mov
repz
mov
pop
lods
aas
test
mov
pop
ss
lret
out
and
rcl
vmovss
dec
mov
aaa
int3
ret
push
mov
movsl
mov
pushf
sbb
into
xchg
xor
push
addl
iret
mov
aam
mov
ret
das
xor
cmp
mov
ljmp
jb
lock
lahf
mov
cs
xchg
push
sbb
ja
adc
lret
cmc
sub
mov
jp
repz
adc
jae
xor
loope
out
add
mov
sbb
jno
aad
sbb
adc
out
arpl
push
mov
inc
aad
out
sub
mov
nop
sub
cmc
inc
out
imul
mov
add
dec
xchg
cwtl
lcall
sub
std
xchg
lcall
out
shrb
dec
mov
into
bound
cmp
sub
fcmovne
popa
out
lahf
mov
lea
out
pop
popf
ja
dec
sub
mov
test
repz
test
push
sbb
mov
inc
int
das
xor
mov
dec
or
ret
xor
mov
push
loope
add
sub
xor
gs
pop
fistl
mov
and
outsl
pop
jmp
nop
dec
sbb
in
cmp
in
inc
ret
jge
out
movsb
xchg
jbe
mov
and
sub
cmpsb
push
out
jb
jne
lret
inc
in
or
and
and
rcr
cmp
notl
mov
int3
push
adc
shrl
inc
push
lret
and
jle
add
or
pushf
sbb
sub
mov
mov
movsb
sarl
pop
inc
mov
jle
insb
sbb
pushf
and
lret
call
inc
and
cmp
pop
xor
adc
jp
mov
jb
ret
cmpsl
rcrb
rcrl
push
ds
mov
sbb
adc
mov
icebp
arpl
mov
jg
jg
in
enter
mov
faddl
or
dec
push
jns
cmp
xchg
test
inc
sbb
mov
loopne,pt
mov
mov
cmpsb
cmp
in
negb
sub
lcall
mov
rcll
rorb
ret
mov
pop
push
stos
pop
xor
pusha
jmp
pop
and
and
sbb
testb
insb
and
mov
aam
lret
arpl
push
mov
pop
les
pop
into
cmp
jl
sub
dec
pop
out
in
aas
dec
xchg
pop
call
int
mov
je
lahf
push
fsubr
or
sbb
aaa
ss
jb
mov
mov
cltd
push
ret
insl
repnz
mov
cld
in
adc
cwtl
jl
mov
xor
scas
inc
mov
push
mov
addl
cmp
mov
push
push
sub
rcr
xlat
popa
jo
outsl
jl
ja
in
repz
xchg
movsl
and
cmp
lcall
xchg
xchg
cld
adc
iret
lea
push
and
ljmp
je
in
inc
int
fisttps
andl
rorb
cmp
cmovno
fistpll
inc
test
pushf
nop
cmp
cmc
mov
add
in
outsb
and
out
cli
out
or
xor
push
xor
add
dec
pop
cltd
inc
cs
jmp
dec
xchg
cmp
pop
lret
mov
shlb
shll
jae
divl
xor
mov
inc
sub
jmp
mov
pop
pop
and
int3
ljmp
lock
dec
push
sub
push
jne
mov
aaa
jp
inc
jne
sbb
stc
cli
sub
repz
stc
push
loopne
push
test
dec
xor
mov
lods
lea
enter
mov
xchg
jge
mov
jno
lahf
repz
ds
mov
jmp
jo
dec
ja
popa
scas
daa
add
stos
jp
cwtl
adc
pop
inc
fcmovu
daa
push
sahf
in
push
test
hlt
fsubl
xchg
mov
ret
mov
adc
les
add
je
dec
popa
pop
cmpsb
ds
lcall
and
pop
sbb
lret
or
stos
xchg
or
test
repnz
mov
dec
cld
pop
test
in
int
mov
pop
add
arpl
inc
shlb
hlt
dec
stos
dec
jb
pop
loopne
pop
in
jno
dec
cmc
shl
sti
jl
sbb
in
lret
or
mov
fwait
icebp
push
push
movsl
in
pop
pop
adc
xchg
jb
clc
push
jecxz
popa
pop
add
sub
jle
shlb
test
add
mov
test
adc
cmp
dec
mov
dec
adc
ror
fisubl
clc
add
outsb
xchg
mov
nop
rorb
out
test
vxorps
xor
loopne
cmc
adc
cmp
std
mov
mov
nop
jb
mov
cmp
aam
add
push
fcomps
aam
push
ljmp
lahf
xchg
jecxz
and
xchg
dec
mov
cwtl
cwtl
push
pop
scas
fistpl
cmpsb
mov
ds
test
ljmp
js
stos
or
dec
push
imul
xchg
lock
jecxz
and
cmp
lcall
hlt
cld
test
or
test
loopne
and
cmp
out
pushf
pop
in
adc
adc
adc
jge
xchg
test
push
push
test
cld
pop
push
jnp
decl
inc
adc
fxch
stos
push
dec
imul
pop
rorb
xchg
cmp
adc
in
mov
cli
lock
adc
sbb
mov
aad
popa
enter
pop
adc
cmpb
adcb
xstore-rng
cmpsl
add
or
ret
sti
pop
pop
mov
sub
inc
mov
xor
insb
sbb
dec
repz
add
sub
psubd
aas
and
cwtl
pop
inc
mov
xchg
dec
lret
shll
pop
xor
data16
mov
fs
sub
std
inc
jge
sub
scas
pop
lds
mov
add
adc
fwait
mov
sub
ficoml
push
pop
push
cli
add
stc
sub
pop
sti
cwtl
pop
adc
and
out
lret
out
jbe
hlt
rcr
rcr
or
rolb
adc
inc
ja
mov
add
xchg
adc
add
lret
idivb
cmp
daa
jb
cmc
jp
lret
scas
ret
xor
xchg
inc
inc
fwait
out
mov
jns
mov
ss
or
int
and
lcall
hlt
push
sbb
and
lcall
xchg
jbe
outsb
adc
ss
iret
outsb
test
bound
inc
push
icebp
pop
loope
or
pop
andl
nop
data16
mov
xlat
mov
outsl
jl
push
mov
push
jmp
popa
into
jae
jg
test
cld
dec
sbb
xchg
sti
ljmp
cs
test
mov
lahf
stc
cld
out
pop
adc
pop
push
imul
aad
lods
lret
inc
and
inc
or
cmp
loopne
mov
aas
into
jmp
insl
pushf
adc
std
jae
xchg
xlat
repnz
xor
fwait
scas
mov
xchg
dec
xchg
fidivrl
pusha
outsl
ror
cmp
in
lock
vcvtss2si
fsubr
out
cmp
in
mov
std
pop
xchg
inc
push
adc
adc
inc
dec
or
jmp
cmpsl
and
data16
push
imul
ljmp
les
push
cmp
mov
mov
ds
jae
test
call
or
pop
mov
call
mov
daa
jg
or
sub
push
icebp
push
add
into
ret
arpl
mov
add
pushl
stos
adc
lahf
pop
inc
mov
enter
out
inc
xor
mov
dec
lahf
xor
popa
push
into
sub
test
jmp
les
sub
push
sub
jbe
stc
movsb
ror
add
jns
rorb
shrl
mov
aad
and
pop
dec
push
xor
push
out
or
xor
xchg
xor
sub
and
cltd
loopne
inc
and
add
sbb
add
adc
rcpps
pushf
inc
add
ja
sti
jno
test
scas
roll
into
pop
dec
lods
roll
dec
dec
dec
shrl
jle
lea
stos
cli
mov
push
and
or
jg
push
cs
cmp
mov
aam
fldt
pop
test
and
and
fstpl
repnz
push
cmp
fnstcw
or
mov
mov
add
pop
dec
popf
xchg
fisttpl
jmp
push
or
cltd
xchg
pop
ret
xchg
mov
popf
adc
lds
incl
xor
sti
movsb
push
push
pop
lret
xchg
sarb
push
mov
adc
sub
push
scas
popf
and
lds
hlt
jno
rclb
stos
pop
das
out
stc
test
jg
or
mov
or
mov
xchg
push
fadds
lods
call
mov
aam
dec
ss
scas
mov
jecxz
insb
dec
insl
push
std
dec
div
add
pop
mov
mov
cld
lods
xchg
inc
sti
jl
pop
dec
sub
jge
stc
sub
and
xor
pop
xchg
pop
sbbb
mov
mov
add
sbb
mov
div
loope
test
pop
sub
or
cmpsb
ljmp
xchg
add
push
mov
mov
cmp
mov
add
mov
into
stos
sarb
arpl
push
out
dec
xor
pop
xchg
shrb
aas
iret
xchg
dec
int
push
xor
divb
pusha
and
sub
repz
rep
test
mov
jns
cli
inc
pop
inc
xor
imul
sub
adc
imul
test
mov
popa
adc
inc
jnp
icebp
xor
xor
jle
arpl
mov
cmp
lods
pop
cmpsl
scas
ja
pop
xchg
aam
and
or
outsb
ja
cmc
push
inc
int3
aaa
mov
cmc
je
mov
out
cli
and
fwait
cmp
pop
jmp
or
cmp
orb
pop
pop
adc
cmp
push
fcoms
das
sbb
lea
fistps
icebp
jge
popf
sub
aam
inc
aad
in
push
iret
movsl
mov
jne
fcom
mov
pusha
stos
test
out
mov
and
lahf
push
xchg
jns
sub
mov
aas
pushf
dec
scas
js,pt
lret
sub
addl
push
sbb
shrb
dec
add
dec
adc
scas
or
inc
int
out
test
or
inc
jge
adc
push
ret
pop
in
in
dec
outsb
mov
gs
loope
loopne
es
jne
ret
mov
jnp
sbb
pop
jnp
imul
cmpsb
adc
mov
aaa
lods
scas
cmpsl
mov
push
add
std
mov
mov
loop
insl
push
pushf
rcll
push
in
dec
sub
fildll
sub
fbld
stc
stc
test
shl
push
cmpb
xor
lock
mov
push
loope
adc
pop
push
test
add
addr16
int3
push
scas
pushf
or
fcoml
jle
pop
lahf
push
ja
jle
daa
or
add
adc
add
cmp
jns
add
xchg
or
lods
jl
add
repnz
jne
and
and
fbstp
stos
lret
pop
leave
lret
arpl
jl
fs
lods
mov
mov
clc
lds
jb
mov
bound
mov
add
jmp
lldt
sbb
adcb
jl
mov
sarl
shll
push
xlat
shll
out
add
outsl
aad
xor
sub
fs
frstor
sub
sub
or
jne
stos
ficomps
fstpt
add
shlb
mov
jg
xchg
adcl
xlat
xchg
pop
in
pop
mov
sub
cmp
cmp
dec
push
push
movb
mov
repnz
lods
adc
jl
rcl
in
andl
push
iret
insb
cmpsl
jle
pushf
xchg
sbb
pop
jne
adc
movsl
pop
pop
adc
fstpt
adc
jns
dec
gs
aam
jnp
nop
ret
cs
hlt
mov
mov
call
mov
jns
in
dec
jne
adc
insl
dec
loope
out
push
loopne
jbe
hlt
adc
cmc
xor
rorb
mov
clc
test
icebp
push
mov
repnz
pop
cmp
sbb
sub
or
inc
scas
add
imul
repnz
inc
xchg
mov
sub
sub
add
imul
and
mov
xchg
sub
cmpsb
sub
nop
pop
movsb
cmpsb
das
sbb
divps
mov
int
rcll
xchg
and
cmpb
push
and
sub
in
adc
jge
xchg
or
mov
mov
xor
push
pop
iret
push
pop
jmp
lea
or
mov
mov
lahf
xchg
aaa
test
cwtl
test
daa
loopne
cli
mov
xchg
xor
mov
call
xor
in
jnp
sahf
xchg
pop
xchg
leave
cwtl
jg
cmpsl
in
adc
imul
cmpsb
jne
adc
out
dec
hlt
cmpsb
sti
adc
cmpsb
pop
cmp
out
jbe
xor
int3
sbb
lock
repnz
mov
popf
fistps
mov
push
mov
loope
sbb
shlb
fiaddl
push
push
sarb
inc
dec
dec
test
mov
lods
aaa
inc
ljmp
mov
in
push
fldenv
aad
into
dec
inc
enter
mov
mov
mov
push
or
jg
and
loope
and
inc
fs
lods
xchg
popf
mov
mov
dec
vunpckhpd
das
inc
push
pop
inc
pop
xlat
sti
out
xchg
dec
imul
popa
pop
and
fld
pop
mov
pushf
int
mov
lret
popl
jle
leave
pop
pop
loop
test
mov
jp
cmpsb
cvtpi2ps
jbe
jge
aaa
push
pusha
sub
add
cmpsl
scas
mov
jg
aaa
mov
in
mov
and
mov
jle
xchg
cmc
push
push
pop
shlb
enter
pop
subb
call
push
or
scas
cmpsl
iret
stos
test
mov
lret
movsb
cltd
adc
pop
int
fsubrl
call
and
push
inc
cmp
push
out
add
and
pop
jbe
js
jne
xchg
aaa
and
add
xor
cmpsl
dec
ljmp
pop
xchg
out
fcmovnb
and
cmp
or
lods
push
jge
pop
in
jno
jnp
jl
movsl
mov
insl
add
stos
xchg
pop
outsb
lahf
stc
int
shrb
in
push
inc
adcb
sub
mov
pop
sub
dec
popf
dec
sbb
lods
and
repnz
int
xor
mov
movsb
sub
xchg
push
dec
dec
add
push
out
mulb
push
jmp
aas
lea
fsubs
and
jle
ja
mov
mov
out
fidivs
lahf
imul
fldenv
mov
shl
outsb
ret
pop
repz
in
dec
jb
bound
test
rolb
mov
dec
popl
push
pop
jns
fildl
adc
mov
sbb
imul
aad
inc
xchg
push
imul
cwtl
cmp
adc
shl
sbb
sub
mov
mov
lahf
ds
rcrb
mov
inc
fsubrp
push
or
js
fldt
pop
hlt
sahf
pop
imul
mov
push
xchg
pop
mov
movsl
int3
dec
scas
sbb
icebp
pop
sub
iret
adc
outsl
cmp
mov
jle
mov
sbb
push
scas
adc
mov
xchg
sub
je
inc
mov
ds
adc
stos
push
cwtl
pushw
shl
scas
loop
std
push
xchg
stos
test
mov
push
and
lds
cmpb
pop
out
movsb
add
cmp
pop
pop
lea
xchg
enter
add
stc
fcomi
mov
mov
cs
cmp
and
add
cltd
add
cmp
cs
ss
jne
sub
subb
inc
dec
mov
popa
std
jl
sbb
xchg
loop
sbbl
dec
push
test
lret
inc
addr16
and
fisubrl
or
mov
outsl
fbld
dec
loopne
data16
je
and
jo
test
push
inc
mov
push
push
lret
das
dec
cmp
test
jmp
iret
or
sahf
mov
stos
mov
pop
jl
sahf
fdivl
nop
mov
sub
sub
add
loope
imull
xchg
jne
or
test
mov
out
pop
add
cmp
stc
push
loop
test
leave
fdiv
or
lock
or
jo
enter
enter
loop
cmp
nop
cmpl
lods
sub
push
jg
cwtl
push
xor
test
pop
in
nop
jg
daa
and
cmp
cmp
or
lock
add
shrb
fsubl
jl
cmp
push
out
fwait
lock
imul
and
push
mov
jae
adc
movl
dec
adc
jmp
fimull
stos
mov
add
addr16
or
imul
popf
xor
cmp
out
sahf
inc
xor
cwtl
into
jae
adc
jns
and
pop
fistl
in
mov
dec
cmc
mov
or
xor
push
ljmp
test
test
andl
lret
lds
std
insb
mov
jnp
dec
notl
cwtl
rol
cmp
mov
call
adc
mov
addr16
push
decb
xor
xor
dec
sub
insb
jle
aas
xchg
lcall
sub
stos
outsl
push
cmpsb
pusha
cmp
fisubl
sbb
mov
xchg
push
das
cmp
es
push
cmp
inc
push
sub
stos
sbb
pop
je
adc
in
push
js
push
cmp
adc
mov
xor
call
xlat
lds
add
pop
jg
cli
loopne
jo
jb
push
rolw
imul
sub
push
pop
enter
and
pop
mov
lahf
xchg
sbb
sub
pusha
and
ss
pop
in
pop
push
push
es
hlt
mov
sub
test
ja
call
push
popa
popa
test
je
fs
clc
mov
xchg
or
lds
pop
cmpsb
jecxz
dec
stos
ret
aas
pop
xchg
into
loop
mov
ljmp
dec
repz
adc
cmp
push
daa
scas
test
lea
dec
push
outsb
mov
pmulhw
fsubr
test
or
cs
pop
inc
addb
je
jnp
xor
mov
xor
cmp
lock
dec
jmp
cli
xchg
and
adc
mov
aaa
inc
test
xchg
dec
or
sub
mov
imul
sti
dec
inc
push
fildll
aad
xchg
fs
cmp
add
je
clc
jl
je
in
ss
ss
movsb
xor
xchg
insl
scas
scas
popf
sub
in
daa
cmp
mov
inc
or
sub
cmpsb
mov
lret
mov
ds
xchg
fsubrs
mov
rsm
std
cs
push
sahf
sbb
std
pop
es
mov
test
cmpsb
or
pop
lahf
push
loope
icebp
push
aas
cs
aaa
cmp
leave
dec
push
mov
setl
adc
add
xor
sub
mov
xchg
or
dec
or
xor
into
adc
aas
push
sarl
xchg
das
jl
sbbb
rcrb
cld
or
out
dec
inc
inc
lock
mov
jmp
pop
mov
stos
repnz
ret
inc
imul
mov
stos
in
mov
aad
lcall
sbb
dec
mov
imul
cwtl
mov
out
loope
mov
or
push
imul
push
or
mov
or
dec
imul
scas
out
sbb
add
ret
repz
aas
or
sbb
add
cmpsb
fstps
push
push
and
pcmpeqw
dec
lahf
sbb
adc
inc
cld
inc
xchg
mov
xchg
fcoml
dec
sti
insl
pusha
cmpsl
cmp
gs
idivl
call
clc
mov
ret
leave
lods
cmpsl
insl
mov
aam
dec
rcll
ror
jl
not
popf
adc
data16
rcrl
int
aam
xor
pop
sbb
xchg
mov
aas
bnd
outsl
add
xlat
ret
mov
rcrb
loopne
mov
imul
adc
addl
scas
fldt
in
cs
mov
xor
jb
fimull
or
xchg
pusha
mov
push
icebp
pop
dec
movsl
push
addl
cmp
and
andl
or
mov
inc
bound
cwtl
mov
dec
sbb
mov
mov
jno
mov
or
outsb
rorb
andb
insb
imul
pop
mov
sahf
push
std
popa
xchg
push
bswap
dec
ret
in
outsl
sub
call
fbld
mov
sbb
mov
and
div
ret
push
push
pop
in
ret
jns
repnz
jnp
das
pop
pushf
es
adc
ds
loop
mov
xchg
xchg
xor
hlt
cmpsl
in
push
insl
xor
dec
std
in
in
cmp
xor
int
orl
mov
jno
loopne
rol
jns
cmp
imull
cmp
jecxz
mov
fwait
add
addr16
jnp
push
addb
xchg
xor
mov
add
jno
lea
cmp
test
adc
lahf
dec
fnstsw
notb
mov
sub
mov
and
icebp
sub
push
rcr
shrb
test
leave
test
pop
push
fiaddl
loopne
iret
pushf
inc
aaa
mov
jmp
mov
loope
dec
cmp
or
inc
in
test
dec
test
sub
or
iret
adcl
sarb
cmp
push
int
data16
mov
xchg
push
les
jb
mov
mov
pop
jg
push
xchg
sbb
mov
dec
jbe
nop
add
mov
jns
inc
adc
scas
mov
rcr
aaa
clc
sbb
das
inc
test
ds
aad
pushf
dec
std
jo
or
add
jmp
lcall
icebp
pop
xchg
sub
jo
test
xor
shrb
pushf
push
mov
addb
jb
lock
jo
lahf
or
inc
repnz
push
hlt
sbb
mov
cmpsl
aas
mov
lahf
scas
sahf
cmp
and
sbb
test
push
xorl
jle
xor
int
add
mov
out
std
aam
iret
nop
mov
xchg
dec
lahf
movsb
add
sub
mov
popf
mov
or
dec
rol
fcmovne
lods
in
cmpsb
loopne
or
cwtl
cwtl
imul
jns
jecxz
mov
push
ljmp
movsl
or
sbb
xchg
jae
notb
movsb
pop
and
std
push
clc
clc
pusha
lea
or
inc
inc
sub
dec
test
retw
repz
mov
pop
jno
xchg
clc
test
jnp
aaa
adc
cmpsl
fmul
lcall
in
jmp
and
lds
out
inc
dec
in
pop
ja
insl
xor
pop
incb
or
movsb
andb
sti
sarl
sahf
gs
xor
jnp
divb
popa
or
xor
adc
jb
xchg
pop
lcall
xchg
bound
leave
orb
adc
or
jae
mov
cmp
mov
mov
lea
cmc
pop
lcall
add
push
pop
cmp
push
xor
sub
aas
mov
stos
cmp
daa
dec
mov
push
pop
cmp
inc
jmp
mov
incb
loope
jbe
sub
es
or
popl
inc
insl
mov
mov
fdivs
mov
mov
popa
mov
popf
lret
jns
scas
mov
jnp
dec
lret
rolb
gs
in
outsl
mov
aas
xchg
mov
add
pop
inc
ret
sbb
jne
xor
sti
jecxz
movsl
loop
in
in
dec
addr16
inc
fdivs
pop
push
xor
or
mov
mov
push
jle
cs
cmp
xchg
call
psraw
jae
cld
cmpsl
insb
xchg
ret
nop
mov
sbb
pop
and
sti
or
mov
loope
mov
shl
cmp
sub
sub
xchg
xchg
outsl
addr16
insb
mov
inc
adc
roll
sarb
jo
in
sahf
imul
push
fwait
addb
xlat
mov
repz
mov
outsl
pusha
adc
scas
or
ja
mov
int
mov
test
push
adc
shlb
lods
dec
pop
cmpsb
xchg
shr
inc
add
in
outsb
gs
adc
subb
sub
ret
sub
movsb
std
fidivrs
and
shrb
inc
push
add
pop
adc
jp
lret
jle
pop
in
push
mov
ror
mov
dec
imul
cmp
xor
hlt
add
and
sub
fisttps
lods
mov
push
iret
rclb
cltd
mov
sbb
push
push
xchg
adc
bound
ja
adc
out
out
add
mov
sbb
and
fiaddl
outsl
sub
mov
pop
xchg
cmpb
mov
and
rcll
push
inc
ljmp
inc
push
fnstenv
daa
mov
dec
mov
jmp
mov
scas
mov
xchg
aaa
sbb
xchg
mov
mov
inc
mov
mov
les
or
xchg
push
scas
xorb
and
add
mov
aaa
cmp
pop
aas
scas
imulb
inc
mov
dec
inc
dec
jge
xchg
in
inc
push
sbb
cmp
aaa
xchg
lcall
icebp
cmp
mov
and
pop
cmp
adc
fwait
xchg
ss
xchg
arpl
inc
ret
xchg
in
popf
dec
ss
and
js
jno
loopne
cmpsl
sub
mov
fxch
popa
sub
lcall
jnp
cmc
pop
add
leave
or
xchg
test
scas
daa
outsl
cmpsl
sub
mov
sub
lahf
jnp
daa
imul
push
movsl
jmp
addr16
mov
sub
in
adc
inc
add
cmp
or
push
loopne
mov
fnsave
and
stc
popa
inc
rcll
or
dec
gs
inc
or
cld
dec
mov
movl
jae
cmp
arpl
push
cmp
or
push
insb
cmp
enter
jns
insl
aam
test
cwtl
out
dec
mov
cltd
nop
jbe
mov
loopne
cmpl
das
rcl
movl
cltd
mov
xor
shlb
movsl
add
inc
add
das
mov
push
dec
stc
ljmp
pop
lcall
pop
jb
jno
push
ret
jle
aas
divb
mov
dec
dec
fisubs
xor
sbb
mov
fcomip
push
cmpl
lret
ds
lcall
mov
xchg
in
inc
cmp
jecxz
sti
cmp
js
nop
cmpsb
scas
icebp
xchg
push
leave
mov
cmpsb
pop
push
push
or
push
fnsave
mov
push
jne
jg
and
or
lea
mov
jmp
push
into
push
aad
pop
orb
outsb
ret
loop
iret
mov
pop
pop
sbb
inc
cmc
fcmovnu
adc
mov
xchg
cmpsb
add
add
sbb
xor
xchg
dec
test
loopne
rclb
enter
sti
nop
jg
mov
popf
inc
sbb
pop
add
sbb
pop
cmpsl
inc
lret
fsubrs
sub
jecxz
movsb
es
cwtl
insl
test
lcall
sahf
jbe
pop
aad
dec
out
cwtl
or
adcb
cmp
fxch
mov
subb
or
inc
data16
adc
adc
push
mov
insl
adc
add
push
js
fsubr
pop
ret
cmp
push
lcall
lods
popa
xor
stos
arpl
aam
adc
in
jo
fdivr
jg
push
daa
inc
push
inc
xchg
adc
and
mov
cltd
cmc
icebp
int3
insl
push
pop
pop
xorl
mov
xchg
or
frstor
cmp
cmp
lock
cmp
sub
xchg
iret
pop
cmpb
in
cwtl
insl
lock
jae
sub
xlat
inc
pop
sarb
mov
lretw
nop
shlb
rolb
sbb
sbb
xor
sarl
and
push
cmc
loope
cmp
dec
std
pop
in
sbb
push
jbe
cmp
shl
pop
mov
add
in
mov
xor
repnz
rolb
dec
repnz
dec
jnp
rcl
in
sti
pop
mov
push
xchg
and
out
xchg
clc
mov
repnz
mov
lret
andb
mov
loope
mov
push
mov
roll
xchg
aad
mov
fwait
lret
push
jno
andb
push
stos
xor
leave
adc
fwait
mov
mov
shrl
jle
cmpsb
fwait
adc
sub
mov
sbb
xor
in
push
rolb
or
lret
mov
test
dec
dec
dec
outsb
loop
adc
ficoms
fiaddl
hlt
inc
sti
push
repnz
mov
inc
idivb
outsl
lahf
push
into
aam
fsub
scas
pop
movsl
mulb
aam
clc
adc
bound
sbb
ja
mov
sbb
clc
dec
mov
jg
push
sub
fdivs
inc
push
clc
clc
push
repnz
cmp
mov
inc
ljmp
fwait
push
dec
lret
mulb
push
push
lds
cltd
xchg
cltd
das
add
nop
ret
test
inc
mul
ret
sub
xchg
inc
rcrb
sbb
pusha
dec
imul
cld
not
pop
fistpll
cmp
add
dec
add
and
or
mov
jb
out
mov
ret
lea
nop
lcall
adc
insl
fcomps
ret
mov
insb
pop
push
in
jmp
xor
icebp
subb
mov
xchg
pop
lret
lds
inc
and
mov
or
aam
ds
faddl
mov
xor
xor
xor
loopne
cmpsl
inc
aad
cmp
jae
rcll
inc
or
in
adc
dec
sub
mov
mov
lods
call
mov
add
aaa
dec
mov
imul
or
dec
adc
inc
and
jbe
mov
imul
les
dec
insb
icebp
sbb
sub
add
call
jb
inc
loopne
mov
pop
lods
sarb
loopne
cltd
mov
fisttps
out
daa
int
add
out
mov
push
in
pop
mov
das
jg
sbb
xor
call
fwait
arpl
xchg
jbe
sar
push
out
clc
xchg
mov
popl
pop
dec
fucomip
imul
dec
push
mov
pop
mov
int3
push
cltd
or
jmp
daa
stos
pop
and
ret
insl
add
sub
cmc
inc
fldlg2
adc
lret
movsb
cmpb
xor
lahf
or
xorl
xor
js
push
inc
mov
cltd
xchg
sahf
sub
jae
lock
stos
aas
incl
mov
xchg
cmp
daa
les
cmp
cmp
or
fidivrs
lods
sbb
pop
es
test
outsl
cli
jle
dec
push
popa
stos
setbe
push
out
and
sub
out
pusha
fdivrl
or
scas
pop
xchg
cmc
fcmovnbe
imulb
int
cmp
repnz
cmp
push
cmp
mov
pop
pop
imul
add
inc
call
daa
sub
adc
mov
push
subl
repnz
push
pop
lcall
out
sub
add
aad
loop
dec
pop
shlb
cmpsl
xchg
inc
xchg
daa
push
hlt
addl
push
jne
fstl
scas
fcoms
pop
cmp
clc
lds
and
ficomps
mov
inc
jbe
loop
cmpl
das
movsb
in
push
inc
push
mov
ljmp
shll
stos
pop
lock
mov
inc
adc
je
dec
test
pushf
mov
lea
sbb
xor
jne
jbe
xlat
sbb
cmpb
lds
or
jl
sub
ja
mov
xchg
adc
lea
cmp
push
sub
push
jl
jecxz
adcb
inc
xchg
dec
xchg
dec
repnz
es
outsb
cmpsb
jle
mov
cmp
inc
sbb
mov
lcall
jmp
xchg
stos
sbb
jns
push
jo
mov
cs
aad
push
bound
push
xor
mov
fstpt
cmpsb
mov
fidivrl
mov
pop
cmp
push
push
jecxz
daa
lock
out
mov
adc
sbb
cwtl
stos
sub
test
jo
inc
xor
negl
mov
cwtl
clc
inc
and
or
es
fs
and
les
mov
xor
dec
fisubrl
jecxz
aaa
addr16
xchg
jmp
js
mov
inc
sbb
dec
int
nop
dec
ljmp
jnp
mov
adc
int
push
std
inc
xchg
adc
xor
roll
jo
sahf
ficoml
sub
inc
scas
dec
sbb
stos
or
rorl
pusha
fs
mov
dec
ficoms
push
add
fidivs
divb
jle
lahf
mov
jb
outsl
adc
mov
pop
inc
and
repz
cmp
xchg
lea
sahf
pop
flds
xor
test
dec
pop
xchg
or
mov
sub
pop
aas
mov
cltd
adc
mov
outsb
mov
inc
jno
pop
cmc
inc
mov
lods
cmc
mov
cmpsb
xchg
loopne
cs
cmc
scas
mov
mov
sahf
daa
sbb
xor
mov
xor
pop
cld
mov
sbb
movsb
sub
and
insb
pop
push
lret
or
dec
sub
es
lock
mov
lea
cmpsl
sub
sahf
lock
mov
add
add
in
adc
xor
mov
ljmp
inc
cmpsb
adc
repz
inc
mov
fcmovnbe
mov
dec
ret
iret
add
inc
mov
outsb
arpl
ss
xorb
sbb
pusha
jg
outsl
jmp
sti
jle
shl
addb
add
or
pusha
lcall
lret
pop
push
mov
lods
dec
pop
movsl
sti
outsb
add
pop
fldenv
test
insb
lahf
fistpll
mov
sbb
sbb
mov
mov
vpavgw
aad
xchg
outsl
sub
lahf
fyl2xp1
adc
ss
dec
xchg
xchg
jle
mov
out
sub
inc
jae
push
jno
lea
inc
mov
lea
rolb
xchg
iret
mov
jae
adc
sbb
fisubrl
xchg
pop
xchg
in
and
pop
inc
or
jg
inc
cmp
push
adc
fidivrs
push
cmp
xor
shl
faddp
lds
fwait
ja
xor
arpl
test
xchg
jns
repnz
mov
ficompl
mov
inc
pushf
dec
or
movsl
xor
sbb
lahf
pop
mov
ss
aas
pop
jecxz
fwait
ret
inc
jl
lods
out
ret
or
cmp
jl
in
cwtl
xchg
mov
nop
fsts
addr16
dec
lcall
inc
sub
sub
dec
icebp
lahf
adc
ret
ret
inc
in
lret
push
pop
ljmp
mov
mov
mov
adc
pop
je
outsb
cmp
jns
loopne
test
mov
pop
daa
jae
sahf
mov
out
xchg
push
xor
pop
and
xor
pop
xchg
jne
hlt
sti
fbld
xchg
lret
xchg
out
mov
xchg
lods
xchg
nop
call
xor
sub
xchg
push
mov
jne
fcompl
mov
rorl
push
xchg
push
imul
mov
pushf
push
test
sub
inc
and
adc
cmp
and
fmuls
mov
and
stc
push
or
loopne
sub
mov
ja
nop
jle
stc
addr16
jmp
inc
lret
xor
mov
sub
popf
jae
je,pt
and
jmp
pop
and
outsl
jge
cld
aad
sub
fistpl
cmp
cmp
xchg
cmp
inc
add
and
dec
mov
pop
lods
pop
mov
movsl
insb
jo
dec
fcmovnu
xor
fwait
rcll
test
icebp
adc
pop
cltd
int
aas
cmp
or
or
push
sbbb
inc
pop
cli
dec
xor
or
mov
sbb
hlt
add
mov
loope
xchg
fnstcw
mov
jge
in
stc
out
xor
inc
adc
add
movsb
test
clc
xor
outsl
sub
dec
push
sub
sbb
pop
cmp
aam
push
aad
iret
addl
mov
pop
out
xor
aaa
xchg
mov
adc
dec
outsl
sub
sarl
xor
and
inc
fucom
shll
and
and
mov
xchg
or
test
or
inc
push
insb
fildl
sub
mov
sbb
out
stos
mov
aad
or
mov
jl
pop
ss
cmp
ja
pop
std
push
sbb
test
jbe
or
xchg
popf
inc
mov
dec
scas
pusha
cmp
dec
and
pop
sbb
icebp
jae
jb
mov
add
mov
pop
pop
fisubs
pop
xchg
in
rcll
mov
and
add
stc
sahf
shll
sti
sbb
xor
je
jns
jbe
lock
push
pop
popf
cmpsb
lods
movl
aaa
cld
pusha
lldt
outsb
pop
sub
movsl
mov
rcll
sbb
repnz
imul
cs
jno
insl
pop
les
mov
je
jge
jg
dec
mov
xor
add
and
xor
daa
subl
sub
xchg
movsl
sbb
sbb
mov
add
aam
pop
mov
aam
and
imul
xlat
scas
xlat
icebp
push
inc
sbb
add
mov
and
push
call
push
inc
inc
adc
outsb
adc
pop
jns
sbb
add
jp
push
negb
push
rep
inc
in
sbb
xchg
aas
adc
imul
fnsave
or
daa
add
addl
mov
push
add
xor
cmp
mov
cmp
mov
cmpsb
adc
movl
pushf
xorb
cmpb
mov
or
mov
fiaddl
cld
xchg
cli
out
mov
mov
push
ds
cmp
dec
add
dec
pop
outsl
aaa
mov
xor
xchg
jmp
mov
into
lods
and
xchg
idivl
xchg
xchg
inc
out
cmovl
push
jp
popf
sub
stos
lods
in
out
cmp
test
push
and
cwtl
loopne
cmpsl
dec
xchg
cmp
add
popa
add
andb
xchg
pop
ret
xchg
rol
loopne
cmp
pop
push
mov
or
fildl
ds
imul
lods
xlat
mov
dec
enter
out
fcmovu
xchg
push
and
pop
pop
cmp
or
in
ljmp
fcoml
jle
andb
jno
pop
cmp
mov
adc
jno
fwait
arpl
outsl
xchg
out
add
push
push
in
lea
cmc
xor
jp
and
mov
xor
mov
mov
sbb
adc
outsb
xchg
and
push
push
inc
icebp
xor
fists
sub
in
mul
insb
outsl
movsb
data16
rorb
sbb
add
lods
das
ss
and
add
dec
pop
and
mov
cmp
nop
mov
adc
hlt
out
dec
cwtl
jne
mov
movsl
sub
cmp
push
testl
fcoml
lret
push
lret
jno
stos
push
mov
sarl
aad
out
adc
push
imull
fbstp
adc
cwtl
mov
xor
popa
test
jecxz
mov
ret
jg
and
inc
sub
in
xor
and
in
xchg
mov
pop
mov
and
dec
js
sbb
in
xchg
sub
je
cmpsb
lcall
in
inc
lcall
sub
inc
sbb
popa
lock
sub
mov
movsl
adc
xchg
out
jmp
addr16
lods
out
push
mov
jb
repnz
hlt
movb
nop
nop
sub
addr16
lret
bound
inc
mov
adc
inc
fbld
xchg
lret
loope
xor
js
sub
xlat
mov
inc
lret
out
cmp
in
mov
cmp
jg
les
and
mov
jno
xchg
lahf
mov
and
or
cmp
jns
add
xor
adc
cmp
dec
mov
sbb
xchg
cmpsl
and
lods
gs
repnz
out
pop
inc
dec
orb
inc
fnsave
jle
jmp
cmp
pop
aad
test
xchg
push
xchg
push
or
sub
cwtl
or
jle
clc
xchg
jmp
adc
testl
and
imul
rorl
es
imul
arpl
jl
cmc
in
and
test
aas
popw
inc
shll
out
test
jecxz
and
fisttps
dec
pop
sti
xchg
jbe
mov
inc
scas
mov
jo
lcall
mov
inc
shll
fists
push
rclb
pusha
insl
sbb
daa
add
xor
cmpsb
imul
lds
pop
imul
push
jno
sub
repnz
push
jne
jbe
xchg
pop
sub
enter
mov
out
mov
mov
frstor
cmp
jp
mulb
in
test
repz
shrb
mov
mov
jmp
rep
sbb
cmp
mov
stc
dec
fisubl
in
stos
out
mov
popf
ja
mov
das
sub
push
pop
fidivrs
push
mov
add
nop
xchg
lahf
and
outsb
cmp
or
orb
out
jnp
cwtl
xlat
dec
inc
sbb
leave
into
pusha
lods
or
ss
pop
insb
add
ljmp
std
or
ljmp
mov
daa
test
in
mov
jmp
mov
mov
stc
pop
test
and
imul
test
dec
xor
dec
ret
mov
cmp
inc
xchg
test
arpl
push
inc
fstpl
adc
inc
pusha
and
nop
adc
mov
pop
and
push
mov
movsl
push
rcrl
pop
inc
push
inc
pop
mov
stc
add
pop
push
je
loope
xor
int3
adc
and
enter
filds
push
xchg
loop
into
xor
int
rcll
add
nop
mov
xchg
jb
mov
xor
fsts
push
mov
lret
jl
insl
pop
dec
mov
and
adc
push
mov
sub
pop
dec
jnp
or
hlt
stos
pop
aad
fnstenv
add
decl
mov
add
mov
addr16
cld
stos
nop
in
fwait
fs
mov
test
inc
cltd
lods
jb
leave
into
fwait
cmp
repnz
jl
push
sbb
ss
mov
std
mov
xchg
rolb
sub
outsl
pusha
dec
lods
jnp
loopne
xchg
popa
adc
pop
hlt
rcrb
shrl
jbe
jo
addr16
and
pop
loope
in
div
cmpl
adc
shll
adc
arpl
sahf
and
mov
add
lret
popa
das
pusha
dec
pushf
and
subl
nop
fimuls
xor
aam
xchg
fdivs
push
mov
sub
and
pop
stos
shr
sbb
mov
and
xor
lret
mov
fcompl
int3
call
add
pop
lret
sbb
or
xlat
scas
dec
jns
or
sub
loope
lahf
sti
out
test
sbbl
pop
clc
jnp
je
cmc
dec
mov
std
push
inc
rorl
es
lret
xchg
push
ljmp
rcl
outsl
subl
fwait
subl
inc
xor
inc
aaa
mov
lock
shll
jmp
sbb
jno
push
test
sti
adc
call
push
sti
mov
adc
imul
sub
popf
xchg
dec
cwtl
in
adcb
std
pop
out
xor
mov
out
outsb
jae
push
xor
test
xlat
mov
outsb
add
xor
mov
mov
int3
loopne
jge
lods
mov
arpl
push
pop
cltd
or
in
or
mov
sahf
je
pop
push
push
in
mov
xchg
dec
xlat
ret
cmc
or
stc
cltd
icebp
add
pop
enter
jmp
add
and
arpl
int3
lods
xchg
adc
fwait
outsl
mov
mov
cmpb
inc
arpl
popf
lret
idiv
mov
and
push
sti
jl
movsb
call
sub
jae
adc
mov
out
jle
enter
jno
repnz
pushf
lcall
cmp
pop
test
mov
daa
xchg
jl
mov
imul
inc
inc
sub
dec
test
inc
lret
adc
rorl
xchg
dec
test
shll
cwtl
cmpsl
stos
shll
insb
shl
sbb
ljmp
mov
pop
jle
dec
add
mov
xor
mov
cmc
mov
or
call
repz
lahf
xor
cmp
cmp
adc
cmp
push
lret
push
cmc
lret
scas
icebp
fisubrs
mov
push
dec
mov
leave
jne
and
adc
lret
out
das
jge
lds
or
jbe
pop
xchg
xchg
mov
and
test
fldcw
fcmove
cmc
mov
lcall
enter
mull
pop
pop
sbb
bound
stc
mov
sbb
xor
lret
mov
cmpsb
aad
pop
div
jns,pt
push
xor
fcompl
pop
push
in
inc
loop
cmp
jno
cld
pop
push
mov
or
xchg
xor
dec
inc
rcrl
inc
jp
mov
aad
sub
repz
aas
xor
data16
mov
nop
inc
insb
adc
dec
and
inc
cmpl
gs
sub
pop
xor
xlat
add
lcall
lret
pop
cmp
pop
addr16
xor
pop
test
js
lea
popa
stos
cmp
lret
adc
in
xor
lahf
xchg
ficoml
sub
outsl
call
sbb
fucom
js
add
pop
add
les
xor
and
in
pusha
mov
mov
fcomi
fisttpll
adc
add
add
mov
outsl
shrl
inc
test
or
or
mov
in
mov
cmpsl
rolb
test
inc
mov
inc
out
into
push
fwait
dec
ret
loope
push
fptan
xlat
dec
xor
rorl
jo,pt
mov
mov
lds
push
inc
cltd
loop
and
fcmovu
pop
and
add
and
cmpsl
mov
fs
xor
icebp
sub
pop
xchg
lock
push
mov
push
ror
je
stc
and
loopne
push
push
ja
leave
adc
imul
add
sub
dec
mov
imul
mov
cwtl
pop
leave
inc
int
cmp
sub
sbb
add
and
dec
xchg
mov
jg
mov
xor
push
pop
test
or
jecxz
stos
loopne
sbb
lret
add
sub
aas
sub
in
jae
setne
leave
sub
into
mov
dec
insb
ja
sbb
sarl
enter
les
cmp
ljmp
pop
adc
fistpl
add
fsts
je
ret
or
sbb
hlt
sub
push
pop
rclb
scas
ljmp
or
add
popa
and
jp
jbe
pop
jl
add
ret
aam
inc
push
and
push
loopne
mov
xchg
xchg
outsb
aas
stos
xlat
rol
loop
cld
hlt
jns
push
push
cmp
daa
mov
and
aaa
mov
add
jnp
gs
sbb
aaa
mov
sarb
and
mov
and
js
in
fwait
mov
bound
dec
add
inc
and
xchg
add
and
jae
jbe
dec
xchg
scas
dec
rcll
add
mov
repnz
sbb
mov
aam
imul
loope
cmp
jge
xor
xlat
jo
scas
mov
test
aad
sahf
push
cmp
clc
sub
rcrl
test
stos
mov
push
cmpsl
and
push
pop
out
jbe
pop
lock
aam
popf
and
mov
enter
hlt
add
add
das
imul
dec
cmp
aas
std
or
in
mov
adc
jbe
idivl
mov
sub
into
mov
adc
jle
je
mov
jbe,pn
movsl
and
push
and
mov
and
jbe
pop
idivl
cmp
aam
or
cltd
sub
lret
sbbb
push
jg
jns
sub
es
out
and
popa
jno
xor
cwtl
jmp
inc
pop
push
ret
inc
popa
or
loopne
sbb
cmp
test
stos
and
into
sub
xchg
add
xor
fsubl
cli
aaa
movsb
and
cmp
mov
je
sub
fiaddl
out
sbb
sbb
cmp
add
lock
je
mov
mov
push
rclb
js
and
cmp
jp
mov
adc
xchg
gs
adc
xor
add
test
rolb
data16
jb
and
das
std
push
lcall
lcall
xchg
lods
inc
or
mov
fisubl
data16
lock
push
fbstp
pop
push
addl
sub
loope
icebp
fwait
cmp
inc
fnstsw
xor
cltd
sbb
jge
or
fnsave
out
clc
jle
imul
cs
out
push
insl
sbb
negb
pop
test
jnp
out
mov
mov
mov
pop
jecxz
fincstp
mov
mov
lock
mov
push
adc
or
cld
int
into
mov
fstl
rorb
popa
pop
add
in
sub
sti
xor
cmp
cmp
mov
outsl
push
xchg
stc
and
shlb
nop
pusha
cmp
orl
ljmp
xor
xchg
xchg
jl
fmulp
adc
mov
stc
mov
and
subl
xchg
ret
in
sub
fisubrs
mov
lods
out
das
ljmp
pop
jno
mov
inc
repnz
mov
fs
sub
lods
outsb
add
mov
jns
jo
lds
out
adc
push
pop
lcall
pop
outsb
shr
adc
lahf
mov
out
cmp
adc
cmp
dec
push
sub
push
mov
dec
in
jmp
lcall
sub
jne
out
test
jnp
and
and
and
out
fs
pop
or
sub
cmpsb
push
xlat
sub
stos
jle
push
xor
mov
sarb
test
inc
pop
mov
inc
pusha
pop
dec
iret
sahf
sub
add
pop
xor
fcompl
push
pushf
in
shlb
xor
jle
pop
bound
push
xor
dec
or
into
mov
fstpl
into
adc
cmpsb
loop
int
es
jmp
adc
pop
push
dec
xchg
insl
or
cmp
loop
hlt
mov
rcll
jl
scas
ficoms
in
jecxz
call
mov
cld
xchg
test
jge
sbb
and
pop
push
js
loopne
call
loopne
frndint
dec
xlat
iret
cmp
data16
xchg
rorl
cwtl
lea
in
ss
mov
jb
mov
xchg
adc
mov
roll
xor
and
mov
and
mov
pop
mov
loop
jne
jecxz
js
jnp
dec
imull
pop
movsl
inc
lret
xor
or
inc
dec
mov
xor
adc
jbe
pop
or
and
shll
dec
pop
fistl
push
jl
mov
adc
sub
xor
push
shrl
cmp
in
popa
or
out
sub
push
mov
push
call
fisubrs
fdivrs
inc
adc
in
dec
xchg
ljmp
push
enter
aaa
jo
fcomip
pop
xchg
vpermilps
mov
push
and
daa
cs
iret
and
cmpsb
imul
stos
hlt
sub
inc
scas
cmpsb
jbe
pop
mov
andb
fstpl
rorl
xchg
rcl
aas
and
xor
insb
out
pop
test
adc
idivb
pusha
jno
inc
faddp
adc
and
ss
stc
mov
mov
xor
jbe
mov
shrb
lea
mov
hlt
inc
xchg
cmp
stc
call
dec
call
dec
xchg
pop
xchg
cli
or
mov
xlat
xor
pop
ds
out
rcrl
push
fnstenv
movsl
adc
popf
push
into
loopne
lock
mov
aaa
and
fstl
movsl
ret
rcll
jo
push
xchg
or
ret
xorb
mov
stos
daa
fldl
xor
add
xchg
fsub
fmul
outsl
test
out
popa
insb
scas
call
inc
scas
hlt
cld
sarb
add
pushf
faddl
call
mov
bound
leave
mov
mov
inc
cmpsl
jmp
test
xor
in
fisubrs
mov
fnstsw
jnp
outsb
push
push
inc
dec
sti
int3
jle
lret
pop
lods
mov
or
orb
icebp
adc
xor
sub
in
mov
dec
push
nop
pop
mov
lcall
push
inc
add
stos
mov
in
mov
sbb
dec
sarl
sahf
mov
mov
xor
and
add
ljmp
cli
fnsave
dec
scas
sbb
inc
js
add
call
popf
adc
rcrl
inc
mov
xchg
sub
mov
push
cld
jp
inc
inc
divb
cmp
repnz
xchg
mov
cltd
xchg
hlt
sbb
add
arpl
adc
xchg
xchg
sub
stos
iret
iret
std
sti
xchg
decl
jmp
xchg
dec
sbb
aam
sub
lahf
sbb
push
push
pop
mov
mov
addr16
adc
loopne
or
push
lret
and
cmpsb
gs
push
stos
pop
xor
dec
das
bnd
aaa
out
aas
xchg
sub
pop
xor
jl
roll
shlb
and
mov
or
js
shll
mov
fildl
push
pop
xlat
xchg
mov
inc
jl
dec
sbb
cmp
pop
cmc
notl
add
movsb
in
mov
mov
inc
out
jecxz
mov
loop
mov
in
lea
fidivs
push
dec
sbb
insl
mov
jl
xor
out
cmp
adc
jecxz
pop
clc
cs
fistpll
in
and
mov
rcrl
mov
fisttps
or
xor
add
shll
inc
inc
and
inc
movsl
aas
push
inc
shrb
or
nop
mov
int
lcall
push
shrb
cmpsl
movsl
xchg
lcall
ljmp
cs
scas
ret
jmp
mov
aad
xchg
pop
push
fistpll
shrl
std
cmpl
aad
leave
jle
mov
loope
ror
adc
xor
les
sub
push
lods
mov
dec
cmp
outsl
jmp
xor
add
mov
dec
and
call
mov
ret
repnz
mov
aam
pop
mov
sti
rcl
add
inc
jnp
adc
scas
scas
cmp
mov
xchg
leave
mov
sub
ljmp
add
test
sub
out
cs
aaa
lret
sbb
fwait
pop
cmp
mov
pop
and
pop
testl
or
jo
cmp
sub
ljmp
test
inc
arpl
repz
xor
cwtl
lea
push
int
push
mov
js
mov
popa
dec
inc
mov
pop
pop
push
xchg
push
sub
xchg
push
jp
adc
push
fidivs
scas
cmp
jnp
sar
pop
xchg
sub
cltd
sbb
mov
aaa
rol
sub
clc
jb
sbb
call
loope
aam
loope
push
addr16
mov
imul
and
jmp
popf
in
jecxz
loop
mov
lcall
push
mov
pop
lds
arpl
jb
push
js
adc
cmpsl
mov
popf
add
mov
lret
push
cmp
sbb
repnz
jmp
int
xchg
lahf
ficoml
adc
imul
enter
push
xchg
mov
pop
pop
adc
lret
clc
inc
fs
push
inc
mov
xchg
xor
out
leave
icebp
jns
push
sbb
jecxz
in
fdivl
daa
add
adc
lods
sarl
test
imul
aam
ror
mov
push
xor
adc
push
roll
inc
stos
xor
mov
fisttpll
jbe
dec
xchg
repz
outsb
inc
xchg
scas
aad
add
xor
in
pushf
out
fdivl
jb
addr16
jns
shlb
in
pop
mov
mov
mov
sbb
stos
xor
sbb
sti
cld
jne
inc
mov
fmull
mov
sbb
cs
cmp
call
sbb
lret
jecxz
int
scas
add
sarl
jecxz
aam
lahf
jo
test
adc
cs
aam
rcrl
rorl
fcmovnb
xor
sub
mov
and
les
mov
mov
and
mov
cmp
xchg
in
sub
bound
xchg
loop
xor
addr16
jno
and
in
pop
sbb
popf
insb
mov
mov
add
xchg
xor
lods
mov
add
xlat
jp
mov
pop
cmp
data16
cmp
mov
xor
and
ljmp
enter
add
add
mov
xor
rolb
movsl
push
orb
jg
adc
les
jmp
jne
pop
fidivrl
mov
cmp
das
test
int
cmc
inc
daa
pop
pop
pop
lods
mov
push
mov
mov
add
sbb
xorl
push
lea
mov
jo
mov
sbb
inc
mov
loop
and
mov
cmp
mov
subl
mov
or
fsubrs
fwait
pop
das
aad
ret
mov
stos
pop
roll
aaa
push
dec
out
and
test
invd
je
push
or
pop
popa
test
jge
adc
lock
or
in
xchg
mov
xchg
fistl
sub
dec
loopne
inc
sahf
inc
pop
lock
and
pop
and
dec
mov
aaa
stos
jbe
adc
inc
aad
shrl
lret
add
sbb
rcr
shrl
jl
xchg
sbb
cwtl
cld
jnp
sbb
cltd
jns
sub
mov
rorl
scas
aaa
repnz
or
xchg
jge
stos
call
and
xor
jge
add
add
xlat
fstpt
mov
out
jnp
adc
scas
add
cmpsb
xchg
pop
lds
xor
sub
cmc
in
fs
xchg
xchg
lret
sarb
jge
xchg
xchg
cmp
xchg
adc
dec
mov
insb
inc
and
or
fwait
adc
xchg
cmpsb
jl
fidivrl
inc
mov
lods
push
jl
inc
adc
push
lret
daa
out
cmp
sbb
fwait
sbb
xor
mov
paddsb
jne
ss
inc
iret
jmp
xchg
insb
jne
and
mov
es
fbld
insb
clc
mov
cmc
sbb
and
add
xchg
cmpsl
mov
addr16
jbe
jno
andb
out
sub
sub
popa
cwtl
sub
fisubrs
add
and
mov
sbb
je
push
and
mov
enter
pop
jo
sub
xchg
jmp
loopne
mov
sub
mov
mov
push
adc
mov
pop
cmpsb
jb
mov
fnsave
xchg
fstps
cwtl
arpl
sub
xchg
lcall
ds
cmpl
cwtl
mov
xchg
inc
ja
popf
cmp
popl
xchg
push
scas
mov
dec
dec
fsubl
popf
push
out
lret
int
pop
sub
inc
cmp
outsb
cmpl
ret
test
aam
cmc
ss
lods
mov
sahf
and
xchg
cmp
inc
cmp
iret
cs
adc
jecxz
jne
xchg
test
ret
cmpsl
and
inc
test
insb
adcl
test
mov
xor
jl
iret
in
mov
cmpsl
pop
aas
mov
inc
jmp
push
push
cld
test
mov
in
xchg
sub
hlt
cmpsb
mov
ret
xor
mov
and
jb
test
shlb
cmp
rcll
pop
mov
jmp
test
outsl
xor
xchg
or
xchg
call
jnp
adc
mov
lahf
inc
ret
xchg
shrl
cmpb
fisubrs
test
dec
leave
insb
add
btc
cwtl
mov
lcall
or
xchg
mov
xchg
mov
loopne
fucom
sbb
jo
mov
in
fbld
mov
int3
and
push
sub
and
add
pop
sub
inc
sbb
adc
mov
cld
nop
push
dec
mov
xchg
sahf
mov
jns
in
cmpsl
sbb
adc
pop
cs
mov
dec
jbe
inc
jmp
je
test
pop
inc
xchg
push
lods
lea
inc
mov
cmp
jl
or
add
test
aas
popf
cmpsb
mov
adc
repnz
aaa
roll
sub
cltd
sbbb
mov
cmp
xlat
mov
inc
inc
int3
sub
fiaddl
loopne
sbb
cltd
movsb
xchg
sbb
push
dec
mov
cmp
lcall
test
rcrb
sub
stos
arpl
loopne
jno
and
les
adc
xchg
cmc
or
mov
push
xchg
inc
jp
cli
mov
inc
out
or
aad
jl
xor
mov
cltd
lea
jno
and
bound
xchg
adc
inc
addr16
sbbl
into
jne
data16
fadd
sbb
stos
pop
stos
ficomps
jp
ss
xchg
add
mov
mov
lea
test
and
inc
ret
adc
jb
div
lea
rcll
imul
rcll
fildll
cwtl
and
mov
pop
inc
test
and
xor
enter
das
ret
cmp
rcll
mov
loop
adc
shll
repnz
cmp
push
int
out
dec
loopne
aaa
stos
test
adc
sbb
stos
xor
dec
fsubrs
push
cmp
lret
ror
rolb
call
das
lods
or
insl
mov
sub
dec
sbb
and
stos
cld
loop
xchg
fcompl
push
sbb
out
fs
xchg
cmpsl
xchg
mov
shll
aas
push
mov
xchg
or
adc
popa
push
and
adc
xchg
cmp
insb
int3
mov
xor
or
stc
cmp
xchg
jl
fadd
xchg
das
icebp
add
rcrl
call
in
inc
popf
mov
mov
aad
xchg
adc
test
nop
jle
divl
in
adc
cmpsl
mov
mov
jecxz
outsl
dec
scas
mov
jne
mov
iret
adc
pop
mov
pop
rcl
test
add
loop
jle
test
jns
outsb
push
scas
sub
adc
lahf
ja
sub
adc
xchg
cmp
dec
sub
les
shrl
add
ret
mov
inc
sub
push
jecxz
sbb
in
adc
push
mov
push
aam
popf
push
adc
jle
sbb
rcrb
lahf
inc
call
repz
aam
hlt
sub
and
adc
shll
lods
mov
mov
iret
ficompl
shll
mov
mov
pop
jl
rclb
roll
xchg
ds
cmc
mov
push
loopne
out
ss
ficompl
cmc
lcall
out
fcoms
adc
or
out
aam
cmpsb
enter
sub
lret
sbb
jmp
push
out
mov
out
pop
and
jno
std
push
dec
push
jmp
movsl
cmpsl
and
imul
lret
mov
mov
int
ror
movsb
arpl
test
stc
adc
jb
popa
mov
pop
add
js
xchg
loopne
mov
ja
cmp
mov
frstpm(287
jmp
sbb
scas
fisubrl
or
nop
mov
push
add
scas
pop
dec
push
jg
jmp
int
xor
fdivs
cli
mov
push
stos
pop
cmpsb
orb
lods
mul
add
arpl
loop
sbb
add
sahf
mov
dec
mov
adc
jmp
out
push
add
mov
out
je
sub
test
add
outsl
sub
mov
inc
lcall
cmp
pop
xchg
adc
dec
mov
cmp
or
hlt
pop
das
mov
stos
push
sub
push
mov
mov
xchg
xor
stos
cmpsb
sbb
mov
ss
xchg
dec
outsb
nop
lods
clc
or
sub
rolb
fdivl
aam
sbb
pusha
cli
push
inc
rorb
in
xchg
sub
int
mov
mov
cli
push
add
fwait
mov
mov
xchg
arpl
inc
inc
xchg
lret
sub
outsb
fwait
repnz
bound
out
cmovns
pop
add
fidivs
movsl
mov
xchg
add
aaa
jp
das
dec
cmp
adc
clc
jmp
ljmp
or
or
loop
push
mov
sbb
insl
shl
sti
inc
dec
jno
mov
mov
lds
jnp
scas
jno
ret
fdivrs
cmp
mov
dec
cmp
cmp
emms
mov
fs
jl
cmp
lods
shll
out
daa
adc
adc
shlb
das
pop
sub
sbb
fimull
push
sub
pop
or
cld
in
xchg
pop
outsl
pop
xchg
pop
imul
mov
icebp
imull
cmpsb
pop
mov
ja
loopne
cld
dec
mov
inc
inc
ljmp
sbb
xor
adc
dec
popf
mov
imul
push
push
mov
sub
pop
rcll
es
mov
push
imul
dec
dec
cmp
out
xchg
sarl
cli
sti
mov
sbb
pushf
inc
out
insl
iret
xor
js
aaa
add
in
mov
mov
addb
in
hlt
outsl
icebp
mov
paddw
pop
mov
push
mov
jg
andl
inc
or
iret
mov
scas
arpl
mov
mov
jmp
jb
out
inc
aaa
in
mov
es
ds
cmc
mov
fisttpll
sbb
repnz
ret
lahf
adc
dec
leave
pop
pop
mov
hlt
dec
add
lds
xor
mov
inc
enter
addr16
leave
lret
mov
addr16
idiv
aaa
aas
or
jnp
test
testb
xchg
xlat
add
int3
push
fsubl
in
je
fs
adc
dec
pop
xchg
add
rcrl
and
adc
in
and
ss
loopne
push
aas
bound
dec
adcb
hlt
mov
popa
cmp
adc
les
or
lahf
jg
leave
hlt
jmp
jbe
scas
or
sub
push
rcll
ja
sub
cmc
in
inc
sbb
sub
xor
mov
pushf
mov
in
pop
sbb
stos
xchg
mov
push
jge
push
pop
rclb
adc
imul
pop
push
loope
or
pop
sub
jge
imul
daa
out
ficoml
shlb
mov
insl
out
pop
xchg
mov
push
fildll
aam
cli
jmp
cli
inc
lcall
mov
sub
arpl
orb
push
pusha
jns
xor
aas
adc
xchg
dec
xor
aas
mov
cwtl
push
pop
mov
shll
movsl
popf
fsubr
out
out
aam
xlat
jne
pop
mov
hlt
mov
sub
push
test
enter
mov
lds
scas
out
inc
and
ds
lea
mov
cmp
push
imul
incb
lret
out
mov
dec
das
or
repnz
mov
shl
pop
adc
xchg
jp
jne
test
fcom
jbe
outsb
andb
inc
adc
shrl
pop
mov
sbb
and
lock
mov
jmp
fcmovne
push
inc
lea
jnp
shrb
sbb
loopne
sbb
push
dec
les
sbb
sbb
inc
xchg
out
cmp
push
ficompl
sub
xchg
xchg
imul
nop
inc
iret
adc
hlt
fdivrs
int
je
cld
mov
in
mov
push
or
jg
bound
in
or
imul
jo
sbb
push
insb
cltd
sahf
push
adc
out
ret
cmp
sub
out
dec
imul
insl
shrb
pop
lock
mov
sub
cmpsl
xor
out
jns
or
xlat
mov
test
pusha
xchg
xchg
scas
aam
rcl
cmc
mov
stc
dec
and
adc
jmp
xchg
cmp
mov
es
lods
out
leave
rcll
jno
test
mov
mov
sarb
xor
and
xchg
nop
xchg
dec
sarb
inc
leave
push
daa
sub
mov
addr16
mov
inc
inc
fldenv
sub
jno
xchg
pop
push
lock
fwait
lret
cmp
push
mov
xchg
js
shrb
sbb
test
hlt
inc
or
push
cmpb
inc
in
insl
hlt
imul
and
pop
loope
mov
cmp
mov
mov
sub
add
lea
std
sub
jge
xor
lret
subl
jnp
fs
and
push
ret
pop
arpl
shlb
hlt
mov
cmp
and
shl
xchg
jo
mov
lock
das
and
sub
out
arpl
and
mov
jp
cmp
xor
stos
jne
js
call
hlt
push
gs
movaps
mov
loopne
popf
dec
sahf
jb
das
out
push
mov
fldl
pop
stos
add
daa
sahf
jmp
mov
jo
mov
loop
sti
dec
ficompl
rorb
jae
inc
jl
imul
int3
sub
dec
cmc
nop
cltd
add
in
cmp
daa
pop
push
adc
add
dec
pop
shll
cmp
dec
sbb
mov
cmp
lock
mov
insb
adc
or
fdivl
les
lret
orl
push
or
adc
subl
daa
ss
dec
jg
add
jo
dec
jmp
cmpb
pushf
fwait
mov
fsubrl
lock
pop
push
mov
fs
decb
mov
leave
pushf
dec
roll
popa
jno
push
scas
addr16
jg
dec
sub
cmpb
xchg
xchg
mov
push
and
out
fcomps
inc
mov
jecxz
jg
xor
or
sarl
iret
ficoms
in
je
in
cwtl
xchg
ret
scas
clc
or
jp
cmp
test
in
push
push
cmp
push
pushf
idivl
imul
pop
js
fsubrl
cwtl
push
ret
push
dec
push
ds
xlat
xchg
jns
dec
push
sub
mov
lock
test
mov
pop
or
and
mov
sub
mov
xor
repnz
es
and
and
sub
dec
loop
sub
les
pop
cmp
mov
xchg
or
ljmp
rcr
dec
sbbb
add
mov
xor
dec
sti
cltd
or
or
and
xchg
pushf
insl
inc
fucomip
mov
and
fnstsw
lret
mov
mov
das
outsb
into
sub
arpl
push
data16
fisttps
inc
add
pop
and
int3
daa
jmp
popf
cmp
cmc
or
xor
mov
test
xchg
inc
ljmp
mov
xchg
test
push
rcrl
bound
movb
pop
push
dec
adc
pop
adc
sahf
push
imul
jo
add
dec
pop
push
sahf
add
stos
andb
bound
vpackuswb
jo
ret
neg
jnp
push
imul
stc
leave
inc
adc
cld
and
pusha
enter
lret
out
cmp
mov
addr16
inc
inc
test
mov
inc
inc
dec
ds
pop
ficomps
movsb
fs
xchg
dec
dec
sbb
stos
aas
out
hlt
sbb
adc
mov
push
cmp
or
js
lock
in
mov
lret
push
and
lods
lea
xchg
fsub
shlb
mov
dec
mov
mov
leave
jne
test
pusha
add
lea
ret
dec
dec
not
dec
and
aad
jae
push
and
scas
in
test
sub
or
fnsave
push
pop
std
enter
mov
mov
js
mov
fnstenv
xor
adc
shll
xor
xchg
mov
arpl
adc
push
dec
leave
xchg
jb
jge
xor
inc
fisttpl
pop
sahf
xor
loopne
lods
add
xchg
ljmp
mov
push
mov
push
into
cmp
lds
lods
or
cwtl
mov
or
cld
adc
icebp
into
jmp
mov
gs
inc
pop
clc
lahf
jge
mov
ds
dec
pop
mov
inc
loope
pop
pop
mov
cmp
and
dec
add
mov
adc
test
jbe
xor
testb
scas
sub
cmp
js
scas
pusha
clc
xor
test
nop
das
jecxz
mov
ret
les
aas
pop
int
imul
xchg
cmpsb
cld
cli
and
lret
and
xor
in
xchg
cmp
mov
adc
mov
jge
xchg
pushf
mov
fwait
ja
mov
mov
outsl
mov
adc
aad
jno
shrb
rcrl
fidivs
mov
lds
adc
xchg
add
sarl
stos
cmp
sbb
fsubs
mov
or
repnz
adc
pop
clc
and
cwtl
xor
lods
loopne
out
cmpl
mov
jl
lahf
adc
or
sarl
addl
lock
pop
mov
and
add
cwtl
dec
in
es
jbe
pop
les
aad
lods
dec
jmp
fmull
dec
test
stc
adc
push
dec
dec
aaa
cmp
sahf
stos
leave
fsts
daa
pop
push
loopne
iret
inc
and
or
push
inc
fildll
xchg
mov
fstl
mov
popl
aad
adc
inc
push
cmp
stos
cmp
fadds
xchg
pop
mov
stos
imul
or
cmp
lock
xchg
inc
mov
and
xchg
mov
cwtl
shl
repz
push
lahf
xchg
add
xor
xchg
faddl
imull
aam
dec
sbb
push
cmpsb
sbb
gs
sar
adc
addb
cmpsl
lock
adc
lods
in
xlat
scas
aad
push
or
mov
xorl
xlat
fistl
sub
daa
jo
or
dec
gs
jmp
cli
fs
ret
xchg
pop
xchg
push
mov
push
int3
decb
sti
in
nop
repnz
aaa
les
arpl
inc
lea
xchg
arpl
mov
inc
or
jae
jle
xchg
sbb
jbe
inc
or
push
and
lret
mov
lea
insl
stc
sbb
sub
kmovb
pop
jp
and
fs
lcall
mov
add
lds
jnp,pn
orb
xchg
dec
mov
pop
out
insl
add
mov
mov
sub
xchg
pop
bound
fists
shrb
call
pusha
pop
dec
sahf
std
adc
jecxz
negl
mov
xor
sbb
int3
ljmp
sub
inc
inc
arpl
scas
loope
cmpsl
mov
mov
adc
mov
ja
ja
cmp
jne
lock
lcall
sub
add
pop
imul
jmp
jns
lea
xor
mov
aad
jle
iret
dec
cmp
cmp
xchg
lods
jmp
xor
scas
mov
push
push
flds
or
jns
repz
lahf
inc
lods
inc
or
and
iret
pop
scas
push
repz
aaa
cmp
addr16
nop
jbe
ret
jecxz
dec
mov
aam
data16
inc
fwait
out
adc
jnp
stos
dec
cmp
and
mov
in
add
icebp
xchg
mov
int
lods
inc
int3
cld
xchg
fstpt
mov
ds
xor
popa
xlat
mov
xchg
mov
and
jge
xchg
cltd
xor
and
mov
lods
sbb
shrl
gs
in
in
cmc
xchg
and
roll
addr16
in
push
jl
mov
pop
outsl
xlat
cmp
adc
push
jmp
add
mov
mov
jno
ficoml
adc
jae
xchg
ret
mov
jl
dec
push
ds
xchg
pusha
mov
push
je
lods
cmp
sti
add
cmc
fs
jle
mov
xchg
fwait
jle
aam
xor
and
ret
into
push
mov
aad
fsubrs
iret
outsb
cmp
mov
out
adc
and
addr16
jle
mov
xchg
pop
in
push
out
mov
xchg
pop
push
mov
jp
mov
pop
lock
dec
push
bound
int3
xor
jle
add
dec
enter
xor
je
dec
adc
fwait
sbb
fdivp
cmp
rolb
mov
call
push
dec
push
xlat
inc
loope
imul
stc
inc
jns
stos
out
dec
push
mov
xor
sahf
pop
cmp
xor
insb
xor
pop
dec
pop
stos
out
push
adc
xlat
push
pop
mov
cli
sbb
push
or
push
or
mov
insl
push
xchg
add
cs
test
mov
and
xorl
cltd
sbb
insl
in
in
pop
sarb
push
and
jns
dec
mov
test
sub
sub
outsl
mov
lcall
cmp
xchg
cmc
push
pop
inc
iret
cmp
jb
or
lahf
sbb
sbb
mov
jl
push
push
xchg
icebp
iret
icebp
cmp
repnz
addr16
xchg
pcmpgtb
push
inc
mov
cltd
imul
jle
bound
dec
dec
push
subl
stos
jle
pop
mov
add
jecxz
mov
mov
ljmp
into
pop
dec
out
in
and
add
aam
or
inc
push
mov
xchg
lds
stc
insb
or
dec
pusha
mov
xchg
pop
mov
scas
or
mov
xchg
clc
dec
std
mov
lock
out
sbbl
into
roll
jle
xor
push
jp
sbb
fidivl
mulb
pop
stc
lds
dec
inc
sub
cwtl
dec
and
pop
pop
jmp
fwait
sbb
mov
sub
dec
pop
lods
xchg
call
jle
push
jle
lods
jp
loop
mov
call
or
in
out
add
cwtl
inc
movsl
das
cmp
addb
and
dec
fadds
hlt
test
arpl
xchg
stc
cld
pop
pop
xor
mov
mov
ja
sbb
push
mov
sub
imul
in
into
outsb
das
fs
clc
jo
xchg
xchg
pushf
sbb
fdivrl
pop
outsb
and
sbb
dec
ficompl
mulb
inc
jbe
mov
dec
test
dec
mov
mov
push
mov
jo
xor
ds
bound
mov
les
dec
dec
pop
adc
fisubs
jnp
push
pop
cmp
xor
fisttpll
mov
in
testl
mov
dec
xchg
inc
mov
sti
push
insb
test
stos
adc
pusha
das
mov
popa
insl
sub
out
pop
pop
lods
pushf
mov
ret
lds
cmp
je
fwait
int
xchg
test
sub
sbb
ficomps
movsb
push
cmpsb
ds
aam
jge
icebp
cmc
push
call
cmp
in
jp
mov
out
lahf
pop
dec
add
dec
xchg
xchg
xor
push
mov
xor
sti
and
rorb
loopne
dec
and
pop
and
or
rcrl
mov
repnz
leave
xorl
ja
mov
mov
iret
fdivrs
pop
insl
out
pop
repz
pop
push
cmp
cmp
push
imul
es
stos
jmp
and
call
es
mov
cmp
hlt
cmpsb
mov
adc
lds
mov
cmc
es
fcompl
pop
xchg
xor
jae
mov
dec
pop
das
in
xchg
fisubrs
push
cwtl
add
push
xor
dec
jbe
and
loope
push
mov
cmp
add
mov
jno
mov
icebp
fimuls
mov
xchg
icebp
mov
or
push
xor
clc
mov
cltd
jle
mov
dec
in
push
jmp
pop
mov
in
push
adc
xor
jp
add
inc
lahf
xor
scas
out
adc
xchg
push
jae
out
outsb
cs
cmpsb
rclb
mov
jns
insb
mov
sbb
addr16
jne
stos
jg
dec
ds
incb
xchg
inc
stos
lahf
mov
ja
xchg
aad
mov
loopne
and
sbb
leave
pop
mov
sub
cld
scas
in
jle
ljmp
imulb
test
fwait
mov
jecxz
jo
or
je
enter
adc
pop
lds
popa
xchg
inc
les
cmp
je
cld
sbb
call
sbb
sub
movsl
xchg
xchg
inc
outsl
jg
aas
pop
pop
andl
sub
fsubrs
xchg
mov
and
mov
nop
fildll
insl
sub
lsl
or
std
popf
lds
popf
fs
int
jg
addr16
cmpsl
mov
pop
push
xor
cmp
int
scas
jge
cmc
aam
imulb
out
lret
sarl
daa
shlb
ret
mov
mov
inc
dec
loop
js
pop
call
stc
test
fs
mov
das
adc
cmp
mov
push
jne
adc
pop
jp
out
aas
les
movsb
pop
adc
or
dec
push
imul
mov
push
les
stos
cmpsl
add
dec
int3
imul
mov
adc
push
xchg
imul
fsubl
mov
push
les
jl
fs
mov
dec
sbb
or
push
nop
das
mov
or
lods
pop
sbb
pusha
test
jmp
jbe
cwtl
mov
dec
lods
xor
mulb
arpl
mov
inc
inc
jge
cmpsb
call
in
mov
cwtl
add
ss
push
jg
imul
aad
cwtl
mov
dec
sbb
aaa
and
push
imul
dec
xor
and
pop
cltd
std
loopne
xchg
jge
leave
outsb
or
adc
mov
xor
mov
push
adc
in
addb
sub
xchg
cmp
pmulhw
xchg
push
mov
xorl
mov
mov
sub
arpl
ds
jae
adc
fisubl
mov
sub
pop
lahf
mov
xchg
mov
xor
or
mov
add
mov
repnz
stos
push
mov
fcom
mov
movsl
sub
sub
popa
sbb
movb
pop
arpl
ss
sub
cvttps2pi
lcall
outsb
mov
icebp
and
out
xchg
fwait
mov
scas
out
mov
or
or
outsl
imul
cmpsl
ljmp
sub
jnp
xchg
fwait
movsb
push
hlt
cmpsl
mov
mov
push
nop
push
sub
push
adc
cmp
push
add
xor
inc
hlt
mov
movsb
cltd
testl
mov
jp
repz
xor
arpl
daa
shll
scas
in
xchg
ret
insl
cli
fisubrl
das
jp
int
inc
jae
dec
fistl
fbstp
gs
or
jmp
popf
int
push
push
shll
mulb
mov
xchg
hlt
jns
repz
xor
daa
push
cmp
imul
sbb
rcrl
jmp
sahf
cmp
cmp
or
pop
clc
and
shlb
out
and
push
test
dec
xor
andb
lds
daa
fiadds
movsl
adc
cmpsl
jae
pop
xchg
inc
mov
pop
dec
pusha
inc
cmp
dec
ret
hlt
mov
nop
fstpl
sbb
push
test
cmp
hlt
inc
cmp
pop
shl
std
push
imul
es
or
orb
fdivrs
shll
stos
cmp
arpl
mov
les
ret
popf
xor
imul
jne
cmp
inc
bound
sbb
xchg
out
std
std
xchg
icebp
push
add
push
out
insb
mov
push
lock
and
arpl
js
dec
outsb
adc
lret
inc
ficompl
outsb
lods
neg
int3
mov
mov
arpl
pop
push
les
stos
lret
mov
sub
testb
aaa
sbb
mov
arpl
cmp
jmp
cmp
push
add
xchg
push
mov
push
adc
out
aaa
pop
mov
aam
add
push
cmp
loop
mov
mov
mov
out
testb
adc
mov
test
jnp
adc
lock
push
xchg
push
mov
scas
mov
sti
mov
push
jmp
mov
jne
adc
add
std
aas
loope
ja
mov
nop
mov
icebp
xchg
setle
cld
mov
mov
jle
out
xor
scas
in
in
push
xor
fcmovb
push
dec
scas
hlt
out
jg
int
jns
inc
leave
xor
xchg
in
aam
negb
fcompl
fldz
push
mov
imul
shl
pushf
push
or
fwait
inc
sar
loope
mov
sub
not
div
push
fcoml
add
cld
or
loop
jge
push
in
les
fisttpl
cli
mov
dec
push
inc
imul
aam
xchg
xor
xchg
lods
mov
in
cltd
scas
pop
pushf
or
push
mull
add
dec
xorb
xchg
cmpsb
fiadds
mov
js
pop
ljmp
pop
mov
and
pusha
inc
xchg
cmp
jb
push
clc
push
or
mov
rorl
lahf
dec
stc
mov
or
xor
adc
ss
sub
jae
ss
insl
push
rcll
mov
adc
or
pop
out
jbe
adc
pop
mov
cmpsb
jb
les
sbb
leave
subb
and
loop
add
ret
sub
repz
outsl
or
push
inc
lret
push
insb
dec
add
insl
jecxz
lds
pop
clc
sub
adc
xchg
sub
movsl
outsl
loopne
jae
inc
or
mov
mov
sti
fiaddl
cltd
sbb
ret
dec
dec
mov
out
and
addr16
mov
fsubrl
jmp
pop
xchg
pushf
jo
mov
rcrl
sbb
cmp
push
pusha
insb
adc
jns
mov
mov
sub
xchg
or
xchg
in
mov
push
xor
jo
or
mov
xor
cmpsl
in
and
sub
dec
call
xor
shll
mov
stos
arpl
repnz
sbb
cld
inc
and
xor
fstpl
push
add
adc
aaa
sbb
sbb
into
cmpsb
push
roll
fnstenv
popa
je
aaa
shlb
add
lcall
lret
gs
adc
outsb
fwait
xchg
fmull
push
or
cmp
cld
shrb
imul
cwtl
lcall
aam
decl
stc
xchg
repnz
test
test
hlt
xor
cmpsb
js
test
sti
lcall
cltd
int3
lea
xchg
popf
mov
ror
adc
popf
ja
into
lret
insb
push
out
jno
dec
xor
imul
stos
std
mov
add
ficomps
fdivrs
arpl
stos
gs
test
dec
imul
or
add
sub
xchg
add
dec
mov
cmpsb
lds
and
lahf
jae
push
cmp
data16
xchg
popa
mov
lret
sarb
jne
inc
mov
xchg
mov
mov
pop
loope
xor
int
jmp
cwtl
or
lret
cli
xchg
icebp
dec
jecxz
mov
gs
rcrb
insb
jnp
das
cwtl
nop
negb
repnz
loope
lret
xchg
jle
mov
push
pop
push
cli
in
jmp
int
xor
or
adc
xchg
push
or
pop
mov
sti
dec
jb
nop
adc
cmp
xor
aaa
and
mov
aam
lgdtl
ss
mov
cmp
pop
in
pop
out
or
out
lahf
movsw
adc
fwait
dec
movsl
lods
ja
test
cmpsl
mov
jne
sub
or
pop
clc
add
dec
push
push
lea
pushf
in
xor
sub
and
or
xor
jle
adc
inc
xchg
int3
ret
enter
shrb
divl
lods
call
xchg
test
add
leave
test
mov
lea
mov
jns
mov
or
mov
mov
shrb
icebp
pop
pop
aas
ds
cmp
add
mov
imul
ja
iret
int
ret
nop
push
rcr
imul
ljmp
mov
int3
inc
or
adc
fwait
cmp
sbb
pop
inc
and
add
cmpsl
jbe
add
enter
adc
mov
push
negl
fdivs
cli
fnsave
mov
dec
je
mov
loop
sub
aad
mov
nop
in
inc
mov
test
rcl
test
lret
jno
or
loopne
popf
cli
sbb
adc
or
popf
pushf
jne
mov
ret
mov
lahf
cld
or
inc
push
jl
mov
xorb
mov
sbb
jp
pop
mov
sub
ja
fwait
push
push
add
add
loop
andl
sti
dec
mov
adc
add
sbb
outsb
adc
in
mov
es
and
or
cmpsb
sahf
inc
movsb
loope
arpl
sbb
shrb
dec
aas
pop
ds
mov
jne
cmpsl
sub
in
ljmp
and
aad
test
fs
ss
mov
add
dec
daa
xor
xchg
cmp
daa
cmp
push
mov
dec
shl
dec
dec
loope
rorl
dec
fidivs
push
out
xlat
frndint
into
lods
xor
sub
dec
call
add
insb
add
sahf
cmp
cmp
mov
mov
out
xor
push
sub
adc
push
pop
or
inc
mov
lahf
inc
cmc
xchg
in
negb
mov
mov
xor
cld
pop
xor
mov
repz
dec
insl
rcrb
add
jbe
or
ficomps
cs
cld
jnp
jecxz
cs
call
popf
inc
mov
mov
xor
add
fdivr
mov
int3
dec
pop
jge
xlat
jno
out
aad
inc
xor
push
push
insb
arpl
sbb
mov
adc
cmp
sbb
out
jg
ljmp
decb
mov
jg
ret
das
sub
inc
stos
js
dec
outsb
pop
fistl
sti
aam
aaa
inc
sbb
adc
and
pop
pop
push
out
xchg
xchg
fs
into
pushf
shrb
aaa
arpl
or
sub
push
jl
jecxz
mov
jge
sbb
cmp
jne
jns
jecxz
fcomi
sub
xor
sbb
data16
cld
jno
mov
sbb
int
or
pop
xor
push
add
aas
push
mov
jb
add
out
inc
pop
lret
pushf
push
jmp
xor
cltd
js
sbb
arpl
mov
mov
into
and
mov
ja
push
loope
inc
movsl
loope
lea
ss
jle
xor
out
pop
push
stos
mov
push
jno
fmul
add
or
rcl
shrb
lret
xor
das
push
dec
adc
loope
sarl
pop
into
test
shl
push
jmp
js
cmpsb
negb
sahf
clc
hlt
lods
mov
cmp
xchg
push
and
shrb
adc
scas
xor
stos
dec
push
inc
sub
cmpl
lds
les
add
sbb
icebp
add
scas
mov
sarb
cmp
dec
mov
std
mov
bound
out
fists
aam
pop
jae
movsl
adc
sbb
push
jns
movsb
inc
test
mov
sahf
mov
adcl
pushl
push
lret
stos
loope
insl
and
push
mov
movsb
icebp
into
push
xor
pop
mov
dec
add
lahf
xchg
xor
mov
ljmp
scas
int3
leave
scas
push
out
incb
pop
cmc
pushf
into
movhps
push
fmull
jle
scas
xor
dec
in
shrb
push
addr16
inc
mov
stos
int3
adc
mov
js
and
pop
xchg
push
add
mov
in
push
ds
divb
cmp
lods
mov
ds
stos
bound
and
add
hlt
lds
adc
pop
lret
aaa
sbb
int3
mov
out
xlat
sarb
std
fsub
mov
outsl
movsl
pop
pop
cld
sbb
rclb
sub
and
cs
scas
jb
mov
mov
loope
sbb
inc
jge
add
lret
and
adc
dec
lahf
into
xrelease
daa
dec
mov
dec
icebp
inc
or
lcall
negb
rcll
pushf
inc
jae
shlb
ret
ror
popf
pop
mov
stos
jmp
mov
mov
popw
int3
icebp
andb
int
cmc
test
sarb
aad
add
xchg
and
roll
push
dec
mov
repnz
or
sbb
sbb
test
sub
add
cli
or
outsl
sti
add
aad
fadds
mov
pop
dec
adc
out
stos
mov
xor
pushf
xor
icebp
mov
mov
mov
push
jae
sub
dec
sarb
adc
lret
lret
in
cmp
add
roll
hlt
popa
cmp
data16
loope
jns,pt
push
mov
xchg
pop
mov
in
cmp
add
add
mov
and
pop
mov
divb
in
call
mov
cmp
adcl
loop
sub
cltd
cmp
jnp
sbb
jne
or
sub
or
pop
fidivrl
cmp
scas
std
nop
xchg
mov
xor
jb
sarb
mov
mov
ja
incl
mov
pop
mov
mov
mov
mov
stos
jae
rcrl
or
and
insl
dec
mov
jmp
ss
dec
cmp
mov
xor
ss
outsb
sahf
mov
or
lret
int
pop
sub
lods
fstpt
or
js
mov
stos
nop
out
subl
mov
sub
or
pop
jmp
pop
adc
mov
and
xor
mov
in
ja
in
aam
pop
imul
cltd
es
lret
push
das
inc
push
xchg
push
lret
out
mov
cmpsb
icebp
mov
dec
jbe,pn
or
ret
stos
popa
adc
pop
cld
movsl
xchg
sub
mov
call
push
xor
add
xchg
mov
divb
and
loope
js
cltd
add
stc
bound
xchg
pop
sahf
fwait
mov
clc
cwtl
sub
lods
sub
sbb
aas
cmp
cmpsl
dec
sub
movsb
or
clc
cmc
cmpsb
inc
stos
shrl
test
fwait
mov
pop
fcomps
sub
or
mov
sarb
push
sub
pop
in
nop
gs
pop
pop
addb
dec
sbbl
jmp
jmp
mov
pop
jb
and
lcall
dec
pusha
push
inc
mov
jbe
data16
and
inc
int
jbe
mov
add
rcll
popa
jnp
fiaddl
pop
jno
sti
out
add
xchg
add
push
stos
push
data16
xor
sbb
ja
int
cmp
mov
dec
es
stos
dec
mov
push
shrl
outsl
add
cmp
loop
ja
jg
adc
lods
cmp
out
push
add
insb
sub
cmp
bound
out
andl
sub
mov
push
lock
in
and
inc
jae
gs
iret
pop
fmull
inc
adc
mulb
rorl
xchg
gs
imul
sbb
pop
mov
cmp
push
fldt
inc
stc
sub
xchg
js
inc
sahf
push
add
daa
pop
movsl
inc
xchg
dec
pop
scas
jecxz
inc
jbe
and
xchg
push
inc
and
das
out
clc
pusha
imul
cmc
push
lods
out
cmp
sub
mov
pop
test
or
adcl
pushf
push
fcmovu
cwtl
ds
jnp
cmp
test
aad
inc
cmp
xchg
inc
and
pushf
out
lea
sub
mov
inc
fbstp
cwtl
pop
xchg
xor
mov
dec
jno
roll
jne
inc
les
push
cmc
insb
test
jnp
andb
or
pop
fsubs
jbe
decb
mov
pop
sahf
idivl
push
sbb
push
add
or
repnz
mov
sub
mov
mov
out
filds
push
pop
rclb
jecxz
push
pop
sub
mov
push
in
or
cmpsl
mov
xor
addb
hlt
jb
addr16
or
push
jno
aaa
addb
xchg
je
adc
inc
pop
cs
fists
sub
xor
sub
data16
mov
dec
loope
std
imul
cltd
cmpsb
xor
outsb
dec
fs
inc
jle
movsl
cmp
adc
mov
sbb
testl
jnp
in
inc
lods
cmpsb
movsb
mov
sbb
xchg
pop
in
out
ss
lss
lods
icebp
lods
inc
pushf
sar
cmp
adc
cmpsb
mov
adc
movsb
stos
gs
cmpsl
cmp
pop
xor
xchg
int
rcl
fdivs
dec
gs
movsl
fistpl
mov
adc
in
or
xchg
test
lock
lods
mov
sbb
int
imul
push
cld
dec
cmp
push
inc
imul
pop
lds
insl
test
mov
out
sbb
aad
lea
test
or
repz
xor
ret
jne
cmpl
aaa
lock
pop
push
stc
fisubl
mov
int
dec
pop
cmp
add
fs
mov
sub
and
sbb
dec
adc
mov
and
movsb
lcall
outsb
nop
sub
xor
fsubrl
stos
add
jg
xor
icebp
sub
sbb
xchg
mov
mov
cmpsb
jns
clc
mov
loop
dec
cmp
sbb
jb
out
xlat
scas
arpl
daa
out
mov
out
xchg
or
sub
dec
imul
adc
xchg
lret
out
ret
jge
aad
adc
bswap
and
and
repnz
mov
cmpsl
xor
push
pop
or
jmp
fadd
adc
cmp
repz
addr16
ja
js
scas
outsl
dec
leave
cltd
insl
dec
scas
mov
xchg
xchg
xor
adc
xchg
push
sub
lods
scas
in
jge
or
hlt
sbb
mull
mov
addb
outsb
mov
sbb
inc
xlat
pop
aaa
movsb
mov
xchg
popa
jmp
shl
out
scas
adcl
mov
call
mov
pop
adc
mov
dec
je
push
jle
and
movsb
sbb
sub
popf
and
in
xchg
aam
or
or
notb
jle
mov
jl
dec
int3
testb
mov
and
jae
xlat
addr16
cmc
mov
cmpsb
repz
jle
inc
outsb
dec
xchg
inc
fstps
mov
cmp
scas
gs
testb
or
adc
cmpsb
into
sub
imul
push
in
out
and
dec
mov
andl
je
lock
lcall
fwait
lods
xchg
repz
mov
dec
std
out
inc
fwait
cmp
hlt
pushf
mov
test
xchg
ret
xor
inc
jnp
ljmp
je
xor
push
outsb
xchg
push
cltd
jns
xor
xor
and
mov
cli
inc
or
lret
or
push
movsl
rcrb
inc
dec
test
std
sbb
or
push
sbb
cmpsl
mov
jle
inc
je
xchg
aad
dec
xchg
imul
push
pop
bound
add
mulb
cwtl
cli
jge
xor
mulb
mov
incb
or
mov
pop
pop
loopne
imul
sub
test
aaa
jns
xor
add
fdivr
lret
mul
add
xchg
je
add
pop
xlat
pop
lods
pusha
movb
lret
xchg
xchg
xchg
outsl
rol
adc
arpl
or
sub
fsubl
test
js
jmp
sub
fcomp
inc
outsl
inc
inc
je
cltd
pop
js
or
call
xchg
push
aas
adc
jnp
inc
inc
mov
sbb
popa
aaa
in
xlat
aaa
jge
mov
push
mov
lods
cmp
shrl
or
stc
daa
and
dec
sbb
mov
outsl
push
repz
insb
push
and
mov
iret
cmp
xchg
insb
cli
bound
add
dec
and
sbb
addr16
clc
jno
jb
sahf
fdivp
out
ss
arpl
mov
outsb
cmp
popf
sbb
push
inc
dec
mov
out
xor
mov
jmp
xchg
adc
lds
shll
fcoml
xorl
fdivrs
dec
int
mov
ljmp
sbb
pop
pop
or
push
push
cld
sbb
xchg
mov
cmp
mov
mov
aad
shlb
jne
and
push
dec
jno
xchg
and
sub
es
bound
dec
sbb
ret
pushf
hlt
fiadds
inc
inc
mov
test
sti
bsf
xor
jl
jo
xlat
movsb
mov
dec
mov
xchg
lods
test
outsb
jns
mov
mov
arpl
pop
insl
outsb
shlb
and
test
xor
outsl
mov
pushf
mov
add
call
stos
test
push
in
and
sbb
xchg
fwait
jl
cmp
jg
jl
cld
fistl
jo
mov
mov
loope
enter
aad
ret
sbb
hlt
cmpsb
popf
js
push
dec
out
fcomip
adc
mov
lock
sbb
sbb
test
ja
push
jbe
xchg
xorl
dec
jb
push
or
lods
and
ds
out
imul
call
cmp
ret
aad
ja
gs
cmp
repnz
push
cmpsb
xchg
adc
inc
insl
test
mov
popf
pop
pop
addr16
push
jg
cmp
nop
jnp
or
pushf
pusha
outsl
mov
dec
mov
movlps
xchg
addr16
pop
mov
xor
jge
mov
popf
and
stos
or
jl
push
xchg
sub
add
into
fildl
cli
lret
gs
inc
mov
jns
mov
add
jg
jne
mov
out
movsl
int3
or
xchg
push
fsubp
call
xor
push
loopne
mov
adc
xchg
mov
push
sbb
in
pop
cmp
xchg
dec
push
lret
mov
and
leave
sub
xlat
fsubs
mov
cmp
mov
mov
mov
std
repz
inc
push
xchg
jge
dec
int3
arpl
incl
mov
out
sbb
dec
sahf
dec
lods
cmp
in
inc
inc
cmpsl
loopne
out
adc
adc
cmp
inc
mov
mov
shrd
subb
out
jae
or
pop
sar
sbb
or
in
popf
sarb
cli
adc
mov
mov
in
add
iret
push
pop
insb
xor
lea
adc
mov
inc
pop
fstpl
fs
sub
xlat
sub
push
jg
push
jge
xor
dec
xor
sbbb
test
jg
ds
sub
std
lea
jb
mov
sub
popf
orl
jmp
mov
mov
in
xchg
pop
andl
arpl
sub
sbb
adc
sbb
loopne
cmp
pmaxsw
aas
iret
in
test
push
mov
shlb
lea
loop
iret
or
inc
mov
inc
sarb
pop
stos
dec
pop
aas
xor
psubw
xchg
jl
notb
inc
inc
loopne
mov
jne
dec
repnz
lea
push
and
xchg
add
jecxz
addr16
scas
mov
ss
lea
movsl
adc
push
mov
out
pop
repz
mov
test
add
je
xchg
add
sbb
lods
sbb
fisttpl
pop
mov
int
inc
fwait
and
in
cs
push
adc
sahf
je
lret
in
mov
jg
add
cmpsb
lock
adc
push
stos
cmc
mov
inc
xchg
sub
and
pop
ljmp
dec
lcall
xchg
pop
jno
ret
movsl
cmp
xchg
push
jnp
inc
out
or
mov
fmull
out
and
add
adc
push
ds
pusha
push
enter
movsb
notl
addr16
mov
and
mov
in
lods
std
mov
movsb
add
push
or
lods
adc
jmp
sub
pop
ret
pop
inc
xor
jae
popf
les
or
loope
add
pusha
sbb
xchg
xchg
insb
insb
add
xor
dec
mov
mov
dec
cld
jl
je
test
out
pop
xorl
or
mov
jle
mov
or
mov
fnstcw
mov
sbb
mov
fwait
push
push
test
mov
jo
push
add
repnz
cwtl
or
add
mov
adc
inc
mov
jmp
sub
push
cs
scas
sbb
mov
pop
sub
xor
cmp
or
inc
fstl
push
imul
leave
loop
aad
insb
mov
cmp
rol
add
sti
mov
and
sub
xchg
test
xchg
popa
aas
std
nop
lret
aas
jo
inc
push
loop
sub
daa
cld
xchg
xchg
push
mov
fwait
lret
sub
lcall
inc
inc
adc
hlt
dec
and
push
jno
stos
pop
add
or
pop
xchg
inc
mov
shr
test
gs
xor
clc
out
adc
test
orb
dec
lea
push
add
jle
repz
or
push
cmp
pop
int
fcomps
or
fldcw
in
pop
mov
enter
xchg
jne
arpl
dec
sbb
jbe
jb
addl
xchg
or
mov
sub
iret
ss
cmc
dec
test
jmp
jnp
imul
ficomps
fstl
xchg
push
mov
bound
test
mov
imul
cmp
jbe
out
mov
pop
mov
fs
or
leave
lods
mull
jo
in
popf
fbstp
data16
mov
es
in
ret
sbb
mov
adc
mov
loopne
xor
xchg
subl
lret
sahf
sub
add
ja
jp
adc
add
push
arpl
scas
mov
mov
mov
or
loopne
inc
lahf
dec
outsb
fnstcw
inc
fs
testl
inc
mov
add
adc
sbb
ljmp
jle
jg
pop
pop
scas
xchg
lods
daa
sahf
hlt
dec
loope
mov
add
dec
jb
jb
ss
adc
mov
out
dec
push
lock
clc
dec
aas
gs
pop
pop
xor
jp
dec
bound
push
fstl
stos
gs
outsb
sub
in
xchg
mov
inc
adc
iret
and
sbb
cs
pop
into
cwtl
jne
sub
rcrb
and
rcr
push
or
mov
mov
push
cld
sbb
and
das
add
ds
adc
ljmp
nop
test
xchg
stos
ss
testb
sbb
addr16
popf
jno
aam
pushf
mov
scas
mov
in
jecxz
mov
ja
test
enter
xor
insl
sti
out
pushf
lahf
jae
add
jecxz
mov
icebp
mull
fs
sbb
add
add
xchg
sub
dec
sub
adc
shll
test
pop
pop
fs
sti
insl
jne
sti
pop
test
mov
mov
and
and
repnz
rcl
in
in
lcall
je
stc
aad
leave
cld
aam
push
dec
lock
or
and
xor
push
js
pop
das
sti
dec
cmp
int
adc
fwait
js
inc
je
sbb
mov
imul
out
clc
stos
scas
add
mov
mov
mov
adc
mov
mov
in
mov
dec
in
sub
cmp
or
mov
and
push
mov
xchg
xchg
insb
call
mov
xlat
and
mov
adc
cli
cmp
cmp
inc
or
insl
mov
pop
rorb
sbb
stc
fs
sub
lcall
fldcw
xchg
sub
mov
and
in
mov
push
jnp
jb
cmp
push
ds
add
jl
inc
add
push
fbld
mov
lret
mov
lea
popf
imul
add
xchg
xor
or
jp
mov
aaa
cmp
add
fadd
es
les
lock
pop
push
fadds
ljmp
mov
adc
gs
add
and
repz
jbe
and
ret
jo
cs
movsl
mov
adcl
adc
inc
adc
lret
push
lds
cmp
roll
aaa
sahf
xchg
fsubrl
pop
rcrb
ljmp
aaa
ljmp
pop
sbb
jb
sbb
addl
xor
dec
mov
aas
sbb
pop
loope
pop
fildl
inc
inc
inc
das
imul
xor
sub
data16
and
mov
adc
xchg
mov
lds
clc
pusha
sub
mov
cmpsb
push
cwtl
push
filds
mov
mov
das
xor
js
sbb
xor
adc
popf
jno
insl
mov
jecxz
mov
mov
cmp
add
xchg
addr16
pop
dec
fcmovb
jmp
enter
imul
cld
ret
xchg
pop
clc
and
jno
js
jo
jbe
jle
adc
fnstsw
in
or
imul
and
test
xchg
xchg
ss
insb
pop
call
push
leave
stos
mov
sub
pop
popa
push
cmpsl
fstps
dec
loop
jecxz
sub
insb
push
adc
push
lret
test
cs
adc
ds
cmp
jbe
mul
popa
dec
into
push
jmp
pop
push
loopne
dec
xchg
popa
push
add
fidivrs
fsubrs
xchg
fldlg2
mov
lret
das
js
xor
mov
or
lods
mov
addl
xor
lret
mov
xlat
pop
xchg
mov
popf
notb
aaa
out
es
cmp
sbb
fwait
scas
mov
pop
sbb
jecxz
sub
or
add
add
cmp
push
pop
xchg
ljmp
sub
xor
daa
and
adc
mov
repnz
xor
cmpsl
arpl
out
ret
call
pop
notl
push
mov
in
aam
movsl
out
popf
adcb
pop
sub
and
adc
mov
push
rorl
xor
mov
rcrl
mov
mov
inc
testb
fildl
jecxz
pop
cmc
or
fistl
mov
push
and
rclb
sbb
insb
popf
push
xorl
rcrb
dec
fldcw
push
imul
dec
xlat
inc
mov
in
lcall
pop
jnp
adc
insl
sub
lea
inc
push
les
fcomps
push
or
fstl
dec
imul
mov
sbb
sbbb
fs
test
xchg
cmp
out
xchg
je
les
das
jo
and
movsb
cmp
mov
xchg
adc
push
sldt
push
out
cvtdq2ps
lods
cwtl
or
cmp
mov
mov
fistps
push
fisubs
imul
jle
sahf
push
add
xchg
dec
mov
sub
icebp
inc
push
and
jnp
sub
cmp
out
inc
add
push
roll
push
lods
repz
mov
dec
or
repz
dec
xor
sbb
aam
pop
mov
repz
mov
adcb
xor
sbb
stos
imul
in
cmpsb
test
mov
int
mov
jp
push
sub
mov
or
jb
inc
stc
sub
add
or
mov
js
das
stos
fstl
int3
call
jecxz
cs
gs
mov
xchg
sbb
adc
xor
cmp
ja
cmp
xorb
xor
jae
sbb
sbb
cwtl
jp
pop
addr16
hlt
or
lock
jecxz
adc
shl
scas
jecxz
mov
mov
adc
push
gs
lret
or
xchg
iret
mov
scas
out
mov
repnz
in
into
dec
and
shl
nop
push
pusha
dec
hlt
in
dec
shrl
jns
mov
sbb
sub
scas
in
dec
and
adc
jmp
call
jb
xchg
sub
iret
mov
pop
in
movsl
ffree
rcr
cmp
xchg
mov
shl
jno
loop
dec
mov
fistps
fidivs
mov
icebp
cmp
mov
mov
mov
gs
lret
xchg
fidivs
adc
add
mov
pop
xchg
push
clc
mov
and
or
jae
xor
call
mov
push
cmp
les
cmp
push
jp
push
pop
stos
cmp
daa
test
and
movsb
leave
xor
push
pop
imul
jns
fbld
arpl
xchg
lods
fsubrs
xor
rolb
insb
notl
test
test
fmuls
shl
mov
mov
pop
dec
mov
and
sbb
mov
and
daa
xor
inc
cmp
sub
xor
in
imul
push
out
mov
test
or
mov
scas
lea
idivb
leave
mov
fwait
lahf
push
dec
jmp
add
dec
lods
lods
xor
lret
fcmove
cmpsl
imul
lcall
mov
repnz
push
pop
cmpsl
decl
dec
adc
adc
es
insl
cmp
push
dec
ret
popa
mov
scas
mov
loop
mov
loopne
std
inc
mov
repnz
xor
xor
pop
push
push
mov
nop
jl
xor
and
xor
scas
popf
adc
inc
or
pop
mov
dec
aas
test
cld
dec
push
stos
out
adc
dec
sub
dec
imul
sbb
rcrl
mov
fbld
mov
imul
jnp
shl
test
jg
pop
jns
dec
in
inc
mov
sub
mov
inc
pop
cmp
mov
push
inc
daa
xchg
jb
inc
lret
aas
dec
xchg
sub
dec
call
das
leave
xor
push
rcrl
dec
mov
push
je
adc
lcall
test
adc
push
into
inc
pushf
je
push
mov
sbb
ss
stc
fmul
xor
add
push
and
push
cmp
dec
rolb
mov
loop
push
fnstsw
outsb
inc
imul
push
icebp
xor
or
lret
or
lahf
dec
xchg
cmp
int3
prefetch
fildl
mov
xchg
inc
outsl
pop
pop
jmp
movsb
movsb
outsb
aad
cmp
push
gs
xchg
or
mov
or
es
mov
sbb
push
dec
push
xchg
mov
idivb
aas
and
iret
fcmovu
sub
js
or
fs
sbb
in
mov
push
scas
cmc
decl
adc
and
popf
cwtl
xchg
or
sbb
and
xor
pop
fwait
add
add
xlat
xor
jmp
mov
aad
movb
cs
push
jno
cwtl
push
cwtl
mov
push
cmc
push
pop
insl
mov
pusha
incl
xor
mov
xchg
in
test
fcomp
enter
mov
popf
hlt
imul
jmp
sarl
xchg
xor
addr16
data16
cmpl
sarb
aaa
fwait
or
aaa
or
and
xchg
mov
decb
ljmp
dec
lea
push
or
dec
jl
jl
push
xchg
xor
mov
lods
mov
jl
mov
adc
or
cmpsl
ret
sbb
push
mov
and
ja
lcall
dec
std
mov
add
aad
cmc
mov
sub
push
cmp
mov
fldcw
push
mov
fwait
mov
mov
push
clc
ss
outsb
sub
add
loop
sbbl
jmp
jg
inc
data16
mov
hlt
jae
ds
test
sub
and
or
cwtl
sbb
add
push
push
mov
repnz
mov
jae
push
or
mov
or
dec
and
ret
ljmp
fwait
icebp
sub
cli
push
xchg
mov
rcrb
jne
pop
inc
lcall
fnstenv
out
sub
jmp
std
and
popf
insb
fidivrl
xor
mov
ret
lea
in
push
pop
mov
mov
inc
daa
fwait
cmpsl
mov
jns
movsl
inc
packssdw
add
fbld
dec
sahf
outsb
movl
enter
movsl
shrb
add
int3
ror
loopne
popf
mov
jo
jbe
fbld
mov
push
pop
xor
jno
les
sbb
and
pop
jmp
mov
or
sbb
dec
mov
iret
xlat
mov
pop
out
fiaddl
xchg
loop
test
aad
popa
mov
xchg
cltd
leave
cmpsl
fsubs
xor
adc
jnp
jbe
iret
cmp
sbb
jmp
sbb
ja
adc
lds
jae
orb
cmp
push
ss
push
ljmp
js
pop
push
dec
jno
push
jbe
xorl
and
cmp
sbb
mov
mov
aam
clc
adc
or
push
movsl
sbb
mov
shlb
imul
icebp
and
inc
sbb
push
and
mov
adc
shrb
add
inc
ror
repz
inc
ret
mov
imul
lds
sbb
fld
pop
jge
fstps
jns
sub
mov
pop
or
add
mov
rclb
adc
fwait
inc
fildll
ret
jbe
jmp
aam
push
jno
lods
mov
adc
pop
mov
in
jmp
imul
int3
and
mov
repnz
insl
jbe
and
xor
xchg
insl
inc
in
out
mov
add
fsubrp
fildll
sbb
push
sub
and
pop
inc
insb
and
cmc
and
sar
cwtl
or
mov
pop
jecxz
mov
xor
mov
mov
mov
cwtl
inc
cmpsl
push
cmp
pop
add
imul
push
aas
inc
cmp
sub
ret
incl
and
sbb
push
lret
mov
add
jo
faddl
jbe
xchg
sub
aas
loope
insl
lods
pop
aaa
mov
les
pop
enter
jle
lret
add
pop
or
dec
scas
hlt
pop
push
xor
loope
sti
aam
cmp
aas
adc
cwtl
jge
mov
es
pop
add
sarl
outsl
sub
fists
in
iret
and
xor
xor
jp
sbb
jne
pop
jb
jne
xchg
add
cmp
adc
out
push
out
ja
je
pop
movsb
lds
fdivs
jae
pop
add
dec
mov
addr16
outsl
xor
adc
mul
mov
test
enter
in
sbb
mull
dec
xor
or
sets
movsl
std
popf
sub
sbbl
ljmp
mov
add
daa
shrb
xchg
shlb
cltd
xchg
push
test
jne
inc
sbb
in
cld
inc
rcll
push
mov
push
push
cmpsb
or
pop
xlat
lret
jmp
test
das
ljmp
loope
jno
inc
mov
jg
adc
stc
mov
insl
push
push
push
and
lods
cmp
push
push
push
test
nop
dec
push
cmp
sarl
jl
adc
outsl
fxch
ret
subb
push
scas
ss
mov
stc
jb
jmp
loopne
jnp
pop
add
les
adc
scas
mulb
cli
cwtl
lock
fiaddl
xor
push
and
repnz
clc
and
lahf
mov
iret
pop
add
inc
mov
xor
xlat
mov
dec
and
add
dec
and
jmp
mov
in
shlb
xacquire
nop
les
mov
stos
int
mov
inc
mov
clc
pop
jne
sbb
mov
pop
lods
xchg
movsl
subl
mov
lock
inc
mov
fwait
lds
sahf
and
jmp
les
loop
jne
icebp
and
pop
mov
sti
sbb
pusha
pusha
out
arpl
outsb
cmp
rcrb
in
loope
scas
mov
lds
mov
into
xchg
and
ret
fstpt
and
mov
test
sub
xchg
and
stos
push
add
arpl
sbb
xchg
mov
cmpsl
idivb
mov
fadd
xchg
hlt
icebp
pop
call
push
pop
and
loope
fs
xor
call
das
pop
dec
lcall
mov
mov
jp
icebp
sbb
rorl
pop
loope
lods
adc
in
out
addr16
lahf
dec
arpl
add
repnz
mov
dec
imul
in
les
xchg
xchg
mov
aam
outsl
xchg
ss
sbb
ja
mov
enter
pop
xchg
sub
fwait
bound
adc
imul
jp
cmp
mov
xchg
imulb
pop
add
push
dec
stc
addr16
xchg
stos
aas
cmpsl
and
call
sahf
out
fwait
xor
jb
daa
faddp
or
pop
push
and
sub
daa
sarb
jbe
sti
push
dec
pop
fadd
push
sub
xor
xchg
mov
jecxz
aam
mov
pop
popf
nop
lock
push
leave
fimull
lds
or
jp
xchg
push
in
fidivrl
das
fstpt
jne
aas
push
into
aad
out
call
adc
fisttps
sbb
or
jb
pop
lods
add
sub
inc
xchg
lods
cs
push
jae
les
popa
adc
loopne
dec
pop
jmp
lret
shll
adc
or
fldenv
xchg
gs
test
sarl
pushf
test
rorb
pusha
imul
mov
dec
mov
out
popa
in
test
xchg
mov
nop
dec
or
je
call
fstpl
jmp
iret
add
pushf
mov
ficomps
xchg
ljmp
cmp
mov
mov
ljmp
cmp
popf
xor
push
or
push
aas
mov
push
or
mov
fmull
add
orl
push
add
cltd
outsl
cmp
sbb
dec
dec
jmp
pop
push
or
jp
push
mov
jl
sbb
inc
cmp
mov
xor
ljmp
incb
shrl
repnz
and
insb
divb
mov
fsubrl
cmp
push
int
in
fs
enter
xchg
push
mov
jb
js
ret
ficompl
rcr
enter
out
sbb
call
cs
les
in
sahf
jl
loope
jo
sbb
jle
xor
test
mov
test
scas
shlb
pushf
mov
cs
jnp
in
pusha
adc
addb
rclb
cltd
outsb
lret
sub
and
outsl
sub
lods
fbld
pop
and
std
dec
adc
mov
stc
mov
fistps
pop
pop
jo
sub
push
ja
push
pusha
mov
sub
cmp
mov
push
test
pop
pop
ret
dec
mov
bound
stos
data16
cld
mov
jg
or
bswap
fadds
lret
or
jp
fstpl
pop
sbb
or
push
sub
mov
mov
fistpll
dec
cld
cmp
pusha
js
stos
push
jmp
das
mov
or
cmp
pop
aam
roll
sub
push
pop
xchg
jb
out
xor
pop
mov
lock
enter
les
jp
lods
jmp
xor
or
jnp
ret
xor
xor
dec
jmp
fsubrl
mov
rorb
mov
in
lods
mov
add
inc
mov
loop
pushf
cltd
mov
xchg
or
shll
repz
shr
push
adc
aam
add
stos
xlat
test
fdiv
inc
sub
xor
inc
jno
sub
jne
aas
fisubrl
cmc
xchg
adc
push
insb
icebp
push
sbb
gs
mov
aam
xchg
subb
mov
cmp
xchg
test
hlt
jo
dec
xor
fs
jge
push
inc
cmp
pop
scas
xor
sahf
sbb
std
das
mov
mov
cmp
add
pop
fwait
fwait
mov
bound
xchg
ja
lock
into
adcl
or
sbbb
aaa
adc
mov
push
dec
sbb
sahf
shll
adc
or
bound
push
pop
push
xchg
ljmp
mov
lods
fsub
ss
dec
nop
cli
or
ret
into
dec
cmp
mov
xor
popa
jp
fld
or
nop
outsl
popf
xchg
clc
jno
shll
scas
xor
xchg
shr
mov
inc
mov
outsb
sti
je
sbbb
popf
fcmovnbe
xor
pop
sub
popf
mov
lds
mov
adc
or
inc
std
dec
das
into
loop
add
jle
pop
add
push
bound
sub
push
fnstenv
xor
mov
inc
and
xor
mov
cltd
jmp
xchg
push
mov
out
inc
inc
jl
cs
scas
add
lods
mov
and
push
arpl
pop
sti
sbb
scas
mov
lock
fwait
xor
in
push
sub
inc
push
mov
loope
cmp
inc
outsl
inc
push
aam
fimull
fs
push
add
push
in
aas
or
outsl
daa
out
insb
mov
xor
loopne
jae
sbb
push
test
pushf
adc
dec
loope
jae
xlat
xor
pop
or
fistpl
mov
fcomps
insb
test
push
or
daa
loop
sbb
stos
jge
jb
fdivs
xchg
int
adc
add
inc
popf
rcrb
mov
out
push
pop
sub
sarb
fsubrs
outsb
stos
lret
hlt
push
add
loop
into
pushf
jecxz
iret
push
pop
in
js
stos
dec
sbb
jmp
mov
insl
ss
xchg
mov
popf
aas
out
and
popa
roll
xlat
cmp
lods
fwait
mov
and
gs
mov
in
movsl
cmp
mov
xchg
xorl
cmpsb
scas
sub
dec
fucomip
stos
mov
xadd
dec
divl
jb
mov
mov
cmpsb
mov
mov
ja
cvtpi2ps
and
adcb
insl
mov
jl
or
push
sbb
mov
aad
ds
test
and
push
sbb
mov
out
cmp
mov
addr16
mov
or
dec
in
movsl
lret
cmovns
jbe
mov
aas
movsb
jmp
jg
pop
mov
sbb
or
js
aaa
sub
mov
mov
cli
mov
pop
mov
mov
mov
stos
cmp
inc
mov
movsb
push
ljmp
xchg
cmp
and
and
fdivrs
fwait
inc
push
repz
js
nop
xor
ja
mov
ret
je
xchg
push
sbb
pop
push
jle
lods
xor
stc
cmp
jmp
cwtl
aam
dec
adc
out
clc
lahf
das
test
add
jbe
ja
lods
cwtl
mov
jg
push
clc
mov
enter
mov
addb
sbb
imul
test
mov
mov
push
add
ja
jbe
aas
sti
inc
call
gs
daa
xchg
sub
sub
das
das
jne
lret
mov
jae
out
imulb
push
dec
mov
push
mov
imul
in
mov
adc
inc
shrb
jl
sbb
jb
lahf
jns
or
mov
cli
mov
sub
inc
push
pop
pop
mov
and
pop
clc
and
cmc
mov
aam
jo
mov
and
data16
jecxz
and
cmp
clc
das
test
and
call
test
pop
push
mov
mov
push
mov
xor
daa
xor
daa
out
xor
mov
jnp
mov
insl
nop
roll
in
es
push
or
cwtl
mov
setne
fwait
mov
mov
mov
cmp
pusha
call
inc
sbb
jle
pop
scas
mov
push
xor
jb
movsb
sbb
cmp
ja
das
xchg
lods
mov
or
sub
stos
adc
jge
daa
push
push
cmp
test
add
sub
and
loopne
js
fmuls
cmp
mov
ret
gs
insl
add
sub
cmpsl
outsb
or
dec
stos
sbb
rol
iret
push
mov
adc
and
sub
sub
adc
je
mov
push
inc
jnp
cmp
push
data16
rclb
sti
fidivs
push
lcall
and
or
add
push
cmp
and
in
ret
xor
pop
adc
xchg
fs
mov
inc
push
mov
lahf
pop
shll
xor
mov
repz
jno
inc
fstl
pop
sub
mov
cmc
sti
adcl
cwtl
out
mov
jno
popf
out
inc
jae
xchg
out
dec
mov
lods
addb
inc
sub
sub
fisttps
mov
popf
mov
jno
inc
movsb
cmp
xor
jp
fiaddl
jno
divps
subb
dec
call
sti
stos
gs
push
iret
lret
in
scas
cs
arpl
mov
and
ja
icebp
iret
nop
js
aam
iret
push
hlt
push
loopne
enter
add
fisubrl
icebp
fucom
lods
mov
xor
cmp
outsl
xor
cmp
sbb
out
jb
ret
in
lock
jmp
imul
cmp
daa
mov
test
js
mov
or
daa
sbb
mov
movsb
ss
test
xor
dec
mov
arpl
fldt
add
in
sti
xor
push
hlt
popf
push
fnstenv
pop
data16
lods
and
cmp
mov
and
shlb
mov
mov
xor
mov
pop
scas
mov
sti
popa
or
aas
std
ret
mov
out
cs
lock
jb
add
inc
push
push
insl
cmp
repnz
cwtl
movl
mov
mov
adc
jne
pop
iret
out
mov
out
push
jne
push
sub
sbb
add
rolb
out
leave
or
xorl
sub
andl
add
addl
mov
addr16
jmp
aas
iret
fwait
cmp
xor
mov
mov
imul
sub
test
pop
jno
out
mov
out
insl
mov
js
insb
pop
mov
mov
call
sbb
xchg
out
or
pop
dec
sub
orb
cmp
lret
mov
je
sbb
in
xor
call
cmc
jmp
dec
jb
cmp
xchg
add
rcr
mov
push
or
in
dec
mov
or
rcll
loop
or
js
shlb
lcall
mov
stos
inc
jb
imul
mov
add
movsb
and
test
movsb
mov
or
mov
jbe
jg
xor
test
inc
out
js
je
inc
xchg
xchg
mov
sahf
lods
xlat
fcmovnbe
cltd
call
ss
ret
or
jg
inc
adc
xor
xchg
fistpll
cmpsl
ret
mov
cmp
jl
mov
aam
or
or
bound
and
or
test
ret
jnp
leave
scas
inc
xchg
mov
arpl
pop
daa
cmp
mov
repnz
repnz
pop
mov
in
negb
sti
outsl
fsubrl
mov
jae
cmp
xchg
inc
insl
scas
das
outsl
lds
out
lods
jle
movsb
dec
std
addr16
xchg
fldenv
cmp
xchg
xchg
push
and
push
cld
bound
mov
adc
popa
xor
mov
mov
iret
stc
adc
adc
insb
arpl
lock
mov
xchg
popl
pop
cmpsb
fcomi
fiaddl
xchg
or
psrlq
xlat
adc
insb
sbb
xchg
arpl
pop
xor
adc
cmp
add
adc
jae
dec
adc
xor
sub
add
mov
cli
test
sbb
orl
ds
imul
add
dec
mov
pusha
cwtl
loopne
pop
cs
cmp
bound
jno
enter
fldenv
leave
rcll
nop
out
ss
jle
jno
pop
pop
popf
add
and
lret
and
push
pop
pop
xor
lret
fsts
inc
add
cmpl
sbb
cmp
inc
sub
pop
push
jp
mov
test
aam
sarl
and
jmp
ret
icebp
dec
dec
mov
xor
jnp
lcall
cmp
push
cmp
fstpt
cmp
inc
in
cs
dec
data16
movsl
inc
stc
or
mov
push
mov
xor
adc
cmp
mov
cwtl
aas
cld
js
sbb
add
mov
xor
in
xorl
mov
hlt
shrw
add
push
adc
cmovb
flds
int
data16
jo
shl
add
mov
inc
sub
mov
cs
mov
pop
push
dec
ja
dec
dec
lea
cwtl
xchg
cmp
xchg
das
pop
lock
test
mov
push
test
fstl
test
icebp
jl
xor
movsl
andl
data16
pop
sub
pop
scas
push
gs
es
xchg
aas
cs
scas
inc
lcall
scas
fdivrl
jmp
gs
test
ds
mov
sub
out
scas
cmp
xchg
or
adcl
lds
mov
sbb
jmp
int
mov
outsb
mov
lods
scas
lods
flds
fdivrp
push
cmc
sub
mov
pusha
sub
mov
popa
in
das
or
cmp
inc
rorl
and
mov
ret
add
in
jmp
xchg
jno
rclb
cli
fdivrl
xlat
out
dec
push
and
dec
dec
push
inc
and
movsl
push
and
shll
shll
jecxz
mov
mov
inc
push
dec
pop
neg
enter
add
xchg
orb
inc
nop
outsb
lock
cmp
daa
sub
fisttps
xchg
inc
mov
cmp
ja
sbb
lock
loopne
mov
scas
pop
sbb
dec
and
mov
fwait
repz
iret
lahf
adc
pop
pop
ljmp
mov
idiv
cmp
int3
jge
mov
lcall
jl
shrl
fyl2x
pusha
xchg
mov
xchg
into
or
out
xchg
js
int3
cmpsb
inc
out
cli
or
pop
movsb
jo
sar
shlb
mov
roll
jae
int3
cmp
sarb
lahf
mov
mov
sbb
add
arpl
cwtl
mov
sub
pop
sub
push
xor
sbb
fldenv
or
pop
sbb
test
jne
mov
nop
add
stc
sar
and
or
dec
les
nop
mov
jcxz
push
mov
ret
mov
mov
iret
xlat
jae
jmp
pop
lds
icebp
popa
into
incb
add
repnz
cmp
jno
dec
xor
mov
jg
push
dec
and
insb
aam
push
in
cmp
je
push
and
xchg
mov
into
fs
lock
mov
scas
mov
mov
call
loop,pn
test
inc
jnp
cmpsb
jmp
and
out
lea
lret
imul
jge
lahf
pop
addl
xor
rcrl
addr16
ret
hlt
cbtw
insl
hlt
dec
dec
jne
popa
rcll
mov
icebp
push
lea
inc
scas
jo
pop
sbb
popf
sahf
sti
es
fwait
push
mov
iret
add
jns
mov
add
adc
mov
push
aam
xor
push
nop
imul
dec
cwtl
loop
xchg
inc
push
jl
std
pop
mov
mov
push
adc
test
mov
pop
cli
jge
inc
int
push
inc
insb
repz
loop
data16
cmp
pop
adc
out
rcll
jae
outsl
fnstenv
jl
jp
aaa
xchg
jae
and
sub
jae
daa
xchg
adc
and
sbb
mov
outsb
ljmp
push
rcll
test
add
jb
andb
lcall
mov
add
sub
and
sub
mov
ret
stos
in
adc
loopne
int3
cmpsl
cmp
mov
push
push
xor
mov
sbb
mov
xchg
adc
mov
xorb
pop
mov
and
adc
xor
xchg
xchg
inc
inc
mov
imul
adc
cltd
sbbl
shl
cs
stos
mov
dec
int
xchg
cltd
pop
dec
cld
in
mov
test
jo
repnz
test
pop
dec
lods
je
push
andb
jno
lret
jno
add
xor
add
mov
out
mov
mov
mov
xor
dec
fdivrl
jnp
lods
cmp
xchg
out
push
addr16
pop
jnp
je
mov
xor
std
clc
out
xor
mov
test
dec
jns
fsubrs
shll
dec
das
enter
cmp
hlt
or
lods
repz
dec
mov
roll
mov
fists
adc
popa
cmp
jg
leave
shl
idivl
rclb
xchg
pop
dec
push
sahf
cmpsl
or
pop
call
cmpsb
jmp
or
idivb
dec
lea
dec
sbb
jl
insl
xchg
adc
clc
idivb
push
imulb
mov
in
push
pop
aaa
lods
inc
test
outsl
mov
mov
jl,pn
or
lret
test
fdiv
ret
clc
inc
in
es
insl
jecxz
mov
aam
or
popf
scas
sbb
jne
repnz
cmp
test
sub
push
ds
daa
jbe
jge
sbb
inc
add
push
in
adc
mov
cld
aam
pop
and
pop
leave
scas
test
inc
loope
xorb
fs
imul
push
dec
adc
inc
icebp
aam
fbld
aas
aas
cli
pop
mov
mov
mov
and
push
inc
xchg
jbe
das
xor
sub
not
and
fstl
outsl
fidivrl
xchg
hlt
out
mov
std
sysexit
mov
jp
jne
pop
inc
push
out
mov
jg
xlat
nop
fwait
psllq
ds
loope
push
xchg
or
dec
iret
add
fwait
jae
imul
cmp
inc
out
push
xor
scas
add
loope
add
mov
aam
bound
push
popf
insb
sbb
nop
push
push
movsb
pusha
popf
aam
mov
push
bound
mov
xor
cmp
xchg
push
jbe
adc
cmp
scas
rcl
cmpl
iret
out
xor
push
mov
inc
xchg
fimull
dec
mull
scas
mov
ja
cmp
xchg
inc
push
pop
dec
das
aam
pop
cwtl
iret
test
fisttps
pop
and
in
fdivrl
push
jbe
mov
push
clc
sti
xchg
loopne
jecxz
scas
xchg
or
es
xor
adc
lcall
mov
fldcw
xchg
dec
fnstsw
cmp
nop
imul
shrb
lcall
decb
ja
insl
out
jl
ja
aam
lret
xchg
sarl
inc
int
jb
xchg
ss
test
insb
xor
mov
call
fisubrs
and
adc
ret
push
mov
jecxz
cld
push
repnz
fisttpll
fisubrl
cmp
es
pop
sarl
mov
sti
ds
push
and
mov
jl
test
clc
xchg
inc
and
fcomi
inc
out
cs
subb
pushl
lahf
jns
add
repz
inc
push
dec
bound
lcall
movb
jmp
je
jae
insl
pop
and
arpl
sub
and
mov
jae
pop
test
and
shl
fcoms
mov
and
hlt
xchg
cvtdq2ps
outsl
mov
xor
jle
js
inc
gs
cmpsb
shrl
arpl
in
pop
insl
fs
mov
or
jle
push
shlb
push
xor
int3
sbb
mov
fistpll
cs
and
pop
sar
push
outsb
out
sub
and
imul
xchg
fisubs
das
pop
mov
sub
dec
xchg
mov
fdivs
test
je
pushf
lods
lahf
cld
lcall
adcl
pop
lods
sbb
out
pop
sbb
cld
xchg
xchg
lock
sub
ja
adc
cwtl
movsb
addr16
pop
xchg
cs
in
xchg
andb
jle
sbb
add
or
push
ret
mov
fnstsw
jno
sti
add
mov
testl
mov
in
dec
cmpsl
stc
test
adc
aad
jg
pop
out
dec
jecxz
mov
fisttps
mov
cwtl
or
xor
lock
loop
or
push
lahf
fadds
hlt
mov
xor
push
scas
aaa
inc
in
loope
js
push
pop
rcrl
fcmovu
xchg
jbe
das
inc
aad
orb
dec
je
push
leave
fnsave
cmp
pushf
test
add
fldt
cmp
dec
jns
aas
stos
jl
test
sbb
inc
sub
orb
popf
orl
rorl
pop
jbe
push
popl
scas
sbb
push
in
inc
xor
es
fs
adc
pop
lcall
xlat
ds
or
push
push
push
push
cmpsl
jle
dec
fcoms
and
in
into
inc
arpl
int
xchg
inc
sbbl
js
sub
mov
xor
mov
mov
es
fidivs
dec
in
mov
push
icebp
stc
ja
adc
sbb
movsb
cli
popa
push
outsb
lret
ja
inc
mov
popl
int
js
sub
mov
sbb
int
cmp
adc
fs
scas
enter
xor
daa
loope
adc
js
mov
repz
mov
mov
xchg
pop
and
inc
shrb
fs
fmuls
push
ret
mov
jecxz
addr16
es
adc
sarb
cmp
pop
daa
scas
adc
sbb
shl
imul
imul
jns
add
or
outsb
xor
cmpsb
sbb
adc
imul
fsubr
scas
mov
jo
mov
shlb
sub
out
dec
jp
pushf
xor
cli
adc
adc
inc
cli
mov
push
jo
cmpsb
pop
inc
add
sbb
sbb
roll
in
xchg
out
xchg
cli
cmpl
pop
scas
jno
out
fwait
sub
jb
test
in
fcomi
push
xchg
enter
test
lret
sub
pop
iret
push
inc
xorl
cs
fwait
inc
fldpi
iret
push
adc
dec
rcrb
pop
jecxz
imul
imul
mov
mov
notl
arpl
mov
std
popf
pop
lods
push
iret
repnz
mov
adc
jne
cmp
imul
nop
lods
in
and
fmulp
xchg
inc
inc
mov
rdmsr
pop
jns
lret
jb
lock
push
ffree
xor
jo
mov
pop
fbld
adc
and
inc
faddl
jnp
cmp
imul
xchg
daa
cs
xor
push
fidivrl
sub
js
mov
ror
stos
test
dec
sbb
jg
cmpsl
mov
imul
outsb
and
and
sbb
out
je,pt
les
in
mov
mov
scas
xlat
mov
out
orb
cmpsb
rol
dec
sbb
dec
xchg
andb
test
cld
jns
push
inc
sbb
push
enter
lahf
sti
push
inc
movsl
sbb
imul
pop
icebp
mov
jae
xchg
rolb
or
xor
decl
xor
jns
sub
les
out
ljmp
pop
push
stos
fsubrl
or
mov
das
pop
outsb
pop
movsb
enter
sbb
mov
iret
inc
mov
push
lds
cmp
clc
push
mov
out
pop
out
repz
xor
pop
hlt
sub
data16
and
fidivrl
das
jmp
mov
repnz
test
jbe
fsubrp
ljmp
xchg
and
xor
clc
pop
push
in
inc
rcrb
das
pop
repz
push
pop
mov
movntq
out
lahf
mov
cmp
xor
mov
sub
inc
repz
dec
addr16
sub
fdivl
loop
lret
notb
shll
stc
jne
in
test
ffree
lock
mov
sti
adc
sub
gs
or
orb
test
inc
mov
or
in
adc
sarb
inc
lahf
and
add
push
xchg
stos
pop
sbb
fisttps
es
pop
jmp
std
sbb
push
adc
int3
mov
mov
rorl
je
xchg
xchg
jle
dec
lcall
sbb
rorb
ljmp
cmp
xor
in
movsl
repz
cs
add
sub
mov
cmp
sub
mov
test
jne
mov
pop
out
mov
and
xlat
pop
mov
mov
loope
inc
dec
mov
mov
repz
push
cmp
ss
aas
mov
or
sbb
lods
and
jmp
push
aam
out
jno
out
out
sub
pop
mov
push
adc
das
pop
inc
xchg
push
scas
sub
push
and
imul
inc
add
adc
push
inc
pop
stos
lea
outsl
add
mov
aas
xor
mov
out
inc
in
adc
cmp
cmp
and
jg
stc
in
jmp
mov
mov
aaa
jp
js
mov
mov
push
inc
fnstenv
and
int
pop
xor
ret
sbb
pop
sbbb
pusha
rcrb
iret
lahf
lahf
sub
mov
inc
out
adc
ficomps
jne
and
mov
xchg
jno
jo
lcall
jnp
and
fisubrl
pushl
jbe
push
jno
sbb
inc
cmp
outsl
call
cmp
cmc
mov
in
xchg
xchg
lods
push
imul
rcl
fs
jl
xchg
add
adc
add
cmp
insb
pop
in
stos
rolb
push
sbb
xor
cmp
test
xor
int3
pop
push
sahf
aas
cld
out
inc
dec
or
lcall
out
stos
xor
sbb
cmp
adc
int
jge
or
cmp
movsl
mov
or
pop
int3
aaa
icebp
jb
dec
aad
mov
mov
xchg
cmp
cwtl
leave
mov
insb
lcall
shrd
in
and
lcall
jo
jns
add
push
mov
movsb
inc
repz
test
dec
xor
adc
sbb
cmp
bound
adc
mov
jo
add
adc
pop
sbb
sub
in
jnp
pop
pushl
scas
popf
mov
lret
in
jge
dec
jp
sbb
dec
lock
cmp
imull
push
sbbl
fldcw
cwtl
pop
fwait
push
out
sbb
leave
jmp
cmp
mov
cmp
pop
fcmove
mov
xchg
les
test
add
mov
into
scas
jne
dec
mov
push
fdivr
add
mov
mov
sub
xchg
mov
mov
mov
imul
jne
adc
daa
cmp
stos
sbb
lcall
mov
and
pushf
out
repnz
popa
jmp
adc
jmp
add
clc
sbb
add
rep
stc
in
dec
xchg
pop
jecxz
push
cmp
pop
int3
sub
stos
test
lea
js
ret
jns
inc
add
hlt
call
clc
push
setp
and
mov
in
in
fcomps
jmp
add
fsubs
xchg
xchg
cmp
pusha
pop
sbb
and
es
adc
clc
sbb
out
push
lods
add
or
adc
rorb
jp
outsb
ss
orl
push
adc
pop
sub
push
fdivrl
jae
sbb
or
cmp
pop
aas
pop
bound
pop
jno
xor
xor
jnp
and
aas
jp
enter
shl
jp
roll
bound
testl
test
loopne
stos
je
mov
sti
inc
mov
rcl
sti
cmp
fnstcw
jae
pop
shrl
notb
mov
sarl
aad
sbb
clc
mov
pop
lahf
popf
sub
loope
cmp
sti
bound
shlb
repz
sub
xchg
stos
icebp
pop
mov
sub
mov
pop
cmpb
in
movsb
aam
divl
xor
inc
sahf
out
xor
cmp
push
repnz
out
jg
lods
inc
xor
push
mov
sbb
fisubrl
push
loope
or
jg
cs
pop
mov
inc
inc
lods
shrb
lods
clc
cli
jne
lcall
mov
mov
das
or
jmp
mov
and
daa
std
xor
bound
mulb
fimuls
pop
adc
rcrl
ret
jnp
xchg
mov
fistps
testl
inc
inc
push
adc
mov
add
rcrl
push
xchg
int3
sbb
cltd
aad
jge
mov
push
mov
cmp
xchg
fisttpll
dec
inc
jne
iret
data16
inc
leave
adc
jge
leave
xchg
add
pushf
mov
push
dec
inc
inc
sub
popf
mov
sub
push
popf
push
mov
mov
jl
push
jbe
sub
lods
push
push
push
or
or
popf
cmp
lds
int
data16
cmp
xchg
scas
cmp
imul
dec
fsts
enter
pusha
and
mov
ret
xchg
mov
cmp
mov
add
adc
loopne
imul
lods
add
dec
fsubrl
fsubrs
push
imull
loopne
fdivrl
inc
adc
out
pop
pop
call
in
jo
add
sub
outsl
call
out
jne
jle
andl
push
sbb
adc
out
xor
bswap
or
cmp
sahf
push
mov
pop
imul
or
call
and
and
dec
mov
mov
mov
call
fidivrl
movsb
cli
fs
or
pop
adc
xor
add
rcl
cli
notb
xchg
mov
jne
mov
fwait
outsl
dec
subb
gs
or
jo
dec
sbb
mov
outsl
pop
out
jg
sub
pop
dec
pop
adc
repz
sahf
add
ds
sahf
pop
into
push
fldt
pop
mov
push
lcall
push
sub
andl
xor
sbb
xor
push
cmp
mov
outsl
pop
dec
and
rol
leave
and
xchg
add
mov
mov
iret
sbb
jae
sub
adc
pop
dec
add
roll
outsl
mov
mov
fdivrs
scas
push
jl
cltd
shlb
dec
loope
mov
sahf
inc
mov
lcall
and
sub
xchg
aas
fists
incl
xorb
mov
insb
dec
pop
cmp
sub
mov
mov
add
xor
test
adc
into
je
test
sub
frstor
jl
sub
out
add
inc
mov
jge
lods
mov
mov
divb
pop
mov
clc
bnd
mov
jmp
cld
jnp
imul
inc
dec
insb
cmpsb
testl
fs
decb
shl
dec
cmp
push
jmp
fsubrs
movsb
xor
cmp
add
imul
das
mov
mov
mov
aad
test
insb
dec
lods
js
pushf
cmp
push
jmp
xchg
sahf
push
jno
adc
int
adc
int3
xor
fs
pcmpeqw
insb
mov
push
sub
push
cmp
mov
and
outsb
mov
repz
fisubrl
incb
ret
lock
push
push
mov
stos
lods
int3
pop
push
test
sbb
mov
jo
repz
mov
cmovg
mov
jb
hlt
mov
adc
mov
movsb
sbb
je
jecxz
xchg
mov
addr16
stos
add
dec
xchg
pop
ds
mov
mov
stc
in
cs
in
inc
xor
cmp
add
loop
insl
ds
stc
imull
lret
pop
xchg
push
iret
loop
adc
cmpsb
sbb
sbb
stos
jmp
push
or
incb
cmp
ficoml
sub
sahf
pop
push
sbb
aas
fcoms
push
fstpt
xor
mov
fisubrl
in
pop
adc
inc
fbld
dec
test
jge
xchg
mov
sbb
inc
cmp
pop
aaa
scas
sbb
adc
mov
fdivrp
add
test
cli
lods
cmp
lods
ret
mov
lock
jp
or
push
jge
outsb
add
mov
mov
call
rcll
mov
clc
loop
add
movsb
es
ret
insl
jns
mov
adc
inc
xchg
lret
or
aad
push
jbe
xchg
cmpl
push
mov
adc
fimull
test
into
ror
cmpsb
inc
inc
outsb
jo
faddp
add
jne
sahf
xchg
xor
or
pop
sbb
sbb
iret
xorb
sbb
push
aam
jo
push
inc
push
xor
sub
xchg
mov
stos
cli
pop
ret
sbb
std
insl
test
dec
loope
push
xchg
sbb
add
orl
scas
iret
jecxz
lahf
mov
mov
add
into
xor
cmp
xchg
add
pop
pop
jns
in
imulb
pop
ret
push
test
adc
out
icebp
idivl
shrb
mov
js
xchg
pop
jo
pop
or
subb
movsb
lock
mov
sub
fistps
repnz
sub
mov
and
push
push
mov
inc
mov
dec
scas
mov
pop
xlat
push
sbb
iret
xchg
push
cmc
cmp
test
dec
cmpsb
mov
add
inc
lret
sbb
xchg
orb
dec
cmp
inc
jle
mov
or
sub
stos
out
imul
ja
lods
or
sbb
lret
xor
movsl
and
into
push
dec
xchg
xchg
outsl
lods
outsl
or
adc
jb
cmp
jnp
dec
mov
sbbb
iret
movsb
push
in
iret
shl
jg
ret
loope
insb
test
jne
pop
fisttpl
adc
pop
dec
sub
jmp
mov
imul
jae
cmpsl
jbe
gs
cmp
insb
enter
mov
clc
cmpsb
movsb
jb
test
push
dec
mov
fldl
lea
lret
scas
subb
jne
jle
mov
dec
loop
push
loope
cwtl
imul
jg
aad
insb
xchg
lcall
cmp
jae
flds
push
cmp
rcrl
rorb
ds
stos
int3
add
movsb
enter
add
pop
jg
test
in
in
in
lods
inc
inc
pop
rorb
mov
andl
insb
fisttps
mov
push
popl
cld
inc
pop
aas
push
ror
pop
cmp
xchg
adc
or
dec
sarl
push
jmp
push
movsl
xchg
cmp
adc
add
mov
jp
ret
imul
in
dec
adc
nop
adc
outsb
and
add
pop
mov
inc
popf
in
dec
hlt
popf
pushf
jmp
inc
mov
xchg
into
mov
jbe
jno
jp
aad
nop
in
add
or
sub
call
or
lcall
pop
mov
inc
imul
cmc
dec
mov
jns
xchg
je,pn
ret
ja
adc
push
push
dec
mov
push
leave
jae
shlb
jno
aaa
ja
testl
fidivrs
and
inc
mov
imul
jns
add
dec
aam
jl
popa
aaa
push
jge
xchg
dec
xchg
movsl
call
adc
ss
sub
ljmp
stos
shll
cld
jo
dec
mov
lret
data16
xchg
push
mov
mov
aaa
stos
cmc
and
adc
clc
lods
push
sahf
sub
push
test
xchg
xor
in
jecxz
idivb
mov
dec
xor
ret
pusha
cmpsl
or
insb
jp
sbb
cmp
dec
pop
out
cmp
inc
dec
incl
or
je
mov
pop
imul
pop
cmp
hlt
cs
push
in
fcmovne
aam
pop
mov
popa
sub
pop
add
imul
sbb
ror
shrb
outsl
test
movsl
sub
in
mov
inc
or
or
push
adc
push
cmp
mov
or
and
loope
cmp
lods
cmp
push
shlb
pop
lock
jg
and
leave
imul
jl
sub
xchg
cmpsl
add
out
fimull
or
insb
mov
andb
fcmovu
shlb
in
add
or
out
jg
adc
and
popa
adc
sbb
scas
xchg
sub
mov
mov
xchg
lret
sti
icebp
push
fidivs
cli
andb
fistpl
lods
and
xor
pop
gs
xor
cltd
sbb
scas
mov
mov
sti
add
ret
mov
mov
push
lret
xor
mov
test
ficomps
push
frstor
outsl
sti
and
adc
jnp
call
pop
fmull
sarl
xchg
pop
adc
outsb
cmp
mov
sbb
in
jg
movsl
inc
in
sahf
mov
sbb
ret
dec
push
cmpsb
push
cmp
or
cmpsl
in
pop
adc
fs
xor
xor
jns
push
inc
cmp
cli
shlb
cmp
repnz
lret
and
dec
xor
loopne
into
cld
push
mov
add
pushf
iret
pusha
mov
je
int3
sub
dec
aad
ret
inc
mov
jl
push
sub
lods
aam
mov
mov
add
add
lret
xchg
aam
jns
mov
or
mov
pop
pushf
movsl
lods
dec
jns
push
jne
pop
pop
inc
aaa
into
push
mov
cmp
sbb
inc
mov
mov
int
jp
ds
nop
pop
jmp
mov
pop
xchg
dec
or
adc
pushf
cli
xchg
lcall
push
pop
mov
mov
rclb
mov
cmp
cmc
push
sub
and
js
sub
push
jecxz
imul
inc
jle
sbb
fistpll
xchg
out
hlt
mov
arpl
mov
add
mov
add
and
clc
mov
push
or
mov
sbb
sub
sub
sbb
clc
or
stos
hlt
out
push
inc
lret
mov
mov
shll
inc
mov
das
jno
or
cmpsl
mov
jl
shl
jge
mov
adc
lcall
lock
and
sub
sahf
test
sarb
in
dec
imul
imul
lds
adc
sbb
add
sbb
dec
jbe
and
cmpsl
clc
mov
fcom
mov
pop
fistpll
popf
std
cmp
dec
adc
insb
sbb
test
pop
push
call
mov
xlat
mov
or
addr16
jge
int
pusha
mov
push
adc
daa
push
or
lcall
fs
sub
in
mov
repz
adc
pop
xlat
insb
push
out
dec
roll
es
push
insb
fnstsw
filds
insb
sbb
stos
in
pushf
push
gs
mov
leave
cld
xor
fsts
cwtl
mov
xchg
sub
jno
mov
cmp
nop
lahf
xor
xlat
pop
mov
push
test
ret
mov
jns
mov
and
ds
mov
nop
adc
inc
pop
mov
fsubrp
xor
cli
add
dec
add
call
std
lcall
lock
fdivl
push
fstpl
ljmp
adc
mov
rcrb
jbe
outsb
sbb
sub
bound
lods
sub
pop
jl
xchg
cld
int
dec
ljmp
pop
inc
fstl
test
lcall
popa
push
sbb
data16
scas
pop
icebp
divl
xchg
adc
cli
sub
dec
cld
shrb
cmpsb
ja
test
test
loop
mov
out
int
inc
stc
out
push
mov
mov
xor
xor
lret
lods
sti
hlt
jle
push
sbb
call
outsb
ficompl
mov
add
jns
mov
sub
mov
outsb
mov
mov
movsb
hlt
add
push
enter
push
mov
xor
adc
jecxz
sarb
push
adcb
adc
cmpsl
push
xor
xlat
call
fs
lods
sub
iret
and
mov
jns
jne
mov
stos
inc
es
pop
es
call
push
mov
sbb
pop
xor
aas
adc
pop
int
lret
hlt
popl
push
shlb
or
jp
sbb
pushf
mov
mov
inc
popf
out
daa
ljmp
popf
pop
jmp
test
xchg
jle
inc
icebp
shrb
dec
aas
adc
and
jno
outsb
dec
repnz
xchg
push
out
cmp
cli
jg
cmpsl
inc
pop
repz
call
out
nop
test
push
push
push
cmp
sbb
sub
loopne
mov
fwait
or
aas
push
push
sbb
popa
sbb
dec
int
fs
stos
cmp
in
jp
repnz
mov
add
pop
mov
fildl
mov
lcall
sarb
arpl
into
sbb
fs
mov
mov
pop
xor
out
movb
repz
adc
test
insb
bound
adc
stos
pop
test
adc
es
aad
out
push
addr16
sbb
and
fwait
sub
out
mov
mov
das
mov
in
push
mov
out
mov
or
inc
sub
jns
sub
ds
push
add
mov
in
push
push
pop
pop
fbld
xor
xor
rcrl
push
jb
mov
xchg
fwait
loop
jns
mov
subl
push
add
xchg
cs
xor
sub
dec
sbb
pushl
es
jle
pop
or
das
fisttpl
sbb
fld
sahf
push
negl
in
addr16
jmp
fsubp
jb
shll
mov
sub
or
jo
and
pop
ss
cli
xchg
lods
dec
and
ljmp
insb
ss
out
movsb
inc
add
adc
mov
push
imul
push
negl
stc
xor
inc
pop
push
in
js
push
fcmovne
int
mov
dec
cmp
adc
lods
call
sbb
lcall
arpl
xchg
dec
sbb
pop
mov
loop
jno
jo
sub
jbe
lea
jecxz
xchg
mov
xchg
jbe
fstpl
or
std
sub
xchg
popf
loopne
xchg
and
or
call
ljmp
mov
inc
psrlq
cmpsb
and
mov
sub
pop
xchg
mov
jle
or
fisubl
ret
nop
mov
add
cld
popf
xchg
mov
imul
cs
out
sub
mov
fnstsw
or
std
fmull
mov
in
mov
mov
xchg
add
cltd
ret
int
push
shr
xchg
or
jecxz
and
lret
sub
mov
push
xchg
out
mov
in
das
leave
xor
mov
mov
sbb
shll
and
cmp
cmpsb
mov
ret
jle
fwait
shrb
jns
xor
xor
cmp
mov
scas
sbb
dec
test
jbe
sbb
int
aaa
xor
je
stc
pop
mov
and
cmp
xchg
add
mov
pop
push
cmp
adc
test
daa
and
push
arpl
movsb
test
mov
cmp
push
xor
in
push
frstor
icebp
in
je,pn
sub
push
add
lret
fwait
roll
pusha
jle
loope
push
int
push
jge
sub
dec
ret
mov
rcr
mov
bound
adc
adc
ss
hlt
shll
push
popa
xchg
shlb
insb
clc
ffree
decl
add
ss
or
cwtl
rcrl
out
test
cwtl
lret
out
jae
clc
sub
test
pop
mov
out
mov
gs
out
mov
push
xchg
imul
pushf
in
push
cmp
sbb
dec
jp
int
xchg
scas
mov
cmp
mov
mov
cmc
dec
outsb
sub
mov
and
xchg
dec
mov
mov
sub
and
ds
gs
inc
enter
push
in
mov
hlt
ljmp
add
insb
repnz
lahf
rcrb
pop
mov
into
jns
push
push
mov
arpl
dec
jb
loope
dec
imul
cld
mov
sbb
loope
in
movsb
jmp
lock
adc
movsb
mov
cmpsb
fstps
add
arpl
aad
inc
sub
lret
lret
insb
push
lock
ljmp
push
call
pushf
scas
add
mov
fsubrl
mov
sub
icebp
sbbl
dec
and
mov
xchg
jg
arpl
js
into
pusha
push
jg
out
inc
sub
xlat
ret
fidivs
testl
mov
clc
xchg
out
and
adc
jge
repz
leave
sbb
mov
adc
xor
inc
fimull
ja
mov
inc
and
bound
sub
fisttpl
das
dec
xor
jnp
aas
scas
cmp
call
lods
int3
push
out
ljmp
lahf
push
dec
or
fsub
popf
or
push
shl
sbb
imul
and
scas
mov
loopne
imul
mov
fldln2
add
popa
push
sbb
in
jnp
not
jo
add
add
add
pop
xchg
pop
xlat
rcl
add
sbb
adc
sbb
out
popf
cmp
jne
into
or
inc
cmp
dec
sub
ljmp
addr16
pop
pushf
xchg
jb
int
cmp
jbe
jae
dec
sub
sub
jmp
xchg
pop
repnz
push
jo
std
mov
cmp
cmc
sub
fcmovb
cltd
lock
test
je
sbb
add
pusha
dec
mov
pusha
pop
push
dec
daa
xchg
cmpsl
loopne
inc
ret
cmp
cmp
sti
cmpsl
inc
cmp
daa
test
gs
out
adc
dec
xchg
or
ss
sahf
inc
fdivrl
into
bnd
adc
mov
add
jne
addb
adc
notb
mov
xchg
mov
insl
sbb
mov
call
and
jno
push
sbb
repnz
mov
sbb
test
jmp
inc
cmpsb
iret
repz
or
enter
cmp
rol
sub
push
adc
and
push
divb
jecxz
out
jae
push
aam
adcb
sbb
jns
paddsb
pop
mov
in
dec
and
mov
aas
fistpll
outsl
mov
das
pusha
in
lret
sbb
jae
push
cli
jns
push
xchg
sbb
bound
stc
push
popa
subb
cmp
int3
add
out
lret
mov
sahf
movsl
aam
hlt
and
pop
mov
xor
rcrl
jecxz
cs
iret
jg
inc
cmp
add
sbb
mov
jno
adc
rcrl
lods
sbbb
jp
mov
mov
rcll
call
jmp
aaa
adc
test
sub
pop
inc
leave
sub
popa
xor
mov
cmp
inc
fmulp
xor
test
sub
ret
rcll
sub
outsl
ja
sbb
lcall
lds
xchg
pop
fdivr
insl
call
add
or
mov
dec
pusha
mov
inc
dec
cmc
jne
adc
ljmp
mov
adc
test
sbb
jmp
push
add
gs
cld
cmpsb
dec
push
pop
push
rcll
cmp
cmp
popa
ret
lods
mov
add
push
lret
dec
jp
and
out
shl
adc
fistps
faddl
add
push
fwait
cwtl
jecxz
xchg
loop
scas
arpl
jg
dec
mov
mov
mov
cmpsl
leave
mov
mov
imul
filds
rcl
sbb
and
mov
js
xchg
jmp
scas
subl
mov
repnz
repz
shll
inc
pop
cmp
xorb
pop
adc
push
pop
test
movsb
lock
cltd
push
push
sbb
scas
sbb
add
sbb
pop
adc
or
pop
or
movsl
mov
les
sub
jbe
hlt
inc
int
inc
stos
or
inc
scas
adc
adc
push
xor
aam
lcall
in
pusha
mov
push
jne
out
dec
iret
lahf
cmp
xchg
lods
xor
or
mov
ds
push
stos
cwtl
cmpsl
sub
lret
mov
adc
loop
jb
enter
fistpl
ret
jmp
dec
aad
xor
cmp
psrlw
lods
addl
cmp
push
mov
push
addb
xor
arpl
mov
lods
dec
jl
jbe
and
inc
ja
fstpt
or
gs
or
mov
popf
jl
aad
sti
or
sbb
es
sbbb
fwait
insb
xor
call
cltd
jl
dec
dec
jl
js
jg
add
lcall
sub
pop
adc
addr16
mov
and
loope
xorl
sbb
out
adc
xor
stos
adcb
movb
xor
push
jle
adc
stos
push
dec
ficoml
mov
mov
cli
dec
sub
xchg
sahf
cmc
neg
xor
pop
cmpb
movsl
icebp
test
lock
bound
pop
or
cmpsb
cld
ja
imul
adc
jbe
dec
mov
aam
fnstsw
add
mov
mov
outsl
nop
ja
mov
cs
jl
lret
dec
pop
mov
stos
and
movsl
sbb
leave
or
out
mov
sbb
int
fdivr
push
daa
inc
mov
shrl
daa
and
call
imul
scas
pop
pop
clc
mov
fadd
ds
lea
mov
sbb
andb
jns
sub
and
rol
mov
loopne
mov
icebp
sbb
cmp
fadd
rcrl
int3
pop
ret
push
add
lods
or
push
insb
jne
ror
and
mov
sbbl
popf
popf
movsl
in
push
dec
in
insl
ret
dec
mov
mov
les
xchg
mov
ret
mov
movsl
add
or
xchg
cwtl
fisubrl
inc
clc
lret
sub
mov
cmpsl
mov
ss
lcall
mov
pop
adc
mov
mov
jmp
jne
cmc
mov
pop
push
flds
icebp
jno
inc
jmp
mov
push
ret
pop
mov
stos
in
sub
femms
and
sub
add
into
sub
shrl
mov
mov
mov
or
cmc
sbb
ss
in
or
push
pop
lret
addb
push
cltd
mov
js
dec
or
cmp
adc
mov
idivl
test
loop
cli
inc
mov
mov
sub
pusha
lock
gs
adc
mov
sub
push
fnstsw
unpcklps
mov
mov
out
jae
xchg
popa
xor
lret
inc
cmpsl
cmpsb
loopne
shl
inc
mov
sbb
dec
push
sti
jns
shlb
in
int3
sub
shll
pusha
or
jnp
push
popf
rcrb
fisttpll
or
jecxz
subb
rcll
inc
sbb
bound
ss
push
sub
aam
dec
mov
rcl
dec
push
sahf
das
add
outsl
mov
push
cmp
xor
cmp
mov
je
sbbb
out
arpl
scas
inc
mov
jecxz
jl
push
rolb
daa
dec
xchg
and
pop
dec
stc
ja
ljmp
jae
jae
popa
movsb
push
mov
push
mov
sbb
push
jle
inc
push
jp
add
test
add
repz
mov
roll
dec
out
dec
addl
outsb
xchg
and
add
sub
jmp
js
sub
add
aaa
stos
jae
hlt
out
les
or
dec
dec
repz
sub
push
stos
fs
pop
cmovo
add
lcall
aas
pop
or
mov
lahf
or
sub
sarb
notl
pop
testb
or
cmp
jbe
jb
inc
cwtl
adc
xchg
inc
je
testb
outsl
clc
push
std
in
jp
std
jmp
push
inc
inc
jns
push
xor
push
ljmp
cmpsl
cmp
shlb
mov
jmp
jmp
push
adc
in
pop
bound
or
sahf
mov
jge
icebp
adc
add
pop
adcb
dec
jge
and
lahf
sub
sub
gs
sub
mov
pop
das
or
mov
xor
cmc
scas
movsl
or
sahf
or
adc
arpl
cld
or
sub
test
push
xchg
sbb
cwtl
sbb
mov
ljmp
mov
pop
add
mov
dec
arpl
shr
int3
pop
or
or
push
xor
mov
jbe
or
push
pusha
jae
dec
and
mov
fmul
push
mov
push
sbbl
fstpt
jbe
xor
adc
cld
xor
movsb
in
xor
pop
adc
jno
mov
add
sbb
or
in
mov
rcrl
push
pop
jne
movsl
push
fbld
fdiv
sub
and
cmc
test
clc
cltd
mov
mov
dec
popa
sbb
ja
outsb
out
pop
int
int
inc
sbb
imul
push
sbb
dec
fwait
out
mov
aas
dec
xchg
mov
int3
in
fnstenv
pop
inc
into
nop
sbb
inc
lcall
in
xchg
and
inc
mov
hlt
and
jnp
jnp
ret
jl
into
mov
push
sahf
cli
push
mov
gs
sub
imul
jae
in
lea
dec
and
call
mov
arpl
mov
adc
aaa
and
mov
mov
or
imul
dec
pop
popf
insl
add
sbb
nop
xor
add
mov
cmc
icebp
jbe
daa
mov
lret
jns
and
xor
push
xor
pop
jg
sub
popl
push
sub
jo
imul
sub
jmp
mov
pop
push
jo
cmp
xchg
ss
pushl
sarl
data16
aam
mov
push
jp
outsb
mov
cltd
imul
push
add
lcall
and
sub
lods
repz
enter
shrl
inc
dec
imul
mov
inc
pop
mov
adc
mov
xchg
pusha
xchg
cli
stos
dec
mov
cmc
dec
call
mov
jae
lea
jnp
sub
out
aaa
mov
stos
jp
and
or
mov
cmp
jno
in
int
jns
insb
dec
lods
lds
mov
fisttpll
mov
in
lahf
cmp
sub
dec
push
jnp
int
insb
in
or
jg
mov
dec
in
lret
lret
sbb
xor
sti
mov
movsb
xchg
imul
into
enter
imul
mov
jne
daa
imul
cltd
shl
iret
push
addb
mov
add
xor
dec
into
scas
cmp
pop
daa
cld
jp
adc
sbb
loop
push
pushf
ret
jle
int
cmp
mov
fcmove
adc
and
sbb
xchg
and
ret
or
ljmp
dec
or
inc
std
mov
mov
jmp
cltd
mov
sbb
cltd
repnz
dec
les
push
xchg
loope
sbb
test
loopne
mov
or
imul
es
cmp
add
shrb
loopne
cmp
inc
dec
insl
sub
jo
jno
xchg
adc
rcll
xchg
pop
xchg
rcrb
loopne
data16
lods
cld
fsubrs
ja
icebp
popa
rcl
je
lds
xor
xchg
daa
pop
jl
cmp
movsl
adc
lods
add
jmp
out
xor
inc
rorl
jae
jno
sbb
xor
xchg
pop
xchg
sub
shlb
push
jmp
mov
cltd
pop
stc
dec
out
push
mov
sub
filds
arpl
jno
out
fsubrl
ja
test
shlb
mov
sar
fidivl
push
cmp
shr
and
sbb
movsb
daa
cwtl
and
jo
pop
xchg
xor
cmp
sti
pop
jb
test
outsb
cwtl
test
fwait
inc
pop
inc
leave
std
mov
jmp
mov
push
pop
mov
pop
inc
lds
cmp
stos
jp
push
inc
jno
aad
adc
pop
push
lea
out
cmc
pop
lret
xchg
xchg
mov
cmp
xor
pop
pusha
add
jb
inc
fdivr
or
fwait
outsb
sub
dec
das
rolb
adc
insl
mov
pop
jmp
mov
mov
adc
leave
mov
xchg
sbb
iret
repnz
fdivr
and
add
xchg
sub
add
fisubrs
daa
in
mov
repz
xlat
ljmp
call
sub
lods
adc
fnstcw
in
mov
xor
add
add
sbb
pop
lods
in
aas
cltd
adc
inc
jno
and
int
addb
andb
aam
add
nop
mov
xchg
pushf
add
mov
aas
push
cs
sub
scas
in
sbb
sar
jb
cmp
fdiv
std
fcomps
sub
mov
pop
xchg
in
xlat
stos
imul
pop
sub
clc
fdivl
sbb
pop
shlb
lds
ret
or
push
aam
lods
test
pop
lcall
loop
sub
push
cli
aam
cwtl
mov
in
outsb
testb
xor
test
push
sub
add
es
rcl
jmp
sub
add
mov
dec
addb
movsb
imul
repz
fistl
lret
ror
mov
adc
int
or
inc
sbb
push
rcrb
mov
addr16
mov
nop
inc
push
jecxz
repz
cmp
cld
in
xchg
cmp
leave
or
sbb
cmpl
cmp
popf
inc
loop
cltd
dec
outsl
jae
adc
cwtl
mov
pop
inc
out
pop
lret
lea
fs
fwait
push
lock
dec
mov
ret
xchg
pusha
add
sbb
inc
mov
arpl
push
decl
dec
or
jae
sbb
push
adc
xchg
xor
sbb
insl
and
pop
and
push
aas
sbb
sub
xor
and
popa
push
xor
xor
add
pusha
andl
ss
lock
or
mov
xorl
outsl
int3
gs
dec
xchg
stos
mov
pop
jmp
dec
push
jne
int3
add
xor
jg
test
aaa
fidivrs
pop
js
popa
shll
rclb
js
lcall
mov
jecxz
push
ffree
jg
in
jns
fstpt
sub
pop
lock
ss
inc
cmp
pop
jecxz
mov
jp
jg
and
push
sbb
push
xor
mov
jecxz
adc
sub
sbb
add
mov
sbb
mov
cli
push
mov
mov
ret
add
pop
iret
push
fdivrl
imul
stos
hlt
inc
jp
movsl
or
pop
pop
inc
sbb
xchg
fldpi
push
bound
cmp
imul
pop
cmp
pop
subl
or
stc
cmp
fstp
je
mov
iret
pop
mov
inc
in
adc
dec
and
rcl
mov
jno
fmull
in
das
sub
repnz
xlat
mov
sti
push
adc
fwait
xor
in
rcll
loopne
cmpsb
xchg
jns
mov
test
test
lret
aas
loopne
je
stos
rcrl
push
push
daa
lds
cmp
fdivr
or
or
add
out
and
inc
mov
fistpl
lods
cli
repnz
clc
xchg
push
jb
mov
rorl
mov
cld
fs
push
cmp
xor
xor
aaa
push
inc
mov
notl
pcmpeqd
arpl
in
pushl
and
cli
mov
insl
inc
mov
cmp
cli
and
jo
les
in
out
or
cld
jnp
mov
inc
jmp
jo
mov
mov
sahf
inc
mov
push
inc
dec
inc
shlb
inc
inc
out
mov
movsb
jne
jne
cwtl
inc
lods
mov
out
stc
das
jo
pop
dec
jle
sbb
aas
pop
mov
inc
pop
fstps
stos
bound
rcr
xchg
mov
adc
dec
jbe
outsb
aad
pusha
dec
fistpl
ja
iret
lcall
push
xchg
dec
push
or
adc
iret
pop
int3
lock
scas
shll
cltd
lahf
popa
sbb
cmpl
insl
loop
imul
dec
fsubrs
cmpsb
pop
or
fstl
popf
into
das
dec
mov
stos
jbe
cmp
aad
jmp
push
lods
adc
push
rcrl
push
lret
mov
sub
jbe
sti
stos
jae
hlt
push
jmp
mov
repz
cmpsb
pop
jb
sub
movntq
inc
aam
ljmp
adc
jecxz
adc
push
mov
xchg
stos
push
inc
sub
dec
cmpsb
xchg
leave
into
daa
js
pop
and
dec
jmp
push
movsb
lahf
lods
fucomip
pushl
lods
push
sarb
and
sahf
mov
and
out
inc
sub
pop
mov
out
xor
lock
jp
enter
dec
sbb
daa
pop
cli
sub
sbb
inc
scas
fwait
xchg
insb
je
xor
push
add
test
adc
jp
mov
hlt
lods
aam
push
xor
cmp
pop
imul
mov
add
daa
lahf
enter
inc
jl
stos
and
mov
and
xchg
popl
lods
loope
lret
imul
add
dec
push
jp
mov
icebp
jg
dec
inc
pop
add
or
mov
jnp
adc
mov
shll
movsb
xor
mov
jne
mov
imul
pop
jne
add
insl
ds
enter
or
add
fisubrl
stos
add
sub
clc
out
flds
cs
cmp
sarb
pop
mov
ret
xor
aam
mov
cmp
loop
stos
add
fdivrp
mulb
sbb
mov
adc
fs
sub
or
clc
insb
test
jecxz
popf
scas
ja
std
cli
add
cmpsl
call
ljmp
jge
or
dec
dec
out
fcomi
adc
push
into
leave
jns
push
in
scas
sbb
xchg
mov
lea
stc
xlat
mov
orb
xchg
movsb
imul
push
add
daa
lods
pop
fcompl
and
cmp
mov
aaa
sti
cmp
andl
insb
es
sarb
jb
enter
mov
sar
mov
cmc
sub
jl
nop
inc
loope
add
push
xor
xor
outsb
add
jmp
pop
or
test
outsb
arpl
daa
sub
sbb
or
movsl
popf
cmp
mov
loopne
xor
add
sbb
leave
push
xor
fcompl
outsb
ss
fs
or
sti
lods
into
adc
ret
inc
pop
loop
pop
push
dec
mov
icebp
and
lahf
push
mov
rep
test
add
fldl
mov
jo
les
mov
fcompl
cmpsb
cs
insl
add
cli
dec
jle
movsl
push
jmp
ss
dec
jbe
outsl
andw
into
xor
loop
lods
aam
int3
ljmp
outsb
jp
xchg
and
and
hlt
pop
shl
movl
adc
or
fistl
pop
xor
mov
out
mov
dec
pop
arpl
sahf
push
mov
jb
and
mov
cmp
mov
mov
inc
sbb
clc
mov
imull
in
or
jecxz
jbe
sbb
sub
stos
mov
sahf
jnp
inc
and
jns
repnz
repnz
cmc
cs
cmp
ficoml
lcall
mov
xchg
sub
inc
sti
fisubs
int
mov
pop
push
movsl
scas
mov
ficoms
and
push
dec
jo
push
out
jae
cmp
xchg
inc
xor
icebp
mov
sbb
xor
mov
or
cmpsl
call
dec
in
pop
pop
popf
jle
ss
dec
push
pop
add
lret
push
subl
adc
jmp
or
rcr
sbb
lds
pop
mov
pop
fwait
sub
push
and
loope
cmp
mov
rcrl
and
stos
xchg
xchg
out
shlb
mov
mov
push
fldl
insl
frstor
dec
leave
mov
add
adc
mov
test
addl
mov
stc
mov
mov
jbe
push
sub
pop
cmp
sbb
les
add
dec
and
mov
sbb
stos
xor
js
mov
xchg
fisubrs
pop
adc
popf
fisttpll
imul
inc
stos
adc
add
int3
xor
mov
push
push
sbb
sbb
in
ret
cs
popf
cmp
xor
adc
push
inc
iret
addr16
lock
push
rorl
mov
fwait
scas
lahf
inc
ss
push
hlt
add
mov
out
loop
xor
fsubrs
cld
fists
inc
mov
adc
jp
cltd
outsl
xor
iret
rcrb
inc
inc
cs
mov
neg
xor
mov
mov
cmp
or
je
cmp
repz
pusha
sarl
fadd
dec
test
test
lret
and
mulb
jp
rcrb
xor
daa
gs
pop
xor
xor
fnstcw
pop
and
shrl
or
sbb
adc
outsb
scas
or
adc
leave
sti
aad
cwtl
stos
jle
outsb
xor
addr16
xchg
popa
shrb
cltd
jmp
mov
sahf
pusha
push
sbb
clc
mull
fcomps
test
mov
mov
pop
mov
dec
cld
mov
prefetch
addl
ljmp
or
pop
xchg
dec
addl
mulb
add
pop
test
jecxz
or
xor
push
dec
xchg
rcll
sub
inc
ds
sub
out
xchg
cmp
cmpsl
pop
sbb
sub
out
xchg
shlb
mov
jp
jbe
cmp
mov
out
idiv
gs
and
lahf
pusha
sub
lret
mov
inc
mov
cwtl
mov
imul
shlb
std
or
scas
mov
sbb
mov
arpl
jo
pop
imul
test
punpcklbw
or
mov
in
push
lods
in
push
fisubl
das
xchg
or
fiaddl
mov
mov
aam
test
and
scas
dec
or
inc
lods
push
out
dec
dec
outsl
mov
and
xlat
es
rolb
iret
mov
and
jne
inc
loop
push
jmp
rolb
cmp
pop
out
dec
aad
pusha
lods
mov
push
pushf
xchg
leave
dec
test
fistpl
ss
cmp
push
jmp
sub
popf
stc
push
aaa
enter
or
sub
adcl
or
cwtl
popa
cmp
cmp
outsl
and
aad
stos
and
pmullw
aam
adc
cmp
test
jbe
scas
mov
sub
fsubl
cmpsb
xchg
fisubrl
stos
es
cmc
inc
add
fisttpll
jmp
testb
inc
imul
mov
lcall
xor
test
es
mov
pop
sbb
test
add
dec
cltd
paddb
aaa
sbb
xor
mov
adc
and
cwtl
adc
fisubrl
mov
dec
pop
lds
gs
popa
int3
add
pop
mov
aad
pop
lods
jg
sub
test
lods
mov
hlt
cmc
arpl
push
mov
lret
add
dec
das
pop
adc
dec
lret
pop
adc
xchg
push
xchg
cli
and
inc
mov
cmp
mov
dec
addl
shll
cmp
or
mov
or
ss
das
popa
repz
jge
dec
cmc
jp
fs
or
das
or
xor
dec
push
inc
dec
shl
mov
sbb
xchg
lret
mov
jg
mov
push
push
iret
fists
decb
mov
xor
fwait
mov
fisubs
push
dec
xchg
dec
sbb
xorb
es
ret
rorb
push
inc
lea
mov
iret
loope
xor
call
mov
mov
test
mov
fs
mov
mov
test
mov
lahf
push
fldt
imul
popf
icebp
in
mov
and
sub
inc
mov
ljmp
mov
cld
in
out
imul
or
sub
gs
cmp
mov
adcl
push
and
test
jmp
mov
in
lcall
jns
nop
mov
xor
sub
stos
aad
call
rorb
mov
jg
testb
pop
mov
jo
popf
mov
jg
test
jbe
aam
mov
dec
xor
or
outsl
add
cmp
ss
sub
lods
pop
cmp
iret
ficompl
sarl
jnp
hlt
fdivs
lret
push
shrl
push
mov
dec
bnd
ret
std
xchg
cmp
cltd
aas
add
aad
or
ret
das
sbb
movsl
inc
stc
pop
rorl
pop
and
fildll
mov
pop
sbb
sub
add
neg
cmp
push
jmp
out
push
xlat
and
lret
xlat
std
sub
es
sbb
jb
xchg
pop
inc
add
dec
subb
xchg
xor
cmp
out
jb
inc
std
js
inc
push
aam
sbb
or
jg
in
bound
push
cmp
gs
mov
sti
xor
pop
ret
dec
js
roll
fmull
xor
jmp
inc
pop
dec
aaa
loopne
jge
int3
push
sar
fsubs
cwtl
pop
cmp
jne
roll
aad
dec
int
cwtl
enter
ljmp
push
les
push
test
dec
aam
out
dec
sbbb
adc
jg
repz
out
aad
ss
addb
pop
push
xor
mov
dec
cmpsl
fcompl
movsl
jnp
add
divl
ds
sbb
xchg
in
push
push
pop
push
adc
mov
mulb
in
jno
scas
subb
xor
adc
push
pop
jnp
insl
nop
adc
shll
mull
clc
sbbb
xchg
xor
mov
dec
hlt
clc
leave
add
addb
jmp
pop
mov
or
mov
pop
inc
loop
cmp
cmp
xchg
in
jmp
or
imul
xchg
into
hlt
lods
stos
fcomps
mov
nop
fistpll
xchg
add
adc
dec
mov
pop
inc
pop
pop
adc
jg
ljmp
daa
adc
add
push
cmpsb
mov
jns
mov
enter
jge
adc
sarl
pop
xor
cmp
sub
jno
jg
dec
in
ficoms
xchg
add
or
fisubrl
mov
and
or
mov
cmpsb
scas
ret
ljmp
xchg
dec
ret
mov
sbb
call
gs
mov
jnp
cli
das
jecxz
or
xlat
cmpb
sub
add
ficoml
xor
pushf
sub
or
leave
cmpb
xor
cmpsb
mov
lret
jecxz
clc
jmp
rol
insb
jle
and
mov
jg
mov
sbb
dec
add
xor
stos
lea
pop
pop
outsb
mov
ret
pushf
xchg
mov
js
cmp
or
cld
push
movsl
sub
xor
aam
scas
es
adc
jne
xor
pop
inc
xchg
dec
fs
cmovo
cmpsl
mov
sbb
mov
ret
nop
inc
aad
cmp
push
push
jno
scas
xchg
inc
mov
movsb
repnz
imul
cmp
push
jno
xchg
loopne
adc
sub
movsb
and
lods
dec
push
jl
subl
outsb
push
inc
sub
cmp
ror
push
scas
aad
jns
es
cmp
mov
jg
loope
pop
nop
jecxz
xor
or
adc
or
test
mov
sbb
je
sub
into
push
and
jbe
repnz
mov
sarl
dec
or
xchg
push
mov
mov
and
mov
dec
add
push
sub
jno
inc
mov
lods
or
loop
mov
sbb
leave
test
imul
sbb
loopne
in
adc
cs
repz
imul
add
test
pop
mov
sbb
jle
adc
js
pop
repz
pop
push
or
int3
pop
mov
iret
enter
enter
sub
movsl
mov
rcrb
dec
add
imul
popf
cmp
call
adc
sbb
xorb
aam
xchg
pop
cs
dec
pop
sbb
sub
sahf
popa
mov
lahf
jle
stos
popf
sub
orb
insl
jb
sub
ret
cmp
stc
das
outsl
dec
push
pop
add
adc
mov
test
push
mov
mov
mov
push
fwait
test
filds
dec
mov
stos
out
daa
outsb
dec
push
aaa
mov
inc
xor
jb
jmp
jnp
shlb
loopne
loop
adc
xchg
popf
mov
adc
jnp
mov
loop
mov
stc
cmp
pop
pop
dec
push
mov
movsl
sbb
imul
insl
lea
cld
cmp
inc
mov
in
cwtl
pop
lret
mov
inc
popa
loop
add
cld
inc
xor
pop
mov
popa
in
add
jp
addr16
into
fwait
cmp
repnz
into
cmp
xor
xchg
pop
jl
lret
rorb
rorl
in
push
mov
xchg
jg
icebp
or
jmp
jecxz
mov
mov
mov
jae
scas
pop
pop
adc
mov
stc
xchg
incl
or
lret
fs
mov
sbb
or
xor
ljmp
fwait
into
push
leave
fwait
pop
aas
cmp
adc
inc
out
sti
xor
in
lea
and
jo
mov
adc
push
sbb
pop
sbb
adc
jno
fwait
outsb
mov
dec
cmp
out
lret
lods
mov
leave
mov
lods
jne
pop
addr16
in
arpl
jge
lods
dec
sub
rol
fwait
into
cwtl
mov
mov
add
xchg
add
lcall
mov
mov
pop
sub
sub
outsl
mov
cmp
addr16
ljmp
imul
and
xchg
nop
dec
mov
bound
sbb
aam
and
sbb
or
insl
xchg
xor
xor
adc
daa
out
cltd
stc
in
andl
push
fsubrl
fbld
in
inc
cs
adc
paddusw
mov
faddl
into
and
mov
cmc
clc
fbstp
xchg
jne
jmp
cmp
sub
loop
cmp
test
rorl
jae
addr16
xor
in
movl
mov
dec
or
sub
mov
int
jg
inc
sub
or
inc
or
mov
xor
sbb
mov
mov
ret
pusha
fisubrs
mov
add
out
lcall
pop
pop
push
out
aad
pop
cli
out
lret
fwait
cld
cmpsl
loop
push
add
jmp
sub
dec
adc
loopne
shll
inc
ret
enter
dec
mov
cwtd
cmp
jg
cltd
lds
dec
jge
pop
jae
add
push
fimuls
inc
sbb
cmpsl
incb
ror
out
mov
pop
dec
dec
jecxz
mov
pop
idivl
into
mov
fldpi
popa
repnz
cli
cmp
nopl
setbe
sub
mov
cmp
mov
cltd
inc
mov
pop
f2xm1
or
aam
xchg
jno
fimull
popa
sbb
dec
out
mov
push
mov
mov
mov
outsb
gs
out
push
sbb
ss
sbb
insl
sub
aad
dec
leave
sbb
stc
decl
mov
push
fisubrs
sub
jns
dec
aas
add
lods
test
neg
cmp
sahf
add
adcb
jecxz
ss
or
std
jbe
push
fnstenv
arpl
xor
cmp
insl
dec
rcrb
push
lock
mov
jb
pop
out
repnz
clc
cmp
dec
data16
test
pop
pop
hlt
mov
push
insl
movsl
aaa
fisttpll
es
bound
xor
sti
xor
or
lret
xor
add
xchg
lahf
dec
jo
mov
icebp
adc
and
fsubs
xor
mov
adc
imul
sub
scas
fwait
js
cwtl
jnp
adc
inc
cmp
or
test
bound
jns
aaa
es
mov
adc
push
fnstenv
sbb
stos
jnp
in
das
jle
movsb
pushw
pmulhw
fbstp
dec
sub
enter
add
and
jnp
rcrl
xor
rcll
fwait
daa
aad
popa
scas
outsb
sbb
xchg
rorl
test
cli
test
fs
lock
lcall
pushf
shrb
pop
sub
pop
inc
es
push
enter
mov
in
cmp
jns
std
adc
ret
stc
mov
pop
dec
push
movsl
xor
or
inc
jb
mov
fsubs
aad
pop
pop
xorl
rorl
jge
fwait
pop
adc
mov
push
or
jl
cmp
notl
dec
repz
xchg
nop
mov
jns
pop
mov
std
pop
xor
push
mov
xchg
fsts
sahf
jp
pop
inc
push
imul
icebp
sahf
push
or
hlt
cmp
in
dec
jg
mov
test
cli
aam
jne
sub
sbb
jge
xor
jmp
popa
or
hlt
pop
aam
push
mov
jmp
sbb
pop
sarb
aam
sahf
cmpsl
mov
jbe
cmp
pop
pop
ja
popf
push
push
fidivrl
sbb
js
adc
push
mov
icebp
pop
ss
push
lea
push
mov
ret
sahf
and
cmp
mov
repnz
ficoml
cwtl
mov
xchg
jbe
xor
inc
fdivrs
adc
ss
mov
ljmp
push
sti
pop
sbbl
or
fstpt
lds
sbb
add
and
pop
in
push
xorb
and
pop
xor
mov
pop
or
in
enter
sarb
dec
insb
pusha
aam
loopne
hlt
inc
test
insl
push
testl
sub
ss
jg
mov
out
cmpsl
mov
hlt
add
loope
or
test
shr
lret
ja
mov
or
jbe
outsl
cli
sub
seto
call
dec
mov
sub
dec
or
jp
add
setb
in
mov
mov
dec
mov
push
jl
loop
cmp
stc
data16
inc
sub
inc
aas
cmp
out
mov
out
cwtl
insb
mov
xchg
mov
jno
push
call
pop
inc
mov
stos
inc
xchg
stc
pmovmskb
loop
inc
lods
mov
das
mov
imul
xlat
fwait
stos
jecxz
loopne
call
xor
mov
pop
ljmp
xchg
aaa
aam
mov
push
and
dec
sub
sti
in
push
mov
jle
in
enter
jno
loop
fbld
out
js
fbstp
aas
lcall
mov
adc
pop
rcrb
out
cmp
rclb
imul
imul
insb
inc
mov
not
mov
cmpl
dec
repnz
sub
inc
push
lods
sti
mov
or
test
push
int
stos
les
in
dec
push
out
mov
jmp
cmp
enter
jb
shrb
fnstenv
dec
adc
push
sbb
scas
addr16
ret
iret
inc
inc
orb
xchg
pop
shl
cmp
add
popf
popf
push
fcmovne
inc
call
and
data16
jl
jne
mulb
les
fadds
bound
pop
mov
push
je
add
mov
adc
lds
jl
lret
mov
mov
inc
test
adc
jg
fdivp
push
fdivrl
push
jo
lcall
jp
stc
adc
xchg
rcrb
testl
aam
data16
pop
cmp
mov
lret
xlat
test
and
in
test
pusha
add
mov
daa
and
and
mov
mov
mov
mov
add
mov
xchg
pop
insl
fbld
sub
xor
xor
into
mov
cltd
and
jle
test
sahf
rcrl
add
lcall
xor
imulb
mov
in
pop
mov
lds
xlat
dec
sub
in
aaa
test
pop
cmpsl
or
cmp
rorl
add
ja
sub
repnz
jl
cmc
scas
ds
jp
mov
and
rcrb
mov
movsb
jno
jecxz
dec
xchg
rcrl
xchg
dec
sbb
fwait
fwait
das
xchg
adc
aad
xchg
jae
cmp
xchg
lret
cmp
cmc
push
in
push
addr16
push
lods
lds
addr16
or
adc
out
adc
loope
out
xchg
cmp
fs
xchg
jae
into
fnstcw
setp
cld
adc
jae
sbb
add
ja
dec
dec
xlat
jne
adc
imull
mov
leave
cmpsb
push
dec
sub
xchg
cmp
push
add
test
mov
mov
sub
jecxz
roll
mov
fistpll
jnp
stos
lcall
mov
roll
xchg
sbb
inc
mov
sbb
ror
add
inc
or
dec
rclb
mov
dec
stos
and
inc
dec
pop
cmpsl
push
mov
jg
imull
sbb
add
enter
fcoml
ja
xor
pop
fcompl
pop
sbb
pop
mov
mov
xor
sub
lcall
lods
cmp
ja
sbb
and
rcrl
inc
in
cmp
sub
add
imul
ficoml
mov
mov
adc
pushf
mov
push
cmp
fisttps
out
or
and
hlt
ds
fsts
imul
and
pop
outsb
movsl
cmp
sahf
cli
sbb
jnp
lret
in
mov
mov
adc
sbb
mov
fwait
push
dec
jl
test
cmpsb
cmc
repnz
nop
jecxz
jmp
es
mov
mov
lds
adc
lret
nop
lcall
cmp
in
imul
push
xor
xor
stos
pop
loopne
xchg
adc
rolb
sub
into
ret
jl
xor
es
jne
in
xchg
mov
inc
jbe
push
roll
lea
inc
inc
fbld
out
push
mov
outsb
orl
push
lret
xlat
rclb
imul
ds
and
mov
and
int
cmpl
push
test
idivl
ret
les
sbb
dec
sbb
jp
lods
or
int
cmc
inc
icebp
pusha
xchg
hlt
xchg
sub
push
jecxz
xchg
sahf
cbtw
add
nop
cmp
sbb
mov
sbb
lds
mov
cltd
jecxz
and
mov
or
pop
ret
dec
pop
xor
fistps
and
arpl
ljmp
imul
daa
push
ds
ss
leave
shll
js
inc
fstl
cmpsl
sar
and
fnsave
xchg
fcmovu
call
je
cmp
cmp
add
adc
int
in
mov
jg
sub
push
mov
pop
add
jecxz
rol
dec
aas
sbb
add
push
push
imul
adc
xor
out
jnp
loopne
adc
lcall
popa
and
and
push
sbb
stc
insb
daa
add
inc
psadbw
jns
push
add
sub
mov
cmpsl
sti
stos
cmp
push
cmpsl
or
idivb
add
enter
or
or
leave
cmp
xchg
mov
sbb
divl
scas
cmc
mov
add
mov
ds
push
sbb
jg
sub
add
aas
jae
enter
std
out
mov
mov
jns
fbld
movsl
inc
rorl
cmp
inc
mov
mov
sub
movaps
cmpsl
xchg
jge
cmp
popa
mov
or
ds
jb
mov
out
mov
inc
rolb
cmp
nop
js
enter
iret
sti
cli
or
jno
push
insb
in
push
cmpsl
sbb
into
mov
cmpsl
addr16
pop
sbb
ret
shlb
aas
mov
mov
fsubr
movmskps
mov
pop
pop
dec
push
cli
cltd
dec
jecxz
xor
lcall
jmp
add
xchg
pop
xchg
sub
sti
aad
stc
lods
out
test
lock
nop
clc
and
cli
in
or
sub
test
sbb
jns
mov
mov
jns
filds
icebp
aas
outsb
cmp
mov
loopne
or
push
loope
ljmp
xchg
loope
cmp
add
add
inc
mov
popf
lcall
add
scas
ljmp
xor
cmp
scas
std
adc
repnz
jns
aam
dec
push
xchg
insb
cmp
cwtd
mov
sbb
imul
pusha
shlb
xchg
xor
cmp
into
inc
jb
xchg
jg
je
pushf
xlat
xor
add
call
add
mov
mov
xor
les
sub
sti
lock
xor
fcom
into
jmp
mov
and
jb
push
repnz
adc
mov
adc
out
pop
dec
add
push
addl
mov
push
addr16
bound
aad
mov
insl
sub
mov
add
mov
and
stc
or
mov
mov
mov
mov
repnz
nop
incl
and
and
sbb
stos
sub
lds
ja
xchg
sub
popf
or
jbe
hlt
add
mov
fsubrs
cltd
inc
iret
lret
fs
mov
xchg
fstpt
les
inc
jne
xorb
test
enter
sub
lods
jl
push
and
aam
ret
mov
xchg
cwtl
fs
adc
stos
add
and
int3
add
aas
mov
testb
jp
cmp
mov
fs
bound
pushf
test
cld
pop
xchg
mov
aad
inc
or
stos
outsl
pop
popf
jns
in
les
adc
iret
call
push
mov
out
and
lods
outsl
inc
mov
jge
and
push
jge
icebp
sbb
jle
cmpsl
hlt
xchg
daa
lret
lahf
in
fwait
cmp
mov
outsl
jne
movsb
imul
cli
sbb
mov
pushf
lret
push
fidivs
dec
aam
pop
inc
mov
fsubl
add
pop
test
pop
dec
xchg
inc
aas
sbb
jle
cwtl
inc
insl
pop
dec
jae
jg
repnz
aad
xor
jne
out
out
movsl
fidivs
pop
loopne
mov
ljmp
jge
mov
dec
and
inc
and
dec
xchg
pop
iret
mov
dec
jb
jb
jl
scas
mov
bound
outsl
push
jp
daa
rol
loope
mov
stc
xchg
cmp
sar
mov
jns
jle
push
or
iret
adc
repnz
jae
dec
cmp
rclb
and
loop
lea
out
mov
mov
jmp
daa
fcoml
adc
bound
sbbb
nop
bt
outsl
jg
ficomps
jnp
mov
cmp
aas
sbb
pop
lret
or
cwtl
std
cmp
movl
sub
sub
repnz
lds
mov
sbb
addl
adc
adc
mov
mov
mov
cmp
add
scas
mov
push
in
punpckldq
fisubs
or
and
das
sarb
mov
vpaddsb
mov
mov
cmp
mov
out
pushf
jae
rcrl
sub
add
outsl
enter
xor
out
cwtl
outsb
xor
popf
jg
into
jbe
jl
ljmp
pop
inc
adc
xchg
mov
test
dec
nop
push
jne
jo
cmpsb
mov
cmpsl
aad
mov
sti
nop
imul
sbb
mov
sahf
imul
mov
and
test
add
addr16
inc
adcb
mov
rcl
cld
je
cltd
dec
inc
out
hlt
push
cmc
cmp
ss
jne
jg
rcr
push
lret
jp
mov
je
clc
stos
andb
add
repnz
sbb
jecxz
aaa
xor
mov
add
ljmp
cmp
sbb
jge
int
jp
pop
aas
xor
or
mov
rcl
push
jecxz
mov
mov
or
mov
repz
jl
mov
xchg
icebp
iret
lret
pushl
cmp
or
cmp
out
fisttpl
push
imul
sub
adc
shlb
out
lock
ss
jle
in
mov
outsl
or
mov
aam
jmp
sub
call
cli
adc
mov
int
jmp
cmpsb
mov
movsb
out
push
sahf
push
shll
mov
out
adc
test
mov
lea
inc
mov
aaa
sub
and
imulb
pop
stos
js
xchg
xor
popf
add
rorb
xchg
aam
xchg
aad
push
cmp
or
and
mov
lea
mov
or
cs
aaa
into
and
rclb
mov
rcr
outsb
iret
mov
xchg
dec
es
cs
mov
inc
cltd
lods
inc
popf
mov
jmp
cmp
sub
ss
jb
aaa
sub
mov
ss
mov
jbe
mov
or
pop
lock
sbb
loop
and
cmp
dec
ss
jb
pop
je
test
dec
loopne
test
push
add
in
daa
mov
mov
push
and
outsl
jmp
pusha
xlat
add
test
out
push
rol
mov
lds
imul
pop
rol
add
je
dec
ds
je
and
shr
in
cmpsl
inc
adc
sbb
jmp
add
fmuls
sub
nop
dec
loopne
leave
nop
mov
push
je
mov
jo
mov
mov
pop
push
out
cltd
pushf
imul
cs
mov
pop
sub
inc
push
fldcw
push
inc
mov
mov
in
popf
jb
mov
test
sub
add
sbb
dec
add
test
rorl
sbb
imul
cwtl
cmp
sti
in
cld
fld1
out
popf
xchg
fdivs
mov
push
rorb
xchg
xchg
in
fwait
jl
cmp
cmp
add
sub
dec
testl
test
adc
pop
inc
sub
pop
push
into
pop
ds
pop
iret
in
adc
xlat
inc
shrb
sbb
je
xorl
sub
cmp
pop
out
push
cmp
jl
popf
sahf
push
scas
js
mov
clc
popa
arpl
inc
xor
cmp
es
inc
negl
and
ss
xchg
fcoml
xorl
xchg
aaa
lods
lahf
sub
shrb
iret
mov
jp
jne
xchg
fwait
lds
xor
loope
std
xorb
inc
dec
jae
add
cld
aaa
and
stos
hlt
adc
jmp
aad
fcomps
mov
pop
aam
pop
jecxz
test
mov
inc
add
lret
dec
sbb
or
or
or
pmulhw
enter
mov
jl
dec
int3
pop
rol
std
stos
fistpll
out
push
xor
repnz
jns
push
or
or
pop
ljmp
mov
xchg
and
dec
adc
fstpl
and
or
adc
xorl
inc
jbe
mov
mov
sub
ret
lods
loopne
pop
lea
mov
or
xlat
mov
inc
mov
sub
xchg
fdivp
cmpsl
shlb
fidivl
sbb
out
push
fidivs
cltd
pop
iret
mov
xor
repz
cld
push
sub
adc
mov
addr16
iret
jns
push
test
mulb
call
push
lret
sbb
ja
aam
ljmp
adc
cld
jl
mov
add
pop
fistpl
stc
jle
jns
inc
mov
pop
shlb
mov
cwtl
ljmp
fcmovne
js
add
je
jo
add
dec
inc
roll
adc
jg
pop
fisubs
xorl
push
lahf
add
into
fisubs
cmp
out
and
jns
xchg
dec
cwtl
pop
insb
mov
mov
stos
sub
mov
stos
movsb
lods
mov
in
inc
sbb
sbb
in
lods
std
mov
adc
loopne
imul
pop
jp
mov
jnp
lods
cmpsl
sbb
aaa
or
cmp
mov
pop
push
shll
mov
dec
xlat
jge
sbb
pop
out
add
sahf
data16
in
and
inc
fstl
push
jnp
mov
mov
jne
xchg
stos
xor
cmp
cwtl
div
fildl
mov
nop
adc
popa
inc
test
insl
cmpsl
das
add
mov
mov
fdivl
pop
aaa
mov
inc
mov
in
adc
inc
jg
cmpsb
fwait
or
cmpsl
popf
inc
xchg
lds
sbb
adc
mov
test
xchg
test
lea
pop
mov
rsqrtps
or
cmp
inc
inc
arpl
xchg
jp
xchg
jmp
xor
lea
sub
push
cmp
iret
sub
pop
cwtl
daa
fsubp
inc
stos
ficoms
inc
sbb
fmull
iret
jg
pop
cmp
cli
aam
out
js
in
je
stos
pusha
jo
sub
sbb
data16
cld
bound
adc
and
pushf
pmulhuw
mov
or
pop
push
push
in
icebp
xchg
into
jnp
stc
mov
in
xchg
jbe
push
sahf
jae
push
sub
in
sbb
jae
enter
inc
inc
jno
sub
sarl
pop
mov
imul
sbb
pop
jmp
and
test
inc
add
cmpsb
jl
popl
sbb
mov
mov
adc
je
inc
jne
dec
cmp
xor
lahf
test
cwtl
mov
mov
out
fnsave
test
xchg
jmp
inc
cwtl
mov
outsl
andl
js
jecxz
orl
rolb
lahf
mov
leave
mov
xchg
xchg
popf
lock
inc
and
enter
cmp
dec
xchg
cmp
jne
xchg
enter
mov
es
mov
or
push
push
mov
jle
lds
dec
inc
idivb
data16
mov
mov
and
xchg
fsts
sub
mov
cs
pop
xor
push
cmp
lret
pop
call
sahf
lods
or
and
xchg
pop
repz
lahf
sub
fdivp
or
mov
ret
sbb
sbb
sub
daa
cmp
fisubl
sbb
mov
pop
inc
add
clc
in
jae
pop
jno
clc
fcmove
pop
clc
mov
mov
stos
ljmp
add
lds
mov
pop
imul
lahf
push
sahf
jg
mov
test
incl
xchg
fsub
outsb
sub
push
xchg
dec
cltd
jbe
push
xor
jb
seta
xlat
sub
sbb
pop
arpl
lret
fnstcw
insb
in
mov
scas
es
mov
push
cmp
or
pop
mov
imull
push
inc
xchg
mov
sub
fnsave
pop
xchg
adc
cld
popf
stos
pop
push
jns
dec
addl
sub
push
ret
pop
repz
jb
jne
mov
mov
sub
xchg
lods
jae
xor
xchg
shll
jl
add
or
shrl
not
and
jb
pop
mov
out
inc
or
sbb
cmp
jp
xor
enter
mov
mov
inc
mov
orb
pop
stos
jo
ds
repnz
fcomps
sbb
cltd
push
maskmovq
notl
sbb
mov
int
test
shll
aam
dec
pop
iret
and
hlt
dec
and
inc
imul
pusha
mov
xor
dec
add
out
jo
adc
into
orb
stos
cld
pop
outsl
or
xlat
inc
out
pop
jecxz
es
push
scas
fldcw
jecxz
fsubrs
adcl
cmp
add
sbb
test
lret
ja
out
bound
in
adc
xorl
cltd
mov
call
sarb
pop
mov
aaa
fs
loopne
in
or
cli
push
out
mov
mov
aas
xor
jns
inc
or
cltd
aas
je
or
add
sub
std
push
lcall
xor
scas
arpl
mov
int3
cmp
pushf
xchg
int
popf
sbbl
and
mov
shld
dec
mov
mov
gs
int
mov
sti
movsb
shll
out
repnz
jo
pusha
adc
push
iret
popf
sbb
cmpsl
ss
cmc
cwtl
adc
in
pop
xor
push
xor
lea
enter
mov
out
pop
cmp
out
sbb
mov
fwait
xchg
nop
mov
jne
jecxz
pop
push
jl
push
pop
fs
call
lcall
add
imulb
popf
popa
lret
push
mov
fcmovnbe
xor
sahf
mov
add
aad
call
and
push
int
dec
lock
jno
xor
mov
incl
cwtl
icebp
pop
sbb
adc
movsb
push
jns
aam
xor
mov
daa
fists
cmp
inc
xchg
xchg
and
mov
add
jno
mov
loope
rcrl
nop
push
pop
mov
inc
sahf
mov
dec
jmp
stos
nop
negl
das
popf
cmp
int
mov
inc
mov
pop
pop
test
cwtl
stc
fcmovb
jge
mov
out
sbb
addr16
bound
pop
push
mov
push
add
mov
lock
movsb
jge
and
fistpll
out
add
xlat
jns
mov
jmp
mov
mov
adcb
iretw
daa
mov
out
pusha
loope
mul
and
xor
pusha
pop
add
sub
lods
xchg
in
push
dec
jno,pn
mov
mov
in
sub
or
push
sub
sub
adc
fisttpl
xchg
push
fwait
mov
sti
jp
cli
shrb
scas
mov
mov
add
jle
cmpsb
xchg
adc
shl
and
or
testl
xchg
adc
inc
int
and
pop
pusha
pop
les
aad
enter
ret
pusha
sbb
outsb
push
pop
repz
dec
inc
jbe
mov
insl
orl
cmpsl
imul
pop
outsl
inc
fmull
addr16
outsb
mov
cmp
and
pop
sbb
mov
stos
cmpsb
imul
add
dec
hlt
jne
sbb
mov
xor
and
divl
jnp
mov
and
sub
ror
shr
and
inc
bound
in
cld
sarb
cmc
mov
dec
mov
imul
jl
mov
sahf
clc
fdiv
sub
pop
rolb
ret
stos
arpl
xchg
and
das
push
fwait
mov
inc
pop
jge
inc
dec
popf
fwait
out
mov
sub
aas
pushf
or
inc
aam
mov
sub
xchg
pop
adc
pop
cmpsb
sarl
push
add
adc
shll
sub
jns
insl
pop
push
jns
lea
cmp
imul
mov
pop
andb
outsb
sbb
cmp
in
lods
repnz
movsb
mov
mov
mov
push
pop
ret
les
or
xchg
sbb
sbb
sbb
hlt
and
cmp
push
inc
inc
pop
repz
jbe
shll
mov
in
cmpsb
std
clc
cmp
push
push
in
sbb
std
inc
movsl
inc
cmc
mov
push
mov
cmp
aam
fwait
nop
xchg
mov
stos
test
in
jecxz
mov
test
mov
jae
rolb
outsb
sbb
mov
inc
jecxz
mov
xchg
jmp
cmp
in
push
jb
cmpsl
jne
xchg
xor
mov
sbb
sbb
outsl
andb
add
jns
or
insl
xchg
lock
insb
lret
mov
cmc
mov
jl
adc
flds
cwtl
es
sbb
mov
lea
dec
sbb
inc
aam
push
jg
popa
nop
stos
nop
inc
xchg
mov
fwait
scas
dec
stc
mov
sti
pop
fisttpll
adc
fwait
imul
cmpsl
dec
xlat
les
mov
fiadds
dec
mov
dec
add
lock
pop
mov
jne
mov
mov
sbb
mov
inc
mov
les
or
pop
push
nop
mov
mov
jae
cmp
bswap
jle
std
movsb
movsl
dec
pop
add
mov
xor
or
jg
das
jae
stos
gs
loop
mov
jmp
jg
cltd
adc
flds
xor
jecxz
addr16
push
in
pop
das
jge
xchg
mov
fistpll
out
mov
mov
mov
out
fldcw
enter
xchg
mov
popa
mov
leave
xorl
imul
mov
sahf
shr
js
stos
int
mov
cmp
decl
adc
mov
lret
vdivss
jae
xlat
aad
repz
inc
pop
loope
jno
adc
add
push
ljmp
repnz
xor
aas
mov
lcall
lods
dec
cmpsb
ss
insb
push
dec
fmul
stc
clc
sub
push
pop
imul
xchg
mov
push
dec
push
mov
mov
adc
test
xchg
jl
adc
mov
sbb
lds
sti
mov
cld
test
mov
mov
jno
cld
xor
inc
or
sbb
mov
ret
add
shlb
pop
pop
stos
xchg
sub
mov
jnp
xor
mov
push
jne
sub
sub
jl
cld
js
pop
and
sub
jae
xor
sbb
xlat
fdivr
rcl
and
loop
add
adc
or
jp
xor
dec
out
jae
in
push
inc
pop
or
xchg
call
adc
rcrb
cmpsb
popa
sbb
lcall
lcall
jmp
lret
inc
fbstp
repz
mov
jno
mov
mov
xchg
jecxz
jg
and
movsb
adc
jg
push
mov
mov
push
out
mov
sti
inc
popf
adc
sbb
mov
out
lods
leave
iret
and
lcall
sahf
jb
sbb
lods
jp
adc
mov
testb
dec
loop
push
ret
out
xchg
test
sbb
roll
push
mov
stc
int
orl
cmp
jp
mov
outsb
push
nop
cmp
in
mov
sbb
inc
sbb
adc
mov
jmp
xchg
gs
push
sub
jecxz
in
xchg
pop
das
mov
push
mov
inc
fsubs
mov
xchg
dec
xor
call
test
out
out
shll
hlt
roll
insb
xor
push
ficoms
sub
gs
sti
js
and
xchg
xchg
or
jne
pop
xlat
out
shlb
mov
mov
sbb
lds
daa
inc
iret
xchg
ffree
push
jecxz
or
lahf
roll
inc
call
ret
push
adc
mov
cmp
js
xor
fucomip
fucom
inc
mov
scas
or
cmpsb
push
daa
xchg
fs
jle
notb
popa
out
loopne
jae
mov
mov
sbb
shrb
sbb
test
addr16
jae
das
sbb
test
dec
stos
inc
or
pop
pop
jbe
in
adc
xor
cmpsl
inc
std
mov
test
sub
int3
xchg
or
sub
mov
inc
lds
xlat
stc
mov
call
dec
ja
pop
lods
jge
pop
fisttpll
pop
mov
int
repz
sbb
aam
insb
call
mov
rcrl
ret
inc
dec
into
or
ljmp
push
jp
mov
out
push
xlat
push
sbb
mov
mov
and
or
stos
jo
sbb
jb
adc
lcall
and
or
adc
push
test
inc
and
xor
fists
sahf
cwtl
add
dec
xor
mov
es
and
cli
cmpsl
test
pop
cmp
loope
xchg
cmc
adc
and
xor
out
xchg
fwait
rorl
inc
aad
lods
xor
popf
pop
push
loope
mov
add
inc
sub
inc
pop
adc
rcrb
xrelease
mov
andl
repz
stos
xor
decl
push
es
imul
je
mov
testl
hlt
and
and
test
stos
mov
and
dec
push
dec
out
stos
jne
mov
inc
and
mov
sub
jo
pop
xchg
lods
enter
sahf
loop
test
mov
dec
jb
in
sbb
shlb
mov
lret
lock
mov
adc
out
mov
or
test
hlt
ret
inc
mov
jbe
inc
pop
pop
sub
stos
and
loope,pn
enter
jns
sbb
mov
out
int3
push
xchg
imul
cmp
scas
sahf
pop
push
jbe
dec
lret
test
or
ds
fmuls
bound
repz
repnz
add
xchg
and
adc
or
lea
xor
scas
adc
xchg
sub
cwtl
xor
lds
dec
or
cmc
cmp
stos
arpl
pusha
mov
sahf
xchg
fs
jge
into
mov
xor
pop
cmp
out
in
shrl
roll
pop
call
adc
pop
sub
inc
fcmovnu
xchg
inc
push
dec
rcrl
mov
loope
imul
cli
push
pop
lret
jns
es
aad
sub
mov
cli
into
cmp
imul
add
jno
or
inc
out
jmp
mov
inc
add
cmp
mov
icebp
icebp
mov
or
and
add
cs
andl
xchg
ss
and
push
push
popf
iret
cli
and
and
pop
lret
mov
incb
insl
popa
dec
xor
lods
nop
fisubrs
jmp
lods
test
mov
mov
or
jo
jge
inc
dec
jne
cmp
jmp
push
ret
cmc
mov
sbb
xchg
ja
fisubl
fwait
into
jnp
or
ret
fdivrs
in
xor
lock
add
jmp
adc
inc
or
ret
or
and
cmp
aas
imul
xor
stos
dec
notl
jbe
fdivrl
out
hlt
out
cmpsl
hlt
jle
iret
pop
pop
mov
stos
mov
stc
rcrl
dec
sub
push
adc
data16
pop
xchg
cld
nop
add
pop
pop
insb
lods
mov
sbb
mov
mov
sbbl
pop
sub
add
add
xchg
mov
into
test
push
outsl
add
dec
sub
popa
pop
inc
push
test
loopne
push
aam
fbstp
daa
cmp
pop
push
lea
cmp
sbb
in
insb
add
in
push
rorl
sarl
test
movsl
jnp
xchg
and
jp
imul
sbb
adc
pop
mov
loopne
mov
or
xor
iret
fbstp
aam
pop
popf
or
imul
subl
pop
jo
mov
xor
xchg
push
mov
sbb
mov
xor
testl
mov
ja
cwtl
push
pop
outsl
mov
nop
inc
pop
cmp
mov
push
cmpsb
inc
fcomi
or
jg
lahf
inc
inc
fwait
sahf
jmp
dec
addl
inc
cmp
ja
mov
ffree
dec
jge
sub
cmp
xlat
xchg
rol
xchg
inc
test
shl
ffreep
lock
jnp
push
test
xlat
xchg
pop
xor
leave
lahf
addl
dec
das
push
mov
add
outsb
push
xchg
or
je
inc
push
leave
fsub
enter
sti
push
xchg
dec
int
or
cmc
cmp
xchg
cmp
mov
xchg
in
or
xor
pop
push
loopne
push
aas
popf
sti
lahf
xor
loopne
and
push
sti
xchg
mov
jae
pop
sub
jmp
mov
movsl
fldt
or
xchg
aas
jb
and
jne
pop
out
add
xor
out
xchg
testb
push
push
xchg
and
inc
jns
add
adcl
xor
xchg
ret
add
movsl
xchg
lea
sub
or
push
lea
mov
mov
nop
out
push
dec
or
sbb
jle
in
dec
repnz
adc
cltd
jo
cld
les
clc
vpmadcsswd
insl
or
dec
ja
leave
cmpl
jbe
add
sarl
stc
sbb
push
push
jno
adc
cmpsl
xlat
pop
xor
ret
lret
cltd
std
or
jmp
push
scas
fadds
stos
xor
fs
add
cmc
pushl
mov
add
sbb
pop
mov
dec
inc
imul
pop
out
das
rcr
ja
test
push
xchg
push
sbbl
aad
loopne
icebp
fiaddl
jp
mov
xchg
lea
pop
cmp
rclb
testb
cwtl
mov
push
xchg
imul
push
enter
dec
xor
sbb
dec
insb
inc
cmp
into
and
push
mov
out
lock
ret
adc
psubusb
xlat
xor
mov
lods
dec
inc
fidivrs
sbb
out
push
add
mov
mov
mov
stc
jns
ret
pushf
add
addl
xchg
nop
or
adc
fisubs
jp
cmp
shrb
adc
pop
jl
clc
cld
sub
sti
add
mov
push
mov
fcmovu
in
arpl
push
js
cmp
jmp
push
lret
pop
xchg
inc
les
mov
cmpsl
push
xchg
inc
xchg
test
ror
cwtl
mov
aas
push
jl
pop
stos
lahf
imul
xor
into
and
cs
aaa
push
mov
and
lcall
addl
scas
inc
pop
aas
bnd
mov
rcr
sub
push
fstpl
push
push
pushw
inc
nop
not
adc
in
test
test
cmp
adc
inc
sub
cld
rcl
dec
in
inc
mov
insl
or
xchg
mov
adc
testb
adc
xor
sub
xor
xchg
daa
dec
inc
xchg
lea
cmp
loop
mov
xchg
loop
and
sub
mov
int
adc
xor
and
push
repz
sarl
adc
pusha
mov
and
dec
pusha
das
mov
push
fildl
inc
jno
ja
cmc
xor
xor
jge
push
not
push
mov
mov
mov
imul
ret
in
xor
or
mov
pusha
pop
or
jmp
mov
cmp
aam
push
sbb
push
add
icebp
jbe
ror
fldt
das
pop
cmpsb
iret
xor
int3
cmpsl
add
stos
lcall
adc
xchg
mov
push
fbld
scas
dec
mov
mov
push
cmc
and
or
popf
or
pop
pop
mov
mov
mov
mov
pushf
sbb
repz
repnz
ret
jg
jb
cmp
int3
iret
inc
lret
sti
cmp
sub
sub
in
and
or
push
insl
dec
sub
movsb
int
sub
out
xor
push
pop
adc
sbb
addr16
mov
pushf
outsl
lods
push
lret
jle
dec
mov
sbb
cmpsl
pusha
das
xchg
sbb
cwtl
loope
lods
js
mov
mov
inc
push
jne
jbe
jno
hlt
aaa
je
shrb
sbb
inc
sub
frstor
popf
cltd
mov
xor
aaa
add
push
push
stos
mov
in
arpl
sub
insb
or
cli
aas
sbb
mov
out
ljmp
push
out
sub
popa
imulb
in
fstpl
test
cltd
daa
fs
xchg
ficomps
jb
or
addr16
adc
scas
cmpsb
mov
xchg
aaa
sahf
xchg
call
fisttpll
xchg
ds
xchg
pop
dec
stos
js
lods
jmp
pop
sub
or
and
filds
rorl
fwait
jge
inc
lods
adc
aad
dec
ret
xor
inc
pop
ds
mov
mov
sub
push
jns
call
clc
outsl
and
jnp
xchg
push
mov
xchg
and
cmp
pop
stos
je
sub
test
xchg
xor
pop
xor
dec
pushf
faddl
dec
push
mov
mov
ret
xor
adc
dec
mov
or
xor
sti
movsb
dec
dec
and
and
jecxz
jno
out
xor
or
mov
stos
dec
add
pop
shl
cmp
xchg
xchg
push
out
xor
out
jne
cmc
out
or
lea
push
out
hlt
cltd
xchg
popa
jbe
push
in
mov
mov
or
sarl
fisubs
inc
adc
leave
test
in
xchg
jle
js
or
test
ret
js
mov
mov
xchg
mov
in
lock
inc
sub
pop
int
cmp
sub
mov
mov
cmp
mov
out
dec
adc
out
mov
sbb
sbb
out
pop
dec
hlt
adc
and
pop
aad
cmpl
cmp
mov
aad
add
lcall
push
ja
test
inc
jno
pop
jl
movsb
sub
fcompl
nop
roll
mov
cmp
add
adc
adc
test
cmp
testb
lods
lock
sbb
sub
cmpsb
mov
jl
adc
xchg
lds
pushf
cwtl
jb
or
xchg
xor
push
sbb
addl
shrb
jmp
and
jl
push
test
jle
push
pop
mov
cmp
outsb
aam
lea
nop
pushf
mov
scas
or
cmp
push
cmp
and
add
mov
clc
xor
mov
rcl
popa
push
jne
pop
add
cmp
fidivl
fcmovb
xchg
outsl
dec
mov
jge
popf
cmp
nop
push
flds
movb
daa
add
lea
dec
mov
into
outsb
dec
push
push
xchg
sbb
xor
sbb
sar
jle
aaa
pop
xor
pop
jb
call
jmp
xor
and
std
sub
incl
daa
sub
ja
sub
push
pop
inc
push
sbb
cmpsb
xor
mov
sarb
push
lret
loopne
jno
xor
aaa
arpl
outsb
dec
ljmp
test
jne
push
movb
adc
pop
sbb
mov
push
or
daa
je
rcrb
insl
pop
in
xor
mov
adc
lods
das
imull
jmp
scas
es
inc
mov
and
cmp
jl
inc
dec
lods
div
xchg
cmp
rol
test
pop
adc
mov
loope
xor
mov
push
push
in
hlt
shl
nop
xchg
jmp
push
stc
iret
pop
xor
jae
fwait
mov
sbb
add
aam
arpl
leave
imul
outsl
pop
sbb
pop
mov
mov
push
or
call
por
movsl
mull
incl
lahf
cmc
movswl
mov
xchg
jno
adc
lcall
enter
lods
call
mov
loope
push
sbbb
arpl
add
out
pop
imul
stos
sbb
fdivl
pop
xor
imul
inc
and
mov
clc
fcompl
js
push
xchg
cmp
shrb
xchg
adc
lock
movsb
mov
leave
push
not
filds
push
imul
out
sbb
lretw
and
data16
dec
iret
push
into
jmp
movsb
sub
add
add
je
mov
pop
cmp
add
or
iret
mov
mov
cmpsb
ror
shlb
and
add
or
push
or
test
xlat
lods
clc
cli
lret
ret
xor
std
mov
pop
and
notl
add
cmp
testb
int3
jge
mov
xor
adc
mov
mov
mov
gs
outsl
mov
ds
sbb
inc
in
loop
lret
push
scas
cmp
xchg
scas
vrsqrtps
rcrl
clc
movsb
or
mov
out
insl
lods
ret
and
inc
cltd
mov
sbb
mov
outsb
mov
mov
lods
shll
adc
mov
xchg
call
mov
and
pop
test
scas
adc
mov
bound
cltd
fdivl
dec
ja
lcall
not
decl
sbb
dec
and
push
xchg
pop
xchg
fnsave
arpl
push
es
push
out
dec
mov
repz
hlt
jbe
adc
inc
movsb
dec
lods
jae
add
xchg
popa
shr
in
sub
push
mov
idivl
rclb
jg
xor
inc
xchg
sub
adc
or
rolb
adc
push
cmp
xchg
xor
mov
jnp
mov
xor
push
mov
mov
sub
inc
out
stc
fcmovbe
scas
mov
mov
test
mov
repnz
push
and
add
roll
outsb
mov
sarb
add
fwait
add
push
xor
mov
mov
fwait
hlt
add
lock
mov
bound
std
outsb
ds
mov
cs
std
mov
dec
sarl
aaa
mov
ret
ss
into
insl
ret
std
fsubrl
fxam
mov
pop
mov
jp
fstl
inc
inc
popa
mov
jae
jnp
dec
cmc
popf
xor
test
daa
dec
mov
inc
mov
out
shll
cmp
nop
cmp
inc
stos
data16
cmp
xchg
mov
js
sbb
daa
mov
mov
loope
ret
pop
and
add
ds
push
sub
mov
mov
cld
xor
and
sub
ljmp
pop
ds
in
sub
negl
daa
js
cmp
or
jo
push
lods
jns
sbb
imull
adc
cli
mov
adc
jno
mov
icebp
mov
dec
lock
adc
ljmp
aad
dec
sub
and
stos
aas
cmpsl
jno
in
push
sbbb
rcll
scas
dec
pusha
outsl
rolb
cmp
pop
add
mov
mov
mov
loopne
fstps
bound
xor
push
push
xor
ret
dec
xor
pop
mov
fistpl
xchg
popf
adc
sbb
sbb
rcrb
imul
add
sub
aaa
outsl
cwtl
push
imul
cmp
popl
in
pop
test
divl
push
sbb
adc
pusha
rorl
inc
jle
scas
cmp
imul
dec
scas
dec
pusha
fmul
les
outsb
xor
jno
pushf
mov
std
adc
dec
adc
and
and
jno
jecxz
stos
jbe
push
imul
cs
sbb
js
inc
bound
mov
sub
sbb
int3
mov
sbb
adc
jno
adc
aas
or
sub
cli
and
rcll
iret
jl
inc
and
adc
in
rolb
sub
fmull
fadds
lods
pop
cmp
pop
mov
lods
xchg
cli
sbb
cs
sbb
movntq
sti
and
out
inc
pop
pop
jmp
push
mov
mov
shll
sbb
sub
mov
test
adc
and
and
cmpsl
jg
aas
add
push
inc
ret
shr
call
std
jmp
pop
xor
into
xchg
cmp
daa
pop
xchg
cmp
jnp
repnz
fildl
mov
sahf
fisubs
mov
push
sub
dec
and
insb
dec
ja
sub
adc
out
das
dec
pusha
push
adc
fsubrp
sub
xchg
mov
aas
dec
dec
jmp
pop
pop
xlat
mov
ljmp
inc
ja
test
fistpll
fs
shr
mov
adc
jl
test
sbb
dec
pop
arpl
jae
lret
movsb
xchg
push
loop
pop
add
and
sahf
rorb
jmp
add
int3
lods
cmp
movsb
inc
roll
sbb
mov
push
sbb
inc
mov
sub
outsb
sbb
sbb
pop
lock
cli
cmp
xchg
outsl
lea
paddusb
aas
sbb
jbe
xchg
popa
jns
jg
imul
lcall
aaa
xchg
or
movsl
movsb
cli
shrl
jle
pop
in
popa
and
push
cmpsb
lahf
jl
mov
xor
cmp
lahf
xor
testl
lea
or
cld
or
xchg
inc
xor
cltd
push
jmp
inc
cs
and
inc
push
push
pop
shlb
mov
xor
jno
in
jge
mov
lods
jns,pt
test
mov
idivl
paddusw
sbb
dec
mov
cmp
popf
pop
fistpl
aas
test
mov
xor
mov
xor
lock
popa
add
ret
ficoms
xchg
push
mov
jge
mov
inc
pusha
add
shll
jge
stc
pop
outsb
jl
xorl
loope
int3
or
add
mov
mov
jns
ljmp
test
inc
pop
gs
or
dec
jnp
aam
stos
pop
add
xchg
addb
movsb
aam
pop
xchg
fdivs
imul
jns
fisubrl
testb
mov
jle
movsb
mov
jns
lds
or
mov
adc
mov
sbb
sub
inc
sub
jecxz
rcrb
pop
cmpsb
xchg
nopl
fdivrp
hlt
push
add
fwait
shll
cmp
stos
pop
shrl
pop
in
das
xor
loope
cltd
pop
repnz
lahf
xchg
test
shrl
subb
jae
mov
sbb
jne
pushf
cmc
lea
add
mov
ljmp
ljmp
pusha
dec
mov
aam
daa
xchg
sub
and
stc
sub
xchg
scas
add
shrl
or
jo
cld
aaa
mov
sub
into
lods
insl
fsubrs
sub
mov
xor
test
data16
or
pop
inc
cmpsl
jb
repz
dec
lea
jmp
lods
test
mov
sub
rclb
in
cmc
mov
loope
and
adc
cld
cmp
mov
mov
iret
mov
adc
mov
leave
cwtl
ja
sub
adc
push
push
icebp
mov
dec
andb
adc
popa
sbb
cmpb
fs
pop
jg
jp
gs
cmp
sti
in
rorb
pop
sarl
adc
push
idivb
scas
xor
xchg
in
jno
mov
add
adc
xor
xor
fsts
imul
popa
xor
jmp
divl
jl
test
pop
sub
cwtl
out
es
lahf
sbbb
sbb
mov
stos
ficomps
pop
pop
inc
xorb
cmp
sbb
adcb
sti
out
arpl
push
or
out
add
data16
das
insb
jns
fnstenv
push
push
xchg
sbb
data16
fldenv
test
xor
imul
xor
jb
mov
ss
xor
xchg
fcomps
adc
add
mov
out
push
and
rolb
loop
jae
inc
lds
cmp
pop
insl
mov
sti
push
or
xchg
imul
sbb
xchg
aam
mov
dec
sbb
js
jne
push
add
sbb
mov
sub
pop
jp
mov
add
add
and
cmpsl
jo
lea
xchg
movsl
lea
sbb
add
jns
repnz
jns
sub
sbb
push
xor
adc
dec
outsb
sbb
hlt
xchg
jp
inc
xchg
fistps
ja
jno
dec
outsl
mov
jmp
jmp
mov
jb
cmp
lods
jmp
in
int3
and
lds
enter
imul
push
fnstenv
dec
add
aad
mov
in
imull
rcrb
inc
jl
loop
push
or
int3
sbb
imul
cmpsl
daa
cs
pusha
jl
fwait
jbe
mov
fidivrs
pop
inc
mov
or
xchg
sahf
mulb
xchg
stos
lret
pop
fisubrs
xchg
fcmovnbe
lock
push
pxor
je
xor
std
ljmp
xor
sub
push
iret
lret
fimuls
cmc
add
clc
cmc
and
gs
jne
pop
pop
mov
into
insb
inc
adc
into
ja
sub
imul
push
cmp
jle,pt
xor
pop
and
enter
jo
xor
cs
dec
sub
js
in
xorb
cmp
and
stos
mov
push
cmp
cltd
and
popf
outsl
cmc
nop
xor
aam
les
fidivl
mov
insl
fidivs
pushf
in
and
xchg
xor
cmc
insb
xchg
pop
adc
int
cltd
sub
popf
xlat
dec
lock
popa
lea
cmp
cmc
ret
hlt
sahf
pop
js
fs
aad
rorl
test
dec
repnz
sbb
stos
fs
adc
mov
test
pusha
fisttps
ffree
ret
lret
pop
jge
pusha
mov
push
jp
bound
insb
lods
shrl
adc
push
dec
sub
lahf
cmpsl
sbb
dec
inc
and
nop
imul
stos
xorb
inc
pusha
shll
mov
mov
jp
mov
sbb
fiadds
fistps
shrl
into
arpl
add
sub
dec
mov
pop
mov
test
gs
xchg
aad
sub
mov
mov
add
ljmp
xchg
mov
dec
push
into
notb
jns
out
popa
fisubrs
loop
test
xchg
or
mov
test
andl
xor
cmp
rcr
scas
stos
mov
ret
cltd
push
mov
mov
xor
repz
rcll
mov
adc
fdivrl
aam
in
xor
aas
sub
and
cmp
push
mov
sbb
sarb
mov
mov
sub
ret
and
add
cmp
icebp
xlat
jp
rorl
loope
jge
mov
imul
adc
dec
push
in
ss
out
adcl
dec
sarb
leave
data16
xchg
fninit
fs
jno
mov
push
add
mov
push
in
je
bound
pop
dec
add
ljmp
outsb
or
and
pop
xor
in
xor
mov
rorb
daa
sbb
jne
lea
mov
in
mov
adc
fcmovnbe
inc
lods
ror
rorl
inc
xor
cmc
or
adc
lea
in
push
out
idivb
bound
int
jge
push
rorb
sub
outsl
cmp
adc
or
push
daa
mov
mov
ss
dec
jnp
arpl
fcoml
jl
mov
dec
xor
inc
js
lock
inc
jns
push
jo
sti
les
insb
pop
jmp
sbb
pop
mov
addr16
lea
es
cmp
cmp
je
cmp
fs
adc
dec
mov
xor
jne
add
les
scas
mov
pop
mov
and
add
push
xor
nop
stos
loop
out
das
dec
add
repz
inc
mov
es
jecxz
inc
inc
ret
mov
cmpl
pop
sbb
or
mov
mov
mov
mov
data16
in
out
add
cmp
movsl
pop
xchg
rcll
adc
inc
dec
daa
into
inc
popa
jge
pop
jmp
scas
cwtl
sbb
negb
hlt
sub
lock
dec
filds
mov
ja
mov
adc
pop
lods
lock
xchg
sub
clc
cmpsb
out
pop
mov
add
sbb
xchg
push
jmp
xchg
stc
mov
xorl
or
add
daa
inc
mov
and
add
adc
sub
in
pop
jmp
fildll
dec
int
in
popf
shll
aaa
pop
jbe
fidivrs
aam
jle
addr16
lea
adc
cld
sbb
faddl
inc
push
insb
push
inc
jmp
cmp
das
xor
rorl
outsl
stc
loopne
mov
add
subl
jbe
pop
fildl
ror
call
xor
jmp
int3
and
dec
mov
push
out
cmp
cwtl
fisubl
ud1
shll
repz
inc
outsb
rorb
adc
ret
into
xlat
add
add
inc
sub
jge
lcall
push
fnstenv
lret
and
pop
dec
test
mov
mov
nop
icebp
xchg
sub
xor
mov
mov
loope
cwtl
dec
cmp
mov
push
mov
je
xchg
push
test
shr
xor
jecxz
les
and
jecxz
dec
ds
jp
dec
mov
add
out
xor
and
inc
rcll
out
mov
cmp
pop
xor
fisubrs
pop
out
push
test
jmp
dec
push
inc
dec
mov
mov
xchg
ljmp
push
inc
pop
add
imul
jge
cmpsb
sbb
dec
xor
adc
std
xor
data16
xchg
xchg
sbb
lcall
adc
rorb
xchg
xchg
jne
test
loopne
push
xchg
jnp
fldenv
xlat
cmp
jns
jns
in
scas
jle
sbb
inc
mov
testl
test
adc
icebp
or
aas
loop
cmp
testl
sbb
dec
dec
lret
mov
in
add
data16
cwtl
push
lahf
jne
out
repnz
mov
ljmp
ja
inc
test
and
pop
mov
jb
aas
out
pop
mov
mov
mov
aad
flds
in
adc
pop
mov
xor
pop
in
jl
dec
decl
ret
push
call
mov
cmp
out
mov
pop
add
loopne
rol
hlt
movmskps
adc
jg
ret
sahf
sub
pop
add
mov
pop
movsb
testb
fcmovnu
cmc
daa
mov
xchg
lds
sbb
adc
adc
outsb
sub
jns
add
jo
movsl
push
or
jle
rolb
jnp
lods
out
call
xor
push
mov
std
aad
xchg
cmp
push
lret
xor
scas
jnp
std
mov
pop
cld
and
cli
sub
pushf
aad
int
cmp
movsl
subl
in
or
inc
adc
idiv
push
xor
push
jns
movl
ds
insb
and
inc
ljmp
fiadds
pop
xor
out
test
dec
xchg
aas
ja
jle
fsub
inc
call
adc
adc
push
cmpsb
xchg
xchg
jbe
pushf
call
and
push
xchg
ja
movsl
or
xlat
pop
cmp
pop
repnz
lock
sbb
lods
sub
cmc
jb
adc
push
in
addl
fsubp
mov
pop
mov
lds
loope
nop
push
call
xlat
add
cmpsl
movsb
inc
adc
daa
out
aad
nop
popf
mov
ret
fbstp
scas
or
pushf
adc
in
fistpll
sbb
ret
ljmp
leave
cmp
jo
push
cltd
xor
fstpt
repz
sahf
ss
nop
push
sbb
lret
into
repnz
lock
push
adc
cmp
sub
jo
dec
push
in
loopne
mov
push
adc
push
lcall
xchg
mov
xchg
arpl
movb
lea
cmpsb
repz
sahf
lods
roll
sbb
xor
xor
divl
pop
in
xchg
pop
call
mov
xor
fsubs
jecxz
dec
cmpsb
inc
not
add
cmp
scas
aam
push
inc
mov
jle
icebp
stos
movsl
cmp
loope
push
out
in
les
or
movsb
xchg
or
inc
sbb
sti
push
jle
lea
cmp
xchg
mov
mov
pop
mov
jnp
gs
xchg
mov
lock
cwtl
adc
mov
gs
cltd
mov
mov
xor
popf
stos
in
pop
imul
sbb
sti
cmp
mov
push
mov
cltd
dec
mov
sbb
cltd
cmp
mov
leave
lret
lcall
insl
xor
sbb
cmp
jle
mov
ja
inc
imul
or
cmpsb
roll
roll
stc
test
fld
dec
addr16
bound
jno
jg
lock
into
insl
loopne
sbb
adc
aam
inc
iret
fwait
cld
mov
movsb
adc
insb
xlat
sub
movsl
je
inc
pop
insl
data16
push
mov
rol
mov
sbb
jle
clc
insb
stos
mov
push
in
insb
lahf
iret
cmc
push
int
daa
es
sbb
dec
and
ret
lds
and
mov
into
andb
call
sbb
mov
dec
adc
and
xchg
popa
loop
and
sub
mov
inc
pop
push
dec
sbb
enter
xor
nop
imul
xor
xor
push
dec
push
mov
andl
mov
insl
out
dec
je
aas
popa
mull
add
in
adc
out
jecxz
adc
dec
rep
shll
jl
data16
xlat
add
cmpsb
push
mov
push
pop
or
std
or
push
aaa
mov
stos
cmpl
jns
adc
cmp
jns
notl
add
dec
cmpsb
out
inc
add
lcall
jecxz
subb
dec
rclb
add
bound
and
push
aam
cmp
and
push
mov
test
icebp
inc
gs
jbe
sbbb
xchg
imul
movsb
mov
cmp
sahf
mov
push
lret
ret
out
xchg
jp
icebp
and
and
fistpll
or
or
mov
jnp
pop
movl
mov
sbb
ljmp
inc
push
sbb
cmp
adc
xor
test
lods
push
mov
iret
push
pop
push
popa
pop
inc
xchg
out
test
cwtl
rcr
ljmp
cmpl
mov
sub
leave
jnp
pushf
lds
test
shr
push
pop
dec
loop
neg
int3
mov
push
xchg
test
inc
inc
adc
fdivs
lds
out
outsb
enter
dec
inc
jmp
stos
imul
and
sbb
add
lods
push
into
push
mov
bnd
push
test
movsb
paddd
dec
stos
push
inc
dec
orb
out
inc
jmp
rolb
imul
xsaveopt
fmul
fistpll
push
mov
popf
mov
inc
dec
aaa
jae
or
jnp
dec
sahf
pop
rcrb
lea
sti
scas
jae
and
and
or
mov
inc
xor
loope
es
fadds
dec
popf
adc
shl
fwait
mov
add
mov
xchg
dec
nop
cs
add
stos
adc
mov
clc
sub
lods
cmovl
notb
fldl
sbb
push
mov
lods
cmpsl
xor
pop
mov
lea
jmp
clc
fnstenv
lods
pop
adc
scas
inc
jl
pop
imul
in
push
test
gs
stos
push
jae
xchg
das
sbb
xor
inc
cmp
cmp
adc
out
stos
imul
push
push
loope
test
insl
stos
jbe,pn
inc
in
loope
xchg
enter
jnp
leave
nop
xlat
xchg
xor
or
mov
bound
jo
or
cmpsb
jmp
xor
rorb
mov
push
fistpll
lret
pop
and
aam
and
sbb
or
in
insl
or
daa
mov
push
pop
fcompl
int3
shl
push
sbbl
test
sbbb
inc
mov
inc
enter
dec
cmpsb
movsl
adc
xor
mov
cmp
inc
in
das
pusha
push
cwtl
dec
divl
test
pop
bound
outsb
int
aam
mov
xor
insb
xlat
or
popa
stos
push
mov
inc
push
fldl
call
in
inc
xor
pop
aad
pusha
add
xchg
inc
and
mov
call
cli
dec
sti
leave
or
cmp
xchg
and
pop
push
push
ljmp
add
int3
xchg
push
mov
out
jmp
push
popf
xchg
insb
sub
or
pusha
rcl
adc
mov
push
ret
or
aas
mov
nop
fsubs
sub
lock
mov
sti
jmp
push
push
ss
mov
mov
cmpsb
test
adc
in
mov
push
test
rcrl
call
cmc
mov
push
push
xor
xor
push
lret
xor
in
ss
das
loop
outsl
in
add
and
and
or
sub
or
mov
jnp
add
xchg
or
dec
jle
jg
rorb
jbe
stos
push
xchg
mov
sahf
push
add
inc
ss
andb
test
cltd
and
push
lret
in
icebp
jecxz
inc
pop
arpl
and
lods
js
call
jbe
push
daa
bound
loope
cmp
loop
lock
pop
aad
out
or
movsl
dec
mov
arpl
fldz
int3
add
push
cmp
ja
test
xor
xchg
les
mov
xchg
iret
mov
push
mov
and
dec
inc
cmp
jae
cmpl
lods
sbb
and
cmp
in
fsub
mov
xchg
out
cmp
xor
leave
add
xor
xor
sub
and
js
int
aas
push
lcall
dec
bound
xor
or
sub
push
mov
imul
clc
add
xchg
lret
negl
xchg
mov
xchg
insb
insl
push
stos
daa
jns
in
movsl
or
mov
mov
fidivl
lock
lods
movsb
sbbb
loop
outsl
rcrl
fildll
sahf
clc
push
dec
subb
push
and
jmp
call
sub
outsb
mov
fcoml
jecxz
sahf
insl
adc
jle
jb
movsb
mov
into
nop
ja
mov
js
aam
mov
sub
xchg
push
inc
daa
rorl
fidivl
xchg
stos
xor
subb
iret
mov
push
ja
cld
inc
mov
add
daa
call
add
lods
fisttps
inc
mov
add
test
icebp
mov
mov
jp
sahf
ljmp
and
lcall
and
cmp
shlb
cmp
into
scas
pop
add
and
in
mov
data16
leave
lret
mov
lret
push
mov
sarb
loopne
mov
mov
subl
and
pop
push
bound
or
sti
scas
enter
pop
daa
push
cmp
and
jle
push
lcall
mov
mov
cld
xchg
xchg
jno
int3
inc
mov
xor
pop
pop
fdivrl
loope
add
push
sub
xor
icebp
add
xor
popl
daa
into
fs
sbb
xchg
push
lcall
xchg
pusha
pop
test
enter
dec
xchg
stc
dec
mov
in
mov
mov
mov
xchg
movsl
hlt
and
stc
movsb
mov
sbbb
dec
pop
pushf
repz
repnz
or
mov
cmpsb
cmp
into
push
pop
jmp
push
not
xchg
movsl
mov
lock
loop
faddp
test
movsb
or
sbb
jmp
lahf
push
and
jb
adc
pop
sub
ss
jl
je
push
dec
mov
dec
add
aas
test
test
pushf
adc
add
ja
mov
dec
insl
add
sbb
xchg
loope
and
sbb
sbbl
dec
sub
das
sub
inc
gs
xchg
xchg
inc
xchg
add
mov
rcll
ljmp
sbb
seta
push
or
cmp
jnp
inc
fists
inc
movsb
inc
fstp
idivb
jmp
dec
inc
out
int
xorl
into
loope
in
xor
adc
mov
cmp
sti
jbe
adc
push
aam
push
xchg
fstps
adc
scas
xchg
cmp
in
sbb
popf
sarb
mov
aas
push
mov
pop
sub
imul
out
mov
call
sbb
pop
pop
pop
jg
pop
dec
xchg
dec
inc
out
xchg
push
aam
shrb
das
cs
push
scas
loopne
rorb
jne
or
int
fdivrs
cmp
mov
mov
sub
rol
cmp
fisubl
jmp
cmpsl
xchg
jae
ds
cmp
sarl
xchg
sub
stos
or
and
aad
int3
sub
xchg
add
cwtl
loop
sub
adc
imul
push
cli
or
mov
jp
pop
cmp
arpl
pushf
cmp
dec
pop
add
outsl
pop
mov
or
imul
jbe
xor
inc
push
rclb
mov
ret
out
jno
jno
stos
or
sbb
adc
sbb
imul
sub
pushf
push
fs
sahf
push
sub
bndldx
stos
mov
aas
lret
addr16
and
pop
mov
cmp
push
dec
in
iret
fcompl
jmp
xor
aaa
mov
xchg
pusha
push
ret
adc
adc
or
sub
iret
jmp
sbb
cwtl
or
test
mov
testl
je
dec
jno
mov
sbb
xchg
mov
mov
fstpt
arpl
xor
inc
jno
in
sahf
pop
ret
nop
shl
dec
lret
ljmp
cli
adc
push
outsl
mov
cwtl
scas
fstp
pop
jo
sbb
cmp
call
gs
cltd
imulb
mov
pop
xor
rolb
push
sbb
rcll
dec
xor
mov
and
subb
add
pushf
int3
and
stos
jae
lret
repnz
xchg
movsl
lret
cmp
aas
and
xchg
xchg
and
xchg
cltd
jmp
and
stc
in
jmp
insb
add
pop
add
gs
jbe
sub
aaa
rcr
mov
xor
imul
movsl
push
xor
aaa
xchg
pop
pop
scas
mov
ljmp
pop
mov
add
mov
cwtl
sub
or
sbb
xchg
outsb
cmpsl
push
mov
pop
hlt
push
adc
andb
sub
and
aam
add
mov
push
ljmp
fldl
xchg
fsts
addr16
inc
int
and
cli
mov
lds
jo
test
jmp
jle
loop
adc
jo
hlt
xor
pushf
in
stc
jp
pop
pusha
movsl
pushf
fwait
mov
movl
xchg
pop
xor
push
pusha
inc
push
out
inc
mov
out
lret
pop
inc
pop
popa
jge
add
mov
dec
dec
sub
fiadds
adc
and
adc
in
fwait
xchg
out
movsl
cmp
fldenv
dec
push
aas
fdivl
daa
push
jb
ret
into
push
pop
push
inc
ljmp
stc
or
addr16
aad
mov
cmp
popa
cmp
je
data16
pop
cmp
dec
mov
lret
rolb
and
inc
and
xor
adc
lcall
mov
jne
push
add
bound
cmp
pop
dec
push
push
pop
pop
fcoms
mov
in
xchg
xchg
es
in
out
xchg
sti
lcall
cmp
mov
pop
jo
test
jb
sbb
mov
push
fildll
push
in
mov
jle
lea
jmp
inc
fldcw
mov
cmp
xchg
mov
test
lods
adc
iret
andb
push
xor
insl
inc
or
aad
out
ss
add
int
cwtl
rcll
loop
filds
out
int3
pop
lock
add
xchg
pop
sub
and
out
push
fiaddl
adc
mov
iret
or
pop
sahf
aad
xchg
dec
sbb
ljmp
lods
fldcw
sarl
dec
lahf
fdivl
test
je
xchg
jo
lret
mov
shlb
xchg
xchg
sub
jp
jo
mov
int
dec
cltd
xor
movsl
mov
mov
push
jle,pt
icebp
xor
ja
inc
loope
pop
add
or
int
inc
imul
cmpl
je
pusha
and
nop
push
pop
jbe
int
push
jmp
in
insb
push
or
cmpsl
xchg
mov
add
cmp
out
or
mov
sbb
popf
xchg
dec
out
loop
xchg
sub
out
and
roll
xor
es
lcall
cli
jnp
sbb
sti
sub
or
fisubrs
mov
mov
lods
clc
lea
lret
imul
dec
jne
fucomi
or
push
pop
sbb
sub
ss
pop
pop
jae
lret
jg
jle
push
or
popa
lcall
add
in
das
out
pop
mov
das
divl
sub
cwtl
pop
lds
addb
mov
cmp
push
jle
fisubl
notb
notl
sbb
adc
lret
push
leave
out
out
cmp
test
es
jecxz
mov
aam
add
sbb
outsl
enter
cmpl
fsts
adc
xchg
xchg
insb
or
cmp
add
pop
dec
pop
mov
lock
je
bound
push
pop
add
push
mov
fiadds
add
jbe
add
sub
dec
daa
enter
rorb
fs
dec
out
or
mov
or
push
xchg
lret
inc
fisttpll
mov
sbb
mov
jb
ret
lret
add
inc
push
push
jp
inc
inc
cs
push
aaa
xor
adc
mov
pop
or
rolb
mov
or
adc
aam
addl
fsub
jb
jbe
inc
mov
sbb
in
add
cmp
in
push
sbb
add
xor
sub
into
idivl
cmp
fnstenv
sbb
or
and
lods
mov
xor
cli
cmp
jbe
loop
inc
and
cmpsl
enter
xchg
pusha
mov
and
add
iret
push
dec
hlt
mov
xor
pop
hlt
sub
mov
push
mov
mov
ss
pop
and
cld
addb
fidivs
mov
add
cld
push
add
sub
mov
mov
mov
cmc
xlat
mov
jns
pop
rcl
adc
das
xchg
sbbl
nop
xchg
push
mov
lahf
xchg
insb
dec
mov
jnp
sbb
push
push
xchg
in
fisubrl
jno
lcall
adc
mov
mov
ljmp
pusha
gs
dec
sbb
sub
scas
mov
out
out
lds
pop
out
or
out
cltd
add
shl
enter
add
idivl
adc
jno
ljmp
mov
add
push
xor
imul
js
aad
test
mov
sbb
xor
lret
decb
out
jnp
test
cmp
iret
icebp
jg
dec
add
sbb
jge
sub
fidivrs
cmp
mov
xchg
xchg
mov
pop
mov
push
jae
ds
jb
or
or
or
aam
out
mov
and
stos
in
xor
push
mov
cmp
xor
add
mov
fwait
jo
mov
arpl
cltd
ds
fucomp
sbb
dec
mov
inc
arpl
add
inc
jb
test
sbb
in
test
xor
mov
movsl
cld
aaa
sti
mov
mov
int
lahf
les
sbb
jae
pop
inc
aas
inc
jnp
inc
xchg
fdivrl
mov
das
adc
aam
pop
or
and
xor
inc
shlb
adc
movl
sbb
out
imul
or
mov
pop
cmp
and
jmp
movsl
jbe,pt
inc
adc
clc
popf
add
stos
or
mov
jge
xchg
cld
dec
cmp
imul
push
mov
xor
inc
lret
aam
inc
mov
mov
test
nop
lods
push
inc
pop
test
std
pop
loope
xchg
mov
mov
cmp
pop
pop
lret
sub
xchg
pop
mov
shlb
clc
daa
inc
rcr
xchg
cwtl
pop
shll
xor
aaa
mov
push
pop
dec
inc
sbb
inc
lcall
mov
xchg
pop
movsb
fwait
movsb
js
add
sub
mulb
dec
and
lods
lret
jecxz
movsl
cmp
shlb
ljmp
pop
loop
mov
in
sbbb
inc
cmpsb
nop
add
movsb
stc
cmp
xor
ret
jnp
outsl
sub
xor
daa
push
mov
int3
daa
mov
inc
loope
jb
incb
mov
loopne
mov
add
mov
push
fstps
jle
mov
repnz
aas
int3
sahf
lret
int3
xor
pop
push
gs
ja
fldt
jae
in
ficompl
pop
mov
jmp
inc
and
ja
movsb
push
inc
in
inc
jae
inc
xchg
and
sub
adc
mov
shlb
scas
ja
mov
fdivrs
sti
stos
imul
das
adc
psubb
clc
sahf
sub
sbb
rep
cmp
add
xor
aaa
push
gs
lret
shr
mov
fcompl
lods
cmp
push
test
inc
inc
lcall
bound
mov
jmp
aaa
or
push
mov
lahf
std
test
stos
gs
inc
bound
nop
xchg
or
cld
pop
or
pop
adc
clc
insb
push
mov
js
movl
push
popa
jbe
fsubs
jne
xchg
mov
cltd
loope
cmp
int3
push
addb
adc
adc
int
arpl
mov
in
out
lds
stc
push
xchg
leave
xor
pusha
test
in
imul
pop
and
inc
rcr
push
or
test
scas
das
mov
mov
mov
in
js
into
adc
mov
pop
js
inc
lock
insl
mov
scas
cli
in
mov
cmc
jnp
fwait
or
and
and
inc
or
fistps
xchg
lret
fildll
leave
push
cltd
mov
xchg
xchg
es
dec
lahf
scas
or
int3
aam
xor
jnp
dec
or
cli
aaa
ret
cs
sbb
sbb
fiadds
fs
cld
jmp
adc
imul
mov
not
mov
sbb
cmp
outsl
sti
stc
aas
stos
mul
inc
jne
incb
mov
mov
xchg
in
mov
push
rcrb
jb
dec
dec
xchg
stos
cmpsb
cmp
cmp
mov
fldcw
jecxz
fisubrs
test
pop
sbb
cmp
cmp
jl
mov
inc
dec
push
cmp
cmp
sarb
sbb
mov
jecxz
fldt
arpl
xor
mov
lods
xlat
cli
push
sbb
or
pop
add
mov
sbb
adcb
mov
scas
cld
call
xor
inc
repnz
fsubs
loopne
sbb
js
cmc
xor
inc
dec
mov
mov
jae
dec
pop
js
sub
fldl
mov
nop
adc
fisubs
xchg
imul
mov
sbb
cltd
sub
in
outsb
adc
sub
jnp
or
in
dec
mov
sbb
dec
aam
cmp
jno
fucom
sub
insl
xor
sub
mov
xchg
mov
dec
jp
sub
pop
and
add
mov
jecxz
adcl
sub
adc
pop
sbb
sbb
cwtl
std
push
repnz
inc
pop
cltd
bound
xchg
jb
jno
loopne
push
mov
push
fcompl
lods
jmp
out
cmpsl
dec
data16
push
in
mov
cmpsl
rcrl
mov
in
mulb
xor
or
and
mov
pop
daa
dec
or
dec
outsb
lods
adc
jle
jg
lret
lods
inc
mov
sbb
push
iret
mov
pop
sbb
xor
mov
imul
sbb
mov
bound
ret
in
lods
sub
sub
push
ljmp
inc
and
sbb
lds
stos
sub
sbbl
cmc
into
test
adc
arpl
add
jecxz
cld
repnz
out
stos
jbe
jmp
xchg
fistpl
out
and
mov
int3
enter
scas
dec
pushf
orl
dec
jmp
pop
mov
xorl
or
test
into
mov
clc
sub
scas
ret
ret
js
fsts
push
pop
insl
pop
mov
dec
mov
jl
aam
jge
cmp
mov
jge
call
mov
jmp
fldenv
lods
ljmp
fnsave
mov
jb
hlt
movsb
aaa
popf
shl
mov
xchg
push
adc
xchg
pop
sbb
int
mov
push
pop
ljmp
dec
mov
xchg
stc
add
mov
test
rolb
pop
lods
cmp
jge
aad
lahf
sbb
dec
cmp
push
int3
fwait
mov
insb
lods
and
fmull
les
mov
push
pop
mov
sub
xchg
mov
pop
push
mov
lock
and
jmp
addr16
mov
mov
mov
xor
cmp
cmpsl
loop
rorb
dec
inc
pop
add
inc
mov
shrb
push
loopne
push
into
jno
sahf
xchg
jg
mov
xchg
std
adc
sub
xor
jle
ja
fwait
repz
mov
enter
int3
incb
pop
pop
loopne
cmp
sub
arpl
jae
cli
push
push
repnz
dec
adc
iret
subb
std
and
adc
sub
lret
pusha
dec
sub
idivl
or
dec
xor
dec
jge
unpckhps
dec
in
cwtl
cwtl
pop
sub
icebp
xor
and
sar
and
out
fdivr
shll
sbb
lret
mov
mov
mov
xor
jo
pop
loopne
ret
nop
cmp
mov
pop
push
push
mov
cmp
dec
sti
ja
push
sbb
jbe
cmp
push
jl
insb
in
packsswb
or
cld
daa
cmp
jb
dec
push
mov
adc
aas
adc
lcall
mov
mov
push
int3
cltd
lcall
test
xor
xchg
sarb
loopne
sub
loopne
aad
push
fwait
sbb
out
mov
test
adc
mov
cmp
lea
adc
insb
sub
addb
mov
pop
repnz
jne
test
dec
ljmp
fstl
cmp
pop
xchg
pop
sub
jmp
fstp
ficoms
lcall
test
adc
push
sub
push
mov
fidivs
cli
icebp
mov
sbb
lret
inc
push
pop
stc
and
cmpb
sub
mov
xchg
hlt
jle
fadds
cli
outsb
jmp
push
nop
push
lock
loope
xchg
loopne
shrd
int3
xchg
mov
mov
stos
pop
movsb
or
dec
loope
loope
loopne
loope
add
mov
out
out
sbb
js
dec
and
iret
inc
rcr
push
cwtl
inc
jecxz
mov
andb
test
jb
loope
add
xchg
lea
dec
jne
scas
ret
cmpsb
mov
xchg
and
adc
push
mov
adc
push
jl
loope
xor
insb
fiadds
cltd
jmp
push
adc
mov
mov
jle
arpl
jle
jle
out
mov
ficomps
out
jns
and
xorb
lret
lcall
in
outsl
mov
add
xchg
in
and
sti
dec
nop
push
lret
fldl
cmp
testb
xchg
or
out
mov
jp
and
inc
stos
icebp
inc
stos
inc
xchg
jbe
vdivps
push
push
leave
outsl
mov
out
mov
inc
jmp
mov
pop
cli
out
push
adc
push
sub
rorb
inc
push
push
inc
mov
push
sub
movsl
imul
sahf
sub
cmp
add
rorb
inc
dec
fdiv
or
adc
fwait
add
out
rolb
lods
adc
mov
outsb
repz
pop
and
push
js
out
jns
xor
lahf
out
lds
das
and
scas
mov
pushf
cmp
dec
outsb
inc
xor
jmp
movsl
cmp
push
mov
cmpsl
inc
add
sbb
test
and
jns
rcr
sbb
push
xor
dec
cs
push
in
xchg
cmp
call
mov
arpl
xchg
out
mov
inc
xchg
jb
mov
cld
test
pop
mov
fcomps
decb
cwtl
cmp
or
mov
ret
mov
add
in
lret
sub
mov
rclb
mov
mov
or
fwait
addl
lods
dec
mov
rcl
dec
and
addr16
sub
ds
push
pop
push
push
or
call
ss
mov
popa
stos
xor
push
gs
aas
loope
popa
cmpsl
sub
fcmovbe
push
sbb
sub
rclb
sub
cld
loop
xchg
ret
cmp
ljmp
lds
je
or
cmpl
notl
inc
mov
add
dec
add
scas
or
dec
lret
push
jecxz
lds
jmp
cli
nop
or
adc
test
inc
loop
inc
inc
push
loopne
int3
lret
sbb
sahf
add
popf
xchg
cmp
lds
or
push
sbb
out
ret
stos
scas
mov
leave
and
mov
js
lods
pop
mov
rolb
xor
mov
out
inc
push
fsubl
xchg
jecxz
dec
mov
inc
inc
je
add
sbb
adcb
adc
jae
cli
lcall
mov
push
out
jnp
inc
mov
int
stc
sbb
scas
in
aas
in
inc
inc
shl
push
and
jns
push
mov
inc
inc
inc
push
in
fldl
sbb
or
int
clc
cmp
das
adc
jnp
hlt
fisttps
mov
je
pop
mov
adc
ljmp
addb
dec
dec
shl
data16
shrb
je
outsb
inc
push
fldt
push
loopne
mov
mov
notb
fidivrs
jp
shll
dec
adc
movsb
lahf
and
fsubrs
pushf
dec
pusha
icebp
imul
dec
loop
mov
xchg
repnz
add
arpl
xor
and
ds
adc
push
shlb
push
sahf
xor
and
sar
shl
add
scas
adc
sub
pop
popa
rcrl
in
das
shl
shlb
sbb
stos
sub
dec
pop
jno
and
and
loop
fsubrl
adc
in
ss
xchg
cmp
loopne
cli
adc
jmp
imul
xor
fldl
jge
push
push
call
xchg
and
jg
cwtl
sbb
divb
mov
lock
adc
out
xor
sbb
mov
shrb
sbb
psllw
insl
les
gs
int
scas
sub
sub
add
movhps
sbb
push
cmc
dec
push
mov
mov
mov
scas
call
ljmp
xor
outsb
pop
sub
push
rorb
daa
add
inc
hlt
js
inc
js
add
cmp
or
jo
test
les
push
popa
rol
push
jb
mov
xlat
inc
xor
xchg
dec
pop
push
int
xchg
xor
shl
or
pop
enter
jae
outsb
jns
or
test
iret
sub
adc
mov
test
es
adc
jecxz
xchg
and
adc
mov
and
sub
out
lret
jne
lods
push
xor
jl
cmpsb
shlb
adc
push
adc
hlt
sarb
lea
in
inc
dec
dec
dec
repnz
outsl
fbstp
add
int3
ficomps
or
xor
mov
mov
cwtl
cld
fxch
lods
hlt
add
pcmpeqw
pop
dec
inc
or
loope
jo
ret
xlat
ja
dec
mov
pop
adc
ret
sahf
add
ljmp
hlt
xchg
aam
sub
cmp
xor
pushf
lret
ret
iret
cmc
sbb
loope
mov
test
bound
stos
and
imul
movsbl
adc
inc
cmp
shlb
jno
in
and
std
sub
pushf
push
mov
shrb
sbb
xor
mov
es
jo
mov
mov
mov
xsavec
je,pn
pop
scas
jne
outsl
scas
dec
adc
loop
sbb
inc
cld
rcrl
inc
out
and
adc
pop
push
xchg
lock
bound
adc
daa
negb
dec
inc
add
mull
mov
inc
outsb
leave
movsb
lods
lods
mov
xor
cmpsb
pop
popf
push
or
add
test
push
lods
pusha
hlt
imul
test
imul
sbb
mov
notb
out
xor
mov
push
notb
sub
scas
pop
loopne
xor
gs
test
push
loop
sbb
jmp
dec
mov
stc
jge
jae
xchg
cmp
lock
or
dec
dec
xor
inc
out
pop
and
add
dec
arpl
mov
xor
lahf
test
movsb
jg
mov
mov
inc
inc
dec
insl
fcomi
popa
push
cld
mov
pusha
flds
mov
pop
sub
push
mov
or
pop
ja
insl
jae
mov
mov
cmp
out
jno
sbb
ds
inc
sub
cmpsb
fnstenv
andb
lret
or
and
aaa
sbb
or
mov
shlb
or
mov
push
cld
sub
fildll
sbb
sbb
lret
out
pop
jne
outsl
and
test
iret
negl
pusha
mov
mov
scas
sti
iret
or
push
sub
sub
cmp
ja
cmp
pop
data16
cmpb
cld
jge
fisubrs
or
mov
jnp
pop
cmpb
cmc
cmc
rclb
jb
mov
push
add
or
push
notl
loop
ja
out
mov
mov
je
sub
lods
push
test
adc
clc
loope
pop
mov
shlb
dec
aas
xor
hlt
pop
xor
rorb
faddl
outsl
sub
scas
inc
cmpsb
sbb
mov
rcll
in
mov
scas
mov
jo
nop
dec
sub
cmpsl
cmpsl
movsb
decb
add
fstpl
scas
idivb
clc
cmpsl
fisubrl
int3
add
xor
push
aad
push
stc
jge
test
bound
adc
push
scas
in
lods
cmp
jg
fcmovnbe
and
scas
inc
cmp
xor
subb
xor
adc
lds
mov
add
add
mov
cmp
pop
cmp
jb
ljmp
mov
loope
pop
inc
fldl
lahf
sub
and
vphaddbd
jb
lods
mov
hlt
or
fdivrl
sbb
mov
or
dec
mov
out
pop
test
dec
fisubrs
fisubrs
add
imul
jo
mov
pop
pusha
sbb
xor
jle
inc
push
negl
iret
or
test
sbb
fst
es
test
jle
and
xchg
imul
std
mov
or
pop
fidivrs
addr16
sbb
pop
lock
jno
cmpsb
mov
jb
out
cmp
mov
mov
testl
mov
scas
test
dec
out
lret
scas
dec
adc
clc
jnp
fstl
sub
push
jl
gs
pusha
movsl
divb
push
cmpl
lods
cli
mov
sbb
cmpsl
sbb
mov
mov
scas
aad
into
mov
xchg
sub
shll
inc
sahf
and
push
xor
insl
in
mov
out
hlt
test
add
cmp
loope
jne
or
icebp
pop
shl
or
fisubrs
out
in
test
jb
xchg
shll
lret
aas
sub
andb
fisttps
dec
push
jns
push
adc
pop
cmpsb
std
push
outsl
inc
xchg
xor
idiv
outsb
movsb
lea
jl
test
test
dec
mov
jmp
mov
stos
hlt
shl
out
loopne
nop
imul
mov
insl
mov
xchg
sbb
rcl
xchg
cwtl
das
out
jle
leave
mov
inc
in
xor
int
mov
mov
xchg
andl
in
xorl
jno
lahf
ss
lahf
sbb
jp
mov
scas
sbb
mov
stos
pop
scas
dec
insb
mov
stos
loopne
mov
mov
pop
int
mov
cltd
pusha
mov
adc
fcmovu
lods
je
xor
std
mov
adc
repnz
mov
movl
sub
dec
inc
mov
fidivl
data16
out
clc
inc
stos
sub
cli
aam
cltd
push
cmpsl
movsb
fisttpll
fldcw
stos
ss
sbb
fmul
and
aaa
cli
xchg
je
lods
test
or
sub
aad
add
jbe
and
and
xor
push
lcall
sbb
inc
jge
out
mov
lahf
aad
or
or
jb
rcrl
and
lea
cmp
add
and
loopne
cli
cwtl
lds
repz
cmpsb
sbbb
shlb
jmp
or
imul
adc
push
xor
dec
lahf
into
mov
cmc
add
mov
test
outsl
subl
inc
aam
lea
outsl
sbb
mov
or
lods
xchg
adc
int3
mov
add
or
adc
mov
fs
adc
mov
mov
mov
aad
add
jecxz
das
popf
test
inc
xchg
fs
or
mov
inc
pop
sbb
addr16
cltd
and
fsubrs
fistps
pop
es
imul
sahf
and
pop
cmp
lret
mov
xchg
mov
fldt
xchg
sbb
inc
test
mov
sbb
in
push
or
push
add
cmp
inc
push
jb
lcall
xchg
fwait
push
aaa
mov
pop
pop
cli
jge
adcb
add
dec
repnz
dec
mov
fisttpll
fdiv
xor
dec
out
dec
mov
mov
sub
inc
fdiv
mov
add
and
mov
or
jnp
xlat
orb
dec
lock
idivl
fisttps
add
inc
mov
inc
inc
ja
fwait
std
pop
sub
imul
popa
xor
mov
dec
ja
je
fbstp
test
testb
lcall
fcmovnb
push
stos
or
inc
into
push
addr16
jg
cwtl
test
pop
push
sbb
pushf
mov
sub
push
push
mov
insl
inc
xchg
push
test
or
cmp
xor
inc
mov
je
jp
inc
inc
int
loopne
jl
int3
mov
sbb
adc
push
inc
cmp
dec
into
lret
in
pop
nop
pop
mov
imul
test
cwtl
inc
mov
test
rorl
xchg
test
fsubrs
jl
mov
xchg
mov
test
jmp
sbb
push
xchg
insl
fnstsw
cli
fsubs
lcall
call
add
push
aaa
xor
mov
add
jge
mov
push
mov
pop
test
rclb
ss
leave
in
sbb
lcall
cmp
adc
js
pop
fisttps
sbb
xchg
cmp
ja
pop
pop
and
xor
nop
jo
pop
fildl
ret
imul
or
xlat
xor
cltd
xchg
popf
xchg
scas
fsubrs
adc
xchg
push
or
addr16
xor
push
cmp
pop
test
cmp
lret
push
lret
dec
jo
shlb
ret
adc
and
gs
xor
jo
or
fcmovbe
jbe
sbb
pop
push
out
stos
jle
lret
xor
jg
fstps
js
sub
hlt
cwtl
sub
and
mov
imul
pusha
sub
sti
sti
or
jecxz
push
jbe
dec
jle
imul
or
das
or
sub
add
scas
call
sbb
out
stc
push
jl
mov
and
test
push
movsb
mov
loopne
movsb
mov
je
mov
movsb
jp
pop
push
imul
xchg
insl
sub
fdivrl
test
jnp
add
jge
inc
sbb
push
push
mov
mov
xchg
call
inc
inc
cmp
dec
icebp
hlt
cmp
movsl
lret
call
dec
out
scas
mov
cwtl
lret
insb
stc
loop
mov
aas
jae
mov
inc
or
jmp
popf
icebp
jno
xchg
mov
dec
icebp
mov
push
mov
loop
cmpsb
lret
dec
pusha
insl
es
shrb
mov
pop
pop
dec
mov
pslld
and
or
sub
sbb
dec
cmp
mov
fmull
shrb
imul
add
les
test
sbb
rcrb
mov
push
dec
fnstsw
or
pop
push
xor
popa
inc
aas
mov
orb
mov
rorl
jmp
shlb
xchg
push
out
add
push
pop
ret
pop
add
lock
cmc
enter
mov
xor
mov
mov
mov
ja
ljmp
inc
pop
and
mov
and
jbe
pusha
int
mov
cmp
ficoms
jbe
nop
cmp
and
add
mov
repz
cli
scas
dec
inc
jl
cli
sub
js
jbe
movsb
cli
pop
test
sub
push
repz
mov
sbbb
je
pop
clc
loope
inc
cs
jg
shlb
adc
push
jl
mov
movsb
shlb
and
or
fwait
gs
div
dec
sti
jns
outsb
push
lea
and
cmc
bound
mov
rcll
stos
jle
arpl
sub
adcb
out
cwtl
sbb
ret
nop
fiaddl
icebp
add
jg
jle
push
mov
lock
mov
cmp
mov
cmp
lods
mov
dec
popf
mov
sub
xor
mov
aad
fadd
leave
mov
mov
fs
bound
out
and
mov
addr16
rcrb
pushf
mov
mov
mov
cld
jge
sbb
std
hlt
into
adc
cmp
jmp
es
iret
sub
jmp
movsb
jmp
out
jnp
ljmp
int3
mov
cmp
mov
out
cmp
xlat
and
gs
fildl
inc
les
mov
andl
repnz
sbb
ss
xor
add
int3
pushf
cmp
pop
inc
and
jno
adc
inc
scas
mov
and
xor
fcomi
lret
inc
daa
test
stos
push
mov
lods
aam
movl
xor
js
pop
clc
mov
iret
dec
sub
pop
push
rcr
mov
mov
outsl
das
fstps
cmp
dec
fs
aad
ret
scas
imul
lea
inc
mov
int3
and
jne
cmp
cwtl
pop
cmp
call
lahf
pop
jnp
jnp
push
pop
arpl
push
xchg
jge
xor
fcompl
pop
add
pop
mov
mov
pusha
mov
pop
popa
test
sahf
loope
lret
test
jmp
dec
enter
sbb
push
sarl
testl
or
inc
cmp
xor
cmpsl
scas
inc
jle
mov
stc
cmpsl
xchg
lret
mov
lea
mov
mov
cmpsb
jo
dec
jg
add
pop
mov
xchg
inc
mov
sub
dec
out
dec
movsb
adc
mov
push
add
push
sahf
sbb
mov
hlt
aad
xchg
mov
fs
add
leave
jp
mov
pop
pop
scas
pop
hlt
jno
mov
xor
adc
dec
inc
ljmp
test
dec
test
sbb
dec
add
xchg
int
dec
addr16
insb
pop
fidivrl
xchg
int
cmp
jo
cmp
nop
imul
cmp
push
mov
adc
inc
jge
js
pusha
adc
xchg
int3
xchg
test
add
stos
mov
mov
aam
mov
nop
in
and
aam
jne
cmp
clc
insb
push
out
xchg
jbe
mov
add
fdivs
jmp
mov
pushf
les
test
mov
test
and
adc
outsl
lcall
mov
ret
clc
cmp
push
insb
mov
pop
ljmp
pop
scas
imul
cmp
inc
int3
push
jmp
sbb
jnp
in
mov
mov
lahf
mov
daa
add
sar
mov
inc
cmp
pop
xor
scas
stos
fidivl
sub
add
mov
lods
daa
not
or
lds
xchg
push
rolb
stos
pop
pop
jle
or
inc
out
int3
mov
push
lods
sub
cld
clc
push
int
cwtl
cld
mov
mov
jecxz
leave
mov
dec
out
adc
inc
dec
cmpsb
and
ret
pop
jl
pop
mov
sbb
sahf
xchg
jmp
jno
test
rorl
mov
cmp
push
ret
fistl
loop
sti
inc
cmp
push
mov
subb
and
lods
stos
outsb
repnz
cli
mov
xchg
mov
jo
test
into
xchg
mov
adc
out
and
inc
xor
jnp
push
into
jne
fcompl
out
ds
xchg
dec
mov
in
mov
fistpl
clc
jno
loope
imul
jmp
jns
cmp
fwait
sarl
dec
leave
mov
xchg
push
push
daa
inc
jmp
test
fistl
mov
mov
dec
lret
mov
aad
cmp
outsb
jae
aad
in
jae
enter
xchg
cltd
and
adc
pop
adc
mov
cmp
fimull
pop
xor
adc
mov
add
adc
lcall
xchg
cmp
push
je
jp
out
push
cwtl
sub
sti
mov
scas
mov
adc
jno
stc
idiv
loop
push
and
scas
divb
inc
jns
mov
add
inc
lock
pop
and
mov
sbb
mov
sub
sub
lahf
scas
pop
xor
ret
push
shlb
and
testb
xchg
pop
adc
lods
hlt
pop
in
adc
add
fwait
ret
pushf
xchg
mov
pop
addl
pop
rdtsc
xchg
scas
pop
xchg
push
jae
add
pop
jbe
mov
jbe
pushf
inc
jp
dec
std
mov
or
sbb
leave
pop
pusha
ss
sbb
mov
cmp
or
out
lret
mov
push
aad
and
pop
stos
push
and
loop
push
xchg
pop
fsubrs
cwtl
fistl
push
cld
fsts
dec
dec
js
pop
shll
outsb
push
loop
mov
xor
jno
lcall
pop
or
inc
xchg
sub
push
std
ljmp
addb
test
in
inc
test
aaa
mov
adc
pop
sub
ret
sarb
imul
push
cmpl
lock
fucomp
cmp
sbb
or
stos
push
ret
ss
adc
sbb
sub
sub
push
adc
and
dec
je
jnp
xor
ret
or
xor
repnz
cmp
mov
int
stc
js
push
out
call
stos
inc
add
cs
mov
sbb
mov
dec
filds
adc
cld
xchg
mov
loopne
jno
shll
js
xor
dec
shlb
lea
inc
cmp
or
fcompl
push
push
lret
sub
cwtl
sbb
out
mov
ljmp
jnp
sub
mov
pop
in
loope
int
mov
rcrb
mov
arpl
jne
add
dec
add
lcall
stos
je
repz
mov
out
hlt
data16
sbb
fmuls
mov
cltd
add
pop
dec
mov
pusha
inc
jmp
lock
out
jns
dec
loop
das
push
dec
addb
mov
and
or
jno
les
jae
push
repnz
sbb
call
stos
ficomps
movsb
push
jno
cwtl
jg
or
cli
mov
leave
mov
bswap
int
add
loop
call
ljmp
push
or
cmp
pop
mov
fucom
inc
mov
fnop
mov
mov
sub
call
inc
xchg
std
fwait
and
ret
sub
sbb
aam
outsl
jo
jge
add
popa
lods
push
out
cmpsl
adc
ss
jbe
gs
test
mov
jle
test
in
dec
lea
and
xchg
scas
jle
test
push
mov
xchg
sub
lcall
mov
add
pop
sbb
push
arpl
hlt
xchg
movsb
add
sub
subl
roll
inc
outsb
rcll
clc
lds
xchg
stos
xor
adc
mov
xchg
test
dec
iret
les
push
out
aad
sti
loope
lods
std
cmpl
sahf
jno
add
sarl
repz
je
xor
xor
inc
pop
sub
sbb
mov
das
pop
xchg
pushf
and
fstpt
xchg
pop
push
faddl
adc
pop
pop
adc
jne
mov
shr
out
iret
cmpsb
sub
push
pop
pop
sub
add
jno
cmp
dec
xchg
add
jo
hlt
test
xor
aas
fnsave
xor
mov
subb
or
lea
mov
or
mov
cltd
push
mov
aam
xchg
aaa
subl
pop
shlb
lret
loop
pop
push
pop
mov
stc
jb
out
test
fwait
add
xchg
clc
cld
mov
cmp
mov
fsubl
add
inc
mov
arpl
dec
int
fwait
sub
dec
jb
mov
lea
xor
lret
rcrb
stos
es
inc
mov
push
pop
in
iret
je
jle
sub
insb
add
push
pop
jno
divb
dec
cwtl
cmp
out
adcb
and
inc
push
pusha
cld
xor
out
inc
ret
jnp
bnd
jle
mov
imul
out
daa
adc
add
push
neg
mov
ljmp
insb
out
pop
imul
imul
ja
push
xor
rorb
cld
sub
push
mov
cmpl
xchg
int
mov
sub
fisubl
pop
dec
cmpl
inc
inc
sbb
popf
pop
lret
insb
sub
imul
out
or
test
mov
jecxz
dec
out
mov
outsb
pop
xchg
shlb
mov
jmp
popf
enter
sub
pop
adc
lret
shll
imul
xlat
cwtl
inc
lods
mov
cltd
adc
xor
lock
cmp
mov
mov
jae
mov
gs
clc
mov
lds
stc
into
daa
adcb
jo
push
mov
enter
mov
test
aas
std
std
xchg
sbb
into
js
out
pop
cmc
div
pop
lods
jnp
movsl
in
jnp
in
jne
push
pop
fs
lods
lcall
lret
std
nop
push
and
sub
in
cmc
orb
inc
movsb
int3
xchg
ret
popa
mov
xor
mov
sbb
jp
sub
pop
xchg
cmp
jno
push
rcl
or
js
mov
repnz
cmc
and
pop
in
repz
sub
fs
xchg
ret
aaa
add
xchg
idivb
lret
inc
push
fbstp
mov
mov
bound
jbe
xor
mov
aam
nop
push
jno
add
call
in
mov
jnp
adc
pop
rolb
cmp
in
test
mov
test
inc
loope
std
rolb
adc
stos
jbe
pusha
add
scas
orb
movsl
sub
xchg
pushl
and
adc
mov
and
test
inc
pop
dec
out
and
repnz
push
xlat
xor
scas
sub
jle
lods
mov
jns
push
jbe
jmp
mov
xchg
movsl
dec
gs
mov
dec
mov
fsubr
push
jecxz
test
cmpsl
clc
mov
cltd
lcall
jg
data16
gs
stc
mov
out
mov
ljmp
loop
mov
or
inc
fwait
pop
int
aam
lods
test
jb
xchg
mov
or
pusha
and
fmull
mov
shlb
jge
and
mov
xlat
icebp
mov
mov
xor
dec
ja
gs
imul
push
mov
icebp
pop
out
stos
in
add
mov
jnp
mov
fimull
cwtl
dec
jp
nop
fstpl
aad
in
cs
cmpsl
inc
mov
js
dec
rol
loope
sub
les
adc
ret
in
and
gs
xchg
xchg
sbb
mov
ret
and
cmp
xchg
shll
lahf
jb
mov
das
aad
xchg
adc
stos
dec
sahf
xchg
lods
sub
inc
sub
and
xchg
mov
jns
or
fadds
ret
mov
imul
mov
mov
or
xchg
mov
mov
std
lock
push
pusha
and
lds
mov
in
in
movsl
sub
pop
daa
jbe
nop
lock
hlt
ja
repz
push
cmp
data16
xor
cmc
fsts
adc
not
es
push
mov
pusha
cld
scas
ficoml
cmp
xchg
jmp
cmp
dec
enter
imul
hlt
and
xchg
pop
pop
mov
dec
xchg
out
sbb
pushl
mov
sbb
sahf
adc
std
adc
icebp
sbb
mov
pop
jl
mov
cmpsl
jno
sbb
xor
sahf
leave
fwait
and
sbb
mov
pop
add
push
mov
dec
call
inc
lcall
mov
cli
cmpsl
cltd
push
addb
mov
pop
sbb
std
xchg
fsub
and
aam
stc
dec
pop
out
test
es
scas
mov
inc
cmp
push
adc
rol
sub
call
dec
dec
xor
movsl
pop
mov
xchg
lcall
mov
or
dec
fdivl
pop
fs
stos
pusha
mull
push
xchg
test
jne
mov
pop
or
daa
popf
and
cmp
adc
lahf
test
jmp
push
icebp
fsubrp
movsb
cmc
fidivrs
sti
dec
bound
dec
lret
pop
jmp
icebp
aaa
push
aaa
mov
mov
ljmp
adc
rcr
out
test
and
stc
addr16
das
fisubl
std
mov
add
outsl
cli
in
xor
gs
xchg
lock
add
cmp
jge
dec
push
pop
or
outsb
xchg
rcr
imul
jns
dec
mov
and
cmp
push
lds
push
jno
push
cli
rcl
jmp
xor
in
lahf
push
pushl
xor
inc
jecxz
inc
lret
sbb
aaa
push
fstpl
adc
pop
mov
dec
scas
sub
push
jp
inc
sbb
stos
sub
scas
sbb
iret
mov
loop
addr16
pusha
das
jno
pop
mov
outsl
loopne
mov
aad
cmp
jnp
aaa
push
mov
xchg
into
insb
mov
pop
stos
imul
iret
inc
or
out
out
cmpb
pusha
fmul
jb
xor
mov
je
in
sbb
adc
push
xor
roll
and
cld
les
int
mov
jo
imul
and
into
xchg
jnp
les
outsb
jno
les
in
push
xchg
lods
call
pusha
mov
mov
sub
add
repz
sub
loop
jecxz
nop
sub
iret
mov
jns
jae
pusha
lods
out
mov
loopne
pushf
mov
push
or
es
into
arpl
lods
or
cmpsb
sahf
fs
cltd
add
lret
inc
sbb
arpl
inc
jle
mov
lods
sti
mov
fwait
sbb
arpl
test
adc
inc
shrl
xchg
das
je
scas
jl
sub
adc
cmp
xor
adc
cmp
mov
inc
push
pop
test
mov
imul
notl
or
pop
add
fwait
arpl
add
fiadds
mov
mov
sbb
jge
lods
ja
xorb
pop
xchg
jl
mov
lret
mov
xchg
popf
mov
and
movsl
xor
sbbl
inc
fisubl
leave
sub
xor
adc
gs
ja
test
sbb
sub
mov
call
mov
leave
add
adc
dec
cmpsl
icebp
enter
mov
mov
push
mov
mov
xor
add
inc
add
sbb
je
jnp
inc
test
fstpl
jae
or
loope
and
lahf
and
mov
aas
mov
mov
lock
decl
push
neg
or
popf
nop
cmp
lods
out
leave
mov
add
sub
xchg
and
sub
sub
pop
inc
aas
insl
test
jns
and
mov
jecxz
das
jne
nop
inc
inc
xchg
daa
jae
cmp
testl
in
mov
dec
jmp
sub
call
std
cmpsl
sarb
int3
xchg
rclb
aam
clc
push
xchg
sub
mov
out
fiadds
ja
adc
aam
ds
pop
addr16
inc
sbbl
inc
out
mov
iret
inc
cld
aad
fcomip
jnp
and
les
mov
repz
testl
imul
das
jbe
jne
dec
addr16
out
cmp
sahf
stos
jmp
and
xchg
inc
xor
sahf
in
fimuls
enter
mov
sti
mov
sbb
es
dec
sahf
ja
pushf
cltd
mov
or
dec
sub
sub
mov
push
fcoml
mov
daa
cwtl
pop
dec
lea
pop
repnz
jg
or
inc
mov
mov
jmp
addl
fbstp
pop
add
ja
cmpsb
push
shrb
adc
out
dec
jbe
mov
add
xchg
aas
arpl
loope
sti
cmp
jb
sbb
cmpsb
jae
ds
cmp
decb
cmovno
mov
adc
push
jb
fcmovu
rorl
lods
push
inc
fidivs
ss
mov
dec
dec
or
pop
add
sub
sti
insb
cmpl
shlb
aam
mov
xchg
repnz
sbb
fidivl
jno
in
pop
sbb
leave
pop
cmp
sub
sub
js
sbb
xor
jmp
mov
cmp
jb
scas
shrl
cwtl
adc
scas
lcall
mov
pop
je
in
add
imul
je
or
int3
jle
mov
ret
push
or
dec
in
add
inc
ja
or
movsb
mov
cmp
ret
jb
cs
fcmovnbe
rcll
icebp
cmp
pop
sub
pop
or
in
mov
int
scas
mov
adc
ja
int3
pop
jge
push
jecxz
push
xlat
adc
add
nop
push
cmp
fldenv
out
xchg
insl
xor
lds
popf
out
jnp
int3
jnp
pop
data16
in
jns
movsl
daa
jge
add
xchg
mov
cltd
lahf
shlb
cld
jne
loope
std
and
mov
out
xchg
adc
jno
shll
iret
mov
arpl
call
and
inc
fmulp
scas
cmp
mov
cmpsl
inc
mov
fnclex
jb
popf
pop
mov
or
in
mov
mov
push
insl
sub
jo
sahf
mov
lods
mov
mov
popa
jns
popa
pop
pop
shll
mov
jecxz
nop
inc
ja
ljmp
pop
mov
sbb
sub
xchg
xor
mov
inc
cltd
cmp
push
stos
pop
add
pop
sub
jp
jns
push
push
push
fisubs
add
and
stos
hlt
ja
cmp
insb
scas
and
adc
pop
ret
dec
rorl
lods
pushf
scas
popa
repz
aaa
push
cmpsl
loopne
outsb
push
xchg
shl
xchg
mov
data16
push
pop
ret
aas
push
loopne
loop
pushf
adc
mov
mov
xchg
lds
push
push
jecxz
rcrl
push
dec
add
call
ljmp
pop
repnz
pop
and
stos
js
xchg
jmp
fcom
sbb
adc
imul
stos
push
push
pusha
sub
lods
pop
jae
dec
xor
push
jno
mov
incl
adcl
mov
and
inc
into
add
lret
sub
jae
mov
dec
jmp
mov
push
nop
addb
stos
imul
das
xorl
push
je
lock
pusha
stc
adc
or
out
fisubs
xor
lock
rcrb
es
and
xchg
cmp
ficoms
jp
mov
jne
jecxz
jno
rorl
leave
mov
arpl
repnz
xchg
sbb
fcomi
loop
push
pushf
inc
cmpsb
mov
rol
lods
loopne
nop
jl
flds
lods
cltd
aad
mov
enter
insb
xor
push
jo
loope
or
jbe
or
xor
in
data16
push
sbb
push
sti
xchg
push
aad
loopne
arpl
sub
cmpsl
into
xor
int
xchg
mov
lds
xor
out
or
dec
xchg
stc
xchg
sub
mov
fsub
inc
cmp
mov
mov
jmp
das
mov
ljmp
int3
aas
xchg
and
xlat
outsb
xchg
xchg
in
inc
and
aaa
mov
mov
rcr
lods
dec
ja
xchg
push
lret
jne
scas
jnp
cs
and
aas
add
loope
mov
in
movsb
cmc
push
or
mov
mov
pop
scas
mov
mov
mov
dec
fdivs
push
gs
lret
mov
lcall
gs
pusha
lret
aam
dec
test
arpl
or
outsb
inc
adc
fdivl
xchg
adc
fisubl
inc
xchg
pop
jns
xchg
mov
stos
idivl
inc
lea
movl
mov
enter
cltd
lods
mov
insl
mov
xor
xor
fiaddl
xchg
in
inc
inc
loop
push
sub
pusha
pop
push
add
cmp
getsec
sub
lods
test
test
mov
xchg
inc
inc
dec
xor
inc
orb
jne
imulb
push
shrb
or
nop
ret
cs
rorl
jmp
pop
push
add
call
inc
cld
inc
push
cmp
mov
repz
jg
lcall
and
das
mov
inc
xchg
loopne
sub
loopne
and
popa
jno
lcall
xchg
or
ljmp
jmp
sub
or
clc
or
sbb
mov
jmp
xor
rol
xchg
and
or
in
xchg
shrl
adc
enter
cltd
xor
inc
cltd
gs
jmp
jno
scas
push
dec
push
shl
popf
adc
inc
pop
adc
test
and
add
xlat
ja
mov
xchg
data16
lods
ffreep
sub
loopne
call
aam
adcl
jno
mov
insb
push
cmp
sub
icebp
jbe
popw
cmpl
orb
cwtl
enter
fs
bound
or
push
cmp
mov
push
enter
xchg
in
loope
push
mov
sub
outsb
xlat
dec
out
test
sbb
and
dec
xor
mov
test
jl
and
imul
in
mov
and
pop
test
jbe
mov
adc
cmp
xor
jbe
jnp
sub
adc
loopne
pop
inc
loope
sti
aaa
imul
push
xor
push
icebp
bound
sbb
aaa
mov
add
mov
dec
scas
pop
mov
fs
div
sub
mov
jno
out
js
fsubrs
add
out
sub
pop
sbb
mov
mov
fs
fistpl
in
sti
or
jp
mov
mov
push
push
mov
cltd
je
cmp
loope
xchg
or
and
adc
sub
push
xlat
sbb
mov
cmp
je,pt
jo
testl
xor
sbb
stos
sbb
jl
lods
and
subl
mov
out
lret
lods
insl
mov
adc
sub
push
repz
loope
cmp
jmp
mov
mov
pop
int
lds
xor
mov
adc
sub
jmp
iret
sbb
test
push
adc
repz
ljmp
int
dec
inc
adc
xorb
sbb
call
int
repz
dec
popa
data16
int
popf
adc
mov
loope
addr16
jmp
add
dec
and
aad
and
rol
jg
repz
lret
mov
xchg
stos
or
xor
int
mov
fisttpl
and
icebp
pop
lods
dec
repz
movsl
jno
xor
inc
addb
icebp
mov
mov
sub
xor
pop
shlb
mov
inc
mov
or
sti
inc
sub
outsl
nop
mov
cmp
movsb
cltd
cwtl
mov
inc
imul
shl
ret
movsb
mov
sbb
and
stos
je
and
pop
test
push
in
loope
movsl
mov
aad
std
rorb
and
rcrb
mov
jle
in
mov
xchg
mov
fists
or
jnp
or
cmp
std
jnp
cmp
mov
ja
cmp
xchg
mov
adc
sti
mov
filds
xor
or
xchg
dec
jecxz
mov
adc
fs
mov
hlt
inc
pop
xlat
jge
jno
cmp
iret
gs
test
adc
xor
xchg
sub
mov
fwait
sbb
cmp
aam
call
out
or
adc
sub
and
push
dec
cmp
out
iret
les
sbb
jmp
pushf
adc
loop
and
push
nop
jg
push
push
notb
addr16
test
and
and
nop
ja
loopne
push
xchg
sbb
imul
outsb
fsubrl
or
and
push
cmc
adc
stos
pop
lea
jl
and
xchg
jne
mov
push
push
clc
sub
and
lock
out
mov
push
jns
out
movsl
int3
add
push
addb
out
sub
ja
mov
cli
into
int3
pop
pop
inc
scas
mov
jge
leave
jmp
jle
cmp
jns
outsl
pusha
xor
push
out
insl
mov
addr16
lret
mov
outsl
lds
movsb
pop
pop
ror
pop
aad
lret
push
lods
scas
stos
inc
jbe
push
sti
and
mov
sub
ds
and
mov
jl
xor
sahf
loopne
mov
cld
ja
rep
jne
inc
or
lcall
xor
adc
test
lahf
push
push
push
out
movsl
xchg
popa
lea
sub
lods
loop
lods
iret
and
movsl
mov
bound
xor
fwait
add
sub
jne
call
mov
xchg
xchg
pop
aas
and
loopne
sti
lahf
xchg
fs
in
lahf
sbb
cmpsb
jge
jns
test
arpl
dec
mov
ja
sub
and
fwait
int
int3
cs
sbb
aaa
mov
xor
xor
sub
psllw
or
dec
sbb
in
dec
dec
pop
dec
out
adc
mov
movsl
cmpsl
sbb
cli
inc
xchg
loope
test
dec
xchg
and
push
cli
js
call
add
out
jmp
or
jp
out
sbbl
cwtl
ret
push
cmp
popa
cs
cmp
dec
outsb
cmc
js
scas
xchg
sbb
fildl
movb
mov
push
add
xchg
pop
xor
dec
sahf
inc
dec
inc
shrb
pushf
and
shll
xchg
push
jno
sti
push
mov
xor
mov
cmp
push
sbb
roll
and
shrb
jbe
leave
fiadds
enter
ret
push
adc
xor
inc
dec
lods
in
xor
cmp
mov
cmp
inc
loop
test
ret
or
mov
push
xchg
cmp
pusha
negb
cmp
or
ljmp
sahf
sub
sbb
repz
xchg
fwait
sarb
sbb
dec
call
cmp
fcompl
arpl
subb
cmp
data16
mov
test
fsubs
sub
loop
mov
and
fistpl
jno
xchg
mov
jle
add
mov
jbe
push
imul
mov
cmp
movsb
jno
jno
fwait
test
jae
xchg
jle
pop
sbb
cld
sub
loopne
cmp
out
rolb
sub
addr16
dec
aam
inc
push
mov
mov
loop
test
das
rcll
data16
or
dec
and
addr16
hlt
sbb
sub
iret
repz
enter
in
std
inc
into
mov
nop
fisubs
inc
ret
js
add
push
stos
es
mov
and
pop
arpl
adc
gs
sbbb
jmp
mov
stos
ud2
lea
and
sar
or
lahf
inc
out
cmp
iret
jp
xor
mov
or
add
cwtl
mov
jne
jo
push
leave
xchg
mov
xor
aad
inc
jl
adc
xor
hlt
jle
sbb
xor
or
scas
test
or
loopne
cli
jmp
sbb
dec
xor
daa
xor
int
xchg
mov
out
lcall
xchg
ret
repnz
mov
xlat
repnz
inc
rcrb
mov
pop
and
or
pop
in
cmp
sub
jns
pop
imul
mov
and
rcrb
lock
dec
inc
jl
insl
jb
adc
lea
std
es
cmc
sti
or
lret
jae
and
movsb
pop
in
dec
jg
sbbb
xor
push
jnp
jb
lods
imul
inc
mov
mov
mov
pop
push
fprem
ja
iret
xchg
mov
xchg
imul
add
insl
mov
movsl
adc
pop
lret
arpl
repz
pusha
sbb
fiadds
inc
insb
daa
into
adc
xchg
jg
scas
shll
xlat
cmpsb
hlt
xor
pop
mov
cld
movsl
loopne
ljmp
shll
aad
mov
idivl
inc
pop
or
pop
shl
addl
sbb
or
repnz
loopne
add
dec
adc
inc
out
adc
jecxz
std
loop
cmp
mov
and
frstor
mov
mov
cli
cmpsl
es
or
es
in
push
mov
hlt
pop
sahf
enter
adc
outsb
fwait
popa
or
stc
out
lcall
or
xchg
js
ja
or
lret
or
sarl
xor
add
inc
fmul
test
or
arpl
dec
adc
fs
test
imul
dec
or
push
fisttpll
push
inc
sbb
cld
and
pop
pushf
xor
xlat
cli
scas
sbb
jp
pusha
cs
mov
loop
jb
clc
lret
daa
clc
mov
push
fists
adc
std
xchg
imul
add
pop
dec
js
jmp
cli
adc
daa
shr
shlb
xchg
sub
ret
and
clc
sti
div
fdiv
xlat
test
pop
clc
xchg
mov
gs
mov
shrl
cmpsl
jg
iret
test
sub
jne
shrb
push
call
xchg
imul
cli
xchg
pop
pop
cld
addb
push
xor
dec
push
int
xchg
addr16
gs
sbb
in
xchg
daa
push
sbb
sub
pop
cmc
adc
or
mov
mov
sub
scas
pop
pop
push
mov
mov
flds
aam
sbb
or
fsubr
ficoms
xchg
or
xor
loope
jecxz
lret
flds
or
push
sbb
mov
add
adc
inc
rcl
cld
cltd
xor
int
adc
repz
push
add
push
dec
dec
jb
mov
jno
cwtl
bound
into
jg
ss
mov
mov
lods
and
or
cs
mov
mov
addr16
inc
push
pusha
mov
stc
pop
packuswb
inc
mov
xchg
ds
xor
stos
ja
xor
mov
add
fs
sbb
jge
movsb
jmp
rcrl
lahf
test
cmp
leave
nop
ds
inc
dec
and
out
jle
mov
aas
pop
inc
sbb
fcmovbe
sbb
xorl
fsubrl
push
fwait
adc
dec
xchg
mov
jb
or
add
testl
fucomi
xchg
arpl
fdivp
and
outsl
cmp
mov
loopne
lret
mov
sti
ret
push
adc
jns
out
addr16
cld
mov
rol
or
mov
sub
dec
repz
not
fadds
pop
lds
xchg
loop
push
pop
sbbb
sbb
insl
dec
iret
mov
faddl
fwait
mov
rcl
sub
idiv
fiaddl
cmpsb
int3
mov
pop
cwtl
jmp
test
inc
dec
or
jno
xor
xor
addl
mov
xchg
aam
rorl
movsl
call
mov
xor
mov
xchg
or
push
xchg
in
xchg
fimull
call
push
test
push
mov
in
out
scas
int
out
loopne
inc
vpmullw
cmc
out
popf
inc
test
adc
and
cmp
scas
xor
rcll
enter
out
jl
es
in
mov
test
mov
out
add
mov
pushf
rcr
or
lods
mov
mov
ret
jmp
xor
cmp
push
imul
dec
push
out
and
stos
js
xlat
ror
jmp
inc
outsl
stos
lret
test
popf
push
in
jb
xor
xchg
movsl
push
pop
lahf
cmp
xchg
push
or
xchg
shll
cli
out
loope
jb
add
imul
dec
lea
gs
inc
sbb
insl
arpl
adc
xor
scas
clc
push
push
mov
fstpt
das
imul
dec
rcll
adc
test
fwait
shll
sub
dec
xchg
movsl
sti
inc
add
push
sub
loopne
pop
cmp
dec
mov
loop
xor
ret
mov
add
movd
or
sbbl
mov
or
or
add
jbe
test
xor
ss
mov
mov
test
inc
mov
lret
pop
imul
inc
pop
and
pop
arpl
pop
ficomps
jo
rcrb
cmpsl
push
or
push
out
mov
xchg
sub
sbb
xchg
ucomiss
pusha
sti
dec
shll
xchg
jp
sub
fiaddl
xor
lock
xor
outsl
cmp
in
negb
xchg
dec
sub
push
mov
in
dec
js
mov
ja
mov
lds
dec
jecxz
jnp
popf
jecxz
dec
mov
outsl
cmpsb
sbb
push
outsl
enter
push
in
ljmp
inc
xor
and
test
cmp
fcomps
mov
imulb
push
stos
rcrl
inc
mov
nop
pop
pop
jb
xchg
test
stos
bound
and
mov
test
outsl
insl
inc
push
jns
xor
cmp
push
xchg
push
jne
int
testb
aas
fsubs
fs
aad
in
nop
xchg
mov
add
cmpb
jmp
dec
jl
in
js
jbe
aas
dec
ss
in
into
fbld
cli
inc
ret
fists
repnz
lock
leave
lret
add
clc
push
in
push
pop
xor
xchg
cmp
sub
cmp
jmp
inc
mov
sub
or
cmp
push
cmc
xchg
rcrl
sub
fidivrs
lds
sbb
negl
inc
mov
outsl
daa
xor
rcl
xor
popf
les
push
dec
dec
push
pop
push
scas
jne
addl
ljmp
add
out
stos
aam
clc
test
enter
push
rolb
xchg
stos
cmp
les
repz
test
jle
jmp
add
pop
das
sbb
stos
ss
cltd
mov
jo
pop
xor
pusha
push
cmp
push
lea
les
ds
imul
jno
dec
xlat
es
jae
jle
inc
xchg
jb
addr16
hlt
lret
adc
push
imull
inc
mov
mov
push
data16
movsl
xor
mov
jle
mov
mov
rol
push
xor
sti
out
ds
in
inc
in
cmp
enter
out
jmp
jp
adc
add
pop
insb
pop
jno
pop
and
hlt
pusha
ret
pop
mov
mov
fisubrs
fldl
outsb
sub
enter
lcall
mov
jbe
mov
pop
dec
mov
xor
andl
add
prefetch
or
sbb
insb
pop
dec
and
out
or
negl
mov
push
or
cmpsl
or
add
mov
and
hlt
mov
or
push
jp
shrb
xchg
mov
mov
pop
in
push
sbb
fildl
jg
es
andl
lea
mov
andb
sub
cmp
pushf
addb
dec
inc
in
cmp
notl
mov
jp
daa
imull
call
sub
ffree
push
push
sub
pushl
mov
das
int3
in
add
push
daa
leave
xchg
mov
push
out
popf
or
inc
lret
inc
xor
lahf
jl
leave
pop
cmpsb
js
rcpps
aaa
jne
push
lods
test
inc
aam
mov
stos
fildl
jg
imul
inc
fscale
jb
negb
or
adc
push
add
test
cs
and
and
lcall
mov
inc
popa
faddl
push
stos
add
mov
jnp
int
pop
sti
iret
into
xor
loope
push
lods
cmp
dec
les
inc
movsb
scas
adc
jns
ret
sub
pop
mov
popf
lds
adc
adc
sub
ss
mov
jg
add
inc
xor
in
loope
push
jg
lods
adc
jbe
inc
mov
xor
fildll
sub
rorl
bound
popa
outsl
imul
or
jl
imul
and
sub
je
or
insb
fsts
mov
fdivs
lcall
push
sbb
pop
mov
ja
nop
sahf
inc
mov
out
ret
incb
cmp
mov
bswap
rcll
mov
cmpsl
adc
pop
jmp
mov
dec
stos
std
fisubs
xor
cmp
pop
fwait
push
sub
sbbb
dec
mov
cmp
je
and
add
jbe
mov
rcr
and
mov
or
rolb
aaa
mov
shrb
xor
add
in
fcomi
leave
or
faddl
mov
int3
push
in
fsubrp
xlat
leave
adc
out
add
mov
leave
inc
push
push
popl
fwait
xor
adc
movsb
cmpsb
or
add
in
cltd
das
lock
ret
push
pop
fsubrs
clc
in
sbb
outsl
xchg
jg
lea
repz
and
loopne
scas
aam
into
push
rcr
push
mov
sub
jbe
aam
jb
dec
lret
sbb
lods
push
test
sbb
fistpl
xlat
xor
xor
test
mov
push
fdivl
call
xor
and
dec
adc
jp
aas
rolb
nop
movsl
outsl
sub
xchg
sbb
insl
dec
dec
push
cld
mov
pop
aaa
imul
mov
subl
bound
dec
dec
rcr
dec
pop
mov
test
mov
adc
pop
sub
stc
push
push
dec
push
adc
cwtl
cmp
stos
xor
mov
push
fistl
notl
ljmp
jns
inc
lods
cs
fisubl
addr16
mov
iret
ret
jl
mov
bound
and
add
push
cmp
sbb
repnz
dec
outsb
fidivrs
push
std
sub
mov
xchg
jbe
adc
call
negb
cs
jp
test
es
jp
dec
jbe
push
sbb
pop
pushf
ret
dec
es
icebp
lods
push
and
stc
ja
cwtl
stc
fldcw
ret
sbb
cmc
stos
pop
pusha
test
inc
dec
xchg
jo
adc
aad
pop
insb
add
pusha
out
xchg
adc
cmp
andl
push
outsl
push
andl
sbb
vmwrite
dec
rcl
notb
xor
jl
and
es
push
mov
jno
imul
mov
push
cwtl
js
xchg
inc
jne
lods
sub
xchg
sarb
sbb
and
test
and
pop
xchg
xor
jecxz
jnp
scas
jns
call
pop
mov
outsb
shrb
push
mov
inc
pop
lods
das
mov
sti
inc
leave
aaa
into
ss
aaa
adc
lock
push
pushl
xor
xchg
and
pop
mov
push
jge
push
ss
pop
adc
inc
in
or
mov
or
arpl
jne
fsts
inc
in
cmp
fidivrs
movsl
mov
xor
ficompl
xor
inc
sarb
popa
mov
mov
popa
dec
adc
mov
fdivl
sub
cli
mov
push
popa
mov
mov
push
cmp
lahf
ficomps
mov
jnp
sarl
scas
cld
in
push
fstpt
adc
dec
dec
bound
sub
test
clc
clc
lds
sub
je
mov
outsl
adc
push
add
cld
cmp
cmp
sub
pop
sub
out
lahf
dec
or
jge
rcrl
je
sub
cmpsl
mov
push
cmp
push
out
paddsb
addl
sti
andb
adc
notb
cmp
adc
cmp
add
dec
and
int
mov
aas
sub
pop
xchg
or
mov
hlt
jo
inc
xchg
out
mov
jno
mov
jmp
push
pop
movsb
jo
inc
push
adc
dec
dec
adc
cmpsb
aas
ds
push
mull
mov
loope
sub
mov
in
jmp
addr16
enter
cli
push
scas
lea
test
dec
popf
xor
sahf
dec
and
adc
inc
lods
xchg
sub
sub
dec
mov
jle
pop
dec
nop
inc
mov
lret
insl
and
in
loope
sahf
in
test
outsb
push
in
cmp
mov
jb
scas
xchg
xchg
daa
stos
loope
adc
shll
cmp
out
or
adc
sbb
inc
adc
xchg
adc
cmpsl
in
mov
xchg
jge
test
or
sub
inc
outsl
mov
add
call
jae
mov
jg
and
sub
idivb
pusha
jl
add
sbb
scas
cmp
rep
test
clc
mov
cwtl
add
lds
call
rsm
fs
lahf
mov
inc
mov
and
pop
mov
call
dec
mov
inc
and
cmp
push
repnz
cmpsb
jecxz
sahf
jge
lods
xor
sbb
xchg
idivl
daa
cwtl
push
loop
out
nop
jae
call
leave
and
shl
rol
sub
clc
fcoml
and
ret
dec
shlb
jno
xchg
sub
sbb
mov
xchg
les
cmp
shr
movsl
and
lods
and
jae
adc
cmpsb
jns
fimull
leave
or
jb
movsl
jle
mov
and
cmpsb
jmp
mov
movsl
pop
ja
cmc
out
push
les
dec
lods
jp
jns
jo
pop
cmpsb
xchg
test
sub
adc
xor
stc
negl
js
test
fiaddl
adc
push
push
je
xor
lods
jbe
inc
movl
and
out
mov
jmp
ffreep
into
pop
push
adc
ss
cld
repz
and
leave
push
jno
ljmp
pop
mov
cmpsb
mov
ret
jp
fwait
leave
call
mov
shl
bound
cwtl
mov
std
xchg
cltd
data16
cmp
jle
sar
mov
sti
fisubs
or
dec
cmp
inc
scas
mov
stc
fsubp
sbb
pop
mov
out
dec
adc
xor
push
or
pop
cmp
mov
push
bound
xor
je
call
or
push
sub
mov
and
js
cwtl
push
ret
lds
push
mov
insb
mov
mov
jp
sbb
sbb
orb
pop
push
pop
mov
mov
pop
test
push
cmc
or
imul
push
sbb
mov
pop
mov
fidivl
xchg
dec
sub
xchg
mov
cmpsl
adc
xchg
clc
test
fbstp
dec
mov
setg
dec
rcrb
pop
lods
push
out
inc
dec
pop
jmp
mov
loop
adc
mulb
int
xchg
jp
pop
pop
mov
inc
pop
add
push
push
or
lea
les
repnz
jae
sub
rclb
mov
rcrb
mov
mov
das
shlb
cs
mov
mov
shlb
roll
mov
xorb
and
cmc
cwtl
inc
mov
enter
cld
shrl
adc
dec
push
sahf
add
in
adc
negb
lods
or
xchg
mov
test
mov
inc
adc
mov
lods
fidivs
nop
xor
in
sub
inc
lods
inc
inc
mov
popa
movsl
inc
add
in
add
shl
jo
mov
push
inc
pop
cmc
xchg
inc
or
std
or
shl
pop
test
fcmovnbe
mov
scas
cltd
in
or
jae
add
and
cmc
scas
ja
sbb
xor
cmp
and
xchg
and
inc
aaa
mov
sbb
lock
adc
or
dec
pusha
cmp
xchg
test
pop
leave
aas
xchg
lahf
mov
fistl
jp
aas
imul
and
jecxz
sub
mov
fucom
imul
or
sbb
sbb
sahf
fistpl
mov
and
push
adc
fisubl
mov
out
pop
fs
pop
sbb
rclb
stc
pop
dec
jle
cmp
dec
xchg
xchg
jbe
imul
into
cmp
xchg
xor
lea
cmpsl
sub
test
fdivl
das
into
xor
lea
enter
out
scas
mov
push
sbb
push
push
pusha
sbb
addb
cmp
pop
xor
push
cmp
hlt
clc
cmp
test
add
push
pop
xor
pop
and
mov
mov
pcmpeqw
inc
cmp
push
pop
pop
and
data16
push
out
je
lods
jb
das
add
mov
test
es
xchg
and
add
cmpsb
xor
jo
mov
jne
movl
push
cwtl
clc
cmpsl
into
dec
add
das
push
test
pop
mov
cmp
sbb
mov
sahf
jns
rclb
mov
psraw
std
int
push
mov
mov
jno
adc
add
cmp
bound
mov
xor
mov
in
in
les
mov
in
in
aam
rorb
pushf
lret
mov
push
mov
in
in
sarl
xor
in
mov
iret
lods
mov
in
in
add
mov
mov
outsb
cmp
mov
pop
mov
ljmp
scas
out
push
enter
fimuls
in
fwait
xor
adc
pop
mov
iret
filds
pop
les
dec
sbb
pop
jmp
cmp
jnp
outsl
xchg
add
mov
addr16
pusha
fldenv
out
int3
and
jmp
lahf
push
mov
push
mov
mov
sti
aaa
adc
lock
lcall
out
je
in
sbb
mov
jg
inc
in
mov
jecxz
icebp
cmp
jb
out
inc
inc
push
push
add
outsl
push
movsl
cmc
fsubs
push
dec
add
int3
leave
mov
daa
jne
hlt
daa
in
idivb
aad
cwtl
mov
pop
xor
ucomiss
mov
sar
sub
mov
out
notb
in
sub
push
and
mov
or
push
cmpsl
xor
inc
out
jns
mov
push
mov
lcall
fadds
jb
out
or
iret
sub
xchg
jecxz
xchg
dec
ret
mov
das
pop
aas
into
lock
adc
lds
nop
inc
test
call
push
push
out
xor
push
scas
out
cmp
xor
fiadds
or
leave
and
mov
lds
das
shrl
sbb
inc
push
in
add
ds
xchg
xor
out
mov
es
pop
pop
mov
xchg
loope
push
mov
imul
data16
push
inc
inc
pop
mov
outsb
xchg
cmp
outsl
lods
fimull
push
push
cmp
rcll
int3
stc
mov
mov
dec
dec
aaa
and
popa
jo
out
testl
or
sahf
ljmp
fs
or
fmull
insb
fdivr
cmp
jns
jnp
popf
out
or
xchg
cmp
imul
stos
xchg
pop
les
stos
loopne
add
jp
aad
dec
pop
mov
xor
jnp
mov
mov
pop
insl
repz
cmp
jns
out
negb
push
sbb
push
or
aas
xchg
popa
sub
fs
mov
mov
loope
adc
aad
jbe
add
mov
out
in
addl
movsb
pop
lcall
dec
sub
fisttpl
bound
xor
sub
jg
dec
adc
loopne
jbe
bt
es
mov
fmuls
sub
pusha
sbbl
enter
arpl
dec
jg
ja
rorl
aas
fsubl
lods
inc
sub
cmc
and
int
inc
repz
adc
ja
mov
repnz
inc
adc
jp
mov
mov
inc
js
pop
in
cmp
lea
xchg
imulb
out
test
jg
jecxz
mov
mov
sbb
xchg
and
lods
push
cmpsb
loopne
into
xlat
addb
icebp
cmpsl
mov
pop
repnz
pop
ss
fcmovb
cwtl
and
adc
negb
and
mov
mov
decl
pop
mov
push
cmpsl
push
pop
ja
adc
movsl
jle
mov
mov
sub
rclb
adc
and
xchg
cmp
sbb
mov
mov
lcall
xlat
in
daa
fistpl
movsl
hlt
adc
xchg
mov
outsb
mov
xchg
cltd
xor
aad
scas
sub
or
jbe
cmpsl
mov
cli
je
push
std
in
pop
xor
xchg
jne
test
daa
inc
pop
je
cwtl
inc
push
xchg
dec
cmp
out
pop
or
pusha
test
pop
jns
jne
decl
sbb
and
push
jge
inc
mov
fdiv
mov
mov
in
inc
fisttpll
add
sbb
das
xor
aad
xchg
or
je
imul
movb
daa
mov
fdivs
mov
or
sbb
and
sub
xchg
mov
push
negl
pop
cmp
fsubl
pop
xor
testl
sarb
fists
gs
push
pop
mov
ljmp
loopne
xor
hlt
jmp
cs
sbb
arpl
lcall
test
fwait
sbb
loope
clc
xor
mov
pop
jp
and
or
dec
sub
inc
cmp
ja
jnp
fwait
and
and
cs
popf
sti
sbb
jge
push
xchg
aas
into
dec
stos
fstpl
sub
in
xchg
cs
mov
dec
mov
push
sbb
scas
mov
mov
mov
imul
sub
hlt
loope
loopne
cwtl
mov
adc
and
aam
xor
xchg
mov
inc
xor
sub
adc
push
dec
popa
clc
rcrb
jnp
push
enter
xchg
popa
mov
movsl
insl
sarb
push
mov
mov
es
mov
divb
out
add
pop
fdivs
mov
popf
push
dec
bound
adc
mov
fstp
jb
sti
mov
adc
std
pop
mov
mov
icebp
sub
mov
pop
in
pop
dec
fstps
out
mov
aaa
fists
mov
outsl
jg
jbe
xchg
inc
cmp
nop
inc
add
pop
sbb
js
lahf
dec
pushl
jp
lock
xchg
mov
xor
jae
movsl
rorb
jp
aaa
leave
pop
mov
push
scas
ds
cmp
add
jne
xor
clc
fucomip
mov
das
sbb
aas
adc
and
sub
sbb
and
dec
inc
mov
insl
add
sbb
test
leave
nop
nop
fdivr
xchg
inc
data16
cmp
mov
arpl
dec
xlat
mov
xor
js
test
lods
xchg
and
out
lcall
pop
ret
mov
shrl
jecxz,pt
shlb
lock
ret
shll
pusha
pushf
add
fdivl
and
mov
xor
mov
out
shl
hlt
popf
cmc
adc
out
inc
fdivl
push
cmp
push
jne
sub
jbe
add
xlat
cmp
rol
ljmp
pop
sbb
dec
sub
and
sbb
mov
add
arpl
sbb
or
fldl
xchg
fldenv
sbb
imul
pushf
jle
inc
aad
adc
mov
into
sahf
subl
aas
test
shlb
jge
add
pop
daa
add
pop
dec
repnz
xor
pop
fldl
xchg
insb
cs
scas
dec
cwtl
and
or
cmp
and
xor
fsubl
pushf
enter
push
push
imul
and
andb
mov
or
and
lock
cmp
int
xor
movsl
arpl
insl
mov
cmp
mov
dec
mov
popa
and
dec
ret
clc
inc
sahf
mov
je
loope
add
cli
push
push
mov
jo
xchg
adc
mov
pop
ret
outsl
cltd
mov
btc
das
mov
xor
shll
lds
push
cmp
ljmp
jb
pop
loop
jl
pop
stos
sar
mov
mov
mov
pop
xchg
jno
sbb
mov
mov
mov
or
nop
icebp
jns
or
ret
pop
std
fmul
jne
fstpl
push
hlt
sub
imul
mov
or
or
dec
ja
xchg
sub
nop
jg
mov
sub
imul
mov
jl
pop
jecxz
in
push
aad
mov
and
test
inc
das
inc
dec
mov
jg
dec
inc
mov
imul
test
or
push
sub
rorl
and
jb
dec
insb
mov
mov
fmuls
pop
nop
insl
loope
push
cmp
daa
jmp
cld
xor
mov
dec
addl
xlat
test
pop
fisttps
sbb
popf
mov
cmpsl
ret
and
mov
pop
mov
cmpsl
in
xor
add
arpl
jp
jp
or
repnz
inc
jnp
orb
lret
mov
jmp
dec
flds
in
jl
xchg
jne
fsts
pop
push
and
fdivrl
mov
or
adc
in
clc
inc
popl
ficoms
xor
in
jl
shl
inc
lcall
nop
add
data16
adc
in
imul
mov
push
popa
xchg
testb
cwtl
fmuls
cs
outsb
cmc
xor
cmpsl
fistps
test
dec
hlt
pop
jecxz
popf
ss
dec
repnz
inc
add
adc
daa
rcll
dec
and
mov
cltd
sub
pop
pusha
lahf
cmpsb
popf
sarl
push
test
push
shrl
out
mov
and
push
in
sub
and
mov
cmpsl
testl
or
into
push
pop
ret
sahf
testl
imul
faddp
outsl
fdivr
mov
cmpsb
sbb
lahf
imul
mov
lret
pop
fdivl
and
lahf
in
mov
int3
pop
xor
pop
push
cmpsb
xor
arpl
ljmp
fs
or
dec
divl
sbb
mov
xchg
or
mov
pop
sub
dec
lea
movsl
push
mov
data16
repz
aad
enter
scas
icebp
outsl
push
cmp
jmp
mov
rorl
pop
icebp
testb
loop
or
push
loopne
aad
fiadds
xlat
mov
and
add
leave
gs
popa
test
xor
cmp
std
sahf
and
subl
stos
mov
rol
adc
arpl
outsb
test
sub
xchg
adc
addb
sbb
roll
dec
das
cmp
aam
mov
mov
in
and
jecxz
cs
lods
mov
fsubs
push
test
push
dec
icebp
add
cmpsl
add
adc
jg
cmp
add
cltd
std
into
push
mov
mov
jecxz
scas
and
aad
sbb
sub
add
pop
mov
mov
cmp
jns
mov
mov
and
into
and
jno
leave
int
arpl
addl
repnz
push
inc
int
mov
int
inc
je
arpl
sub
int
popf
dec
int3
and
mov
pop
lcall
lcall
fsub
xchg
in
xor
xor
add
imul
iret
sub
lret
mov
and
jns
xchg
out
repnz
ret
insb
scas
and
dec
add
or
xlat
and
popf
fldcw
lock
es
std
and
dec
subl
cmp
es
rolb
and
aaa
dec
aad
nop
push
insb
pop
popa
jl
mov
and
sub
test
cwtl
sub
pop
cmp
xorb
sti
enter
xchg
xor
insl
sub
pop
mov
cmpsb
lret
cmpsb
test
push
mov
sub
fst
sub
icebp
repnz
pop
sbb
xchg
sub
test
mov
data16
pop
and
mov
mov
xor
and
adc
pop
loopne
xchg
test
ljmp
ds
mov
mov
loope
setge
movsl
in
std
enter
fidivrs
jbe
int3
pop
sbb
adc
addr16
rolb
lret
divb
cli
rcl
or
push
mov
lds
dec
push
cmpsb
pop
push
test
push
cmp
ja
lock
or
adc
iret
and
mov
in
fcomip
mov
cmp
push
nop
pop
in
outsb
cmpsb
mov
mov
arpl
mov
out
pop
mov
in
and
std
jne
xabort
or
in
clc
fwait
xchg
adc
sarl
enter
imul
push
push
les
scas
push
mov
aaa
idivl
lods
in
and
sbb
gs
out
cmp
andl
arpl
push
inc
and
or
sbb
out
inc
das
leave
inc
out
cmpsl
sub
aas
cwtl
daa
mov
sub
mov
fildl
pop
scas
mov
mov
es
push
ret
in
mov
adc
loopne
out
shr
xchg
push
frstor
sub
enter
lock
lcall
out
in
in
imul
jecxz
ret
or
dec
mov
rolb
mov
jb
mov
test
xchg
mov
pop
mov
mov
out
cli
and
push
hlt
sbb
sbb
andb
in
ret
mov
test
mov
mov
mov
ljmp
mov
jb
stos
insb
pop
int3
dec
xchg
test
ljmp
movsl
mov
or
nop
xor
xchg
xchg
sub
mov
arpl
in
cld
jecxz
mov
pop
aaa
xor
inc
pop
imul
jne
push
clc
mov
rcll
repz
mov
sbb
pop
sub
mov
mov
idiv
pop
leave
push
pop
xor
in
push
xchg
dec
in
xor
psubsb
std
adc
and
addr16
cmp
fcomps
adc
mov
sbb
dec
inc
inc
inc
mov
repnz
sbb
out
std
mov
in
sub
or
adc
cmc
jge
jae
dec
pop
bnd
sub
adc
inc
cld
aam
enter
and
or
mov
push
inc
lahf
push
fcomi
pop
push
gs
dec
ja
gs
mov
cmp
cltd
sub
dec
mov
xchg
and
rcrb
push
fiadds
adc
mov
push
xor
or
loope
fimull
mov
cltd
ret
xor
sub
xchg
fstp
in
pop
lods
lds
clc
cmp
mov
mov
xor
cmp
adc
in
test
stc
mov
push
xchg
push
lcall
mov
mov
adc
xchg
mov
std
cmc
enter
ficompl
cmp
aas
cmpsl
rorl
adc
mov
push
cltd
or
adc
and
lods
test
add
sub
fisttpl
or
jmp
cltd
std
add
sub
push
call
out
dec
pop
enter
adc
sub
icebp
jno
mov
in
xorb
daa
sbb
stos
pop
outsl
push
cmp
inc
aam
icebp
cmp
push
push
mov
leave
iret
popa
xor
mov
pop
adc
test
dec
jle
mov
pop
dec
scas
nop
aad
xchg
push
cmpsb
test
out
mov
xchg
pop
mov
lret
jb
add
push
xlat
add
lret
dec
and
stos
cmpl
leave
or
js
lret
test
inc
mov
in
add
imul
mov
mov
push
mov
scas
inc
out
lret
divl
or
xor
pop
cwtl
xchg
jmp
jmp
dec
data16
es
out
cmp
les
pop
call
push
xor
popa
inc
icebp
dec
les
sti
fnstenv
stos
je
sub
fwait
push
push
call
movsb
lods
addr16
ret
or
xchg
stos
iret
and
pop
in
sbb
mov
repz
in
jl
stc
jmp
adc
out
push
push
and
pushf
rcll
and
inc
cmpsl
mov
fwait
std
jp
mov
int3
push
mov
addr16
cmpsb
inc
bound
mov
pusha
pop
add
mov
mov
repz
mov
outsb
xchg
loope
mov
imul
pop
adc
into
cmpsl
cs
pop
mov
jnp
pop
test
inc
cmp
inc
stc
add
shl
or
cmp
test
popf
je
or
mov
dec
xchg
sub
rcrb
movsl
xchg
das
mov
test
andl
push
adc
mov
push
loop
sub
cmp
loopne
mov
fcoml
inc
out
mov
jg
rolb
jne
sub
jge
jg
push
push
nop
adc
adc
test
push
insl
mov
js
push
shr
popa
dec
adc
notl
mov
push
gs
sbb
adc
lds
aaa
in
enter
call
dec
paddw
cmpsl
orb
mull
mov
in
cld
dec
xor
xor
mov
mov
xor
mov
xchg
and
imul
push
dec
push
dec
mov
loope
inc
mov
cs
out
mov
and
lock
out
lahf
pop
inc
or
xchg
insb
dec
jno
sbb
and
add
sahf
icebp
dec
sub
rcrb
cli
jg
pop
lahf
add
sbb
mov
mov
sahf
gs
lret
xor
pop
sub
loop
adc
fistps
adc
xchg
cmovne
bound
jno
test
adc
icebp
dec
aaa
sub
imul
ljmp
cmp
shl
in
xchg
or
push
dec
test
lret
jecxz
ljmp
fwait
xchg
pop
xchg
bound
popf
mov
iret
ja
adc
mov
idivb
push
xchg
mov
mov
jns
in
mov
fidivrl
loope
mov
cmp
enter
jle,pn
pop
gs
xchg
test
xchg
outsl
sbb
pop
jp
fld
pop
or
test
cmp
mov
xchg
in
jae
leave
in
das
sbb
or
mov
cld
cwtl
lds
add
mov
mov
xchg
jb
cmpsl
jl
add
sub
cmp
cwtl
xor
xchg
lcall
iret
pop
scas
cmpsb
cmpsb
pop
push
fwait
lcall
daa
mov
loop
push
adcb
sbb
jnp
out
icebp
mov
inc
in
push
outsb
int
mov
repz
in
scas
ja
hlt
xor
rorb
push
inc
rcrb
dec
mov
aas
inc
mov
iret
xor
rolb
movsb
addr16
pop
jae
mov
sub
stos
adc
ss
inc
pop
test
push
and
addr16
out
lahf
and
in
popa
push
add
insb
popa
dec
jne
stos
pop
mov
dec
gs
stc
adc
outsl
rclb
in
movl
sti
xor
test
fstp
xor
inc
jnp
mov
add
iret
or
sub
cld
mov
insl
aam
cmpsb
aaa
popl
test
popf
and
xchg
pop
in
cwtl
enter
out
cli
push
adc
jo
movsb
fwait
xchg
xor
and
ljmp
mov
stos
fcomps
stos
pop
sysexit
sub
jne
int
aad
jp
ret
push
aad
adc
fcompl
fildl
pop
filds
mov
lea
jmp
or
and
mov
adc
lahf
cltd
repz
xchg
xchg
cltd
add
andl
hlt
test
fiadds
jne
inc
cmp
lret
cmpsb
pop
cmp
or
mov
cmc
les
or
jne
add
sahf
dec
dec
adc
loop
inc
and
je
sub
ret
shll
pop
clc
adc
ss
mov
cmp
mov
dec
sbb
js
push
push
dec
sbb
xchg
cmpsb
sub
adc
mov
negb
std
sbb
mov
shrb
adc
aaa
inc
out
aaa
aas
inc
repnz
inc
daa
js
push
pop
push
lret
jae
out
addl
mov
aaa
clc
daa
xchg
in
mov
insb
test
cmp
pop
lcall
mov
lods
aaa
and
mov
mov
scas
jns
inc
jnp
mov
mov
daa
popa
pop
pop
repnz
ds
insl
push
aad
inc
jmp
add
scas
jne
out
mov
mov
out
jb
cltd
mov
mov
pop
scas
lret
dec
mov
fadds
sbb
push
jne
pop
cmp
mov
insb
mov
jmp
push
push
inc
mov
push
push
mov
dec
mov
and
decl
xchg
adc
arpl
ret
das
stc
inc
adc
pop
decb
or
data16
dec
out
mov
fdivrs
sub
push
jne
arpl
or
mov
jb
jbe
mov
out
repz
pop
sub
sbb
or
mov
mov
or
inc
loopne
les
or
fadds
jbe
jo
sub
cmp
leave
daa
in
and
pop
out
and
loop
in
cmpsl
sub
mov
cli
sub
xchg
lcall
in
mov
addr16
popa
mov
add
xor
shrb
push
js
dec
jp
jge
pop
xchg
dec
sub
inc
pop
dec
inc
pop
lods
xchg
or
fsubrl
and
imul
out
int
adc
and
jb
rcr
xlat
in
ja
lock
mov
sub
jno
out
out
out
in
out
stos
inc
clc
jle
iret
repnz
xlat
aad
xor
or
xlat
push
add
insl
ljmp
mov
dec
imul
insl
xchg
lret
sarl
mov
push
insb
inc
aaa
add
pop
test
int3
outsl
pushf
fs
fldenv
loopne
inc
dec
inc
mov
pop
jns
sub
push
shlb
mov
je
mov
jge
xlat
mov
fwait
xor
outsb
xchg
push
xor
ds
imul
jle
cmp
dec
inc
into
leave
sub
pushf
push
xchg
and
icebp
adc
or
cs
ljmp
sbbl
dec
mov
cmp
gs
jb
pop
ret
or
sub
enter
jnp
mov
lock
cmpl
pop
dec
dec
sbb
cli
mov
jmp
jb
mov
mov
sahf
in
ret
imul
and
popa
lret
jno
mov
cld
pop
jno
cmp
fistl
inc
xor
in
pop
push
imul
mov
xchg
mov
mov
int
mov
lret
aaa
cs
repnz
dec
dec
leave
fisttpl
push
in
inc
and
stos
xchg
sarb
out
aaa
es
std
lods
sbbl
inc
mov
mov
fistps
pop
pushl
lret
cli
adc
in
lahf
arpl
jecxz
mov
xchg
clc
mov
sbb
cmp
mov
cmpsb
mov
sub
cmp
outsb
cmp
push
jmp
cmc
xor
test
les
xor
cmpsl
and
inc
xchg
and
inc
xchg
popf
jb
loope
fmull
mov
cmp
mov
or
dec
int3
pusha
adc
cmp
sti
call
or
pop
adc
in
jbe
xchg
lcall
cmpsb
inc
iret
pminsw
and
insb
mov
mov
les
loope
fnstcw
or
xchg
lahf
inc
jno
or
arpl
adcl
inc
imul
add
enter
push
mov
in
dec
xor
sub
aaa
sahf
stos
adc
or
cwtl
outsb
xchg
scas
xor
mov
pop
leave
inc
mov
xchg
push
popa
movsl
mov
ret
imul
dec
jne
mov
xchg
loop
xchg
mov
push
fsubs
mul
cmpsl
je
es
jo,pn
jnp
call
inc
xor
pop
orb
pop
add
sbb
popa
inc
loop
loope
sbb
mov
dec
or
push
ret
js
aaa
sti
js
ja
aam
in
loop
dec
mov
and
push
push
pop
int3
out
dec
mov
lods
fnsave
jns
add
add
ds
or
sub
dec
arpl
sbb
pop
adc
xchg
insb
jnp
outsl
ss
dec
daa
or
jge
movsl
rolb
fdivl
and
push
inc
andb
in
and
lock
sub
push
lock
fimuls
xor
mov
xchg
cmpsb
pop
cli
sbb
ljmp
xchg
and
bound
aaa
incb
jmp
incb
shll
rcll
fnstenv
cs
push
or
lock
hlt
or
mov
sub
fimuls
mov
xchg
imul
rcrb
imul
mov
inc
push
adc
mov
pop
mov
loope
push
lods
test
pop
lods
fdivs
cmc
hlt
and
mov
jp
jb
and
jl
dec
adc
sbb
jno
fistpll
xor
aam
cli
push
add
or
in
fwait
inc
xchg
inc
cmp
mov
mov
cmp
add
jl
rolb
xchg
das
push
and
mov
mov
mov
jb
int
inc
sbb
int3
cmp
mov
jl
adcl
fdivs
sbb
cmp
js
shl
enter
adc
xlat
pusha
cmp
movsl
sub
add
mov
xor
xor
js
insl
out
outsl
cmp
push
outsb
add
dec
packssdw
rcrl
pop
push
jne
jg
and
mov
test
inc
test
lahf
subl
ja
xor
sub
xchg
clc
and
inc
aam
cmp
cmpsl
lret
add
popf
add
and
aaa
nop
mov
ficomps
mov
cltd
ss
mov
pop
inc
push
fstp
out
lcall
sti
popa
test
ret
rorb
cld
jns
lds
rorl
dec
ret
imul
arpl
sbb
dec
adcb
adc
std
bound
ja
pop
jle
cmpsl
jmp
lret
mov
pop
mov
xchg
adc
lds
js
pop
push
sbb
insl
into
outsl
test
mov
xorb
jo
or
les
arpl
mov
or
add
pop
std
push
pop
sbb
xchg
adcl
lret
aaa
push
sarb
adc
xor
adcb
and
inc
push
pop
mov
shll
cld
mov
push
les
or
mov
pop
fidivs
rcrb
mov
std
xchg
iret
test
adc
aas
leave
sub
sub
fsubrl
ret
jg
and
inc
cmc
and
cmpsb
push
pop
mov
push
arpl
jbe
out
les
sti
fisttps
rep
int3
clc
aas
fistpll
ja
adc
sbb
pop
push
data16
jecxz
es
dec
lret
inc
mov
inc
mov
std
aad
adc
into
fnsave
cmp
mov
xchg
pusha
mov
out
or
cs
aam
scas
cmp
hlt
mov
in
mov
hlt
movsb
mov
into
lock
std
loop
dec
dec
xchg
inc
les
mov
jp
insb
stos
fimuls
cmpsl
fildl
push
rcl
or
icebp
mov
outsb
xor
sahf
inc
pop
divl
movl
insl
and
js
into
subb
stc
xor
push
lea
bound
notb
xor
mov
pop
pop
sahf
adc
fwait
orl
out
jno
jge
addr16
xor
push
mov
loop
cmpsl
cmp
ljmp
add
xchg
dec
cmc
sti
gs
or
mov
mov
mov
adc
pop
lds
pusha
out
dec
sbbb
nop
les
fwait
je
lods
jns
adc
leave
jge
lods
add
mov
mov
push
leave
loop
sub
jecxz
mov
cmpsb
mov
mov
iret
sbb
xchg
or
popf
xor
clc
mov
fdivp
push
xor
xor
jmp
pop
loopne
les
dec
orl
test
jge
in
test
sbb
outsl
pop
sbb
jg
xor
inc
push
sti
loop
pop
cmp
xchg
in
or
push
jmp
sahf
inc
mov
xor
mulb
mov
sbb
mov
fsubr
out
pop
mov
and
rcl
or
inc
mov
cs
inc
sbb
dec
cld
pop
scas
xor
mov
pop
dec
test
lods
mov
andb
push
jnp
test
push
or
aaa
insl
cltd
inc
call
in
xchg
xchg
dec
inc
push
in
aam
xor
fsubs
sti
pop
cmc
dec
mov
adc
ljmp
inc
ja
inc
add
and
aaa
call
jecxz
bound
rcr
in
loope
xchg
adc
inc
xor
stos
adc
inc
iret
aas
inc
xchg
ds
pop
call
out
inc
push
ljmp
jnp
ja
dec
aas
adcl
mov
inc
roll
xchg
mov
repz
insl
lret
ret
lcall
test
das
iret
data16
add
mov
pop
icebp
pop
pop
sbb
fldl
pop
push
sub
mov
push
adc
hlt
cmp
pop
adc
pop
xchg
dec
hlt
add
dec
std
fbld
mov
mov
jne
shlb
push
jno
pushf
faddl
in
ficoml
insl
or
add
in
popf
mov
pop
pop
jo
int
and
push
iret
cmp
push
pop
mov
sar
adc
lret
pop
pop
jg
push
insl
and
add
arpl
fwait
outsl
sarb
push
sub
pop
data16
jne
jmp
pop
sub
rcrl
les
daa
sar
imul
ficomps
jb
je
int
cs
mov
xor
xchg
outsl
std
adc
in
mov
or
adc
out
mov
push
in
les
inc
sbb
jb
or
jbe
cld
pop
inc
imul
add
lods
pushf
mov
xchg
and
xor
xor
shrl
cmpl
aas
or
movsb
dec
push
into
dec
xchg
lret
aas
and
adc
arpl
sbb
jl
ficompl
inc
adc
lods
rorb
repnz
fs
sbb
jnp
cmp
mov
adc
and
adc
inc
hlt
xchg
and
jnp
aaa
enter
xchg
les
sbb
jne
shrl
mov
xchg
orl
lds
mov
sub
outsl
xchg
xchg
pop
add
xchg
mov
or
jne
notb
inc
movsb
jp
lahf
pop
jnp
insb
movsb
push
push
divl
push
jnp
clc
scas
xchg
mov
xchg
cwtl
cltd
cmpsb
push
add
xor
mov
add
sub
push
cld
adc
clc
pop
mov
mov
mov
jno
xchg
lcall
jne
mov
sbb
push
jmp
dec
fiadds
or
das
xor
sub
mov
fiadds
add
and
or
mov
scas
jae
dec
cltd
ret
jno
out
mov
aad
mov
dec
adc
les
mov
cmpb
mov
lods
xchg
pop
adc
or
push
lods
jbe
dec
inc
push
outsb
fsubrl
pop
push
sarb
xorl
sbb
dec
mov
cltd
aam
stos
fiadds
and
mov
pop
mov
or
das
mov
ss
mov
cmpsl
pop
dec
out
inc
lds
std
in
add
adc
mov
lds
ja
jo
fs
or
mov
xchg
jbe
add
popa
movsl
je
loopne
or
mov
mov
nop
lea
incl
mov
imul
js
popa
aaa
ficompl
jle
int3
ss
pop
repz
cld
adc
sbb
pop
inc
push
outsl
pushf
dec
cli
inc
inc
nop
sub
mov
fcos
incl
sahf
popa
adc
mov
jge
sti
mov
xor
out
insb
fwait
js
jmp
or
dec
mov
pushf
mov
ds
lock
cmp
je
fsubrp
push
icebp
addr16
mov
cmc
or
mov
adc
lds
decl
fisubl
or
jp
or
mov
and
pop
loopne
andnps
int
shr
xchg
insb
sub
push
push
fsubrl
push
in
sahf
mov
stos
cmc
roll
dec
mov
adc
mov
and
cmp
ret
sub
adc
xlat
stos
popa
xor
lods
divb
ficompl
leave
in
jl
mov
loope
push
dec
dec
jmp
pop
dec
int3
dec
sahf
xor
movsl
pop
jbe
cmp
jmp
inc
sub
push
mov
mov
test
mov
stos
xchg
daa
xlat
mov
out
and
add
sub
jge
fldcw
xor
fwait
cli
xchg
and
int3
mov
movsl
lods
fdivr
xchg
aad
jns
outsb
dec
pop
jecxz
shrl
dec
fnstsw
mov
pop
mov
push
ja
enter
iret
ret
adc
mov
pop
xchg
out
dec
or
push
out
enter
cmpsl
into
mov
lods
loope
cmp
and
inc
xor
mov
pop
mov
test
or
addr16
int
ljmp
mov
jmp
nop
jns
insb
jle
or
jl
testl
fcomp
mov
js
xchg
inc
js
push
ljmp
cmpsb
inc
int3
adc
sbb
dec
or
repnz
lret
mov
jo
push
iret
cmp
cld
sbb
xor
mull
outsb
add
cmp
dec
cmp
rcrl
outsb
adc
adc
inc
aas
or
pop
out
adc
or
push
pop
rcrl
sub
cmpsl
sbbb
and
mov
or
mov
cmpsl
dec
stos
mov
xchg
out
pusha
loop
cs
cmp
lock
cmp
pusha
movsb
push
not
xchg
cmp
jo
cli
in
outsb
or
sahf
or
push
ret
inc
mov
test
orl
sbb
mov
dec
stos
jp
jbe
push
test
notb
jnp
sti
aaa
movsl
das
outsl
or
mov
pop
dec
dec
pop
mov
dec
es
test
into
sub
push
push
test
pop
mov
cmp
fstpl
add
pop
pushf
inc
arpl
pop
mov
dec
icebp
push
jg
mov
jne
cmp
mov
in
cmpl
cltd
fdivl
push
sti
sub
ficoml
jbe
lret
sub
aas
dec
insl
aas
inc
or
mov
cmpb
xorl
fwait
push
inc
push
add
loopne
jne
adc
and
pushf
pop
test
lret
cmpsb
sub
adc
xor
add
repz
clc
lret
and
push
cltd
jge
imul
in
outsb
xchg
sbb
jge
add
ljmp
mov
sbb
jmp
mov
lods
add
pop
scas
jg
loop
xchg
insl
sti
pop
fs
scas
scas
cmp
push
leave
mov
test
sbb
pop
sub
mov
mov
xor
sbb
or
mov
mov
adc
in
mov
fs
outsl
fistps
sub
lret
inc
addl
imul
jmp
adc
jo
adc
popa
arpl
fadds
push
inc
lcall
xchg
outsb
or
adc
mov
dec
mov
call
sub
xchg
out
cmp
jecxz
inc
mov
inc
mov
jns
lds
cmp
loop
adc
sbb
lret
inc
les
xchg
sub
ja
out
iret
pop
decb
in
test
mov
leave
xorl
nop
sbb
or
sbb
dec
xchg
pusha
cmpsb
fwait
xor
push
xor
pushf
inc
lods
ss
mov
packssdw
ljmp
dec
roll
aad
xchg
sbb
mov
mov
std
jle
nop
mov
mov
outsb
xchg
add
and
cwtl
int
fadd
imul
stos
pop
push
es
in
pusha
pop
ficompl
pop
pop
call
mov
idiv
inc
cmp
fstl
gs
push
add
mov
jae
xor
add
stc
js
pop
int
addr16
ret
iret
loop
pop
stos
mov
daa
mov
add
loop
ret
fnsetpm(287
data16
sbb
jl
sbb
dec
scas
ss
lea
mov
cmpsl
inc
or
mov
adc
lods
lods
mov
xchg
jecxz
ss
pop
add
push
dec
pop
out
add
or
into
pop
sti
and
jae
imul
fdivp
fsubp
sbb
pop
jge
xchg
pop
mov
xchg
cmpsl
xchg
push
ja
dec
outsl
sar
push
mov
xor
shll
out
cmc
cwtl
pop
idiv
push
adc
aaa
mov
out
adc
adc
cmpsb
adc
rorb
and
jb
and
xor
cli
add
popl
or
xlat
test
mov
shlb
out
mov
push
js
jmp
lahf
scas
sbb
jp
movsl
dec
out
jno
fimull
and
std
or
sub
pop
stos
fwait
xchg
dec
jne
jns
mov
adc
add
mov
fimuls
mov
inc
bound
adcl
stc
aaa
aas
sarl
pusha
frstor
call
fcomps
sub
dec
push
test
das
outsl
jg
cmp
dec
mov
scas
rclb
out
call
push
scas
xchg
sbb
lods
sub
out
scas
add
adc
fstp
shrl
fbstp
inc
dec
sub
aad
pop
js
jb
jge
cwtl
stos
ret
lock
imul
dec
bound
stc
aam
inc
jae
gs
std
cmp
dec
xchg
mov
inc
ret
fwait
inc
imul
mov
fadds
aaa
ja
lods
mov
cld
mov
adc
xchg
push
aad
out
mov
pusha
push
push
jno
adcb
sub
pop
cmp
sub
push
dec
cmp
scas
xchg
fisubs
pop
pop
jle
cmc
jns
dec
dec
fiaddl
push
or
push
lods
std
jae
fucomp
jmp
jbe
iret
mov
pop
pop
icebp
les
add
sbb
cmc
test
adc
ret
xchg
fldenv
cmp
in
nop
fdivrs
inc
out
pusha
xor
gs
lret
push
mov
sub
and
mov
dec
mov
stos
jae
stos
pop
imul
cmp
in
aas
push
je
inc
xchg
mov
cmp
jb
repz
pop
mov
sbb
icebp
test
mov
leave
stc
loopne
push
push
mov
aam
mov
dec
xlat
mov
js
fdivr
jo
push
ror
mov
sbb
mov
movsl
cmp
lock
daa
inc
in
test
mov
ljmp
xlat
pop
mov
arpl
xchg
in
fsubrl
and
aaa
scas
pusha
mov
xor
xchg
ljmp
popa
imul
fsubl
mov
rcll
jne
push
cli
mov
cmp
es
icebp
mov
mov
cmp
xchg
test
inc
sbb
inc
movsb
cmpb
sti
cmp
mov
adc
movsb
adc
lock
push
mov
test
out
jb
stos
popf
mov
sub
fwait
mov
xchg
lock
pop
mov
push
jnp
jno
mov
pop
mov
je
inc
sub
sub
cmp
mov
or
movsb
lea
fadds
mov
push
pop
cmpsb
pop
pop
jmp
popf
dec
movsl
int
dec
mov
xchg
faddl
jnp
jno
mov
ret
cmp
pop
test
cli
add
ret
sahf
sbb
dec
xor
xchg
jo
mov
sbb
loopne
into
popa
dec
xchg
xchg
flds
adc
incl
mov
aad
add
clc
add
xor
xor
push
data16
jecxz
popa
mov
cli
inc
mov
call
jae
in
std
cmp
adc
mov
inc
mov
addr16
sub
xlat
fildll
lret
mov
jne
jp
sub
pop
pushf
rorb
mov
inc
xchg
add
sub
nop
popa
adc
popf
icebp
dec
dec
mov
add
inc
cmp
fucomip
clc
xchg
jns
jecxz
push
int
nop
ds
lcall
lods
loop
xchg
and
pop
or
enter
and
loopne
fidivl
sub
mov
pop
inc
pop
es
mov
xchg
icebp
pop
add
ja
push
sbb
add
pushf
and
nop
or
mov
adcb
push
add
inc
fstps
scas
push
or
ret
and
mov
sahf
sbb
cld
or
or
adc
xchg
sub
pop
sub
mov
or
cmp
cld
sub
popa
mov
addb
sahf
push
dec
popa
shrl
pop
fisubs
fmul
xchg
push
aam
add
and
or
das
inc
sub
jnp
subb
int
fnstenv
andb
mov
push
xchg
jnp
mov
xor
jecxz
add
mov
leave
xchg
fistps
out
mov
adc
mov
xchg
adc
andl
and
out
sub
mov
lret
pop
rcrb
mov
andb
push
out
xor
mov
cmpsl
mov
xchg
jne
xchg
and
jnp
mov
bound
inc
popfw
xchg
dec
mov
mov
xchg
mov
mov
inc
or
shr
nop
vandnpd
mov
rorb
ds
pop
mov
xor
mov
ret
rcrl
adc
imul
push
mov
insl
mov
mov
pop
lcall
out
adc
sbb
test
push
cmc
add
stc
xor
sbb
mov
into
adc
out
and
jg
mov
aam
ror
rorl
inc
rcll
jbe
cwtl
fwait
mov
aaa
stos
add
adcl
repz
jnp
pop
sbb
in
pop
push
add
cltd
movsl
or
imul
push
shll
sub
and
xor
add
inc
outsb
repnz
mov
outsl
mov
dec
xor
pop
incb
fs
ljmp
push
add
out
jmp
xor
mov
sub
call
stc
pop
inc
out
jle
jae
sbb
ss
or
dec
gs
sbb
or
sahf
jne
jmp
push
insb
mov
leave
xchg
inc
mov
shl
sbb
enter
lea
push
mov
mov
insb
sub
dec
or
jns
fldt
aaa
push
popf
sub
ss
add
cmp
mov
clc
sti
mov
mov
movsb
nop
es
xor
or
sbb
mov
imul
add
test
call
rcl
into
lods
movl
in
jns
push
mov
dec
or
adc
notl
sbb
scas
push
jmp
ret
in
mov
xchg
pop
xor
pop
xlat
mov
outsl
lock
mov
out
fcoml
xchg
nop
leave
or
sbb
or
test
mov
cmp
xchg
pop
mov
bound
lret
out
int3
iret
sahf
es
fidivrl
and
aaa
xchg
popa
adc
call
imul
bound
push
mov
les
dec
mov
sar
test
dec
pslld
stc
jg
add
in
add
inc
icebp
stc
sub
fiaddl
lret
ret
loop
mov
into
or
pop
inc
loope
dec
andl
xor
idivb
inc
jo
movsl
add
push
pushf
ja
cli
std
and
mov
add
in
jo
lock
dec
in
pop
data16
jle
cmp
or
lret
mov
fcomps
jl
and
sahf
lock
inc
push
and
mov
pop
sub
int3
mov
add
out
sub
imul
push
addl
aaa
aas
loopne
mov
pop
mov
ljmp
pop
mov
push
xorl
xor
cmp
or
out
in
out
leave
addl
cmp
sbb
rcr
xchg
cmp
and
and
xchg
or
push
mov
int
pop
cmpsl
lret
scas
lea
daa
sbb
dec
add
cltd
or
data16
mov
pop
fistl
dec
jb
shlb
jg
inc
cmp
add
mov
ss
push
xchg
aaa
movups
aam
sbb
test
in
xchg
mov
pop
aad
aas
dec
adc
setg
ret
rep
or
lahf
jne
pop
cwtl
pusha
xchg
inc
lret
les
and
xchg
mov
mov
push
aas
xchg
pop
arpl
mov
ss
or
xchg
pusha
test
jge
cs
repnz
cmc
ljmp
sbb
fnstenv
xor
mov
ljmp
fistpl
jbe
test
mov
fcoms
pop
lods
and
or
sub
inc
sbb
stos
pop
lret
arpl
mov
ljmp
ja
mov
dec
jmp
sar
hlt
out
inc
cmp
xlat
aaa
decl
push
push
xor
mov
cmp
adc
push
sbb
jmp
arpl
ficoms
inc
repnz
or
les
test
loope
std
fildll
xchg
adc
and
sub
aas
sub
cld
fisttpll
arpl
adc
push
mov
pop
clc
sbb
xchg
test
xchg
lcall
aad
ret
lret
clc
adcb
sub
mov
dec
ljmp
outsl
aam
xor
cmp
arpl
and
dec
xor
out
sbb
pop
mov
bound
cmp
in
addl
repnz
push
aad
stos
nop
flds
iret
mov
xchg
cmp
push
inc
xor
mov
inc
sti
mov
outsb
faddl
jbe
clc
push
movsl
jl
enter
mov
adc
cmp
mov
aaa
lds
addr16
xchg
rcrb
jno
je
jp
adc
into
xchg
sbb
mov
jl
inc
add
stos
push
inc
sahf
in
fwait
and
data16
dec
sbb
pop
lcall
aaa
jl
js
adc
xchg
pop
lret
les
jecxz
in
sbb
pop
fwait
cmpsb
adc
push
andb
xlat
push
cmp
into
add
scas
fwait
push
es
push
xchg
test
and
and
subb
out
pushf
loopne
push
add
in
jmp
push
and
add
cwtl
sbb
xadd
xacquire
inc
pop
mov
push
and
cli
push
loop
or
lods
xchg
mov
cld
mov
pop
lret
scas
push
scas
sbb
xor
mov
std
dec
lcall
aas
or
sub
adc
cmp
or
cmp
out
lret
xchg
mov
mov
pop
and
call
sarb
mov
xchg
cmp
popl
dec
mov
insl
inc
mov
push
sti
mov
shrl
jl
leave
enter
adc
sbb
mov
lods
leave
call
lods
add
xchg
mov
gs
inc
hlt
scas
shrl
popf
movsb
sub
sbb
mov
xor
cwtl
int
pop
push
mov
int3
pop
push
mov
xchg
in
aad
roll
push
dec
js
push
mull
jo
pusha
adc
cmp
xchg
adc
int3
mov
aaa
xchg
jnp
faddl
mov
cld
pop
cltd
xchg
fsubr
data16
arpl
mov
pop
stos
call
movsl
mov
cmpb
or
mov
testl
xchg
out
fmuls
mov
mov
fsubs
jge
pop
imul
mov
ljmp
inc
mov
pop
int3
dec
push
inc
xchg
xor
adc
sti
jp
idiv
faddp
out
inc
or
enter
roll
or
sarb
xchg
mov
dec
jo
movsl
lods
xchg
jle
adc
loopne
in
xchg
mov
or
rolb
add
xorl
jb
inc
pushf
push
dec
mov
or
dec
adc
add
scas
cmp
cmpsl
pop
add
fsubr
xchg
dec
in
cmp
mov
inc
scas
xchg
popa
add
popa
cmp
in
push
call
movl
sub
mov
push
loope
pop
test
cli
push
jge
int
flds
or
adc
call
sbb
fmuls
or
addr16
fisubrl
sub
push
jmp
adc
es
mov
mov
pop
and
jecxz
roll
jns
xorb
insb
jnp
repz
rorb
ret
call
shrl
cmp
addr16
inc
sbb
bound
lret
push
add
shufps
jge
into
pop
push
mov
push
mov
fsubl
mov
push
or
rep
stos
mov
pop
sub
clc
cmpsb
leave
in
ljmp
jns
imul
inc
sub
fnstenv
ror
stos
cmp
push
repz
mov
popaw
or
inc
add
or
mov
cwtl
or
adc
ja
sbb
mov
stc
ja
rcll
pop
subb
mov
adc
mov
add
cmpsl
mov
fisttpl
jb
loopne
in
out
jnp
les
push
jmp
push
add
stos
sub
push
subb
push
and
fcmovne
xor
jnp
xchg
std
mov
sbb
push
pop
cmp
jp
or
fnstsw
shlb
inc
jns
dec
or
inc
lret
mov
aaa
outsl
fwait
dec
mov
lret
arpl
out
not
in
out
loopne
and
test
int3
js
add
out
sbb
and
cwtl
adc
pop
push
mov
fidivl
jae
mov
shlb
in
sbb
push
push
decb
dec
xchg
push
lock
ss
movsb
xchg
xor
ret
push
sbb
jecxz
lods
iret
shll
out
jp
cmpsl
imul
mov
and
cld
add
cmpsb
lahf
mov
imul
mov
lret
push
in
mov
pop
push
cmpsl
dec
insb
cmpb
addb
cvttps2pi
and
xor
pop
inc
mov
sbb
mov
in
movsb
sbb
test
ret
addr16
jg
test
mov
sbb
sbb
sub
xor
rcll
add
pop
iret
fsubs
fstpl
or
inc
pop
ljmp
mov
add
or
mov
loope
mov
cmp
sbb
push
adc
xchg
in
fnstenv
insb
cmp
lds
out
mov
mov
std
jp
stc
fadd
loopnew
jle
push
mov
add
mov
mov
pop
test
stos
xchg
or
inc
cmp
and
push
in
cmpsb
sahf
icebp
push
and
sahf
inc
jp
in
add
daa
std
jns
mov
mov
push
testl
cmp
fidivl
ljmp
and
je
outsl
sub
pop
push
sub
xor
push
push
es
sub
xchg
jnp
aam
stos
mov
sahf
push
dec
mov
outsb
leave
lret
adc
pop
adc
push
mov
sbb
push
inc
int3
test
adc
inc
xchg
rorl
cltd
jl
push
or
sarb
je
xchg
fmuls
daa
je
das
xor
lahf
in
ss
loop
test
pop
sub
bound
lds
nop
mov
add
mov
xor
pop
rorl
xchg
loopne
les
adc
xor
icebp
lcall
cmp
mov
stos
std
jbe
pop
insb
cmp
je,pt
push
sub
mov
arpl
mov
mov
sbb
mov
lods
or
cmp
sbb
gs
and
aam
lds
mov
js
xchg
adc
mov
popa
mov
fcompl
push
mov
jge
mov
gs
sub
loope
mov
sub
add
imul
sub
shll
push
mov
mov
repz
cli
leave
mov
mov
fucomi
clc
xlat
jl
out
dec
or
sahf
xchg
xorb
aaa
std
insb
sbb
js
fistps
xchg
cli
test
orb
test
lahf
xor
or
test
adc
xchg
push
xchg
lock
idivl
jl
inc
lcall
and
sbb
ror
icebp
enter
lahf
in
mov
sarb
xchg
cmpsl
filds
cltd
sahf
or
jb
mov
push
jnp
or
mov
divl
test
mov
inc
scas
push
cltd
jmp
mov
adc
cmpsl
push
dec
inc
jns
jle
rcrb
je
fistps
cmp
push
inc
popf
inc
pop
in
dec
or
pop
ds
shl
xor
xchg
cmp
or
out
sub
mov
jno
nop
xchg
jle
out
inc
fprem1
push
sub
rorl
sub
iret
sbb
ret
in
mov
sbb
adc
icebp
pop
add
mov
sub
mov
sahf
idivb
mov
cwtl
shll
push
stc
inc
nop
arpl
aam
cmpsb
aas
int3
inc
or
stos
push
fucomp
inc
aas
xor
aam
dec
inc
fidivrs
outsl
addr16
into
stc
movsb
mov
xchg
mov
outsl
fstps
pop
cltd
jae
lcall
test
push
ret
mov
xor
mov
js
cmp
jmp
movsb
jg
jecxz
div
xor
dec
sbb
insb
test
jne
pop
nop
mov
mov
push
test
insl
mov
mov
push
fnstcw
jmp
out
repnz
pop
mov
ret
sarb
jo
push
mov
mov
jmp
popa
rol
insb
lock
sti
jno
push
clc
push
add
xchg
adc
push
adc
in
lcall
addl
aam
daa
in
pushf
jg
ffreep
mov
icebp
mov
push
fbstp
mov
into
push
lds
and
fs
mov
cmp
jo
add
push
push
push
outsl
fiaddl
mov
adc
ret
js
jg
icebp
cld
test
push
pop
call
cmc
xor
adc
lahf
xor
mov
xor
aaa
insl
lret
enter
in
sub
repnz
jp
cld
into
rcrl
les
sbb
les
cmp
sub
test
adc
mov
out
push
jno
add
icebp
mov
insb
test
clc
and
addr16
outsb
dec
sbb
jge
dec
dec
cs
pop
jecxz
push
jb
sti
sbb
jo
daa
push
mov
int
scas
stos
adc
xor
and
rcrl
and
jp
daa
sub
pop
aam
arpl
push
adcb
add
int
clc
mov
mov
cltd
pusha
push
pop
add
lock
sbb
ss
push
cld
ja
pusha
stos
dec
sahf
sti
sbb
inc
cmp
pop
push
lods
arpl
xor
push
push
out
cld
stc
dec
out
cmpsb
lahf
mov
mov
adc
filds
data16
sbb
xor
loop
mov
cmp
xlat
pop
repnz
mov
pop
shl
insl
jbe
inc
out
int3
scas
xchg
call
jmp
fdivrs
pop
and
shll
adc
imul
mov
xor
out
jbe
adc
xchg
pop
and
mov
inc
push
int
mov
ret
sub
stc
aad
ret
and
loopne
mov
inc
lods
mov
enter
mov
xor
mov
jns
icebp
adc
or
jl
dec
cmpsb
in
xlat
insl
arpl
out
fs
ret
sub
data16
mov
out
mov
sbb
adc
cmp
push
les
mov
stos
daa
jg
test
mov
leave
mov
test
jl
xchg
rcrl
xchg
clc
dec
aam
idiv
movl
push
dec
orl
getsec
in
xor
jo
push
mov
fucomip
cmp
xchg
dec
out
cmp
loope
call
sub
cmp
mov
int3
jmp
fcomps
jne
mov
mov
push
fsubs
loop
inc
jle
adc
cli
sahf
xchg
sub
dec
js
shrb
dec
aad
push
stos
and
or
dec
pop
ds
or
bnd
xor
mov
outsl
in
repnz
enter
adc
sbb
xor
rol
sbb
mov
dec
ja
mov
sub
or
mov
fidivrs
mov
lods
mov
xchg
pop
mov
cmp
push
mov
testl
xor
or
dec
pushf
mov
dec
pop
nop
or
pop
mov
push
inc
jno
aaa
js
sub
dec
ds
outsl
cmp
rcrl
test
or
mov
out
cmp
loopne
mov
pop
leave
adc
pop
je
dec
pop
dec
adc
sub
and
push
pextrw
stos
lahf
inc
stc
pop
dec
mov
and
xchg
outsb
xchg
pop
mov
dec
movsl
dec
scas
in
inc
cmp
psrlq
rorb
call
and
inc
mov
pop
jae
jg
jg
cmp
movsl
add
psrlq
cmpsl
pop
lds
mov
popf
outsl
rclb
push
push
jno
jne
jns
xchg
stc
test
mov
xchg
jo
jns
in
inc
leave
push
mov
adc
iret
cmpsl
fnop
pop
dec
ja
dec
sub
dec
icebp
mov
popf
sbb
decb
sti
cltd
nop
add
push
hlt
xchg
dec
pop
xchg
nop
rorb
movsb
push
scas
clc
incb
add
add
mov
addr16
scas
jbe
mov
sbb
test
mov
sbb
mov
push
test
inc
adc
cltd
dec
inc
jo
fcoml
fisubl
js
lret
movsl
cmp
sbb
or
jl
aas
shl
inc
out
or
sub
or
and
xchg
insl
scas
push
fisttpl
and
sbb
push
popf
mov
imul
jle
jp
pop
mov
test
adc
enter
fistps
sub
rcr
xchg
mov
dec
mov
inc
pop
scas
push
dec
or
lds
pop
xor
mov
idivl
mov
popf
xlat
pushfw
and
adc
gs
out
sub
lea
push
or
sarb
mov
cmp
decl
test
mov
xor
ss
decb
xor
arpl
test
loop
jmp
inc
loope
int
xor
jge
sub
inc
dec
inc
mov
jne
add
xor
sti
rclb
jl
repnz
jns
inc
pop
movl
pop
sti
notb
insl
mov
cmpb
or
pop
cld
pushf
aam
cmp
xor
xchg
xor
sub
push
mov
shlb
jo
pop
movsb
stos
xchg
out
icebp
ds
out
add
faddl
mov
lret
addr16
sub
jp
test
dec
ljmp
adc
in
add
jo
into
cwtl
mov
testb
push
test
jle
mov
test
out
xchg
inc
mov
cmp
mov
mov
neg
cmp
cmp
sub
sahf
pushf
or
jle
cwtl
cmp
add
cwtl
jecxz
out
push
lds
jo
aad
mov
xchg
rorl
call
inc
lds
ja
repnz
out
bound
dec
frstor
mov
adc
xchg
add
pop
and
push
jge
aam
add
push
sub
and
and
mov
lret
inc
idivl
cmpsl
aas
push
lcall
lds
jb
bound
mov
cmp
adc
stos
inc
jmp
adc
dec
leave
fwait
xlat
out
sbb
mov
scas
je
int3
cs
popf
adcb
and
cltd
mov
popf
lret
inc
add
jbe
ss
stos
lret
jb
add
and
test
pop
sbb
push
lea
pop
xchg
xchg
adc
fwait
pop
addr16
cwtl
fs
mov
mov
sub
test
pop
cmpl
aas
out
out
mov
cmp
xchg
sti
adc
push
test
pushf
mov
ror
int3
xor
cli
lahf
sub
repnz
dec
ja
mov
fidivs
inc
adc
mov
inc
dec
adc
mov
stc
lret
js
push
add
xor
xchg
xchg
daa
mov
cmp
arpl
addr16
mov
enter
lods
mov
in
in
add
pop
dec
cmpb
stos
cmpsb
and
pop
es
sbb
loopne
jmp
call
and
pop
and
sbb
mov
enter
jge
movsb
inc
xorl
xchg
xchg
cltd
mov
sbb
cld
mov
sbb
xor
push
inc
jb
ljmp
mov
outsb
fsubs
jl
push
jnp
hlt
je
push
shl
pop
gs
sub
cwtl
addr16
pushf
fdivs
jb
aam
adc
mov
int3
push
and
enter
sbb
dec
insb
pop
negb
lods
sub
pop
xorb
add
adc
jb
je
fcomps
rolb
sarb
fsubrp
push
cld
pop
pop
movsl
or
mov
mov
mov
adc
dec
pop
dec
xlat
ror
xor
mov
dec
inc
icebp
and
or
fs
mov
xor
orb
lret
mov
dec
pop
and
rcr
aaa
test
orb
lcall
xchg
movsbl
push
inc
pop
insl
outsb
adc
adc
inc
iret
scas
dec
adc
jg
mov
dec
xchg
jbe
push
lret
outsb
lods
shll
hlt
jbe
inc
xchg
nop
xor
cld
jle
iret
lahf
lret
xchg
push
pop
xchg
lods
and
out
stos
sbb
das
test
ja
cltd
pop
mov
xor
out
jle
shlb
jae
sahf
pop
es
insl
jmp
ja
push
adc
xchg
mov
push
adc
xchg
cmp
mov
xor
mov
mov
mov
scas
bound
mov
push
bound
scas
adc
add
xorb
adc
jg
push
sbb
and
mov
cli
loope
adc
and
jmp
loopne
and
aaa
call
into
ret
push
jmp
mov
pop
clc
lock
add
pop
repz
insb
int
mov
or
add
lods
inc
pusha
add
call
ja
xor
adc
rep
bound
pop
dec
xchg
call
pusha
pop
test
mov
inc
pop
pop
rorb
inc
sub
gs
pop
and
jle
out
sub
push
sub
inc
jg
cld
adc
out
push
test
stos
out
inc
sbb
shll
leave
pop
inc
inc
repz
inc
or
pushf
lret
pop
push
xchg
inc
jne
aam
mov
pop
mov
or
jmp
pop
jge
xor
rclb
insl
mov
sub
xchg
or
negb
inc
push
pop
mov
notb
sbb
rorb
popa
lret
popa
lret
jmp
push
xor
xchg
dec
or
cltd
push
cmp
xorb
xchg
inc
cmpsb
pop
inc
or
out
rcll
jno
xchg
or
inc
push
pop
adc
ret
mov
popa
push
out
xor
pop
and
mov
lea
inc
hlt
adc
jbe
pop
pop
loope
jge
fidivl
adc
xchg
pop
push
mov
jecxz
inc
sub
dec
mov
and
aas
cmp
add
push
enter
bnd
dec
cmp
add
rcr
xchg
loopne
jno
and
mov
push
pop
jmp
ljmp
and
pop
test
loop
cmp
add
repz
mov
leave
lcall
xchg
cmpl
push
lahf
and
daa
cwtl
dec
repz
mov
and
stos
fldl
mov
mov
mov
iret
inc
out
test
inc
test
fwait
xor
icebp
push
shll
push
mov
jno
scas
stc
aam
sbb
inc
mov
pop
push
inc
add
adc
mov
imul
add
dec
mov
mov
or
mov
fsubs
addr16
mov
fcmovu
add
xor
pushf
adc
adc
in
lea
push
sub
cmc
in
mov
sbb
jl
mov
sbb
lds
les
insb
jle
pushf
pop
mov
pop
lret
cmp
xor
cmpsl
lods
das
add
lods
fldl2e
cwtl
test
stc
push
adc
inc
jl
imul
scas
outsb
jecxz
cmp
mov
and
cmpsb
and
mov
mov
out
mov
push
adc
cmp
addr16
cld
lret
call
bswap
test
sti
push
dec
sti
sbb
in
pop
mov
mov
movsb
xor
test
push
aaa
or
mov
idivl
arpl
adc
sub
sbb
pusha
cs
nop
nop
enter
test
ljmp
or
mov
or
mov
mov
add
pop
push
je
inc
sbb
movsb
loope
or
xor
popa
mov
add
and
pop
into
fsubs
shll
imul
jnp
xchg
aaa
pop
ret
or
xchg
les
xor
xor
and
outsb
mov
xchg
aas
incb
aas
shll
push
out
dec
out
sub
fsubrl
jecxz
mov
and
and
fstpt
movsl
dec
adc
adc
xchg
jmp
mov
in
pop
sub
inc
or
movsb
cli
imul
sub
nop
mov
pop
jae
loope
xorl
jb
cmp
xor
repz
jb,pn
dec
in
push
add
pushf
or
add
pop
sbb
or
cmp
push
pushf
lock
push
jns
mov
pminsw
xor
push
das
xchg
in
push
mov
jo
adc
jae
lods
or
fldl
or
xchg
popa
lods
out
jo
mov
or
sbb
pop
pop
xor
aad
jecxz
stc
outsb
sub
stc
fstl
ret
or
movsl
popf
and
fisubs
sbb
jae
out
aad
mov
stos
inc
jne
xchg
leave
int3
enter
xchg
lods
mov
cmp
leave
test
out
mov
ja
lret
push
xor
or
xlat
stos
lods
dec
insb
cmp
test
out
add
inc
push
xor
lea
popa
add
es
mov
stos
sarl
push
sub
call
mov
dec
or
mov
xor
pusha
arpl
mov
adc
or
xchg
in
jge
and
mov
adc
mov
std
mov
inc
pop
das
ret
inc
mov
mov
push
addr16
add
xor
hlt
adcb
out
imul
mov
roll
add
out
in
jns
jns
and
outsl
test
sbb
aaa
xchg
inc
jne
inc
dec
sti
orl
xchg
xchg
cmc
pusha
sub
imul
ret
sbb
jnp
aas
mov
push
sub
mov
shlb
mov
sahf
cltd
decb
notb
push
inc
cmp
dec
pop
jnp
dec
out
movsl
into
xchg
in
sbb
push
imul
out
mov
sbb
lods
jp
xchg
cmp
repnz
xor
cmp
rorb
add
jb
pop
fisttps
xchg
fdivl
and
mov
sbb
adc
aam
hlt
sub
repnz
dec
sub
fucomi
jae
out
iret
sbb
repnz
fldcw
ljmp
cltd
cld
xchg
lret
aam
push
fwait
xchg
je
pushf
loop
and
addr16
xchg
cltd
sub
rorb
dec
cmp
mov
rsqrtps
test
orb
lret
and
or
gs
imul
xchg
icebp
test
or
aas
lods
in
test
shrb
cmc
jno
int3
inc
stos
add
mov
gs
push
out
add
or
mov
iret
ret
jg
inc
sbb
adcb
int
sbb
and
or
mov
lret
jno
lret
cmp
repz
mov
or
pop
mov
cmc
stc
cmp
popf
and
dec
pushf
testb
std
loope
jbe
pop
xchg
fbld
fwait
ret
mov
int3
movsl
lods
jp
lea
test
sbb
xchg
xor
bswap
xlat
leave
lds
mov
les
xorl
mov
mov
mov
dec
add
sbb
mov
push
adcl
mov
fidivrl
or
lds
mov
cwtl
test
push
jecxz
stc
adc
loopne
push
hlt
ret
fistpl
rorl
scas
inc
lds
fadds
add
out
roll
xchg
and
out
mov
push
mov
std
or
xchg
cmp
pushf
lret
stos
dec
cmpsb
inc
cltd
stc
daa
movsb
std
or
in
daa
sub
sub
jecxz
xchg
fisubs
fcomps
mov
lcall
push
dec
lods
stc
rcl
out
xlat
sarl
inc
sub
lret
addl
fsubrs
pusha
sbb
inc
popf
pop
sbb
jne
mov
repnz
mov
insl
jge
mov
mov
mov
insb
cmp
sbb
and
inc
ret
in
jmp
loope
cld
mov
addr16
jecxz
cmp
jecxz
mov
cmpsb
mov
jnp,pn
mov
rcrb
xor
mov
and
enter
adc
test
scas
xchg
pushf
call
lock
in
jno
dec
test
cmp
xor
xchg
fwait
push
mov
or
jmp
mov
jg
cmp
scas
jle
cltd
ljmp
add
rorb
cmp
mov
push
sbb
jnp
addr16
mov
shlb
sti
adc
sti
xchg
pop
mov
lcall
inc
lahf
dec
cmp
jg
imul
inc
jo
lods
and
pand
adc
sub
in
xor
mov
sbb
scas
mov
pop
inc
sub
cld
jecxz
rcr
je
dec
aas
xchg
inc
pop
int3
mov
mov
push
or
or
xor
xor
fsubr
adc
lea
je
mov
adc
aam
das
cmp
inc
hlt
xchg
jae
lret
and
cs
in
mov
ja
imul
std
dec
mov
mov
loope
stos
add
bound
scas
mov
pusha
icebp
rolb
jb
out
mov
jbe
aam
imul
mov
add
aam
add
test
pusha
jg
ss
jbe
repnz
dec
dec
pop
mov
mov
mov
arpl
lods
inc
movsl
push
rorl
in
pusha
filds
sbb
dec
lret
test
stos
repnz
arpl
popa
sub
fnstenv
cmp
pop
sub
xor
lahf
aas
pop
mov
xor
arpl
sub
lods
popf
or
stc
imul
cmc
mov
nop
in
stc
testb
lahf
fnsave
je
das
outsl
sbb
test
push
or
push
sub
xor
hlt
jl
mov
xlat
pop
sub
and
mov
in
unpckhps
push
jb
cmpsb
and
popf
and
inc
pop
push
xor
jae
cmp
xchg
cld
inc
or
daa
dec
xlat
stc
lahf
mov
push
or
pop
xor
add
sbb
das
int
jae
and
dec
insl
insb
nop
cmp
subb
xor
shl
sbb
and
test
sbb
pop
aam
pop
pop
jbe
add
push
push
push
push
push
inc
xor
out
adc
dec
loop
xchg
add
je,pt
jg
pop
mov
mov
mov
cli
mov
je
packssdw
add
jp
xchg
cwtl
jnp
cmp
mov
loope
or
mov
ret
ljmp
jno
or
xor
inc
jecxz
das
fcoms
jo
push
mov
mov
pop
pop
mov
cmp
int3
pop
int
or
and
xchg
int3
or
push
gs
aas
in
test
mov
or
lsl
mov
movb
jp
ss
jbe
xor
adc
sbb
mov
movsl
ss
inc
sub
mov
mov
cmpsb
loopne
fst
dec
jp
stos
outsb
test
cli
push
sub
fsubrp
ret
mov
fnsave
inc
mov
adc
sub
lret
jecxz
mov
loop
or
dec
out
or
push
add
and
icebp
and
cwtl
sub
inc
pop
loop
push
mov
out
add
adc
test
xlat
jge
repnz
int
inc
sahf
mov
test
dec
into
andb
incb
movsb
xlat
or
das
fimull
xchg
pop
xchg
sarb
ja
mov
movsl
fisttpll
repnz
adc
cmp
das
in
sti
mov
and
out
mov
add
fsubs
xor
aaa
inc
jb
mov
xchg
lds
add
into
in
lods
mov
mov
decb
repz
mov
dec
fcom
xchg
arpl
ljmp
cmpsl
repz
rol
enter
fwait
aas
test
jae
js
pop
or
scas
sbb
sbbl
orl
add
hlt
mov
or
jbe
lcall
pop
test
int
std
sti
js
lods
mov
push
push
imul
pop
in
inc
xchg
mov
sbb
add
call
mov
add
aam
mov
and
add
sarl
in
sbb
pop
aam
pop
pop
je
cmpsb
mov
mov
add
bound
sbb
mov
add
xchg
jge
push
lret
repnz
outsb
jnp
cltd
and
jle
xor
in
out
xor
adc
cmp
push
push
dec
inc
dec
pop
int
aaa
fistpl
jne
test
or
test
testl
cltd
call
div
lods
fs
icebp
mov
orl
mov
push
aas
jb
jbe
jle
adc
fisubs
imul
and
sti
shll
push
and
jne
cmp
les
mov
xchg
xor
popf
jae
xchg
cltd
loope
movsl
mov
pushf
loope
dec
xor
cmpl
cmpsb
adc
pop
icebp
loopne
ss
mov
sti
add
mov
xorb
ja
inc
in
test
movsb
cli
andb
add
pextrw
mov
mov
xchg
je
mov
rclb
xor
aam
jae
shlb
out
lcall
xchg
mov
mov
daa
jle
lret
jecxz
cmp
cmp
testb
and
push
test
adc
xchg
mov
inc
cmp
adc
das
nop
hlt
cmpsl
popf
lods
xor
push
dec
out
xchg
ds
andb
pop
mov
daa
lds
idiv
hlt
push
ret
aad
imul
or
fwait
mov
mov
push
bound
mov
ret
push
pop
xor
in
lahf
mov
inc
xlat
mov
jb
xor
add
out
fcomip
xor
jo
mov
ficoms
adc
scas
xchg
pop
mov
out
cmp
sub
jbe
jae
divl
inc
mov
pop
or
shlb
out
aam
hlt
push
jbe
aad
jb
mov
cmpsb
or
cmp
ret
sbb
jg
xchg
jo
xor
push
xchg
xchg
es
sub
pop
add
xchg
scas
jge
mov
jecxz
pop
lret
arpl
subl
cmpsb
adc
pop
push
mov
clc
int3
and
push
xchg
pop
jno
add
mov
je
cmp
incl
mov
xchg
adc
lcall
call
loop
inc
pop
mov
fisttps
or
sbb
pmulhw
stos
lcall
pop
enter
sahf
mov
imul
and
inc
sbbb
cmc
adc
xchg
sar
outsl
fnsave
sub
xchg
pop
icebp
loopne
insl
xor
dec
pop
clc
fsts
insb
ljmp
pusha
or
popa
adc
addr16
mov
pop
leave
jl
push
mov
sub
popa
xor
dec
enter
xchg
add
pop
add
in
daa
mov
out
push
bound
in
inc
pop
adc
dec
dec
push
mov
and
push
mov
roll
int3
cmpsb
arpl
ficomps
shl
mov
faddl
jecxz
xchg
imul
aam
vcmpps
push
stos
cmp
xrelease
stos
lret
dec
inc
in
add
popa
movsb
shlb
mov
mov
mov
sbb
mov
dec
data16
data16
shrb
fldcw
and
adc
cmc
adc
push
std
cld
mov
adc
icebp
hlt
ds
enter
gs
aam
mov
cmp
cmp
mov
daa
pop
lcall
repz
dec
mov
enter
cmpsl
imul
test
negb
push
stc
lcall
ljmp
sub
mov
add
push
dec
mov
popf
or
fmull
xor
out
fisttps
sub
pop
add
jge
dec
sbb
mov
push
ss
xchg
rcr
fwait
adc
and
lahf
pushf
insl
mov
in
push
jg
mov
hlt
popf
mov
push
xchg
decb
stc
dec
cmpsb
das
sbbb
push
iret
pusha
iret
out
push
sub
data16
xchg
in
testb
in
or
lret
nop
pop
shrl
cmp
adc
jg
ret
cmp
aaa
iret
aam
dec
jp
sbb
xchg
rorl
scas
xor
sbb
push
cld
into
insb
aas
dec
xor
dec
push
in
jp
sbb
movsl
jae
std
icebp
fnstcw
push
cltd
jbe
dec
xchg
mov
xchg
sub
imul
shll
lcall
add
scas
subb
push
xor
push
jl
mov
adc
or
dec
cmp
mov
and
andl
dec
or
and
jb
jecxz
xchg
add
pop
popf
inc
mov
test
push
es
daa
inc
pushf
movsb
push
add
je
push
dec
daa
les
adc
aas
out
shlb
ret
push
adc
pop
pop
ljmp
xor
xor
popa
adc
leave
call
jne
cmp
icebp
outsl
inc
in
and
mov
push
cs
cld
insl
pop
lret
dec
xchg
cmpsb
push
out
mov
in
cld
pop
mov
popa
jno
adc
lea
and
jmp
add
aas
ljmp
cmp
and
mov
xchg
add
lcall
pop
hlt
cmpsl
ficoml
inc
jle
mov
insb
stos
adc
fsubl
fstpt
js
and
mov
push
and
cmpsl
dec
jecxz
cmp
pop
xor
negb
ss
dec
push
es
scas
adc
clc
in
mov
mov
popa
stos
and
fstl
aas
inc
cli
in
lea
clc
jge
fldcw
sbb
bound
out
ljmp
xor
lret
xchg
sti
mov
or
dec
cmp
add
mov
sub
jnp
cmc
xchg
in
iret
dec
sbb
sbb
xchg
or
and
out
in
fwait
mov
movsb
js
lcall
js
cli
sub
mov
leave
jno
repz
mov
in
scas
ds
dec
mov
imul
adc
pushf
xchg
iret
sub
cli
push
xor
popa
and
pop
adc
addr16
xchg
push
gs
inc
shlb
push
inc
pop
ret
andl
xor
loopne
pusha
addr16
imul
jbe
insl
add
vpmacssdql
inc
ja
and
xchg
mov
inc
mov
dec
push
std
mov
pop
insb
test
aaa
mov
xchg
push
push
imul
xchg
sub
dec
popa
cmp
outsl
mov
bnd
pop
andl
push
adcl
mov
push
rcl
dec
xor
arpl
mov
push
cmp
sahf
xchg
mov
cmp
outsb
popa
cmp
insl
icebp
data16
movsl
sahf
push
mov
rcl
cmp
jno
lods
out
pop
pop
pusha
fwait
pop
inc
pop
in
jecxz
pop
adc
mov
jle
or
iret
cmp
arpl
fdivrl
jnp
pusha
sbb
pop
int3
xor
dec
fdivr
data16
mov
or
insl
popf
in
nop
repz
loop
or
cmp
ret
or
mov
jp
cld
outsb
push
es
mov
stc
push
ret
sub
loop
leave
mov
popa
pop
add
push
mov
mov
mov
mov
orb
clc
cli
push
sti
inc
bound
mov
mov
adc
push
add
ss
out
mov
loope
mov
sub
xorl
sahf
rorl
sahf
cmp
xor
adc
cmc
add
nop
stc
aad
mov
sub
fxam
xor
jp
cmp
out
in
push
mov
int3
cmp
dec
mov
outsl
inc
jmp
pop
jae
cmpb
aas
xor
cmp
into
dec
mov
adc
sub
push
insb
ja
inc
mov
cmp
test
cmp
cmp
dec
jecxz
adc
adc
push
mov
sbb
or
jge
xlat
int3
lods
movsb
cmp
adc
push
xchg
divps
add
mov
dec
fidivrs
mov
xlat
sahf
cmp
sbb
adc
dec
pop
cmpsl
push
inc
clc
sub
mov
ljmp
jmp
sbb
pop
and
jo
mov
hlt
adc
xchg
inc
stc
xor
xor
sti
jg
cld
lods
movsb
jmp
inc
fcmove
loop
cmp
dec
dec
inc
or
lds
scas
add
std
sbbb
out
dec
pushf
cmc
fistpll
imul
icebp
shl
cmp
dec
push
stc
fstps
or
xchg
push
cmp
or
sub
push
and
jg
rolb
fwait
mov
adc
fmull
idivl
fwait
sbb
in
mov
pop
in
adc
test
xor
das
call
xor
in
mov
ret
cmp
ss
dec
pop
ficompl
sbb
mov
lea
jnp
addr16
outsb
xchg
frstor
out
push
std
xor
lea
ret
jge
rcrl
cmp
popf
mull
rcpps
pop
xchg
adc
insb
or
cs
xchg
cmpsb
mov
dec
push
mov
mulb
loope
lea
aad
and
in
sbb
sub
xchg
cmp
jnp
sub
xor
xor
icebp
adc
jecxz
out
out
xor
orl
sahf
cmp
lcall
lahf
or
jo
leave
mov
das
cmp
cmp
xor
subl
mov
mov
fimull
es
push
out
cld
sub
cmp
jns
adc
subb
push
out
fnstsw
push
mov
fsubrl
mov
push
or
mov
xchg
incl
jbe
mov
les
sti
or
inc
jae
xor
repnz
ja
mov
or
push
stos
and
leave
data16
sub
subb
mov
fucomi
mov
mov
inc
cmpsl
xchg
aaa
push
mov
push
adc
sbb
sbb
cmp
jmp
shrb
aas
jg
or
sub
jnp
push
xchg
lods
dec
cmp
sbb
divb
and
dec
cmp
adc
shlb
cmpsl
xchg
inc
inc
sub
int
neg
mov
xchg
mov
cmp
mov
jne
ss
aaa
and
lea
sub
lahf
testl
aad
ss
cld
aad
dec
push
or
or
ret
xor
xor
jns
out
mov
xchg
add
shlb
insb
sbb
inc
rorb
mov
in
in
aaa
sub
jno
cwtl
pusha
pusha
inc
sbb
icebp
cmp
sub
sbb
mov
fdivs
xor
imul
xor
fldcw
push
mov
iret
shl
mov
lods
out
popa
test
es
daa
cltd
rorl
jecxz
pop
lret
push
mov
jns
xor
mov
mov
lds
je
sarl
ret
cltd
insb
xchg
lahf
roll
adc
insb
aam
jl
pop
andl
pop
popf
inc
mov
sub
mov
insb
shl
mov
mov
or
mov
mov
pop
push
rolb
cmp
xchg
and
sbbb
and
lds
popa
push
add
lret
dec
mov
int
push
nop
mov
fiaddl
dec
shrl
loope
lahf
push
mov
sub
ljmp
cmp
enter
and
adc
jno
pop
outsb
loopne
or
jo
loope
xchg
xor
mov
pop
loope
dec
jge
jle
or
or
gs
jns
movsb
out
mov
adc
jle
mov
fidivrs
bound
cmp
pushf
xchg
sbb
pop
lret
imull
xor
dec
jne
lods
mov
je
fisttpll
lock
dec
sub
int
repz
push
xlat
ret
imul
push
adc
out
ljmp
aam
fadds
adc
push
ljmp
or
cli
imul
out
xor
jbe
or
pop
mov
fwait
cmp
mov
loope
in
jle
out
rolb
dec
sub
add
jne
jl
scas
dec
xchg
das
and
cmp
in
loope
push
xor
rcrl
in
mov
adc
xchg
add
icebp
enter
sub
stos
ljmp
push
jno
xchg
add
aam
mull
imul
cmc
pop
and
sbbb
pop
aas
cltd
jge
sub
or
lcall
sbb
sbb
fldcw
mov
jnp
mov
rcrb
or
cli
jns
inc
add
rcll
out
cld
fs
pusha
xchg
mov
rolb
cmpsl
add
cmpsb
mov
jl
push
pop
lds
mov
clc
adc
cmp
aaa
xchg
dec
fcoms
cmp
adc
stos
add
mov
fisubrl
test
pop
pushf
push
mov
imul
ret
pop
ss
pop
adc
cmpsl
aaa
xchg
inc
jl
xchg
xchg
and
cli
icebp
sub
fwait
repz
pop
loop
dec
sbb
clc
jg
dec
mov
inc
dec
and
clc
push
mov
push
pop
jns
hlt
jle
sbb
leave
push
add
cmc
fdivrp
fimull
rorl
pop
mov
inc
dec
es
push
push
jp
push
mov
push
lahf
or
mov
mov
inc
add
ljmp
ljmp
aam
xor
lret
mov
add
mov
push
cwtl
test
cmp
stos
mov
std
aas
jge
jmp
bound
mov
pop
out
add
adc
pop
or
clc
cmp
leave
add
xchg
xor
or
xchg
daa
test
rcrb
movsb
sbb
jne
in
inc
xorl
aaa
repz
es
dec
cmpsb
xor
negb
xor
xor
push
mov
push
lcall
cmp
imul
pop
adc
leave
mov
add
dec
adc
imul
adc
dec
les
mov
iret
cmp
mov
stos
add
jno
inc
cmp
fdivr
fldenv
aaa
lcall
xlat
lods
sbb
out
or
jo
push
cmp
mov
sub
les
int
dec
mov
mov
loope
jg
int
cmp
jns
scas
push
add
pop
adc
fs
fmul
hlt
iret
jne
xchg
dec
les
dec
pushf
jne
test
push
jecxz,pn
or
push
push
cli
cs
insb
movsb
pushf
inc
cmc
pop
cmc
cwtl
shrl
int3
mov
sbb
je
pop
pop
pop
loope
es
dec
pop
dec
in
loopne
lock
shrl
dec
lea
mulb
sbb
ss
es
and
or
jg
fdivl
mov
mov
repnz
jle
dec
std
rcrl
and
adc
lods
fnstsw
lock
push
dec
jp
loope
enter
fdivrl
imul
shrl
sub
push
mov
sbb
into
lds
test
fisttps
daa
xor
out
fneni(8087
xchg
stos
mov
insl
fnsave
test
xlat
jnp
cmp
mov
movsb
mov
decl
lea
inc
mov
pop
cs
jae
xchg
sbb
in
inc
mov
xchg
sub
mov
in
adc
aad
sub
aam
dec
cmp
mov
test
jno
xchg
sub
push
jno
or
pop
and
pop
insb
pop
inc
cmpsb
add
pop
and
cmp
pop
sub
sbb
gs
xchg
daa
push
adc
lahf
sti
lahf
lahf
pop
mov
ss
bound
mov
lret
and
in
add
bnd
aam
jo
cmpsb
push
push
pop
addb
pop
daa
mov
xchg
mov
xor
bnd
pusha
int3
cmp
adc
jnp
pushf
jae
xchg
xor
int3
ret
int
mov
inc
mov
jae
xchg
ficompl
push
mov
mov
add
rcrb
push
or
xchg
sbb
cmp
add
sub
repz
pop
pop
cwtl
and
outsl
enter
adc
sub
into
push
sbb
jne
sub
test
cltd
sbb
aam
adc
mov
subl
mov
shlb
test
xchg
stc
out
xor
sbb
or
decb
lds
in
movsl
mov
inc
mov
mov
and
aas
or
jne
stc
sbb
out
jmp
sti
movsb
ljmp
popa
loope
int
fcmovnb
lahf
arpl
jecxz
mov
ret
dec
lock
xchg
lret
shlb
lret
xor
cmp
mov
sbb
sbb
mov
jge
xor
in
pop
sarl
aas
adcl
cld
aam
mov
fistpll
and
dec
sub
fisttpl
inc
mov
and
arpl
lret
call
addl
mov
pop
repnz
push
sub
inc
dec
popf
fisttpl
adc
addr16
and
mov
shl
sub
repz
mov
add
inc
repnz
pop
or
pusha
jmp
dec
in
pushf
std
mov
or
out
inc
daa
mov
jle
sbb
pushf
jbe
xchg
mov
in
or
mov
jno
aas
dec
jb
fwait
or
arpl
rcrb
cmc
dec
mov
pop
ss
jae
orl
enter
adc
dec
les
subb
xchg
push
outsl
shr
inc
xchg
push
add
imul
or
rorb
mov
pop
add
jbe
pop
jge
push
sbb
xor
mov
sub
lcall
dec
insl
call
cmp
insl
leave
mov
add
call
aam
shll
popa
pop
aaa
inc
daa
add
pop
jge
pusha
pop
je
test
and
and
lods
dec
mov
fstpt
sbb
mov
arpl
int3
imul
jecxz
jl
decb
mov
inc
stc
sahf
sub
lahf
mov
mov
jbe
jmp
std
inc
push
es
arpl
dec
shlb
pop
stos
scas
push
aad
sbb
xchg
mov
mov
pop
adc
sub
mov
das
mov
int
cmpsb
ss
dec
andl
insb
mov
and
pop
add
fisubl
jle
sub
xchg
jno
std
adc
jp
add
int
dec
fldt
xchg
rcrb
in
mov
sbb
pop
sbb
jp
push
jge
add
pop
or
inc
and
jbe
dec
xlat
dec
cli
xchg
and
ss
pop
xchg
jno
push
mov
out
push
icebp
cmp
out
push
jle
pop
and
mov
daa
lret
sub
add
and
insb
sub
pusha
mov
gs
or
sub
cmp
adc
mov
pop
jbe
or
push
pop
lret
adc
leave
or
call
mov
add
sub
mov
and
mov
mov
mov
adc
sbb
inc
jne
pusha
repnz
idivl
xor
jne
mov
mov
mov
or
mov
insl
mov
aaa
mov
mov
in
or
and
cmp
mov
sbb
mov
enter
mov
cltd
and
mov
mov
fdivr
ljmp
jns
sub
cs
movsl
mov
mov
in
mov
scas
daa
dec
jns
xchg
sbb
push
popf
pop
lods
out
aam
dec
cmp
jo
cmpsb
mov
sbb
cmp
mov
pop
test
aas
les
mov
xor
push
pop
add
mov
loop
pop
cmp
xor
gs
lahf
jne
pushf
push
add
and
repz
stos
jecxz
mov
mov
cmpsl
and
je
xchg
xchg
mov
js
ljmp
push
inc
outsb
orl
dec
mov
add
inc
fmull
mov
push
es
and
mov
flds
pop
sbb
push
cmpl
popf
sub
dec
sub
or
pop
cmp
les
test
xor
jge
ljmp
repz
push
sub
inc
sbb
es
and
add
out
mov
push
call
negl
andl
jl
inc
and
sbb
shr
sarb
adc
adc
je
cs
jns
xchg
movsl
xchg
shrb
lcall
inc
iret
mov
mov
dec
lret
cli
fnstenv
loop
je
aaa
stc
out
cld
aad
inc
mov
scas
test
addr16
xor
push
or
add
cmpsl
adc
lcall
pop
mov
fisubs
js
mov
mov
mov
push
ljmp
mov
test
gs
mov
dec
adc
inc
xor
cmpb
imull
dec
bound
mov
cli
sahf
shr
stc
xchg
cld
negl
call
add
dec
jle
mov
jg
add
mov
push
or
jne
pop
outsl
cmp
inc
sub
aaa
fadd
xchg
loop
testl
jno
jp
lock
jno
fcoms
adc
and
fildll
sbb
std
dec
jno
cmc
imul
in
mov
std
into
stc
or
enter
cmp
adc
cmc
jne
das
sbb
daa
ljmp
xlat
mov
or
test
popf
inc
add
pop
xor
add
jecxz
xor
sub
fdivl
dec
sarl
dec
mov
add
aam
clc
mov
xor
roll
jg
jbe
les
jg
std
loopne
repnz
stos
xchg
cmp
xlat
jno
out
fcompl
shl
in
fwait
inc
pop
pop
sub
xor
and
scas
inc
imul
or
pop
and
fidivs
xchg
insb
loope
les
xor
mov
jb
jae
pop
or
pushf
icebp
in
xchg
nop
xor
mov
das
repz
or
xchg
mov
aad
sbb
cltd
dec
xor
jb
fidivrl
out
sbb
out
int
push
mov
imul
push
adc
stos
mov
clc
jo
roll
xchg
pop
aaa
mov
aad
push
mov
jle
jmp
cltd
mov
jne
aam
sub
add
mov
subl
outsb
pusha
push
mov
mov
int
shl
fsts
push
jnp
xor
xchg
pusha
or
or
dec
out
scas
mov
jbe
ss
arpl
mov
subb
inc
loopne
pop
mov
mov
aad
call
in
dec
push
clc
cmp
arpl
addr16
sub
out
cli
jg
fildl
iret
insl
push
adc
outsb
cs
ror
push
stos
sbb
dec
fs
mov
lods
jmp
inc
push
adc
mov
pop
mov
stc
sub
push
loope
cmpsb
movsl
scas
sub
or
dec
sti
icebp
ljmp
jae
rcll
stc
jg
jno
and
xor
sbb
jno
jns
pop
vmread
push
jmp
sub
sbb
in
sbb
push
sub
or
cmpsl
mov
rcrl
stc
mov
xor
movsb
pop
xchg
and
push
sub
daa
cmpsb
daa
hlt
sub
aad
xchg
scas
rcrb
inc
dec
enter
int3
aas
les
imul
sub
pop
push
pop
loop
lret
mov
pop
add
mov
mov
jmp
pop
mov
test
out
insb
cmp
jb
loop
scas
loop
add
shll
lcall
jo
ja
xchg
pop
movsb
cli
xchg
mov
pop
push
dec
mov
cmpsb
shrb
pop
jmp
imul
add
cmp
notb
sbb
mov
mov
adc
fisubs
dec
mov
out
and
mov
lods
call
push
pop
mov
cmpsb
out
mov
shl
pop
outsb
mov
mov
or
lds
cmp
popf
mov
sbb
ret
fsubr
xor
mov
leave
xor
test
or
and
cmp
call
or
lock
data16
cmpsb
mov
and
pop
imulb
mov
gs
sbb
or
loopne
push
jno
cmp
inc
mov
and
jo
orl
add
arpl
cmp
mov
iret
fmull
les
sarl
sub
mov
pop
pop
mov
xorl
fistps
push
idiv
loope
clc
js
aam
push
mov
pop
cltd
mov
mov
imul
cli
sarb
out
movsl
repz
mov
bound
aad
mov
jno
mov
dec
scas
data16
gs
mov
inc
leave
icebp
push
push
sbb
xchg
inc
and
stc
pop
adc
xor
in
sub
ja
ss
div
out
jp
aas
add
mov
popa
jmp
pop
leave
leave
lods
sbb
stos
cmp
mov
pushf
pushf
xchg
or
test
or
dec
and
sub
or
movsl
push
rcll
jne
mov
fsubrs
roll
repnz
cmp
movsl
mov
sbbl
fs
cmp
aam
cmp
es
cld
dec
mov
lcall
aas
xlat
shrb
push
stos
movsb
insb
mov
xor
mov
sub
lahf
push
jno
outsl
lret
jmp
pop
aad
pop
cmp
imul
pusha
lock
jp
jl
xchg
mov
mov
cmp
lock
lret
aad
inc
pop
mov
rcll
adc
es
insl
out
add
scas
lret
mov
xchg
js
xor
icebp
mov
popa
lods
push
loope
cwtl
push
aaa
out
sub
mov
push
push
sbb
xlat
or
push
lret
inc
lods
icebp
scas
mov
mov
mov
cmpsl
xchg
cmp
and
in
pop
jbe
mov
ds
cmpsb
movsb
sets
pop
pop
mov
movl
sbb
je
loopne
test
xchg
lahf
pusha
je
inc
push
mov
daa
dec
lahf
mov
shl
inc
xchg
jecxz
lea
cmc
and
jg
push
das
xor
leave
pushf
xor
test
leave
orb
pop
in
mov
jge
out
cmpsb
pop
fidivl
mov
jge
adcl
mov
mov
fisubl
adc
pop
xchg
pop
sub
fstpl
dec
xor
idivb
push
lahf
jge
pushf
movsb
mov
push
faddl
and
add
out
pop
std
adc
push
enter
nop
inc
xchg
cmpsb
cs
jmp
test
andb
mov
rcll
ljmp
lea
adc
push
loopne
aad
dec
pop
mov
mov
jp
xchg
das
jg
je
jecxz
insl
fmull
mov
fldcw
cwtl
imul
push
push
js
test
mov
ss
jb
dec
fisubrl
in
loop
ss
add
lods
scas
pushf
sub
xchg
mov
addr16
fwait
js
adc
das
clc
out
xchg
fnstenv
js
inc
aad
add
loopne
ds
and
fidivl
test
push
ret
pop
sub
sub
lret
test
nop
fcoml
nop
and
enter
sbb
and
sub
fistl
movsl
dec
lcall
mov
push
mov
lock
lahf
xchg
sbb
mov
sbb
mov
add
push
les
xchg
mov
sub
mov
sbb
mov
stc
push
sbb
jmp
rol
icebp
test
mov
mov
mov
mov
inc
jle
and
adc
mov
hlt
jl
mull
mov
push
repnz
sarl
out
vmread
pop
insl
fcmove
or
mov
push
pop
lods
loopne
stos
or
xor
push
out
push
repnz
mov
ss
in
xlat
stos
xchg
fcmovnbe
aas
jb
aaa
sub
jae
das
lock
dec
inc
test
inc
or
cmp
sub
jg
dec
push
mov
hlt
jns
add
iret
xchg
adc
out
mov
js
das
and
sahf
sbb
mov
in
cmp
stc
aaa
pop
jno
jmp
or
xchg
push
lds
aad
jge
sbb
mov
clc
shr
enter
and
cltd
dec
lret
js
aas
cltd
jg
sbb
in
in
add
inc
add
pop
inc
add
test
cld
and
dec
cld
into
inc
movsb
dec
sbb
negb
nop
mov
dec
call
fcmove
testb
sub
mov
jg
test
cmc
hlt
in
adc
inc
out
xor
mov
scas
ljmp
jno
in
push
js
js
insb
pop
pop
or
cmp
lret
dec
divb
add
stos
xchg
lea
adc
stos
xor
mov
test
push
and
mov
cmp
test
into
in
sbb
and
test
mov
push
insb
pop
xchg
ds
mov
cmpsl
pop
sub
sbb
mov
or
daa
xchg
fmul
xchg
pop
jbe
push
pop
sub
jo
jmp
js
mov
inc
call
lods
adcb
cltd
and
ja
shlb
movsb
mov
in
adc
pop
out
or
xchg
cmpsl
aaa
xor
fldenv
mov
inc
sti
lahf
add
mov
mov
or
cwtl
mov
sub
outsl
mov
cmc
sub
hlt
pop
add
xor
stos
sub
sbb
mov
lret
outsb
bound
push
addr16
mov
loopne
or
fisubrs
dec
pusha
xor
push
jno
dec
outsl
mov
inc
mov
cmp
loopne
add
fimull
in
mov
push
xchg
mov
ja
pop
add
in
test
or
ja
test
add
daa
ja
or
in
popa
cli
icebp
jb
xchg
mov
mov
jns
fadds
dec
test
add
repz
inc
cmp
fxam
xchg
jmp
in
call
mov
out
enter
add
mov
scas
sbb
sbb
dec
jle
jle
adc
aad
mov
xchg
fs
mov
pop
mov
pop
popf
and
cmp
jp
jmp
rorl
out
mov
dec
outsb
or
xchg
jecxz
add
rcrl
inc
sbb
dec
push
add
jge
repnz
push
test
push
xchg
or
rcl
pop
shrl
inc
inc
dec
and
inc
cwtl
or
dec
adc
lock
cmpsl
scas
mov
sbb
dec
mov
popf
sbb
mov
rorl
mov
xor
adc
xchg
sub
aaa
inc
jg
idivl
sbb
pop
data16
imul
les
cltd
adc
out
not
pop
jae
xor
xchg
inc
lods
push
inc
mov
das
pushl
adc
pop
pop
out
push
outsb
fcoml
iret
sarb
push
xchg
push
mov
push
xor
movsl
mov
dec
sub
sbb
mov
push
mov
jge
nop
xchg
pusha
push
les
jae
adc
add
add
lcall
adc
lock
sub
sti
and
clc
in
notb
mov
lock
add
je
ljmp
in
xor
or
push
xlat
loop
jp
mov
pop
iret
lret
adc
push
jne
repz
and
dec
xchg
inc
cmp
lods
movsb
xchg
push
mov
rcl
imul
mov
fnstenv
dec
mov
xchg
subb
inc
stos
sub
sbb
addr16
loop
sub
gs
or
pusha
shl
add
inc
pop
sbb
repz
fmul
ficompl
jo
xor
mov
outsl
fisubrs
inc
inc
dec
daa
adc
xor
divl
orb
outsb
pop
icebp
clc
arpl
xchg
lret
subl
sbb
and
ret
or
xor
mov
ror
inc
dec
sub
cld
cld
idiv
test
repnz
ja
popa
jno
iret
loope
push
movb
mov
sub
xchg
inc
inc
or
mov
jmp
jge
jl
loopne
add
sti
push
or
adc
stos
push
jne
test
mov
jmp
test
add
out
mov
cmp
or
bound
gs
mov
test
jb
pop
jmp
inc
add
xchg
mov
call
xchg
sti
jne
or
inc
js
rcr
mov
insb
bound
sub
cmp
movl
lds
cmp
daa
call
adc
mov
jecxz
imul
push
sub
inc
push
xchg
fcom
ja
or
add
orb
in
lods
pushf
xor
push
ficoms
mov
rclb
ja
je
fs
test
mov
xlat
xor
int3
repnz
test
ja
gs
jo
inc
inc
xchg
mov
testl
push
jmp
ljmp
fbstp
bound
scas
and
frstor
xchg
sarl
ljmp
push
test
es
loop
jns
mov
dec
out
add
xor
out
js
jp
mov
cmp
rcr
insb
mov
in
xchg
sub
sarl
xorl
pop
and
test
js
xchg
dec
inc
je
test
ss
cmp
int3
jnp
mov
leave
fst
or
popa
cltd
nop
in
dec
sti
mov
inc
sti
or
jmp
mov
imul
movsb
clc
out
lret
mov
sbb
lods
sbb
add
sub
aas
pop
and
pop
cmp
aaa
int
mov
xchg
mov
addr16
xchg
sub
into
icebp
rcrl
test
mov
aad
inc
insl
gs
fisubrs
inc
lods
xchg
repnz
mov
in
pop
adc
or
mov
cmp
pusha
push
popa
pop
mov
push
push
push
sbb
out
andl
call
or
mov
loopne
jge
pop
inc
xor
imul
insl
movsl
ret
sarl
les
sub
sbb
add
xchg
xchg
dec
cmpsl
aad
shr
add
push
inc
jmp
rcrb
mov
jmp
sub
imul
jb
and
mov
mov
adc
outsb
cs
mov
adc
sbb
in
js
mov
decb
or
mov
aam
push
push
popf
sti
test
repnz
gs
push
icebp
sbbb
and
daa
or
sbb
push
adc
cmp
jecxz
jmp
lea
push
fst
dec
xchg
push
mov
out
inc
sbb
cmpsl
icebp
es
shll
shlb
adc
outsb
dec
mov
fimull
repnz
in
sarb
lds
enter
lcall
mov
push
adc
xlat
jmp
jb
in
ljmp
jle
dec
cld
mov
or
je
xchg
push
fwait
or
inc
in
repz
stos
mov
test
pop
je
add
mov
mov
mov
mov
dec
cli
scas
push
cmp
mov
cmp
mov
jbe
push
testl
jbe
push
imull
cmc
sbb
pop
clc
lods
pushf
movsl
inc
xor
dec
dec
lods
inc
in
lret
mov
pop
and
shll
pop
mov
jns
int3
nop
test
aaa
iret
dec
jl
test
xchg
push
loope
in
inc
jle
jo
sub
or
dec
lahf
dec
cltd
mov
fs
push
sbb
xchg
lret
hlt
out
mov
paddd
sbb
mov
add
pop
shl
pop
mov
mov
rclb
test
add
mov
dec
push
rcll
or
or
punpcklwd
mov
rcr
out
xor
scas
repz
ret
and
leave
inc
dec
decb
and
mov
sub
in
xor
mov
gs
gs
stos
lcall
divl
bound
into
pop
add
sub
popa
ret
mov
jg
and
sbb
and
sbb
cmovns
push
and
mov
jno
subl
add
popf
mov
sub
xor
in
lahf
mov
mov
cmp
aaa
jb
mov
inc
out
sub
mov
call
hlt
adc
pop
mov
mov
lret
cltd
outsl
xchg
inc
adc
jo
mov
ficomps
and
push
push
shll
pop
xor
sub
in
dec
dec
sub
jno
in
pop
cmc
or
mov
xchg
test
aam
inc
mov
mov
dec
scas
fdivs
ficoml
push
push
ja
mov
jae
and
stc
fistps
xor
adc
shl
jle
cmp
jns
fs
std
outsl
aaa
push
sub
bnd
dec
add
push
shl
fcoml
movsl
dec
sub
das
dec
out
bound
sub
mul
xchg
fists
inc
dec
ljmp
mov
cmp
jb
aam
ljmp
xlat
mov
pop
std
add
outsb
das
std
mov
push
dec
andl
mov
fdivl
xchg
in
imul
xor
push
push
jae
jne
inc
cmp
mov
aam
cmp
mov
push
xor
push
test
jno
imul
sbb
jp
xchg
test
inc
mov
adc
xchg
cltd
or
pop
fwait
bound
fidivl
dec
jbe
bound
lea
jge
xchg
mov
inc
fcmovb
add
mov
push
in
mov
les
push
imul
and
std
out
mov
loopne
loop
lock
xor
and
add
pop
cmpl
adc
mov
and
idivb
sbb
imul
cmp
gs
ret
mov
lods
xchg
cld
xor
ret
cmpsl
pop
or
push
adc
lret
fwait
inc
and
pop
xchg
insb
addl
fnstenv
mov
add
sub
aaa
and
xor
push
and
push
or
sarl
xor
rorl
imul
xchg
cmp
cmpsl
out
xor
and
test
sub
mov
xchg
mov
cmp
mov
push
push
aas
ret
cmpsl
fildl
jmp
xor
in
jl
inc
mov
test
push
jns
in
fsubrl
pop
sub
and
es
lods
sub
jne
iret
arpl
ss
add
pusha
xchg
popf
mov
pop
inc
sub
lds
mov
aas
dec
push
ds
sub
and
xor
dec
loopne
dec
in
gs
ret
flds
push
push
mov
xchg
mov
mov
fisubrs
xor
fisubrs
mov
cwtl
sbb
cmp
hlt
mov
sub
sub
mov
sbbl
xor
inc
fs
sub
lods
fwait
mov
dec
mov
mov
cmp
cmp
and
inc
ja
lock
insb
in
cmp
cmp
in
rorb
cld
daa
rclb
lcall
addb
addl
imul
pop
mov
sub
jge
push
jl
xchg
sub
or
je
mov
mov
daa
arpl
mov
sub
push
iret
das
arpl
aas
scas
loop
nop
dec
xchg
fistpl
push
xor
jle
mov
ja
or
int3
push
fdivrs
mov
lods
ror
jmp
sahf
mov
les
mov
pop
data16
jmp
ja
mov
les
fdiv
frstor
ret
test
inc
inc
scas
adc
pop
xchg
push
and
es
inc
sbb
and
xor
push
lret
mov
mov
pop
mov
pop
jno
push
and
es
enter
dec
mov
outsb
xor
movl
lods
outsb
daa
or
js
jge
test
jae
subb
xor
push
xor
int3
jge
les
movsl
xlat
jecxz
fucom
xchg
mov
jae
push
js
adc
icebp
sbb
aad
lea
or
icebp
mov
hlt
arpl
sub
popf
sbbl
xor
adc
scas
cmp
into
inc
lret
insl
repz
push
stos
fucom
mov
add
lcall
mov
xchg
or
dec
stc
lcall
adc
lret
adc
imul
sub
dec
or
xor
enter
pop
ret
add
mov
imul
and
idivb
popf
iret
sub
sub
popf
int3
jecxz
push
xlat
sti
cmp
mov
adc
pop
dec
and
test
shl
daa
pop
jno
mov
insb
push
push
test
sub
pop
dec
aaa
jno
fcmovne
xorb
jne
aam
push
xchg
jb
or
loop
aaa
cmpsl
inc
or
jae
popf
ljmp
enter
push
sbb
dec
lods
adc
xor
fxch
pop
addr16
xchg
aam
ljmp
cmpsb
push
icebp
pushf
and
xchg
mov
shll
lea
popf
ret
xor
repz
mov
out
aas
lcall
stos
pop
insb
mov
pop
xchg
inc
enter
data16
or
repz
jbe
or
push
rcl
mov
paddsw
adc
pop
push
inc
sub
pop
jne
mov
shrl
fildll
mov
aaa
mov
push
ret
add
mov
test
jbe
sbb
push
and
xlat
jbe
inc
inc
xchg
push
popa
addb
stc
sti
shll
adc
inc
xor
pop
inc
test
adc
out
cmpsl
sub
leave
fistpl
scas
mov
fwait
cwtl
arpl
lret
and
adc
ss
push
cmc
pop
lcall
cmp
push
addr16
flds
push
outsb
jecxz
lahf
enter
mov
stc
mov
ja
mov
fucom
adc
bound
inc
push
jecxz
idivl
fwait
or
ds
out
or
push
add
mov
test
xchg
orl
jp
repz
sbb
xchg
popf
dec
pop
stos
sahf
es
imul
jmp
and
cmp
jg
mov
clc
pushf
inc
mov
jno
int
push
adc
lea
lret
dec
dec
imul
js
notl
test
xor
lcall
sti
or
dec
sub
mov
xchg
andb
xchg
mov
leave
dec
test
fdivr
jae
das
or
loopne
pop
sub
lea
inc
fsubrs
mov
mov
xor
lret
cltd
pop
gs
clc
cmpsl
arpl
outsl
xchg
gs
or
sub
mov
pop
add
insb
add
jp
xchg
repz
adc
ja
or
mov
faddl
dec
mov
jge
or
pop
dec
or
xor
ret
das
stc
and
jb
out
scas
aaa
pop
mov
ds
jae
inc
pop
mov
mov
and
scas
dec
aam
push
jecxz
or
iret
pushf
or
insl
out
cmp
add
movb
cltd
jp
decl
and
ret
stos
mov
sahf
xor
and
jae
mov
mov
mov
or
sub
loop
cwtl
js
addr16
mov
cmc
nop
loope
scas
xchg
ss
iret
js
dec
int
pop
cmp
idivl
pop
stos
push
cmp
jg
test
aam
mov
mov
sub
xlat
mov
out
mov
and
adc
lock
into
sbb
xor
mov
or
fisubs
pop
dec
test
pop
movsl
push
or
lahf
cltd
lret
pop
sub
insb
gs
mov
inc
adc
xor
push
shlb
lret
stos
cmp
hlt
and
sub
mov
mov
push
mov
lret
ret
or
or
jl
sbb
adc
dec
push
push
hlt
jmp
xchg
and
cmc
hlt
enter
mov
decl
lcall
mov
add
push
add
pop
cmp
jmp
sub
pop
movsb
fnsave
push
loopne
pop
cmp
or
push
out
fdiv
popf
ret
mov
loop
jno
mov
xor
mov
pop
jns
notl
pusha
mov
mov
test
xchg
sbb
inc
inc
imul
fdivr
enter
or
arpl
std
das
clc
mov
fisttpll
addr16
xchg
stc
mov
imul
pop
push
sub
inc
std
mov
insb
xor
inc
pop
mov
lods
mov
repnz
push
adc
std
mov
mov
mov
in
and
sub
lcall
and
repz
fildl
dec
test
adc
push
les
add
mov
mov
jmp
pop
cwtl
inc
cmpb
jno
jge
popf
or
jno
les
divl
adc
jns
out
addb
fnstsw
pushf
mov
mov
cmp
sbb
call
scas
aad
or
int3
push
ret
mov
daa
popa
ja
je
test
inc
dec
xchg
add
jno
sbb
outsl
add
adc
add
mov
xchg
mov
xchg
imull
dec
cmp
pushf
ficoms
push
cmpsl
imul
pop
arpl
outsl
jno
outsl
clc
mov
mov
dec
js
sbb
pop
and
xchg
int3
mov
into
push
mov
icebp
mov
and
inc
sub
scas
sarl
xchg
xor
ds
int
push
xor
inc
cmp
xchg
mov
fidivrl
fadd
cltd
pusha
aas
ficoms
rcr
inc
adcb
aaa
xchg
fists
test
dec
adc
loopne
dec
gs
pop
lret
notl
insl
loopne
push
adc
sub
sub
cltd
push
movsl
pop
repnz
and
pop
cmp
mov
fidivs
cld
push
loope
push
cmpsb
cmp
push
pop
std
repnz
xor
xchg
jno
loop
ljmp
repnz
sub
inc
shrl
insb
loopne
insb
mulb
les
repz
in
cwtl
jae
xchg
out
dec
adc
pop
repnz
stos
pusha
lea
jb
andb
xor
inc
dec
shl
nop
js
inc
xchg
dec
pop
push
outsb
clc
and
fucomp
call
pop
pop
shll
sub
movsb
es
xchg
sbb
addb
ljmp
mov
insl
mov
xor
lret
enter
mov
lcall
jg
hlt
adc
and
shrl
pop
push
rcl
inc
stos
lods
xchg
pusha
daa
xor
icebp
jbe
pop
aad
shl
les
ds
inc
test
mov
mov
popa
pop
add
pop
jecxz
inc
or
mov
icebp
stc
push
aaa
adc
js
xchg
mov
inc
flds
dec
sub
aas
scas
nop
pusha
fbstp
lahf
jp
mov
insb
jmp
mov
insb
pushf
adc
or
mov
cmovo
adc
xchg
out
int3
loope
sbbl
cmp
mulb
sbbb
jl
lcall
pop
in
jg
movsl
or
call
adc
lea
lods
xor
mov
test
pop
clc
fnstsw
lock
lods
leave
out
adc
inc
insl
xlat
and
xor
in
cmp
clc
xchg
repz
stc
fwait
jno
inc
rcl
pop
xor
decl
in
iret
pop
sarl
scas
pop
sbb
out
adc
add
cmp
adc
mov
jmp
mov
inc
push
mov
in
adc
jb
lret
pop
xor
fnstcw
outsb
jo
mov
mov
fsubl
dec
mov
dec
test
sti
in
rcrl
push
jns
pop
int
cli
ljmp
movsl
jns
movsl
repnz
dec
push
push
mov
aad
rorl
outsb
sub
pop
xlat
aad
sbb
xorb
negb
pop
inc
xchg
mov
pop
in
shlb
std
test
in
jg
inc
sahf
inc
fwait
mov
inc
cmp
inc
xchg
dec
adc
jge
inc
push
add
enter
mov
sub
xor
lahf
fucomp
sbb
pusha
mov
pop
push
aam
pop
fbstp
addb
mov
cmpsb
fidivl
enter
pop
ret
int3
mov
into
mov
and
arpl
imul
rcr
inc
mov
out
mov
ficoml
fcomp
lret
mov
jnp
test
pop
jmp
add
or
jl
aam
cmp
aaa
inc
mov
and
jbe
iret
cmpsb
dec
int
push
adc
mov
and
movsb
cmpl
xchg
jl
inc
inc
cmp
lahf
add
leave
inc
jne
ja
mov
mov
mov
sub
jae
int3
loopne
mov
pop
sbb
sbb
in
bound
push
push
imul
sahf
lods
lods
add
in
cwtl
pop
jg
adc
add
fidivl
mov
cltd
sahf
mov
arpl
fiaddl
jae
aaa
stos
push
into
aas
pop
cmp
loopne
xchg
leave
iret
mov
jne
jmp
stc
sbb
or
push
and
pop
sbb
into
ja
mov
push
mov
xchg
xchg
push
cmp
mov
outsl
fiadds
mov
aas
push
jns
and
or
adc
inc
es
nop
ret
xlat
pop
dec
mov
and
data16
ss
mov
sti
push
push
lods
jge
fildl
aas
pop
dec
scas
loopne
lea
lds
sbb
inc
into
rcrb
rcl
xchg
mov
mov
jmp
pop
in
rolb
pop
cltd
xchg
push
shr
test
dec
test
enter
cmp
mov
push
cmp
mov
sbb
sarb
jns
lret
neg
or
lods
xchg
daa
repz
dec
jno
mov
fs
xchg
push
xchg
subb
test
out
push
add
lds
pop
sub
dec
mov
sub
rclb
sahf
int3
mov
cmp
jmp
frstor
adc
inc
bound
outsl
fisubl
jg
mov
inc
insl
rclb
jmp
mov
loope
sub
data16
mov
imul
sbb
adc
sbb
stc
jp
pop
xor
iret
or
js
hlt
in
out
push
add
xchg
int
add
fcmovnu
adc
pop
inc
pop
xchg
lea
repz
mov
cmp
jo
jle
movsb
or
cmp
sub
mov
imul
stos
or
mov
mov
adc
std
dec
arpl
loope
mov
ds
xor
addr16
repz
xchg
xor
jo
add
jo
repnz
arpl
pop
push
stos
jecxz
cmpsl
xor
inc
arpl
cmpsl
adc
or
add
movsl
xchg
int
jg
push
subl
mov
or
fbld
adc
outsb
out
and
sahf
dec
inc
jl
mov
push
aaa
aaa
movsb
sbb
mov
stos
xchg
mov
add
pop
adc
fcmovnb
push
mov
jne
lea
std
jnp
mov
xchg
xchg
jns
insl
loop
call
test
in
movsl
push
arpl
push
sub
pusha
push
xor
add
add
insl
and
je
sbb
push
and
fucomp
cmp
bound
daa
or
sbb
mov
inc
lods
or
jb
idiv
dec
inc
test
repnz
ficompl
cmpl
loop
imul
imul
sub
test
es
dec
test
xchg
sub
and
pop
cmp
repz
sbb
dec
addr16
aas
xor
xor
mov
dec
pop
jl
mov
pop
sbb
dec
je
mov
cmp
mov
imul
repz
iret
dec
popa
mov
dec
stos
push
mov
sub
fildll
jle
cltd
popf
xor
adc
daa
and
adc
xlat
or
xchg
push
or
mov
inc
loope
ret
es
out
pop
mov
mov
pusha
pushf
push
in
mov
movb
test
sub
outsb
pop
inc
sbb
mov
push
sub
rorl
fwait
in
mov
pop
and
jbe
pop
nop
add
das
scas
cmc
adc
jge
cmp
stos
stos
or
inc
or
push
adc
popa
clc
and
add
sarl
push
nop
xchg
pop
cmp
sbb
shl
mov
cld
inc
pop
pusha
xor
jne
iret
cmc
lret
stos
and
popa
pop
push
test
scas
mov
lret
fwait
andl
lahf
aaa
pop
pop
cmp
xchg
mov
cmp
out
mov
xchg
out
jb
test
xor
pop
movsl
test
and
ds
out
jg
cmpsb
mov
in
dec
mov
fbld
push
fs
popa
lcall
cmpb
flds
xchg
add
rcrb
fs
inc
xor
inc
lret
repnz
je
or
mov
mov
nop
lds
pop
stos
dec
sbb
dec
jb
ret
cld
push
jns
lds
mov
xlat
pop
test
subb
xchg
sbb
or
dec
inc
add
inc
cmp
sub
fs
pop
icebp
inc
pushf
pop
pop
sbb
pushf
fbstp
xchg
dec
cmp
rcl
cwtl
and
sbb
jae
cld
ficomps
movsl
add
cmp
sbb
fbstp
scas
sub
mov
pop
pop
inc
cli
cwtl
fwait
xor
xchg
scas
mov
cwtl
mov
inc
mov
dec
loope
sub
aad
push
decl
or
out
clc
push
and
sahf
xor
and
jle
xor
mov
sbb
cmp
es
sbb
fistps
cmp
insl
adc
inc
push
jecxz
ja
gs
pop
movsb
in
sbb
xor
pop
lds
pop
call
jmp
sbb
push
out
scas
ljmp
ja
and
and
fsts
or
mov
jmp
popf
push
movsl
dec
inc
rcll
ljmp
dec
push
mov
mov
ds
cmc
dec
repz
cwtl
les
add
dec
andb
xchg
mov
xor
aaa
ret
aas
add
js,pn
pop
jp
and
out
push
jg
pop
mov
fucomi
mov
cmpsl
cli
inc
fisubl
ret
mov
out
ja
mov
fdivs
inc
mov
popa
dec
pop
sbb
jbe
push
test
jno
cmp
push
add
test
cmp
push
repz
xor
xor
jle
or
test
or
jg
sahf
dec
addl
cmpsb
push
sbb
scas
shl
xor
cwtl
or
sarb
stc
ss
xlat
addl
sbb
cmpsb
es
loop
sub
jae
repz
out
mov
lcall
jecxz
push
sbb
and
push
hlt
cli
shll
dec
cmp
popa
inc
xchg
pop
fsubs
push
arpl
fcmovne
out
sbb
rcl
push
pop
xchg
jmp
movsl
push
pop
cmp
loope
lods
dec
sub
call
xchg
mov
into
sar
data16
sbb
and
cltd
sub
mov
or
ss
or
repnz
cs
sarb
jns
repz
cmpsl
sub
fnsave
push
clc
push
jns
sub
jae
mov
add
lret
sahf
xor
out
fwait
lahf
add
lds
addl
divl
pushf
sbb
mov
xor
and
stos
leave
xlat
push
lret
mov
push
addl
xchg
sbb
cli
insb
test
lcall
nop
push
jb
or
ljmp
sahf
jmp
std
add
jecxz
and
jnp
leave
fsubrs
inc
jae
jae
inc
mov
js
daa
xchg
lret
mov
rcrl
mov
stos
jmp
jge
push
mov
jae
in
push
cmpsl
jb
bound
incb
into
dec
daa
and
adc
and
rorl
pop
ljmp
push
sub
jb
or
sbb
fidivs
sub
sbb
xor
lds
jle
fbld
int
pop
decl
adc
scas
jo
pushf
adcl
cmp
adc
mov
data16
sbb
ret
jnp
lret
jbe
adc
push
sbb
out
enter
add
mov
jp
mov
and
push
sub
mov
mov
ret
inc
aas
scas
scas
or
add
stos
inc
push
dec
inc
icebp
ja
mov
int
je
cltd
xchg
sub
out
fimuls
lds
test
fs
ret
cmp
scas
fwait
imul
add
lret
mov
scas
lock
cld
sub
pop
pop
add
rorb
das
sub
mov
mov
popf
add
adc
mov
and
pop
push
push
mov
shlb
inc
mov
dec
mov
pusha
cmpsb
xchg
cli
insb
jno
icebp
push
dec
mov
in
pop
inc
idivb
mov
inc
or
lods
xlat
mov
sbb
xorb
adc
fucom
rsm
xor
pop
lock
jecxz
test
cmp
jge
cli
push
jb
sub
sub
sub
aas
aad
xchg
cmp
xlat
sub
sub
jle
pushf
dec
rclb
jg
or
out
xor
outsb
xchg
mov
loope
test
data16
pop
jp
jae
or
cmp
stos
sbbb
dec
iret
sub
lahf
shll
sub
ljmp
in
shll
cli
fldl
jl
out
dec
xchg
mov
scas
jge
jb
jb
enter
movsl
shll
add
scas
mov
lcall
xchg
lcall
cltd
test
subb
mov
xlat
ds
outsb
dec
inc
sub
mov
shll
stc
xchg
mov
repz
cmp
xor
mov
lods
in
mov
adc
mov
adc
lret
mov
clc
in
js
addr16
mov
pop
sahf
adc
aas
mov
sub
insb
movsb
xor
mov
sub
mov
hlt
jge
in
std
enter
outsl
inc
leave
xchg
mov
outsb
daa
shrb
mov
rolb
xchg
rcrb
lahf
pop
fstl
leave
and
fnsetpm(287
inc
imul
movsb
arpl
xor
lret
ss
mov
mov
jo
mov
xchg
jb
ljmp
sarl
lcall
add
sbb
into
shl
lcall
xchg
fildll
xchg
inc
sbb
add
dec
dec
mov
fabs
fs
cmpsl
adc
aam
push
stos
divl
addr16
mov
rclb
pop
stos
push
subl
mov
jnp
mov
adc
jmp
mov
icebp
and
nop
mov
lds
or
shrb
out
jns
icebp
test
lds
movsl
pop
ja
inc
loopne
push
mov
inc
daa
je
jne
outsb
pop
mov
mov
adc
js
cwtl
mov
adc
xchg
incl
mov
aam
shrb
rolb
cld
push
repz
lcall
xchg
jle
adc
pop
sub
daa
loop
mov
mov
jb
lods
nop
inc
imul
iret
cli
cmp
scas
inc
mov
dec
jl
xchg
out
push
cmp
sub
push
test
dec
out
mov
sbb
ja
push
mov
inc
clc
jmp
sbbb
rcrl
mov
mov
inc
std
cmp
or
or
push
mov
cltd
iret
lods
push
mov
jp
rclb
and
xlat
insl
pop
jmp
mov
ret
mov
add
dec
adc
fchs
fsts
xor
rcl
push
shrb
sahf
mov
or
mov
lcall
add
movsl
pop
and
cmp
push
aad
pushl
xchg
stc
xor
push
pop
mov
stc
adc
stc
inc
popf
push
int
pop
addr16
sahf
loopne
mov
dec
xor
pusha
lahf
dec
sbb
and
jne
int
add
rcrb
outsl
testb
dec
int3
loop
cld
mov
cmpb
dec
xchg
pop
sbb
jmp
sbb
and
push
loop
xchg
loope
mov
orb
mov
loopne
mov
adc
in
iret
jecxz
jo
mov
push
and
or
sub
rorb
test
cmp
cmp
inc
sub
sub
loop
ficompl
sbb
xchg
dec
idivb
stos
fnsave
inc
out
pop
lcall
ret
or
into
insl
shr
repz
mov
decl
mov
pusha
testl
jp
pushf
mov
mov
nop
cmp
aas
add
sub
mov
push
mov
rol
sahf
negb
lods
mov
dec
push
mov
and
mov
nop
insb
stos
in
imul
or
xchg
sbb
out
jp
ja
xchg
push
add
or
cmp
jmp
mov
jge
popf
or
arpl
cmp
lahf
adcl
cmpsb
add
in
add
pop
xchg
or
loope
inc
or
jl
gs
xor
sahf
rcrb
lods
push
mov
popl
xchg
repnz
rorb
in
cmc
lcall
into
cli
cmpsb
mov
rolb
pushl
add
mov
mov
inc
call
lret
mov
and
push
sub
push
mov
jmp
jnp
rorb
sahf
xor
movsb
xchg
xor
popf
jmp
pop
cwtl
sub
pop
adc
adc
inc
pop
adc
add
js
adc
or
xor
cmp
movq
sub
les
and
add
lret
pop
mov
into
adc
incb
test
pop
sbb
jne
test
in
iret
cld
inc
out
or
in
stos
out
xchg
lea
adc
adc
imul
loope
mov
pushf
js
lods
dec
fildl
je
xchg
push
pop
xchg
dec
aad
push
gs
sbb
jecxz
fwait
ret
or
sub
push
lods
cmc
pop
lret
inc
push
cwtl
lock
lds
xor
repnz
cmpsl
lret
aaa
cmp
push
push
in
icebp
xchg
fs
loop
push
dec
and
rcr
xchg
add
out
gs
push
mov
lods
jg
inc
je
test
mov
lods
dec
xor
sarl
xor
adc
ss
out
sahf
loop
or
xchg
loopne
inc
out
push
sbb
cmpsl
lret
dec
cmpsl
xchg
sub
jae
nop
scas
fstpt
mov
push
pop
mov
leave
addr16
push
jle
repnz
pop
jp
jnp
imul
negb
out
adc
lcall
enter
sbb
pusha
in
inc
fdivs
inc
mov
and
aaa
loopne
cmp
in
pusha
bnd
inc
or
lret
inc
or
call
xchg
jb
ret
adc
leave
pop
mov
adc
jno
jecxz
sub
xor
push
xlat
sub
cmp
ror
fisubrs
int3
mov
insb
in
push
scas
loop
call
pop
mov
rcll
jge
mov
add
lods
notl
xchg
cmp
imul
mov
repnz
xchg
push
add
jno
dec
or
mov
sbb
adc
adc
mov
out
push
dec
popa
push
mov
in
dec
mov
cmpsb
pop
pop
mov
out
adc
test
notl
scas
ret
push
loope
pop
add
das
mov
pop
test
gs
repnz
mov
mov
arpl
outsb
add
enter
and
dec
jo
jecxz
xchg
jo
jbe
jno
adc
xchg
push
jge
sahf
test
and
nop
out
shl
adc
jp
ret
stos
scas
lods
and
cmpsl
popa
mov
shlb
mov
test
and
inc
add
xor
dec
cld
xchg
mov
push
push
mov
ret
in
or
dec
fs
add
mov
pusha
js
xchg
jl
xor
jno
aad
sbb
pop
mov
push
push
mov
sbb
aam
mov
push
dec
dec
push
movl
dec
rol
jns
xchg
stc
lods
sub
dec
or
mov
decl
test
add
in
negl
enter
pop
adc
dec
int
xlat
leave
cmc
js,pt
pop
inc
cmp
imul
mov
dec
inc
and
fimull
cmp
inc
add
xor
fiadds
daa
fnstenv
lods
insb
cmp
ss
je
inc
mov
mov
clc
out
jns
jg
mov
xchg
mov
jnp
mov
and
repnz
fmuls
stos
pop
into
sub
dec
mov
inc
pushf
xchg
cmpsb
jl
lods
aad
pop
lods
addl
pop
pop
sbb
inc
cld
ds
adc
aaa
push
in
push
imul
stc
add
add
push
push
faddp
jmp
sbb
jnp
mov
js
and
sub
jbe
clc
fistpl
sbb
mov
call
mov
lahf
jle
test
add
es
outsl
xchg
rcll
sub
add
or
pop
inc
mov
ficoms
mov
mov
xor
pop
in
bound
es
pop
dec
xor
push
insl
popf
sub
dec
inc
mov
inc
adc
pop
das
cmc
push
push
sub
xchg
or
jecxz
test
cli
movsl
int3
xor
cltd
cmp
popa
add
dec
fs
fcmovbe
ja
pop
lds
or
sub
int3
mov
sub
xchg
out
sbb
insl
popf
mov
cmp
mov
lahf
and
enter
lahf
xor
xor
stos
cmp
neg
bound
inc
or
xchg
xor
jecxz
movsb
in
in
out
sahf
push
hlt
mov
jb
stos
add
fsubrl
int3
or
adc
movq
inc
push
data16
inc
scas
jo
cmpsl
outsb
rcll
mov
push
xchg
jbe
push
ss
add
pop
or
mov
pushl
mov
dec
lahf
adc
lea
jo
aad
xor
jmp
xor
mov
xchg
in
repz
adcl
int3
icebp
jge
lcall
mov
test
loope
jge
test
pop
push
xchg
jl
adc
test
push
lds
rorb
movsb
xchg
or
inc
shll
dec
or
or
scas
adc
push
lcall
mov
mov
mov
in
mov
fcoml
xor
add
xor
lret
cmc
rcll
pop
inc
test
popa
add
arpl
mov
hlt
cld
jp
xchg
mov
xor
cld
mov
xor
push
hlt
lea
sbb
or
lods
call
sub
ljmp
adc
imul
fstl
addr16
mov
subl
push
neg
scas
mov
cmp
cmp
out
push
test
cmp
inc
in
push
xlat
mov
movsl
rolb
hlt
dec
cwtl
push
or
sbb
sub
mov
idivl
sub
les
loop
jb
xchg
ss
out
xchg
mov
lea
out
jge
lds
ret
scas
mov
cmp
or
push
adc
clc
adc
cli
movsb
pop
cmp
mov
outsl
mov
mov
aas
xchg
and
enter
xor
dec
xor
mov
cmp
in
mov
jge
mov
std
test
xor
repz
out
fwait
inc
or
or
jmp
cmpsb
xorb
rolb
and
pop
fimuls
adc
sub
dec
jo
mov
jmp
mov
loop,pt
sahf
xchg
repz
or
jb
cli
aaa
and
fdivl
cwtl
mov
mov
cli
dec
sbb
leave
insb
xchg
out
shrl
loope
inc
scas
inc
frstor
cld
push
mov
inc
mov
subl
jb
fstpl
in
icebp
jns
dec
orl
or
cld
mov
push
aam
fsubr
out
pop
mov
push
dec
frstor
mov
test
das
adc
jns
add
fisttpl
popa
and
sahf
fcomps
popa
xor
adc
stc
or
and
sub
leave
fcom
jb
mov
push
scas
xchg
mulb
jl
jns
movsb
leave
mov
push
lea
dec
or
orb
sti
or
insl
sbb
xor
lret
movl
popf
rorl
shll
xchg
mov
add
arpl
lock
aam
adc
xor
sbb
add
call
jmp
repnz
dec
mov
lds
mov
ja
rcrb
adc
sti
mov
and
testl
jmp
dec
sbb
add
adc
add
and
ja
nop
aaa
mov
icebp
add
xchg
or
mov
push
and
jge
inc
push
dec
ret
arpl
fisubs
cmp
jmp
movl
cli
and
loop
mov
loope
inc
subl
mov
ja
lock
std
ret
jbe
mov
mov
pop
push
mov
stos
bound
test
pusha
add
dec
test
test
add
pop
icebp
and
jp
and
xchg
aad
mov
aaa
ss
dec
push
jle
sub
jmp
mov
insl
bswap
mov
dec
xchg
xchg
mov
shrl
daa
and
push
rcl
xor
inc
cmp
je
mov
adc
pop
push
mulb
jmp
es
or
fistl
rcrl
push
aad
outsl
inc
pop
fsubr
je
jge
aaa
mov
sahf
and
xor
push
xlat
fisttpl
ds
adc
ret
or
jb
mov
cmp
ds
sbb
lahf
sub
out
push
popf
mov
inc
sbb
or
cmp
adc
jnp
cmp
scas
ljmp
mov
test
std
dec
icebp
or
and
aam
inc
xor
adc
rcrb
in
int
lods
das
push
aas
clc
pop
add
xor
xchg
orl
inc
sarb
add
dec
cs
ret
lods
and
mov
mov
std
shl
sar
mov
outsl
cltd
lcall
loope
out
mov
inc
sub
jecxz
jecxz
xor
out
insl
js
cmp
cld
loope
divb
outsl
fdivl
xlat
sbb
add
push
lea
ss
popa
out
and
adc
or
mov
lret
push
enter
xlat
xchg
adc
pop
mov
push
mov
lock
mov
shr
rcrb
outsl
mov
ljmp
and
jp
test
xor
pop
inc
jb
loope
in
xor
dec
xchg
mov
int3
movsb
cmc
cmpsl
push
nop
mov
lock
rolb
mov
mov
xchg
aas
mov
fmuls
test
adcl
je
in
jl
pop
test
enter
mov
xor
lods
pop
fs
mov
es
inc
cmc
mov
jecxz
jnp
dec
mov
cmp
pushl
cmp
cmp
xchg
clc
mov
mov
testb
jae
inc
jl
in
push
mov
xor
dec
sbb
and
xchg
stos
stos
mov
stos
arpl
or
fildll
cmp
push
out
add
mov
mov
mov
add
push
xor
sbb
cli
jg
mov
lret
and
cli
sbb
pop
pop
mov
adc
and
fstl
jbe
pushf
sbb
cmp
cmpsb
and
mov
mov
push
mov
sub
das
mov
dec
gs
insl
cmp
adc
stc
mov
dec
lahf
jb
mov
or
xchg
pop
sbb
movsl
xor
scas
into
leave
sbb
pop
or
adc
in
and
push
push
mov
mov
mov
xchg
adc
sub
sub
mov
cmp
stc
xchg
out
js
fldl
push
repnz
into
lock
cmp
jmp
js
jne
adc
cmp
lods
adc
call
ret
pop
push
in
int3
pushf
dec
mov
jmp
fidivrl
hlt
or
sbb
sbb
jbe
mov
rorl
and
out
and
in
or
stos
bound
sbb
or
and
jne
mov
sbbl
mov
mov
sub
xor
xchg
dec
dec
xchg
shlb
dec
aam
and
pop
dec
into
push
sbb
pop
mov
sbb
sub
mov
xor
push
nop
adc
pop
lds
mov
cli
mov
fwait
mov
dec
cmp
mov
push
push
inc
mov
cmp
outsb
test
mov
mov
fildl
jnp
inc
xchg
mov
xor
data16
in
push
push
in
jnp
ror
or
xor
jg
loop
adc
repnz
out
std
mov
daa
xor
es
in
mov
aaa
jle
lret
frstor
sahf
add
sbb
xor
lahf
push
inc
mov
outsl
insb
add
stc
lret
rcl
in
cmp
das
sbb
push
mov
test
stos
and
sahf
adcl
jo
fsubrl
cwtl
xchg
sub
ja
mov
loope
jp
xor
popf
andl
inc
push
inc
adc
lcall
scas
push
loop
out
out
ret
sub
adcb
inc
out
mov
cmpb
sbb
ret
jne
int3
or
push
sbb
add
loopne
add
dec
mov
pop
push
scas
test
jmp
push
idivb
jnp
iret
dec
sbb
bound
out
test
nop
testl
pop
and
dec
push
rorl
cmp
pop
or
pop
insb
xor
dec
out
fcoml
mov
lods
jl
inc
adc
xchg
pop
push
lock
fildll
adc
jb
or
scas
je
nop
movsb
add
lcall
data16
es
movsb
aad
cltd
mov
push
push
add
jbe
adc
loop
sub
inc
sbb
std
popf
cmp
aam
mov
test
sbb
bound
dec
mov
add
dec
xlat
pop
adc
lret
ret
xor
push
add
push
call
aas
dec
pop
cmp
pop
shll
pushf
mov
cmp
loop
dec
aad
cmp
push
lock
or
add
cmp
clc
jmp
pop
pop
jno
xchg
jbe
cltd
clc
or
shll
xor
das
push
mov
and
jl
data16
aaa
addr16
jb
xlat
clc
int
sbb
cmp
xchg
fninit
in
push
sbb
mov
xor
jb
push
mov
repnz
rcrl
mov
aam
fsubl
adc
out
sub
mov
je
stc
lds
or
pop
push
push
in
test
pop
and
test
js
aam
mov
fsubrs
dec
mov
xchg
fmul
sub
cltd
and
xlat
js
mov
xorb
pushf
stos
das
xchg
lods
add
cmp
cmp
cmp
xchg
insb
arpl
mov
pop
adc
add
sub
repz
mov
ds
xorl
mov
push
add
fisubrs
test
ljmp
loop
hlt
dec
xor
icebp
ret
pop
nop
fcmovu
es
push
dec
dec
and
mov
icebp
dec
clc
lret
hlt
sub
lcall
dec
out
loopne
push
jns
dec
insb
lahf
jne
push
dec
add
movsl
push
outsl
adc
loop
hlt
test
jbe
sbbb
dec
push
push
syscall
or
lret
jo
lods
xchg
xchg
rol
in
mov
mov
mov
iret
inc
inc
xchg
imul
arpl
push
mov
mov
ret
mov
cli
jecxz
inc
lcall
cmp
cmp
jbe
call
cmp
lock
out
mov
stc
add
push
lcall
mov
inc
add
xchg
pop
dec
outsl
ror
jns
or
lahf
mov
sub
inc
outsb
push
fbld
in
repz
xchg
xchg
lcall
mov
or
aaa
push
push
jl
sti
and
mov
jle
cld
inc
xor
pop
xor
enter
push
or
push
mov
xchg
addr16
call
jp
jnp
adc
and
std
rcll
push
std
adc
stos
fldcw
lcall
in
in
aas
jbe
hlt
daa
into
pop
les
aaa
daa
mov
adc
sahf
fldenv
jns
inc
in
dec
cld
int
daa
mov
dec
loop
lahf
add
out
popf
and
add
into
imul
stc
pop
mov
xchg
add
jno
mov
add
shr
xchg
lahf
mov
cmp
push
hlt
push
out
jo
mov
dec
lea
hlt
das
lods
iret
lock
pop
stc
inc
add
repz
and
jne
je
scas
pop
push
dec
inc
jg
daa
pushf
adcb
sub
xchg
pop
dec
or
mov
scas
test
mov
out
repz
clc
sbb
test
xor
inc
and
clc
lods
xor
xor
sub
movsl
jmp
loope
mov
enter
inc
fmul
inc
xor
shrl
fisubs
adcb
push
xchg
enter
mov
inc
adc
and
leave
sub
inc
lock
sbb
test
sbb
clc
sub
cmpsl
mov
test
les
popf
adc
fs
pop
push
mov
ja
int3
and
jne
add
fwait
sbb
outsb
fcmovbe
test
cmpsl
mov
das
jp
xchg
or
loope
inc
decb
addr16
in
fnstenv
int
jbe
sub
cwtl
in
push
jle
or
btr
pop
mov
jnp
jbe
dec
add
cltd
sub
int
mov
xchg
fucomi
pop
ljmp
push
fisubs
daa
stc
mov
add
mov
adc
call
push
enter
xor
lods
ror
adc
and
das
dec
xchg
pop
mov
push
lret
mov
aas
mov
or
mov
and
sarl
push
mov
mov
and
push
add
out
jmp
adc
jecxz
imul
pop
sub
sub
icebp
cmovo
cmp
mov
adc
push
in
loope
cmpsb
push
jnp
jmp
sub
les
sbb
adc
xchg
call
jmp
add
js
adc
mov
ret
insb
in
cmp
or
pop
mov
or
cwtl
rcl
push
aam
jno
mov
or
adc
add
jns
fildll
loope
dec
mov
dec
adc
or
iret
push
aad
mov
inc
stc
xor
sbb
pusha
das
push
fisttpll
mov
push
adc
and
cmp
sti
ret
adc
xor
jnp
mov
sub
popa
leave
pop
test
cmp
daa
scas
mov
cwtl
mov
and
xor
cmp
push
pop
mov
scas
mov
push
jo
in
dec
add
mov
and
fisttpl
inc
loop
pop
and
push
scas
mov
lret
push
inc
and
xor
or
lcall
test
ja
sub
lds
ficoml
outsb
push
push
mov
fsubrs
push
push
sbb
insb
or
pop
pop
push
adc
fs
sub
push
cmpsb
cmp
ja
jmp
sub
xchg
cmp
andl
insb
enter
rcrb
mov
in
jle
sub
loop
shrb
or
rorl
lock
or
daa
stos
push
mov
rep
je
push
js
bound
sub
arpl
rcl
std
dec
dec
inc
inc
or
mov
cmp
cmpsl
add
xor
xchg
cmpsb
mov
gs
lods
push
push
pop
add
mov
lcall
or
jp
imul
pusha
bound
sbb
clc
in
xchg
stos
xlat
jae
dec
in
mov
pop
imul
daa
dec
push
cmp
jecxz
xchg
sub
cmp
cltd
loopne
adc
std
je
sub
inc
repnz
out
xor
jl
mov
ja
test
stos
in
adc
test
cld
test
mov
add
clc
push
leave
loope
lahf
mov
hlt
test
shl
test
inc
cld
sub
aas
lock
lcall
and
sub
vaddsubps
sub
adc
enter
fadds
push
dec
movsl
add
into
cmp
in
add
in
aaa
clc
add
ss
cmp
pop
jecxz
cmpsl
out
cmp
in
jae
mov
cmp
test
adc
pop
mov
in
mov
int3
cmp
loope
inc
xor
sbb
repnz
or
loop
je
out
js
mov
jbe
jno
pushf
mov
fdivs
xor
mov
jo
std
or
roll
dec
xlat
divb
mov
lods
dec
popf
pop
or
cmpsl
sub
mov
lock
scas
stc
hlt
push
pop
cmpsb
mov
mov
mov
ficompl
jns
daa
and
bound
popa
ja
cmp
mov
sub
pop
or
pop
test
cmp
mov
fmull
shlb
jo
xadd
and
lods
or
dec
repnz
mov
out
xchg
cmp
xchg
faddp
lds
in
fldt
and
insl
insl
movsb
xchg
or
stos
push
outsl
xor
fwait
loopne
lahf
pop
cmpsl
fisttpl
adc
sbbl
add
je
mov
std
out
shrb
pushf
ss
xor
or
lret
lret
add
je
adc
jae
out
xor
sbb
inc
mov
jge
repz
addb
and
add
push
mov
dec
aad
cmpsl
dec
xor
xchg
mov
cmp
xchg
pop
fsubr
jl
lcall
cmp
in
xchg
inc
sub
jle
cmp
ret
add
rorb
xor
sarl
mov
sbb
and
dec
xor
xchg
adc
jl,pn
inc
movsb
cmpsl
sub
imul
pop
insl
and
cmp
cmp
jno
mov
inc
scas
xchg
movb
enter
cltd
inc
inc
sbb
lock
stc
pop
mov
cmp
shll
dec
dec
fmuls
and
add
imul
jo
prefetch
or
xor
sbb
xor
jbe
xor
sub
dec
mov
iret
scas
les
call
mov
xchg
add
mov
dec
adc
sub
pop
dec
mov
push
mov
cmc
dec
cwtl
daa
mov
xlat
mov
jno
test
scas
xor
shll
cltd
xchg
mov
repz
mov
std
and
rcl
sub
mov
mov
imul
aam
out
inc
mov
into
aam
add
test
or
stos
mov
out
gs
add
flds
orl
xchg
mov
std
adc
cld
inc
jb
cmp
nop
inc
jle
mov
mov
pushf
pop
test
inc
push
je
lds
and
pop
and
xlat
into
rorb
xor
sahf
ficoml
push
cmpsb
xchg
mov
je
sbbb
sahf
dec
add
inc
mov
arpl
and
test
add
imulb
inc
sbb
dec
inc
cmp
ret
adc
jne
adc
fstps
push
sub
or
adc
sbb
lret
shll
xchg
xchg
rcrb
mov
sti
jle
jb
fwait
sbb
mov
sbb
lret
mov
cld
lret
rorl
or
dec
imul
or
push
sbbb
es
cmpsb
inc
ss
xor
pop
lea
inc
lcall
inc
test
int3
gs
cmp
mov
jns
xor
test
cmp
cld
pop
pop
stos
scas
repnz
daa
cmp
push
repz
sub
mov
sti
addb
aaa
sub
or
sub
bound
xchg
sub
outsb
mov
fadds
mov
popa
insb
xor
test
mov
stc
inc
lret
and
in
or
pop
pop
repz
jnp
add
and
xor
movsl
mov
pop
mov
scas
outsb
mov
or
insb
test
pop
push
push
mov
test
insb
jg
outsl
xor
popa
dec
mov
test
mov
subb
les
into
in
sbb
mov
jno
mov
imul
sbb
jnp
xchg
adc
or
and
adc
arpl
outsb
adc
adc
push
lods
leave
fwait
into
sbb
adcl
push
or
daa
push
imul
jae
mov
ret
mov
pop
adc
les
test
sti
test
outsl
cmpsl
pop
out
xor
loopne
sub
push
out
cwtl
mov
xor
std
movsl
push
dec
mov
push
mov
repz
movsb
lds
outsb
bound
pop
fwait
mov
inc
pop
pop
push
iret
push
pop
sub
push
dec
lahf
test
loopne
pushl
sti
cmp
andl
adc
adc
je
jl
imul
test
jbe
and
and
mov
mov
popl
test
xor
fdivs
xlat
fcom
adc
into
sbb
ret
or
inc
pop
or
mov
sbb
imull
or
les
xchg
cltd
inc
and
movsb
outsl
jle
dec
xchg
inc
outsb
sub
push
mov
push
pop
mov
leave
jle
call
inc
fisttpl
cli
test
loope
ds
imul
or
pop
icebp
fsubl
xchg
pushf
fwait
iret
jmp
mov
test
lahf
xchg
mov
mov
and
push
call
inc
int
popf
and
sub
xor
cmp
inc
test
push
lret
cmp
test
stos
xlat
ds
push
es
lcall
inc
arpl
pushf
sar
mov
int3
sbbb
je
push
enter
bound
push
inc
mov
outsb
sub
jg
add
lcall
fisttpl
daa
mov
xchg
fists
mov
cld
mov
jge
push
dec
xorl
sti
mov
adc
push
jmp
dec
push
sub
call
data16
mov
jle
adc
out
adc
mov
sub
adc
push
xchg
shrb
inc
jl
mov
pop
adc
rclb
in
idivl
mov
aas
fsubr
add
sub
and
xor
aad
ret
nop
or
and
stc
fdivp
mov
xor
sub
mov
arpl
sub
dec
loopne
mov
xchg
inc
sarl
push
cmpsl
addl
cwtl
mov
jns
mov
pushl
mov
mov
test
jae
and
pop
adcl
pop
add
lods
das
mov
sub
sahf
add
scas
addr16
pop
mov
jmp
fmuls
dec
int
int
stos
xor
mov
scas
cli
add
pop
push
jb
inc
popa
add
push
lcall
mov
movsb
fyl2xp1
in
cmpsl
xor
and
xor
sub
fisubl
pushf
es
pop
push
sbb
iret
inc
xor
pop
fiaddl
outsb
mov
or
inc
rep
mov
outsl
stos
jbe
inc
dec
push
mov
rclb
ret
mov
loop
mov
bound
cmp
push
ja
inc
scas
inc
cltd
stos
fistl
rorl
and
out
inc
stos
insl
mov
xchg
insb
out
lock
sahf
lahf
mov
lods
imul
jp
loop
pop
xor
out
push
rorl
push
or
cli
xchg
xor
add
aaa
push
fstpt
sub
fs
stos
in
shlb
cld
scas
andb
in
outsl
pusha
daa
mov
clc
xchg
push
addr16
aas
popa
jno
cmp
popf
pop
mov
fdivs
pop
inc
xchg
out
adc
push
aaa
xchg
stos
pushf
gs
add
jb
out
lret
cmc
popa
or
fcmovbe
mov
pop
xchg
insl
setbe
fisubs
out
pop
stos
std
es
daa
repz
fwait
xchg
xchg
cld
push
sub
arpl
inc
and
cltd
dec
ja
hlt
das
in
outsb
scas
xor
aad
sub
adc
xchg
mov
push
mov
push
dec
pop
clc
xor
aaa
decl
ss
iret
out
adc
sbb
jo
popf
mov
jmp
aad
xor
xor
daa
decl
addr16
push
lds
out
sahf
aas
mov
ret
sub
fwait
xor
cmpsl
int3
addr16
pop
pop
or
in
xchg
cmp
cltd
or
dec
std
pop
mov
mov
push
out
cwtl
arpl
jne
or
popf
jl
outsb
ss
call
or
mov
outsb
xlat
test
fwait
daa
sti
sbb
mov
sbb
subl
fistps
cmp
and
mov
std
jno
jb
ret
dec
jae
mov
xchg
aam
das
mov
aam
andl
cmc
push
enter
pop
lcall
pop
push
adc
mov
mov
jg
pop
imul
add
out
lret
jmp
pop
mov
xchg
jnp
in
push
fwait
mov
loopne
add
test
sbb
xor
xor
int3
xchg
cmp
push
movsb
scas
adc
mov
mov
pop
mov
gs
aaa
popa
inc
out
and
push
inc
stos
jae
mov
jmp
mov
lret
add
nop
loope
inc
iret
lods
mov
out
cmp
mov
jecxz
or
inc
cmp
popa
rorb
ja
dec
xor
fwait
jecxz
or
or
jg
mov
arpl
jo
xor
adc
bound
sahf
lea
daa
pop
icebp
cld
in
xchg
mov
shr
pop
dec
mov
jecxz
or
adc
or
sbb
xor
inc
pop
inc
movsb
xchg
jbe
sub
add
enter
or
cs
in
adc
stos
jle,pt
sbb
pop
push
aam
dec
mov
out
cmpl
cmpsl
mov
sbb
lds
inc
stos
xor
sbb
dec
push
sarl
dec
xchg
mov
cmp
pop
jne
cld
mov
dec
stc
cs
js
je
xor
inc
mov
and
sbb
fnstenv
bound
jb
adc
sub
dec
or
pop
out
jecxz
inc
adcb
or
cmp
into
mov
into
ljmp
dec
test
mov
xor
xchg
adc
xor
leave
pop
sbb
fsubs
push
les
ja
add
sub
push
daa
mov
mov
insb
xchg
mov
nop
push
sbb
sti
and
jge
dec
movsb
inc
cwtl
lcall
addr16
dec
add
cmp
movsl
sub
cwtl
xchg
mov
jge,pn
lcall
mov
aaa
push
sahf
and
es
push
orb
mov
push
sub
sub
pop
push
popa
cld
popf
mov
lret
out
add
cmp
cwtl
mul
in
out
mov
add
add
sub
bound
fbstp
lods
rorl
mov
sbbl
sub
jbe
lret
cmpsl
sbb
mov
ljmp
and
inc
sbbl
icebp
mov
adc
mov
or
jle
mov
jo
mov
in
adc
stos
aaa
jo
mov
cmp
jne
cmc
xchg
jnp
fnstenv
xchg
or
and
push
push
insb
sti
aad
sub
mov
pop
fiadds
inc
je
jbe
sti
sub
pop
ret
jle
fmul
sub
xchg
mov
faddl
jle
loop
xor
es
and
mov
int3
stos
rcrb
mov
cltd
clc
adc
ja
pusha
testb
mov
gs
enter
pop
xchg
cmp
ja
mov
mov
mov
mov
shrl
mov
push
fistl
je
in
push
insb
mov
dec
test
cmp
aaa
pop
clc
xchg
jnp
les
push
push
mov
cmpsl
fdivp
add
sub
mov
filds
sbb
or
into
mov
inc
aam
pop
cmp
lds
inc
pop
cltd
cmpsb
adc
outsb
sbb
sub
mov
pop
jecxz
movsb
mov
movnti
insb
aad
cmpsb
jecxz
movsl
adc
sbb
mov
fs
and
std
daa
seto
sbb
daa
cs
xchg
ja
and
inc
mov
mov
inc
and
insb
jns
dec
add
sbb
sahf
lcall
jbe
xor
cld
or
stos
xlat
mov
in
push
test
pop
xorb
add
pop
mov
add
rorl
or
rolb
out
fmuls
mov
mov
cmc
cli
mov
ja
cmp
inc
pop
sub
jns
jae
test
mov
imul
mov
cli
bnd
daa
xchg
xchg
push
inc
add
cltd
pusha
out
les
sbb
jge
sub
mov
lds
rorb
xchg
jmp
sbb
mov
sbb
mov
les
shll
pop
ds
ret
inc
pop
jg
add
or
fistpll
dec
jl
cmc
jnp
lret
addl
lds
sub
pop
xchg
mov
out
insb
std
mov
mov
cli
push
es
push
pop
sbb
xlat
hlt
sub
cmc
outsl
jno
std
shlb
aaa
lret
inc
mov
add
cltd
pop
js
call
lret
je
shr
pop
mov
clc
icebp
mov
scas
push
mov
aaa
xor
push
or
sbbl
cmc
or
mov
andl
shlb
mov
icebp
fidivrs
lret
int3
fistps
pop
xchg
ret
mov
je
push
pop
int
push
add
out
sbb
dec
push
adc
pop
xor
mov
mov
es
rolb
icebp
ljmp
dec
jo
cmp
scas
cmp
or
add
sbb
pop
inc
out
sub
test
mov
mov
xor
sub
repz
or
xchg
clc
fsubrs
add
sbb
imul
sub
push
pop
sbb
jecxz
push
sarb
test
mov
int
in
ret
mov
mov
mov
imul
orb
mov
mov
mov
sti
mov
sbb
cwtl
dec
push
sub
lea
jecxz
or
sub
fimuls
or
push
pushf
mov
mov
stc
jl
sub
cmc
ret
outsb
mov
fistpl
jmp
pop
repz
pop
lcall
xchg
in
fstps
test
add
repz
lcall
fdivrl
push
add
push
into
iret
andl
xchg
adc
mov
mov
into
dec
xchg
jle
icebp
jo
xchg
mov
cwtl
jne
xor
je
or
mov
xor
loopne
into
xchg
xor
adc
mov
sub
gs
pop
mov
subl
rcl
mov
cmp
fidivrl
xchg
in
mov
push
insb
cwtl
loope
out
push
sub
sbb
and
rorb
or
jae
xchg
dec
sbb
push
adc
enter
repnz
mov
cmpsb
jge
cmpsb
mov
pop
icebp
fimull
gs
jl
inc
jb
scas
loope
in
xorl
fildl
mov
popf
mov
or
aas
xchg
cmc
push
js
in
insb
imul
in
outsb
and
in
out
inc
movsl
inc
insb
and
sbb
stos
mov
std
push
mov
mov
push
jae
push
rol
ja
xchg
out
sbb
add
adcb
push
or
outsb
mov
call
in
cltd
adc
inc
xor
repz
dec
ds
out
lds
mov
jecxz
xorb
pop
pop
mov
sbb
scas
cmc
cmp
leave
fbld
cmp
or
cltd
int
popa
leave
and
sbb
cmpsb
out
insb
mov
jno
mov
lahf
rcrl
scas
rcl
lcall
mov
pop
mov
jns
adc
sbb
cmp
xlat
mov
jb
mov
pop
mov
imul
push
addr16
sti
inc
icebp
inc
jp
or
mov
shll
int3
mov
xchg
pop
clc
or
and
ror
fcmovu
push
pop
adc
aad
nop
adc
jnp
add
or
clc
out
pop
in
xchg
push
xchg
mov
ret
aaa
xor
jmp
and
add
and
pop
cmovg
rcrl
sub
cmpsl
in
and
insl
mov
mov
pop
outsb
xlat
dec
cmpsl
push
and
or
arpl
xor
pmullw
int3
mov
jnp
jb
test
rcll
jno
sbb
mov
es
imul
int
push
sub
inc
dec
ja
inc
sbb
jo
pop
aad
inc
inc
cmp
push
cmp
or
pop
xchg
jnp
imul
inc
fcomps
stos
xchg
jg
push
ja
dec
xchg
push
mov
or
cmc
cmc
mov
add
lods
and
xor
cmp
in
push
sub
pop
dec
adc
inc
push
cmp
jne
packuswb
jmp
negl
out
cmp
addb
out
cmp
fmull
pop
out
sbb
outsb
in
or
adcl
ja
or
fisubrs
mov
loope
sub
xorl
ljmp
into
mov
mov
bnd
cmp
clc
rcl
cli
pop
into
leave
gs
int3
fldenv
cmp
decl
push
push
insb
into
mov
ja
mov
pop
cmp
push
sbb
out
jae
mov
fildll
push
aaa
popl
repz
fists
inc
adc
lods
enter
out
or
dec
mov
psrad
jg
mov
aas
sbb
jp
leave
rcrl
mov
jmp
idivb
xchg
pop
sbb
or
dec
xor
je
sub
fistpl
hlt
ret
ljmp
les
test
mov
mov
jns
mov
push
mov
dec
ds
scas
cltd
pop
jmp
dec
lods
push
and
add
addr16
das
add
mov
xor
sbb
pop
jno
sbb
int3
mov
mov
lcall
addl
jg
fists
rcrb
cltd
adcl
incl
jle
lcall
rorb
rcrb
fnstenv
mov
xchg
stc
into
div
stc
cmc
or
dec
out
gs
fadds
jge
je
cmp
adc
sahf
fiaddl
aas
call
or
pop
mov
int
les
lcall
push
out
pop
pop
dec
dec
lret
mov
pop
xor
pop
cmc
ja
insl
pop
or
mov
cmpsl
idivl
nop
mov
rol
cs
sbb
cmp
mov
inc
xor
stc
ret
xchg
inc
mov
xchg
std
mov
fs
mov
or
jg
xchg
lock
es
addb
call
leave
movsb
xor
mov
rcll
mov
sbb
pop
xor
mov
test
mov
arpl
repnz
push
push
xor
movsb
cmp
stos
inc
adc
inc
aam
lcall
inc
lret
pop
bound
out
out
repz
and
leave
rcr
outsl
push
ja
mov
add
sbb
ds
int3
aam
mov
inc
aad
out
aam
inc
sub
adc
ss
and
pop
lret
jne
or
dec
sub
cmp
pop
cmp
dec
test
xor
xchg
lods
prefetchwt1
repnz
xchg
push
lret
lcall
dec
stos
mov
lcall
jl
adc
call
mov
mov
inc
inc
sbb
mov
rorb
dec
mov
mov
ds
icebp
lock
push
push
mov
push
pop
or
adc
imul
pop
mov
fildl
pushf
in
pop
push
sub
jl
mov
jae
xchg
aaa
inc
test
in
addr16
aas
pop
mov
adc
in
test
mov
cmp
mov
repz
inc
stos
inc
das
loopne
ret
pop
fcmovb
sbb
xor
push
fwait
out
movsb
pop
mov
or
add
or
dec
loop
pop
or
adc
pop
fbld
outsb
mov
in
sub
dec
jno
mov
test
jns
out
push
jge
bound
movsb
inc
cld
adcb
sub
add
pop
aas
pop
stc
lret
cmp
push
outsl
fisttps
stos
xor
mov
xor
or
sub
mov
repz
dec
and
shll
cwtl
mov
push
sbb
push
adc
pusha
push
jae
gs
insl
scas
rclb
std
lea
lret
scas
imul
aas
jle
gs
and
jge
cld
xchg
fisubs
adc
mov
outsl
push
loope
mov
sbb
or
adcb
pop
cld
in
lods
xor
aas
enter
or
movsb
cmpsb
bound
or
pop
ficomps
in
enter
sub
mov
rolb
les
pop
cmpsl
out
inc
cmp
mov
daa
mull
mov
ftst
test
jne
aam
mov
cltd
and
jg
subl
dec
loop
rcr
lods
add
adc
or
pop
sbb
imul
mov
imul
sbb
lock
lods
xor
jg
sub
fstpt
jae
cmpsb
pop
js
popa
jae
xor
dec
push
ljmp
fsubrs
mov
pop
pop
fstpt
mov
arpl
decb
stos
jg
ret
jns
jne
xchg
xchg
xchg
rorl
ja
add
add
neg
stos
xlat
ret
jg
fisttps
enter
cmp
push
dec
xchg
cltd
movnti
shlb
test
dec
les
sub
inc
in
stos
pop
insb
insb
and
jb
pop
rorb
xor
push
out
mov
sub
movsb
sahf
cmpsl
xchg
push
fists
push
ja
mov
sbb
jmp
stos
test
test
lods
js
std
call
mov
push
imul
inc
pop
sub
xor
stc
push
or
mov
emms
cmp
and
and
arpl
test
jg
push
sbb
int3
and
add
sub
aam
dec
lret
sbbl
push
mov
test
adc
dec
rcrl
insl
mov
sub
rclb
aad
nop
cmp
mov
jo
rorl
dec
out
inc
mov
in
mov
xor
idiv
in
xchg
or
pop
xor
inc
in
pop
inc
or
hlt
fnstsw
jl
push
inc
mov
data16
xchg
jnp
xchg
call
in
les
mov
cmp
cld
pop
popf
xchg
sub
adc
sbb
dec
inc
mov
pop
push
dec
sti
cld
outsb
lret
sbb
jbe
daa
jg
enter
enter
xchg
popf
pop
sahf
pop
lahf
mov
cmp
push
fistpll
mov
dec
mov
rclb
loopne
pusha
or
aaa
cmc
cmp
cmp
mov
aaa
loopne
dec
cld
and
pop
and
in
sbb
int
in
mov
mov
cmp
pop
and
pusha
adc
in
xlat
adc
int3
int
pop
add
in
lret
lock
mov
notb
mov
je
fdivr
sub
mov
loop
popf
mov
frstor
data16
insb
inc
mov
cli
imul
adc
repnz
sub
jecxz
xor
jo
pop
jecxz
ss
mov
lock
mov
or
mov
add
mov
mov
pusha
adc
sbb
arpl
pop
mov
insl
dec
mov
xor
and
sub
push
js
sbb
jns
cmp
cltd
inc
and
test
aas
out
cmp
inc
je
test
and
and
fisttpl
or
xor
insl
popa
and
mov
and
fildl
mov
push
orb
icebp
sbb
dec
int3
xchg
xor
int
xchg
sets
mov
cmp
xor
mov
push
sbb
testb
mov
stos
in
es
adc
ss
mov
lods
cltd
ss
add
mov
mov
repnz
fcoms
cmpsb
sbb
push
push
rclb
or
insl
cmp
or
xor
ljmp
adc
inc
addr16
js
mov
or
adc
test
fisubrs
arpl
loopne
adc
shll
or
movsl
imul
js
mov
xchg
jb
mov
sub
mov
lds
pop
cmpsl
out
dec
test
and
xchg
and
addb
inc
call
and
pop
addr16
pop
clc
sbb
cltd
xchg
lcall
inc
xlat
ret
push
pop
jp
mov
or
bound
xchg
loop
mov
mov
mov
mov
aaa
mov
mov
repnz
int3
nop
push
ss
cmp
pop
sub
xlat
push
rcr
lods
add
sub
test
stos
push
rcll
pop
add
cld
jno
lds
int
jecxz
xchg
aaa
push
mov
cmpsb
or
mov
outsb
mov
mov
sahf
lret
push
cmp
lahf
lods
rcll
aad
int
int
pop
xor
or
inc
call
and
scas
aas
test
pop
and
imul
lds
jbe
out
mov
mov
cwtl
stos
test
mov
ljmp
xchg
sbb
insl
sbb
pop
fcmovne
stos
shll
mov
mov
xchg
cmp
sub
or
pop
sti
cmpb
sarb
ss
xchg
mov
dec
xchg
lret
bound
fcompl
push
jmp
cmp
push
jns
inc
imul
dec
in
add
and
jne
push
adc
aam
sub
je
bound
loopne
xchg
mov
loop
test
aas
pop
stos
pusha
add
popa
add
mov
xor
dec
shl
pop
inc
fsubrl
aas
dec
icebp
pusha
cld
xlat
sbb
dec
sbb
cld
pusha
adc
je
adc
in
sub
sbb
or
xchg
push
xchg
xor
dec
xchg
ret
imul
mov
cmp
mov
ficoml
push
cmpsb
test
push
mov
dec
mov
sbb
dec
repnz
cmovg
clc
inc
dec
dec
iret
lret
cmp
inc
fnstenv
mov
call
ret
test
adc
jne
rorb
insl
stos
incb
jmp
xchg
sub
jmp
pop
jge
sbb
mov
jae
ljmp
mov
iret
test
dec
pop
sbb
mov
add
sbb
lds
push
xchg
ja
test
pusha
pop
jg
push
insl
dec
lods
adc
inc
inc
adc
in
inc
sti
and
pushf
es
dec
push
adc
adc
and
dec
push
adc
aaa
sbb
or
pop
inc
dec
inc
xchg
idiv
aad
pop
in
fdivl
adc
cmp
jg
repz
push
dec
pop
jnp
mov
mov
fstpl
sar
push
cmp
xor
int
in
fucomip
fsub
stos
mov
jp
lea
outsl
dec
xchg
shlb
push
outsl
pop
enter
adc
xchg
xlat
jmp
sbbl
mov
lods
xor
cmpl
idiv
test
cmp
jbe
cmp
sub
jge
pop
sbb
pop
das
test
test
rcrl
adc
sbb
int3
pop
mov
loop
inc
stc
aas
push
fldl
movsl
cmc
in
add
inc
cmp
ficoml
mov
rcrb
jnp
stos
mov
jmp
mov
jecxz
test
xchg
aas
sbb
xor
out
sbb
adc
rorb
ljmp
icebp
subb
in
jecxz
je
je
cmpsl
test
cltd
mov
or
f2xm1
in
out
and
push
push
jbe
gs
dec
sarb
and
rorb
xor
xchg
icebp
insl
aam
rclb
arpl
and
fiadds
xchg
mov
bound
sahf
dec
rorl
repnz
mov
pusha
and
xchg
or
test
iret
and
jnp
and
mov
xor
cwtl
xor
into
xchg
rorl
out
nop
rolb
jbe
out
xor
rolb
loopne
pop
xchg
xor
lcall
cmpsb
mov
repnz
pushf
mov
xor
fxch
pop
xchg
sbb
stos
sbb
jb
loope
jbe
ja
leave
push
mov
lds
test
cmp
push
inc
mov
jmp
mov
shlb
nop
or
mov
shrb
les
mov
int
call
or
lret
sbb
cmpsl
push
pop
out
xchg
jno
pop
scas
inc
jb
lods
out
and
jl
mov
mov
scas
fisubs
inc
adc
xor
jle
fsubl
es
fwait
je
stos
pop
pop
repz
test
push
scas
enter
lea
nop
mov
pop
test
xor
rdtsc
push
mov
or
adc
lock
test
and
frndint
xor
cli
in
leave
add
stos
movsb
imul
subb
fs
outsl
aas
idivl
cmp
jmp
add
mov
out
jge
jle
xor
sbb
and
push
test
sbb
or
inc
js
jo
popa
insb
pop
mov
cmp
loop
xor
cli
push
mov
hlt
sbb
mov
cmp
adc
popa
pop
rorl
popf
movsb
pop
imul
sub
rclb
pop
repnz
sarb
lea
repz
jg
scas
sbb
mov
mov
or
stos
hlt
je
mov
call
mov
jmp
fst
into
test
adc
fwait
push
test
xor
xchg
test
cmp
sbb
jns
pop
pop
enter
es
mov
test
fs
mov
sub
jp
hlt
jle
mov
xor
test
nop
add
mov
into
or
sbb
sub
fsubrl
dec
sti
adc
call
fbld
rcrb
outsl
outsl
jecxz
subl
xchg
dec
cmp
pop
movsb
ret
in
mov
nop
pop
or
xchg
scas
mov
and
mov
lock
jmp
fdiv
shll
dec
aam
adc
movsl
sbb
outsl
mov
jmp
hlt
cld
scas
jbe
je
test
xor
jns
mov
test
jmp
push
pop
cmc
repz
aas
pop
inc
mov
adc
iret
jg
push
fstl
cmp
sbb
out
jp
and
imul
xchg
ficomps
xchg
dec
dec
jge
out
loop
cwtl
inc
shl
test
and
cli
dec
rorb
fwait
push
fidivl
inc
dec
pop
cwtl
je
repz
dec
in
xor
test
mov
mov
add
iret
mov
pop
fwait
std
mov
sub
jb
push
or
sub
shlb
mov
lcall
adc
mov
adc
xchg
es
jb
pushl
imul
cmpsb
cltd
and
mov
or
push
aam
and
out
mov
in
insl
or
out
data16
int3
popf
jle
sub
shrb
cmp
iret
inc
mov
jecxz
mov
rcll
dec
aad
loop
sub
insl
pop
mov
sub
divl
fdivrs
call
repnz
adc
inc
rol
jg
cld
and
add
push
xchg
mov
sbbl
mov
jo
add
mov
dec
pop
xchg
xlat
inc
fbld
ljmp
dec
cmp
cmp
nop
icebp
adc
mov
rcrl
cmpsl
insl
cmp
mov
and
mov
sub
jno
movsl
or
xchg
inc
inc
jp
aad
cmc
cli
pop
xchg
push
mov
imul
mov
jno
adc
mov
adc
jp
mov
rcrb
js
out
cmp
sahf
sbb
ljmp
pop
cmp
cmp
pop
mov
inc
pop
not
cmc
mov
or
data16
sbb
dec
add
mov
mov
shrl
outsl
mov
insl
rcll
repnz
loop
cmpsb
sub
fsubl
nop
xor
rorb
mov
jo
mov
mov
push
mov
outsb
jno
push
addr16
or
sub
mov
jmp
hlt
jp
jg
push
test
cmp
icebp
into
mov
movb
loop
mov
test
sub
push
xor
decl
pop
lods
cmp
fisttpl
scas
sub
jnp
test
pop
shrl
popa
scas
sbb
add
add
andb
pop
jecxz
lods
lcall
and
mov
cmp
movsl
inc
lcall
sbb
dec
inc
das
or
sbb
fldl
or
mov
jg
inc
insl
push
mov
imull
add
dec
scas
lcall
sub
shll
adc
fsubrl
jle
cld
in
aas
bound
pop
mov
and
xchg
push
sbb
dec
mov
nop
add
xlat
jecxz
daa
fimuls
dec
hlt
cmp
call
adcb
sbb
or
jns
icebp
lea
andl
pop
xchg
mov
out
lock
and
fidivrs
xlat
pop
and
hlt
pop
into
push
insb
lds
ljmp
les
std
adc
test
into
mov
repz
imul
push
and
jl
cmp
pop
sbb
gs
enter
ror
cmp
jge
pop
cmp
and
pop
cmp
imul
sub
inc
nop
and
inc
xchg
sub
cld
test
mov
je
jp
add
dec
movsl
or
mov
imul
scas
lock
sbb
mov
in
pop
movsl
fwait
xchg
out
jo
movsl
pop
mov
aaa
mov
or
cld
mov
out
or
jbe
dec
mov
aas
mov
nop
fcomip
addl
leave
mov
and
call
imul
dec
hlt
mov
dec
cmp
rcrb
popa
xchg
jmp
xchg
fidivrs
cmc
jmp
lret
adc
lods
jb
xchg
lds
xor
cltd
and
rcrb
adc
or
fiaddl
gs
adc
xor
sbb
test
pop
mov
imul
subl
fdivl
xlat
mov
sub
sbb
subl
mov
mov
pop
mov
mov
sarl
ret
push
dec
mov
stc
out
shll
xchg
std
js
mov
pop
or
cmp
hlt
jecxz
jp
in
cmp
jb
push
mov
push
or
rolb
out
sub
xchg
add
sbb
cmp
xor
jg
pop
fbld
xlat
inc
aad
rorl
out
mov
into
js
fcoml
inc
pop
hlt
inc
fwait
div
lret
sub
outsb
js
add
push
sbb
cmp
sbb
pushf
outsl
cmp
xchg
cs
imul
pop
push
jmp
sub
pushf
in
leave
repz
repz
leave
inc
inc
inc
mov
aam
lods
ds
jg
cmp
lods
mov
es
pop
or
mov
mov
sub
addb
hlt
test
ja
push
stos
sbb
loope
enter
sbb
jp
notb
xlat
cmp
push
shll
aam
jg
mov
dec
arpl
and
and
pop
mov
sbb
mov
pop
cmp
lahf
scas
out
gs
jge
jb
rolb
fxch
sahf
mov
sub
data16
cli
push
adcl
inc
dec
cld
daa
pop
xor
cmp
neg
test
lock
addb
xchg
inc
test
xor
xlat
cmpsl
xchg
xchg
cmp
inc
fcmovnbe
jl
mov
je
add
jbe
xchg
fcoms
cltd
mov
rcl
aas
shll
movsl
inc
fidivrl
mov
mov
mov
xchg
fmul
xor
add
test
push
out
cmpsl
jno
mov
cli
mov
inc
stc
sub
jge
out
dec
sbb
outsb
and
push
cltd
ja
inc
and
add
push
fistps
imull
pop
or
jns
out
push
or
cmp
jbe
pop
insl
nop
xchg
movsl
not
mov
mov
idiv
scas
dec
pushf
or
xchg
dec
pop
adc
xchg
in
xchg
mov
jecxz
push
push
pop
jmp
loope
insl
test
test
leave
cltd
aas
sbb
mov
or
push
jp
andb
or
gs
sarb
add
push
cli
daa
xor
fadds
adc
subb
or
cmp
mov
fs
mov
or
int3
cmc
mov
cld
andl
add
ret
dec
jle
stos
add
inc
sub
and
fisttpll
mov
fs
pushf
outsb
and
jno
adc
sahf
fldenv
repz
aam
mov
nop
out
inc
test
cli
sbb
cwtl
and
mov
scas
popa
ficoml
mov
hlt
cs
call
fsub
xchg
jbe
adcb
cmp
mov
mov
test
push
mov
xchg
xchg
push
movsl
adc
pop
xchg
jno
mov
es
xchg
mov
loope
loop
insb
cld
mov
jne
dec
adc
pop
sbb
in
jae
and
bound
out
jno
inc
mov
gs
shl
cmp
enter
mov
pop
dec
pop
xchg
adc
inc
mov
jl
sahf
xlat
jecxz
test
xchg
jbe
fldl
inc
pop
bnd
sbb
ror
mov
mov
sub
iret
and
popa
xchg
lcall
sbb
pop
test
mov
daa
or
insb
or
test
mov
ja
and
in
std
stc
aas
outsl
and
int3
enter
js
pop
dec
xor
add
dec
mov
arpl
int
push
test
sbb
push
xor
xchg
push
fwait
sbb
jae
aam
adc
mov
sub
dec
cmp
mov
inc
dec
adc
and
add
add
adc
mov
dec
add
cltd
popf
push
xlat
sarl
rcrl
jecxz
mov
pop
cltd
imul
popa
inc
popf
and
popa
or
lahf
jmp
mov
pop
loopne
jnp
in
sarl
mov
dec
hlt
stc
xor
orl
sub
mov
sub
mov
push
xor
mov
push
mov
xchg
jnp
mov
test
inc
inc
or
inc
mov
sbb
dec
stc
sub
or
inc
ljmp
out
jle
jnp
cmp
sbb
cld
push
pop
mov
stos
ret
cwtl
insl
insl
call
mov
jo
pop
add
xchg
in
and
add
pop
sbb
loop
aaa
pop
scas
cmp
and
push
jle
mov
outsl
lods
sub
xchg
xchg
push
jp
fsub
or
xor
popf
aaa
jae
or
pop
pop
out
mov
in
cld
xlat
insl
xchg
pop
and
out
sub
ret
inc
ds
out
mov
test
add
jg
out
pop
push
es
icebp
and
xlat
mov
dec
js
add
popa
mov
cwtl
add
lahf
xor
inc
fbld
mov
jge
icebp
jg
push
jbe
test
les
or
xchg
mov
mov
stos
cmp
lods
lret
jnp
mov
stc
cmpb
xchg
and
jge
xor
pushl
jb
pusha
pop
lea
lret
repz
shl
or
mov
cwtl
sbb
xchg
xor
inc
in
add
call
ffreep
adc
rcl
fstpt
negb
loopne
dec
mov
mov
or
sub
shll
mov
xlat
in
cmp
pop
mov
subb
jp
dec
add
movsl
sub
iret
jno
xchg
lret
mov
dec
scas
aaa
jge
enter
outsl
push
pop
push
xchg
mov
lock
stc
lret
repnz
aam
jmp
dec
test
pop
in
xchg
dec
adc
inc
popa
push
adc
enter
out
pop
push
cmp
and
adc
push
mov
push
lods
xchg
icebp
sub
and
dec
imul
loop
dec
mov
lea
mov
sti
add
jp
sbb
mov
scas
pushf
fistpl
aad
mov
loop
push
repnz
mov
mov
iret
das
lcall
jge
or
stc
dec
mov
push
cs
nop
ljmp
fs
hlt
or
lea
jl
cmp
lock
add
or
ds
pop
out
clc
xchg
adc
pop
push
sub
sub
test
push
ljmp
ja
push
sbbb
dec
inc
fstpt
inc
bound
jmp
jmp
xor
cwtl
jb
dec
rolb
inc
inc
push
aas
fiaddl
sbb
test
pop
out
xlat
adc
jae
xchg
shll
inc
mov
mov
test
cmpb
sarl
mov
stc
xlat
xor
in
mov
das
mov
push
fistps
es
jmp
mov
lcall
out
dec
jl
xor
cmp
jmp
xchg
cmp
push
setnp
jb
fldl
xor
mov
mov
xchg
cwtl
inc
subb
dec
addr16
pushf
pop
adc
sbb
mov
xlat
sti
xor
in
inc
repnz
mov
cwtl
dec
out
xchg
jl
mov
push
pop
in
pop
out
jno
out
subl
arpl
xchg
sub
lea
jmp
push
in
idivl
push
into
and
mov
inc
mov
cld
mov
mov
enter
lret
xchg
hlt
cmp
xor
outsb
and
dec
adc
mov
test
cwtl
jb
sbb
int
or
ret
movsl
or
pop
rcrl
cmpsl
add
leave
movsl
fs
cmp
mov
cmc
mov
sbb
insb
test
cmpl
clc
inc
mov
dec
lods
sub
int3
and
fsubl
lahf
fsubl
hlt
mov
push
sub
lock
jbe
or
lcall
in
test
adc
xchg
fmulp
jp
pop
cmpsb
mov
mov
mov
rclb
add
lcall
dec
out
inc
mov
dec
inc
insb
jp
jne
insb
aas
jo
test
or
mov
dec
lds
inc
addr16
and
mov
jecxz
std
out
orb
add
daa
icebp
mov
mov
fs
rcrb
jns
jno
or
push
lea
repnz
fidivrl
mov
dec
sub
adc
fcoml
in
cmp
push
mov
dec
mov
and
testl
mov
mov
arpl
cmp
xchg
jns
aas
push
iret
cmp
ret
icebp
sub
sub
cli
and
ds
add
stos
aam
lods
xchg
loopne
data16
loope
mov
leave
outsb
sub
cmc
and
stos
mov
adc
adc
outsl
cs
in
xlat
push
loopne
mov
fadds
fsubrl
xchg
imul
mov
testl
popf
mov
shrl
sbb
cwtl
push
lahf
mov
enter
fucomi
lret
mov
stc
mov
xlat
dec
inc
sub
jle
pushf
jg
popa
je
mov
and
inc
push
lcall
jp
fmul
pusha
lcall
push
push
scas
jge
mov
imul
xchg
sahf
pop
and
test
outsb
xchg
push
sahf
jbe
rorl
mov
and
cwtl
push
add
ffreep
xchg
ret
xor
xchg
mov
testb
xchg
shll
gs
dec
adc
lret
mov
xchg
repz
jge
imul
or
mov
cwtl
xlat
or
add
or
jb
xor
in
daa
test
mov
adc
dec
mov
int3
xchg
sbb
fsubrl
sbb
nop
sub
dec
ret
sub
ss
scas
cmpsl
mov
add
ret
xor
lock
mov
jae
les
add
cmc
jp
adc
stos
movsb
ret
inc
jnp
push
cmp
jae
dec
stos
jmp
sub
jno
sub
mov
ficomps
js
mov
shll
mov
inc
and
andl
xor
lahf
loope
out
movsl
add
adcl
lds
add
les
jge
shll
and
push
sets
test
mov
loopne
ret
lea
mov
test
imul
push
jmp
pop
pop
xor
and
mov
mov
jb
and
test
cli
mov
sub
cmovl
mov
subb
and
mov
cmpsb
mov
xchg
inc
mov
adc
leave
push
adc
mov
mov
lcall
xlat
scas
mov
gs
sbb
mov
sbb
sarb
fbstp
lock
test
mov
push
fdivrs
adc
frstor
scas
std
inc
push
aaa
adc
pop
and
pop
cld
jle
push
ljmp
sar
add
lods
mov
inc
add
das
addr16
xchg
lcall
pop
shrl
fs
scas
movsb
mov
push
hlt
orl
leave
lret
inc
loope
xlat
xchg
test
aas
xchg
or
sbb
xor
test
push
cmp
hlt
mov
and
rcrb
imul
int
cmp
lret
pop
call
push
ss
in
shlb
or
or
popa
mov
adc
je
sarb
xor
out
ljmp
ret
or
repz
nop
call
xor
add
loop
pop
xor
test
xor
pop
cmc
dec
fcomps
dec
insb
or
cltd
mov
pushf
ss
mov
fimull
shl
push
inc
push
add
dec
or
stos
push
testl
shr
shr
jl
sbb
xchg
adc
stc
ja
into
icebp
in
and
mov
test
xor
pusha
jbe
shl
sub
out
lret
xchg
pop
icebp
jp
cli
pop
xchg
xor
addr16
lock
push
shl
dec
mov
cli
popa
cmp
jle
sbb
incb
xor
test
jle
movsb
or
jge
xor
sub
pop
int
pushl
fs
mov
mov
cld
pop
cmc
pop
pushf
aaa
cmp
mov
mov
fildll
sahf
and
cmpsb
movb
jnp
ret
sbb
cmpsb
out
popl
inc
pop
pop
mov
mul
add
inc
push
inc
rclb
sub
adc
dec
add
aad
add
in
jne
cld
adc
gs
jl
push
or
sti
vorps
rcr
aam
mov
mov
arpl
insb
mov
adc
roll
mov
ret
mov
enter
sti
lea
lods
mov
loope
movsb
cmc
lock
inc
insl
push
icebp
xor
ljmp
add
xor
sbb
push
jecxz
sti
cmpsl
and
pop
mov
xor
rcrb
push
pop
inc
loop
loop
add
out
lret
popa
lds
test
xor
xlat
sbb
inc
inc
jl
mov
mov
in
ds
add
push
mov
icebp
fs
sub
xchg
incb
jne
mov
lcall
mov
mov
ftst
xchg
imul
xchg
loope
xlat
loope
data16
out
push
push
pop
mov
pop
xor
adcl
jmp
add
pushf
add
arpl
aas
std
mov
pop
loope
ss
fldpi
imul
loop
cmc
stos
in
xchg
jge
dec
aas
or
lret
shll
cwtl
test
add
imul
push
mov
sarb
mov
mov
cmp
cmc
xor
pop
fwait
push
icebp
rolb
mov
negb
push
sbb
cmpsl
sbb
adc
push
cmpsl
xchg
inc
test
rcr
mov
xchg
frstor
repnz
out
mov
adc
sti
and
lock
add
cwtl
jmp
fisttps
ljmp
fsts
jo
inc
jmp
mov
cmp
adc
pop
mov
push
mov
rcrb
xor
and
popf
cmpl
mov
dec
mov
mov
xchg
loope
ljmp
pop
sti
push
jg
movsb
test
xorb
aaa
imul
push
lea
in
lcall
inc
sub
push
mov
sbb
inc
in
push
xor
push
loope,pn
fsubl
pop
fsubrl
jecxz
aas
mov
add
mov
push
mov
dec
mov
out
jmp
pop
leave
or
dec
add
and
mov
addl
dec
jg
mov
add
sbb
pop
xchg
mov
xor
mov
mov
and
push
mov
fisubl
test
dec
inc
jnp
or
mov
scas
ret
sbb
push
dec
push
aam
popa
adc
lock
xchg
sahf
push
stc
adc
je
fisttpll
fmull
mov
pop
adc
pop
pop
inc
jl
insb
jg
pop
adc
aas
mov
jle
ds
fstl
push
mov
pop
xchg
fisubrs
jno
aas
clc
xlat
sub
sub
mov
into
jne
and
or
pusha
ljmp
es
pop
adc
sbb
leave
bound
ds
sti
daa
push
rcrl
xor
lret
adc
cmp
xor
pop
add
cli
adc
pushl
fnstcw
lahf
repz
rorb
icebp
pop
aaa
addl
popa
inc
mov
xor
dec
mov
in
add
xchg
push
stos
fisttpll
mov
icebp
sub
mov
shr
push
divb
mov
dec
xchg
aas
xchg
mov
sub
mov
sti
test
fistpl
insb
scas
xchg
jp
sbb
pop
aaa
andb
pop
mov
push
loope
mov
les
xchg
ss
lea
jbe
sti
fisubrs
mov
fidivl
ret
je
jb
fwait
shlb
into
inc
xor
pop
subl
pop
icebp
test
xor
in
sti
scas
xchg
test
mov
add
cmpsb
and
add
bnd
or
cli
pop
push
shll
pusha
mov
cmp
mov
sbb
sbb
jg
inc
gs
inc
push
jecxz
mov
mov
cli
sub
subb
pop
mov
popa
and
fs
mov
mov
push
xchg
adc
and
xor
mov
mov
sbb
adc
cmp
adc
xchg
sbb
sbb
das
mov
mov
sub
sbb
cmp
pop
inc
in
lret
dec
data16
push
ror
xorb
imul
dec
jb
insl
cmp
push
adc
mov
loop
daa
inc
insb
mov
imul
jge
std
jb
jge
xchg
in
lods
in
inc
mov
xlat
inc
das
and
lret
loop
add
cld
std
dec
out
mov
icebp
out
inc
push
xlat
pop
cltd
ficomps
sub
leave
mov
mov
jb
es
mov
cmc
fwait
cwtl
shr
xchg
pop
fisubrl
icebp
push
jbe
arpl
fcompl
subb
sub
dec
in
popf
lret
add
inc
out
negl
xchg
adc
inc
and
pop
lret
push
out
fxch
push
xor
cmp
xchg
cmc
push
xor
mov
stos
inc
andb
movd
mov
repnz
xor
insb
jg
and
mov
xor
lock
popa
push
fnstsw
ret
lods
stos
sbb
mov
outsb
je
adc
and
dec
jbe
repnz
jne
aaa
rclb
les
in
mov
inc
or
cmpsl
rol
in
inc
push
xor
enter
gs
movsl
xor
jae
out
lock
xlat
sub
popf
xchg
adc
pop
test
aaa
aaa
inc
inc
andl
xchg
in
jnp
push
in
cmp
cwtl
aaa
dec
cmp
lea
shll
mov
scas
xlat
cltd
je
jecxz
and
mov
push
or
fdivr
addr16
gs
in
push
dec
adc
jp
push
push
adc
inc
sub
jg
mov
inc
loope
add
aam
or
fnstcw
dec
push
enter
test
clc
cwtl
movsb
xor
mov
mov
aad
jmp
aaa
push
lcall
aaa
push
or
jecxz
inc
int
lods
mov
push
cs
pop
or
popa
fsts
negb
mov
xlat
or
out
or
xchg
popf
xchg
pop
add
mov
pop
cmp
lods
jbe
inc
into
jae
lds
loopne
outsb
push
jmp
test
xchg
mov
pop
xchg
lret
adc
loop
mov
sti
xchg
cmp
cmpsb
inc
aam
xor
cs
sub
xchg
xlat
jge
pop
aam
aas
and
add
jo
ret
dec
inc
jle
lock
out
cwtl
push
mov
mov
push
jmp
dec
fisttpll
cltd
mov
push
fimull
and
dec
outsb
cmp
cmp
and
sbb
jae
ss
pop
jl
fst
mov
jne
jnp
cs
sbb
dec
sbb
or
test
push
rcrb
inc
mov
int3
mov
test
cmp
mov
sbb
imul
or
lcall
testl
in
pop
jb
xchg
stos
xchg
and
pop
mov
mov
outsb
push
fs
scas
mov
xchg
movsb
inc
fbstp
or
aas
scas
push
xor
bound
jp
sbb
mov
jns
insb
lret
sbb
add
idivb
fucomi
cs
cwtl
rorb
jb
jmp
lcall
inc
mov
xlat
adc
xor
inc
xchg
xchg
xchg
mov
daa
mov
rcll
insb
cmpl
stos
arpl
and
dec
insl
mov
push
mov
loope
subb
xchg
xor
mov
repz
movsb
adc
add
adc
dec
rorl
bound
sub
dec
cld
daa
adc
mov
repnz
mov
insl
xchg
cmp
or
dec
push
lods
mov
scas
jns
dec
push
nop
pop
scas
pop
mov
sbb
sub
mov
popf
outsb
lret
inc
lcall
jmp
mov
cmp
mov
fs
test
adc
shll
outsb
cmpl
cmp
cwtl
adcl
lret
sbb
push
adc
arpl
out
ret
cmp
negb
dec
fimuls
sahf
sub
js
add
fwait
and
addr16
inc
push
sub
adc
sarl
movsb
fwait
mov
push
mov
hlt
sub
pop
shll
and
or
fistps
shll
xor
les
leave
jg
mov
jg
out
lock
pop
and
dec
scas
jae
push
mov
scas
das
shrb
popf
push
xchg
fimuls
jae
sahf
jno
idivl
mov
jno
and
mov
insl
jb
xchg
mov
pop
and
pop
mov
jns
fldt
ss
push
push
xchg
addr16
fcoml
and
dec
arpl
push
sbb
push
idivb
mov
sub
pop
add
pop
sbb
xor
and
ret
pop
add
repnz
sbb
inc
push
stc
jo
mov
mov
sub
int3
dec
inc
loop
call
repz
jl
shlb
mov
xchg
mov
fdivl
cmp
mov
mov
add
loopne
jbe
add
or
mov
xchg
jbe
into
mov
lods
push
mov
rcl
in
test
mov
push
stc
pop
sub
adc
dec
cltd
mov
cmpb
jns
repnz
insb
ljmp
outsl
test
cmpb
mov
lea
xchg
int3
dec
fs
insb
leave
les
add
dec
scas
popf
rolb
xchg
hlt
ds
out
push
jecxz
inc
mov
stos
rcll
lods
sbb
adc
adc
xor
xor
sbb
in
gs
bound
sti
imul
adc
daa
cmp
sub
in
cmc
icebp
mov
lock
mov
jnp
arpl
lret
xor
lea
push
loope
push
in
aaa
out
pop
nop
sub
addr16
loopne
cltd
aam
movsl
inc
sub
push
sub
lea
xor
stc
fwait
jle
cmp
cs
mov
pop
push
xor
push
enter
insl
dec
divb
dec
add
xor
xchg
ljmp
cmp
fwait
push
jns
ror
fnsetpm(287
ljmp
sub
push
int
dec
push
jge
aaa
push
jo
sub
pop
jbe
gs
mov
adc
cmp
adc
cwtl
int
mov
imul
in
out
imulb
lods
pop
push
subb
daa
lret
dec
add
divl
mov
outsb
pusha
jae
mov
pusha
xor
stos
xor
fwait
int
test
pop
subb
inc
cwtl
cmpsb
cmp
push
or
dec
adc
and
xchg
jnp
sti
pop
pop
jge
push
ljmp
or
test
mov
sbb
jnp
test
insl
pushf
lds
xor
and
dec
adc
adc
and
clc
bound
lods
into
sahf
addr16
cmpsl
ljmp
push
sbb
jmp
add
jle
sbbb
sbb
repz
mov
mov
incl
aas
adc
insb
sub
pop
inc
aaa
outsb
lret
cmpsl
jg
aad
cmp
xchg
subb
sbb
inc
inc
dec
outsl
dec
inc
testb
xor
mov
out
sti
adc
pusha
mov
xchg
or
call
fnstenv
jp
scas
loop
iret
rcrl
mov
fwait
pop
movsb
mov
int
mov
xchg
fcmovnu
rolb
ficomps
sub
xor
mov
inc
fimull
mov
ret
jno
mov
push
add
or
arpl
cwtl
sbb
and
ret
repz
or
adc
lea
mov
pushf
and
lock
jae
adc
subl
inc
mov
xor
or
shrb
mov
cltd
xchg
push
inc
das
shll
hlt
add
adc
cmp
fmull
loopne
or
test
mov
and
sbb
pop
call
push
ja
aad
sbb
pusha
fcompl
add
daa
scas
and
dec
rorl
jle
inc
in
add
insb
lods
lods
jbe
shll
ret
push
in
addr16
cmpb
sti
xor
or
adc
rol
inc
sbb
push
adc
xor
mov
fisubrl
pop
jg
adc
int3
xchg
add
mov
or
shrl
cmp
cltd
in
xlat
test
mov
cs
hlt
xchg
mov
push
dec
or
sbb
sbb
jo
cmp
xor
pop
roll
jecxz
pop
sbb
xchg
loope
mov
loope
leave
into
mov
call
ficoms
or
loope
xor
test
fmull
dec
mov
mov
aad
mov
push
add
jno
xchg
sbb
lcall
popa
add
xor
dec
push
mov
or
jle
lock
mov
lcall
jnp
out
iret
sub
imul
add
aad
and
dec
pop
mov
push
dec
les
vcvtsi2ssl
icebp
inc
es
add
aad
fwait
cmp
push
std
or
cltd
daa
cmp
xchg
pop
stc
scas
push
lea
cmp
scas
imul
or
fistps
les
xchg
vpcmpgtb
test
divl
cmc
int
aam
les
mov
repnz
cmp
mov
mov
sub
pop
xchg
adc
int
iret
jae
stos
jno
jge
call
loopne
dec
cli
mov
jecxz
imul
iret
mov
or
xchg
scas
add
lret
pop
cld
call
aaa
mov
out
loopne
cmpsl
scas
in
cli
sub
hlt
fmuls
inc
add
lcall
imul
sub
sti
add
ret
push
mov
pop
rorl
stc
adcb
fldt
mov
std
in
dec
js
ret
and
pop
dec
test
cmp
xor
lods
nop
andl
fsub
add
rolb
sub
push
jl
mov
pop
adc
dec
rcll
test
pop
fisttpl
dec
xchg
not
push
movsb
inc
jmp
les
ljmp
xchg
scas
cld
out
mov
mov
sahf
fbld
mov
sbb
daa
jge
push
cmc
hlt
shlb
pusha
pop
or
adc
cltd
push
pop
mov
pushl
gs
push
icebp
das
dec
push
lret
out
or
adc
cmp
repz
cmp
jp
mov
in
xor
sbb
test
inc
pop
or
jae
inc
pop
test
dec
rclb
pop
arpl
xor
cs
sahf
mov
push
test
adc
jl
and
sub
dec
sbb
jmp
lods
mov
inc
scas
push
jne
jecxz
scas
add
mov
adc
sub
gs
testb
dec
mov
xchg
xlat
pop
negl
lcall
loope
cli
inc
sbb
xor
or
push
xor
xchg
jae
pop
cltd
sbb
or
int
xchg
outsl
repnz
scas
inc
jg
je
add
push
lods
pop
in
pop
fcomps
jp
leave
xor
cmp
stc
cmc
sub
add
in
iret
fsubrl
add
in
cwtl
lcall
sub
jae,pt
xorb
fcmovnbe
mov
push
inc
adc
emms
sbb
add
dec
cmpsb
xor
movsl
enter
sub
mov
jg
test
sub
test
inc
arpl
push
cwtl
and
add
cmp
add
cld
add
or
inc
sub
cmpsl
sbb
popa
clc
xor
or
fcom
fucomi
test
hlt
jnp
push
sbb
inc
xor
mov
fcomip
inc
loopne
jo
xchg
rcrl
arpl
lea
pushf
cmpsl
bound
das
mov
sub
arpl
inc
les
adc
lea
sbb
lods
inc
sub
sbb
ret
popa
in
sub
dec
jmp
jecxz
xchg
sbb
mulb
mov
fwait
int
xchg
jb
jmp
mov
mov
popa
xor
xchg
cmp
xor
inc
add
into
fstpt
sbb
sbb
rcll
push
int
je
insb
cmpsb
cmpl
fs
ljmp
stos
movsl
sbb
mov
arpl
aad
mov
movsl
sbb
shrb
out
xchg
xor
ljmp
pusha
ret
test
fsubl
xchg
mov
sub
adc
loop
xchg
jl
xor
mov
sbb
inc
push
test
mov
mov
inc
es
fdiv
loopne
add
das
mov
sahf
out
mov
sub
outsb
ljmp
jle
setne
sbb
js
push
push
fs
test
das
cmp
inc
call
hlt
sbb
sbb
sbb
inc
mov
pop
mov
movsb
mov
ficoms
ret
mov
and
pop
xchg
sbb
add
lods
xor
and
adc
mov
mov
das
xor
sbb
inc
sub
lods
adc
testl
jl
or
int3
vandps
fdivrs
out
sbb
and
insb
xchg
pop
sbbl
sub
xor
xchg
jecxz
cwtl
xor
faddp
mov
add
int3
mov
push
fadd
js
insb
xchg
add
fdivs
add
shlb
arpl
inc
jmp
repz
push
shr
cmpsl
lods
jns
mov
lret
mov
cld
into
fst
fildl
pusha
inc
mov
mov
scas
add
or
loopne
jns
push
shrb
testl
inc
fstpl
inc
sbb
sbb
icebp
ljmp
int
add
ret
es
pop
testl
sub
loope
mov
xchg
aad
out
imul
push
push
push
sub
hlt
ds
mov
fwait
int3
cmp
imul
cmp
movsb
jno
into
out
mov
xchg
jl
add
jmp
loopne
dec
lods
xor
sbb
aad
sbb
mov
je
inc
add
data16
mov
mov
stos
push
fcmovb
icebp
mov
into
js
mov
mov
jmp
mov
movsl
inc
subb
jnp
dec
mov
mov
shrb
xchg
mov
xor
pop
dec
push
sub
rcr
pop
xchg
in
pop
in
in
sbb
stc
mov
xchg
lahf
dec
ret
jg
xchg
mov
sub
inc
adc
jae
push
sbb
imul
xorl
decb
gs
pop
cltd
dec
js
xor
add
xor
cltd
and
mov
push
test
adc
lahf
frstor
dec
lods
mov
push
cmp
aaa
rorb
dec
jl
out
push
adc
aaa
lds
jge
fstl
pusha
test
mov
and
add
imul
push
and
mov
mov
adc
imul
ljmp
adc
gs
dec
inc
and
dec
adc
imul
inc
pop
stc
sub
sub
rcrl
insb
cwtl
jns
sbb
jno
push
and
xor
mov
pusha
xor
fs
movsb
pop
pop
sbb
stos
jmp
loopne
or
ljmp
popa
adc
push
xchg
and
pop
pop
sub
add
jp
cmp
mov
dec
jnp
movsb
ret
dec
cwtl
jno
mov
inc
xor
sbb
je
xlat
js
lods
pop
mov
mov
incb
fmul
loop
xor
popa
out
addr16
xor
orl
je
dec
popf
add
push
dec
scas
aam
mov
pop
push
cmp
es
pop
pop
rcl
ds
adc
test
cwtl
pop
fisubrs
mov
js
pushf
mov
aaa
mov
push
scas
inc
in
inc
mov
ret
pop
jecxz
mov
lods
mov
iret
mov
ret
mov
mov
shufps
or
xchg
cli
cld
add
insb
fcoms
or
les
push
dec
or
rclb
cmpsb
inc
clc
incl
and
sbb
pop
sbb
xchg
jnp
jge
add
std
lret
mov
icebp
pandn
jle
mov
and
adc
das
out
call
or
add
aaa
push
sbbl
movsb
xchg
roll
ljmp
ret
fsubs
mov
les
and
clc
clc
lret
or
pop
cmc
outsl
mov
loop
fdivrs
or
dec
adcb
call
outsl
or
aad
and
shlb
pop
call
fistl
and
incl
jecxz
lret
dec
mov
or
jmp
es
mov
std
cmp
insb
adcl
lret
inc
jae
mov
ljmp
push
dec
ret
xor
lock
push
pushf
inc
les
push
cmpl
in
dec
out
cmpsb
and
or
inc
add
scas
adcl
clc
into
xor
and
jle
arpl
inc
adc
xor
mov
sbb
jecxz
adc
sub
test
popa
cltd
push
test
jb
mov
cmp
daa
decb
push
sub
orb
dec
outsb
mov
rolb
clc
rcrb
xor
jne
ja
jne
fwait
sub
sbb
xchg
mov
lret
xor
loop
jge
sbb
nop
pop
sbb
push
in
sbb
and
sub
cmpb
mov
push
lods
rcrl
jnp
ljmp
imul
es
ds
outsl
xlat
into
js
adc
out
pop
inc
fistl
test
fstpl
out
xchg
in
sti
push
out
aam
in
mov
push
cmpsb
rclb
mov
xor
jle
and
cmpsl
cs
into
nop
push
lret
push
mull
xor
and
pop
scas
sub
fwait
int
cmp
sbb
cmp
pushf
and
jl
orl
jecxz
xor
arpl
push
mov
ret
or
xchg
xchg
sahf
add
arpl
or
mov
xchg
dec
hlt
outsl
push
sbb
add
sbb
leave
shll
mov
adc
adc
add
call
inc
sti
push
loope
les
mov
xchg
push
test
jecxz
cmp
push
jmp
add
mov
imul
mov
xchg
arpl
adc
jno
jecxz
mov
call
pop
popl
iret
ljmp
cmc
mov
xchg
dec
std
pop
sbb
dec
mov
lret
pop
ja
movsl
into
xchg
sub
test
imul
pop
fwait
repz
xor
lods
cmpsb
cwtl
mov
je
push
jp
shlb
mov
shll
pop
jne
call
outsl
scas
dec
enter
sub
mov
fdivl
jo
inc
mov
jl
iret
and
pusha
and
hlt
and
push
push
sbb
scas
inc
pop
stos
xor
and
jne
arpl
inc
mov
lock
js
pop
es
out
and
leave
mov
push
jle
xchg
fstl
leave
inc
inc
mov
mov
xchg
test
daa
jnp
sarb
pop
mov
call
movsl
loope
pushl
pop
and
daa
scas
sub
sar
mov
test
push
or
or
ret
movsl
cltd
or
adcl
adcl
adc
cs
adc
inc
cmp
jecxz
imul
aam
jl
mov
int
dec
dec
hlt
shll
xchg
enter
testl
fcomps
pushf
js
daa
push
mov
and
rolb
or
test
push
loop
fisubs
pop
jb
mov
aam
dec
or
mov
push
cmpsl
mov
int3
xchg
lods
in
push
rcrl
emms
inc
add
push
push
cmp
or
dec
mov
jo
mov
xor
jne
adc
inc
pop
dec
adc
push
repnz
andb
xor
mov
inc
and
movmskps
sbbb
xchg
xchg
pop
cmp
push
mov
push
push
add
xor
fwait
decl
jmp
and
nop
fmull
hlt
loope
add
filds
test
add
xchg
pop
xor
add
dec
cmp
mov
out
imul
pop
add
pop
outsb
push
outsl
arpl
dec
lcall
int
cld
pop
inc
xor
and
call
xchg
sub
lret
lcall
jg
inc
clc
add
lea
jmp
sbb
inc
dec
hlt
sahf
xor
bound
ret
pop
push
lea
xorl
mov
ja
xchg
shrb
push
lods
ret
sub
push
js
mov
adc
cwtl
fwait
daa
mov
movsb
pop
int3
cmp
adc
xchg
push
imul
sbb
popf
fwait
sbb
cltd
pushw
mov
xor
lock
jbe
fwait
loope
xchg
fsts
adc
cwtl
sbb
push
xchg
and
dec
imul
jae
add
pusha
stos
mov
dec
lods
xchg
inc
and
and
test
cltd
cli
xchg
or
fildl
outsb
test
test
xchg
jp
sbb
push
lret
mov
and
push
mov
enter
inc
or
ds
and
cmpsl
daa
ficompl
jnp
mov
push
jge
push
shll
xor
jae
mov
sbb
dec
shrb
lds
cmp
fisubl
stc
pop
leave
icebp
pop
adc
or
subl
fadd
pop
rcrb
xlat
mov
cmpsb
lods
or
sbb
in
mov
fcomip
outsb
mov
arpl
inc
cmp
popa
xor
aas
sub
aad
mov
adc
mov
mov
sahf
mov
and
mov
xor
mov
push
mov
pop
dec
jne
test
jnp
cwtl
inc
xchg
in
shll
fbstp
sbb
in
mov
gs
xor
insb
xlat
ret
jmp
inc
orl
fwait
cmp
dec
mov
inc
mov
movsb
gs
sbb
mov
sbb
jb
addr16
pop
xchg
cmpb
adc
jmp
mov
cmp
cmpsl
in
iret
jmp
mov
addr16
jns
incb
pop
pop
ljmp
test
adc
iret
sbbl
sahf
mov
lahf
adc
and
and
sub
cltd
xchg
add
mov
xor
incb
dec
rorl
pop
sahf
lods
mov
in
or
jg
les
das
add
out
mov
lods
inc
int3
mov
out
xchg
add
pop
fwait
int
pop
mov
and
movsl
aaa
push
test
sub
inc
sbb
rolb
push
repz
int
call
pop
xlat
inc
into
js
mov
xchg
mov
out
adc
test
mov
jnp
sar
addr16
push
mov
jmp
fisubl
pop
sbb
jnp
xlat
orl
ret
pop
aaa
mov
add
add
mov
sub
cmc
cmp
push
xchg
loop
mov
push
push
cs
into
int3
bound
lret
decl
out
vmread
jmp
adc
jns
add
push
sub
cmp
cmp
xorl
sub
out
lcall
mov
stos
push
push
in
dec
pop
sti
insl
movsl
jmp
xor
mov
add
dec
inc
pushl
push
mov
mov
inc
cmp
movsb
mov
pop
es
es
out
sbb
sbb
xchg
rorb
mull
mulb
dec
dec
pushf
jo
lcall
cmpsl
fs
cmp
cmp
inc
dec
fistps
shl
jae
test
testl
dec
or
lret
test
mov
mov
stos
loop
sub
xor
outsl
add
sarb
rcr
filds
sti
xchg
xchg
ds
imul
pop
mov
and
mov
push
xor
lret
test
mov
and
movl
xor
inc
sbb
notb
cltd
orb
pop
fisttpll
xor
into
mov
lods
mov
es
call
push
pop
inc
inc
cli
scas
cltd
or
les
icebp
jb
dec
pop
jecxz
pop
data16
in
cwtl
dec
xor
sbb
idivb
dec
inc
inc
mov
jmp
dec
jo
inc
push
lods
sahf
add
cwtl
pop
int
andb
and
fbstp
fisttps
cmp
sub
insl
mov
or
add
pop
mulb
out
subb
add
rcr
movsl
jge
dec
xor
push
mov
notb
and
adc
mov
lahf
adc
sbb
scas
cltd
faddl
push
mov
loope
iret
mov
push
push
mov
cli
add
and
ja
dec
jb
mov
insb
cld
int3
lods
insb
flds
sbb
insb
out
ret
cmp
adc
in
lods
inc
scas
popa
and
push
mov
outsl
mov
fisubl
cmp
idivb
pop
rcll
ret
dec
push
lds
dec
add
repnz
push
adc
cmp
cld
lea
push
mov
aam
mov
xchg
aaa
cs
dec
or
cmp
ret
push
sub
int
and
jp
nop
in
insl
aaa
lret
cmp
sub
inc
pushf
clc
imul
sbb
ret
lret
enter
cmp
mov
mov
addr16
vfrczpd
cli
fistpll
aad
out
pop
pop
xlat
out
inc
jne
pmaddwd
mov
mov
aad
or
adc
mov
xchg
fs
xchg
cmpsl
pop
jno
or
jns
dec
adc
jg
lcall
icebp
je
aaa
sbbb
into
nop
xor
inc
out
mov
jge
xor
enter
dec
icebp
fwait
xor
sub
lock
rorb
push
enter
loopne
test
push
fs
fdiv
mov
insl
sub
les
mov
imul
jecxz
data16
mov
inc
xchg
add
mov
les
or
cs
cmpsl
sub
das
sub
mov
out
repz
mov
mov
sub
sub
mov
fwait
jge
push
mov
movsl
push
dec
jl
cmp
lcall
ret
adc
fadd
ror
loop
inc
data16
je
mov
das
repnz
adc
xchg
and
fadds
test
ret
sbb
test
sbb
mov
push
pop
mov
dec
push
pop
mov
repnz
xor
movsl
lock
lahf
sbb
lcall
lods
shlb
dec
sbbl
jbe
mov
mov
lock
cmc
mov
mov
cmp
cwtl
jmp
xchg
cmp
pushf
ds
lcall
movsb
cmpsl
jg
push
xchg
loopne
dec
imul
repz
repnz
adc
mov
mov
fwait
inc
pop
and
mov
mov
dec
pop
dec
ljmp
mov
test
inc
call
cwtl
sbb
inc
sbb
mov
xchg
out
shlb
xor
xor
add
push
or
fnstcw
das
xor
mov
shlb
inc
scas
jae
jl
daa
sub
pop
and
or
leave
pop
mov
mov
movsl
sahf
ds
outsb
and
shlb
cmp
shlb
lods
faddl
inc
rcrb
sbb
push
xor
movq
in
and
mov
mov
rolb
cmp
push
sarl
stc
push
fdivl
fwait
adc
mov
pop
xor
mov
cmp
mov
or
int
cltd
lea
pop
js
dec
sub
sub
jb
xor
into
decb
aaa
mov
mov
test
fs
lea
imul
mov
das
repz
adc
lds
xchg
cmpsb
in
movsb
mulb
jae
testb
in
or
loop
inc
test
pop
mov
xlat
subl
and
sbb
add
jg
mov
lds
lods
lcall
mov
scas
xchg
nop
imul
aad
sbb
jge
cmpb
lret
cs
bound
out
in
aas
scas
mov
dec
mov
jbe
leave
scas
mov
jge
inc
mov
lahf
pop
push
xchg
popa
outsl
pop
dec
mov
sbb
sub
dec
pop
pop
jo
in
xchg
pop
push
mov
outsl
push
cmpsl
in
lds
inc
mov
cmpl
mov
pop
mov
cmp
push
sbb
push
lock
inc
xlat
cli
and
mov
or
add
iret
push
add
dec
xor
xchg
cmc
imul
sbb
out
jbe
sbb
cs
shlb
lock
or
popa
icebp
pop
jecxz
push
les
shlb
dec
adc
shl
fists
in
pop
ss
jl
adc
andl
and
adc
mov
dec
dec
pop
xor
mov
inc
push
mov
adc
adc
ret
into
out
mov
pop
aam
aad
push
shl
in
mov
sbbl
inc
daa
sbb
cmp
call
enter
call
stc
fsubs
orl
lea
xor
mov
fwait
add
movsl
mov
lcall
cld
pop
ret
sbb
pop
lds
popf
gs
jb
sub
popa
aam
adc
push
push
fmulp
pop
sbb
or
test
pushf
rorb
pop
dec
jae
or
andb
cmp
sub
fidivs
pop
sarl
andb
and
add
dec
fcompl
shlb
fstps
dec
popa
xchg
shlb
add
mov
lret
push
push
pop
dec
or
cmp
xchg
stc
pop
mov
cli
mov
je
lock
push
adc
sahf
pop
and
add
jnp
mov
adc
dec
mov
popf
lahf
ret
movsl
aas
push
hlt
or
ret
or
jbe
mov
sarb
nop
repz
mov
xchg
or
cld
lcall
mov
xchg
fsts
rcr
inc
icebp
divl
mov
les
sub
std
ficompl
sbb
fildl
pop
mov
lahf
sti
xchg
pop
push
into
sbb
inc
mov
stc
sub
mov
imul
arpl
pusha
jb
push
das
imul
sub
je
cmp
lods
and
fildll
and
popa
cmc
cmpsb
sbb
roll
rol
pop
dec
jl
ficomps
sahf
lock
lea
jae
lahf
pop
jmp
mov
shll
lods
data16
and
xlat
loopne
jo
sub
jle
sbb
popf
pusha
out
test
shr
lods
in
lret
xor
inc
pop
mov
push
cld
ret
mov
mov
mov
bound
push
shll
mov
or
ja
push
aad
or
test
andl
sahf
jp
repz
dec
mov
cmpsb
pop
xchg
iret
jae
aam
jo
sub
jnp
test
aad
lods
sub
cmpb
pushf
ds
inc
inc
idivb
jo
add
mov
push
pop
sub
sbb
cmp
fs
add
jns
into
push
jge
mov
lret
mov
cmpsb
loope
popf
leave
fiadds
and
test
outsb
push
mov
push
mov
pop
push
cmc
add
out
lcall
dec
rclb
sarl
pushf
call
xor
push
lret
les
aad
inc
pop
sub
sbb
xchg
dec
sbb
mov
mov
mov
in
pusha
or
cld
or
vunpcklps
cmp
sub
jbe
push
repz
jg
insb
test
push
outsb
fmull
fisttpll
xor
xchg
jo
inc
je
ror
dec
push
scas
mov
std
cmpsb
cmp
sbb
sbb
or
outsl
mov
popa
or
arpl
dec
pop
aas
bound
test
aam
push
sub
add
dec
cmp
fidivl
inc
xor
mov
cmp
fnsave
popa
sub
in
push
xor
daa
incb
into
in
out
insb
pop
and
subl
sub
fidivs
fcmovnbe
sbb
into
lcall
mov
clc
dec
mov
sbb
in
enter
cmpsb
push
loopne
sub
add
insb
pop
push
pop
insb
jae
scas
adc
lcall
popa
js
inc
jns
int
fisttpl
mov
push
arpl
inc
stos
in
std
repz
loope
mov
push
pop
jmp
push
mov
dec
insl
add
mov
outsl
gs
shlb
push
cwtl
inc
popa
push
lret
repz
push
insl
push
push
je
into
shr
push
mull
nop
push
repnz
xor
mov
xor
pop
movsb
cmp
mov
sbb
xchg
adc
jmp
rclb
roll
call
inc
fwait
cmp
dec
nop
pop
lcallw
mov
xlat
in
adc
jo
negb
sbb
mov
dec
stc
jmp
ss
incl
into
sub
mul
das
cmp
lock
outsl
push
add
rcrl
repz
pop
dec
leave
repz
add
push
ds
or
add
xlat
ret
in
cmpb
cmpsb
pop
push
subb
nop
idivb
xorl
and
cmpsb
test
sbb
into
sti
jbe
das
insl
insb
outsb
adc
cmp
inc
push
imul
out
std
pop
sub
mov
xchg
loope
aas
add
and
and
mov
xchg
shlb
aas
popa
jg
outsb
aaa
js
loope
push
pop
mov
cmpsb
imul
sbb
lods
pop
add
pop
push
xchg
sub
loopne
mov
sahf
jns
dec
test
push
ficoms
sbb
in
xor
sub
add
push
in
push
ficompl
ret
adc
mov
mov
loopne
js
cmp
push
jl
push
inc
enter
outsb
push
lret
loopne
adc
add
push
mov
and
aas
sub
jbe
scas
xchg
rclb
stc
xor
push
out
clc
lock
or
mov
and
hlt
ljmp
push
push
cmp
mov
jle
daa
lods
pop
ja
pop
sub
loopne
pop
jbe
push
jae
stos
mov
stc
mov
sti
mov
test
xchg
jmp
sti
add
scas
ffreep
in
loopne
xchg
shlb
jle
or
mov
pop
arpl
iret
pop
and
adc
jecxz
push
aad
mov
or
lret
jnp
sub
pop
jns
dec
adc
add
scas
aam
test
jo
in
push
xchg
idiv
std
subl
cmpsl
fldt
adcb
dec
sub
add
adc
movsl
ror
and
leave
jo
frstor
ret
mov
cmpb
or
pop
sahf
arpl
or
jge
inc
inc
mov
or
enter
add
imul
outsl
sub
dec
sahf
push
cmpsb
dec
lret
and
fs
test
push
mov
lea
stc
push
lock
adc
popa
loop
push
and
incl
int3
in
xorl
pop
notb
cmp
imul
mov
sbb
cmp
icebp
xchg
repnz
in
inc
pop
xor
mov
scas
mov
dec
push
mov
scas
mov
mov
sbb
mov
outsb
jge
je
mov
mov
das
adcb
adc
inc
pop
filds
je
ds
xchg
push
mov
mov
or
pop
cld
es
sbb
pusha
vpackuswb
pop
xor
jno
nop
fs
lock
cmpsb
mov
cmovge
enter
xchg
pop
lahf
push
adc
sbb
pop
loop
and
sub
mov
lret
test
xchg
dec
push
lods
out
push
imul
mov
pop
mov
sbb
jne
imul
mov
std
cmpsl
inc
xchg
xchg
mov
cwtl
and
or
stos
test
mov
arpl
adc
lret
adc
lret
mov
inc
int
mov
jmp
cwtl
nop
ret
aas
popa
ljmp
ret
bound
xchg
cmp
test
and
jno
daa
loop
mov
sarb
aaa
sub
jmp
or
ffreep
fwait
inc
mov
rcrl
pop
stc
push
stos
pop
in
or
adc
insl
or
repnz
out
mov
outsl
sbb
pop
mov
xlat
dec
mov
inc
enter
scas
das
inc
pop
fcmovnbe
cmpsb
jae
insl
mov
adc
mov
scas
sub
push
in
sub
aam
sbb
push
aam
divb
adc
filds
or
filds
sbb
data16
inc
dec
fwait
aam
dec
outsb
mov
out
imul
rcl
adc
mov
rcll
xlat
inc
xor
dec
imul
adc
repz
shlb
addb
movsl
aas
xchg
jne
out
test
outsb
or
ss
rclb
mov
cld
xor
outsl
jle
add
pop
push
pop
test
jecxz
pop
mov
fsubl
xchg
mov
mov
xchg
mov
mov
sbb
adc
fs
rcrb
push
jp
sbb
aam
xor
cmpsl
out
in
ret
movsl
rcrb
fdivrl
sti
cltd
or
push
pop
pop
test
adc
shrb
and
rcr
dec
push
jmp
mov
arpl
mov
mov
mov
cmp
pop
add
xchg
jne
xchg
std
sub
push
sub
das
adc
ss
inc
jno
stc
jne
cmpsl
mov
mov
adc
mov
mov
dec
mov
fs
shrb
fdivrp
jb
lahf
rorl
lods
push
ds
sahf
mov
inc
aas
sbb
adc
sub
mov
sbb
out
xorb
sub
addl
lcall
ds
jbe
mov
xchg
icebp
iret
sti
pop
aad
lea
cmp
xchg
or
es
leave
pop
adc
fisttpl
inc
adc
mov
lahf
jo
push
in
cmpsl
repnz
xor
sbb
call
xchg
sub
push
fnstenv
rcrb
cs
mov
mov
inc
push
lret
jae
or
xor
adc
mov
ja
mov
or
cmpsl
int3
repz
rclb
pop
jns
cmp
stc
mov
adc
xor
loopne
sub
jno
adc
push
push
rcrl
push
lds
mov
sahf
movsl
pop
sub
repz
dec
fcoms
mov
subb
xchg
sbb
push
mov
out
sub
popl
leave
push
xchg
pop
cs
cmp
push
sbb
pushf
jge
in
mov
nop
jmp
pusha
stos
test
ljmp
jae
pop
add
aad
pop
in
xchg
fiaddl
xchg
xor
xchg
es
sbb
out
leave
sbb
inc
and
ja
push
xchg
or
cmpsb
mov
ret
and
dec
or
pop
clc
mov
add
mov
div
in
aad
lods
mov
push
sub
std
or
jmp
or
mov
loop
mov
mov
inc
out
push
xlat
push
mov
std
cmpsl
frstpm(287
mov
xor
jo
mov
mov
repz
jecxz
je
adc
jns
add
push
inc
mov
jbe
mov
movsl
inc
push
filds
loope
ja
mov
jl
jp
cmp
decl
push
stos
mov
push
pop
enter
sbbl
and
aam
pop
jns
pop
test
mov
pop
int
rorl
shrl
popf
sbb
mov
sahf
imul
adc
ss
sbbl
push
in
jns
ret
lock
cld
and
test
inc
sub
lods
mov
mov
adc
mov
fnstsw
jo
movsb
out
daa
enter
js
push
loope
imul
insb
mov
xor
lret
pop
nop
mov
lcall
xor
in
dec
inc
cld
pop
jno
and
mov
mov
dec
jo
loope
ljmp
xlat
int3
jnp
sbb
sbb
leave
xor
xor
sti
lock
mov
adc
mov
es
testb
int3
jl
pop
in
mov
out
add
mov
mov
popa
lea
mov
icebp
jae
and
xchg
lds
and
fstps
addr16
and
imul
insl
cmp
jb
pop
mov
xchg
or
movsb
pop
sbb
ror
fadds
les
enter
sahf
jbe
arpl
stos
cmc
mov
stos
popa
negb
loop
popf
lret
xor
aad
inc
sbb
movsl
jl
or
jo
dec
push
pop
fwait
mov
xor
gs
imulb
cltd
add
je
hlt
or
fldcw
std
std
push
enter
pop
dec
sar
int3
rcrb
lahf
bound
stos
lods
dec
mov
dec
test
outsb
shlb
xor
xchg
ret
inc
sbb
sbb
or
xor
adc
sbb
sbb
test
jg
pop
repnz
jecxz
sub
pop
ror
push
out
push
or
aas
cli
sahf
adc
gs
jo
es
adc
sub
shlb
lea
bound
mul
das
jmp
sub
pop
mov
into
mov
divl
xchg
rclb
adcl
fisttps
pusha
pop
aad
repz
jg
sbb
add
cltd
outsb
xchg
test
xchg
cmp
iret
and
jecxz
sub
push
lahf
stos
mov
xor
cld
xor
dec
loope
mov
aam
or
jae
mov
xchg
lock
popf
pop
dec
xor
pop
or
cmpsb
mov
xor
and
mov
mov
lcall
sbb
arpl
leave
xchg
push
out
fwait
jae
shl
xlat
and
jecxz
enter
outsl
sub
pushf
jmp
stos
jp
push
push
jge
fdivl
mov
sbb
cld
mov
mov
popf
sub
mov
addr16
stos
push
sahf
and
es
pop
rcrl
pop
fistpl
std
or
sub
mov
movsb
dec
dec
adc
fmull
ret
imul
xchg
xchg
idivb
and
lahf
inc
shll
sbb
jne
push
mov
pop
mov
jecxz
dec
pop
xchg
inc
in
jmp
xchg
push
and
movsl
rclb
cmp
movsl
addr16
in
dec
mov
fsubrs
mov
mov
or
and
jmp
sbb
arpl
adc
pop
bound
add
ds
outsb
std
xor
mov
cmp
clc
xchg
jmp
xchg
int
add
jne
adc
add
inc
lret
fs
inc
lahf
push
addl
mull
jbe
pop
mov
daa
and
lea
jb
pop
sbb
shrl
cmp
repz
sbb
lahf
lods
pop
push
and
sub
js
xor
sub
push
push
xor
dec
aas
or
fadds
fdivr
scas
jl
adc
and
or
lock
or
mov
and
pop
iret
fdivrl
mov
sahf
clc
int3
mov
mov
inc
out
aaa
xor
clc
and
and
imulb
sbb
std
cwtl
jle
mov
in
jecxz
fwait
jmp
jne
in
pop
mov
daa
sahf
loopne
iret
xchg
insl
xchg
lret
mov
cli
mov
cmpb
iret
sbb
mov
and
setns
test
loope
stos
mov
aaa
sub
fiadds
loopne
dec
adc
sbb
xlat
sbb
push
mov
inc
shlb
pop
jp
cmp
push
push
jmp
xor
mov
ss
mov
aam
sbb
add
cmpsl
and
lcall
outsb
js
lds
out
cs
cmpsl
add
insb
imul
sbbb
jae
mov
cmp
sbb
insl
pop
sub
imul
jge
pop
mov
loope
mov
int
mov
xor
push
pop
mov
rolb
dec
jno
test
cmp
cmp
decl
jne
inc
push
push
out
imul
rcr
inc
mov
and
jae
les
mov
out
js
sbb
mov
daa
sti
rep
jge
jbe
adc
out
push
rorl
pushf
inc
je
and
mov
xchg
js
cmpsl
orb
iret
loope
dec
xchg
adc
cltd
xor
fldenv
or
and
cld
and
mov
shll
cltd
hlt
sbb
mov
jno
testb
sahf
leave
mov
movsl
xchg
clc
jne
jge
cmc
inc
out
cli
movsl
push
dec
out
dec
dec
inc
cmc
jns
inc
jae
dec
iret
jge
mov
mov
daa
push
stos
sbb
popf
rcll
int3
outsb
repz
add
jmp
sbb
inc
iret
xchg
cmpsl
fimull
insl
pop
xor
shlb
mov
and
dec
paddb
sub
cmpsl
pusha
xor
push
adc
sti
lods
pusha
sub
xor
jnp
inc
sbb
or
test
jnp
mov
sub
jle
dec
and
addr16
jno
mov
mov
insb
rcl
cmpsl
icebp
icebp
push
sub
and
popf
inc
rorb
inc
or
lcall
jecxz
movsl
mov
xchg
inc
push
cli
out
dec
push
cs
adc
xor
inc
imul
push
push
subb
or
das
mov
dec
lds
and
into
sbb
mov
or
cs
push
movsl
sbb
test
pop
aam
fwait
inc
clc
incb
push
decb
mov
mov
or
stos
pop
pop
adc
sti
push
add
mov
pop
pop
sti
or
sbb
and
int3
in
dec
sub
pop
jae
enter
cmp
data16
es
daa
inc
mov
call
test
sub
pop
jnp
cmpsb
xor
lret
mov
out
cld
test
xchg
and
outsb
lods
pop
push
es
fidivs
xlat
xchg
add
loope
push
pop
mov
sbb
pop
inc
pop
int3
push
aam
xor
sbb
out
lods
outsb
sub
sbb
jp
es
dec
xchg
in
rcrl
mov
sub
mov
jne
mov
lret
and
leave
push
ret
rolb
or
rcll
daa
cmpsb
loop
or
ss
js
ja
push
stos
or
push
sbb
mov
sbb
xor
hlt
in
fwait
sub
mov
flds
push
mov
cli
cmp
xchg
xchg
cmp
pop
cmp
popf
mov
ret
pop
mov
rclb
or
loopne
jb
jmp
inc
cs
sahf
sbb
addr16
movl
lret
sub
or
xor
js
add
pop
std
testb
and
cmc
add
shl
mov
pop
mov
outsb
cmp
orb
lret
dec
jge
mov
icebp
mov
ret
jg
mov
or
push
mov
stos
ret
push
into
sub
sarb
cmp
stc
sbb
imul
leave
iret
mov
lds
mov
push
mov
sbb
sub
mov
cli
and
shl
inc
loopne
mov
repz
ret
push
bound
mov
jb
sub
jecxz
mov
cmp
in
ljmp
mov
fcom
mov
dec
iret
fiaddl
stc
leave
push
add
pop
mov
cwtl
out
inc
adc
addr16
push
dec
xchg
mov
movb
xor
ja
xchg
data16
daa
sbb
and
jecxz
cmp
in
mov
pop
cmpsb
and
mov
addr16
repnz
jnp
orl
dec
dec
test
or
inc
xor
jg
mull
testl
pop
les
clc
ret
sub
push
ss
aam
cmp
jecxz
sbb
xchg
push
cmp
mov
xchg
sti
push
mov
and
push
clc
dec
adc
pop
iret
pop
shrl
js
hlt
push
adc
jno
xorb
ljmp
scas
jp
out
iret
incb
and
push
call
mov
push
mov
mov
data16
jg
cld
in
push
pop
dec
xlat
nop
jne
inc
push
mov
cli
pop
in
or
xchg
pop
cmpsb
std
jg
test
mov
or
jnp
int3
xorb
dec
adc
mov
adc
add
xchg
adc
rorl
shrl
out
push
imul
std
adc
clc
pusha
insb
aas
test
push
enter
pop
adc
clc
push
lret
push
xchg
xchg
rcr
popa
mov
in
int3
dec
push
aaa
imul
pop
dec
push
xchg
and
dec
pop
cltd
jo
inc
test
mov
add
mov
ds
nop
push
push
inc
and
dec
adc
or
stos
movsb
pushf
adc
gs
fstpl
cwtl
or
sub
imul
int
jnp
inc
pop
push
mov
or
inc
xchg
daa
outsl
sbb
dec
es
or
rorb
aad
cmp
lcall
jne
pushf
aas
ja
lret
in
cmp
test
mov
fstl
xor
cmpsb
in
sbb
push
xchg
xchg
lahf
stc
cmp
dec
das
arpl
mov
jae
xchg
addl
add
leave
jo
ret
js
cli
orl
repz
hlt
pop
mov
rcrb
jp
xchg
js
jecxz
fldl
hlt
sub
push
cmp
cmpsb
and
test
mov
ljmp
nop
jns
subb
pop
add
fsubl
jecxz
test
and
inc
cli
cmp
scas
adc
loop
jecxz
test
rorl
xchg
mov
call
into
fistpll
sub
cmp
or
imul
aaa
arpl
test
xor
ficompl
out
mov
fmulp
mov
out
ss
out
dec
sbb
lahf
popa
add
pop
inc
or
jbe
push
push
ja
outsb
data16
fdivrs
aam
pop
icebp
addr16
mov
mov
pop
out
cwtl
and
in
xchg
inc
into
aas
xchg
popf
scas
and
push
repz
in
lods
and
adc
jns
lcall
mov
sbb
cmp
loope
xorl
pop
add
cmp
push
outsl
sbb
add
fnstsw
push
pop
shr
sub
dec
xchg
xlat
and
lds
wbinvd
orb
cmp
arpl
ds
dec
or
mov
sub
cmovns
xchg
xor
insl
mov
sub
aas
ficoms
sbbb
js
jecxz
xchg
pop
cwtl
out
ja
sarb
test
cmp
cltd
cli
sti
adc
pop
outsb
nop
roll
push
push
sub
pop
insb
movsl
jg
push
adc
outsl
out
add
sub
scas
xor
and
cs
sub
in
mov
or
sub
pop
mov
jne
fistps
insb
adc
cs
icebp
mov
or
dec
es
clc
push
inc
bound
inc
push
das
mov
in
pusha
in
movsl
adc
push
sbb
das
stos
fprem1
jo
dec
and
cmpl
adc
in
in
push
out
xchg
aam
ret
pop
aas
in
push
xor
inc
xchg
test
xchg
push
sbb
outsl
stos
shl
stos
enter
ss
cmp
inc
xor
push
push
insl
jge
cmp
cli
int3
nop
int3
mov
dec
add
enter
in
inc
push
mov
orl
enter
and
jg
ja
push
lock
leave
arpl
inc
mov
in
mov
movsl
ljmp
jne
jp
lret
loopne
out
add
gs
fistl
dec
xchg
ja
es
pop
push
fiadds
movsl
imul
int3
jae
xchg
push
clc
push
mov
or
arpl
hlt
pop
cltd
fiadds
in
out
enter
hlt
lret
std
mov
cld
inc
ds
cli
sti
add
in
jb
movsl
cmc
jne
enter
scas
fnsave
inc
cmpsl
sub
addl
arpl
addr16
loopne
lods
pushf
inc
fistl
in
add
push
inc
cli
mov
dec
mov
in
orl
cmp
lds
or
push
sub
das
stos
mov
xlat
pop
in
sbb
xor
cmpsb
xchg
xchg
mov
add
dec
outsl
lahf
lock
mov
xchg
mov
or
mov
and
xor
dec
jg
or
inc
xchg
js
les
fdiv
add
inc
loop
inc
dec
push
fnstenv
mov
leave
xor
lret
sbb
pop
int
mov
out
fildll
mov
icebp
lcall
mov
shll
jo
mov
jl
xchg
add
sbbb
fbld
int
test
cli
xchg
icebp
inc
addl
add
pop
fcoml
jne
or
xchg
mov
mov
inc
mov
insl
les
rol
int3
pushf
fsts
dec
xlat
xchg
xorl
and
fildll
shrb
imul
mov
inc
fistps
push
push
or
inc
popa
out
int3
das
xor
aad
mov
daa
push
jmp
mov
dec
adc
ror
jns
cmpsb
cmp
bound
or
pop
aam
or
xchg
xchg
js
inc
pop
fdivrl
mov
xchg
pushf
or
add
pusha
loopne
push
jge
mov
or
xchg
jg
xchg
dec
add
mov
or
push
inc
dec
in
pop
subb
mov
pop
movsb
lea
mov
imul
in
cmp
test
imul
int
push
sbb
xchg
xlat
jb
gs
mov
xor
add
ss
fidivs
jbe
js
jle
jae
sub
cmpsb
stos
rcll
add
loope
sub
imul
out
xchg
and
adc
push
dec
pop
lret
mov
inc
push
mov
cltd
or
add
jle
cmp
loop
and
xor
sub
inc
inc
loop,pn
das
rcr
nop
cmovbe
jae
pop
out
movsb
call
xlat
test
adc
adcl
insb
add
push
ret
imul
lea
icebp
xchg
xchg
inc
movsl
mov
subb
xchg
fisubrl
jl
scas
push
aas
adc
fwait
xor
jbe
push
stos
jle
cmpb
roll
cmp
jp
movsl
mov
pushf
mov
and
cld
add
pop
xchg
lea
lock
js
push
pop
add
dec
lods
pop
fsubrs
dec
std
sahf
mov
enter
xchg
xchg
inc
inc
adc
arpl
loopne
shrb
mov
fsubr
adc
ja
push
xchg
fsts
inc
xchg
inc
inc
daa
mov
jl
sbb
add
movsl
dec
jnp
or
orb
or
leave
xchg
push
inc
cwtl
push
dec
lahf
add
data16
mov
repnz
push
rcl
js
jo
mov
lcall
fdivrs
pusha
pop
dec
fiadds
clc
gs
movsl
std
cmp
adc
sub
loopne
scas
inc
mov
and
hlt
imul
aad
stc
sbb
add
mov
in
pop
lea
cwtl
in
mov
dec
adcl
in
lcall
mov
dec
lods
or
sti
insb
xchg
push
fwait
add
add
xchg
pop
dec
jae
mov
fldl
nop
cmc
add
adc
ror
les
xor
int
test
int3
stc
int3
add
imul
xchg
xchg
mov
sub
mov
dec
xchg
xchg
cwtl
mov
adc
adc
xchg
sti
outsb
in
daa
cmc
repnz
mov
in
xchg
pop
mov
dec
or
mov
push
sub
mov
or
dec
pusha
cmp
mov
mov
push
test
scas
inc
jne
mov
push
push
js,pt
xor
xchg
sub
dec
mov
repnz
rol
jb
push
mov
test
mov
inc
add
adcl
inc
pushf
pushl
or
pop
pop
fst
adc
push
lods
int
pop
pop
cmp
pusha
imul
mov
push
pop
icebp
int
lcall
pop
mov
push
lock
repnz
out
jecxz
test
adc
sahf
out
inc
cmpsl
dec
stos
xchg
gs
popf
pop
out
stos
push
out
pop
sub
aam
cld
jno
mov
fcoml
in
loop
inc
in
cmc
xor
inc
jl
jge
and
in
pusha
popa
cwtl
loopne
mov
mov
dec
mov
xor
and
mov
sub
xchg
pop
cmc
hlt
mov
cmp
jne
scas
shll
cmp
jno
addr16
push
ds
inc
ret
jmp
out
xchg
inc
icebp
add
dec
push
mov
cmp
scas
sub
sub
xor
inc
cmpsb
ret
push
loopne
popf
mov
mov
inc
roll
and
xchg
mov
test
push
fdivs
adc
sbb
mov
inc
adc
xor
adcw
mov
adc
popf
adc
out
cmp
or
or
shr
sbb
mov
fcompl
add
cld
and
jle
jb
adcl
fwait
xchg
xchg
call
adc
shlb
sbb
pop
mov
jge
push
sub
aaa
les
ljmp
and
les
and
inc
ljmp
rorl
push
lahf
lret
pop
dec
pusha
or
sbb
sbb
lds
shlb
push
push
imul
stc
cmp
adc
jp
repnz
sbb
inc
inc
and
cmc
insb
xor
pop
lock
pop
rcrl
inc
push
xchg
jmp
mov
iret
pop
push
shrb
mov
rep
fdivrs
imul
out
xchg
cmp
gs
pop
and
pop
cmp
push
push
lds
xchg
mov
mov
cltd
cltd
jecxz
inc
arpl
jnp
xor
mov
sub
out
insl
xor
inc
inc
fmull
cmpsb
push
push
lock
add
mov
mov
cmpb
mov
lods
mov
lcall
cmpsb
imul
dec
scas
pop
ds
scas
sbbb
out
pop
push
mov
mov
mov
pop
enter
push
pop
pushl
outsb
clc
daa
psubd
iret
andb
aam
cs
cmp
lret
jo
pop
pop
sti
pop
add
cli
push
push
xor
push
xor
xchg
test
iret
add
push
pop
cmp
jnp
loop
mov
lods
imul
icebp
jb
stos
data16
or
push
ljmp
lcall
push
mov
dec
repnz
inc
xchg
mov
mov
jge
loopne
dec
mov
fisttpl
test
push
outsb
xor
mov
mov
inc
pusha
in
lea
mov
loope
pop
dec
xor
add
fisubrs
push
insb
push
leave
and
adc
mov
popf
add
sub
jmp
or
je
ss
or
cmp
mov
repnz
jne
js
cmp
bound
xchg
pop
xchg
and
mov
sub
lea
push
mov
and
xor
dec
adc
dec
xor
push
icebp
rcl
pop
insl
pop
mov
pushf
loope
and
mov
adc
push
cmp
cmp
and
adc
add
pop
fadd
les
or
jge
mov
or
cmp
insl
fistps
sub
mov
jno
cmp
pusha
mov
rcl
sbb
mov
inc
mov
push
and
orl
inc
pop
cld
in
push
dec
rcll
mov
mov
xor
aas
pop
imul
ja
pop
gs
mov
sahf
mov
out
xor
mov
mov
or
cld
ja
and
loope
sbb
add
cs
pop
adc
push
xchg
fiadds
push
sbb
es
jo
pop
push
aam
es
aas
sbb
fnstcw
pop
xchg
pop
mov
aas
lds
cs
xchg
mov
push
mov
xchg
iret
cld
sbb
shlb
repnz
iret
iret
mov
push
iret
pop
stos
ret
jp
ljmp
outsl
cmpsb
and
push
cmp
lds
mov
mov
push
xchg
cltd
push
je
sub
push
mov
loop
pop
xor
and
dec
dec
jbe
push
lret
loopne
fldt
pop
jge
lret
shl
dec
adc
mov
popf
dec
lods
jo
out
fwait
or
mov
push
sbb
push
in
cltd
ror
aaa
fs
push
ret
outsb
dec
xor
adc
sub
add
jae
inc
pop
in
decb
jno
mov
xchg
cmp
inc
jmp
out
rorl
lds
js
daa
mov
or
xchg
test
lcall
add
sbb
mov
popa
ja
push
dec
pop
jns
or
mov
mov
loopne
lds
fwait
mov
sub
pop
xchg
jecxz
push
movsl
mov
sbb
adc
fdivr
int
and
call
fs
mov
shll
sbb
or
cli
cmpsl
clc
popf
mov
xchg
xchg
in
ret
in
xchg
insb
jae
dec
das
bnd
lcall
jbe
fildll
test
in
lock
mov
je
adc
lcall
mov
pop
push
add
push
dec
jecxz
jmp
stc
repz
sub
aad
in
cmpsl
rcr
ret
loope
loop
ljmp
popa
push
lret
push
push
mov
movsb
pop
jge
insl
ret
ret
lea
mov
lods
or
rcrb
ret
push
mov
inc
das
xchg
jno
mov
sbb
popf
push
add
arpl
push
sbb
loope
inc
xchg
mov
movsb
les
or
xchg
lret
mov
pop
mov
imul
dec
fdivrl
mov
dec
daa
xchg
add
adc
lret
xchg
out
inc
xchg
jnp
pop
add
shlb
lods
xchg
out
jp
or
lds
jb
jmp
test
add
cmc
or
test
xor
push
xor
push
lods
sbb
cmp
scas
or
mov
adc
xchg
and
mov
je
jno
fistpl
repz
and
inc
sub
leave
aad
adc
and
mov
fs
roll
imul
aas
outsb
ss
mov
mov
jne
jae
pop
sub
push
lret
and
leave
adc
mov
std
xchg
rorl
lds
in
xor
rol
inc
std
or
add
pop
xor
dec
int3
imul
bnd
or
iret
and
sub
sahf
xor
push
dec
outsl
sti
ret
fwait
int3
jmp
xchg
aaa
adc
push
in
inc
lahf
mov
test
shll
mov
dec
lods
fidivrl
sahf
fistpll
mov
jmp
adc
aaa
mov
popa
ja
into
lcall
lcall
in
xchg
sub
jne
jb
repz
outsl
xor
jno
in
jmp
or
mov
lock
cltd
adc
data16
mov
cmp
dec
aam
dec
leave
jecxz
inc
out
add
dec
mov
xor
into
xchg
lods
repz
cmp
xorb
jbe
dec
inc
push
or
push
mov
imul
enter
outsb
ja
outsb
mov
xchg
mov
aam
mov
pop
xor
call
dec
imul
lcall
mov
ss
mov
mov
outsb
jno
out
cld
pop
aad
add
sub
jo
icebp
clc
pop
dec
dec
pusha
sub
aas
add
es
and
aas
pusha
int
mov
adc
fstps
lods
addr16
lret
nop
mov
loope
add
leave
fnstcw
or
data16
cmp
or
jmp
lcall
add
pusha
in
cmpsb
xor
bound
popf
cmp
fldl
dec
mov
orl
sbb
jae
test
cmp
in
mov
dec
nop
in
int3
cwtl
and
xor
lods
push
inc
jle
push
sahf
jg
scas
jmp
test
daa
mov
jl
adc
in
or
xor
rorl
mov
sbb
or
sub
pop
cmpsb
pop
rcl
iret
adc
jge
out
push
in
movsl
pop
idiv
jnp
mov
adc
xchg
jno
int
inc
mov
sub
or
push
out
cltd
loop
outsl
pop
cmp
inc
call
push
or
xor
lahf
call
and
adc
inc
push
aas
sub
aam
push
pop
xchg
sub
iret
mov
movb
mov
mov
sti
aad
data16
outsb
pop
dec
mov
xchg
inc
xor
xchg
inc
jb
push
mov
aad
sub
push
ja
gs
js
movl
jns
add
mov
cli
add
jb
sbbl
imul
sub
xchg
aaa
jl
fisttpll
imulb
cmc
stos
inc
cwtl
loopne
pop
xor
mov
sbb
inc
stc
ret
push
outsb
jno
test
push
mov
repz
push
outsl
mov
inc
lea
mov
pop
stos
and
mov
mov
dec
packsswb
movsl
lock
mov
sti
test
bndmov
repz
rep
into
jne
ret
push
pop
in
es
roll
xchg
jecxz
sbb
add
roll
pop
mov
addr16
pop
sub
jmp
jg
pop
ret
dec
jbe
or
cmp
test
insb
stos
xchg
mov
jl
add
or
sbbl
jge
cmp
jne
in
push
cltd
nop
mov
push
sti
cmp
push
jge
adc
sub
sbb
mov
cmp
mov
lahf
push
jo
fs
sub
dec
mov
imul
sti
pop
scas
out
mov
fdivrl
ficompl
mov
pop
fstps
mov
call
mov
adc
pop
shl
loope
xor
scas
lock
insw
repz
imul
dec
mov
call
mov
mov
adc
adc
adc
cld
dec
inc
pop
ftst
xchg
call
mov
mov
cmp
sbb
repz
dec
pop
in
jns
jae
mov
out
lcall
fstpl
add
iret
pop
nop
ljmp
aam
dec
mov
add
inc
loopne
data16
mov
std
lahf
pusha
push
loop
cltd
ljmp
mov
fisubrs
and
push
adc
fs
and
rcr
cmp
and
out
sti
jle
mov
repz
js
and
js
mov
into
push
cmp
frstor
imul
sbb
in
dec
adc
repnz
fs
adc
stos
faddl
icebp
popa
jno
in
inc
lods
dec
mov
cs
xor
jp
mov
mov
hlt
lcall
jno
jmp
js
popa
cs
mov
sbbl
stc
sub
rcrb
imul
mov
fcom
inc
gs
les
pop
out
pop
lahf
adc
cmp
xor
mov
mov
or
test
ret
ljmp
lock
push
mov
xor
jbe
pop
pop
sbb
cltd
pop
stos
test
mov
add
inc
xor
adc
mov
loope
gs
and
mov
lret
dec
pop
mov
jmp
stos
sbb
rclb
push
mov
pop
xchg
call
popf
jmp
dec
sbbl
arpl
sahf
mov
leave
mov
push
pusha
cmp
in
dec
add
push
mov
dec
push
jecxz
push
movsl
int
cli
outsl
inc
test
jbe
movsb
aas
jmp
push
mov
les
mov
sbb
jge,pt
push
pop
dec
pop
out
sbb
mov
mov
xchg
cs
ffreep
aas
jp
push
and
popa
ret
sbb
mov
rcr
dec
jno
imul
jae
in
out
inc
or
ss
scas
cmpsb
dec
mov
fwait
mov
mov
cli
shlb
lods
lcall
pop
mov
pop
movsl
cwtl
roll
scas
test
push
cmp
std
cmp
stc
ret
int
inc
gs
pop
fidivrl
shll
mov
movsl
inc
mov
test
loope
lds
xor
xchg
ret
cwtl
dec
dec
mov
cmp
iret
loop
fmul
jns
jge
lahf
fwait
in
cmp
ret
out
push
int3
sbbb
pushl
out
loopne
adc
and
jge
push
mov
jg
mov
mov
xorl
xchg
mov
lock
outsl
or
in
and
push
scas
mov
add
jle
loopne
into
jne
add
lods
mov
outsl
outsb
push
push
xchg
pop
lcall
daa
push
outsl
out
cmc
mov
inc
and
dec
push
notl
sarb
push
sbb
mov
mov
jne
pop
loopne
pop
daa
std
cld
mov
fsubr
mov
sub
jae
sub
in
mov
ljmp
or
flds
sbb
lcall
push
outsb
mov
jnp
cmp
mov
pop
test
sub
out
push
cmc
sub
rorl
or
add
xchg
mov
mov
ljmp
ret
sbb
into
lret
sub
mov
xorl
fcoml
clc
push
fsubp
jne
jb
mov
arpl
xor
jb
pop
fimuls
pop
pop
xchg
out
jo
enter
push
test
mov
sub
mov
stos
es
mov
sbb
jns
cmp
aaa
sub
sbb
stos
fistpl
inc
mov
xchg
movsl
dec
gs
jae
fdivl
es
inc
jg
or
gs
imul
and
cwtl
insl
lahf
daa
repz
mov
or
jl
xor
inc
into
push
bound
cmc
add
cmp
inc
mov
xor
loopne
push
lret
xchg
sbb
int
mov
push
mov
mov
bound
dec
add
aaa
cbtw
push
popa
rcrb
pop
test
push
xor
dec
fwait
add
sub
dec
pop
push
or
das
je
or
popa
ds
push
cmpsl
inc
and
pop
out
dec
jp
dec
fwait
mov
enter
mov
arpl
sbb
sbb
or
cs
or
add
sbb
push
inc
fidivrs
lahf
sbb
aas
out
sarl
pop
sub
adcl
push
add
fwait
jnp
mov
xor
inc
cmp
add
cltd
mov
jne
out
les
fdivrp
fistpll
bound
mov
mov
rclb
inc
sub
mov
jmp
sbb
ljmp
mov
sbb
mov
pusha
out
xor
xchg
pop
int3
test
xor
xorb
in
push
sarb
xchg
stos
dec
dec
xchg
and
mov
and
shrl
aam
pop
hlt
or
push
mov
xchg
push
lock
mov
pop
jecxz
dec
push
mov
cmp
sub
test
testb
jne
repz
xchg
dec
mov
lock
mov
shrl
adc
mov
fwait
pop
movsb
mov
xchg
push
mov
inc
sbb
pop
adc
cwtl
xchg
or
cmc
and
add
pusha
movsb
aaa
cmpl
mov
jns
pop
in
mov
or
int3
mov
imul
enter
test
outsb
sub
inc
daa
stc
out
imul
jnp
sti
subb
push
pop
push
clc
adc
fstl
pop
ja
ds
sub
pop
jmp
inc
xchg
hlt
add
pop
mov
inc
in
fisubs
mov
jl
imul
test
sbbb
repz
repz
xor
sbb
add
jmp
sarb
add
and
cmp
stos
jp
scas
xorl
pop
xchg
jg
es
lcall
pop
jbe
cwtl
sub
movl
adc
lret
arpl
xchg
pop
xorl
or
mov
xchg
fdivrp
fiaddl
push
xchg
pusha
mov
lock
pop
stos
xchg
mov
lock
dec
test
push
std
adc
xor
cmpsb
movb
jle
addr16
movsl
sbb
mov
idivb
pop
or
cmp
in
fcomps
xor
ljmp
addb
bound
popf
sbb
adc
ret
xlat
mov
and
scas
xchg
cmp
out
mov
pop
pushf
in
push
fcmove
adc
out
sahf
pop
or
gs
mov
mov
imul
push
mov
mov
xor
sub
repnz
pop
arpl
jmp
das
ret
inc
pop
jo
push
pushf
in
pusha
cmp
cmpsl
push
hlt
push
subl
push
pop
imul
in
xchg
popa
pop
mulb
push
popa
or
daa
imull
jmp
xchg
pop
lods
sarb
inc
aas
add
aad
inc
jns
xor
jecxz
popa
sbb
jp
fistps
mov
jbe
gs
add
in
inc
test
hlt
aaa
fadd
pop
mov
sbb
inc
test
outsb
jp
sub
jb
sbb
lea
pop
and
mov
push
loopne
fisubs
xchg
mov
aas
popf
lret
fstl
and
sub
cltd
test
and
cs
lds
insb
inc
pop
aaa
pop
jae
or
in
adc
test
dec
and
enter
divl
std
mov
xchg
mov
adc
push
fildl
xchg
loop
pop
sub
data16
fldl
and
dec
mov
xchg
pop
xor
push
loopne
aas
fisubl
sbb
push
push
inc
mov
aam
mov
out
enter
outsl
xor
out
stos
jmp
push
jle
call
mov
cltd
or
push
mov
fs
jl
dec
stos
xor
les
shl
sbb
inc
add
aad
pop
cmpsb
add
mov
dec
jmp
pop
dec
dec
adc
aad
inc
add
add
push
xlat
pop
sub
mov
pushf
or
not
rol
push
pop
or
dec
pusha
loope
fisubl
jp
pop
adc
and
rcrb
scas
rcrl
movsl
stos
mov
jae
int3
inc
push
popf
outsb
adc
and
std
scas
arpl
sub
push
xchg
pusha
fists
bound
pop
inc
push
xor
mov
push
outsl
test
xchg
lods
jno
sub
push
imul
fcmovu
fidivrs
pop
push
xchg
lods
sub
inc
xchg
push
ja
ljmp
xor
cld
scas
bound
push
mov
lds
sbb
adc
fdivl
sub
inc
shr
popf
mov
xchg
rcrl
dec
push
and
or
or
mov
inc
mov
sahf
loope
or
xchg
adcb
movsl
dec
imul
dec
loopne
das
push
pop
xchg
loope
add
in
pop
pop
outsl
clc
sbb
in
shl
push
mov
sbbb
jecxz
mov
fcomip
rorl
push
or
clc
out
leave
adc
ret
xchg
mov
cltd
fsts
adc
mov
arpl
sbb
cmpsb
loop
arpl
xor
jne
adc
imul
loop
fwait
or
sbb
adc
test
pop
dec
cmc
fisubrl
aad
popa
dec
stos
insb
test
div
test
shlb
mov
mov
fwait
xlat
into
cmpsb
xchg
daa
adc
adc
sub
mov
mov
imul
sbb
push
sub
jl
dec
jbe
xor
push
fsts
in
dec
frstor
bswap
add
mov
sub
or
xor
fcoml
mov
out
fildll
push
pusha
cwtl
push
jae
add
xor
xorb
jne
out
push
add
int3
insb
roll
cmp
sti
clc
lcall
gs
mov
xor
mov
mov
pop
adc
xlat
ja
mov
sbb
out
mov
lds
movsl
js
dec
push
xchg
lret
inc
fcmovnu
int3
mov
pusha
ss
lret
cld
outsb
cmp
inc
lahf
iret
in
ja
xor
jmp
orb
divps
stos
cmp
mov
clc
lahf
test
sub
fcomip
outsb
push
shrb
dec
loopne
and
sbb
sarb
je
inc
sti
ret
fidivrs
add
dec
movsb
jo
and
les
jecxz
in
fucomp
pop
mov
inc
add
add
xor
xchg
sbb
lcall
test
xchg
lea
aam
fucomip
xlat
mov
xchg
test
jp
shlb
pop
iret
mov
jmp
repz
imul
xchg
sbb
mov
xor
pushf
call
addb
popf
push
outsb
sub
mov
ret
xor
mov
leave
add
xor
sub
fistl
lret
ss
push
dec
inc
into
les
scas
lock
jmp
jb
jae
ret
push
sbb
push
addr16
dec
repz
sub
adc
testb
or
push
scas
pop
sbb
mov
sbb
inc
xor
lcall
push
adc
push
xor
cmp
mov
inc
lret
icebp
fimuls
inc
shrb
lahf
push
xchg
and
inc
scas
out
out
xchg
clc
aaa
shlb
cli
inc
sub
mov
dec
push
cmc
sub
mov
sbb
mov
mull
adc
fiaddl
sub
call
leave
sbb
mov
xor
add
das
lock
sub
int
call
pushf
push
mov
inc
or
mov
pop
nop
es
aad
cld
xchg
pop
addb
ss
xchg
cmc
pushf
mov
mov
fwait
sahf
and
test
call
jo
test
fucom
ret
clc
jno
mov
outsl
in
ss
ret
inc
cwtl
lret
movsb
pop
jecxz
adc
aas
mov
filds
xor
popf
insb
call
dec
fisubl
mov
dec
btrl
xor
xchg
cmc
sbb
lret
push
xabort
mov
pop
loop
push
inc
loopne
or
mov
xchg
das
cltd
fstps
ljmp
push
jnp
sbb
iret
mov
jae
mov
mov
xor
hlt
mov
sbb
xor
sub
inc
mov
add
cmp
push
cmp
loopne
mov
push
and
add
mov
lcall
jne
adc
jg
jl
hlt
or
rcl
mov
ja
mov
and
or
mov
xchg
dec
cli
insb
pop
stos
cmp
cmp
out
pop
sbb
mov
mov
dec
imul
lahf
ds
fdiv
insb
scas
adc
rorb
test
or
jne
or
aaa
lea
xchg
aaa
cs
mov
push
cwtl
dec
sub
loope
loop
fstpt
adc
data16
xor
scas
mov
in
sbb
fnstenv
adc
xor
xchg
cmpsl
add
mov
inc
cmp
mov
das
sbb
shrl
dec
or
add
mov
insb
aam
mov
push
xor
and
lahf
xchg
aas
mov
rol
push
ljmp
push
cmp
and
sbb
push
lret
and
ja
push
std
and
test
sbb
sub
testl
adc
aas
and
out
jge
test
or
mov
jbe
cli
sti
aad
dec
scas
adcb
xchg
gs
faddp
xor
daa
ss
add
xor
jb
cs
adc
in
icebp
sbb
sbb
xor
imul
add
pop
dec
jno
jo
je
ss
das
mov
sub
leave
stos
or
push
imul
pop
loope
in
mov
cld
das
mov
dec
pusha
pop
mov
into
dec
sub
xor
and
jno
pop
xchg
mov
lods
dec
push
js
sbb
or
stos
shll
mov
pop
mov
push
bound
data16
pushf
pop
insb
cmp
sub
inc
stos
fwait
pop
sbb
add
push
ror
pop
jb
lods
mov
or
xor
in
cltd
mov
jp
pushf
sbb
loope
jo
push
out
addr16
jecxz
push
lcall
lret
xchg
mov
inc
jle
out
dec
fstpl
cli
push
enter
jecxz
jo
fildll
addr16
in
fistpll
jge
subl
gs
fstpl
add
push
outsl
rcl
sbb
test
sbb
mov
sbb
sbb
or
mov
fsts
and
jne
rep
push
in
and
jb
pop
lea
arpl
idiv
inc
popf
lods
xchg
jne
rorb
push
jnp
fistl
std
sub
divl
inc
dec
shl
stos
sti
pop
sarb
sbb
insb
jmp
testb
inc
xchg
or
mov
dec
jl
mov
cmpsl
xor
push
jecxz
aas
outsl
mov
mov
adc
jb
leave
pop
cmp
std
repnz
add
fsubrl
mov
popf
adc
jnp
fcmovu
fwait
cs
add
ljmp
mov
push
es
int
or
xor
lcall
addb
cmp
mov
xor
clc
lods
gs
nop
add
aaa
daa
and
mov
xor
or
adc
cld
mov
fisubs
dec
hlt
in
test
push
mov
add
fcmovu
jne
mov
fsts
imul
cmp
ret
xchg
adc
stc
loopne
fisubrl
stos
mov
fcomps
xadd
jle
sub
jnp
ss
inc
test
mov
in
push
stos
aaa
fimuls
dec
outsb
add
cwtl
icebp
jp
fnstsw
andb
xchg
cmpsb
xchg
pop
xchg
out
adc
ljmp
mov
inc
cs
mov
and
out
push
insb
in
xchg
adc
test
rcl
mov
inc
addl
inc
push
push
xchg
mov
aas
arpl
xor
mov
add
pop
xchg
ss
sbb
push
sbb
rolb
rcr
out
ljmp
adc
cwtl
in
mov
in
jg
lea
pop
jle
les
cmp
fnstcw
ss
sbb
jae
adc
dec
xchg
loop
inc
inc
inc
sub
adc
inc
pop
or
loope
hlt
std
lcall
rorl
enter
sbb
xor
adc
lret
mov
dec
adc
testl
jne
std
fiaddl
idiv
test
pushf
cld
sub
in
ret
push
ret
sti
add
xchg
lds
sbb
pushl
decb
inc
and
test
rorb
cwtl
pusha
mov
xor
push
shrb
jg
int3
jbe
sub
pop
out
sub
mov
dec
in
into
sbb
out
sub
js
enter
inc
sbb
and
fs
xchg
fwait
cmp
xchg
int
cs
fnsave
ja
lret
xchg
fcoms
lock
cmpsb
push
je
dec
test
and
mov
cwtl
call
testb
mov
mov
into
xor
xchg
dec
pop
cltd
sub
scas
cli
ja
pop
clc
popf
pop
in
loopne
xor
dec
clc
cmpsb
sahf
push
inc
test
int3
push
daa
jae
imul
mov
or
push
outsl
loopne
or
xor
jmp
jbe
jns
lods
push
push
loope
jge
sub
push
mov
inc
xchg
ljmp
stc
inc
or
fwait
jae
add
fwait
or
and
std
jb
inc
inc
lds
xor
cmp
or
jl
and
imul
popa
insb
adc
fimull
imul
loop
pop
repz
lock
mov
int
mov
loop
cmc
mov
jmp
xchg
aam
stos
test
jl
clc
sbb
cmp
movsb
stos
or
hlt
mov
mov
jg
mov
pop
lret
mov
inc
out
mov
repz
cltd
imul
add
push
movsl
pushf
sub
pop
jnp
rolb
jp
xchg
xor
iret
cwtl
ret
icebp
testl
es
scas
loope
clc
jle
sti
pop
into
xor
sbb
push
dec
sbb
sub
leave
aas
ret
sahf
inc
lahf
ss
xchg
iret
sti
loop
pop
inc
push
fldt
fisubrs
cmp
rorb
dec
xchg
add
cld
mov
ljmp
xchg
xchg
fcoms
adcl
shll
cld
cmp
aaa
and
addb
dec
std
xorl
xchg
daa
insl
add
aam
mov
enter
or
data16
hlt
jg
test
iret
dec
push
sahf
repz
pop
out
ss
jnp
movsl
xorl
adc
cmp
mov
mov
sub
notl
inc
das
push
push
mov
sbb
push
fistpl
push
out
cmc
jecxz
ret
jne
lcall
push
push
or
jns
ljmp
cltd
pop
inc
stc
xchg
pop
das
pusha
pop
and
fdivrp
xor
inc
jne
das
pop
and
shll
rol
test
imul
fisubrs
mov
fsts
dec
pop
addb
stc
push
dec
loopne
xchg
push
jb
cmp
push
lods
lret
idiv
sub
or
dec
outsl
or
movb
clc
fdivl
xor
out
pop
sub
jmp
fldcw
xchg
das
jnp
scas
ret
pop
gs
mov
mov
sahf
neg
ja
cmp
outsb
repz
iret
mov
adc
inc
mov
or
repz
push
dec
or
int
jno
or
fistpll
in
stc
in
and
insl
add
adcl
sbb
mov
lea
inc
lock
stc
repnz
inc
int3
stc
mov
mov
adc
sbb
jnp
fiadds
push
pop
adc
insb
leave
xchg
negl
xor
inc
mov
sub
outsb
jne
rcll
repnz
fwait
xor
je
sbb
xor
jp
stc
fldl2t
push
jbe
jo
or
cmp
push
in
jnp
stc
in
int
add
testl
xchg
and
add
pusha
je
mov
dec
inc
mov
sub
fisttpll
in
dec
mulb
fdivrp
push
mov
gs
test
mov
pop
xchg
fnstsw
shrl
ret
outsb
out
cli
mov
adc
lock
add
push
jle
push
stc
icebp
pop
cmc
clc
xchg
stos
jmp
or
cs
movsb
fprem1
pop
repnz
lods
pushw
xor
lret
cmp
lret
push
int3
loope
arpl
add
in
inc
sub
pop
xor
sub
or
sub
and
sub
addb
int3
negb
fstpt
cs
pop
adc
insb
leave
xchg
mov
xchg
xor
mov
mov
xor
add
sub
je
fcoml
sub
lock
xchg
push
ret
and
sbb
push
js
cmp
or
sub
sbb
lds
orl
jnp
btc
lcall
sub
aam
adc
int3
pop
imul
prefetcht2
mov
pop
dec
push
and
sbb
push
stos
sub
call
xchg
loop
out
call
lods
clc
roll
mov
ret
sbb
sbb
int3
jne
sbb
sbb
ss
popf
fstl
in
cwtl
and
jae
out
adcl
or
fs
les
ffree
pop
and
add
ret
cmp
shlb
jns,pn
aam
mov
test
inc
xchg
cmp
pop
in
add
or
rcrl
rcll
mov
jb
jp
push
int3
jecxz
xor
push
mov
jge
sbb
lock
ja
loope
pop
xchg
xchg
sbb
in
adc
pusha
mov
nopl
imul
mov
and
add
push
scas
or
sub
int
xor
idivb
mov
aad
out
cs
mov
movsl
adc
les
xor
hlt
xchg
cmpsl
pop
inc
or
xor
xlat
scas
pop
and
int3
dec
lock
ret
loop
sub
mov
xor
ja
stc
and
jno
scas
les
stos
insl
das
int
cltd
dec
xchg
or
jg
sbb
cmp
test
xor
mov
mov
inc
add
test
std
sub
pop
jo
xchg
ret
add
push
xchg
lods
mov
jmp
aam
or
push
sti
add
addl
shl
add
adc
pop
jge
or
xchg
xchg
subl
adc
cmp
xchg
jns
cmp
sbb
fcomi
imul
push
add
movsb
lea
cmpl
xor
pop
lret
pop
and
cmp
mov
lret
cld
jle
loopne
sub
ja
lret
cld
in
jnp
mov
xor
jecxz
call
mov
jg
and
in
mov
jne
xchg
test
repz
pop
mov
stc
lret
rorl
pop
jae
imul
leave
fwait
sub
dec
or
add
jge
push
cmp
xor
sbb
in
or
push
mov
lahf
aaa
loopne
sub
cmc
les
add
loope
fwait
adc
out
jle
dec
xor
jmp
sub
pop
jne
cmp
and
mov
outsb
dec
jecxz
sub
pop
jp
push
test
roll
push
jge
lods
and
mov
adc
jg
cmp
push
dec
push
jns
jge
std
out
sub
jno
mov
jmp
out
out
xchg
hlt
push
inc
jecxz
inc
push
outsb
or
in
mov
in
jnp
test
les
mov
enter
xor
jae
mov
into
ja
insb
jae
sub
test
xchg
xlat
mov
int3
ljmp
cmp
jno
pop
mov
jb
push
icebp
daa
cmp
mov
pop
xchg
lret
xchg
adc
out
insb
mov
int
jmp
popa
test
lods
jns
pop
loope
dec
out
dec
xchg
dec
or
leave
popa
pop
jmp
sahf
xlat
inc
and
dec
cmp
cmp
jno
fucomi
xor
fisubrs
inc
and
pushf
push
jns
loop
test
mov
xchg
outsb
insl
std
aas
and
shrl
xlat
mov
push
cwtl
push
rcll
lods
and
cmp
adc
mov
mov
sub
push
sbb
stc
push
mov
or
xchg
test
ss
scas
add
mov
lcall
imul
mov
jmp
mov
mov
sti
or
sub
mov
sahf
jmp
add
pop
movsl
xchg
or
sub
jge
stc
fistps
and
addb
das
sub
fndisi(8087
adc
dec
pop
add
mov
addl
mov
xchg
cmpsl
sub
call
or
pushf
xchg
mov
xchg
clc
pop
pusha
movsb
sub
pop
cs
lret
jmp
cli
push
pop
lods
xor
or
mov
sti
xchg
pop
addb
sub
lock
mov
jle
jnp
out
add
lds
push
ret
cld
loop
jmp
scas
lret
in
lods
xlat
add
push
inc
repz
cwtl
pusha
in
je
sub
inc
sarb
cmp
not
push
push
leave
addr16
test
popa
int3
aaa
push
inc
imul
stos
xchg
pop
mov
dec
add
xchg
iret
dec
inc
dec
mov
aaa
in
adcl
pop
mov
hlt
fs
xor
icebp
or
xor
jecxz
notl
leave
sub
mov
pop
aas
mov
xor
adc
push
xchg
xchg
push
js
and
xchg
shl
mov
cmp
rcl
add
outsl
mov
in
mov
sti
clc
fwait
test
dec
jb
dec
mov
jno
or
pop
dec
nop
cmp
cmp
lahf
adc
fdivrs
mov
scas
shl
cmpl
push
ss
or
sub
mov
sarb
pop
inc
loopne
aaa
into
mov
cmp
lahf
mov
lds
int
inc
sub
jmp
and
std
mov
lret
loopne
mov
push
xchg
sub
sti
cmpsl
push
xchg
es
arpl
gs
daa
push
int3
mov
jecxz
divb
xchg
pusha
adc
sub
xchg
in
and
adc
or
cmp
jb
mov
cmp
and
xor
out
cli
mulb
imul
mov
mov
sub
loopne
repnz
dec
cmp
add
addr16
jg
add
cmpsb
xor
dec
mov
dec
mov
int
sbb
sarb
cmc
cld
jl
ja
mov
outsb
push
push
in
loope
dec
daa
mov
in
jns
out
stos
shlb
fdivp
mov
add
mov
xchg
mov
shl
mov
mov
xor
mov
jp
and
xchg
arpl
movsl
lods
pop
out
fwait
insl
and
loop
mov
test
pusha
push
and
mov
or
mov
jle
aaa
lret
add
mov
inc
sbbl
fisubl
jno
test
sbb
mov
mov
fcompl
push
xor
or
sbb
jo
or
add
mov
int3
pop
push
out
cmpsb
adc
cmp
add
das
dec
mov
clc
lcall
inc
jb
imul
xchg
shrl
sub
stos
subl
xor
add
pop
jb
pop
sbb
fnsave
or
or
stos
hlt
or
mov
push
mov
and
cld
dec
call
sub
mov
sbb
stc
scas
pop
and
mov
in
cmp
mov
test
sub
movsl
mov
stos
xchg
imul
mov
fisttpl
xor
cs
out
xor
in
mov
cmpsl
cmp
imul
mov
outsb
and
dec
out
repnz
adc
xor
xor
xlat
fldl
outsb
cmp
hlt
lea
xchg
sub
out
xor
rorl
push
xchg
cmc
inc
push
cli
cmp
push
and
xor
lahf
scas
into
mov
jp
jmp
mov
and
pop
dec
orb
outsl
sahf
xchg
jbe
mov
adc
lods
adc
push
sbb
cmc
in
into
or
mov
sub
adc
pop
push
jno
hlt
ss
test
ret
sbb
out
shrl
push
es
push
xor
add
mov
push
adc
cwtl
inc
jmp
bound
scas
lahf
leave
xchg
mov
fs
xlat
jne
lret
and
and
push
mov
les
dec
not
sbb
iret
xor
nop
ret
rcr
jmp
movsb
cli
mov
mov
and
mov
rolb
ljmp
cmc
imul
jns
sub
in
or
cmp
fucom
sbbb
mov
inc
movsl
dec
mov
xchg
mov
mov
add
sti
mov
lods
sub
mov
ror
pop
aad
add
sahf
xchg
clc
ja
arpl
and
adc
sbb
sbb
fwait
pop
jmp
mov
test
xor
lahf
scas
mov
xor
in
loopne
inc
push
test
push
fcompl
push
push
lock
cs
in
adc
xchg
pop
and
leave
or
pop
inc
mov
aaa
push
sub
les
outsl
push
inc
sbb
clc
in
clc
sub
out
cwtl
aas
inc
popa
subb
inc
ss
xor
inc
dec
repz
call
xchg
jne
call
hlt
cs
call
or
xor
mov
addr16
lahf
fdivr
out
mov
cmp
jmp
mov
push
cwtl
js
int
jo
dec
mov
popf
adc
in
jbe
rorl
push
xchg
xchg
jno
lods
fwait
shll
xorb
hlt
fidivrs
or
pop
mov
stc
and
sbb
ss
xor
outsb
shll
cmc
pop
xchg
pop
orl
or
mov
enter
or
js
pop
adc
push
cmc
aad
dec
loopne
nop
in
jle
add
adcl
test
xchg
push
leave
fldt
sahf
int
lahf
xchg
sarb
movsl
xchg
dec
lret
sbb
ret
xor
push
lock
xchg
add
sub
ret
notb
out
push
ds
test
stc
mov
imul
shrb
popa
shlb
push
xor
cli
hlt
nop
leave
in
pop
ljmp
mov
xchg
repnz
movsl
inc
mov
lret
negl
push
iret
loopne
sub
inc
mov
or
jbe
mov
inc
inc
aam
in
das
stc
add
push
sbb
aas
mov
pop
subb
fnsave
mov
mov
sub
loopne
inc
jo
xchg
pop
or
or
sbb
das
fmuls
inc
arpl
popa
push
inc
pop
and
mov
jle
iret
jmp
dec
push
lret
fidivrs
jp
sub
add
adc
cwtl
mov
push
lret
cmp
lcall
inc
adc
test
dec
into
fildl
adcb
sub
lods
insl
aam
add
jno
movsb
xor
fmull
mov
incl
aam
int
es
lcall
ret
mov
lcall
rolb
push
mov
sub
xlat
test
push
jp
cli
dec
hlt
fistps
sub
sbb
mov
sub
jb
sub
xor
xlat
fwait
push
std
popf
lcall
push
mov
jno
jb
hlt
dec
pop
out
xchg
push
aad
xor
je
dec
pop
push
nop
and
addr16
stos
scas
mov
cmp
cmpsl
pusha
out
adc
push
gs
jae
scas
adcl
adc
dec
push
loopne
cmpsl
mov
aam
mov
ret
into
out
jo
cmpb
lret
ret
and
in
aas
sbb
fidivs
loope
mov
add
mov
insb
xchg
mov
mov
cmp
sti
iret
or
sarl
pop
mov
cmpsl
jb
jecxz
sub
jg
jp
bound
mov
into
outsb
xchg
sub
loopne
movl
hlt
movsl
mov
jmp
jmp
and
xor
leave
or
jecxz
or
and
imul
mov
out
iret
cltd
cmp
mov
adc
lods
pop
pop
dec
jmp
stc
xchg
out
sub
ret
in
out
push
and
sub
sub
ret
jge
jno
fs
push
mov
mov
repz
int3
rclb
mov
jae
psubw
xor
cltd
in
mov
imul
and
dec
sbbb
cmp
divb
aaa
call
add
sbb
test
stc
stos
and
sbb
add
lahf
divps
lret
mov
xor
push
add
mov
sub
mov
test
xor
push
test
mov
mov
testb
lock
cltd
sbb
add
ljmp
rcll
lahf
dec
cli
lret
sbb
mov
push
jmp
xor
dec
add
or
popa
xchg
add
push
xor
out
aad
dec
add
xor
or
or
xor
iret
inc
push
in
add
cld
imul
add
out
xchg
jne
loopne
repnz
pop
inc
push
popf
call
mov
stc
lahf
add
sub
xchg
xchg
mov
pop
insb
ljmp
dec
xchg
stc
ds
jb
imull
mov
add
inc
mov
mov
xlat
sbb
addr16
or
lods
lret
lock
jecxz
add
add
xor
push
ja
sub
divb
stos
jnp
out
js
xor
adc
pop
std
push
add
add
jns
or
stc
scas
repnz
mov
mov
shlb
xor
fldl
pushf
sub
scas
cltd
cmp
push
mov
jmp
mov
adc
pop
jne
mov
jne
push
xor
sub
imul
nop
add
sub
insl
imul
je
or
sub
les
rcrb
mov
lock
adc
adcb
adc
in
lret
mov
xlat
ficoms
loop
shrl
jge
jb
and
jmp
popf
imul
mov
and
sub
cmp
adc
mov
push
rolb
mov
xlat
jae
pop
stos
das
hlt
xor
xchg
adc
mov
bound
dec
inc
mov
mov
jb
rcl
and
push
out
pop
pop
sub
ds
clc
adc
push
mov
xchg
cmp
cmp
mov
and
xor
fwait
gs
popa
fists
and
and
inc
jnp
dec
cmpsl
mov
cs
mov
mov
dec
jnp
outsl
fsubs
adc
imul
add
out
and
xchg
call
sbbl
mov
orl
cmp
pop
sub
loope
lock
mov
fs
out
jne
mov
mov
gs
lea
idivb
adc
out
mov
mov
shr
or
mov
out
and
lahf
mov
imul
mov
cmp
and
lahf
jmp
or
cltd
cmp
or
testl
push
mov
je
sub
mov
inc
add
mov
cmp
insl
int
mov
lds
enter
mov
jo
adc
mov
popf
mov
sarb
xorl
add
push
push
pop
popa
cmpsb
xor
add
cmp
rorl
mov
xchg
adc
dec
or
push
pop
pop
das
pop
popf
sbb
repnz
mov
push
dec
fldcw
xchg
mov
jb
lcall
loope
push
dec
dec
imul
jae
cmp
insl
ds
shlb
mov
lds
mov
aaa
jns
or
mov
push
dec
sahf
pop
aad
ljmp
sbb
cwtl
adc
outsb
sub
mov
fsubrl
pop
xchg
cmp
xor
ds
push
pop
cmp
inc
fdivl
xchg
sarb
jne
cwtl
mov
inc
mov
xchg
dec
adc
or
lock
into
out
shll
frstor
push
cmp
jnp
mov
pusha
dec
into
ljmp
adc
mov
fnstcw
aam
out
sub
subb
sbb
fisubl
cld
mov
fwait
adc
cmp
cmp
mov
ja
push
fimuls
int3
std
sub
add
into
cli
xor
ljmp
stc
and
sub
or
lcall
testb
test
push
cmp
xchg
pop
outsl
jns
fstpl
in
xor
adc
iret
lcall
cmpsb
out
push
and
and
adc
scas
mov
inc
faddp
mov
enter
outsl
pushf
daa
jbe
pop
out
mov
push
in
push
xchg
fcmovb
test
rcpps
dec
adc
test
insb
cld
xor
mov
cmc
xlat
aas
pop
fucom
int3
movl
push
lcall
cs
mov
inc
outsl
das
pop
dec
xchg
leave
add
jne
pop
add
inc
sbb
andl
add
test
inc
sarl
pop
jno
nop
sahf
push
push
shlb
mov
xor
addb
jb
sbb
push
jp
mov
fsubl
int
cwtl
insl
je
pushf
push
shl
xchg
mov
sub
dec
cmpsl
cmc
mov
push
mov
mov
jnp,pn
jmp
imull
mov
pop
jge
mov
les
cld
mov
xor
aad
sub
rorl
sahf
mov
sbb
pop
dec
mov
push
pop
cmp
or
inc
adc
sub
movsl
or
lock
mov
dec
loop
add
pop
test
pop
imul
mov
adc
mov
dec
insb
ja
mov
subl
movsb
movsb
mov
cmp
pop
adcl
pop
in
jnp
pop
rcrl
nop
sbb
mov
xor
xchg
icebp
jle
sbb
xlat
pushf
ds
mov
push
mov
mov
mov
les
mov
push
inc
lcall
mov
mov
les
sub
jp,pn
int
daa
fdivp
vandps
loope
addr16
or
repnz
or
cmp
aam
mov
mov
test
adcl
pop
jge
or
mov
dec
sti
dec
push
int
mov
mov
or
xchg
jp
push
out
fidivrs
loopne
cltd
insl
xchg
push
fsubrp
mov
nop
push
sbb
jle
jo
aaa
rolb
xchg
ss
cmpsl
adc
cmp
sub
mov
pop
pop
testb
cmp
je
fimull
mov
add
test
arpl
xor
lahf
nop
pop
pop
in
xor
scas
or
daa
fidivrl
clc
cmpsl
into
pop
xor
pop
cmpsl
call
sub
sahf
or
inc
pop
jl
fidivrs
xchg
mulb
add
adc
adc
fdivrs
jo
loop
xchg
pop
addl
sbb
jnp
fwait
dec
les
or
lcall
movsb
inc
dec
lret
mov
and
fbld
mov
cs
aad
je
mov
mov
movsb
cltd
icebp
dec
lods
addr16
popf
lods
xchg
mov
push
inc
mov
dec
and
push
test
aas
mov
cmp
push
jb
sbb
xchg
or
add
mov
dec
frstor
mov
ljmp
daa
add
inc
or
cld
rorb
movsb
in
mov
lahf
pushf
dec
jnp
mov
push
loope
cmpsb
jo
lahf
lea
ss
push
adc
jle
bnd
aad
outsb
jecxz
in
push
hlt
adc
int
mov
adc
jbe
lods
aam
rcrl
push
xchg
or
sbb
jl
add
aad
sub
aam
mov
or
stos
std
xor
xor
popf
jb
pop
xor
sub
dec
movsb
push
js
clc
es
lret
push
test
enter
rorl
inc
in
cmpsl
sub
ret
jne
cmp
jo
call
pop
cltd
mov
dec
push
and
sbb
push
out
mov
mov
inc
andb
lret
or
movsl
aad
loope
pop
enter
jle
inc
sub
mov
xor
ds
dec
push
sub
jbe
jmp
push
das
dec
push
hlt
sahf
and
ljmp
mov
loope
mov
out
inc
pusha
and
cli
fisubrs
mov
fimull
add
stc
dec
cmp
jno
in
jnp
or
test
imul
in
fcomps
cmpsb
mov
jb
push
add
cmp
mov
out
popa
ret
sub
xchg
aam
adc
test
mov
sub
cmp
pop
outsl
cmp
scas
sti
loop
push
and
popa
pusha
fldcw
mov
int3
xor
mov
jae
mov
add
shlb
or
aam
fidivs
fcmovb
mov
cwtl
mov
cmp
rorl
pop
into
mov
test
sbb
iret
fstl
and
ljmp
cmp
jg
adc
xlat
jo
xor
decl
mov
aas
int
adc
cmp
sbb
jmp
and
bound
js
push
repz
out
adc
pop
repnz
in
mov
mov
cmp
fsubs
lea
jmp
jae
mov
and
aad
cmp
jmp
out
jo
adc
pop
pop
lock
sbb
pop
xor
shrb
aam
aad
cmp
cli
pop
cli
mov
mov
mov
out
ret
mov
add
pop
cmp
in
adc
and
clc
or
mov
dec
lds
out
xor
dec
push
cltd
lds
cmpsb
movsl
in
fnop
shlb
icebp
rol
lods
cmpsb
dec
lds
mov
mov
pop
rcr
dec
dec
fs
sahf
pop
pop
or
xchg
cmp
xchg
push
xor
outsb
add
fists
rcrl
inc
negl
lods
ds
sbb
imul
lret
cmp
stos
sahf
sub
add
aas
std
mov
push
jo
inc
pop
cmpsl
shrl
test
adc
lock
mov
test
pop
pop
ffree
and
dec
jne
mov
iret
adc
fnstenv
jns
xor
and
clc
adc
movsb
push
outsl
jge
mov
scas
leave
mov
and
shlb
andb
in
fldcw
jbe
lahf
cld
popa
mov
sub
les
lahf
imul
or
movsl
stos
mov
or
cmp
stos
scas
test
push
xchg
bswap
mov
outsb
fstl
filds
negl
and
mov
mov
sub
add
inc
cmpsl
dec
sbb
gs
popa
xchg
sbb
ss
adc
pusha
ret
fwait
jb
mov
sbb
nop
jne
imul
int
xchg
dec
push
sub
add
inc
cmpsb
cmc
scas
ret
mov
rorl
mov
pop
movsl
shl
clc
imul
ret
ja
aad
push
sbb
mov
aas
push
xchg
dec
cmp
call
sbb
je
sub
sub
push
fidivl
lret
lret
imul
and
xor
sbb
push
lods
push
pop
sub
test
aas
stc
dec
jae
stos
std
jns
cmp
mov
xchg
xor
and
fs
adc
push
loope
scas
or
jecxz
jle
lcall
lret
loop
jno
dec
sti
xor
sub
sahf
mov
dec
adc
jge
iret
int3
rsm
pop
cmpsl
cmp
adc
scas
add
push
sub
iret
or
push
shlb
pop
push
cltd
xchg
retw
cmc
int3
sub
adc
adc
push
add
jl
xchg
loopne
pop
push
aam
jno
sub
fsubs
shl
xchg
popa
imul
dec
cmp
loope
jle
sbb
call
clc
sub
push
mov
out
xchg
push
cmp
outsl
shr
inc
xor
sbb
xor
jnp
sarb
push
mov
pop
nop
sub
dec
and
mov
call
mov
sahf
fcmovnu
jns
out
dec
pop
cmc
test
int3
mov
inc
mov
xor
test
push
adc
or
pop
or
inc
jp
dec
jo
and
es
lea
add
mov
repz
mov
and
sub
xchg
ja
aas
pop
jmp
mov
jg
cmp
sbb
jl
iret
sahf
fbld
stos
sub
jnp
push
pop
inc
mov
inc
rcrb
rcrb
cmp
or
rcrb
push
sbbl
lods
out
or
pop
mov
and
test
aas
inc
hlt
sahf
clc
xchg
clc
arpl
xor
cld
mov
pop
cmp
mov
xor
pop
dec
add
popf
ds
sub
cmp
mov
jo
sbb
repz
fisubl
dec
inc
jmp
dec
sub
cmpsb
mov
dec
fidivrs
mov
out
iret
insl
mov
icebp
xor
mov
push
out
cld
xor
jl
xor
push
movsl
jbe
loop
lods
push
stc
and
imul
cs
jo
xchg
bound
jp
lods
mov
scas
lock
push
lahf
aaa
movsb
js
pop
das
push
fsub
add
push
pop
xchg
sbb
enter
ja
std
jbe
sub
pushf
and
cwtl
scas
cs
cmp
arpl
mov
aam
push
jns
das
clc
cwtl
mov
mov
or
cli
pop
std
or
xchg
xchg
push
mov
stc
push
ficoms
mov
sarb
popf
loopne
cmpsb
rcr
xor
xor
sbb
fsubrs
cmp
adc
stc
fsubs
fxch
push
lock
xor
xchg
xor
imul
dec
fst
stos
mov
push
sub
push
push
outsb
outsb
pop
or
psraw
xor
and
push
push
add
ljmp
pop
xchg
and
jno
add
in
pop
push
mov
ljmp
rcll
fistps
insl
in
popf
shr
cmp
mov
add
dec
mov
lcall
jne
mov
out
xor
add
test
loope
mov
das
ss
outsl
cmpsl
dec
add
cld
jbe
enter
flds
test
pop
sbb
dec
hlt
jge
or
rolb
xor
aas
sbbb
jp
clc
and
sub
push
mov
push
push
pushf
inc
negl
mov
jg
cmp
pop
pop
dec
dec
enter
mov
mov
les
pop
arpl
fmull
lods
xchg
sub
lcall
sbb
cmp
aaa
or
jns
pusha
and
mov
rolb
push
dec
movsb
push
xchg
negl
negl
jae
mov
xor
orb
fdivl
push
push
cmp
mov
add
mov
in
mov
pop
adc
mov
fisubl
adc
loope
sub
xor
shll
and
lret
ret
xor
out
mov
ljmp
pop
add
mov
and
out
fmuls
jmp
das
inc
lock
imul
ret
or
mov
and
push
jmp
std
vandnpd
adc
arpl
xchg
scas
pushl
testb
popa
lahf
mov
cmpb
mov
test
jnp
adc
xchg
jmp
jo
xchg
pop
sti
pop
push
inc
stc
mov
dec
and
jne
sub
stos
sbb
and
jle
pushf
jg
dec
push
push
popf
cwtl
pusha
lret
inc
mov
xor
mov
notl
in
mov
xchg
mov
rcl
into
or
and
push
mov
mov
mov
idivb
sbb
popf
notl
xchg
mov
xchg
adc
xchg
mov
and
sub
push
outsl
in
jno
cmp
fisubl
xor
dec
icebp
pop
into
pop
pop
xchg
push
and
adcb
sub
divl
fcom
cmc
in
sub
out
roll
pusha
xchg
pop
push
xor
mov
cmp
sarb
adc
mov
insb
mov
adc
ja
leave
mov
mov
loope
scas
ret
les
je
ja
stos
mov
pop
imul
stos
arpl
enter
mov
push
lds
push
pop
ror
adc
addr16
popa
call
es
into
inc
sub
pop
cmpsb
sbb
push
sbb
aam
lret
xchg
cwtl
or
jnp
xchg
out
sti
push
imul
sbbb
pop
insb
mov
pushf
shll
jl
xchg
cltd
and
shrl
push
dec
shl
in
jle
mov
cli
xchg
lahf
rolb
ljmp
adc
std
iret
dec
dec
test
push
mov
int
iret
adc
adc
inc
pop
fnsave
jne
dec
in
adc
loope
jne
cmp
inc
out
mov
inc
and
jb
mov
and
xor
xchg
icebp
xchg
orl
mov
stos
sub
pcmpeqw
xchg
mov
imul
xchg
add
stos
xchg
jo
adc
pop
lcall
pop
mov
repz
insb
mov
arpl
pop
mov
push
shl
ljmp
mov
rcr
jg
aas
jb
adc
cs
call
out
lods
lea
sub
sbb
fwait
mov
mov
pop
aas
insb
lret
cmpsl
stos
push
loope
ja
addr16
in
inc
xor
pop
xor
or
mov
call
sub
xchg
pop
or
adc
inc
loop
pop
ret
push
aad
mov
pop
inc
sarb
js
orb
mov
push
sub
add
push
cmp
push
xor
jns
cwtl
lahf
cwtl
pop
mov
ja
dec
sbb
xchg
or
popa
jecxz
cltd
mov
int
scas
mov
outsl
adc
fdivl
push
inc
dec
jp
inc
cmpsb
nop
dec
popl
mov
mov
je
inc
mov
mov
xchg
jnp
stos
ret
mov
je
outsb
movsb
test
mov
lret
jle
xchg
in
sbb
shlb
cmp
call
inc
or
or
mov
rcrb
or
mov
adcl
scas
sub
mov
ret
into
test
lahf
aam
leave
arpl
cmp
jle
mov
push
push
fcmovb
ficoms
not
mov
mov
out
test
insl
jae
mov
les
add
test
push
or
loope
pushf
inc
dec
jns
ror
lcall
lock
ss
xchg
loope
leave
pop
xchg
inc
mov
and
test
push
call
xor
adc
out
sbb
out
mov
ds
inc
outsb
rcll
movsl
out
mov
mov
jo
mov
mov
jae
sub
mov
mov
push
cmpsl
mov
cmpsl
push
outsl
movsl
lret
in
aam
outsl
dec
scas
arpl
dec
movsl
or
push
mov
pop
cmp
into
inc
ret
imul
cmp
adc
jns
cmp
cmp
lret
fistl
ds
xor
ds
sub
outsb
jnp
push
mov
int3
jmp
repnz
ss
leave
ror
or
outsl
dec
or
jns
push
jle
rcll
ljmp
mov
in
mov
xor
insl
cmp
cli
filds
filds
push
movsl
dec
aaa
pop
jle
pop
mov
loop
es
movsb
sbbb
jbe
arpl
and
jle
inc
mov
sarl
push
scas
leave
stos
inc
mov
jb
and
cli
add
xchg
out
fmul
jmp
add
cltd
cld
out
sub
xchg
and
and
bound
hlt
mov
fcmovu
mov
ret
sub
mov
cmp
mov
repz
int3
or
add
test
mov
inc
scas
jle
push
cmp
sub
outsl
pop
and
mov
and
mov
ficoms
ret
pop
lcall
jle
add
out
or
adc
orb
and
stos
pusha
sbb
mov
test
ficomps
push
stos
add
in
mov
out
inc
ret
xchg
jp
mov
cmc
into
or
repz
lret
in
mov
mov
fiaddl
daa
push
fs
mov
add
loope
mov
setno
xor
lret
sbbl
mov
add
push
movsl
push
fstp
add
dec
rcll
pusha
xor
jbe
stos
arpl
cmp
mov
sbb
stos
add
xchg
jg
scas
mov
xchg
pusha
lock
in
in
les
mov
pop
pop
ljmp
clc
pop
push
dec
ja
stos
filds
lock
out
mov
mov
lret
lea
jmp
in
cmp
cmp
push
call
movlps
jo
clc
stos
push
leave
arpl
popf
roll
vprotw
repz
inc
in
popf
xor
ja
push
adc
cmp
int
inc
pop
imul
sbbb
insl
lds
xchg
sti
call
das
out
aaa
sub
cmp
or
mov
leave
inc
cld
in
in
and
xor
mov
sub
xor
pop
sbb
jmp
repz
imul
mov
out
sbb
push
ret
out
data16
inc
sahf
ss
jae
aaa
xor
imul
ja
enter
into
es
mov
imul
dec
mov
sti
orb
mov
push
pmullw
jbe
das
shll
xchg
cmc
mov
pusha
in
fcomip
aas
cmpsb
test
divl
jecxz
xchg
or
xchg
xchg
mov
cld
out
out
add
pop
cmp
fists
sti
and
xchg
decl
adc
xchg
fisttpll
shll
in
lret
and
pop
int
or
nop
lock
adc
or
sbb
and
add
xor
or
jecxz
xlat
mov
nop
push
inc
dec
nop
ss
push
je
stc
sbb
mov
loopne
xor
into
xor
js
mov
pop
in
adc
jge
mov
imul
sahf
pop
ljmp
pop
fs
ja
cs
ja
rcll
xchg
mov
jne
lods
pop
xor
or
fldpi
pop
and
sub
push
data16
inc
clc
lods
ret
mov
cmp
mov
mov
jnp
or
push
or
sub
testl
insl
into
cld
mov
mov
mov
out
imul
xchg
pop
add
push
out
cmpsb
jecxz
scas
push
scas
fcoml
inc
push
lock
das
and
fnsave
xor
pop
pop
and
repz
lock
cmp
scas
mov
subb
xlat
pop
inc
add
or
loope
decl
stos
lods
rcll
pop
adc
int
cmp
addr16
frstor
pop
mov
dec
dec
sbb
or
mov
aam
sysexit
xchg
divl
mov
xor
sbb
inc
push
nop
rcll
dec
push
arpl
das
lret
mov
add
jb
push
jle
in
mov
fldcw
nop
cmp
aam
pavgb
push
shrl
insb
int
mov
in
pushf
cltd
pop
dec
daa
lret
push
pop
ljmp
stos
es
sub
loop
cmpsb
mov
pushf
mov
divl
cmpb
icebp
lahf
and
stos
xlat
xor
xchg
rcll
test
movsl
rolb
push
mov
and
mov
pushf
shl
imul
mov
int
inc
jne
lret
xchg
jnp
popa
test
iret
cwtl
mov
loopne
dec
scas
in
divb
mov
es
push
jne
mov
cmp
imul
test
mov
inc
xorb
pop
pop
jmp
sub
pushf
mov
jg
push
pop
jp
push
pop
pop
cmp
adcb
imul
enter
sbb
xor
mov
stc
mov
cld
jae
pop
rcrb
inc
or
sbb
and
push
bound
pop
std
cmpsl
cmp
int3
imul
jge
shrl
call
cmp
sub
mov
add
mov
mov
stc
xchg
jmp
adc
insb
mov
in
mov
xchg
add
xlat
imul
pop
mov
dec
cs
ja
inc
push
xchg
fidivl
dec
gs
repnz
adc
adc
xor
rcll
lcall
aas
mov
pop
push
pushf
mov
in
inc
movsl
pop
rcl
jne
stc
mov
clc
and
push
push
popa
lods
xchg
mov
push
cmp
and
rcll
fwait
stos
sub
xorl
ss
xor
cmpsl
cmp
mov
or
cs
xchg
pusha
fstpl
push
test
test
into
popa
out
dec
fadd
push
test
fs
jns
cmp
ds
pop
push
insl
cmp
cmp
ret
adc
mov
lcall
shr
mov
cmp
cmp
les
aam
jl
cmpsl
add
xor
dec
test
lods
sub
cmp
or
lds
lahf
xchg
mov
out
in
dec
and
lock
push
and
insb
insb
arpl
fstps
dec
or
mov
jbe
push
pushl
or
jmp
lock
xchg
add
popl
dec
sbb
sub
loope
pop
cs
jns
fists
mov
shrl
dec
sbbb
cmp
dec
dec
push
daa
xlat
repnz
dec
sub
loop
lret
mov
mov
xchg
add
movsl
and
and
divl
xchg
pop
push
into
inc
dec
jno
imul
or
inc
sahf
jmp
mov
bound
int3
mov
inc
sub
add
jae
inc
ljmp
pop
movsl
stos
and
frstor
adc
pop
movsl
mov
mov
pop
xchg
scas
scas
dec
pop
lcall
dec
inc
xchg
dec
movsl
sbb
push
std
inc
popf
movsl
int3
std
lock
mov
mov
or
testb
add
lret
in
add
cmpsl
xchg
cmpsl
or
xchg
sahf
lods
test
rcrl
pop
orb
pop
adc
lret
scas
inc
and
add
dec
or
movsbl
mov
pop
cmpsb
je
mov
movsb
or
mov
adc
mov
stos
mov
dec
adc
lret
jae
and
jb
orl
repnz
fwait
shrl
pop
out
jmp
add
js
mov
jns
add
and
add
xchg
inc
inc
mov
idivl
out
inc
les
dec
insb
sub
outsl
dec
mov
add
testb
fwait
rcll
setne
lahf
lea
dec
into
lahf
shrb
mov
std
repz
jo
in
pop
pop
insl
jo
repnz
cmpsl
mov
int3
jns
shl
xchg
xchg
aam
loop
pop
cld
pop
and
pop
leave
ja
inc
mov
jecxz
fnstsw
jl
or
cmpsl
xchg
imul
leavew
icebp
imul
jnp
test
fisttpll
idivl
shrl
fsubl
mov
das
mov
iret
push
adc
loop
pop
lret
fnsave
add
adc
aam
int3
sub
jns
adc
movsl
cmpsb
imul
fadds
testl
stos
lret
sub
xor
jle
inc
xchg
imul
pusha
mov
push
jne
fisttpl
mov
inc
mov
mov
and
gs
lock
push
cmp
test
ljmp
arpl
pushf
push
add
in
xor
xor
adc
cltd
mov
xchg
and
popf
dec
xchg
fcomp
sub
stos
loope
ja
mov
mov
and
out
push
add
sbbl
lcall
cmp
adc
pop
cmp
ss
mov
mov
call
in
lock
jecxz
gs
sbb
push
mov
mov
or
imul
xlat
adc
sar
mov
int3
cmp
mov
xchg
mov
jmp
and
inc
popf
enter
popf
jmp
jne
dec
jb
lret
movsl
jmp
les
insl
mov
mov
dec
xchg
fcmovu
ret
mov
and
mov
or
dec
xchg
jl
cmp
out
add
xor
int3
andb
jge
movl
fisttps
xchg
pop
ja
or
out
jmp
inc
or
cmc
xor
sbb
addr16
xchg
outsl
adc
mov
xor
mov
mov
ret
push
xchg
jmp
in
nop
or
mov
clc
cmc
cmp
adc
stc
push
es
inc
jle
mov
cs
repnz
test
shll
add
mov
test
mov
bound
ljmp
pop
ljmp
test
mov
imul
inc
filds
fwait
jp
or
cld
and
or
dec
testl
pusha
pop
fmull
and
fs
cmp
das
push
mov
sbb
mov
fcomi
mov
push
xchg
sbbb
mov
test
ret
lcall
mov
inc
lret
dec
pop
in
xchg
mov
sbb
cmc
in
dec
in
mov
xchg
inc
sbb
imul
enter
ret
scas
outsl
pop
inc
test
imul
jbe
mov
sub
sbb
fs
jle
ja
lret
in
shll
shrl
fbstp
lods
and
mov
sbb
and
daa
pop
test
jbe
fbld
push
jecxz
cltd
mov
mov
jne
mov
fs
and
ss
or
pop
inc
in
xchg
mov
add
mov
and
pop
mov
cmp
pop
popl
jg
xor
shll
and
sahf
aam
sbb
pushf
or
dec
call
shll
mov
neg
int3
fldl
sub
das
cmp
push
push
xor
cmp
addr16
pop
mov
js
rorl
rolb
push
lahf
pop
or
push
nop
or
add
shll
xor
xlat
cmc
cli
dec
and
aaa
outsb
pop
xor
mov
lock
popa
cmpsl
xchg
jb
int3
sub
arpl
out
push
mov
jge
add
int
sub
out
popa
xchg
test
mov
cld
ss
lret
dec
lret
xchg
push
cmpsl
scas
adc
mov
pop
mov
cwtl
test
or
std
cmpsl
xchg
jns
mov
mov
in
push
lods
pop
mov
in
sarb
xor
jecxz
pusha
dec
out
into
out
sbb
xchg
sbb
adc
in
lea
insb
or
fprem1
pop
push
popf
push
imul
and
xchg
testb
lcall
lea
popa
daa
mov
shll
lds
ljmp
mov
hlt
mov
and
and
ret
and
fisttpll
jmp
cmp
pusha
push
jnp
dec
inc
aas
mov
filds
insl
fs
adc
aad
call
loope
sbb
jno
out
cli
adc
lock
push
out
fimull
jns
mov
in
rcrb
les
mov
xor
mov
adc
jmp
lret
mov
lock
or
dec
dec
add
popl
aaa
cmp
and
add
push
sti
xchg
and
sbb
and
outsl
je
pushf
loop
lods
fcmovb
outsb
lahf
inc
mov
add
inc
jmp
les
les
je
aam
test
out
xchg
enter
add
aam
pop
leave
push
mov
mov
loope
inc
xchg
fcompl
jge
sbb
lahf
add
push
mov
dec
sbb
sahf
stos
xchg
daa
xor
mov
loope
xor
movsl
xchg
les
dec
mov
xor
push
enter
test
and
inc
jae
in
sub
jb
es
int3
jg
jns
enter
xor
shl
and
dec
sbb
and
loopne
push
fmul
push
adc
stc
xor
xorb
cmc
aad
call
mov
xlat
out
aam
popl
sbb
or
pusha
jp
in
aad
int3
push
inc
clc
jno
push
cmp
adc
fmul
fidivs
dec
xchg
dec
fbld
sbb
push
pop
sarb
bound
dec
fcoml
es
ret
lock
mov
xlat
into
fisttpl
mulb
inc
ret
data16
lret
inc
scas
or
jbe
addr16
xor
imul
ds
mov
jecxz
outsl
mov
pop
push
pop
pop
sbb
add
test
adc
dec
enter
fs
fisubrl
mov
adc
hlt
push
cmc
insl
xchg
mov
xchg
aam
jb
or
jmp
add
ss
fsts
sub
shll
push
cmpsb
fidivrs
in
dec
jns
repz
push
mov
lret
fstl
xor
aam
ret
adc
or
cmp
in
hlt
xlat
or
iret
outsl
push
inc
push
push
out
jb
es
push
fimuls
jns
mov
stc
scas
imul
jp
cmp
mov
mov
js
shrl
fld
dec
push
xor
call
lcall
movsb
cmpsl
mov
stc
dec
push
push
ret
stc
sbb
sbb
imul
arpl
out
cmpsb
xor
data16
aas
cmpsb
cli
ret
and
test
mov
scas
pop
and
cmp
dec
hlt
mov
es
in
clc
pop
xor
fdivs
jge
xor
dec
pop
dec
test
sbb
dec
sub
fidivrl
xor
sbb
xor
pop
mov
cli
mov
xor
iret
mov
js
test
push
pop
add
and
cmp
ret
popf
popf
and
stos
mov
dec
std
xor
ljmp
or
shrb
ja
or
mov
xor
popa
and
into
popf
lret
mov
push
addb
jbe
jmp
ljmp
movsl
xor
xor
pop
rcll
int3
lods
stos
out
popf
pop
pop
aas
push
popf
xor
aad
jnp
clc
inc
outsb
sbb
loop
pop
push
xchg
pop
push
mov
mov
push
out
mov
shrl
in
sahf
mov
mov
push
pushf
scas
and
iret
pop
ret
sbb
xor
mov
stos
loop
ds
jbe
scas
jge
in
and
cmc
popa
cwtl
cmp
mov
pop
adc
enter
insl
pop
data16
fdivrl
jno
shrl
sbb
dec
xor
out
fs
rcl
dec
mov
adc
mov
dec
cmp
jecxz
fcoms
insl
mov
ret
popa
lahf
aad
shrb
and
int
rclb
pop
xchg
dec
cmp
test
inc
push
cwtl
scas
filds
xchg
cmp
jne
int
cwtl
mov
daa
add
xchg
in
out
ljmp
push
mov
push
lea
pusha
es
cwtl
fsubrl
mov
shrl
mov
and
out
test
test
test
adc
mov
sbb
test
xchg
mov
and
neg
xchg
dec
gs
in
fisttpl
push
in
lret
dec
mov
stc
scas
inc
insb
data16
repnz
sbbl
les
ret
push
mov
aas
dec
lret
jb
ret
mov
out
dec
xor
pop
add
mov
sahf
pop
mov
push
fists
push
fs
push
dec
aas
xchg
fs
jb
sub
mov
pop
scas
xor
ret
sbb
pop
sbb
mov
lods
and
test
mov
mov
inc
xchg
leave
pop
data16
into
pop
loope
xchg
push
pop
repnz
les
iret
or
fstl
leave
cmp
xchg
cmp
out
pop
jo
dec
lds
mov
mov
push
hlt
mov
xor
jb
jno
aaa
xor
fildll
sub
and
inc
and
pop
cwtl
or
addr16
into
scas
daa
movsb
mov
mov
popa
xchg
sbb
add
dec
out
push
outsl
lret
in
cmp
cmp
mov
xchg
cli
add
js
fwait
out
xor
movzwl
adc
sbb
mov
ds
jae
xor
xor
push
cltd
dec
out
fildl
and
or
ret
dec
xchg
orl
mov
loop
cmp
push
jne
in
aad
aas
mov
xor
cmp
icebp
dec
sbb
jmp
pop
mov
lahf
jns
inc
mov
ret
push
jnp
lret
repz
pop
mov
pop
xorl
or
pop
sahf
xor
push
mov
jbe
adc
xchg
lret
pop
add
outsb
in
mov
out
xor
xor
add
or
pop
insb
ret
jo
add
ds
xor
adcb
mov
dec
cltd
cmp
mov
into
cld
adc
loope
jg
sub
and
imul
aad
pushf
dec
int3
cmp
sar
or
mov
lods
addl
cwtl
push
jge
push
fsubrl
clc
scas
dec
or
sub
das
mov
test
imul
ret
mov
dec
and
xor
test
or
int3
int
les
dec
cli
or
push
std
sub
inc
pop
push
sub
enterw
stc
xor
xchg
mov
ds
out
stos
movsb
cmpsb
gs
pushf
sub
jg
dec
movsl
jne
or
mov
stos
lds
mov
push
xor
shlb
nop
mov
and
fxtract
pop
ret
imul
iret
sbb
mov
pop
ror
xchg
jle
fstps
test
fucomi
mov
shll
out
fisttps
lods
scas
sub
cmp
mov
push
add
inc
add
test
lock
outsl
fwait
cmp
aas
push
add
adc
das
and
arpl
push
push
dec
sub
ret
add
and
mov
iret
pop
mov
fists
mov
aad
nop
dec
dec
xorl
mov
sub
mov
fsubrl
pop
mov
lds
push
in
shl
iret
push
jne
popf
test
scas
mov
and
neg
loopne
push
jb
jle
push
cmp
jb
xchg
fidivl
pop
push
arpl
pushw
and
xchg
loopne
cmp
pop
adc
inc
pop
mov
push
cmp
push
int3
pop
sbb
xor
jmp
jbe
sbb
mov
xor
jecxz
icebp
pop
mov
mov
xchg
ss
sahf
icebp
mov
pop
pop
mov
mov
pop
cwtl
push
inc
xchg
daa
xchg
loop
lods
push
imul
xor
testb
aaa
cwtl
scas
in
push
movsl
sub
faddl
sbb
mov
in
mov
mov
daa
mov
or
idivl
jecxz
jmp
mov
mov
xor
ret
cmp
hlt
inc
push
lock
lods
jmp
jbe
ds
sbb
pop
adc
lcall
push
push
repz
inc
arpl
jg
sbb
sub
shr
outsl
out
lds
ret
jmp
mov
mov
leave
cmp
cwtl
scas
pop
and
cld
and
or
je
and
mov
xchg
dec
iret
jecxz
jmp
mov
xchg
jmp
push
aas
scas
xor
or
sub
xor
xchg
loopne
xor
xchg
cmp
in
adc
pop
nop
adc
dec
cmp
jbe
sub
jne
imul
add
dec
dec
add
mov
mov
sbb
xchg
push
bound
mov
fst
inc
test
sbb
jne
jl
cmp
mov
out
mov
lcall
mov
or
cmc
rorl
mov
or
mov
and
mov
add
sbb
jb
fidivrs
lds
in
into
arpl
into
adc
aas
push
jno
add
es
push
cmpl
aam
bound
mov
lds
cwtl
std
popf
test
inc
out
inc
cs
sti
lock
movl
testl
out
shr
mov
shll
mov
popa
mov
rcrb
sarb
icebp
inc
test
arpl
rol
adcb
xchg
jnp
stc
dec
fsubl
jns
leave
pushf
mov
das
add
push
push
into
mov
mov
add
jne
loopne
insb
jo
clc
imul
arpl
lret
mov
mov
stos
ds
inc
and
xchg
sbb
xchg
xor
movb
shlb
ja
pop
lret
sub
rcl
call
or
mov
fisttpl
add
push
mov
jmp
out
push
icebp
jp
mov
lock
fldl
xlat
jae
test
mov
jbe
scas
xchg
cld
in
outsl
inc
out
sti
popa
jne
mov
inc
jo
sahf
fadd
mov
insb
inc
fs
dec
inc
inc
mov
add
mov
xchg
aaa
dec
scas
je
jmp
push
lods
cmp
adc
std
cmp
cmp
pop
xor
cmp
bound
add
cltd
je
mov
xchg
arpl
cmpsl
pop
pop
inc
je
subl
adc
dec
lea
and
loopne
inc
mov
test
shll
xchg
adc
xchg
pop
int
pushf
push
dec
pop
cmp
aad
push
pusha
cmp
arpl
xchg
mov
ret
repz
dec
cs
push
cmc
shr
mov
pop
xchg
cmp
inc
es
cmpsl
pop
inc
xorb
inc
lcall
stos
mov
cmp
xlat
sub
mov
jns
arpl
call
xor
jae
leave
add
adc
test
stos
jae
sbb
aad
jmp
rclb
inc
int
pop
xor
push
jb
pop
in
push
iret
jno
repnz
jo
pop
pop
xchg
dec
mov
nop
incb
push
mov
and
cmp
addr16
outsb
mov
insl
mov
mov
out
testl
and
dec
enter
sahf
icebp
ja
cmp
enter
pop
scas
and
test
jg
outsl
mov
test
dec
sub
gs
insb
jb
mov
in
pusha
mov
addr16
sub
mov
mov
push
xor
add
inc
cwtl
cli
stos
jo
push
add
lods
es
and
jno
mov
jns
ds
fsubs
into
sti
xor
mov
cli
push
adc
ljmp
xor
sub
xor
sub
ss
inc
sub
test
lock
or
and
inc
icebp
cmp
ds
cli
orb
cld
jl
test
daa
xchg
sub
std
add
mov
pusha
or
jnp
test
mov
cmp
inc
xor
cli
icebp
pop
jne
int3
jecxz
insl
adc
xlat
xchg
push
dec
cmpsb
adc
adc
inc
xchg
je
mov
dec
mov
dec
xor
xchg
mov
ja
sub
notb
mov
jmp
ljmp
mov
scas
jge
ret
jmp
pop
adc
fs
cmp
sub
jo
test
jmp
std
movsb
cs
lahf
shll
adcl
das
sarl
push
clc
xchg
cmp
je
sbb
mov
xchg
leave
jo
xchg
arpl
mul
aad
jge
int3
xchg
imul
into
add
sbb
mov
inc
jo
hlt
les
loope
out
or
int
pop
scas
aas
into
pop
sbb
mov
add
test
jbe
loop
popa
mov
in
dec
das
shlb
and
in
shlb
lds
ja
adc
popf
test
cld
and
dec
shrb
es
pop
jno
lds
in
inc
xchg
xor
movsl
sbb
dec
rorl
fidivrl
outsb
les
jbe
mov
loope
mov
dec
and
adc
lds
daa
enter
ja
mov
pop
sbb
mov
jb
push
mov
aaa
pop
icebp
mov
outsl
add
int
fwait
lcall
mov
addr16
int
test
push
xor
enter
mov
sub
sbb
xchg
lock
cwtl
xchg
mov
sub
das
addb
sub
or
in
jbe
and
push
popf
jp
pop
inc
push
dec
subb
add
pop
sbb
outsb
int
jno
lods
testl
shrb
cmp
jae
mov
cs
int
imul
fidivrs
xchg
pusha
fdiv
int3
push
test
jl
imul
jp
or
mov
push
fmul
test
stos
sti
std
ds
test
clc
mov
ss
sarb
aas
je
jo
in
mov
lods
popf
int3
pusha
aad
dec
std
add
pop
mov
test
ljmp
inc
fcmove
and
jmp
sbb
mov
sub
mov
jmp
outsb
test
cmpsl
mov
insl
pop
mov
sub
sub
dec
pushf
lret
pop
mov
inc
mov
mov
ds
arpl
ja
add
pushf
dec
cltd
rcl
push
adc
push
push
mov
jae
repnz
lcall
mov
or
sub
insl
lret
aaa
xor
shlb
clc
fs
fadds
jl
cmc
iret
or
movsb
data16
push
cmpsb
sbb
mov
adc
add
mov
inc
pop
inc
push
or
and
sbb
lods
cld
sbb
lods
or
out
cld
mov
jno
xchg
inc
xchg
jno
arpl
pop
cmp
es
lds
sbb
test
jp
popf
jns
push
pop
push
inc
movsl
dec
or
ret
sbb
sub
cmpsl
test
cmc
stc
mov
xchg
sar
mov
sub
aaa
inc
scas
dec
test
stc
sbb
jnp
jl
ret
test
shl
xor
pushf
sti
repz
dec
call
add
pop
sets
and
std
cmpb
mov
stc
jo
rorl
add
mov
inc
out
pop
jno
fisttpll
in
and
sti
cmp
xchg
mov
mov
js
push
pop
aad
sub
or
pushf
hlt
outsl
pop
imul
repnz
jno
xor
daa
shrb
push
shrl
movsb
pop
mov
lret
lcall
fs
mov
push
jl
jp
dec
mov
jae
mov
adc
xor
mov
testl
cmpl
push
sahf
and
pop
lock
mov
mov
lds
add
les
addb
add
in
xchg
jbe
in
mov
or
fcmove
shll
clc
dec
xchg
fdivs
addr16
sbb
pushf
xor
lcall
out
stos
and
aam
dec
ljmp
test
mov
xchg
jecxz
cmp
and
adc
int
bound
mov
aam
sbb
pushf
jp
adcl
mull
mov
pop
jne
and
fidivrl
ret
push
jbe
push
stc
adcl
ret
mov
jns
out
mov
jo
arpl
es
dec
les
xchg
enter
jno
ja
in
in
test
popa
dec
ret
push
hlt
mov
mov
mov
xchg
pop
into
mov
lock
outsb
scas
mov
out
out
cltd
pushf
fsts
hlt
dec
out
jb
cwtl
mov
out
pop
jnp
cltd
jmp
mov
pop
les
inc
cmpsl
mov
nopl
cmpsl
fsts
jae
xlat
cli
shl
in
int3
and
jecxz
mov
enter
dec
pusha
inc
jle
stos
mov
adc
sbb
jae
mov
out
xchg
xor
mov
push
mov
scas
out
push
or
or
adc
test
xchg
fst
idivb
jmp
mov
dec
jb
movsl
push
or
scas
inc
or
xchg
lret
mov
adc
test
movsl
test
movsl
inc
lcall
xorl
shlb
add
push
mov
mov
pop
xor
repnz
xchg
inc
xchg
call
mov
fdivrp
jmp
ja
jle
jne
addl
out
mov
leave
xchg
fsubrs
jg
addr16
and
aaa
roll
mov
xchg
xchg
or
pusha
jg
xchg
les
arpl
mov
push
jbe
dec
mov
mov
mov
xor
cld
jecxz
imul
rcrl
js
ss
mov
mov
mov
sar
insl
and
aam
imul
mov
inc
xchg
fwait
cmp
test
push
sbb
sub
outsb
mov
jp
clc
test
scas
ja
push
insl
subl
lock
roll
loopne
inc
adc
jp
shl
gs
sahf
pop
imul
clc
fcomps
lea
xchg
movsl
popf
or
cmp
gs
dec
xchg
or
arpl
xchg
test
and
mov
mov
mov
xor
stc
cmc
outsb
movsl
hlt
xchg
xor
fisubl
jg
test
push
xor
hlt
addl
cmc
stc
mov
imull
insb
add
or
pop
fildll
gs
sub
fwait
mov
int
psubsb
ja
aam
ret
ret
fistpll
lahf
add
and
add
jbe
mov
es
mov
xlat
sbb
cmp
rorb
movsb
adc
sub
lods
out
call
mov
call
mov
jns
aad
pushf
out
repnz
dec
mov
loop
cmp
xchg
xchg
sub
fidivl
test
lcall
jecxz
ds
out
daa
fistps
jl
dec
in
fbstp
xor
enter
je
mov
inc
fstpl
clc
cld
sub
arpl
es
addr16
shlb
pop
push
jp
lock
mov
dec
xchg
pop
jno
mov
loope
in
add
jb
and
jg
xchg
iret
fisubs
cmp
popf
pop
cwtl
int
and
loop
jmp
fidivs
test
ficoml
sub
outsb
cli
mov
cmp
inc
cmc
dec
xchg
push
es
lods
add
jp
pop
xchg
imul
pop
cmp
push
out
pop
data16
push
mov
adc
lcall
mov
sub
cwtl
push
dec
repz
jns
adc
ljmp
mov
hlt
ret
inc
loopne
mov
push
movsb
or
adc
jle
in
inc
xlat
xor
inc
mov
sub
enter
add
es
stc
sahf
insl
dec
lods
inc
push
cmp
dec
or
sub
inc
xchg
xchg
sub
push
mov
cmp
cmp
xchg
je
fs
fidivrl
pusha
call
imul
xchg
xlat
adc
and
xchg
nop
movaps
ss
sbb
cmpsl
call
fwait
adc
jp
pop
addr16
jmp
jecxz
pop
mov
sbb
sarb
lock
fsubp
fldenv
test
out
add
cli
ljmp
xchg
test
push
push
fwait
int
iret
test
mov
and
ja
push
sbb
pop
int3
mov
jne
push
push
add
sbbl
xchg
pop
push
cmpl
dec
add
imul
fildl
test
jae
add
pop
lret
dec
ja
test
ja
inc
rolb
add
jb
lret
push
or
ficompl
xor
cwtl
sbb
aad
std
dec
or
aad
cmpsl
push
inc
je
xchg
fbstp
shlb
cltd
fs
ret
cli
mov
int3
mov
ret
adc
adc
loope
adc
jmp
andb
test
sub
adcb
rolb
xorl
jae
test
mov
pop
ja
negl
pop
and
popa
shl
cli
adc
push
jo
shlb
dec
pop
xchg
and
enter
int
test
mov
les
push
mov
shl
pop
outsl
nop
lcall
xorb
dec
imul
in
popf
add
sub
push
push
and
and
aad
push
shll
xlat
xchg
pushf
inc
lock
adc
mov
mov
sbbb
shll
push
ja
testl
andl
clc
mov
mov
or
add
mov
push
xchg
push
or
adc
das
pop
stos
lret
mov
pop
add
mov
and
mov
mov
mul
icebp
es
inc
pusha
out
and
cmp
xchg
outsb
cmp
dec
adc
loope
xchg
dec
jo
ljmp
mov
add
jp
lods
fwait
stos
vmwrite
in
stos
sub
fsubr
mov
lahf
xchg
ret
push
fcmovnbe
sar
xchg
call
sbb
or
loop
lods
cmp
mov
mov
or
push
sarl
pop
lcall
iret
sti
or
idiv
in
xor
jae
nop
push
dec
push
inc
inc
push
sub
jg
jmp
daa
jmp
dec
fimull
mov
sub
inc
and
xchg
mov
arpl
aad
sbb
in
inc
mov
fcomps
dec
arpl
lret
add
in
push
je
pusha
stos
in
add
inc
pop
pop
mov
icebp
or
test
cmpb
pushf
mov
jb
decb
cmpsl
sub
addr16
shlb
xor
sub
aad
dec
arpl
repz
mov
pop
test
xchg
ja
int
insl
jnp
pop
das
xchg
pop
jb
xor
mov
pop
push
jl
jne
outsl
ja
aad
cmp
push
jbe
inc
cld
and
addps
xchg
sti
adc
rcl
fprem1
rolb
lcall
lcall
cmp
mov
out
push
sbb
xchg
adc
sub
orb
inc
add
imul
or
mov
sarb
out
cmovs
pop
fcmovnu
xchg
lret
jns
jp
cwtl
lods
sbb
int
fbstp
cmp
push
fwait
lcall
push
adc
add
sbb
movb
cltd
js
int3
pop
jp
and
inc
push
mov
inc
mov
adc
mov
aas
and
jle
inc
ret
dec
pop
xor
outsb
pop
and
adc
sub
mov
mov
popf
mov
jo
sti
neg
enter
mov
test
cmp
adc
mov
inc
loop
mov
das
js
pop
mov
adc
xchg
ss
dec
movsb
jnp
fdivrs
dec
cmp
les
fidivs
xor
out
mov
mov
mov
testw
xchg
fisubrl
mov
ret
das
leave
or
lahf
out
xor
cmp
or
stos
data16
movb
lcall
or
dec
jne
in
test
sbb
and
inc
out
imul
adc
xlat
fwait
mov
and
jecxz
movsl
mov
push
push
xchg
push
sbb
mov
orb
dec
repnz
inc
add
or
loopne
sub
xor
mov
pop
xchg
imul
sub
mov
movsb
lret
test
les
fs
loop
aad
fistpl
mov
mov
pop
outsb
cmp
mov
add
in
gs
ficomps
sbb
dec
sbb
std
pop
mov
jmp
mov
pop
jecxz
sbb
divb
fwait
popa
out
in
push
mov
imul
mov
and
jae
inc
fs
fisubrl
push
imul
sbb
and
add
adc
scas
sbb
in
in
push
jg
mov
je
sub
rorb
addr16
inc
pop
mov
xor
int3
dec
out
xor
mov
cmp
outsb
pop
test
mov
sbb
daa
mov
mov
push
xor
mov
icebp
shll
lret
mov
jl
dec
das
lds
ficompl
enter
or
stos
xchg
xchg
ret
mov
std
dec
stos
jne
or
ret
fmul
shll
push
pushl
popf
fidivs
mov
rclb
data16
cld
mov
outsl
mov
lock
inc
push
inc
or
insb
sarb
ja
js
xchg
int
loope
rclb
mov
push
fmull
sahf
mov
stos
jae
push
mov
out
jo
in
sub
inc
push
and
and
or
push
cmp
leave
mov
lret
rcr
jge
xchg
out
cmp
aaa
sti
pop
and
mov
inc
daa
scas
adc
xchg
hlt
fimull
push
mov
dec
in
jmp
inc
push
add
lock
mov
push
or
insb
push
xchg
adc
rcrb
stos
loopne
jp
shrb
test
or
sahf
or
cmp
inc
and
mov
out
mov
shlb
bound
shl
lds
jp
outsl
xchg
lods
int3
stc
mov
scas
lods
pop
stc
ret
lahf
cltd
nop
mov
fidivl
sbb
in
cmc
adc
mov
pop
iret
lds
repnz
push
mov
jb
shrb
or
negl
add
jp
cmp
call
jg
sbb
push
in
pop
pop
cwtl
addl
movsl
mov
fiadds
mov
adc
cmc
add
xchg
sub
xchg
loop
sti
inc
out
lock
in
cmpsb
mov
mov
jl
imul
xchg
dec
int
insl
sbb
aas
push
faddl
insb
cmp
mov
pop
sti
arpl
test
test
add
xchg
jmp
pop
daa
imul
lahf
imul
inc
aas
and
les
repz
xor
mov
faddl
jecxz
mov
jo
ret
aam
lods
inc
jbe
and
sbb
sub
fistpll
cmp
cwtl
sub
sbb
push
inc
cmpsl
sub
push
jmp
ljmp
into
sub
mov
inc
or
popf
dec
xor
mov
push
sbb
aad
push
pop
cmpsb
les
fbld
pop
mov
mov
stc
out
cmp
push
outsl
fsubrl
mov
sub
xor
push
push
xor
pop
das
stos
and
cmp
cmpsb
les
mov
mov
adc
repnz
aad
mov
xchg
cvtps2pi
jb
fnstsw
pop
shlb
lods
mov
gs
das
sub
out
rorb
sbb
and
and
test
pusha
lods
ficoms
fdivs
pop
jnp
lcall
mov
xchg
or
daa
or
xor
aad
adc
push
jl
inc
jb
inc
adc
dec
push
xor
sub
jle
pop
push
ret
xor
mov
pop
lds
adc
ret
popa
adc
cwtl
dec
sbb
cmp
fs
jae
pop
add
and
xchg
adc
fdecstp
xchg
loopne
inc
or
push
mov
xchg
enter
xchg
lret
fimuls
xlat
adc
outsb
adc
cmp
ret
mov
xchg
jo
call
adc
pop
xor
cmp
or
fbstp
jns
xchg
push
mov
pop
stos
data16
jg
mov
fldz
sub
or
notl
shl
es
enter
insb
mov
outsb
in
mov
nop
fnsetpm(287
adc
mov
lds
or
xor
push
jbe
or
push
lcall
out
mov
mov
jnp
adc
inc
jmp
lea
dec
or
push
and
subl
lods
pop
jmp
insl
shrb
in
hlt
sbb
jmp
data16
mov
adc
jno
movsb
mov
or
out
jp
adc
mov
cmp
ljmp
add
mov
mov
xor
arpl
cmp
cmp
clc
aas
in
ret
and
insb
rorl
in
leave
jp
sub
xchg
pop
fidivl
inc
cmc
or
xor
ret
adc
and
es
and
xor
addl
enter
mov
adc
cmpl
xorl
push
jmp
sub
int3
testb
pop
repnz
add
sub
aad
or
mov
push
stos
jae
cltd
scas
cmp
sarl
movsb
lock
popl
adc
mov
iret
inc
push
sub
lods
and
mov
mov
mov
mov
lret
mov
or
adc
push
ja
outsb
or
aas
cmpsl
hlt
fidivrl
adc
in
mov
xor
jl
sub
mov
std
add
mov
stos
push
mov
sbb
leave
fprem1
inc
std
jle
test
and
dec
add
adc
adcl
fstpl
into
sbb
or
xchg
xor
shll
outsb
sbb
and
inc
sbb
mov
jl
jo
pop
cmpsb
test
mov
repnz
in
xor
repnz
xor
sbb
dec
xchg
mov
icebp
into
or
lds
faddp
inc
jmp
fdivl
test
mov
add
icebp
fsubl
mov
xchg
xor
fistl
fnstcw
xor
in
in
push
mov
jo
cwtl
jns
cmpsl
lahf
mov
pop
mov
fistl
add
and
out
fwait
int
cmp
movsl
cwtl
mov
add
mov
ss
lahf
dec
pop
pop
pop
inc
jl
lock
enter
fs
pop
dec
cltd
xchg
imul
ljmp
jb
pop
jge
cs
sub
repnz
jmp
leave
mov
es
test
sbb
adc
aad
push
pop
and
sbb
pop
lods
shll
jb
dec
aaa
loop
jnp
jb
or
dec
xor
fcmovbe
movsb
jle
push
push
loop
jbe
int3
xchg
imulb
scas
in
cmc
sub
repnz
test
loop
adc
mov
arpl
xor
mov
cs
inc
lret
aam
dec
mov
mov
ds
int3
popf
leave
xchg
cli
cs
es
sub
cmp
addr16
lods
enter
sub
cmp
lret
aaa
sbb
or
cld
pop
int3
sub
push
loop
inc
pusha
fwait
aam
pusha
scas
out
mul
mov
ds
add
pop
jo
mov
out
inc
lret
pushf
mov
ja
pop
xchg
mov
aad
xor
mov
inc
out
stc
mov
xor
mov
mov
sub
sbb
mov
test
mov
bound
push
lret
jo
out
push
lcall
jl
lahf
mov
adc
pop
fimull
jns
pop
pusha
rcrb
xchg
leave
jl
imul
hlt
clc
inc
jb
popf
pop
pop
cltd
cmp
fcom
sahf
fwait
jae
fmul
cmpsl
xchg
pop
sbb
stos
add
xchg
in
test
call
mov
out
out
divb
aad
lods
xchg
push
xor
hlt
mov
mov
or
add
repnz
cmp
adc
cs
mov
mov
into
icebp
lods
xor
pushf
das
push
sub
mov
adc
std
push
inc
subb
enter
out
or
push
rclb
or
stos
outsb
pop
cmpl
adc
lock
add
adc
stos
pop
inc
data16
sbb
bound
or
incl
sbb
std
jns
and
jl
pop
mov
ficompl
xor
jne
and
push
sbb
inc
lea
sbb
pop
add
mov
mov
into
mov
inc
insl
and
sbb
adc
sub
js
jne
or
test
imul
lahf
or
mov
jg
or
aas
lcall
sbb
imul
inc
jns
adc
and
insl
sbb
fs
gs
mov
adcb
xchg
gs
adc
aas
mov
pop
std
movsl
inc
push
push
mov
mov
jbe
movsl
pop
push
test
jbe
cmpsl
cmpsb
dec
scas
push
adc
xorl
rorl
ljmp
addr16
jg
sti
dec
inc
push
aad
test
xchg
movsl
test
outsb
sbb
sub
into
ss
jno
pop
ret
mov
jb
pmuludq
add
add
xchg
pop
mov
pop
lcall
enter
inc
test
inc
shll
sub
jo
fdivs
repz
fs
jmp
cmp
cs
and
sbb
pushf
add
cli
push
cld
test
cli
test
mov
and
pop
out
mov
xchg
ja
fcomps
push
pushf
arpl
outsb
pop
push
jle
aam
stc
dec
das
mov
clc
inc
addr16
cmpsl
or
filds
insl
sub
psrlw
xor
and
add
add
pop
std
mov
dec
imull
xlat
jnp
sbb
inc
neg
adc
mov
aad
mov
sbb
popf
lds
nop
inc
ficoms
mov
pop
and
jnp
xor
push
clc
mov
bnd
je
jmp
sub
std
fs
lcall
add
add
push
sub
add
mov
mov
jno
dec
xor
jge
inc
mov
lods
push
inc
fcomp
movsl
scas
jmp
out
xchg
or
outsl
enter
cld
add
pop
out
pop
xchg
sbb
iret
fucomip
cmpsb
stos
lret
loopne
xor
jmp
or
jae
dec
mov
dec
movsb
lea
mov
or
inc
mov
jae
pop
and
fst
shrl
loope
jg
in
add
pop
cmp
aaa
fisubrl
std
test
push
stc
hlt
add
das
aam
xor
imul
lods
xor
cs
mov
adc
and
dec
cmpsb
adc
repnz
dec
jecxz
stos
add
mov
push
mov
pusha
out
push
xchg
jle
clc
lock
dec
fldt
or
cmp
pop
lock
stc
call
jg
dec
sbb
add
idivl
sbb
mov
outsb
subb
push
pop
ret
orl
mov
insb
cmp
or
xor
push
cld
sbb
aam
fwait
xor
push
fwait
dec
inc
je
outsb
cmp
adc
mov
aas
dec
add
jbe
dec
fyl2xp1
bound
ja
and
paddd
ret
scas
mov
in
mov
jmp
add
pop
bound
cmp
push
scas
leave
loop
pushf
flds
mov
aam
adc
sub
mov
pop
es
daa
adc
pop
ficoml
mov
push
sub
jb
dec
scas
loop
add
mov
mov
rorl
xlat
add
js
cwtl
stos
add
or
lret
mov
sub
mov
jle
jo
arpl
int
leave
mov
ficoml
pop
cmp
out
jae
dec
add
cmp
int3
adc
push
or
sub
xchg
sbb
jns
lret
sbb
mov
cwtl
out
mov
push
decl
cmp
adc
push
inc
pop
add
push
je
lahf
test
lods
lret
inc
rcll
getsec
lret
inc
inc
pop
push
add
and
out
nop
adc
add
add
or
or
outsb
cli
out
popf
popa
adc
mov
out
mov
aaa
jmp
repnz
dec
sub
loope
popa
addb
inc
inc
arpl
sub
xchg
or
push
outsb
push
xor
jns
test
test
mov
jno
sahf
popa
jp
aam
jmp
push
push
cmp
sbb
cmpl
sub
inc
std
cmp
stc
add
nop
mov
repnz
cmp
mov
jbe
mov
jne
loope
push
insb
adc
lcall
ret
push
sub
cmp
and
xchg
fsub
push
cmp
enter
mov
xor
test
movb
fistl
data16
pushf
adc
pop
sbb
or
and
mov
gs
pop
or
xor
xchg
pushf
add
shrl
sbb
jbe
test
sbbl
inc
rolb
inc
jne
xchg
xor
je
lea
fldcw
lods
cmpsl
lret
stc
xchg
iret
nop
icebp
pop
arpl
dec
mov
popa
leave
enter
or
fimuls
fs
sbb
arpl
fs
repnz
scas
adc
popa
lretw
or
insb
sub
pop
mov
aaa
push
gs
inc
scas
xorb
jo
jge
rcll
mov
dec
insb
sub
dec
inc
sarl
sbb
add
roll
xor
scas
cmpb
ficoms
idivl
sbb
sbb
jg
mov
gs
dec
pop
sbb
mov
cmpsb
int
mov
pop
mov
push
push
stos
xchg
sbb
mov
pop
stos
sub
cwtl
push
outsl
lods
pushf
push
int
bound
fwait
xor
cltd
rcrb
loopne
lods
nop
or
push
jmp
mov
testb
sbb
lret
fwait
push
jb
inc
aas
es
cmp
xor
xor
in
cs
adc
pushf
insl
bound
outsl
lea
sbb
push
dec
ffreep
mov
push
mov
rorl
dec
sbb
xchg
dec
lcall
sub
jo
xchg
and
imull
inc
cmpsl
mov
int
addr16
xor
mulb
push
jp
push
dec
out
jo
sbb
cmp
push
inc
dec
sbbb
aas
sub
dec
push
jnp
imul
xor
cli
xchg
push
xchg
mov
push
call
dec
sub
inc
and
cs
jg
inc
push
jmp
mov
cmc
test
movsb
inc
int3
pushf
or
mov
shlb
jnp
sub
movsl
fs
test
negl
sarl
ret
filds
andb
add
mov
jb
cmp
in
insb
cmp
cmp
loope
xchg
scas
dec
mov
and
lea
mov
sti
sub
mov
pop
repz
int3
jb
into
scas
adc
xchg
jb
jb
cmp
push
es
push
outsb
mov
fistl
loopne
out
fstps
call
push
or
imul
das
add
lret
orps
cwtl
rorl
xchg
pusha
jb
push
mov
outsw
ds
lcall
pop
shl
shll
enter
sbb
sbb
sbb
xchg
clc
or
stos
sbb
call
jecxz
sub
aad
adc
lcall
mov
in
in
inc
int3
push
xchg
jb
push
clc
scas
inc
fstps
xchg
imul
fiaddl
mov
pop
mov
xchg
mov
adc
lcall
fs
jge
dec
xchg
lret
or
jae
addr16
cmp
mov
mov
inc
es
jl
je
fidivl
adc
cmpsl
bound
ljmp
ljmp
inc
mov
cmp
lret
stos
repz
out
ret
mov
into
pop
add
sub
xchg
repz
mov
mov
and
dec
mov
and
ret
test
xchg
popl
dec
out
mov
sbb
je
jo
fdivrs
push
pop
lcall
arpl
in
rcll
dec
orb
pop
or
add
pop
cmc
cmp
adc
sub
or
pop
test
sbb
or
sbb
sbb
push
sub
push
stos
icebp
loopne
mov
lods
xchg
jne
push
xor
jmp
sbb
xor
sub
loope
popa
scas
jno
cmp
iret
outsb
pusha
jns
or
adc
mov
cmc
das
sub
mov
push
push
daa
cmp
sbb
inc
pop
xor
in
dec
call
out
jb
lcall
sbb
stc
push
adc
mov
mov
loop
movsb
jns
in
jle
and
fidivl
sub
fidivl
cwtl
xchg
adc
jmp
or
jo
dec
xchg
jge
jo
test
xchg
outsl
push
cmp
adc
pop
test
push
rcll
sub
push
enter
inc
rol
sbb
popf
mov
sub
mov
jge
jno
jno
sub
aam
mov
insb
sahf
and
andb
dec
pop
outsb
pop
lods
adc
test
or
sti
lret
stos
inc
mov
scas
push
jne
addb
lret
push
cmp
repz
test
loopne
or
pop
fs
cmp
jecxz
cmc
xor
push
or
jl
pop
inc
and
incl
push
push
ja
push
or
pop
pop
cwtl
sti
rorb
gs
sbb
js
je
imull
inc
cwtl
sbb
xor
adc
or
and
mov
add
xor
push
adcl
push
pop
ja
jbe
incl
mov
mov
push
popa
cld
xchg
mov
add
mov
mov
pushf
add
shrl
mov
daa
aaa
xchg
rol
sbb
test
mov
inc
testl
and
jl
pop
sbb
stos
push
iret
pop
incb
fwait
daa
ror
jmp
push
sbb
mov
pop
insb
jbe
xchg
lods
jmp
into
pop
rclb
mov
sahf
jecxz
dec
ret
or
and
fnsave
add
icebp
pop
movsb
movsl
and
mov
into
out
inc
cld
dec
inc
scas
cmp
or
cmpsb
xor
push
out
mov
jp
rorb
testb
sbb
and
lods
xchg
push
div
pop
sub
jp
test
push
pusha
cltd
test
in
clc
or
inc
pop
aam
sbb
outsb
hlt
add
and
movsb
pop
push
stos
aam
pop
jae
jmp
mov
inc
push
scas
lahf
ss
dec
jae
xchg
sbb
sbb
lcall
pop
loope
popf
mov
mov
push
pop
sub
stos
sbb
lods
insb
xchg
enter
lds
pop
orb
scas
mov
fcmovnu
sbb
sbb
sti
mov
jns
add
and
std
movsl
xchg
pop
sti
adc
add
or
mov
rclb
pop
in
mov
push
mov
ds
out
lcall
movsl
jecxz
cmp
nop
in
popf
inc
cmp
movsb
popaw
mov
adc
cmpsb
pop
sbb
test
jg
es
andl
icebp
imulb
ljmp
push
xor
xor
clc
adc
ffreep
fs
push
cs
jecxz
sbb
and
test
dec
ljmp
pop
sti
xchg
sub
aam
lods
loop
nop
ret
popf
sbb
inc
mov
dec
xorb
push
xorb
jmp
in
sbb
mov
rorl
mov
dec
mov
das
gs
add
cmp
ret
inc
dec
xor
pop
inc
repnz
jmp
clc
out
lock
pop
cwtl
iret
xchg
in
hlt
adc
repnz
nop
nop
adc
stos
les
ret
lahf
sahf
arpl
jmp
int3
pop
push
psrad
pusha
jp
xlat
push
cli
add
out
pop
mov
and
and
pop
fs
negl
adc
cmp
lods
lahf
sub
movsl
jp
loop
mov
pop
mov
cmp
imul
and
cmpsl
out
or
scas
xchg
jmp
test
xor
shrb
jbe
push
dec
in
dec
roll
pop
pop
sbb
xchg
push
out
jne
popf
jo
loope
inc
pop
sbb
das
fcmovnu
ss
sahf
arpl
inc
jg
lcall
arpl
pop
test
movsl
arpl
jle
xor
popl
rclb
pop
pop
stc
test
testb
int
inc
daa
aad
aas
cs
fwait
mov
xchg
cmp
and
jp
adc
test
xchg
push
lcall
fnstenv
ja
inc
mov
insb
pop
pop
dec
cmp
bswap
leave
ret
test
sbb
pop
int
test
dec
test
jmp
sbb
pop
cmp
sar
test
jge
sbb
mov
cmp
inc
jl
and
push
sub
out
dec
sub
inc
cli
pop
mov
shr
inc
mov
lods
ss
and
xor
les
or
nop
xchg
stos
call
sbb
or
jne
xor
sbb
sti
and
mov
push
insl
jg
and
xor
insl
adc
push
cmp
xchg
iret
arpl
loope
mov
mov
mov
jl
jne
jmp
adc
stc
fld
pop
stos
jle,pn
and
mov
ja
jl
fs
mov
out
sti
pop
xor
cmc
mov
sub
mov
inc
pushf
ds
pop
jbe
cltd
cs
imul
punpcklbw
push
push
inc
sub
push
pop
fstl
adc
rorb
dec
xchg
mov
sti
mov
xchg
psubw
lods
fisttpll
lods
js
or
push
lea
sub
js
scas
cmp
mov
mov
cmp
push
jl
xchg
sub
inc
xchg
push
push
into
out
cmp
sub
aaa
sbb
dec
push
cltd
subl
jge
jbe
jne
pop
xor
add
or
fisttps
cli
mov
rcr
cs
mov
cmp
jae
or
scas
pushf
jge
fdivrp
add
aam
lock
fwait
loopne
mov
rcrl
sbb
mov
int
xchg
and
push
push
push
mov
jbe
cmc
lcall
mov
pop
and
ja
sbb
mov
pop
xor
and
sub
jg
repz
mov
pushf
mov
sub
ja
or
stc
dec
sub
sbb
std
test
mov
push
test
cmp
dec
clc
sbb
cmpsl
jmp
add
and
out
clc
adc
inc
divl
pop
and
adc
add
mov
adc
jp
cmp
jnp
sahf
pop
dec
mov
add
mov
mov
inc
xchg
mov
enter
movq
es
test
dec
mov
rcrb
jb
in
push
rcl
loope
mov
loop
push
inc
jns
inc
shrl
out
cmp
sahf
sub
rcl
std
xchg
mov
cltd
jno
push
xor
std
addr16
scas
fisttpll
fwait
out
lcall
das
fidivs
loope
repnz
cwtl
jecxz
cltd
adc
mov
lahf
sbb
push
push
dec
push
jge
dec
jne
mov
mov
jo
data16
jne
xchg
sbb
jns
jp
out
pusha
fs
xchg
rcrb
into
mov
cmc
xchg
mov
testl
dec
push
stc
dec
fmuls
adc
mov
push
rcrl
test
xchg
mov
mov
insl
and
lods
out
cmp
jns
negb
xor
push
sahf
pop
xor
pop
xchg
mov
arpl
and
int3
popl
sub
mov
mov
mov
popa
jae
arpl
dec
or
out
jbe
cs
movl
mov
mov
cmp
out
mov
mov
js
adc
movsb
xchg
and
test
adc
sub
adc
cmp
outsb
rorb
scas
mov
dec
or
call
adcl
mull
inc
clc
pop
pop
repnz
outsl
mov
scas
mov
jo
lahf
lock
adc
push
adc
xor
push
mov
mov
mov
std
jne
sbbl
dec
sar
cmc
sbb
push
pushf
xchg
jae
sahf
mov
orb
and
mov
fisttpll
jae,pt
pop
dec
lds
ret
jg
lcall
adc
std
mov
andl
jne
dec
sub
repnz
xchg
insl
loope
push
sarl
repnz
sub
loopne
jmp
push
out
xlat
fcoml
adc
mov
mov
push
rclb
and
imul
add
pop
stos
jnp
mov
push
adc
push
fstpt
aad
xor
inc
rclb
fdivrs
adc
cli
rorl
push
mov
stos
ret
pop
movsb
cmpsl
incb
repz
sarl
jno
cmpsb
cmp
cmpb
and
movsb
sbb
and
adc
ljmp
pop
ljmp
jb
mov
lahf
adc
dec
dec
cwtl
lret
lock
fwait
nop
mov
mov
dec
add
xchg
push
mov
push
ds
xor
fisubrs
jg
jo
in
orl
mov
je
clc
dec
dec
and
or
xchg
and
in
int3
cmpsb
fnsave
test
prefetch
lret
sub
push
call
push
mov
xor
mov
pop
jno
stos
mov
mov
dec
or
rcll
jp
popf
xchg
rcll
cmp
xor
test
mov
jge
scas
dec
xchg
jecxz
cmp
and
sbb
rcll
hlt
push
cli
jg
scas
add
frstor
xchg
popa
jp
fdivrl
outsb
addr16
mov
hlt
adc
loop
call
stos
test
fnstsw
outsl
inc
dec
dec
out
cmp
and
mov
rep
scas
ljmp
enter
xchg
adcb
rorb
mov
fwait
jo
push
call
xchg
stos
dec
xchg
pop
xchg
test
cmpsl
cmp
jecxz
dec
pop
lock
adc
repnz
fs
sub
or
fmull
ret
jb
push
xchg
repz
sahf
mov
repnz
push
or
jb
fwait
pusha
pop
cmp
jbe
fwait
inc
loope
das
xchg
addb
insl
and
adc
pop
out
lock
rolb
inc
or
pop
dec
push
rclb
shrl
ret
adc
mov
daa
std
loop
sbb
adc
es
daa
dec
es
push
lret
pop
lret
fcomip
cmc
sbb
xor
and
enter
das
int3
or
mov
cli
lock
lds
sbb
mov
sub
push
idivl
loope
out
pusha
out
mov
pop
inc
add
and
adc
mov
cltd
push
subb
push
mov
adc
sub
in
push
imul
std
sub
push
pop
testb
ss
mov
jmp
orl
or
in
xchg
arpl
jge
cltd
in
push
inc
inc
push
bound
scas
cmpsb
cmp
adc
and
add
ficompl
pop
leave
rcrl
out
xchg
or
inc
xchg
movsl
and
js
mov
pusha
xchg
sbb
out
and
or
pop
add
and
in
leave
loopne
inc
and
iret
loopne
inc
cmp
dec
push
test
shrl
fld1
push
xchg
mov
pushf
push
test
sub
or
pop
jp
mov
mov
or
dec
aad
add
adc
mov
sbb
mov
push
mov
sbb
lret
mov
pop
insl
sahf
and
jns
and
shll
xchg
sub
pop
cmp
mov
push
cmp
aaa
xchg
or
outsl
fsubr
xor
and
sahf
push
dec
xor
loope
dec
lcall
sub
imul
xchg
mov
xor
call
mov
add
test
push
add
ljmp
movl
or
andb
mov
cmpsl
test
dec
mov
lods
rorl
push
insl
jne
addb
stos
mov
cmp
xchg
outsb
push
jne
nop
jbe
adc
xor
ret
push
and
adc
push
pop
enter
sub
pusha
dec
mov
xchg
pop
fcomps
daa
orl
data16
and
addr16
insl
sbb
xor
push
adc
loope
push
adc
int
fnstenv
ror
push
xchg
pop
push
in
pop
push
jno
xor
fnsave
sub
stos
imul
cmp
nop
shrb
std
or
cs
mov
sub
addr16
sub
jle
enter
mov
sbb
popf
xor
imul
fsts
lcall
push
sbb
shl
int
add
outsl
out
cmp
aam
jmp
mov
jecxz
into
xor
jmp
stos
fdivs
xor
out
xor
mov
int3
push
inc
jnp
lods
xchg
sahf
pusha
jne
cltd
cmp
ja
psubusw
rol
sub
inc
sub
bnd
xchg
call
pushf
mov
or
loope
bound
cmp
mov
shlb
inc
ret
mov
pop
popa
jns
andb
dec
movsb
sub
jge
dec
jmp
loop
mov
mov
jmp
and
add
push
push
in
mov
dec
jnp
nop
into
or
sbb
hlt
push
jnp
jb
lret
sub
mov
adc
ss
or
ja
aaa
insl
mov
mov
jp
jo
inc
xchg
sbb
shl
roll
add
imul
orl
mov
stos
mov
jmp
aam
cs
add
rol
mov
in
fwait
mov
mov
ljmp
mov
in
ljmp
pop
movsb
and
pop
xchg
xor
or
enter
add
mov
xor
mov
jl
jmp
mov
int
pop
sahf
insb
mov
mov
sbb
fadds
push
push
cmc
addr16
mov
out
ljmp
sbb
inc
dec
and
lock
lods
popf
cli
jo
sub
subb
push
dec
push
or
xchg
jne
jp
pop
negb
add
push
mov
imull
xchg
ret
insb
jnp
sahf
stc
or
sbb
mov
shrl
push
pop
cwtl
jp
les
jne
xor
call
imul
scas
pop
out
dec
sub
mov
inc
in
icebp
push
cmpsb
sahf
or
pop
aad
loop
sbb
cmp
sti
hlt
dec
es
lds
sahf
test
cmp
add
xchg
xchg
lcall
or
lock
xor
mov
inc
pop
out
xor
outsl
xor
repnz
aam
add
and
lret
mov
negb
sbb
pop
aad
jns
xchg
mov
adc
cmp
test
aad
sub
dec
fcmovnbe
lcall
and
mov
mov
add
mov
testl
mov
frstor
dec
mov
pop
movsl
push
fmuls
add
clc
outsl
inc
cmp
push
xchg
cmpsl
mov
fildll
or
mov
popa
mov
jo
insb
xchg
cltd
adc
pop
ret
sbb
mov
cmp
mov
pop
lods
fisubrl
stos
or
hlt
leave
rolb
sbb
mov
xor
sub
sbb
dec
into
mov
repnz
cmp
inc
stos
cmpsl
insb
and
mov
xchg
enter
dec
hlt
js
ret
mov
fcmovnbe
mov
pusha
ds
mov
mov
sahf
rorb
inc
bound
faddp
hlt
sub
mov
mov
sbb
mov
dec
fnstsw
insb
jae
addr16
pop
mov
push
leave
adc
pop
adc
jo
xchg
mov
ljmp
fisubrl
lock
xchg
cld
add
pop
or
mov
or
scas
push
aaa
negb
sub
in
dec
sub
in
incb
jle
addr16
mov
mov
dec
lret
stc
xchg
sub
jecxz
adc
mov
pop
jno
repz
outsl
pop
cmp
inc
gs
pop
mov
les
stos
fildll
shll
mov
xlat
mov
std
or
xlat
aas
cmp
jns
movsb
sub
in
insl
add
dec
add
lock
xor
fldt
ja
lret
repnz
mov
inc
in
aas
and
jae
add
mov
das
das
and
int3
push
jae
or
sahf
shrb
lcall
daa
jecxz
and
xchg
fmulp
xor
xor
lret
pop
adc
lcall
fistpll
aad
iret
push
test
leave
or
xchg
jl
push
fisttpl
and
cltd
ja
cmpsb
test
ljmp
dec
jp
imul
lahf
cmpsb
inc
int3
jl
xor
sbb
cmp
sbb
or
mov
mov
movsb
or
mov
cmp
shrl
dec
pusha
dec
xchg
arpl
xchg
or
add
flds
loopne
mov
mov
xorps
add
pop
icebp
lock
mov
in
sbb
and
lock
mov
cmc
lret
repnz
dec
jecxz
mov
leave
stos
dec
movsl
add
ljmp
aaa
hlt
inc
imul
inc
mov
ja
push
sub
out
or
imul
push
push
inc
ja
pop
sub
jo
fisubrl
mov
push
or
sub
mov
cwtl
inc
mov
cmpsb
jmp
popa
xor
jmp
in
or
insb
jne
adc
sub
jne
sub
mov
jmp
orl
add
les
shrl
cwtl
pop
pop
into
add
out
outsb
divl
mov
pop
adc
adc
es
js
sbb
xor
mov
in
aas
addl
lds
pop
sbb
stc
fiaddl
out
jmp
lods
adc
loope
and
pop
mov
or
rorb
divl
adc
out
test
xlat
push
cwtl
aaa
inc
movsl
pop
mov
add
xorb
stos
cld
movsb
mov
push
xor
mov
and
flds
or
fcoms
sti
clc
into
inc
mov
cmp
aaa
cmc
cmc
inc
inc
push
and
and
sbb
daa
daa
mov
sbb
out
in
imul
mov
add
sarb
clc
dec
pop
jecxz
add
mov
sbb
fcmove
mov
cmc
and
cltd
ss
shl
push
jb
sbb
and
xor
ss
jecxz
adc
mov
jmp
repnz
push
loopne
cmpsl
add
or
gs
sub
lahf
dec
cltd
cmpsb
jns
daa
pop
test
es
add
sbb
add
push
insb
mov
xor
mov
sbb
pop
push
imul
cmp
pushf
mulb
cmp
and
in
pop
enter
sub
inc
repnz
mov
cmp
cwtl
adc
sbb
ret
xchg
jno
test
enter
sub
dec
loopne
sub
dec
repz
push
out
or
int
loopne
sub
mov
in
mov
inc
push
ljmp
pop
and
rcr
les
pop
hlt
test
sub
les
pop
push
mov
stos
adc
pop
loop
sahf
sbb
mov
mov
iret
xor
and
push
into
je
push
ljmp
or
subl
sarb
dec
mov
les
jns
idivl
dec
mov
in
aas
inc
pop
fs
sbb
mov
mov
jp
insb
push
sbb
mov
lea
cltd
icebp
inc
add
xchg
loopne
sbb
int
mov
and
in
or
pop
jp
inc
outsl
sub
add
test
jne
lret
jmp
or
push
loopne
es
jnp
mov
dec
push
imul
out
add
sbb
adc
popa
push
pop
aad
cmp
inc
rcr
movsl
ficompl
icebp
aas
jge
insb
jbe
push
or
ret
lods
mov
nop
ja
push
mov
pop
jns
arpl
cmp
pop
out
xchg
fsubr
or
cmp
loop
sub
and
into
mov
cmp
xchg
in
mov
push
sub
mov
jle
es
int3
std
inc
pop
faddl
inc
insb
aam
stos
and
data16
pop
lret
push
fdivrl
fwait
push
inc
cmp
push
xlat
dec
out
jb
adc
je
ret
repz
data16
mov
rcl
lret
dec
adc
cmpsl
dec
orl
mov
add
popa
jo
pop
adc
push
idivb
or
lret
sbb
pop
outsl
push
adcl
mov
push
jg
aaa
adc
xchg
and
iret
push
inc
out
mov
scas
mov
lea
push
or
mov
out
mov
mov
mov
mov
movsl
out
pop
add
add
cld
repnz
fisubl
jne
int3
xchg
outsb
aad
aam
cli
mov
lcall
insb
fidivs
mov
mov
stc
pop
stc
pop
shrb
rcrl
loope
inc
jae
adc
lods
sub
sbb
xchg
push
lods
nop
arpl
push
hlt
gs
out
stos
lret
sahf
stc
scas
push
mov
pop
jne
ficoms
mov
leave
jnp
push
push
and
lcall
add
cmp
fs
ljmp
mov
mov
mov
cltd
push
mov
in
imul
ds
daa
cmp
movsl
inc
push
ret
stc
cmp
jecxz
in
sbb
inc
outsl
movsl
dec
sub
xchg
divb
fwait
push
xor
push
into
sbb
xor
cli
dec
push
test
pushf
sahf
js
in
fistpl
aaa
inc
test
cmc
repz
enter
inc
mov
inc
stos
lret
nop
xor
jo
pop
arpl
mov
fwait
enter
jl
rcrl
adc
mov
mov
outsb
or
cmp
mov
call
cmp
test
pop
mov
xchg
icebp
dec
iret
sub
add
xchg
loop
sub
ljmp
orb
orb
cmp
jns
stos
rorl
mov
sub
aaa
or
xor
jle
lret
cwtl
xchg
gs
cmp
add
pop
dec
inc
xchg
and
sub
adcb
and
xlat
stos
stos
out
xorb
pusha
negb
xchg
les
xor
jb
or
jecxz
fcomps
repnz
aas
sbb
xchg
add
fs
fsubrs
push
popf
push
add
lcall
jbe
out
idivl
xchg
xchg
mov
add
aaa
xlat
dec
ss
xchg
pusha
cli
cmpb
or
cli
insl
lock
or
dec
cmpsb
mov
xchg
mov
xor
int
je
cmp
pop
sub
je
pop
xchg
in
das
sahf
imull
das
fxtract
fidivl
xor
inc
jns
sub
sbb
xchg
jmp
inc
push
aas
inc
and
pop
fs
loope
addb
notl
xchg
lock
dec
ficomps
leave
adc
xchg
xchg
fsub
stos
push
pop
mov
mov
movsl
dec
pop
sub
jno
or
cli
iret
and
fnstcw
shll
mov
or
stos
ja
in
sub
jmpw
mov
jge
insb
inc
lock
xlat
js
jl
or
ljmp
pop
sti
xchg
inc
mov
sub
push
mov
inc
xchg
hlt
in
jp
pop
mov
and
mov
dec
insb
rorl
mov
jecxz
movsl
adc
leave
data16
fnstcw
popf
test
orb
addr16
or
jae
jmp
repnz
add
pop
scas
pop
popf
popl
fimull
out
test
fwait
dec
push
sbbl
mov
and
adc
je
xchg
cmp
pop
fnstsw
into
movsl
cld
jmp
sub
sbb
sbb
mov
inc
xchg
sub
aas
mov
adc
das
inc
dec
test
push
loopne
pop
push
les
jne
fdivs
jne
lea
scas
fcomps
cld
lock
inc
push
cmpsb
cld
lods
mov
or
mov
jmp
insb
pop
mov
ja
adc
push
add
mov
dec
mov
jne
hlt
ljmp
addr16
fdivrl
pop
leave
mov
dec
scas
shll
ja
push
pop
push
adc
or
mov
iret
cld
xchg
mov
out
mov
adc
sbb
pop
sbb
add
dec
push
mov
imul
test
sti
cmp
or
bound
add
lcall
adc
pop
xlat
icebp
test
dec
sti
sbb
inc
loop
inc
sbb
es
inc
loop
cmp
mov
int
and
leave
or
std
adc
fstl
and
pop
aad
inc
aaa
push
repz
jne
test
das
cmp
cmp
mov
ss
sahf
push
hlt
loope
jo
fidivs
xchg
jl
xchg
and
inc
cli
sub
inc
dec
jge
jo
bound
in
xchg
ss
mov
mov
and
mov
test
es
adc
sub
out
out
xor
push
cmp
orl
dec
enter
push
mov
mov
mov
xchg
push
xor
push
mov
sbb
pop
or
popf
fimuls
xor
push
scas
loope
fsubrl
lcall
repnz
js
scas
mov
mov
push
or
inc
sbb
push
pusha
pusha
pop
insb
xchg
xor
push
stos
xor
mulb
xor
mov
negb
cwtl
push
stos
or
adc
push
pushf
add
cmc
add
mov
mov
into
lea
adc
push
out
test
sbb
pop
and
repnz
xor
dec
cmp
iret
jo
jmp
in
and
pop
and
cwtl
cmp
pop
inc
mov
adc
test
rolb
or
sbb
inc
test
fs
testl
cmp
xchg
mov
cmp
and
push
fs
sub
repz
nop
fnstenv
repz
fiaddl
clc
jg
xchg
inc
mov
jle
xchg
or
divl
clc
mov
ljmp
dec
xchg
shlb
icebp
cmpsl
aas
ret
leave
jae
lret
sbb
in
and
roll
cmp
jle
insb
outsl
mov
jge
subl
sbb
js
bound
xchg
repnz
add
push
popf
stos
inc
call
jbe
pusha
add
pop
mov
dec
ret
ja
cmp
cmp
jg
add
inc
movsb
out
outsl
mov
movl
mov
xchg
mov
sub
sbb
sub
icebp
pop
cld
xor
push
dec
mov
cli
insb
xlat
mov
aaa
xor
mov
adc
push
stos
adc
lds
push
arpl
movsb
dec
sbb
outsl
sub
repz
mov
fidivl
xchg
or
scas
fidivs
xchg
jns
mov
cld
xlat
sub
dec
pop
aam
adc
jnp
push
add
add
dec
mov
scas
cmp
mull
outsl
call
add
orb
dec
lret
xchg
out
push
sbb
std
stc
test
movsl
loop
das
push
cmp
push
push
cmp
into
pop
or
add
nop
out
cmp
push
jbe
sub
fstp
pop
loop
xchg
out
mov
cwtl
shll
adc
fwait
xchg
daa
popf
dec
adc
adc
sbb
stos
sub
pop
xlat
in
notl
test
aas
adc
add
movsb
shrb
shlb
push
and
aad
mov
sbb
fdivrs
fmuls
inc
aaa
fists
aaa
sub
loop
cmpsl
setge
pop
adc
aas
add
in
and
sub
hlt
repz
into
insb
or
out
xor
in
hlt
xchg
xlat
lcall
jg
aam
or
jbe
shrl
push
gs
js
ss
bound
pmuludq
int
sbb
cmp
enter
adc
mov
lods
xchg
les
loope
int
push
stos
lock
xchg
into
ds
adc
inc
cmpsl
inc
shl
and
xchg
inc
pop
sbb
shlb
aam
mov
mov
mov
stos
dec
xchg
movsb
leave
or
ficoml
iret
or
jbe
sub
repz
mov
sbb
insb
xchg
xor
es
cs
insb
ja
icebp
mov
xchg
and
jl
sub
fucomp
stos
add
inc
outsb
jmp
push
jmp
adc
ficompl
in
es
pop
fsubrs
rcr
ret
outsb
lcall
cmp
cmp
ret
andb
cmp
mov
and
or
hlt
and
pop
push
cltd
rclb
leave
test
pop
pop
aad
push
in
outsl
xor
lcall
jmp
inc
xchg
push
mull
out
sbb
and
cs
xchg
jns
sbb
and
je
rorl
dec
pop
xor
jecxz
inc
push
xor
pop
sub
in
mov
ficoml
jle
pushf
arpl
jae
imul
and
push
adc
push
fstpl
push
sbb
jmp
xchg
popa
jge
dec
ljmp
aaa
inc
pop
and
mov
int
movsb
sbb
lcall
inc
jmp
and
lcall
nop
fmuls
sub
aam
loope
mov
popa
cmpsb
in
pop
loop
int
add
mov
mov
ret
jne
inc
dec
and
adcl
sbb
inc
sub
adcl
imulb
sub
out
rcrb
push
add
mov
jl
into
ljmp
repz
add
mov
bnd
adc
mov
cs
cwtl
push
xchg
add
xchg
int3
sbb
dec
js
scas
stc
lods
or
jle
mov
pop
push
sub
xchg
hlt
push
gs
or
test
pshufw
imul
scas
pop
sbb
shll
dec
pop
push
dec
jo
insb
stos
pop
test
or
aam
addl
pop
mov
xchg
and
adc
hlt
push
fwait
dec
loop
xchg
in
pop
out
mov
mov
and
addr16
dec
inc
rorb
andl
outsb
adc
pop
xor
and
xchg
fsts
pop
cmp
mov
adc
and
out
cmp
cmp
ljmp
mov
cld
xlat
ljmp
cmc
inc
and
in
xadd
add
xchg
push
mov
or
mov
std
in
in
push
dec
xchg
dec
xchg
or
shr
cmp
xor
into
or
xchg
fwait
dec
pop
fwait
mov
jbe
ss
mov
mov
cs
inc
fstps
insl
cli
xchg
out
xchg
add
cli
jle
dec
in
xor
fisubl
fwait
outsb
jle
sub
loop
cmp
sub
sub
shrl
insl
xchg
xchg
clc
sbb
gs
popa
cmp
movsl
cwtl
jns
hlt
lds
cld
andb
in
movsl
fsubrl
inc
dec
cmpl
pop
movsb
push
cmp
outsb
adc
push
jnp
mov
mov
adc
scas
outsb
pop
dec
and
xlat
enter
mov
sbb
mov
addr16
jle
pop
pop
xor
mov
jns
dec
pop
lret
xchg
scas
mov
loope
cld
xchg
lods
adc
jecxz
inc
sub
cmpsl
out
jmp
sti
lods
mov
mov
jb
mov
fistps
and
test
mov
test
jns
jae
xchg
xor
test
sub
push
fstpt
push
mov
xchg
std
lds
add
aaa
mov
sti
mov
and
mov
aas
mov
inc
lods
inc
sub
test
sbb
pushf
and
addr16
cmc
repz
xor
sub
mov
arpl
add
push
sub
cli
cs
push
in
fdivl
testb
jnp
hlt
test
shrb
adcb
addr16
and
mov
test
enter
stos
cmp
dec
loopne
stc
jg
or
add
mov
outsl
imul
xor
add
dec
loop
popa
pop
aad
and
shll
sbb
test
outsl
cmp
clc
lahf
push
aaa
mov
out
xor
in
aam
mov
insb
shrl
add
mov
pop
lahf
adc
cmpsb
pop
add
push
lds
mov
sub
scas
jae
pop
stc
xchg
mov
inc
add
or
mov
sti
mov
cmp
dec
dec
outsl
push
fdiv
xchg
sbb
push
jne
pop
inc
insb
shl
es
xchg
mov
cmp
cmp
mov
xor
cmp
outsb
and
cwtl
mov
imul
xor
ret
sub
gs
sub
cmp
js
push
in
or
pop
mov
sbbb
and
mov
sub
hlt
insl
js
outsl
adc
popa
xchg
daa
mov
mov
push
imul
cmp
sub
pusha
sbb
fwait
std
dec
stc
sbb
xchg
mov
les
lahf
and
mov
jmp
push
sahf
pop
insb
jae
xchg
cmp
lds
das
js
in
and
arpl
rclb
inc
out
in
enter
jge
adc
imul
dec
cltd
pop
arpl
inc
or
stos
fisttpll
out
or
jnp
adc
repnz
int3
aaa
out
gs
rol
xor
jbe
cmc
jnp
add
pop
push
mov
adc
icebp
push
and
fucomp
pushf
int3
mov
popf
dec
lock
adc
xchg
pop
jmp
mov
rdtsc
add
imul
stos
sub
adc
daa
add
xlat
or
sbb
jae
ret
insl
mov
int
jecxz
lcall
fwait
out
adc
push
cld
xchg
jns
xor
clc
cli
mov
pushf
outsl
mov
pop
in
xor
sub
pop
jo
adc
pushf
notb
cmpsl
xor
pop
push
sub
loopne
cmp
add
or
mov
jg
add
inc
and
fs
rcr
adc
dec
pop
mov
xor
xchg
pop
and
lret
xchg
jg
insl
jmp
dec
insb
arpl
mov
nop
adc
mov
lods
xchg
sahf
sbb
test
jle
pop
rcrl
jg
xchg
imul
jmp
iret
xchg
or
jnp
add
inc
sbb
test
pop
and
mov
aaa
xchg
jb
cld
fdivrl
mov
sub
push
lock
cld
xchg
mov
icebp
sahf
dec
add
mov
mov
jns
pop
pop
ja
cltd
std
inc
cmpsb
fiaddl
and
lods
icebp
ds
fistpl
mov
dec
shrb
ss
cmp
push
imul
mov
idivl
jp
mov
cmp
cltd
out
and
mov
adc
lahf
adc
dec
into
lock
iret
and
rolb
mov
and
mov
add
std
cmp
idivb
and
xor
xor
bound
pop
lcall
out
sub
stos
movsb
test
sahf
jmp
test
rcrb
stos
sbb
sub
clc
xchg
jae
leave
push
scas
push
push
jmp
lahf
out
fwait
inc
push
sbb
mull
scas
cmpsl
push
add
subl
shrb
or
inc
xchg
js
movl
dec
shlb
out
xor
inc
sub
loopne
and
sbb
dec
sbb
outsl
and
andl
fcmovb
icebp
pop
push
jne
cmp
add
int
or
stc
mov
movsl
jbe
cmpb
sub
pop
addl
and
xchg
inc
jle
push
pusha
add
js
push
sbb
xchg
js
cmp
dec
das
mov
xchg
dec
pop
dec
lods
roll
mov
adc
and
push
out
xchg
dec
addr16
pop
clc
and
stc
xor
push
and
xchg
cmp
or
iretw
insb
sar
mov
clc
pop
pop
pusha
sbb
lcall
mov
fisubrl
mov
adc
dec
clc
adc
add
out
xchg
out
in
pop
xchg
arpl
bound
cmc
fistps
movsb
push
or
loopne
cmp
xchg
dec
add
ss
and
pop
sti
mov
dec
jecxz
cmpb
xor
out
loope
sbb
cmp
gs
cmpsb
xchg
jo
xor
divl
or
and
test
push
repnz
sbb
cmp
ss
sbb
aaa
out
inc
inc
xor
mov
mov
aas
or
scas
and
and
cmpb
mov
mov
pop
jae
mov
xchg
mov
mov
sbb
bound
repz
xchg
cs
inc
jnp
jmp
jae
push
add
push
mov
sti
add
shld
cmp
or
pop
push
sub
jle
or
mov
in
rcr
pop
into
shrl
mov
sbb
out
icebp
add
out
mov
fnsave
jo
add
lea
push
or
in
xchg
stos
aam
lret
data16
cwtl
sbb
adc
mov
xchg
lahf
mov
xchg
ret
loope
mov
fnstsw
shr
mov
and
out
cli
gs
lcall
movsl
inc
lcall
faddl
xchg
jge
sub
andb
int3
loop
mov
cmp
shlb
cmp
push
pop
xor
dec
lea
into
jb
rorl
shll
imulb
mov
repz
add
push
popf
ret
lock
push
pop
fs
lock
cmp
or
lret
jne
jle
popa
adc
xchg
daa
jne
mov
movsb
xchg
shlb
repz
jmp
gs
mov
sahf
dec
xor
or
es
mov
les
sub
mov
leave
call
popa
mov
std
divb
outsl
mov
out
add
test
or
push
mov
mov
scas
sbb
push
mov
sub
scas
jl
pop
dec
mov
mulb
dec
popa
icebp
push
xchg
pop
mov
jle
and
pop
cvtps2pd
leave
or
mov
popf
fcompl
call
push
pop
push
test
sub
out
and
out
test
pop
mov
push
sahf
das
shlb
lods
jmp
adcb
pop
mov
shlb
loop
addl
inc
push
aad
jl
and
sbb
daa
clc
mov
int3
or
aam
cmp
xchg
loopne
ja
dec
inc
lods
pop
xchg
bound
push
test
jg
xor
scas
push
jne
sbb
mov
cltd
sbb
ret
imul
test
mov
repnz
sbb
xor
enter
push
outsl
sub
xorl
pop
push
jmp
pop
inc
test
or
inc
or
repz
cmp
test
mov
insl
adc
or
mov
pusha
fstl
iret
adc
sub
and
out
scas
mov
jo
dec
sbb
add
out
gs
push
jp
push
shlb
xor
xchg
int3
es
adc
cld
sbb
cmp
cmp
hlt
nop
inc
cld
mov
push
roll
ja
rcl
out
idivb
pop
shrb
pop
loope
pop
cwtl
shlb
xor
sub
xchg
dec
aad
js
repnz
add
cmp
pop
adc
ret
dec
aad
scas
lods
test
lret
out
push
lret
jcxz
std
loope
sbb
les
pusha
or
xor
sub
mov
pop
or
mov
cmpsl
lret
pop
pop
popf
call
add
push
pop
push
lahf
enter
cli
sub
fistl
stos
es
loope
in
mov
jo
dec
mov
fimuls
add
xor
sbb
push
pop
sub
rclb
inc
mov
bound
mov
lods
lock
into
mov
dec
cwtl
inc
out
pop
adc
push
cmp
cmp
repnz
sbb
lods
fsubp
jno
aam
mov
lock
test
dec
cmp
pop
test
fisttps
cmpsl
fmuls
push
les
or
cli
mov
push
add
ss
mulb
push
mov
or
ret
push
incl
inc
and
lret
lahf
sub
push
test
xchg
shll
or
and
and
adc
scas
stos
pop
push
adc
mov
sub
pop
mul
mov
aam
adcb
mov
fcomps
fldl2t
inc
es
mov
movsl
out
or
mov
and
xchg
and
mov
imul
lds
jmp
jl
ret
sahf
testl
and
shlb
xor
inc
hlt
adc
loopne
shlb
fwait
jmp
and
test
inc
sbb
mov
in
fwait
lods
in
jecxz
lods
daa
stc
mov
mov
popf
call
adc
pop
push
cmpsl
mov
mov
cmpb
repnz
add
test
dec
pop
xchg
mov
popa
in
xchg
inc
cltd
rol
sbb
inc
mov
hlt
stos
in
lret
cmpsb
mov
mov
movsl
sbbb
cmp
mov
in
sub
mov
xchg
push
or
mov
sub
sbb
shrl
jl
cmpsb
aaa
push
fwait
cmp
movsl
out
inc
xchg
sbb
mull
clc
repz
push
mov
pop
dec
jne
fdivs
pusha
jne
popa
jle
and
inc
sub
ficoml
stos
sub
mov
test
sub
inc
cmpsb
loope
inc
leave
ja
in
fnstcw
and
inc
mov
leave
cmp
cmp
cmc
ret
sub
daa
push
dec
rclb
fstpt
imul
sbb
mov
iret
adc
inc
xor
mov
daa
sub
insl
sbb
dec
addr16
lods
nop
scas
mov
mov
xchg
pop
fcoms
mov
movsb
adc
daa
xor
incl
dec
mov
mov
jns
mov
mov
sbb
cmp
push
les
jbe
push
mov
inc
dec
dec
scas
imull
pop
add
push
jmp
fdivl
cwtl
imul
push
lock
aad
fistpll
cwtl
ret
into
mov
xor
and
fmuls
outsl
xor
inc
mov
int3
divb
lcall
xchg
mov
scas
pushf
aam
mov
inc
push
lds
int3
mov
mov
adc
test
std
push
call
cmp
xchg
cltd
js
imul
rorb
fstl
in
jmp
xchg
arpl
imul
movsl
gs
js
push
dec
cmp
in
jnp
cltd
jge
adc
mov
xchg
ret
xrelease
jmp
sbb
sub
push
jg
xor
mov
and
cld
xor
mov
pop
out
and
daa
cmpsb
inc
jge
inc
lods
bound
xor
mov
addr16
cmp
movsb
mov
insb
xchg
jb
mov
dec
ss
mov
pop
mov
xchg
mov
pop
mov
xchg
cltd
cmp
adc
sbb
mov
repz
dec
add
ljmp
push
jne
stos
xlat
jg
stc
rol
fadds
or
aam
aam
loopne
push
mov
add
enter
add
mov
aas
pusha
inc
mov
sbbb
jecxz
push
adcb
and
cmp
and
mov
add
mov
cmp
incl
add
lret
push
pushf
sbb
adc
xchg
mov
lcall
shll
pop
icebp
jne
js
in
sub
inc
fcoml
int
mov
movsl
enter
dec
cmpb
lret
jb
ja
push
aam
jmp
and
test
push
jle
dec
int3
fmuls
lds
mov
cmpb
pop
popf
stc
push
sbb
inc
mov
add
lret
loop
add
mov
mov
mov
inc
repz
outsb
mov
cli
in
jnp
add
xchg
push
cmpsb
int
daa
cmp
gs
mov
cmp
sbb
mov
mov
pop
xchg
lds
inc
mov
mov
mov
add
outsl
inc
cltd
outsl
adc
adc
xchg
mov
imul
jle
inc
mov
cmp
outsl
or
inc
rcr
xchg
sbb
icebp
js
fisttpl
sahf
loopne
xor
sbb
insl
aad
push
test
nop
mov
pop
cli
gs
pushf
dec
cmp
sbb
lret
add
jmp
jno
mov
xchg
ljmp
inc
cmpsl
jge
push
out
aaa
sbb
ret
test
icebp
push
lret
std
sub
xchg
nop
jae
adc
mov
xchg
enter
xchg
ljmp
insl
daa
lds
inc
inc
cmp
sub
or
inc
lcall
inc
adc
dec
sub
dec
add
adc
mov
outsl
or
dec
scas
add
outsl
out
rcrb
and
data16
outsl
mov
test
sbb
adc
cmp
or
xor
or
add
in
icebp
xchg
dec
inc
insl
mov
push
lock
icebp
fidivs
mov
jno
loopne
jne
rolb
pop
enter
pop
inc
aaa
imul
cmp
cwtl
and
push
enter
jp
or
int
mov
adc
lahf
jno
lret
jbe
mov
popf
aad
xchg
cmp
push
dec
and
mov
iret
sbb
xor
aas
repz
adc
fwait
and
aam
pop
add
dec
push
mov
out
mov
fdivrl
cmp
in
popl
push
cmp
mov
push
or
jnp
xorb
jg
dec
push
adcb
pop
mov
stos
rorl
or
inc
add
inc
mov
or
imul
push
mov
xchg
imul
arpl
into
add
out
call
dec
imul
std
mov
sub
dec
jnp
andl
subb
das
sub
cmc
lea
repz
movsb
inc
xor
iret
mov
rcr
out
addr16
inc
xchg
pusha
pop
and
and
inc
and
outsb
or
dec
call
in
and
loope
ljmp
lret
xor
jne
into
pop
nop
mov
pusha
pop
sub
fmulp
adc
daa
notb
mov
in
lahf
cmp
mov
xor
call
pop
out
push
lods
jns
negl
dec
push
xchg
and
mov
xchg
cwtl
imul
shlb
or
dec
xor
push
in
imul
push
xor
inc
decl
es
xor
lock
fimuls
dec
sbb
push
into
and
sbb
daa
cmc
stos
add
leave
repz
lock
lea
sbbl
lcall
jb
fildll
arpl
daa
mov
inc
sub
cmp
int
push
add
mov
ljmp
pusha
push
popa
xor
loopne
jp
or
and
jbe
mov
mov
xor
push
xchg
xor
jbe
cmp
fcomps
addr16
rorb
out
jp
addr16
add
pop
cli
and
leave
inc
fisttps
lea
repnz
pop
leave
xor
test
lea
adc
mov
daa
cmp
insb
lea
iret
jp
test
iret
lret
xchg
jl
movsl
mov
pop
cmp
xchg
lret
cmc
cmpsb
test
jl
insb
mov
sbb
lea
pop
pop
imul
adc
jp
lock
mov
pushf
xchg
mov
or
icebp
adc
mov
mov
lock
insl
pop
pop
or
stos
fistpll
mov
sub
push
pop
sub
xor
pop
add
insb
jnp
cmpsb
movsl
inc
andb
cmp
out
or
in
inc
xlat
mov
jmp
push
push
jae
xchg
daa
movsb
notb
insl
cmp
bound
push
dec
jmp
nop
dec
cwtl
add
xchg
test
adc
icebp
call
xor
xchg
inc
inc
fucomip
dec
test
cltd
adc
push
in
fsub
repz
repnz
xchg
lret
arpl
inc
jmp
outsb
mov
cmpsl
clc
out
cmp
xor
or
mov
test
and
jg
cwtl
mov
scas
jl
push
or
mov
mov
or
sub
jo
xlat
in
mov
loop
pop
mov
cmp
cmp
aaa
push
js
push
in
xchg
out
shl
or
mov
dec
mov
jle
xlat
movsb
ss
std
cld
movsl
fs
dec
ret
xchg
mov
dec
inc
jns
xlat
aaa
int
fdivrs
inc
sub
inc
jo
data16
icebp
push
nop
adc
xchg
inc
jnp
ret
hlt
lea
pop
leave
lcall
add
mov
lcall
std
divb
cmpsl
adc
push
add
fisubrs
cmp
dec
xor
fistps
test
and
mov
sub
cmp
or
rcrl
js
push
repz
inc
ds
push
pop
ret
nop
and
in
addr16
cs
push
and
loopne
push
pop
add
shrb
cmp
mov
sbb
adc
call
lret
flds
xchg
jecxz
loop
push
jg
mov
inc
mov
mov
iret
aad
adc
jmp
jg
movsl
stos
int3
dec
or
fistps
pop
leave
lcall
je
js
xchg
xchg
add
push
lods
xor
in
inc
dec
leave
dec
js
jns
ja
push
sub
push
and
movsl
cmp
mov
imul
lcall
xlat
lea
and
mov
xchg
or
fdivrp
add
subb
pusha
or
aam
das
call
adc
repnz
mov
and
mov
inc
cs
mov
dec
xchg
jo
aas
repnz
scas
xchg
lock
aad
lds
ds
repnz
fidivl
mov
rcll
sbb
clc
pop
lea
addr16
testl
int3
xor
mov
xor
jl
and
fnstcw
inc
xor
xchg
loopne
xor
mov
movsl
dec
insb
xchg
jmp
push
fildl
std
mov
pop
jbe
ret
inc
pop
pop
cltd
mov
mov
hlt
push
aam
sbb
dec
outsb
or
loope
mov
push
adcl
pop
pop
loope
shlb
shlb
push
pop
in
out
insb
mov
jle
jle
mov
mov
in
into
pop
adc
push
mov
lock
imul
push
add
adc
xchg
cs
stc
cmp
xor
fildll
dec
cli
dec
sub
adc
xchg
dec
je
push
push
lea
sbb
pop
fidivl
inc
outsb
add
testb
push
jnp
test
xchg
pop
out
cmovnp
adc
test
pop
into
mov
fildl
inc
add
stc
pusha
out
mov
fisubs
call
adc
fs
insl
cltd
mov
arpl
mov
aam
jae
insb
dec
pushf
sahf
sub
adc
leave
adc
enter
ja
pop
push
inc
repnz
clc
fcmovbe
addb
adc
sar
inc
jae
push
pop
stos
inc
cmp
stos
mov
sub
lods
adc
jmp
das
mov
divl
stos
jns
xchg
cmp
shll
popa
push
ss
and
arpl
adc
add
cmpsb
loop
and
adc
shll
lret
cld
pop
pop
pop
add
out
cmp
push
cmpsb
fs
in
mov
leave
sbb
sbb
in
aaa
mov
push
dec
shll
xchg
notb
stc
sbb
aaa
adc
dec
repz
stos
dec
xchg
sbb
cmp
int3
jmp
or
fisubl
xor
pop
xchg
and
add
mov
inc
shr
xchg
into
or
hlt
insl
inc
add
in
hlt
popa
pop
adc
aad
nop
cwtl
sub
add
cmp
lea
sahf
xor
aam
xchg
mov
xor
xchg
pop
mov
scas
push
data16
xchg
dec
xchg
fstpl
jns
shrb
out
cmpsb
adc
sub
fmulp
inc
mov
inc
ds
mov
fidivrs
ffreep
in
sarb
fcmovu
mov
mov
pop
outsb
popf
push
jo
push
imul
or
and
and
daa
pop
bound
mov
push
mov
popa
movsb
sub
jo
pop
mov
mov
and
adc
mov
mov
xor
adc
sbb
cltd
ficomps
push
push
mov
pop
fwait
lock
fdivs
stos
pop
xor
mov
xchg
adc
xchg
outsl
inc
xor
into
incl
fildl
push
cmp
add
xchg
add
pop
movsb
pop
sub
loopne
jbe
lock
je
daa
dec
push
fwait
call
xor
ljmp
pusha
sti
pop
push
je
mov
lret
mov
sub
out
jne
add
mov
push
les
scas
sti
cmp
ret
mov
call
lret
movsl
adc
pop
into
das
sti
int
and
lea
popa
mov
sub
fs
inc
inc
xchg
cli
jb
xchg
stc
xor
clc
xchg
shlb
pop
aaa
loop
sti
pop
xor
mov
cwtl
addl
lea
pop
jmp
sub
out
pop
pusha
sbb
pusha
xor
fwait
es
inc
xchg
stc
mov
fmul
ret
cmp
or
cmc
jmp
stos
imul
out
xchg
adc
fimull
push
jb
mov
imul
fisttps
jp
dec
loop
inc
pop
xchg
fwait
scas
fwait
xor
pop
movsl
ret
fldenv
cmpsb
mov
mov
xor
xor
push
jp
jmp
dec
xchg
fmull
dec
out
es
das
scas
cwtl
sub
iret
mov
in
enter
mov
push
test
sub
test
mov
jge
or
lds
mov
adc
fcomps
sbb
shlb
dec
int
mov
mov
out
inc
push
pusha
mov
js
sub
inc
dec
lea
in
cli
push
pop
shlb
mov
or
addr16
adc
push
mov
inc
imul
sbb
sbbb
xor
ds
cmpsl
xchg
mov
scas
cmp
fistpl
push
dec
js
push
push
call
cs
mov
jecxz
lret
cmp
es
sbb
lcall
out
ss
jecxz
mov
pop
loopne
push
lea
insb
mov
xchg
mov
mov
pop
and
adc
or
out
mov
and
movsb
sbb
outsb
loopne
add
jl
lea
lods
cmp
cltd
cmp
jb
inc
lret
add
pusha
es
pop
fmuls
pop
test
mov
lcall
fwait
mov
or
sub
iret
sub
xchg
sub
dec
scas
mov
jno
sbb
push
sub
pop
je
mov
mov
mov
mov
sub
pop
mov
adc
jmp
outsb
add
lret
out
cmp
push
stos
mov
sbb
dec
testl
push
add
mov
stos
int3
sbb
in
xchg
sbb
test
cltd
dec
cmp
sbb
mov
dec
jne
pop
lea
lods
push
fists
iret
sub
fiadds
dec
ss
pushf
jo
or
fdiv
xor
inc
es
sbbl
pop
mov
mov
mov
cmp
jnp
test
jmp
es
mov
xchg
inc
imul
stos
data16
mov
lcall
pop
out
sub
inc
push
lcall
dec
lock
mov
sarb
mov
in
outsb
stos
pop
std
pop
push
jg
or
xor
or
inc
in
idivl
test
pop
dec
inc
pushf
shrb
in
adc
xor
xchg
fmull
pop
aaa
xchg
cmp
xchg
mov
loop
mov
aaa
int3
push
xor
pop
pop
fpatan
push
cmp
mov
mov
cmc
in
inc
in
add
xor
inc
mulb
mov
dec
xchg
ljmp
addr16
hlt
adc
ja
sub
add
int3
adcl
subl
std
adc
jle
subl
pop
inc
push
test
xor
push
sub
lea
movsb
xor
xchg
mov
test
js
dec
mov
fstpl
aad
ficompl
in
pushf
or
cmc
neg
mov
iret
ret
int3
cltd
cld
lret
mov
jno
sbb
fadds
daa
or
mov
jns
xor
pop
xchg
and
adc
insb
ret
into
je
lahf
int
ss
push
push
push
push
ja
mov
xor
mov
xor
fs
cmpsb
daa
fsubp
or
add
aaa
insl
enter
cli
sbb
mov
mov
dec
cmp
outsb
push
aas
pop
arpl
or
mov
test
ljmp
xor
xor
movsl
push
out
cmp
aas
hlt
in
bound
xor
mov
mov
pop
cmpsb
mov
test
mov
adc
lret
add
int3
out
js
ljmp
add
movlps
xor
insl
fildl
dec
push
mov
mov
cmp
sbb
mov
leave
cmp
push
jl
mov
test
iret
and
jbe
test
jecxz
in
sbb
hlt
lret
shrb
roll
jnp
dec
dec
stos
rep
push
nop
aaa
push
xlat
cmpl
pmaxub
ja
in
filds
stos
in
adc
addb
enter
imul
ljmp
shrb
adc
push
iret
and
cmc
jl
insb
or
mov
sub
stc
xor
lea
loope
push
fiadds
xchg
mov
jmp
out
dec
xchg
mov
cmp
sahf
xchg
in
nop
rorb
in
repnz
and
testb
sbb
mov
jbe
sub
scas
int
mov
sub
jmp
push
lcall
popf
jecxz
out
cmpsb
mov
push
jnp
arpl
adc
mov
popa
sub
dec
orl
or
jnp
je
in
test
inc
in
sub
dec
pop
insl
sti
fidivrs
out
mull
pop
push
and
sub
repz
mov
mov
stos
inc
mov
mov
xchg
les
es
push
mov
push
and
push
cmp
jb
xchg
mov
xor
xor
inc
arpl
cmp
pop
lods
mov
fiadds
sbb
push
mov
mov
cld
mov
or
mov
dec
cmp
cmp
push
addr16
mov
sub
jl
xchg
fldl
test
cli
fwait
mov
xchg
inc
push
test
and
subl
insb
push
dec
arpl
or
push
adc
adc
pushf
sbb
or
or
frstor
jge
mov
and
movsb
sbb
pop
jae
lret
or
adc
pushf
jmp
sbb
pop
dec
inc
cmp
adc
bound
xchg
push
fbstp
sbb
inc
sub
add
dec
mov
cld
push
shrl
pushf
scas
add
xchg
dec
addr16
jns
add
fsub
dec
inc
inc
mov
and
pop
insl
gs
pop
or
xchg
lahf
push
add
xchg
adc
out
pusha
cmp
mull
cli
xchg
sbb
jnp
jp
outsl
or
push
pop
lods
xchg
cmc
fsubl
out
sub
cmp
dec
scas
fwait
push
jns
ret
xchg
in
mov
jle
cltd
movsl
std
int3
cmpsl
inc
call
cmp
cmp
and
mov
cvtpi2ps
neg
mov
sub
sbb
loop
inc
ret
rcl
pop
gs
sub
jl
push
push
mov
adc
sbb
filds
fiadds
ljmp
aad
and
sahf
call
sbb
aad
sbb
or
std
and
push
add
mov
mov
sbb
subl
adc
hlt
lods
jmp
push
or
jl
ds
jbe
mov
js
outsb
add
jmp
outsb
je
loopne
cmp
mov
sbb
test
idivl
sbb
in
lock
push
shrb
iret
lahf
enter
lea
pushf
sahf
push
mov
loope
sbb
fists
cmp
in
jg
repnz
and
cmp
jns
test
out
sub
sbb
sub
out
jb
xchg
aas
lods
and
dec
xor
out
mov
daa
shll
repnz
mov
xor
pusha
outsb
fcompl
xchg
mov
cmp
cli
outsl
mov
cmpsb
mov
pop
jp
mov
inc
out
ljmp
js
mov
repnz
iret
pop
cmp
jecxz
mov
aam
es
inc
pop
xchg
das
mov
pusha
ret
pop
or
enter
cmp
bound
jbe
add
outsb
mov
push
dec
fldl
pop
loopne
setp
add
frndint
mov
stos
das
cmp
cli
cmpl
pop
adc
imulb
adc
adc
inc
ror
xor
fimuls
call
shll
lea
outsb
mov
dec
jge
pop
cltd
jno
test
and
dec
lods
les
fs
fs
call
and
xor
test
sbb
loope
ret
bound
imul
cmc
lds
mov
cs
rclb
enter
jb
mov
into
or
adc
jge
cmpsl
aaa
xchg
xchg
test
mov
popf
insl
cmpsb
nop
int
lds
data16
inc
out
inc
clc
in
mov
jl
jbe
dec
sbb
cmpsb
xchg
imulb
imul
gs
sub
loop
adc
add
rorl
mov
add
cwtl
sub
imul
test
call
popl
adc
push
mov
leave
lret
sbb
add
stos
jmp
mov
subl
inc
add
and
cmpsl
orl
inc
fisubs
or
out
and
fistl
mov
xchg
pop
sub
push
inc
insb
ds
out
xor
cmp
dec
pushf
rolb
cmp
call
out
xchg
adc
add
mov
rcll
in
aad
fwait
data16
pop
push
push
sbb
in
pop
fprem1
fmull
in
jae
or
push
jns
adc
inc
adc
and
std
in
movl
or
push
ljmp
movsl
cmpsb
add
adc
inc
xchg
dec
les
jbe
pop
daa
cli
dec
mov
call
jb
cmpsb
mov
dec
xchg
xchg
mov
outsl
pop
fcmovnb
jmp
adc
hlt
jb
xchg
fadds
movsb
dec
dec
hlt
cld
pop
mov
adc
mov
fdivl
push
shlb
ds
jg
fisttpll
adc
mov
jno
inc
xor
mov
xchg
or
ds
jo
mov
dec
sbb
les
gs
lods
mov
or
mov
ds
push
mov
outsb
cli
cmp
push
xsha256
cmpsb
push
ljmp
scas
pop
es
popa
dec
and
push
popa
repz
rcrb
adc
cmp
loope
mov
insl
rcrl
aam
popa
sbb
insl
testb
dec
jmp
insb
enter
es
mov
adc
sub
imul
mov
pop
push
xchg
inc
pusha
cli
leave
inc
ja
sahf
loopne
daa
aad
divl
or
lret
mov
xchg
data16
sahf
mov
push
adc
pop
xchg
mov
lea
shll
mov
pop
xchg
add
cmp
adcb
pop
call
sub
inc
or
out
xchg
add
mov
out
hlt
jecxz
pop
pop
test
in
fst
sub
ret
cwtl
mov
stos
sti
pop
out
pop
mov
scas
inc
insb
pop
repz
lea
mov
std
push
cmpsb
rcrl
insb
mov
icebp
push
mov
push
mov
mov
mov
jnp
and
movsl
icebp
xor
mov
mov
mov
and
cli
iret
ss
dec
add
pop
cmpl
fcmovne
mov
shrb
fwait
dec
xor
push
lods
cmpsb
mov
xorb
out
nop
jae
lods
sub
or
bswap
cmp
lods
movsb
push
jno
shrl
cli
fsubrs
mov
and
sbb
and
lock
push
jg
and
push
xchg
sbb
fdivr
insb
mov
push
leave
jle
mov
push
mov
stos
fsts
test
xchg
das
mov
outsl
cmc
inc
and
mov
leave
into
repnz
or
inc
sbb
leave
add
out
je
push
int3
sbb
jnp
mov
mov
orb
mov
mov
sbb
mov
jecxz
sub
mov
mov
push
jbe
push
leave
scas
popa
rolb
scas
push
push
mov
xor
test
or
jmp
mov
outsb
nop
push
sub
ficomps
out
sti
xor
aad
clc
out
lods
shr
and
mov
aaa
orb
xlat
push
jp
adc
push
popa
push
mov
dec
dec
incl
add
iret
ret
sarl
lret
jmp
adc
cmp
in
xor
pushl
or
and
or
out
dec
jb
fwait
iret
mov
scas
sti
add
arpl
pop
mov
sbb
pushf
vmulss
pushf
pop
das
cmp
pop
pop
bound
mov
mov
fmuls
mov
arpl
loope
jno
cmpsb
push
rcll
sub
imul
jne
mov
loopne
jmp
lcall
aas
cmp
hlt
cld
sbb
leave
sbb
pop
sbb
fst
adc
stos
jb
scas
lret
add
pop
lahf
cmpsl
and
pushf
lock
cmc
test
stos
shlb
repz
adc
pusha
push
push
out
call
jle
jae
add
dec
and
dec
pop
pushf
inc
sub
fnsave
lods
lahf
pop
fnstsw
xlat
movsl
lds
outsb
bnd
ja
icebp
jo
out
lcall
inc
mov
sub
xchg
lcall
jl
jecxz
fimuls
inc
sarb
jmp
sub
lcall
mov
xchg
std
test
dec
dec
iret
pop
jns
lcall
cld
pop
jle
jae
shrb
jns
test
or
xchg
fst
mov
popf
and
mov
leave
flds
inc
popf
adc
rcrb
fs
out
incl
sbb
cmp
add
adc
repnz
jmp
jp
test
and
ret
or
mov
mov
jb
decl
cmc
cli
fs
push
les
mov
add
insl
out
sarb
xchg
pop
inc
pop
les
loop
adcl
sahf
pusha
sahf
jbe
jle
push
call
cmp
cwtl
add
xor
dec
pusha
lea
ljmp
xor
xchg
jge
in
cld
sub
push
inc
movsl
fstl
filds
pop
cmp
adc
outsb
sub
jns
push
mov
loop
sbb
pusha
mov
ss
push
out
inc
movsb
jp
in
sbb
rcl
sar
and
xchg
cmp
icebp
lods
xor
xchg
add
or
bound
ret
mov
fiaddl
sbb
dec
lock
pop
pusha
rcll
xor
mov
cmpsb
pop
and
inc
mov
sub
ja
pop
inc
aas
sahf
xorb
fwait
mov
add
jnp
lret
dec
push
jecxz
lods
ret
jbe
enter
and
fimuls
std
push
pop
fldl
sub
push
lea
or
subb
stos
stc
test
popf
pusha
insb
jne
inc
mov
sub
lret
jo
push
add
lret
mov
cli
outsl
jno
mov
push
es
xchg
clc
xlat
cs
mov
pop
xor
pop
cwtl
insl
je
sbb
and
mov
in
cli
data16
cld
std
or
aas
imul
and
jae
mov
dec
lods
js
and
in
into
pop
mov
xchg
and
iret
xor
negl
pop
dec
hlt
xor
inc
lret
mov
sti
cmp
les
mov
xchg
loop
clc
sub
mov
jne
dec
pop
dec
mov
ret
scas
cmp
push
inc
mov
or
popa
jl
aam
orl
pop
aaa
mov
ret
sub
lret
mov
mov
mov
cmpsb
mov
dec
dec
movb
in
lea
fstps
in
pop
clc
xchg
les
popf
jo
mov
inc
lcall
insl
je
les
sub
fiaddl
scas
in
xchg
addl
popf
cltd
add
fcmovu
xlat
add
out
xlat
jg
pop
mov
dec
dec
movsl
daa
shll
push
jmp
inc
and
mov
inc
mov
inc
sbb
jecxz
and
cli
inc
aaa
sbb
test
inc
insl
mov
add
and
and
into
xchg
mov
movsl
scas
jnp
adc
rcr
rorl
pop
jo
popa
xchg
clc
scas
pop
es
cwtl
hlt
lods
addr16
pop
fwait
enter
inc
aaa
das
nop
lods
stos
xchg
test
mov
jns
sbb
fildl
popa
adc
ficoms
mov
adc
pop
or
ljmp
lock
add
jbe
push
test
jno
jns
fistpl
inc
cmp
cmc
aad
jecxz
dec
dec
mov
mov
lods
add
popl
outsb
mov
inc
pushf
push
push
loope
dec
lahf
xor
sub
mov
xchg
shrl
sub
sub
inc
push
in
orb
xchg
xchg
mov
sub
pushf
dec
sbb
inc
in
push
cld
rclb
notb
ret
repz
push
mov
pop
inc
inc
push
cmp
enter
cltd
popa
inc
les
cmpb
mov
decb
arpl
jp
or
cmp
push
ss
jp
sub
into
lea
push
lcall
sub
fadds
cltd
rcrb
inc
adc
sbb
test
adc
xor
ljmp
and
jo
popf
push
movsl
lret
stos
jae
xchg
lock
adc
sub
and
repnz
popf
test
push
xor
repnz
daa
xlat
mov
dec
stos
xor
mov
mov
cmp
jg
mov
xor
rclb
inc
mov
pop
and
push
into
pop
xchg
mov
cmova
pop
in
enter
mov
adc
adc
push
jp
xor
inc
fcomi
jmp
adc
push
fisubs
pop
inc
scas
sub
cli
dec
pop
test
sub
imul
pop
and
jg
sarl
fst
enter
lret
stos
pop
js
test
in
jne
xorb
ds
aas
sbb
lock
inc
jecxz
pop
pop
fcomip
int
scas
fwait
out
or
fisttps
inc
add
xchg
xchg
stos
push
push
leave
sarb
jae
ljmp
mov
mull
je
xchg
add
dec
sbb
xchg
cli
push
pop
pop
sub
xor
test
lods
and
scas
jge
gs
lock
adc
ljmp
sar
data16
mov
pusha
mov
leave
loop
in
sub
mov
push
mov
ja
sbb
aam
aaa
mov
sub
sbb
lret
xchg
cmp
sbb
out
mov
arpl
push
or
dec
inc
les
std
or
int
push
mov
testb
rcrb
add
mov
notl
ljmp
mov
scas
adc
mov
pop
je
xor
pop
mov
stos
sbb
int3
iret
push
pushf
data16
cwtl
lret
sbb
lsl
test
mov
xchg
dec
js
jo
mov
sub
or
adc
sahf
subb
rcrb
cmp
stc
mov
scas
sbb
iret
cli
mov
push
nop
adc
aaa
outsl
insl
movsb
mov
repnz
mov
and
ljmp
js
push
imul
fs
test
ljmp
xchg
dec
dec
pop
add
scas
mov
imul
sbb
gs
cli
loopne
or
adc
notb
and
test
test
cmp
mov
jmp
or
mov
xor
test
in
nop
fsubl
mov
sub
lret
loop
push
aaa
inc
mov
dec
cmpl
mov
pop
jno
xchg
mov
mov
adc
lds
xchg
dec
inc
sti
pop
fiaddl
cwtl
sbb
popa
popa
movsb
xor
je
push
sti
push
xchg
mov
cmpl
bnd
subb
dec
ja
mov
int3
inc
lret
xor
std
cmp
rcll
das
lods
or
push
adc
cltd
je
ss
xchg
inc
test
pop
xchg
fadd
pushf
cmp
fs
pop
mov
incl
and
pushf
cs
lock
out
dec
cld
cmpsl
fimull
fcomip
jo
and
sarb
or
mov
mov
jno
movsb
jne,pt
sub
enter
or
imul
xchg
jnp
fwait
mov
mov
pop
jne
inc
ja
jge
insl
frstor
cmp
into
scas
jns
lods
and
mov
scas
dec
adc
pop
int
shlb
sarb
and
cwtl
cwtl
and
fistl
hlt
mov
test
fidivs
insb
cmp
xchg
lea
movsb
pusha
js
in
paddusb
pushf
cmp
es
xlat
pop
or
pop
mov
int
cmc
pushf
test
arpl
xor
xchg
mov
mov
or
out
xchg
das
inc
push
and
adc
xor
cmpl
dec
jecxz
outsl
inc
xor
addr16
push
sbbb
sbb
or
js
jg
jle
loope
mov
movsb
inc
mov
sbb
push
xchg
sbb
jns
notl
adc
sub
jp
in
lock
sub
shrl
cmp
std
repnz
mov
in
jge
add
jo
inc
pop
mov
sti
pop
adcl
jno
pop
or
fadds
xchg
dec
mov
clc
dec
fists
jge
pop
push
std
ss
mov
mov
jnp
data16
or
push
fucomip
popf
test
add
ds
das
popl
mov
fcomps
sub
sbb
imul
xchg
mov
fstl
add
aaa
xor
ljmp
hlt
dec
sub
in
fstpl
stos
jecxz
mov
adc
jl
pop
shll
cmc
out
in
sbb
aad
outsb
xlat
out
push
jnp
cmp
subl
sub
add
inc
push
dec
bnd
or
idivb
fldl2e
mov
cmpsb
cmp
inc
and
int3
dec
sbb
fnsave
inc
arpl
sub
and
into
in
xor
push
sbb
outsb
cs
add
scas
int3
inc
jge
scas
aaa
inc
pop
ss
xchg
lcall
jb
sub
jne
xchg
outsl
add
ret
dec
js
cli
push
sbb
aam
popf
icebp
popa
add
cltd
pop
lret
int
int3
or
and
call
pop
push
dec
call
xchg
dec
xchg
mov
adc
jno
aam
jge
jo
and
fdivl
cmpsb
lret
fwait
into
xorl
add
fisubl
shlb
mov
dec
xchg
out
test
mov
mov
sahf
cwtl
cmp
push
mov
mov
cld
repz
and
aad
inc
pop
xchg
roll
inc
sahf
jno
ficoml
pop
xor
mov
scas
fstpl
jb
setbe
jbe
or
sbb
subl
call
xchg
push
xlat
jnp
cmpsl
iret
jl
and
mov
popf
int
mov
push
loop
outsb
test
jecxz
cmp
jg
jae
jns
jbe
setnp
stos
hlt
xchg
jns
sbb
bound
inc
mov
mov
dec
lret
sti
mov
mov
add
iret
lret
adc
test
sbb
pusha
std
mov
xor
cmc
ret
mov
aad
mov
lahf
mov
popa
mov
sahf
xor
dec
pop
add
lahf
andb
mov
pop
inc
mov
mov
negb
ret
out
arpl
pop
aad
pop
inc
dec
scas
or
filds
iret
xchg
test
sbb
fsts
rcrb
push
mov
sub
and
stc
sarl
jg
gs
xor
inc
ror
pop
lret
aas
sbb
in
cmc
jae
ljmp
aam
lcall
fstps
mov
add
xchg
adc
cli
sub
sub
jb
jnp
adcb
xchg
add
or
adc
and
imul
pushf
cmp
test
cmp
or
mov
scas
std
cmp
movsb
cli
xorb
sti
fiaddl
adc
hlt
fdivl
mov
inc
scas
xlat
enter
cmp
into
cs
or
or
inc
ljmp
sub
or
mov
imul
mov
iret
dec
adc
out
adc
jns
cld
sbb
mov
adc
inc
mov
xor
out
icebp
insl
cmc
cli
arpl
pop
lods
shlb
ds
dec
pop
adc
repnz
jb
xchg
arpl
inc
lock
movsb
shl
mov
push
sub
test
inc
mov
jg
fstpt
push
stc
xor
pop
add
popf
mov
xchg
loop
mov
leave
not
mov
jmp
lds
push
sbb
adc
imulb
in
sahf
dec
mov
insb
insl
pop
mov
stos
sar
pop
gs
scas
and
rorl
test
or
sbb
leave
or
adc
aas
push
jmp
test
xchg
jne
or
pop
or
mov
hlt
xchg
in
mov
pop
adc
sarl
jae
jno
cmp
mov
cmc
xor
sarl
add
xchg
pop
xor
aam
js
adc
movsb
sub
jmp
test
pop
mov
pop
pop
and
pop
ret
xchg
jg
jl
in
jnp
push
gs
shrb
xor
aas
scas
mov
and
xchg
inc
push
cmp
cmc
nop
aam
sbb
insl
and
mov
or
cmp
aam
mov
adc
js
popf
push
aam
incl
sbb
bound
mov
aam
lcall
xchg
dec
mov
jg
mov
nop
mov
lea
popa
push
in
adc
leave
mov
addr16
jb
adc
es
aad
push
mov
stos
fimull
adc
pop
scas
pop
or
or
and
orl
inc
sub
xor
and
rolb
adc
negl
mov
insb
std
aas
adc
dec
xchg
jge
xchg
sbb
xchg
loope
inc
pop
xor
je
mov
test
fimuls
or
mov
in
sbb
sub
jae
or
add
sbb
jge
jno
mov
ds
pop
and
shll
add
xor
sbb
dec
stos
mov
out
and
repz
dec
inc
imul
aaa
dec
xor
test
cs
imul
lea
sbb
xchg
ds
lock
mov
sub
jmp
or
push
cwtl
ja
cmc
xchg
ficomps
cmpsl
jmp
adc
mov
xor
mov
and
inc
outsl
push
sub
mov
aad
adc
lret
mov
clc
push
pop
push
loopne
stos
mov
pop
cltd
ret
inc
mov
mov
and
inc
jg
loopne
clc
mov
js
jne
rorl
fidivrl
inc
rclb
fnsave
test
fwait
xor
cmp
scas
lahf
inc
pop
or
leave
or
push
out
mov
ret
jmp
xchg
shll
sti
mov
pop
fcompl
int3
jge
mov
pop
cld
lods
push
jnp
or
push
add
imul
in
enter
xor
mov
ss
test
pop
push
cmc
bound
cwtl
test
sub
push
xor
sbb
sbb
cmp
dec
in
in
bnd
in
mov
mov
xchg
dec
sarl
mov
mov
popa
add
stos
pop
sbb
pop
ss
mov
mov
mov
dec
lcall
sbb
cmpsl
cmpsl
fcmovnb
jg
daa
mov
stos
push
pop
mov
jp
fcmovu
nop
push
clc
push
mov
push
int
mov
pop
jbe
or
xchg
je
outsb
mov
xor
pop
push
inc
push
dec
xor
inc
loop
pop
inc
pop
test
sahf
and
jne
push
cmp
pop
push
jbe
jg
test
incb
in
inc
movsl
das
decb
jo
mov
addr16
jb
add
lcall
sbb
test
mov
gs
in
push
rolb
inc
shlb
mov
sub
mov
fistl
xor
mov
shrb
adc
or
inc
dec
ret
push
nopl
lahf
jns
or
insb
call
sar
rol
dec
xchg
lock
cmp
push
inc
incb
std
mov
aaa
icebp
loopne
push
shr
xchg
sbb
test
lea
push
hlt
jp
inc
cmp
jns
sbb
jno
outsb
cmp
popa
in
roll
out
push
sub
xchg
xor
sub
in
lahf
pusha
mov
inc
cmp
es
sub
inc
mov
imul
xchg
add
shl
mov
sbb
lods
rcrl
push
jecxz
call
mov
mov
cmp
into
ret
sub
xor
xchg
sbb
pop
xchg
jmp
cmpsb
ret
shrb
cmc
mov
dec
adc
rorl
sub
cmp
jecxz
push
popa
fdivl
mov
and
ss
dec
sbb
ficoml
jb
mov
jle
enter
mov
movsb
mov
fidivs
fidivrs
sub
adc
sub
pusha
popa
fwait
insb
add
xchg
cmp
sti
sub
clc
scas
sub
push
mov
fdivp
jmp
xchg
cmp
push
dec
xor
aad
push
jg
mov
dec
sub
pop
int3
bswap
xchg
lret
jge
xor
pushf
mov
test
mov
add
sub
out
jge
and
arpl
and
cmpb
adc
xchg
rcrl
mov
mov
out
out
fisttps
push
xor
push
mov
pop
imul
addb
out
xor
rcll
subl
sbb
lret
sub
es
std
lret
and
ljmp
xchg
das
or
sbb
xchg
jne
in
out
xchg
xor
lock
mov
adc
std
int3
pop
in
sub
fists
push
or
bound
pop
imul
inc
xor
add
or
std
pusha
aas
mov
sbb
inc
or
xchg
les
in
sbb
movsl
scas
repnz
jo
out
hlt
push
sarl
push
movsl
xchg
int3
push
cli
jg
mov
cmp
out
fildll
xor
push
pop
fsubr
ret
mov
pop
pop
jecxz
dec
cli
xchg
push
adc
jo
mov
mov
jns
push
lret
cmp
sub
cmp
mov
ja
cmpsb
sub
ljmp
xlat
in
push
sbb
or
or
push
or
gs
stc
sub
movsl
js
pop
sbb
popf
clc
xor
pop
ljmp
cmp
arpl
adc
lds
or
sub
ds
xchg
imul
data16
xchg
out
add
mov
and
xchg
rcr
sbb
dec
shlb
cmp
jl
jp
pop
imul
inc
arpl
push
sbb
fadd
roll
sbb
pop
jae
mov
sbb
sub
fstpt
adc
call
mov
adc
pop
jg
push
pusha
add
stos
xor
lds
mov
stc
cltd
outsl
cmpsl
and
in
jle
xor
mov
fmull
lret
mov
imul
imul
call
add
or
out
push
hlt
inc
leave
pop
lds
mov
into
mov
adc
dec
pop
pop
xchg
insb
adc
dec
aaa
insb
js
adc
sub
clc
int
add
hlt
in
or
mov
rorl
or
ss
int
pop
mov
xor
mov
ljmp
mov
lcall
fmulp
mov
popa
fwait
mov
jl
and
repz
in
mov
mov
es
push
xor
jne
dec
pop
pop
mov
pushf
stc
aaa
mov
cld
adc
cmp
es
or
loope
jl
adc
in
sub
or
or
ret
sub
shll
sub
inc
cmp
xlat
pushf
lds
mov
sub
lret
sub
ss
fwait
add
jge
js
test
mov
push
jno
in
sbb
jo
pop
subl
and
mov
inc
mov
xlat
sbb
sbb
pop
int3
dec
mov
or
cmc
mov
mov
xorb
test
sar
jmp
enter
mov
rolb
insb
iret
jge
shll
mov
add
dec
inc
cmp
add
xchg
cmp
pop
dec
or
sarb
inc
sbb
dec
xorl
jns
xchg
cmp
sub
mov
jne
test
or
cwtl
add
pop
mov
mov
jl
xchg
rorl
dec
nop
and
jb
add
cli
lock
xchg
sub
in
jne
aam
mov
loope
jno
rorl
xchg
mov
mov
fisubrl
outsl
and
xlat
xchg
xor
bound
adc
push
push
je
and
jl
sub
fsubs
addr16
inc
push
sub
or
pop
cmpsb
adc
mov
mov
int
stos
push
dec
xchg
or
mov
out
xor
ljmp
and
outsl
leave
xor
icebp
jne
add
shl
rclb
in
sahf
arpl
stos
inc
in
addl
or
xchg
mov
imul
and
inc
mov
insb
lahf
cmpsb
push
andl
int3
imul
jae
or
fadd
dec
popf
jbe
or
and
shll
adc
or
jg
mov
clc
enter
dec
and
mov
aad
mov
sub
lea
inc
fcoml
out
mov
cmp
adcl
aam
mov
fildll
sub
inc
pop
cwtl
adc
fnstsw
sub
das
sub
pop
mov
cli
out
jne
adc
adc
or
and
jnp
xchg
movsb
push
lret
enter
clc
out
push
jl
xchg
dec
je
mov
jle
sub
pushf
dec
mov
jns
arpl
out
das
and
dec
sbb
pop
dec
cwtl
sbb
xor
data16
aas
xchg
out
dec
add
or
jb
call
pop
push
add
mov
daa
lods
xor
inc
mov
sub
or
loop
inc
pushf
fwait
imul
and
negl
pop
out
sarb
mull
sbb
lahf
xor
adc
jle
rolb
pop
mov
popa
pop
in
xor
push
mov
mov
inc
lahf
fadd
clc
mov
xchg
in
mov
push
test
push
jno
enter
xchg
sub
mov
jne
inc
sub
test
iret
mov
xchg
sti
xor
mov
xor
and
mov
mov
jnp
mov
lods
dec
ljmp
loopne
mov
cmp
stc
add
sbb
imul
mov
lahf
adc
ss
bound
xchg
fstpl
xchg
out
ljmp
jne
xor
or
mov
je
fwait
fs
xchg
jecxz
xor
or
idiv
shrl
gs
pop
iret
xchg
pop
iret
jp
mov
mov
adc
or
test
std
fisubs
cwtl
repz
int
mov
scas
in
enter
hlt
fadd
add
popa
sub
xchg
lds
jb
adc
in
ja
mov
data16
xchg
add
inc
pop
add
cmp
imul
pop
addb
add
xorl
repz
inc
mov
iret
notl
lcall
xor
sbbb
inc
stos
dec
push
sbb
or
movsb
in
inc
xchg
call
cvtpi2ps
fwait
rcrb
in
mov
outsb
jae
aad
or
dec
pop
xor
enter
adc
jae
out
sti
lea
xor
xor
daa
xchg
jno
add
sbb
and
sbb
adc
aas
and
loop
add
mov
in
jns
or
dec
sub
xor
mov
mov
std
cmp
pop
mov
mov
lret
inc
vlddqu
mov
insb
dec
bound
mov
mov
jp
dec
mov
mov
add
sub
call
add
jne
idivl
out
lea
test
arpl
mov
cs
xlat
ret
aas
sub
mov
sbb
or
mov
jae
fld
in
mov
mov
xchg
stos
aas
cmp
adcl
push
fninit
stos
gs
mov
dec
sub
and
ja
stc
mov
mov
inc
jg
bound
sbb
and
xchg
lret
mov
inc
xchg
pop
cmp
push
daa
lcall
pop
add
sarl
dec
cli
popa
mov
clc
mov
and
test
pop
jno
dec
xor
lret
idivl
xchg
sbb
jmp
ljmp
xchg
push
pop
and
push
out
cmp
pop
pop
in
test
sbb
rol
mov
inc
cwtl
in
mov
or
in
test
pop
ja
les
orl
int
ljmp
scas
inc
add
pop
dec
js
pop
loop
jno
pop
aaa
test
sub
loop
daa
out
notl
lcall
xor
aas
fsubrl
in
xor
mov
ja
or
push
movsl
adc
mov
cmpsl
add
fwait
cld
jmp
inc
xchg
jecxz
adc
cwtl
movhps
pop
addr16
jg
sbb
stos
pop
mov
xchg
call
sbb
loop
inc
xchg
cwtl
xchg
jno
aam
sub
bound
aas
lahf
xchg
sahf
arpl
mov
in
mov
out
pusha
jge
mov
sub
xor
jne
sbb
jp
xchg
mov
fidivrl
mov
jmp
lods
ret
bound
dec
inc
sbb
pop
fstps
sub
pop
cmp
out
xchg
sub
andl
cmc
daa
ds
fiadds
xlat
lods
pop
mov
sub
cmp
cmp
xchg
fmul
sti
scas
aas
inc
cmp
lcall
cmpsb
insl
cwtl
jg
mov
sub
ret
push
push
stos
movsb
sub
or
push
inc
mov
dec
and
adc
mov
xchg
push
or
dec
mov
and
and
push
cmpl
or
stc
push
das
pop
and
rclb
sti
cwtl
enter
cs
dec
xor
push
daa
enter
or
std
testl
dec
and
dec
mov
aaa
test
inc
push
push
repnz
mov
es
pushf
mov
add
imul
pop
xchg
cmpsb
ret
dec
fidivrl
ljmp
out
data16
mul
xchg
cltd
ds
pop
and
call
stos
dec
mov
lahf
mov
mov
inc
hlt
ljmp
outsb
testl
mov
sub
mov
mov
xor
mov
dec
flds
leave
cs
push
and
xor
fcoms
jo
stos
sub
xchg
call
mov
push
sbb
je
mov
cwtl
int3
and
int
stos
xchg
mov
jge
adc
idivl
fiaddl
imul
call
add
loope
les
movb
fidivs
stos
in
mov
orb
js
mov
bnd
shlb
jmp
xchg
sbb
mov
out
sub
adc
xchg
stos
je
into
inc
sbb
out
add
push
jno
mov
imul
addr16
sbb
push
push
xchg
or
inc
cmp
push
dec
pop
inc
lcall
data16
mov
adc
mov
stc
test
insl
add
inc
je
fstcw
pshufw
je
inc
mov
inc
mov
push
lods
fidivs
mov
push
mov
push
imul
and
sbb
loope
mov
push
cmp
cltd
cmp
sub
mov
lahf
ds
cmp
mov
jg
outsl
lahf
shll
jno
dec
je
dec
outsb
pop
enter
and
iret
addr16
hlt
cmp
data16
jl
adc
fwait
xor
cmpsl
dec
xor
in
fld1
mov
and
rclb
push
imul
sahf
int3
cmpl
pop
sti
add
cmc
sub
fwait
out
fwait
rclb
adc
cmp
mov
pop
int
sbb
imul
sub
fsubrl
adc
add
mul
sub
ljmp
cmp
pop
cmp
test
fadd
dec
shlb
fldenv
aaa
lea
out
addb
es
in
aam
std
repz
mov
cmp
mov
insl
out
lahf
arpl
dec
fdivs
cmp
icebp
fiadds
xor
mov
mov
mov
push
in
imul
mov
mov
test
mov
dec
xor
add
call
fwait
mov
mov
cltd
push
loopne
cmp
clc
xchg
daa
orl
out
sahf
and
test
jnp
mov
rcr
lock
mov
jge
xchg
call
cli
push
lods
xchg
jbe
push
insl
add
inc
adc
stos
movsb
pop
movsb
lcall
mov
sbb
inc
and
xor
cmp
push
push
cmpsl
sbb
out
out
aam
idivb
mov
xor
out
repz
jmp
cmp
xlat
sub
pushf
je
daa
clc
aam
lret
or
fs
and
addr16
dec
inc
shr
in
lds
ja
dec
stos
dec
jnp
fildl
inc
je
or
aam
xchg
mov
xor
pop
in
xor
lret
ss
and
jmp
xchg
pop
inc
enter
shlb
xor
call
jmp
stos
ror
adcl
ss
stc
sahf
stc
int
inc
sub
testl
pop
mov
repz
push
adc
inc
sub
xor
leave
imul
lods
in
cwtl
into
xchg
in
xor
pop
ret
add
dec
cmp
test
adc
sbb
les
loopne
jmp
repnz
and
inc
push
sti
dec
jnp
push
pop
cmp
xchg
mov
into
fmull
mov
nop
pop
sbb
ljmp
es
push
inc
out
loope
jge
movsb
sbb
mov
xchg
fs
test
jo
fsts
xchg
pop
xlat
mov
xor
xor
outsb
sarl
mov
or
mov
fbld
jp
test
jbe
push
add
jno
or
mov
loopne
cmp
push
pop
and
and
dec
rclb
in
add
int
adc
adc
pusha
iret
test
gs
outsl
std
jno
je
sbb
xchg
xchg
mov
loopne
push
sbb
push
arpl
push
cmp
mov
ret
subl
shr
mov
pushf
sub
push
gs
jbe
sub
mov
les
pop
out
mov
faddp
ficoml
out
xor
mov
hlt
push
test
sub
jae
adc
adc
push
outsl
pop
js
sbb
decl
mov
xor
lahf
mov
pop
mov
cli
mov
inc
loop
popf
and
add
adc
shll
leave
js
jmp
test
sahf
fdivrl
sub
and
arpl
jo
mov
or
mov
addr16
push
xor
mov
push
mov
popf
mov
int
cmp
jg
mov
in
mov
mov
insl
addb
push
test
loop
sub
addr16
int3
das
pushf
mov
ljmp
mov
fisttpl
imul
aas
pop
pop
lret
fldenv
push
and
rclb
std
inc
cwtl
mov
dec
je
adc
sbb
pusha
lods
xor
fildl
fistps
mov
shl
mov
movsl
push
sbb
je
test
and
jmp
mov
call
popa
insl
ja
adc
jg
push
or
xor
jne,pn
xchg
add
subl
cmp
mov
mulb
mov
pop
dec
fcmovbe
jb
xor
test
scas
je
gs
leave
sbb
test
mov
out
sub
xchg
arpl
nop
ret
lcall
sarl
jg
mov
popa
sub
and
lcall
shl
imul
fwait
inc
lahf
jl
fmulp
inc
push
pop
cmp
cld
icebp
mov
push
xor
cwtl
mov
or
les
pop
mov
jo
fdivr
cld
pop
imul
sbb
lods
pop
inc
mov
call
clc
dec
shlb
mov
cmp
in
adc
xchg
cmc
sub
add
mov
adc
mov
xchg
in
int3
or
adc
clc
cmp
aad
cld
aad
xchg
adc
sti
xchg
cmp
gs
or
ret
popa
push
sbb
repz
in
pop
addb
mov
call
inc
out
adc
pop
stos
inc
jne
jle
or
sbb
daa
push
iret
sbb
lret
add
je
jbe
xchg
mov
xchg
scas
imulb
push
inc
mov
sub
add
or
cmpsl
jmp
rorl
push
sahf
test
rcll
nop
mov
mov
and
pop
xchg
repnz
and
pop
add
mov
ljmp
hlt
loopne
or
adc
dec
std
xor
cmp
jne
xchg
and
inc
loop
insl
dec
out
xchg
rcll
fnsave
into
mov
or
aad
xchg
inc
sub
out
stc
xor
enter
orb
mov
arpl
dec
test
jge
mov
pushf
jo
loope
mov
mov
jns
ljmp
mov
fcoml
test
ja
mov
and
cmpl
adc
popf
nop
sbb
iret
sbb
adc
iret
fsubl
imulb
push
push
mov
jo
xchg
int3
aam
ss
cmpsb
jle
dec
sbb
mov
inc
and
adcb
mov
div
and
add
sub
adc
mov
test
push
pushf
dec
pusha
sbb
adc
dec
and
and
pop
xor
in
and
inc
fadd
std
jle
xlat
loopne
sti
adc
mov
icebp
es
daa
std
add
fdiv
mov
int
push
dec
sbb
stc
sti
int
xor
cmp
roll
testb
mov
repz
lret
adc
add
jg
pop
stos
fdivl
mov
ret
fistpl
push
add
sub
cltd
sub
popf
cmpsb
jo
xchg
call
ficompl
mov
adc
jl
stc
add
jmp
cwtl
or
test
mov
shr
or
adc
push
sub
repnz
or
and
jl
test
call
xor
jns
cmp
xchg
int3
rcll
repnz
xor
dec
out
cmpb
fdivp
addb
int3
cld
sbb
inc
mov
out
out
inc
dec
inc
cmp
out
sahf
imul
dec
icebp
popa
div
push
xor
push
jecxz
ret
stos
mov
bound
sub
pop
inc
adc
cmovbe
rcrl
mov
jne
int3
jge
dec
nop
mov
and
cmp
pop
mov
sbbb
repz
cmp
mov
shr
in
pop
out
adc
mov
hlt
int
mov
add
mov
jno
ret
or
leave
test
add
add
test
xchg
or
out
dec
ret
pop
fdivl
mov
mov
sub
rcll
mov
out
jmp
aad
sub
cmpl
enter
cmpsb
push
int
div
add
sbb
add
cmp
inc
out
dec
rep
lret
hlt
jp
mov
repnz
int3
gs
jl
sub
mov
push
mov
push
and
pusha
xchg
jge
sbb
addr16
cmp
adc
es
pusha
icebp
pop
je
mov
nop
jno
roll
sbb
gs
fisttps
pop
push
lea
mov
pushf
leave
xchg
jne
stc
clc
and
pmuludq
inc
or
sahf
lds
sub
mov
sbb
lods
shrl
pop
xchg
adc
in
add
sub
sub
idivb
and
std
daa
or
cli
dec
adc
jo
cmc
add
mov
dec
scas
or
popf
xchg
lods
sub
dec
ds
inc
repnz
inc
stos
or
pop
repnz
into
sub
cmp
mov
arpl
or
loope
push
cmp
cmp
xchg
mov
mov
mov
jmp
xor
aam
mov
pop
insb
les
jae
les
xchg
mov
fadds
push
sub
and
movl
mov
jmp
cmp
cwtl
xchg
sub
jno
push
inc
jecxz
test
pop
mov
cmp
inc
data16
dec
dec
adc
lds
cmp
xor
sbb
dec
adc
add
scas
cmp
mov
and
xchg
add
stc
and
leave
aad
push
pop
aad
dec
jl
xchg
jo
pop
mov
sub
data16
test
mov
aad
mov
jmp
add
nop
stc
mov
shlb
push
push
rcrl
sub
cwtl
pop
insb
push
mov
pop
js
testl
sbb
jp
add
sub
fidivrl
mov
in
xchg
out
out
xchg
cmp
outsl
cmpsb
sbb
lea
dec
popa
cmp
xchg
ret
mov
dec
push
in
sub
out
mov
jno
adc
sub
scas
std
aad
lods
sbb
cmp
mov
jbe
popf
adc
mov
psubw
xorl
sbb
dec
outsb
and
add
xchg
les
push
insb
cli
mov
loop
mov
inc
dec
jno
retw
movsb
in
mov
mov
cmpsl
xor
fisubs
dec
fists
cmp
in
aas
jno
and
inc
pushl
xchg
xchg
psubusw
mov
xchg
adc
mov
dec
fisubs
inc
popa
sarb
pop
or
aaa
enter
enter
add
adc
icebp
shll
divb
sub
mov
sbb
fstpt
std
out
mov
pop
pop
ja
mov
fisttps
push
xchg
xchg
pusha
add
aad
mov
jae
jo
push
or
xor
pushf
stc
dec
call
int3
movsl
movhps
cmp
or
cmp
lds
mov
push
dec
inc
push
mov
adc
fisttpll
imul
push
mov
outsb
addr16
cltd
fdivp
push
shll
pop
sub
daa
nop
inc
mov
imul
test
push
test
xor
add
pop
push
push
xor
addr16
and
push
das
enter
sub
adc
in
stos
rorb
mov
xchg
xchg
dec
pop
cmp
dec
je
shll
dec
scas
aam
std
imul
push
push
sbb
mov
xchg
fsub
jg
sub
ds
rol
fcomps
inc
fmull
cmp
int
xor
das
pop
cmp
dec
insb
xor
sub
jge
not
pusha
paddsw
ljmp
dec
xchg
and
xor
fsubr
je
xchg
sub
adc
rorb
xlat
bound
inc
int
pop
ret
xor
adc
adc
addl
sub
xlat
sbb
or
iret
sbb
jae
mov
sub
xchg
test
iret
fists
pop
pop
leave
fptan
push
ja
or
adc
lret
lcall
jl
cs
push
add
das
mov
movb
jne
cmp
push
xchg
mov
shll
aam
test
mov
icebp
jae
add
adc
mov
add
int
adc
popa
lock
xchg
rcrb
fisubrl
mov
xchg
push
fmuls
loopne
int3
adc
mov
mov
cmp
out
les
lret
rcll
adc
mov
xor
jb
arpl
aam
bound
jno
nop
rolb
lahf
fs
leave
push
dec
fsts
or
xchg
shlb
dec
test
push
sub
movsb
mov
mov
lds
and
movsl
dec
in
mov
mov
push
push
gs
mov
mov
push
iret
jle
popa
js,pt
test
jp
mov
loop
pop
mov
bound
add
ds
js
loope
jno
inc
fistpll
imul
sbb
push
and
dec
xchg
xchg
das
insb
call
push
pop
mov
shl
inc
popf
and
inc
dec
push
sub
pop
xlat
out
mov
aaa
ja
fs
inc
insb
or
push
dec
or
pushf
nop
aas
pop
sbb
xchg
mov
mov
adc
mov
daa
leave
mov
stc
in
pop
and
adc
gs
adc
and
movsb
inc
dec
dec
mov
xlat
jecxz
add
stos
sub
jae
mov
cltd
das
jbe
push
insl
insl
aad
scas
and
jae
loop
sub
mov
cmpl
divb
fadds
in
dec
add
in
lcall
xchg
sbb
sti
inc
push
stos
sub
inc
roll
jne
adc
mov
dec
or
inc
pop
adc
call
aaa
cmp
mov
push
sub
cli
dec
cmp
lock
adc
push
pop
xchg
inc
movsl
bound
sbb
adc
mov
stos
jle
mov
andb
mov
and
int
sbb
xchg
inc
clc
xchg
lcall
lcall
mov
jmp
cltd
mov
icebp
div
outsb
stc
sub
ss
mov
gs
push
ljmp
push
inc
leave
or
testl
dec
jns
push
in
loope
cmp
ja
fstp
mov
in
jne
lret
pop
mov
jb
xor
out
loopne
cwtl
adc
lcall
lcall
dec
jae
pop
outsb
gs
pop
mov
xchg
in
lods
push
inc
lods
xlat
or
adc
cmp
clc
pusha
push
adc
iret
ljmp
sub
je
xchg
push
dec
cli
xchg
out
or
dec
data16
push
jbe
idiv
mov
jns
mov
sar
mov
sub
mov
xor
xor
xchg
or
inc
pop
les
lcall
or
mov
cmpsl
adc
test
cmp
pop
mov
xor
cwtl
pusha
mov
out
les
inc
add
mov
test
mov
jbe
add
fwait
addr16
loop
dec
std
iret
push
lds
leave
lods
and
xchg
add
test
jnp
lods
fld
fcmovu
push
mov
add
jg
xchg
mov
sahf
pop
jbe
jmp
inc
push
clc
xchg
gs
jae
push
xor
pop
imulb
call
xor
shlb
xchg
xor
in
cmpsl
lods
sub
es
pop
cmpsb
fists
xchg
cmp
stc
add
xchg
call
xor
jne
mov
jmp
arpl
mov
ss
add
out
push
jo
push
cwtl
out
cmpsl
mov
mov
dec
lods
dec
jecxz
inc
xchg
js
gs
pop
dec
sbb
mov
into
adc
ret
sub
inc
pop
sub
movsl
cmp
cmpsb
repz
aaa
mov
jecxz
xchg
mov
mov
mov
test
dec
add
xchg
and
or
dec
adc
sbb
shrb
scas
sbb
lds
test
test
ret
cmc
icebp
subl
jo
les
test
hlt
cs
je
pop
out
shr
ljmp
inc
adc
sub
xchg
inc
es
test
iret
movsb
outsb
xchg
mov
lea
xchg
mov
jo
push
inc
add
jb
cmpsb
and
jl
movlps
stos
fcomps
leave
scas
out
cmp
push
sbbl
lahf
lods
sti
push
mov
lock
sbb
sub
shr
ds
pop
popf
and
repz
inc
pop
push
xor
push
fwait
scas
push
les
dec
lea
or
inc
int3
mov
shlb
sbb
sbb
mov
nop
sahf
mov
dec
pop
jo
pop
pushf
push
dec
or
xor
mov
lods
pop
cmp
jne
fidivl
mov
push
mov
cmc
or
aad
xor
popf
mov
xchg
push
fisubl
clc
or
push
in
push
inc
mov
cmc
ret
cmp
pop
lcall
pushf
dec
call
ja
enter
imul
jns
sub
dec
leave
gs
lret
out
lock
test
dec
pop
sbb
push
jle
mov
push
cmc
imul
push
lds
xor
pop
movsl
mov
fs
mov
aam
adc
xchg
cmp
mov
lahf
in
pop
aas
cltd
mov
ss
fidivrl
lea
sbb
icebp
cli
lods
test
push
sahf
imulb
and
cmp
jl
mov
dec
repz
mov
vmovups
push
mov
pop
fwait
xlat
jb
loopne
or
mov
ljmp
leave
jne
cmp
aaa
mov
lret
sbb
insb
xchg
aam
andl
adc
sbb
in
call
js
loop
daa
sbb
fwait
or
cmpb
adc
addr16
mov
lods
enter
sbb
adc
mov
or
mov
psubw
or
rcrb
adc
mov
shr
ret
in
mov
push
hlt
push
dec
fisubs
jge
repz
push
mov
test
sub
les
xor
test
mov
mov
cs
xchg
cmc
aad
pop
cld
movsl
imul
mov
cmp
pop
xchg
inc
push
and
test
sub
mov
pop
jle
sbb
rcll
sub
inc
mov
dec
push
and
fwait
add
pop
adc
inc
aam
mov
mov
int
dec
jae
jne
xor
sbb
cmpsb
ljmp
mov
sahf
xor
scas
xchg
jge
mov
out
lcall
outsl
or
aaa
pop
insl
popa
fstpt
adc
insl
fcom
lret
push
adc
inc
std
inc
lcall
sbb
cwtl
cmp
pop
add
cmp
test
fmul
inc
imul
and
pushf
lret
sub
mov
xor
inc
lds
dec
or
sti
cmp
outsl
xchg
push
jo
and
inc
addb
cmp
stos
or
mov
insl
pop
dec
test
dec
mov
cmp
pop
pop
shr
push
inc
outsb
mov
cmp
ss
imul
aad
sub
mov
cwtl
mov
or
cwtl
pop
sub
enter
push
pop
xor
orb
push
xlat
ret
arpl
lea
or
sub
sahf
fcoms
subl
mov
fnstenv
jno
jge
jp
pop
bound
test
div
mov
aaa
shll
and
rolb
push
xchg
inc
lret
sub
cmpl
rolb
pushf
xor
and
dec
fmul
into
push
mov
call
std
push
scas
arpl
mov
pushf
shrb
int3
lods
adcl
cmp
mov
push
cmpsl
test
pop
xchg
shlb
dec
dec
addl
sub
xchg
push
das
and
add
push
xchg
xor
scas
sbb
xchg
push
or
in
and
inc
jb
clc
jl
mov
adc
dec
mov
xor
fidivrl
out
mov
fs
jno
enter
pand
push
testb
add
das
adc
xchg
dec
sbb
bound
lods
scas
mov
push
xor
pop
dec
lea
xchg
fsubrs
fsubl
lds
cmpl
sbb
push
mov
push
sub
js
mov
add
es
mov
jnp
push
adc
xchg
dec
mov
fwait
and
xchg
ror
inc
xchg
add
lds
mov
je
and
outsl
lcall
inc
fildll
mov
out
dec
mov
cltd
filds
popa
sbbb
mov
insl
mov
sti
pop
shll
mov
inc
jmp
aas
lret
gs
mov
dec
push
inc
jbe
sub
add
push
xchg
xor
ljmp
inc
push
mov
pushf
cmc
and
mov
cwtl
jbe
mov
and
daa
bound
cmp
jl
je
or
adc
xor
fwait
mov
push
scas
arpl
pusha
lcall
mov
inc
xor
out
mov
xchg
mov
push
inc
sub
nop
sti
arpl
mov
call
ret
inc
mov
outsb
sub
faddl
push
ljmp
icebp
test
push
test
cmpsb
int3
or
loopne
loop
outsl
ret
jl
mov
pop
push
and
outsl
es
jecxz
int3
ljmp
pcmpgtd
cmp
sti
xchg
xchg
ja
pop
inc
sbb
out
subl
ror
xchg
jecxz
ret
pop
insb
push
and
push
jo
push
loop
addr16
push
push
inc
testl
xor
arpl
testl
lock
shl
or
jns
in
and
jg
mov
fistpll
dec
push
ljmp
pusha
js
sbb
sub
lods
pop
imul
pop
mov
mov
jae
cmpsb
shl
mov
call
out
ret
insb
pop
mov
js
push
push
dec
fxch
pop
arpl
and
push
xchg
inc
inc
andb
in
xchg
aad
fs
inc
lcall
aam
mov
negb
fwait
mov
inc
das
cwtl
in
dec
xchg
sbb
pusha
mov
enter
mov
int
rclb
mull
push
pop
mov
dec
aaa
lahf
popf
mov
pop
jne
hlt
pop
push
andb
shrl
test
or
inc
and
mov
test
ljmp
sar
mov
push
lret
comiss
pop
xchg
cmp
push
scas
imul
jge
jne
xchg
aaa
pop
xchg
mov
fstpt
inc
and
into
shlb
sub
mov
cmpsl
cwtl
insb
mov
xor
testb
jnp
mov
sti
aad
xchg
pop
xchg
outsb
jmp
mov
sbb
mov
popf
movsb
sarb
std
xchg
push
loopne
mov
push
mov
xor
pop
aad
dec
cltd
cld
xchg
mov
sbb
xchg
test
loope
ss
sbb
push
mov
lea
pop
jno
push
je
in
push
sub
test
adc
nop
movsb
loop
aas
jne
sbb
push
or
jmp
mov
inc
stos
lahf
lcall
cmp
aaa
loop
ljmp
out
jo
sbb
imul
xlat
mov
jne
cmpsl
out
insb
mov
ja
sti
jge
sbb
push
add
jns
adc
es
xchg
mov
push
lods
call
mov
rclb
sub
cmp
lds
fidivl
sbb
gs
xor
popf
sbb
jo
pop
jno
fwait
sbb
push
out
outsl
xor
xor
mov
mov
arpl
out
sub
push
fidivs
or
iret
xchg
fcmove
xchg
inc
inc
push
stc
pop
pop
insb
or
pop
push
gs
and
push
stos
mov
scas
xchg
add
pushf
repnz
inc
jbe
pop
pop
cld
fwait
rcrl
lahf
or
xchg
sub
xor
nop
push
adc
ficompl
lock
test
mov
dec
nop
mov
mov
jns
push
push
dec
jle
lods
xchg
dec
loopne
icebp
cltd
in
cmc
mov
and
mov
lds
fsubrs
push
insl
rclb
and
or
ret
sub
push
cwtl
sbb
inc
gs
or
dec
popa
loopne
xor
daa
enter
mov
adc
loopne
cmp
push
mov
jg
call
cmp
jge
xor
lds
popf
jl
stos
jg
sti
pop
push
mov
lds
bound
sub
xchg
lcall
xchg
sbb
dec
loopne
leave
and
addr16
pop
enter
iret
inc
push
imul
pop
out
mov
dec
test
pushf
rolb
hlt
cmp
pop
mov
and
cmpsl
mov
jle
in
popaw
dec
sbb
push
negb
pop
insl
pop
mov
sub
mov
cmpsl
dec
jge
hlt
bound
movsb
out
lret
pusha
lock
dec
add
ret
inc
imul
lcall
and
jne
jle
push
je
jg
loop
test
adc
aas
inc
xor
xor
dec
sub
xchg
ret
dec
mov
fnstcw
pop
mov
mov
push
lret
or
cmpl
loop
sbb
ds
xchg
xor
cld
inc
faddl
roll
pop
mov
out
jb
sbb
xlat
jb
inc
mov
xchg
inc
jbe
add
js
xlat
scas
mov
jbe
pop
fisubrs
pop
mov
out
push
dec
jmp
or
das
or
xchg
je
repz
test
rcl
jnp
aas
mov
insl
ficomps
jae
dec
pop
mov
notl
jp
cld
cmp
mov
mov
cld
mov
fnstcw
cmp
cld
cmp
outsl
aad
or
movsb
inc
mov
or
cmpl
sub
int
jae
adc
cmp
pop
inc
aam
sarl
mov
mov
lea
mov
imul
cwtl
dec
in
cld
mov
mov
in
cli
push
mov
shll
xchg
lcall
push
rcll
in
push
arpl
adc
mov
cmp
mov
pushw
and
jb
mov
and
or
mov
cmp
pop
dec
mov
pop
lods
repnz
sbb
mov
popa
dec
fidivrs
cmp
inc
jle
mov
mov
lds
stos
out
mov
negb
inc
inc
cmp
loopne
fisubrs
xchg
test
test
sbb
dec
push
stos
pushf
dec
testb
icebp
insl
cmpl
add
mov
dec
ja
out
arpl
test
aaa
push
pop
cs
mov
mov
mov
cltd
outsb
push
inc
inc
sub
mov
je
lret
lods
jg
or
test
leave
sbb
inc
and
cmpsl
pushf
cmp
xor
cltd
or
cmpsl
xchg
test
and
xchg
mov
mov
dec
dec
into
inc
adc
enter
je
xor
cltd
xchg
lea
adc
and
mov
jnp
scas
fmull
mov
repz
cmp
fisubrs
xor
mov
lcall
sbb
xchg
lret
es
sahf
mov
sub
aam
xor
xor
dec
add
push
push
scas
fwait
add
addr16
sub
mov
rorl
xor
bound
enter
xchg
js
dec
dec
xchg
mov
and
mov
inc
fldcw
sbb
mov
test
sahf
roll
hlt
adc
xchg
icebp
dec
push
inc
sbb
into
sub
add
nop
shll
push
in
xchg
inc
or
add
sub
stos
lret
mov
add
inc
and
dec
sbb
dec
xchg
js
pusha
push
mov
shlb
stc
lock
jns
arpl
dec
test
cmpsl
cmp
add
xor
test
aad
inc
movsl
mov
push
or
and
pop
mov
popl
jae
xchg
negb
repz
test
out
push
fst
push
mov
out
mov
repnz
xchg
add
push
lock
jbe
sbb
aad
xchg
push
test
in
out
js
repnz
out
clc
pop
jns
and
mov
mov
mov
daa
mov
lods
jnp
es
pop
and
dec
in
inc
ja
orl
xchg
inc
fimull
xchg
add
out
mov
or
push
jmp
out
test
and
cmpsb
pop
test
mov
dec
adc
test
sbb
mov
gs
pop
dec
mov
mov
sbb
mov
mov
das
or
xchg
cld
xchg
and
push
mov
mov
fsubs
sbb
int3
das
orb
mov
aad
subl
es
lock
sbb
or
movsl
jl
mov
mov
mov
push
pop
leave
pop
pusha
cmp
xchg
movsl
mov
leave
jne
cmp
loope
stc
imul
jle
ret
lret
adc
xchg
outsb
jbe
cmp
jge
push
sbb
cld
pushf
mov
push
andb
push
sbb
mov
inc
int3
mov
and
mov
jmp
and
jne
xchg
or
and
test
aad
jno
or
repnz
push
dec
sub
iret
adc
jecxz
sub
mov
pop
leave
outsl
pop
cmpb
daa
mov
push
ss
or
iret
je
inc
movsl
es
shlb
fcom
int
push
lea
into
adc
roll
sub
and
add
jbe
adc
inc
jne
mov
jge
testb
adc
pop
xlat
addr16
lahf
adcb
xor
fcompl
jmp
or
cld
mov
pushf
pusha
mov
push
outsl
dec
and
or
jge
xchg
pop
pop
push
cmp
and
test
pusha
ds
inc
ret
jne
mov
imul
lods
push
pop
xchg
mov
mov
jmp
mov
and
fcmovbe
mov
cmc
pusha
loope
dec
or
cltd
nop
mov
jle
jno
jbe
das
push
mov
or
outsl
and
ret
icebp
cmp
shrb
push
pop
cmp
pop
mov
lahf
insb
xor
jmp
ret
push
subb
rorl
ja
mov
pop
pop
pop
andl
jecxz
clc
lcall
or
jno
fisubs
fistps
sar
or
gs
inc
ror
bound
mov
std
jl
fsubl
pop
cmp
in
push
sarb
das
jmp
xchg
jnp
rclb
mov
xchg
mov
fsubs
sbb
sub
outsb
push
jbe
loopne
push
cld
lock
mov
lret
pop
mov
mov
fisubl
call
pop
jge
xor
int3
cmp
rcr
sub
lahf
icebp
stc
xchg
mov
loopne
adc
hlt
or
jno
mov
sti
lock
fbstp
add
jnp
int
mov
rolb
je
xchg
lret
std
popf
aaa
mov
call
ret
mov
lret
add
sbb
xchg
sub
fdivs
sbb
cltd
or
nop
dec
cltd
dec
fmuls
sub
jo
jle
cmp
in
pushf
mov
sbb
mov
lcall
xor
dec
pop
adc
mov
xor
xlat
dec
push
inc
popa
or
test
push
insl
pop
add
xchg
les
mov
shrl
orps
or
ljmp
add
jbe
push
xor
out
into
test
jecxz
dec
adc
mov
lret
pop
sbb
aaa
sbb
pop
loope
push
sub
dec
adc
sarl
xor
bound
adc
cmp
rolb
jns
or
rorl
xchg
shll
sahf
fs
dec
outsl
repnz
aad
subl
inc
ds
jle
mov
lea
std
in
loopne
xlat
sub
in
dec
jge
or
data16
sub
mov
repz
popa
jbe
cmpsb
xor
ds
mov
cmpsb
lods
cmp
subb
lock
movsl
fadds
mov
lods
xchg
test
lcall
mov
nopl
aaa
cmp
popa
inc
inc
sbb
in
in
pop
cmp
loopne
stos
xorl
xchg
push
push
mov
cs
test
mov
xlat
or
jo
push
pop
and
cmp
or
jne
fidivl
mov
xchg
lock
mov
inc
aam
cli
mov
dec
inc
lea
stc
rcr
fwait
mov
push
push
adc
push
dec
dec
repz
fiaddl
dec
fisttps
popf
pusha
popa
roll
jp
pop
aad
insl
iret
jg
cmp
out
pop
jbe
or
test
jnp
out
mov
jae
or
mov
scas
pop
mov
sbb
ljmp
xchg
xchg
data16
les
movsb
xchg
out
dec
ljmp
sbb
ljmp
mov
int
inc
dec
jnp
shlb
sti
mov
xlat
cltd
pusha
inc
dec
dec
sub
xor
fcoml
sub
les
mov
ja
repnz
fidivs
sub
inc
mov
hlt
mov
call
add
fnstcw
mov
pop
outsb
iret
out
hlt
pop
repz
mov
in
sbb
rcll
xor
and
lahf
andb
repnz
push
push
imul
rorb
les
pop
jle
test
add
arpl
subb
daa
jo
fimuls
jb
and
ds
cmp
stos
push
lods
repz
mov
mov
hlt
shrl
and
imul
mov
or
addr16
cli
fldl
out
subl
in
mov
cld
je
xchg
pop
add
push
cld
add
xchg
loop
loope
clc
adc
push
sbb
mov
pop
ds
shll
loop
or
mov
jbe
faddl
imul
mov
sbb
push
pop
cmpsl
lods
ljmp
mov
mov
add
dec
fsubp
sub
sub
aas
pop
mov
fbstp
sbb
adc
jae
xchg
pop
mov
mov
pop
mov
movsb
mov
sbb
stos
out
cmc
push
dec
and
xchg
scas
pop
loope
mov
push
sbb
or
inc
mov
cmp
movsb
nop
repnz
jge
imul
xlat
jmp
stos
popf
or
in
sub
out
aam
and
jp
mov
pop
and
fdiv
fdiv
pusha
aas
out
inc
adc
dec
jo
pop
mov
mov
cltd
add
lock
adc
jmp
sub
pop
jge
loope
push
gs
mov
fdivrp
pop
ja
out
imul
jnp
scas
out
sub
xor
rorb
push
ret
jl
push
cwtl
mov
and
jbe
jmp
mov
loop
rol
shrl
pusha
and
ds
sbb
adc
in
and
pop
mov
mov
xlat
inc
aas
out
dec
cwtl
pop
and
stos
adc
mov
push
adc
mov
pop
lods
scas
or
mov
sti
sub
mov
out
pop
ljmp
sbbl
ljmp
xchg
lods
cmp
cmp
mov
es
mov
cmp
xchg
adc
imul
push
lcall
jge
or
mov
jecxz
mov
daa
inc
out
popa
jmp
std
das
pop
shl
xor
idivb
mov
and
jg
popf
nop
lahf
shlb
sub
push
andl
jmp
xlat
cmp
adc
enter
mov
pop
cli
xor
cmp
bound
xchg
mov
shl
pop
pop
mov
stos
and
pop
int3
loop
dec
inc
jbe
pop
sbb
and
in
mov
js
sbb
fadds
test
mov
and
nop
push
xor
out
and
insb
je
mov
inc
sub
enter
rolb
icebp
mov
insb
cmp
clc
iret
cli
jle
js
push
scas
jecxz,pn
jnp
xlat
fsts
lret
nopl
xchg
xchg
int
arpl
add
mov
xchg
lds
xchg
inc
sub
clc
cmp
sbb
jmp
pop
nop
lahf
lods
int
mov
adc
ficomps
add
sarl
mov
fisttpl
fmul
hlt
repnz
add
fs
mov
jp
into
xor
repz
clc
shr
inc
lret
jecxz
jmp
mov
cmpsb
sbb
mov
jbe
pop
cmc
and
aas
aaa
rol
movsb
push
rcrl
int
dec
ljmp
mov
imul
xchg
js
mov
sbb
jns
mov
or
outsb
adc
cmpsl
imul
inc
into
and
xchg
inc
inc
js
xor
adc
scas
inc
sub
push
data16
push
fisubl
jae
std
pop
sub
into
out
outsb
ds
daa
lea
in
sahf
insl
add
mov
mov
dec
shll
mov
mov
ljmp
cmp
repz
shlb
loope
adc
faddl
in
sbb
dec
out
iret
fadds
inc
test
fldt
xchg
or
mov
stos
dec
or
addr16
cs
fstpl
add
addr16
adc
cmp
add
sbb
mov
dec
xchg
pop
sub
cmp
adc
les
or
jns
adc
pop
and
mov
lcall
add
out
inc
jo
ficomps
mov
inc
mov
inc
sahf
sahf
mov
and
pop
cmp
adc
push
sub
pop
mov
fdivrl
mov
push
loope
fsubrs
xlat
xor
mov
call
in
lods
or
leave
jl
jge
rolb
jno
std
in
mov
and
xor
xor
cli
inc
fstps
fnstcw
int
dec
xor
mov
jne
sbb
jns
cltd
cmpsb
das
cwtl
add
pop
jle
test
jnp
mov
neg
mov
shll
lret
stc
lock
or
xchg
es
dec
cmpl
dec
pusha
in
lret
xor
orb
dec
out
lock
dec
pop
adc
xor
xchg
data16
lea
and
fwait
dec
popa
pushf
test
push
rolb
into
or
test
or
xchg
aas
and
mov
shl
cmp
pcmpgtw
xchg
xor
ret
push
lcall
roll
fbld
xchg
jns
mov
jmp
aad
adc
rcll
andb
ror
pushf
xchg
adc
in
xor
mov
or
pusha
into
dec
cmp
loop
mov
inc
stos
ret
test
or
mov
rolb
inc
jno
dec
lods
je
inc
insb
test
repnz
loope
push
aam
sbbl
daa
enter
push
lock
push
fldl
sbb
lret
cmp
movsl
sub
imul
ret
rcrb
xor
pop
pop
test
sub
mov
cmp
and
imul
call
sahf
jno
xchg
xor
jnp
sub
dec
sbbb
mov
addl
out
jg
cmp
clc
ret
mov
mov
jbe
push
mov
std
les
xorl
xchg
mov
and
xchg
movsl
lret
cmpb
fwait
xorl
stc
jl
xchg
inc
sbb
je
and
xor
jmp
lds
mov
cmp
dec
insl
cmp
imul
lahf
inc
cltd
sbb
mov
in
add
inc
loopne
ds
in
mov
push
xchg
sub
mov
cs
sbb
jne
xchg
lock
mov
inc
pop
pop
aaa
and
mov
es
inc
jmp
mov
ja
cld
jmp
test
mov
lret
in
clc
fdivr
addr16
adc
lahf
add
outsl
dec
aam
stc
sbb
adc
or
pop
push
xchg
push
loop
int
dec
rol
loop,pt
out
orb
jb
icebp
inc
mov
push
in
ja
das
pop
cmp
and
mov
xchg
scas
push
xchg
lock
jne
fists
xchg
mov
add
aad
adc
and
xor
idivl
test
imulb
adc
movsl
js
flds
sub
aas
insl
loop
out
add
cmp
adc
lcall
out
outsl
test
push
outsl
les
in
dec
jnp
rol
js
sbb
add
dec
out
shrl
mov
in
cmp
jnp
cmp
jne
pop
divb
es
into
out
leave
gs
addr16
cmp
mov
insb
xchg
addl
mov
sub
loopne
xor
xor
orl
subl
clc
stos
inc
test
aam
lea
add
imul
bound
and
mov
mov
inc
mov
ret
and
inc
ja
mov
mov
sbb
scas
fs
push
inc
lods
sbb
mov
outsb
and
fdivrs
xor
loope
sub
or
fwait
int3
mov
dec
test
pusha
or
xchg
lahf
mov
xor
sbb
incb
mov
mov
sahf
pop
jle
test
rcr
iret
xor
fstl
lahf
das
dec
xchg
jp
push
fsubr
test
sub
jns
notl
mov
sub
pop
push
mov
enter
outsl
jns
push
addr16
adc
cmpsl
mov
movsb
in
jno
in
ret
mov
inc
jg
jb
iret
test
jge
ror
sarl
loopne
out
dec
test
sbb
mov
repz
sbb
scas
adc
mov
xor
sbb
jne
push
pop
sbb
jne
int3
mov
or
jle
jne
and
mov
jmp
mov
dec
js
mov
mov
dec
add
rcrl
sbb
xchg
mov
shr
fistpll
or
xor
stos
jg
ss
leave
dec
xchg
stos
jl
mov
ja
call
shll
loopne
push
cmpsb
outsl
sbb
jo
movsb
insl
sarl
pop
inc
mov
addl
jp
mov
into
jbe
jle
mov
nop
sub
sub
or
sub
cmp
mov
pop
mov
inc
movsl
jl
pusha
ret
in
jmp
sbb
add
cmp
ljmp
push
insl
into
arpl
xchg
out
sahf
jb
rol
imulb
dec
rolb
outsl
negl
aam
xor
xchg
mov
xor
lods
or
daa
mov
pop
jns
xor
call
push
je
jae
cmpsb
mov
mov
leave
pop
rorb
pop
pop
mov
out
test
stc
enter
cld
negl
mov
push
shl
push
mov
and
sub
dec
sbb
or
add
push
jne
ja
test
sub
cmpsl
sub
jo
sbb
ja
pop
inc
daa
mov
cli
mov
add
fs
aaa
pop
insb
push
frstor
divb
sbb
cmp
pop
or
fsts
xchg
popa
push
loopne
cli
pop
sarl
pop
adc
mov
fisubl
mov
xchg
cli
or
jl
aaa
test
jo
mov
cmp
insb
and
pop
lahf
xchg
arpl
cltd
test
mov
faddl
and
in
mov
mov
pusha
xchg
icebp
das
dec
add
lcall
ret
sub
jb
and
or
jb
test
bound
adc
mov
sbb
xchg
dec
jb
and
or
cltd
out
xor
pushf
and
xor
inc
imul
sbb
cmc
aaa
push
cli
push
out
das
mov
stos
cmc
pop
es
sti
movsb
outsb
fstl
adc
fnstenv
cmovp
pop
stc
cli
push
es
repz
arpl
ljmp
rclb
sub
push
in
cltd
negb
xchg
cmp
mov
inc
and
mov
push
imul
loopne
add
aaa
xchg
push
adc
pop
push
cmc
sub
icebp
das
push
jb
xor
ja
cmp
in
arpl
push
cmp
lds
movsl
pushf
roll
pop
cmp
and
ret
mov
arpl
fldz
clc
scas
push
push
mov
lahf
int
push
icebp
cs
mov
mov
repz
add
repz
sar
enter
mov
repnz
jno
xor
out
jo
dec
mov
mov
push
jecxz
add
sbb
jg
movsl
and
mov
sbb
fldcw
es
fs
cmp
imul
mov
pushf
dec
call
xor
xchg
test
sar
mov
push
cwtl
in
add
das
pop
sub
test
mov
lahf
adc
mov
ficomps
pop
adc
sbb
inc
mov
add
lret
mov
mov
push
test
dec
shl
ljmp
push
imul
js
adc
add
push
pop
ljmp
cld
add
xchg
jb
xor
push
adc
ret
adc
decb
cmpl
les
sahf
jno
inc
xchg
fmul
jp
scas
jns
call
pop
notl
dec
and
lods
pop
jnp
xor
outsl
mov
adc
rep
pop
push
and
fisttps
mov
pop
xchg
sbb
add
out
pcmpeqw
lea
push
ret
rep
jo
pusha
out
lahf
out
push
sub
adc
rcr
pop
jb
push
gs
pop
incl
jne
fstps
mov
sub
push
aam
xchg
jl
shlb
mov
mov
lea
lods
mov
pop
lods
mov
lcall
adc
push
sub
fwait
cmp
or
pushf
sub
je
sbb
ret
sbb
test
xlat
dec
stos
push
inc
hlt
shrl
xchg
xchg
and
aas
imul
xorl
adc
push
andb
mov
xsavec
mov
pop
dec
aaa
mov
loope
add
dec
lret
jecxz
out
add
in
lds
mov
xchg
inc
mov
and
aas
dec
add
and
jb
and
orb
sti
testl
out
loope
hlt
mov
pop
ret
loopne
insl
add
fadd
inc
stc
pop
fisubrs
push
add
add
inc
loope
in
xchg
xor
lods
loope
fisubrl
xchg
fidivrs
lahf
xor
fildll
dec
push
aas
mov
and
jp
arpl
and
add
repz
xor
jno
dec
sub
adc
and
mov
cmp
adc
pusha
add
xchg
lret
pop
pop
jns
add
loop
cmp
mov
ret
movl
insl
jecxz
movsb
mov
mov
popf
lret
repnz
adc
movsl
adcl
test
aas
in
push
inc
sub
test
stos
loop
xor
jne
xchg
dec
sub
inc
je
mov
pop
mov
lahf
push
jbe
ja
xchg
add
fisttps
jg
sbb
jae
jmpw
adc
sbb
decb
xor
xor
dec
jg
pusha
mov
fnsave
sbb
dec
sbbl
mov
dec
cmp
cmpsb
aaa
xchg
cmp
add
stos
pop
mov
inc
fwait
jae
push
mov
push
and
nop
lcall
ret
fimuls
imul
js
cwtl
insl
adc
enter
leave
pop
test
loopnew
xchg
and
inc
gs
ljmp
divl
sub
push
xchg
push
jae
mov
mov
fwait
add
into
gs
js
enter
jecxz
jmp
mov
add
mov
pop
mov
mov
data16
mov
iret
and
imul
cmp
lahf
fwait
dec
filds
lret
jle
movsl
mov
push
addr16
push
or
push
adc
lcall
and
lea
sub
inc
adc
xchg
adc
daa
mov
iret
mov
or
testb
aas
jne
dec
cmp
testl
pop
std
dec
ret
xchg
mov
xor
je
add
mov
popa
pop
sub
lods
push
subb
adc
push
mov
lock
xchg
fstpt
xchg
into
fstpl
push
add
int3
push
push
jp
aad
push
dec
cltd
sbb
jmp
sbb
sub
aam
aas
xor
je
mov
in
dec
pusha
test
ret
shl
cmpsb
cmpsl
jne
push
mov
and
or
dec
mov
sbb
xchg
shlb
lods
ror
mov
je
ret
in
outsb
sbb
xchg
sbb
test
out
cmp
test
insl
push
dec
mov
and
cmp
je
sub
subl
fldenv
inc
repnz
pop
ret
adc
incb
mov
iret
or
fcom
movsl
clc
xchg
test
sub
push
sub
xor
mov
pop
aam
sti
xor
outsb
fnstsw
shrb
ficomps
pop
lret
xchg
aaa
stos
call
mov
lock
hlt
leave
ds
test
out
adc
xchg
clc
lahf
sbb
cmp
or
mov
xor
lods
aad
lods
call
jnp
imul
test
adc
xchg
mov
push
bound
cli
or
sarb
mov
fwait
mov
psubw
cmpsb
aaa
sub
push
aad
hlt
pop
inc
enter
adc
xor
sti
les
shr
test
mov
lcall
and
shrb
mov
ljmp
xchg
add
sub
insb
sbb
cwtl
aaa
fsubl
arpl
xor
mov
in
jle
sbb
fistpl
repz
popf
out
add
cmp
rcrl
xchg
sbb
sti
mov
testb
jno
sbb
scas
sbbl
pop
outsl
push
out
sbb
enter
add
cwtl
not
sub
sub
mov
out
mov
pop
bound
push
add
test
enter
enter
addr16
mov
mull
mov
or
divb
popf
mov
fstpt
lret
cld
inc
push
repnz
cmpsb
mov
push
mov
mov
mov
mov
je
test
xchg
in
cwtl
add
xor
sub
lea
mov
or
ss
cwtl
add
fsubs
lods
push
mov
sarl
jl
pushf
adc
scas
fidivrs
or
sbbb
mov
sbb
inc
inc
popa
pop
mov
stos
leave
mov
stc
lahf
bnd
repnz
pop
sub
cmc
xor
jbe
cmp
imul
mov
out
loope
das
inc
cmpsl
push
inc
repnz
push
sbbl
xor
imul
rcrb
jne
sub
pop
imul
mov
lahf
or
arpl
add
leave
push
jge
dec
subl
push
shlb
push
dec
in
and
xor
ret
sub
jmp
mov
xchg
shr
adc
and
out
enter
cmp
andl
lahf
call
lock
loope
mov
jl
add
test
push
sbb
mov
mov
stos
sub
sbb
mov
frstor
leave
mov
mov
scas
push
sub
call
je
idiv
xchg
pop
ljmp
mov
xor
icebp
lods
dec
data16
pop
mov
cli
mov
andl
shrl
cmpsl
push
rorl
ljmp
jno
mov
pop
xor
xchg
pop
sbb
or
fsubs
dec
rcrl
pop
xor
lock
cmpl
repnz
xor
inc
ds
mov
mov
cmp
inc
add
sub
fmull
add
sahf
add
fdivs
iret
adc
sub
iret
ja
jnp
pop
pop
cwtl
and
add
pop
or
fstpl
mov
inc
loop
pop
push
inc
add
dec
rcrl
fcom
push
xor
pop
or
add
imul
insb
pop
jp
test
add
fsubl
int3
cmpb
push
push
pop
cli
and
jg
adc
add
mov
jne
pop
test
mov
mov
mov
mov
pushf
dec
bound
mov
mov
lahf
call
cmpsb
mov
cwtl
fsubl
jne
inc
mov
adc
sbb
sub
xchg
mov
fistps
jnp
jl
add
les
or
inc
outsl
negl
ror
pop
sub
in
les
cmp
cmc
cmp
int
lods
cmp
inc
jno
icebp
xor
addr16
xchg
jecxz
ret
pop
data16
sbbb
sbb
adc
dec
push
daa
add
pminub
dec
jbe
test
and
lahf
sbb
and
ja
bound
pop
jmp
xor
movsl
pop
out
test
dec
pusha
das
inc
adc
cmp
jge
add
cmp
sub
mov
in
jbe
mov
loope
pop
stc
add
js
push
pushf
xor
imul
xchg
add
pop
adc
fwait
aas
cld
mov
cmp
or
xor
pop
bound
mov
lret
test
icebp
add
insb
cmpsb
push
imul
arpl
mov
adc
mov
clc
repnz
adc
add
adc
lds
sbb
dec
inc
loopne
pusha
pop
xor
aaa
in
lods
or
xor
mov
and
fdivrp
loopne
icebp
lret
movsl
and
fdiv
push
cmpsb
mov
push
pop
xchg
int3
dec
stos
push
and
call
inc
rolb
add
mov
sub
mov
sbb
subb
jecxz
loopne
mov
jb
cli
mov
nop
or
inc
push
pop
dec
fs
dec
or
insb
sub
sub
jg
or
adc
aaa
scas
sub
fwait
push
push
cs
in
inc
push
mov
fyl2xp1
jae
jb
shrb
cmpsl
insb
lahf
mov
aam
scas
xchg
bound
push
out
aad
push
rcll
inc
fiaddl
cs
push
push
push
ret
mul
fildl
rcrl
jae
lret
sbb
jo
jmp
orl
dec
imulb
xchg
adc
mov
popf
aam
stos
test
lds
fsts
jmp
in
xor
sti
in
mov
jo
sbb
mov
inc
int3
pop
xor
cltd
push
lods
mov
lret
in
popf
call
adc
fdivrs
std
push
mov
push
pop
jb
std
fs
cmpsb
dec
pop
fisttpll
cmc
jge
rorl
cltd
mov
stos
mov
or
and
rclb
add
sbb
sbb
cmc
lret
push
out
insl
cmpsb
push
or
sbb
pusha
push
push
inc
out
rolb
jae
sahf
inc
outsl
aad
repnz
js
lods
jnp
out
lock
pop
jge
pop
stc
cmp
or
gs
sub
aam
or
in
or
cmpsl
and
xchg
cmp
arpl
add
pusha
daa
add
scas
pop
mov
cli
pop
hlt
mov
aas
xchg
xchg
test
lret
xchg
fs
cmc
call
int
pop
iret
testb
mov
loop
xlat
cmpsl
push
ljmp
pop
icebp
sbb
ror
cmc
aaa
pop
jb
mov
dec
adc
xlat
push
dec
scas
and
out
hlt
cmp
ret
loopne
mov
aas
jmp
inc
xor
sub
outsb
fdivrs
dec
inc
insb
in
jecxz
push
fadd
inc
cmpsl
sub
push
dec
faddl
push
das
push
rorl
pushf
gs
mov
push
loopne
mov
mov
cmp
push
fistps
aas
cld
mov
shrb
out
mov
push
sti
pop
iret
push
iret
push
dec
stos
aaa
les
sahf
cmp
lock
pop
stos
flds
movsl
pop
mov
push
lahf
mov
cwtl
jo
mov
mulb
ret
sub
scas
icebp
ja
dec
pop
adc
sub
loop
cmp
pop
mov
ss
or
jae
inc
sub
imul
or
lods
adc
cli
xchg
aad
and
test
lods
or
jmp
es
inc
add
xchg
add
out
push
xchg
popf
repnz
xchg
addb
aas
pop
mov
lret
jae
out
into
add
cmp
test
imul
dec
or
neg
jp
hlt
fdivs
sbb
aam
movsl
fnsave
push
aad
jle
arpl
testl
push
mov
xor
sub
sub
adc
mov
jg
les
scas
aaa
shlb
xor
mov
jmp
cmpsb
lret
movsb
adc
xor
push
cmpsb
inc
pop
mov
arpl
int3
sub
test
stc
cmp
daa
xor
push
pop
daa
cmp
data16
add
int3
jmp
in
adc
mov
test
std
das
and
lret
or
loopne
int3
fs
fbld
inc
mov
pusha
mov
adc
mov
adc
cmpsb
fs
xlat
ret
sbb
sarl
clc
add
mov
jae
jl
dec
push
ficomps
out
orb
jg
jmp
imul
fimull
jle
pop
cmp
mov
sahf
ret
jbe
or
adc
mov
fiadds
cs
mov
push
mov
pop
out
sub
aaa
xorl
cmp
lcall
pusha
or
jmp
mov
jmp
inc
les
adc
sub
sahf
add
invd
daa
leave
xchg
pop
pop
cmp
popf
into
popa
cs
jecxz
fwait
jb
xchg
adc
lods
sbb
push
push
out
mov
int
insl
clc
int3
ja
mov
inc
push
enter
dec
mov
jle
dec
addr16
sbb
sbb
popf
cmove
jns
pop
cld
decb
movsb
cwtl
xor
inc
movsl
mov
lret
stos
inc
sbb
sub
lods
mov
rorb
fldenv
testb
aam
adc
push
cmp
mov
jmp
inc
jns
mov
xchg
int3
shrl
inc
sbb
lahf
jle
sbb
lret
jg
xchg
loop
ss
aaa
push
add
jae
sub
or
jne
test
jl
ret
movsl
mov
sub
test
xchg
jg
out
movsl
xchg
adc
loopne
xchg
xor
mov
sar
fstpt
loope
nop
push
movsb
out
jecxz
aaa
dec
push
loop
imul
inc
xchg
xchg
adc
ss
dec
ss
mov
repnz
xchg
dec
sbb
pop
decb
jnp
int3
mov
add
insl
mov
push
or
loopne
xorb
repnz
scas
movsb
pop
mov
xor
adc
jge
push
xor
out
dec
test
iret
xor
add
xor
sbb
sbb
mov
pop
sahf
mov
xchg
jns
test
fnstenv
mov
jns
xchg
int
sub
inc
sub
les
rcll
xor
int
imul
inc
ret
loopne
pop
push
test
stos
cmp
popa
dec
add
aam
jp
sub
fdivrs
mov
push
xor
bound
adc
cs
popf
inc
adc
pop
xlat
int3
push
shlb
in
in
sbb
xchg
sbb
cmp
mov
mov
out
out
in
mov
test
or
xchg
popa
mov
cli
rcrb
jmp
pop
call
jg,pt
mov
mov
xor
adc
sbb
or
repz
jns
movsl
sbb
cmp
push
adc
jo
adc
daa
inc
loopne
and
xor
pushf
test
add
adc
cmp
divl
mov
mov
xor
push
enter
and
mov
shrb
adc
dec
das
mov
xchg
in
out
fistl
aam
je
fistl
xchg
fwait
pop
cmp
out
jecxz
jg
jp
cmp
mov
add
push
pop
dec
in
mov
xor
or
add
add
adc
jbe
cmp
or
push
adc
xchg
xchg
sarl
or
ljmp
cs
dec
fists
icebp
sbb
pusha
in
call
lcall
push
outsb
xor
jg
scas
lds
jmp
lret
popf
sti
or
jno
roll
ljmp
pop
fwait
pop
cmp
sbb
lock
dec
mov
mov
movhlps
cs
pop
adc
cltd
pop
out
push
push
test
push
je
xor
jmp
cmp
dec
push
mov
andl
shlb
mov
mov
shrl
adc
cltd
psllq
pop
call
jnp
scas
or
lods
xchg
les
or
pop
sub
decl
sahf
les
inc
cmp
icebp
cmp
inc
bound
jo
pop
pusha
movsb
xchg
lods
push
daa
push
add
ljmp
fcoml
push
fsub
test
push
repz
leave
int
adc
xor
push
loopne
dec
mov
dec
call
push
addr16
sub
bound
loopne
jecxz
fs
lds
add
jns
pusha
add
lods
call
jg
les
cld
es
lea
xchg
cmp
inc
call
cld
repz
mov
movsb
sti
sbb
mov
scas
jnp
fdivs
test
sbb
lret
in
xor
xlat
adc
xor
jnp
mov
sub
testl
adc
push
xchg
in
xor
push
push
add
mov
inc
xchg
push
adc
insb
mov
lret
dec
xchg
cmp
outsl
orl
fimuls
arpl
outsl
arpl
popa
cld
and
lds
inc
stos
lahf
rcll
xchg
in
cld
mov
out
les
enter
cmp
jge
adc
shlb
stc
out
inc
dec
inc
xor
mov
dec
inc
cs
sub
push
arpl
jns,pn
jecxz
mov
add
dec
ret
fidivs
pop
jecxz
shr
icebp
lahf
xor
cmp
in
add
dec
ljmp
test
pop
or
jle
jecxz
pause
das
inc
imul
call
inc
xor
push
imulb
inc
sbb
movsl
sub
mov
aam
test
cmp
fwait
mov
mov
and
in
ljmp
sub
cmpsb
shl
nop
imul
push
ds
pop
add
loope
in
stc
pop
aas
add
arpl
xchg
out
sub
adc
cld
push
jnp
out
adc
popa
loopne
fsubrs
popl
out
jns
lret
pop
pop
scas
mov
sub
fsubrl
imul
pop
sahf
mov
aad
out
bnd
icebp
adc
repnz
lods
mov
imul
inc
push
xor
pop
testl
jns
mov
ss
cmp
fnstcw
jl
pop
jne
mov
outsb
cmp
sbb
xchg
lret
sub
add
or
std
clc
xor
fdivs
es
mov
mov
or
push
xorl
or
sbb
popf
and
ljmp
fdivr
jmp
or
ret
out
sub
in
fwait
in
lret
aam
outsl
lea
sbb
add
adc
and
icebp
imul
mov
mov
jbe
dec
int3
push
xchg
sub
in
popf
cmp
stos
stos
inc
mov
xor
pop
or
fdivp
fiadds
mov
xchg
subb
in
fwait
mov
fwait
hlt
fld1
xlat
gs
lds
jne
sub
and
out
mov
and
push
insl
mov
pop
es
fistpll
xchg
pop
cmc
inc
sbb
jp
push
fwait
add
inc
leave
xchg
mov
stos
popf
aaa
sub
movsb
ret
xchg
mov
jb
scas
test
push
leave
jne
popf
cmp
das
mov
mov
mov
subl
adc
ljmp
add
insl
imul
sbb
mov
inc
pop
sub
clc
and
ja
xchg
mov
xchg
lods
mov
xchg
popl
int3
movsb
sbb
fbstp
pop
adc
add
jp
sub
cld
mov
dec
pop
jbe
shl
adc
xchg
mov
mov
lea
stc
scas
lea
daa
addr16
dec
xchg
ja
jne
insl
lahf
jb
mov
xor
pop
mov
js
mov
push
clc
dec
push
xchg
movsb
shr
dec
pop
jae
mov
bnd
pop
scas
sbb
shl
pop
dec
or
jb
pop
push
in
dec
mov
xchg
insb
hlt
jb
pop
ret
enter
shlb
adc
into
jnp
push
int
jmp
arpl
jg
jae
jno
hlt
mov
dec
gs
out
sub
dec
pop
mov
lods
jae
or
fdivs
sbb
cmp
repnz
mov
xlat
or
dec
and
xor
int3
xchg
pop
mov
pop
mov
and
jno
fs
xor
lcall
jl,pn
mov
fisubs
pop
mov
xor
repz
push
cld
daa
out
fwait
push
lods
push
out
ja
cmp
adc
add
hlt
jbe
out
cmp
jg
das
or
add
jmp
in
xor
mov
je
mov
inc
imul
jae
mov
add
das
ds
scas
pop
leave
push
nop
and
lds
add
inc
jg
divb
dec
insl
lahf
shl
insl
imul
movsb
insb
outsl
adc
dec
data16
add
push
sahf
call
dec
inc
lcall
add
jp
lods
mov
cmpsb
cmpsb
imul
cmp
jle
out
fisubrs
pop
mov
scas
mov
rolb
add
inc
into
in
lgs
rcll
ret
outsl
xchg
inc
jne
adc
imul
add
or
and
jecxz
inc
mov
rclb
mov
mov
andl
jno
arpl
jmp
xor
js
pop
outsb
outsb
dec
rcll
adc
aaa
and
pop
rclb
lods
cld
ja
dec
push
je
lds
faddl
xor
scas
call
jno
jmp
mov
ljmp
mov
inc
movsl
dec
mov
ficoml
ret
push
pushf
xchg
arpl
xor
adc
je
imul
subb
test
lret
pop
out
jp
cltd
push
xchg
cs
xchg
push
mov
lea
push
js
cmp
lcall
testl
xchg
test
jbe
pop
pop
in
gs
out
inc
ja
outsl
addl
nop
and
pop
mov
lcall
xchg
mov
fldl
scas
lret
dec
gs
dec
jge
mov
fldenv
pop
or
xor
mov
fisubs
push
sub
shlb
testb
jle
adc
sbb
pop
mov
adc
aam
and
pushf
dec
inc
mov
pop
or
dec
loope
popf
mov
fs
mov
hlt
ret
dec
cmp
scas
jecxz
jae
insb
loope
push
xchg
data16
mov
sahf
je
lret
int3
inc
jp
and
in
movsl
add
sbb
loop
aas
xchg
out
movsl
das
stos
int3
fucomi
movsl
sub
inc
filds
add
ljmp
xor
cmp
and
das
pop
jp
mov
in
and
mov
dec
sti
stc
or
or
or
movsl
mov
test
xlat
mov
subl
imul
fildl
aam
movsb
lods
dec
sbb
cld
push
fwait
add
or
scas
xor
sbb
mov
push
testb
jae
cmpl
movsl
and
mov
push
dec
shr
sbb
stos
in
sbb
xor
hlt
mov
out
sub
xchg
fsubs
mov
and
add
add
mov
js
jle
xlat
sub
xchg
sbb
mov
push
shl
daa
cld
sbb
lea
nop
clc
aaa
test
js
iret
add
addb
jns
push
dec
cltd
jbe
mov
or
xorb
enter
movsb
mov
sbb
dec
sbb
jge
ljmp
popa
and
push
fbstp
add
mov
cmp
and
dec
pop
int
sahf
aas
mov
sbb
push
jle
mov
sub
fldenv
ret
cmpsl
mov
jne
fwait
push
and
mov
add
call
jmp
ffree
mov
mov
test
inc
inc
loop
into
xchg
fnsave
xlat
loopne
orb
mov
adc
decb
cmc
mov
adc
pop
jmp
popa
dec
xor
and
rorl
sub
add
sbb
xor
xchg
xor
sbb
mov
inc
adc
xor
cltd
loope
call
mov
push
cld
cmpsl
dec
mov
mov
std
in
cmc
and
shl
push
aam
mov
dec
dec
adc
mov
into
add
sti
shrl
adc
xor
and
xchg
enter
pop
sub
pop
jge
enter
sarb
sahf
dec
rcr
push
xchg
mov
pop
pop
out
xchg
push
adc
push
adc
notb
fs
jp
fnsave
fsubs
fwait
lcall
outsl
cmp
push
sub
push
sub
pop
or
push
cmc
pop
sbb
lret
mov
xor
les
enter
dec
mov
hlt
jmp
popf
sbb
xchg
jecxz
pop
mov
push
mov
inc
jns
add
pop
imul
mov
cmc
int
imul
lock
sub
test
out
mov
ds
or
gs
adc
and
ss
add
int
cmc
adcl
mov
stos
pop
or
out
jb
push
js
add
cmc
jge
ss
icebp
xor
stos
iret
sub
ret
popf
imul
add
add
jp
add
dec
jl
les
das
xchg
ret
shlb
lods
mov
enter
jmp
and
jl
lret
out
fistpl
push
int
shrl
cmp
dec
mov
outsl
pop
mov
add
xchg
dec
add
mov
add
sbb
setne
push
ja
pop
enter
pop
pop
fiaddl
mov
andnps
sub
outsl
mov
add
xlat
adc
xor
sbb
stos
jb
loop
pop
push
andnps
sbb
xchg
inc
mov
push
lock
mov
rolb
or
mov
test
jo
loopne
test
or
or
scas
scas
mov
fwait
dec
xor
inc
mov
pop
testb
int3
loop
stc
mov
add
mov
dec
xchg
cmp
add
daa
rolb
insl
out
mov
sarb
push
fcoml
dec
ljmp
cmp
xchg
sahf
dec
std
in
add
test
cwtl
lods
mov
add
mov
dec
add
loope
call
imul
cli
daa
test
mov
cld
adc
enter
in
add
push
add
fxch
cwtl
jmp
pop
cmc
jge
sbb
ret
inc
cmp
mov
out
push
mov
sti
push
cmp
mov
movsl
jbe
push
pop
lea
ds
inc
out
cmp
inc
cltd
lods
mov
xchg
add
xor
inc
arpl
out
inc
push
xchg
sub
jo
arpl
push
mov
lahf
push
setnp
sub
lods
fisubrs
fcmovnb
lret
pushf
push
pop
or
and
sub
and
add
lcall
lods
out
roll
insb
pop
stos
push
mov
cmp
int3
xor
push
adc
adc
jmp
lret
aaa
mov
test
insl
loop
sub
mov
fimull
mov
push
repz
addl
test
mov
mov
or
hlt
insl
xchg
aaa
mov
mov
pop
mov
clc
dec
add
add
xor
mov
add
cmp
add
dec
sub
test
add
insl
in
out
fldt
jge
ljmp
push
jg
push
test
sbb
pop
cmp
mov
sub
jo
mov
mov
push
xor
popa
jbe
in
xchg
add
dec
test
or
lods
fldl
iret
pushf
into
push
xor
ret
and
and
inc
movsb
stos
pop
xor
mov
dec
mov
push
cmpb
mov
mov
scas
mov
call
shll
scas
mov
in
lds
aas
pop
pop
sbb
xchg
jo
adc
sub
stos
and
cltd
pushf
or
sbbl
gs
sbb
sub
sbb
test
jmp
add
imul
sub
adc
ror
gs
mov
jp
jnp
push
fbld
lods
cmp
hlt
in
jl
push
insl
das
jle
mov
test
cmc
push
sub
ss
mov
stos
cmp
pop
mov
dec
and
dec
mov
xlat
xor
jmp
or
sub
je
pop
mov
mov
add
inc
insb
add
into
imul
cmp
sbb
mov
cmpsl
sbb
inc
les
push
in
sti
push
push
scas
icebp
out
inc
pusha
cmpsl
xor
jo
notb
lds
mov
ds
lods
inc
hlt
popa
cld
mov
mov
mov
mov
inc
cmp
jbe
shll
or
push
dec
push
movsl
cmp
lret
cmp
out
aad
xor
inc
push
cmp
inc
mull
cltd
mov
xor
push
stos
testb
push
ret
mov
mov
lcall
mov
jg
fcom
mov
es
xorb
mov
repnz
mov
test
jns
incl
adc
ds
xor
sbb
cmp
std
adc
mov
jae
jg
adc
jl
push
in
fadd
and
ret
test
mov
arpl
aam
cmp
inc
mov
ss
push
mov
and
adc
ret
sub
inc
cmpsb
cmp
or
jg
push
lahf
inc
lods
inc
xor
jg
out
idiv
mov
aaa
sbb
enter
cmpsb
inc
pop
lahf
pop
mov
mov
dec
xchg
or
sbb
dec
dec
js
mov
jge
and
rcl
std
stc
jns
xchg
cmp
pop
outsl
mov
lods
push
je
lcall
cmp
pop
mov
adc
nop
ds
pop
popf
ret
fwait
push
lret
adc
jbe
or
popa
out
outsb
mov
xchg
int3
add
cwtl
out
push
lea
lcall
cltd
sbb
pop
sbb
sbb
shlb
cltd
orl
jmp
xchg
cmpsl
divb
ds
out
imul
cmp
push
sub
jmp
xor
lret
sub
in
dec
cmc
sub
movsl
test
sbb
or
cmp
and
cmp
insl
dec
sbb
cli
push
clc
cmp
clc
dec
push
lds
xchg
and
filds
mov
jmp
outsb
sbb
pop
cmpsl
jb
dec
aad
mov
mov
icebp
push
stos
sbb
cmp
mov
and
lahf
jp
mov
hlt
popa
fs
sub
nop
mov
andb
pusha
sub
sub
outsb
mov
adc
ret
cmp
jae
faddl
clc
sub
jbe
push
out
lea
add
or
push
dec
mov
gs
ja
sub
in
mov
mov
cmc
bound
imul
mov
mov
ja
in
loopne
cli
ss
fwait
adc
mov
xor
adc
cmpsb
in
mov
fwait
xchg
mov
pop
fistpl
fimuls
sub
inc
jmp
add
fs
add
push
sahf
cmp
outsl
xchg
inc
xor
pop
xchg
adc
in
adc
in
push
pop
adc
sbb
lods
push
add
mov
fisubrl
shl
xor
cmp
sub
das
outsl
int3
out
cmc
rolb
mov
pop
jmp
call
xchg
daa
nop
cmp
imul
mov
pop
sbb
mov
out
ss
cli
jns
rclb
cmp
dec
pop
adc
dec
cld
out
or
pop
stos
or
and
rorl
js
ds
test
jge
or
fsubrl
xchg
sub
inc
mov
iret
out
fsubrs
mov
jne
or
push
insb
into
mov
mov
cmp
dec
sti
test
cli
test
mov
xchg
cmpsb
adc
dec
out
fcoml
and
cmp
in
mov
sbb
mov
adc
jecxz
lods
and
test
adc
sahf
fidivs
pop
mov
adc
adc
mov
jge
stc
or
aas
mov
test
lods
fwait
repnz
xor
xchg
incb
subl
mov
out
aam
insl
test
cmp
sbb
enter
inc
je
lods
imul
jns
les
mov
xchg
test
jecxz
mov
cmpb
push
icebp
mov
sub
xlat
insb
jnp
adcl
leave
js
out
sbb
popf
push
rdtsc
nop
push
repz
lret
call
push
dec
dec
push
and
push
jg
js
repz
pop
pop
mov
fwait
dec
sbb
mov
cmc
pop
mov
add
andl
pop
lods
ficoms
mov
outsb
sub
lods
add
sbb
mov
push
outsb
stos
adc
cmpsb
enter
adcb
lcall
sbb
jns
cltd
pusha
xlat
jg
test
sar
xchg
mov
test
jnp
loopne
pop
push
push
cltd
adc
scas
xor
dec
mov
in
adc
fisubrl
xor
jp
mov
test
mov
jg
int
into
sub
aam
je
sbb
lcall
fcmovbe
lret
movsb
sbbl
mov
or
pop
sub
mov
mov
sub
fdivl
and
jle
sahf
inc
into
in
dec
das
mov
mov
mov
cmc
nop
mov
pop
cmpsb
mov
inc
xchg
mov
adc
es
inc
sub
xchg
sbb
sarl
idivb
push
pmuludq
aas
scas
cli
sub
scas
cltd
sub
jb
daa
orb
jge
sub
mov
and
sub
sub
cld
movsl
loopne
pop
mov
push
lods
movsb
jg
pop
pop
push
imul
and
gs
dec
out
call
sub
xor
bound
xor
xchg
inc
out
push
pop
mov
and
imul
xchg
jno
xchg
out
gs
jle
dec
push
das
inc
or
dec
out
icebp
loope
lds
xor
or
mov
enter
cltd
pop
aas
lret
or
mov
jb
add
xchg
sbb
aas
mov
sti
stos
or
jno
ljmp
pop
sti
roll
xlat
mov
imul
xchg
es
dec
push
adc
sbb
ds
mov
and
fildll
outsb
xchg
dec
sbb
add
mov
push
pop
or
adc
mov
shlb
push
lret
inc
fsubr
push
jns
rorl
add
loop
xor
jg
pop
pop
das
outsb
lock
xlat
cmpsb
out
pop
movsl
and
jne
adc
mov
or
jp
lahf
adc
xor
loope
xor
sahf
mov
call
push
mov
rcrb
fnstsw
dec
inc
arpl
xor
je
aam
jp
xchg
xchg
sub
sub
inc
clc
cmpsb
outsb
int3
jl
xchg
leave
popf
jle
mov
mov
xchg
mov
ljmp
fimuls
add
jno
sbb
data16
xchg
sbb
popa
pop
idiv
insb
pop
push
bound
aas
sbb
cmp
cmpsl
xchg
rdmsr
fcmovbe
fwait
dec
sub
pop
mov
pop
inc
imul
dec
insl
fwait
pop
outsl
inc
in
push
shrl
stos
lds
mov
stos
and
sub
int
mov
or
das
ja
cmp
xor
int
in
xchg
push
pushf
jae
out
sarl
hlt
jmp
inc
in
das
jmp
jecxz
xor
xor
dec
js
loope
mov
test
xchg
jo
std
gs
fiaddl
push
stc
std
mov
mov
mov
xor
fimull
adc
inc
xor
stos
xchg
add
pop
pop
loopne
outsl
shrb
cmp
sbb
pop
fstpl
and
inc
jle
lahf
jne
jns
push
repnz
add
popa
rorb
dec
addl
inc
sbb
pop
push
pop
inc
mov
outsl
stc
notl
cmpsb
test
lods
pop
lds
mov
and
jbe
js
fstl
push
cmpsl
out
push
cmpsl
ret
dec
aam
adc
aas
cmc
adc
daa
jb
iret
out
aaa
inc
push
inc
in
mov
cs
mov
lods
xor
imul
imulb
push
lcall
xor
jbe
dec
lds
mov
xchg
mov
ret
lods
scas
popa
bound
aas
cmp
rcrl
dec
test
in
mov
cmpsb
cld
arpl
aas
xchg
adc
repnz
shll
dec
push
bound
mov
sub
jmp
sbb
hlt
js
mov
hlt
lcall
pusha
iret
cmp
es
aad
int3
incb
mov
lahf
xchg
xor
cmpsl
and
pop
push
sbb
jno
pushf
pop
mov
pushf
cmp
jno
cmp
or
add
push
cmp
cmp
xchg
sub
inc
jg
and
stos
outsl
bound
mov
cs
adc
mov
push
cwtl
lcall
out
divl
sbb
es
or
ret
push
arpl
enter
decb
cwtl
fs
pop
insb
cld
pusha
xchg
fidivs
aaa
inc
pop
push
mov
dec
push
lods
and
das
mov
cmpsl
stos
int3
in
push
mov
adc
fsubl
push
nop
xlat
inc
scas
loope
inc
in
lcall
xchg
cltd
push
cmp
adc
test
inc
pushf
pop
into
frstor
sbb
int
repz
pop
call
sub
in
lods
rol
lret
mov
mov
inc
pop
imul
adc
push
inc
imul
clc
mov
sub
inc
nop
fisubs
imul
clc
sbb
add
jae
xor
fwait
das
inc
fmul
mov
test
in
cmpsl
outsl
insb
sub
in
pop
pop
xchg
xlat
cmp
popf
cmc
int
sbb
jle
xchg
jecxz
or
aam
push
fsub
jno
mov
and
ljmp
cmp
fisubs
sub
leave
mov
add
xor
and
arpl
mov
jp
adc
sbb
mov
lock
sub
push
aam
lcall
sub
movsb
pop
cmc
xchg
mov
cld
and
mov
mov
test
inc
adc
popf
jo
movsb
orl
xchg
les
sar
mov
mov
sub
cmpsl
adc
push
xchg
dec
mov
lds
push
fucom
or
cld
into
cmp
mov
iret
ret
push
lock
dec
push
adc
dec
adc
ds
loope
fcoms
out
cltd
fdivrs
add
push
cmc
ds
jecxz
xchg
cmp
sub
cwtl
aam
xor
fsubrl
out
rcrb
mov
stc
incl
sti
scas
out
xlat
jae
inc
mov
push
rcrl
pop
rclb
dec
mov
js
jge
mov
dec
outsl
cld
or
cs
fstps
xchg
dec
or
sbb
out
daa
ja
or
pop
iret
sbb
inc
out
test
loopne
fbstp
ljmp
mov
mov
adc
xor
adc
pop
sbb
inc
jle
dec
push
mov
lahf
sti
pushf
or
test
pop
aaa
jnp
cwtl
data16
mov
or
andl
add
movsb
pop
mov
rol
aas
dec
dec
mov
or
cmp
insl
xor
or
push
iret
or
lods
loope
push
pop
aad
inc
jb
out
xor
decl
pop
cmp
xchg
lock
stos
xor
lahf
inc
push
pop
idiv
incl
inc
jle,pt
lds
add
repz
test
call
in
push
pop
adc
jle
movl
scas
adc
and
stc
outsl
sbb
cmpsb
pop
jb
js
mov
or
adc
jmp
lock
pop
repz
stos
sbb
mov
inc
push
in
push
test
lcall
sub
es
jnp
push
adcb
out
out
xchg
in
les
xchg
ds
rolb
cmp
scas
pop
jecxz
es
lods
xor
push
mov
lcall
outsb
shll
roll
ja
repz
clc
inc
push
mov
mov
cmp
outsb
xchg
xchg
mov
scas
push
outsl
cmp
daa
leave
mov
stc
pushfw
inc
pop
sub
rclb
and
aas
scas
jnp
push
adc
adc
jl
sbb
and
or
ss
xchg
dec
add
inc
dec
out
jmp
cmp
in
insl
sbb
lds
sbb
repnz
out
sarb
mov
cmp
ljmp
sbb
push
add
scas
dec
inc
subb
cld
mov
push
and
dec
add
pop
icebp
sbb
mov
movsb
outsb
insb
or
jl
or
push
cmc
mov
mov
xor
mov
out
cmp
pop
lret
jmp
outsb
fcmovnb
jbe
fs
push
or
pop
stos
xchg
mov
push
dec
sbb
enter
dec
jg
into
mov
adc
inc
cmpsb
mov
pop
out
divb
cmc
jmp
out
hlt
lds
xchg
dec
cmp
xchg
loop
mov
daa
mov
mov
jbe
jo
imul
sahf
outsb
icebp
ds
inc
into
jmp
dec
cmpsb
jecxz
xlat
inc
stc
xchg
pop
or
pop
hlt
cmovno
cmc
je
aad
adc
xor
testl
inc
mov
sub
xchg
sti
aaa
xchg
mov
push
out
jno
lock
pop
add
xor
cmp
mov
gs
aad
out
mov
sbb
sahf
cmp
data16
and
ds
mov
dec
fcoms
movsl
mov
pop
dec
sub
gs
test
int
push
clc
adc
rolb
jl
repnz
pusha
jmp
movsb
rcrl
push
inc
mov
inc
sahf
mov
in
loopne
ds
sbb
sub
imul
adc
adc
xchg
and
push
int
mov
xchg
push
ljmp
arpl
lock
ljmp
adc
js
mov
inc
adc
mov
cmpsl
dec
ror
loopne
test
pop
jb
movsl
lods
lds
push
sbbl
lds
adc
les
sub
addl
sub
xchg
rol
enter
adc
sahf
mov
mov
push
or
add
loop
dec
xor
adc
xor
add
scas
add
jns
mov
push
mov
inc
or
xchg
inc
loopne
xor
pop
sub
rcll
daa
arpl
mov
aad
sbb
out
fisubl
mov
mov
inc
aam
sub
xchg
mov
and
xchg
lret
pop
jbe
mov
test
pusha
imul
out
mov
divb
sub
jo
scas
xor
loop
xchg
push
cld
xchg
lahf
pop
xchg
mov
shr
es
inc
cmp
js
jne
fcmovu
loopne
jecxz
xlat
mov
rcrl
aad
mov
xchg
jo
sub
movsl
lahf
mov
push
mov
sbb
nop
shr
testl
stos
cmc
cmp
or
les
shlb
or
ja
data16
loop
jb
pop
lret
imul
push
xchg
rcll
aad
repz
cmp
out
fnstcw
mov
mov
jl
adc
and
int3
jmp
imul
repz
sub
pop
mov
jns
into
das
cwtl
mov
stos
test
cltd
adc
aad
xchg
mov
add
mov
adc
outsl
or
xorl
mov
pop
xchg
push
outsl
lods
dec
cltd
inc
xchg
or
inc
mov
cmp
cmp
inc
sbb
add
push
jbe
cmp
into
cmp
test
xor
sub
jmp
mov
aad
mov
push
stc
jl
push
or
loope
mov
push
mov
xchg
lret
sbb
pop
mov
dec
outsb
sub
fistl
stos
push
stos
mov
rcrb
mov
fidivrl
jb
out
dec
lret
mov
in
inc
dec
xlat
mov
popa
addr16
push
mov
jp
add
lds
lods
sbb
xchg
adc
cmp
xlat
rorb
dec
lds
loop
in
xor
es
std
inc
jg
fbstp
lock
adc
or
je
mov
jae
cmc
add
dec
inc
ss
nop
insb
adc
stos
mov
jmp
sub
pop
mov
imul
sbb
fidivl
xor
fidivrl
stc
add
fnstenv
dec
or
mov
jbe
mov
sub
and
mov
mov
fimuls
sub
dec
jg
clc
mov
cltd
in
movsb
xor
adc
push
mov
je
enter
cwtl
xor
pushf
decl
mov
xor
flds
sbb
xor
sbb
push
push
jp
mov
adc
add
jg
cmp
add
jne
pushf
call
cmp
sub
loope
aad
rcll
inc
loope
js
inc
insb
xlat
imul
jge
mov
sarb
push
xlat
mov
out
sub
sub
adc
adc
jnp
xchg
pop
mov
xlat
pushf
rcl
add
mov
xor
and
flds
or
push
aam
stos
ja
pop
clc
ret
rorb
xchg
xchg
inc
jecxz
popa
lea
or
mov
arpl
mov
loopne
pushf
push
or
push
inc
out
add
inc
into
iret
testl
jge
xchg
mov
push
cmpsl
xchg
jg
fmuls
lock
mov
jb
orb
pop
fisttps
pop
push
addr16
fnstsw
xlat
mov
stos
inc
sarb
test
mov
cmp
repz
daa
mov
and
pusha
xor
outsb
fs
or
or
mov
test
les
cwtl
jno
pop
pop
push
cmp
arpl
cmovns
jbe
xorl
stc
rcl
jns
add
push
outsb
negb
lods
fdivrs
ss
dec
movsl
inc
test
adc
add
sub
sbb
jbe
in
and
jle
xchg
push
jne
sbb
stc
js
cs
aad
in
mov
xchg
fcomi
insl
jnp
sarb
xlat
jge
and
mov
and
push
std
stos
leave
loopne
cs
and
daa
cs
ficoml
hlt
imul
sbb
test
inc
popa
shll
xchg
fwait
push
cmp
les
enter
mov
lock
in
shll
int3
fisubs
jecxz
movsb
dec
add
mov
loope
push
std
push
cmp
inc
test
jae
cmp
add
aam
mov
push
push
hlt
dec
icebp
and
stc
jmp
pop
pushf
dec
and
add
and
cmp
inc
mov
inc
dec
clc
xor
jo
mov
or
and
add
sub
in
test
pop
subb
jne
mul
nop
push
scas
mov
mov
push
push
shll
fsubrl
push
scas
jl
scas
cwtl
test
xor
push
outsb
pop
jbe
mov
imul
sub
push
push
iret
sarb
jmp
sbb
mov
iret
pop
jge
mov
lea
dec
test
pop
or
test
mov
mov
lods
or
mov
rorl
mov
out
push
out
mov
xor
mov
stos
pop
push
mov
and
mov
shll
bound
sbb
or
inc
jmp
mov
xorl
push
das
or
mov
jno
sub
mov
mov
daa
adc
dec
je
push
add
xchg
das
insl
rcll
mov
jl
jl
test
adc
add
cmp
stos
or
inc
inc
aaa
or
mov
sahf
or
inc
mov
cld
iret
fwait
out
mov
lret
arpl
les
sbb
int
shlb
pop
mov
dec
mov
addr16
push
rclb
in
dec
int
cmp
xor
mov
push
lahf
bound
jp
lcall
mov
mov
psubb
dec
mov
or
adcb
sub
cli
mov
lret
out
add
cmp
jne
in
mov
mov
call
loope
lahf
mov
js
rcrl
fistl
mov
roll
subb
test
jg
jmp
in
mov
test
push
out
jo
mov
inc
or
shl
stos
stos
fiaddl
outsl
dec
lahf
push
mov
push
or
loop
pop
or
dec
stos
and
inc
iret
insb
movsl
loope
push
aad
inc
mov
xchg
icebp
test
iret
add
pop
arpl
fmuls
xor
adc
inc
mov
push
pop
adc
adc
mov
rorb
ja
das
adc
adc
dec
pop
mov
adc
add
imul
cwtl
je
push
scas
out
cmp
lds
leave
test
mov
mov
push
xchg
adc
ljmpw
mov
jnp
mov
sub
dec
mov
adc
hlt
loopne
in
add
imul
and
adc
rolb
divl
sub
in
jg
lret
inc
shll
dec
jo
jb
adc
push
sbb
aas
ja
rorl
cmc
imul
pop
addr16
fistps
sub
nop
sti
mov
pop
mov
cs
mov
mov
xorb
loopne
push
iret
pop
push
adc
imul
adc
lods
in
fistpll
add
sbb
outsb
fcmovne
mov
xchg
das
popf
cmpsb
lock
lock
pop
in
and
mov
add
sub
and
xchg
les
int
popa
shll
and
insl
jno
mov
aam
push
jns
cwtl
adc
in
push
lahf
xchg
iret
pop
scas
mov
jge
xchg
stos
int3
sbbb
dec
dec
scas
add
xlat
rcrl
add
lea
cmp
pop
and
xor
jmp
mov
and
test
push
mov
ss
cmpsb
mov
mov
div
dec
mov
imul
xchg
stos
jle
iret
jmp
jp
cmp
out
or
sti
mov
pop
and
fwait
mov
mov
fwait
mov
loop
rorl
out
andl
xor
and
jne
test
mov
push
cmp
mov
xchg
adc
pop
mov
mov
xchg
int
mov
cli
push
xor
cmp
cmp
fisubrs
push
out
inc
jno
aaa
add
neg
scas
out
das
and
dec
push
je
xlat
pop
insb
pusha
sbb
add
mov
popf
xchg
into
fwait
stc
mov
sahf
xchg
fnstsw
mov
adc
jmp
movq
xchg
dec
push
xchg
mov
jmp
push
addl
jo
push
mov
or
subb
pusha
data16
mov
sub
jp
push
filds
pop
insb
in
pop
les
xchg
cmpb
jb
out
addr16
add
push
rol
in
lock
inc
lahf
adc
mov
repnz
sub
je
pop
xor
dec
mov
add
mov
mov
in
add
jecxz
push
mov
inc
or
rcl
mov
in
pop
dec
adc
xor
mov
and
js
int3
aas
in
push
xchg
insb
ljmp
rol
cmp
add
outsl
xlat
les
sub
jns
sbb
ds
xchg
add
sub
adc
mov
jns
jb
in
enter
lahf
mov
cltd
xor
lahf
sbb
mov
enter
xor
mov
pop
or
lret
add
and
adc
xorl
in
fildl
dec
mov
xchg
enter
adc
aad
mov
mov
enter
push
inc
cmp
inc
popfw
test
rolb
dec
repnz
push
pushw
jbe
movb
addr16
aad
push
cmp
cmc
mov
push
inc
stos
in
imul
add
and
inc
std
and
ljmp
lcall
loop
push
pop
mov
jae
sbb
movsb
rolb
add
scas
jmp
lods
sub
jle
imulb
leave
test
dec
cltd
pusha
je
and
jnp
movsb
loop
test
insb
gs
sbb
inc
sbb
popa
sub
adc
addr16
shll
add
dec
add
stos
int
movsb
fistpll
dec
mov
jle
xchg
cmpsb
in
adc
inc
xor
loopne
int
pop
mov
test
fiadds
jge
and
mov
cwtl
sub
xchg
dec
adc
and
sbb
pop
rorl
push
movsb
xchg
cwtl
dec
repnz
or
sbb
repnz
add
in
aas
sbb
mov
inc
shr
pop
insl
enter
repnz
cmp
mov
pop
test
adc
add
adc
cmpsl
mov
mov
icebp
xor
ljmp
sbbl
xchg
lock
jne
pop
pop
sbb
mov
sub
ja
loope
lods
xchg
inc
xchg
aam
es
stos
xchg
rorb
jbe
or
negb
sbb
and
nop
xchg
lods
pop
je
inc
jnp
pop
jp
adc
push
push
dec
mov
inc
xorl
sbb
push
imul
lcall
mov
popf
cmp
xbegin
loopne
lock
mov
cli
shrl
mov
dec
enter
mov
dec
icebp
rcrb
xchg
inc
in
shlb
inc
shlb
xchg
jmp
ljmp
in
cmp
add
dec
test
scas
lret
dec
jb
aad
xor
or
add
add
ja
push
jb
loopne
cmp
mov
lahf
inc
ljmp
mov
inc
mov
cmp
cld
cmp
mov
ficoms
add
push
das
outsb
test
out
lcall
movsb
inc
or
aad
or
xchg
inc
add
mov
pop
dec
sahf
leave
dec
hlt
fnstenv
mov
dec
shr
cltd
mov
in
mov
and
cwtl
jmp
push
hlt
pop
lods
push
scas
add
mov
cwtl
mov
mov
inc
xor
filds
and
pop
in
mov
pop
pop
icebp
nop
fisttpl
push
push
and
movsb
aas
mov
mov
les
sub
fmull
cmp
sub
icebp
jnp
mov
cmpsl
jno
mov
cmc
icebp
mov
lds
xor
and
fdivrs
js
mov
fwait
xor
lret
cmc
movsl
mov
inc
mov
je
push
or
xor
test
stos
mov
mov
inc
sahf
nop
mov
push
stos
mov
fistps
test
cmp
xor
das
dec
pop
adc
dec
pop
ret
mov
data16
xor
jecxz
add
pop
out
stos
mov
mov
add
xlat
das
fwait
sub
pop
or
mov
sub
sub
adc
addr16
repz
xor
fisubrs
and
pop
xchg
iret
orl
or
enter
sti
jmp
loop
test
pop
das
and
dec
lcall
inc
mov
repnz
xor
loope
or
mov
cmp
cli
dec
fbld
jb
lret
stos
jae
jecxz
or
adc
test
adc
inc
sub
mov
xor
pushl
jne
jb
aas
pusha
adc
pop
jne
cli
cmc
dec
clc
fnstsw
cmpsb
stc
push
shrb
or
sub
fcmovbe
scas
pop
sub
sub
dec
movsb
in
xor
push
mov
jne
ds
mov
ror
dec
jae
mov
xor
bnd
jne
inc
pop
mov
adcl
int
add
cmp
bound
xchg
loopne
loopne
lds
push
std
je
loopne
sub
inc
sub
nop
ss
lds
nop
inc
sbb
ss
sub
cmc
inc
lods
leave
int3
mov
arpl
xor
adc
out
jg
push
xchg
arpl
stc
out
ja
hlt
cmp
cmp
xchg
lcall
ret
loop
xor
js
add
mov
leave
push
arpl
xchg
ljmp
daa
repnz
push
in
jns
enter
shl
imul
cvtps2pi
mov
push
push
rcrl
leave
lds
hlt
sarl
out
mov
aam
adc
mov
adc
xchg
xchg
repnz
mov
mov
mov
orl
dec
jecxz
daa
lret
and
into
shlb
jp,pn
arpl
in
divb
imul
add
aas
jp
mov
mov
cmpb
lods
addr16
inc
xor
sub
insl
xor
jne
jne
sbbb
and
cmp
rcrb
mov
shl
jp
mov
pop
in
add
inc
rorl
insl
push
sub
mov
fmulp
movsl
test
nop
pop
nop
ret
xor
cmp
lds
cmp
push
sbb
out
call
js
std
stos
scas
push
xchg
aaa
rcrb
adc
xorb
jl
scas
adc
add
std
or
mov
std
adc
add
shlb
xor
outsb
aad
xlat
aaa
sbb
pop
xor
and
popa
add
hlt
stc
jmp
push
sbb
or
cli
xchg
push
popa
cmp
pop
aam
lea
lret
lret
mov
ret
push
cltd
daa
into
xor
mov
test
clc
jb
fidivs
push
xor
dec
mov
push
dec
loopne
cwtl
jne
repnz
les
cltd
adc
outsl
jns
xchg
in
mov
xor
je
loop
jbe
mov
mov
nop
into
mov
xchg
ljmp
fwait
push
test
shll
aas
cmp
into
faddl
mov
insl
mov
push
jno
shlb
mov
fcomps
pop
xor
xchg
or
mov
xchg
sbb
cmp
jnp
pop
pusha
test
loopne
jge
mov
int3
adc
sub
clc
pop
inc
aas
pop
lds
or
je
mov
mov
adc
jo
mov
orb
jmp
xor
cmp
idiv
ds
leave
sub
fdivrs
dec
or
sbb
sbb
fs
ljmp
aad
divb
iret
push
loope
push
shll
xchg
push
arpl
xor
pushf
sahf
inc
bound
mov
stos
dec
lds
mov
jl
inc
sub
add
jbe
aad
movsl
movsl
pop
shll
imul
js
sub
pop
pop
sbb
out
in
lods
icebp
mov
nop
inc
data16
adc
pop
insb
imul
cmp
mov
adc
mov
mov
shll
out
mov
cwtl
iret
out
sub
lret
cwtl
shll
add
pop
sbb
xchg
jle
jb
cs
cmpsb
lods
fisttps
pop
sub
ds
lea
pop
inc
call
and
pop
stc
cltd
int
ljmp
rcrl
or
sbbb
and
popa
test
stc
cmc
add
push
push
popa
mov
push
jnp
adc
insl
scas
jg
daa
add
pop
pop
jmp
cmp
add
insb
jl
mov
gs
lahf
lock
pop
inc
lds
adc
loope
add
mov
popf
inc
pop
loope
mov
pop
adc
ljmp
add
and
add
jmp
sub
fidivrl
push
cmpsl
test
aad
mov
orl
fnstsw
aam
cmp
push
sbb
lock
push
jmp
adc
int3
outsb
rol
test
rcll
pop
clc
adc
and
out
clc
mov
sbb
lret
sub
sub
add
es
sbb
push
lds
mov
out
mov
mov
mov
aam
jecxz
mov
lahf
pop
jle
mov
cmp
xchg
push
mov
sub
daa
repnz
push
push
aaa
jge
popa
movsl
mov
or
mov
ljmp
jne
or
mov
fisubrs
js
pop
jge
sbb
xchg
loopne
add
out
mov
stc
dec
shll
and
imul
jae
enter
mov
jnp
stos
dec
adc
inc
cmp
mov
sbb
sub
add
inc
ss
inc
das
mov
push
push
inc
mov
pusha
stos
jnp
daa
into
push
ja
xor
dec
out
cmp
enter
arpl
arpl
cs
pusha
cmp
adc
ret
pop
enter
cmc
fidivl
push
movsb
add
popa
add
adc
cltd
jns
nop
rcrl
and
repz
push
adc
sub
xor
addl
pop
jmp
add
sbb
mov
testb
es
sahf
cltd
push
ret
scas
lcall
jmp
dec
mov
inc
stc
jmp
clc
lret
in
outsl
insl
sbb
aaa
iret
mov
and
popf
jae
movsb
sub
scas
fsubs
sbb
dec
pop
cltd
stos
cli
popa
jo
stos
cmp
aam
mov
dec
sbb
in
jae
je
sbb
mov
aas
fsubp
and
cmp
mov
pushf
pop
popa
inc
cltd
inc
push
out
xor
xchg
daa
or
std
add
inc
daa
or
jecxz
jmp
addr16
push
cld
in
push
xlat
lea
jne
or
and
mov
movsl
lea
dec
jbe
bound
push
imulb
jg
into
jecxz
or
mov
jne
adc
add
xchg
jl
sbb
jmp
jge
test
mov
test
rorl
sarl
out
xor
mov
lcall
cli
pusha
jne
stc
mov
dec
out
xchg
mov
outsb
mov
data16
jecxz
test
loope
pop
jecxz
movsl
cmp
cmp
pop
roll
dec
pusha
xchg
add
mov
sbb
push
pop
xchg
pop
push
rcrl
xor
pusha
aad
xchg
xor
out
stos
add
pop
fs
mov
cld
lds
sub
cli
dec
stc
pop
dec
out
outsb
inc
jnp
or
cmp
movsb
in
inc
pop
in
test
inc
ds
outsl
xorl
cwtl
test
cli
inc
fstpt
mov
push
mov
ds
in
sub
sbb
jno
loopne
pushw
out
in
in
lret
jge
inc
mov
sub
jnp
mov
fwait
lods
jae
mov
cmp
dec
jnp
adc
das
arpl
push
mov
add
inc
movsb
leave
call
sbb
push
imul
in
js
ss
jb
fisubrl
add
push
mov
mov
jp
mov
mov
fidivs
xchg
jb
inc
shlb
inc
and
mov
dec
mov
xor
push
scas
cmc
aaa
xchg
pop
loopne
lods
dec
imul
sub
out
add
cmp
xchg
je
test
es
loop
cmpsl
jno
mull
out
ret
leave
lret
sbb
lods
mov
mov
imul
push
pusha
sbb
or
mov
pop
clc
fwait
add
xchg
push
shlb
mov
sbb
pop
outsl
popf
push
movsl
pop
and
xchg
in
mov
repnz
in
lds
cld
sub
dec
mov
and
xchg
test
lock
std
daa
mov
mov
xor
cmp
inc
mov
pop
jbe
or
mov
push
lods
mov
mov
pop
jmp
sti
fdiv
nop
imul
xor
mov
shll
lods
sbb
insb
push
outsl
mov
or
mov
les
xchg
js
jb
mov
lods
ret
clc
lods
mov
lods
pusha
nop
aaa
shll
mov
fidivrl
mov
repz
jl
adc
js
jp
shll
dec
xor
imul
stos
clc
inc
int3
cmp
lret
dec
mov
fiaddl
lock
push
rcl
pop
lds
push
adc
in
movsb
rcrl
daa
mov
pop
js
push
push
add
push
fisttpl
lretw
lret
mov
loopne
dec
cmp
ss
push
fimull
xchg
mov
cmp
enter
mov
mov
mov
sbb
fisttps
rorl
ljmp
js
rep
shlb
or
xchg
fnstsw
mov
push
cld
dec
inc
jnp
adc
rclb
insb
dec
sbb
shrl
icebp
std
out
iret
lods
xchg
sub
jae
sub
xor
lret
arpl
or
imul
movl
sbb
mov
pop
jno
into
inc
cli
loopne
jne
push
clc
movsl
mov
mov
add
fcmovbe
jo
ret
repz
add
out
sahf
int
shll
push
movsl
cltd
mov
pop
pushf
out
cmp
add
pop
pop
xchg
ret
add
jne
lods
jp
mov
push
and
rorl
das
pop
daa
je
push
sbb
pop
in
andl
cmpsb
jne
xor
repz
mov
pop
push
fcmovnu
lret
mov
push
ror
jnp
mov
lcall
pusha
ds
pop
movsl
xor
shlb
outsl
push
sbbb
arpl
cmc
or
pop
mov
sbb
lret
mov
shl
sbb
or
aad
les
into
sbb
mov
scas
aaa
dec
dec
test
push
jbe
xor
cmpsb
xor
add
mov
jb
bound
lahf
movb
add
stos
cli
outsb
or
pop
or
leave
dec
cmp
arpl
xor
pop
pop
lcall
jecxz
pop
pop
mov
scas
popf
jg
push
or
xchg
addl
lock
out
clc
shl
pop
fmuls
cmp
roll
xchg
or
mov
das
clc
adc
fcompl
andb
fnstcw
and
sti
add
xor
adc
fisubs
cmpsb
lret
xor
repz
add
rorb
cli
pusha
aam
decb
jnp
cmpsb
int3
scas
xchg
lret
sbb
mov
cmp
or
out
outsl
lret
mov
lahf
dec
call
dec
jge
ja
sbb
stos
mov
jp
inc
std
movsl
add
jl
adc
mov
xchg
pop
icebp
sub
sbb
int3
dec
and
out
pop
cmc
fnstcw
add
xchg
bound
mov
adc
dec
aas
dec
inc
das
jg
loope
add
mov
jle
shll
loope
lret
in
jmp
pop
repz
adc
fucomp
push
pop
jmp
adc
negl
in
lahf
insb
stos
xchg
mov
pop
pop
jg
add
fcomps
cmp
mov
xlat
lahf
jbe
leave
out
test
push
mov
test
int3
mov
cmp
inc
cld
or
adc
push
aam
leave
mov
and
inc
adc
xchg
push
add
ljmp
pop
js
inc
pop
xchg
lret
lods
add
mov
cmpsb
icebp
jae
ljmp
daa
cmp
push
les
adc
test
mov
cli
scas
ja
loopne
jg
add
cmc
cmp
loope
sbb
dec
pop
shll
jns
and
enter
xor
insb
mov
jmp
sbb
subb
aad
xor
xchg
pop
push
pop
iret
call
and
js
lret
jmp
xor
clc
int3
push
sub
inc
pop
out
inc
sub
inc
jnp
jae
shll
xorb
adc
adc
mov
cmp
and
fnsave
xchg
push
mov
loop
pop
sbb
imulb
aas
inc
decl
jecxz
enter
mov
add
lret
cwtl
das
flds
jl
loope
push
mov
dec
fimull
mov
mov
cs
mov
mov
int3
mov
gs
mov
and
sahf
jo
sub
lea
into
mov
out
addr16
lahf
sbb
cmpsb
int
jbe
mov
sbb
cmc
lret
mov
mov
pop
fdivs
dec
lea
sbb
test
subb
fildll
or
lods
test
mov
shrl
mov
scas
mov
stc
xchg
addr16
fisubl
and
mov
jg
sub
int
loope
int3
cwtl
mov
ret
rcrb
sbb
inc
stos
outsb
mov
sbbb
imul
mov
cmp
sbb
ror
mov
mov
call
fildl
stos
mov
sahf
or
sub
sar
cli
call
mov
ret
leave
sbb
icebp
js
sub
inc
scas
cmp
sti
loop
hlt
mov
ljmp
lret
cmc
arpl
xor
out
add
inc
test
sbb
test
xor
stc
imul
into
mov
mov
adc
clc
xchg
gs
cmp
jnp
mov
mov
mov
pop
xchg
cld
js
js
pop
add
cmc
ror
xchg
xchg
xchg
cmp
out
pop
adc
push
mov
xor
es
adc
cmp
cltd
mov
inc
mov
jne
out
iret
mov
icebp
mov
cmp
fwait
push
into
mov
int
jno
sbb
pop
mov
fidivrs
inc
sti
fadd
fldcw
lock
add
xor
arpl
out
iret
xchg
ret
sub
into
ja
push
push
adc
push
mov
into
push
sbb
ljmp
xor
fdivr
inc
imul
pop
push
clc
lea
mov
and
add
mov
inc
aaa
dec
mov
sti
sbb
sbb
add
mov
icebp
ljmp
arpl
sub
add
mov
jne
push
fcmovnbe
fwait
xlat
or
in
daa
data16
fisubs
inc
pop
lds
ret
and
icebp
fwait
dec
dec
mov
mov
cmp
mov
adc
mov
inc
scas
frstor
xor
sbb
shrl
add
pushf
mov
or
inc
add
mov
pop
mov
js
mov
lods
dec
imul
in
out
pop
rcrb
mov
out
sbb
push
fisubrl
icebp
in
dec
xchg
lds
mov
mov
mov
sub
xor
cmpb
gs
lahf
sbb
xor
cwtl
insb
or
orl
fxam
lret
and
inc
dec
mov
clc
xchg
sbb
pop
std
aas
xor
popa
xchg
xor
fildl
test
mov
cltd
mov
lea
cmp
insl
jns
adc
xor
inc
jmp
stos
dec
test
andb
xor
lods
xor
ja
add
push
fs
xchg
cmc
in
jbe
push
sarl
imul
sub
and
xchg
rclb
jp
dec
adc
mov
cmp
jno
or
fildll
outsb
jne
imul
imul
mov
push
push
xchg
xchg
dec
adc
sbb
mov
adc
ret
pusha
shlb
sbb
inc
mov
movsl
cwtl
add
aas
mov
in
jno
jo
loop
lods
call
notb
hlt
imul
addr16
enter
lock
mov
pop
or
mov
mov
pop
inc
mov
out
addr16
int3
jbe
mov
jg
cmpsb
mov
mov
pushf
mov
mov
lcall
push
mov
iret
loopne
cmp
cmp
mov
inc
imul
pop
cmc
ss
add
jp
insl
and
shrb
sahf
dec
dec
sti
neg
jge
arpl
mov
enter
push
loopne
leave
add
adc
imul
pop
mov
or
mov
in
sbb
pop
xchg
ja
mov
ss
iret
ss
fstps
lods
mov
xor
jnp
adc
fs
repz
mov
loopne
pmaddwd
out
dec
push
or
xor
testb
mov
sahf
mov
leave
lahf
xchg
ds
outsl
into
jae
aam
cmpsl
loopne
jnp
dec
add
jge
xchg
in
call
xor
or
daa
sbb
or
sti
or
sub
orl
notb
mov
pop
push
dec
jecxz
pop
imul
inc
fwait
loope
or
adc
mov
inc
out
shlb
dec
test
mov
cmp
jne
cwtl
dec
cmp
fs
mov
mov
shrl
cmpsl
xchg
add
sub
iret
sub
mov
push
jl
int3
out
inc
rcr
inc
adc
popf
fs
loopne
mov
call
in
cmp
ljmp
inc
lock
dec
or
in
addb
imul
fucomip
pop
mov
pusha
xor
in
add
sti
into
jne
cmp
or
stos
test
popf
push
les
push
push
in
ret
fsubrl
cmp
mov
aas
hlt
mov
in
lock
call
lock
pop
pop
stos
iret
pusha
push
or
mov
fldcw
bound
inc
sbb
jbe
mov
movsb
mov
fs
repz
xor
std
cld
out
testl
ret
dec
cld
data16
inc
in
shll
scas
roll
popa
xadd
jl
dec
mov
jo
inc
mov
push
jae
xchg
cltd
sub
int3
add
cld
add
lret
ja
js
sahf
add
ss
out
dec
jg
mov
pusha
pusha
mov
pop
xor
fistl
mov
imull
std
xor
add
out
xor
rorl
xchg
jmp
push
push
arpl
scas
sub
repnz
mov
je
xchg
cmpsl
rorl
out
push
jb
push
xchg
ret
cmp
mov
movsb
or
outsb
add
imul
mov
cmp
sub
stos
adc
movsl
test
jo
mov
jge
mov
lock
fs
xchg
into
aaa
xor
push
mov
mov
xlat
out
push
pop
ja
lea
arpl
outsl
push
add
ret
and
adc
fldt
jle
add
xor
test
js
ret
lods
mov
pop
inc
stos
xchg
les
sub
imul
in
fistl
inc
lock
mov
xor
pushf
xor
cmpsb
xchg
or
jmp
fadd
lods
add
pop
out
aaa
aam
rcll
sbb
xor
and
rcl
jge
or
mov
bound
sub
popa
sti
fildll
jno
lahf
fldl
mov
jo
loopne
mov
notl
loopne
out
mov
pushf
inc
stc
in
scas
cmc
lret
lock
inc
pop
in
inc
leave
adc
movsb
stos
xor
loope
jne
sbb
cs
loope
jecxz
pop
mov
sbb
mov
aad
xchg
adc
in
or
xor
cld
mov
fcoms
mov
add
dec
lret
out
movsl
xor
cli
add
xchg
mov
mov
xor
add
jnp
addr16
inc
sbb
out
es
outsb
pop
or
imul
lret
mov
pop
cmp
imul
mov
lds
ret
xchg
jo
or
aam
sub
into
pop
xor
pop
fidivrl
cmpsl
in
push
pop
insb
add
pusha
sub
xchg
xor
adc
mov
test
mov
fcompl
insb
std
sub
scas
jae
inc
and
jp
add
out
lret
dec
stos
inc
cli
es
cwtl
pop
push
or
shlb
fstpt
jg
jo
enter
stos
pop
or
adc
pusha
add
scas
jmp
andl
cmp
stos
push
outsb
sub
sbbl
jg
add
add
in
mov
popa
lods
add
fxch
ret
sub
push
cmpsb
sub
jle
sub
testl
test
xorb
cli
mov
or
mov
fwait
cmp
push
rcrl
gs
sbb
clc
push
clc
cmp
pushf
lock
adc
adc
ss
and
pop
inc
jb
fcomip
aaa
cmp
or
lods
sahf
std
scas
inc
sub
mov
xchg
sarb
int
xor
mov
or
adc
rdpmc
lock
mov
cmpb
repz
call
sbb
inc
clc
fwait
dec
push
add
and
inc
mov
dec
jecxz
pop
push
aas
or
or
popa
testb
movsl
loopne
jo
fwait
xchg
pop
cmpl
xchg
cmpsb
mov
fldt
leave
sbb
popf
aas
sbb
popa
mov
xor
mov
lret
ret
pop
stc
arpl
add
adc
pop
leave
jnp
rolb
xchg
pusha
dec
add
jae
push
xor
in
fisttpl
out
adcb
or
dec
push
sbb
push
cmp
inc
mov
pop
jge
mov
lret
jb
sbb
mov
sub
fsubl
pop
xchg
lea
gs
add
mov
imul
xlat
mov
adc
and
movsb
imul
add
iret
inc
out
daa
xchg
sub
enter
push
xor
mov
sahf
cmp
and
mov
dec
mov
pop
in
ficoml
repz
push
aad
pusha
push
sub
rcl
clc
push
push
and
jge
imul
pusha
cmp
xchg
mov
cltd
jge
xchg
bnd
jnp
jge
mov
out
movl
cs
adc
push
lods
iret
pop
cmp
xor
fldl
sti
push
add
or
sub
loopne
xchg
jno
cmp
cmp
xlat
mov
mov
jnp
ret
sub
dec
sub
xchg
lret
adc
sbb
xchg
jl
push
xchg
nop
jb
adc
aas
push
repz
pushf
aas
xchg
lods
imul
shl
cwtl
ret
fsubrs
mov
mov
addl
aaa
cmpsb
or
subl
mov
jecxz
or
pop
mov
mov
mov
daa
in
push
jbe
pop
subl
mov
or
js
and
flds
push
xchg
in
test
orb
push
das
loopne
cs
lea
rclb
cwtl
cmp
fwait
or
jge
inc
rcr
lock
loope
mov
jb
and
daa
sub
lods
fwait
cmp
inc
inc
inc
outsb
aam
pop
jecxz
dec
scas
mov
mov
mov
jge
mov
or
inc
aam
pop
xor
push
jge
scas
lods
push
jp
sub
dec
and
mov
out
ret
pop
mov
fstpt
shrl
adc
cmp
cmp
bound
les
sbb
pushf
or
sbb
aad
mov
inc
hlt
inc
repz
mov
mov
popa
bound
insl
xor
popa
outsl
aam
adc
out
mov
add
xchg
rcll
hlt
add
test
rcr
sub
pop
fwait
cmp
inc
in
xlat
mov
jg
jns
call
xor
stc
in
mov
adcl
pop
inc
xchg
xor
jns
mov
xor
lret
repz
mov
push
push
jns
cmpsb
sub
addl
and
sarb
push
jno
outsl
in
sahf
push
fistl
xor
pop
movsl
adc
movsb
out
arpl
and
imul
push
sub
fistps
sbb
jo
mov
cmc
inc
sub
mov
cmp
adcl
add
pop
cltd
ret
mov
int3
mov
leave
push
mov
mov
int
xor
jo
xor
xor
dec
ljmp
lock
aaa
adc
push
mov
les
dec
jns
mov
mov
mov
push
mov
pop
jo
pop
pusha
mov
addr16
and
sub
outsb
loop
mov
mov
inc
cmc
mov
fwait
sti
lods
mov
jecxz
jg
cmp
sub
cmp
insl
lea
xor
fisttps
mov
mov
xor
shrl
add
add
int3
lods
cwtl
popa
cmp
pop
sub
mov
push
inc
mov
shrl
sbb
aas
mov
dec
cmp
push
or
pop
pop
xadd
call
xchg
mov
xchg
ss
in
or
ss
xchg
mov
push
lods
mov
lods
adcb
pop
nop
dec
mov
adc
cmp
dec
jns
xor
sbb
in
cwtl
in
jno
add
int
xchg
xorb
xor
test
testl
mov
cmp
shr
add
jp
jne
mov
insl
rcr
movsl
aam
xchg
mov
cld
adc
rorl
cli
mov
push
pop
imul
or
jg
je
icebp
mov
mov
mov
rol
sbb
jns
cmp
lret
clc
xlat
out
rcl
js
movsb
sub
push
negb
pop
pop
push
jle
mov
sbb
fbstp
inc
lcall
adc
cmpl
sub
inc
sti
xchg
sbbl
test
push
mov
fldt
out
subl
mov
or
xchg
mov
push
add
xlat
int
loopne
jnp
push
sbb
das
fwait
popf
and
negl
inc
pop
xchg
push
pushf
pop
push
outsl
leave
push
cmpsb
lret
jmp
ror
dec
lods
and
lret
rolb
pop
mov
xchg
add
sbb
xchg
aad
pop
scas
scas
adc
rclb
inc
or
cmc
add
cmp
and
stos
mov
sub
or
or
out
sbb
dec
inc
cmp
push
inc
iret
add
mov
pop
ljmp
int
dec
jnp
push
dec
sub
mov
mov
jmp
filds
lea
jecxz
outsl
insb
mov
sub
jmp
push
lods
or
jle
mov
or
call
push
ljmp
test
and
jp
lret
xchg
and
cwtl
loopnew
insl
lret
cld
adc
add
insb
fldenv
mov
or
adc
pop
mov
xchg
sbbb
jae
stos
test
mov
sub
inc
mov
jp
mov
cs
hlt
mov
mov
xor
xchg
dec
into
sbb
jecxz
xchg
pop
dec
xchg
sub
cltd
jmp
pop
jne
fadds
push
test
leave
pop
push
push
outsl
pop
xchg
mov
ss
and
jge
out
shl
dec
xor
int3
sbb
into
cltd
add
xchg
sub
cmp
push
and
pop
xor
mov
jnp
xor
pop
xor
insb
dec
imul
js
aas
dec
outsl
jae
sub
jg
out
gs
pop
mov
lea
lods
inc
cmpsb
cmp
pop
xchg
dec
scas
xor
push
xchg
inc
or
clc
jl
jnp
and
subb
jmp
test
jge
or
cmp
ds
aaa
hlt
xor
imul
mov
fiadds
lods
mov
dec
or
push
in
or
fidivs
push
stos
push
pop
insl
xorl
out
pushf
add
imul
jge
lods
or
addb
mov
push
movsl
inc
adc
pand
movsl
pop
repz
cwtl
ret
lahf
fldcw
xchg
add
lahf
cmpsb
es
sahf
mov
cwtl
inc
jbe
loope
scas
cmp
sti
sar
mov
pusha
xchg
dec
orb
icebp
vpaddusb
das
adc
aam
loope
shl
push
imulb
gs
inc
mov
adc
sub
jecxz
or
mov
jns
adc
mov
hlt
lcall
mov
lcall
lret
fbstp
pop
push
inc
mov
or
inc
or
fdivrs
lcall
jp
hlt
ror
xchg
jno
push
stos
xorl
inc
jns
xor
fdivrs
and
mov
lahf
mov
test
leave
jge
add
clc
sub
ret
cltd
hlt
sbb
clc
mov
jmp
cmp
sub
fiaddl
xchg
jne
cmp
test
jne
jmp
xchg
sbb
mov
adc
mov
fildl
push
mov
int
cwtl
jg
cmpsb
roll
xchg
xchg
and
pop
adc
insl
mov
sbb
bound
icebp
icebp
arpl
mov
cwtl
jl
mov
push
inc
xchg
jno
mov
adc
and
mov
mov
sub
mov
mov
andl
add
and
cli
mov
movq
mov
ret
mov
xchg
pop
bound
ret
cltd
rclb
cmp
test
mov
out
xor
loopne
mul
out
xor
idivb
add
xchg
sub
cld
sbb
and
icebp
shll
ss
sub
xor
add
mov
adc
xor
and
cltd
dec
cltd
daa
mov
enter
jo
xchg
push
mov
mov
sbb
pop
shlb
push
mov
shl
aas
lret
or
sub
lock
jecxz
call
aaa
or
movsb
pop
subb
mov
and
popa
cmp
push
shrl
mov
shll
mov
icebp
ja
push
sbb
or
iret
test
test
ja
bound
and
fidivrs
lock
mov
enter
xchg
mov
cs
jne
stc
rol
add
xor
sbb
sahf
fdivs
push
jbe
inc
or
ja
arpl
pop
add
xchg
insb
subl
push
data16
jmp
and
fs
popa
inc
xlat
and
rcll
mov
insl
cmp
imul
movl
pop
movsb
and
push
sub
mov
jae
cmpsb
jbe
cmc
cmp
pop
and
push
or
sbb
mulb
fsts
aas
xchg
shl
lcall
dec
es
rolb
orb
sub
in
or
jo
mov
and
inc
dec
loope
lahf
xchg
cmp
loop
inc
idivl
scas
sub
imul
push
xor
cmp
fisubs
mov
jge
push
mov
adc
adcl
in
inc
xchg
cmp
dec
sub
cld
xchg
popf
das
addr16
push
js
inc
mov
movsb
dec
scas
in
pop
push
in
pop
cmp
hlt
mov
sub
in
inc
xlat
xchg
mov
loope
in
lahf
push
add
adc
loope
add
sub
inc
addb
inc
aaa
lods
or
jmp
aad
inc
pop
lea
fucom
ret
rclb
and
ror
mov
inc
ror
leave
xor
jnp
sub
mov
in
xchg
push
andl
cmp
pause
jmp
repz
in
int3
jmp
iret
pop
daa
rolb
lods
leave
adc
mov
mov
mov
push
adc
loope
sbb
in
cltd
in
xchg
cmp
ds
or
mov
scas
and
cmp
jge
mov
inc
outsl
fisttpll
enter
dec
jno
adc
sub
cmp
js
repnz
adc
xchg
test
adc
adc
call
sbb
sub
cmp
jo
pusha
aad
jecxz
stos
or
inc
out
lret
aas
rcl
push
mov
sbb
cmp
xor
jl
aas
pop
sub
test
iret
mov
and
push
pop
pop
jns
or
imul
sub
mov
adc
jge
fstpt
cmp
int
rcr
arpl
push
push
xchg
enter
sbb
or
shll
mov
clc
sub
adc
lea
inc
jne
jmp
lret
jge
aad
mov
jg
xchg
add
sbb
sbb
mov
mov
rorb
jmp
incb
inc
call
daa
or
pushf
test
jno
insl
out
cmp
call
cmp
enter
mov
mul
cmpb
in
movsb
int3
int
push
jp
lret
jmp
and
pop
leave
aam
xor
jae
cs
fscale
addl
ficoms
push
xchg
xor
fldenv
in
push
scas
jns
dec
dec
push
jg
or
jns
and
imul
sub
jmp
leave
repz
cmpsb
adcb
mov
mov
or
mov
mov
imul
or
ljmp
sbb
xor
xor
loope
jae
int
daa
jle
inc
push
xchg
mov
repz
les
out
push
inc
addr16
sbb
cmp
sub
xchg
push
xor
push
xchg
fimuls
in
add
adc
shll
jae
lods
jl
popa
in
mov
aas
into
out
inc
xchg
dec
pop
loop
xchg
loope
push
icebp
sbb
gs
imul
adc
lahf
jg
in
icebp
vphadduwq
mov
test
stos
stos
jns
bound
movsb
jbe
inc
rorb
pop
xchg
scas
inc
mov
scas
push
scas
js
sti
mov
loop
or
mov
cmpsb
fwait
lahf
iret
addr16
push
rolb
xor
push
lds
out
cmp
jbe
dec
and
pop
imul
xor
inc
xor
hlt
jmp
push
out
sub
add
jp
and
mov
movsl
mov
lret
jmp
push
outsl
fabs
ret
pop
nop
repz
add
push
mov
mov
adc
das
xchg
mov
insb
mov
mov
mov
add
cmp
aad
xchg
sub
aad
mov
or
stc
pop
push
mov
push
in
cmc
push
mov
mov
add
inc
xchg
fcmovbe
jge
out
int3
loop
movl
data16
js
ljmp
sbb
jp
mov
lods
js
iret
mov
adc
shl
dec
in
push
add
jbe
cmpsl
sarb
test
icebp
mov
loopne
cmp
mov
arpl
or
xor
mov
inc
or
pop
jge
push
dec
iret
jo
cmpb
cmpsb
in
sarb
test
push
adc
sbb
cmpsl
or
cmp
mov
xchg
xchg
ret
addr16
push
jl
loop
mov
pop
jmp
stos
push
insb
in
xchg
fwait
mov
dec
mov
jecxz
iret
cmp
lock
ja
cmpl
jne
test
scas
push
xor
push
pushf
into
or
aaa
and
out
dec
aad
nop
mov
push
enter
xchg
add
das
mov
jb
lods
mov
adc
sahf
imul
fcmovnbe
loopne
xchg
cli
or
sub
mov
loop
sarl
scas
adc
push
inc
pop
add
imul
xor
leave
stos
dec
rorl
push
mov
cltd
xchg
lea
dec
pop
mov
shrb
jnp
xor
lret
adc
into
loope
test
shll
mov
out
cmpsb
pop
xor
mov
lock
les
into
add
sub
js
inc
inc
lods
adc
loopne
shll
cli
adc
les
aam
inc
call
orb
mov
mov
jl
cld
outsl
lods
adc
pop
bound
bnd
ja
jp
mov
jle
jo,pt
push
scas
xchg
stc
pop
arpl
or
out
loop
stos
and
add
out
jmp
inc
add
push
adc
out
push
jle
outsb
sbb
push
sarl
mov
imul
xchg
dec
scas
dec
pop
pop
scas
inc
imul
insb
insl
mov
into
jge
movsb
ret
fmull
sbb
rcrb
mov
movd
push
test
out
ret
jge
mov
pop
inc
insl
mov
cmpsl
cmpsl
and
stos
pop
lahf
movq
inc
mov
push
sbb
js
in
push
dec
js
pop
cmp
cmp
pop
mov
dec
insb
pushf
ret
mov
test
and
dec
fcoms
movsl
insl
inc
shlb
ja
lcall
and
and
add
xchg
das
sbb
loop
mov
or
mov
sub
fmulp
rorb
clc
into
pop
pop
and
jne
xchg
adc
cmpsl
push
xor
lcall
fistpll
add
and
mov
test
aad
pop
lcall
outsl
pop
push
pop
arpl
in
add
xlat
push
cmpsb
sbbb
push
pop
mov
mov
adc
mov
jbe
cmp
push
imul
iret
lods
sbb
inc
pop
popa
and
test
in
test
sarb
es
pusha
push
jle
call
push
sub
scas
in
test
xor
add
pop
mov
jae
mov
inc
jge
cmp
divl
cmpsb
sti
out
pop
fs
daa
cmp
lods
jge
mov
jg
test
push
stos
sub
push
mov
pop
add
jnp
dec
xor
aad
push
popf
lea
or
fucomi
int3
xchg
stos
cwtl
ljmp
sbb
jbe
mov
clc
jne
sub
lock
jecxz
add
mov
push
mov
jmp
mov
lidtl
sbb
push
test
test
xor
pop
pop
mov
push
es
lret
or
add
add
xlat
movsl
enter
ret
fidivrl
add
hlt
orl
xor
outsb
lods
jg,pt
aam
jbe
pop
push
pusha
shrb
xchg
in
cmp
negl
xchg
jmp
mov
das
bound
lock
test
icebp
mov
vcvtps2ph
mov
push
cli
stos
cmp
xchg
andb
rorl
mov
mov
sbb
popf
je
scas
jmp
dec
js
cwtl
adc
gs
cmpl
loop
mov
dec
or
rorl
mov
sbb
xchg
std
pop
shll
lcall
mov
xchg
repnz
and
lods
pop
sub
aam
sub
faddp
jns
mov
xchg
jns
out
adc
fidivrs
in
loope
xlat
lcall
xchg
subl
test
jae
daa
les
inc
sub
lds
popf
icebp
aaa
sbb
scas
popa
jae
pop
and
aam
mov
ret
test
cmc
add
incl
cmpsb
mov
mov
push
icebp
icebp
xchg
add
dec
aam
dec
inc
popa
pop
movsl
inc
loop
jbe
dec
adc
push
cld
adc
pop
push
subb
pop
pusha
push
fwait
mov
cli
dec
sbb
sub
aad
and
adc
clc
fcoms
jl
movsl
popf
scas
je
fbld
mov
pushfw
adc
movsb
sbb
dec
xchg
add
and
sub
gs
and
gs
testl
pop
mov
std
mov
push
add
es
inc
push
mov
add
mov
push
add
mov
lret
push
jmp
xor
or
adc
mov
cwtl
xlat
cmp
cmp
add
in
test
pop
sti
jno
adcl
mov
lods
jbe
pop
out
jge
sbb
jle
jp
pop
outsl
test
sbb
outsl
das
bnd
pushf
adc
mov
add
das
jnp
xchg
cmp
pushf
imul
fmull
repz
mov
cmp
outsl
fwait
xchg
cld
mov
std
lcall
and
fucomi
das
jecxz
cli
jmp
adc
jae
dec
arpl
mov
loope
mov
mov
fwait
pop
lret
test
mov
test
ss
insl
stos
mov
notl
add
pushf
mov
out
lret
popa
int3
jo
mov
sub
out
sub
pop
imul
or
insb
mov
adc
fstpt
arpl
jg
das
or
ficomps
js
outsb
mov
mov
std
cli
rclb
aas
and
std
push
and
out
lods
xchg
imul
cld
stos
test
pop
xchg
jg
jbe
je
popf
data16
jg
mov
adc
stc
iret
and
mov
loope
pop
cmp
int
push
out
cwtl
insl
add
das
fst
addl
repz
push
sahf
shlb
testb
sbb
data16
xchg
cmp
xchg
loop
das
stos
sti
test
push
inc
sub
sub
cmp
xchg
out
sub
mov
roll
sub
pop
xchg
and
lea
popa
imul
and
jp
adcl
xor
and
test
inc
daa
mov
dec
les
push
shl
add
cmp
jne
in
add
push
test
or
pop
jno
clc
lcall
inc
mov
dec
movq
loope
xor
loope
inc
sbb
mov
unpckhps
mov
clc
mov
xchg
inc
pop
mov
pop
rcrb
xor
adc
dec
push
loopne
ss
jg
add
adc
pop
cmp
cld
jno
xchg
cs
pop
fwait
pop
adc
pop
je
rcrl
push
call
mov
aad
stos
pop
adc
dec
mov
lods
xchg
mov
int
shll
adc
pop
push
inc
cmp
cmp
lods
ja
sbb
jle
push
cmp
and
lods
jmp
stos
stos
les
cmp
push
xchg
mov
mov
ja
jp
aam
stos
testb
lahf
movsl
cmp
xchg
pop
mov
jge
pop
xchg
pushf
pushf
pop
xchg
jmp
mov
lret
push
pop
movb
scas
cmc
cmpsb
mov
cmp
pop
cltd
cmpsb
popf
or
dec
mov
icebp
mov
push
xor
xor
add
cmpsb
gs
icebp
pop
mov
jle
cmc
pop
push
push
xor
inc
test
push
lds
mov
sbb
out
mov
subb
test
or
loopne
mov
inc
icebp
orl
scas
fs
in
popf
andb
xchg
xor
mov
push
imul
js,pt
fdivrl
xchg
pusha
pop
lods
sbb
jmp
xchg
jecxz
push
mov
nop
mov
pop
repnz
and
push
mov
imul
outsl
in
adc
scas
mov
and
aaa
jmp
popf
and
movsb
dec
popa
mov
loopne
adc
movsb
add
decl
lahf
movsb
add
into
flds
or
sub
adc
add
int
push
xor
mov
mov
push
xlat
mov
fdivr
movsb
mov
add
out
mov
outsb
popf
mov
pop
pop
jnp
mov
pop
jae
xor
loop
shll
xchg
and
cltd
test
loopne
inc
dec
pop
or
dec
std
push
mov
sar
xchg
mov
and
jbe
ss
xchg
mov
ret
add
sahf
dec
test
sub
jp
jnp
dec
push
add
jne
lods
mov
jo
and
mov
mov
inc
xchg
push
lahf
push
data16
cli
test
int
movlps
cltd
cmpsl
dec
cs
mov
hlt
mov
adc
cmp
sub
call
je,pt
mov
xchg
pusha
in
int3
adc
sbb
push
dec
pop
mov
out
mov
mov
data16
xchg
sub
push
mov
inc
gs
and
mov
pushf
jb
shrl
jbe
pop
mov
xchg
and
push
pop
out
out
fcmovbe
jl
out
cs
mov
pop
inc
hlt
inc
imul
sub
cmp
mov
push
push
daa
popf
xchg
pop
mov
push
pop
xor
jge
fnstsw
stos
pushw
mov
push
pusha
mov
in
and
insb
jo
push
push
fsub
pop
xchg
sbbb
mov
mov
sti
stc
or
test
loope
mov
inc
arpl
xor
ja
int3
ss
mov
push
pop
xchg
dec
adc
sub
outsb
xchg
lahf
sbb
mov
cmp
mov
psubw
bnd
fdivp
mov
add
gs
push
and
aaa
mov
jne
repz
push
jle
addb
iret
pop
fstpl
or
and
mov
test
sub
out
or
adc
cmpsl
xor
clc
pop
sub
pusha
pop
mov
adc
jle
push
out
jmp
shl
pop
push
xchg
pop
inc
cli
mov
jl
sbb
lods
sahf
jg
pushf
jne
fstl
jecxz
xlat
ret
jmp
push
cwtl
pushf
mov
or
enter
pop
mov
fwait
imul
sar
jecxz
cmp
push
cmc
and
fadds
jecxz
cmc
xor
pop
inc
push
sub
mulb
push
add
inc
jne
mov
out
xor
sbb
ja
adc
in
adc
dec
flds
push
cmp
mov
stc
adc
push
cld
mov
mov
fisubl
mov
mov
sub
mov
cmp
add
ljmp
mov
loopne
outsl
aad
xor
push
pop
xchg
mov
sub
leave
push
test
sub
test
rclb
xchg
dec
dec
dec
and
popl
pop
ljmp
out
hlt
testl
mov
cli
in
inc
push
insl
fnstenv
jbe
or
push
sbb
scas
frstor
cmp
pushl
mov
lods
fisttps
test
in
roll
or
bound
shrb
sub
scas
sbb
gs
std
mov
and
push
in
and
and
mov
popa
pop
outsb
and
pop
sub
mov
ja
pop
pop
push
enter
ret
int3
xchg
lcall
mov
lret
sbb
dec
jp
ficompl
das
ficoml
mov
js
sbb
mov
sub
and
push
inc
stc
or
cmp
dec
push
cmp
imul
cmp
push
or
inc
xchg
clc
aaa
jl
sbb
cld
ds
push
fisttpll
mov
fbld
jns
out
rcll
lret
xor
xor
dec
inc
cmc
xor
mov
fdivrl
iret
cld
inc
pop
mov
repnz
push
test
pop
ds
xlat
mov
dec
xchg
ds
insb
fisttpll
sbb
ret
hlt
sub
outsl
jle
xor
dec
pop
push
jle
push
jl
pusha
aam
inc
es
mov
aad
xor
add
lods
push
popf
das
and
popf
mov
mov
pop
push
aam
xor
cmp
pop
mov
lcall
out
xacquire
and
les
aaa
and
cmpsl
pop
adc
xlat
dec
out
push
bound
jbe
ret
jno
sub
ficomps
mov
mov
mov
insb
clc
test
movsl
std
sahf
test
nop
fidivrs
mov
mov
push
pop
lock
sbb
sbb
xchg
adc
lret
add
ljmp
xor
xchg
dec
sbb
mov
xchg
iret
xor
pop
xor
mov
xchg
ds
test
sbb
bound
push
setne
jb
sarl
xchg
scas
jns
in
dec
aaa
and
lret
mov
ja
adcb
xor
cvtps2pd
cmp
pop
mov
fcomi
insb
mov
rcll
inc
sbb
xchg
lret
in
cs
adc
fstpl
pop
fsubr
fildll
cmp
and
sub
jp
je
mov
in
add
dec
jbe
ja
jbe
push
xchg
adc
int
push
mov
sub
cwtl
rol
int3
xor
and
lock
jp
imul
stos
dec
popa
xor
mov
cmp
inc
out
mov
movaps
fst
sbb
mov
pushf
les
add
inc
pop
xor
cmpsl
add
sti
repz
dec
pusha
in
and
inc
lcall
divl
adc
loop
mov
xchg
gs
cmp
out
mov
dec
iret
add
std
xor
mov
rorl
fs
je
in
mov
or
xchg
adc
mov
leave
and
inc
pop
icebp
push
push
jl
push
ret
xor
outsb
xor
lds
jmp
sbb
mov
mov
das
cmp
out
fadds
inc
divl
inc
fmuls
sub
imul
inc
mov
xchg
sub
mov
push
decb
insl
pop
shrl
add
iret
vmread
jmp
ds
rol
mov
mov
cld
test
cmp
cmp
sbb
lcall
pop
divl
test
push
push
pop
test
xchg
push
js
adc
push
inc
mov
pusha
jg
loop
rcrl
push
and
xchg
xor
mov
mov
dec
jl
test
cmpsb
popf
xchg
cmp
mov
fneni(8087
mov
adc
jp
or
mov
lds
mov
add
jp
xor
dec
mov
add
fldt
inc
mov
dec
jns
sbb
cmp
push
cwtl
adc
stos
add
mov
rclb
sti
ficomps
negb
jne
clc
inc
xchg
js
lea
jge
push
sbb
dec
notb
negb
shrl
fstpt
aam
testb
divl
in
pop
call
xor
xor
or
inc
cltd
cli
jne
insl
lock
daa
inc
mov
fiadds
mov
std
aad
cld
ret
mov
cmp
inc
and
out
pop
test
in
aam
and
outsl
rol
and
mov
or
lret
pop
push
inc
mov
out
mov
mov
lret
rcrb
mov
pop
and
xor
aad
mov
lret
xchg
jmp
xlat
jbe
xor
and
and
and
mov
lods
aam
xchg
fsubl
adc
inc
and
pushl
test
in
sub
and
out
mov
or
pop
test
ja
dec
std
sub
xlat
add
in
ret
lcall
jp
ret
xorb
mov
pop
jbe
inc
aad
out
out
rcr
inc
mov
dec
or
sti
xchg
rcrl
test
push
and
inc
sub
or
xchg
dec
push
outsl
repnz
mov
fisubl
dec
add
or
adc
mov
test
pusha
or
adc
rcrl
jbe
xor
inc
hlt
jns
cmp
negb
nop
fiaddl
add
inc
lcall
cmpl
inc
and
inc
lret
mov
aaa
cmp
pop
scas
movsb
in
mov
test
sub
push
sahf
int3
lret
and
std
jo
dec
mov
pop
ret
cs
roll
sub
and
sub
nop
js
sbb
cmpsl
cmp
push
out
jp
negl
push
jnp
cmpsb
aaa
push
push
sahf
outsl
hlt
rolb
aas
clc
fidivrs
out
vpshaq
sbb
inc
xlat
xchg
dec
mov
fsub
movsb
cmp
daa
popa
lcall
in
push
lods
ds
jmp
hlt
cld
xchg
sub
jmp
aam
xlat
pop
add
mov
push
or
jp
ljmp
mov
adc
dec
faddl
push
mov
fwait
mov
add
repz
xor
insl
mov
xor
scas
int3
in
sbb
jp
hlt
subb
popf
insl
test
arpl
jg
sub
sbb
push
fwait
or
cmp
aad
fmuls
or
dec
pusha
mov
das
jo
repnz
pop
lock
adc
mov
sbb
fmulp
bound
cltd
jae
cmpb
adcb
in
lcall
mov
jmp
loope
call
pop
xchg
imul
push
sbb
sub
loopne
lea
lds
aam
mov
stos
add
in
push
or
ret
sahf
cmpsl
add
mov
sbb
pop
mov
xchg
mov
and
xor
cmpsb
sbb
mov
xchg
int3
lahf
mov
push
movsb
sub
bound
mov
test
insb
stos
pop
mov
test
cmp
fildl
dec
popa
pop
sbb
mov
mov
notl
add
inc
xchg
mov
mov
cmp
mov
xchg
lcall
ja
out
cld
mov
sub
jns
jbe
insl
loopne
cmc
mov
sahf
aas
jnp
xchg
pusha
add
mov
jle
jmp
std
jb
and
lea
add
mov
test
sub
mov
outsl
inc
pop
mov
fsubl
mov
mov
fidivs
sub
push
jp
cmc
and
xor
jecxz
in
lock
popa
call
in
pop
jo
dec
out
fbld
push
push
repz
sub
sbb
clc
adc
std
imul
dec
add
mov
xchg
lret
jp
aas
adc
dec
jns
cmc
cmp
mov
fisttps
scas
inc
pop
push
add
mov
dec
call
imul
jnp
jle
mov
insl
aad
xor
dec
pop
lock
enter
mov
jnp
xlat
jae
inc
sbb
mov
cld
mov
inc
cltd
mulb
mov
test
loopne
xchg
or
mov
sbb
lret
loop
ss
das
lea
aaa
out
movsl
mov
dec
call
arpl
loope
je
ljmp
shrl
imul
sahf
sbb
xchg
in
inc
add
cmp
iret
and
rcrb
adc
xchg
ss
dec
cld
adc
mov
inc
push
push
sbb
imul
add
gs
in
jns,pt
and
push
lea
mov
pmullw
out
mov
or
sbb
je
or
data16
pop
inc
adc
mov
scas
sbb
xchg
adc
mov
mov
xchg
lcall
mov
push
xchg
iret
stos
add
repz
inc
jmp
stos
popf
xorl
adc
mov
dec
add
mov
sahf
pop
mov
enter
xlat
inc
and
jb
sbb
popa
les
lods
dec
jnp
sti
repnz
lds
cmp
leave
insl
mov
iret
ja
lea
lods
fsubp
popa
das
lret
aaa
cmp
arpl
mov
shll
pop
cmp
test
ss
lock
add
int
addr16
sbb
dec
sbb
outsl
sbb
divb
lea
cld
sub
inc
pop
sbb
sbb
mov
mov
adc
cmp
push
adc
mov
cwtl
jecxz
dec
lret
xor
inc
push
popf
aas
ja
push
mov
dec
adc
testl
mov
adc
test
jne
jns
iret
sub
test
jecxz
out
mov
mov
or
xchg
xor
and
testl
movsb
adc
ds
loop
mov
dec
sbb
popa
je
subl
pop
push
jae
iret
jl
repz
lahf
scas
or
mov
aaa
rcr
test
ret
or
movups
push
lds
pop
in
adc
mov
add
sbb
push
push
adc
mov
jle
mov
test
lret
mov
cmp
movsl
cmp
jns
sbb
loopne
sbb
adcl
mov
add
xchg
fisttps
cmp
in
iret
or
and
ss
dec
jae
hlt
fdivrs
int
neg
int
shrl
pop
or
data16
repz
lock
or
push
das
jns
inc
push
xor
std
outsl
icebp
dec
mov
push
mov
nop
pop
fbstp
push
pop
test
mov
adc
adc
inc
sbb
shrl
sbb
ljmp
pop
aad
sbb
xchg
adc
inc
rcrl
sub
dec
xchg
mov
pop
jne
push
pushf
pop
push
inc
jb
fldcw
out
push
cmp
lods
pop
outsl
mov
mov
lea
inc
aad
jg
fcomps
cs
pop
enter
mov
cmp
sub
push
in
and
ss
push
add
xor
or
mov
rolb
inc
pop
stc
rorl
sbb
mov
cwtl
jne
ja
cmc
jmp
loop
int3
push
ficomps
ret
gs
aas
jg
sarl
insb
or
dec
les
jmp
push
and
pop
pop
pusha
ljmp
mov
cld
jg
sti
sbb
mov
ss
loope
mov
push
mov
push
pop
sbb
jns
push
pop
mov
aad
sub
mov
pushl
repz
stos
fdivl
sbb
in
outsb
fstpl
pop
pop
jmp
hlt
in
pop
outsb
push
fdivrl
push
sub
jo
jnp
mov
cmpsl
fwait
repnz
shr
cld
mov
leave
mov
adc
mov
gs
dec
mov
xorb
mov
in
lock
xor
cmpsl
jl
pop
fs
pop
inc
and
mov
inc
sub
outsb
mov
inc
leave
xchg
cs
or
xor
jns
ja
daa
cwtl
push
and
ret
pop
aaa
ds
pop
int
jbe
cmp
cmp
push
lock
andl
push
mov
sub
movsl
inc
and
negb
rol
cli
in
stc
add
sbb
push
in
scas
and
mov
and
push
sbb
movsl
mov
out
std
aas
lcall
or
and
pop
fldcw
mov
std
sub
jp
xor
jmp
lcall
mov
mov
or
sbbl
imul
mov
jno
inc
mov
xor
ffreep
fdivrs
dec
sub
cmp
repnz
or
clc
sub
inc
jg
data16
shl
mov
push
inc
jns
mov
or
enter
adc
test
daa
or
sbb
pop
fmuls
pop
or
cld
or
or
pop
xchg
shlb
aaa
rclb
frstor
inc
xchg
mov
xlat
jl
popa
mov
mov
je
push
cmpsb
sbb
int
fdivl
adc
lret
inc
and
or
add
call
mov
jns
sub
pushf
decl
dec
dec
aaa
scas
test
test
jle
inc
shll
sub
dec
rorl
cmpsl
and
mov
jle
xrelease
push
fcompl
lods
dec
mov
js
xchg
adc
data16
mov
xchg
mov
cmp
pushw
dec
inc
jb
adcl
cmpsl
mov
pop
add
add
sub
lods
ss
loop
loop
sbb
mov
sbb
jle
loop
aad
stc
addr16
and
push
clc
mov
lods
sbb
cld
in
nop
arpl
jmp
or
movsl
inc
xlat
adc
pushf
push
lds
lods
test
shll
test
mov
ljmp
popf
push
sbb
push
inc
rorb
hlt
xlat
sub
mov
push
cmpsl
addr16
push
mov
fisttpl
insl
in
jmp
ret
lcall
test
xchg
aad
outsl
sub
sbbl
stos
mov
js
leave
push
push
gs
push
out
push
jbe
sbb
push
das
mov
sarl
outsb
cmp
lahf
int
aad
fldl
in
ja
jnp
dec
and
imulb
cmc
gs
jmp
popa
inc
and
cmpsb
std
jmp
dec
jo
aam
les
dec
pushf
and
lds
mov
fs
inc
outsb
fmuls
testb
jecxz
jle
jo
adc
negb
xchg
int3
aad
xorb
aam
push
dec
hlt
xchg
pop
daa
xchg
pop
add
fwait
cmpsb
and
sti
iret
mov
sbb
mov
push
push
rcrb
and
out
int
lret
mov
lret
shll
lret
into
mov
data16
or
adc
lock
mov
push
dec
and
jmp
int3
jmp
imul
fidivrl
repz
fwait
and
jle
xchg
test
pop
inc
mov
inc
inc
xor
fcoml
sbb
jmp
out
mov
dec
dec
mov
cli
adc
jp
push
pop
in
add
cli
lea
mov
add
test
stos
mov
cmpsl
mov
pop
iret
inc
mov
push
xor
insb
pop
lods
dec
cmpsl
fstl
xchg
or
stos
pop
in
inc
jecxz
sub
jl
inc
scas
int
inc
dec
or
fsubrl
stos
mov
inc
sub
mov
adc
int3
dec
pushf
test
movsb
xor
mov
jnp
and
into
stos
push
or
sub
std
stc
inc
aad
cmp
imul
pop
nop
sub
pushl
push
cmpb
lea
or
roll
xchg
leave
repz
cmp
sub
xor
push
sbb
jecxz
pop
and
repnz
mov
insb
daa
inc
xor
pop
sbb
addr16
sbb
xor
sub
lods
int3
gs
fsubrl
sub
das
es
mov
inc
movsl
cmp
jl
sbb
jns
mov
cmp
movsl
and
out
dec
inc
mov
loop
or
push
int
sbb
xchg
inc
add
xchg
sub
fsubrs
xor
jcxz
mov
popf
add
popa
inc
add
in
fistps
push
jno
pushf
inc
stos
pop
ret
pop
sbb
xchg
mulb
inc
push
incl
or
lds
lods
test
sub
test
sbb
adc
push
pop
mov
mull
jl
cmp
push
push
loopne
fidivl
mov
jg
mov
ljmp
jge
and
mov
dec
cli
addr16
in
loop
adc
es
sub
dec
inc
adc
xchg
mov
lds
or
ret
pop
jle
mov
inc
mov
aam
in
fists
inc
mov
jo
jb
fstpl
pop
in
popf
dec
add
pop
mul
fmul
xchg
pop
inc
jnp
mov
and
jecxz
push
and
mov
add
shl
ficompl
mov
adc
cmovle
mov
fisubs
mov
fbstp
pop
add
addl
mov
jge
js
loopne
add
scas
or
xchg
mov
push
test
dec
sub
cltd
jbe
push
jmp
cmp
add
dec
mov
sahf
sub
cmpsl
mov
js
xor
cmp
lret
mov
sub
xchg
fisubrs
pop
jp
mov
adc
mov
shll
push
daa
rorl
or
cwtl
movsb
and
xor
xlat
push
pop
sbb
repnz
cld
addr16
cmp
lahf
stos
shlb
ss
mov
inc
jno
das
aad
out
inc
rcll
movsb
ret
dec
add
or
mov
bound
mov
push
inc
pop
mov
fmuls
dec
cmpsl
mov
fstpt
cwtl
imul
mov
mov
inc
out
or
sbb
cli
sub
mov
arpl
or
mov
std
mov
lock
mov
push
jg
sbb
xlat
mov
pop
imul
mov
or
cmp
imul
push
pop
sbb
sub
fsubr
popa
push
jb
data16
xchg
scas
gs
dec
ss
lea
aam
fisubs
and
jecxz
xor
repnz
fildl
or
or
inc
insl
xchg
lds
faddl
scas
adc
jg
ja
orb
mov
imul
iret
mov
int3
xlat
fldt
xchg
and
loope
pop
lds
mov
jo
or
mov
add
and
sahf
push
mov
or
pop
or
icebp
imul
push
add
push
fstl
das
jne
and
arpl
dec
into
sub
movsb
rcll
inc
mov
xchg
pop
jp
sub
push
addr16
in
xchg
sub
enter
mov
ja
lods
xlat
fwait
lcall
add
xchg
cmpsb
mov
jbe
add
int
in
mov
dec
mov
mov
jp
inc
sti
mov
push
or
mov
xchg
call
mov
sbb
push
ret
sub
je
lock
mov
dec
lea
cli
lock
popf
sbb
fisubrs
pop
mov
cmp
test
data16
ljmp
pop
push
loop
cwtl
cmc
dec
in
xchg
imul
push
xchg
jl
sahf
out
inc
fisubs
adc
mov
in
pop
mov
and
mov
mov
cwtl
and
fs
jb
xlat
sti
sbb
adc
jle
mov
or
mov
fcomp
jmp
sub
call
or
xor
jnp
lea
hlt
and
sti
dec
fisttps
mov
leave
movsl
jo
sub
lock
and
mov
das
dec
inc
scas
xchg
pop
ja
add
adc
mov
aam
or
inc
xor
aaa
mov
insb
mov
in
push
fdivr
xchg
je
imul
xor
jnp
inc
inc
mov
shlb
ror
mov
cmp
int
inc
sahf
mov
mov
sbb
sub
mov
mov
mov
mov
dec
ss
mov
mov
cmp
and
sbb
fistpl
mov
jle
dec
mov
inc
insl
inc
add
mov
out
lods
xchg
push
xor
adc
ficomps
insb
leave
test
std
or
test
mov
fptan
pop
outsb
cmp
lods
mov
mov
pop
mov
cli
sbb
fnstenv
push
loope
repz
inc
cmp
and
loop
call
pop
sub
or
jmp
inc
imul
movsl
jbe
mov
xchg
cli
scas
add
xor
or
lock
push
cmpsl
test
jge
adc
add
adc
mov
mov
shrl
std
inc
repz
clc
jecxz
jl
pop
into
lret
ss
cmp
xchg
dec
fwait
iret
call
imulb
or
js
pop
mov
cmp
rcrb
pop
mov
mov
arpl
pusha
mov
jbe
lods
xchg
sbb
mov
mov
shr
dec
in
std
mov
xor
xchg
jnp
ja
or
inc
in
fistl
push
or
cmp
daa
movsl
and
mov
sub
push
in
lods
pop
pusha
test
insb
scas
lcall
insl
testl
mov
mov
mov
scas
std
push
mov
jmp
out
xchg
pop
mov
and
mov
sub
sub
mul
and
mov
sbb
lret
cmpsb
mov
push
in
pop
out
testl
test
test
incl
dec
jb
or
mov
and
jno
clc
out
mov
xlat
pop
das
and
fadd
movsb
lahf
movb
cmc
add
ja
imul
inc
cltd
filds
cwtl
fstl
sbb
jle
adc
fld
test
pop
dec
cmp
add
mov
xor
and
add
pop
push
pop
lock
pop
pop
dec
add
inc
pushw
in
mov
cmc
dec
cmp
int3
cmc
mov
iret
push
jae
test
test
jge
push
outsl
xor
mov
mov
inc
sbb
pop
lret
ss
jl
push
fcompl
or
dec
or
sub
add
lea
loop
push
fldl
adc
inc
mov
popf
psrlw
cld
mov
test
repz
and
xchg
mov
cwtl
pop
jmp
scas
pop
imull
ret
cltd
lods
clc
jl
stc
jp
and
movsl
aam
shl
or
insb
sbb
mov
push
subl
xor
call
ret
lcall
shlb
jo
push
enter
and
inc
out
adc
iret
insl
dec
leave
xor
jge
das
ja
and
in
shll
pusha
lods
add
flds
xchg
sub
fldcw
mov
pop
shr
pop
popf
sti
inc
pop
stos
nop
mov
popf
or
and
push
adc
outsl
push
mov
jg
subl
pop
das
out
iret
shlb
dec
rcr
push
test
push
cmp
sub
xor
decb
jno
out
mov
cwtl
shr
test
ss
dec
mov
leave
bound
jmp
mov
std
jnp
mov
fadds
add
cmpsb
cld
cld
nop
pushw
xor
cmp
sbb
lds
dec
mov
outsl
xchg
scas
ror
sub
lock
pop
jo
imul
ja
sbb
jno
xor
mov
in
or
mov
cmpsb
push
mov
adc
ret
stc
hlt
aas
fcoml
fchs
cmpsb
lret
clc
adc
inc
cld
jp
loopne
push
test
jmp
pop
jae
xlat
adc
ficoms
mov
fwait
mov
dec
and
popa
mov
test
jb
or
hlt
mov
push
lret
pop
test
cs
and
jns
mulb
or
dec
mov
xor
js
sbb
sbb
or
stos
mov
subb
aas
pop
dec
bound
aas
cmp
daa
sti
adc
pop
out
jno
xchg
insl
xchg
jmp
mov
rcll
out
loopne
testb
adc
and
test
gs
inc
adc
xchg
inc
push
jmp
mov
pop
lret
sub
dec
pusha
mov
shlb
cmp
icebp
loope
int3
aad
sub
push
xorl
negb
test
lret
xor
lahf
sar
fst
aam
jle
loop
jbe
jg
clc
ss
pusha
mov
movb
repz
mov
ficompl
dec
dec
push
dec
jnp
loope
ret
adc
adc
movsl
fisubs
scas
pop
sbb
pop
lahf
fistpll
mov
stos
pcmpgtd
mov
xchg
insl
js
data16
pop
xor
loope
fmuls
in
out
push
or
add
push
aad
in
sti
pop
add
sbb
sbb
gs
dec
jae
dec
lods
jge
inc
sub
aas
aam
icebp
and
stos
fistps
ss
divl
and
dec
adc
add
xor
push
push
push
dec
or
leave
int
xor
cmp
bound
mov
adcb
cmpsl
inc
add
jmp
mov
xor
dec
sbb
icebp
insl
popa
cs
sbb
fidivrs
mov
gs
lods
out
cmp
cmp
cmp
dec
inc
test
hlt
stos
jmp
das
xchg
negl
xchg
lahf
sbb
imul
mov
or
pop
jae
cmp
push
jbe
jp
test
or
mov
jae
lods
lods
shrb
test
addr16
push
cmp
mov
or
notl
fs
subl
shlb
xchg
inc
daa
call
pop
mov
loope
mov
leave
lods
add
insl
jb
cli
fwait
jnp
je
push
sbb
inc
dec
push
dec
mov
pop
aaa
in
or
mov
js
sti
mov
lods
sar
lock
stos
push
adc
lock
push
out
or
daa
cld
or
in
mov
xor
shrb
cld
jge
aam
in
add
les
faddl
jb
sbb
sbb
insb
movl
fisttpl
shrl
dec
and
and
push
lea
sti
test
dec
aas
out
pop
movsb
mov
fcmovbe
xor
or
movsb
mov
ds
js
push
filds
sahf
iret
xor
fs
fwait
push
pop
mov
push
cmc
or
push
pop
cmp
into
jae
and
sub
xchg
sti
frstor
lret
sbb
addr16
fisubl
dec
daa
mov
aaa
cmc
fdivrl
ja
cmpb
shrb
dec
xor
outsl
xor
pusha
or
dec
jmp
shlb
repz
adc
leave
jbe
sbb
test
cmc
xor
inc
xchg
cmpsb
xor
loop
push
pusha
push
xor
fdivs
inc
test
inc
sbb
mov
lock
push
xlat
sub
mov
clc
jle
xchg
add
outsl
ja
jb
sub
xorl
xchg
pop
pop
loopne
inc
jp
sub
je
jp
fldt
nop
cld
incb
iret
jp
int3
xor
pop
stc
and
adc
cmp
lcall
orb
push
ss
lea
dec
pushl
xor
fnstenv
jb
dec
icebp
xchg
es
and
inc
and
push
inc
inc
sbb
pop
out
adc
shld
add
push
add
filds
adc
rol
push
orl
repz
dec
sti
iret
dec
mov
repnz
mov
mov
fidivl
ret
xor
xchg
mov
xor
push
gs
cmp
xor
out
xchg
inc
shrl
dec
mov
mov
mov
movsb
sub
incb
lods
inc
adc
fadds
out
fsubp
hlt
sub
rclb
pop
and
daa
inc
jp
cwtl
mov
jnp
cmp
mov
add
push
ss
and
movl
or
imul
sub
aas
loop
into
lock
aam
jecxz
sbbb
in
sub
push
mov
test
les
push
fsubl
inc
jge
xchg
push
xchg
pop
out
xchg
adc
sub
dec
pop
adc
dec
addr16
mov
sbb
add
adc
jae
dec
cmc
stos
push
xlat
mov
stos
insl
fwait
movsl
faddl
sub
outsl
xor
ret
movb
mov
pop
hlt
and
pop
test
add
adc
cmp
push
add
mov
je
scas
lahf
add
dec
jmp
rcrl
add
cmpsl
inc
loop
shr
insb
pop
andl
jo
mov
push
dec
daa
mov
add
stos
ficoml
out
lods
int
sbb
xor
inc
push
inc
fdivrl
fidivl
imul
inc
je
gs
mov
por
xchg
pop
jnp
and
pop
lret
adc
jp
cmp
inc
mov
jl
cs
xlat
add
iret
mov
sub
nop
mov
jbe
pop
movsb
mov
clc
lods
and
aad
mov
loop
add
mov
aaa
pop
sub
fs
es
fidivs
fmull
xor
lds
in
in
mov
jne
ret
mov
and
sub
pop
or
jb
dec
lret
insl
sub
dec
jp
push
mov
jae
jno
ljmp
adc
loope
ret
mov
cmpsb
repz
sub
arpl
sbb
or
xorl
movsl
xchg
bound
and
pop
xor
lret
xor
sbb
test
cmp
dec
cmc
cmp
pop
mov
pop
xchg
mov
leave
movsb
inc
arpl
cltd
inc
ffreep
jg
mov
mov
sub
and
in
outsb
jecxz
jae
les
adc
pop
mov
cltd
mov
jne
pop
sahf
mov
and
pusha
push
popa
pop
push
sti
out
dec
jmp
cmp
fsubrl
bound
out
fmuls
leave
bound
rcrl
add
outsb
stos
xchg
xorl
imul
ljmp
adc
dec
mov
insl
lcall
xchg
inc
mov
enter
popa
imul
fiadds
int
jo
lret
scas
into
loopne
stos
adc
xor
icebp
loop
add
inc
cmp
ret
rcr
ss
int3
test
in
fisubl
into
je
inc
mov
adc
sub
insb
cltd
outsb
inc
test
inc
mov
ss
jb
mov
dec
bound
clc
xchg
push
mov
pusha
lahf
movsl
test
mov
adc
enter
jp
push
lcall
sub
inc
out
adcb
ret
fldt
loop
sub
sahf
movsl
mov
or
repz
pop
lret
outsl
push
repnz
pushf
cmp
mov
xor
out
popf
push
jnp
lret
add
sti
jbe
inc
and
fsubrs
mov
sti
fdivs
push
cltd
push
inc
sub
aaa
xchg
mov
mov
in
jle
mov
xor
and
push
rcrb
ret
cltd
inc
mov
out
fs
cmpsb
mov
cmp
out
sbb
dec
in
mov
fiadds
aas
pop
clc
cld
popf
or
mov
ljmp
adc
shrb
outsl
nop
stos
xchg
xor
sti
es
movsb
jecxz
xchg
cmpsb
lock
lahf
test
popa
daa
cmp
mov
and
push
inc
out
cmp
test
sbb
cmp
jnp
mov
stos
sti
sub
lods
lret
jg
add
mov
pop
add
dec
js
mov
cmp
sub
mov
or
sub
movsb
sub
pop
xchg
adc
pop
jge
in
dec
lret
sbb
jl
and
jns
test
sub
mov
fs
dec
aaa
add
call
mov
sar
jge
jo
jno
and
shll
dec
pop
adc
adc
fcomps
dec
and
insl
in
sub
sbb
test
and
insl
dec
insb
cmp
pusha
mov
xchg
pop
jo
arpl
sbbb
imul
pop
inc
addr16
pop
mov
std
stos
xor
inc
xlat
stos
mov
jbe
cmc
add
out
clc
adc
daa
fisubs
push
out
push
inc
mov
dec
sbb
out
pusha
in
and
mov
mov
icebp
mov
shlb
dec
push
jl
mov
arpl
add
mov
jno
dec
adc
push
jg
sbb
jnp
or
mov
mov
shrl
jecxz
dec
mov
mov
sub
jmp
sub
popf
lods
push
push
mov
mov
jnp
in
ret
test
and
aad
das
or
insl
xchg
xor
jmp
pop
sti
sbb
das
cmp
sub
xor
push
jae
cld
sti
test
out
inc
pop
and
lahf
xor
popl
jne
mov
aaa
int3
stos
push
or
add
bound
inc
lods
dec
jnp
adcb
xchg
stos
and
popf
repnz
mov
ficompl
mov
ret
in
fucomi
mov
lods
push
and
data16
push
cmp
push
sub
imul
mov
out
outsb
sti
loopne
push
jnp
push
ds
cmp
loopne
jnp
jo
bound
cld
mov
ror
arpl
repnz
int3
dec
int3
cmp
cld
sub
xchg
hlt
xor
mov
mov
or
lods
insb
pop
dec
loope
push
cs
xchg
pop
and
out
pop
cmpsb
shll
sbb
lret
lods
sub
jmp
stc
jmp
push
incl
push
push
cmp
mov
jmp
lds
test
fnstenv
mov
cmp
fwait
mov
das
negb
xchg
mov
or
test
xchg
pop
nop
mov
sti
mov
je
sub
and
mov
pop
adc
jp
ja
daa
lea
mov
add
sahf
outsb
and
inc
stc
mov
leave
icebp
add
lahf
push
test
push
in
test
push
push
mov
scas
or
scas
add
lods
mov
sub
iret
adc
pushf
jp
sbb
int3
jp
mov
ficoml
sub
or
movsl
pop
sub
lcall
push
mov
call
iret
xor
sarb
add
imul
lock
int3
sub
mov
dec
jg
add
or
jl
inc
bswap
imul
push
clc
out
cmp
add
cld
add
iret
lret
out
jge
das
push
cmpsl
addr16
scas
add
add
lret
out
pop
imul
ja
ljmp
cmpl
movsl
dec
into
ja
and
or
pusha
inc
loop
aad
mov
dec
btr
stc
in
out
loope
and
ss
mov
clc
insl
cmpsl
icebp
lret
adcb
fcompp
pop
add
dec
fsubrp
repnz
dec
call
push
jns
and
lea
push
xchg
mov
push
movsl
dec
xchg
ss
in
mov
pop
xchg
xchg
jno
xor
and
cmp
mov
orb
mov
loope
cs
daa
inc
pop
lds
arpl
popf
repnz
inc
mov
or
xchg
inc
adc
int
ret
xchg
int
jb
outsl
sub
jne
outsb
push
rcl
lods
xor
push
xchg
daa
add
jo
stos
lret
jecxz
dec
ret
popf
arpl
stc
setns
lret
outsl
and
out
sub
iret
xchg
xchg
dec
xchg
cmp
push
xchg
dec
lods
in
xchg
cld
shll
mov
repz
das
cmp
push
inc
ja
insl
orl
inc
leave
push
mov
inc
shrl
push
xor
je
xchg
mov
sbbb
adc
push
scas
std
xchg
push
or
aam
sub
sbb
xchg
mov
xchg
or
push
bound
mov
cld
jge
mov
add
ret
rsm
cmp
ret
sbb
rclb
cs
sub
add
in
test
sbb
ret
cltd
enter
test
adc
xor
pop
sahf
loope
add
add
popf
cmp
out
popa
mov
js
int3
cmpb
inc
cwtl
adc
jae
scas
sub
xor
push
in
fdivs
jnp
jecxz
inc
test
mov
repnz
push
inc
cwtl
xor
out
pop
pop
dec
stc
xor
adc
insb
in
jmp
pop
sub
jno
push
lret
lock
addr16
sahf
outsb
js
jl
lods
add
sub
aaa
cmc
jb
inc
shlb
dec
mov
ljmp
fwait
adc
lock
or
adc
mov
clc
mov
dec
xor
outsl
arpl
jmp
mov
rclb
adc
ret
cs
mov
mov
icebp
sub
adc
vprotw
lods
and
movsl
or
sub
clc
test
int
xchg
mov
jb
imul
repz
sti
push
fs
xor
cmc
in
je
out
pop
mov
push
xchg
mov
dec
jmp
adc
and
adc
sub
int3
or
sbb
jl
mov
je
lods
add
xor
push
adc
dec
movsb
rcrl
cmp
push
push
add
cmp
lea
in
xchg
data16
decb
fstps
cs
scas
mulb
mov
nop
mov
jle
cld
orl
push
pslld
and
cmp
xchg
mov
sub
hlt
push
clc
lea
pushf
neg
xor
addr16
xlat
jns
and
orl
dec
insb
bound
ret
test
fwait
xchg
lea
mov
mov
and
fldt
inc
int
hlt
bound
mov
negb
dec
ss
outsb
testl
pop
lds
test
jne
ficomps
mov
gs
add
jecxz
ret
add
addr16
jl
lock
push
loopne
sub
mov
popa
cmpsb
daa
int3
or
mov
sti
sbb
popa
and
add
pop
add
hlt
stos
rcrl
or
rcrb
das
mov
sbb
xor
mov
mov
and
scas
test
ret
push
push
test
cld
sub
mov
and
or
out
js
xor
dec
mov
dec
test
hlt
lock
aam
js
mov
icebp
sti
int
aam
div
mov
dec
arpl
lahf
dec
cltd
rclb
xor
sbb
sub
push
dec
out
xor
adc
test
mov
mov
mov
lahf
stos
ret
jb
add
or
sti
nop
mov
in
rcrb
ret
stos
pop
sarl
pop
stc
dec
outsl
decl
or
pop
fs
adc
sub
daa
mov
cmp
dec
pop
loop
inc
mov
dec
pop
mov
adc
fsts
push
repnz
ds
lcall
popf
aaa
sub
inc
mov
sbb
cmp
inc
add
cmc
mov
sbb
lds
mov
inc
add
mov
stos
jle
sbb
cmp
sub
add
ds
fcmovb
sub
or
add
cmc
decl
out
leave
out
stc
loopne
addr16
pusha
jecxz
ljmp
out
shr
sub
bound
add
shl
jmp
shrl
mov
fsubrs
and
movl
idivb
inc
sahf
fcoml
scas
dec
jge
aad
test
xor
stos
sarl
mov
xchg
mov
test
ret
mov
pop
out
xchg
dec
and
push
std
jl
adc
fnstcw
loop
cmp
and
inc
bound
or
xor
sbb
mov
adc
mov
cmp
cld
inc
lea
addr16
mov
popa
rdpmc
jns
jecxz
push
fisttpl
add
mov
and
in
cmp
sbb
dec
mov
rcll
mov
mov
jle
mov
ljmp
jbe
fisubrl
xchg
aas
pop
xor
lret
outsl
outsl
faddl
or
dec
and
aaa
cmp
push
sbb
popf
cli
mov
cmpsl
add
leave
adc
cwtl
in
fimull
or
pop
push
add
int
mov
stos
inc
and
push
or
into
mov
add
shll
insl
add
arpl
fisttpl
adc
jmp
sub
insb
or
jne
ljmp
dec
pusha
xor
pop
call
cs
mov
push
into
lret
imul
dec
psubsw
lock
cmp
cmp
outsb
call
sbb
fldcw
scas
aam
lea
in
xchg
popa
lahf
jle
dec
lret
ja
mov
push
lods
imul
lcall
sti
je
aaa
xor
xor
mov
mov
adc
lods
inc
leave
arpl
mov
inc
js
lock
mov
test
push
mov
nop
push
std
inc
xor
xchg
jb
out
xor
sbb
fisubrl
aas
js
add
adc
fmul
jno
xchg
mov
jmp
xor
mov
push
jae
ja
int
mov
ja
or
fbld
mov
sbb
and
push
divb
clc
or
mov
stos
int
push
or
jae
ja
jl
stc
out
rorl
sub
fisubrs
mov
cmpsb
jo
flds
imul
cmp
push
orb
data16
sbb
bound
pop
mov
fbld
pop
ret
inc
push
mov
or
xor
fs
fldl
idiv
push
mov
or
outsb
cmp
and
jne
mov
sub
mov
lock
inc
ja
scas
repnz
ret
icebp
inc
cmp
iret
push
scas
xchg
jge
and
push
adc
insb
ss
lock
inc
fimull
insl
bound
repnz
iret
xchg
imul
push
dec
or
or
and
jge
addr16
loopne
xchg
or
xchg
stos
jo
int3
push
add
jecxz
sbb
sbb
mov
pop
int3
inc
cmp
inc
ss
fucomi
lahf
mov
fwait
add
cli
outsb
push
cmp
pop
pop
test
cld
sub
sub
adc
xor
sub
lock
and
insl
rol
loop
xorl
fisttps
xor
pushl
pop
sbb
ret
push
dec
mov
in
xor
adc
lds
cmpsl
push
inc
adc
movsl
fs
in
jmp
rorb
test
in
pop
test
lret
je
lret
les
rclb
and
lahf
bound
sbb
and
mov
push
ja
cmp
add
insb
cmp
outsl
leave
adc
lods
jb
add
cmp
shlb
repnz
bound
sub
int3
fcmovne
outsb
jno
andb
nop
pop
test
ja
shl
int
xor
mov
push
jl
leave
inc
sub
jle
lcall
mov
pop
mov
loopne
in
adc
adc
cwtl
sbb
and
repnz
adc
cli
iret
stos
stos
pop
mov
dec
addr16
add
cmp
cmp
ss
lods
add
loope
fsubs
jmp
or
sbb
inc
jp
mov
add
mov
nop
ss
inc
outsb
ret
push
xchg
add
inc
outsb
mov
sub
rcrl
sub
xchg
push
jo
sti
cs
aas
ficoml
scas
mov
adc
scas
sbb
fcoms
adc
dec
xchg
repnz
sahf
pusha
pusha
loop
adc
testb
sub
push
adc
sub
mov
in
pop
pop
pop
js
in
cmp
sbb
insl
mov
sbb
add
icebp
jcxz
pop
xor
dec
test
addr16
pop
jmp
imul
sub
and
sub
fists
push
inc
jne
cmp
mov
loopne
mov
cmp
arpl
jo
leave
fcomi
inc
aad
sub
test
adc
repnz
add
push
jecxz
ljmp
insl
stc
cmp
mov
or
lods
cmp
into
dec
int3
push
test
mov
icebp
xor
adc
inc
pop
std
xchg
movsl
lahf
cmpsl
in
mov
cmc
aad
out
push
cli
sub
dec
add
out
and
xchg
daa
or
jne
and
and
inc
lret
dec
or
addr16
movsb
psubw
mov
adc
and
sahf
lods
and
insl
iret
jo
scas
jmp
mov
jle
mov
or
push
pop
fs
add
aad
and
inc
and
dec
into
add
jle
mov
adc
xchg
add
cli
push
xor
test
ljmp
loop
xchg
test
cmp
movsb
jo
xchg
xchg
repnz
aas
mov
inc
sbb
dec
insl
scas
sub
imul
repnz
jmp
test
fdivrl
mov
xchg
repnz
jmp
mov
sti
in
xor
mov
add
hlt
inc
add
xor
xchg
ja
adc
adcl
arpl
cmp
pop
fimull
sbb
mov
or
pop
dec
xor
mov
mov
sbb
cmp
xchg
ds
in
pop
mov
or
add
cmp
inc
jns
mov
jle
leave
xchg
pop
outsb
lods
rcrl
cmp
cs
insb
iret
xlat
cld
sbbb
cmp
mov
xchg
test
cmp
xchg
push
jno
daa
and
imull
fldt
fwait
mov
and
jmp
mov
movsl
xchg
fmull
ss
lock
inc
fsubrl
add
dec
push
in
cli
jnp
daa
push
dec
cmpsb
icebp
imul
movl
mov
notl
pushf
sub
dec
push
lds
adc
adc
stos
nop
outsl
adc
icebp
push
mov
inc
cmp
cltd
test
mov
test
mov
cmc
test
cmp
and
add
add
rorb
mov
orl
test
and
or
jno
mov
dec
clc
jl
push
or
cmpsb
rol
les
push
jp
jecxz
pop
es
ret
lods
push
js
js
sub
cmp
and
xor
xchg
inc
imul
insb
arpl
hlt
ds
cmp
lahf
add
std
sub
jnp
scas
gs
cmc
jns
popf
add
inc
pop
aaa
adc
jmp
ljmp
out
not
xchg
imul
xor
push
ds
fwait
jbe
nop
push
aas
inc
insl
push
xor
inc
push
sarl
mov
add
or
andl
mov
out
paddsw
mov
movaps
sarl
hlt
jns
int
add
jl
dec
mov
xor
mov
pop
bound
or
pop
inc
sbb
sub
in
dec
push
aad
loop
lret
add
xor
pop
enter
jecxz
in
aaa
inc
adc
aas
imul
xor
pop
ss
aaa
rcl
jbe
int3
jbe
xchg
or
mov
jo
adc
xchg
data16
fnstsw
movsl
bound
faddl
sbb
repnz
pcmpeqw
push
xchg
and
lods
leave
push
push
inc
sbb
jmp
cmpb
mov
mov
xchg
sub
or
sbb
jnp
pushf
mov
and
shl
clc
into
sub
out
pop
dec
int
repz
icebp
add
jns
or
ljmp
mov
sti
xor
sti
sti
dec
sarl
xor
push
xchg
inc
push
inc
sbb
or
add
hlt
ds
mov
xchg
mov
lods
inc
lods
pop
sub
pop
clc
pushf
sbb
pop
xchg
mov
cld
pop
cmp
movsl
icebp
lds
pop
xor
jmp
inc
pusha
push
jge
ja
add
rcr
xchg
inc
orb
les
sub
sub
shll
jl
inc
mov
insl
push
add
test
aam
movsb
daa
ficompl
jecxz
pop
scas
fistps
dec
push
mov
in
pop
pushf
jns
stos
imul
dec
ret
jecxz
scas
or
enter
xor
jbe
xor
dec
jp
sub
sub
loope
popf
mov
cs
icebp
jno
push
and
lret
xor
xchg
cs
or
xor
dec
inc
dec
push
pop
outsb
or
mov
movsl
pop
mov
stos
mov
or
arpl
pop
jmp
adc
sub
xchg
jmp
mov
jmp
rolb
mov
nop
outsb
sbb
ljmp
lds
pop
xorb
mov
cmp
pop
test
in
fwait
jg
push
fmull
mov
sahf
or
les
pop
iret
mov
ljmp
data16
loop
cmc
aad
ss
mov
fs
jmp
sbb
sbbl
jne
out
movb
mov
sbb
ret
add
mov
repnz
call
decl
jae
mov
test
test
xor
inc
psubsb
mov
cli
pop
cmp
mov
inc
add
ret
lds
xchg
call
or
push
cmp
push
fwait
arpl
mov
dec
xchg
pop
aaa
inc
cmp
inc
out
lds
fcomps
mov
xchg
and
or
cmc
and
xchg
push
cwtl
out
cmc
into
cli
rcll
rclb
aaa
or
push
cmpsb
jb
bound
push
das
push
mov
mov
and
or
in
pop
sbb
das
xor
aas
dec
cltd
cmpl
fisubrs
push
rep
sti
and
xchg
rdmsr
insb
jecxz
jne
lret
dec
mov
adc
jnp
lds
jge
test
pop
jae
xor
out
addr16
xor
xor
jle
mov
fsts
xor
add
dec
pop
cmc
out
adc
push
or
dec
punpcklbw
sbb
sbbl
aam
push
in
mov
mov
pop
mov
inc
stos
fcomi
mov
shrl
subb
jnp
cs
lods
cli
roll
out
xor
mov
cmp
and
addr16
icebp
push
in
aas
test
push
xor
mov
dec
dec
and
mov
lock
sbb
repz
add
or
push
cmp
sbb
mov
or
testl
into
movsb
xchg
jmp
jb,pt
data16
fs
aad
leave
mov
cmc
roll
jo
push
mov
add
stos
ss
sbb
or
repnz
movlps
mull
rol
sbb
push
lcall
or
fbld
lret
jge
aam
es
push
push
stos
dec
scas
push
cld
and
add
movsl
xchg
or
pop
mov
aam
lret
pop
mov
dec
jnp
sub
sub
xchg
pop
mov
pop
mov
cmp
xchg
mov
ljmp
xchg
cmp
sub
push
movsl
pop
int3
push
arpl
push
mov
das
sahf
add
jns
mov
push
scas
sub
pop
enter
jne
push
sub
cltd
in
dec
dec
sbb
dec
cmc
mov
jmp
cmp
adc
popa
imul
pop
add
sub
dec
dec
jmp
orl
sub
inc
push
jge
lret
pusha
add
sub
or
and
lret
xor
sub
int
ret
mov
jp
testb
jb
repnz
xor
sbbb
stos
insb
xlat
push
repz
imul
fcompl
jmp
sahf
sbb
arpl
push
fmuls
out
lods
jle
push
push
add
pop
aaa
rcll
out
xor
dec
push
mov
add
xchg
sbb
sbb
cmpsl
xor
insb
outsb
xchg
popa
inc
pop
add
cmp
sbb
into
sbb
mov
shrl
bnd
mov
ja
mov
mov
ret
in
aas
sub
clc
lods
mov
add
js
sti
repz
aaa
sahf
sbb
fdivr
lds
add
cmc
jp
shl
dec
pushf
xchg
test
dec
push
test
aad
inc
pusha
mov
mov
pop
push
js
stos
mov
outsb
movsl
clc
xor
loopne
jae
or
push
pop
or
inc
jns
jecxz
es
repnz
cmpsb
mov
xchg
pop
pusha
mov
cmp
aam
and
sub
imul
push
cld
push
sahf
pushf
std
or
xchg
mov
test
and
mov
flds
scas
xchg
ljmp
cs
or
aad
pop
fucomip
repnz
and
daa
push
icebp
push
out
or
mov
loope
sbb
push
movsl
in
rorl
cltd
mull
lea
fwait
lret
mov
daa
or
dec
pinsrw
out
add
repz
mov
mov
dec
les
mov
ret
xchg
add
jno
pop
adc
pop
lret
adc
out
popa
inc
scas
mov
test
dec
or
add
push
and
lcall
and
mov
ds
sbb
call
mov
fdivp
push
test
shll
sahf
mov
ret
adc
popf
mov
ror
fstpt
or
into
sbb
in
dec
jge
push
das
outsl
cwtl
xchg
mov
andl
out
icebp
int
jle
cmp
imul
ljmp
adc
scas
lock
insb
inc
mov
xchg
out
xor
sub
jb
cmp
add
aas
jle
popaw
xchg
mov
out
sbbl
add
mov
cli
add
push
adc
ds
cmp
in
sub
cmpsb
push
in
iret
add
loopne
cltd
pop
jb
movsb
jmp
pop
lea
ret
daa
or
jo
das
mov
loope
sbb
call
sub
inc
arpl
std
and
or
and
inc
push
mov
pop
inc
repnz
aaa
das
mov
movsl
ja
daa
push
fsts
sbb
imul
sbb
cmp
xchg
mov
cmp
fwait
shll
icebp
inc
rorb
xchg
inc
jle
fwait
adc
daa
cwtl
shlb
mov
xor
sbb
sahf
dec
bound
push
push
in
sbb
ja
cmp
das
push
sbb
cmp
inc
sub
dec
add
popa
mov
xchg
jno
cmc
fcomi
sbb
xor
sub
inc
enter
cmp
pop
xchg
inc
jge
ficomps
out
inc
adcb
jbe
out
jg
stc
jl
mov
push
xchg
inc
in
jl
or
psllq
add
mov
shrl
sub
mov
mov
mov
and
test
inc
adc
test
nop
pusha
int
rolb
jns
inc
adc
mov
inc
lret
pushf
sub
lea
add
je
outsl
push
leave
out
jmp
lock
pop
push
xor
adc
insl
pop
cmp
imulb
arpl
iret
pop
dec
scas
xchg
sbb
lea
fcompl
dec
jne
dec
add
dec
mov
jbe
mov
sbb
loope
xlat
frstor
daa
mov
pop
dec
movsl
mov
int
sub
xchg
out
or
lods
andnps
xchg
lock
ret
push
sub
test
jl
push
mov
mov
cmp
or
pusha
in
arpl
imul
int3
jne
cmp
rorl
fildll
rcrb
push
in
dec
imul
mov
cli
jnp
insl
popf
mov
and
cmp
cld
jp
std
lea
cmp
aas
xchg
ret
mov
or
repnz
das
xchg
ss
out
and
jmp
enter
mov
inc
js
xor
jno
mov
dec
inc
xchg
sbb
aad
lcall
int
pop
cli
scas
fsubrl
ficoms
mov
pop
loop
cmpsl
and
pop
mov
stos
ds
scas
cmp
popf
and
mov
jle
pop
jnp
pop
das
das
push
mov
lcall
test
test
cmp
cmp
adc
add
xchg
mov
and
pop
push
cwtl
stc
int3
jnp
adc
data16
fcomip
mov
cs
cmp
mov
dec
test
push
insl
adc
lea
roll
pmuludq
lahf
enter
test
test
adc
addr16
test
xor
jmp
leave
outsb
add
fs
inc
and
pushf
mov
push
popf
xchg
jnp
push
ret
sahf
cmp
lahf
fcomp
cwtl
cmp
enter
test
incb
cld
push
lret
fisttps
ficoml
xchg
dec
cmpsb
imull
in
test
js
xor
mov
jge
jae
and
or
jnp
test
lcall
cltd
sub
bound
push
jnp
data16
in
lds
jl
fcompl
dec
mov
popa
jp
mov
test
sbb
xlat
dec
inc
call
xor
lods
xchg
push
rorb
loop
loop
mov
jnp
mov
pop
and
sub
or
inc
loop
loop
cmp
xor
mov
hlt
mov
jg
addr16
pusha
dec
imul
or
jge
gs
xchg
xchg
mov
jns
nop
xchg
mov
ret
in
xor
mov
xchg
jo
ficoms
lods
xor
out
jo
cmp
test
mov
and
hlt
lods
xchg
sub
lods
push
pusha
xchg
adc
pop
jle
jne
les
jle
xor
int3
bound
enter
movsb
jne
call
jne
xor
cs
fidivrl
cmpsb
mov
inc
test
out
out
in
bound
xchg
jge
push
sarl
lods
enter
inc
or
inc
out
cli
dec
lds
pop
adc
fisttps
jg
gs
cmp
or
adc
ja
push
je
pop
pop
xchg
lds
call
mov
fdivl
inc
jmp
sarb
cwtl
into
pushf
add
jns
sub
mov
or
xorb
and
pop
jnp
fwait
jg
mov
mov
lds
or
stc
shrl
sbb
dec
xlat
add
pop
adc
fimull
push
cmp
repz
jmp
bound
mov
icebp
stc
jge
add
push
mov
dec
jae
rol
dec
sub
sub
jnp
lods
push
dec
das
idiv
loop
mov
xchg
adc
xchg
jnp
in
int3
lcall
das
jne
cmp
inc
add
or
dec
pusha
push
loop
and
xor
and
out
lahf
inc
cmp
std
sahf
jg
xor
jnp
jge
xorb
sub
jge
ret
in
add
or
out
lods
xor
les
mov
pushf
cli
jns
xorb
mov
repz
int
jno
or
pop
mov
xchg
cmp
sbb
in
or
sbb
arpl
xor
mov
dec
dec
lds
sbb
sbb
sarb
gs
pop
cmp
or
std
pop
xor
call
iret
idivb
xlat
stos
into
cmp
fucomp
push
arpl
pop
jno
je
or
mov
inc
xchg
sub
add
dec
or
mov
das
and
dec
add
or
push
xor
and
leave
pop
aas
inc
pop
lods
sub
sbb
imull
aad
hlt
ret
dec
loopne
fimull
lea
or
ss
das
push
xchg
enter
aaa
outsb
gs
ss
shl
dec
mov
cmc
push
mov
jl
cmc
movsl
dec
jl
xor
dec
pop
pop
and
popa
das
mov
adc
dec
push
dec
xor
mov
push
cmc
repz
sbb
mov
pop
ficompl
repnz
jbe
leave
stos
push
xchg
push
jb
cmp
cwtl
pusha
fsubrs
cmp
push
mov
jecxz
test
shll
push
add
mov
inc
subl
mov
dec
ss
cltd
jne
mov
scas
repnz
ret
adc
andl
cmp
pop
loop
gs
repnz
stc
daa
in
mov
and
clc
lcall
mov
and
adcb
push
fadd
arpl
cmp
cltd
xor
mov
cli
pop
leave
mov
lcall
xor
out
pop
jge
sbb
jl
leave
cld
mov
jecxz
nop
lret
sub
or
pop
out
sub
mov
lods
add
jbe
xchg
jb
aaa
aam
push
jo
test
or
andl
xchg
in
pushf
add
in
jae
nop
xor
xor
scas
loope
aam
cmp
les
dec
inc
iret
pop
loope
cli
stos
jbe
loop
push
bound
pop
inc
pop
pop
out
enter
std
and
call
dec
jg
push
adc
push
xor
stos
push
dec
aaa
mov
lods
xchg
roll
jno
sbb
dec
mov
loop
sbb
mov
in
nop
xor
or
loope
rclb
enter
nop
jnp
push
jno
lret
fisubrl
mov
cmpl
jl
mov
rcl
push
mov
test
pusha
mov
fmul
fsubp
clc
xchg
push
pop
mov
lret
std
je
mov
cmp
mov
mov
das
pop
sbb
inc
repnz
bswap
aam
cmp
test
cmpsl
lret
jg
inc
adc
ret
adc
out
xchg
mov
rcll
out
lds
cmp
fs
enter
mov
mov
popf
push
cmpsb
pop
jl
push
lret
xor
daa
inc
xor
push
nop
filds
mov
das
cvtpi2ps
sarb
jno
ret
cmp
and
test
ja
add
mov
or
not
cmp
scas
stc
pop
xor
cltd
fstl
loop
out
loopne
jmp
push
push
xor
inc
fadd
sbb
jns
loopne
sub
mov
mov
sbb
sbb
sub
push
mov
cmp
push
test
mov
jb
lds
mov
mov
or
adc
jmp
add
pusha
fldcw
sub
fidivrs
cmp
xor
cli
cmp
dec
test
cmpsl
cmpsl
push
or
dec
adcb
lret
xsaves
stos
add
sarl
dec
and
jle
jne
and
push
and
add
jns
repz
pop
pop
pop
into
dec
clc
test
xor
xor
cmc
jne
shlb
lods
addr16
xor
imul
es
hlt
pusha
hlt
mov
mov
xor
adc
pop
adc
xchg
test
mov
out
aas
sbb
or
in
stc
push
test
jns
sub
test
je
jmp
mull
jns
fisubrl
cmp
lods
jnp
and
addr16
jecxz
sbb
int
cmc
adc
push
fs
and
cltd
and
rolb
int3
push
lcall
sbb
push
icebp
push
pop
mov
mov
mov
sahf
iret
faddl
cmp
push
cli
pop
shl
outsl
ljmp
jb
jmp
into
lods
cmp
out
push
inc
sub
ret
cmp
pop
outsb
repnz
adc
aad
adc
mov
sbb
mov
xchg
andl
xchg
mov
mov
push
mov
inc
filds
bound
push
mov
add
and
mov
test
or
sbb
daa
enter
insb
mov
mov
mov
inc
imul
inc
fsubrs
mov
push
push
mov
test
jp
in
cs
push
inc
loope
andb
pop
lock
stos
xor
push
shlb
cld
mov
mov
sahf
jmp
inc
xchg
jbe
xor
shrl
mov
pop
loop
sbb
arpl
hlt
fcmovbe
push
es
adc
and
gs
pop
dec
es
and
lds
test
aaa
cmp
push
out
jno
mov
sbbl
enter
lret
xchg
sahf
dec
xor
lods
cld
aad
pop
aad
movsb
jp
xchg
iret
mov
mov
mov
sbb
loope
and
ljmp
in
rcrl
das
aas
frstpm(287
cltd
mov
xlat
stos
aas
aam
mov
add
jns
jge
or
cwtl
mov
xchg
les
mov
imul
mov
dec
adc
pop
popa
int
cmpb
aas
jns
mov
lahf
xchg
into
lods
arpl
xlat
adc
adc
mov
sbb
mov
add
inc
movsl
dec
xchg
push
mov
test
dec
push
call
dec
lret
fidivrs
bound
jne
out
lret
or
jbe
inc
mov
push
add
jnp
fcoms
adc
daa
loopne,pn
lods
les
xor
and
pop
xchg
out
xor
xchg
out
push
jnp
xchg
std
test
in
dec
sub
cltd
jbe
jecxz
mov
ret
out
adc
adc
in
pop
mov
out
sti
in
adc
mov
mov
push
cmc
mov
or
mov
and
fsub
add
in
xchg
xchg
testb
push
aas
push
outsb
dec
mov
jns
inc
test
mov
and
adc
pusha
cs
or
push
loopne
jle
pop
cmpsb
jb
fnstenv
fdivl
jb
and
mov
mov
int
sub
adc
in
dec
addr16
hlt
pop
sub
dec
pop
lock
fs
fstl
mov
xor
or
orb
hlt
xor
xor
cmp
xchg
cmp
mov
into
adc
mov
lock
pcmpgtw
mov
push
cli
cmp
fldl
push
mov
scas
fwait
lret
xor
sbb
mov
cmc
fwait
dec
aas
inc
push
xor
aaa
cmp
out
or
sub
in
aaa
or
xor
or
ret
jne
popf
jle
scas
out
pop
and
mov
into
jbe
adc
ror
xor
lahf
adc
jmp
adc
mov
aaa
xchg
out
push
push
mov
ja
or
shrl
push
pop
mov
mov
mov
jb
and
outsb
fucomi
dec
push
pop
cmp
jmp
js
inc
dec
js
test
enter
dec
shl
jnp
push
mov
add
jnp
test
jne
out
adc
xchg
std
inc
sub
or
inc
dec
or
xchg
push
in
nopl
jp
stc
loop
inc
sbb
in
add
adc
lock
ret
hlt
mov
cli
icebp
ss
aaa
dec
jo
adc
ficomps
jge
sahf
dec
lret
fidivrs
pop
cwtl
jno
jo
lret
stos
adc
xor
adc
test
push
inc
leave
xor
push
jmp
cs
push
outsl
lahf
rorb
dec
xor
scas
xor
cmp
xor
std
std
into
push
sbb
stc
test
cmpsb
push
in
adc
fwait
js
push
dec
and
xchg
cld
ja,pt
fcmovne
ret
lea
mov
pop
mov
push
mov
das
jno
shr
test
push
shlb
int3
iret
fwait
push
idivb
xchg
repnz
mov
js
leave
mov
lea
mov
cmc
clc
mov
dec
test
sub
jmp
loop
hlt
in
mov
jbe
inc
sbb
mov
push
ret
gs
and
xor
jae
shl
sbb
loop
jae
mov
sbb
test
xchg
movsb
ljmp
and
out
pop
movzwl
sbb
movsb
das
lcall
int
enter
loope
sub
rcl
xchg
incl
push
je
dec
push
push
insl
or
test
dec
icebp
shl
scas
mov
or
fildl
cmp
jo
fnsave
repnz
mov
or
pushf
mov
xor
scas
jle,pt
push
cmp
lock
push
loope
pop
lret
cmp
xor
ja
dec
inc
out
inc
mov
test
clc
jmp
cmp
fdivrp
ds
shll
daa
out
rcl
or
rorb
jle
adc
mov
push
adc
mov
fbld
cmp
mov
and
ss
je
cmp
sbbb
adc
cmovg
xor
ss
imul
rcrl
cmp
sub
mov
das
dec
adc
mov
in
mov
push
jno
popf
es
sbb
imul
mov
aam
xchg
mov
push
jg
lret
xor
push
pop
test
out
mov
js
popf
jp
xor
imul
popf
dec
jge
cli
rolb
int
sbb
ljmp
mov
and
push
or
sti
mov
and
pop
sub
pavgb
dec
rol
cmp
nopl
lret
je
jp
sbb
xchg
mov
lods
je
add
xlat
mov
jo
mov
mov
push
out
pop
jne
sbb
dec
mov
sbb
mov
jmp
outsb
xor
cmp
lods
lret
jns
push
out
adc
call
dec
adc
xlat
sub
pop
xlat
out
push
cltd
ja
daa
push
fildll
testb
mov
add
sub
inc
leave
pop
hlt
inc
gs
cmp
decl
outsb
outsl
xor
jns
mov
cmp
and
xor
std
xor
and
dec
sub
sbb
test
call
pop
adc
sbb
and
sub
sbb
mov
add
push
pop
sub
mov
je
add
push
nop
cmp
mov
ljmp
xchg
out
cltd
jl
and
inc
mov
int3
incl
push
xlat
xchg
xchg
sbb
mov
loopne
xchg
jecxz
pop
leave
iret
outsl
in
outsb
cmp
pop
or
test
cmpsb
gs
lret
lret
inc
pusha
inc
orl
dec
mov
push
or
sbb
fstpt
mov
lods
inc
jl
sbb
test
aad
jae
outsl
mov
adc
aas
lods
imul
addr16
xchg
push
shll
mov
mulb
or
adc
cmp
sbb
cld
es
pop
jo
pop
hlt
repz
xor
dec
nop
jns
jmp
dec
sahf
es
int
sub
sbb
jecxz
cmp
fs
cmp
pop
mov
and
mov
dec
sub
pop
lds
jns
aad
mov
test
adcb
dec
insl
sbb
inc
out
and
sub
movsb
ss
push
mov
mov
incl
mov
leave
cwtl
inc
repz
loopne
mov
push
inc
inc
jmp
mov
push
xchg
in
fnstcw
mull
mov
mov
stos
adcb
add
in
addr16
inc
or
int
jne
in
cwtl
xlat
test
call
add
push
push
mov
jl
loope
sbb
mov
sbb
movsl
sahf
ljmp
jmp
lods
repz
clc
outsl
xlat
popa
jb
jle
jl
push
xchg
push
cmp
mov
ffreep
adc
es
dec
or
push
cld
loop
or
sub
dec
adc
clc
nop
xchg
lcall
cmp
dec
imull
push
pop
insb
sub
rcl
lret
mov
lret
cmp
pop
mov
dec
pop
jae
cmp
xchg
out
sub
orl
cltd
cmp
inc
jge
cvtpi2ps
sbb
je
mov
scas
rcr
sti
ja
leave
mov
sub
jmp
fldt
enter
popaw
jge
or
sbb
jmp
xchg
add
cmp
pusha
dec
mov
xor
mov
sbb
lods
push
jmp
jmp
in
jmp
pop
mov
test
or
mov
mov
orb
loop
out
ja
daa
shrl
adc
dec
icebp
leave
xchg
inc
sbb
mov
xor
dec
mov
outsb
pop
jecxz
mov
pop
cmc
mov
sub
test
inc
lods
inc
imul
mov
mov
xchg
and
fs
cmp
mov
addr16
negb
js
jae
jbe
and
mov
push
sarl
mov
cmc
jne
cltd
dec
call
mov
cmpsb
xor
mov
jnp
rolb
rol
inc
inc
and
xor
mov
pop
push
jmp
mov
sub
pop
icebp
xchg
sbb
and
loope,pt
push
xlat
call
lods
jnp
outsb
lahf
test
ret
mov
out
inc
aas
imul
mov
adc
in
arpl
and
mov
sbb
jae
push
sbb
lret
loop
fistps
in
sahf
cs
fs
in
or
mov
jno
out
stc
das
pop
imul
arpl
sti
jge
mov
mov
test
in
loope
scas
or
scas
and
insl
aam
in
mov
inc
in
loope
mov
push
sub
int3
and
pop
inc
scas
aas
sub
mov
cmpsl
mov
xor
adc
inc
scas
out
cwtl
arpl
sbb
cltd
add
adc
sub
add
sub
std
fwait
jle
out
cmp
pop
xchg
add
adc
outsl
inc
xor
enter
push
cmp
sti
jle
push
sahf
mov
stos
xor
adcl
push
cmpsl
cmp
ljmp
outsl
cli
lcall
jl
jae
sub
jbe
jge
jno
adc
arpl
ds
sub
mov
xchg
hlt
cmp
iret
add
lret
bound
mov
mov
sbbb
shlb
imul
add
jle
or
mulb
mov
xor
lea
out
adc
add
push
xlat
jae
ret
ja
adc
mov
xchg
out
inc
ds
scas
mov
lcall
fistl
shlb
mov
ficomps
call
cmpsb
fisttpll
push
push
or
sub
sbb
cld
pop
sub
int3
ret
adc
inc
and
sbb
lahf
sub
mov
scas
add
mov
incl
arpl
jne
sub
lods
jns
loope
movsb
mov
test
pop
dec
or
pop
nop
xchg
jne
xchg
rcl
push
imul
or
repnz
scas
fsubrp
jae
dec
repz
sbb
xchg
push
xor
sbb
lds
cmp
mov
dec
cmp
add
call
sbb
ret
add
ds
dec
jp
cmp
shlb
sub
mov
fld
dec
outsb
mov
loopne
lret
mov
pushf
sub
push
movsb
cmpsl
hlt
pusha
xor
add
mul
jecxz
fwait
lret
dec
test
add
dec
js
cmpsl
jl
xchg
dec
sbb
mov
in
pop
push
jecxz
ret
lods
rolb
test
pusha
jns
push
jmp
lea
iret
sbb
hlt
and
sbb
mov
dec
xor
nop
mov
and
rcll
push
dec
addb
xchg
adc
sbbl
mov
xor
jae
or
bound
rcrl
loop
pop
mov
cwtl
das
div
xlat
push
fs
pop
adc
mov
data16
mov
pushf
sub
dec
mov
pop
and
imul
pop
stc
scas
jne
test
cltd
cmp
add
jmp
out
out
sub
sbb
push
mov
add
mov
jae
out
jnp
push
lcall
pusha
shl
inc
repz
xor
pop
sbb
sub
and
lret
mov
push
mov
cmpsb
jne
jmp
jge
add
stc
lret
add
dec
xchg
and
in
int
xor
je
fadds
in
push
je
adc
pop
stos
mov
jecxz
and
adc
sub
push
cwtl
dec
sahf
cld
sub
or
jbe
mov
mov
pop
xchg
aas
shr
pop
popl
test
pushf
aaa
mov
add
cwtl
icebp
xlat
pop
ret
inc
jecxz
cmpsl
int3
xor
mov
mov
or
mov
stos
notl
add
cmpsb
faddp
mov
jl
cld
and
repnz
inc
movsl
ret
sbb
scas
xor
lods
adcl
andb
hlt
xor
adc
ljmp
add
mov
jecxz
mov
pop
sub
mov
dec
loope
jmp
daa
fs
pop
or
mov
lret
pop
jnp
cmp
movb
jnp
inc
test
in
jmp
call
fsubrs
sub
dec
loop
push
pushf
pop
jns,pt
fnsave
aad
cmpsb
iret
cmpb
xor
jb
sub
repnz
adc
gs
pop
fwait
mov
or
push
imul
inc
and
in
push
mov
dec
pusha
sub
pusha
mul
fldcw
in
loope
or
and
repz
fwait
andl
fisubl
cli
sbbl
in
idivl
add
int
fidivs
sti
dec
call
xor
push
cmp
inc
insl
xlat
test
das
test
fdivrl
mov
test
jae
cltd
dec
mov
lods
idiv
fsubs
or
cmovo
xchg
js
mov
push
and
movsb
movsl
dec
jne
cli
rclb
cmpsl
pop
mov
push
pop
cmp
outsl
ret
dec
push
call
jecxz
jno
cmp
in
fcomps
lock
push
popa
xor
sub
lahf
rorb
adc
std
int
imul
xchg
fs
adc
arpl
nop
mov
xor
dec
andb
add
cmpsb
fdivl
xchg
mov
pop
and
jae
xchg
xor
sub
loopne
outsb
inc
pop
ljmp
fisubrs
mov
aas
je
loop
cmp
movb
in
js
fmull
jb
xchg
cmpsb
mov
add
mov
mov
jno
mov
and
aad
pop
mov
out
inc
mov
pop
or
dec
adcl
mov
pop
popa
cmp
or
adc
mov
pop
xchg
sbb
test
loope
fstps
int3
fbld
flds
push
jnp
dec
push
add
jmp
xchg
pop
xchg
cwtl
mov
cmpsl
mov
mov
pushw
pop
int
rorl
enter
aaa
sub
sti
xlat
insl
nop
fwait
sbb
mov
movsb
rorb
nop
out
pop
inc
in
xor
pusha
mov
cli
mov
fwait
dec
adc
daa
jecxz
in
add
int
pusha
sub
sarb
rolb
or
lahf
clc
xor
push
mov
fs
rol
lea
test
movsb
int3
out
mov
and
call
cmp
test
in
mov
insb
sub
out
adc
pop
fcoms
shrl
sub
fmull
outsb
pop
sbb
pop
ja
sti
pop
ds
cld
fwait
lahf
dec
movsl
push
mov
ret
scas
bound
std
hlt
mov
push
jp
push
fnstcw
xor
addps
fcmovnbe
adc
and
ss
jge
test
jnp
subb
lds
mov
in
jno
or
dec
fst
leave
pop
sahf
dec
pop
mov
sub
jb
arpl
rcll
push
adc
daa
pop
data16
jb
outsb
cmp
dec
idiv
lods
subl
mov
filds
add
ss
pusha
imull
shlb
or
mov
and
xlat
push
scas
inc
mov
in
adc
pusha
ljmp
dec
sub
outsl
jne
outsl
xchg
sub
push
scas
push
xor
jmp
adc
sub
aad
add
sub
hlt
mov
pop
insl
cmpsl
xor
xor
inc
outsb
lret
xchg
jno
fstps
stos
orb
iret
popf
in
in
popa
and
sub
mov
or
jmp
aam
fwait
mov
daa
mov
and
or
ja
fwait
mov
pop
inc
dec
inc
mov
dec
inc
std
mov
bnd
stc
outsb
mov
mov
test
inc
lret
xor
insl
push
loope
rsm
aad
into
ljmp
stc
adc
lea
or
mov
mov
add
or
cmpsl
push
pop
pop
into
and
inc
fistpll
addb
push
pop
cmc
jmp
sub
fs
aaa
pop
fs
ret
inc
test
add
jmp
jo
adc
lret
add
mov
cli
lcall
xchg
aaa
jp
pop
pop
js
lea
test
daa
pop
mov
mov
xchg
mov
xor
je
repz
daa
mov
jecxz
mov
addb
scas
jae
sti
cmc
xchg
in
stos
loope
sbb
adc
rol
sub
xchg
je
in
and
jge
and
aam
jmp
or
inc
pop
xchg
repnz
jbe
push
xchg
bnd
fmull
dec
sub
sub
cltd
mov
add
dec
out
lock
mov
inc
loope
test
push
in
add
cmp
dec
addl
mov
js
pop
loopne
out
mov
cmp
les
fmul
cmpsb
jb
or
leave
data16
jle
stc
pop
and
push
adc
out
mov
inc
mov
sub
mov
and
pop
inc
out
loope
pop
mov
xchg
lret
push
imul
stos
cmpsl
pop
cld
clc
addl
bound
out
push
dec
sub
subb
popa
repz
cmpsb
jns
adc
cltd
popa
fsubl
sub
mov
lods
push
sbb
cmp
cmpsb
punpckldq
mov
mov
call
fprem
test
iret
leave
cmp
cmp
adc
pop
xchg
fcmovne
int3
test
cmp
xorl
cltd
mov
andl
roll
ret
or
push
movsb
into
push
dec
int
add
movl
mov
jg
pop
cmpsl
xchg
push
mov
mov
mov
ret
shlb
fdivrs
push
lret
inc
fimuls
dec
push
push
repz
mov
xchg
xchg
es
inc
xor
mov
dec
mov
movsl
outsl
add
cmp
sub
xchg
cmpsl
das
sbb
lds
mov
add
test
fs
pop
push
sub
test
daa
adc
lcall
xchg
mov
push
ret
int3
jmp
ss
mov
repnz
jg
mov
loope
push
add
inc
test
stos
insb
inc
mov
ficompl
add
pop
sub
pop
mov
ss
mov
push
addb
mov
xor
test
or
out
add
leave
sbb
out
mov
inc
dec
loop
test
sbb
sub
and
dec
out
xchg
inc
inc
xchg
xchg
or
inc
jbe
mov
adc
mov
xchg
jmp
fldl
sub
fxch
mov
js
lahf
ficompl
or
cmp
stos
pop
out
jge
stos
out
dec
jecxz
mov
lock
enter
and
int
sbb
add
inc
adc
das
adc
clc
push
pop
fimuls
mov
movsb
sub
add
iret
icebp
fsubrl
cmc
mov
push
dec
add
xor
icebp
aaa
adc
add
mov
mov
test
dec
out
jg
fsubs
mov
das
ret
cmp
test
dec
push
outsb
gs
das
les
testl
dec
test
jmp
mov
imul
test
aas
adc
pop
icebp
cmpl
or
jmp
lea
test
jns
scas
xor
or
mov
fcoml
push
dec
pop
xorl
test
loop
adc
or
xor
mov
sbb
lea
dec
data16
pop
hlt
add
mov
mov
push
daa
mov
sub
inc
and
stos
pop
xchg
arpl
and
push
mov
push
shlb
xchg
adc
dec
sti
pop
xor
in
push
or
sub
insb
shll
dec
ja
mov
ret
test
stos
dec
aaa
add
je
js
in
scas
jmp
inc
hlt
cmpsl
cld
add
aam
test
fildl
inc
hlt
cmpsb
outsb
rorl
mov
mov
inc
aaa
imul
jge
jo
rcrl
sub
dec
fcomip
lock
lret
push
lds
xchg
and
jp
mov
mov
xor
or
out
sub
insl
and
insb
cld
add
pop
push
repz
adc
clc
clc
sbb
fiadds
repz
cmpsl
and
adc
mov
daa
loope
popf
or
cmp
cwtl
leave
push
lcall
and
mov
test
xchg
or
xor
lods
shrl
aam
pop
and
lret
lcall
ljmp
notb
stos
loope
adc
hlt
adcl
std
mov
enter
cmp
subl
sbb
mov
mov
shlb
sbb
iret
pop
mov
mov
cmp
lds
out
push
cmp
jle
and
mov
dec
jnp
xchg
gs
negl
pop
call
jne
mov
in
fsubrp
lock
mov
outsl
push
sbb
icebp
imul
jnp
sub
add
cmp
jle
jnp
jo
pop
lcall
pop
dec
sbb
fs
cmp
fnsave
xor
lret
push
insl
movsb
das
js
jne
js
mov
in
fimull
ds
cmp
imul
push
mov
or
jge
jl
mov
cwtl
in
adcl
repnz
adc
fwait
xchg
les
sbb
loopne
push
dec
scas
inc
clc
xor
sub
cmp
jge
outsl
inc
mov
xchg
jge
xor
xor
leave
and
jo
adc
cmp
sub
or
std
pop
in
imul
sub
mov
sahf
rcrl
ja
pop
mov
xor
shl
movsb
or
sub
and
in
add
xor
jne
and
jmp
sahf
pop
fsts
inc
xchg
sub
loope
mov
mov
push
cmpsb
and
cmc
hlt
add
fiadds
lock
pop
dec
mov
jo
pop
hlt
aaa
cli
out
stos
push
mov
insb
cmp
cmp
adc
add
or
sbb
mov
ret
pop
cmpsl
int3
dec
fldenv
sub
aad
push
movsl
test
aam
jb
adc
mov
pop
pop
xchg
shlb
or
sbbb
sbb
mov
call
mov
fdivs
inc
cmp
out
pop
shlb
and
mov
pushf
mov
stos
pop
jmp
mov
stos
mov
mov
xorl
add
cmpsl
test
movsl
push
mov
or
adc
cmp
mov
dec
xchg
iret
nop
or
sub
cmp
aad
incl
jnp
pop
xchg
mov
xchg
push
lods
xor
js
nop
shrl
adc
dec
jns
in
push
xchg
lds
add
and
pushf
and
inc
add
mov
push
inc
fisttpll
sbb
add
lock
push
clc
jb
fidivrl
xchg
out
cs
repnz
add
pop
cmp
or
mov
aad
incb
inc
mov
mov
insb
xchg
sub
stc
insl
cmpsb
xchg
fwait
pop
insb
push
mov
jle
rorb
mov
mov
push
mov
mov
rep
inc
repnz
popf
loopne
mov
or
lds
inc
xor
call
test
lods
jno
jge
cmp
xchg
ret
sahf
cmp
jge
cmpxchg
xchg
out
and
jle
adc
mov
fidivl
daa
cmp
xchg
xchg
lret
stos
or
mov
call
imul
ficoms
cmp
mov
dec
mov
or
leave
ja
cld
pop
mov
fisttpll
out
je
aam
push
repnz
dec
mov
xor
gs
cld
dec
icebp
iret
lcall
test
fldt
add
lret
popf
lea
fstl
push
lcall
andb
sbb
cmpsl
dec
jb
stos
jp
es
mov
xor
decb
rorl
out
cmp
cmp
lcall
in
jmp
adc
or
jecxz
aaa
mov
sub
mov
push
adc
mov
ljmp
rorb
and
adc
add
xchg
xor
mov
mov
adcl
or
sbb
out
out
cmp
cmp
filds
faddl
pop
mov
inc
ret
sbb
jo
mov
mov
add
je
outsl
sub
lods
cli
mov
das
sub
mov
hlt
aas
xor
add
iret
mov
pop
mov
fstpl
or
hlt
pop
xor
mov
imul
xor
incl
jg
mov
jecxz
push
and
push
dec
mov
aad
int3
enter
les
clc
mov
mov
jp
pop
cmp
push
cmp
dec
sub
fwait
cmp
jnp
mov
and
mov
arpl
cmpsb
push
in
mov
jle
out
lods
divb
call
mov
or
in
add
add
in
cltd
mov
mov
addl
pop
xor
enter
enter
shrb
push
fwait
outsb
gs
daa
xor
cmp
mov
test
test
fiaddl
shrl
add
mov
rcl
es
shrb
mov
loopne
icebp
cmp
add
mov
imul
imul
push
outsb
add
sbb
cld
push
enter
add
cltd
push
rep
fsubl
or
js
iret
jl
loope
fs
add
jecxz
fucomi
inc
shll
shlb
mov
sbb
das
mov
mov
data16
pop
mov
or
mov
add
mov
add
enter
ret
pop
fstps
mov
xor
das
dec
push
hlt
push
scas
jnp
add
dec
daa
cld
mov
xchg
mov
push
pop
mulb
mov
cs
xchg
sbb
cmp
ja
inc
adc
bound
cmpsb
sbb
jmp
popa
imulb
rorb
xor
push
and
outsb
aaa
shl
cmp
push
sub
push
xchg
and
outsb
sbb
mov
pop
jae
in
jne
mov
in
call
xor
cmp
xor
das
sti
adc
daa
push
outsb
fdivs
mov
in
sti
jg
stos
cmp
cmp
jnp
jl
ret
push
into
dec
xchg
mov
mov
jl
fs
faddl
loopne
mov
sub
sbb
or
and
iret
je
xorl
and
cmp
fs
sar
push
mov
fstpl
aas
xchg
adc
jg
jmp
and
fidivrs
sahf
push
scas
jecxz
faddp
jne
mov
mov
loopne
or
jnp
mov
cmp
mov
inc
dec
jecxz
sub
pusha
and
inc
jle
ret
adc
adc
jp
adc
fimuls
sbb
les
nop
mov
adc
push
or
notb
bound
add
push
push
addl
sub
xor
mov
movsb
xchg
jp
add
sbb
in
adc
loopne
shl
push
ss
mov
outsl
add
aam
mulb
inc
cld
aad
lahf
mov
sbb
daa
sbb
xchg
rcrl
and
xlat
lods
pop
aas
adc
cmc
shll
daa
sarb
fs
filds
jae
cwtl
in
imul
sbb
mov
mov
push
inc
xchg
and
mov
fstps
fucomp
pop
lds
add
pop
fnstsw
mov
movsb
jns
jne
dec
push
sbb
or
inc
aam
pop
mov
fcompl
pop
scas
mov
lods
jmp
mov
xor
xor
adc
loopne
popf
orl
shlb
sbb
rolb
clc
xchg
dec
xchg
rol
loopne
jmp
xor
aad
sub
or
sbb
fldcw
sub
xchg
int
int
dec
cmpsl
jno
sub
mov
jne
and
jae
inc
mov
mov
cmpsl
loopne
out
jge
shll
fdivs
or
dec
mov
adc
cmp
mov
fld
jbe
or
fdivrl
inc
outsb
rcrb
jne
xor
fstpl
sub
repz
cs
outsb
outsl
data16
pop
lock
pop
xchg
repz
aaa
imul
jge
sti
and
pop
add
add
sbb
mov
xor
in
aas
aad
adc
push
cwtl
push
rolb
jmp
mov
dec
and
jno
jl
sub
or
cmp
xchg
in
cmp
shll
imul
dec
les
mov
es
data16
pop
mov
cmp
lods
popf
inc
mull
int3
cld
push
gs
xor
lretw
mov
outsl
jmp
les
aaa
scas
jmp
sahf
add
iret
mov
lret
aas
scas
jne
mov
push
xor
in
cmpsl
in
push
xchg
mov
dec
mov
ds
push
sub
xchg
insb
adc
mov
jl
sub
dec
hlt
add
inc
mov
repz
push
and
loope
outsb
sub
lods
mov
sti
pop
fwait
xlat
out
xor
je
cmc
sub
sbb
push
aam
pop
nop
insl
inc
or
orl
notl
mov
jmp
movsl
aad
bound
pusha
mov
enter
in
pop
pop
cmp
xchg
xchg
mov
testl
sub
cmc
aaa
iret
lock
cmpsl
fsub
jge
int3
inc
or
pop
push
stc
mov
iret
sub
jp
adc
lds
sub
shll
icebp
xchg
sbb
adc
pop
test
aam
out
jo
fsubrs
imul
jne
jb
loop
sbb
mov
mov
mov
push
icebp
inc
mov
xchg
mov
jno
insl
push
xchg
xchg
int
fsubrs
in
or
aaa
adc
fldt
jnp
notb
xchg
or
ss
and
sub
lcall
movsl
cmc
push
lahf
xlat
dec
into
mov
inc
jnp
sbb
push
inc
in
das
cmp
xor
sbb
sbb
in
dec
xchg
cld
andl
sbb
mov
popa
ds
pop
movsb
dec
mov
inc
jmp
mull
adc
mov
push
mov
push
xchg
add
filds
inc
mov
mov
loope
sti
mov
cmp
ja
and
push
adc
fucomp
sbb
adc
stc
rcr
lret
ret
push
mov
mov
stos
int3
lds
lods
jno
cmpsb
sbb
jmp
mov
push
push
jl
lods
dec
pop
je
testb
imul
add
dec
push
jecxz
mov
mov
xchg
out
xor
lock
fildl
sub
add
and
xor
aas
push
fs
xchg
mov
lahf
mov
inc
jnp
es
sarb
dec
and
push
push
jae
mov
test
pop
icebp
mov
mov
mov
fwait
mov
shll
jae
rcrb
jb
lcall
in
mov
popf
cmc
push
xlat
push
lock
mov
outsb
sbb
shl
in
lds
leave
sub
shlb
aad
pop
es
loope
sti
mov
xor
repnz
pop
fisttpll
push
sbb
sub
sbb
imul
sub
insl
or
add
sbb
dec
inc
adcl
lret
sbb
or
fcmove
and
nop
mov
cltd
push
lcall
mov
scas
push
movsb
fisttps
jge
mov
mov
and
stos
and
add
mov
add
jnp
add
into
inc
and
mov
popl
cmp
inc
enter
loope
bound
mov
mov
mov
movsb
out
push
sbb
push
imulb
test
aas
push
xchg
lahf
inc
or
mov
mov
insl
mov
jno
xchg
jg
jge
scas
leave
clc
xchg
mov
sbb
sub
das
cwtl
inc
jge
fwait
dec
aam
mov
outsb
push
mov
js
addr16
js
ljmp
pop
inc
adcb
cmp
cmpsl
mov
push
add
mov
jmp
jl
call
pop
das
jae
inc
popf
iret
repnz
enter
hlt
inc
shll
mov
mov
flds
loopne
pop
sahf
add
dec
mov
imul
test
popf
lods
daa
bound
xchg
cmp
and
and
arpl
xchg
int
scas
cmp
xchg
cwtl
cmp
lea
das
sub
sub
addr16
cltd
jge
ret
sahf
xchg
iret
push
sub
cmp
lret
popf
lret
or
sahf
out
inc
add
add
mov
rolb
sub
mov
sub
enter
outsl
pop
push
mov
scas
push
jmp
mov
sub
push
pop
push
mov
and
cmp
in
filds
add
mull
lahf
mov
popf
mov
in
nop
ret
lds
dec
push
loop
cwtl
jo
addl
sbb
in
sub
mov
xor
mov
outsb
into
add
and
ljmp
mov
decb
sub
loop
add
lds
orl
aaa
mov
cmc
clc
xor
inc
mov
xlat
daa
rcll
and
sarb
jmp
jecxz
pop
pop
ljmp
sahf
cmp
push
test
xor
add
inc
mov
fcompl
aad
inc
insb
jne
movl
mov
inc
jmp
pop
jmp
xchg
add
mov
rcrl
cltd
mov
jg
cli
push
mov
pop
hlt
aas
add
jmp
inc
jecxz
adc
and
rcrb
pop
push
fnstcw
sub
jge
push
out
pop
lret
xchg
cmp
xor
addb
enter
jle
fidivl
sahf
test
pop
push
fcoms
pop
aaa
stos
mov
jmp
add
mov
lods
mov
fimull
adcb
cmc
mov
cmp
call
or
aam
scas
xchg
mov
repnz
repz
pop
cmp
cltd
sub
xchg
jnp
into
addr16
jae
xor
roll
xchg
js
xchg
inc
jle
in
mov
out
xor
mov
inc
ss
push
sub
ret
mov
mov
and
xlat
push
xor
fdivl
dec
fstl
sub
iret
mov
lods
jb
dec
inc
add
pop
dec
dec
aas
push
pop
inc
push
cmpsb
jg
push
jo
sub
fdivl
jbe
push
mov
sub
ljmp
arpl
mov
mov
jp
in
addr16
or
inc
ret
jmp
test
mov
popa
stos
mov
and
aad
inc
xchg
ss
aam
pop
jns
mov
orb
in
es
movsb
cwtl
dec
cmp
push
xlat
notl
loope
leave
js
dec
enter
cmp
dec
mov
not
leave
mov
test
aas
hlt
cwtl
dec
cmpsl
sub
sbb
cwtl
adc
sub
movsl
sub
fs
push
mov
inc
cwtl
test
cmp
xorb
push
jle
pop
push
std
mov
sub
or
inc
pushf
fisubs
mov
add
dec
dec
xchg
push
and
inc
clc
pop
xchg
mov
outsl
test
cvtdq2ps
call
fldl
adcl
push
cmpsb
fsub
lock
es
mov
cmp
shl
jne
mov
lahf
fdivs
mov
mov
pushf
push
test
add
jecxz
test
shl
mov
mov
bound
fiaddl
mov
idivb
cmpsb
mov
pop
inc
mov
push
pop
inc
stos
xchg
gs
cmpsb
cmp
pushf
or
out
xchg
fldenv
stos
pop
push
sbb
adc
push
mov
mov
cwtl
push
fisubl
out
sti
cmp
cld
add
pop
fwait
psllq
add
cltd
leave
shll
orl
mov
sbb
adc
rcll
adc
mov
mov
mov
push
mov
nop
cwtl
mov
xchg
sub
or
rcl
incb
mov
sbb
and
pushf
lret
cmp
cmp
daa
xor
outsl
and
dec
and
into
add
mov
dec
inc
test
test
push
push
loop
sbb
flds
mov
cmp
cwtl
dec
adc
out
mov
in
add
add
mov
dec
add
cmp
inc
shrl
movsl
inc
clc
jmp
sar
jne
aas
mov
out
rcrb
aad
push
mov
repnz
cmpsb
pop
mov
push
outsl
dec
iret
je
dec
xor
out
push
sbb
dec
sub
dec
inc
or
aam
mov
jg
and
jbe
sbb
adc
jne
stos
in
mov
pop
push
mov
cs
dec
pop
notw
add
fldenv
das
xor
jl
cmpsb
pusha
sub
scas
aam
ds
push
push
pop
out
int3
popl
je
pop
adc
push
rorl
loope
pusha
mov
pop
jb
mulb
inc
lods
fidivrl
das
insl
xchg
cmp
pop
ror
pop
shll
pushf
sarl
push
push
in
repz
es
sbb
xchg
cmc
popf
mov
insl
add
fmul
jne
sub
daa
mov
jno
mov
jg
jl
lahf
sub
hlt
adc
push
adc
test
les
call
mov
decl
adc
xor
fcoml
jb
xchg
push
mov
mov
fmul
mov
dec
jg
daa
mov
sub
sbb
xchg
add
sbb
jnp
mov
push
xor
mov
mov
jb
sub
fisttpll
adc
mov
pop
xor
mov
aaa
std
mov
test
xor
leave
dec
insb
stos
call
inc
inc
test
enter
fistl
adc
sbb
xchg
or
and
test
sbb
sahf
pop
cmp
lcall
lods
into
cli
or
movb
pop
lock
popf
cmc
push
pushf
xor
lret
push
push
fimull
inc
outsb
test
xchg
divb
js
push
pop
jo
mov
jns
inc
test
push
std
push
pop
xchg
js
lret
scas
mov
mov
mov
dec
mov
adc
inc
and
sahf
push
mov
cmp
scas
pop
pop
jle
lret
les
pop
insb
pop
jne
dec
xor
adc
imul
lcall
dec
and
pop
jp
insb
insb
cmp
lds
push
mov
clc
sbb
movsb
test
sbb
pop
divb
loopnew
pcmpeqb
xor
lea
repz
stos
rorb
outsb
fsubr
add
dec
sub
pushf
push
adc
inc
and
xor
andb
jo
popa
adc
push
sets
mov
int
jp
shll
dec
adc
pop
jnp
jbe
inc
and
push
xor
sahf
mov
mov
hlt
push
cltd
roll
jl
lcall
insb
call
pop
push
in
adc
lcall
fcomps
fwait
mov
leave
dec
aam
icebp
sbb
out
dec
loop
adc
adc
jecxz
aad
mov
cld
xchg
sub
push
test
ror
or
stos
xchg
xchg
cs
iret
bound
xor
xchg
scas
enter
and
out
adc
add
lods
nop
push
sbb
mov
insb
inc
fneni(8087
pop
jns
out
fs
fwait
lea
mov
push
mov
addl
mov
push
stos
andl
imul
sub
in
cmc
mov
sub
fists
or
pushf
xor
and
lock
fiaddl
jbe
push
inc
ja
ret
cmp
pop
mov
sub
xchg
sub
push
imull
addl
pop
es
hlt
jns
xor
fcoml
cltd
sub
mov
mov
pop
sbb
je
adc
cld
cwtl
popf
dec
dec
in
cli
or
xor
xchg
stos
mov
push
pop
insl
in
xlat
loopne
sbb
jg
xchg
and
in
and
imul
out
test
cltd
fs
orb
mov
scas
cmp
pop
xchg
insl
jecxz
mov
ja
and
into
jbe
xor
repz
out
xchg
scas
cmc
mov
test
pop
imul
sti
mov
movsb
and
bound
ds
xor
insl
jnp
hlt
add
nop
cltd
sub
add
fwait
subb
xchg
adc
inc
pop
mov
inc
adc
fsubrs
xchg
or
cmpsb
or
testl
pop
test
sbb
in
and
test
jmp
push
outsl
lods
sub
or
bound
flds
jl
ficoms
cli
push
cmpsb
sbbb
jbe
leave
jg
cmp
idivb
jb
hlt
sbb
aas
stc
arpl
mov
mov
lcall
lock
xchg
out
out
shll
adc
push
iret
dec
add
push
arpl
sbb
out
cwtl
xchg
fdivrl
xor
xchg
ret
es
push
push
pop
pop
in
xchg
fcomps
loop
sti
or
jo
fsts
sbb
aas
adc
jae
cmovge
mov
inc
cmp
sahf
popa
cwtl
mov
stc
sub
sbb
test
data16
loopne
cmp
or
sbb
cmp
xchg
push
imul
test
imul
push
and
push
push
sbb
push
aam
fildl
mov
cld
aad
jg
cli
jmp
jae
fsts
push
repnz
mov
mov
pushf
push
inc
bound
fnstsw
xor
cmp
jecxz
push
repnz
jecxz
sub
xlat
dec
int
lods
jp
dec
adc
adc
lar
sub
test
jo
push
xorb
cmp
jg
minps
jp
xchg
aaa
mulb
xchg
cmp
xor
xor
mov
jae
pushf
call
data16
into
cmpb
or
pop
add
test
lds
jge
inc
adc
pushf
ds
pop
icebp
movsb
lret
push
xchg
sbb
stos
stos
jns
xchg
pop
or
repz
insb
dec
lahf
cmp
loopne
push
and
scas
sbb
mov
pop
loope
hlt
ljmp
mov
mov
or
notb
cmc
ficoml
sahf
mov
icebp
ds
aam
fs
mov
das
cmp
pop
lea
mov
add
mov
arpl
jbe
push
push
outsb
lods
adc
dec
loope
incl
or
movsb
loopne
es
fstpl
mov
mov
cmp
or
push
movsl
pop
ja
sbb
or
dec
sbb
in
ret
push
mov
fcoms
xchg
arpl
cmp
add
js
lret
or
push
push
mov
leave
in
jne
lock
push
mov
mov
sub
jae
std
mov
pop
pop
push
leave
rcll
bound
sbb
mov
mov
cli
pop
mov
sub
mov
add
call
pushf
lods
push
mov
jge
lcall
hlt
lods
xchg
test
je
mov
mov
sub
icebp
xchg
inc
ds
jge
in
imul
mov
scas
fcmove
sub
sub
sbb
pushf
dec
nop
sarl
cld
dec
sbb
in
into
jbe
push
enter
or
jno
mov
repnz
jmp
jae
mov
mov
imul
gs
mov
loopne
aad
pop
das
out
or
mov
shlb
shrl
and
mov
mov
cmp
mov
orl
data16
mov
inc
fdivl
xchg
lahf
icebp
push
xor
jp
jnp
xor
jnp
sub
mov
clc
inc
adc
in
out
jge
push
mov
std
addr16
loope
shlb
leave
clc
jmp
mov
jecxz
pop
int3
xor
push
repz
mov
testl
mov
jecxz
rol
lods
stos
repnz
adc
inc
mov
or
bound
scas
in
jnp
clc
fisttpl
pop
arpl
arpl
cmc
add
fldt
pushf
xchg
stos
mov
xorl
push
inc
sbb
and
arpl
cmpsb
ljmp
xor
std
repnz
sarl
dec
pop
mov
add
call
sbb
test
jle
fidivl
cs
test
inc
mov
push
sarl
dec
sub
outsb
inc
cmp
arpl
adc
adc
repnz
adc
jae
shrl
xor
pop
movsl
dec
jno
and
or
stos
and
jmp
jmp
and
mov
mov
jl
pop
push
mov
and
mov
pop
push
pop
test
push
push
leave
jae
arpl
mov
or
or
mov
sub
jae
fcoms
dec
leave
icebp
int3
shll
out
adc
xor
adc
test
sub
or
bound
jmp
std
out
xor
mov
jo
fwait
je
sti
add
xor
xchg
inc
inc
dec
mov
popa
and
inc
inc
cli
or
fs
js
mov
mov
jne
test
or
or
cli
fucomi
repz
mov
inc
jl
in
jmp
inc
arpl
aam
inc
test
push
sbb
or
les
sub
call
icebp
fistpl
fists
pushf
xchg
inc
mov
test
leave
adc
mov
mov
fisttpll
test
je
dec
ret
push
int
outsl
gs
cmp
cmpsb
jp
xlat
loope
rcrl
scas
or
aas
outsb
xor
data16
fsubr
mov
push
bound
data16
mov
add
push
sbb
xchg
push
cmc
xchg
iret
call
fnstcw
cwtl
mov
out
xchg
pop
pusha
jecxz
and
add
mov
and
idiv
sub
or
push
movsl
push
lret
mov
or
or
fs
aad
lods
and
cli
leave
bound
test
scas
push
aam
mov
stos
xor
mov
add
leave
mov
adc
adc
pusha
pop
jge
sahf
into
js
mov
xchg
rcrb
xor
scas
jecxz
sub
fwait
stos
jne
xchg
out
int3
xchg
lods
in
dec
iret
jmp
or
call
aaa
jns
in
lcall
movsl
push
mov
sbb
jnp
in
je
pop
int3
idivb
and
data16
or
loop
gs
or
loopne
and
mov
jmp
jno
hlt
xchg
ja
push
ret
inc
pusha
sbb
pop
je
pop
fninit
es
imul
in
sbb
mov
insl
bound
lods
jl
mov
push
inc
jl
mov
ret
cmp
loope
lahf
jae
lcall
aas
xor
loop
popa
jne
cmp
inc
cs
lcall
mov
pop
sarb
lock
mov
inc
inc
popf
jne
jo
xchg
fcompl
mov
fdivrl
adc
pop
xor
addr16
adc
adc
mov
mov
push
shr
xchg
cmpsb
xchg
addb
and
into
daa
pop
inc
ret
js
call
lret
rcll
sub
mov
mov
xchg
pop
jle
jmp
ljmp
jg
cmpsb
std
leave
add
insb
sahf
insl
cmpsb
mov
jl
sub
rcl
pushf
cmp
dec
pusha
outsl
sti
inc
mov
imul
enter
mov
test
mov
cmp
xchg
dec
ss
aaa
and
mov
xlat
idivl
lret
pop
repnz
sar
sar
xor
cmp
xlat
mov
ret
fcoms
jmp
mov
jae
xchg
mov
push
push
loope
cmp
sbb
pop
cmc
push
into
xor
sti
mov
scas
xchg
mov
mov
push
cmp
into
xchg
push
mov
inc
mov
push
push
inc
push
cmpsb
es
das
sub
or
jge
addr16
push
movsl
sbb
jno
add
cli
inc
and
lahf
stos
idiv
popa
jl
dec
xchg
inc
jns
or
dec
mov
and
pop
mov
jo
sbb
adc
or
ja
out
into
inc
insl
hlt
bswap
fisubs
cmpb
in
or
rolb
jmp
jo
jno
imul
xor
xchg
xchg
inc
adc
cli
adc
fdivrs
sbb
jbe
icebp
ficoml
ds
call
push
into
xor
pop
daa
sbb
sub
jg
or
jae
or
pop
cmp
aam
dec
add
push
or
out
ss
fstpl
jge,pn
pop
inc
pusha
insb
insl
andl
cmp
push
test
and
adc
js
pop
lret
or
dec
jecxz
mov
or
fstpl
jb
inc
pop
scas
pop
call
cmpsl
xor
dec
fdivrs
aaa
cmp
arpl
adc
sub
pcmpgtd
pop
cmp
dec
js
fisubrl
fsubrl
xor
adc
out
imul
idivb
fidivs
dec
popa
lods
xchg
or
jo
lret
aam
push
push
into
sbb
mov
cmp
dec
pop
mov
rorb
adc
pop
cmp
pop
fwait
in
mov
out
or
jge
adc
je
jnp
pop
sub
scas
sub
pop
hlt
pop
ljmp
popf
divl
jb
adc
cmp
fwait
repz
in
out
shll
or
bound
xchg
gs
xor
popa
and
in
cmp
je
scas
incb
mov
jge
stos
loop
adc
fsubs
repnz
xor
dec
pop
sub
out
mov
sbb
push
lcall
pop
xor
lret
ds
pop
in
fisubs
push
dec
adc
jecxz
dec
add
mov
mov
ja
lods
pop
gs
gs
cltd
jp
and
daa
daa
in
pop
mov
xchg
jecxz
mov
nop
pop
pop
cmpsb
and
scas
mov
gs
lock
pop
frstor
push
xor
es
out
dec
cmp
test
nop
adc
jecxz
add
push
inc
or
dec
mov
mov
push
fiaddl
lea
adc
fcmove
fildl
jp
mov
mov
pop
aas
dec
imul
mov
lds
notb
in
into
inc
add
hlt
cmp
dec
sub
sbb
and
out
out
lock
sti
and
push
lock
cmpps
js
xchg
mov
aam
fisttpll
pop
mov
lea
sub
mov
mov
cmp
or
dec
pop
sub
xchg
xchg
lahf
xor
add
cltd
outsb
movsl
int
xchg
xchg
and
out
adc
in
gs
out
sub
jnp
cmpsb
adc
jge
sub
pushf
dec
shlb
pop
adc
bound
outsl
lds
xchg
scas
mov
pop
and
sbb
cmp
movsl
bound
in
ja
lret
pushf
dec
mov
pop
loopne
ja
push
or
add
sub
mov
in
outsl
push
cmp
je
or
ljmp
les
xchg
jg
adc
movb
jle
push
int3
dec
adc
and
daa
xchg
js
cmp
imul
xor
stc
aas
divl
mov
mov
dec
xor
inc
and
push
cs
pop
repz
lea
mov
or
sub
mov
xor
ds
lret
dec
lea
push
cmp
kmovw
pop
mov
xor
xor
mov
sbb
sahf
daa
xor
sti
mov
mov
lds
adc
lcall
sub
xchg
sbb
stos
jo
jns
add
mov
scas
insl
lahf
ret
ljmp
xchg
mov
adc
mov
lods
pushf
or
push
les
lret
divb
popf
push
mov
adc
call
sbb
data16
std
out
cmp
mov
icebp
inc
pop
mov
arpl
cmpsl
fisttpll
jne
mov
repz
out
and
das
or
aad
jmp
aaa
mov
fsubrl
pop
dec
bound
out
ficoms
idivl
mov
add
xor
push
dec
or
push
jg
sbb
mov
sbb
mov
push
mov
xlat
stc
push
dec
lods
xchg
test
xchg
inc
lds
mov
je
pop
cmp
xchg
push
or
jge
adc
loope
lea
out
jo
jbe
push
xor
test
out
jp
pop
adc
xchg
bound
ja
pop
ficoml
fstpt
insl
adc
pushf
mov
pop
popa
mov
sub
shl
in
pop
add
insb
sub
sub
std
pop
mov
cmp
rorl
push
aam
popf
lods
sub
dec
shlb
mov
add
xor
and
daa
sbb
imul
jmp
inc
mov
hlt
dec
sub
jns
dec
lahf
rorb
roll
xchg
dec
mov
xchg
rcl
mov
lret
out
inc
sbb
lock
movsl
out
loopne
lret
std
or
and
hlt
add
adc
cltd
pop
dec
pop
jb
outsb
mov
adc
jp
lcall
imul
fistpl
cmpsb
rorl
fistpll
repz
inc
sbb
leave
lds
sub
sbb
xchg
cmc
cmp
pop
sbb
inc
daa
inc
dec
addr16
outsb
out
push
call
push
lods
adc
jmp
iret
sbb
or
mov
aad
mov
nop
jg
xchg
icebp
or
jge
outsb
mov
call
add
fildll
aaa
add
jne
rorb
rcr
or
jle
int3
add
pop
cmp
jmp
mov
push
shll
out
mov
dec
nop
add
dec
lods
jns
aaa
cmc
out
cli
test
decb
ja
leave
fistpll
data16
call
rclb
sub
sbb
mov
adc
inc
jmp
xor
mov
jecxz
sub
test
push
cmp
mov
xchg
mov
pushf
pop
sub
loop
cs
inc
and
testl
daa
nop
rorb
push
dec
insb
push
inc
in
pop
pushf
or
loopne
xchg
fisubs
sbbb
testl
decb
out
or
cmp
pop
stos
cmpsl
sbb
xchg
jmp
fistl
push
or
mov
sbb
sarb
sub
mov
int
push
lret
imul
les
sub
sarb
fwait
arpl
cwtl
dec
dec
jmp
in
xor
jb
cmpsl
mov
cmp
stc
cs
mov
mov
in
pop
mov
aaa
pop
sub
mov
xchg
stos
mov
sbb
sbb
pop
idiv
inc
jp
ret
sbb
gs
out
pushf
insb
xor
sub
pop
inc
mov
pushf
xor
call
sbb
cmp
mov
jge
pop
xor
dec
stc
ja
popf
fsubs
pop
xor
adc
xchg
mov
add
ss
jnp
pusha
cmc
in
call
subl
add
jl
fiaddl
repnz
outsb
aaa
popf
clc
mov
loopne
push
int
mov
negl
jmp
in
popf
mov
lcall
xchg
push
jmp
adc
jae
into
sti
pop
mov
adc
je
mov
enter
adc
ficoml
pop
rorl
inc
in
or
push
stos
xor
pusha
push
or
pop
lock
mov
xchg
or
insb
sbb
jg
je
push
sbb
lods
fldcw
out
or
push
add
movsb
ss
mov
enter
push
mov
pushf
out
pop
xchg
mov
mov
dec
push
fsubrl
add
inc
sbb
sbb
setae
loope
push
aas
lods
push
push
push
imul
cmovl
out
cmp
loopne
add
je
cltd
jb
int
adc
push
or
subb
scas
mov
sub
or
xorb
aam
mov
lret
cs
repz
aad
addr16
int
sti
mov
add
add
xchg
jno
test
hlt
pop
xor
cli
adc
sarb
mov
adc
out
sbb
mov
mov
in
jne
adc
xchg
std
movsb
mov
les
repnz
jbe
ss
cmpl
pop
loop
jle
push
pop
movsl
pop
add
scas
mov
adc
testb
cmc
jg
lea
sti
test
jmp
xor
mov
mov
mov
clc
mov
push
add
insl
mov
jns
in
insl
sar
xor
fstl
repz
iret
xchg
out
jg
loop
mov
cmp
aaa
out
jmp
pop
scas
fimuls
int
xor
nop
icebp
in
in
push
popf
jg
lock
jno
add
mov
pop
xor
int3
sti
ficomps
jg
push
jnp
cmc
pop
inc
add
and
pop
jle
dec
mov
push
inc
pop
xchg
std
push
cmpsl
lea
xchg
push
mov
jno
out
sub
xchg
mov
adc
pop
enter
dec
scas
lcall
sub
mov
cmpsl
les
inc
or
mov
mov
icebp
cwtl
cltd
pop
stc
adc
movsl
aad
push
push
pop
pusha
sbb
mov
and
add
adc
scas
int3
mov
dec
pushf
jae
test
mov
into
mov
out
push
sub
dec
hlt
cli
xchg
and
lcall
fndisi(8087
sbb
fstpt
cld
push
sbb
mov
rcll
ret
idivl
add
adc
pop
xor
outsb
add
pop
push
xchg
scas
mov
push
cmpsb
stc
test
add
push
cwtl
daa
stc
in
jne
and
lahf
cmp
adc
dec
ja
jp
jecxz
inc
fcoml
subl
cli
mov
popa
jo
hlt
cmp
mov
xchg
lret
inc
sbb
pop
mov
add
fs
movsl
sti
inc
push
iret
jge
nop
into
or
addr16
lahf
test
dec
xor
daa
mov
jo
gs
sub
sbb
fidivs
scas
cs
andl
push
jnp
scas
sub
sub
in
push
mov
dec
pop
xchg
cmp
test
add
pop
outsb
cmp
or
pop
or
cmpsl
fiadds
sbbl
xchg
push
in
jbe
xchg
xlat
outsb
stos
stc
and
repnz
jge
test
std
ret
inc
push
xor
jo
lea
sub
ja
push
or
int
dec
cmp
mov
stos
sahf
loop
push
pop
mov
hlt
loopne
or
sarl
and
in
cwtl
subb
out
cli
cmp
push
dec
sub
sbb
jb
dec
decl
test
push
sbb
leave
insb
pop
sahf
sbb
mov
mov
jns
add
mov
mov
ret
inc
scas
dec
adc
mov
inc
cmp
pop
mov
out
add
loope
daa
push
and
jns
ret
out
mov
push
cmp
jns
sub
xchg
fcmovne
aas
jmp
shll
mov
adc
pop
out
into
repnz
xchg
int3
aas
fmull
mov
out
cmp
lds
outsl
xor
push
mov
std
jae
mov
addr16
cmc
sub
mov
adc
ficomps
xchg
xor
push
stos
pusha
jo
std
jns
lock
aas
scas
lock
mov
inc
cwtl
mov
pop
nop
xchg
je
hlt
mov
scas
ret
out
xor
jno
data16
pop
cltd
adc
sbb
lock
or
push
dec
nop
fidivs
push
ret
lea
push
hlt
in
into
js
cmp
xchg
es
add
test
add
push
inc
jb
ljmp
add
test
orl
inc
jb
mov
mov
adc
sub
ljmp
int
lcall
ds
popa
idiv
je
jl
pushf
hlt
dec
cmp
dec
sti
ja
adc
push
sub
pop
sbb
cltd
cmp
test
add
mov
mov
les
lcall
out
mov
shll
movsl
add
dec
push
cmpsb
push
lds
xchg
push
or
inc
sti
mov
jmp
aas
stc
jb
dec
pop
sbb
and
cmpsb
or
shrb
out
lods
sbbb
cs
and
movsb
lret
sbb
xor
rcrb
dec
imul
add
inc
pusha
mov
mov
out
fsub
shl
sub
daa
xor
lret
fistpl
push
cmp
jo
fcoms
popf
jg
pop
and
gs
sti
fldenv
dec
add
mov
addr16
pop
jl
in
jno
cmp
fstp
pop
std
cs
add
push
adc
mov
es
cs
cmp
in
push
push
movsl
xor
inc
xchg
mov
jo
dec
mov
sarl
xchg
jge
dec
repnz
and
add
insl
and
lea
xchg
sub
inc
sbb
sub
mov
push
mov
sbbl
ss
jo
xchg
mov
sub
stc
repnz
inc
aad
popa
std
loope
dec
ljmp
mov
int3
cmp
mov
push
or
popa
idivb
scas
insl
sti
dec
shll
arpl
cmp
jmp
xchg
inc
aad
cltd
xorb
data16
sbb
rol
data16
inc
adc
cmp
jmp
and
sbb
mov
ds
les
dec
mov
xchg
stc
adc
mov
sub
aas
es
adc
sub
call
cmp
and
iret
hlt
loope
and
repnz
es
aam
jp
sub
nop
rolb
pop
fs
icebp
sti
mov
and
lcall
push
adc
rorl
push
or
pop
add
sub
mov
lahf
inc
enter
lret
xlat
int3
js
adc
call
adc
pop
xlat
lcall
sarb
pushf
dec
xor
dec
mov
push
dec
mov
mov
icebp
jl
cwtl
inc
repz
in
pop
stc
sahf
idiv
mov
pop
cmp
pop
pop
push
mov
push
aad
repnz
xor
fwait
popf
inc
xor
xchg
out
mov
mov
loope
xor
negl
mov
dec
inc
aaa
sbb
xchg
enter
dec
push
cmpsb
rorl
nop
insl
push
sbb
mov
addr16
lods
loopne
mov
sbb
push
incb
jl
cmpsb
stos
lods
dec
jmp
mov
fnsave
or
mov
sbb
mov
inc
dec
xchg
push
jo
add
hlt
jne
or
xchg
and
jle
inc
sub
jmp
adc
fisubl
inc
add
sbb
cli
cmp
sub
adc
test
jo
icebp
or
jmp
repnz
int
inc
icebp
rcl
fnstcw
sub
dec
rorb
loope
or
fld
das
mov
jp
cmp
sbb
dec
in
jmp
mov
aas
sar
lds
mov
add
mulb
and
xchg
xchg
ljmp
or
dec
push
lods
xor
ljmp
gs
cmp
push
mov
mov
nop
roll
aam
or
cs
data16
jge
mov
cwtl
add
lret
mov
mov
subb
push
jg
dec
push
into
mov
mov
mov
mov
and
xor
cmpsl
test
pop
push
jne
mov
ret
or
mov
cmpsb
dec
movsl
into
jmp
xchg
xchg
jp
in
mov
xchg
push
push
test
add
es
jmp
aad
in
popf
popa
dec
in
hlt
dec
xlat
movsb
sbb
cmp
aam
xchg
cld
scas
push
xor
or
adcb
jo
mov
adc
jle
outsb
enter
add
or
in
cmpsl
sarl
xchg
sbbl
cmpl
xor
test
pushw
add
sub
subl
and
jecxz
aad
inc
mov
inc
mov
mov
test
adc
dec
stc
cmc
and
lret
movsl
ror
pop
stc
push
jge
test
push
cltd
sbb
xchg
xchg
push
pop
push
dec
xchg
mov
adc
test
mov
mov
inc
mov
and
xchg
xchg
subl
mov
adc
arpl
jb
ss
call
inc
shl
arpl
push
push
lock
pop
ja
bound
sbb
and
std
mov
xor
mov
mov
adc
sub
adc
sar
in
std
or
or
popf
stos
dec
mov
loop
push
les
xchg
adc
ljmp
inc
push
inc
mov
add
inc
mov
xor
sti
loope
out
push
mov
xadd
adc
or
cmpsb
movsb
push
dec
jmp
mov
call
and
pushf
ljmp
push
gs
lahf
scas
and
cs
lahf
cmp
ret
out
inc
dec
mov
ja
addl
fsubp
sbb
repz
mov
jl
test
cmp
or
popf
cmp
movsl
test
jg
xchg
xchg
movl
in
fistpl
mov
sbb
out
sbb
aam
sar
cmp
cmp
call
lahf
divb
or
cmp
fcoms
adcl
jns
mov
xor
les
push
sub
mov
addl
aam
insb
loop
outsl
movsl
and
push
mov
fisubrs
gs
gs
hlt
dec
inc
cwtl
sbbl
sub
sarl
mov
rorl
push
and
sbb
dec
cltd
add
int
test
cmp
sub
lret
xchg
xchg
or
xchg
or
test
gs
int
xor
gs
ljmp
push
inc
rclb
mov
cld
fistl
adc
xchg
adc
ljmp
pop
ljmp
cmpsb
lods
push
mov
sbb
dec
in
ds
or
adc
loopne
fdivr
lods
jbe
das
and
scas
add
cmpsl
xorl
loope
add
fucomp
jp
rol
adc
ds
in
or
xchg
rcll
std
or
mov
add
cmp
stos
mov
push
push
lcall
dec
cmp
xchg
push
jle
pusha
pop
mov
lahf
xor
enter
ret
pop
jmp
popf
jmp
xor
jmp
mov
push
push
pop
push
orl
jmp
out
fs
outsb
loope
cmpsl
lret
mov
jbe
jecxz
in
std
leave
add
jnp
cmp
cmp
jmp
cmp
in
int
mov
mov
mov
push
sub
mov
pop
sbb
jle
mov
in
pop
mov
addr16
in
adc
ret
lock
mov
out
dec
adc
cmp
cld
adc
outsb
inc
aam
push
add
ret
fdivl
dec
movsl
fwait
add
scas
and
pop
inc
mov
jo
in
inc
xchg
jl
xlat
or
sbb
or
pop
sbb
addr16
adc
ja
jbe
inc
cmpsb
adc
insl
mov
imull
lahf
and
sub
inc
xchg
mov
insb
sbb
cmp
in
mov
and
jge
or
push
inc
cmp
aad
cltd
jmp
lcall
je
jno
scas
cmpl
mov
nopl
lods
sbb
or
mov
test
mov
fldl
cli
out
pop
xchg
adc
mov
xchg
addr16
out
push
outsb
mov
jmp
aad
pop
xor
cmp
cmp
jp
rcrl
lret
mov
outsl
sub
out
imul
fstps
out
push
mov
push
inc
repz
ljmp
sub
add
mov
adc
lret
fdivr
dec
sti
pop
fwait
xchg
cs
or
iret
push
ret
dec
push
shlb
add
mov
std
mov
mov
mov
push
mov
pop
dec
adc
dec
fisubl
shrl
lahf
imul
jns
adc
mov
or
adc
sbb
into
jns
adc
adc
xor
jg
sub
int
mov
push
les
or
pop
int3
fs
push
xchg
cmp
push
push
inc
and
jne
push
xchg
pop
xor
adc
out
out
and
jle
push
jne
insb
mov
jae
jmp
sub
test
shrl
das
test
mov
lea
or
push
sub
or
sub
push
lea
mov
call
popf
ja
out
scas
imul
add
mov
iret
adcb
dec
and
sbb
push
ret
mov
and
jno
push
das
rorl
int
fdivrs
clc
push
loope
addb
rcrl
nop
in
fcoms
test
pop
and
fsubr
push
insl
dec
jg
and
mov
shrl
ljmp
out
fadd
adc
cmpsb
dec
stos
insb
negb
cmp
jbe
scas
pushf
stos
and
lods
dec
sub
sub
jb
inc
pop
pop
xchg
loopne
std
add
push
add
sbb
mov
js
adc
xchg
pop
push
lods
adc
sub
push
mov
mov
nop
test
fdivl
test
data16
sbb
lret
bound
es
jns
roll
inc
push
mov
push
or
lods
into
in
xor
pusha
jb
mov
in
ja
inc
in
sarl
shlb
ljmp
inc
jl
lcall
es
mov
popa
inc
dec
es
or
rorl
push
push
cmp
stc
cmp
data16
mov
iret
sbb
inc
sahf
xchg
int3
dec
pop
dec
pushf
sub
gs
insb
insl
adc
lahf
pop
into
jno
jo
xlat
adc
lahf
lret
adc
mov
push
jo
mov
in
sbb
cltd
pop
fadd
add
push
sbb
popf
xchg
add
adc
sbb
das
pusha
mov
int
js
movsb
add
lock
add
fwait
jnp
and
pushf
jbe
cmp
mov
mov
and
jecxz
leave
add
dec
call
push
ret
jmp
mov
ljmp
jle
cmp
inc
push
or
xor
adc
jns
out
fists
dec
int3
xchg
addl
dec
call
push
lret
ret
popa
inc
sahf
cltd
nop
out
in
cli
inc
scas
jne
or
out
ffreep
test
test
cmc
loopne
or
xchg
adc
mov
bound
scas
jns
xor
std
or
cmp
push
add
or
mov
addb
jmp
mov
repz
and
sub
dec
or
inc
sbb
or
adcl
ljmp
mov
out
jmp
jge
popf
lods
cmp
int
adc
cmp
xchg
sahf
and
sub
les
out
shll
roll
divl
inc
es
push
fnstenv
or
xor
cltd
std
jne
cmp
pop
andl
mov
dec
insl
mov
std
fmulp
xchg
out
out
or
inc
mov
shll
movsb
orb
inc
mov
gs
sub
xor
test
cmp
sub
xor
push
fstpt
push
xor
add
xor
cmp
inc
and
clc
xchg
xor
sub
lret
and
ds
ror
popa
jnp
push
adc
aad
dec
sti
out
scas
repnz
jmp
addr16
mov
push
rclb
fwait
cltd
iret
mov
xchg
mov
inc
xchg
mov
add
xchg
dec
xchg
ret
mull
daa
mov
mov
enter
cmc
mov
imul
divb
ss
sti
pop
jecxz
sub
test
out
mov
push
jbe
push
lock
sti
sbb
or
jp
adc
dec
in
call
xchg
xchg
cmp
pop
or
orb
lds
push
cmp
mov
fcmovbe
data16
cmpsb
jecxz
mov
and
adc
ret
and
pop
xchg
sub
test
mov
push
xchg
movsb
mov
adc
inc
sarl
out
imul
cs
in
dec
out
cmp
adc
mov
xchg
negb
mov
rclb
loope
add
mov
lods
xchg
add
inc
addr16
and
std
add
js
cmp
mov
fisttps
push
out
inc
out
mov
sub
test
cld
js
rolb
iret
insl
je
das
jb
mov
ror
jp
pop
sbb
in
lcall
sub
push
fildl
nop
shlb
pop
dec
add
fmull
dec
pop
into
pop
decl
inc
mov
ljmp
cmp
movsl
dec
jbe
iret
mov
stos
rcrl
pop
pop
sbb
xchg
cs
loop
adc
rcrb
jbe
les
push
incl
roll
pop
add
leave
das
scas
test
dec
push
dec
adc
push
out
or
or
dec
or
test
gs
mov
fsts
jp
push
imul
aam
push
sbb
xor
cmp
pop
pop
inc
push
imul
mov
repnz
sub
scas
dec
fidivrl
lahf
inc
and
pop
add
lds
mov
imul
inc
or
cwtl
mov
mov
pusha
inc
sbbb
pusha
mov
push
out
outsb
sahf
sub
push
adc
mov
cld
xor
sbb
add
fstpl
hlt
mov
fwait
xor
sbb
dec
scas
lea
std
test
jle,pn
pop
rcl
out
flds
cmp
test
mov
mov
mul
xor
aam
out
mov
push
lea
and
outsl
mov
push
sbb
fxch
xlat
les
dec
das
rcr
mov
add
imul
je
stos
bound
out
pop
inc
mov
aam
add
xchg
mov
ret
test
mov
movsl
es
cmp
add
lcall
push
int
aam
popf
cmpsb
inc
add
call
in
or
stos
xor
push
jmp
stos
add
mov
sarl
xor
stc
jnp
add
lock
sub
popa
inc
repz
aam
dec
out
and
divl
fwait
inc
aaa
jg
mov
cwtl
orl
mov
xchg
stos
aaa
nop
leave
mov
ss
xor
inc
in
add
sub
xor
sbb
mull
mov
cwtl
int
roll
mov
movsl
mov
jnp
sbb
pusha
push
sub
or
cmp
mov
mov
mov
cmpsl
lock
jnp
pop
pushf
jae
add
iret
mov
inc
dec
mov
test
push
shr
mov
aaa
adc
es
jo
call
stos
sarl
inc
ljmp
les
or
mov
xor
mov
mov
or
cld
es
xchg
push
scas
jecxz
popf
js
inc
push
ret
popl
and
dec
cld
cmp
xchg
lcall
mov
mov
pop
test
gs
xchg
xor
sbb
insl
pop
in
cltd
xchg
lock
lods
dec
pop
int3
or
dec
xor
aad
dec
in
push
test
popa
jb
inc
mov
or
js
aaa
rcrl
add
inc
and
push
dec
in
xchg
inc
xor
adc
dec
sub
outsb
and
loope
and
cli
mov
jg
mov
fdivs
mov
ja
add
cmp
test
jb
and
push
dec
imul
je
stc
jbe
or
sahf
adc
aad
cmc
mov
outsb
pop
or
mov
push
add
sbb
hlt
les
cmp
inc
ret
out
fistpl
xchg
bound
enter
test
and
jo
insl
pop
or
jle
sbb
in
push
fs
dec
or
dec
sub
sub
popf
or
int
lahf
mov
jb
out
mov
scas
ficoms
dec
jecxz
inc
jmp
xchg
popa
inc
lret
mov
pop
movsl
aaa
mov
lea
mov
add
sub
ja
faddl
jmp
sub
cs
jo
xlat
lock
insl
pop
repnz
push
adc
or
or
pop
subl
jge
aas
mov
and
xor
clc
push
pop
push
inc
aam
cmpsl
xchg
andl
or
push
insl
mov
cmp
rorb
adc
lods
das
mov
out
in
xchg
std
mov
lcall
in
lock
jp
xchg
push
dec
out
fists
mov
jp
dec
mov
data16
stos
aad
popf
les
or
cmp
inc
ret
pusha
mov
add
inc
addb
rcll
outsb
rorl
gs
mov
jne
inc
scas
test
pushf
or
subb
movsb
rorl
add
imul
sub
movsl
pop
jbe
movsl
jmp
pop
daa
sub
pop
adc
lods
xor
jmp
idivl
imul
inc
lret
dec
loopne
xor
jno
mov
pop
mov
stc
push
clc
lea
or
loopne
jne
or
repz
arpl
std
jb
add
enter
int
push
aaa
je
add
mov
pop
cs
inc
icebp
andl
aaa
xchg
loop
jb
enter
add
inc
push
cltd
test
mov
aas
push
pop
push
cmpsl
sub
dec
ret
into
push
test
xchg
cmpsl
or
ljmp
xchg
std
xchg
out
sarb
js
mull
pop
out
pop
sbb
sub
pop
repnz
add
inc
andb
loopne
jle
add
or
loope
push
sub
fdivrs
movl
fs
jns
pop
cs
sti
jno
jle
dec
stc
dec
pop
lods
jmp
inc
push
inc
push
out
inc
adc
scas
jp
and
adc
dec
ror
jbe
jmp
xor
push
or
loop
cli
cmp
pop
movsb
fs
lret
push
or
mov
pop
dec
jno
out
into
jae
sbb
or
sub
ret
insl
mov
pand
xchg
pop
cld
pop
pop
dec
testl
cmp
lcall
xchg
push
push
gs
scas
fwait
and
scas
sub
cmpsl
gs
movsb
sub
nop
fdivrs
aaa
fnstcw
ljmp
pop
fcompl
inc
in
pop
xchg
cmc
data16
cmpsb
sbbb
mov
mov
mov
lock
push
xsaves
ljmp
mov
xor
in
push
inc
stos
in
and
or
out
add
enter
or
add
aam
enter
pop
pusha
fwait
add
sub
outsb
xchg
xor
mov
aam
sbb
in
mov
push
mov
in
push
pop
xchg
rclb
movsl
js
fstpt
xorl
jae
stc
dec
test
lods
adc
es
mov
aad
arpl
lods
cmp
lret
mov
pop
cmp
dec
lcall
push
and
xlat
jl
int3
dec
add
into
mov
cs
mov
clc
scas
sbb
mov
das
cmpsb
dec
add
test
adc
cmp
fldl
cmc
out
leave
push
xor
in
fwait
lcall
fisttps
stos
mov
les
stos
dec
repz
jp
sarl
pop
add
std
ljmp
gs
lock
push
jp
jmp
scas
add
sbb
mov
xor
dec
mov
adc
push
mov
jae
cwtl
divl
aam
adc
fistl
repz
dec
mov
lods
fnstcw
out
sub
stos
out
cmp
sub
dec
sub
dec
and
mov
test
out
aaa
scas
movsl
cs
enter
test
pushf
les
mov
xchg
fcomp
pop
xchg
stos
mov
pop
andb
stos
mov
xor
xchg
lods
addr16
popa
or
pop
shlb
stos
ljmp
decl
jnp
push
fwait
hlt
scas
pop
pop
fmull
dec
test
pushf
mov
jbe
mov
insl
fucom
test
fldcw
sbb
ss
xchg
gs
or
mov
adc
lods
mov
xlat
dec
outsb
negb
repz
in
xorb
iret
push
xor
jle
test
or
or
ret
inc
push
cmc
outsb
dec
and
pop
or
dec
add
jmp
jl
jb
xorb
es
roll
addl
stos
orb
shrl
xchg
arpl
add
add
lea
pop
int
int3
xchg
jnp
sub
rclb
es
xor
arpl
jne
movsb
sub
rolw
insb
mov
sub
lods
dec
es
pop
ss
cltd
int
lret
into
es
jp
int
rcll
mov
fsubrs
ret
dec
dec
mov
clc
mov
dec
jl
les
fst
and
leave
je
and
cli
xchg
in
imul
push
dec
cmp
mov
adc
das
push
je
test
dec
xchg
mov
mov
sahf
mov
jge
popa
sarb
call
fcmovnbe
add
jecxz
int
jg
outsl
pushf
neg
add
outsb
pop
movsb
dec
push
mov
and
insb
add
outsl
loope
mov
cmp
mov
popf
repz
cwtl
jle
mov
push
mov
add
fiaddl
mov
push
sub
or
sbb
xchg
pop
mov
mov
mov
nop
xchg
inc
mov
and
adc
daa
or
enter
mov
int
das
sub
pop
out
jge
mov
in
arpl
std
cmpsb
push
or
cltd
jae
jns
push
fcomps
fcoml
idiv
sub
outsl
mov
fldt
pop
insb
out
pop
mov
and
stc
sbb
xchg
push
jle
daa
aam
dec
mov
sub
add
mov
xor
mov
and
mov
shl
jo
pushf
loop
pop
cmpsl
sbb
add
adc
arpl
lea
and
orps
dec
cmp
mov
cwtl
mov
inc
mov
shrb
push
mov
ss
sub
sub
mov
mov
cltd
push
fidivrs
in
mov
iret
pusha
cld
sbb
add
lock
mov
das
xor
sbb
decl
or
cmp
test
xchg
incb
sub
inc
into
movsl
mov
adcl
jmp
test
movsb
lret
sahf
pusha
fstps
int3
insb
fistl
or
inc
arpl
sbb
jp
lret
add
jne
jp
lock
xchg
cs
inc
scas
dec
lret
sub
leave
sbb
imul
sub
mov
push
dec
push
push
push
xchg
mov
xlat
sti
push
jae
and
cmc
mov
pusha
mov
fldt
mov
cltd
and
inc
loopne
repz
leave
daa
xchg
outsl
loop
movsb
lods
enter
cmp
int
push
cs
cld
push
or
and
shrl
aas
or
roll
dec
dec
ret
fstps
call
jle
jg
push
lea
lock
jmp
sahf
sub
xchg
and
sbb
stc
iret
jp
test
cmp
fs
mov
cmp
mov
popf
and
negb
xchg
cmp
subl
lcall
sub
jb
ja
dec
enter
xchg
add
mov
sbb
jg
or
movb
loopne
xchg
push
mov
xchg
mov
lcall
xchg
cmc
pushf
push
popf
xchg
pop
repz
xor
hlt
les
add
std
sub
mov
stc
stos
test
adc
je
fnclex
adc
pop
imul
mov
and
adc
adc
je
xor
fmul
adc
jbe
sbbb
mov
loopne
shll
adc
pop
iret
fucomi
xor
mov
push
xor
cmp
pop
notl
mov
int3
in
sbb
fldcw
jns
mov
xchg
mov
sbb
leave
pop
jnp
dec
and
int
adc
cs
fistpll
jno
lahf
adc
jne
push
jl
fstpt
dec
push
daa
fimuls
xor
jb
cmpl
mov
inc
leave
cli
add
mov
cmp
pop
jl
dec
call
xchg
inc
fs
fidivs
inc
movsl
int3
sub
and
pop
lock
adc
sub
lds
or
push
xor
cwtl
cs
sbb
js
mov
nop
cli
push
fiadds
sub
cmp
in
popf
mov
xchg
or
mov
mov
dec
push
insb
jns
and
pop
lods
mov
bnd
mov
push
jno
sbb
sub
sahf
xchg
jg
out
pop
sbb
ret
inc
cli
inc
cs
in
inc
arpl
push
xor
and
sub
rcrl
xlat
pop
jmp
loop
jecxz
adc
xchg
jmp
xlat
mov
roll
fistpl
pop
cmp
jp
mov
cmpsb
push
scas
outsb
repnz
and
int3
mov
mov
mov
mov
icebp
testl
lret
pop
lret
imul
sbb
xor
test
ljmp
sbb
int3
imull
movsl
testl
ret
pop
je
mov
mov
adcb
outsb
sub
fidivrs
js
sbb
imul
sub
es
loopne
ds
jmp
ljmp
dec
ret
dec
out
pop
je
sbb
mov
fisubs
fisubs
aad
mov
testl
cmp
mov
mov
or
imul
aad
in
in
movsl
subl
inc
es
repnz
icebp
pusha
and
inc
nop
mov
and
hlt
cli
add
loop
xchg
xorb
push
stc
adc
jae
add
pusha
inc
xchg
fistpl
dec
mov
lret
lcall
mov
js
xchg
stos
daa
adc
push
lds
popa
pop
insl
jns
mov
ficoml
mov
fs
add
push
jmp
xor
std
mov
bound
add
sbb
lcall
icebp
lret
insb
inc
pop
sbb
scas
xchg
sub
mov
add
ds
inc
stos
ljmp
jno
mov
stos
cmp
gs
into
lret
xlat
add
and
cs
out
lods
cmp
divb
xor
int3
add
notl
xor
inc
or
lret
loope
xchg
mov
cld
scas
je
iret
inc
dec
push
or
xchg
push
popf
loop
mov
inc
cmpsb
push
sti
out
movb
mov
inc
mov
ljmp
push
in
push
jnp
fistps
clc
fisubrs
jmp
and
std
jb
xor
bound
pusha
outsl
push
clc
xchg
test
cmp
or
or
enter
lds
stc
add
roll
mov
ds
loopne
jg
xor
sbb
xorl
data16
in
rcr
into
mov
aaa
ficompl
pop
lahf
mov
int3
stos
out
popa
push
cli
loopne
stos
cltd
mov
dec
inc
or
push
mov
dec
add
mov
xchg
insl
mov
or
jmp
dec
adc
gs
inc
lret
in
enter
cmp
lret
pop
test
lret
xor
ljmp
and
popf
in
inc
jno
push
insb
loop
mov
sbb
inc
sbb
jmp
aad
ja
cli
sub
cmp
imul
and
arpl
out
test
mov
mov
mov
lds
jnp
xor
inc
fwait
lock
dec
iret
xor
popf
adc
iret
or
in
aam
arpl
push
add
enter
xchg
xor
and
xor
mov
mov
xchg
cmp
cli
mov
xchg
pop
mov
popa
adc
push
sahf
mov
ficoms
dec
and
insl
mov
shlb
pop
xor
movsl
xchg
push
xchg
dec
out
push
xlat
and
cmc
cmp
iret
mov
xchg
or
andl
adc
pop
push
add
mov
cmp
cmpsl
pop
mov
mov
loop
sub
add
pop
mov
popl
inc
adc
mov
mov
push
inc
add
lcall
cmpsb
push
push
or
iret
mov
xchg
das
scas
xchg
push
repz
sub
add
cmp
sbb
sbb
das
mov
int
ss
jg
sbbb
and
jecxz
mov
xor
aam
xchg
pushf
clc
lods
xchg
sbb
inc
cld
sbb
cmpsl
or
jbe
inc
cld
movsb
outsb
push
ret
dec
sbb
add
mov
rclb
or
mov
or
inc
rcrb
cmpsb
mov
push
jmp
and
scas
fdivrs
inc
test
cmp
adc
dec
mov
pushf
movsb
in
loopne
or
mov
sbb
mov
movsl
aam
icebp
or
mov
mov
sti
das
pop
repnz
lock
pushf
aas
jns
jecxz
lcall
das
test
rclb
xor
rcll
lods
add
decb
and
test
rclb
inc
movsl
scas
fmull
sbb
jecxz
pop
xchg
lcall
or
cmpl
outsb
cmp
mov
pop
fwait
shlb
ret
lods
inc
shlb
loopne
enter
and
sbb
push
ds
es
push
cmp
aad
fldpi
pop
sub
fsubrl
clc
mov
out
or
aaa
pusha
movsb
and
pop
int
inc
je
lock
nop
mov
das
imul
push
sbb
cmpsb
ret
mov
int
jl
push
inc
fs
imul
mov
inc
jg
inc
ficomps
in
ret
jno
sub
loope
cmp
jb
out
sbb
pop
xchg
rep
lea
adc
and
cwtl
je
imulb
divb
and
outsb
fsubrs
or
data16
cmp
in
pop
push
outsb
mov
xchg
sub
fwait
stos
mov
lcall
decl
xlat
sub
dec
jg
mov
xor
insb
and
clc
xchg
std
xchg
adc
sbb
mov
mov
sbb
jl
ret
frstor
add
pop
inc
pop
das
imul
mov
add
xchg
and
pusha
mov
push
cwtl
fsubrp
js
fxch
dec
rorb
cs
outsl
mov
inc
xchg
add
std
xchg
xor
jae
dec
cmp
xor
mov
inc
mov
pop
gs
arpl
cli
add
ja
jb
and
pop
movsl
insb
scas
fdivl
push
daa
xchg
push
jae
sub
enter
imulb
daa
rcl
ljmp
mov
mov
push
stos
addr16
cmc
push
cmpsl
out
cwtl
dec
in
xor
or
lods
mov
mov
push
in
jno
nop
push
push
mov
xor
cli
cwtl
xlat
pop
in
lret
fwait
inc
dec
hlt
stc
dec
push
sbb
sarb
cs
pop
out
sub
loopne
mov
adc
jnp
mov
cltd
fldcw
or
xchg
or
cmp
push
mov
shl
fsubrs
arpl
daa
sub
add
addl
dec
inc
xchg
scas
cmp
and
insb
fsts
sti
icebp
xchg
jg
mov
jge
xchg
xchg
es
repz
xchg
out
jne
fbstp
mov
mov
ret
adc
pop
fst
test
mov
xchg
add
adc
nop
test
movsl
in
pushf
mov
inc
pop
add
xchg
jae
jl
leave
push
mov
daa
imul
lea
xor
adc
lret
jmp
or
psrad
test
fidivs
test
aad
jg
out
insb
sub
cmp
nop
pop
inc
add
pop
add
rcr
sub
mov
cmp
mov
push
aas
pop
push
ja
arpl
or
jns
leave
mov
jae
popf
imul
and
mov
lcall
scas
aam
mov
fidivrs
xor
cmc
repz
pop
push
fimuls
inc
lret
fimull
lret
rorb
fwait
shll
aad
mov
mov
adc
push
imul
cmp
movsl
int
jnp
std
daa
sub
mov
or
dec
inc
decb
lea
mov
punpcklbw
jo
push
xchg
xor
mov
in
rclb
push
outsl
arpl
popf
lret
cmp
xchg
mov
scas
pop
adc
add
mov
sub
jle
push
mov
and
add
cmpsb
enter
sub
pop
mov
dec
std
shrl
std
mov
pop
xor
mov
push
mov
scas
leave
sbb
xchg
jb
int3
lea
test
push
sti
das
clc
das
push
movsl
je
insl
gs
xchg
dec
adc
adc
cmpsl
ret
testb
pop
xchg
add
jg
or
aam
add
enter
je
cmpsl
dec
sarl
add
dec
lock
push
es
push
cli
movsb
xor
mov
out
sbb
fidivs
mov
sub
fwait
mov
xor
ds
nop
repnz
pop
mov
add
lcall
loopne
ret
xchg
inc
iret
fcomip
fbld
mov
loope
rcrl
sbb
sbb
sti
xor
xlat
mulb
sbb
jo
jp
mov
out
inc
scas
lods
sub
insb
in
test
cli
outsb
mov
in
mov
test
cmpsb
mov
addl
xchg
pop
adc
lds
mov
sbb
sbb
sbb
adc
dec
imul
xor
mov
xor
pop
insb
repnz
movb
push
mov
mov
fistps
sub
xchg
cmpsl
stos
addr16
mov
ret
jbe
jp
and
xlat
add
or
mov
sub
or
xor
push
mov
xchg
repnz
cmp
leave
cli
daa
pop
pop
lahf
xlat
and
add
mov
cmpsl
mov
into
lea
push
mulb
sub
mov
jbe
pop
push
and
fwait
int
push
and
cld
mov
fsubs
jns
add
dec
cmc
jmp
std
mov
sbb
jg
inc
dec
add
and
jno
xor
psllq
xlat
pop
popl
mov
xchg
inc
call
jmp
mov
or
in
mov
daa
dec
push
mov
jp
and
pmuludq
scas
fimull
xor
jl
dec
and
sub
and
pop
clc
xor
jl
or
or
and
or
je
mov
add
cmp
cli
adc
push
loope
lods
bound
mov
movsl
js
mov
lods
dec
xor
lock
pusha
test
cld
xchg
repnz
xor
rcrb
testl
pop
xor
in
mov
pop
pop
cmp
cmp
ret
inc
mov
repnz
insl
jb
es
pop
xor
scas
dec
ficompl
dec
mov
decb
or
xchg
rclb
xlat
mov
push
mov
imul
ss
mov
pop
mov
xor
inc
pop
in
sub
mov
sbb
mov
inc
inc
arpl
xchg
data16
movsb
jge
data16
xchg
xchg
fcompl
cmp
icebp
out
mov
rcl
stc
pop
int
xor
add
pop
push
popa
insb
mov
xor
out
and
push
repz
push
pop
int3
jae
cltd
sub
loope
out
out
mov
lods
cld
adc
pop
scas
jl
dec
enter
aaa
insb
sub
sbb
fldenv
test
rcrb
sbb
daa
jmp
loopne
xorb
imul
mov
sbb
push
into
insb
mov
popf
roll
push
xor
in
or
pop
insb
adc
jecxz
test
push
xor
cmp
lods
sahf
daa
clc
mov
out
mov
call
mov
xchg
insb
outsl
sbb
lret
add
pop
and
sub
mov
clc
call
xchg
pop
test
jno
or
ja
jbe
sbb
leave
inc
sbbl
jno
call
add
push
cmp
adc
fwait
lcall
shr
ljmp
mov
idiv
cmp
xor
loope
and
mov
or
andb
mov
pop
xchg
add
rcl
jnp
pop
add
pop
mov
xor
pop
pushf
cmpsl
mov
push
mov
fs
push
cmpsb
in
add
aas
or
inc
js
mov
test
adc
lock
subb
jb
int
add
sbb
jl
test
outsl
lret
imul
stos
xchg
sti
sbb
cmp
mov
push
or
inc
mov
mov
out
xor
loope
int3
arpl
repz
add
stos
push
or
insl
push
hlt
cmp
inc
data16
rolb
push
or
gs
jbe
lahf
xchg
pushf
fwait
in
jmp
mov
loopne
and
pushf
pop
xchg
fnstenv
fidivrl
push
mov
lea
pop
loope
nop
cmpsl
push
jle
arpl
pop
sbb
repnz
arpl
lahf
cmc
pop
jmp
sbb
or
aaa
orl
stos
aas
ds
cmp
and
in
adc
hlt
mov
push
gs
cmpsl
cmp
sbbb
inc
pop
out
or
mov
lret
cmp
push
push
or
pushf
push
iret
adc
add
lds
xchg
push
stos
inc
dec
imul
cld
fwait
mov
shl
repz
push
es
add
in
int3
pop
testl
push
inc
lret
mov
addr16
ret
loope
ror
mov
in
call
jg
pop
fistps
jnp
xchg
inc
and
loope
xor
les
ja
jp
clc
das
xor
xchg
pop
test
cmp
stos
pop
sahf
sahf
cmp
lods
jp
jp
mov
adc
stc
sbb
imul
xchg
mov
cmp
pop
gs
or
mov
pusha
call
sbb
pop
stc
dec
cmc
sbb
scas
lret
icebp
stos
hlt
xchg
dec
jle
ja
mov
cmc
iret
pop
pop
pop
sub
ret
dec
xchg
roll
sub
outsb
sub
dec
sahf
ss
ljmp
jl
xlat
xor
pop
mov
cmc
cmp
hlt
inc
loop
mov
xor
cmc
movsb
or
loop
push
pop
in
pop
cmp
aas
arpl
icebp
mov
mov
cmp
push
mov
push
mov
mov
mov
or
out
daa
adc
ret
cs
in
mov
xchg
rol
outsb
xor
push
pop
lds
out
pusha
popf
and
xlat
loope
inc
mov
xchg
jmp
mov
inc
mov
dec
test
arpl
jecxz
pop
cmp
pop
cwtl
sbb
mov
lahf
sti
sbb
pop
es
jp
and
mov
mov
dec
jle
ljmp
daa
mov
pop
test
dec
mov
addr16
popa
outsl
mov
sbb
mov
or
shl
cs
push
int3
pop
cmpsl
enter
fs
or
jbe
lock
xchg
sti
ljmp
test
mov
push
and
xor
xchg
inc
leave
mov
adc
inc
dec
cmc
cmpsl
or
fs
fisubrl
lock
sub
ljmp
packsswb
outsl
jbe
mov
cmpsb
lods
dec
pop
xchg
movsl
lcall
jne
in
cmp
xor
adc
jp
push
dec
mov
dec
or
daa
fsubl
loopne
or
and
mov
add
pop
cmp
mov
xchg
in
sbb
aad
lahf
jno
and
pop
and
ljmp
pop
shll
lret
roll
rcr
mov
sub
sbb
std
sarl
dec
push
dec
fwait
dec
nop
test
jae
or
or
pop
mov
fcoml
jmp
mov
movsl
popf
xchg
insl
std
xorl
push
leave
loope,pt
lods
pop
into
movsb
mov
lock
std
cmp
xor
mov
nop
jae
cmp
dec
iret
test
jp
add
lock
sbb
pop
xchg
decb
jp
cli
xor
fsubrp
lods
xor
inc
jae
add
mov
mull
xor
jl
sub
lock
push
jno
out
lret
rclb
mov
in
cmp
cmpsb
jb
jb
sub
sub
fsub
and
out
pusha
mov
rolb
imul
imul
pop
xchg
rcll
jle
insb
stos
insb
sbbb
loopne
sub
out
hlt
fldt
arpl
or
sbb
xchg
mov
jne
inc
and
jne
sahf
sbb
out
adc
test
or
add
jne
lret
cmp
push
mov
daa
mov
adc
test
aas
sub
or
imul
pop
jns
add
jge
sbb
or
mov
push
icebp
out
mov
add
pop
jmp
loop
nop
pushl
mov
jo
movsb
pushf
sub
inc
push
cmp
int
cmc
iret
mov
ds
mov
test
dec
lahf
aam
sbb
xor
xchg
xchg
shr
bound
push
jo
push
pop
js
mov
orb
add
push
pop
jl
cltd
pop
pop
sahf
in
sub
inc
and
mov
inc
mov
inc
dec
pop
std
or
fisttps
mov
sahf
jge
das
sbb
test
fs
mull
jns
mov
int3
lock
repnz
cli
std
in
pop
cmp
mov
mov
dec
loopw
mov
mov
pop
dec
mov
xor
lods
inc
lods
lahf
mov
rclb
or
dec
add
add
lds
pop
stos
push
pop
stc
and
add
cld
sbb
fistpl
test
mov
mov
test
mov
out
add
fmul
and
shrb
adc
repnz
xchg
icebp
mov
push
std
push
in
jle
std
cs
push
pop
lahf
jae
xchg
out
xchg
mov
sbb
mov
cli
push
or
pushf
sbb
inc
subl
jnp
mov
jecxz
stos
movsl
mov
into
push
pop
and
in
add
test
in
sub
inc
ljmp
leave
sbb
pop
insb
in
or
dec
push
xchg
or
out
inc
shrl
mov
in
pop
pusha
xchg
cmp
add
sbb
inc
dec
test
cmpsb
add
add
jl
pop
dec
push
mov
scas
decl
fcos
cwtl
stc
add
cmc
and
cmp
and
sbb
ljmp
lret
popa
stc
inc
outsl
popf
out
aas
mov
insb
push
lret
xchg
sbb
stc
iret
stos
mov
adc
push
nop
fmuls
push
and
dec
xlat
add
mov
test
repz
fnstcw
sub
pop
sub
outsl
push
loop
mov
add
mov
mov
mov
jg
popa
mov
js
dec
ss
mov
testb
jle
ja
shll
jbe
or
pop
xchg
loope
jno
jo
jb
clc
icebp
orb
mov
xor
pusha
push
mov
gs
call
mov
sahf
jmp
sbb
mov
dec
mov
sub
ss
lahf
jecxz
dec
mov
push
add
adc
movsb
mov
imul
ret
pop
lock
adc
dec
push
cmp
jmp
es
jg
ror
push
imul
shll
and
les
insb
push
es
fwait
sub
mov
in
mov
pushf
sub
mov
cli
xchg
sar
cmp
xchg
and
cmpsl
ret
mov
icebp
ret
pop
pop
out
out
dec
leave
mov
mov
mov
pop
jns
test
ret
dec
mov
sbb
sti
test
ss
add
sub
js
dec
je
xor
cmp
insb
cmpsl
rcrl
sbb
mov
fistps
sbb
inc
ljmp
sahf
fistpl
mov
sub
push
lock
cmpsl
ret
or
aam
adc
addr16
fstpt
adc
sbb
cmp
orl
adc
lods
pop
xor
and
xchg
call
fstpl
in
add
aam
jmp
sti
iret
sub
sti
dec
jns
add
and
jb
mov
out
mov
and
pusha
mov
xchg
sti
sbb
loope
xor
push
pop
push
sbb
jmp
dec
dec
pop
popa
subl
ret
dec
sub
scas
or
jg
push
pop
push
push
popf
nop
dec
mov
dec
mov
sbb
stc
jg
lock
jnp
sub
or
in
inc
mov
dec
jl
adc
xchg
scas
push
movsl
cmc
mov
add
in
lea
mov
pop
leave
mov
mov
mov
xchg
arpl
jge
shr
in
push
in
mov
add
sbb
push
and
and
rcll
lcall
sahf
xchg
dec
popf
xchg
mov
xchg
je
mov
inc
cmp
test
pop
sbb
cmc
mulb
out
cmc
sub
ret
mov
cmp
pop
sub
push
push
subb
das
sub
testl
cltd
mov
and
inc
adc
sub
xchg
gs
sub
pop
notb
mov
jecxz
std
stc
loop
fs
into
push
xor
pusha
sub
daa
push
sub
lock
shl
test
jp
mov
mov
add
cmp
mov
jge
inc
jg
mov
mov
push
lret
ja
xchg
xchg
lds
enter
jp
ret
ja
or
adc
mov
sub
aas
pop
and
outsb
mov
loop
shl
jle
cltd
fsubs
cmp
stos
mov
jl
daa
sbb
in
or
inc
cmp
testb
int3
cmpsb
inc
xor
and
lret
movsb
xchg
into
test
sub
dec
sbbl
push
push
scas
divl
call
xor
enter
inc
hlt
stos
inc
sahf
repnz
mov
mov
inc
mov
cmpsl
push
pop
lahf
sub
cmp
jns
mov
sub
pop
pop
mov
cmc
pusha
push
ds
int3
jge
adc
or
das
or
std
push
ret
stc
mov
mov
cmp
fsubl
pop
std
jle
fisubrs
xor
mov
inc
pop
jno
in
ljmp
mov
dec
mov
cs
int
or
sbb
adc
xor
enter
pop
hlt
rorb
pop
xor
push
cmc
leave
mov
push
std
sbb
adc
xchg
pop
cld
das
fs
jae
insl
dec
jns
out
push
outsb
popa
adc
fmuls
xchg
aaa
adc
jno
in
lret
pushf
push
insb
mov
mov
pop
inc
cmp
dec
loopne
enter
push
fisttpl
loop
add
lret
aam
dec
or
add
push
inc
sub
popa
cs
sub
mov
loop
lcall
mov
jg
mov
lea
ja
ljmp
movb
push
jb
aam
xchg
outsl
lods
jmp
jmp
cmpsb
aaa
mov
push
inc
repnz
pop
loopne
mov
cmp
dec
mov
jp
imul
mov
or
xchg
pusha
inc
jbe
jmp
lea
or
loop
mov
adc
pop
ljmp
mov
les
out
mov
mov
add
lahf
cmpsb
lahf
inc
inc
imul
jg
sti
daa
pop
in
scas
dec
and
cwtl
adc
js
cld
pusha
pop
sub
and
test
hlt
loop
xchg
inc
popa
adc
in
sbb
ret
fdivrs
arpl
dec
jp
clc
mov
cmp
dec
arpl
pusha
iret
std
sbb
mov
ljmp
sahf
sti
mov
add
adc
pop
cltd
ds
out
xchg
jb
outsl
push
cli
or
mov
mov
lock
or
mov
hlt
mov
shrl
add
and
dec
jp
stos
push
enter
add
loop
sbb
lcall
loopne
movsb
minps
shrl
adc
in
inc
sub
mov
inc
dec
mov
outsl
mov
sbb
push
sbb
push
add
mov
dec
push
mov
mov
daa
js
imul
popf
ficoms
jmp
mov
or
addr16
ror
xor
mov
xchg
ljmp
icebp
jb
div
sbb
push
fnstsw
and
push
xchg
xor
inc
fiaddl
pop
hlt
mov
into
xchg
nop
fcmovnu
and
lods
idivl
add
xchg
jl
xchg
popa
cmp
into
lcall
or
test
mov
xchg
cwtl
cmp
mov
leave
sub
xlat
or
popa
out
and
mov
sbb
int3
rcl
jnp
fstpt
fnstcw
lcall
mov
sti
loopne
in
xor
lret
ret
and
sbb
daa
stos
cwtl
inc
pop
aaa
dec
cld
addl
dec
insl
and
inc
jmp
pop
addr16
sbb
das
cmc
shll
or
leave
xor
or
lods
pop
cs
rorl
push
pop
sub
push
fwait
add
push
in
jmp
rcll
or
cmp
fmuls
push
cmpsl
into
sub
add
shll
push
sbb
add
cmpsb
cltd
jp
in
sahf
jle
nop
lret
mov
sbbl
pop
inc
inc
and
adcl
mov
add
mov
mov
add
icebp
or
add
push
sar
push
sub
cmp
inc
cmpsb
test
cmp
or
sti
adc
push
imul
cmpsb
cli
lcall
repnz
pop
movsb
dec
mov
test
inc
mov
mov
cmc
mov
movsl
pop
and
xor
js
lock
add
test
mov
xlat
leave
pop
mov
cld
xor
push
mov
inc
shlb
mov
movsb
ds
or
shrb
jl
ror
call
roll
mov
jns
push
xchg
cmpsb
je
daa
jg
push
mov
sub
dec
sbb
cmp
jbe
cwtl
ds
and
addb
add
mov
aad
push
aad
cltd
fmul
fldenv
movsb
sub
clc
dec
cmpsb
xor
add
inc
data16
jmp
in
testl
add
pop
jae
outsl
sbb
sub
push
and
add
filds
xchg
push
lcall
sub
xor
mov
jno
add
das
imul
fisubrl
das
mov
repz
movsb
fisttpll
outsl
or
icebp
icebp
xor
pop
and
mov
xlat
stc
and
inc
pop
sub
pop
js
imul
jp
in
dec
icebp
fidivrs
test
cmp
fs
mov
jle
sub
pushf
xor
fsub
andb
cmc
inc
fisttpl
scas
xchg
xor
movsb
jmp
add
cmp
je
stos
stos
mov
and
jns
sbb
mov
fs
sub
jo
adc
adc
popa
cli
or
pushf
push
fimuls
mov
pop
inc
adc
add
pop
roll
fdivr
sub
pop
sub
cld
loopne
subb
sarl
andl
push
push
call
adc
sahf
mov
ss
cs
cli
cmp
dec
mov
out
data16
dec
enter
mov
test
ffreep
or
aam
fbld
jecxz
movsb
clc
mov
aaa
sbb
cmp
enter
lods
push
dec
imul
xchg
sti
out
ja
out
sarl
out
mov
add
pop
dec
push
adc
fidivl
adc
imul
test
mov
pop
iret
inc
pop
sub
sahf
iret
loop
out
fnsave
push
adcl
data16
mov
jnp
or
int
jae
orl
cmp
mov
inc
fdivrs
loope
stos
add
push
stc
shrb
fcomi
fsubrl
mov
movsl
add
pusha
popa
pop
movsl
mov
pop
mov
inc
jno
or
fnsave
ljmp
mov
xchg
inc
ret
sbb
jae
jae
in
arpl
jle
mov
sbb
add
push
jl
cmp
xor
mov
pop
dec
insb
stc
sti
push
mov
push
inc
xor
fisttpll
decb
xchg
gs
dec
imul
adc
pop
shll
adc
push
imul
inc
ds
push
or
fistl
fistl
lcall
and
leave
inc
lock
bnd
inc
out
dec
jns
mov
sbb
lock
and
popf
loope
idiv
rcl
movsb
shrb
pop
les
xor
insl
push
in
stos
imul
pop
clc
mov
lods
sbb
xor
and
sub
mov
fidivs
or
mov
ja
dec
add
sub
aaa
shlb
xor
and
pop
and
mov
ja
test
xchg
fwait
and
lock
xchg
cwtl
xchg
push
adc
fsubr
out
adc
push
or
xchg
mov
push
fucompp
outsb
add
repz
xor
iret
js
sub
sbb
mov
dec
adc
icebp
fcoml
and
sub
das
rcrb
stos
pop
mov
rol
sahf
lahf
lea
pop
pop
adc
mov
sahf
jns
mov
lret
sub
dec
enter
jl
lcall
push
mov
mov
lret
cmc
adc
test
cmp
and
js
mov
dec
mov
dec
cmpsb
lret
push
xlat
or
pop
int3
or
stos
loop
in
insb
cmp
xchg
inc
mov
mov
cmc
mov
and
xchg
dec
push
and
out
scas
das
cltd
mov
popf
sbb
into
dec
ret
mov
sbb
js
lcall
xchg
add
fld
jp
sub
gs
loopne
mov
adc
sub
jnp
fs
mov
mov
pusha
add
push
mov
fs
aas
sbb
or
push
mov
mov
xor
aam
add
jno
leave
or
add
mov
aam
dec
and
sub
mov
xor
pop
aam
jo
cmp
lcall
test
cmp
sbb
cmp
adc
and
dec
lock
lret
cmp
sub
lret
loopne
in
jg
into
adc
lds
xchg
movsl
popf
lcall
jb
clc
push
out
pop
popa
ret
popf
sarb
adc
jo
in
jae
popa
add
ds
push
or
mov
sub
cmc
ds
scas
f2xm1
or
dec
ficompl
aas
nop
dec
mov
and
sbbb
test
or
sbb
das
daa
jge
adc
mov
cmp
push
out
jecxz
add
clc
xchg
push
sahf
movsl
lret
dec
mov
imul
aam
sbb
test
inc
xchg
addr16
pop
jo
xchg
xchg
pop
or
mov
movsl
xchg
aam
data16
xchg
das
add
and
xor
mov
cs
add
aam
mov
push
cmpsb
push
sbb
lds
dec
out
lret
inc
clc
fidivs
dec
out
call
nop
push
cmp
dec
ss
fwait
lds
jl
les
adc
xchg
test
hlt
addr16
mov
fs
lahf
adc
push
cli
cmpsb
xchg
mov
icebp
cmp
pop
jnp
aam
sbb
push
mov
sub
mov
adc
lea
push
es
lret
popa
orb
push
jge
rolb
mov
or
mov
int3
dec
pop
sub
xor
in
jmp
jo
xor
clc
pop
jnp
mov
add
pop
mov
pop
push
sti
pop
or
sbb
cmp
orb
mov
movsl
stos
pop
jp
jge
mov
repnz
mov
cmc
rcrb
scas
ljmp
inc
shr
adc
fists
or
out
mov
pop
mov
into
imul
movsl
add
insl
hlt
add
inc
xorl
xchg
and
arpl
push
arpl
in
cmp
dec
in
ss
jbe
dec
adc
mov
fimull
insb
fsubrp
sub
inc
mov
ja
push
xchg
add
ret
jb
mov
jno
fisubs
dec
popf
fistl
les
loope
rcl
pop
xor
and
jns
vmovq
pop
addr16
call
mov
mov
loopne
add
lea
pop
ret
add
sbb
xchg
mov
cwtl
mov
mov
out
andl
cld
cli
ror
mov
ss
lahf
nop
into
bnd
xchg
stc
cmp
or
xchg
push
mov
cld
adc
push
push
mov
mov
lret
dec
fwait
test
adc
ss
out
cmp
jmp
in
mov
stos
je
mov
idivl
mov
dec
cmp
imul
sti
leave
and
hlt
mov
push
pop
adc
and
mov
syscall
xchg
divb
xchg
fisttpl
fstpt
mov
jae
inc
hlt
inc
adc
popa
fnstenv
mov
repz
pop
movsl
rcll
sbb
sbbb
cmc
add
out
sahf
add
cmc
popf
xor
popa
or
jne
jb
cmp
sbb
xor
pop
push
enter
cmp
or
inc
inc
push
loope
jl
mov
loope
loope
dec
push
xor
repnz
test
addl
jmp
call
pusha
cmc
xor
into
push
inc
xchg
jl
jno
bound
cmc
dec
and
into
pop
xchg
cmp
notl
loopne
mov
sub
mov
sub
mov
ljmp
outsb
add
mov
fisttpll
xor
or
mov
test
pop
push
xor
xchg
in
rorb
pop
cmp
leave
sub
test
jnp
jne
jge
sub
jnp
jo
je
fld
gs
loope
pop
mov
rcll
push
mov
cmp
sub
cmp
fld
jle
cmpsl
enter
in
out
and
pop
fsts
adc
mov
imul
fs
arpl
push
push
ss
dec
roll
inc
dec
mov
mov
jle
ror
popf
stc
pushl
iret
fadds
mov
mov
test
add
sti
test
and
adc
sarb
jmp
adcb
sbb
xor
mov
sbb
mov
mov
lret
std
nop
jmp
cmp
leave
xchg
addr16
imul
add
jmp
sbbb
hlt
mov
mov
cli
cmp
gs
clc
lock
jbe
push
mov
notb
fsts
mov
push
push
push
daa
shl
loope
pop
cwtl
movsl
jae
sbb
xchg
sbb
idiv
adc
lret
xchg
or
scas
incb
movsb
push
popf
jecxz
ret
mov
cmp
call
cmp
mov
insb
fcoml
nop
stos
pop
das
xor
xchg
rorb
shlb
xchg
sbbb
jae
ljmp
inc
sub
pop
and
and
inc
sbb
mov
sub
rcr
fdiv
adc
sub
pop
or
loopne
or
leave
jae
addr16
xchg
jnp
jno
and
xchg
shl
xor
push
mov
jo
xorl
test
stc
inc
lock
orb
loop
ret
or
shlb
pop
aad
sub
xchg
pop
div
in
mov
rcll
push
imul
icebp
sbb
mov
bound
fwait
push
jge
dec
xor
dec
ss
das
dec
push
pusha
xchg
lds
call
xor
jge
lret
jg
jns
fnstenv
popa
pop
aaa
jecxz
aad
mov
jne
orb
scas
std
lret
jp
fmulp
mov
mov
mov
cli
jb
mov
stos
dec
mov
int
dec
movsb
lcall
cmp
out
xchg
imul
lods
vmread
jb
push
negb
pushf
div
dec
int
sbb
pop
xchg
or
bound
sub
inc
or
xor
repz
mov
mov
test
daa
jecxz
mov
iret
inc
jnp
xor
lcall
fmull
les
mov
push
cmp
pop
inc
out
into
xor
xchg
mov
pop
sub
bound
jmp
and
ljmp
mov
sub
dec
jne
xor
fistps
lock
pop
sarb
adcl
add
inc
cmp
jle
pusha
jmp
push
lds
xchg
cmp
mov
mov
pop
and
flds
lock
xor
mov
push
and
mov
nop
xchg
movsb
daa
inc
loope
xchg
xchg
xchg
push
add
mov
pop
xor
sub
ret
fcomi
xchg
mov
inc
sti
popf
xor
rclb
mov
sbb
scas
cmpsb
jmp
xchg
cmc
lcall
mov
push
shl
daa
cld
js
ljmp
pop
sub
xor
dec
push
test
pop
mov
jae
cli
int
call
inc
cli
clc
pop
push
jne
jo,pt
mov
mov
repz
fisubl
add
pushf
fldt
pop
add
imul
aad
jmp
push
push
mov
sub
inc
jb
pop
pop
out
jo
push
sbb
bound
xor
pop
test
fistpll
jmp
sbb
inc
dec
cld
stc
inc
and
cmp
xor
sub
pop
not
in
inc
rcrb
ljmp
xor
ret
in
imul
arpl
push
ficomps
adc
push
es
imul
sbb
es
int3
inc
adc
push
sbb
fmull
fcoml
lods
mov
mov
jbe
pop
fwait
and
stc
mov
dec
int
adc
xor
xor
xchg
jmp
stos
test
pop
jl
popf
imul
repz
xchg
pop
xlat
or
adc
push
mov
lds
stos
jo
cmp
fucomip
shlb
jns
testl
mov
ds
and
test
sarl
in
cmpsl
pushf
push
std
inc
hlt
sbb
adc
pop
jb
jmp
or
pop
sub
mov
and
sub
testb
and
push
push
loopne
adc
icebp
int
fwait
dec
fmuls
mov
popf
incb
push
dec
adc
inc
filds
inc
out
jns
dec
sub
sub
aas
or
push
shl
adc
sahf
ljmp
mov
pop
or
jmp
std
xor
add
jbe
inc
mov
push
push
cmp
mov
xchg
out
cld
orl
push
xor
mov
jecxz
cmc
pop
mov
in
dec
jl
xchg
or
jo
std
int3
scas
adc
mov
pushf
sub
fmul
pop
adc
mov
fdiv
xchg
call
and
pushf
aam
icebp
mov
sub
in
in
cli
shrb
int3
add
add
mov
aas
jecxz
mov
lods
jo
lods
mov
pop
sub
mov
jl
std
rol
bound
outsl
popf
add
add
iret
cli
cli
shl
sbb
aas
pop
addr16
stos
xrelease
in
rcr
push
sahf
aaa
popa
je
bound
aam
movsl
in
mov
cmpsb
fimuls
xchg
mov
outsb
and
pop
scas
sub
aaa
aam
mov
arpl
mov
ret
fcomps
nop
push
xchg
insl
jb
and
repz
in
mov
pcmpeqb
es
fwait
dec
repz
popa
ja
cmp
adc
sbb
aas
mov
out
out
adc
fwait
xor
loopne
add
pop
or
test
das
and
add
xor
decb
mov
outsl
adcb
dec
mov
or
movsl
xchg
jge
loop
inc
push
sub
mov
cwtl
shrl
int
cmc
and
lahf
cmp
lret
mov
outsl
addr16
sub
sub
jmp
cmc
sti
fcoml
scas
mov
cmp
push
aas
push
mov
insb
shrl
mov
jecxz
scas
mov
sti
jno
sbb
dec
xchg
int3
push
pusha
sub
repnz
pop
je
xor
push
ret
dec
movsb
sbb
or
add
pop
xor
and
hlt
lods
sti
mov
sbb
mov
sbb
mov
jne
push
add
xchg
andb
mov
icebp
cmp
sub
pop
js
or
mov
sbb
aam
jne
pop
or
popf
push
push
pushf
dec
stos
aam
sbb
inc
jne
aaa
jmp
cs
test
shl
adc
mov
and
sub
pop
push
das
sahf
push
popa
inc
mov
sub
test
lret
lods
pushl
cmp
int
js
jns
push
stos
pop
push
cmp
adc
push
sarl
mov
and
movsl
adc
inc
mov
loope
test
xchg
adc
xlat
pop
clc
mov
push
das
repnz
jl
adc
iret
xor
cmc
or
ficomps
sbb
cmp
inc
xor
dec
jo
test
cmp
xor
sbb
sbb
insb
inc
popa
ds
rorb
add
sub
into
mul
in
mov
out
adc
loope
dec
mov
shrl
out
push
push
dec
or
cmp
mov
or
mov
xchg
mov
jb
mov
stos
in
ret
sbb
neg
lods
mov
fcoms
dec
xor
xchg
sbb
mov
cmp
popa
and
ds
fsubp
in
fsubl
jmp
fstpt
outsb
jae
cwtl
xchg
pop
cmp
shll
mov
out
inc
mov
popa
pop
mov
mov
inc
das
xchg
lahf
dec
jbe
adc
repnz
and
out
int
pop
lahf
icebp
adc
arpl
push
loop
jecxz
mov
insb
mov
sbb
adc
jns
jmp
dec
leave
mov
cmp
cmp
jnp
mov
imul
jp
repz
pop
jb
mov
leave
xchg
adc
test
sbb
jo
int3
or
insb
sub
or
mov
nop
inc
pop
sbb
xchg
pop
scas
test
pusha
dec
xchg
out
and
xchg
imul
aaa
push
ds
dec
dec
push
jb
pop
fs
int
mov
fdivrs
sbb
jns
sbb
mov
dec
or
sub
pop
addl
pop
mov
jecxz
fwait
adc
out
push
outsb
jg
push
sarb
mov
ds
pop
shrl
stos
pushf
clc
dec
scas
loopne
push
mov
xchg
sbb
dec
popf
inc
lock
jnp
xchg
fs
push
fcomps
dec
jo
cmpb
loop
jge
mov
clc
fsubr
add
shrb
xchg
fadds
test
xchg
push
fwait
jns
xor
cmpsb
push
int3
aam
sub
mov
fimull
test
dec
fs
mov
orl
sbb
insl
test
out
inc
aaa
jae
inc
outsb
cmc
cli
sbb
lret
imul
shr
and
mov
sub
rolb
sarl
dec
icebp
mov
aam
cli
dec
or
arpl
mov
fsubrp
pop
test
movsl
push
mov
fwait
jb
or
adc
jmp
aas
lds
cmp
inc
sub
fwait
jno
movsb
lahf
adcb
pop
int
lea
jae
cwtl
push
outsl
xchg
sbb
popf
test
dec
shll
dec
int3
adc
push
or
or
insb
shlb
push
or
cmpsl
mov
push
xchg
ljmp
fcmove
sub
daa
xor
mov
fcompl
sub
pop
mov
in
and
cmp
mov
mov
push
jno
lcall
sub
dec
test
mov
jnp
or
fistpl
loope
mov
push
lea
outsb
add
jnp
cmp
mov
shrb
sti
prefetcht2
adc
jecxz
gs
sbb
lcall
loop
mov
xor
loopne
adc
mov
cmpb
out
adc
test
aad
ror
test
mov
fwait
push
ljmp
fsubrl
repnz
cmp
jno
pop
jns
js
ljmp
icebp
sbb
iret
sbb
push
mov
inc
and
push
jl
cmp
out
mov
addl
mov
pushf
push
into
fstpl
cmp
pop
cmp
inc
sbb
push
stos
in
gs
lret
xor
mov
movb
iret
push
xor
cmp
push
sub
cmp
adc
out
sub
subb
jno
js
mov
mov
xchg
push
in
or
xchg
lods
je,pn
imul
in
sbb
hlt
mov
sbb
lret
push
jge
xchg
icebp
es
or
xchg
ret
pop
xchg
in
daa
or
dec
jmp
jne
inc
int
xchg
xchg
adc
or
add
iret
xor
fstps
call
mov
std
jns
cmp
mov
pop
mov
mov
leave
adc
leave
mov
das
jno
xchg
cmpsb
xchg
sub
pop
and
adc
adc
dec
xchg
xor
xacquire
fdiv
or
std
cltd
add
mov
jecxz
inc
popa
cmpsb
mov
adc
es
lods
push
ljmp
push
sbb
pop
sub
icebp
lock
rorl
sarl
pop
stos
jecxz
ljmp
sub
fcomps
mov
xor
jl
fdiv
or
jge
arpl
cmp
sbb
mov
sub
clc
jmp
dec
mov
xor
jae
xchg
ss
cmpsb
cwtl
int3
sub
mov
arpl
adc
fmull
aam
adc
pop
rcl
mov
fistpll
imul
int
mov
mov
pop
cli
ret
xor
jp
jns
add
jp
xor
ficoms
nop
xor
pop
pop
bound
inc
out
jp
dec
mov
out
jno
sbb
push
cmp
ss
add
push
cwtl
loop
mov
sub
sbb
pop
lcall
lret
mov
movsb
in
pop
incl
and
xchg
dec
mov
jbe
gs
dec
inc
cmp
mov
pop
int
cwtl
aam
jge
sub
test
aas
xor
cli
sub
cwtl
hlt
dec
ficoml
jecxz
test
pop
dec
pusha
rclb
jb
into
or
ljmp
jae
mov
mov
fldl
fadds
cmp
sbb
int3
mov
jl
pop
sub
mov
add
jge
cmpsl
mov
push
and
les
lret
mov
sbb
sti
xchg
cmp
pushf
add
cmpsb
jg
jmp
add
add
adc
inc
and
shlb
jl
rol
jns
not
negl
fnstenv
inc
mov
bound
shl
push
mov
dec
pop
and
sbb
jecxz
leave
cmp
jnp
jecxz
scas
pop
cmpsb
lcall
sub
mov
gs
shlb
insb
mov
cmp
and
sub
out
mov
test
dec
aad
adc
jne
mov
xchg
jl
mov
pop
fwait
xchg
xlat
or
mov
lahf
push
andb
push
fcmovb
push
inc
cltd
sub
cmp
jle
insl
subl
fisttpl
pop
int3
out
stos
jne
ret
popa
insb
les
cwtd
cmc
pop
push
inc
lret
repnz
dec
outsb
mov
jnp
cmp
movsl
mov
out
pop
repz
sub
dec
xor
add
push
fwait
mov
shll
mov
mov
lcall
rcrl
pop
mov
and
inc
stc
loope
adc
pop
fprem1
lods
adc
cmp
imul
ja
or
out
mov
jmp
das
ss
cmc
outsb
in
movsl
shll
inc
mov
inc
pop
loope
adc
mov
scas
mov
or
bound
or
rclb
lcall
and
mov
fnstenv
cmp
test
fwait
clc
lret
sbb
mov
movsl
mov
lock
cmc
push
or
jg
add
lea
ficoml
xchg
pop
push
in
pop
add
aaa
mov
out
and
ret
fs
add
movsl
cmp
xlat
repz
cmpsl
in
mov
mov
mov
push
pop
xchg
outsb
das
mov
imul
loope
xor
cmpsb
loopne
imul
std
or
aas
or
lock
addb
jg
call
ror
add
out
cmp
add
shrb
leave
stc
jb
sub
dec
jnp
sbb
shrl
xchg
rcll
jno
pop
js
xor
sahf
xor
lods
mov
out
rcrb
jb
cmp
mov
xchg
cwtl
rorl
jge
mov
fyl2x
lock
cld
test
aaa
das
fs
imul
lods
jno
sbb
fmull
add
sbb
or
mov
sbb
repz
stos
ss
dec
scas
mov
orb
nop
ror
or
scas
daa
lods
iret
les
pop
and
add
jnp
jg
sbb
lahf
inc
cltd
loop
inc
cmpsb
sbb
icebp
jnp
mov
and
mov
pop
adc
jle
add
mov
pop
jno
movsb
adcb
fsts
test
add
sarb
push
fs
imul
dec
add
dec
inc
js
push
lods
add
jnp
push
cmpsb
loopne
aad
mov
out
popf
mov
jb
clc
dec
push
and
in
popa
stos
fadds
dec
mov
dec
xorl
add
lret
jnp
jb
mov
cmp
push
outsl
leave
lea
xor
data16
mov
out
test
movsl
fimuls
inc
cmp
test
in
jbe
mov
xchg
in
int
inc
stc
fsubrp
pop
leave
inc
sub
je
xchg
and
push
je
leave
insb
sahf
stos
jne
jno
test
pop
jae
popf
or
hlt
and
imul
stos
pop
add
jbe
inc
dec
and
pop
int
popa
and
shrb
stc
shlb
sti
sub
or
lahf
and
xchg
push
push
and
loope
pop
and
call
push
push
push
add
leave
and
inc
daa
clc
out
mov
mov
lods
fcoms
mov
and
sub
adc
sub
pop
mov
test
mov
mov
mov
lahf
fucomip
sbb
add
ja
imul
std
mov
outsb
mov
fidivs
pop
xor
imul
add
xchg
xor
leave
cmc
mov
aam
iret
lods
sti
popf
scas
jle
aaa
ja
push
incb
repz
stc
xchg
add
pcmpgtd
in
das
xor
mov
push
insb
push
push
jge
inc
fistpll
xor
fstpt
call
inc
jg
mov
imul
dec
insb
loope
cmp
or
imul
xorl
scas
xor
xchg
push
into
lahf
popa
pop
movsl
jge
mov
popa
jmp
jmp
mov
dec
fildll
fisttps
imul
sub
test
aam
lods
xchg
jno
loope
push
jbe
outsl
leave
dec
inc
xchg
cmp
sti
int3
pop
or
pushf
lds
cmp
xor
add
inc
or
pusha
ficoms
loopne
sbb
out
cwtl
sbb
cmp
add
dec
and
stos
dec
lock
mov
data16
mov
xchg
sarl
inc
mov
sahf
mov
mov
es
in
pop
cmp
hlt
cmp
sti
mov
lods
ja
scas
mov
xchg
repz
or
daa
adc
fldcw
cmovae
lret
inc
sub
shrb
test
xlat
mov
sahf
push
stos
ss
sbb
cmp
inc
jecxz
push
push
fistl
bound
pop
add
insl
dec
sub
push
out
cmp
arpl
lods
in
js
push
cmp
push
fsubs
push
iret
sub
jnp
test
aad
ret
out
inc
inc
mov
aad
gs
iret
push
gs
out
xor
orb
mov
inc
out
lock
mov
das
fld
jp
jne
cmp
subl
or
cmpsl
or
xlat
ds
push
lds
lods
stc
aas
sub
sbb
scas
fwait
cmpb
call
xchg
test
xchg
or
loope
ffreep
fldt
aad
into
add
pop
adc
in
andl
scas
xor
push
inc
lock
fmulp
jno
mov
cwtl
pushf
ss
inc
out
xchg
int
mov
or
js
jp
sub
ror
mov
fstpt
cmp
clc
inc
sbb
mov
inc
pop
fildl
popf
mov
xor
xor
sti
xlat
test
jnp
nop
mov
inc
data16
stos
movsl
out
mov
in
push
mov
mov
cmpsb
std
ret
lock
test
push
push
lods
repnz
cmp
and
jmp
sub
sbb
xchg
pop
out
iret
cmp
or
cltd
sbb
fwait
in
xor
mov
arpl
inc
sbb
addr16
xchg
mov
out
call
inc
mov
pop
jmp
lcall
xor
movsl
mov
into
fucom
inc
sub
lss
sbb
cld
push
ljmp
and
loop
push
std
scas
ds
inc
into
imul
icebp
es
nop
es
cmpb
fldl
shll
imul
dec
je
mov
sbb
jecxz
adc
bound
cmpsl
dec
scas
jge
and
andl
jo
and
mov
mov
repz
aad
pop
ss
fimull
mov
mov
inc
das
push
pop
xor
adcw
xchg
jecxz
sub
loopne
or
out
ret
aad
lock
pop
cmc
test
leave
or
popa
dec
xor
push
pushf
push
jbe
cmc
and
mov
dec
cli
push
jae
inc
addr16
sahf
push
push
push
psubb
mov
pushl
jecxz
pop
ja
dec
ret
in
jmp
ret
cmc
outsb
or
into
sbb
addr16
mov
scas
pop
xchg
outsb
daa
xor
and
add
faddl
int3
faddl
subl
lods
into
lock
addb
mov
push
mov
jae
inc
rcr
les
test
pop
fcompl
addr16
xchg
mov
mov
jmp
xchg
adc
jno
enter
je
in
arpl
into
jae
pop
dec
fbstp
int3
add
push
jg
mov
push
fistpll
ret
or
xchg
push
icebp
ret
mov
popf
sub
push
sbb
push
inc
push
test
test
pop
jno
mov
pop
faddl
jns
xchg
inc
jge
pop
push
loope
xchg
jl
pop
and
xchg
sbb
xchg
mov
movsl
lea
mov
loopne
xor
and
cs
scas
add
ss
xchg
sub
mov
cwtl
lret
insl
mov
inc
xchg
sbb
sub
cmpsb
std
adc
add
cltd
jno
inc
leave
xchg
dec
xchg
xor
and
imul
rcll
sbb
add
sar
mov
lret
jae
mov
int
sahf
add
xor
xor
push
xlat
popa
std
xor
outsb
fmul
add
shr
push
jp
mov
or
sarl
push
data16
sub
sahf
mov
sbb
popf
cmp
fdivr
xchg
jge
adc
inc
mov
jl
pop
pop
inc
int3
push
bound
stc
and
add
dec
hlt
push
mov
mov
inc
mov
test
and
push
into
imul
push
xor
shlb
data16
xchg
cmp
mov
clc
lds
mov
jo
int
mov
push
inc
xor
pop
fdivr
add
xor
ja
clc
mov
jmp
fidivrs
xchg
lods
sbb
jmp
inc
mov
pop
push
push
add
add
mov
ljmp
jne
adc
cmc
repnz
pop
sub
mov
iret
xchg
outsl
ds
enter
out
and
push
popa
or
inc
dec
push
cmp
xor
je
mov
cmp
push
je
hlt
repz
aas
clc
pushf
addb
sub
in
sub
stc
adc
outsl
cmp
pop
sti
icebp
inc
xchg
add
xchg
clc
cltd
mov
xor
adc
nop
std
cmp
in
pop
shlb
xlat
mov
mov
adc
lret
sarl
mov
jp
mov
mov
jge
loopne
jp
xchg
test
shl
push
push
mov
add
jnp
ficomps
test
xchg
movsl
ret
insl
cmp
xor
pusha
cmp
push
mov
cmc
loop
loopne
mov
aaa
push
xor
enter
out
jge
sahf
stos
jmp
cmpsb
sbb
push
imulb
pop
pop
rcrl
jge
sub
ja
dec
sti
jns
lods
sub
jecxz
lret
xchg
pop
xchg
add
dec
xor
jb
int
stc
daa
bound
jmp
mov
pop
in
xor
stos
or
and
mov
into
inc
daa
mov
and
sub
movsl
sub
sub
inc
stc
jb
int3
cwtl
and
repz
mov
jecxz
dec
outsb
jbe
lahf
mov
arpl
rol
notb
imul
imul
ret
aam
dec
cmp
shll
sub
aas
pushf
or
lcall
sbb
test
jmp
xor
fs
test
inc
inc
adc
push
adcl
cmp
fistl
add
lods
pop
rolb
adc
aas
jmp
jbe
idivb
mov
dec
fisttps
lea
stos
popf
adc
test
in
fwait
pop
dec
jae
adc
popf
les
mov
jns
inc
aas
scas
and
jle
movsb
sbb
push
shl
sbb
jecxz
mov
mov
pop
test
adc
test
mov
add
sub
mov
inc
cmp
or
xchg
mov
dec
inc
xor
cmc
push
mov
outsb
inc
or
hlt
mov
mov
xchg
fists
push
lods
xchg
jmp
outsl
enterw
mov
jp
aad
mov
mov
sub
mov
push
cmp
cmp
mov
pop
icebp
imul
push
pop
and
jl
icebp
lods
cmp
pop
push
pop
into
mov
adc
cmp
inc
aaa
push
mov
clc
test
add
sub
push
dec
xlat
les
pop
cmp
cld
addr16
sti
mov
push
mov
into
out
shll
aas
in
and
add
cs
cltd
jb
push
xlat
xor
jns
mov
mov
mov
or
mov
push
dec
bound
imull
lock
data16
mov
mov
xlat
pop
add
enter
cmc
sub
push
scas
mov
into
jl
pop
adc
pop
sbb
mov
lock
popf
mov
xchg
loop
std
int
outsl
into
inc
mov
loope
sub
fucomp
mov
fs
mov
mov
mov
lods
iret
or
or
ljmp
jo
and
mov
add
fcmovnbe
ds
xchg
stc
sub
mov
cs
fs
mov
cli
push
add
cs
std
dec
pushf
jns
cwtl
int
icebp
inc
adc
xlat
sahf
cmpsb
ficoml
add
dec
stos
fnsave
mov
arpl
sbb
je
and
add
dec
mov
arpl
sti
roll
jae
aaa
inc
clc
cmp
sbb
pop
adc
movsl
pop
out
adc
mov
andl
xchg
fistps
jo
mov
jl
adc
aaa
mov
mov
pop
lods
fs
test
ds
out
cmp
fidivl
lret
sbb
stos
cmc
scas
nop
fdivr
call
mov
cltd
mov
and
dec
mov
std
ffreep
je
lods
and
mov
lock
testb
mov
hlt
fs
adc
test
mov
jnp
inc
push
jo
std
ljmp
and
sbb
fs
int3
iret
out
xor
call
jecxz
mov
xlat
aaa
push
adc
inc
add
mov
out
xor
add
cli
outsb
xchg
movsl
push
dec
push
popa
ret
incb
icebp
add
mov
and
inc
cwtl
xor
push
aam
cmp
je
ds
and
pop
push
mov
mov
andl
popl
add
pop
add
frstor
cmpsl
inc
imul
push
and
lock
stos
push
movsb
and
in
xchg
idiv
in
xlat
addl
mov
push
cmpsb
stc
or
or
pop
adc
pop
add
mov
cltd
ja
sub
incl
or
sbb
adc
ss
dec
dec
push
dec
rcrb
lds
aas
push
or
jle
or
sahf
push
dec
test
push
lahf
cwtl
scas
pop
mov
inc
mov
sbb
lret
fistps
cld
aaa
lock
mov
mov
mov
fdivs
cld
mov
dec
repnz
out
mov
jmp
subb
in
mov
ret
jno
xchg
jns
lcall
inc
sarb
push
shl
sub
clc
mov
sbb
or
loopne
mov
shll
ja
mov
lret
pop
xor
je
loopne
mov
mull
lahf
mov
jbe
or
sub
cmp
iret
mov
dec
popf
push
fimuls
js
add
sbb
std
pop
xadd
mov
ds
rcl
push
aaa
mov
dec
in
bound
ror
mov
adc
xchg
call
js
inc
out
sti
mov
pop
dec
scas
sbb
dec
dec
xchg
and
dec
stc
xchg
shll
jbe
sbb
mov
mov
and
xor
mov
jg
mov
mov
ja
inc
xor
cmp
xor
adc
aaa
cmp
dec
jp
into
pop
or
shlb
xchg
sub
mov
fistps
lock
inc
in
add
lds
jge
aam
test
sub
mov
pop
fimuls
mov
frstor
in
xor
call
add
ret
cmp
leave
fsubrp
push
push
mov
inc
and
in
rolb
or
pop
vandps
stc
loopne
dec
enter
mov
psubw
arpl
xchg
mov
sbb
pop
xchg
es
jo
lcall
dec
in
lret
inc
xor
scas
aas
pop
cmp
test
lods
mov
repz
int3
inc
out
xchg
lods
jmp
fcomip
fcoml
cld
jp
ljmp
loope
lret
jmp
test
lcall
xchg
bound
shlb
scas
ljmp
ret
addb
and
dec
icebp
lods
and
mov
movsl
arpl
push
test
adc
rclb
pushf
push
dec
daa
repnz
pop
mov
pop
sbb
dec
ret
sub
xorl
inc
push
cmp
dec
push
and
xchg
inc
pop
inc
mov
push
stos
hlt
xor
nop
cmc
mov
xor
divb
enter
cmp
and
xchg
test
push
mov
cli
pusha
negl
sub
cwtl
mov
dec
fdivs
xor
insb
xchg
sub
aaa
cmp
ja
fcoms
in
and
mov
xor
xchg
dec
imul
push
aam
inc
xchg
xor
xlat
xchg
sbb
pop
inc
and
lock
mov
aas
push
dec
cmp
sahf
insl
inc
mov
lds
pop
in
inc
sbb
push
inc
mov
js
jecxz
dec
push
mov
inc
and
sti
aas
in
shlb
mov
movsb
add
mov
xchg
cmp
not
push
loop
and
movsl
xor
xchg
sahf
mov
jne
test
out
xchg
sub
mov
push
mov
pop
jmp
pushf
lods
mov
mov
or
xchg
jecxz
fmull
mov
mov
stos
jge
mov
mov
cmpsb
insb
jo
lea
xor
push
pop
stos
jecxz
in
xchg
sahf
xchg
ja
mov
shlb
outsl
aaa
movsl
and
push
out
xchg
cmp
sbb
addr16
test
xchg
js
bound
jl
or
sti
stos
mov
dec
int3
arpl
mov
mov
js
mov
jne
mov
mov
dec
mov
push
mov
dec
and
add
enter
ret
mov
jb
hlt
sub
inc
mov
mov
stc
mov
add
pushf
fwait
xchg
inc
insb
popa
sbb
arpl
and
lods
filds
inc
in
rorl
mov
stos
incb
jecxz
shrl
dec
insl
xchg
aam
addb
ljmp
sbb
rorb
jecxz
jns
adc
out
fwait
push
ja
dec
sub
mov
push
inc
cmp
nop
cmpsl
hlt
mov
mov
or
sub
pop
pushf
or
add
lahf
leave
xchg
xor
in
push
xor
hlt
cwtl
test
iret
out
push
xchg
cmp
push
push
add
jecxz
sbb
xchg
or
cmpsb
pop
mov
adc
mov
fs
adc
jge
pop
xchg
stos
mov
outsl
in
and
add
das
cmp
push
fucom
push
pop
cli
out
push
cld
cmpsb
push
movb
dec
cmp
push
push
jmp
sti
in
jno
mov
orb
in
dec
or
xor
dec
add
mov
stos
sub
mov
adc
out
mov
pop
and
shlb
xor
sahf
and
jmp
rcrl
fwait
cmp
ds
jle
out
or
mov
sub
push
mov
dec
push
insb
loop
insl
dec
hlt
loop
shlb
cltd
or
dec
mov
es
mov
shll
xchg
or
push
xchg
loop
rorl
shlb
mov
sbb
mov
adc
or
pop
xchg
lea
shrb
aad
aam
sub
adc
jg
lock
out
rep
mov
jnp
pushf
incb
outsb
adc
ss
lods
icebp
shlb
dec
xor
lcall
sbbb
jge
dec
pop
repz
fiaddl
mov
dec
das
and
cwtl
mov
jns
sub
add
jmp
sbb
mov
ds
out
shll
xor
jmp
jbe
push
push
push
xchg
mov
gs
sub
ffree
jae
mov
sub
imul
push
mov
sbb
loop
xchg
ret
pop
fwait
jecxz
repz
lcall
mov
xchg
iret
or
inc
dec
xlat
out
push
mov
add
movsl
repnz
push
test
dec
in
pop
stc
std
fsubl
inc
mov
fincstp
stos
jle
jno
xor
jp
out
out
mov
sub
mov
jecxz
iret
cmc
push
insl
or
xlat
out
ljmp
pop
stos
push
ds
aas
pop
xchg
mull
ret
popf
movsb
cmp
adc
cs
ficoml
scas
lahf
or
in
dec
inc
inc
push
mov
mov
ficoml
ljmp
mov
add
mov
add
mov
imul
jae
mov
pop
into
mov
pop
dec
xchg
adc
jne
sbb
movsl
mov
mov
es
mov
push
dec
mov
test
xor
mov
inc
lods
mov
mov
out
test
push
test
push
or
cmpsb
push
jo
mov
mov
inc
sbb
inc
pop
xchg
inc
test
imul
bound
sub
mov
jp
xor
pop
dec
pop
cmpsl
jg
mov
cwtl
and
dec
or
dec
xor
inc
and
call
jno
cmpsl
sub
add
loopne
inc
push
jns
aad
sub
add
pop
sahf
xor
gs
leave
mov
xlat
outsl
pop
lcall
ficoms
lods
pushf
push
push
syscall
rcr
out
les
jmp
sub
ret
pusha
sbb
fs
test
pop
test
imul
rclb
mov
insl
lods
sbb
test
sub
push
push
add
push
sub
testb
cmc
xchg
ret
add
ret
addr16
movsb
mov
adc
mov
xchg
out
roll
or
rorl
movsl
adc
in
scas
inc
adcl
lods
pusha
outsl
xor
mov
or
dec
dec
inc
clc
pop
pop
adc
frstor
mov
xchg
push
cmovno
jno
inc
ret
inc
push
jae
jle
sub
push
nop
jno
rcrl
aas
cld
mov
addr16
dec
pop
sub
jbe
inc
or
cmp
pop
add
icebp
mov
jne
mov
aaa
sub
xor
fistl
int3
stos
icebp
xchg
xchg
and
mov
adc
sbb
xchg
xchg
and
test
in
adc
pushf
int
push
sbb
add
xlat
jbe
aad
std
outsl
movsb
xorl
and
pop
mov
sbb
cmp
arpl
in
push
add
and
jge
jnp
std
xchg
shrb
lock
pop
mov
cwtl
addr16
xchg
jb
jecxz
das
movsb
sub
loopne
in
adc
mov
mov
mov
inc
jo
addl
pusha
and
out
sbbb
repnz
add
inc
imul
cmp
xchg
leave
push
hlt
int3
stos
xchg
sahf
rcll
test
xor
lds
cmpsl
jno
push
mov
iret
mov
inc
cmp
mov
pop
adc
je
or
adc
xchg
jl
lods
jg
mov
ja
mov
xchg
sti
pop
xlat
hlt
in
pop
cmp
in
push
push
in
xchg
aad
jecxz
lea
jbe
loopne
pop
xor
cld
fisubrl
and
adc
pop
sbb
dec
js
pop
sbb
adc
mov
xor
or
insl
adc
or
stc
jecxz
cmovbe
inc
repnz
jge
pop
adc
not
es
lods
lock
shll
out
lods
call
push
fidivrl
sbb
cmp
mov
mov
sub
les
push
clc
cltd
sbb
sub
or
push
ja
flds
xchg
jns
cli
shlb
mov
popl
lods
ss
test
cs
test
xor
mov
or
insb
in
mov
pushf
adc
shl
or
pop
daa
sbb
lock
pop
icebp
xchg
pop
ret
xchg
sub
filds
insl
lret
pop
rcr
pop
pop
sbbb
nop
mov
mov
pop
push
sub
insb
adc
fiadds
cld
mov
or
dec
cli
mov
sub
jp
xor
dec
loopne
fwait
not
test
or
subl
push
fisubl
fsubrp
jbe
sub
xchg
mov
test
mov
xor
rcll
cmp
fistl
xchg
push
loop
std
int3
arpl
jle
imul
mov
sbb
nop
pop
popa
push
lock
jne
cmpsb
xchg
xlat
mov
mov
xchg
xor
mov
stos
xor
je
gs
mov
xor
mov
stc
push
lea
pop
sbb
stc
xchg
data16
mov
pop
add
and
xchg
and
push
pusha
mov
ja
movsl
shll
lcall
mov
pusha
xchg
jns
popa
pop
cmpb
ja
jp
jnp
push
pop
cs
jns
xchg
xchg
mov
mov
cmp
push
jae
loop
fldl
les
cmpsl
mov
mov
xchg
inc
fcomps
add
pop
fistpl
popf
fldl
fs
mov
mov
and
loop
cmc
arpl
push
insl
jp
lret
fldenv
ljmp
test
mov
jmp
sahf
sbb
jae
jb
js
dec
leave
push
das
pop
out
orl
fs
test
lock
enter
lcall
sub
mov
add
push
xchg
push
mov
adc
outsb
adc
ljmp
inc
dec
shl
sub
dec
mov
js
das
out
insb
dec
out
add
enter
jbe
dec
pop
xor
xchg
cmpsl
adc
xor
sub
inc
mov
cmp
sahf
nop
xchg
into
test
test
or
dec
sub
mov
mov
fnsave
sub
dec
aaa
xchg
fisubrl
into
sahf
inc
shrl
test
dec
jo
jp
mov
icebp
into
insb
xchg
push
nop
mov
cwtl
pop
jae
iret
fldenv
cmp
sub
jnp
mov
add
ja
mov
ljmp
aam
mov
mov
fisubl
popf
icebp
cmp
cmp
mov
dec
fsub
jno
mov
xchg
sub
cld
sbb
mov
mov
mov
stc
push
repnz
andb
inc
dec
adc
mov
imul
pop
mov
sub
and
icebp
push
dec
jle
shrl
notb
mov
mov
mov
insl
cltd
dec
xchg
clc
call
pop
jg
dec
movsb
sti
enter
dec
lock
loop
push
add
inc
mov
loop
adc
xlat
ret
mov
data16
or
icebp
and
jns
fildl
cmp
aad
or
out
js
xchg
or
xchg
or
inc
out
sub
pop
push
sub
mov
cs
mov
fmul
fadd
jl
adc
outsb
lret
les
into
pop
xor
dec
jno
pop
and
xchg
or
lea
or
movsl
add
fisttpl
lods
pushf
cmp
xor
or
sub
or
push
idivb
and
and
subb
xchg
inc
xchg
and
xchg
in
je
or
jge
push
push
cmp
or
pop
fstl
adc
or
jno
rcrl
fdivs
jp
ss
mov
push
pop
inc
xchg
andb
fnstenv
dec
push
add
adc
jo
out
jecxz
test
lret
lea
xchg
stos
std
mov
cmp
shr
ds
pop
ret
cmp
jmp
lds
pusha
xchg
xor
mov
sbb
test
das
cmp
cli
popa
sub
cmp
sub
xchg
push
rorb
sub
int
sbb
jo
mov
fwait
rclb
or
cmp
sub
fistl
inc
pop
out
in
jp
insl
mov
pop
mov
dec
mov
in
out
xor
dec
add
lods
sub
lcall
frstor
sbb
decb
or
lahf
push
jbe,pt
fdiv
or
mov
sbb
push
faddl
xchg
xchg
clts
xchg
or
mov
int
jle
push
sbb
mov
xchg
fidivrl
add
adc
fwait
mov
xor
das
pop
out
jge
and
outsl
jmp
push
add
pop
popa
dec
or
shll
dec
mov
mov
dec
mov
mov
js
sbb
mov
jmp
mov
jae
fstpl
push
hlt
decb
pop
pop
mov
into
cli
sub
add
test
outsb
hlt
sub
test
dec
pop
cwtl
std
clc
insb
sbb
jecxz
sub
fldenv
jae
add
ljmp
adcb
fidivrs
cwtl
pop
in
cltd
dec
cld
imul
popa
sbb
shrl
cmpsb
and
stos
mov
pop
sbb
ret
pop
dec
add
int
mov
cld
add
cmp
mov
pop
xor
push
js
popa
les
sbb
data16
mov
gs
jns
mull
in
jl
fnstsw
gs
enter
les
rcll
add
movsl
fldt
mov
push
icebp
and
lcallw
pop
pusha
insb
push
and
mov
mov
leave
dec
mov
aas
movsb
xor
lret
inc
pop
repz
in
mov
xor
jmp
mov
ss
repz
or
outsb
sbb
pushf
xlat
dec
inc
mov
and
pusha
mov
nop
jns
cwtl
je
mov
dec
negl
lsl
dec
mov
imul
inc
pop
mov
xlat
movsl
jno
negb
or
or
adc
adc
call
inc
movsl
out
xor
stos
cvtps2pd
xor
cmp
or
mov
jne
pop
sub
push
adc
push
and
insl
in
lret
dec
das
jo
or
dec
push
xor
nop
mov
sbb
add
test
repz
add
mulb
sbb
in
gs
mov
mov
pushw
adc
push
mov
push
lret
mov
and
sub
mov
in
mov
popl
xor
xor
and
push
mov
dec
notb
sti
push
test
lds
dec
cmp
andb
fnclex
pop
in
out
mov
mov
pop
cwtl
je
notb
xor
lds
mov
out
cmp
cmp
pop
daa
ja
stos
cmpsl
xor
sub
pushf
mov
jecxz
jns
mov
xor
ds
push
or
bound
cltd
xchg
xchg
cltd
inc
mov
or
mov
mov
in
fs
bound
loopne
sub
dec
sub
sbb
ficompl
imul
std
mov
xor
scas
scas
cwtl
and
test
fsubl
add
xchg
jae
scas
xchg
dec
or
js
or
sub
jle
jae
cld
mov
es
js
jns
push
bound
enter
test
movsl
out
pop
cwtl
sub
pop
or
push
push
fcoml
dec
and
clc
in
filds
inc
inc
dec
xchg
ja
or
inc
in
add
adc
xor
xor
mov
lock
pop
pop
mov
in
xor
mov
inc
sub
and
cli
dec
cmp
xor
xor
imull
mov
pop
test
insl
mov
mov
fstps
stos
dec
jmp
mov
into
jo
out
addr16
pop
xchg
aad
xchg
adc
push
mov
cld
leave
loop
inc
sub
ret
mov
pop
idivl
nop
sahf
xor
cmp
pop
adc
push
popf
and
mov
pop
inc
adc
cmp
mov
xchg
and
ret
mul
sub
in
sbb
pop
cmc
cli
js
or
sbb
mov
test
adc
imul
ds
into
scas
in
or
mov
test
gs
test
mov
nop
jecxz
jg
dec
icebp
push
js
fiadds
xor
mov
or
dec
jbe
pop
pop
jmp
mov
cwtl
or
ljmp
fdivrs
ds
icebp
das
bound
lahf
mov
dec
scas
in
inc
mov
xchg
sbb
xchg
shl
dec
fwait
jecxz
pop
adc
and
dec
fwait
mov
mov
pushf
xchg
mov
sbb
mov
pop
dec
scas
xor
pop
fs
je
dec
inc
je
jo
rcrb
cltd
test
dec
pop
inc
cmpl
mov
xchg
xor
je
scas
or
adc
in
xchg
js
jnp
push
clc
and
lcall
test
jge
jb
cmp
xchg
stc
xor
mov
je
xchg
fsts
pop
scas
fcompl
repz
or
mov
push
xchg
or
call
dec
adc
ja
shrb
scas
daa
sbb
push
add
xor
in
out
daa
fmuls
sbb
in
and
cmp
jl
pop
daa
adc
test
or
jp
addr16
and
cmp
mov
pop
popa
iret
mov
test
mov
bsr
xchg
fs
in
movsb
push
subb
addr16
dec
dec
add
movsl
aam
adc
sub
in
push
cmc
test
adc
mov
xor
adc
pop
pop
sbb
pop
add
jae
xchg
aam
lea
std
and
fildl
pop
xor
adc
xor
sub
jno
jo
or
adc
push
push
fidivrs
in
inc
cmpsl
in
mov
pop
test
xchg
test
fsubrl
sbb
leave
push
loop
sahf
inc
adc
xchg
fnstenv
adc
and
dec
push
sbb
mov
adc
lcall
mov
fs
sbb
sbb
pop
or
cld
ret
cwtl
frstor
dec
inc
xchg
negl
xchg
xor
das
mov
pusha
lret
pop
jo,pn
jbe
fstl
and
and
dec
mov
jnp
cmp
sub
push
orb
ret
aam
mov
sub
dec
sub
and
fisttpll
adc
testb
push
push
lea
loop
pop
shlb
aad
insl
call
insb
push
inc
cwtl
rep
js
mov
int
or
push
test
mov
sbb
rclb
stc
sbbl
fisubrl
jle
loope
dec
jnp
out
and
mov
fwait
orl
jb
ret
in
fldcw
jnp
push
insl
sbb
or
pop
or
ss
daa
mov
loope
gs
cmp
fisttpl
cmp
cmp
xchg
jmp
inc
sbb
adc
mov
push
insb
xchg
out
inc
push
mov
sbb
dec
sbb
test
cwtl
jle
sbb
imul
inc
addr16
or
jno
mov
mov
mov
movsb
push
xchg
aaa
mov
incl
out
cld
xor
out
mov
shrb
adcb
push
cltd
or
sar
cmpsl
xor
cmp
xchg
cwtl
push
push
arpl
movsb
scas
jnp
es
ror
mov
aad
or
dec
pop
movsb
mov
mov
imul
pop
adc
shrl
and
or
mov
loope
sahf
repz
xor
lods
and
cmp
push
push
aad
jl
mov
stc
sbb
add
out
push
jg
mov
push
cmc
xor
pop
gs
or
mov
stos
sub
in
ret
sub
fnstsw
mov
sar
mov
mov
out
jecxz
jp
scas
lahf
stc
mov
inc
jmp
out
dec
sbb
jae
mov
testb
sub
xchg
mov
pop
seto
leave
lock
mov
and
ret
and
hlt
fwait
dec
jne
mov
jns
jae
sbb
push
lds
fisttpl
xor
dec
test
mov
dec
icebp
inc
in
mov
pop
push
out
hlt
xchg
popa
imul
or
dec
ljmp
or
mov
cmp
mov
iret
test
and
scas
jle
dec
xor
popa
xchg
sbb
pop
adc
xorl
icebp
jge
jl
jb
inc
jne
popa
sbb
push
pop
sbbb
daa
pop
call
and
mov
cwtl
cmp
popa
sbb
jg
test
xchg
and
cli
ret
movsb
lods
stos
into
rol
mov
push
in
rcr
dec
adc
dec
loopne
jne
push
test
jecxz
les
xchg
fcom
inc
in
xchg
lods
cmp
push
nop
ffree
inc
push
test
imulb
jne
xchg
sbbl
jle
out
adc
cld
es
aad
shlb
stc
xor
xor
push
or
inc
leave
fbld
pushf
in
gs
xchg
sti
fsubs
mov
mov
cmpsl
mov
add
xchg
jmpw
pop
pop
iret
movsb
aad
fidivl
gs
rorb
mov
push
dec
subb
imul
sub
addr16
mov
jecxz
adc
js
fbld
mov
movl
pop
int3
rol
and
adc
scas
push
jg
sub
fxch
dec
mov
les
xor
dec
daa
in
and
inc
pop
loopne
lahf
jb
push
sbb
xchg
mov
sbb
es
lret
lcall
decl
fs
insb
shlb
icebp
inc
pop
sti
push
cmp
les
es
push
adc
outsb
and
enter
ficompl
int3
int3
pop
push
lret
lcall
or
ss
mov
cmc
call
pop
mov
aaa
push
lahf
xchg
sbb
movsl
jnp
outsl
or
push
jl
inc
push
fistl
movsb
stos
scas
dec
mov
pusha
ret
repz
enter
hlt
dec
and
clc
xchg
popa
jle
mov
cmp
or
sbb
stos
mov
pop
add
push
inc
add
sub
push
js
or
xor
hlt
jne
add
std
sbb
and
inc
rcl
push
xor
mov
xor
jmp
fstps
push
popa
adc
and
jp
inc
add
xor
hlt
push
add
adc
icebp
icebp
test
xchg
xchg
sub
loop
cmc
fisubrl
add
xor
pop
rcll
and
xchg
or
lods
cmp
mov
sbbl
mov
pop
andb
or
mov
lods
jno
xcrypt-ecb
cmpsl
or
loopne
mov
jge
clc
sbb
aad
dec
lds
lds
out
pop
lds
repnz
lods
dec
jmp
loope
mov
pop
repnz
adc
xchg
cmp
add
lods
or
mov
clc
pop
sub
sti
xchg
push
sub
popa
jo
xchg
jnp
xor
mov
fsub
imul
ljmp
push
insl
jnp
popa
and
or
jae
cmp
pop
sub
call
push
mov
in
lcall
sub
sub
loope
sub
jns
pop
or
xchg
mov
call
cld
push
dec
leave
repnz
xchg
mov
add
mov
in
add
xchg
aaa
loopne
xchg
lea
arpl
aad
dec
xorb
adc
dec
test
out
mov
or
push
lret
add
push
dec
jecxz
pusha
xchg
pop
xor
push
or
sahf
orl
inc
bound
ret
mov
sub
icebp
ret
pop
fsub
xchg
dec
push
dec
sbb
add
jmp
imul
add
xchg
shl
push
stos
mov
jle
fistps
cmp
inc
pop
inc
xor
mov
out
dec
push
data16
jns,pn
cmpsb
lea
add
mov
mov
mov
lods
jbe
sahf
aaa
jb
xchg
jg
pop
adc
cwtl
mov
sarb
or
or
stos
cmp
mov
cmp
out
sbb
sahf
in
pusha
loopne
and
jge
add
es
push
xor
out
jl
fwait
add
lods
ss
std
xchg
repnz
pop
dec
mov
cltd
jmp
sbb
mov
push
xor
sub
pop
adc
push
push
mov
sub
xchg
dec
inc
and
insb
mov
xchg
xchg
mov
push
sub
fmul
aad
xor
xchg
mov
shrb
push
pop
dec
stos
mov
js
cltd
pop
xor
aam
cmc
mov
sbb
leave
jl
insb
mov
inc
loop
rcll
pop
mov
mov
lds
pop
dec
addb
sbb
cmpl
loopne
scas
sub
testb
lret
sub
into
xor
arpl
ficoml
jo
daa
inc
push
outsb
sbb
setg
inc
mov
ja
jo
lods
mov
xchg
add
pop
sbb
js
fdivp
push
outsl
insb
movd
les
ljmp
mov
outsl
cmc
fildl
add
sub
xchg
in
movsb
fstps
callw
push
add
jecxz
in
sub
inc
cltd
dec
dec
push
outsl
xchg
xchg
repnz
test
jo
sahf
mov
sbb
xchg
fldl
xchg
sbb
jle
imul
xchg
test
les
xchg
add
test
mov
add
and
sbb
cmp
loope
cmp
sub
lock
mov
aam
or
aaa
loopne
push
mov
scas
or
pop
rorl
xlat
fsubr
mov
xchg
mov
xchg
inc
call
cld
xor
and
mov
cli
jne
mov
pop
xchg
cmp
jp
dec
jno
adc
mov
dec
jp
xor
xchg
dec
mov
sbb
mov
sbb
mov
enter
jno
loope
xor
popf
jbe
in
xchg
mov
aaa
cmc
stc
fucomp
je
ljmp
filds
pop
cmp
push
sbb
subl
jl
in
int
mov
adc
push
nop
xchg
mov
xor
adc
xor
pop
or
out
ja
ficomps
xchg
lds
aas
popf
dec
cmp
ss
or
jbe
outsb
pushf
and
sbb
push
push
pop
bound
out
pop
in
mov
mov
add
or
dec
pop
xorl
cmp
inc
fdivrp
xchg
test
add
cmp
mov
ficompl
jmp
xlat
jnp
xchg
ja
das
ret
jl
push
sub
pop
add
inc
in
lock
pop
sub
and
jns
push
mov
mov
fucom
lret
jecxz
sub
adc
sbb
popa
iret
jl
ror
ljmp
xor
outsl
push
dec
dec
lcall
jns
inc
cltd
cmp
dec
hlt
rcr
lahf
cwtl
push
mov
jb
jne
orl
into
addl
add
xchg
cmp
adc
push
adc
sbb
jo
jbe
and
out
jp
les
in
aaa
js
mov
push
ret
das
out
ret
xchg
rclb
movsb
add
into
dec
mov
loopne
mov
mov
dec
xor
push
xchg
lcall
pop
clc
popf
jmp
popa
cmp
lds
das
call
ds
mov
mov
and
sub
mov
cmp
sbb
adc
mov
test
and
push
dec
cmp
popa
sub
mov
xchg
mov
mov
mov
dec
scas
clc
xor
addr16
push
imul
addr16
add
adc
dec
mov
add
adc
cwtl
dec
call
stc
aad
add
std
test
adc
dec
icebp
rcr
add
sub
bnd
sub
and
mov
rcr
sub
dec
push
dec
notl
jne
lret
out
xchg
gs
mov
jns
push
mov
dec
sub
pop
push
mov
nop
repz
sahf
lock
out
jns
rcrl
fimuls
fistpl
or
push
xor
nop
xchg
jecxz
adc
xchg
jge
jno
int3
fcompl
xchg
inc
push
ljmp
test
aam
inc
daa
test
fisttps
xchg
add
mov
test
push
xchg
lds
cmp
pop
dec
mov
movsb
fs
cmpl
arpl
in
call
out
push
sti
adc
std
jl
jno
lret
pushf
jmp
pushf
sub
adc
jbe
jl
fidivrl
in
or
popa
sar
subb
jle
dec
and
and
rcll
push
cli
fwait
in
in
or
mov
cmp
int3
das
aas
sahf
idiv
and
sub
mov
jns
xchg
flds
inc
mov
cmp
dec
call
jo
mov
or
xorl
xchg
push
pop
sti
mov
or
push
pop
mov
dec
sub
jne
lret
and
push
push
aam
dec
and
xor
daa
xchg
loope
mov
pop
addb
test
imul
repz
push
out
mov
add
and
and
fstpt
frstor
lret
push
dec
cld
in
and
fstpt
and
push
aam
adc
adc
aad
leave
inc
pushf
sub
int3
xchg
mov
cmpsl
fadd
imul
out
in
addr16
addr16
cs
mov
lahf
add
mov
and
ljmp
imul
pop
out
aam
jae
mov
or
cwtl
jae,pn
loope
push
and
xchg
nop
add
dec
mov
or
mov
add
testb
xor
gs
cmp
insl
dec
cwtl
xor
outsl
xor
repz
out
repnz
sbb
mov
cmc
mov
in
or
lahf
xchg
pop
mov
ljmp
push
test
mov
imul
pop
and
dec
jnp
or
cld
sub
and
mov
add
lret
mov
fs
shrl
cmp
enter
fisubrs
nop
mov
mov
leave
xor
aad
and
int3
int
rcr
cld
mov
or
leave
ficoml
cmp
sti
mov
scas
mov
xor
mov
enter
orb
cmp
push
rcl
sbb
sub
sbb
jg
sub
subb
je
xor
pop
sub
cmpl
jge
mov
add
out
push
popf
xor
dec
movsl
lds
mov
xchg
into
mov
stc
xchg
ficoml
test
mov
int
xchg
mov
xor
inc
fldcw
dec
xchg
adc
xchg
jns
mov
cwtl
push
fs
in
out
xchg
popa
xchg
inc
neg
leave
aam
pop
mov
and
mov
js
and
ja
cmp
jno
mov
pop
xchg
sbb
aaa
xchg
add
xor
mov
icebp
xlat
fcomps
movsb
sub
stos
sub
pop
repz
dec
pop
outsl
cs
pop
ja
xor
pop
mov
aam
cld
outsb
repnz
and
push
or
inc
daa
in
aam
jnp
addb
or
cmp
insb
mov
mov
pop
mov
clc
xchg
paddb
imul
add
andnps
push
mov
jmp
mov
inc
add
out
and
mov
or
in
inc
inc
jae
xor
mov
imul
testl
mov
or
inc
dec
add
dec
mov
sbb
mov
cs
xchg
leave
scas
aas
add
loop
push
fdiv
hlt
cmpl
and
dec
repz
lock
push
lods
lods
sub
and
jnp
loope
jae
sar
lea
add
test
sub
push
push
in
mov
sbb
and
push
jb
popa
ljmp
pop
loope
xor
sbb
mov
sbbl
aad
xchg
inc
dec
or
mov
nop
aaa
dec
out
xlat
out
sbb
mov
xchg
jecxz
int3
xor
push
inc
fiadds
fildl
adc
jb
jle
lea
mov
pusha
mov
sahf
push
lahf
or
xor
aad
jg
cs
sarl
mov
das
xchg
jecxz
sti
cwtl
xchg
or
sub
sub
jl
dec
lods
mov
popa
jns
daa
arpl
add
and
xchg
loop
xchg
int
repnz
out
loope
into
push
jb
push
imul
test
jno
int3
mov
gs
inc
ds
sbb
mov
nop
push
gs
xor
xchg
data16
xchg
add
sahf
ret
js
dec
mov
or
push
jns
push
mull
pop
daa
lret
pmullw
mov
ficoml
push
jle
call
addr16
and
mov
jmp
incl
push
scas
dec
testb
ljmp
push
int3
add
and
xor
cmc
iret
pop
dec
sbbl
mov
cwtl
test
pop
cmpb
ss
xchg
push
lret
cld
sub
sub
divb
dec
jbe
lea
mov
fcompl
and
shll
xchg
xchg
pop
in
sbb
and
stos
sub
inc
or
mov
adc
mov
pusha
insb
xor
or
std
mov
sub
mov
pop
cli
push
fstpl
in
cmp
das
fstpt
in
arpl
mov
mov
push
stc
movsl
insl
mov
int3
rolb
push
fldt
inc
mov
sbb
adc
clc
xchg
pop
jne
mov
repz
dec
aas
mov
aam
js
xchg
and
sti
pop
mov
cmp
xchg
jl
loope
jbe
scas
inc
pop
cmp
cmp
lock
lock
ds
mov
cmpl
fcomp
test
mov
xchg
add
jmp
cltd
push
fnstenv
icebp
jg
cmp
aam
inc
cmp
clc
sub
dec
pushl
dec
scas
js
out
addr16
movsb
cmp
test
mov
push
sbb
xchg
test
stos
das
int3
int
sbb
shlb
mov
and
push
mov
daa
jnp
stos
xchg
jnp
mov
out
push
dec
mov
sbb
sbb
sbb
outsl
lea
shlb
repnz
add
pop
xor
sub
mov
inc
bnd
fcmovnu
push
aas
mov
cwtl
loope,pn
fucomi
outsb
xchg
arpl
mov
clc
pusha
rclb
shl
ja
and
hlt
jae
icebp
push
mov
sub
jae
sub
in
js
push
bound
jns
mov
xchg
jl
pop
push
xor
jge
mov
negl
adc
sbbl
inc
mov
imulb
popf
pop
inc
xor
cli
aad
cli
scas
loop
mov
es
xchg
and
addr16
xchg
sbb
cmpsl
or
mov
lods
testb
mov
push
daa
push
xchg
es
outsb
cld
arpl
dec
and
lds
fs
aaa
sbb
cs
adc
addr16
inc
mov
loop
adc
in
jl
lock
cmc
dec
adc
or
popa
js
pop
push
shll
mov
sbb
mov
std
aaa
xor
or
push
add
jno
or
gs
inc
scas
cmp
sub
in
dec
push
int3
std
loope
cmpsb
inc
xor
jae
stos
loop
cmp
dec
xchg
mov
rol
jp
adc
lret
dec
mov
pushf
mov
aad
xchg
iret
mov
clc
scas
or
pop
sarl
sbbl
mov
jnp
loope
xor
push
inc
nop
xchg
xlat
aas
jg
or
xor
dec
ja
mov
and
dec
adc
xchg
pop
add
outsl
mov
push
mov
hlt
xlat
test
ljmp
jg
jg
sub
lret
cmp
fs
repz
es
cli
mov
test
pop
lods
rcrb
hlt
inc
fmulp
div
jp
and
test
iret
add
xchg
adc
mov
xor
js
fs
cmp
mov
enter
stos
mov
lahf
addr16
adcb
xor
mov
sbb
inc
pop
mov
mov
loope
xor
or
cltd
pushf
call
leave
add
adc
pop
sbb
mov
cmp
mov
mov
xchg
xchg
push
jmp
push
loope
lret
add
mov
push
jg
pop
mov
mov
loop
jae
loop
fistl
mov
mov
mov
dec
aas
mov
out
xor
adc
stc
xchg
in
movsl
push
mov
mov
sub
stos
mov
aas
test
daa
push
inc
imul
mov
ss
mov
loope
mov
in
lcall
mov
cmp
test
out
jecxz
inc
fists
mov
inc
jns
cmp
and
in
pop
movl
jo
out
mov
push
outsb
fadds
adc
cmp
push
inc
nop
xor
pop
or
inc
pop
into
and
mov
mov
mov
xchg
mov
inc
arpl
push
sbb
in
cltd
repnz
dec
dec
adc
icebp
movsl
jbe
lods
in
lcall
out
pop
push
sub
cmp
lcall
stos
shlb
arpl
cmp
rorb
fstl
pop
pop
daa
dec
mov
xchg
adcl
js
mov
push
inc
mov
mov
lds
dec
in
dec
ret
arpl
stos
pop
xor
and
mov
daa
push
adc
imul
ret
fwait
mov
addb
out
adc
xchg
inc
xchg
mov
and
in
mov
pop
pusha
inc
cmp
arpl
pusha
pop
jmp
enter
repz
test
jmp
xchg
dec
lds
xchg
dec
icebp
cli
pushf
and
loopew
jmp
out
in
mov
mov
sub
mov
lahf
sub
lds
jbe
test
out
push
mov
cmp
pop
or
enter
ret
add
xor
outsb
stos
inc
andb
xchg
jmp
mov
je
cmpsl
add
clc
add
push
sbb
dec
xlat
sub
movb
dec
int
inc
rcrb
lds
mov
adc
mov
mov
mov
add
xor
out
mov
mov
and
leave
pushf
adc
push
pop
pop
enter
sub
push
mov
int
cmp
xchg
mov
inc
pop
xchg
ljmp
lea
jmp
xlat
in
leave
jg
xor
xchg
cli
cmp
mov
and
sahf
cmp
xor
push
out
push
fcoms
and
mov
shr
jp
call
out
inc
rcl
shrl
xchg
lods
or
push
or
out
jle
sbb
rclb
stos
xchg
or
fiaddl
sbb
sbb
push
addr16
sbb
pop
add
jbe
dec
mov
in
fisubrs
outsb
xchg
out
scas
push
adc
lds
ret
aam
add
cmpsl
loope
sbb
inc
stos
fdiv
push
push
mov
js
in
icebp
data16
lea
adc
pop
adc
mov
push
mov
add
in
sarb
push
dec
sub
test
scas
mov
adc
repnz
scas
call
or
mov
mov
adc
mov
andl
cltd
lock
sub
mov
repz
test
mov
add
iret
mov
and
push
clc
mov
iret
push
mov
fnstsw
imul
push
lds
jnp
adc
repnz
pushf
jbe
ljmp
cs
pop
mov
ret
popa
push
or
and
addr16
sbb
sbb
ljmp
adc
rol
into
cmp
jp
mov
inc
add
dec
xor
pop
xor
ja
sub
mov
lds
adc
inc
mov
mov
pusha
bound
cmovnp
or
imul
mov
addr16
dec
clc
out
fcoms
shrb
jo
cmp
mov
mov
adc
ss
jge
aas
pop
das
adc
jnp
in
mov
lock
push
pop
xchg
arpl
js
mov
imul
jle
mov
push
lods
xchg
fwait
push
aam
rorl
or
call
out
push
pop
adc
in
cmp
mov
xor
aad
dec
jl
adc
stos
frstor
and
jge
outsl
in
pop
push
in
mov
push
push
mov
loope
aam
pop
mov
and
in
jg
rcll
mov
mov
incb
inc
aaa
ret
push
daa
mov
cld
push
push
cmp
mov
hlt
inc
and
jne
test
out
lock
cmp
shr
int
push
cmp
sti
lahf
jmp
adc
dec
dec
orl
cli
lcall
adc
out
xor
dec
test
dec
inc
lret
jbe
xchg
mov
ret
push
out
pop
sub
jmp
imul
cmpsl
enter
cltd
aaa
mov
movsl
inc
or
and
inc
add
test
add
fiadds
cmp
rol
outsl
pop
dec
sub
mov
push
pop
movsl
popa
fdivs
cmpsb
aam
in
in
xchg
ficompl
test
and
pusha
mov
stc
movb
test
cmp
cs
pop
dec
jl
mov
lods
filds
or
pop
inc
sub
pop
inc
cwtl
xchg
jb
add
mov
or
pop
or
inc
and
test
mov
iret
bound
adc
push
dec
push
xor
jmp
cltd
xchg
bsf
lcall
lret
add
cmc
adc
mov
stos
mov
jp
xor
dec
jae
leave
lods
and
gs
lds
and
stos
inc
sbb
enter
lods
cmp
mov
inc
mov
add
fisubs
adc
dec
cmp
popa
push
xlat
cwtl
push
cmp
dec
leave
test
and
shll
fidivrl
dec
lcall
sub
mov
dec
outsb
arpl
data16
push
lret
out
loop
push
sti
js
jae
mov
fistpll
jne
loop
sub
pusha
cwtl
retw
jnp
lods
insl
outsb
testb
imul
fs
sarb
jae
jae
mov
cmpsb
pop
pop
jp
cmp
dec
jmp
or
push
or
push
movb
mov
fldcw
inc
mov
sbb
loop
fldt
cld
cmc
outsl
ljmp
push
out
outsl
push
ljmp
pop
je
pop
jecxz
inc
les
daa
shll
orb
add
or
xchg
fsubrl
mov
nop
add
sub
and
add
cmp
pop
dec
inc
xor
aas
insb
lcall
in
les
rol
pop
fsubrs
xchg
or
andl
cwtl
imul
mov
add
dec
or
fidivs
outsl
push
push
arpl
mov
iret
leave
cs
pusha
cwtl
lret
notl
or
in
pop
xchg
cmpsl
jae
notb
loop
lds
jmp
push
sbb
pop
mov
jns
ret
mov
add
mov
mov
jl
xchg
addr16
std
movsl
inc
pop
dec
add
aaa
inc
fistl
mov
test
mov
add
ficomps
mov
push
or
aad
aas
sub
push
lret
fs
xor
pop
les
pop
or
dec
pop
xchg
mov
scas
out
sub
cmp
cmp
fsubrl
xor
xchg
dec
mov
cmpsb
and
dec
cmp
adc
mov
subb
aaa
mov
pop
stos
add
add
jbe
mov
dec
inc
cmc
je
ljmp
pop
aas
dec
dec
js,pn
aad
mov
push
push
das
hlt
mov
movsl
jge
xor
pop
mov
mov
mov
jns
inc
leave
loope
adc
and
xchg
jg
cmp
pop
adc
test
out
lock
pop
inc
test
push
js
xor
stos
ljmp
ja
inc
test
pusha
jle
push
pop
dec
adc
mov
and
dec
sahf
nop
in
xchg
push
aam
dec
repnz
xor
add
dec
add
fcmove
cmp
daa
jmp
sbb
lds
mov
sub
jo
ret
push
imul
std
ss
fists
mov
lds
inc
inc
aam
xchg
ja
jecxz
es
ret
aam
out
mov
cmp
das
mov
dec
or
subl
je
dec
cmp
jb
mov
push
jle
int
pop
outsl
xchg
insl
ret
lahf
push
data16
jl
fwait
or
add
sahf
push
lock
flds
imul
ss
jp
mov
xlat
lret
dec
mov
scas
jae
fistl
mov
int3
push
int
mov
jmp
call
cwtl
stos
fcoml
aam
lea
or
jg
push
mov
ret
xchg
xchg
sub
repnz
mov
mov
push
cmp
das
xchg
movsb
lret
or
data16
mov
clc
xor
jmp
dec
aas
fsubs
inc
mov
pop
mov
scas
xchg
add
jae
pushf
pusha
xchg
dec
dec
mov
jl
sbb
cmp
adc
dec
lret
addr16
and
mov
cs
lods
fstpl
cwtl
test
movsb
mov
and
in
mov
jno
adc
aad
or
lods
fsubrp
rcr
mov
push
add
xchg
mov
dec
push
add
mov
xchg
xor
je
xchg
fidivrl
mov
loopne
cmp
mov
adc
fidivrl
lods
inc
lock
mov
loop
cmp
xchg
inc
jns
push
test
pop
out
test
sub
mov
adc
lret
shrl
cwtl
das
sbb
sub
mulb
pop
sub
mov
sahf
push
test
sub
mov
jns
mov
int3
xchg
sub
inc
cmp
push
push
dec
in
pop
out
jbe
xchg
mov
jns
fisttps
inc
push
push
sub
add
lcall
push
pop
mov
stos
cmp
std
xor
adc
fldl
mov
or
push
pop
xchg
shlb
cmp
aas
sbb
fdivrs
mov
pusha
imul
sbb
jmp
and
xchg
fstl
push
bound
imul
jbe
inc
pop
iret
mov
adc
in
out
enter
cwtl
jae
xchg
push
push
subb
scas
mov
mov
cmp
into
aad
mov
nop
sub
sbb
inc
add
sub
push
push
lea
aam
mov
xchg
je
mov
insb
add
inc
sbb
stos
push
rol
push
mov
and
add
int
push
fistpll
sub
cmp
popf
outsl
adc
jb
pop
aam
or
imul
outsb
ffree
movsb
and
pop
mov
mov
adc
sbb
adc
mov
cltd
pop
jne
jno
icebp
jl
test
cmpsb
pop
rolb
iret
mov
pop
pusha
sub
xor
jecxz
mov
pop
xchg
clc
jmp
js
xchg
jns
mov
jmp
sbb
sarl
add
and
insb
aam
inc
cli
cmp
js
inc
cli
xchg
jnp
inc
ljmp
enter
int3
and
push
ret
pop
jge
lds
or
clc
sbb
cmp
pop
and
inc
sbb
iret
xchg
push
icebp
test
movl
mov
pop
add
xchg
push
lds
xchg
cld
mov
and
push
lds
pop
or
repnz
add
out
mov
xor
sub
dec
ret
push
or
insb
sbb
mov
adc
pop
outsl
dec
dec
popa
sti
push
js
idiv
nop
add
adcb
imul
add
mov
insl
enter
shrb
cli
stc
test
push
mov
push
and
out
mov
cmp
loopne
and
repnz
push
cwtl
lret
mov
fcoms
xchg
mov
rcr
add
cli
lock
loop
test
jmp
fcomi
aas
pop
jl
adc
push
insb
dec
mov
push
mov
idivb
lahf
dec
sbb
jb
add
pop
cmpl
cmpsb
jl
push
jg
jle
jl
mov
aam
adc
mov
fdivs
fdiv
mov
rol
fsubl
inc
cmp
scas
fldt
mov
addr16
cmp
mull
push
mov
enter
ret
and
test
stc
daa
jno
into
and
cmp
inc
mov
cltd
leave
push
pop
mov
jns
loopne
ljmp
adc
xchg
jns
sub
adc
cmp
fildll
sub
pusha
mov
lcall
lea
sbbb
mov
mov
je
imul
je
lds
mov
lahf
mov
dec
xchg
mov
in
mov
cmp
das
mov
sub
lret
mov
negl
hlt
jbe
inc
pop
jl
push
arpl
fwait
sti
jg
push
xchg
std
mov
jbe
jno
cld
adc
repnz
inc
mov
push
cmpsl
xchg
out
xchg
xor
pop
shll
fnsave
addr16
fisttpll
lret
xchg
pop
sbb
dec
adc
dec
dec
lret
push
xor
mov
stos
sbb
lret
jae
sbb
addr16
das
push
scas
mov
in
mov
inc
push
roll
push
pop
adc
arpl
lret
mov
aam
cmpsl
mov
jne
cmp
jne
ds
sbb
mov
cmpsb
push
shl
add
dec
shlb
mov
xor
jb
aaa
xchg
xor
popl
pusha
lds
into
xor
insl
es
mov
iret
jle
adc
xor
imul
xchg
dec
xchg
mov
divl
mov
imul
icebp
arpl
xchg
and
lcall
push
and
sub
dec
pop
dec
clc
aad
psrlq
mov
leave
xor
sbb
jne
pop
fmull
clc
mov
pop
gs
repnz
ret
and
mov
cmc
sahf
jo
jno
adc
pushf
insb
out
inc
repz
testb
lods
paddsw
psubd
sub
pop
in
jns
jo
divl
loopne
test
mov
fldt
or
icebp
add
push
push
movsl
jnp
xchg
cmp
ret
lock
in
sbb
adc
int3
push
shrb
pop
popf
add
sub
cmp
xchg
or
xchg
mov
bound
insl
arpl
xor
cmp
add
jns
inc
xor
ja
sti
lret
cmpsb
dec
lret
push
mov
sbb
out
dec
sub
sahf
std
sahf
add
adc
negb
lea
xchg
ret
ret
sbb
addr16
sub
cltd
sub
adc
sbb
cwtl
out
mov
lahf
lods
inc
cmp
sti
sub
stc
push
mov
and
lret
pop
hlt
xor
xor
cmp
cmp
mov
mov
xor
test
adc
mov
mov
jo
mov
or
pop
orl
xchg
dec
out
pushf
push
push
xor
mov
xchg
divl
add
imul
cmpsb
cmp
mov
jnp
sbb
sub
lret
int
imul
sti
mov
xlat
shlb
mov
lret
movsl
mov
pop
ret
push
mov
mov
daa
popf
out
sbb
fsubs
jmp
adc
nop
js
and
dec
pop
sub
lods
push
cmp
sbb
jp
push
jno
out
mov
dec
dec
jle
lock
in
aad
lods
xor
cld
sbb
xorl
dec
scas
mov
xor
int
push
daa
mov
insb
pusha
stc
push
pop
scas
sbb
pop
inc
mov
aaa
sub
mov
adc
stos
enter
icebp
rcr
add
test
imul
enter
mov
mov
ret
mov
push
loope
add
jl
dec
sbb
or
dec
imul
std
dec
adc
repz
shrl
std
cmpsb
nop
mov
xchg
cmp
mov
push
jl
xor
or
lods
shrl
xor
stos
dec
sbb
xchg
ss
ja
xchg
cmp
mov
js
in
cmc
mov
shrb
add
and
mov
cmp
stc
jge
enter
mov
inc
sar
rcr
push
pop
jmp
cld
xor
mov
negb
push
adc
int
sub
push
xor
and
std
inc
cmc
jae
fnstenv
xor
lret
dec
cmc
test
lret
mov
mov
repnz
fs
mov
and
add
sbbb
mov
fldenv
mov
mov
lds
xchg
clc
fistl
nop
loopne
jne
in
dec
push
xor
mov
out
sub
sbb
jnp
stos
push
cwtl
test
shlb
fcompl
cs
arpl
mov
lret
pop
das
shr
cltd
lcall
test
mov
push
mov
jae
in
aam
push
mov
mov
adc
adc
mov
fmull
mov
cmp
push
xchg
mov
push
sub
ret
mov
mov
ljmp
adc
fwait
insl
rol
nop
push
cld
test
rorb
adc
ds
imul
sbb
xor
push
sahf
mov
lahf
dec
jns
shll
gs
jmp
mov
fisubrs
mov
push
adc
add
enter
bound
daa
incl
xchg
je
sub
jo
pusha
les
cmp
jl
je
mov
rorb
scas
in
loop
push
push
aam
push
shll
push
push
aad
test
outsl
dec
mov
lods
and
sbb
sbb
stos
mov
cli
sbb
loopne
mov
bnd
mov
sbb
dec
mov
cmp
mov
rcll
data16
pop
xor
enter
cmc
xorb
mov
xor
adc
andb
in
stc
sub
mov
es
and
pop
in
jl
sahf
stos
fsubp
fmul
ja
rolb
sub
cwtl
mov
xor
cmp
cmp
scas
mov
xor
imul
mov
test
in
mov
loop
or
cld
fistps
int
pop
jo
in
jl
sub
dec
pop
std
leave
xor
lret
fsubrp
bound
and
inc
jl
mov
out
mov
adc
mov
lahf
sub
push
fnstenv
bound
pusha
aad
adc
loopne
sti
mov
cmpsl
in
and
push
jns
and
sbb
lret
les
or
daa
sbb
pusha
mov
add
xor
adcb
aad
fistps
and
or
xchg
add
sub
cmp
or
adc
repz
push
inc
xchg
jae
adc
mov
mov
imul
xor
push
lods
push
jno
aam
ret
out
aad
clc
ja
dec
dec
jmp
ljmp
imul
mov
insl
push
dec
lcall
insb
out
push
mov
add
fdivl
daa
xlat
pop
in
or
cmp
pop
fildll
mov
jmp
fsubs
fcmovnbe
test
mov
mov
mov
sub
and
or
addl
mov
mov
jecxz
loop
aaa
movsl
mov
add
addr16
fcmovb
sbb
mov
popa
ds
pop
pop
shrb
sahf
insl
mov
ljmp
in
in
sub
mov
loopne
fbstp
xchg
fistpll
js
jo
xor
out
cmpsl
xlat
sarb
pusha
out
ret
mov
jae
sbb
cltd
enter
movsl
aas
sbb
xchg
mov
cmp
push
jbe
jg
dec
mov
rcrl
mov
jmp
addl
jp
fst
pop
fistl
or
push
dec
insb
call
ror
dec
sbb
dec
out
cmpsl
xchg
arpl
lods
push
cld
popf
mov
push
pop
int
mov
or
scas
dec
sbb
out
scas
popf
lds
cmp
lahf
add
andl
in
mov
or
lahf
push
loop
mov
ds
mov
push
or
pusha
outsl
pop
ljmp
enter
movsb
leave
pop
cmp
mov
lock
cmp
clc
push
adc
push
xor
cmp
enter
and
stos
and
pusha
xor
push
call
lahf
cmp
hlt
ret
jno
or
loope
jge
dec
loope
sahf
out
lahf
and
pop
loope
inc
mov
mov
dec
addr16
pop
mov
sarb
pop
inc
sub
sbb
sbb
push
sub
push
ss
inc
cmp
and
in
es
pop
std
testb
or
xor
pop
jmp
gs
sbb
mov
mov
ror
jge
lds
dec
xchg
xchg
scas
hlt
push
mov
cli
mov
les
adc
sti
push
push
mov
cmp
aad
jno
shlb
pushf
test
dec
mov
popf
leave
mov
cmp
ds
adc
lahf
int
mov
inc
mov
xor
mov
add
and
jbe
cmpsb
mov
dec
pop
repnz
pusha
fs
cmpsb
ss
cld
pop
push
xchg
iret
and
fucomp
loopne
daa
mov
xor
pop
mov
std
rcl
sub
mov
cwtl
cmp
adcl
ljmp
push
in
dec
popa
xor
sub
push
mov
jmp
dec
out
inc
stos
jmp
xchg
xor
jmp
cmp
lret
and
push
inc
pop
jnp
dec
mov
aad
dec
cmpsb
jmp
or
push
stc
cwtl
jmp
mov
xchg
push
das
jnp
stos
xor
add
pop
es
sbb
and
pop
addl
pusha
fistpl
gs
in
or
xchg
in
dec
repz
mov
roll
fildll
loopne
loope
and
je
out
pop
popa
inc
jnp
xchg
lahf
xor
adc
dec
cmc
sarb
add
sarb
in
push
or
lret
gs
pop
xchg
daa
daa
out
stos
outsb
imul
push
loop
adc
fisttpl
add
clc
test
lcall
push
hlt
mov
es
cmp
outsb
aad
xor
mov
popa
sbbl
mov
push
cltd
push
mov
xlat
and
and
push
cmp
push
xor
mov
xor
scas
fs
stos
mov
jnp
sahf
test
repnz
js
repz
pushf
rclb
aaa
fldt
ret
fcmovb
push
shrl
popa
fnstsw
stos
mov
cmp
mov
mov
and
pushl
iret
xchg
in
jecxz
rorb
jecxz
in
inc
sbb
cmp
mov
cmp
scas
sbb
call
aad
jecxz
int3
movsb
inc
ret
cmc
or
fisubl
ss
sub
mov
cmp
lods
imul
or
sub
push
and
fistl
loop
mov
mov
mov
das
push
xchg
ljmp
adc
add
and
jo
rorl
push
sahf
lahf
pop
mov
sub
int3
mov
jl,pt
cmpsb
dec
shrb
push
lds
aas
out
sbb
adc
out
jg
sahf
into
or
lods
repz
push
cltd
insl
mov
jl
cmp
lahf
ret
push
stc
xlat
imul
xchg
int3
aas
hlt
push
jl
mov
call
mov
mov
dec
push
push
mul
dec
mov
push
shrb
cltd
cmc
int3
adc
add
push
sub
fnstcw
mov
xor
sbb
fwait
mov
add
mov
test
dec
dec
xor
popl
cli
ljmp
fisttpl
add
cld
add
enter
fcomip
icebp
or
mov
adc
roll
xchg
lahf
rclb
jmp
cmpsl
je
mov
push
mov
cltd
or
jb
jns
out
pop
xor
mov
mov
movsl
dec
sub
shrl
pop
mov
push
cmc
mov
arpl
cmpb
mov
mov
cwtl
xlat
scas
mov
test
xchg
lahf
mov
push
mov
add
ds
mov
jno
js
stos
leave
roll
call
push
xchg
lock
xchg
jae
fsubrs
test
mov
sti
mov
fisttpl
cmp
bound
mov
rol
fsubrl
aas
leave
imulb
out
push
ss
pop
js
pushl
clc
xor
sub
scas
arpl
xchg
jecxz
xor
mov
or
dec
lahf
add
xor
and
add
movsl
jmp
rcl
and
dec
add
mov
mov
xor
inc
push
jnp
lock
xor
xor
mov
pop
inc
popf
adc
dec
ret
out
pop
mov
fs
fdivl
in
xor
mov
out
inc
adc
aas
dec
outsl
xchg
out
fs
in
ret
aad
rolb
mov
mov
dec
mov
out
adc
jns
aad
mov
pop
jp
mov
mov
add
mov
js
sbb
xchg
adc
test
add
daa
mov
rcll
sahf
ror
lock
mov
and
test
or
jg
ja
mov
jbe
icebp
or
ss
iret
sub
rcll
add
addr16
or
or
mov
rorb
movsl
ret
mov
sub
leave
icebp
mov
adc
fdivrs
das
hlt
xor
cs
mov
stos
mulb
sub
xchg
ja
dec
std
and
fdivrs
imul
sbb
loopne
or
sub
jo
push
jle
out
or
cmp
pop
std
aad
or
xchg
lock
in
jmp
lcall
cld
call
xor
sub
fldcw
aas
and
mov
cmpsl
jb
xor
push
leave
fcmovbe
je
dec
inc
lret
jbe
andb
jns
nop
mov
sub
scas
xchg
pop
pop
movsb
xchg
scas
test
hlt
scas
adc
push
mov
scas
adc
inc
ficomps
add
frstor
push
sbbl
add
mov
in
push
fcmovne
push
push
sar
gs
scas
push
mov
or
sahf
mov
sbb
aam
fadd
sub
or
sub
mov
dec
shll
out
inc
jmp
inc
iret
pop
pop
loop
mov
fsubrs
fmuls
pop
xor
dec
dec
mov
mov
cmp
xlat
lret
out
insl
sub
sbb
or
inc
add
mov
mov
and
hlt
cmc
ret
rolb
movb
mov
ror
adc
cmp
mov
mov
dec
and
dec
fisubl
jecxz
fdivp
inc
add
dec
dec
mov
cmp
push
int
pop
sbb
lahf
rcll
clc
pop
push
cmp
stos
outsb
imul
insl
fst
inc
and
xor
xor
data16
aad
mov
insl
mov
jb
mov
push
pop
in
test
clc
and
xchg
movsl
cmp
xor
js
scas
mov
xor
aaa
mov
cli
xchg
icebp
jne
sbb
andl
les
pusha
mov
xor
mov
adc
and
lds
xchg
xchg
in
pop
xchg
or
add
lahf
shll
mov
aad
and
outsl
icebp
jle
mov
mov
fistpl
jg
sbb
cmp
cmp
je
shll
dec
adc
push
xor
xchg
push
scas
lods
repnz
in
and
stos
shrb
cmp
pop
pop
cmp
pop
xchg
lret
sti
or
ds
call
movb
addr16
jnp
cmp
out
mov
je
lds
fcomps
daa
xor
scas
xor
negl
dec
lds
ljmp
mov
add
loope
arpl
loopne
pop
mov
loopne
scas
push
out
xchg
or
pusha
das
pop
imul
adc
ljmp
lcall
fistps
stos
cmp
shrl
xor
fcomps
sbb
jbe
orb
in
lock
sub
bound
int
movsl
jp
adc
add
subl
cmp
daa
mov
mov
aaa
xchg
imul
lret
pop
dec
jno
dec
ljmp
push
test
imul
or
repnz
shrb
dec
lds
cmp
subl
sbb
insl
xor
daa
or
idiv
loope,pt
dec
ret
popa
xor
cmpsb
dec
xlat
pop
cli
jo
rcrb
jl
fcoms
cli
lods
cmp
pop
jo
adcb
push
cmp
adc
insl
cmp
ss
xorl
jbe
xchg
mov
and
push
sahf
lds
popf
into
cmp
popf
or
into
cs
sub
test
addb
push
rorl
inc
jle
jae
jge
andb
jge
pop
xor
out
xor
jmp
sti
push
pop
xchg
push
push
aas
pop
cs
pop
testl
mov
lret
leave
adc
and
imul
sbb
jp
ret
test
insb
lds
fistpl
mov
and
xor
mov
mov
scas
insl
aas
bound
pop
dec
psubq
fwait
test
mov
pop
jno
sbb
pop
jecxz
ret
or
lahf
pushf
xchg
xchg
rcl
adc
adc
dec
stos
lahf
dec
std
mov
sub
pop
mov
mov
push
aam
inc
inc
mov
loope
lcall
cmp
lock
xchg
clc
push
jbe
lods
mov
sbb
and
cmpsl
push
pop
add
mov
inc
jge
loop
mov
lods
test
out
mov
mov
les
push
leave
xchg
xchg
out
cmp
sbb
add
fsubrs
mov
shrb
ja
mov
daa
popa
jp
cs
pop
pop
es
sub
bound
mov
sahf
mov
xchg
addb
test
push
jae
fisttps
mov
int
lret
sbb
rcrl
movsb
call
sbb
nop
enter
aad
add
stc
mov
andps
sub
test
mov
sbb
popa
dec
lret
pop
mov
divl
movsb
xchg
push
xchg
arpl
adc
jo
xchg
andl
pushf
cmp
push
nop
inc
fcoms
inc
sbb
mov
and
imul
ds
lods
dec
mov
cmp
data16
dec
jb
imul
out
imul
es
or
sti
fwait
imul
arpl
outsb
ret
mov
or
cmp
pop
mov
sbb
ret
adc
sbb
push
or
sarl
mov
and
imul
fisubs
mov
xchg
into
xchg
stos
mov
inc
jmp
dec
mov
xorl
push
push
insl
dec
sbb
fisttpll
pop
mov
mov
mov
imul
aam
xorb
adc
pop
sahf
mov
fcoms
or
repnz
cltd
daa
in
scas
es
xchg
out
testl
mov
test
and
mov
cmc
loop
jg
mov
into
and
add
inc
push
pop
repnz
lahf
lock
cmp
idivb
aaa
insb
mov
enter
mov
dec
or
mov
clc
dec
and
xor
jg
jae
subb
test
in
jns
cmc
cmpsb
cmp
dec
clc
addl
rol
mov
test
and
cltd
sbb
mov
xor
int
xor
icebp
dec
movsb
pop
lahf
sub
mov
and
test
push
xchg
lret
lds
mov
stos
cmp
adc
cmp
adc
and
cmp
xlat
in
mov
shll
pop
mov
out
out
cmpsl
sub
hlt
iret
dec
sbb
jb
jmp
js
xchg
adc
jl
leave
fists
pusha
mov
into
lret
inc
gs
add
inc
xchg
mov
gs
jge
idiv
cli
inc
in
shll
insl
into
fwait
push
push
aad
mov
pop
push
inc
paddw
xchg
lret
inc
dec
or
xchg
scas
inc
fnstsw
mov
jnp
jae
sub
push
inc
jmp
mov
dec
inc
lahf
push
mov
cmp
pop
or
push
add
inc
add
repz
xor
inc
xchg
dec
adc
js
bsr
lcall
xor
loope
mov
inc
loope
cltd
or
dec
add
adc
push
mull
sbb
jne
xchg
andb
cmc
jmp
xchg
pop
hlt
mov
test
dec
inc
mov
mov
jnp
mov
or
add
ss
inc
and
pop
add
fldl
mov
push
pop
fisubl
push
into
push
lds
and
sub
gs
pop
in
test
insl
aas
mov
inc
into
inc
in
inc
mov
jo
lods
mov
push
es
stc
and
mull
stc
fbld
sbb
out
fdivs
sub
mov
xchg
lahf
lock
sbb
call
inc
and
sub
addr16
push
imul
lds
or
xorl
into
stos
xor
adc
decb
fstps
pop
daa
cwtl
in
test
xchg
addr16
les
sbb
es
enter
cmp
insb
lock
mov
or
mov
sbb
loope
sahf
inc
lea
inc
cmp
cmp
into
jb
int
std
stos
sbb
sbb
setae
enter
or
or
sub
jo
popa
push
ss
pop
pop
int3
inc
mov
xchg
or
mov
orl
mov
mov
push
dec
gs
into
sbb
int3
test
clc
in
jmp
push
ds
jmp
cwtl
repz
xchg
ss
arpl
int
pop
push
lds
adc
xchg
pop
push
pop
stos
dec
jbe
sti
xor
add
xor
aam
sbb
or
adc
cmp
std
mov
cmp
push
cmp
jo
xchg
and
iret
in
int
xor
cld
mov
mov
movsb
and
cli
aaa
add
ret
les
in
add
fisubs
jl
and
in
sahf
xor
bnd
fsubl
cmp
push
add
inc
push
pop
repz
lret
sti
popa
xchg
mov
cmp
adc
jmp
jae
jae
ljmp
dec
mov
adc
fwait
xchg
sbb
fldcw
scas
ss
mov
push
ds
inc
fiaddl
fcoml
pop
scas
jge
mov
xor
cld
sarb
mov
push
mov
packsswb
das
push
xchg
sbb
mov
stc
and
in
mov
jp
inc
inc
mov
imul
cld
ss
rcl
or
lock
das
adc
jnp
jle
sbb
and
xchg
mov
jmp
or
bound
mov
das
adcb
mov
xchg
cwtl
jg
cwtl
iret
shrd
in
pop
adc
in
fidivrs
scas
cmp
movsb
mov
scas
jmp
mov
daa
sub
lea
push
mov
sbb
call
sub
and
jl
jns
jns
lock
cmp
jne
xchg
xchg
inc
in
gs
cltd
gs
loop
cmp
jno
sbb
faddp
fwait
xor
shll
daa
mov
pop
test
xor
sub
sub
int3
pop
fcmovbe
rorb
ret
sbb
sbb
in
jl
lock
out
popa
xchg
push
lea
ds
testl
scas
fcompl
ja
in
dec
lock
lods
loopne
jno
cmp
push
sbb
arpl
xchg
xor
and
sbb
push
mov
add
test
repnz
ficoms
arpl
cmp
adc
cmpsb
inc
sbb
cwtl
or
pop
ret
inc
xchg
cltd
xor
jge
jle
neg
cmc
dec
mov
xor
and
xchg
ja
fildl
out
data16
mov
lods
push
mov
popa
mov
sub
ret
pop
ljmp
add
aad
dec
pop
repz
repnz
adc
add
xchg
inc
movsl
xor
xor
push
lea
mov
add
shl
roll
pop
dec
cli
cmp
sub
sub
jo
dec
push
jmp
daa
loop
xchg
jns
rorl
adc
xor
repz
push
cmpsb
shll
and
sti
sbb
push
daa
mov
data16
mov
sbbl
loopne
push
es
es
cmp
pop
fisttpll
test
cmp
or
ljmp
fimull
xchg
shlb
inc
out
lret
lret
or
cli
dec
stos
fisttpl
mov
not
aaa
xchg
cmp
leave
pop
sbb
imul
popl
xchg
fdivrs
nop
ds
icebp
out
push
jecxz
in
dec
adc
lock
andb
push
js
stos
leave
jmp
mov
jno
push
je
xchg
pop
sbb
imulb
and
inc
add
mov
cmpsb
mov
sar
imul
add
push
cmp
push
xchg
cmpsb
mov
pop
mov
test
in
push
dec
nop
add
cli
push
adc
dec
pop
push
andb
ds
xchg
mov
xor
push
or
fwait
inc
pushf
add
enter
call
stc
shll
fbld
outsb
ret
dec
sahf
fsts
lods
push
mov
pop
and
fisttpl
inc
jbe
lea
test
inc
xor
mov
and
and
movsl
xor
jbe
jnp
push
mov
test
pop
jecxz
outsb
jne
push
mov
aas
cmc
repz
pop
mul
inc
xor
imul
es
rorb
lods
pop
adc
mov
outsb
outsb
mov
jae
fdiv
mov
inc
add
inc
xor
jbe
leave
mov
inc
out
jbe
in
int3
and
jmp
or
and
pushf
sub
xchg
daa
fldenv
adc
adc
push
jmp
mov
jbe
and
and
aad
xor
xchg
loopne
push
or
pushf
mov
mov
cmc
pop
int
adc
mov
in
push
cmpsb
pushf
test
les
adc
ret
add
or
xchg
js
pop
xchg
mov
xorl
push
push
sbb
mov
test
inc
sub
fsubs
push
add
repnz
jecxz
lret
sub
pop
push
mov
add
mov
push
push
sub
mov
fsubr
push
outsb
dec
mov
out
aam
aad
push
pop
popf
stc
add
cmc
xor
addr16
cltd
jae
jle
or
adc
sbb
inc
cltd
clc
mov
imul
mov
sar
js
test
push
cmpsl
jne
mov
ds
ja
daa
loope
adc
in
mov
out
cmc
push
xchg
sub
pop
dec
or
in
sub
leave
push
xchg
iret
jecxz
incl
inc
cwtl
pop
rclb
pop
mov
in
cwtl
lods
sub
lods
sti
mov
inc
sub
cwtl
mov
test
jns
adcb
add
rcl
test
or
sahf
fsts
leave
fs
lds
lods
jmp
popf
jne
mov
enter
hlt
push
data16
xchg
shl
call
and
xor
orl
imul
adc
jecxz
add
fldl
sbb
jae
or
inc
jl
stc
cltd
mov
repnz
and
fcmove
sub
ret
mov
in
pop
pusha
out
test
shll
push
pop
pop
cmp
push
jae
sub
pushf
mov
xlat
and
js
jns
stos
lret
and
test
cmp
stc
insl
mov
pusha
outsl
inc
and
subl
cmp
mov
stos
push
in
jo
jecxz
mov
jle
add
jae
sarl
dec
add
jp
cli
adc
imul
out
sub
mov
xor
pop
call
sti
into
and
xor
mov
inc
mov
outsb
leave
loope
jecxz
dec
jne
jno
repz
and
icebp
xor
push
xchg
std
shl
adc
cmp
stos
lahf
int
lods
adc
lods
cmp
jle
pop
and
cmpsl
mov
inc
ss
fs
mov
mov
xor
or
jmp
sub
test
cld
mov
push
add
leave
fdivrl
mov
lret
jno
mov
push
lods
mov
popf
iret
loope
xor
xor
fstpt
mov
out
mov
ret
sub
or
int3
ret
mov
mov
psrld
sub
xor
movsb
cld
pop
pop
xor
arpl
sub
sarb
or
sbb
pop
or
dec
jl
shll
dec
sbb
sbb
arpl
adc
xlat
jns
neg
push
jecxz
jecxz
test
jbe
movsb
inc
bound
cs
bnd
inc
lods
or
out
mov
jnp
dec
leave
or
pop
jmp
or
sbb
mov
inc
mov
pop
or
jns
cmp
push
mov
enter
xor
les
jae
inc
loope
in
mov
das
inc
lock
push
cmpsl
in
add
mov
into
mov
fldcw
jo
mov
push
dec
or
jge
outsb
push
push
scas
into
cli
sub
push
push
into
imul
and
mov
mov
pop
push
inc
adc
pop
movsl
cltd
xor
les
fwait
stos
and
lret
add
jae
jnp
loop
dec
inc
or
or
xor
jbe
jne
sbb
add
js
sbb
push
jne
out
shr
mov
mov
and
aas
arpl
lcall
getsec
add
cld
in
aaa
or
mov
ret
add
fwait
dec
mov
fs
scas
inc
fnstsw
xor
fisttpll
movsb
iret
shrb
mov
fnstenv
inc
cmpsb
push
xor
cltd
cwtl
jae
aam
push
or
push
mov
ja
testb
sti
repz
pop
adc
sbb
loop
mov
int
das
mov
outsl
dec
cwtl
rcrl
add
mov
in
or
mov
xchg
data16
clc
das
cld
mov
mov
cmp
popa
sti
dec
movsl
xor
cmc
leave
dec
push
hlt
mov
aam
clc
icebp
inc
mov
mov
adc
ss
mov
addr16
test
jnp
add
add
mov
subl
cmp
add
push
lret
mov
jp
jb
cmpl
lods
mov
sbb
filds
jecxz
int
jns
cmp
mov
les
popf
push
xor
cmp
pop
fisttpll
mov
insb
mov
or
int
insl
push
cwtl
dec
or
mov
sub
xchg
jge
xor
jge
loop
ljmp
popf
mov
push
mov
or
cmp
mov
pop
arpl
clc
add
fdivrs
push
push
dec
orb
mov
or
mov
imul
aam
cmp
ret
ret
lea
dec
pop
out
cli
popf
fstpt
shrb
testb
mov
mov
fdivrs
adc
jmp
push
outsb
cli
lret
mov
popa
test
je
xchg
in
scas
popa
popa
jb
sti
xchg
pusha
jmp
ja
pop
faddp
inc
mov
adc
stos
test
xchg
mov
enter
jmp
sbb
jne
lods
lods
cld
cld
xor
dec
adc
mov
cwtl
jns
pop
loopne
xor
sub
arpl
mov
cmp
xor
pop
outsl
dec
inc
push
subl
dec
divb
popa
lret
push
xchg
jmp
sub
or
out
popf
cmp
pop
mov
dec
adc
push
sbb
andb
adc
cmpsl
rol
ficomps
popf
popa
clc
lret
rorl
mov
mov
jp
xchg
sub
repnz
mov
and
subb
imul
add
inc
jecxz
mov
inc
cld
sbb
inc
rcrl
jge
fwait
jae
leave
es
psrad
psrld
lods
dec
dec
dec
pusha
and
cmpsl
jbe
insb
xlat
mov
shll
dec
in
fsubrs
mov
lock
daa
xchg
leavew
jecxz
sbb
push
icebp
stos
aad
and
lea
movsb
negb
sbb
ret
js
in
xor
es
push
pop
fimuls
addl
ret
mov
mov
imul
stc
cmpsl
mov
repz
or
mov
aam
ret
mov
sbb
mov
test
pop
dec
push
mov
or
xchg
cmp
dec
dec
lret
stos
mov
xor
xor
inc
add
cmp
rolb
into
scas
cltd
ds
fcoms
push
mov
xor
push
mov
push
push
movsb
mov
lret
xor
popa
lret
inc
cld
stos
testb
arpl
cmpsb
jno
pop
jl
pop
fcomps
mov
movsl
mulb
cwtl
xchg
mov
xchg
xlat
adc
movsl
shll
ret
push
stos
or
insb
lods
cwtl
inc
sbb
dec
cmpl
imul
push
or
mov
mov
cmc
cmp
fs
je
push
pushf
in
cld
or
mov
or
mov
cmp
es
sbb
sbb
in
jmp
idiv
scas
imul
jp
push
in
stos
push
xchg
rolb
mov
jns
test
xchg
dec
addr16
sbb
lret
cmp
or
mov
add
mov
sub
aad
jg
add
push
arpl
jnp
mov
pusha
in
and
inc
subl
mov
lcall
inc
mov
movsb
data16
mov
cltd
sbb
rolb
and
jns
mov
mov
out
xor
sub
mov
push
mov
mov
in
int
cli
iret
add
mov
imul
sub
inc
add
ds
inc
cs
out
sub
push
pop
mov
cmp
out
add
cwtl
insb
test
xchg
push
push
aam
xor
dec
mov
mov
mov
lcall
sub
xlat
int
mov
cs
std
jb
mov
or
jecxz
pop
int
sbb
mov
lret
cmp
pop
pop
or
push
xor
adc
lret
jmp
icebp
ror
or
fs
test
not
sbb
sahf
mov
mov
mov
iret
xor
bound
inc
mov
xchg
mov
push
mov
sub
and
cmp
lods
repnz
or
mov
add
cmp
dec
dec
cmp
fs
pop
pusha
ret
xor
test
dec
inc
push
insb
push
iret
repz
lret
adc
pop
pop
push
xlat
fildl
mov
adc
add
clc
in
lds
inc
stc
adc
xchg
pop
aas
push
clc
push
pop
loop
pop
pop
jmp
jmp
int
addr16
js
dec
add
arpl
pop
add
negb
sub
sbbb
dec
cld
push
rep
mov
pop
popa
test
ss
jns
movb
aas
flds
dec
lret
pop
cmc
dec
xchg
imulb
jns
cmp
cmp
jle
mov
mov
mov
outsl
mov
pop
fidivrl
push
es
fldcw
mov
jecxz
fbstp
jne
addr16
and
jle
idiv
out
dec
mov
cld
dec
lods
aad
xchg
fidivl
sub
push
push
pop
inc
or
jo
lahf
mov
xchg
fwait
daa
xor
ss
pushf
cmc
rcrb
sub
stos
sbb
adc
xchg
sti
xchg
mov
dec
push
lods
dec
pop
dec
dec
loope
pop
sbb
xor
mov
or
ucomiss
and
and
xor
mov
fldenv
inc
cmpsl
lds
cld
mov
fcmovne
aaa
dec
loope
jnp
mov
lea
mov
lcall
push
and
sub
in
pusha
sbb
mov
pop
in
shr
imul
js
push
cmp
rol
test
sbb
adc
addr16
std
popa
nop
loop
inc
add
in
inc
test
adc
adc
mov
xchg
pushf
shrb
sti
push
test
insb
jns
addr16
pop
inc
pop
aas
test
jl
icebp
cmpsb
xchg
rorl
or
or
pushf
push
xchg
repz
lahf
and
mov
and
pmuludq
scas
adc
ds
xor
or
lds
pop
gs
popa
mov
shll
hlt
testb
aam
addr16
subl
mov
xchg
fnsave
clc
or
cmp
das
stos
cld
mov
sahf
clc
pop
pop
xchg
xor
pushf
mov
lock
loope
or
mov
or
sbb
or
pop
lock
push
mov
inc
sahf
call
rcl
stc
notl
outsl
dec
pop
xlat
out
mov
or
jbe
xchg
dec
int3
push
stos
sub
dec
mov
fists
ror
movsl
add
xor
cmp
lock
jmp
add
and
xchg
sub
sti
mov
into
imul
jmp
add
cli
xchg
out
xchg
xchg
out
repnz
cmp
incl
out
push
adcl
sbb
jae
faddl
mov
andb
jno
push
arpl
pop
movsl
stos
sbb
and
lock
stc
cltd
xlat
mov
mov
pop
xchg
dec
and
cmpsl
inc
xchg
sarb
push
mov
xor
mov
ds
in
lds
jne
adc
adcb
repz
xor
add
pop
call
shrl
add
mov
shlb
loope
xchg
mov
in
aas
test
cld
add
cmp
stc
jno
mov
and
mov
aad
adc
cmp
mov
xchg
and
mov
imul
nop
lret
xchg
jle
jge
out
jno
clc
les
arpl
hlt
in
jnp
add
mov
leave
inc
adc
xchg
cmp
inc
mov
or
cmp
stos
mov
push
sbb
inc
inc
pushf
pushf
out
adc
repz
orl
lret
push
add
movsb
loopne
xchg
xchg
pop
sbb
loop
add
push
xchg
dec
gs
mov
js
adcb
sbb
into
xchg
add
pop
ja
rcr
lds
adc
std
inc
push
jns
outsb
sbb
mov
lret
pop
push
xor
nop
out
stos
push
push
lds
imul
dec
push
int
push
insb
stos
push
xchg
test
lcall
pop
mov
call
and
dec
cmc
or
jnp
es
push
fld
test
add
push
and
jecxz
adc
cmp
cmpsb
add
mov
aaa
push
mov
and
jmp
subl
ds
mov
mov
roll
fs
xchg
aam
aaa
mov
repnz
fwait
loop
das
rolb
negb
insl
rorb
pop
mov
sbb
pushf
push
enter
sarl
add
repnz
ljmp
or
inc
inc
xchg
test
into
sbb
pop
pop
add
xchg
sub
or
fmuls
insb
je
xor
aas
push
xlat
imul
push
push
ret
loope
sbb
out
pop
lea
bound
dec
mov
ja
mov
push
lds
adc
cmp
jge
cmp
shlb
bound
inc
lock
xor
jle
xorl
mov
notb
bound
out
fists
sbb
inc
jae
addl
mov
jge
sub
into
push
jge
mov
xlat
jns
and
ja
cmpsb
jle
lret
push
addr16
jl
mov
in
call
sub
push
xchg
add
cmp
stos
imul
jl
add
outsl
fwait
out
out
imul
push
mov
in
sbb
jg
add
rcrb
add
sbb
jg
imul
leave
leave
inc
xor
loop
out
movsb
inc
inc
jb
xchg
rorl
xchg
in
inc
inc
dec
push
aaa
jmp
insl
std
xlat
push
mov
dec
pop
push
inc
popa
push
lock
xor
mov
aam
test
cmp
pop
pop
dec
ss
ss
mov
push
cmpsb
in
pop
xchg
add
sub
jp
iret
add
cmp
mov
scas
addl
adc
adc
cmp
cwtl
int
and
push
das
out
adc
out
mov
mov
push
mov
pushf
pushf
jnp
xor
lods
std
sbb
scas
xorl
mov
or
pop
aam
inc
out
js
cs
lea
push
movsl
xchg
fdivrl
add
sub
lds
push
lods
sub
pusha
scas
clc
mov
outsl
in
xchg
das
pop
test
add
clc
ljmp
add
das
xchg
enter
pop
outsl
inc
sbb
pop
insl
adc
fstpl
insb
stos
lods
jmp
cmp
mov
int
addr16
fisubrl
sbb
xor
test
pushf
aam
and
int3
aaa
aas
data16
divl
fistpll
aad
sbb
ljmp
inc
xor
ja
setp
cmp
fprem
movsb
sbb
icebp
call
push
lock
call
sub
mov
or
jg
in
inc
jne
mov
add
roll
add
dec
enter
in
sub
mov
xor
add
sbbb
jb
add
push
mov
fdivrl
stc
jbe
movsl
lahf
mov
push
sub
dec
jmp
fiadds
pop
je
inc
jb
sarl
shrb
push
aad
movsb
xchg
neg
lods
stos
pop
shll
fidivrs
sbb
jmp
fidivs
push
dec
stos
gs
pop
lock
jl
mov
leave
lods
pop
cmp
test
mov
adc
fisttpll
mov
pop
xchg
jb
add
sbb
xchg
mov
test
mov
sub
or
test
lcall
insl
mov
out
xor
push
incl
sub
mov
ja
pop
fwait
xchg
in
mov
xor
fisubrs
fidivs
mov
les
scas
xchg
movsb
movsb
sub
es
cmp
push
push
mov
imul
cmp
push
or
test
jnp
sbb
sahf
jae
jecxz
pop
std
and
aas
sahf
mov
inc
insl
into
repz
push
cli
enter
call
rorb
xor
or
or
ja
cmp
pop
mov
xchg
xchg
stos
jo
xor
insb
sub
fsubrp
ret
lea
push
repz
push
pushf
fwait
pop
test
mov
test
mov
lods
jne
dec
mov
clc
add
pusha
adc
daa
mov
insb
inc
sbb
add
dec
repnz
sub
loope
test
mov
fisttpll
cmpsb
cli
sub
mov
inc
in
push
out
sbb
clc
in
sarl
mov
push
and
aaa
outsb
add
femms
xlat
fidivrl
xchg
insl
xchg
pop
iret
push
jae
dec
aas
or
mov
xchg
sbb
xor
imul
dec
jno
leave
pop
sbb
jg
inc
lahf
xor
ret
mov
cmp
inc
ficoms
lea
daa
mov
jecxz
or
or
add
in
sbb
pop
pop
js
mov
jns
push
out
mov
jecxz
push
push
test
mov
mov
push
cmp
rcrb
add
mov
mov
push
push
pop
xchg
dec
mov
xchg
aas
xchg
mov
or
sbb
mov
js
dec
push
jne
int
mov
gs
ss
jns
jmp
pop
add
mov
cmpsb
mov
and
xor
cmp
test
arpl
mov
call
mov
cmp
cmpsb
ja
sub
cmp
push
aad
notl
hlt
jle
subb
popa
fmuls
xor
adc
push
mov
std
sub
mov
pop
outsl
mov
xchg
pop
inc
xchg
loope
and
inc
fnstcw
iret
jl
dec
test
jb
pop
icebp
adc
xchg
clc
sbb
loop
js
xorb
or
out
mov
inc
mov
movsl
mov
fcmovbe
int
mov
inc
mov
xor
imul
stc
add
ret
jbe
in
sub
in
and
mov
mov
fs
jne
pushf
out
cmp
loopne
outsl
sub
call
setno
cmpsl
ficompl
scas
dec
xchg
shrl
mov
xor
dec
lods
add
inc
mov
imul
in
fidivrl
xchg
mov
and
je
lretw
jnp
jbe
push
xchg
mov
push
bound
mov
sarb
add
fcoms
pop
and
shrl
xchg
mov
call
addr16
sbb
cmp
sahf
xor
pop
dec
jns
out
xlat
mov
jmp
enter
adc
or
enter
sub
cmp
jge
icebp
sbb
fiadds
dec
mov
sub
andb
addb
ficoms
jo
pop
lahf
int
mov
adc
sti
mov
in
sbb
mov
xchg
pop
loope
aam
push
loop
lea
outsb
cmp
out
sub
lds
stos
orl
xchg
mov
loopne
jae
cli
push
je
or
jo
and
push
push
loope
mov
push
or
and
filds
jle
movsb
pop
jns
ret
pop
sahf
lret
dec
popf
imul
or
ficoms
fisubrl
push
sub
push
imul
aas
sarb
shlb
cltd
adc
ljmp
loop
push
mov
cmp
cmpsl
adc
add
adc
cmp
outsb
adc
out
imul
mov
je
mov
in
fisttpll
out
fmull
sbb
mov
movsl
and
and
push
sub
push
adc
lods
movsl
sub
cmp
test
push
xchg
xchg
pop
xchg
popf
lds
xor
stos
cmp
fs
adc
ss
lcall
push
mov
sbb
xchg
sbb
adc
mov
sub
aaa
in
add
cli
add
stos
arpl
mov
hlt
inc
in
enter
lock
inc
aam
add
pushf
test
in
gs
repz
cmp
dec
jns
cmp
mov
shll
jno
data16
xchg
mov
test
dec
xchg
mov
dec
xor
adc
lcall
pop
xchg
jb
sbb
xor
xor
sbb
daa
push
cli
push
push
and
addr16
and
cmpsl
lock
repnz
mov
outsl
adc
lcall
cmc
xor
cmpsb
cmp
mov
inc
and
and
loope
sbb
rcrl
out
dec
test
subb
arpl
mov
jnp
rcll
cmp
xchg
cmp
pusha
or
daa
mov
xchg
sub
popa
popa
inc
scas
nop
push
add
sub
std
dec
inc
ret
pop
stc
sbb
pop
xor
dec
or
lahf
popa
dec
inc
ds
mov
das
shlb
jnp
ljmp
or
xor
shlb
divb
loopne
addr16
adc
add
out
or
and
xchg
cmp
xchg
jb
popf
jbe
sbb
xchg
adc
nop
scas
dec
je
ljmp
add
sub
mov
pop
divl
hlt
cmpb
push
dec
inc
inc
cld
xor
scas
iret
mov
push
out
dec
aad
mov
mov
push
add
pop
mov
sub
add
test
insl
xor
inc
jne
xchg
xchg
jns
mov
fs
sbb
xor
push
push
popf
fs
sbb
jo
cmc
push
ret
addb
outsb
test
in
xor
scas
ficoml
loopne
pop
jns
jno
mov
loop
mov
adc
add
add
sub
in
push
push
or
mov
push
cmc
xor
xor
jecxz
mov
enter
scas
dec
sbb
or
stos
lret
xchg
and
fbstp
mov
inc
int
rolb
pop
inc
xchg
push
jg
lds
cmp
push
hlt
pop
sub
or
les
lock
repnz
add
rol
xor
mov
push
ss
jne
sub
pop
imul
out
jl
mov
mov
or
aam
jo
out
cmp
in
pop
or
movsl
jb
jae
dec
dec
xlat
or
mov
lds
jne
imul
mov
loopne
movsl
pop
mov
clc
cmp
movsl
jmp
xchg
test
cwtl
repnz
and
push
pop
sti
pop
shll
fs
sub
fwait
int3
stc
add
push
sub
je
test
push
sbb
mov
cmp
test
push
dec
push
push
cltd
mov
lcall
cltd
xchg
add
hlt
les
lock
push
mov
lret
nop
sbbb
pop
fs
dec
out
mov
cmp
test
jo
clc
cmp
and
scas
pop
adc
aaa
xor
aad
ret
or
fdivrp
fdivs
mov
jbe
dec
adc
and
add
mov
in
jp
add
dec
dec
jg
mov
js
scas
aas
mov
out
loop
mov
lahf
cmp
pop
dec
xchg
scas
jns
shll
mov
in
loop
pop
pop
jbe
lds
add
or
mov
cmp
imul
rcl
and
or
sbb
pop
add
cmc
jge
push
stc
mov
lock
in
adc
out
jmp
xorps
xchg
lods
test
nop
fldt
sub
in
pop
dec
xor
pop
or
fisttpll
cmp
adc
or
mov
add
ss
ljmp
pop
mov
and
repz
push
push
jo
out
cmp
jp
jb
cmp
adc
fldt
aad
scas
outsl
sbb
scas
mov
jo
sub
add
dec
imul
fcomip
rcr
std
jmp
dec
and
leave
adc
push
jnp,pt
mov
lods
sbb
push
loope
inc
lcall
cs
or
clc
fnstsw
inc
sbb
cwtl
popf
sti
jb
sub
inc
aas
mov
dec
pop
push
cmc
jle
mov
ss
out
fwait
mov
shll
ja
in
pop
and
xorb
jmp
fidivl
push
test
mov
arpl
lcall
jb
jecxz
xchg
int
outsb
xor
mov
and
xor
lcall
inc
pop
xchg
mov
out
or
aad
push
mov
pop
mov
sbb
adc
aaa
jbe
xor
divb
xchg
lods
jb
daa
js
mov
xlat
js
mov
je
jns
cmp
data16
arpl
xchg
pop
cmc
cwtl
add
out
test
pop
lret
outsl
es
shrl
mov
dec
stos
adc
xchg
or
and
mov
xchg
arpl
pop
jl
mov
fstl
dec
adc
bound
sub
mov
dec
and
xlat
mov
adc
xchg
push
jnp
push
jge
cmc
sbb
lock
inc
daa
and
pop
mov
push
nop
adc
mov
arpl
jp
rolb
cmp
inc
xchg
xchg
pop
test
cmc
and
dec
dec
shl
cmc
and
xlat
inc
scas
mov
inc
jne
or
cmp
and
bound
in
lods
movsb
test
mov
inc
xchg
sbb
aas
shll
xchg
mov
jb
jae
inc
push
rolb
mov
pop
ljmp
pop
jnp
dec
in
and
mov
and
je
cltd
pop
je
lods
pop
mov
mov
iret
rclb
xchg
pop
pop
inc
pop
inc
icebp
enter
jp
dec
adc
mov
adc
lea
mov
xchg
mov
cs
repnz
xchg
sbb
mov
dec
xor
shl
mov
mov
pushl
aam
arpl
pushf
es
shr
push
repz
pop
fsubrs
or
cmp
hlt
jo
std
fs
lods
cmp
and
pop
or
loop
mov
dec
xorb
xor
jb
jmp
jb
jle
loop
jecxz
push
xchg
lods
mov
mov
cli
sub
xor
sti
adcb
dec
mulb
xchg
fldt
fwait
loope
pop
add
decl
ja
std
xchg
mov
cmp
rcr
clc
pop
pop
jo
jnp
loop
mov
enter
sub
aaa
mov
in
adc
inc
push
popf
sub
stos
push
lea
jae
add
shlb
bound
cmc
pop
mov
xchg
bnd
pop
sbb
jmp
test
pushf
outsl
add
fmuls
dec
cmpsb
shr
lret
xor
adc
push
popf
loop
data16
dec
les
cwtl
mov
sbb
adc
cmp
shrb
or
cmpsb
faddl
mov
arpl
out
and
xor
mov
fidivl
lods
stos
movd
ret
push
fcomp
mov
scas
cmp
mov
call
sti
std
push
ds
xor
jne
xor
adc
pop
loop
adc
pop
dec
subl
adc
xor
stc
orb
popf
in
out
shr
and
call
cmp
inc
dec
pop
fs
mov
cmp
push
les
mov
inc
inc
jg
mov
in
sub
adc
inc
ja
in
test
sub
mov
shlb
mov
push
aad
cmp
popf
jns
inc
xorb
nop
icebp
in
or
mov
sbb
repnz
in
adc
xchg
fsts
sbb
xchg
push
and
dec
nop
sbb
stc
movsl
movsb
push
mov
pop
into
lea
xor
xor
mov
clc
lea
imul
lahf
call
jbe
inc
jecxz
fcomp
push
cmp
sahf
mov
gs
add
pop
sahf
or
sub
push
nop
in
decb
mov
fnsave
cmc
inc
bound
stc
cmp
incb
mov
lcall
sub
test
and
movsb
mov
pop
xchg
in
fnstsw
in
and
or
cmp
rcrl
lock
insb
push
lds
je
orl
inc
or
adc
inc
dec
hlt
pop
stos
lcall
repz
adc
mov
mov
xor
cmp
xor
loop
inc
mov
out
sbb
and
rcrb
push
push
imul
mov
xor
pop
popa
mov
addb
test
nop
cmp
jl
sbbl
sbb
cmp
out
js
call
jecxz
pop
jno
test
and
inc
aam
jo
inc
cmp
jge
pop
je
arpl
adc
jne
adc
les
xor
shlb
sbb
stc
push
lahf
xor
or
pop
or
sbb
xor
adc
fisttpl
daa
loopne
mov
sti
movsb
sub
sahf
mov
out
enter
push
sub
or
jmp
xchg
std
push
aad
je
mov
in
and
shl
lea
pop
inc
mov
mov
add
out
push
xchg
call
dec
mov
imul
fwait
and
and
in
push
nop
dec
cmp
negb
dec
add
negb
rol
arpl
hlt
dec
lcall
and
popl
adc
ljmp
lahf
jae
aam
lret
mov
stc
add
in
int
out
mov
and
lahf
iret
cmp
rclb
cmp
jl
adc
jle
or
pop
test
loope
daa
lods
imul
sub
mov
int3
imul
loope
lahf
sub
pop
js
sbb
gs
repz
xor
lods
push
push
mov
adc
add
fsubrl
lods
ds
popa
add
orb
lea
out
mov
mov
jne
out
mov
cmp
sbb
jae
lcall
mov
xchg
pop
data16
std
add
jnp
pop
std
scas
sub
sbb
inc
jnp
pop
or
sub
pusha
sbb
xchg
jg
dec
lea
fwait
in
testb
or
fs
xchg
repz
mov
icebp
inc
scas
jnp
lahf
sub
or
fwait
loopne
rcr
adc
insl
icebp
mov
mov
and
mov
xor
sub
int3
add
cwtl
lods
rdtsc
or
push
shr
sbb
pop
pusha
mov
mov
int3
out
and
repnz
mov
jbe
inc
cmc
loopne
jecxz
ljmp
sbb
in
add
pop
push
insb
pushf
mov
lret
out
xor
sbb
xor
jmp
adc
mov
sbb
cmp
jg
pop
xchg
out
push
sub
pop
jg
movsb
xchg
aam
rcll
stc
mov
fmull
xchg
int3
addb
aad
loopne
jl
sbb
out
sub
push
or
mov
mov
xchg
int
scas
mov
cltd
cld
push
rorl
orb
add
or
arpl
in
or
adc
jns
dec
mov
notl
jge
sub
fcompl
test
lock
adc
fcomp
add
adc
icebp
cmp
jge
gs
cmp
filds
inc
into
adc
in
cmp
jg
pusha
and
hlt
loop
mov
xchg
and
push
and
mov
test
iret
push
lahf
xchg
ja
jle
cld
cmc
scas
or
lret
or
ds
mov
outsb
inc
mov
cltd
add
popa
mov
and
imul
mov
and
les
cmp
xchg
mov
ja
test
push
xchg
test
mov
ljmp
inc
jmp
and
and
cltd
dec
ds
dec
jp
movsl
inc
inc
sub
lret
fs
into
and
xor
bound
sahf
sbb
clc
hlt
loope
cmc
out
jp
jecxz
mov
and
mov
adc
imul
push
dec
lea
in
mov
jle
int
in
jmp
nop
stos
jae
xorl
dec
and
rcrl
cltd
xchg
fcoms
lcall
mov
add
push
shl
test
test
push
ljmp
push
add
rcll
jnp
sbb
mov
mov
and
or
scas
lcall
loope
fwait
lcall
mov
sub
fiaddl
mov
push
inc
sub
sub
or
jmp
push
out
and
jl
push
cmc
fwait
adc
clc
and
mov
push
in
jmp
fstl
push
test
pushf
shll
jb
shr
pop
adc
addr16
sub
test
mov
sahf
mov
push
push
movsb
loope
mov
mov
arpl
or
mov
movsb
dec
add
sub
xor
repz
je
xchg
test
jecxz
add
and
adc
jle
pop
adc
or
fcmovnb
std
dec
lds
lcall
lret
into
or
sbb
inc
sub
or
cmpsl
imul
mov
and
xchg
or
dec
push
mov
xchg
gs
xor
jg
xchg
pop
push
cmpsb
mov
jb
sbb
push
leave
push
lcall
jg
ret
xchg
mov
sbbl
fs
int
cmpsl
or
adc
push
insl
adcl
test
std
ja
shl
mov
sub
add
adc
outsb
pop
movsl
sbb
push
pop
mov
into
bound
lock
rcl
xchg
pop
movsb
xor
sbb
sarl
inc
pop
cmp
fcmove
add
mov
push
pop
rcr
cwtl
test
fwait
xchg
aas
push
jle
jecxz
out
jl
adc
pop
test
fisttps
inc
sub
add
icebp
xchg
fimuls
jbe
pusha
mov
pusha
xchg
pop
and
andl
lods
push
xchg
pop
adc
pop
imul
pop
lret
cmpl
sub
push
dec
icebp
js
sbb
pusha
repnz
out
clc
dec
sbb
inc
rorl
sub
ret
push
repnz
mov
divb
push
and
push
ficomps
xor
mov
cmpl
pop
adc
ss
mov
sbbb
mov
adc
lea
ss
insl
pop
mov
or
fs
loop
fsub
mov
pop
jp
inc
fidivl
jb
push
push
int3
mov
lods
fisubl
mov
xchg
inc
xor
flds
je
rcll
out
jp
test
dec
mov
mov
fsubr
stos
daa
xor
push
clc
fistpll
jg
imul
or
and
push
jne
addr16
enter
fdivrs
in
xor
mov
lock
xchg
fisttpl
gs
lock
push
pop
mov
fcoms
int
xchg
addr16
xchg
xchg
icebp
pop
lcall
mov
mov
mov
mov
ffree
inc
jae
icebp
fmul
inc
xchg
mov
dec
cmpsb
mov
mov
sub
xchg
pop
sarb
mov
out
pop
cmp
xor
ljmp
in
mov
insb
int
inc
or
orb
sub
enter
addr16
mov
inc
xor
mov
imul
push
sbb
loop
mov
inc
jle
push
scas
sti
mov
pop
nop
pop
ja
sbb
movsl
push
mov
push
and
fcompl
pop
cmp
dec
je
loopne
jb
popf
and
stc
scas
pop
or
dec
push
pop
out
or
stos
jl
mov
mov
push
mov
test
jg
sbb
adc
mov
syscall
jne
arpl
daa
outsl
dec
repz
adc
enter
mov
fs
cmp
lods
loope
mov
sub
lcall
mov
sbb
lret
pminub
decl
push
pmaxub
jo
mov
lret
inc
mov
mov
out
movsl
jb
pop
fldln2
add
cmc
lret
addr16
mov
outsb
mov
sbb
push
fs
sub
inc
outsb
adc
mov
push
stos
das
and
in
scas
mov
jg
cmp
scas
jmp
add
pop
jo
cmp
jge
inc
push
jecxz
xorb
and
int3
mov
stos
loopne
xchg
out
fidivl
jge
lret
sti
mov
bound
jb
fs
addr16
js
and
movsb
xor
sbb
daa
xchg
in
inc
dec
or
hlt
test
push
jecxz
addl
sahf
push
xchg
ds
cltd
push
orl
es
loopne
stc
scas
iret
mov
in
and
cmpsl
je
negb
sarl
mov
push
cld
mov
inc
inc
mov
stos
push
jl
pop
fstl
shlb
mov
sbb
cmp
inc
js
js
mov
xchg
adc
xor
outsb
sbb
ss
imul
movsw
lcall
lock
inc
mov
pusha
pop
jecxz
dec
sub
and
stos
or
imul
jbe
sbb
adc
or
repnz
push
ljmp
cmp
xchg
push
mov
push
xor
mov
mov
xchg
dec
pop
pushf
cmpsl
hlt
into
fadds
insl
dec
xchg
cmpb
sub
and
pop
fs
add
jg
ds
pop
orb
ficoml
dec
mov
inc
out
jns
push
fisubrl
pop
push
mov
pusha
call
inc
imul
xchg
dec
cmp
icebp
lods
xchg
rcrl
and
adc
bound
into
inc
push
daa
cmpb
cmp
fwait
dec
xchg
push
test
outsl
idivb
cmc
ja
movsl
xor
imul
xchg
xchg
lods
or
xchg
add
sbb
shl
push
jns
cltd
sti
rcrb
xchg
mov
sub
imul
sub
outsb
insl
inc
xor
jp
ja
stos
scas
out
jle
int3
pusha
mov
pop
mov
xchg
outsb
mov
push
je
mov
add
pop
in
enter
cmp
xor
inc
lahf
pop
int
mov
inc
rcrl
mov
xchg
into
cmpsb
xor
hlt
outsb
test
mov
js
xchg
jo
sti
and
stos
and
xor
cli
scas
pop
movsl
aam
adcl
bswap
xchg
outsl
inc
xchg
nop
dec
inc
or
sbb
es
sbb
mov
inc
popf
sahf
sub
fnstcw
jbe
lcall
adc
addl
lods
andl
pop
into
aaa
xor
push
lret
jb
add
ret
fdivs
or
mov
das
push
or
xchg
inc
fwait
aaa
or
loop
neg
int
frstor
xchg
ja
in
orb
aaa
jle
pop
call
mov
out
arpl
movsl
xor
fnsave
pop
jae
outsb
mov
in
ja
push
add
clc
sbb
nop
stc
push
sub
pop
add
cmp
mov
frstor
xlat
push
mov
dec
mov
jne
mov
int
notb
push
mov
mov
jbe
dec
into
push
mov
jl
add
lds
iret
xor
int
cmpsb
popf
mov
aaa
mov
scas
aam
mov
repnz
lock
push
push
int
orl
mov
pusha
pop
enter
rclb
xor
sub
push
cmp
nop
mov
mov
xchg
jge
es
xchg
or
push
enter
mov
add
xchg
in
dec
loopne
nop
out
cmp
cwtl
or
movsl
mov
mov
lahf
jg
xchg
les
xor
add
js
loopne
sbb
mov
push
sub
cmp
call
add
cli
xor
adc
int
sbb
and
push
mov
fsubr
push
push
lds
mov
sbb
hlt
stos
xchg
xchg
rorl
hlt
mov
insb
add
jle
outsb
pop
sbb
pushf
stos
js
enter
push
jge
clc
push
mov
nop
stc
cmp
aaa
gs
xlat
dec
and
xchg
xchg
adc
push
movsb
fisttps
test
aad
mov
fnsave
fisubrs
rcrb
out
mov
xor
mov
notl
xchg
cmp
or
pop
cmp
iret
leave
rol
cmp
in
mov
push
out
popf
xchg
pushf
sbb
pop
jne
jg
into
lahf
insb
push
dec
cmp
sbb
pop
repnz
sarl
in
call
adc
cltd
stc
faddp
fstps
pop
cmpsb
popa
sub
mov
mov
sub
inc
jmp
scas
xchg
cmp
sbb
fidivs
pop
sarl
mov
dec
mov
adc
add
pop
xor
push
mov
insl
sub
mov
pop
jecxz
push
stc
xor
imul
mov
push
inc
hlt
cmp
pop
test
or
ret
jle
xchg
pop
pushf
cpuid
lods
lods
xor
orb
mov
inc
jmp
aad
popf
mov
adc
sarb
sahf
lods
cwtl
jo
and
test
jmp
ja
jl
mov
cmp
hlt
cmpsb
pop
ret
cwtl
inc
xchg
popf
dec
pusha
cmp
sbb
mov
jge
and
jp
pop
jle
sub
push
std
dec
xor
xchg
mov
sbb
inc
sbb
test
ret
adc
daa
aas
mov
test
outsb
lods
scas
mov
xor
fsubp
jge
out
sahf
inc
aad
xchg
mov
push
cmpsb
loopne
jbe
dec
mov
or
jg
das
loope
pop
push
or
cwtl
xchg
pop
sub
xchg
push
cmc
scas
jge
xchg
outsl
daa
push
or
jge
mov
jae
lret
pop
cli
fs
outsb
sbb
or
push
btc
or
and
fwait
or
bound
addr16
pop
int3
lret
mov
add
out
xor
stos
xor
loope
cmpsb
rcr
xchg
xor
add
cltd
cltd
scas
repnz
cmpsb
and
jp
shll
jae
mov
arpl
out
xor
popa
inc
jnp
repz
push
adc
leave
push
xchg
stos
dec
test
test
xchg
mov
dec
cwtl
push
pop
push
xlat
dec
mov
mov
int
cmp
ss
xchg
icebp
faddl
or
les
pop
aaa
movsb
adc
mov
lcall
wbinvd
push
sub
adc
jle
pop
sbb
mov
call
in
gs
mov
push
push
jmp
pop
loopne
out
mov
leave
push
mov
dec
out
adc
push
outsl
mov
test
lods
jmp
adc
push
fimuls
imul
push
adc
pushf
push
pop
push
jge
dec
mov
std
stos
arpl
pusha
out
sbb
scas
mov
pop
push
dec
xchg
jo
out
sub
in
add
int3
or
gs
aad
push
andl
fdivrs
cmc
addb
shrl
les
outsb
dec
push
inc
add
push
adc
jecxz
cmpb
cltd
sub
out
test
lods
jge
stos
call
mov
jne
fcomps
int
iret
adc
lcall
clc
sbb
inc
dec
or
jge
je
sti
mov
lock
add
xorb
mov
push
adc
xchg
push
xchg
push
stos
das
push
mov
jmp
lods
sbb
outsb
test
xchg
inc
xor
test
adc
dec
dec
lods
mov
xchg
xor
sub
push
sub
pop
push
jns
jo
std
shrl
lock
out
mov
cmc
mov
inc
out
imul
and
call
out
test
inc
adc
mov
pusha
out
jnp
and
pop
sbb
hlt
sub
lods
pop
add
shrd
mov
add
pop
mov
aam
mov
add
inc
mov
mov
call
pop
out
xchg
loopne
in
cmp
aad
insl
mov
mov
int3
dec
xor
es
add
or
cmc
pop
jp
pushf
subl
jae
cld
mov
mov
dec
sbb
push
jo
sub
rorb
loopne
sub
xchg
adc
or
jge
or
repnz
and
and
fnstenv
lret
subb
mov
xchg
aas
insb
add
test
fildll
push
xchg
cmpsb
repnz
cmp
sbb
adcl
pushf
andl
mov
insb
mov
and
scas
imul
or
cmpsl
addl
fsubs
fildl
int3
jne
dec
out
loop
mov
bound
jle
mov
sbb
jbe
mov
fisubl
mov
dec
pop
push
mov
out
les
lret
iret
rclb
movsb
jae
sahf
push
fwait
mov
lcall
shll
out
cli
popa
pop
sub
std
or
mov
push
jno
sub
or
not
subb
ret
addr16
and
push
push
sbb
loopne
in
fsubrl
jo
ljmp
mov
lcall
insl
mov
repnz
out
jmp
adc
xchg
or
stos
jno
push
push
mov
ss
movsl
sahf
mov
bound
pop
rorl
imul
mov
jmp
pop
filds
je
push
pop
cmp
mov
xchg
inc
andb
test
jge
cmpsb
repnz
mov
lods
icebp
mov
adc
pop
ret
mov
lcall
mov
xchg
in
movsl
adc
sbb
shll
xor
mov
sbb
push
gs
push
iret
xor
cmpsl
pop
stos
imul
loopne
and
xchg
push
mov
sbb
mov
and
add
inc
fs
dec
sahf
push
sub
jno
test
adc
cmpsl
cmpsb
lret
push
dec
jp
adc
int
or
pop
push
cmp
in
add
inc
push
cmpsl
and
push
repz
jmp
inc
mov
inc
ds
out
or
pop
ret
dec
mov
icebp
dec
push
rcrb
je
pop
mov
mov
adc
pop
add
lods
pop
cmpsl
aad
shll
pop
pop
mov
pop
sbb
roll
xor
jl
leave
pop
or
insb
andl
jp
addl
andb
sub
das
jb
cs
pop
sbb
dec
cld
shll
idivl
cmp
pop
mov
lea
sar
and
cmpl
repz
sub
adc
fucomp
jmp
es
pusha
adc
xor
sbbl
into
icebp
sbb
xchg
jp
push
les
popf
xor
and
nop
adc
jecxz
gs
mov
dec
or
jno
roll
idivb
xlat
sub
jg
mov
je
or
adc
add
mov
dec
repz
jl
or
adc
ds
jg
jnp
fisubrs
or
mov
mov
insl
jne
add
ljmp
std
xor
rol
out
popf
fsubl
fcomip
mov
js
test
mov
ja
inc
cmp
xor
negl
outsb
hlt
in
xchg
stc
pop
mov
or
jl
stos
mov
cmp
ss
xchg
push
hlt
stos
mov
test
sub
add
adc
jb
cmp
clc
mov
cmpsl
and
mov
lock
js
pusha
xor
into
mov
cmp
lret
and
or
xor
cltd
aaa
in
rcrb
xchg
ficoml
pop
mov
push
and
lock
push
test
imul
dec
mov
push
mov
int3
xchg
ja
jle
test
cmp
jmp
adc
movb
out
jno
dec
fisubl
pop
dec
adc
push
or
hlt
dec
dec
int
xlat
mov
inc
sarl
into
movsl
sahf
in
mov
mov
jne
and
jmp
loop
insl
frstor
lods
or
cmc
push
fstps
and
imul
jg
xor
pop
add
ds
enter
fs
add
cmp
sub
inc
pop
xor
dec
aam
xchg
lret
gs
xchg
dec
dec
adc
or
inc
push
adc
and
cmp
aas
dec
cmc
mov
jne
pop
std
fldcw
fucomp
ss
ficoml
cli
mov
subb
jno
bnd
cmp
sub
and
cmp
mov
mov
xor
cltd
mov
in
inc
shlb
cs
mov
pop
pop
rcrb
add
test
push
dec
mov
adc
pop
lahf
popa
ret
adc
cmpl
or
lret
lret
jge
add
push
test
fidivl
pop
jge
jb
push
and
xchg
movsb
push
cmp
movsl
dec
loop
and
dec
out
pop
add
andl
out
sub
fstpl
xlat
stos
fbld
popf
inc
sub
push
xchg
fwait
clc
das
iret
jnp
mov
xchg
test
cmp
xchg
mov
movb
mov
lret
out
lret
cmpsb
push
test
xchg
in
and
mov
cmp
cmp
mov
jp
sub
fmulp
jns
or
js
cmp
adc
lea
aam
loope
xchg
mov
sub
xchg
les
add
xor
jle
jbe
stos
rorb
xchg
bound
mov
fs
dec
repz
adcb
xchg
sahf
lea
xchg
popa
sbb
scas
xor
and
test
popf
lret
mov
xchg
sbb
and
dec
cmp
fcoml
incb
cmpsl
pop
repnz
xchg
mov
mov
daa
jo
ror
imul
mov
testl
push
ss
add
dec
mov
ret
cli
fcoms
stc
adc
fldt
add
fdivl
push
or
mov
xchg
int
xchg
inc
ret
repz
shlb
push
xor
js
cmp
mov
cltd
das
cmp
xor
movsb
repnz
loope
and
push
mov
div
jnp
pop
pop
pusha
jb
sub
fists
or
jmp
in
jb
mov
jg
pop
sub
scas
push
mov
push
dec
pop
pushw
mov
xchg
in
je
inc
pop
aaa
icebp
push
cmc
int
inc
lock
sub
dec
rolb
xchg
cmc
mov
pop
xchg
cmp
mov
mov
movsl
or
jb
ljmp
jnp
jge
sbb
daa
cltd
xor
pusha
jno
test
jl
add
dec
push
add
data16
bound
inc
loope
repnz
mov
cmpsl
inc
dec
jbe
lcall
push
popa
fs
rep
jmp
lods
xchg
jo
jg
or
sub
pop
add
leave
repnz
inc
shl
es
sbb
test
mov
and
les
push
rcrl
push
sub
loopne
xchg
in
pop
popf
push
jmp
repnz
sbb
mov
dec
pushf
inc
mov
sahf
movsl
mov
dec
adc
stos
aad
xchg
pop
cmovb
lods
add
push
push
sub
add
pop
cmp
pop
add
pushf
push
add
jmp
imul
sti
push
arpl
test
sub
push
lods
stc
decb
fildl
mov
aaa
push
xchg
call
out
pop
or
inc
sbb
mov
pop
bound
inc
xor
out
xor
mov
inc
shr
and
repz
dec
rcl
hlt
dec
or
and
rcrb
cmc
rorl
jbe
cmpsb
gs
mov
call
lods
lcall
mov
js
jns
gs
dec
mov
fisubl
push
inc
leave
fmull
pusha
test
leave
pop
mov
inc
xor
pop
fbstp
mov
jae
mov
mov
sbb
pop
xlat
adc
stos
cmp
insb
cli
push
in
ss
xor
arpl
inc
popf
mov
sub
pop
mov
mov
xchg
scas
in
ret
lahf
lret
call
cwtl
mov
outsb
jae
fmull
mov
jno
sarb
mov
add
sahf
cmp
test
lods
mov
push
div
jp
sub
push
dec
iret
push
or
push
push
sub
stos
push
insb
lea
cmp
add
push
or
pushf
sbb
dec
add
popa
push
cmpb
cltd
adc
push
mov
or
cli
adc
pop
daa
xchg
inc
jb
dec
sub
dec
insb
lods
hlt
push
inc
ret
in
sbb
jmp
ds
jo
arpl
mov
imull
popa
fwait
cli
stos
out
ret
pop
or
pop
aam
pop
fwait
mov
lods
shl
cmc
std
mov
dec
inc
movsl
mov
insl
cli
cld
jle
ret
in
call
push
test
pop
popa
stos
dec
lcall
out
outsl
jge
js
sahf
pusha
lock
scas
push
mov
pushf
jecxz
addr16
jb
push
cmp
lods
add
pop
mov
mov
cmpsb
fcomi
jl
je
aas
add
cmp
xorb
xor
cld
iret
or
cmp
aas
inc
movsl
sub
idivb
push
cmpl
stc
in
inc
scas
add
add
push
sub
pop
mov
push
leave
push
add
ss
jle
push
mov
aaa
sub
or
cmp
test
sbb
mov
adc
rorl
push
cmp
ss
push
or
cmpsb
icebp
mov
popa
mov
or
xchg
push
cmp
or
iret
mov
push
jle
ror
sub
cmp
ret
roll
pop
in
cli
mov
mov
imul
add
lds
sbb
jnp
cmp
push
jne
sahf
jnp
addr16
hlt
test
mov
scas
jp
movsb
push
test
and
pop
jnp
cmp
sub
nop
cmp
cmpsl
icebp
test
sbb
or
ss
pmulhuw
mov
outsl
ss
jg
push
mov
jae
push
adc
mov
push
imul
scas
popf
xchg
push
repnz
pop
and
in
mov
xlat
test
ret
rcrl
jno
mov
xchg
and
and
shl
push
mov
imul
cmp
sbb
xlat
mov
mov
cmp
rcll
push
iret
push
xlat
fs
mov
dec
xchg
mov
sti
mov
xor
orb
xchg
fisttps
ja
jnp
lock
rcr
sbb
push
inc
mov
scas
iret
orl
jp
mov
push
sbb
push
adc
mov
or
int
xor
jo
dec
inc
mov
sti
sub
lea
insl
arpl
jmp
inc
aaa
dec
mov
pop
repz
je
cmpsl
jnp
je
jecxz
sub
xorb
jl
mov
sbb
fcomi
addl
push
sbb
sbb
cmpb
cmp
xchg
jb
aad
cmp
mov
sbb
es
adc
rorb
and
stc
mov
add
push
aas
lods
or
adc
pop
cmp
sbb
das
cmp
das
xchg
test
mov
xor
rcl
into
popf
sti
jbe
sarb
sub
push
je
dec
sbb
ja
stc
ja
js
and
xorb
pop
cmp
or
xchg
xchg
jnp
mov
xor
cmc
sbb
push
mov
adc
mov
subb
inc
pushf
int3
pop
imul
push
sub
roll
scas
or
jle
sahf
mov
and
or
mov
test
sbb
push
xchg
movsb
outsl
enter
inc
mov
dec
cmp
mov
mov
xchg
push
movsb
or
rcr
xchg
mov
jmp
js
sbb
jecxz
mov
sbb
stos
inc
or
ja
mov
cmc
lea
pop
inc
loop
xchg
sub
loop
push
fcmovu
aad
pop
push
pop
mov
insl
xchg
mov
lahf
adc
or
jmp
sbb
xchg
jbe
pop
repz
xor
notl
into
push
cmp
rclb
cmp
push
js
lea
jno
popf
int3
mov
test
pop
and
movsb
repz
push
imul
push
cwtl
xorl
test
fimull
sbb
pop
jno
sahf
jmp
test
and
insb
test
dec
mov
out
cmpsl
shrb
pop
push
je
cmpsl
xlat
sti
fisttpl
shrb
je
xchg
push
push
fucomip
fs
fistl
xchg
stos
sub
out
jno
push
cld
fcmovu
adc
add
and
sub
mov
addr16
hlt
cmp
pop
mov
icebp
test
pop
adc
xor
pop
mov
push
mov
js
sbb
andl
adc
inc
push
pop
lahf
mov
repz
les
dec
mov
pshufw
in
loope
mov
push
mov
lods
xor
and
mov
and
inc
aam
or
lds
mov
out
fldenv
scas
rep
fnstenv
jb
cmp
xor
push
push
lcall
fldln2
and
pushf
push
mov
fsubl
mov
push
sarb
cmp
sahf
mov
and
mov
in
dec
es
fdivs
sbb
mov
xchg
mov
loop
test
mov
inc
fs
dec
xor
lea
lret
dec
out
push
mov
jl
inc
bound
and
xor
pop
add
outsb
lret
ss
je
xor
and
rcll
leave
aaa
mov
hlt
push
and
dec
inc
insb
popaw
imul
pop
in
addr16
dec
mov
lds
add
enter
adc
fdivs
fcoms
push
incb
lahf
push
jno
mov
pop
mov
scas
push
cmp
andl
adc
out
fmull
jp
ljmp
jnp
inc
push
cmp
ja
outsb
xchg
sbb
inc
pop
cmp
push
add
les
cltd
push
mov
jmp
fxam
loopne
leave
pop
push
std
rorl
popw
xor
orl
lods
cmpsl
mov
mov
movl
sahf
mov
sub
outsb
les
mov
mov
insb
pop
adc
xchg
clc
mov
xchg
aad
add
scas
sarl
cld
inc
and
push
pop
iret
pop
hlt
ret
add
xor
je
test
adc
into
je
cmp
push
xor
push
je
stos
fists
ds
stos
lcall
mov
enter
dec
sub
push
xor
ds
xor
lea
xchg
cli
sub
xchg
sbb
push
movsb
inc
dec
cmp
sbb
sbb
pop
outsb
clc
push
sub
mov
filds
dec
jb
inc
fistl
in
and
lcall
pop
pop
popf
xchg
and
xchg
in
jl
inc
std
sbb
pop
jns
das
cmovg
mov
xchg
pop
and
frstor
nop
jae
incb
jbe
andl
xor
push
xor
dec
imulb
mov
push
xchg
xchg
cmpl
movl
mov
addr16
dec
aad
jns
xchg
sbb
xchg
cmp
loop
sahf
push
nop
imul
out
incb
jp
push
lcall
pop
jbe
push
shl
cmc
cmpsb
in
and
popl
mov
and
pushf
gs
in
clc
mov
xchg
into
stos
sahf
ja
fiaddl
inc
in
popf
sub
push
xchg
sub
mov
mov
fldcw
sbb
scas
xchg
sub
jge
pop
sarb
jno
dec
fstpt
in
push
cmp
cmp
aam
std
adc
inc
movsb
xchg
sbb
push
dec
mov
repz
je
fimull
stc
rclb
lcall
cmp
dec
sub
xchg
push
inc
out
dec
mov
sahf
call
pop
rcll
test
xor
add
popf
sti
mov
xchg
mov
or
mov
fs
mov
cld
addr16
jb
imul
outsl
scas
or
loope
aas
pop
in
sub
outsl
adc
jle
loopne
insb
sbb
and
insl
adc
push
and
push
jno
pop
hlt
or
and
lret
mov
push
scas
popf
mov
clc
in
mov
push
sti
call
push
hlt
add
cs
mov
jb
inc
incb
and
push
xchg
pop
test
aam
mov
xor
cmp
iret
dec
stos
sbb
dec
movl
cli
aam
insb
imul
es
sub
and
rclb
in
orl
jge
push
xchg
pop
orl
outsl
mov
dec
fwait
sub
pop
xchg
jp
mov
setl
clc
mov
stos
loop
cmp
mov
std
out
pop
sbb
test
dec
popf
adc
ss
mov
xchg
fwait
imul
and
xor
ljmp
mov
pop
or
out
sbb
fnstcw
or
dec
or
inc
mov
repz
into
std
mov
or
cmpsl
mov
in
push
xchg
sub
mov
mov
sub
adcl
add
repnz
push
inc
push
xchg
std
cmp
arpl
cmpsl
xor
xchg
negl
sarb
mov
mov
sub
pushf
sbb
ficoms
mov
cmp
xchg
cmpsl
inc
jmp
and
loopne
and
addb
pushf
rcrl
cmp
push
rcrl
das
hlt
lret
adc
push
rclb
inc
adc
pop
xor
out
adc
jge
xorl
ljmp
push
aas
adc
leave
hlt
popa
add
mov
fstpt
out
sub
scas
mov
sbb
push
xchg
sub
aad
mov
adcl
outsb
pop
push
mov
pop
ja
mov
and
push
pop
shrb
ficoms
and
dec
add
stos
jns
mov
int3
leave
xor
jne
daa
out
fidivs
roll
or
xchg
inc
outsl
in
mov
jg
shll
inc
in
push
je
pushw
sahf
lods
xchg
jo,pt
lds
loopne
imul
stos
lock
sbb
jo
sub
or
sub
push
push
or
fstps
jo
sahf
mul
bound
shrl
mov
mov
sub
inc
out
cmpsb
mov
jne
cmp
test
adc
adc
nop
int
outsl
subps
push
out
lds
out
jbe
btc
pushw
cld
xlat
pop
cmp
add
cltd
cld
inc
jno
mov
mov
adc
iret
xor
cltd
test
int
mov
stos
fwait
or
sub
mov
inc
lcall
bound
and
aas
ja
xor
pop
lcall
push
mov
sub
stos
shrl
hlt
adc
lret
ljmp
mov
leave
dec
jno
mov
ljmp
pop
push
mov
lret
clc
mov
sub
and
aas
outsl
sbbb
and
rorl
sub
int
fisubs
lret
sub
push
mov
and
jp
dec
shr
testl
clc
mov
ljmp
lods
push
cmp
lds
popa
divb
jmp
cmp
and
mov
push
xchg
fmull
cmp
test
fnstsw
or
cmp
nop
dec
in
int3
add
cltd
or
fwait
aam
aaa
xor
jg
loope
subb
cmp
test
mov
add
or
inc
int3
mov
jb
cld
dec
xchg
sbb
cmp
scas
lahf
fmuls
sbb
jp
ljmp
roll
stos
dec
sbb
call
sahf
push
xor
jne
inc
push
insl
push
sbb
das
add
mov
lret
cmp
stos
mov
addr16
lock
sub
addl
dec
out
adc
pop
popf
aas
fldl
mov
jne
enter
jmp
cwtl
pop
cmp
addl
popf
int3
clc
cmp
xor
mov
cs
pop
push
cmp
mov
sub
das
out
mov
dec
scas
in
sub
ja
add
outsb
insl
aad
add
addw
jb
pop
in
jo
or
jmp
adc
xorl
in
or
and
fxch
imul
cltd
sbb
jne
dec
push
jmp
lea
fcmovnu
loope
lods
int
mov
data16
dec
xor
subps
shl
orl
js
mov
xor
xor
inc
sub
out
cli
shll
xor
sahf
cmpl
sahf
fistl
sbb
sar
outsb
push
and
shr
inc
jo
fldcw
ret
jl
or
and
cmp
sub
imul
mov
popf
inc
sub
and
xor
dec
lret
sub
ret
mov
and
sub
cltd
mov
cmp
xchg
jnp
add
bound
into
jae
adc
inc
in
repz
imulb
inc
mov
enter
mov
negl
cmpsl
inc
sbb
mov
out
pop
push
stos
push
aaa
sbb
daa
sbb
adcb
jle
fidivl
mov
pop
je
mov
xchg
mov
loop
sub
out
and
xor
ljmp
sbb
data16
ja
and
cmc
nop
cltd
mov
pop
call
or
inc
stc
ret
subl
jbe
fidivl
and
std
out
xchg
jge
cld
push
sub
lock
in
mov
mov
adc
lds
dec
push
call
iret
repnz
les
xor
cwtl
sbb
pop
push
lea
idivl
xlat
dec
int
rcrl
sbb
pop
mov
out
push
mov
imull
stc
and
and
cmp
lds
adc
add
jo
push
xchg
jnp
push
adc
dec
push
or
mov
movsl
mov
pop
sbb
push
xor
mov
cmpsl
mov
js
adc
jmp
xor
fcmovu
push
inc
fs
mov
or
dec
push
sbb
adc
mov
in
or
push
mov
daa
push
mov
test
sub
xor
jo
inc
in
pop
or
push
cld
jmp
je
pushf
mov
sbb
sub
scas
call
subb
mov
mov
cmp
scas
cmp
data16
inc
aad
pop
imul
inc
out
add
gs
mov
je
jl
cmp
repz
inc
jnp
cmp
xlat
out
gs
in
xchg
dec
xor
jno
jne
cmp
lock
dec
pop
les
mov
lea
or
jl
xchg
mov
ja
faddp
pop
mov
outsb
mov
mov
repz
aam
sbb
jmp
xchg
mov
arpl
sub
mov
mov
push
mov
scas
test
dec
mov
mov
filds
push
in
push
jp
mov
sub
pop
aad
dec
jno
push
cmp
imul
add
cwtl
jno
mov
mov
sub
adc
fsubs
xchg
or
jle
roll
std
outsl
dec
nop
stc
fwait
and
rcl
push
pop
and
inc
jnp
ljmp
lea
push
ss
insb
mov
sbb
imul
adc
dec
jle
lock
fnsave
or
jecxz
pop
mov
daa
sbb
mov
and
push
jbe
mov
mov
pop
jecxz
jl
sbb
mov
aas
and
loope
xor
sti
imull
xchg
or
add
ficoms
sahf
lods
shll
jns
inc
mov
outsl
xchg
lea
pusha
xchg
iret
mov
push
mov
mov
test
push
mov
mov
or
in
jp
stos
cmpsl
sub
dec
jae
push
scas
fadd
repnz
pushf
inc
dec
lock
and
mov
and
pop
push
pushf
and
sahf
jge
mov
or
pop
fs
xlat
xchg
jl
cmp
arpl
sub
loop
movsb
in
add
sbb
jp
std
out
cmc
rolb
push
adc
fisubl
adc
add
jo
pusha
xchg
mov
jle
lds
negl
push
pop
cmp
mov
xchg
mov
dec
or
in
out
fs
es
fwait
push
clc
dec
pushf
xor
push
mov
push
imul
inc
inc
and
add
mov
mov
mov
sub
cmp
repnz
inc
push
and
cmpsl
or
dec
int
adc
adc
fimull
insl
mov
jl
add
cmc
jbe
ja
inc
lea
ljmp
mov
cmp
movsb
daa
pop
mov
mov
cld
sub
shrl
lds
test
mov
push
cmp
je
cli
ret
shl
icebp
jle
test
movsl
push
xchg
ds
int
pop
jae
std
rclb
insb
sub
sahf
bound
mov
jl
addr16
mov
hlt
test
lret
jb
clc
repnz
stos
shlb
dec
pop
push
imul
fwait
push
mov
ss
fmull
shrl
mov
lds
rcll
pop
dec
push
aaa
div
divb
jbe
dec
daa
hlt
pop
xor
and
pop
aad
es
mov
jmp
mov
wbinvd
fstl
jp
cmpb
das
mov
jnp
cwtl
lea
sbb
in
loopne
jbe
adc
cmp
aas
mov
cltd
loopne
xchg
fistpll
lcall
int3
fsubl
cmp
or
add
repnz
cmp
mov
or
adc
movsl
sub
pop
addr16
and
cwtl
test
lea
and
rcll
sti
pop
xchg
pop
or
mov
das
shlb
push
mov
cmpsl
clc
call
out
mov
push
xchg
int
gs
add
loope
cmp
pop
mov
xchg
xchg
pusha
arpl
icebp
fiaddl
inc
in
sbb
in
mov
push
mov
push
rolb
sbb
out
scas
pop
mov
fnstenv
frstor
sbbl
adc
mov
and
sbb
lods
imul
and
mov
les
push
cltd
xchg
cmc
into
pop
fcmovnb
and
sbb
loope
and
mull
fcoml
ljmp
xor
in
xchg
mov
xor
repz
jge
popa
inc
inc
dec
sub
xor
insl
das
jp
lods
mov
ss
cmp
sbb
mov
mov
cmp
pop
inc
loopne
lret
push
out
lock
sub
mov
cmp
sar
mov
outsb
les
adc
int
inc
test
pop
daa
and
push
xor
dec
jmp
decl
inc
mov
nop
scas
sbb
dec
adcl
stos
nop
movsl
adc
push
subps
js
jbe
call
jns
nop
dec
clc
push
out
cli
cli
push
fwait
sub
pop
jle
mov
leave
jns
pop
adc
push
outsb
dec
loop
js
jne
int
sbb
or
adc
int3
repz
outsl
add
in
or
scas
and
jmp
in
xchg
das
pop
and
jb
test
insl
adc
notb
lret
or
imul
loop
mov
adc
add
jne
pusha
movsb
inc
lcall
inc
pop
xor
imul
sbb
adc
push
dec
loope
dec
adc
push
movsb
add
xchg
fistpll
jb
rcr
mov
vmovaps
xchg
arpl
cld
jl
xchg
xlat
or
push
xchg
cmp
jg
shr
or
xchg
add
push
scas
push
loopne
push
rorl
rcll
pusha
test
icebp
pop
mov
shll
sbb
dec
fsubrp
rcr
mov
lods
ljmp
sahf
pop
cld
or
sub
call
add
add
aas
mov
inc
lret
push
es
pop
roll
add
xchg
sub
inc
push
xor
fcomp
jae
mov
fisttpll
adc
or
insl
pop
roll
sti
mov
mov
insb
dec
xchg
sub
jg
cltd
jmp
jge
bound
lahf
dec
cmp
mov
add
add
xor
repnz
push
add
lret
pop
xor
push
adc
jae
mov
and
js
xlat
call
inc
inc
fcmovnu
inc
in
inc
mov
adc
aad
test
movsb
fs
dec
xor
aas
in
inc
inc
fsubrl
xor
mov
push
pop
pushf
imul
enter
into
bound
pop
and
lret
loope
sbb
jge
aam
push
jno
inc
xor
ret
sbb
xchg
xor
sarb
sbb
jae
xor
or
sbb
adc
lock
sbb
repnz
out
insl
int
jne
cmp
jne
adc
outsb
repz
or
mov
cmc
sub
cmc
test
add
test
dec
shlb
sbbb
std
rcrl
xchg
adc
sub
mov
movsb
in
jg
dec
imul
adc
jle
jp
and
adc
leave
xchg
pop
loop
adc
mov
or
out
jnp
pusha
incl
addr16
mov
push
pop
xchg
repnz
mov
push
sub
addr16
sub
cmp
rcrl
cmovg
pop
xor
mov
out
scas
mov
ss
loopne
ret
pop
popa
pop
movsl
ds
push
ss
push
adc
into
xor
fstl
in
dec
adc
sub
in
jne
arpl
lock
xor
and
adc
rep
pusha
addr16
adc
jae
mov
inc
and
fisubl
xchg
out
imul
inc
daa
nop
aad
fiaddl
scas
lcall
mov
dec
idivb
sbb
jno
sub
and
dec
push
repnz
push
adc
mov
inc
mov
dec
lret
insb
xchg
sbb
pusha
fadd
sbb
mov
sbb
pop
sbb
std
inc
cmp
jg
orb
xor
xor
sbb
push
pushf
adc
dec
lret
insb
push
outsb
pop
mov
jmp
pop
xchg
lods
xchg
mov
cmp
clc
fsubl
ret
cmpsb
popf
adc
in
hlt
icebp
push
jbe
loop
hlt
dec
fcmovbe
sbb
cli
or
mov
sahf
addr16
xchg
lock
pusha
dec
movsb
dec
testb
jbe,pn
cmpsb
hlt
jne
cmpsb
cltd
in
sbb
je
shlb
lret
dec
incb
lods
jmp
out
or
loop
mov
notb
lcall
daa
mov
hlt
push
sub
movsb
mov
mov
stc
mov
dec
xchg
inc
addr16
xchg
jecxz
mov
cs
test
cltd
fwait
js
inc
pop
shrl
pop
xor
imul
inc
adc
push
adc
sbb
gs
xchg
pop
xor
icebp
loop
lods
lret
sbb
scas
xlat
decl
xlat
inc
mov
or
mov
icebp
pop
int
fs
mov
inc
sbb
mov
add
mov
sbb
dec
mov
imulb
and
cmp
cmp
jp
xor
cmpb
mov
fsubrl
cmp
and
rclb
and
mov
jo
or
cmpb
in
xlat
jne
jne
les
pushf
adcb
cld
dec
insl
insl
lahf
sbb
mov
dec
dec
and
xchg
dec
pop
sub
std
cld
adc
xchg
out
enter
fdivrl
out
jle
negb
testl
lock
jle
mov
shl
adc
pop
add
xor
ret
inc
nop
jno
xabort
or
lock
push
rcll
jo
iret
test
pushf
cmp
xchg
cmp
sub
stos
es
fdivrp
jmp
fs
push
andl
jbe
pop
inc
jecxz
or
lds
inc
daa
imul
ds
inc
ds
jg
scas
jge
add
nop
lds
xchg
jecxz
and
push
sub
push
and
mov
ljmp
inc
xchg
lds
stos
nop
cmc
sub
imul
push
popa
sbb
inc
pop
dec
stc
and
testb
testl
and
mov
cli
sub
or
int3
outsl
enter
lcall
in
shrb
test
jge
rorl
mov
inc
fcmovne
dec
xchg
loopne
xor
roll
xchg
and
andb
jne
sti
sbb
pop
imul
mov
pop
jge
leave
stos
cltd
inc
dec
inc
adcb
lds
xchg
mov
sub
imul
cmp
dec
jnp
xchg
mov
cli
fistpll
adc
or
dec
dec
pop
ror
jo
mov
lods
pop
sbb
icebp
idiv
xlat
pushw
movsl
cltd
fwait
int3
lods
ffree
outsl
sub
jno
shufps
sbbb
add
leave
mov
repz
or
scas
int3
adc
cmc
add
stos
pushf
int3
mov
sbb
push
pop
dec
mov
das
cmp
cmp
cwtl
loope
dec
cmpsb
dec
lret
stc
mov
lret
test
pop
push
call
jecxz
add
fsubrs
ds
jne
test
popa
in
cmc
fcoms
jge
mov
xchg
inc
test
pmovmskb
mov
outsb
mov
cmp
inc
jns
jge
add
fisubrs
mov
push
sub
scas
idivl
mov
arpl
dec
daa
in
sub
pushf
dec
push
mov
frstor
mov
js
xchg
jnp
push
xchg
inc
outsl
scas
lock
popa
js
pop
mov
cld
out
jb
aad
stos
mov
in
fstl
pop
stos
inc
nop
dec
jle
testb
xor
push
xchg
cmc
gs
sahf
imul
sub
adc
filds
add
sub
stc
sahf
pop
add
sub
push
or
or
jb
or
adc
pop
aam
push
mov
test
std
push
insl
push
mov
sbb
rclb
push
test
mov
sti
imul
push
pop
and
pusha
mov
nop
jmp
cwtl
mov
ds
sbb
jmp
sub
xor
jmp
scas
sbb
testb
pushf
lret
ret
push
xchg
loop
cmp
dec
or
dec
sbb
adcl
fdivl
filds
sub
and
stc
jle
mov
sahf
je
loopne
bound
xchg
mov
cmp
push
xchg
bound
pushf
dec
out
jle
sbb
das
lahf
jae
rorb
sbb
and
std
jbe
add
dec
mov
gs
pop
xor
in
mov
push
insl
jl
mov
jecxz
push
pusha
jl
test
add
icebp
add
aam
out
scas
dec
mov
fistps
cmp
loopne
pop
xor
ret
rclb
out
outsl
insb
jecxz
jns
ficoml
and
and
cltd
icebp
fwait
dec
jl
cmpsb
fsubrs
inc
add
mov
sub
idivb
mov
add
lods
xor
push
inc
outsb
xchg
push
inc
sbb
outsl
enter
sub
xchg
ret
sbb
fisubrs
mov
in
fiaddl
jo
and
dec
push
addr16
cmp
and
mov
jecxz
xchg
xchg
xcrypt-cbc
cmpsl
xchg
incl
in
mov
hlt
in
lahf
outsl
push
or
ljmp
in
inc
leave
push
repz
pop
movsb
jb
lahf
sbb
dec
mov
fisttps
push
sbb
adcb
adc
outsb
mov
push
insl
es
sub
sbb
adc
jb
es
imul
cmpsl
arpl
ss
insb
dec
clc
in
mov
cld
sub
test
scas
jb
aad
out
lods
pop
popa
fcmovu
sbb
xchg
pop
repnz
mov
js
pushf
fstpl
jp
pop
dec
mov
scas
mov
loope
pop
dec
cmp
add
mov
fdivrs
leave
pop
cs
fldt
incl
mov
xchg
sbb
jne
adc
stos
mov
jmp
pop
in
jp
ljmp
mov
xchg
push
js
imul
loope
fs
cld
repz
aam
mov
sbb
rolb
jle
push
fwait
cmpl
mov
adc
leave
adc
sub
imul
movsl
ja
or
sbb
jmp
mov
pop
dec
data16
and
cld
les
push
mov
das
es
add
testl
lock
adc
pop
push
add
jae
dec
jl
dec
mov
dec
jne
lahf
fsubrl
xchg
clc
sub
addr16
xor
push
jmp
xchg
mov
jl
and
push
lock
je
jno
loop
lahf
decl
mov
mov
inc
xor
mov
shl
push
xchg
lret
mov
nop
pop
add
and
imul
xchg
xor
gs
in
repnz
lods
mov
std
fmuls
rcrb
in
mov
and
push
mov
inc
enter
out
push
cs
stos
es
add
fists
mov
or
scas
push
xchg
mov
out
add
mov
lds
stos
sub
push
mov
mov
dec
fbstp
cmp
push
js
mov
adc
dec
dec
call
pop
xchg
mov
cmovb
lahf
jbe
xchg
lahf
es
jne
sub
insb
movsb
sbbl
mov
push
cld
ret
and
sbb
dec
cltd
mov
push
pop
jae
out
dec
and
jo
mov
shl
enter
sbb
jnp
insl
int3
fsubs
jl
lahf
mov
xchg
push
fildll
xchg
jp
inc
sahf
fwait
arpl
stos
xorl
loop
enter
xor
dec
pushf
push
cmp
pop
fldl
negl
mov
outsl
inc
shrl
or
jp
pop
mov
daa
test
ljmp
int3
es
push
lcall
xor
imul
jb
adc
fdivrs
das
or
out
mov
mov
fisubl
push
and
aam
popa
push
lock
or
dec
jne
mov
aad
shlb
arpl
and
fsubrl
test
ja
or
sahf
cmp
adc
cmp
movb
dec
xchg
xor
mov
cwtl
dec
xchg
in
enter
out
push
add
das
aam
mov
cmp
cmp
adc
xlat
push
add
int3
clc
cmpsb
sbb
test
jae
pushf
in
or
xchg
and
stos
or
popf
mov
insl
pop
jne
lcall
das
xorl
dec
push
or
mov
mov
dec
pop
mov
cmpb
or
negl
jnp
lret
adc
jns
in
jmp
sub
dec
xchg
sbb
jmp
dec
xchg
xchg
mov
cmp
aaa
xchg
fidivl
inc
and
ret
pop
pop
or
test
dec
push
in
popf
mov
xchg
adcb
sbbb
sub
mov
je
pushf
test
and
cmp
sbb
mov
xor
adc
into
push
js
cmpsl
hlt
xor
nop
out
and
lock
sub
dec
lds
cwtl
mov
rorl
lds
xor
cltd
lods
dec
sbb
pusha
add
in
pop
in
js
cli
pop
mov
mov
pushf
push
cmpsb
mov
adc
xchg
mov
in
adc
stos
mov
jg
les
cmpb
mov
vpackuswb
ret
pop
cmpb
js
jbe
psrlq
mov
test
ja
cld
add
mov
mov
pushf
orb
dec
pushf
xor
enter
mov
aas
jae
test
test
dec
add
xor
pop
pop
cmp
mov
xchg
out
fadd
lret
sub
push
rcll
or
xor
insb
test
movsl
jge,pt
imul
sbb
dec
inc
jns
js
pop
push
mov
mov
mov
inc
loopne
push
mov
mov
pop
xor
push
sub
push
mov
and
mov
mov
xchg
push
iret
dec
mov
loope
add
xor
in
mov
inc
aad
dec
std
and
imul
cmpsl
push
or
dec
mov
inc
pop
push
add
sub
and
js
movsl
and
add
push
or
movsb
jmp
xchg
test
xor
lret
loope
stc
aam
jne
addb
push
pop
cmp
mov
in
add
lcall
fucomp
adc
push
pop
test
test
cmp
mov
add
cmpsb
xor
or
stos
stc
inc
sbb
push
ja
das
lods
push
dec
decb
out
pop
jns
sbb
pop
push
insl
pop
dec
out
fstl
jmp
andl
std
andb
jl
add
xchg
enter
fs
lea
dec
add
hlt
enter
mov
repz
hlt
mov
test
pop
or
cmp
mov
cmp
xor
and
sahf
btr
dec
cmc
xchg
data16
xor
jo
insb
mov
sti
push
add
cli
xchg
test
xor
dec
and
cltd
je
mov
scas
in
scas
lea
les
xor
jbe
adc
xor
aad
push
repnz
mov
sub
bound
push
ret
fdivs
inc
add
mov
sub
jmp
lret
sbb
stos
add
movsb
fadd
cld
mov
xor
lret
leave
and
xchg
fadds
mov
mov
pop
mov
outsl
dec
ret
xor
loope
xchg
out
mov
sti
lcall
fcomps
add
mov
xlat
mov
and
test
int3
sbb
gs
nop
or
daa
mov
shlb
add
mov
in
and
sub
fidivrl
clc
or
dec
and
sti
mov
ja
xchg
or
mov
mov
dec
int
xchg
mov
cmc
icebp
push
orl
push
cli
test
add
sub
cli
lret
xchg
cmp
inc
add
fcoml
in
int
sbb
rol
and
movsb
adc
push
add
mov
xor
inc
jno
lahf
ret
xchg
adc
pop
test
loope
mov
aas
out
xor
mov
les
or
jbe
mov
push
inc
imull
sbb
jns
stos
inc
lea
popf
inc
mov
xchg
addr16
adc
ss
mov
loopne
or
sub
ror
xchg
std
mov
addr16
outsb
ret
ficomps
push
je
mov
or
mov
repnz
jmp
and
inc
or
sub
xchg
cmp
mov
mov
xchg
test
mov
add
inc
mov
or
das
xor
pop
xlat
pop
and
dec
fwait
movsb
dec
iret
add
repnz
inc
mov
cs
mov
stos
shl
jbe
push
inc
push
and
add
fs
or
pushf
stc
push
cli
jp
imul
clc
jmp
scas
dec
xor
das
movsb
decl
or
and
xchg
and
cmp
push
inc
pop
js
push
scas
test
inc
fidivrs
hlt
repnz
add
mov
sub
icebp
sub
mov
sub
mov
jl
cltd
pop
adc
xor
pop
negb
lods
push
mov
int3
adc
add
sbbb
xchg
test
mov
inc
test
xchg
inc
pop
ss
dec
xor
cmp
je
adc
jp
arpl
mov
xor
sbbl
dec
test
jae
push
or
push
outsb
cmp
lahf
sahf
fwait
cmc
aam
das
xchg
sub
popf
cmp
xchg
aaa
push
loopne
mov
sarl
mul
dec
jmp
mov
fwait
add
ficoms
push
addb
les
loopne
daa
xchg
jno
xchg
or
or
clc
cmc
or
or
xchg
dec
jmp
into
popf
enter
xchg
leave
xchg
jle
ss
in
out
sbb
loop
ret
jbe
push
test
shlb
fimull
xorl
push
jl
shl
xchg
lea
out
xchg
push
ljmp
adc
daa
adc
repnz
jns
pop
adc
out
xchg
fldcw
frstor
mov
or
pusha
aas
mov
mov
mov
push
les
mov
in
and
in
xchg
mov
notb
outsl
add
mov
inc
notb
into
lret
pop
push
lahf
clc
push
data16
xchg
mov
adc
call
push
out
ja
mov
das
idivb
or
add
push
mov
mov
mov
loope
adc
pop
lret
sar
sets
out
adc
jl
jmp
in
or
pusha
ja
xor
repz
and
clc
repnz
jge
jb
test
push
adc
enter
jecxz
cmp
mov
shr
outsb
insb
pop
inc
shlb
or
jo
jecxz
sbb
cmp
push
mov
cmp
loope
addb
loopne
aas
pop
mov
sub
push
mov
inc
xchg
mov
mov
fcomps
xchg
rorl
fucom
or
jo
mov
outsb
or
ret
mov
aam
andps
scas
aam
int3
insb
cmp
inc
scas
enter
in
xlat
jns
loopne
jle
jecxz
mov
xchg
clc
loopne
add
jl
mov
mov
inc
mov
sub
mov
pop
testb
out
xor
stos
out
sub
mov
popf
pushf
jecxz
ss
dec
adc
cmp
push
sub
subb
enter
inc
movsb
popa
and
lods
jae
stc
or
dec
xchg
out
dec
push
cs
push
mov
aad
jg
xchg
jmp
pop
insl
push
cmp
xchg
pop
stc
mov
mov
jno
test
jecxz
lea
test
notb
mov
popf
daa
cmp
adc
out
xchg
out
or
lods
in
adc
add
mov
clc
nop
stc
push
push
xchg
pop
push
mov
sbb
push
repnz
lock
push
insl
sbb
jae
std
mov
call
inc
pop
sbb
dec
push
cmp
shrl
or
aas
and
test
jae
mov
ror
outsb
inc
testb
inc
cmpb
xor
ficoml
mov
ret
js
divps
pop
repz
dec
cld
bnd
cmp
mov
mov
sub
aad
test
test
mov
mov
adc
in
fs
push
xchg
xor
pop
xor
mov
fistpll
ret
jb
pushl
es
les
icebp
xchg
push
ret
icebp
push
cmp
adc
xchg
adc
loop
and
dec
jno
mov
add
and
stos
nop
or
out
xchg
xchg
mov
aas
push
in
rorl
pop
jg
icebp
ja
jb
sbbb
pushf
test
jl
xchg
xchg
imul
dec
movsb
cwtl
xchg
ljmp
fidivs
mov
out
jne
jge
pusha
out
inc
push
jecxz
test
out
bound
pop
imul
xor
jne
insb
add
jle
push
imul
adc
jbe
outsb
push
cmp
ja,pn
pop
incb
in
ss
jno
sub
sub
mov
and
test
mov
adc
inc
lods
mov
fistpll
inc
xor
scas
lret
pusha
jmp
cmpsb
int
adc
or
shlb
jl
fs
jecxz
mov
push
nop
mov
xchg
aad
call
lahf
aad
fildll
repz
dec
shlb
test
clc
adc
jno
ficomps
rclb
cmp
arpl
jne
pop
inc
cmpsl
mov
lods
in
sbb
jecxz
or
fcoms
cmpsl
inc
test
enter
test
ljmp
add
ret
jmp
push
dec
jmp
pop
pop
sub
out
ds
icebp
imul
xorl
sub
jo
sub
inc
push
xchg
ds
add
add
lret
das
dec
cmpsl
rorb
adc
or
cmp
sbb
je
test
sahf
and
ret
mov
cmovno
inc
xor
add
subl
pop
arpl
adc
lcall
ret
mov
rolb
pop
loope
insb
mov
and
imul
mov
sbb
inc
aaa
push
mov
mov
lret
cmp
push
mov
lret
aam
pop
sub
mov
mov
sub
popf
adc
loop
and
xchg
push
je
lods
pop
ljmp
repnz
or
pop
mov
lret
test
xchg
xchg
sub
cmp
jne
or
in
push
and
jns
ja
dec
jge
inc
inc
repnz
outsl
fucom
xchg
add
mov
mov
jg
or
dec
jl
idivb
pop
sub
faddl
or
jp
stos
sub
push
imul
cmp
cmp
mov
mov
push
cmp
add
add
orl
pop
xor
inc
jecxz
xchg
call
popa
pop
sbb
push
mov
mov
mov
shrl
ljmp
mov
fstps
je
xchg
lea
repnz
and
lods
imul
mov
cli
mov
inc
addr16
sbb
cmp
inc
js
adc
xchg
daa
je
inc
or
mov
and
aas
cmp
xor
push
enter
and
fwait
subl
aad
sbb
pop
mov
lds
jmp
add
and
push
jb
jg
pop
mov
adc
repz
scas
pushf
add
cmp
test
mov
or
mov
ret
xchg
dec
mov
and
insl
jne
xor
outsl
mov
mov
mov
les
aaa
inc
cmp
pop
jno
add
hlt
outsl
pop
inc
fld
repnz
push
outsb
pop
pop
lods
jp
repz
or
in
loopne
lods
je
jb
jp
jle
pop
mov
aaa
outsl
arpl
adc
dec
pusha
inc
inc
in
mov
dec
sub
adc
lcall
aam
mov
cmpsl
push
mov
popf
mov
lock
sub
mov
xchg
into
xchg
cmc
xor
jns
push
cmp
jmp
pop
imul
faddl
cmpsb
or
mov
add
push
dec
outsb
sub
ds
rolb
mov
mov
jno
in
insl
xlat
shrl
test
jbe
test
mov
dec
outsl
pusha
ds
repz
and
pushf
push
adc
lock
or
push
mov
stc
inc
dec
cmpsb
push
cmp
stos
pushf
inc
outsb
sub
aaa
push
adcl
xchg
push
loop
je
out
lcall
sub
insb
cs
inc
pop
jle
push
pop
xor
add
push
int3
cli
dec
fwait
je
jg
es
jbe
pusha
push
xchg
lret
test
add
in
movsb
push
push
pop
cmp
test
or
push
mov
mov
and
mov
sub
insb
bound
pusha
or
loop
popa
mov
loop
sbb
push
sbb
and
jb
adcl
stos
push
outsl
push
pop
jle
or
jecxz
and
xchg
rcl
cmp
das
dec
pop
mov
leave
mov
add
push
out
or
cmp
call
scas
sahf
cmp
divb
je
or
js
xchg
ret
js
movsl
add
lret
jne
adc
leave
jge
sbb
pop
js
add
pusha
fldcw
dec
imul
push
inc
xchg
push
gs
fs
adcb
xchg
pop
and
jecxz
sbb
jb
inc
or
add
sbb
cmp
jbe
cmpsl
pop
int3
daa
mov
out
stos
pop
fistpl
cmp
mov
mov
fsubp
hlt
movd
mov
ret
sbb
orb
test
mov
bound
popf
pop
pop
cmc
push
lahf
shr
add
mov
jb
daa
xchg
lcall
xchg
mov
and
sub
popa
jne
inc
sub
aad
pop
jno
scas
lods
adc
sub
cwtl
int
ds
sub
or
mov
xchg
mov
shr
jg
dec
inc
jno
mov
xchg
mov
or
cmpb
dec
mov
pop
into
out
lods
icebp
jle
in
jbe
ds
sahf
mov
pop
lcall
fisttpll
xchg
adc
insl
cs
mov
sub
mov
mov
cltd
rcrl
les
stos
insb
mov
out
cmp
iret
nop
repz
call
fadd
mov
cmp
xor
fnstcw
pop
push
push
jge
ds
jbe
incl
mov
aam
fstps
sbb
add
fdivl
aaa
int
mov
std
cmp
xor
andb
cltd
bound
andnps
cmpsl
cmp
outsb
adc
fcoms
subb
das
ja
sub
fiaddl
pop
imulb
xchg
mov
sbb
xchg
mov
and
pop
cwtl
inc
jecxz
aad
pop
cmp
into
enter
shlb
adc
fldcw
adc
negl
and
lahf
movsb
data16
cmp
ljmp
mov
cmp
cmp
mov
rolb
sub
dec
scas
js
mov
jmp
pushf
xor
push
movsl
lods
imul
nop
dec
int
or
cmp
sarl
xchg
cmpsl
pop
jle
and
dec
mov
mov
sahf
call
and
sbb
cmp
into
dec
push
mov
movsl
cmpsb
dec
loopne
jo
call
mov
cmp
and
popf
es
or
loope
dec
ljmp
inc
mov
pop
pop
outsl
mov
xchg
jae
or
pop
sahf
and
test
mov
test
iret
push
sarb
jp
mov
enter
ret
adc
mov
push
inc
out
dec
int
pop
rcll
das
mov
dec
sub
aad
aam
pop
inc
mov
sub
cli
dec
and
cmpsl
sti
cmpsb
jbe
cmp
cltd
rcll
push
ds
test
mov
adc
test
adc
cmpsl
inc
stos
in
cmc
rorb
mov
xchg
ret
sub
push
mov
in
ja
les
mov
or
xor
inc
data16
not
xchg
adc
add
xor
cltd
cmp
mov
pop
push
push
insb
shrl
andl
and
scas
mov
push
lds
dec
sub
jmp
jne
lock
mov
in
sub
rcl
mov
or
fists
or
push
sub
dec
pop
xchg
adc
xchg
pop
sarb
and
ret
xor
inc
movsb
je
add
jbe
dec
xchg
jne,pn
lods
push
pop
dec
cmpb
cmp
adc
test
and
popf
in
rolb
xchg
shl
sbb
or
mov
mov
into
aad
mov
sbb
fadds
lock
add
enter
add
rol
jle
push
pop
jge
push
mov
icebp
adc
adc
in
cltd
mov
xchg
xchg
aad
mov
cmp
int3
cmp
out
sbb
loopne
lock
lock
push
pop
outsl
lret
inc
pop
movsb
dec
not
das
sub
jl,pn
fxch
idivl
imul
rol
out
frstor
sub
lods
hlt
sub
jl
aas
lahf
dec
sub
movb
divl
mov
pop
jmp
nop
mov
cmp
jb
adc
push
fistl
mov
js
cwtl
and
pop
sub
cmp
xchg
cmp
inc
ljmp
in
fsin
pop
loope
popf
das
std
pop
push
or
sbb
ret
test
clc
xchg
aam
lcall
adc
xchg
insb
iret
dec
bts
fsubr
jl
mov
pop
js
arpl
push
sti
cmpsb
aas
adc
sub
jle
out
pop
sarb
inc
mov
and
mov
sub
xor
mov
cmp
popa
and
and
cwtl
mov
jne
push
or
mov
orl
adc
cli
fsubrs
add
xorl
push
or
popf
add
outsl
cwtl
out
pop
jbe
cmp
jae
rcr
mov
pop
jae
popf
sub
dec
inc
or
cmp
push
inc
xchg
in
jns
sti
fs
and
lock
std
mov
mov
data16
jne
movsb
std
push
adc
rcr
fimull
cmp
mov
sbb
cmpsl
push
jnp
sbb
scas
push
xor
xchg
xor
lds
ja
test
das
cmpsb
mov
rcrl
jge
stc
or
mov
mov
push
or
adc
or
cwtl
pop
lret
xor
inc
adc
jno
jbe
pop
inc
push
lods
dec
inc
call
jmp
mov
scas
mov
scas
lahf
xchg
nop
push
and
push
jbe
add
sahf
test
in
dec
pop
test
lds
mov
cmp
shrl
and
mov
push
jo
xor
sub
xor
cld
idivb
das
out
nop
push
popf
loopne
fnsave
pop
jne
adc
mov
scas
cwtl
insb
sbb
jecxz
xor
roll
incl
insb
fs
mov
xor
stos
push
mov
jecxz
pop
rclb
jge
fiadds
fstpl
bound
call
sbb
push
mov
stc
test
out
pop
adc
jp
fidivs
daa
sbb
lahf
js
adc
sbb
and
in
dec
jno
mov
shl
cltd
call
cmpsb
push
inc
scas
int
cmp
push
mov
js
and
movb
xchg
jbe
pop
popa
orb
les
jnp
in
or
loop
lock
mov
sub
jmp
fstpt
jl
cmp
adc
cmpl
fwait
add
cmpsl
xchg
xchg
clc
cld
xor
popa
jno
jno
mov
popf
outsb
jb
sub
into
push
add
fisttps
cmpsl
or
sbb
sub
rol
in
inc
stc
imul
push
adc
cltd
popa
int
into
imul
xchg
dec
inc
xor
cltd
add
fwait
sub
push
popa
mov
popf
mov
adc
xor
xor
cmc
fimull
sti
int
addb
inc
and
idivl
jo
pop
daa
or
xor
dec
cmp
fs
dec
jbe
pusha
subb
xchg
cmp
xlat
imul
jne
inc
arpl
sarb
mov
cmpsb
cmp
pop
or
adcl
xchg
test
out
sub
jmp
mov
cs
pop
aad
pop
add
ret
in
cmpsl
sbb
or
adc
fsts
push
or
mov
mov
test
sub
mov
cwtl
dec
daa
imul
loopne
cwtl
lahf
in
add
fiadds
mov
push
jnp
out
popa
int
pop
push
mov
leave
push
mov
or
lahf
fsubrs
fmuls
mov
scas
xor
mov
mov
jo
ljmp
sub
inc
stos
or
xchg
mov
cmc
call
es
mov
sbb
sub
inc
or
mov
lret
push
jo
jg
xchg
rclb
leave
in
ret
cmp
or
cltd
mov
outsl
cmp
jo
pop
adc
xchg
cmp
jge
scas
push
xor
push
jmp
movsl
cmp
or
push
jne
cmp
adc
fs
fwait
lds
shll
fists
sti
cvtdq2ps
cmpsl
xchg
dec
push
andl
inc
push
or
mov
aaa
jle
mov
pop
push
pop
aam
cmpsb
cld
sub
jmp
aaa
mov
mov
mov
ret
loopne
clc
push
aaa
insb
negb
dec
out
adc
pop
sub
sahf
insb
mov
xor
dec
xchg
shrl
sahf
enter
or
or
adcb
loope
inc
ffreep
or
cs
pop
cmp
movsb
shrl
sbb
fwait
test
pop
xor
fsubr
fs
push
jbe
das
jo
inc
shlb
push
ret
xchg
xchg
shl
sbb
gs
test
punpckhbw
movsl
inc
xor
dec
data16
fwait
int
movsb
jno
mov
out
mov
mov
mov
push
test
push
pop
cmp
cld
cmc
sub
sub
aaa
dec
les
int3
and
lcall
into
in
test
add
leave
fdivs
arpl
aam
movsb
psubsb
stos
jnp
ljmp
xchg
cltd
lods
shrl
insb
mov
or
push
mov
xor
ss
jo
jbe
push
mov
dec
lock
test
xchg
inc
dec
sbb
sub
in
fsubrl
sbb
cmp
ret
xchg
out
cmpsl
std
frstor
scas
rcr
xchg
int
adc
lcall
inc
xchg
and
lods
lock
mov
pop
sub
or
and
inc
popa
adc
js
sarl
xchg
fisttpl
xchg
pop
push
lahf
adc
outsb
mov
cli
xor
xchg
nop
push
out
test
pop
in
imul
mov
enter
stos
xchg
shl
and
xchg
mov
sbb
push
lret
mov
push
js
enter
mov
aam
iret
inc
mov
out
sbb
test
hlt
dec
mov
aaa
mov
cmp
leave
inc
pop
xor
xchg
mov
pop
arpl
fs
dec
lock
push
jle
xor
push
mov
and
imul
jno
test
cmpsl
cmp
adc
ja
mov
inc
lds
inc
dec
push
pop
jne
lods
enter
orl
loop
xor
mov
je
add
hlt
push
mov
sti
sub
dec
test
dec
mov
inc
mov
jmp
xlat
test
xor
push
jecxz
inc
fld
dec
adc
rcr
mov
jecxz
daa
addr16
nop
cmp
add
pop
scas
call
loop
xor
scas
sahf
test
push
js
mov
lock
fiadds
loopne
es
ds
mov
sbb
aaa
pop
jmp
out
into
push
adcl
filds
push
fcmovb
out
out
pop
imul
mov
dec
add
out
xor
jno
arpl
in
and
stos
bound
scas
call
cmpps
imul
andl
cltd
popf
mov
mov
sub
jge
pop
scas
add
xchg
push
daa
xor
xor
adc
sub
outsb
dec
adc
xchg
leave
stos
lea
in
fmull
ss
out
add
in
xchg
bound
stc
int
push
mov
jbe
lock
pop
push
adc
cltd
mov
mov
and
lock
mov
jecxz,pt
xchg
stos
xor
sbb
gs
inc
push
mov
mov
push
sub
shlb
rcll
sbb
mov
in
jg
repz
cmpsb
and
xchg
push
xchg
outsl
punpckhwd
rol
aas
push
lods
xchg
jo
lods
out
xlat
push
sub
xlat
daa
movsl
jle
arpl
aas
mov
icebp
divl
ficoml
xchg
imulb
popa
int3
imul
jp
push
fdivl
fldcw
int
pop
adc
or
cmp
enter
or
lds
mov
or
lret
xchg
lea
adc
in
mov
movhlps
dec
ljmp
push
rcrl
sbb
ret
fstpl
test
test
outsl
push
mov
mov
push
test
or
int
hlt
loopne
jno
sub
mov
pop
inc
popa
jae
pop
add
dec
pop
adc
clc
sbb
imul
bound
pop
ret
sub
jbe
adc
jne
sbb
iret
fdiv
scas
ret
test
push
xor
loop
out
pop
add
ss
out
mov
repnz
cmc
test
fidivl
sbb
jnp
add
arpl
sahf
mov
inc
or
jnp
call
jmp
mov
xchg
xchg
cpuid
inc
cmp
mov
inc
testb
push
mov
jne
leave
addl
outsl
jnp
push
or
inc
sub
dec
mov
cmp
adc
shl
push
xchg
xchg
xchg
fstpt
sub
fisttpll
mov
fstpt
mov
sahf
xor
mov
sti
in
insb
xchg
dec
jge
loop
aam
jno
inc
inc
imul
dec
js
bnd
inc
add
mov
out
and
scas
adc
ret
jno
in
or
les
push
xchg
into
outsl
jmp
inc
sti
sahf
sub
jg
or
gs
idivb
push
jge
inc
je
test
fadds
fwait
mov
inc
push
and
adc
pop
inc
push
rorl
pusha
dec
lret
push
popa
pop
xchg
stc
push
ds
add
or
sarl
mov
sub
and
lock
in
faddp
push
jno
inc
xorb
aas
inc
les
rol
inc
xchg
cmc
adc
addr16
cmp
ss
out
cs
jl
rorb
pop
stc
lock
mov
xchg
or
cltd
test
pop
insl
iret
xlat
push
test
xchg
out
cs
mov
cmpsl
jecxz
adc
mov
in
cs
dec
andl
das
ret
cli
pop
gs
jae
adc
scas
sub
sbbl
mov
push
add
rorb
roll
push
in
mov
inc
push
mov
stos
into
add
dec
jns
popa
xorl
xchg
popf
in
enter
or
test
mov
aaa
adc
jmp
out
cmp
cli
sti
pusha
add
xor
add
sub
adc
fstps
lret
adcl
jl
add
sbbl
jle
and
jo
out
and
subl
repz
fs
js
ds
dec
outsl
sub
fisubs
and
das
push
inc
mov
cltd
adcb
jno
sbb
mov
addr16
or
pusha
cmc
aaa
dec
loopne
xchg
pop
xor
mov
jb
fisttpl
xchg
dec
cmc
jmp
mov
jnp
repz
movsl
inc
in
fwait
dec
inc
insl
add
push
scas
push
mov
rcll
in
mov
adc
dec
in
pop
jb
fstps
push
roll
in
ret
cld
xor
adcb
jp
sbb
jbe
movsb
testl
dec
iret
stos
pop
mov
in
rcrb
push
sbb
mov
js
adc
push
aas
mov
xchg
sti
and
cmpsb
arpl
push
mov
shlb
ljmp
adc
add
fistpl
les
xchg
jle
mov
clc
mov
mov
jg
mov
xchg
push
xchg
popa
jbe
imul
sbb
popf
and
push
lcall
xor
loop
jne
movl
dec
addb
pop
call
pop
cmp
add
jl
jbe
mov
adc
inc
pop
je
push
out
push
dec
stos
inc
sbbb
imul
inc
stos
in
dec
pop
mov
rep
roll
sub
rclb
arpl
dec
inc
or
and
popf
sub
into
aam
or
dec
je
idivl
fiaddl
inc
leave
fxch
shll
push
lahf
dec
push
icebp
mov
popa
xor
imul
stos
mov
test
dec
insl
call
push
ss
and
xor
mov
ds
mov
push
push
in
pusha
pusha
je
sbb
jl
sub
js
or
mov
scas
xchg
gs
mov
outsl
xor
popf
es
ret
fs
mov
pop
dec
or
arpl
mov
pop
cmc
rorb
xchg
out
mov
dec
insl
jmp
pop
test
iret
push
insl
sbb
fsubrs
sar
mov
popf
add
mov
push
mov
test
push
lods
test
xor
jl
rolb
and
mov
iret
js
fsub
je
mov
in
dec
js
xchg
ret
mov
jno
add
jecxz
push
aam
rcrb
mov
jne
rorb
fstps
push
inc
cmpl
xchg
sahf
dec
sbb
mov
int
test
outsl
pop
push
cwtl
out
into
test
dec
cmp
shlb
xchg
lods
or
push
ficoml
xchg
adc
mov
aam
or
div
leave
cmp
and
es
loop
cmpsl
pop
push
add
sbb
stos
aaa
out
out
mov
bound
data16
jns
inc
push
and
arpl
sahf
lods
hlt
lahf
push
js
jbe
cmc
xor
or
out
rolb
popa
push
pop
or
mov
mov
bound
xor
outsl
adc
sbb
or
mov
arpl
imul
loop
or
out
loop
sbbl
xor
cwtl
fistpll
xor
data16
inc
std
dec
iret
adcl
loope
adc
mov
adc
aam
inc
and
pop
mov
in
shrl
clc
stc
ret
lahf
xor
lret
cmp
jp
xchg
add
into
sarb
into
out
dec
btc
pop
out
cmpsb
and
ja
cmp
mov
leave
je
inc
xchg
fwait
dec
pusha
sub
push
sub
dec
xchg
out
mov
cmp
in
mov
adc
imul
arpl
sub
adc
stos
cmpsl
jmp
inc
test
adc
cmp
aam
cld
pop
cwtl
mov
jno
mov
inc
adcb
push
fsubrl
mov
pop
and
or
insl
mov
ret
aas
popa
pushl
mov
pop
pop
xor
loopne
xchg
addr16
jle
xchg
psubusw
mov
outsl
or
out
sbb
mov
push
xorl
stos
push
inc
xchg
pop
out
gs
mov
dec
fstp
sub
push
ljmp
pop
imul
sbb
xchg
stc
mov
inc
sub
push
sbb
mov
cmp
xor
mov
call
pop
pop
inc
xor
add
iret
jb
push
xlat
sbb
or
aas
mov
sub
add
aad
cmp
cmp
mov
xor
aas
sbb
dec
rcr
sub
lods
es
push
cmp
lahf
jge
mov
xchg
pop
pop
lcall
cs
push
dec
mov
icebp
insb
pop
aaa
subb
test
cmp
in
es
out
popf
je
mov
ret
adc
xchg
dec
in
xchg
les
sub
in
inc
insl
lret
cli
shll
mov
es
mov
adc
test
roll
adc
movsb
dec
in
push
pop
xchg
add
and
arpl
jmp
insb
xchg
sarl
pop
add
dec
mov
shll
dec
push
sub
mov
ss
in
cmc
mov
lods
xchg
sarl
into
iret
lods
mov
xchg
addr16
sub
jnp
hlt
lea
outsl
xchg
mov
lea
out
test
rclb
jb
daa
stos
or
pop
mov
not
cli
ficoml
adc
and
adc
lea
ja
sbb
jo
adc
test
mov
pushf
in
int
mov
dec
cmpsb
mov
out
sbb
adc
loope
daa
in
inc
ss
sbb
pop
les
mov
mov
popf
imull
aaa
aad
xor
aas
lret
daa
mov
gs
fsubrp
mov
lods
and
test
xor
mov
lea
dec
mov
pop
xor
hlt
xchg
jge
sbb
pop
xchg
movsb
push
sbb
movsb
inc
inc
lret
in
jmp
or
mov
out
int
fst
cltd
mov
xadd
in
shll
in
or
je
pop
test
sahf
mov
add
scas
arpl
cmp
jb
and
add
icebp
xor
aaa
cmp
cld
add
sbb
push
imul
mov
popf
outsl
rclb
push
lret
cmpsl
and
ss
popa
cli
xchg
jp
jno
daa
mov
xchg
push
push
loopne
clc
push
and
sbb
and
mov
mov
or
cmp
hlt
movsl
cmc
ret
lods
sbb
dec
mov
sub
sbb
fnstsw
lock
jecxz,pt
cmp
pop
mov
push
dec
mov
push
adc
enter
fcomip
test
mov
frstor
fimull
cmc
and
scas
scas
jecxz
inc
outsb
jg
mov
enter
out
mov
sahf
mov
lods
mov
or
mov
test
pop
cmp
jmp
subl
inc
push
or
xor
cli
and
add
arpl
or
adc
dec
loope
fwait
adc
push
xlat
mov
lcall
stos
xchg
pusha
cmpsl
pop
mov
out
insl
add
add
outsl
cmp
inc
test
sbb
mov
pop
fwait
jns
adc
dec
movsl
lock
xchg
aaa
mov
jns
xorl
pop
out
xchg
jp
cli
sahf
movl
in
jge
shl
sub
stc
adc
cmovae
andb
cld
sub
arpl
pop
mov
mov
adc
hlt
jge
imul
in
les
push
popf
fidivrs
cltd
add
ljmp
or
and
hlt
daa
pop
dec
iret
addb
orb
sahf
pop
fbstp
add
outsb
inc
das
xchg
ret
cmp
test
push
leave
sub
dec
xorl
add
mov
stos
push
mov
stc
clc
sub
out
mov
dec
test
aas
int3
xor
push
pushf
push
mov
leave
cmp
popf
lods
sti
fldcw
ficompl
stc
pusha
push
jg
sbb
push
sbb
scas
push
jns
push
cld
pop
stos
pop
arpl
es
call
out
mov
fisubl
dec
push
mov
mov
jle
dec
cmp
sbb
inc
stos
stos
iret
shlb
sub
mov
in
jbe
mov
loope
bound
xchg
scas
into
scas
pop
mov
dec
sbb
addr16
sahf
testl
pop
lcall
popa
mov
into
sbb
cs
mov
push
xchg
and
icebp
scas
mov
sti
mov
les
pop
ficoms
lret
icebp
lret
bound
mov
and
or
push
movsb
push
inc
hlt
es
mov
mov
fs
scas
mov
inc
mov
inc
mov
loopne
aas
jo
in
out
xchg
rorb
pop
and
flds
lret
adc
jb
or
xchg
lods
pushf
shl
fwait
ds
jp
ljmp
cs
jmp
stos
movsl
test
cmp
test
xchg
adc
and
inc
mov
loop
push
jmp
mov
dec
xchg
cld
into
xor
cwtl
aam
call
mov
pushf
mov
fcomps
mov
pop
push
cltd
jno
xor
scas
jb
rorb
mov
iret
pop
clc
adc
sbb
pop
movsb
test
fs
fstp
stos
scas
stos
pop
aad
iret
insl
mov
xchg
js
jbe
push
sbb
cmp
push
xchg
push
fs
push
push
pop
push
push
lahf
mov
inc
adc
loope
daa
mov
cmpsl
and
int
outsb
out
addr16
jmp
aad
out
dec
ficoml
fsubl
int
mov
adc
lea
outsl
lods
sub
test
fwait
cmp
out
mov
or
pop
popa
xchg
xchg
js
lea
fadds
add
push
sti
pop
js
shrb
or
mov
data16
pop
jne
loopne
movsb
adc
mov
in
jge
pusha
ficoml
cmp
inc
pop
out
dec
and
jecxz
pop
add
daa
push
cmpsl
les
das
cmc
punpckhdq
cs
lcall
and
dec
push
dec
jae
xor
dec
addr16
or
push
clc
sub
jae
cmpsb
int3
inc
add
mov
int3
out
pop
dec
inc
mov
pushf
cld
xlat
ss
popw
test
sub
daa
xor
fcompl
test
xchg
xchg
mov
mov
or
or
in
sbb
and
add
cmp
cmp
inc
add
push
lahf
loop
pop
sbb
mov
sti
inc
cmp
sub
cmp
pop
ret
mov
cs
rorb
pop
rcrb
jp
ljmp
or
test
and
in
cmpsl
pop
jle
nop
dec
out
mov
fistl
lds
jo
mov
and
cmp
jae
xchg
mov
repnz
pop
stos
pop
and
arpl
fldt
stos
in
lock
pushf
jae
xchg
cld
push
inc
inc
pop
in
mov
xor
sbb
cmpsb
bound
sbb
iret
dec
and
mov
xchg
push
jns
pusha
arpl
xor
lds
jl
push
in
cmp
sbb
addr16
add
shll
pusha
ret
iret
mov
icebp
adc
outsl
arpl
insl
or
xor
or
mov
flds
xor
lods
adcl
add
in
daa
and
dec
cwtl
repz
add
lea
mov
xlat
cmp
xor
and
fldenv
xor
sub
xchg
insb
pop
xchg
cltd
dec
aad
popf
scas
or
sbb
out
cmpb
in
inc
cmpsl
push
jecxz
push
data16
in
adc
daa
jge
imul
unpckhps
push
push
rcrl
push
std
or
int
or
fs
pushf
mov
pop
int3
stos
in
sub
mov
jmp
mov
push
call
cmp
xor
loopne
in
adc
and
outsb
sub
sbb
shlb
cltd
push
add
pop
sahf
lods
xchg
xlat
xchg
dec
fidivl
icebp
pop
jge
xchg
icebp
pop
mov
push
aad
jno
lods
jno
lods
test
jb
orl
ja
adc
movsl
sub
and
inc
imul
pop
push
cmp
test
negl
xchg
push
cmovs
lock
mov
add
call
add
scas
sub
scas
jb
jmp
fisubrl
mov
push
xlat
mov
xchg
jbe
sub
pop
jnp
ret
sbbl
sbb
dec
mov
sbb
adc
adc
inc
cmp
loop
xor
cwtl
addr16
loope
sub
sbb
les
sub
dec
pop
push
and
or
sub
push
js
pop
aad
xchg
adc
fnstsw
shrl
push
cmpsl
rcr
mov
imul
push
cld
cmp
clc
out
adc
mov
push
mov
sti
popa
sbb
test
push
rcl
or
jae
jbe
push
call
repnz
movsbl
iret
sbb
adc
cmpb
dec
arpl
enter
inc
mov
movsl
sub
insb
imul
mov
enter
test
and
iret
xchg
xchg
push
mov
inc
jo
gs
jb
mov
int
data16
shrl
fcomp
repnz
out
sub
sub
add
test
lods
xchg
lods
and
jne
dec
imul
mov
pop
push
call
push
mov
push
enter
dec
mov
pusha
cmp
lock
pmaxsw
in
jg
cli
lock
and
jecxz
test
jo
xor
shll
xchg
lods
add
fsubs
dec
pushl
loope
jg
out
jae
xor
inc
sbb
shll
lahf
ret
leave
movsb
jnp
sbb
fisubrl
rorl
daa
sarb
das
outsl
add
mov
inc
cmc
jl
and
xor
std
fwait
aad
adc
mov
add
aas
push
lret
stc
test
lods
cmp
pop
and
mov
push
and
sbb
stos
stos
jle
pop
jne
sar
fists
dec
sbb
repnz
mov
iret
pop
and
push
out
mov
test
mov
mov
pop
fisubrs
loopne
xchg
adc
jno
test
int
push
test
push
sbb
loop
loop
mov
dec
push
inc
pop
jbe
addr16
dec
pop
jl
or
das
loop
hlt
mov
inc
lret
push
addr16
bound
outsl
jno
les
and
xchg
jge
out
lods
inc
popa
das
mov
jbe
stos
xlat
mov
ds
loopne
dec
fsubr
push
inc
inc
sbb
jge
ss
xor
in
lea
mov
xchg
repz
test
data16
insb
inc
js
std
fldl
adc
dec
loopne
xchg
scas
fst
and
cmp
pushf
inc
or
push
ljmp
inc
inc
out
sti
sbb
iret
xor
jl
lahf
call
lock
shrb
add
or
mov
test
jecxz
addr16
andb
inc
inc
pop
pop
jl
pop
cmpsb
test
call
aam
pop
fstl
lods
and
out
aaa
and
cmp
and
sbb
cmp
jns
xchg
xchg
push
ret
dec
jae
scas
leave
int3
cmp
push
shr
jo
fs
jae
mov
sub
mov
into
les
add
ret
addr16
fisttpll
xor
aam
add
testb
mov
pop
or
neg
pusha
or
push
in
cmp
push
and
cmp
xor
incb
add
xchg
les
adc
sbb
int3
mov
fldenv
push
mov
or
xorl
mov
mov
sbb
mov
incl
pusha
dec
add
cld
ja
arpl
pushf
loop
daa
pop
mov
xchg
in
in
mov
cmpsb
insl
push
scas
addb
jg
pop
lahf
cmp
movsl
push
dec
fsub
aas
mov
ret
call
inc
dec
mov
push
xchg
xchg
pop
inc
push
bound
adc
mov
push
test
dec
sti
jecxz
fisttps
dec
jge
cmp
arpl
dec
jecxz
test
rcrl
sarb
xor
dec
andb
mov
pop
add
jbe
xchg
mov
ja
jge
cmp
dec
int
or
add
jbe
mov
out
mov
or
cmp
fnsave
popa
and
leave
cli
fdivp
adc
xorb
imul
movsl
and
ds
cli
cmpsl
inc
xchg
sarl
popf
out
jb
add
push
pop
in
div
push
push
in
std
aaa
push
mov
je
testb
pusha
dec
adc
xchg
arpl
ss
add
call
pop
dec
sub
fs
nop
imul
bound
pop
sub
imul
push
pop
xlat
ficomps
insl
mov
call
sbb
xchg
sahf
int3
mov
push
sub
pop
mov
addr16
fs
sub
push
jno
call
inc
into
cmp
sbbl
out
addb
pop
xchg
pop
add
aad
outsb
cmp
add
adc
mov
mov
adc
adc
jmp
out
push
sbb
mov
stos
sbb
xor
jle
aad
bound
fbld
inc
jno
pusha
in
pop
sbb
leave
pusha
icebp
dec
imul
push
xchg
test
fs
jmp
lahf
mov
fldenv
adc
loope
dec
add
test
and
aaa
add
clc
pusha
pop
dec
xchg
rcr
mov
icebp
stos
nop
jnp
cmp
ret
jae
fcomi
sbb
inc
mov
sbb
sub
jae
push
stos
mov
mov
fwait
pushf
jno
mov
xchg
mov
into
pop
dec
mov
inc
in
test
dec
out
cmp
inc
adc
and
les
imul
sarb
push
insb
or
fldl
repnz
mov
clc
jo
icebp
fiadds
jl
sub
jge
scas
cmpsb
mov
pop
jecxz
adc
jl
dec
cli
pop
xor
inc
mov
push
xchg
xor
ds
adc
data16
sub
add
mov
stos
into
add
or
hlt
push
sbb
mov
mov
cmp
in
pop
push
nop
iret
ds
mov
jne
xor
xor
mov
mov
xlat
sub
mov
pop
cmpsl
lds
mov
stos
inc
sub
movsl
loope
fstpl
mov
mov
mov
popa
push
data16
xchg
lods
or
test
cld
js
pop
or
push
mov
xor
push
hlt
dec
inc
xchg
add
aaa
mov
ret
fldcw
jmp
jg
xchg
stos
sahf
or
mov
pop
icebp
mov
dec
sub
sbb
cmp
push
fstl
add
xchg
rolb
in
mov
fsubl
mov
mov
cld
sahf
adc
push
add
sbb
fnstsw
loopne
insl
jg
xlat
lock
cmpsl
call
mov
aad
gs
dec
in
sub
mov
or
mov
sub
and
leave
or
add
sbb
loope
pop
adc
sbb
jbe
jp
es
mov
std
jle
mov
lahf
dec
call
mov
mov
pop
jp
aas
shl
rolb
sahf
flds
mov
mov
icebp
sub
xchg
jle
push
lods
bound
xchg
pop
in
es
mov
xor
sahf
outsl
cmpsb
xchg
or
dec
fidivs
cmpsl
xchg
push
shrl
inc
cmp
loopne
stos
outsl
jge
jl
pop
jmp
test
adc
divb
lcall
ds
aaa
sbb
sub
inc
add
xchg
sub
int
adc
sbb
push
jmp
imul
jecxz
xor
inc
test
addr16
filds
push
pop
cs
ss
push
mov
add
mov
mov
pop
inc
add
adc
movsl
popa
das
incb
xor
imul
lods
mov
roll
pop
jmp
sub
inc
pop
aam
in
xlat
scas
test
lods
adcb
mov
shlb
push
push
pop
loop
add
lret
mov
hlt
cmp
in
aam
and
and
cmp
outsl
test
sub
inc
stc
mov
ja
test
test
sbb
lds
int
and
and
out
mov
lock
movsb
aaa
ja
jp
mov
iret
mov
cmp
adc
aam
insl
andl
xchg
xchg
mov
xchg
dec
xchg
jecxz
add
in
mov
xor
ljmp
je
sbb
dec
mov
rorb
inc
mov
lcall
add
jbe
push
pop
or
lcall
xchg
daa
in
test
in
mov
pop
imulb
addb
mov
sub
dec
enter
dec
jmp
pop
into
xor
mov
or
jmp
movsl
inc
adc
in
cmp
or
ja
fisubl
pop
insl
sub
movsb
and
or
xorl
sbb
push
mov
je
mov
rep
out
idivb
mov
bound
sbb
sub
jmp
shlb
aas
mov
mov
xchg
sahf
fs
shlb
sub
push
adc
pop
mov
push
sbb
mov
sub
or
lods
daa
rol
popa
sub
sub
xchg
imul
icebp
mov
cmp
icebp
cld
jo
cld
mov
and
inc
mov
push
adc
pop
xchg
stos
mov
pop
mov
call
in
ss
pusha
loopne
mov
pushf
sbbl
mov
fmull
inc
xchg
sahf
dec
outsl
inc
daa
imul
or
insl
mov
dec
mov
inc
xchg
or
cmpsb
cmpb
lods
fs
xor
jae
sahf
pop
xlat
mov
mov
lds
add
fbld
inc
inc
lock
lock
lods
push
in
repnz
andl
out
inc
jnp
push
dec
add
mov
repz
rcrl
imul
mov
dec
sub
inc
xchg
mov
scas
das
lds
jne
dec
sub
add
jns
fistpll
pop
sarb
add
or
mov
push
flds
negl
call
xchg
push
daa
mov
jp
sahf
jae
fiaddl
pop
nop
mov
inc
std
ljmp
iret
add
xchg
cmc
or
repz
adc
dec
mov
cmp
pop
aam
pop
int
push
mov
xchg
add
push
dec
xchg
lds
xchg
mov
and
push
dec
popa
popf
mov
pop
push
and
aaa
ret
mov
push
cmpb
ds
sbb
in
test
jae
or
mov
or
push
sbb
inc
mov
lcall
pusha
stc
mov
divl
mov
popa
and
ljmp
je
xchg
adc
mov
cwtl
xchg
jb
mov
icebp
xor
inc
out
outsb
mov
and
dec
lods
lea
adc
or
xchg
inc
negb
loopne
push
ds
push
xor
inc
sub
mov
mov
or
int3
jge
pop
lret
sbb
clc
pushf
nop
into
daa
ret
ret
pushf
sbb
lds
inc
repz
mov
pop
rorl
push
adc
or
mov
negl
in
pop
sub
jae
add
fiaddl
cmp
lcall
outsl
mov
mov
fcompl
imulb
push
cmp
and
call
and
and
je
sbb
sub
ljmp
rorb
mov
dec
add
sahf
mov
lds
dec
xor
sub
cmp
pop
jno
jnp
popw
dec
lods
inc
sbb
cmpsb
jnp
add
xchg
dec
adc
adc
sbb
daa
adc
xchg
pop
sbb
int3
dec
test
sub
dec
sbb
mov
shll
notl
cmpsl
xchg
add
fistpl
jp
cmp
in
int3
lcall
ss
hlt
jge
test
or
fnstcw
fidivrl
in
repnz
daa
cs
iret
xchg
fnstcw
jns
cmp
mov
sub
nop
mov
jnp
mov
lods
pop
adc
pop
adc
cmp
jnp
mov
out
mov
out
hlt
bound
push
mov
cmp
sub
cld
imul
loopne
dec
lods
insb
test
test
push
lods
std
in
jae
dec
mov
aas
add
mov
mov
inc
pop
adc
push
and
xchg
sub
jmp
jl
inc
fldl
insl
inc
push
mov
xchg
xchg
in
test
out
in
add
in
and
std
fs
jns
sbb
movsb
popf
mov
ljmp
jp
js
sbb
or
adc
das
xchg
out
fwait
ds
cwtl
inc
and
in
scas
popa
scas
xchg
inc
bound
jo
mov
outsb
fwait
enter
push
cmp
call
sub
divb
hlt
sti
or
mov
adc
jnp
dec
clc
xchg
xor
push
fiaddl
pop
jnp
leave
adc
in
jae
in
adc
jo
inc
fs
hlt
ljmp
pushf
sahf
push
mov
sti
adc
jmp
inc
jns
shll
jge
add
movsb
div
or
loopne
add
test
xor
and
sti
dec
inc
inc
aas
jmp
jae
or
mov
fldcw
mov
stos
xchg
negb
stos
xchg
pop
loop
jo
xor
pop
jecxz
jns
pop
nop
jp
or
imulb
mov
loop
sub
and
mov
pop
or
movb
sub
or
pop
push
push
lret
enter
mov
cmp
mov
imul
or
imul
cmc
pop
push
and
pop
xor
cltd
mov
inc
arpl
sub
test
push
mov
add
data16
inc
jge
and
mov
test
add
ja
jns
test
xchg
imul
or
rol
fcmovnbe
dec
mov
mov
mov
ret
scas
loopne
and
bound
out
fldt
data16
push
fdivrl
pushf
or
mov
dec
jl
cmp
mov
and
mov
inc
jne
shrl
sub
mov
fcos
cli
pushf
sbb
jo
or
push
sahf
out
in
js
ret
bound
xor
jmp
stos
sub
cmp
fbstp
test
push
cli
loope
fimull
test
lret
push
inc
rol
ljmp
mov
mov
adc
mov
xchg
jne,pt
push
sbb
outsb
pop
fstpl
enter
inc
rorl
pop
data16
sbb
sub
inc
clc
rcll
inc
imul
sbb
in
add
jbe
jp
in
insl
add
inc
pop
ret
fdivs
outsl
leave
adc
adc
push
or
dec
sbb
push
push
mov
inc
cmp
pusha
out
pop
xor
mov
inc
xor
fsts
mov
cmpsb
push
sbb
inc
scas
loope
dec
jg
cmp
stc
imul
mov
cmc
mov
sahf
addl
cmpl
loop
outsl
add
loope
in
loope
mov
mov
decl
dec
jae
xor
fisubrs
lods
loop
ss
test
stc
xor
int
in
dec
add
mov
fistpll
push
and
mov
imul
mov
adc
mov
mov
mov
adc
mov
cmp
out
incb
and
push
cmpb
push
je
sub
jl
push
sbb
data16
pop
pop
mov
stos
imul
mov
and
fildl
mov
or
in
mov
or
scas
mov
mov
fnstsw
cs
icebp
pop
fwait
gs
mov
cld
mov
and
sub
cmp
cmp
es
jp
in
jno
mov
sub
in
and
and
add
xchg
cmp
xchg
lahf
push
cmp
test
in
pop
cld
test
popa
stos
out
test
nop
lret
xor
rcrl
cs
les
mov
or
daa
mov
xorl
xor
or
enter
test
mov
test
lods
sbb
mov
aad
dec
mov
pop
jns
leave
movsl
frstor
mov
mov
test
pop
in
rcrl
clc
aas
andl
pop
ds
ret
movsl
sub
ja
mov
in
push
scas
add
idivl
sub
into
xchg
imul
rolb
ds
flds
std
or
push
add
adc
pop
leave
fwait
sbb
out
and
pop
cwtl
mov
lods
jb
pop
add
mov
sbb
dec
xor
out
inc
cmpsl
jecxz
idivl
or
cltd
adc
mov
and
dec
sti
adc
pop
xchg
lods
int3
pop
sbb
dec
cmpsb
add
jns
push
mov
loopne
int
ret
pop
sub
bound
movsb
aam
pop
pop
fisttps
mov
or
inc
push
jns
fldenv
jns
test
dec
mov
xor
add
clc
push
add
adc
lea
aad
jb
mov
mull
call
mov
cmp
or
cwtl
jge
subb
test
into
js
movsl
add
test
adc
dec
leave
push
pushf
mov
push
leave
leave
inc
adc
cmp
sub
and
out
imul
rcrl
pop
sub
rclb
cmp
push
mov
ss
and
push
jbe
adc
cwtl
test
enter
lock
add
aaa
cwtl
insl
cs
sar
inc
iret
rorl
dec
or
push
inc
mov
push
loope
mov
movsl
sub
adc
gs
gs
out
test
push
jne
enter
in
jp
pop
rol
xor
iret
int3
leave
popf
inc
or
divb
pop
rcr
in
mov
xchg
mov
mov
sbb
push
cmpsb
popf
popf
inc
push
lret
inc
mov
xchg
int3
out
push
inc
xchg
dec
icebp
int
dec
sub
addl
mov
pop
jbe,pn
les
popf
inc
and
or
cmp
mov
jl
repnz
sub
sbb
clc
push
dec
mov
int
mov
push
xor
dec
out
jp
call
jbe
sti
ror
js
jo
pop
push
mov
out
lcall
rcll
out
xor
jns
enter
icebp
cmc
sub
aas
not
mov
inc
in
out
xor
cld
inc
push
imul
enter
out
mov
sub
pop
push
pop
pop
mov
cs
and
inc
mov
fnsave
insb
dec
dec
addr16
test
lret
gs
mov
sub
push
pop
jmp
sub
push
push
ds
stc
push
out
outsb
in
popa
mov
sbb
inc
mulb
jl,pn
lar
popa
adc
fisttpl
push
mov
sbb
mov
stos
ret
jg
jg
adc
adc
jl
aam
rorl
andb
repnz
je
pop
or
cli
sbb
fidivl
sbb
fwait
imul
icebp
jb,pn
xchg
bound
sarb
in
dec
fisubrs
ss
mov
mov
dec
repnz
adc
dec
mov
test
jg
lds
pop
mov
cltd
mov
jg
push
pop
pop
dec
in
iretw
mov
add
rcrb
sub
insl
sbb
aas
fidivrl
test
das
mov
dec
add
cmp
icebp
ss
sti
inc
or
mov
pop
les
fwait
xchg
pop
outsb
mov
pop
iret
test
lret
jge
imul
rcl
pop
dec
adc
jmp
scas
ret
mov
mov
adc
push
and
ja
sub
mov
mov
and
inc
shlb
pop
xor
gs
xchg
cmpsl
int
inc
lods
add
cltd
xchg
gs
gs
mov
jg
jecxz
int3
mov
mov
int3
push
mov
pushf
rolb
or
xlat
jecxz
ss
or
pmaxub
ljmp
fiaddl
jecxz
ret
xor
stos
scas
imul
lret
cmp
in
fsts
test
cmp
shrl
pusha
enter
ss
arpl
xchg
inc
movsb
fwait
cld
xor
jmp
and
pop
jns
aas
pushf
mov
loop
out
mov
pop
cmp
icebp
sbb
sub
cli
sub
xchg
imul
fwait
arpl
fwait
lcall
jge
fwait
mov
dec
into
ret
movsb
and
or
cld
cld
jno
aad
sub
in
jle
jne
sbb
cmp
add
jp
popf
and
mov
push
arpl
fldt
dec
fldcw
js
mov
jle
rol
in
pop
call
imul
ret
mov
mov
adc
cmp
out
pop
popa
js
inc
mov
mov
and
add
or
lcall
xor
pusha
pop
sahf
popa
shll
ljmp
xchg
mov
adc
mov
jnp
mov
fldcw
mov
sbb
or
jae
jg
mov
lahf
ss
mov
js
sub
data16
and
mov
mov
loop
xor
cmp
adc
shrl
push
invlpg
push
push
push
mov
in
xchg
xchg
lds
scas
inc
out
lods
enter
js,pt
add
add
insb
push
push
push
xchg
out
dec
dec
and
daa
cltd
scas
adc
push
cli
daa
testl
cmpsl
push
imul
jle
fs
pop
pop
sub
add
stos
shrb
sub
dec
imul
mov
icebp
add
mov
xchg
cwtl
cmp
mov
aas
aad
mov
hlt
gs
out
mov
dec
jne
mov
nop
mov
push
and
xor
push
push
mov
jmp
dec
cmp
or
test
dec
xchg
lahf
pop
ljmp
lcall
pop
cmp
jmp
push
in
fwait
ss
pop
stc
mov
aaa
jge
fwait
cwtl
sbb
fists
cmpsb
pushf
sahf
mov
sbbb
popf
lcall
aad
push
scas
int
cwtl
jno
stos
and
dec
nop
dec
insl
inc
sub
rolb
aad
push
ficoms
stc
cmp
inc
dec
mov
jae
sbb
scas
adc
adcl
into
andb
mov
pop
hlt
mov
cmp
mov
sti
in
je
leave
movsl
xor
inc
mov
int
xchg
mov
lea
out
cmp
inc
dec
add
repnz
lods
push
clc
cmpsl
xlat
outsl
out
jnp
clc
mov
pop
and
orb
mov
adc
push
mov
adc
add
outsb
fcmovnbe
rclb
lock
push
sbb
cmp
pop
jl
jl
or
sar
xor
cmpsb
jp
add
xor
lret
fidivs
fcoms
ret
adc
jnp
jg
out
xor
jnp
hlt
ret
mov
addr16
daa
mov
and
ret
outsl
cli
inc
sub
mov
adcb
loop
adc
sub
xor
inc
jle
cli
mov
jnp
bound
lds
mov
or
push
pusha
addl
aam
or
jb
dec
xor
mov
test
pop
push
pop
jge
fnsave
lods
outsl
jns
aam
mov
arpl
inc
mov
sub
jl
insb
dec
sarl
sub
add
int3
or
notl
fcoml
or
jmp
dec
je
xchg
daa
fcoms
jmp
cli
push
movsb
imull
movsb
inc
pop
je
sub
shlb
mov
in
les
jmp
mov
push
jo
adc
xlat
subb
or
pusha
adc
je
mov
sbb
and
sbb
xor
xor
jne
in
lahf
pxor
popf
ljmp
fmuls
cmp
sbb
out
mov
fiaddl
adc
mov
and
adc
dec
mov
push
insb
inc
push
ret
loope
xor
push
cmc
jae
loop
mov
adc
popa
push
pop
fsubp
mov
fidivrl
lret
sbb
cli
jae
int
loope
sbb
test
push
jns
outsb
fwait
push
lret
test
adcb
repz
jge
sub
dec
mov
cmp
mov
aas
mov
sbb
and
aad
mov
cmp
xchg
xor
adc
es
and
les
adc
pop
sbb
in
bound
dec
stos
jb
je
jge
or
call
repnz
dec
test
ret
mov
and
dec
xchg
jmp
and
xor
mov
xor
loop
ljmp
stos
jne
clc
jmp
sub
xor
fmull
sbb
sarb
sbb
jmp
hlt
xlat
mov
adc
test
js
cmp
cmp
jecxz
mov
sub
cmp
cmpsl
stos
in
mov
dec
dec
mov
cmpsb
int3
pop
mulb
in
and
mov
js
cld
das
sub
lret
and
movsl
int
and
aam
pushf
mov
hlt
mov
cmp
xchg
push
insl
lret
dec
adc
jne
aam
in
lock
je
mov
out
ret
mov
sbb
jmp
pop
dec
xor
and
enter
lret
pop
test
in
arpl
mov
rcrl
pop
aas
in
das
sub
cmp
adc
pop
leave
cmp
loope
ljmp
mov
xchg
je
ja
hlt
xlat
mov
les
out
cli
pop
push
bound
testl
lcall
mov
and
mov
fs
bound
xchg
add
and
adc
std
pop
in
mov
mov
ret
or
filds
sbb
outsb
pop
push
sub
mov
inc
pop
hlt
pop
push
dec
or
cmpsl
adc
les
push
sbb
add
cli
lods
fs
push
inc
mov
loopne
cmp
jl
stos
add
sub
aas
jecxz
cmp
test
ljmp
dec
daa
ds
xor
push
add
addr16
cld
lret
repz
adc
sbb
ret
out
jecxz
adc
adc
pop
push
xchg
push
cmp
xchg
cs
fstl
push
gs
into
test
jge
fnstcw
arpl
pushf
jle
les
push
xchg
xor
push
add
pop
mov
inc
outsb
mov
test
repnz
sahf
sub
xchg
loop
adc
jo
mov
jecxz
sbb
sbb
cli
cmp
cld
fisttpl
and
stc
outsl
dec
cmp
jo
test
in
in
fmull
insb
lahf
push
fstpl
stos
daa
xor
push
ss
inc
xor
pop
out
pusha
cli
scas
or
pop
fcos
sbb
fwait
outsl
clc
das
movsl
pop
arpl
jne
outsb
rol
cmpsb
or
xchg
push
pop
xor
mov
and
mov
pop
das
int
mov
nop
add
mov
in
movsl
jmp
mov
mov
mov
jg
adc
test
sub
daa
add
loope
sub
mov
loopne
dec
out
pop
iret
inc
cld
push
jmp
pusha
cmp
rcrl
sbb
cmp
ret
and
add
int3
decl
pop
decb
jno
cli
push
rcrb
js
cmp
and
aad
cmpsb
dec
jle
mov
cwtl
rolb
pop
or
into
adc
shrb
scas
outsb
test
fs
ja
lods
in
out
sti
inc
out
jb
mov
pop
aam
add
subb
mov
add
adc
addl
mov
hlt
lretw
add
adc
nop
inc
scas
inc
or
imul
inc
ret
pop
sub
les
sahf
pop
fisttpll
ljmp
std
dec
mov
push
add
es
jle
sbb
shlb
sbb
sbb
shlb
or
fidivrs
aas
push
sbb
mov
mov
insb
push
jne
addl
xlat
push
repz
mov
cltd
sbb
xchg
or
ret
add
xor
bound
push
jecxz
ja
sbb
rcrl
inc
inc
dec
fcoms
and
sbb
push
inc
scas
les
insb
loop
ja
xchg
xor
mov
inc
push
movsl
nop
add
mov
stc
stos
jnp
lret
rorb
les
loopne
sti
iret
push
scas
inc
jecxz
lods
popa
sub
mov
outsb
stos
loop
fildll
inc
shrl
push
or
cmp
mov
pop
sub
add
mov
mov
push
dec
arpl
mov
test
shrb
xor
sub
sub
pop
jecxz
int
lahf
xchg
lods
jae
shr
int
es
xor
rol
xchg
and
or
cmpsb
pop
mov
cmp
and
aas
or
mov
xor
push
cmp
jmp
jae
cmpsl
push
xor
jmp
es
pop
fwait
push
enter
loop
clc
cmp
lods
insb
push
ret
add
lds
out
fcoms
ret
in
pop
fisubs
jo
test
aam
mov
add
into
lods
int
int3
insl
nop
inc
mov
cmp
cwtl
cld
inc
ja
mov
push
mov
ss
push
iret
insl
mov
outsl
cmc
jmp
pop
aas
xor
jne
sti
insb
ret
pushf
cli
adc
adc
jae
dec
ja
pop
stc
leave
jns
sbb
mov
jmp
scas
call
xor
add
jb
mov
leave
call
scas
xchg
js
cli
int
pop
and
int3
cli
jmp
dec
std
xor
cmc
imul
inc
xor
pop
and
jg
sbb
sbb
cmp
inc
xchg
arpl
adc
jl
test
iret
lcall
add
jb
cs
lret
scas
xchg
lea
pop
xor
fldcw
jg
inc
movsl
inc
into
push
nop
imul
out
scas
lock
mov
add
mov
xchg
add
mov
imul
mov
addr16
cmpsb
push
dec
fcoms
jmp
jp
dec
hlt
or
call
add
mov
decl
sbb
gs
fistl
and
mov
popa
inc
mov
out
and
shrb
pop
bound
int3
fnstsw
popa
in
mov
sti
jmp
pop
dec
daa
inc
data16
les
adc
jp
cmp
shll
pop
mov
mov
fstpt
push
mov
fnsave
insb
pcmpeqw
decl
sub
mov
in
lock
imul
pop
lock
cs
clc
fisttpl
or
push
jg
fldcw
inc
ret
sahf
leave
adc
int
and
cmp
jl
jne
lcall
pop
jle
mov
pop
mov
test
ljmp
flds
cltd
in
out
jnp
sahf
xor
adc
xor
ret
push
xchg
repz
incb
push
fwait
pop
mov
mov
bound
xor
mov
scas
out
jae
adc
mov
jmp
fmuls
sub
in
repz
dec
sbb
out
addb
loope
ret
mov
or
sbb
push
shrb
xchg
pop
lods
std
sahf
out
iret
xor
movsb
xchg
sub
test
xchg
sbb
add
xchg
adc
cmp
out
mov
out
int
dec
push
clc
iret
out
add
cmp
jne
xor
pop
sub
sub
mov
inc
mov
cmc
pushf
mov
push
aam
mov
fistpll
aam
pop
dec
xor
loope
mov
orb
popf
out
xchg
xchg
fbstp
pop
jle
cmp
or
push
orb
mov
push
jae
cli
pop
mov
inc
and
inc
aas
jecxz
cmp
not
sub
fcoms
repz
repz
fidivl
bound
mov
xchg
cmp
clc
jecxz
mov
mov
jge
adc
pop
xor
sti
dec
xor
addl
mov
jg
add
ja
xchg
adc
cs
loopne
into
lahf
jp
xchg
mov
sub
adc
mov
hlt
gs
push
fisttpl
pop
mov
sub
scas
pop
lock
imul
out
aad
lods
or
jns
into
add
add
mov
loope
out
or
stos
inc
sbb
and
mov
scas
out
icebp
add
hlt
and
cmp
pop
testb
mov
lds
inc
cvtps2pd
xor
test
push
push
fmull
or
scas
lods
sub
adc
cmp
jae
sbb
lods
jb
or
pop
mov
sub
out
adc
cmp
mov
test
imul
icebp
push
inc
mov
xchg
out
or
jecxz
aad
outsb
mov
mov
test
sbb
push
mov
mov
data16
fwait
xor
ds
xchg
js
and
mov
cmpsb
push
xor
sarb
mov
mov
into
push
jae
inc
leave
sbb
push
nop
mov
jnp
aas
iret
push
adcl
or
jg
or
mov
and
fsub
into
mov
add
gs
push
pop
sub
lret
add
pop
xor
mov
xor
or
or
rorl
dec
xchg
push
inc
cmpsb
out
adc
shrb
and
adc
xchg
sbb
jb
popf
mov
cmpsb
imul
or
iret
fsubrs
ret
jbe
shrb
jg
ljmp
xchg
ror
mov
ret
mov
imul
add
sub
cmpsl
outsb
jno
or
ret
pushf
jecxz
or
fucomip
mov
cld
inc
and
push
insl
sub
cmpsl
cmp
push
imul
xchg
int3
pushf
sbb
add
inc
xor
xor
sbb
jmp
outsb
ljmp
lods
imul
mov
and
adc
lcall
sbb
xchg
pop
jo
mov
mov
arpl
adc
or
cmp
lret
inc
movsb
mov
and
mov
add
je
ret
adc
test
xor
cmpb
push
add
and
pop
cmp
xchg
daa
xor
add
mov
cs
movsb
stos
rcrl
push
lahf
jnp
add
add
mov
dec
mov
adc
bound
mov
sub
call
aaa
inc
shll
ret
in
int
and
pushf
mov
out
cmp
jns
push
xor
mov
popf
outsl
jmp
subb
push
sbb
fmul
adc
les
mov
loopne
xchg
inc
andl
sbb
test
and
jae
fsubrp
test
into
mov
out
dec
mov
push
xchg
add
pop
stos
lahf
clc
int
in
lock
out
dec
iret
lock
push
jno
fidivl
sbb
and
pushfw
sti
sbb
aad
mov
mov
and
and
aam
mov
xchg
fs
jg
mov
movsl
mov
fistl
or
fistl
mov
stos
adc
sub
inc
jo
mov
jo
out
sahf
sub
adc
outsl
jle
jnp
adcb
push
std
pusha
dec
push
in
and
out
insl
cmpsb
pop
es
cmp
xchg
ss
push
cmp
sahf
ss
stos
sbb
clc
stos
jmp
dec
dec
cmp
imul
jecxz
lods
or
lcall
lods
popa
add
ret
lods
jae
cmp
in
fmull
xchg
or
call
rclb
xchg
mov
movsb
cmp
clc
pop
adc
add
push
out
loop
adc
pop
mov
or
or
sbb
leave
decb
ss
jp
push
xchg
xsha1
cmpsb
dec
pop
bound
pop
push
inc
cli
shlb
notl
shr
loopne
jg
in
sbb
push
out
int
aas
in
mov
jmp
imul
xorb
loopne
pop
mov
popf
push
in
ss
mov
movb
jo
mov
cli
cmp
gs
cld
clc
in
sahf
js
mov
inc
lods
mov
pop
cwtl
dec
cmp
cmp
std
pop
shl
dec
pop
dec
mov
jno
rclb
fdivr
push
es
frstor
mov
mov
or
xchg
fdivp
idivl
xchg
clc
cmp
and
aas
mov
loope
out
xchg
fld
mov
divb
cmpsb
out
icebp
jnp
xor
std
lods
into
sbb
dec
fistl
rclb
jp
or
jbe
icebp
ret
sbb
pop
sub
jl
jne
test
ret
mov
push
cli
pop
rclb
mov
xor
aam
xchg
filds
push
fst
cmpsb
bound
xchg
lahf
ret
lret
hlt
inc
mov
cltd
xchg
or
add
mov
sbb
addr16
fsubrl
je
gs
shll
pop
pop
addr16
fcmovnb
ret
scas
movsb
fcmovnu
add
adc
sub
scas
fsubl
push
rcrb
pop
lcall
push
subl
push
dec
cmp
aaa
ret
mov
sbb
outsl
mov
cs
xchg
pop
icebp
ds
in
sub
ljmp
xchg
inc
stc
jecxz
xchg
sbb
icebp
divb
icebp
jb
lea
and
int
sub
pop
fsubl
adc
cmpsl
in
jno
insl
pop
fs
xor
xor
int
mov
scas
pop
repz
push
push
pushf
add
xchg
fs
jmp
xor
loop
sub
cmp
dec
loopne
adc
je
inc
fs
cmp
sti
stos
push
add
sbb
aaa
aaa
sub
ljmp
js
cmp
test
xor
xor
jae
out
sub
daa
cmp
out
std
pop
mov
push
inc
pop
push
js
xchg
and
push
out
jno
rcrb
mov
in
movsb
rcl
cmpsl
sbb
lret
sub
ds
imulb
sbbl
inc
adc
imul
adc
and
inc
rol
xchg
adc
mov
fnstcw
xlat
xor
pop
scas
xlat
mov
je
or
mov
inc
cmpsb
or
jb
out
cmp
dec
push
mov
scas
sar
gs
jecxz
pop
repnz
rcl
mov
in
cmp
enter
out
repnz
adc
pop
add
out
cltd
cmpsb
imul
cmpsb
lods
test
packssdw
lea
pop
je
push
addr16
dec
sub
add
mov
add
inc
mov
sbb
pop
mov
mov
push
jo
mov
mov
xchg
fimull
cmpsb
test
mov
jecxz
pop
add
sbb
adc
add
inc
xchg
insl
jns
cmp
std
loop
leave
leave
mov
pop
scas
push
mov
inc
int3
popf
stos
adc
cmp
push
test
and
cwtl
sti
pushf
sbb
stos
divl
sti
and
push
mov
sbb
mov
mov
cmp
mov
sub
adc
out
bound
sub
roll
jl
sti
cmp
mov
pushf
pop
lcall
outsl
mov
xor
fstl
jo
cmp
and
aad
and
cmp
xchg
dec
faddl
fiadds
rorb
les
mov
fisttpl
fldt
jmp
test
dec
add
sub
out
adc
cmpb
push
inc
jns
icebp
test
loopne
mov
mov
push
mov
lock
and
push
cmpsl
adc
mov
mov
mov
notl
shrl
fadd
dec
add
int
lock
test
adc
dec
nop
sub
daa
mov
cmp
stos
or
dec
xchg
fnsave
dec
test
push
add
test
mov
aaa
dec
adc
lea
outsl
pop
xchg
cltd
inc
aaa
sub
adc
sub
sarb
pop
aaa
or
mov
test
adc
lods
add
ret
lcall
outsb
cmc
sahf
outsl
or
movsb
outsl
repz
sub
aad
arpl
in
push
loope
lahf
pop
rcll
inc
stos
out
jb
inc
jns
pop
sbb
shlb
rolb
pop
jb
mov
fnstcw
mov
cmpsl
aaa
cmp
cld
lahf
in
push
imul
inc
jmp
andl
scas
add
lret
cmp
test
adc
dec
out
fmuls
or
push
mov
or
adc
call
shlb
enter
hlt
cld
movsl
pusha
fnstcw
xchg
popa
fs
dec
pushf
bound
sbb
gs
jnp
gs
ljmp
inc
mov
fs
push
clc
in
mov
xor
cmp
push
add
cmp
xchg
shlb
mov
mov
cmpsl
xchg
mov
sub
stc
jl
mov
sti
push
cld
mov
xchg
test
push
pusha
scas
or
jno
and
out
add
push
jle
stos
clc
xchg
dec
std
sahf
mov
adc
into
test
pop
fprem
push
out
xchg
xor
in
pop
mov
mov
mov
scas
cli
mov
lods
mov
pop
in
cli
inc
icebp
adcb
pop
in
push
stos
mov
dec
or
bound
cli
ljmp
in
sbb
push
xchg
dec
cmp
pop
notb
sbb
xlat
cmc
jo
pop
mov
aam
insb
and
insl
idivl
fwait
es
push
arpl
es
or
hlt
dec
iret
int3
mov
out
sub
outsb
jnp
inc
jb
mov
lahf
cmpsl
push
jnp
jecxz
out
test
push
mov
jmp
shrl
mov
daa
push
nop
cmpsb
mov
inc
bound
push
addr16
xchg
dec
mov
scas
dec
push
pop
scas
movsb
xchg
push
imul
or
pusha
stc
xor
sahf
or
js
int
add
mov
test
jmp
ja
push
fs
in
aad
ds
loop
in
mov
out
mov
fidivs
sarb
push
sub
mov
push
inc
jno
lret
les
fmuls
ss
pop
push
xchg
hlt
fisubrl
imul
std
icebp
das
popf
adc
sub
stos
cmp
or
cmp
cmpb
cmpl
sbb
test
dec
inc
lea
mov
int
mov
ja
arpl
rorl
idivb
inc
jmp
cs
dec
sbb
rcrb
sbb
aam
mov
je
rorl
dec
jmp
add
pop
ret
fnstenv
sahf
push
push
fwait
insb
pop
dec
sbb
cli
test
pop
dec
mov
addr16
fwait
xor
mov
or
test
icebp
mov
add
or
inc
fsubs
scas
icebp
icebp
mov
negb
xchg
jp
add
jns
or
pushf
outsb
mov
in
cmp
mov
cwtl
jg
mov
push
cmp
dec
pop
push
mov
mov
or
fstps
cld
aad
sub
pop
mov
pop
ficoml
mulb
insb
dec
fidivl
enter
cmp
xor
dec
loop
push
clc
popf
jge
aad
lock
push
call
push
sbb
rcrb
and
scas
cld
ss
adc
pop
sbb
jo
cmpsl
bound
lret
sbb
outsb
pop
stos
cmp
lcall
insb
ret
in
pop
movsb
mov
jae
dec
xor
sbbl
movsl
adc
or
pop
pop
and
sub
dec
jp
fs
fistl
push
aaa
lods
pop
cli
pop
pop
mov
test
dec
rcll
lret
mov
add
push
push
mov
fs
fistps
xchg
and
jns
out
mov
pop
int
xchg
push
push
mov
test
add
jle
shlb
insb
sub
xchg
cs
mov
dec
jo
jb
int
jecxz
les
push
cmpsb
push
popa
mov
sbb
cmc
pop
jno
loop
sub
or
or
pushf
sti
adc
jg
mov
sbb
xor
in
ljmp
push
out
jmp
pop
lock
pop
inc
in
push
mov
in
push
fsubr
sti
xor
inc
push
and
sbb
aas
cwtl
mov
xchg
das
arpl
or
jns
or
addr16
daa
pushf
adc
xchg
pop
push
imul
xchg
xlat
cs
pop
jmp
sti
lret
outsb
fldln2
add
lods
sbb
mov
rclb
sub
or
pushf
add
pop
popa
jb
pop
jmp
inc
dec
testb
inc
loop
xor
bound
stos
mov
and
mov
xor
cmp
push
sub
test
mov
pop
not
mov
fs
insb
and
iret
jle
cmpsb
sarb
adc
lcall
jns
cmpsl
xor
popf
cmp
or
xchg
adc
mov
inc
pop
int
xchg
mov
xor
inc
aaa
xchg
jno
jae
cli
sub
lret
lret
push
push
mov
cmpsb
add
lods
imul
dec
xchg
fs
aaa
lret
sti
iret
rol
imul
cmpsl
push
roll
push
hlt
iret
sar
adc
jne
xchg
aas
push
insb
aad
negl
outsb
jmp
xor
fnstsw
mov
lods
fdivrs
mov
sbb
xchg
repz
push
sub
and
sub
or
shl
fnstsw
sbb
in
dec
jae
and
popa
cmp
movsb
pop
mov
push
jl
into
call
jb
mov
push
xchg
arpl
push
cwtl
in
and
rorb
add
cmpsb
jne
pop
test
sub
adc
ja
hlt
xchg
stc
mov
pop
dec
lcall
sbb
in
sbb
xor
les
xlat
das
addr16
jbe
or
or
push
aad
ljmp
inc
mov
inc
stc
fs
movsb
into
js
mov
or
leave
testl
cmpl
fsubrp
mov
jno
fisubl
inc
ret
mov
out
cmp
into
mov
punpckhdq
in
push
sub
or
mov
sub
daa
call
dec
and
mov
cmpsl
xchg
repnz
cmp
scas
jp
sub
stos
je
and
ljmp
mov
lods
lss
rolb
dec
test
insb
cmpsb
xchg
adc
js
sahf
push
pop
shl
fucomp
xchg
cltd
jge
ret
int
stc
adc
push
inc
add
inc
movsb
jns
negl
push
mov
leave
dec
mov
jmp
add
test
or
sub
push
addb
les
xlat
shll
leave
adc
ficoml
div
sub
jae
add
mov
loopne
pop
adc
xchg
jne
xchg
push
xor
sbb
stos
xor
repz
insl
mov
mov
loope
fnstsw
lods
push
mov
mov
jmp
cmp
mov
icebp
int
add
adc
dec
out
add
mov
jmp
or
push
cmpsb
mov
jl
ja
mov
or
jno
or
lds
shrb
cli
xor
jne
cmp
mov
dec
jbe
add
nop
outsl
bound
cmp
jge
pop
test
into
ret
jno
jp
cmpsl
aad
ss
sub
ja
popf
push
mov
imul
cs
das
popf
add
add
leave
inc
test
dec
hlt
pop
loope
cltd
jo
adc
data16
rorb
mov
push
fwait
test
mov
xor
pop
and
dec
ret
fdivp
popf
mov
jnp
mov
in
imull
jno
jecxz
addr16
in
scas
pop
or
out
sbb
fdivr
fwait
xchg
iret
adc
shlb
cmp
cld
jmp
lods
leave
mov
idivl
jge
lods
loope
not
mov
pop
subl
test
out
fidivrl
mov
in
daa
gs
add
testl
fimuls
mov
bound
imul
push
and
pop
ud0
jne
pop
adc
aas
or
add
shll
clc
mov
loopne
cli
jg
mov
add
lret
jmp
cmp
mov
mov
cmp
and
sti
dec
jo
call
lcall
int
sar
mov
push
sbb
into
jle
jmp
popa
aas
add
vmovshdup
push
jl
adc
and
and
ret
dec
rcl
shrl
push
push
shlb
mov
or
xor
inc
cmpb
sbb
sar
test
mov
cwtl
jle
mov
lods
subl
sbb
out
cmp
cmpsb
lds
addl
shr
xchg
jb
sbb
std
pop
pop
jmp
out
inc
sbbl
mov
hlt
popl
jl
push
jge
xchg
mov
outsl
je
xchg
mov
or
push
mov
mov
push
xor
jne
addb
mov
lods
mov
das
lret
enter
in
and
xchg
fsubl
stos
xchg
adc
jo
and
fiadds
aam
outsl
mov
mov
jp
and
cmpsl
lods
loop
sub
push
std
in
fs
inc
add
out
sub
sti
adc
add
ss
ss
and
push
in
or
sub
pop
mov
inc
jno,pt
xchg
push
mov
fisttps
stc
mov
gs
lods
pop
test
outsl
mov
jmp
je
adc
enter
push
movsl
clc
js
sti
cmp
pushf
jbe
fsubrl
iret
hlt
jae
push
fistpll
ss
pop
flds
and
adc
xchg
mov
movsl
roll
or
mov
movl
fcoml
fdivs
fisttpll
xchg
or
loopne
mov
jp
adc
ja
rcrw
xor
sub
mov
daa
push
lea
xchg
or
test
mov
int
shlb
jle
fsubrs
pop
jl
push
inc
add
sub
nop
orl
repnz
jecxz
push
sti
shl
xchg
mov
and
insl
loopne
cmpsl
out
lds
xor
sub
add
jp
adc
ds
shrl
pushf
test
popf
fldenv
cmpsl
test
pop
mov
sub
idivl
inc
add
pop
push
and
fcoms
push
int
repz
movsl
ss
negl
movl
mov
and
shl
call
jmp
pop
add
icebp
jmp
sahf
xlat
fsts
mov
lock
adc
add
fcom
in
or
jecxz
outsb
sbb
stos
fdivrp
push
adc
xchg
fcmove
mov
scas
mov
in
out
push
push
mov
fs
sbb
lods
mov
int3
push
es
sti
mov
ss
iret
cli
jge
cmpsl
das
push
incb
or
jae
dec
popl
test
jns
gs
lods
aam
fst
lds
cmp
pop
cmp
pop
cmp
js
cli
orb
xor
je
mov
jp
and
xchg
push
sub
inc
leave
add
jecxz
pop
mov
scas
mov
testb
les
outsl
and
stos
lcall
icebp
inc
je
mov
popa
mov
adc
add
rcr
aaa
cmc
fidivrl
xor
inc
xchg
ja
xor
lret
cmp
pop
rcl
xchg
jns
sub
insb
and
add
or
in
push
mov
xor
fistl
dec
pop
add
mov
push
pop
int3
andb
mov
daa
mov
and
mov
sti
jle
ljmp
adc
mov
scas
sbb
lock
fistps
cwtl
sub
bound
inc
and
testl
lea
mov
mov
mov
div
pusha
mov
jp
sub
inc
arpl
push
inc
mov
hlt
mov
or
js
push
outsb
mov
xchg
pop
mov
sbb
push
daa
test
call
movsl
and
dec
sahf
mov
aaa
mov
lcall
mov
add
push
pop
xor
pop
mov
out
ror
sub
pop
push
insl
mov
mov
ds
cmp
hlt
roll
arpl
test
cmc
notl
inc
pop
sub
mov
mov
inc
ret
mov
imul
lock
mov
insb
cmc
lds
dec
mov
mov
int
pop
or
push
out
imul
loopne
ret
push
adc
jg
sbb
pop
jno
outsb
js
insb
sbb
mov
jb
sbb
in
pop
sbb
cmpsl
ret
fmuls
ss
lret
fldenv
int
mov
cmc
out
test
ficoms
lret
fimuls
xor
pop
data16
pop
pushf
xchg
je
sahf
xlat
sarb
outsl
mov
repnz
test
mov
pop
sub
or
daa
rcl
addl
push
adc
mov
jnp
dec
arpl
and
mov
xor
push
stos
push
cmp
cmp
gs
mov
cmp
icebp
lcall
cmp
adc
jns
cmc
or
lret
jae
pop
push
cmp
jnp
out
xchg
cltd
enter
xor
int3
repnz
add
fisubl
mov
add
frndint
loope
xchg
xlat
adc
push
es
outsb
ja
fidivrs
in
push
pop
popa
push
push
or
adc
mov
mov
pop
fnstenv
es
dec
aam
in
xchg
dec
dec
push
lea
int3
cmp
push
movl
out
inc
and
cwtl
aas
fdivrl
xchg
and
imul
out
aas
fcomi
ror
je
mov
xchg
ds
lds
aam
cmp
dec
testl
xchg
loope
mov
leave
daa
and
divb
rcrb
cmp
jmp
and
push
mov
call
push
sub
pop
imul
mov
push
mov
testl
decl
xor
les
in
nop
rclb
mov
cmp
loopne
mov
mov
dec
fucomi
dec
outsl
and
inc
mov
or
cli
pop
push
push
dec
cmp
mov
jle
jno
ret
bound
or
sub
adc
pop
nop
jmp
in
ljmp
adc
sbb
sbb
loopne
mov
rorl
cmpsb
mov
mov
outsb
inc
mov
dec
jae
pop
xchg
inc
jg
rorb
mov
sub
fstps
xor
cmp
push
dec
dec
cmp
inc
mov
pop
scas
dec
and
aas
pop
mov
push
sub
or
add
jmp
popf
daa
cmpsl
or
add
jae
mov
dec
icebp
xor
cwtl
jp
mov
dec
ss
fucomp
jnp
mov
mov
lds
mov
nop
fldz
int3
ja
xchg
cmp
mov
cltd
std
push
addb
divb
aas
int
ret
push
sub
mov
push
data16
xchg
movsl
xor
repz
movsl
jne
sub
aam
mov
push
cmp
sahf
cmp
bound
lods
xchg
inc
outsb
inc
pushl
pop
enter
inc
mov
dec
movsl
out
rcll
mov
mov
mov
insl
mov
dec
push
inc
psllq
mov
fs
jmp
mov
mov
mov
inc
loope
fisubl
lea
repnz
mov
pop
mov
and
int
sbb
les
imul
xchg
das
leave
or
test
repnz
aaa
outsl
stc
les
adc
js
test
in
les
push
fnsave
pop
lret
xchg
insb
mov
mov
push
stos
jbe
test
dec
mov
das
loope
and
lods
pop
inc
or
or
iret
pop
pop
lds
mov
jmp
or
mov
add
cmp
lock
imul
xchg
sarb
jbe
pop
cmp
jmp
jae
icebp
add
and
inc
fs
inc
jl
cmp
jp
or
sbb
dec
and
cmp
sahf
icebp
pop
das
cmpsl
out
or
push
jmp
loope
mov
repz
mov
sbb
push
arpl
push
and
pop
mov
aas
inc
fnsave
cli
fwait
lret
jae
push
mov
jae
sbb
in
jp
dec
mov
inc
rcrl
mov
in
scas
insl
mov
pop
arpl
add
int
nop
xor
sbb
sub
xor
enter
gs
mov
xchg
inc
test
jecxz
xor
outsl
xor
lock
int3
push
cmp
add
sub
jo
orb
cmpsb
add
movsl
add
cmp
sbb
xchg
cmp
dec
mov
gs
cmpsb
adcb
adc
push
mov
add
int
xor
aad
cs
adc
xchg
inc
insb
sbb
popl
jmp
and
mov
rcll
ds
pop
nop
jb
out
mov
mov
inc
or
mov
jp
hlt
jecxz
xor
popf
mov
sbb
fisubrs
das
test
sub
cli
xor
mov
add
cmc
test
and
xchg
stc
inc
mov
pop
scas
cmpsl
mov
mov
int
push
inc
sub
rcrl
jp
movsb
inc
out
jl
fcomps
pop
lods
mov
adc
adc
movsl
sub
dec
lea
mov
mov
mov
cmpl
xchg
sbb
outsl
add
loop
mov
lea
cli
xor
mul
repnz
or
enter
pop
cwtl
cli
and
int
js
cmp
sbb
int3
push
add
shrb
and
xor
cmp
sahf
ja
invd
lods
mov
pop
cmp
mov
or
xor
or
push
jmp
lret
rcr
call
add
insb
mov
adc
pop
aad
int3
pop
insb
mov
stos
out
xchg
cltd
ds
jl
pop
fucomi
push
lds
stos
leave
clc
cmpsl
mov
cmp
stos
icebp
add
adc
xchg
sub
cmp
fwait
ret
pop
fldenv
add
out
out
and
lcall
int
mov
dec
call
pop
add
and
mov
mov
bound
test
pop
adc
dec
imulb
dec
jae
push
movb
adc
addr16
xor
das
push
mul
xchg
xchg
sub
shll
dec
ds
xlat
push
push
jbe
sub
imul
lock
mov
adc
add
mov
lds
push
pop
fnstenv
ret
roll
movsl
pop
lock
popf
rorb
outsl
insl
rcr
cli
test
aam
outsl
mov
jns
insl
sbb
adc
mulb
lahf
out
or
inc
sarb
mov
or
cmp
hlt
aad
movsb
orl
je
or
pop
dec
push
es
xor
or
clc
or
ret
mov
mov
mov
xor
adc
sahf
xor
cmp
and
test
sahf
movsl
test
testb
add
mov
mov
sbbb
test
sarb
lret
jo
shl
arpl
dec
hlt
cltd
and
mov
cmpsb
aad
arpl
movsb
sbb
sbb
mov
jb
sbb
loopne
pop
rcrb
cld
or
push
lahf
mov
xchg
stc
push
sarl
int
aam
jmp
or
cli
leave
and
loope
dec
inc
push
in
jp
and
scas
jg
daa
mov
mov
add
mov
and
arpl
add
cmp
lock
in
movsl
mov
jo
jecxz
push
arpl
mov
fsts
xchg
pop
clc
sbb
scas
push
sub
push
lds
dec
and
mov
and
sti
inc
arpl
sbb
xchg
adc
in
mov
mov
pusha
sbb
ds
dec
mov
inc
and
addr16
ja
or
push
adc
pop
sub
addr16
mov
stos
dec
pop
xor
ror
lcall
das
popa
cli
add
or
cmpsl
les
jae
outsb
jne
js
mov
push
fwait
xchg
outsl
or
mov
icebp
or
jb
jno
in
mov
sbb
aaa
stos
fildll
mov
lock
or
inc
or
mov
ss
push
movsl
mov
jg
ja
sub
and
sub
jns
lods
xchg
sub
push
sub
scas
xchg
and
sahf
aam
out
jecxz
aad
mov
out
imul
jbe
mov
andl
jle
js
pop
jb
push
test
and
adc
pop
cmp
jbe
scas
arpl
lock
je
fidivrs
pop
jae
dec
testb
or
mov
fsubs
and
mov
pop
fwait
cmc
xchg
push
fdiv
sbb
jg
je
stc
inc
adc
inc
cwtl
imulb
sarl
js
lea
mov
jg
js
mov
jne
dec
shlb
or
pop
or
jae
lret
loop
mov
test
cli
jmp
jb
pop
lahf
or
push
cmp
cmp
in
inc
popa
rcll
jecxz
mov
out
ds
cmp
cmp
jno
in
stos
lret
fnsave
xchg
jno
xchg
mov
sahf
mov
adc
lds
push
jle
add
loopne
rorb
imul
sbb
mov
mov
lods
stos
popa
jge
mov
adc
test
and
hlt
mov
ficomps
in
and
push
aam
test
push
repz
pop
outsl
loopne
mov
je
loop
jl
loope
adc
sub
gs
sbb
icebp
sti
int3
sub
test
pop
ja
mov
mov
jge
es
paddw
cmpsb
mov
and
sub
mov
mov
push
mov
add
dec
mov
add
push
testl
lock
xchg
fsubl
into
pop
leave
enter
sbb
xor
cmp
jle
and
xor
das
insb
push
lcall
dec
mov
mov
shll
and
bound
add
or
xchg
lahf
xor
jmp
ret
aas
stos
sahf
mov
sbb
add
dec
imul
rcl
fidivl
dec
dec
divb
push
dec
push
bnd
loope
sub
push
pop
xchg
idivb
scas
mov
adc
leave
push
push
test
jns
lds
lahf
mov
mov
and
pop
or
dec
push
mov
sbb
push
mov
rcrb
push
mov
test
pop
jl
cli
add
movsb
adc
xchg
pop
inc
inc
inc
hlt
jno
orl
inc
pop
jne
nop
mov
in
andb
push
shr
fnstsw
xchg
add
mov
mov
dec
jl
mov
fistpl
mov
or
bound
daa
adc
pop
imul
mov
cmp
cbtw
icebp
fisubl
xchg
in
mov
std
jle
cmp
lahf
pop
jne
cmp
jmp
mov
inc
or
and
mov
lret
or
sub
sub
mov
or
mov
sbbl
add
aas
sti
cmpsl
insb
sbb
dec
cmp
lcall
iret
or
mov
pop
ret
push
dec
xchg
out
sahf
sub
stos
jg
je
sbb
imul
test
add
lds
roll
or
out
push
aas
sarb
xchg
je
adc
push
ror
and
in
ds
and
cltd
int3
sbbb
mov
dec
mov
xor
repnz
add
aaa
mov
cmpsb
ljmp
add
pop
or
add
jnp
orb
mov
test
int3
adc
std
push
sbb
cmc
dec
cwtl
mov
testb
int
mov
test
aaa
and
cli
cltd
orl
push
fisubrl
cmp
aas
pop
inc
mov
jns
out
xchg
xchg
push
test
rolb
fidivs
cli
ss
and
lock
adc
pop
adc
inc
push
ds
fucomip
shll
pop
xchg
insb
inc
push
pop
mov
and
mov
mov
mov
faddl
sbb
es
push
or
movsb
add
xchg
daa
call
mov
in
ds
inc
sub
add
fdivrl
shl
pop
jmp
push
jge
xchg
icebp
mov
jp
add
lods
jle
dec
rcr
fdivl
or
cwtl
loop
sbb
cmpsb
enter
mov
sub
mov
outsl
cmp
mov
out
mov
stc
xchg
mov
xor
mov
in
or
sub
mov
adc
cmc
xchg
xchg
sbb
cmpsl
dec
out
pop
pop
loop
inc
call
fisubrl
jmp
jne
push
int
out
stos
and
setns
and
jp
repz
sub
or
xchg
outsl
inc
sbb
add
mov
and
rcrl
dec
pop
es
add
mov
jbe
and
push
mov
push
std
sub
shlb
xchg
mov
mov
lcall
cmc
jecxz
pushf
cld
test
push
shr
faddl
je
jb
dec
fisubrl
mov
add
mov
outsl
jecxz
loop
fs
or
lret
lods
sbb
out
cmp
add
inc
pop
jle
jmp
in
es
inc
movsl
out
iret
jno
pop
pop
jne
stc
mov
jno
push
mov
jnp
dec
mov
mov
fistl
into
mov
jmp
pop
lock
jl
es
pop
stos
pop
test
push
jecxz
ret
cmp
ja
pushf
fisttpl
xchg
xlat
jmp
cmp
mov
dec
movd
sub
lds
clc
jnp
fs
mov
cs
stc
cmp
jecxz
repz
fsts
or
rorb
mov
in
fmuls
shl
add
push
mov
sbb
push
jl
and
ret
popf
mov
fcoml
clc
test
pop
daa
out
mov
jmp
xlat
sub
js
fistl
pop
loopne
mov
xchg
mov
jnp
jb
out
arpl
out
mov
mov
pop
cmp
int
popa
push
stc
inc
sub
imul
stc
jb
test
cld
ficomps
mul
addr16
ret
cs
jge
mov
mov
gs
cmp
lods
sub
or
jecxz
subl
jbe
jle
hlt
das
or
sbb
xchg
mov
jnp
sbb
pop
mov
test
fldenv
arpl
sbb
xchg
mov
add
data16
loop
insl
flds
testb
mov
cli
daa
or
mov
out
mov
insb
inc
dec
mov
or
pop
jle
or
ss
js
insl
mov
int3
and
in
imul
cmpsl
in
cmpsb
push
int
aad
jmp
mov
mov
shrb
mov
add
dec
shl
outsl
das
add
leave
mov
adc
fwait
mov
mov
mov
jl
cmp
and
pop
iret
jb
sub
sahf
out
xchg
pop
pop
mov
jae
ror
and
cld
pop
xor
mov
inc
xor
dec
daa
in
xchg
stos
cmp
mov
push
adc
dec
adc
js
rcr
test
push
ret
stos
jns
es
xchg
out
cmp
clc
cmp
lock
inc
pushf
dec
dec
dec
adc
aaa
lock
popf
in
push
sti
and
in
mov
inc
ret
mov
lds
pop
and
cwtl
dec
sahf
nop
es
fstpl
fisttps
mov
sbb
popa
mov
popa
out
mov
ja
mov
imul
pop
repz
loope
hlt
jns
mov
repnz
ss
sti
cmpsl
pop
dec
loopne
aaa
push
push
mov
jg
adc
mov
aam
dec
or
cltd
and
dec
pop
in
mov
or
daa
push
std
mov
out
inc
lea
outsb
adc
fiaddl
loop
mov
idiv
add
xchg
push
mov
jl
xchg
jp
xor
jg
sub
and
std
lock
es
xor
sbb
and
mov
add
pop
cmp
lods
mov
mov
jp
iret
clc
adc
lock
andb
sbb
ss
mov
lock
xchg
sub
mov
in
inc
mov
je
aas
jnp
adc
mov
jp
imul
lahf
pop
pusha
xchg
sub
andl
push
cmpsb
and
loopne
inc
shlb
xchg
adc
cltd
subb
in
pop
mov
hlt
andl
adc
cmp
mov
test
cmpsl
dec
stos
pop
daa
pushf
xchg
out
stos
or
and
xchg
jae
fdivs
ret
ljmp
cmp
push
cmpsb
stos
and
jb
pop
xor
ficompl
into
push
push
mov
fistpll
addl
push
mov
loope
stos
insl
mov
mov
pop
aad
pop
out
xchg
ret
jne
aam
pusha
dec
or
imul
dec
dec
loop
mull
bound
and
sub
enter
jg
cmp
and
fsubs
mov
add
push
add
ja
imul
sahf
inc
lock
fadd
clc
cmp
xorb
sbbb
cmp
icebp
in
and
clc
xor
out
xorb
cmp
xor
dec
adc
adc
add
mov
jbe
sbb
add
sbb
bound
jmp
add
add
test
nop
and
data16
sub
push
jl
test
adc
jae
subb
daa
pop
mov
syscall
shl
jl
sbb
pop
mov
int
adc
ljmp
sbb
adc
test
cli
pusha
je
out
mov
sbb
cltd
mov
xor
lods
shr
aaa
pop
mov
or
jge
lods
bound
sbbl
xor
aas
fcoml
rcll
cltd
add
insl
jno
or
shlb
cmp
int3
pop
adc
orl
jnp
jp
out
icebp
or
dec
add
push
sbb
insl
jp
in
sub
jne
cmpsb
int3
pop
push
pop
rcll
sti
cmp
dec
push
into
mov
cmp
lock
nop
sub
xor
pop
push
leave
insb
ja
cmp
dec
divb
push
int
in
adc
into
arpl
mov
push
daa
je
sbb
and
test
mov
fisubrs
popa
mov
xor
mov
push
cmp
mov
adc
xchg
cmp
fdivl
adc
ja
daa
sub
cmp
cwtl
insb
xor
or
fidivrs
lods
add
ljmp
jmp
ret
dec
inc
xchg
cmc
iret
les
lds
adc
inc
jge
sbb
inc
cwtl
popf
rep
jb
and
mov
adc
scas
jmp
sub
loop
out
push
cmp
inc
mov
sbb
mov
jne
ret
inc
sbb
mov
or
pop
dec
call
mov
mov
xchg
push
pop
add
popf
leave
push
push
fidivrs
mov
cmp
clc
push
lret
in
jg
iret
pop
mov
fcoml
xchg
jnp
jl
xchg
rep
setge
rorl
push
sub
inc
push
jmpw
in
movsl
sti
sub
dec
ret
lock
ret
xorl
sub
iret
int
fadd
fdivl
inc
push
iret
adc
les
addr16
dec
std
cmp
les
call
xchg
push
mov
cmpl
ret
cmp
add
pop
xchg
aam
ljmp
js
cmpsb
mov
jnp
test
leave
cltd
cmpsb
imul
push
scas
xor
cmc
jo
stc
mov
shlb
dec
int3
ret
cli
loope
adc
test
mov
movsl
xchg
inc
arpl
sub
jp
xchg
ljmp
lods
test
inc
sbb
out
cmp
pop
jle
xchg
push
xor
aad
and
xchg
inc
mov
push
pusha
not
mov
add
fbstp
orb
pop
fwait
lods
test
xor
sub
ds
add
xor
adc
jge
mov
test
ja
popf
jbe,pn
add
pop
inc
dec
cltd
sbb
icebp
pushf
sbb
sub
js
sub
mov
mov
stos
pushf
sub
ficoms
jb
faddl
dec
add
out
pusha
lods
mov
or
mov
jg
xchg
jg
lret
push
adc
and
imul
lret
data16
inc
or
sub
pop
fwait
sub
xor
mov
dec
lods
je
mov
jl
mull
xor
dec
push
xchg
out
pop
mov
clc
pop
out
mov
sbb
imul
mov
pushf
adc
movsb
adc
aaa
cmovae
mov
sbb
mov
or
mov
lret
into
maskmovq
testl
fsubl
scas
and
cmp
jmp
or
jmp
sbb
mov
mov
test
mov
push
xchg
dec
out
mov
xchg
pop
dec
pop
add
jecxz
xchg
add
nop
ret
xchg
shlb
jmp
adc
xor
jno
push
mov
pop
movsl
cmc
and
xlat
add
aam
mov
inc
push
adc
cmp
test
leave
inc
sbb
mov
mov
mov
in
dec
icebp
inc
inc
pop
or
xor
into
xlat
cld
dec
inc
mov
inc
cmp
hlt
mov
sub
mov
mov
push
addr16
pusha
jp
mov
daa
push
jmp
fyl2x
cmpsb
aam
les
sarb
inc
sarb
aaa
out
and
or
xchg
decb
xchg
adc
mov
pop
push
popa
lods
lods
push
adc
push
jmp
outsb
cmpsl
xchg
xchg
push
dec
pop
and
dec
aam
sbb
cmp
imul
sub
mov
jnp
dec
mov
in
push
jmp
or
ljmp
cmp
dec
inc
and
jns
jo
jae
mov
add
or
push
adc
pop
addb
pop
fnstcw
cmp
or
mov
fwait
mov
lret
call
fists
push
cmp
and
dec
outsl
insl
mov
inc
insl
sub
lret
adc
out
fld
push
icebp
jmp
in
pop
pop
push
push
mov
mov
ret
sub
push
push
rcll
popa
xor
xchg
daa
inc
jecxz
dec
mov
xchg
push
xchg
or
insl
dec
xchg
scas
jle
push
fstl
xor
shll
mov
adc
aaa
push
test
inc
cwtl
sti
hlt
jns
adc
movsl
dec
mov
mov
sbb
int
dec
add
jecxz
data16
and
inc
mov
mov
ret
xorb
adc
mov
cmc
sub
mov
push
mov
inc
add
mov
mov
jno
test
sub
mov
and
jo
test
xor
test
xor
xchg
or
or
jae
or
scas
test
test
adc
mov
xchg
sub
pop
subl
mov
sbb
vmread
pop
stc
inc
and
inc
mov
fmuls
adc
or
inc
push
aam
pop
add
test
add
and
lret
daa
rol
and
cmpsl
xchg
jmp
or
ds
adc
bound
mov
xchg
and
add
jge
in
ja
or
xchg
andl
std
nop
adc
lret
or
or
push
das
sarb
adc
push
dec
or
pop
add
jae
add
dec
sbb
jnp
mov
int3
test
push
repz
mov
loop
andb
or
add
push
loope
inc
inc
fisubrl
cmp
rorb
fs
xchg
adc
dec
cmp
add
mov
dec
sti
clc
inc
sub
sub
aaa
or
mov
sti
aaa
gs
pop
dec
mov
mov
popa
jmp
mov
add
nop
push
push
inc
icebp
shlb
repz
jl
outsl
or
xor
push
test
aam
mov
out
sbb
add
push
iret
pop
sarb
inc
fisttps
in
je
sbb
cmp
arpl
int3
mov
orl
dec
insl
addb
fxch
gs
ja
mov
stos
addl
sarl
cmp
dec
push
xchg
add
xor
inc
add
dec
fadds
insb
mov
aaa
cld
mov
orb
cmp
push
lea
push
popa
dec
insl
data16
in
or
das
lods
xor
out
jle
xor
in
mov
mov
shll
sub
mov
out
scas
inc
fists
fs
cmp
push
add
lcall
lea
mov
das
es
mov
cmpsl
adc
mov
lods
lret
push
aad
mov
outsb
sub
pop
mov
negl
inc
testl
lcall
jmp
rorl
sahf
cmp
orb
cli
ficoms
mov
sub
lea
adc
repnz
fistl
cld
and
mov
fstps
jo
jg
mov
add
dec
xchg
mov
out
arpl
fmul
fs
pushf
imul
xchg
cmpsl
loop
fwait
xchg
sbb
xchg
lahf
stos
jb
nop
dec
adc
jbe
and
adc
push
loopne
js
int3
xorb
push
inc
fidivrs
cld
fwait
inc
ret
mov
mov
loope
aad
mov
shlw
or
adc
sub
mov
sbb
mov
push
dec
jo
insl
add
mov
outsl
push
mov
cmpsb
iret
ret
jle
dec
sub
jecxz
jmp
dec
adc
sub
xchg
xor
pop
mov
jl
sub
jecxz
call
scas
xchg
cmp
sbb
pop
and
jae
aam
aam
mov
push
aad
std
pusha
bswap
add
cmc
jnp
push
pop
in
mov
and
and
mov
aaa
stos
ss
push
mov
call
leave
mov
lret
adc
jo
sbb
rclb
adc
int3
int
mov
les
inc
mov
dec
iret
outsl
jno
xchg
or
in
mov
cmp
jne
or
pop
lods
pop
mov
pop
dec
mov
clc
mov
push
xchg
dec
sub
push
out
test
arpl
shrl
out
lods
mov
adc
mov
cmp
addb
inc
sub
imul
push
lods
or
adc
outsl
xor
dec
roll
mov
push
cmp
pop
lcall
sbb
xchg
int3
aaa
mov
jl
push
int
test
inc
test
push
cmp
imul
sub
and
test
and
push
outsl
mov
jb
scas
and
and
mov
jg
lea
pop
mov
mov
daa
int3
dec
adc
leave
das
rcrb
push
pop
fs
shr
cmpsb
sbb
sbb
ds
xor
mov
sti
nop
rcll
fcom
sub
jg
inc
pop
aas
in
mov
xchg
xlat
adc
mov
sbb
mov
mov
dec
mov
mov
mov
mov
ret
or
pop
sbb
mov
mov
lods
xlat
lahf
sub
jno
popl
and
ret
mov
out
lcall
es
mov
dec
jmp
sub
pusha
mov
outsb
lret
fwait
pop
movsl
and
push
movsl
sub
mov
lds
in
or
xchg
push
sti
lret
fdivs
inc
inc
ret
adc
pop
imul
scas
xchg
jp
shlb
clc
mov
pop
iret
mov
sbb
and
sub
mov
jae
and
fildll
add
fcoml
jbe
xchg
in
push
push
cs
js
iret
inc
dec
xchg
lcall
rol
insl
and
dec
dec
xchg
lea
mov
out
adc
dec
mov
mov
cmp
stc
bound
mov
bound
sub
divl
sbb
fisubrs
sbb
mov
mov
sub
xor
cmp
scas
in
jle
push
xchg
int3
jno
adc
in
imul
push
pop
enter
testl
stos
loope
cmp
jl
xchg
sbb
cmc
push
scas
mov
mov
fs
jge
clc
je
or
xchg
dec
jns
movsb
scas
lea
mov
sbb
lock
pop
mov
bnd
or
add
enter
xchg
inc
add
mov
push
mov
mov
js
and
add
imul
paddq
push
mov
stc
jnp
les
rolb
push
cmpsb
adc
xor
cmp
sbb
mov
aas
roll
in
and
xor
cmc
int3
xor
movsb
mov
push
cmp
out
call
outsl
xlat
pop
pop
mov
xchg
xchg
sub
ret
push
mov
mov
or
inc
pop
das
stos
out
sahf
push
xor
jmp
mov
dec
scas
les
out
push
enter
push
mov
mov
and
lea
clc
jns
adcl
cmp
jg
mov
outsb
test
mov
std
rorl
xor
jge
add
sahf
jg
dec
sub
jno
test
cld
mov
rorb
xchg
xchg
dec
sbb
in
stos
cmp
mov
rol
push
xor
ds
jno
lcall
cltd
call
mov
je
shll
in
mov
out
dec
pop
and
jecxz
xchg
push
insb
cltd
fbld
aam
adc
lahf
daa
imul
ljmp
xor
aad
mov
mov
mov
popf
out
sub
sub
cmp
jne
jnp
cmp
test
in
inc
or
movsl
mov
cli
mov
ss
jbe
jno
pop
ds
xchg
ljmp
ds
cld
mov
mov
shl
xor
fbld
jmp
pop
out
mov
out
mov
daa
jmp
scas
xor
in
je
push
jecxz
and
mov
rcr
stos
js
out
dec
mov
sbb
push
addl
jae
fwait
add
and
jmp
out
xchg
mov
jl
cmp
pop
jmp
push
in
xor
fnstsw
imul
fisubrs
pop
mov
jl
test
add
mov
inc
pop
sub
mov
push
cmp
rcl
xlat
add
or
xor
adc
insl
cwtl
negl
fistpll
mov
push
mov
adc
cmp
sub
mov
ud0
mov
mov
cmpsb
mov
xchg
in
cmc
shr
aad
pop
mov
sub
inc
mov
mov
int3
add
pop
or
sub
mov
std
addb
cmpsl
nop
dec
mov
adc
fdivrs
add
loope
jns
lods
lods
dec
inc
enter
cmp
cmp
sub
sub
pop
test
cmpsl
gs
xor
lds
std
lds
cmc
imul
movl
ja
adc
popa
and
dec
inc
out
icebp
pop
sbb
push
dec
xchg
push
cmp
sbb
incb
rolb
push
cmp
mov
jns
jne
jae
and
loope
and
add
mov
jecxz
sbb
or
mov
fsubrs
cmp
mov
inc
outsb
mov
cmpsb
test
mov
and
mov
shlb
push
mov
cmp
lods
pushf
out
test
in
pop
popa
xlat
xchg
cmc
fisubs
jne
nop
and
cltd
adc
gs
jne
dec
xchg
lds
out
lahf
cmp
cmp
mov
sbb
add
les
add
add
push
leave
jo
hlt
outsl
out
es
dec
xchg
xchg
jnp
mov
or
add
leave
sub
adc
jl
mov
loop
in
jle
add
push
xchg
imul
test
pushf
push
inc
jnp
sbb
rcr
adc
in
in
adc
sub
imul
repz
pop
or
dec
imul
jecxz
test
sbbl
lcall
out
lds
jne
xchg
hlt
mov
dec
jg
stos
xchg
sub
xor
adc
aam
mov
fnstsw
in
addr16
mov
rorb
mov
xchg
in
daa
in
test
call
or
cmp
cmp
sub
mov
push
add
setno
leave
out
jns
sub
in
mov
mov
scas
push
pop
mov
add
pop
adc
hlt
insl
subl
mov
mov
jg
sub
inc
xlat
dec
push
out
cmpsb
push
and
or
stos
cmp
ja
mov
sub
xor
mov
lahf
test
xor
jmp
call
mov
outsl
push
push
stc
dec
popf
xchg
xor
mov
cld
dec
pminsw
jmp
popf
push
ljmp
mov
enter
scas
xchg
loope
cmp
mov
jp
or
and
fs
call
dec
xor
mov
jle
loop
push
fidivrl
inc
cmpsb
popa
lahf
push
addr16
inc
jne
jmp
bound
stos
subl
push
cld
mov
leave
xor
jb
lods
mov
jae
imul
mov
stc
lret
mov
mov
sub
adc
roll
ja
jns
idivb
xor
pop
xchg
pop
cmpsb
sbb
fimull
pop
mov
jmp
push
aad
push
and
jl,pn
dec
jae
xchg
loop
sti
es
ds
loop
xchg
sub
add
call
mov
adc
sahf
loopne
ljmp
pushl
icebp
stos
test
fwait
push
sbb
mov
lret
xchg
push
cmp
xor
mov
cmp
nop
pop
aam
pop
dec
stos
xchg
or
sub
jl
cmp
fsubrl
jp
sbb
cmpsl
insl
mov
mov
insl
mov
sbb
mov
cmp
inc
mov
mov
lock
iret
out
ret
adc
test
pop
and
sub
add
xchg
int
test
ret
mov
sbb
inc
and
jnp
jl
push
xchg
test
xor
mov
aaa
inc
mov
lahf
je
popa
lcall
jmp
pop
fbld
sbb
xor
sbb
mov
icebp
inc
dec
fs
or
cmp
in
xor
aad
mov
test
test
lahf
lea
mov
jp
lds
hlt
jmp
mov
add
inc
sbb
stc
push
in
and
inc
pop
or
push
xchg
pop
mov
pop
or
mov
cmp
lods
iret
movsl
cwtl
push
jae
in
mov
mov
and
ret
outsl
jge
xchg
push
mov
inc
xchg
cmp
enter
adc
sbb
imul
fdivrl
mov
inc
sarl
cs
pop
push
lea
in
mov
sub
popf
cwtl
inc
cmp
inc
stos
in
jnp
add
test
lods
inc
push
jae
aas
mov
cmp
xchg
dec
pop
fs
je
out
cmp
pop
sub
or
mov
jb
loope
dec
in
and
cltd
jb
dec
jl
cmpsb
imul
leave
push
ret
xchg
fcmovnu
call
push
scas
jns
jne
and
je
stc
cld
cwtl
lds
pop
cltd
xchg
aas
cmp
mov
pop
ljmp
scas
insl
addr16
in
cmp
scas
jle
iret
add
xchg
xor
xchg
adc
jb
out
xchg
adc
add
and
hlt
sahf
cwtl
ljmp
cmc
roll
push
loop
cmp
adc
cwtl
ficomps
xor
cmp
or
inc
mov
pop
pusha
dec
outsl
cmp
jle
xchg
jne
push
fistps
jp
inc
outsl
and
shll
sub
push
jge
xor
adc
pop
mov
and
xchg
push
jae
int3
jb
fcoml
mov
pop
sub
adc
inc
jle
inc
push
out
aas
fs
cmpsb
inc
and
cmp
dec
mov
xor
cmpb
adc
xchg
lods
pushf
mov
rorl
push
lds
cmp
xchg
test
mov
imul
js
mov
clc
shl
push
dec
jmp
cmc
mov
mov
adc
or
jle
cltd
pop
gs
je
push
les
jl
das
jb
push
mov
dec
sbb
lds
mov
and
xor
pushf
fs
mov
iret
cli
jle
and
pop
popf
xchg
aas
xchg
std
int
push
or
pop
cmpsl
mov
jno
roll
lret
cmpsl
jle
mov
add
bound
jecxz
xor
cs
xor
movsb
ja
lods
pop
mov
jge
mov
pop
mov
fldl
imul
stc
mov
pop
push
out
xchg
push
inc
sub
mov
push
cli
ja
in
test
outsb
nop
mov
pop
fidivrs
sbb
jg
xor
mov
sbb
push
and
cmpsl
es
and
add
mov
dec
mov
fimuls
adc
xchg
add
cmp
mov
out
xlat
sub
adc
lcall
jmp
dec
shr
sub
aad
aad
mov
loopne
dec
pop
jmp
inc
xchg
dec
or
ret
das
into
ret
je
ror
mov
mov
ds
jmp
test
xlat
mov
bound
jnp
rcl
dec
jno
inc
mov
leave
jle
mov
push
xchg
mov
shll
fwait
inc
mov
or
int3
jns
mov
sarb
pop
in
les
jb
scas
in
lods
jmp
mov
int
out
sti
cld
lret
lret
in
mov
sbb
aad
sub
inc
sub
sbb
into
push
mov
adc
push
loop
fistpll
lods
loop
mov
xchg
dec
adc
sbb
subl
and
in
pushf
fldcw
mov
push
mov
lret
adc
mov
sbb
mov
jns
out
mov
je
cltd
dec
lret
mov
aas
pop
sub
sahf
add
push
cmp
xorb
insb
and
les
inc
and
shl
xchg
push
or
sbb
push
dec
sahf
es
addl
lods
insl
das
mov
mov
mov
pop
mov
xor
repz
xchg
cmp
clc
xor
loope
push
and
mov
cli
sub
sbb
movsb
stos
or
push
repz
and
lahf
and
pop
or
movb
xor
aaa
push
leave
aad
inc
mov
xor
push
dec
jmp
shrb
pop
jne
dec
push
add
rorl
push
jnp
dec
into
cmpsb
push
or
mov
insl
sar
xchg
sub
les
adc
jns
rorl
push
in
mov
inc
mov
insb
loope
pop
inc
mov
jmp
movsb
pusha
jno
loop
and
loop
or
and
rcrl
pusha
je
sti
pop
xchg
sbb
out
lahf
outsb
xchg
in
test
rolb
push
flds
lds
mov
pop
push
inc
mov
xchg
pop
sub
arpl
cmp
xor
leave
add
pop
sub
add
push
incb
fimuls
lret
mov
jns
adcl
outsb
aas
sti
mov
lcall
push
jge
hlt
cmp
dec
inc
lcall
xlat
sbb
mov
push
mov
pop
inc
pop
loopne
test
rcrw
leave
mov
jecxz
sbb
adc
ret
mov
mov
mov
push
loop
pop
mov
jae
mov
stos
adc
fldcw
jp
fstpt
int3
pop
rcrb
sti
cwtl
mov
popf
ror
rcr
or
jl
sub
jp
cwtl
insl
adc
mov
xor
mov
jg
dec
push
dec
stos
lods
imul
enter
popa
push
adc
xchg
fstpl
xor
in
jne
lock
pusha
fwait
mov
mov
clc
xchg
and
add
cmpsl
xor
dec
push
shr
orb
cmpsl
push
sub
loope
cmpsl
xor
push
lret
pop
jo
lret
or
mov
shlb
scas
xchg
nop
lcall
addb
add
or
inc
inc
lds
loopne
mov
aaa
sbb
fstpt
mov
test
sbbb
arpl
lret
ds
add
adc
imul
cld
jnp
inc
lods
std
hlt
and
add
jmp
dec
inc
pop
adc
out
jbe
lcall
jmp
xchg
jbe
rcl
mov
leave
daa
cmc
or
imul
xchg
leave
jbe
lds
xor
sar
xchg
mov
pop
pop
rcll
push
sbb
movsl
lock
clc
xchg
into
push
js
les
ljmpw
pushf
loope
sahf
pause
lret
aas
fchs
ds
inc
push
frstor
sbb
jne
fucomip
pusha
pushf
outsl
mov
jne
nopl
icebp
or
pushf
dec
cmp
cmp
int3
dec
stos
xchg
add
sbb
dec
int
sbb
push
punpckldq
andb
aas
ror
lahf
or
sbb
dec
push
ds
pop
fbstp
xor
xor
xchg
es
xlat
pop
ficoml
pushf
insb
or
dec
inc
in
fdivp
xchg
leave
xlat
sbb
in
test
mov
cmp
negb
mov
out
mov
out
je
out
sbb
and
enter
sub
ljmp
or
loopne
mov
jb
sbb
in
sbb
and
push
cli
jl
xchg
sbb
ljmp
mov
popa
mov
daa
test
lea
lods
dec
int3
sbb
outsb
push
or
cmp
int3
sub
inc
xchg
popa
addr16
xchg
icebp
lds
test
insl
jmp
dec
lds
jo
cmpsb
push
or
push
std
pop
shll
or
ficoml
xor
jecxz
insb
mov
xor
sar
hlt
call
dec
cmpsl
ss
pop
jbe
add
mov
test
xchg
sub
sbb
xor
xor
adc
out
jg
sbb
and
mov
push
pop
xlat
outsb
mov
shrl
fmull
xchg
push
imul
in
fsts
mov
or
flds
aaa
cltd
ret
out
sub
xchg
xchg
lea
and
ss
add
mov
leave
cmpsb
jle
sar
flds
test
insb
ss
stos
xchg
cli
push
adc
out
out
jne
sbb
xchg
and
mull
mov
xchg
push
lods
ret
or
fldl
mov
add
nop
aam
push
ja
shl
in
push
jle
jmp
cmp
or
add
pop
shlb
test
add
xchg
pop
fsubs
into
jae
dec
in
loop
mov
gs
sub
jge
clc
int
loopne
and
add
stos
or
ret
sub
je
stc
in
ljmp
jns
push
fmull
ja
mov
imul
xor
orb
test
mov
adc
mov
sarb
pause
leave
lock
adc
pop
loop
mov
push
push
pop
icebp
scas
mov
pop
cmp
shlb
in
sub
loopne
sbb
push
dec
jo
inc
mov
loopne
aad
inc
jno
icebp
mov
cmp
or
hlt
stc
pushf
xor
lock
sub
gs
push
test
xchg
lods
mov
mov
jne
and
pop
data16
inc
sbb
int
inc
mov
lret
xchg
ret
or
inc
pop
pop
les
cmp
ja
repz
lock
adc
jnp
mov
das
cmc
push
jl
xchg
pop
inc
mov
sbb
in
stc
mull
jle
test
cmp
pop
xchg
mov
fistl
out
pop
fidivl
inc
test
jmp
daa
orl
mov
sub
pop
sahf
jae
pop
add
cmp
cmp
jp
fcomps
sub
sarl
mov
es
fisubrs
loopne
pop
sarb
push
sub
mov
add
jp
hlt
pop
bound
leave
push
push
pusha
dec
dec
cld
jmp
xchg
in
sbb
push
mov
sbb
dec
mov
sti
mov
daa
cmpsl
scas
pop
or
push
xchg
add
rol
sub
rcrb
sub
jns
and
jae
bnd
jg
or
test
inc
ret
xlat
enter
push
and
dec
mov
mov
push
test
repz
pop
jnp
push
insl
jnp
push
jo
fwait
sbb
ljmp
inc
mov
stos
popf
dec
add
cld
or
jp
sahf
xchg
mov
hlt
dec
fs
in
aam
sub
sarl
lahf
enter
sub
movsb
repz
out
push
scas
pop
ret
enter
iret
imul
xchg
adc
test
fdivl
add
xchg
cmpsl
sbb
rclb
add
mov
jbe
mov
xlat
outsb
mov
jecxz
or
idivl
scas
cmp
add
mov
sarb
or
rcrl
xor
push
ret
xor
mov
lahf
or
gs
add
jl
push
mov
cs
sub
stc
repnz
jp
sub
jge
mov
movsl
cmp
jmp
pushf
xchg
inc
nop
dec
cmp
ja
dec
addr16
fsubrp
jo
fidivl
jle
sub
out
lods
xor
fldl
dec
inc
sub
daa
test
xor
dec
mov
pop
push
add
mov
ljmp
jae
scas
loope
mov
xchg
fisttps
mov
inc
lret
push
pop
lret
xor
flds
test
aas
push
push
nop
outsl
jae
or
ja
out
add
inc
adc
dec
popf
jecxz
mov
or
mov
stos
fstl
adc
sbb
push
test
or
mov
out
loop
jne
imul
push
jne
fcmove
rcll
lret
xchg
mov
out
imul
add
mov
addps
xor
lds
adc
sbb
jno
lahf
addb
aam
cltd
mov
jbe
fstps
fwait
les
popf
clc
rclb
jg
inc
xor
shrb
mulps
mov
push
add
jns
popa
clc
xor
and
hlt
jno
lahf
lret
call
ss
insl
imul
mov
dec
mov
mov
into
popa
lods
mov
lds
xchg
das
adc
dec
pushf
pusha
or
subl
xor
jns
mov
fdivs
xchg
sub
sub
popf
addr16
add
jecxz
mov
rcl
in
xchg
mov
lds
icebp
lea
xlat
bnd
dec
and
mov
out
dec
jmp
arpl
add
xchg
mov
push
movsl
inc
fcomps
ficompl
jg
xor
mov
loop
cmp
mov
pop
push
cld
ret
jmp
ja
mov
xchg
xchg
call
cmc
test
pop
scas
bound
movsl
pusha
pop
ds
sbb
mov
ja
cwtl
aas
shrl
adc
jo
cmp
jmp
dec
clc
adc
shlb
lock
stos
xor
fnstsw
shll
sarl
inc
cmp
fidivs
daa
test
push
out
mov
cmp
inc
cmpsl
orb
mov
es
pop
xchg
cs
out
mov
or
aad
mov
ret
nop
sbb
cs
fnstcw
popa
out
insl
test
adc
cmpsl
sub
push
negb
out
push
pop
aam
pop
push
mov
push
xchg
sbb
js
adc
mov
loopne
push
push
pop
xchg
inc
xchg
mov
dec
in
cwtl
cmc
stos
movsl
ja
jl
loope
push
mov
and
cld
divl
xchg
in
clc
mov
mov
push
sbb
xor
repnz
jae
mov
std
test
pushf
mov
add
xchg
pop
test
mov
ret
inc
push
push
popa
popf
push
insb
xchg
repnz
mov
popf
test
xchg
add
xor
out
xchg
popf
lret
push
test
repnz
jno
jne
aad
into
ljmp
shrl
xchg
dec
xor
pushf
out
lcall
adc
mov
adc
enter
cwtl
in
push
jl
je
outsl
mov
je
sub
xor
cwtl
mov
or
inc
pusha
xor
aas
ficompl
or
sbb
data16
sbb
in
xchg
mov
jp
dec
ds
fwait
leave
jb
icebp
xchg
enter
sub
lahf
jae
ja
sbb
or
and
mov
into
push
mov
xchg
dec
push
out
push
loopne
push
and
jle
out
and
inc
out
sbb
mov
sbb
js
out
loopne
mov
jno
mov
lods
pop
lret
rorb
and
adc
push
push
sbbb
scas
in
and
jne
inc
add
xor
dec
out
dec
sbbl
sub
ret
mov
jbe
into
frstpm(287
popa
in
leave
aam
adc
idivb
out
lahf
mov
jb
mov
push
in
jb
jp
xchg
ror
test
shlb
fsts
xor
movsl
mov
out
mov
cmp
loopne
call
push
loopne
mov
jbe
push
shll
jo
mov
xchg
cmpsl
insb
jb
fstpl
push
ljmp
push
in
es
and
cs
fimull
add
mov
and
inc
mov
mov
sub
daa
dec
adc
adc
adc
xchg
xchg
jge
inc
shrl
dec
jmp
sbb
cmp
pop
rclb
sbb
fimull
ds
mov
sahf
je
push
mov
gs
add
jns
xchg
fbstp
mov
fucom
jl
add
xor
push
fs
cld
jae
ljmp
mov
movsb
int3
or
push
xchg
daa
aad
xchg
std
lea
and
cmp
sub
dec
dec
push
scas
inc
xchg
jl
out
fldt
hlt
ret
dec
and
dec
adc
cmp
or
jae
adc
xchg
xor
xchg
pop
xor
mov
loopw
jp
popa
sbb
mov
mov
pop
rorb
outsb
mov
addr16
js
xor
cwtl
ss
test
sbb
bnd
sbb
sub
pop
dec
xchg
outsb
aas
test
jo
popf
leave
inc
mov
dec
in
or
es
adc
lock
icebp
nopl
repz
cmp
enter
in
sub
loope
jg
shl
and
mov
in
mov
pop
cmpb
sbb
xchg
xchg
push
ljmp
and
into
fs
in
sub
into
mov
js
push
sar
and
test
push
cmp
mov
cmc
icebp
pop
int3
and
sbb
adc
xchg
ds
xor
inc
ror
or
out
dec
repnz
cli
xchg
cmpsb
in
in
pop
loope
jl
or
or
and
lret
dec
in
or
pop
test
mov
fmul
xchg
mov
shlb
push
hlt
loop
icebp
jg
push
mov
xchg
imul
push
push
jmp
and
into
fcompl
xchg
lret
and
add
cmpsl
push
popf
hlt
pushf
cmp
cli
popf
ds
push
xchg
lcall
xor
pop
sub
cmpsb
inc
push
and
add
inc
jmp
cmp
jecxz
rorb
mov
push
jle
pop
or
cmpsb
leave
addr16
or
dec
ss
jmp
mov
fnstenv
mov
cmp
addr16
mov
leave
and
mov
mov
movsl
in
adcl
jnp
mov
mov
pop
in
inc
sub
inc
cmp
addr16
mov
lods
mov
adc
mov
inc
hlt
nop
push
aas
leave
adc
lahf
repnz
or
loop
in
and
aas
push
xlat
leave
movsb
in
pop
inc
mov
push
jg
mov
dec
push
pshufw
pushw
push
xorb
jmp
and
push
mov
test
xchg
fcomp
js
mov
lods
popa
inc
mov
icebp
sub
jo
sub
jp
cmp
lret
popa
iret
insb
xchg
insb
fildl
or
push
add
push
loop
lahf
dec
fisttps
fmul
and
jp
out
cmp
ljmp
cmp
into
dec
and
dec
xor
and
imul
pop
cld
arpl
je
mov
scas
data16
icebp
les
dec
mov
nop
lods
adc
mov
jg
sub
inc
cmpsb
jns
xlat
inc
scas
pop
adc
or
scas
mov
jle
movsb
outsb
add
cmpsb
jnp
add
sahf
sbb
hlt
lret
in
sahf
and
loop
scas
pusha
negl
int
je
inc
dec
mov
push
add
aas
xor
mov
les
out
push
ljmp
les
aaa
mov
mov
mov
and
inc
jns
sahf
das
lret
sahf
repnz
lods
data16
sbb
push
push
mov
lret
jp
push
popa
mov
stos
fisttpl
mov
popa
mov
das
clc
jb
sub
xor
and
jmp
jae
iret
ds
das
loop,pn
push
cld
aad
insl
ret
inc
pop
push
sub
ret
test
jo
loopne
sub
push
push
imull
jg
ss
mov
inc
cs
push
xchg
out
out
sub
or
push
inc
addl
orl
mov
sti
pop
xor
mov
xor
std
mov
or
cmp
jecxz
or
sbb
add
fwait
ret
push
imul
dec
ja
jp
cwtl
pop
outsl
rorl
jbe
daa
cld
mov
je
sti
sti
push
and
push
ja
mov
out
mov
loopne
push
inc
jg
and
inc
mov
jl
cld
icebp
sarb
cmp
push
mov
sbb
cwtl
cs
repnz
cmp
xorb
inc
dec
jo
or
iret
filds
cmp
mov
in
inc
int
ja
push
cmp
or
cmp
sbb
mov
pop
fs
jbe
sbb
daa
add
inc
repz
lods
pop
mov
ljmp
xchg
lods
sub
jmp
shrb
xlat
mov
and
iret
sub
mov
in
inc
mov
xchg
cmovg
inc
push
cltd
dec
lods
fldt
aam
stc
in
or
fcomps
xchg
jbe
clc
outsb
add
cmp
or
xor
xor
stos
pop
xchg
or
jmp
pop
lods
fldln2
sub
in
lret
ja
repz
fcmovu
and
cmp
jp
jo
mov
dec
or
mov
mov
cmp
mov
les
push
imul
sahf
aam
push
test
mov
inc
add
daa
push
repz
inc
clc
and
xchg
aad
sti
or
icebp
lahf
mov
sub
fmull
sbb
adc
or
mov
jge
cwtl
push
iret
adc
push
cmp
lock
pop
test
test
mov
outsl
push
lods
jo
js
or
sti
inc
sbb
adc
jbe
xchg
in
test
sbbl
loopne
adc
dec
jp
jl
pop
cmp
push
add
xor
popf
enter
lcall
inc
outsl
sbb
mov
addl
inc
jmp
xlat
mov
xchg
ds
out
lret
and
iret
cmp
xor
sbb
rcrb
aam
in
insb
ret
jmp
jnp
les
sub
push
fnstcw
xlat
lahf
mov
cltd
loop
mov
insb
and
pop
xchg
inc
mov
notl
jl
addr16
xor
cmp
dec
loope
fiaddl
and
xchg
int
fdivrs
int
sbb
daa
sbb
push
cltd
or
ret
pop
cmp
js
mov
loope
jge
data16
cmp
push
xchg
fidivrl
dec
or
cmp
rorl
ljmp
divb
jne
sub
mov
xor
pop
xor
out
neg
leave
sbbl
out
outsb
jmp
inc
ds
arpl
mov
and
xor
push
cwtl
jns
push
inc
xchg
pop
daa
repnz
mov
ret
shrb
rolb
fcompl
pusha
adc
mov
mov
fsts
cmpsl
cmp
mov
and
insl
loope
cwtl
xor
dec
mov
pop
andl
and
adc
lahf
test
mov
mov
std
pop
cmp
xchg
mov
loope,pt
sbb
push
dec
mov
cld
push
mov
jne
rcr
popa
fdivs
push
add
dec
push
outsl
adc
pop
movsl
jb
xchg
dec
adc
add
fisubs
xbegin
lea
add
jmp
jmp
inc
repz
in
sub
cld
jle
leave
dec
jp
xchg
subb
stos
inc
mov
cmp
dec
sbbb
lret
jns
adc
lret
arpl
scas
sbb
mov
mov
push
dec
jns
push
mov
pop
in
in
xor
mov
jle
ljmp
iret
mov
daa
or
and
cmpb
sub
push
sti
pop
pop
adc
adc
push
adc
pop
push
ja
pop
dec
mov
ror
test
cmp
vmread
pop
sbb
mov
xchg
jo
inc
pop
mov
push
push
inc
xor
push
push
mul
cmpsb
or
mov
adc
cmc
stos
test
ljmp
std
lock
mov
imul
inc
loope
adc
add
mov
test
into
in
out
inc
notl
add
into
lcall
int
mov
sub
cmp
out
sbb
jecxz
shr
pop
and
push
out
pop
data16
fwait
add
lock
addb
cmp
and
or
pop
and
cmp
or
or
sbb
ja
inc
mov
mov
imul
cwtl
push
jae
mov
test
or
test
jle
pop
mov
mov
mov
mov
sub
orb
lock
jmp
clc
stos
ret
mov
pop
fwait
sub
sbb
cmp
jp
movsl
xchg
sub
fsubl
push
add
add
call
jne
xchg
xlat
rol
outsl
int
xchg
data16
push
jle
jnp
clc
in
fsubl
jo
dec
xor
add
mov
inc
ja
int
cmpsb
push
mov
or
mov
arpl
movd
cs
out
mov
add
xchg
imul
ljmp
imul
addr16
sbb
test
adc
or
rep
sub
lret
into
int3
dec
xchg
mov
ds
daa
pop
in
rol
popl
cmc
adc
adc
js
int3
push
fildll
ss
scas
push
adcb
rclb
mov
push
xchg
sub
push
fldcw
cmc
or
lea
test
jg
fiaddl
mov
int3
adc
popa
faddl
dec
xchg
stos
popf
jmp
shlb
in
cmp
int
mov
sahf
fstpt
out
test
and
add
hlt
loopne
mov
insb
cmpsb
cmp
xor
xor
js
popa
repz
mov
and
mov
insb
xchg
shlb
test
adcl
pop
mov
inc
push
inc
movsl
mov
sbb
push
cmp
push
lahf
jne
andb
push
fucomip
mov
aad
pop
mov
in
cwtl
fdivs
and
xor
add
adc
jbe
out
hlt
cltd
pop
dec
adc
out
popa
mov
orb
sbbl
fimull
inc
test
call
ret
in
push
test
xchg
jecxz
roll
inc
scas
push
stos
and
inc
jg
cmc
jne
mov
lods
into
out
es
ja
fcoms
aad
outsl
inc
cmp
leave
and
hlt
xor
xor
insl
mov
xor
out
les
add
loope
js
lret
mov
xor
add
and
xchg
fcomps
mov
mov
cmp
loopne
js
shll
dec
into
dec
in
repz
stc
cmp
es
jae
inc
inc
pop
push
add
dec
or
ja
xchg
js
notb
insb
dec
aad
push
insl
inc
jp
push
mov
dec
int3
dec
scas
jmp
and
ffree
push
loope
pop
xchg
or
addl
and
sbb
mov
jp
xor
and
and
xchg
scas
mov
pop
sub
push
lods
pop
insl
xchg
iret
mov
xchg
lahf
nop
cmc
or
mov
sub
das
adc
inc
test
jne
mov
xchg
xlat
push
loope
out
dec
or
mov
xrelease
insl
ret
lock
dec
and
sub
xchg
into
test
push
mov
adc
into
lret
mov
mov
out
es
pop
jno
in
add
out
inc
cmpsl
scas
xor
jp
inc
movsl
stc
xchg
outsb
or
pop
test
push
and
mov
mov
push
xor
ja
out
js
add
movsb
andb
lds
push
sbb
in
pop
mov
pop
orb
push
pop
xor
inc
push
sub
nop
cmp
lcall
sub
fidivrl
push
mov
movsb
lock
call
in
jne
in
xor
mov
inc
popa
js
cmp
incb
das
cmpsl
cwtl
shlb
xor
xor
pushf
popa
fistps
dec
data16
inc
add
dec
mov
nop
test
hlt
adc
repnz
dec
mov
fwait
cmc
sahf
fwait
mov
add
mov
in
fs
std
sbb
pop
test
jmp
jecxz
minps
shr
push
fsubrp
cli
sub
add
push
jecxz
daa
lods
cmp
hlt
pop
int3
sub
std
add
jmp
inc
or
shr
jne
sarb
lods
sub
out
shrb
mov
mov
lret
aam
pop
leave
sbb
clc
test
fsubr
testw
test
in
cmp
dec
iret
push
mov
or
movsb
push
mov
out
repnz
popf
xor
lock
mov
inc
push
mov
cs
int
fmulp
jo
xchg
bound
or
adc
clc
jne
mov
jo
mov
movsb
ror
mov
push
int3
std
cld
ja
movsb
ljmp
ret
push
adc
add
movsb
add
xlat
mov
bound
cmpsb
clc
decb
xor
shll
xor
or
xlat
cmp
imul
or
sbb
and
pop
push
dec
movb
jbe
sbb
jb
iret
push
mov
dec
sub
push
add
or
imul
xor
nop
pop
xchg
mov
lcall
push
arpl
jb
push
xor
scas
mov
jae
xchg
lret
fmull
shrb
stos
je
lsl
dec
xor
pop
shll
or
push
add
mov
sub
sub
add
gs
cmpsb
sbb
insl
cmc
jb
cmc
out
into
mov
loopne
insl
cmp
fdivr
cmpsl
cmpsb
xchg
mov
cmp
scas
mov
sti
aam
mov
push
les
or
xchg
push
xlat
mov
std
je
jmp
les
dec
jle
cltd
or
add
movsb
sub
arpl
les
mov
push
pop
shrl
leave
jbe
sbb
push
push
and
cmpsb
std
out
push
rorb
jmp
repnz
cmp
in
add
sbbl
loope
sub
push
aad
jge
jle
cvtdq2ps
xor
pop
subl
in
repz
imul
fbld
mov
stos
jne
push
xchg
imul
jnp
add
fs
mov
mov
es
sub
inc
push
movsb
xchg
mov
aaa
fcomps
add
or
pop
mov
add
push
adc
sbb
sbb
loop
xchg
roll
jl
mov
adc
clc
mov
push
mov
xchg
sbb
icebp
out
adc
adc
xchg
pop
pop
or
and
ja
sub
dec
mulb
mov
xor
and
pop
das
or
test
repz
pop
sbb
add
lret
outsl
inc
fnstsw
adc
fwait
jp
imul
jb
jb
leave
sub
or
sahf
aas
ret
lret
cmc
mov
xchg
repz
rorl
imul
mov
mov
dec
or
pusha
arpl
jnp
pop
nopl
and
mov
sub
scas
adc
push
xor
dec
pop
cmp
jb
loope
test
cmp
in
scas
int
movsb
mov
push
cmp
mov
loopne
das
dec
loopne
cmp
in
outsb
leave
in
sub
out
xchg
cmp
out
mov
fwait
rorb
pop
adcl
fimuls
push
roll
and
or
orl
or
testl
dec
mov
ljmp
rolb
and
pop
add
cltd
inc
subl
and
sbb
cmp
push
inc
sub
adc
mov
cmc
int
jecxz
dec
inc
cmp
sbbb
sub
cmc
rcrl
sub
mov
mov
xor
jno
jg
xchg
stc
add
ffreep
pop
cmc
shll
xor
enter
cmp
leave
repnz
in
cmp
mov
out
cmp
sbb
or
jno
aaa
rolb
pop
std
out
data16
push
adc
out
testl
sub
jne
mov
stc
pop
movsb
pushl
add
push
enter
adc
adc
mov
xchg
jg
pop
daa
cld
daa
push
xchg
insl
cwtl
cmp
movsb
subb
push
fcomip
sahf
and
pusha
call
sbb
jb
insl
movsb
lea
mov
sbb
cmpsl
test
jg
pop
icebp
sbb
shll
mov
aas
push
cmp
dec
mov
pop
inc
mov
adc
and
iret
push
sub
xchg
pop
xchg
pop
adc
sub
in
inc
xor
das
mov
mov
fists
stc
inc
divb
data16
fidivl
dec
jb
clc
cmp
adc
pop
test
cwtl
fstps
andl
sysret
dec
sub
adc
pop
loop
mov
add
sbb
icebp
jge
mov
loope
fadds
fwait
daa
jae
outsl
jecxz
stos
xchg
sub
mov
mov
and
jae
bound
cmpb
leave
lods
ss
adc
ja
inc
mov
lock
sbbb
into
jne
xchg
imul
loopne
fs
sbb
popa
fbld
and
cmp
imul
scas
js
push
lods
cmp
adc
insb
decl
jle
xchg
stos
xor
cmp
dec
lods
jl
mov
mov
rcrl
jle
or
mov
sub
jecxz
pop
ret
sub
jo
test
mov
fdivrs
fidivl
rolb
adc
sub
or
cmpsb
and
aas
xor
cmpsb
lea
movsl
adc
dec
addr16
cmp
dec
mov
mov
icebp
ss
nop
fistps
sbbl
push
pop
xor
icebp
lods
and
pusha
xchg
lods
fimull
repz
xor
mov
pop
fmuls
push
pop
std
push
mov
popf
sub
push
stc
repz
lods
push
jmp
inc
or
lret
shlb
insb
test
lcall
ja
add
ret
dec
push
sahf
test
mov
fsqrt
push
sahf
clc
in
xor
scas
inc
lods
aam
popf
xchg
mov
pushf
push
pop
ss
aad
bound
add
pushf
cs
int3
call
movsl
adc
add
sbb
cs
sti
cmpsb
xchg
fsubs
xchg
adc
pop
adc
jne
inc
mov
fsubrp
lcall
xchg
jb
inc
test
lods
dec
loop,pn
sub
push
fdivs
pop
jnp
jle
jb
ja
fcomp
lret
dec
adc
fs
fsubs
loop
pop
cmc
mov
mov
aam
push
hlt
popa
or
inc
fcmovnu
push
jo
roll
xchg
dec
loope
cmp
mov
cli
inc
cmp
add
jmp
fsubrl
mov
mov
xchg
mov
test
and
xchg
test
popf
adc
or
pusha
cmp
push
mov
push
cmp
enter
imul
mov
cmp
inc
imul
adc
xchg
lods
jp
ljmp
subl
in
test
jae
dec
lahf
or
mov
into
es
xchg
scas
sbb
pop
and
xor
sbb
leave
in
mov
jbe
add
rcl
pop
sub
mov
pop
jno
dec
fisubs
adc
and
push
dec
mov
and
add
in
cld
push
and
subl
sbb
sub
adc
data16
icebp
pop
jbe
andl
mov
lods
les
dec
call
pop
cltd
dec
rcr
leave
leave
or
sbb
fcmovbe
mov
pop
sbb
and
loop
push
adc
in
xor
dec
sbb
repnz
in
mov
stos
xor
inc
cmc
sub
jo
or
push
divb
mov
adc
xlat
addl
outsl
and
mov
inc
int3
cwtl
jbe
cli
icebp
enter
xor
fistl
cmpsl
jle
imul
add
in
jbe
jnp
loopne
out
add
stc
ret
jge
loope
mov
and
jno
mov
test
push
sbb
dec
sub
jp
je
push
inc
and
push
ds
fstps
frstor
sub
and
subb
pop
and
jae
sub
cmp
or
loop
imul
add
ds
insl
cmpsl
hlt
imul
mov
bound
jb
cmp
ja
mov
sbb
mov
dec
cmp
fiaddl
aad
or
insb
inc
mov
and
xchg
jmp
popa
nop
rolb
fstl
test
mov
cltd
xchg
sub
es
pop
bnd
repz
ror
js
in
getsec
dec
cmc
xchg
enter
sbb
xchg
jbe
dec
daa
and
rclb
jmp
mov
loope
jl
xchg
scas
pop
and
or
mov
jecxz
movsl
push
loop
fmull
sub
and
popf
mov
add
inc
out
mov
dec
fcoms
shll
sub
int
sbb
inc
test
xor
js
xor
fucomi
add
sti
adc
lods
pop
and
or
jp
dec
jnp
shrl
hlt
adc
cmp
push
cmp
adc
clc
pop
test
clc
mov
xchg
inc
dec
repnz
mov
push
mov
adc
sar
test
cwtl
ja
fimuls
push
push
test
jge
jnp
mov
ss
mov
cli
cwtl
daa
or
fisttps
cmp
mov
mov
ljmp
dec
fcmovbe
test
hlt
dec
adc
outsb
xor
cmp
cmpsb
imul
pop
cmp
aaa
and
aaa
lock
mov
insl
cli
and
loop
popf
rolb
cmp
test
jno
fmull
xchg
cmc
int3
xor
xchg
outsb
sbbl
addl
cmp
adc
mov
add
aad
push
sbb
loop
sbb
mov
fwait
sahf
cmp
jg
xor
push
and
xor
sahf
xchg
mov
or
mov
repnz
fs
std
inc
aas
push
les
push
jle
pop
sub
and
movsb
js
test
mov
int3
sub
int3
mov
das
adc
shlb
lret
movsl
jae
adc
add
scas
out
mov
sahf
mov
mov
sub
insl
and
jle
imul
or
cmc
mov
cmpsb
subb
add
sbb
add
add
arpl
mov
jmp
in
imul
rolb
lahf
xchg
mov
les
lret
enter
lret
mov
xchg
push
aas
push
xchg
fsubr
mov
fdivr
push
fs
insb
push
nop
add
lods
mov
out
repz
test
test
sbb
pop
mov
inc
pop
lea
or
fisubs
jbe
mov
xchg
jg
movsb
mov
xchg
mov
mov
fisttpl
xchg
into
in
in
fcomps
and
xor
ds
pop
fldpi
rcrb
push
sbb
cmpsb
xchg
insb
sub
lds
test
das
jle
sbb
rcrl
lret
icebp
loop
data16
sbb
dec
push
inc
mov
adc
xorl
and
jae
mov
xchg
lahf
imul
push
and
out
mov
hlt
sbb
sub
push
and
mov
sbb
or
js
fcomps
push
scas
insl
xchg
sub
in
ret
cmpsb
mov
insl
fld
sbb
jmp
jecxz
sbb
aaa
pusha
pusha
push
sbb
jmp
push
nop
fsubrs
enter
fs
mov
popw
in
mov
sub
scas
sar
jg
inc
cmc
xchg
repz
add
aad
xchg
or
movntq
jle
adc
mov
iret
arpl
sar
pop
sbb
lods
mov
fcmove
popf
int
jo
add
lds
or
addl
roll
cwtl
lret
or
test
repz
jecxz
shll
ljmp
int3
xchg
xchg
inc
mov
pop
mov
add
inc
cmp
add
std
lcall
pop
add
les
or
lods
pmulhw
aam
pop
xchg
lock
mov
push
mov
fsub
int
js
adc
out
pop
jae
or
enter
lcall
aam
xchg
mov
pop
arpl
ret
flds
mov
lock
mov
arpl
out
cmp
lret
fidivl
xor
dec
mov
adc
pop
adc
inc
sbb
xor
pop
inc
mov
stc
add
sarb
iret
das
xchg
dec
data16
push
dec
movsl
cmp
mov
lods
and
ficomps
je
ja
js
sbb
addb
call
xor
shlb
dec
shl
je
jge
mov
stos
push
mov
ds
fstpl
push
icebp
add
nop
pop
cmp
cmp
and
inc
lea
arpl
mov
in
mov
mov
jge
mov
lds
arpl
jl
shrl
pop
fs
pop
mov
add
push
and
inc
xchg
js
pop
pop
fildll
into
jne
in
cmp
repz
and
test
add
fists
adc
pop
negb
inc
outsl
jne
sbb
in
xchg
stos
shl
aam
enter
push
stos
adc
adc
jp
and
mov
into
lret
and
aaa
outsb
and
nop
mov
mov
adcb
mov
mov
pop
xchg
push
mov
stc
inc
dec
in
push
jno
adc
pop
enter
xchg
sbb
insl
jo
mov
int3
neg
fdivrl
push
in
add
add
outsb
push
lock
insb
jae
test
ja
into
sti
push
push
arpl
add
lods
jmp
dec
fcmovnbe
jg
mov
add
int3
mov
adc
add
and
fbld
loope
popf
sbb
jbe
and
fcoms
inc
sarl
cmp
leave
rcr
shlb
pop
inc
sbb
mov
mov
insl
jne
lds
mov
sbbl
lcall
or
mov
or
cmp
js
adc
je
push
stos
add
bound
push
jno
add
adc
repnz
or
js
sti
mov
cmp
pop
subl
xchg
inc
into
mov
outsb
adc
sbb
mov
push
negb
gs
push
inc
push
ja
inc
mov
dec
stc
sub
imul
jb
aad
adc
jns
fcoms
dec
xor
ja
push
cmp
pop
stos
loope
int
mov
mov
add
dec
je
dec
test
push
fisubrs
addl
jne
mov
add
daa
int
xchg
nop
fwait
addr16
xrelease
or
cmp
push
je
shlb
stc
popa
andl
in
stos
sahf
sbb
shl
popf
icebp
in
adc
aam
xor
jne
pop
jnp
cmp
sub
shll
shlb
stos
in
mov
mov
aaa
adc
mov
push
test
je
fstpl
jp
shrl
cmp
cwtl
lret
repz
leave
mov
pop
test
sub
cmp
and
mov
andl
jl
mov
sbb
jne
cmp
loope
mul
lret
cld
test
daa
inc
xchg
daa
xlat
iret
dec
jecxz
mov
inc
xchg
repnz
repnz
adc
pop
inc
movsl
and
and
bound
push
push
cmp
add
imul
fadd
sbb
popa
int
sahf
pop
les
xchg
add
pushf
out
sarb
test
hlt
popf
movsl
jge
lds
mov
int
push
ds
ss
lock
enter
fbld
mov
inc
pushf
aas
lea
and
jb
mov
out
cmpsl
lods
sbb
cmp
jb
dec
sub
pop
jmp
dec
imul
add
jecxz
repz
icebp
cmp
adc
mov
xor
movsb
test
dec
outsl
adc
sub
mov
in
cmp
jge
push
aad
dec
rcl
push
adc
mov
fdivs
in
out
lods
sbb
test
lret
test
out
xor
inc
pop
ljmp
cmpsl
in
pop
sub
enter
dec
mulb
inc
lds
and
jg
cltd
add
fisubrl
pop
cmp
loopne
insl
shrb
xchg
adc
add
in
sbb
push
xchg
subb
or
inc
out
jmp
mov
mov
xchg
xor
mov
mov
xchg
cmp
and
data16
cmpsb
ret
imul
out
or
mov
movsb
xchg
and
in
or
daa
popf
mov
cltd
mov
loopne
aam
aaa
inc
ljmp
jb
imul
and
lret
adc
fstps
push
cmp
test
mov
cmp
lods
mov
and
lcall
sbb
push
pop
xchg
sbb
dec
adcb
cmp
idivl
es
daa
or
in
addl
test
shrl
addb
lods
loope
fisubrl
xchg
out
outsl
mov
mov
cmp
and
lret
lods
loopne
xor
mov
pop
hlt
inc
and
insb
incl
sub
pop
addb
dec
stc
loopne
inc
jns
lahf
ret
int
pop
pusha
cmp
sahf
out
shlb
xchg
push
test
mov
lcall
adc
dec
push
sahf
shlb
jmp
push
repnz
jae
xchg
aad
pop
scas
dec
push
pop
popa
mulb
out
inc
pop
cmc
push
scas
lahf
push
push
repnz
dec
cltd
mov
out
mov
sbb
fdivrs
aad
in
cmp
insb
adc
in
in
dec
int3
stos
imul
xchg
sbbl
mov
pop
ljmp
mov
xchg
fs
nop
jge
inc
clc
and
dec
jmp
sub
aas
scas
or
outsb
pop
aas
cltd
inc
jg
mov
add
or
mov
data16
mov
jmp
fisttpl
jmp
hlt
mov
and
cmp
hlt
and
shlb
in
jmp
loop
adc
andb
push
lods
push
fstp
pop
xchg
cld
and
and
mov
lock
xor
lods
xor
jno
and
xchg
lcall
idivl
aam
xor
and
test
push
sbb
gs
pop
int
aaa
ljmp
dec
cltd
add
test
mov
ss
sbbb
leave
push
jnp
lock
mov
push
popf
lock
fwait
aaa
inc
pop
loop
dec
add
pop
sbb
cmpsb
and
xchg
sbb
adc
rcrl
mov
movsb
push
xchg
xor
lea
rcll
pushf
push
mov
iret
or
inc
mov
gs
in
jo
push
mov
lcall
lret
stos
les
inc
or
jbe
pop
dec
insb
xchg
movsl
out
icebp
jae
inc
jle
lods
xchg
pop
fwait
leave
mov
in
mov
ficomps
mov
aas
out
add
fwait
jg
fistpl
ret
popa
ret
mov
cmp
sbbb
mov
pop
xorb
xchg
ja
rcr
std
mov
rclb
repnz
into
jno
jb
xchg
jae
test
push
shl
inc
xorb
in
aam
leave
ror
ja
scas
repnz
lock
mov
pop
pop
push
sbb
loop
pop
xor
dec
fucomip
pop
push
in
ficoms
in
xchg
repnz
sbb
xor
add
aas
push
jl
mov
xchg
subl
scas
mov
adc
fiadds
and
cmp
or
and
mov
mov
and
or
ficoml
popf
mov
test
cmp
pop
pusha
pop
das
mov
jg
jbe
jae
cmp
lahf
add
or
pop
repz
push
cmpsb
xchg
pop
sub
subb
enter
push
fidivs
ret
inc
int
loopne
xlat
adcl
and
out
fbld
in
cmp
add
adc
push
sahf
inc
int3
ret
mov
in
mov
adc
mov
loopne
clc
frstor
jne
rcr
mov
jae
mov
mov
movsl
mov
rcrb
sar
shll
test
mov
pop
sahf
mov
sbb
imul
pop
cs
dec
mov
mov
pop
and
loop
xorl
or
mov
inc
popf
lea
mov
nop
mov
cmpb
pop
cmpsl
cltd
lods
sub
test
call
jle
hlt
cmp
mov
mov
jo
pop
mov
repnz
fdivl
mov
rclb
push
cmp
mov
mov
mov
dec
adc
ss
sub
std
sub
shll
imul
push
xlat
jns
and
aaa
test
mov
rorb
rcll
sbb
iret
repnz
inc
lock
mov
es
inc
bound
pop
outsb
inc
cmpsl
mov
outsb
scas
xor
xor
test
pop
or
push
push
inc
pop
orb
mov
arpl
and
in
cmp
xchg
add
cmp
mov
jae
lea
pop
popa
add
jbe
sub
in
fcoml
push
int3
popf
xor
ds
mov
inc
jns
iret
decb
sub
mov
xchg
enter
jp
and
pop
rolb
popl
push
add
pop
test
xchg
in
push
and
jmp
je
lcall
sbb
inc
adc
dec
jbe
insl
xchg
dec
dec
fldcw
test
stos
push
scas
sti
lcall
push
rcr
inc
rcrb
es
ljmp
rcrl
pop
insl
jb
sub
cmp
sub
mov
adc
dec
dec
lahf
bound
jmp
mov
pop
sti
mov
out
xchg
stos
in
mov
sub
ficomps
repnz
pop
mov
sti
dec
int3
mov
mov
imul
mov
xlat
imul
add
add
ret
or
mov
sbb
xchg
cwtl
popa
rorb
mov
daa
xorb
xchg
mov
dec
cmp
adc
jo
repnz
pop
cmp
cmc
or
xchg
pop
push
mov
push
lcall
mov
push
xchg
mov
dec
xlat
sbb
add
or
rep
jmp
pop
add
popf
push
mov
std
mov
mov
scas
daa
cmp
out
stos
mov
jae
xchg
dec
or
lods
popf
adc
js
lea
jg
push
sbb
add
adc
iret
dec
xor
shll
cmp
sub
mov
sarl
pusha
int3
cmp
aaa
ss
adc
jbe
jmp
mov
outsl
xchg
push
xchg
jne
cmp
aam
lret
jge
fyl2x
mov
loopne
dec
movq
insl
insl
in
sysexit
stos
lret
push
in
sub
stos
xchg
inc
or
popa
mov
xlat
mov
je
test
arpl
xchg
insb
testb
fnstcw
push
sub
hlt
stos
jg
add
or
jle
pop
pop
jl
std
adc
cmp
ljmp
inc
das
mov
pop
push
adc
movswl
call
mov
scas
into
push
fldt
inc
inc
mov
decb
sbb
mov
fwait
mov
ds
ss
insb
test
rorb
idivl
mov
pushf
hlt
outsl
cs
xchg
xor
mov
adc
lret
mov
subl
lock
pop
leave
leave
outsl
fsubrs
ja
jno
shll
aad
out
pop
mov
or
jl
mov
jb
in
jne
cmpsb
mov
mov
pop
ja
cmpsb
jmp
xchg
scas
xchg
sub
jge
inc
sbb
cmpb
cld
fnstcw
ret
pop
lcall
xlat
in
imul
jns
mov
pop
mov
and
xor
and
and
iret
movb
adc
push
add
int3
push
pop
jge
enter
imul
push
xchg
divb
mov
imul
fdivrl
adc
inc
mov
push
push
arpl
sub
xchg
movsl
mov
repz
hlt
xchg
fwait
mov
rcrb
popf
lret
sbb
mov
xor
in
cltd
cmp
add
loop
xorb
sub
push
sub
jge
mov
mov
xor
adc
outsb
loopw
cmp
test
popf
mov
or
mov
push
test
xchg
andl
jp
mov
fdivrl
stos
jmp
rclb
dec
rolb
inc
into
cmc
xlat
add
mov
data16
test
out
xchg
fcmovnb
sbbb
lock
push
lea
dec
xlat
cmp
xchg
popa
add
ret
jmp
mov
scas
pop
adcb
jle
push
fstl
adc
icebp
sbb
stos
or
stos
adcb
jno
rcll
fidivrs
mov
jp
in
pusha
cmpsl
mov
jae
push
inc
inc
clc
outsl
add
out
jbe
add
loope
mov
arpl
jl
cs
movsb
imul
sub
ja
repz
pop
xor
cmpsl
jmp
inc
lea
and
push
loopne
or
imul
push
daa
orl
and
mov
es
adcb
jmp
mov
fs
inc
subb
imul
xchg
inc
fisubl
jns
pop
gs
add
jo
gs
xchg
xor
mov
cmpsb
not
and
lcall
or
in
inc
mov
mov
mov
pop
in
push
push
arpl
push
push
dec
xor
push
xchg
fs
test
push
sbb
and
add
dec
test
fwait
jb
xchg
jg
sbb
mov
repz
adc
rorb
jmp
arpl
stos
mov
inc
mov
dec
jmp
push
test
mov
test
and
fs
cwtl
dec
pop
sarb
mov
jmp
add
push
sub
ret
iret
lret
shll
sub
xor
mov
jecxz
sahf
and
xor
xchg
add
incb
jge
dec
add
adc
push
stc
mov
aaa
test
test
cmp
inc
das
xchg
push
mov
aas
xchg
orb
in
jne
lea
mov
jmp
inc
inc
push
lahf
arpl
pushf
sub
mov
add
movsl
dec
or
lock
add
lods
cmp
imul
sub
dec
test
jo
aad
loope
aas
cld
lods
stos
in
sbb
lahf
outsb
data16
jp
xchg
mov
aad
jle
outsb
adc
add
mov
jns
cmp
fcomip
out
ja
sub
xchg
inc
fwait
jo
sarb
arpl
lcall
sub
mov
sti
inc
or
dec
test
adc
xchg
pop
and
dec
out
stos
pusha
and
or
out
dec
xchg
stc
inc
dec
imul
lods
inc
imul
mov
gs
into
mov
adc
sbb
add
dec
add
test
jae
int3
adc
mov
sub
push
lods
add
xchg
leave
adc
rorb
push
mov
mov
sbb
rorb
ret
xchg
inc
jmp
stos
mov
lcall
cmp
adc
cmp
mov
sarb
mov
fcompl
pop
push
or
daa
les
int
adc
movsb
icebp
in
dec
mov
and
sarb
repnz
imul
insb
sub
mov
xor
mov
push
mov
add
js
shr
push
insb
mov
mov
fildll
mov
in
adc
ret
movsl
dec
or
sub
mov
and
sbb
out
je
mov
dec
xor
jge
jns
lahf
or
jecxz
popf
dec
rcl
xor
mov
lock
pop
lock
add
fldl
pop
test
mov
dec
jae
xchg
in
pop
sbb
cmp
dec
and
or
mov
lods
push
xchg
add
clc
ljmp
jg
cltd
lods
das
stc
inc
mov
and
aam
jmp
cmp
cwtl
pop
mov
sub
notb
cli
sbb
sub
and
fdivr
mov
sbb
push
mov
jmp
adc
es
cs
add
test
fstl
dec
ja
icebp
mov
mov
mov
sarb
faddp
push
mov
hlt
jp
lds
pop
push
inc
out
jbe
jae
xor
faddl
mov
outsl
repz
andl
and
pop
dec
push
je
ror
nop
add
xchg
xor
loop
cmp
xchg
dec
fiaddl
mov
cmp
ljmp
mov
imul
pop
test
mov
mov
jns
push
fimull
jge
jle
ss
notb
outsl
sbb
adc
std
dec
pop
lret
movsl
or
cmc
cmp
enter
mov
orb
outsb
adc
test
lea
test
sub
mov
sbb
dec
mov
in
in
movsl
mov
sar
jp
and
clc
test
xchg
rcrl
push
insb
pop
dec
not
xor
pusha
xchg
ret
addb
add
dec
fcoms
push
aaa
ret
outsl
cmp
jnp
xchg
fnstcw
enter
pop
xor
lret
ret
adc
xor
shrl
cmpb
shld
test
rorl
mulb
idivl
or
sbb
pop
mov
jle
pop
jae
cs
daa
outsl
mov
cmp
pushf
int
and
ljmp
push
in
inc
mov
subl
in
xchg
sahf
pushf
push
imul
dec
iret
cwtl
out
lahf
fcoms
enter
or
pop
rolb
push
into
fnstenv
mov
outsb
aas
inc
repnz
std
dec
mov
pop
test
sub
pop
es
mov
fimull
pusha
sbb
sub
push
test
push
fdivp
jae
insl
nop
add
mov
jbe
nop
or
repnz
ljmp
xor
sub
sbb
dec
fldl
dec
sahf
xor
not
ret
call
insl
leave
in
aad
lahf
repz
sbb
fwait
mov
test
push
sub
in
stos
stos
adc
inc
xchg
mov
mov
bound
cmp
pop
pop
mov
nop
sbbb
repnz
in
adc
xchg
sbb
sub
mov
xorl
sarl
mov
xchg
sbb
inc
nop
outsb
adc
lods
mov
cltd
mov
mov
cmp
je
pop
imul
inc
cld
mov
aad
pop
push
mov
sbb
outsb
xor
xchg
jo
repnz
shlb
cmp
mov
gs
outsb
dec
mov
add
arpl
mov
mov
dec
push
push
mov
jecxz
or
js
ss
call
arpl
aas
insl
push
arpl
in
push
adc
xchg
xchg
cmp
ljmp
jns
icebp
push
pop
stc
adc
rolb
sarl
mov
mov
mov
loop
mov
dec
fsubl
push
inc
pop
ljmp
rcrb
mov
mov
out
xchg
dec
loope
dec
mov
add
adc
jl
inc
jp
mov
loopne
mov
jle
stc
add
add
fldcw
bound
in
push
sbb
jb
add
ret
test
popf
adc
sub
jne
mov
es
rclb
lahf
pop
mov
push
movsl
shrb
fsubs
repz
inc
inc
test
leave
call
adc
outsl
repz
mov
sbb
jae
xchg
dec
fcmove
mov
mov
dec
orb
add
lds
lret
mov
adcl
arpl
or
mov
gs
pop
fwait
test
movsl
jp
and
addr16
jae
dec
cmp
outsl
cmpsl
je
gs
je
fs
pop
lea
enter
ret
sbb
xor
xor
push
sbb
sub
push
pop
clc
push
cmc
and
jmp
es
pop
sbb
xor
lods
subb
lods
rcr
or
dec
xor
stc
decl
je
pop
orl
push
or
adc
mov
mov
jg
dec
mov
fidivrl
out
jge
hlt
push
popf
mov
add
add
inc
stos
rcl
scas
or
ret
inc
bound
mov
ret
xchg
sub
and
jecxz
cld
pop
sub
lret
lahf
jae
pop
enter
loopne
in
je
pop
call
sub
idiv
or
dec
fmul
insl
push
lods
pop
jnp
js
ja
push
scas
add
inc
clc
xor
sahf
nop
rclb
add
sbb
mov
mov
sub
fwait
mov
push
insl
push
insl
ret
fidivs
xor
jns
sbb
and
pop
mov
jmp
sbb
mov
and
lods
xor
or
test
es
std
clc
xor
divb
scas
fcmovnbe
mov
popf
ret
push
out
adc
add
push
xlat
push
or
pushf
in
or
sarl
rcl
xchg
jge
in
icebp
dec
call
push
add
mov
pushf
daa
sahf
inc
iret
test
iret
dec
ficomps
loopne
mov
mov
lret
lret
out
push
cmpl
fcoml
in
pop
lret
push
orb
popw
hlt
filds
mov
cmp
out
inc
or
or
mov
jge
jae
cmpsl
arpl
test
inc
pop
or
shl
and
test
test
mov
inc
je
aam
push
out
push
mov
cwtl
mov
loopne
mov
jno
addr16
sub
imul
dec
out
scas
shl
scas
dec
sbb
sbb
xchg
fstl
xchg
inc
sub
cmp
adc
mov
cmp
aam
repz
mov
dec
push
dec
cltd
cmp
xchg
sbbl
ret
xchg
mov
or
fwait
jnp
adcb
ret
pop
xchg
movsb
add
adc
xlat
push
mov
xchg
aas
push
dec
mov
aas
pop
pop
mov
inc
push
jmp
mov
call
ret
pop
inc
dec
sbb
xchg
ja
add
mov
divl
int3
into
mov
int
xchg
aas
jae
dec
fistl
xchg
xor
outsb
scas
fisttpl
mov
xor
jns
out
cmp
cltd
push
jle
cmp
call
hlt
add
jns
iret
fcom
adc
mov
mov
fdivl
jns
cli
cli
repz
movd
add
stc
push
iret
call
push
shlb
enter
sbb
or
ljmp
or
ret
in
pop
or
xor
aad
cmc
xor
cmp
int
adc
mov
out
imul
jecxz
push
dec
insl
movb
or
push
xor
ror
mov
cmp
add
mov
mull
xor
leave
add
dec
add
add
scas
push
imul
push
mov
cmp
sti
mov
xor
mov
sub
dec
pop
or
fistps
cmc
testl
or
out
es
sub
cmpsl
xor
push
push
inc
shrb
mov
out
lret
jmp
inc
xchg
faddl
dec
std
je,pt
pop
insb
sbb
cli
and
imul
in
fldt
js
push
fisttps
mov
xchg
stc
repz
daa
sub
in
cld
jae
outsb
dec
inc
test
rcll
ret
jmp
pop
mov
pop
imul
out
inc
push
popf
in
dec
js
xchg
gs
xchg
pop
out
sbb
int
test
roll
xchg
rorb
inc
clc
add
sub
xlat
add
xor
sti
movsb
pop
lea
jmp
fcomps
ret
pop
xchg
mov
outsb
cltd
mov
xchg
ret
leave
rcll
push
shrl
push
pop
and
in
rolb
cwtl
pop
mov
mov
out
xchg
ficoms
mov
decl
add
inc
rol
scas
fistpll
insb
outsl
ljmp
xlat
dec
push
sbb
lods
flds
into
push
xchg
mov
repz
dec
cmp
sub
xor
mov
mov
dec
insb
dec
aaa
sub
in
cltd
aad
or
mov
aas
push
out
xor
pavgusb
cmpsl
push
popa
push
hlt
arpl
mov
mov
ret
repz
push
sbb
or
jp
int3
negb
data16
sub
lcall
ds
sub
pop
aam
bound
bnd
adc
mov
or
fsubr
dec
movsl
pop
xchg
movsb
xor
add
and
lods
and
sbb
pop
je
lods
pop
push
std
cmp
into
jl
push
mov
xchg
add
dec
push
ljmp
inc
lea
jne
stc
xchg
or
shrb
sbb
sub
sbb
pop
lods
push
in
cmp
enter
lret
xchg
js
xchg
cmp
inc
popa
xor
xchg
push
xchg
inc
test
insb
cmp
cld
mov
hlt
adc
cmp
je
loop
jae
cmp
ljmp
and
cmp
xorl
xor
add
mov
sbb
mov
repz
and
pop
in
cwtl
add
popf
icebp
cmp
or
xor
in
test
cmp
xchg
dec
sub
add
fnsave
int3
dec
adc
je
xchg
ss
aad
push
icebp
lahf
in
and
ja
dec
insb
mov
or
pop
test
ror
out
push
fsubrp
or
jle
popf
dec
rorb
cmpsb
xchg
lds
stos
shrl
inc
sub
jge
mov
push
dec
or
scas
cli
push
add
sbb
jae
fsubs
push
push
cltd
sbb
fbld
into
adc
xchg
or
xchg
das
add
cmc
roll
pop
jb
sbb
jl
sti
rclb
test
cmp
jo
cmp
out
sbb
test
inc
stc
fs
add
mov
mov
lods
and
lcall
daa
xchg
repnz
and
mov
decb
xor
cwtl
lret
and
mov
dec
aam
std
pop
xor
cli
fs
ret
ljmp
test
fistpll
stos
mov
jb
in
pop
pop
mov
add
push
xor
dec
mov
in
cwtl
cld
fisubs
sti
mov
mov
sub
xchg
mov
mov
fdivrs
imul
leave
push
outsb
in
pop
fisubrs
shll
jmp
push
fdivl
hlt
shrb
inc
out
inc
insb
xorl
inc
int3
test
dec
lods
sub
shlb
test
sub
and
mov
or
and
repz
jne
pop
icebp
dec
mov
loop
inc
jne
mov
popa
dec
xchg
es
pop
mov
shll
mov
jmp
jl
cltd
frstor
mov
sub
ficoms
out
xchg
jp
les
mov
xchg
stc
es
fbstp
clc
xlat
insl
dec
outsl
lods
and
cs
lahf
test
fadds
cmpsl
jge
test
iret
mov
cli
test
mov
dec
mov
push
subps
sub
sbb
pop
sahf
lea
xchg
sub
inc
std
aas
mov
into
into
lcall
pop
push
add
in
out
fldt
popf
std
lret
add
or
ret
add
ret
mov
popa
xor
jo
pop
enter
arpl
mov
fsubr
push
mov
gs
nop
sti
out
aaa
leave
mov
push
out
pop
mov
js
pop
dec
cwtl
fisubrl
and
mov
mov
ds
loop
jae
mov
sub
imul
mov
add
inc
sbb
xor
sarl
or
fsubrl
pop
in
pop
or
inc
fcoml
push
pushf
inc
push
or
sub
scas
sbb
inc
xchg
push
rorb
popf
or
cmp
out
inc
cs
fsubr
xchg
add
sar
testb
xchg
sbb
push
test
int3
clc
pop
adc
fwait
mov
and
sbb
into
xchg
xor
sub
scas
sub
jle
outsl
jb
mov
add
pcmpgtw
push
out
mov
push
loopne
dec
int
xor
cmp
cmp
fisttpll
mov
cmpb
std
xor
push
pop
adc
pushf
sub
or
lds
mov
gs
call
pop
xchg
mov
jge
mov
ljmp
cmp
xchg
aas
mov
inc
idivb
dec
pusha
mov
mov
gs
mov
xchg
mov
mov
lcall
sbb
or
mov
ficoml
loopne
sbb
xchg
xlat
jnp
and
pop
das
xor
jl
clc
pop
out
jle
sahf
fucomi
leave
mov
rorl
into
inc
cmp
adc
cld
imul
aad
das
nop
popf
xchg
mov
and
out
pop
clc
xchg
fnstenv
gs
adc
rcrb
imul
rorl
int
and
sbb
push
pop
or
das
mov
lods
push
aad
push
jno
jecxz
and
add
and
mov
jbe
mov
mov
or
pop
xchg
mov
adc
inc
iret
lods
dec
subb
xorl
mov
mov
scas
push
xchg
ret
inc
cmp
cmp
fdivl
jmp
fisttpl
sbb
add
je
jg
jo
loope
and
std
or
shrl
pop
enter
pusha
pop
push
and
cmpsl
adc
andl
inc
add
daa
mov
out
mov
jle
mov
and
mov
notl
or
imul
data16
cwtl
jb
add
dec
adc
lahf
push
jle
xlat
mov
xchg
out
aad
mov
into
sub
push
mov
jbe
mov
xor
loope
xchg
mov
sbbb
shrl
push
mov
and
mov
scas
push
inc
pop
cmp
pop
jae
and
xchg
jl
ja
data16
mov
adc
pusha
sbb
lods
call
movsb
dec
imul
vpunpckhwd
xor
inc
scas
std
gs
mov
cli
sbb
dec
fadds
pop
jl
fistpl
into
sub
adc
xchg
xchg
insb
out
addl
jae
fwait
sub
data16
push
out
lahf
int
cld
jmp
idivb
push
xchg
mov
cmp
aam
mov
movsb
mov
pop
mov
jecxz
lcall
jb
fidivs
int3
ficomps
xor
scas
decl
repnz
mov
dec
xor
pop
cmp
push
or
pop
pushf
inc
mov
or
sbb
and
dec
mov
cli
sbb
jecxz
mov
hlt
inc
pop
jg
movsb
test
lahf
jmp
xchg
push
sti
pop
js
fdivr
aas
pop
xchg
xchg
mov
sbb
xlat
push
arpl
add
jle
test
mov
loop
mov
mov
cmp
call
fimull
cmp
cli
fnstsw
push
inc
ja
sub
fists
lahf
jecxz
arpl
dec
cwtl
xor
imul
and
jle
jb
roll
mov
mov
out
clc
push
or
sti
push
xchg
mov
push
push
adc
pop
sub
stos
rclb
cmpsb
mov
push
popl
jnp
xchg
imul
add
adc
imul
int
out
inc
in
inc
call
es
adc
or
ds
mov
mov
xchg
push
xorb
fbstp
int3
int
fcoml
xor
xlat
inc
outsl
addr16
mov
lods
sti
jae
pop
inc
add
cld
sub
sub
addb
fstpt
sub
mov
into
pusha
mul
dec
cwtl
xor
andb
rcrb
cmp
shl
inc
ret
sbb
rorl
push
jmp
sub
mov
lods
mul
lret
mov
jecxz
cld
aas
jne
std
dec
icebp
leave
push
or
stos
pop
cmp
fcmovnbe
outsl
jb
test
addr16
stos
or
dec
aas
icebp
sahf
jmp
popa
mov
cmpsb
ss
adc
pop
xchg
enter
or
adc
push
pop
add
aaa
test
out
stc
lea
xchg
scas
cld
roll
push
cwtl
or
sti
andl
sbb
cmp
cmp
loope
pop
psraw
jge
loopne
dec
cli
stc
pop
mov
test
pop
pop
pop
pop
enter
fucomi
cltd
xor
popa
repz
xor
fwait
jne
or
or
adc
push
outsb
repnz
jl
xchg
jg
scas
push
fs
add
push
cmp
mov
lcall
scas
fdivrp
push
jl
sub
adc
cmp
adc
adc
mov
dec
mov
jno
dec
jno
push
insl
or
repz
andb
stos
int
scas
pop
mov
sub
xor
cmpl
fadds
hlt
dec
mov
insl
fisttpl
out
fstpt
inc
xchg
mov
stc
jo
adc
movsl
or
push
scas
test
cli
push
iret
xchg
out
daa
in
repnz
cwtl
or
jbe
fistps
aaa
movsl
or
ljmp
neg
notb
push
nop
ficoml
xchg
aas
adc
fdivrp
jge
jge
cltd
lret
adc
pop
adc
aam
jae
adc
mov
sbb
sub
scas
jb
rolb
cmp
call
jmp
mov
adc
enter
fidivl
inc
pop
pop
pop
ret
jl
sbb
ret
repz
out
ds
fists
or
mov
call
enter
dec
add
ljmp
sub
lret
cmc
cwtl
fsts
adc
pop
add
lods
or
fisttps
push
cwtl
loop
scas
dec
roll
mov
mov
jb
test
subb
fisttpl
scas
add
push
call
repz
into
jmp
mov
mov
pop
push
pop
icebp
adc
pop
out
fldl
push
push
cld
out
mov
rcl
add
push
xchg
fwait
xchg
fs
mov
cmp
and
into
rcr
stos
xchg
pushl
push
pop
cltd
push
lret
div
fs
inc
jge
xchg
nop
imul
aas
out
cmpsb
repz
js
cmp
xchg
leave
into
ret
sub
sbb
gs
pusha
xor
je
mov
mov
xor
aaa
fucomi
fwait
cmp
push
out
pop
shl
daa
insl
mov
mov
xchg
popf
cmp
adc
lcall
sbb
dec
lret
jb
dec
inc
mov
filds
in
and
test
mov
loop
ds
bound
loope
cltd
add
push
jo
test
mov
push
cs
popf
test
or
and
out
mov
and
mov
out
xchg
mov
es
insb
repz
cmp
call
jmp
sub
mov
enter
mov
fsts
cmpsb
mov
and
aad
inc
mov
popf
sbb
add
stos
adc
ret
cmp
scas
rcrb
rorl
cmpsb
mov
shl
ret
add
fdivl
pop
xor
mov
js
packssdw
ljmp
mov
std
insb
pop
stc
add
loopne
ret
mov
inc
push
mov
jno
cmp
xchg
cli
and
fnclex
testl
add
mov
add
stc
cltd
inc
sub
jge,pn
test
data16
orb
out
lret
mov
mulb
mov
sbb
addr16
dec
lock
mov
adc
repnz
mov
fmuls
cmpsb
sbb
js
inc
and
scas
push
adc
mov
adc
mov
inc
adc
std
sbb
out
sub
cmpsl
mov
nop
test
filds
inc
scas
mov
mov
push
lret
rcrb
xchg
imul
sub
lods
mov
repnz
xchg
add
jno
shrl
testb
dec
jmp
rorb
xor
js
arpl
cltd
loopne
xor
or
in
fucomp
jne
loop
mov
inc
pop
adc
gs
xchg
pcmpeqd
pop
adc
and
lret
jge
jbe
nop
loope
inc
leave
nop
dec
jp
int
sub
js
movsl
add
or
fistps
lock
mov
or
daa
jg
or
lahf
inc
shl
inc
push
mov
out
push
mov
xchg
jge
sub
jb
dec
cmp
or
insl
mov
push
push
loopne
clc
idivl
xchg
inc
fnsave
mov
sbb
jb
inc
iret
adcl
cwtl
nop
dec
test
lret
mov
mov
xchg
in
decb
pop
stc
testb
or
mov
sub
inc
dec
js
cmpb
dec
jne
push
push
leave
and
add
notl
sbb
pushf
pusha
es
sbb
add
sub
mov
push
in
sahf
iret
out
bnd
inc
jb
jmp
mov
bound
mov
fwait
push
das
psrad
aam
add
out
sahf
mov
push
dec
xchg
dec
out
pop
sbb
fsubr
cli
xor
mov
mov
fwait
insl
pop
cs
inc
outsl
aaa
sbb
mov
insb
insl
mov
pop
inc
dec
add
stos
xchg
cs
addr16
int3
mov
push
push
cs
ja
and
pop
push
mov
aad
ficoml
out
mov
push
sbb
xor
or
lret
das
jecxz
bound
pop
nop
sub
push
mov
ds
mov
mov
xchg
jne
jmp
and
xabort
sbb
js
les
xchg
mov
clc
sub
add
movsb
jmp
lock
sub
mov
fabs
push
inc
pushf
sbb
mov
in
into
rcrb
or
arpl
filds
push
clc
bound
insl
mov
xchg
enter
aad
xor
mov
jecxz
mov
sahf
rorl
sub
or
in
insb
ret
sub
push
sbb
cltd
std
mov
ror
push
mov
ss
push
jg
xorb
jmp
inc
inc
imul
cmp
jl
lret
jmp
mov
mov
jecxz
pushf
dec
and
lea
push
movsl
push
gs
push
jbe
sbb
and
and
lock
dec
push
es
movsb
lcall
dec
out
jnp
bnd
xor
icebp
imul
inc
dec
in
mov
roll
dec
loope
xchg
cwtl
mov
mov
jge
test
aas
xor
mov
inc
out
push
fwait
jecxz
dec
sub
pop
dec
mov
lret
imul
test
mov
ret
cmp
and
jl
daa
mov
cmc
into
mov
cmc
fcoms
call
nop
ucomiss
inc
je
loopne
aam
in
clc
stos
fwait
adcb
repz
je
or
je
lret
insl
jl
pushf
adc
in
pop
and
bound
cmp
outsl
jbe
and
jns
ljmp
or
dec
int
pop
insl
dec
cmp
jg
rolb
sbb
add
rolb
mov
flds
xchg
inc
push
inc
pop
ret
mov
pop
jno
mov
hlt
lahf
aam
xor
dec
mov
jecxz
imul
mov
fcomps
xorb
insb
les
xor
mov
popf
and
and
inc
add
flds
lret
or
lock
movsb
push
js
xchg
pop
mov
data16
cli
mov
mov
rcrl
sbbb
adc
pushl
push
push
cmp
orl
dec
xorb
ljmp
pop
jmp
cwtl
js
xchg
pop
mov
outsb
cmp
repz
pcmpgtw
push
add
cmpsb
cmp
push
les
cli
int3
pop
lret
outsl
int3
pop
mov
mov
push
daa
jge
mov
lahf
fldl
mov
pop
out
push
out
mov
pop
es
xchg
shll
in
and
push
pop
xorl
addr16
sub
xchg
jecxz
push
je
div
ficoml
jae
jae
scas
and
adc
inc
jl
out
xor
pop
aad
mov
jmp
lea
hlt
mov
imul
pop
scas
std
insl
jbe
js
setne
hlt
xchg
les
mov
sub
rorb
es
dec
sub
imul
lods
pop
scas
call
cli
xor
xchg
das
push
in
mov
test
mov
insb
push
fwait
cmp
sub
test
sbb
loop
push
adc
shll
jne
mov
pop
jnp
addr16
lds
inc
movsl
jl
push
cltd
stos
std
lret
mov
das
add
lret
adc
scas
stos
dec
imul
inc
push
adc
stc
adc
sub
cmp
xor
arpl
in
daa
pop
pushf
sub
pop
mov
test
push
mov
mov
or
les
pop
shlb
and
mov
je
pop
inc
outsl
adc
adcb
fisttps
push
adc
adc
mov
iret
mov
mov
outsb
jmp
loop
scas
dec
inc
jno
ja
mov
xor
lret
pop
mov
pop
xchg
lcall
xchg
dec
test
fisubl
xchg
push
push
pop
into
lret
push
iret
mov
iret
bound
cmp
stos
js
ljmp
or
jmp
lahf
sub
pop
or
sbb
repz
mov
movsl
dec
and
jb
sbb
mov
sbb
cmp
shll
cmpsb
cmp
mov
icebp
pushf
xor
int
or
cmp
push
ret
push
jp
dec
push
pop
or
adc
dec
int
arpl
rcrl
popa
outsb
and
add
push
or
jle
gs
jge
and
mov
popa
or
xchg
addr16
iret
pushf
cmpsb
pop
fdivrp
xor
jb
inc
and
jno
or
stos
icebp
loop
addr16
jae
mov
pop
push
call
add
repnz
inc
stos
jmp
jg
push
fidivl
pop
repnz
xor
xor
into
mov
int3
adcl
mov
int
adc
push
jae
stc
call
insb
jne
xchg
imul
push
icebp
je
fsubrl
mov
mov
mov
gs
ljmp
mov
aaa
jmp
test
jl
push
adc
flds
push
daa
adc
cmc
aam
into
jmp
push
or
out
dec
inc
lahf
pusha
add
adc
sub
aaa
cmp
jecxz
cltd
xor
sbb
mov
stos
xchg
push
pop
bnd
lahf
lahf
add
mov
mov
icebp
imul
jbe
sbb
aas
jae
inc
subl
lea
inc
xchg
shll
adc
std
pop
adc
push
rcl
push
dec
daa
jle
cld
mov
pushf
and
and
xorl
lcall
pop
fmuls
add
ja
rcll
mov
push
sub
cmpsl
pop
rclb
out
add
jae
add
inc
xorb
xor
mov
inc
jl
pushf
push
repnz
enter
and
push
call
xor
pop
sbbb
push
fwait
scas
xchg
push
xchg
lret
jbe
fsubrs
aam
mov
test
adc
ret
andl
sahf
push
iret
icebp
lods
sub
adc
fdiv
test
xor
xchg
repz
xchg
cmp
sbb
movsl
imul
call
in
int
jl
scas
pop
lret
mov
outsl
and
or
sbb
adc
cmp
addr16
test
shll
add
or
insl
dec
outsl
inc
aam
mov
cmpsl
cmp
mov
or
inc
push
loope
push
iret
xchg
lret
mov
add
mov
mov
dec
adc
jnp
gs
ds
pop
sar
mov
or
xchg
mov
js
push
jb
dec
mov
xchg
scas
ja
shll
in
cmpsl
push
xchg
push
mov
xchg
dec
popa
aad
repnz
inc
pusha
mov
aaa
inc
sbb
in
mov
insb
cmp
aas
test
insb
mov
fptan
or
jg
mov
push
jne
into
int3
ds
enter
push
imul
and
cmpsb
shl
call
sahf
xor
cs
div
push
divb
fcomps
jg
mov
sbb
mov
bound
inc
ds
xchg
out
pushl
jmp
dec
std
xor
mov
repz
test
aaa
out
sub
pushf
push
xchg
int
sar
sbb
orl
xchg
jecxz
jne
mov
fdivrl
sbb
std
subb
into
fs
jecxz
mov
js
aad
sbb
xchg
fcoms
push
jno
sbb
xchg
cmp
cwtl
dec
xchg
ds
adc
int
xchg
stc
push
mov
xchg
mov
loop
lcall
push
pop
mov
roll
mov
aas
cmp
repnz
mov
xor
push
sarl
cmp
pop
cmp
mov
rolb
sbb
or
mov
stos
pop
shrl
or
leave
in
jg
shrb
jp
test
push
dec
cmp
adc
call
jp
add
or
sbb
sbb
mov
rol
fdivl
daa
fsts
pop
xor
into
lock
and
push
push
inc
lods
pop
cltd
aas
dec
in
xor
mov
es
shll
aam
pop
out
jp
sub
cs
test
pop
out
jmp
xor
mov
into
aad
mov
inc
pop
mov
sbb
in
mov
outsl
aam
jae
mov
pusha
aaa
movsl
xchg
bound
stc
stc
cmp
cmp
lea
mov
adc
dec
cld
cmc
jnp
aas
ja
ss
stc
out
hlt
jne
xchg
int3
lods
mov
jae
ss
imul
xor
or
movsb
push
push
jae
push
cmp
pop
fwait
pop
xchg
inc
jmp
icebp
test
shrb
and
in
mov
or
sbb
mov
sub
lret
push
pop
jbe
mov
ret
and
xlat
roll
clc
xchg
es
ljmp
add
lods
fsubrs
jb
sub
mov
add
add
into
je
add
inc
ds
bound
cmp
fbstp
rcrb
aam
sbb
out
mov
sub
or
je
sub
xor
inc
dec
sbb
mov
cmp
fdivrl
xchg
popf
lret
mov
push
push
adc
mov
xchg
sbb
xlat
xchg
out
xchg
dec
iret
push
dec
pusha
cltd
and
mov
sub
mov
scas
and
push
mov
stos
jg
bound
pop
push
cmpsb
cmpsl
xor
sub
out
cltd
stos
jp
outsb
cli
fldenv
sub
mov
mov
pop
add
imul
mov
pop
cltd
fidivrl
xchg
sbb
in
test
imul
mov
roll
bound
jno
pop
mov
sub
popa
cmpsb
lock
sub
jno
lods
stos
fs
int
addr16
imul
loopne
dec
jae
int
pop
add
lds
push
add
add
dec
or
add
adc
gs
or
jg
jne
cmp
jmp
adc
dec
in
out
stc
or
int3
sbb
stos
frstor
stos
add
popf
rcrb
stos
adc
xor
je
mov
push
jmp
outsb
pop
je
mov
decb
addr16
xor
push
mov
ss
xchg
add
mov
les
xchg
and
sbb
adc
scas
or
mov
xchg
call
push
adc
fldl
cltd
xchg
repnz
mov
lret
repnz
dec
sub
cmc
jge
mov
std
xchg
jnp
xchg
stos
enter
loop
mov
adc
push
movsb
sbb
xchg
push
cmc
loopne
out
jno
ja
inc
in
add
jmp
mov
ret
and
out
xorb
dec
mov
adc
mov
scas
fsubr
sbb
fs
xor
sarb
mov
and
leave
jp
mov
sbb
push
dec
daa
scas
or
add
push
mov
cli
mov
push
out
mov
divl
sub
jge
add
aas
pop
pop
cmp
mov
mov
dec
inc
into
aas
push
dec
negb
insl
pusha
imul
ja
mov
mov
xchg
clc
xchg
push
add
stc
das
xor
push
pop
test
xchg
inc
movsb
mov
mov
jae
dec
xor
mov
push
sahf
daa
je,pt
test
adc
pop
lea
jns
fadd
and
inc
mov
mov
cmpsw
adc
nop
loope
orl
push
leave
iret
jecxz
movd
aam
jns
xchg
mov
jp
add
lock
mov
sbb
adc
adc
int3
jbe
in
mov
fs
leave
jmp
mov
and
popa
sub
mov
fbstp
out
in
push
jl
lahf
or
int3
pop
jle
aas
mov
jle
adc
xor
xor
dec
cmp
pop
mov
push
and
jg
jne
dec
leave
loopne
push
mov
mov
dec
push
lret
ret
push
and
mov
inc
fmul
mov
mov
xor
std
mov
xor
neg
lahf
and
movsl
xchg
add
dec
int3
pop
into
xchg
mov
sbb
movsb
stos
stos
cld
out
adc
sub
jns
loopne
push
test
mov
filds
cld
movsw
inc
test
lret
add
mov
xlat
adc
fcmove
mov
ror
sbb
std
add
aas
jo
xchg
push
sbb
and
lahf
lds
cmp
cmp
popf
lcall
mov
or
test
xchg
sub
icebp
pop
or
sahf
daa
in
adc
pop
xchg
push
jno
call
cli
inc
push
popf
cmc
fbld
and
andl
push
xchg
add
mov
dec
scas
mov
push
sbb
add
in
mov
push
xchg
data16
pop
push
sti
js
stc
in
pop
arpl
xlat
or
jb
fsubrl
inc
leave
jecxz
inc
lret
repnz
pop
std
sahf
pop
add
dec
cwtl
mov
add
xchg
aam
nop
lret
sbb
and
gs
xchg
or
add
aaa
daa
out
bound
jecxz
add
push
inc
in
ja
inc
scas
add
fisubrl
lock
xchg
jg
nop
popf
popf
lcall
add
jb
movsl
xchg
push
movsl
inc
bound
xchg
xchg
mov
mov
imul
cltd
pop
ret
or
and
jp
cmpsb
dec
mov
fldenv
inc
imul
in
fs
movsl
xor
test
push
fcmovne
jb
out
and
fnstsw
pop
out
sub
or
pusha
dec
bound
out
mov
xchg
push
dec
repnz
inc
icebp
xlat
push
cmp
clc
int
sub
xor
test
jp
cmpsb
sbb
aam
ss
and
sub
mov
std
pop
mov
aaa
inc
sar
dec
popa
inc
push
dec
notb
mov
pop
mov
mov
roll
sbb
scas
adc
es
cmpb
cmpsb
sbb
xor
mov
cmc
test
sub
jl
sub
clc
sub
jb
scas
out
push
mov
jl
mov
popa
fmuls
mov
jg
cld
or
jno
rep
sbb
lcall
sub
dec
xor
int
loop
fwait
cmp
arpl
das
aad
xor
and
mov
lret
into
or
test
add
subb
mov
or
xchg
stc
cmp
jo
andl
lock
or
mov
inc
sbb
inc
sub
aad
cltd
adc
out
and
jno
xchg
out
xor
cmp
sti
push
and
icebp
xor
xor
mov
iret
mov
scas
xor
xchg
mov
xor
push
xor
and
loope
adc
jmp
rclb
out
jnp
xorl
mov
jnp
cwtl
stos
mov
push
adc
xlat
out
inc
faddl
addb
bound
lods
shll
sub
inc
mov
rol
out
mov
popf
nop
jl
pop
bound
out
sub
or
mov
cmp
lods
cli
adc
and
xor
sti
out
dec
pop
mov
jge
lcall
fldenv
cmpsl
sbb
call
xchg
lret
jne
mov
mov
cmpsl
pop
jge
enter
sub
outsl
jecxz
lds
jl
xchg
dec
sbb
pop
arpl
call
dec
gs
bound
icebp
pop
loop
dec
jecxz
sbb
mov
test
cmp
push
into
aad
sarl
sub
ja
cmpsl
arpl
fwait
cmpsb
sub
cld
aad
xchg
mov
out
xor
xchg
aas
ret
xchg
and
loop
fisttps
inc
adc
jecxz
std
push
nop
lods
imul
sub
dec
in
lcall
mov
subl
rcrl
pop
ljmp
or
aaa
shr
mov
sbb
inc
outsb
push
pusha
out
push
and
adc
mov
and
pop
and
sar
les
sbb
inc
xor
daa
and
les
shrb
andl
cltd
insb
shll
arpl
xchg
out
xor
sbb
add
jp
mov
dec
sub
pop
jecxz
std
and
in
fsubs
adc
rdpmc
sub
jge
push
sbb
mov
adc
sub
out
test
push
mov
stc
sub
pop
add
xlat
adc
rclb
call
fstpl
pop
mov
in
cmc
imul
movsl
mov
lds
adc
stc
pop
lret
xor
xor
pop
mov
pop
inc
xchg
push
sub
iret
xorb
xchg
or
sub
mov
mov
jecxz
sub
or
xor
out
mov
in
mov
mov
mov
fucomip
sbb
sub
inc
jecxz
lcall
mov
jb
loopne
push
push
or
xlat
fidivs
test
jae
and
jle
out
hlt
loopne
add
jbe,pn
aaa
bound
xchg
adc
jge
xchg
fwait
fwait
dec
sbb
sbbl
pusha
pop
cmp
inc
push
sti
lods
mov
popf
jne
inc
dec
xor
sbb
jle
cwtl
or
lret
push
xor
sbb
dec
mov
cmpl
cmc
push
fwait
aad
adc
sbb
mov
cmp
push
jmp
cltd
imul
test
dec
sub
sti
arpl
mov
lock
mov
adc
jno
cli
lahf
out
push
xor
jge
lret
mov
xchg
scas
in
in
jns
pop
or
negl
rcrl
int
mov
mov
mov
int3
out
popa
push
data16
jae
push
inc
pop
pop
cli
cmp
xchg
mov
jno
hlt
mov
or
pop
rol
addr16
in
test
and
into
pusha
mov
dec
pop
rcr
sub
lcall
lret
mov
lret
pushf
mov
ja
icebp
mov
repz
jns
push
std
test
push
cmp
and
xchg
dec
mov
sbb
std
push
dec
adc
adc
jb
daa
leave
sbb
sti
sub
xor
js
jp
data16
jmp
insb
insl
lcall
dec
lods
cmp
mov
sub
push
xlat
cmp
fimuls
add
inc
aaa
ds
movsl
sbb
push
cmpsl
lea
bound
sahf
push
mov
pop
ret
or
leave
xchg
cwtl
add
pop
repz
add
xor
mov
dec
hlt
fsubl
mov
hlt
sbb
std
jp
nop
data16
jle
daa
in
adc
cmpsl
add
add
pop
adc
sbb
lods
mov
out
shrb
xchg
call
shl
cwtl
sbb
ja
sub
icebp
mov
and
sbb
rcl
mov
loopne
fildll
iret
daa
jbe
sub
popf
cmp
lcall
test
out
mov
enter
aas
jp
sti
pusha
push
push
and
mov
pop
push
adc
adc
jmp
pop
call
push
inc
push
push
push
scas
stos
mov
inc
hlt
xchg
jmp
enter
test
add
cmp
adc
jno
inc
or
xor
adc
gs
dec
cmp
enter
fpatan
ficoms
mov
out
add
inc
xchg
sahf
jno
sbb
xor
inc
and
jl
xchg
or
push
dec
les
dec
loop
pop
and
mov
loopne
cld
das
jno
fstps
mov
push
dec
mov
loop
pop
xchg
cmp
push
enter
xor
ds
xlat
addl
inc
mov
popf
dec
lods
lahf
test
repz
loope
mov
leave
push
add
push
lods
dec
repnz
jle
iret
adc
icebp
sbb
or
mov
sub
mov
movsb
cmc
mulb
mov
outsl
rorb
mov
loope
or
cmpsb
lret
jmp
scas
lods
stos
mov
add
push
rolb
movsl
test
xorb
mov
test
push
aas
cltd
mov
cld
bound
sarl
sbb
imul
jp
ja
pushl
xlat
cmp
dec
xor
nop
xsha256
cmpsb
xchg
cmc
push
out
xor
insb
imul
es
arpl
sub
jg
xchg
mov
jecxz
mov
jbe
jne
and
aad
nop
pop
xchg
lret
or
push
mov
icebp
jno
test
int3
push
push
pop
push
stos
mov
testl
mov
cmpsl
lods
push
xor
andl
jno
cmp
les
enter
arpl
arpl
push
loop
cmp
sbb
add
aad
leave
stos
ja
sub
loop
ja
js
cmp
jbe
ds
push
leave
movsl
push
jmp
or
pop
xchg
pushf
int
aas
and
cmp
movsl
scas
adc
nop
sub
test
xchg
cmp
push
inc
xor
cmpsl
and
mov
add
push
sub
popa
popa
mov
mov
xchg
sbb
stos
pop
mov
add
adc
sub
int
or
ds
sbb
das
jp
movsb
cmpb
test
or
int
fstpt
jbe
xor
adc
mov
ret
xchg
js
add
push
rol
jns
jmp
pop
out
cltd
scas
stos
mov
inc
pop
mov
add
imul
adc
cmp
cmp
push
cmp
jmp
sub
pusha
dec
fdiv
loope
and
je
xchg
cmpsb
fldlg2
mov
pushf
inc
sbb
inc
daa
add
xchg
adc
subb
sbb
pop
fsubrs
sbb
pop
repnz
sbb
out
push
lret
out
adc
cwtl
ds
iret
repz
push
inc
sbb
out
add
and
aaa
xchg
dec
sahf
filds
sub
adc
push
cwtl
je
shll
imul
sbb
cltd
add
push
xchg
pop
imul
xor
das
out
mov
shlb
xor
imul
fwait
aaa
fstps
cmp
adc
jne
fistpl
movl
xchg
cmp
xchg
mov
mov
or
int
sub
cli
jp
std
jbe
mov
rolb
in
pop
xchg
mov
adcb
in
inc
lahf
dec
fmul
fwait
jne
imul
pop
stos
jmp
dec
ds
mov
cmpsl
and
ss
sti
paddusb
rcr
scas
mov
pop
loopne
mov
pop
punpckhwd
shll
arpl
cmpsl
adc
sub
adc
pop
cmpsl
pop
sbb
cs
inc
stos
sub
pop
sub
xlat
sbb
add
sub
out
push
mov
enter
nop
vshufpd
mov
clc
insb
push
pop
pop
ja
pop
out
cmp
fdivs
bound
leave
fldcw
in
popa
cmpsl
sub
test
call
cmpsl
xchg
and
mov
xor
in
sarb
outsl
jnp
lret
or
adc
jo
xchg
push
and
sub
pop
bound
inc
aaa
cmp
mov
push
lods
movsl
jns
popf
push
test
mov
jge
cwtl
mov
sub
mov
pop
push
cmp
mov
loopne
xchg
inc
xchg
sbb
inc
mov
pop
mov
sub
sub
arpl
mov
sub
stos
pop
push
outsb
sbb
stos
es
mov
in
cli
sti
imul
cmp
jg
dec
int
ss
es
add
sbb
inc
or
add
out
and
mov
cmpsl
jae
aas
out
sbb
jo
loopne
ds
xor
fisttpl
xor
or
sbb
rcrl
adc
decb
pop
and
jmp
int
cld
das
pop
dec
add
push
shrb
adcl
insl
shl
inc
add
fistps
or
shrl
ljmp
inc
xor
or
ret
pusha
mov
and
push
sub
jmp
xor
xorb
les
stos
xchg
lods
push
icebp
aaa
fildl
pop
inc
loopne
mov
insl
aas
shrb
add
xchg
shrl
inc
int
lahf
arpl
std
es
xor
jge
push
jge
and
pop
adc
aam
lea
in
into
mov
jge
ss
aam
dec
cmp
dec
and
loopne
stos
ror
les
xor
loopne
dec
push
xor
loope
js
test
push
mov
lcall
inc
add
pop
mov
cmpsb
test
jmp
ja
sti
mov
mov
dec
mov
inc
cli
iret
mov
pop
dec
xchg
push
mov
in
mov
sub
into
pop
jns
outsl
add
int3
mov
test
cmpsb
push
adc
lods
xor
sub
mov
in
je
ds
iret
call
cmp
outsl
or
and
inc
ja
outsb
push
inc
push
call
mov
dec
lahf
dec
xchg
cmc
xlat
push
and
mov
es
push
mov
testl
ss
cmpsl
in
sbb
add
adc
push
jo
mov
rcrl
sub
adc
das
mov
inc
mov
add
mov
cmpsb
popa
les
jae
push
inc
cld
mov
dec
test
mov
pop
repnz
lods
aad
adc
mov
fdivrp
lea
cmpsl
enter
xchg
lods
scas
mov
sub
dec
loop
out
hlt
testl
pusha
push
xor
packuswb
jnp
inc
xchg
add
fsubl
mov
push
add
invd
cmp
mov
je
andl
leave
into
aaa
daa
inc
rcr
cmc
data16
push
xchg
jno
stos
cld
and
inc
cmp
mov
push
in
popa
rclb
aas
out
scas
sbb
sub
jg
mov
repz
mov
pushf
scas
jp
in
in
ficoms
aam
jle
mov
dec
mov
pop
mov
or
leave
aad
in
fsubrl
pusha
test
adc
das
xor
dec
push
cmp
dec
andb
movsl
rorl
adc
mov
imul
jecxz
das
cmp
mov
add
adc
sub
push
cmp
lds
pusha
lahf
lahf
aaa
mov
jne
scas
xorl
mov
cmp
nop
mov
push
jo
and
fs
loope
sbb
jbe
in
pop
xor
test
stos
mov
je
adc
testl
negb
mov
fnstcw
fidivrl
stos
mov
icebp
inc
pusha
dec
jmp
leave
out
mov
stos
inc
jge
jmp
xchg
jmp
imul
movsb
sbb
adc
jge
lret
movsl
inc
inc
incl
popa
clc
ror
out
stos
fsts
ljmp
scas
and
pop
add
pop
nop
or
ret
filds
xor
out
dec
call
mov
mov
pop
scas
cvtpi2ps
movlps
pop
inc
shrb
adc
inc
sbb
stos
sbb
arpl
sub
sub
dec
lock
push
loopne
stos
ret
inc
mov
movsl
mov
and
cmp
mov
sarb
rol
cwtl
inc
adc
cmpsl
ficoml
and
mov
cmp
sti
fbld
nop
testb
pop
xchg
sub
icebp
ja
fldcw
idivb
mov
mov
out
cs
fadds
push
in
and
pop
jno
les
fldz
int
lahf
aaa
ljmp
popf
push
xchg
add
jb
mov
push
or
sbb
out
mov
stos
and
shlb
ret
mov
test
dec
std
arpl
hlt
repnz
and
faddl
cmp
shll
adc
and
lret
pop
jg
and
rcrb
in
das
test
xchg
dec
or
add
cwtl
leave
fidivrs
fisubl
outsb
inc
pushf
rcr
adc
xor
sub
bound
jge
fsts
cld
sbb
jl
adc
cmp
shlb
sub
cltd
roll
popf
inc
icebp
xchg
sbb
or
mov
cmp
add
fldt
xchg
push
incl
pop
mov
fldl
lcall
icebp
lcall
cs
push
inc
imul
jo
cld
mov
push
xor
lods
add
push
out
sbb
fnstenv
lds
outsl
push
pop
call
and
mov
mov
push
pop
stos
pop
mov
std
xchg
test
pop
cli
xlat
sbb
inc
sbb
movsb
ds
or
mov
push
dec
cltd
mov
cmovno
cmp
sbb
push
lret
cmp
xchg
mov
jecxz
cmc
mov
clc
sub
lcall
jp
dec
leave
inc
push
mov
cmp
pop
inc
cmp
push
sub
add
jnp
movl
mov
adc
fiaddl
bound
ss
xor
aaa
adc
dec
loope
andl
dec
lea
fadds
lcall
cmp
test
inc
jne
inc
or
loop
inc
test
mov
inc
add
sbb
xor
mov
push
jecxz
ja
lcall
les
lock
push
leave
push
inc
test
cmp
mov
mov
addr16
adc
dec
jl
mov
cld
cmp
out
fxch
dec
add
cmp
in
les
xlat
popf
jno
scas
aam
adc
popa
pushf
rolb
or
dec
fiaddl
push
dec
pusha
dec
fisttps
pop
lods
loop
filds
or
les
andl
xchg
adc
insb
xchg
cmpsb
fstp
insb
stos
adc
in
mov
leave
mov
mov
out
scas
negb
out
sub
lret
xchg
jle
dec
cld
mov
cmp
or
push
imul
pusha
sbb
jo
xchg
jo
dec
mov
cmp
test
push
bound
mov
int3
and
xchg
cs
jle
bound
arpl
in
movsl
or
add
fists
mov
inc
push
cltd
sub
out
cltd
sti
stos
pop
sub
testb
outsb
mov
ja
jae
push
pusha
insb
pop
push
jb
les
rolb
rclb
fldt
out
jecxz
frstor
add
push
xlat
xchg
repz
xchg
and
pusha
shl
stc
or
jne
aad
mov
mov
lcall
cs
test
jo
nop
dec
lahf
stos
adc
push
and
hlt
and
sub
dec
dec
popa
pop
xor
iret
or
sbb
xor
mov
mov
cmp
dec
lods
pusha
jnp
shrl
jne
scas
mov
push
lods
mov
xchg
sub
lea
inc
dec
mov
std
shlb
mov
adc
mov
fcomip
and
sub
arpl
jo
ds
pop
xchg
push
lods
aam
mov
inc
pop
xchg
jno
lahf
lds
push
andl
repz
and
cmc
stos
test
sub
xchg
repz
lock
pop
jle
jns
dec
mov
ljmp
mov
xor
xchg
jmp
lods
mov
mov
xor
popf
mov
in
fnsave
or
jmp
daa
lea
hlt
iret
int3
fs
stos
nop
js
mov
push
sub
lret
repnz
mov
xor
mov
fmull
ljmp
sbb
popf
cmpsl
loop
ja
xchg
fidivs
jb
cs
push
inc
or
mov
jnp
lcall
fistl
jle
in
jl
mov
adc
aas
mov
loop
jae
sbb
cmp
sbb
out
mov
mov
jmp
sbb
addr16
andb
mov
data16
jmp
jne
clc
dec
aam
pop
cmc
scas
fcoms
out
popa
mov
pop
test
cmp
dec
sbb
pushf
lods
mov
mov
adc
or
push
mov
ficomps
or
es
mov
mov
sti
out
int3
cmpsl
dec
jno
cltd
cmpsl
add
sbb
push
push
cmpsl
jl
and
mov
lods
nop
cmp
mov
jle
mov
hlt
pop
loop
inc
pop
jnp
cmp
lds
or
clc
stos
cmovns
aam
jnp
movl
loope
stos
fwait
sti
daa
sub
adcl
jp
mov
scas
sbb
pusha
addr16
std
loopne
inc
sbb
aas
jne
and
and
dec
js
rolb
jb
mov
repz
mov
leave
enter
sbb
jb
js
test
in
xor
sti
cmp
mov
lds
mov
jae
xchg
nop
inc
call
test
and
push
dec
push
cli
ret
gs
sub
nop
cmp
inc
hlt
ud1
arpl
addr16
mov
inc
lods
dec
sub
cmp
inc
or
shll
mov
mov
mov
xor
push
push
cmp
or
ljmp
push
outsb
and
mov
fmuls
dec
jns
repnz
arpl
push
cs
mov
out
adc
cmp
iret
sbbb
jns
int3
jbe
hlt
les
inc
adc
das
mov
mov
enter
ret
fs
imul
jmp
inc
adc
nop
das
mov
ja
lret
ret
addb
mov
leave
mov
pop
lds
jge
ja
xchg
dec
loope
xchg
adc
lcall
xchg
mov
in
adc
push
orl
or
jb
inc
enter
adcl
mov
dec
mov
sbb
call
or
pop
mov
inc
es
das
repnz
sahf
cmp
orl
push
jmp
ja
in
add
mov
cli
jo
and
xchg
in
pop
or
xchg
sub
or
mov
mov
je
pop
rolb
fisttpl
out
imul
cs
adc
call
iret
lds
dec
inc
clc
enter
mov
add
xlat
aad
sbb
xor
scas
loop
fldcw
sbb
lahf
mov
dec
insl
and
addr16
std
repz
negb
pop
push
cli
xchg
inc
std
test
jle
aad
clc
mov
test
add
movsb
push
loope
ret
adc
jge
dec
leave
or
scas
gs
xor
fmuls
in
add
arpl
xor
xchg
fidivrl
jl
js
sbb
fcoml
xchg
mov
inc
jl
lods
test
es
nop
test
push
sbb
cmpsl
int
imul
dec
pop
adc
movsl
pop
or
je
push
pop
or
cwtl
mov
jns
xchg
fwait
fs
lea
cltd
and
movsb
idivl
test
inc
popa
adc
jle
lds
insl
cmpsb
out
pop
jae
and
inc
inc
jg
dec
clc
push
daa
out
mov
push
daa
iret
fs
test
jl
arpl
aam
popa
mov
adc
cltd
bswap
pop
fcmovbe
xchg
pop
sbb
xor
loop
repz
mov
idivb
adc
and
sbb
mov
aad
push
add
pop
mov
jb
shl
popf
mov
hlt
add
pop
pusha
sahf
pop
sbb
xorb
mov
pop
jbe
mov
lods
jp
loopne
int
mov
cltd
enter
andl
out
stos
xor
mov
xor
aaa
inc
popf
daa
xor
test
shl
mov
push
rclb
push
xor
pop
out
cmp
mov
out
lret
xchg
add
daa
cmp
pop
andb
dec
movlps
ds
push
pushf
and
cmc
clc
rcrl
pop
cltd
dec
out
push
xchg
adc
dec
mov
mulb
popa
cmpsb
int3
les
js
cmpsb
cld
cmp
fwait
cwtl
in
inc
adc
test
or
fcomp
iret
scas
or
aam
mov
ds
and
lods
stc
push
insb
cmp
outsb
dec
stos
insb
jl
push
or
js
aas
lea
rcl
test
push
jg
and
mov
dec
push
sbb
push
inc
xchg
stc
das
xchg
aad
cmp
icebp
int
pop
sub
std
enter
test
insl
shll
ret
jno
xor
psubusb
loop
int
mov
jmp
dec
push
jp
stos
xchg
ss
jns
lcall
add
cmpsl
xchg
sbb
pop
ljmp
xchg
dec
xchg
mov
jl
or
jg
fld1
ja
jge
xor
das
aaa
push
pop
mov
and
ret
dec
pop
jo
xchg
data16
push
sbb
stos
cmpsb
add
push
sub
xor
push
out
fcmovnu
sbbl
out
xor
popa
nop
xor
pop
mov
jno
adc
into
gs
lods
push
push
pusha
fwait
adc
mov
pushf
es
cltd
ret
les
lret
pop
outsb
in
adc
push
sub
les
add
repnz
aad
push
xchg
fucomip
mov
sahf
pop
and
mov
adc
punpcklbw
jge
push
or
in
add
jae
sti
shlb
jp
mov
aad
adc
xor
scas
negl
sbb
ljmp
mov
daa
repnz
adc
push
out
dec
pop
xchg
inc
fldcw
sub
mov
cmp
mov
xor
jmp
insb
shll
imul
int
cs
ficompl
xlat
pmulhw
imulb
in
call
lock
in
jl
jg
psrad
push
stc
mov
push
cmpsl
cmp
sub
pop
sub
imul
sub
lahf
ljmp
ss
sbb
mov
mov
sti
insl
in
adc
aam
out
or
lahf
stos
ret
sub
sahf
int3
fsubl
jbe
ret
mov
or
push
aaa
dec
jecxz
inc
jnp
daa
loopne
lret
fwait
xor
loop
and
sbb
cmp
sbb
cmp
flds
into
push
mov
or
loopne
xchg
jne
cltd
pop
sti
in
mov
push
ret
inc
push
jb
loopne
aad
cmpsb
cmp
jne
test
fisttpll
and
sub
cli
mov
dec
insb
movsl
in
cmp
add
into
lock
repnz
mov
int3
test
pop
lods
and
inc
add
aas
mov
xchg
push
mov
push
adc
push
fwait
gs
out
dec
scas
insb
dec
hlt
cld
push
cmp
mov
aam
push
pop
push
icebp
data16
xchg
and
or
cmp
das
sbb
ja
cmpsb
ja
nop
imul
xchg
cld
cmp
xor
mov
ss
lods
pop
aad
movsl
rcrl
out
cwtl
and
sub
mov
pop
adc
inc
pop
movsb
and
lret
das
cmp
and
jg
dec
and
rclb
filds
mov
mov
insb
lea
push
jo
inc
aaa
lcall
push
or
insl
cmp
pop
popf
pusha
movsb
scas
les
test
aam
sub
push
cmp
cmp
cwtl
mov
movsl
lret
mov
adc
jle
fstps
imul
aaa
cmp
ret
out
mov
dec
sub
sbb
clc
jnp
fcmovne
sbb
xor
xchg
sbb
out
xchg
or
mov
fcompl
pop
call
popa
out
lock
outsl
dec
hlt
loopne
cmp
shrb
incl
cs
or
lcall
mov
mov
fiaddl
push
xchg
sti
jne
ficoms
and
sub
outsb
rclb
movsl
in
push
xorb
inc
sbb
lret
dec
dec
call
cmpsl
subl
pop
push
sub
add
cmp
push
jle
cwtl
imul
jb
mov
sbbb
test
hlt
inc
fchs
xor
insl
xor
mov
std
fidivl
mov
das
mov
push
popf
ret
sahf
xor
repz
mov
push
ja
xor
aam
jecxz
and
out
xchg
and
ja
xchg
addr16
cmp
add
out
jo
fadd
fdivrs
mov
aad
flds
lcall
push
mov
test
xchg
add
sub
mov
out
add
push
scas
fldt
mov
pop
sub
jae
mov
sahf
out
stos
outsl
dec
push
xchg
loope
add
fsubrp
fwait
jmp
mov
mov
jg
cmc
inc
xchg
inc
push
enter
cmp
jae
aad
mov
mov
cmp
adc
das
int
xor
dec
in
pop
es
cmpsl
xchg
push
test
push
jl
dec
mov
int
mov
inc
mov
rorb
add
cli
lds
popa
in
and
adc
cli
iret
pop
xlat
xchg
ret
pop
mov
pop
rclb
outsl
pop
sbb
pop
rcl
iret
cmp
mov
gs
add
mov
xchg
dec
xchg
std
mov
and
dec
jae
mov
pop
popf
lcall
cwtl
mov
addl
stos
xor
hlt
or
gs
icebp
xor
xchg
mov
xchg
push
out
pop
ret
int3
xlat
xlat
sbbb
lret
mov
lea
fisttpl
idivl
xchg
mov
lahf
inc
jle
setbe
dec
sbb
sub
in
ljmp
lret
sub
int
xlat
pop
sbb
fistl
in
rcl
fxam
xchg
call
ljmp
out
stos
leave
daa
add
xchg
push
inc
andl
and
adc
pop
out
insl
cmpb
inc
outsl
mov
xchg
mov
pop
adc
mov
sbb
mov
loope
add
in
sub
dec
arpl
decl
outsl
ds
inc
bound
adc
cmp
popa
inc
test
inc
xlat
sub
dec
hlt
cmp
and
fisubrs
mov
fnstenv
or
jl
sub
xchg
mov
jle
mov
sub
scas
fcompl
pop
adc
cmp
test
fucomp
out
loope
cmp
xchg
jp
sbb
mov
addr16
pop
loopne
jge
xchg
and
pop
add
jb
shrl
int3
mov
pop
cmp
daa
add
je
ja
xchg
and
lahf
iret
lds
loop
pop
dec
sbb
adc
mov
and
mov
jecxz
aam
xor
add
inc
adc
dec
cmp
push
inc
and
mov
in
or
pop
sub
icebp
sbb
sub
test
or
ret
inc
popa
pusha
scas
jnp
cmp
inc
dec
and
lods
daa
aam
fsubrp
negl
pop
xchg
mov
hlt
mov
hlt
or
pop
pushl
jmp
popa
or
aad
sbb
or
cmc
arpl
mov
or
imul
sbb
adc
adc
pusha
in
rcll
pop
sub
push
sub
xchg
stc
sub
lret
sbb
adc
mov
fldl
dec
sub
aad
jbe
dec
and
int3
push
pop
lds
fs
xor
add
daa
jo
add
sub
lds
mov
or
xchg
pop
call
lods
fcompl
add
cmp
ds
test
gs
iret
jp
lea
pop
sti
sahf
jp
pop
mov
stos
cmp
in
and
lahf
leave
jmp
jnp
sub
and
sarb
pop
lret
fildll
or
mov
mov
mov
in
fisttpl
xor
cltd
jmp
popa
nop
jnp
ds
clc
dec
sahf
ret
insb
sbbl
dec
mov
xchg
out
icebp
incb
xchg
sub
jle
or
sub
add
push
repnz
push
cmp
pusha
sbb
sub
shl
lea
push
out
test
sar
in
push
mov
push
cwtl
push
mov
outsl
cmp
or
filds
movsb
jmp
ret
jge
gs
pop
adc
outsb
pop
aaa
sub
xor
jmp
and
scas
out
push
jnp
push
or
mov
outsb
sub
outsb
jle
mov
cmp
push
sub
jnp
imul
jno
xchg
xor
sbb
sub
mov
inc
push
push
icebp
mov
mov
mov
cmpsb
and
xor
scas
aam
and
and
idivb
daa
lds
sbb
fistpl
or
cmpsl
stc
jns
inc
pop
mov
ror
shrb
rorl
repnz
push
lods
nop
movsl
jge
out
sbb
div
cmp
xor
xor
jns
dec
mov
cltd
into
rcl
lds
mov
pop
lret
mov
xchg
mov
inc
xchg
adc
insb
fld
xchg
xor
iret
adc
push
mov
enter
nop
aas
popf
inc
addb
mov
mov
inc
out
or
pop
push
jmp
das
jb
xor
pop
into
add
shrb
hlt
mov
gs
test
jns
call
imul
pop
shlb
mov
gs
ret
mov
int
xchg
push
jae
test
out
jmp
cs
xor
or
lods
lret
popa
inc
int3
xor
push
sbb
test
sti
movb
xorl
push
dec
sub
fldenv
xchg
pop
fmul
push
out
mov
dec
xlat
lock
insl
lods
jg
test
fcomps
enter
cmpsl
add
or
xchg
push
sbb
xchg
and
rcrb
pop
sub
xchg
lods
push
stc
js
stos
push
test
in
inc
push
jg
dec
mov
fwait
or
xor
inc
push
or
inc
loop
dec
rclb
or
ds
lock
push
adc
mov
scas
in
repz
xor
fisubl
xor
data16
out
lods
cwtl
pop
inc
js
addr16
into
pusha
push
push
push
icebp
daa
outsl
out
ret
xor
outsb
testb
add
and
scas
data16
push
sub
mov
test
jle
jl
sbb
gs
out
aaa
orb
out
pop
loop
dec
lret
sti
fiaddl
cmp
in
push
sti
add
lods
ljmp
cmc
movsl
neg
sbbb
iret
mov
sbb
fwait
mov
shlb
jae
jle
imul
sbb
fs
mov
pop
mov
scas
jl
cmp
and
js
mov
iret
aad
or
jmp
mov
and
xchg
xchg
testb
push
pop
pop
pop
cmp
push
adc
jmp
sti
add
mov
xchg
repz
andl
xchg
xchg
out
xor
xchg
push
aad
sub
mov
fiaddl
jp
mov
or
iret
jg
and
mov
xchg
mov
nop
cld
dec
push
lahf
popa
addb
pop
or
rorl
pop
in
gs
xor
cwtl
and
or
cltd
ja
xor
rcr
xchg
xchg
gs
xorb
mov
mov
mov
lods
popa
mov
insl
insb
push
popa
nop
xchg
sbb
movsl
shrl
adc
lods
out
aas
nop
xchg
jae
shl
vhaddps
xlat
rol
nop
into
shrb
es
xor
cmp
rcll
jg
call
imul
and
stc
ss
es
or
mov
mov
pop
sub
inc
imul
out
or
pop
loopne
adc
add
xchg
jmp
cmp
add
popf
aad
fbstp
jno
negb
pop
dec
out
les
ss
pop
xor
or
rorl
dec
repz
xor
sub
dec
andl
fmul
les
mov
mov
dec
fdivs
ja
mov
sub
ss
popa
pop
and
test
popf
out
sub
iret
xchg
loopne
pop
ret
xor
je
cmp
xchg
sbb
or
pop
adc
hlt
cmpsl
fcos
push
jecxz
imul
sbb
insl
shlb
in
jge
inc
cmp
or
addr16
aaa
in
xor
xchg
movl
ss
add
xchg
adc
lods
sub
pop
xchg
lods
sbb
aas
mov
jae
fcom
mov
adc
jmp
inc
jb
sbb
imul
fwait
jne
xor
clc
lea
inc
mov
shrb
jb
or
dec
jmp
in
add
sti
imul
cmp
cmp
pusha
in
inc
insl
mov
pop
fstps
add
mov
or
adc
or
leave
xchg
mov
xor
imulb
ss
push
in
push
mov
mov
stc
pusha
sub
jl
xchg
rcr
sarb
or
das
adc
cmpb
dec
cmpsl
sub
js
das
popf
or
mov
jno
xchg
push
and
gs
jp
pushf
daa
jp
push
aad
or
xor
subb
mov
outsl
mov
loop
daa
fisubl
and
lock
aam
bound
popa
imul
test
scas
cmpsl
loop
shl
pushf
cld
test
mov
push
mov
aad
pop
test
inc
sub
fcoml
ret
stos
in
cs
push
lret
cmp
nop
stos
sbb
mov
push
jecxz
dec
sub
mov
lea
rcrl
xchg
addb
mov
in
lret
mov
mov
add
js
cli
adc
mov
jp
adc
jb
lret
stc
out
adc
pop
pop
push
aam
push
sahf
jnp
mov
mov
stc
test
and
mov
sub
lea
and
xor
stos
xchg
mov
pushw
sub
and
xchg
cmpsb
mov
jmp
call
mov
popa
xor
ja
cmp
cmp
push
xchg
pop
push
add
push
popa
xchg
pop
mov
dec
in
fnstsw
push
sub
jp
movsb
mov
jae
dec
cs
xor
push
ret
pushf
add
pop
in
pop
aam
sti
cmp
ret
movsl
mov
lcall
lods
add
test
xor
out
outsl
test
hlt
movsl
xchg
aas
out
dec
mov
fdiv
mov
dec
aam
out
xor
push
icebp
push
mov
scas
mov
in
es
icebp
loop
cmpsb
insb
pop
mov
cmp
xor
std
and
ret
in
je
jp
outsl
arpl
mov
inc
cli
or
test
fcomip
sbb
ficomps
in
stos
xor
inc
shr
fldl
lods
or
lods
mov
rcll
and
adc
test
xchg
clc
dec
xchg
mov
pop
jp
test
mov
xchg
adc
pop
icebp
ja
inc
inc
jge
xor
and
pop
popf
mov
bound
mov
jae
loop
or
fucomi
xor
lods
pushf
jp
sti
xchg
into
jecxz
stos
lds
xor
daa
loopne
mov
inc
xor
es
arpl
jno
shl
and
ss
add
adc
addb
rclb
sbb
xchg
push
jg
or
jo
adc
loop
lock
cmp
cwtl
stos
sub
and
sahf
sub
leave
pop
imul
jbe
loope
call
adc
int
and
data16
dec
sbb
add
mul
mov
stos
mov
or
int3
ljmp
cmp
cs
lret
xchg
mov
rclb
imul
bound
bound
arpl
dec
xlat
mov
inc
and
push
fimull
ret
inc
add
js
js
sbb
js
test
xor
add
addb
mov
inc
xor
pop
sti
repz
mov
sbb
inc
add
cmp
gs
sti
loopne
lock
icebp
dec
push
dec
jecxz
cmp
iret
lea
add
stc
sub
int
mov
sub
mov
jmp
dec
fwait
push
inc
xchg
cltd
add
cmp
sbb
jmp
ds
and
shlb
popf
test
lock
or
nop
dec
dec
ret
jae
test
jo
popa
mov
add
inc
sbbb
push
push
subb
sbb
push
push
pushf
xor
mov
cmpsb
jnp
cld
lock
sbb
and
out
dec
mov
mov
xchg
pop
add
dec
inc
data16
fldl
xor
dec
mov
out
pushf
aas
fcomps
fstl
lock
in
into
pop
fildl
clc
in
sti
mov
xchg
add
xor
notb
std
jo
or
imul
into
stos
dec
ja
dec
pop
sub
dec
shlb
mov
std
add
xor
lea
inc
in
fwait
xchg
in
lock
adc
sbb
mov
add
xor
int
inc
and
pop
or
retw
cwtl
clc
fstps
sbb
xor
faddp
pop
xorl
mov
das
pushf
ret
lcall
out
aad
adc
mov
mov
add
jp
adc
add
pop
fldcw
jp
js
inc
out
pop
pop
xor
mov
mov
js
ficoms
pop
rol
dec
or
sub
les
imul
dec
add
iret
pop
push
xorb
mov
fistpl
push
shll
push
out
cmp
outsb
popa
movsl
dec
or
icebp
mov
ficomps
dec
dec
dec
stos
sbb
sub
into
ljmp
das
and
js
sbb
iret
mov
in
lds
cltd
sub
lods
cli
fisubrs
mov
hlt
dec
shrl
scas
cmp
stos
or
pop
cmpsb
adc
imul
or
pop
fstps
icebp
jns
mul
mov
adc
rcrl
pop
negb
jo
push
adc
dec
aas
sbb
fiadds
pop
jne
rcrb
out
lea
and
movsb
fnstcw
andb
out
fdivs
in
ss
push
pop
adc
dec
mull
dec
lds
jp
jo
bts
lods
adc
xchg
sarl
cmpb
push
mov
and
gs
mov
lcall
bound
mov
or
push
or
aam
fdivrl
imul
aad
sbbl
test
add
dec
leave
jbe
scas
pop
mov
sub
push
xchg
ret
testb
dec
cmp
mov
int
ja
push
sbb
sbb
jp
add
out
pop
popa
jg
jo
and
mov
stos
dec
pop
sbb
jnp
push
leave
je
jg
mov
cmc
nop
fnsave
cmc
loop,pn
or
lahf
and
fcmovne
add
push
push
movsl
dec
sbb
aam
xorl
xorb
rcrl
idivl
push
pusha
and
add
sub
jbe
inc
jecxz
jle
or
push
cmp
arpl
push
cmp
pop
inc
scas
in
jo
mov
jmp
mov
aas
xor
in
or
popf
cli
jge
pop
int
sbb
add
pop
out
inc
mov
fwait
xchg
icebp
push
adc
loope
adc
push
fdiv
lods
js
adc
dec
xchg
pop
roll
mov
mov
test
inc
test
fcoms
stos
repz
or
cli
hlt
ret
jne
repnz
push
lea
add
and
mov
ret
sub
sbb
adc
lcall
jmp
fcoms
sub
leave
cmp
js
jecxz
imul
repnz
push
mov
lahf
jbe
ret
mov
stos
ds
aad
je
cmpsb
dec
push
dec
jb
stos
and
jecxz
inc
aad
inc
rolb
or
outsb
fldt
inc
push
add
pushw
pop
cwtl
sti
push
cli
or
fs
pop
mov
inc
inc
mov
jl
ficompl
mov
sub
push
and
cmp
cmp
xor
jnp
lods
add
lea
shl
inc
add
das
fstp
jge
mov
test
mov
sbb
pop
divl
cwtl
lret
jmp
inc
xchg
mov
loopne
sbb
mov
lods
sbb
sbb
pop
push
in
jle
cmp
loop
movsb
dec
xchg
cmp
aaa
nop
inc
lcall
mov
imul
pop
inc
mov
jmp
xor
stos
push
xor
sbb
cs
xchg
inc
xor
sbb
push
mov
aad
mov
inc
inc
test
enter
mov
loopne
icebp
xchg
pop
fldcw
sbb
stc
xor
fdivrl
int
cmp
dec
leave
and
jnp
jae
ret
dec
pop
sub
cmp
push
xor
push
xchg
fstl
inc
insl
popf
aad
push
jno
mov
pop
cltd
shlb
mov
sub
imul
sbb
sub
scas
daa
jp
cmp
xor
sbb
out
fcoms
test
insb
in
sbb
pop
xlat
xchg
pop
or
leave
sbb
jle
cwtl
pop
push
into
jecxz
movsl
xchg
add
jbe
scas
test
mov
arpl
add
and
inc
pop
and
jmp
push
clc
loop
mov
sbb
inc
sub
ja
repnz
ss
sbb
and
leave
lret
sti
fucomi
lds
push
xchg
mov
xchg
xchg
gs
sbb
add
cmpsl
bound
sti
cli
dec
sub
movsl
mov
aas
bound
incl
sarl
pop
pop
inc
xchg
add
roll
xor
jns
ja
lret
dec
lea
cmpsb
mov
mov
loop
cmc
cmpsl
cmp
outsl
push
sub
pusha
xor
add
ficompl
imul
out
cmp
xlat
imul
sub
inc
jg
ja
or
adc
dec
xchg
sbb
stos
lahf
jnp
out
loopne
pusha
cltd
adc
inc
icebp
inc
je
push
inc
add
mov
adc
push
int3
cmp
push
sbb
pusha
in
mov
jmp
in
pop
adc
push
lret
pop
xchg
int3
mov
pop
sbb
sub
aaa
ficoml
xor
adc
xor
mov
test
xchg
mov
xchg
rorl
clc
jecxz
push
xchg
fildll
mov
pop
xor
out
cmc
mov
push
mov
icebp
mov
dec
inc
sub
jg
dec
dec
lahf
dec
fldl
add
mov
stos
mov
adc
dec
out
testl
lea
xlat
adc
cwtl
fsubs
mov
test
pop
pushf
push
mov
sub
dec
in
lds
mov
icebp
in
daa
mov
cmp
push
pop
outsl
out
inc
add
pop
pop
incl
or
lret
push
or
pop
adc
cmp
mov
test
mov
add
aas
mov
or
mov
xchg
scas
or
neg
jnp
push
into
cs
test
xor
add
lods
roll
nop
adc
adc
push
adc
into
and
pusha
pop
inc
xor
lds
and
cmpsb
adc
pop
jne
lret
pop
jge
inc
aad
cmpsl
cmpsb
imul
std
testb
sbb
pop
mov
sub
stos
repz
push
cltd
ret
sar
lea
and
jne
les
ja
lock
mov
and
pop
gs
arpl
lods
cmc
jecxz
or
add
and
cli
xchg
fnsave
sbb
andl
psraw
cmp
cmp
jb
mov
sti
into
ja
loop
push
xchg
pop
xchg
mov
mov
xor
out
call
push
adc
mov
addr16
mov
sub
std
lret
int
and
das
lds
icebp
jno
cwtl
cmc
aas
xor
iret
mov
vpunpckhbw
sub
push
and
out
in
mov
adc
gs
mov
cmp
cmp
pushf
into
mov
dec
rorl
andl
jnp
stos
cmp
xor
ja
setp
xor
add
sub
pop
xchg
popf
lret
ss
or
into
stc
out
fidivl
sahf
out
add
leave
into
lock
and
push
and
fadds
data16
sbb
mov
outsl
and
add
adcl
jmp
pop
clc
pop
dec
outsl
and
std
stc
lret
cwtl
clc
icebp
inc
hlt
call
pop
push
or
cmc
bound
cmp
and
jnp
ss
sbb
xor
mov
movsl
xor
fadd
lahf
adc
aam
out
add
sbb
cmp
loope
xor
dec
jp
and
les
sbbl
cld
xor
pop
or
or
jg
xchg
sbb
xchg
andb
hlt
lret
jae
popl
and
or
aad
fdivrs
xor
cmpsl
mov
dec
pop
and
mov
leave
pop
lods
sbb
jp
nop
mov
inc
aad
pop
and
les
push
jae
mov
lcall
mov
and
aas
inc
sbb
inc
shlb
mov
mov
xor
out
fwait
jns
cli
fcompl
outsl
mov
or
imul
mov
jl
lea
push
shlb
mov
dec
jne
nop
xor
mov
inc
cmpsb
xchg
add
and
mov
jno
arpl
ljmp
jnp,pt
sub
roll
enter
mov
and
jg
rcl
lahf
call
dec
divl
push
dec
dec
lods
pop
jae
imul
sti
iret
adc
sbb
push
out
movsb
imul
jbe
mov
push
test
xchg
or
fwait
xor
jne,pn
cmp
or
in
iret
adc
cmc
mov
push
mov
cmp
pop
test
stc
dec
ret
inc
jno
xchg
imul
xchg
js
cmpsl
stos
test
or
aam
mov
testb
outsl
sub
jp
mov
adc
daa
fs
inc
xchg
pop
adcl
bound
cmp
xchg
sbb
in
out
fxtract
cmp
mov
jmpw
movsb
dec
jb
call
outsb
lock
jne
jnp
lret
pop
cmpsb
test
xchg
jno
mov
push
xor
cmp
in
sub
cmp
and
test
data16
gs
aam
aad
mov
sub
cmp
push
dec
dec
cmpsl
pop
mov
leave
xchg
push
sahf
xchg
cmpsl
fwait
mov
mov
jmp
cli
fsubr
sub
pop
lds
fisttps
adc
add
sbb
bound
xchg
mov
imul
and
mov
xor
icebp
lds
and
je
or
fildl
push
mov
fsubrl
inc
xor
mov
sbb
pop
lock
add
in
popf
cmp
das
push
gs
addr16
arpl
sbb
xor
pop
jne
add
mov
arpl
sbb
test
xor
test
cvtps2pi
mov
push
popf
scas
pop
insl
pop
pop
jae
pushf
push
cmp
inc
xor
bound
je
jmp
les
jb
jns
fs
les
das
adc
mov
stos
test
mov
push
sbb
cmp
adc
mov
fwait
push
mov
sub
pop
into
and
cltd
mov
cmc
lods
push
jp
xchg
pop
dec
lock
mov
roll
push
dec
out
jbe
in
into
subb
stc
pop
cmpsb
test
jle
repnz
bound
mov
stos
cmp
fs
jae
mov
jge
ret
movsl
clc
cmp
in
mov
lcall
scas
pop
xchg
pop
and
mov
es
mov
jecxz
pop
xor
push
pop
push
jp
aaa
scas
lcall
movsl
inc
lcall
into
and
icebp
jo
xchg
pop
pushl
popf
and
cmp
add
dec
push
cmpsb
mov
mov
dec
sbbb
and
xor
mov
push
dec
jno
fldl
arpl
jl
popf
dec
push
jne
ret
push
insb
push
jge
jmp
popa
sub
shll
lods
leave
mov
or
and
repz
dec
push
jp
ss
lds
add
out
dec
andb
push
pop
clc
das
pop
or
and
jg
shll
cli
lock
mov
cwtl
cmpsl
leave
mov
and
mov
mov
add
xor
test
pop
or
mov
push
rorb
xor
dec
pop
mov
or
arpl
push
fnsave
add
ds
aad
and
and
sub
das
push
inc
shlb
dec
jge
sub
pop
pop
and
loop
xchg
rol
rcrl
enter
mov
push
sub
and
icebp
cmpb
ret
xor
mov
pop
dec
jp
and
pop
sbb
mov
mov
nop
repnz
adc
adc
jo
push
pop
xchg
out
lods
test
mov
mov
pop
addr16
sbb
dec
inc
lret
and
add
dec
xor
adcb
and
xchg
mov
outsb
loop
cmc
mov
outsb
sub
or
dec
nop
sub
ja
int
mov
cmc
imul
mov
fldcw
dec
mov
xchg
jbe
and
inc
sub
mov
dec
lret
pop
mov
lea
pop
sub
sbb
mov
pushf
aad
jge
and
cmc
sub
jl
inc
mov
into
aaa
fscale
lahf
movsb
ficomps
adc
inc
js
inc
mov
jbe
inc
xchg
int3
mov
ss
bound
sub
leave
gs
sar
inc
xor
sbb
jno
push
outsl
jge
cli
pop
js
in
fstpl
add
scas
les
movsl
shl
insb
icebp
push
xchg
ja
mov
les
pop
or
add
fidivl
push
ljmp
pop
mov
pop
pshufw
inc
xor
xchg
mov
inc
js
push
leave
jno
js
test
jnp
cmpsl
jmp
push
leave
mov
repz
test
cmp
loope
or
sub
movsl
xor
gs
sub
xchg
lea
dec
and
dec
js
pop
repz
push
sbb
mov
xor
mov
movsl
xor
imulb
gs
cmp
add
or
push
push
cld
loope
mov
xor
lcall
add
scas
test
xchg
sbb
mov
adc
fsubs
inc
cmpsb
cmp
xchg
sub
rorb
int3
mov
aam
jo
insb
cmp
cmp
add
lock
mov
sub
push
test
ds
aaa
divb
mov
fimull
dec
dec
or
pop
pop
mov
sub
mov
je
bound
pop
pop
movsb
pop
pop
xchg
hlt
push
fisttpll
fucomi
leave
mov
test
jmp
jns
dec
mov
scas
mov
jle
in
xor
sbb
clc
mov
pop
inc
mov
jle
inc
sti
repz
mov
mov
mov
dec
cs
fiaddl
xchg
sub
jae
and
mov
mov
adc
cmpsl
sub
aas
std
pop
xchg
or
push
iret
sbb
jbe
icebp
cld
scas
xchg
mov
jl
lods
mov
or
lods
dec
jno
mov
add
out
jle
ret
cmp
push
leave
pop
ss
adc
cmp
roll
push
inc
stos
or
pop
lods
sbb
loopne
sbb
dec
fnstsw
lods
xchg
sub
mov
inc
mov
les
cwtl
mov
push
ficompl
sbb
pop
loope
inc
jnp
pop
jle
push
lods
jg
cmpsl
popa
xchg
lahf
mov
xor
shll
popa
fcmovnu
lret
lods
pop
sbb
or
dec
xchg
mov
movsb
scas
sub
ficomps
dec
adc
int3
dec
loope
scas
fwait
xlat
dec
ss
aam
xchg
ds
mov
es
rcrb
mov
pop
inc
ret
sbb
popa
cld
or
adc
leave
fistpl
jle
inc
xlat
ljmp
dec
and
mov
je
imul
and
or
dec
cmp
mov
or
xlat
xchg
std
jg
lock
imul
ja
outsl
ja
fnstsw
jno
lahf
add
shll
mov
mov
jge
movsl
jbe
mov
mov
test
jg
or
xor
sub
std
mov
aad
in
js
out
sub
rcl
movsl
jbe
push
push
aad
cs
push
cs
pop
mov
lods
mov
enter
out
dec
adc
int3
outsb
std
call
outsl
xor
sub
in
or
mov
mov
jp
shll
xor
test
pop
stc
push
inc
out
jg
in
mov
test
sbb
dec
lret
stc
add
inc
aad
test
jns
ss
push
or
insl
inc
int3
rorl
add
dec
stos
push
push
fcomps
or
stos
dec
mov
insl
jmp
jae
push
sub
jmp
int3
or
mov
pushf
xchg
mov
mov
fistl
sub
shlb
icebp
push
cmp
adc
pop
or
cmp
ljmp
mov
or
mov
insb
sub
and
mov
mov
xor
shrb
mov
je
cld
iret
inc
cli
pop
in
hlt
sbb
push
sbb
xchg
xchg
adc
out
imul
sbb
sub
push
push
xor
fisubs
push
fwait
popa
imul
pop
pop
adc
mov
dec
jle
mov
adc
lods
jae
pushf
inc
insb
and
pop
and
or
and
inc
dec
pusha
sahf
ret
dec
push
mov
and
fwait
sub
adc
mov
push
test
sub
dec
jle
sti
fwait
in
xor
jmp
cmp
test
mov
mov
and
cmp
lds
arpl
ljmp
mov
jno
sbb
cmc
enter
jle
add
test
and
and
icebp
adc
test
ds
outsl
cli
xchg
mov
es
fcomps
and
ret
mov
cmpsl
iret
add
or
ja
xchg
pusha
out
dec
pushf
ljmp
cmp
jl
inc
in
adc
mov
mov
add
fcoms
aad
mov
lods
rorl
pop
cmp
mov
lret
dec
aaa
test
xor
test
jle
jmp
ljmp
mov
inc
sub
ret
pushf
andl
cmp
jne
xchg
sbb
lcall
shl
cwtl
or
xchg
lock
adc
lock
pop
inc
jmp
popa
sub
push
xchg
sbb
adc
lds
test
mov
mov
ja
mov
movsb
mov
add
sub
xchg
sbb
popa
inc
hlt
push
xlat
xorl
sbb
movsl
jae
xorl
xchg
pop
adc
call
fcom
cmpsl
push
inc
lret
dec
sub
adc
sahf
sbb
jne
xor
test
dec
add
sbb
inc
aam
lcall
arpl
fwait
inc
sahf
mov
push
inc
sarb
jbe
inc
sbb
pop
insl
mov
pop
inc
iret
inc
sbb
mov
dec
xchg
dec
es
cmpsb
sbb
imul
lret
jmp
mov
and
xor
sub
movsb
loopne
pop
negl
pop
lret
shrl
fst
aas
cmpsl
mov
xchg
lea
scas
inc
pop
inc
cli
aas
in
sbb
shlb
cmpb
push
push
and
xor
mov
test
inc
mov
ljmp
loop
jg
sub
or
cmpsb
mov
mov
clc
cmp
dec
pop
cli
mov
pop
lret
sbb
jl
inc
xor
jne
cld
inc
stc
xchg
and
or
sbb
scas
inc
mov
jae
jp
xor
out
fcmovnu
movsb
cmc
push
rclb
jno
pop
adc
mov
jle
dec
cs
xor
add
jmp
andl
dec
inc
orl
cmp
or
pop
divl
jge
scas
bound
pusha
add
and
je
push
xchg
or
jecxz
xlat
lea
shlb
mov
jmp
cltd
roll
xor
pop
mov
icebp
psubb
in
lcall
orl
fwait
cli
or
cmp
or
mov
ds
addr16
mov
add
cli
sysret
inc
and
dec
adc
xchg
aaa
cld
dec
mov
inc
inc
mov
les
jg
pop
push
add
subb
fstps
ret
push
mov
loope
adc
subb
xchg
jge
jbe
or
and
or
sbb
lea
push
mov
cmc
pop
push
js
sbb
fwait
cli
ja,pn
shrb
lret
in
negb
clc
add
mov
pusha
fdivrs
loop
in
rolb
ror
repnz
fistpl
cmpsb
sahf
sbb
andl
fidivs
scas
mov
in
dec
mov
jno
int3
enter
or
shlb
push
pop
mov
sbb
out
orl
mov
in
mov
repz
leave
mov
sub
jg
cwtl
sbb
dec
jbe
pusha
pop
xlat
ja
divl
jbe
xor
inc
rorl
das
xchg
dec
mov
inc
sub
jne
in
mov
je
popf
inc
fsubs
lahf
sub
movb
push
mov
pop
or
dec
js
std
dec
mov
aas
mov
shrb
aam
sbb
dec
insl
jbe
push
sub
repnz
sar
pusha
lds
and
cmp
mov
nop
imul
inc
les
pop
movsl
jecxz
sub
daa
and
adc
lahf
xor
push
std
xor
popa
pop
repz
xlat
lock
add
scas
out
enter
imul
push
arpl
push
push
mov
bound
je
jmp
jp
jl
pop
ds
popf
xor
jnp
daa
cmpb
push
cld
mov
std
pushf
lods
pop
add
lock
sub
xor
xchg
fisttps
dec
add
daa
lds
push
mov
dec
test
mov
orl
pop
cmp
mov
xchg
pop
dec
or
fstps
xlat
fs
xchg
cld
int
xor
rolb
jge
and
in
gs
xchg
in
popf
fistpll
sahf
adc
outsl
bound
lds
jmp
sbb
mov
dec
ret
pop
addb
fcomps
mov
jbe
je
mov
inc
cmpsb
fs
jae
testb
enter
outsb
test
stc
decb
clc
jecxz
mov
sub
cmp
aas
fidivl
notb
cltd
leave
stc
test
mov
testl
pop
cwtl
ret
xchg
push
inc
ja
fdivs
adc
loope
fwait
dec
and
inc
add
mov
lcall
movsl
push
out
rcrl
mov
sub
add
xlat
jne
into
ret
fwait
jae
xorl
inc
inc
ds
push
or
mov
inc
hlt
and
jle
fadds
fisubrs
stos
movsl
sarl
sahf
out
ljmp
jge
aam
shlb
inc
mov
mov
imul
jl
lods
push
dec
sbb
shll
testl
lds
stc
push
mov
test
adc
inc
mov
jl
jp
dec
cld
push
dec
xchg
outsb
ret
dec
data16
jne
add
dec
mov
loopew
int3
insb
cmp
jne
sbb
push
loop
dec
pop
fucomip
push
pop
xor
and
pop
in
sub
scas
jmp
adc
push
jo
inc
jmp
jecxz
int
lds
xchg
cmp
inc
push
int
scas
pop
mov
push
xor
adc
aad
cwtl
cmp
movsb
add
xchg
addr16
jno
sahf
dec
push
jns
cmpb
sub
pop
mov
or
clc
lahf
sti
or
rcrl
nop
pop
cwtl
js
dec
mov
pop
bound
adc
cmp
int
and
jo
lods
rorb
inc
push
add
mov
shr
dec
adc
push
adc
in
cmp
pop
xchg
dec
enter
mov
out
bswap
addr16
adcb
fsubs
les
pusha
push
outsl
jp
add
xorl
fidivs
xor
cmpsb
lea
jno
xor
in
and
mov
inc
test
mov
push
fsubrl
mov
adc
sub
xchg
mov
out
dec
xor
outsl
arpl
loop
dec
push
dec
sub
push
or
mov
xchg
ror
push
xchg
nop
jmp
xor
cmp
jnp
mov
cmp
repnz
ss
cwtl
xchg
cld
and
xchg
loope
add
adc
mov
pop
hlt
mov
out
jmp
shll
xchg
icebp
adc
add
stos
ja
adcb
into
adc
mov
push
loopne
jmp
dec
mov
inc
repnz
int3
push
xchg
insb
and
jge
leave
cmp
adc
jne
fstps
in
xchg
xor
test
in
cmp
and
mov
xchg
mov
orl
inc
xor
mov
push
push
mov
jmp
cmp
testb
mov
mov
aam
imul
cmpl
mov
pusha
xchg
xor
jnp
dec
add
xor
in
add
mov
adc
arpl
or
mov
adc
jne
inc
shrl
or
pushf
xor
mov
or
mov
cmpsb
je
lret
push
cmc
in
insl
sbb
cmpsb
rcr
sub
imulb
shl
sbb
add
dec
adc
mov
jle
push
xor
sbb
cmpsl
and
dec
jle
repz
xchg
adc
sbb
mov
arpl
int3
mov
inc
sahf
sub
or
adc
lods
pop
xchg
push
out
cwtl
ret
add
outsl
cwtl
and
xchg
xchg
push
sbb
rclb
lods
add
and
mov
mov
lods
add
jge
cmp
shrl
cmp
xor
jbe
xor
imul
mov
mov
out
stc
xchg
scas
xor
int3
lcall
loopne
stos
mov
cmpsb
addr16
and
and
cltd
mov
sbb
repz
mov
mov
inc
jo
lods
mov
inc
xor
popl
ret
fimuls
popf
dec
test
mov
popf
or
shrl
cwtl
in
mov
loopne
mov
rolb
int
mov
jbe
stos
dec
jne
enter
xor
push
sub
dec
xchg
stos
cmp
stos
pusha
jecxz
adc
mov
mov
xlat
mov
test
cmpsb
ds
testb
aad
xchg
stc
xchg
mov
adc
dec
xchg
push
cmpsb
popa
and
mov
lock
aam
push
xor
cmp
lret
gs
scas
jle
mov
inc
jle
inc
loopne
std
clc
pop
xor
add
cmp
lods
sub
mov
stos
mov
mov
adc
jecxz
mov
adc
stos
hlt
inc
sahf
push
sub
mov
jno
or
insb
call
pushf
jo
pop
xchg
mov
push
or
fidivs
fs
dec
pop
cmpsb
in
jno
add
negb
cmpsl
fistpll
jae
mov
loop
jge
cli
mov
je
iret
ret
out
xor
repz
inc
outsl
mul
dec
mov
pop
xchg
mov
or
stos
jne
xchg
mov
mov
xchg
mov
int
add
bsf
adc
ret
aam
icebp
mov
lods
testb
ss
mov
fnsave
xchg
mov
add
movsb
and
std
adc
in
sbb
das
jo
inc
loop
incl
loop
cmp
cwtl
out
fidivrl
pop
push
push
in
lahf
std
xchg
test
xchg
in
add
insb
and
addr16
lods
mov
fidivs
mov
bound
sub
inc
scas
sub
loope
push
movsl
fnstcw
lods
push
push
add
hlt
div
push
xchg
adc
push
sbb
fsubrs
int3
and
sub
mov
in
xlat
iret
clc
out
arpl
jno
call
mov
ljmp
xchg
out
inc
mov
scas
xchg
pusha
jecxz
mov
lret
xchg
mov
sub
pop
scas
jmp
adc
repnz
int3
inc
sub
arpl
ret
faddl
sbb
mov
repnz
xchg
push
test
xchg
sub
dec
cmp
xor
jmp
mov
out
dec
sub
lock
notb
and
push
sar
arpl
dec
sbb
insl
mov
xor
cmpl
push
mov
sbb
popf
negl
mov
push
push
dec
mov
jecxz
dec
jge
sti
mov
adc
jmp
movsl
jns
aad
cmp
test
dec
pop
fsubl
and
add
xor
loope
dec
dec
and
jp
je
push
lcall
xor
lds
mov
xchg
inc
jg
repnz
push
and
push
cwtl
fstpl
or
sbb
les
dec
add
add
flds
mov
mull
xor
nop
inc
and
mulb
ljmp
cmpsb
hlt
frstor
add
adc
lods
daa
inc
add
movsl
sub
out
in
and
divb
insl
mov
mov
lret
or
cmpsb
cmp
ds
xchg
rorb
mov
or
mov
decb
lds
inc
mov
aad
jmp
fwait
in
loope
add
push
cs
test
sub
mov
and
xor
pop
mov
dec
sub
sbb
adc
push
test
dec
mov
or
dec
call
sbb
test
xchg
pop
loop
inc
repz
jp
je
or
mov
movsb
enter
pop
in
sahf
in
cvtps2pi
enter
fwait
push
in
imul
jo
push
std
arpl
mov
shrl
fldlg2
test
add
ret
pop
add
test
sbb
lock
xor
clc
jnp
movsb
xchg
dec
push
out
popa
xlat
xchg
fwait
ds
add
nop
dec
jo
jbe
add
xor
pop
insl
popf
jmp
add
inc
pop
out
or
mov
mov
xchg
sbb
inc
or
pop
cmp
add
lcall
stc
push
xchg
adc
fildl
or
xlat
inc
daa
mov
testl
sbb
shlb
pop
push
dec
jle
ret
mov
mov
in
lret
sbb
jb
cli
sub
dec
add
mov
mov
rcr
pop
mov
out
es
sbb
jp
sbb
push
mov
sarb
ja
mov
ret
mov
and
cld
inc
out
jno
adc
stos
les
ljmp
push
sbb
notb
rolb
dec
cld
test
fstpt
and
daa
aam
push
fs
add
adc
into
data16
jb
dec
sbb
xor
add
fsubl
sub
cmp
pop
fdivs
bound
cmp
das
fdivl
cmc
shrl
pop
lret
movsb
inc
addb
mov
or
pop
push
insl
cmp
mov
ficompl
sarb
shrd
lea
pop
mov
aam
loopne,pt
or
mov
addr16
outsl
in
xchg
bound
leave
scas
pop
sub
enter
add
mov
out
sbb
sbb
ret
inc
jne
stos
icebp
dec
addb
mov
idivl
clc
ret
mov
test
push
xchg
fwait
and
rcrb
test
mov
int
out
xor
sbb
fwait
dec
mov
xchg
push
ret
insb
leave
adc
inc
or
jo,pn
hlt
xor
enter
push
inc
or
fcoml
sub
fs
scas
sbb
push
mov
int
fidivrl
cwtl
fisttpl
xor
popf
stos
sub
sub
outsb
mov
jo
roll
xchg
cmp
dec
pop
push
pop
sti
xchg
inc
or
mov
sbb
in
pop
movsl
imul
xchg
aam
leave
in
mov
or
bound
or
push
call
pop
stos
js
add
fists
orl
cmp
jp
hlt
sti
fdivrl
sarl
repnz
test
pop
jns
cld
add
into
or
sbb
sbbl
loop
or
inc
in
test
mov
add
pop
shll
lods
ss
dec
mov
in
jmp
lret
repnz
push
jge
and
push
rolb
lods
loop
les
aas
push
mov
bound
jge
pop
mov
dec
ss
ds
push
inc
jmp
add
rorl
mov
inc
dec
inc
jo
std
mov
fs
rcll
pop
dec
hlt
mov
inc
push
aaa
push
lret
sti
push
xor
push
arpl
add
push
inc
adc
addl
mov
sbb
jmp
adc
addr16
mov
xchg
adc
push
ret
jp
std
jge
sbb
or
cmp
out
les
cmp
enter
jp
adc
inc
xor
xor
aam
adc
addr16
loop
test
mov
aaa
in
jg
xor
mov
in
mov
shrb
and
movsl
add
push
and
shrb
adc
into
dec
and
xor
icebp
cmc
sub
jp
push
adc
sbb
push
cmp
xlat
xor
inc
mov
xor
xor
lahf
cltd
dec
jo
pushf
ds
sbb
inc
shll
push
mov
cmpsl
frstor
mov
xor
repz
nop
xor
out
sahf
lds
lock
sub
gs
mov
stos
inc
inc
push
mov
mov
jl
jno
xchg
test
shll
push
mov
cs
dec
stos
in
popa
push
mov
adc
daa
dec
mov
add
ljmp
ja
push
mov
cmc
test
loope
jp
repnz
lcall
and
sub
jne
int3
cwtl
push
jne
mov
cmp
mov
lock
mov
insl
insl
gs
out
inc
outsb
pop
xor
push
orb
add
pop
cmc
dec
sub
xchg
dec
push
mov
loope
cmc
and
inc
lret
or
jmp
cmp
mov
cmp
sti
pop
pop
pushf
sbb
ret
inc
fstpt
or
xlat
scas
test
subl
arpl
fistl
add
inc
sbb
sarl
jp
in
fs
adc
mov
mov
jle
inc
popf
aas
jns
cltd
pop
xchg
pop
push
sti
call
dec
out
int
add
dec
nop
dec
je
icebp
mov
mov
mov
xchg
push
jb
cli
mov
push
fs
cmp
jmp
sub
sti
scas
out
mull
lahf
pop
sbb
out
jnp
enter
loop
cmp
cmp
push
and
mov
repnz
jp
out
fcmovnu
incb
push
add
aaa
mulb
dec
cmp
fldl
inc
adc
fwait
aas
in
xchg
es
mov
xchg
jg
push
cli
adc
out
inc
pop
inc
cmp
jbe
sbb
fnstcw
test
and
aam
aaa
mov
shll
mov
dec
out
cmp
cs
and
sbb
dec
and
jp
push
into
roll
lahf
popf
sarb
sub
xor
or
and
mov
cmp
inc
push
adc
mull
mov
or
mov
cmpl
sbb
sub
inc
push
and
orl
and
sub
push
pop
nop
pop
xchg
into
or
xor
ret
xchg
int
popf
mov
fildll
data16
sbb
dec
sub
xchg
pop
sbb
add
and
gs
das
stos
mov
dec
mov
fldl2e
jns
das
or
es
inc
xchg
lahf
arpl
xchg
fwait
mov
cmpl
in
mov
fmuls
push
popf
movsl
xor
mov
out
sbb
bound
xor
int3
xor
shlb
sbbl
add
dec
dec
xchg
mov
jge
ss
add
mov
cmp
das
push
leave
daa
cmp
inc
bound
mov
or
inc
fsubl
std
inc
cmpsb
xorl
das
leave
sub
sbb
xorb
jmp
aam
xchg
inc
pop
xchg
sti
inc
pop
in
loopne
inc
cmpsb
sbb
adc
sub
loopne
jecxz
rorl
negb
popa
pop
xlat
adc
les
incl
sbb
fcompl
push
arpl
xor
sbb
lock
adc
mov
test
mov
inc
mov
ret
adc
enter
ljmp
xor
fldl2e
jnp
in
xrelease
jno
inc
jns
aas
add
mov
rolb
jno
outsb
insl
popf
imull
imulb
push
or
mov
mov
and
insl
sub
cltd
sub
push
test
fstp
add
sub
mov
xor
out
ljmp
lods
dec
push
pop
adc
into
ret
mov
bound
fnstsw
and
mov
scas
and
xchg
fimull
addr16
shll
orl
mov
mov
add
leave
dec
sarl
adcl
call
lods
mov
stos
lret
push
push
jle
or
mov
inc
or
dec
lret
push
mov
lock
subl
dec
add
jo
pushf
xchg
test
stos
nop
icebp
addr16
psrad
int
sti
shlb
sbb
push
sub
enter
lcall
out
out
icebp
mov
push
fiadds
frstor
mov
mov
and
mov
bound
fistpl
mov
clc
cmp
test
pusha
pop
int3
test
xchg
sub
les
dec
xorb
lea
cltd
aas
call
mov
or
fwait
stos
or
push
adc
add
mov
subb
adc
cmpsl
call
iret
sub
pop
push
in
lds
cmp
out
int
or
push
movsb
mov
fidivs
xor
lret
mov
in
out
add
mov
es
imul
jle
sbb
adc
push
push
stos
scas
shr
ret
mov
addr16
mov
inc
adc
inc
xchg
push
test
add
addr16
push
xchg
imul
pusha
ret
mov
inc
aam
jmp
sbbb
pop
lock
jge
and
fcoms
clc
xchg
pop
xchg
nop
dec
lret
dec
jg
decb
jne
imul
sbb
dec
sar
xchg
jecxz
mov
adc
inc
mov
sbb
icebp
xchg
add
shlb
orl
dec
mulb
int
scas
mov
jmp
cs
cmp
stos
movsl
dec
jp
outsb
lcall
or
and
sbb
mov
test
ljmp
push
outsb
fs
aas
cmp
mov
adc
sub
lahf
out
sti
inc
add
and
pop
add
inc
jbe
loopne
jp
push
div
popf
mov
and
sbb
mov
aas
push
mov
inc
movsl
dec
push
in
add
or
mov
popa
jo
pop
mov
pop
psubusw
lret
cmp
fabs
jmp
out
mov
mov
push
sub
arpl
mov
ds
adc
stc
jg
sub
test
sbb
dec
add
sbb
cld
nop
and
hlt
sbb
rorb
es
xchg
xor
add
mov
faddl
xor
shl
inc
jae
lahf
bound
out
mov
dec
lods
lds
ljmp
pushf
mov
sbb
stos
or
pop
inc
stos
out
lcall
jp
iret
cmp
dec
jp
out
dec
jl
push
xlat
dec
insb
pushf
and
mov
aaa
jb
call
es
aas
clc
mov
mov
add
pusha
and
add
dec
aas
xchg
sub
mov
imul
pushf
test
xchg
pop
and
and
jp
pcmpgtb
lret
mov
in
or
addr16
orb
aam
cmp
aad
ja
mov
mov
test
inc
pop
test
sub
pop
call
mov
jae
lea
mov
pushf
xchg
add
out
inc
daa
adc
sub
mov
sub
adc
adc
or
in
pop
mov
movb
shr
repnz
aas
faddl
mov
shrl
sub
jne
mov
icebp
sbb
inc
cmp
push
test
push
fcmovnb
mov
test
xchg
loopne
in
inc
ret
sbb
cld
push
inc
cmp
jbe
out
add
pop
pop
popa
adc
rcr
mov
imul
sti
rcll
cld
inc
sub
mov
pushf
ds
in
ja
mov
rclb
dec
mov
push
loop
mul
cmpsl
mov
adc
ljmp
adc
scas
shlb
mov
xchg
loop
pop
pop
cmpsb
pop
fisubl
and
cmpsl
ret
inc
fisubl
lcall
loopne
lret
int3
fistps
cltd
addl
xchg
mov
out
sbb
mov
fs
loope
jae
xchg
or
sub
scas
mov
jge
add
loopne
jp
jecxz
repz
xchg
pop
xchg
inc
imul
sub
stc
inc
hlt
fdivr
lret
cli
sarl
push
jae
movsb
sbb
push
mov
shlb
movsl
and
jbe
in
das
push
sub
cmp
mov
rolb
iret
sar
add
mov
mov
ljmp
mov
aam
or
clc
jbe
jo
jb
insl
lea
cmp
sbb
sub
pusha
cmp
lea
xchg
test
data16
mov
out
fiadds
clc
stc
icebp
idivl
or
jb
add
lods
test
fisubrl
pop
out
sbb
popa
outsb
test
adc
cmp
jg
and
aad
lock
adc
jnp
loope
les
ja
es
and
ret
hlt
inc
cmp
xchg
fs
jecxz
nop
mov
je
mov
fcomip
xchg
inc
mov
aaa
aaa
sbb
les
cwtl
stc
inc
mov
pop
xchg
mov
nop
xor
xor
inc
mov
cwtl
test
pop
loopne
jecxz
cs
hlt
add
leave
push
cmp
in
insb
rcrl
stc
or
push
add
sahf
ds
out
lret
mov
mov
rcrl
xor
dec
inc
mov
sbb
faddl
mov
in
gs
cmp
cmc
or
xchg
test
scas
dec
mov
xor
push
dec
mov
leave
int3
popa
addr16
fs
xlat
pop
js
imul
sahf
loope
inc
roll
pop
pop
in
es
sub
xchg
lea
xor
ret
lods
dec
lock
cmpsb
mov
xchg
stos
xor
cmc
xchg
pop
xlat
sub
xor
sarb
fistl
mov
xchg
loopne
push
mov
xor
shll
xorb
ss
int
leave
sbb
pop
or
xchg
bound
xchg
inc
iret
add
jbe
fisubl
mov
ret
orb
or
mov
jae
jae
out
imul
call
pop
sar
nopl
lret
and
cs
and
xor
in
mov
xchg
gs
pop
mov
out
jmp
sub
sbbb
cmp
push
inc
mov
cmpsl
cmp
jo
ss
cmpsl
dec
out
jb
mov
jg
jnp
in
mov
jp
sbb
sti
lock
mov
ljmp
dec
ret
jmp
adc
fwait
push
int
pop
jo
push
stc
mov
and
dec
mov
mov
dec
sbb
push
ja
xchg
bound
inc
outsb
nop
cs
cmp
and
inc
fwait
cwtl
insl
jecxz
shlb
testb
or
nop
lds
cmp
pusha
lea
xchg
mov
dec
xchg
pusha
aad
mov
sub
sahf
imul
gs
loopne
or
mov
push
push
aad
lahf
mov
out
cli
cs
es
push
or
sbb
mov
lret
push
in
jno
mov
add
mov
jmp
or
das
cmp
sub
pop
mov
pusha
xchg
inc
stos
clc
mov
xor
xchg
rcl
mov
sub
jno,pt
pop
mov
jge
rclb
xchg
jecxz
mov
jp
xchg
jne
adc
xor
dec
jecxz
and
les
jl
sahf
mov
sub
sub
call
movsl
shr
stos
mov
out
sbb
lret
inc
out
jp
cmpsl
data16
aas
push
adc
mov
cmp
adc
sbb
jo
jecxz
xor
jecxz,pt
cmc
std
test
mov
addr16
rclb
cmp
xchg
cmp
mov
fs
stos
cmp
loop
jb
loopne
push
dec
push
pop
pop
lcall
insb
imulb
push
gs
or
in
jge
adc
pop
or
imul
aas
sub
les
dec
cmpb
sbb
in
stos
lods
pop
repnz
lods
push
mov
xor
push
jb
mov
xchg
adc
push
inc
stos
fldl
stc
mov
divb
popf
mov
inc
sub
adcl
mov
int3
lds
adc
pusha
pop
ss
adc
sbb
lret
popf
jl
sub
cmp
fsubl
push
lret
ljmp
cltd
inc
xorps
pop
nop
hlt
mov
mov
in
and
and
mov
lods
jno
sub
jp
rol
es
lcall
or
in
add
imulb
fcompl
jl
push
lock
enter
xchg
dec
ret
xchg
insl
bound
insb
mov
clc
jb
add
cmp
sub
lret
or
sbb
insb
dec
add
jp
cmp
push
mov
lods
in
cmpsb
scas
and
ja
lcall
adc
in
cmp
addr16
adc
into
ja
cmpsb
dec
mov
ret
add
pop
mov
jle
iret
pop
test
clc
movsb
into
sbb
mov
push
aad
mov
mov
loope
jbe
mov
test
sbb
pushf
enter
sub
jns
mov
dec
addr16
dec
add
jl
movzwl
lea
ljmp
jne
pop
lahf
mov
icebp
cmp
pop
mov
push
dec
jo
andl
rcrl
mov
jmp
push
test
pop
jge
loop
ret
dec
jne
stos
ror
rorl
mov
cmp
cmp
outsl
dec
add
xchg
out
sbb
jno
jae
rorl
jnp
pusha
sarl
xchg
lret
outsl
mov
cmc
mov
sub
xor
lcall
jmp
notl
sti
dec
stos
aas
std
movsl
pop
jo
das
nop
into
mov
cmp
jge
lds
jp
mov
sub
or
sarl
jle
fstpt
or
clc
sti
or
iret
sbb
out
aas
adc
in
xchg
pop
lret
sub
mov
xor
inc
bound
sbb
lods
jmp
jne
jl
sub
daa
push
fs
add
push
mov
std
movl
aad
push
mov
pusha
mov
stc
ja
cmpsb
popa
xchg
mov
subb
inc
in
jnp
jo
loopne
les
sub
mov
sbb
pop
push
repz
cli
jge
bound
pop
cwtl
lret
outsl
imul
loop
rorl
sub
adc
mov
pop
ja
and
outsb
and
mov
popa
adc
scas
pop
js
cmp
push
dec
pop
ret
xor
stc
movsb
ds
xchg
pusha
in
jns
push
stc
mov
xchg
cmpsl
pusha
sub
jae
scas
xchg
ds
push
xchg
movsl
pop
and
push
pop
mov
fldl
rclb
outsl
sub
cli
cmp
es
mov
jmp
call
ja
movsl
dec
dec
aad
dec
in
cmpb
lock
mov
and
icebp
stos
fstpl
hlt
dec
cmp
jmp
fcompl
bound
push
mov
shlb
jbe
repz
adc
lock
sahf
cmp
sbb
fdivrs
nop
sub
cmp
cmpsb
aad
negb
mov
in
icebp
rcrb
push
push
bswap
add
pop
and
mov
stos
jno
mov
jbe
add
mov
adc
rol
fiaddl
adcl
mov
rcrl
add
adc
and
add
sar
sub
mov
mov
inc
cmp
xchg
shll
sub
jo
or
addr16
and
clc
ja
push
fildll
out
scas
dec
sbb
test
cmp
xor
lock
stc
cmp
mov
push
add
mov
pop
dec
push
stos
daa
scas
lods
cmp
dec
mov
cmc
xor
lret
cmp
xor
fistpl
loopne
scas
jp
test
mov
in
pop
add
cmp
bound
ret
adc
jmp
push
movsb
mov
adc
mov
xorb
sbb
push
ja
and
data16
pop
inc
jge
mov
shrl
mov
js
sti
mov
outsb
jp
xchg
popf
stc
mov
mov
adc
lds
mov
je
loop
repnz
or
xchg
loope
adc
mov
movsl
jns
push
sub
aad
test
lahf
push
jmp
inc
fildll
test
mov
or
push
lret
cmc
lret
jns
sti
mov
and
sub
imul
cmp
cli
mov
fsts
mov
lret
jns
fmull
mov
push
test
xchg
push
enter
push
pop
mov
bnd
aaa
test
popa
lahf
mov
arpl
dec
mov
pop
sbb
lret
xlat
arpl
xchg
insb
outsb
fdivr
aaa
fdivs
sbb
jae
cmpsb
sub
data16
mov
imul
movsl
mov
adc
mov
jo
adc
cmc
pop
nop
or
push
js
fs
je
push
and
sub
notl
leave
or
shrb
lods
dec
xorb
hlt
pop
sub
inc
pop
enter
xor
mov
jle
mov
push
xchg
add
bound
pop
push
mov
ret
mov
mov
inc
fincstp
add
jne
jno
cmp
stos
popa
sbb
push
push
cltd
ficomps
sub
daa
xchg
xor
pusha
cmp
rolb
push
ss
fidivl
xchg
xor
test
mov
scas
jns
or
sahf
andl
int
pop
and
jno
outsb
push
inc
inc
aad
dec
push
les
jmp
lds
add
mov
jge
xchg
cmc
fs
mov
push
xchg
add
and
adc
cwtl
jne
in
inc
mov
loop
stc
into
mov
dec
xor
mov
and
xor
rcl
xchg
int3
cld
hlt
cltd
fidivrs
repnz
or
cs
cwtl
dec
mov
movsb
push
enter
das
adc
jne
das
test
pusha
pop
data16
cmpsb
push
jmp
rol
ja
popf
pop
and
les
and
xchg
shll
pushf
jge
bound
lock
xor
imul
ret
into
cwtl
imul
add
ds
jo
xor
sbb
repz
stos
sbb
scas
mov
hlt
int3
dec
movsb
jl
es
orb
mov
sbbl
repz
nop
shl
push
dec
rcrb
test
mov
out
stc
mov
stc
mov
lret
rorb
or
dec
dec
loop
jmp
jb
jnp
inc
adc
lcall
inc
out
xor
pop
or
imulb
push
mov
mov
adc
adc
movsl
jecxz
fnstenv
dec
mov
out
mov
in
and
cld
loope
pop
fistpl
jo
ljmp
push
mov
cmp
cwtl
shr
fxch
jg
dec
fdivr
imul
jo
aad
push
out
mov
pusha
cmp
movsb
movsb
int
clc
mov
xchg
mov
mov
pusha
push
shrb
fs
mov
fsubl
repnz
sbb
jne
sbb
jle
xchg
insb
xor
je
pop
xchg
ja
mov
ljmp
int
inc
cld
push
out
mov
stos
xor
rclb
mov
inc
clc
push
xchg
fs
and
lods
mov
lahf
jle
mov
mov
int
jns
push
adc
repz
cmc
mov
flds
repz
cmp
pop
loope
int
cmp
push
xchg
jle
mov
jg
aas
popf
insb
or
insb
pop
mov
xchg
dec
pop
pop
mov
and
add
mov
neg
out
or
push
rep
dec
cwtl
push
sub
shlb
mov
or
jne
shlb
sbb
mov
cmp
cmpsl
sbb
push
pushf
lock
jle
imull
cmp
pop
mov
add
inc
push
sbb
fiaddl
adc
jno
sarb
pushf
jg
into
mov
das
ds
pop
outsb
add
lahf
push
lods
xchg
xchg
mov
das
rcrb
inc
subb
pop
cmc
pop
mov
cmpsl
mov
mov
push
arpl
cmpsl
mov
ds
fwait
cs
icebp
mov
test
test
mov
sub
sar
adc
mov
pop
lret
xlat
ljmp
int3
fcos
lret
sub
outsl
fmuls
ds
insb
fs
and
mov
xor
xchg
hlt
xchg
mov
inc
and
sub
add
xor
inc
mov
movsb
idivb
mov
mov
fwait
xor
jns
insl
jb
lcall
pop
out
stos
sbb
push
add
icebp
outsb
sub
in
dec
mov
scas
ss
imul
std
push
mov
repz
fwait
lods
mov
lea
inc
les
pop
mov
dec
adc
mov
xor
dec
out
adc
pop
outsl
pop
addl
dec
ja
inc
repnz
add
add
fidivl
and
orb
int3
nop
mull
scas
cwtl
and
pop
and
loope
cmc
cmpsl
pop
mov
inc
les
rcll
popf
daa
lock
nop
add
adc
jnp
add
pop
arpl
push
jo
lea
mov
cmp
add
sbb
xchg
mov
test
jne
movaps
jb
or
add
insl
mov
loop
mov
bound
jb
push
xchg
xor
shll
push
xor
mov
in
adc
xor
jae
sub
inc
pop
pop
xor
aam
or
sbb
fwait
pop
push
test
fdivrl
clc
mov
ljmp
dec
xor
xor
adc
and
pop
sub
lods
es
push
cmp
sub
pusha
mov
imul
aaa
push
inc
xchg
inc
sub
dec
jge
xor
pop
sub
xorl
xor
inc
fisttpl
cmpsl
or
lods
xor
mov
push
nop
andl
testb
push
push
rcrb
inc
sub
xchg
sbb
incb
jl
adc
punpckhdq
mov
xor
push
rcl
in
hlt
and
popf
add
jecxz
in
or
popa
dec
inc
xchg
out
aaa
xchg
sub
inc
call
rorl
rcrb
aad
insl
cmpsl
adc
and
dec
mov
jg
lahf
sti
lcall
pop
in
sti
push
inc
cltd
loope
mov
and
es
push
sbb
movsl
add
out
sub
clc
cmp
xchg
and
popf
pop
daa
mov
sub
jge
mov
and
cmc
andl
and
push
xchg
sub
jecxz
fcoml
dec
xchg
xchg
insl
sbbb
mov
in
ret
jmp
pop
jp
xchg
sbb
add
icebp
aaa
dec
push
repnz
ficompl
ljmp
insl
dec
dec
je
dec
mov
pusha
jns
inc
ficoms
pop
xchg
xor
push
jp
adc
push
je
ret
lea
imul
push
xor
out
push
push
jl
outsl
cmp
push
mov
jg
pop
popa
jmp
fsubs
jmp
pop
pop
int
pop
push
cmp
dec
shrb
ss
mov
xor
std
xchg
jno
repnz
push
leave
and
adc
jae
inc
xor
and
icebp
pop
neg
hlt
mov
lret
es
sahf
push
lods
ja
call
outsb
xchg
hlt
and
mov
pop
dec
xchg
jmp
or
addr16
or
cmp
icebp
mov
cmpsl
sahf
aad
int3
aam
cmpl
mov
xor
popa
nop
lcall
push
fwait
or
fnsave
mov
das
xchg
pop
mov
and
aas
repnz
test
das
dec
das
xchg
lods
push
push
popa
and
sub
inc
cmpsl
out
data16
mov
loop
ficompl
xchg
out
mov
jecxz
outsb
insb
out
push
out
pop
repz
xchg
icebp
inc
in
test
mov
inc
shll
push
push
xor
cmp
lods
inc
sahf
push
les
push
sub
in
mov
mov
repz
pop
pop
pusha
notl
iret
push
das
out
sbbb
stc
jp
mov
pop
add
loope
sti
xor
lcall
add
add
mov
inc
pop
in
adc
push
sbb
lcall
pusha
xchg
and
aaa
mov
shrb
ja
lock
dec
pop
test
cmp
into
sbbl
leave
pop
aad
fistps
mov
fcompp
cmpb
sub
test
mov
sub
xchg
jmp
pushf
push
gs
xchg
push
adc
jge
sbb
aad
outsl
dec
adc
sahf
aaa
or
lea
jmp
sub
jno
loopne
pop
sbb
and
push
and
push
and
add
in
cmp
aad
inc
fs
sub
sub
pusha
push
pop
cld
add
push
jno
in
adcb
push
out
lret
adc
push
mov
movlhps
testb
push
or
lock
xchg
add
in
sti
popf
push
faddp
rclb
xchg
lea
or
outsl
lret
jno
cmp
adc
sbb
insb
pop
fistps
pop
mov
std
adc
and
jl
and
cmpsl
push
adc
sbb
or
stos
and
pop
aaa
xchg
push
stos
ret
enter
and
add
cld
xor
shrl
mov
inc
sub
and
add
lret
jecxz
or
and
pop
setp
orb
notb
jns
add
and
int
add
mov
jp
enter
arpl
arpl
xchg
ret
fsubrp
div
mov
ret
push
enter
cmp
loope
inc
mov
cmp
std
dec
or
push
and
scas
push
cmp
in
jge
jne
mov
rcrl
clc
popf
pushl
push
inc
jnp
sbb
cmp
pop
xor
sbb
dec
mov
mov
fidivl
adc
jne
or
xchg
mov
cmp
out
sbb
push
dec
xor
push
mov
pop
test
sbb
jae
clc
repz
mov
push
pop
mov
lret
add
fwait
adc
adc
leave
test
lea
int
pop
mov
cmpsb
mov
inc
mov
leave
xchg
popa
or
mov
sti
jg
mov
sbb
mov
jb
mov
mov
xorl
add
push
addl
loope
and
negl
out
cmc
mov
ss
test
lahf
mov
cmpb
xor
movsl
xor
lods
loop
popl
loopne
lods
scas
shl
sub
fs
mov
xchg
sub
ret
inc
loopne
out
test
clc
xchg
ss
stos
fs
xchg
xorl
jae
or
test
cmp
inc
fsubr
cltd
int3
idiv
jmp
sub
adc
mov
cs
iret
mov
scas
rcr
das
sbb
xchg
pop
lahf
push
imul
imul
loope
scas
adc
cmp
inc
xchg
add
mov
pushf
mul
movsb
out
mov
ret
fistpll
icebp
insb
mov
aaa
sbb
adc
mov
adc
fmull
rep
adc
jmp
jns
inc
or
cmp
mov
jno
je
pop
adc
adc
xchg
test
jg
sub
scas
add
fldl
cs
adc
je
flds
jae
les
jl
subb
gs
xor
sahf
cltd
cmp
repz
repz
cwtl
jnp
or
pop
daa
in
dec
and
dec
inc
push
ja
aad
push
and
dec
xor
push
sub
mov
xchg
insl
nop
add
iret
or
dec
push
fst
imul
jecxz
adc
xchg
mov
xlat
sarl
adc
cltd
push
rolb
jno
or
ret
jg
adc
fisubs
or
icebp
loop
push
cwtl
add
mov
rcll
mov
pop
mov
into
fadd
xchg
ret
fmul
jb
inc
jae
cs
cwtl
test
pusha
dec
aad
adc
and
pop
push
push
imul
sbb
out
cmp
aad
adc
cmp
sub
rolb
in
popf
lahf
pushf
xor
mov
scas
hlt
test
mov
add
ljmp
orl
push
sbb
mov
fdivr
test
fwait
cwtl
mov
jo
xor
xchg
and
out
and
jnp
jns
pop
imul
adc
loopne
js
jne
addr16
inc
sbb
cmp
sbb
adc
jo
xchg
adc
lods
imul
int3
stos
aam
adc
or
fs
adc
cmp
mov
jo
mov
jmp
repnz
insl
int3
mov
mov
test
sub
push
sub
xchg
xchg
sbb
cmpsb
clc
push
mov
test
scas
hlt
mov
jp
sahf
mov
push
xchg
into
loopne
loopne
add
stos
aas
jae
dec
pop
push
ja
adc
outsl
push
mov
test
cmp
inc
cwtl
mov
adc
inc
nop
pop
xor
rcrb
test
xor
mov
inc
or
inc
mov
lcall
push
lcall
jle
movsl
ret
jg
std
icebp
orl
cmpsl
or
int
xor
rcl
adc
lcall
inc
stc
jnp
xchg
lods
fldt
push
mov
jge
jb
sbb
pop
cmpsb
lret
mov
ja
xcrypt-cfb
cmpsl
cmpsl
or
add
pop
lret
xchg
sub
push
mov
mov
mov
data16
or
pop
cltd
movl
push
cwtl
push
push
push
or
inc
xchg
pop
imul
in
pusha
mov
sub
dec
inc
fwait
insl
cli
nop
push
xlat
int3
pop
inc
pushf
adc
sub
xor
out
aaa
dec
pushf
xchg
xor
sti
in
mov
std
adc
scas
inc
in
int3
ret
sbb
enter
cmp
fwait
arpl
repnz
jle
outsb
mov
dec
int
in
ret
nop
fs
fdivrs
repz
xor
stc
je
push
cmpsl
xchg
pop
orb
js
cli
xor
ret
push
clc
lret
popf
clc
and
test
and
push
fwait
dec
jb
or
mov
add
movsb
ja
xchg
shll
inc
and
lock
test
movsl
dec
xchg
mov
xchg
xor
in
pop
jl
adc
insb
roll
mov
jns
in
push
xchg
pop
add
ja
jmp
mov
mov
cmp
jnp
jmp
add
cld
jnp
lret
mov
mov
cmp
lahf
aam
int
test
or
enter
mov
mov
jo
rorb
pop
push
lds
fdivs
sar
jg
jae
dec
cmp
push
and
outsb
stos
out
xor
mov
and
lcall
pop
mov
data16
add
dec
jle
popf
in
mov
pop
mov
subl
mov
or
xor
xchg
jmp
xchg
insb
fsubrp
xchg
lahf
icebp
xchg
incb
ljmp
xor
or
xor
outsb
out
inc
mov
push
push
mulb
inc
adc
pop
aaa
das
sahf
enter
fbstp
out
inc
pop
and
jno
les
cwtl
xchg
loopne
sbb
mov
aaa
hlt
cli
xchg
or
cmpsl
addr16
std
jmp
into
jo
fsub
xchg
sub
cmp
rolb
jge
cmp
test
pop
and
in
mov
xchg
cmp
mov
ret
or
add
cltd
add
push
xchg
inc
jnp
add
repnz
push
insb
ds
adc
lods
pop
and
jns
out
out
mov
xchg
stos
iret
mov
inc
insl
dec
sub
dec
test
js
loopne
scas
scas
cwtl
mov
push
repz
mov
out
or
inc
lret
stc
hlt
aaa
cmp
dec
outsb
xchg
lods
std
mov
cmp
pusha
aas
scas
mov
xlat
dec
xchg
sti
lcall
fwait
pop
movsb
cwtl
or
mov
jmp
pop
repz
ljmp
ds
sub
mov
dec
sbb
lret
cmp
or
cmp
mov
into
pop
frstor
aam
dec
out
rcll
adc
rcll
sub
lret
jge
jecxz
sbb
popf
jae
mov
or
pop
push
lock
or
sahf
dec
push
adc
negb
sub
mov
sbb
rcr
mov
incb
inc
xor
sub
and
sti
mov
pop
int3
pushf
cmp
or
in
jg
lahf
dec
xor
fimull
lret
shl
ljmp
insl
and
repnz
std
sbb
sub
jns
mov
popa
in
pushf
dec
adcb
lods
mov
dec
mov
jae
lcall
mov
testl
fistpll
std
xchg
mov
loopne
adc
mov
pop
and
insb
into
pop
mov
out
jge
rol
test
xor
lds
bound
in
push
cmp
rclb
lds
add
mov
inc
cmpsl
test
fs
jmp
loope
lahf
xchg
mov
andb
mov
fistpll
mov
adc
orb
and
dec
and
test
mov
dec
lds
jp
mov
popa
mov
adc
adc
cmpsl
pop
add
and
pusha
icebp
in
or
lret
lcall
and
lods
leave
movsb
mov
ret
pop
mov
mov
adc
or
inc
pop
inc
sbbl
adc
xchg
mulb
clc
movsl
rorb
xchg
cmpsl
xchg
pop
scas
aaa
xlat
jb
cmpsb
arpl
mov
cmp
pop
cmp
xor
repnz
in
sti
sub
inc
dec
inc
fcmovnu
mov
outsl
xchg
stos
sub
push
or
or
push
inc
xchg
jb
loopne
outsb
mov
filds
es
mov
xor
mov
cmp
add
sbb
int3
mov
push
xchg
decb
sti
orb
imul
sub
daa
adc
push
xabort
and
leave
sub
mov
int3
scas
mov
fstps
test
xchg
loop
jg
inc
xor
icebp
push
inc
scas
leave
dec
add
jnp
std
pop
jbe
mov
outsl
jmp
xor
scas
rcrb
ret
cmp
fisubs
loopne
int3
xor
or
mov
xchg
dec
dec
jb
in
xchg
aad
adc
out
jmp
sbb
and
fsts
or
mov
push
addl
arpl
fiadds
pushf
mov
mov
pop
jbe
nopl
popa
or
jno
lret
mov
mov
popa
mov
ljmp
jecxz
dec
arpl
loope
ss
xchg
iret
imul
cmp
cmpl
sbb
push
mov
dec
fs
lahf
mov
pop
insl
jge
ret
adc
mov
out
into
addl
cli
stc
inc
outsb
pusha
aas
add
fildl
test
add
out
inc
pop
add
lea
and
mov
shl
add
xchg
push
sub
jmp
sbb
add
jecxz
adc
popa
xchg
bound
cmc
cld
jle
add
push
jg
fsubrs
lret
pop
call
into
mov
stos
pop
xor
ljmp
jmp
fs
addl
fisubrl
std
push
cmp
cmp
enter
mulb
lock
je
sub
js
mov
jp
fmull
fcom
add
mov
insl
mov
push
out
out
add
mov
pop
adc
inc
movsl
inc
mov
in
pop
int3
push
adc
pop
push
xor
mov
push
fwait
lock
out
fmull
out
and
mov
and
call
add
inc
or
fsts
mov
fcompl
xchg
mov
and
mov
xchg
mov
jns
inc
pusha
lahf
inc
mov
lret
dec
fnsave
jg
popf
xor
mov
jecxz
pop
mov
hlt
pop
inc
jle
push
jle
out
inc
or
jae
or
inc
ror
jle
cmc
rcrb
fsub
and
mov
call
xor
movsb
adc
outsb
das
inc
jmp
mov
fistl
shlb
sbb
repnz
push
fists
jge
jge
mov
ret
cs
mov
or
and
ljmp
iret
cmp
es
add
lods
add
mov
test
push
push
ja
mov
mov
dec
ret
xor
xlat
cld
into
out
jmp
jl
add
fs
push
jecxz
cmc
mov
dec
fdivr
cmpsb
pop
push
mov
enter
lret
xor
pop
sub
test
insl
and
xor
rcr
into
pop
inc
fisubs
pop
dec
xchg
rorb
pop
js
pop
icebp
pop
push
fs
cmpsl
in
mov
and
cmpsl
inc
push
test
and
xchg
or
lea
push
ret
adc
imul
pop
test
xchg
repz
ret
test
xor
adc
lods
pop
jbe
xor
pop
jnp
lcall
jb
and
jae
jmp
push
aaa
test
packssdw
insl
cmpsl
dec
mov
jno
xchg
and
out
cmp
sahf
pop
push
add
mov
mov
stc
or
xchg
push
push
nop
shll
arpl
xchg
popa
xchg
or
lret
cmp
inc
je
cmp
sbb
dec
pop
xchg
pop
adc
fs
js
movsb
mov
addr16
cmp
pop
and
stos
scas
out
aaa
shll
add
ret
xchg
xchg
fidivs
insb
insb
divl
int3
sbb
jmp
bound
insl
xlat
sti
js
pop
dec
test
fcmovne
sarb
ret
ss
push
add
rcr
mov
inc
jne
and
in
xor
fdivrs
shll
outsb
xchg
inc
leave
popf
in
idivb
cmp
jne
or
orl
lahf
cmp
insl
xchg
shlb
shl
jb
mov
jmp
inc
xchg
test
scas
jnp
mov
mov
or
mov
nop
xchg
push
fwait
push
sbb
mov
repz
mov
add
jno
rclb
jg
or
std
call
sub
shll
loope
cmp
push
xchg
xor
and
inc
add
in
inc
mov
add
mov
cmp
imul
push
and
mov
hlt
jbe
add
pusha
inc
loop
rclb
jmp
xchg
and
icebp
push
iret
cmp
mov
aad
lcall
adc
push
leave
xor
adc
ljmp
into
sub
pop
scas
repnz
xor
loope
inc
movsb
dec
clc
pop
fstpt
jae
jne
sub
xchg
iret
or
ljmp
dec
jne
arpl
adc
out
out
inc
ss
pop
mov
pop
and
fadd
stos
icebp
sarb
jo
mov
fidivs
and
insl
push
inc
lcall
jp
adc
mov
jne
aas
fstpt
mov
ja
cmpl
fdivr
pusha
cmp
xlat
fbld
jmp
inc
cltd
clc
loop
push
shld
add
adc
sbb
add
mov
rcrb
mov
in
jp
sbb
jo
insb
sbb
cld
xor
jnp
outsl
push
in
mov
inc
dec
rcl
divb
dec
ret
in
in
out
and
aad
sbb
test
mov
pop
xchg
arpl
cmpsl
pop
test
insl
stc
lea
adc
jmp
push
in
scas
rolb
aas
out
pop
out
inc
fcomp
fmuls
mov
loope
mov
jle
enter
add
fimull
push
and
in
inc
add
je
scas
stos
jo
cmp
bound
and
adc
int3
lods
xchg
hlt
xchg
inc
xchg
pop
fbstp
mov
mov
sbb
push
outsb
mov
setae
adc
clc
xchg
mov
mov
add
test
pop
add
and
jle
loope
sarl
sub
ret
sbb
stc
xor
cmp
push
sub
xchg
adc
in
leave
loop
ja,pt
lods
es
add
jo
xor
adc
into
js
sbb
cltd
mov
jmp
mov
cmp
mov
ja
lcall
loope
mov
iret
outsl
xor
into
jecxz
nop
shrb
and
xor
push
xchg
or
jge
jae
xchg
push
push
mov
ret
pushf
push
adc
ds
mov
mov
xor
and
cld
sbb
mov
mov
popf
movsl
push
sub
dec
xchg
sti
or
int
fcompl
pop
fs
call
xchg
mov
cmp
dec
lea
mov
pop
push
icebp
pop
adc
iret
sbb
loop
fnstsw
add
xor
es
aam
jne
lret
cbtw
fcomp
inc
les
in
xchg
pop
test
mov
sub
sarb
jo
out
mov
push
sub
or
jns
call
mov
popl
mov
and
daa
and
mov
jae
into
sarl
mov
icebp
je
mov
adc
fsubl
movq
jae,pn
sub
xlat
push
and
mov
cld
ret
in
mov
daa
mov
sahf
mov
mov
jle
packuswb
shrl
pop
mov
pop
or
or
test
add
outsb
or
inc
jae
loopne
aaa
cmp
ret
and
mov
mov
adc
xor
arpl
or
testl
mov
clc
aam
mov
mov
movsl
iret
dec
jo
dec
loope
xchg
pop
mov
int
lds
push
add
or
dec
filds
adc
or
jns
xchg
cmp
mov
inc
movsb
shr
add
loop
dec
scas
sub
mov
pop
out
push
aam
fildl
adc
mov
andb
mov
cld
xchg
sti
push
xor
sub
in
sbb
or
ja
cli
stos
adc
add
pop
push
dec
and
jge
shll
bound
jmp
mov
shrb
test
aaa
cmp
jecxz
mov
push
pop
addb
mov
mov
mulb
inc
pop
mov
inc
decl
pop
shr
push
sbb
adc
insl
add
div
addl
enter
fucom
lods
inc
ret
das
jl
dec
addb
push
pop
pop
nop
cmc
lahf
movsb
aam
sub
cmp
test
xor
or
ficomps
lcall
xor
push
dec
addr16
pop
add
mov
sub
jb
addl
fnstcw
cmp
or
inc
push
aad
mov
mov
and
and
sub
pop
inc
pop
aas
push
mov
xor
push
rcrl
out
mov
jp
call
jmp
mov
mov
gs
in
mov
decb
push
fistpll
std
out
pop
mov
inc
data16
enter
mov
fwait
or
enter
stos
or
push
idiv
icebp
mov
push
hlt
aas
xchg
enter
add
xchg
push
xor
cmp
fstpt
sub
xchg
out
test
call
cwtl
add
lret
jp
loopw
pushf
scas
sti
das
leave
pop
or
pusha
push
sbbl
dec
sbb
and
push
and
ret
nop
xor
popf
add
loop
pop
bound
push
cmp
movsb
in
adc
mov
cld
scas
leave
fldt
pusha
mov
add
cmp
push
push
adc
xchg
inc
mov
repnz
fsts
mov
ljmp
sbb
xor
fsubrl
movsl
jnp
mov
push
in
int3
lcall
movb
sub
jae
test
fsubrs
scas
mov
cmp
ss
pop
rcll
ret
test
rcll
pop
shl
mov
pop
and
xor
xchg
pushf
add
dec
mov
in
iret
pop
jl
mov
mov
mov
cmp
jle
aad
or
mov
leave
ja
lock
cmp
lret
je
jbe
inc
xor
and
mov
lods
mov
jbe
cmp
lret
xor
sub
popf
js
aaa
int
subl
adc
subb
rorb
fstpt
iret
arpl
push
mov
mov
into
xor
sub
xchg
popa
mov
pop
dec
test
cmp
inc
pop
lods
add
sbb
cmp
call
ds
fimuls
js
in
adc
test
xchg
cltd
dec
and
and
push
pushf
pop
add
push
push
clc
inc
xchg
inc
fnsave
ss
fidivrs
outsl
mov
mov
xchg
pop
stc
das
nop
push
addr16
jo
sub
fistpl
pop
xchg
pop
popa
cmp
lcall
adc
cmp
mov
inc
cld
push
sahf
mov
jb
ds
mov
fadd
lods
das
inc
rolb
popf
fnstsw
ss
or
inc
pushf
or
adc
xor
js
push
ljmp
and
call
add
outsl
sub
sarb
les
in
xchg
xchg
jbe
or
sbb
fcomps
mov
stos
push
inc
icebp
idivb
mov
ret
xor
cmpsb
dec
dec
and
xor
test
jne
out
adc
xchg
cmpsl
jae
scas
inc
inc
cmpb
cmp
sub
sti
insb
mov
gs
mov
shlb
ret
dec
sub
add
or
rcr
scas
mov
loope
insl
push
into
insb
inc
mov
push
inc
leave
insl
lret
mov
lret
loopne
sub
clc
in
pop
lret
ja
xchg
adc
mov
xchg
add
xor
imul
sbb
jb
cmc
mov
add
loope
pop
or
out
pop
sub
xor
test
rcl
jb
lcall
pop
scas
mov
lods
mov
or
sbb
xor
pop
jg
jmp
xor
aam
fidivrs
bound
lock
negl
loope
cmpsl
outsl
imul
mov
std
mov
lods
cmp
les
adc
dec
dec
inc
popw
clc
and
lea
jg
cmp
mov
lcall
sbb
lods
mov
outsl
mov
out
cmpsl
sub
icebp
adc
xchg
xchg
push
lret
out
xchg
sub
lret
cmp
int3
pop
and
pop
mov
jecxz
lock
push
stc
pop
add
jmp
das
adc
popf
shrb
inc
insb
sbb
mov
shlb
or
inc
adc
lret
enter
or
ja
sub
inc
fistps
scas
mov
xchg
mov
sbb
cmpsb
mov
push
push
or
sub
or
jle
mov
pop
lcall
dec
std
out
in
jp
push
add
mov
jmp
push
fdivrl
inc
jmp
and
jnp
insl
xor
mov
push
sub
cmp
xor
mov
insb
pop
js
iret
int3
clc
mov
pop
scas
push
jmp
ret
and
xor
and
mov
call
mov
push
adc
mov
xor
sub
cmpsb
inc
cmp
stos
xchg
mov
es
push
pusha
xor
mov
xor
subb
mov
mov
jae
stc
movsl
nop
jle
xor
sbb
cmp
nop
inc
cmc
aaa
sbb
lods
bound
sbb
or
pop
mov
das
fnstcw
add
movsb
outsl
pop
cmc
test
mov
call
addr16
add
jp
lds
loope
sub
dec
push
xchg
in
sahf
cltd
out
or
icebp
cmp
inc
xor
ret
shr
ret
or
rcr
test
test
xchg
cmp
add
cs
jp
pushf
cmp
aaa
adc
mov
ljmp
xchg
xchg
xchg
mov
lock
shrb
jns
or
xchg
fwait
pop
into
ljmp
les
cmp
xor
or
call
xchg
nop
sub
pop
or
lret
or
pushf
adc
push
in
mov
adc
stos
dec
insl
ret
jbe
ret
hlt
repz
das
jge
jecxz
pushf
js
mov
insl
xchg
aas
xchg
cwtl
iret
mov
push
je
pop
shlb
mov
pusha
loopne
mov
pop
push
and
inc
jb
mov
pop
mov
push
cmp
cs
outsb
repnz
inc
jecxz
lcall
sbb
and
sbb
mov
scas
and
sbb
int3
lcall
cltd
pop
shrb
insb
push
push
push
loop
push
arpl
aaa
dec
push
xchg
cmp
dec
inc
adc
int3
pop
add
je
lcall
pop
mov
ja
mov
adc
adc
out
in
mov
enter
call
mov
dec
push
rcll
mov
sub
testb
and
std
mov
std
iret
dec
js
rclb
pop
stc
push
adcb
dec
clc
push
bound
fs
sar
adc
hlt
dec
or
sbb
xchg
cli
test
call
xor
test
cmp
fidivrs
push
inc
test
jne
popf
mov
mov
stos
dec
add
fpatan
loop
rcll
jge
and
pushf
inc
xor
lahf
imul
sub
insb
aam
int
imul
jo
inc
push
shrl
lret
ror
and
jecxz
in
divl
out
mov
mov
mov
imull
or
and
shrl
add
imul
jg
cmp
mov
outsl
xchg
out
mov
loope
fdivs
and
mov
or
ljmp
icebp
or
loopne
mov
icebp
scas
sbb
mov
dec
cwtl
mov
out
out
sbb
in
or
pop
lcall
sbb
sbb
jg
pop
int
rolb
and
dec
jae
lds
jle
xchg
inc
or
mov
jno
jl
push
dec
outsb
loopne
lahf
xchg
sub
mov
cmp
nop
cmpl
popf
sbb
dec
js
push
jl
jno
inc
fstpl
adc
sbb
and
icebp
xchg
jb
aaa
lods
mull
or
jp
xor
jne
jecxz
cmp
cltd
insb
iret
in
xor
shlb
sbb
ds
jp
mov
mov
jecxz
mov
cmp
lret
cwtl
xor
cmpsb
mov
mov
stc
rcrl
shll
xor
lret
insl
mov
cs
xor
push
dec
stos
add
in
lcall
sahf
mov
loopne
fwait
sub
push
adc
stos
out
push
add
fcoms
mov
adc
scas
shlb
int
lods
inc
push
repnz
add
fldcw
xor
repz
aam
iret
das
js
outsl
jp
std
pusha
lock
jbe
pop
mov
sbb
jns
outsl
inc
popa
and
jne
adc
xchg
push
adc
mov
dec
adc
stc
out
clc
test
push
loop
cmpsl
out
cmp
mov
and
pushf
jp
call
ret
push
testl
mov
xor
jo
jbe
test
xor
lods
jmp
inc
push
popf
adc
cmp
mov
jo
or
mov
push
stc
fwait
jmp
shlb
js
or
xlat
ds
imul
sti
sub
xchg
sbb
push
and
imul
pushf
mov
out
sub
adc
mov
ficompl
or
pop
jno
rorl
mov
stc
leave
push
std
repz
pop
sahf
inc
mov
shrb
mov
loop
adc
insb
push
sbb
outsl
or
into
inc
or
pop
dec
stos
js
es
jns
scas
insb
faddl
pushf
xchg
mov
pop
repnz
xor
or
pop
push
jmp
add
dec
and
and
jl
sbb
fidivs
jge
outsl
xchg
shll
js
popa
push
push
jne
es
jae
cmc
in
or
int
mov
pop
insl
negl
insb
fucomi
ds
mov
xacquire
xchg
cmp
xchg
mov
inc
xchg
test
js
arpl
out
fimull
je
data16
stos
and
xlat
and
popa
jmp
and
cwtl
jp
xorb
xchg
add
ficomps
lods
pop
xlat
push
xor
divb
jmp
dec
ds
mov
or
sbb
test
add
rcr
add
mov
iret
inc
xchg
or
xchg
in
push
push
jb
dec
xchg
pop
xlat
push
and
cmpsl
sti
mov
push
repz
mov
xchg
xchg
clc
test
dec
scas
mov
cmpsl
push
dec
neg
push
inc
push
rolb
mov
and
aam
pusha
add
das
in
ret
mov
xchg
aaa
in
dec
scas
sub
lret
fidivrl
pop
pop
push
jle
aad
rorb
repz
cs
xchg
and
push
mov
mov
cld
jo
shl
add
in
lret
dec
test
ret
jnp
mov
es
jge
and
jl
mov
imul
flds
mov
aam
or
and
es
sub
pop
jns
addr16
dec
movsb
adc
xchg
ficomps
xchg
adc
dec
cmpsb
jp
in
push
adc
push
into
cmp
std
mov
rorl
mov
cltd
aam
jno
les
adc
mov
sbb
push
add
inc
and
pop
cli
ret
dec
sub
dec
dec
dec
xorb
or
lods
jnp
fwait
or
add
ret
idivl
into
xchg
movsl
or
fmull
fsubs
dec
jno
xlat
inc
mov
push
sti
dec
jmp
jge
jnp
fsubrp
add
out
inc
ljmp
outsb
subb
shlb
push
cmp
cmp
pop
inc
fstps
es
or
push
cmovnp
mov
movsb
push
adc
jbe
aam
shrl
test
imul
insl
xchg
or
inc
out
mov
mov
repz
push
movb
outsl
sbb
enter
xor
adc
aas
repz
gs
mov
cmp
inc
push
xchg
leave
xchg
mov
call
mov
xchg
iret
pop
in
lock
pop
movsl
repz
jp
xor
and
sub
jb
icebp
ss
inc
cwtl
arpl
cmp
ret
xor
cld
lock
or
adc
addr16
push
push
stos
outsb
mov
inc
hlt
sub
push
lret
xorl
inc
xor
sub
incb
cmp
inc
ds
repnz
in
repz
out
loopne
dec
add
lods
fs
mov
pop
decb
mov
shlb
iret
add
push
nop
data16
in
push
jmp
pop
aam
cmp
stc
mov
repnz
cmovne
mov
mov
add
out
adc
mov
dec
cwtl
shlb
sti
cld
movsl
mov
popa
mov
xchg
jbe
fiaddl
add
inc
add
mov
test
cvtdq2ps
scas
xor
and
pop
mov
add
sub
push
aaa
add
add
gs
cld
loope
inc
lcall
push
ret
jo
rolb
inc
push
xchg
mov
mov
jo
jae
sbb
mov
mov
fwait
lds
inc
divl
addl
jno
xor
xacquire
sub
sub
je
adc
push
xchg
add
sub
and
mov
cmp
aaa
dec
dec
sub
ljmp
mov
lret
xchg
or
test
mov
cltd
mov
sbb
insb
lret
lret
fwait
mov
sbb
mov
aaa
bound
orb
xchg
sub
cmp
outsl
adc
and
orl
sub
lds
popf
add
lret
inc
cwtl
jecxz
leave
jg
add
lods
mov
xor
jle
rcl
insb
mov
jl
inc
rcll
add
or
jae
test
ja
cmp
mov
movsl
lahf
push
mov
pushl
sub
sbb
pop
pop
int3
jle
imul
mov
data16
xchg
or
and
mov
sub
fnstenv
mov
inc
in
cmp
scas
js
sbb
pop
in
xchg
add
mov
cltd
enter
sub
aas
cmc
maxps
jmp
mov
shrl
in
fwait
in
jne
jnp
cmp
lahf
aas
jp
pop
sbb
sbb
js
in
or
int3
loope
movsl
mov
out
mov
pushl
fucomp
inc
xor
cs
pop
shlb
scas
nop
mov
pop
pop
insl
daa
nop
add
clc
pop
cmpsl
inc
or
inc
or
dec
and
xor
rcrl
mov
pushf
into
jmp
mov
sbb
sbb
xor
push
inc
or
cmp
rcrl
repz
in
mov
test
jne
call
xchg
dec
dec
fstpt
ja
mov
dec
mov
mov
stos
dec
sbb
mov
imul
mov
loopne
inc
ds
or
pop
push
jb
mov
mov
adc
aam
daa
out
shll
lret
xchg
arpl
data16
pop
xchg
xchg
rcrl
js
scas
lods
fimull
inc
daa
call
outsb
lahf
and
adc
xor
push
mov
sahf
mov
or
inc
push
fildl
lds
lds
fiadds
jmp
andl
sahf
cld
stc
cwtl
pop
rcll
insb
jb
loope
outsl
mov
into
pop
notb
ja
sahf
push
jecxz
jnp
pop
scas
xchg
popf
shlb
fs
sahf
repnz
mov
push
jns
xchg
popf
or
icebp
sbb
push
mov
aas
insb
pop
test
mov
ficomps
mov
jl
mov
orb
aad
out
mov
sbb
cwtl
jbe
inc
int3
fldt
loope
popa
inc
adc
add
mov
sbb
jns
xor
fxch
iret
or
ljmp
orl
repz
shl
cmpsb
xorb
dec
sbb
sti
dec
fldcw
cmp
mov
adc
mov
xchg
outsl
inc
in
imul
adc
adc
cmp
jne
cli
xor
xor
movsl
jmp
mov
nop
push
jns
jmp
xchg
popa
jne
pop
and
inc
push
jbe
mov
ret
sti
lret
lret
or
mov
out
rorb
popf
xchg
inc
shll
in
leave
mov
inc
push
push
cs
fmuls
mov
gs
adc
insl
pop
sti
pop
sbb
lds
test
dec
repz
mov
mov
dec
push
mov
cmp
xor
negl
pusha
fcomip
imul
mov
pop
fcoml
popf
rorl
push
fisubl
push
lds
push
mov
stos
repnz
push
mull
leave
pop
shll
ja
mov
xchg
sub
data16
mov
xchg
clc
std
insb
pop
add
movsl
int3
cltd
imulb
ret
cmp
xor
jecxz
mov
loope
xchg
and
aas
jmp
mov
ljmp
es
adcl
mov
xchg
xchg
movsl
push
mov
jge
dec
cmp
xchg
push
push
or
mov
rol
lahf
add
lea
mov
xor
aam
insb
push
push
adc
fidivrl
mov
negl
cmpsl
pop
pop
adc
fmull
add
sbbb
leave
clc
jmp
and
out
push
out
xor
fistpl
push
dec
cmpl
cmp
and
orb
mov
cmp
test
and
shll
sti
fmuls
loope
or
cs
roll
iret
test
pusha
mov
push
xchg
test
xchg
dec
add
stc
and
pop
jbe
mov
das
jle
jecxz
cli
push
fwait
and
fwait
cltd
jno
push
es
in
insb
movsl
push
inc
test
jmp
sar
dec
push
cmc
mov
mov
in
jo
push
add
nop
xor
iret
xchg
fucomp
mov
xchg
jnp
adc
inc
into
jp
js
aad
rorb
sub
popf
adc
lea
js
or
shll
push
loopne
mov
push
mov
js
and
sub
psllq
stos
cmpsl
in
mov
push
mull
pop
xchg
mov
or
xor
lahf
lahf
jle
cmp
int3
out
leave
pop
mov
push
test
inc
clc
pop
add
outsb
rcrl
lods
or
mov
mov
test
cmc
push
mov
cmp
sbb
adc
dec
xor
cmp
mov
fcoms
inc
imul
pusha
aam
lea
jno
inc
jge
sbb
shlb
dec
out
mov
jg
adc
or
loop
aas
sti
enter
in
add
stos
fdivs
push
mov
aas
ds
bnd
sbb
jmp
mov
into
cmp
push
xchg
in
sti
xorl
or
negb
inc
je
mov
pop
ds
test
mov
mov
mov
scas
aad
push
cmp
cwtl
and
icebp
lods
jno
test
int
inc
xchg
cwtl
call
push
sbbb
mov
jg
insb
mov
dec
dec
int3
xor
gs
xor
cmp
and
or
fcomps
out
lock
lea
xchg
out
adc
and
mov
xchg
sarl
and
mov
stc
loop
cmpb
jle
pop
movsb
cmpb
and
mull
les
fs
xchg
hlt
sbb
cmp
aad
inc
clc
adc
and
jo
dec
xor
outsb
mov
jge
mov
xor
pop
jg
xlat
je
push
mov
aam
and
cld
scas
je
xchg
dec
sub
into
andl
mov
cmp
fistpll
inc
or
inc
movsl
sbbb
push
xlat
nop
incb
testl
adc
int
lcall
cltd
iret
inc
hlt
xchg
cmp
mov
push
fistl
ja
inc
stc
and
mov
mov
andl
jl
jle
ret
fildll
dec
push
stc
xchg
mov
pop
aad
fxch
sub
xchg
adc
mov
sub
je
mov
xchg
out
jmp
cmp
pop
and
add
mov
sub
repz
test
pop
push
mov
test
xor
sti
mov
lahf
mov
or
incl
dec
pop
cmp
mov
push
xchg
lock
fwait
dec
or
pop
inc
pop
aam
xchg
cmpsb
pop
adc
push
loop
lods
and
repz
in
mov
xor
pop
aad
mov
sub
test
adc
insb
adcl
aad
sbb
xor
mov
cwtl
mov
pop
adc
mov
push
jne
loopne
nop
pushf
out
mov
lods
jecxz
jbe
xor
stos
sub
inc
or
scas
adc
lds
push
cmpsb
popf
or
sub
mov
inc
js
mov
mov
imul
add
fildl
xchg
sub
sbb
sbb
ljmp
inc
dec
in
and
mov
or
js
fcmovne
shl
fildll
jmp
pushf
movl
test
inc
and
mov
fstpt
dec
lret
ret
mov
movl
ja
fstpl
into
xor
push
inc
and
jb
jo
pop
ficoml
cmpsl
mov
psllq
xor
rcrl
push
fmul
jb
push
pop
lcall
jns
cmp
push
push
push
mov
in
dec
xchg
pop
dec
push
lods
sarb
aad
insb
leave
cltd
pusha
push
sub
mov
jmp
sub
outsb
adc
lods
fsubrs
pop
lock
cmp
pop
dec
out
mov
lret
fisubrs
jecxz
adc
and
add
jecxz
pop
outsb
jmp
sbb
mov
xchg
mov
mov
fnsave
lret
xchg
mov
int3
jp
fidivrl
fmul
mov
test
jb
repz
out
mov
mov
add
mov
or
sub
fs
sub
xorb
adc
jo
inc
push
mov
cmp
addr16
xor
sbb
push
stos
lea
es
and
jae
pop
xor
or
fisubrl
push
movsl
inc
xchg
mov
sub
sbb
lret
jl
jmp
and
jo
mov
push
aad
mov
bound
sbbb
dec
xor
mov
pop
sub
jecxz
std
test
lods
imul
mov
stc
nop
repnz
or
and
jmp
popl
fidivl
push
test
mov
cmp
shll
xchg
push
data16
sar
mov
sti
adc
push
outsb
inc
lods
jno
mov
and
and
pop
mov
imulb
adc
adcl
je
cmp
add
cwtl
fnstenv
dec
ljmp
add
mov
add
push
out
sbb
xor
adc
add
std
daa
stos
push
pop
mov
mov
outsl
xor
or
xchg
stos
jnp
mov
in
jmp
fildll
cmp
sbb
or
sbb
xchg
add
xorb
cmp
sahf
dec
dec
or
mov
xchg
add
popa
pushf
adc
push
out
ss
sub
mov
mov
ss
adc
adc
xchg
xchg
push
sub
testb
ret
movb
scas
imul
cmp
mov
cld
mov
sahf
cld
repz
out
pop
xorb
and
xchg
sub
dec
rclb
mov
testl
jns
cs
push
or
or
xor
mov
jg
mov
dec
mov
imull
pusha
mov
dec
mov
pop
rcr
pushl
cli
lods
push
test
push
jl
jb
lock
stos
pop
push
jns
mov
in
in
add
pop
dec
pop
sub
pop
xor
mov
pusha
xchg
sbb
sub
jb
push
aam
ret
mov
pop
dec
test
jp
push
xor
xchg
push
jnp
dec
notl
ficomps
nop
pop
stos
js
jg
xchg
pop
xchg
adcb
data16
mov
jb
mov
push
mov
sub
mov
popa
cli
xchg
mov
and
int3
out
adc
aaa
popa
push
cmp
or
sahf
std
add
into
adc
lahf
enter
stc
shlb
insl
jb
hlt
cld
and
enter
fucomi
inc
rorl
enter
jp
test
cmp
inc
aas
pusha
adc
pop
push
mov
aam
insl
adc
scas
loope
cmpsl
xor
das
mov
dec
pop
or
dec
into
inc
leave
rcrl
xor
and
scas
and
sub
sti
nop
cli
std
fcmovnb
enter
sub
jno
add
pop
sub
fwait
jge
fisttpl
adc
adcb
xchg
cmpsb
push
fwait
test
and
popf
pop
push
push
xchg
add
aaa
mov
stos
scas
mov
fcomps
push
pop
lods
stos
outsb
push
movsb
outsb
fsubrl
outsb
mov
arpl
mov
test
cmpsl
pusha
dec
and
dec
imul
fs
xchg
aas
fistps
shll
loopne
mov
dec
js
sub
mov
mov
add
popf
jle
mov
or
out
repz
mov
mov
push
loop
sub
jnp
push
mov
jmp
data16
pop
xor
gs
push
pop
cmp
or
das
inc
fs
mov
cmp
jle
fcomi
aaa
negb
repnz
xchg
sub
movsl
fcompp
pop
push
icebp
sbbb
lret
xor
cmpsl
in
push
pop
pop
xor
mov
test
std
push
orb
push
pop
push
call
push
mov
loop
jge
bound
stc
add
cld
add
jl
mov
or
call
dec
and
ds
cli
mov
jae
mov
jnp
das
movsb
push
es
ret
mov
push
inc
lcall
into
xor
scas
sahf
dec
push
and
lret
pusha
stos
test
mov
xchg
clc
sbb
or
lock
pop
sahf
xchg
ret
ds
int3
imul
in
pop
xchg
or
push
test
pushf
push
cmp
repz
xor
inc
push
jg
adc
arpl
and
test
int3
scas
inc
mov
xchg
mov
stos
stos
xchg
inc
cmp
add
jnp
in
out
arpl
lret
fsubrl
sub
mov
xor
sub
fisubrs
and
pop
xchg
in
dec
xchg
fwait
lea
gs
mov
std
dec
inc
rorl
repnz
das
mov
roll
cmpsb
jmp
jg
out
xor
xchg
mov
aam
bound
rcll
sub
mov
pop
add
into
push
sub
sbb
mov
adc
fwait
or
aad
in
out
mov
inc
mov
test
inc
imul
xchg
out
mov
push
inc
outsb
test
jae
sbb
ljmp
xchg
add
mov
inc
inc
dec
out
stos
dec
or
gs
push
ljmp
imul
fldl
add
mov
sar
dec
leave
idivl
in
lcall
jge
leave
loop
rcrl
in
scas
sar
shrl
pop
je
sarb
mov
frstor
rcrb
aaa
inc
pop
insl
pop
pop
cs
loope
mov
bound
sub
xchg
leave
dec
xchg
test
xchg
iret
mov
outsl
push
lea
pop
xchg
jecxz
orb
pop
ret
mov
xchg
xchg
add
stc
and
bnd
addr16
lods
jl
mov
sub
imul
push
dec
mov
sbb
pushl
lret
and
inc
jge
shl
sub
or
or
inc
adc
bound
mov
jnp
push
sbb
aas
pushf
jbe
jo
pop
lock
leave
adc
fucomi
cmpsl
add
inc
pop
pop
xchg
mov
leave
xor
adc
out
cmpsl
mov
cmpsl
cld
mov
mov
inc
cmpb
push
iret
nop
fnstenv
or
out
test
mov
xlat
cmp
ret
inc
repnz
imulb
pop
je
pusha
test
into
fdivrs
and
xchg
add
sbb
sub
mov
loop
push
add
jns
push
cwtl
push
pusha
mov
cwtl
jbe
jmp
cmp
xor
cmp
mov
fsubrs
mov
gs
mov
add
arpl
mov
lahf
or
xor
mov
jnp
lods
sub
enter
test
push
and
mov
sbbb
xchg
stc
add
movsb
aaa
mov
pop
and
mov
cmpsl
jmp
out
jno
stc
sti
jnp
mov
call
fsubs
fwait
sbb
xor
cmp
std
pop
mov
mov
and
xor
pop
push
bound
pop
ret
cmp
sbb
sbb
lods
cmp
adc
insl
ljmp
sbb
push
aad
imul
sub
push
add
cmpsb
in
or
inc
mov
jmp
pop
je
js,pn
test
jbe
lods
es
push
dec
push
or
pop
push
mov
pop
int
fwait
sbbl
fiadds
sarl
or
int
imul
lds
pop
push
cli
sbb
push
cltd
stc
xchg
pop
mov
fsub
xchg
inc
jbe
sub
popf
adc
insb
idivb
jge
mov
sti
dec
mov
pusha
loop
movsl
adc
in
movsb
sub
sarl
pop
jecxz
insl
enter
fdivr
pop
dec
dec
xchg
sbb
adc
insb
out
andb
enter
pop
hlt
push
mov
out
das
decb
xchg
aad
repnz
lret
pop
cmp
xor
add
mov
push
jns
mov
movsl
mov
outsb
or
cmpb
popf
test
jge
sub
daa
mov
add
cli
stc
sub
outsb
cltd
iret
clc
inc
pop
cmp
cs
je
hlt
xchg
add
push
clc
mov
dec
shll
ja
clc
push
jle
imul
xlat
cld
cmp
je
mov
or
repz
add
pop
mov
dec
mov
adc
mov
and
inc
push
stc
mov
lret
or
jg,pt
repz
jge
push
lea
mov
inc
lock
mov
push
fcomi
loopne
fisubl
dec
sub
sti
pop
idivb
shlb
aam
push
pusha
add
outsl
sub
sub
jcxz
push
push
jge
dec
shrb
or
add
mov
cmp
sarb
pop
mov
int3
in
push
add
jmp
dec
jo
push
out
ret
xchg
jnp
fisubrl
ficompl
es
inc
popf
fcom
jge
xlat
stos
mov
shll
mulb
mov
add
xchg
imul
ja
xchg
cmpsb
jmp
rcll
lds
sub
push
adc
jbe
mov
adc
pop
pop
popf
mov
adc
jo
inc
orb
jnp
add
aam
out
clc
inc
js
mov
mov
jge
mov
cmp
into
cmp
cltd
dec
adc
xchg
mov
sti
mov
aas
inc
push
cmp
fsubrs
add
jle
stc
movsb
sahf
rorl
mov
mov
adc
jns
pop
out
mov
icebp
inc
ljmp
mov
leave
int3
movsl
ja
xor
mov
mov
push
pop
xchg
cmp
sahf
jle
jno
jo
jmp
idivb
and
data16
push
ret
repnz
sub
push
mov
inc
jmp
fnsave
out
adc
cmc
inc
movsl
stc
add
mov
cmp
icebp
sbb
push
or
pusha
mov
and
aam
jno
lds
jae
jbe
mov
lahf
and
dec
xor
stc
iret
ret
jl
sbb
push
pavgb
js
pop
adc
pop
cmp
stos
xchg
arpl
pop
bound
sub
popf
enter
pushf
mov
ds
call
dec
movsl
jb
mov
xor
push
cmp
xchg
add
pop
fisubrl
ret
adc
into
int
xor
push
jno
cmp
jp
mov
in
add
call
lret
mov
pop
push
adc
icebp
frstor
or
and
xor
je
add
pusha
mov
sbb
jne
sub
call
adc
pushf
aam
iret
or
rcl
lret
cmp
mov
push
pop
mov
ljmp
mov
jo
mov
in
cmc
adcl
fcmovne
mov
lret
sub
fstl
mov
cs
arpl
loop
call
cltd
jbe
out
leave
sbb
cmpsb
push
cwtl
adc
sbb
xor
stos
sar
xor
xor
jbe
inc
lock
test
add
cmp
pusha
pusha
cmc
cs
cmp
lds
ljmp
and
mov
fisubrl
fwait
push
jmp
adc
inc
or
jne
add
pop
xor
lods
or
mov
cld
push
mov
fisubrs
mov
cli
xlat
stos
ret
xchg
out
ret
fadds
cltd
push
ret
push
orb
xor
test
mov
sbb
rclb
xor
stos
outsb
test
imul
mov
mov
sub
insb
mov
cmp
or
rclb
cmc
adc
add
ret
nop
mov
pushf
nop
xchg
mov
fldt
fstp
mov
xchg
dec
fmuls
mov
pushf
push
dec
or
nop
mov
dec
mov
ficomps
fdivrl
or
bnd
sub
movsb
aaa
mov
aas
sub
mov
lods
mov
xchg
mov
pop
iret
repz
xor
dec
push
lcall
sub
cli
inc
arpl
fwait
sbb
jns
pop
leave
and
ror
stos
inc
push
adc
cwtl
xor
outsl
mov
bound
push
push
sub
fcompl
sarb
mov
loope
mov
sbb
add
pusha
mov
sbb
add
mov
aaa
jp
push
pop
lods
xchg
cwtl
add
cmp
scas
mov
popa
jg
jo
add
int3
cld
cmp
inc
fs
pushf
mov
add
push
jl
or
or
push
inc
inc
and
cltd
pushf
pop
sahf
mov
or
lret
and
loop
push
in
fadd
xchg
cmpsb
js
xchg
push
arpl
jle
pop
int3
fildl
mov
xchg
lods
cmp
rcrl
or
sbb
lret
jnp
cmp
stos
pop
mov
aaa
and
in
mov
in
add
adc
mov
stc
push
and
out
cmc
jns
mov
dec
push
and
xor
sub
orb
push
sarl
ss
push
mov
call
mov
push
pop
cld
outsb
in
in
dec
and
stos
mov
movsl
scas
lock
sub
movl
insl
dec
xchg
aam
scas
lea
insl
loopne
jge
push
orl
enter
addr16
adc
push
fsubs
aaa
inc
push
daa
adc
or
in
xchg
xlat
lret
fwait
out
test
insl
adc
cmc
icebp
mov
dec
cwtl
lods
lahf
rcrb
inc
pop
pushf
mov
enter
cmp
jmp
icebp
or
mov
jne
push
sub
rolb
or
call
or
pop
push
mov
inc
aad
cmp
and
or
xchg
xchg
test
mov
push
xchg
mov
pop
icebp
popf
mov
insb
push
push
sbb
pushf
int
fbstp
mov
mov
mov
bound
jg
mov
jp
xchg
xor
fldcw
negl
das
sub
or
cmp
cmpsb
in
mov
xchg
dec
pop
lock
lods
dec
pop
sahf
das
sub
sti
adc
je
and
push
jl
sti
dec
in
push
out
lods
repnz
push
add
xchg
cmp
in
mov
pop
leave
decb
push
sub
mov
inc
cwtd
sbb
out
stc
add
pop
jge
dec
cmp
sti
lret
sub
arpl
sbb
cmp
gs
ds
xchg
pop
and
and
cmp
or
or
leave
sbb
or
ss
in
pop
rcrb
pop
lds
int3
loope
out
cmp
jb
push
stos
adc
imul
test
push
add
mov
cmc
xchg
sti
or
cmpsb
cld
test
cmp
dec
jg
fs
lret
push
bound
stc
sub
test
and
out
pop
in
dec
ds
fimuls
inc
cmpsb
cltd
sahf
inc
jp
jae
repnz
add
ljmp
leave
push
mov
in
in
iret
popl
sub
ds
lods
and
shll
sub
cmpsb
hlt
ss
fwait
xor
int3
sti
aam
enter
xchg
lea
lods
mulb
xchg
icebp
pop
popa
cli
es
out
xor
inc
insl
out
lea
push
loop
xchg
jns
or
jl
sub
jge
mov
cwtl
fsubl
jle
mov
loopne
xor
clc
mov
lock
popa
xor
shll
pop
mov
movsb
bound
sarb
enter
push
mov
stc
pop
iret
mov
stos
ja
or
out
mov
and
cmp
add
cmc
popa
pushf
inc
movsb
push
rcrb
mov
add
or
cli
scas
pushf
divb
cmp
inc
push
ss
test
int
inc
out
sti
sbb
hlt
mov
lock
pop
mov
xchg
es
roll
add
jne
lahf
xchg
cmp
jbe
test
pop
lret
aaa
rolb
mov
andb
push
push
pop
imul
mov
shll
outsb
imul
cld
sbb
in
insl
sub
mov
xorl
cld
xchg
mov
mov
pop
test
bound
iret
pop
cmp
repz
cmp
nop
in
outsl
hlt
add
xorl
lods
fildl
aam
ror
and
int
loopne
cmp
dec
adc
in
adc
dec
nop
ljmp
stc
jl
mov
xchg
xchg
add
dec
into
jno
insb
add
xor
je
dec
in
cmc
or
cltd
mov
cmp
jno
xor
jo
jns
fmul
popa
loopne
xchg
pop
add
or
xchg
jbe
les
mov
test
cli
xor
movsb
mov
mov
mov
stos
lret
mulb
les
cli
dec
inc
je
mov
push
pop
imul
fs
ret
movsl
aad
daa
pop
push
sub
lds
pop
or
ret
inc
ret
enter
cmp
xor
dec
adc
test
or
pop
pop
sub
lock
scas
flds
pop
fldcw
test
xchg
mov
inc
leave
sbb
dec
lret
stc
push
insl
mov
dec
test
cmp
dec
dec
sar
jl
mov
or
pop
loope
pop
fwait
js
jno
lock
std
inc
call
ficoms
nop
arpl
addr16
add
inc
shll
inc
pop
mov
pop
add
sbb
adcb
fxam
pop
or
dec
cltd
call
ret
lock
fldenv
test
jl
pop
or
xor
xor
sarl
and
mov
pavgb
xchg
mov
xor
addr16
mull
lret
adc
imul
add
shll
inc
cwtl
movsb
adc
sub
test
adcb
and
dec
stc
insl
ret
int3
jno
mov
insl
sbb
jnp
movsl
sbb
xchg
mov
sbb
test
out
pop
sbb
dec
out
xchg
sbb
inc
mov
push
inc
mov
rcll
jae
mov
and
ret
ja
cmp
aam
arpl
inc
inc
xor
inc
in
call
mov
adc
fmull
xchg
imull
dec
and
ds
sub
clc
imul
bnd
iret
pop
loopne
push
mov
pusha
lret
mov
jae
sbb
ret
sbb
xchg
xchg
inc
mov
frstor
aas
push
xchg
lods
mov
dec
sub
xchg
pop
not
jb
mov
in
outsb
xor
push
mov
xor
lret
lahf
int3
leave
enter
imul
dec
mov
xor
and
mov
adc
mov
cmp
xchg
data16
sub
iret
inc
push
push
push
sti
cld
rclb
test
mov
rclb
sub
mov
ljmp
outsb
cmpsl
imul
push
xchg
jne
inc
add
pop
adc
into
stos
loope
test
dec
xor
scas
repz
les
and
dec
out
lods
je
in
dec
jge
cmpsl
push
lea
sub
mov
or
scas
push
inc
repz
scas
inc
sbb
dec
pop
and
add
cmpsl
push
test
add
rorb
pushf
rcll
mov
cld
ret
pop
or
orb
loopne
or
out
imul
add
imul
mov
and
add
insb
dec
adc
jl
xchg
mov
sbb
repz
sbb
pushf
push
sbb
mov
dec
mov
sbb
aas
repz
lods
and
sbb
dec
adc
popa
xchg
push
cmp
mov
lahf
and
js
dec
in
sub
jb
xor
pop
inc
ja
mov
jecxz
loop
repz
xor
or
push
or
xor
movsb
xchg
ja
xchg
jns
mov
jmp
xor
movsb
xor
pop
push
dec
out
fsubs
and
push
cmp
loop
jge
lret
mov
data16
int
mov
in
movsl
add
add
push
jp
rcrb
push
lcall
sbb
fwait
out
jg
xchg
aad
ss
iret
leave
in
mov
int
int
push
xor
push
adc
int3
aam
cld
lock
sub
out
adc
or
xor
cmpsb
mov
clts
fldt
sbb
cltd
and
xorl
push
jo
imul
lods
gs
popf
aad
pushf
pop
aaa
in
push
xor
iret
jmp
leave
rorl
mov
sub
test
pop
jb
cli
shll
lds
xor
xchg
xor
mov
mov
pop
mov
out
mov
outsb
scas
out
notl
mov
and
xchg
loopne
rorl
cmpsb
mov
outsl
jo
lods
adc
ja
out
outsb
in
fisubs
xor
stos
jmp
dec
cs
popf
test
mov
dec
push
push
and
add
adc
sub
int
adc
pop
iret
mov
sahf
ficomps
push
dec
out
cmc
xchg
dec
xchg
jo
outsl
cmp
into
movsl
mov
pusha
push
ja
addr16
insl
mov
jo
pop
stos
mov
movsl
push
mov
arpl
ret
pop
and
push
je
ss
cmp
add
mov
mov
add
mov
xchg
adc
out
js
sti
rcrl
stos
xchg
mov
test
push
sbb
mov
jae
inc
xchg
jp
and
mov
test
inc
out
hlt
push
add
js
mov
inc
not
sahf
ja
or
nop
nop
mov
outsl
aas
and
sub
test
pop
aam
mov
aas
ss
cmc
repz
mov
mov
add
lods
fstpt
push
or
divb
leave
loope
roll
sbb
push
cmp
pusha
mov
call
dec
cwtl
lret
jne
das
mov
mov
jp
rclb
pushf
mov
push
jmp
out
stos
push
push
mov
mov
ror
ss
inc
cmp
push
jb
repz
scas
lods
mov
das
adc
enter
std
cmp
sub
andb
sar
aad
jge
jge
aas
sub
popf
lret
inc
and
cmc
lret
jl
repnz
add
and
adc
xor
push
fwait
stc
xor
iret
dec
jnp
shufps
jns
add
hlt
pop
scas
shll
sarl
add
and
in
xchg
sbb
fs
push
sarl
arpl
jecxz
dec
jbe
dec
inc
sbb
mov
push
fwait
cmp
out
stos
movsb
rorb
repnz
mov
xchg
aam
dec
mov
push
call
insl
sub
ljmp
andl
imul
test
push
fnstenv
jne
jp
loop
aaa
mov
adc
push
sbb
add
outsb
cli
insb
cs
inc
ljmp
stc
mov
movsb
je
loope
test
lcall
or
xor
jp
adc
movsb
clc
adc
dec
or
cli
loop
repz
sub
xchg
fwait
sbb
pop
iret
mov
out
push
inc
push
dec
pop
lahf
xor
inc
xchg
and
in
stos
xchg
xchg
fildll
mov
add
xchg
fisubs
push
dec
nop
cmp
mov
fst
mov
popa
jg
and
mov
insb
jae
xchg
hlt
xchg
lock
adc
sbb
inc
mov
and
pop
push
je
popl
mov
sar
xor
adc
pop
outsl
jno
cmp
xchg
jecxz
mov
cli
divl
sbbb
xorl
and
shlb
cmp
inc
sub
loope
mov
andb
xchg
xor
rol
jae
in
inc
loop
push
pop
bound
std
push
outsb
cwtl
and
pop
repz
cltd
scas
repz
xchg
jg
lret
test
mov
or
es
pop
inc
mov
mov
lahf
sahf
push
cmp
pop
in
mov
aam
xchg
cmp
mov
cmp
ljmp
and
push
xchg
lcall
xchg
inc
push
pop
xlat
in
mov
jne
cmp
mov
std
pop
or
push
loop
cmp
lret
mov
lock
cmp
imul
cmp
push
cwtl
sbb
jns
aaa
push
adc
jae
xchg
adc
push
cmp
cmp
mov
jmp
js
insb
inc
jecxz
add
add
pushf
mov
xor
mov
mov
aaa
ds
aam
cmc
and
add
outsl
lret
in
jno
sub
jmp
lret
jno
sub
subb
testl
jl
mul
jmp
or
repz
inc
adc
mov
push
jns
dec
sbb
sbb
xchg
clc
rorb
pop
mov
andl
test
ss
lods
roll
inc
jns
mov
mov
mov
or
in
aad
popf
shl
push
lcall
sbb
mov
aad
add
or
bound
or
dec
aam
stos
fsubs
mov
out
pop
cmp
mov
scas
and
jle
in
mov
cmp
inc
mov
out
lahf
fidivrs
pusha
js
cmp
leave
fstpl
scas
xor
or
lds
inc
xchg
ss
mov
push
fldcw
sahf
sti
sub
in
in
sahf
push
xchg
xor
jns
sub
lods
cmpsl
cld
sbb
push
and
mov
int
jne
inc
sbb
push
fiadds
cmp
cmp
sbbb
xor
in
inc
xor
rcl
mov
push
aam
xchg
or
or
xchg
ds
cltd
aam
cmp
xchg
xchg
test
pop
dec
test
mov
adc
out
mov
or
pop
mov
stos
shr
ljmp
or
cmp
jnp
or
mov
add
dec
std
dec
push
enter
jno
ret
roll
lret
mov
out
mov
push
push
add
and
lods
cmc
movsl
sti
sbbl
test
xor
fistpl
test
xchg
and
mov
sub
add
sub
inc
cmpsb
adc
xchg
pop
jnp
xchg
insb
push
lcall
pop
adc
das
xchg
outsb
mov
sti
subl
push
pop
stc
shrb
repz
stc
mov
leave
fidivl
push
jmp
call
gs
mov
mulb
jl
mov
lret
shr
xor
icebp
rol
lods
es
es
mov
sbb
int3
and
cmp
les
lea
test
adc
orb
or
xchg
dec
add
aad
mov
int
inc
and
push
mov
inc
or
mov
lds
xchg
pop
mov
outsl
jecxz
pushf
addr16
int
adc
movsb
inc
mov
sub
sti
mov
add
call
lods
or
scas
pop
jge
negb
mov
mov
int
mov
inc
mov
clc
imul
outsb
mov
mov
sub
fnstcw
add
andb
push
sbb
das
sub
inc
mov
faddl
or
dec
in
add
lods
mov
jle
lcall
stos
out
jae
jae
pop
inc
out
lods
cmp
fisubrl
xor
aam
movsl
push
or
jl
jmp
jnp
xor
arpl
sub
je
inc
rorl
sub
popf
mov
ja
sti
sub
lahf
adc
jle
inc
push
repz
xchg
lods
dec
jbe
adc
out
adc
pop
sub
ljmp
cli
jp
and
ret
aaa
sbb
out
movsb
dec
xchg
mov
rorl
fdivrp
js
lock
mov
xchg
out
pop
inc
xchg
and
xchg
aaa
mov
ja
idiv
cwtl
inc
mov
stos
pop
sarb
ljmp
outsb
pop
dec
test
es
push
test
jmp
jmp
pop
pop
cmpsl
int3
xchg
out
jae
push
ja
xchg
test
mov
sub
add
add
jbe
out
xor
mov
mov
aam
xchg
dec
sub
jp
int
xchg
mov
mov
das
fwait
aaa
fidivl
andl
imul
stos
lret
mov
aad
inc
js
arpl
mov
xor
xor
and
xor
mov
cltd
jmp
insl
popf
add
pop
lcall
adc
popf
test
mov
mov
xor
cmp
xor
bswap
push
in
out
or
pop
xchg
daa
pop
mov
in
stos
mov
dec
xor
xchg
jl,pt
shl
cwtl
das
dec
sub
fnstsw
mov
shl
sub
cltd
mov
or
push
lss
test
pop
sarb
add
std
stc
pop
pmaddwd
xor
jnp
les
rol
mov
ja
imul
leave
in
push
fsubrs
in
shll
loop
scas
pop
int3
stos
ret
and
hlt
out
mov
mov
push
mov
xchg
ss
xor
dec
leave
pop
jbe
clc
inc
pop
movsb
aad
das
loop
jl
in
mov
or
jp
pop
mov
lret
pop
adc
in
imul
push
out
leave
insl
dec
in
push
xchg
xchg
addr16
push
xlat
xchg
push
fsubrs
rcll
int
sub
int
sbb
bound
jne
push
add
imul
xchg
jo
cltd
xchg
pop
movsb
dec
push
push
lret
bound
jb
dec
repz
punpckhwd
sbb
js
dec
in
and
and
ds
cmp
xor
mov
dec
fwait
dec
sbb
cmpsl
xchg
test
fsts
enter
pusha
lahf
bound
mov
sub
fcmovnu
add
data16
in
ljmp
stc
push
xor
pop
inc
inc
into
out
mov
cli
xchg
inc
bound
repz
pop
mov
adc
mov
adc
stos
lret
inc
pusha
or
push
in
adc
lock
xorl
jp
out
bound
cmp
mov
filds
lret
fisttps
mov
xor
xor
or
mov
push
lret
out
xchg
cmp
loop
or
pop
mov
insb
push
cmp
and
push
xor
fs
pop
xchg
shlb
data16
incl
mov
pop
shll
sbb
xor
bound
rclb
lret
icebp
movsl
stos
cmp
sbb
dec
mov
and
mov
dec
pushl
daa
jecxz
mov
les
inc
dec
bnd
inc
xchg
inc
mov
or
idivl
sbb
shr
push
inc
loope
push
xchg
push
mov
xor
sbb
mov
js
mov
cmp
std
leave
into
orl
add
mov
dec
popl
lods
mov
and
ljmp
pushf
push
mov
pushf
pop
aaa
xchg
dec
xchg
lock
xchg
rol
das
pop
mov
cmp
push
cmp
xchg
roll
icebp
inc
scas
pop
or
dec
icebp
imul
xchg
jle
data16
popf
mov
addl
add
xchg
sahf
xor
cld
mov
cmp
jno
ss
pusha
movsl
pop
mov
mov
andl
test
xor
imul
cmp
and
dec
mov
mov
push
adc
insl
jns
pop
call
sbb
mov
adc
js
inc
addr16
mov
imul
cmc
scas
xor
and
sbb
add
in
stos
mov
adc
jmp
fs
adc
test
xor
push
jbe
fistpl
das
mov
nop
cmp
loope
xchg
cmp
mov
or
lret
movsb
mov
pop
jne
xchg
sahf
inc
addr16
dec
dec
rol
mov
mov
in
lds
insl
jne
jo
sub
clc
push
hlt
sbb
cmp
insb
mov
jmp
fimull
inc
mov
popf
cmpsl
mov
add
mov
xor
pop
popa
cmpsb
pop
push
iret
inc
xor
push
push
jnp
jo
lahf
xchg
test
movsl
mov
enter
push
mov
push
dec
mov
mov
mov
mov
or
pop
jns
jl
sub
sbb
subl
jb
insb
pop
movsb
push
in
lods
mov
push
inc
sbb
mov
fcmovne
dec
cmpsb
inc
pushf
mov
daa
jno
jne
mov
scas
push
xchg
aas
in
or
cld
data16
mov
das
ss
in
out
jle
pop
test
stc
lods
cld
cmc
mov
aad
pop
stc
mov
sub
fs
stos
jne
sbb
das
movsl
or
loope
inc
lock
adc
hlt
fmull
in
adc
sub
xchg
push
cli
mov
mov
mov
pusha
adc
shrl
aad
dec
mov
mov
and
rol
rcrl
jbe
add
mov
into
mov
adc
fisubrl
mov
jns
hlt
mov
lods
js
push
aad
icebp
jb
repz
loope
fcmovu
shlb
inc
push
loopne
lock
repz
cmovo
shrl
int3
cmp
lret
fcomps
jns
iret
cmp
xor
sub
or
push
dec
aaa
ja
popf
push
fcmovnu
clc
mov
inc
push
call
or
dec
dec
inc
and
xchg
adc
adc
jl
pop
in
and
inc
movsl
jge
lds
data16
aaa
test
ljmp
pop
cwtl
push
jl
into
jmp
and
lret
rcrb
and
inc
loopne
loope
pop
jbe
out
xchg
jnp
mov
adc
insb
adc
scas
dec
pop
jo
sbb
inc
mov
and
leave
push
dec
dec
push
ljmp
out
jnp
add
imul
mov
push
mov
ljmp
fabs
sub
je
xor
scas
push
and
shlb
xchg
pop
mov
pop
mov
data16
fidivs
mov
aam
pop
loope
in
insl
cmp
movsb
lcall
sub
cmp
sub
sbb
in
dec
lcall
xchg
cmc
test
lahf
mov
sbb
enter
jbe
add
pop
jbe
mov
mov
lds
lds
mov
dec
inc
fs
imul
cmpsl
lret
cmp
dec
shll
dec
mov
pop
sbb
ss
shlb
sbb
rol
lret
sub
mov
repz
xor
mov
pavgb
xor
fcmovnbe
loop
leave
scas
inc
push
sbb
test
aas
inc
mov
push
mov
mov
dec
pop
mov
cwtl
packsswb
or
ret
in
sbb
or
inc
pop
jb
popf
jbe
jge
or
push
fbld
movsl
cmp
xlat
add
jns
inc
insb
nop
dec
movsl
outsb
xchg
push
mov
loopne
and
cmc
push
jp
insl
cmc
mov
jp
mov
adc
fnstsw
mov
fs
fwait
mov
sbb
stos
orl
cmp
mov
jp
inc
pop
xchg
and
inc
fbld
lea
jnp
jne
jp
or
push
adc
pusha
shrb
jae
pop
notl
mov
dec
mov
test
in
mov
cmpb
pop
xchg
jg
sub
inc
add
fs
or
adc
dec
divl
jp
sub
or
push
pushf
jo
hlt
in
jl
xchg
in
inc
inc
andl
dec
inc
jno
push
and
aas
sub
sub
jns
add
movsl
push
push
cld
mov
lods
popf
inc
mov
rcr
ficompl
into
sub
mov
pusha
imul
lods
add
and
stos
and
adc
push
cmp
ds
inc
out
dec
xchg
aam
mov
int3
outsb
enter
cmc
sti
push
loop
xor
cmp
push
jne
jecxz
js
and
stos
dec
inc
mov
loope
cs
jno
fbstp
mov
or
mov
aas
pop
test
add
dec
mov
test
xchg
dec
or
xchg
jne
test
or
mov
pop
je
fimuls
jge
insl
pop
mov
mov
daa
pusha
fidivl
jne
xor
popl
jg
fisubrs
or
jg
sbb
lock
cmp
sbb
in
mov
and
cmp
pop
in
shll
fsubs
sub
daa
int
mov
lret
movsl
shrb
pop
cmpb
lock
cmp
cli
mov
jmp
mov
xchg
xlat
sbb
gs
dec
out
pushf
xor
dec
mov
stos
mov
and
jmp
dec
dec
mov
inc
push
and
inc
jmp
xchg
dec
adc
dec
shrl
push
adc
mov
movsb
add
jns
hlt
cmpb
pop
fwait
test
int3
xor
sti
add
movsb
fwait
mov
pop
pop
dec
faddl
xchg
andb
in
push
popa
xor
dec
xor
sbb
cli
adc
mov
sbb
or
dec
in
aam
inc
pop
lock
add
cmc
fnstenv
jecxz
insl
mov
ss
lret
dec
loope
test
cld
pusha
cmp
or
dec
jg
sbb
mov
rcr
mov
inc
jnp
outsb
xor
insb
rcll
scas
xchg
test
outsl
lret
and
bound
push
filds
inc
dec
gs
das
insb
test
gs
data16
cmp
ror
mov
sbb
or
int3
popf
mov
addps
jne
jecxz
aaa
xor
out
add
push
adc
loop
cmpsl
sub
or
jecxz
into
daa
sbb
jge
in
inc
adc
jp
xchg
loope
in
jnp
mov
shl
shrd
lea
sbb
les
xor
outsb
int3
lods
std
push
cld
sub
xchg
lock
xchg
jns
mov
mov
aaa
testl
jno
ja
and
push
and
fnsave
cli
shr
fmuls
mov
loopne
lds
pop
push
jnp
mov
aas
mov
pop
jl
aas
in
sbb
loopne
sub
xchg
pop
sahf
les
pusha
mov
mov
stos
je
imul
jns
loope
or
das
aad
loopne
inc
sub
test
cmp
ss
pop
xchg
sbb
add
fistps
adc
pop
jo
pop
or
packuswb
mull
jecxz
push
inc
imul
mov
test
cmp
adc
add
mov
ret
mov
push
ret
aaa
dec
xchg
out
xchg
jo
sub
inc
inc
pop
dec
pop
jbe
rcrl
inc
cmp
aad
or
or
lods
andb
in
outsl
mov
bound
inc
int
repnz
mov
mov
push
mov
loop
xchg
neg
fildl
lahf
loope
xchg
fadds
pop
mov
lods
loope
ljmp
push
jo
sbb
in
arpl
into
add
xor
int
inc
xor
ret
cmpsb
mov
add
add
dec
inc
das
bound
jecxz
sub
fcom
xor
ret
and
ds
repnz
dec
pop
shll
or
ret
adc
lds
jne
cltd
dec
shlb
and
lahf
scas
jge
ror
or
pusha
lods
sbb
mov
stos
clc
bound
dec
aas
rcll
stc
pop
aad
loopne
add
dec
jno,pn
nop
sar
pop
cli
jge
or
subw
js
mov
ljmp
pop
mov
int3
and
xor
ror
sub
inc
sbbl
repnz
sar
stc
dec
rcll
gs
pusha
mov
mov
bound
test
incb
mov
clc
andb
pushf
inc
out
negb
cmp
mov
iret
enter
push
mov
out
test
lock
sub
mov
int
sub
dec
movsl
adc
out
iret
insb
xlat
lds
loopne
sbb
jo
fiadds
or
push
fadd
xchg
lods
ds
mov
and
add
daa
in
push
movsb
or
ds
jle
cmc
xchg
or
mov
jne
cld
lcall
dec
xor
xchg
sbb
mov
mov
nop
rcl
sub
mov
popf
push
rol
insl
hlt
fdivl
imul
cs
mov
xor
or
mov
sub
jo
adc
mov
xchg
sub
adc
out
dec
xor
push
cmpsl
mov
dec
bound
mov
cld
or
lods
mov
mov
sub
mov
sub
stos
leave
int
stos
cmp
into
insb
dec
lods
push
or
jbe
shll
mov
adc
sbb
jns
or
leave
adc
pop
inc
scas
xor
xor
push
scas
ljmp
lea
cmpsl
jne
lods
or
ljmp
xchg
fcomip
and
mov
or
xchg
mov
fldt
and
pop
push
dec
xor
cmc
aam
cltd
push
pop
jl
cli
ror
lret
adc
dec
faddl
adc
dec
xor
rep
ret
pop
push
mov
leave
push
add
ja
lods
jle
aas
jmp
shlb
xchg
mov
dec
aad
jg
addl
mov
addr16
and
or
in
xchg
cmp
loop
cli
pop
xchg
in
fiadds
xchg
sub
mov
dec
sarb
hlt
loope
call
mov
dec
pop
pop
ds
mov
or
or
loop
mov
mov
add
push
pop
or
or
xor
int3
jg
mov
in
xor
jecxz
sbb
in
sbb
xchg
inc
or
push
shrb
sti
aaa
dec
arpl
dec
in
mov
mov
lea
lcall
inc
notl
cs
mov
ja
stos
lock
mov
fdivr
pop
adc
cld
sahf
cwtl
push
adc
or
jnp
jge
fwait
ljmp
cmp
leave
or
cwtl
xor
add
ret
jo
pause
mov
rcrb
sahf
scas
dec
mov
push
jne
jl,pn
and
sub
repnz
cmc
add
cmp
nop
aaa
sbb
insb
fucomi
mov
xor
sub
sbb
sbb
stc
xor
mov
fdivp
iret
push
push
push
sbbb
call
lods
jp
push
sbb
emms
or
and
cltd
add
jne
mov
cwtl
mov
sub
mov
cwtl
fistl
xchg
jecxz
loop
xor
sub
hlt
repnz
dec
add
xchg
aas
popf
xchg
scas
ret
xchg
sbb
int3
js
lock
pop
sub
add
addr16
pop
mov
mov
bound
and
dec
in
inc
dec
outsl
mov
das
in
addr16
and
mov
pop
subl
in
and
xor
std
pusha
stc
mov
or
jbe
in
mov
rcl
pop
outsb
pop
cs
iret
push
xchg
mov
push
in
inc
xchg
xor
inc
int3
push
cmp
jl
mov
in
inc
pop
sub
in
sub
stc
es
in
repnz
scas
cmc
orb
push
mov
int
mov
imul
lret
pop
pop
xor
in
cmp
xor
clc
xorb
add
aaa
fnsave
mov
rcl
pop
mov
aam
aas
sub
sti
xor
xchg
or
or
jmp
outsb
and
xor
xlat
inc
js
mov
sbb
pop
pop
aad
iret
mov
ror
jmp
out
test
out
repz
inc
jnp
mov
push
pop
add
dec
pop
stos
xlat
lods
mov
inc
cmpsl
std
lods
push
fwait
sbb
mov
adc
sahf
lret
clc
gs
mov
lret
dec
pushf
fnsave
inc
clc
dec
movsb
push
dec
aam
ret
movsl
sub
std
cmp
pushf
aas
jno
cwtl
nop
outsb
imul
push
dec
in
sub
sub
fdivs
push
inc
ja
leave
movsl
repnz
inc
sbb
fistpll
push
jbe
test
adc
lock
jnp
mov
into
add
test
or
divl
mov
js
pop
jns
pop
pop
ss
mov
sbb
add
test
inc
pop
jge
inc
icebp
lret
or
push
add
test
cltd
mov
lcall
mov
roll
fisubs
xchg
jg
mov
testb
sbb
mov
lret
push
int
jge
mov
sub
daa
push
pop
fldenv
in
les
adc
pop
mov
cmp
xor
cmp
mov
clc
pop
dec
pushf
stos
mov
cmc
inc
xchg
lret
std
bound
out
loope
addr16
je
push
pop
bnd
add
push
repz
xor
mov
imul
mov
jo
adc
cmp
in
xor
jecxz
jno
in
xchg
mov
ds
insl
mov
jmp
rcrl
cmp
jb
pop
or
fisubrs
ljmp
mul
mov
or
xor
mov
movsl
inc
push
dec
pop
xlat
fstpt
sbb
mov
aam
push
lret
lcall
pop
jl
subl
add
fsts
sbb
add
incb
out
mov
shll
pushf
xchg
mov
repnz
xorl
or
movl
aaa
sbb
push
leave
jb
loopne
mov
dec
sbb
outsb
scas
andb
inc
xchg
les
cmp
std
sub
sub
test
mov
pop
movsb
rorb
jne
push
lret
pop
mov
test
inc
addr16
mul
gs
pop
inc
stos
pop
ljmp
push
jmp
xlat
mov
and
push
sbb
je
lcall
jno
mov
bswap
ljmp
into
hlt
loope
movsl
jo
nop
ss
ret
sti
dec
sub
mov
jbe
xor
mov
jl
push
xor
mov
test
inc
xor
add
dec
inc
inc
fsubl
pushf
push
lret
jno
int
mov
mov
adc
cmp
and
testl
lahf
and
and
repz
loope
mov
mov
pop
mov
int3
mov
aad
enter
mov
push
int
xchg
mov
pop
adc
adc
cmp
push
mov
add
adc
sub
and
int
incl
push
lea
sub
ss
sbb
leave
cmp
ret
or
jge
subb
mov
mov
dec
and
pop
notl
dec
loopne
ror
outsb
sub
fsub
popf
decb
jmp
dec
lods
cmp
negb
dec
addb
sbb
jmp
push
test
loop
sbb
pop
test
enter
movsl
shlb
inc
jne
mov
and
inc
cmp
imul
adc
cli
jmp
int
sbb
add
mov
subb
mov
and
inc
cmpl
cwtl
nop
mov
ficompl
out
jge
cmp
mov
pop
loop
dec
and
fists
in
inc
inc
push
inc
fsubp
xlat
fsubrl
int
cwtl
xchg
sbb
sahf
cmp
pop
pop
add
aaa
mov
mov
fstp
xor
mov
out
sub
sub
rolb
into
ret
lcall
sahf
sub
add
jae
or
add
inc
xchg
ror
mov
add
xchg
sub
add
mov
xchg
mov
sahf
pop
add
lahf
ss
xor
mov
daa
lods
mov
int
lea
jge
mov
cmp
fsubs
cmpsl
fs
and
roll
scas
andl
push
fcomps
jno
or
bound
sbb
sbb
orl
sub
jle
sub
sub
imul
add
pop
test
arpl
lcall
rclb
add
push
aad
xchg
mov
push
jb
push
stc
mov
pop
push
jns
lock
lret
adc
adcb
add
mov
xchg
into
lds
push
cmpsb
inc
or
mov
mov
cmpsl
cltd
push
xor
push
pop
cmpsl
inc
in
xchg
jle
xor
movsb
xor
stos
mov
jmp
sub
xor
xchg
lret
cmp
cmp
sub
je
mov
mov
sarl
mov
test
mov
xchg
jge
fistpl
inc
pop
test
mov
and
xchg
jnp
stos
cmp
cmc
sti
jge
out
mov
mov
pop
icebp
dec
cmpsb
mov
fwait
adc
in
pop
or
add
enter
fisttpll
mov
cmp
jae
xor
scas
js
test
fs
std
scas
jmp
repnz
or
rcrl
cs
cld
call
dec
lahf
fcmovne
test
jne
loop
mov
out
sti
fs
and
push
mov
adc
es
out
imul
sub
cwtl
add
outsb
std
stc
nop
int3
inc
stos
dec
int
push
jg
inc
push
mov
add
shlb
popf
xchg
xlat
arpl
out
popl
lods
push
icebp
aam
push
add
fisubs
nop
mov
aad
stos
aam
hlt
mov
and
xchg
push
stos
loopne
inc
faddl
or
push
outsb
in
lret
xchg
lds
dec
addl
or
xor
jp
xchg
aas
mov
dec
loopne
out
out
cltd
mov
dec
jp
xor
push
inc
sub
cs
daa
pusha
iret
mov
dec
jne
out
test
push
test
mov
addr16
sbb
imul
bnd
mov
add
jne
rolb
pop
je
jle
xchg
mov
arpl
push
sub
popf
push
push
inc
cmp
je
and
lds
cwtl
cmp
mov
in
xchg
xchg
das
jns
pop
mov
inc
jns
pop
fcomps
mov
xchg
mov
sub
dec
in
push
pop
in
sbb
mov
decl
dec
xor
imul
and
jno
rcrb
gs
mov
mov
fsubrs
out
or
and
push
out
rclb
sbb
cmc
lcall
mov
and
jo
cmc
lret
push
dec
sub
push
adc
movsl
mov
dec
sbb
mov
shll
scas
icebp
and
sbb
adc
pop
faddl
mov
push
and
daa
xchg
popa
pusha
std
nop
adc
inc
cwtl
adc
mov
push
movsl
gs
dec
push
gs
fisubrs
movsl
jle
shr
andl
inc
rcll
jne
inc
pop
or
sub
pop
mov
rcrb
cmp
mov
loope
jb
insb
or
add
aaa
or
vshufps
out
cmpsb
clc
or
lret
mov
push
loopne
lea
pop
cmp
dec
and
mov
insb
roll
fs
aas
jg
pushf
jg
mov
fists
add
bound
cmpl
push
and
cmp
out
in
sahf
ljmp
and
sub
cmp
nop
out
jl
jecxz
into
out
cwtl
mov
push
int
int
cmpsb
pop
push
pop
dec
sbb
add
add
xor
popa
outsb
int
ret
fs
lock
xchg
sub
xor
outsb
out
mov
dec
leave
mov
inc
outsl
adc
fsubr
sti
pop
js
decl
push
cwtl
adc
sbb
mov
jo
or
in
mov
dec
aas
cmp
jg
lret
repz
pusha
int3
cwtl
push
jg
jno
xchg
sarl
mov
mov
push
cmp
popl
data16
test
and
and
inc
fistpll
inc
outsl
jae
sar
mov
inc
or
repz
into
into
gs
loopne
or
fisubl
jo
jl
push
mov
jno
aaa
pushf
push
aaa
popa
cmpb
ljmp
and
sbb
mov
fidivrs
fildl
mov
jmp
dec
stos
cmp
or
ret
insb
ss
inc
xchg
mov
pop
add
int
jnp
fwait
cmp
in
out
and
pusha
das
adc
cmpsb
fsubrl
inc
lcall
in
loopne
mov
mov
es
mov
shlb
dec
mov
xchg
sub
lods
out
outsb
les
loopne
fstpt
lret
imul
and
xchg
push
mov
xor
jb,pt
mov
lock
out
shrb
out
adc
fwait
jns
jecxz
aam
and
cmp
mov
cld
xor
aaa
rolb
ret
sarb
cltd
jg
insl
xchg
call
cmp
stos
imul
dec
dec
shll
xchg
push
jg
push
adc
push
loop
cmpsb
sub
mov
xor
test
je
jecxz
in
lods
cli
sarl
je
or
mov
mull
cltd
shl
push
into
nop
lods
and
dec
arpl
addr16
in
push
sub
cmp
xchg
je
sbb
adc
popf
rcll
dec
ret
sub
popf
add
sub
and
ljmp
sub
jne
add
add
into
mov
pop
sub
outsb
xor
roll
xor
push
clc
shlb
push
in
xchg
mov
dec
adc
xor
sbb
iret
pop
dec
test
ljmp
enter
popf
sahf
mov
jne
sbb
out
pop
push
sub
stc
stos
inc
cmp
xchg
lcall
lock
mov
mov
ror
jg
rorb
into
dec
shlb
mov
mov
adc
mov
xchg
push
mov
mov
mov
mov
pop
sub
sub
sub
or
into
arpl
inc
inc
icebp
dec
push
lea
movsb
jmp
je
inc
out
cmp
jno
out
and
cmp
pop
jmp
push
adc
push
pop
sahf
in
iret
adc
adc
xchg
inc
cmp
pop
sub
push
insl
daa
pop
push
out
call
test
or
bound
and
mov
xchg
cmp
bound
lods
inc
inc
cmp
sbb
xchg
mov
dec
loopne
lahf
out
pop
out
lret
mov
cmp
test
cmc
cli
rcll
imul
add
mov
mov
insb
cmpsb
or
sbb
and
hlt
mov
and
outsb
fwait
sbb
js
pop
stos
and
sub
sub
mov
jne
mov
rclb
flds
and
bound
sarb
dec
xor
jp
lock
add
mov
mov
push
push
fdivrl
imul
in
jno
popa
ja
in
mov
add
scas
lret
xchg
push
das
cmpsl
or
jno
cmp
inc
es
lods
arpl
mov
mov
cmp
lret
pop
mov
stos
and
popa
adc
les
lds
daa
xchg
and
mov
cmp
mov
stc
sbb
mov
xchg
cmp
loop
pop
push
popa
cs
mov
mov
mov
pop
xor
mov
stc
inc
jnp
mov
xchg
pop
or
jl
aas
leave
fcmovne
lahf
adc
aam
push
dec
jle
jno
addr16
aam
shll
cmpsb
testl
fadds
andb
test
neg
fisttpll
mov
sbb
xchg
mov
fs
stos
subb
mov
divb
les
in
xchg
out
push
mov
or
inc
pusha
clc
outsl
mov
mov
inc
dec
sub
cmp
mov
sub
or
mov
push
cs
xchg
xor
fsubrs
in
je
push
prefetchnta
out
shrl
cmp
icebp
pop
jbe
jg
mov
ficompl
sbb
sbb
rcr
pushf
aad
adc
xor
add
mov
lcall
repnz
xor
mov
ret
lods
jb
push
inc
cmp
test
das
ss
pop
movsb
push
and
xchg
adc
out
inc
dec
sbb
cli
cmpsb
xchg
testl
jbe
fidivs
fsubrl
cmp
mov
add
and
push
cmpsl
adc
jb
mov
fldcw
pop
sub
xchg
xchg
cmpsb
jnp
or
clc
mov
mov
stos
cmc
or
das
and
les
pop
not
lea
gs
je
dec
stc
movsb
mov
or
push
in
rcrb
push
arpl
pop
pop
fstp
pop
cmp
push
mov
xchg
xchg
mov
and
gs
shll
rep
xor
jo
xchg
jmp
or
sub
pop
xchg
adc
sahf
jno
push
cmp
adc
push
or
or
mov
movsb
mov
out
add
imul
test
adc
push
mov
int
dec
loop
pop
or
jecxz
enter
fisubl
mov
cmp
mov
mov
mov
ds
lock
das
out
sarb
mov
es
mov
out
jle
scas
pop
nop
shr
add
mov
and
call
pop
mov
and
and
jne
test
sbb
or
movsb
xchg
mov
aaa
test
xlat
ljmp
stos
ljmp
js
mov
dec
pop
call
push
aas
pop
adc
pop
fstp
jge
arpl
out
mov
addr16
sbb
dec
pop
xor
lahf
lods
push
daa
lods
movsb
sti
bound
xchg
mov
daa
xchg
imul
imul
pushf
lret
xor
xor
je
adc
into
dec
ss
sbb
lcall
inc
ds
arpl
enter
and
xchg
xchg
mov
aad
ds
xchg
fwait
test
pop
jne
ret
repnz
das
fwait
add
setge
int
ret
data16
fimuls
add
stc
xchg
mov
push
jg
push
sub
outsb
hlt
or
mov
sbb
pop
push
push
sub
push
inc
push
outsl
in
inc
lock
fisttpl
add
mov
and
mov
dec
mov
enter
rclb
les
test
iret
cli
xchg
sub
shl
lods
std
scas
dec
add
mov
out
orl
inc
cmp
icebp
lock
mov
mov
insb
pop
ljmp
insl
lods
adc
adc
out
pop
decb
xor
movsb
mov
pop
je
jnp
mov
adc
sub
inc
fstpl
jg
sbb
test
movsl
arpl
jo
pop
mov
vmwrite
mov
stos
xchg
sbb
pop
xchg
mov
sub
xchg
fdivrs
ficompl
fisubrs
push
push
add
push
gs
scas
ljmp
sub
mov
push
mov
cs
lods
fimuls
roll
std
sti
adc
repnz
sub
pop
jne
xchg
and
repnz
inc
jnp
pop
movsb
cmp
inc
scas
ret
in
mov
bound
xchg
test
push
cli
jae
ss
mov
xchg
push
cld
enter
clc
mov
bound
and
and
cltd
jg
mov
popa
push
push
push
cs
mov
add
sbbb
in
mov
outsb
lock
dec
mov
ret
sbb
int3
enter
sahf
std
inc
pop
out
aam
xchg
add
hlt
inc
pop
mov
psubq
mov
and
inc
push
icebp
cmpsb
sub
add
loop
addl
dec
xor
add
push
cltd
ss
cmp
jle
bound
scas
ja
cmp
pop
push
pop
insl
pop
cmc
es
xor
movsb
fwait
jno
es
ja
inc
fidivl
mov
fnsave
cs
adc
leave
jo
or
xchg
imulb
lds
mov
sub
adc
push
popa
jl,pt
cld
fistps
jnp
in
jle
mov
js
hlt
jno
and
cmp
lret
mov
loop
mov
xor
xor
repz
repnz
jbe
dec
popf
mov
in
loop
xchg
stos
xor
movsl
imul
and
int3
mov
stos
xchg
out
mov
in
cmc
out
stc
jae
sbb
mov
shll
fwait
and
movsb
cltd
mov
addr16
mov
lods
bound
push
add
outsl
sahf
inc
sub
mov
jl
jle
decb
cmp
subb
in
pop
jnp
xchg
or
es
xor
shll
mov
sub
scas
add
mov
imull
adcb
dec
adc
enter
fnstcw
cmp
ss
pop
cmp
gs
xor
adc
xor
sbb
ficomps
inc
gs
cld
stos
jnp
js
push
mov
add
lret
cs
ljmp
lods
je
pushf
lds
push
test
jae
addb
sub
inc
enter
aaa
hlt
in
sti
leave
xchg
mov
imul
sbb
mov
dec
mov
aaa
and
iret
cs
mov
imul
push
mov
pop
fimuls
scas
lret
std
leave
and
sti
cmp
loop
inc
xchg
mov
arpl
in
pop
mov
sub
in
sete
out
jl
gs
sbb
mov
clc
lret
adc
jp
xchg
add
sarb
jl
xor
or
negl
cwtl
leave
or
cmpl
mov
pop
xorb
mov
push
push
xchg
inc
adc
xchg
int3
into
rclb
cld
stc
inc
stos
mov
js
push
lods
xor
pusha
jecxz
arpl
aaa
and
push
mov
popf
sbb
popl
cld
sti
jp
lcall
xchg
jb
and
orb
cmpb
add
dec
lods
mov
pushf
cmp
gs
or
xlat
fs
ret
pop
stos
out
adcb
mov
lret
jge
mov
and
jo
rcl
mov
pop
aaa
jmp
mov
dec
cltd
or
cmpsl
fs
addb
cmp
jns
out
stos
and
lods
pop
sub
mov
jbe
iret
sahf
repnz
in
pop
lret
std
fistps
movsb
inc
fwait
imul
adc
decb
ja
cmp
subl
inc
ljmp
add
pop
cmp
cs
in
stc
or
cmpsb
int
mov
repnz
les
mov
inc
lock
loopne
dec
push
xor
push
leave
and
or
sub
std
add
inc
cld
cmp
ss
movsb
or
enter
jae
jbe
add
mov
inc
xor
jnp
call
andl
mov
pop
cmp
mov
iret
jae
pusha
lret
push
jo
xor
mov
lock
pop
jg
cld
shll
not
jle
cmp
sub
xor
andl
add
push
rcrb
fnstcw
dec
xlat
mov
push
inc
std
mov
xchg
fwait
dec
out
push
into
aas
in
or
sbb
add
xchg
inc
das
repnz
and
lahf
mov
out
xlat
call
mov
jl
arpl
xor
leave
ljmp
popf
sbb
mov
dec
aas
sbb
lahf
inc
pop
aaa
int
mov
popa
pop
inc
xor
lea
scas
aam
or
sbb
pop
in
or
pushf
out
add
add
andb
xchg
cmp
les
jb
mov
mov
xchg
repz
lods
inc
adc
in
es
sub
icebp
arpl
xchg
fsubs
fcmovne
fs
out
addr16
jbe
inc
lahf
js
out
lret
ror
bound
sub
out
inc
mov
movsl
mov
lods
pop
int3
push
enter
mov
dec
lock
sub
adc
addb
sbbl
mov
jns
out
sbb
push
ljmp
nop
push
iret
cmc
cld
sbb
jne
ja
fisubrs
lods
pop
aam
xor
sti
icebp
cmp
int3
adc
loope
int
rcl
sbb
mov
dec
stc
push
jo
ljmp
cmpsl
mov
add
js
mov
cmc
arpl
aas
add
xor
xchg
cmovb
loope
fcmovb
ret
mov
arpl
cmpsb
iret
cmp
mov
mov
dec
push
fistps
jl
add
pop
faddl
mov
mov
cmc
lods
add
leavew
aaa
outsl
out
jne
out
lcall
mov
test
mov
cmp
mov
jno
mov
mov
jle
push
ret
xchg
pop
subl
cli
mov
add
inc
jl
mov
push
mov
sub
pusha
dec
push
pop
add
in
jp
mov
inc
rcll
jecxz
in
pusha
pop
sti
xchg
sahf
int3
and
in
and
mov
xchg
scas
add
sub
jnp
std
sub
stos
mov
lcall
scas
fs
gs
ljmp
xor
hlt
sub
icebp
repnz
test
mov
fs
inc
repz
mov
pop
fstp
xlat
push
cli
ljmp
js
mov
pop
jno
negl
ret
jne
xor
jne
adc
inc
iret
loop
loope
divb
mov
pusha
arpl
out
sub
loopne
pushl
and
sbb
cltd
scas
into
add
iret
fadds
adc
jb
add
aaa
pusha
inc
test
sbb
hlt
idivb
xor
sarl
jbe
xchg
and
int
dec
scas
gs
aas
dec
cmpl
out
les
mov
clc
bound
xchg
movsb
push
xchg
or
mov
mov
jno
push
jns
dec
jmp
outsl
xor
das
int3
adc
outsl
jecxz
js
iret
mov
jp
bound
cmp
ds
in
lock
inc
mov
lods
sub
adc
inc
pop
xor
xchg
loop
mov
pop
push
fwait
and
and
or
mov
ja
adc
scas
outsl
inc
clc
push
insb
fdivs
aad
das
outsl
push
dec
fmull
aad
sub
movsb
imul
inc
adc
jmp
push
cmpsl
ljmp
push
bound
loop
sar
movsb
fwait
jp
add
push
adc
clc
xchg
push
sub
repz
rorb
add
cltd
loopne
aam
pop
xor
in
xor
cltd
mov
nop
je
and
xchg
sub
repz
mov
push
or
stos
push
aaa
std
or
ds
dec
mov
cmc
je
mov
pop
add
aad
pop
push
mov
sbb
mov
pop
mov
dec
loopne
add
cmpsb
push
xor
mov
dec
or
ffreep
ret
scas
xchg
cli
jnp
sahf
sub
cmp
mov
adc
push
xchg
pop
add
fwait
and
or
fcmovnb
paddusw
jns
or
sub
fiadds
pop
cmp
jle
pusha
pop
jae
ss
nop
or
cmc
mov
sub
test
cltd
push
mov
and
das
adc
inc
cli
daa
test
gs
cmpsl
clc
sbb
iret
loope
jp
lea
frstor
jecxz
jb
mov
or
movsb
nop
arpl
fdivp
testb
ficomps
pop
js
cmpsl
daa
fstps
mov
mov
dec
aad
pushf
jno
ret
into
mov
scas
and
dec
jecxz
cmpsb
dec
les
xor
sar
test
ficompl
lahf
jnp
push
mov
mov
sarl
mov
xor
pop
or
cltd
cmp
sub
cmp
iret
pop
imul
pusha
scas
fimuls
popf
push
push
test
inc
into
and
dec
imul
scas
push
push
push
pop
dec
fldl
mov
test
lahf
insl
inc
jns
jmp
or
pop
popa
push
jns
bound
aad
mov
mov
mov
sub
pop
fisubrl
cld
popf
int
xorb
out
adc
adc
repz
cli
mov
cmp
pop
test
or
xchg
xchg
dec
dec
andb
mov
dec
negb
sbb
add
mov
pop
or
jae
inc
jnp
and
iret
jno
in
sub
aam
mov
jb
lods
cmpl
nop
faddl
jne
lret
movsl
xchg
sahf
push
ljmp
or
mov
push
fwait
js
outsb
push
sub
mov
adc
xorl
rcll
push
dec
test
or
xchg
xlat
push
and
xchg
mov
sub
adc
jae
cmp
sbb
push
ret
addr16
je
add
shl
pop
in
aad
jo
ss
xor
stos
sub
ficomps
scas
icebp
pop
sbb
subl
leave
stos
jmp
cmp
les
fisubs
fwait
and
inc
pop
and
pop
add
jp
pop
scas
jmp
mov
mov
cmpsb
scas
mov
aaa
sbb
scas
in
arpl
push
mov
xorl
jle
xor
cmc
negl
mov
cli
dec
repz
mov
dec
or
adc
pushf
insl
inc
lret
mov
fdiv
xchg
adc
sbb
jl
bound
mov
mov
xlat
movsb
mov
lcall
pusha
or
add
sbb
imull
cmp
mov
cmp
mov
pushf
cld
inc
inc
out
adc
fs
push
cmpsl
loop
push
pop
cmp
mov
or
inc
or
sub
fisubs
loopne
sahf
mov
cmp
xchg
cmc
mov
addl
push
jnp
call
adc
mov
push
insb
loopne
and
sbb
test
lea
es
adc
stc
xor
pop
cs
mov
clc
add
rclb
cmp
mov
pop
cwtl
movsl
inc
jnp
cmp
sbb
lcall
push
sub
loopne
cmp
movsl
cwtl
aaa
pusha
push
into
inc
push
movsl
inc
push
cmp
dec
les
pop
clc
sub
fcoml
dec
push
mov
sub
mov
sub
jle
adc
rcrl
rsm
cmpsl
xchg
add
sub
cmp
mov
movd
js
jne
add
lahf
mov
fmulp
and
lods
xor
mov
shrb
cmpsl
cmp
lock
add
mov
sub
sbb
xor
std
mov
les
gs
mov
into
shlb
adc
rorl
inc
xchg
pushf
mull
jae
int3
and
inc
sbb
inc
jo
movsb
mov
inc
arpl
mov
or
xchg
aad
test
jne
cmp
mov
mov
mov
decl
inc
insb
ja
ljmp
in
cmp
subb
aas
dec
jp
push
pop
ja
int
sarb
js
mov
jbe
dec
xchg
bound
test
jl
and
and
push
and
cmpsl
jmp
push
fmull
std
int3
leave
filds
cmp
lods
mov
dec
in
xor
jl
fs
cwtl
bound
lea
xor
ucomiss
ds
jmp
push
and
sbb
iret
xchg
xchg
xor
scas
cwtl
pop
ljmp
sbb
add
cmp
hlt
cmp
dec
in
ret
les
inc
dec
and
cmp
arpl
mov
lcall
jae
int
pop
add
add
std
pop
sub
add
jecxz
cmp
and
imul
fdivr
adcb
fsubs
jbe
or
std
out
sbb
and
xlat
ret
clc
inc
mov
test
gs
std
addr16
call
mov
ja
and
sbb
jge
nop
xchg
cmp
xor
mov
xor
xchg
movsl
pop
ja
dec
adc
inc
xchg
cmp
rorl
jo
add
and
and
xchg
fwait
lret
data16
dec
stos
aas
insl
xor
add
daa
dec
jno
fidivrl
rcll
fisttpll
in
out
and
movsb
xor
imul
xchg
push
xlat
push
idivb
lds
movsb
add
insb
jmp
xchg
mov
ss
jnp
bswap
adc
sub
int3
adc
or
lock
test
pop
sbb
xchg
stc
aas
pushf
mov
add
dec
fs
jg
mov
fisttpl
cmp
das
push
fsubl
frstor
rcl
popf
call
fwait
sbb
insb
xchg
xor
cltd
enter
lods
push
cmp
mov
xchg
lock
data16
pop
sarb
cwtl
mov
pop
push
and
push
mov
fadd
mov
fdivs
shlb
add
sub
jnp
cmc
add
mov
pop
int
or
les
jo
movl
movsl
sub
out
mov
or
or
adc
xchg
fistps
out
xchg
mov
sub
pop
or
fmulp
lods
push
movsl
mov
ja
pusha
cmc
aad
mov
xlat
dec
dec
ret
lahf
into
dec
xchg
jae
and
dec
jmp
test
leave
ja
cwtl
mov
fildl
lods
sti
mov
fs
xchg
leave
roll
xchg
push
jb
repz
rcrl
fists
mov
test
and
outsl
inc
xchg
push
jmp
sti
shrl
outsb
mov
sub
sub
test
jne
sub
push
in
sbb
lret
jecxz
dec
int3
mov
cmp
cld
pop
pop
dec
sub
xor
adc
sub
rcr
fstps
and
roll
das
add
cli
mov
repnz
cmp
pop
xor
add
test
mov
rcrl
jns
ret
movsb
iret
test
in
dec
fcmovb
lea
sbb
mov
fstpt
stos
sub
outsb
sbb
sub
cld
clc
popf
dec
aaa
cmp
enter
add
stos
mov
xor
icebp
pushf
fdivrs
in
lar
out
ja
loopne
hlt
xor
sub
daa
fbstp
mov
outsl
mov
icebp
shr
and
push
addl
inc
sarl
fxch
adc
jae
mov
out
clc
adc
movsl
lock
lea
std
xchg
pop
jg
mov
cmp
push
adc
inc
mov
inc
pop
add
ret
sub
in
scas
or
inc
test
pop
or
sbb
pop
push
dec
dec
xor
cmp
outsb
xchg
testl
andl
mov
pop
sar
js
or
xor
xchg
mov
lods
pop
in
into
lret
imul
xchg
outsb
sub
rcrb
lds
pop
add
nop
inc
mov
sbb
pop
cmp
inc
push
sbb
add
sbb
or
loope
inc
stos
cmp
pop
les
call
add
ljmp
sbb
popf
nop
mov
mov
jae
out
jecxz
lahf
xchg
lods
mov
jne
add
icebp
mov
negb
and
repnz
loop
inc
sub
jge
xor
mov
out
mov
lcall
aaa
pop
cli
push
sahf
fiaddl
cmpsl
inc
cmc
mov
adc
jge
push
sbb
dec
cwtl
fildll
inc
daa
mov
lock
mov
adc
jo
test
jae
push
add
imul
add
xchg
mov
pop
imul
in
test
inc
int3
mulb
nop
push
sti
add
jb
pop
adc
vcomiss
mov
sbb
sti
sub
jl
add
jge
cmpsl
cli
xor
adc
adc
dec
pop
cmp
es
fwait
xchg
out
xchg
loopne
int
into
lods
lea
sbb
push
and
xchg
aad
mov
movb
pushf
adc
sub
cltd
pop
in
insb
test
jecxz
fimull
mov
mov
adc
jb
sub
mov
scas
cmp
ret
outsl
jo
xchg
push
mov
pushl
xor
adc
add
insl
ljmp
ljmp
int
cmpsl
sub
xor
lcall
mov
jbe
sbb
lret
enter
cltd
je
mov
dec
andb
iret
out
cmpsb
xchg
cmp
mov
pop
sub
mov
lcall
or
outsl
divl
inc
movsl
insl
scas
les
out
sub
sub
pop
lahf
sbb
dec
mov
jae
std
sub
cmpsl
in
xor
bnd
imul
hlt
insb
adc
mov
inc
push
rorl
test
push
add
jnp
mov
bound
pop
and
je
into
es
xchg
dec
push
jne
stos
xor
stos
mov
scas
push
and
sub
xchg
lods
lock
or
lret
jg
inc
jg
mov
insb
jg
push
or
mov
mov
jbe
out
jno
gs
mov
lahf
and
and
dec
mov
dec
sub
lds
push
int3
xchg
inc
push
enter
mov
jo
lods
or
mov
lcall
in
inc
adc
outsl
xchg
mov
test
mov
mov
push
add
jmp
xor
jnp
inc
dec
into
add
jmp
fildll
add
mov
neg
push
add
jo
repz
subb
cltd
mov
fsubl
xchg
addb
in
loopne
xor
cld
pop
sub
jnp
cwtl
cltd
in
cmp
iret
outsl
push
in
jp
rcrb
popf
stos
dec
test
test
lret
frstor
js
iret
mov
xchg
xor
and
inc
xor
jle
std
adc
or
lods
mov
fstpl
or
lret
cltd
sub
outsl
mov
or
pop
or
pop
fstpt
mov
loope
xor
int
jecxz
mov
ljmp
xchg
in
push
sbb
xor
pop
cmp
jge
cmpsl
xor
push
jb
insl
add
inc
jmp
call
xchg
testl
jbe
lcall
aad
pop
sub
sub
loopne
push
gs
in
stos
pop
sub
sbb
mov
nop
sbb
pop
imul
mov
or
aas
push
icebp
test
enter
inc
jg
xor
dec
xor
pop
or
bound
mov
sbb
aad
sub
loopne
stos
leave
leave
movsl
mov
mov
jl
xor
jg
mov
xor
xchg
arpl
lret
jne
pop
stc
test
push
ljmp
scas
add
mov
mov
dec
push
jb
lds
and
je
clc
nopl
or
int3
flds
or
ret
stos
mov
mov
insb
pop
push
adc
cld
xchg
jl
divl
dec
ror
push
mov
push
inc
xchg
pop
lock
insl
sti
insl
inc
loope
iret
subl
popf
ss
push
jne
scas
in
sbb
cltd
xor
fildl
jmp
push
das
mov
inc
fiaddl
stc
shll
and
cmp
test
dec
insb
mov
add
adc
and
pop
adcl
iret
add
mov
add
pop
sub
sbb
or
scas
sub
jae
xchg
inc
stos
punpckldq
push
cs
push
mov
xchg
dec
loop
mov
popl
rcrb
pusha
push
sbb
jo
adc
inc
push
test
mov
cmp
mov
or
mov
or
jnp
adc
and
sub
adc
push
sub
sub
and
mull
lret
roll
setae
mov
push
sub
push
add
fs
push
inc
fldl2e
xor
add
or
cli
inc
pop
xor
mov
push
into
mov
mov
test
sub
shlb
rol
jmp
sbb
ficoml
inc
mov
hlt
imul
push
stc
lods
lods
and
iret
xlat
push
dec
sub
mov
ss
inc
sub
mov
jne
and
mov
insl
cs
push
fwait
mov
sbb
repz
out
xchg
imul
sti
pop
int
jecxz
mov
in
sahf
push
ja
ror
iret
daa
mov
inc
imul
cmpsb
mov
mov
push
xchg
xor
mov
push
mov
jo
xchg
fstl
inc
hlt
xor
sti
xor
xor
xchg
sbb
in
mov
outsb
jns
int
pop
addr16
jl
xlat
ja
sahf
or
or
pusha
xor
mov
andnps
sbb
repz
repz
cmp
mov
jmp
sub
pop
push
daa
mov
sbb
push
in
or
push
fimull
mov
and
xor
out
xchg
and
cs
imul
push
mov
jns
sahf
pop
xlat
rcl
out
dec
and
sti
cmp
mov
inc
jbe
push
pop
sarl
xor
mov
add
adc
pushf
out
cmpl
add
popf
and
movsb
mov
sbb
punpcklwd
jle
lods
iret
sub
lods
sbb
test
sub
or
cmp
aas
sti
out
scas
cmpsb
imul
es
or
inc
fbstp
scas
out
andl
in
outsl
inc
dec
cmpsb
int
in
dec
pop
xor
push
popa
test
mov
loope
ds
fcomps
roll
inc
iret
jecxz
cltd
sub
out
fiadds
cmp
fmulp
in
jle
stos
cld
inc
or
mov
cmpsl
into
jl
jg
xor
enter
and
gs
je
jne
mov
arpl
xor
js
pop
inc
jb
repz
jnp
jns
xchg
cmp
adc
fs
loopne
inc
xor
cmp
pop
sub
in
or
insl
int
jle
fisubrs
xor
dec
adc
or
push
lcall
aaa
hlt
pop
push
fildl
and
dec
mov
jnp
js
sahf
jo
mov
sbbb
add
xor
ja
adc
sub
lret
out
movsb
enter
or
std
mov
sub
js
testb
test
sarb
lahf
lret
push
leave
sbb
dec
pop
dec
aad
adc
cmpsl
dec
jo
jp
daa
and
dec
daa
jmp
lcall
jl
xor
lret
mov
xor
cmpsb
jb
pop
cs
rorb
push
pop
insl
mov
and
push
inc
enter
les
stc
fimuls
movsl
cmp
push
mov
inc
shl
cmpsl
std
test
sbb
dec
lcall
je
inc
inc
sub
lods
out
push
and
arpl
mov
push
push
aaa
stc
push
xlat
pop
nop
stc
iret
dec
std
repz
sahf
jno
or
insb
push
sbb
or
nop
or
shrb
insb
push
xchg
jne
test
lock
shll
dec
push
or
push
daa
jne
loope
sub
mov
push
outsb
out
mov
xor
xchg
push
hlt
inc
ret
lcall
xchg
jbe
add
out
sbb
push
sbb
cli
filds
lea
movb
jae
push
in
inc
lods
or
cmp
cmc
sub
loope
pop
add
or
push
pxor
push
jae
in
test
inc
lods
push
std
aaa
lahf
in
xchg
pop
rorb
daa
fldl
negb
push
push
lds
mov
sbb
add
sbb
jl
xor
pop
je
or
sbb
gs
pop
push
stc
mov
jns
mov
cmp
adc
push
mov
pop
dec
mov
xchg
lret
pop
in
xchg
cmpb
loop
jl
in
dec
imul
and
ret
dec
cltd
sbb
push
inc
jp
mov
mov
mov
mov
adc
sbb
arpl
adc
fistl
mov
nop
add
pusha
mov
mov
push
arpl
les
in
cmp
mov
rclb
push
jns
or
cmc
pop
add
mov
ficomps
inc
fsubl
imulb
mov
push
ljmp
and
outsl
push
imul
popa
or
jle
ss
cli
mov
mov
add
sarb
ss
data16
dec
loopne
cmovb
call
mov
inc
mov
out
adc
xchg
scas
xrelease
sahf
cmp
movsl
mov
ss
or
pop
xor
cmpsl
xchg
test
pcmpeqb
add
or
out
popf
jo
bound
aaa
and
mov
mov
jnp
cmpsl
lods
sub
fyl2xp1
xor
mov
inc
stos
adc
loopne
mov
pop
lret
xchg
dec
mov
daa
mov
clc
inc
push
mov
xlat
ljmp
dec
xchg
jbe
mov
dec
add
roll
test
stc
shrb
adc
ss
test
jnp
sbb
jno
sub
bnd
sbb
xchg
sub
pop
xor
ja
mov
int3
lahf
out
mov
and
aas
pop
mov
in
xor
shll
pop
shll
ficoms
or
mov
ljmp
jmp
mov
cmp
gs
mov
mov
sub
and
xchg
orl
idivb
jle
out
sti
jmp
jp
in
loopne
inc
clc
lret
or
dec
sub
cmovbe
outsb
daa
add
decl
inc
xor
pop
pop
xchg
mov
loop
xor
xchg
movl
inc
jnp
rorb
cmp
arpl
aas
dec
push
filds
test
je
and
nop
ficoms
inc
dec
testl
mov
mov
xor
cmp
push
pop
cltd
outsb
ret
push
dec
mov
bound
fldl
imul
scas
mov
ljmp
jle
aad
xchg
sbb
pop
fwait
sbb
out
in
mov
dec
popf
or
fldl2t
sarl
xchg
clc
fwait
cltd
out
adc
dec
cmp
mov
into
jmp
xchg
adc
or
pop
add
sub
test
sub
mov
mov
sbb
into
xor
orb
mov
sub
sub
xor
fnsave
dec
xchg
mov
xchg
mov
icebp
cltd
mov
mov
sbb
xor
lea
inc
sub
int
xorl
xchg
jns
lret
push
daa
jae
mov
popf
cmc
repnz
add
push
jecxz
xchg
mov
testb
lods
mov
ret
xchg
scas
jns
aaa
cmp
and
dec
imul
sub
jno
add
cmpsl
mov
push
jo
mov
andb
push
jmp
and
push
mov
cmpsl
insb
shrl
pop
sbb
sbb
adc
and
xor
pop
adc
fstps
and
xchg
push
cmp
dec
adc
xchg
iret
pushf
inc
rcl
in
push
mov
jmp
and
subb
es
mov
not
cmp
push
idivl
push
dec
call
and
out
lcall
adc
fwait
mov
dec
bound
repz
sti
pop
mov
dec
nop
mov
mov
xchg
adc
out
xchg
cmpsb
sub
popl
pop
xchg
ljmp
aas
xor
sub
bound
jb
jmp
pop
push
loop
add
shlb
jle
xlat
mov
xor
xchg
lahf
jecxz
stos
xor
push
or
in
jb
cwtl
mov
xor
or
imul
xchg
mov
jg
and
sbb
rclb
adc
mov
ficompl
fistps
out
loop
add
insb
cmp
shll
dec
mov
inc
mov
mov
sub
sbb
jle
sbb
imul
pop
dec
and
jbe
iret
pushf
ds
adc
pop
mov
loopne
cmp
std
shlb
out
push
push
call
jmp
bnd
xchg
and
mov
cltd
stos
mov
sti
lock
fidivrs
mov
ret
std
inc
adc
mov
lock
mov
xor
xchg
xor
dec
sbb
jb
addl
clc
ficompl
adc
and
mov
xor
xor
mov
out
call
into
loope
imul
lock
movsb
stos
add
mov
in
int
adc
clc
repnz
jl
or
jle
pop
add
out
in
cmpsl
fwait
stos
pop
fsubl
push
sub
adc
pusha
cltd
dec
mov
sbb
push
cmpsb
add
iret
adc
jge
mov
hlt
loopne
repz
mov
cmp
pop
xchg
and
outsb
mov
iret
cmp
push
jbe
jns
in
sub
insl
mov
add
bound
pop
cs
adc
pop
iret
popa
jns
xchg
jnp
push
inc
jne
sbb
add
ret
jns
dec
lods
adc
cld
push
xchg
jecxz
adc
sbb
inc
mov
sbb
test
mov
mov
and
xchg
adc
out
mov
mov
out
pop
fcoml
jecxz
sub
add
arpl
xchg
mov
lea
je
mov
js
shl
pop
je
push
push
jne
in
mov
sbb
in
int3
and
push
int
mov
ss
add
idiv
fiaddl
aaa
cmpsb
sub
rorl
lea
lock
xchg
mov
add
xchg
push
cmp
jge
in
lods
test
out
xchg
or
movsb
mov
icebp
xchg
data16
je
inc
pop
js
movsb
in
sbb
fisttps
fcmovbe
xor
fs
out
xchg
fisttpl
aad
sbb
sub
or
push
jmp
xchg
incb
xchg
cmp
stos
fcmovb
pusha
stos
arpl
mov
add
mov
addl
mov
push
addr16
push
ret
decl
loopne
mov
inc
lock
inc
add
aas
mov
xchg
push
ss
push
jbe
lea
lea
stos
aas
bound
dec
ljmp
jmp
sti
push
sub
adc
ror
enter
lahf
mov
loope
sbb
xchg
movsl
icebp
dec
sbb
and
xor
cltd
or
call
lahf
inc
lret
fwait
pop
sbb
pop
stc
mov
xchg
jmp
pop
sbb
sbb
jmp
in
ficoml
imul
or
out
xchg
dec
lcall
movsl
movsb
pop
jge
fimuls
push
or
add
jmp
insb
call
sbb
mov
adc
dec
xor
lahf
jg
sbb
aad
adc
dec
xor
jno
mov
sbb
movsb
adc
loopne
nop
icebp
mov
dec
data16
lahf
xor
addb
and
jg
mov
or
dec
and
insb
outsl
xor
and
and
dec
mov
xchg
ljmp
scas
sub
out
sub
in
pushf
fsubp
out
loopne
and
xor
jg
movsb
mov
orb
popf
mov
add
jno
jb
stos
fmull
sub
push
pop
ficompl
arpl
pop
into
mov
adc
jecxz
aas
adc
paddsb
shlb
xor
add
lcall
push
and
push
lret
cld
rcr
xchg
notl
in
adc
out
test
outsb
popa
insb
mov
cltd
mov
std
xchg
jne
mov
adc
sub
and
pop
jmp
jmp
mov
gs
mov
mov
or
jge
sub
daa
stc
sub
cmpsl
fsts
mov
movsl
repnz
sbbb
lea
sub
stos
sub
pushf
or
loope
pop
pop
int
pmulhuw
adc
xor
mov
xchg
cwtl
pushf
jno
ror
xchg
jo
sub
and
sub
jmp
cmc
repz
notb
inc
jbe
xor
inc
pop
mov
xor
mov
inc
mov
or
dec
mov
call
jne
dec
or
ljmp
movsb
cmp
add
xchg
push
fcmovnb
int3
sbb
mov
pop
rcll
mull
jl
lds
dec
sbb
andb
xchg
mov
jno
pop
inc
mov
dec
mov
int
mov
sbb
test
pop
insb
xchg
cmp
add
loopne
jne
mov
mov
jecxz
push
andb
jne
sti
cmp
shlb
add
enter
insb
ss
sahf
in
je
fmul
and
push
push
cmp
js
stos
arpl
sub
sahf
loopne
stos
jge
ret
call
push
int
push
icebp
int
mov
mov
bound
mov
ret
and
sbb
lea
dec
ds
mov
cmp
mov
aad
sub
mov
xor
lret
in
out
gs
loopne
xor
fwait
pop
lods
ja
pop
popf
or
adc
fistpll
xchg
cs
pushf
cmpl
cmp
adc
sti
dec
xor
xchg
push
outsb
dec
xchg
hlt
mov
scas
pop
inc
jne
fisttps
enter
cltd
and
out
lods
sbb
jo
popa
dec
stos
xchg
sbb
sbb
aas
mov
cltd
leave
ds
mov
dec
sbbl
xchg
repnz
movsb
sar
daa
addr16
jae
pop
push
je
sti
lds
jbe
mov
sub
sbbl
stos
lcall
int3
lcall
or
sti
mov
mov
loopne
cmp
jnp
push
push
aam
outsb
lea
inc
dec
lds
test
push
sub
push
dec
pop
lret
add
xchg
dec
aas
cmp
adc
addl
dec
pop
sub
and
and
ja
divl
and
aas
mov
hlt
hlt
lods
das
cmp
imul
xor
cmpsb
adc
jl
pop
push
arpl
leave
call
mov
mov
pop
cmp
sub
les
xchg
pop
fidivrl
xchg
pusha
in
lret
fs
scas
insb
mov
xor
jl
and
pop
xor
sti
pushf
popf
push
repnz
xchg
insb
adc
inc
jb
movsl
push
sahf
loope
dec
nop
fcoml
cs
pop
jp
and
and
xchg
js
aaa
jl
das
pop
and
imul
adc
je
sub
or
add
add
push
push
ljmp
dec
insl
loope
jl
push
lea
jns
cmp
push
pusha
lret
shl
enter
mov
movsl
lret
jmp
bound
jl
pop
xor
push
adc
imul
loop
fdivrs
push
jecxz
xor
rolb
jbe
jne
add
or
mov
sahf
mov
mov
mov
mov
push
adc
or
push
xor
xchg
sbb
add
jne
std
out
into
inc
xchg
stos
dec
and
fs
imul
jmp
sbb
jp
pushf
sub
movsb
bound
sahf
xor
lret
out
mov
and
sbb
jecxz
pop
jl
xor
dec
popa
hlt
aaa
out
inc
shlb
xchg
mov
xchg
mov
int
pusha
rorb
imul
add
or
mov
enter
jnp
insl
jge
and
movsb
pop
or
fisttpll
shr
dec
sub
scas
loopew
iret
out
jmp
fadd
jp
cmpsl
mov
lods
lret
xchg
or
mov
fdivl
je
xchg
negl
and
cmp
mov
test
jae
xchg
imul
pop
mov
jne
mov
imull
int3
pop
mov
dec
hlt
mov
stc
jae
out
pop
xchg
cwtl
aaa
mov
fs
add
cmpsb
std
cmpsb
pop
jb
arpl
test
je
xorl
test
cmc
push
inc
ror
call
cmpl
adc
push
iret
sub
mov
in
sub
pusha
icebp
adc
mov
clc
mov
les
sub
sub
add
jo
rcrb
or
test
sarl
push
data16
pushf
lds
das
outsb
mov
call
dec
add
add
inc
shll
repnz
andl
in
sahf
cmp
pop
popa
ret
sub
notl
out
and
lock
addr16
mov
mov
bound
into
mov
add
lret
mov
outsl
insb
mov
mov
mov
enter
cmp
jne
fcomps
gs
sar
enter
subps
sbb
mov
dec
cmp
mov
inc
sub
hlt
sub
stos
sub
cmpsl
movsb
es
andb
aad
inc
add
std
filds
test
mov
rclb
mov
add
mov
push
pop
scas
lds
dec
shll
mov
inc
fdivr
pushf
mov
cmp
jp
loope
mov
pop
shrl
sbb
enter
xor
or
pop
popf
fsubr
push
push
xchg
adc
sbb
stos
adc
mov
mov
cmp
inc
push
dec
mov
adc
cmp
inc
mov
add
ficoml
jg
testl
sub
outsb
add
push
dec
nop
mov
fdivrl
adc
xchg
jbe
int3
lods
jmp
pusha
dec
into
inc
scas
sbb
xor
push
dec
ret
and
popf
inc
cmpsl
scas
add
mov
mov
xlat
xchg
xchg
repnz
out
adc
push
push
mov
out
push
stc
cmp
add
fwait
push
push
xlat
add
test
hlt
adc
mov
dec
cltd
out
movsb
gs
and
test
cld
in
xchg
xor
nop
enter
xchg
pop
mov
shlb
xchg
push
inc
push
sbbb
out
inc
pop
gs
ljmp
fstpt
mov
lret
pop
call
xor
int3
xchg
xor
mov
mov
insb
sub
stos
xlat
inc
gs
sti
add
add
fidivl
ljmp
fs
inc
leave
push
lret
adc
inc
and
fmull
jmp
xchg
sub
push
or
mov
into
sti
enter
mov
push
sub
push
lcall
cmpb
test
sbb
add
cmp
sahf
je
mov
ret
rorl
int3
or
xor
or
mov
mov
in
movq
inc
test
lds
fwait
std
int
jo
sub
cld
in
pop
adc
and
daa
dec
mov
lret
repz
push
inc
out
call
xchg
xchg
mov
movsb
notl
into
loopne
or
cwtl
mov
and
xchg
xor
or
cmp
fistl
neg
sbb
stos
loope
je
subps
movsl
ljmp
sbb
jae
lea
inc
sbb
mov
movsb
jne
js
mov
mov
sub
mov
mov
es
into
cltd
jae
ret
lods
mov
icebp
add
lds
orb
repz
pop
lret
push
mov
or
xor
scas
arpl
imul
imul
mov
dec
and
js
pop
mov
jb
sbb
stc
and
cwtl
and
dec
and
jg
push
leave
sub
or
jmp
and
mov
xorl
dec
pop
mov
fildll
jnp
loop
stos
dec
sbb
pop
inc
out
push
pop
dec
adc
add
xchg
mov
mov
push
cmp
adc
dec
dec
jnp
sub
push
xor
pop
mov
int
adc
iret
xor
stos
and
enter
adc
or
stc
shll
mov
cld
inc
xchg
imul
in
push
adc
pop
rclb
aaa
negb
das
jne
jle
jecxz
dec
mov
lock
lods
lea
adc
push
js
pop
cli
lds
sub
das
incb
jns
cwtl
movsl
sub
xchg
jg
mov
test
leave
ds
minps
ret
out
and
sub
cmpsl
sub
rol
cltd
mov
icebp
adc
mov
sti
pop
pop
lret
fwait
xchg
popf
xor
xchg
mov
fmul
push
inc
pop
sub
dec
xor
sbbl
je
jo
mull
stos
int
ret
xchg
inc
popa
dec
and
push
adc
adc
mov
lock
out
dec
outsl
ss
test
outsl
mov
adc
xchg
add
jb
mov
add
sbb
mov
pop
sahf
scas
pop
scas
ss
cmpsb
push
xor
sbb
sahf
xor
fmull
mov
cmpsl
mov
call
movsl
jge
loope
ss
rorb
lods
int3
adc
sub
xchg
imul
rcr
sbb
jle
jge
mov
out
mov
xchg
cmp
mov
hlt
mov
xlat
mov
jl
push
xchg
cltd
outsb
popa
aad
imul
cmp
jmp
scas
pop
in
and
mov
imul
push
pushf
lods
scas
and
push
arpl
push
dec
and
push
pop
fistl
pop
cmp
mov
jecxz
fdivs
push
out
push
fmuls
ret
adc
or
decl
dec
adc
adc
dec
mov
pop
adc
insl
repz
cmpsl
cmp
sahf
repnz
lret
push
xchg
jne
call
imul
cmpsl
adc
loop
ret
popa
fs
scas
jnp
inc
lcall
imul
dec
imul
insl
pop
jl
jae
nop
popa
push
mov
sub
jo
pushf
lock
inc
stos
pop
mov
enter
loop
das
mov
xlat
mov
not
pop
jle
push
les
fmuls
imul
mov
out
jl
enter
repnz
push
mov
jg
lahf
shrl
sbb
xlat
outsl
gs
stos
mov
adc
xor
xor
add
push
cmp
fwait
and
rorl
lcall
in
inc
and
sbb
in
or
xchg
les
dec
mov
cmp
xchg
sub
jbe
cmp
mov
sahf
int
cs
mov
adc
sarb
jno
into
sub
cmp
popf
xor
dec
push
pop
imul
cmp
test
xchg
cmpsb
sarb
repz
out
mov
mov
sub
or
sub
es
test
jb
lods
add
or
or
pusha
mov
fs
push
mov
ret
add
imul
sbb
push
or
outsb
xor
test
xlat
dec
cltd
push
pop
or
push
pop
sbb
xchg
pop
test
clc
je
shrb
xchg
sub
add
mov
outsl
xchg
aam
mulb
inc
mov
adc
leave
fimuls
add
cmp
sub
repnz
stc
cwtl
or
xchg
out
mov
or
cmc
or
sub
inc
or
jnp
and
cld
mov
fwait
dec
ss
push
pop
fs
add
dec
mov
add
popf
push
xchg
and
mov
sbb
push
ja
daa
xchg
pop
mov
lret
dec
xor
mov
std
out
inc
ror
sub
jb
stc
jle
push
add
rclb
mov
push
jo
ret
push
inc
push
loopne
and
les
mov
mov
ljmp
or
cld
aas
test
dec
sbb
mov
xor
mov
inc
and
insb
nop
testl
add
pop
push
adc
insl
rolb
adcb
add
lret
out
cmp
test
cmpsb
jecxz
dec
lods
or
add
ljmp
pop
adc
mov
adc
sub
mov
call
mov
pop
xor
int
insb
ror
cmp
rorl
leave
xchg
sub
sbb
into
lcall
mov
mov
xchg
lcall
fdivrs
dec
adc
dec
jb
dec
cmp
enter
sub
jo
sbb
push
mov
xor
lea
dec
repnz
xor
push
cmp
gs
add
xor
dec
xor
ficomps
xchg
pop
adc
shll
in
mov
dec
xor
es
fwait
int
sub
inc
push
jmp
movsb
int
mov
dec
call
inc
test
loopne
push
jno
push
inc
mov
add
pusha
push
or
fwait
pop
push
fcos
jns
sbb
outsl
mov
mov
test
fdivrp
cs
sub
xchg
mov
mov
add
mov
mov
cld
shr
push
push
xchg
jecxz
and
push
fmuls
jnp
and
mov
push
adc
shl
pop
pushf
ror
mov
fdivrl
loope
daa
repz
scas
enter
lcall
mov
mov
push
aam
mov
outsl
sbb
or
dec
or
jae
roll
xchg
les
push
push
test
gs
adc
xor
je
xor
out
pusha
icebp
cld
cmp
dec
out
adc
mov
cmc
into
insl
rclb
aaa
or
cmp
stos
push
sbb
imul
test
mov
mov
test
or
leave
add
sub
mov
sub
test
adc
stc
ja
jmp
mov
divl
mov
jg
hlt
inc
mov
hlt
or
cmp
adc
mov
xor
mov
data16
and
pop
jp
int3
sbb
leave
int3
int3
inc
mov
jl
or
push
dec
fisubs
daa
test
call
cmp
pop
test
pushf
lock
lods
and
das
lods
sub
test
nop
ret
dec
or
loope
dec
dec
stc
pop
jg
arpl
jp
mov
movsb
pop
push
mov
mov
pop
jge
jnp
adc
xchg
popf
inc
insl
or
mov
pop
imul
push
scas
cmpl
addr16
mov
iret
adc
cmp
xor
mov
sbb
aad
aam
shlb
shll
adc
push
sbb
bound
adc
mov
cmpsl
scas
pop
dec
jbe
cmp
pop
lret
pop
cli
movsl
loop
mov
add
daa
xchg
lock
xorb
and
pop
fs
jecxz
pop
call
inc
jb
rcrb
daa
lahf
in
mov
fnstsw
jno
cltd
mov
out
in
leave
sub
jmp
pop
flds
movsl
aad
sub
pop
adcb
pop
push
cltd
mov
xchg
sub
popa
andl
and
sub
sahf
setne
pop
outsb
sbb
aam
jecxz
sbb
lock
dec
mov
int3
out
rolb
mov
pop
xchg
push
inc
or
pop
sub
push
into
push
out
mov
inc
ffreep
add
jns
xchg
psubsw
loopnew
adcl
aad
sub
adc
loopne
sbb
mov
fsub
pop
sub
stos
flds
inc
in
cmp
subb
pop
iret
sarl
xlat
jne
and
xchg
icebp
adc
jae
roll
xor
int
pop
loopne
hlt
xor
loope
sub
push
mov
out
fmuls
std
stos
dec
inc
dec
pop
lods
and
mov
jns
xor
cmp
inc
rcrl
dec
mov
jo
pop
jbe
cmp
or
and
incb
sbb
mov
fwait
jno
inc
xchg
add
lods
pop
sub
in
pusha
push
mov
cwtl
sub
loopne
loopne
ret
sub
js
mov
ret
or
int
dec
mov
cmp
mov
fwait
add
pushf
outsb
mov
jo
adc
mov
xchg
lret
push
push
push
dec
aaa
testl
lods
aas
xchg
fistpl
xor
pusha
sbb
lret
xlat
cld
xor
mov
add
pop
mov
mov
stos
cmp
fs
les
sti
inc
mov
jno
adc
lods
push
cmp
cld
mov
inc
sbb
pusha
xor
imul
mov
and
add
push
and
mov
xchg
incl
rcll
pushf
push
mov
icebp
sub
bound
pop
xchg
cmp
pop
cmpsb
pushf
pop
add
mov
aas
int
ja
xorb
divb
xor
es
lds
pop
test
inc
xchg
inc
jb
add
mov
dec
pop
aam
insl
and
adc
add
mov
scas
popa
push
sbb
xor
pushf
cmpsl
std
xor
fisubrl
outsb
pop
and
add
or
jmp
repnz
arpl
sub
mov
jno
das
sbbl
push
out
out
adc
dec
push
fisubl
test
sub
sub
xor
sub
mov
inc
mov
cmp
imul
mov
mov
test
ret
scas
inc
inc
stos
push
in
sti
test
fimuls
int
hlt
das
movb
dec
mov
in
and
xchg
cmpsb
cwtl
inc
fwait
bnd
or
xor
pop
mov
mov
mov
dec
subb
sub
push
lock
fisttps
xor
inc
xchg
cmpl
and
popf
les
into
addb
push
stc
push
xchg
pop
iret
jno
mov
outsb
stc
xchg
xor
mov
ficoml
dec
cmp
outsl
push
add
movsl
mov
mov
adc
dec
shrl
scas
cwtl
out
sbb
fists
and
inc
jmp
push
js
xchg
inc
pop
pop
add
movsb
push
addr16
sub
lock
inc
scas
dec
inc
mov
test
xchg
movsb
or
pop
adc
push
insb
dec
xchg
mov
lahf
jg
xchg
hlt
mov
xchg
xchg
in
mov
test
lcall
and
pop
fninit
xchg
pop
and
jo
mov
sub
ja
xchg
adc
xorb
cmp
or
out
jmp
pop
hlt
ss
push
clc
adcl
mov
xchg
jae
xchg
sub
fsts
push
call
pushf
clc
es
sbb
idivb
cmpsb
sbb
push
or
pop
cmc
bound
mov
pop
cmpsl
jb
cmpsl
hlt
stos
cmp
mov
pop
pop
aad
dec
pop
sahf
sbb
int3
pushl
imul
bound
arpl
push
mov
int
popa
repnz
or
push
aas
dec
decb
mov
mov
sub
dec
lods
decb
hlt
inc
int
cltd
inc
mov
int3
out
scas
insl
icebp
adc
push
ljmp
ds
mov
pop
mov
jmp
sti
sub
dec
or
adc
sbb
mov
push
aaa
imul
jb
push
xchg
lods
inc
mov
sti
fwait
push
cld
jnp
add
sbb
and
push
and
test
dec
or
or
cmp
cmp
jo
stos
icebp
arpl
clc
rclb
or
ss
push
rep
cmpl
xor
int
sti
sub
lret
mov
xchg
cmc
xchg
icebp
out
jmp
mov
das
in
pop
mov
lods
cmp
rcll
jl
pop
dec
sahf
enter
outsb
popf
data16
mov
push
lret
and
cmp
lea
push
clc
arpl
xor
sbb
dec
xchg
ja
adc
jno
inc
xor
pop
test
scas
test
mov
jge
adc
cwtl
movsb
cmp
inc
les
adc
orb
or
or
xorb
cmpsb
push
add
stc
sbb
push
or
mov
andl
jge
adc
cld
push
fists
cltd
sbb
or
sahf
rorb
cmp
sub
cmp
fnstsw
std
std
jo
into
or
dec
gs
sahf
xchg
sbb
aad
fwait
xor
std
cli
push
mov
pop
das
mov
jo
aaa
xor
pop
fcomi
lods
fldenv
pop
pop
add
add
jle
pop
xchg
lods
daa
fisttpll
cmc
mov
mov
or
in
sub
mov
fwait
mov
sbb
aam
lret
or
test
popf
mov
inc
mov
push
jge
cmpsl
mov
add
loopne
fadds
ss
jo
mov
sub
cmp
sub
mov
cmp
pushf
dec
add
xchg
jo
xchg
dec
loop
imul
movsl
adc
mov
xchg
sbb
daa
sahf
paddq
aas
sbb
sbb
and
xor
icebp
adc
inc
mov
cmp
adc
dec
xorl
sub
inc
mov
aaa
cltd
rorl
mov
stc
mov
ret
xchg
inc
dec
mov
popa
loopne
pop
roll
mov
push
ret
mov
push
jl
jns
or
std
cmc
scas
sub
adc
jmp
or
push
cmp
sub
pop
popf
rcrb
icebp
lds
or
jecxz
xlat
and
lcall
or
mov
out
inc
insb
sub
jb
add
mov
je
in
inc
sbb
push
sarb
fldl
aaa
jnp
cltd
and
repz
ror
push
data16
jo
movsl
sbb
gs
idivl
xlat
dec
or
fcompl
in
leave
adc
jo
pushf
add
adc
dec
mov
jge
movl
incb
lcall
mov
packuswb
push
push
int3
or
mov
mov
mov
mov
mov
and
add
xchg
sahf
push
xchg
dec
inc
adc
adcl
je
add
repnz
jbe
push
pop
arpl
lock
jne
lods
add
pop
iret
cmp
pushf
jbe
push
inc
mov
mov
cmp
popf
inc
dec
repnz
sub
repnz
bound
inc
sub
mov
mov
xor
push
ret
push
mov
dec
fldl
push
mov
shl
push
pop
out
shr
cmp
sub
push
hlt
in
jmp
push
mov
mov
mov
je
addr16
sub
ret
mov
xor
mov
xlat
xchg
insl
loopne
or
xchg
ret
std
add
push
subb
jno,pt
inc
inc
push
sub
lcall
int
lret
in
filds
fidivs
scas
pop
jbe
jge
sub
je
push
push
into
sbb
std
cmp
aas
out
xor
xchg
and
xchg
jne
loope
lods
jge
lea
jne
sahf
inc
loop
xor
popf
dec
jecxz
movsb
sbb
sti
push
fnstsw
pop
int
fwait
js
push
inc
push
sbb
out
fdivs
lahf
imull
repnz
add
xor
xchg
mov
or
or
adc
xor
lods
aas
pop
imul
add
mov
adc
jno
xchg
int3
xor
inc
out
mov
sahf
jno
xchg
iret
add
add
addr16
arpl
xchg
pop
mov
adc
mov
out
clc
pushf
xchg
inc
aas
lcall
push
push
sub
add
out
jnp
jl
mov
dec
into
push
xchg
fistps
sbb
sub
test
rcrl
inc
lods
add
rolb
lock
dec
cmp
loope
mov
cld
or
mov
lcall
je
aad
cli
rorb
insl
xchg
cmpl
push
in
xchg
lahf
js
mov
sbb
mov
rcrb
inc
notl
xchg
xchg
fmulp
int3
rclb
adc
outsb
mov
hlt
lcall
jb
stos
ror
dec
mulb
sarl
divl
je
sub
out
mov
push
pop
sbb
cmp
outsb
mov
imul
mov
retw
inc
call
sub
push
jmp
push
and
insb
jecxz
or
mov
push
jno
xchg
pop
nop
jp
add
shlb
add
sti
out
cwtl
or
mov
or
and
mov
rcl
xor
mov
in
out
xor
stc
xchg
fstpt
clc
pusha
jne
cld
jno
adc
hlt
stos
ffree
mov
inc
lcall
lahf
cltd
sub
mov
add
outsl
jne
shll
push
lods
pop
push
pop
lret
test
jl
or
bound
inc
adc
cmp
test
outsl
ret
mov
xchg
jne
inc
xchg
cwtl
sahf
xor
je
or
sbb
aad
ljmp
push
cmp
dec
iret
inc
adc
add
div
cmpsb
pop
mov
fwait
pop
fldenv
jg
das
pushf
cmpsb
sbb
xor
or
pop
lahf
ret
cwtl
push
cmp
out
popf
xor
movsb
hlt
sbb
fs
lods
xor
mov
push
push
jl
or
es
test
mov
xor
loopne
in
and
scas
out
jne
iret
jl
je
pop
xchg
push
loopne
mov
inc
enter
sub
out
and
adc
xchg
cmpsb
int3
jle
mov
cmp
xchg
arpl
dec
sahf
sub
cli
or
aas
or
movsl
ljmp
jmp
test
into
sub
scas
cltd
cmp
and
mov
mov
loope
mov
ljmp
mov
int3
dec
scas
mov
push
xor
and
xchg
inc
and
rcll
mov
pop
loopne
push
mov
adc
sub
fidivrl
in
push
push
shrb
dec
sub
bound
inc
popa
xor
in
int3
dec
out
fldenv
divb
repz
fnstsw
inc
iret
adc
or
mov
sbb
rclb
aam
jmp
and
mov
rcll
or
xor
lret
mov
mov
dec
mov
rcl
mov
ficomps
xor
fadd
cmpb
int
and
ljmp
lods
mov
fwait
in
gs
movsb
mov
mov
jg
int
test
and
and
push
inc
lret
dec
in
cmp
std
dec
mov
stos
sbb
movsl
sbb
mov
outsl
jb
or
inc
xchg
loop
sub
cmp
xchg
dec
dec
dec
ficoml
inc
push
inc
shrl
imul
pop
inc
outsl
jae
push
mov
jae
stos
adc
shl
push
into
std
xor
test
mov
adc
add
mov
jno
fnstcw
push
int
es
lahf
jl
lock
push
mov
movsb
sbb
or
mov
add
push
xchg
dec
jnp
mov
mov
pop
or
xchg
test
mov
aaa
mov
push
and
add
jne
lahf
lods
xor
loope
push
fimuls
xor
sub
xchg
in
sbb
cwtl
add
lea
sub
hlt
dec
iret
sub
jmp
xchg
mov
adc
fwait
iret
cld
outsb
fiaddl
das
mov
dec
icebp
repz
ret
out
xor
and
sbb
mov
cmp
pop
mov
xor
popa
jnp
jmp
std
sarb
jecxz
jecxz
mov
andl
add
xchg
sub
sub
pop
mov
and
jl
lock
sub
stc
pop
and
push
clc
dec
lods
leave
cmc
sbb
sahf
lds
jnp
mov
cmp
cmp
lods
sub
xchg
outsb
inc
fisubs
inc
jge
aas
mov
mov
mov
inc
jo
or
push
jo
insl
into
cmp
pushf
scas
or
mov
sub
std
xchg
xor
mov
ljmp
or
dec
ret
and
mov
xchg
lods
in
mov
dec
mov
jle
loopne
es
push
in
sub
clc
jnp
jl
add
cmpsb
pop
add
xchg
dec
faddp
cmc
sbb
jmp
mov
hlt
loopne
pop
imul
cmp
mov
sbb
pop
add
sub
xchg
andb
out
cmp
rol
ljmp
and
fldt
mov
mov
repz
and
dec
fisubrl
xchg
mov
pop
lahf
js
test
mov
and
jg
decl
inc
lahf
mov
stos
iret
push
xchg
ds
scas
test
xchg
adc
in
pop
sahf
test
sti
mov
inc
ficompl
cmp
adc
mov
or
in
or
mov
psadbw
adc
lods
sbb
push
aas
lock
js
inc
pop
ljmp
loope
lret
pop
add
data16
jb
in
jns
push
xor
sahf
and
pop
ficompl
stc
mov
cmp
jb
vmptrld
int
andb
sbb
xchg
arpl
aas
fdivr
cmp
clc
test
sub
pusha
push
jno
icebp
dec
pop
loopne
jmp
pop
xchg
dec
lcall
daa
fsubl
mov
pop
adc
fbld
pop
xor
ret
rcr
pop
clc
in
imul
in
add
jmp
jecxz
sbb
outsb
xchg
mov
mov
js
and
test
mov
jnp
or
xor
cmc
out
xor
stc
notl
sbb
ja
cmp
xor
insl
jns
mov
mov
cs
in
sbb
inc
shl
bound
push
sub
jp
ret
pop
jb
push
rcrl
addb
js
aad
pop
adcb
ss
rolb
dec
inc
cltd
pop
cmp
push
mov
pop
xor
push
lods
cmp
cmc
adc
std
inc
cmp
jbe
pop
sub
imul
pop
stos
and
inc
lods
push
jecxz
add
repz
mov
mov
mov
push
xor
loopne
fsubr
pop
mov
and
insb
cld
cmp
std
or
mov
out
popf
adc
ljmp
aaa
xchg
jmp
xor
jle
mov
dec
imul
aas
push
mov
outsb
inc
push
adc
cld
push
sbb
and
imul
out
xchg
arpl
in
and
in
test
adc
outsb
push
cmpsb
loope
and
xor
push
inc
adc
push
shlb
jecxz
xor
push
cltd
mov
inc
mov
adc
pop
sbb
adc
sahf
cmc
outsb
inc
adcb
outsb
movsb
mov
movsb
inc
sar
jno
arpl
fisttps
add
scas
mov
fwait
sbb
arpl
inc
sub
inc
mov
jbe
xchg
cmpl
xchg
fdecstp
add
dec
insl
int3
mov
shrl
mov
jp
sub
testb
cs
inc
shrl
js
int
push
inc
lods
std
adc
push
insb
inc
cmp
test
jns
mov
imul
ss
push
or
movsl
inc
jae
pop
xor
adc
cmp
jp
jne
mov
ja
and
cmovae
adc
sub
push
inc
jbe
jae
rclb
jmp
dec
sub
xchg
lods
out
add
jb
sub
xchg
cld
jne
test
jl
std
mov
in
cmc
jb
inc
xchg
test
inc
xlat
cli
ret
repz
xchg
xchg
and
pop
ds
dec
rcl
push
and
pop
fisttpll
push
subb
cltd
cmp
arpl
rcrl
mov
js
mov
cli
es
shrl
imul
dec
pop
incl
lcall
adc
ss
push
pop
push
add
xor
push
rcll
pop
mov
pop
scas
cmp
mov
jecxz
pop
mov
movsb
insb
scas
or
jns
push
jbe
gs
mov
fcoms
insb
xchg
cmp
add
pop
pop
cmpsl
add
sbb
mov
fmul
pop
pop
rclb
out
sbb
fnstcw
aas
fimull
out
cmp
xor
xorb
je
inc
rclb
xor
mov
nop
popf
cwtl
enter
sub
lret
mov
test
and
push
outsl
sub
jbe
loopne
dec
scas
stos
push
bound
inc
daa
push
ret
jae
jo
repnz
call
mov
lds
lret
xchg
inc
mov
gs
bound
scas
push
mov
mov
divb
mov
bound
dec
cwtl
pop
enter
cli
add
mov
adc
out
or
sub
adc
fimuls
movsb
mov
pop
mov
cmp
call
outsl
data16
sti
js
sub
adc
mov
das
adc
js
push
hlt
inc
int3
lods
lret
mov
and
mov
pop
jae
scas
mov
mov
mov
xchg
dec
sarb
rorb
lret
jo
or
dec
cld
push
jbe
mov
shr
or
aam
xchg
mov
fstps
xor
cmp
add
lret
stc
mov
dec
jno
add
inc
jp
repz
bound
popf
jne
cmp
rorb
clc
mov
sti
jge
push
daa
mov
pushf
sbb
xchg
andl
out
rcr
sbb
fstpl
dec
cmp
inc
or
ja
lods
movsl
cs
je
vmwrite
push
test
decb
sbb
xchg
rcrl
inc
inc
mov
mov
stos
cld
push
mov
inc
cmp
jo
mov
rolb
mov
dec
popl
mov
and
test
or
jo
lods
mov
or
pop
xchg
jnp
pop
inc
int3
rcrb
xchg
xchg
bound
xor
mov
movsb
adc
sub
sahf
or
dec
scas
mov
sub
loope
movsl
enter
mov
in
cli
xchg
jo
ljmp
mov
mov
lea
sub
inc
push
mov
outsb
pop
sbb
das
mov
adc
ljmp
mov
testl
scas
cmp
pop
dec
mov
in
and
pop
aad
or
lods
mov
inc
lds
repnz
loope
leave
xor
add
in
mov
or
xlat
and
mov
in
xchg
aas
adc
stos
jecxz
stc
cltd
int3
pop
sub
jno
lahf
inc
pop
jmp
lock
mov
push
mov
movsl
add
pop
inc
jle
push
movsb
lret
mov
xchg
arpl
jle
outsl
push
mov
scas
stc
shlb
notl
xchg
fcomp
cli
icebp
inc
jmp
xchg
aas
pop
push
mov
xor
mov
inc
pop
dec
inc
dec
cltd
stos
and
xchg
rcll
inc
mov
or
add
ljmp
push
mov
loope
out
inc
xchg
inc
or
aam
sbb
inc
jae
ja
fadd
and
jbe
jns
sbb
push
hlt
xor
inc
subb
outsb
or
sbb
or
adc
cs
fs
in
and
mov
lods
jp
iret
and
cmp
test
dec
mov
rclb
mov
fimuls
cmp
addr16
addr16
cmpsb
mov
dec
aam
pusha
frndint
xchg
jl
movsb
js
xchg
popa
and
inc
push
test
inc
sti
pop
hlt
inc
pop
fcos
mov
dec
sbb
inc
pop
popl
sbb
lock
mov
adc
and
out
push
aad
loopne
pop
aas
andl
mov
cld
bound
sub
pop
cmp
fistpl
rolb
icebp
pop
stos
mov
and
out
dec
dec
push
outsb
mov
add
sbb
sbb
dec
and
mov
nop
lret
inc
mov
adc
and
mov
lret
mov
int
pop
test
push
mov
divl
daa
mov
lcall
mov
dec
cmp
push
ds
sbb
jmp
jno
adc
jae
or
out
cmp
xchg
dec
pop
xchg
fstps
cmp
js
lods
inc
jp
adc
and
ret
or
or
push
jns
cmp
enter
jo
mov
jnp
cltd
sub
int
shlb
test
lea
mov
xchg
dec
add
pop
inc
lods
bound
enter
inc
jl
dec
pop
jbe
aaa
jns
mov
adc
les
fsubl
sbb
inc
cmp
xchg
adc
out
rcll
mov
push
xchg
push
mov
inc
pop
pushf
pcmpeqd
nop
les
aad
push
sbb
popf
jae
hlt
push
cwtl
ss
lahf
push
rcr
mov
pop
sub
dec
push
aas
ficomps
pop
mov
mov
cmp
xor
mov
scas
pop
enter
sbb
popf
cli
iret
lahf
cs
lahf
jno
int3
lahf
or
pop
jb
adc
dec
push
add
push
adc
mov
in
sbb
pop
int
xchg
or
push
cwtl
dec
insl
std
adc
and
inc
or
and
scas
mov
xchg
dec
xchg
ror
and
fisubl
pusha
or
xor
mov
push
add
pop
lods
jl
sbb
xchg
jns
outsl
mov
test
pop
rcrb
outsb
shl
sbb
push
sti
jne
out
mov
jnp
dec
test
insl
jl,pn
inc
push
pop
cmp
fisubs
mov
mov
or
cmpsl
les
aas
scas
mov
fsubr
sub
sub
mov
fimull
push
sbb
sub
pushf
pop
and
and
in
xor
xchg
and
gs
jge
xchg
in
pop
stos
xlat
xor
xchg
cwtl
pop
das
ret
mov
jo
jl
dec
adc
scas
jg
fisubl
push
movb
loopne
pop
test
mov
out
add
sub
push
mov
rcrl
jae
add
mov
mov
push
add
mov
xchg
repnz
movsb
bound
jge
dec
add
in
insb
arpl
out
push
lahf
and
imul
data16
adc
jbe
push
ljmp
das
scas
dec
or
xchg
pop
cld
jbe
sbb
outsl
adc
ret
movsl
adc
pop
lods
ljmp
pusha
mov
jl
push
dec
dec
mov
scas
dec
out
bound
cld
and
lea
push
jno
sbb
mov
adc
fs
dec
xor
inc
aam
mov
jp
rcrb
shll
mov
xor
andb
cli
sbb
or
repnz
pop
jae
sbb
fidivrs
js
push
push
or
xchg
push
sti
and
adc
add
cmp
das
js
fbld
iret
ja
xchg
test
cmp
scas
mov
addr16
xor
pop
and
pop
in
test
fabs
push
add
jnp
dec
aaa
cmpsl
jae
lods
daa
aad
js
jmp
mov
or
daa
syscall
cmpsb
popf
inc
and
or
jb
dec
sbb
push
repnz
nop
in
repnz
and
leave
call
das
push
stc
cmp
loope
mov
mov
jns
jae
je
fldenv
das
arpl
repnz
lret
mov
jge
xchg
sub
insl
push
pop
add
or
mov
xchg
pusha
dec
in
aaa
int3
scas
mov
mov
inc
shlb
sahf
pop
test
ljmp
pop
cmpl
out
nop
xchg
jl
push
cmpsb
xor
iret
inc
dec
and
mull
sub
fisubrl
in
mov
or
mov
mov
or
xor
dec
or
sbb
mov
mov
cmc
mov
push
jnp
aaa
aas
fidivrs
sbb
sub
imul
cmp
or
mov
inc
xchg
xchg
mov
out
int3
imul
cltd
push
jne
outsb
jg
lods
outsl
lods
mov
pop
insb
mov
inc
hlt
testb
cmp
cmpsb
frstor
or
or
jbe
in
iret
pop
inc
or
dec
scas
outsb
ljmp
add
mov
jg
xor
push
outsb
push
test
mov
daa
cmpsb
ret
mov
int
jnp
aaa
mov
roll
mov
mov
add
or
leave
stos
je
add
sub
bound
add
sub
cmp
mov
mov
insl
xor
enter
xor
lea
adc
jecxz
or
jne
pop
mov
sbb
xor
sub
mov
mov
cld
xor
xor
jl
dec
dec
and
add
cmp
aad
pop
sbb
in
mov
les
scas
aam
push
mov
sub
fwait
popa
jae
call
mov
orl
push
add
outsl
cmp
mov
xchg
pop
jge
mov
mov
push
pop
xor
daa
jbe
fdivrs
rorl
sti
fidivrl
rcrl
shrl
sti
ds
and
gs
popf
scas
adc
push
mov
insl
dec
bound
hlt
sub
fsubl
gs
sarb
das
dec
fdivrl
mov
inc
loop
sar
outsb
ss
push
ljmp
in
dec
ror
jo
and
jle
add
fdivs
dec
xchg
gs
addr16
lds
loopne
fwait
sub
and
adc
mov
pop
ret
sub
mov
sbb
outsb
rol
cltd
out
pop
xorb
ret
push
lea
xor
int
pop
pop
push
and
inc
xor
loopne
into
xor
shlb
push
or
ljmp
jbe
sti
xchg
cmpsb
push
ret
test
cli
insl
sbb
mov
jno
push
addr16
mov
or
sahf
ret
inc
push
lods
mov
dec
lea
fadds
rorb
sub
and
cmc
add
out
cmp
pop
popf
and
stc
fadds
aad
mov
pop
pop
xor
cmc
mov
dec
jne
movsl
pop
lret
dec
adc
movsl
std
xorl
popf
inc
and
push
bound
adc
insb
mov
mov
pop
pop
les
fidivs
mov
gs
mov
inc
ljmp
add
adc
sarb
jne
lods
out
push
subb
mov
call
imul
cmp
push
and
pusha
clc
cmp
sbb
add
call
inc
fnsave
cmpsb
int3
dec
xchg
jp
aad
int3
jne
movsl
loopne
mov
push
mov
stos
iret
dec
lcall
adc
pop
divl
shl
xchg
xlat
ret
pusha
les
lds
sub
xor
and
movsl
in
inc
mov
into
lds
push
mov
les
mov
xchg
into
out
or
xchg
dec
popf
out
sub
mov
or
adc
cli
inc
movsb
sbbb
xchg
out
push
sub
sbb
mov
cmpsb
in
push
test
sub
cli
inc
and
bound
rcr
push
xor
repnz
mul
xor
and
arpl
inc
movsl
xlat
mov
sahf
fldcw
mov
jg
cmp
lods
push
or
or
inc
mov
sub
push
mov
inc
stos
xor
or
nop
cmp
dec
stos
pop
push
mov
or
jns
mov
push
imul
jg
mov
cld
jmp
rorb
lods
mov
xchg
push
test
lahf
inc
mov
dec
mov
jmp
xchg
fucomp
test
cmpl
pop
rcrl
sbb
and
push
lock
pop
adc
inc
loopne
mov
xchg
cltd
adc
das
push
sbb
dec
nop
mov
adc
sbbl
test
dec
mov
xorb
dec
jne
jmp
in
imul
sbb
sbb
ds
sub
stc
jns
div
mov
ret
or
inc
mov
add
dec
mov
sub
and
cs
aas
inc
test
jne
shrb
jge
dec
sahf
test
xor
push
mov
adc
push
pop
adc
jo
lea
imulb
cmp
loopne
aad
ret
mov
leave
xchg
data16
sub
xor
dec
add
mov
mov
loopnew
xchg
jg
inc
pop
push
or
mov
shlb
rcl
cld
and
and
into
addb
mov
adc
pop
add
in
aaa
sbb
lret
loope
fistps
bnd
xchg
paddq
jge
lods
gs
nop
test
jmp
cmp
inc
and
loope
rorl
jl
or
xor
sbb
stc
ret
test
add
adc
call
gs
shr
fs
cli
popf
pop
xor
jno
cmpsl
in
je
sub
jg
lods
aaa
mov
test
xchg
jl
in
inc
jmp
jecxz
cs
ret
push
popa
mov
lea
mov
lcall
int3
pop
pop
arpl
or
aaa
mov
dec
cmp
leave
pop
mov
mov
sub
push
jae
lahf
in
mov
mov
adc
int
pop
sbb
and
mov
repnz
push
pop
es
out
jl
jnp
mov
pop
addr16
jmp
xchg
push
sub
dec
fcomps
ja
sti
add
popa
or
mov
jb
lcall
dec
fcoms
or
pop
and
insl
out
add
or
dec
xchg
data16
mov
cmp
mov
out
or
ja
lret
jmp
mov
mov
loop
ficoml
xchg
mov
scas
mov
push
les
pop
jnp
cmpb
mov
xchg
sysexit
hlt
test
stc
lret
sti
push
rcrb
loop
es
push
repz
lret
in
and
daa
rolb
push
xor
pop
cmp
ljmp
clc
imul
arpl
mov
das
xchg
pop
sahf
iret
and
fisubrs
xchg
sub
adc
test
fnstenv
js
lods
and
mov
shrl
jmp
sbb
cmp
test
pop
fadds
loopne
push
addr16
in
xchg
data16
aad
insb
adc
inc
cmp
pop
pushf
lods
dec
mov
xlat
cmc
nop
push
mov
imul
sub
sbb
mov
push
faddl
sub
dec
xor
inc
mov
aad
jle
adc
clc
cli
xor
aas
inc
or
xchg
lret
out
push
mov
cli
xchg
out
fistl
inc
mov
aas
lret
adc
jg
into
jne
cwtl
jnp
add
das
mov
test
adc
mov
adc
out
jo
fwait
jle
push
in
cmp
daa
and
jle
ds
jno
loope
push
popf
lock
cmpsl
mov
mov
shl
or
lcall
stos
fdivr
stos
mov
sub
stos
pop
ret
stc
iret
divb
pop
xchg
mov
dec
sti
adc
xchg
ret
lds
and
pop
mov
nop
jbe
sbb
enter
xchg
xor
jl
push
jbe
adc
and
sub
sar
ret
mov
mov
cmp
xor
outsb
or
mov
jb
loopne
cmp
out
mov
mov
push
jle
pop
fiadds
mov
les
movl
push
and
jg
les
push
aas
lds
lods
pop
sub
sbb
push
pop
and
call
or
fisubl
dec
adc
jl
sbb
fistpl
inc
std
cld
ljmp
les
ret
mov
cmc
sub
lret
pusha
add
xchg
inc
test
xchg
cld
pop
popf
and
ss
movsl
dec
adc
mov
cs
xorl
into
dec
mov
sub
rcr
mov
mov
js
add
ss
xchg
sub
cs
jne
jge
pop
outsb
lods
xchg
loop
jb
dec
xor
jl
sbb
rcll
pop
rcll
and
mov
test
bound
mov
xor
mov
push
popf
xor
cmp
pop
xchg
xchg
sub
mov
adc
aaa
aas
test
in
jb
cmp
loopne
ja
test
xor
mov
jge
lds
std
sbb
mov
dec
dec
movsb
xchg
aad
pop
stos
ja
jg
mov
in
mov
cli
addr16
lds
push
and
test
cmp
std
ss
popa
fldenv
mov
pop
cmpb
fldcw
pop
mov
sub
inc
or
mov
adc
inc
pushf
jns
xchg
lock
fstl
xchg
push
dec
lret
or
and
xchg
mov
fldt
aaa
imul
insb
cmp
sub
imul
jg
cld
aas
out
bound
xor
adc
pop
in
lods
and
fisttps
mov
cs
sub
jnp
adc
mov
adc
xor
scas
out
xchg
call
push
jecxz
jae
add
maskmovq
notl
adc
pushf
je
and
push
cld
adc
xor
mov
shl
mov
clc
jns
lea
daa
sbb
rorl
jnp
rorl
lods
pop
mov
add
sub
inc
cmp
js
fstpt
jl
mov
ret
stc
fadds
adc
imul
sub
imul
and
adc
mov
clc
mov
and
push
push
xchg
xchg
xchg
arpl
outsb
rclb
mov
insl
lock
jmp
cmpsb
dec
mov
xchg
sub
jle
sub
fldenv
sbb
jns
mov
je
and
loop
push
lock
pushf
ds
aad
mov
add
and
rclb
sarl
lods
fsubp
dec
std
shll
lea
roll
sbb
push
call
data16
in
std
pop
and
shlb
fwait
mov
or
push
add
sbb
add
mov
sub
dec
ja
xor
adc
sbb
into
outsb
lods
xchg
lea
fmuls
shl
pop
test
jmp
testl
mov
aad
mov
js
cmp
daa
cs
mov
inc
enter
aad
add
or
shlb
mov
inc
ret
cld
lcall
cmp
mov
fnstsw
lock
loope
xor
insl
mov
loope
addr16
xchg
testb
or
add
inc
fadds
jnp
push
mov
test
adc
arpl
je
xor
push
cmpb
jb
mov
cmp
sbb
and
xor
ret
adc
sub
mov
xor
xchg
jb
arpl
or
jp
in
mov
das
out
mov
fsubl
loop
daa
loope
scas
test
rorb
adc
in
lods
and
and
aam
push
loopne
dec
aam
jns
add
popa
add
fidivs
sub
push
dec
cmp
loope
mov
cli
imul
dec
cmp
push
faddp
push
mov
inc
mov
ret
sub
and
out
insb
loop
mov
mov
mov
in
subb
and
sbb
call
inc
rcl
popf
lods
fisttpll
std
in
jnp
inc
push
mov
lret
popa
and
push
loop
ret
out
loop
push
bswap
mov
test
or
dec
or
dec
cmp
outsb
mov
lret
cli
push
xchg
scas
fsubl
into
add
xchg
jno
lcall
mov
push
ja
pop
or
shlb
rcl
pop
sbb
push
sub
leave
or
inc
loopne
or
or
jb
xor
or
loop
fwait
cld
pop
jb
pop
imull
inc
push
or
dec
lods
sbb
push
sbb
pop
add
mov
jno
sti
scas
imul
movsl
fcompl
outsl
rcl
aam
imul
sbb
iret
cld
rcll
jb
pushf
mov
int
xchg
adcb
dec
sub
daa
pop
xchg
add
mov
rorb
scas
xor
cmp
push
jl
inc
das
mov
data16
lods
and
xchg
call
xor
pop
xor
mov
clc
outsl
mov
movsb
cli
fwait
jbe
xchg
mov
cmp
lods
or
inc
popa
fidivrl
dec
push
dec
hlt
mov
adc
adc
mov
rorl
aad
jne
outsb
icebp
sub
ret
cmp
inc
mov
jns
add
scas
sahf
sub
fistps
or
xor
inc
xchg
je
out
push
negb
sbb
fldcw
cmp
loopne
rcr
dec
mov
xchg
mov
lods
and
test
jns
jg
jge
fsubs
stc
fnsave
js
les
daa
mov
pop
lahf
fiaddl
cmp
repz
ret
clc
int
sub
insb
push
and
int
mov
jp
mov
lidtl
push
or
test
push
out
jp
mov
adc
inc
cmp
aad
gs
xchg
mov
push
out
stos
xchg
inc
stos
fbstp
mov
xchg
push
sbb
pop
pop
adc
lds
mov
push
scas
test
mov
pusha
sbb
xchg
ret
adc
mov
movsb
fdivl
cld
je
ret
xchg
sbb
arpl
sbb
lds
repz
xchg
test
push
or
xchg
push
mov
push
jp
mov
hlt
rcll
and
cmp
push
sar
dec
or
out
mov
pop
jge
pop
std
dec
jns
push
and
xchg
je
cli
jmp
dec
pop
movsl
inc
shrb
repz
pop
test
or
sub
fldl
incb
arpl
adc
aad
pop
xor
in
xor
repnz
das
jmp
fidivrs
test
add
lret
sbb
or
jl
add
pusha
subb
inc
push
pop
gs
dec
pop
mov
ja,pn
inc
adc
adc
addb
or
add
sbb
divb
mov
xchg
sbb
and
mov
pop
or
lock
xchg
lds
imul
es
add
shlb
push
adc
cwtl
sahf
mov
incb
xor
sahf
add
ret
ficoms
insb
and
imul
test
mov
cmp
stc
xor
ret
pop
repz
xchg
popa
mov
sub
mov
loopne
popf
into
movsl
out
adc
xchg
pop
in
sbb
inc
jp
xchg
sub
scas
aam
rorl
pop
mov
bound
inc
stos
mov
mov
mov
stos
mov
std
addr16
mov
cmp
xchg
ret
or
jbe
ljmp
dec
jp
inc
mov
sub
xor
xchg
addr16
lret
mov
pop
scas
or
cmp
ss
pop
and
xor
rcrb
and
ret
fs
in
fldl
in
xchg
test
jo
mov
ljmp
enter
xlat
cli
mov
pop
and
jg
xchg
dec
out
xchg
mov
jp
mov
in
mov
fnstenv
bound
cmc
in
pushf
pop
rcll
or
mov
push
movsl
imul
out
scas
xorb
jp
inc
jne
pushf
push
mov
inc
rcll
mov
xchg
insl
dec
or
xchg
paddw
out
push
dec
dec
push
xor
scas
cvtps2pd
stos
es
pop
notb
insl
mov
xchg
clc
jmp
mov
cli
or
push
shl
push
insb
xor
lock
sar
jno
sbb
dec
into
add
bound
mov
sbb
mov
dec
in
shlb
jne
shlb
mov
stos
clc
rcr
fxch
lret
dec
jne
pop
push
add
idivb
add
sub
pop
scas
pop
or
cwtl
pop
in
out
aam
xor
jmp
movsl
jb
pop
int
rclb
or
xor
idivl
insb
mov
push
mov
xor
pop
into
jle
insl
aam
nop
scas
ja
roll
jl
hlt
mov
popa
lret
inc
mov
andb
inc
call
xor
mov
pop
adc
loope
mov
add
rcll
popa
imul
subps
das
sbb
gs
dec
in
ret
xchg
sub
jecxz
je
andb
fmulp
push
xchg
push
leave
lea
pop
and
in
cmpsb
xchg
push
pop
adc
popa
push
clc
sub
pop
mov
and
push
sar
mov
dec
cmpsb
xchg
jmp
gs
sub
jae
mov
addr16
loope
out
jne
out
shll
or
jle
ss
dec
imul
pop
pop
cld
outsb
shl
cmp
dec
fistl
and
xlat
imul
pop
pusha
jbe
insl
nop
sub
lds
fisttpl
outsb
es
into
sbb
xor
xchg
mov
inc
adc
std
dec
or
icebp
lahf
shrb
adc
test
int3
inc
mov
mov
push
fdivp
xor
loope
jp
jo
pop
cli
jmp
jge
shrb
xchg
in
add
push
lods
testb
mov
outsb
adc
fbstp
imul
ja
aas
xchg
flds
sbb
cmp
outsb
pop
dec
push
nop
inc
imul
subl
inc
daa
and
cmp
xchg
into
les
pop
mov
jb
add
mov
test
mov
inc
fisubrs
dec
inc
push
sti
add
adc
mov
fidivs
push
repnz
and
cmp
pop
mov
repz
decl
mov
loop
xchg
xchg
sub
push
aaa
stos
lcall
add
or
lods
sub
mov
and
jl
cli
sub
mov
pop
sbb
pop
cwtl
test
xchg
mov
jnp
in
mov
jmp
pop
stc
mov
lcall
or
pop
mov
mov
and
loop
sub
int3
sti
pushf
outsl
cld
inc
invd
push
fmull
mov
or
lods
inc
lds
movlps
insb
jle
fdivs
sbb
cmpsb
arpl
sub
ret
orb
in
repnz
mov
daa
adc
adc
ss
lock
lds
xor
lods
mov
fwait
xchg
popl
cmpsb
pushf
adc
pop
sbb
lcall
pop
loope
and
sbb
fistpl
sub
dec
add
jmp
das
pop
jg
stc
or
mov
mov
nop
andl
jnp
mov
pop
rcll
mov
jmp
pusha
scas
js
fildll
dec
sub
imul
test
push
aam
lret
dec
sub
cmp
sub
arpl
leave
add
mov
pop
sbb
fwait
xchg
sbb
pusha
lods
mov
fwait
adc
out
insl
mov
mov
lret
emms
xchg
inc
ficompl
push
xchg
jo
shl
push
mov
xchg
je
subb
je
jbe
jo
repz
inc
push
mov
mov
call
xchg
and
mov
pop
stos
sarb
js
add
inc
ret
cmpsl
lea
sahf
mov
mov
stc
mov
cwtl
mov
push
aam
xorl
pop
mov
out
or
xchg
cltd
lcall
lahf
cltd
movsb
mov
sahf
inc
lret
push
pop
shr
jae
addb
jge
shll
ds
in
shl
imul
and
imull
in
cmc
fcomi
js
pop
mov
push
in
ljmp
xor
sub
mov
cli
inc
fmuls
stc
adc
gs
out
sub
jle
enter
movsb
aam
ljmp
das
incl
in
lcall
ret
sahf
mov
test
jl
lods
andb
mov
add
insb
jecxz
das
cs
out
inc
imul
std
loope
aam
out
and
cmove
loop
jmp
in
aaa
pop
mov
lahf
mov
std
pop
clc
sbb
push
xchg
fldcw
push
cmp
loop
dec
clc
mov
dec
jno
mov
es
into
sub
pop
xchg
push
pop
cmp
mov
icebp
mov
sbb
pusha
stos
pusha
cmp
fsubr
inc
into
push
rorb
sbb
fnstsw
sub
outsl
adc
mov
scas
lret
pop
push
sbb
cwtl
jns
call
push
xchg
daa
test
dec
dec
push
mov
pusha
mov
pop
cmp
int
pusha
dec
fstp
fsubrs
inc
jmp
mov
jbe
mov
push
or
or
rorb
push
adc
jno
iret
push
movsl
or
cltd
mov
bound
xor
push
js
pushf
add
aad
test
inc
adc
cmp
stos
out
clc
push
push
scas
pop
imul
or
sarl
jmp
pop
testb
cmp
test
pop
fxam
not
in
movsb
xchg
sbb
lahf
sahf
mov
pusha
xchg
xchg
or
inc
daa
sub
and
repnz
mov
stc
dec
mov
cmp
js
aam
loopne
testl
dec
adc
idivb
jne
mov
jne
icebp
mov
xchg
data16
cmc
sbb
test
fmuls
inc
xor
lcall
jmp
xchg
ja
pop
fucom
in
mull
repnz
mov
fimull
outsl
xor
scas
js
xchg
popa
div
pop
pop
enter
ja
sub
pop
mov
test
imul
and
inc
xchg
dec
xor
sbb
xchg
leave
and
sbb
aad
mov
sub
jecxz
popa
add
data16
mov
push
sti
js
data16
mov
gs
or
dec
aas
sub
inc
xor
sub
or
mov
pop
popa
push
sbb
je
adc
movsb
popa
cmpl
loope
fistpll
and
fmuls
push
inc
sub
insl
daa
call
sub
mov
mov
jne
jp
loopne
lea
in
sbb
test
popf
or
jge
push
xchg
push
xchg
arpl
insb
adc
or
lds
test
ficompl
into
cld
xor
or
mov
mov
test
fldt
lret
lret
push
inc
mov
ss
inc
dec
stos
add
pop
xorb
and
gs
test
rcl
cmp
mov
mov
es
out
push
sahf
push
pop
sub
scas
out
xchg
xor
inc
dec
outsl
sti
xorl
xchg
icebp
cltd
mov
subl
jo
lret
jmp
dec
out
lds
push
into
jge
pusha
in
test
adc
out
arpl
fsubr
out
jnp
xor
cmp
add
cltd
xorl
das
insb
outsl
add
js
nop
clc
sahf
mov
jp
adc
shrl
leave
test
in
sub
out
cltd
adc
mov
test
xor
into
movsb
add
lcall
push
push
adc
sbb
scas
jbe
sub
adc
jge
and
xchg
movsb
cmc
or
out
fidivrs
xchg
das
xchg
cmp
dec
sub
adc
ds
out
sub
cmc
sbb
enter
push
test
adc
mov
rcl
popf
and
adc
add
int3
int3
pop
andnps
cmp
aas
cwtl
outsb
dec
dec
mov
insb
push
xor
dec
lret
rcll
mov
pop
cwtl
jmp
lock
mov
push
out
pop
push
daa
dec
cmpsb
ja
mov
in
icebp
das
popa
jmp
cmp
mov
dec
orl
pop
dec
fs
cmp
clc
daa
add
cs
push
xchg
sbbb
jo
pop
out
mov
pop
test
sbb
dec
repz
cltd
lds
mov
jo
jae
fidivrs
mov
xchg
push
or
aam
sbbl
push
daa
add
in
dec
mov
testb
sbb
sbb
cmc
repz
popa
pop
sbb
xchg
cli
push
sti
shll
xorl
jp
repz
lds
loope
fsubrp
bswap
sbb
and
sbb
faddl
mov
test
jo
inc
test
jne
in
aaa
test
mov
sub
pop
in
and
stc
orl
mov
leave
and
stos
sub
cld
cmp
adc
loopne
push
adc
mov
jg
aad
mov
jae
mov
mov
push
addr16
insl
stc
ret
and
push
es
out
xor
xchg
leave
dec
dec
dec
lcall
dec
repz
bound
lcall
cmp
fildl
fimull
iret
ja
mov
out
in
inc
xchg
outsl
dec
add
jp
dec
inc
into
xchg
xor
fisubl
lods
shl
dec
xchg
aas
outsb
cmc
rol
push
bound
jmp
adc
icebp
xor
imul
es
mov
sbb
int3
sub
enter
adc
and
incb
gs
sbb
xchg
fidivs
dec
xor
xor
sahf
sub
adc
jns
add
sahf
xor
adc
cld
fdivrs
dec
cmc
dec
or
fmuls
pop
adc
jne
fldl
cmc
cmp
and
movsl
movsl
repnz
enter
xchg
push
sti
ret
lods
scas
cmp
xlat
std
pop
mov
fs
ret
lahf
icebp
mov
sbb
arpl
adc
mov
sub
sbb
inc
xchg
and
jns
popa
jnp
and
cmp
push
and
lods
sbb
cwtl
ret
stos
cmp
daa
clc
lods
repz
mov
add
orb
movsl
mov
jg
jl
pop
int3
jge
ret
mov
call
inc
sub
repz
adc
mov
jl
and
das
pop
mov
nop
add
push
nop
ror
test
and
int
add
pop
push
dec
cmp
pop
push
lock
addl
pop
imul
sbb
cmpsl
inc
hlt
pop
dec
cld
jg
mov
ljmp
push
fisubs
loop
lret
cmp
mov
cmp
arpl
fcoms
and
aaa
mov
mov
scas
mov
gs
into
in
cmp
inc
inc
adc
cltd
or
add
sahf
cli
push
jnp
cmp
orl
mov
inc
loopne
filds
dec
mov
in
inc
and
sub
pop
dec
pop
out
scas
add
rcr
incl
aad
pop
pop
in
hlt
js
push
inc
insl
test
jmp
adc
shr
pop
adc
je
rolb
sbb
push
xor
mov
pop
dec
data16
stos
fs
sbb
or
xchg
sti
pop
inc
scas
cs
hlt
hlt
mull
cmpsb
das
push
push
mov
mov
mov
mov
iret
andl
stos
jae
mov
adc
add
xor
or
pusha
mov
out
push
sub
xor
xor
imul
scas
fdivp
popa
mov
popf
sub
std
jb
jnp
sahf
mov
jbe
xchg
mov
lock
rorb
sahf
xchg
adc
xchg
adcl
inc
rorl
sub
xchg
cmc
mov
lea
out
inc
mov
in
dec
xor
push
inc
sti
cmp
addr16
sbb
inc
ja
fnstcw
and
sbb
clc
and
fucomi
clc
ret
xor
je
pop
sbb
xchg
mov
fmul
mov
ljmp
push
mov
lock
pop
cmp
iret
jnp
mov
dec
dec
mov
rcrb
mov
add
push
jecxz
mov
push
pushf
lods
into
dec
dec
cwtl
sub
xchg
dec
pusha
jp
pusha
lret
and
jmp
iret
add
fidivl
inc
push
xlat
pop
sbb
pop
ret
mov
or
movsl
xchg
hlt
fimull
inc
cmpl
cli
lret
int
pusha
jmp
pop
pop
sub
pop
push
sub
scas
ss
push
jmp
ret
ficompl
imul
popa
lcall
movsl
test
cli
fcompl
outsl
mov
inc
mov
add
mov
fsubrs
xchg
das
pop
in
add
cwtl
xlat
adc
add
dec
mov
sti
mov
es
popa
pop
outsl
mov
leave
sbb
sti
or
aam
fs
jmp
hlt
inc
sbb
jl
or
bound
jmp
pop
lods
fsubrl
mov
inc
or
ficompl
cmpsl
jge
jno
push
jbe
mov
xchg
sbb
add
xor
ds
shr
test
mov
and
xchg
inc
jbe
out
loop
les
xchg
sti
mov
bnd
pop
sbb
cld
mov
dec
xchg
sbb
ja
shlb
lcall
mov
js,pt
or
mov
lock
psubb
test
sub
push
fmul
adc
testl
inc
in
and
sub
jg
adc
shr
std
clc
mov
int3
sbbl
sub
and
notb
fists
outsl
push
lods
inc
stos
lock
push
sti
lods
or
imul
into
sub
add
mov
ret
and
sub
sbbb
shlb
iret
aam
out
orl
inc
sbb
adc
decl
in
insb
xor
sub
xchg
mov
push
pop
iret
rorl
in
cmpsb
mov
in
test
lods
and
lret
lock
scas
mov
push
add
das
out
les
stos
fidivrs
add
jae
and
dec
sub
les
add
leave
loope
iret
sub
mov
mov
lret
push
outsb
jb
scas
scas
and
jp
push
ds
lahf
push
test
notl
pop
insl
stos
sarl
push
int
inc
sub
xchg
mov
call
inc
jno
nop
pop
pop
push
cmp
pop
movzwl
fnstsw
scas
bound
test
inc
pop
xor
jle
out
jns
cwtl
jnp
out
jne
or
pusha
imul
outsl
sub
clc
int
jns
mov
jge
push
cs
mov
test
insl
xchg
cltd
addr16
aad
pop
lock
lea
dec
lock
push
jae
or
lock
js
repnz
in
and
sbb
adc
aaa
aas
fistpl
lahf
clc
test
sbb
cmp
fistpl
popa
fildl
mov
xchg
cwtl
add
cmp
jnp
or
cli
fcmovb
testl
cli
rcrb
js
sub
sbb
pop
in
dec
int3
aam
fs
cwtl
adc
ja
fnstsw
std
ja
in
and
outsb
push
outsl
push
push
push
push
sub
in
and
xchg
or
push
inc
dec
scas
mov
popa
dec
icebp
push
or
and
jb,pt
lods
dec
imul
push
sub
hlt
mov
lret
mov
mov
loope
out
pusha
lea
stos
cld
cmp
add
or
push
sbb
movlps
sub
fcmovbe
mov
dec
mulb
shll
dec
sbb
mov
fwait
mov
bound
stos
sub
adc
inc
jmp
mov
inc
test
mov
add
lods
xor
mov
cmp
iret
dec
ror
mov
ss
lahf
pushf
stos
dec
mov
push
jmp
ljmp
or
ret
test
jmp
xor
out
sbb
outsb
sbb
lea
mov
jp
sbb
test
rol
in
lcall
lahf
rclb
inc
sbb
es
dec
sti
adc
sbb
sub
and
cmp
aaa
lcall
fimull
cld
jg
in
int
xchg
xchg
lock
sbb
xchg
and
add
dec
sbb
scas
cmp
and
or
cld
pop
xchg
lret
addb
adc
adc
idivb
and
gs
test
xchg
jnp
xchg
or
mov
rolb
in
cmp
les
sub
ja
adc
icebp
loopne
scas
push
xor
lret
sbb
xor
pop
jecxz
movsl
fstp
repnz
mov
jmp
cmp
jae
ret
sbb
pop
jno
dec
cmp
arpl
or
shrb
lret
addb
add
ret
scas
mov
inc
push
sub
outsl
js
mov
mov
inc
pop
adc
lods
lock
test
push
add
jnp
cmp
ret
fimull
or
xor
mov
mov
int3
adc
add
call
pop
jnp
and
xchg
in
insl
cltd
push
lcall
jnp
nop
xor
mov
dec
clc
int3
and
mov
cmovns
cmpsl
iret
movsl
xchg
cs
add
lods
inc
arpl
fldcw
inc
lds
pop
mov
pop
fistpl
lret
mov
hlt
push
bound
jae
mov
enter
aad
xchg
loopne
inc
loop
outsb
xchg
pop
hlt
es
inc
loop
rol
mov
daa
cmpsl
mov
das
lcall
pop
mov
jbe
std
pusha
jns
pop
shll
adc
sub
add
xchg
jmp
in
shl
inc
movsb
sahf
cmpsb
xor
ficoms
xorl
mov
mov
out
outsb
and
mov
cld
out
gs
push
ja,pt
inc
out
ds
outsb
pop
mov
jo
inc
mov
xor
mov
add
xorl
faddl
movb
cs
fmul
mov
sub
lock
mov
xchg
jnp,pn
push
inc
les
xor
pop
enter
fdivs
fwait
negb
pop
es
jns
fs
fnstenv
test
jne
enter
leave
ja
mov
dec
cli
push
sahf
inc
int
push
xchg
cmp
fs
mul
outsb
push
and
mov
jg
clc
push
push
adc
daa
xor
add
lret
push
std
cli
pop
das
ficomps
add
test
aam
sbb
dec
mov
cmp
int
pop
sub
in
movsb
sarl
in
pop
dec
fisubs
sbb
pop
shrb
sub
lret
dec
push
dec
sbb
shl
ret
mov
cmp
dec
sbb
loope
aas
jg
out
mov
test
lea
push
aad
loopne
cmp
push
pop
sbb
sbb
sti
mov
jmp
add
sub
dec
mov
mov
lahf
pusha
cmp
xchg
test
mov
adc
cmp
test
jae
sub
loop
and
int3
add
jl
movsl
push
orb
enter
cmp
cmp
mov
scas
pop
pop
outsb
daa
cmp
in
xchg
and
push
mov
sti
aas
es
das
rclb
fcoms
andb
iret
dec
cld
nop
lods
ja
roll
fcomip
aaa
imul
and
repnz
sub
out
cmp
mov
gs
xor
or
push
dec
or
mov
add
cmp
push
int3
rcrb
fstps
bound
dec
fcomps
push
xchg
push
aas
jo
adc
aad
scas
dec
mov
mov
insb
sbbl
mov
mov
hlt
xlat
shr
cltd
push
xor
cmpsl
test
xchg
jp
sti
sub
sbb
xorb
or
or
addr16
mov
mov
ss
aas
stos
mov
inc
mov
nop
clc
inc
adc
pop
add
lea
daa
mov
lods
out
xchg
mov
repnz
hlt
jno
dec
mov
push
inc
cltd
aaa
fidivl
xor
jno
sahf
push
and
fidivl
or
push
insb
mov
ret
sub
cltd
xor
fmul
push
cmp
ljmp
sarl
divb
cmpl
repnz
mov
lret
out
sar
imul
insb
int
dec
outsl
pop
adc
adc
adc
mov
rorl
sbb
add
ljmp
shrl
xchg
add
push
das
int3
mov
leave
pusha
loop
xor
cmp
icebp
add
pop
stc
dec
movsb
aad
mov
sbb
push
in
xor
pop
imul
testb
mov
sbb
mov
jnp
inc
xor
cmp
fisttps
fimull
stos
insb
push
sbb
or
cmp
aaa
imul
sbb
cld
das
mov
mov
pop
add
test
adc
xor
aad
mov
push
orl
sti
pusha
ja
push
ja
popa
adc
jne
aam
lcall
mov
addb
mov
jle
imul
test
push
cmp
fs
xchg
test
sub
cmp
mov
aam
lret
mov
xlat
pop
imul
in
inc
mov
leave
jo
sub
push
fstl
fistps
dec
cltd
int
push
add
mov
add
lds
add
and
or
lret
loope
sahf
adc
inc
test
xor
sub
adc
adc
cmp
dec
push
xor
ljmp
lock
lret
pop
insb
das
pop
jmp
fildll
xchg
js
das
mov
imul
and
imull
adc
fldl
popf
push
inc
int3
std
imul
sub
mov
jns
ds
mov
call
hlt
pop
into
sbb
negb
test
test
out
stos
pop
sbb
ficompl
pop
pop
xlat
call
sbb
inc
jecxz
fst
push
outsb
loopne
mov
out
ljmp
and
add
push
and
mov
inc
ljmp
subl
insl
push
mov
xor
fs
mov
out
in
inc
xchg
or
inc
mov
dec
add
icebp
sub
in
rclb
pop
xchg
sahf
dec
out
jg
mov
ss
fstpl
adc
pop
jae
test
jmp
test
orb
fsub
adc
xchg
insb
iret
cmp
lret
daa
cmc
fildl
cwtl
sti
adc
push
imul
push
movsl
cld
pop
ljmp
inc
arpl
repz
repz
mov
push
cmp
loop
hlt
into
ja
call
and
test
out
cwtl
loop
and
rcrb
mov
add
bound
xchg
dec
xchg
jns
fs
dec
cmpsl
pop
es
add
inc
rcrb
push
jmp
inc
xchg
test
cli
movsb
enter
ss
sahf
hlt
shlb
lahf
cmpsl
popl
pop
imul
sbb
icebp
or
roll
add
cltd
or
pop
in
push
call
adc
or
pop
push
ficomps
xchg
sbb
sub
shlb
pop
insl
push
adc
jns
and
or
daa
leave
subb
out
sahf
aaa
movsl
inc
mov
in
shlb
repnz
mov
inc
cmp
call
dec
ljmp
adc
inc
dec
lret
sub
cmp
outsl
push
loope
dec
orb
mov
or
push
mov
scas
imul
and
lds
cltd
into
jg
or
xchg
inc
cmpsl
push
jb
in
sub
mov
sbb
int3
push
sbb
lahf
jmp
inc
jnp
enter
inc
leave
add
call
dec
adc
test
cli
mov
fmull
fdivl
adc
ret
sbb
sti
in
stc
adc
sub
flds
test
out
push
pop
aaa
stos
push
inc
jmp
cmp
inc
xchg
mov
ljmp
dec
mov
or
jo
jae
cmp
cmp
ficoml
ss
push
push
sbb
stos
dec
cs
jmp
cmp
mov
imul
pop
cli
inc
outsb
xchg
mov
xlat
xor
shl
push
mov
fdivrl
ret
adc
cwtl
and
push
or
jl
dec
pop
imul
mov
sahf
add
outsl
mov
fdivrl
addl
push
stos
lret
ret
push
xor
fwait
pop
inc
addr16
add
in
adc
add
addr16
std
inc
adc
testb
jno
inc
sub
xlat
je
cwtl
fistps
dec
mov
xchg
int3
int
outsl
adc
lret
mov
mov
sbb
xor
in
je
ljmp
jg
jb
fadd
test
push
push
lds
iret
sarl
nopl
std
add
insl
fidivs
mov
pop
push
test
dec
sbb
addr16
insb
cmpsb
push
addl
sub
pop
jbe
ds
imul
pop
aaa
mov
inc
cmp
scas
mov
or
in
sti
data16
inc
iret
cmp
add
lcall
shr
xchg
inc
sahf
pop
mov
stc
cmpl
jne
push
stos
mov
jo
jle
adc
aaa
pop
in
cmp
add
insb
inc
mov
adc
iret
inc
icebp
add
pusha
sbb
inc
mov
sub
inc
jne
xchg
aad
add
test
jg
xchg
and
mov
add
and
notb
out
xor
adc
cmp
mov
les
cmp
adc
test
sub
xchg
jmp
mov
aad
jne
jae
xlat
add
jl
xchg
or
mov
je
mov
mov
pop
xchg
mov
negb
stos
add
loopne
daa
lods
adc
js
jne
aam
sub
mov
test
mov
jae
popa
jae
rcll
mov
push
fwait
cmp
jmp
stos
repnz
js
jns
int
push
call
daa
jbe
add
pop
xor
or
jne
cli
idiv
int
or
push
negb
sbb
in
aam
mov
popf
in
inc
jp
push
mov
lods
jecxz
dec
dec
adc
pop
adc
xor
es
pop
mov
add
nop
xchg
lret
add
loopne
push
mov
mov
repz
adc
lock
xlat
adc
inc
test
jecxz
and
mov
bound
mov
fidivs
lret
sbb
mov
cs
in
or
movsl
jae
jle
aaa
push
jmp
movsl
sti
jne
mov
and
jp
out
iret
bnd
leave
dec
aad
jg
ficompl
imul
stos
push
jle
out
mov
and
in
test
adc
arpl
scas
pop
push
scas
testb
mov
imul
xor
lret
mov
fcomps
fsubs
push
fsubrs
mov
lds
cli
xchg
xlat
jnp
jae
cmpl
cli
mov
insb
cltd
outsb
dec
testl
and
imul
movsl
mov
mov
movsl
and
xor
and
xor
sti
mov
outsb
rorb
sbb
add
shrl
add
pop
xchg
inc
xchg
push
xor
push
cmc
sbb
arpl
out
ds
subl
mov
enter
pop
sbb
repz
incl
xor
push
pop
mov
imull
les
pop
std
shlb
sbb
xor
lods
fidivs
jnp
mov
imul
dec
and
dec
or
cld
in
xchg
rcrb
cld
mov
sarb
je
test
fldcw
lahf
mov
jg
pop
sbbb
xchg
mov
sbb
stos
cmpl
es
mov
or
push
roll
xor
loopne
mov
outsb
cmp
xlat
outsl
dec
pusha
dec
add
stos
int3
repz
sub
push
cmp
xchg
ficompl
fwait
in
hlt
cmpsb
push
fcmovne
test
jmp
pop
mov
out
sahf
sub
rcrb
pushf
xchg
sbb
pop
sbb
fisubl
mov
imul
and
nop
ja
xor
adc
out
fcoml
mov
jno
jle
sub
or
fists
fsubrs
les
repnz
xchg
inc
add
xchg
cltd
mov
movsl
xchg
faddl
sbb
shlb
in
jecxz
cli
jbe
mov
fs
aam
inc
addr16
std
add
pop
call
fs
fildll
jno
dec
adc
aam
rorb
adc
xor
add
or
mov
pop
nop
sub
sub
sbb
stc
inc
adc
ss
pop
and
mov
repz
xor
ljmp
in
mov
or
stc
in
fidivrs
and
mov
cwtl
cmp
scas
adc
fcomip
jnp
push
inc
jl
inc
jge
test
and
aas
rorb
lock
scas
rcrb
mov
icebp
scas
stos
jl,pn
jb
xchg
mov
fdivl
repnz
std
xor
imul
sub
lods
or
mov
cmp
cli
mov
shrb
js
xlat
mov
icebp
stc
mov
jg
sti
sub
popa
jae
in
stc
fdivl
xchg
movsl
stc
shrl
mov
xor
mov
add
inc
xchg
cmp
leave
jne
in
pop
out
jb
adc
adc
ficomps
popf
les
cmpsl
xchg
mov
leave
test
and
ss
cmc
xor
aam
ret
dec
xchg
lahf
add
jecxz
jg
cld
xor
fisttpll
ror
lods
xchg
or
into
jl
cmp
sub
inc
mov
popa
xlat
cmpsl
pop
mov
xlat
add
loopne
das
mov
mov
mov
daa
test
out
sbbl
push
adc
or
loop
pop
xchg
pop
cld
cmpsl
testl
scas
repz
cwtl
cmc
pop
push
xchg
or
popl
cmc
sti
hlt
mov
ljmp
dec
bound
hlt
cmp
sbb
rorl
pop
pushf
je
mov
int3
push
push
lret
xor
pop
push
sar
incb
jl
cmp
mov
or
fs
xchg
rorl
sub
inc
jg
lods
mov
jg
inc
scas
cmp
inc
call
add
das
rorl
fbld
fdivs
fwait
push
mov
fsts
mov
mov
jl
cmp
jle
jbe
neg
mov
lret
push
pmuludq
cmpsl
cmpsl
mov
mov
pop
cltd
clc
push
mov
or
pop
bsr
or
loop
cmp
sub
jmp
jo
mov
mull
jnp
dec
insl
addl
xchg
cmp
xchg
mov
xchg
cmpsl
inc
adc
fistpl
in
mov
and
cwtl
rcl
jle
push
mov
nop
addr16
notl
loope
mov
sub
mov
push
xor
sub
mov
sbb
repz
mov
pushf
pop
or
cs
aaa
xchg
mov
or
scas
pop
mov
inc
dec
mov
movsb
ret
xchg
push
out
out
jp
clc
adc
jbe
xor
in
ret
dec
pusha
lea
cld
xor
outsl
adc
mov
sub
xlat
fstpl
push
clc
push
andl
add
dec
lcall
out
mov
push
cmp
push
or
push
jecxz
out
jno
into
mov
sar
adc
insb
in
cmpsl
std
je
jge
js
mov
sub
sub
push
pop
push
jo
sbb
and
shll
in
outsl
xorb
mov
in
or
pop
repnz
aam
notb
lret
ret
push
nop
in
xor
pop
gs
outsb
fldt
pop
aad
pop
inc
ss
jle
adc
je
mov
and
test
ljmp
or
pop
xor
nop
xchg
mov
gs
mov
xchg
cmp
dec
lret
imulb
xchg
popa
fmuls
or
xchg
mov
jno
and
in
movsb
push
je
imul
cmc
jmp
sub
mov
sub
and
sbb
in
and
inc
je
aas
jmp
fwait
push
rclb
jmp
and
pop
or
int3
insb
mov
push
dec
push
mov
adc
jno
sub
rorl
cmp
imul
scas
fldl
aad
test
into
mov
or
cmp
xchg
sbb
cmp
out
adc
icebp
inc
movsl
in
insl
sub
aaa
sbb
les
dec
stos
dec
xchg
jg
popa
jne
cmp
out
dec
push
push
dec
xchg
out
outsb
pop
loopne
outsl
jg
loopne
jae
xchg
mov
icebp
sbb
jno
mov
daa
mov
and
pop
outsl
xor
mov
in
jbe
movsl
leave
cmp
mov
cmp
scas
sti
mov
out
mov
xor
mov
xor
jnp
mov
call
stos
fdivrs
xchg
add
cmp
in
push
frstor
outsb
push
lods
xchg
mov
jl
bound
mov
push
in
in
sbb
sbb
mov
adc
rcr
cmpsb
loope
jno
and
fwait
pop
sub
sbb
scas
fimuls
iret
mov
mov
out
push
mov
icebp
in
mov
test
xor
lock
insl
daa
add
mov
cmp
outsl
push
inc
sub
dec
mov
icebp
sub
aas
and
aas
dec
lret
mov
les
inc
jns
adc
ljmp
mov
sub
and
scas
push
inc
dec
mov
lret
test
push
push
movsl
aaa
pop
pop
xlat
inc
imul
es
sbb
add
int
in
cli
fwait
in
push
or
int3
sbb
add
imul
adc
loop
jl
out
dec
je
jl
rcl
push
loop
xchg
dec
aam
xor
dec
xchg
fimull
push
cwtl
mov
dec
cmpsl
jmp
mov
jmp
lods
mov
arpl
xor
xchg
mov
nop
jb
jl
cmp
xchg
jle
sbb
xor
pop
cmp
push
out
aad
in
int
fildl
fisttps
dec
test
adc
push
mov
jnp
cmp
lret
jg
aaa
sti
mov
mov
add
pusha
cli
jle
int
jb
fwait
insl
movsb
sub
push
pop
movsl
test
movsb
xchg
popf
shrl
insb
pop
jae
push
int
imul
loop
sti
cld
push
int3
aam
in
inc
pop
sbb
add
jmp
imul
pop
js
imulb
dec
mov
addr16
movsl
movsb
and
add
add
mov
sub
inc
call
clc
push
mov
mov
xor
mov
in
fcomps
shlb
test
mov
xchg
xor
insl
xchg
aam
jne
or
fs
lahf
and
xor
clc
sbb
loope
cmp
cmpsl
stos
cmpsb
jl
inc
in
xor
pop
xchg
test
or
push
push
lods
sbb
mov
gs
test
test
adc
rolb
mov
push
js
outsb
sub
mov
test
inc
mov
in
ficomps
xor
push
xor
push
jg
jae
test
iret
pop
outsb
adc
jg
mov
faddl
lock
imul
sbb
jecxz
pop
cmp
ficomps
add
mov
or
jl
adc
fwait
and
mov
xchg
test
hlt
sbb
dec
xlat
push
fcomi
shrb
int
loope
jb
stos
push
daa
mov
notl
pusha
lods
cld
or
and
xchg
ja
data16
sbb
xchg
outsl
rcrl
adc
scas
xchg
pop
push
cli
xchg
mov
lret
aam
andl
sbb
sub
xchg
xchg
movq
ret
pop
push
mov
mov
xchg
mov
testb
sbb
add
inc
dec
inc
push
cmp
pop
lahf
or
dec
shlb
fsubrl
stos
lcall
cmpsb
scas
gs
fmul
adc
je
sbb
out
mov
jecxz
jbe
dec
ret
sub
sbb
loope
int3
test
mov
mov
cmp
sub
ret
or
sub
imull
enter
pop
xchg
mov
sub
pop
mov
popa
mov
pop
cmp
adc
sbb
xchg
rcrl
mov
mov
sahf
adc
dec
insl
xchg
pop
dec
and
into
out
inc
imul
mov
inc
inc
pop
inc
hlt
fisttps
or
and
mov
push
subb
pop
subl
lcall
cmp
xlat
sarl
imull
mov
loop
bound
mov
or
mov
scas
arpl
cmp
fisttps
dec
jl
adc
mov
mov
mov
fwait
sarl
add
lds
test
cmpsl
lea
fbld
jb
data16
adc
sbb
cwtl
jo
insl
xchg
notl
sub
nop
pop
mov
xor
pop
repz
daa
push
cmp
sbb
jne
add
pop
mov
mov
xchg
mov
fdivr
inc
fwait
sub
adc
addr16
sahf
stc
fwait
pop
pop
mov
xchg
sbb
lret
mov
push
idivl
bound
mov
lods
clc
inc
cli
xor
sub
aas
subb
faddl
shr
dec
ljmp
inc
outsb
adc
leave
movsl
insl
or
push
jle
pusha
aad
ja
sbb
jb
mov
lea
in
inc
inc
sahf
mov
into
dec
cmp
lahf
outsl
xchg
bound
add
push
pop
push
sbb
mov
ret
mov
lahf
mov
hlt
sbb
add
outsl
and
cwtl
inc
cmp
aam
lods
les
or
xor
test
dec
jl
ret
jg
xchg
xor
nop
or
in
or
or
ss
clc
pop
jne
ret
xchg
push
pop
movsb
mov
sbb
xchg
sub
addl
sbb
hlt
jae
inc
rcr
jne
sbb
ret
leave
or
and
xchg
dec
lock
arpl
divb
xor
stos
repnz
sub
xchg
push
pushf
jge
xchg
pop
ret
es
daa
loopne
subl
mov
popa
adc
inc
jb
adc
lahf
imul
scas
loop
pop
cmpsb
in
or
stos
mov
rorl
addr16
sahf
jge
test
movsl
scas
jmp
loopne
imul
sub
or
fnclex
lahf
jmp
sub
std
add
pop
popf
js
or
test
or
loope
sti
test
cli
jle
pop
stos
adc
push
test
sbb
les
fiadds
jmp
cmc
xor
cmpsl
dec
push
cmp
js
pop
mov
loopne
mov
push
in
sub
test
mov
mov
ljmp
sub
adc
out
push
imul
pop
pop
cmp
pop
into
int3
push
out
icebp
iret
mov
mov
int
aaa
insl
aas
jno
clc
pop
mov
or
arpl
xor
sti
data16
adc
pushf
outsl
aam
cmp
scas
jno
pop
or
aas
int
dec
dec
jle
out
push
shll
jg
inc
bts
imul
add
mov
int
adcb
lret
loop
jg
aam
adc
lret
loop
arpl
jmp
push
or
jle,pn
ffree
mov
pop
sbb
outsl
jp
out
xchg
inc
push
flds
fldl
call
fwait
dec
popa
jge
pop
data16
adc
sub
stos
cmp
sbb
jl
xlat
mov
repz
xchg
int3
sub
flds
cmp
xchg
xorb
cs
mov
xor
pop
mov
stc
fwait
pop
jle
push
test
test
mov
cmc
mov
lods
sub
sbb
mov
cmp
pop
mov
mov
add
xchg
and
cmp
xor
push
pop
xor
ficoms
inc
push
push
fwait
je
inc
mov
imul
mov
jecxz
sahf
push
incb
sar
mov
dec
lret
mov
outsb
and
clc
cmpsl
js
rcrl
xchg
push
jnp
adc
dec
push
dec
inc
push
imul
ret
dec
out
scas
lds
pop
mov
fiadds
out
fiaddl
shl
lea
cwtl
mov
fsubp
inc
inc
mov
sti
xchg
xchg
nop
xchg
lds
imul
dec
sub
mov
adc
adc
pop
xchg
loop
fwait
mov
roll
hlt
inc
or
imul
push
and
rclb
or
scas
pop
test
or
fisubl
push
ja
inc
seta
lods
adc
xor
mov
out
pusha
inc
clc
jne
in
add
add
in
xlat
add
aas
out
push
cmpl
mov
or
push
insl
mov
mov
xchg
pop
rclb
cmpsb
fdivrl
pop
cmc
scas
dec
rorl
jp
out
sub
sub
test
incl
movsl
cs
outsb
shrl
enter
out
mov
push
adc
lods
mov
dec
popa
adc
jno
sti
add
mov
imul
push
fimuls
dec
pushf
mov
inc
popf
in
xchg
xchg
inc
push
scas
scas
out
pop
cli
ss
hlt
xchg
or
mov
mov
adc
in
loop
fwait
cmp
or
test
jne
ficompl
int
xorb
addr16
test
pop
cltd
pop
arpl
mov
and
pusha
rorl
in
aas
mov
int
sub
add
push
mov
outsl
add
mov
aam
mov
mov
adc
cltd
mov
cwtl
out
jge
xchg
in
pop
push
addl
cs
cwtl
ja
mov
push
push
add
jne
adc
mov
mov
adcl
push
popf
pusha
push
pushf
addr16
dec
mov
xchg
inc
ret
mov
and
lods
ret
inc
or
loope
roll
cmpsb
push
imul
les
pop
inc
mov
pop
push
add
push
imul
fcmovbe
mov
sarl
jmp
mov
mov
ljmp
mov
inc
and
sub
in
add
or
shrl
repnz
mov
cmp
cmpsb
lea
scas
cmc
les
adc
shrb
daa
cmp
aas
jns
or
lret
sub
mov
arpl
ret
imul
cmpsl
call
and
xor
fisubs
cmpsl
in
das
cmp
mov
xchg
dec
dec
sub
into
jo
aam
or
es
pushf
icebp
inc
xor
cmpsb
movsl
xor
insb
cmp
out
sub
push
or
loope
dec
adc
int3
int
mov
xchg
inc
inc
fcmovu
pop
inc
sbb
jmp
mov
popf
mov
dec
xor
daa
mov
xlat
push
sbb
push
dec
loop
outsb
xchg
dec
pop
repz
enter
mov
cmp
aam
loope
inc
out
sti
daa
repz
jno
jb
jns
cmc
lods
aam
jo
xchg
jg
loope
icebp
loop
add
push
clc
fistps
dec
insb
adc
cmp
stos
lock
jbe
dec
lods
push
push
shll
sub
xor
loopne
dec
sbb
jmp
mov
and
xor
jl
xor
stos
pop
test
data16
mov
lock
push
dec
mov
jle
jl
or
bound
or
pop
outsl
inc
mov
jl
mov
dec
hlt
mov
enter
xchg
insb
inc
maskmovq
adc
int3
lahf
sqrtps
lret
cs
cmp
pop
push
sub
insb
loopne
xchg
mov
dec
pop
push
ja
mov
outsl
dec
mov
jecxz
adc
popf
fstpl
aaa
iret
ret
add
add
cld
mov
les
lret
arpl
pop
mov
ror
pop
xor
in
nop
pop
push
fcoms
add
lock
ret
jo
das
adc
or
repz
ret
jmp
insl
addr16
rcrb
sbb
cwtl
mov
pop
popa
jo
mov
sub
sub
jle
jo
jne
mov
add
shlb
ljmp
jl
pusha
stos
or
shll
pop
test
cvtps2pi
popa
pop
push
in
jg
sbb
sbb
loop
stc
into
add
mov
mov
pop
loop
inc
sti
ja
les
add
fistpl
flds
stc
push
das
and
dec
ss
rcrl
movsl
push
jno
sbb
loope
into
test
js
push
xchg
pop
sbb
mov
add
cld
dec
pop
pusha
xchg
dec
push
dec
push
out
inc
dec
pop
rorb
xor
ret
insl
repnz
idivl
mov
jo
push
lods
sub
out
sti
gs
adc
fsubl
mov
aas
mov
add
test
repnz
rolb
push
testl
add
push
inc
fidivrl
in
loopne
insl
outsl
frstor
push
sbbb
aas
bound
mov
xor
sbb
les
xchg
rcrb
push
cltd
icebp
cmp
mov
xchg
mov
inc
std
repnz
or
cltd
and
sbb
test
js
jle
mov
jl
cmp
idivl
jle
shrl
mov
xchg
scas
jmp
fucomip
and
jns
ljmp
stos
cmp
push
lret
sub
xor
adc
sub
xchg
push
gs
xchg
lods
dec
xchg
sti
cmp
leave
fcomi
pop
cmovne
les
test
lcall
fisubrs
push
fnstenv
sbb
out
lahf
lods
sub
fadds
lcall
or
dec
scas
sti
pop
and
clc
add
dec
loope
mov
mov
and
sbbl
cmp
mov
shr
mov
jae
jge
push
in
outsl
movsl
aam
lahf
inc
push
insl
adc
stos
fdivs
xchg
pop
clc
fisubrl
adcl
nop
mov
scas
xor
stc
outsl
lea
lock
repnz
aad
jg
scas
add
xor
rcl
iret
mov
mov
mov
xor
js
test
and
jno
and
xchg
ret
xor
leave
cmp
addr16
mov
pop
sbb
xlat
test
lods
enter
test
mov
dec
push
aaa
jb
push
pushf
jmp
push
fsubr
fucomip
lock
gs
add
pop
insb
cmp
add
fcmovu
inc
push
mov
out
and
mov
jae
pusha
jne
mov
push
push
pop
jmp
sbb
lahf
mov
add
sbb
test
sub
pusha
subl
sub
jo
mov
add
testl
arpl
ud1
ficompl
lods
daa
inc
pop
fisubrl
loopne
xchg
mov
insl
push
add
inc
clc
sbb
aaa
call
test
and
xchg
push
inc
out
ror
xor
add
psrld
stos
fcmovnb
or
jo
adc
fdivrl
or
ja
cwtl
test
mov
stos
sub
lock
popf
ret
into
add
lahf
xchg
addr16
lock
ja
push
andl
push
gs
pop
pop
sub
aad
inc
dec
add
mov
into
lock
sbb
xlat
lahf
loope
xor
in
adc
clc
inc
sahf
jge
in
in
xchg
lea
lods
out
push
notl
decl
inc
fs
aad
or
into
xchg
fstp
movsl
xor
dec
aas
cs
daa
jnp
out
adc
daa
ss
push
adc
pusha
and
shrl
inc
adc
xchg
fildll
loop
gs
arpl
fs
std
daa
push
xchg
je
in
mov
cmpsb
xor
push
fldl
js
jg
push
dec
or
ss
hlt
leave
mov
imul
aam
push
adc
or
popa
sbb
mov
pushf
sar
pop
dec
push
mov
push
cli
cld
pop
mov
mov
cltd
clc
fs
ss
cmp
lret
cmp
push
cltd
bound
xor
subb
sti
lret
sub
or
repnz
inc
lret
dec
xor
mov
movsb
jecxz
sub
out
insb
fwait
stos
jle,pn
repnz
or
cmp
adc
inc
push
movl
in
xchg
or
sbb
mov
or
ret
cmp
loop
test
fwait
xchg
cmp
adc
add
jp
add
je
pop
fcmovnb
shrl
movsb
pop
frstor
xor
mull
sti
mov
test
aam
pop
push
push
and
mov
lods
dec
test
push
mov
mov
movsb
and
adc
add
roll
adc
adc
mov
mov
inc
mov
or
je
mov
xchg
fisubl
repz
sbb
addr16
mov
bound
jecxz
cwtl
pop
pop
shlb
cmp
insl
aam
lods
repz
inc
fimull
mov
iret
dec
xchg
fcompl
pop
in
lcall
out
dec
iret
xchg
jl
mov
loope
das
ficoms
mov
ret
xor
jle
adc
adcb
imul
clc
iret
popa
push
jmp
out
mov
xor
loopne
call
sarb
xor
push
insb
aad
test
adc
aaa
add
lcall
and
nop
push
fcmovb
or
lock
pop
lahf
popa
inc
les
sahf
inc
lods
and
mov
dec
sub
loopne
mov
cmp
xchg
pushf
fwait
or
gs
out
lahf
cmp
xchg
or
mov
push
jmp
xor
out
pop
adc
mov
inc
rcll
mov
scas
movsb
push
icebp
mov
mov
scas
jae
cld
xchg
roll
out
dec
mov
xor
pop
sbb
xchg
js
push
jmp
rcl
mov
rcll
addr16
jge
testb
adc
ljmp
ljmp
jecxz
out
decl
imul
add
jbe
mov
jmp
rcll
cmp
cld
inc
into
mov
andl
sbb
sbb
loopnew
test
mov
mov
fs
inc
repz
insl
fnstcw
lds
push
leave
jae
stos
shl
sbb
jecxz
ja
pop
pop
sbb
into
out
stos
inc
cli
mov
cmp
add
lahf
xor
notb
adc
out
mov
pop
jle
mov
subl
cmovno
out
jp
jnp
or
and
xchg
dec
add
and
bound
aad
xchg
enter
call
pop
mov
xchg
push
lds
sub
add
mov
loope
push
xchg
xchg
andl
or
pop
push
aaa
loop
pop
lea
movsb
in
pushf
jbe
orps
repz
nop
xor
push
or
cmp
jne
je
ja
pusha
cmp
adc
pushf
mov
stos
xor
arpl
add
sbb
push
inc
xchg
add
mov
cmc
xchg
push
call
fidivs
or
lret
stos
jecxz
xchg
pop
es
pop
das
cmp
cs
pop
push
les
stos
inc
sbb
or
xchg
shl
pop
sub
dec
cld
inc
and
inc
insb
cmp
inc
adc
cmpsw
ss
and
jo
cmp
das
les
sbb
sub
mov
in
xor
jmp
add
and
outsb
ds
vpandn
push
cltd
xchg
mov
cmp
in
cwtl
mov
lcall
jo
flds
xchg
xor
insb
pusha
daa
bound
sub
addr16
xor
mov
and
xchg
pop
sbb
loopne
push
scas
stc
js
cli
add
pop
stos
jg
sahf
cmp
xchg
mull
movsl
mov
in
pop
scas
fildl
addr16
arpl
xchg
jle
stos
andb
leave
je
jne
jns
jmp
stc
das
pop
dec
lcall
fsubr
popa
mov
mov
inc
or
mov
in
ficoms
jle
jp
and
outsl
xlat
mov
adc
jecxz
cmp
lcall
xchg
and
and
jno
sub
push
loope
aam
outsb
pop
mov
aam
sub
mov
pushf
aaa
lret
fadds
stos
fwait
add
out
cmp
mov
lods
adc
sbb
rcl
lcall
xor
jp
push
and
das
std
insb
cmp
mov
roll
stos
sbb
jns
push
out
jl
fildll
shlb
std
inc
loop
insb
push
adc
and
cmp
int
negb
add
int3
or
popa
inc
xlat
mov
fidivrl
lock
mov
std
push
xchg
shl
dec
pushl
lea
rolb
cmp
loopne
rcrb
mov
sub
inc
pop
and
fs
mov
jno
inc
pop
jne
inc
cmp
jmp
imul
aas
fdivl
dec
loop
in
testl
dec
pop
nop
movsb
push
sarl
fsubrp
jmp
inc
push
daa
xchg
adc
pop
dec
add
enter
in
mov
fbstp
leave
cli
jbe
mov
pop
pop
dec
dec
call
cmpsl
loop
es
popa
inc
popa
push
push
cmp
out
pop
jne
ficomps
xchg
int
or
add
test
frstor
pop
int
cmpl
xchg
iret
scas
dec
incb
inc
ds
xchg
push
cmp
pop
mov
es
dec
fs
and
add
or
arpl
inc
adc
add
fs
cmp
aam
adc
jle
cltd
push
push
popf
sub
jo
out
and
lahf
shl
mov
push
imul
lahf
cmc
cmp
idiv
fucomip
or
lds
mov
sbb
push
mov
cltd
mov
cmpsb
mov
ds
xor
and
mov
push
mov
fmuls
mov
xchg
dec
test
fwait
push
push
jp
cwtl
pop
out
stos
jge
pop
mov
arpl
in
movsl
out
push
in
mov
cmpsb
push
xchg
lahf
push
mov
ljmp
int3
cmpsb
loope
cmp
movsl
and
inc
mov
gs
bound
dec
cmp
mov
mov
imul
sub
cltd
xor
in
or
jmp
fnsave
add
rcrb
icebp
in
ds
ficompl
mov
add
loopne
repz
das
stos
repz
dec
sahf
mov
es
cs
in
rclb
cmpsb
mov
in
shrb
jmp
rorb
cmpsb
sub
je
enter
pop
repz
mov
push
add
sbbl
inc
xchg
leave
sti
loope
mov
adc
jns
loop
aad
fdivrs
sub
fldl
stos
loope
xor
iret
or
js
push
jne
stos
cli
jl
mov
loopne
jo
and
or
adcb
adc
popa
outsl
jno
aad
xchg
or
add
out
fstpl
xor
inc
into
out
insl
mov
scas
xor
xchg
ja
or
xlat
pop
mov
or
in
les
adc
or
rcrb
and
mov
mov
jmp
leave
jge
pop
fistpl
insb
mov
inc
in
pop
sbb
xchg
mov
dec
fstpt
inc
xchg
into
test
test
cltd
jbe
push
iret
push
cmp
dec
add
xchg
cltd
sub
inc
cmovo
dec
lret
sub
pop
inc
and
test
mov
insl
aaa
mov
test
pop
or
and
cmp
mov
into
fdivrl
sbb
divb
aam
and
sbb
test
mov
mov
mov
ret
add
fisubs
add
lret
arpl
pop
lret
stos
icebp
pop
fwait
cltd
test
inc
loop
out
sarb
call
cmpsl
fisttps
cs
frstor
int
xor
stos
cmp
jmp
mov
pop
rcll
test
aas
loop
ret
cmpsl
jb
sbb
mov
sbbb
push
jb
xor
and
cmp
cmpsb
int
push
mov
pop
sub
sbb
and
cmp
push
sub
aas
pop
ret
movsl
daa
cmpsb
stc
mov
lret
imul
xor
ds
push
cltd
out
add
fmuls
pop
xchg
push
sti
jmp
clc
out
fld
dec
sbb
push
sub
push
jb
cli
mov
outsb
xchg
dec
jmp
enter
cmpsl
rcrl
shll
das
and
ljmp
mov
data16
adc
or
fwait
aad
mov
ds
xchg
lret
fwait
ss
std
pop
pop
sub
icebp
in
push
dec
inc
imul
cwtl
movsb
loope
xor
fwait
add
lods
fsubr
pop
push
sub
jge
fs
int
mov
stc
push
add
in
push
dec
hlt
or
fs
and
pop
scas
lcall
and
xchg
adc
inc
cmp
sub
mov
push
xchg
or
add
movsl
cmp
cmp
test
outsl
push
or
jnp
xlat
out
mov
or
ret
add
push
sahf
cmp
iret
and
cltd
pop
pop
dec
mov
sbb
jns
into
push
in
rclb
iret
jbe
add
ds
push
out
sub
jne
pop
dec
inc
xchg
fcoms
scas
sbb
mov
mov
add
cmpsw
sub
jns
push
xchg
push
ret
mov
mov
cwtl
mov
lea
fs
mov
cmp
vunpcklps
dec
fwait
loope
sbbb
jg
shll
shrl
iret
outsl
lea
and
mov
lcall
in
mov
leave
pop
inc
and
pop
mov
dec
mov
push
test
lods
ficoml
dec
int3
sub
roll
jns
lcall
frstor
dec
xchg
rcrb
mov
shl
mov
pop
jb
scas
lahf
adc
mov
not
loop
setne
frstor
pop
scas
outsb
adc
rol
adc
js
cmpsl
aas
mov
add
sbb
out
movb
inc
aas
lcall
lods
lods
or
mov
shlb
dec
push
cld
andps
sbb
pmullw
dec
ja
insl
inc
xchg
aaa
je,pt
scas
clc
mov
and
mov
lret
push
std
sbb
mov
rol
add
test
sahf
push
mov
adcl
ss
xchg
xchg
stc
andl
cmp
inc
inc
andb
pop
xchg
push
pop
mov
outsl
jbe
dec
cltd
xchg
pop
ss
adc
lcall
outsb
inc
mov
pop
xchg
mov
test
xor
outsb
pop
dec
jmp
test
in
or
in
loopne
rclb
dec
fsub
jg
jecxz
xor
sub
jne
or
aad
fwait
lds
out
movsb
dec
adc
jbe
xchg
adc
rcrb
xchg
mov
test
cmp
push
inc
fwait
mov
mov
mov
addr16
cwtl
loope
stos
imul
in
aam
dec
dec
mov
mov
mov
fsub
xor
dec
xacquire
push
sti
popf
sub
adc
movsb
out
outsl
adc
pushf
xchg
mov
jecxz
aas
orb
cmpl
push
dec
sarl
cmp
insb
pop
push
adc
insl
js
sarb
aas
lock
pop
and
ja
pop
test
xchg
inc
shrl
pop
popf
jp
fimuls
add
leave
loope
lcall
push
fldcw
xchg
mov
imul
icebp
lahf
stos
daa
sbb
aam
xor
jp
clc
out
pop
push
dec
jno
jne
push
out
rclb
jne
or
testl
or
fildll
push
push
mov
add
enter
cmp
cmp
aaa
aas
leave
mov
or
fs
stos
jne
xchg
sub
in
cmp
add
inc
push
lcall
test
or
ret
pushf
mov
inc
sub
cli
and
lock
mov
push
push
xor
aaa
test
mov
cmp
xchg
ret
sbb
mov
cmp
mov
jmp
scas
test
inc
dec
fwait
in
cltd
mov
in
mov
lods
mov
hlt
pop
rcrl
mov
adc
loope
testb
mov
scas
xchg
mov
sub
movsl
gs
push
faddl
into
mov
push
cmp
out
je
sahf
pop
lahf
loope
xor
loop
mov
jp
xchg
push
and
xchg
add
mov
out
sbb
icebp
sbb
pusha
mov
dec
add
sub
inc
fprem
jo
mov
dec
jbe
shrb
shrb
popf
pushf
shlb
jecxz
pushf
cmp
stos
ljmp
les
inc
and
mov
popf
xchg
or
cld
xor
jmp
push
cmp
sbb
sbb
sub
ss
cmp
xor
pop
loope
fwait
add
cmc
loop
push
sub
out
repz
pop
xorb
ret
inc
out
mov
pushf
mov
cwtl
push
jle
pop
mov
addl
jl
pop
dec
inc
mov
sti
out
pop
fadd
int3
inc
mov
fiadds
mov
lods
lret
ja
mov
mov
repz
shll
mov
movsl
push
inc
divl
inc
push
lock
pop
andl
cmp
mov
sub
in
pop
ret
mov
sub
dec
cmc
mov
sbb
push
lret
cs
in
hlt
fistpll
andb
mov
jo
pop
insb
fistpll
les
dec
sti
in
add
inc
jge
xchg
inc
xor
out
xchg
imul
mov
stc
movsb
add
push
hlt
or
pop
ret
xor
movb
sbb
imul
xor
or
xor
mov
fs
push
and
fmuls
jnp
add
fcmovnbe
iret
adc
sbb
icebp
and
mov
jne
cmp
push
mov
mov
das
loopne
push
jg
pop
mov
mov
jne
pop
or
ret
and
das
cmc
jne
and
imul
mov
into
xchg
sbbb
stc
in
aaa
mov
hlt
dec
outsl
sub
adc
shll
in
jo
sahf
testl
mov
ror
pop
cwtl
dec
mov
call
leave
inc
icebp
jge
aas
sub
fidivrl
xchg
out
jns
insl
xchg
fcom
add
sti
xchg
cltd
test
test
stos
stc
mov
xchg
xchg
repnz
aad
jmp
xor
jge
bound
push
bound
int3
inc
push
repnz
xchg
mov
sub
addr16
jnp
addl
daa
pushf
jne
cs
mov
inc
xchg
je
mov
xchg
jg
out
pop
mov
push
das
sub
test
pop
mov
inc
sti
bound
ljmp
aad
mov
lcall
ljmp
lods
fldt
lahf
inc
ret
mov
fptan
xchg
stos
xchg
dec
mov
sub
lods
xchg
stos
or
pop
jecxz
jl
lcall
dec
std
xchg
outsl
push
pop
xchg
inc
xchg
popa
lahf
jae
push
push
mov
dec
out
popf
and
dec
cmp
icebp
rol
cli
and
jl
dec
jecxz
push
subl
fsubrl
fidivs
xchg
int3
dec
outsl
mov
xchg
fsts
mov
push
add
aas
shlb
stos
iret
lret
stos
jbe
jne
mov
dec
sbbb
bound
cmp
lret
sbb
xchg
test
in
xor
adc
js
jbe
xor
mov
and
dec
scas
fstps
xorl
enter
adc
out
lock
cli
sub
inc
fiaddl
or
cmp
ja
cltd
dec
inc
inc
fbld
mov
and
ret
mov
and
xchg
popf
xor
leave
mov
push
enter
fistpll
sti
call
sbb
dec
xor
out
fsubrl
mov
sbb
sahf
xor
xor
pop
jae
cwtl
fisubrl
out
mov
inc
icebp
fstps
scas
loopne
jmp
imul
out
lds
lcall
mov
hlt
mov
fnstsw
lret
outsl
out
jp
cmp
imul
pop
clc
fld
lock
enter
jl
mov
inc
repz
nop
lods
add
and
push
iret
fstps
adc
xchg
popf
cli
mov
jl
out
push
imul
jne
push
jne
leave
sbb
popa
dec
stos
cwtl
ljmp
sub
jb
lods
je
xchg
push
fcmovnb
and
sbbb
ds
seta
lods
stos
loop
add
fisubrl
jmp
cwtl
mov
stos
rolb
fiadds
sbb
addr16
mov
call
jbe
jge
mov
popf
push
gs
jecxz
mov
cmp
inc
inc
in
rorl
subl
inc
xchg
cmp
iret
insb
pop
pop
jns
in
sbb
sub
and
movsb
add
cmpsb
inc
jno
jno
fwait
cwtl
and
cmpb
clc
cmp
or
clc
or
jno
inc
lods
and
frstpm(287
xor
cltd
sahf
out
xchg
test
mov
enter
or
add
pop
loope
aaa
pop
sbb
mov
pop
leave
test
push
pushw
popf
cmp
add
xchg
mov
enter
fld
adc
inc
out
lock
enter
cmp
mov
lods
cli
shll
addr16
push
jmp
inc
iret
inc
and
or
jo
leave
daa
cmp
xchg
cmp
sbb
pushf
xchg
lods
fsubrl
push
rorb
jnp
mov
jecxz
adc
scas
pop
mov
fidivrs
ss
or
push
daa
icebp
andb
movsl
jl
push
mov
mov
or
mov
mov
push
pop
push
push
dec
mov
jb
mov
mov
add
jae
cwtl
sbb
inc
jge
ret
outsl
in
std
andb
or
into
mov
xor
jae
rcl
cmc
lea
pushf
rolb
into
add
lock
or
sbb
xchg
jne
inc
cmpsl
sar
fbld
lea
add
mov
and
push
imul
pop
sti
daa
push
dec
scas
lods
cmp
or
rcrb
out
in
fnstcw
aaa
inc
mov
inc
mov
aaa
xor
push
inc
ss
pusha
pop
loopne
ret
push
pop
loopne
in
add
xchg
sub
add
jae
inc
int3
imulb
cmpsb
jmp
jp
add
pushf
out
mov
clc
inc
adc
nop
jne
mov
cli
sahf
stos
jnp
pop
adc
inc
adc
cmpsl
push
iret
iret
xchg
inc
incl
jbe
cwtl
jb
lods
popf
inc
ja
inc
fidivrs
dec
loopne
lcall
loope
push
xlat
dec
jmp
mov
insb
out
lcall
jno
lock
int
mov
out
cmp
mov
pop
mov
loope
lea
push
pop
stos
lea
lret
mov
imul
cmpsb
popa
dec
xor
fsub
or
arpl
test
jnp
addr16
in
ret
shrb
js
mov
or
or
push
or
ljmp
das
loop
rcll
out
xchg
out
repz
xlat
jecxz
sbb
cmp
mov
sub
cmp
jb
in
mov
push
into
jle
jae
pop
adc
jae
pop
cmp
pop
mov
fildll
enter
nop
ret
icebp
lahf
xor
loop
mov
sbb
mov
js
or
repnz
push
jns
orb
jne
enter
lahf
popa
adc
hlt
fs
push
int
mov
aaa
lds
out
sbb
std
add
dec
inc
add
clc
ficompl
push
mov
repz
mov
inc
xchg
pop
aas
push
stos
cmp
mov
pop
sbb
adc
outsl
push
mov
ficompl
xor
or
add
push
xchg
repnz
jnp
maskmovq
divl
out
sbb
decb
add
mov
sub
dec
sub
push
xor
leave
insb
ds
pop
out
cmpsb
std
push
sub
shll
jnp
pop
repz
fwait
or
cld
rcrb
pop
mov
mov
jecxz
inc
lret
adc
or
xor
nop
add
mov
mov
js
or
lea
lods
enter
pop
jne
and
xor
push
sbb
mov
jg
dec
adc
ljmp
sub
jmp
wbinvd
mov
adc
loopne
dec
rcl
jp
mov
fnstsw
jae
pop
ljmp
ja
and
xor
push
and
imul
push
and
das
sub
or
adc
jnp
cmc
rorb
movsb
fstpl
pop
test
sbb
cmp
aas
repnz
inc
ret
in
arpl
fcoml
jno
fsubl
mov
insb
pop
mov
shlb
movb
in
pop
and
cmp
sub
loope
inc
lahf
sarl
rcrl
loop
leave
loop
sub
mov
cmp
jmp
push
sub
mov
out
mov
mov
lods
add
movsb
xlat
mov
push
mov
cs
mov
jns
xlat
mov
stc
mov
add
xchg
add
sub
mov
and
data16
ret
jge
adc
mov
addb
pushf
add
push
sbb
inc
pop
stc
xchg
mov
ret
xor
sahf
les
idiv
adc
lock
add
fistpll
sub
mov
pop
movsb
xchg
cltd
bnd
das
std
jne
inc
mov
xchg
fs
imul
mov
and
movsb
imul
add
pop
call
pop
xor
sub
js
inc
gs
sarb
scas
fnstenv
jbe
aaa
ss
pop
imul
movsl
std
push
mov
cmp
into
mov
fldt
test
mulb
lcall
iret
ret
adc
adc
jp
inc
jb
jl
pusha
imul
into
xchg
clc
sbb
adc
rorb
sbb
iret
lea
pop
out
movsb
push
ret
mov
cmp
inc
sub
pop
sub
fdivs
xchg
aad
test
mov
or
adc
or
lahf
sarl
sbb
ss
mov
xor
lahf
in
jnp
adc
add
cmp
cmpsw
and
das
jl
inc
aas
or
std
push
lods
aam
push
fwait
mov
jg
insl
mov
popa
xlat
sbb
sbb
push
add
gs
adc
in
jecxz
sub
dec
outsl
js
out
jno
or
xchg
cltd
lret
dec
fsubrl
outsb
xor
lea
xchg
out
aam
insl
adc
loopne
popa
jmp
nop
in
mov
outsb
or
mov
mov
lods
jecxz
push
adcb
cld
aas
mov
icebp
add
ljmp
jmp
jo
stc
pusha
cwtl
mov
push
adc
in
sub
jnp
inc
jp
sbb
jl
call
dec
inc
cmp
or
outsb
ljmp
fcmovnu
bound
sub
lahf
fsubs
enter
or
sub
aad
inc
outsl
pop
fmulp
inc
iret
negb
sbb
inc
cltd
jnp,pt
mov
test
das
xor
ffree
push
dec
cltd
cmp
xchg
inc
imul
loope
fucomi
loopne
popa
mov
sbb
mov
loopne
cmpsb
pop
xchg
adc
dec
mul
sbb
push
call
inc
mov
cmpsb
fs
testb
or
insb
lods
xchg
ret
clc
xor
rdtsc
xor
rolb
in
imul
out
cltd
add
sub
sarb
xor
and
push
arpl
cltd
out
je
bound
jg
sahf
hlt
mov
and
arpl
insb
pop
xchg
push
pop
dec
push
jae
xchg
mov
sub
cltd
imul
sbb
xchg
push
test
add
inc
fstl
mov
aad
and
sbb
test
lock
cwtl
lahf
or
and
daa
mov
push
ss
in
and
jb
jns
sbb
out
cwtl
ljmp
xchg
fisttpll
sub
shl
rorl
jb
or
inc
sub
inc
xor
cltd
jecxz
cmc
call
add
daa
and
cmp
jbe
jb
in
mov
fs
xor
lret
mov
xlat
mov
inc
dec
push
push
sub
cs
adc
mov
sub
cmpsb
jnp
cmpsb
sub
xor
jne
fstpl
ds
push
xchg
or
sub
or
out
out
push
mov
stos
dec
sbb
mov
inc
fcomip
aad
aas
jg
jne
jb
pop
xchg
aas
pop
pop
push
lds
mov
jg
pop
ret
js
inc
std
xchg
pusha
pop
xor
bnd
out
adc
lds
mov
adc
jo
std
jns
or
jmp
fidivrs
stos
ja
int
mov
or
xchg
sbb
imul
pop
push
je
or
xor
cmp
ds
xor
and
testl
imulb
jae
mov
add
mov
imul
xor
test
pop
jo
xor
in
ret
push
aam
mov
and
pop
shl
add
xor
stos
stos
jno
sahf
push
inc
jl
sub
loopne
xlat
xor
push
cwtl
xchg
cmp
divb
fldz
testl
scas
mov
xchg
imul
arpl
mov
mov
dec
adc
pop
iret
inc
fsubrs
cwtl
movsb
gs
and
fdivrl
and
imul
and
xchg
push
push
xchg
lock
cwtl
cmp
aad
push
lock
jno
xchg
dec
mov
outsb
jnp
das
dec
sbb
sub
in
mov
mov
faddl
js
pop
aad
nop
pop
adc
in
lahf
scas
fs
xchg
push
ss
sahf
jo
add
and
or
int3
xlat
fcomps
ret
movsl
rcrl
pop
push
mov
dec
addb
xor
push
dec
cmp
aas
pop
outsl
imulb
ficoml
xchg
pusha
add
nop
or
xor
es
pop
mov
mov
mov
sbbb
imul
dec
add
je
push
out
jne
outsl
out
ret
loop
cmp
xor
test
or
outsb
and
cltd
leave
xor
add
dec
lods
lcall
sub
mov
push
lea
mov
xorl
dec
mov
push
push
xchg
movsl
dec
loopne
push
dec
shll
sub
push
lock
add
clc
loope
adc
xlat
aas
push
or
cwtl
jmp
imul
pushf
cmp
jp
sub
pop
ret
imul
xchg
dec
lods
mov
jp
je
dec
loopne
mov
add
lods
or
pop
ds
mov
and
cmpsl
or
fstps
push
outsb
mov
popf
mov
lcall
call
shlb
mov
mov
xor
add
adc
stos
outsl
mov
lock
inc
and
mov
divl
nop
xchg
mov
iret
cmpsb
int3
push
or
flds
mull
jge
inc
xor
aaa
nop
repz
fcmovb
cltd
fmuls
mov
sub
daa
loop
cwtl
iret
inc
stos
mov
in
pop
adc
imul
mov
cmpsl
xor
pop
push
in
jecxz
fnstcw
std
fldcw
fisttpll
xor
ret
jne
pop
sub
scas
or
cli
or
mov
daa
mov
cwtl
int3
pop
dec
sbb
inc
insb
pop
mov
adcb
jl
fcoml
mov
cmpsb
lret
int3
cmpsl
data16
pop
call
aad
ljmp
ljmp
imul
mov
cmc
mov
lods
or
dec
jmp
shr
jecxz
xor
adc
and
or
adc
out
xchg
test
pusha
sbb
push
fdivl
mov
fnstsw
jp
es
cltd
sbb
jns
push
icebp
add
adc
pop
aad
ljmp
repnz
mov
out
dec
pop
sar
idivl
mov
push
xor
or
iret
push
or
daa
movsl
pop
fimuls
popa
mov
mov
btl
mov
inc
or
lods
inc
test
cltd
push
outsl
int3
pop
jle
mull
and
pop
popf
ret
mov
stos
mov
fsubl
subb
cmp
scas
lret
sbb
test
jle,pt
jg
fcomp
or
add
push
aaa
js
inc
int
rcr
lods
adc
mov
ja
mov
or
mov
inc
lcall
mov
or
push
es
in
cmp
lret
mov
mov
addb
gs
iret
incl
or
cmp
fisttps
sub
dec
inc
out
inc
inc
mov
cmovb
in
xchg
jbe
mov
ficoml
sbb
xor
push
cmp
push
adc
jle
xor
out
adc
mov
inc
inc
sub
xchg
hlt
mul
mov
movsl
push
add
or
mov
inc
in
das
xchg
pop
fildl
shlb
xor
or
cmc
pop
push
in
inc
xor
movsl
xor
pop
inc
lds
sub
mov
inc
fsubl
dec
incb
mov
in
insb
jnp
out
stc
xchg
or
mov
or
xor
or
xor
mov
outsb
cld
in
out
pop
addl
cmpb
sub
movsb
mov
mov
jp
jecxz
stos
int3
lret
jo
xchg
add
fs
pop
lea
out
push
mov
mov
fs
cmpsb
decl
pop
jg
and
imul
nop
je
ficomps
inc
insl
sbb
dec
push
aaa
inc
dec
inc
xlat
cwtl
fwait
adc
sub
mov
sbb
push
in
and
push
push
std
push
subb
dec
imul
add
pop
lret
sbb
jns
jae
pop
cwtl
or
imul
push
or
sub
lods
sti
mov
loope
mov
jbe
lahf
adc
shlb
inc
ja
mov
add
add
pop
pop
sbb
jo
push
iret
xor
movsl
out
or
xor
cmp
push
loop
sub
pop
push
jge
fisubs
das
fstp
or
lods
enter
repz
fisubl
cmp
rcrb
pushl
fldt
add
xchg
add
pcmpeqw
sbb
add
or
pop
push
ljmp
mov
pop
in
leave
add
xchg
insl
in
pop
lea
xor
fs
test
or
jae
icebp
and
xor
leave
fs
outsb
cmp
data16
repnz
add
sbb
loope
stc
adc
jl
cltd
daa
xor
push
js
xchg
pusha
mov
int
ret
cmp
mov
fisttps
das
js
adc
sub
pushf
fisttps
xchg
dec
push
jbe
cmpl
inc
adcb
rep
add
imul
shrb
loop
pop
fistps
ljmp
mov
testl
jle
xchg
in
movb
in
int
ret
daa
add
jecxz
xchg
xor
adc
cmp
adc
je
cmp
lock
dec
adc
push
push
mov
xchg
test
mov
mov
stc
gs
ss
sahf
xor
jne
lds
adc
addr16
testb
out
jecxz
imul
cmpsb
push
nop
rol
lcall
mov
js
mov
jmp
cwtl
or
loop
test
xchg
sub
jmp
popf
out
mov
sbb
sahf
mov
sub
faddp
aad
test
popf
in
std
test
lods
cmp
rcll
lret
mov
insl
or
enter
stos
push
sub
call
mov
lcall
cmp
mov
fmuls
test
fs
mov
sub
outsl
shrl
roll
cmc
mov
push
insl
mov
or
jmp
out
pop
mov
pop
iret
push
pop
fstl
sub
fnstsw
shll
scas
push
adc
add
and
leave
fisttps
or
cmpsb
test
sbb
inc
bound
and
fistl
in
clc
jmp
cld
mov
stos
or
jns
or
xchg
cld
pop
pop
jo
xor
or
xchg
cmp
sti
pushl
test
test
mov
ror
fbstp
call
or
imul
add
sbb
jp
jge
punpckhdq
arpl
sti
add
mov
and
das
in
add
and
dec
call
in
mov
mov
in
lods
xchg
sub
in
sub
and
loopne
pop
test
jo
outsb
arpl
outsl
add
in
adc
pop
push
aaa
or
jne
rorb
mov
movsb
rcrb
pop
int3
leave
ds
dec
icebp
xor
fwait
cld
push
icebp
mov
int
aam
mov
movsb
enter
sar
dec
and
cmp
push
mov
cli
or
jp
mov
std
push
nop
in
stc
fwait
push
daa
and
or
mov
sbb
aam
aas
xchg
cs
mov
pop
xchg
lods
pop
popa
test
int3
adc
jmp
lds
nop
mov
jb
es
je
outsb
cmp
and
cmp
add
sbb
push
lods
mov
inc
lret
in
out
dec
and
push
dec
jge
sub
jl
lret
shl
lds
and
aaa
push
mull
add
pop
sub
cmp
mov
adc
insb
dec
sub
and
push
std
sbb
add
cltd
data16
addb
ja
fs
pop
inc
out
aad
or
aam
inc
xor
sbb
aad
xchg
cwtd
iret
lret
mov
push
add
cmp
jne
fcmovnbe
or
dec
add
mov
dec
jnp
jo
cmpsl
and
xor
sahf
push
leave
jae
mov
mov
sub
inc
lcall
cmc
xor
xchg
dec
pusha
mov
mov
call
xchg
sahf
mov
xor
arpl
inc
icebp
push
mov
lret
jmp
test
cmp
xor
fidivl
arpl
sti
dec
shll
in
stos
xlat
pop
mov
push
xor
rcrl
imul
repz
xchg
divb
xlat
stos
mov
adc
mov
sub
out
mov
or
xchg
test
pop
shrl
xor
daa
xlat
dec
adc
mov
cmp
push
std
xchg
pop
push
add
xor
xchg
arpl
jns
sbb
or
enter
mov
outsb
loopne
cmpl
sbb
cmp
call
mov
push
fildll
js
js
in
push
insl
hlt
and
jae
cmp
bswap
mov
dec
mov
loopne
imul
ret
das
sbb
fistpl
add
sbb
inc
roll
jae
lahf
mov
iret
dec
jnp
mov
frstor
movsb
dec
shr
inc
or
mov
cwtl
dec
push
shlb
xor
xor
imul
rorl
fwait
pop
sahf
lahf
xchg
mov
lods
add
les
flds
mov
pop
pop
mov
mov
mov
mov
call
lahf
imull
data16
scas
add
cltd
pop
outsb
mov
cmpsl
sbb
jge
sub
icebp
aam
or
dec
xchg
push
sbb
push
push
outsl
notb
outsl
and
data16
cld
adc
xchg
or
mov
lds
jp
mov
sahf
icebp
push
aad
fdiv
push
iret
test
add
fcmovu
cmp
lods
rcrl
or
int
popf
add
jns
cmp
in
mov
jge
pusha
pop
in
sbb
jg
pop
or
loop
loop
jg
addr16
loop
or
xchg
stos
push
scas
inc
popa
jge
stc
adc
mull
sbb
flds
mov
jle
aam
in
jnp
call
jge
loopne
jne
adc
cld
mov
repz
sub
cltd
rorl
mov
shr
adc
stos
inc
std
call
push
rdmsr
xchg
ljmp
push
into
das
xchg
mov
push
cmp
lret
sub
popa
mov
sub
shl
sub
fisttpll
std
cld
nop
inc
mov
jg
popa
rcrl
sti
insl
xor
arpl
sbb
inc
or
out
movsl
xor
xchg
fcmovnbe
mov
es
adc
rcll
out
lods
push
js
imul
inc
jne
lahf
das
sbb
cs
repz
stos
or
jl
push
xchg
inc
mov
dec
pop
pop
fmuls
cmpb
or
sbb
adc
iret
int
out
or
shrb
xchg
movsl
sub
push
xor
cmc
sbb
sti
fdivrs
daa
pop
push
add
add
xlat
cmp
test
sub
jge
aas
dec
dec
pop
and
pop
into
mov
sbb
xchg
sub
adc
push
mov
lret
mov
add
lret
in
lods
das
cmp
sbb
fs
adc
in
es
push
inc
xlat
xlat
jmp
dec
mov
mov
inc
push
add
roll
notb
iret
jnp
popa
mov
mov
xor
ja
fwait
xchg
push
sub
push
inc
shlb
jb
mov
mov
ret
fisubs
xchg
rcl
or
pop
fimuls
jo
loope
daa
lock
mov
sahf
adc
jp
addr16
cs
lds
push
fidivs
sbb
fcmovnu
xchg
inc
mov
mov
push
stos
lods
sbbl
stc
sbb
in
cmp
push
js
fldl
or
mov
pop
jecxz
and
mov
dec
fbstp
hlt
sub
xor
fiaddl
insb
nop
mov
je
jno
hlt
mov
int3
insb
aaa
dec
jbe
cmp
out
adc
jno
sbb
popa
jecxz
test
and
dec
or
inc
lods
push
or
les
aaa
subl
loopne
push
fcmovne
cmpsl
cmpsl
scas
out
aad
popf
lods
call
push
popa
dec
out
mov
in
xchg
inc
mov
cmp
shll
inc
pop
cltd
cmp
mov
pop
js
and
cmc
hlt
mov
aad
sub
dec
sti
jmp
loopne
xor
inc
mov
pop
mov
add
and
xchg
push
and
xor
push
lret
mov
xorb
sbbl
lea
or
jmp
sarb
aaa
test
je
mov
mov
in
movsb
sub
sahf
cmpsb
lret
mov
popa
stos
inc
ds
mov
and
xor
loope,pt
sbb
stc
jno
mov
rcr
pop
dec
sub
jl
xor
pop
ljmp
fimull
and
mov
fistps
push
ja
jle
das
jge
cmp
fcompl
jmp
les
cltd
lret
fadds
push
jo
test
enter
mov
pop
mov
pop
movsl
stos
mov
dec
pop
les
dec
pusha
cmp
andb
or
xchg
pop
push
test
jmp
dec
mov
mov
add
mov
mov
pop
pop
xor
lock
aas
fadd
and
arpl
fstl
push
jns
jb
jecxz
popa
pop
ror
fwait
scas
test
int
shl
xrelease
inc
and
cmp
sbb
dec
inc
mov
xor
cmp
enter
call
loop
test
scas
dec
loope
cmp
push
adcl
xor
pop
fsubs
nop
push
lea
mov
and
xchg
out
roll
push
aas
ljmp
pop
xor
mov
mov
dec
rcr
mov
add
scas
mov
ljmp
int3
mov
lret
push
dec
jae
jae
and
mov
inc
inc
pop
leave
hlt
push
pop
fiaddl
xchg
mov
mov
pop
in
popf
adc
mov
pop
in
je
xor
ficompl
push
jo
into
cmpl
scas
cmp
addr16
mov
addr16
mov
xor
in
push
and
jg
ret
mov
cmpsl
loopne
push
out
mov
sub
ljmp
ljmp
sahf
xchg
xor
jns
cmpsb
imul
lret
frstor
mov
outsw
cmc
pop
push
inc
shr
mov
mull
addr16
pop
sbb
loope
push
nop
xchg
hlt
jmp
and
jle
aad
roll
add
sub
clc
stos
xor
aad
sti
imul
cmp
subb
and
cld
xor
sbb
iret
adc
pop
fwait
movsb
stos
imul
jp
jecxz
sub
adc
mov
xor
nop
sbb
insl
stos
call
mov
mov
xchg
aam
xor
xchg
ja
add
loopne
popf
cmp
fwait
push
jmp
das
mov
fidivs
push
xor
cmp
shll
adcl
adc
nop
lea
pusha
mov
aam
out
ja
aad
iret
mov
and
repnz
jg
imul
loope
mov
mov
icebp
pop
stc
adc
pop
call
mov
jmp
mov
push
xor
add
mov
pop
stc
add
or
insl
or
push
jb
xchg
sbb
mov
sub
shrb
imul
mov
dec
push
test
lds
xor
cmpsb
or
cltd
cmpsb
pop
sbb
add
mov
clc
jge
addr16
rcll
aam
sub
cmpl
jmp
inc
and
cwtl
jmp
lods
inc
or
mov
mov
shll
inc
inc
xchg
fdivrp
and
and
jnp
ja
ret
mov
push
outsb
dec
mov
sbb
fwait
insl
fs
ss
pop
inc
jne
adc
lcall
lahf
js
inc
sub
mov
jae
ret
jmp
or
repnz
cmp
popf
mov
pop
push
xchg
outsl
add
popa
and
jnp
jb
inc
push
inc
adc
into
jmp
push
and
test
push
mov
lret
add
inc
das
xor
mov
dec
lock
in
xchg
add
jns
or
sbb
and
fistps
pop
loopne
sbb
mov
add
adc
and
into
push
or
pop
cwtl
cmp
add
mov
jne
push
pop
dec
push
loopne
testl
insb
hlt
add
lret
imul
and
lds
push
pop
pop
daa
inc
xor
sti
rcll
ds
sub
das
int
xchg
mov
adc
mov
call
xor
push
jne
addl
mov
repnz
aaa
lea
jmp
xchg
aad
mov
mov
jge
movsb
fisubs
pop
cmc
call
mov
dec
ret
add
gs
inc
pop
pop
aaa
or
sahf
ret
jmp
sti
inc
xor
pop
sub
paddusw
std
xor
addl
mov
xor
push
xor
scas
jno
jne
idiv
fmuls
icebp
dec
sub
and
in
add
pop
mov
fs
jbe
sbb
lret
int3
sbb
push
jge
add
dec
push
add
push
mov
inc
push
loop
mov
out
mov
pop
daa
pop
mov
xchg
fwait
cmp
adc
test
and
int
test
xchg
jmp
add
mov
push
fcmovb
cmp
imul
push
gs
ret
ljmp
sbb
stc
bound
pop
into
push
push
imul
hlt
jl
pushf
mov
jb
jecxz
mov
jns
or
ret
test
xchg
rcrb
mov
shll
ljmp
mov
outsb
inc
mov
data16
cli
lret
fbstp
mov
popa
lret
push
incb
mov
sbb
inc
leave
int
retw
arpl
scas
js
mov
push
clc
or
mov
xor
fsubrs
xor
push
dec
popa
mov
je
or
sete
jecxz
jns
lahf
xor
call
add
test
fadd
lock
sub
push
mov
or
dec
pusha
xor
adc
xor
add
xchg
fstpl
cmp
es
aas
push
sbb
mov
mov
xchg
push
int3
cltd
lock
orb
add
rorb
and
fmulp
pop
jmp
icebp
dec
sbb
dec
jns
mov
stos
insb
loop
rcrb
cwtl
or
xor
orl
pop
scas
ja
loopne,pn
push
mov
arpl
mov
loopne
testl
pop
shll
push
cs
push
pop
pop
mov
xchg
pop
shll
sub
stos
rolb
jge
mov
out
jbe
ss
add
loopne
push
movsl
lock
les
test
int
dec
adc
sub
mov
out
lea
mov
mov
inc
cmpsl
ss
jb
aas
sarb
lret
adc
into
mov
mov
int3
aaa
int3
sub
out
incb
push
in
jmp
pop
or
mov
sub
dec
xor
mov
jne
mov
adc
dec
in
ds
or
stos
lahf
cmove
xchg
mov
mov
or
sub
jge
cmp
pusha
jb
push
daa
fistpll
scas
jge
jl
out
and
mov
mov
fwait
sub
pop
stos
cmp
xacquire
inc
mov
and
jo
pop
fstps
mov
or
dec
in
mov
dec
stc
into
cwtl
mov
mov
mov
xchg
inc
mov
mulps
cmpsb
push
xchg
and
adc
pop
cmp
outsl
mov
xchg
nop
hlt
mov
jne
and
mov
stos
fidivl
lret
cmp
fs
add
xlat
in
lahf
cmp
nop
enter
and
pop
and
push
pop
mov
loop
dec
xchg
inc
sti
pop
xchg
or
inc
adc
dec
outsb
std
popf
jl
nop
je
ret
mov
xor
mov
inc
hlt
dec
pop
cmpsl
cmc
add
int3
es
mov
daa
jmp
in
sbb
fidivs
mov
xchg
adc
push
push
and
push
inc
and
cs
and
in
fwait
add
mov
pop
fld
xchg
sub
iret
or
repz
cmpsb
inc
adcb
nop
mov
xchg
dec
pop
das
ficompl
adcb
or
jnp
add
insl
inc
int3
in
shl
ja
or
xor
inc
push
cmpsl
rcrb
xchg
fidivrs
scas
nop
mov
cltd
push
mov
adc
addr16
lods
mov
xchg
inc
out
jge
notb
mov
inc
dec
jbe
sub
fs
mov
outsb
out
sub
jmp
cs
and
outsl
hlt
icebp
adc
xchg
pop
ljmp
mov
aaa
or
ret
roll
push
and
fstpl
sbbl
js
cld
add
dec
popa
dec
inc
repz
push
ja
cmpsl
add
sub
and
outsl
jge
fists
shr
arpl
mov
dec
loopne
pop
add
push
jb
or
fiadds
icebp
push
int3
lret
scas
rcrl
mov
mov
sub
add
pushf
data16
daa
sub
inc
outsl
lahf
dec
in
mov
xchg
ss
jb
stos
test
jnp
movsb
pop
pushf
js
push
mov
in
add
xchg
jmp
sub
pusha
jno
lret
jnp
xor
ret
and
jo
mov
in
aam
add
inc
sahf
out
mov
pop
inc
sbb
gs
adc
jbe
jb
movsl
sub
dec
imul
and
cmc
shl
daa
ss
aas
inc
push
ds
adc
or
out
xor
push
mul
mov
push
adc
out
rclb
fisubrs
jns
or
xchg
xchg
aas
adc
mov
fisubrl
xor
in
ret
int
pop
ja
int
inc
sbb
or
dec
call
out
xchg
lret
insl
inc
mov
pop
add
jb
push
sti
jo
ds
inc
xchg
pop
mov
sub
bound
jge
jae
ja
mul
push
sub
lock
lret
inc
adcl
inc
aas
mov
dec
stc
sarl
pop
pop
aas
aas
jmp
loop
pusha
dec
xchg
in
pushf
icebp
xlat
inc
and
jp
sbb
bound
xor
es
dec
es
daa
adc
nop
add
notb
and
mov
inc
sub
cmp
cmpsl
adc
or
cmp
push
push
jle
sti
dec
jp
sbbl
hlt
dec
mov
mov
pop
test
jle
inc
mov
push
testb
inc
cmc
loope
in
loopne
pop
aam
shrb
test
adc
mov
ret
lods
orl
cld
fiaddl
jb
shlb
filds
int3
insb
movsb
jp
push
and
push
sbb
mov
sahf
sub
fdivr
sbb
cmp
in
lahf
mov
push
xor
adc
stos
mov
inc
scas
push
and
sbb
aas
rdpmc
mov
mov
movsb
imul
inc
imul
mov
std
push
xchg
shrl
push
repnz
mov
mov
inc
pop
jl
mov
adc
test
push
jae
adc
ss
mov
aaa
mov
cli
ljmp
cmpsl
cmc
ja
mov
les
or
loopne
jb
xchg
aad
js
cmp
test
and
adc
fs
stc
stc
mov
aas
or
jge
das
mov
daa
loop
cld
out
pop
idivb
cltd
out
adc
dec
xlat
fdivrl
insl
scas
lea
push
lods
cmp
outsl
lock
and
cltd
mov
add
pop
push
btcl
icebp
popf
dec
aas
push
xchg
cmp
cs
lea
andb
movsb
out
and
stos
inc
fcomps
cwtl
or
or
dec
pop
mov
lea
mov
leave
dec
xlat
mov
pop
dec
and
mov
xor
pop
rclb
imul
enter
mov
iret
cmpb
ret
outsb
stos
stos
in
cwtl
insl
icebp
icebp
fmulp
cmpsl
fldl
fs
or
je
xor
cmpsl
add
cwtl
mov
idivb
iret
mov
lret
push
data16
stc
jno
xor
mov
push
pushf
mov
cmp
add
shrb
iret
push
inc
sti
rclb
dec
repnz
push
or
popf
lahf
mov
jp
ds
cmp
xor
cmp
out
test
aam
cltd
in
or
stc
mov
loop
cmp
cld
lcall
mov
xor
sbb
inc
push
and
or
mov
push
jg
icebp
adc
pop
push
gs
inc
pop
adc
mov
adc
jl
mov
call
fisttpl
not
shlb
jb
lock
mov
in
mov
in
mov
gs
fsubr
jp
pop
adc
mov
inc
sti
inc
xchg
rcll
scas
sbb
cmp
jmp
xchg
fildl
mov
shrl
out
lahf
lock
movsl
sahf
xchg
jb
popf
mov
loopne
out
pop
pop
xchg
cmc
and
roll
nop
jmp
dec
xchg
iret
xchg
cs
pop
and
das
shll
inc
leave
imul
pop
dec
pop
adc
jne
inc
cmpsb
pop
mov
push
mov
popa
subl
cmp
push
aad
cmp
xchg
hlt
or
adc
mov
sub
sbb
add
int3
lahf
add
sti
rorb
mov
std
inc
shrb
int3
pusha
daa
and
popf
sbbl
in
out
mov
arpl
jecxz
inc
xchg
out
in
loope
dec
cmp
daa
enter
ja
and
out
dec
mov
aaa
test
ror
stos
cltd
faddp
add
imul
dec
dec
ds
mov
imul
push
push
loop
pop
mov
jg
insb
mov
jg
popf
stos
inc
mov
xor
adc
or
ret
cmovg
stc
scas
fsubl
add
or
or
frstor
sub
xor
inc
loope
adc
jae
scas
xor
in
ffree
xor
gs
cmpl
jo
inc
aad
test
cld
push
in
repnz
loop
pop
mov
push
push
or
sub
inc
loopne
mov
and
imul
xor
jae
mov
cmc
cs
xchg
lcall
test
add
fidivrl
push
inc
dec
inc
popa
pop
sbb
out
les
mov
imul
clc
out
adc
jnp
sar
pop
repz
or
or
fidivs
adc
or
pop
or
test
push
pop
xorl
outsl
ds
andb
ret
dec
mov
clc
ljmp
pop
pushf
and
jmp
jmp
xchg
sub
push
sti
cli
mov
arpl
jle
cmp
insb
cmc
stc
aas
or
in
popf
aaa
pushf
fdivrl
jns
xor
test
xchg
push
pop
sahf
sbb
les
add
js
adc
jb
sub
mov
int
aaa
mov
ja
mov
mov
scas
mov
daa
lcall
mov
xor
pop
xor
icebp
inc
icebp
and
jno
cmp
dec
movsw
loop
mov
movsb
mull
sbb
push
mov
cmp
mov
jle
mov
mov
in
inc
fcomps
imul
jecxz
mov
movsl
mov
ret
sub
in
sub
inc
mov
mov
add
cli
mov
cmp
nop
and
mov
push
pop
or
rorb
or
rorb
mov
mov
cmp
lcall
cmp
jns
cmpsl
jmp
adc
push
shlb
lahf
inc
push
sbb
aam
push
xor
je
sbb
sub
inc
fwait
stos
js
nop
sub
sbb
add
stc
jge
mov
or
add
mov
sbb
test
clc
leave
jb
fsubrs
mov
mov
fisubl
pop
fs
add
popf
pop
push
aam
shrb
sahf
inc
dec
add
es
push
rorb
push
inc
xchg
add
in
sub
jmp
lods
js
pushl
std
xchg
cmpsb
push
inc
push
push
roll
aas
add
filds
cmp
neg
adc
push
adc
push
cmp
sbb
sbb
mov
sub
jae
add
mov
pusha
in
inc
adcb
jno
dec
bsr
mov
lock
sti
jbe
icebp
push
pop
sbb
mov
ficoms
shlb
rorl
mov
add
lret
pop
test
adc
test
push
jle
repnz
fnsave
dec
sbb
stos
stos
adc
jae
push
xor
fisubrl
xor
imul
dec
dec
ljmp
mov
movsb
mov
jo
adc
xchg
mov
jecxz
xchg
lock
cmpsl
movsb
sub
mov
cs
setns
sbb
lock
cwtl
pushf
mov
fldl
push
movsl
std
lods
xor
cmp
xchg
push
sub
jge
ja
xor
jnp
imul
and
idivb
dec
dec
insb
sbb
sbb
inc
mov
mov
outsl
ret
stc
inc
and
nop
cmp
aaa
xor
faddl
andb
push
int3
jg
ljmp
or
inc
shlb
xchg
clc
sbb
pop
cwtl
fs
pop
sub
ds
and
loop
ret
sbb
je
enter
adc
ja
aaa
add
jo
inc
shrl
and
inc
adc
clc
shrb
mov
or
cmpsl
cltd
popa
enter
arpl
pop
sti
xor
xor
pusha
add
jns
std
pushf
push
stos
shr
xlat
dec
imul
out
das
xor
push
and
xchg
sbb
cwtl
shrb
mov
xor
sub
outsl
sbb
rcrl
push
and
mov
pop
jnp
bound
jo
mov
inc
cld
cmp
fs
adc
out
aad
popf
dec
cmpsl
pop
shrl
lahf
lea
dec
push
xchg
xor
pop
add
inc
rorl
and
ja
mov
add
int
ss
aam
or
sub
mov
mov
or
inc
repz
mov
sub
addr16
lret
dec
idivb
sbb
into
add
dec
sub
mov
and
in
sahf
xor
push
imul
inc
outsb
sahf
mov
jmp
push
jp
mov
xchg
mov
lahf
mov
mov
mov
sar
fldcw
pop
orb
sbb
pushf
xchg
sbb
test
mov
dec
mov
mov
fadd
stos
into
mov
addl
xchg
dec
dec
into
pop
add
aad
add
addr16
lea
xchg
shll
mull
and
fidivrl
mov
jecxz
dec
int
pop
mov
shl
pop
add
popa
push
adc
aaa
or
cltd
sar
rcll
out
push
jp
lcall
pop
imul
xor
fdivs
xchg
mov
dec
push
inc
add
sub
shll
or
les
pop
and
mov
and
ljmp
dec
push
insb
inc
mov
out
cmp
or
fs
arpl
pushf
cltd
adc
mov
fldcw
inc
stos
mov
je
aas
subb
adc
inc
mov
in
outsb
jg
cmp
sarl
enter
xor
nop
adc
xor
jl
and
lret
les
rep
xor
add
and
testl
insb
andb
adc
call
cltd
es
push
dec
xor
daa
sbb
repnz
jle
push
stos
inc
dec
arpl
jge
inc
dec
popf
stos
mov
sub
cmp
cmp
mov
mov
arpl
adc
aas
int
pop
sbb
sub
xchg
dec
jl
mov
and
jne
aas
ret
std
in
mov
cwtl
jae
sub
cmp
in
xchg
test
fisubl
jge
out
mov
fcompl
loope
bound
push
jns
xchg
adc
fcompl
sbb
stc
jb
xchg
je
cmp
arpl
add
aam
sbb
stos
aad
mov
xchg
dec
outsl
pop
mov
outsl
pop
adc
daa
mov
jae
and
cs
pushf
add
lods
jge
pop
mov
stos
cmpsb
push
mov
mov
and
test
sbb
lea
jbe
mov
dec
mov
cs
out
sbb
aad
cwtl
sub
pop
aas
fisubl
dec
lret
stos
mov
sub
xor
bound
pop
jmp
test
repnz
inc
outsl
mov
loop
or
jb
out
jg
inc
mov
ja
out
cmp
cmpsb
push
scas
loop
roll
or
mov
inc
cmpsb
int3
mov
ffree
xchg
pop
sbb
in
cmp
xchg
sbb
or
xlat
mov
sub
out
pop
push
call
cmc
icebp
inc
loopne
cltd
loope
hlt
test
jl
xor
inc
or
push
and
jl
add
pop
aas
xor
jne
stos
loopne
pop
dec
lret
push
dec
lock
pop
cs
add
jmp
jno
andb
insb
leave
test
aas
adc
popf
rol
and
cld
push
jnp
xadd
leave
out
xchg
jg
mov
pop
cmc
or
lcall
testb
inc
dec
sub
jno
lods
aaa
jmp
fldt
sub
xchg
nop
or
push
int
cltd
ss
xor
insl
jno
in
xor
sbb
out
mov
sbb
stc
pushf
sbb
aad
out
xlat
roll
cmpsl
fs
mov
xchg
sbb
std
fmull
fwait
ljmp
out
push
out
addb
xor
arpl
dec
pop
pop
pop
lods
xlat
xchg
sti
outsl
testl
cld
cmp
cmp
push
test
leave
pop
hlt
fisttps
hlt
fs
clc
xchg
xlat
and
int
jbe
cmp
leave
mov
push
addr16
jae
or
mov
fiaddl
arpl
dec
movsb
pop
sub
or
stos
mov
clc
out
test
xor
push
adc
std
jnp
int
enter
test
loope
loop
jns
movsl
lahf
xorl
je
loope
lds
imul
xchg
jns
sbb
fwait
xchg
and
pop
out
or
fst
cmpsl
ljmp
jp
add
cmp
xchg
adc
sub
call
popa
mov
enter
aaa
mov
ds
push
push
jb
and
gs
or
into
cmp
test
adc
repnz
jecxz
ja
sub
xchg
dec
dec
mov
add
in
fs
ficoms
stos
test
clc
int
loope
sti
pop
jae
cmp
pusha
and
xchg
into
arpl
arpl
xchg
lods
pop
jno
mov
adc
mov
aas
sub
jnp
jmp
and
jmp
xchg
xchg
cmc
stc
daa
mov
adcb
mov
movsl
dec
into
dec
sub
test
push
xchg
cmp
pop
inc
adc
pusha
jle
jle
mov
push
cmp
mov
pop
sbb
clc
sahf
pop
pop
hlt
imul
push
lret
sbb
mov
addr16
add
mov
out
mov
cltd
add
lods
scas
inc
dec
xor
xchg
xor
mov
sub
clc
iret
inc
jmp
imul
not
cmp
sbb
jnp
lock
int
jecxz
pop
fcomi
bound
sbbl
jno
test
outsb
sbb
inc
test
pop
cli
lcall
inc
fistpll
subl
test
popa
lods
out
out
push
mov
cmp
mov
jb
pusha
adc
xchg
xchg
test
pushf
push
jl
out
sub
pop
dec
outsb
stc
das
mov
lds
aas
xor
ret
and
pop
addr16
fwait
jmp
adc
jl
xchg
call
insb
push
aas
sti
xchg
jne
dec
cmpsb
ljmp
insb
or
int
pop
shl
popf
xchg
dec
fcom
xchg
movsl
ficoms
xor
negb
cmp
iret
ss
sti
mov
jle
adc
das
dec
mov
call
addr16
mov
in
test
push
andb
ds
mov
es
out
xor
or
add
popf
out
pop
mul
xchg
push
fcomip
sbb
xchg
insl
add
pusha
out
nop
jmp
fildll
testl
add
sub
fstps
ss
rol
movsb
and
or
sub
jmp
inc
test
xor
pop
fpatan
cmpsb
repnz
fwait
mov
sbb
repnz
lods
mov
imul
xchg
and
inc
mov
add
push
pop
inc
frstor
daa
jmp
pop
xchg
dec
inc
adc
loop
cmp
mov
aaa
jae
lret
decb
popf
gs
adcl
ret
jo
mov
fwait
in
cmpsl
or
popf
stos
ret
pop
jp
adc
lock
filds
shr
sub
shlb
add
mov
insl
into
scas
add
mov
inc
sti
dec
ds
dec
push
aas
iret
out
out
xlat
jae
in
inc
xchg
push
inc
popf
subl
cmpsl
mov
scas
ret
sbb
outsb
or
lcall
mov
and
push
inc
mov
or
rcl
popf
mov
xor
sub
std
lock
xchg
pushf
adcl
cmp
add
aam
xlat
dec
outsl
cmp
mov
push
popa
or
push
mov
sbb
imull
dec
sbb
stos
inc
repz
iret
sbb
imul
xor
add
rcrb
icebp
cmp
sbb
push
lods
inc
mov
out
xchg
xlat
pop
xchg
dec
jmp
adc
jge
aam
sub
push
sub
xchg
lds
cmp
jae
ljmp
or
push
mov
loop
insb
fsubs
lahf
mov
mov
pop
add
and
jno
dec
shll
scas
mov
add
mov
filds
mov
or
push
movl
adc
cli
inc
fistpl
shll
das
imul
fistpl
mov
or
xchg
imul
jae
mov
or
enter
stos
mul
sbb
and
cmp
aad
ja
inc
xlat
dec
pop
adc
fidivl
out
dec
inc
jl
jne
loopne
dec
and
push
subb
das
es
loop
fistpll
jb
repnz
pop
jecxz
sub
sbb
sbb
xor
sti
push
jmp
mov
cs
mov
scas
adc
shlb
and
mov
pop
and
sets
add
stc
and
xchg
addr16
hlt
and
and
enter
or
cmp
dec
mov
inc
add
cvtpi2ps
outsb
ror
push
xorl
mov
sbb
pop
adc
pop
pop
in
cmp
xlat
add
add
lret
jne
sub
int
mov
enter
inc
pusha
es
jns
xor
pop
and
inc
push
sub
mov
cli
int
sbb
and
pop
or
pop
lret
jmp
xor
push
into
pop
lock
push
add
cmc
mov
mov
push
stc
fstps
cmp
bound
lods
and
in
pop
bswap
movsb
jg
into
and
test
push
and
adc
mov
and
and
loopne
std
in
xor
and
add
and
adc
jns
mov
test
push
inc
sub
lret
andl
addr16
js
and
lahf
pop
sbb
icebp
push
scas
and
test
adc
and
or
icebp
dec
fdivl
mov
fidivs
ss
mov
fnstcw
or
inc
sub
scas
movsb
outsl
mov
faddl
pop
mov
in
shlb
in
test
adc
mov
mov
dec
mov
test
jns
push
loop
mov
sbb
sahf
inc
mov
xchg
leave
aaa
loopne,pn
xchg
and
cmc
les
mov
cli
in
xchg
xchg
test
fimull
scas
lods
pop
or
stos
lcall
pop
sbb
inc
gs
jnp
or
aad
leave
add
pop
aaa
sbb
push
in
js
sarl
adc
rcl
fcmovnb
pop
sub
insl
ja
pop
arpl
mov
inc
pop
jb
add
roll
mov
or
inc
insb
mov
jg
inc
mov
cmc
cmc
shll
xor
push
cmc
and
test
hlt
icebp
sub
cmpsl
cmpsb
xchg
mov
mov
pop
mov
lcall
cli
cmpsl
xor
fwait
push
adc
lods
negl
dec
arpl
push
sub
and
arpl
cwtl
hlt
movsb
pop
mov
add
or
or
imul
mov
out
cld
in
shlb
cmpsl
push
ret
mov
addr16
jae
out
stos
addb
mov
faddl
sbb
jecxz
js
int3
scas
mov
cmpsb
mov
scas
sbb
ret
xchg
clc
or
push
je
das
ja
dec
push
inc
add
shrb
pop
dec
or
xor
ljmp
mov
push
in
sub
lods
xor
mov
dec
into
ret
fldt
std
cwtl
repz
dec
dec
mov
lret
into
sbbl
sub
jle
test
dec
sarb
fisubl
cmpsl
xor
cmp
sub
sub
mov
lds
mov
mov
fisttpl
stos
inc
sub
sbb
sub
pop
fstpt
ja
or
push
mov
jmp
fstpl
push
pop
fstpt
jbe
cmp
cld
outsb
jp
mov
dec
or
pop
xchg
daa
in
insb
and
shrb
leave
mov
je
rcl
xchg
push
sub
imul
mov
jge
imul
xchg
xlat
cmpsl
aas
sbbb
cmp
push
jae
cli
cld
gs
imul
pop
mov
fsubr
test
cltd
cmp
jge
dec
sub
pop
cmp
adc
pop
mov
sbb
call
icebp
jmp
sbb
aaa
lahf
stc
scas
add
jne
cmp
mov
test
xchg
jecxz
jbe
ss
stos
or
mov
outsl
std
je
ret
fcomi
jmp
sbbb
pop
sub
add
lcall
loope
xchg
mov
insb
push
adc
cmp
add
dec
call
je
repz
ja
sahf
aas
dec
adc
imul
test
push
bound
pop
fmull
push
in
mov
xlat
cltd
movsb
wbinvd
cmp
cmp
dec
addr16
push
iret
into
ss
aas
lods
fstpl
rcr
lahf
mov
and
fimull
xchg
in
repz
push
lea
jmp
inc
xchg
xchg
scas
iret
adc
or
cmpsb
stc
sub
push
test
inc
lods
xchg
add
loopne
xchg
movsl
dec
incb
jle
cmp
imul
push
rclb
std
xchg
arpl
jo
push
xor
lret
lods
xchg
or
xor
sarb
ret
cmp
cmp
rorl
jbe
mov
dec
pop
push
jb
mov
in
add
stos
push
sbb
and
shll
mov
outsl
sbb
xor
sbb
sbb
cmp
out
pop
pop
push
stos
fwait
xor
test
xor
ret
in
or
xchg
or
imul
sbbb
scas
movsl
jae
int3
mov
dec
ljmp
repnz
sub
push
inc
sbb
and
test
ror
mov
shl
loop
dec
aas
std
je
push
and
jl
add
jl
jge
and
push
adc
push
xchg
jnp
ret
sub
cld
mov
ret
jbe
fs
cwtl
movsb
cs
mov
lcall
data16
sub
add
inc
call
test
pushf
leave
out
and
mov
nop
jb
js
std
int3
xlat
les
fdivrs
sti
into
jo
push
push
cmp
or
es
dec
sbb
popl
push
or
arpl
push
stc
add
jl
mov
ljmp
push
fwait
mov
mov
lret
cmp
shll
fnstenv
in
fdivp
and
outsb
repnz
cld
adc
js
stos
lahf
and
xor
xor
cmc
or
icebp
cwtl
loopne
sub
mov
fdivs
xchg
pop
pop
jbe
mov
inc
lds
or
movsl
add
loopne
out
loop
xchg
add
and
lds
and
ficoms
arpl
mov
jle
pop
and
aad
jbe
mov
xchg
pop
inc
mov
stc
jne
and
mov
mov
int3
xchg
mov
push
fmuls
mov
push
jae
pop
sbb
in
sbb
mov
lods
popf
cmp
int3
movb
lcall
int3
mov
adc
xorl
or
jle
fs
je
or
mov
add
add
cmp
out
dec
mov
sbb
test
adc
mov
in
out
push
pop
adc
fadd
imul
fimull
add
iret
inc
xchg
popf
inc
mov
push
and
stos
xor
sbb
test
in
mov
dec
jb
int
and
ret
out
loopne
ljmp
cmp
test
sbb
or
dec
test
sub
es
adc
loop
outsl
ficompl
cmp
sbb
pop
sbb
out
imul
cs
dec
sub
inc
je
mov
scas
mov
xor
andl
ret
fcompl
push
bound
mov
leave
add
jmp
out
je
movsl
sbb
sub
xor
test
and
jge
cmp
out
push
inc
loopne
out
out
repz
daa
sti
fdivr
cmp
insb
and
push
andb
jo
mov
and
or
ret
push
pop
clc
loop
inc
cli
and
int3
dec
dec
add
add
add
jge
mov
shll
mov
dec
jecxz
loop
push
jle
pop
pop
mov
mov
dec
sbb
inc
int
outsb
mov
push
ja
fsts
les
or
pop
xchg
sub
fnstcw
mov
adc
call
out
add
mov
or
lock
jmp
xchg
leave
sub
arpl
stc
daa
and
aam
mov
ja
push
jge
xor
or
movsb
xchg
sti
cmpsw
mov
push
mov
data16
test
dec
lret
fcomps
std
sub
repz
jno
out
cmp
sahf
loope
jmp
jmp
je
jmp
add
cwtl
in
pop
cmc
mov
les
push
push
insl
or
pop
jnp
sahf
mov
sub
es
imul
shrb
fprem1
std
xchg
ret
mov
outsl
jb
mov
sarb
xchg
pop
data16
add
loop
ret
into
dec
mov
in
into
pop
lea
and
add
fs
test
mov
fwait
rorl
out
int3
cwtl
mov
sub
push
popa
ret
adc
jle
loope
dec
clc
xor
sub
jae
xchg
mov
aaa
les
mov
lcall
aaa
testl
sub
push
xchg
cmp
loop
xlat
lds
mov
ret
jg
inc
pop
mov
test
movsb
dec
out
enter
rcrb
pop
pop
ss
movsl
adc
lret
jns
push
dec
dec
jns
inc
mov
pop
mov
and
mov
cmpsl
mov
std
mov
dec
call
orl
inc
insb
inc
add
in
ja
pushf
cli
dec
pop
ljmp
out
fstpl
stos
mov
addr16
jecxz
push
mov
out
cmp
mov
jne
and
pop
pop
pop
in
sub
lea
mov
ret
xchg
imul
mov
mov
inc
dec
or
aad
lods
and
cmp
mov
mov
push
xlat
cwtl
mov
sbb
jl
out
cld
in
loop
mov
push
add
add
pop
cmp
push
sub
mov
mov
jbe
or
rcrb
pop
jmp
xchg
sbb
movsb
sub
cs
add
cmpl
cmp
cmp
jle
adc
cmp
js
fcom
dec
push
cltd
jns
ficomps
jae
sub
in
or
shrb
stos
cli
stos
lret
sub
fdivr
xchg
push
inc
das
dec
mov
and
lods
push
pop
xor
or
lret
sbb
mov
insb
ror
mov
mov
imul
dec
push
fdivrs
scas
jae
mov
push
cwtl
sub
lahf
and
sbb
xchg
add
cmp
es
mov
xchg
jge
iret
outsl
int
into
xor
pushf
outsb
mov
ret
int
repz
sub
in
prefetch
or
pop
add
movsb
fxch
pop
jg
leave
sub
sahf
pusha
leave
out
adc
sarb
lret
and
daa
ret
mov
fcmove
add
sub
testb
mov
push
je
shll
insl
mov
and
push
push
cmpsl
sub
push
mov
hlt
inc
push
jo
loop
fcmove
jmp
adc
sub
pop
sbb
sti
sbb
dec
adc
xchg
push
ss
jg
mov
js
adc
mov
inc
inc
sbb
cmp
ja
dec
adc
and
adc
push
dec
les
pushf
ja
add
jo
shrb
xor
mov
pusha
xorl
push
jb
jae
popf
aaa
or
xor
pop
js
test
sti
xor
je
jo
fcoml
sub
std
ret
dec
cmp
ret
leave
and
xchg
cwtl
loop
out
mov
js
xchg
test
xor
arpl
xchg
test
data16
lidtl
not
in
pop
les
pushf
out
cwtl
addb
jbe
in
jmp
mov
scas
sti
or
jb
es
pop
push
pop
push
rolb
sbb
cltd
sub
loopne
jae
cmp
xorb
ja
jo
subb
lods
or
push
mov
adc
or
mov
aas
cmpb
pop
fcoml
ret
cmc
jle
ficomps
ja
inc
xor
jo
popa
xor
cld
imul
sahf
das
sbb
arpl
das
xor
sub
inc
add
ficoml
aas
mov
out
cmc
xor
xchg
fwait
or
ret
lret
jmp
mov
sub
pop
sub
push
mov
jg
fisttpll
xor
inc
popf
sbb
push
fisubrl
fidivrs
sub
lahf
mov
out
push
fisubrs
movl
mov
push
int3
fmull
icebp
push
or
pop
mov
jnp
sbb
imul
movsb
cmp
aad
rcrl
push
or
popf
jo
lock
or
xchg
repnz
jns
push
and
pop
ret
in
lcall
test
push
push
jl
push
sbb
push
jns
popf
les
das
das
aas
cmp
outsl
hlt
hlt
sar
loope
outsl
adc
ficoml
sub
mov
imul
mov
lods
iret
insl
pop
fildl
lods
xchg
testb
jmp
les
mov
dec
gs
and
lock
pusha
scas
inc
repz
jo
inc
fdivrs
repz
fistpl
lds
dec
mov
push
dec
mov
adc
shr
pusha
mov
ret
daa
mov
mov
cmp
xorb
cmp
pushf
inc
mov
lret
clc
cmp
add
or
inc
mov
lea
jb
iret
adc
cmp
aad
addr16
inc
in
jo
sar
pop
adc
dec
vpperm
sbb
cmp
and
or
fdivp
aas
stos
imulb
shlb
add
pop
cs
in
test
cmpsl
iret
roll
add
sbb
adc
loop
xchg
fxch
or
adc
popl
inc
mov
push
ds
and
testl
leave
and
mov
popf
test
sar
stc
mov
jb
cmp
cmp
orb
cmpb
xor
cmc
fnstsw
mov
outsl
xchg
fs
cmp
divb
repz
scas
in
xchg
inc
mov
jns
cmc
test
cs
jno
dec
lods
adc
mov
push
fildl
lds
lds
adc
inc
cmpl
jbe
mov
out
imulb
scas
push
inc
cmp
pop
mov
lret
test
std
dec
jno
lret
movsl
and
push
xchg
jge
push
fdivrs
ret
repnz
pusha
inc
xchg
movb
test
movsb
imulb
ja
pop
xor
scas
push
inc
mov
loope
neg
dec
les
jle
xchg
xor
jo
pop
insb
pusha
xchg
pop
xorl
adcb
dec
ret
mov
lret
adc
repnz
push
aad
lcall
jb
lock
xorb
cltd
or
pop
ret
sub
lock
xor
and
and
rol
fldt
jl
ja
and
sti
iret
ss
pushl
pushf
mov
mov
call
dec
xor
clc
mov
jg
adcl
in
xchg
cld
test
ror
xor
clc
jl
shrb
mov
fstpl
in
addr16
loopne
sahf
pop
aad
and
mov
sub
or
xchg
sbb
push
insb
pushf
mov
or
pop
stos
xchg
jecxz
fistpl
add
popf
fildll
or
out
call
fs
inc
mov
xchg
dec
xchg
xor
jmp
hlt
data16
inc
push
sub
mov
fwait
add
push
in
shlb
mov
jg
mov
icebp
jbe
clc
pop
inc
mov
mov
cmpsl
push
in
ret
pop
in
and
sar
cs
xchg
mov
add
xor
add
mov
aad
mov
aad
mov
xchg
icebp
push
cmp
mov
xchg
dec
jno
daa
hlt
subb
dec
insl
lea
mov
mov
adc
lret
out
loop
inc
adc
dec
add
jp
dec
add
mov
out
push
xchg
dec
mov
stos
nop
mov
rep
rclb
frstor
xor
cmpsl
and
flds
or
add
cmp
test
inc
arpl
or
test
out
jnp
arpl
mov
xchg
pop
push
xor
out
std
jge
rcrl
test
jp
adc
jecxz
mov
sbb
lret
test
xor
imul
dec
or
popf
push
lock
jnp
out
popa
xchg
push
loop
mov
lock
stos
jge
cmp
xlat
ds
dec
js
inc
sub
adc
in
leave
lahf
xor
sub
inc
out
xorl
pop
test
dec
xchg
pop
loopne
gs
sti
xchg
inc
icebp
fbstp
in
push
mov
test
mov
xchg
loope
shll
ss
sarl
push
xchg
outsl
pop
sbb
sbb
icebp
insb
push
mov
and
cmp
push
adc
das
cmp
cmpl
mov
addr16
inc
jnp
clc
push
test
fildll
cltd
mov
shr
addr16
daa
jne
stos
xor
sbb
sub
dec
in
jmp
push
add
adc
aas
out
pop
roll
call
xor
outsl
lret
outsl
scas
xchg
loop
in
imul
inc
mov
sub
jl
fwait
leave
in
cmpsb
test
jo
cmp
and
and
out
aas
gs
mov
push
sbb
stc
jge
iret
fdivs
sbb
push
and
mov
inc
loop
and
sub
pop
pop
fdivrl
cmp
pop
into
fs
mov
push
adc
xchg
push
xchg
dec
pop
lods
and
rcrb
je
add
scas
test
scas
test
ret
xor
cmpsb
jg
xor
push
jle
inc
fsubr
mov
push
adc
jge
jmp
cmc
adc
jmp
xchg
ret
xchg
cmp
xchg
inc
mov
push
jne
sub
rolb
add
push
les
jno
ljmp
add
pop
inc
stc
roll
xchg
cwtl
dec
pop
aad
mov
rol
xor
ds
scas
popf
mov
orl
dec
pop
xchg
fdivl
pop
repz
stos
sbb
mov
notb
inc
mov
xchg
dec
in
mov
xorb
pop
xlat
sub
pop
aas
mov
sbb
test
and
fstl
into
sub
ret
inc
arpl
add
pop
mov
inc
cs
in
iret
lods
push
loopne
jbe
mov
popf
outsb
jb
dec
jae
push
and
mov
imul
cld
push
mov
pusha
lret
out
fisubs
scas
lds
and
je
mov
fildl
push
and
daa
pop
lea
cmp
ds
dec
int3
in
test
movsb
les
insl
mov
jne
jno
lret
in
or
cmp
inc
in
pop
je
loopne
or
lods
not
mov
sahf
mov
push
bound
in
add
fdivrl
cmp
mov
add
lods
sarb
scas
or
lcall
cld
test
push
xor
std
add
in
dec
repz
xchg
das
ret
push
or
pop
and
std
mov
dec
lea
xchg
std
jne
dec
cld
leave
xchg
fsubl
loop
pushf
cmp
lea
lds
rorb
mov
lcall
mov
mov
sub
dec
ja
pop
or
cpuid
push
test
int
imul
insl
add
roll
sarb
lcall
dec
leave
pop
outsl
mov
fcmovnu
stos
fsubrs
pop
cmp
rcrl
jl
adc
or
add
and
cmpsb
cmp
div
sub
notb
lcall
push
nop
fnstsw
dec
bound
cmp
ds
dec
sarl
mov
daa
sahf
lret
jg
popa
jg
aas
xchg
repnz
and
popf
sbb
cmp
dec
xchg
pop
pop
icebp
leave
sub
push
jno
dec
js
cmp
dec
out
xchg
sub
dec
lock
das
jns
daa
sahf
cmp
push
pop
cmp
xorb
xor
test
cld
dec
jb
cmp
js
in
test
jp
cmpsl
mov
sarl
mov
dec
lea
fadds
leave
fsubs
stc
enter
mov
and
and
ljmp
add
scas
rorb
mov
jmp
adc
dec
mov
fldl2e
jne
jns
rolw
inc
fcomps
test
ret
sub
int3
mov
std
ljmp
add
xchg
mov
iret
jnp
clc
scas
mov
xchg
pop
add
xor
sub
sub
daa
jo
std
pop
imul
cmp
andl
lds
repz
dec
bound
mov
jp
or
cmp
cltd
pop
leave
lahf
and
ss
daa
cmp
lods
dec
adc
mov
or
lea
xor
xchg
int3
adc
or
lret
mov
clc
xor
jb
push
and
repnz
xchg
aad
ljmp
out
cmp
push
dec
xor
xchg
jle
out
pusha
dec
stc
cmp
mov
ja
fwait
mov
mov
imul
notb
xchg
xchg
push
mov
into
call
pop
call
xchg
mov
mov
jbe
clc
mov
out
out
mulb
mov
sub
fcmovnu
das
push
mov
scas
jp
push
lcall
mov
stos
in
push
lcall
pop
xchg
xchg
das
lock
sub
call
adc
lds
push
jle
pop
mov
aaa
fdiv
sbb
mov
bound
test
cmpsb
sbb
jo
add
or
adc
mov
mov
push
nop
stc
sub
cmpsb
insl
lret
fisttpll
and
jp
jne
call
dec
add
or
ljmp
orb
adc
jo
cmp
dec
popa
pop
sub
mov
enter
sbb
faddp
adc
fs
dec
and
fisttpll
sub
outsb
lods
shrl
xor
cwtl
roll
cs
or
xchg
iret
mov
push
pop
lret
mov
cmp
popa
dec
push
in
add
pop
cltd
adc
daa
inc
repz
ret
mov
notl
cmp
add
aaa
lds
lcall
jb
jb
lds
int
mov
add
stos
ss
push
xchg
pand
sub
fisubrl
shll
icebp
es
adc
frstor
jg
add
xorb
mov
mov
mov
stc
movsl
loopne
dec
mov
and
mov
and
mov
adc
ss
js
jp
mov
sbbb
data16
aas
mov
je
out
pop
imul
xchg
xorb
insb
xchg
ss
popa
out
cltd
subb
cmp
pop
inc
or
pushf
jg
xor
jno
ds
adc
jle
mov
aad
fs
jmp
les
push
mov
mov
jge
mov
dec
jbe
popf
adc
dec
or
add
lcall
insl
cs
clc
xorl
push
int3
scas
push
daa
sbb
pop
dec
mov
rcr
or
enter
fwait
pop
test
jb
jne
out
enter
mov
xchg
adc
inc
mov
adc
mov
rorb
call
leave
push
or
sahf
out
cmp
gs
push
lock
ret
cltd
popf
adc
enter
cli
cmpsb
outsl
shl
daa
mov
lock
lea
mov
sub
cmpl
adc
scas
or
in
xchg
ljmp
or
cmpsl
pop
sbb
arpl
xchg
es
pushf
insl
lcall
jne
repz
pop
xor
pop
cs
adc
pop
int
jge
mov
xor
popf
into
xchg
push
aam
xor
std
or
jecxz
lock
jne
not
inc
popa
add
sub
mov
repnz
xor
push
hlt
clc
faddl
jne
xchg
jae
xor
and
jns
sbb
adc
push
inc
pop
out
test
shlb
bound
icebp
inc
cmpsl
jp
inc
jb
cld
out
lea
add
cmp
pushf
js
stos
js
cmpsb
add
and
mov
cmp
stc
dec
and
test
inc
push
cmp
sarb
pop
xchg
sub
mov
pop
int
lahf
add
in
push
mov
stos
mov
push
and
addb
stos
inc
hlt
add
jb
cmp
sahf
inc
add
mov
xchg
sub
pop
push
stos
lahf
scas
ja
jmp
fistpl
mov
jmp
inc
jl
fsubp
ja
push
push
sbb
xchg
rcl
cld
push
into
sahf
test
inc
repz
push
or
push
xchg
or
stos
lret
movsl
leave
xorb
inc
cmpsb
pop
lcall
movsb
stc
mov
mov
cmp
jno
daa
test
jo
mov
jge
or
fwait
sub
les
mov
das
rclb
sub
mov
mov
sbb
leave
ljmp
cmp
addl
mov
mov
not
loope
es
les
sbb
cmp
push
mov
sbb
imul
cwtl
and
mov
das
into
sub
outsb
mov
out
dec
orl
mov
fs
das
aaa
ret
aaa
xor
xchg
jns
adc
sbb
incb
adc
sub
fcomip
into
sub
dec
cmpsl
sarb
shrb
push
adc
mov
pop
add
in
sub
sub
mov
cs
add
icebp
int
push
push
pop
cli
lods
mov
xchg
mov
push
ret
mov
popl
mov
add
xor
and
dec
cwtl
jae
decl
rcll
int3
rcll
pop
pop
shll
and
jb
ss
ret
pop
lret
adc
push
leave
cmc
arpl
ss
loope
stos
push
mov
mov
jle
ljmp
cmc
fldl
enter
shl
stos
rcrb
ret
adc
pop
pushf
cltd
bound
sbb
add
jmp
scas
jmp
shlb
and
insl
into
add
mov
xorb
addr16
inc
jge
jp
mov
jmp
cmp
jne
nop
or
jo
sbb
js
movsl
xor
inc
es
addb
lds
dec
xchg
mov
lcall
xchg
sbb
or
push
shlb
cmp
jmp
pop
hlt
cwtl
add
mov
add
push
cmpsl
fwait
mov
adc
loopne
inc
xchg
movsb
je
mov
push
and
and
cld
xchg
add
mov
pop
aaa
pushf
add
add
lods
jmp
lea
dec
xchg
and
xlat
mov
sub
jg
sub
mov
loope
fnsave
cmc
shrl
inc
stos
cmpsb
shl
dec
jmp
dec
push
sbb
call
sub
out
adc
cmp
lahf
je
test
or
in
popf
jns
jmp
adc
xchg
cmpsb
pop
xor
addr16
movsb
sbb
push
mov
push
xor
popa
in
enter
dec
adcl
in
sti
add
lret
add
mov
mov
adc
mov
or
into
std
arpl
push
fiaddl
lcall
or
xor
sbb
fdivr
and
lret
outsb
mov
cld
dec
jb
outsl
hlt
das
inc
xor
jl
push
fwait
cmp
je
subl
inc
dec
fcmovu
adc
js
gs
out
cmp
mov
and
sti
jmp
pop
mov
lret
inc
faddl
mov
test
outsl
addl
mov
adc
cmpsl
xchg
std
pop
insl
mov
aas
daa
sbb
dec
rclb
out
mov
fldenv
push
or
xlat
pop
stos
or
add
decl
inc
mulb
cld
in
cmp
js
jb
inc
add
addr16
iret
and
mov
test
push
ficoml
jne
lret
rol
imul
leave
sahf
mov
sub
and
loope
mov
lahf
xchg
jo
cmp
sbb
lret
and
fs
mov
arpl
add
in
popl
popa
jne
lock
cmp
mov
in
xchg
rcrb
add
adcb
jne
mov
adc
ds
jl
iret
rclb
cltd
cltd
imul
cmp
jp
pop
sbb
js
mov
lock
and
sbb
sbb
jg
jb
dec
xchg
aad
lahf
data16
push
out
sub
lret
mov
sbb
call
loopne
lods
ds
inc
fisubrs
je
sti
jne
fnsave
sub
pop
sbb
mov
rcll
sub
xor
shrb
gs
add
aaa
inc
inc
mov
je
fwait
out
rcl
insl
push
sbb
lea
hlt
fnstenv
inc
inc
fdivr
mov
frstor
js
enter
in
mov
addb
repnz
loope
mov
enter
push
add
mov
cmp
sub
and
scas
jbe
dec
bound
mov
adc
adc
mov
outsb
mov
or
xchg
sbb
iret
aad
add
in
inc
shlb
jne
push
out
imul
shlb
imul
xchg
popf
imul
inc
icebp
lock
mov
cmp
add
scas
and
push
dec
ficoml
dec
imul
xchg
mov
push
ret
negl
es
inc
idivb
popa
test
pop
cmp
push
popa
xchg
sarl
sbb
movsb
in
test
xacquire
or
and
push
inc
jmp
adc
fsubrp
pop
add
and
test
xorb
shlb
test
inc
dec
fistpl
dec
sub
ljmp
in
adc
inc
jnp
or
push
inc
enter
clc
cwtl
sub
mov
lds
ffree
ds
rcll
sbb
push
mov
mov
push
out
push
je
shl
or
gs
enter
adcb
push
dec
iret
das
in
xchg
js
push
ljmp
fcmovnu
inc
mov
dec
xor
jae
jbe
dec
out
pop
pop
and
pop
aas
icebp
int3
inc
int
inc
cmp
xlat
aas
cmp
ds
adc
xor
and
dec
jle
sbb
sub
cmc
mov
out
call
adc
addl
adc
out
dec
fdivrs
je
movsb
movb
andb
push
stos
fistpll
ss
xor
es
mov
mov
sahf
jp
subl
std
xchg
out
fildll
cmp
ja
test
insl
xchg
sbb
inc
cwtl
pop
jmp
mov
fisubl
pop
jae
int3
mov
addr16
jmp
mov
ficoml
nop
inc
inc
xor
sbb
lea
jmp
shr
fstl
stos
test
repnz
xchg
arpl
mov
es
ja
xchg
ja
push
out
push
mov
dec
aad
jne
rolb
push
iret
cld
mov
test
lea
mov
in
insl
popa
pop
fs
dec
les
or
and
inc
mov
dec
fistl
faddl
cs
bound
and
xchg
mov
js
fs
inc
out
mov
fcmovne
fwait
push
jecxz
push
sbb
shl
and
push
sub
loopne
fiaddl
cs
mov
int
insl
jg
dec
iret
and
pusha
inc
push
xchg
jg
inc
lcall
pop
mov
nop
into
stos
dec
ds
inc
dec
test
aas
jge
je
fmuls
int
andl
push
cli
pop
inc
movsb
loope
outsl
idiv
xor
cld
xchg
cmp
movsl
leave
jl
dec
cs
scas
shlb
addb
lds
add
pop
mov
xor
sahf
addr16
push
lea
aad
or
cmpl
leave
xor
dec
cmp
cmp
rorb
xor
lock
push
jle
add
add
cmp
jecxz
pushf
jb
inc
add
cmp
fmull
lods
sbb
inc
divl
lahf
add
xchg
dec
mov
or
lods
cmp
jecxz
mov
dec
xor
ljmp
fistps
lock
test
or
add
cmp
mov
mov
psrld
xchg
popf
leave
pop
jle
sub
testl
sbb
or
das
adc
loope
pop
cmp
pop
cmp
clc
push
mov
mov
shrb
int
pop
mov
movsb
pusha
mov
repnz
test
mov
mov
pop
outsl
ficompl
adc
hlt
push
and
filds
adc
mov
aam
mov
test
ret
in
loopne
icebp
lods
in
int
pop
add
mov
inc
and
inc
in
mov
scas
lock
cmp
sbb
pop
push
mov
mov
cwtl
pop
pop
dec
mov
shll
in
imul
insb
or
jnp
mov
sbb
xchg
and
xchg
rorl
mov
push
fwait
stos
out
mov
stos
or
jmp
bound
xchg
cmpsl
das
mov
dec
mov
scas
enter
lret
xor
cmp
notl
rorb
mov
and
scas
mov
sub
iret
xor
jl
lods
mov
mov
pop
mov
mov
xchg
dec
jmp
push
sbb
sarb
fs
out
gs
push
lock
push
leave
xchg
mov
rcl
outsb
fistps
push
adc
out
cltd
mov
fiadds
push
pop
addr16
sbb
and
xor
icebp
pusha
pusha
and
loop
adc
push
push
outsb
xor
sbb
add
dec
inc
dec
das
cmpsl
inc
ljmp
enter
xor
jno
adc
push
into
les
sub
lret
enter
push
cmp
and
in
cmp
adc
xor
int3
cmp
arpl
scas
mov
cmpsb
and
shlb
sub
sub
lods
mov
in
lock
or
imul
xchg
jge
add
outsl
xchg
addr16
or
mov
int
mov
std
jo
lods
fbstp
sahf
out
iret
divl
inc
mov
js
cmp
fnstcw
scas
sahf
mov
lds
or
cmp
loop
scas
sub
sub
test
sbb
bound
leave
loopne
icebp
jge
mov
sbb
pop
int3
fisubs
cmp
or
fidivl
sub
adc
call
xchg
mov
and
dec
iret
jns
insl
inc
and
pop
js
sbb
in
jnp
ret
add
xor
cmp
imul
movsl
imul
mov
mov
sub
in
das
test
es
push
xlat
cmc
cltd
gs
adc
cmp
ss
pop
adc
dec
lods
xlat
push
add
or
aas
push
mov
sahf
js
dec
rcl
lea
mov
adc
mov
mov
xchg
psadbw
push
pop
faddl
lahf
loopne
dec
add
jae
inc
add
adc
out
mov
in
icebp
and
adc
cmpsb
incl
incb
mov
push
cltd
adcb
into
sbb
pop
and
movsb
jno
popa
add
mov
mov
sarl
xchg
leave
mov
sbb
sbb
add
mov
sarl
adc
xchg
cmc
cli
inc
xor
test
loope
push
xchg
fcmovb
arpl
dec
fsubs
push
push
daa
pop
loop
xlat
push
outsl
jae
dec
filds
cltd
push
shrl
cmp
fisttpll
pop
imul
inc
popl
bsr
pushf
pop
add
mov
cmpsl
pop
push
and
inc
movsb
sahf
mov
out
clc
mov
mov
dec
call
mov
cmpsb
insl
imul
test
cwtl
in
pop
sub
lods
jne
lcall
or
or
mov
nop
shlb
fnstcw
mov
jns
sbb
into
push
or
adc
dec
sbb
lods
fdivl
femms
and
pusha
and
lahf
sahf
adc
push
imul
push
les
adc
push
or
test
jo
sub
jmp
xchg
pop
sbb
add
mov
pop
mov
mov
enter
push
xchg
inc
pop
push
sub
and
cs
cmp
aaa
outsb
mov
and
add
lock
jno
dec
and
or
sub
inc
jno
push
shl
cltd
es
cmpsb
adc
xchg
dec
dec
filds
sub
dec
jmp
dec
sbbb
leave
push
dec
inc
mov
sarb
rolb
outsl
xchg
or
and
xchg
push
insl
push
cld
add
jbe
out
ret
test
sbb
or
xchg
cs
roll
movl
jae
cmp
stc
enter
jo
lock
cs
dec
cmc
lret
or
and
add
sub
in
push
loope
xor
inc
cmpsb
fmull
fs
icebp
lods
popa
movsl
or
fucomp
xchg
sub
into
ja
jne
or
xlat
ljmp
fdivrs
lock
cmpsl
aas
fdivs
jbe
xchg
add
push
and
shll
fsubl
fdivrp
jo
inc
sbb
lds
inc
imul
mov
pop
loope
rclb
jg
push
sbb
dec
xor
xchg
lahf
daa
ss
or
lret
xchg
subb
mov
pop
das
push
sarl
xchg
xchg
add
mov
mov
cmp
ds
cmp
xor
mov
sbb
dec
jbe
lds
sbb
aam
or
lods
dec
push
int3
imul
filds
lock
fs
fidivl
xchg
and
cmp
pop
add
push
cs
sub
leave
dec
push
outsb
fimuls
imul
push
mov
push
nop
sub
loopne
jl
mov
or
pop
scas
push
loopne
adc
aas
xchg
inc
test
mov
pop
js
mov
cmpl
dec
das
or
insl
mov
loopne
loopne
jl
call
mov
or
mov
fcomip
dec
and
pop
mov
inc
inc
push
cmpb
in
out
fnstcw
xor
dec
or
mov
xlat
and
pop
dec
repnz
lret
mov
jp
clc
xchg
and
adc
xor
dec
xor
pop
sub
push
negb
cltd
pop
test
xor
adc
push
push
cmp
push
cmp
and
inc
xchg
pushf
js
mov
subb
jo
and
cmp
jecxz
push
jle
mov
mov
mov
daa
fucomi
mov
mov
push
or
mov
push
jns
jecxz
clc
cmp
icebp
test
rorl
lods
loopne
shll
lahf
push
mov
xor
xchg
jnp
or
lret
inc
sar
jmp
sti
into
out
inc
lods
mov
popf
push
push
inc
push
xor
aam
pop
cwtl
lods
dec
sub
lcall
out
inc
jae
clc
mov
mov
or
pop
das
adc
add
imul
mov
sbb
jns
mov
or
adc
data16
repnz
mov
cmp
hlt
dec
mov
lock
cld
stos
adcb
sbb
jmp
adc
jae
addr16
hlt
pushf
cmp
mov
mov
ret
movsl
lret
mov
jmp
insl
mov
addl
or
in
pop
push
fcomps
push
push
inc
aaa
cmp
push
lret
or
sub
outsb
adc
gs
repz
mov
stos
test
and
in
in
cmp
dec
push
idivb
lcall
add
mov
xor
les
push
jnp
test
test
stos
int
cmpsb
push
pop
sahf
test
enter
adc
mov
push
mov
nop
bound
fistl
mov
icebp
mov
mov
mov
dec
or
mov
arpl
mov
das
out
mov
scas
add
jno
xchg
cmpsb
mov
xchg
cwtl
loop
shrb
das
or
repz
pop
mov
stos
outsb
nop
dec
pop
add
ret
mov
pusha
sti
ds
fld
mov
test
push
adc
and
das
xchg
popf
inc
cmp
shl
lahf
popa
clc
or
into
jnp
sahf
jbe
adcb
jno
push
ss
push
das
dec
shrl
xchg
insb
push
pop
mov
outsl
sbb
and
out
inc
cmpsb
xor
or
sbb
aas
addl
sub
pop
in
mov
fs
cmp
loopne
sub
adcl
push
cwtl
in
dec
xor
pushf
test
sbb
push
adc
in
stos
ret
ss
push
aam
mov
mov
mov
and
and
repnz
les
mov
xor
sar
xchg
aas
dec
fidivs
push
pusha
pop
dec
mov
aad
mov
add
addl
jb
loope
fistpll
repz
bnd
sub
movsl
or
sub
add
sub
mov
inc
push
ljmp
repnz
notb
in
je
je
dec
xor
or
xlat
push
gs
adc
mov
xor
xor
lods
pop
sti
jnp
loope
movsb
lods
pop
pop
pop
out
adc
dec
sbb
scas
iret
pusha
stc
xor
fstpl
cmpsb
lret
mov
orl
iret
xor
fs
mov
push
cltd
or
xor
push
sub
cld
add
xor
mov
out
sarb
pop
mov
adc
add
icebp
pop
and
sub
bound
mov
in
stos
aas
cli
fwait
ljmp
xor
jo
mov
or
lret
sub
jge
xor
pop
test
cmp
imul
or
and
fnsave
cmpl
push
in
ficompl
fistl
mov
test
fldl
dec
pop
rorl
fdivs
test
pop
xlat
dec
mov
mov
sub
sbb
cltd
xchg
bound
hlt
xchg
ds
mov
push
stos
and
push
sbb
ret
push
sbb
push
pop
outsb
add
arpl
mov
jge
popa
xor
and
cmp
loope
or
popa
xor
insb
dec
and
add
adc
xor
stos
fmuls
pushf
jae
add
shll
outsl
adc
inc
add
mov
iret
cwtl
jge
out
sti
push
sarl
mov
leave
pop
daa
les
fwait
push
lahf
stc
pop
mov
movsl
adc
pushf
add
iret
push
push
pop
mov
or
das
out
jge
pop
stc
mov
mov
scas
das
fisubrs
or
movsl
fcmovne
mov
and
out
mov
xchg
cld
xor
lods
push
pushf
xchg
ljmp
stos
xlat
test
hlt
pushf
fwait
jns
jmp
xor
dec
subb
pop
sarl
fwait
jns
mov
push
lcall
aad
popf
cmp
bound
ret
add
push
call
push
push
xchg
jge
aad
and
leave
popa
jg
adcl
add
popf
mov
add
rorb
std
inc
push
mov
divl
dec
inc
imul
mov
pop
xor
neg
stos
fsubrs
out
xchg
sub
sti
movsb
leave
testl
and
rorb
not
jecxz
sarl
out
push
pop
out
jmp
and
dec
ds
push
testl
in
in
xchg
stos
adc
leave
cltd
and
les
enter
inc
je
xchg
test
jle
push
mov
pusha
js
mov
mov
cmp
adc
mov
test
pop
mov
mov
or
les
or
push
pop
xor
arpl
adc
jmp
mov
cmp
ret
stos
and
cmp
and
lcall
mov
fwait
in
cmp
cmp
mov
xor
dec
mov
sbb
or
gs
sbb
imul
lods
lret
xchg
inc
cmp
adc
and
out
pop
mov
xchg
clc
into
xchg
pop
nop
pop
xchg
pushl
loop
fcos
sbb
stc
pop
fisubs
cltd
int
cmp
sub
mov
xchg
dec
cmpl
push
dec
adc
stc
and
adc
push
and
mov
jge
test
inc
jge
mov
sbbl
xor
mov
jne
mov
xchg
sbb
mov
orl
movsb
and
insb
fcmovnbe
push
xchg
fs
adc
cltd
fstps
push
popf
rcr
mov
bound
adc
mov
test
lods
idiv
in
inc
jb
xor
jmp
mul
adc
ret
dec
cltd
movsl
jl
iret
dec
inc
dec
out
out
pop
sbb
jae
cmpsl
or
dec
sub
mov
xchg
lea
pcmpgtw
sub
outsl
cmp
mov
daa
in
mov
enter
jmp
or
inc
insb
aad
fs
scas
mov
btr
clc
imul
mov
or
xor
push
clc
add
fisttps
stos
push
test
jg
xchg
jecxz
mov
pop
mov
sbb
fsubrs
ret
pop
or
mov
rcrl
shll
lcall
fisubrl
ljmp
pop
sbb
add
gs
call
test
out
mov
push
addl
mov
inc
push
cltd
jge
hlt
outsl
std
popf
or
mov
xor
shll
and
mov
das
lds
pusha
push
inc
data16
enter
pop
push
jmp
push
loop
in
and
mov
pop
aas
xor
repz
xor
hlt
and
inc
es
int
sub
mov
push
xchg
in
dec
cltd
loop
and
or
pop
jp
in
jo
mov
daa
fistpl
jle
stos
in
push
cld
test
jnp
test
cmp
out
aam
pop
out
das
jl
mov
rcrl
dec
xor
je
stc
mov
fwait
cmc
insl
fildll
shrb
mov
cld
and
push
inc
jmp
movb
js
add
pusha
gs
cmp
jl
dec
xchg
add
es
rorb
nop
and
xchg
mov
sbb
and
je
imul
jo
loopne
dec
mov
mov
xchg
les
dec
mov
lods
inc
xchg
cmp
js
fwait
mov
iret
fs
jle
bound
jne
add
sub
push
cmp
out
xchg
or
push
add
push
inc
je
jp
sub
and
lods
mov
push
cmpsl
sub
nop
push
cmp
push
dec
scas
or
lds
lret
cmp
test
mov
push
push
mov
orb
insl
sub
imul
inc
insl
cwtl
leave
jae
in
mov
inc
cmp
dec
aas
testl
fadds
sub
mov
push
incb
ja
lret
insl
dec
ret
out
int3
sbb
les
mov
xchg
out
mov
popa
inc
frstor
pop
push
cmc
imul
mov
pusha
jnp
jmp
leave
inc
mov
jnp
aaa
int
xor
pop
adc
pop
in
sbb
dec
or
inc
aad
inc
iret
out
nop
mov
in
add
aad
shlb
js
loope
scas
mov
fnstsw
dec
dec
shrb
lret
icebp
lds
fsub
and
outsb
push
sbb
into
daa
outsl
std
xor
mov
pop
inc
cmp
gs
sbb
in
repnz
add
jns
xchg
cli
inc
jg
or
dec
ds
add
out
sbb
out
and
call
pop
sub
xchg
out
sub
inc
loop
dec
xor
lret
add
rorl
aad
adc
pushf
add
loopne
js
mov
shrb
dec
in
xchg
push
loopne
sbb
sahf
adc
pop
mov
test
sub
adcl
mov
aad
call
or
rorb
pop
loope
xor
add
lret
dec
or
enter
mov
je
mov
mov
call
mov
or
or
mov
mov
mov
fcomps
out
popf
out
into
xor
add
sbb
shlb
ljmp
adc
cs
insl
aad
mov
add
sub
push
or
lret
xchg
or
pop
out
dec
ficompl
mov
insb
fisttpl
sub
cmp
popf
sbb
roll
jnp
push
jg
retw
jmp
dec
cwtl
add
xor
push
dec
in
push
sbb
jnp
dec
cmpsb
daa
cmpsl
out
out
jecxz
and
scas
cmp
fnstsw
add
lret
adc
or
ja
jns
ja
cwtl
push
mov
pop
jo
dec
sbb
ror
divl
mov
clc
adc
call
adc
jbe
les
in
or
aaa
mov
push
add
mov
xchg
adc
mov
xchg
add
xchg
mov
xor
xchg
mov
inc
cmpsb
mov
cld
jns
dec
in
xor
xor
movsb
adc
dec
inc
push
pop
iret
push
cld
cmp
xor
xchg
in
push
mov
push
pop
stc
lea
xor
dec
adc
sbb
imul
xor
cmp
adc
popa
imul
adc
scas
xlat
test
fdiv
dec
lods
mov
scas
lahf
nop
xor
sbb
imul
sub
sbb
xchg
and
call
and
icebp
rcrb
les
test
adc
xor
lret
or
dec
ja
jo
push
jle
cmp
mov
push
test
lds
cli
imul
or
and
pop
adc
xor
std
push
lea
lds
in
insl
je
cmpsb
aas
mov
mov
sbb
sbb
add
movsl
out
loopne
ret
inc
movsl
aad
sub
cwtl
jecxz
fists
pusha
mov
mov
fcmove
mov
jne
daa
inc
push
out
jecxz
inc
clc
cmpsl
or
push
pop
xlat
mov
aaa
add
jp
cmp
mov
nop
or
cmc
daa
inc
push
sbbb
xchg
push
data16
adc
sub
mov
imul
xchg
fdivp
or
icebp
jb
rclb
fildl
call
outsl
sbb
cwtl
fildl
pop
imul
adc
push
push
jp
hlt
push
shlb
ljmp
fnstsw
xor
mov
sbb
out
mov
iret
jns
into
pop
cmp
cmpsl
xchg
test
push
adc
je
aam
mov
popa
adc
int
shlb
rcrb
push
inc
xchg
outsl
cmp
xor
call
cmp
stc
jge
les
rcrb
sbb
lock
scas
lods
cmp
inc
add
xchg
push
jae
sbb
xor
inc
mov
pop
mov
lahf
in
fisubrl
std
mov
pop
loop
push
and
mov
sbb
xchg
out
pop
cs
xor
sbb
pop
or
js
arpl
add
inc
lods
dec
jmp
lea
mov
cmc
movsb
mov
sub
scas
test
adc
sub
shll
jle
cs
aaa
orb
loope
ficoml
sub
mov
xchg
push
mov
pop
enter
inc
mov
jb
sbb
fbstp
rcrl
push
lret
lods
pop
test
cltd
xor
sbb
loop
stc
fwait
and
test
iret
mov
cmc
inc
jg
pop
xor
and
lea
mov
adc
xchg
ret
imul
popw
mov
dec
rcll
mov
and
gs
es
das
movsb
ret
cmp
mull
dec
imul
jne
xchg
test
mov
cmc
cli
xchg
iret
add
test
in
stos
xor
arpl
add
and
sbb
jne
dec
aas
imul
push
jge
jbe
adc
push
aam
sahf
pusha
imul
cmp
push
stos
test
add
fs
cmpsl
test
or
mov
jmp
xchg
adc
sub
mov
addb
clc
mov
jg
push
xchg
sbb
repnz
shrb
cli
mov
loop
insl
orb
sub
xchg
gs
pop
dec
push
jle
jecxz
xor
xchg
xchg
pop
add
mov
ljmp
or
cmp
add
call
cmc
inc
flds
push
ljmp
and
pop
call
pop
in
add
or
add
pop
cmp
outsb
push
push
xchg
fiadds
dec
loop
add
push
xchg
push
nop
xchg
loopne
ds
mov
push
pusha
dec
jmp
xchg
fnsave
repz
xor
int3
daa
cld
fildll
fsubp
lcall
ss
push
xor
notb
stc
mov
cmp
mov
sub
cltd
out
dec
adc
in
adc
rcrl
popa
sbb
jbe
mov
sbb
sbb
stos
orb
add
pop
scas
pop
sub
pushfw
xchg
lret
mov
mov
mov
xchg
pop
scas
nop
lods
aas
test
shrl
and
and
or
push
pop
jnp
popa
fmul
push
sbb
aaa
inc
nop
movsl
dec
icebp
mov
std
inc
dec
xchg
or
lret
out
pushf
pop
aas
push
mov
xor
mov
in
idivb
dec
subb
sbbb
stc
push
movsl
and
cmp
imul
push
js
inc
aam
jnp
sbb
xchg
sub
adcb
into
pop
das
xchg
mov
aad
rcrb
mov
cmpsl
and
pushf
pop
add
ror
sub
mov
cld
in
scas
adc
xor
or
push
nop
mov
push
test
pop
inc
mov
cmp
xchg
loopne
in
mov
add
lods
aas
xchg
push
pop
mov
xbegin
std
inc
movl
jg
insb
fdivs
sbb
pushf
inc
mov
add
fisttpl
adc
fwait
repz
jl
fmull
leave
jle
dec
xor
inc
mov
sub
sbb
popl
out
sub
lret
stos
orb
mov
xchg
xor
sub
loopne
sbb
mov
push
lret
sub
or
xor
mov
xchg
icebp
rcrl
lahf
cmp
pop
cmpb
mov
outsl
mov
jb
stc
sub
cmp
int
fwait
sbb
lods
outsb
pusha
ret
dec
dec
roll
insl
call
add
mov
mov
fwait
pop
mov
mov
xor
xor
sbb
and
pop
cld
es
aam
sahf
sbb
add
sbb
js
pusha
in
test
lcall
push
sub
scas
xchg
sarb
addr16
ljmp
call
shrl
icebp
rcrb
out
ret
sbb
jl
mov
arpl
inc
movsl
mov
das
sbbb
gs
movsl
shll
out
cmp
aad
int
cltd
shlb
dec
testb
cmp
fnclex
adc
jmp
adc
insl
enter
jb
enter
leave
mov
repnz
int3
in
adc
lods
sub
cmp
or
pop
test
mov
mov
fdivrl
jns
nop
imul
outsb
dec
cmp
dec
lahf
outsb
mov
les
test
in
push
sub
or
aad
xchg
xor
xchg
adc
mov
cmp
dec
insl
enter
fists
mov
out
imul
int
sbb
xlat
mov
test
les
and
jnp
gs
mov
xlat
cmp
inc
dec
mov
les
movsb
xor
add
ret
sbb
mov
cli
jmp
shl
leave
pop
and
in
aas
jecxz
fcmovnb
mov
push
push
rclb
pop
xor
mov
push
jae
fstpt
xlat
gs
das
push
xlat
mov
cmpsb
js
insb
cmpsb
in
lcall
stc
scas
xchg
sub
add
mov
jbe,pn
test
pop
jo
imul
adc
jbe
sti
jnp
cmpsb
jnp
fisttpll
sub
daa
ffree
ret
pop
mov
cmpsb
das
sti
fwait
mov
outsb
mov
addr16
popf
sbb
or
sti
push
pop
xor
lds
pop
jnp
push
pop
mov
adc
mov
cvttps2pi
xchg
sub
aam
mov
inc
jle
mov
jo
mov
cmp
push
gs
jne
repnz
fldl
call
xor
dec
test
sub
insl
test
roll
cmp
sbb
push
jmp
and
adc
xchg
and
pop
cmpl
mov
enter
push
jns
xor
enter
add
lods
mov
js
nop
das
jae
jge
fadds
adc
test
inc
mov
jns
cli
pop
xor
xchg
mov
mov
std
add
lcall
orl
in
aaa
pop
andl
push
test
sbb
push
sub
icebp
scas
or
mulb
xor
push
push
sbb
scas
sahf
into
data16
loop
sub
add
jmp
mov
aad
push
nopl
rolb
push
jo
mov
sbb
clc
sub
iret
clc
xchg
xor
cli
pop
adc
fldt
cmp
cmp
push
mov
sub
roll
fistpl
dec
xor
push
and
out
or
stos
in
mov
lcall
mov
push
out
jl
out
lods
dec
xor
jp
lods
aad
add
xchg
fistpll
add
negl
mov
and
je
cs
xchg
movsb
ficompl
fstp
out
movsw
lcall
jle
mov
dec
add
sub
mov
adc
or
sbb
fdiv
pop
sub
lahf
mov
xor
je
push
inc
cmp
add
cmp
xor
pop
mov
movsl
mov
mov
add
leave
lret
pop
sbbb
inc
fwait
push
dec
ljmp
dec
aas
mov
pop
fucomp
enter
pop
pop
jl
jne,pn
arpl
inc
daa
jge
test
repz
outsl
mov
cmp
cmp
or
mov
orl
in
pusha
or
pop
loopne
push
lret
sarb
in
outsb
dec
test
mov
pop
sub
rolb
xchg
jl
jg
xor
daa
xchg
add
int
test
movsl
sbb
jae
pop
xchg
push
sub
enter
rolb
in
sub
bound
in
pusha
test
cli
scas
in
lods
outsb
sbb
jl
aaa
aad
pop
int3
jne
mov
pop
incb
arpl
ljmp
mov
rolb
lds
cmpsl
cmp
ret
aaa
popf
jl
lret
cmc
mov
mov
push
inc
mov
inc
adc
aas
mov
inc
sbb
aam
sub
clc
imul
add
pop
scas
pushf
push
adc
pop
test
or
or
xor
push
lock
lock
es
xchg
lds
outsl
int3
jle
fidivrs
adc
movsl
cmc
add
mov
repnz
std
cli
in
cwtl
mov
xchg
mov
and
pop
mov
out
jo
xchg
pop
icebp
daa
fldt
sbb
call
dec
add
push
outsl
cmpl
in
jns
xchg
pop
fcoms
cmpsb
inc
xchg
rcll
rorb
jns
lods
das
into
jecxz
je
rolb
sbb
jp
mov
sbb
mov
or
push
jmp
push
repnz
xlat
xlat
and
outsl
and
test
fadd
mov
adc
xchg
push
cli
into
lock
ljmp
cmp
adc
dec
push
sbb
ret
jns
js
add
jmp
mov
shlb
shrl
lahf
test
movsb
jns
dec
mov
ljmp
dec
jmp
dec
cmpsb
xchg
jne
aam
and
aas
in
jmp
add
shlb
outsb
lock
addr16
pop
daa
mov
popf
dec
in
and
jp
aad
scas
sub
call
pop
punpcklbw
loop
daa
xchg
iret
test
mov
xorl
xchg
into
pop
les
cmp
pop
push
gs
add
insl
and
mov
jbe
sti
outsb
pop
testl
shr
mov
pop
adc
cli
and
xchg
int3
ret
xlat
mov
add
cmp
lret
cmovbe
pop
fadd
pop
frstor
inc
clc
mov
into
inc
mov
xchg
pop
adc
xchg
inc
push
mov
mov
mov
mov
enter
cmp
mov
int3
fadds
mov
mov
cmp
sub
sub
push
ja
and
push
add
lret
and
pop
push
jne
fwait
outsl
dec
jnp
sbb
sbb
sbb
cmp
add
fistps
nop
jne
inc
mov
nop
rcl
int3
dec
sbb
pop
inc
mov
sub
jmp
mov
jnp
xor
aam
out
fldcw
ja
rcrb
out
mov
test
imul
inc
in
cld
lcall
add
fstl
xor
push
mov
add
xchg
cmp
xchg
movsb
insb
mov
pop
cmp
mov
mov
cltd
xchg
cmpsb
cmp
push
add
xorb
mov
push
ja
jge
shll
ljmp
stos
sahf
push
hlt
popl
shll
push
out
xchg
cld
addr16
fldt
mov
in
rol
adc
pop
xchg
leave
movlps
lds
insl
fs
add
scas
sub
push
out
aaa
pop
xchg
fdivs
cmp
fstpt
aad
ret
xor
mov
mov
aas
pop
rcrl
pop
and
xchg
ret
push
sub
pop
jae
xor
xchg
aam
iret
js
or
lea
mov
mov
cmpsb
mov
push
stos
out
lahf
and
mov
sbb
cmp
lods
cmc
ja
push
movsb
mov
ret
shrb
sbbl
jmp
dec
jle
mov
xchg
inc
ljmp
pop
orl
mov
mov
lret
lcall
arpl
daa
aad
push
pop
gs
dec
sub
rcll
pop
mov
mov
lock
dec
stc
jle
in
lcall
imul
in
and
lret
cmp
xchg
jle
cmpsl
out
lret
mov
lret
cmp
dec
repz
icebp
stos
lahf
int3
xchg
xor
push
xlat
or
out
xchg
mov
shl
rcrl
sub
xor
insb
les
mov
sub
fistps
arpl
xchg
test
jne
std
adc
jnp
xchg
adc
std
or
mov
rorb
mov
sbb
fs
mov
stc
jne
leave
xor
push
ss
pop
sub
rorb
mov
insl
xor
adcl
scas
mov
adc
and
mov
sbb
adc
fwait
sti
adc
shrl
dec
shrb
ret
scas
sub
sbb
leave
in
mov
inc
pop
das
jnp
loopne
fimull
pop
imul
loopne
pop
sub
cmp
test
cmp
sub
lahf
in
cli
inc
push
dec
push
mov
popf
insl
test
leave
bnd
xor
aad
jbe
sbb
mov
ret
and
pushf
cmpl
daa
xchg
les
stc
pop
inc
and
outsb
sub
jp
enter
mov
jo
jge
je
stos
addr16
inc
in
enter
push
sbb
jbe
das
sbb
mov
push
subl
mov
adcl
mov
inc
out
fcmove
dec
push
and
test
mov
gs
adc
or
movsl
cmp
and
adc
fldenv
inc
popf
dec
call
and
popf
xlat
pop
ss
loop
clc
inc
pusha
inc
out
mov
sbb
icebp
pop
add
xor
fisubrs
enter
mov
scas
mov
in
cli
cltd
cmp
insb
repnz
push
and
mov
sub
inc
dec
daa
les
call
xchg
jl
mov
fwait
mov
loopne
fimuls
ret
dec
insl
loope
cwtl
dec
sub
cmp
rolb
es
cltd
inc
mov
pop
ret
jns
cli
mov
or
jle
mov
test
hlt
or
mov
cs
rcrl
push
popf
mov
ret
mov
adc
mov
cmp
dec
add
pop
add
cmp
xor
sbb
xor
in
push
adc
test
mov
push
int
fdivs
push
and
ret
fisttps
mov
push
rcll
test
mov
pusha
lods
pop
dec
sahf
pop
push
fimuls
out
mov
xor
ret
mov
or
adc
pop
mov
les
jg
bound
jl
cltd
test
dec
push
or
loopne
dec
test
xor
bound
popf
mov
lods
rolb
push
cmc
xor
mov
push
fcomps
or
inc
int
and
testb
and
lds
fcomps
mov
js
aaa
cmp
shr
outsl
cmp
jp
insb
lahf
inc
movsl
aam
xorb
movsb
aam
aaa
lret
cmp
jae
lock
andb
mov
lret
jg
dec
jg
xchg
stc
push
inc
xor
adc
popa
mov
cld
or
pop
add
mov
lcall
cli
inc
sbb
pop
sbbl
mov
inc
mov
push
dec
jecxz
popf
fnstsw
adc
insl
sub
fwait
sub
andl
adc
jbe
add
cmp
fidivrl
rcl
or
mov
jmp
aam
pfcmpge
test
scas
js
out
pushfw
dec
xchg
test
cmp
jo
cmpsl
pop
aas
outsl
jne
test
mov
mov
push
cmp
xchg
mov
adc
xchg
sbb
jae
ret
jae
jg
and
pop
pop
pop
add
pop
sahf
stos
push
psrad
push
sub
add
jge
cmp
push
xor
movsl
outsb
dec
es
orb
sbb
dec
pop
add
lods
jne
push
dec
jle
jno
lea
out
lret
out
xor
out
pop
inc
jnp
notb
add
stos
push
inc
pop
test
push
cmpb
sbb
mov
fwait
mov
mov
add
jns
fsubrl
mov
fwait
xchg
sub
test
cmpsb
push
icebp
push
fadd
mov
in
cld
cmp
call
pop
sbb
ds
sbbl
jae
iret
aas
adc
sbb
jno
cmpl
mov
imul
in
ret
in
repz
dec
xor
jle,pt
andb
ds
rcrl
shlb
inc
and
cld
into
jno
jns
jne
outsl
mov
leave
leave
xor
hlt
xor
and
stos
jg
sti
jb
mov
lahf
add
jmp
je
mov
cltd
xchg
mov
dec
pop
inc
iret
xchg
sbb
popa
sti
sub
cmc
out
add
stc
sbb
jg
jge
cltd
or
scas
mov
cmc
mov
ret
adc
and
or
icebp
stos
pop
mov
push
jge
xorl
mov
daa
pop
lahf
filds
aad
push
sub
lds
push
mov
hlt
pop
test
scas
sbb
mulb
shlb
push
out
imul
nop
cmp
stos
sub
cli
dec
mov
arpl
mov
push
call
jbe
or
dec
divb
push
cmp
sbb
lea
ss
sbb
cmovge
jle
mov
jle
clc
cmp
push
push
icebp
scas
adc
enter
mov
mulb
in
into
xchg
adc
leave
stc
inc
push
outsl
insl
xchg
aad
or
cmc
push
jmp
in
or
sub
bound
inc
and
cmp
mov
pusha
jecxz
adc
call
sub
aaa
sub
xor
pop
inc
dec
rcll
sahf
scas
ljmp
xor
repz
adc
lahf
popf
dec
sbb
mov
mov
leave
stc
jnp
xor
adc
jmp
das
lahf
mov
or
loop
inc
sub
xchg
pushf
mov
cltd
nop
hlt
jb
cmpb
je
in
sahf
jns
loop
push
lds
mov
int
or
int
aas
fadd
xchg
aaa
pop
sub
imul
jne
andb
jb
fwait
pushf
arpl
dec
sbb
jmp
test
out
fsubr
shlb
lret
add
fldcw
movsb
xchg
jle
pop
fnstsw
pop
sbb
mov
mov
sub
dec
rcl
popf
addb
pop
out
dec
loope
fistl
into
outsl
dec
mov
mov
in
sbb
jg
int3
fs
test
or
mov
xchg
inc
xchg
adc
jnp
out
pop
sbb
ja
mov
in
lahf
xor
push
pop
jo
adc
outsb
rorb
shl
ret
loope
jmp
dec
xor
and
orl
out
jg
jge
and
ficomps
cmp
cmp
popf
fisubrs
jmp
ficoms
mov
frndint
mov
xchg
das
clc
push
lret
or
pop
push
sbb
mov
dec
sbb
push
or
and
test
inc
jl
xchg
in
iret
test
inc
insb
jne
hlt
inc
and
mulb
aas
mull
inc
shlb
mov
or
cmc
mov
loope
in
loopne
add
pop
inc
lahf
clc
add
fisttps
arpl
pop
sub
cmpsb
sub
sub
adcl
jno
mov
in
ja
sub
mov
out
icebp
loopne
js
jmp
stos
ret
add
out
xor
in
push
aaa
mov
dec
xchg
sbb
dec
lea
adc
loopne
jae
mov
daa
outsl
scas
les
fucomp
loopne
stos
andb
test
push
sub
loopne
in
jmp
sbb
mov
jnp
sbb
hlt
cmc
out
mov
add
enter
sub
je
mov
or
cwtl
jns
pop
enter
mov
ja
js
jmp
shlb
push
mov
or
test
dec
mov
push
xor
mov
pop
loop
sbb
lods
movb
adc
pop
call
cmp
mov
arpl
xchg
cli
ljmp
movsl
sbb
jecxz
imul
sarb
add
data16
dec
outsl
lahf
shlb
add
lods
cmp
lock
push
mov
icebp
mov
sbbb
sbb
and
cs
cmp
js
mov
fisubrl
iret
cmp
cmc
icebp
or
pop
std
sub
sub
xchg
push
out
arpl
pushf
xlat
push
xchg
stos
popf
les
testl
prefetcht1
iret
in
cs
cmp
scas
mov
add
popa
in
lahf
das
sbb
loope
push
jg
fstps
adc
xchg
fldl
lret
fwait
pop
sub
mov
outsl
inc
repnz
icebp
mov
loope
js
jmp
mov
mov
adc
inc
hlt
mov
hlt
adc
push
jp
sub
dec
iret
std
adc
imul
push
sbb
sub
jno
xchg
data16
shrb
adc
stos
lret
jnp
mov
adc
add
mov
sbb
xchg
fwait
out
cld
push
testb
xor
decl
pop
lcall
mov
mov
mov
push
loopne
push
dec
jge
sub
daa
mov
sahf
inc
icebp
dec
pop
adc
mov
dec
mov
cmp
push
push
push
mov
mov
cmp
and
nop
or
or
jmp
jmp
dec
jle
lcall
fidivl
pop
push
iret
imul
mov
ja
sahf
xchg
mov
mov
cmpsb
lcall
fwait
add
push
pop
xor
xor
jbe
pop
lock
in
jae
cmp
xchg
shll
jge
loopne
or
mov
stos
lea
fwait
pop
dec
adc
add
je
lock
cmp
mov
lds
out
pop
ds
mov
mov
or
push
xlat
push
add
pop
sub
clc
xchg
fs
pusha
outsl
sarl
and
je
pop
insl
je
sub
cli
in
sub
mov
popa
pop
or
popa
and
dec
sub
iret
mov
xor
inc
jae
cmp
sbb
xchg
test
lods
sub
leave
in
mov
imul
mov
mov
dec
jae
rcll
addr16
sbb
or
pushf
incb
xchg
or
shlb
sub
mov
xor
sahf
jmp
neg
dec
aam
shrb
inc
xchg
insl
add
adc
fs
pop
test
jl
cmpsl
mov
roll
fs
test
dec
xchg
pop
pushl
pop
dec
and
mov
xchg
inc
mov
adc
pop
cwtl
add
test
rcrb
mov
sub
fs
repnz
popa
fsubrl
icebp
inc
pop
mov
pop
jmp
mov
insb
push
sbb
mov
pop
mov
mov
dec
pop
in
xor
movsb
add
sahf
inc
jbe
mov
xchg
ljmp
ss
orb
cmp
scas
into
mov
cs
pop
sbbl
adc
sbb
movsb
jns
add
and
push
xchg
lock
mov
pushf
or
push
sub
push
jecxz
push
pop
in
daa
scas
aas
lods
ror
jge
imul
lds
cwtl
ss
sbb
fstl
jle
add
push
bound
push
xlat
pop
or
pop
leave
mov
mov
loope
push
orl
xchg
sbb
inc
push
cld
adc
fs
inc
xchg
xchg
aas
and
repnz
test
mov
adc
jno
inc
jns
jbe
xor
adc
push
bound
adc
mov
or
dec
outsl
fwait
orps
aas
push
popf
mov
insl
ja
cwtl
push
mov
cs
fadds
pop
in
mov
iret
nop
fmulp
les
inc
cs
ret
loopne
mov
mov
test
jl
fsubrl
mov
xchg
out
lods
jge
sti
jmp
and
push
in
ljmp
sub
sbb
fbld
mov
stos
mov
jecxz
hlt
fmull
sub
push
iret
xor
add
shr
aam
in
enter
es
data16
jo
ljmp
inc
ja
gs
rcll
stos
add
mov
mov
lret
in
cmpl
ror
dec
inc
pop
add
mov
jmp
lea
mov
mov
xor
popa
fsub
jbe
sub
stc
cmc
mov
cmp
cmpsb
pop
rcrb
cmpsl
cltd
test
loop
or
or
dec
test
js
or
test
jbe
jl
mov
jo
cwtl
xchg
loope
mov
enter
scas
andl
icebp
xlat
adc
pop
inc
sar
sbb
xlat
insl
ret
mov
cltd
std
andb
xor
xor
xchg
jge
out
insl
mov
mov
cmpsl
lcall
or
popa
outsl
shlb
cltd
and
xchg
or
out
out
and
mov
cmp
les
sbb
movsb
std
movsb
cli
push
xor
push
lret
cmpsb
or
lret
arpl
ds
daa
xor
adc
sbb
or
push
call
jp
xchg
mov
mov
xor
loope
test
dec
into
sub
mov
cwtl
add
and
push
std
fldz
xor
test
jle
xchg
ret
sbb
cwtl
add
mov
insl
adc
lcall
out
std
insb
ljmp
and
inc
and
dec
adc
fstpt
xor
mov
xor
popa
mov
cmp
sarb
dec
jp
dec
cmpsl
and
xor
push
mov
add
pop
scas
cmp
mov
aas
jno
and
int
and
cwtl
sbb
cmp
fsts
loope
test
lahf
mov
mov
stos
aas
pop
fcmovnb
bound
mov
ds
push
shlb
pop
dec
mov
aaa
ret
mov
inc
mov
and
cmp
loop
imul
push
sub
add
stos
add
out
ja
cmp
xchg
out
shlb
test
cmpsb
xchg
dec
pop
fcompl
stc
in
sub
pop
push
mov
fdivr
inc
in
stos
xchg
cmp
jg
bound
cmp
sub
imul
mov
stos
rorl
and
pushf
mov
pop
mov
fidivs
and
xchg
cmp
movsb
dec
or
add
sbb
jb
fstps
dec
ljmp
mov
jl
sub
je
je
xor
aam
movsb
ficomps
aaa
mov
lods
call
fsts
adc
int3
or
bswap
nop
insb
and
push
lret
or
fldt
xlat
lahf
jns
enter
std
daa
mov
js
dec
mov
sub
dec
xchg
inc
test
stos
jmp
lret
jns
sbb
jp
std
ljmp
push
add
adc
mov
stos
fptan
int3
ret
xor
xchg
je
and
fistps
test
sbb
jg
inc
xor
add
xchg
das
sub
mov
popa
or
mov
movsb
ret
leave
add
lds
push
sbb
or
mov
negl
cwtl
xor
test
pop
and
pop
sbb
pop
mov
f2xm1
mov
mov
add
fwait
push
jmp
mov
bound
and
js
cmpsl
sbb
test
add
dec
add
sti
dec
insb
mov
pop
jl
stc
mov
hlt
xchg
iret
xor
cmp
shlb
loopne
mov
pop
xchg
insl
sub
leave
and
pop
imul
push
jmp
stos
iret
push
mov
test
xor
cwtl
cmpsl
and
xchg
or
ret
jmp
scas
and
lods
xchg
jns
lea
pop
xor
scas
movsl
test
and
shlb
pop
rclb
jae
sub
cli
popf
stc
aam
fstpl
push
outsb
ficoms
popa
cmc
dec
in
mov
ljmp
xor
jno
push
sarl
pop
popf
and
xchg
popa
movsl
inc
mov
dec
xchg
fdiv
xchg
xor
sbb
push
xchg
or
cmp
jne
cmp
dec
cmpl
mov
sar
sub
jl
add
negb
mov
cltd
xchg
je,pn
repz
stos
movb
xchg
mov
push
adc
xlat
xchg
js
mov
ds
xchg
js
or
call
or
jp
inc
xor
dec
sbb
dec
insl
loop
jl
sbb
idivb
lahf
maxps
pop
popf
sub
inc
fwait
mov
pop
jle
inc
mov
pop
in
stos
push
inc
pop
iret
int3
lcall
xor
push
orl
and
mov
mov
sbb
leave
rcrb
daa
mov
out
sbb
jmp
in
addl
aas
pop
leave
or
call
int3
loopne
in
ja
cmp
mov
and
pop
lea
pushf
repnz
sbb
movq
lahf
daa
ds
push
adc
enter
sbb
cwtl
sub
and
int3
add
scas
sahf
cmpl
sub
pushf
lods
je
or
lret
sub
aam
ja
imul
mov
mov
pushf
sub
sbb
lods
std
cmp
mov
neg
xor
gs
aam
repz
cmpsb
fnstsw
and
icebp
les
pop
pop
jae
jo
stc
pop
and
cli
mov
dec
pop
and
inc
xchg
pop
ja
and
xlat
lahf
mov
test
adc
outsl
jg
pop
push
xchg
cmp
lods
mov
add
add
jmp
filds
xchg
xchg
jns
xchg
imull
inc
insl
jge
xchg
les
ret
cld
into
jle
cmp
and
scas
icebp
mov
call
loop
jno
aaa
and
push
shlb
mov
arpl
push
jecxz
push
scas
aad
xchg
insl
push
fsubrs
mov
dec
pusha
repnz
sbb
in
js
cmp
fistl
in
lock
shll
fninit
adc
jg
lods
es
in
inc
fbstp
icebp
je
in
cmp
jne
inc
movzbl
jbe
in
shll
sbb
dec
cwtl
nop
test
fistpll
xchg
push
jp
mov
stc
in
add
mov
xchg
jl
inc
mov
xchg
mov
pop
cmpsb
inc
cmp
inc
in
mov
pop
jns
push
xchg
pushl
hlt
push
and
ds
jg
insl
sahf
xchg
pop
jno
sti
rol
and
pop
arpl
and
sbb
add
roll
sub
pop
add
xchg
aad
xchg
jnp
xchg
pop
sub
jge
inc
fdivl
dec
add
imul
lret
sbb
mov
xchg
in
shlb
cs
mov
shl
scas
rolb
lcall
sahf
dec
inc
cltd
stos
js
lcall
fwait
lret
cmp
inc
flds
jno
cmpsb
cli
xor
push
mov
adc
idivl
rcrb
test
in
add
dec
cmp
jg
int
pop
mov
mov
jmp
mull
xor
xor
jae
fldt
add
jb
adc
cmpsl
sbb
jge
shlb
add
adc
repz
push
adc
or
in
push
loopne
stos
sub
mov
sub
mov
mov
mov
test
ret
push
cmpsb
stc
ja
into
cmp
push
mov
jnp
cld
dec
mov
add
sbb
or
mov
inc
pop
cmpsl
mov
mov
fdivs
xchg
cmp
shrl
mov
aas
stos
xor
pop
cs
lods
pop
xchg
jb
pop
inc
pop
push
mov
out
cmp
add
jp
mov
rorb
data16
data16
jmp
add
mov
cmp
ljmp
shlb
dec
call
pop
negb
cmpsb
inc
sbb
inc
mov
jl
mov
pop
fldt
mov
jne
cmp
dec
insb
sub
xchg
dec
mov
daa
roll
and
out
cmpsb
nop
lret
repz
out
pusha
lds
inc
jnp
pop
push
mov
add
inc
push
xor
sub
leave
mov
dec
bound
mov
iret
adc
dec
dec
mov
jmp
idivl
aam
inc
fnsave
int3
ljmp
in
sub
sbb
push
jle
test
or
dec
insb
ss
stos
mov
push
inc
loope
xor
leave
les
jmp
xchg
data16
jo
add
dec
aam
xor
push
ljmp
inc
in
pop
sbb
hlt
mov
push
mov
adc
jmp
mov
xor
fdivs
mov
sbb
dec
cmp
cmc
mov
decl
ret
enter
out
movsl
adc
add
and
pop
push
dec
imul
xor
mov
inc
pushf
mov
test
adcb
dec
hlt
sbb
repz
mov
test
mov
pushf
xchg
fwait
lds
out
lds
in
dec
aaa
nop
fcompl
lret
sahf
in
dec
mov
xchg
mov
loop
cli
pop
dec
nop
fwait
cmp
mov
jns
inc
xchg
mov
insl
jae
daa
stc
add
pop
sbb
push
out
push
rolb
negl
push
dec
jl
fs
lret
push
test
dec
jnp
push
outsb
pop
ljmp
jmp
out
pop
insb
mov
stos
dec
xchg
ja
add
and
cmpsl
fsts
dec
test
outsl
imul
popf
xlat
cld
into
cmp
popa
inc
add
cwtl
scas
shlb
xor
jbe
subb
hlt
rcr
out
sbb
out
jns
mov
mov
sti
es
outsb
faddl
xor
pusha
lock
sbb
cmp
cld
les
les
nop
jg
sbb
lds
mov
shll
pop
fdivrl
jg
sub
das
pop
pop
mov
mov
jae
xchg
cmp
pop
mov
cmpl
mov
jl
xor
insl
jbe
push
sbb
or
lret
insl
cmpsl
icebp
jbe
mov
lahf
pop
lock
push
data16
mov
or
cmc
scas
iret
rcl
or
cmp
adc
mov
inc
inc
xchg
lret
add
shl
ds
lods
aad
std
push
cmc
push
mov
adc
xchg
mov
mov
out
pop
cmp
and
mov
jl
subl
mov
ja
sbb
jmp
lret
mov
pop
pop
pop
subb
mov
jae
cmp
ja
mov
inc
inc
loop
insb
jno
bound
out
adcl
lea
test
xchg
and
mov
mov
ljmp
or
cli
fwait
jge
jo
xchg
repz
cmp
fdivrl
mov
addr16
mov
and
rclb
mov
adc
inc
iret
xor
ss
push
sti
jno
pusha
mov
dec
dec
loope
loope
ret
jl
shlb
push
pop
rdmsr
sbb
cld
pop
es
push
pop
add
cmpsl
lds
inc
mov
jne
insb
outsl
mov
xor
push
adc
inc
popf
xchg
add
dec
jae
ja
cmpsl
mov
movsb
add
movq
or
inc
cmpl
mov
pop
fidivs
lret
and
dec
popa
cltd
xchg
add
jns,pn
adc
mov
jecxz
out
mov
or
mov
out
add
in
cmp
inc
xor
jecxz
cmp
mov
adc
cmp
lds
sbb
xchg
push
lods
shrb
and
mov
dec
mov
aad
cmp
xchg
and
sub
xor
mov
xor
pop
sub
fwait
adc
push
pop
mov
cmp
xchg
mov
push
std
sub
xor
mov
or
bound
lods
sub
ljmp
out
push
pop
or
lock
push
and
dec
jb
and
cmpsb
lods
sar
popf
insl
xchg
outsb
mov
enter
movsb
mov
xchg
mov
xchg
popf
xchg
xor
into
cmp
dec
push
xchg
dec
lret
sub
and
push
and
decb
sbb
test
hlt
lcall
sub
add
ficompl
ljmp
pop
imull
arpl
push
pop
mov
out
mov
adc
aas
and
xchg
adc
in
mov
ja
mov
sbb
lea
scas
sub
sti
push
int
mov
jecxz
sbb
out
mov
imul
xchg
mov
xchg
sub
mov
fsubl
iret
sub
inc
mov
lods
popf
adc
or
and
mov
insb
mov
or
mov
nop
inc
ret
jbe
es
inc
xor
stos
mov
pop
mov
into
or
flds
out
and
mov
sbbl
mov
xorb
mov
dec
repz
push
icebp
and
xor
addr16
pop
cltd
mov
out
push
or
fsts
mov
xchg
push
mov
dec
jg
sbb
enter
fcmovnb
cs
subl
fists
nop
mov
and
mov
repnz
outsb
loop
jle
and
imul
add
pop
bound
ss
rcrb
addr16
std
ss
icebp
popa
mov
psubusw
out
sub
push
dec
test
xor
dec
cwtl
push
aam
dec
dec
ds
in
and
mov
out
inc
mov
lods
out
loope
sbb
test
or
fwait
movsl
mov
inc
xchg
sahf
faddp
mov
push
jb
push
xchg
inc
stos
sbb
icebp
dec
out
adc
imull
pop
js
aad
inc
lea
loopne
mov
cld
pop
xchg
and
mov
pop
sti
int
dec
call
icebp
or
pop
cmp
xor
jnp
add
in
not
mov
jg
data16
jecxz
sub
xchg
inc
and
or
pop
or
fildl
lock
xor
mov
sub
stc
adc
dec
insl
pop
cmc
pusha
xchg
or
nop
loopne
fs
fdivrl
push
mov
in
ds
imul
pop
mov
aam
add
ja
jno
std
mov
xchg
pop
in
jnp
ss
adc
sbb
jae
les
jno
and
dec
es
jl
jmp
loopne
out
sbb
inc
mov
mov
and
pop
movsb
jno
fwait
jo
outsl
push
stos
les
jno
push
and
out
pusha
inc
cs
lcall
insl
insb
or
mull
ljmp
out
pop
sub
lds
cmp
pop
aaa
jmp
js
inc
fwait
jle
jnp
fisubrs
jne
dec
xor
sub
mov
fchs
iret
sub
fists
xchg
xchg
or
mov
cli
sbb
rol
xchg
sub
out
loop
jmp
pop
sbb
shll
push
bound
jle
mov
int3
pusha
cmp
mov
add
mov
lret
cmc
loop
inc
push
jne
xchg
or
mov
jl
loope
dec
addr16
iret
loopne
xchg
lds
cmp
cwtl
rcr
andb
jns
test
and
sub
enter
aaa
push
adc
push
mov
mov
adc
lods
push
cmpsb
push
and
xor
mov
pop
popa
inc
ret
xchg
test
adc
into
or
jns
data16
push
xchg
leave
xchg
mov
popa
or
pusha
sti
ficoml
fisttps
pop
imul
sub
jmp
pop
xor
sub
es
sti
outsb
into
or
xchg
add
or
out
jno
add
fimuls
sub
mov
and
scas
inc
test
add
data16
leave
movsl
dec
mov
cmp
lock
or
mov
out
jbe
xor
mov
xchg
adc
push
xor
push
insb
data16
cmp
push
mov
stos
mov
data16
dec
adc
sbb
adc
dec
or
adc
add
add
out
into
das
sub
add
lods
jmp
in
aas
pop
insb
in
insb
mov
xchg
add
lahf
pop
fwait
or
into
icebp
pop
and
pop
or
lret
pop
les
cmp
out
test
or
xchg
xchg
jae
and
jmp
mov
mov
cwtl
cmpl
add
or
mov
push
cs
mov
mov
test
out
inc
scas
push
mov
jbe
mov
rcll
jae
push
dec
sbb
sub
push
mov
insl
and
fsts
hlt
xchg
notb
fidivl
sbb
cvtps2pi
into
loope
and
cmp
cs
mov
decb
inc
inc
xchg
add
jcxz
stos
cli
and
inc
xlat
pop
cmpsl
mov
push
add
inc
jns
ret
adc
mov
mov
or
repz
sti
jecxz
in
mov
lods
jo
sahf
sti
out
nop
jg
lock
sub
adc
mov
sbb
cmp
sub
fwait
mov
xchg
mov
das
xlat
mov
mov
sub
push
dec
mov
pop
scas
cmp
std
popf
mov
popf
jmp
pusha
cmp
mov
pop
or
mov
imul
ret
inc
xlat
mov
cltd
sarl
push
adc
mov
mov
or
mov
ljmp
sbb
pop
adc
pop
mov
pushl
fnstcw
shll
cmpsb
out
sbb
arpl
push
lods
fists
orb
xor
push
lock
mov
adc
fwait
sbb
sub
pop
jmp
ljmp
pop
dec
dec
lock
mov
xchg
mov
cmp
in
iret
cmpb
sub
jnp
mulb
in
sti
and
sahf
ljmp
or
inc
es
repz
movsb
sbb
or
xlat
and
push
pushf
cld
push
inc
xchg
cmp
fisttpll
push
add
dec
sbb
pop
popa
push
mov
or
jns
cmpb
xor
cmp
ss
pop
mov
into
jecxz
in
pop
scas
in
imul
mov
fstsw
insb
enter
cwtl
xchg
iret
das
jnp
mov
test
adc
mov
std
xor
mov
cltd
xchg
leave
or
dec
and
aad
test
sbb
add
test
push
fdivr
lret
jae
std
ss
mov
mov
int
add
push
shlb
push
imul
inc
and
icebp
icebp
push
and
int3
xchg
push
int
daa
stos
shll
inc
xor
mov
les
mov
cld
sahf
pop
inc
je
add
xlat
fmuls
sbb
cwtl
ja
lock
arpl
add
jle
sub
adc
test
mov
popf
sbb
adc
cmp
xchg
leave
movl
lods
adc
hlt
call
rcrl
push
and
lcall
leave
frstor
mov
cld
sar
mov
adc
vmovdqa32
data16
jno
pushf
mov
jae
cmpb
jnp
push
movsl
fldcw
shlb
mov
enter
lods
or
add
test
pop
xchg
fsubrs
call
mov
cmp
aad
fucomi
je
sbbb
xor
push
test
cwtl
jne
mov
lret
mov
lock
cltd
aam
mov
movsl
xor
outsl
lea
scas
cmp
pop
mov
or
xchg
sub
shr
xor
mov
pop
out
jge
mov
lret
inc
jb
mov
fmull
les
je
in
pop
mov
adc
movl
inc
js
mov
pop
jb
mov
mov
add
xchg
loope
cmpsl
sub
add
mov
and
sub
mov
inc
or
xchg
imul
into
loope
sti
xor
inc
mov
test
out
out
push
andb
lahf
add
add
add
std
push
enter
cmp
lods
mov
shlb
rorl
enter
jmp
jbe
mov
push
mov
xchg
pushf
dec
xchg
ja
adc
int3
inc
inc
xchg
mov
inc
pop
jnp
inc
mov
inc
in
lock
lods
lret
jae
inc
addr16
inc
shll
clc
xor
repz
mov
and
cmp
pop
insb
bound
inc
pop
cli
insb
sbb
jl
iret
jp
push
arpl
add
movsb
mov
cmpl
scas
sbb
dec
dec
jnp
movsb
cli
sub
mov
popf
enter
xchg
add
mov
sarl
dec
outsb
cltd
cmp
pop
lea
xor
gs
mov
les
push
lret
in
sarb
mov
mov
sub
pop
jmp
jmp
fistpll
loopne
xor
popf
mov
cmp
mov
pop
xchg
or
inc
and
sub
mov
outsb
fists
add
dec
or
mov
jo
sbb
mov
loop
je
inc
adc
inc
cs
sbb
cmp
es
push
cli
push
in
add
ljmp
lcall
notb
mov
in
in
or
adc
std
fxch
std
das
cmp
lahf
ret
mov
cmp
cmp
jb
xor
jmp
dec
stos
out
inc
mov
fiaddl
std
popa
loopne
cmp
fcomps
repz
dec
mov
filds
data16
orl
int
or
adc
sub
fistpl
roll
xor
jo
leave
out
xor
stos
dec
add
adc
fistl
lahf
fsubs
ss
inc
leave
mov
mov
xchg
jo
inc
dec
lods
fildl
push
jle
lret
pop
jnp
testl
push
sub
xchg
jmp
cld
loop
inc
repz
and
lret
jmp
aas
or
xchg
jne
nop
add
xor
je
jle
andl
faddl
insl
jmp
into
adc
enter
lock
pop
nop
movsb
mov
orb
xchg
cmp
sub
idivl
rorb
mov
pop
sub
pop
xor
xor
mov
fnstsw
sub
outsl
out
push
push
adc
or
jbe
into
ret
in
das
sbb
lods
ljmp
mov
into
into
jle
jo
add
adc
jno
adc
jge
es
insl
dec
mov
xchg
or
into
cltd
and
dec
adc
cmp
cmpsb
pop
jnp
sbb
jg
mov
clc
mov
xor
data16
ss
test
out
adc
sbb
xor
clc
adc
jae
push
sbb
mov
js
xor
or
or
mov
jbe
mov
movsl
imul
neg
add
adc
out
push
movsl
xchg
mov
daa
cmpsb
cmp
lret
movb
sbb
addr16
mov
addr16
mov
mov
sbb
mov
mov
push
lret
sbb
sub
shl
scas
imul
xlat
leave
xchg
cmp
rorb
pop
pop
clc
es
je
push
lds
dec
rcrl
gs
lahf
int3
fisubl
fcmovne
dec
and
jmp
fmuls
and
ss
rcrl
jp
jbe
insb
push
and
loop
xchg
xchg
adc
fs
pop
aaa
popf
stos
pushf
push
pop
lock
push
push
xchg
push
mov
rcll
and
dec
push
mov
add
fs
and
adc
test
icebp
ret
or
aas
push
push
insb
push
fnstsw
or
cld
push
pmulhuw
xchg
adc
push
addr16
jno
test
mov
adc
popf
in
dec
popf
aam
mov
cltd
leave
lds
sub
aam
pop
clc
les
or
push
subl
bound
aad
rcr
cmp
jp
lds
nop
repz
scas
jbe
mov
and
xchg
clc
or
call
mov
cmc
into
mov
mov
and
jns
stc
insl
nop
xchg
mov
adc
xor
add
shlb
js
sub
and
jns
xchg
jmp
dec
push
pop
fiadds
xchg
mov
aad
mov
loop
cwtl
xlat
test
iret
dec
inc
push
mov
andb
fdivrs
xchg
sbb
and
int
das
and
mov
insl
test
mov
mov
faddl
sbb
cmp
pop
out
fdiv
xchg
mov
test
jge
pop
cmpsl
sub
mov
lods
cmp
ljmp
aaa
out
mov
loop
adc
adc
or
mov
xor
or
pop
pop
sub
fucomi
bound
jge
xor
jge
punpckhwd
imul
pusha
push
ds
iret
push
push
sub
lcall
sbb
cli
outsb
and
sbb
rcl
push
xor
lods
cmpsl
std
in
inc
sub
stc
daa
push
mov
lock
xor
loopne
jo
mov
inc
xchg
and
mov
aaa
sbb
enter
mov
push
jno
popa
adc
inc
mov
mov
mov
inc
sbb
mov
idiv
nop
fldcw
pop
mov
add
push
xor
mov
dec
pop
sub
aad
gs
sbb
and
mov
icebp
sub
push
dec
pop
sbb
mov
pop
push
out
mov
or
add
sbb
fidivrs
mov
insb
mov
mov
mov
ret
inc
pusha
mov
movsb
nop
fwait
sarl
pop
test
xchg
cmp
cmpsb
jmp
mov
mov
xor
pop
push
mov
cmpsl
sbb
ret
dec
sbb
jle
jp
loopne
sub
pop
mov
cmpsl
rcr
jbe
xchg
sub
jns
loope
jg
inc
in
jae
add
ficoml
test
cmp
lods
xchg
mov
jne
or
push
dec
xlat
daa
in
mov
sub
data16
mov
movsl
lahf
push
push
mov
movsb
leave
mov
jnp
outsl
std
sbb
mov
or
mov
mov
cmp
js
es
add
jecxz
sbb
xchg
pop
add
cmpsl
lods
push
and
repnz
xchg
sub
pop
scas
les
xchg
sub
stos
and
mov
jo,pt
cmpl
mov
ret
loop
mov
and
mov
mov
out
sti
rol
or
jl
jl
dec
outsb
jp
cmp
shll
xchg
xchg
das
shrb
cmpsb
adc
adc
mov
cld
xchg
sarl
jbe
xor
jbe
sub
jb
xor
adc
or
sbb
cmp
lret
cmpsb
loope
insl
lcall
cmp
jmp
and
loope
dec
push
inc
rcrl
push
out
xchg
js,pt
fisubs
jb
cmp
add
pop
fldcw
call
pusha
jmp
std
adc
mov
mov
shl
or
lock
adc
sbb
push
and
pop
sbbb
call
lods
push
shll
adc
jnp
or
cmp
jp
lcall
lea
fistl
xchg
add
xchg
lcall
hlt
es
sub
rclb
cmp
xchg
jle
push
mov
mov
repz
cmp
lock
in
shlb
lods
dec
xor
clc
in
or
icebp
js
pop
sbb
jg
pop
cmp
int3
movsb
cmc
pop
pop
cmp
mov
cwtl
in
insb
stc
roll
dec
lea
sbb
xor
dec
dec
jmp
scas
inc
and
ret
push
stc
ret
fsub
push
pop
fcmove
adc
lret
into
xchg
mov
jne
mov
cli
mov
scas
and
inc
or
lea
bound
mov
push
inc
adc
stos
fsubrs
add
jbe
mov
add
iret
pop
ljmp
pop
or
rorb
mov
aas
mov
or
xor
clc
adc
sahf
push
cmp
ljmp
mov
inc
rcr
jne,pn
rorb
leave
data16
imul
push
sbb
iret
pop
inc
add
sub
mov
xor
pop
test
sbb
in
jno
pop
cmp
popa
dec
rcrb
notl
fwait
push
out
ret
push
xor
lock
add
sub
mov
cmpsl
push
mov
adc
loope
adc
xor
sub
mov
popf
mov
jecxz
add
and
or
dec
scas
push
push
rorl
dec
popf
roll
adc
ret
xor
repnz
pusha
or
sbb
xor
add
xchg
xor
bound
call
push
inc
into
push
stos
out
mov
jp,pt
adcl
addr16
push
mov
ret
xor
mov
divl
inc
sti
mov
mov
adc
imul
es
loope
in
fstpt
pop
lock
add
out
pushf
imul
jmp
xor
lret
adc
push
mov
dec
dec
dec
std
xchg
dec
dec
js
sub
add
daa
jecxz
inc
pop
je
mov
leave
jnp
dec
fwait
cmp
xchg
sub
aaa
xor
and
mov
dec
push
lods
push
fistpll
cmp
aaa
cmp
mov
aad
push
or
jno
pop
adc
out
inc
movsl
push
mov
sbb
shl
lahf
ljmp
lea
xor
and
ficoml
test
sbb
pop
mov
cmp
lret
ds
dec
scas
fadds
jecxz
mov
clc
loope
pop
aam
sbb
dec
test
add
push
mov
imul
sbbl
test
jae
sub
ljmp
add
and
scas
pop
adcl
jae
add
pop
roll
insb
sub
inc
sti
mov
xor
fimull
add
sti
sbb
xlat
sbb
ja
sbb
xor
sbb
call
int3
bound
push
or
insb
mov
lods
loopne
outsb
xchg
cmp
and
ficomps
jae
inc
and
fldenv
loopne
aad
fwait
out
mov
subb
or
add
loop
aas
mov
or
mov
pop
jae
insl
lods
call
sub
add
xorb
sarl
insl
add
js
mov
sbb
pop
out
push
add
mov
jbe
xor
inc
enter
or
pop
and
lods
sbb
jecxz
and
cmc
adc
aas
push
or
iret
jmp
loopne
data16
repnz
ja
xor
mov
aas
les
shll
xor
ja
aad
xchg
adc
push
push
iret
js
clc
mov
push
cmp
out
pop
dec
test
arpl
xor
mov
es
ljmp
and
fcoml
ja
mov
and
cli
movl
addb
pop
pop
inc
fwait
hlt
or
sbb
cmp
loopne
adc
or
mov
add
mov
jno
test
stos
xchg
xchg
movsl
sti
scas
repnz
push
xchg
and
ljmp
push
dec
mov
or
in
push
add
mov
cs
add
into
addr16
lcall
dec
pop
add
clc
enter
push
ljmp
insb
in
xor
mov
inc
out
cltd
xor
fnstenv
xchg
popa
pusha
lea
pop
jo
fst
rorb
fldcw
add
dec
push
add
sbb
xchg
cmp
sub
cmp
adc
xor
mov
cs
popa
test
movsb
mov
mov
pop
fcmovnbe
adc
jmp
or
rcl
sbb
pusha
jns
push
test
clc
add
jl
cltd
and
or
sub
aad
or
and
dec
mov
cmp
stos
test
pop
or
inc
aaa
stos
shl
add
into
cmp
bound
sahf
addr16
adc
test
lock
mov
sub
fistpll
or
dec
imul
cmp
hlt
ds
sub
and
sbb
in
pop
inc
pop
jge
call
push
xchg
in
inc
cmp
movsl
jne
sti
mov
xor
cmp
mov
es
data16
out
out
xorl
scas
push
gs
std
xchg
sbb
pop
fisubs
es
xlat
cmp
xchg
or
leave
xchg
adc
lds
push
movsb
mov
inc
mov
cmp
dec
pop
jne
int3
outsl
jp
dec
and
arpl
repz
xchg
outsb
mov
scas
cmpsl
pop
into
fcoms
cmp
es
neg
and
or
out
xchg
mov
sub
fcoml
int3
jle
notl
mov
cld
mov
sub
enter
mov
and
cli
loope
jno
jae
out
sub
xorl
jecxz
and
cmpsl
fiadds
mov
inc
je
sbb
mov
bound
jmp
sbb
pop
sbb
lret
fidivl
inc
xchg
cwtl
adc
inc
aaa
and
jecxz
ret
push
aas
in
div
inc
mov
pop
jg
movsb
pop
lock
ljmp
sub
push
add
or
adcb
dec
repz
pusha
imul
jle
daa
mov
int
icebp
push
cmp
mov
data16
add
and
mov
jl
das
or
cmpsl
sti
test
jne
stos
stc
insl
sub
outsl
test
pop
push
and
lea
ss
pop
mov
addl
mov
push
shll
stc
out
xchg
ljmp
cmc
xchg
mov
push
ret
add
jo
or
xchg
inc
in
xchg
mov
inc
repnz
xor
test
sub
push
daa
dec
sub
cmpsl
fscale
iret
lods
outsb
imul
mov
mov
add
inc
jle
or
pop
inc
les
and
out
outsb
push
movsb
mov
scas
rcl
aas
and
mov
pop
mov
les
mov
mov
mov
stos
mov
test
dec
or
nop
insb
jns
dec
imul
sub
fcomps
loopne
mov
mov
or
dec
mov
xchg
sbb
mull
dec
xlat
iret
cs
pop
or
shlb
push
testb
sbb
or
mov
xchg
ja
daa
xchg
in
mov
sbb
inc
jmp
add
inc
les
sarl
add
mov
dec
cmp
sbb
pop
and
inc
fwait
mov
add
adc
sub
insb
jne
popf
int3
loop
loopne
and
cmpsb
mov
in
mov
adc
or
fdivs
sbb
mulb
and
xchg
insl
loopne
lahf
mov
sarb
lret
push
jns
scas
out
imul
out
sub
sub
dec
lret
pop
ja
push
subl
gs
xchg
mov
and
loopne
fs
cld
dec
jno
and
sub
dec
ljmp
in
add
push
test
insl
lds
inc
seto
lret
aam
std
sbb
lods
xor
pop
mov
lods
orl
sub
sbb
enter
pop
mov
add
pop
mov
call
les
mov
xchg
int
push
repnz
movd
mov
mov
cmp
sub
lret
cltd
fnsave
mulb
cmp
jno
in
cmpsl
push
mov
incb
icebp
push
aam
mov
xchg
pop
mov
dec
ds
imul
stos
ljmp
das
push
cmpsl
dec
fdivl
add
sbb
jb
inc
lods
mov
mov
in
call
cmpl
xlat
adc
in
idivl
cmp
add
inc
lds
cmp
add
mov
dec
mov
mov
std
cmp
jmp
data16
pusha
cmp
jb
das
push
or
icebp
cmp
pop
mov
mov
dec
cmp
enter
cmpsl
loop
addl
sahf
inc
leave
outsb
add
in
mov
sub
fsts
stc
in
pushf
add
ss
stos
jmp
scas
sbb
repnz
adc
mov
push
ja
sahf
pop
dec
mov
loop
and
fidivrl
push
xchg
aam
loop
stos
loopne
cmpsl
sarb
jmp
dec
cmp
sub
cmp
js
ret
lret
repz
outsb
mov
adc
jae
cmc
add
lret
loopne
shlb
add
sbb
addr16
pushf
pop
rcll
jmp
mov
add
int3
notb
fisubrl
mov
push
mov
xlat
cmp
imul
mov
inc
mov
popa
jo
sti
test
or
pop
imul
fildll
lret
cmp
lods
out
shlb
push
arpl
mov
jl
inc
je
xor
jnp
sbb
mov
add
daa
ret
les
jp
add
addr16
push
push
es
pop
xchg
jns
rorb
icebp
iret
imul
add
lret
mov
mov
iret
or
pop
test
fnstsw
adcb
pop
loop
int3
push
sub
jecxz
mov
mov
add
or
test
imul
sbb
jbe
fcompl
loopne
pushf
arpl
adc
pushf
add
jp
shlb
adc
jns
push
int3
subl
dec
jno
in
loope
push
test
adc
cmpsl
inc
fwait
mov
inc
sbb
fistpll
cmc
les
push
jle
xor
xchg
adc
mov
jp
pop
adc
or
ret
mov
lock
pop
adc
je
test
nop
ss
je
gs
xchg
add
dec
ja
call
jg
mov
jge
jo
out
dec
fmulp
add
popf
sbb
call
bound
jp
cltd
stos
lcall
jne
push
cwtl
arpl
imul
pop
rcrl
and
fwait
lods
mov
mov
imul
xchg
mov
jae
cmp
mov
out
sub
out
push
pop
push
jno
dec
xorb
sahf
stc
out
sbbb
insl
pop
lret
fs
shll
iret
sub
pusha
mov
sub
sub
push
add
add
shlb
xchg
jb
popa
mov
nop
cmpsl
test
mov
mov
addr16
sbb
daa
push
lods
xor
divl
fisubrs
push
jg
cmp
and
xchg
sub
sbbl
loopne
pop
aaa
lahf
bound
mov
xor
repnz
mov
adc
sub
mov
inc
adc
xor
and
mov
orl
cmp
hlt
sbb
add
inc
mov
dec
hlt
in
mov
mov
sub
and
popa
lahf
pop
out
mov
cmp
daa
adc
push
jmp
jl
into
pop
mov
cmp
xchg
iret
addb
cld
sbb
xor
adc
in
stc
cmp
sbb
sub
adc
pop
jnp
and
sbb
add
jl
mov
js
jo
loope
inc
pushf
push
dec
dec
movsb
repz
aad
add
sub
sbb
and
and
cmp
arpl
adc
or
pusha
sbb
pushf
push
aad
test
pop
push
test
push
lock
add
cmpsl
mov
aam
xor
mov
push
mov
fidivrs
mov
bound
popf
inc
pop
stos
adc
jmp
fisubrs
aas
jmp
movsb
lods
enter
lock
mov
and
jecxz
cmp
mov
mov
sbb
mov
sub
icebp
jl
inc
and
adc
push
mov
push
mov
mov
arpl
lret
sahf
out
push
nop
mov
sbb
and
data16
push
popf
adc
cmp
cs
ss
les
lret
sbb
jbe
xchg
iret
jae
ret
pop
mov
movsb
mov
mov
adc
xor
ljmp
loop
lods
les
test
arpl
pop
push
jg
cmc
pop
stos
adc
lret
out
jne
test
xor
cmp
cmc
sbb
adc
mov
pop
dec
test
sbb
pop
mov
icebp
repz
lahf
adc
push
and
cwtl
lds
rclb
mov
rcrb
inc
jae
lock
lods
lds
add
in
ja
inc
ret
fcoms
xchg
and
pop
pop
call
movntps
cmp
dec
out
in
or
push
sbb
arpl
push
pop
lahf
cs
push
nop
dec
or
mov
jb
xor
dec
mov
sarl
cs
xchg
jge
xor
xor
or
ret
fldt
cmp
jo
jmp
mov
call
sahf
inc
inc
aam
fdivs
adc
pushf
push
xchg
push
popf
mov
pushf
cmpsb
mov
stos
sbbl
fimull
jo
adc
cmp
enter
and
or
inc
nop
dec
outsb
gs
imul
push
fxch
lret
or
imul
jle
sbbl
xchg
add
xchg
bound
jae
andb
cmpb
pop
or
pop
imul
notb
test
mov
ss
fdivr
test
mov
fisubl
out
data16
sbb
aad
call
xchg
pop
mov
inc
push
pop
pop
or
jb
scas
add
pusha
negl
dec
xchg
aad
lods
push
sbb
out
mov
cmp
jecxz
lahf
cld
iret
mov
sarl
push
sbb
test
cmp
push
pop
pop
lret
cmp
sahf
clc
inc
or
jecxz
cld
mov
loopne
lret
push
lcall
out
les
or
mov
scas
dec
xchg
mov
iret
fstps
roll
adc
movsl
mov
dec
in
sbb
pop
cwtl
iret
fildl
clc
lds
outsb
xor
jl
xor
jge
push
sub
scas
dec
sub
xlat
neg
sahf
jl
lcall
shll
cs
mov
dec
sbb
cmp
xchg
and
shlb
cmp
test
std
ficoml
mov
jns
sub
in
pop
push
jmp
insl
push
movsb
inc
jmp
mov
outsb
and
sbb
fs
inc
and
push
repnz
inc
cmp
jge
inc
and
dec
fadds
aaa
in
xchg
ret
out
lcall
mov
repz
pop
leave
dec
insl
mov
test
push
fdivs
sbb
shl
jmp
xchg
inc
xchg
in
and
fidivl
sarb
in
movsb
enter
and
scas
repz
jne
push
std
cmp
sbb
pop
in
shrb
adc
pop
fbld
jbe
push
je
in
bound
push
mov
sti
or
ljmp
pop
jae
fcomps
lret
push
pop
xor
jp
das
mov
pushf
loop
dec
cmp
rcr
and
test
jmp
xchg
jns
lret
loopne
lds
or
nop
bound
scas
or
je
xor
mov
lods
cwtl
pop
inc
dec
int
gs
test
mov
xor
scas
jmp
shlb
jp
aam
cmpsl
cmp
mov
jmp
sti
inc
lods
loope
mov
lea
fs
lods
or
jo
dec
cmp
mov
cs
loop
and
fmull
aad
cmp
test
and
xor
loope
iret
loopne
mov
push
push
ficoms
xchg
cmp
pusha
popa
iret
push
rorb
lahf
push
test
add
push
sub
imul
test
sahf
xor
push
pop
mov
and
pushf
xchg
push
xor
lahf
xchg
insb
sub
fwait
lahf
pop
call
inc
jns
lods
in
sti
insl
mov
sub
fwait
mov
repz
int3
push
shrl
push
pop
cmpsb
out
rol
pop
nop
shrl
testl
ret
out
inc
je
cmpsb
into
xchg
mov
add
push
jp
out
pop
push
pop
sbbb
pop
mov
negl
cld
lret
jnp
je
cmpsb
cmp
push
fcmove
jo
insl
add
cli
mov
mov
in
jo
fsubrl
loopne
push
and
movsb
xchg
std
pop
jl
mov
cs
jo
dec
cmpsb
lret
xchg
scas
cmp
arpl
leave
in
icebp
lcall
adc
aad
jle
adc
or
gs
cmp
stos
and
mov
inc
adc
sbb
add
jmp
push
cld
insb
inc
mov
adc
jle
rol
data16
inc
mov
jno
lret
mov
cmp
jg
test
push
out
int
xchg
outsl
jg
dec
sar
xor
das
push
fwait
adc
mov
out
jbe
popf
stos
add
cld
mov
mov
daa
popa
jae
jne
inc
cmp
push
jecxz
push
shll
push
dec
in
rcr
adc
jge
out
lea
xchg
pop
addr16
mov
in
jbe
lcall
sbb
cmpsl
nop
mov
jne
pop
ds
xchg
mov
sub
xchg
and
push
dec
cmp
sbb
sbb
pop
mov
cli
leave
imul
out
jle
shlb
dec
bound
add
pop
and
popa
test
dec
int
push
lret
stc
testb
stos
mov
mov
xor
sarl
sub
sbbl
adc
in
push
pop
mov
lret
hlt
jb
cmpsb
fidivrs
push
jb
cmp
pusha
cwtl
in
jbe
push
mov
jbe
aam
frstpm(287
test
stos
cli
out
dec
pushf
jp
mov
lock
and
xchg
imul
flds
mov
push
push
inc
xchg
iret
cmpsb
daa
sahf
iret
lds
std
psubb
ljmp
sub
adc
nop
inc
imul
sub
test
aas
pop
cltd
sbb
push
mov
dec
or
add
ja
push
add
fxch
cltd
xchg
call
sbb
jecxz
adcb
test
outsl
push
jb
js
out
add
incb
xchg
sbb
jmp
fwait
std
inc
jle
lret
imul
test
loope
ds
dec
jl
push
inc
dec
sub
jns
mov
mov
outsb
sbb
shrb
or
scas
adc
add
inc
hlt
aas
out
mov
xlat
test
adc
jge
xchg
inc
push
fs
push
popf
out
sub
xchg
sub
add
lcall
lea
mov
int3
sbb
rorl
fsubrp
mov
add
mov
fwait
out
dec
inc
pop
push
cwtl
cmpsl
mov
mov
shrl
mov
pop
xlat
ds
ja
in
and
je
cltd
aam
add
mov
das
pop
and
jl
out
xchg
cmp
mov
xor
mov
in
ret
adc
outsl
jg
sub
add
sub
loopne
dec
and
push
mov
mov
dec
test
dec
mov
inc
pushf
xor
adc
pop
or
jp
sbb
cld
sbb
add
jecxz
adc
cld
sub
add
sub
jmp
stos
inc
mov
jg
shlb
pop
into
mov
push
jl
mov
sbb
sub
ficoms
rcr
mov
xor
lods
push
cli
out
cld
xor
mov
sbb
arpl
pop
dec
jno
ret
cmp
test
cs
xor
roll
xchg
loope
push
stos
aaa
mov
push
push
cmc
stos
rcll
out
dec
sub
xor
jl
sub
mov
outsl
imul
inc
loopne
sub
fisubs
in
in
iret
test
push
fdivrs
in
aas
enter
dec
mov
and
inc
and
dec
call
xor
adc
add
push
pushf
and
adc
popa
pop
hlt
mov
notb
adcl
add
dec
in
bound
repnz
lods
ljmp
xchg
push
loope
in
cmp
pop
in
in
xchg
mov
jp
daa
xchg
sbb
mov
dec
sub
loope
inc
or
mov
insl
adc
mull
bound
mov
inc
pusha
and
mov
dec
inc
sti
and
test
cs
pushf
out
cmp
lock
sahf
inc
rcrl
and
out
out
inc
inc
mov
cmpsl
ret
cmpsb
xor
and
jbe
cmp
fimuls
pop
les
xchg
pop
mov
mov
push
and
loop
sbb
lahf
rcrb
xor
xchg
mov
bound
and
push
in
cltd
fnsave
iret
pop
fs
mov
addr16
outsb
push
cld
mov
sub
leave
mov
ss
inc
scas
add
stos
lds
add
jbe
mov
cmp
sarb
stc
sbb
std
pop
je
lods
adc
xor
push
adc
shl
xor
fdiv
cs
cmpsl
pop
sarl
jns
lret
mov
cld
sti
sbb
or
pop
add
jecxz
call
imul
pushl
arpl
push
xchg
inc
sub
into
pop
mov
lret
fstpl
push
inc
adc
ret
sbb
pop
test
dec
fdivs
daa
mov
lock
icebp
loop
cmpsb
and
xchg
mov
hlt
loope
outsl
jbe
aaa
jmp
divl
xor
dec
or
leave
ret
lock
cld
cmp
imul
mov
jne
fadd
jae
inc
stc
rep
inc
movsl
in
push
inc
iret
imul
enter
cld
sbb
add
addr16
inc
cltd
test
xchg
inc
xchg
lock
test
movsl
mov
cmp
test
mov
sbb
inc
lret
add
dec
loopne
mov
bound
leave
xor
mov
iret
popa
cmp
pop
xchg
sbb
fldl
cmpsl
stc
loopne
adc
data16
or
or
adc
icebp
fsubrp
cmp
int
loope
pop
je
adc
in
inc
xor
pusha
pop
shrb
add
in
fidivrl
mov
dec
cmpxchg
adc
cmp
cmpsb
fsubl
cmp
xchg
mov
push
mov
mov
js
jne
loopne
pusha
cmpsb
jae
divl
add
mov
cld
push
mov
push
les
cmp
sub
push
mov
jge
and
push
frstor
push
mov
nop
out
sub
outsb
push
inc
fsub
out
sti
mov
popf
inc
movsb
mov
sbb
push
shrl
cmp
sub
pop
push
push
ret
xchg
jecxz
push
mov
mulb
and
out
in
sub
enter
mov
cmp
cmp
xchg
fsub
pop
iret
pusha
inc
xchg
aam
mov
add
les
sbb
cmpsl
cltd
shrl
jg
subb
xchg
jp
jg
jno
jbe
jbe
cwtl
sub
fldl
test
fs
add
in
data16
int
dec
inc
aam
cmc
mov
std
add
dec
ret
jns
int
add
jno
add
mov
and
lahf
inc
cmc
aaa
imul
or
clc
fcomp
xor
push
inc
jg
sbb
scas
xor
push
sub
int3
fldenv
adc
pop
push
xor
pop
pop
push
push
inc
fs
pop
jle
int3
sbb
mov
stos
dec
pop
and
lret
sbb
add
adc
ficoms
push
das
leave
mov
mov
jbe
jb
xchg
imulb
aam
sti
les
arpl
add
mov
call
cmp
fprem
push
dec
fsub
das
xor
enter
out
out
test
ret
icebp
out
rcrb
sbb
cmp
mov
push
idiv
mov
lea
jg
bound
sub
js
xor
or
insb
xchg
adc
jp
outsl
jns
add
icebp
mov
mov
rcrl
cmc
dec
mov
aad
sar
mov
and
mov
inc
cmp
lret
adcl
insb
in
jle
dec
iret
jp
mov
pop
rcrl
mov
inc
cmpsl
push
fsubrl
in
movsl
pushf
mov
orb
stos
dec
xchg
scas
aam
fucomip
aam
cld
mov
cmp
sub
cmp
inc
js
je
cmp
push
push
ljmp
iret
int3
or
cmp
cmpsb
sub
sahf
jno
or
aam
stos
pop
ja
clc
sbb
daa
push
shrb
cmpsl
sub
fstpt
xchg
xor
xorb
pop
loop
jmp
aad
mov
jle
inc
xchg
in
jmp
stos
lcall
rorb
xchg
out
in
mov
cmp
xchg
loope
lock
scas
mov
inc
pop
dec
jecxz
lods
test
sub
mov
xlat
movsl
ret
mov
mov
adc
mov
adc
cmp
loope
arpl
adc
sbb
out
fwait
aas
jno
cmp
aas
or
lahf
mov
arpl
pop
andb
sbb
testl
mov
out
inc
xchg
sbb
aad
stos
jb
int3
jbe
push
hlt
add
xor
xchg
dec
add
call
sti
pop
jecxz
pop
push
cmp
arpl
mov
movsb
push
mov
pop
shr
popf
dec
sub
push
rclb
adc
iret
out
inc
jmp
fldt
xor
rorl
mov
adc
xchg
pop
mov
dec
dec
or
cmp
push
jo
and
repz
test
sbb
testb
mov
push
mov
mov
int3
xchg
out
mov
mov
clc
sti
mov
mov
dec
insl
or
mov
nop
dec
cmp
push
mov
dec
mov
pop
mov
jle
std
repz
sahf
movsb
shlb
mov
jmp
add
sbb
sub
sbb
cmpsb
das
push
test
jns
adc
push
adc
in
cmp
ds
test
push
outsb
imul
sub
xchg
push
mov
cmp
es
ja
pop
pop
loope
jge
xchg
push
mov
or
iret
pop
popf
mov
cwtl
rcll
sbb
sub
leave
adc
ss
push
pop
mov
fisubrs
stos
mov
sbb
xorb
inc
std
popa
xor
mov
test
mov
mov
add
mov
or
into
ret
gs
mov
mov
loope
imul
addb
leave
mov
xchg
jns
jmp
stos
es
mov
jb
ret
mov
shlb
push
addl
pop
fmuls
out
cmp
ljmp
sbb
ret
inc
jnp
or
dec
movsb
mov
dec
jae
psubusw
sub
mov
repz
push
nop
lods
cmp
gs
and
outsb
jno
in
daa
xchg
lods
mov
aas
push
mov
insb
in
mov
cmp
or
mov
mov
xor
js
adc
cmpsb
xchg
mov
add
in
dec
xchg
cmpsb
fimuls
out
dec
lods
inc
pop
imul
push
xor
lods
push
or
cmp
call
cwtl
jl
xor
mov
fwait
dec
test
or
cmp
je
sbb
mov
sbb
sub
repz
lods
mov
sarb
add
sahf
dec
lock
mov
mov
scas
xchg
imul
xor
mov
pop
out
roll
lods
sbb
jmp
jno
in
stos
inc
iret
ret
mov
push
push
inc
and
ja
mov
inc
fisubrs
mov
out
int
loop
adc
insl
mov
push
test
push
loope
inc
push
cltd
mov
sub
cmp
jns
xchg
ret
add
imul
scas
rcrb
icebp
insb
out
push
out
pop
cli
pop
mov
add
mov
jno
ljmp
test
mov
lds
stc
mov
cld
push
push
je
inc
pop
mov
or
test
stos
push
push
and
lahf
dec
inc
outsb
int3
cmc
sbb
js
sbb
sbb
mov
daa
not
loope
inc
aam
jecxz
xchg
dec
sub
xchg
fldenv
and
cmpsl
inc
icebp
xor
dec
test
adc
jne
add
inc
add
repnz
jge
mov
lds
mov
dec
clc
inc
cwtl
ret
or
dec
cld
orb
pushf
jg
icebp
xor
test
push
lcall
lcall
push
gs
movsl
daa
repz
cwtl
cli
sbb
cmp
pop
das
and
rorb
cmp
mov
mov
jp
in
dec
cmp
shll
jns
xchg
divb
lds
mov
jl
adc
nop
pusha
cmc
sbbb
push
iret
adc
mov
jg
mov
clc
lock
jmp
sub
or
ja
cmpl
lock
xchg
insl
daa
daa
push
inc
pop
push
fstps
xchg
in
fdivrl
pop
xchg
mov
push
add
add
pusha
jo
mov
das
jecxz
pushf
and
ja
mov
adcb
or
or
mov
jno
sub
add
scas
and
aaa
sbb
jo
std
sbb
jmp
js
cmp
dec
out
xchg
inc
std
aaa
ja
movl
mov
jbe
test
data16
push
inc
mov
xchg
in
jle
scas
fnclex
xchg
push
jb
sbb
in
jle
into
ret
int
lahf
add
add
repnz
sub
cmp
cwtl
pop
mov
pop
insl
inc
pop
subl
mov
jns
inc
mov
xchg
dec
sbb
stos
rorl
or
xlat
fisubrl
iret
aad
lahf
jnp
loop
xchg
mov
or
rorb
xchg
test
scas
leave
pop
fisttps
jmp
lcall
sbb
ret
insl
es
mov
lahf
push
loope
cmp
ss
loop
pop
out
iret
jns
mov
cmpsb
sahf
mov
mov
popf
jbe
outsb
inc
aam
sub
cmp
or
movsb
outsb
mov
pop
dec
pop
test
les
push
arpl
push
xchg
rcr
inc
dec
fldcw
xchg
mov
dec
into
out
pop
ret
aas
outsl
push
pusha
setp
jp
adc
dec
xchg
fisubl
adc
sahf
insl
shll
inc
movsb
cmp
jge
loop
in
imul
add
insb
xchg
cmp
cmp
inc
inc
pop
push
sbb
dec
cmpl
nop
aam
mov
out
dec
sbb
aaa
mov
aam
mov
cmp
adc
inc
nop
dec
sub
add
lds
push
sbb
imul
movsl
movsb
pop
sub
jg
ja
inc
shll
mov
cmp
mov
xorl
hlt
sbb
addb
add
stos
dec
xor
sbb
ret
adc
icebp
aaa
inc
push
mov
xor
dec
jge
clc
push
inc
sub
das
sub
cmp
lods
pop
mov
sub
xor
std
decl
fldl
pop
jb
cmpsl
aas
adc
lret
loopne
push
out
sbb
cmpsl
imul
shl
sub
es
repz
adc
xor
mov
mov
sub
add
pop
mov
mov
dec
mov
adc
mov
pop
sahf
push
cmp
xchg
mov
lds
adc
push
mov
addr16
adc
es
sub
inc
cli
add
push
push
aaa
xor
xchg
lds
arpl
insb
jmp
dec
ds
sbb
mov
insl
adc
or
dec
arpl
insb
aam
inc
call
inc
mov
sub
mov
gs
or
lret
jecxz
js
inc
ret
lcall
loope
xchg
xor
xchg
addb
mov
inc
and
xlat
mov
pop
stc
xchg
lret
imul
lret
adc
fiadds
arpl
push
fadds
mov
aad
in
adc
push
or
add
in
cmpsb
cmp
in
mov
outsb
cmp
pushf
je
mov
fiadds
sbb
insb
mov
sarl
sbbb
aaa
add
shl
mov
dec
ret
dec
hlt
fwait
cmp
ljmp
push
stos
xor
dec
sbb
push
popa
xor
inc
les
mov
fcoms
inc
scas
mov
int
into
add
inc
andl
fcmove
add
xchg
pop
cwtl
and
inc
bound
xchg
push
cmpsb
and
cmp
xlat
movsb
sbb
fsubrs
sbb
enter
xchg
jns
and
lea
or
push
ljmp
or
nop
test
mov
mov
mov
daa
mov
lock
popa
push
cmc
xor
adc
leave
daa
cli
loop
add
das
mov
fcomps
jp
dec
enter
xor
add
dec
push
cs
clc
push
xchg
push
and
ja
pushf
jno
push
mov
insl
fcmovnb
dec
cmp
add
andb
rclb
inc
out
jecxz
sbb
push
in
repz
mov
xlat
dec
mov
add
in
and
adc
mov
cmp
mov
jecxz
ficoms
test
push
stos
mov
test
in
jge
mov
fisttpll
decl
pop
loope
mov
popa
pop
fabs
mov
js
pop
jmp
sarl
clc
jo
mov
and
imul
sbb
aad
movsb
xchg
lds
cmp
std
inc
cmp
mov
sahf
fwait
adc
mov
xchg
xchg
mov
inc
lds
pop
loop
out
add
or
cmpsl
or
and
adc
xchg
mov
pop
jl
push
mov
xor
je
std
in
cld
or
inc
and
inc
mov
shlb
sti
push
ror
or
insl
xchg
scas
ja
stos
mov
sbb
fsubr
jo
sub
nop
push
shlb
je
sbb
into
pop
movsb
into
mov
jp
fbld
sbb
clc
adc
mov
adc
xchg
mov
ret
jnp
mov
lods
sbb
inc
jmp
inc
pushf
adc
push
mulb
xadd
adc
lock
cmp
xchg
xlat
shrl
mov
popf
pop
adc
iret
push
sbb
cs
adc
pop
push
nop
paddb
pusha
sbb
outsl
push
test
add
lock
sbb
pop
ds
xchg
mov
pop
fidivrs
push
pop
xchg
inc
push
bound
subb
hlt
into
dec
roll
je
sbb
negb
out
jbe
cmp
sub
mov
loopne
in
mov
inc
rorl
psrad
adc
push
addr16
test
jp
mov
scas
jle
pop
outsb
or
scas
daa
sbb
mov
push
fidivrl
repnz
call
js
jns
or
stos
aas
dec
dec
test
adc
ljmp
out
mov
jno
jns
mov
ret
pop
setns
arpl
mov
stos
mov
lcall
pop
pop
ret
add
dec
mov
addr16
mov
and
mov
adc
rol
fstpt
jo
rorb
dec
cmpsl
dec
add
adc
pop
mov
shlb
imul
cwtl
sub
dec
loopne
xchg
cmp
mov
inc
jnp
movsl
fdivrp
mov
mov
xchg
pop
iret
mov
insb
cmc
jecxz
pushf
scas
imul
mov
or
mov
cltd
cmp
sbb
jnp
int3
idivb
imul
lock
and
in
push
pop
pop
sahf
movsb
ds
mov
pop
inc
jne
cld
mov
mov
scas
mov
shl
lds
xlat
pop
mov
xor
push
add
iret
mov
pop
add
lahf
icebp
fnstsw
mov
aas
call
loope
inc
loop
inc
or
sbbb
adc
imul
sub
inc
cmp
inc
cmpsb
aas
clc
enter
iret
iret
insl
roll
jge
cld
push
and
shrb
fisttps
imul
inc
stc
mov
shrb
test
ljmp
xchg
jae
popf
fwait
lds
scas
sbb
in
in
das
std
xchg
mov
jmp
dec
sbb
pop
xchg
popf
add
mov
push
icebp
jmp
xor
sahf
cmp
xor
rcr
fcomp
inc
sub
push
dec
js
adc
inc
add
and
jae
sub
les
jne
jo
cmc
fildll
and
es
subb
push
lahf
les
adc
cmpsb
jb
aas
shrl
cwtl
gs
fsubrp
push
mov
or
rolb
mov
push
int3
aaa
and
sbb
jae
and
hlt
iret
in
jmp
clc
call
xor
jno
pop
cmpsl
adc
stc
xchg
pop
xchg
aaa
mov
or
push
es
xchg
dec
inc
ljmp
popa
test
arpl
mov
xchg
loopne
call
inc
out
es
jno
jle
lea
fsub
adc
daa
jae
int3
aas
addr16
push
jbe
out
jge
ja
or
inc
dec
aam
aad
ss
jmp
dec
xchg
jmp
inc
adcl
das
stos
inc
jg
adc
push
jae
xchg
jne
repnz
shll
and
aam
jmp
jmp
add
jns
push
loope
pop
mov
push
movsb
jb
fwait
inc
jmp
fadds
xchg
subb
xor
xchg
bound
cmp
adc
jl
adc
pushf
repnz
popf
push
mov
inc
mov
sbb
movsl
std
inc
xor
mov
xor
push
dec
test
in
push
jp
mov
adc
push
lcall
arpl
mov
mov
aas
cmp
cmp
push
push
mov
fisubl
jb
movsl
fsts
dec
in
pop
xchg
push
push
sarl
add
mov
dec
sarl
fsubl
bound
or
aaa
add
mov
pop
aas
ds
loopne
xor
xchg
sub
rcll
lods
sbb
push
push
loop
push
mov
mov
scas
popa
xor
cmovl
or
jle
loop
pop
pop
rclb
lea
pop
pop
clc
fists
add
je
cltd
pop
cwtl
pop
inc
mov
mov
or
xchg
in
inc
scas
hlt
push
and
int
xchg
jp
dec
lcall
and
mov
adc
icebp
aas
or
fsubl
mov
jmp
pop
jae
inc
daa
in
ljmp
jae
notb
xlat
mov
adc
push
mov
push
dec
add
mov
or
jo
push
ja
ficomps
sub
cmc
mov
push
in
jle
inc
test
jp
xchg
adc
push
loop
movsl
mov
pop
add
clc
movsb
mov
movsl
xchg
xor
enter
test
lea
adc
jmp
mov
sub
or
test
inc
mov
int3
xor
inc
push
js
pavgw
outsb
lock
testb
divl
pop
jg
stc
cmp
pop
jg
xlat
sub
scas
dec
push
cltd
cmp
dec
lahf
fidivrl
ja
jbe
repz
andl
mov
clc
pop
push
lods
jnp
dec
jne
rcrl
xor
sti
imul
cmc
sbb
mov
push
pop
scas
push
jle
lret
mov
jecxz
sbb
push
mov
xor
lret
cmp
test
xchg
nop
ljmp
mov
mov
insb
fsubrp
data16
arpl
je
xchg
je
jae
sub
out
sbb
lahf
cmp
in
inc
lds
pop
add
imul
fs
xor
push
mov
fs
lret
loope
ficomps
aaa
dec
dec
sahf
sahf
cli
push
ds
das
sub
xchg
add
shlb
cmc
and
xchg
xor
mov
and
mov
aaa
ja
in
je
daa
adc
jg
fdivrs
jmp
pop
divb
xor
mov
or
add
push
or
inc
test
jecxz
enter
adc
add
mov
add
faddl
mov
into
lods
pop
mov
outsb
cwtl
clc
sub
adc
scas
xchg
rcrb
lods
xor
out
push
in
daa
mov
pop
pop
out
add
xchg
inc
add
push
pop
sbb
or
movsb
xorb
fldt
xor
repz
xchg
mov
popf
out
je
jne
xchg
movsb
xchg
ret
rcrl
insb
int
and
and
push
lods
mov
sbb
dec
fmuls
cltd
push
sti
cmp
jno
xor
xchg
pushf
pop
jp
mov
fdivs
repnz
jg
dec
mov
scas
jmp
inc
mov
pop
adc
dec
jns
lock
imul
mov
mov
jg
mov
gs
add
sahf
xchg
ret
jl
mov
loop
mov
sub
jae
or
xchg
add
dec
test
cmp
insb
lret
inc
fimuls
mov
lods
xor
loop
mov
popf
flds
cltd
mov
bound
add
jle
push
dec
sub
jmp
das
in
mov
add
outsb
pop
xor
hlt
pop
push
std
push
pushf
push
jecxz
mov
aaa
andl
xchg
sub
mov
inc
outsb
adc
jp
push
dec
dec
lahf
int
lret
lds
sub
xchg
mov
jg
sub
jge
loopne
push
or
in
lea
pop
iret
xchg
ss
dec
stos
mov
dec
push
inc
movsb
pop
sub
and
enter
inc
push
jns
or
push
or
push
push
movsb
inc
push
inc
rorl
cmp
orb
pop
aam
ljmp
pop
or
add
cmc
fdivr
out
push
testl
xlat
sub
cmpl
jno
in
xor
mov
cmpsl
aad
inc
lret
call
xor
inc
adc
pop
rcrb
push
gs
ss
jmp
xor
xor
mov
and
sub
jb
lcall
ret
cli
xchg
andb
mov
mov
inc
cmp
lcall
xchg
aaa
fincstp
xchg
jbe
ss
or
setbe
fwait
ret
imul
movsl
adc
mov
insb
scas
xchg
test
mov
pop
fldl
sbb
lods
scas
jge
push
enter
mov
fisttpl
sbb
repz
pop
add
fxch
lods
stc
inc
loopne
test
orb
sbb
or
xchg
cltd
fidivl
pop
mov
dec
and
jmp
test
sar
cmp
or
pop
dec
fstl
das
xor
sarl
fcomps
lret
test
sub
mov
sbb
js
xchg
pop
adc
mov
jmp
xor
fdivrs
jle
and
adc
xchg
push
imul
push
xor
xchg
dec
lds
inc
lcall
add
ss
xor
dec
jg,pt
mov
test
adc
push
mov
xlat
push
sbb
jle
inc
ficomps
sbb
es
cmp
mov
mov
cmp
xchg
leave
bnd
aaa
lcall
cmpl
mov
pop
popa
or
idivb
into
repnz
seto
gs
fsub
or
push
push
clc
mov
adc
daa
nop
out
out
in
adc
dec
sub
and
and
jmp
or
rcrb
mov
rol
lock
pop
loopne
jg
lods
inc
inc
mov
mov
add
jo
mov
in
icebp
ss
out
xor
sti
mov
popf
popf
dec
mov
sub
repz
xor
mov
in
pop
mov
testl
or
ret
dec
mov
shr
push
mov
test
jne
xchg
in
andb
fsubrl
test
lods
fsubp
mov
call
out
bound
push
loopne
dec
inc
jge
aam
add
test
sub
testl
ficoms
rsm
int
and
adc
adc
pop
xor
cltd
dec
inc
jl
rep
cld
ljmp
int3
jnp
xor
mov
mov
pop
movsb
int
scas
jne,pt
dec
mov
sti
xor
lret
dec
repz
rorl
dec
pusha
dec
fstpt
add
je
sarl
mov
mov
jge
mov
pop
sub
lods
or
fwait
rcrb
cwtl
pusha
test
hlt
inc
cmpl
loop
adc
ja
mov
and
mov
lahf
ds
sbb
imul
xor
inc
xchg
sbb
dec
in
sbb
mov
aad
mov
mov
jge
jbe
andb
mov
subl
sahf
mov
mov
adc
cmp
dec
sub
adc
or
repz
jns
mov
popa
add
rol
cmp
jne
cmpsb
inc
cmp
xor
outsb
cmp
pop
lret
sarb
mov
jnp
out
sbbb
les
pop
dec
jne
fimull
dec
movsb
xchg
ss
cmp
or
std
icebp
imul
xor
pop
xor
repnz
cmp
sub
lea
mov
dec
push
push
mov
rorl
in
stos
or
test
or
inc
dec
and
mov
jno
call
add
push
jb
shlb
sub
mov
mov
inc
cmpsl
and
push
cmp
push
push
popl
loope
repz
pusha
lds
mov
inc
mov
add
and
icebp
push
xor
jg
and
pop
fldenv
jne
mov
ljmp
jne
imulb
cli
flds
adc
nop
cld
xlat
test
popa
lretw
test
dec
mov
test
shlb
jge
pop
pop
mov
pop
jo
outsb
mov
mov
add
mov
addr16
xor
inc
jns
fwait
pop
sub
fwait
ret
cmpsb
xor
es
lahf
sub
inc
push
sub
xchg
andl
and
loop
and
outsb
iret
rolb
lds
fists
fbstp
ja
mov
dec
arpl
push
or
int3
ret
addr16
pop
xchg
insb
into
mov
pop
icebp
incb
jns
jmp
add
push
cmp
dec
jb
stc
insl
push
xchg
jno
mov
sub
push
jbe
jns
imul
inc
js
pop
bound
xchg
clc
or
mov
loope
js
cmp
fcoml
mov
adc
loope
mov
inc
push
insl
mov
imul
mov
xor
cmp
cli
and
stos
dec
outsb
add
fimull
dec
hlt
mov
mov
stos
dec
dec
int3
syscall
or
je
pop
loop
adc
or
popf
sbb
hlt
lods
ja
dec
out
test
test
sarl
push
aam
and
add
loop
outsb
shll
add
ss
xchg
cmpsb
movsl
sbb
aam
xor
jns
jge
das
xor
cltd
int3
xor
adc
jg
lcall
pop
test
add
mov
das
mov
xchg
lahf
lock
scas
in
mov
inc
sub
dec
repz
lock
push
add
dec
insb
in
xchg
lret
addr16
jb,pn
pop
out
test
sbbl
shll
ficomps
test
inc
sbb
adc
jno
inc
loopne
inc
repnz
mov
test
sub
push
mov
sbb
movq
bound
loope
out
pop
test
inc
mov
imull
sahf
outsb
mov
push
pop
jmp
xor
adc
jo
aaa
xchg
jbe
enter
and
sub
clc
jecxz
mov
in
in
gs
and
cmpsl
jl
cmp
inc
xor
sahf
adc
and
dec
sbb
or
jg
dec
outsb
and
icebp
subb
in
je
stc
fwait
lret
sti
mov
out
sub
leave
popf
iret
mov
cli
inc
lods
mov
or
mov
add
out
fdivp
stos
dec
sbb
push
loop
int
xor
stos
add
sbb
push
dec
leave
int
ds
pushf
call
mov
jne
in
mov
mov
dec
cmp
jge
mov
std
push
cmp
insb
push
loop
in
adc
dec
enter
fldenv
enter
mov
mov
out
and
xlat
stos
sbb
jmp
popa
int
xchg
pop
push
insb
xor
mov
or
cmp
incb
gs
sbb
adc
or
stos
test
mov
scas
mov
cmpsl
pusha
pop
mov
push
sub
ljmpw
dec
fstpl
mov
pop
aas
jecxz
mov
dec
mov
in
aaa
inc
sbb
dec
push
dec
mov
pop
jmp
es
mov
mov
cs
fnstcw
cmp
mov
push
aam
sub
xor
xchg
stc
call
scas
cld
cmp
mov
fdivl
sahf
decb
jecxz
add
sti
into
jg
adcl
jo
inc
sar
xchg
ret
add
arpl
push
mov
divl
in
push
pop
test
mov
mov
adc
ficoms
shll
cmp
dec
fcomps
jo
cli
iret
inc
cmpsl
js
inc
faddl
cmp
mov
sub
repnz
jmp
xor
out
push
out
test
mov
mov
outsl
push
das
push
sbb
pushf
shll
mov
sbbl
fildl
add
pop
sub
pop
incl
xor
lock
xchg
test
fs
adc
and
adc
es
rcll
iret
push
push
xchg
mov
inc
pop
cmpsb
dec
sub
mov
inc
or
xlat
add
inc
xor
fists
lock
cmpsl
xchg
ss
cmp
movsl
ret
ret
movsb
mov
fwait
std
imul
loopne
pop
push
adc
in
les
xchg
incb
mov
jnp
ja
dec
mov
and
icebp
xchg
xchg
jmp
les
cld
stc
ret
stos
push
dec
cltd
or
out
cld
leave
ja
inc
sub
xchg
or
out
jns
out
outsl
sbb
pop
sub
negl
scas
int3
and
dec
decb
mov
addr16
adc
addl
push
and
popf
mov
pop
dec
cmc
cmp
or
hlt
mov
popf
fisttpl
pop
xchg
xor
arpl
repz
mov
lret
jno
xchg
std
sub
pop
mov
xor
add
add
pop
int3
loope
pop
adc
push
dec
mov
sub
pop
lods
inc
jnp
inc
jmp
out
mov
movsl
fs
ja
xlat
jp
jno
push
ret
adc
push
jns
cwtl
mov
jno
and
or
fdivr
jno
inc
shl
xor
mov
int3
fsubs
scas
mov
mov
push
fstpt
jge
fwait
pop
push
call
dec
adc
iret
enter
and
mov
faddl
insl
and
je
pop
and
adc
pushf
adc
mov
push
arpl
cmpsl
inc
add
pop
js
push
aad
dec
push
test
leave
add
push
sub
or
test
inc
xor
sbb
jo
fwait
pushf
push
ret
scas
push
push
stc
arpl
mov
fsubp
js
in
or
je
je
mov
dec
lock
jae
test
aaa
int3
inc
add
lret
cmp
and
imul
loope
aaa
mov
fstps
dec
adcb
lcall
pop
test
mov
movsl
inc
cmp
aaa
std
adc
sbb
lret
mov
arpl
iret
push
leave
iret
int3
and
push
in
in
test
push
pusha
dec
loop
jge
cmp
push
or
push
jns
adc
jb
mov
dec
xor
les
cmp
jmp
inc
push
mov
cmp
mov
push
testb
mov
lods
notl
xchg
aas
leave
test
pop
mov
mov
xlat
ret
lret
pop
cmc
pop
pusha
int
adc
test
adc
cltd
cmpb
leave
mov
inc
mov
in
aam
or
inc
cld
push
jl
movsb
repz
arpl
xchg
xchg
loop
mov
push
sbb
insb
fdivr
and
jne
ja
imull
push
das
fdivrs
inc
cmp
js
mov
jb
dec
lret
test
inc
and
imull
fwait
cltd
cmp
mov
xlat
int3
aas
into
bound
adc
pop
push
mov
outsl
mov
or
adc
dec
inc
imul
xor
pop
xor
in
xor
mov
in
pop
sub
xor
sbb
in
addr16
dec
adc
xor
mov
inc
push
sub
cmc
lds
sbb
mov
lock
mov
adc
std
sbb
enter
inc
xor
lods
shll
and
into
push
inc
loope
and
jmp
ret
das
testb
push
mov
push
sub
jg
fs
scas
add
out
add
dec
add
or
icebp
filds
shrb
ljmp
mov
lods
and
mov
sbb
xchg
nop
sbb
fdivrs
cwtl
jmp
and
cld
jp
push
pop
inc
xor
dec
in
mov
decb
pop
jno
sub
mov
mov
jo
cld
inc
cmp
push
or
dec
divl
aad
gs
jbe
loopne
add
pop
std
dec
fildl
xchg
xor
das
pop
bound
cld
ss
outsb
adc
out
popf
sub
loopne
fstpl
sub
insl
pop
push
lds
mov
test
test
jl
cmpsb
adc
insl
sbb
enter
jl
fwait
icebp
jmp
out
scas
or
cmp
or
sub
or
xor
test
sarl
sbb
mov
xor
mov
mov
inc
inc
fistpll
and
cwtl
mov
mov
sahf
adc
xchg
add
cmp
in
sbb
dec
pop
pop
fisubl
jns
bound
jbe
clc
mov
push
jns
pop
xor
xchg
push
jo
pushf
xchg
lret
popf
stos
cmp
test
sbb
lods
xor
cmpsb
divl
xchg
sti
push
in
fcomps
fists
sbb
popa
cli
ljmp
je
out
aam
pop
or
pop
mov
repz
dec
lods
mov
sub
cmp
dec
in
out
prefetch
or
ja
setge
in
inc
add
push
push
mov
mov
je
out
ja
jae
fwait
jae
jo
xchg
in
out
sbb
je
pop
adc
aas
mov
dec
cmp
sbb
scas
popf
mov
imul
mov
outsl
adc
mov
int
roll
push
push
fimuls
adc
and
push
push
in
fmull
dec
sub
bound
insl
add
lea
imul
loopne
jg
dec
add
adc
push
jnp
rorb
cmpsb
in
and
sbb
cmp
popf
in
or
adc
xor
hlt
mov
fdivs
xorb
repz
mov
mov
fmull
test
imul
dec
std
ja
cwtl
outsl
or
inc
repnz
push
add
lock
outsl
pop
cmc
ret
loopne
dec
jle
insb
enter
lret
push
imul
sub
int3
mov
and
dec
sub
lods
push
enter
sub
add
xchg
lret
dec
push
inc
arpl
jge
and
std
pop
fldt
sbb
xorb
mov
sbb
sub
add
push
out
mov
adc
fsubs
and
push
sbb
rorb
sbb
lds
xor
repnz
jg
or
mov
mov
aas
add
mov
jcxz
adc
call
adcl
in
jne
out
mov
push
mov
in
mov
ret
cmpsl
adc
sbb
pop
sub
cmp
xchg
outsl
popa
cmc
fnsave
xchg
mov
das
in
sub
mov
xlat
xor
push
inc
xor
cmc
fstpl
add
add
xchg
or
stc
lods
sahf
mov
push
cld
xor
inc
sbb
pop
pop
push
and
and
dec
lods
rclb
inc
aad
push
mov
loopne
xor
mov
jp
cmc
add
jp
lcall
div
ljmp
inc
mov
push
test
add
les
rcrl
cwtl
mov
jo
nop
mov
xchg
jb
das
into
mov
fstp
out
stc
ror
in
outsl
cld
mov
call
cli
aad
or
and
mov
dec
xor
mov
pop
sti
scas
dec
xchg
ja
pop
lret
mov
repz
nop
mov
adc
mov
iret
lods
or
and
in
or
xchg
clc
lods
lahf
sbb
repnz
cmp
xor
mov
ror
fwait
arpl
adc
cmc
mov
add
push
jns
das
cmpsb
dec
inc
lods
and
ret
inc
andb
rolb
sbb
push
lods
and
push
inc
cmp
pop
jmp
movsb
jmp
outsl
adc
inc
jle
lahf
sbb
mov
dec
xor
lock
cmpb
repz
adc
lret
iret
and
sub
xor
orb
loope
lds
adc
data16
test
sahf
test
call
sahf
shrb
cmp
cld
andl
js
cmpb
inc
pop
data16
add
mov
mov
mov
cmp
inc
cmpsl
ja
mov
aam
fists
inc
xchg
repnz
insl
push
jl
sub
lret
fists
aad
std
insl
lea
test
loopne
test
mov
ljmp
dec
xchg
cwtl
jl
and
inc
test
and
inc
jmp
xor
jle
or
mov
push
cmp
repz
mov
cmp
clc
sbb
nop
fildl
jns
insb
clc
ja
push
and
jle
mov
neg
push
push
lret
popf
adc
rorb
lock
popa
mov
inc
mov
cld
xor
pop
adc
and
fistpl
aad
shll
xor
test
aaa
add
cmp
sub
and
jbe
cmp
scas
dec
inc
dec
jae
and
fiadds
int
mov
add
cmpb
sbb
cmp
dec
mov
adc
cmp
dec
sbbb
fdivp
lods
xlat
mov
adc
leave
jbe
std
dec
cld
adc
fwait
inc
push
jp
lea
and
inc
fbld
loop
adc
push
sub
scas
mov
inc
mov
xchg
outsl
fnstcw
sahf
jnp
pop
pop
cmp
push
sub
lds
aam
fidivs
push
es
dec
adc
pop
test
sub
in
jno
shrb
dec
mov
pop
pop
je
jb
cmp
jl
sti
test
ret
nop
push
pushf
mov
scas
cmp
xchg
pop
pop
fldt
out
in
pop
rcll
cmc
loop
pop
xchg
lcall
fstpt
clc
xor
test
or
jne
out
sub
notb
sub
cwtl
mov
dec
sti
insl
aam
jg
mov
xlat
into
stc
es
in
pop
mov
adc
inc
call
jl
aaa
out
sub
sub
mov
sbb
sub
cmpl
inc
sbb
pusha
aaa
cmp
sub
pop
int3
pop
cmp
pop
aam
xchg
dec
jl
dec
inc
add
stos
adc
xor
xor
into
and
dec
notl
lret
repnz
push
inc
adc
adc
add
ss
fdivrl
or
add
cmp
enter
outsb
dec
inc
or
sub
das
mov
scas
mov
inc
inc
test
es
mov
push
and
pusha
sub
insb
stos
pop
lods
xchg
and
sub
clc
sub
adc
fistl
arpl
pusha
dec
xchg
outsb
jno
pop
out
add
leave
repz
sub
outsb
outsb
std
push
in
das
push
pusha
push
mov
adcl
in
lods
lcall
mov
push
hlt
jge
jp
rcll
mov
loop
push
sub
lods
pop
fs
dec
push
out
mov
xchg
je
stos
repnz
inc
loopne
and
dec
mov
mov
jnp
rcrl
mov
mov
clc
insl
mov
pop
ror
xor
xchg
xlat
leave
enter
sbb
shl
or
and
cwtl
pop
mov
xchg
sub
sbbb
mov
pop
xchg
inc
or
dec
or
aaa
rclb
bound
faddp
mov
les
cmpsb
inc
test
test
mov
jecxz
lcall
pop
adc
push
inc
cmp
pop
cmp
aas
lahf
xchg
inc
adc
jmp
roll
pop
inc
movsb
mov
fwait
jmp
adc
iret
push
pop
repz
xor
inc
ds
shrl
push
jg
rclb
mov
jns
stos
scas
in
push
inc
sti
dec
lds
jae
dec
pop
std
int3
sub
int3
mov
xchg
sbb
loopne
pop
dec
mov
xor
mov
cmp
push
popf
xor
je
mov
in
lcall
addr16
push
adc
fdiv
hlt
push
sbb
mov
sbb
pop
fldcw
lcall
std
test
or
int3
mov
outsl
sti
and
xchg
xchg
mov
dec
xchg
xchg
push
pop
and
dec
rcll
rorb
fcmovnb
test
in
sbb
mov
pop
js
mov
pop
lods
es
xchg
std
mov
cs
xchg
je
xor
scas
push
or
popf
in
cmpl
dec
aaa
inc
lret
sub
xchg
mov
testl
mov
jmp
dec
pop
lret
inc
add
push
cli
gs
cli
mov
pop
repnz
ljmp
test
xor
jg
cmp
cs
out
jne
xchg
cmc
inc
cld
inc
and
mov
push
cmpl
cmp
sahf
jae
cmc
xlat
adc
es
in
in
adc
sbb
dec
js
or
inc
xchg
jg
js
jno
cmpsb
xlat
add
push
sub
pop
inc
sub
cmpsl
push
adc
mov
push
cmp
adc
push
cltd
fcoms
je
inc
stos
icebp
lods
mov
test
sub
sub
int
or
dec
sub
mov
xchg
andb
mov
adc
add
jle
jns
daa
mov
mov
sub
imul
xor
out
dec
jns
push
push
pop
push
hlt
cld
sub
loope
push
insl
call
leave
cmc
ja
ret
stc
sbb
sbb
mov
mov
mov
scas
repz
mov
xor
lcall
inc
sbb
fiaddl
dec
loope
and
adc
roll
data16
scas
inc
dec
gs
repnz
fsubrl
lret
cs
inc
xchg
push
aad
jp
sarl
xchg
aam
addr16
jle
cs
xor
push
add
clc
jo
mov
jmp
xor
test
sbb
or
imul
sub
push
cmpsb
test
xchg
mov
ja
test
or
fcmovb
fstpt
push
mov
stos
out
scas
ficomps
outsl
ljmp
adc
inc
xchg
fwait
xchg
sub
sub
cmp
enter
insb
adcb
mov
shll
or
std
adc
inc
mov
sub
xor
aaa
nop
inc
fs
gs
outsb
outsl
cmp
fldenv
cwtl
lret
js
lahf
iret
fwait
ret
xchg
dec
sarl
cmc
sub
xchg
push
dec
or
lret
push
sbb
test
mov
jno
push
push
pop
adc
mov
movsl
mov
lret
sti
sbb
repz
fs
xor
lahf
sti
int3
clc
cmp
test
lds
out
out
loop
pop
add
sub
xorb
or
sbbb
enter
cwtl
imul
test
shrl
aad
int
xchg
sarb
add
dec
ficompl
jae
stos
mov
stos
sbb
pushf
enter
push
cmpsb
and
testl
mov
test
fscale
mov
call
das
mov
shll
cltd
mov
hlt
and
stos
sub
lcall
aam
aaa
icebp
cwtl
lods
loop
outsl
gs
inc
xchg
cmp
sub
loopne
cmc
rolb
xchg
repz
ret
add
cmpsl
push
inc
cmp
and
cmp
inc
lcall
ss
mov
push
adc
mov
jle
mov
pop
or
push
mov
lahf
sub
pusha
in
xor
push
sub
mov
dec
dec
ror
into
aaa
mov
sbb
pop
jecxz
data16
mov
mov
fists
xchg
add
pushf
fwait
loop
sbb
ret
es
dec
pop
lret
sbb
push
xchg
bound
push
mov
adc
jge
cwtl
in
out
insb
mov
outsb
incb
cmpl
jno
cwtl
xchg
add
movsb
daa
aam
incl
in
test
xchg
pop
push
ja
outsl
pop
xor
fidivrs
and
push
push
cld
mov
stos
xor
pop
mov
out
sub
js
mov
dec
dec
and
mov
dec
inc
inc
push
cwtl
test
push
out
in
loope
dec
cmp
orb
pop
cmp
mov
pop
out
xorl
movsb
adc
mov
ss
in
iret
or
aam
lret
xchg
xor
mov
inc
out
mov
std
lds
pusha
xchg
xor
ret
shlb
into
cwtl
push
and
mov
pop
cmp
cli
dec
jns
insb
repnz
int3
push
cmp
divl
sub
in
xchg
insb
xor
or
mov
push
fwait
ds
movsl
roll
sub
mov
sbb
popf
mov
push
jle
std
push
in
clc
push
sarl
nop
rcrb
add
in
and
cmp
incb
inc
and
xchg
icebp
testl
outsb
inc
mov
jb
inc
mov
addr16
pop
fs
inc
cmp
leave
aas
xor
sub
addb
xchg
mov
inc
mov
mov
pop
dec
or
pop
push
or
mov
push
dec
movsb
in
push
cld
mov
mov
jge
mov
mov
pop
sub
mov
pusha
mov
das
dec
scas
xchg
or
jbe
test
mov
or
mov
inc
out
fwait
sub
cwtl
adc
jo
push
mov
push
lcall
xor
movsb
jb
je
xchg
iret
fwait
adc
pop
ds
inc
mov
imul
dec
inc
fmulp
mov
and
mov
mov
enter
popf
dec
xchg
push
xchg
cwtl
xchg
sahf
in
sub
inc
adc
sarb
add
ds
ret
jnp
repz
mov
pop
rcl
int
sub
push
pop
mov
push
mov
dec
adc
dec
bound
add
adc
add
and
mov
adc
pop
jp
push
and
sub
out
fidivl
or
mov
orb
mov
mov
mov
push
sbb
lret
roll
rorb
push
loope
insb
fisubrs
fs
mov
ja
ljmp
push
push
cmp
gs
push
xchg
cmp
xchg
push
push
push
sub
pop
adc
xor
mov
inc
loop
negl
hlt
mov
or
ret
jbe
cmpsb
insb
jno
das
pop
sub
aaa
cmp
imul
fisttps
rcr
jp
iret
push
xchg
dec
cmpsl
stc
sbb
aas
icebp
adc
insb
js
cli
fcmovnb
test
mov
lds
lcall
xchg
sub
push
sub
xor
pop
sbb
adc
xchg
je
aad
push
mov
mov
je
out
dec
mov
stc
in
cs
inc
mov
das
xor
pop
iret
test
mov
scas
dec
cld
jbe
mov
add
pop
xor
iret
jns
fldl
mov
sbb
jns
out
aaa
cmp
pop
sbb
mov
repnz
add
inc
cmp
into
xor
movsl
repnz
or
inc
stc
clc
fs
xchg
insl
inc
testb
push
add
sbb
cmp
mov
incb
dec
mov
lock
and
fadds
ds
out
xchg
push
test
dec
fs
enter
pusha
xchg
outsb
call
sahf
cs
add
mov
adc
fimuls
call
sbb
xor
loope
movsb
push
sahf
or
ja
shll
xor
mov
xchg
test
xorl
jmp
xor
lret
and
loope
movsb
fildl
popa
gs
clc
enter
sub
or
adc
xor
inc
pop
test
dec
xor
imul
aam
cmp
jns
es
popf
test
sub
and
or
arpl
cltd
cmp
ds
js
mov
int
fidivs
clc
stc
pop
dec
jecxz
inc
lret
leave
mov
lods
cmc
push
lock
mov
andb
jg
and
sbb
stc
or
add
mov
xchg
mov
nop
iret
push
aaa
repz
stos
das
ret
jae
testb
xor
jg
xchg
sahf
in
push
mov
repz
mov
adc
movsb
pusha
mov
in
outsb
aaa
insl
sbb
cmpsb
loop
adc
or
jo
sbbb
xchg
add
jne
jle
pop
lret
aas
int3
sbb
push
mov
inc
xchg
frstor
popa
lcall
in
mov
mov
in
cmp
dec
jne
iret
sbb
cmpsl
test
ja
cmp
mov
leave
ljmp
xchg
js
adc
and
push
jle
inc
push
call
add
dec
in
sub
out
loopne
sub
fidivl
sti
fwait
mov
mov
or
push
mov
cmpsb
fcoml
adc
inc
jle
push
sub
sbb
pop
dec
jl
subb
loop
test
pop
dec
add
sbb
pop
rolb
popf
adc
out
mov
and
mov
xchg
lods
mov
sub
ffree
mov
leave
fildll
das
mov
lds
mov
jmp
mov
test
ss
sub
sub
into
fwait
rclb
xor
mov
idiv
mov
xchg
stos
xchg
hlt
pop
push
cmp
cld
stc
dec
lods
dec
adc
jge
mov
inc
dec
push
aaa
divb
scas
jmp
inc
iret
xchg
jl
and
ficomps
cmc
adc
fmull
ds
push
push
ret
jno
ja
adc
adc
dec
sahf
pop
rep
xchg
or
js
xor
in
into
mov
jae
push
pop
push
sbb
push
imul
and
sarb
daa
jmp
out
sahf
mov
xchg
sub
jno
outsb
movsl
and
shll
sbb
fldt
addl
pop
fld
lods
push
loope
mov
mov
fwait
das
xchg
mov
pop
pop
inc
xor
jmp
add
and
div
jo
mov
xchg
push
es
mov
aaa
sarl
push
adc
scas
loopne
or
mov
mov
adc
dec
xchg
in
cmp
and
jne
xor
add
std
push
rclb
bound
loopne
and
inc
mov
in
cmp
test
add
aas
push
imul
sbb
fists
cmp
in
jg
loope
cmpsl
push
in
pop
adc
dec
int3
pop
js
inc
outsb
movsl
into
or
adc
lods
mov
aaa
xchg
mov
sbb
movb
out
cmp
js
shl
pop
movsl
xor
push
inc
subl
mov
fisttps
jmp
push
mov
icebp
and
shlb
sbb
and
push
push
aam
je
sbb
enter
jl
icebp
roll
stos
inc
les
fistl
aam
loope
frstor
mov
push
das
int
xchg
and
push
scas
push
jbe
mov
inc
inc
int
je
push
pushf
jo
aam
out
mov
mov
xchg
push
mull
inc
xor
movsb
xchg
or
or
outsb
rcll
fwait
add
xchg
rcrb
repz
jmp
mov
mov
xchg
mov
cmp
adc
pop
push
adc
xor
inc
mov
push
mov
dec
outsl
imul
addb
idivl
cmpsl
lock
xchg
xchg
ret
pop
scas
lock
push
jo
xchg
adc
push
andb
mov
or
adc
aaa
ljmp
mov
fadds
jnp
xor
xchg
or
push
inc
insb
sti
test
sbb
push
jmp
repz
into
sbb
inc
push
mov
jns
jno
pop
fidivs
ss
sub
add
mov
mov
popf
adc
push
imul
mov
pop
sbb
xor
in
push
stc
aad
push
or
pop
xchg
iret
pop
lea
je
jmp
jae
arpl
sahf
insl
lret
xorb
xlat
or
movsb
outsb
mov
dec
push
mov
xor
adc
adc
inc
movsb
loope
aad
mov
xchg
lcall
cld
sub
cwtl
leave
xchg
sti
xchg
jns
xor
fldl
cmpsl
xor
jno
outsl
stos
sub
inc
xor
and
push
inc
jns
outsl
in
sbb
stc
mov
outsb
ds
out
dec
loopne
mov
into
cmp
decl
in
adcb
sub
pop
pushf
fwait
xor
push
ss
dec
push
andb
fldl
out
ss
loopne
cmp
add
and
out
ficomps
leave
jl
mov
xchg
stos
fdivp
or
dec
out
icebp
push
aad
aam
xchg
es
ljmp
cli
push
jle
xchg
repnz
ret
pop
pop
or
stc
pop
shlb
xor
mov
aaa
xchg
int3
push
xchg
in
ja
fcompl
and
sub
push
mov
sbb
movsb
call
push
jno
lock
adc
popa
scas
addb
mov
jno
mov
cmpsl
xchg
push
orl
out
push
adc
pop
ja
or
cwtl
mov
xor
mov
push
scas
stos
xchg
sarl
sub
cli
pop
ds
clc
xor
adc
lret
or
cmp
pop
bound
lea
add
shlb
cmp
push
scas
out
mov
pop
pop
popf
and
test
inc
negl
in
jge
movsb
jecxz
lods
mov
sbb
pop
out
adc
add
mov
aaa
push
jge
mov
dec
aas
jne
lcall
rcrb
aam
sbb
test
bound
aam
jmp
fistps
mov
push
ja
mov
and
jmp
pop
adc
test
dec
mov
pop
mov
call
loopne
or
inc
sub
std
aad
pop
cld
dec
insl
mov
cmp
pusha
mov
cmpsl
shrl
enter
leave
mov
inc
sub
pop
pop
out
rorb
fcomi
xchg
pop
in
in
bound
repz
popa
call
iret
and
lea
sbb
jns
mov
sbb
xchg
mov
cwtl
icebp
movsb
out
out
and
cmp
xchg
mov
sbb
jns
adc
sbb
mov
xchg
sbb
or
dec
mov
cmpl
xor
ret
inc
jmp
push
loope
stos
das
int3
hlt
js
aas
cmp
sbb
adc
scas
jmp
mul
jmp
ja
jl
les
subb
adc
cmpsl
mov
xchg
jns
mov
adc
das
adc
mov
pop
push
test
test
jne
xchg
icebp
push
sub
fwait
inc
xor
aad
mov
and
xchg
sub
das
jecxz
outsl
adc
pop
lods
dec
jno
xchg
js
mov
roll
nop
cmp
movsb
dec
mov
aas
int
xchg
stos
ficoms
popa
mov
push
and
sbb
sbb
int
movsl
out
cmp
lahf
mov
in
testb
lcall
lock
clc
test
ret
mov
loopne
sub
in
cmc
dec
call
jmp
jb
jae
gs
adc
mov
fsubl
mov
or
and
fcoms
mov
gs
mov
add
stc
sbb
push
pop
mov
inc
push
inc
mov
jmp
mov
popa
adc
add
lret
sub
imul
jle
jle
adc
sti
fbstp
xchg
jl
int
sti
dec
cmp
push
mov
cmp
lcall
js
movsl
xchg
fsubrl
das
and
frstor
fmulp
add
jb
mov
dec
sbb
test
xchg
ficomps
lahf
sub
add
xor
jge
pop
and
mov
imul
inc
testl
lcall
mov
jnp
adc
and
and
lahf
add
jle
addr16
pop
dec
clc
out
insl
in
mov
and
stc
xor
mov
rcll
pop
shlb
jnp
rep
ja
scas
arpl
ret
sub
jmp
and
lret
adc
mov
bound
pop
pop
sbb
fs
and
pop
lds
aam
fstps
or
cmp
pop
fldt
lds
xor
push
mov
dec
movl
lock
out
test
aas
cmp
leave
or
popf
add
inc
sbb
ljmp
and
sub
jns
xchg
mov
stos
push
imul
mov
notb
or
mov
sbb
lds
ja
or
mov
lea
mov
and
xchg
outsb
lds
mov
lods
imul
dec
sbb
dec
mov
sbbl
jno
xchg
xchg
jbe
sub
mov
cmp
daa
sahf
add
add
dec
or
mov
adc
sub
lea
push
insl
xchg
push
inc
js
mov
mov
jp
pop
pusha
and
jge
add
adc
add
test
iret
sub
jne
pop
sub
js
xchg
xchg
jecxz
pusha
test
adc
jge
out
cmc
addr16
scas
or
movsb
rclb
hlt
jle
fnsave
mov
loop
pop
push
sahf
cmc
jge
mov
insl
out
jb
jne
mov
clc
pop
cmp
jnp
daa
xchg
in
add
push
mov
sbb
xlat
das
pop
out
sbb
repz
js
mov
jmp
stos
push
xchg
fbld
je
or
lds
cld
inc
xchg
xor
rcrl
jns
xchg
xlat
push
pop
mov
xchg
sbb
dec
mov
ja
test
jns
scas
bound
hlt
clc
pop
and
lods
sbb
xchg
xor
mov
xor
leave
lds
mov
push
xchg
ljmp
sbb
xor
ljmp
pushf
and
stos
jg
insl
push
add
jns
pop
pop
jne
mov
out
dec
rorl
cltd
clc
scas
inc
sub
push
mov
int3
xor
popa
fcoms
sub
dec
and
mov
push
shr
mov
pushf
sarb
cwtl
sbb
out
add
or
pop
stos
out
push
xlat
call
jno
rorl
lcall
pushf
xor
pushf
add
dec
movb
cmpl
mov
dec
jecxz
inc
lock
xchg
sbb
test
sbb
and
test
movsl
std
inc
popa
add
mov
inc
inc
je
sub
mov
in
jge
sbb
sbb
hlt
mov
lea
shrl
lds
pcmpeqd
sarl
test
pushf
inc
pop
mov
inc
mov
mov
ret
xor
int
daa
push
icebp
mov
push
movsl
into
lock
inc
in
fsubrl
xor
out
push
sbb
adc
cli
push
inc
xor
cmovae
es
fs
xor
nop
test
mov
mov
mov
scas
push
pushl
pop
es
nop
push
clc
fs
mov
dec
fnstcw
push
sub
cmpl
push
test
popa
inc
loopne
imul
xor
cmc
gs
xor
pop
xchg
adc
xor
stc
inc
insl
enter
and
clc
into
adc
xchg
ds
clc
push
mov
push
out
repz
xchg
stc
out
mov
shlb
loopne
pop
ret
adc
cmp
xor
call
rorl
cld
pusha
andb
pop
pop
pop
shll
fwait
xchg
nop
mov
push
or
jnp
jne
jnp
push
inc
add
push
pop
imul
lret
jb
inc
adc
shrl
cs
pop
jne
sub
or
test
nop
sbb
fisttps
cmp
shl
push
xchg
pushf
or
test
stos
insl
push
fs
shrl
addl
je
cmp
lret
sarb
add
xchg
adc
sub
push
cmpsl
mov
add
or
xor
leave
imul
cmp
shlb
movsl
shl
adc
in
insb
fwait
insb
mov
mov
stos
shrl
pop
lds
cmp
adc
pop
sub
lret
das
ds
int3
push
test
mov
jo
xor
inc
leave
and
add
gs
dec
sbb
push
dec
push
or
clc
fwait
cmovg
pop
adc
cmpsb
sub
sbb
inc
cmp
das
xorl
out
inc
shrb
push
lcall
movsl
cmp
hlt
xchg
lods
scas
and
cmp
cmpsb
fcmovne
loopne
insb
jge
pop
cmpsb
mov
xor
or
mov
in
scas
or
fistpll
mov
ja
push
jb
pop
push
mov
out
mov
cmp
xchg
fs
in
in
or
int
test
inc
pop
dec
cmpsl
dec
pop
cmp
cmp
sbb
and
mov
mov
ret
sbb
inc
clc
sarb
adc
pop
fs
push
call
jmp
das
stos
fisubrl
jg
pop
mov
push
dec
xchg
sar
inc
cld
mov
xor
sbb
hlt
ja
jb
test
push
sbb
or
or
dec
cmp
outsl
dec
push
cmp
movswl
mov
xchg
push
out
cmp
pop
jmp
sti
or
sub
mov
xor
ret
cmp
sub
notl
jne
outsb
lret
xchg
xchg
xchg
push
rolb
ja
or
adc
inc
cli
inc
xor
fisubrl
je
loop
pushf
stos
cmc
xchg
mov
sub
lds
rcl
sbb
cmp
pop
sbb
outsl
cmpsb
mov
jae
xchg
clc
sbb
fbld
pop
lea
jns
arpl
push
inc
cwtl
mov
mov
cld
call
or
xchg
jb
addr16
sti
xor
mov
in
or
dec
aam
mov
fwait
mov
into
fsubrl
lret
jmp
cmp
nop
xor
or
insl
jbe
pop
rorb
sub
xor
xchg
movsb
and
test
sub
clc
adc
fs
mull
fucomip
addr16
sahf
xor
and
dec
sbb
enter
aas
pop
cs
movsl
and
fsubrs
jnp
cmp
popf
pusha
jne
ljmp
sub
fdivr
xor
data16
dec
mov
xor
stos
jae
jmp
pop
call
shrl
mov
add
sbb
lock
mov
lret
pop
jl
lds
push
lahf
add
mov
adc
push
pop
test
test
lret
out
adc
sahf
loop
inc
iret
out
xchg
push
cli
pop
mov
movsl
aam
mov
inc
inc
adc
call
nop
ret
mov
inc
mov
adc
loop
nop
push
mov
mov
hlt
cmpsl
sub
sub
repnz
push
stc
lret
and
scas
dec
inc
mov
mov
jae
and
call
inc
inc
mov
mov
inc
sbb
mov
add
dec
dec
sbb
popf
xchg
pusha
push
add
jo
or
dec
outsl
lods
dec
movsl
nop
mov
jge
je
stos
fbld
jo
lret
mov
or
aas
mov
xchg
sub
pop
mov
mov
sub
xor
es
or
push
sbb
dec
cmp
gs
sub
cld
dec
inc
addr16
in
adc
ror
movlps
or
inc
scas
push
jbe
icebp
lds
cmp
fbld
pop
outsb
icebp
call
cmp
pop
pop
fcmovne
orl
andl
jmp
jb
roll
testb
cmp
and
push
dec
or
rorb
pushf
and
ret
les
mov
loopne
cmp
and
or
adc
sti
int
and
jp
leave
loope
movsl
mov
cmp
jle
or
pop
out
je
and
cmp
pop
xchg
jne
pop
into
out
iret
loope
push
mov
dec
test
mov
cli
stos
lret
nop
lret
jp
mov
out
cli
lret
dec
nop
lahf
push
inc
push
inc
insl
mov
mov
pop
aas
cmp
cmp
out
or
addb
out
sub
loop
sbb
rcr
in
push
out
pop
outsl
rorb
mov
push
nop
ficompl
jae
bound
mov
dec
or
fstpl
movsl
push
cmp
pop
jne
stos
inc
adc
jge
imul
xchg
outsl
and
cs
jg
clc
mov
jb
push
or
pusha
lret
add
sbb
adc
pop
push
dec
push
add
pop
sub
inc
leave
sbb
mov
popa
xor
push
dec
cmp
aas
dec
xchg
dec
jmp
cmp
cmp
adc
decb
xchg
mov
lea
popf
test
cmp
fistpl
mov
ret
xchg
divb
in
bound
fwait
mov
push
dec
repnz
ds
leave
test
lods
nop
mov
in
jnp
or
sbbb
mov
mov
xor
mov
pop
lods
dec
sbb
sub
hlt
mov
xchg
inc
mov
lret
mov
cmp
loope
jl
jae
es
aad
mov
movsl
add
fs
into
int3
mov
pop
dec
or
sbb
sub
add
jl
pop
or
add
test
lahf
push
icebp
sbb
push
add
mov
ret
mov
jbe
and
divb
jg
jg
fwait
adc
add
in
or
hlt
cmp
popf
cmpsl
ret
enter
pop
fs
repz
movb
test
xchg
sbb
sti
jecxz
rorb
jecxz
in
stos
lcall
es
sub
out
mov
inc
xchg
je
mov
sub
jg
cmp
pop
or
xchg
int3
stos
addr16
push
outsb
fsubl
aad
sbb
lds
call
hlt
test
aas
nop
sbb
dec
xchg
dec
xchg
mov
cmc
push
dec
mov
dec
jmp
lret
jecxz
xor
stos
jl
aad
movsb
mov
xor
enter
sbb
les
adc
stos
popf
mov
push
mov
ss
mov
iret
sbb
jo
daa
mov
scas
cmpsb
in
mov
insl
and
rorl
jno
add
frstor
xchg
mov
frstor
xchg
mov
and
ret
push
dec
stos
push
ds
in
loope
or
int3
cmp
mov
aas
jne
das
sub
fmuls
sbb
sub
test
fildll
cmp
dec
subb
sub
pop
into
xor
fwait
test
mov
sub
hlt
test
mov
pushf
push
arpl
aaa
xor
mov
lock
mov
in
shlb
jne
and
pusha
add
out
andl
inc
mov
xchg
inc
jbe
lea
rcr
fcmovnu
rorb
jbe
xor
pop
lret
or
xchg
xchg
rclb
sub
fnsave
lea
adc
addb
push
repnz
mov
pop
je
lods
mov
pop
xchg
jno
jmp
cmp
xchg
cwtl
mov
data16
mov
nop
mov
inc
pop
sbb
out
pushf
out
sete
cmp
mov
pshufw
and
js
or
pushf
incb
pop
adc
jno
mov
jno
scas
mov
test
and
mov
jae
sbb
sbb
repz
ffreep
sub
mov
icebp
out
inc
insl
lods
loop
cld
sti
jb
cwtl
clc
sub
xchg
lcall
mov
mov
ret
in
mov
jno
enter
fstpt
jns
mov
clc
cmp
das
pop
mov
pop
mov
insb
mov
in
jge
pop
or
popf
scas
mov
pop
js
scas
add
sbb
test
cmp
std
xchg
ret
xor
fs
mov
mov
pop
idivb
test
jo
push
inc
mov
sarb
outsl
sub
sub
inc
jmp
adc
addr16
pop
mov
mov
jmp
mov
mov
lahf
dec
inc
sub
mov
push
inc
sub
mov
pop
int
popa
xor
outsb
and
mov
data16
push
pop
inc
push
subl
shll
outsl
fists
je
shll
frstor
int
outsb
mov
pop
outsb
stc
mov
mov
roll
mov
xchg
jb
push
jne
push
loope
ds
mov
sub
pop
push
dec
data16
in
stos
mov
test
iret
pushf
fcmovb
xchg
shrl
sbb
jbe
in
push
dec
in
mov
xchg
cs
mov
repz
push
xor
mov
popf
shlb
adc
imul
adc
push
iret
add
outsb
pop
out
mov
push
adcb
jmp
in
lds
add
mov
data16
adc
pop
scas
aaa
fsubl
and
push
xchg
xchg
mov
aad
pop
mov
dec
pop
xchg
ret
mov
mov
mov
mov
rclb
push
inc
mov
xor
popf
rcrb
out
inc
imul
xchg
add
push
xor
push
or
pop
incb
es
mov
inc
inc
jmp
mov
xchg
cltd
jns
push
add
lods
rol
psubw
push
in
call
sti
lock
mov
pop
jb
enter
cmpsl
addr16
jl
add
jle
pusha
cmp
test
pusha
push
sahf
sti
movsl
mov
pop
adc
jmp
repnz
stos
inc
sbb
xchg
cld
pop
orb
pop
dec
lret
insl
das
push
inc
push
inc
ljmp
xor
fstps
push
out
pop
fldcw
jl
cmpb
sub
adc
fcoml
push
std
adc
pop
nop
into
sti
mov
pop
adc
enter
push
call
scas
adc
stos
xlat
test
hlt
xlat
cmpsl
push
adc
cmp
pop
scas
mov
scas
cmpb
jle
das
inc
in
jns
jl
aaa
das
mov
mov
loop
xchg
in
stos
cmp
xchg
clc
loope
mov
jg
rorb
jno,pt
arpl
mov
mov
es
ljmp
pop
rclb
mov
iret
cmpsb
flds
repz
addb
call
arpl
push
cltd
adc
inc
leave
out
dec
pop
lds
js
xchg
nop
inc
mov
aam
pop
or
scas
loop
popf
pop
hlt
pop
in
mov
mov
push
jns
mov
dec
out
adc
dec
cwtl
out
iret
aaa
mov
outsb
cwtl
xchg
inc
in
jns
ja
shrb
scas
sti
call
and
test
xor
mov
mov
outsb
mov
loop
or
and
sub
ret
les
and
dec
aad
mov
xorl
pop
jmp
and
sub
mov
sub
gs
cmc
mov
dec
aas
fdivl
in
test
loope
pop
rolb
or
mov
push
sub
leave
jmp
or
dec
repz
nop
xor
jae
pop
push
mov
add
inc
lahf
lods
push
shlb
dec
jne
inc
iret
les
hlt
insb
cmp
or
fsub
sub
jbe
jne
mov
insb
cmpsl
mov
jle
inc
adc
stos
sub
divl
pop
mov
mov
cmc
cmp
jge
dec
or
shl
add
movsl
jecxz
xor
or
stc
fcoml
cmp
xor
xchg
dec
fisubs
add
arpl
jecxz
adc
mov
int3
jp
aam
and
xor
scas
or
adc
ss
xor
push
lock
out
fwait
lret
popf
xor
push
pop
int
xor
inc
out
pop
push
push
aad
repz
sahf
push
xor
pop
push
ds
int3
aas
mov
and
mov
lds
cli
jbe
adc
dec
push
xchg
jecxz
in
scas
jecxz
adc
cli
cwtl
and
pop
fistl
jg
repz
pop
mov
pop
or
pop
sub
dec
add
aam
lods
mov
jno
push
out
lods
das
les
js
test
cld
rcrb
push
and
jne
push
ficompl
inc
inc
notl
xor
sahf
jb
pop
cld
das
test
pop
mov
pop
push
xor
sarb
cmp
xor
loopne
jo
aad
mov
lods
test
mov
push
inc
lcall
pushf
xchg
sbbb
jbe
enter
xor
fdivrl
les
push
aas
push
jle
adc
pop
roll
loopne
or
jmp
dec
adc
cmpsl
pop
mov
gs
repz
add
sbb
mov
or
push
fs
cli
pusha
sahf
icebp
mov
mov
outsb
add
jns
or
rorb
mov
sub
cmp
xor
xchg
imulb
cmpsb
aaa
pop
scas
leave
xlat
push
scas
sub
leave
jg
mov
mov
test
inc
dec
mov
sbb
popf
cltd
stos
push
lock
push
push
mov
test
inc
aaa
xor
add
mov
pop
ljmp
mov
fsubs
push
ret
sub
test
and
inc
fsts
inc
or
jecxz
ret
shlb
ljmp
test
lods
jle
xor
ficoms
and
adc
jne
push
scas
mov
mov
xchg
lea
in
mov
popl
pushf
adc
insl
fucomi
mov
in
in
or
mov
mov
lcall
sub
pop
xor
or
and
pushf
fisttps
xor
cmp
or
scas
or
lret
ret
lods
ret
sub
xor
fwait
out
cltd
ja
inc
jge
stos
or
push
movsb
xchg
jae
cmp
rcrb
outsl
adc
mov
push
and
or
and
xor
jg
xchg
push
fucomi
data16
push
sbb
adc
icebp
mov
jb
jmp
jno
lock
or
jae
xchg
shll
or
inc
cmp
sti
mov
jnp
and
lock
sbb
mov
fs
std
dec
jnp
inc
pop
dec
outsl
scas
addb
addr16
push
dec
sbb
mov
int3
ret
hlt
mov
fsubs
mov
jecxz
xor
xchg
imul
xchg
jge
jle
loope
les
push
sub
je
test
jnp
lret
mov
insl
mov
shll
jb
insl
mov
xor
mov
js
fmuls
cld
mov
stc
xor
mov
aaa
imul
insb
adc
cmp
push
lret
sahf
pop
dec
leave
mov
xchg
xchg
mulb
add
lock
add
push
adc
daa
sarb
mov
in
notb
push
sub
bound
inc
outsb
movsb
pop
mov
std
daa
push
sbb
mov
lahf
cmp
mov
jo
loope
aam
or
sti
and
adc
mov
retw
push
roll
lcall
or
xor
sarl
leave
fstpt
rorb
addl
and
xchg
ss
and
dec
pop
test
lods
cltd
fcmovne
js
fcoml
das
mov
lds
jecxz
push
mov
jno
mov
es
sar
inc
mov
je
or
jns
push
add
add
push
mov
addb
call
into
pop
loope
nopl
loop
mov
dec
inc
inc
sarl
and
cwtl
jnp
mov
and
xor
pop
mov
in
dec
jmp
jge
clc
jl
inc
inc
aaa
pop
jmp
cmp
inc
xchg
insl
out
test
imul
ss
and
xchg
adc
adc
fsub
mov
sub
movb
mov
hlt
mov
push
sbb
movsl
jecxz
cmp
sarl
xchg
and
mov
push
cmp
lahf
shrb
mov
xchg
pop
shrb
cltd
cmp
sahf
lahf
jl
js
push
sbb
mov
pushf
leave
sbb
dec
sbb
ret
rolb
call
mov
stos
pop
mov
ja
lods
mov
ja
mov
das
sub
xor
dec
sbb
ret
jmp
jno
roll
jmp
dec
pop
insb
repz
leavew
and
int3
mov
sbb
incl
push
dec
cwtl
mov
adc
adc
insb
sbb
mov
fdivrl
inc
addb
mov
xchg
pop
mov
das
and
sti
dec
loopne
mov
sbb
inc
push
fistps
and
sub
cmc
pop
mov
push
push
cld
out
inc
push
mulb
jno
jl
fisubl
push
hlt
pop
addr16
push
ljmp
aaa
das
test
push
test
outsb
jbe
hlt
and
cmp
lods
inc
and
mov
inc
lock
pop
jg
push
sub
sub
stos
dec
fldcw
hlt
jne
fldenv
sbb
and
push
mov
xorl
xchg
and
xlat
or
cld
arpl
popfw
mov
mov
gs
sub
ret
out
fcoml
xchg
sub
lods
jb
repnz
cmp
outsl
mov
and
into
insl
sub
cmp
mov
stc
xchg
mov
push
mov
test
mov
out
shlb
and
int3
adc
loop
repnz
addr16
sub
repz
add
cld
lahf
pop
lret
xchg
jne
push
repnz
push
jecxz
repz
jge
rcll
sbb
cmpsb
sahf
push
mov
cmp
into
mov
inc
stos
jns
outsl
or
xchg
pop
rcrl
scas
cmpsl
in
cmp
or
clc
pushl
xor
sub
push
sbb
cmc
loopne
sub
orl
xchg
ja
or
or
push
mov
mov
sbb
pop
and
xchg
mov
push
lea
dec
inc
ss
xchg
and
add
pusha
inc
pop
inc
jge
enter
cmp
lcall
jmp
popf
mov
enter
jl
lods
lods
xchg
lods
mov
sub
lret
insl
dec
js
fsubp
js
mov
ret
je
fistpll
leave
out
clc
cmp
cs
lods
inc
popa
jne
xor
or
add
js
iret
and
loop
pop
sub
mov
andb
or
cmp
iret
or
je
out
subl
add
lahf
lods
addl
jle
loopne
inc
cmp
xchg
adc
call
adcb
mov
das
repnz
je
icebp
xchg
inc
mov
adc
arpl
fstpl
mov
xchg
stos
jae
lods
cmp
dec
cmp
add
inc
pop
sbb
push
xchg
fstp
scas
gs
or
rclb
xor
aaa
hlt
scas
dec
inc
push
fsub
addr16
jecxz
dec
xchg
push
cld
movsb
push
rcll
xlat
call
dec
dec
mov
scas
js
mov
dec
notb
ret
aas
lret
xorl
add
or
or
sbb
lds
and
sub
xchg
jmp
xor
mov
inc
mov
xchg
movsl
and
movsb
inc
std
test
pusha
jle
sub
jl
xlat
sub
insb
dec
xchg
sahf
cs
outsb
and
int
std
out
add
pushf
cwtl
cmpsl
xchg
scas
add
lods
sti
and
mov
std
or
xor
sti
loopne
nop
mov
stos
jbe
outsb
bswap
jg
cmp
pop
call
pop
xlat
icebp
dec
jns
cmc
add
pop
cwtl
and
xchg
inc
mov
lods
and
leave
lcall
cmc
ror
scas
rcll
mov
mov
clc
js
cmp
lcall
pop
repnz
jb
dec
loop
adc
dec
loop
dec
and
dec
aad
in
and
adc
mov
cmpsl
cltd
mov
les
sbb
jp
add
jns
mov
xor
jg
fcomip
mov
add
push
inc
xchg
jg
add
cmpsl
fcompl
pop
mov
ret
pop
mov
jns
sub
push
je
mov
push
mulb
and
lock
ljmp
lods
mov
jnp
movsl
in
or
or
mov
cmpb
cli
insl
add
call
add
fnsave
xchg
outsl
ja
mov
or
in
mov
xchg
adc
sub
aad
or
dec
cltd
pop
pop
jp
fsubrs
sbb
adc
sbb
insl
int3
cmc
mov
and
popa
push
jne
inc
fcoms
out
pop
shlb
nop
mov
pop
daa
addb
push
out
and
jo
cli
pop
inc
mov
imul
jmp
push
icebp
aad
sub
frstor
addps
mov
and
jno
inc
fdivs
pop
mov
xor
adc
sbb
inc
mov
push
cmc
pop
scas
fimull
push
test
loope
push
jg
mov
mov
mov
js
xchg
xor
vcomisd
jge
lret
xchg
je
lods
pop
test
add
sbb
pop
pop
jmp
lahf
imul
int3
lahf
xchg
mov
lret
repnz
cld
addb
jle
gs
xchg
pop
and
es
popf
and
loope
xchg
push
in
jmp
jnp
enter
jg
dec
loop
jne
ret
sub
cli
inc
push
pop
lods
push
inc
shr
push
add
jo
cwtl
dec
mov
test
push
and
sbb
arpl
sub
sbb
xor
dec
sbb
pop
inc
and
mov
mov
stos
or
stc
pusha
adc
pop
imul
sub
xchg
aas
subb
and
cmpsb
push
dec
adc
icebp
xor
xor
in
cmp
cmpsl
ds
adc
inc
xchg
negl
imul
cmpsl
add
daa
gs
pop
addr16
or
call
push
repnz
xchg
movsl
pop
adc
dec
fadds
cld
or
scas
mov
in
imul
iret
adc
mov
jnp
xor
fdivr
mov
gs
cmp
shlb
push
push
mov
popf
nop
movsb
out
repz
pop
sbb
loopne,pn
mov
sub
cmp
push
cmp
pop
push
outsb
xchg
stc
pop
arpl
cmc
fst
sbb
dec
rorl
cli
mov
jg
adc
pop
cmpb
mov
dec
loope
cs
out
cmp
pop
in
mov
push
fucom
mov
sbb
out
dec
xchg
or
stos
jge
pop
mov
test
bound
test
pushf
shrb
iret
pushf
pusha
mov
dec
push
push
add
mov
jge
cmp
lret
jl,pt
cmc
sub
adcb
jecxz
sti
sub
push
gs
aad
sbbl
cli
push
mov
inc
cmp
cmp
adc
pop
rcrl
pop
je
jb
shrl
in
mov
clc
xor
arpl
and
jg
jnp
sbb
loop
outsb
mov
dec
inc
add
shlb
mov
insb
addb
js
std
mov
loopne
cmp
xor
jmp
fucom
imul
push
shl
jge
push
cmc
mov
fisttpll
adc
xlat
mov
mov
mov
push
jmp
xor
sar
sbb
cmp
insl
orb
out
push
cltd
mov
in
outsl
jmp
and
icebp
lret
mov
scas
lret
cmp
or
sarl
inc
adc
insb
je
mov
mov
push
add
mov
cmp
sbb
inc
xor
mov
add
xor
fldl
dec
fimull
pop
adc
dec
xchg
sub
stc
int
lahf
jno
cmp
nop
fmull
lods
cli
jecxz
outsl
arpl
je
movsb
mov
ret
dec
mov
dec
js
pop
lods
testl
nop
cmp
out
sbb
mov
adc
pop
inc
mov
sbb
add
inc
outsb
pop
pop
and
in
fmull
cmp
scas
sbb
test
lret
xchg
out
xor
inc
mov
clc
or
pop
xchg
mov
mov
xchg
enter
daa
push
mov
sub
mov
gs
ret
xor
mov
imul
jo
testl
aam
add
push
inc
mov
push
enter
loope
ficompl
and
enter
insb
inc
js
rolb
mov
jns
xor
push
sbb
jne
pop
cmc
sub
dec
jne
add
sub
dec
jo
dec
mov
nop
fstpt
into
out
sub
mov
add
adc
in
jmp
icebp
adc
fldt
repnz
or
pop
movsb
mov
out
xchg
xchg
jg
push
hlt
mov
mov
out
and
fldl
xchg
dec
add
or
ror
addr16
mov
jp
mov
rcr
lahf
and
push
xor
bnd
and
add
or
jle
jae
out
dec
fcoml
pop
bound
pop
popa
or
sbb
or
add
adcb
out
into
sahf
sbb
sub
jle
mov
xor
xchg
xchg
fidivrl
sti
rcrb
es
js
data16
xchg
jnp
mov
adc
jp
and
pushf
shlb
lock
sub
ret
call
ja
mov
add
es
cmp
sbb
shlb
inc
cmp
sub
and
mov
insb
in
mov
mov
je
fwait
imul
sub
add
rcl
leave
pusha
sub
inc
jl
addl
adc
data16
inc
sub
xor
lods
adc
loope
mov
add
add
inc
dec
test
data16
aad
jne
mov
ret
mov
mov
outsb
cmp
iret
push
xchg
ds
mov
dec
stc
int3
popl
sub
mov
jo
in
arpl
xor
mov
mov
fisubrl
xor
and
mov
movsl
rorb
mov
pop
das
ljmp
sub
inc
or
scas
gs
pop
rcrl
gs
xchg
pop
cmc
jp
shlb
divl
mov
mulb
dec
xor
js
xor
dec
mov
dec
sbb
or
inc
call
mov
sbb
ficompl
push
in
jmp
ret
jg
adc
xorb
add
aam
xchg
and
sti
push
and
ret
dec
out
in
and
roll
cwtl
int3
popa
or
leave
lahf
or
inc
popf
ss
adc
and
insl
xchg
dec
sbb
xor
or
xchg
and
fistpll
jae
insb
adc
iret
adc
out
xor
enter
outsb
dec
push
outsl
enter
jg
xchg
xor
push
jge
aam
and
and
inc
addl
cmovb
push
pusha
cmpl
out
scas
jmp
dec
shlb
aad
dec
loope
lret
jo
stc
sbb
rsqrtps
mov
lods
sub
push
mov
sahf
rorl
pop
mov
lret
adc
add
mov
imul
test
negl
jl
nop
test
adc
sub
xor
hlt
or
jnp
lret
out
enter
pop
cmp
push
and
and
repz
call
jbe
inc
nop
mov
cmp
and
mov
jne
icebp
sbb
aam
adc
aas
and
jae
pusha
push
add
push
mov
jge
or
dec
sbb
enter
negb
imul
or
bound
rcl
mov
dec
syscall
pushl
cmpsl
push
je
rolb
clc
rorl
jp
mov
adcb
jae
push
sti
in
jmp
repnz
add
adc
adc
xchg
cmp
sub
lea
pop
cli
repz
xchg
sub
out
out
pop
and
addr16
lret
loopne
inc
fcmovb
call
loop
xchg
xchg
lock
xor
mov
ss
sbb
sbb
je
xor
int
int3
cmp
xchg
mov
ljmp
scas
lahf
aas
mov
mov
or
xor
mov
inc
cmpb
and
es
xor
je
sub
jp
inc
test
jns
xor
mov
xor
stc
mov
cmp
sbbl
dec
imul
les
daa
push
dec
loop
xor
loopne
mov
mov
xor
push
xchg
or
xchg
pop
add
jb
test
adc
push
hlt
or
lods
ret
mov
pushf
push
xchg
add
adc
add
pop
ficomps
push
ret
mov
es
jns
fwait
jne
or
push
mov
mov
mov
test
mov
call
clc
insb
sar
fdivl
push
pop
sti
sets
scas
mov
xor
outsb
addr16
jbe
or
aam
xchg
pop
repnz
enter
xchg
or
pop
mov
hlt
lret
lds
pop
mov
dec
mov
rorb
adcb
dec
xor
jmp
iret
jge
jae
xor
mov
dec
dec
cmp
add
les
jle
pop
lds
enter
sbb
and
clc
xchg
jg
jp
cmpl
sbb
jl
mov
sub
jecxz
cmc
lods
push
lahf
icebp
imul
push
mov
pusha
and
setg
mov
adc
ret
fsubl
mov
mov
iret
lds
sbb
loope
in
stos
push
jle
add
jne
xor
test
dec
xchg
and
jecxz
gs
add
flds
leave
xor
push
dec
jb
xor
lock
movsl
add
cmp
in
cltd
push
test
clc
push
xchg
js
mov
dec
fwait
cmovl
fadds
hlt
loop
cld
sarl
push
data16
and
cmp
in
leave
xor
or
movsl
shlb
dec
mov
bound
mov
pslld
sbb
aaa
lods
push
repnz
rorl
push
movsl
and
cmp
insl
jnp
push
push
js
adc
and
push
push
lods
inc
stc
jno
test
xor
push
out
lcall
inc
sub
insl
xchg
mov
lock
orl
cld
enter
addr16
mov
in
push
dec
cmpl
leave
pop
bound
push
mov
jmp
js
pop
dec
dec
ficoms
jbe
rclb
adc
dec
lods
inc
pop
fmull
xchg
push
in
out
movsb
inc
dec
cltd
shlb
lret
out
mov
cmp
ss
imul
jne
inc
jle
ret
cmp
das
test
push
sub
sub
or
mov
mov
pop
push
ret
mov
out
into
mov
test
lods
cmp
fists
or
ret
frstor
inc
mov
cwtl
push
popf
mov
push
mov
cli
movsb
xchg
std
cmp
in
stos
push
inc
cs
faddl
sbb
scas
pop
jae
xchg
dec
fisubs
pushf
mov
fldt
xchg
mov
jne
and
pop
inc
fwait
and
std
ret
push
mov
ficoml
idivl
cltd
cmpsb
mov
decl
pushf
jbe
xlat
or
xor
aas
les
cs
dec
xchg
fsubl
cs
add
mov
clc
dec
adc
add
cmp
bound
sti
pop
ss
mov
or
sahf
clc
inc
stos
std
pop
push
stc
adc
push
dec
or
xchg
mov
mov
lahf
push
shl
sbb
stos
out
dec
lcall
sbb
jb
pop
sbb
fisttpl
add
dec
ja
push
lahf
clc
stos
test
pop
mov
cmc
imul
cld
int
inc
inc
pop
sbb
cltd
cmp
test
fimuls
xor
out
aad
movsb
sbb
rcrb
sbb
cmpsb
mov
inc
xchg
xor
push
lret
inc
xchg
mov
sbb
insb
dec
insb
mov
lea
into
sahf
and
sbb
test
and
cmp
sbbl
sbb
lret
inc
mov
push
divb
ss
out
mov
mov
push
and
bnd
xchg
les
pop
mov
stc
push
imul
lahf
mov
jne
push
cmp
sub
dec
fisttps
inc
cmp
ret
adc
ret
shlb
dec
sub
push
mov
leave
mov
aaa
jnp
xor
xchg
in
adc
dec
insb
sbb
sbb
imul
jo
or
rorl
mov
stc
sbb
sub
push
mov
push
pop
enter
fisubrs
jge
pop
dec
popf
pop
xchg
xor
and
sarl
push
xor
addr16
sbb
testl
cmp
mov
jne
scas
pushf
add
daa
popa
xor
or
lcall
xlat
jbe
sbbl
repnz
mov
and
sbb
lea
es
mov
ret
xor
cmp
xchg
mov
push
fucomp
leave
xchg
push
int
stc
or
subl
jg
out
shlb
les
lea
mov
and
push
repz
mov
int3
sbb
sub
push
mov
mov
ficompl
push
xor
push
aad
mov
mov
mov
mov
and
ds
xor
arpl
mov
add
and
push
mov
into
int3
enter
int
loop
cmp
xor
push
adc
stos
xor
xchg
dec
pop
xchg
scas
pop
mov
mov
arpl
sub
mov
movsl
stos
push
mov
out
scas
xchg
xlat
cmpsl
shl
pop
fcoml
jne
arpl
or
sbb
push
out
repnz
jb
or
lock
fadds
pusha
es
mov
inc
push
out
clc
inc
dec
cmp
jno
inc
inc
add
dec
fdivrl
out
cmp
sub
std
je
fadd
ss
scas
loop
gs
shrb
inc
sub
in
ja
rorb
cmp
pop
fs
jne
dec
mov
int3
orl
xor
jg
pop
bound
pop
jno
shlb
push
fnstcw
insl
jb
stos
jg
leave
jno
roll
icebp
aaa
fucomp
scas
pop
or
xchg
fimuls
ret
xor
dec
lcall
or
jl
sub
pusha
insb
jmp
clc
xchg
push
hlt
mov
pop
repz
add
mov
insl
loop
in
mov
jae
adc
icebp
xchg
cwtl
popa
shr
dec
lret
test
xchg
pushf
and
push
mov
cmpsl
movsl
addr16
lods
outsl
jno
imul
push
jo
in
call
rorb
lds
repz
sbb
and
xchg
mov
mov
cmc
pop
fadds
mov
cwtl
adc
xor
dec
pop
dec
mov
and
mov
shlb
rorb
fs
fs
jle
sbb
push
nop
es
pop
pusha
adc
mov
adc
stos
cwtl
dec
je
cmc
popa
stos
aam
pushl
cli
sti
jge
lret
xlat
xlat
xchg
insb
mov
xor
or
lea
mov
adc
scas
mov
clc
stos
daa
sbb
test
xor
xchg
testb
sub
pop
out
lock
xor
push
pop
negb
mov
iret
mov
inc
fdivs
inc
outsb
dec
xor
and
mov
outsl
rcll
lods
sbb
aas
cmp
call
lret
fucomp
mov
ror
jmp
fnstenv
rcl
rorb
fldenv
xchg
arpl
jne
sub
mov
fwait
bnd
ror
jle
sub
jo
xchg
je
mov
jp
lret
lret
out
adc
sbb
out
out
mov
inc
cs
inc
enter
xchg
mov
out
mov
movsl
test
xor
sbb
mov
sub
cmp
inc
imul
push
bound
addb
adc
arpl
pop
cltd
or
nop
pushf
xor
sub
int3
lock
iret
sbb
or
xchg
popa
add
adc
repz
leave
jb
shll
popf
hlt
mov
or
dec
cmp
push
mov
hlt
cwtl
movsl
icebp
mov
cwtl
lods
gs
pop
sub
push
cwtl
or
sub
repz
shrb
and
pushf
or
cmp
lds
pop
test
call
push
jne
cmp
cmpsb
lods
jmp
jno
rcrb
fisubrs
mov
test
jne
imul
jns
pushf
adc
push
pop
loop
mov
xchg
or
mov
add
jl
lods
out
or
xchg
pop
mov
xchg
add
or
mov
and
xor
repz
stos
and
or
les
outsl
push
sub
idivb
xchg
aam
cmp
insl
dec
or
outsb
and
bound
aaa
divb
fmull
xchg
jg
fsubrl
xlat
scas
movsl
xor
or
sbb
add
jge
stos
out
sbb
pop
mov
xchg
push
xchg
test
ja
xor
jmp
fnstcw
repz
jmp
xchg
into
push
idiv
stc
mov
and
in
lock
pop
pop
xor
fwait
inc
inc
jg
repz
lock
fs
std
xchg
mov
jecxz
mov
scas
xor
mov
aaa
pusha
cwtl
addr16
pop
push
adc
jae
call
pop
sahf
pop
sbb
out
imul
push
sbb
xor
in
fistpll
movsb
adc
xor
adc
jmp
pop
icebp
sti
stos
push
ficompl
sbb
mov
lahf
fiaddl
adc
jge
into
mov
cmpsl
in
mov
sbb
cmp
imul
imulb
movsb
xchg
push
sub
outsl
addr16
or
notb
fwait
pop
arpl
mov
cli
dec
pop
jb
dec
push
mov
pop
stc
mov
inc
mov
sbb
lahf
enter
sbb
push
lock
cmp
test
adc
pop
movl
add
clc
jge
pusha
fldenv
rol
sbb
add
mov
jp
mov
into
cld
repz
xchg
jmp
xchg
or
int
test
mov
sub
addr16
cld
push
mov
fwait
jne
shr
out
lahf
mov
xor
pusha
or
rcll
cs
add
adc
mov
sub
cli
outsb
scas
test
adc
jl
mov
cmpsl
or
mov
fs
gs
imul
lods
pop
ljmp
pop
inc
lret
xor
mov
in
xchg
cmp
shr
mov
cmp
ja
stos
in
inc
dec
ret
and
cmp
mov
pop
lret
mov
cmp
cmp
inc
push
fbstp
jmp
or
hlt
in
cmc
mov
sbb
push
pop
out
pop
scas
in
dec
out
xchg
mov
ja
ret
dec
push
push
into
insb
xor
and
fcmovbe
and
jbe
stos
inc
add
xor
cmp
push
sbb
adc
jnp
dec
cmpsb
in
pop
xor
push
cmp
jmp
fiadds
push
pop
pop
lea
jo
and
jp
add
ficompl
adc
sbb
in
xor
aad
dec
add
rorb
fstpt
lret
shrl
adc
xlat
insl
cmpsb
test
lcall
js
cmp
mov
add
or
xchg
pop
xor
xchg
xchg
scas
mov
jp
jo
lods
js
jae
insl
inc
in
and
push
xchg
lret
sarb
push
leave
and
aad
sbb
call
push
inc
jnp
sub
inc
jae
jne
cld
xorb
push
xor
imul
mov
fwait
call
iret
mov
jg
cli
mov
fdivp
rolb
or
mov
popa
cmp
pop
pop
fs
adc
aaa
mov
call
test
jl
cmpb
cmpl
dec
and
push
sbb
pop
push
ret
xorl
in
xchg
fcoml
mov
cmp
fmull
mov
test
push
mov
push
mov
and
mov
add
cmp
push
into
addl
push
shlb
icebp
stos
xor
xor
aaa
xorb
jp
mov
out
fwait
lcall
xchg
push
push
adc
imul
mov
and
xlat
flds
jne
test
push
push
xor
in
ljmp
sarb
xchg
xchg
add
jb
mov
std
stos
sub
and
mov
test
mov
xor
bnd
ljmp
jae
cltd
in
sbb
or
mov
mov
fisttpl
sub
loop
inc
mov
mov
testl
xorb
mov
add
pop
xchg
je
inc
add
bound
lock
int3
xchg
inc
lret
xor
cmp
mov
xlat
negb
adc
cld
jge
mov
jg
inc
xor
leave
push
scas
xor
fldt
mov
cmp
xchg
pop
push
fldenv
xor
xlat
xorl
scas
ret
and
xor
aaa
enter
jne
add
int
sub
mulb
mov
or
enter
sbb
mov
testb
mov
sub
arpl
into
inc
shlb
pop
sbb
test
movsb
sub
or
rcl
mov
adc
or
mov
push
lahf
xor
sub
xchg
pushf
dec
sbb
xchg
mov
inc
and
and
jmp
out
xchg
pop
sub
jle
lock
out
push
sub
mov
cmp
mov
or
cs
jbe
adc
xor
loope
adc
jbe
mov
mov
arpl
aas
inc
mov
cmc
loopne
adc
mov
enter
fdivrs
out
fistl
dec
pushf
mov
jmp
addl
or
stos
scas
cmp
add
aam
aad
rcl
stos
pop
add
test
out
push
adc
dec
mov
scas
dec
adc
std
je
adc
dec
pusha
mov
xchg
enter
lahf
dec
ret
movsb
mov
imul
push
dec
inc
jb
shrb
loop
imul
cmpsb
jge
xchg
sti
inc
clc
cmpsl
out
push
mov
push
cmpsb
mov
cmpl
mov
out
jge
mov
sbb
push
xchg
push
xor
ret
iret
adc
xchg
out
jb
bound
sub
adc
push
dec
nop
push
dec
lods
mov
mov
xor
mov
cmp
mov
aad
cmpl
and
jp
pop
inc
aad
das
xor
mov
pushf
sbb
mov
les
push
enter
mov
ss
pop
stos
xchg
and
test
dec
pop
push
xlat
jnp
mov
mov
xchg
dec
sub
in
insb
push
push
or
dec
mov
cli
loopne
cmp
add
cmp
push
xchg
adc
jmp
test
inc
ret
xchg
push
cld
sbb
inc
jnp
in
jp
inc
jbe
adc
test
scas
dec
mov
xor
adc
xor
mov
iret
test
adc
ret
xor
mov
fwait
or
sbb
fadds
fst
movsb
mov
add
mov
aaa
mov
or
dec
xor
push
clc
fwait
pushl
inc
dec
sub
ret
xchg
push
test
jp
pop
push
xlat
in
popa
test
xor
movsl
cmp
mov
jmp
xchg
adc
fdivs
dec
mov
lahf
xchg
inc
fucom
ja
pop
dec
xchg
jl
cmc
fsubrs
jbe
ja
jae
loope
add
mov
out
loop
xor
ret
sbb
je
add
ror
stos
mov
pop
xor
lahf
sub
xchg
stc
stos
in
cmp
testl
inc
sub
mov
enter
stc
mov
jl
jnp
sub
add
insb
adc
sbb
and
add
xchg
bound
push
mov
add
jns
jbe
enter
jle
inc
pop
xchg
jecxz
lea
mov
in
or
cmp
mov
sbb
test
mov
or
addr16
jno
pop
inc
cld
xchg
inc
faddl
dec
ja
stos
inc
push
lret
aas
lea
cs
mov
pop
jle
push
lret
idivl
imulb
ja
das
adc
or
fcoms
inc
push
in
pushl
je
fldenv
inc
pop
push
xchg
fs
jp
push
pop
add
pusha
in
pushf
lret
cmp
aad
idivl
insl
jl
orb
xchg
in
mov
rol
in
das
repnz
scas
xchg
cwtl
xor
mov
out
aad
add
xor
xor
out
gs
popa
fisttps
pop
int3
xor
pop
insl
pop
push
fcomi
ds
fnstcw
xchg
xchg
in
mov
or
nop
dec
dec
xchg
mov
jo
aam
sub
loopne
dec
test
popa
outsb
and
repz
nop
push
and
add
cmp
je
sti
and
insb
cmp
es
jp
xchg
cmc
packsswb
out
in
jle
jge
sub
jnp
pushf
fidivs
mov
js
jmp
mov
mov
xor
dec
sbb
xchg
adc
cmp
mov
std
ret
jg
out
outsb
ss
orl
loope
sbb
sahf
sbb
adc
into
in
out
fistpl
in
scas
xchg
jmp
inc
int
mov
iret
inc
pmulhw
and
clc
fldcw
sbb
xchg
mov
sbb
and
add
dec
or
lret
cld
shll
movsl
cltd
sub
pop
iret
dec
arpl
test
popf
jp
sub
adc
pop
cmpsl
repz
push
sbb
out
pop
adc
jl
add
and
jge
inc
xchg
ljmp
int3
xor
std
cs
sbb
or
xchg
pop
jmp
clc
loope
shl
fnstenv
adc
popa
and
repnz
rorb
subl
xlat
inc
test
jbe
out
or
push
push
add
imul
mov
inc
jns
out
jle
cltd
xor
aam
imul
aas
push
dec
in
shl
pushf
push
mov
adc
inc
movsl
aas
mov
jmp
mov
xor
aas
ficoms
mov
cmp
dec
cmpsb
mov
xorl
xchg
fmuls
or
je
cs
and
cmpl
mov
pop
cmp
add
insl
imul
jno
movsl
or
mov
push
jle
cmc
cld
inc
mov
jns
xchg
and
inc
stos
imul
aam
pop
adc
bound
pop
or
xor
std
dec
pop
je
adc
pop
gs
sub
cmp
jl
cld
dec
and
fnstcw
jo
jge
mov
xchg
push
xchg
fldenv
or
sub
lahf
cltd
push
jae
lea
mov
shll
xchg
mov
xchg
divb
xor
mov
movsl
jns
push
jge
test
push
insb
mov
cltd
ja
bound
std
pop
fdiv
aam
pop
dec
call
scas
out
xchg
ds
test
mov
in
sub
add
fsubr
aad
lods
insb
in
clc
mov
xor
out
inc
cmpsl
dec
jnp
or
jecxz
dec
orl
or
add
dec
dec
xor
in
pop
sub
or
sub
je
sbb
add
es
out
add
fcmovbe
xlat
fs
loop
sub
xorb
rcrl
and
sbb
jecxz
xchg
pop
push
add
pop
inc
push
adcl
fs
lods
push
fdivrl
stos
dec
xchg
ds
mov
out
or
xor
sub
xchg
mov
sub
and
fistl
xchg
and
adc
mov
popf
cmp
neg
cmpsl
mov
fsts
test
inc
mov
inc
iret
scas
clc
mov
sti
das
push
xor
das
int3
xchg
lods
pop
outsb
jb
test
sbb
jmp
adc
sub
push
or
imul
in
and
loopne
shl
adc
or
push
loop
out
xchg
dec
xchg
incb
lock
xor
mov
dec
shlb
negl
pop
xor
in
leave
mov
lods
mov
xchg
fwait
sahf
push
lock
or
rorb
push
jns
popf
es
inc
xchg
adc
stc
repnz
mov
lret
or
in
std
sbb
popa
decl
outsl
xchg
adc
cmpsb
cmp
and
jg
stc
call
subb
mov
adc
aam
pop
leave
and
push
mov
dec
call
shrb
lods
popf
gs
sbb
inc
jbe
jnp
movsl
xchg
jnp
ds
ror
push
pop
cmpl
jle
push
mov
arpl
in
dec
and
jg
shlb
xor
jmp
cmp
or
jns
dec
es
pop
push
iret
outsl
dec
mov
and
shlb
mov
lret
mov
adc
lcall
lea
and
addl
fnsave
push
cli
jb
cli
mov
aas
xchg
inc
nop
jl
movsb
fimuls
out
cs
mov
inc
outsb
push
or
test
xchg
cmp
mov
dec
mov
sbb
rcrb
in
xchg
push
jno
or
lcall
sbb
lahf
mov
out
mov
aas
sti
add
inc
rclb
sbb
push
mov
mov
adc
jb
mov
mov
stc
cmp
jp
clc
clc
xor
fs
clc
sbb
ret
push
push
test
gs
mov
aad
loopne
pop
push
mov
push
push
mov
mov
fidivs
add
aas
or
inc
aam
lret
mov
push
sub
mov
hlt
imulb
sbb
aad
sbb
imul
call
add
xor
jnp
push
adc
sti
sbb
popa
add
leave
data16
out
pop
xchg
insl
lret
jge
xchg
mov
jne
scas
add
mov
cmp
sub
xor
add
imul
scas
shr
adc
pop
fwait
cs
ret
cltd
cmc
or
out
aas
sub
shl
sub
sbb
jg
hlt
in
in
jns
call
popf
ds
xor
int
icebp
sub
xchg
cltd
lret
push
jl
daa
xor
pop
js
jmp
add
jno
mov
out
dec
jle
out
or
pop
mov
enter
pop
pushf
test
mov
cmp
mov
pop
add
addr16
mov
decb
push
push
xchg
fimuls
or
test
mov
daa
jb
inc
add
and
dec
inc
cli
in
or
pop
aas
inc
in
aad
xchg
movsl
lock
dec
mov
cmp
dec
cld
mov
cwtl
mov
add
fs
fldcw
jmp
adc
mov
cld
add
jp
mov
xchg
or
lahf
int3
arpl
in
sbb
les
ret
push
mov
sbb
jo
lahf
pushf
in
rcrl
jle
push
jg
addb
cld
jns
lret
das
pop
and
jno
xor
fs
mov
push
pop
xor
cmpsb
inc
ss
cli
jo
adc
pop
pop
cmpsl
sahf
aaa
sarl
add
add
out
icebp
jno
or
inc
or
orb
push
add
in
and
aas
jbe
pop
cmp
les
mov
nop
cld
fsubrs
andl
push
popf
orb
movsb
xor
fmull
or
xchg
aas
popa
les
or
lds
arpl
pop
cmp
pop
mov
std
sbb
xchg
dec
out
and
fsubs
sbb
test
push
test
cmp
adc
mov
xor
scas
fsubrs
push
dec
pop
push
cwtl
inc
insl
bound
ljmp
cmp
mov
push
cmp
sbb
jbe
add
loope
pusha
mov
pop
jl
sahf
sbb
arpl
dec
sbbb
test
xor
jmp
sub
xor
stos
lock
push
stos
ss
xchg
jb
aam
aam
push
or
mov
pop
test
in
push
push
scas
das
push
add
jmp
ja
push
enter
arpl
lahf
roll
cmpsb
call
in
imul
fucomp
sti
jle
les
xchg
lods
inc
mov
and
sub
jg
fcmovnbe
repz
sub
icebp
jo
xchg
daa
aam
sbb
add
shll
cs
ficoml
int3
cmp
mov
xchg
mov
mov
je
and
movsl
pop
adc
push
cmp
faddl
jb
pop
or
mov
out
pop
inc
inc
lods
iret
test
jb
xchg
lods
push
sub
pusha
into
in
cs
fldl
push
inc
mov
or
mov
jnp
movsb
addl
notl
add
cli
jmp
js
adc
je
jb
or
out
add
sub
out
push
mov
js
iret
pop
cmp
mov
fsubrs
ds
xchg
shrl
shlb
into
or
insl
adc
adc
dec
aam
pusha
push
insb
jle
mov
popa
inc
mov
fistl
mov
movsb
dec
lods
add
fmull
jge
adc
clc
lods
mov
repz
subl
bound
adc
xchg
dec
aas
or
dec
fldenv
popf
jle
push
ja
sub
pop
jl
push
adcw
pop
mov
es
into
mov
cmp
stc
inc
cmp
add
sbb
gs
fdivl
or
jo
jecxz
jmp
jbe
and
mov
loopne
xlat
push
mov
aam
cmp
sbb
jp
jne
outsb
insb
xchg
xorl
mov
push
dec
shr
sahf
xor
icebp
daa
sub
into
dec
jae
std
hlt
jecxz
push
lahf
std
into
sub
testl
jno
xchg
arpl
inc
call
jp
cltd
aas
inc
into
gs
mov
jo
roll
and
in
fs
lea
sbb
not
fs
and
add
push
cmc
push
jecxz
xchg
pop
out
je
pop
xor
fimuls
frndint
sbb
lods
mov
jge
add
or
push
cmp
out
xor
xchg
mov
in
out
iret
out
and
hlt
inc
cmpsl
daa
std
pop
jecxz
mov
xor
push
and
dec
outsb
xchg
cmp
push
xchg
bound
xor
loope
push
clc
in
xor
mov
cmp
jns
jbe
outsb
arpl
pop
xor
mov
fs
ds
and
rorl
outsl
cld
cli
xchg
test
push
push
inc
inc
push
neg
clc
repz
push
adc
fists
cmp
mov
mov
jne
and
fwait
fwait
dec
stos
nop
add
and
imul
or
or
neg
lods
addl
sbb
rolb
sub
mov
mov
and
sub
sub
pop
pop
push
xor
sbb
scas
rcl
or
in
addr16
fisubl
icebp
push
lock
or
xlat
sub
xchg
stos
stc
push
cltd
or
data16
adc
enter
mov
test
lods
and
mov
sub
add
negb
pop
cmpl
and
lcall
aam
pop
sbb
jg
mov
notb
push
jl
mov
sub
or
arpl
loop
rclb
ljmp
outsl
inc
push
adc
pop
mov
jnp
dec
add
xor
adc
pop
pop
mov
push
inc
dec
pop
loope
test
pop
or
jl
mov
jbe
inc
add
jge
xor
lea
inc
inc
sub
dec
adc
sbb
pop
mov
xchg
jb
jo
jl
mov
xchg
in
insb
mov
pop
inc
sub
stc
in
mov
lret
dec
test
sub
jbe
aaa
fimuls
pop
cmpsb
and
popa
xor
mov
xor
lds
clc
mov
cltd
fistpl
push
ret
push
jle
iret
les
inc
lret
and
pop
xchg
jo
jg
popa
lahf
push
dec
inc
out
xchg
fwait
and
mov
in
pusha
incb
int
mov
lds
pop
push
int3
sub
adc
xor
sarl
repz
test
mov
fisubl
inc
ljmp
dec
fs
in
mov
pop
push
orl
rcl
mov
nop
aaa
mov
rcrb
dec
push
jno
out
lds
insl
pop
dec
fs
jae
addr16
xchg
pop
inc
cld
and
mov
cmp
mov
sbb
pop
imul
dec
sbb
push
pop
xchg
push
shlb
mov
jo
jns
or
mov
mov
daa
xchg
sub
push
dec
pop
repz
cmp
cmpl
into
scas
aad
out
mov
call
sub
loop
xchg
cwtl
aaa
mov
addr16
inc
lret
mov
outsb
sahf
mov
mov
push
inc
rclb
shll
mov
data16
pop
jg
pop
stos
inc
popl
push
enter
insl
add
shll
mov
xor
jl
ret
mov
lds
mov
fisubl
sbb
xor
fistps
lods
int
leave
sub
xchg
std
jp
inc
sarb
xchg
stos
fsubs
mov
repz
cmp
cmc
mov
inc
push
jl
pop
pop
lahf
cmp
jb
test
cmpsl
repnz
sahf
cltd
movsb
scas
mov
bound
pop
outsb
rolb
jnp
jns
lock
mov
cmp
out
stos
jmp
push
mov
mov
xchg
inc
fwait
aam
pop
adc
jg
ja
fldcw
add
mov
aad
jp
cmp
xor
mov
inc
dec
lcall
inc
mov
or
iret
cmpsl
jns
pop
jo
jecxz
adc
mov
push
mov
pop
inc
stos
outsb
mov
sbb
arpl
pop
add
rclb
lret
std
adc
cmp
into
pushf
lret
sub
mov
in
movsw
sbb
clc
jl
jl
sbb
aam
fucomp
notb
fcoms
xchg
inc
cmp
dec
inc
jge
sub
jg
sub
xchg
xchg
popa
test
pop
mov
fnstenv
jns
pushf
fistpl
push
test
xchg
add
pop
loopne
inc
fnsave
mov
clc
pushf
push
lods
jnp
dec
dec
lock
ljmp
shl
stos
xor
pop
cs
push
lods
mov
in
iret
das
push
sub
les
jnp
std
mov
mov
mov
xchg
testb
pop
fucom
stos
sub
pop
and
out
inc
jl
lds
lahf
jg
mov
xchg
pop
mov
push
sbb
xor
adc
in
or
mov
sbb
push
mov
adc
fcoml
sbb
leave
xchg
or
loope
fs
xchg
jo
filds
dec
cli
mov
sahf
fldenv
mov
jmp
push
ja
stos
xchg
cmpsl
in
imul
js
xchg
sbb
loop
imul
cwtl
push
sub
ret
and
mov
push
lds
lock
lock
inc
xchg
xor
and
jnp
dec
mov
or
inc
outsb
sbb
test
pop
xchg
sbb
mov
lock
popa
das
fwait
sub
cwtl
dec
insb
sbb
cmc
out
filds
in
mov
jl
and
inc
pushf
in
jmp
add
dec
jge
cli
dec
rcll
or
push
push
inc
popf
mov
cs
bound
popa
push
lods
xchg
inc
loopne
add
jne
mov
mov
je
fimuls
xor
sahf
adc
stos
jo
inc
sub
and
pop
adc
mov
ret
insb
fnstsw
scas
into
inc
in
call
in
test
or
xlat
sub
pop
or
std
push
push
sub
dec
lcall
push
jmp
pop
sbbb
pop
mov
mov
pop
mov
xor
or
jbe
ret
push
or
jge
add
in
nop
gs
test
pushf
xor
add
mov
xor
jbe
mov
pop
adc
dec
nop
ja
pop
iret
bound
inc
addb
add
cld
popf
jbe
jl
ret
test
add
sub
or
xchg
call
add
clc
pop
lcall
xor
jmp
pop
cs
mov
pop
shll
jbe
adc
cmp
sub
and
in
jg
push
and
jmp
into
xor
or
lfs
out
lods
and
lahf
inc
mov
xor
mov
jbe
mov
sub
shrb
xor
rol
shll
mov
mov
mov
inc
sub
orl
inc
xchg
and
pop
add
into
xchg
fcmovnb
aad
jl
mov
ret
pop
pop
adc
int
ret
mov
or
pop
ljmp
add
enter
adc
loope
xlat
out
add
jle
int
and
fwait
mov
call
mov
repnz
xchg
out
pop
into
repz
dec
aas
cli
std
xchg
lds
and
rcl
sbb
shlb
push
push
sbb
mov
std
cmp
out
ror
cli
dec
pop
stc
in
dec
imul
repnz
or
or
mov
adc
mov
mov
int
cmc
sti
jecxz
fwait
and
mov
xchg
pop
outsl
lcall
adc
xchg
enter
xchg
push
in
mov
js
inc
jmp
push
pop
xchg
push
adc
dec
mov
mov
xchg
add
movsl
dec
mov
addr16
shl
leave
jl
cmc
movsb
and
jl
addr16
mov
addr16
aam
adc
push
loope
pop
call
jno
mov
js
inc
mov
lcall
inc
jge
mov
rorb
mov
add
mul
in
xchg
aam
mov
push
sub
xor
and
xchg
sbb
mov
sbb
scas
push
aaa
pop
jle
mov
mov
fistps
cltd
in
incb
or
jno
sbb
hlt
jbe
push
sahf
sbb
mov
shr
pusha
fmuls
inc
popa
les
add
inc
xchg
jge
push
lea
xchg
sub
inc
sti
sub
xor
hlt
jle
jecxz
xchg
nop
sub
loope
pusha
pusha
add
dec
jge
and
int
xlat
push
xor
scas
lahf
xchg
inc
rcrl
jbe
inc
shrl
sub
add
cmp
sti
ljmp
ret
jns
imul
incl
xchg
mul
sub
xchg
out
outsb
rorl
inc
lcall
xchg
jp
or
xchg
dec
xor
pusha
add
popf
xchg
ljmp
push
incb
es
std
imul
jecxz
inc
xchg
pop
aaa
notb
jne
out
and
in
sub
bound
enter
enter
xlat
sti
popa
clc
iret
in
out
inc
imul
fcoms
lock
popf
xchg
jle
mov
lds
xchg
pop
sar
add
mov
and
push
test
jnp
cmp
xor
add
jb
jg
push
adc
inc
push
sti
xchg
mov
sti
pop
push
fxtract
pavgw
push
cmc
mov
jmp
fnstenv
mov
xchg
dec
movaps
negb
or
out
sbb
cmp
ds
pop
in
out
mov
jne
xor
cmp
jb
mov
mov
add
outsb
jo
roll
popa
rcll
aad
in
outsb
jae
or
outsl
jbe
fcoml
sbb
mov
cmp
adc
and
shrb
scas
mov
add
popf
xlat
inc
pop
ret
inc
addr16
pop
out
insb
mov
cs
loopne
out
jg
inc
mov
insb
jecxz
sbb
outsl
cmp
xchg
mov
sti
cmp
push
out
pop
jmp
fidivs
mov
sub
dec
test
push
and
pop
divb
or
mov
jae
rol
movsl
es
jg
call
test
inc
shlb
jne
loop
sub
jbe
insl
enter
rol
dec
or
jbe
xchg
push
mov
pop
sbb
pop
fsubrl
out
mov
jbe
cmp
lret
jns
in
push
mov
push
test
repz
dec
movsb
adc
in
std
xchg
mov
cmpsl
lods
jp
sarb
ret
xor
testl
mov
sbb
hlt
sub
mov
dec
jo
add
das
and
mov
inc
dec
enter
xchg
pop
arpl
add
or
arpl
in
jecxz
jb
arpl
pop
push
push
pop
mov
jecxz
ja
add
in
cmp
pop
std
push
imul
stos
mov
mov
faddl
mov
mov
mov
mov
arpl
jae
add
xorb
cmc
fs
sub
adc
int
fnsave
and
cmp
jl
pop
cmc
pusha
pushf
jo
mov
mov
adc
aas
sbb
rcll
mov
or
imul
sbb
not
inc
fldcw
sub
cli
ret
xor
push
out
aaa
mov
iret
xchg
stc
insb
pop
sti
dec
push
cli
or
mov
pop
lock
and
out
std
mov
popa
outsb
add
pop
mov
scas
lahf
inc
stc
popa
or
ret
aam
outsl
sbbl
popf
sti
rcr
lret
dec
and
icebp
push
jne
pop
lods
neg
insl
ja
dec
and
push
push
mov
into
stc
in
mov
mov
and
pusha
add
andb
gs
adc
mov
ret
ljmp
stos
mov
pop
lods
nop
std
sbb
call
icebp
data16
pop
dec
inc
fldcw
push
lea
es
xchg
add
cmpsb
addr16
and
fisubl
fists
mov
cmp
cld
test
sbb
cmp
cmp
cmp
sub
test
test
push
lret
data16
push
inc
mov
cltd
scas
lods
push
inc
roll
sub
push
cs
mov
jmp
pop
cmp
fisubrl
mov
xchg
mov
je
push
loop
push
sbbb
lea
aad
loop
out
sbb
lcall
or
std
and
jge
xor
cmp
xchg
sti
lock
clc
jl
popf
shlb
jecxz
aam
pop
mov
cmpsl
sub
insb
lret
adc
insl
fidivrl
les
movsb
out
add
mov
pop
cmp
and
pop
dec
call
sti
imul
addb
test
pop
mov
jge
sub
dec
adc
imul
or
pop
and
test
enter
orb
pop
sub
pusha
jns
sub
xchg
push
or
fsubrl
xchg
add
sbb
jmp
sahf
mov
mov
jb
pop
lods
inc
and
inc
mov
clc
add
jae
enter
lds
and
out
cmp
mov
sarl
and
pop
lds
ja
in
scas
dec
repz
loop
jecxz
das
add
fisubrs
hlt
push
push
xorb
lods
cmp
mov
sbb
add
mov
xchg
insb
sbb
lret
or
sub
mov
ja
test
mov
pop
bound
xor
xchg
stos
sub
push
xchg
dec
into
bound
xchg
shl
or
sbbb
outsb
or
aam
inc
mov
cmpsb
leave
pop
mov
xor
mov
dec
enter
adc
mov
testl
inc
add
negb
outsb
xchg
jge
pop
xchg
push
and
dec
hlt
jmp
aam
imul
js
aad
add
pop
insb
fcoms
dec
call
push
add
ret
mov
rclb
cmp
push
push
pop
gs
mov
jns
mov
xlat
rcrl
sub
ret
stos
fidivrs
xchg
popf
add
lods
cmp
pushf
stos
rcl
sbbb
push
mov
es
ret
mov
test
jbe
hlt
hlt
lods
pop
aad
or
movsb
xchg
push
or
jle
jp
imul
xor
mov
jo
pop
sbb
out
fs
sti
and
lods
js
xor
sub
push
lds
data16
repnz
push
sbb
jp
insb
cmp
push
mov
inc
xchg
rclb
xor
ds
pop
test
sti
inc
mov
daa
dec
dec
stc
sbb
jge
cmc
cmpsb
jl,pt
mov
jmp
push
flds
or
ja
pop
pop
je
mov
inc
int3
pop
jno
into
xchg
inc
lds
mov
in
mov
mov
aam
les
xchg
push
addr16
xchg
jg
xor
pop
push
push
imul
dec
and
and
dec
cmp
pop
mov
inc
push
sub
inc
inc
daa
lock
ljmp
jae
jne
add
cli
js
loop
std
icebp
pop
xchg
sub
je
mov
dec
jo
ds
sbb
mov
mov
aaa
lods
adcl
fcoms
popa
mov
insb
das
mov
or
add
fstpl
mov
and
in
repz
sub
scas
std
fimull
ret
je
jge
inc
pop
fsubrl
cmp
loopne
pop
push
lret
xor
imul
cmp
sbb
xor
test
xor
dec
shlb
mov
cmp
ss
mov
mov
adc
mov
fs
repnz
sub
xor
inc
cmpsl
mov
mov
popa
fnstsw
inc
dec
and
cmp
pop
icebp
xchg
or
popf
dec
mov
cltd
jb
jg
or
jno
rcrb
jp
nop
decl
dec
xchg
or
pop
mov
or
or
inc
mov
aas
sub
out
mov
add
jmp
jl
or
aam
fidivrl
in
sbb
stos
mov
in
shl
imul
mov
test
mov
sbb
lods
test
pushf
ss
movb
add
jnp
inc
lea
dec
fsubrs
xor
lret
out
adc
arpl
hlt
mov
adc
lret
test
push
andb
dec
adc
sahf
mov
inc
lcall
pop
in
sahf
sub
push
mov
cld
sbb
les
push
add
lret
cmp
incl
mov
in
jne
aam
or
push
lds
out
or
int
xchg
jnp
or
fcompl
add
mov
xchg
xchg
cltd
sbb
pushf
mov
int3
ljmp
js
sbb
sahf
mov
adc
pusha
mov
fisttpl
xor
jecxz
xchg
outsb
call
in
jno
ljmp
add
sbbl
cwtl
ss
jnp
fdivp
clc
in
cmp
sbb
push
stos
pop
jp
in
lods
fs
inc
fwait
outsl
push
cmp
lret
inc
sarl
into
int
mov
aaa
in
push
and
dec
jg
sub
mov
pusha
std
fwait
mov
negl
push
inc
xchg
sarb
cmp
pop
std
add
and
cs
fs
loope
or
push
aas
fs
lods
bound
fwait
push
loopne
dec
jp
cli
out
mov
inc
shlb
pop
stos
adc
xor
pop
fsubrp
dec
lock
out
cmpsb
mov
cmp
mov
jno
lods
jmp
dec
aaa
sti
rcrl
int3
addr16
addr16
inc
ljmp
mov
jl
push
inc
mov
clc
or
xchg
into
int
aam
fsubr
sahf
or
je
jmp
das
pop
test
sbb
jge
shll
dec
icebp
sub
cmp
roll
adc
jle
sub
jp
jns
nop
xor
int3
test
dec
sub
subb
js
mov
push
inc
sub
cltd
push
adc
in
cmp
and
movb
sti
shll
push
mov
pop
insb
shl
and
lahf
movsl
mov
out
lret
fdivl
xchg
imul
lcall
arpl
and
push
mov
xor
inc
xor
jnp
adc
ret
and
aas
mov
outsb
int
add
inc
fnstsw
adc
push
xchg
xchg
push
jmp
popa
inc
dec
aam
ret
cmpl
and
mov
pop
popa
shll
lods
adc
out
lcall
orb
popa
jge
push
loop
scas
pusha
and
pop
dec
jmp
fwait
xor
movsl
xor
aad
cld
xchg
fsubrs
cmc
outsl
into
xrelease
pop
out
mov
pushf
inc
inc
rcrl
imul
imul
in
and
clc
adc
enter
and
imull
adc
dec
pop
pop
mov
mov
or
mov
cmpsl
pop
mov
jae
and
cmp
xchg
inc
jae
loope,pn
icebp
jg
sbb
loopne
aam
mulb
add
mov
dec
mov
pop
mov
das
roll
xor
push
dec
push
xor
xchg
lods
inc
je
or
in
loop
and
jnp
rcrl
xchg
or
je
push
je
imulb
pop
ret
mov
icebp
dec
jle
add
mov
xchg
jnp
xchg
cmpsl
xchg
mov
xchg
push
out
jbe
ds
add
les
xchg
shl
dec
repnz
dec
rcl
int
hlt
dec
nop
pop
arpl
std
lods
push
cmp
sub
mov
mov
lret
cmp
jae
jmp
addl
aad
clc
jns
aas
sbb
jns
lahf
daa
sbb
fstl
repz
inc
jecxz
push
push
mov
jns
or
fwait
xchg
bound
je
fsubrp
mov
mov
dec
push
xchg
insl
cmpb
dec
hlt
jno
cmp
imul
lcall
jmp
testl
mov
les
movsl
dec
pop
adc
cmpsb
aaa
rcl
xchg
lock
add
test
jg
cmpsb
or
pop
fcmovnb
jns
mov
rcll
xlat
sub
push
lret
leave
pop
sub
scas
sahf
je
mulb
adc
jg
pusha
jl
test
icebp
xchg
sub
sub
cwtl
inc
mov
sti
xchg
gs
popf
shll
xchg
mov
sbb
enter
das
leave
fsubrl
test
sub
fstl
lret
or
les
cmpsl
sbb
cmp
fisttpll
push
arpl
cli
fimuls
test
and
rol
packuswb
pop
sub
or
or
add
dec
adc
insl
cmp
mov
gs
fs
int
arpl
sub
jmp
and
scas
arpl
mov
jns
mov
loope
lea
orb
xor
outsb
dec
inc
adc
sbb
ja
popa
mov
ja
jmp
in
cmp
jl
test
mov
adc
xchg
mov
lret
inc
pop
lods
push
ret
jbe
jecxz
adc
sub
mov
rcll
int3
pop
fs
cmc
sub
adc
hlt
movsb
push
mov
adc
push
xchg
fmull
xor
out
add
push
sub
ret
test
pop
xchg
add
fcompl
adc
sbb
enter
lds
or
das
and
ja
loop
addr16
sub
repz
loop
pop
and
and
popa
inc
lcall
jno
dec
pop
xlat
repz
idivl
mov
js
test
out
rorb
fadds
outsb
mov
pop
out
das
pop
jle
repz
sub
je
movsl
imul
je
sub
xchg
and
insl
test
cmc
lcall
adcl
lods
cmp
ret
mov
cmc
adc
call
sbb
or
jb
xor
sbb
in
lret
sbb
sbb
mov
addr16
and
ds
jecxz
jmp
jnp
lret
shlb
hlt
cmpsl
cmp
lods
adc
ds
fdivr
scas
frstor
cmp
mov
hlt
xor
movsb
and
xchg
das
cmp
cmc
jge
pop
popf
push
inc
mov
add
pop
jae
jae
imul
pop
test
leave
and
mov
stos
or
or
xchg
xlat
daa
adc
adc
or
jno
and
into
push
pop
je
pusha
pusha
cmc
popf
test
push
test
dec
cmc
pop
enter
sub
or
mov
into
into
rcll
rolb
fldt
cwtl
mov
xlat
loope
xor
sub
jb
jne
scas
fisubs
rorl
mov
jp
jnp
mov
fidivrs
test
dec
mov
or
ja
mov
mov
pop
inc
jns
sbb
pop
pop
xchg
push
and
aaa
jae
mov
inc
cmp
push
ja
clc
or
outsb
cmpsb
adc
mov
sbb
xchg
add
xor
popa
cmp
loop
xchg
and
sub
aaa
cmpsb
mull
or
mov
stos
mov
push
and
inc
dec
cmp
js
sbb
lahf
dec
imul
jnp
cmp
jnp
sbb
lods
leave
xor
loop
call
out
jne
mov
xchg
inc
push
popf
lcall
sub
mov
add
jbe
decb
or
loop
out
lret
cwtl
sub
les
xchg
xchg
mov
adc
addr16
inc
push
pop
test
repz
popf
lcall
lods
adc
ja
jno
testb
cltd
lods
jge
sub
fcmovb
insb
push
hlt
fucomp
xchg
sub
bound
or
das
lds
leave
imul
pop
sbb
or
les
pop
scas
dec
cli
cwtl
sbb
xchg
sub
in
sbb
inc
xchg
roll
lret
out
push
out
out
rcrb
or
jns
sarb
mov
xadd
leave
rolb
jo
adc
pop
push
cmpsl
test
mov
sub
push
push
cld
pop
add
add
repz
fdivl
cmp
incb
jne
push
push
cmc
mov
cmp
iret
mov
mov
shrb
mov
mov
outsl
lds
lods
das
and
sbb
ss
loop
jbe
ja
jnp
mov
stc
add
test
stos
add
dec
jns
dec
test
inc
jle
pop
pop
adc
cld
xchg
andl
push
fidivl
xchg
sub
mov
xchg
and
rcrl
xchg
aad
hlt
inc
data16
adc
cltd
lods
jne
mov
les
aam
fisttpl
sbb
pop
js
icebp
mov
out
add
addr16
jmp
repnz
lret
jle
or
pop
pop
cmpsl
jae
cli
scas
out
dec
or
iret
scas
sbb
add
mov
mov
push
loopne
and
inc
hlt
mov
leave
addr16
popa
out
sbb
and
push
pop
shrl
test
and
pop
aam
popf
jne
jl
scas
jb
jb
add
and
outsl
mov
lock
insb
or
or
mov
lret
iret
mov
fnstsw
xchg
idivl
cmpsb
add
aaa
aam
fistpll
inc
mov
cwtl
js
xchg
mov
inc
mov
adc
icebp
faddl
testb
lods
loope
ret
ljmp
popa
xor
pushf
movsb
sbb
dec
stc
and
xchg
or
and
lret
sub
decl
or
cmpsb
xchg
mov
xor
cmp
lahf
sar
inc
out
jl
testb
pshufw
lea
sahf
or
jo
jne
cmp
xlat
shll
gs
and
xchg
add
dec
mov
in
inc
push
stc
inc
out
pop
push
xchg
ret
mov
pop
haddps
dec
adc
inc
inc
or
jne
mov
lods
faddp
push
push
decb
sahf
test
add
pop
clc
mov
fwait
aad
jne
out
pop
lcall
movsl
sarb
std
lret
and
pop
pop
dec
cld
bound
fnstcw
adcl
push
push
xchg
aad
or
add
xchg
xchg
push
loope
popa
stos
dec
xor
es
mov
sub
cmp
pop
test
fucomip
xchg
push
jge
inc
js
movsb
in
call
or
mov
inc
mov
and
sbb
and
and
cltd
mov
dec
push
js
lea
xchg
lods
subb
push
fdivrl
mov
loop
ljmp
or
xchg
cltd
jp
cmc
fisubs
test
or
xchg
dec
dec
stos
mov
outsb
add
das
imul
jl
bnd
xchg
lretw
add
jle
cmp
mov
sahf
mov
negb
push
test
testl
sbb
insl
push
imul
jl
inc
nop
scas
add
xchg
cmpxchg
adc
dec
data16
xlat
sbb
aad
arpl
xorl
iret
cs
gs
es
mov
cmp
mov
dec
xor
jle
pop
add
sub
lcall
and
mov
fsubl
jge
faddl
std
inc
push
repnz
push
in
sbb
sub
loopne
mov
into
or
add
sub
add
cmp
sahf
scas
ss
inc
sub
out
inc
lods
mov
inc
fstps
mov
xchg
bswap
ret
shlb
mov
clc
xor
jo
mov
fidivrl
daa
mov
add
xor
add
mov
hlt
repz
jns
inc
dec
test
ljmp
fdivrs
ret
jno
adc
idivl
sub
cmp
sbb
imul
pop
ret
and
mov
adc
je
xor
mov
and
fildll
subb
dec
or
dec
or
fiadds
jns
jle
iret
lahf
xchg
xor
loop
jle
sti
mov
mov
push
pop
add
push
mov
inc
jp
mov
jp
out
pop
imul
sti
ljmp
clc
roll
lea
dec
mov
push
cwtl
nop
jne
mov
mov
hlt
mov
mov
out
fcoms
fsubs
aas
cmpsb
leave
or
adc
fistl
mov
gs
call
outsb
cmp
and
inc
loopne
sub
stc
pop
or
add
fmul
mov
sub
mov
ja
ficoml
jne
scas
and
sti
add
push
dec
pusha
add
xor
ficoms
insb
shll
aam
cmp
cmp
in
rolb
sub
sub
in
call
inc
sub
dec
ds
jecxz
sub
pop
arpl
pop
mov
mov
xchg
addb
and
into
es
mov
jb
xor
lret
xchg
jae
sub
pop
add
mov
jl
mov
ss
loope
push
inc
pop
roll
lods
sbb
jge
aaa
js
cltd
xor
push
mov
inc
out
cwtl
stos
cs
loope
jnp
repz
cmpsl
mov
inc
daa
das
sbb
xchg
leave
jl
aas
sbb
mov
fmull
in
js
imul
out
adc
push
insl
inc
lcall
pop
add
mov
xchg
or
jl
inc
mov
jecxz
xor
dec
jo
test
push
or
mov
outsl
mov
outsb
sar
cmpsb
xor
ficomps
int
popf
in
xlat
fidivl
scas
cmpsb
orb
dec
scas
push
rcrb
xlat
mov
xor
imul
push
pop
sub
xor
mov
notb
test
pusha
sub
test
sti
xchg
xor
clc
mov
dec
addb
bound
ds
inc
sbb
mov
fnstenv
leave
jg
pop
das
cltd
mov
cmpsl
mov
mov
mov
push
xor
add
and
jmp
in
push
xchg
adc
sbb
mov
ret
inc
cltd
test
ss
fwait
push
shrl
sub
lods
mov
movsb
cli
stos
dec
rclb
add
cmp
dec
lret
dec
cmp
mov
hlt
push
out
out
shr
outsl
dec
andl
das
cmp
outsl
imulb
out
fnstcw
xor
sti
dec
cmovge
adc
add
iret
in
in
mov
negl
cltd
sub
jo
es
mov
sbb
dec
inc
mov
and
pusha
dec
jnp
or
push
fwait
sbb
stos
push
dec
pop
cmp
xchg
in
xor
les
mov
inc
scas
imul
mov
arpl
mov
imull
stos
sbb
or
lret
dec
lock
and
mov
sbb
jo
add
jne
insb
imul
data16
jb
adcl
cmp
js
push
data16
cs
out
and
cmp
ja
das
rcr
jge
push
xor
aam
pop
addr16
hlt
inc
inc
outsb
adc
mov
cmp
xor
fdivl
pop
out
dec
adc
fnstenv
inc
push
dec
adc
or
and
push
lods
push
fprem
fldcw
dec
mov
jnp
pmullw
leave
stc
push
pop
and
stc
rcrb
imul
fwait
scas
dec
pop
das
inc
sti
adc
mov
clc
rolb
es
adc
negb
loop
sub
insb
sub
pop
mov
imul
cmp
dec
dec
push
mov
xchg
call
out
and
and
ljmp
push
jge
popf
mov
xor
in
and
ljmp
push
icebp
leave
das
sbb
xchg
stos
xchg
adc
jae
pop
test
inc
cmp
cs
dec
insb
inc
xchg
inc
pop
jle
ret
mov
lret
les
sahf
pop
adc
lret
imul
test
lods
xor
lcall
push
ja
inc
cmpsb
xor
das
xchg
rorb
push
xchg
xor
xor
add
outsb
cmp
fidivl
inc
mov
mov
daa
or
jge
jno
mov
add
into
mov
xchg
mov
lret
pop
dec
es
test
imul
or
pop
loope
aaa
and
mov
sub
push
mov
jno
aad
outsl
leave
adc
mov
cmp
adc
mov
cmp
dec
mov
js
push
les
mov
addr16
xor
push
push
test
dec
mov
sti
push
pop
repz
inc
push
nop
pushf
jecxz
pop
fidivrs
loopne
xchg
mov
aad
and
dec
inc
insl
sbb
jmp
icebp
imul
push
sti
jbe
mov
pop
mov
leave
test
testl
fwait
and
xchg
shlb
fldl
sub
int3
pop
mov
inc
inc
sbb
push
add
pop
adc
outsl
pop
ds
inc
mov
xchg
mov
sahf
jbe
aaa
orb
mov
stos
xchg
movsb
divb
cld
push
adc
mov
fstpl
popa
pusha
out
addr16
aas
scas
bound
in
call
cmpsb
or
es
lret
xor
shlb
cmp
aaa
andl
les
seto
cli
or
mov
lret
es
mov
xchg
xor
jae
xchg
or
adc
xlat
popf
pop
or
inc
and
mov
sub
pop
add
mov
inc
add
test
cltd
outsb
or
testb
inc
in
cld
fstpt
mov
je
xchg
mov
pop
sti
ret
pop
testl
xor
scas
sub
iret
push
pop
insb
or
inc
mov
jl
lret
scas
mov
add
xor
out
mov
in
dec
xchg
mov
jmp
pop
test
loope
test
lahf
xchg
lea
sahf
stos
rcrl
aas
inc
incb
jle
pop
testl
rcl
mov
jae
pop
mov
das
ret
jns
mov
loop
lock
icebp
ret
out
pop
adcb
cmp
mov
cmp
mov
pop
loope
xchg
jnp
jns
jle
dec
cmpb
push
pop
cwtl
xchg
cli
pop
sbb
scas
jmp
mov
stos
jo
and
stc
les
dec
imul
mov
out
lcall
inc
sub
decl
mov
js
jl
xchg
lret
jmp
fiadds
pop
xchg
mov
stc
lods
sti
aam
nop
fsubrp
xlat
aas
arpl
xchg
adc
ss
scas
xchg
repz
lahf
test
mov
cmp
std
jbe
adc
adc
xchg
jae
cld
or
sub
adc
imul
jmp
xchg
sbb
movsb
jae
or
inc
lret
mov
or
inc
cmpsb
out
dec
add
push
shl
sbb
and
push
cmp
imul
adc
add
xor
loopne
repz
test
jmp
jnp
mov
xor
xchg
push
sbb
jb
xor
scas
and
xor
push
rcr
add
out
fstpl
add
or
dec
xlat
adc
mov
jp
dec
gs
xchg
cmc
sub
lahf
jecxz
pop
mov
and
jnp
inc
mov
push
pop
dec
or
and
std
sti
sbb
mov
repz
pop
cmp
stos
ds
xlat
push
fwait
cmp
shrb
test
in
outsl
adc
fsub
into
sbb
mov
int3
push
inc
jecxz
test
sbb
add
jno
inc
into
dec
mov
jp
xor
shrb
in
push
lret
stos
jne
push
fadd
xchg
out
ja
add
in
imul
bound
sbb
loopne
fsubrs
out
pushf
cmp
mov
push
add
sub
notl
xor
cmpb
loope
test
jmp
outsl
xchg
cmp
add
cmp
xchg
addr16
fsubrl
test
popf
loope
cs
rorb
sbb
pop
movsb
dec
adc
clc
js
loope
jno
fwait
sbb
pushf
add
nop
push
fcoms
cmp
add
adc
jnp
jmp
jns
and
ljmp
nop
sbb
or
xchg
jle
std
jl
rorb
adc
loope
out
pop
xor
cld
pop
ljmp
cmp
sbb
mov
enter
addr16
or
add
xchg
xlat
loopne
xor
jno
and
sbb
jl
dec
cmc
ret
add
mov
ds
bound
nop
hlt
push
stos
das
add
sub
mov
mov
and
lds
cli
mov
scas
pusha
mov
pushf
sbb
mov
mov
stos
add
sbb
cli
xor
orps
sahf
xlat
mov
icebp
xchg
inc
in
push
test
cmp
dec
xor
scas
xor
inc
add
jne
inc
push
sbb
push
stc
xor
or
stos
and
in
push
adcb
addb
inc
mov
movsb
adc
add
aas
and
push
push
fdivrl
push
leave
jb
sub
iret
roll
pop
mov
imul
push
mov
mov
jg
test
test
sbb
jb
mov
jecxz
push
mov
stos
in
scas
test
jns
fadds
nop
xor
or
roll
xchg
jns
lcall
aas
jle
add
sbb
jp
add
imul
jne
fcoml
add
mov
test
ss
sub
push
xchg
dec
mov
xchg
rcrl
xor
lds
adc
sub
int
les
jns
inc
bnd
mov
stc
cltd
mov
push
add
bt
dec
lret
xor
inc
fidivl
imulb
and
testl
mov
jle
out
std
cmc
insl
inc
xor
outsl
xor
cmp
sub
hlt
add
mov
push
inc
insl
imul
adc
jo
jae
pop
mov
mov
inc
ljmp
mov
popf
imul
loope
sti
test
sub
loope
hlt
test
jb
inc
push
and
and
sti
push
scas
cmp
push
sub
shrl
xor
mov
adc
xor
cmpsb
jmp
outsb
push
aad
pop
mov
stc
inc
xor
in
cli
cmp
iret
jnp
je
xchg
gs
sbb
mov
mov
mov
lock
lcall
dec
int
popf
dec
cmpsl
es
outsl
std
pop
ret
rcll
popaw
testb
xchg
xor
in
pop
add
repnz
sub
mov
pop
mov
lods
inc
mov
fcompp
daa
shrl
xchg
xchg
sbb
add
loopne
or
xchg
lahf
sub
xor
outsl
cmp
pop
fistpll
ljmp
and
inc
rolb
add
jl
and
rcl
cmpsb
jmp
pop
mov
sbb
cmpb
aam
mov
or
mov
xchg
lods
and
mov
push
int3
xlat
pop
int
lock
outsb
movsb
repz
adc
sbb
aaa
sahf
fs
add
xchg
sub
sbb
mov
lock
out
andl
lods
stos
cmp
ffree
or
pop
rcrl
sti
add
pop
or
pop
jno
push
shll
push
xchg
test
push
mov
cld
out
scas
iret
rorb
adc
inc
mov
push
loop
dec
jae
jl
std
sub
test
lcall
mov
clc
ljmp
xchg
neg
mov
rcll
insl
addb
imul
mov
pop
test
daa
jle
out
mov
adc
mov
out
or
rcrl
cmpsb
dec
xor
pushf
lahf
cli
or
pop
cmp
divb
arpl
das
test
in
cmp
test
xchg
fcomps
push
lods
jno
in
mov
jmp
adc
testl
lret
ds
pop
fadds
imul
mov
pop
xor
leave
sub
mov
mov
mov
inc
out
fcoml
dec
push
sbb
imul
mov
jmp
adc
mov
lea
add
cmp
scas
push
sarl
stos
jbe
mov
adc
bound
cmp
sub
cmp
dec
jge
ret
adc
rolb
xchg
bound
pushl
mov
sub
stos
mov
test
or
fdivrs
sbb
in
fcompl
cmp
insl
add
icebp
push
pop
sub
pop
subl
xchg
fwait
sahf
daa
hlt
in
cmp
sti
jb
xchg
clc
mov
fsubr
xor
push
rolb
popf
mov
pushf
aaa
aaa
xchg
dec
lret
ret
cmp
ficompl
xchg
fcmove
jae
jbe
jle
lods
push
mov
cmp
rcr
xchg
mov
pop
pop
and
in
nop
ret
mov
sbb
add
pop
rcrb
jns
jae
cwtl
shrb
out
add
xchg
sub
cmc
cltd
subb
aam
out
mov
lret
enter
mov
dec
jl
adc
test
xchg
icebp
jno
add
lock
mov
or
sti
mov
ljmp
je
lea
fwait
dec
in
pop
mov
cmpl
ss
mov
mov
xlat
pushl
mov
enter
insb
inc
idiv
sbb
pop
and
cmp
mov
mov
shrb
jecxz
subl
jne
gs
shrb
repnz
sub
fst
popl
mov
leave
data16
sarb
inc
jae
pop
mov
xor
jb
das
mov
jg
xchg
dec
movsl
sub
test
mov
outsl
nop
sarl
out
mov
out
dec
sub
push
dec
pop
das
mov
in
dec
cmp
out
into
mov
dec
sbbb
out
test
bound
imul
mov
and
scas
jno
pushl
xchg
mov
pushl
cmp
fs
jno
out
xor
mov
rcrb
sbbl
nop
data16
jae
xor
iret
ret
pop
out
popf
insl
mov
rcrl
imul
sbb
sarl
stos
xchg
push
sbb
sbb
shll
add
jbe
enter
loopne
sti
push
sbb
inc
dec
popa
inc
imul
sbb
and
xor
cmpsl
jmp
rcr
lret
subl
ret
adc
sarb
sbb
inc
jmp
cmp
adc
xlat
jg
movsl
aas
faddl
test
mov
push
scas
fldl
xchg
or
pop
aam
xlat
jae
mov
loope
inc
cmpsb
push
insb
adc
ljmp
jbe
shrb
jecxz
sub
inc
mov
cmp
daa
xchg
ficoml
lret
mov
enter
push
pop
inc
pusha
mov
popa
loopew
jge
dec
in
inc
fidivl
aam
aaa
jl
jne
mov
mov
push
add
jle
pop
test
xor
ret
loop
mov
in
mov
imul
mov
sahf
fcoml
pop
imul
outsb
pop
mov
bound
and
add
xchg
jno
mov
idivb
push
xor
and
mov
mov
ret
bound
movsl
movb
stc
add
jle
add
loopne
andl
cmpsl
lahf
cmp
jo
insl
xor
pop
xor
int3
mov
mov
push
addl
ret
insb
cmp
rcl
cmp
clc
loop
mov
in
sub
aaa
test
and
dec
xor
sbb
lock
or
adc
jp
ret
or
fnstcw
mov
fdiv
fisttpl
out
out
jmp
int
repz
adcb
popl
xchg
int3
jns
cmpsb
jne
je
push
cltd
sahf
mov
in
or
lahf
sub
inc
and
push
jbe
inc
mov
xor
jle
jno
lahf
lret
push
mov
mov
push
in
xchg
cmp
and
jne
repnz
push
data16
adc
test
sbb
imul
jle
pop
xchg
mov
xorb
cltd
lret
push
ficoml
test
popf
rcrl
ret
aas
cs
mov
adc
ficoms
dec
sub
push
xchg
mov
pusha
xorl
aad
movl
ljmp
mov
std
push
data16
xchg
aad
test
sub
movsb
leave
aam
cmp
stos
inc
xor
jo
adc
fisubrl
xchg
mov
push
pusha
enter
rol
outsb
cli
test
sub
jmp
shrl
negl
lret
jmp
cltd
add
mov
xchg
sub
push
ss
sub
loopne
or
sbb
aad
fwait
lods
dec
add
mov
into
mov
dec
mov
pop
cld
cmp
add
movsl
gs
and
and
push
xor
adc
stos
call
fs
jo
mov
rol
mov
lret
stos
and
cmp
mov
inc
pop
push
jo
mov
fwait
cli
push
stos
jb
div
sub
je
addb
lret
imul
mov
scas
jnp
sarl
pop
cmpsb
jge
shrl
mov
cmp
lcall
ret
enter
and
xorb
lahf
adc
cwtl
rcll
mov
lret
xchg
ljmp
pop
frstor
mov
loopne
and
push
sahf
xchg
hlt
add
add
loopne
xchg
mov
stc
jl,pt
inc
in
bound
cmp
clc
xor
push
sub
mov
lods
sbb
mov
jl
lock
pop
repnz
jg
jl
jg
call
or
loopne
sahf
mov
mov
pusha
sbb
jne
xchg
push
dec
sub
mov
add
cmpsb
leave
push
pop
adc
xor
enter
sbb
testl
cvttps2pi
xchg
test
movb
insl
cs
sarl
mov
and
cmpsb
in
lcall
cli
call
sbb
mov
dec
ljmp
push
pop
in
jg
xor
push
mov
sbb
push
sbb
xchg
lcall
repz
aam
xor
cmp
xor
cmp
mov
add
bound
push
gs
scas
add
or
test
add
pop
jp
in
test
pop
ret
pop
lea
xchg
repz
sbb
or
pop
ficompl
adc
sahf
mov
sahf
icebp
ret
sbb
push
fsubp
test
into
es
fildl
mov
inc
jo
and
sbb
lahf
cs
and
out
or
stos
adc
mov
lods
mov
shl
pop
add
loop
aaa
dec
jmp
jno
test
and
sub
mov
pop
imul
cwtl
ret
xor
xor
lahf
xor
data16
xchg
push
ljmp
sub
and
ret
pop
rep
adc
fbld
sub
inc
pusha
dec
and
fsubrs
cmp
adc
mov
adc
shll
inc
out
lcall
fildll
dec
sbbl
xor
pop
dec
arpl
into
or
imul
dec
sbb
lahf
push
in
test
imul
popa
cli
dec
dec
mov
dec
or
sub
sub
je
scas
addr16
fst
pop
xchg
cld
lret
push
in
or
cmpsl
jae
ljmp
out
or
xchg
lods
dec
mov
xorb
popf
inc
jl
stos
mov
movsl
adc
popf
aaa
xchg
push
jnp,pn
lock
sbbb
sub
out
jbe
dec
adc
and
inc
add
addr16
mov
scas
outsl
daa
fidivrs
adc
and
sbb
add
push
cmp
lahf
jb
ret
fildl
aad
xor
adcl
sub
dec
stc
pop
test
push
push
pop
cmp
cwtl
xchg
aaa
inc
cld
popf
pop
xor
js
adc
sub
adc
sbb
xor
xor
mov
sub
inc
mov
pop
add
in
sub
pushf
or
subl
in
dec
dec
pop
add
mov
or
std
push
dec
lea
pop
fwait
das
mov
add
repz
sub
lret
fdivrp
scas
sbb
mov
sub
adc
sub
add
inc
loope
lcall
test
xor
insl
enter
out
add
xor
adc
jmp
xor
sahf
push
stc
sub
ljmp
or
pop
mov
dec
test
insb
mov
sbb
cs
in
mov
call
sbb
xchg
incb
and
sbb
dec
aad
iret
jne
and
int3
or
cli
fwait
lcall
in
sub
xor
sub
nop
pop
adc
sbb
mov
xor
mov
xor
or
loop
xor
stos
repnz
scas
ss
cmpsl
add
inc
loopne
pop
xchg
xor
jecxz
xor
jne
iret
addr16
aam
shlb
and
ljmp
or
mov
adc
dec
inc
dec
cmp
dec
cmp
add
add
icebp
dec
adc
push
pop
mov
pop
pop
push
dec
out
mov
insb
loopne
add
icebp
push
scas
call
adc
ds
popf
movsl
adc
test
das
xor
int
inc
aas
loope
cmp
ljmp
sub
mov
mov
rclb
es
into
cmpsb
and
xlat
sti
xor
mov
scas
adc
pushf
rolb
mov
inc
in
adc
nop
sbb
push
sub
dec
in
lea
jnp
int
rorl
add
in
data16
sub
fmull
or
cmp
xor
add
mov
movsb
xlat
dec
hlt
imul
xchg
lahf
jmp
and
xor
push
repnz
or
adc
pop
inc
mov
xor
cmpsb
mov
add
add
movsl
xor
stos
and
lds
ja
scas
lcall
negb
push
jb
mov
bound
mov
sub
xchg
pop
dec
cwtl
ljmp
xchg
mov
jecxz
cwtl
inc
inc
push
dec
clc
iret
stos
mov
cmp
cld
push
mov
jle
and
scas
clc
push
xor
dec
outsl
repnz
jne
pop
insb
add
sarl
push
push
xchg
popf
repnz
push
xor
stc
cmp
inc
cs
mov
jnp
pop
dec
popa
dec
xor
or
jl
cmp
and
xor
insb
mov
mov
or
roll
jo
mov
jno
ret
dec
jmp
dec
cmpsl
test
push
sub
adc
add
mov
cmp
and
add
dec
popa
dec
sahf
aam
aam
sbb
into
sbb
ret
and
popa
jecxz
dec
push
pop
inc
rcr
mov
loopne
mov
lcall
iret
outsl
fisttpll
mov
cmc
push
orl
int3
and
and
xchg
rolb
mov
cmp
test
js
loopne
sarb
lock
adc
cld
jp
aad
in
or
out
mov
and
in
shlb
add
pop
jmp
xlat
and
in
repnz
out
inc
or
mov
roll
in
xor
mov
out
sbb
mov
sub
sub
jo
mov
push
aam
int
shlb
xor
jae
repz
and
popa
xor
sbb
clc
int
ret
jne
sub
pushf
dec
insl
je
test
mov
push
dec
loope
into
leave
cmp
pop
adc
mov
pop
shrb
inc
loop
and
push
stos
mov
shrb
sub
or
sti
push
mov
out
hlt
ljmp
fldl2t
mov
mov
shl
and
or
cmpsb
xchg
inc
push
scas
push
imul
mov
fs
jle
in
sarl
fbld
push
test
fsubs
nop
pop
jno
in
mov
icebp
and
xor
xchg
inc
add
repz
jl
test
enter
pop
lcall
gs
jno
imul
sbb
mov
sti
bound
xor
fisttps
stos
mov
dec
xchg
js
mov
in
dec
push
mov
imul
or
into
jae,pn
dec
fbld
fwait
icebp
bound
push
imul
enter
cld
cli
cmp
sub
xor
loop
sbb
pop
mov
xchg
jl
mov
sti
inc
jb
xor
cmp
cmp
dec
xchg
jb
testl
jbe
lods
xor
push
adc
scas
mov
add
lds
fyl2xp1
repz
test
xlat
arpl
xchg
or
adc
and
add
lea
cmpsb
mov
sti
mov
aaa
cli
mov
cmp
inc
mov
loopne
out
mov
and
cmp
out
mov
xchg
cmpsb
mov
mov
popa
pop
mov
dec
in
or
sbb
xchg
adc
lahf
push
mov
xchg
in
imull
mov
les
pop
into
gs
ret
in
inc
andl
push
add
mov
or
rcll
cmpsb
add
mov
pop
sub
xchg
data16
dec
pop
lahf
inc
fadds
outsl
pop
jge
pushf
mov
adc
xor
dec
call
mov
xchg
mov
and
jbe
in
fists
mov
rorb
sbb
rcl
jl
out
mov
xchg
fmull
clc
inc
pop
jecxz
jg
push
dec
out
movsb
and
mov
mov
push
sub
and
lock
aas
xor
repnz
xchg
pop
xchg
sub
pushf
leave
sbb
mov
push
jae
mov
daa
push
or
add
popf
into
mov
add
inc
adc
xlat
add
push
mov
sub
pop
fbld
mov
repz
adc
int
dec
notl
mov
push
out
popa
xchg
div
pop
push
pusha
pop
cwtl
jnp
sbb
fcoml
push
lods
into
rolb
repz
aam
and
mov
lcall
shlb
in
dec
rcll
call
int3
dec
sub
cmpsl
je
ljmp
dec
xor
mov
mov
sub
xchg
mov
adc
mov
push
out
in
loopne
push
mov
mov
out
push
je
lret
movsb
es
mov
cltd
mov
sbb
pop
xchg
fistps
fldenv
movsb
cs
mov
int
jb
es
pop
lahf
pop
xor
mov
fstpt
jae
mov
add
lods
push
push
push
sbb
mov
cmc
ror
xchg
outsb
in
jmp
adc
and
cmpb
mov
pmaxub
orl
push
mov
aam
push
sbb
aaa
cmp
mov
xor
xchg
xor
ds
mov
jecxz
mov
pop
mov
sbb
je
mov
out
push
xorl
xchg
xor
pop
push
mov
mov
mov
sti
mov
sbb
sbbb
mov
ljmp
pop
fiaddl
aaa
sbb
stos
pop
sub
gs
cwtl
sbb
test
and
stc
pop
jne
fiadds
movsb
push
and
and
mov
aaa
insl
loopne
in
dec
xor
outsl
dec
rcll
call
or
repz
insl
pop
xchg
leave
lret
cmpsb
lock
les
mov
inc
std
cmp
add
sub
push
mov
in
loope
addr16
xchg
cmpsl
movsl
test
lret
xchg
sbb
lret
ss
xchg
out
adc
pop
xor
sub
loope
xchg
or
pop
jecxz
add
push
mov
in
dec
pop
xchg
popa
lods
jecxz
mov
sbb
and
les
inc
loope
sub
sbb
dec
pusha
mov
iret
int3
xor
popf
xchg
lret
cld
inc
int
repnz
pop
push
push
fdivrl
mov
ficoml
xorb
sti
sub
or
cltd
and
ss
mov
test
lock
imul
test
cwtl
loope
cmc
testl
mov
mov
mov
push
dec
push
insl
in
add
xor
pop
adc
cli
xor
jne
jl
mov
sbb
or
popf
cmc
stos
and
xor
shlb
cmp
fdivrl
jae
push
negb
cli
sbb
ss
push
jnp
std
sub
rcrb
inc
xor
mov
lea
adc
xor
or
lea
int3
add
sub
bound
xchg
xchg
lods
or
out
or
in
in
and
popa
jg
rcrb
pop
stos
cmp
clc
imul
xchg
in
sti
sbb
out
xchg
push
or
inc
andb
pop
mov
or
push
in
and
dec
mov
dec
flds
subl
push
aaa
jecxz
sbb
mov
fimull
testl
sbb
pop
xor
ds
rorb
inc
sub
dec
shrb
and
or
jae
xlat
in
push
rcll
mov
pop
loop
aam
add
mov
mov
jnp
inc
fs
add
xchg
push
aad
mov
fistps
lds
xor
ds
outsb
adc
and
adc
sahf
movsb
movsb
hlt
pop
nop
add
sub
sbb
push
insl
test
jecxz
sub
lea
sub
icebp
out
or
fdivl
out
mov
mov
inc
pop
dec
push
nop
jl
xchg
add
jmp
sbb
pushf
push
push
sbb
loope
pop
test
gs
scas
xor
es
pop
jno
aaa
sbb
xor
mov
repz
xchg
popf
in
jns
adc
sbb
pop
aam
mov
in
loopne
mov
cltd
daa
test
sti
fsubs
shrl
mov
shr
sbb
cmp
and
sub
fisttpl
jmp
cmp
out
xchg
sub
push
mov
mov
and
pop
je
out
cltd
add
mov
aam
fmull
arpl
inc
cmp
stos
cmpb
ficompl
test
es
ss
dec
lcall
aam
dec
inc
int
hlt
xor
popf
push
jb
jb
sbb
jmp
jbe
push
xchg
cld
shrl
jns
adc
sbb
push
cmpsl
adc
mov
add
pusha
fildll
pop
sahf
test
lea
stc
data16
bnd
movsb
sbb
jno
xor
les
mov
and
scas
rcrl
dec
lds
push
inc
data16
mov
xchg
xchg
jmp
cmp
sti
dec
inc
mov
push
sahf
inc
call
sbb
cltd
pop
xor
maxps
cmp
shrl
inc
rcr
adc
mov
xchg
outsb
dec
rcrb
das
js
or
leave
stos
mov
out
stos
pop
scas
jl
dec
roll
xor
dec
sub
subb
mov
mov
add
sahf
std
jg
jg
dec
fldl
faddl
arpl
in
xchg
jae
xchg
idivb
ficompl
xor
or
or
inc
jmp
xor
scas
dec
sbb
xor
mov
dec
sti
sub
cmp
add
mov
ret
movsl
mov
jno
jge
rcrb
outsb
or
mov
push
add
add
pop
mov
adc
sti
jnp
pop
add
push
nop
pop
or
mov
stc
push
ja
sahf
sub
cs
je
xor
adc
dec
popa
lds
jg
lock
aad
jo
xor
adc
ja
pop
dec
mov
cmp
dec
aam
cmp
xlat
jmp
push
jp
xor
ror
cwtl
add
movsl
push
hlt
outsl
movsb
inc
clc
stos
or
and
push
jo
xchg
aad
and
xchg
mov
in
and
loopne
pop
outsl
xor
sarb
sbb
cs
lahf
int
inc
ds
lcall
jns
ficoms
outsl
cwtl
int
lret
mov
xchg
insl
adc
or
jne
addr16
fs
ret
es
aad
or
sbb
pop
dec
ret
jg
mov
mov
fsubs
and
cmpsb
enter
xor
lea
repnz
cmp
lret
or
and
lock
jp
fucomi
cld
jmp
sbb
mov
or
pushf
not
insl
test
pop
and
jle
mov
loop
or
fidivrs
push
mov
adc
popf
mov
aas
pop
sbb
inc
inc
or
arpl
mov
inc
hlt
fdiv
sbb
outsl
or
cli
xchg
push
les
pusha
daa
cmp
das
pushf
push
fidivl
es
pop
and
jle
push
and
cmp
or
cmp
fnstcw
aam
mov
test
push
jle
test
js
xchg
inc
or
out
add
outsb
pop
jge
adc
fistpl
aad
pop
xor
or
adcl
inc
inc
jnp
inc
push
jmp
sbb
iret
pop
sub
test
dec
xor
sbb
push
test
adc
ljmp
sbb
xor
pop
push
inc
mov
cwtl
fildll
xlat
mov
stos
cli
dec
cmp
dec
inc
xor
repz
xor
pop
ret
xor
mov
jnp
in
and
xorb
test
out
push
lods
pop
les
and
xchg
xchg
mov
jb
mov
out
push
jne
lret
movsl
sbb
pop
sahf
shrl
inc
adc
adc
out
mov
jns
rcrl
xor
or
ret
xor
rcrb
bound
enter
adc
in
mov
repz
jae
add
lret
sub
sbbl
inc
shlb
rorl
ss
repnz
push
mov
out
bound
jmp
mov
popl
in
mov
or
or
insb
lods
push
aad
and
lods
call
lods
inc
rolb
xchg
fadds
test
sarl
call
icebp
sbb
push
scas
xchg
cmpsb
fbstp
jl
and
pop
jne
dec
inc
push
push
adc
inc
xor
call
mov
fdivrs
push
mov
adc
xor
movsl
scas
jmp
xor
pop
popa
repnz
dec
add
jno
fildl
sbb
test
xlat
xchg
dec
jmp
arpl
mov
xor
push
adc
mov
dec
sbb
and
sub
mov
adc
out
xor
mov
dec
rcll
or
jle
or
mov
jle
sub
rol
mov
xor
xor
out
xchg
pop
add
add
popa
insl
aas
xchg
gs
inc
aaa
or
stc
cmpsl
fwait
lods
jmp
int
outsb
cli
fadds
inc
mov
nop
stc
nop
mov
pop
mov
cmp
pop
fmull
out
sti
addb
cmp
add
and
hlt
and
sub
xchg
divl
pop
loope
jbe
mov
mov
add
js
in
lock
cmc
lret
push
scas
lock
jl
cwtl
and
outsl
xchg
jp
int3
sbb
ljmp
popa
test
shrb
jge
loope
je
cli
fsubp
mov
sarl
loopne
jmp
in
icebp
test
fistpl
jmp
pop
xorb
fcoms
dec
dec
movsb
xor
sub
ljmp
mov
mov
push
pushf
inc
mov
push
inc
pop
cmpsl
adcl
ss
cmpsb
jno
sbb
insb
movl
cmpl
sarl
ljmp
das
mov
addr16
adc
inc
mov
xlat
or
lods
call
jbe
xchg
or
aas
data16
jae
orb
insl
xlat
inc
ja
inc
outsl
sub
adc
imulb
cmp
add
pop
cld
xor
rolb
jmp
hlt
arpl
push
dec
pushf
pop
mov
jae
dec
stc
dec
sbb
inc
hlt
arpl
xor
cmp
mov
lret
pop
push
inc
pop
ret
sub
int3
into
mov
inc
mov
ja
lcall
es
inc
mov
mov
andl
mov
mov
mov
pop
jne
das
pop
push
mov
mov
adc
or
cmp
aaa
push
xor
dec
pop
shlb
or
cmp
bound
add
sub
gs
loop
sbb
pop
rcll
stos
ss
fists
testb
lods
and
inc
outsl
push
or
aad
fldt
jecxz
sti
ret
pop
push
push
xchg
mov
inc
xor
adc
jl
aam
mov
add
jnp
push
xor
daa
jo
leave
mov
lea
jbe
lret
xchg
pusha
cmp
mov
addr16
fsubr
jle
ds
in
push
inc
add
dec
jbe
push
adc
out
or
das
test
pop
or
add
movsl
jae
adc
jg
pop
push
xor
repz
int
pop
xlat
push
fwait
push
das
mov
out
add
adcb
sub
scas
pcmpeqw
mov
mov
jbe
inc
in
ret
push
arpl
xchg
scas
fstps
adc
cmp
mov
leave
jge
aad
aas
scas
aaa
test
push
dec
lahf
fsts
clc
sti
xchg
adc
and
dec
shrb
jno
inc
cli
mov
pop
xchg
pop
cmpsl
sbb
popf
cmc
mov
push
push
insl
into
sarb
xchg
jne
repz
scas
sub
lock
jmp
popf
jmp
cwtl
daa
mov
test
out
es
in
pop
mov
test
inc
mov
mov
mov
and
in
loope
fldenv
mov
out
xor
dec
adc
add
mov
dec
insb
push
popf
out
push
cltd
ja
movsb
stos
mov
sub
int3
les
shlb
mov
in
int3
adc
push
push
sub
inc
xor
xchg
and
cmpb
mov
pop
push
cmp
adc
jns
popa
adc
test
and
es
push
push
mov
std
fmuls
movsb
cld
imul
inc
or
mov
pop
sahf
xchg
in
shlb
imul
ja
mov
push
pop
xchg
sbb
dec
sub
outsb
sub
cld
ficoms
mov
mov
xor
add
movsl
mov
jl
dec
or
mov
lods
push
jbe
push
aam
push
xor
movsl
inc
adc
dec
enter
sub
jge
lods
jle
mov
xchg
mov
and
and
jne
ja
lcall
push
sub
icebp
les
dec
or
out
scas
fs
scas
mov
push
sub
cmp
push
xchg
lods
and
enter
inc
js
fsubrs
sti
call
and
mov
push
mov
sbb
ljmp
enter
daa
das
dec
test
push
aam
adc
or
mov
mov
pushf
test
cltd
or
outsb
inc
or
insb
das
pop
icebp
push
popf
in
sbb
andb
mov
inc
outsl
cs
push
les
add
mov
mov
scas
pushf
mov
lods
rcrb
mov
stc
lds
ljmp
cmp
jnp
cmp
push
fwait
sbb
js
outsb
jge
rcr
mov
xchg
subl
and
lcall
push
js
sbb
ret
push
inc
movsb
ret
inc
push
bound
xor
mov
btc
cmp
movsl
dec
daa
push
mov
mov
fmuls
or
js
cltd
cmp
adc
push
dec
ss
jmp
loope
lods
and
or
mov
je
cmpsl
jbe
outsb
out
mov
mov
push
xchg
and
dec
out
cmp
push
mov
inc
leave
stc
lret
pop
test
daa
roll
mov
mov
test
cmp
js
add
in
cmp
sbb
mov
sahf
in
mov
arpl
add
sub
movsb
shrl
push
filds
push
negb
adc
lcall
xlat
fildl
icebp
cmpb
rcl
cmp
stos
mov
mov
ret
lea
jne
shll
filds
js
mov
and
cs
add
lock
mov
lods
fcoms
out
loope
imul
add
xchg
pop
cmovb
sbb
or
mov
and
scas
das
jl
jno
ret
aas
sbb
adc
jge
push
mov
add
shl
insl
cmc
sbb
push
ret
mov
in
cmp
loope
or
int
xor
mulb
inc
notb
jmp
out
mov
imul
aaa
mov
adc
push
orb
mov
cmp
or
mov
push
jb
dec
in
lcall
adcb
fwait
mov
andb
leave
jecxz
int
sarb
fwait
lds
fcmovnb
subb
scas
sub
mov
pop
nop
pop
data16
int
jl
mov
jmp
mov
ror
and
cmovle
and
cltd
cmc
cltd
fistl
push
mov
push
lds
inc
push
jae
pop
pop
mov
shrb
ja
xchg
sbb
xchg
ret
push
and
mov
mov
inc
pushf
aaa
fucomip
pop
lea
jl
sahf
nop
mov
dec
inc
scas
popa
xchg
mov
add
jge
loope
rorb
push
dec
std
fisttpll
and
sub
xchg
xchg
outsl
les
add
ret
inc
jmp
adc
xchg
test
dec
dec
ror
add
dec
icebp
mov
outsb
dec
adc
dec
sbbl
mov
mov
js
adc
add
or
sbb
mov
aam
xorb
rclb
xor
add
loope
or
dec
pop
cli
shrl
jl
mov
sub
lret
fmuls
mov
fbld
bound
clc
mov
cltd
xchg
add
xor
fildll
sbb
ss
dec
lock
arpl
push
xchg
dec
mov
jmp
lret
xlat
cmc
mov
dec
shl
rol
push
adc
outsl
in
add
test
xchg
out
clc
enter
shll
outsb
sti
mov
mov
dec
scas
aaa
in
xchg
fcmove
imul
scas
mov
mov
mov
mov
or
lods
adc
insl
out
cmp
mov
xchg
or
es
ret
xchg
push
movsl
imul
fcmovnbe
sub
sbb
pushf
and
push
les
ret
rorl
cmp
jecxz
xor
jnp
pop
aas
push
fstpt
repnz
dec
or
mov
push
mov
adc
movl
fldcw
mov
mov
sub
xor
mov
nop
test
cmp
mov
movsb
in
cmp
mov
mov
cmp
or
adc
sub
sbb
xor
sub
push
call
lods
sub
ds
mov
enter
test
les
iret
push
xchg
sub
es
dec
js,pn
add
cmp
xor
negb
xor
cmpsl
mov
orl
adc
inc
push
adc
inc
insb
pop
pop
inc
mov
loope
outsl
adc
push
inc
cmpsb
imul
xlat
jb
out
imul
xchg
push
mov
push
fsub
jmp
xor
sarb
or
sahf
test
sti
xchg
cld
addl
imul
sbb
pop
mov
sbb
call
lcall
pop
fnsave
mov
or
stos
pop
adc
imul
xlat
ljmp
loopne
lahf
outsb
out
in
xlat
lock
sbb
movsb
inc
mov
rolb
lret
outsb
jle
mov
jmp
movsb
ss
sub
mov
test
stos
mov
mov
fadds
out
push
inc
push
adc
push
mov
mov
out
adc
iret
push
sub
fsts
pop
loope
pop
js
testl
lea
out
test
jecxz
pop
das
and
inc
addl
inc
stos
push
or
rcr
cli
out
adc
pop
cltd
mov
jb
mov
mov
out
sub
inc
fidivs
xor
lahf
xlat
mov
stc
iret
inc
insb
lcall
gs
aad
xor
jb
push
push
push
push
test
fnstsw
jnp
js
push
sub
test
je
movl
sub
inc
mov
lods
mov
adc
pop
hlt
adcl
cwtl
push
enter
cld
aam
hlt
push
aad
das
test
inc
in
stos
out
ret
add
clc
add
and
in
fs
loop
les
push
cld
mov
push
sub
jnp
imul
push
mov
ja
test
addr16
sbb
std
out
and
mov
mov
mov
imul
outsl
sub
in
and
mov
shlb
inc
rclb
mov
lods
fildl
outsl
je
sti
mov
jae
bound
testl
add
pop
std
es
xchg
mov
jl
pop
mov
mov
xor
mov
add
mov
clc
sarl
add
mov
and
out
jne
lds
sbb
iret
jo
fldt
lods
in
cmc
fcompl
jmp
jo
xor
fidivrl
sbb
xchg
pop
subb
sahf
adc
jo
shll
fwait
mov
fst
xchg
loope
xchg
push
pop
xor
mov
mov
repnz
dec
scas
jae
popf
sub
call
out
sbb
scas
in
pop
or
mov
sahf
inc
pop
push
mov
sub
insb
pop
cmpsl
das
enter
dec
cltd
test
inc
daa
or
out
or
mov
movsb
mov
hlt
outsb
out
sbb
aam
lcall
std
push
xor
imul
mov
stc
jb
xor
xchg
lock
sbb
mov
mov
mov
in
cwtl
or
mov
add
repnz
cmp
xor
push
movsb
jecxz
or
aaa
pop
fs
repz
adc
add
mov
inc
mov
mov
mov
xor
fwait
lret
sbb
fwait
jmp
cmc
pop
ja
push
outsl
in
loopne
nop
psadbw
sbb
lea
fcomi
mov
ds
insb
aas
pop
ret
stos
lods
and
test
movsl
mov
push
cmp
add
loope
fists
test
test
and
mov
add
aas
addr16
sarb
xor
sub
cmp
xor
xor
sub
cltd
and
push
and
cmp
xchg
out
mov
mov
shl
std
cmp
lahf
test
mov
xchg
adc
enter
or
test
adc
sar
mov
mov
es
xchg
daa
repnz
and
outsb
subb
xchg
adc
andl
mov
je
aad
pushf
adc
rcll
cwtl
lds
pop
and
clc
ljmp
out
push
ror
sbb
cmpsl
mov
dec
mulb
addb
xor
ljmp
int3
xchg
bound
sub
and
and
in
fdivrs
std
xchg
push
jbe
push
movsl
sbb
dec
int
gs
fcomps
sub
inc
lea
stc
xor
pop
pop
lahf
lahf
sbb
outsl
lret
int
mov
shlb
inc
mov
outsl
icebp
nop
mov
sahf
push
test
sbb
cwtl
xor
pop
loop
dec
push
mov
sbb
add
cmpsb
cs
es
mov
pusha
or
jae
jbe
mov
inc
shlb
shl
xchg
add
out
daa
adc
pop
in
leave
push
mov
in
sbb
adc
cmp
movsb
lret
inc
nop
idivl
cmp
popf
inc
add
jnp
mov
out
scas
mov
outsl
push
xchg
pop
loopne
ja
dec
pop
or
mov
faddl
nop
cmp
pushf
testb
push
or
fisttpll
shr
inc
adc
lret
mov
js
imul
mov
mov
push
jno
mov
gs
pop
push
cmp
cmp
into
fists
aas
add
fadds
movsb
jmp
inc
ds
push
jp
shr
es
ljmp
sahf
dec
gs
flds
fcomps
push
push
sbb
std
sbb
jl
outsl
or
add
negb
sub
xchg
and
mov
cwtl
movsb
and
fnstcw
mov
fsubl
sbb
int
cmc
les
adc
jmp
jnp
cmc
push
inc
or
pushf
gs
push
bndldx
fimuls
cltd
inc
mov
inc
fldcw
xor
cmpb
imull
call
or
aad
xchg
movntq
out
in
pop
cltd
xchg
out
xor
dec
jge
jbe
ja
loope
push
arpl
add
stos
je
test
lock
jbe
loopne
dec
dec
fisubrl
scas
out
jns
test
test
add
mov
push
mov
je
mov
cmp
paddsb
push
and
pop
push
ja
xchg
jecxz
paddsw
pop
lcall
xor
stos
mov
mov
or
and
hlt
or
push
cmpsb
daa
fwait
inc
xchg
dec
inc
es
mov
mov
jecxz,pn
sub
mov
aad
dec
repnz
ficoml
sbb
shll
adc
dec
subb
fnstsw
and
and
inc
in
js
repnz
stc
outsl
daa
jbe
pop
inc
jb
mov
add
mov
xchg
bts
mov
sbb
dec
pop
and
cltd
out
out
shr
stos
scas
arpl
nop
shlb
inc
xlat
mov
lock
pop
push
insb
jnp
or
cmc
add
mov
daa
aad
movsl
sbb
lahf
and
mov
movsb
pop
lock
sbb
push
sbbb
test
jnp
fcoms
mov
std
idivb
aaa
jnp
ficoml
stos
lret
and
xorl
add
mov
push
popa
faddl
ds
arpl
sub
push
loopne
psubusb
add
and
mov
aam
or
or
pop
mov
repz
push
enter
fisttpll
or
ret
arpl
inc
sbbb
aam
dec
mov
jmp
fildll
pop
mov
pop
fistpl
cmc
incb
outsb
add
mul
arpl
cmpsb
ljmp
or
pop
pusha
inc
mov
insb
test
gs
fisubs
addb
inc
in
fs
sub
ss
cmp
cmc
rcl
jns
xlat
push
jle
mov
fdivl
sti
sbb
fisttps
cmp
mov
ss
cmp
leave
popf
popa
fxch
push
lret
cmp
sbbl
int3
inc
mov
push
dec
xchg
and
or
xchg
jb
cltd
dec
test
shlb
lods
aam
stos
cmp
and
hlt
inc
and
jmp
cmpsl
or
cmp
adc
push
push
insl
orb
mov
fldl
inc
xchg
data16
xor
ljmp
pop
dec
jge
xchg
test
mov
pop
sub
mov
sub
call
cmpsl
mov
push
xchg
outsl
xchg
xor
popf
das
pusha
pop
cld
dec
jnp
lods
and
mov
in
jo
outsb
frstpm(287
inc
sbb
scas
outsl
rolb
loope
dec
jle
fsubp
cwtl
pop
xor
mov
mov
push
push
cwtl
fcmovnbe
es
fwait
xlat
dec
mov
add
imul
cmp
cmpsl
fs
jle
shlb
adc
xchg
fldcw
mov
jecxz,pn
inc
sbbb
xchg
fstl
inc
cmc
cmp
icebp
dec
or
cltd
out
cld
jae
push
addr16
in
push
inc
jle
lcall
inc
mov
cmp
fiadds
mov
clc
inc
div
inc
add
push
fwait
sbb
dec
lods
adc
leave
imul
shr
adc
out
push
fwait
lock
sub
jnp
push
dec
pop
jb
cwtl
xchg
xchg
cmpsb
add
xchg
jg
scas
mov
xor
out
sbb
cltd
jle
loopne
cmp
leave
popa
mov
pop
int
mov
adcl
jns
pop
js
shll
adc
loopne
ret
xchg
xor
dec
push
mov
iret
mov
insb
hlt
and
add
inc
or
jnp
dec
dec
jecxz
xorb
sub
fidivl
push
mov
aam
fadds
inc
movsl
push
push
clc
movsb
add
cmp
push
inc
loopne
arpl
jno
cmp
add
cmp
xchg
mov
mov
push
cmpl
mov
sbb
mov
rcrl
test
mov
cmpsl
imul
add
out
nop
mov
imul
push
dec
imul
cli
xchg
xchg
dec
mov
mov
cli
or
push
nop
bound
dec
fcompl
call
pusha
ret
adc
jle
xchg
stos
and
insb
pop
sbb
cmp
cmp
dec
dec
daa
cmp
popa
push
mov
negl
addr16
movsl
or
out
fwait
shll
je
aas
push
xchg
iret
shl
out
je
xor
push
ret
jecxz
sbb
pushf
insb
pcmpeqb
or
sbb
pop
aad
add
dec
loopne
jge
or
push
jo
arpl
mov
mov
and
repz
jmp
cld
and
fsubs
repz
leave
jge
xor
pusha
out
scas
and
jge
lods
nop
mov
out
rorl
repz
out
push
inc
stos
mov
fisttps
movsl
push
dec
fcmovne
dec
push
mov
mov
cmc
imul
in
cmp
in
mov
push
std
imul
and
push
cmp
inc
add
pusha
push
mov
push
std
pop
push
or
sbb
push
inc
and
ret
mov
dec
ds
test
xor
dec
pop
icebp
aam
stos
aam
mov
aas
add
mov
adc
nop
mov
mov
and
push
mov
cwtl
ljmp
or
aam
add
add
das
cmp
sub
sub
dec
rcl
push
xadd
int3
repz
mov
push
imul
mov
mov
in
mov
mov
adc
aam
pop
jbe
dec
cmp
add
cmp
mov
push
push
filds
push
nop
mov
mov
sbb
incl
das
pushf
fimuls
es
cs
and
imul
mov
cmp
xchg
jae
mov
clc
mov
lcall
ljmp
clc
add
or
test
cmp
jns
mov
cmp
adc
cmp
insl
lea
stc
scas
sbbb
mov
dec
inc
add
loop
ret
sub
aam
lds
stos
ficoms
cmp
adc
nop
pushf
or
lods
xor
xchg
cmp
mov
outsb
popl
mov
jo
jl
sub
mov
mov
sarl
test
shrl
xor
out
adc
cmc
jnp
outsb
add
inc
jo
xchg
cs
cmc
ja
pop
insb
cmpl
ret
jp
push
mov
dec
xor
and
xlat
pop
inc
lea
adc
lret
and
mov
jmp
out
pop
mov
lcall
mov
sbb
add
mov
mov
mov
add
dec
and
jle
inc
mov
xchg
inc
xor
lock
bound
sub
xor
xor
mov
mov
fidivrl
ret
stos
dec
mov
outsl
jecxz
xchg
push
gs
lods
repz
or
mov
sub
mov
inc
clc
scas
push
into
xchg
cmp
or
and
hlt
into
mov
outsb
test
jnp
in
in
fdivrl
insl
xor
cmp
inc
mov
lea
shrl
adc
movsb
jge
mov
xor
inc
mov
jge
mov
push
dec
stos
fimull
inc
pusha
rol
add
mov
or
fldcw
inc
push
leave
jecxz
mov
cmp
or
insl
movsb
mov
lcall
iret
cmp
mov
cwtl
inc
sbb
roll
addb
dec
lret
adc
mov
mov
jo
out
ljmp
cld
xor
dec
xchg
imul
pop
gs
jo
in
outsl
inc
sbb
adc
das
hlt
mov
pop
loope
inc
jae
lea
or
daa
pop
or
mov
test
or
pop
iret
inc
sub
adc
or
call
mov
das
test
push
jecxz
out
jno,pt
and
test
test
or
cmp
xchg
adc
dec
inc
pop
std
sbbb
sbb
insl
mov
jge
mov
cmp
jne
pop
movsb
xorl
or
jne
test
cmpl
ljmp
out
test
dec
cmpsl
jecxz
add
lret
int3
lahf
sbb
iret
xor
xchg
clc
mov
adc
mov
mov
es
loopne
jnp
inc
xchg
add
jno
push
xchg
push
out
shlb
movsb
push
in
sbb
fisubrs
mov
pop
xchg
mov
mov
xor
jle
dec
push
add
insb
in
popa
outsl
out
dec
inc
inc
movntq
out
mov
aaa
sub
xor
fs
add
fimuls
mov
jnp
or
mov
or
dec
jno
cld
gs
sbb
ja
fmuls
mov
fimull
xchg
bound
sub
mov
hlt
into
cld
mov
add
pop
lahf
mov
xlat
xchg
movsl
loope
dec
mov
pop
jg
adc
cmp
jge
mov
ss
cli
sbb
xchg
jecxz
lock
std
loope
test
xchg
and
pop
pushf
int3
push
xchg
sbb
je
pop
movsl
dec
push
lcall
sbb
sub
repz
jae
mov
mov
mov
cs
push
adc
fucom
je
xchg
and
adcb
push
sbb
jp
add
xor
leave
push
cmpb
ja
stos
and
mov
test
clc
pusha
popl
int
push
mov
push
aas
and
lock
mov
sarb
mov
addb
or
movsl
subl
outsl
cmpsb
ret
jle
mov
push
test
vpcmpeqb
sub
dec
insb
pop
push
icebp
push
push
flds
jg
js
inc
cmp
mov
mov
outsb
mov
and
pop
loop
sub
mov
hlt
shlb
add
cltd
loopne
xor
inc
jno
jecxz
jmp
shll
adc
push
pop
sbb
fcoml
lret
lcall
and
sub
and
arpl
loopne
cli
pop
mov
mov
fstl
cmp
xor
std
dec
adc
mov
adcl
pop
xor
sbb
inc
lods
pop
jne
popa
push
sub
out
xchg
cmp
pop
fstpt
popf
fistl
pop
xchg
sbb
sbb
mov
pop
dec
push
outsl
dec
cltd
into
jnp
xor
sub
icebp
sub
add
dec
jle
pop
xchg
out
mov
mov
inc
xchg
cwtl
mov
adc
shll
adc
xor
mov
xchg
pusha
push
dec
add
lock
cmc
dec
inc
aad
jge
mov
sbb
loopne
sub
xor
pop
xor
scas
xchg
and
sti
dec
pop
sbb
fmul
mov
cmpsb
mov
sub
adc
and
mov
inc
stos
sub
dec
stos
lods
inc
push
mov
scas
pop
mov
fstpt
lods
xlat
pop
inc
jno
ret
mov
dec
aam
sti
rcl
jae
clc
in
js
mov
int
add
xchg
shrb
xor
stc
cmp
xchg
or
mov
les
mov
pop
sub
pop
aas
test
xor
push
mov
leave
loopne
sbb
sub
pop
lock
cmpsb
insl
fcomps
jb
scas
cmp
or
lcall
dec
lret
outsl
les
cmp
faddl
mov
add
xchg
jge
test
or
and
inc
out
cmp
insl
sti
pop
cmp
pushf
lcall
dec
out
push
rclb
insb
lcall
dec
inc
repz
int3
pop
push
ljmp
insl
iret
rcrb
cmp
xor
cmpsl
pop
shrb
or
mov
inc
outsl
inc
jge
lea
repz
and
jbe
test
sbb
roll
fs
xchg
inc
in
shl
jo
cmpsl
push
push
popf
lods
dec
push
inc
lahf
dec
ret
push
movsb
xchg
cmp
push
or
icebp
mov
divl
outsl
xorl
mov
cmpsb
jb
xlat
sbb
jge
xchg
jne
enter
pushf
mov
xchg
cmc
add
cmpb
fisubl
divl
mov
lcall
mov
in
cmp
fdivl
les
ja
cli
in
test
mov
iret
cmp
mov
xor
and
sub
cmp
xor
cmp
popf
arpl
lahf
push
ret
es
inc
lock
mov
je
aad
jmp
mov
or
ljmp
insb
in
xchg
add
out
fwait
jl
dec
mov
adcb
pop
cltd
adc
out
repz
mov
cmp
pop
adc
mov
mov
xchg
dec
mov
mov
mov
sarb
pop
inc
in
inc
add
test
and
xchg
mov
jl
jle
bound
test
insb
cmp
imul
xchg
sbb
ds
push
fs
je
add
test
push
adc
xcrypt-ofb
cmpsl
push
cmp
mov
add
jp
pop
add
nop
mov
adc
mov
fistpl
test
mov
dec
add
xchg
movsl
push
or
mov
sahf
aas
cmp
dec
dec
lahf
fwait
mov
repz
inc
movb
ss
ds
es
and
jae
or
fstpt
pushf
cli
out
inc
out
ret
ret
cmpsb
cmp
pop
mov
inc
testb
aam
loop
repz
jns
sti
mov
negb
pop
mov
ret
jmp
and
stos
fnstsw
stos
int3
ret
push
lds
mov
leave
fstpl
and
jecxz
or
push
add
dec
int3
sarb
push
xor
cmp
ret
dec
push
iret
sub
mov
scas
add
and
cltd
mov
pop
sub
cmp
pop
test
adc
push
xchg
scas
out
push
jmp
ret
repz
data16
cmp
idivl
pop
pop
decl
xor
imul
sbb
mov
cmpsl
fmul
aam
mov
clc
in
imul
push
aam
mov
pop
stos
mov
pop
pop
lret
pop
clc
pop
cmc
inc
xchg
outsl
xchg
adc
jl
pop
jmp
mov
dec
mov
mov
test
jae
dec
xchg
es
cmpsl
sub
stos
mov
or
mov
aam
dec
cmc
sahf
popf
and
mov
imul
cs
ja
add
add
repnz
inc
in
adc
stos
popa
sub
pop
sbb
push
and
jae
fdivl
xchg
enter
mov
push
push
jns
lods
iret
jg
push
and
pusha
shl
xchg
stc
leave
xchg
sbbb
push
and
cmpsw
pop
cmpsb
xor
sub
icebp
xor
and
adc
push
mov
adc
jo
stos
les
sub
sub
xchg
pushf
add
inc
loop
or
fldl
les
dec
add
xor
sbbl
push
push
push
bound
mov
xchg
xor
shrb
iret
fists
mov
ljmp
andb
jno
ficompl
into
adc
jbe
xor
leave
fmulp
cwtl
jmp
push
pushf
addr16
test
gs
je
stos
shrl
addb
mov
sub
sbb
fadd
mov
push
cltd
pushf
xor
call
pop
adc
bound
pop
add
sub
lret
push
jae
mov
mov
jae
insl
and
sbb
ljmp
lahf
loope
loop
inc
or
jmp
sub
ret
jg
lods
pop
mov
pop
int3
cwtl
hlt
mov
cmp
sub
pop
pop
cltd
out
inc
pop
mov
out
add
xor
cmpb
stos
mov
scas
stos
loopne
fidivrl
notb
lods
fadds
ljmp
shl
cmpsb
mov
xor
jno
mov
in
inc
popa
sub
jns
mov
ret
sbbb
mov
and
leave
push
mov
je
push
push
push
and
push
dec
xchg
lahf
jp
mov
mov
fimuls
sbb
daa
xchg
popa
popa
lds
out
xchg
inc
xchg
addr16
int
add
lods
fcomps
xchg
jle
clc
cmpsl
add
int
gs
ss
incl
sub
mov
adcl
sbbb
cltd
out
pop
pop
imul
add
sbb
push
and
loop
xchg
jecxz
ja
ljmp
imul
mov
and
xchg
je
add
ds
jge
adc
popf
movsl
movsb
test
jl
mov
lret
pop
lret
sarl
jp
fisttps
sar
out
fs
cmpsl
repz
loope
push
cmp
push
mov
adc
popf
stos
mov
jnp
enter
mov
xchg
push
imul
push
inc
xor
test
fs
and
cmpsl
push
mov
loopne
test
push
mov
icebp
fcoml
add
pop
xchg
lahf
push
enter
mov
adc
or
mov
jnp
js
mov
pop
mov
mov
xchg
ret
popf
jo
mov
mov
xchg
pop
xlat
push
ret
and
sahf
mov
mov
test
out
loope
mov
fsubp
xchg
adc
pop
add
add
in
imulb
cs
daa
in
mov
and
lock
arpl
gs
fwait
mov
inc
xchg
dec
and
and
jg
fucomip
pop
push
mov
adc
adc
mov
or
das
inc
mov
push
sti
xor
push
pop
sbb
sbb
sub
popa
adc
call
dec
popf
dec
xor
mov
loop
rclb
sbb
adc
push
pusha
in
jle
or
fs
pushf
subl
in
pop
dec
popa
dec
mov
adc
insb
pop
add
dec
movsb
add
rep
scas
movb
cmpb
sbb
push
xchg
js
xchg
xor
jnp
aad
fdivrs
push
push
test
xlat
mov
add
in
or
jmp
outsb
or
out
inc
cmpsb
cmc
ret
jl
xor
rol
lret
lock
cmp
dec
mov
mov
inc
testb
jle
xchg
mull
hlt
sub
lcall
push
xor
push
movsb
rcll
fwait
jmp
sbb
aam
lods
inc
roll
cmp
sub
adc
jne
lea
add
faddl
dec
pushf
mov
lods
xchg
and
insl
sub
or
mov
scas
je
adc
scas
testl
and
sahf
movsl
outsb
enter
test
jae
inc
sub
xchg
addr16
push
addr16
adc
pushf
mov
push
and
sarl
add
jl
icebp
outsb
adc
rcl
cmp
outsb
pop
sbb
pop
addr16
aam
sbb
inc
dec
jp
jle
cmpsb
lods
pop
mov
icebp
jp
jge
mov
repnz
call
leave
sbb
pop
gs
add
std
inc
dec
mov
mov
clc
dec
dec
xorb
adc
add
fdivl
roll
push
cmp
xchg
imul
sbb
inc
pop
movsb
push
and
cld
push
push
aas
xor
scas
push
adc
add
inc
pop
jle
jg
testb
inc
inc
adc
mov
xchg
cmp
or
inc
fistpl
mov
mov
sbbl
es
push
pop
stos
pop
imul
sbb
rcl
cmp
ja
and
aam
out
inc
test
sub
cmp
lret
pop
pop
cld
addl
je
test
adc
inc
lret
push
mov
xchg
fprem
pop
ret
push
scas
dec
inc
mov
stos
enter
pop
arpl
add
scas
adc
imul
in
mov
mov
cmpsb
mov
pop
js
mov
jnp
ja
xor
sbb
add
inc
and
neg
dec
jb
xor
hlt
repz
pushf
hlt
inc
imul
xchg
adc
ficomps
pop
test
test
xor
push
sub
pop
lds
xor
sbb
cmpsl
mov
pop
jmp
xchg
out
sbb
call
inc
and
lds
xchg
lcall
inc
dec
aad
das
insb
sbb
pop
shlb
ret
jbe
adc
xchg
mov
xchg
aaa
outsb
adcl
fsubrl
xor
xchg
lahf
ja
inc
jo
aam
pop
setg
call
jle
sub
pop
popf
mov
dec
cmp
out
sub
adc
pop
js
mov
cld
pop
ret
cli
out
mov
mov
inc
out
lods
push
dec
in
dec
pop
xor
in
mov
insl
leave
sbb
mov
inc
push
mov
xchg
bound
fsub
mov
push
or
into
dec
fsts
and
shlb
xorl
adc
dec
xchg
fwait
or
add
mov
mov
popf
and
jns
out
jns
jp
loopne
lcall
pop
push
int
pusha
rorl
jo
dec
pop
xorl
xchg
pusha
jg
iret
jne
mov
cs
leave
lahf
or
pop
test
sbb
cmp
pop
sub
lds
out
in
ret
stos
imulb
jnp
dec
mov
stc
js
movsb
xlat
sbb
das
int
sahf
pusha
stos
ret
iret
mov
sbb
iret
cmc
mov
ficoms
jle
mov
int
push
jmp
and
mov
movsl
add
test
shr
mov
mov
adc
movsb
imul
ret
xchg
in
movsl
and
sub
cli
fwait
lret
sbb
shl
pop
push
and
fidivrs
btr
mov
inc
pop
arpl
loope
jge
scas
lea
pop
subb
in
push
fnsave
aad
fdivs
fistl
pusha
cmp
mov
cmpsl
push
popa
dec
mov
sbb
cltd
bound
test
mov
pushf
dec
lods
aad
pop
lret
mov
push
jl
mov
cld
mov
cld
mov
cmp
jg
dec
fwait
sub
add
data16
and
mov
add
dec
shll
cmpsb
call
lea
fbld
sbb
das
out
cmp
cli
inc
jns
sub
lahf
lds
stos
int3
mov
int
stos
sahf
bound
sbbl
sub
mov
fdivl
shll
adc
jmp
lcall
scas
or
lds
test
test
xor
ficomps
sbb
and
push
sub
push
lds
sub
sahf
in
mov
push
bound
arpl
rcrl
sahf
btc
stos
pop
sub
push
test
fildll
dec
mov
or
fstps
out
push
dec
cwtl
mov
and
imul
or
gs
add
xchg
lds
stc
push
xchg
cltd
mov
inc
lock
cmpsb
popf
mov
mov
or
add
adc
lret
jmp
pop
dec
xor
icebp
repnz
ss
fldl2e
fndisi(8087
inc
cli
out
sub
movsb
out
add
or
lea
mov
shll
add
fimull
lret
xchg
add
jmp
xor
js,pt
adc
shlb
hlt
and
inc
sub
sub
dec
sub
adc
sarb
ss
xchg
sub
aad
mov
shufps
data16
lock
lock
imul
inc
cmp
xchg
cmpsb
das
push
in
cmp
jp
lcall
in
mov
iret
jb
jbe
jge
iret
lds
aad
pop
mov
movsb
ret
pop
xchg
mov
in
jp
and
aaa
dec
or
movsb
into
dec
scas
insb
push
cli
or
mov
ljmp
icebp
push
mov
cld
pop
mov
adc
mov
jg
cmp
lods
bound
or
xor
jle
dec
mov
push
loope
and
out
mov
lods
inc
repnz
mov
out
add
sbb
gs
outsb
dec
cmp
aam
repnz
leave
jge
cld
push
adc
fbstp
sub
xchg
aam
sbb
sarb
inc
mov
mov
pop
jae
sub
pop
cld
adc
imul
fs
outsl
gs
mov
xchg
cmc
popa
mov
ljmp
jo
adc
aam
jo
jp,pt
mov
insl
cmpsl
sbb
negl
roll
cs
scas
mov
sbb
jle
lcall
scas
or
fstl
sar
movsl
scas
mov
mov
xchg
inc
insl
call
mov
imul
jno
scas
incl
xchg
push
push
insb
or
or
adc
xor
mov
in
imul
outsb
cmp
inc
cmpsl
add
cmpsb
mov
and
ret
scas
or
enter
loopne
dec
sbb
arpl
or
repnz
and
inc
push
jle
jmp
fdivl
subb
jmp
punpckldq
daa
or
inc
mov
xchg
lock
out
mov
sbb
xchg
scas
cmp
mov
leave
testl
dec
lods
outsb
mov
repnz
shrl
adc
pop
sub
xchg
lods
jns
or
jp
fs
sbb
in
xchg
fiaddl
shll
in
test
jno
mov
lea
ret
orl
outsl
shl
mov
sbb
shl
in
cld
cwtl
test
xor
cmp
push
dec
in
daa
cmp
stos
inc
pop
jge
inc
adc
adc
insl
sub
cmpsb
mov
pop
loop
aaa
sbb
and
xor
inc
cmp
loop
sbbb
clc
aam
and
fldl
sub
add
xchg
lea
pusha
xor
mov
and
mov
and
loop
dec
inc
jmp
and
aaa
popa
sar
test
xor
lret
std
outsl
add
sbb
shlb
scas
nop
adc
and
cmpsl
push
and
out
mov
jle
loop
js
je
adc
adc
sti
icebp
pop
cmp
mov
test
test
mov
push
lods
pop
sti
stc
movsb
lret
push
ret
xor
bound
add
scas
pop
fisubl
add
and
sub
jb
ja
mov
jecxz
mov
xlat
jne
imul
or
add
pop
outsl
movsl
xor
mov
sbb
out
insl
xchg
mov
adc
mov
lea
xor
into
frstor
mov
cmpb
add
dec
jo
das
adc
jmp
int
adc
dec
inc
fnstcw
push
loopne
mov
call
addr16
sarb
ja
outsl
and
jecxz
lea
and
push
loop
sbb
in
ljmp
add
xor
push
sbb
cmp
jb
inc
mov
pusha
sub
push
rorb
aad
rcll
popa
in
and
rcll
cmpsl
test
stos
jbe
movsb
ficoms
fisttps
cmp
in
inc
js
mov
lds
mov
jmp
cmp
jge
clc
mov
std
or
sbb
mov
sar
jmp
and
stos
pop
cwtl
sub
cld
add
mov
dec
mov
movsl
pushf
xor
fwait
push
pop
mov
popa
aam
adc
out
xor
cmp
scas
sbb
lea
shlb
fidivrs
inc
inc
clc
sub
pusha
mov
fisubl
pop
addb
stos
inc
inc
mov
jns
push
or
and
mov
pop
cmp
mov
xchg
adc
sbb
sub
testb
rcrb
pop
lret
cld
scas
cli
addr16
mov
jp
cmp
movsl
iret
or
mov
lock
and
outsl
insl
add
push
enter
loope
icebp
jbe
call
ljmp
in
mov
mov
daa
pop
sub
test
mov
mov
sub
lods
sti
rorl
loop
inc
mov
rep
dec
shr
xchg
jb
ret
dec
mov
xchg
xor
loopne
stos
push
mov
inc
xor
mov
out
inc
sub
xor
mov
dec
out
inc
xor
cmp
adc
xchg
mov
cmp
xchg
nop
xchg
xor
mov
and
sbb
mov
jnp
cmpsb
sub
sub
adc
adc
push
movsb
sbb
cli
sar
jnp
pop
xor
in
loopne
cltd
out
xor
and
and
out
loop
rcl
ret
push
cs
rcl
or
push
sbb
xor
pushf
xchg
mov
out
aaa
xchg
push
ficoms
lahf
mov
mov
mov
ds
test
sub
sbb
icebp
jmp
adc
inc
aas
sub
mov
imul
sbb
or
or
mov
xchg
push
xorl
xchg
dec
test
push
inc
in
mov
pop
jmp
int3
adc
jp
out
leave
xchg
in
icebp
mov
sbb
push
loop
xchg
popa
push
dec
xlat
jbe
cmpsb
cmpsl
movsl
jg
rolb
push
repz
stos
sub
fdiv
insl
or
int3
test
jne
mov
add
sahf
jecxz
repnz
dec
lock
pop
pushf
jns
fcoml
adc
insl
and
sti
mov
mov
inc
push
pop
lret
movsb
dec
arpl
rcr
jl
shlb
aam
and
dec
add
insl
ffree
addr16
mov
adc
xchg
ljmp
mov
stos
add
lret
sbb
lock
mov
jg
sbb
or
sub
sbb
psubd
push
pop
mov
rolb
xchg
pop
mov
out
and
ja
ljmp
add
push
cmp
or
xor
imul
add
sbb
mov
mov
jg
dec
sarl
pop
cs
cmc
adc
cmpsl
int
lds
jns
ss
add
nop
rolb
outsl
insl
lods
xor
add
into
xlat
dec
jl
mov
pop
fsubs
fbld
out
cmp
and
dec
pop
bswap
lahf
out
imul
dec
inc
push
rcrb
das
jg
ja
lcall
nop
inc
gs
add
fsubl
sbb
int
data16
push
mov
push
repz
mov
xor
xor
rorb
adc
popf
adc
lods
jle
sbb
jne
enter
addl
inc
cmpsb
jge
cld
pop
cmp
jbe
jmp
call
xchg
test
mov
cs
push
jg
mov
xchg
dec
add
pop
ljmp
test
jae
inc
ret
jae
adc
aas
orl
lahf
push
xlat
dec
mov
mov
frstor
jno
fldenv
jne
lcall
ja
lcall
divl
popf
or
pop
testl
std
jecxz
and
inc
imul
mov
jp
xor
call
cmc
pop
add
jle
aam
aad
shrb
test
push
push
out
or
pushf
mov
popa
pop
ljmp
add
push
into
sahf
adcb
mov
popf
pop
jb
cmc
xor
das
adc
push
orb
sarl
mov
loope
or
xor
inc
jo
jnp
inc
cmpl
fstpl
jle
xlat
push
adc
gs
lods
dec
sti
ljmp
add
cmp
test
mov
add
mov
mov
dec
mov
mov
mov
rol
mov
orb
jnp
push
dec
dec
and
stos
jo
push
lcall
xchg
xor
dec
dec
loope
adc
shr
xchg
cmp
lods
sub
push
cld
cld
pop
mov
push
int
pop
lds
add
sub
sub
addb
pop
jne
test
stos
xchg
cltd
push
xor
inc
frstor
jbe
jmp
pop
push
push
imul
add
add
pop
jns
ljmp
xchg
icebp
imul
push
jp
adc
inc
jle
dec
cltd
leave
mull
test
mov
das
loopne
out
fistl
adc
jp
xlat
sbb
jge
aaa
lret
into
loopne
mov
sbb
aad
jnp
nop
inc
inc
loopne
inc
loop
inc
jnp
push
scas
leave
sbb
add
xor
in
pop
roll
loope
shll
aas
int
xchg
mov
lea
test
clc
das
hlt
push
test
pop
notb
subb
std
dec
arpl
rcll
and
ss
pop
jecxz
ret
addr16
test
or
xchg
mov
xchg
xchg
adc
xchg
jle
mov
mov
test
xchg
inc
cmp
or
mov
es
imul
test
mov
lahf
jl
jmp
gs
adc
pop
push
imul
or
repnz
fisubrl
mov
lsl
mov
add
out
mov
es
cmpsb
std
jge
jp
dec
popf
leave
fstpt
inc
xchg
or
xor
xchg
cmp
add
outsl
dec
rorb
mov
shl
push
test
pop
or
cltd
pop
outsb
mov
mov
mov
lcall
subb
mov
lahf
je
mov
inc
mov
push
pop
mov
jb
paddd
mov
pop
movsl
scas
aam
inc
cmp
xchg
or
pop
xchg
pop
cmc
movsb
cmc
lret
hlt
jge
les
lret
xor
loopne
aas
xchg
mov
js
mov
mov
nop
adc
mov
bound
push
rorl
jg
call
clc
sub
and
scas
mov
fdivrs
or
inc
add
fistpll
add
mulb
aam
stc
adc
sub
adc
adc
fs
scas
xor
jp
cmc
loope
sbb
fsts
or
add
sbb
aad
scas
push
mov
leave
inc
cmp
sub
ja
les
pop
cmp
rorl
xchg
and
flds
je
mov
ss
in
popf
xor
add
insb
jae
jp
int
int3
lret
inc
outsl
rcrl
cmpsb
stc
xor
std
or
pop
inc
ret
cmpsl
or
add
fs
fsubrl
sbb
imull
mov
sbb
xchg
test
cmc
jb
std
lcall
rcr
sahf
fildl
sbb
test
mov
and
mov
je
fldt
sbb
gs
shll
add
jnp
icebp
je
jmp
subb
ss
sarb
xchg
mov
cmpb
dec
sub
jmp
js
cmp
insb
jle
jnp
test
dec
dec
add
insb
ds
fucom
clc
sbb
jb
fdivs
pop
das
pop
inc
push
pop
add
aas
mov
adc
mov
lods
push
inc
outsl
icebp
ficoml
mov
les
fsubp
outsb
fcomps
cli
popf
inc
scas
iret
or
push
xchg
jbe
mov
mov
pop
mov
jecxz
aam
addr16
cmp
inc
scas
sub
test
sbb
pushf
mov
into
fsts
xchg
xor
pushf
gs
pop
leave
mov
mulb
inc
sbb
add
insb
xor
push
stc
ja
inc
mov
xchg
cmpsl
hlt
iret
shl
mov
pop
loopne
mov
inc
push
jno
mov
insl
jg
mov
fidivs
cmp
xchg
lods
clc
decb
xor
inc
shlb
add
xor
push
dec
jp
jae
dec
lcall
ret
mov
addr16
xchg
gs
pop
xor
cmp
adc
lcall
ret
or
xor
mov
pop
xor
pop
movsb
jge
aaa
push
xchg
rcr
inc
das
add
test
dec
pop
and
xor
lds
daa
ljmp
fmul
roll
add
push
stc
mov
cmp
pop
pop
into
xorb
flds
jnp
test
data16
lds
add
movsl
sub
sub
lret
xchg
mov
xor
add
jno
ret
out
cmp
outsl
es
pop
jnp
pop
popf
sbb
mov
in
mov
loope
dec
dec
sti
lods
movsb
dec
sbb
popf
out
mov
adc
js
add
dec
imul
cbtw
mov
jnp
mov
ja
pop
mov
adcl
ret
mov
sbb
mov
shll
rcrl
jns
fs
cmc
push
lret
pop
jb
in
mov
xlat
nop
mov
not
push
push
popf
fdivrl
xorl
add
mov
jmp
or
mov
popf
rolb
pop
xchg
sub
lcall
repnz
or
clc
jae
outsb
lcall
sbb
stos
leave
popa
dec
sub
sbb
pop
scas
or
ljmp
repnz
and
adc
mov
xor
or
inc
test
ljmp
inc
jecxz
inc
inc
add
insl
push
out
in
lahf
ja
bound
rorb
call
stos
mov
adc
enter
jp
outsl
jo
test
movsl
lret
pop
sahf
xchg
insl
dec
jge
add
sahf
test
lea
xor
es
cmp
cmpsb
mov
dec
movsl
cli
test
int
add
outsb
out
bound
and
shl
out
jno
aas
sub
inc
sbb
pop
or
dec
sbb
mov
les
mov
loop
stos
mov
xchg
push
mov
les
xor
sbb
enter
push
xchg
shlb
cmpsl
xor
fcos
cmp
or
daa
jbe
cmc
movsb
mov
out
inc
bnd
idivb
xchg
pop
in
push
inc
xlat
leave
pop
inc
xchg
hlt
add
dec
sub
cmp
ret
adc
rcll
mov
cmp
and
add
and
and
pop
mov
ret
xchg
xor
leave
mov
aad
cmpsb
and
repnz
clc
inc
adc
aaa
xchg
rorl
or
adc
push
fisubrs
mov
dec
push
xchg
cwtl
dec
xor
iret
sbb
sub
gs
adc
cmp
or
xchg
push
mov
out
add
cmp
push
ljmp
jecxz
int3
stc
sub
cmpsl
out
push
jmp
add
jle
dec
add
jp
xchg
xchg
pop
add
shll
cmpsl
cmp
jl
cmp
sti
test
inc
adc
icebp
and
test
ss
cs
or
dec
dec
mov
repz
dec
mov
fs
pop
mov
cltd
sub
daa
adc
test
dec
fsubl
cltd
push
stc
leave
fstl
pop
test
xor
jo
out
cmp
lock
sub
in
in
iret
xchg
enter
jle
sub
sub
push
pop
inc
or
pop
sub
and
movsl
lcall
lds
sub
pusha
sbb
sbb
out
mov
repnz
xlat
mov
mov
addr16
in
rcll
and
je
inc
icebp
and
adcl
mov
sub
out
xchg
cmp
js
xchg
add
xchg
add
push
lds
sub
movsl
xlat
sub
sbb
movsl
xor
loopne
sbb
jmp
sub
in
push
int3
push
inc
or
and
les
push
fdivrp
jmp
mov
sub
call
push
mov
or
pop
mov
jp
fidivl
in
mov
lds
xor
mov
or
push
repnz
pop
dec
and
stos
and
jnp
fwait
repnz
out
in
push
adc
cmp
pop
mov
inc
repnz
sbb
dec
pop
ja
cltd
in
loopne
fs
pop
mov
jae
rcl
insl
imul
fbstp
cmpsb
mov
je
inc
out
push
movsb
dec
adc
xchg
shlb
and
or
das
sub
mov
pop
hlt
ljmp
xchg
bound
mov
mov
add
adc
jns
iret
add
iret
xchg
push
pop
or
pushf
mov
mov
adc
es
sahf
or
sbb
ficoms
cmc
repz
sub
xchg
sbb
mov
and
sub
xchg
jmp
add
std
cs
outsl
in
bound
je
imul
bound
xchg
sbb
or
in
cmp
fcomi
and
mov
inc
jbe
or
call
pop
cmc
imul
mov
or
mov
push
addr16
mov
out
into
ja
or
decb
and
xchg
call
xor
push
in
pop
cli
mov
cmp
int
inc
push
sub
mov
pop
adc
pushf
lahf
jb
pop
pop
mov
mov
adc
clc
in
adc
cmp
pop
cs
jge
jp
out
outsb
or
bound
mov
dec
rcrb
lcall
add
rcll
sti
daa
mov
js
mov
jne
bound
mov
xchg
mov
sahf
repnz
mov
dec
dec
or
add
jbe
sbb
sub
pop
aaa
xlat
loope
cmp
negl
mov
mov
push
call
jb
adc
or
test
outsb
in
lods
sub
add
add
pop
mov
call
adcb
lcall
mov
jnp
clc
pop
sbb
xchg
add
in
cli
scas
pop
jp
xor
mov
sbbb
popf
jg
out
testb
xlat
leave
fildll
imul
shl
dec
xchg
sbb
es
loopne
add
add
jmp
xchg
rorl
pushf
cmp
hlt
loop
or
cltd
lret
mov
sub
sbb
ret
int
loopne
mov
cmp
cld
xor
popa
pop
cmp
mov
pusha
popa
rorb
adc
pusha
out
lret
fldt
push
add
mov
xor
mov
or
scas
fidivrl
xchg
js
shrb
xchg
push
imul
pushl
push
jecxz
popf
insb
leave
and
inc
lret
mov
out
shll
inc
pop
mov
jne
lret
outsb
or
clc
movsb
pushf
mov
sub
les
lds
popa
adc
lcall
shlb
lock
pop
outsb
clc
push
cmc
lds
push
daa
mov
and
movsb
jp
mov
lock
inc
arpl
lcall
test
jae
es
out
les
cmp
hlt
dec
xorb
xorl
push
push
data16
mov
scas
cmp
adc
das
outsl
cmp
in
xchg
xor
mov
add
int3
mov
aam
fs
sti
outsl
mov
iret
in
or
daa
xchg
cltd
daa
xor
sbb
movsb
mov
mov
cs
insb
xchg
inc
int
pushf
push
sbb
xor
dec
sub
sbb
in
outsb
xchg
test
jp
pop
xchg
lods
movsb
sbb
fists
sub
cmp
mov
cmp
movsl
xor
mov
cmp
pop
movsl
mov
xor
nop
lock
int3
je
add
sbb
or
lahf
cmp
cmp
pop
das
sbb
xor
int
cmpsl
lcall
lods
lcall
pop
ret
cmp
and
movsb
pop
cltd
scas
push
test
sbb
jo
loope
sbb
sbb
lea
cmpsb
fs
pop
fnstcw
movsl
inc
push
cmp
ret
enter
mov
je
mov
cmp
shlb
in
insl
lds
lret
outsl
mov
arpl
cli
mov
cmp
inc
mov
jecxz
inc
inc
sbb
test
cwtl
mov
fcoms
test
insb
andb
fdiv
dec
and
add
cwtl
inc
push
adc
dec
push
dec
or
gs
add
into
jb
dec
lea
dec
inc
addb
sbb
outsl
mov
lret
lcall
pusha
adc
or
stos
xor
sbb
inc
mov
fstpt
cmp
cmpsb
sbb
scas
xchg
lret
js
xor
mov
push
pop
aaa
push
in
and
divl
add
pusha
mov
aaa
out
int3
aam
sbb
mov
mov
inc
pop
subb
fdivs
jne
outsl
and
and
mov
stos
adc
popa
xor
aaa
push
mov
adc
insl
jg
sub
mov
push
add
push
and
jecxz
inc
pop
or
push
daa
and
iret
dec
pop
sbbl
mov
dec
scas
aam
sub
fiadds
sbb
ja
mov
fistpl
stos
out
inc
cli
fsubl
mov
sub
push
ss
adc
scas
out
and
mov
sub
pop
mov
lret
aas
sub
jg
cmp
xchg
test
cmp
xchg
jg
mov
add
lret
aaa
xchg
or
inc
mov
cmp
sub
mov
sbb
inc
xor
sahf
aam
shll
pop
mov
das
and
enter
cmp
push
cld
int
cmc
sbb
sub
fcoms
mov
mov
loop
mov
imul
mov
lods
int
mov
mov
push
adc
jp
int
cwtl
jle
es
ljmp
fdivrs
push
ficoml
stos
cmpl
mov
ja
mov
loopne
movsl
pop
xor
in
stos
cli
loopne
rol
lret
push
mov
lock
xchg
mov
push
das
pop
cmpsl
pop
arpl
mov
add
or
fwait
mov
pop
fwait
lret
jno
adc
in
and
out
fwait
inc
cmp
and
leave
xchg
fists
and
cmpsb
jl
xchg
cli
stc
mov
sbb
insb
mov
push
test
mov
mov
jmp
mov
orl
sbb
cmp
mov
jne
jns
sub
mov
xor
jno
sub
data16
es
sub
mov
add
aam
jns
or
ljmp
adc
xor
ds
movsl
fneni(8087
js
test
push
in
mov
ljmp
or
jo
orl
call
sub
cmpsb
push
insb
adcl
lods
xchg
aaa
pop
fidivs
out
jecxz
call
cmpsb
std
or
jno
mull
sub
in
mov
sub
nop
jne
outsl
loop
xlat
ja
inc
popa
jno
movsl
add
jno
jg
aad
add
arpl
cmp
dec
add
pop
sub
cmpsb
pop
push
sti
xchg
jae
dec
or
or
ljmp
and
add
aaa
sbb
fcmove
push
lcall
lea
mov
imul
test
pop
dec
fcomps
jo
pop
jle
xchg
pop
xchg
fsts
aad
loope
push
into
fcomi
pop
sti
inc
lahf
pop
fwait
cltd
adc
cmp
es
or
mov
xor
call
xchg
pop
subl
mov
scas
adc
add
sbb
test
add
call
movsb
cmc
out
jecxz
fbstp
insl
push
push
out
xchg
into
add
push
mov
pop
ffreep
loopne
cmpsl
jae
addr16
enter
jnp
push
loope
hlt
sub
xchg
xor
arpl
jbe
nop
push
sahf
int3
movsb
jno
cmp
xchg
pop
ss
sarl
push
dec
insl
ret
pop
sar
push
sti
jns
xor
mov
inc
cmp
xchg
decl
push
jnp
dec
cmp
cld
sub
pop
insb
jb
mov
pop
push
push
out
sub
mov
in
mov
xchg
fwait
gs
jne
scas
scas
movsb
xor
clc
ret
add
data16
pop
pop
mov
lret
andl
imul
dec
nop
mov
add
jle
jg
or
sar
cwtl
fmulp
and
clc
dec
inc
jb
mov
adc
outsb
js
imul
fwait
jp
mov
jae
stc
jmp
adc
mov
popf
xchg
lret
orl
dec
mov
xor
xor
jbe
mov
sbb
mov
push
inc
mov
and
movsl
sbb
inc
mov
and
inc
popa
dec
shr
inc
rolb
jnp
push
sub
int
cmp
dec
sub
add
mov
sub
xchg
push
mov
enter
mov
icebp
loop
mov
sub
out
loop
mov
add
mov
mov
adc
das
xchg
add
cmp
adc
adc
xchg
xor
insl
lock
aad
lea
sbb
in
lret
mov
sbb
push
jne
cmp
inc
int3
clc
mov
es
fistl
or
cmp
inc
repz
scas
inc
pusha
gs
test
fs
mov
rcl
sbb
jecxz
in
sub
dec
stos
mov
in
xor
xlat
push
aas
out
push
add
gs
xor
or
xchg
ljmp
xchg
and
xchg
hlt
bound
sub
popa
mov
sub
std
insb
mov
pop
push
mov
out
aad
mov
add
cmpsl
outsb
in
mov
movsb
jg
rorb
pop
int
xchg
jno
in
push
cmp
add
pop
sbb
dec
nop
pop
mov
pop
add
int
movsb
inc
lods
lcall
xchg
jbe
cld
pop
aaa
mov
mov
aam
adc
xchg
pushf
imull
cltd
xor
loop
dec
leave
pop
repz
mov
aad
sub
sbb
enter
push
sbb
out
cmp
mov
test
mov
and
adc
or
jmp
imul
xor
les
pop
sub
add
rclb
mov
das
or
gs
jle
lcall
sub
cli
pop
push
shlb
jno
sub
inc
jnp
xor
and
cmc
mov
xor
mov
test
bound
int3
fcmovne
fs
fcmovne
stos
cmpsb
jmp
dec
adcb
adc
cmpsl
and
xor
out
cmp
mov
ficomps
adc
rcl
loope
jnp
jne
stc
rcrl
fs
xor
std
fsub
cmc
roll
mov
das
in
test
mov
add
arpl
dec
sub
jb
imul
sbbl
stc
jp
pop
or
pop
icebp
and
fwait
into
jnp
lahf
mov
out
addb
dec
aam
int3
sti
vmaxsd
dec
push
and
and
pop
pop
ja
imul
inc
fisttps
add
xchg
sbb
repnz
daa
sbb
repnz
call
xor
enter
filds
cwtl
mov
ss
xor
mov
scas
sahf
jge
mov
jge
ret
xor
daa
out
pop
fcoms
pop
mov
fcompl
inc
mov
jnp
dec
arpl
shl
ret
xchg
call
lret
ja
das
sahf
loopne
imul
push
aad
cmc
and
setp
jb
imul
lods
out
in
or
mov
iret
mov
test
int3
mov
dec
outsl
xchg
pop
pop
jns
es
fdivs
mov
jp
mov
jns
mov
sbb
mov
xor
in
daa
mov
jecxz
push
lods
cli
cltd
dec
loop
xor
xchg
pop
sub
pop
es
inc
xchg
jle
dec
push
adc
xchg
bound
cmp
sbb
xor
out
dec
mov
pop
jle
jae
mov
mov
stos
testl
movsb
arpl
fistpl
negb
and
mov
inc
int3
pushf
xlat
fwait
ja
call
into
mov
rorb
popa
loope
stos
mov
mov
stos
int3
fwait
pop
cli
in
in
push
outsl
incl
jp
mov
test
dec
fcomps
mov
das
jp
adcl
dec
sbb
into
in
sbb
pop
shll
ret
insb
jle
jae
inc
fidivl
shrb
lret
ror
cs
stos
push
je
mov
test
lret
pop
loop
call
mov
push
push
or
sub
lahf
pusha
push
xchg
pop
adc
sub
xchg
lods
xor
hlt
aaa
mov
xlat
push
lds
jmp
xor
jle
jne
mov
xor
pop
dec
xor
jb
cmp
push
push
jne
xchg
cmp
pop
clc
ss
inc
adcl
xor
imul
sub
sub
aad
mov
ss
push
daa
sbb
xchg
data16
push
repnz
push
sbb
fnsetpm(287
insl
fs
icebp
testl
mov
mov
dec
mov
jl
push
pop
out
mov
jb
jae
repz
aaa
fwait
adc
sbb
pop
mul
cmp
xchg
out
aad
push
xchg
das
notl
xchg
mov
arpl
test
cs
mov
and
dec
push
insb
movaps
out
sbb
mov
dec
mov
inc
push
sarb
into
aaa
and
daa
xchg
out
xor
sub
andl
repz
xor
fidivs
pop
mov
lahf
repnz
push
jnp
or
dec
in
push
cmpsl
aam
rcll
mov
adc
insl
mov
sub
cmp
xor
loope
or
int
push
rcl
inc
js
lds
push
adc
out
jmp
sahf
mov
adc
sahf
or
out
jmp
jmp
add
jmp
hlt
inc
popf
enter
jmp
mov
mov
jg
cltd
es
pop
out
loope
pop
dec
push
lods
adcb
mov
popf
sub
jbe
mov
push
cld
stos
arpl
lcall
cwtl
test
cld
mov
out
daa
adc
rorb
mov
mov
add
ret
sub
jb
mov
pop
sub
push
or
fldt
cmc
jae
fsubrl
es
mov
jno
js
movsl
mov
cmp
shrb
rcrb
and
xor
loop
enter
mov
movsb
insb
shlb
pop
stc
fisubs
dec
fisubrs
mov
in
out
sub
inc
adcl
push
popw
sahf
cmp
mov
xor
arpl
pusha
sub
add
pop
mov
dec
mov
inc
jecxz
stos
gs
add
popa
int
inc
pop
sbb
addb
or
mov
mov
jge
pop
push
outsb
mov
dec
and
loopne
cmpl
call
scas
test
inc
idivb
out
and
push
add
mov
mov
pop
outsb
data16
xchg
dec
fcompl
xor
rep
inc
dec
sbb
sbb
mov
sub
inc
mov
mov
mov
cmp
push
js
push
outsb
in
sbb
in
dec
repnz
arpl
mov
push
lret
or
outsb
xor
xor
mov
mov
push
pop
and
xlat
xchg
jae
jge
inc
pop
sbb
mov
mov
fisttps
orl
xchg
outsl
addr16
cltd
repnz
mov
xchg
cmc
xchg
pushw
sub
inc
cltd
jbe
out
arpl
mov
jae
dec
jne
ljmp
push
fcomp
jnp
add
dec
push
jl
add
adc
aas
pop
add
movl
pop
xchg
out
cmpsl
fstpt
mov
mov
mov
dec
in
nop
add
pop
mov
loopne
outsb
mov
sub
jne
dec
je
lock
jmp
lods
jp
stc
mov
or
sbb
or
add
repz
pusha
push
cltd
cmp
out
inc
pop
sub
cmpsb
and
push
mov
add
xchg
xor
dec
jo
in
mov
aaa
jb
inc
cmp
sbb
mov
xchg
xchg
sbb
out
insb
add
loop
aas
mov
and
sbb
cmc
jbe
dec
fwait
cs
sahf
adc
subb
and
or
pop
outsb
cmpsl
test
pop
cmp
sub
inc
popf
xchg
rcrb
les
ss
mov
cmp
jecxz
std
cmp
mov
in
pop
into
dec
popa
jb
or
cld
add
ret
nop
lret
sarb
pop
or
stos
xchg
dec
inc
or
pop
je
outsl
xor
jecxz
sbb
lods
int3
cli
cmp
sbb
jecxz
int3
xchg
mov
jle
popf
js
test
insl
ss
jmp
ret
xor
insb
and
mov
mov
push
jbe
add
mov
inc
icebp
popa
into
or
stos
and
push
dec
fwait
jecxz
stc
xor
inc
adc
xchg
pop
add
add
jne
out
andb
xchg
das
add
imul
and
repz
inc
cld
int
jp
mov
inc
loop
inc
and
dec
sbb
dec
adc
repz
outsl
fucom
roll
out
cmp
nop
push
js
adc
adc
push
rep
mov
jnp
cld
push
sub
adc
addr16
push
mov
mov
fdivrs
fiadds
movsb
xchg
mov
mov
fstpl
out
adc
vmovaps
jnp
stos
cmp
mov
inc
and
mov
insl
push
inc
mov
in
insb
dec
std
xor
ror
jmp
jecxz
sti
jl
vminpd
movsb
cmc
es
cvtpi2ps
or
imul
inc
fwait
sbb
inc
hlt
adc
cmp
mov
mov
jge
xchg
aad
push
js
jp
jne
inc
lcall
mov
mov
dec
inc
jle
push
pop
lds
pop
pop
mov
add
cwtl
adc
cmp
mov
dec
in
mov
mov
sarb
mov
add
clc
sub
or
cltd
sbb
xchg
mov
das
jmp
lea
add
inc
je
lea
pop
dec
xor
xor
xchg
mov
mov
imul
mov
mov
fstl
push
cltd
cli
or
adc
sub
lcall
xor
mov
hlt
mov
out
xchg
arpl
dec
cltd
push
add
insb
push
push
in
hlt
cmpsb
inc
int
test
pop
xchg
out
mov
jge
push
ficompl
add
inc
aad
push
lods
jnp
sub
fldl
push
mov
mov
repz
aas
insb
adc
mov
bound
sub
push
jbe
pop
cmpb
movsb
xlat
ss
movsb
adc
bound
push
add
and
xchg
push
repz
push
dec
in
jne
test
sbb
sbb
mov
mov
pop
adc
push
inc
into
or
cmp
out
je
in
ja
mov
sub
pop
xor
pop
mov
push
stc
xchg
dec
jnp
fcoml
mov
jecxz
stos
int
cmpsl
dec
insl
add
jno
iret
jne
and
jb
or
popf
inc
int3
adc
scas
enter
cmp
loopne
imul
lea
dec
shr
inc
popf
pop
or
data16
and
movsb
loope
ret
mov
dec
mov
cmp
dec
push
call
addr16
lea
mov
adc
xor
fwait
pop
dec
sbb
std
and
in
push
add
ret
stos
mov
push
mov
pop
ret
dec
mov
jno
out
test
or
loop
pop
mov
mov
scas
jnp
out
dec
test
ficomps
push
adc
fldenv
ficomps
push
shlb
push
lock
inc
push
jnp
fs
xchg
pop
xor
out
xor
mov
int3
dec
ss
mov
or
push
ficompl
xor
mov
lds
adc
stc
cwtl
ret
cmpsl
jns
mov
pop
fdivrs
sub
pop
jb
jno
sbb
xor
aaa
mov
or
pop
adc
outsb
lds
ja
cmpsb
mov
lods
adc
inc
sbb
stos
int
xor
or
dec
push
or
mov
ljmp
pop
mov
jb
sub
pushf
push
or
out
dec
fwait
mov
lods
and
ror
cmp
inc
or
lret
mov
xchg
or
cld
test
lds
fsubrl
fnstcw
scas
xchg
inc
inc
dec
test
or
and
cmp
xlat
inc
es
lods
out
sub
xchg
mov
mov
jmp
scas
insl
jae
shlb
test
xchg
xor
add
dec
ss
mov
push
sub
bnd
loope
les
mov
aam
outsl
mov
mov
xor
fstpl
fsubr
jb
out
sbb
jo
add
mov
hlt
mov
cmp
stc
pop
adc
or
jmp
and
dec
shlb
jle
xor
cmp
pushf
jbe
sub
mov
jmp
mov
fildll
xor
subb
pop
call
sbb
faddl
mov
test
fcmovne
fnstsw
jl
push
insb
scas
shrb
pop
mov
ret
lret
outsl
or
scas
pop
and
ficomps
icebp
js
pop
push
mov
stos
sub
mov
adc
loop
jecxz
insl
lds
icebp
jbe
pop
jns
xor
xor
pop
mov
push
jp
es
pop
add
adc
mov
cmp
loop
les
mov
mov
popa
sbb
mov
fwait
loopne
adc
jns
inc
lahf
dec
sub
loop
pop
test
and
or
jp
xchg
xchg
test
adc
mov
and
and
ljmp
jle
lahf
mov
pop
lods
or
adc
movsb
dec
mov
cwtl
mov
lcall
push
rol
xor
les
dec
mov
adc
inc
inc
mov
push
dec
mov
test
mov
call
push
shl
push
ja
jb
and
fwait
add
jnp
adc
aas
das
cltd
mov
mov
and
imul
loopne
jns
out
in
aas
mov
jmp
mov
ja
sarl
dec
jl
lds
pop
xor
mov
test
cli
push
and
inc
and
cmpsb
sub
jp
aad
test
sbb
clc
xlat
and
or
push
xchg
push
inc
js
cmpl
inc
mov
cmpsb
js
in
pop
fsts
dec
in
jno
push
ret
adc
int
out
jmp
sbb
subb
das
clc
inc
mov
cvtps2pd
mov
dec
leave
je
push
lret
repnz
pusha
xchg
push
jo
stos
xchg
pop
jae
mov
push
pop
cld
cmp
dec
je
xchg
jbe
repz
lret
mov
bound
and
mov
insl
cld
pop
js
dec
xor
add
pop
sarb
ret
shrb
mov
aam
add
sti
pop
aaa
das
pushf
fisttpll
xchg
push
cmp
mov
stc
adc
in
push
cmp
stc
repz
in
lods
sub
sbb
dec
lcall
adcb
insb
mov
sbb
push
out
aam
repnz
nop
mov
insb
jns
sub
add
or
pop
push
mov
decl
jne
outsb
enter
arpl
xor
adc
push
insl
repz
movsb
sub
push
decb
xlat
xor
dec
inc
loopne
pop
cli
sti
inc
ljmp
clc
inc
jne
and
stos
push
add
les
cmp
daa
push
mov
outsb
out
sbb
shll
fidivs
pop
cmpb
sub
mov
aas
pop
shl
mov
mov
jmp
subl
arpl
fisttps
leave
jnp
push
aas
adc
adc
xor
mov
push
xchg
jle
in
test
mul
xchg
cld
push
pop
dec
rcrl
mov
fucom
shll
dec
mov
cwtl
sahf
cmp
push
sub
es
push
add
dec
and
sbb
outsl
adc
cmp
sti
shll
pop
add
xchg
std
dec
mov
div
xchg
fstl
or
mov
outsb
es
out
dec
or
clc
inc
arpl
ljmp
push
enter
or
push
sbb
int
test
mov
test
push
stos
enter
ret
jle
sub
sbb
test
dec
insb
xlat
jae
fildl
sahf
loope
rorb
decb
stos
inc
cwtl
insl
add
mov
in
nop
in
roll
rcrl
inc
sbb
mov
cmp
mov
add
rorw
fidivs
inc
loope
fistl
sarl
insl
pop
sahf
cmp
sub
dec
inc
pop
cwtl
mov
pushf
jg
push
mov
xchg
out
cwtl
std
mov
mov
movsl
lea
test
outsl
mov
sahf
xor
sub
jmp
out
int
pop
mov
xlat
xchg
popf
mov
loopne
fwait
icebp
loopne
xlat
adc
mov
sbbl
test
icebp
pop
push
mov
fdivrs
add
popf
dec
aad
xchg
xor
test
fsub
std
scas
mov
sarl
jnp
insl
call
icebp
mov
fidivs
mov
and
push
stos
sbb
and
mov
push
out
jle
ljmp
sbbb
ret
cmp
and
push
scas
or
ja
and
push
aaa
xchg
xchg
xchg
mov
push
and
mov
push
mov
stc
sub
mov
int3
enter
scas
inc
and
mov
sub
and
pusha
dec
cltd
xor
arpl
mov
sbb
sub
xor
fidivrl
ds
adc
pop
inc
jb
loopne
and
popf
add
fdivr
jmp
pop
fistl
inc
mov
and
movsl
jecxz
lock
mov
pop
adc
push
mov
cmpl
pushf
popa
jo
pop
inc
nop
mov
in
rcrb
out
or
ja
mov
lods
jg
cmp
or
arpl
insl
ret
sub
sub
jl
into
push
dec
cld
aam
gs
sbb
imul
jns
out
mov
daa
ds
push
aaa
pop
mov
es
dec
daa
and
xchg
ss
dec
xchg
cmpsb
inc
inc
push
jno
in
sbb
jb
pop
sub
sarl
cmc
movsl
xchg
arpl
mov
icebp
lret
out
push
movb
loopne
adc
mov
loop
popf
sahf
fistpll
mov
xchg
mov
dec
repz
push
movsl
cmp
loope
in
test
sub
gs
icebp
jecxz
adc
inc
outsl
fildl
fldenv
mov
fcomps
or
or
and
jne
fstl
add
negb
mov
insb
subl
push
test
mul
shrl
mov
shll
outsb
or
pusha
mov
mov
push
aas
pop
add
lods
mov
stos
sahf
mov
push
xor
mov
int
xor
and
testl
dec
sub
fisubl
mov
dec
pop
out
xchg
mov
ss
loope
push
add
cltd
and
mov
ja
adc
stc
jo
dec
mov
sar
xchg
lcall
cmp
add
rcrb
fldcw
loopne
jne
imul
icebp
adc
repnz
cmc
cmp
xchg
imull
mov
in
stos
add
xchg
xchg
mov
out
push
add
arpl
sub
in
orb
xchg
mov
ficomps
pushf
daa
pop
ss
pop
inc
inc
mov
sub
sbb
test
outsb
repnz
decb
push
dec
pop
and
inc
push
loop
roll
dec
xchg
sub
out
out
jns
cmpsb
mov
dec
push
lea
das
xchg
pop
sub
cwtl
das
dec
aad
mov
repz
xor
popf
cwtl
fsqrt
and
jge
addb
in
xchg
inc
sub
jae
push
movsl
lods
mov
fwait
add
pop
aaa
mov
mov
cwtl
lods
dec
mov
pop
inc
and
sbb
cwtl
inc
xchg
popl
test
add
jmp
xlat
pop
jnp
aad
xchg
inc
or
mov
dec
js
lods
sbb
lods
push
ljmp
out
fsubrl
mov
pop
xchg
aas
ljmp
cmp
mov
fistpl
mov
jmp
push
mov
mov
mov
xchg
push
push
inc
ss
add
mov
lods
pop
jne
rorb
arpl
jecxz
in
xchg
or
shll
add
jl
adc
xchg
jo
pop
popa
xchg
sub
nop
stos
xchg
mov
inc
iret
push
adc
cmpsb
dec
mov
push
in
mov
or
jns
dec
aas
adc
scas
loop
mov
or
cltd
imul
pop
xchg
test
out
lcall
mov
fs
stos
adc
xchg
push
mov
push
fdivl
cld
nop
out
xorb
idiv
and
rol
aad
repz
sahf
aaa
call
cltd
pop
mov
loop
in
pop
filds
ds
pop
lret
inc
into
loop
mov
jl
inc
in
xchg
mov
imul
test
xor
adc
rcll
mov
or
int3
pop
jl
popl
adc
icebp
jb
movl
pop
js
mov
inc
into
ja
mov
and
mov
into
push
out
fisttpll
ret
in
sti
pxor
xchg
push
mov
scas
pushf
inc
add
fs
pusha
gs
lods
ud2
sbbb
repz
inc
cld
mov
ds
decb
les
inc
mov
mov
movsl
leave
aam
mov
pop
push
xchg
mov
icebp
shlb
pop
out
push
push
aam
xlat
mov
xchg
add
sbb
shrb
dec
jl
aad
pop
rclb
cmc
xor
pop
add
push
lods
push
inc
lret
ret
fwait
mov
das
push
adc
leave
je
nop
xchg
test
jl
in
cmp
int
sub
aad
xor
lcall
pop
lock
sbb
rcrb
sar
movsb
popf
loop
jmp
pop
xchg
lods
lds
push
sub
dec
xchg
mov
jg
stos
push
sub
lock
lods
pop
and
push
jecxz
push
sub
adcl
push
mov
sub
cs
mov
aam
sbb
mov
loop
les
int
fs
loopne
push
cwtl
add
dec
fldt
imul
test
aad
mov
push
stos
dec
pop
dec
pop
sbb
sub
pushf
int3
out
xchg
xchg
pop
lock
adc
jno
fstl
stos
mov
push
adc
adc
sarb
in
cmp
sbb
pop
xchg
je
pop
jecxz
pop
pop
add
in
into
mov
sub
int3
out
ja
cmp
je
fs
adc
fsubr
icebp
pop
mov
sarl
movsb
pop
cs
xor
imul
fsub
ss
add
jge
mov
mov
xchg
test
dec
adc
jno
inc
in
insb
fcmovne
add
jmp
imul
fcoms
dec
int
pop
mov
mov
bound
xor
push
pop
pop
in
mov
mov
notb
push
mov
scas
jnp
test
cltd
subb
push
sub
dec
jbe
aam
mov
pop
or
dec
jmp
cmp
out
xor
adcb
push
xchg
mov
xchg
lock
addr16
cmp
or
popa
add
cmpl
xor
jo
pop
out
aas
adc
andl
inc
adc
aam
pop
movsl
and
subl
mov
cmp
add
pop
sub
and
loop
cmc
outsb
pop
dec
xor
movsl
push
cli
shr
xchg
fsubrs
rclb
test
pop
icebp
popa
mov
cmp
cmpsb
push
inc
or
jb
xor
divps
outsl
test
push
mov
shr
xchg
cmpb
std
push
incb
jecxz
add
shlb
dec
ret
fwait
cmp
sbbb
mov
js
dec
daa
and
es
mov
mov
cmp
cmp
xor
dec
push
xor
xor
js
ret
lret
mov
dec
dec
sub
je
repz
movsb
rcrb
push
leave
add
rcrl
add
lahf
xchg
dec
orb
test
add
fucomp
sub
cltd
jnp
das
pop
jb
xlat
sbbl
adc
add
mov
jmp
imul
and
out
lods
xchg
ret
test
mov
pop
push
add
mov
add
xchg
push
pop
xor
loopne
dec
into
sbb
idivb
loope
cs
xor
ja
adc
jecxz
mov
imul
shlb
jne
lcall
sbb
sub
mov
std
xor
enter
loop
or
mov
movl
inc
xchg
sbb
push
adc
inc
lea
repz
jnp
xorb
orb
and
shlb
sahf
lret
popf
psrld
inc
adc
push
pop
jns
in
adc
mov
inc
rcll
jnp
aas
mov
aam
xchg
push
cmpsl
or
movsl
into
or
icebp
xlat
in
jne
mov
inc
dec
js
dec
mov
cmp
in
sbb
xor
fcmovne
roll
leave
and
enter
pop
in
cmc
push
pop
outsb
and
clc
xor
in
push
mov
mov
xor
sbb
jns
out
loop
in
cmp
lds
aam
in
xchg
lea
and
add
push
xor
mov
icebp
xchg
arpl
stos
pop
mov
stos
or
mov
lcall
out
outsl
cmp
in
push
cmp
rorb
decb
lea
mov
jmp
je
ret
xor
ret
cmp
mov
inc
lret
ss
and
mov
sbb
pop
or
or
aam
pop
imul
aaa
pop
mov
scas
push
into
jmp
sub
xchg
into
sti
pop
gs
mov
mov
in
push
add
scas
and
mov
popf
jle
call
fldlg2
faddl
inc
bound
or
bound
inc
jge
ds
cli
push
mov
lret
test
outsl
or
mov
imul
mov
fisttps
shlb
jge
mov
mov
lret
les
fistpl
fs
pop
ret
lods
xchg
xchg
iret
push
push
sbb
push
aam
fnsave
fcompl
mov
andl
push
aam
mov
jno
pushf
cs
pop
cmp
in
fmuls
jl
push
sbb
sub
pop
push
rclb
mov
push
and
dec
add
xchg
test
or
jbe
or
ret
push
xchg
jecxz
dec
sar
sub
push
xchg
mov
push
pop
xchg
fmull
cmpsl
testb
inc
adc
jmp
neg
decl
push
les
cmc
addr16
or
xchg
inc
outsb
jle
push
cmp
xchg
addr16
in
js
inc
jno
cmp
xor
call
fists
and
pop
and
movsb
es
mov
mov
lret
push
pop
lods
and
repnz
pop
jl
mov
shrb
lods
pop
and
pop
rorl
adc
out
mov
inc
stos
ja
les
jbe
ss
dec
jecxz
jb
cmp
aad
mul
add
idiv
inc
adc
popl
nop
pop
sub
inc
mov
inc
mov
adc
ja
pop
ss
mov
mov
clc
xor
mov
fcom
faddl
clc
ja
add
and
inc
mov
xor
inc
fidivrl
cmc
cs
cmc
mov
cmp
mov
movsb
movb
shlb
mov
jb
fidivs
rcll
pop
and
cmpsb
test
adc
mov
inc
ret
scas
cmp
mov
fstpt
sub
fidivrs
dec
ds
divl
insb
loopne
scas
addr16
mov
fcmovu
push
mov
fists
mov
ss
rcpps
leave
pop
pop
xchg
push
xor
stos
sbb
cli
imul
imul
ficompl
inc
dec
sahf
daa
cwtl
and
mov
out
sub
xchg
cltd
test
outsl
fmuls
pop
mov
cmp
mov
mov
cwtl
mov
sub
fdiv
scas
js
stos
mov
cmpsb
scas
jae
subb
insb
and
pusha
and
js
sub
rcl
mov
das
jp
adc
gs
jmp
es
lahf
mov
js
push
adc
ja
sub
sahf
outsl
mov
rolb
sub
push
cmpb
aam
xchg
js
mov
jno
mov
rclb
mov
dec
jp
mov
mov
xchg
fcomps
jo
out
js
mov
cs
mov
xchg
loopne
xchg
cmpsb
jne
hlt
mov
inc
stos
leave
mulb
adc
cmp
bound
jbe
adc
xor
sarl
cmp
adc
cli
mull
lea
mov
movsl
mov
cmpsl
jmp
mov
jnp
inc
cwtl
push
stos
or
cli
cmp
into
push
out
pushf
in
inc
outsl
repnz
adc
leave
lret
int3
push
mov
repz
lods
xor
adc
jl
inc
mov
jnp
in
fwait
mov
out
add
push
pop
add
adc
loope
clc
scas
pop
icebp
sti
nop
cmp
xchg
icebp
push
lret
insb
les
pop
loopne
pop
jne
cmpb
xor
jb
out
mov
and
add
mov
push
insl
or
dec
ret
or
mov
adc
es
rcll
outsb
jae
add
jecxz
and
pushaw
mov
arpl
cwtl
loopne
xor
mov
jnp
sarb
push
push
xor
pop
lret
ja
ds
mov
mov
je
test
call
adc
or
jmp
pop
and
jecxz
jae
pop
inc
pop
push
iret
scas
jp
stos
dec
rorb
or
push
pop
mov
fisubl
scas
adcb
sub
mov
cmp
aam
jecxz
or
pop
std
testl
jb
fimull
cld
push
adc
sbb
push
mov
divl
dec
xchg
inc
int
ja
add
push
popa
add
dec
xchg
into
adc
stos
movsl
cmpsb
mov
ljmp
js
sbb
mov
xor
jl
aam
pop
inc
outsl
repz
cld
mov
cmp
push
mov
mull
cs
pop
pop
fs
fwait
jp
dec
push
push
ljmp
xchg
test
or
mov
cmpl
sub
les
fnstsw
jg
jno
neg
and
pop
jnp
negb
dec
cwtl
pop
or
cmp
cmp
xor
sub
mov
xchg
pop
test
inc
mov
scas
inc
cmp
int3
popa
mov
aaa
jmp
adc
inc
movsl
loopne
js
sbb
fwait
mov
iret
or
int3
imul
push
jo
sar
xchg
fbstp
or
test
bound
out
cmpsl
mov
mov
shll
sbb
pop
pop
mov
add
add
or
sahf
stos
xchg
aam
mov
fildl
neg
xor
inc
push
lods
and
dec
dec
dec
test
imul
xchg
pusha
or
xlat
xor
jnp
movsb
cli
insb
mov
lods
mov
fmuls
pop
jmp
jmp
sub
push
stc
dec
xor
outsb
loop
dec
cltd
fcmovb
lods
call
or
adc
jmp
data16
sub
sti
sbb
add
push
inc
enter
lds
mov
out
sbbb
dec
les
and
mov
aaa
mov
loope
ss
cmp
adc
shll
pusha
jne
mov
cmpsl
fldl
adc
add
mov
inc
mov
ss
nop
inc
pop
popa
add
inc
cltd
sahf
mov
lahf
in
es
test
jmp
insl
outsb
jbe
jb
inc
pop
int
movsb
bound
aad
fcmovu
leave
jb
int3
into
cmp
adc
imul
xchg
sub
fdivrp
lret
xchg
cmp
add
inc
fst
cmp
stc
adc
or
jmp
fistpll
inc
pop
cmpsl
lock
imul
lods
jne
aad
pop
mov
popf
inc
mov
dec
xchg
stos
or
xlat
loop
mov
mov
cmpl
lret
xchg
in
test
jle
and
mov
repnz
daa
or
pop
pop
jecxz
shll
inc
lret
out
jne
xchg
sbb
pusha
mov
pop
mov
jecxz
leave
jp
je
insb
div
jb
or
movsl
imul
mov
sbb
xorb
add
cltd
cwtl
and
pop
scas
sbb
cs
lahf
in
mov
sbb
jmp
xchg
sub
jmp
push
outsb
push
xchg
sbb
mov
imul
das
fsubs
push
sbb
out
repnz
shl
push
add
push
jl
dec
pop
jg
loope
xchg
repnz
fdiv
mov
add
lret
xor
and
adc
jecxz,pn
mov
test
push
ficomps
dec
xor
in
mov
xchg
mov
xor
sub
pop
std
push
andps
pop
sbb
xchg
test
push
fbstp
xor
pop
jp
adc
mov
inc
adc
cltd
mov
mov
xchg
fucomi
fidivrl
inc
mov
jo
sti
popa
les
jmp
jmp
and
lods
mov
pushf
push
add
test
adc
sbb
mov
dec
mov
test
jns
dec
xchg
push
mov
arpl
sub
cmp
xor
outsb
fwait
or
testb
jp
lock
dec
pusha
sbb
outsb
sub
cs
pop
repz
sbb
jnp
adc
dec
ljmp
gs
insb
adc
es
rcr
je
or
inc
and
sbb
pop
and
add
mov
mov
dec
sahf
xor
movsl
lock
cld
movb
or
or
aad
icebp
jle
mov
sbb
push
pop
loopne
push
jo
add
paddw
stos
jae
fucomi
cld
push
into
mov
pop
dec
fcomip
mov
addr16
fiadds
std
or
lcall
gs
mov
idivl
mov
jns
pop
jno
mov
lahf
jmp
dec
sub
inc
jle
mov
orl
rorb
sub
in
adc
imul
mov
xor
mov
add
fbld
mov
loop
or
mov
push
lcall
mov
xchg
cltd
mov
lods
jae
aas
andb
sbb
mov
lcall
sub
mov
inc
movsl
push
scas
or
in
mov
loope
xor
push
test
add
imul
adc
je
bound
mov
jae
xchg
fcmove
out
sti
and
jns
cs
dec
cs
in
mulb
lds
inc
cmc
js
mov
in
cmpl
push
and
push
fisubs
outsb
test
and
int
dec
icebp
jmp
sti
cmp
sub
sahf
loopne
hlt
dec
in
cwtl
xchg
ret
jb
pusha
xchg
adc
andb
pop
dec
in
mov
lcall
inc
jae
cmp
and
scas
mov
icebp
mov
inc
mov
mov
aaa
xchg
popf
daa
cwtl
jnp
repnz
icebp
test
call
xor
lods
jae
int
idivb
mov
add
icebp
add
xchg
aam
int
mov
pop
pusha
mov
std
mov
pop
es
inc
outsl
ljmp
inc
jb
or
mov
xor
outsl
cli
fxch
cmp
lods
sbb
jmp
xchg
stos
xor
dec
and
jecxz
adc
inc
int3
popl
pushf
mov
bound
rcrl
sub
sbb
mov
out
push
push
lods
inc
or
and
ljmp
fs
imul
clc
outsl
out
xchg
orps
test
add
sbb
jl
rclb
test
aas
add
adc
mov
inc
xor
int
mov
dec
repnz
pop
xchg
and
ljmp
mov
add
or
inc
in
add
pop
xor
add
inc
or
jns
sti
mov
xchg
push
ja
mov
lea
sti
cmp
inc
repnz
mov
popl
cmpsl
mov
xor
mov
test
sti
outsl
inc
mov
orl
push
inc
pop
mov
sarb
cmp
jp
arpl
pop
ret
lret
xchg
inc
push
psrlw
insl
sahf
nop
push
mov
ret
gs
sbb
push
xchg
xor
sbbb
push
jbe
push
mov
stos
pop
jp
push
inc
xor
je
clc
rol
repz
out
in
fldl
xchg
sub
lahf
xchg
mov
incl
push
mov
int3
add
imul
xchg
push
ja
jl
pop
arpl
xor
mov
inc
mov
jb
or
in
pop
sbb
cmovbe
roll
add
aam
repnz
sbb
rcrb
mov
push
push
ljmp
cli
shlb
adc
or
adc
imulb
addr16
inc
nop
xor
xor
push
sbb
mull
fisttpl
pusha
cmpsb
insb
push
add
nop
pop
mov
stos
cmp
imul
dec
mov
in
ret
mov
adc
cli
sub
test
nop
xchg
int
fs
xchg
in
sti
movsb
or
dec
ja
push
mov
ja
pop
lods
inc
insb
lds
shr
jbe
inc
dec
and
repnz
mov
scas
xchg
adc
or
cwtl
mov
imul
lahf
mov
add
or
mov
int
ret
loopne
push
cmpsb
push
in
inc
or
and
push
scas
popa
push
sti
and
mov
ja
dec
sub
stos
addb
jb
inc
sub
pop
push
mov
les
cld
int3
mov
and
xor
inc
push
popa
jbe
cld
test
sbb
fdivl
mov
lock
push
xchg
mov
in
sbb
ds
pop
jge
hlt
cmp
aas
adc
mov
xor
inc
adc
jbe
js
pop
stc
addr16
lds
inc
inc
in
push
sti
pop
sar
loopne
add
push
dec
add
or
jge
dec
pandn
std
and
mov
mov
into
pop
incl
or
lock
into
into
pop
sub
das
lahf
adc
mov
subl
mov
lods
mov
cmp
mov
push
xor
dec
jo
cmpsb
dec
scas
into
dec
cmpsl
clc
addl
int
jne
lds
push
push
xor
mov
inc
test
pusha
mov
cmpsb
and
pop
xor
add
icebp
or
pop
mov
or
push
loopne
cwtl
push
adc
pop
cmpsl
movsl
mov
outsb
cmp
test
rolb
push
popa
dec
inc
inc
daa
pop
in
gs
pop
ret
shll
iret
pop
in
add
xchg
sahf
mov
lret
outsb
cmp
test
pop
fmull
stos
in
push
pop
and
mov
daa
out
cs
jo
loope
mov
push
lahf
jg
xor
hlt
mov
packuswb
loop
test
sub
outsb
pop
leave
mov
jns
in
subb
outsb
pop
loopne
dec
sub
cmp
adc
inc
gs
fadds
lock
xchg
push
cmp
orl
pop
jge
mov
push
clc
add
xor
jae
pushf
inc
lods
insl
aad
inc
push
test
arpl
rorl
push
shl
dec
out
data16
stc
aam
pop
addb
mov
mull
imul
xor
das
rcl
mov
adc
lahf
add
mov
shlb
adc
mov
cwtl
dec
jne
mov
mov
les
mov
push
jl
push
mov
push
pop
sar
adc
ss
mov
pushf
dec
and
lcall
mov
push
xor
push
cwtl
arpl
cmc
mov
mov
xor
xor
jmp
xchg
xbegin
jp
pop
aaa
pusha
jbe
sarb
inc
mov
pop
test
mov
mov
push
pop
mov
inc
jl
adc
xchg
add
jo
xchg
push
or
inc
mov
ljmp
ljmp
js
repnz
sbb
mov
or
sub
arpl
push
inc
sbb
mov
clc
mov
and
mov
imul
js
push
xchg
imul
fisubrl
dec
ds
or
lret
dec
xlat
fistl
mov
bnd
cld
pop
pop
and
mov
jg
imul
cli
sub
icebp
adc
inc
repnz
pop
push
repnz
and
fmull
jl
je
pop
cmp
testb
outsl
aam
inc
dec
nop
jmp
or
push
jmp
push
jne
mov
jb
sub
pusha
in
movsl
dec
das
cld
cltd
jp
icebp
test
cmp
mov
mov
or
imul
mov
movsl
cld
sub
xchg
ds
jo
testb
cltd
test
test
mull
iret
in
xchg
aaa
xchg
stc
xchg
pushf
cmpsb
mov
in
lret
jle
ret
movsb
ret
nop
pop
push
test
push
push
into
mov
fsubrl
xchg
push
dec
cmp
gs
pop
das
mov
dec
adc
xor
lods
rcr
clc
jl
and
pop
outsl
xchg
cs
and
int3
fnstsw
adc
or
cltd
xchg
std
push
imul
jbe
sbb
ffree
sbb
mov
lcall
adc
xchg
xor
jbe
mov
repz
xchg
sahf
ficomps
jmp
push
or
pop
mov
ja
icebp
jl
pop
ffree
fistl
fcmovnb
leave
fwait
pop
inc
pusha
or
ror
sbb
push
add
mov
mov
leave
or
ret
inc
mov
xor
std
jle
ret
jne
int3
jne
inc
cmp
add
int3
movsl
mov
fildll
leave
fxch
jne
andb
nop
mov
mov
lcall
pcmpgtd
adc
leave
sbb
xor
mov
or
insb
jne
je
adc
lcall
fnsave
add
roll
je
xor
push
xor
lahf
std
popa
mov
arpl
jl
insl
xlat
adc
mov
xor
and
outsb
imul
and
xchg
or
fbstp
lret
lret
sarb
pop
xchg
adc
rcll
pop
push
adc
paddd
les
leave
movd
shlb
inc
push
adc
ja,pt
outsb
add
xlat
aaa
sbb
int
call
stos
in
push
into
ret
lods
out
mov
pop
sbb
cmp
or
or
or
xor
and
sbb
fstl
cwtl
cmp
mov
add
popf
movsb
xor
cmp
sub
xchg
lds
mov
std
jne
jmp
pop
cmp
stc
pop
and
sbb
sub
sbb
bound
fwait
mov
out
inc
inc
mov
cmp
es
in
lret
dec
in
decl
and
fwait
sbb
rol
rcr
out
lcall
push
push
data16
test
xor
stos
stc
lods
insb
stos
imulb
push
xor
push
add
or
or
push
jle
jb
mov
idivb
idivb
mov
pop
inc
mov
mov
lahf
mov
out
mov
sub
pop
imul
ljmp
jmp
cmpsb
stos
push
lods
or
jg
fmull
cmc
sbb
and
jmp
nop
xchg
sub
movaps
leave
push
ret
ss
dec
repnz
dec
cli
push
inc
mov
jnp
in
or
and
xchg
ja
imul
mov
xchg
cs
aaa
inc
cltd
pop
mov
dec
fidivl
push
lds
pop
pop
sbb
push
imul
icebp
pop
push
roll
or
stos
call
lahf
dec
push
js
insl
add
mov
sub
lret
sub
adc
dec
call
xchg
cmp
stos
loop
jle
in
lcall
enter
lahf
data16
fmul
mov
jo
fwait
or
fs
or
xor
sub
in
aaa
das
jmp
out
mov
jl
cmp
shll
sub
inc
outsb
outsl
jbe
sbb
push
imul
into
or
mov
es
jae
sub
mov
xchg
outsb
push
or
adcl
mov
adc
popf
cwtl
rcrb
inc
pop
les
and
notl
push
add
jno
pop
pushf
stos
in
adc
loopne
insl
cmp
fidivrs
out
pop
mov
sbb
xchg
push
jle
jmp
mov
pushf
jmp
jmp
leave
mov
outsl
test
cmpsl
pop
sbb
jmp
dec
sbb
xor
sub
or
out
out
jbe
add
mov
iret
xchg
pop
pop
aad
push
mov
inc
ret
jne
in
jg
push
and
adc
mov
decl
test
aad
test
and
ljmp
fnstenv
lea
jnp
out
pop
add
rorl
mov
jl
bound
jbe
push
lock
push
inc
lds
xchg
cmpsl
cmp
adc
stc
xchg
jg
hlt
aaa
xchg
aaa
adc
bound
push
mov
test
les
int3
sub
mov
pop
sbb
pusha
mov
sbb
jmp
roll
xchg
sbb
lea
cmc
out
push
xor
lds
add
mov
shll
pop
aaa
cmp
gs
lcall
ja
mov
in
sti
shll
into
inc
inc
mov
das
xor
in
cmp
cmp
adc
inc
lods
jbe
sbb
cmp
out
not
dec
push
lret
sbb
and
mov
out
shrb
cli
mov
outsl
test
ss
int
outsb
pop
and
xor
call
iret
in
pop
jl
lock
outsl
xchg
loope
inc
dec
xchg
jl
mov
sub
call
or
in
adc
push
or
lahf
inc
cmp
add
push
scas
call
push
jge
lret
outsl
popa
mov
sub
popf
js
scas
aam
push
jle
xlat
dec
test
dec
loop
cmp
insl
insl
jl
fcompl
inc
cmpsl
ror
mov
adc
lds
cltd
add
or
push
add
emms
sub
rorl
mov
rcl
cltd
push
je
out
dec
shrb
push
sub
clc
enter
popa
cmpsl
fwait
dec
sbb
xor
sti
mov
mov
xor
adc
les
sub
and
test
pop
fs
sub
loopne
xchg
mov
cli
repnz
jnp
jnp
enter
test
mov
mov
dec
mov
xlat
cmp
and
xor
arpl
cwtl
shrb
push
fnstsw
add
rorl
adc
jg
movsb
fdivl
enter
mov
cmc
xchg
or
xchg
loopne
in
mov
sarl
inc
dec
adc
out
xchg
and
cli
inc
divb
sbb
jge
and
and
ret
test
repnz
pop
popa
xor
sarb
repz
outsl
sbb
fwait
adcb
mov
les
push
push
ret
xchg
div
add
into
add
les
xchg
bound
in
dec
pop
inc
add
mov
out
sbb
push
push
ds
lsl
ret
lock
loop
or
test
push
adc
or
pusha
pop
imul
add
cld
jb
pop
sub
xchg
push
lods
sub
inc
stc
call
jge
xor
inc
mov
outsb
lds
jb
stos
push
cld
bnd
xchg
fwait
mov
jmp
jl
mov
lret
or
adc
jp
aam
sahf
sub
mov
and
cli
adc
or
xor
mov
in
push
sbb
or
mov
lret
jns
push
sub
xor
insl
fiaddl
mov
push
movsl
lea
cmp
es
dec
and
xchg
add
out
shlb
pop
ds
mov
mov
arpl
lcall
out
cmp
xor
stos
sbb
pop
inc
xlat
and
cmp
mov
in
daa
inc
cmp
gs
adc
cmp
or
pop
in
adcb
je
inc
push
stos
mov
fnstenv
inc
lcall
sbb
loopne
les
sbb
sahf
gs
imul
scas
add
int
jae
xor
push
mov
lock
push
insb
cmc
insb
popf
sub
mov
mov
lret
jp
shr
mov
icebp
bound
push
std
loopne
mov
or
add
push
ret
lret
incb
roll
scas
sbb
adcb
fadds
push
xchg
jmp
push
enter
pop
or
pop
inc
outsb
pop
std
push
aaa
call
xchg
xchg
ljmp
push
lret
std
outsl
inc
jp
sub
test
outsb
test
out
cmp
xchg
les
popa
mov
aaa
and
add
jne
cli
xchg
jle
into
ss
mov
enter
sbb
lret
mov
mov
fnstenv
test
inc
add
sub
cmp
sbb
or
mov
cmp
mov
sub
jge
sub
cli
stos
mov
pop
jge
jmp
jnp
ljmp
or
test
xlat
sub
aam
push
in
xchg
add
fsubrs
add
call
cmp
popf
mov
mov
adcl
or
mov
mov
mov
add
mov
popa
lods
push
lock
and
test
das
push
nop
xor
push
mov
or
addr16
insl
xlat
ret
sti
repnz
cmp
cmovle
loope
movsl
dec
pusha
pop
inc
sti
or
fcmove
xchg
inc
jge
int3
mov
xlat
adc
or
add
or
sub
adc
mov
inc
sub
lds
int3
jae
or
mov
insb
add
mov
gs
nopl
repz
je
addr16
or
fiadds
test
sahf
adc
insb
xchg
inc
icebp
jg
mov
sbb
or
adc
shlb
mov
into
cs
bound
pop
fwait
or
dec
imul
mov
cmc
test
roll
data16
aam
mov
push
mov
jecxz
or
into
repz
pushf
adcb
int
dec
pushf
push
iret
adc
lods
pop
add
xchg
xchg
mov
ret
pop
mov
fwait
sbb
scas
lds
cs
out
xlat
gs
push
lret
test
add
out
add
pop
push
inc
test
sub
jbe
daa
mov
xchg
pop
xchg
cmpl
adc
scas
js
adc
or
xchg
adc
jl
xlat
inc
push
sub
pop
mov
xor
test
inc
je
cltd
loop
notl
xchg
mov
sbb
add
out
lock
jno
adc
push
jae
cmp
icebp
jmp
addr16
jae
sub
subl
or
lret
mov
stc
cmp
or
pushf
movsb
pop
mov
add
inc
sbb
jmp
scas
mov
cltd
push
cmp
repz
sbb
xor
xchg
inc
add
xchg
movsl
jnp
out
fcmovbe
pop
push
add
sahf
adc
mov
rcrb
pop
repz
lods
push
pop
out
fsubrp
rcr
mov
clts
imul
and
shrl
add
or
xor
mov
and
ss
xor
dec
into
jns
jae
push
outsb
push
sub
push
push
in
sarl
jg
adc
sahf
jg
lods
addb
aam
stc
cmp
iret
adc
fsubrs
test
aad
loop
daa
mov
mov
push
fistpll
clc
cmc
mov
jl
ljmp
xor
add
push
and
gs
fimuls
cwtl
mov
push
and
mov
mov
mov
mov
and
cwtl
inc
inc
leave
xor
out
in
mov
push
mov
mov
icebp
loopne
lock
mov
out
add
jo
mul
and
sub
xchg
adc
add
jne
dec
cwtl
xor
outsl
xchg
push
push
sahf
and
push
stc
mov
mov
cmp
push
or
das
mov
push
ljmp
imul
mov
inc
jmp
jae
leave
push
fsub
mov
dec
push
add
into
xor
push
sub
add
sbb
jg
rclb
lods
cmp
lahf
sahf
mul
mov
xor
sub
mov
sbb
idivb
jno
or
jle
adc
adc
hlt
enter
ret
dec
mov
pop
push
loop
adc
js
outsb
mov
mov
flds
out
sub
int3
jne
jg
mov
inc
mov
shlb
je
pushl
sbb
add
in
push
stos
loopne
subl
pop
cmp
or
add
lret
dec
shl
out
lret
je
or
pop
lods
sahf
cs
outsl
adc
jnp
add
push
xor
xchg
imul
aam
cmp
shll
jl
or
shr
div
push
sbb
gs
cwtl
push
aad
scas
clc
test
loop
lods
and
out
xor
je
popf
lock
mov
std
test
fucomip
pop
or
mov
ja
inc
pop
mov
pop
push
test
jl
mov
hlt
adc
outsb
imul
mov
push
pop
inc
int
sub
mov
push
scas
fists
xchg
loope
mov
mov
jne
lret
mov
cmpsb
mov
movb
dec
mov
data16
shlb
inc
mov
int3
cmp
xchg
add
shrl
cltd
cli
inc
out
jno
inc
sbb
icebp
out
fwait
sbb
mulb
or
jp
jns
cmc
inc
repnz
push
pop
mov
sahf
bound
das
outsl
pop
rol
ljmp
and
mov
pop
inc
mov
lods
stc
negb
stos
sub
adc
adc
push
popf
fs
lods
mov
cmp
jl
mov
mov
mov
push
jbe
jp
mov
enter
into
rcrb
sub
jg
stos
cmp
insl
mov
lcall
mov
pop
leave
sbb
xor
pop
arpl
xchg
shlb
mov
int
mov
out
ficomps
jnp
sbb
add
icebp
stos
cmp
sub
jns
or
lods
insb
mov
xchg
jle
pusha
inc
inc
adcb
stc
leave
ja
outsb
imul
xchg
lcall
arpl
aas
sub
stc
mov
lock
mov
pop
rcrb
pop
aaa
ds
pusha
or
outsl
negl
inc
dec
dec
mov
inc
add
jp
dec
pop
and
gs
lretw
ret
xor
pop
inc
xor
es
loop
push
cld
fcmovnbe
mov
or
leave
enter
xlat
aad
and
clc
cmp
adcl
cmp
outsl
xchg
cmp
test
xchg
and
mov
add
ret
lock
xor
mov
aaa
lret
sub
into
push
movsb
fstpt
int
jle
pop
pop
xchg
mov
cli
adc
int
sub
pusha
pop
cmp
jns
iret
fwait
and
mov
sbb
sarl
inc
jmp
cmp
fwait
adc
xor
push
movsb
js
pusha
dec
loope
out
mov
mov
cltd
jg
inc
rclb
ljmp
rorl
jge
xor
idivb
pop
les
mov
dec
cmpsl
cmp
mov
mov
mov
xchg
loop
push
or
jl
es
cs
cltd
addr16
jo
cmpsb
xchg
adc
jne
pop
cmp
test
mov
pop
sub
stos
ljmp
into
cli
sarl
dec
mov
pop
shl
cmc
pop
inc
sbb
xchg
enter
sahf
mov
pop
xlat
dec
xor
add
pushf
push
and
xlat
push
mov
sbb
es
jle
es
push
mov
jae
testl
fcompl
xchg
lahf
xor
and
and
mov
pop
mov
adc
add
xchg
pop
mov
iret
cltd
push
subb
jb
and
repz
bound
xchg
dec
pop
daa
aad
outsb
daa
push
es
mov
sarb
mov
sbb
adc
push
test
insl
mov
and
jle
sbb
in
sub
cmp
jg
stos
jo
inc
ret
and
lock
mov
in
movsl
rcll
mov
std
inc
andl
imul
jecxz
out
fwait
and
repz
std
xor
push
xlat
scas
mov
stos
insb
enter
pop
in
jp
nop
adc
pop
mov
xor
cwtl
lcall
dec
jae
in
fsubl
dec
sub
ret
les
mov
gs
arpl
in
jmp
fidivrs
inc
sub
outsl
dec
sbb
pop
subb
mov
jge
nop
cmp
dec
icebp
sub
adc
rorb
push
pusha
pop
je
in
dec
movsb
cmp
add
jl
mov
fisubs
in
pop
mov
roll
fdivl
sub
xor
ret
dec
pop
mov
xchg
adc
xor
movsl
test
mov
sbb
sub
pop
sti
das
and
push
push
mov
jno
jb
mov
jb
ret
aam
add
add
call
adc
lock
and
fst
popf
addr16
call
test
xor
dec
dec
mov
rcll
clc
jns
pop
mov
or
xor
fdivs
xor
add
iret
jae
lret
mov
das
call
xchg
jo
push
mov
js
stos
aam
das
insl
add
das
pop
mov
das
push
and
cmpsb
mov
ret
mov
leave
cs
mov
push
mov
push
stos
inc
inc
stos
in
cmpsb
mov
mov
stos
push
sub
pop
cmc
or
aaa
adc
in
xor
mov
lea
sub
in
xchg
inc
cmc
sub
cmp
lods
or
sub
mov
pusha
loop
ss
loope
stc
mov
mov
mov
shlb
stos
xchg
xor
mov
frstor
lcall
iret
push
add
loope
inc
je
mov
dec
mov
xor
jmp
push
sbb
adc
addr16
sbb
andl
leave
pop
push
fmull
push
dec
sbb
ror
ljmp
jno
cmc
scas
push
imul
sub
push
les
cmp
inc
cmp
mov
add
sar
ret
cmc
mov
mov
dec
pop
cmp
mov
insb
hlt
sub
lods
orl
dec
dec
in
jmp
xchg
sub
fnstenv
inc
rorl
cmp
sbb
sti
pop
jg
bound
xchg
xchg
hlt
cmp
sub
dec
adc
repz
call
pop
pop
add
sbb
cmp
in
and
shlb
into
pop
fcomps
push
daa
cli
out
jp
push
push
testl
insb
and
and
aas
mov
adc
int3
fidivrl
sub
push
xor
cmp
xor
cmpsl
push
shrl
pop
jl
jo
mov
sbb
cs
sbb
mov
movsb
cmp
aam
jg,pn
and
fs
lods
fisttpl
popf
aad
rcrb
mov
daa
mov
cmp
xor
lods
call
das
into
adc
mov
rcl
repnz
or
dec
push
lds
shl
cli
insl
cmp
jl
inc
add
cmp
push
test
add
and
dec
cmpsl
pop
sbb
stos
cwtl
out
jg
mov
testb
daa
test
mov
push
fistps
lahf
add
pop
fldenv
pop
cs
push
ret
aaa
sbb
mov
mov
clc
gs
sbb
mov
sub
xchg
data16
pusha
adc
dec
out
push
testb
add
ficoml
orl
rcl
adcb
jne
mov
lea
shll
pop
mov
popf
push
jl
push
sbb
jecxz
repz
call
mov
inc
adc
cld
jg
push
push
xor
sbbb
repnz
and
mov
jno
mov
int
roll
out
cmp
or
fabs
jg
xor
sahf
or
inc
adc
or
stc
fincstp
pop
loop
xchg
dec
mov
outsb
push
xchg
jecxz
or
icebp
aam
sbb
jmp
jle
mov
js,pt
mov
rolb
xchg
push
jg
sbb
mov
mov
jecxz
sub
mov
outsb
lahf
lea
lahf
mov
scas
xchg
push
jmp
and
or
mov
out
jl
dec
pop
xchg
outsl
sub
mov
lcall
or
loop
jp
shlb
icebp
sub
and
jbe
and
sti
std
sub
dec
mov
xor
fimuls
out
icebp
push
mov
sbb
imull
testb
push
push
movsl
xor
out
pop
fwait
es
bound
inc
mov
adc
jae
arpl
add
cmc
test
mov
mov
jge
in
lret
cwtl
fwait
popa
imul
mov
fwait
add
xchg
inc
add
movsl
insl
aad
mov
or
loope
outsb
adc
mov
or
aad
insb
sub
lock
jb
push
inc
clc
js
xor
lret
lea
lds
xchg
mov
or
popf
or
mov
sbb
xor
lods
mov
sub
dec
cld
mov
lahf
dec
out
in
mov
xlat
loop
imul
add
jno
ret
subb
sbb
out
mov
fildll
rcll
outsb
xchg
xchg
xor
sub
sub
or
xor
dec
pop
add
xchg
mov
sbb
ds
jge
movsb
ror
aam
sub
mov
sahf
push
or
push
sub
popf
jmp
dec
or
xchg
loopne
push
lods
orb
cmp
inc
sub
push
push
fsubrl
jl
push
imul
or
outsl
and
xor
inc
jns
bnd
sbb
in
mov
xchg
in
cld
imul
push
adc
cld
inc
or
cs
dec
ljmp
mov
mov
pop
fmull
add
test
mov
in
pop
lcall
lahf
scas
cmpsl
adc
mov
out
pop
nop
mov
mov
in
sbb
shl
lret
das
push
movsb
mov
xchg
mov
mov
loope
add
sbb
mov
xchg
mov
outsl
jge
fistpl
popf
out
fnstenv
stos
xor
test
push
add
test
ret
int3
dec
adc
ret
adc
or
stc
scas
mov
pop
mov
aam
icebp
loop
sub
jae
cmpsb
lock
lret
adc
shrl
outsl
mov
mov
dec
sbb
cmp
mov
daa
sti
ja
cmp
ja
out
cmp
push
sbb
lods
stc
out
pusha
xchg
pop
mov
das
mov
pop
enter
cmp
add
lahf
fcoml
push
test
mov
xlat
enter
mov
mov
mov
in
inc
or
add
pminsw
jne
int
cmp
cmpsl
pop
lock
cmpsb
imul
std
arpl
xor
jge
je
mov
pop
or
scas
mov
es
fistps
push
and
out
dec
cltd
out
repnz
dec
mov
gs
fs
adc
popf
nop
out
xchg
cmp
dec
jmp
popf
ja
push
or
arpl
inc
fwait
aaa
fwait
jp
les
push
or
shll
jecxz
cmc
lahf
test
mov
mov
push
mov
insl
dec
xor
pop
test
stos
add
mov
push
and
mov
popf
push
ja
scas
hlt
jmp
inc
mov
sub
xchg
fwait
dec
negb
in
pop
lods
mov
sysenter
and
sbb
xchg
popf
push
jecxz
nop
mov
out
mov
in
sbb
mov
add
pushf
aaa
lcall
fists
mov
inc
je
cmp
mov
jg
loope
push
push
add
mov
insl
icebp
aaa
xchg
cwtl
loope
jo
mov
jne
data16
add
push
jg
and
sub
das
ds
call
inc
adc
out
or
lods
xchg
push
pop
lret
push
out
mov
mov
popa
imul
or
add
sbb
aas
pop
lcall
add
out
add
xor
scas
fisubrl
nop
mov
jns
leave
cmpb
movsb
mov
mov
enter
or
inc
cli
dec
bound
bound
push
and
clc
cmpsb
sbb
push
out
out
mov
mov
je
xchg
in
mov
ss
sub
inc
cmpsb
inc
and
dec
sbb
mov
cltd
sbb
das
loopne
pop
popa
call
mov
pusha
test
mov
add
dec
insb
mov
clc
pop
fwait
jl
xor
jne
dec
sbb
lahf
das
xlat
ret
ret
scas
mov
ss
mov
mov
inc
sahf
push
gs
push
pushl
dec
arpl
xor
jb
aas
mov
insb
sbb
lock
push
adc
fadd
sub
aad
andb
xor
sbb
sub
ret
mov
xor
aaa
bound
fsubs
jmp
popa
stos
aam
mov
pop
dec
dec
outsl
sub
aaa
int
xor
push
lret
sbb
push
mov
mov
lcall
mov
sarl
pop
pop
rcll
int3
cld
push
or
push
mov
mov
mov
addr16
and
pop
push
xchg
inc
cmp
insl
std
movsb
cmp
mov
push
bound
ret
clc
xchg
fmuls
repnz
mov
lods
rcr
cld
pop
ret
mov
jle
outsl
pslld
int
out
lcall
jne
cld
jo
arpl
mov
sub
push
dec
dec
or
push
cmp
add
push
sbb
faddl
test
xor
sub
fst
push
test
mov
sub
cmp
mov
repnz
sbb
jmp
add
jge
jecxz
nop
js
leave
mov
popf
mov
mov
int3
dec
inc
add
scas
test
adc
cmc
rcrl
outsb
mov
stos
sbb
imul
or
sbb
xchg
inc
mull
jns
iret
pop
out
movsb
adcl
cld
cmp
ljmp
lahf
nop
sub
inc
movsb
mov
push
mov
xor
movsl
mov
clc
ficomps
fisttps
leave
js
jp
js
mov
lods
cmp
dec
les
cmp
bnd
out
jb
xchg
xchg
into
aaa
jb
push
or
mov
xchg
mov
pop
jle
xchg
int3
bound
mov
cmp
cld
out
dec
mov
mov
fcmovne
mov
xor
icebp
rorl
ret
rclb
adc
scas
out
mov
mov
cmc
fstl
pusha
mov
nop
mov
fcompl
mov
mov
notb
fmull
cmp
andl
dec
lcall
int3
mov
pop
iret
inc
or
inc
iret
subb
push
outsb
dec
in
ss
call
lock
and
jb
clc
lcall
push
insl
dec
cwtl
lcall
ljmp
push
repz
sbb
test
loope
leave
add
popf
sub
inc
aam
mov
repz
ljmp
jae
in
xlat
pop
sub
add
popf
jo
call
rcrb
mov
dec
push
jnp
pop
xchg
movsb
jle
mov
int3
daa
and
cli
mov
push
mov
and
push
ret
test
mov
jmp
rorl
pop
xchg
fwait
nop
mov
fcompl
xchg
je
jns
cmc
das
lret
andl
push
pop
jo
xchg
dec
enter
mov
dec
ret
fidivrs
push
sti
pop
nop
pop
mov
in
out
jb
jmp
mov
pop
ja
push
mov
in
out
adc
jns
push
enter
sarl
repnz
mov
aaa
and
add
out
xchg
pop
mov
fidivrl
icebp
ljmp
sysret
aaa
xor
ljmp
mov
dec
mov
outsb
xor
cmp
repnz
dec
inc
or
xlat
stos
aas
je
sub
pop
nop
lret
mov
mov
mov
test
stc
test
daa
xchg
push
jmp
imul
xchg
scas
fadds
mov
mov
rol
mov
hlt
add
mov
fisttpl
cmc
mov
cmpsl
push
pop
sub
xor
addb
add
inc
ja
jnp
aas
jg
mov
pop
xchg
out
aas
jae
or
sub
test
dec
xor
pusha
mov
mov
aad
sub
xchg
mov
dec
out
out
jns
mov
or
cmpsl
add
test
mov
and
inc
insl
cmpsl
std
xchg
xchg
and
mov
sub
cmp
scas
fcomps
xor
lahf
bound
cmpl
mov
inc
mov
mov
addl
xor
sub
popa
pushf
test
adc
xchg
xchg
sub
inc
pop
ds
repnz
adc
insb
cmc
pop
fldcw
adc
in
xchg
add
and
fwait
loop
aas
mov
inc
and
dec
pop
ret
jae
or
cmp
clc
stos
jle
sti
lret
shlb
loopne
lahf
iret
lods
lea
cmc
lods
inc
push
loopne
adcb
push
testb
imul
sbb
push
cmp
push
xorb
fistps
sbb
mov
add
and
outsl
inc
outsl
add
mov
cmp
iret
cmp
sti
das
and
dec
mov
aam
dec
and
pop
cltd
inc
ret
sub
push
sbb
cld
adc
add
xorl
outsb
lods
dec
ss
adc
mov
cmp
cmp
dec
outsb
sbb
mov
pusha
xchg
inc
out
xchg
insl
add
or
add
mov
rclb
dec
repz
cs
push
jg
repz
lods
push
pop
int
call
and
mov
movsl
mov
outsb
aas
bnd
sar
sbb
lods
mov
or
sub
mov
xchg
mov
xlat
loope
cmc
sbb
divl
or
out
jnp
inc
inc
pop
dec
push
cmc
nop
loopne
inc
sub
pop
mov
inc
fcomi
push
mov
repnz
xchg
mov
dec
mov
push
add
inc
daa
outsl
sbb
push
lods
addl
rorb
lods
cwtl
mov
pop
cs
jnp
add
sub
test
les
es
test
inc
ss
cmpl
jecxz
in
adc
inc
test
cmp
dec
sub
mov
jg
loopne
int3
pop
lods
sub
orb
jo
jae
and
test
mov
pushf
mov
mov
out
out
jns
out
lods
mov
xchg
stos
mov
das
jns
inc
xchg
into
cli
hlt
es
ret
andl
and
data16
ss
pop
fnstenv
movl
sub
fidivrs
mov
push
fs
fucom
xor
cmpl
push
sub
je
mov
dec
cmpl
mov
xchg
stos
jo
jae
cmp
xor
pop
lods
xchg
dec
add
push
aaa
addr16
dec
pop
ficoms
fists
addb
jnp
je
sahf
adc
je
push
in
xlat
cwtl
cld
adc
stos
incb
xor
movsl
cmp
lahf
or
or
insb
push
adcl
mov
dec
push
fwait
xchg
or
inc
push
stos
jns
adc
inc
ret
push
incl
sbbb
sub
and
test
in
lea
popf
adc
sbb
mov
call
pop
popf
lock
and
pop
out
jo
push
inc
push
jl
dec
xor
aam
inc
push
cmpb
ljmp
fists
pop
fs
mov
xor
xchg
leave
fnstcw
pop
and
jno
adc
movsb
mov
movsl
fidivrs
jns
jo
pop
xor
push
pop
jg
jmp
popf
nop
push
sbb
icebp
stos
dec
ja
xor
mov
ss
xchg
jnp
xchg
std
jno
lcall
fistpl
sti
adc
jmp
inc
push
cmp
shrl
sub
shlb
fs
imul
pop
push
add
icebp
mov
mov
inc
jbe
stos
rorb
test
mov
push
movsb
ret
xchg
or
adc
stc
mov
ds
push
mov
idivl
call
dec
xor
sub
mov
pop
dec
jns,pt
xchg
dec
in
fnsave
lcall
hlt
push
jg
insb
pop
fistpl
pop
add
sub
aam
dec
mov
andl
cli
loopne
mov
adc
mov
push
outsl
push
je
adc
negb
enter
ret
loope
xor
mov
shlb
inc
cmp
in
dec
iret
ret
add
xchg
push
scas
mov
dec
xchg
scas
adc
jns
dec
push
fistps
sub
xor
mov
mov
lret
sbb
jmp
imul
and
add
test
mov
icebp
xor
pop
or
mov
movsl
add
push
mov
xchg
fnstenv
out
mov
pop
data16
mov
fdivr
pop
out
xchg
in
push
std
pop
sbb
pop
or
aad
jbe
push
xor
je
nop
add
ss
ss
pushf
sbbl
mov
pop
into
fildl
movsl
iret
push
fwait
pop
jmp
lcall
cmp
sbb
leave
fsubrl
in
adc
sub
mov
movsb
add
sub
xor
shr
push
aaa
xor
adc
or
mov
and
adc
or
sti
jae
fisubl
or
testb
add
stc
push
hlt
and
cli
mov
lods
push
add
pop
fwait
or
push
mov
add
pop
mov
faddl
jg
add
out
lods
leave
dec
cmpsl
mov
fs
movsb
xchg
ret
xlat
dec
xor
sub
testb
test
or
mov
std
xor
into
test
sbb
adc
pop
ljmp
sub
push
mov
out
xchg
mov
clc
in
lcall
mov
lahf
je
xchg
jns
mov
aas
aam
std
sub
xchg
mov
movsb
xlat
mov
add
jp
dec
mov
inc
shlb
lods
pop
sbb
push
and
push
insl
lret
pop
ds
mov
movsw
mov
and
inc
dec
add
push
cmp
or
mov
leave
xor
dec
mov
call
push
adc
mov
xchg
inc
jae
jp
xlat
pop
lods
sbb
push
pop
adc
rcrl
xlat
pop
out
arpl
loopne
cwtl
cmp
lods
cmp
outsl
movsl
shll
jmp
push
adc
gs
adcl
lds
push
std
out
std
ds
push
push
inc
add
mov
mov
dec
adc
add
orl
mov
pop
xor
ret
dec
and
das
and
inc
jmp
dec
filds
sbb
lods
xchg
outsl
push
outsb
inc
xchg
mov
mov
outsl
xchg
imul
ljmp
push
out
inc
sub
dec
cmpsb
mov
push
lret
jb
aad
dec
or
ljmp
pop
mov
icebp
mov
xlat
out
cmp
shrl
in
lods
dec
aaa
push
psubb
decb
mov
scas
xchg
dec
ret
jge
rcrb
push
and
es
xchg
jp
pextrw
mov
xchg
sub
fisttps
popf
ret
dec
mov
push
lret
or
insl
mov
mov
inc
aaa
arpl
ljmp
xor
js
or
scas
or
ficoml
xor
adc
cmp
nop
lcall
jecxz
jb
test
insb
cmc
les
enter
ficomps
jns
popf
out
pop
sub
jle
lods
or
sti
mov
jp
imul
xchg
out
dec
or
nop
dec
sbb
cld
outsb
pop
mov
push
out
aam
iret
pop
xchg
iret
fyl2xp1
sarl
jl
or
pop
adc
in
in
dec
cwtl
jne
pop
mov
lret
xchg
shlb
jl
sbb
rolb
push
xor
ret
lret
shrl
in
pop
mov
mov
out
adc
clc
jl
cs
es
jmp
inc
xchg
mov
cmp
lcall
and
aam
sub
fwait
mov
out
arpl
xlat
lahf
mov
out
aad
and
sahf
mov
andl
mov
mov
out
fimuls
jo
pop
in
xchg
sub
dec
bound
or
jb
popa
mov
testl
leave
test
cmovne
out
mov
fnsave
adc
bound
sbb
gs
sbb
loope
xchg
aam
je
push
cmp
dec
sbb
fsubl
inc
addr16
fnstcw
popf
push
push
and
mov
inc
xor
fstpt
aam
adcl
inc
aaa
sub
ret
push
enter
mov
push
arpl
cmp
rcll
movsb
inc
in
imul
lods
push
data16
sub
movsb
clc
addr16
mov
not
popa
jp
xor
das
or
ja
aas
xor
adc
mov
push
cmc
cmp
ds
sub
loope
rcrl
mov
roll
xchg
test
pop
push
dec
pop
mov
cmp
aad
add
and
inc
sub
in
jo
test
sub
sahf
add
movsb
xor
adc
out
xchg
in
nop
rorl
fstpt
adc
push
pop
bound
xchg
mov
dec
jbe
fcomps
mov
lods
xchg
xlat
dec
lods
xor
loope
fnsave
mov
mov
dec
movsl
adc
xchg
lcall
mov
mov
fisubs
shll
in
sbb
xor
mov
test
mov
add
mov
and
push
mov
pop
dec
add
mov
out
pop
sub
xor
outsb
jnp
mov
xor
loope
dec
addb
fsts
and
daa
mov
mov
testb
dec
xchg
or
sub
push
sub
jne
add
push
test
das
rorl
sbb
sub
daa
mov
pop
mov
push
fistps
inc
inc
cmp
mov
push
xchg
negb
and
movsl
popa
ljmp
fisttps
adc
mov
aam
gs
les
addr16
sbb
push
mov
mov
imul
fisubs
ror
push
mov
int
arpl
icebp
das
xchg
cmpsl
mov
fnstsw
int
ljmp
and
jns
adc
adc
stos
jae
dec
stc
jnp
sub
lret
xor
inc
data16
push
add
sahf
lea
mov
fwait
adc
mov
ljmp
aam
stc
mov
push
pop
push
in
add
fldt
push
pop
cwtl
outsb
cmp
lods
cwtl
push
push
mov
lahf
mov
inc
and
imul
les
repz
std
dec
cmp
in
push
xchg
sbb
out
loop
jo
adc
imul
cmp
add
lea
fisubs
shll
dec
or
cmpsl
out
ficoml
fwait
adc
sbb
pusha
mov
dec
push
repnz
lock
sar
scas
push
subb
insl
cmp
out
or
xlat
jb
test
cmp
pop
jns
test
mov
add
out
popa
adc
cmp
push
ds
jle
adc
jo
lods
mov
lcall
shlb
fnstenv
or
mov
xchg
ljmp
fsubrs
dec
cmpsl
inc
std
lods
mov
cmp
adc
sub
mov
xchg
cwtl
jo
jns
mov
bound
lock
sub
inc
lcall
fdivr
adc
dec
inc
or
ficoms
and
adc
pop
hlt
jge
in
xor
std
push
push
xor
fisubs
xchg
xchg
cltd
xorb
xchg
cmpsl
xchg
rclb
daa
sub
mov
aad
sub
idivl
pop
dec
dec
stos
dec
leave
jo
notb
mov
mov
lcall
and
push
ljmp
sub
pop
cltd
cmp
xor
sbb
subb
xchg
dec
cmp
and
stc
xchg
rcl
aaa
mov
icebp
enter
and
dec
clc
push
dec
mov
add
daa
outsb
push
sub
iret
add
cmpsb
and
test
jno
add
pop
lods
pop
mov
inc
dec
cmp
cmp
mov
xchg
rcrl
jg
imul
lods
bound
out
paddsb
jl
negb
mov
cld
inc
clc
add
fwait
push
es
mov
stc
xor
sub
repnz
pusha
pushf
fcmovne
jne
mov
mov
nop
cmpsb
pop
pop
aaa
sbb
mov
pusha
daa
sub
daa
sbb
inc
ret
cmp
mov
jbe
ljmp
mov
xchg
or
je
idivl
ret
out
ficoms
repz
mov
mov
mov
sahf
jb
or
cmp
pop
push
push
and
dec
inc
ret
andb
cmpb
sub
jmp
mov
xor
or
lcall
sub
sbb
lcall
and
pusha
sbb
pop
jecxz
std
jle
pop
mov
xlat
lock
dec
out
testl
xchg
negb
push
aas
les
mov
xor
mov
mov
std
sti
lods
lcall
pop
jbe
bound
repz
push
mov
enter
popa
imul
xchg
shrb
sub
jo
popf
pop
pop
fbld
sbb
lret
cmc
inc
add
dec
xchg
xlat
xor
test
mov
jae
nop
sbb
push
xor
into
dec
xchg
xor
ja
idivl
ud0
imulb
addr16
cld
int
sbb
ja
repz
adc
push
stos
inc
push
daa
shrl
sbb
dec
shr
into
adc
xchg
pop
icebp
xchg
dec
xor
add
inc
mov
push
xchg
pop
repz
mov
or
mov
lods
jg
out
and
pop
pusha
mov
xor
push
arpl
adc
clc
mov
insb
stc
pop
xor
mov
sbb
cwtl
pop
es
mov
jae
test
fdivrp
cmpsl
cmp
outsb
cmpsl
daa
mov
sub
loop
data16
out
jo
xchg
cmp
lcall
inc
test
adc
or
scas
std
int
inc
aaa
enter
jmp
or
and
gs
add
mov
jge
mov
dec
stc
in
pop
cmp
pop
dec
mov
sub
mov
loopne
xor
lock
fbstp
or
mov
clc
test
scas
xchg
cmp
fstpl
pop
mov
sub
xorl
dec
mov
jae
cmpsl
std
sub
xlat
std
add
push
cmpsb
jne
loope
xor
mov
iret
add
psllq
cli
dec
dec
std
out
mov
adc
push
sub
faddl
sbb
push
mov
cld
jl
mov
inc
shrb
add
cmp
push
sahf
xchg
fmuls
push
dec
jns
repz
fmuls
xchg
pop
cmp
popa
push
pop
mov
pop
mov
push
xor
push
cmpsl
mov
scas
jmp
push
push
xor
cmp
mov
cltd
push
mov
cmp
jge
lea
add
popa
sarl
or
int3
mov
inc
xchg
mov
fsubl
or
cwtl
mov
dec
fistl
leave
in
mov
cwtl
movsl
mov
mov
jns
mov
aad
lds
add
rcl
fcoml
mov
enter
sbb
stos
arpl
lea
jp
sub
sti
mov
imul
mov
repnz
and
ljmp
pop
popa
jecxz
sahf
adc
fnstsw
cmp
jl
cs
orb
dec
out
clc
iret
mov
pop
cmp
mov
mov
xor
leave
repz
mov
shrb
nop
ljmp
inc
pop
push
push
lods
cs
es
cmp
stc
adc
pop
mov
push
xchg
sbb
or
in
sub
pop
int
std
dec
addr16
or
mov
inc
dec
push
incb
jmp
xor
outsb
push
dec
mov
or
lret
pop
jb
and
mov
cmpb
mov
mov
test
cmp
inc
push
push
add
mov
xchg
xchg
add
loope
fcmovnbe
mov
mov
test
inc
mov
push
sbb
push
xchg
mov
stos
loopne
dec
loopne
std
push
clc
in
mov
sbb
nop
lahf
call
sub
pop
test
mov
data16
mov
enter
pusha
not
push
roll
cmc
fidivrs
or
sbb
lods
cmp
cmp
xchg
sub
loopne
ud1
sbb
add
pushf
addr16
sbb
enter
inc
mov
sbb
pop
mov
pop
rcr
hlt
lods
cs
out
sub
fsubrl
xlat
inc
adcl
and
andb
cli
fistps
cmp
pop
push
pop
dec
inc
adc
je
cmp
lahf
incb
loop
push
cmp
out
jb
jecxz
in
ss
stc
jle
mov
xor
push
lods
mov
imul
mov
imul
and
mov
cmp
jae
out
std
jnp
ds
or
mov
push
xchg
std
mov
popf
icebp
mov
dec
int3
nop
xor
in
cli
inc
stos
ret
pop
dec
push
adc
cmc
in
sbb
in
ja
outsl
inc
cs
fiaddl
and
and
or
sub
lods
sbb
dec
mov
mov
and
cld
es
push
call
fwait
mov
mov
jmp
xor
test
push
xchg
in
jae
mov
call
aas
stc
cwtl
and
inc
test
addr16
sbb
int
loop
and
mov
cmp
pop
or
xlat
jmp
and
sti
leave
lahf
and
sub
in
fmuls
inc
aam
inc
cmp
xchg
fisttpl
js
inc
or
lret
icebp
xchg
lds
dec
and
adc
nop
sbb
pop
inc
pop
inc
test
std
iret
fnstcw
ja
aad
cmp
jl
push
sbb
fisttps
xor
add
lods
sub
insl
adc
out
cli
repnz
mov
pop
add
lods
fistpl
pop
ficompl
cltd
jg
xchg
shrb
xchg
push
les
out
and
inc
popf
mov
sbb
or
mov
jne
mov
inc
neg
out
inc
sahf
daa
mov
mov
sarl
mov
ficoms
negl
xchg
nop
lock
incb
adc
xchg
into
dec
negb
jl
or
mov
iret
dec
cs
dec
add
xor
xchg
mov
fsub
mov
test
ja
icebp
dec
loopne
and
adc
les
push
fwait
dec
in
jmp
xor
pop
mov
imul
inc
fwait
pop
js
in
in
mov
cmp
mov
es
sbb
clc
pop
pop
in
xlat
mov
in
sti
and
loopne
fisubrl
or
cmpsb
and
or
cmp
jae
ds
lahf
daa
out
sbb
push
adc
and
fsub
lret
lock
xchg
in
mov
sub
into
sbb
push
pop
cmp
arpl
xchg
int3
hlt
pop
sbb
jno
fmulp
sti
popa
and
mov
sub
xchg
xchg
lods
arpl
pop
lahf
inc
stc
rcrb
andb
orb
mov
popf
jbe
dec
inc
cltd
les
adc
fcmovbe
fbstp
pop
mov
xadd
adc
or
shlb
stos
mov
inc
mov
aad
xor
rol
int
stos
ljmp
int
mov
shll
enter
jecxz
mov
adc
xor
and
mov
cmc
ss
cmpsl
pop
xchg
scas
dec
and
ds
and
clc
mov
xchg
jl
mov
jno
out
dec
jl
adc
lret
push
nop
xor
push
movsb
leave
insb
sbb
push
mov
push
sbb
mov
xor
push
inc
ds
xchg
and
xchg
lds
ja
arpl
clc
and
mov
sbb
cmpsl
adc
jb
sbb
jmp
inc
mov
pop
js
or
mov
leave
mov
in
xorl
outsl
mov
shrb
mov
push
sbb
mov
xchg
and
mov
and
mulb
data16
xor
neg
outsl
movsb
lods
sbb
xchg
xchg
aaa
or
pop
cmp
adc
adc
push
cmc
ffree
fidivl
sub
mov
mov
jl
cmp
xchg
mov
in
push
mov
inc
xchg
push
jo
mov
dec
mov
inc
mov
xor
pop
mov
push
dec
mov
ss
adc
sbb
jnp
mov
je
test
cmpsb
jp
fwait
or
xor
xchg
loopne
not
mov
lods
jns
inc
cld
dec
mov
sub
xchg
push
inc
in
add
mov
sub
jmp
fsubl
adc
aaa
cltd
lods
outsb
push
mov
movl
push
sti
aaa
jns
xchg
cmc
jl
and
enter
add
repz
je
add
test
push
jp
pop
or
pop
inc
mov
mov
ss
addr16
jo
vzeroall
cli
or
cli
and
or
xor
repnz
fdivrs
jl
mov
mov
adc
cli
and
pop
aad
adc
fldl
ljmp
adc
lcall
pop
push
das
stos
mov
pop
add
add
subl
mov
std
in
es
mov
data16
test
fimuls
test
arpl
ret
jae
sub
mov
fcomps
mov
sbb
mov
ret
insb
es
jp
jmp
gs
lods
fwait
cmp
dec
sbb
shl
jmp
xchg
cmpsl
es
jb
bound
fwait
jns
mov
push
test
in
into
adc
stc
xor
jne
inc
shlb
mov
adc
mov
jl
or
cmp
and
je
roll
xor
lds
filds
aas
fwait
inc
mov
xchg
in
or
pop
mov
lea
jge
pop
xchg
mov
sbb
inc
sub
test
aaa
pop
stos
dec
add
test
and
push
xchg
push
idivl
in
add
cmpsl
out
pop
push
xchg
je
call
mov
push
add
mov
mov
pop
std
adc
and
jge
push
loopne
pusha
inc
das
das
pop
and
push
pop
insb
leave
movq
push
dec
pop
call
lods
mov
es
cli
incb
xchg
jb
sbb
seto
imull
repz
inc
or
adc
sbbb
out
ds
sub
fiaddl
f2xm1
cmc
add
testl
jl
ret
sbb
pop
imul
jle
jne
dec
xchg
jbe
sbb
push
aas
inc
mov
lcall
btc
stc
das
aaa
lods
movswl
repnz
dec
insl
push
sbb
sbb
int
call
mov
shlb
xchg
and
test
mov
jmp
mov
imul
loope
pop
sub
inc
inc
or
iret
mov
cmp
add
imul
jne
pop
lea
rolb
push
add
dec
mov
fdivr
ljmp
xor
lret
jae
out
into
xchg
lock
or
jae
mov
sbb
add
subl
addr16
nop
inc
cli
sub
fsubr
push
push
out
inc
adc
mov
popa
outsl
xchg
setae
mov
fisubrl
xor
gs
dec
js
push
dec
jno
arpl
and
push
mov
sahf
rorb
xor
jnp
xchg
or
lret
ds
mov
pusha
add
mov
sub
push
mull
or
std
inc
adc
xor
mov
stos
jp
or
pop
das
cmp
mov
hlt
adc
test
divl
loope
repnz
mov
xchg
shlb
or
add
mov
adc
dec
notl
popf
pushf
popa
fs
jl
gs
mov
mov
loop
sti
add
jnp
pushf
push
xor
jmp
push
sbb
icebp
imul
outsl
fbld
cli
aam
in
scas
insb
pop
dec
clc
repnz
dec
add
mov
cli
in
push
pop
adc
or
int
outsl
call
push
sarb
icebp
movsl
jge
ret
shll
lret
mov
xor
ja
cmp
push
and
sub
test
sbb
xchg
iret
mov
mov
ret
pusha
cmpsb
addr16
mov
pop
cmp
lods
pop
stos
xchg
jmp
repz
jle
adc
sarb
push
xor
dec
icebp
push
mov
cmp
dec
xchg
xor
outsb
push
adc
popa
add
push
cltd
push
jl
inc
inc
mov
cmc
push
adc
mov
repnz
mov
mov
sub
sbb
push
dec
sti
stos
std
or
fldl
mov
jne
loope
mov
dec
mov
sbb
pusha
pushf
push
out
xor
push
out
daa
jmp
fs
aaa
or
test
fs
and
gs
sub
mov
rcrl
cld
lcall
and
outsl
jmp
bound
lcall
sub
mov
jg
adc
adc
pushf
adc
add
mov
je
push
lcall
add
xchg
lret
dec
add
mov
fs
add
xchg
cwtl
subb
adc
jno
push
dec
xchg
add
xchg
movsl
jmp
push
push
add
push
xchg
call
jmp
fwait
inc
dec
out
and
fidivrs
mov
movl
pop
jae
pop
dec
cmpsb
push
aas
imul
fwait
push
mov
aas
pop
aaa
je
xchg
sbb
jno
hlt
dec
jecxz
xchg
or
cmc
sbb
and
sub
pop
sbb
mov
inc
and
addr16
loop
or
cltd
cs
fildll
mov
push
insb
adc
clc
xor
jle
xor
mov
adc
sbb
mov
xor
in
xor
inc
loopne
cwtl
in
in
add
lods
rorl
arpl
sahf
outsl
jg
xor
pop
jge
sbb
fwait
mov
shrb
fwait
pop
xlat
out
cmpsb
jns
xchg
call
inc
iret
mov
adc
mov
adc
xchg
xor
xchg
push
mov
outsl
lods
mov
and
je
add
or
adc
clc
imul
or
cmp
inc
pushf
mov
fnstenv
dec
mov
push
lds
mov
aam
popa
mov
dec
das
and
in
pop
mov
scas
inc
and
int3
mov
push
mulb
cmc
pop
jmp
xchg
xlat
loop
repnz
imul
push
or
push
imul
fwait
cmpl
jns
sub
lcall
lahf
int
push
inc
push
jle
lret
pusha
ljmp
call
negl
push
add
inc
jnp
add
daa
jg
rorl
xchg
sbb
mov
jl
push
imul
add
es
xor
push
sub
rcrb
shrl
inc
addb
aad
inc
test
or
js
pop
test
jae
insb
dec
inc
xor
pop
sarl
jne
lcall
adc
dec
addl
sbb
push
scas
ret
xor
ljmp
xlat
in
mov
test
lods
inc
imul
dec
mov
fldcw
mov
es
dec
cmpsl
and
jno
or
ss
sbb
inc
movsb
shrl
shll
inc
popl
mov
call
push
push
dec
orb
cwtl
sbb
sub
test
mov
iret
or
sub
inc
lahf
lods
xchg
xor
outsb
push
cmpsb
enter
leave
mov
insl
cmp
in
dec
jne
in
fdivrl
dec
fmul
xchg
xor
lods
int3
xchg
xchg
testb
jge
insl
xor
mov
sbb
fdivs
rol
adc
addl
pop
loopne
dec
xorl
pop
or
pop
cmc
sbb
adc
insl
jbe
cmp
or
lret
out
dec
ja
add
jb
cmp
dec
push
mov
and
movsl
fldln2
dec
out
adc
ljmp
lds
mov
and
jne
push
nop
adc
adcl
in
divb
dec
jg
jae
mov
cmp
xor
dec
jno
lods
cmp
inc
insb
fs
dec
pop
inc
mov
or
loopne
lret
xchg
hlt
inc
cmp
jmp
sub
dec
dec
sbb
or
xor
xchg
testb
out
sbb
mov
shll
mov
cli
rorb
push
repz
inc
fidivrs
xor
inc
cs
cmp
mov
push
jo
aaa
cltd
arpl
xor
fbld
cmpsb
imul
pop
xchg
push
incb
in
inc
sbb
in
xchg
sub
ret
or
pushf
push
jge
xchg
int
pop
sbb
pop
adc
or
out
gs
dec
sbb
jno
rorl
pop
ljmp
incl
shrl
rcr
gs
insl
pushf
les
inc
cwtl
lods
sbb
inc
cmp
cmp
rcll
shlb
mov
fldenv
aas
sbbb
stos
or
sbb
test
mov
fists
mov
jnp
ds
or
mov
out
dec
lea
bound
xor
add
jg
mov
xchg
pushf
mov
xchg
in
ss
in
aas
sbb
cmp
cmc
mov
xlat
and
mov
in
mov
adc
ja
fmul
std
andb
xchg
cmpb
pop
xchg
test
mov
sbb
inc
mov
fdivr
out
stos
mov
sbb
and
pop
stos
loopne
adc
outsb
mov
pop
pop
and
push
fnstcw
sub
loop
gs
or
sub
push
xor
add
mov
popa
adc
dec
aad
sub
or
enter
mov
jle
or
xchg
iret
pop
inc
cwtl
fnstcw
test
mov
mov
pop
sub
pop
les
push
jl
adcb
es
sti
and
aad
mov
loopne
jno
xor
mov
nop
cmp
mov
or
push
out
ds
mov
xchg
push
or
jl
or
pop
rcrl
or
testb
mov
int3
add
movsl
xor
fptan
jns
mov
mov
xchg
test
adc
fs
js
mov
mov
sub
fnop
mov
mov
mov
js
push
les
xorb
mov
bound
jle
mov
jne
xchg
xchg
mov
in
fcomip
pop
fxch
adc
adc
in
adc
ds
outsl
add
fmulp
out
pop
mov
sahf
push
dec
and
push
push
repnz
out
and
inc
jae
movsb
es
push
scas
cmp
push
jmp
add
fwait
mov
sbb
fstpt
xor
lret
out
pop
pop
pop
sbb
jbe
adcb
adc
out
mov
cmp
xor
outsl
rol
lea
out
jl
or
mov
pop
inc
popa
cmp
out
stos
repnz
loopne
rorl
cmp
mov
lods
fwait
or
push
rcll
jae
dec
ja
out
adc
adc
and
adc
dec
push
loop
fmull
fidivrs
ret
je
lret
dec
arpl
aas
mov
insl
jno
sub
mov
and
ret
in
or
add
xor
add
jl
outsl
out
mov
add
outsl
outsb
andb
gs
cmp
dec
stos
stos
in
inc
ds
mov
add
pop
mov
cmpsl
mov
sbb
adc
insl
nop
or
mov
cmp
inc
mov
sti
andl
push
mov
cmc
sbb
icebp
xor
js
insb
mov
push
fsubrs
add
jecxz
inc
xor
dec
dec
xor
inc
xchg
sti
add
mov
je
test
mov
dec
dec
lods
fadds
sub
inc
aam
xor
xchg
mov
jae
dec
rcrb
add
push
lods
test
movsb
mov
pusha
and
pushf
in
test
gs
fwait
incl
arpl
lock
je
hlt
dec
gs
inc
xchg
or
imul
test
int3
dec
stc
movsb
cld
sbb
add
jle
sub
scas
cvtdq2ps
neg
xchg
xchg
gs
or
ja
dec
xor
dec
icebp
pop
gs
push
and
scas
cwtl
fnstsw
cs
call
mov
sar
and
or
fbstp
lahf
xor
pop
pop
jmp
jnp
lds
je
pusha
adc
jecxz
sti
adc
jmp
xchg
xor
push
sbb
cmp
rorl
aas
loope
jecxz
cltd
inc
mov
sub
adc
popf
or
adc
or
test
stos
aas
rcll
sbb
outsb
sbb
jbe
sub
mov
sub
push
sub
sub
add
lahf
xchg
sbb
sahf
call
jg
das
cld
adc
maskmovq
testl
adc
push
mov
sbb
sbb
fidivs
ljmp
mov
cli
aam
cmp
dec
jmp
jecxz
shrl
sahf
hlt
or
cmp
ret
dec
fiaddl
add
stc
mov
ret
insl
mov
movsb
clc
mov
or
jecxz
ret
adc
imul
and
addl
cmpsl
xor
mov
inc
mov
cwtl
and
lahf
xchg
push
mov
jmp
repz
pop
pop
add
imul
lds
xchg
subl
addr16
jno
adc
mov
pop
aam
stos
mov
and
sbb
mov
mov
jbe
das
xchg
arpl
in
je
stc
cmp
pop
cli
das
add
fbstp
insb
int
out
into
std
repz
mov
cli
repz
dec
inc
push
add
and
mov
adc
rcl
jnp
jno
push
adc
out
std
push
push
insb
fwait
leave
cmp
or
cmpsb
repz
xchg
mov
mov
xor
stos
popl
fisttpl
sbb
cld
adc
daa
fidivrs
mov
sbb
scas
jecxz
inc
cmc
mov
jle
pop
mov
cmp
or
adc
fmuls
data16
sub
das
dec
test
rol
xor
jl
pop
pop
push
xor
pop
and
les
fmull
push
in
add
pusha
pop
xchg
scas
push
xchg
outsb
test
add
movsl
pop
adc
fidivrs
push
repnz
xchg
sub
fs
mov
pop
mov
cmpsl
push
mov
cltd
pushf
jp
jecxz
nop
movsb
jae
mov
inc
popa
testb
cmp
in
cmp
mov
ss
roll
xchg
jb
xlat
push
push
mov
jmp
mov
cli
cmc
or
cmp
inc
arpl
insb
push
sbb
and
movsl
out
ret
mov
insb
mov
insb
enter
jbe
mov
jecxz
cmpsb
insl
cvttps2pi
popa
cmp
and
and
pop
mov
push
mov
popa
jno
pusha
out
xlat
inc
cmp
in
imul
cwtl
daa
mov
sub
xor
pop
sub
cmp
inc
sahf
xor
add
jg
or
scas
aad
dec
inc
out
sbb
mov
mov
pop
aaa
decl
rolb
out
js
xchg
push
pop
aas
lret
test
jmp
aam
xchg
jnp
fwait
lcall
adc
loop
xchg
mov
lds
xor
scas
lret
xor
addr16
data16
xchg
adc
mov
jnp
jbe
mov
xchg
push
jo
int
xor
and
or
sbb
repz
jp
inc
dec
adc
xor
mov
jmp
pop
div
aam
sub
adc
lcall
into
jae
mov
mov
cmp
rol
out
into
sarb
iret
sub
mov
sbb
sbb
and
cltd
cltd
mov
cmp
add
or
lock
inc
aad
test
insb
test
mov
mov
inc
inc
push
and
adc
aaa
popf
jle
gs
push
daa
mov
push
inc
cmp
sub
sub
xchg
sahf
sub
inc
mov
fcomps
outsb
arpl
std
xchg
jae
cmp
xchg
cld
jmp
negb
add
scas
sub
movsl
outsl
jl
add
scas
and
sub
aam
pop
push
push
pop
ficompl
arpl
notl
mov
rorl
popa
push
inc
sub
and
rcr
out
mov
outsb
or
or
lcall
subl
adc
mov
jno
imul
daa
rcll
mov
iret
ljmp
dec
cmpsb
xchg
sub
jmp
or
aad
adc
xchg
mov
mov
mov
xor
ret
inc
es
and
jge
jecxz
int3
mov
imul
mov
pop
add
rcrl
mov
insl
push
mov
or
jb
dec
div
mov
xchg
jg
pushf
jmp
pop
in
inc
mov
iret
pop
sar
ljmp
inc
xchg
xchg
and
jnp
lods
les
into
inc
pop
xchg
jb
sub
jle
test
sahf
ret
imull
jmp
es
adc
clc
btr
idivb
jg
loop
pop
sub
fsubrl
or
aaa
ss
cmp
movsb
fadd
jns
sub
sbb
jnp
xor
add
pop
rol
scas
xchg
xor
jl
push
xchg
xor
test
test
stos
adc
and
lcall
stos
test
jnp
fs
aam
in
push
jmp
in
jae
ds
sbb
enter
fs
cltd
xor
jge
pushf
frstor
gs
push
jle
sub
mov
sbb
xchg
push
out
adc
sbb
mov
repnz
addr16
mov
xchg
xchg
mov
ss
inc
mov
mov
pop
lds
bound
push
daa
mov
jne
add
imul
jecxz
cltd
mov
inc
or
dec
xor
iret
sub
pop
jle
mov
sub
jo
outsl
jle
jns
mov
pop
adc
lahf
into
sbb
dec
mov
test
out
aas
and
mov
sub
out
pop
call
shr
push
fstpl
sbb
cmp
inc
dec
andl
push
fs
xor
out
imul
cmpsl
ret
ds
pop
daa
dec
push
dec
push
in
xor
push
and
xlat
add
test
sarl
mov
cs
add
xchg
mov
mov
decb
rclb
xchg
popa
faddl
xchg
cmp
xchg
or
mov
cmpsl
jmp
xchg
fwait
loop
inc
mov
and
subb
xorb
ds
mov
je
cmp
push
ljmp
pushw
add
ret
xchg
and
inc
sbb
jbe
xlat
mov
fisubl
sbb
in
push
pop
aam
enter
outsb
lret
fldt
xor
andl
xchg
nop
pop
push
push
jle
popf
xor
fcomip
xlat
jbe
dec
mov
aas
ja
dec
adc
insb
orl
dec
push
jnp
add
cmp
add
dec
adc
stc
push
sub
or
inc
cli
inc
mov
lock
in
dec
cwtl
fsubr
in
push
mull
inc
pop
or
loopne
pop
repz
adc
bound
adc
sub
mov
dec
shrb
jge
inc
cld
cmp
clc
dec
push
lahf
icebp
mov
nop
and
push
inc
sbbb
push
cwtl
jecxz
pop
adc
ret
pop
pop
pop
insb
xchg
mov
mov
fdivl
scas
sub
fidivrs
adc
push
or
jb
xor
std
movsl
rol
subb
cmp
dec
sub
loope
into
jmp
push
xor
dec
insl
pop
xchg
mov
cld
push
jnp
out
leave
add
or
push
cmp
cwtl
shr
pop
cmpsl
in
das
push
jbe
and
push
outsl
pop
xorl
push
pop
and
pop
inc
rcrb
loop
andl
or
cmp
ja
aaa
shl
inc
cltd
pop
pop
adc
mov
inc
rcll
or
jne
dec
jbe
cmp
or
call
push
inc
mov
or
xchg
mulb
jecxz
xchg
fdivrs
pop
out
jne
enter
out
cmp
inc
inc
mov
mov
cs
mov
or
loop
fadds
mov
add
xor
dec
in
jl
or
arpl
and
pushf
xor
pop
outsl
nop
mov
push
cmp
sub
ss
sub
push
leave
push
test
sbb
cli
popa
pop
movsl
ljmp
pusha
mov
jmp
cli
jae
arpl
loopne
out
ss
push
mov
fcoms
dec
imul
dec
pushf
adc
pop
inc
orb
sahf
sub
inc
ja
rolb
stos
or
stos
out
movsb
cs
mov
test
push
or
adc
mov
cwtl
mov
mov
mov
pop
imul
lock
dec
bnd
stos
daa
mov
xchg
mov
int
pop
scas
rorl
nop
mov
push
in
lahf
add
and
sub
sbb
adc
jge
arpl
xchg
mov
jnp
sub
int
test
lret
fchs
mov
jbe
mov
mov
out
or
loopne
jle
shrl
xorl
aas
jb
iret
inc
xchg
jb
icebp
movsb
cmpsb
push
imul
mov
cmp
pop
stos
mov
lods
pop
xchg
and
inc
out
je
xor
pop
scas
ret
cmp
xor
int3
cwtl
adc
push
out
cmp
inc
mov
test
hlt
add
shll
dec
pop
lock
xchg
fsubs
mov
in
dec
add
sar
add
dec
push
out
das
mov
jp
jge
pop
enter
inc
int
sub
les
or
sahf
les
jbe
or
iret
push
pop
push
inc
or
push
aaa
inc
lods
out
test
xchg
push
mov
insb
pushf
mov
or
jno
jo
cmp
or
push
xchg
sub
fisttpl
push
mov
inc
out
stos
and
mov
jl
jg
mov
aas
test
iret
inc
or
jl
sub
mov
jle
fwait
sub
xchg
lcall
aas
push
sbb
lea
xlat
shr
push
xchg
cs
dec
fldl
out
dec
adc
add
lods
or
jge
gs
dec
notl
mov
jmp
mov
rol
mov
push
xchg
aas
jecxz
out
imul
mov
mov
adcl
cld
sbb
outsb
mov
cltd
mov
mov
hlt
jae
loop
mov
push
fcmovb
dec
scas
cltd
sbb
dec
sarb
sub
inc
sub
mov
out
lock
mov
inc
leave
popf
cmp
pop
in
sbbb
push
sbb
jno
or
cmovae
push
adc
push
jne
or
movsb
xchg
jmp
xor
pop
inc
lret
test
divl
std
fsts
xor
leave
cltd
pushf
mov
fistpl
push
sub
in
inc
rcrb
es
in
push
pop
neg
ficoml
lea
add
pop
xchg
fstps
or
adc
fcompl
xchg
lahf
fimuls
xor
add
dec
cmc
dec
add
ja
sub
mov
adc
cmove
jge
lahf
jl
arpl
mov
jmp
and
cmpsb
stc
lret
lds
sbb
pop
fisubs
call
lret
je
stos
inc
int3
mov
push
push
mov
xchg
test
clc
loopne
int
movl
sbb
ficompl
cmpb
outsl
or
mov
cmp
mov
aam
push
repz
jp,pn
js
cltd
or
stos
pop
rcl
dec
lahf
mov
mov
outsb
addr16
jmp
fcomps
clc
and
adc
pop
int
xchg
stc
sbb
movsl
sahf
mov
ja
inc
jl
xchg
out
arpl
int3
mov
mov
mov
push
jp
fdivrl
in
pop
push
mov
push
lcall
les
cwtl
clc
inc
sub
mov
inc
pop
add
dec
xorl
add
in
sub
mov
jno
adc
out
pop
lods
pop
mov
shrl
xchg
stos
xchg
shl
and
test
sahf
movb
jb
arpl
push
inc
push
std
out
sahf
sbb
cmp
gs
mov
jg
scas
fadds
dec
nop
lea
dec
mov
mov
int3
adc
pop
and
gs
mov
dec
xor
dec
notl
mov
aas
aas
daa
push
jne
jg
push
cltd
insb
inc
or
push
adc
fbstp
out
push
ja
rorl
shll
enter
mov
jnp
ds
mov
aad
xor
push
ret
outsb
mov
push
adc
lods
cmp
sbb
int3
or
sahf
movsb
jo
or
push
jnp
js
addr16
cwtl
in
pop
add
sub
mov
dec
lret
subb
mov
scas
sbb
xchg
mov
aam
push
cmp
pop
push
xor
jno
test
inc
out
inc
or
cmp
xorb
arpl
sub
lds
mov
arpl
sbb
xor
mov
psllq
mov
fsub
pop
xlat
es
xchg
mov
test
int
lea
push
lds
out
mov
push
div
or
xlat
popa
adc
cwtl
xor
repz
dec
in
in
icebp
jb
lahf
loopne
mov
sti
ds
add
and
pop
das
lods
insb
imul
icebp
xor
push
mov
pop
mov
add
xchg
cmp
das
out
imul
int
and
and
xchg
lods
inc
mov
pop
and
adc
inc
adc
mov
pop
adc
roll
xor
add
lahf
stos
movsl
test
cli
lahf
andl
scas
xor
push
movsl
and
sbb
shl
dec
test
mov
lock
or
dec
dec
jmp
pop
loopne
add
pop
cmpsb
xchg
iret
push
lret
xchg
mov
test
xor
out
fsubrs
sub
icebp
fistpll
cmp
rorb
inc
sub
fcmovnb
aaa
jb
jae
test
and
ljmp
jg
in
add
adc
loopne
scas
and
xor
out
mov
popa
jmp
std
mov
mov
icebp
subl
pushf
aam
je
rcll
inc
sbb
cmp
pop
or
dec
out
pop
fcoml
xchg
jp
imul
out
fsubrs
inc
fldt
int3
fnstsw
mov
inc
adc
add
add
cmc
mov
and
cld
cmp
xchg
jbe
add
add
xor
fistps
sub
lahf
pop
xchg
pop
pop
push
or
cmp
add
sti
mov
lea
lods
clc
xchg
out
sub
iret
mov
lgs
lret
stos
mov
je
cld
push
sub
sbb
mov
addr16
mov
les
push
or
jo
mov
iret
mov
sbb
dec
jp
cmp
aad
jnp
sti
dec
nop
lods
sarb
push
inc
xor
or
inc
leave
orl
push
cs
inc
cmp
lds
mov
test
push
leave
out
and
add
bound
cmp
mov
in
and
mov
xchg
sub
test
aad
xor
cmp
in
jg
and
insl
jp
cwtl
pop
or
or
xlat
imulb
stc
push
push
mov
cmp
ss
test
in
outsl
loope
enter
cmp
jl
mov
and
dec
fistpll
mov
or
jmp
int
cmp
and
mov
adc
xchg
xchg
mov
pop
pusha
in
jae
dec
mov
out
movsb
jne
dec
cmp
push
je
clc
pop
or
test
shrl
aad
call
lds
inc
cld
push
fcmovne
mov
sub
dec
xchg
shll
fsubs
lahf
push
sbb
movsl
push
and
mov
cli
pushf
aam
fwait
mov
mov
and
imul
ds
in
dec
jle
jp
lcallw
xchg
or
int3
xchg
jae
mov
dec
xchg
pop
xor
fcomi
iret
dec
pop
inc
xchg
jbe
push
clc
mov
or
dec
or
movsl
flds
sbb
imul
cmp
dec
leave
mov
inc
rorb
push
repz
mov
loopne
sahf
das
and
xchg
insl
int
xorl
fucomip
and
stos
aam
addr16
shrb
jns
call
mov
sahf
pop
sub
xlat
int
cmovbe
push
insl
and
adc
jbe
add
dec
xor
bnd
bound
jns
sub
cld
jnp
lock
cltd
pop
sub
mov
icebp
scas
fidivs
icebp
jnp
or
daa
lock
int3
mov
iret
mov
jp
xor
and
mov
insb
xchg
cmp
mov
rclb
out
and
rorl
lcall
cmpsl
scas
call
imul
incl
pop
test
jbe
das
mov
inc
xchg
mov
push
daa
and
outsb
dec
sub
xorl
xchg
jg
jne
push
pop
or
jle
xor
push
loope
test
mov
pushl
call
mov
sub
jg
xor
lea
int
test
lret
out
sub
lods
enter
dec
jbe
or
ret
xchg
dec
xor
int
xor
rclb
pop
test
aam
push
and
jge
add
in
sti
lods
imul
inc
ljmp
push
out
pushf
mov
xchg
mov
xchg
sahf
sbb
push
call
cmp
mov
sbb
adc
jns
into
aam
and
inc
xor
cmp
mov
xchg
pop
mov
sbb
add
adc
adc
push
xchg
repz
cltd
mov
jl
push
xchg
sbb
mov
stos
ss
dec
fstpt
in
clc
mov
xor
jg
test
nop
xchg
or
popf
mov
scas
out
xchg
mov
mov
test
je
insl
push
pop
dec
imul
popa
add
pop
rcrl
cmp
cwtl
out
cmp
mov
sub
or
imul
aad
sbb
in
xchg
repz
adc
in
outsl
xchg
and
sub
add
and
rolb
sti
or
mov
sbb
sub
add
es
cli
dec
push
dec
xchg
xchg
sahf
cmp
dec
and
mov
data16
ss
pop
jbe
dec
out
in
fwait
add
mov
sbb
xor
cmpsl
mov
imul
dec
sub
pop
lods
pop
stc
ror
lds
sbb
imul
fnstsw
adc
cs
scas
xor
jae
mov
and
xchg
imul
lret
sahf
out
aaa
insl
test
mov
and
aad
inc
jp
dec
lret
xor
fdivrl
out
mov
cmpsl
out
pop
mov
mov
into
sbb
mov
push
pop
dec
mov
jns
xchg
cmpl
stos
sub
adc
add
push
add
movb
xor
add
pop
xchg
mov
pop
cwtl
movsb
mov
and
push
mov
cmp
nop
pop
xchg
adc
movsb
dec
xor
fidivrl
sub
inc
xchg
dec
js
mov
lods
and
push
neg
mov
add
mov
xor
and
and
nop
jmp
fcomip
sub
gs
int3
cmp
jg
push
mov
scas
and
push
lods
pop
sbb
pop
and
xor
not
int3
aaa
and
push
cli
movsl
fstpt
dec
mov
mov
mov
dec
sbbl
xor
sbb
push
jns
inc
cmc
cmp
dec
or
test
out
jbe
push
in
and
pop
jns
gs
out
daa
adc
test
imul
add
cld
pop
xchg
fnstcw
dec
jge
or
or
add
mov
xor
daa
pusha
inc
sbbl
enter
xchg
add
out
inc
xchg
and
push
mov
push
or
pop
pop
add
popa
inc
or
fcoml
dec
pop
dec
fsubl
roll
fimull
or
test
adc
outsl
nop
insl
imul
add
push
pop
mov
inc
repz
test
shr
dec
insb
iret
loop
add
andl
push
push
cwtl
rorb
inc
push
mov
sub
sub
inc
jo
inc
xchg
sbb
push
inc
sbb
js
inc
outsb
jnp
cmpsl
or
mov
popf
adc
loopne
movsl
aam
fisubrs
xorb
dec
movsb
xchg
pop
es
icebp
nop
scas
xchg
or
pushf
cld
addb
rcr
push
adc
jg
adc
push
add
addl
mov
cmpsl
jle
out
stc
es
adc
pusha
sarl
insl
and
imul
sub
mov
test
sarl
fmull
pop
aas
sub
mov
mov
popa
mov
pop
xor
lret
xchg
mov
mov
pop
imul
fs
cmp
sbb
mov
aaa
sub
jmp
stc
dec
jle
xlat
movsb
and
lods
scas
fsubrl
push
jle,pn
jmp
mov
pop
mov
inc
pop
lret
pop
aas
or
xor
mov
sbb
xchg
mov
sub
inc
mov
adc
add
ror
push
fnstsw
push
je
lea
out
xor
icebp
push
sar
or
in
lods
mov
sub
push
in
pop
jg
lret
into
out
jmp
outsb
je
pusha
xchg
cld
stos
sarb
cltd
insl
ljmp
mov
sub
lahf
sti
in
div
shrl
sbb
dec
mov
mov
mov
add
add
and
xchg
sarb
sbb
hlt
rcrb
outsl
push
push
jb
and
and
and
in
test
mov
jl
sub
add
lret
inc
adc
adc
aam
aaa
ja
mov
ljmp
lods
pop
xor
mov
popf
shl
cltd
sahf
sbb
cmpb
push
dec
data16
lret
mov
std
es
dec
or
nop
xlat
dec
fmull
adc
loope
push
ret
xchg
jecxz
xchg
push
sub
test
mov
cmp
jp
pop
and
sbb
sub
push
push
jp
push
stc
call
pusha
movsl
pop
or
fisubs
sub
nop
or
push
out
lods
cmpsl
pcmpeqb
cmpsl
mov
xor
cmpsl
pop
into
xchg
fs
mov
adc
mov
mov
dec
frstor
pop
dec
pusha
jo
and
cmp
insl
insb
loope
daa
ss
aas
repz
jbe
mov
xor
and
shrd
dec
test
out
sahf
xor
cmc
xchg
or
sub
xor
lret
outsl
iret
imul
cmp
sbb
leave
scas
ss
ret
jmp
out
test
xchg
dec
mov
push
adc
mov
mov
pop
jl
xlat
sbb
pop
xor
insl
hlt
push
or
insl
jmp
mov
jo
rcrb
xchg
mov
cld
add
or
call
mov
loop
lcall
mov
pop
rcll
jb
mul
mov
cltd
dec
push
adc
xchg
xchg
pushf
clc
mov
out
xor
das
dec
dec
inc
icebp
mov
fstps
adc
xchg
mov
sbb
les
jae
inc
enter
ljmp
xchg
adc
imul
xchg
pop
cmpb
sbb
jmp
jl
mov
add
mov
sub
or
sbb
and
rcl
inc
sbb
int3
push
or
addr16
gs
repz
in
cld
jecxz
out
fisubrs
insl
popf
out
pop
je
push
inc
xchg
or
fldl
sub
iret
and
or
subb
andb
cli
push
pop
icebp
sbb
pop
jnp
fisubl
mov
push
faddl
xchg
fcomps
outsb
xor
inc
inc
mov
xchg
adc
dec
int3
insl
js
je
nop
dec
cmpsb
imul
fwait
insb
sub
movsb
mov
bound
xor
arpl
in
insb
es
arpl
inc
or
mov
jecxz
adc
pop
movsl
iret
push
or
fwait
push
clc
std
inc
out
std
rcrl
sub
push
adc
pop
fsubp
push
sbb
mov
mov
mov
sbb
lret
jp
inc
inc
push
cwtl
add
pop
in
daa
adc
and
jno
jb
fistpll
xor
repz
sahf
lods
shll
push
add
push
mov
adc
enter
cmp
test
mov
add
lock
dec
jne
aas
out
js
arpl
push
sbb
adc
cwtl
mov
xor
add
xchg
adc
jl
shl
cld
adc
outsb
mov
pushf
or
push
rclb
pop
cwtl
out
or
orb
lock
imul
jo
jo,pn
clc
push
pop
filds
cmp
add
sub
pop
into
jno
movsl
jecxz
cmc
pop
test
jno
adc
pushf
adcl
and
fsubr
das
mov
sahf
lcall
gs
cmpsl
ret
jl
mov
push
arpl
lods
out
iret
out
pop
test
sbbl
aas
push
mov
mov
shlb
mov
and
inc
stos
jl
push
pusha
cwtl
inc
pop
rol
xchg
call
add
insb
cmp
imul
bound
std
cli
pop
and
push
pusha
arpl
mov
not
lods
sub
inc
push
nop
mov
pop
dec
rcll
ret
pop
mov
push
adc
js
xchg
adc
lods
xlat
cmp
ja
mov
xor
add
mov
pushf
or
jl
out
push
and
jmp
xchg
pop
or
sti
data16
scas
out
push
lods
sbb
inc
push
fwait
xor
pop
aas
pop
adc
dec
push
in
cmp
cwtl
arpl
addl
add
popa
add
adc
lods
mov
rcl
xor
sarb
nop
pushl
push
stos
ret
fcmovne
xchg
test
sbb
jmp
pushf
mov
cmp
push
and
xchg
dec
xor
mov
dec
pushf
push
test
rclb
sbb
mov
push
mov
and
call
ret
imul
xor
dec
mov
mov
stos
js
jmp
jmp
push
sub
lea
jg
loope
shlb
rorb
push
pop
push
or
daa
dec
pop
les
out
push
xchg
cld
scas
pop
lds
sbb
hlt
lret
aaa
xor
cmp
xchg
dec
and
popl
cmp
pop
loopne
adc
cmp
jnp
cmp
or
adc
shll
insb
and
jne
es
sti
ljmp
pushf
lahf
int
ret
movsb
lcall
lret
enter
adc
into
test
int3
lret
push
int
adc
mov
clc
stos
or
jge
xor
fists
add
imul
xchg
adcb
pop
test
rcrl
cmp
push
stos
lods
mov
daa
dec
jmp
sub
dec
push
mov
cmp
pop
pushf
frstor
int3
mov
mov
fsub
lea
pop
pop
out
scas
sbb
imul
cmp
xchg
jo
adc
sbb
fcomi
test
xor
push
mov
scas
rcl
xchg
jmp
mov
dec
cmp
ljmp
xor
and
push
inc
popf
mov
pop
jnp
loopne
incb
or
sub
add
mov
inc
sub
sbb
imul
sahf
popf
daa
xchg
dec
popf
fwait
sub
jnp
push
xchg
jbe
sbb
cwtl
xor
xor
leave
xor
mov
cmp
shlb
les
out
leave
sub
or
dec
loope
rolb
ljmp
int
sets
dec
xor
lcall
aas
aam
pop
xchg
inc
pop
int3
sbb
xchg
xchg
push
pop
jb
test
mov
lahf
xchg
lods
cwtl
rcrl
xchg
inc
in
xchg
jp
dec
adc
ret
mov
data16
dec
loop
mov
shll
adc
jecxz
mov
aaa
adc
push
xor
mov
mov
adc
push
shl
add
push
sbb
xchg
mov
loop
fiaddl
fisubl
aas
mov
sbb
repz
aam
fs
jmp
movntps
or
inc
repz
repnz
vmread
pop
fwait
pop
sub
and
dec
sub
mov
or
div
bound
test
out
add
fisubrl
adc
hlt
and
jns
adc
mov
iret
adc
mov
fwait
mov
lahf
push
cmp
faddl
popf
pop
dec
lock
xchg
std
push
es
imul
pop
sbb
ret
stc
adc
jle
or
andb
xchg
jbe
dec
and
mov
push
mov
push
cmpsl
inc
bound
sub
xchg
add
out
inc
fsubrl
into
pop
in
testl
dec
sahf
xchg
inc
adc
jae
or
sarl
xor
jmp
arpl
adc
xchg
imul
dec
icebp
dec
aaa
and
jb
add
push
popa
push
adc
out
scas
imul
pop
mov
scas
movsl
cld
jo
lock
pop
jnp
push
pop
pop
hlt
imul
pushf
sub
push
mov
rol
cmp
pop
or
out
orb
mov
cmpsb
dec
jmp
scas
test
mov
sbb
aam
pushf
rcrb
imul
js
sti
mov
ret
dec
inc
inc
lret
popa
sub
add
jmp
or
lds
int3
push
scas
movsl
mov
add
popa
cmp
dec
das
sbbl
inc
sarb
test
fistl
inc
mov
pop
mov
pop
mov
xchg
jle,pt
or
lock
jo
rorb
mov
cld
dec
scas
stos
fiaddl
das
xchg
pop
mov
punpckhdq
adc
xchg
lcall
movsb
or
ret
inc
int3
nop
mov
pop
sub
inc
hlt
je
jbe
or
out
pop
arpl
or
nop
jle
outsl
mov
mov
and
loop
test
aam
std
dec
jle
enter
cli
mov
leave
and
or
or
push
pop
test
out
mov
or
lds
pop
fmul
inc
cmpsl
test
adc
insb
mov
cmp
jne
sbb
addr16
mov
dec
mulb
jbe
arpl
lcall
lds
mov
xchg
sarb
mov
test
cmp
push
dec
inc
xchg
iret
xchg
mov
push
cwtl
sti
loop
dec
jp
orb
les
out
hlt
pushf
fnsave
fbstp
andl
loopne
jo
in
inc
cld
loopne
fwait
ret
jp
xchg
sahf
mov
decb
mov
lahf
sbb
push
cld
adc
cld
ja
ja
cmp
mov
xchg
data16
sar
dec
xchg
pop
cmp
jle
fisubrl
in
outsl
in
js
cmc
xchg
rorl
ret
out
icebp
xchg
jmp
out
xor
jns
cmp
in
pop
push
lds
int3
hlt
iret
int3
sub
jmp
inc
clc
xchg
lods
sbb
cmp
pop
pop
add
dec
mov
push
jl
adc
test
jmp
xchg
dec
add
pop
fdivrs
adcb
ljmp
mov
xor
dec
sti
lahf
fistl
jns
loopne
subb
arpl
mov
aad
push
jno
add
ret
cmp
sbb
or
xchg
sub
inc
movsl
sbb
push
sbb
cmpsl
mov
fwait
popf
push
pop
jg
mov
fwait
in
js
adc
jae
sbb
xor
aas
xchg
lds
xor
inc
xchg
and
push
test
xor
mov
push
call
lret
inc
xor
shlb
inc
mov
das
out
mov
repz
ret
test
jo
and
notb
add
inc
and
fildl
sahf
xchg
movsb
push
imul
push
orb
subb
jp
mov
inc
inc
lods
sub
inc
or
jge
push
test
inc
mov
push
push
jnp
in
push
cli
pop
sub
push
in
jb
add
inc
xor
mov
stc
mov
daa
std
scas
mov
cwtl
or
frstor
mov
lods
test
add
sbb
cmp
aam
pop
lahf
inc
fistl
add
cmp
add
int3
bound
dec
cmpsb
ja
dec
flds
fistpl
jae
into
jne
std
mov
lds
mov
mov
sbb
shll
test
pop
jns
adc
xchg
lods
mov
int3
mov
fs
icebp
push
iret
mov
loopne
data16
test
mov
jb
mov
xchg
shr
pop
data16
mov
and
cmp
pop
cmpsb
or
xchg
shl
dec
inc
add
or
inc
mov
xor
pop
cmp
push
mov
xchg
jle
out
push
pop
jmp
add
xor
pusha
aad
mov
sbb
fsubs
cmp
outsl
jne
cmp
and
leave
and
int
insb
and
jg
data16
call
shlb
xchg
xchg
in
in
in
stos
clc
fs
mov
aam
push
cmp
or
cli
dec
push
hlt
xchg
roll
push
mov
jle
xchg
adc
add
cmp
sbb
pop
mov
inc
sub
aas
sahf
mov
xchg
pop
outsl
jbe
insb
insb
push
xchg
mov
mov
push
out
sbb
sbb
std
ss
xchg
test
outsl
inc
mov
in
fisttpll
lcall
scas
test
call
loopne
mov
out
call
mov
rcrl
sub
or
xchg
or
es
cmp
scas
mov
or
std
cmc
adc
les
jp
cwtl
lock
fldt
mov
mov
mov
lcall
dec
aaa
loopne
sub
jmp
insl
ret
mov
addb
mov
mov
cmpsb
sub
add
mov
add
fnstenv
sub
sbb
push
push
stos
faddl
fnstenv
or
push
iret
repnz
fcomps
icebp
pop
rcr
jge
in
daa
rcrb
cs
xchg
les
nop
inc
or
inc
jnp
push
inc
in
inc
cwtl
arpl
cmp
andb
outsb
arpl
mov
jae
pop
sub
dec
js
dec
pop
adc
notl
mov
mov
sub
or
enter
fsts
into
scas
mov
roll
ljmp
xchg
iret
cmp
push
adc
adc
pop
out
fs
int3
leave
icebp
adc
mov
pop
les
dec
ret
lcall
data16
xchg
andb
jb
imul
bound
lock
push
sub
xchg
insl
mov
and
add
jns
xchg
lea
xor
mov
jle
pop
mov
in
arpl
cmc
xchg
imul
cmp
jl
add
jne
fs
lock
pop
mov
mov
and
xchg
dec
jge
in
enter
insl
clc
sbb
xor
adc
movsb
lea
push
test
rcrb
mov
scas
xchg
dec
mov
mov
mov
scas
arpl
push
mov
idivb
enter
sub
adc
inc
mov
rcrb
jle
out
std
or
loopne
push
lret
pop
push
inc
mov
repnz
jl
and
imul
out
ret
sub
push
hlt
cmc
shl
dec
xchg
cmp
fsubrs
pushl
ljmp
std
mov
dec
mov
sbb
push
aad
fcmovne
mov
xor
in
add
int3
cli
clc
lock
xchg
outsl
and
inc
ret
retw
and
insl
iret
dec
mov
shll
loope
or
cmpsl
test
cmp
mov
cmp
and
xchg
inc
push
inc
pop
push
dec
dec
gs
pushf
in
out
shlb
and
push
jg
jns
pop
sbb
pop
dec
test
and
xchg
stc
lea
mov
xchg
ljmp
mov
lret
maxps
idivl
mov
xchg
shlb
out
jp
loop
rcl
jecxz
or
popa
push
scas
ljmp
pop
mov
xor
fucomi
xchg
in
jne
ljmp
testl
sbb
xor
xor
push
pop
ret
fwait
jne
or
inc
mov
inc
inc
mov
cmp
push
jno
xor
push
lret
ret
mov
nop
xor
stos
or
es
xor
xor
test
mov
adc
jmp
pop
rolb
jb
pop
fcomp
push
jns
ss
push
jnp
aas
pop
jp
mov
rorb
stos
test
fs
outsl
stc
pop
loopne
adc
hlt
and
repz
stos
mov
inc
add
adc
push
add
ret
mov
inc
mov
sub
test
push
mov
and
das
mov
push
dec
jecxz
dec
cltd
fadd
repnz
rcrb
popa
cmp
mov
adc
jo
push
mov
or
and
add
jno
pop
je
xchg
jns
aaa
mov
cwtl
in
inc
idivb
xlat
dec
jnp
cmc
push
inc
loop
je
out
shll
xor
cmp
ret
mov
lds
pop
add
imul
pop
dec
fildl
xor
aaa
or
push
imul
insl
jg
mov
jl
lahf
fcmovne
leave
push
jae
pusha
mov
out
push
sbb
jns
xor
mov
andb
push
pop
ret
sbb
mov
test
js
loop
mov
xchg
repnz
mov
flds
push
sub
int
jb
push
aaa
adc
mov
pop
sbb
xchg
push
inc
xchg
xor
push
pop
lds
pop
shrl
mov
out
fldt
cltd
mov
pop
scas
mov
daa
into
push
jge
scas
jecxz
mov
xchg
push
add
cmp
add
movsb
sub
mov
jecxz
loope
imull
ljmp
lret
int3
jns
jge
cmc
xchg
add
dec
and
push
aas
push
insb
negb
xchg
push
ret
mov
je
arpl
push
mov
xor
fcmovu
mov
adc
inc
sbb
pop
and
jmp
mov
add
sbb
test
dec
push
pop
fistl
sbb
add
adc
pop
scas
in
outsb
mov
test
mov
fwait
test
int
push
imul
sub
insb
clc
outsl
adc
mov
popf
mov
xor
adc
lods
jmp
in
ss
xor
lods
fbstp
lret
xchg
dec
ja
mov
sub
cmpsl
in
cs
scas
pop
aas
jns
or
fildl
jae
add
sarl
adc
jbe
in
scas
and
fnstcw
ret
jns
sbb
shll
mov
sbbl
sbb
lret
push
cwtl
jns
inc
push
mov
pop
and
mov
mov
xor
mov
fsubl
xor
and
aad
inc
in
ja
std
aas
inc
js
sub
and
loop
testb
push
push
dec
jnp
pop
in
mov
sahf
lods
pop
data16
adc
or
aam
data16
cli
cmp
mov
std
pop
out
sbb
xchg
lcall
repnz
icebp
nop
pop
sbb
dec
daa
lods
xchg
adc
orl
sbb
cmp
cmp
xchg
add
in
xchg
fwait
mov
int3
pushf
push
pop
nop
ror
mov
test
sbbb
sbb
xchg
mov
dec
shrb
add
xor
ljmp
push
xchg
idivb
and
pushf
jbe
daa
divb
inc
out
sarb
aaa
mov
addb
ss
pop
mov
jle
loope
pop
mov
cmp
or
mov
lahf
mov
js
push
fidivl
push
ret
sbb
cmp
lds
in
rclb
sbbb
out
mov
mov
dec
inc
adc
inc
out
add
out
or
xor
loop
test
pop
je
or
in
rcrl
dec
cmp
test
xchg
mov
cli
dec
nop
pop
mov
jne
add
adc
sub
xor
and
pop
push
mov
ret
negl
ss
in
or
inc
add
lret
mov
push
mov
lods
cmpsb
jg
cs
outsb
aam
adcb
sbb
cs
jns
xor
pop
lods
insl
pop
jne
aaa
adc
add
dec
scas
enter
or
and
xchg
adc
dec
sub
testl
xchg
add
jecxz
outsl
in
daa
aad
xchg
mov
adc
out
and
mov
lock
sbb
adc
sti
mulb
xchg
push
sar
or
ret
sbb
push
push
jb
push
imul
sar
imul
jp
notl
stc
add
mov
add
push
jmp
dec
add
and
lahf
stos
dec
aad
les
inc
in
push
es
pop
add
pop
dec
pop
fbld
and
or
xorb
out
test
jae
sbb
sbb
pop
in
dec
mov
cld
jbe
mov
and
pop
mov
shll
loope
dec
jge
leave
push
ja
jmp
mov
lahf
cmp
jns
xlat
stos
pop
outsl
repz
roll
popf
mov
xchg
mov
das
jp
mov
add
xchg
jecxz
xor
std
iret
lcall
sub
and
js
shlb
hlt
pop
adc
mov
xchg
mov
daa
xchg
adc
or
fs
and
jne
cmp
or
fmull
repnz
adc
scas
pop
imul
push
adc
nop
xchg
imul
fnsave
cltd
or
outsb
adc
push
out
rcl
stos
jmp
xchg
xlat
sbb
sbb
mov
mov
mov
sub
inc
enter
mov
repz
add
dec
es
insb
scas
adc
pop
lahf
pop
mov
dec
nop
jmp
aas
push
packssdw
jo
push
jae
xchg
adc
push
mov
xchg
add
in
mov
mov
sarb
fistpl
lcall
ss
xchg
test
xlat
int3
cmpsb
clc
repz
push
sarb
or
xor
sub
adc
and
loop
jecxz
cmpsb
clc
inc
push
leave
fmul
and
cmp
dec
mov
ljmp
push
es
mov
add
frstor
data16
mov
shl
pusha
stc
nop
lods
adc
or
sub
push
cmp
pop
adc
or
inc
jge
enter
repnz
sbb
fs
ficomps
add
cmp
sbb
ds
je
sub
adc
test
je
jnp
jge
fistps
stos
mov
ret
jge
mov
jo
jp
mov
jno
shrl
mov
out
scas
cwtl
inc
addr16
rcr
push
mov
in
stc
dec
xor
mov
addr16
pop
push
std
add
mov
shlb
addr16
add
inc
das
movsb
outsb
orb
pop
cmp
xlat
or
sub
je
push
jle
mov
clc
loope
aad
push
sbb
push
jle
sbb
shll
pop
push
es
or
adc
push
ss
shrl
sub
push
dec
xchg
ss
daa
xchg
pop
inc
and
adc
movsl
fstpt
jae
loopne
push
dec
push
jp
jp
repz
jp
lock
inc
sarb
hlt
adc
push
ret
xor
xor
jle
fiaddl
adc
or
push
in
or
ljmp
popa
movsb
ljmp
scas
insl
test
xchg
xor
movsb
sbb
cmp
aam
insl
lahf
mov
xchg
mov
xor
lahf
vmread
shr
add
testb
cs
cli
xor
cmpsl
mov
popf
mov
mov
mov
cmp
fs
sub
ljmp
fmuls
repz
movsl
cld
cmpsb
pop
int3
enter
push
mov
adc
out
mov
ja
sub
sub
je
mov
dec
fldt
clc
dec
rclb
aad
lock
pop
pop
lcall
xchg
scas
loope
push
or
xabort
xchg
cwtl
jns
mov
stos
mov
data16
jp
xchg
jl
sub
add
mov
push
cmp
mov
sub
insb
mov
es
mov
pop
popf
mov
pminub
imul
pop
cmpsb
jb
addl
xor
inc
int
test
adc
xchg
cmp
sbb
xchg
sbbl
test
xchg
sbb
in
jmp
fisttpl
movsl
out
in
adc
inc
and
dec
add
mov
aam
sub
dec
in
cmp
jl
inc
xchg
mov
decb
mov
fcmovnb
sbb
int3
fildll
pop
repnz
les
dec
inc
adc
sahf
js
test
xchg
out
xor
push
sahf
mov
and
nop
icebp
pop
je
push
loop
lahf
ud0
call
lcall
sub
mov
pop
xor
in
cmp
imul
jecxz
add
fdivrl
sub
jne
xor
icebp
jl
inc
and
jno
cmp
aaa
add
mov
ficomps
fsts
pop
dec
or
pop
xor
jmp
call
mov
inc
in
or
mov
out
cmc
aaa
in
add
jo
inc
rcr
push
xchg
xor
push
les
pusha
adc
add
addr16
mov
adc
jb
push
adc
xor
mov
fstps
xor
dec
jne
sub
xchg
sub
pushf
mov
shl
test
aad
push
pushf
push
test
or
cltd
repz
inc
or
add
and
sbb
cltd
sbb
fbstp
es
test
scas
shl
and
cmp
stos
inc
jbe
xor
adc
pushf
dec
decl
mov
jle
mov
lods
nop
adc
pop
loop
pop
roll
xor
push
jnp
sbb
lock
sahf
not
pop
outsl
inc
psubsw
push
outsb
jl
inc
mov
xchg
inc
xor
les
in
enter
data16
jl
xchg
shrb
out
or
inc
cmp
std
dec
mov
fidivs
andl
orb
shll
inc
dec
or
iret
cltd
mov
push
sub
pop
or
add
xchg
mov
nop
push
fildl
fwait
mov
adc
fs
dec
test
jae
mov
add
or
mov
mov
pushf
out
adc
int3
lods
test
xlat
dec
xchg
and
mov
or
push
aam
sbb
ret
stos
les
cld
sbb
sub
aam
jle
fwait
in
testl
xor
add
pop
inc
push
lret
stc
daa
sub
ret
fcoml
pop
push
leave
xchg
jge
addr16
cmp
fsts
sub
ja
sahf
daa
jp
pop
testl
push
cmp
adc
add
jmp
ljmp
mov
jae
xchg
lea
and
mov
lods
pop
loop
inc
in
push
test
insl
cmp
out
or
ret
jns
in
xchg
cs
add
in
lcall
sub
inc
repz
daa
pop
fmuls
fldl
sbb
sbb
pop
mov
imul
adc
in
ret
mov
push
hlt
aas
nop
or
mov
or
cmp
jmp
add
mov
jmp
cld
push
fstpt
cmp
lea
jnp
ljmp
xchg
leave
jmp
mov
add
cmp
filds
mov
sti
std
dec
lret
add
imul
fwait
push
add
push
sti
xor
mov
enter
xchg
mov
sub
pop
enter
sbb
insl
or
sub
inc
xor
xor
inc
mov
adc
xor
fcomi
je
cltd
mov
mov
sub
ret
out
jmp
pop
test
rolb
jle
mov
cmp
lods
mov
or
out
aam
out
rcl
mov
mov
lret
insl
sub
loopne
and
scas
cmp
push
test
out
add
emms
mov
cmp
dec
jp
and
pop
cmp
adc
sbb
jp
mov
sti
andl
dec
clc
xor
aam
pop
daa
xor
sarb
xchg
mov
mov
shll
dec
lock
popf
aaa
movsb
subb
xchg
push
lock
pop
cmpsl
jg
push
and
pop
mov
lods
fidivl
rclb
pop
lock
sahf
dec
dec
je
and
in
push
fwait
pop
mov
add
mov
test
add
inc
ret
ficoms
gs
lret
push
sbb
pusha
mov
loope
push
mov
jg
in
jno
in
push
jnp
sahf
mov
pop
mov
movsl
mov
data16
jbe
insb
xor
aad
ljmp
rcr
in
adc
into
inc
das
popf
out
ss
or
xchg
add
ljmp
sbb
stos
mov
int
les
sub
push
mov
repz
imul
cmp
jl
jne
loopne
aaa
fcomps
outsl
push
lds
inc
or
jmp
movsl
xlat
aas
iret
cmpsb
fdivrs
aad
pop
add
in
mov
lds
out
fs
mov
loope
mov
and
bound
jb
dec
nop
mov
xchg
add
roll
mov
xor
lcall
push
sti
inc
rolb
repnz
fisttps
xor
and
jns
inc
stos
lds
mov
cmp
inc
or
ret
std
mov
fstl
in
cmpsl
loopne
inc
enter
jg
add
add
lods
jae
testl
lock
push
movsb
jns
cs
stos
cmpsb
adc
xchg
movsl
mov
sub
xor
inc
adc
mov
stos
xor
aas
xor
imul
stc
lock
fs
mov
xor
pushf
push
lahf
fadds
xor
js
mov
pop
mov
xor
and
leave
push
pop
das
ret
push
pop
push
sub
pushf
mov
test
mov
in
and
int
jae
dec
jecxz
cmp
jg
daa
xor
pushf
scas
mov
in
add
ja
mov
fstpt
movsl
inc
cmp
add
inc
mov
jno
shlb
cmp
and
cli
inc
mov
in
jle
cli
stc
test
push
cs
dec
fs
jge
or
lahf
inc
loope
pop
push
or
inc
in
es
xchg
lahf
pop
repz
rcl
cmp
jmp
xor
lock
ret
or
and
mov
xor
xchg
push
cmp
sub
test
push
pop
hlt
loop
push
sub
cmpsb
pop
cmp
and
sarb
xor
js
jmp
lahf
jmp
inc
mov
popf
into
push
push
mov
daa
test
lret
xor
movsl
dec
cmp
daa
push
xchg
dec
pop
mov
fwait
mov
xor
sbb
lock
dec
int
or
test
aad
rcll
cmp
xor
lea
mov
push
mov
pop
sbb
pop
and
in
inc
orl
outsb
enter
inc
dec
or
jl
popa
inc
es
cmp
lret
neg
scas
xchg
cmp
jecxz
push
test
inc
and
cmp
out
aam
daa
test
ss
popf
pop
inc
sbb
adc
pop
aas
cwtl
push
xchg
lods
fstpt
shrb
dec
loopne
jmp
cmp
jns
daa
out
repz
cmpsb
mov
pop
loopne
push
inc
pop
and
je
arpl
inc
aaa
xchg
das
popf
scas
test
enter
or
inc
fisttpl
bound
fstpl
insb
push
cmp
fcoms
jb
adc
movnti
and
adc
test
daa
out
and
adc
jp
iret
ds
sub
sbb
loope
iret
aad
mov
mov
mov
roll
jecxz
jp
addl
stos
add
je
leave
repnz
notb
sarb
dec
lahf
adc
adc
pushf
xchg
repz
cld
stos
dec
fcoml
mov
insb
rol
sbbl
pop
dec
mov
sub
jb
jp
int
popf
inc
rcpps
sub
xor
dec
xchg
dec
adc
jmp
hlt
add
sbb
xor
xor
je
rorl
pop
jns
sti
xchg
ljmp
mov
push
adc
out
xlat
inc
jb
cmpsb
pusha
push
sub
and
dec
data16
jmp
fwait
adcl
dec
cli
loopne
jbe
inc
pop
jo
xchg
mov
cmpl
mov
dec
mov
mov
imul
test
mov
je
mov
aam
or
daa
imul
jb
pop
and
sbb
mov
inc
pop
xchg
pop
shlb
stos
adcb
push
testb
mov
xlat
xchg
into
and
sbb
adc
loop
dec
test
movsb
lahf
mov
push
push
inc
jb
ret
mov
aaa
cmpsl
mov
xor
ljmp
arpl
dec
add
cmp
mov
mov
mov
or
jne
jae
test
xlat
xor
xor
addr16
test
nop
dec
xchg
fnstenv
dec
jecxz
sbb
sub
mov
pop
loope
pop
inc
xchg
ds
pop
lea
pop
and
movsl
sbb
xchg
mov
test
repnz
loopne
or
fstpl
cli
insl
jno
pop
iret
enter
sub
dec
xor
std
stc
dec
push
and
mov
xlat
push
inc
sahf
sub
mov
sub
push
mov
jo
gs
fdivr
rclb
xchg
cmp
pause
and
or
outsb
sbb
loop
cmp
add
mov
sbb
sbb
dec
or
xchg
pop
pop
xchg
out
std
insb
fisttps
imul
loopne
mov
std
in
rorl
out
pop
sahf
in
arpl
lods
mov
cmpsl
add
sahf
push
mov
lods
sub
out
adc
cmp
lea
adc
lahf
loopne
mov
cld
ds
cmp
imul
cmc
mov
push
pop
push
and
push
and
jp
inc
dec
fwait
sbb
out
pop
movsl
shll
out
aaa
mov
sbb
xchg
out
dec
sbb
dec
es
movsb
mov
pop
xchg
jbe
and
lods
inc
out
mov
fmull
aas
pop
jo
lret
or
fldcw
mov
fwait
clc
mov
add
pop
and
mov
int
mov
jbe
test
fcoms
in
les
movsb
out
std
and
out
in
call
and
insl
call
mov
add
jg
adc
xor
movsb
dec
sub
stc
movsl
xor
stos
add
sahf
inc
iret
cmp
adcb
outsb
jge
cs
dec
and
in
in
stos
in
sti
sbb
shll
mov
push
mov
sub
cli
adc
dec
or
outsb
lret
jbe
push
lret
jnp
aam
clc
rcrl
or
dec
ss
push
addr16
icebp
push
xor
ret
das
cmpb
sbb
ret
leave
xchg
sarl
and
in
lcall
hlt
int
dec
cwtl
rcrl
cmpps
mov
outsb
xor
xchg
sub
ljmp
pop
mov
jb
xchg
gs
bound
aas
inc
mov
mov
ret
lock
loop
mov
inc
inc
or
sbb
adc
mov
add
or
mov
je
jl
ret
cmp
adc
push
add
xchg
stos
adc
inc
js
mov
mov
inc
imul
rcrl
imul
fdecstp
sbb
test
mov
imul
mov
movsl
cmc
adc
cli
jle
xchg
fidivs
mov
sub
push
loope
jno
and
sub
sub
dec
xchg
sub
xchg
sbbl
push
das
xchg
js
addl
lea
int3
js
cmp
inc
sbb
dec
test
mov
jge
shll
push
popf
jmp
mov
jge
fdiv
and
add
sub
icebp
call
outsl
loopne
hlt
dec
push
rcrb
loope
sbb
lcall
rcr
sub
hlt
sbb
loopne
jnp
stos
pop
fisttpll
lcall
test
repz
neg
addr16
int3
dec
loope
loope
or
popa
rcrb
cmp
lods
pop
jbe
cli
pop
dec
sahf
pushf
test
adc
push
xchg
adc
push
ret
jl
xor
mov
test
or
xor
iret
cmp
roll
jp
cmp
push
les
stos
xchg
push
xchg
inc
mov
xchg
sbb
in
xor
mov
xchg
mov
push
insl
mov
fsts
jl
xchg
add
sarb
mov
mov
sahf
bound
outsb
aam
xchg
and
out
mov
fwait
dec
cltd
mov
mov
nop
movsb
sbb
mov
pop
jle
sbb
xchg
xor
sub
cwtl
fldenv
into
dec
rclb
int3
out
and
cmpsb
ljmp
lock
xchg
inc
stc
jge
mov
jnp
xchg
insl
imul
repz
push
lods
popf
push
repnz
sub
add
jne
mov
mov
imul
sub
adc
out
imul
nop
js
jbe
add
andb
inc
pushf
rorb
movsb
enter
pushf
lret
addl
scas
pop
addl
int
lahf
or
out
fdivs
cs
in
push
in
into
fdivs
mov
in
or
sub
stc
adc
jae
ret
mov
scas
popf
lret
jns
pushf
testl
dec
mov
pushf
stos
pop
shrl
or
mov
jge
adc
push
push
pop
xor
push
mov
idivl
je
xchg
xor
ss
stos
inc
cmc
jle
inc
mov
sub
dec
jmp
icebp
xchg
add
addr16
pop
mov
xchg
lods
outsl
sarl
imul
movsl
xchg
sbb
jle
inc
adc
popf
ret
mov
in
push
push
xor
cltd
pop
fs
pop
add
sbb
mov
stos
or
je
lret
fcompl
pop
clc
mov
fiadds
lds
das
jne
add
mov
fnsave
sbb
and
inc
sbb
imul
mov
adc
jg
bound
cmp
push
cltd
dec
icebp
scas
shl
in
adc
xchg
fs
and
lret
dec
outsb
dec
xor
ret
les
cld
dec
or
out
int3
es
in
imul
cs
add
inc
lods
in
push
mov
inc
cltd
js
shll
dec
sub
mov
mov
fimuls
sub
pop
repnz
add
jne
pop
scas
add
sbb
sub
pop
push
mov
pop
fisttpll
cs
fsubr
rcrb
idivl
in
sbb
clc
mov
xor
and
ss
test
or
add
loop
jle
mov
fstpt
cmp
fwait
sbb
mov
decb
adc
or
std
pop
sbb
jns
inc
in
jns
shrl
aad
jo
flds
jp
jp
test
mov
mov
adc
fcomi
jnp
sub
and
sbb
movsb
xchg
rorb
jge
xchg
nop
inc
add
faddl
jb
mov
test
in
jmp
imul
rol
lods
inc
fnstcw
andb
mov
sbb
push
inc
fisttpll
cs
adc
dec
cmp
push
pop
adc
mov
dec
mov
dec
or
sub
xchg
xor
inc
hlt
cmpsl
pop
lds
mov
sub
sub
fidivrs
loope
test
mov
dec
xor
xchg
push
sbb
jg
xchg
push
and
mov
cmpsl
out
loop
cltd
pop
push
sub
jo
pop
scas
mov
out
fldl
jge
xchg
gs
loopne,pn
add
imul
mov
push
push
mov
fistpl
adc
xlat
jb
pop
or
inc
dec
mov
je
sub
push
shrb
mov
and
cld
int3
fs
rorl
xor
addr16
shl
leave
out
call
xor
cli
mov
xor
fadds
outsb
into
fnstenv
outsb
jle
mov
cmp
xchg
cmc
int3
lcall
sti
and
lock
inc
push
jbe
xchg
dec
fs
or
stc
or
jb
xor
and
cmp
cltd
push
imul
lsl
in
cmpsl
sub
dec
inc
sub
sahf
mov
ljmp
pusha
pcmpeqw
add
sarb
lahf
movsb
sub
bound
stos
cmp
mov
pop
ret
pop
loope
test
cli
lahf
jae
cs
in
stos
dec
fistpll
punpckhbw
fucom
daa
in
add
sub
mov
xor
xchg
push
add
sub
push
repnz
movsl
push
dec
hlt
dec
lret
pop
sub
jmp
lds
test
xor
sbb
inc
fdivrl
sbb
adc
dec
testb
mov
jp
xchg
push
in
mov
jns
push
and
lcall
lret
jnp
fstp
ret
adc
pusha
dec
xchg
push
sub
loop
mov
fwait
push
test
push
sbb
adc
fwait
dec
leave
out
daa
lcall
enter
iret
es
jne
nop
push
add
xor
sbb
sbb
shlb
jg
adc
iret
and
mov
nop
xchg
jge
fmull
rorb
pop
lahf
sbb
popf
xchg
jmp
push
nop
or
pop
movsb
jbe
xchg
pop
movsl
pop
xchg
cmp
gs
test
popf
lods
dec
imul
and
pop
aam
jl
daa
pop
fwait
mov
hlt
hlt
imul
lret
xchg
in
jno
stos
popa
fcomps
dec
pop
daa
inc
loop
jno
out
mov
hlt
mul
ja
lods
add
mov
sti
or
fstps
leave
pop
dec
jns
mov
ret
mov
mov
ret
pop
stos
and
inc
mov
insl
and
clc
jmp
add
cmp
xchg
stc
shll
inc
sub
leave
inc
cmpsb
pusha
rep
pop
pop
mov
inc
adc
movsb
mov
inc
pop
xchg
xchg
push
xchg
sub
or
loopne
lods
cmp
hlt
insl
jp
leave
mov
mov
push
adc
addl
pop
push
sarl
and
mov
cmpsl
cmp
or
xor
lea
in
adcl
call
mov
ljmp
adc
mov
pushf
jns
sbb
int3
in
test
sbb
frstor
inc
rol
mov
negb
push
or
sub
push
xchg
iret
mov
jge
popf
push
push
mov
or
cltd
lahf
fbstp
jle
dec
scas
xor
lods
shrb
push
push
push
and
adc
pop
rcrl
sub
sbb
into
pusha
imul
mov
test
scas
add
pop
push
cmc
push
mov
mov
pop
add
rcr
mov
cmc
cmp
jle
jns
lea
jg
fildl
jecxz
mov
dec
adc
adc
iret
jp
mov
lods
call
xor
std
out
xor
xchg
or
cmp
jns
mov
adc
sbbb
mov
sbb
adc
pop
push
push
clc
mov
ret
sub
ss
push
mov
mov
mov
popl
cltd
test
ja
inc
push
decl
sub
cli
or
arpl
out
and
and
adcl
xchg
xchg
pop
fsubs
mov
or
in
mov
mov
sti
adc
jbe
cmp
into
dec
lods
push
out
fcomp
cmp
mov
mov
sti
leave
jl
imul
out
or
sahf
hlt
call
mov
sub
inc
incb
inc
or
mov
iret
imul
xchg
push
push
dec
sti
push
xor
inc
xlat
mov
push
shrb
ljmp
lods
shl
aam
fs
and
adc
mov
mov
push
xor
xabort
icebp
ja
in
add
bound
mov
xchg
shl
pop
movsb
pushf
xchg
mov
jnp
jecxz
adc
push
mov
xor
inc
jle
sbb
sub
pop
out
repz
sub
sbbl
jl
push
fcmovu
out
sbb
stos
inc
inc
adc
and
inc
mov
mov
in
aam
nop
xchg
add
inc
add
or
xchg
pusha
mov
pop
push
dec
repz
mulb
das
imull
mov
sbb
mov
mov
scas
nop
ljmp
into
fistps
testb
sbb
ss
mov
out
dec
movntps
cmp
cwtl
xchg
roll
dec
lods
xlat
cmp
sahf
jle
and
arpl
and
xlat
mov
jge
cltd
push
js
push
or
lock
and
or
xor
ja
rcrl
or
xor
add
movsb
out
xor
push
add
repnz
imul
mov
sbbl
mov
mov
icebp
xchg
xor
inc
or
cmp
jnp
and
scas
out
ss
ret
stos
mov
mov
addr16
ljmp
loop
xor
stc
jp
out
pop
cmc
sbb
jae
xchg
fisttps
imul
dec
lret
repnz
inc
loope
lahf
adc
sbb
jns
shr
mov
test
pop
loope
pop
push
fcoml
outsb
scas
out
pop
push
and
adc
movsl
es
adc
rcll
lret
mov
fsubs
sbb
xchg
loope
adc
dec
jl
jp
mov
hlt
ds
outsb
push
and
inc
or
xchg
push
call
pop
dec
push
mov
push
cltd
add
aaa
mov
push
into
out
pop
test
or
and
scas
cmp
or
bound
in
test
xor
mov
mov
jns
pushf
gs
xchg
sbb
and
inc
aad
int
arpl
jne
inc
insl
cld
sbb
and
dec
data16
and
mov
nop
dec
dec
and
pop
jne
lret
adc
xchg
mov
inc
aam
and
and
cmpsl
sub
fsubrl
js
in
mov
sbbl
inc
pop
hlt
adc
inc
xchg
lds
cmp
rclb
xor
mov
daa
orb
out
sbb
adc
stos
insl
dec
inc
lds
xchg
xchg
fistpl
adc
subb
into
loopne
movsl
aad
roll
pop
ljmp
mov
cmpsb
test
add
negl
jae
pop
mov
fucompp
sahf
in
xchg
les
popa
adc
sub
stos
push
popf
lret
mov
out
imul
std
mov
xchg
add
je
push
adc
xlat
shll
js
mov
fcompl
scas
test
jnp
fsubs
fs
jmp
xor
fisttpll
les
bts
xor
pop
pop
cmp
jb
movsl
ffreep
lcall
int
ss
cmp
movsl
jno
dec
popa
shlb
out
sbb
in
loopne
sub
and
and
adc
mov
cmp
testb
test
mov
or
mov
sub
fmull
or
cmpsb
jl
cmp
out
insb
pop
push
adc
out
jb
daa
nop
insl
xor
lds
lds
pop
push
int
cmp
cwtl
arpl
bound
pop
or
jge
fdivs
fmull
mov
in
xor
xchg
jg
clc
mov
adc
pop
cmp
popl
ret
fcomip
and
cmpsb
pop
or
mov
test
aad
mov
push
mov
push
mov
std
mov
jb
and
jl
xor
mov
pop
or
dec
mov
jge
pop
mov
push
mov
out
inc
mov
mov
mov
xchg
mov
out
xchg
int3
cld
cwtl
sbb
out
xchg
stc
or
in
jno
sub
in
pop
arpl
push
ljmp
and
gs
scas
in
xchg
popf
insl
icebp
popa
imul
push
sbb
jmp
fimull
rcrb
popf
cmp
leave
inc
fs
xor
mov
jnp
fiaddl
cmp
push
cmp
stos
lahf
lret
cmp
xchg
lods
xor
loopne
jmp
movsb
xorb
pop
shll
mov
into
mov
mov
popa
jbe
sub
fsubrl
pusha
and
out
mov
nop
mov
pop
xor
jne
fistpl
xor
cmpsb
in
sub
daa
or
sub
mov
xchg
push
lahf
inc
sub
notl
lods
orl
jge
call
clc
fistpll
jge
stc
mov
fbld
dec
mov
jle
pop
filds
mov
jns
lods
cmp
lea
rcrl
sub
push
sub
push
fs
jg
cmp
rcl
sar
sub
cmp
sbb
or
stos
enter
into
test
clc
dec
and
scas
inc
int
pushl
in
xchg
cltd
jno
lods
or
cmpsb
pop
xor
add
icebp
xchg
sub
lea
shll
ss
xor
and
ljmp
cli
jecxz
dec
scas
dec
and
jg
or
fistps
mov
pop
xor
dec
mov
inc
iret
dec
aad
and
adc
dec
xor
cli
fmuls
sub
xchg
xor
sub
sbb
inc
jnp
pop
sbb
mov
jl
rclb
lea
xor
inc
dec
dec
neg
scas
dec
subl
pop
jg
fstp
mov
sub
push
pop
lret
adc
cwtl
lret
sarb
sub
and
xchg
rcrl
les
jecxz
cltd
cmp
push
repz
pushf
repz
xor
scas
and
dec
jmp
out
lods
and
xor
leave
loope
xor
mov
lds
test
pop
sbb
rcrb
or
sbb
or
dec
inc
cmp
loope
repz
push
daa
mov
inc
js
pop
or
cmp
mov
out
and
pop
pop
mov
cmp
mov
nop
push
test
mov
add
data16
loop
pop
in
fwait
movsl
mov
mov
xchg
int3
pop
aaa
inc
mov
inc
push
cmc
push
test
imul
or
xchg
mov
mov
sub
mov
lods
data16
mov
mov
mov
mov
gs
push
pop
and
adc
dec
mov
dec
ljmp
ss
xchg
push
sub
add
jmp
jne
pop
sub
out
nop
repnz
xchg
jg
out
dec
cmc
jne
mov
sbb
cmp
push
sbb
mov
rol
sbb
cli
or
adc
mov
inc
and
je
mov
mov
cwtl
fnsave
inc
cmpsl
push
xor
insl
adc
fdivl
cli
out
iret
fmuls
addr16
or
popf
lea
es
mull
cli
pop
mov
fidivs
sahf
push
sbb
inc
and
shr
adc
pop
add
dec
and
mov
lea
cmpsb
cld
shlb
aaa
add
sbb
test
jno
sbb
dec
jmp
cltd
push
ljmp
arpl
jbe
mov
repz
xor
cld
nop
fisubrl
dec
leave
sbb
scas
fsubrs
mov
stc
jle
mov
imul
jbe
hlt
in
adc
cmpsl
add
cmp
dec
mov
sub
dec
add
sub
cltd
cmp
ds
jp
jmp
add
cld
xchg
and
fdiv
std
push
cs
and
test
adc
jg
insb
pushf
xchg
aas
neg
repz
dec
jp
mov
test
inc
add
sbb
enter
pop
xor
push
pushf
pusha
outsl
jge
cli
pop
dec
mov
cmp
in
fnstsw
rcll
js
stc
inc
and
mov
push
stos
pop
mov
in
inc
push
add
mov
test
cmp
shlb
sbb
leave
push
jo
mov
mov
mov
pop
push
sub
xchg
inc
movsb
jle
sbb
es
pop
or
sub
push
cmp
lret
jo
les
dec
pop
push
or
dec
adc
lret
ljmp
enter
xor
pop
lods
adc
insl
sar
mov
in
dec
sbb
fwait
insl
outsl
jecxz
popf
daa
sbb
jnp
add
shlb
test
push
cmp
insl
lock
mov
adc
aad
xor
icebp
test
add
pop
out
inc
lods
mov
test
call
sahf
rorb
mov
mov
in
cmp
test
popf
mov
xchg
sub
inc
inc
push
mov
mov
scas
out
xor
mov
sub
xchg
xchg
mov
mov
repz
mov
push
jne
ds
insl
movsb
test
xchg
mov
push
in
xor
pop
fdivrl
das
or
mov
pop
cmp
pop
xor
lret
pop
pop
imul
fs
add
clc
add
sub
inc
mov
js
imul
pop
sbb
icebp
int3
mov
xchg
pusha
loop
cwtl
push
popa
out
lahf
subl
lock
out
loopne
dec
stc
nop
or
dec
xchg
sub
mov
aad
pop
pop
mov
int
jge
jae
jns
ret
xchg
stos
xchg
cmp
insb
popf
or
cwtl
push
arpl
jnp
in
mov
dec
mov
jnp
sub
fld
add
insl
ret
in
in
gs
outsl
mov
push
ja
cmp
and
add
out
popa
pop
or
sbb
sub
mov
sti
std
adc
or
loope
pop
dec
mov
jns
data16
push
xor
outsl
dec
xor
fndisi(8087
cmp
push
call
out
mov
mov
mov
jb
adc
add
dec
xchg
insl
pop
mov
orl
adc
cmp
sbb
mov
pop
and
cli
lock
dec
push
pop
call
cmp
testl
lds
or
out
pushl
jle
sbb
enter
sub
adc
daa
pop
jb
dec
aam
pop
aam
xchg
cltd
and
dec
inc
aam
cmp
push
xchg
mov
xorb
cmp
lcall
div
mov
cld
mov
mov
mov
or
jbe
push
cmovs
dec
ja
mov
aas
push
jnp
lods
popf
xor
dec
sbb
mov
xor
das
jns
hlt
mov
test
movb
push
jge
lods
dec
cmpsl
jle
ss
or
dec
adc
into
adc
mov
mov
adcb
xor
out
outsb
dec
gs
inc
fsubrl
sub
lods
aaa
mov
insl
clc
jno
xchg
xlat
inc
or
testb
xchg
popa
out
cs
xor
rcr
push
push
push
aas
xlat
leave
mov
lret
inc
jns
lods
roll
add
stos
aaa
lods
les
xchg
roll
dec
out
mov
sub
xchg
dec
fcoms
add
mov
adc
and
lahf
jae
mov
fdivrs
pop
imul
push
loop
cmc
inc
xchg
lods
lahf
sub
sti
in
insl
movsl
push
and
stos
outsl
loope
sbbl
mov
jg
add
leave
add
enter
test
test
in
push
fldcw
cmpl
adc
mov
sub
xor
push
xchg
xor
out
icebp
cld
add
xor
rcll
mov
inc
jb
jecxz
sub
fistpl
lea
stos
push
sbb
pop
inc
cmp
mov
stos
gs
adc
lds
xchg
ss
es
pop
mull
enter
cmp
js
pop
cmc
dec
xor
adc
or
mov
push
popf
out
cmpsb
sub
lret
jge
outsb
jb
lret
add
dec
stos
in
ret
pop
test
mov
pop
sarl
daa
movl
lods
js
imul
pop
inc
ds
rep
hlt
cli
dec
ds
mov
arpl
lret
push
mov
and
mov
push
sub
mov
jb
out
adc
aad
ret
push
dec
sti
and
sub
shr
cmpb
popf
imul
push
mov
dec
repz
adc
das
gs
cmpsl
xor
mov
xor
rorl
out
mov
cs
or
addr16
sub
faddp
int
mov
jmp
pop
xchg
mov
xchg
mov
outsb
sub
clc
rcrb
fdivrs
push
and
mov
scas
add
orl
lahf
int
xchg
push
jge
mov
mov
add
push
in
sbb
mov
gs
or
jp
mov
and
arpl
jp
sarb
cmpsl
push
push
push
dec
jp
dec
mov
callw
sti
sub
push
lods
sbb
add
fs
stos
data16
jns
or
stc
xchg
rcrl
mov
sahf
aas
inc
sub
scas
push
and
jne
cli
inc
test
or
nop
add
sbb
ds
out
xor
sub
sub
or
cmp
test
enter
and
sub
pop
pop
cmp
in
adc
adc
loopne
push
jb
fstps
fdivr
sbb
pusha
sub
sub
in
and
pop
cwtl
cmp
add
or
insl
jge
jae
out
pop
xlat
shl
ret
lods
xor
adc
iret
cmpsl
pop
cmp
mov
or
lea
cmp
rolb
dec
push
lods
cltd
clc
xchg
scas
sahf
push
xchg
gs
fs
jns
loope
adc
fiadds
fldenv
pop
repz
arpl
aad
dec
fsubl
push
mov
negb
or
imul
push
ljmp
mov
out
lcall
dec
push
xchg
push
fiaddl
and
fisubs
gs
jg
es
popa
rol
inc
ja
pop
scas
inc
lcall
push
add
xchg
loopne
cmp
js
jmp
xor
fsub
insb
fs
bound
pop
int3
clc
inc
in
jbe
in
jmp
movsb
inc
mov
xor
cmp
sub
xchg
fdivl
xor
pop
stos
lods
adc
lods
fcomps
andl
xor
cmp
and
dec
push
repnz
push
sub
mov
pop
das
mov
pop
push
mov
dec
xor
ret
inc
cld
adc
mov
addb
ss
je
cli
jno
cmc
test
cmpsb
pop
push
and
rol
pushf
int
dec
fimuls
mov
push
add
mov
mov
and
js
pop
push
int
fists
mov
fcmovbe
into
dec
rol
push
pop
jl
cmpsb
or
outsl
dec
sbb
mov
add
mov
sub
add
pop
outsl
adc
mov
inc
les
insb
insw
cmp
fsub
ret
inc
ret
add
idivl
mov
imul
daa
aas
xchg
lret
je
mov
mov
add
inc
pusha
mov
cs
loope
sbb
jle
pop
cwtl
sub
add
stos
jo
bnd
jp
inc
push
sti
and
mov
fcmove
push
xchg
jg
jne
out
imul
data16
mov
xchg
cld
fsts
push
jb
lahf
fbld
mov
push
pop
mov
lcall
outsb
clc
mov
imulb
dec
stos
mov
out
pop
adc
mov
mov
push
add
lock
enter
xor
ds
mov
lret
fs
xor
pop
sar
call
enter
and
pop
adc
icebp
cltd
dec
cmp
jl
xor
call
outsl
outsb
push
and
out
repnz
aam
cmpb
jno
dec
mov
in
mov
mov
clc
pusha
incb
sbb
pop
add
leave
cmp
fwait
push
mov
add
xor
mov
adc
pop
adc
imul
push
decl
push
popa
outsb
fwait
inc
rcll
lods
add
dec
mov
aad
fwait
pop
addb
jnp
sti
mov
in
cld
dec
push
mov
pop
xor
adc
pop
scas
repnz
gs
cli
mov
pop
mov
xchg
inc
inc
or
push
loopne
dec
sub
mov
adc
nop
cmc
aaa
adc
mov
js
mov
mov
dec
cld
sti
add
sbb
cld
arpl
mov
mov
mov
mov
mov
not
add
inc
pop
add
cmc
jo
test
mov
hlt
and
push
loop
add
inc
xchg
xchg
arpl
lods
out
or
mov
std
daa
aaa
dec
scas
fbld
bound
adc
fstpt
xlat
ret
inc
bound
mov
out
mulb
mov
sbb
je
sub
movsb
test
fstps
cmpsl
mov
mov
jns
pop
jl
nop
sub
push
dec
jbe
rcrb
or
pop
das
hlt
or
push
lcall
add
aam
inc
adc
xor
mov
jp
leave
lods
inc
and
sub
out
mov
in
addr16
inc
jg
int
enter
loopne
xchg
and
lds
add
push
imul
mov
push
aam
jp
mov
push
test
cmp
mov
dec
dec
cmp
jg
add
adc
cld
fnstcw
push
push
faddl
inc
loopne
mov
sbb
ja
dec
orb
fnstenv
dec
sub
ljmp
mov
xor
mov
xor
cmp
or
mov
push
repnz
xchg
push
xchg
pop
into
and
aad
cltd
dec
inc
sub
sbb
cmp
callw
sahf
loopne
adc
xor
movsb
inc
cli
xor
popa
into
mov
sbb
out
test
fldenv
jnp
test
icebp
fisubs
mov
xchg
jb
test
bound
cltd
pop
icebp
mov
out
sbb
mov
cmc
push
mov
scas
add
movsb
xor
jl
push
jo
pushf
push
dec
and
cs
addr16
lods
or
das
sbb
xor
pop
jmp
cmp
push
adc
mov
inc
mov
js
adc
cmp
paddb
jbe
mov
repz
pop
pop
insb
cmp
dec
sbbl
xor
or
pusha
xor
jb
test
fcoml
popa
js
sbb
in
mov
cmp
pop
cmp
push
rorb
push
and
inc
into
mov
into
filds
ror
test
add
sub
lcall
mov
push
out
push
push
shl
gs
add
pop
loopne
sub
repz
in
and
mov
jns
inc
xchg
pop
fcmovbe
pop
stos
push
pop
loopne
scas
xor
mov
andl
mov
add
pop
sbb
stos
adc
mov
pop
jge
popa
shrl
out
shlb
sbb
push
mov
xor
sbb
ret
ljmp
fdivrs
cmc
mov
push
mov
out
popf
mov
xchg
pop
stos
roll
jno
cld
push
pop
out
lcall
fwait
mov
aaa
loope
aam
mov
pop
mov
sub
push
sarb
stos
xchg
jge
mulb
push
mov
cmp
xor
fs
push
lea
scas
andl
push
mov
sbb
jge
sbb
out
movsb
lock
sarl
incl
aaa
lahf
dec
and
cwtl
out
and
xlat
cmp
and
test
dec
mov
mov
fsubrl
xorb
xchg
into
xor
adc
pop
sub
pop
lods
pop
or
adc
jns
xchg
cwtl
jge
pusha
dec
inc
push
cmc
pushf
mov
or
xlat
aad
push
loopne
adc
out
xor
iret
loopne
test
sbb
inc
shl
cmp
push
mov
movsl
mov
mov
inc
testb
lock
aaa
aad
rclb
dec
in
push
push
inc
or
pop
pop
fwait
pop
inc
std
sub
mov
in
int3
outsb
stos
inc
loope
xor
lods
cmp
lods
enter
jae
cmp
leave
les
add
sbb
mov
mov
xor
paddsw
iret
cmpsl
and
mov
push
imul
mov
popa
add
jae
aam
and
jb
divb
ror
push
mov
push
adc
cmpsl
fnsave
add
pusha
cwtl
push
into
push
add
inc
and
ja
std
xchg
mov
mov
pop
pop
inc
jmp
repnz
ljmp
lods
xlat
popa
cmpsb
mov
inc
cmc
shrl
adc
mov
mov
jns
jg
xor
imul
add
loopne
push
pop
cwtl
out
nop
inc
xchg
in
jecxz
scas
sbb
test
add
ja
mov
dec
data16
sub
xchg
mov
or
outsb
mov
call
jecxz
push
movsb
or
xchg
aas
dec
inc
mov
gs
cmp
lea
or
cmpsb
aas
or
sub
add
pop
sahf
and
mov
in
jo
xor
ficomps
test
cwtl
jno
adc
pop
jns
stc
pop
cmpsl
ret
hlt
sbb
push
hlt
fisubrs
imul
cmp
inc
dec
js
xchg
fisttps
jmp
sub
fdivs
insb
jnp
add
lock
push
sub
shl
in
rcr
xor
arpl
xchg
arpl
ret
hlt
popa
inc
insb
add
movsl
sub
cld
data16
shll
into
mov
test
cli
fistpll
sub
in
pop
or
push
xchg
xor
adc
leave
cmp
dec
mov
mov
out
or
inc
sarb
xor
inc
mov
lret
or
cmp
jb
and
jb
mov
lret
loopne
add
repz
mov
nop
push
scas
push
pop
xor
insl
or
xchg
inc
mov
hlt
sub
cmp
mov
data16
mov
push
push
inc
inc
mov
fcomps
lock
daa
dec
xchg
jnp
lock
nop
cmp
jb
cmpsl
repz
mov
pop
mov
jbe
push
rolb
popf
leave
cmp
fcomi
ss
sbb
scas
mov
mov
pop
jb
xchg
pop
stos
dec
movsl
cld
inc
sbb
and
out
sar
or
adc
std
les
iret
cmp
xchg
mov
and
in
out
or
call
pushl
pop
aam
jmp
pop
dec
jl
daa
xchg
loop
addl
insl
push
movsl
push
pop
lahf
shrb
icebp
aad
add
fprem1
push
cmp
rorb
sub
or
add
mov
test
into
pop
enter
inc
or
xchg
into
mov
pushf
cltd
jmp
dec
pusha
xlat
repz
imul
hlt
stos
rol
pusha
mov
adc
dec
mov
add
inc
adc
sbb
inc
lock
xor
inc
adc
and
mov
repnz
faddp
fs
aad
out
scas
jmp
std
pop
lcall
pop
outsl
pop
cmpsb
jl
push
hlt
cmp
cmpsb
es
decl
lods
ficomps
xlat
icebp
pop
loop
mov
addb
push
pop
sti
mov
mov
mov
data16
jmp
push
shll
and
or
mov
aaa
fldl
mov
in
das
jle
call
aaa
mov
xlat
pop
popf
aas
in
icebp
lods
pop
test
dec
mov
cmpsb
pusha
mov
cli
pop
dec
lock
and
xor
loop
daa
or
clc
aaa
cli
sahf
insb
mov
and
mov
mov
dec
imul
fs
mov
adc
inc
jae
dec
pop
xor
add
xchg
xchg
ds
cwtl
ljmp
lret
aas
loope
enter
lock
ja
mov
imul
xchg
cmpsl
push
fwait
push
mov
inc
jl
sahf
lret
pop
mov
jne
xchg
or
pop
cmp
sbb
stos
mov
push
lea
xchg
addl
clc
ss
lods
push
jp
fldcw
pop
call
out
jno
popf
aaa
or
imul
and
cmp
jg
adc
mov
add
lock
sbbb
dec
loop
scas
sub
out
push
arpl
xlat
pop
test
dec
repz
and
sbb
shlb
decl
cwtl
out
pop
wrmsr
xor
cltd
iret
push
add
push
outsl
das
sub
push
sub
xlat
gs
sbb
sbb
aad
jl
inc
popf
jne
das
push
sub
mov
scas
push
mov
and
add
adcb
fucomi
sbb
ljmp
adc
mov
imul
stc
pop
sbb
mov
cwtl
es
jnp
vunpcklps
dec
xchg
out
in
mov
cmc
aad
testb
fists
mov
std
add
std
cmpsb
repz
fcoml
push
pop
iret
adc
pop
fnstcw
lcall
mov
cmpsb
adc
adc
movsl
sarl
movsb
dec
add
int
mov
out
jecxz
sub
add
cmp
jbe
lods
stc
cmpsb
mov
dec
hlt
cmp
addl
andb
xchg
jno
outsb
test
cld
cmpl
in
jg
repnz
shll
dec
in
imul
mov
into
cmp
sarl
stc
push
and
mov
mov
fistpll
jbe
lcall
mov
mov
and
push
scas
mov
pusha
and
insl
lret
ja
sarb
insl
cli
fadd
pop
mov
daa
div
loope
mov
or
xlat
push
mov
pop
adc
xor
bound
adc
inc
cmp
lsl
cmpsb
inc
inc
popl
push
and
xor
add
aas
movsl
mov
sub
push
mov
cmp
xchg
aaa
xchg
xchg
cmpb
lds
in
jo
or
ss
ret
push
gs
sub
mov
das
and
mov
out
enter
mov
mov
into
pop
jmp
sub
cmp
mov
std
call
jge
pop
test
sub
add
mov
dec
arpl
mov
roll
fnstcw
jmp
fidivl
push
sti
pop
mov
call
mov
daa
add
divl
out
lods
shl
sub
repnz
mov
push
mov
xchg
dec
stos
in
pop
cmc
notl
cmc
stos
sbb
mov
cmp
jl
stos
mov
lea
pop
push
shll
xchg
and
jmp
out
lret
adc
mov
or
in
stos
or
inc
ss
in
jl
pop
mov
sbb
lret
xor
loope
test
in
rolb
in
xor
lods
xor
lret
jnp
xor
sbb
mov
ret
data16
fstl
push
lods
and
dec
lds
cwtl
scas
fs
dec
mov
push
dec
jae
sbb
sub
xchg
pop
scas
lds
xchg
insb
xchg
cwtl
push
adc
push
mov
lea
dec
inc
cmp
or
fldt
sahf
out
ss
sub
inc
xchg
cmp
cmp
insl
sti
or
cld
inc
dec
mov
addl
pop
mov
jl
fwait
or
enter
popa
add
mov
cmp
add
cltd
mov
sar
mov
dec
int3
pop
xchg
sbb
mov
popa
cmp
aam
into
je
es
and
mov
xchg
adc
cmp
out
jb
sub
mov
aaa
mov
xchg
pop
cmpsb
jg
add
sub
fneni(8087
jo
cmp
shrl
mov
jmp
or
movsb
sub
push
add
scas
add
xchg
cmpsl
inc
std
adc
data16
pop
jo
sti
or
mov
jg
hlt
jge
subb
cmp
ljmp
in
loope
or
mov
aad
sub
jp
cmpsb
test
dec
push
loope
adc
mov
xchg
pop
or
jg
jae
nop
jle
xchg
hlt
push
call
pop
dec
mov
sub
les
mov
in
xchg
adc
lahf
mov
push
pop
push
insb
jle
jb
lahf
loop
lds
xchg
mov
adc
push
dec
stos
inc
out
fidivrl
and
dec
loop
and
pusha
jmp
sub
test
daa
in
push
imul
pusha
test
sbb
stc
mov
or
cmp
ret
or
mov
cmpsb
add
adc
lcall
pop
mov
jo
test
stc
cmpsl
ljmp
jl
addr16
loop
xchg
add
xchg
mov
loopne
frstor
jmp
cmp
shll
pop
jns
lret
inc
les
sbb
jp
mov
dec
cmpsl
mov
sub
sub
call
push
fs
ret
insb
jb
jo
out
repz
and
and
or
sub
xchg
movsb
mov
adc
sbb
sub
cmp
xchg
cmpsl
negl
aaa
sbb
les
rcrl
sbb
sarb
enter
es
in
sub
out
subl
sub
fiadds
es
divl
mov
rcl
inc
call
pop
hlt
inc
in
nop
dec
stos
sub
outsl
cwtl
mov
into
xchg
xchg
sub
add
lea
mov
roll
lcall
andl
adc
and
in
sbbb
cld
nop
lea
clc
mov
pop
bound
in
xor
pop
movsl
adc
insl
xchg
iret
lock
or
cmp
cld
test
mov
inc
xor
jns
xlat
pop
xor
xchg
dec
cs
dec
mov
in
sbb
subl
sti
push
xchg
test
lret
xlat
xor
push
movsb
push
pop
cmpl
shll
fmuls
stc
jae
and
test
pop
and
jno
jmp
movsl
in
pushf
popa
add
lods
out
mov
in
sbb
cmpsb
xor
dec
cmpsl
jmp
stos
fld
sti
das
sub
xchg
xor
xor
loope
mov
dec
scas
scas
mov
aas
push
cltd
add
push
xchg
push
decb
jle
fwait
inc
xchg
adc
cmp
insb
add
repz
addr16
mov
adc
icebp
jnp
sti
jg
or
insb
test
hlt
mov
gs
or
pop
inc
aam
sahf
decl
cmp
push
add
std
add
cmp
fldenv
jge
divb
jbe
xchg
outsb
les
and
xor
mov
push
pop
pop
jb
push
inc
fdiv
test
pop
or
arpl
xor
int3
adc
imul
scas
enter
xchg
popf
test
mov
cmpb
dec
into
icebp
sarl
repz
sub
xchg
aas
cmpb
adc
lods
repnz
pusha
mov
sbb
lcall
and
push
xchg
rcl
popa
inc
push
lods
mov
jbe
cs
pop
sbb
stc
movsl
sbb
int
adc
js
dec
notl
pop
add
mov
mov
and
outsb
rorl
pushf
push
and
popa
or
adc
dec
cmp
pushf
cltd
in
push
or
pop
push
or
pushf
sub
fidivrl
pop
orb
mov
mov
test
out
cmc
pushw
mul
loope
das
fwait
das
gs
mov
xor
sub
jns
cmp
lret
adc
int3
fdivp
pavgw
push
sarb
aam
adc
das
dec
out
in
or
cmp
ret
imul
cmp
mov
xor
popf
rcrb
pop
js
popa
sub
adc
aam
stos
mov
mov
push
stc
jge
fwait
inc
out
xor
xchg
ss
mov
enter
lcall
mov
nop
mov
ret
lods
cmp
mov
je
in
fldcw
mov
push
and
add
daa
je
jns
mov
lahf
mov
push
jbe
push
xor
hlt
sbb
pop
insb
and
fcomps
loopne
jmp
lret
push
addb
rclb
popa
leave
scas
pop
rolb
test
cs
ret
mov
nop
cmpsl
fwait
int
dec
lret
add
jne
lods
pcmpgtd
cmc
adc
lret
ljmp
out
ret
cmp
ja
scas
pop
push
xchg
mov
sub
out
mov
aad
xor
mov
imul
or
out
xchg
roll
dec
test
arpl
sbb
pop
inc
jns
mov
leave
add
lret
movsb
in
pop
fisttps
insb
mov
push
adc
sbb
and
xrelease
dec
mov
lret
mov
std
scas
sbb
xlat
mov
xchg
inc
lea
inc
dec
gs
aas
call
arpl
jp
lea
xor
jo
shl
jmp
xchg
xchg
nop
push
add
arpl
push
or
push
pop
hlt
insb
or
js
xor
imulb
inc
jnp
outsb
xlat
push
xchg
test
int
sbb
cmp
push
dec
adc
out
cmp
mov
test
push
loope
pop
xchg
pop
pop
loop
js
neg
push
sub
cltd
out
xor
xor
sbb
dec
jl
and
xchg
sbb
and
inc
mov
loopne
nop
ds
jmp
jle
out
ja
outsl
call
xchg
repnz
cmc
or
das
or
jge
pushf
aaa
mov
xchg
push
mov
pop
aad
daa
cmp
push
add
pop
aas
sbb
pusha
je
ja
fcoml
repnz
add
test
pop
inc
ret
mov
les
sub
test
add
stos
cwtl
pop
into
or
xor
or
mov
popa
test
push
test
mov
cmp
xor
ljmp
int
jns
dec
cmp
inc
rcrb
and
sarl
mov
mov
nop
mov
pop
mov
les
popl
jecxz
repz
ficoml
mov
insb
mov
jg
sub
repnz
cltd
adc
mov
mov
out
cmpsl
inc
or
mov
pop
adc
xchg
push
imul
mov
ret
bound
nop
add
and
nop
add
icebp
mov
aad
xor
sbb
or
jns
nop
out
dec
int
mov
push
and
push
jne
call
pop
inc
pop
ja
add
int3
divb
lods
mov
leave
hlt
fiaddl
fdivs
fwait
aad
addr16
shl
mov
mov
mov
xor
push
xchg
popa
stos
or
mov
fwait
cmpsb
inc
pusha
test
cltd
cmp
not
or
shrl
mov
fs
push
sub
or
adc
xor
lcall
lock
shll
cmc
adc
test
adc
cmp
adc
adc
dec
imul
push
or
imul
jno
xor
lcall
adc
mov
sub
int3
mov
jecxz
loope
mov
dec
or
pushf
mov
ja
popf
ljmp
fisubs
mov
lods
pop
mov
jmp
frstor
push
test
mov
jno
pop
popf
leave
fcoml
rorl
or
mov
mov
and
mov
mov
xchg
ljmp
jmp
jns
push
fwait
ljmp
jbe
jg
nop
mov
pop
jecxz
or
mov
mov
jecxz
js
adc
je
push
dec
mov
mov
sub
dec
mov
mov
pushf
sub
jae
mov
sbb
pop
pusha
sub
sahf
adc
jbe
push
xorl
add
subl
fstl
cmpsl
lock
daa
ret
mov
lock
dec
out
roll
enter
fucomp
mov
mov
xor
add
sbb
hlt
test
mov
stos
add
test
int
ja
jmp
mov
cmp
cmpsl
hlt
pop
lret
xchg
out
xor
add
ret
jmp
lret
inc
sarb
lock
mov
cmp
xchg
stc
lods
rcr
inc
fsubrs
icebp
stc
xor
pop
pop
push
test
mov
popa
fsts
repz
fs
mov
jne
cmpsl
fisttpl
mov
or
lcall
mov
out
jmp
gs
jge
insl
pushf
or
cltd
cmpsb
addr16
sub
inc
into
and
incl
dec
or
ret
pop
scas
out
clc
adc
aas
xchg
sub
push
mov
insb
mov
sbb
shr
imul
push
data16
sub
xchg
rorl
fcmovne
jg
bound
push
adc
sti
push
pop
rcr
mov
leave
and
hlt
idivb
sub
or
shrl
and
xor
out
jne
and
jnp
pop
bound
sbb
ljmp
orl
mov
push
cmp
mov
push
pop
cmp
sarl
inc
pop
data16
add
je
xchg
test
fs
aad
add
mov
dec
mov
jno
and
jecxz
iret
jno
pop
insl
and
jno
jg
xor
cs
mov
mov
daa
iret
jmp
inc
xchg
sbb
adc
lock
lret
sbb
sbb
mov
fimuls
xchg
inc
orl
inc
shl
sbb
je
push
ret
sub
aas
andl
push
jle
fimuls
pusha
lcall
xor
loop
and
icebp
inc
enter
sub
mov
aas
dec
xor
sbb
mov
sarl
cmp
outsl
imul
fstp
daa
cs
ret
pop
sub
sub
push
jp
mov
loope
push
lock
scas
lcall
nopl
push
fdivp
arpl
stc
xchg
imul
mov
inc
lret
arpl
jg
xor
mov
dec
dec
mov
inc
pop
sub
icebp
scas
subl
cwtl
pop
sti
pop
sbbl
sarb
fadds
aas
fsubs
insb
jne
lahf
xchg
inc
dec
inc
imul
mov
and
and
test
pop
mov
loope
adc
repz
fistpll
clc
out
out
cs
mov
aas
xchg
out
cmpsb
ret
sahf
mov
add
or
jo
and
and
insl
mov
xlat
push
mov
adc
xchg
popl
xlat
mov
push
xorb
add
add
notl
leave
test
lcall
add
or
out
lcall
gs
dec
push
lret
adc
jne
pop
and
cmp
inc
sar
xchg
out
adc
shll
into
fldt
dec
cmp
add
pusha
sbb
cwtl
push
mov
loopne
add
xchg
lods
into
jae
sahf
faddl
mov
push
lret
andl
push
mov
mov
and
or
or
cmpsb
pop
jmp
pop
cmp
push
in
push
addr16
xchg
cmp
mov
dec
xlat
subb
mov
mov
mov
shrl
pop
bound
pop
lret
sti
sub
add
repz
cmp
or
mov
pop
adc
cltd
std
xor
repz
int3
aam
add
jecxz
and
cmc
cmp
sub
cmpsb
push
xchg
dec
pushl
cmp
repz
pop
je
pusha
arpl
daa
pop
into
jae
orb
pusha
xchg
cs
aas
out
jmp
mov
aaa
lds
inc
jmp
pop
testl
adc
aam
jb
push
xchg
xor
push
jne
les
mov
jb
repnz
dec
push
inc
cs
dec
xor
xchg
testl
das
filds
cmpb
shlb
mov
addr16
and
xor
xchg
cltd
mov
loope
or
ret
test
jo
sub
cli
icebp
cmp
je
lcall
push
in
xor
adc
scas
adc
fstpt
sub
mov
push
pop
cmp
lar
in
push
ja
out
xchg
cs
pop
jnp
scas
jbe
call
jp
cmp
insb
mov
jl
jbe
orb
sbb
push
rcl
sbbl
stos
mov
and
aam
mov
push
and
test
sbb
xchg
pushf
rorb
pop
pop
jmp
std
fcoms
lock
fdivl
xchg
pusha
lahf
xor
ljmp
cmpl
jp
cmpsb
adc
or
ficomps
inc
out
inc
lods
jae
or
xor
cld
fldt
push
test
cltd
mov
nop
movsl
adc
out
push
mov
es
pop
xchg
mov
sub
cmp
push
fstl
aas
pop
pushf
pop
mov
and
cmp
push
pop
push
mov
xlat
mov
cmp
sub
xchg
cltd
pop
test
mov
add
leave
push
inc
sbb
mov
sti
std
fcompl
inc
out
inc
push
add
mov
mov
cltd
aaa
pop
pushf
add
add
fcmovbe
dec
fst
xor
jle
mov
sti
pop
mov
sbb
push
hlt
rclb
into
mov
mov
ljmp
ljmp
ret
mov
sbb
pusha
loope
rcrb
movsl
inc
repz
dec
outsb
outsb
cmc
cmp
or
rorl
cld
leave
cld
pushf
or
addr16
push
out
repnz
loopne
mov
jne
add
mov
xor
and
scas
int3
bound
mov
dec
pop
inc
adc
inc
sub
mov
jg
or
in
dec
xchg
xchg
pop
pop
jae
inc
lret
and
pop
shlb
pop
sub
mov
fdivl
sarl
xor
into
sub
add
adc
cmp
jns
pop
std
add
icebp
shlb
imull
in
xor
ss
movsl
adc
mov
sbb
lcall
enter
mov
inc
loop
inc
sub
mov
in
mov
lods
loop
add
jp
adc
and
mov
mov
leave
outsl
sbb
mov
adc
scas
fwait
push
ljmp
pop
xor
repz
jb
fistpll
pop
mov
mov
outsb
out
lods
add
sub
lahf
shl
lock
pop
mov
stos
fnstcw
sub
push
sbb
adc
loopne
push
mov
cmp
jge
xchg
sub
out
pushf
xor
sub
push
lds
xchg
jns
sub
xor
bound
cmp
dec
pushf
lret
imul
fsubrs
jmp
sbb
in
sti
cmp
and
jns
scas
pop
sarl
cmp
mov
mul
sarl
test
call
add
ror
adc
mov
push
mov
xor
sub
stos
jae
dec
in
loop
mov
and
shrl
pusha
adc
in
xor
int3
and
daa
jge
pop
clc
lret
inc
mov
or
xchg
mov
pop
int3
mov
in
enter
repnz
inc
mov
jmp
jns
shrb
mov
pop
cmp
jecxz
stos
int3
xchg
lea
pop
fisubrs
jmp
and
xchg
mov
mov
and
ljmp
adc
test
ficoml
and
or
ret
cmp
data16
icebp
aam
sahf
sbb
insb
lahf
lock
pusha
gs
xor
leave
aaa
inc
mov
dec
adc
lods
js
vpunpckhdq
out
mov
mov
imul
sub
push
dec
loope
mov
pop
shrb
dec
add
xchg
outsl
cmpsb
loop
adc
inc
addr16
clc
popf
fistps
xchg
sti
loope
psrld
and
adc
adc
sbb
fcomps
mov
loope
out
add
xchg
iret
sub
adc
xchg
out
or
int
test
cs
mov
jo
dec
adc
dec
sbb
icebp
or
adc
loop
test
imull
cmp
adc
and
imul
mov
dec
gs
xor
jmp
outsl
jge
add
aas
aad
jle
xchg
insl
out
das
xor
inc
call
xor
xor
mov
adc
test
sarl
lea
in
dec
cwtl
mov
inc
cmp
sti
xor
std
mov
mov
xchg
shl
out
scas
das
fidivrs
addr16
add
mov
sbb
jp
sbb
daa
mov
jbe
sub
sbb
vcmpnle_uqps
in
sti
mov
subl
in
in
jle
notl
nop
fimull
push
push
pusha
mov
mov
jl
pusha
and
jb
imul
mov
push
jp
out
jmp
or
aad
jmp
xorb
mov
add
cli
mov
test
adc
jl
xchg
mov
lods
jae
and
test
cmpsb
pop
xchg
sti
pop
xchg
lods
aaa
outsl
xchg
jp
push
call
jno
cmp
das
pusha
fistps
jecxz
fdivrs
cltd
mov
cli
xchg
inc
sbb
sbb
enter
pop
dec
pop
test
lahf
movb
in
sbbl
mov
icebp
push
rorb
sbb
or
push
xchg
ret
out
xchg
mov
mov
dec
and
ljmp
sbb
mov
mov
inc
adc
jmp
or
sub
fisubrl
jnp
sbb
and
insb
inc
jae
dec
call
fcmovbe
ficomps
hlt
bound
cmp
test
mov
test
jne
mov
ret
lea
mov
mov
cmp
fistps
mov
test
fnstenv
inc
int3
or
xchg
xchg
dec
cmp
sub
jne
mov
sbb
mov
aam
sub
push
mov
daa
or
lret
mov
daa
sbb
push
jmp
push
insl
repz
call
inc
sub
outsl
loope
sub
adc
add
mov
sub
mov
adc
mov
push
jl
adc
sbb
int3
stos
push
repz
cli
aad
sub
mov
sbb
insb
jle
cmp
shll
push
std
jb
push
inc
lods
and
xor
sbb
out
jmp
outsb
nop
ds
pop
mov
sub
cwtl
stos
mov
leave
out
dec
or
mov
mov
or
or
jnp
int3
fistps
sub
scas
or
xor
dec
jns
xor
jnp
push
loope
sbb
adc
push
mov
mov
dec
andb
push
test
fisttps
adc
cmp
jbe
mov
jbe
gs
out
mov
imul
or
aaa
fisubrl
idivl
nop
mov
fimuls
aas
vpmulhw
jo
push
mov
sbb
jnp
pop
dec
call
xchg
adc
fsubrl
repz
xchg
lret
ljmp
jg
mov
cmp
mov
dec
dec
in
in
pop
pandn
ljmp
mov
add
insl
xor
adc
mov
add
cmp
aas
mov
jno
sbb
repnz
cmc
xchg
popa
imul
xchg
dec
xchg
sub
push
jb
mov
imul
outsb
add
cmp
jge
mov
xlat
movsl
push
inc
call
movsb
xchg
mov
jnp
mov
xchg
fcompl
jp
fsubs
stos
jo
pop
adc
add
cmp
out
popa
ret
in
adc
in
imul
and
push
das
sub
dec
sbb
int
xchg
lret
jo
divl
loop
xor
and
jo
sahf
jns
cmpb
pop
int3
cmp
or
int3
sub
mov
add
cmc
pop
test
jne
mov
pop
lahf
xor
incl
inc
dec
xorl
jne
loope
in
adc
lea
mov
sbb
mov
lods
jnp
mov
imul
fwait
sti
in
rcrl
jnp
fiaddl
inc
stc
lods
and
pop
jns
out
fcmove
and
mov
add
adc
inc
adc
adc
or
or
push
add
jp
and
adc
inc
fcompl
adc
push
test
mov
mov
or
jbe
inc
pop
outsb
sub
inc
icebp
add
mov
or
sti
sahf
mov
jp
sar
sbb
out
aam
push
push
popf
dec
scas
out
add
xchg
sub
iret
cwtl
lret
pop
in
cs
jae
sub
clc
mov
cld
inc
pop
cmp
cmpsl
les
mov
jnp
jl
fwait
add
movsb
enter
outsb
jno
push
push
mov
jecxz
xchg
in
mov
loope
push
pop
std
xchg
rcrl
in
adc
test
jl
dec
dec
sbb
test
cld
cs
inc
mov
dec
push
xlat
inc
mov
loop
cltd
xchg
xchg
mov
mov
jp
scas
jno
call
sub
adcl
into
addr16
mov
pop
jp
pop
fwait
ljmp
pop
mov
add
jg
mov
dec
adc
mov
push
stos
mov
adc
mov
gs
fs
push
pop
stc
xchg
push
xor
and
or
mov
clc
sub
or
sbbl
push
adc
mov
out
out
clc
push
pushf
mov
pop
daa
push
cmp
pop
call
jmp
push
or
xor
sbb
or
adc
fistps
popf
cmpsl
pop
or
sbb
and
xchg
add
mov
int
scas
or
jbe
sbb
negl
dec
test
adc
pop
jg
testb
push
dec
int
pop
xchg
sub
or
call
mov
mov
stc
leave
pop
int3
sub
pop
xor
mov
fldt
cltd
inc
lock
xchg
negb
inc
inc
cmpl
cmp
inc
cltd
imul
ja
xor
test
stc
cmpsb
iret
pop
sbb
bound
loop
or
xor
and
push
fcomi
dec
iret
stc
adc
nop
xor
xor
jmp
pop
inc
pushf
repnz
push
mov
fdivrs
leave
out
rorb
mov
fisubs
jge
add
xchg
add
mov
pushf
xchg
aaa
pop
pop
or
js
push
lret
mov
lret
mov
sbb
test
lea
hlt
cwtl
test
push
js
test
adc
das
in
mov
mov
popf
je
mov
movsl
inc
mov
adc
nop
mov
fstl
aaa
push
fwait
out
add
mov
add
imul
mov
sub
out
xor
inc
xchg
mov
sbb
or
xor
adc
test
loope,pt
push
xor
out
idivb
jmp
sbb
icebp
adc
neg
ror
call
cld
jl
mov
jae
pop
jg
loop
or
adc
imul
mov
push
dec
ljmp
pop
push
sbb
adc
stos
std
fmuls
mov
outsl
fmull
or
xchg
sub
pop
xor
xor
mov
mov
sbbl
repz
imul
xchg
icebp
ret
push
and
bound
scas
pushf
jae
dec
cwtl
jmp
pop
dec
push
dec
sbb
daa
lds
shll
jecxz
scas
inc
pop
movsb
pop
xchg
out
outsl
push
jmp
mov
push
ror
xor
pop
dec
pop
iret
dec
xchg
cwtl
jae
into
loop
sbb
jmp
ja
lahf
lock
gs
out
xchg
shl
aas
push
dec
xchg
or
jb
push
push
test
mov
test
dec
rcl
inc
lock
adc
rcl
sub
dec
icebp
jne
mov
outsl
pushf
and
adcl
aas
and
imul
jp
pusha
scas
test
xchg
mov
dec
inc
dec
cli
lods
or
adc
jns
push
cwtl
fidivs
push
dec
dec
sub
or
sbb
fistl
mov
lcall
stos
nop
adc
imulb
gs
pop
or
fcomps
sbb
mov
in
mov
jle
loop
test
jl
lock
mov
sbb
adc
outsl
mov
ljmp
rcrl
es
or
stc
xchg
cmp
insb
jb
hlt
mov
je
addr16
dec
jmp
and
pusha
mov
movsb
pop
loope
inc
bound
outsb
push
xchg
or
inc
pop
fisttps
dec
pop
jns
popf
sbb
fsts
and
pop
sbb
inc
in
scas
mov
push
or
insb
mull
aaa
cmp
lods
lea
dec
or
xor
loope
es
mov
mov
lds
repnz
jecxz
in
pushf
inc
fnstenv
cmpl
inc
push
push
push
cmp
xor
repnz
xchg
cmp
or
jns
sbbb
sub
mov
dec
cmpsb
mov
sahf
cmp
mov
dec
mov
and
mov
movsb
xor
mov
mov
adc
push
and
fwait
pop
stos
into
pushf
scas
mov
mov
jl
daa
test
addr16
mov
sub
push
push
push
stos
test
repnz
shlb
dec
movl
sub
out
sub
inc
xor
leave
lahf
xchg
mov
sbb
mov
pop
push
jbe
jne
sar
jle
dec
mov
xor
out
push
dec
mov
cld
aas
cmp
icebp
aad
fisubrs
lahf
dec
inc
mov
mov
sub
mov
ret
cwtl
sub
test
adc
pop
sub
setb
inc
inc
stc
and
add
stos
jno
in
sti
pusha
inc
mov
add
ret
aad
mov
push
jne
inc
movsb
ljmp
xor
fnsave
inc
add
and
add
clc
mov
test
adc
inc
push
push
insb
sbb
dec
push
or
sahf
sti
movups
lea
movsb
out
adc
je
xor
pushf
dec
jne
stos
cmp
cmp
je
mov
fstps
pop
sbbb
and
dec
rolb
scas
testl
dec
pop
pushf
cmpsl
cli
mov
enter
icebp
fdivrs
add
dec
jbe
mov
adc
arpl
ror
xchg
fildll
or
ljmp
cmp
sub
mov
nop
inc
test
xlat
mov
call
out
adc
cmp
outsb
fwait
mov
push
cmp
mov
xor
xchg
dec
pop
add
fidivrs
rcrb
lds
mov
loope
movsl
push
mov
or
jne
jo
arpl
fisttps
adc
clc
push
test
xor
ret
les
mov
sub
clc
xchg
out
shrl
std
lock
push
test
repz
jo
das
sub
mov
fimull
xchg
cmp
lds
and
inc
xchg
cmp
out
push
hlt
pop
mov
fstp
mov
pop
scas
aam
jg
mov
pop
test
inc
aad
fildl
insl
xor
sub
ds
dec
call
pop
cs
dec
pop
fldcw
jo
mov
cld
xchg
movb
push
enter
or
mov
push
inc
cmp
aam
sar
mov
leave
add
pushf
jo
mov
or
add
add
mov
mov
clc
cmp
out
jb
adc
add
pop
xor
inc
nop
xor
lds
add
mov
sub
mov
mov
popf
dec
sub
repnz
notb
divb
sti
jno
mov
sbb
fimuls
rol
and
in
mov
js
call
xlat
xor
adc
add
push
insl
into
mov
mov
and
movsl
lret
cwtl
mov
test
pusha
xchg
scas
cmp
cltd
cmp
aam
mov
push
shl
es
jae
out
add
inc
outsl
loope
insl
icebp
xor
mov
ret
adc
push
xchg
ficomps
mov
mov
mov
mov
fisubs
jnp
adc
loop
call
hlt
cmp
cmp
dec
sbb
das
scas
push
cmp
xchg
lahf
xchg
lea
lcall
mov
ret
shlb
lods
movsb
dec
mov
lcall
jecxz
shrl
push
mov
rcrl
scas
mov
push
aas
and
xor
stc
cmp
and
mov
mov
in
sbb
push
xchg
add
mov
jb
stos
lahf
testb
bound
gs
xchg
cmpsb
in
and
mov
insl
scas
data16
sbb
add
push
dec
clc
test
sti
jbe
out
add
loopne
adc
addl
jns
cli
nop
out
ja
push
jno
jge
push
mov
jge
cmp
mov
nop
les
in
sbb
jle
inc
lea
cld
or
jecxz
mov
and
or
add
fcoml
ficoms
pop
aaa
pusha
orl
lock
cmp
xchg
idiv
jecxz
shl
cmpl
scas
mov
inc
int3
sbb
mov
or
lock
out
xor
out
push
and
xor
or
mov
mov
in
push
jb
rcll
nop
inc
push
fwait
or
cmpsb
jg
pop
fisubrs
lcall
sub
adc
add
inc
mov
cli
into
or
jbe
stos
or
mov
mov
dec
push
adc
loope
sahf
sbb
xor
rcl
xor
cmp
mov
lahf
popa
mov
imul
mov
in
stos
pop
outsb
mov
clc
movsb
push
repz
pop
cmpsl
lahf
mov
jno
xor
cmp
fistl
jnp
pushf
mov
aad
add
jp
sbb
or
cmp
adc
test
aaa
sbb
sub
pusha
mov
mov
call
test
pusha
push
ficoms
ret
fisubl
dec
push
ret
js
xchg
xchg
mov
push
leave
jo
dec
call
xor
popf
or
cmp
iret
xchg
dec
lahf
adc
adc
xor
push
jno
fsubs
iret
push
dec
pop
lock
pop
ret
jmp
xchg
insl
xor
ja
add
inc
es
pop
pushf
loop
add
in
out
test
arpl
cmp
cwtl
out
pop
mov
inc
sbb
scas
dec
stos
divl
enter
cmpsl
push
daa
sarb
pop
inc
bnd
pop
or
sbb
pushf
xor
repz
imul
adc
adc
pop
lds
mov
inc
cld
pop
jecxz
mov
xlat
cmp
jns
je
imul
pusha
cmpsb
xchg
jp
mov
cmpsb
cmp
leave
mov
sarb
data16
push
xor
lret
jle
xor
push
pop
mov
adc
sbb
pop
cld
pop
add
in
push
std
ffree
add
ret
hlt
mov
push
xchg
stos
leave
aad
adc
pop
cli
adc
fdivrs
xchg
push
enter
in
and
inc
aad
push
adc
sbb
xor
sub
sub
push
sbb
inc
shll
xor
mov
dec
dec
test
add
push
dec
out
out
fldl
sti
je
out
add
fdivrp
das
push
es
mov
lods
clc
or
gs
mov
das
popa
dec
push
call
mov
jo
cmp
push
icebp
and
popf
cmpsb
in
mov
out
xor
mov
pop
mov
cs
and
xchg
bound
mov
xchg
inc
xchg
xor
push
dec
das
pop
mov
in
repnz
into
adc
shll
dec
aaa
mov
xlat
push
inc
mov
sub
inc
movsb
push
or
pop
add
add
int
pop
inc
cli
or
and
mov
inc
add
and
inc
gs
jle
lcall
xchg
cmp
sbb
icebp
test
mov
mov
mov
loop
outsb
in
cmc
add
insb
mov
cmp
subl
push
insl
or
adc
jmp
xchg
jb
sbb
sbb
pop
daa
jae
mov
jae
cwtl
fwait
adc
int3
jp
mov
mov
in
sub
and
inc
leave
sbb
jns
lea
mov
jno
sahf
test
and
dec
or
add
sbb
cmp
int
sbb
pop
mov
iret
pop
gs
ret
or
jne
fbstp
pop
mov
addr16
add
jl
xchg
cmpsl
mull
pop
jns
or
popf
push
cld
xchg
xor
rolb
xchg
inc
xor
and
sbb
cmp
xor
leave
test
inc
or
push
cmpl
leave
dec
aad
cmc
fdivrp
adc
call
jl
cmp
xor
mov
jno
xchg
jo
jbe
cmp
cld
sbb
outsb
pusha
stos
cmp
add
lea
shll
cmc
mov
xchg
ja
test
jg
out
mov
mov
lea
stos
push
ja
push
imul
mov
mov
rcll
mov
iret
sub
push
stos
xchg
in
iret
fwait
mov
and
in
loop
fmul
ljmp
cmp
add
sub
cmpsl
push
jno
scas
test
push
in
cs
jae
popl
in
xor
cmp
push
fsubs
mov
mov
push
aam
fildl
loope
xor
dec
mov
inc
lahf
in
and
pop
inc
or
cltd
repnz
and
mov
inc
pop
in
repz
xor
pop
xor
add
ljmp
mov
in
setg
rorb
movsl
and
imul
jnp
scas
inc
stos
inc
pop
inc
dec
cmp
es
or
xchg
dec
rcll
ret
iret
rcr
lds
pop
pop
pop
cli
ret
out
daa
out
xchg
pushf
call
mov
sahf
fnstcw
pop
mov
push
fcomip
jge
fstpl
insb
or
pop
inc
sub
pop
mov
cmp
dec
mov
sahf
arpl
lahf
es
and
outsl
mov
mov
pop
jge
jo
push
mov
scas
es
ja
cmp
mov
push
mov
xchg
push
loope
mov
das
jg
arpl
or
in
clc
xor
push
pop
or
shl
xchg
cld
inc
pop
icebp
fimuls
cvtps2pd
loope
mul
push
shll
jo
mov
loopne
stos
mov
mov
out
xchg
sbb
pusha
in
pop
movsb
leave
lods
push
test
push
sub
adc
data16
adc
cmp
scas
mov
fistps
pop
pushf
clc
inc
test
add
es
or
and
pop
pop
pause
test
sub
adc
push
gs
les
and
lock
mov
test
jne
mov
mov
lahf
insl
dec
sbb
jb
inc
or
sub
cli
lock
loop
jno
jns
jbe
jge,pn
and
mov
ss
fs
add
mov
sarl
lock
cmp
add
sbb
out
inc
lret
sahf
ja
adc
je
fildl
clc
pop
out
fs
and
pop
stos
sub
popf
xor
stos
into
pop
dec
pop
insb
sub
inc
jae
mov
cli
cmp
jns
dec
lods
xor
cmp
rol
scas
popa
push
or
aad
pushf
sbb
in
lock
std
out
mov
dec
jo
xchg
lods
add
fwait
mov
cltd
add
inc
outsb
mov
cmp
lods
mov
adc
adcb
pushl
imul
sub
mov
outsb
cmp
jmp
fadds
mov
fidivrs
jmp
jl
mov
jo
and
roll
xchg
js
divb
and
addr16
aas
sbb
stc
jae
cmp
add
pushl
push
mov
stos
cli
jnp
mov
imull
pop
lods
repnz
fcompl
mov
push
push
lock
pop
adc
jae
clc
aam
jp
popf
push
inc
aas
hlt
pushf
fmul
mov
sahf
push
sub
mov
adc
into
bound
cmp
mov
call
jl
dec
pop
rclb
fldenv
rolb
lret
fildll
xchg
xorl
lahf
or
in
push
mov
mov
jo
aam
test
jb
push
fcmovb
and
lret
jae
shll
rclb
enter
add
sub
mov
out
mov
sub
sub
call
out
into
jge
push
ret
scas
cmp
or
ja
sub
ljmp
aad
mov
adc
push
aam
fldl
rep
mov
fwait
or
out
inc
cltd
mov
cmpsl
adc
sahf
push
dec
pop
sub
test
mov
sub
dec
test
jno
sti
loop
mov
xor
and
mov
lods
dec
lods
hlt
fnsave
ja
imul
xchg
test
or
clc
sbb
dec
in
and
sti
mov
pop
aas
xchg
cmp
aaa
and
sbb
sahf
je
sbb
jmp
push
mov
aam
jl
push
mov
cs
das
jno
rcl
test
pop
ja
adcb
push
data16
cmc
mov
movsl
cli
inc
ror
insb
movsl
enter
mov
jne
int
fsubrl
or
out
add
idiv
test
jns
lods
insl
mov
mull
lock
out
fdivr
inc
loopne
adc
iret
stos
mov
lret
sub
hlt
xor
enter
lret
jae
jnp
jp
fcmovbe
mov
fcomps
int3
sbb
cmp
cmp
inc
sbb
test
out
dec
cmpsb
xchg
fistpll
daa
flds
dec
sbb
fiaddl
enter
push
mov
sbb
sub
mulb
jl
add
ss
and
sub
ret
inc
cmp
fwait
sbb
fwait
adc
out
int3
rclb
cwtl
fwait
out
loopne
dec
shr
outsb
sarl
pop
hlt
pop
mov
popa
mov
jbe
xor
cmp
or
stos
cmp
scas
sbb
into
scas
ret
add
jle
mov
cmp
movsl
out
push
mov
adc
adc
xchg
cld
mov
stos
xchg
outsl
mov
or
sarb
push
pop
lcall
cld
repz
pop
cmp
push
jle
fstpt
pop
popf
jle
mov
xchg
dec
push
push
fcom
jle
rorl
pop
jmp
mov
test
sub
dec
into
pusha
sub
add
add
int3
cmp
mov
arpl
push
lcall
ret
test
sahf
jecxz
andb
mov
int
push
ficompl
test
sub
pushf
adc
adc
jbe
out
adc
iret
sub
sbb
aad
push
shlb
inc
dec
pop
fs
stos
dec
adc
add
push
js
mov
je
sti
es
jp
sbb
jp
dec
xchg
xchg
adc
out
pushf
adc
jae
out
hlt
or
aam
fldcw
jl
ljmp
sar
call
add
sub
and
loopne
cmp
daa
pop
mov
push
pop
pop
mov
gs
imul
sbb
jmp
aam
jge
decb
sub
test
cli
jb
lock
push
or
xor
enter
std
sub
xor
mov
pushf
pop
dec
jle
dec
rclb
incl
xor
mov
mov
sbb
rcll
and
pop
cs
cmpsb
aas
xor
out
xchg
popa
pusha
push
cltd
jbe
fwait
orb
mov
shlb
dec
push
xchg
mov
in
cmpsl
je
pushf
cmpsb
std
pop
xchg
adc
mov
lds
lock
jp
faddl
xor
pop
inc
adc
mov
fsubr
add
fsub
and
or
iret
mov
xchg
cld
mov
adc
cmpsl
or
popl
xchg
xor
sub
daa
or
adc
sbb
pop
loop
adc
rcr
mov
add
jecxz
push
je
mov
dec
repnz
in
pop
mov
loop
enter
out
fwait
xor
mov
dec
jne
mov
shl
arpl
cmp
cs
repnz
push
inc
xchg
fstl
push
scas
jb
out
dec
sbb
pop
mov
xlat
ja
add
sahf
inc
scas
int3
lret
cmp
aas
xor
bound
imul
jmp
jl
invd
sbb
popf
pop
orb
aad
sub
push
xor
aam
and
xlat
out
mov
xchg
mov
push
mov
lods
iret
or
ret
movzbl
daa
dec
cld
or
cmp
mov
pop
out
out
add
aad
flds
js
mov
jno
add
call
jl
cmc
sub
cwtl
movsb
pop
out
push
xor
inc
or
pusha
adc
inc
int
outsb
daa
xor
notb
mov
mov
dec
insb
loopne
loope
adc
lcall
pop
push
mov
into
cmc
jp
mov
in
mov
pop
bound
nop
dec
push
adc
xchg
jne
stos
or
jbe
cmp
inc
insb
xor
inc
lods
int
inc
cmpb
int3
mov
xchg
mov
xor
mov
ds
inc
je
in
mov
xor
dec
xchg
rorl
rorb
push
aam
imull
in
push
sub
test
aas
push
cmp
sbb
and
and
pop
divl
pop
data16
jecxz
insl
push
cmpl
adc
enter
sub
int3
aas
xchg
mov
dec
mov
jno
into
subb
cmpsb
push
in
dec
dec
loop
outsb
sub
test
jle
in
mov
icebp
add
ret
add
bswap
pop
sbb
sub
pop
add
cmpsl
sbb
push
sbb
out
mov
push
insb
adc
stos
mov
mov
mov
jl
shlb
andb
xor
pop
xchg
loope
sarl
orb
dec
dec
xor
fisttps
andb
rcll
jne
repnz
je
outsb
jg
hlt
sti
cltd
and
mull
movsl
in
jbe
pop
pushf
and
ss
mov
daa
cmp
xchg
cmp
rolb
in
je
inc
std
popf
sahf
test
jl
test
push
pop
or
lds
ss
js
mov
rcrl
sbb
push
and
and
adc
in
pop
inc
adc
sub
dec
test
adc
ret
in
push
sbb
je
mov
cld
mull
mov
icebp
jno
loope
fildl
lahf
xchg
xor
les
into
pop
mov
pop
call
adc
int
addr16
mov
arpl
xchg
mov
xor
dec
sbbl
or
out
xor
fistpl
mov
pop
pop
into
push
inc
mov
xchg
aas
andl
mov
mov
sub
in
lret
fidivl
roll
sub
sub
mov
in
dec
popf
dec
lea
pop
sti
jmp
jo
sbb
flds
and
cmp
xor
mov
int3
insl
pop
or
sub
mov
lea
aam
jnp
fs
jno
add
pop
mov
pop
add
divb
jecxz
sub
or
outsl
push
int
fwait
mov
int
sahf
mov
push
out
pusha
adc
jl
mov
iret
mov
imul
jecxz
into
cld
sahf
call
test
or
jo
xorb
les
mov
xchg
outsb
or
pop
lahf
ret
or
pop
mov
pop
cmpl
dec
push
lcall
sub
ljmp
cld
mov
add
leave
scas
repnz
xchg
mov
cmp
xchg
test
in
sahf
adc
leave
mov
jmp
pop
xor
sbb
loope
ds
push
in
lods
repnz
fmull
sarl
and
in
mov
insl
adc
sbb
call
add
ss
adc
cmpsl
shrl
sarl
mov
lahf
imulb
lahf
mov
jb
and
into
add
lods
cmp
push
cmp
add
pop
push
mov
dec
popf
cli
mov
into
xchg
jo
imul
fistps
cld
inc
imul
fwait
gs
mov
dec
push
pop
add
les
push
std
pop
scas
int3
push
inc
mov
xor
outsb
pop
stos
cmp
push
sub
dec
push
repnz
imul
addr16
mov
pop
mov
out
pusha
cmpsb
stos
jmp
push
in
mov
fwait
sbb
jle
cmp
popa
cld
pop
fcomps
cmp
cmpb
cmp
push
sub
xchg
cltd
cwtl
push
jle,pt
sub
push
mov
sbb
adcb
fistl
mov
dec
jno
data16
xor
lahf
mov
cmp
push
cld
pop
and
or
fs
icebp
xor
rcl
push
and
sub
sub
push
fistl
daa
pop
sbb
sbb
rcl
mov
filds
pop
loope
pop
mov
sub
sti
cmp
rclb
cs
rorl
mov
and
inc
addr16
pop
cmpsb
or
clc
jbe
fsts
sahf
sahf
xchg
in
cmp
push
jp
inc
and
sub
and
popf
rcll
jne
xor
das
add
jne
dec
or
push
pop
and
adc
int
inc
cld
mov
inc
enter
cmp
inc
leave
jle
cwtl
mov
sub
jnp
iret
jbe
sub
adc
insl
and
stos
add
and
xchg
shrl
jbe
nop
cs
cltd
mov
mov
add
mov
clc
sbb
jno
test
popf
repnz
xchg
jp
lds
cmpsb
std
daa
out
bound
mov
sub
cs
testl
adc
sbb
mov
sti
push
sub
adcb
fldln2
cmpsl
lods
movsb
sarb
fdivrl
loop
data16
inc
sti
inc
int3
mov
xorb
bound
ljmp
cmpsl
out
sbbb
test
stos
push
jmp
hlt
movntq
out
sub
stos
and
adc
mov
mov
jb
mov
fcoml
enter
pop
push
inc
or
test
mov
inc
stos
int3
jmp
sub
fs
ret
mov
sub
mulb
and
mov
test
pop
add
dec
xchg
shl
sbb
lea
inc
mov
dec
push
adc
cltd
sbb
sti
sub
nop
push
pop
imul
stc
in
mov
insb
lcall
addb
jbe
pop
add
scas
push
into
pusha
in
mov
cmp
fmul
adcl
outsl
xchg
inc
mov
out
cmc
test
adcl
icebp
adc
enter
xchg
sbb
jns
out
push
dec
repz
sbb
mov
into
loope
fstpt
pushf
jb
lea
pop
mov
jecxz
cmpb
sub
dec
cmp
xor
dec
jae
loopne
add
sbb
sti
xchg
xor
std
gs
nop
xor
mov
adc
push
test
adc
xchg
pusha
aas
mov
stos
adc
pop
in
in
stos
jl
repz
hlt
jl
out
sarl
or
mov
cld
stos
jns
arpl
xlat
sub
shll
add
in
xor
gs
std
hlt
push
movsl
mov
pop
in
les
push
add
ficoms
aam
ss
jmp
mov
lock
int
adc
in
test
xchg
adc
cwtl
outsl
pop
adc
iret
mov
incb
mov
fsubl
push
arpl
inc
mov
cld
pop
cmp
sbb
xchg
xlat
js
mov
mov
sub
jl
stos
shll
in
addr16
sub
inc
clc
je
inc
or
ret
adc
xlat
jo
popa
outsl
test
mov
aam
cmp
repz
mov
inc
ret
mul
sbb
inc
cli
inc
loop
stc
pop
scas
mov
cmpsb
mov
mov
test
xchg
js
inc
jge
or
jle
sub
adc
add
add
cmp
jl
je
mov
addr16
inc
mov
mov
or
push
xchg
insb
flds
sti
sub
leave
jl
mov
push
in
popf
imul
aaa
lods
out
mov
es
xor
and
sti
daa
inc
es
subb
dec
or
add
ror
jne
jae
pushf
sbb
inc
pop
xor
enter
dec
into
repnz
into
fstpt
mov
add
test
repnz
in
rcr
sbb
xor
shll
ffree
mov
ds
sub
scas
pop
xchg
cwtl
cmc
popf
mov
add
popf
mov
cmpsb
inc
stos
jle
xchg
out
xor
mov
jns
xorb
jb
pop
leave
mov
pop
stos
aad
mov
rclb
pop
adc
in
imul
das
out
repnz
sarb
pop
aad
test
push
out
fsubrs
ret
and
leave
dec
int
or
inc
push
push
sahf
jo
dec
xor
leave
dec
popa
xor
xchg
das
aas
lcall
mov
pushf
inc
pop
cmpb
pop
push
sahf
jmp
cltd
jae
mov
sub
fnstcw
pop
fildll
addr16
in
imul
fmull
sbbl
sub
xchg
inc
sub
cmp
dec
add
popf
mov
repz
cmc
sub
xor
rclb
decl
sub
xlat
jmp
int3
mov
bt
pop
lcall
lahf
cmc
push
scas
out
jae
ljmp
into
inc
sub
push
xchg
mov
cwtl
jae
mov
testl
push
push
repz
sub
inc
divb
and
enter
cwtl
mov
aaa
inc
xchg
test
inc
mov
and
sub
cmp
jne
xchg
stos
adc
pop
or
or
idivb
jp
test
mov
pop
pop
cmc
lret
push
pop
es
popa
pop
pop
nop
inc
mov
jne
mov
ljmp
adc
lahf
dec
or
pop
pusha
lods
adc
pop
ds
adc
mov
rorb
cli
pop
pop
add
and
or
enter
add
mov
push
incl
aam
pop
xchg
fstps
fnstsw
lahf
pop
fsubr
add
cmp
aad
test
mov
lock
xchg
aam
mov
xchg
andl
aam
repz
test
fdiv
xchg
repz
hlt
jle
call
inc
rol
or
or
jno
and
stos
scas
cmc
repz
xchg
sbb
or
pop
lea
leave
lret
mov
xor
pop
mull
repz
int3
lods
and
testb
add
pop
xchg
lret
ss
pop
sbb
xor
or
sbb
cmp
push
mov
enter
dec
adc
inc
enter
xor
inc
mov
repnz
pop
jne
jb
adc
sbb
sti
push
xlat
and
sbb
mov
jl
mov
fbld
pop
scas
pop
not
sbb
cmp
push
add
cmp
push
add
cmp
das
sti
sbb
mov
mov
nop
and
xor
cmc
pushf
es
sbb
loop
sbb
mov
pop
fwait
sbb
xchg
insl
push
adc
jb
and
pop
dec
in
ret
and
fnsave
xchg
inc
in
push
mov
pop
and
sti
ss
mov
xor
lcall
push
mov
inc
scas
mov
mov
lahf
sbb
dec
imul
scas
les
mov
in
pop
lcall
jnp
out
or
push
and
push
daa
cmpsl
imull
incb
pop
notb
adc
ss
jg
push
sbb
outsl
fwait
sub
inc
insb
popa
mov
test
int
pop
mov
je
sub
dec
xor
out
push
or
pop
roll
divl
xchg
add
out
adc
jg
push
or
fs
mov
cld
dec
dec
inc
enter
dec
mov
mov
and
hlt
repnz
roll
xchg
mov
stc
xchg
push
insb
or
add
xchg
xchg
and
jb
add
mov
mov
lret
ret
ljmp
mov
test
loope
pop
into
and
subb
jg
ret
push
xchg
mov
xchg
dec
mov
jle
adc
mov
add
push
fs
inc
std
out
fucomp
aaa
mov
repz
mov
insl
push
cmp
or
leave
xchg
cmp
cmpsl
ja
out
cld
adcb
addb
out
aas
filds
test
ja
cs
rolb
stos
mov
and
testb
jbe
xorl
arpl
outsl
jle
jle
out
call
stos
add
les
mov
inc
fcomps
movsb
jmp
shrb
mov
push
setno
mov
ljmp
fs
out
popa
inc
xchg
jge
shr
lret
adcl
sbb
shll
inc
push
pop
pop
dec
mov
pop
dec
ss
push
outsl
sti
cmp
adc
xlat
or
mov
push
cmp
ds
cmpsl
cltd
jge
outsb
dec
imul
aad
cmp
cs
jge
dec
into
in
mov
mov
adc
pop
add
outsl
call
popa
sahf
je
or
fsubl
jmp
xchg
mov
nop
sbb
sub
xor
andl
dec
or
mov
pusha
hlt
inc
add
xchg
dec
movsb
rep
adc
int3
sub
inc
psllw
test
pop
popa
fs
dec
xor
fidivs
daa
add
bound
jno
in
dec
subb
mov
movsb
or
jbe
std
lods
mov
fs
push
insl
mov
aas
xchg
ss
or
push
jnp
or
or
push
out
outsb
idivl
sub
lds
lret
js
into
xchg
insl
rorl
cmp
pop
out
mov
fdivl
mov
outsl
hlt
out
adc
dec
or
mov
cli
out
lods
jle
rclb
dec
lods
push
nop
cltd
mov
repnz
xor
push
or
loopne
jbe
sahf
fidivl
mov
das
cmc
nop
clc
lret
loope
repnz
popa
pop
cltd
faddp
cmp
adc
gs
xchg
pop
outsb
push
in
mov
inc
mov
push
out
stos
sahf
xchg
fs
push
std
push
inc
cmc
pop
jb
pop
jge
cmpsl
inc
cs
push
lea
mov
mov
pop
jne
pop
jne
loope
incb
adc
dec
andl
jae
sub
xchg
adc
inc
rclb
mov
push
shlb
out
jge
mov
lret
cmp
xchg
lods
sarl
push
nop
aad
inc
aam
lahf
in
ret
pushf
cmp
mov
enter
scas
pop
sbb
arpl
fstp
lret
repz
jae
dec
arpl
std
testl
ror
push
mov
lea
jo
in
adc
popf
inc
cmc
nop
mov
xchg
sbb
inc
enter
sub
stos
pop
lret
mov
add
sahf
fs
das
aam
xchg
repz
in
adc
sbb
xor
in
or
das
jl
lcall
cld
push
sub
ret
jb
les
mov
xchg
cmc
ljmp
mov
or
jns,pn
pusha
mov
inc
lods
sbb
pop
in
aam
mov
push
cmp
lret
jp
lret
popl
aaa
jecxz
aad
sbb
sbb
repz
into
out
call
and
xor
fimull
gs
int3
pop
in
call
jl
jno
sub
xchg
nop
cld
out
adc
les
call
mov
insb
mov
sbb
xchg
dec
cmp
cli
add
mov
mov
adc
rcll
push
gs
inc
loop
adc
jno
bound
mov
adc
test
addr16
popf
xchg
rclb
mov
out
xchg
pop
lock
push
lret
cmpsb
stos
or
repz
pushf
imul
or
scas
scas
jge
das
out
jbe
aad
movsb
aas
ret
daa
push
test
les
stos
in
lret
xchg
push
mov
jg
sbbl
call
mov
add
in
divb
test
jno
frstor
iret
movsb
arpl
jge
xor
pop
hlt
es
jnp
mov
fistpll
adc
or
push
mov
sahf
out
push
rolb
or
popa
push
push
fadds
sbb
cltd
popf
xchg
adc
pop
lret
and
dec
adc
and
repz
adc
mov
xlat
pmuludq
test
jb
and
sub
adc
in
stos
xorb
in
pop
cmp
mov
adc
rcrl
mov
shr
inc
in
mov
pop
adc
xlat
aaa
loop
in
mov
jns
sub
jle
dec
outsb
push
mov
pop
fidivrs
add
mov
adc
dec
lods
or
enter
jae
fmull
and
mov
mov
shl
lods
dec
fdivl
mov
or
std
loopne
mov
push
cmp
mov
jo
add
clc
xor
pop
cmpb
mov
sbb
fisttpl
fidivs
pop
xor
lods
cmp
ret
cli
icebp
ds
stos
mov
fbld
nop
xor
jbe
dec
ljmp
scas
mov
xor
sub
push
mov
sbb
mov
fldcw
scas
add
nop
hlt
mov
dec
xchg
cmpsb
add
jle
nop
mov
loope
inc
stos
stos
mov
mov
sarl
inc
add
icebp
lret
pop
push
push
pop
not
dec
xchg
add
xchg
nop
jo
add
sub
or
pop
popf
sahf
sub
adc
rorb
xor
push
fstps
jno
mov
and
push
stos
loope
vmovupd
test
pop
mov
pop
movsb
sbb
jmp
adc
pop
in
pop
jae
mov
pop
ret
jmp
mov
cld
int
add
jno
enter
inc
std
inc
inc
dec
mov
mov
bound
push
insb
and
cltd
or
add
xchg
test
gs
push
movsl
aad
incl
inc
sbb
xor
push
fcomip
xchg
call
repnz
repnz
pop
cmc
jle
dec
mov
iret
bound
outsl
pop
lods
clc
lods
das
pop
rcll
cmpl
out
sub
xor
fsubrl
sub
lret
mov
clc
or
xor
int
shrl
out
subb
mov
mov
bnd
and
sbb
cmp
repnz
mov
sbb
push
lret
ret
lock
xor
inc
jle
insb
punpckhwd
out
lds
ss
lret
dec
add
repnz
fistpll
lds
icebp
into
adc
movsl
xchg
sub
pop
add
in
dec
and
inc
inc
and
sarb
arpl
test
aad
mov
mov
jmp
push
stc
xor
ret
in
test
daa
push
test
dec
pushf
adc
data16
out
xchg
or
lods
enter
out
int3
sahf
mov
adc
test
mov
pop
ficoms
orl
xchg
adc
pop
adc
sahf
push
add
imulb
sbb
fcmovne
push
imul
jbe
stc
cltd
ss
dec
scas
popf
mov
inc
dec
rolb
scas
inc
aad
js
mov
mov
xlat
add
and
test
jno
xlat
push
add
push
rcrb
sbb
lods
cld
call
push
insb
and
adc
or
lahf
test
fwait
lcall
mov
or
jae
int
mov
stc
xchg
pand
sbb
and
sub
es
lret
sahf
stc
fidivrl
jb
stc
xor
mov
in
and
clc
lock
idivb
pop
xchg
js
out
xchg
cs
jl
aaa
push
sub
push
aas
lods
mov
mov
bound
clc
repnz
lret
xchg
scas
imull
fs
adc
adc
out
push
mov
stos
mov
adc
cs
push
mov
xor
push
cmp
popf
popf
jecxz
push
sbb
or
data16
hlt
nop
xor
ds
mov
pop
jae
popf
loopne
in
sbb
imul
pusha
pop
sbb
mov
cld
push
jle
fisttps
call
lret
movsl
stos
mov
inc
pusha
and
inc
add
call
pop
lods
cmpsl
or
fdivl
ja
push
ja
xorb
xchg
or
mov
testb
test
cs
xchg
jnp
mov
cmp
and
mov
push
adc
ja
outsl
xchg
jge
enter
fisubl
rcrb
fwait
cmp
mov
xor
push
dec
inc
mov
pop
enter
lret
jno
xchg
adc
mov
cvtps2pi
cmp
into
and
xchg
cmpsl
dec
inc
push
fcoms
iret
dec
jecxz
xor
xchg
jg
mov
inc
sbb
dec
mov
loop
xor
inc
adcb
movsb
add
aam
sub
or
in
jnp
sub
lcall
inc
outsl
fidivrl
jl
inc
push
int
cmp
leave
ss
inc
pop
mov
and
and
out
cs
push
loopne
mov
lcall
mov
mov
cli
imul
dec
adc
ja
clc
lods
cs
mov
aas
dec
jb
mov
jb
jne
inc
pop
out
jae
fs
mov
lahf
inc
sbb
pop
inc
pop
cli
rolb
fs
loope
jle
pop
stc
mov
mov
ffree
jns
mov
dec
sbb
sbb
fsubs
mov
mov
mov
sub
push
fcoml
pop
mov
aaa
shlb
sti
push
add
loope
or
ret
sbb
mov
jbe
stc
cmpsl
mov
imul
clc
cmpsl
adc
sub
jae
jo
rcl
stos
pop
mov
and
std
or
pusha
into
notb
or
jmp
mov
lds
cmpsb
pop
add
push
sbb
mov
mov
mov
cmp
inc
clc
lcall
add
mov
inc
lods
out
lock
mov
push
or
adc
or
jbe
std
jne
out
sbb
les
call
rclb
jg
aaa
jl
cmp
stos
adc
out
push
pop
ljmp
add
in
movsb
pop
test
mov
mov
test
loopne
out
cmpsl
pop
xor
dec
repz
add
in
iret
jbe
or
adc
push
jg
xor
xchg
inc
mov
fcoms
push
xchg
or
mov
repnz
sub
or
ds
mov
mov
cmp
cmp
and
loopne
aas
add
ljmp
pand
sub
cmp
dec
insl
js
add
cmpsl
push
lock
test
sahf
cmp
movsb
addr16
lahf
mov
frstor
jne
xchg
add
aam
push
add
mov
repz
imul
and
cmc
ss
mov
lcall
scas
scas
xor
cmp
mov
aam
popa
pop
clc
addr16
cmpsl
or
lcall
xchg
jge
dec
adc
cmp
mov
hlt
rcl
inc
int3
mov
mov
hlt
mov
push
fnstcw
xchg
cmp
arpl
lods
lret
xchg
outsl
jno
mov
dec
adc
and
xchg
pushf
mov
push
adc
fstl
jnp
pop
dec
dec
test
imulb
shll
sub
pusha
shll
jmp
dec
dec
aam
repnz
rorl
xor
aaa
inc
sti
mov
loopne
add
adc
int3
subl
push
inc
ljmp
push
rcl
movsb
or
faddl
imul
not
jmp
ja
outsb
sbb
push
push
sarb
xchg
pop
sbb
iret
sahf
fs
adc
and
call
dec
cmp
sub
or
sub
loopne
mov
je
imul
xchg
fbstp
fcomi
test
clc
in
movb
jb
outsb
or
mov
into
mov
add
mov
xlat
sbb
and
or
sub
sbb
and
mov
sub
add
mov
cmp
fsubs
fsubrl
sbb
in
jns
cmp
pop
mov
push
inc
adc
fcom
sti
scas
push
inc
or
enter
mov
cwtl
mov
and
sbb
sbb
test
jne
shll
je
daa
sbb
orb
push
adc
imul
ret
sbb
inc
loope
in
ret
mov
mov
into
cwtl
leave
jmp
mov
jle
test
hlt
push
push
out
daa
xchg
in
push
leave
orb
das
pusha
xchg
adc
jae
jbe
sbb
test
mov
mov
test
xlat
cmp
sub
xor
aam
pop
repnz
or
rol
push
adc
hlt
int
inc
cmp
jge
sub
cmp
cs
mov
and
pop
push
mov
add
or
push
out
and
cmp
pop
jnp,pn
je
or
push
std
xorl
inc
sub
cmp
sub
andl
jae
xor
cwtl
jns
mov
daa
popf
icebp
repnz
add
xchg
out
pop
push
xchg
push
imul
sub
stos
hlt
xchg
aad
mov
out
push
fcoms
adc
push
sub
inc
rorl
lahf
out
add
popa
xchg
inc
out
fdivrp
lods
mov
pop
adc
push
jno
jb
cwtl
test
js
inc
add
dec
arpl
jle
xor
leave
jmp
out
cmp
jmp
pop
mov
dec
insl
add
adc
dec
testl
popa
aad
in
cmp
inc
adc
movsl
mov
outsl
shlb
out
decb
xor
fbld
pop
pushl
orl
into
jne
ljmp
sbb
cmc
loop
cmp
pop
in
lcall
jb
dec
movsb
call
pop
pop
push
jns
aas
xor
iret
movb
xor
lea
stos
inc
rorl
sub
sbb
pop
mov
push
insb
sbb
push
int3
fisubs
or
pop
xor
cs
xchg
lcall
repz
jb
sahf
shll
mov
lods
push
mov
jecxz
shlb
cmp
mulb
outsl
iret
adc
cmpsl
jl
inc
mov
out
dec
int3
mov
sarb
aaa
out
mov
xchg
mov
push
jnp
xlat
add
cmp
sub
outsb
popa
into
popa
jle
or
jmp
imul
push
sbb
jb
mov
mov
jb
adc
ss
popa
fdivrl
aas
pop
pop
adc
mov
shll
lcall
aam
mov
sub
into
sbb
push
jb
cmpb
mov
mov
inc
pushl
cmp
mov
ljmp
inc
mov
pushf
subl
movsb
and
xchg
inc
and
lahf
sbbl
adc
jne
cld
ljmp
or
std
mov
xchg
lock
leave
mov
or
lahf
mov
or
sti
adc
add
mov
pop
int3
std
repnz
jo
es
jmp
jo
dec
jg
movl
sub
cmpsb
sbb
loope
and
push
out
mov
leave
das
testb
in
cmp
mov
mov
sbb
sbb
jns
pop
xchg
push
je
lahf
das
test
ret
jp
dec
lret
jns
out
mov
movsl
xlat
xchg
sbb
insb
pop
xor
loop
lock
popf
scas
addr16
stos
roll
mov
subl
loope
scas
cmp
addr16
lock
test
aas
xchg
mov
ljmp
mov
inc
jge
xor
mov
imulb
mov
shl
jge
ss
or
stos
fnsave
fs
push
ret
push
inc
lock
cld
jmp
xchg
icebp
jae
or
in
sub
lods
or
cld
mov
lods
pop
stos
daa
and
push
adc
out
movlhps
sub
pop
es
inc
je
xchg
dec
fwait
shl
ret
inc
jge
dec
inc
pop
push
repnz
das
lds
mov
jl
mov
movsb
push
xor
mov
outsl
or
inc
cltd
xchg
icebp
pusha
les
das
cmpsb
adcl
lahf
insb
jg
adc
mov
pop
pop
ret
cmpsl
or
ret
dec
mov
popa
sbb
xchg
insl
and
push
or
dec
mov
stc
mov
jmp
pop
xor
xlat
inc
add
adc
clc
movsl
inc
das
and
sub
call
test
ficoml
insb
pop
dec
mov
xchg
and
dec
push
fcmovne
xchg
push
or
ret
jo
or
mov
xlat
and
loopne
add
dec
sub
loope
test
pusha
dec
cld
cli
push
dec
inc
ds
outsb
gs
shr
insb
es
mov
mov
pop
in
mov
or
lds
pop
pop
jmp
mov
xchg
fdivr
add
sbb
bound
jno
sti
push
jl
out
repnz
xchg
sbb
mov
xor
sti
mov
fwait
cmpsl
lods
stos
jb
xor
dec
mov
mov
inc
jle
jno
mov
outsb
mov
out
pop
xor
and
pop
xlat
adc
and
jl
fnsetpm(287
mov
pop
testl
faddl
lds
popa
xor
imulb
imul
push
js
or
hlt
mov
or
shll
mov
adc
jo
outsb
aas
dec
or
jne
loop
jmp
or
xor
mov
mov
enter
stos
call
push
movsb
push
and
mov
out
test
lods
shr
sub
mov
push
add
jno
pop
test
notb
je
addr16
mov
sub
pusha
shll
inc
je
movsb
pop
mov
adc
mov
sub
lods
xchg
mov
stos
ss
xor
call
out
sub
jmp
cmp
dec
cltd
inc
pop
scas
add
cmpsb
push
add
insl
mov
mov
clc
sbb
in
mov
pop
ss
xchg
or
filds
lret
fs
ds
inc
jo
push
jg
repz
popa
add
mov
jle
push
jecxz
call
adc
ds
push
mov
mov
ss
or
jb
push
popa
pop
xchg
sub
addr16
sub
nop
adc
cs
and
push
movsl
push
pushf
or
mov
loopne
sub
push
push
and
or
jnp
dec
jbe
stos
lods
push
fadd
push
mov
mov
int3
mov
outsb
and
xchg
xchg
pop
lock
mov
lret
gs
adc
mov
aad
dec
xchg
movb
sub
inc
loopne
aad
cmp
stos
jns
sarl
or
xor
jb
or
lods
js
dec
add
test
insl
ljmp
jl
popa
call
lcall
and
jo
cld
push
repz
stos
dec
arpl
mov
stc
adc
rcr
inc
xor
xchg
xor
or
addr16
push
xchg
sarb
or
out
insl
or
and
out
add
add
push
lds
push
repnz
enter
sarb
mov
sbb
push
and
popf
pop
pop
pop
pop
lock
inc
sub
pop
xchg
lcall
xor
dec
or
mov
lcall
lds
sbb
adc
and
mov
mov
or
dec
jns
mov
paddq
mov
push
aas
pop
jecxz
movsb
dec
sbb
pop
pop
movsl
outsl
dec
jbe
sub
and
pushf
mov
dec
push
shr
sub
les
sbb
imul
dec
pop
jne
mov
in
pop
ds
cmp
cs
lcall
pop
add
mov
sbb
xchg
xor
jge
pop
xor
push
sbb
or
out
mov
das
dec
jns
stc
popf
test
pop
lret
ds
testl
dec
xor
pop
je
mov
inc
ljmp
adc
imul
pop
mov
sub
aam
cmp
loop
and
jne
wrmsr
sub
jae
mov
insl
fcmovnu
mov
add
inc
jp
jge,pn
jp
scas
mov
mov
lods
das
add
push
and
sbb
mov
push
inc
pop
fisttps
inc
and
fldenv
adc
cli
push
ret
dec
lds
push
cld
ret
movsl
cld
ljmp
dec
mov
sub
sub
rcr
sbb
insl
inc
fdivl
jl
in
dec
add
lahf
add
aaa
or
outsb
pop
int3
das
push
out
fwait
cs
pop
mov
push
and
mov
adc
or
shrl
add
mov
mov
sub
dec
stc
outsb
popf
inc
das
mov
movsl
fs
sub
add
adc
push
lret
mov
jne
add
adc
rorl
mov
pop
lods
mov
in
fs
cld
dec
inc
push
test
jb
jnp
push
fistl
pop
pop
push
xor
cmp
mov
sahf
mov
int
hlt
rol
js
loope
jmp
push
stc
sbb
push
jge
cli
mov
push
xchg
leave
arpl
jecxz
loopne
inc
sti
mov
loop
jmp
mov
ja
inc
repnz
cmc
dec
das
xlat
frstor
sub
mov
movsl
lcall
dec
dec
ss
mov
call
mov
call
stc
cmp
adc
loope
mov
std
stc
cmp
negl
sti
push
imul
insb
mov
push
stos
repz
cmpl
enter
mov
stos
in
inc
addr16
push
stos
mov
mov
pop
fs
arpl
jnp
cmc
sbb
sbb
cmp
icebp
sub
sub
js
pop
ficoms
test
cmp
push
imul
shll
mov
ds
sbb
je
notl
inc
lods
js
jl
mov
xchg
je
xor
cmp
xchg
cmp
inc
gs
bound
mov
clc
xchg
insb
add
xor
fsubs
imul
pop
icebp
mov
notb
add
push
jno
pop
xchg
inc
add
fistpl
or
mov
cmpsl
pushf
rolb
pop
loop
inc
repnz
pop
test
imul
jp
cld
inc
mov
outsl
xchg
push
jmp
push
scas
jp
and
iret
inc
in
mov
dec
or
dec
pop
and
or
mov
cmp
mov
mov
in
inc
into
xchg
dec
pop
xchg
add
adc
jno
mov
xacquire
ljmp
notb
xchg
arpl
scas
lret
or
sub
mov
call
fmuls
adc
sub
dec
andb
rcrb
mov
jle
add
cmc
aad
and
push
fldenv
outsl
stos
dec
nop
lahf
adc
cmp
filds
dec
xchg
jp
mov
int3
arpl
dec
or
pusha
mov
push
pop
sbb
xchg
daa
sub
push
xchg
pop
test
test
adc
push
fsub
aaa
sub
dec
loope
in
mov
iret
xchg
cmpl
lahf
and
fdivrs
daa
and
notl
xor
or
leave
shrb
cmpsb
add
sub
data16
dec
xor
outsl
cmp
mov
roll
mov
mov
ror
rolb
mov
push
ret
or
repz
sbbl
mov
pop
ja
add
pop
imul
cmpsb
in
pop
out
add
add
push
mov
and
mov
inc
pop
mov
add
out
mov
add
test
lret
inc
xchg
inc
or
cltd
in
xchg
and
jns
mov
les
inc
xchg
push
mov
pop
xchg
fildl
sub
jle
insl
xchg
dec
in
sbb
pusha
out
pusha
push
add
push
out
decb
mov
dec
mov
adc
jbe
mov
or
fwait
xchg
insb
out
fisttpl
mov
aad
ja
mov
adc
inc
cld
iret
sbb
repz
js
jmp
fsts
push
xor
pushf
in
xor
lret
or
imul
into
mov
mov
sbb
dec
hlt
gs
push
insb
sbb
push
jl
ret
ret
xchg
ss
adc
movsl
and
jb
js
in
insb
adc
testl
scas
mov
fsubrp
push
test
mov
cld
mov
bnd
or
loopne
daa
jb
mov
jecxz
jns
push
lret
je
inc
ret
jle
nop
mov
andb
stc
pop
outsb
in
lock
cmp
stc
pushf
sahf
test
adc
cwtl
je
ret
insb
divl
lods
mov
mulb
call
xor
mov
or
ljmp
xchg
push
in
in
push
iret
and
lret
lods
fnstsw
jle
dec
mov
jmp
xchg
xor
cltd
push
test
sub
ja
in
lock
inc
daa
mov
jmp
cmp
popf
mov
inc
push
xchg
mov
in
bound
sub
jle
in
and
lock
leave
icebp
xor
mov
les
repnz
setno
out
inc
jbe
jg
inc
xchg
imul
je,pn
sub
insb
pop
xchg
in
xchg
dec
adcb
push
into
popf
and
sub
clc
pop
inc
sbb
and
jmp
mov
push
dec
sbb
inc
negl
mov
call
scas
jnp
roll
iret
mov
imul
pushf
aad
push
mov
and
push
das
movsl
in
mov
inc
out
aam
cmp
imul
push
test
mov
aam
pop
push
push
dec
cmp
es
adc
fimull
ljmp
stos
dec
push
mov
cwtl
lds
mov
ror
jae
xchg
cmp
call
sub
add
leave
cwtl
ret
xchg
fadd
test
push
sbb
add
pop
mov
out
jbe
xchg
inc
call
dec
sub
inc
adc
out
xchg
pop
pusha
mov
popa
pop
or
or
mov
enter
inc
enter
inc
jge
fwait
cld
cmc
mov
repz
xor
js
in
js
add
adc
sarb
outsl
inc
push
adc
arpl
in
mov
pop
inc
sub
mov
loop
sub
jge
fdivrl
jo
movsb
orl
sbb
sbb
loope
xchg
xor
bound
mov
or
xchg
push
lret
or
xchg
dec
mov
xor
cmpsb
lock
repnz
xchg
pop
mov
cmpsb
subb
fidivrs
xchg
or
push
cmp
sub
out
add
and
mov
add
das
xlat
xchg
jbe
movsb
mov
dec
jne
adc
dec
fcomip
data16
pushf
mov
sub
or
jp
daa
push
pop
ret
pop
icebp
sbb
stos
push
inc
sub
addr16
shr
lea
mov
mov
leave
mov
inc
cltd
jecxz
pop
cmc
xchg
jmp
lock
sub
rorb
cmp
movsl
aad
fsubr
jae
mov
js
add
fisubrl
dec
mov
lret
xchg
lea
cmp
and
arpl
or
je
loope
popa
loop
cmc
and
cmc
std
in
sub
lahf
repz
fdivr
inc
mov
pushf
bound
enter
leave
mov
sbb
push
add
outsb
or
es
aas
mov
adcb
pop
sbb
adc
pop
push
xchg
cld
sub
loope
stc
sbb
inc
xor
dec
ret
fstps
lcall
lahf
fidivrl
mov
jbe
outsl
lcall
test
iret
icebp
addr16
loopne
jbe
inc
aaa
mov
or
testb
cs
testl
call
add
jmp
popa
rcr
mov
cmpsl
mov
fiaddl
flds
xor
inc
dec
xchg
pop
movsbl
sub
movsl
pop
inc
add
cli
sbb
inc
and
jae
in
psraw
sub
repnz
push
push
push
negl
roll
or
gs
test
push
testb
sub
lret
inc
xchg
ret
shl
js
or
shrb
or
cmp
cmpsb
or
push
sub
push
fcmovnb
cmc
pop
lea
les
jns
inc
mov
add
sub
nop
xchg
pusha
nop
lret
ficoml
lods
dec
iret
mov
inc
movsl
pop
mov
ja
and
push
cmp
xchg
cld
dec
jb
lods
and
mov
mov
push
or
add
inc
and
cmp
dec
inc
adc
push
sbb
push
scas
push
pop
cs
jae
mov
nop
addr16
xor
fcmovnu
lret
xchg
lret
mov
mov
xchg
pop
dec
fwait
xchg
push
gs
and
mov
in
rcll
cmp
seta
nop
mov
rolb
push
scas
das
jg
leave
xchg
lretw
xor
rcrl
or
repz
pop
adc
sbb
out
arpl
adc
je
arpl
cli
aaa
mov
test
mov
out
ret
std
add
add
scas
neg
push
pushf
std
aas
push
cmp
ds
jle
xchg
jb
xor
sbb
shll
adc
or
or
insb
paddusw
pushf
xchg
dec
imul
xchg
shrb
lcall
repnz
xchg
xchg
jne
outsl
or
orl
rcrl
shlb
xchg
mov
rcrb
shll
cmp
and
or
mov
cli
repnz
repz
int
add
clc
jmp
jp
mov
outsl
aam
sbb
lock
outsb
inc
decl
mov
fnstenv
lret
ret
lahf
loop
sub
sbb
push
push
sub
sub
mov
popa
push
and
pop
ss
in
mov
lret
jno
pop
call
call
ret
addr16
ds
dec
ret
pop
mov
cmp
jmp
in
xor
enter
stos
out
mov
scas
sub
int3
test
and
cld
mov
xchg
add
sub
idiv
add
out
inc
ret
lahf
mov
cs
add
in
mov
push
sahf
jae
aam
repnz
popf
fcompl
dec
pushf
stos
add
mov
testl
addb
fistps
testb
lcall
and
jmp
cmc
jns
das
outsl
push
daa
ss
cmpsb
dec
or
mov
lds
jle
xor
mov
repz
je
xor
xor
sbb
dec
stos
push
xorb
adc
lret
js
pop
ficompl
cmp
xchg
popf
imul
mov
es
addr16
fsubrs
shrb
cmp
add
xchg
or
cmpsl
pop
shr
movsb
sti
pop
pushf
jno
inc
sti
mov
lods
out
cmp
xorb
fwait
xchg
add
push
bound
jne
jge
mov
out
pop
mov
pushf
imull
mov
in
cs
and
jno
mov
in
xor
pop
imul
adc
outsb
pop
pushf
out
mov
add
xchg
pusha
pop
daa
movsb
loopne
cmc
out
cwtl
dec
imul
xor
adc
pop
xchg
int
push
mov
int3
and
mov
imul
mov
por
mov
ret
push
pop
cmp
call
mov
out
in
aam
jo
adc
or
jbe
out
rorb
and
loop
enter
sbb
incb
addl
cld
out
sub
adc
fst
ret
lret
sbb
bound
fsubr
js
je
pop
lret
sub
xchg
or
mov
lds
lcall
or
daa
xchg
xchg
dec
sub
fdiv
mov
dec
push
pop
divb
xlat
xor
js
cmp
lock
shl
je
push
in
fbstp
cmpsb
ds
dec
ror
sub
dec
push
push
scas
mov
fwait
test
and
mov
shll
inc
stos
mov
js
add
add
pop
in
aad
cli
sub
push
push
xor
xchg
fcom
in
push
js
shlb
cmc
ficoms
les
and
add
andl
inc
sbb
sbb
and
aas
sub
fnstenv
gs
push
popf
dec
mov
push
or
push
add
fildll
lea
sub
or
mov
mov
cmc
mov
push
or
jl
push
cmp
jge
inc
mov
sbb
mov
mov
in
jl
sub
cvtps2pd
dec
or
sub
vpor
int
push
jae
pop
adc
clc
jns
lods
mov
sbb
out
add
repz
jno
ljmp
ljmp
cmp
cmpsl
jecxz
mov
inc
das
fisubrs
shll
pop
mov
push
adc
dec
xchg
push
cmp
inc
jne
cmpsl
sub
dec
sub
ret
inc
pop
incl
adc
rcr
pop
push
out
fistl
test
mov
nop
insb
push
xchg
dec
mov
fwait
sbb
xchg
xchg
inc
mov
cs
fs
xchg
popa
cmp
sbb
jns
push
clc
stos
lds
mov
sub
sub
rcrl
std
fxam
in
popf
ret
pop
push
xchg
jae
inc
xlat
jb
push
dec
pop
int
mov
xor
rorl
lret
jmp
nop
xor
xor
push
int3
ja
mov
mov
adc
inc
js
mov
in
fimull
cmp
sub
xchg
sbb
outsl
and
mov
push
aad
clc
in
or
mov
mov
mov
lahf
and
mov
xor
xor
sub
mov
popa
pop
adc
jbe
shl
xor
mov
jge
push
pop
xchg
jae
pushf
push
dec
bound
das
mov
xor
popa
lret
pop
nop
xchg
add
orl
fidivs
push
das
call
add
aam
cltd
out
mov
mov
jne
pop
fsts
cmp
stos
pop
xor
out
mov
sub
push
out
mov
mov
mov
pop
sahf
data16
jb
cmp
std
dec
daa
add
jnp
jecxz
scas
add
ds
fs
and
push
out
push
mov
xchg
adcl
jno
lods
xchg
push
fmul
adc
in
lea
mov
pop
xchg
dec
and
fnsave
mov
mov
add
fnstcw
je
cwtl
push
xchg
mov
xchg
call
outsb
mov
jnp
aaa
lcall
and
das
test
jns
mov
add
sti
jne
sub
insl
arpl
mul
adc
leave
jge
stos
push
in
xor
scas
das
pushf
aad
sub
hlt
or
rorl
jnp
add
in
ret
push
mov
cmp
sub
push
and
mov
mov
and
cwtl
adc
cmp
dec
xchg
fcmovu
in
insl
xchg
out
out
scas
cmp
mov
mov
sbb
inc
aam
cld
add
negl
pusha
push
dec
lret
pushl
daa
je
mov
in
out
nop
rclb
cvtdq2ps
jnp
inc
adc
int
inc
pop
sbb
add
adc
mov
dec
jne
dec
setno
adc
pop
xchg
andb
mov
in
popf
loope
out
adc
out
out
and
mov
push
adcl
add
in
stc
fcmovne
mov
mov
xchg
and
dec
dec
mov
inc
lret
add
sbb
inc
jbe
mov
mov
rcll
dec
call
lahf
leave
je
iret
fidivl
xor
jmp
lock
cli
jp
dec
sub
xchg
imul
test
fcompp
dec
ds
pushf
jmp
jp
inc
pop
dec
jmp
std
shlb
xchg
lret
inc
cli
outsb
sbb
dec
fidivrs
pop
or
popf
xchg
jns
pushf
pop
sbb
sub
inc
sbb
in
pop
push
out
mov
sti
mov
cltd
popf
roll
cltd
cli
mov
mov
loop
outsb
mov
repnz
jmp
sarl
das
loop
jle
sub
dec
lret
test
imul
or
inc
imulb
les
xor
arpl
nop
xchg
out
out
js
jno
out
push
sub
push
std
add
adcb
pop
push
test
pop
stos
lret
jmp
push
adc
pushw
push
xchg
pop
rcll
or
mov
test
aas
shlb
ficomps
les
push
lods
insb
and
jb
sub
decb
pop
setnp
bound
stos
ljmp
mov
jp
fcom
xlat
push
ficoml
cmp
inc
dec
add
gs
mov
push
mov
cmp
sbb
sub
cltd
shll
jg
pop
xor
testb
shl
aaa
jo
ljmp
adcb
lahf
rcrl
sbb
push
or
mov
pop
push
cmp
mov
xchg
add
pop
call
jnp
pushf
mov
jl
shrl
xor
fimuls
inc
outsl
mov
mov
adc
mov
pusha
addb
dec
rcl
xor
cmp
jecxz
push
fsubs
iret
leave
jae
loope
cs
rcrl
out
push
mov
outsb
in
lret
cmp
inc
popa
mov
mov
dec
mov
mov
jmp
or
iret
xor
fmulp
ja
fcmovnbe
fs
loopne
jo
push
dec
rol
mov
test
mov
aas
repnz
add
cmp
cli
ror
call
aas
je
fsts
add
and
daa
ret
cmp
es
lea
jmp
les
aas
mov
loopne
and
cld
add
cmc
jge
jae
ret
fimuls
xchg
xchg
mov
xchg
xchg
shl
dec
sub
jns
push
push
push
jns
repz
cmpb
mov
aaa
mov
scas
ljmp
enter
and
sub
pop
or
xchg
fdivp
inc
sahf
ljmp
daa
in
repz
sbbl
sub
imul
lods
pushw
addr16
mov
mov
xchg
int
cld
insl
jge
jmp
sub
dec
loop
arpl
jg
xlat
jae
out
fcmovu
popf
out
cmp
fsubrs
mov
inc
daa
mov
rorl
enter
mov
mov
stos
cmpsl
scas
mov
xchg
fcomps
push
sbb
or
push
mov
cs
ss
lock
push
cmpsl
xor
jmp
jp
insb
repz
test
loop
sti
add
test
cmp
sar
push
enter
shrb
imul
sub
iret
add
mov
cwtl
sbb
pushf
jl
es
pop
lcall
mov
mov
js
jb,pn
test
test
dec
das
repz
aaa
shll
cmp
jge
jmp
jno
xchg
push
push
mov
sub
xor
jmp
dec
popa
xor
stc
xor
aad
pop
sahf
or
mov
lods
es
jle
jns
jp
xor
xchg
in
daa
mov
ja
in
nop
out
sbb
inc
pushf
aad
fsubs
je
in
jne
rcl
mov
in
push
shll
add
or
xor
and
jecxz
cmp
inc
es
pop
inc
out
aam
or
movsl
dec
xchg
popa
jae
push
mov
enter
xor
fbld
cld
inc
add
out
outsb
arpl
jo
push
dec
lretw
addr16
lods
jecxz
cmpsl
fmull
mov
mov
popa
test
fidivrs
push
gs
mov
mov
fstp
push
aaa
imul
cmp
stos
popa
cld
in
iret
test
xor
inc
mov
cmc
int3
pushf
cs
or
and
enter
es
or
test
scas
cmp
ja
mov
fists
lret
fdivrs
cmp
xchg
ss
push
jno
mov
mov
inc
addr16
ss
dec
sahf
push
jo
sbb
jb
sub
mov
dec
add
pop
or
cmpsb
pop
pop
xchg
pop
mov
leave
dec
outsl
cmp
inc
sbb
xor
jle
mov
roll
mov
or
sbb
inc
add
mov
out
mov
push
add
or
push
dec
pop
repz
data16
mov
adc
push
inc
xchg
jne
push
aaa
and
jmp
addr16
push
je
mov
xorb
fs
nop
clc
jge
xor
outsb
sbb
call
sbb
jecxz
repnz
add
adc
pop
jno
pushf
pusha
sbb
adc
outsb
js
pop
push
jbe
dec
out
lcall
fs
lea
scas
jl
mov
iret
xor
and
cltd
cmc
xor
test
jae
pop
and
popf
imul
push
mov
jl
das
mov
add
scas
icebp
push
in
repnz
push
idiv
mov
jecxz
adc
mov
mov
or
fistpl
push
sti
jns
rcrl
pop
mov
aam
xor
jns
push
mov
mov
movsl
xor
dec
fwait
dec
cltd
mov
lea
jbe
stos
adc
es
mov
jae
pop
push
adc
cmp
sbb
imul
and
jmp
mov
sbb
cmp
test
cli
push
xchg
sbb
call
js
mov
xor
sti
pop
adc
ret
lret
sub
mov
repz
mov
int
cltd
cmc
mov
inc
mov
les
mov
xchg
mov
inc
add
lock
cmpsb
lods
dec
popf
imul
cltd
mov
add
fldcw
jmp
pop
lahf
jnp
dec
sbb
xchg
js
xor
mov
cmpb
fxch
sub
pop
sub
test
jecxz
hlt
dec
jl
pop
aad
mov
cmp
outsl
ja
imul
push
mov
rclb
iret
mov
pop
jecxz
ja
pop
sbb
sub
out
lea
in
loopne
sub
add
iret
adcl
xor
bnd
stc
cmp
push
pop
pop
cmpsl
push
add
or
ret
out
xor
mov
sahf
xchg
xchg
pop
sub
and
push
mov
push
shlb
lahf
mov
repz
cmpsl
sbb
mov
es
clc
adc
push
jge
addb
sub
cwtl
test
shl
dec
ret
mov
xchg
xchg
push
shrb
in
clc
cmp
or
push
and
into
push
aad
adc
js
imul
cmpb
cmp
mov
fnsave
and
rorl
fwait
sbb
aad
fildl
xor
rol
add
xor
and
jo
jle
sar
orb
jecxz
or
xchg
mov
jl
aad
lret
daa
int3
jge
xor
and
imul
or
rcrb
jnp
or
sbb
cmpsb
cmpsl
pop
daa
mov
ret
jne
cmc
jl
add
ffreep
test
lds
mov
or
jne
adc
ds
bound
sub
rcrb
pop
jnp
dec
mov
stos
test
insb
inc
jae
fiadds
sti
in
sub
or
add
lods
aaa
nop
xchg
mov
repz
xchg
sbb
outsl
dec
push
repz
lahf
out
dec
std
cwtl
sub
lret
and
push
push
icebp
jg
lea
aam
and
aad
jle
sub
hlt
rol
xchg
aam
mov
into
pop
test
mov
pop
cmp
loopne
lcall
test
sbb
div
push
pop
mov
lahf
sub
cs
cli
adc
pop
arpl
inc
jae
or
cmp
cld
fnstcw
leave
fwait
shl
push
cld
or
shr
push
adc
into
mov
mov
and
push
sar
fs
push
fcompl
sbb
jae
icebp
push
rcr
fistl
jnp
push
xchg
inc
and
push
jns
lret
rclb
jbe
sbb
cmp
inc
push
jae
mov
cmc
mov
pop
ja
cwtl
mov
imul
and
push
std
mov
or
outsl
xor
and
jo
loopne
sbb
add
roll
pop
jle
inc
jecxz
mov
repz
adc
aas
adcb
nop
inc
dec
cwtl
cltd
xor
stos
lock
out
lods
cmpsl
dec
outsl
fnsave
or
xor
popa
sbb
stc
jnp
mov
mov
js
popf
or
cmp
jae
popa
ror
aam
xchg
or
mov
xchg
pop
inc
jno
sbb
rolb
jns
and
adc
les
lcall
push
jmp
xchg
push
jg
cmc
sti
mov
fisubl
sub
mov
shll
mov
test
insl
aas
ret
jecxz
fucomp
adc
jmp
pop
xchg
fucomi
insl
dec
fcompl
imul
shll
out
iret
jg
fistpll
cmc
daa
pop
adc
sti
adc
in
dec
jnp
sbbl
cmp
fcomp
push
push
sub
lahf
jp
inc
and
lods
mov
add
in
jecxz
les
mov
cli
and
xchg
int3
mov
aam
adc
pop
and
cmp
stos
loope
popa
pop
mov
incb
jge
stos
repnz
pop
xor
sbb
popa
pop
sub
inc
xchg
test
call
out
cmp
neg
shrl
adc
in
sub
popf
xchg
mov
add
sarl
mov
ss
sbb
movsb
xchg
or
cmp
clc
js
enter
hlt
sbb
nop
scas
mov
pop
cld
addr16
sub
cwtl
add
dec
shll
out
cmpl
mov
add
xlat
into
push
fstpl
jge
das
ret
out
dec
and
icebp
jbe
push
mov
jb
lcall
psrlw
cli
adc
nop
imul
sub
jg
inc
xor
xchg
mov
inc
mov
push
jne
push
pop
aaa
cmpsb
sahf
or
jb
add
cli
data16
lcall
cwtl
mov
sarb
out
mov
outsb
stos
sub
cmp
push
xor
mov
mov
push
ljmp
xchg
andl
ds
xor
xor
outsb
cmp
sbb
lret
mov
loop
jns
push
enter
in
add
cmp
adc
and
insl
rol
push
cmp
pop
cmc
ss
jo
add
lret
stos
js
cmp
cld
pusha
into
icebp
test
cli
inc
jl
leave
inc
out
push
jl
adc
mov
cmp
shrl
stos
pop
push
sbb
xchg
aad
dec
cmp
adc
sbb
sub
mov
xor
or
add
hlt
xor
fstp
lock
jmp
adc
dec
sbb
xchg
add
test
and
test
test
and
lret
xchg
cmp
test
dec
sbb
pop
cli
mov
cltd
shll
xor
push
push
mov
iret
jb
pusha
mov
push
and
inc
les
fimuls
iret
adc
jae
std
scas
in
push
mov
jmp
xchg
jmp
fdivrl
fsubs
in
cwtl
xorb
pop
jmp
mov
in
mov
jg
and
mov
pop
mov
mov
cltd
sub
aam
mov
xchg
push
xor
sub
lds
mov
scas
not
into
aas
std
lods
imul
imul
fimuls
icebp
popf
add
sarl
sbb
in
lea
mov
sahf
lods
iret
jl
and
cwtl
dec
stc
sbb
xor
pusha
jge
fmulp
sbb
fisubrl
pop
or
shlb
movsb
enter
jo
or
dec
mov
inc
mov
dec
xchg
push
pop
cmpsl
in
mov
lea
push
scas
dec
mov
jecxz
xchg
fsubrl
add
cmp
mov
xor
push
in
mov
jbe
fists
repnz
cmp
push
sbb
sbb
dec
insl
inc
ljmp
lret
cwtl
xchg
sarl
aas
dec
add
xor
mov
into
outsl
push
add
adc
subl
add
xchg
cmp
or
dec
rcl
sbb
mov
mov
out
inc
ret
inc
sti
dec
mov
into
out
xchg
idiv
or
fwait
subl
adc
lret
lret
adc
push
out
lea
adc
xor
cld
jo
nop
mov
in
dec
fmul
jnp
pop
iret
repz
mov
inc
insl
insl
call
sarb
lds
cmp
mov
pop
inc
lahf
imul
nop
out
or
push
cs
outsb
icebp
sbb
arpl
and
and
sub
sbb
add
cwtl
xlat
arpl
je
je
lret
mov
jae
sbb
imul
mov
fwait
or
aad
dec
in
int3
sub
jge
lcall
or
ret
call
jle
insb
test
in
std
imul
mov
jg
lret
xchg
pop
cmp
dec
mov
inc
mov
xchg
repz
or
mov
push
push
cs
popa
cmp
clc
pop
rorb
out
xor
mov
test
lods
out
mov
sub
jnp
sub
jle
hlt
stos
push
lahf
lret
icebp
js
data16
cmp
jae
incb
add
call
inc
out
lcall
cmp
imul
dec
clc
mov
inc
fidivrs
pop
imul
cltd
push
dec
stc
cmpsb
jp
stc
inc
test
fistps
lcall
lret
jnp
jnp
and
std
out
aaa
sub
sbb
fsubp
out
pop
test
loope
ret
adc
ds
sub
inc
lea
pop
jae
mov
mov
pop
and
xlat
in
mov
mov
mov
sub
data16
mov
fmulp
jmp
arpl
orb
fucomp
lods
pop
xchg
insb
and
mov
inc
bound
sub
fwait
push
bound
insl
mov
mov
add
cs
mov
add
push
push
pop
test
jp
mov
hlt
sub
movsl
xchg
add
lea
mov
add
scas
popa
addr16
out
out
pusha
or
repnz
ljmp
mov
sbb
pop
and
and
add
push
cmp
test
push
jno
mov
fidivl
mov
leave
fmuls
negb
pop
inc
loop
imul
sahf
inc
popa
stc
cli
mov
movsb
push
fdivrl
scas
pop
jae
mov
sub
add
adc
adc
call
lock
jl
mov
sti
add
mov
xchg
xor
in
xor
es
inc
imul
ljmp
hlt
add
push
jecxz
sub
stos
add
or
mov
inc
jns
inc
xor
bound
je
testl
shll
cmp
dec
mov
mov
pusha
cmpsl
push
loope
jmp
dec
push
jmp
cmpsb
xchg
dec
insl
adc
dec
repz
cmpsl
fidivrs
cmp
mov
mov
ror
leave
leave
or
mov
jo
cmpsb
aaa
cmp
scas
int
ret
xchg
mov
aad
push
pushf
in
jnp
jmp
pop
fwait
xchg
mov
sbb
dec
aas
in
cmp
aam
movsl
jmp
cmp
or
xchg
or
mov
sarb
in
mov
dec
adc
dec
shl
flds
dec
lods
roll
or
insb
and
fs
jl
or
inc
js
push
pusha
mov
mov
jge
add
sub
scas
cmpsl
push
push
inc
mov
fldt
xchg
lret
inc
clc
iret
and
in
loopne
push
in
mov
xchg
add
loope
outsb
and
jo
cmpsl
inc
push
outsb
xor
push
or
inc
jo
sbb
inc
loope
xchg
add
xor
lea
cmpsl
adc
arpl
xchg
sbb
hlt
inc
jno
mov
jne
jle
addl
jl
jmp
inc
cwtl
and
xor
outsb
call
or
push
lock
pop
xchg
repz
out
fucomip
jecxz
in
xchg
addr16
imul
jo
repnz
clc
dec
adc
or
add
xchg
int
push
jo
mov
js
mov
mov
add
ret
pop
or
addb
ficoml
jb
outsl
das
inc
dec
mov
add
and
cmc
adc
loop
out
mov
push
out
mov
jle
mov
or
loop
xchg
cmc
xor
cmp
jmp
fcoml
mov
xchg
cmpsb
fwait
xchg
imul
enter
mov
sbb
pop
jae
pop
push
test
mov
xchg
mov
mov
movsb
pop
int
push
fisttps
rclb
and
aad
outsl
push
cli
mov
dec
sub
in
movsl
ljmp
lea
add
add
test
xchg
xorl
jmp
cmp
lock
leave
mov
or
pusha
rclb
pop
roll
cmp
std
scas
mov
or
lret
adc
mov
fsts
movsl
or
jns
dec
mov
cmpsb
cs
scas
ljmp
dec
das
dec
xchg
xorl
das
push
das
cld
loopne
sub
xchg
jge
push
fwait
out
test
add
mov
icebp
test
ja
inc
daa
cmp
inc
adc
out
cmp
xor
enter
andl
gs
insl
lcall
mov
es
sti
outsl
sbb
push
dec
aas
push
push
xor
adc
cmp
lods
cmp
inc
mov
mov
sbb
add
mov
stc
sahf
in
cmp
ret
aaa
mov
repnz
rclb
fwait
jmp
iret
sub
dec
insl
insl
dec
sarl
adc
inc
and
mov
addr16
cltd
push
cmpsl
mov
sub
xchg
popf
andl
lret
dec
cmp
jl
push
jb
cli
int3
nop
jns
lea
popf
outsl
mov
cmc
jp
or
fdivl
addr16
jg
mov
fistps
mov
adc
adc
mov
dec
movsl
sub
xchg
add
daa
subl
or
insb
aas
jb
incl
or
inc
cld
push
lock
dec
sub
cmp
inc
push
dec
orl
push
push
sub
fchs
sbb
or
ds
inc
push
mov
inc
xchg
push
xchg
or
xor
and
pushf
fstps
stos
mov
out
test
cld
fcmovu
rcrb
andw
cmp
pushf
sbb
push
push
lods
nop
cmp
adc
and
lret
push
jmp
inc
sbbb
cs
fnsave
out
jge
push
inc
ret
dec
push
clc
shrl
or
cmp
stos
mov
into
mov
mov
cltd
insl
inc
adc
ret
xlat
pop
stc
std
add
lcall
aad
sbb
jo
jecxz
mov
dec
lods
xor
xor
icebp
fucom
pop
cltd
divl
aas
in
aas
or
pop
or
loopne
xchg
pusha
dec
shrl
in
cmp
push
fdivp
xchg
xchg
xchg
mov
icebp
lods
cmp
push
push
arpl
pop
sbb
xlat
fwait
mov
jb
jle
dec
sub
mov
or
add
lldt
pop
popf
add
ror
dec
addr16
mov
xchg
aam
dec
or
add
les
stos
lods
stos
idiv
out
sub
xor
arpl
or
xchg
stos
cmc
mov
pop
push
pmuludq
lret
mov
push
dec
and
mov
fdivrp
mov
mov
add
push
aas
scas
or
lods
imul
and
mov
in
and
arpl
ljmp
lods
stos
cli
shld
jno
data16
out
ja
in
mov
inc
jge
loope
std
push
xor
xor
sub
fs
add
push
mov
in
and
cmpsl
add
js
addr16
xor
adc
cmp
jno
inc
sub
test
jl
aad
cmp
lahf
xchg
in
lahf
into
mov
add
pusha
mov
aas
fsubrp
icebp
mov
xor
dec
test
lcall
aad
sbb
inc
fwait
fwait
leave
lods
xor
sti
push
dec
lea
ds
sub
mov
pop
push
adc
js
pop
xor
rcll
xchg
sbb
add
out
jbe
mov
jl
mov
sub
sbb
fsts
dec
xor
ret
fidivrl
aam
mov
jbe
movsl
arpl
rorb
xor
in
loop
mov
adc
dec
pusha
cmc
sbb
or
js
jae
mov
pop
outsb
jle
sarb
into
push
arpl
mov
xchg
mov
adc
fistps
adc
loop
push
orb
insb
mov
ds
push
mov
mov
repnz
push
mov
decl
xchg
fiadds
imul
sbb
xchg
mov
lea
fwait
out
ljmp
sarl
lahf
inc
push
xor
loop
inc
fildl
mov
out
pop
es
add
jecxz
add
pop
push
sti
shrl
dec
xor
inc
scas
insl
es
addb
leave
or
out
mov
xor
inc
cwtl
in
jmp
jns
dec
fisttpll
bound
lock
dec
pop
iret
sub
sbb
jg
shl
adc
or
dec
inc
fistpll
cmp
fstp
mov
pop
sub
inc
out
aaa
xchg
ljmp
xchg
push
mov
movsb
xor
jmp
xor
icebp
jb
jge
hlt
lds
mov
sub
es
xchg
add
xchg
and
lret
fidivrl
and
or
mov
shr
pop
mov
cwtl
aam
adc
mov
xchg
in
call
stos
daa
xor
or
scas
push
pusha
mov
cmp
sub
mov
jae
inc
cmp
int
or
sub
mov
scas
pushl
add
xor
movsl
test
pushf
dec
jbe
repz
repz
and
adc
ljmp
sbb
dec
imul
icebp
dec
mov
arpl
dec
dec
xchg
std
fwait
mov
mov
aas
pop
or
add
imul
ficomps
and
insb
dec
imul
mov
cld
fcoml
jecxz
or
push
adc
xchg
inc
lcall
jns
scas
test
sub
inc
or
pop
ja
xor
pop
daa
xchg
or
test
cmp
or
imul
ret
test
jl
jp
push
jbe
pop
mov
fwait
mov
addr16
fwait
imul
sub
xlat
pop
jge
sub
scas
push
testb
test
add
lds
in
aad
push
testl
or
stos
fiaddl
dec
mov
ret
sub
mov
out
pop
je
loop
mov
dec
aam
lahf
scas
and
sub
mov
dec
fstpt
dec
movb
inc
out
mov
jne
mov
dec
sbb
add
shll
cmp
mov
std
ss
aaa
loopne
ja
add
dec
sbbl
xor
or
out
loopne
aaa
add
and
lret
imul
mov
lds
mov
in
gs
jo
lock
ficoms
mov
cmpl
cmp
int3
mov
dec
andb
pop
test
mov
mov
pop
andb
push
lds
inc
cmc
fcmove
mov
ret
dec
pop
mov
or
mov
inc
pop
dec
mov
pop
lds
cmp
jmp
stos
icebp
add
cld
inc
movsl
popa
pop
xchg
pop
js
xchg
les
mov
fimull
xor
mov
lahf
imul
sti
cmp
inc
mov
push
out
mov
lds
adc
jle
sbbb
cld
jmp
xorl
mov
push
adc
and
cli
adc
push
rol
out
dec
insl
jnp
jmp
in
or
inc
stc
sub
mov
inc
cmc
fwait
jg
xchg
pusha
jne
inc
aam
push
stos
cmp
xor
sbbl
nop
enter
push
sbb
scas
cmpsb
fbld
push
mov
jmp
hlt
pushf
mov
add
or
adc
jno,pt
enter
push
jg
xor
ret
cmc
in
imul
inc
mov
xor
insl
imul
adc
inc
in
xor
int3
jg
mov
fwait
mov
leave
mov
jb
mov
fdivrs
dec
and
sbb
nop
inc
ficoms
or
dec
xor
mov
jae
out
imul
push
call
sbb
mov
mov
cltd
mov
push
jnp
out
cli
aas
ss
out
mov
dec
push
mov
ja
sbb
pushf
pop
int3
mov
adc
in
mov
or
add
mov
std
mov
roll
xor
in
nop
inc
in
mov
push
repz
sub
jbe
mov
mov
test
aam
add
sbb
into
test
sub
xchg
and
mov
testb
lods
push
in
rcrb
jle
adc
out
cmp
imul
and
sbb
enter
add
mov
call
pusha
inc
adc
gs
cmp
mov
dec
push
bound
repz
fidivrl
xor
sbb
inc
out
push
jmp
mov
mov
aad
sub
xor
rcl
sarl
push
fmuls
adc
mov
int
mov
popf
ret
andb
test
push
sbb
cltd
inc
sti
bound
test
out
fwait
jnp
xchg
shlb
addb
mov
push
insl
jns
jae
push
mov
xchg
inc
mov
inc
sbb
and
daa
ret
mov
cmp
dec
les
ret
das
loop
test
adc
cmp
and
or
adc
mov
sbb
int
test
into
jmp
and
inc
pop
mov
adc
and
jecxz
push
mov
in
and
repz
sbb
push
cmc
cwtl
pop
idiv
fwait
sbb
pop
mov
mov
pushf
dec
je
sub
mov
cmp
jecxz
pop
sbb
jl
push
es
repnz
loope
xor
inc
pop
jge
pop
repz
ss
aaa
xchg
push
xchg
cmc
xchg
jle
fisubrl
gs
or
adc
pop
mov
in
lcall
jge
mov
mov
add
pop
add
cmp
lods
xchg
jge
cmp
mov
les
stos
jge
jg
lods
nop
pop
and
les
aam
aaa
hlt
pop
xchg
sbb
ret
stos
sbb
xorb
pop
loopne
bound
inc
inc
ds
mov
mov
jbe
ss
sbb
push
pop
pop
fbld
rcr
insb
and
mov
leave
inc
ja
sub
add
cmc
gs
insl
fincstp
outsb
mull
sbb
lea
sti
lahf
cmp
inc
inc
int3
jno
adc
cmp
and
inc
popl
jecxz
and
cmp
adcl
pop
popa
repnz
pop
inc
sbb
jmp
sub
and
mov
loop
jl
pushl
add
inc
xlat
jmp
and
or
inc
imul
or
push
lods
lret
mov
sub
hlt
and
inc
add
repz
mov
dec
and
cmp
jne
add
jmp
in
ja
movsb
sarb
pop
add
adc
mov
jbe
cli
inc
and
cmp
jo
loopne
sbb
adc
test
xor
int3
push
lods
dec
sbb
mov
ret
roll
inc
inc
mov
clc
push
daa
in
xchg
add
roll
sub
sbb
jg
jl
sbb
jg
repnz
dec
mov
fsqrt
jmp
xchg
cltd
rolb
inc
insb
xchg
mov
rcrl
adc
testb
loope
or
mov
lret
push
mov
mov
add
adcl
sub
sub
dec
mov
jecxz
test
inc
adc
js
in
mov
dec
push
sub
dec
inc
cli
sub
ljmp
or
sbb
add
xchg
cmp
nop
adc
dec
fcoml
pop
sub
push
lods
push
jo
jbe
and
inc
pusha
push
daa
mov
cwtl
ss
pop
mov
sbb
mov
mov
adc
pop
add
mov
push
lods
fs
addr16
in
or
jnp
add
loop
pop
ret
clc
mov
dec
pop
xchg
xchg
daa
dec
push
xchg
xchg
mov
and
or
repnz
adc
ss
sub
stc
push
pop
mov
sti
ret
push
in
sbb
jle
imul
sub
rcll
fcmovb
leave
push
scas
inc
enter
divb
es
out
lahf
test
imul
jnp
cmc
imul
adcl
or
pushf
sub
mov
xlat
mov
lods
int3
sahf
shll
or
push
pop
jg
adc
loop
decb
mov
fidivs
push
addl
enter
aam
iret
into
hlt
popa
pop
or
mov
pop
push
xchg
xchg
xchg
imul
sbbl
and
nop
clc
mov
popf
mov
xor
in
fcoml
enter
out
mov
mov
in
add
pop
popa
jb
mov
sbb
data16
and
es
test
inc
pop
or
out
rcrb
inc
loop
mov
sbb
dec
mov
lret
aad
xchg
jns
movsl
inc
jo
addr16
xor
xor
scas
sahf
sub
arpl
adc
pop
and
out
outsl
inc
ret
mov
push
inc
sub
lret
dec
xchg
in
push
aam
in
mov
into
into
pop
push
fmul
cmpsl
jno
ficoml
in
adc
movsw
xchg
mov
xchg
xor
outsl
add
hlt
jno
xchg
repz
lods
adc
push
fldt
hlt
mov
jbe
popf
cli
mov
fwait
sbb
lret
jmp
cmp
leave
ja
pushf
lds
je
fnstcw
ret
xchg
icebp
xchg
jmp
xor
sbb
scas
mov
lods
xlat
mov
fdivrs
ljmp
inc
fnstcw
sbb
mov
std
idivl
ret
mov
repz
or
cld
sub
fucomi
pop
movsb
jo
or
popa
or
mov
and
test
xor
and
in
js
push
repz
out
cmp
cld
cmc
fisttps
mov
mov
jle
sbb
or
test
mov
sbb
loop
scas
cmp
inc
orl
inc
mov
cs
mov
and
pop
icebp
imul
aad
xchg
fs
dec
test
sbb
xchg
push
dec
add
pop
icebp
pushf
adc
xchg
mov
cmc
add
push
jle
pop
mov
sti
ror
pop
dec
into
pop
popf
jno
dec
jmp
fs
mov
enter
mov
inc
sub
mov
outsb
in
aad
cmc
inc
repz
insl
mov
xchg
jl
jp
sub
dec
add
insl
xor
lret
xchg
mov
jg
stc
cmc
rolb
pusha
fcomps
mov
xor
lods
lahf
mov
add
fstl
in
insb
inc
das
movsb
inc
les
and
aas
inc
xchg
and
loope
mov
inc
test
negb
out
dec
outsl
jle
rcr
adc
pop
cld
cmp
xor
gs
nop
in
fs
adc
out
ficomps
pop
and
cmp
pop
cmp
mov
mov
sbb
into
imul
or
fcoml
mov
and
dec
push
push
ds
aaa
test
push
lock
mov
out
cld
clc
add
add
sbbb
add
stc
call
dec
mov
ret
or
dec
test
out
mov
ljmp
pop
shlb
aad
or
mov
ja
mov
fadds
fcom
pop
js
scas
insl
jb
test
jle
iret
mov
fstpt
dec
cltd
nop
push
push
adc
insl
xchg
fucomi
inc
pop
mov
test
pusha
stc
and
addr16
sti
xlat
or
push
ret
or
jb
adc
int3
test
or
or
cmp
xor
jb
aam
aad
pop
das
mov
jge
movsl
push
jne
fisttpll
mov
xchg
mov
std
arpl
cmpl
xor
addr16
dec
lcall
push
jg
fwait
push
jp
scas
movb
pop
push
dec
push
sbb
jl
int3
je
mov
sbb
scas
movsl
imul
mov
xor
pusha
pop
insl
sbb
and
sbb
adc
insb
lock
shrb
adc
xchg
push
shlb
loopne
push
xor
gs
dec
mov
and
sbb
adc
sti
xchg
cmp
pop
push
mov
lcall
mov
and
add
pop
xchg
fcoms
pop
icebp
leave
xor
es
fwait
mov
add
xor
repnz
ljmp
shl
inc
xor
mov
ret
mov
sub
xlat
call
cmp
arpl
cld
cmp
jb
ror
jb
icebp
jb
push
insb
sub
repz
leave
dec
push
lret
adc
jle
inc
mov
cmp
add
in
jno
add
jg
jno
pop
jp
ret
pop
int
jno
push
mov
adc
pop
xor
push
or
mov
fdivrs
mov
and
sbb
xchg
inc
int3
push
mov
pop
aas
insl
in
jns
sahf
mov
jne
test
scas
loope
mov
int
mov
js
aam
push
xor
lret
jl
pusha
pusha
add
xlat
jae
bound
test
jno
dec
push
fdivl
adc
negb
test
into
loop
bound
sbb
aam
subl
xor
lock
mov
sub
adc
mov
lret
sub
push
push
mov
cmp
insl
je
mov
push
sahf
pop
gs
mov
aaa
inc
mov
push
xor
or
clc
mov
sahf
ja
xor
cltd
loop
dec
je
mov
adc
cmp
adc
inc
jns
jg
leave
movsl
and
mov
jecxz
out
jbe
mov
mov
cmc
adc
out
aam
push
cltd
jl
dec
jne
xor
dec
test
ficompl
or
sub
in
xor
and
pop
lods
push
mov
mov
dec
les
add
test
lret
add
std
xchg
inc
pop
gs
lds
out
mov
adc
rcrl
pop
outsb
call
push
int
daa
push
xor
or
mov
xor
cmpsl
xor
test
mov
add
out
mov
int3
addr16
insl
in
int
add
mov
into
cmp
jl
mov
xchg
jle
out
dec
orb
sbb
je
jle
cmp
hlt
and
sub
sub
mov
icebp
jle
xchg
js
mov
fwait
shlb
bound
dec
push
lret
into
dec
adc
jp
cmp
dec
pop
ficompl
mov
clc
mov
xchg
cltd
andb
fdivl
fidivl
insl
cmp
arpl
rcll
sbb
xor
sub
imul
mov
sbb
iret
scas
mov
in
mov
test
sbb
dec
pop
test
adc
in
mov
inc
xchg
das
xchg
mov
xor
lods
mov
sub
hlt
cmpsl
mov
cli
ja
sub
imulb
sub
mov
lahf
sbb
cmp
out
mov
or
in
cs
stos
in
sbb
pushf
jne
mov
clc
cli
outsb
inc
loope
cwtl
insl
sub
jl
ja
sbb
rorb
push
jp
jbe
lcall
lret
xorb
das
mov
lock
adc
fucom
xchg
push
sti
jnp
roll
int
dec
mov
dec
xchg
fwait
cmp
cmpsl
test
xor
sub
loop
sub
cli
mov
inc
cmp
daa
jb
jns
fwait
scas
outsl
arpl
adc
adc
lock
in
add
out
cmc
mov
sub
iret
and
xor
push
adc
fildl
cmp
push
ret
out
in
or
adc
in
rorb
or
sti
fs
int3
inc
je
mov
add
fidivrl
sbb
pop
div
scas
test
loopne
test
ds
sbb
xchg
mov
and
fisubrs
js
lcall
ljmp
je
push
mov
out
jb
imul
adc
pushf
push
push
or
pinsrw
mov
sub
scas
pop
aaa
aaa
add
jmp
or
loopne
xchg
cmp
subb
std
mov
and
test
cwtl
popl
push
jbe
bound
inc
and
xchg
enter
and
mov
js
pop
push
mov
pop
mov
mov
fcoml
dec
cmp
dec
test
repz
sub
xchg
mov
cwtl
mov
dec
xchg
sub
jmp
inc
jae
in
xor
mov
jecxz
jo
pop
jge
cmp
push
lea
xchg
outsb
les
push
add
stc
sub
cmp
popf
push
pop
stc
fnstsw
push
ljmp
fadds
jnp
inc
mov
pop
xor
sbbb
cmp
nop
stos
insb
cs
mov
int
xlat
fstpt
sub
fs
adc
ja
call
das
dec
ss
subb
push
test
cmp
cltd
lock
cmp
lds
mov
jns
aas
and
pop
mov
shlb
pop
insb
dec
movsb
enter
sbb
data16
lret
xor
mov
lods
mov
es
leave
xor
push
cmc
mov
pop
test
cwtl
dec
shrl
shrl
or
decl
mov
xor
in
enter
mov
mov
mov
mov
push
jbe
in
jb
inc
outsl
lret
xchg
outsl
pop
pop
or
and
addr16
jl
sti
mov
push
jnp
dec
mov
sub
pop
push
adc
neg
cwtl
sahf
in
stos
repnz
aam
lahf
xor
lret
sub
mov
jae
sub
ret
sub
repnz
adc
inc
xchg
xchg
and
out
push
ja
mov
inc
movsb
jb
in
xor
jne
fcoms
mov
adc
push
cmp
mov
dec
pop
mov
xchg
es
dec
je
sbb
mov
mov
stos
test
lea
out
xchg
jl
jp
cmp
clc
in
mov
pop
pushf
add
sbb
dec
popa
pop
scas
xor
pushf
ss
inc
sub
mov
addr16
push
fisubs
je
lods
icebp
pusha
js
mov
je
xchg
cmp
mov
xacquire
dec
int
pop
in
sbb
jge
adc
test
xchg
aas
cmc
aad
sbb
pop
imul
orl
push
mov
mov
adc
or
scas
jb
outsl
sbb
and
cmpsl
mov
xchg
inc
lock
xchg
subb
cmp
sub
test
pop
push
inc
cmp
out
or
push
cmp
cmp
ss
sub
frstor
push
outsb
pop
gs
shrl
mov
ja
or
adc
mov
push
fwait
mulb
data16
int
and
jp
push
imul
lods
sub
out
mov
xor
lock
and
outsb
jl
mov
adc
jg
jne
or
or
cltd
ja
cltd
jnp
cltd
les
dec
jg
jge
add
repz
jmp
cmpl
jmp
insb
mov
pop
inc
xchg
mov
loop
mov
push
adc
push
sub
roll
bound
cmp
xchg
fsubrs
scas
repnz
lods
scas
movb
int3
jne
pop
xchg
jp
repnz
lahf
cmp
lret
arpl
xchg
orb
sbb
shll
test
mov
out
gs
orl
jbe
mov
sbb
sbb
dec
jb
mov
cmpl
pusha
mov
and
pop
ss
pusha
ret
daa
xchg
pop
xchg
sbbb
pushf
repnz
adc
push
xor
call
sbb
sub
ja
push
pop
pop
mov
push
mov
push
loop
setle
in
xchg
jl
or
imul
loop
loope
imul
sub
mov
inc
inc
cmp
mov
stos
shlb
xchg
shll
bound
mov
popf
test
add
pusha
pop
mov
outsb
loope
pop
fists
mov
mov
fcmovnb
cmp
mov
dec
jae
scas
xchg
or
das
xor
fildl
push
in
pop
cs
shll
inc
loopne
ret
jbe
dec
popa
jb
mov
jg
adc
jg
shlb
mov
pop
stc
cmpsl
pop
add
sub
inc
ficoml
fcompl
pop
mov
pop
in
repnz
or
loope
fcoms
bound
pushw
mov
aas
rcll
inc
sbb
imul
xchg
mov
push
insl
xchg
fxch
pop
or
cltd
jge
jecxz
in
sahf
dec
sbb
test
loope
pop
test
test
or
inc
bound
adc
cli
ja
mov
jae
movsl
mov
mov
mov
add
xor
inc
jno
sar
or
mov
dec
js
jo
mov
add
xor
xchg
pop
lret
pushf
aam
frstor
ljmp
insl
pop
sub
mov
or
loop
imul
mov
mov
adc
imul
sub
faddl
cmp
out
outsl
or
add
mov
or
pop
add
iret
mov
into
push
mov
push
setg
xor
sbb
push
sub
cmc
aaa
sbb
and
rol
push
int3
dec
sub
or
ret
mov
data16
pop
loop
or
jecxz
add
adc
subb
out
jo
inc
cmp
mov
sbb
adc
movsl
jecxz
cmp
mov
mulb
ss
out
hlt
ror
test
xor
fisttpll
and
pop
fcomps
add
add
mov
and
inc
sahf
loope
jne
inc
vcvttsd2si
xchg
inc
pop
inc
sub
mov
push
add
popf
lahf
jae
in
adc
enter
rorl
or
mov
push
jmp
data16
rolb
cmp
inc
cmp
test
jnp
sbb
sub
dec
inc
xchg
mov
inc
stc
leave
fdivp
add
imul
cltd
ret
iret
jg
imul
jbe
sub
loopne
or
imul
popa
sub
or
adc
xchg
repz
repz
fsubrl
jns
and
lret
xchg
loope
lods
xchg
scas
test
adc
and
clc
inc
out
movsb
mov
aad
xor
ret
dec
leave
mov
push
cmpsb
leave
sti
out
sbb
dec
mov
xchg
sub
xor
inc
pop
cmp
ret
mov
and
clc
xchg
lods
cmp
mov
sbb
push
push
addr16
xchg
adc
pushf
test
xorb
fdivrs
jl
sub
ret
call
ret
adc
sahf
loopne
aaa
cmp
add
fnstenv
test
ret
push
jl
pop
out
iret
adc
or
or
arpl
xor
ja
xor
shll
repnz
idivl
mov
ret
das
clc
pop
add
cmp
or
jp
jp
stc
xchg
jb
mov
jg
repz
pop
xlat
sarl
cmp
loopne
pop
xchg
fiaddl
cmp
out
les
aad
pop
mov
rcl
inc
imul
inc
adc
pop
xchg
pop
push
mov
nop
loope
mov
sbb
insl
mov
cmpsb
stc
push
mov
push
jbe
movsb
xchg
mov
sahf
mov
mov
sarl
cmp
pushf
shrb
mov
jbe
lods
push
cli
xchg
imul
adc
xlat
mov
sbb
in
jge
pusha
mov
adc
push
ss
inc
xchg
xchg
cltd
hlt
dec
xor
push
mov
mov
adc
and
ret
mov
into
mov
xchg
mov
mov
cmpsb
and
xchg
jae
fidivrs
in
js
or
fcoms
pop
pop
push
cltd
mov
mov
lock
mov
sub
mov
xchg
dec
fcmovnu
data16
inc
popf
aam
mov
push
and
mov
adc
adc
xchg
jns
shld
stos
pop
enter
les
lea
xacquire
test
add
mov
mov
add
ret
mov
pop
xchg
mov
mov
xor
in
inc
cmp
push
test
pop
fs
pop
or
push
xchg
repz
add
cmp
das
pop
xlat
repnz
push
jle
iret
sbb
mov
sub
mov
pop
cmpsb
pop
dec
aam
xchg
push
cmp
daa
adc
sub
fsubs
ja
rorl
cwtl
lea
rorl
gs
sub
jl
inc
lods
stc
mov
sub
sub
in
xor
test
shrb
push
cmpsb
loopne
and
das
pop
pusha
xor
orl
or
mov
dec
sub
cld
add
jae
js
push
fdivrl
and
mov
js
sahf
push
adc
mov
test
adc
add
cs
mov
test
sarb
adc
call
sub
ds
sub
sub
je
push
xchg
lock
xlat
dec
sti
imul
jp
roll
xchg
inc
addr16
pushf
jp
push
aas
push
xor
inc
ss
enter
pop
inc
dec
xchg
pop
mov
int
iret
push
sahf
mov
mov
adc
fcoms
pop
popa
js
shrl
daa
dec
insl
mull
out
xor
movsb
arpl
aad
icebp
lods
fs
cmp
dec
imul
movsb
test
popf
jg
jp
sbb
add
inc
pop
sub
dec
add
ficomps
ds
nop
and
mov
pop
mov
call
jb
and
fiaddl
xor
stos
mov
and
gs
dec
aaa
out
bound
mov
mov
popa
hlt
shrl
flds
push
pop
pop
loope
js
ss
rcll
push
cmp
or
jmp
lock
push
dec
test
or
scas
aad
fldcw
jg
or
xor
mov
cmp
or
fxam
inc
push
pop
jge
jle
jae
jne
mov
inc
add
add
int
jge
fstps
and
std
push
in
loopne
push
mov
mov
xchg
into
jne
mov
inc
inc
mov
popa
push
out
mov
pop
push
inc
mov
fsubl
xor
and
fsubl
sbb
xor
adc
dec
mov
cld
lret
ret
in
stos
mov
mov
mov
nop
sbb
dec
xor
jno
data16
pop
fxch
push
sub
pop
adcb
cld
shl
sbb
pop
test
cwtl
or
addr16
mov
cmp
bswap
out
mov
enter
fsubs
push
mov
insb
les
lods
ror
cmpsl
fmuls
cmp
xlat
fwait
das
ds
dec
add
lret
fcoml
sbb
aas
adc
stc
rol
mov
aad
mov
sbb
cmpsb
push
imul
movl
pop
fsubl
or
cld
push
sub
xchg
xor
das
call
jno
cwtl
loop
push
sahf
sti
repz
aas
jno
movsb
sub
add
cmp
or
jns
out
mov
ja
cwtl
int
mov
and
mov
dec
xchg
shll
mov
mov
fnstcw
call
and
out
adc
sub
xchg
mov
adc
roll
and
gs
jecxz
aas
lahf
or
out
lock
outsb
lcall
add
fs
sar
fwait
and
in
xchg
push
and
jecxz
inc
cmp
sarl
call
je
pop
jge
fistpll
push
ret
stos
test
adc
addl
mov
mov
sub
fmull
loopne
int3
cwtl
jbe
outsl
std
insl
add
shrl
inc
cwtl
pop
int
jo
jns
in
xor
fxch
rclb
add
jl
aad
dec
sub
fmul
loope
pushf
shll
mov
add
cmc
push
shll
rcrl
xor
mov
inc
xchg
mov
pop
bound
xchg
push
insb
out
das
mov
in
xchg
and
rorl
fmuls
outsb
mov
push
jp
movsl
mov
mov
jmp
sahf
test
jmp
psubw
call
or
jnp
nop
aaa
cmp
pusha
outsb
lahf
pop
into
jmp
daa
adc
jp
jg
mov
push
pop
mov
mov
xchg
iret
repnz
pushf
addr16
mov
out
add
fs
inc
push
xchg
add
adc
mov
sti
adc
test
xor
pop
mov
sbb
fs
dec
mov
inc
movsb
arpl
in
fs
sub
push
mov
jp
pop
jo
nop
shlb
mov
and
mov
add
xor
movsb
aam
mov
movsb
shr
jmp
movsb
stos
test
lahf
mov
mov
inc
adc
xor
mov
cmpsb
pop
ljmp
pop
pop
or
movsl
adc
inc
aad
in
and
xlat
aaa
stos
mov
mov
loope
pop
xchg
shll
mov
clc
je
mov
mov
pop
addr16
xchg
fs
xchg
imul
mov
imul
out
or
and
cmp
push
rcl
imull
mov
jge
js
mov
lret
and
stos
cmc
pop
frstor
push
das
and
pop
movsb
dec
popa
loope
add
mov
xchg
jmp
pop
mov
jno
mov
push
cmp
cwtl
aaa
imul
jne
popa
xor
xchg
rclb
mov
inc
jecxz
int
sub
in
jo
cmpsl
jb
inc
pop
mov
mov
dec
paddsw
inc
or
repz
mov
dec
test
sub
cmp
pop
pop
std
jb
andl
xchg
dec
xchg
popa
jnp
fisttps
cli
out
sbb
mov
les
pop
das
jmp
adc
popf
jbe
jecxz
sbb
jns
mov
popf
aam
das
cmp
out
inc
in
les
jl
jno
repz
sub
cltd
sbb
add
mov
lea
fcoms
push
int3
mov
xchg
repnz
stos
jno
add
ja
loope
mov
jmp
mov
jae
cmp
out
dec
ss
movsb
in
test
insl
fstpl
add
mov
into
scas
mov
xchg
pop
add
push
xchg
andb
cmpb
outsb
fs
outsl
test
pop
sarb
lock
mov
jae
jg
les
int3
arpl
xchg
scas
jae
les
cmp
xchg
leave
out
add
adc
xor
imul
sub
cmp
xor
ja
dec
psubsw
cmp
shr
push
xor
loopne
mov
cli
jbe
jo
sub
imul
stos
into
xchg
and
int
or
lahf
xchg
inc
inc
sbb
cltd
jns
ds
mov
jb
cli
push
mov
jecxz
outsl
daa
cwtl
dec
call
xchg
push
sbb
push
pop
inc
cmp
mov
inc
mov
repz
or
sahf
adc
xchg
push
ficomps
xchg
cmp
shr
ja
stc
lahf
or
xchg
xor
aas
push
inc
leave
and
mov
nop
push
add
in
clc
xchg
pusha
or
aam
push
mov
sbbl
mov
ret
pop
es
cmp
push
cmp
addl
dec
pop
cmp
ja
cmpsl
jnp
mov
mov
lods
jge
mov
and
push
fildl
lret
mov
out
mov
popa
mov
repnz
or
pusha
lret
pop
das
mov
insb
stos
sbb
inc
in
mov
pop
cld
loop
out
mov
push
mov
stos
jo
hlt
lret
cwtl
data16
or
adc
scas
push
pusha
push
fcmovnu
push
xchg
mov
xchg
mov
mov
mov
xor
ja
movsl
ret
mov
xchg
xchg
faddp
je
pop
mov
cli
pop
jmp
outsl
dec
mov
jbe
cmp
add
pop
cmpl
sbb
sbb
inc
fdivl
lret
pop
push
mov
mov
test
bound
jb
cmp
sbb
dec
cmp
ss
mov
das
xchg
mov
xchg
add
adc
lea
inc
adc
xchg
jo
cmpsb
incl
mov
xchg
loope
sbb
or
int
lds
add
add
pop
pop
add
movsl
jbe
or
dec
mov
pop
mov
mov
push
call
push
outsb
stos
stos
pop
xor
ds
push
adc
popa
repnz
push
mov
incb
addr16
stc
popa
pop
mov
dec
sub
cld
sub
mov
xor
daa
pop
outsb
sub
xor
cmc
jbe
jno
xlat
push
mov
cmpsb
vunpcklps
add
jl
imul
call
hlt
mov
inc
arpl
mov
stos
pop
sub
pop
enter
push
dec
sar
lcall
out
adc
lretw
push
push
or
pop
mov
std
pop
daa
sbb
lods
jnp
mov
out
loopne
mov
daa
dec
scas
data16
aaa
lods
insl
insl
mov
ds
data16
cmp
in
dec
es
add
xchg
inc
mov
test
fisttpll
mov
pop
insb
sbb
repz
imul
jge
shll
inc
jae
call
cmpsb
lret
inc
inc
sub
jo
faddp
add
cltd
mov
add
mov
stos
lahf
adc
fidivs
jb
in
lods
cli
movsb
incl
das
or
fstl
cs
dec
aas
ds
insb
sub
lods
shlb
test
dec
or
mov
sbb
xor
or
pop
in
movsl
iret
jg
pop
out
ja
push
pushf
cld
xchg
ret
ja
sbb
jns
xor
fdivs
cmp
std
call
mov
fs
xchg
xor
popf
loop
leave
int3
cmp
pop
xor
fildl
in
push
sbb
repnz
nop
dec
and
push
std
repnz
cmp
mov
scas
push
mov
cmp
pop
jle
lea
cmp
xor
das
xchg
and
icebp
xor
add
loopne
jmp
mov
movsl
push
hlt
rclb
ret
arpl
adc
cli
jo
test
xor
test
and
xchg
cld
xchg
jle
imul
cli
xorl
adc
push
aam
insb
test
add
stos
mov
fsub
data16
das
bound
dec
jp
mov
mov
sbb
fucom
mov
jmp
or
repnz
and
cmp
lcall
fwait
jno
inc
adc
pusha
es
enter
adc
add
loope
mov
mov
fs
xchg
add
and
mov
outsl
lret
push
pop
ljmp
or
scas
and
sbb
mov
sub
fists
orb
fldt
sub
setle
mov
addr16
sbb
mov
jb
addr16
rolb
outsb
xor
sbb
scas
idiv
mov
sbb
rorb
adc
clc
pop
or
dec
add
das
inc
cli
rcrb
mov
and
add
cmp
bound
add
subb
xchg
add
daa
sbb
cmp
add
lahf
in
icebp
idivb
xor
gs
aam
sub
and
popf
push
sarl
lret
outsl
mov
cmp
mov
xchg
stos
sbb
pusha
xor
push
jb
aad
inc
mov
pop
jb
out
stc
sti
adc
adc
push
cmc
movsl
sub
iret
sbbl
jo
scas
bound
mov
nopl
pop
cltd
shl
jnp
cltd
out
sbb
push
or
test
jl
addb
xor
sbb
mov
and
inc
push
fcoml
jp
popf
fstpt
icebp
adc
pop
fsubl
and
sbb
jbe
mov
adc
mov
add
xchg
mov
popa
popa
stos
push
bound
push
cld
mov
sahf
fisubrl
fst
out
or
jp
cmp
add
mov
pop
xchg
inc
adc
cld
dec
outsb
cmpsb
sti
cmc
cmp
mov
sub
dec
jae
int
insb
sahf
addb
jl
cmp
pop
ret
mov
test
sahf
push
fisttpl
jge
gs
imul
pop
rdpmc
adc
push
repz
add
loopne
jns
and
out
add
jno
aad
sub
lea
push
scas
int
dec
fwait
jne
shll
lret
mov
xor
lea
mov
sbb
cmp
push
dec
mov
sbb
mov
mov
mov
inc
lret
iret
pusha
outsb
imulb
andl
jp
mov
jl
cmpsl
popa
stc
mov
xorb
fwait
and
pop
stc
xor
shl
lret
dec
fcmovbe
rcrl
and
into
pop
lahf
xor
jb
rolb
jp
daa
fwait
mov
mov
inc
jne
fs
fsubrs
inc
jae
pop
aas
lcall
imul
call
sub
pop
imul
addb
xchg
je
adc
mov
pop
push
adc
jbe
lret
add
mov
or
push
cld
lcall
cwtl
add
mov
popa
ja
arpl
sar
push
stos
and
lock
and
or
outsb
push
cld
nop
xchg
popf
add
xchg
xor
es
std
inc
fbstp
loopne
out
hlt
adc
sbb
xchg
adc
lea
adc
xchg
pop
lahf
dec
fs
dec
decl
jmp
sub
or
and
out
cmp
pop
mov
ljmp
xor
inc
push
sbb
ja
in
hlt
cmpsl
mov
stos
and
sub
cwtl
stc
inc
das
xorl
dec
test
sbb
inc
mov
mov
cld
out
shl
jp
out
mov
xor
ds
imul
lods
mov
mov
stos
test
out
mov
jecxz
pop
sub
cltd
out
loopne
xchg
pop
mov
mov
adc
adc
lahf
sub
jl
andl
adc
cmp
fcomip
sub
add
call
in
cmpsb
jl
xchg
lret
shll
movsb
pop
xor
xchg
and
movsl
push
cmp
scas
fwait
hlt
mov
xchg
mov
fisubrl
cs
data16
xor
jl
xchg
loopne
lock
sahf
icebp
dec
pop
outsl
sub
push
test
aad
push
mov
aaa
out
and
and
lds
sub
mov
xchg
or
inc
or
imulb
xchg
adc
lock
cmc
cmpsb
jmp
inc
js
aam
lret
popa
dec
adc
lcall
xor
pop
jbe
loope
imul
mov
and
mov
sbb
sub
fisttpl
xor
or
out
mov
data16
pop
popf
fucom
ret
jp
cmp
push
std
test
add
dec
or
test
out
mov
adc
ljmp
push
or
inc
cmp
push
rol
mov
xchg
data16
test
addr16
jge
mov
cmp
xor
add
xlat
dec
mulb
mov
cld
xor
or
or
lahf
cmp
xchg
daa
in
fidivrs
cltd
jl
daa
shl
push
dec
insb
or
aaa
es
sbb
and
mov
cmp
shl
push
dec
mov
or
insb
aaa
loopne
test
inc
jp
cmp
aas
jle
aaa
sti
out
scas
cltd
sbb
cmp
in
xor
test
xchg
aaa
sub
cmp
lahf
push
aaa
int3
data16
mov
adc
adc
mov
cs
aad
mov
daa
ljmp
in
repz
bound
rclb
sub
and
cmp
je
cld
movsl
gs
adc
mov
xor
lds
iret
lods
jmp
popf
es
leave
insb
notl
cmp
pop
addl
mov
jno
push
push
pop
insl
dec
ret
pop
mov
and
pop
push
lret
int3
loop
aad
pop
out
mov
lcall
mov
xor
xorl
test
xor
push
addr16
jne
outsb
xchg
add
jmp
lea
add
jne
cmp
pop
jmp
adc
or
xor
fcmovne
xchg
dec
jg
mov
into
mov
pop
sahf
add
call
push
mov
rolb
enter
jns
jmp
sti
or
psubusw
sbb
sub
adc
nop
fdivrl
inc
lods
add
sub
outsl
push
cmp
mov
and
xchg
xorl
lcall
pop
mov
lds
cli
jmp
sub
rolb
into
dec
mov
negb
rol
mov
test
mov
cmpsb
stos
push
or
push
jecxz
flds
lods
shrb
mov
out
adc
xchg
stos
push
pushf
inc
adc
scas
in
add
repnz
cmp
cmpsb
repz
int
mov
clc
imul
scas
rclb
push
daa
ljmp
xchg
cmpsl
mov
cmp
xor
jo
inc
das
aad
mov
fildll
dec
mov
xor
or
pop
pop
fists
mov
aas
push
data16
cmp
outsb
mov
test
inc
in
sti
dec
xor
cwtl
or
push
mov
fcoml
aas
push
xchg
sbb
movsl
pop
jnp
lahf
orl
add
mov
pop
outsb
repz
rcrl
mov
mov
stos
mov
ja
mov
xor
jge
dec
cltd
dec
adc
cli
sub
imul
cltd
push
xchg
cmpsl
fisubrl
fwait
pop
or
sub
or
jbe
and
in
fwait
pop
faddl
mov
pop
push
pop
in
ret
clc
pop
lods
clc
jecxz
outsl
jno
mov
dec
fistpl
mov
jle
adc
cmpsb
pop
add
xchg
clc
loopne
cwtl
nop
cmpsb
gs
outsl
add
inc
out
mov
stos
cmp
mov
xor
mov
fcmove
leave
sub
es
adc
sbbl
pop
jecxz
ss
mov
je
inc
sbb
outsb
push
xchg
xchg
daa
push
aam
mov
cmp
addl
or
lds
sub
xor
inc
out
dec
hlt
ja
pop
popf
mov
push
sub
movsb
mov
push
insl
fs
popa
jo
dec
sbbb
outsb
push
outsb
jl
lcall
addr16
sub
sbb
mov
jg
jge
push
and
mov
or
leave
mov
stos
enter
push
and
pusha
inc
lea
add
pop
fstps
imul
mov
jge
pop
mov
int3
pop
jl
or
mov
rol
add
push
xchg
lock
sub
cs
ret
lret
mov
pop
fwait
xchg
ret
jge
lret
jb
lret
adc
stos
push
mov
cmpsb
icebp
cwtl
and
rcll
out
subb
jnp
xchg
idiv
shll
arpl
repnz
mov
adc
cmp
jno
adcb
popf
dec
addb
int3
cltd
and
dec
xchg
mov
mov
bound
xchg
adc
in
push
stos
jmp
popf
pop
adc
test
xchg
xchg
test
xor
mov
adc
jno
scas
sahf
mov
mov
pushf
testl
in
mov
mov
and
sub
cltd
hlt
in
sub
inc
ljmp
ljmp
in
xor
adc
cmp
clc
xchg
mov
and
xor
xor
xchg
bswap
xchg
jg
addr16
lods
repnz
or
out
rclb
pop
or
mov
andl
mov
cmpsb
sbb
fbld
pop
add
mov
mov
fisubs
xchg
in
lods
mulb
mov
bound
jae
out
popf
out
movb
or
cmp
mov
mov
or
adc
add
mov
inc
or
mov
xchg
jo
aam
sub
popf
loopne
sub
jno
adc
shlb
xor
mov
enter
mov
sub
mov
push
sbb
repnz
dec
dec
test
jne
xchg
addr16
cmp
das
mov
inc
jo
loop
push
xchg
pop
jmp
stc
cltd
dec
imul
das
fxch
inc
in
ds
mov
pop
jae
mov
repz
mov
fadd
pop
add
ds
inc
rcll
dec
ja
mov
xchg
outsl
adc
mov
sbb
jo
and
xor
inc
mov
scas
call
out
outsb
das
jno
sub
pushf
mov
inc
jae
lahf
mov
xchg
icebp
call
push
mov
lcall
bnd
inc
dec
cs
inc
cld
cld
fiadds
adc
repz
cld
mov
or
pusha
jne
inc
mov
xchg
rcrl
test
cmpsl
pop
inc
cld
popf
test
inc
pushf
popf
in
inc
mov
test
das
aad
push
dec
pop
ss
lret
adc
enter
push
cmova
push
mov
inc
or
mov
addb
ss
push
and
inc
stc
int
or
and
mov
pushf
in
sub
test
push
fndisi(8087
mov
imul
scas
mov
mov
dec
fstpl
push
cmc
or
mov
shlb
mov
addr16
roll
mov
inc
and
xor
lret
jmp
mov
mov
sub
and
inc
add
cli
cmp
mov
movsl
dec
fildl
pop
mov
lret
adc
xor
mov
jl
repz
enter
fnstenv
sar
xor
push
pushf
mov
push
popf
push
add
out
fidivrs
outsl
icebp
mov
repz
cmp
pop
jbe
pop
add
arpl
sbb
outsl
cwtl
mov
scas
in
call
je
pusha
push
js
adc
fistps
xor
jo
fistpll
scas
repz
fdivs
arpl
cmc
leave
xchg
rclb
mov
xchg
movsl
and
inc
or
mov
cmp
adc
push
cmp
jp
cli
and
jmp
stc
dec
loope
lahf
fnstsw
xchg
jp
xor
push
and
cmp
sub
sub
pop
stc
aad
mov
out
andps
shrb
cmpsl
imul
inc
sbb
faddp
lds
pop
pop
sahf
pop
addr16
in
inc
cmp
enter
cld
fwait
mov
mov
cli
clc
xchg
ret
dec
and
sub
jns
test
xor
pop
dec
in
or
das
sahf
xchg
push
mov
int3
arpl
out
or
lcall
sbb
xor
inc
xchg
cmp
dec
jns
push
pop
mov
pop
shrl
or
sbb
not
pop
xchg
mov
imul
movsl
inc
fmull
xor
mov
movsl
repz
inc
loopne
movsl
scas
daa
lret
sub
jae
orb
cld
and
fcompl
popf
movsb
push
adc
adc
sahf
dec
imul
dec
inc
pop
and
jns
shll
scas
mov
mov
mov
mov
mov
syscall
push
cmpsl
xchg
jmp
dec
add
inc
push
add
loopne
xor
pop
lahf
lds
clc
dec
mov
and
inc
movq
jl
movsb
or
pop
jg
xor
test
cld
scas
popf
orb
shll
jmp
xor
ljmp
das
stos
dec
stos
mov
mov
push
psubb
xor
test
mov
fmull
pusha
xchg
push
push
push
add
stc
mov
pop
call
or
lret
mov
xor
adc
push
sbb
nop
push
jb
pop
insb
sbb
xchg
mov
xor
sahf
cmc
divb
pop
mov
push
xor
cmp
mov
xchg
icebp
sbb
frstor
pop
lods
int3
es
repz
lds
faddl
pushf
pop
xchg
mov
sar
mov
and
inc
mov
mov
mov
sub
lock
jge
sub
inc
or
loopne
mov
icebp
mov
aam
push
sub
fs
insb
mov
popa
cmp
push
test
adc
shll
xchg
and
jge
daa
pop
cmp
pop
adc
add
fwait
int
jno
mov
xchg
stos
rcrb
outsb
mov
mov
xor
mov
mov
xor
orl
push
xor
or
xor
xchg
xchg
fwait
jmp
ss
stos
xchg
push
cmp
jge,pn
mov
test
jne
loopne
push
or
xchg
ret
jl
insb
std
aas
push
xchg
ljmp
lds
mov
cmp
sub
cmc
lock
and
push
mov
ljmp
rcrb
imul
jmp
pop
lea
lods
and
and
cmc
jl
incb
sub
sub
mov
scas
mov
das
rcr
cmpsl
jl
rcrb
adc
cwtl
mov
add
pop
pop
psraw
mov
mov
add
mov
jle
dec
jae
cld
sbb
or
mov
push
popa
mov
xchg
mov
sbb
sbb
mov
xor
jno
lods
inc
sbb
cwtl
and
and
sbb
mov
or
pop
in
ljmp
pop
adc
je
dec
jle
cmp
mov
out
adc
jne,pn
or
lods
pop
cmp
or
loope
lret
xor
xchg
loope
sub
cld
lods
cmp
jge
sub
sbb
ror
and
aas
push
and
into
inc
cmpsb
pop
sbb
outsl
mov
lea
repz
xorl
rclb
mov
pushf
aas
mov
jnp
xchg
add
nop
cmp
rcrl
out
adc
cmp
jge
push
inc
push
jns
cli
push
fisttpl
daa
xor
cld
push
imul
sbbl
cld
loopne
adc
movsl
xchg
test
ret
sub
xor
inc
push
fwait
repnz
adc
sub
cmp
js
hlt
sub
movsb
sub
add
pop
add
add
jnp
sub
and
push
cmp
push
cmp
incl
push
or
sahf
aam
inc
cmp
js
jne
pop
out
inc
pop
dec
in
lahf
insb
xchg
inc
push
and
sbb
dec
inc
scas
fldt
push
inc
pop
pop
ja
ljmp
lcall
mov
lret
sub
repnz
lods
add
dec
ja
in
fdivrs
gs
inc
jle
movsl
fisubs
mov
jo
cmpsb
sub
sti
test
or
lods
mov
bound
mov
inc
inc
movsb
or
in
push
adc
adc
cmp
mov
insb
inc
ljmp
add
mull
mov
and
inc
xor
cmp
and
add
cwtl
or
cld
inc
rcrl
out
outsb
xchg
pop
ja
push
fistpl
jbe
lret
lds
push
bound
cmp
cltd
dec
mov
insl
adc
add
popa
push
fwait
imul
dec
mov
ficoml
dec
push
mov
add
sub
mov
inc
movsl
mov
jae
enter
aam
add
pop
test
cmp
inc
push
lret
xchg
inc
outsb
js
in
and
aas
jnp
lods
cmpsl
add
mull
dec
adc
mov
fisttps
xchg
and
inc
insb
push
dec
repnz
jl
pop
jno
jle
push
lock
inc
sarb
pop
push
xchg
mov
cmp
cmp
es
in
pop
push
jl
dec
mov
movsb
jle
rcr
shll
imul
jns
adc
jle
popa
cli
push
and
int3
mov
dec
shll
jo
jae
push
mov
cs
gs
add
testb
dec
scas
mov
test
and
rolb
and
and
sub
push
cmpsl
push
daa
mov
pop
mov
push
adc
addr16
test
dec
inc
aad
out
xchg
mov
sub
out
sbb
popf
adc
movsb
out
adc
cmc
fisubrs
jnp
jmp
clc
pop
lods
mov
push
mov
push
stos
sbb
pop
iret
je
mov
aam
rcll
add
lods
daa
dec
dec
es
sbbl
sbb
cs
pop
lret
mov
cwtl
push
nop
sbb
mov
mov
aas
adc
bound
push
inc
outsb
cltd
cwtl
and
adc
cmp
sub
out
in
xor
sahf
push
adc
out
incb
int3
sahf
jmp
adc
ret
pop
out
dec
mov
jne
jbe
inc
cwtl
inc
push
popa
data16
push
addl
popf
cmp
lret
int3
add
jge
fsubrl
in
sbb
fucomp
mov
cmpsb
lret
stos
mov
lret
pop
sub
dec
inc
push
mov
xor
add
insl
incl
cld
sbb
outsb
cmpsb
fmull
mov
cmc
shrl
fidivl
cmp
ja
int
mov
inc
mov
jmp
in
loop
fbld
pop
movsb
mov
lock
dec
test
icebp
mov
repnz
jmp
scas
outsl
inc
filds
test
jl
adc
jg
enter
test
xchg
pop
or
xor
or
jae
push
cmp
andb
adc
repz
repz
push
sbb
or
mov
daa
test
add
fwait
push
and
add
xchg
cmp
xor
sub
push
jle
mov
lea
aad
and
in
fmuls
dec
xchg
lods
cli
movl
pop
ds
test
push
in
sahf
divb
sbb
jno
or
push
lret
popf
shl
ja
cmpsb
or
inc
gs
popf
pop
jmp
mov
sub
divb
mov
cmp
sbb
fwait
lock
fistpll
or
push
cmp
xchg
jl
js
xchg
mov
add
lret
jae
sub
cwtl
lods
int
in
pop
cltd
cmp
flds
inc
cltd
add
sbb
mov
xchg
dec
jbe
aad
or
or
adc
xcrypt-cfb
cmpsl
and
or
testl
jae
add
sub
add
ds
stos
pop
dec
vunpckhpd
cwtl
bound
add
lret
arpl
outsl
and
and
das
push
inc
push
fs
out
movsb
leave
cmp
scas
mov
nop
insl
adcl
ljmp
push
push
cmpsb
mov
aad
test
into
sub
data16
stc
adc
push
sbb
orb
sub
rorb
lock
mov
leave
cmpsb
addl
jecxz
mov
jecxz
push
xor
sbb
push
cmpsb
adc
pop
jl
mov
int3
mov
push
add
mov
pop
es
jmp
push
iret
cmp
dec
out
iret
cltd
push
es
sbb
xchg
mov
xchg
xor
fiadds
cld
roll
cmp
das
nop
call
adc
ds
out
sbb
cmpsl
cmp
je
inc
lds
cmp
jae
jbe
xchg
sbbl
mov
incl
add
jecxz
lret
pushf
mov
fistps
push
mov
cltd
add
mov
lods
cmpsl
cmp
xchg
inc
scas
mov
in
dec
shl
faddp
aaa
xchg
ret
outsb
add
movsl
sub
adc
xlat
pushf
lretw
pusha
cmp
mov
jmp
je
mov
jo
scas
dec
test
jno
jmp
mov
repnz
gs
pop
mov
xor
sti
cwtl
push
push
adc
notl
push
sub
sti
shl
mov
sbb
data16
scas
aad
arpl
movsl
pop
arpl
cmpb
testb
das
aam
pop
mov
jle
cmp
jb
repnz
int3
stc
outsl
inc
in
inc
js
xchg
testl
dec
push
mov
sub
push
mov
repz
gs
shrl
ror
int
mov
jb
in
scas
mov
sub
inc
mov
inc
push
mov
nop
cmp
mov
les
push
aaa
xchg
cmp
sbb
dec
push
add
xchg
cmp
add
stc
mov
mov
fucom
int3
dec
sbb
jbe
lahf
sbb
das
test
popf
inc
je
inc
mov
inc
data16
inc
test
jne
cmp
in
sarb
dec
into
fildll
jmp
mov
shll
mov
sbb
cmp
incl
or
inc
and
aas
aam
iret
cmpsb
stos
sbb
mov
mov
add
outsb
adcb
mov
loope
pop
ret
imul
xchg
nop
and
mov
in
ja
add
lods
aaa
pop
aam
sahf
jb
movsb
inc
xor
mov
cwtd
sbb
add
or
push
test
lsl
or
pop
lea
clc
pop
jecxz
sti
outsl
rcrb
push
mov
sub
dec
fwait
or
cmpsb
jmp
push
enter
inc
aad
int
sbb
and
xor
std
call
mov
cmp
or
jl
dec
xchg
adc
mov
lret
or
lcall
inc
cmpl
mov
pop
imul
push
xchg
bound
and
mov
sub
push
out
scas
and
inc
xchg
xchg
mov
shll
jae
xchg
int
into
adc
stos
adc
adc
xacquire
xor
xlat
and
xchg
cli
mov
cmp
mov
out
bound
push
jno
lods
sub
mov
test
xchg
mov
lock
xchg
test
es
dec
mov
inc
push
sub
xchg
pusha
cmp
mov
inc
inc
and
cmp
leave
repz
test
jg
sbb
push
fxch
jno
ds
cmpsb
mov
xchg
xor
dec
pop
sti
pslld
or
mov
ja
ss
cmpb
jae
in
push
pop
mov
icebp
sub
dec
pop
mov
shlb
imul
in
mov
insl
leave
popf
stc
ds
jnp
inc
and
aaa
add
stc
mov
xor
sbb
hlt
dec
dec
jmp
mov
push
cmp
stos
mov
adc
cmp
popf
stc
cmp
call
mov
inc
push
jne
daa
cmp
sub
leave
lcall
dec
sbb
stos
jp
fistl
hlt
shrb
int3
pop
xor
adc
cmp
inc
or
sub
mov
bound
mov
scas
mov
pop
cmc
mov
sbb
pop
test
outsl
inc
pusha
add
and
pop
inc
repnz
push
sub
out
mov
add
and
sti
xor
push
inc
movsl
pop
inc
push
repnz
push
xchg
lock
mov
push
notl
nop
ljmp
or
xchg
cltd
push
fisubrs
test
out
inc
pop
and
mov
cmp
and
in
and
sub
sub
pusha
xor
cli
loop
sbb
mov
bound
andb
xlat
mov
lcall
std
dec
pop
je
test
notl
pop
adcl
cmp
adc
pop
push
repnz
sub
dec
jns
stc
mov
mov
jecxz
cmc
jecxz
dec
into
jle
mov
sti
or
and
push
add
ret
fdivr
lret
pop
insb
pop
push
insl
je
out
sub
xchg
shl
test
xor
jle
sub
add
jb
fst
cmp
stos
mov
in
jo
sbb
pop
dec
push
adc
test
add
cwtl
dec
repnz
dec
xchg
mov
es
enter
mov
xchg
das
sub
lret
xor
mov
cmp
or
in
loop
ljmp
dec
mov
jae
arpl
pop
fnstenv
scas
stos
mov
dec
push
bound
leave
mov
ficoms
stos
decl
push
jg
pop
pop
mov
mov
int3
push
xlat
stos
test
rclb
movsl
outsl
and
movsb
dec
scas
les
out
pusha
es
aaa
in
pop
cmpsb
pop
roll
mov
jns
fwait
lcall
jp
mov
mov
subb
push
data16
insb
mov
dec
inc
adc
xor
add
jb
cld
das
cmpsb
fisttpl
subb
shrl
int
jbe
fldenv
cmp
push
mov
mov
xchg
test
test
fstps
inc
or
rcrl
aas
xchg
mov
cwtl
aam
jl
das
pop
jle
cmpsb
pop
outsb
fdivs
repz
enter
pop
fbld
add
mov
xor
stos
mov
std
movsl
cltd
into
in
test
xchg
ret
xchg
pop
sbb
push
ret
cld
cmpsb
mov
jg
jnp
cmp
xor
mov
pop
in
mov
fwait
sbb
jo
xchg
add
jecxz
adc
dec
lahf
add
adc
push
mov
subb
sahf
adc
daa
push
sub
sub
xchg
or
pop
push
mov
jl
jmp
addb
and
and
ljmp
cmpl
cld
js
mov
jo
stos
pop
cwtl
ret
inc
dec
stos
lds
aad
scas
pop
jo
bound
inc
test
xchg
pop
push
sub
mov
xor
cmpsb
dec
int
or
jne
ret
pop
out
cli
mov
pop
cmpsb
jmp
pop
lds
mov
pop
out
enter
xchg
subb
cmp
addr16
fcoms
cmp
inc
pop
in
pop
mov
lret
aaa
je
arpl
xchg
imul
xor
mov
sub
das
lret
out
mov
mov
sbb
cmp
je
lock
adc
sub
sbb
xchg
jns
ljmp
lahf
mov
xor
pusha
fnsave
sbb
iret
sbb
or
in
jbe
mov
shll
adc
sahf
data16
mov
cmp
xchg
arpl
sti
pop
inc
fsubrp
mov
add
xor
push
js
sbb
scas
lock
pop
or
iret
xchg
fdivrs
xor
js,pn
insb
push
pop
int3
sub
imul
adc
mov
xlat
imul
lret
push
inc
inc
sbb
adc
lods
adc
repz
mov
fninit
push
popl
rclb
dec
push
xchg
repnz
loope
mov
xor
or
inc
shlb
stos
sarl
leave
movsb
push
lea
notl
xchg
push
jmp
mov
sub
adc
out
je
or
mov
or
mov
nop
lods
fcmovne
and
cwtl
js
jmp
in
pop
repnz
cmp
inc
inc
into
and
push
cmpsb
jb
rcrl
scas
sar
mov
cmc
push
mov
test
pop
pushf
mov
shl
cmp
push
push
xor
fidivrs
jg
out
dec
gs
fs
test
pop
and
and
fdivr
push
movsl
pop
push
dec
adcl
lods
imul
test
add
pop
pusha
push
ret
mov
push
sub
int3
mov
cltd
sub
fdivs
add
loopne
loope
out
loop
inc
clc
push
inc
lret
push
sbb
sub
rclb
sbb
jbe
add
mov
jmp
cmpl
push
lret
lds
push
adc
inc
fdivl
pop
or
cmp
imul
sti
seto
sbb
icebp
inc
enter
jno
pop
fsubrs
in
sbb
mov
lahf
stc
in
rclb
mov
scas
addr16
jge
xor
xor
aad
test
push
push
ret
movsb
inc
lea
lods
push
je
mov
movsl
enter
push
cmc
push
sti
pop
and
mov
std
int
ret
cmpsb
cmp
out
jns
test
pop
inc
loope
mov
sub
cmp
int3
jmp
sub
mov
adc
pop
lea
aaa
xorb
sbb
cltd
mov
cmp
insb
add
sbb
or
imul
out
rcrb
icebp
dec
pop
aam
arpl
jmp
mov
jg
hlt
jb
jo
clc
lcall
push
xor
jae
pusha
cmp
dec
aam
and
inc
adc
cmp
cmp
int
in
pusha
pop
add
in
nop
aaa
mov
sbb
mov
and
mov
or
loope
fdivr
imul
add
xchg
out
cmp
inc
dec
fidivs
cmp
push
jb
cwtl
js
negb
cli
sarl
mov
and
dec
push
adc
jae
mov
fisttps
push
add
les
fdivs
or
fisttpll
arpl
cli
dec
add
es
stos
loop
or
jnp
imul
sahf
lret
and
lcall
adc
mov
js
mov
fdivrl
sbb
mov
xchg
hlt
mov
jnp
mov
xchg
mov
cmp
mov
mov
jne
pop
adc
fdivl
loope
fdivl
jp
out
push
leave
xor
scas
or
subl
pop
js
hlt
int
sahf
jne
cmpsl
cmp
xchg
loope
xchg
ds
fisttpl
xor
jnp
jo
ret
dec
mov
mov
mov
and
repnz
and
or
xor
xor
or
pop
xchg
jae
imul
ret
pop
fwait
xchg
cmpsl
loop
mov
cmp
push
add
xor
mov
aam
pop
out
fwait
mov
sbb
gs
jg,pt
pop
mov
orl
orl
outsl
imul
push
popa
xchg
pop
pop
ljmp
xor
pusha
sub
cmp
mov
jne
push
inc
dec
aaa
dec
inc
pusha
add
and
femms
xlat
rol
sbb
dec
cmc
aaa
dec
mov
mov
fistpl
jb
or
and
and
roll
add
mov
jo
mov
icebp
sbb
arpl
xchg
stos
rep
cmp
roll
int
dec
dec
leave
std
mov
adc
pop
xlat
arpl
fstp
xor
mov
and
movsb
mov
ja
push
xchg
lea
ja
pop
in
mov
lods
jno
push
mov
and
arpl
roll
in
jmp
sti
mov
outsb
stos
xor
fcmovne
ja
in
push
or
popa
push
adc
lods
in
xor
adc
and
cmp
xchg
es
popf
mov
out
push
adc
scas
push
xchg
inc
lea
cmp
inc
mov
fcmovnb
in
mov
test
decl
mov
call
push
xchg
xchg
test
or
jns
shrb
or
icebp
lods
arpl
in
inc
leave
in
rorb
lahf
jbe
cmp
add
xor
xor
cmp
cmp
loopne
imul
int3
loopne
je
dec
shlb
add
adc
repz
mov
cld
shll
pop
icebp
xchg
pushf
add
das
popa
outsl
fistpl
inc
int3
pop
addl
test
lret
push
xor
mov
mov
call
mov
sti
loopne
stc
cmc
add
enter
mov
add
mov
loopne
out
lods
mov
pop
out
out
push
add
jecxz
stos
mov
cmp
sub
test
faddl
inc
inc
dec
sbb
jl
pop
lea
enter
jae
xor
clc
mov
xchg
ds
mov
sub
lods
int
cmp
jmp
and
aam
jl
out
and
ljmp
add
xor
add
jns
mov
pop
jae
and
jp
add
mov
xor
jge
and
repnz
jp
iret
add
dec
dec
sbb
jg
jge
mov
push
enter
sbb
cmp
lret
cmp
xchg
je
mov
outsb
add
outsl
out
jae
push
pop
jno
std
cmp
ja
je
push
or
adc
mov
push
test
or
adc
pop
push
call
loop
sbb
sti
mov
loope
in
mov
pop
insl
or
loopne
pop
adc
push
ja
imul
sbb
stos
out
lods
out
jecxz
mov
mov
pop
fstpt
sbb
mov
mov
nop
push
add
insl
push
call
bound
je
fiaddl
inc
fadd
xchg
xor
xor
int3
mov
mov
push
xchg
xor
fdivrl
mov
xor
repz
mov
xchg
loopne
adc
mov
xchg
pop
insb
xor
sub
iret
and
pop
jle
sub
jb
sbb
adcb
dec
sub
pop
push
repz
imul
or
jle
fs
lret
cmc
cld
mov
lds
ret
enter
bts
mov
sub
ds
xchg
mov
mov
bound
ja
dec
hlt
dec
mov
cli
roll
dec
xor
push
pop
flds
imul
inc
insl
jge
aaa
jae
sub
rclb
cwtl
aam
pushf
adc
mov
adc
aam
inc
ficompl
lds
pop
cld
stos
mov
stos
loop
stos
mov
mov
jb
jne
cmc
push
jnp
mov
jmp
push
imul
mov
inc
fldenv
add
out
pop
jmp
push
cli
push
rolb
cld
xor
jne
push
add
push
test
outsl
outsl
call
add
dec
fstpl
repz
xchg
sbb
mov
and
and
jecxz
fnstcw
insb
jae
mov
out
sahf
jmp
mov
int3
cli
outsb
cwtl
leave
or
add
push
mov
ja
test
scas
cmc
jno
test
sub
inc
repz
adc
sub
lods
push
xchg
test
adc
lcall
push
push
push
pop
dec
push
push
xor
jp
test
dec
dec
out
mov
add
addb
mov
jns
mov
loopne
fcos
adc
insb
test
mov
ja
cmpsl
add
push
cmp
or
dec
cmp
add
repnz
loopne
scas
pop
les
sub
adcb
in
aas
adc
sub
mov
or
jnp
popa
sahf
adcl
cmp
adcb
xor
arpl
mov
rcrb
pop
sub
out
lret
out
rolb
xchg
cmpsl
xchg
lock
mov
add
call
xchg
xor
or
in
mov
add
loopne
xlat
sbb
out
jp
into
adc
lock
sbb
icebp
repnz
sahf
cwtl
sbb
push
lock
testb
lret
cwtl
clc
push
inc
insb
xor
nop
mov
dec
xchg
add
daa
fdivl
lahf
and
jb
in
jae
leave
dec
adc
cmp
xchg
or
mov
stc
lods
pop
std
push
push
fisubrl
sbb
test
adc
lcall
push
cmpsb
iret
mov
shlb
movsb
pop
insl
dec
aas
mov
jb
mov
in
faddl
loope
jae
pop
lret
pop
adc
sahf
mov
and
std
cmp
pop
jg
sub
andl
imul
pop
jb
faddl
sbb
stos
mov
cmpsl
je
sahf
or
daa
push
xchg
adc
and
int3
cmpsl
mov
and
pop
jl
dec
mov
leave
dec
mov
or
push
pushf
push
jle
or
push
pop
test
enter
mov
loop
mov
sub
bound
jg
and
adc
daa
filds
js
test
xorl
mov
mov
dec
jne
sub
fldl
dec
push
cmp
arpl
sbb
jno
mov
sbb
scas
cmpsb
sub
push
push
sbb
push
jecxz
or
popf
push
xor
scas
inc
arpl
mov
stc
mov
in
jl
aaa
adc
mov
adcl
cmpsb
fnstsw
xchg
mov
loope
push
lods
add
dec
sub
push
sbb
fnstsw
addr16
testl
fsubrl
jp
and
xor
push
pop
inc
adc
pop
xor
daa
mov
icebp
xchg
nop
icebp
push
push
dec
iret
std
push
adc
sub
lods
sbb
movsb
adc
imul
xlat
pop
test
cmpsl
inc
dec
aaa
cmp
jge
adc
test
jg
pop
mov
and
inc
adc
es
pusha
in
leave
cwtl
mov
cmp
xchg
dec
movswl
arpl
fs
cmp
and
sbb
fistl
xor
test
stc
cli
inc
lret
or
outsb
movsb
stc
stc
shr
out
mov
lret
in
dec
adc
scas
iret
jecxz
jns
xchg
popf
lret
ljmp
mov
cmp
mov
int3
dec
xchg
fimull
lret
int3
mov
jecxz
push
xchg
pusha
mov
xchg
roll
mov
lods
fabs
xchg
mov
sub
mov
mov
out
imul
fmuls
mov
dec
mov
aad
pop
xor
add
mov
lahf
sbb
adc
add
call
xchg
in
in
into
adc
in
inc
dec
jae
dec
int3
push
pop
or
or
popa
in
mov
mov
push
push
cmp
and
pushf
adcb
pusha
jle
jmp
push
scas
nop
xchg
shll
xor
fbld
daa
mov
test
mov
int
pusha
sub
and
loopne
sbb
adc
cmpsl
std
sbb
lahf
loope
push
out
inc
shlb
cltd
adc
lret
ljmp
jp
jge
fidivl
shrb
mov
popa
pop
ljmp
xor
cmc
dec
adc
test
lea
xchg
jnp
stc
push
mov
mov
jecxz
pop
sarb
xchg
or
dec
cli
mov
shlb
loop
inc
lock
mov
cmpsl
adc
in
imul
je
aaa
mov
mov
fcoms
mov
call
addr16
and
arpl
mov
xchg
nop
ret
push
sbb
sahf
ss
js
in
cmp
repz
jl
std
fimull
xchg
cmp
test
xlat
and
sbb
das
out
and
or
stos
aad
sbb
arpl
sahf
xchg
jge
add
lahf
dec
addb
lret
imul
sahf
sub
mov
fnsave
into
sbb
sbb
into
cwtl
adc
loopne
mov
das
js
dec
call
cltd
and
inc
pop
pop
inc
sub
push
push
jo
sbb
testl
mov
add
lods
xchg
int3
test
hlt
jecxz
dec
shll
xor
call
movsb
lahf
mov
cmp
mov
mov
sti
jb
xchg
dec
psubsb
ljmp
test
movsb
mov
cli
jno
movsl
in
icebp
movsl
mov
mov
je
scas
mov
cmp
fisubrl
jmp
jecxz
sbb
push
cmp
jno
roll
pusha
dec
sub
cwtl
ret
jl
xchg
and
pop
hlt
inc
sub
adc
clc
or
cmpl
sub
les
repnz
pop
inc
xlat
subl
js
mov
jg
pop
mov
scas
xchg
cmc
popl
aaa
repnz
into
xchg
xchg
rorl
jne
cld
ja
pop
adc
shl
out
adc
js
inc
adc
xlat
std
or
daa
pushf
or
pop
sti
out
sub
and
loope
or
cmpb
ret
or
aad
jmp
ret
shl
add
lahf
adc
aaa
xor
sub
or
pushf
cmp
ret
xchg
sbb
or
sbb
inc
in
fsubrs
cmp
cmpsl
or
cmp
cli
in
inc
lret
or
cmpsl
xor
jp
fs
and
inc
cmpsl
mull
cmpsb
pop
repnz
xchg
cmpsb
sbb
ss
xchg
mov
xchg
jmp
push
into
push
pushf
stc
movsb
scas
inc
fdiv
in
add
mov
pop
flds
movsb
fisubrs
or
bound
roll
pop
insl
add
adc
cmp
in
outsb
jl
xchg
int3
dec
sbb
pop
sub
cmc
sbb
mov
in
cli
int
dec
fidivl
push
push
or
rclb
mov
negl
mov
push
testl
or
roll
and
test
sub
loope
jmp
xor
call
xchg
mov
sub
dec
in
lcall
daa
incl
clc
dec
ds
cmp
mov
sarb
push
stos
mov
dec
enter
aaa
mov
push
jecxz
push
orb
push
xchg
fidivrs
outsl
pop
mov
in
mov
sbb
sbb
cmp
in
jp
lret
loop
outsl
fldcw
addr16
pop
jne
int
push
leave
aaa
sbb
enter
add
daa
xchg
jp
mov
aam
pusha
xchg
or
xchg
mov
cld
stos
sbb
andl
cltd
gs
xor
loop
ljmp
push
and
inc
jno
repz
push
pop
and
adc
mov
je
mov
dec
dec
pop
xor
push
mov
mov
or
add
xchg
push
dec
pop
idivb
imul
push
sub
dec
test
mov
add
aas
cltd
imul
cmpsl
scas
test
addr16
mov
roll
rcll
in
lret
xchg
xchg
subb
lods
enter
clc
or
sub
stos
inc
mov
jb
dec
add
pop
fisttps
and
dec
pop
frstor
jb
cli
sbbl
jge
mov
ds
xor
rcrb
loop
xchg
dec
xor
pmovmskb
or
imul
lods
sbb
rcrl
mov
xchg
cmp
stc
shlb
jnp
dec
es
dec
icebp
icebp
sti
fldpi
mov
sub
ret
mov
cld
sti
int3
hlt
jge
fwait
lds
sahf
xchg
in
jp
dec
in
adc
add
push
js
rcrl
dec
sbb
mov
mov
fstpl
icebp
and
fidivs
mov
maskmovq
idivl
lock
aas
inc
cltd
roll
or
mov
mov
jmp
repz
push
xchg
dec
ret
cmp
adc
xchg
aad
cs
mov
gs
mov
test
sub
mov
scas
out
pop
fsubr
fmuls
popf
in
pop
imul
inc
mov
lds
jns
imul
dec
rcrb
push
in
scas
pop
dec
mov
mov
adc
xor
xchg
or
inc
cmp
popf
fstl
mov
ret
push
aaa
xor
jnp
add
xchg
jge
push
jg
out
and
fcompl
and
pop
xor
or
inc
movsl
dec
adc
sub
xchg
int
add
je
and
ljmp
xor
inc
cli
push
push
mov
lahf
fldl
insl
dec
lea
in
jnp
lods
test
stos
jno
jecxz
xchg
stc
gs
loopne
fisttpl
fcmovnb
push
mov
in
cmpsl
inc
dec
xchg
mov
sub
iret
cmp
out
dec
cwtl
cmp
outsl
mov
aam
xchg
adc
pushf
pop
rcr
xor
cmp
push
mov
mov
jne
xchg
lret
jae
or
push
into
aaa
ret
stc
add
bound
cs
lret
test
dec
pop
sbb
xorl
mov
imul
lret
mov
push
roll
adc
or
push
cmp
jmp
mov
dec
int
shlb
pop
jne
mov
insb
repz
lret
cmp
or
pop
bound
push
push
sub
int3
jl
addr16
ja
sbb
arpl
sub
in
add
ss
movsb
inc
cli
mov
inc
insb
fnstenv
outsb
popa
jge
xlat
clc
popa
pop
into
or
xor
dec
cmp
flds
frstor
mov
shrl
mov
pop
cmp
repz
popf
stc
add
xchg
rorl
cwtl
mov
cli
mov
mov
mov
jnp
inc
dec
fistpll
insl
fcmovne
xchg
sbb
mov
xchg
insb
out
int
inc
mov
jo
int
data16
jnp
xchg
mov
jbe
or
lds
loopne
mov
mov
lock
cltd
popa
daa
add
xchg
sub
sub
mov
mov
prefetch
fcomps
movsb
sbb
ret
mov
or
subl
or
fcomip
mov
pop
mov
push
lret
adc
fiadds
imul
loope
mov
std
mov
pop
mov
stos
push
mov
inc
pop
ret
jmp
mov
cmp
enter
push
rcr
pop
sbb
jmp
mov
or
push
add
sub
repz
outsb
mov
add
add
cltd
xchg
push
outsb
test
and
xor
popf
mov
bound
jmp
jmp
push
push
jo
rorb
cmp
sbb
mov
hlt
aam
add
aas
outsb
sbb
dec
mov
mov
mov
mov
scas
test
aam
movsb
les
cltd
push
aaa
mov
orl
xor
push
add
inc
and
out
dec
pop
sbb
adc
sbb
adc
inc
je
mov
gs
mov
inc
xchg
mov
fstpl
sub
popf
shl
lds
frstor
std
aam
nop
lret
test
aam
decl
add
sar
leave
sahf
adc
test
repnz
jnp
pop
cwtl
jnp
mov
xchg
cmp
ss
out
aaa
rclb
sti
and
pop
xchg
xlat
popa
lcall
cli
push
movsb
add
push
adc
ss
test
sbb
popa
lcall
inc
and
inc
pop
pusha
in
jbe
xchg
mov
cmp
loope
insb
dec
out
mov
inc
test
divl
push
sub
mov
push
rolb
push
cmc
subb
cmp
shll
ret
cli
dec
push
xchg
jno
sti
repnz
cwtl
inc
sti
cmpl
fdivr
aas
jp
cmc
mov
push
adc
lds
movsb
lods
cmpsb
jp
bound
cmpsb
inc
nop
out
int
push
outsl
shrb
sub
arpl
mov
mov
pushl
pop
jecxz
test
sbb
lds
mov
or
mov
add
fistpll
jbe
cmp
lahf
adc
ljmp
push
jge
fstps
enter
xor
nop
sti
xor
sbb
out
scas
call
sbb
pop
jmp
mov
ret
test
lret
out
and
dec
or
mov
mov
daa
xor
cmpsb
orb
aad
jmp
sub
test
idivl
pop
neg
adc
ret
push
inc
cmp
scas
out
rcll
add
mov
xchg
movsb
out
pop
cmp
cmp
or
push
add
negb
xchg
jle
fcomps
cmp
test
dec
sti
addb
scas
cmp
dec
pop
fbstp
adc
js
popa
dec
bound
mov
dec
in
or
sub
sub
aaa
and
movsl
ja
and
call
cmp
pop
lods
sbb
or
mov
icebp
popl
sub
sbb
aam
pop
pushf
outsb
jmp
pshufw
jae
xlat
lret
fsubl
jle
dec
dec
lds
clc
fdivrl
xor
add
cmp
lcall
or
sbb
xchg
xchg
push
enter
sub
jo
inc
inc
je
rorb
neg
cmpsl
jle
mov
outsb
pop
mov
push
xor
sbb
pop
xor
ret
sbb
jne
jle
xchg
fsubs
sub
xchg
add
inc
lret
inc
mov
cmp
cmp
enter
and
dec
inc
dec
xchg
scas
add
daa
xchg
mov
mov
jecxz
push
add
pop
rcl
dec
sub
push
rdtsc
out
sub
lret
in
outsb
add
lret
lods
jb
insl
les
jne
pusha
sbb
inc
push
sub
std
ret
adc
imul
mov
push
cmp
jbe
xor
mov
daa
xor
mov
add
andl
jae
jnp
jae
cltd
fildl
imul
sbb
lods
out
xor
xor
in
jmp
inc
mov
jns
imull
add
fcompl
rclb
pop
dec
jbe
popf
push
loopne
cmp
and
out
mov
or
sbb
mov
xchg
add
and
imul
and
int
or
cmp
add
aaa
xchg
ja
sbb
movsb
cmpb
xor
adc
in
shrb
sbb
sbb
negl
sub
adc
inc
inc
hlt
push
cmp
add
filds
xchg
sbb
rclb
add
sub
jle
sbb
clc
bound
mov
xchg
fcomip
mov
sbbb
sbb
fldt
cli
test
fisubl
adc
sbb
pop
mov
shrl
add
hlt
mov
ret
pop
xchg
sbb
jle
ret
mov
test
icebp
and
sbb
xchg
outsl
fwait
mov
mov
lods
xchg
mov
ds
es
push
lahf
fistpl
sahf
mov
cmp
sub
movsb
dec
or
arpl
jp
lods
iret
dec
ss
fucomi
cmp
mov
in
cwtl
pusha
subl
cmp
push
push
in
std
popf
adc
sti
movaps
into
sub
enter
fiadds
jnp
and
cmpsb
divl
sbb
cmp
xor
lret
or
and
and
flds
push
imul
sbb
test
aaa
push
fdivrl
rol
dec
inc
or
mov
ret
das
jecxz
mov
and
inc
add
push
mov
inc
fs
jo
ljmp
decb
int3
out
idiv
xchg
pop
scas
sahf
push
mov
sahf
xor
lahf
test
cwtl
add
mov
jg
dec
fsubrp
test
jmp
aas
add
pop
daa
repz
inc
stos
cmp
add
inc
inc
stos
aad
adc
loop
mov
or
and
shl
popa
insb
xchg
pusha
xor
sti
je
jnp
pop
andl
dec
test
cld
arpl
pop
rorl
out
mov
in
inc
sti
lahf
mov
mov
xor
inc
push
aaa
sbb
xor
icebp
stc
add
shr
mov
sbb
mov
addr16
lcall
popf
inc
enter
out
mov
out
jno
add
lea
and
ja
pop
leave
cmc
xor
add
fidivrs
mov
pop
add
adc
xchg
lcall
xor
adc
scas
popa
icebp
mov
and
fstps
or
sbb
out
cli
xor
fsubrl
xchg
cmp
pusha
pop
icebp
dec
addl
in
pop
jecxz
adc
rorl
adc
xor
push
ss
ja
adc
mov
out
test
leave
outsl
call
inc
lret
iret
push
mov
mov
std
sahf
jns
or
leave
dec
orl
es
push
in
outsl
sub
int3
mov
ret
mov
mov
xchg
inc
lds
adc
aaa
mov
pop
je
addr16
sub
cmp
mov
clc
pushf
adc
cltd
out
rolb
out
stos
mov
xor
lea
mov
push
pop
out
xchg
sub
xchg
lea
fwait
dec
cmp
pop
lahf
pop
outsl
or
sub
ret
xchg
insl
or
mov
sbb
sub
mov
adc
call
pop
push
sub
xchg
and
ss
cmp
sub
add
mov
fwait
dec
aam
push
cmp
jmp
lods
push
imul
sub
nop
clc
daa
add
dec
sti
testl
inc
push
cmpsl
xchg
cltd
movsb
or
xchg
pop
in
loope
leave
mov
fwait
dec
sub
mov
pop
es
pop
fldenv
lods
fmuls
jp
sub
cltd
mov
add
xlat
jmp
mov
ror
std
or
jne
addl
push
in
jne
popa
insb
jbe
pop
negl
les
flds
stos
test
inc
out
je
pop
and
jge
sahf
mov
loopne
lahf
stc
sub
mov
loope
xlat
dec
jp
scas
jp
test
push
cltd
adc
mov
loope
xchg
dec
lret
pop
pushf
stos
adc
testb
cmp
outsb
cld
dec
inc
ljmp
and
imul
dec
pop
adcb
insb
int
and
aaa
ja
es
sbb
lcall
pop
outsb
movsb
cmp
add
lds
fldenv
add
rclb
xchg
lea
iret
xchg
aas
mov
jle
clc
stc
les
inc
js
das
mov
jne
icebp
mov
lcall
jge
mov
mov
jae
repnz
push
call
push
popl
fs
cmpsl
es
xchg
sti
xor
int
mov
ss
rorb
xor
inc
lahf
inc
and
aaa
xor
arpl
fisttpll
pop
and
push
mov
push
sbb
inc
pop
ja
repz
inc
test
lahf
out
movsl
xchg
out
loope
das
xorl
arpl
shr
jge
push
xchg
push
pop
mov
pop
cmp
into
or
dec
mov
fidivrs
push
sub
cmpl
cmpb
add
fsubrp
jae
scas
adc
pop
ret
ret
inc
push
and
ret
inc
mov
dec
pop
test
pop
add
push
ret
sti
cmp
ficompl
xchg
sbb
gs
mov
xor
ret
mov
in
sbb
inc
xor
jl
pop
mov
add
fdivs
mov
sti
or
outsl
adc
push
jmp
lcall
mov
adc
flds
mov
pushf
mov
pop
push
cmp
or
fsubr
js
outsl
jno
adc
inc
data16
xchg
andb
call
push
push
adc
in
mov
push
pop
sbb
outsb
pushf
jge
stos
adcl
addb
das
stos
les
popa
stos
inc
adc
inc
mov
xor
inc
test
aas
dec
adc
inc
sar
mov
push
es
loopne
leave
cmp
fistpll
jns
pop
js
int3
sub
fs
add
lods
inc
and
sub
icebp
push
adc
fcmovnu
psllq
mov
ret
cld
mov
or
pop
mov
cmc
mov
fnsaves
into
dec
jl
sub
xchg
test
popa
gs
js
lock
cmpsl
mov
daa
sub
dec
pushf
mov
push
ret
or
push
cmpsl
mov
adcb
pop
pop
mov
mov
in
mov
sbb
push
cmp
mull
or
xor
fisttpll
push
std
push
push
xlat
add
xor
push
in
ljmp
cltd
loope
nop
dec
jmp
pop
enter
sti
dec
popf
add
into
iret
int
sbb
inc
push
scas
sub
sbb
sub
xchg
in
mov
in
sub
jl
jmp
dec
fs
mov
pop
out
push
lret
inc
bound
pop
in
mov
pop
add
lahf
data16
ret
sub
call
adc
mov
jecxz
or
aad
out
fdivp
xchg
mov
xchg
mov
xor
xorl
xchg
mov
adc
adc
mov
push
insl
dec
movsl
sbb
idivl
cmpl
jmp
xchg
fidivl
mov
repz
cmp
enter
push
movsl
pop
and
push
sbb
ficompl
stos
out
pusha
leave
aam
jle
fs
pushf
dec
lahf
sbb
inc
mov
lea
mov
out
mov
xlat
jo
xor
stc
icebp
ljmp
xchg
push
lea
and
pop
and
insb
jb
dec
add
scas
sub
xchg
sbb
xchg
fcoms
aas
cmpsb
fdivr
lods
xor
sbb
cwtl
mov
add
push
insl
gs
and
pop
loop
push
add
mov
test
xor
add
outsl
or
jmp
inc
and
insl
out
add
cmp
xchg
xor
dec
sbb
xchg
xchg
add
xchg
sbb
fstpl
push
push
fcomps
sub
dec
js
rep
insb
dec
shl
mov
mov
xchg
mov
in
mov
xchg
andb
fists
inc
or
cld
mov
mov
jno
add
test
dec
xchg
sbb
divl
jle
syscall
jne
mov
mov
xchg
sarl
inc
in
jae
dec
lods
mov
pop
dec
clc
jmp
in
and
cmpsb
cmp
jne
xchg
sub
scas
push
mov
mov
mov
in
xchg
mov
fisubrs
js
test
fsubrs
mov
mov
jb
sub
stc
ret
xchg
imul
repz
sbb
and
into
xchg
or
jg
pusha
jmp
adc
mov
xor
jbe
enter
in
rcpps
and
in
pop
xorl
jae
sbb
popa
negb
push
leave
and
or
push
lahf
inc
popa
mov
movsb
fistpll
stos
xchg
out
fwait
xchg
jno
jo
movsl
mov
and
cmp
add
mov
movsl
mov
dec
into
jecxz
gs
adc
xor
mov
mov
fimull
flds
fidivrl
mov
fs
jae
scas
lret
sbb
mov
pop
lock
fnstenv
and
cltd
add
mov
lret
lods
jle
xchg
sub
jp
dec
imul
out
popa
mov
les
xor
cmpsl
pop
jbe
jl
cmpsb
outsb
dec
mov
or
mov
idivb
ja
pop
insl
xor
das
mov
hlt
xor
sub
xlat
lcall
jbe
xchg
push
mov
push
push
scas
pop
orl
sub
xchg
cmp
popa
push
mov
inc
or
mov
cmp
mov
and
jno
cmp
lahf
xor
adc
or
inc
jo
mov
xchg
out
adc
pop
fldt
outsb
adc
dec
icebp
and
test
sbb
shrl
push
ret
mov
pop
sub
and
movb
fcomp
pop
rcll
dec
mov
jp,pt
jno
fcoml
mov
jnp
dec
mov
call
out
cli
mov
mov
mov
js
cmpsl
jno
pushf
in
sar
sub
cmp
push
mov
fdivrs
test
out
xchg
lret
xor
xchg
adc
stos
inc
int
dec
lock
ss
add
cmp
stos
pusha
or
lods
add
jbe
fdivrs
scas
inc
inc
aaa
or
jnp
repz
push
add
inc
movsl
mov
or
enter
cmpsb
sub
mov
lock
xlat
arpl
jb
sub
jge
jle
in
inc
daa
imul
jp
and
xor
jmp
jbe
out
test
push
jns
xchg
fst
push
adc
jno
pop
int3
mov
mov
add
in
and
imul
mov
adc
pop
mov
inc
mov
mov
inc
mov
sub
sub
testb
mov
das
xor
or
out
arpl
sbb
cmp
shlb
or
sbb
mov
or
cmp
je
add
pusha
fdivrl
bound
insl
lds
lcall
cmpsb
pop
add
sbb
aam
or
lock
xchg
mov
pop
inc
xor
hlt
or
arpl
mov
aam
imul
jmp
mov
mov
and
dec
pop
adc
jno
cmp
lock
in
and
clc
mov
pop
pop
inc
movsl
pop
or
inc
insb
aaa
outsb
xchg
xchg
adcl
popa
lods
pop
movsl
xchg
loopne
aad
adc
orl
or
and
add
mov
icebp
dec
and
stc
jb
lods
cld
adc
sbb
sti
leave
icebp
les
sbb
popf
jmp
mov
pop
and
das
divb
dec
jns
inc
or
xor
out
mov
in
pusha
or
jae
xor
xor
xchg
lcall
push
xchg
dec
loopne
loopne
bound
test
imulb
push
dec
in
aas
xchg
cmpsb
pop
cli
mov
cmp
les
dec
push
fs
pop
xor
ljmp
test
insb
lahf
xor
xor
xlat
push
xchg
sar
dec
sti
dec
stos
movsb
rorl
and
mov
rcrb
in
pop
unpcklps
aas
in
push
mov
ds
rcll
hlt
stc
sbb
mov
pop
nop
inc
addr16
in
lods
mov
call
in
inc
and
pop
sahf
mov
das
jb
call
outsb
cmp
push
movsl
pop
loop
sahf
cmp
push
ficoml
mov
int
mov
ja
cmpsb
enter
fdivs
es
test
scas
mov
movl
jecxz
mov
pop
fstl
mov
cwtl
orb
mov
sbb
je
fwait
pop
test
add
lret
and
cmp
sbb
shr
outsl
inc
mov
hlt
fmul
mov
mov
test
add
sbb
push
add
jmp
popfw
ficoms
int
arpl
push
xchg
inc
fdivrs
cli
inc
out
pushf
in
aas
inc
aad
mov
xchg
mov
jmp
popf
loop
mov
or
pop
ja
jb
ss
movsb
je
arpl
fmul
gs
mov
or
testl
addr16
insb
ss
cmp
or
pop
dec
loop
inc
mov
enter
push
dec
repnz
or
add
fidivl
lret
mov
pop
cmp
ret
mov
xor
mov
ret
sbb
and
stos
ret
or
sbb
das
icebp
ret
adc
mov
jmp
data16
ficoms
jmp
sub
jb
fists
mov
xchg
dec
nop
int
std
mov
mov
lds
punpckhbw
in
fwait
std
push
xchg
mov
loopne
and
mov
pusha
jge
sbb
mov
mov
mov
out
jne
inc
and
sahf
mov
in
cmc
dec
loopne
cmc
xchg
jbe
xchg
xor
cwtl
test
scas
xchg
out
fwait
jno
frstor
sbb
mov
pusha
pop
js
test
mov
push
and
mov
movsl
pop
bound
xchg
push
fs
dec
shrb
and
fisubl
testb
add
sarl
adc
arpl
inc
das
sub
pop
adc
xchg
cltd
sti
pop
ret
lcall
jae
mov
lcall
push
rorl
dec
lret
pop
in
sub
mov
sbb
inc
lahf
incl
mov
in
mov
les
outsl
mov
xchg
mov
subl
stos
mov
push
fmuls
and
adc
stc
sub
add
nop
out
mov
lds
cwtl
jg
int
cmp
mov
js
scas
nop
lods
and
fistps
mov
into
bound
push
dec
enter
fdivp
jnp
lea
and
sub
pop
inc
out
jnp
jne
mov
ljmp
dec
push
pusha
js
push
push
das
jg
xor
dec
add
movsl
inc
stc
adc
sbb
cmpl
xchg
scas
les
add
dec
or
ret
xor
mov
fsubrs
or
xor
push
inc
and
inc
xchg
mov
mov
xchg
cmp
int3
xor
addr16
in
je
xchg
mov
jecxz
mov
lret
jg
xor
sbb
ljmp
incb
jmp
je
pop
inc
int
cmp
mov
fwait
lret
arpl
jle
mov
add
push
in
sub
push
movsb
ret
xor
or
fsubs
shrb
mov
aaa
jmp
pop
xchg
push
push
or
scas
pop
mov
jp
psubsw
mov
adc
lret
inc
dec
fmuls
mov
cmpsb
lcall
mov
lret
xor
in
inc
dec
add
cli
push
cli
or
cmp
stos
int3
test
mov
mov
lds
add
xor
pop
pusha
test
jg
mov
fcmove
fsubrs
jnp
mov
mov
mov
add
aas
shll
xor
mov
or
xchg
and
movsl
mov
loop
pop
sub
adc
cmp
cwtl
and
ja
cmpsb
dec
mov
sub
mov
add
sbb
mov
out
adc
xchg
popa
lret
pop
add
inc
je
popaw
lods
sub
jne
mov
cli
inc
lahf
or
jns
push
fcoms
dec
test
mov
push
cmp
std
pop
mov
sbb
sub
out
movsl
or
icebp
xchg
jge
imul
pusha
outsb
clc
mov
mov
sub
push
inc
imul
aad
xor
push
lods
aam
bound
lods
xchg
pop
pop
fmul
loopne
dec
add
cmp
outsb
nop
mov
xchg
adc
imul
and
mov
js
adc
jns
movsl
pop
cmpl
push
sub
adc
dec
lock
inc
pop
addl
adc
sub
xchg
sbb
and
pusha
int3
dec
jns
in
xchg
adcl
mov
ja
jnp
jmp
int3
rcrb
or
cwtl
add
sbbb
fnsave
js
aam
or
mov
pop
xchg
sbb
push
xchg
addr16
sbb
outsl
test
mov
jp
imul
sarb
sub
imul
ret
dec
mov
push
inc
sbb
dec
lret
cmp
fisttps
lods
loop
mov
call
lock
xor
cld
fistpl
mov
ljmp
mov
mov
es
inc
mov
cmp
xor
in
adc
xor
jle
fsts
jge
xchg
les
dec
pop
jbe
pop
lret
hlt
jnp
inc
stos
shlb
or
ja
lret
inc
mov
push
enter
add
xchg
movsl
dec
xor
cmp
fsubl
adc
mov
mov
mov
sti
push
ljmp
cmc
mov
sub
sbbb
aam
mov
hlt
and
jge
jg
lret
xor
sbb
jl
and
stc
adc
jae
jae
sbbl
mov
mov
sub
test
stc
mov
ja
add
inc
and
fcomps
mov
push
fisubrs
dec
xor
fnstenv
sbb
js
pop
pop
imul
dec
mov
loop
jae
or
cwtl
enter
js
bound
lret
xchg
stos
pop
adc
sub
add
jb
pop
cmp
mov
shlb
loope
shrl
mov
dec
sbb
sbbb
scas
xor
or
jns
leave
adc
inc
es
popa
aam
or
xchg
cs
jp
pop
cmpsl
and
push
cli
inc
add
push
aaa
lret
pusha
mov
mov
stos
xchg
insl
adc
jns
out
bsr
pop
je
imul
fucomip
add
fs
add
mov
push
push
mov
sub
add
add
test
push
sbb
xor
aad
iret
dec
nop
xchg
inc
popf
lret
jns
stos
iret
dec
jmp
gs
insb
out
arpl
scas
faddl
imul
pushf
jge
mov
and
mov
sbbb
cmpsb
enter
push
lcall
jmp
cmp
jns
dec
fwait
das
xchg
daa
paddq
adc
jp
inc
pop
sbb
or
sbb
fstps
gs
jle
dec
xchg
mov
gs
aam
mov
mov
push
aam
jno
adc
jp
xor
xor
push
movsl
repz
xlat
inc
mov
jge
fwait
pop
jmp
iretw
inc
pop
jge
popf
xor
jne
aaa
out
dec
mov
ficoms
jmp
cvtps2pi
aaa
xchg
lea
or
lds
movb
in
inc
hlt
ds
pop
cmpsb
dec
inc
inc
cmp
fldl
nop
dec
dec
or
int3
fdivl
mov
ret
mov
sbbl
jno
pop
push
sbb
or
jnp
ror
pop
fldenv
dec
sub
jno
lcall
out
loopne
mov
loope
mov
xchg
xchg
insb
fdivr
push
xorl
mov
hlt
fucomp
in
hlt
xchg
orl
repz
mov
add
push
leave
xchg
pop
cmp
fisttpl
aam
loope
testl
push
enter
nop
icebp
lea
and
inc
jge
cmp
aas
mov
xor
call
mov
and
imul
xchg
fcompl
rorb
mov
xor
inc
xchg
sbbl
jge
sub
mov
jae
add
je
mov
xchg
sbb
xor
jmp
ss
testl
popa
int
fldt
lods
rcll
push
fwait
xchg
mov
iret
mov
insl
stos
sub
xchg
xchg
sub
mov
test
hlt
jmp
int3
sbb
inc
enter
adc
cmp
stc
loope
adc
add
hlt
imul
nop
rolb
aaa
cmpsb
push
cmp
aas
fisttpll
notb
jecxz
jecxz
addr16
xchg
mov
fistl
jp
cmp
in
loop
hlt
mov
into
sub
inc
adc
and
stos
je
inc
jnp
dec
int
cmp
aas
jecxz
insb
push
push
call
ljmp
push
imul
push
xlat
jge
xchg
cmpsl
fistpl
pop
mov
xchg
in
cmp
std
mov
insb
scas
test
outsb
out
mov
insb
sbb
pop
or
and
loope
add
xchg
push
bound
xor
fidivrl
mov
jno
jp
push
push
mov
or
notb
jbe
sub
fs
and
loopne
popa
sti
pop
js
adc
and
add
sbb
or
loope
mov
push
sbb
lcall
or
mov
out
jg
xorl
loopne
daa
test
setne
imul
repnz
push
cli
imul
fcoms
mov
add
or
scas
rorl
mov
lahf
push
mov
loopne
or
ret
cmpsl
or
outsb
mov
fisubrs
dec
push
lds
dec
xchg
sub
xor
std
adc
pop
into
mov
incl
js
pop
push
shlb
fbld
push
cltd
lods
inc
sti
pop
sahf
mov
imul
push
pop
cmp
sub
sub
xchg
pop
inc
mov
mov
ss
sbb
nop
imul
loop
stc
inc
int3
add
cwtl
cmpsb
adc
sbb
pop
stos
lahf
loopne
adc
lcall
cmpsb
shl
xor
xchg
adc
pop
inc
adc
push
sbb
sub
pushf
sub
cs
sbb
mov
push
stos
imul
into
or
xchg
stc
xchg
out
adcl
movb
push
and
cmp
pop
cmp
push
dec
dec
xlat
pusha
into
add
and
mov
mov
and
mov
cld
ds
sbb
and
movsl
js
call
cmc
and
mov
cmpsl
cld
pop
mov
lds
shrl
xchg
mov
jmp
fists
jmp
inc
mov
addr16
jl
stos
xchg
mov
ljmp
pop
sbb
jb
ret
cmovns
pop
cmp
jmp
sub
aas
xor
inc
insb
divl
push
pop
mov
pop
jae
lret
pop
adc
in
les
mov
and
test
fdivrp
sti
lods
dec
ficoms
jae
xchg
sbb
jle
sub
mov
push
dec
mov
dec
add
or
add
popf
insl
mov
cwtl
push
and
fcompl
insb
clc
jbe
ret
adc
jno
or
xchg
lock
inc
xor
fnstenv
pop
out
into
mov
mov
add
fstpt
pop
lea
out
mov
mov
jl
daa
stos
addr16
push
call
mov
in
clc
push
rcl
ljmp
jbe
iret
mov
adc
test
stos
ja
pop
mov
push
cmp
jbe
mov
pop
je
sub
mov
fsubl
mov
icebp
or
cmp
out
lcall
aad
cmp
jbe
jmp
add
xor
out
mov
sahf
lcall
enter
notb
and
xchg
in
pop
mov
xor
icebp
add
lock
int3
mov
jmp
adc
cmp
dec
sub
adc
shrb
into
pop
sbb
je
mov
negb
lods
in
stos
cmp
pushf
and
sub
cmp
xor
sub
mov
outsl
cmp
mov
mov
pop
les
mov
inc
pop
cli
and
mov
outsb
sub
movb
pop
push
ret
int3
mov
fdivl
xchg
insl
pushf
out
and
jns
pop
inc
inc
xor
sub
xchg
pusha
ret
cmp
jae
mov
add
fwait
stos
jns
or
sub
inc
pushf
jmp
lret
es
popf
cs
std
push
je
mov
xchg
icebp
mov
stc
sahf
xchg
xor
sub
mov
or
test
subl
lcall
sbb
andb
shlb
mov
fcomps
dec
mov
mov
add
daa
xor
mov
stos
mov
inc
jne
or
std
aad
call
inc
xlat
bound
repnz
daa
shrl
in
xchg
loop
scas
push
jmp
lcall
dec
inc
and
into
sub
mov
aad
test
cmp
sbb
shlb
sbb
fcmovnbe
cmp
clc
enter
push
ja
dec
shrl
test
out
inc
mov
mov
cmpb
xor
xlat
das
repnz
mov
out
or
in
ret
std
repz
enter
cli
fstl
movsl
and
scas
out
aas
dec
and
sahf
cwtl
mov
arpl
outsl
xchg
aad
test
and
mov
xor
sarb
data16
jg
mov
inc
jne
icebp
cmp
pushf
pop
in
sub
pop
xchg
xor
xchg
jmp
mov
leave
int
test
ds
mov
out
hlt
leave
jecxz
dec
jge
outsl
xchg
or
orl
push
das
cmc
mov
mov
test
xchg
iret
adc
xor
xchg
push
mov
jecxz
lock
or
sub
test
push
or
xchg
xchg
push
pop
loop
mov
loop
stc
repnz
addr16
pop
clc
jecxz
mov
push
dec
fwait
adc
repnz
out
adc
jb
push
enter
pop
in
call
test
popf
ficompl
xor
push
sbbb
xor
scas
adc
sbb
xor
js
dec
mov
jp
mov
mov
jns
inc
mov
insl
jne
fidivrs
jge
adc
es
adc
mov
pop
cmp
loop
das
es
daa
test
xlat
xchg
ss
sbb
test
sbb
rcr
int3
mov
xor
pop
cmp
push
fisubs
sahf
lahf
movsb
inc
sbb
mov
push
lds
loopne
and
mov
addr16
imul
popf
xchg
mull
idivl
inc
sub
das
loop
mov
mov
mov
or
loopne
cmp
loope
xchg
xchg
pop
subb
push
push
and
cmp
mov
rcr
loop
popa
ljmp
push
xor
adc
xor
out
dec
scas
test
out
aad
xchg
mov
sub
sti
pop
fs
dec
mov
xor
dec
lock
mov
loopne
outsl
sbbl
jne
inc
popa
popf
jle
adc
jb
scas
push
mov
lret
aas
movsb
pop
rorb
aaa
push
inc
cwtl
mov
push
add
mov
jg
or
stos
ljmp
test
mov
nop
pushf
xlat
shrb
in
ja
mov
les
mov
jecxz
sahf
xchg
js
xchg
stc
push
mov
out
mov
out
arpl
insl
cs
iret
enter
scas
clc
imul
mov
or
xchg
jmp
out
nop
add
mov
into
cld
xorb
rcl
push
mov
add
sbb
sti
std
jmp
fwait
out
shl
ds
call
leave
pop
push
add
sub
pop
lea
pushf
xor
les
mov
push
dec
out
cmp
fcmovnb
cmp
mov
xchg
sti
outsl
ret
movsl
jo
aad
sbb
mov
dec
and
dec
dec
cmpsb
lcall
add
stos
in
push
push
inc
imul
xchg
or
xor
jno
push
and
or
in
sbb
push
mov
push
jg
cmp
push
outsl
ja
sarl
std
in
push
and
mov
test
test
mov
cwtl
daa
bndstx
lahf
ret
mov
jo
stc
sbb
das
testl
addl
mov
sarb
repnz
mov
sub
ja
jo
cmpsl
xchg
mov
fldt
xor
mov
dec
pop
test
loope
jbe
jns
imulb
sbb
fildl
or
mov
scas
scas
inc
push
lcall
sbb
or
scas
int3
push
cmp
push
or
sub
sub
sub
lods
lcall
inc
mov
jne
push
pop
aaa
cld
xor
mov
pop
push
cli
adc
mov
dec
inc
mov
push
jmp
pop
push
bnd
fcomps
lret
lock
mov
cmc
nop
pop
es
cltd
or
xor
push
cmp
lods
repz
out
or
int
sbb
cmc
pop
adc
fs
inc
subl
and
lcall
jl
rcrb
inc
roll
mov
adc
into
data16
cs
mov
std
push
mov
push
das
adc
call
lahf
or
cmpsl
add
xchg
loope
imul
mov
scas
insb
cmpsl
scas
mov
pusha
lahf
insl
mov
jmp
jno
fcmove
and
mov
and
mov
rolb
xchg
sbb
shlb
mov
mov
push
mov
jl
dec
les
jl
and
xlat
mov
add
pop
pop
adc
fsts
pop
sbb
wrmsr
sbb
in
jge
ret
add
cli
xor
sbb
fmul
cmpsb
fidivs
inc
mov
xor
cmp
and
popa
ss
lahf
out
jb
jo
or
into
mov
andl
pop
pop
ret
out
add
cmp
out
stc
shlb
jmp
popf
add
lcall
mov
out
movsb
sub
cmpsb
pop
jecxz
and
xor
adc
arpl
enter
outsb
sete
pop
fstpt
int
sub
ja
addr16
sarl
sbb
cmp
movsl
push
mov
test
sbb
mov
push
imul
sub
cli
or
mov
leave
inc
cld
cmp
insl
sub
mov
adc
xor
fnstenv
ljmp
nop
sbb
and
mov
loopne
and
arpl
xor
je
popl
jno
add
inc
test
and
adc
sub
pop
mov
jecxz
sbb
fmul
ret
sbb
iret
and
imul
mov
fs
jae
mov
movsl
cmp
adc
test
lret
rcrl
call
popf
cs
push
add
push
jmp
ljmp
iret
xchg
daa
push
jp
xor
jnp
repz
test
cli
inc
sar
xor
subl
push
fcoml
lds
cld
roll
popa
or
fwait
mov
mov
or
lret
mov
push
and
and
andb
sub
dec
push
xorl
loope
add
or
call
fbld
push
dec
push
addr16
scas
fbld
mov
add
jecxz
rolb
arpl
stc
divb
xor
out
and
aaa
ret
cwtl
jbe
daa
mov
or
test
dec
push
dec
pop
notl
insl
pop
mov
stos
sbb
scas
aas
sbb
xchg
mov
mov
dec
and
loopne
push
and
mov
frstor
mov
pop
add
movsb
out
mov
pop
pop
cmp
push
subb
andl
out
test
add
xchg
imul
iret
pop
orl
xchg
stc
sahf
jo
and
jle
enter
movsl
mov
lock
lret
adc
mov
fadd
cli
pop
mov
mov
or
aad
jle
aam
repz
in
rcl
aad
mov
pushf
out
popf
sub
jns
lods
ret
pop
jp
out
rol
dec
les
mov
push
aad
or
sbb
pop
and
sti
cmp
sub
xlat
push
aaa
repnz
lret
aad
test
clc
cmpsb
xchg
xlat
push
fsubrl
das
repnz
adc
mov
adc
cmp
cmpl
cwtl
push
push
push
cmp
jp
ds
addb
xchg
arpl
sbb
push
inc
xchg
mov
addb
inc
xor
and
int3
mov
enter
pop
add
data16
and
xchg
add
int3
dec
mov
dec
js
popf
cmp
jmp
loopne
pop
cld
mov
jno
mov
lods
mov
or
jnp
int
lcall
arpl
adc
out
sbb
inc
adc
aaa
stos
mov
or
lcall
ficoms
movsb
mov
dec
call
pop
dec
sbb
jns
cmp
and
ficoml
add
cli
xor
lods
sarl
xor
sbb
mov
push
pop
mov
mov
imul
lea
cmpsb
pop
testb
addr16
lock
lret
pop
xchg
lahf
loope
movsb
sub
and
clc
cmpsl
mov
jno
movsb
cmpsl
xchg
aaa
mov
imul
pop
jmp
test
push
rolb
mov
mov
std
inc
outsb
repnz
jmp
xor
data16
adc
bound
and
mov
mov
idivb
push
xor
sahf
sbb
mov
hlt
inc
xchg
subb
daa
insb
stc
xor
ss
fcompl
add
inc
shlb
decb
mov
adc
dec
ret
or
int3
clc
in
or
xchg
lret
xor
lcall
jmp
sub
das
mov
nop
movsl
rcr
add
ds
mov
mov
in
add
dec
cld
aad
lods
loope
fistpl
dec
popa
out
cwtl
insb
dec
imul
jno
inc
pusha
divl
inc
push
mov
rclb
test
lea
scas
js
sub
jle
jnp
dec
cwtl
xor
mov
adc
fldt
hlt
mov
loope
add
xor
mov
pusha
nop
pop
sbb
xchg
stos
adc
lret
sarb
push
push
xchg
loopne
enter
mov
dec
mov
ja
out
test
sbb
mov
xor
test
inc
add
mov
rcl
mov
xchg
push
adc
add
add
sbb
scas
add
push
xor
xchg
inc
repnz
sbb
and
inc
iret
insl
out
adc
loope
mov
cmp
enter
adcb
lods
ss
cltd
add
xchg
stos
cltd
add
iret
mov
dec
dec
mov
sub
mov
ja
pop
dec
mov
sbb
nop
xor
addr16
fiadds
push
scas
jecxz
add
fstl
sbb
push
andl
or
stos
cli
cmc
in
mov
jecxz
stos
mov
push
mov
cltd
int3
xor
popa
sti
adc
mov
or
add
inc
xor
xor
push
push
dec
movsb
mov
test
xchg
lock
jnp
add
fldcw
out
mov
jp
lods
or
jp
xchg
test
and
int
xor
je
fnstenv
lods
clc
lea
stos
inc
push
cwtl
xchg
shlb
mov
mov
mov
stos
adc
xchg
leave
out
cmp
scas
xor
mov
data16
lods
out
ret
les
shlb
xchg
outsl
in
or
jns
test
sti
xchg
cld
outsl
inc
fmulp
hlt
nop
mov
out
popl
push
xchg
mov
xchg
lcall
dec
hlt
test
ljmp
mov
int
fs
push
movsb
ss
das
or
subl
scas
cmp
loop
stos
xor
inc
out
gs
pop
inc
push
cmc
test
sub
pop
mov
nop
std
jo
xor
pop
dec
sbb
jecxz
icebp
add
shll
repz
rcll
mov
scas
enter
mov
int
ja
out
add
inc
lds
add
adc
aad
or
inc
test
fwait
jp
cli
mov
mov
cmpl
pushf
imul
sbb
incb
mov
cwtl
inc
dec
test
push
popf
mov
cs
sahf
jne
test
int
dec
mov
cltd
pop
mov
imul
fldenv
inc
mov
and
pop
push
loopne
insl
adc
xor
fistl
pop
sub
mov
mov
mov
inc
imul
lret
cvttps2pi
movsb
clc
daa
int3
push
mov
add
out
ret
pushf
das
adc
stos
fs
loop
xchg
and
arpl
and
stos
call
mov
mov
call
add
adc
adc
sub
and
cmp
adcl
mov
pop
imul
jl
adc
pop
imul
or
push
jge
je
ret
push
push
push
xor
jmp
sub
lahf
mov
mov
outsb
je
xchg
pop
lret
or
sbb
mov
cmp
pop
insb
sub
leave
hlt
cmc
adcb
stc
add
push
push
dec
xor
adc
mov
dec
push
int
std
jmp
pop
mov
movd
push
mov
cmc
jg
adcl
adcb
leave
sub
movsb
daa
mov
xchg
adc
aaa
dec
ficomps
incl
jo
jae
mov
out
and
add
aas
daa
pop
vandps
ret
cmpsb
aas
adc
out
sti
aaa
addr16
shrl
pop
aas
or
lea
mov
jmp
cmpsl
fdivrs
jmp
cltd
jmp
xchg
std
sbb
sbb
push
inc
movsb
stc
xchg
push
iret
inc
pop
icebp
or
addb
es
push
push
and
or
lret
and
pop
dec
in
ljmp
sbb
mov
or
xchg
mov
sub
dec
and
mov
and
jae
shr
ja
push
incl
adc
clc
das
cld
push
jns
roll
xor
popa
cld
imul
push
cld
jle
mov
or
addr16
in
inc
mov
subl
inc
sti
dec
ret
pop
outsl
push
add
lea
inc
push
gs
imul
dec
cmp
loope
or
jbe
arpl
push
adc
mov
dec
or
sub
test
stc
or
and
cld
jmp
andl
xchg
cmpsb
test
add
xor
cs
or
lret
test
mov
or
jp
cmp
out
pop
das
lea
jo
or
sbb
mov
jbe
push
ret
dec
cmp
fidivrs
fwait
arpl
jae
andl
lods
and
lods
js
adc
inc
push
scas
adc
stos
add
ret
out
mov
pop
or
outsb
arpl
je
inc
ret
push
imul
cld
or
stc
lret
int3
and
jg
mov
cmp
clc
divl
or
enter
cmpsl
inc
mov
enter
inc
mov
push
out
push
insl
sbb
add
jo
dec
notl
fldt
scas
cltd
and
push
add
mov
cwtl
xchg
imul
out
lea
xchg
adc
ja
mov
call
xchg
dec
repnz
das
jge
and
popa
inc
jne
das
mov
loope
xchg
loopne
sub
lahf
insl
sub
xor
insb
fucomip
enter
adc
xor
ja
adcl
cmc
loope
sbb
daa
inc
in
xor
mov
cmpsb
jbe
loop
rcll
jg
dec
pop
inc
sub
add
imul
mov
in
int
dec
pop
mov
scas
shrl
cli
pop
mov
sti
jmp
dec
pop
out
loop
out
push
insl
adc
leave
lret
xchg
xchg
imul
xlat
pop
push
lret
popf
adc
out
push
sub
pop
fistl
mov
out
sarl
stos
adc
jp
adc
pop
mov
add
fldt
dec
mov
add
cmp
shll
icebp
lea
and
jg
cmpl
dec
adc
sahf
mov
sub
and
loop
sbb
mov
popf
lock
aam
sub
aad
pop
pop
add
repnz
or
int3
push
cmc
add
pop
loop
test
cli
outsl
xchg
cmpsb
rcrl
shll
sahf
xor
dec
mov
inc
das
sub
dec
mov
popa
daa
pop
rclb
rorl
icebp
cmp
pop
and
movsl
pop
ret
jb
in
xor
sub
outsl
mov
pushf
xor
pop
xchg
in
pop
cmpsb
sub
sbb
out
in
lcall
xchg
pushf
xor
insb
pop
fisubrs
sub
cs
pop
arpl
mov
sub
adc
ss
and
fs
cli
sbb
jnp
js
iret
add
js
mov
test
sbb
adc
fwait
test
or
or
loop
jbe
and
ret
pop
lea
xchg
push
mov
jbe
testb
imul
addr16
or
sbb
mov
xchg
mov
outsl
orl
sbb
and
test
adc
pop
sahf
xor
popa
mov
mov
pop
in
jb
sub
insb
insl
mov
roll
ret
hlt
daa
pop
sub
xchg
aad
push
mov
vpshufhw
mov
inc
jmp
mov
mov
nop
inc
sbb
enter
pop
mov
add
cwtl
push
inc
adc
test
jb
test
adc
pusha
int
add
and
jne
cwtl
lock
les
rol
sbb
pop
iret
sub
jle
or
pop
sarb
sub
orl
es
cmp
mov
loope
mov
add
outsb
sbbl
data16
int
push
mov
sub
mov
mov
std
jecxz
repz
mov
cmp
adc
clc
mov
fadd
inc
fldt
ficompl
add
dec
sbb
mov
ret
fs
outsl
fldenv
pop
dec
es
movsl
aas
icebp
iret
popf
lock
daa
cmp
or
xchg
stc
sbb
jg
sbb
and
pushf
iret
pop
xor
mov
cmp
cmc
scas
push
insl
mov
or
mov
xor
mov
mov
or
pop
pop
filds
in
mov
xor
clc
adc
mov
lock
push
jno
xchg
icebp
adc
sub
dec
xor
xchg
scas
outsb
xchg
xor
enter
aam
mov
ds
add
outsb
cmc
out
lock
jl
nop
pop
movsb
pop
dec
push
movsb
and
fdivrl
sbb
sub
jl
or
and
std
js
add
fs
test
sbb
outsb
sub
mov
sbb
mov
xor
pop
mov
shl
cmp
ffreep
in
lcall
jbe
pop
jne
dec
xchg
jae
iret
xchg
in
cmpsb
cmp
or
lea
adc
insb
and
outsl
or
mov
lcall
sub
mov
mov
push
push
lock
mov
out
and
jl
or
fucomi
pop
ret
mov
ret
lea
shrl
pop
std
test
loopne
ljmp
loope
imul
data16
pop
adc
mov
mov
pop
mov
or
sub
imull
cmp
ljmp
lret
ret
sub
sub
hlt
sbb
aas
sahf
mov
mov
cmp
rorl
mov
les
aad
add
jo
stc
xlat
dec
pop
cli
stos
adc
push
imul
cmp
pushf
rorl
in
cld
xor
daa
jmp
cmc
push
jnp,pt
lahf
dec
pop
lea
push
movsb
es
pusha
repz
inc
enter
mov
dec
lcall
dec
lock
inc
sub
cli
push
test
nop
mov
sub
bound
test
pushf
add
mov
cs
insl
movsl
andl
pop
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
aad
rclb
in
mov
sbb
lds
xor
or
mov
jmp
addl
cmp
cmp
mov
test
sbb
stos
icebp
jbe
push
cmp
mov
int3
cmp
jg
iret
les
xor
test
jl
mov
sub
pop
ror
pop
pop
xor
add
subb
adcl
hlt
mov
pop
popf
jle
xchg
repnz
and
in
push
push
adc
stos
daa
in
sbb
into
bound
movsb
cwtl
mov
jmp
or
push
loop
mov
mov
jns
jg
sbb
jmp
mov
mov
stc
or
int3
inc
sub
cmp
pop
inc
push
push
in
xchg
add
pop
ret
test
les
iret
mov
adc
adc
cld
and
fnstsw
or
push
lods
mov
imul
nop
jmp
imul
call
cmp
xchg
les
xchg
mov
add
pop
or
mov
mov
cltd
sar
jnp
mov
iret
aaa
ljmp
xor
sbb
push
jae
aam
subb
js
push
int3
mov
bound
push
mov
sahf
pop
outsb
ss
add
add
add
xchg
add
inc
xchg
push
popa
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
