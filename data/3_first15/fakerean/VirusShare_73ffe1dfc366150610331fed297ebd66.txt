and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
and
and
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
adc
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
and
inc
add
lea
push
mov
mov
push
and
sarl
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
adc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
dec
inc
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
adc
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
dec
inc
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
and
push
adc
add
movl
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
repnz
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
sarb
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
inc
cmp
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
pushf
cmp
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
xor
inc
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
push
sbb
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
adc
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
fsubs
fwait
xlat
cmp
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
add
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
inc
add
or
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
inc
add
les
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
sbb
inc
add
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
mov
andl
andl
lea
push
push
push
call
add
add
sub
test
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
add
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
cmp
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
call
mov
mov
add
hlt
add
cli
std
pop
jns
add
mov
add
lcall
mov
arpl
insb
cmpsl
add
add
test
ret
popa
stos
add
add
add
push
push
push
call
push
add
add
add
add
xchg
pop
jbe
mov
cmpsb
add
jae
add
jo
add
add
mov
add
add
or
inc
in
push
push
push
lea
push
call
insb
cwtl
lcall
xlat
push
cli
mov
loope
mov
add
mov
push
add
push
add
add
add
out
add
add
mov
add
add
push
test
clc
mov
add
add
rol
push
add
rolb
mov
add
in
add
add
mov
incb
pusha
adc
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
mov
mov
add
add
js
add
add
pop
fwait
cwtl
add
mov
hlt
push
test
loop
cmpsb
mov
mov
ja
add
jne
add
xchg
push
xchg
ror
jmp
add
pop
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
jbe
adcl
add
roll
add
fisttpll
mov
lcall
int3
lods
negl
jge
sti
xchg
mov
mov
add
ljmp
xchg
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
mov
imul
sti
lcall
jbe
mov
test
shlb
lcall
add
add
in
ficomps
insb
add
mov
add
add
cmpsl
xchg
mov
lea
pop
call
call
push
push
push
push
push
call
pushf
call
add
bound
jl
out
popf
pop
stos
push
aad
in
sti
add
std
push
xchg
xchg
shl
in
iret
add
add
add
add
add
pop
add
add
cli
add
pop
add
add
add
add
shlb
xchg
mov
mov
push
fdiv
add
movl
mov
mov
lea
pop
push
push
push
push
push
call
push
mov
push
add
shl
jne
outsl
jge
cmp
add
sarl
push
pusha
add
rolb
out
push
popa
addr16
mov
fwait
pop
add
mov
add
int
xchg
push
add
mov
lea
pop
call
push
lea
push
push
push
push
lea
push
push
push
push
push
call
cld
fwait
insb
add
ljmp
mov
add
add
fwait
add
call
test
pop
mov
mov
add
into
jge
add
add
pop
add
add
cmc
imul
mov
add
push
lods
into
add
add
add
lea
pop
jmp
ret
push
lea
push
push
push
push
lea
push
push
call
frstor
add
addl
add
push
mov
sbbb
add
cli
xchg
add
addb
mov
pop
xchg
cld
aad
jmp
fcompl
jle
jle
popf
push
add
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
add
pop
add
add
mov
push
add
add
mov
add
add
pop
add
add
insb
pusha
push
mov
add
test
add
pop
add
clc
add
sahf
cltd
movsl
jle
mov
in
lret
loopne
icebp
popa
js
mov
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
fwait
add
pop
mov
imull
jp
jo
cwtl
add
add
push
add
shlb
add
ficomps
add
icebp
filds
mov
add
in
add
pop
add
add
push
push
push
lea
push
push
push
call
scas
add
xchg
add
sar
cltd
add
movsb
push
xchg
fnstcw
mov
add
jge
xchg
mov
popl
add
aam
add
test
jae
les
pushf
mov
lea
pop
add
mov
push
push
push
push
call
out
and
jbe
sahf
add
add
add
add
xchg
jp
add
ret
jecxz
clc
mov
roll
xchg
add
push
add
leave
mov
ljmp
mov
lea
pop
xor
push
lea
push
call
in
add
add
into
add
shll
add
hlt
add
pop
shl
add
add
jnp
fs
add
add
mov
push
mov
push
add
out
popf
pop
mov
jb
arpl
push
les
mov
filds
test
push
pusha
aam
add
int3
lea
pop
add
push
push
ror
push
sub
add
rol
add
sub
not
rol
xor
pop
lea
xor
not
pop
push
push
lea
push
push
push
lea
push
push
call
lock
call
out
add
mov
add
lock
push
add
mov
add
pop
mov
gs
shlb
mov
stos
add
fs
insb
push
add
push
xlat
jecxz
jge
jbe
mov
pop
loope
add
add
scas
call
test
add
add
fmull
jne
push
push
push
push
lea
push
push
push
push
call
leave
int
add
mov
jge
jb
out
shll
push
push
add
add
fs
push
outsl
add
add
add
lods
xchg
addl
addr16
add
add
fiaddl
add
add
add
add
addr16
add
add
mov
add
add
lahf
xchg
mov
lea
pop
call
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
add
stos
add
jo
addr16
test
push
imul
add
add
add
ljmp
mov
xchg
fcmovbe
fadds
test
jecxz
pop
int
jp
mov
add
mov
lea
pop
mov
push
push
call
jl
mov
push
hlt
subb
add
int
add
movl
addb
mov
add
int
out
gs
cmpsl
movsl
add
push
add
rolb
jp
pop
add
add
int3
lea
pop
movl
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
pop
mov
add
imul
add
test
add
scas
mov
fists
cltd
scas
mov
mov
lods
test
add
mov
outsl
add
add
mov
lea
pop
lea
push
push
lea
push
lea
push
push
push
push
call
add
add
add
loop
testl
add
mov
lahf
add
aam
fadds
add
add
loopne
ja
call
pop
lds
mov
cld
lea
pop
pushl
push
push
call
addr16
lea
add
add
imul
lods
pusha
add
add
add
mov
leave
add
mov
add
add
fs
cld
mov
jl
lret
jle
fbstp
add
lods
mov
lea
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
test
add
addb
mov
imul
add
in
xor
add
mov
lods
sarl
add
test
sub
scas
sub
add
push
das
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
incb
lds
add
repnz
add
add
out
mov
insb
addr16
add
mov
add
pushf
pop
fisubs
lret
mov
pusha
ja
fidivs
subb
imul
fwait
mov
mov
add
jne
lret
add
pusha
mov
lea
pop
pushl
pushl
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
push
jmp
jnp
mov
add
push
int3
mov
add
jb
jns
add
add
mov
addl
add
add
add
cli
add
add
add
mov
mov
add
add
mov
popl
gs
add
mov
add
add
les
pop
call
push
push
lea
shl
shr
push
or
not
add
not
sub
xor
sub
xor
add
pop
inc
pop
push
push
push
lea
push
push
lea
push
lea
push
call
mov
pop
mov
test
push
out
jo
cmpl
aad
call
jecxz
xchg
cmpsb
add
repnz
nop
add
jb
js
imul
fucomi
ffreep
add
add
test
rolb
add
addl
add
add
lods
mov
fmull
jne
push
push
push
call
add
add
out
insb
add
xlat
imull
cltd
mov
les
add
add
test
fldl
add
push
outsl
negl
add
sub
mov
add
fs
mov
mov
test
lea
mov
aam
bound
call
push
push
push
lea
push
push
call
outsl
add
add
add
mov
xchg
mov
in
jb
add
push
add
int
add
add
add
mov
add
sub
add
add
cmpsb
pop
pop
loop
faddl
je
add
add
jmp
js
add
lds
sti
add
cltd
push
call
mov
lods
test
xchg
rolb
push
mov
lea
pop
push
push
push
inc
rol
shr
not
push
and
add
xor
not
sub
lea
sub
sub
add
pop
rol
sub
pop
push
push
lea
push
push
push
call
ljmp
lods
push
in
js
ja
lret
add
add
jnp
test
add
cmpsb
add
movsb
adcb
add
js
add
ffreep
addr16
xchg
mov
add
pushf
add
lods
mov
out
iret
add
fs
sahf
add
add
jns
gs
pop
enter
insb
add
add
scas
movsl
add
jecxz
les
push
push
push
push
push
push
push
lea
push
call
gs
ret
test
jle
jb
mov
call
add
movsb
mov
stc
cmpsl
nop
mov
add
test
add
xlat
add
add
iret
cld
jge
add
ljmp
add
add
pop
les
int
pop
add
add
pusha
add
pop
add
flds
add
mov
add
add
orb
call
push
push
push
call
mov
add
add
add
add
cltd
add
add
add
int3
test
mov
ljmp
add
add
scas
cwtl
add
add
add
lea
pop
push
scas
add
lods
add
push
add
add
mov
jns
loope
popf
jp
xchg
add
ljmp
arpl
push
sti
add
xchg
jb
mov
lea
pop
mov
push
push
push
lea
push
call
jmp
xchg
xchg
roll
add
xchg
stos
into
add
add
lcall
add
push
add
add
loope
popf
addb
push
add
fstl
jl
add
repnz
stos
add
mov
lea
pop
push
push
push
push
lea
push
call
test
pop
xchg
loopew
cli
add
add
mov
add
mov
add
mov
add
int3
lcall
int3
add
jle
add
sti
repnz
arpl
in
add
mov
lea
pop
mov
add
push
lea
push
push
push
push
push
lea
push
push
push
call
xchg
add
aad
imul
fisubs
push
rolb
mov
push
xchg
pop
add
in
xchg
jge
fucom
cmpsb
cmc
add
add
lods
add
add
add
add
mov
mov
push
insb
scas
scas
pop
add
test
add
cmc
jmp
cld
mov
cmpsb
std
out
add
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
pop
pop
movl
jmp
xchg
call
add
clc
add
add
add
push
mov
jb
scas
add
cld
lea
pop
add
push
lea
push
push
push
push
push
push
lea
push
push
push
call
addb
addl
cmp
add
add
pop
sarl
add
fiaddl
out
jmp
int
add
xorl
add
add
add
scas
out
add
add
fs
xchg
nop
add
jnp
cmpsl
fdivp
clc
xchg
add
popf
push
add
add
test
mov
cld
lea
pop
mov
xor
push
push
call
sahf
in
mov
add
pop
add
iret
add
pop
clc
iret
mov
pusha
add
shl
jnp
add
add
ljmp
add
les
fisubs
push
mov
mov
lea
pop
add
push
push
push
lea
push
push
call
add
pushf
add
push
add
add
add
add
mov
add
add
add
rolb
add
add
add
test
add
out
mov
push
add
add
mov
lea
pop
push
push
lea
push
push
call
jne
stos
push
lea
out
push
bound
mov
add
add
add
mov
add
xchg
cltd
add
mov
xchg
stc
add
add
fdivl
sahf
add
add
movsb
movsb
add
aam
bound
mov
push
push
lea
push
push
push
push
call
mov
add
mov
add
iret
out
pop
andb
subb
les
call
stos
roll
add
fadds
add
add
into
add
push
enter
add
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
lea
scas
add
add
nop
push
add
add
add
lea
add
mov
add
add
addl
movsb
sarl
add
lods
add
test
js
add
xchg
test
add
add
pop
add
push
push
push
push
push
push
push
call
int3
add
mov
scas
add
add
addb
iret
add
add
fcmovb
enter
add
int
mov
xchg
hlt
adcl
fisubrs
add
push
shll
test
add
jecxz
jge
mov
add
xchg
pop
clc
add
mov
lea
pop
add
push
push
push
push
lea
push
push
push
call
fistps
add
push
mov
leave
pop
add
mov
addb
arpl
int
pop
add
js
pop
fnstenv
jp
into
add
stos
add
xlat
add
pop
add
lahf
mov
mov
add
push
add
cwtl
mov
fs
addb
int3
add
clc
add
add
jnp
mov
lea
pop
pop
push
push
push
lea
push
lea
push
call
int
rclb
ljmp
scas
add
add
jl
subb
xchg
cmpsb
add
movsl
add
int3
add
xchg
add
mov
xchg
test
lret
cli
mov
repnz
add
movsl
add
add
add
mov
lea
pop
mov
xor
push
push
push
push
push
push
push
lea
push
push
push
call
pop
add
fsubrl
stos
int
jo
jne
add
ljmp
jge
fiadds
push
add
add
add
add
lds
add
add
add
add
js
shll
arpl
add
add
add
add
js
data16
add
add
fcmovu
aam
fmull
push
push
call
movl
ret
pop
push
mov
mov
add
fildl
add
ja
add
add
jnp
add
jmp
add
out
lea
add
add
add
push
add
mov
add
or
inc
or
imul
fbstp
push
lea
push
lea
push
push
push
push
call
push
fiadds
add
jmp
add
mov
jb
cld
push
fs
pop
lea
fimuls
push
add
add
add
ljmp
mov
iret
push
jle
jae
add
mov
lock
cld
jae
int3
add
add
lret
add
lcall
mov
lea
pop
sub
push
push
push
lea
push
lea
push
push
call
add
add
test
add
mov
add
add
rcll
lcall
add
add
mov
in
test
add
out
insb
hlt
pop
add
mov
push
add
add
in
mov
lea
pop
pop
rep
push
push
lea
push
push
push
push
lea
push
push
push
call
xchg
add
jnp
add
add
add
push
lcall
int3
jle
int3
add
add
xchg
insb
add
mov
imul
loopne
movsl
add
outsl
add
lcall
fs
arpl
push
addr16
add
jmp
movsl
std
add
add
add
add
add
int3
add
test
mov
hlt
lea
pop
pop
push
xor
lea
rol
pop
mov
push
push
push
push
push
call
add
add
add
add
jmp
push
add
push
bound
std
lretw
sti
stos
movsl
add
add
mov
add
add
fmull
pop
in
rol
sub
pop
add
add
push
push
lea
push
push
push
push
push
push
call
mov
out
bound
add
pusha
add
add
stos
add
stc
add
add
je
mov
shl
test
arpl
mov
cli
add
stc
add
js
add
out
add
mov
int
add
mov
sahf
add
add
add
and
inc
and
imul
jmp
push
lea
push
push
push
lea
push
lea
push
call
add
add
gs
jp
xchg
faddl
je
mov
add
add
add
add
popf
add
in
aad
lret
iret
add
add
mov
adcl
add
roll
loopne
add
add
scas
jnp
add
cmpb
stos
add
into
add
xchg
in
lds
xlat
add
mov
lea
pop
mov
xor
push
lea
push
lea
push
push
call
shlb
add
data16
rol
out
mov
add
roll
popa
mov
xchg
add
add
cmpsl
add
add
add
cld
add
in
add
adc
dec
sub
xor
push
push
lea
push
lea
push
push
push
push
call
outsl
int
int
mov
test
add
add
rorb
add
push
add
lahf
add
add
pusha
out
popf
test
add
lahf
mov
add
cli
add
loop
lcall
push
add
cmpsb
add
jns
lahf
fs
mov
lea
pop
xor
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
arpl
enter
add
add
addb
add
add
xchg
clc
movb
add
push
add
add
in
enter
cmpsb
add
filds
test
add
add
lods
iret
or
mov
add
incb
repnz
add
jnp
faddl
add
lcall
sbb
add
push
lea
push
push
push
call
ja
ljmp
add
add
mov
popa
add
mov
add
incb
mov
fiadds
add
in
add
add
add
filds
pop
xchg
push
add
mov
lea
pop
add
push
xor
xor
not
add
pop
add
push
push
push
push
call
xchg
popf
add
jnp
loop
scas
push
add
add
add
add
add
jle
imul
scas
push
add
orb
lcall
pop
test
mov
add
leave
pop
mull
add
mov
add
mov
jecxz
fildll
xchg
add
mov
lea
pop
mov
push
push
xor
xor
push
sub
add
sub
rol
sub
pop
inc
ror
ror
pop
push
not
pop
pushl
push
push
push
push
lea
push
push
lea
push
call
add
jge
out
fdecstp
sti
add
add
add
add
stos
scas
mov
scas
test
add
cltd
add
add
add
cltd
insb
add
pop
mov
mov
add
pop
call
push
lea
push
push
lea
push
call
test
add
mov
fisubrs
pop
add
mov
mov
add
add
add
test
je
xchg
xchg
push
add
add
add
loopne
loope
in
ret
push
push
ljmp
lods
fldt
add
stos
int3
add
jge
push
jmp
add
pop
push
push
push
shl
push
xor
add
shr
add
sub
shr
pop
ror
not
dec
rol
pop
push
lea
ror
add
pop
push
push
push
xor
ror
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
add
fwait
arpl
add
jecxz
add
jb
add
xchg
add
add
add
add
cmc
add
add
fwait
mov
and
clc
push
push
push
push
push
push
lea
push
push
push
call
loope
jns
add
in
pushf
ret
jp
add
pop
add
add
jecxz
add
arpl
cld
add
add
xchg
call
pushf
leave
push
jmp
add
add
test
fidivl
push
mov
sahf
add
jl
sti
lret
xchg
add
scas
jge
movsb
mov
rolb
jge
addl
add
add
mov
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
call
push
js
add
add
call
lods
mov
pop
add
xchg
je
add
int3
mov
mov
lock
cld
pop
loopne
jp
add
stos
mov
lea
pop
push
mov
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
shll
xchg
add
add
fdiv
add
mov
cwtl
add
hlt
add
mov
cli
lea
add
data16
pop
in
ret
add
add
push
push
push
push
push
push
push
call
pop
fiaddl
add
ficoml
add
xchg
jle
mov
pop
fsubs
mov
add
add
add
addb
mov
je
add
xorb
mov
lea
pop
add
push
push
push
lea
push
call
mov
add
cltd
movsb
jb
pop
add
add
iret
add
push
pop
add
add
add
xchg
arpl
out
loop
lods
lcall
mov
pop
imul
outsl
jge
mov
pop
add
add
cltd
push
add
cmpsl
ret
js
int
add
push
mov
mov
add
pop
mov
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
scas
mov
add
cltd
add
mov
mov
mov
mov
lret
jnp
repnz
pop
add
lret
add
aam
xchg
add
mov
loop
fcompl
pop
add
push
ror
pop
push
mov
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
add
mov
imul
movsb
loope
pop
js
add
faddl
push
jmp
add
fdivl
add
pop
mov
lea
pop
xor
push
push
lea
push
push
push
call
add
add
mov
pushf
mov
aam
mov
add
add
add
test
add
ret
popl
out
add
jmp
cmpsb
stos
xchg
out
sti
aam
add
lret
out
movsb
add
addb
add
add
add
add
push
add
add
add
mov
lea
pop
add
push
add
sub
add
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
add
ja
mov
insb
add
mov
add
mul
cli
add
add
add
fwait
out
lods
add
lods
add
test
add
push
add
lods
xchg
push
lods
add
test
movsb
filds
flds
call
movsb
pop
imul
in
add
arpl
in
add
pop
pop
push
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
jbe
mov
je
add
jecxz
rolb
add
add
xchg
pop
add
in
jecxz
jmp
test
hlt
insb
cwtl
add
in
jnp
fidivrs
add
mov
add
jae
cmpsl
add
int3
lea
pop
rep
push
sub
pop
mov
xor
push
pop
or
je
mov
push
push
push
push
push
push
push
call
je
out
add
add
bound
jns
add
lea
add
mov
cltd
cli
add
add
scas
add
pop
icebp
add
add
iret
push
into
fmull
sbb
xor
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
scas
add
add
add
add
sti
rcl
in
push
add
subb
cmpsb
movl
int3
movsl
enter
in
repnz
out
data16
add
out
shll
add
cltd
xchg
fisubrs
add
icebp
add
push
add
mov
mov
hlt
lea
pop
add
push
lea
pop
mov
xor
push
push
lea
push
push
call
out
mov
push
filds
arpl
pop
jne
mov
add
mov
jge
add
in
imul
shrl
out
jae
scas
hlt
shll
lods
stc
add
xchg
sahf
out
cwtl
addl
add
nop
into
lods
je
xchg
les
adc
repnz
push
shr
sub
pop
push
push
sub
pop
mov
xor
push
push
push
push
call
jl
add
jnp
addr16
add
add
aad
pop
add
fsubl
add
leave
clc
bound
add
add
addr16
add
pop
jo
shll
lea
pop
add
push
inc
add
shl
pop
pop
push
push
push
call
fildl
add
xchg
lahf
rclb
imul
push
add
in
in
add
add
xchg
test
jle
out
xchg
add
addl
leave
pop
sarb
add
lds
jnp
test
add
xchg
mov
xchg
add
add
hlt
lea
pop
rep
push
push
lea
push
push
push
push
lea
push
call
lock
out
cmc
movsl
push
jne
mov
add
push
add
addb
movl
test
fwait
jp
add
leave
test
add
loop
add
add
into
fwait
add
test
add
pop
xchg
add
pusha
sbb
mov
xor
push
shl
rol
pop
or
je
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
clc
movsb
lods
cmpsl
xchg
add
jo
jns
xchg
lds
add
repnz
jb
add
jb
add
add
shll
xchg
call
jecxz
add
add
add
jae
aad
add
out
sbb
add
add
mov
add
add
add
add
add
iret
outsl
mov
jnp
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
ljmp
add
push
pushf
add
push
add
add
add
add
mov
add
add
push
add
add
add
add
jle
mov
shll
scas
shrb
aam
bound
pop
add
push
not
shr
add
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
in
mov
add
xlat
add
xchg
xchg
fwait
jne
mov
test
add
add
mov
add
cmc
cld
add
stc
add
lock
lds
add
add
in
add
fcompl
jne
mov
jle
fadds
jb
add
jb
test
mov
add
add
push
mov
pop
ljmp
lea
pop
rep
push
push
push
push
push
push
push
push
push
call
add
add
lods
mov
pop
add
mov
add
xchg
fildl
nop
mov
add
push
add
add
add
add
add
out
add
jae
fsubs
lahf
testl
lock
lea
pop
pop
push
push
inc
shr
push
or
not
add
xor
ror
rol
ror
sub
add
lea
pop
dec
pop
push
lea
push
lea
push
call
loope
jae
call
add
popf
fldcw
add
add
test
mov
add
add
je
fildl
rolb
mov
je
add
popf
movsb
add
add
mov
call
push
sar
add
loop
add
addl
add
in
jle
pop
pushf
xchg
add
add
add
pop
add
add
aam
bound
pop
mov
push
rol
lea
dec
pop
mov
mov
push
lea
push
push
push
push
push
push
call
xchg
enter
add
mov
add
rolb
out
xchg
lods
lret
in
add
out
add
add
out
arpl
jmp
movsl
add
mov
scas
mov
add
add
leave
add
mov
mov
in
add
pop
jmp
push
push
shl
pop
mov
push
ror
add
xor
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
pop
push
xchg
hlt
add
add
push
sar
loope
add
add
jbe
add
mov
rcrl
xchg
add
add
enter
mov
je
mov
jb
int3
lea
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
sahf
jmp
bound
jb
xchg
add
add
add
jle
scas
add
bound
jae
js
mov
data16
shlb
jns
add
xchg
add
mov
add
add
lea
pop
push
push
add
dec
pop
push
mov
push
add
ror
pop
pop
pop
push
push
call
in
out
push
les
jns
lcall
pushf
test
mov
add
jecxz
lret
mov
add
test
add
add
in
sub
jecxz
xchg
mov
mov
mov
add
add
mov
call
add
fmull
push
xor
pop
pop
push
push
push
call
cwtl
jae
test
lea
sarb
xorl
pop
mov
add
je
scas
mov
sarl
add
mov
ljmp
mull
add
add
jle
scas
add
out
add
jmp
data16
leave
push
push
push
lea
push
lea
push
push
push
call
ljmp
int3
add
add
add
nop
add
lahf
mov
fwait
mov
pop
loop
popa
add
ror
fwait
add
divb
loope
scas
add
add
add
data16
ret
push
shr
add
lea
add
pop
push
push
ror
not
lea
ror
pop
mov
push
rol
lea
pop
add
push
push
push
push
call
test
pusha
add
push
ljmp
ja
add
pop
add
addr16
leave
add
mov
xchg
add
mov
stos
js
notb
cwtl
mov
fsubrl
cmpsl
jne
jge
nop
icebp
bound
lods
xchg
pop
jnp
add
add
mov
add
mov
lea
pop
push
push
push
lea
push
call
arpl
mov
rolb
lods
int3
jne
push
mov
pop
cwtl
add
add
add
add
add
fs
test
push
aam
add
push
add
lcall
add
mov
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
add
roll
lret
add
incb
stos
cwtl
add
mov
add
add
add
push
std
add
push
add
lret
jge
push
add
mov
loope
mov
imul
push
push
lea
push
push
lea
push
push
call
test
add
flds
add
mulb
pushf
nop
add
out
mov
add
add
pop
add
xchg
add
mov
test
lds
addb
test
add
mov
lea
pop
movl
push
dec
sub
pop
addl
test
je
push
dec
xor
pop
mov
pop
push
push
push
push
call
fidivrl
add
add
add
mov
fistpl
rorb
pop
insb
add
add
test
jbe
in
xchg
mov
pop
test
xchg
push
stos
add
test
flds
movsl
out
push
rcl
add
mov
lea
pop
pop
push
shr
not
ror
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
mov
outsl
add
data16
add
add
mov
test
pop
roll
mov
add
push
add
test
lret
scas
add
add
add
add
divl
mov
cld
lea
pop
leave
push
rol
not
dec
pop
ret
push
push
inc
pop
mov
push
dec
sub
pop
add
push
push
push
push
push
lea
push
push
push
push
push
call
pop
imul
fstpl
add
leave
roll
negb
push
add
xorl
mov
add
mov
jae
scas
fstl
aad
clc
add
xchg
sub
push
push
push
push
push
call
lds
push
add
test
mov
pusha
lret
mov
add
jp
pop
lock
mov
outsl
in
xchg
add
add
push
add
mov
cltd
add
mov
add
mov
push
jmp
jecxz
add
add
mov
outsl
add
pop
cmc
scas
mov
xlat
loopne
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
call
loop
iret
in
add
cmpsl
in
fistl
jo
aam
add
mov
ja
jae
lock
arpl
ret
leave
subb
add
push
add
add
into
xchg
loop
push
add
js
test
test
addl
mov
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
add
insb
jmp
xchg
xchg
mov
add
stc
data16
add
add
add
fcmovnb
xorl
je
mov
mov
data16
jle
mov
imul
jge
add
mov
add
sbb
testl
push
push
push
push
push
push
push
lea
push
push
push
call
out
push
adc
add
add
jb
add
add
sti
out
nop
add
add
add
add
push
pop
lcall
mov
add
cld
clc
ficomps
pushf
push
add
mov
add
lods
rcrb
movsl
into
gs
add
xchg
add
add
add
add
test
add
jb
mov
lea
pop
addl
push
push
push
push
push
push
push
push
call
add
in
movsb
jbe
mov
add
xchg
add
add
add
lods
jno
ljmp
scas
xchg
mov
mov
shl
jge
mov
add
add
xchg
lods
std
fadd
mov
leave
jp
fidivrs
jbe
iret
add
jnp
add
mov
adc
test
fmull
dec
cli
decl
negl
jne
push
push
push
push
push
push
push
call
insb
add
xchg
jno
js
fldl
jecxz
fiadds
jo
add
jo
add
add
stc
add
mov
jae
add
add
movsb
fiaddl
pushf
add
add
mov
add
add
add
mov
in
outsl
add
subl
add
fs
add
add
add
fcmovnbe
add
pop
push
push
push
pop
call
push
inc
rol
sub
xor
pop
cmpl
jne
push
add
sub
pop
pop
pop
push
push
call
add
hlt
data16
lock
add
add
ret
pop
ljmp
fiadds
cltd
add
in
jb
jae
add
mov
add
add
test
out
out
test
xchg
fiaddl
js
mov
add
lea
lods
faddl
add
pusha
cli
mov
lea
pop
pop
pop
push
pop
leave
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
stos
aad
mov
ja
push
jp
add
add
into
call
cmpsl
les
jp
add
pop
cmc
jae
pop
subl
add
int3
xchg
nop
add
add
enter
int
fwait
mov
lea
pop
ret
push
sub
sub
rol
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
push
movsl
aam
cmpsb
jge
add
mov
add
xchg
repnz
mov
sarb
jne
pop
std
cwtl
mov
fildll
jecxz
lock
cltd
out
rcr
add
pushf
jle
xchg
lock
add
add
mov
lea
pop
mov
push
push
push
push
call
shl
mov
pop
imul
xchg
mov
mov
addl
jmp
mov
jl
push
fucomp
add
mov
jmp
add
mov
add
add
push
add
add
add
push
push
xchg
add
fld
pop
add
add
popl
jge
mov
lea
pop
add
push
lea
pop
push
push
sub
pop
push
push
lea
push
push
lea
push
push
push
call
repnz
cwtl
add
mov
jnp
add
add
fwait
mov
hlt
add
add
add
add
add
loopne
xchg
push
movsb
add
add
lahf
jp
imul
add
jp
xchg
add
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
xor
pop
hlt
add
mov
add
cwtl
movb
pop
addb
mov
cli
aad
add
xchg
in
add
stc
lods
cmpsb
add
add
add
jp
xlat
into
fcomi
scas
jns
mov
test
jae
fs
arpl
pushf
in
push
mov
cmpsb
mov
add
jp
add
testb
sarl
add
popa
mov
hlt
lea
pop
movl
push
push
push
push
push
lea
push
lea
push
call
add
add
add
cwtl
add
lret
fldt
mov
pop
add
add
jns
push
out
mov
movsb
mov
xlat
mov
jne
add
xchg
add
in
add
add
add
clc
add
idivl
shl
add
mov
add
sahf
add
add
lret
add
faddl
mov
scas
testl
loopne
call
jo
push
push
push
push
push
lea
push
push
push
call
pop
add
add
add
ja
add
add
add
add
std
mov
cltd
xchg
mov
add
add
add
hlt
popa
add
xchg
add
repnz
shl
push
add
jo
add
pop
push
call
push
not
rol
pop
subl
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
repnz
add
add
fcmove
add
jmp
pop
add
add
push
sahf
faddl
pop
gs
xchg
add
fiaddl
addb
mov
data16
add
loop
mov
jp
lds
jl
add
stos
add
add
xchg
add
addr16
cmpl
jne
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
push
mov
jnp
fwait
add
jbe
add
leave
mov
shr
add
jne
add
rcr
jge
jmp
add
add
mov
add
mov
test
fldl
jp
ja
add
into
jo
jmp
mov
lea
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
iret
mov
pop
pusha
frstor
gs
lret
nop
add
sti
neg
jnp
add
lret
fisubl
fistl
mov
add
add
add
in
add
nop
add
add
lods
cmc
pusha
mov
in
push
add
lret
fld
fidivrs
cli
bound
mov
cld
lea
pop
pop
push
dec
inc
not
pop
pop
push
lea
pop
leave
ret
push
lea
push
lea
push
call
bound
stos
mov
add
mov
gs
push
pushf
popf
mov
add
jbe
mov
add
int
mov
lret
jnp
add
add
pushf
stos
add
add
xorl
mov
push
push
pop
add
lret
jb
movsb
je
add
aam
add
in
add
addb
addl
push
push
fstpl
std
sahf
mov
or
push
push
dec
pop
mov
add
push
push
push
push
push
push
push
push
call
les
stos
add
mov
add
scas
in
sahf
jo
fisttpl
fistl
push
mov
fwait
add
fimuls
into
popl
mov
add
pop
add
fiadds
add
out
add
in
add
add
flds
mov
add
roll
mov
addl
cmc
mov
lea
pop
push
push
rol
pop
push
push
push
shl
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
test
add
imul
add
mov
scas
add
jmp
add
mov
in
add
movsb
movl
in
out
rcrb
mov
aam
xchg
fwait
add
add
lret
mov
lea
pop
mov
lea
push
push
push
lea
push
lea
push
call
jb
add
add
add
cmpsb
push
mov
fadds
add
xchg
ja
jo
movsl
add
mov
pop
add
cmpsb
addl
add
add
subb
stc
in
add
lods
mov
add
in
mov
lea
pop
sub
push
push
push
push
push
push
push
lea
push
push
call
pop
mov
sahf
into
leave
cmpsl
roll
cmpsl
test
add
cmc
mov
add
add
fwait
int3
add
mov
hlt
pop
sarb
xchg
xchg
push
fcompl
add
lahf
add
add
jae
add
add
jns
ljmp
mov
push
add
stc
xchg
loope
mov
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
int
xchg
bound
loop
add
add
filds
jnp
mov
mov
testl
mov
add
int3
rcrb
add
add
sub
call
rclb
xor
inc
or
lea
push
push
push
push
push
push
push
lea
push
push
call
arpl
mov
add
ja
cli
call
add
add
enter
test
add
jo
mov
xlat
mov
pushf
mov
add
out
cltd
pusha
jmp
add
add
testl
fiaddl
add
cwtl
addl
into
push
add
add
add
push
add
test
add
orb
mov
push
shr
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
addb
popa
add
push
mov
insb
nop
mov
add
jp
stc
jno
add
aad
add
mov
push
data16
shl
add
jne
mov
hlt
adcl
pushf
stos
movsb
scas
add
add
mov
int3
lea
pop
add
push
rol
shl
sub
pop
add
mov
push
push
push
call
cmp
add
cmpsb
fadds
jle
add
pop
mov
add
push
add
push
shl
stos
add
scas
push
lahf
call
mov
push
cli
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
call
add
push
std
js
add
js
fcmovnb
call
mov
ja
push
add
add
mov
add
add
cmpsb
add
cld
lea
pop
cmp
jne
push
push
lea
push
call
in
add
add
popf
lods
mov
lea
lea
lret
int3
add
add
movb
xchg
mov
add
add
mov
xchg
nop
mov
into
loope
fmull
cwtl
fadds
add
jne
mov
push
lea
push
call
out
add
cmpsl
jmp
imul
fs
addl
lods
lret
roll
jl
mov
ljmp
add
jo
pusha
add
mov
iret
in
add
lcall
les
xchg
mov
lea
pop
movl
push
sub
lea
shl
pop
jmp
mov
push
not
pop
mov
sub
jne
push
pop
mov
push
rol
rol
shr
ror
pop
movl
push
push
push
push
lea
push
push
push
call
je
add
add
out
popa
jecxz
imul
movsl
testb
jae
pushf
add
shl
jle
pop
pop
pushf
cltd
test
addl
mov
add
mov
in
cld
lea
pop
jmp
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
pop
les
mov
je
add
add
add
out
add
jae
add
push
mov
add
xchg
test
add
add
pop
push
lods
add
pop
jle
add
add
test
add
xchg
push
add
mov
mov
lea
pop
mov
push
lea
push
push
push
push
push
call
nop
add
add
add
add
mov
add
add
mov
mov
add
xchg
add
add
iret
in
mov
add
pop
enter
add
add
pusha
add
add
mov
add
add
pop
mov
cmp
jne
push
ror
lea
pop
mov
movl
push
lea
push
push
call
add
add
mov
clc
shrl
add
add
mov
pop
add
iret
add
add
repnz
shlb
hlt
add
add
aad
mov
fnsave
jbe
sti
int
add
lock
test
xchg
rolb
mov
jno
add
add
cwtl
mov
lea
pop
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
jge
scas
add
out
movb
add
add
add
xchg
add
add
mov
add
add
push
adcb
sti
add
mov
lea
pop
mov
cmpw
jne
push
push
push
call
aad
push
add
leave
lods
enter
add
in
mov
sub
test
test
add
test
mov
addb
gs
jge
mov
add
add
jo
add
jo
imul
hlt
add
add
les
inc
adc
sub
pop
movl
push
push
push
push
push
push
push
push
call
call
add
add
mov
add
ja
sti
lea
push
ljmp
subb
fildl
repnz
add
add
jns
sti
outsl
add
add
call
add
add
add
add
lahf
xchg
leave
add
add
add
push
add
add
lds
lock
mov
lea
pop
jmp
push
shr
inc
pop
pushl
push
add
add
dec
pop
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
fcompl
fadds
aad
pushf
mov
lahf
movsb
add
add
add
add
add
add
arpl
lret
shll
add
jle
mov
lea
pop
mov
push
push
push
call
push
add
int3
in
insb
add
pop
xchg
je
add
lods
test
add
jl
out
mov
mov
loop
add
add
add
fistpl
mov
add
xchg
roll
scas
sbbl
xchg
add
fmull
inc
sbb
xor
inc
pop
mov
push
push
not
add
push
sub
add
dec
sub
add
pop
add
pop
push
sub
rol
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
popf
pop
jp
mov
mov
add
loopne
mov
mov
mov
pop
in
push
je
fs
into
lret
mov
xchg
into
leave
gs
add
push
add
add
add
pusha
sub
cmp
add
rorl
cmpl
je
push
push
sub
inc
push
or
inc
add
add
sub
pop
lea
xor
pop
push
push
push
push
push
push
push
push
push
push
call
jb
add
add
add
repnz
add
push
shl
xchg
mov
add
pop
add
xchg
add
add
add
jnp
add
loopne
add
mov
mov
add
hlt
mov
nop
jb
stos
jp
add
mov
mov
aam
jns
mov
lea
pop
push
push
lea
push
push
lea
push
call
mov
ficompl
add
leave
add
repnz
int3
fsubrl
test
add
add
xchg
push
add
add
add
jecxz
fs
mov
lcall
pop
cld
add
mov
ret
add
add
pop
lea
pop
call
push
push
push
push
push
push
call
add
mov
mov
add
add
scas
bound
jae
stos
add
nop
push
movsb
lea
add
add
test
popa
roll
hlt
add
add
push
mov
mov
add
add
cmpsb
add
add
xchg
add
fstl
testb
scas
pusha
gs
repnz
add
jno
add
pop
cmpl
je
push
push
rol
xor
push
or
not
add
not
inc
sub
inc
pop
shr
pop
push
dec
pop
push
push
not
sub
add
pop
call
push
add
lea
ror
xor
pop
cmpl
je
push
push
sub
push
sub
add
dec
sub
shr
add
add
pop
add
shl
pop
push
push
push
lea
push
lea
push
call
mov
lret
add
mov
add
add
add
add
pop
aad
ja
aad
mov
mov
add
add
add
pop
mov
xchg
pop
scas
fwait
mov
add
xchg
add
add
pop
push
push
shl
pop
call
push
push
lea
push
push
push
push
call
jo
add
scas
popa
mov
add
push
add
add
mov
add
cmpsb
mov
push
mov
lret
mov
mov
mov
lret
add
add
ljmp
roll
add
push
out
jae
add
roll
mov
out
add
mov
lea
pop
cmpl
je
push
push
push
or
inc
add
ror
sub
not
not
rol
pop
shl
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
filds
rolb
pop
push
add
push
add
shlb
mov
fiadds
outsl
add
add
pusha
int3
xchg
add
jge
add
cltd
loop
add
add
filds
add
add
add
add
in
add
pushf
mull
and
push
call
push
push
call
add
ficoml
jno
lahf
add
lcall
addl
gs
jnp
pop
push
mov
mov
add
pop
pop
add
cld
jl
out
insb
add
add
fnstenv
xchg
add
mov
mov
cmpsl
add
add
add
add
test
out
jl
fiadds
add
mov
jecxz
cmc
mov
lea
pop
cmpl
je
push
push
sub
shl
ror
push
and
add
shl
sub
sub
add
pop
xor
not
pop
push
push
push
lea
push
push
push
push
call
add
add
loope
jb
add
add
add
add
pop
add
test
add
test
add
add
jb
add
imul
imull
add
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
xchg
addl
add
add
pop
lret
add
add
fdivrs
add
add
add
add
add
cmpsl
sar
xlat
add
pusha
mov
lea
pop
call
push
add
lea
sub
rol
pop
cmpl
je
push
push
inc
rol
push
or
not
add
ror
sub
add
shl
pop
xor
shl
pop
push
xor
shl
lea
add
pop
push
push
push
push
lea
push
push
push
call
mov
xchg
scas
clc
mov
add
add
xlat
add
aad
add
add
add
stos
mov
add
pushf
xchg
add
add
add
add
add
add
add
flds
add
fisttpll
pop
call
push
sub
dec
shr
pop
cmpl
je
push
push
add
sub
push
or
not
add
xor
xor
sub
xor
add
sub
pop
xor
pop
push
dec
sub
sub
pop
push
push
lea
shl
inc
pop
call
push
push
push
push
call
test
add
addb
jne
xchg
add
mov
mov
out
mov
mulb
xchg
outsw
add
scas
add
add
int3
jmp
mov
add
mov
jo
clc
push
mov
add
pusha
adc
cmp
or
int3
je
push
push
not
rol
push
and
add
rol
add
rol
sub
not
sub
rol
inc
pop
dec
sub
pop
push
add
lea
add
xor
pop
push
push
push
push
push
push
push
push
push
push
push
call
movsl
add
jle
add
xchg
xchg
push
int
stos
add
shl
add
imul
mov
stos
add
pop
add
lea
into
nop
loop
xchg
jge
add
push
xlat
insb
add
lods
scas
cmc
rorl
sarl
pop
pop
addb
add
mov
jl
mov
lea
pop
call
cmpl
je
push
push
add
dec
push
sub
add
shr
sub
ror
pop
shl
dec
xor
xor
pop
push
push
push
push
push
lea
push
call
add
add
pop
loopne
in
xchg
push
popa
movl
aam
in
icebp
add
add
pushf
add
movsb
imul
cld
mov
add
xchg
jge
add
push
add
mov
push
lret
mov
pop
cld
add
pop
push
call
push
push
push
push
push
push
push
call
pop
lods
add
insb
add
mov
push
test
sarl
test
popa
add
mov
add
mov
mov
add
pushf
lcall
add
mov
into
push
fsts
add
js
add
push
add
out
jge
jae
int3
lea
pop
cmpl
je
push
push
shr
shl
shl
sub
push
push
pop
add
add
sub
sub
shl
pop
dec
lea
pop
push
push
push
call
jne
data16
add
add
xchg
add
add
add
add
add
in
test
add
add
xchg
test
jb
add
jle
fucomip
mov
add
icebp
fs
lea
pop
push
call
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
gs
add
add
out
mov
add
add
push
add
rolb
push
add
add
add
scas
movsb
mov
add
mov
add
stc
mov
test
add
ja
movsb
sti
je
cmpsb
hlt
sti
add
roll
mov
out
pop
cmpl
je
push
push
add
sub
push
or
not
add
shl
sub
inc
xor
pop
ror
dec
shr
pop
push
add
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
sub
sub
add
push
or
not
add
dec
sub
inc
pop
sub
pop
push
push
push
push
push
call
rcr
cmpsl
add
lods
aam
shrl
add
push
add
out
add
push
jns
out
add
jae
fadd
test
cmc
push
outsl
add
xchg
mov
add
insb
add
add
add
int3
iret
add
add
mov
add
mov
je
xchg
xchg
pop
negb
leave
mov
add
cld
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
jo
xchg
add
push
movsl
add
stc
add
add
aam
jecxz
push
add
add
cwtl
add
add
add
lcall
fsubrl
mov
jne
add
add
movsb
jl
ret
add
loopne
add
add
into
xlat
in
add
mov
lea
pop
call
push
shl
pop
cmpl
jne
push
add
shr
sub
pop
mov
push
lea
pop
movl
jmp
push
xor
xor
ror
pop
xor
pop
push
push
push
push
push
push
push
push
push
push
call
mov
mov
gs
rcll
sahf
mov
add
mov
mov
add
std
lret
add
mov
add
mov
add
movsb
add
add
mov
lea
pop
pop
push
push
push
push
push
push
push
push
call
add
add
add
add
cmpsb
add
add
add
add
clc
jne
rclb
add
mov
xchg
add
add
add
leave
add
add
mov
add
ja
add
cltd
mov
hlt
xchg
cwtl
add
hlt
add
mov
pop
pop
add
nop
add
hlt
lea
pop
pop
push
lea
push
lea
push
push
push
call
imul
push
scas
jl
mov
add
add
add
jl
mov
lods
sarb
enter
add
push
add
mov
in
xor
subl
add
dec
sub
ror
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
fmul
add
stc
add
add
add
add
mov
add
jbe
test
add
stos
sahf
add
jae
jl
add
jecxz
addl
add
in
xchg
add
push
ror
mov
lods
in
lahf
rcl
lret
lea
pop
ret
push
lea
push
push
lea
push
call
add
add
add
addb
xchg
test
lea
jmp
repnz
jmp
add
out
movsb
mov
add
data16
add
fbstp
in
add
push
add
adc
push
push
push
push
lea
push
lea
push
push
call
push
addr16
enter
iret
mov
xchg
push
add
icebp
mov
not
mov
xchg
add
add
test
xchg
out
jb
imul
outsl
imul
add
insb
push
mov
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
call
add
popa
add
mov
add
scas
add
jae
add
loopne
clc
in
mov
andb
xchg
movsl
andl
bound
add
mov
loop
add
push
roll
add
fsts
lea
pop
add
push
push
call
popa
pop
add
jmp
push
push
addb
pop
ja
test
add
pop
jae
add
movsl
mov
add
fcoms
rcll
fildll
je
add
testl
xchg
mov
lea
pop
cmpl
jne
push
push
add
push
or
inc
add
add
shr
inc
sub
lea
pop
dec
shr
inc
pop
push
shr
pop
pushl
push
lea
pop
call
push
push
push
push
call
cwtl
add
movl
add
add
push
test
add
aad
mov
add
movsl
mov
mov
lea
jb
in
subl
flds
stos
mov
int
fadds
add
addl
add
bound
call
jmp
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
sahf
rcrb
test
lahf
repnz
add
movb
js
add
add
nop
hlt
pushf
xchg
add
pop
clc
add
add
icebp
pop
add
add
jo
rclb
mov
imul
mov
pop
mov
popl
call
bound
pop
cmpl
je
push
push
push
push
push
push
call
jne
cltd
add
insb
ret
push
add
out
fsubrs
add
scas
add
data16
out
add
data16
mov
lods
out
sbb
add
fiadds
pop
add
addl
mov
lea
pop
cmpl
jne
push
sub
sub
rol
pop
leave
add
push
not
pop
pop
push
lea
push
push
push
push
push
call
add
in
mov
cmpsl
push
add
mov
pushf
mov
add
xchg
mov
pop
out
int
add
xchg
jno
int3
in
outsl
jp
jb
xchg
add
shrl
stos
add
stc
mov
mov
lea
pop
pop
push
push
push
push
push
call
push
jae
imul
mov
mov
add
fcomps
add
jnp
fmul
mov
rolb
add
add
mov
add
gs
mov
jecxz
fistpll
addr16
pop
push
pop
pop
push
push
push
push
push
push
push
push
push
call
xlat
lds
rolb
add
add
add
add
add
out
nop
push
roll
mov
int3
push
jae
add
lock
lds
pushf
fnstsw
sahf
xchg
add
outsl
add
sahf
mov
add
mov
cmc
aam
xlat
add
add
add
mov
lea
pop
leave
add
push
push
call
add
jmp
add
clc
mov
popf
mov
add
stos
fsub
add
jmp
mov
add
ja
mov
push
lahf
jns
push
mov
idivl
jp
add
mov
pop
mov
lea
pop
ret
jmp
push
xor
xor
shl
pop
cmpl
jne
push
push
ror
inc
push
or
inc
add
sub
sub
sub
shr
pop
inc
shl
lea
pop
push
push
push
push
push
push
lea
push
push
call
pop
push
xchg
idivl
add
mov
cmpsb
pop
push
add
add
add
add
repnz
mov
je
add
add
sti
loop
hlt
in
add
loopne
add
xchg
add
out
fnstenv
add
jle
fmulp
enter
data16
imul
test
shlb
mov
mov
orb
pushl
push
lea
push
lea
push
push
push
lea
push
push
push
call
roll
add
add
nop
add
arpl
mov
lea
xchg
lcall
pop
jbe
xchg
jle
cld
add
push
add
test
add
jo
addl
cmpsb
imul
add
lahf
add
sarb
lods
add
add
add
popf
out
clc
add
pop
call
push
not
rol
pop
push
call
push
add
sub
pop
jmp
push
add
pop
cmpl
jne
push
push
push
call
hlt
pop
rolb
lret
lea
pop
ljmp
cmp
test
lcall
imul
jmp
je
mov
fs
pop
scas
addb
mov
add
add
add
fwait
add
pop
push
addr16
add
add
mov
lea
pop
mov
push
rol
inc
pop
mov
push
lea
push
call
int
enter
add
add
call
mov
mull
bound
lods
add
jnp
mov
add
add
add
data16
repnz
add
gs
cli
push
add
add
mov
lea
pop
push
push
push
add
sub
ror
push
push
pop
add
sub
sub
xor
sub
shr
ror
pop
sub
shr
pop
push
lea
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
mov
add
out
push
add
add
imul
stos
movsl
add
add
pop
cwtl
add
mov
mov
add
enter
add
add
mov
jno
insb
add
loop
mov
add
add
rorl
call
push
not
shr
not
pop
push
push
shr
pop
call
push
push
dec
xor
push
or
inc
add
not
ror
sub
rol
shl
rol
rol
pop
ror
add
xor
pop
push
push
push
push
push
push
push
push
push
push
call
pop
mov
mov
push
fsub
add
add
fucom
push
add
test
mov
xchg
rolb
mov
subb
add
lods
mov
add
into
add
mov
clc
add
nop
add
repnz
lea
pop
pushl
call
push
shr
pop
call
push
push
sub
push
and
add
sub
xor
sub
xor
pop
pop
push
push
push
push
lea
push
push
lea
push
call
lret
pop
loop
sahf
add
xlat
add
fistps
add
push
add
cmpsb
add
fidivrl
imul
jo
add
xchg
in
add
add
stos
add
std
out
cld
lea
pop
pushl
push
xor
ror
pop
call
push
dec
pop
call
lea
push
push
rol
push
and
add
not
dec
sub
shl
rol
pop
ror
inc
inc
pop
push
push
lea
push
push
push
push
push
push
call
add
add
add
popa
add
mov
outsl
add
xchg
pop
add
pushf
xor
add
adcb
add
jne
add
roll
add
push
add
fadds
xchg
cltd
add
in
add
in
mov
fisttps
pop
pushl
call
push
sub
pop
push
call
push
push
not
sub
push
xor
add
sub
add
sub
rol
inc
sub
pop
lea
pop
push
not
sub
pop
pushl
push
lea
xor
ror
pop
call
push
push
call
ret
stos
vpsrlw
outsl
mov
out
mov
xchg
add
les
shl
add
xchg
in
mov
sbb
cltd
add
scas
out
lahf
mov
lea
pop
call
push
push
push
push
push
push
push
push
call
roll
mov
sti
mov
in
add
mov
sahf
add
add
mov
bound
aam
mov
andl
pop
mov
add
sarl
add
add
add
lahf
jae
mov
lea
pop
mov
push
push
dec
lea
push
or
not
add
dec
shl
sub
not
lea
rol
pop
dec
pop
push
push
push
call
rolb
jnp
add
add
add
add
pop
pop
std
add
mov
in
add
push
add
add
fisttps
call
lcall
add
test
jbe
add
add
iret
add
push
movsb
enter
add
add
add
xchg
add
add
add
test
add
mov
lea
pop
pushl
push
not
pop
call
push
push
sub
shl
pop
call
push
push
shl
push
or
not
add
not
not
sub
ror
lea
add
pop
sub
xor
pop
push
lea
shl
inc
sub
pop
pushl
push
pop
call
push
add
rol
add
pop
push
pushl
push
lea
push
lea
push
push
push
push
call
test
lock
add
add
mov
add
aam
and
call
addb
push
jnp
lods
add
add
pop
jmp
pop
in
notb
lods
push
add
stc
shrb
add
lods
out
add
add
pop
add
add
add
mov
lea
pop
call
push
push
ror
push
or
not
add
shr
add
sub
rol
dec
add
pop
add
pop
push
xor
pop
pushl
push
ror
shr
pop
call
push
push
ror
dec
rol
push
or
inc
add
add
sub
rol
sub
pop
dec
lea
xor
pop
push
push
not
sub
push
or
inc
add
lea
add
sub
ror
add
pop
sub
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
sti
mov
mov
add
les
mov
sbbl
add
out
jle
ja
add
add
out
xchg
xchg
fwait
jae
xchg
fwait
add
add
test
lret
mov
lea
pop
call
push
push
push
push
push
push
call
iret
jae
mov
add
pushf
jbe
add
les
imul
cli
mov
int
add
mov
testb
add
jmp
jae
add
add
add
add
out
add
lcall
add
add
add
mov
mov
xchg
mov
insb
add
scas
bound
add
add
add
jp
lret
pop
add
pop
outsl
add
pop
pop
dec
jne
push
not
pop
call
push
rol
pop
jmp
push
push
push
call
add
add
add
fadds
jmp
add
add
add
add
lock
push
xchg
add
scas
jbe
stos
enter
lods
mov
aad
fnstcw
mov
push
fidivs
mov
test
rorl
pop
call
push
push
add
push
or
not
add
not
sub
rol
lea
lea
add
pop
dec
ror
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
lret
int
add
sahf
stos
pop
add
add
cli
xchg
hlt
xchg
mov
add
mov
pop
add
add
lret
in
mov
roll
add
cld
mov
add
test
lahf
ja
pop
pop
add
add
pop
pushl
push
push
push
push
push
call
add
mov
mov
aam
jle
iret
xchg
xchg
add
cmpsb
popf
out
jae
add
add
add
cwtl
mov
add
out
push
mov
hlt
add
add
pushf
add
push
hlt
add
hlt
lea
pop
call
push
push
push
call
mov
add
jb
pop
add
add
add
cmc
lahf
push
add
add
add
incb
and
mov
add
add
add
pop
add
add
add
add
out
xchg
cwtl
add
add
in
jne
add
shll
pop
fcompl
xchg
add
add
add
lcall
push
push
lea
push
push
push
lea
push
push
call
mov
bound
add
lahf
fwait
add
add
add
add
jge
jne
sbbb
call
sti
rorl
add
add
xchg
add
add
nop
stos
rolb
mov
lea
pop
call
push
push
push
call
clc
add
add
icebp
pop
add
add
pop
mov
pop
sti
add
add
insb
add
add
gs
pop
mov
arpl
add
add
popf
jle
stc
add
pop
popf
loope
add
fadds
cld
xchg
imul
repnz
jge
add
jnp
add
imul
add
cmp
lcall
mov
mov
hlt
lea
pop
mov
push
push
push
push
push
call
add
add
jbe
ret
add
push
pop
out
add
pop
lea
add
aad
fcmovnu
mov
cli
add
mov
out
idiv
mov
lea
pop
lea
push
push
not
shr
push
and
add
shr
sub
inc
lea
pop
add
shl
not
pop
push
not
not
not
pop
pushl
push
push
lea
push
call
add
jno
lea
add
pop
add
mov
add
ret
add
add
add
rolb
add
ret
add
shlb
pop
mov
ljmp
add
lods
add
push
outsl
cwtl
stos
jle
add
test
mov
lret
pop
cld
add
stos
js
hlt
lea
pop
call
push
shr
inc
inc
pop
push
push
rol
pop
call
push
push
not
add
push
and
add
shl
ror
sub
ror
pop
not
shl
pop
push
add
sub
pop
pushl
push
dec
dec
sub
shr
pop
call
call
push
lea
pop
mov
push
sub
pop
lea
push
push
dec
add
push
and
add
ror
shl
sub
shr
pop
inc
add
shr
pop
push
shr
dec
pop
pushl
call
push
sub
dec
pop
lea
push
push
call
jno
add
pop
add
add
movsb
mov
add
movb
nop
add
enter
test
stos
in
add
add
add
mov
add
lods
roll
loopne
add
add
add
add
mov
addl
add
add
push
jns
mov
add
add
xlat
hlt
fwait
add
enter
push
scas
int
sti
add
push
mov
lea
pop
push
push
pop
push
push
push
ror
inc
add
pop
pushl
push
push
rol
dec
push
xor
add
shl
sub
lea
sub
add
shl
pop
not
dec
inc
pop
push
sub
pop
push
push
not
dec
add
shl
pop
call
push
push
shl
push
sub
add
shr
xor
lea
sub
sub
inc
pop
lea
sub
sub
pop
push
push
lea
push
push
push
call
add
enter
scas
mov
xchg
rcrl
stos
add
push
push
mov
pop
repnz
mov
cmc
add
jnp
hlt
xchg
xchg
data16
mov
std
add
roll
add
ljmp
push
out
add
mov
cwtl
icebp
add
add
xchg
loopne
leave
ja
les
add
mov
fisubs
add
pop
pushl
call
push
shl
not
shr
pop
push
push
sub
ror
add
pop
call
push
push
xor
add
push
or
not
add
add
add
sub
add
pop
dec
xor
pop
push
push
push
push
push
lea
push
call
loop
stos
cltd
add
test
add
test
add
mov
add
test
mov
iret
iret
ret
lcall
add
fiaddl
out
popf
add
call
lods
gs
add
add
add
scas
icebp
sbb
ja
mov
lea
pop
pushl
push
xor
xor
pop
call
call
push
lea
push
call
add
add
add
add
add
add
mov
incb
add
add
add
add
nop
add
out
fwait
add
mov
add
sahf
aad
mov
mov
push
test
rcll
jo
mov
add
jp
nop
add
mov
or
add
add
add
add
push
xor
shl
lea
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
add
xchg
lea
enter
add
std
mov
fiaddl
add
sar
andb
pop
add
data16
int
sar
add
std
in
add
fcmovb
add
add
add
add
mov
add
add
add
add
add
rolb
arpl
add
ret
popl
ja
push
cwtl
out
adcl
add
push
cmc
rolb
add
add
popa
and
lret
ljmp
push
lds
add
sub
inc
sub
not
pop
shl
shl
pop
push
inc
inc
pop
pushl
push
shr
add
sub
pop
call
push
ror
pop
push
call
push
push
shr
sub
lea
lea
push
push
pop
add
rol
dec
sub
pop
ror
add
sub
pop
push
shl
shl
xor
pop
pushl
push
push
push
call
cld
add
lea
push
into
scas
addl
add
cmpsl
mov
aam
pop
add
icebp
repnz
outsl
clc
add
mov
mov
mov
lahf
movsl
fldl
int3
jl
cltd
add
add
orl
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
xchg
add
cltd
fiaddl
lds
pop
les
insb
data16
add
mov
cmpl
jne
shrb
add
mov
cwtl
lahf
shl
add
pop
lahf
add
lea
pop
push
call
push
push
call
mov
loope
mov
add
add
jne
addr16
mov
pop
mov
arpl
add
lcall
push
scas
test
add
lcall
enter
add
add
pop
add
repnz
push
jecxz
sub
sub
mov
mov
lea
pop
leave
add
push
inc
pop
pop
pop
push
not
dec
shr
pop
pop
pop
push
xor
lea
not
pop
leave
push
lea
push
push
push
call
jno
jne
enter
add
roll
jae
add
iret
add
add
add
aad
rcll
stc
xchg
jno
sti
add
add
pop
imul
add
add
xchg
push
add
add
iret
add
add
cwtl
add
add
xchg
idiv
lea
in
cmpsb
cli
xchg
xchg
cmpsb
pushf
js
rolb
mov
pop
pop
insb
pop
push
clc
popf
icebp
pop
mov
lea
pop
add
push
rol
add
xor
pop
ret
push
dec
inc
rol
pop
leave
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
je
les
jbe
lea
mov
addb
add
bound
mov
jno
scas
add
cwtl
adc
jb
pop
add
icebp
add
ljmp
jnp
add
add
mov
jb
cmpsl
cbtw
add
jne
add
add
repnz
lea
pop
ret
push
push
push
push
push
push
push
push
push
push
call
pushf
jp
mov
lds
pop
add
mov
popf
add
jo
stos
add
mov
sti
add
add
push
test
popl
mov
sahf
jnp
cltd
addl
add
iret
add
std
mov
jbe
push
movsb
add
mov
add
arpl
mov
pop
push
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
mov
cmpsb
popa
add
add
jnp
addb
outsl
lret
clc
movl
add
movsb
xchg
pop
ret
andb
test
add
mov
xchg
rcrl
mov
add
mov
ja
je
add
insb
jb
mov
andl
jb
fisttpll
add
add
lock
add
pop
cmpl
jne
push
sub
ror
pop
mov
jmp
push
inc
inc
pop
mov
push
add
pop
and
push
push
push
lea
push
push
push
push
push
push
lea
push
call
jnp
add
lea
add
sahf
mov
mov
add
add
fdivs
add
add
aam
add
insb
xchg
push
add
xchg
push
mov
lea
pop
xor
xor
push
add
ror
inc
pop
add
push
push
lea
push
push
push
call
add
xchg
add
add
add
cwtl
stc
add
data16
add
fnsave
ret
out
add
add
movl
pop
add
test
mov
add
mov
add
jecxz
roll
mov
add
add
mov
ljmp
pop
pop
add
mov
add
add
adc
xor
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
cwtl
mov
ficompl
roll
cmpsb
add
push
stc
xchg
divl
frstor
add
xchg
leave
add
xchg
std
add
std
hlt
add
mov
add
push
icebp
add
fldl
pusha
popa
add
add
out
fcomps
xchg
push
add
test
stc
jbe
lods
out
add
add
lea
pop
dec
sub
push
rol
inc
pop
jmp
push
rol
sub
lea
pop
sub
push
shr
sub
pop
pushl
pop
push
sub
dec
pop
sub
push
push
push
lea
push
push
lea
push
lea
push
call
sbbb
bound
shl
aad
imul
add
mov
mov
add
add
add
outsl
fildl
mov
add
rol
jge
pop
add
hlt
lea
pop
cmp
jne
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
faddl
out
pop
shr
iret
mov
add
addr16
add
mov
ja
test
cltd
in
fwait
add
add
mov
add
add
push
test
cmpsl
jecxz
add
add
pop
mov
push
shr
xor
lea
dec
pop
lea
push
add
add
ror
add
pop
sub
mov
push
lea
push
push
push
push
push
push
push
call
add
xchg
push
mov
mov
andl
add
mov
jo
mov
mov
hlt
je
loopne
pop
add
std
add
fcomip
ret
add
fcomip
imul
add
call
add
add
add
repnz
data16
jmp
push
lea
push
push
push
push
lea
push
call
mov
scas
mov
test
add
mov
mov
mov
lds
movsb
sbbb
add
fiaddl
mov
lahf
add
out
fdivrs
lea
pop
sub
push
rol
pop
pushl
push
shl
shl
ror
pop
pop
push
not
sub
pop
shr
and
push
shr
add
rol
pop
sub
push
shr
pop
cmp
jne
push
shl
ror
add
pop
leave
ret
push
lea
push
push
call
outsl
add
push
int3
mov
add
pushf
add
jb
pop
add
shl
add
push
int3
mov
fistpll
add
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
call
mov
mov
fnstcw
add
mov
add
cld
je
jne
rorl
movsb
mov
push
mov
add
in
clc
add
cli
add
sbb
mov
push
sub
pop
add
push
push
push
push
push
push
push
push
push
push
push
call
add
faddl
add
mov
sti
jne
sahf
pop
mov
jnp
lds
add
add
lcall
out
add
cwtl
mov
mov
add
pop
add
add
add
pusha
mov
cmp
aam
aam
fildl
mov
jns
fmull
push
push
add
shr
pop
push
push
push
push
lea
push
push
push
push
push
call
cli
andb
mov
stos
pop
pop
add
add
add
jb
cmpsb
lcall
fwait
arpl
add
add
add
nop
xchg
leave
add
lea
add
add
into
movb
lret
add
mov
shlb
add
mov
aad
pop
add
pop
add
cmc
add
add
add
cld
leave
mov
fmull
pop
or
lret
pop
lea
push
shl
sub
inc
pop
sub
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
fsubrl
jns
repnz
fiadds
mov
jl
pop
insb
add
jle
add
incb
mov
jmp
add
add
xchg
add
mov
add
add
jnp
jnp
notl
jnp
mov
loopne
add
cmpsl
add
add
imul
stos
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
call
scas
movb
xlat
jae
lods
popl
add
fadd
add
add
fwait
enter
add
out
ljmp
add
add
mov
add
shr
out
mov
add
mov
testb
aad
mov
jno
add
push
add
add
mov
lea
pop
shr
add
push
ror
lea
pop
mov
push
push
push
push
push
call
add
hlt
add
popf
into
rolb
add
push
add
jle
mov
add
mov
sahf
xchg
mov
add
jmp
add
add
mov
nop
pop
lret
mov
add
pop
add
pop
int3
add
add
mov
lea
pop
add
push
sub
pop
mov
push
pop
add
push
push
push
push
push
push
push
lea
push
call
add
rolb
add
jecxz
add
js
ja
add
add
add
add
pop
ja
fucomip
pop
mov
add
ja
add
xchg
flds
fs
add
add
add
scas
out
pop
test
pusha
and
notb
dec
call
add
add
ficompl
add
shrl
jle
iret
cld
add
lods
add
mov
add
shlb
mov
add
std
mov
mov
mov
jmp
add
ror
add
add
add
add
lods
jae
pop
add
mov
mov
lea
pop
mov
and
push
rol
rol
pop
rol
push
shl
ror
add
ror
pop
rol
xor
push
push
push
call
add
add
jmp
add
mov
cmpsb
push
add
stos
mov
pop
je
add
add
add
fwait
add
mov
add
xchg
add
mov
int
add
cwtl
add
or
inc
cmpb
jne
push
push
push
push
push
lea
push
lea
push
call
xchg
push
add
jp
mov
add
filds
pop
add
int
fs
pop
scas
xchg
xchg
jo
push
imul
xchg
addr16
test
mov
jmp
mov
lea
pop
add
cmp
je
push
lea
push
push
lea
push
lea
push
call
mov
mov
add
cwtl
add
xchg
mov
add
repnz
mov
add
add
clc
testb
add
jecxz
lds
stos
stos
mov
add
add
mov
add
je
cmpsb
add
add
test
rcll
add
jns
out
out
sahf
add
mov
lea
pop
add
push
push
push
push
lea
push
push
push
call
pop
jecxz
xchg
xlat
jne
pop
stos
add
mov
mov
add
arpl
add
jmp
out
add
mov
out
hlt
pop
testb
fadds
je
mov
add
frstor
lea
pop
cmpl
jne
push
push
push
push
lea
push
push
lea
push
call
mov
push
push
add
shrl
ffree
add
add
popf
call
popa
incb
cli
jle
add
add
lds
shl
mov
out
outsl
add
xchg
add
add
add
add
jmp
stos
add
cwtl
lahf
cmpl
push
add
pop
xor
pop
push
push
push
push
push
call
add
in
add
add
add
nop
lods
cld
enter
shlb
jnp
add
add
lahf
add
cli
call
fs
lods
xchg
add
fwait
std
mov
faddl
add
std
push
add
int
xchg
push
pop
fadds
add
jp
fninit
lea
add
in
add
addl
mov
stos
out
mov
lea
pop
pop
push
push
push
push
push
call
out
push
mov
pop
test
add
rorb
add
add
jns
jno
test
mov
arpl
add
add
pop
add
add
mov
pop
add
push
add
into
rorl
pop
push
push
push
push
push
lea
push
push
push
push
call
aam
add
xchg
add
out
mov
pop
ljmp
add
rolb
mov
add
cmpsl
push
push
xchg
arpl
add
add
lret
push
pushf
in
add
mov
mov
add
add
add
add
xchg
repnz
add
add
sar
aad
lods
pushf
add
cmpb
add
mov
lea
pop
pop
push
dec
rol
pop
pop
leave
push
sub
pop
ret
push
inc
pop
mov
push
push
lea
push
lea
push
push
call
add
mov
add
jne
add
in
add
mov
arpl
add
push
in
pop
add
cld
add
add
push
js
popf
add
stos
out
lock
aam
cmpsb
mov
add
ret
data16
lods
add
mov
mov
add
fdivrs
data16
mov
lea
pop
add
push
push
push
lea
push
lea
push
call
add
ljmp
int3
add
push
add
in
rorb
add
loopne
out
cwtl
bnd
test
add
add
xlat
call
mov
add
mov
stos
mov
push
add
add
rol
addb
les
push
push
push
call
xchg
lods
lahf
test
xchg
movsb
push
push
stos
add
cmpsb
movsl
xchg
add
testb
mov
add
iret
add
push
add
fwait
push
add
pop
add
push
shr
ror
xor
pop
xor
push
push
call
mov
ja
nop
imul
mov
jno
add
nop
mov
xchg
loope
add
add
mov
add
arpl
jns
add
sti
add
add
add
test
add
xlat
lret
popl
aam
mov
lea
pop
add
push
lea
push
push
call
add
xchg
into
popa
mov
push
clc
movsb
xchg
fwait
add
add
add
hlt
add
mov
sti
add
xchg
push
jmp
pop
mov
je
leave
push
mov
add
add
xchg
stos
add
lea
pop
add
push
push
lea
push
push
lea
push
push
call
mov
and
add
xorb
add
add
imul
js
jp
add
arpl
add
add
loope
repnz
into
add
add
loop
js
out
test
jmp
add
jbe
addb
mov
mov
mov
add
add
cmc
cli
jmp
popa
sbb
push
add
add
add
pop
pop
push
push
lea
push
push
push
push
push
call
js
xchg
add
jno
push
push
xchg
popf
add
lret
mov
add
ror
lock
jo
jo
jle
add
rolb
add
pop
imul
add
imul
int3
fnstsw
in
test
out
mov
lea
pop
mov
push
shl
dec
pop
push
push
not
pop
call
xor
push
shr
pop
pop
push
shr
add
pop
pop
pop
push
shl
rol
not
pop
pop
push
push
push
call
jmp
lcall
add
mov
notb
push
mov
mov
mov
sti
add
add
pop
pop
ja
scas
add
mov
bound
movsl
push
add
insb
mov
cbtw
xchg
mov
xlat
pop
stos
mov
mov
add
add
pop
pop
leave
push
pop
ret
push
push
push
push
push
push
push
push
lea
push
call
add
xchg
add
ja
add
fstps
add
and
push
fldl
add
insb
pop
add
add
add
out
add
add
test
mov
aad
mov
data16
push
push
rol
not
pop
mov
push
dec
add
pop
add
push
xor
pop
push
push
shl
pop
push
push
push
push
call
xchg
pop
add
add
insb
add
movl
lds
add
add
out
jecxz
add
lret
test
add
data16
mov
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
add
add
fstpt
arpl
not
add
out
add
movsb
lret
pushf
lods
mov
add
lcall
add
add
repnz
add
pop
pusha
les
push
rcrb
insb
lret
add
xchg
add
mov
add
fadds
fadd
add
std
add
sti
jecxz
lock
pop
push
push
push
push
lea
push
lea
push
lea
push
call
add
fdiv
add
ficompl
mov
add
add
cli
push
mov
jmp
push
xchg
mov
add
add
in
xchg
int3
ror
clc
test
xchg
add
lds
add
xchg
jge
xchg
fnsave
fstpt
add
scas
icebp
push
jnp
sahf
jmp
pop
pusha
into
popf
add
add
pop
pop
push
push
push
push
push
push
call
stc
jns
xchg
add
xchg
xchg
stos
mov
pop
add
lahf
addr16
add
icebp
jo
fistps
add
mov
bound
pop
mov
mov
andl
mov
add
pop
lea
sub
push
inc
sub
not
pop
mov
push
shr
sub
pop
shr
push
not
sub
rol
pop
add
push
add
pop
mov
add
push
push
push
push
push
push
call
xchg
fildl
mov
mov
xchg
add
jl
jmp
add
add
stc
add
pop
hlt
fld
add
pop
xchg
push
xchg
add
mov
add
mov
mov
out
cmc
cltd
add
sarl
pop
into
jmp
popf
jae
add
sbb
jae
popl
push
dec
pop
mov
push
lea
push
lea
push
push
lea
push
push
call
out
add
jle
jo
pop
jns
fcmovnu
insb
ret
add
aam
in
add
testl
mov
add
jge
mov
mov
jno
jae
add
lret
int3
add
pop
add
push
ror
shl
pop
xor
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
add
stos
mov
int3
in
add
push
add
add
testl
add
xlat
je
add
jno
push
clc
add
flds
incb
add
push
addl
ret
add
mull
mov
lea
pop
lea
push
sub
sub
inc
pop
mov
push
add
pop
add
push
sub
add
shl
pop
xor
push
shl
dec
not
pop
rol
push
shr
inc
pop
nop
nop
push
push
push
push
push
push
call
cli
add
push
add
imul
stos
iret
add
add
add
add
push
scas
xchg
add
nop
jge
push
mov
add
in
add
mov
add
rolb
add
test
mov
mov
lea
pop
xor
push
lea
lea
dec
ror
pop
nop
push
lea
push
push
push
push
push
lea
push
call
stc
mov
pushf
add
adcl
jecxz
add
loope
leave
lret
fidivrl
add
mov
lcall
add
jnp
xchg
push
add
lret
add
pop
nop
push
add
sub
not
pop
inc
push
sub
dec
pop
nop
nop
push
lea
lea
pop
cmpb
jne
add
push
push
push
push
lea
push
push
push
push
call
stos
aam
add
xchg
mov
add
in
add
cld
jle
lock
mov
cltd
mov
cwtl
add
cld
cld
add
out
add
add
jo
stc
add
add
add
add
add
mov
movsl
add
add
js
add
add
mov
lea
pop
nop
nop
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
pop
popf
into
add
add
add
nop
std
add
add
add
test
je
test
push
imul
aam
rcll
lret
add
mov
lea
pop
cmp
je
push
not
dec
sub
pop
nop
push
add
pop
nop
push
add
inc
add
shl
pop
inc
push
rol
inc
pop
nop
nop
push
push
lea
push
push
push
call
add
add
mov
xchg
push
pop
jo
clc
std
pop
in
add
add
loopne
add
je
aad
pop
jmp
add
add
add
xchg
aad
clc
add
add
jge
mov
add
movsb
add
add
out
add
std
mov
mov
pop
addl
les
jne
jb
xor
push
push
push
call
push
stc
add
add
stos
sahf
add
lcall
add
xchg
outsl
mov
popf
lahf
add
ja
ret
ret
xchg
mov
push
jns
add
int3
jl
arpl
add
je
xlat
test
push
mov
sti
loope
mov
jmp
add
add
test
addb
mov
mov
std
cltd
mov
lea
pop
jmp
push
pop
mov
add
push
push
push
push
push
call
repnz
push
out
arpl
add
add
mov
add
fs
push
add
sahf
add
add
cli
add
xlat
mov
add
testb
in
add
add
add
js
add
shlb
data16
movzwl
push
push
push
push
push
push
push
call
pop
jle
pop
pop
add
int
outsl
add
mov
add
and
add
xlat
add
mov
add
add
add
in
loope
mov
mov
mov
add
mov
lea
pop
mov
add
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
insb
fldl
mov
xchg
add
add
add
gs
test
xchg
add
fiaddl
mov
xchg
in
push
iret
add
add
lea
add
bound
mov
mov
popa
loop
mov
add
loope
add
mov
add
fmull
dec
hlt
xor
push
sub
xor
shl
add
pop
xor
shl
push
add
inc
rol
lea
pop
xor
push
lea
shr
pop
shl
push
push
push
push
push
push
push
call
jge
test
ret
mov
push
add
in
add
push
in
pop
add
add
add
add
out
add
lock
jno
jo
lahf
add
add
rolb
sub
push
out
pop
mov
add
add
addr16
xor
push
rol
lea
shr
pop
shl
push
xor
not
inc
pop
xor
push
push
call
add
call
add
add
jns
test
jmp
jge
add
mov
xchg
xchg
flds
lods
add
push
in
add
add
mov
data16
ljmp
add
add
add
add
shrb
xchg
add
imul
test
add
add
jo
add
or
rcll
outsb
mov
push
push
lea
push
lea
push
push
push
lea
push
call
int3
add
jbe
add
xor
add
mov
add
enter
add
mov
add
and
push
add
loop
push
imul
faddl
aam
lea
add
int
imul
addb
xchg
fisubrs
mov
add
jmp
lea
jle
add
add
hlt
lea
pop
add
push
rol
sub
sub
pop
pop
push
shr
sub
add
pop
pop
pop
push
push
lea
push
push
call
add
stos
sahf
movsb
add
shrb
push
mov
movsl
add
mov
test
add
xlat
flds
add
add
in
add
add
add
pop
nop
addl
mov
xchg
add
xchg
jbe
hlt
lea
pop
pop
push
shr
pop
leave
push
lea
push
call
push
cwtl
add
fdivrp
bound
mov
mov
add
in
out
shlb
add
jecxz
in
pop
add
add
mov
add
add
hlt
hlt
adc
mov
add
pop
enter
pop
addr16
fstl
add
ljmp
fwait
xchg
orl
testb
ret
push
push
ror
inc
pop
mov
push
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
rcr
add
add
add
roll
add
add
add
add
int3
icebp
stos
call
flds
movsb
add
add
add
lcall
lods
mov
add
jl
add
add
pop
push
push
push
shl
shr
ror
pop
push
push
shl
sub
pop
mov
push
inc
rol
pop
mov
push
push
push
push
call
push
jecxz
jbe
in
mov
fcompl
test
stos
aam
add
data16
add
std
icebp
pusha
mov
leave
repnz
xchg
add
add
mov
add
add
add
mov
into
lock
add
mov
stos
leave
stos
add
mov
add
popa
push
stos
insb
jb
add
mov
lea
pop
mov
push
lea
pop
test
je
push
push
push
push
push
push
push
push
call
xchg
jno
ja
add
scas
add
in
incb
add
movb
mov
add
mov
cld
arpl
ja
fstl
jge
pop
pop
add
hlt
add
mov
pop
add
int
add
add
mov
lea
pop
mov
push
lea
push
push
push
call
ficompl
add
lret
add
add
popa
push
incb
ret
add
xchg
iret
movl
divb
push
pop
int
add
sti
add
add
imul
rol
mov
loope
icebp
rcl
scas
data16
mov
jo
add
cmpl
test
push
orb
test
je
push
push
push
call
imul
push
add
add
loope
lea
testl
add
jbe
mov
in
add
lods
xchg
mov
add
enter
add
loopne
add
jbe
add
add
int
movsl
orb
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
pop
fnstenv
add
int
fiaddl
add
pushf
xlat
rolb
mov
add
mov
add
add
mov
add
test
popl
lcall
add
lods
add
add
add
xchg
fldl
mov
out
mov
sub
dec
or
pop
push
push
push
push
push
push
push
push
call
add
add
ja
mov
imul
add
add
xchg
xor
jb
in
add
jno
in
mov
add
xchg
testl
nop
add
out
add
ljmp
roll
add
push
popa
add
add
arpl
xchg
jae
loop
xchg
lret
jne
add
fdivs
sar
nop
mov
fmull
cmp
je
push
lea
push
push
call
add
add
enter
jle
add
popl
add
pusha
add
add
loope
ficoml
add
add
add
push
mov
add
add
cmpsb
add
out
js
add
bound
test
je
push
add
lea
add
pop
mov
inc
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
xorl
mov
add
fiadds
lret
repnz
add
add
add
in
add
add
add
mov
in
add
test
add
out
pop
add
movsl
gs
jo
add
stc
mov
outsl
enter
add
add
add
add
jge
add
fs
lea
pop
cmp
je
test
jne
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
test
add
add
jbe
add
add
pop
push
add
xchg
sbbl
stos
push
pop
add
add
cmc
aam
pusha
rcl
frstpm(287
xchg
ljmp
int3
lea
pop
xor
push
push
push
lea
push
call
add
insb
cmpsl
add
mov
add
loopne
rolb
add
enter
xchg
sahf
mov
cmpsb
add
xchg
leave
jl
mov
add
add
add
sti
push
arpl
jp
mov
add
insb
add
stos
scas
stos
mov
add
ljmp
aam
bound
pop
pop
pop
push
push
push
push
push
call
in
add
cmpsl
add
mov
fdiv
xchg
add
insb
shrb
hlt
mov
test
cli
add
add
mov
ffree
lcall
add
hlt
add
test
add
push
add
pop
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
test
lods
out
outsl
in
xchg
lock
int
data16
insb
pushf
movb
popf
add
mov
add
add
push
test
xchg
xlat
add
fucomp
add
add
mov
add
jp
add
add
add
js
faddp
js
add
out
add
mov
lea
pop
leave
ret
push
push
push
push
call
mov
stos
stos
jmp
enter
xchg
pop
out
aad
leave
ja
xchg
in
xorl
pop
add
add
loop
mov
rol
mov
add
add
add
xlat
add
iret
add
add
push
std
add
mov
in
std
xchg
add
mov
lea
pop
mov
push
dec
xor
pop
inc
push
inc
add
pop
cmp
jne
lea
push
push
push
call
flds
lret
add
add
push
add
enter
push
loop
add
popa
jp
test
mov
add
je
out
add
add
mov
add
add
cld
lea
pop
mov
push
lea
inc
ror
pop
test
je
push
push
push
push
call
add
mov
add
push
test
addb
into
mov
in
mov
cmpsl
add
add
sahf
add
add
add
outsl
flds
add
add
xchg
add
pop
mov
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
test
mov
add
popl
fadds
add
add
mov
cmc
fnstenv
pop
shll
imul
pushf
push
ret
add
aad
fmull
movb
loopne
test
call
into
sub
pop
mov
test
je
push
rol
pop
mov
push
lea
push
push
push
push
push
call
mov
cmpsl
add
add
mov
add
add
jbe
add
rolb
add
mov
clc
add
mov
imul
add
add
fildl
add
loopne
fmul
lods
add
pop
add
push
push
push
lea
push
call
add
in
xchg
pusha
addr16
jae
ret
push
imul
cld
add
jp
movsb
jge
xchg
add
add
loopne
jbe
add
xchg
pop
xchg
mov
cli
fcomps
add
xlat
jns
les
xchg
add
add
aad
mov
push
cmc
clc
add
adc
loopne
test
inc
stc
call
pop
xor
push
lea
push
push
push
call
push
push
out
into
add
add
ja
mov
lods
ret
add
add
cmpsb
incb
movb
add
add
add
add
add
mov
lea
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
add
push
in
mov
add
pop
mov
jmp
fildl
outsl
add
add
add
add
cltd
into
add
add
add
into
mov
xlat
add
shr
add
xchg
mov
out
cmc
add
xchg
add
in
clc
insb
sti
add
in
lea
mov
sub
push
push
push
call
add
pop
add
add
add
cwtl
xchg
add
jno
int
jl
add
add
notl
ja
add
add
xchg
stc
pop
sarb
add
add
mov
lea
pop
pop
push
push
lea
push
lea
push
call
les
mov
leave
pop
popf
mov
jmp
popa
sahf
add
add
imul
addl
jbe
in
icebp
gs
jmp
in
add
add
nop
add
jo
test
iret
xlat
push
add
add
add
subl
cmpsl
mov
mov
roll
scas
jo
add
mov
lea
pop
leave
push
lea
push
push
lea
push
push
push
call
xchg
add
add
stc
loopne
jl
sarb
add
mov
add
out
add
jecxz
xchg
xchg
add
add
add
stc
lahf
lcall
add
add
add
pop
fiaddl
rcrb
cwtl
addr16
add
std
call
scas
add
loop
fmull
or
push
pop
lea
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
jbe
stc
add
pop
jb
mov
je
jbe
lcall
add
test
mov
xchg
mov
mov
add
lret
insb
mov
add
add
mov
enter
add
shlb
movsb
jl
ja
add
jmp
add
pusha
shlb
nop
add
addl
xchg
movsl
add
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
lcall
mov
add
add
xchg
push
shrl
jnp
xchg
mov
fldt
stos
mov
add
addl
in
icebp
add
std
add
ret
mov
push
add
arpl
into
add
lock
push
xchg
add
add
add
add
mov
rolb
hlt
lea
pop
pop
pop
push
push
push
call
ljmp
jecxz
jmp
cwtl
fstpt
les
imul
add
add
add
clc
push
xchg
movsl
add
jmp
js
imul
mov
popa
out
mov
jp
movsb
outsl
jecxz
idivb
jmp
add
stc
mov
pop
add
fmull
push
push
push
push
push
lea
push
push
call
out
add
stos
std
push
add
add
ret
add
pop
loop
stos
add
add
mov
add
lds
add
pushf
mov
sahf
mov
pop
push
into
add
outsl
mov
cltd
jbe
mov
icebp
mov
mov
out
add
jle
mov
xchg
shrb
jno
mov
lea
pop
leave
push
lea
push
push
lea
push
lea
push
call
add
add
add
mov
push
add
out
mov
add
fcmovbe
add
add
push
test
add
int
add
test
xchg
jns
pop
add
enter
add
add
mov
lea
pop
ret
push
lea
pop
mov
push
sub
pop
pop
push
inc
pop
pop
push
push
push
push
call
mov
mov
add
lea
cmpsb
jle
outsl
xchg
add
add
mov
lea
add
cwtl
fwait
rorl
add
add
movsb
add
jle
scas
jb
cwtl
fnstcw
pop
stos
add
jns
aam
bound
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
xchg
mov
add
add
rcr
mov
add
xlat
movsl
add
add
add
arpl
pop
lret
pusha
ficomps
push
repnz
add
les
pop
push
mov
pop
pop
leave
push
push
push
lea
push
push
lea
push
push
push
call
add
add
mov
push
add
loop
add
add
add
xchg
hlt
jne
add
loope
call
roll
ja
jp
mov
mov
jb
mov
add
lock
test
in
add
add
lea
fs
add
subb
add
fmull
or
xchg
and
xchg
icebp
je
inc
jno
imul
jo
imul
mov
je
xchg
xor
jne
lock
movsl
movsl
push
test
lods
ficompl
shrb
ss
paddusb
dec
sbb
lock
push
out
in
cmp
das
lcall
adc
leave
test
outsb
aam
movsb
or
fisttpl
enter
inc
mov
push
and
ror
out
fnstsw
frstor
inc
add
push
mov
sbb
pushf
cs
ss
xchg
int3
daa
aad
ret
out
insb
mov
mov
dec
stos
rcl
sbb
aad
inc
fs
hlt
xor
xchg
and
mov
movb
mov
int
fmuls
fxch
fdivp
pop
mov
pop
sbb
cmp
mov
xor
out
jl
cltd
mov
repz
lret
sbb
adc
call
repz
inc
dec
sbbl
unpckhps
pop
mov
and
add
or
ss
aad
rcrl
data16
stos
mov
xlat
out
mov
pop
inc
push
and
fs
jae
jbe
loopne
pop
pop
fmull
jbe
mov
lahf
or
mov
mov
cmp
lret
or
bound
imul
loop
sbb
sub
xchg
mov
fdivs
mov
xor
rcl
lods
add
xor
in
sub
xor
icebp
dec
and
loopne
mov
xchg
pushf
int
enter
mov
mov
and
push
sub
xor
test
nop
and
cmp
push
jl
jno
xchg
popl
jg
jmp
test
jg
inc
daa
xchg
cltd
dec
inc
dec
or
inc
scas
lods
ret
fnsave
fsubp
sub
push
sbb
cmp
push
adc
push
inc
inc
mov
sbb
sub
mov
subb
or
pop
xor
lahf
xor
clc
mov
loope
pop
std
mov
lods
mov
lahf
int
jp
or
ja
in
mov
pop
or
iret
mov
push
shlb
jbe
pushf
ja
jbe
call
sbb
dec
xor
jmp
nop
mov
cli
mov
lea
lret
cmpl
inc
add
outsl
adc
mov
mov
xchg
pop
push
ja
sub
in
mov
push
bound
sub
pop
lahf
adcl
sub
pop
into
fwait
cmpsl
dec
std
shl
les
jl
push
lods
push
mov
in
mov
jns
leave
xor
dec
dec
cmpsb
das
push
mov
push
mov
cmp
and
sub
or
imull
cli
popf
aaa
push
pop
add
xchg
adc
and
leave
inc
and
push
sub
xor
fisttpl
or
sti
dec
and
insl
mov
lods
adc
test
xchg
cmp
cmpsl
movsl
push
adc
not
mov
sbb
fnstenv
xor
jae
inc
add
in
cmp
aas
or
fsubr
mov
sub
inc
jb
adc
xlat
sub
clc
gs
xlat
xor
testl
and
arpl
out
movsl
jp
fidivrl
mov
xchg
jmp
sub
lods
xchg
sub
xor
cmp
test
rorl
lods
push
mov
lcall
push
fdivrl
push
call
mov
int
sub
jle
jne
jle
fucomp
dec
push
push
inc
mov
cmpsb
imul
fsubrl
sti
test
repz
fnstenv
ljmp
lds
iret
mov
push
clc
scas
push
pusha
push
lods
repnz
jge
faddl
jecxz,pt
iret
cmp
jmp
les
or
enter
vpmullw
fisubs
out
cmp
and
cwtl
fistps
or
mov
mov
fimuls
in
sub
jp
fwait
xchg
sub
mov
lret
jnp
cld
rclb
test
icebp
cmp
lea
push
xchg
dec
dec
fadds
cmp
cmpsl
fnstcw
cmpsb
jns
fstp
fldcw
xor
ss
push
xor
mov
inc
ds
mov
adc
sub
mov
pop
lret
lcall
test
xor
jle
mov
ror
jmp
mov
into
mov
ficomps
repz
ret
iret
test
aad
xchg
jl
mov
fnsave
sbb
arpl
push
test
push
mov
jae
or
push
xchg
mov
ja
pop
sub
pop
mov
cmc
mov
cmp
mov
mov
std
cmp
sub
xorb
mov
es
jo
out
pop
jle
js
xor
pushf
adc
fcompl
daa
push
adc
mov
sbbb
test
mov
jbe
adc
pop
mov
dec
insb
imul
mov
hlt
dec
inc
stos
cmc
push
insl
and
and
mov
lea
shufps
sbb
xchg
push
jo
dec
mov
nop
sbbl
ret
jb
jb
sub
fisubrl
pop
mov
data16
movsb
mov
jno
arpl
cmp
imul
loop
fiaddl
popa
cld
jl
in
lock
dec
jp
sub
mov
adc
clc
adc
jmp
jns
enter
in
mov
sub
aas
addr16
lock
jge
sbbl
push
loop
orl
pop
loop
xor
add
mov
rcrb
loopne
loop
inc
jmp
pop
rorb
lret
mov
jns
jbe
mov
xchg
movsl
adc
mov
aam
pop
pop
dec
jbe
pop
jns
mov
xor
mov
add
mov
pop
xchg
imul
mov
ds
scas
repz
pop
mov
push
ljmp
adc
outsb
xchg
test
fbld
add
sub
jnp
sbb
stos
popf
jg
xor
sbb
cmc
hlt
pushf
imul
adc
int3
pop
cli
leave
in
rcrb
int
mov
xchg
nop
aad
rcrl
cmpsb
adc
imul
or
movsb
das
imul
jp
stos
mov
mov
xlat
cmp
push
movsl
jge
test
jb
push
push
fcomps
jnp
push
popf
mov
sbb
cs
popf
in
sbb
stc
iret
mov
aaa
xchg
stos
or
add
mov
inc
inc
adc
out
into
mov
jg
frstor
fcoml
xchg
lods
mov
es
ficompl
dec
jbe
sbb
inc
jne
pop
or
inc
mov
mov
cli
std
frstor
mov
xor
xchg
fwait
mov
lcall
sub
pop
jecxz
out
xchg
xor
repz
shll
pop
ds
mov
sahf
test
mov
dec
or
std
gs
pusha
pop
pop
cmpl
mov
sbb
in
sahf
sub
lcall
add
jg
icebp
adcb
dec
insb
lea
jg
ficoms
imul
push
js
outsl
sbb
sub
sbb
outsb
lea
aad
icebp
add
leave
testb
leave
out
inc
xchg
jb
cmp
xacquire
enter
fdivrl
fldt
cmpsl
test
inc
xor
xchg
shrl
and
inc
loopne
adc
test
mov
test
adc
cmpsb
hlt
jb
xchg
cltd
push
xchg
mov
dec
aaa
ficomps
sub
push
mov
inc
fwait
lcall
xchg
mov
mov
shrl
mov
das
cmp
jne
out
sbb
and
fldenv
inc
je
cmp
popf
imul
clc
mov
in
xchg
dec
add
jnp
ja
mov
mov
pop
or
xchg
cmp
das
ja
repz
or
xor
cmpsb
adc
call
ljmp
ljmp
ja
aad
or
mov
pop
mov
jbe
jb
popf
in
sbb
sub
mov
cs
in
das
inc
pop
in
das
mov
xchg
adc
bound
movsl
sub
shrb
and
mov
sbb
pushf
ljmp
mov
xchg
jns
into
insl
pushl
lds
adc
inc
rclb
hlt
ss
xchg
jge
rcll
hlt
imul
pop
inc
or
pop
rcrl
ret
popa
daa
jl
push
int
fwait
inc
inc
dec
xchg
push
jg
or
out
mov
fstpl
push
xchg
cld
mov
jmp
aad
mov
out
negb
les
lods
sti
sbb
or
out
inc
pop
pop
inc
add
dec
add
inc
dec
repnz
pop
lahf
push
inc
mov
jg
loopne
shlb
addl
sbb
andl
mov
lret
movsl
sub
cmp
cwtl
aas
loopne
or
jb
jae
sti
mov
jne
movb
cwtl
fistl
sbb
aad
xchg
pop
pop
jp
dec
fildll
arpl
inc
dec
push
mov
insb
push
mov
add
adc
jb
jns
cld
add
mov
and
xchg
rclb
cli
lret
jmp
fldl
or
mov
fadds
and
std
pop
decb
jmp
rcll
lea
inc
in
mov
fiadds
push
xlat
test
pop
pop
inc
pop
cld
daa
push
mov
pop
mov
mov
mov
call
sub
xchg
adc
stc
mov
jecxz
decl
jl
mov
inc
aam
xor
jg
je
sbb
cld
adc
xorl
jg
inc
iret
imull
mov
fbstp
pushf
mov
stc
and
xchg
movsb
mov
xchg
pop
ljmp
adc
mov
mov
leave
cmp
dec
xor
jb
lret
test
in
cmp
add
mov
das
test
xchg
sbb
adc
cmp
sbb
push
lret
push
or
out
and
inc
pop
and
push
outsl
sbb
pushf
data16
jmp
popa
int3
jp
outsl
leave
repnz
outsb
jb
or
bound
adc
scas
pop
mov
out
iret
cmpsl
and
adc
dec
inc
mov
pop
jbe
cli
push
lret
int3
inc
data16
cltd
xlat
mov
mov
mov
outsl
add
aas
jl
jmp
inc
shrb
push
cmp
mov
pop
push
lret
ret
rcrb
repz
push
cmpsb
xchg
insb
xchg
arpl
jp
xchg
pop
and
mov
push
lret
fstpl
push
push
lea
sub
inc
js
fnstenv
adc
xchg
or
mov
not
xchg
mov
and
sbb
sbb
test
scas
xor
adc
aad
je
out
jl
js
jns
mov
aad
mov
ja
icebp
sub
push
push
or
call
iret
fsts
stc
scas
fildl
xchg
push
push
repnz
lods
pop
pop
icebp
ret
cmpb
pushf
insb
inc
xchg
cmpsl
push
in
out
fisttpll
lret
mov
mov
mov
inc
mov
call
test
and
push
mov
dec
test
cmp
lahf
sbb
or
adc
fs
inc
and
scas
push
in
jle
out
sbb
outsl
fnsave
pop
sub
divl
pop
into
xchg
dec
loopne
sbb
lcall
dec
loopne
cmp
jl
test
jbe
mov
cmc
cmc
fs
cli
jge
jns
jg
js
xchg
mov
outsb
mov
cmp
fisttpl
es
loop
test
rcll
cmc
xor
andl
push
pop
outsb
rcrb
scas
inc
addr16
ja
jg
test
in
outsb
sbb
adc
pushf
xor
jne
int3
adc
dec
test
outsl
sub
lock
and
cmp
xchg
sbb
jp
pop
and
fcoml
sahf
addr16
stos
fs
movsl
mov
sarb
pop
es
sti
xorb
push
or
pop
sti
fidivs
pop
roll
cld
and
loop
loope
xor
inc
add
dec
dec
fnstcw
push
cmp
pop
mov
lds
les
mov
sub
inc
add
cli
fnstenv
xor
add
cmp
push
inc
add
lock
leave
scas
enter
out
jmp
mov
xchg
adc
lret
lret
cmpsb
xchg
pop
js
push
hlt
je
cwtl
or
and
clc
pop
inc
and
and
xlat
mov
ljmp
test
add
adc
dec
pop
xchg
enter
jle
mov
push
mov
les
xor
lcall
jg
push
fiadds
test
xchg
rcr
bound
xor
ja
mov
sbb
pop
es
daa
adc
jnp
dec
jle
jp
jle
popf
mov
fisubs
js
mov
pusha
inc
into
inc
cmp
xor
cld
add
subl
fdivs
pop
cmp
lret
aad
sub
fwait
mov
or
adc
sahf
sub
test
es
jmp
xor
ja
push
fsts
ret
jne
je
imul
dec
jne
sub
jnp
shll
xchg
sbb
fsubl
stos
push
lret
push
add
inc
sbb
xor
fcmove
sbb
jg
mov
push
inc
in
sbb
addb
jge
js
push
scas
jp
pop
add
sub
adc
repz
dec
dec
mov
out
xlat
jmp
mov
xor
add
leave
add
sbb
cwtl
test
shl
fmuls
xchg
mov
aaa
test
mov
xchg
jecxz
shll
out
jae
es
fsubrl
sub
arpl
xor
jle
insb
insb
fucomip
adc
int3
fsubrs
ss
jp
or
data16
sbb
lret
out
fsubl
shll
add
xlat
cltd
fmull
insb
fcmovu
lahf
int
sub
sub
xchg
je
out
mov
and
cmc
mov
dec
xchg
call
and
fwait
cmp
mov
mov
inc
xor
rol
mov
test
xor
xchg
mov
push
lcall
das
dec
cmp
pop
push
mov
fistpl
sub
fistps
pop
sbb
push
dec
fnstenv
in
pop
stc
fidivl
addr16
sbb
push
in
mulb
lods
jb
pop
push
in
adc
cmp
ret
jnp
das
scas
cmovs
rcrb
dec
add
mov
addr16
clc
push
lahf
mov
arpl
pop
enter
call
aas
inc
mov
es
xlat
clc
mov
cmpsl
aad
icebp
repz
scas
negb
hlt
hlt
int
or
jns
mov
mov
dec
repnz
insl
int3
rcrb
jmp
and
shlb
inc
lods
xchg
cmp
loope
adc
xor
add
inc
mov
cltd
jecxz
push
clc
fldcw
and
jnp
sbb
mov
jo
scas
xchg
adc
roll
xor
insl
push
fs
mov
pop
inc
int3
pop
or
out
pop
nop
add
jg
outsl
int3
in
std
adc
out
sbb
push
xor
fstl
dec
jns
rcrl
negb
jne
xor
xchg
in
lret
jbe
add
pop
pop
mov
mov
sti
xchg
enter
mov
test
jb
sbb
in
pop
pop
in
jo
test
mov
pop
je
sbb
inc
ljmp
push
xor
inc
adc
lcall
mov
ja
rclb
mov
push
or
jle
and
sub
pop
lods
cmpsl
ret
cmp
xor
pop
pop
es
adc
ja
es
stos
adc
cmpsl
jnp
inc
xchg
pavgb
ficoms
push
cld
lds
jo
and
sub
dec
dec
ss
lock
inc
and
jnp
mov
dec
cwtl
pushf
xor
push
out
hlt
aas
clc
pop
sbb
aam
mov
into
in
inc
cmp
pop
je
std
mov
mov
jbe
xchg
inc
jae
adc
rcl
dec
cmp
pop
pushf
fistps
fdivrl
ret
pop
jns
mov
pop
aaa
imul
in
rcr
gs
mov
cmpl
nop
rcrl
add
inc
push
out
xacquire
je
shll
mov
push
fucomi
aas
outsl
cwtl
in
js
cmp
inc
clc
mov
movsb
jmp
movsb
mov
pop
sbb
sbb
mov
jne
int
test
cmp
addl
xchg
pop
in
jb
add
mov
pop
dec
addl
pop
cmp
xor
push
movsl
repz
mov
sarb
leave
jns
or
ljmp
popl
xor
mov
mov
mov
inc
xor
out
fldl
inc
jle
scas
gs
mov
xor
sub
ja
add
cmp
inc
sbb
push
inc
aas
pop
and
fadds
or
jns
insb
mov
loop
sub
xchg
jae
pop
ljmp
add
and
test
pop
in
rcrl
sub
imul
sbb
lret
xor
dec
dec
insl
sbb
stc
cwtl
sarb
pop
xchg
lret
and
sbb
sti
sbb
push
add
jno
in
adc
mov
shrb
in
fwait
push
mov
adc
cmp
fdivl
mov
incb
cmp
dec
pop
andb
lods
mov
cmp
loope
aas
fnstcw
jnp
fistl
inc
mov
jl
adcl
pushl
lahf
inc
jne
test
aas
xor
outsl
repz
or
push
int
sahf
pop
decb
movsl
cs
sub
dec
cwtl
inc
xlat
mov
nop
sahf
fcmovnbe
fwait
ljmp
lock
andl
sub
cld
faddp
mov
pop
mov
mov
lods
iret
xchg
cmp
push
in
bswap
mov
ret
jns
push
and
aam
pushl
mov
gs
xchg
push
push
xchg
je
pop
into
mov
push
xor
mov
pop
sbb
pusha
cmp
inc
std
sub
jp
jmp
ds
das
lret
mov
int
sbb
push
push
pop
or
xchg
jp
jb
adc
jle
sbb
push
lahf
nop
pop
icebp
mov
ljmp
mov
test
frstor
loope
pop
subl
mov
xchg
ret
push
or
in
or
push
or
repnz
dec
ret
scas
mov
imul
stc
cmp
cs
fimull
std
push
push
xchg
xor
cs
in
xor
xchg
arpl
aad
hlt
xchg
ss
stos
or
loop
lds
mov
insl
outsl
fstpl
xchg
rcrl
xor
mov
jne
dec
enter
jnp
cmpsl
dec
iret
xor
int
add
jecxz
cmp
sub
les
out
jne
int
pop
mov
or
into
mov
dec
or
shrl
xor
mov
sbb
in
pop
je
or
jne
fildll
jge
sub
out
lcall
lret
ds
lds
push
mov
cmp
cmp
aaa
ljmp
push
cmp
lods
pop
mov
rcll
outsl
into
leave
not
cmpsb
jmp
fnsave
add
mov
pop
gs
fsubr
sub
aad
stc
adc
mov
push
add
fstl
fnstcw
jle
dec
iret
xor
sbb
jae
nop
in
insb
cmc
add
popa
xchg
cmp
adcl
leave
xor
sarb
ljmp
in
push
add
sarl
pushf
clc
shr
pop
aaa
mov
adc
dec
jmp
jnp
loop
jnp
aam
cltd
stos
mov
xlat
mov
arpl
hlt
pusha
add
xor
or
mov
imul
in
mov
pop
int
filds
mov
xor
nop
xlat
pop
inc
or
cmp
push
mov
sahf
lret
lds
js
sbb
out
test
jns
insl
push
dec
mov
inc
test
sbb
jnp
cmp
inc
movsl
lcall
cmpsb
pop
mov
mov
inc
mov
fldl
or
cmp
fcomps
idiv
sbb
inc
insb
fsubrl
push
out
jecxz
sub
testl
and
sbb
fs
fldt
jle
sub
test
push
or
insl
jo
cli
out
sub
in
aaa
mov
xchg
add
dec
inc
jb
xor
push
pop
sahf
jl
imul
lret
dec
std
pop
jle
es
push
sub
inc
in
dec
mov
jne
lods
adc
std
inc
aas
inc
popf
sbb
gs
push
divl
out
sbb
mov
xor
jle
lea
repnz
fisubl
and
aaa
adcb
out
add
cmp
sub
jae
mov
lods
ljmp
adcb
fldt
adc
mov
sbb
adc
cmpsb
shlb
sub
jb
lods
and
lds
push
out
addr16
outsb
rcll
sub
push
inc
mov
stc
ret
jnp
addr16
lcall
jp
insl
test
lret
imul
mov
int
sub
sarb
or
leave
mov
mov
mov
mov
shlb
pop
scas
push
and
cmpl
hlt
or
loopne
jno
sbb
push
js
dec
mov
mov
jb
imul
loope
jmp
dec
jne
mov
xor
push
push
nop
cmp
insl
push
xor
test
cmp
xor
lcall
mov
gs
fmull
out
mov
mov
lret
jge
mov
aam
sub
repz
add
mov
or
push
cmp
call
cmp
imul
jno
shr
pop
fmull
aas
pop
les
xchg
bound
mov
mov
cmp
lret
out
in
pop
jg
jbe
mov
inc
add
cmp
adc
popf
mov
int3
add
push
push
jle
cmp
or
in
test
je
ss
inc
add
out
jae
jmp
xor
xchg
mov
cmpsl
aad
popa
jge
sub
cmc
pusha
jae
or
fldcw
push
rcll
lret
and
jle
inc
mov
mov
push
cld
pop
mov
push
mov
insl
xor
mov
and
mov
xor
dec
and
lods
std
icebp
xor
push
inc
shl
cmp
pop
mov
push
push
adc
mov
cmpsb
dec
imul
inc
jg
fs
or
mov
in
or
aas
cmpsl
mov
mov
mov
stc
mov
adc
nop
push
fidivrl
fnstenv
shll
cmp
dec
push
notl
fdivrs
mov
xor
ss
lret
push
xor
xor
aas
sub
stos
imul
inc
shrl
or
dec
cmpl
push
fisubs
cmp
test
pop
js
aad
mov
adc
outsl
repz
pop
adc
test
sbb
mov
mov
int3
mov
sbb
cmp
fildll
xor
arpl
and
adc
test
xchg
or
pop
cmc
add
loope
cli
push
xchg
cld
mov
loopne
jb
inc
das
outsl
pop
out
sub
fnstenv
outsl
nop
pop
dec
cmc
mov
push
movsb
imul
mov
mov
lock
aad
stos
cmp
cmp
jmp
scas
aas
adc
loopne
pop
pop
sbb
sub
repz
and
pop
popf
dec
lods
xchg
adc
bound
jbe
push
outsb
pmaxsw
mov
fldenv
repz
adc
jp
ds
addr16
jb
cld
aaa
mov
lahf
cltd
ss
cld
sbb
cli
xchg
js
push
test
jl
das
jne
adc
stc
lahf
les
fldt
pop
cltd
fxch
fmul
add
mov
ret
mov
ret
and
cmpsl
inc
movsl
lock
pop
lret
lcall
jl
cmpsl
xor
adc
cwtl
std
xor
mov
andl
dec
addr16
decl
dec
xlat
icebp
test
pusha
stc
pushf
es
pop
xor
movsl
pop
icebp
stc
fisubrs
lret
mov
or
xchg
ret
sub
xchg
sbb
cmc
mov
lds
rcl
vsqrtpd
rolb
arpl
pop
out
movsb
pop
jp
leave
pop
add
int3
add
aam
arpl
dec
outsb
or
mov
jne
pop
xchg
xor
jo
xchg
push
lds
addl
pop
jne
in
cmp
cld
and
mov
sbb
cmp
lds
or
xchg
mov
dec
pop
mov
lahf
in
cmc
cmp
mov
lods
lahf
and
xchg
xor
mov
sbb
sti
addb
and
fwait
nop
add
js
and
sahf
or
add
cmp
icebp
mov
fistl
cwtl
xor
orb
mov
sbb
sub
movsb
inc
jne
jecxz
out
das
xor
mov
mov
mov
pop
xchg
xchg
jns
jns
jns
lods
dec
cmpsl
fdivs
or
or
lahf
cmp
icebp
or
nop
xchg
cltd
mov
sbb
add
insb
es
movsl
add
mov
and
scas
arpl
inc
inc
push
xchg
mov
xchg
mov
or
in
xor
outsb
or
scas
out
add
fidivrs
pop
push
sub
mov
popf
cmp
jmp
out
sbb
insl
xor
inc
or
sbb
mov
pop
jg
subl
jns
xchg
dec
arpl
lret
xor
loopne
es
dec
mov
xchg
fstpt
imul
jmp
push
mov
mov
and
mov
mov
sub
add
push
aas
loopne
ss
cmc
xchg
lock
inc
mov
dec
mov
adc
jmp
dec
cwtl
ja
stos
xor
icebp
mov
inc
mov
jo
imul
nop
rclb
jns
jnp
xchg
mov
mov
pop
cmp
adc
popf
lods
mov
adc
fisttpll
imul
xchg
adc
call
mov
mov
in
aam
add
test
sub
je
dec
pop
mov
inc
aas
or
cli
mov
pop
inc
xchg
scas
scas
mov
dec
daa
pop
mov
cmpb
mov
mov
jnp
xchg
adc
sub
adc
push
fs
out
pop
in
or
cmp
inc
mov
iret
xor
inc
sub
fistpll
shlb
or
xor
aas
push
dec
sbb
mov
lods
and
cltd
outsb
sbb
int3
mov
dec
adc
mov
fldcw
out
push
or
dec
aaa
xor
jecxz
cld
sub
sub
pop
notb
flds
xor
nop
adc
sub
mov
xchg
push
and
outsb
jl
test
imul
lods
xor
outsb
sbb
mov
xchg
and
cmp
aad
adc
push
lods
jge
or
icebp
sub
mov
add
lock
nop
push
sub
dec
sbb
dec
push
repz
mov
mov
cmc
mov
shll
imul
cmpsl
ret
cmc
lcall
xchg
cmp
add
sar
bound
in
add
xchg
insb
das
sarb
mov
scas
xchg
pop
push
ret
jg
filds
sbb
movsl
pushf
sub
xor
push
scas
icebp
shlb
pusha
xchg
aam
xor
jle
sbb
int3
xor
dec
sub
in
arpl
mov
add
dec
in
cmp
xchg
mov
ljmp
popa
xor
iret
jae
js
cmp
shr
cmpsl
fildl
repz
loop
loopne
cwtl
outsb
fisttpl
jle
adc
mov
adc
xor
movsb
pop
pop
cmp
imul
cmp
sbb
lahf
push
ja
or
subb
jmp
xchg
out
pop
sub
mov
xchg
sbb
inc
in
mov
mov
in
adc
push
mov
out
sbb
fldcw
push
xchg
ret
testl
cmp
cmp
mul
jne,pt
cmpsb
adcl
lods
movsb
or
jp
ret
jns
popa
js
push
sub
mov
add
icebp
imul
sub
mov
push
push
test
pop
cli
push
scas
imul
mov
or
shlb
push
xchg
and
pop
aas
call
mov
dec
push
out
jl
les
mov
push
in
pop
fstpl
jne
jne
addb
hlt
sbb
mov
jb
js
js
fistl
scas
iret
sub
aas
daa
xor
xor
dec
stc
pop
mov
arpl
rol
cwtl
cmpsb
mov
sahf
aaa
jae
sbb
clc
cmp
ds
adc
sbb
stos
sbb
xchg
subl
mov
daa
mov
and
imul
sti
dec
mov
daa
cmp
lret
lds
adc
sti
outsl
out
dec
mov
bound
xor
cwtl
cwtl
inc
and
test
mov
push
in
xor
dec
repz
push
cmc
jecxz
mov
adc
cld
mov
lret
pop
cmp
pop
or
mov
mov
jl
ror
int3
cld
es
or
daa
mov
out
adc
cmpsl
or
mov
cmp
jae
push
mov
mov
mov
adc
pop
push
add
mov
inc
loopne
cltd
lods
cltd
mov
cli
sbb
stc
je
adc
jb
or
dec
inc
loope
ret
int3
je
dec
push
pop
aaa
sub
or
fisttpll
pop
dec
sbb
aam
and
lcall
mov
daa
jge
stc
sbb
jno
mov
pusha
mov
push
push
cli
jo
es
and
addl
cmp
pop
cmp
cmp
xchg
popf
rol
or
cld
fmull
in
pop
jnp
lods
test
rclb
sub
imul
mov
pop
in
lcall
mov
pop
mov
in
add
iret
mov
mov
out
jbe
sbb
mov
jg
xchg
inc
push
and
test
xchg
sub
jne
mov
xorb
test
mov
and
mov
pop
test
int
es
dec
aam
stos
and
mov
pop
clc
fsubrs
lock
inc
mov
stos
daa
xchg
dec
test
fbstp
into
adc
outsb
mov
bound
cld
fisubs
pop
mov
mov
scas
push
adc
push
ss
test
adc
mov
sub
push
cmpsb
xorl
push
imul
cwtl
int
pop
stos
ret
mov
ds
fnstenv
out
call
sarb
inc
mov
xchg
hlt
jle
jne
push
inc
in
rcrb
std
push
mov
inc
mov
or
in
mov
test
jo
push
cmp
mov
shll
in
out
add
jle
cmp
dec
bound
mov
xchg
jb
lahf
rsqrtps
dec
roll
sub
cld
gs
add
adc
or
cmp
mov
mov
push
and
adc
sbb
mov
mov
ljmp
aaa
pop
jnp
pusha
cmpsl
cli
andl
dec
add
jle
aad
imul
lods
pop
dec
xor
test
lcall
xchg
push
dec
fistpl
adc
ja
dec
jmp
mov
sbb
adc
mov
lea
outsb
or
sar
add
jg
addl
mov
cmp
sub
mov
mov
ja
call
and
adc
xor
mov
xor
ds
or
cmp
aam
hlt
push
lret
test
mov
adc
cmp
lret
xchg
pushf
mov
xchg
sbb
dec
push
add
push
mov
rclb
in
flds
dec
cmp
mov
aam
rorb
pop
xchg
aam
aas
dec
clc
test
add
jl
dec
mov
lea
pop
xchg
push
js
iret
or
sbb
cmpsb
mov
mov
mov
dec
ret
dec
lods
xor
push
sub
or
sub
int
sti
xchg
jnp
movsl
add
notb
mov
iret
jns
je
aas
adc
stos
xlat
insb
popf
pusha
jge
adc
test
popf
loopne
ljmp
xchg
mov
cs
shll
fldenv
sub
in
adc
pop
and
mulb
mov
pusha
data16
xchg
jne
ret
cmp
decb
adc
ljmp
js
sub
fs
sub
mov
mov
adc
aas
cwtl
je
push
lret
scas
xchg
rcrb
ret
andl
jo
pop
out
lahf
sub
push
in
fisttpl
jle
push
insb
aas
jmp
in
inc
inc
adc
sub
add
jecxz
les
jl
mov
xor
stos
aad
gs
xor
mov
mov
mov
stos
xor
inc
cwtl
call
jmp
icebp
fidivl
sbb
lock
cltd
jo
out
mov
imul
not
cmp
subl
pop
aad
pop
adc
jl
popf
sbb
ficoml
cmp
mov
pusha
pop
pusha
fstpt
sub
xor
ret
divb
pop
loop
arpl
jae
and
or
push
inc
dec
fsubrp
test
push
and
dec
ljmp
jo
xchg
je
lods
jge
adcb
pop
mov
mov
imul
xchg
leave
sarl
daa
mov
outsb
add
xor
jae
add
mull
lret
inc
xor
push
xchg
stc
mov
sub
inc
sbb
test
insl
cmc
jg
jg
popf
pop
out
or
jge
jecxz
or
or
mov
int
and
sub
das
and
push
cwtl
sub
sar
lds
pop
or
mov
lea
and
leave
into
fistpll
xchg
loope
andb
inc
push
push
cltd
fstps
sub
iret
mov
xor
push
movsb
out
or
pop
aas
test
lds
xor
insl
outsl
xor
cmc
repnz
cmp
jb
fwait
pop
jbe
in
int3
and
dec
leave
das
mov
fmuls
sahf
test
sbb
call
sbb
dec
sahf
enter
jbe
and
dec
jnp
aaa
test
mov
std
push
fwait
gs
pop
test
data16
sub
movb
imul
iret
call
das
fnstcw
std
or
xchg
push
jmp
ret
stos
adc
mov
movsl
inc
pop
orl
lret
out
in
mov
loope
push
mov
aad
adc
and
inc
push
cmpsb
cs
cmpsl
cmp
sub
pushf
mov
jmp
or
push
ret
dec
mov
lods
inc
fs
subl
cmp
jge
loop
or
or
and
cmp
pop
scas
ljmp
mov
dec
movsb
sbb
cmp
shll
scas
arpl
int3
dec
aad
ficoms
movsl
xor
sub
test
jnp
adc
push
pop
pop
int3
push
dec
mov
sbb
outsb
outsb
pop
das
xchg
push
cmp
mov
pushf
jns
int
sub
or
idivl
mov
adc
pop
pushl
cmp
out
frstor
adcw
enter
in
push
push
mov
xor
loopne
repz
mov
loop
adc
xchg
jae
sbb
arpl
dec
jno
gs
in
sbb
mov
in
aad
push
dec
mov
rolb
mov
hlt
idiv
test
pushf
add
mov
xor
sbb
or
fwait
xchg
lock
cmc
mov
mov
inc
fnsetpm(287
push
hlt
icebp
pop
sub
mov
in
adc
lcall
shlb
and
dec
mov
ljmp
mov
adcl
leave
repnz
pop
cmp
into
stos
pushf
xor
in
fs
inc
inc
cli
cltd
pop
inc
xor
or
add
jle
xor
js
insl
dec
shrb
aam
pop
in
jb
mov
sbb
pusha
int
adc
stos
shrb
adc
jbe
out
aas
sahf
cmpsl
or
rcl
shl
push
aaa
jae
scas
mov
mov
std
adcb
sarl
fbld
cltd
sbb
dec
mov
add
mov
adc
fstpl
movsb
xchg
xor
loope
shrb
out
inc
frstor
sub
sub
pop
mov
into
jmpw
les
xor
ljmp
shlb
sbb
fwait
sub
mov
pop
dec
add
pop
mov
rcrb
hlt
mov
sti
outsb
and
inc
pop
cmp
test
jg
imul
rcll
push
pop
in
popf
fnsave
mov
les
arpl
or
scas
aas
push
ficoml
or
into
lret
xchg
pop
or
lret
test
fwait
dec
push
or
pushl
movsb
cmc
mov
jp
and
dec
test
lret
mov
in
dec
or
pop
cld
repz
lods
xchg
sub
and
inc
mov
sbbb
push
mov
xchg
xor
cmp
dec
cmpsl
jmp
popl
xchg
xor
call
ljmp
push
aaa
adc
xchg
out
scas
leave
jns
ds
fs
mov
sub
mov
jge
inc
push
xlat
dec
fsub
adc
and
shrl
or
shll
int
xchg
js
sub
mov
dec
sarl
in
insl
shll
pusha
or
fsin
fstpt
jl
nop
cmc
in
rorb
cwtl
loop
rcl
fxch
add
addr16
cld
mov
psubusb
in
pop
aam
mov
sbb
add
out
add
arpl
sarl
adc
shl
mov
jnp
out
sbb
pop
cltd
adc
call
nop
repnz
mov
cmp
stos
push
nop
lret
push
lcall
into
xchg
int3
xchg
mov
sub
pop
dec
dec
fistpll
dec
inc
call
ret
adc
sbb
and
add
xchg
mov
cmp
lret
push
xor
pushf
lahf
jmp
push
mov
jle
mov
movsl
call
xchg
xor
jl
fadd
or
mov
cmc
pop
mov
std
xchg
and
arpl
jge
push
out
adc
cld
xchg
mov
pushf
push
repz
cmp
inc
xor
fldl
sub
clc
inc
inc
pop
xchg
inc
rorb
xor
icebp
loop
sbb
and
mov
mov
jg
repz
dec
lahf
call
rorl
jmp
cs
std
sub
jl
mov
sbb
push
gs
rcrb
cmp
aam
lea
dec
cli
sub
mov
push
jbe
mov
lods
jmp
jp
dec
pop
cmp
inc
lret
test
scas
adc
sahf
imul
lock
movl
lods
je
cmp
jnp
sub
rcr
cli
mov
pop
xchg
dec
or
ret
lods
cmpsl
pop
test
xlat
dec
fwait
lcall
pop
push
aas
arpl
jae
mov
sbb
imul
push
nop
rcl
add
loope
bound
repz
aas
nop
inc
push
push
fdivrs
inc
popa
mov
repnz
popa
ds
je
loope
jbe
xor
leave
popa
push
mov
daa
mov
mov
cwtl
call
mov
sarb
sbb
mov
sub
pop
dec
adc
cmpsb
jae
jbe
sub
mov
push
cmp
jbe
cmp
pop
dec
pop
sti
dec
mov
nop
mov
mov
mov
adc
cwtl
test
aam
dec
int
cmp
push
scas
ret
sbb
adc
lcall
jbe
sub
divb
sti
int
cmpsl
pop
mov
icebp
test
je
int
adc
iret
jbe
scas
sub
xor
cmp
ljmp
mov
into
jle
movsb
jmp
xchg
lods
lret
dec
sbb
pop
divps
jecxz
jnp
adc
pusha
xorl
add
inc
lahf
xor
int3
cmpl
pop
push
loope
jg
cmp
je
mov
jle
xchg
sete
mov
lret
bound
ret
mov
mov
lods
xor
mov
sbb
cs
push
pop
mov
or
add
outsl
ja
call
repnz
push
mov
mov
std
aad
stos
xor
test
xchg
fwait
xor
loop
je
pop
mov
fldl
rcrl
sub
pop
or
jns
popa
nop
bnd
dec
jbe
dec
sbb
rcll
push
adc
pusha
jmp
inc
cmp
lods
xchg
in
popf
inc
mov
xchg
dec
movsl
push
jbe
adc
movsl
repz
push
das
inc
stos
mov
iretw
divl
pusha
xlat
cmpsl
inc
xchg
pop
xchg
mov
inc
mov
sbb
outsl
pushf
shll
mov
sbb
push
push
jno
pop
or
pop
iret
das
dec
jno
cmpb
mov
jge
loopne
jecxz
and
fs
xor
addr16
jmp
mov
push
and
orb
loopne
cmp
mov
mov
outsl
dec
mov
repz
or
test
hlt
push
push
dec
cmpsl
lock
or
add
ror
push
les
add
aas
enter
dec
xchg
add
lods
jg
jae
rclb
mov
test
inc
rcrl
mov
cmp
into
xchg
loop
xor
pop
pop
lds
pop
insb
cwtl
xchg
sbb
sti
mov
pop
insb
adc
inc
xchg
mov
movsb
xor
pop
jns
stos
jg
cmp
imul
gs
stc
push
mov
inc
cmp
mov
xor
in
jo
popf
inc
movsb
xor
sbb
sub
mov
pusha
adc
sbb
jp
insb
xor
mov
stos
xchg
rcrb
xor
inc
lds
pop
pop
outsb
xor
mov
daa
jae
mov
adc
mov
jo
inc
addl
inc
inc
loopne
push
inc
inc
movsb
dec
clc
sbb
and
movsl
pop
clc
sahf
cmc
cmp
and
inc
pop
inc
dec
clc
sarl
test
mov
sub
jmp
cmc
push
lods
cmc
adc
out
and
pop
xchg
repnz
lret
int
mov
cmpsb
loope
insb
sahf
mov
call
mov
xchg
idivb
sbb
mov
call
loopne
ret
inc
push
cmp
cmpsl
mov
cmp
add
cld
imul
outsb
or
inc
int3
pop
push
mov
icebp
cmp
inc
sub
mov
jge
pop
cmp
addl
cld
hlt
inc
mov
mov
cmp
rorb
mov
adc
add
loope
test
rcr
sbbb
pop
add
mov
mov
push
pop
rol
inc
mov
xchg
inc
icebp
cmp
les
orb
cmp
shl
jecxz
test
or
inc
jo
ljmp
add
pop
mov
pop
push
in
sbb
jae
xchg
test
mov
test
cli
push
mov
loop
xor
cltd
mov
jo
outsl
sbb
sub
cmpsl
stos
add
ret
add
adc
decb
inc
add
fsub
test
cmp
lcall
mov
int3
repz
fs
pop
sub
mov
sti
das
stos
mov
loope
and
and
xlat
sub
dec
push
scas
or
sbb
test
gs
call
xor
into
stos
xchg
int
adc
jae
fstpt
js
pusha
fsubr
xchg
outsl
or
aam
jbe
out
repnz
loop
ja
xor
in
js
mov
inc
mov
add
mov
lret
sub
mov
xlat
pusha
in
sbb
jge
sbb
int
push
out
adc
jl
add
xor
jns
push
dec
insb
sbb
lcall
leave
cltd
jle
adc
push
in
in
sbb
jl
jge
dec
xchg
dec
mov
jb
mov
test
adc
ret
adc
daa
or
popa
inc
sbb
testl
push
xchg
mov
ss
test
ficoml
cli
je
jp
loopne
aam
fnstenv
adc
xchg
lret
push
scas
cmp
rcl
xor
mov
dec
cltd
aad
adc
jmp
scas
daa
or
aad
outsb
aas
jne
pop
dec
inc
mov
mov
xor
lcall
ret
and
loope
pushf
xchg
pop
pop
or
js
notb
xor
mov
cmc
dec
sbb
in
jle
jbe
xchg
or
sbb
hlt
cmpsb
dec
pop
cwtl
push
xchg
mov
in
fimull
mov
rolb
pop
push
xor
clc
pop
jae
fildl
movsl
daa
xor
mov
xchg
sbb
xor
cmp
pop
cmp
mov
arpl
mov
mov
les
cmp
sbb
jns
cli
es
lret
or
or
punpckhbw
jle
mov
jnp
negb
lods
mov
adc
orl
aam
cmp
adc
shlb
and
pop
ret
test
push
out
ljmp
pop
repz
add
mov
push
int
test
pushf
ret
or
stos
jns
fnstsw
fisttpll
rcrl
aam
push
jmp
test
stos
int3
push
lds
lods
pop
rorl
jb
jne
sub
cs
xchg
and
pop
sbb
xchg
push
push
ds
add
push
xor
sahf
cmp
inc
imul
mov
fists
cmp
addb
pop
out
jnp
lahf
mov
mov
xorb
enter
lret
aad
pop
mov
pop
pop
addr16
cmp
or
out
inc
fdivs
cwtl
add
xor
sub
mov
vcvtss2sd
fwait
or
sbb
xchg
pop
mov
movsb
pop
movsl
jb
out
jno
mov
fwait
or
cmc
cmp
mov
pop
inc
fwait
pop
hlt
insl
xchg
jbe
and
rolb
mov
popa
dec
rorl
mov
jle
ds
adc
cs
mov
insl
or
test
std
cmp
lds
mov
push
ja
orb
imul
shrl
lds
xchg
xor
lods
jg,pt
add
or
out
and
arpl
xchg
hlt
sbb
mov
test
mov
push
dec
jmp
fmuls
mov
icebp
das
jb
jmp
jo
mov
mov
cmpb
lock
nop
push
das
and
jp
cmovle
inc
cli
arpl
and
push
add
inc
mov
sbb
cmp
dec
dec
xor
movsl
mov
loope
ficompl
xchg
and
sbb
sub
xchg
shrb
lret
dec
nop
mov
out
lods
push
and
dec
repnz
ss
in
je
dec
mov
adc
mov
frstor
fbstp
xchg
scas
movsb
push
xor
imul
sarb
out
dec
push
fwait
das
in
repz
aaa
sub
xor
push
pop
push
sti
sub
mov
sbb
and
mov
popa
xchg
int3
pop
sbb
mov
pop
cmpsl
add
or
repnz
incl
or
inc
jno
idivl
icebp
xlat
jmp
mov
and
sbb
popf
inc
sbb
jl
pop
out
scas
xor
pop
inc
jnp
lret
xchg
cmpsb
push
pop
cld
push
jnp
test
jecxz
mov
outsl
lock
push
push
int3
jmp
pop
xchg
sub
dec
inc
jbe
and
pusha
lods
ret
outsl
pop
test
xlat
push
pop
repnz
jge
inc
addb
loop
xchg
add
pop
sbb
jp
xor
jbe
pop
pop
fstpt
insb
std
mov
test
xchg
adc
push
shlb
dec
mov
stos
xor
mov
adcl
out
jge
mov
test
jmp
ret
lahf
push
mov
pop
cltd
mov
adc
dec
jnp
rclb
pushl
inc
arpl
mov
add
mov
mov
push
xchg
xchg
adc
or
cld
test
push
lock
in
dec
inc
call
mov
sbb
adc
mov
cwtl
xchg
mov
insl
bound
addl
xchg
lods
scas
adc
cwtl
sarb
push
pop
jnp
jecxz
lret
sub
shl
cmp
inc
outsl
addr16
sbb
sub
hlt
xor
xchg
mov
call
mov
push
lret
dec
cmp
xchg
xchg
push
sub
jle
jl
dec
add
sub
scas
sub
and
and
bound
mov
and
leave
pop
cmp
scas
jmp
cs
mov
test
arpl
pop
mov
ss
imul
les
inc
mov
movb
dec
jo
fidivl
sub
adc
pop
adc
xor
orb
xchg
xor
mov
dec
and
mov
lods
data16
cmp
xor
outsl
lret
jle
jmp
arpl
cmp
pusha
inc
lcall
dec
mov
ja
xchg
cmp
or
adc
mov
push
jecxz
addr16
mov
lock
xor
rcl
add
jg
fxch
cmpsl
outsb
inc
sub
daa
enter
lds
mov
xrelease
iret
ret
ljmp
aas
sbb
push
xchg
loope
cmpsl
cmp
icebp
pop
leave
rcrl
or
sub
rorb
mov
and
lahf
or
outsl
nop
outsl
cs
das
jl
adc
inc
mov
bnd
cltd
mov
push
mov
sub
inc
pop
hlt
jecxz
jno
xor
fildll
xchg
popf
repz
pop
push
xor
dec
cld
mov
out
mov
hlt
pop
mov
out
mov
sub
cmp
inc
sbb
outsl
lret
pop
push
sub
test
hlt
repnz
add
pusha
incl
dec
xchg
mov
int3
mov
js
xchg
xchg
fsub
lds
sub
and
pop
mulb
pushf
jne
dec
stos
dec
out
jmp
jg
stc
mov
iret
aaa
jns
and
add
je
or
movb
inc
gs
adc
push
mov
or
fimuls
dec
pop
ror
not
push
sub
mov
cmpsl
movsl
popf
insl
mov
dec
cmp
pop
xchg
xor
push
ret
lock
lock
push
add
xchg
mov
inc
mov
sub
cld
outsb
loopne
movsl
or
sbb
inc
mov
mov
or
push
lods
ret
outsb
rclb
fs
pop
or
or
aam
cwtl
mov
shl
clc
aam
aas
das
data16
imul
movsb
cmc
fists
sahf
xor
sub
iret
pop
test
mov
ljmp
ret
aas
int
adc
adc
aad
xchg
sbb
jo
xchg
or
mov
cmpsb
xor
sbb
rcll
popf
mov
cmp
inc
dec
int
xor
mov
mov
mov
inc
xchg
sbb
jnp
mov
stos
movsl
sahf
neg
insb
adc
xor
mov
sbb
cltd
xchg
jmp
imul
sub
xor
rcrb
add
daa
pop
dec
icebp
xorl
cmpsl
pop
mov
lods
or
jp
sbbb
add
sub
lcall
sub
pop
pop
adc
jecxz
pushf
xchg
stos
dec
btc
sub
cld
out
ret
adc
subl
in
arpl
repz
or
push
dec
sbb
cmp
nop
mov
add
sbb
repz
add
jbe
roll
mov
int3
mov
call
notb
sub
sbb
imul
aas
lret
sub
or
nop
mov
stos
mov
or
add
mov
mov
pop
dec
lea
dec
lods
and
je
jo
adc
mov
fnstcw
jg
xchg
inc
inc
sbb
push
ds
mov
inc
push
jnp
movsl
out
mov
outsl
cmp
mov
or
mov
test
mov
push
xchg
xor
cs
mov
add
aad
gs
pop
sti
mov
mov
xor
and
cmp
push
sbb
out
mov
add
ret
lret
mov
inc
mov
mov
popf
scas
mov
add
jbe
shlb
xchg
pop
pushf
or
enter
adc
hlt
iret
insb
pusha
cltd
push
dec
daa
ja
stc
sub
das
shrl
xor
push
inc
inc
dec
out
out
dec
jae
mov
testl
jbe
int3
xchg
aaa
dec
pop
jns
cmp
icebp
inc
mov
mov
inc
cmp
cli
mov
fimuls
nop
adcb
repz
sub
cltd
clc
icebp
mov
hlt
adc
lret
cld
out
ja
mov
pop
lods
adc
sbbl
sub
into
dec
jmp
add
mov
scas
mov
mov
shll
test
push
stos
pop
push
adc
add
push
and
adc
xchg
in
mov
fldl
outsl
es
rorb
mov
xchg
mov
dec
fwait
orb
inc
leave
imul
fbld
sbb
mov
jns
pop
mov
cmp
cli
pop
lret
in
sub
int
xchg
gs
shlb
push
arpl
fidivrl
sbb
bound
or
pop
orb
and
inc
int
daa
mov
scas
es
gs
add
daa
mov
mov
sbb
jo
and
pushf
fwait
test
dec
xor
cmp
and
cltd
pop
out
mov
in
mov
cmp
mov
push
js
out
aaa
jns
mov
pop
cmp
dec
mov
arpl
or
mov
mov
adc
out
adc
das
add
outsl
or
dec
fidivrs
add
jge
call
shlb
enter
or
mov
fbstp
fdivr
mov
hlt
cmp
cmp
sbb
shl
xchg
lds
and
leave
sub
xchg
inc
sar
push
outsb
orl
in
fsubrs
popf
xorl
cmp
rcr
ret
jno
out
inc
bound
sub
int
pop
int
cmp
push
ficomps
test
push
lea
test
repnz
push
xor
outsl
in
fimuls
jbe
imul
addr16
insb
mov
jmp
inc
nop
jnp
jno
imul
inc
cmp
js
mov
push
xchg
sbb
sub
loop
in
test
in
out
xor
dec
iret
sub
mov
into
add
lcall
jl
or
mov
fdivs
mov
negl
cmpsl
jmp
outsl
pop
adc
adc
outsl
push
and
popa
lcall
imul
clc
or
out
out
inc
lahf
push
pop
pushf
notb
cmp
stos
push
mov
inc
idivl
xorb
imul
outsb
shlb
push
stos
les
adc
sub
cli
mov
stos
popf
add
aad
in
cld
mov
cmpsb
cmc
outsl
or
aam
or
or
mov
mov
pextrw
popa
mov
and
dec
dec
mov
in
jge
xchg
dec
lds
mov
push
and
insl
cmpsb
pop
iret
push
dec
cs
insb
fnstenv
pop
jae
fbstp
mov
inc
pushf
pop
cmpsl
sub
insb
incl
mov
mov
adc
sarb
bound
inc
mov
sbb
rorb
dec
mov
cli
test
sub
xchg
jnp
adc
fadd
lahf
cmp
xchg
sbb
sti
mov
jg
xchg
mov
dec
mov
hlt
or
insb
std
stos
push
inc
addl
lahf
xor
fwait
aaa
std
negb
xor
stc
stos
jle
and
cwtl
sbb
mov
pop
pop
clc
sub
push
adc
out
jbe
sbb
xchg
fs
jo
and
lds
aam
sti
xchg
outsb
fmulp
jmp
push
mov
push
push
and
jle
lods
inc
imul
mov
aad
frstor
lret
mov
mov
mov
mov
xchg
sti
repz
in
nop
mov
mov
xor
mov
add
sub
addr16
fwait
sbb
sbb
ljmp
pop
mov
and
mov
mov
inc
sbb
pop
int3
gs
aam
ljmp
inc
dec
jno
test
xor
or
insl
push
ja
push
lcall
jl
bound
in
dec
pushf
jnp
mov
aam
xchg
faddl
lods
push
mov
inc
jnp
mov
insb
add
xor
in
add
aas
sub
in
lods
aas
mov
sbb
xorb
jecxz
add
fsubr
jns
add
fidivs
push
aas
lods
push
out
rolb
ljmp
and
cltd
cmpsb
xchg
jp
repz
xchg
in
sub
ret
push
loop
cld
andps
loope
jecxz
in
push
lcall
jns
inc
xchg
lret
mov
push
movsl
imul
add
rcll
call
and
cmp
mov
mov
push
mov
inc
scas
lret
mov
fwait
mov
in
or
xchg
pop
lahf
pop
adc
ss
sahf
int
and
int
repnz
jno
jl
mov
int3
mov
es
aam
sub
add
aad
and
jge
adc
dec
adc
int
sub
lret
cmp
pop
adc
mov
rorb
in
negb
xor
jno,pt
lret
sbb
sbb
push
lea
mov
push
sbb
int
into
shl
daa
pop
cmp
addr16
or
xor
push
adc
out
cld
jne
cmpsb
and
sbb
mov
loopne
inc
test
xchg
test
dec
mov
imul
mov
sub
pop
icebp
cld
add
xchg
or
xchg
jb
pop
popf
xchg
dec
mov
mov
icebp
arpl
in
pop
fisttpl
loop
and
aas
dec
fnstcw
mov
dec
lods
adc
cmp
insb
jns
mov
push
jne
push
out
sbb
mov
sahf
outsl
pushf
sti
loop
sbb
repnz
fcomps
sbb
and
xchg
pop
sub
xchg
push
mov
aaa
loope
popf
pop
lret
iret
sti
mov
out
jno
jo
jle
mov
mov
cmp
or
xchg
xor
out
mov
sarb
sub
cwtl
pop
cwtl
inc
sub
out
in
jle
jno
jnp
jns
cmpl
mov
add
ljmp
push
js
into
les
or
push
lods
int
lds
adc
cmpsb
push
add
lock
sbb
mov
mov
aam
pop
cli
mov
sub
jne
cmpsl
and
movsb
fidivrs
cwtl
enter
xchg
mov
sbb
andl
test
adc
movsl
and
fs
sbb
lret
xchg
xor
pop
mov
cld
es
in
sub
mov
mov
sbb
sub
xchg
lock
mov
popa
popf
push
scas
pop
inc
cmp
rclb
mov
outsl
pushl
std
lret
push
stos
lret
out
add
mov
jge
cmp
in
or
inc
aam
daa
sbb
dec
mov
jle
or
adc
sar
cmp
cmc
std
cmp
scas
loop
or
mov
xor
nop
push
gs
repnz
pop
xchg
sbb
scas
loopne
stos
int3
and
cmp
out
loopne
add
sbb
int
xchg
sub
ret
push
or
push
loopne
mov
stos
icebp
lea
shlb
dec
cmp
jmp
es
enter
inc
sub
enter
and
shlb
pop
gs
out
ja
jo
mov
shrl
or
dec
jecxz
dec
leave
insb
lock
into
pushl
frstor
repz
jo
dec
adc
lock
test
ljmp
xchg
pop
popf
clc
out
cmp
cmp
das
es
jmp
add
xchg
jo
pop
sub
in
test
mov
test
sub
clc
rol
data16
call
ficomps
pusha
popa
xlat
and
xchg
pop
and
dec
out
jp
mov
scas
bound
aad
gs
push
cmpsb
xchg
mov
xor
movq
sbb
mov
mov
xchg
dec
subl
xor
and
cmp
imul
jg
clc
lds
test
and
nop
mull
ljmp
mov
in
lea
sub
test
push
mov
dec
ret
fwait
or
scas
adc
ret
sub
insb
and
repnz
not
fimull
imul
inc
push
dec
adc
imul
shll
jno
in
pop
add
repz
cld
xchg
pop
jl
cli
roll
inc
push
imul
jno
mov
push
or
enter
jne
pop
rorl
mov
dec
lcall
fiaddl
sub
lcall
popa
adc
jbe
lret
cmp
mov
xor
cmp
jnp
mov
repz
xor
lcall
lea
lcall
jle
data16
jnp
fmul
divl
repnz
adc
xchg
cmp
dec
add
jecxz
out
dec
out
sbbb
mulps
imul
sti
cmpsb
popf
cltd
pop
sahf
xlat
pop
pop
inc
pop
in
inc
pusha
jnp
jae
push
xchg
sbb
xor
push
mov
mov
mov
stos
scas
orl
xchg
and
dec
sub
pop
lds
repz
repz
inc
orb
shlb
jmp
std
add
subl
jo
jmp
cmp
mov
shl
sub
fincstp
or
xor
shrb
das
jge
push
jp
nop
push
xor
mov
push
push
mov
stc
icebp
jne
scas
pop
mov
and
push
pop
mov
jns
decb
jne
movsl
test
addr16
pop
sub
arpl
push
xchg
mov
or
data16
repz
pop
adc
or
cmc
add
aas
dec
ret
dec
sbb
stc
fmul
inc
adc
daa
sub
adc
cmp
fisubs
push
inc
nop
mov
test
push
mulb
leave
mov
sbb
sub
fdivrl
enter
push
inc
fidivrs
xor
in
imul
fstl
arpl
imul
mov
sarb
hlt
lret
cmp
mov
repz
pop
or
ficomps
lods
and
xor
dec
xor
cmp
fyl2xp1
mov
add
mov
xor
or
mov
mov
or
pusha
lods
lea
adc
inc
dec
in
add
or
jge
out
sbb
popf
jg
clc
cs
pusha
aam
iret
sbbb
arpl
pop
sub
sbb
sub
loop
sbb
pop
mov
and
jmp
inc
sbb
sub
cltd
cmp
sbb
cltd
arpl
xchg
test
cmp
stos
lock
cwtl
scas
in
dec
xchg
lcall
imul
push
push
mov
stc
lahf
out
xchg
xor
mov
leave
push
cld
cmpsb
pop
mov
xor
jns
lods
or
pop
and
or
pop
and
cmp
jnp
jb
aas
mov
pop
pop
imul
inc
outsl
ljmp
jb
xor
fisubrs
outsb
imul
and
fimuls
ret
jge
loope
insb
daa
and
inc
inc
and
mov
jbe
sub
int
dec
push
mov
test
fisttpl
bndstx
lock
cmp
jmp
data16
call
cwtl
push
dec
out
inc
pop
cld
gs
out
mov
arpl
outsl
dec
iret
and
mov
cmovg
stc
mov
inc
or
xor
dec
mov
fsubl
dec
popa
movsl
out
pop
push
ficoml
rcll
inc
std
in
cmp
aas
pushf
test
in
mov
in
cmpsb
pusha
test
xor
cmp
gs
or
clc
insl
stos
movsl
push
mov
imul
notl
jns
and
cmp
mov
pop
xorl
and
mov
frstor
sub
lahf
or
sbb
popl
lahf
and
lds
ja
imul
ficomps
cli
jo
stos
ret
cmpsl
xor
or
iret
jne
jmp
ds
mov
lahf
and
push
call
add
xchg
out
pusha
adc
push
mov
cld
or
pusha
xchg
add
ret
std
or
pop
jge
filds
jp
mov
inc
xor
dec
sub
xchg
xchg
call
cmpl
scas
push
arpl
jge
mov
hlt
lods
es
aaa
stos
mov
hlt
cmp
or
ret
pusha
nop
adc
mov
sub
imul
sbb
sub
xchg
ret
popf
adc
imul
clc
inc
std
ret
jo
mov
lcall
sub
mov
iret
mov
add
xor
arpl
xchg
sbb
test
cmc
test
adc
adc
cmpsb
inc
add
jg
pusha
into
movsb
ret
into
mov
pushf
sub
es
dec
subl
stos
jb
bound
xlat
popa
sub
dec
add
or
mov
mov
ret
cmp
dec
push
mov
sbb
shll
push
adc
mov
imul
xor
jl
sbb
int
push
fs
testb
dec
jg
and
xchg
mov
or
iret
xchg
jge
jl
repz
sbb
fcoms
aad
pusha
cmp
cmp
and
das
repnz
divb
inc
fcoml
mov
test
dec
rorl
mov
pusha
pusha
dec
dec
subl
hlt
pop
nop
cli
addr16
loope
sbb
or
xchg
push
imul
cmp
js
rcrb
push
lods
lea
cltd
add
adc
fidivrl
aam
adc
jae
add
stc
jnp
inc
bound
dec
mov
inc
adc
pop
add
es
dec
xchg
push
lods
jns
pop
pop
jae
push
lret
and
and
arpl
fisttps
xor
push
jl
inc
loope
or
movsl
add
test
fmuls
lret
pop
aad
pop
inc
lods
in
jbe
jns
mov
jg
aad
ret
inc
loope
mov
dec
adc
out
dec
and
rorl
lret
jge
ss
imul
cmpxchg
cmp
es
lcall
or
xorl
push
adc
rclb
push
rorb
inc
or
lret
mov
and
adc
mov
push
adc
je
pop
or
xlat
jb
jo
jae
push
jge
inc
sub
pop
mov
mov
clc
mov
inc
fwait
inc
or
jnp
out
das
out
inc
cmpsl
nop
int
dec
xchg
les
inc
out
in
xchg
inc
mov
sbb
push
jb
push
xchg
aad
dec
movsl
les
and
mov
sbb
out
imulb
xor
push
lahf
jecxz
testb
ss
arpl
cmp
mov
arpl
daa
mov
insl
jns
xor
lret
jg
jb
std
cmpsb
or
sub
mov
cmp
ljmp
push
mov
xor
fsubrp
shlb
jnp
add
rcrb
pop
stos
lea
xlat
hlt
sahf
sbb
sub
ret
sub
insb
cmc
sub
adc
mov
cld
insb
test
int
mov
addr16
push
mov
mov
cmp
push
xor
out
cld
pop
sub
rorl
pop
inc
xor
xor
pop
fadds
pop
xor
ja
mulb
lcall
addb
shr
sbb
aas
aad
mov
jno
cld
testl
push
pop
sbb
or
push
out
push
imul
or
ds
mov
mov
jae
sbb
je
xchg
out
filds
fwait
adc
mov
mov
movsb
or
mov
jae
cmp
sub
fisubl
push
adc
stc
mov
out
inc
sub
push
lahf
add
clc
movsl
push
int
dec
lret
mov
out
repnz
or
fildll
test
cmp
in
pop
jne
adc
shrb
dec
add
pop
mov
fbstp
push
push
loop
or
push
jp
call
dec
push
sbb
add
cs
sti
add
andb
movsl
push
sub
add
xor
mov
cmp
fcoml
xor
xchg
sbb
pusha
sub
dec
dec
aas
into
cmp
dec
cmp
pop
icebp
lahf
push
leave
xor
xor
aas
in
sti
icebp
loopne
enter
and
or
das
das
cmp
jnp
jle
add
scas
call
add
mov
sub
lret
lret
addr16
loopne
popl
mov
pusha
pop
jecxz
cs
xor
dec
xchg
jg
lret
int3
mov
jecxz
repnz
push
xor
rorl
popf
in
cmp
push
shrl
ficoml
or
fs
stc
xor
mov
push
xlat
aad
fbstp
lret
out
test
out
std
mov
ficoml
jae
sbb
mov
loop
mov
cmp
repz
adc
push
mov
rolb
adc
out
std
repz
and
hlt
rol
push
jae
add
mov
lock
push
mov
int3
int
inc
out
adc
int3
and
into
cmp
cmp
stos
in
sbbb
std
dec
xchg
addr16
ret
rorb
xchg
les
pop
mov
call
lahf
outsb
fucomp
bound
es
cs
mov
jno
sub
xlat
int
cmpl
add
xchg
repz
xchg
sbb
push
data16
adc
mov
lods
fwait
pop
inc
popa
cs
loopne
test
adc
je
into
mov
mov
js
dec
ljmp
stos
dec
xchg
push
rcl
push
out
jmp
inc
xchg
loop
mov
clc
aad
xor
jmp
dec
outsb
push
lcall
leave
push
jns
mov
scas
movsb
inc
int3
jmp
fisubrl
aam
arpl
mov
inc
pop
jp
inc
and
push
ffree
sub
sbb
icebp
mov
inc
push
fld
int
jge
push
test
fistpl
es
rcrl
xchg
arpl
fstpl
xchg
jecxz
popa
cmpsb
pusha
insb
jb
or
icebp
fwait
pop
pop
mov
sub
adc
pop
lods
into
sub
pop
mov
mov
jno
int
cmp
out
cli
add
pop
sbb
inc
gs
jno
fnstcw
xchg
mov
inc
shlb
in
push
dec
jb
in
dec
mov
imul
cmpsb
lret
jmp
adc
test
test
add
xorl
imul
xchg
fsts
or
adc
divl
mov
push
xor
inc
sub
xchg
stos
push
scas
mov
jge
or
or
jp
cmp
repz
cltd
add
jnp
jne
cld
mov
cmp
mov
sbb
or
mov
push
adc
sub
mov
cmpb
inc
dec
movsl
popf
sub
enter
mov
jnp
or
stc
push
dec
sbb
jg
dec
pop
in
call
push
cmp
fldcw
or
push
in
and
outsb
int
push
test
xchg
xchg
lret
shlb
xchg
push
sub
notb
rol
pop
mov
iret
call
add
mov
cld
insl
jle
push
jle
gs
pop
sbb
mov
xchg
int
dec
dec
xchg
aad
inc
imul
jno
dec
xchg
fcmovu
repnz
cmp
inc
iret
daa
les
inc
enter
cli
aaa
sarl
mov
mov
cmp
push
mov
stc
repnz
orl
lahf
inc
add
xor
jb
fsubp
jne
mov
mov
pushf
sti
sub
addb
ljmp
rcll
or
add
je
pop
inc
sbb
and
jl
les
and
shll
div
adc
or
mov
out
xor
int3
addr16
cs
xlat
fdivs
fwait
sub
sti
sub
cmp
jp
cwtl
dec
pop
jo
lds
push
mov
loopne
sbb
mov
int
cmp
mov
fisubl
xchg
fiaddl
push
lea
int
std
movsb
fmull
iret
or
jbe
pop
ret
mov
or
dec
mov
pop
jmp
jmp
scas
mov
jecxz
movsb
pop
fldcw
jg
inc
jge
sbb
pop
mov
cmp
pop
add
mov
mov
cmpl
adc
sbb
jns
mov
ljmp
lret
dec
pop
add
jg
lock
cmp
aas
jne
loopne
inc
das
push
xor
xchg
movl
xor
into
jle
adc
push
push
out
rcll
add
je
loop
sub
or
lahf
or
call
adc
data16
sbb
and
jmp
out
repnz
inc
out
mov
mov
int3
aam
push
cmp
jno
mov
and
mov
iret
aaa
pop
mov
cld
movsb
inc
and
scas
divb
adc
mov
jle
push
xchg
loopne
repz
cmp
or
or
fildll
stc
sub
idivb
arpl
in
push
test
mov
arpl
fmull
cmp
inc
shrb
sbb
or
mov
ret
andb
and
mov
mov
mov
ja
insb
inc
dec
in
mov
pop
orb
rcrb
cs
pusha
jl
adc
pop
jecxz
fs
int
inc
dec
xor
repz
clc
mov
loope
in
dec
adc
or
cmp
xchg
stos
add
jmp
jb
ja
rcl
cltd
ficompl
cmp
mov
mov
pop
enter
mov
int3
inc
mov
jp,pt
xchg
movsb
sub
mov
test
sbb
mov
add
fmul
inc
push
adc
cmp
decl
add
jo
xlat
xor
into
and
pushf
cld
aad
xchg
lcall
xchg
stc
movsb
iret
xchg
xchg
mov
popf
adc
xor
add
arpl
jnp
mov
movsl
and
or
push
mov
cs
and
frstor
stos
adc
adc
mov
push
pop
fisubrl
icebp
push
popl
notl
jecxz
mov
call
arpl
mov
mov
sbb
add
mov
inc
and
ljmp
stc
outsl
stos
or
sbb
mov
ljmp
xchg
insb
xchg
into
sub
xor
incl
out
push
into
clc
leave
fdivrl
and
mov
push
jmp
clc
mov
aam
jnp
mov
inc
inc
xchg
notb
in
mov
jo
movsl
inc
xchg
aad
mov
mov
lret
dec
out
in
loop
dec
ja
adc
push
pop
sub
push
push
stos
push
xchg
lock
lods
sub
add
mov
nop
or
push
scas
cmp
cmp
jae
dec
push
ljmp
pushf
addb
push
and
orb
push
adc
sub
clc
popa
pop
push
mov
adc
mov
push
sarb
push
pop
mov
stos
test
xor
cld
shr
mov
and
lods
sarb
adc
testb
aam
push
inc
stc
aas
aam
movb
hlt
dec
sub
test
loope
mov
mov
lea
adc
test
pushf
sub
outsl
ljmp
in
push
xor
dec
inc
dec
test
mov
popa
adc
or
out
cmp
push
rep
cmpsb
adc
pop
pop
xchg
in
and
into
mov
or
xchg
sbb
jmp
cmp
or
cmc
jg
shll
xchg
dec
lahf
jb
jbe
stos
push
lods
jmp
adc
scas
mov
sti
or
add
out
popf
mov
jecxz
nop
test
pop
stos
in
cli
out
int
pop
mov
lods
fcomps
in
test
fisttpll
lcall
jg
fcoms
in
push
mov
sub
call
sti
mov
ljmp
shrl
inc
xlat
pop
mov
out
aaa
clc
xchg
mov
add
mov
lds
inc
xchg
sbb
push
in
lahf
pop
mov
and
dec
jg
clc
inc
rolb
cmp
scas
add
sub
push
jmp
jns
lea
iret
mov
mov
shll
jbe
push
sar
sbb
inc
in
push
mov
pop
cmp
inc
mov
scas
mov
ss
pop
mov
pop
lahf
mov
popf
clc
nop
xchg
sbb
clc
lcall
mov
pop
sbbb
mov
rcrb
stos
or
xor
xchg
fdivl
imul
daa
dec
cld
js
xorb
sub
nop
in
jle
cmp
scas
dec
lods
sbb
leave
movsl
push
stc
and
cmp
mov
add
mov
nop
add
popa
mov
js
push
gs
ds
scas
jb
sti
push
adc
int3
fistps
scas
mov
out
pusha
rcrb
add
adc
xlat
mov
xchg
jmp
mov
adc
in
mov
sbb
inc
jecxz
add
bound
adc
int3
xchg
sahf
and
lret
adc
scas
orl
leave
movsl
push
fnsave
stos
jns
mov
dec
inc
cmp
add
mov
add
inc
mov
in
sbb
fadds
mov
xchg
dec
xchg
test
mov
sbb
nop
dec
inc
xchg
jo
icebp
and
sarb
jbe
stc
cmp
mov
jg
xor
xorb
ror
insb
mov
xchg
add
aam
std
bndstx
sub
jnp
xor
adcl
das
push
mov
lods
push
loopne
xor
and
repnz
fidivs
inc
fs
fs
adc
mov
adc
iret
iret
xchg
ljmp
das
mov
push
cwtl
nop
test
xchg
mov
repz
data16
into
sti
mov
adc
inc
dec
aam
sub
xlat
imul
outsl
arpl
inc
movsl
fdivs
mov
adc
insl
lcall
sub
incb
lods
scas
psubw
mov
xchg
xor
cwtl
inc
mov
mov
dec
sbb
inc
mov
jne
data16
mov
mov
pop
mov
fcmovb
mov
out
adc
popf
aad
roll
cmp
bound
aas
mov
push
or
pop
popa
sbbl
icebp
sahf
xchg
lea
and
or
inc
xchg
add
imul
xor
clc
mov
scas
push
dec
and
inc
and
shll
shll
jb
ficomps
mov
and
daa
xor
mov
pop
mov
lods
push
cmpsl
dec
shll
inc
aaa
out
dec
fmull
stc
stos
push
push
std
ss
sbb
pusha
out
push
xchg
int
mov
dec
lods
or
stc
dec
lds
inc
mov
dec
insl
dec
mov
outsl
cli
popf
outsb
cs
sub
int
movsl
dec
jp
pop
dec
arpl
and
dec
out
mov
fdivs
xchg
jb
lds
or
jo
test
nop
lods
dec
lods
push
cmp
gs
mov
pop
mov
jmp
sub
push
ss
mov
mov
or
lret
inc
addr16
aaa
sub
mov
cli
andl
push
ldmxcsr
jle
out
imul
movsb
mov
jbe
fistl
adc
in
pushf
add
xchg
negb
jbe
icebp
mov
adc
es
jne
push
add
lock
movsb
cmpsl
lcall
rol
sub
fstpt
push
and
out
add
inc
fwait
ret
inc
js
es
xor
xor
or
add
inc
jmp
sahf
or
push
sbb
jge
jae
jp
aaa
idivl
pop
xor
lods
xor
cmpsb
js
inc
aam
imul
test
insb
push
clc
adc
push
or
sbb
lea
pusha
sbb
add
loop
mov
or
mov
sbb
pusha
enter
cmpsl
mov
inc
fisttpll
mov
ja
outsl
add
cmpsl
sub
jecxz
inc
add
test
mov
out
xchg
mov
cmpsb
daa
jbe
or
cmpsl
aam
test
shlb
fs
push
enter
jne
popf
icebp
mov
cld
mov
std
fs
lret
inc
or
sbb
dec
outsb
add
fmul
cmc
mov
daa
scas
fwait
push
outsl
mov
pusha
jae
jne
jg
push
notb
push
push
jno
test
popa
ret
add
xor
xchg
cld
int3
jg
push
mov
sbb
cmpsb
loopne
ret
fsincos
xchg
and
ja
inc
addr16
les
ss
rcrl
fdivl
fnstcw
clc
sbb
js
sarb
push
pop
ffree
xor
dec
insb
lock
inc
add
xchg
sub
loopne
mov
sti
xchg
sbb
testl
push
pop
and
inc
shrl
test
mov
ficompl
mov
cmp
es
pop
div
mov
mov
adc
rorb
adc
sti
pslld
rol
add
add
out
aaa
push
rol
lock
aas
pushf
sbb
in
imul
xor
inc
mov
jge
sbb
jg
xor
xchg
jge
mov
out
imul
test
lds
cmp
cli
cmp
daa
mov
cmovl
cld
aam
xchg
xchg
int
fadds
pop
stos
jno
aad
inc
dec
cmp
cmc
jl
imulb
dec
testb
add
mov
scas
lahf
nop
sbb
jecxz
jns
cmp
in
inc
xchg
and
cmp
cmp
sahf
dec
inc
xchg
mov
cmp
mov
into
hlt
add
cmp
xchg
or
sub
aam
dec
jl
repnz
xlat
movsb
mov
mov
in
sarl
push
dec
mov
jg
lahf
loopne
jle
jecxz
xchg
ret
jmp
sub
mov
dec
mov
mov
push
jne
scas
mov
sbb
scas
enter
call
out
mov
xchg
mov
adc
lret
test
ds
std
call
out
stc
dec
pop
dec
rcl
mov
lret
mov
test
jne
leave
flds
sub
mov
xchg
movsl
dec
or
movsl
fadds
shr
jecxz
fdivrs
es
mov
popf
jle
sahf
add
xchg
sub
xchg
ja
mov
xlat
outsb
out
mov
fs
bound
inc
xor
jno
aas
cmp
fldcw
das
lret
push
xorl
lods
xchg
aam
cmp
mov
and
xor
and
adc
sub
xor
xor
fcmovu
jl
push
int
inc
adc
movsb
dec
pop
adc
stos
ror
lods
mov
outsb
movsl
stos
mov
out
push
lcall
adc
adc
aaa
add
out
jg
scas
dec
xor
jne
mov
in
ljmp
mov
dec
sbb
addr16
and
inc
cmp
lods
mov
dec
in
int
jmp
add
fidivs
sub
data16
iret
and
inc
adc
cmp
adc
ljmp
jb
shll
ficomps
imul
sbb
push
sbb
in
cmpsl
aam
xchg
jg
mov
adc
rorb
into
cmp
mov
or
or
push
je
push
ret
stos
dec
mov
jae
jo
add
or
cmpsl
pop
cwtl
adc
jo
ret
sbb
adc
cmp
repz
sub
scas
cltd
inc
divb
jbe
ds
sbb
cli
dec
iret
adc
cmp
sub
faddl
add
mov
jg
notl
xchg
xchg
dec
out
pusha
push
stc
test
cmp
add
jle
outsb
ljmp
incb
jmp
fstl
aaa
xor
fsubrs
cmp
stc
push
lcall
xor
jnp
repz
insb
sbb
cmpsb
xor
adc
mov
push
testl
rorl
lods
cli
push
rcrl
push
add
test
and
addb
addr16
jl
orl
jno
stos
cmp
push
add
ljmp
mulb
add
cli
cli
mov
or
mov
pop
ds
dec
aas
xor
in
shll
popa
mov
sub
cmp
mov
shrb
ds
pusha
pop
lods
sbb
jl
aaa
cmp
jmp
fidivl
pop
inc
cmp
xor
ret
fdiv
test
push
bound
cmp
mov
insl
sbb
dec
out
pop
push
stc
loop
or
push
push
fwait
xchg
test
pop
sbb
or
pop
jmp
cs
pop
pop
cmc
jae
sub
add
inc
aam
hlt
into
lcall
repnz
aad
mov
into
orb
lods
push
stc
jbe
cmovs
sub
test
mov
jg
movsb
xchg
mov
out
mov
adc
testl
test
xchg
sub
jmp
test
pcmpeqw
stos
arpl
scas
inc
stc
iret
dec
pop
stc
sbb
pop
push
lret
or
jg
cli
stos
jp
shlb
inc
xchg
push
cmp
aas
or
add
sti
mov
xchg
push
sbb
push
jp
cltd
inc
scas
jne
mov
pusha
jne
jge
cmp
lods
and
pushf
fstpl
cmp
inc
push
inc
sbb
sti
push
or
test
sub
xchg
push
lods
add
inc
mov
mov
decl
xchg
dec
dec
dec
jne
icebp
xchg
stos
jnp
cmpsb
das
inc
push
sub
pop
repz
mov
lods
pop
aam
adc
jae
adc
stc
shlb
inc
enter
lret
insl
out
xlat
mov
mov
in
popf
and
jmp
or
fs
jnp
xchg
arpl
sub
sahf
dec
lret
in
add
inc
pushf
mov
pop
mov
scas
jl
and
out
bnd
mov
aam
mull
jle
pop
fistl
sub
ret
sarl
mov
mov
lret
sub
xor
push
sub
pop
bound
jb
cwtl
mov
insl
mov
jp
popa
nop
cwtl
add
sub
pop
inc
push
les
out
add
xlat
jmp
rolb
add
shrb
leave
mov
push
mov
inc
jns
push
imul
ret
dec
arpl
por
imul
cs
fisttps
std
xchg
pop
pop
xchg
ja
psrlq
shl
jp
stc
inc
sub
mov
xchg
imul
faddp
fs
jb
xchg
jo
mov
inc
mov
popf
out
shll
dec
loop
xor
inc
xchg
enter
movsb
cmc
inc
sbb
mov
std
push
divl
push
fnsave
xchg
and
aas
sub
cld
mov
sbb
xor
cmc
mov
loope
xor
out
pusha
xchg
jmp
sahf
std
sub
aaa
enter
jbe
test
mov
test
pop
enter
in
insl
sub
mov
xor
jmp
xor
xchg
cmpsb
loopne
out
movsl
jo
push
sbb
and
cmp
dec
divl
sub
mov
pop
sub
cmc
aas
mov
or
jle
or
js
xor
mov
loope
insl
add
mov
pop
push
add
testl
mov
and
push
mov
insl
lcall
sub
mov
sub
xchg
in
push
jp
loopne
push
stos
cmp
repz
lcall
jnp
aaa
psubsw
pop
xor
sbb
inc
fwait
push
cli
dec
xchg
cmp
ds
mov
cltd
mov
jle
mov
jnp
dec
aam
cmpsb
jns
mov
lods
cmp
aam
ja
mov
aaa
jns
add
into
stos
and
int3
jg
movsb
rorl
stc
xchg
mov
inc
mov
dec
push
popf
nop
pop
dec
add
dec
insb
hlt
sub
loope
lods
jns
loop
push
adc
jns
lods
jl
xchg
daa
inc
mov
sbb
cmpl
mov
cld
xchg
outsl
push
and
mov
mov
dec
test
fs
or
test
lret
cmp
lret
cld
js
rclb
arpl
or
rcr
pop
cmc
sub
xlat
adc
push
mov
aad
mov
or
orl
xor
mov
outsb
jbe
inc
mov
repnz
movsb
xchg
sbb
fbld
mov
xchg
add
subb
push
ret
adc
sarb
and
mov
loop
pop
das
out
icebp
adc
mov
dec
stos
jle
push
rol
fcomps
sub
repz
arpl
mov
mov
mov
inc
mov
popa
lea
test
push
xchg
or
mov
inc
mov
jg
pop
and
or
loop
out
or
cmc
enter
adc
repnz
outsl
jge
push
in
mov
xchg
or
jnp
cmp
aas
mov
adc
pop
push
pop
xchg
daa
repnz
fldl
enter
in
pop
loopne
fwait
pusha
mov
xlat
ja
cmpsb
push
or
scas
int
js
jb
xor
jmp
fcmovnbe
pushf
ja
fs
dec
insb
arpl
movsl
dec
test
aam
jp
nop
mov
aaa
cmc
xlat
and
mov
sbb
adc
push
bound
or
fbstp
sbb
stc
loope
sbb
and
jp
das
popa
jmp
lods
mov
lea
imull
clc
add
imul
xor
dec
sub
add
push
aad
xchg
sub
andb
sbb
mov
add
mov
or
clc
push
mov
insl
jg
mov
imul
lods
jo
ja
inc
pop
fdivs
and
adc
mov
cli
push
aas
in
dec
mov
sti
dec
enter
mov
scas
jnp
pop
push
aam
pop
insb
inc
lea
je
push
jmp
in
aas
jl
int
jmp
sbb
sub
aas
dec
mov
mov
sbb
sbb
hlt
xchg
pop
push
sbb
cmpsb
and
ljmp
push
xchg
imul
aam
dec
rorl
fsts
insl
cmp
sub
inc
cmp
mov
mov
sbb
lds
jns
xchg
pop
xchg
das
add
jno
jg
cld
mov
lock
xor
and
shl
test
cmp
in
and
enter
or
xor
dec
mov
jo
sti
mov
inc
and
mov
push
ljmp
adc
aaa
pop
xchg
xchg
es
dec
mov
mov
mov
repnz
sub
scas
cltd
dec
dec
jne
data16
test
cmp
inc
cwtl
iret
cmp
xchg
push
cmp
push
add
add
cmpb
cmp
aad
jl
in
call
push
add
jbe
pop
sbb
lods
inc
mov
push
cmpl
and
ret
leave
mov
jmp
js
outsl
inc
add
pop
fwait
movsb
dec
push
fst
outsb
sbb
imul
je
fsts
jge
sbb
sub
cmp
cmpsl
rorl
add
js
cmp
int3
jne
and
lcall
sar
repz
jecxz
adc
mov
jmp
ss
xchg
cmp
in
adc
sbb
xor
push
popf
cmp
cmc
das
imul
mov
enter
xchg
push
jge
dec
and
and
cmp
dec
mov
outsb
jae
and
xchg
notl
mov
jle
mov
sahf
pop
dec
sbb
xchg
pushf
cld
jg
lods
xor
rol
iret
dec
in
add
addl
test
loopne
scas
push
sbbl
out
and
inc
imul
nop
out
add
inc
je
cmp
sbb
cmp
inc
lret
xchg
divb
jo
push
or
test
int
fabs
jns
fimull
xchg
and
sbb
ja
push
mov
jne
sub
jge
push
test
cmp
popa
pop
mov
shll
mov
add
xor
push
xor
insb
xor
push
xchg
scas
or
add
pop
lea
mov
jle
mov
sbb
mov
xchg
mov
inc
pop
push
push
dec
clc
rcrb
roll
call
nop
movsl
out
push
jo
xchg
xchg
sub
in
or
outsl
jns
dec
mov
fsub
stos
push
sti
push
jns
and
push
popa
js
or
imul
pop
addl
add
jae
dec
inc
add
sub
rol
mov
sti
push
ss
mov
aam
mov
sbbl
sub
sub
ss
inc
fidivrl
mov
dec
pop
inc
imul
add
adc
add
lret
pop
lahf
test
mov
clc
imul
dec
cmp
jecxz
push
in
cmpsb
xchg
ljmp
cmc
repz
dec
xchg
outsl
mov
int
dec
jmp
mov
cmp
xchg
clc
xor
or
jnp
fs
mov
fbld
mov
xchg
aaa
out
xchg
push
cs
call
addl
icebp
dec
fiadds
lds
inc
lahf
inc
push
rorl
aam
js
dec
ja
mov
jne
mov
or
pop
adc
xlat
cs
int
inc
sahf
mov
int3
mov
xchg
adc
insb
and
add
ret
js
sub
dec
jge
popf
jb
inc
xor
jae
insl
cmp
ljmp
test
std
dec
fiadds
mov
jmp
or
rcll
jno
xor
fstl
into
int
jno
test
mov
fiadds
ds
nop
jbe
adc
pop
xor
push
popa
punpckhdq
inc
shlb
ss
es
adc
cli
fsubs
push
fnstcw
jmp
xchg
imul
rcrl
mov
imul
fistpll
nop
jg
imul
and
inc
cmpsl
fpatan
sub
shll
jle
sti
and
sub
mov
sub
shlb
adc
jle
ret
sbb
loope
cmp
pop
xchg
sub
cmp
cwtl
nop
push
dec
mov
mov
xchg
mov
mov
sarb
sahf
and
sub
pop
cltd
inc
insl
inc
fisttps
lds
add
out
dec
bound
inc
outsb
sbb
notb
pushf
stos
xor
add
int3
cmp
cmp
jecxz
pop
or
add
cli
out
sbb
sbb
mov
push
inc
clc
mov
mov
sub
outsb
loopne
sbb
adc
jnp
add
arpl
sub
jmp
pop
inc
call
xor
push
push
pushf
push
fdivs
sbb
cli
notb
cmp
mov
fisubs
pop
insb
into
sbb
xchg
mov
push
adc
dec
mov
sbb
repnz
aas
xchg
jmp
shll
out
xor
mov
sbb
mov
jmp
xchg
pusha
ss
mov
mov
fsubl
pushf
and
fbld
mov
sti
xchg
or
js
rol
movsl
enter
xchg
xor
adc
jb
fsts
pusha
in
aas
pop
popa
push
lock
ret
cmp
pushf
sub
pop
dec
dec
push
jmp
sbb
shll
enter
add
mov
xor
adc
ss
into
pop
sbb
and
sbb
or
aad
sarl
jnp
sbb
jmp
rolb
push
stos
int3
mov
dec
jmp
outsl
fmulp
pop
imul
mov
jmp
inc
xchg
enter
xchg
in
aas
jl
dec
xorb
jo
ds
jno
nop
adc
add
mov
xor
fs
ds
fmuls
xchg
xchg
xor
push
adc
push
jge
call
dec
fs
fmull
insl
mov
outsl
cmpl
clc
das
rol
out
mov
test
mov
adcb
add
mov
lds
mov
jns
jp
arpl
dec
out
and
pop
xlat
mov
lea
call
push
sub
sbb
pop
leave
push
insl
es
lret
js
xor
or
pusha
push
xor
cmp
add
mov
pop
insl
mov
loope
dec
aaa
fldl
outsl
adc
les
mov
into
mov
iret
fiadds
mov
mov
jno
call
js
in
cld
pushf
pushf
in
cwtl
cmc
sbb
or
dec
pop
push
fwait
lods
adc
pusha
lock
cmp
pusha
inc
pusha
lahf
out
pop
jns
mov
xchg
mov
push
xrelease
add
cmp
push
and
jns
push
repz
addr16
divl
jmp
mov
gs
mov
inc
sbb
mov
jns
outsl
movsb
mov
add
dec
push
in
das
xchg
xchg
out
push
popf
aas
sub
and
inc
dec
leave
xor
nop
xchg
cmc
xchg
std
cli
mov
or
mov
addr16
inc
pop
addr16
call
dec
jl
pop
cmp
mov
mov
mov
or
mov
add
xorl
pop
mov
into
dec
sub
pop
jno
lret
cmpsl
mov
xchg
hlt
jb
or
dec
mov
decl
dec
sbb
fsts
add
inc
or
jne
dec
testl
jno
sbb
dec
add
jno
cmpsb
loopne
sahf
xor
insl
add
cwtl
cmpsl
arpl
ret
aaa
jp
fisubrs
inc
xchg
cmp
jns
aam
rorb
addb
es
push
ficompl
ds
mov
push
add
and
lahf
pop
rcll
stos
pop
notb
into
cmpsb
push
dec
pusha
and
adc
mov
sub
std
ror
in
iret
jl
arpl
jb
inc
jg
mov
call
mov
sub
adc
mov
lret
push
adc
in
cmpsl
js
pusha
fmuls
test
fwait
in
fs
xor
aad
push
jne
mov
lods
and
sahf
int
cmp
mov
push
insl
xor
push
arpl
call
jge
stos
push
shl
loopne
clc
mov
mov
and
pop
fdivrl
pop
jns
icebp
cmpsl
mov
dec
mov
lock
adc
jbe
xchg
sbb
shlb
loopne
adc
inc
dec
xlat
mov
and
jecxz
in
dec
sarl
push
fbstp
sar
out
pushf
roll
cmpsb
inc
jl
xor
push
sub
xchg
mov
jo
fnstsw
adc
out
jbe
fcomp
clc
mov
loope
mov
es
lds
fimuls
adc
loop
hlt
movsl
mov
scas
cwtl
xor
sbb
jbe
ss
rcr
xchg
inc
aaa
add
pop
push
out
nop
or
repnz
loopne
dec
and
fisubs
mov
pop
xchg
aas
cs
mov
std
mov
pushf
icebp
divb
jg
in
cmp
sbb
sbb
out
lea
ficoml
orl
bound
dec
repnz
fidivrl
mov
out
mov
mov
fnstcw
sub
ret
movsl
out
xor
push
outsb
ret
xor
sbb
loopne,pt
sbb
gs
cmpb
inc
test
sbb
mov
scas
sbb
xor
or
jl
outsl
pop
or
aam
fbld
repnz
mov
inc
pusha
int3
xor
and
out
mov
push
jne
push
mov
pop
xor
fwait
cld
xor
nop
dec
dec
xchg
xchg
movsl
xchg
fstpt
test
and
inc
push
push
mov
xchg
icebp
iret
sbb
aam
outsb
std
cmp
pop
fbstp
push
repz
in
add
add
cli
dec
lods
xchg
push
loopne
sbb
sbb
repz
cld
ljmp
lock
test
es
adc
fimull
lret
movsb
inc
xorl
dec
test
ds
int
jno
pop
jae
outsb
push
and
in
pop
xchg
jge
or
or
mov
mov
xlat
push
lods
mov
das
xorb
inc
ret
test
cmpsb
jecxz
fimuls
sti
aad
push
mov
popf
sbb
loop
and
mov
push
mov
xorl
movsb
or
je
jbe
cltd
insb
sbb
xchg
mov
mov
cmpsl
or
adc
rcl
imul
mov
mov
jno
mov
pop
add
mulb
js
mov
xchg
sbb
mov
mov
mov
idivb
push
leave
and
mov
mov
arpl
leave
push
jnp,pt
jmp
inc
jne
pop
hlt
aaa
shl
outsl
and
pop
push
lret
fisttpl
jns
push
push
jno
out
add
and
mov
nop
xchg
stos
and
je
push
pop
fimuls
test
fsubr
jnp
jae
sti
xor
out
rcl
jbe
dec
push
xchg
and
sbb
popa
lahf
and
xchg
repz
push
ss
pushf
cwtl
or
inc
sbb
xor
xor
jae
leave
jo
ret
inc
mov
mov
loop
sbb
nop
push
ljmp
or
sub
pop
mov
jmp
in
js
xor
mov
sbb
pop
cmc
jle
push
add
ss
xchg
adc
push
jb
ja
push
in
jge
popa
sub
ljmp
jge
push
mov
mov
dec
jge
and
push
dec
lock
aaa
es
pop
movsb
or
das
push
mov
push
dec
fs
mulb
mov
jb
cs
mov
mov
pop
mov
inc
insb
pop
mov
ljmp
shrb
mov
jle
mov
shr
mov
test
mov
addr16
pop
loopne
push
push
je
mov
adc
push
sub
jmp
lcall
cs
rorb
imul
xchg
movsl
cwtl
gs
or
jp
jae
and
test
insb
mov
push
je
push
xchg
xchg
stos
cmp
lea
add
aaa
orl
je
leave
insl
xor
cwtl
pusha
push
mov
loopne
inc
mov
cs
jp
dec
orl
inc
outsb
xor
outsl
mov
in
inc
dec
cmc
jbe
cmp
repz
bound
mov
insb
hlt
lret
js
mov
data16
xchg
mov
and
cltd
gs
cli
xchg
dec
xlat
sahf
mov
jmp
outsb
int3
mov
xor
ss
mov
add
xchg
int
mov
stos
or
fwait
jae
jecxz
push
mov
jge
fucomip
cmp
pusha
insl
pop
push
daa
std
fldl
mov
mov
inc
xor
call
mov
nop
xor
jb
xchg
repnz
cmp
sbb
wbinvd
sub
mov
xlat
setle
adc
shlb
loopne
mov
push
ret
hlt
add
ss
gs
jle
inc
imul
rdtsc
add
push
adcl
pop
int3
loope
jne
rorl
pop
fsubrl
cmp
xchg
ficoml
jge
xor
das
std
jae
jno
xor
xchg
pop
nop
scas
pop
xchg
cld
mov
into
nop
jle
cmp
pop
cmp
mov
jle
cmp
enter
mov
inc
jo
cmpl
cli
sbb
fdivl
sub
out
addr16
loop
xor
sbb
jns
dec
cmp
lret
and
xor
xchg
mov
inc
test
and
inc
jno
inc
lret
pop
int
lea
movd
fstps
cmpsb
daa
lea
out
xchg
cmpsl
popa
push
mov
dec
pusha
xorb
aaa
add
or
add
and
sbb
lea
xchg
dec
or
dec
xchg
sub
lahf
fadd
xor
dec
or
pushf
xchg
add
mul
xchg
xor
cltd
fsubrl
or
popa
inc
into
bound
jae
adc
xchg
stos
push
out
dec
mov
imul
jno
arpl
dec
movsb
cltd
adc
jmp
int3
dec
testl
out
jl
cmp
rol
rclb
sub
sub
xor
and
xchg
jle
mov
push
lcall
jae
ds
sub
or
ficomps
scas
or
cmc
xchg
aam
aad
pop
and
mov
xchg
sub
loop
sti
pop
pop
pop
std
imul
lock
int3
mov
aam
inc
jge
test
clc
mov
mov
mov
lock
jle
mov
ret
jb
out
push
inc
pop
mov
pop
jp
xchg
cmovae
add
mov
xor
arpl
dec
cs
push
mov
push
mov
das
fnstsw
xchg
jl,pn
xor
sarb
lock
movsl
sbb
addr16
imul
int3
add
add
mov
cmpl
inc
adc
popf
ret
movsb
int
adc
pop
int3
aas
mov
leave
push
and
int
mov
mov
rcl
pushw
mov
or
jb
cmp
int3
cltd
imull
or
xor
mov
mov
mov
stos
in
sbb
push
adc
shlb
fcomps
push
dec
mov
lahf
jg
cli
inc
pushf
dec
lret
push
cli
push
shlb
inc
rcll
jns
adc
fwait
or
wrmsr
cmpsb
add
cmp
stos
in
add
mov
stos
js
lock
xchg
mov
ss
sbb
loop
je
pop
out
aas
push
mulb
mov
aad
xchg
scas
rorl
jmp
jmp
push
xlat
or
pushf
test
inc
pusha
dec
jno
push
cmc
in
and
aad
stos
cmp
cwtl
mov
xchg
test
das
add
inc
fistps
pop
fwait
sub
jno
test
js
rclb
lret
in
cmp
imul
and
mov
lods
pushf
in
scas
jnp
pop
cmp
or
cmpsl
sbb
mov
lret
xchg
xor
lea
mov
cmpsb
inc
sub
cwtl
lcall
outsl
push
pop
jl
mov
xchg
jns
leave
ljmp
mov
aam
push
rclb
pop
ret
cmpsb
and
cwtl
xor
jp
repnz
add
es
push
lods
aam
mov
ror
cs
or
pushf
mov
adc
sbb
fists
ret
xor
pop
jmp
cmpsb
push
pop
std
aad
push
cmp
inc
mov
and
rcr
ss
dec
repz
out
sbb
and
fstpl
loopne
jmp
cwtl
mov
icebp
bound
mov
sub
ss
push
arpl
adc
iret
arpl
jmp
into
inc
pop
fdivrs
add
testl
sub
leave
ja
xor
sbb
jbe
lcall
das
std
or
hlt
xchg
lahf
sar
add
lods
inc
cltd
das
push
mov
sbb
mov
es
hlt
or
js
mov
lock
add
les
lock
cmp
outsb
es
mov
je
xorl
shll
push
sbb
pop
push
dec
stos
jmp
push
adc
jnp
shrl
test
lahf
gs
movl
fiadds
mov
mov
in
mov
int3
clc
inc
fisubrl
sbb
adc
mov
mov
lret
repz
shll
jo
decb
lahf
jb
rcrb
sbbl
pop
fstps
arpl
out
and
das
add
fisttpl
cmp
and
or
pop
xchg
in
pop
into
add
in
or
inc
xchg
push
jbe
mov
sub
insb
and
scas
sub
loopne
jl
mov
pop
iret
lcall
test
lds
ret
dec
jle
dec
enter
test
bound
movsb
push
adc
lret
mov
cmpsb
rcl
mov
or
xor
int
iret
mov
cs
or
mov
pop
cmp
lea
push
push
js
cmp
ss
imul
mov
mov
xor
jne
into
xorl
or
pop
fisubl
scas
sbb
pop
sub
and
push
or
mov
repnz
out
xchg
adc
add
mov
dec
dec
std
push
stos
bound
dec
mov
pop
inc
and
mov
insl
or
cmpsb
or
pop
imul
imul
pop
cmp
leave
jl
pop
loope
sbb
leave
adc
push
lea
sub
mov
test
or
add
pmaxsw
sbb
hlt
sub
mov
xchg
lret
ds
iret
mov
pop
xor
add
and
mov
add
mov
ror
and
sahf
adc
add
fs
sarl
inc
xor
mov
loope
repnz
popf
mov
fyl2xp1
or
jae
or
daa
add
fdivl
mul
les
ret
jmp
cmp
lahf
pop
xchg
mov
mov
inc
cltd
test
arpl
stos
jbe
jp
cld
insl
sbb
add
ja
lods
add
push
jb
or
mov
cmpsb
je
xchg
jge
fwait
jae
imul
push
inc
jnp
or
insl
sahf
pop
bound
pushf
mov
in
fsub
sbb
je
outsb
cmp
jmp
mov
jb
jp
sub
xchg
pop
cmp
mov
xorl
aaa
ss
and
in
pop
or
cmc
jo
mov
xor
or
das
jne
or
lock
or
xor
adc
adc
cmp
in
fs
xchg
sbb
aaa
mov
lods
stos
mov
into
cwtl
jno
and
cltd
add
add
push
pushf
jecxz
in
cltd
push
sub
stos
xchg
aad
sub
sbb
in
in
sbb
jge
cmc
call
mov
and
inc
imul
pop
sbb
cmp
adc
pop
outsb
jecxz
cmp
movsl
jg
pop
pop
inc
scas
xchg
adc
jae
mov
cmp
xor
movsb
shrl
loope
jle
repz
push
aam
cmpb
push
lcall
adc
xor
add
mov
cmc
inc
mov
rcrb
add
adc
jnp
dec
inc
pop
cli
sub
add
les
dec
call
jne
adc
outsl
stos
cmp
dec
dec
inc
add
sar
mov
je
or
push
aam
pop
fs
mov
mov
popa
add
sbb
xor
repnz
ljmp
dec
jb
adc
inc
ficoms
test
outsb
mov
add
outsb
ffree
mov
testb
sbb
imul
inc
aas
ja
out
pop
subl
shll
jae
xor
xchg
sub
ja
mov
mov
lods
imul
lahf
mov
cwtl
test
xchg
aam
repz
cmpsb
ds
pop
xchg
xchg
fisttpll
or
in
aas
mov
inc
dec
cmp
mov
std
pop
movsb
xchg
ja
inc
cli
shrb
ret
fs
adc
mov
int
pop
inc
add
adc
outsw
pop
mov
mov
mov
stc
mov
xlat
jl
and
jbe
or
lcall
or
mov
add
xchg
jne
and
lcall
mov
repz
cmc
dec
int3
pop
daa
sbbb
scas
pop
loope
aam
cltd
mov
iret
cmp
roll
flds
sbb
pop
xchg
pop
test
fadd
cs
cwtl
mov
ret
push
pop
cli
sti
test
add
xor
sbb
bound
and
cmp
repnz
or
sbb
sub
lea
loopne
cmpsl
scas
add
mov
dec
push
sbb
jbe
push
push
cmp
fiadds
cmpsb
cmp
xchg
addl
add
jnp
push
jns
push
mov
push
js
lock
add
jmp
fildl
jmp
fmuls
xor
enter
inc
xor
repnz
cmpsb
or
addl
jge
popf
add
cmpb
dec
add
lods
outsl
mov
lock
mov
ss
inc
adc
andb
imul
jmp
xchg
fwait
mov
shl
int
jl
mov
sub
jle
dec
je
repnz
outsb
and
insb
push
or
mov
mov
mov
inc
lahf
dec
in
cli
cmp
push
mov
xchg
std
xchg
jecxz
test
cmp
sub
inc
shr
fcmovnu
cld
jl
dec
std
push
mov
leave
cli
mov
fcom
jo
adc
mov
js
xchg
dec
mov
mov
adc
mov
lcall
pop
inc
ret
xchg
cmp
test
xor
or
jb
adcb
rorb
fnsave
and
loop
into
mov
std
addr16
movsl
pop
mov
lret
or
ljmp
or
js
out
std
nop
pop
jg
aas
or
or
stos
inc
or
test
insb
shl
lock
xchg
xchg
jae
cmc
ret
xchg
cmpsb
pop
xchg
insl
out
out
out
in
cmpsl
cmp
inc
rcr
inc
mov
lret
xor
cwtl
pop
aas
filds
dec
mov
mov
lock
jmp
inc
ja
cwtl
outsb
xchg
sub
dec
add
pop
stos
adc
sti
pop
pop
push
jmp
ret
push
pop
sbb
divl
sti
mov
xchg
add
push
jmp
stos
test
sub
test
ja
rcr
je
jns
stos
add
jmp
lods
rorl
mov
dec
sbb
aad
in
jmp
inc
nop
fcmovnbe
adc
je
mov
sahf
inc
dec
pop
into
mov
dec
sub
fistl
inc
cmp
push
or
sbb
xchg
arpl
decb
push
sub
and
push
sbb
mov
gs
inc
jbe
jp
decl
test
lock
cmp
or
insl
aaa
jb
aas
test
loop
in
cmp
lcall
cli
ret
cmp
or
loope
icebp
jmp
daa
stos
dec
ss
add
cmp
aaa
mov
and
fisubrs
xor
jne
gs
or
xchg
push
add
push
push
rolb
dec
mov
out
shll
inc
adc
int3
leave
jns
pushf
sti
clc
ret
cwtl
fldl
divb
pop
mov
mov
pmulhuw
adc
outsb
sub
and
jecxz
jmp
mov
jp
adc
sub
cltd
mov
mov
rcl
inc
xor
push
idivb
stc
les
mov
in
lret
stc
divb
adc
adc
mov
ljmp
inc
inc
push
enter
call
fistps
jmp
mov
jmp
lahf
loope
xchg
inc
mov
icebp
leave
cmp
xchg
inc
test
cmc
pusha
out
imul
cli
fwait
jae
and
fcomi
out
scas
jp
sti
xor
lret
scas
in
sahf
dec
push
jno
popf
add
push
scas
xchg
mov
push
imul
add
push
sbb
aaa
mov
cmp
xchg
les
inc
test
jne
jbe
lds
push
push
stos
jns
push
movsb
xor
jbe
fwait
pop
push
fstpl
adc
xchg
mov
clc
sub
xor
xor
and
dec
imul
mov
add
sarl
aam
cmpl
cmc
xlat
fsubl
mov
mov
inc
sub
push
add
inc
and
and
scas
jp
mov
adc
jnp
outsb
jnp
lret
leave
xor
push
insb
pop
lods
push
cmp
lahf
push
daa
cmp
add
or
test
lods
daa
sbb
shl
fxch
outsl
fcomip
sub
or
ja
cs
sbb
lcall
mov
xor
jge
mov
pusha
add
in
jl
inc
xor
push
and
shll
popa
clc
sub
xchg
mov
xchg
push
push
push
pop
push
pop
das
mov
push
adc
mov
push
sub
mov
iret
mov
inc
arpl
pop
and
clc
popa
aam
push
pop
push
es
mov
inc
lret
jle
mov
dec
dec
hlt
xchg
mov
fcompl
cmp
jp
or
ret
push
fs
icebp
ljmp
adc
js
and
mov
pop
ret
pop
cmovnp
mov
in
and
cld
or
ret
mov
jnp
adc
pushf
dec
sbb
dec
jne
mov
addl
add
and
hlt
dec
cmc
xchg
and
cmpsb
fucom
aas
push
xchg
inc
sahf
por
push
fs
sar
nop
fiaddl
and
add
mov
ss
xor
and
bound
pop
out
inc
leave
mov
fcoml
mov
js
btc
mov
call
sti
outsb
xchg
test
inc
inc
adc
jae
in
leave
out
shll
and
repnz
xchg
call
add
jo
insb
out
inc
aaa
dec
add
hlt
std
mov
xor
in
xchg
xchg
fucompp
daa
xor
mov
insl
es
push
pusha
addr16
movsl
adc
or
xchg
sub
dec
test
and
mov
inc
test
or
mov
stos
fidivl
inc
sbb
or
shlb
cli
popf
push
ret
js
imul
add
adc
fildll
mov
cld
xchg
xchg
push
loope
mov
xchg
or
dec
adc
sbb
cmp
nop
orb
movsb
or
in
dec
stc
mov
cmp
lcall
addl
nop
xchg
mov
enter
pop
inc
dec
mov
cmpb
or
popf
lret
xorl
pusha
cmp
lcall
lods
cmp
bound
sbb
cmp
movsb
or
push
clflush
inc
dec
je
mov
add
lret
sti
pop
sahf
inc
push
movsl
xor
xor
aam
push
fcmovnu
xchg
dec
mov
or
out
dec
dec
xor
and
fidivl
mov
mov
rcl
adc
je
outsl
dec
push
mov
or
sbb
xorl
call
data16
repnz
xchg
xchg
lods
out
jbe
mov
push
inc
cmp
ss
cli
mov
pop
rcrl
mov
jns
int3
hlt
xor
loopne
pop
es
inc
adc
sub
fsts
js
cmpsb
xchg
add
and
and
xchg
fcoms
out
test
mov
outsb
jno
jle
mov
jo
pop
pop
roll
lock
pushf
test
aaa
and
lret
inc
dec
push
aad
push
cmp
xchg
cmp
int3
jp
push
mov
xor
ja
test
outsl
mov
cmpsl
jno
add
scas
aaa
ret
or
nop
inc
mov
lcall
iret
dec
into
cmp
cmpsl
mov
ds
add
aad
or
or
test
inc
mov
push
ljmp
cmp
negb
pop
mov
jge
clc
add
mov
push
mov
cmp
push
and
mov
jno
cmp
nop
cld
mov
repz
cmpsb
sbbb
insl
sbb
pop
stos
push
jge
gs
iret
repnz
or
pop
in
mov
scas
push
inc
adc
jecxz
daa
stos
insb
sahf
jno
add
xchg
xor
xor
call
sbb
pop
push
inc
popf
jne
stos
jecxz
xor
dec
xchg
inc
jg
and
cmpsl
cmp
outsl
loope
dec
add
pop
xor
aad
jnp
in
pop
test
adc
cmc
idivb
aam
movsl
push
hlt
lea
in
jne
push
into
inc
and
jle
push
int3
ret
lods
sub
xchg
dec
sti
push
out
into
aaa
cwtl
dec
mov
fsubrs
push
push
sbb
or
icebp
aad
loopne
or
sbbb
bound
lret
fnstsw
scas
cs
mov
xor
dec
xchg
mov
pop
xchg
inc
or
mov
adc
jnp
push
aad
cs
insb
add
addl
out
cld
out
sub
sbbl
mov
or
mov
and
xchg
decl
mov
inc
adc
xchg
push
cmpsl
clc
out
sub
std
adc
lods
push
testb
insl
mov
add
lret
lret
ficomps
ja
mov
sbb
sub
xchg
aas
xchg
lock
mov
cli
pop
mov
cmpsb
adc
sub
jl
jo
mov
imul
in
sahf
dec
sbb
adc
aad
push
and
les
pusha
push
jns
rcrb
dec
inc
call
hlt
arpl
lahf
jno,pt
add
or
pop
enter
and
leave
sbb
rcll
call
cli
jo
jno
in
out
xor
rcr
sbb
mov
pushf
and
insl
leave
push
leave
lds
je
push
add
cmp
stos
mov
gs
shlb
push
mov
xlat
notl
jmp
push
jge
sub
xchg
xlat
add
testb
and
hlt
cmpsl
stc
lods
pushf
jns
jl
mov
sub
lds
mov
mov
mov
adc
dec
pop
shlb
xchg
xor
fwait
pop
ret
std
push
in
test
adc
pop
mov
je
push
inc
mov
shrl
insb
iret
pop
icebp
ret
xchg
popa
push
pop
push
push
xor
in
iret
iret
pusha
push
imul
dec
cmpsb
jle
stos
push
jnp
mov
add
sub
cmc
orl
mov
and
mov
cmp
les
mov
lds
hlt
cld
movsb
xor
pop
pop
gs
addb
and
fwait
call
lcall
push
cli
push
jns
test
lret
sbb
das
scas
push
sbb
fcmovnbe
add
shr
mov
pop
nop
out
adc
test
lahf
push
mov
fildl
sub
das
fstps
js
fidivs
mov
imul
into
jmp
push
in
ds
test
or
in
dec
adc
mov
jbe
in
pop
frstor
mov
shll
aam
sub
sahf
aad
lret
lret
imul
fdivs
push
mov
dec
xor
notb
in
imul
adc
pop
js
lods
in
mov
insl
lahf
test
daa
mov
mov
rorl
je
icebp
sub
mov
xor
aam
add
push
inc
push
mov
fcomps
cld
lea
outsl
gs
aas
bound
or
adc
jne
in
sub
xchg
scas
ret
int3
notb
sub
aas
push
ljmp
push
dec
loop
push
sub
sbb
stos
rclb
out
movsb
fstp
and
inc
insl
mov
push
test
fwait
fwait
popa
mov
add
jp
nop
inc
pop
and
adcb
in
or
ret
dec
cltd
dec
int
lea
daa
dec
adc
in
jecxz
and
pusha
je
inc
ja
fisubs
and
int3
js
fsub
aas
add
popf
and
sahf
out
xchg
sbb
jne
cmp
mov
jae
xchg
cld
lds
and
fcoms
jge
push
mov
mov
inc
std
xor
lret
stos
pop
xchg
cmp
add
int3
mov
roll
cmp
inc
xchg
jne
repnz
loop
stc
gs
xchg
mov
and
scas
jnp
jg
mov
lcall
in
and
cld
adc
add
and
mov
icebp
inc
mov
clc
loopne
mov
fldcw
loope
fxch
arpl
mov
cmpsb
or
negb
cwtl
mov
int
cli
into
pop
xlat
ret
xchg
icebp
cmp
dec
das
jge
adc
cmpsl
cmpsl
notb
ljmp
popa
jno
or
cmc
and
repnz
inc
mov
mov
test
outsl
in
push
sub
sbb
xchg
push
pusha
lret
sbb
pop
dec
aad
into
cmpsb
aaa
in
in
hlt
imul
loopne
dec
and
loope
insl
and
mov
adc
or
dec
xchg
and
pop
mov
daa
push
fcomi
fwait
inc
cltd
or
inc
stos
jno
lret
push
pusha
stos
out
cmp
sub
pop
in
lods
je
pop
aaa
jae
insl
das
std
addr16
subl
repz
stos
xlat
cmp
lds
hlt
xor
sub
mov
pop
int
mov
push
sub
lcall
cmp
int3
mov
bound
roll
jo
dec
push
mov
mov
scas
lahf
jmp
sbb
and
inc
mov
and
xlat
bound
lods
push
sbb
sbb
es
sub
push
jle
sbb
mov
lods
push
or
add
aad
lret
fidivl
add
and
xchg
cmp
jmp
clc
lret
jge
mov
and
xor
or
mov
jg
push
and
jo
arpl
mov
jbe
movb
dec
inc
cmpb
leave
mov
add
outsl
push
dec
cld
cli
add
sar
fadds
sub
sbb
cmpsb
xchg
xchg
cltd
jle
sub
and
xchg
lods
xor
mov
cld
xor
js
xor
pop
push
sub
push
aam
outsb
jl
insl
fsubr
xchg
dec
cmp
jge
and
lcall
mov
jp
cwtl
lahf
inc
ret
std
jb
dec
mov
dec
mov
fsubs
mov
mov
insb
xchg
adc
mov
das
repnz
push
in
inc
dec
xor
test
and
addr16
jnp
jnp
loop
sbb
fwait
out
das
push
xchg
stc
mov
sub
adc
lcall
push
stc
push
orb
pop
pop
pop
int
insb
mov
shrl
sbb
mov
mov
dec
sahf
fisubrs
jle
sub
inc
jns
ret
push
data16
pop
dec
ja
clc
xor
in
or
xor
outsb
sub
nop
inc
insl
stc
add
push
add
fdivrp
xor
xchg
mov
inc
lret
inc
nop
jae
int3
add
pop
mov
nop
pop
daa
or
sub
mov
sbb
xchg
add
pop
mov
mov
mov
scas
mov
sbb
dec
in
mov
jge
and
adc
xchg
inc
cmp
jb
cli
pop
adc
out
lods
inc
imul
adc
xor
scas
loop
pop
xchg
fwait
imul
stos
mov
pop
lock
insb
inc
addr16
stos
rcr
cmp
jp
bound
int
mov
mov
mov
dec
dec
xor
insb
pop
mov
lock
aas
test
fdiv
pop
fldt
daa
bound
inc
stc
and
in
sub
shrb
loopne
or
adc
popa
sbb
test
jmp
daa
jae
nop
mov
inc
sub
cmpsb
jge
pushf
add
lret
mov
aaa
int
mov
adc
jne
jmp
xor
movsl
and
add
cltd
ljmp
aad
sahf
ret
je
andl
cmpsb
lea
aaa
sbb
add
lds
mov
fidivrs
mov
movsl
add
mov
lock
imul
sarl
sbb
outsl
stos
inc
xchg
inc
sahf
mov
clc
xchg
sub
xchg
sbb
inc
cmp
out
test
insl
insb
mov
add
xor
push
push
mov
mov
in
dec
cmpsb
sbb
aas
add
int
js
sbb
test
xchg
inc
cmp
xor
push
insb
fwait
mov
daa
adc
lret
out
adc
jne
push
mov
sbb
add
pop
push
jne
aad
dec
aad
pop
ficoml
cmp
sbb
ret
sbb
dec
fcomp
push
sarb
push
xor
test
iret
out
pushf
and
fisubs
adc
jb
outsl
cmc
test
xchg
out
dec
and
repz
sub
push
xor
in
call
mov
cmc
mulb
ss
sub
lret
and
and
mov
arpl
icebp
out
dec
out
shll
adcb
add
dec
out
cmp
in
pop
push
pmulhuw
adc
repnz
mov
jno
pop
or
mov
inc
call
sbb
sbbb
cmp
insb
cld
lahf
imul
sub
push
icebp
icebp
cmp
jae
cmpsb
dec
or
sbb
enter
dec
mov
jge
add
adc
add
sbb
mov
adc
sub
shrb
aam
xchg
or
or
aad
mov
adc
stos
sub
xor
lahf
sub
iret
incl
mov
scas
push
xchg
add
decb
imul
pop
ret
push
enter
insb
inc
dec
mov
shrb
mov
addr16
lock
les
cmp
dec
add
int3
fsubrl
adc
fists
cmp
iret
inc
popa
lcall
addl
and
cmp
push
and
mov
movsb
fisubrl
or
imul
incb
jb
dec
out
sub
pop
push
test
cld
cmp
add
mov
sbb
pop
out
push
push
fsubrl
sub
sbb
and
movsl
rol
aad
cmpsb
int3
add
xchg
jle
nop
push
xor
orl
push
lret
sub
pusha
xor
andl
jp
mov
mov
fmul
enter
pop
push
jp
lock
rorl
aas
xor
out
ss
sub
and
fcmovnb
gs
mov
daa
dec
dec
adc
andb
fsubrl
movsb
jns
cmpsb
repz
sub
push
icebp
mov
pop
sti
cmp
aam
scas
insb
sti
mov
subl
jbe
adc
fdivl
imul
mov
jp
scas
cmp
push
pop
mov
add
xor
mov
or
and
ds
adc
sbb
jne
aam
fwait
ja
push
and
cmp
sahf
aam
fistpl
bound
push
stc
and
subb
mov
dec
pop
xchg
cmp
aas
push
shrl
or
mov
jmp
cld
insb
lods
fucomi
jae
or
and
popl
lods
cwtl
jne
scas
cltd
icebp
sbb
push
pop
mov
push
sub
popa
or
sbb
push
repnz
idivb
imul
xchg
adc
pop
push
lds
pop
mov
inc
lret
std
jno
sub
cmp
push
sub
mov
fisubs
je
aas
loopne
mov
mov
leave
or
pushf
mov
test
int3
or
lea
outsb
xor
and
dec
cli
jp
push
fidivrl
das
xchg
popf
or
ret
or
xchg
mov
xchg
and
loopne
out
cli
lret
or
xchg
add
fidivs
hlt
daa
or
addr16
dec
inc
mov
inc
push
int3
int
icebp
cmpsb
and
movsb
mov
cmp
ljmp
mov
mov
mov
outsl
leave
xor
dec
orl
dec
push
cmpsl
mov
push
push
mov
xchg
clc
or
mov
jbe
lret
es
xor
sahf
fidivrs
add
mov
mov
adc
fnstcw
ret
mov
xchg
dec
idiv
andb
inc
divl
push
push
fcmovnbe
orb
push
outsl
push
mov
mov
and
add
movsb
xlat
inc
cmp
addr16
mov
in
jae
imul
mov
ret
cmp
repnz
mov
jno
enter
jle
jne
cmpsl
add
cmpsb
xlat
in
mov
call
data16
xchg
push
cli
xchg
adcl
ds
cmp
mov
sub
xor
sbb
mov
jnp
cmp
xchg
divb
push
mov
rclb
and
push
loop
push
movsl
mov
js
mov
lret
les
xor
imul
lods
cld
loopw
repnz
incb
or
gs
ds
push
jl
fidivrl
xchg
test
mov
xchg
js
inc
sub
loope
and
sub
push
push
cmp
lcall
jecxz
inc
mov
in
ljmp
xor
into
and
test
mov
das
outsb
sub
mov
ljmp
and
jg
daa
je,pn
scas
data16
sub
mov
enter
sub
cwtl
jmp
and
jg
jle
and
and
jns
js
sbb
dec
pop
adcb
arpl
lods
popa
sub
movsb
aas
pop
add
add
jecxz
ds
popf
daa
or
xor
test
bound
cmp
rolb
insb
mov
scas
or
cmc
jge
lds
xor
lods
cmp
adc
fbld
stc
shrl
xchg
sub
sub
insb
push
jb
mov
jmp
fdivl
xorb
xchg
sub
cmpsl
sbb
pop
push
bound
or
pop
int3
dec
fisttpl
mov
xchg
scas
sub
jecxz
cltd
ret
mov
xor
pop
jl
cwtl
arpl
fsubrl
bound
add
inc
repnz
dec
loope
mov
push
test
lods
js
rolb
loope
pop
or
sub
sub
pusha
out
jge
mov
xchg
mov
or
xchg
clc
mov
imul
mov
sub
clc
inc
fs
jns
mov
das
aaa
dec
and
xor
mov
mov
shr
ss
in
stos
mov
sub
push
inc
xchg
and
pop
hlt
jbe
fldenv
inc
scas
jb
sub
stos
jmp
subb
mov
jg
shll
jmp
push
std
cmp
aaa
pop
mov
push
jg
rclb
insl
xchg
jbe
add
nop
stos
lret
repnz
adc
ret
jl
mov
sub
popa
ror
mov
in
xchg
out
jle
xor
xchg
out
jb
loopne
scas
fldl
mov
cmpsb
mov
and
out
push
or
loopne
pop
in
jb
decl
inc
jmp
push
xchg
inc
sub
jle
cwtl
pop
push
rcll
adc
lret
out
mov
and
push
in
stos
int3
inc
inc
xchg
imul
bnd
les
cmp
mov
sub
outsb
adc
lcall
cld
mov
aaa
cmpsb
xlat
jbe
and
inc
cld
loopne
sbb
in
cmpsl
lock
aaa
pop
out
in
shl
add
aaa
or
fdivs
xor
lock
jo
add
cmp
ljmp
mov
sub
sub
inc
faddl
push
cmc
lods
inc
jl
insl
loop
sbb
aam
test
dec
jns
ret
test
sub
insl
mov
jp
sahf
fdivrl
inc
jb
dec
mov
stc
addr16
pop
sahf
idivb
cmp
lds
lahf
dec
add
mov
mov
sub
dec
outsl
push
movsl
mov
lods
mov
and
sbb
or
push
jno
in
adcb
rclb
mov
xchg
or
and
rep
jg
psrlw
jno
adc
imul
xor
in
leave
cld
test
cmp
rcr
fsub
jo
xchg
pop
dec
mov
and
insl
sti
fidivrl
scas
fwait
gs
xchg
mov
ljmp
or
jecxz
lret
arpl
dec
xor
aam
and
pop
ret
cmp
icebp
out
aam
loope
ljmp
jge
or
fsts
adcl
mov
and
and
dec
xchg
dec
jmp
sub
jmp
lahf
call
add
mov
adc
std
jmp
dec
mov
shrl
mov
adc
jecxz
stos
mov
test
cmc
pusha
fstps
repz
pop
jne
cmovae
adc
enter
hlt
jg
cmp
adc
sub
adc
sub
xor
pop
lret
and
adc
aam
mov
jae
add
out
adc
shlb
std
aas
jo
pop
mov
scas
movl
lock
call
fimuls
pop
ljmp
lods
sub
jo
inc
xchg
pop
jecxz
jns
hlt
mov
jg
dec
pushf
jns,pn
rcl
ficompl
bound
enter
sahf
movsl
imul
pop
and
xor
cmp
mov
iret
popf
jle
das
or
jne
js
or
roll
ret
or
ds
mov
ja
loop
and
inc
mov
xor
mov
cs
mov
cmp
ljmp
sbb
ror
orb
test
pusha
mov
jge
mov
cmp
xchg
cmp
in
add
mov
es
icebp
aad
in
lcall
dec
pop
mov
mov
pop
fsubrl
mov
je
adc
test
pushf
lahf
leave
mov
inc
mov
dec
lret
mov
das
rolb
test
loop
les
scas
daa
dec
add
push
sbb
sub
lret
push
sbbb
fsubrs
mov
gs
push
orl
dec
sub
sbb
int3
xor
xor
jno
movsl
lret
mov
sbb
mov
mov
inc
jno
outsb
arpl
adc
leave
sub
test
or
dec
adc
lcall
ret
out
xchg
jae
jno
mov
out
sti
add
cltd
adc
inc
xchg
mov
jo
jg
mov
insb
cmp
xchg
mov
popf
pop
mov
and
cli
jne
pop
mov
pop
out
popf
mov
sbb
mov
push
mov
repnz
cmpl
shlb
aas
xchg
mov
xor
inc
lret
dec
dec
sbb
inc
mov
ret
cli
rcl
pushf
xchg
push
rolb
mov
xlat
aaa
sbb
sar
xor
add
insb
popa
fs
fnsave
cld
xchg
pop
inc
xchg
pop
xchg
ljmp
xchg
sbb
imul
call
cmpb
iret
pop
mov
sbb
mov
dec
jns
pop
fists
or
inc
lret
mov
push
outsb
popf
ffree
inc
movsb
les
inc
jbe
mov
xchg
out
in
mov
mov
dec
in
sbb
arpl
cmp
mov
jl
js
mov
repnz
orl
mov
inc
pop
hlt
cmpsl
clc
lahf
mov
jle
les
fbld
jae
fistpll
jbe,pt
pop
and
xchg
pop
sbb
inc
dec
ret
leave
out
inc
loopne
sti
xchg
dec
ss
push
popf
insb
cmp
push
add
add
lods
push
mov
into
xor
jle
sbb
dec
xor
dec
inc
std
mov
xchg
push
ret
imul
fisubrl
movsl
push
mov
dec
pusha
fnsave
ret
pop
mov
mov
pop
or
insb
push
test
lods
add
fsubs
pop
adc
movsb
inc
popa
shll
imul
fiadds
mov
bound
hlt
stos
aam
loope
mov
push
pop
adc
scas
fs
adcl
or
cs
out
inc
shll
sbbb
lret
testl
adc
or
subl
add
mov
movsb
mov
loopne
sahf
push
add
push
popa
sub
cvtpi2ps
fisubs
mov
cmpsl
mov
movsl
pusha
movntq
out
xor
add
sub
aad
xchg
sub
or
mov
jle
aad
mov
push
mov
sub
push
adc
jge
inc
popa
mov
mov
lcall
or
mov
mov
sbb
jns
sub
and
pop
mov
rorb
jbe
popa
sbb
dec
or
sbb
inc
push
fistl
sub
stc
mov
fistps
xchg
dec
push
ror
dec
push
jg
lods
xor
dec
aas
popa
pop
jo
push
pop
inc
cmp
pop
and
pop
xor
clc
cmp
or
push
rclb
fsts
cmp
loop
and
rcrb
push
push
dec
pop
mov
ljmp
add
add
iret
cmp
xchg
mov
xor
dec
mov
div
mov
std
and
push
fidivs
lahf
pushf
mov
sub
add
lahf
or
in
cmpl
or
es
dec
clc
cmp
and
les
or
add
fld
test
aaa
out
std
inc
insl
xor
sub
out
add
test
ficomps
sub
mov
sub
inc
fcomi
add
mov
scas
mov
out
nop
loope
dec
insl
and
pop
jge
js
pop
add
outsb
or
add
dec
fnstcw
test
xor
test
add
inc
jo
and
in
xor
push
cmc
std
lea
mov
mov
lock
pop
sub
out
add
or
sbb
popa
jecxz
dec
mov
jae
lods
jo
xchg
lea
int
xor
shrb
lahf
imul
push
xor
mov
addr16
imul
and
mov
jmp
push
iret
sbb
daa
mov
xchg
xor
stc
cmp
sar
rclb
inc
icebp
testl
movb
adcb
cwtl
loopne
sub
push
roll
jo
pop
fstpl
xchg
push
pop
enter
out
mov
mov
cld
enter
shl
mov
pushf
or
push
add
jl
jp
xchg
cli
cmpl
fimull
sahf
stos
leave
orb
rcll
add
mov
sbb
push
and
or
cmpsb
cmp
add
lahf
mov
cmpsb
int
sub
cs
inc
mov
add
jecxz
fmuls
sub
out
jg
in
icebp
or
or
imul
divl
jmp
mov
push
cmp
mov
out
mov
mov
push
xchg
aad
add
int
fstps
xchg
ds
aaa
lods
stc
cmpsb
inc
cld
out
ret
push
daa
mov
cmc
mov
xchg
adc
sub
in
pop
gs
out
cmpsb
xlat
leave
testb
jecxz
sahf
ss
dec
imul
fcomp
dec
outsl
cli
fwait
outsb
clc
pusha
or
push
sub
adc
test
sbb
mov
fwait
ds
out
cmpsl
stos
rclb
add
push
sbb
jge
fs
fadd
jno
mov
cltd
sbb
rcr
ficoml
mov
push
mov
ds
fdivr
out
iret
cld
sub
and
or
fistpl
jge
cwtl
add
cmpsl
mov
loope
cmp
lcallw
fwait
std
add
insl
mov
jnp
fyl2x
mov
xchg
push
xchg
or
mov
ds
fwait
repnz
adc
test
call
jb
pusha
fwait
aaa
mov
mov
inc
xor
aam
push
rol
cmc
or
popf
and
leave
daa
iret
dec
cwtl
xchg
arpl
out
ja
daa
mov
push
fildl
nop
mov
hlt
or
imul
xor
daa
push
sti
popa
test
das
cld
or
sahf
hlt
add
inc
jno
lret
xchg
sti
cmpsb
xchg
stos
enter
out
mov
andl
push
repz
xor
sub
cmp
dec
rcr
mov
pop
in
in
dec
jae
jp
cmc
loop
movsl
xor
mov
push
dec
roll
pop
daa
or
sub
push
lods
les
and
lahf
mov
aad
adc
das
pushf
mov
xor
test
mov
in
testl
fwait
dec
clc
mov
pop
push
or
xchg
xchg
add
cltd
ss
jl
sbb
movsl
sub
fdivr
mov
popa
mov
jns
pop
mov
jge
jbe
add
es
mov
add
push
push
add
ret
jns
insb
sub
cmpsb
arpl
mov
ja
mov
and
fcoml
ljmp
in
dec
and
push
imul
adc
stos
test
lods
cmp
push
push
cmp
xchg
lahf
jl
in
popf
jnp
lret
dec
roll
and
mov
mov
mov
in
cmpsl
lret
in
loopne
iret
pop
or
xchg
dec
fnsave
sbb
fistps
lret
cmp
push
mov
mov
cs
xor
add
adc
movsl
pinsrw
cmp
cld
popa
inc
fnstsw
das
jl
jg
mov
xlat
inc
roll
jne
pop
bound
and
jp
pop
hlt
mov
fwait
xchg
iret
aam
icebp
and
call
mov
into
pop
add
xchg
mov
xchg
subb
or
test
and
rolb
dec
mov
push
xor
push
ffreep
dec
mov
push
ret
fimuls
pop
out
xor
push
jo
orb
mov
mov
mov
xor
pop
mov
or
mov
push
pop
and
icebp
sbb
popa
xchg
in
fldcw
fwait
test
loope
cmpsb
push
rcll
push
pusha
jg
xor
dec
test
outsb
in
popf
addl
push
inc
pop
xchg
loope
cli
dec
mov
dec
adc
mov
sar
mov
add
icebp
xor
fabs
fldl
add
dec
mov
test
sbb
inc
jnp
clc
inc
imul
dec
lret
adc
sub
jno
mull
xchg
push
pop
lock
data16
ss
mov
incl
addr16
push
pop
aam
out
xor
scas
sub
push
inc
mov
imul
sub
jbe
or
xchg
aad
test
aaa
fwait
lret
mov
stos
out
lods
pop
push
jmp
push
push
int
dec
cmp
pop
jmp
cmp
dec
jae
movsb
movsb
push
rcr
xchg
insl
or
push
shrb
pop
sub
xor
leave
push
jo
dec
shrb
cmpsl
sarl
and
mov
arpl
mul
inc
mov
aam
pop
outsl
nop
outsl
movsb
mov
iretw
lea
push
cmp
cli
jno
jle
aas
pop
push
inc
popf
jns
cltd
aaa
add
and
push
orl
add
mov
loope
push
movsl
incb
out
bnd
aas
fildll
xor
mov
dec
cmpsl
xchg
test
clc
sbb
sub
fiaddl
ja
push
mov
sbb
xlat
xor
mov
xchg
xchg
imul
out
jno
stc
fxch
jae
xor
push
mov
pop
push
cmp
imul
fisttpl
pop
pop
ret
xchg
or
push
sbb
push
fistps
imul
xchg
cmp
sti
mov
stc
aas
cld
sub
int3
leave
push
leave
fmul
push
lods
popf
xorl
cmc
push
in
mov
dec
cld
rol
fsubrs
jo
popl
div
sbb
xor
ret
pop
adc
insb
ss
jno
in
mov
inc
dec
mov
mov
notb
inc
cmp
jmp
je
dec
into
add
push
jb
jle
and
xchg
aaa
aam
das
and
mov
push
mov
popf
out
out
and
xchg
mov
lahf
mov
fiadds
mov
or
ret
imul
push
mov
push
mov
pop
fwait
mov
rcll
xchg
dec
xor
push
test
inc
jl
pop
add
mov
cltd
test
jns
out
add
sub
jle
cli
inc
test
cld
mov
and
pop
sub
mov
mov
or
xchg
mov
test
jmp
sbb
test
inc
push
sbb
xor
out
jns
hlt
movl
adcb
mov
cmovnp
mov
mov
jnp
ds
repnz
mov
xor
pop
mov
test
out
fstps
cmc
sbb
dec
xlat
cmpsb
shll
cli
xchg
inc
out
mov
repnz
in
out
inc
mov
fstpl
add
jl
pusha
cli
mov
clc
xchg
mov
pop
sbb
repnz
inc
iret
mov
loop
jmp
mov
pop
sub
insb
cli
mov
add
cmp
lods
ss
dec
fbstp
sarb
push
adc
xor
insb
push
jo
cmp
push
mov
mov
xor
cmp
sbb
sbbl
mov
xchg
mov
js
sbb
mov
cmp
out
lret
adc
sbb
xorl
lea
fmul
fstl
xor
ds
cltd
lret
rcrb
or
jg
imul
mov
ss
sbb
out
mov
inc
iret
mov
push
mov
add
or
gs
mov
decl
add
sbb
int
addr16
popf
arpl
jo
mov
pusha
pop
cmp
inc
dec
jns
leave
xlat
lret
fsubs
and
mov
sbb
pop
mov
push
je
sbb
pop
adc
imul
pop
addr16
sub
outsb
imul
in
xor
dec
rolb
jmp
ficomps
iret
push
add
movsb
and
xor
mov
mov
cmp
and
push
inc
das
js
mov
outsb
mov
icebp
xor
das
pop
in
bound
repz
outsb
clc
push
pop
jo
lret
and
cmp
lahf
imul
push
sbb
aaa
dec
mov
cmp
lahf
rcl
je
dec
jne
call
lock
nop
mov
push
add
stc
mov
push
lcall
fbstp
repz
jle
divl
fdivl
inc
ret
sub
push
aas
addr16
into
push
xchg
and
sbb
mov
stc
adc
or
jmp
fsubrs
std
lahf
icebp
mov
mov
and
ret
out
push
mov
mov
add
ret
ret
sbb
loope
cmpsl
xor
pop
lret
or
push
rcl
add
mov
pop
fst
nop
js
push
mov
ret
push
movsb
mov
xor
out
add
push
jge
pushw
mov
dec
ss
jmp
stc
fsts
fistl
stos
or
adc
ja
jle
and
outsb
mov
pop
movsb
xchg
push
scas
cmpsb
fpatan
inc
popa
or
pop
es
push
add
pop
aaa
cltd
pushf
jns
aad
je
test
mov
xlat
sub
dec
pop
push
insb
ss
xchg
stos
nop
cmp
and
pop
xchg
sti
pop
mov
xor
or
les
inc
or
mov
xchg
stos
das
sbb
fsubrp
or
in
enter
mov
fisttpl
mov
stos
push
loope
loop
sub
in
xchg
mov
bnd
loopne
pop
push
in
or
cmpsb
xchg
das
and
lock
adc
pop
imul
mov
or
fwait
aas
pop
mov
or
in
in
push
stos
in
fwait
stc
nop
mov
pop
adc
pop
in
add
pop
sub
sub
mov
mov
cmc
push
push
leave
in
dec
or
cld
add
nop
mov
sub
pop
push
arpl
jle
xorb
push
add
xor
push
xchg
fstpt
dec
mov
adc
sbb
lds
jno
ljmp
push
xor
imul
int
and
inc
xchg
pop
fdivrs
test
xor
pushf
fmuls
out
je
std
jge
data16
xchg
or
dec
jecxz
xchg
scas
js
clc
mov
out
mov
pop
or
cmp
popf
out
idivl
sbb
inc
sarl
pop
mov
add
adc
adc
in
mov
test
dec
lods
lret
mov
dec
pop
inc
add
adc
sahf
push
orl
push
push
loopne
mov
or
fildl
pop
jecxz
shlb
jecxz
xor
sbb
movsl
mov
repnz
jne
cmpsl
add
popf
jb
jle
sub
mov
fistl
sti
stos
sbb
add
inc
mov
cmc
jge
rorl
stos
mov
jl
xchg
add
dec
xor
xchg
mov
xor
nop
addr16
cltd
orb
jp
cvttps2pi
fsubrl
xor
loopne
jle
push
jno
or
and
xor
rcr
xlat
adc
cmp
jnp
icebp
jae
xchg
ja
dec
cmp
jbe
cli
repz
repz
cwtl
dec
pop
add
cli
nop
xchg
mov
inc
pop
mov
dec
add
lret
jmp
test
jmp
xor
repnz
mov
cwtl
cld
pop
push
add
xlat
cltd
xchg
lods
mov
add
sbb
dec
mov
rclb
cmp
nop
aaa
sbb
jle
jno
cmp
in
imul
shrl
sti
cld
lock
cmp
fwait
movl
jae
sub
pop
pop
inc
add
ds
std
popa
and
rolb
scas
mov
mov
or
sub
aad
sbb
mov
popa
jle
dec
addr16
xor
subb
fs
aam
clc
negl
fdivrs
lods
dec
shrb
mov
mov
lods
xchg
jecxz
lock
pop
pop
js
xor
sbb
jecxz
aam
add
pop
enter
pusha
pop
aas
sub
repnz
lcall
pushf
dec
stos
mov
sbb
pop
cwtl
xor
sub
fstl
xchg
test
gs
call
popa
pusha
mov
push
out
and
ds
pop
das
shr
xchg
pop
in
xchg
ljmp
js
pop
xor
imul
add
add
add
and
push
cld
xor
testl
sarb
lret
sbb
aad
jns
fwait
xorl
es
mov
les
sbbl
jo
mov
and
insl
rcrl
dec
shlb
pop
sub
repz
sahf
out
pop
dec
lret
inc
neg
les
xor
jecxz
mov
lods
outsl
mov
sbb
xor
fcoms
mov
and
cltd
jp
and
sub
aam
mov
or
jne
xchg
add
cmp
out
notb
xor
stos
addb
fimuls
push
test
mov
int
ds
inc
pop
push
mov
jecxz
and
mov
loop
repnz
lds
and
xor
sbb
in
das
mov
inc
cwtl
lock
mov
jmp
xchg
sbb
frstor
xchg
inc
lods
sub
jl
fnstenv
fimull
in
push
sub
out
mov
lock
cmpsl
mov
nop
stc
xchg
int3
xor
push
leave
call
xchg
jnp
stc
pop
orb
and
repnz
int3
jle
adc
jmp
push
xor
cmp
outsb
fistps
or
cld
or
and
mov
loope
shll
cmp
enter
loopne
outsl
adc
sbb
arpl
dec
stos
insb
pop
sbb
dec
add
cmp
fbld
mov
xchg
hlt
rclb
or
xchg
push
ret
aad
mov
cltd
sti
fldcw
adc
iret
jnp
mov
mov
sub
mov
sub
fwait
cmp
js
inc
aad
mov
sub
stc
jno
sub
jb
adc
cli
adc
out
and
mov
adc
out
testb
mov
mov
pop
lret
pop
repz
ds
dec
push
mov
pop
pop
xchg
sbb
sbb
mov
lcall
mov
les
xor
fchs
sub
dec
loopne
dec
cmpsl
cmp
mov
xor
out
por
mov
pushf
dec
jp
or
sub
cmpsl
wbinvd
push
or
add
or
insb
jo
dec
leave
sbb
pop
test
add
stc
or
fbstp
sbb
mov
dec
scas
fnstcw
jecxz
dec
push
inc
dec
call
lcall
xchg
cli
pop
cmp
xor
sbb
jg
dec
cmp
es
or
adc
dec
scas
fildll
arpl
pop
lea
sti
mov
das
push
adc
ljmp
mov
mov
dec
xor
test
jne
xchg
aaa
xor
int3
clc
les
xchg
das
jns
fisttpl
pop
aaa
lock
std
fcompl
imul
insl
pop
and
sub
das
loop
or
cmpsl
xor
mov
or
rorl
mov
mov
push
mov
js
in
icebp
sbb
xor
pop
test
stc
inc
mov
xchg
imul
mov
pop
inc
clc
mov
test
fwait
not
xchg
mov
mov
stc
xor
pop
mov
dec
bts
cmp
movsl
popa
sub
mov
jge
push
stos
mov
dec
sbb
sub
push
sub
fisttpl
jb
mov
fsts
add
outsl
cwtl
pop
push
cmpsb
lds
mov
loop
in
or
jbe
sti
fmul
mov
cwtl
fsubs
xor
or
pusha
xlat
pushf
out
jne
hlt
dec
out
add
add
div
mov
test
sub
andl
sbb
out
sub
sub
xchg
gs
lods
sub
xchg
xchg
mov
mov
imul
stc
sub
jno
es
pop
cmpsl
rcr
pop
push
xchg
xchg
out
mov
xchg
xchg
cmpsb
xchg
push
pop
dec
enter
cltd
andb
pusha
dec
sub
pop
lds
aad
mov
dec
pop
pushf
jmp
lods
mov
pop
or
sbbl
xchg
xor
cmpsl
lahf
mov
outsb
cmp
mov
push
and
js
lret
sbb
cmp
mov
cli
add
cld
subb
adc
leave
jns
adc
mov
jne
sti
sub
mov
fmulp
outsl
into
mov
stos
jns
outsl
enter
and
insb
xor
aad
inc
ret
repnz
push
jge
add
pop
mov
call
popa
outsb
or
sbb
mov
popf
mov
lds
js
mov
pop
xor
out
test
mov
int3
movsb
xor
loopne
shl
sub
in
mov
push
lret
rcrb
ds
dec
fldt
insl
sub
popl
pop
jnp
dec
pop
mov
inc
mov
mov
addb
mov
into
mov
pop
sub
inc
or
mov
outsb
inc
fs
and
mov
bound
pushf
shlb
pop
push
daa
pop
lcall
rcrl
xchg
sub
loope
aaa
and
rorb
sbb
mov
rolb
lock
jecxz
lock
test
notl
outsb
or
pop
addb
shll
inc
lock
aad
cmp
fisttpl
pop
mov
xor
jnp
xor
mov
mov
dec
inc
jmp
mov
out
ret
jecxz
cltd
xchg
and
sahf
pop
push
adc
sub
sbb
cmp
outsl
push
popa
adc
inc
mov
mov
hlt
imul
sbb
pop
hlt
aaa
push
mov
cmc
movsl
lods
sbb
addr16
out
nop
jae
lock
gs
lods
dec
mov
dec
repnz
adc
jecxz
sahf
cltd
and
aas
sahf
or
sub
or
pop
mov
mov
xchg
lea
jo
addr16
sub
mov
cmp
repz
cmp
mov
sub
cmp
cltd
and
mov
movsl
mov
mov
mov
pop
adc
je
fisttpll
cmp
mov
andb
push
dec
lods
fdivrp
insl
sbb
in
popf
cld
cmp
xchg
mov
pop
fcmovne
sbb
or
ss
xchg
rcrl
jmp
mov
loopne
hlt
shrb
xchg
or
cltd
repnz
dec
ss
mov
or
lahf
movsl
xlat
lods
aam
test
mov
mov
gs
inc
push
idivl
jne
push
int3
dec
lods
push
rol
pop
scas
inc
sbb
pop
jae
pop
loop
rcrb
pushf
jb
ret
pop
iret
dec
loop
or
cmp
insb
lcall
insb
sbb
sbb
in
fs
pandn
lods
test
mov
add
mov
je
bnd
call
lahf
cmpsb
test
xchg
push
push
and
or
mov
sub
fs
or
inc
push
and
mov
leave
incl
imul
xchg
dec
mov
push
ss
inc
xchg
es
pop
daa
cmp
sub
shl
push
std
cmova
lds
or
dec
stos
push
mov
addr16
mov
arpl
fisubrs
and
or
inc
mov
aad
pop
insb
incb
mov
sub
adc
push
sbb
or
bound
repnz
inc
inc
add
dec
pop
mov
lret
sti
scas
or
fs
xchg
xor
pop
repz
repz
fdivp
or
jle
add
out
cmp
lods
mov
inc
insl
sub
enter
repz
outsb
or
movsb
adc
mov
mov
push
loope
dec
fdivl
int
push
sbb
ds
push
adc
aas
frstor
xchg
and
mov
or
push
call
pop
jnp
out
and
loope
lahf
sarb
inc
add
shll
mov
add
and
lret
pop
lahf
imul
xchg
xchg
cltd
movsl
mov
push
jl,pn
push
notl
xor
lods
ret
je
jnp
hlt
mov
or
adc
inc
ds
add
rcll
mov
or
sub
movsl
das
push
or
arpl
sbb
mov
xchg
cmpb
in
pusha
push
inc
pop
unpckhps
mov
push
cmc
pop
in
push
callw
pop
mov
xchg
pop
xchg
dec
loop
outsb
fmull
jne
daa
arpl
add
aaa
outsb
jns
test
icebp
or
aaa
lods
mov
rorb
ret
into
notb
mov
mov
rcr
inc
inc
dec
lahf
shll
mov
popl
or
xor
in
cmpsb
test
sub
out
clc
pop
dec
into
loopne
lahf
mov
add
shrb
out
aaa
div
lahf
mov
push
fs
jl
cs
pop
or
jg
sbb
dec
and
pop
and
cmp
shr
mov
inc
xchg
cltd
adc
xchg
out
mov
into
ficomps
loop
xchg
psrad
clc
in
mov
test
inc
pop
pop
fwait
jno
cld
lods
fucompp
lock
push
stos
pushf
push
ja
sub
push
ds
roll
stos
rcrl
addr16
stos
jbe
xchg
out
addr16
fistpl
dec
dec
popf
sub
mov
pusha
adc
adc
das
rcll
inc
mov
mov
pop
mov
mov
mov
mov
aas
in
pop
dec
lcall
mov
ljmp
pop
jo
pusha
pop
fdiv
add
stos
bound
dec
sub
jne
lret
ljmp
movsb
cwtl
fs
gs
dec
inc
mov
imul
bound
stos
jecxz
xchg
push
adc
movsb
mov
imul
pop
jns
outsb
dec
mov
les
subb
test
push
sbb
icebp
or
fabs
add
outsb
hlt
sub
push
push
push
call
fld
shrl
orl
or
push
mov
and
sub
out
enter
icebp
jl
addb
inc
sbb
xor
jne
inc
pop
cmp
lahf
inc
ds
add
mov
mov
test
sahf
sub
popa
adc
push
xor
mov
lods
mov
mov
xchg
inc
xor
in
mov
mov
ja
ret
xchg
in
int
jg
xchg
sbb
daa
lret
pushf
lock
mov
aaa
fdivl
stos
and
outsb
and
loop
mov
dec
sahf
sbb
sbb
jmp
arpl
test
outsb
ret
sub
push
lods
cwtl
or
lock
jne
jg
cmp
movsb
or
push
inc
xor
lock
cmpsb
push
lods
mov
loope
arpl
mov
inc
sahf
xchg
nop
cmp
and
mov
mov
sub
inc
mov
call
notb
inc
pop
push
enter
out
jns
and
push
enter
rcrl
jg
into
fildl
dec
lea
sub
xor
es
out
into
push
jl
adc
ret
sarl
or
adc
xchg
movsl
clc
xchg
and
mov
push
cltd
jbe
xor
and
mov
aam
push
fimuls
xchg
sti
cld
nop
and
enter
sub
mov
movsb
sub
das
push
dec
pop
xchg
lahf
jmp
mov
inc
pop
inc
and
dec
pushf
fnstenv
sub
cmpsl
jmp
mov
pop
test
inc
andl
cmpsl
lahf
pop
adc
pop
xchg
mov
iret
or
jae
test
jae
aam
or
mov
cmp
and
and
loope
sub
inc
jmp
xor
and
iret
addr16
push
daa
es
jnp
int3
mov
stos
push
daa
jmp
mov
lea
rolb
jae
scas
aam
cwtl
aam
push
stos
test
mov
add
sbb
into
jb
mov
cmp
push
cmp
int3
and
icebp
and
fdivrl
decb
fistps
clc
xor
sbb
xchg
mov
push
insb
cmpsl
adc
xchg
jb
mov
pop
mov
cld
data16
aad
xchg
sub
iret
clc
hlt
scas
add
cmpsb
aaa
push
inc
cmpsl
lret
xlat
sub
repz
insl
adcb
into
leave
inc
sbbb
inc
push
mov
out
mov
sarb
scas
jge
adc
xor
subl
aas
faddl
rcrb
push
lock
sbb
cmp
scas
pop
leave
aad
jecxz
ss
nop
mov
pop
ds
iret
lret
mov
xor
daa
mov
stos
aad
xchg
and
push
and
ss
subb
repnz
fisubrl
in
push
loopne
test
out
sub
pushf
ret
outsb
pushf
push
xchg
cmpsb
pushf
mov
dec
mov
dec
cli
das
dec
in
subl
xchg
or
or
pop
inc
je
sub
aaa
inc
jmp
sti
popa
test
testb
mov
lea
xor
mov
mov
xchg
pop
dec
mov
mov
pop
xchg
sbb
adc
push
add
in
jge
ficoml
popa
jne
push
mov
lea
jbe
mov
sbb
push
loopne
ds
lods
out
lret
push
fistps
jo
pop
dec
mov
or
lods
lcall
int3
sarb
in
fisubl
sub
mov
adc
ja
cmpsb
or
cmc
mov
mov
bound
xchg
push
push
sahf
jae
jmp
sbb
or
pop
inc
mov
out
cwtl
ljmp
sbb
fs
mov
int
call
movsl
jp
aas
cmpsb
push
or
ljmp
or
dec
bswap
mov
pop
mov
mov
fldt
dec
mov
jge
cmp
pop
cmp
shlb
ret
jo
mov
mov
jg
loopne
clc
fistl
inc
or
xor
inc
sbb
out
dec
sbb
add
ret
jg
mov
divl
mov
lds
sahf
sub
dec
iret
fildl
call
mov
sbbl
jnp
cwtl
fisubrs
inc
arpl
push
outsb
push
scas
cli
mov
ljmp
stc
in
mov
mov
push
mov
fs
push
loope
add
lea
mov
cli
movsl
and
xor
fbstp
adc
pop
mov
jecxz
clc
out
call
test
pushf
repnz
aam
mov
jl
push
int3
ss
cwtl
mov
idivl
xor
xor
inc
mov
pop
and
inc
mov
pop
add
xor
aad
in
xchg
fwait
mov
rcll
fcoml
fildl
adc
stos
or
push
mov
stos
call
bound
add
int3
fs
inc
dec
cmp
inc
popa
inc
leave
mov
repz
ret
dec
or
sbb
cld
stc
aaa
cmp
leave
ds
sbb
sbb
dec
sahf
pop
lock
inc
jbe
add
xlat
leave
cmp
xor
dec
adc
and
sub
sarl
inc
push
test
pop
add
stos
cwtl
mov
or
mov
and
jmp
fiadds
aas
int3
xchg
lods
dec
movsl
adc
push
inc
add
or
sbb
adc
sahf
cs
add
hlt
jo
insl
mov
insb
and
pushf
mov
cltd
fldenv
ds
push
roll
mov
aad
ds
popa
mov
inc
mov
cmp
push
sbb
inc
cld
inc
js
or
adc
orl
fldenv
mov
cmc
sbb
daa
aad
inc
lods
movsl
movsl
roll
mov
xchg
out
push
dec
shlb
xor
bound
js
hlt
mov
cmp
cmp
out
sbb
cmova
bnd
jmp
lods
aaa
dec
xlat
xchg
xor
mov
shl
bound
and
jle
aam
push
pop
ret
orl
nop
orl
mov
movaps
jecxz
imul
push
fsts
add
jecxz
cmp
out
jno
fildl
aam
sub
add
lods
cltd
sub
inc
cmpsl
xor
mov
cld
vcvtss2si
lea
adc
ja
mov
mov
lock
movsb
inc
mov
cmc
mov
add
gs
xchg
add
cmp
fstpl
cwtl
jb
iret
sbb
add
xchg
push
adc
insl
lds
jb
jp
js
jecxz
lea
add
shr
int3
mov
adc
mov
mov
push
xor
sbbb
pop
fs
test
mov
pop
and
mov
inc
gs
js
popf
dec
pop
sbb
push
fidivl
das
cwtl
inc
movsl
cmp
inc
push
int3
sub
or
cmpsb
neg
loope
shll
jecxz
bound
jae
inc
pop
imul
pop
push
add
rorb
pop
jle
inc
lahf
and
mov
lahf
push
pop
test
lock
add
push
push
sti
rcrb
sub
cli
jmp
and
cmp
pop
popa
and
int3
stos
and
sbb
in
out
mov
fbstp
nop
scas
or
add
loop
mov
pop
mov
stc
mov
pop
dec
pop
and
or
pop
outsl
decl
mov
out
mov
loope
pop
lds
clc
and
subl
or
test
std
pop
icebp
add
and
and
add
out
repz
jecxz
pop
jge
out
jae
repnz
sbb
iret
iret
fsubr
roll
adc
loope
pop
push
or
lcall
leave
ljmp
push
lods
sub
lea
xor
nop
int
imul
jbe
fadd
enter
add
and
in
insl
mov
sbbl
cvttps2pi
pushf
ja
in
push
lret
and
push
mov
inc
or
fiaddl
pop
dec
cmc
roll
fisubrl
mov
sub
pop
jb
sarl
cs
fcompl
ja
fnstcw
jbe
sbb
in
push
cmp
or
push
aad
xchg
xchg
stos
jmp
aad
insb
call
arpl
pop
fildll
push
inc
dec
mov
dec
sub
xchg
push
dec
gs
add
mov
jbe
mov
xchg
out
mov
mov
xor
shl
out
aam
xor
nop
ret
or
xor
mov
adc
pop
bound
repz
cwtl
xlat
shrb
xlat
dec
and
loopne
pushf
inc
cmp
enter
lods
push
out
inc
aam
sahf
rorb
lret
xchg
inc
clc
or
jmp
and
dec
into
jg
out
mov
pushf
dec
stc
ficomps
mov
adc
inc
aas
xchg
imul
xchg
js
dec
and
xchg
and
mov
push
out
repnz
sub
inc
push
out
adc
xchg
sbb
adc
jb
dec
lock
test
add
jecxz
loop
cmp
push
test
xchg
ljmp
xchg
pop
or
or
cmp
cmc
add
outsb
xor
pop
xchg
cld
or
jns
mov
pop
push
bound
leave
jne
call
dec
test
xchg
jo
xor
test
mov
out
cmp
mov
xchg
rcpps
or
imul
cmp
add
jns
mov
js
mov
push
or
iret
push
add
fists
arpl
jno
movsb
ret
in
sbb
jg
out
in
mov
into
icebp
in
jno
mov
out
cmp
and
filds
notb
xor
mov
push
js
orl
and
dec
push
js
fsubl
jecxz
cltd
daa
mov
notl
fidivrs
gs
inc
mov
lret
mov
repz
cld
xor
loop
jnp
lock
xchg
fadds
dec
test
loope
loop
mov
int3
push
push
pop
mov
jno
sbb
loope
push
mov
test
pop
cmp
mov
add
xlat
cmp
cmp
dec
mov
fsub
std
sub
mov
inc
sub
xchg
mov
pop
daa
sub
push
and
mov
jp
sbb
call
fimull
bound
jno
xchg
inc
sub
add
das
xor
mov
leave
xchg
sub
push
and
int3
gs
loop
xchg
dec
lds
push
leave
inc
pusha
inc
inc
or
clc
sub
out
pop
dec
lcall
aam
mov
hlt
loope
call
sub
dec
push
sbb
sbb
cmp
add
jne
adc
sub
lods
leave
loopne
negl
inc
xchg
mov
pop
icebp
cli
push
shl
lea
xchg
and
mov
pop
cwtl
cmc
push
jb
jo
dec
arpl
cmp
fwait
popf
lcall
jle
lea
into
cmp
xchg
out
adc
fcomp
push
std
mov
xor
lahf
repnz
xchg
xor
dec
cs
mov
lret
cmp
loop
xor
or
negl
in
push
mov
and
xor
mov
gs
hlt
jno
arpl
scas
xor
xor
push
or
push
cmpsl
mov
rcrb
mov
daa
xlat
mov
movsl
mov
mov
sbb
rorb
add
add
lds
push
aad
lock
push
mov
mov
xchg
fwait
inc
not
in
mov
mov
fmul
dec
ret
imul
leave
pushf
inc
dec
pop
imull
outsl
in
xor
mov
je
les
mov
loopne,pn
ljmp
inc
loopne
lret
sbb
xor
push
push
ret
sub
add
enter
in
fldcw
sub
pop
je
dec
fldcw
xor
jge
loopne
pop
imulb
imul
xor
ds
adc
mov
out
aam
das
and
pop
cmp
ret
mov
inc
xor
xchg
mov
stos
adc
xlat
std
jne
jmp
pop
pop
mov
data16
and
xchg
sbb
or
and
pop
inc
fadds
mov
sub
dec
sub
stc
dec
imul
mov
daa
sahf
push
pop
xchg
mov
fcmovbe
mov
daa
jae
sub
pop
fistl
adc
dec
test
mov
or
xor
shrl
gs
mov
jbe
jl
inc
pop
jne
add
hlt
xchg
inc
sub
add
pop
ja
or
mov
adc
pushf
out
jne
sti
jecxz
mov
scas
into
and
sub
arpl
sahf
dec
push
xor
loopne
or
shll
repz
cmpsl
jb
icebp
lcall
cmp
xchg
stos
scas
inc
or
out
add
xchg
adc
push
xchg
pop
cli
sbb
sti
sbbb
mov
jns
dec
and
lret
in
jnp
addb
jecxz
pop
jle
jecxz
lret
sub
inc
lock
test
movsl
mov
das
pushf
fwait
push
xchg
push
push
dec
daa
inc
fdiv
enter
ss
loope
mov
xor
hlt
xchg
push
lea
adc
add
xor
das
inc
js
xchg
das
into
cltd
mov
int3
outsb
jb
popf
sub
inc
jg
loope
sbb
sbb
cli
jmp
cmpb
and
push
rcll
pop
lock
das
or
mov
movsb
push
cmp
mov
iret
mov
push
adc
pop
ds
ficoms
or
aas
or
mov
pop
add
fidivrl
add
fists
push
ret
pop
rolb
jnp
int
mov
jl
adc
out
popf
stc
and
sub
mov
inc
pop
inc
ficomps
or
mov
aaa
cmp
cmc
pusha
dec
shrl
push
push
dec
push
in
es
je
test
xchg
stos
mov
add
lret
je
or
add
fwait
lahf
lods
hlt
sub
fldcw
aaa
push
jae
xchg
test
ret
sbb
pop
out
shll
mov
mov
xor
sub
sti
mov
mov
inc
pushf
stos
lods
cmpsl
jno
sub
popf
daa
lret
hlt
scas
xlat
mov
pop
lods
leave
add
loope
jmp
pop
daa
and
mov
cmp
and
cmp
sbbl
dec
outsb
inc
scas
out
icebp
mov
ss
xlat
pop
sbb
sti
cmp
jmp
add
xchg
and
push
and
loopne
out
mov
add
pop
pusha
popa
pop
or
mov
pop
lods
push
out
in
push
jl
inc
cmp
mov
cmp
lods
pop
add
fdivrs
pop
movsb
push
enter
and
stos
in
mov
mov
out
jae
push
dec
stc
mov
in
jmp
fwait
stos
jbe
or
dec
test
sbb
pop
cli
es
sbb
arpl
ja
cmc
push
mov
add
adc
mov
mov
sub
int
pushf
divl
xchg
add
or
sbb
aam
push
push
movsb
adc
or
clc
lcall
scas
insb
subb
repz
inc
cwtl
outsb
jecxz
jmp
or
adc
nop
aad
add
nop
push
jb
jb
scas
xlat
mov
divb
xor
adc
or
into
mov
sbb
insb
ljmp
gs
call
pop
push
mov
xorb
sub
push
aam
mov
cmp
mov
push
jg
movq
xlat
mov
sub
das
hlt
pop
loope
fsubrp
loopne
inc
pop
fwait
clc
fsts
mov
es
in
mov
sbb
sbb
fdivr
inc
jno
out
push
sub
lods
fisubrs
adc
mov
adc
imul
or
xchg
mov
scas
mov
mov
stc
inc
sub
out
fidivs
test
in
hlt
or
mov
mov
jp,pt
test
cmp
jbe
sbb
cmpsl
jns
mov
addr16
cli
and
pop
lods
mov
jno
cmpsb
call
adc
add
mov
mov
loopne
jmp
les
xchg
ret
sarb
das
jo
fidivrs
sub
dec
inc
rcrl
jle
cmc
mov
in
add
jmp
ret
stc
add
lods
lock
or
xchg
pop
aas
pop
roll
cmc
jge
mov
dec
movsb
mov
repnz
and
subb
out
pop
push
dec
ss
cltd
in
addl
test
stos
movsl
xchg
shlb
lods
mov
pop
xor
jmp
mov
mov
or
pminsw
pusha
pop
push
int
jns
jmp
insl
lea
insl
mov
xchg
loop
addr16
pop
es
xor
lea
movsl
push
shll
les
mov
enter
mov
or
or
push
pushl
fcoml
data16
sub
pop
jle
fbstp
das
adc
pop
fstpl
stos
cmpsl
scas
iret
add
mov
inc
inc
das
cmp
les
mov
mov
xchg
enter
jg
fcomip
pop
nop
incl
xchg
or
xor
sub
adc
push
es
sti
in
scas
outsl
xchg
mov
pop
add
and
sbb
mov
jmp
mov
inc
repz
mov
lods
fidivl
insl
addb
or
arpl
dec
scas
and
gs
pushf
mov
jg
lahf
mov
jecxz
or
icebp
and
sbb
push
sub
mov
out
insl
and
and
xor
in
adc
aaa
lea
jge
data16
into
das
and
pop
frstor
in
aas
outsb
in
daa
loope
pushf
andb
js
ja
lcall
aad
mov
cltd
dec
mov
adc
arpl
push
icebp
push
inc
insb
jg
or
movsb
mov
sbb
movsb
push
inc
mov
pop
in
test
or
leave
xchg
sbb
jl
adc
inc
xor
or
pop
dec
in
and
adc
mov
in
adc
out
ja
or
push
loopne
cs
and
pop
es
movb
in
imul
add
pop
fnstenv
and
or
out
mov
push
jge
pop
push
xchg
in
adcb
aaa
push
lcall
in
shll
pop
cmp
cmp
push
test
or
popf
mulb
out
loop
ja
adc
cmp
xchg
mov
mov
imul
inc
push
sti
pop
xchg
or
in
loop
push
lahf
out
xor
mov
test
es
test
push
mov
mov
stos
data16
or
pop
sarl
imul
inc
fadds
fwait
jge
lea
je
pushf
sbbl
jne
aaa
popa
pushf
inc
xchg
mov
cs
aaa
dec
inc
nop
loopne
pop
sub
test
out
xorb
aas
shrl
add
outsl
mov
jp
mov
push
pusha
sub
mov
jae
push
mov
add
mov
pop
dec
data16
jnp
movsb
add
aad
mov
adc
mov
outsl
sti
mov
jle
pop
mov
xchg
push
std
sub
lret
and
insl
repz
imul
sub
jge
data16
xchg
xor
out
pop
push
shll
lret
mov
xchg
push
sub
cmp
jecxz
lods
mull
lret
xor
dec
inc
mov
mov
stos
add
test
daa
adc
fsubrl
xor
push
notb
dec
mov
adc
mov
iret
scas
inc
shl
and
es
push
out
push
cmp
cmp
sbb
mov
incl
pop
cmp
cmp
mov
pop
mov
movsb
iret
jbe
jge
mov
xlat
aad
outsb
dec
fdivrl
cld
call
out
lods
rolb
mov
fs
lods
cli
enter
jb
lods
push
and
jae
jl
push
jle
sahf
sarl
cmpsl
insl
sbb
scas
or
negb
or
or
push
aas
push
and
pop
mov
scas
inc
call
dec
xor
xchg
xchg
movb
jp
sbb
clc
pop
test
cs
js
fsubrp
mov
cmp
imul
out
jmp
lea
mov
nop
dec
mov
mov
cmp
xchg
insb
and
cmp
mov
arpl
mov
xor
mov
adc
add
out
or
std
dec
cld
scas
stos
push
sub
inc
cmp
mov
jecxz
shlb
mov
jl
icebp
iret
jg
push
test
add
dec
fsts
popf
and
aaa
or
push
stos
cs
xchg
lods
and
pop
add
inc
in
jnp
push
test
aad
inc
cmp
scas
push
call
insl
fstl
repnz
ret
int
xchg
test
inc
sbb
sub
mov
inc
dec
stc
adc
adc
outsl
out
mull
adc
shlb
test
loop
outsb
mov
pop
fsubrs
mov
mov
adc
xchg
ja
sub
addb
mov
mov
jecxz
insl
and
add
dec
sbb
cmp
xchg
pop
sbb
aam
fnstenv
adc
xor
hlt
fldl
cmp
mov
dec
pop
xor
adc
cld
aad
dec
clc
fstps
xor
repz
ljmp
loopne
mov
in
shrl
ret
movsl
mov
jmp
cmp
sub
jno
push
cli
push
sub
popf
cmp
repz
xor
push
call
addr16
inc
bound
add
and
xor
mov
sbb
movsb
pop
or
pop
jae
xor
fisubs
sub
fstps
mov
pop
mov
pop
pop
pop
xor
push
lea
or
int3
xchg
fildl
jo
icebp
dec
je
lea
xchg
pop
sbb
lods
add
jecxz
fcompl
jnp
and
call
mov
push
cld
jmp
mov
in
and
out
dec
dec
js
int
or
push
and
or
call
js
mov
fwait
les
dec
lahf
movsb
loope
fildl
push
cmp
gs
sub
dec
sarb
mov
dec
int3
test
ror
lea
ss
push
aas
xchg
dec
repz
jne
inc
push
push
dec
mov
dec
subb
stos
sub
sub
add
jge
push
ficompl
mov
nop
fsubp
xchg
roll
push
out
fidivrs
popa
scas
les
jno
lahf
mov
imul
pop
cmpsb
cmp
sbb
adc
sub
xchg
mov
imul
sbb
jge
mov
bound
aaa
movsl
sub
cmp
rclb
mov
cmc
xchg
jo
imul
pop
fists
add
adc
push
outsl
cwtl
fmull
in
sub
addr16
sti
jo
les
and
jae
sar
xchg
in
dec
push
pop
movntq
std
jmp
stos
cmp
jecxz
outsb
movsb
icebp
mov
cmp
lret
bound
shll
fnstsw
gs
lcall
cmp
and
adc
shll
outsb
aaa
daa
pop
mov
add
pop
mov
mov
or
push
out
rep
fistl
daa
xchg
in
imul
loopne
sbb
xchg
lds
andb
fdivrl
lret
inc
lock
bound
mov
rcll
mov
or
dec
cmpsl
jge
orl
cmpsb
adc
xchg
sbb
mov
sbb
dec
dec
lods
push
jnp
lret
out
jecxz
stc
push
pop
or
fistps
pop
pop
hlt
out
pushf
in
cmp
inc
dec
pushl
push
enter
jb
jb
out
std
cmp
mov
sbb
sub
stos
cmp
incl
outsl
daa
sbb
xchg
jmp
add
cmp
ja
aad
or
xchg
insb
mov
jp
jno
dec
push
jecxz
jns
add
int
jmp
xchg
testl
mov
sub
mov
or
dec
hlt
pop
bound
add
dec
mov
xor
push
pop
mov
fcoml
mov
mov
cmp
adc
shll
outsl
jo
into
xchg
hlt
lret
fldt
negb
fcmovb
fadds
ret
mov
sub
and
aas
daa
aam
push
in
pop
fldl
lea
loop
jp
fs
hlt
add
mov
mov
fcoml
dec
imul
sbb
sub
mov
pusha
imul
and
mov
pop
sub
add
mov
into
je
pop
dec
shl
scas
push
ffree
push
mov
arpl
and
sarl
mov
dec
mov
fistpl
mull
mov
or
cmp
mov
mov
into
idivb
jecxz
pop
jecxz
xrelease
add
cmc
mov
cmp
jnp
sub
xor
into
rolb
sbb
in
cmp
xchg
lret
mov
pop
jae
mov
addr16
hlt
pop
lock
push
mov
jb
leave
push
jnp
jo
or
sti
dec
lret
repz
pusha
pushf
sbb
stc
mov
dec
xorl
add
lret
clc
sub
rcll
mov
and
ret
rcl
aas
lcall
push
inc
push
cs
jmp
xchg
push
adc
in
rcrb
rol
and
in
mov
xchg
ds
lods
into
lods
shll
jp
sub
out
js
add
mov
mov
pusha
pop
out
mov
push
dec
outsb
aam
pop
es
mov
or
xchg
filds
test
cwtl
sub
in
add
fdivs
push
jle
fwait
adc
icebp
dec
xor
scas
pop
jno
and
test
mov
jp
jg
jns
idivl
sbb
jp
sbb
jle
aad
xor
mov
outsl
es
cld
xchg
cmp
loop
xchg
jecxz
or
std
xor
lods
out
mov
add
cmpsl
dec
or
adc
lret
inc
inc
pop
leave
insb
sub
mov
xchg
lods
add
or
xchg
push
adc
lcall
adc
add
lods
ret
mov
pushf
int
dec
aam
xchg
out
adc
nop
or
fistps
add
push
daa
add
dec
roll
jle
cmp
or
adc
fwait
insb
mov
pop
pushf
inc
mov
rcll
pushf
addr16
lock
aaa
scas
sbb
or
lods
out
and
sbbb
leave
dec
call
jp
xor
mov
test
push
push
aas
or
cmp
sub
subl
inc
add
andl
mov
ficomps
or
bound
xchg
ja
rolb
aaa
mov
dec
adc
nop
jnp
into
mov
jge
mov
insb
hlt
lret
bound
std
shlb
sbb
repz
push
or
xchg
xor
roll
repz
out
lods
je
xchg
sub
pop
iret
ficoms
insb
xchg
imul
xor
and
lock
cmp
test
inc
jno
pop
cmp
push
clc
dec
mov
cmpsl
xchg
adc
outsl
lret
inc
stos
sbb
rorb
pop
daa
stos
sbb
adc
jle
mov
xor
jge
cmp
in
adc
pop
push
sub
clc
xor
lret
data16
jg
lret
or
xchg
push
repz
xchg
push
sub
cmp
xor
push
aas
test
or
clc
ljmp
pop
adc
mov
mov
ljmp
cltd
call
int3
dec
dec
dec
and
iret
mov
fbld
lcall
sarb
shll
shll
and
jb
or
in
arpl
cmp
stc
insl
iret
insb
std
out
scas
mov
imull
je
lcall
ds
jecxz
rcrb
cmp
ret
pop
arpl
loop
jge
or
cltd
add
push
dec
outsb
adc
mov
jae
jno
mov
stos
sub
cld
icebp
sbb
addb
mov
pusha
fisttpll
jnp
or
popa
push
jle
dec
xor
movsl
jg
scas
push
adc
jbe
jnp
sub
std
movsb
outsb
rcr
mov
movsl
push
xchg
push
and
bound
mov
xor
sbb
incl
repnz
mov
sbb
push
popa
popf
ss
push
add
adc
into
in
mov
enter
das
fcompl
out
shr
jl
push
cwtl
push
mov
cmc
jmp
or
sub
dec
sub
or
push
xor
mov
jns
pushl
les
sarb
and
repz
add
cmp
jg
cli
test
mov
cs
pop
arpl
fbstp
pop
dec
or
adc
pop
lahf
insl
mov
xchg
pushf
std
inc
mov
out
sbb
aaa
cwtl
lods
xlat
subl
movsl
mov
outsl
fadds
adc
lods
xor
mov
mov
jnp
out
push
mov
jp
jp
lcall
pop
jns
sub
and
dec
popf
mov
sub
out
or
dec
sbb
jbe
arpl
jb
sub
xor
sub
adcb
test
cmpsl
xchg
jg
iret
sti
xor
add
test
ds
in
sti
jp
or
sahf
mov
xchg
lret
sub
inc
jmp
std
dec
cmp
xor
or
jae
lds
notl
adc
sbb
std
fst
test
fwait
inc
inc
outsl
pop
push
mov
add
and
adc
fcoms
push
std
dec
dec
jmp
pop
mov
js
push
adc
push
negb
push
sti
fidivrl
lods
dec
jnp
fcmovbe
jecxz
sbb
pop
testb
stc
test
pushf
push
aam
fnstenv
dec
jne
std
jmp
and
ficompl
dec
lea
xchg
mov
dec
shrl
arpl
sti
stos
jmp
mov
dec
loop
cmpsl
dec
test
pop
push
inc
mov
leave
xchg
sub
cmpsl
sbbl
add
insb
scas
sub
popa
popa
leave
ja
enter
lret
lcall
pop
mov
adc
test
mov
push
mov
sbb
rcl
cmp
sbb
mov
out
in
into
js
pushf
sbb
loope
pop
f2xm1
lret
push
and
mov
and
jae
push
cmp
xchg
xchg
sub
push
pop
xor
jmp
adcb
es
jns
test
out
pop
cmp
bound
cmp
push
add
aam
mov
mov
mov
lcall
mov
push
dec
aam
out
and
pop
cwtl
enter
dec
mov
mov
repz
mov
xor
cmpsl
lcall
cwtl
mov
cmc
jns
lret
loopne
pushf
xchg
inc
icebp
jb
out
lds
repz
data16
inc
aam
dec
out
fldt
add
or
fisubrs
xchg
popf
mov
add
and
mov
xor
pop
sbb
pop
push
mov
jb
add
pop
dec
js
js
adc
lret
push
test
and
out
lret
mov
add
sub
loop
in
jmp
lret
push
sti
jg
das
adcl
push
pop
cwtl
xchg
adc
ret
inc
lahf
or
dec
and
clc
int3
je
mov
sbb
mov
jo
sub
pop
loopne
enter
inc
push
lahf
bound
sbb
notl
mov
scas
and
insl
jp
pop
mov
mov
daa
les
fdiv
adc
lock
jnp
test
jle
out
rclb
or
leave
adc
out
push
adc
and
pop
lret
movsb
lret
mov
cs
pop
insb
cwtl
rolb
adc
bound
cli
jg
setle
ss
andb
jno
push
arpl
sub
or
lock
test
adc
cmpsb
std
xchg
fidivrs
jle
call
addr16
das
in
lock
add
or
ja
push
gs
mov
movsb
loop
mov
xchg
inc
hlt
mov
cmp
ror
xchg
sub
or
cltd
sub
test
add
sbb
dec
and
xchg
pop
stos
xchg
faddl
inc
call
cmp
cli
shlb
orl
xor
xchg
push
push
mov
adc
les
xor
push
adc
fidivl
in
sbb
push
dec
jmp
push
dec
jns
arpl
push
mov
dec
fbld
lds
aas
sub
push
stos
mov
sbb
in
cmp
stos
enter
adc
cmp
inc
out
aaa
lret
cmp
dec
insb
xor
pop
scas
call
test
jle
stc
call
push
cli
data16
mov
xlat
in
mov
push
dec
dec
movsl
mov
inc
sub
and
pop
pop
js
adc
lret
mov
lock
pop
sbb
push
mov
roll
popa
repz
das
mov
lret
out
sbb
mov
inc
lcall
cmp
push
dec
int3
lret
cwtl
xor
xchg
jo
lods
ja
xchg
ret
sub
or
xor
xor
rorb
mov
icebp
sub
lds
dec
test
sbb
pop
mov
imul
outsl
add
aaa
insl
shl
imul
cmp
mov
pop
jbe
pop
es
int3
lahf
inc
sarl
cwtl
mov
mov
sub
lods
loopne,pn
popl
inc
cs
shll
cltd
cmp
int3
js
and
dec
sbb
mov
mov
jge
mov
icebp
std
hlt
shlb
jmp
stos
push
cmc
sbb
out
jecxz
lret
mov
add
pop
pop
xchg
mov
into
or
xchg
mov
in
mov
shrb
repz
cmpsb
mov
mov
pop
adc
leave
rcll
push
pop
cmp
cmpl
call
add
nop
fwait
imul
shlb
adc
sbb
inc
sbb
jl
test
pop
je
push
pop
pushf
xchg
cmpsl
sub
sti
inc
loop
pop
and
lahf
je
add
int
or
pop
xchg
ret
sub
sub
fwait
ja
stc
sub
mov
leave
add
fistpll
add
daa
mov
std
js
xchg
scas
out
cwtl
lahf
and
cwtl
push
shrb
jmp
mov
fdivr
pop
aaa
stc
xchg
jmp
adc
inc
aas
sti
out
add
sub
scas
sub
outsb
dec
ret
sub
rclb
xchg
jnp
addr16
shll
scas
imul
adc
shll
mov
sbb
leave
mov
pop
es
ret
fisubl
imul
cli
sub
orl
sbb
xchg
call
fldcw
adcb
fdivl
jge
fwait
aad
aam
or
imulb
std
dec
push
cltd
xchg
xchg
jecxz
jnp
and
jecxz
cld
push
jo
xor
mul
add
sbb
lret
mov
and
movsl
dec
in
xchg
dec
cmp
rol
in
mov
mov
inc
fs
aaa
mov
sub
xchg
jge
pop
outsl
jl
aas
aas
adc
and
sbb
adc
bound
and
push
mov
divb
push
mov
fldcw
daa
leave
addb
inc
icebp
adc
out
lret
fidivs
sbb
jl
push
and
stos
inc
nop
cmp
sbb
icebp
xlat
loop
test
addb
shlb
cmp
xchg
push
clc
daa
out
jb
add
add
in
adc
mov
push
into
flds
inc
inc
jmp
or
push
popf
jb
push
or
fwait
push
ss
mov
in
xor
pop
cmpb
sub
popa
int3
sub
xchg
fnstenv
jbe
add
mov
jbe
add
push
jecxz
jne
fxtract
and
dec
es
push
adc
xchg
stc
cltd
xchg
fdivl
cwtl
test
pop
idivb
sub
test
cltd
lds
push
jb
cltd
in
jmp
pop
mov
push
or
cmpsl
mov
andl
adc
test
cld
cmp
nop
rorb
push
jnp
jl
sub
jb
or
pushf
push
push
pusha
fcoms
imul
lea
mov
das
pop
jne
nop
movsb
jl
stc
jnp
xor
lahf
loopne
and
xchg
std
lahf
jb
inc
js
push
pushf
xchg
lcall
dec
mov
inc
push
push
jnp
jge
mov
xchg
aad
or
xchg
loop,pt
sbb
dec
sti
std
sub
stc
dec
mov
mov
and
sbb
pop
out
je
sbb
lret
das
xchg
call
lods
loope
jb
daa
ja
bound
int3
or
loop
rcrb
add
dec
arpl
outsl
dec
and
mov
bswap
stos
leave
xchg
ficompl
and
test
inc
leave
loop
ficoms
loop
inc
shlb
out
xchg
lock
pusha
mov
jnp
rol
into
or
bound
dec
ss
sahf
sbb
pop
jl
cltd
cmpb
mov
aam
cli
test
aad
sti
daa
into
and
sbb
jns
pop
jp
cmpsb
ret
inc
dec
out
jb
pusha
nop
dec
sti
or
jno
fbstp
popf
push
xchg
or
out
out
sbb
lcall
lods
lcall
push
cmc
mov
test
mov
add
fxch
and
add
popf
cmp
dec
pop
pop
inc
arpl
leave
sbb
adc
ficomps
mov
movsl
adc
adc
and
cmp
dec
fiadds
ret
adc
jp
jge
rorb
gs
push
orl
pop
cmc
cmp
add
mov
push
fistpll
movsl
pop
xor
jecxz
int3
push
out
xor
nop
shr
adcb
cmp
xchg
adc
xor
sub
or
jl
leave
and
adc
insb
jnp
in
sub
jl
and
aam
je
inc
fwait
jp
test
bound
inc
inc
dec
push
push
div
adc
sub
test
sub
lea
hlt
in
out
icebp
mov
mov
scas
ja
setbe
js
jg
cltd
test
and
xchg
test
jbe
jae
and
das
cmp
xchg
mov
mov
sarl
xchg
aam
mov
pushw
jge
out
arpl
mov
mov
shl
fsin
outsl
jle
pop
dec
mov
xor
outsb
push
in
pop
cmc
mov
data16
cmpsl
mov
push
fiaddl
clc
add
mov
inc
dec
movsl
addr16
push
and
rorb
out
mov
xchg
movsb
shl
dec
jae
jl
sub
pop
sbb
mov
add
in
outsl
aaa
adc
cmp
cltd
and
and
pop
int
in
and
sbb
mov
ja
pop
or
xchg
ret
and
sbb
push
ret
es
sub
test
sbb
sbb
repnz
lea
fbld
scas
pop
inc
add
pop
loope
test
push
xchg
mov
subb
xchg
mov
in
clc
adc
stos
inc
sub
test
cmp
fistpl
inc
sub
dec
adc
add
and
or
loop
rclb
and
jno
xor
jno
aaa
or
gs
aad
xor
fwait
out
mov
jle
int
ss
leave
data16
sbb
adc
mov
sub
aaa
xor
in
push
scas
jecxz
push
aaa
jno
test
push
out
stc
xchg
mov
mov
mov
push
push
out
adc
sub
jns
jg
mov
mov
sbb
mov
insl
out
mov
mov
xchg
cs
jno
add
xorb
add
stc
push
in
push
mov
dec
into
push
sahf
dec
stos
inc
les
jbe
add
inc
popf
lods
pop
or
pop
js
fsubs
pop
les
jl
bound
fnsave
or
jge
inc
aam
fbld
push
mov
std
es
mov
cmp
imulb
jge
push
cwtl
add
insb
ljmp
subl
pop
test
lock
jge,pt
daa
mov
cmpb
push
mov
ljmp
jmp
dec
les
scas
mov
in
ja
out
cld
pop
jb
mov
ljmp
sarl
xchg
rorl
jge
call
dec
and
cmc
pop
xorb
adcb
mov
hlt
xchg
imul
jge
addb
ja
adc
ljmp
sub
sub
pop
jmp
adc
lock
pop
movsl
sbb
test
xchg
jbe
fbld
or
nop
push
rcll
mov
sbb
jno
xor
imul
lock
xchg
subb
movsb
mov
out
xchg
test
ds
xchg
sub
aam
dec
pop
ja
or
aam
or
inc
cmpsl
rcll
loopne
add
notb
fwait
dec
and
insb
sub
dec
in
sahf
mov
pop
sub
jmp
popa
push
shrb
lds
add
sahf
add
pushf
shl
inc
push
mov
adcl
cmp
push
inc
mov
outsb
push
es
inc
push
fisubs
inc
repnz
inc
outsl
cld
xlat
push
jne
mov
xor
push
lret
xor
sbb
cmp
shll
imul
aam
out
cli
std
out
xchg
pop
nop
push
lahf
mov
dec
add
cmpsb
cli
sbb
adc
test
cmp
out
inc
fildl
shll
sub
roll
push
pop
imul
push
out
nop
sub
or
push
stc
rcll
fdivl
add
mov
inc
outsb
dec
mov
xor
adcb
pusha
daa
push
lea
int
cmp
pop
xchg
das
push
lcall
insb
cli
jp
cmpsb
push
jg
push
cmc
fwait
mov
mov
sbb
mov
iret
xor
adc
sub
sub
adc
mov
mov
mov
enter
or
or
xlat
jne
outsl
fisttps
into
loopne
cli
and
dec
and
push
sub
inc
inc
std
mov
cmpsl
or
inc
push
xor
outsb
sbb
mov
sbb
daa
ret
dec
divb
mov
add
sbb
jnp
aam
sub
iret
push
pop
pop
or
test
sbb
add
cwtl
nop
mov
mov
pop
out
cmp
xchg
clc
outsb
and
inc
xor
popa
xchg
jae
loopne
pop
adc
push
cmp
fsubrs
aam
xor
push
lret
xor
divl
mov
cmp
sar
push
dec
xor
fldl
add
outsb
sub
mov
test
xchg
push
jmp
mov
inc
int3
repz
pop
pop
xchg
jo
cmp
cmp
std
or
out
dec
or
out
jnp
jecxz
push
xchg
dec
cmp
mov
sub
adc
pop
aad
iret
xchg
or
mov
clc
pop
lds
lea
leave
mov
insl
outsb
cmpsb
inc
fwait
stc
loope
dec
or
add
aaa
fwait
or
testb
clc
mov
ret
out
cwtl
jle
sub
dec
js
mov
jne
mov
cmp
mov
adc
ss
and
cmc
hlt
sub
jmp
andl
xchg
sub
mov
push
and
das
loopne
add
out
dec
inc
cmpsl
rcl
jl
and
xor
cmp
les
mov
or
dec
sbb
add
adc
rorb
add
xchg
fbld
leave
add
mov
arpl
scas
mov
pushf
sbb
movsb
imull
ljmp
jmp
push
push
jno
in
push
sahf
lock
arpl
lcall
fidivs
scas
cmp
mov
fcmovb
imul
fildll
and
test
fldl
enter
movsl
mov
leave
pop
or
cmp
mov
mov
lahf
mov
insb
negl
repnz
jns
mov
inc
test
mov
iret
mov
inc
call
pop
wbinvd
mov
mov
push
push
push
push
sub
mov
pusha
jno
sbb
fstps
in
lods
fdivrp
rorl
mov
jae
sub
adc
adc
mov
jno
andl
fucomip
jg
jo
aam
jp,pn
sub
imul
lods
or
push
or
cmp
loopne
imul
fcomp
gs
faddl
mov
xor
or
out
mov
mov
sarb
ja
aaa
push
mov
and
sub
jl
sahf
lock
pop
sti
jecxz
out
loop
addl
ja
sbbl
ljmp
xchg
lret
ljmp
arpl
mov
sub
andb
clc
xchg
ds
ja
adc
adc
pop
mov
mov
add
jmp
add
mov
enter
xchg
subb
mov
mov
outsl
ret
add
sbb
push
das
mov
ja
adc
adc
push
lahf
icebp
adc
es
cmp
imul
lahf
lea
adc
in
lods
out
push
enter
fisubrs
or
ret
div
sub
mov
sbb
clc
push
mov
mov
and
adc
push
fstpl
ficoms
mov
xor
adc
jmp
aaa
in
push
xchg
adc
insl
outsb
insl
sbbb
jb
inc
cmp
test
xchg
xchg
ds
sub
push
pop
aaa
jns
movsl
sbb
jo
push
inc
push
aam
dec
push
js
in
xchg
outsb
out
sahf
loope
hlt
jb
fisubrl
push
adc
int3
and
mov
pop
testl
test
add
pop
popa
sbb
leave
xor
jb
fildl
les
pop
push
inc
dec
cmp
ja
das
pushf
popf
scas
cmp
rol
mov
into
movb
mov
xor
or
adc
sti
test
sub
inc
mov
mov
push
stc
mov
in
inc
and
cmc
jo
enter
mov
lea
aam
leave
xchg
dec
stc
ret
push
stos
xchg
cmp
mov
in
dec
stos
imull
adc
push
mov
jb
jmp
lcall
adc
repnz
jg
xor
fistpll
dec
in
int3
mov
outsb
outsb
nop
pop
adc
dec
nop
jbe
jmp
mov
push
sbb
clc
pushl
inc
stos
push
xchg
mov
fcmovnb
xadd
inc
out
xor
mov
jbe
xchg
jno
or
mulb
mov
int3
shlb
cltd
sub
stos
xchg
inc
pop
bound
cmp
adc
scas
adc
dec
test
xchg
jbe
sub
pop
ficompl
mov
push
out
jo
rcrb
sub
fadds
adcl
xchg
sahf
xchg
or
out
cmpl
mov
pushf
add
cli
mull
push
out
popw
mov
pusha
bound
jno
data16
or
or
int
inc
aad
xchg
stos
mov
movsb
subl
pop
mov
cmc
sub
dec
aad
out
and
mov
dec
es
mov
pop
and
pop
mov
xchg
hlt
jb
jp
sbb
mov
mov
mov
mov
shlb
dec
jnp
imull
inc
lretw
and
add
pop
cli
int
xor
outsb
inc
or
add
int
sldt
xchg
seto
es
xor
pop
mov
cmpsb
xor
and
in
mov
sbb
in
mov
mov
icebp
inc
test
jge
ret
ljmp
mov
sti
mull
mov
push
test
daa
mov
jl
cmpl
icebp
clc
loop
adcb
rolb
rep
loopne
in
dec
dec
imul
gs
mov
mov
lret
jmp
push
rcll
and
push
sbb
xor
push
jns
ja
movsl
mov
dec
test
clc
cld
cmp
pop
cmc
lret
sub
push
in
and
mov
xor
sahf
jmp
inc
lock
insl
jns
sti
je
fs
rcl
ret
cmc
icebp
cwtl
and
cmpsb
mov
cmp
mov
out
pop
divb
dec
mov
cltd
xor
mov
sub
add
or
and
push
shll
mov
loop
or
cmp
mov
mov
rcll
addr16
sbb
mov
adc
adc
inc
inc
imulb
pop
roll
scas
loop
jae
fidivs
jecxz
fisttpll
push
mov
mov
inc
inc
aas
adc
add
lahf
sub
add
ljmp
sub
push
loope
mov
icebp
in
fimull
in
dec
mov
out
out
jno
mov
in
inc
int3
jg
stos
sub
adc
jl
inc
adc
inc
sub
cmpsb
xor
in
sbb
add
js
sub
xor
inc
ja
pop
adc
adc
jecxz
cmpsb
mov
inc
jo
fisttps
mov
pushw
imul
xchg
bound
pop
stc
inc
lret
negl
xlat
test
sub
xchg
mov
sahf
outsb
test
mov
les
and
fiadds
xor
mov
add
add
jns
cs
mov
push
mov
adc
inc
xor
mov
mov
xchg
xchg
cmp
clc
inc
pop
fs
loopne
dec
sbb
sub
dec
or
test
insb
push
sub
outsl
jge
and
pop
mov
aam
sti
cmc
rorl
insb
cmp
mov
outsb
jns
mov
jnp
mov
mov
stos
xor
pop
sbb
pop
stos
fisttpll
pusha
sub
xor
add
and
in
les
repz
xor
addr16
rorb
jecxz
pushf
ja
mov
pusha
xchg
adc
repz
fsubrs
push
jnp
cmc
jg
je
jo
mov
mov
in
xchg
lea
push
or
jmp
data16
ret
xchg
pop
adc
pop
repz
xlat
out
dec
rol
mov
or
dec
test
dec
cmp
dec
ljmp
test
stos
xchg
jge
mov
test
inc
fs
cmp
add
scas
aam
clc
pop
push
pop
addb
mov
cmp
xchg
fdivrl
divl
pop
ljmp
bound
daa
scas
pop
adc
mov
in
jae
inc
push
or
inc
cmp
sbb
sub
aad
out
incl
sti
xchg
pop
lahf
stos
push
cltd
cmp
mov
shll
out
sub
adc
divb
jno
xor
adc
pop
les
negb
sbb
cmp
call
test
adc
mov
cmp
mov
pop
cli
pushf
mov
cld
hlt
push
clc
mov
pop
dec
out
mov
adc
fisttpll
sub
jnp
das
out
stc
add
leave
pop
arpl
in
daa
xor
or
ret
insl
jae
out
fwait
addr16
pop
add
mov
incl
fidivrl
mov
fdivrp
xor
aad
ds
jbe
pop
xchg
xorb
test
fildll
les
addl
hlt
stc
xchg
xchg
add
push
xchg
pop
sbbl
adc
fldcw
pop
test
and
rorl
push
mov
cmp
vdivps
enter
adc
enter
cmc
out
andl
add
shll
dec
jecxz
dec
add
stc
sti
flds
flds
icebp
sbb
fmull
popa
xor
cmp
or
dec
shlb
pop
mov
stos
xlat
lods
lock
jg
jmp
scas
adcb
sbb
test
jns
mov
push
push
stos
lret
leave
push
js
cmp
ljmp
mov
jmp
ret
sub
jae
call
mov
dec
inc
mov
adc
cld
pusha
lret
pop
inc
mov
dec
inc
mov
nop
and
xor
or
insb
loope
scas
cltd
dec
add
jb
andl
out
gs
sub
es
xchg
xor
xlat
lea
daa
dec
ja
mov
sbb
cmp
fisubrs
hlt
stos
sub
aad
lret
inc
inc
jae
add
pop
dec
cmc
push
out
dec
lea
fwait
pop
nop
outsl
xchg
cmpsb
outsl
ss
push
imul
movsl
sub
repz
jo
test
jno
adc
sbb
std
dec
je
add
pop
je
mov
sub
adc
xchg
mov
cmp
cmp
cmpsb
cwtl
pop
mov
lea
pop
shl
mov
and
or
mov
sbb
sub
push
sub
daa
adc
xor
push
out
or
cmp
pop
xor
aam
xor
push
repnz
scas
push
sub
je
fs
shrb
int3
xchg
dec
loope
add
jbe
dec
pop
pushf
mov
shll
xchg
clc
es
dec
icebp
pop
scas
aam
je
call
in
lahf
lds
test
loopne
rorl
loop
pop
add
insb
xor
sbb
sbb
fldt
push
mov
and
cmpsb
adc
xchg
daa
incl
stc
inc
push
push
movsl
mov
dec
cmpsl
xchg
push
push
leave
stos
mov
xchg
mov
jne
pop
addr16
test
mov
mov
test
enter
cmc
xor
test
adc
adc
int3
inc
ljmp
and
adc
lds
testb
cld
add
jne
xchg
cltd
in
popf
popf
addr16
imul
sbb
pop
push
push
loope
lcall
imul
cli
xchg
add
jbe,pt
mov
xchg
mov
sub
xlat
idivl
pop
cmp
bound
pushf
lea
fisttpll
ficompl
and
or
jo
xor
push
test
rcrl
pop
and
jle
fs
sbb
addr16
inc
adc
mov
sbb
ret
enter
ror
fildll
lcall
ficompl
cltd
fisubs
add
cmpl
sbb
sub
loope
mov
repnz
cmc
pop
lret
fisubl
and
xor
inc
xor
repz
inc
push
or
mov
inc
push
aad
pop
sub
lcall
xchg
mov
insl
popa
adc
lock
xchg
cmpsl
pop
jb
std
mov
rol
pop
int
aaa
and
stc
xchg
mov
push
shl
and
sbb
mov
pop
xchg
or
imul
mov
popf
stc
das
push
jge
adc
clc
push
cmpl
fsub
icebp
xchg
jecxz
pop
lret
ret
aam
adc
mov
push
fwait
sub
fstps
jne
xchg
fldl
lds
push
mov
popf
add
mov
cmp
pusha
ss
test
out
xchg
adc
sub
mov
mov
clc
into
and
mov
in
push
pop
sub
jle
incb
mov
mov
test
out
bnd
xor
mov
ret
jb
and
pushf
je
sub
inc
pusha
icebp
imul
mov
loop
sbb
mov
cmpl
sub
out
rcl
mov
fldcw
jne
mov
or
push
insl
add
cs
sub
adc
mov
or
adc
xor
stos
dec
rolb
inc
pop
dec
sbb
pushf
and
movl
sub
sub
cld
or
xchg
and
or
add
add
fucomp
inc
test
mov
push
rorl
gs
push
mov
daa
les
or
inc
js
add
ds
cli
inc
movsl
push
lds
mov
pop
aas
lahf
bnd
xchg
shlb
push
sbb
rorl
insl
add
add
ds
mov
push
push
scas
outsb
mov
lea
mov
mov
and
sbb
add
adc
out
xor
aaa
xlat
jmp
ss
xchg
mov
jo
xchg
and
push
xor
inc
pop
adc
clc
sti
sub
sarb
xchg
cmp
xchg
pop
hlt
ret
rep
sub
test
or
mov
out
insb
test
ljmp
mov
jg
mov
jmp
ret
ret
scas
jno
roll
and
jo
sub
mov
cld
xor
addb
int3
icebp
pop
and
or
sahf
inc
scas
sbb
aad
add
xlat
mov
ja
lods
jmp
ja
lods
xchg
test
pop
xchg
fildll
mov
inc
out
xor
sub
mov
enter
inc
inc
add
push
in
mov
imul
or
test
std
outsb
mov
sahf
cmp
sahf
into
pushf
dec
ret
std
fisubrs
sbb
push
mov
sbb
sbb
fmuls
test
and
push
dec
push
and
pop
jecxz
shll
out
xor
out
dec
cmpl
and
insb
cld
inc
mov
mov
mov
sbb
dec
test
addr16
adc
inc
mov
xchg
cmp
ret
imulb
dec
pushf
push
inc
notl
xchg
jl
adc
push
in
mov
sub
pop
test
arpl
pop
xchg
and
and
mov
sub
fwait
divl
and
xchg
mov
xchg
outsl
push
inc
mov
cmp
mov
adc
cmp
js
stc
fs
aam
addr16
sti
fcmovbe
leave
stc
dec
jle
loopne
clc
mov
lcall
inc
into
test
and
sbb
xchg
jmp
ret
mov
sbbb
pop
and
mov
lret
xchg
dec
sbb
xor
xor
lret
push
cmp
rorb
stos
cmp
mov
xorb
data16
sti
push
bound
cli
int3
in
sub
in
fwait
mov
arpl
fdivrl
or
test
xorb
cs
or
sub
outsl
les
cmp
pop
push
sub
stos
fildl
cmp
pop
mov
bound
hlt
not
mov
push
mov
sbb
xchg
popf
icebp
jmp
pop
out
rcl
je
cmp
mov
inc
lcall
mov
add
inc
inc
mov
mov
push
icebp
lcall
or
dec
jmp
bound
cmp
fadds
add
inc
sahf
dec
insl
in
jecxz
cmp
cli
je
mov
in
push
test
mov
sub
cs
xor
push
out
cmc
int3
dec
fs
enter
sbb
adc
inc
push
cmp
in
pop
lea
cmp
and
pushf
test
mov
cmp
lahf
cli
jle
mov
aaa
cmp
es
cmc
popf
xorb
fidivs
pop
inc
push
dec
jnp
fs
adc
cmpl
sti
push
push
jns
pop
push
dec
gs
faddl
sbb
sub
dec
cmpsl
mov
mov
jmp
popf
sbb
inc
add
sti
xor
stc
leave
mov
sbb
and
xor
mov
xor
aas
call
dec
movsb
in
sahf
icebp
bound
adc
and
test
adc
rorb
inc
push
mov
jne
xlat
mov
movsb
dec
or
out
ss
jae
sub
ljmp
dec
mov
shrb
loopne
and
cmp
cmp
popf
repz
xchg
push
leave
popa
in
sti
ds
push
subb
cmp
imulb
cld
jnp
lcall
jae
xor
push
dec
sbb
add
repz
xchg
inc
into
inc
cld
jg
jmp
sar
stc
pop
in
jb
cmp
cmc
push
jmp
test
mov
add
int3
hlt
cltd
mov
add
inc
scas
mov
sub
sub
cs
dec
rcrb
jns
mov
mov
push
aad
jo
aad
inc
jne
int
adc
xchg
fnstenv
clc
inc
sub
outsb
sub
aas
cmp
in
ds
loop
das
mov
push
add
aam
cmpb
mov
sbb
rcr
jge
mov
mov
add
loop
cmp
loope
xchg
jno
pop
pop
std
iret
inc
call
jno
mov
mov
test
stos
push
popf
testl
test
push
push
mov
jbe
cmp
dec
int3
test
movsw
rcr
add
xchg
fmull
sub
jle
cmpb
popa
cwtl
sti
stos
pushf
test
jecxz
mov
fadds
imul
and
push
inc
inc
pop
ss
sbb
nop
push
add
ja
jl
cltd
es
xor
sbb
or
inc
mov
js
sarl
jne
xor
fxam
adc
out
insl
push
or
test
and
clc
popa
mov
push
arpl
mov
pusha
lcall
test
mov
and
icebp
cmp
jmp
lea
in
inc
sub
add
push
jg
jb
adc
and
add
clc
test
add
xchg
push
in
outsl
data16
cld
xchg
push
or
lods
out
repz
pop
mov
sub
or
rcrl
sbbl
jo
push
sub
fwait
xor
push
push
push
shlb
xor
shrb
pop
push
mov
push
or
lods
mov
test
aam
data16
subl
dec
repnz
jo
mov
imull
add
movsb
push
inc
pop
imul
inc
lret
sbb
rcll
or
ret
xchg
xchg
addr16
int
push
pop
mov
jo
jns
icebp
in
cmp
out
push
inc
push
out
adc
jmp
fidivrl
aam
sub
adc
xlat
or
cmp
mov
cmpsl
fxch
or
imul
lea
push
je
pop
xchg
std
mov
push
imul
push
cmp
xor
in
test
ljmp
mov
adc
dec
jae
imul
pop
std
or
jnp
push
pslld
dec
and
cld
cmpl
add
mov
jnp
adc
or
cmp
add
sub
fldcw
shlb
enter
div
xlat
punpcklwd
lret
iret
aas
xor
aas
jns
pop
repz
lea
movsl
nop
xchg
cmp
xor
pop
in
add
ds
xchg
ljmp
rcrl
outsl
cli
es
push
test
cmp
push
addr16
inc
adc
pop
sbb
or
xchg
aas
mov
test
out
push
cmp
xchg
cmc
jmp
out
loop
lahf
mov
repz
bound
jno
mov
mov
cld
sub
xchg
pop
cmp
lods
inc
sbb
or
flds
inc
add
inc
aaa
mov
imulb
jmp
inc
jmp
out
xchg
lods
cld
lds
push
sbb
arpl
push
xchg
pop
jl
mov
insb
js
sti
je
sbb
cld
outsl
mov
push
mov
das
mov
push
loopw
out
addr16
lcall
inc
sbb
dec
fidivrs
test
mov
or
sub
fisttpl
and
cmpl
popl
movsb
mov
cwtl
jnp
or
push
in
pop
fidivl
stc
scas
push
xor
sbb
pop
fsubrs
repnz
inc
mov
push
shll
push
mov
iret
xchg
adc
xor
xchg
mov
lock
movsl
out
stc
movsl
scas
or
fldt
out
sub
sub
mov
sbb
lret
cltd
adc
les
fs
pop
ret
xor
test
in
pop
mov
fldenv
sti
push
rcll
aaa
dec
or
jle
test
adc
aaa
cmc
test
ss
xor
inc
cmp
lock
out
shrb
mov
xor
xchg
fisubl
pop
pop
lods
ss
ds
js
adc
jge
std
mov
pop
xor
fcompl
loop
or
into
add
mov
popf
nop
fadds
jecxz
ds
mov
sub
adc
sbb
dec
test
pop
xor
jmp
cwtl
add
outsb
hlt
adc
xchg
test
pop
ja
adc
nop
mov
xor
cmp
xchg
sub
aaa
push
test
sub
dec
hlt
js
aaa
sar
mov
pusha
and
in
in
arpl
push
xor
pop
add
push
lret
cmp
loop
pushf
pushf
fdivs
cmpb
add
daa
and
jne
test
and
inc
sbb
cmp
sti
cmc
mov
and
leave
out
or
and
and
and
fcmovb
stos
xchg
call
mov
loopne
cmp
ret
and
cmpb
push
jge
mov
cmp
add
mov
stc
lds
mov
loopne
xchg
jo
xor
inc
mov
pop
clc
mulb
mov
aam
js
imul
stc
cmp
cltd
jge
orl
and
testl
lods
repz
es
inc
aad
add
aad
or
pop
mov
push
adc
xor
stos
mov
ss
pop
dec
in
in
scas
push
xchg
dec
xor
repnz
mov
loopne
dec
cmp
lea
call
cli
scas
pop
movsl
int3
xchg
push
dec
mov
mov
or
int
out
call
bound
xor
xor
jne
cld
push
mov
jmp
scas
outsl
dec
mov
jnp
push
adc
add
stc
cmp
repnz
ljmp
cld
mov
rorb
push
xor
adc
adc
jne
pushf
repnz
sub
popf
out
outsb
cmpsl
jmp
mov
shrb
add
ss
aas
mov
sub
cltd
lret
push
pushf
xor
lods
xor
xchg
jg
outsl
mov
ret
fadds
pusha
push
mov
dec
je
jmp
lret
test
out
sbb
repz
mov
into
fbld
mov
push
push
lcall
jns
xor
mov
loop
xorl
inc
loope
out
mov
inc
pusha
jmp
adc
orb
outsb
dec
push
andl
mov
jns
xchg
aad
cmp
ss
outsb
cmpsb
stos
enter
pop
sub
jnp
sub
sahf
dec
pushl
push
lds
ds
scas
push
adc
push
addr16
movsb
imul
jecxz
outsb
stos
mov
bound
data16
call
out
daa
cmc
shll
sbb
mov
or
dec
jmp
jbe
jnp
adc
xchg
push
stos
dec
dec
ss
arpl
pop
sub
pusha
lret
loop
xchg
and
rcrb
or
add
pop
jge
pop
rorl
sub
lods
cmp
sub
pop
fists
icebp
int
xchg
je
sbb
cwtl
mov
xor
jns
cmc
pop
cmp
dec
push
fidivl
sbb
pop
lret
in
mov
incl
sub
mov
pushf
cld
jb
ror
into
std
cmp
cmp
movsl
mov
sub
les
mov
call
rol
mov
jl
cmpsl
fistpll
lods
pop
add
call
cmc
dec
mov
dec
pop
pop
imul
out
xchg
cmpsl
andl
xchg
xlat
jb
mov
scas
mov
mov
clc
or
das
stos
pop
jmp
les
cmpsb
mov
mov
sarb
out
add
jmp
mov
shrb
ja
jae
movsb
out
adc
sub
and
inc
and
jae
lea
add
cs
dec
mov
int3
in
pop
adc
fwait
or
es
fdivrl
shll
fidivrl
xchg
daa
jns
dec
jp
test
sar
leave
inc
inc
fwait
adc
int3
cmc
or
cmpsb
stos
sub
pop
dec
lods
push
aad
in
in
mov
xchg
or
pop
mov
inc
jae
dec
pop
sarl
fstp
popf
mov
jns
js
xchg
mov
pop
sub
lds
xor
cmp
push
lcall
ja
dec
or
mov
call
or
inc
aas
cwtl
addr16
mov
loopne
repz
xor
je
ljmp
sqrtps
adc
pop
pop
sub
adc
insl
out
hlt
jne
dec
pusha
xchg
push
mov
sub
orb
outsb
mov
nop
dec
je
mov
pop
std
xchg
xlat
les
xor
cwtl
shl
adc
and
call
cwtl
mov
push
adc
dec
mov
jno
xchg
inc
mov
aad
test
mov
shll
daa
push
add
scas
out
test
or
pop
fmull
movsb
xor
mov
shl
lcall
lds
push
mov
shrb
jecxz
inc
iret
push
xor
mov
dec
push
add
jle
push
jnp
cwtl
dec
pop
icebp
loope
xchg
les
and
lds
int3
push
addb
xchg
mov
inc
cli
inc
mov
mov
gs
cltd
inc
lds
fucom
jl
pop
sub
imul
dec
jae
fsubrl
fnsave
cmp
lods
fadd
scas
js
sbb
pusha
insb
hlt
sbb
cmpsl
in
jne
imul
das
or
cmpsl
xchg
cmp
sub
pop
xor
mov
inc
add
cmp
mov
jp
or
adc
sbb
dec
fidivs
or
popa
daa
lahf
adc
mov
push
xor
adc
pusha
and
pop
inc
pushf
mov
outsb
mov
xor
bound
dec
push
cli
sbb
push
cmpsl
ret
sbb
loopne
sub
test
loope
cmp
cmpsl
inc
cmp
push
in
push
movsl
lahf
shrl
rcl
cmp
sbbb
addl
cmp
cmpsb
inc
sub
lret
imulb
aaa
arpl
movsb
jp
or
push
mov
fsubrs
adc
addr16
sbb
adc
cmp
mov
sbb
lods
lcall
mov
sti
je
sub
mov
mov
aas
and
mov
mov
repz
je
push
jle
push
ret
cmc
bound
adc
push
lret
mov
sti
add
dec
jne
fs
sbb
push
add
fstpt
jb
dec
std
mov
cli
hlt
pop
lds
out
out
outsl
fdivs
adc
mov
imul
xchg
mul
mov
int3
subl
mov
daa
push
inc
insb
lcall
jmp
js
xlat
cld
imul
fistpll
dec
sbb
jnp
xchg
jo
pop
xlat
mov
cmp
test
jle
jbe
add
ficomps
cmp
add
jl
jecxz
nop
scas
je
pop
sub
inc
mov
repz
mov
loop
xchg
push
mov
jl
cltd
adc
push
and
std
movsb
mov
aam
lock
in
xor
xor
jmp
jle
dec
jne
xor
xchg
add
test
stos
rcl
dec
arpl
xor
outsl
inc
aam
jl
lea
xchg
loopne
pop
ficomps
out
mov
dec
notb
pop
xchg
addr16
arpl
jmp
dec
mov
pop
xor
aaa
ja
inc
xor
popf
xor
out
sbb
xorl
mov
rcr
fmull
mov
xchg
outsb
inc
in
das
shll
out
xchg
aam
mov
nop
stos
lods
jl
jp
test
fsub
repnz
lds
fwait
jge
xor
or
inc
lret
fdivrs
loope
cmp
scas
push
ds
cli
mov
sbb
pop
mov
clc
dec
inc
pop
std
repnz
aaa
xchg
aas
ds
lret
je
sbb
mov
pop
inc
lods
out
ret
mov
xchg
int
inc
lret
mov
jg
sub
ror
pop
xor
clc
faddl
xlat
pop
lods
in
dec
es
adc
cmpsl
das
cmp
mov
add
rclb
stos
sub
mov
cld
mov
cmp
jg
add
xlat
xchg
loope
mov
mov
xor
stc
jge
push
pusha
fimull
sbbb
aad
sbb
hlt
and
mov
cmpb
clc
lds
aaa
xor
push
in
fwait
pusha
cld
or
xor
mov
notl
icebp
sbb
sbb
inc
in
mov
aaa
fwait
imul
addr16
push
out
pusha
nop
jle
loope
dec
sub
jle
stc
ja
scas
add
jle
cmpb
jnp
jecxz
xchg
or
jne
jg
push
adc
ljmp
cmp
imul
in
pop
mov
jge
sub
in
mov
add
lea
and
ret
in
mov
loopne,pt
movsl
repnz
popf
sub
icebp
or
mov
das
inc
mov
scas
lea
jae
cmpsl
ficoml
rolb
mov
mov
sub
mov
sarl
mov
mov
stc
sbb
jge
mov
mov
icebp
and
scas
lea
cmc
xor
fcompl
or
adc
and
cmp
and
orb
add
push
adc
into
hlt
je
rclb
aad
pop
call
sbb
dec
mov
jle
repnz
sbb
in
or
bound
jne
movb
pop
mov
cmp
insl
push
dec
mov
imull
add
data16
push
nop
push
xchg
call
test
shl
std
mov
iret
into
push
ds
sarl
test
int3
adc
addl
inc
add
mov
clc
iret
dec
sub
je
sub
push
rcrb
out
les
add
mov
insl
dec
icebp
mov
mov
not
pusha
push
sub
cwtl
xchg
into
je
xor
clc
sbb
outsb
ljmp
push
lret
sbb
imul
cs
cmp
jbe
pop
rolb
out
nop
dec
aam
mov
sub
xchg
cltd
mov
in
inc
cmc
flds
adc
xchg
sahf
incl
cltd
ljmp
iret
out
sarl
hlt
insl
fimuls
fstpl
pushf
xchg
int3
cmp
btc
xchg
or
pop
in
xor
push
dec
sub
and
mov
icebp
xchg
popf
movsl
fidivrs
jmp
mov
lret
sbb
sbb
push
mov
xor
leave
lds
and
int
xor
xchg
loopne
rep
mov
js
jmp
sbb
inc
push
xor
sbb
shl
aaa
mov
jle
cs
mov
push
jbe
inc
sbb
int
inc
xchg
in
lods
jno
idiv
mov
outsl
push
ljmp
int3
sti
cli
sbb
lret
or
dec
pop
push
xchg
inc
push
sbb
push
daa
decl
out
pop
movsl
sub
inc
leave
mov
pop
or
sub
jmp
aas
sbb
sub
xchg
in
ds
clc
cmp
das
nop
repnz
cli
dec
jge
incl
mov
jl
cmp
jnp
mov
stos
rcr
rcll
mov
cmp
cmp
fwait
jmp
inc
in
add
test
insl
sub
jno
in
and
dec
or
out
mov
xchg
popf
les
jnp
mov
pop
push
in
repnz
pop
out
js
cmp
push
xchg
inc
mov
popf
mov
mov
rorl
or
cmc
push
out
call
cmp
or
jbe
rol
jbe
aas
mov
daa
xor
add
int3
mov
sbb
jle
add
and
and
pop
loop
mov
jle
lret
dec
lods
and
add
out
push
sahf
stos
push
movb
fistpl
ja
and
jg
repz
aas
mov
inc
dec
lret
fldenv
lock
and
inc
jne
add
dec
adc
loop
jnp
pop
ljmp
inc
inc
cs
mov
test
out
divps
loopne
fucom
jns
inc
int
sahf
jmp
cmpsl
jge
sbb
out
cltd
push
add
pop
xchg
imul
and
jne
or
sub
xor
or
incl
pop
add
arpl
dec
push
pop
decb
fadds
and
add
test
push
shl
fisttpll
loope
clc
fcmovnbe
push
out
notb
and
stos
xorl
xor
mov
in
aad
leave
mov
lock
push
repz
leave
add
mov
inc
rcll
push
inc
mov
loopne
push
in
cmp
cltd
pusha
in
push
mov
fcomps
mov
mov
fadd
ret
add
dec
lea
loope
add
idivl
stc
sarl
pop
mov
push
sub
int
sub
mov
movl
xor
jmp
les
push
jl
clc
cmpsb
mov
aaa
dec
inc
and
add
mov
inc
sub
and
int3
je
sub
and
xchg
call
iret
fistpl
or
xchg
cltd
stos
xchg
push
into
xchg
dec
jmp
mov
mov
xorb
jge
ja
add
pop
push
push
sbb
inc
sub
mov
call
test
adc
dec
mov
movsl
sbb
push
int
repnz
xchg
test
lcall
jmp
call
clc
dec
pop
push
sbb
outsb
pop
add
loope
in
sti
add
outsb
in
ja
outsl
cmp
jmp
mov
ds
out
test
pusha
dec
lods
les
push
jnp
icebp
fs
fstl
xchg
rorl
ret
pop
std
push
jmp
movsl
daa
push
pop
xor
filds
inc
xor
bound
mov
jno
roll
mov
out
add
dec
rcr
adcl
movsw
mov
gs
jo
jbe
mov
jb
sub
inc
lods
fwait
dec
pushl
mov
cmp
add
push
pop
mov
ljmp
mov
call
jo
inc
pop
daa
xor
cmp
shlb
mov
popf
lds
add
lret
lret
xchg
arpl
ret
dec
push
pop
adc
fidivs
mov
cs
sub
jle
out
push
mov
fdiv
loopne
out
push
jnp
push
js
jmp
sbb
add
lret
mov
xlat
cmp
call
dec
fnsave
sub
inc
xchg
push
gs
out
lods
gs
push
and
sbb
dec
jl
inc
lock
pop
add
enter
repz
enter
lret
dec
pop
dec
mov
mov
gs
dec
jb
ds
xor
inc
cmp
push
or
pop
movsb
mov
scas
ss
lock
push
push
jns
out
mov
repz
pushl
movsb
or
ss
aaa
xor
mov
es
idivb
mov
add
lds
clc
sbb
sarl
orb
cld
cltd
sub
nop
loop
je
xchg
xchg
decb
sub
pusha
inc
xor
aam
jae
lret
fs
or
lock
or
dec
bound
ret
sbb
push
filds
cmp
pop
shl
cmp
xchg
popa
inc
push
sub
sarb
ds
jecxz
iret
pop
ret
outsl
lahf
test
subl
out
pop
sbb
cli
test
mov
cs
psubd
push
repz
into
xor
gs
daa
cmpl
xchg
not
or
cs
pop
cmpsl
mov
lahf
sbb
and
es
dec
popa
movsl
in
jae
sub
jg
or
adc
loope
ljmp
shll
adc
pop
sbbl
lcall
push
cltd
mov
icebp
insl
inc
fdivrl
xor
xor
sar
mov
xchg
leave
adc
xor
add
mov
lods
jno
cli
arpl
outsb
cli
mov
xchg
add
push
cwtl
outsl
flds
mov
lahf
movsl
ficoms
sti
loop
mov
xorl
add
fdivr
xor
mov
mov
xchg
lcall
and
mov
rolb
mov
mov
arpl
fiadds
imul
mov
dec
cmp
jp
jge
inc
dec
daa
xchg
mov
repnz
mov
call
and
sub
dec
pusha
jns
popa
mov
int
in
mov
push
mov
mov
cmp
idivb
data16
testb
mov
dec
add
loopne
lods
or
dec
mov
subb
cmp
and
aam
test
pop
repz
imul
in
sbb
fdiv
loopne
cwtl
cld
xor
push
repnz
or
aas
vcmpss
pop
pop
stos
pop
cmp
in
into
jo
loopne
mov
rcrb
lea
aaa
sarb
fimull
mov
cmpsl
inc
btl
jg
js
adc
aaa
and
pop
in
out
imul
push
stos
cmp
xor
scas
out
dec
add
adc
inc
xchg
jnp
push
inc
mov
fwait
mov
andl
mov
daa
pop
lods
push
sbbb
mov
mov
xchg
xor
sbbb
xchg
jne
cmpsb
je
and
adc
jno
sbb
jne
sarl
jge
sub
leave
insb
enter
or
and
rclb
call
aas
xlat
xchg
movsl
out
jecxz
xchg
push
pusha
shlb
push
pop
push
test
sub
pop
lcall
out
mov
jne
add
push
xchg
xor
cmpsb
xchg
pop
mov
adcb
fnstsw
stc
cmovns
mov
mov
lods
adc
int3
daa
mov
rolb
lods
mov
dec
aaa
mov
arpl
dec
sbb
movsl
repnz
and
fstl
in
or
adc
inc
loop
shll
les
dec
fldenv
cmp
sub
mov
sahf
cmp
cwtl
leave
into
addr16
add
and
subb
sub
test
ja
inc
add
cld
mov
cmp
jecxz
popf
cltd
outsl
pushf
mov
mov
mov
out
sub
sbb
rolb
jp
movsb
mov
sub
ljmp
out
mov
ss
aas
cmp
and
insl
les
mov
in
xor
xlat
fldt
mov
movsb
neg
cmp
imul
or
xor
dec
xor
mov
cmp
pushf
push
mov
outsb
mov
out
dec
sbb
insl
pusha
pop
mov
mov
sahf
out
add
add
sbbb
pushf
xchg
jmp
ljmp
fdivrl
out
subb
mov
cli
push
orb
lods
pushf
int
jmp
cmpsl
popf
cltd
add
scas
loopne
sub
data16
lcall
push
psubd
xchg
cmp
pop
dec
inc
fimuls
sub
cmp
pushl
jnp
xlat
and
xchg
mov
std
call
das
test
add
add
sbb
jne
xchg
xor
xchg
jl
dec
dec
and
xor
sub
and
push
iret
call
adc
pop
dec
lret
sub
mov
nop
mov
clc
fisubl
cltd
rorb
jno
mov
sahf
pop
pop
jmp
sarl
subb
scas
xchg
sub
and
and
aas
mov
xor
inc
imull
mov
jo
lcall
or
roll
into
pop
in
jne
adc
jnp
stos
cmp
mov
mov
ljmp
push
ja
hlt
mov
testb
cmp
imul
inc
mov
jge
popa
sbb
sbb
push
add
xlat
mov
sbb
fiadds
loopne
ljmp
inc
adcb
ret
inc
pop
pushl
iret
dec
cmc
inc
pop
test
xchg
jge
add
xor
lods
fisubrl
jb
das
dec
adc
dec
jge
jno
in
or
xchg
sarb
ret
fisubrl
mov
addr16
xor
or
jns
in
scas
inc
push
repnz
pop
cmc
pop
sbb
loopne
test
inc
ljmp
pusha
call
dec
arpl
jl
cld
and
jecxz
fwait
xor
push
and
pop
mov
inc
insl
aad
sti
push
inc
roll
testl
in
inc
loopne
ret
js
and
test
sahf
xchg
out
push
data16
in
scas
jle
inc
inc
sub
or
or
les
add
imul
ret
addl
call
mov
insl
aam
mov
jns
pop
lods
pop
popf
mov
shl
in
cmp
loopne
sbb
xchg
and
xchg
test
int
pop
jbe
dec
inc
pop
add
and
andb
add
stos
pop
pop
adc
fwait
cmp
rclb
in
pop
mov
pusha
sub
cmc
jae
jns
popa
xchg
xchg
mov
mov
shrl
inc
pop
ja
or
in
ss
add
popa
mov
mov
sub
fldenv
loop
icebp
fs
test
push
out
jnp
jo
pop
stc
or
pop
sub
ret
sub
test
mov
sbb
fcompl
jle
xlat
inc
mov
int
lea
stc
lock
add
arpl
pop
out
push
adc
inc
addr16
out
icebp
and
movsl
sbb
push
cwtl
dec
mov
insl
adc
divb
cmpsb
pop
pop
repnz
or
test
ret
pop
pop
sarb
xchg
addb
mov
in
sarb
sub
xchg
inc
shl
cmpsl
cltd
sub
push
xor
xchg
stos
test
inc
xchg
out
mov
lods
movsb
mov
mov
mov
cmp
mov
or
mov
cmp
in
jmp
dec
or
or
mov
mov
jnp
jo
or
icebp
popf
push
sbb
sti
or
xor
mov
das
xor
pushf
jge
xchg
push
mov
out
insb
out
mov
ror
out
sub
scas
mov
cmp
cmp
arpl
mov
cmp
es
call
xchg
mov
jge
dec
push
rcll
ss
push
push
inc
or
in
push
insb
scas
ficomps
push
push
ljmp
repz
jns
cmp
xor
call
scas
pop
jp
popa
xlat
stc
or
jle
adc
loop
shll
adcb
movsb
add
xor
enter
push
std
aam
pop
movsl
popf
movsb
cmpsb
and
push
rcrl
mov
inc
push
je
push
ret
cmc
mov
sub
xchg
jb
sti
cwtl
lds
lock
add
adc
xor
insb
shll
insb
addb
jns
mov
pop
popf
sbb
mov
aad
xchg
jbe
sub
mov
rcll
push
cmc
sub
pop
test
xor
adcb
jg
scas
and
mov
popf
stos
insl
or
inc
cmc
mov
sub
ljmp
addb
clc
lret
xchg
add
mov
xor
mov
mov
bndstx
jmp
lds
repnz
mov
xchg
xchg
pop
decl
add
sub
adc
pop
and
pop
inc
movsb
pop
arpl
xchg
daa
xlat
push
xchg
scas
ss
pop
pushl
cld
mov
mov
push
rcrl
loop
lock
add
repnz
inc
daa
sub
les
cmp
pop
pop
repnz
lock
in
adc
sbb
xor
mov
pushf
lret
rcl
leave
ljmp
fstl
inc
dec
fwait
out
add
xor
adc
and
sbb
add
loope
cltd
or
repnz
push
rcll
test
add
dec
adc
popf
adc
loop
dec
inc
mov
mov
jl
add
out
jne
stos
gs
test
push
insl
es
jp
pop
mov
mov
repz
iret
xchg
sub
sub
xor
jb
pop
fwait
loopne
push
aas
inc
daa
cmp
out
lret
xor
mov
nop
out
popa
in
sbb
lahf
out
cli
xlat
lock
dec
aam
aam
clc
fprem
cmp
jge
out
dec
inc
mov
aad
lret
xchg
dec
add
xor
xchg
mov
dec
je
icebp
mov
pushf
test
sub
sbb
sub
and
cmpb
outsl
into
nop
push
mov
dec
push
aaa
fwait
add
mov
dec
lret
push
sahf
and
mov
sub
int3
fwait
add
sbb
add
outsb
xor
je
add
xor
test
sub
ds
xor
fidivrl
inc
xor
cltd
int3
sbb
mov
imul
sub
xchg
push
jg
inc
lea
movsl
mov
stc
andb
mov
pop
out
in
jp
repz
inc
inc
addr16
pop
out
in
inc
xchg
mov
xchg
dec
into
idiv
mov
adc
sub
sahf
mov
pop
mov
mov
fs
pop
pop
and
ficomps
or
aad
out
mov
pop
jge
test
test
int3
jg
xchg
stc
push
insb
scas
and
inc
stos
adc
mov
repnz
mov
xcrypt-cbc
cmpsl
push
inc
dec
outsl
mov
popl
xor
inc
sbb
cmp
sub
fbld
scas
dec
xchg
lret
jge
and
test
xor
lods
mov
mov
xchg
pop
imul
mov
add
cmp
add
inc
shll
sbbl
lahf
out
movsb
fiadds
mov
mov
icebp
leave
jnp
test
xrelease
rcrl
or
movsb
mov
sbb
mov
pop
int3
repz
jg
fsubs
inc
cltd
or
cmpsl
loop
in
dec
or
ret
xchg
aam
cmp
jne
ret
bound
lret
and
test
hlt
xor
lret
repnz
or
sti
xchg
pop
pusha
leave
int
inc
xchg
movsl
call
fwait
sbb
inc
mov
bound
inc
mov
sbb
sbb
sub
mov
xchg
aad
sahf
dec
dec
and
cmp
repz
pusha
or
and
jnp
xchg
push
or
ds
out
inc
mov
adc
fimuls
cs
js
mov
jl
xchg
dec
or
out
cmp
subb
shrb
stc
cmp
movsb
inc
mov
js
aam
jl
shrl
pusha
push
pop
add
sbb
movsl
mov
xchg
int3
punpckldq
dec
repz
nop
repnz
xchg
cmp
or
cmp
loope
jp
dec
mov
daa
mov
sti
popa
fmul
ja
repz
and
loope
xlat
jg
insl
mov
cld
rcrl
and
insl
mov
movsl
mov
aaa
fmulp
repnz
sbb
adcl
push
dec
and
sbb
adc
mov
xor
insb
stos
dec
loopne
xor
pop
cmp
lahf
rcrb
repnz
call
adc
xchg
cmpsb
and
iret
lds
add
movsb
cli
mov
xor
sbb
outsb
popa
pop
subl
rclb
adc
sbb
sarb
bound
jmp
xchg
xchg
push
and
push
out
adc
sbb
or
inc
dec
sub
in
test
pop
in
jmp
iret
das
and
jb
xor
dec
xor
imul
inc
scas
and
scas
cmp
test
les
xchg
in
mov
push
sbb
rorb
fwait
stos
adc
cmp
mov
jo
fsubr
add
lret
ret
imul
mov
mov
aaa
xor
or
dec
adc
fstl
pop
ds
movb
pushw
insl
aam
push
aaa
lods
adc
loopne
shr
out
mov
jle
push
or
sub
int3
cmp
xchg
jnp
pop
mov
mov
pop
pop
push
mov
push
loopne
mov
rorl
filds
mov
mov
push
fcomps
insl
adc
loop
out
inc
dec
push
std
pop
sar
pop
jp
xchg
mov
dec
jnp
test
jmp
test
jmp
daa
inc
xor
popa
sbbl
sub
test
rcrl
pop
jne
test
mov
inc
in
outsb
in
jo
repnz
roll
pop
push
out
mov
into
ret
xor
arpl
mov
ret
jecxz
rcr
fbstp
inc
ljmp
lret
fcoms
pusha
pop
inc
sbb
sbb
or
mov
mov
pop
leave
adc
shlb
cmc
stc
jecxz
enter
insl
sbb
shrb
in
push
pop
bound
rcrl
jnp
xchg
shll
ret
pushf
xor
lock
test
sub
xlat
sar
in
aam
rclb
dec
mov
mov
popa
add
loopne
and
xchg
inc
xor
sbb
decb
xorl
bound
out
mov
mov
call
jno
inc
push
rclb
inc
adc
mov
insl
je
lcall
mov
test
push
jae
and
jae
dec
xchg
dec
test
ss
mov
mov
setle
jmp
add
jo
or
dec
movd
jb
sarb
dec
dec
pop
push
lods
and
call
loope
rcrl
push
mov
clc
push
enter
or
loopne
adcl
lret
jnp
cmc
sbb
lods
adc
add
jp
sub
pop
inc
pop
daa
repnz
inc
sbb
mov
std
jmp
aas
fs
adc
mov
ret
popa
mov
in
dec
sbb
ficomps
push
jbe
pop
cmpb
insb
pop
addr16
in
fidivs
cmp
scas
sub
arpl
ljmp
outsb
mulb
repnz
in
jne
in
pop
mov
cmc
pop
cltd
in
stos
inc
mov
aad
and
inc
xchg
push
ret
mov
pop
pop
xor
jnp
stc
mov
scas
adc
pop
jo
sbb
rcr
flds
pop
imul
lea
and
cld
sub
pop
add
cld
sbb
push
dec
adc
test
mov
mov
jbe
fdivrs
aad
jb
jmp
pop
insl
dec
adc
lea
mov
clc
movsb
jne
lahf
out
addr16
ljmp
jbe
lds
push
cmpsl
mov
push
mov
add
sbb
jg
add
cli
in
push
mov
roll
jo
or
cmp
imul
shll
jb
ja
jl
adc
pop
mov
mov
pusha
divb
shrb
inc
dec
jno
outsb
fsubp
ss
mulb
lahf
aad
arpl
xlat
cmp
mov
lret
das
mov
repnz
xchg
in
lea
in
push
arpl
cld
push
insb
mov
loope
pop
stos
mov
and
mov
sbb
filds
lret
xchg
arpl
sbb
cld
ljmp
sti
andl
in
add
imul
adc
push
outsl
adc
loopne
xchg
jno
movsl
xor
add
lcall
sub
adc
push
xor
ret
jg
mov
jns
filds
fs
and
xor
in
fs
jbe
jp
lock
ss
cmp
scas
push
loop
mov
cs
mov
jle
add
sbb
xchg
push
cmp
sbb
add
mov
and
lock
shlb
dec
jmp
inc
mov
inc
pushf
jns
xor
or
jae
inc
in
xor
or
jne
insl
cmp
mov
stc
inc
adc
pusha
cli
cmp
sbb
sub
cmp
sahf
dec
pop
pop
test
test
nop
pop
cwtl
sbb
pop
inc
cld
cmp
aas
xor
mov
int3
push
and
mov
rorb
dec
dec
cltd
lea
out
sub
jnp
mov
scas
xchg
mov
mov
dec
push
jae
aad
paddsw
xor
sub
add
mov
stos
enter
mov
mov
inc
pushf
into
out
fstps
movsb
jg
pop
mov
idivl
rorb
xorb
mov
pusha
mov
or
mov
aam
add
shr
and
stos
pop
aaa
test
or
sub
andb
stc
incl
xor
cmp
rcrl
pushl
mov
push
pop
jno
add
cmp
dec
cmp
out
loope
sarl
fmul
cmp
inc
cltd
mov
or
movsb
subb
mov
push
dec
inc
add
and
jnp
xlat
push
call
pop
mov
mov
enter
or
in
into
mov
rcrb
fnstsw
cs
dec
in
and
sbb
cmpb
cmp
mov
or
pop
rorb
iret
cs
mov
insl
cmpsl
scas
lcall
dec
inc
jg
xor
in
mov
cmp
out
push
inc
pop
sbb
cmpsl
pop
out
xchg
rolb
push
aam
fisttpll
mov
movsl
mov
int
pop
add
mov
ror
xchg
scas
and
mov
adc
and
sbb
and
cmp
push
cmp
in
fisttpl
pop
and
cs
scas
inc
adc
mov
or
jne
cmp
icebp
fcoms
pop
pop
mov
int3
cmp
xlat
xchg
sar
cmc
js
idivb
out
or
sbbb
movsb
push
mov
or
into
adc
adc
adc
jbe
insb
and
je
in
sub
xor
sub
jns
xchg
mov
and
push
lret
mov
push
popf
imul
cld
xchg
xor
mov
xchg
lcall
addb
dec
fld
mov
les
cmp
repz
popf
cmp
add
pusha
in
xchg
sti
pop
shrl
inc
xor
push
in
inc
cmpsl
adc
loope
cmp
dec
dec
push
testl
test
test
cmp
push
into
jmp
scas
insb
std
push
pop
or
hlt
jns
jl
mov
out
mov
pop
jl
push
dec
adc
adc
andb
dec
add
lahf
inc
in
mov
or
movsl
adc
cmpsb
insb
mov
cmpsl
mov
adc
inc
jnp
push
adc
clc
jle
sbb
inc
sarb
movsl
retw
inc
jns
cltd
stc
mov
das
and
push
or
push
push
repnz
loopne
xor
inc
stc
in
mov
mov
mov
add
or
imul
sub
js
insb
xlat
cli
adc
sub
scas
gs
ja
jmp
mov
int
das
mov
test
sbb
push
jb
pop
inc
push
push
leave
mov
std
dec
imul
mov
xchg
xor
aam
sbb
xor
mov
jmp
cs
cmp
repz
pusha
sbb
lahf
mov
cmpsb
sbb
mov
push
pop
mov
mov
jmp
in
push
cmp
adc
imul
fcomip
dec
outsb
out
lcall
jg
daa
xor
fwait
test
mov
adc
arpl
inc
sbb
xchg
imul
mov
repnz
cmp
int
clc
aas
push
xchg
mov
cmc
mov
mov
negl
dec
jmp
push
lea
add
dec
jae
mov
inc
sbb
mov
jno
add
and
imul
sub
add
jl
lods
outsb
fstpt
or
repnz
adc
sub
adcl
dec
sbb
movsl
pop
test
andb
jno
mov
xchg
jne
cmp
dec
cs
push
or
xchg
lods
inc
mov
shlb
lss
sub
and
lret
cs
ds
scas
xor
loope
dec
test
imul
pop
lods
cmp
cmpb
inc
andl
clc
out
push
cmp
sbb
xchg
outsb
bound
pop
or
sub
cmp
clc
ret
lods
jnp
push
cmp
clc
lcall
or
jmp
adc
cmpsl
push
je
shr
enter
lcall
push
ret
js
and
mov
stos
test
mov
xor
sbb
arpl
jae
cwtl
loop
test
push
orb
daa
jo
mov
loope
outsb
shr
bound
sub
inc
xor
pushf
xchg
shll
xor
push
push
loopne
cmp
cmp
ds
jmp
pusha
pop
inc
cmc
mov
push
lods
inc
mov
dec
mov
dec
or
xchg
iret
sbb
test
cs
dec
or
mov
jp
xchg
imul
mov
inc
mov
fwait
arpl
int3
add
xchg
pop
adc
stc
push
fdivs
bound
fisubrs
mov
pop
cmpb
stos
dec
dec
xlat
mov
xor
cmc
add
xor
mov
cwtl
out
mov
fs
sub
push
cmp
mov
leave
mov
ss
loopne
in
mov
add
in
pop
pop
imul
pop
jne
sbb
jne
adcb
adc
jb
sahf
mov
mov
gs
push
fstl
xchg
inc
sub
xchg
mov
enter
insb
jno
int3
xchg
fisttpll
sarl
movsbl
clc
jmp
aas
fdivl
add
cmp
inc
pusha
mov
adc
subb
push
or
test
sub
sub
dec
rep
adc
lahf
aad
stc
push
int3
testl
out
jns
ss
ret
repz
aad
mov
mov
cmp
bound
cmp
clc
repnz
sahf
adc
cmpsl
lcall
cmp
shl
mov
inc
pop
dec
das
xor
adc
push
sbb
in
adc
sbb
xor
add
xchg
rcl
pop
xor
xor
sti
fwait
mov
pop
sub
mov
cli
fwait
jecxz
lret
and
pop
out
dec
add
push
mov
jl
dec
cmp
faddl
mov
loopne
or
xor
add
clc
aaa
cmpsb
iret
outsl
aas
pop
loop
lods
cmp
jae
popf
cltd
add
sub
fmul
and
mov
lock
in
dec
push
out
divl
andl
testl
cltd
in
cs
mov
movsl
hlt
mov
data16
adc
pop
mov
mov
push
cmp
mov
push
clc
in
lahf
stos
pushl
xor
pop
mov
lods
xor
test
sbb
idivb
aaa
mov
fadds
jl
addl
shr
adc
jns
sbb
ja
cmp
int
outsl
in
jle
lock
inc
sbb
lea
pop
or
mov
and
pushf
loop
dec
int3
mov
cwtl
or
js
or
inc
mov
pop
inc
or
mov
jae
jns
sub
iret
movl
adc
mov
in
cmp
les
adc
xor
insb
sub
or
sbb
xor
enter
divb
sbb
jecxz
fdivs
bound
mov
test
rorb
das
mov
test
mov
sub
in
push
fldcw
imul
sti
mov
mov
fstpl
xlat
lds
scas
jle
sbb
sbbl
cwtl
or
sbb
inc
cmp
inc
xchg
add
adc
daa
mov
pop
adc
fldt
mov
movsb
inc
mov
lock
pop
movsb
xchg
mov
sub
cmp
repnz
sub
adc
dec
outsl
je
sub
rcr
pop
cmp
das
push
dec
lea
std
push
mov
aad
dec
inc
jge
pop
adc
cld
adc
sti
fdivr
ds
sbb
pop
cwtl
lret
je
sub
imul
mov
sub
adc
or
dec
test
or
xor
enter
aad
ljmp
ficomps
in
sub
xchg
push
mov
inc
inc
lds
xchg
pop
push
dec
sbb
push
sbb
into
ror
or
adc
and
xchg
daa
or
add
sti
arpl
sbb
mov
inc
mov
fimull
popf
divl
pcmpeqd
adc
lods
sbb
xor
frstor
push
fdivrs
dec
roll
push
ljmp
cmc
fwait
jbe
mov
inc
mov
imul
daa
mov
mov
fisubl
cmc
cmp
sub
push
push
pop
fidivs
and
add
iret
push
mov
cmc
cmp
in
orb
lea
xchg
mov
mov
jge
add
push
push
insb
xchg
sbb
push
in
movsb
lods
gs
aad
stos
loope
inc
or
push
xor
pop
jno
repnz
cmp
xchg
xor
stos
cltd
xor
xchg
insb
ljmp
mov
cmp
push
repnz
scas
jnp
cwtl
popf
and
inc
pop
pop
mov
adc
mov
jo
pop
dec
test
fadds
shlb
pop
add
mov
imul
fcoml
dec
add
stos
hlt
jne
and
out
xchg
in
insb
aaa
jle,pn
lea
mov
mov
push
popf
inc
mov
push
movsl
aam
outsb
adc
pop
adc
leave
sahf
iret
lahf
ja
lods
test
into
and
ret
int3
imul
scas
mov
fnstsw
inc
xchg
lods
jo
sub
scas
dec
mov
repnz
push
fs
test
sub
movsl
notl
mov
mov
pop
xor
arpl
nop
sahf
ljmp
and
add
int
inc
mov
fcomi
push
std
sub
les
fidivs
cmp
cmp
add
sbb
adc
push
movsl
pusha
out
xchg
push
sub
scas
mov
xlat
fcomi
insl
aaa
and
cmp
dec
sub
int3
ret
ljmp
cmp
sub
ja
mulps
scas
jns
sahf
and
add
out
dec
xchg
inc
add
cwtl
fs
lahf
jo
sahf
repz
cmpsl
and
movsl
jecxz
add
fwait
adc
mov
or
add
xchg
ja
sarl
push
jl
mov
jnp
fidivs
jb
movsb
jne
out
mov
sbb
out
shlb
cmp
nop
mov
shrl
adc
inc
sti
push
and
push
in
push
inc
insl
pop
std
fwait
jno
lock
scas
xchg
mov
fsubl
aam
jge
movsl
leave
fsubs
cmp
notb
pop
arpl
stos
lds
loop
leave
jbe
pop
cmp
jns
pop
xor
dec
xchg
push
addr16
sub
cmp
outsb
jg
sub
push
loop
push
movb
out
call
push
push
sbb
dec
sbb
shrb
outsl
sub
cli
pop
add
sub
mov
lds
ret
mov
imul
rorl
addr16
mov
add
jae
clc
js
pop
sbb
sti
and
jo
mov
nop
xchg
cmp
inc
dec
addr16
jno
mov
push
fwait
icebp
lret
imul
repz
xchg
icebp
nopl
dec
inc
popf
push
lods
stos
mov
dec
ss
push
lods
adc
repz
add
cmc
lcall
fcmove
or
xchg
inc
jge
cld
xchg
jb
into
dec
arpl
mov
pop
mov
cmp
loopne
jg
jge
add
or
and
and
leave
fisubl
inc
sar
leave
je
cwtl
jo
test
and
pop
cmp
push
rcll
stos
pop
lds
insl
jl
out
add
imul
mov
add
ror
outsb
push
sub
xchg
xor
bound
push
rcrl
adc
add
aaa
sbb
dec
scas
movsl
xchg
or
add
out
fbstp
jge
or
pusha
stos
addb
movsb
mov
mov
xchg
fadd
movsl
daa
lcall
mov
pop
pop
scas
inc
movsb
inc
fnsave
cltd
xchg
lds
cmp
movnti
and
stos
add
dec
pop
nop
sub
and
dec
mov
dec
pop
push
rorb
or
sub
xchg
test
loopne
in
mov
inc
movsl
cltd
incb
mov
sbbb
bound
cmp
ljmp
ficoms
subl
jno
jecxz
inc
clc
xor
icebp
cwtl
xchg
sti
push
shlb
fcomps
or
add
mov
loopne
outsb
movsl
sbb
lret
inc
sub
outsb
add
lock
pop
in
addr16
dec
and
lds
lods
jno
dec
jle
stos
inc
outsb
xchg
in
pop
bound
out
or
xchg
leave
pushl
or
or
out
sbb
ss
push
scas
movsb
fstl
mov
sub
xor
ljmp
or
or
cmpsb
sbb
xor
daa
loope
mov
iret
popf
sti
pop
in
jno
cmp
jg
mov
mov
fsubrl
mov
pop
add
push
jle
push
xchg
in
outsl
cmp
aas
ret
xchg
sbb
inc
je
push
pop
jo
ss
sbb
aad
call
pop
jmp
jle
xchg
clc
xor
push
xlat
es
scas
and
jp
adcl
ret
push
cld
arpl
das
mov
cmpsb
push
xchg
outsl
push
shlb
xchg
cli
xchg
mull
jle
frstor
cld
xor
setge
lcall
pop
mov
sub
push
sbb
jmp
movsb
lods
mov
mov
dec
sbb
inc
negb
cmpsl
jl
int3
ja
mov
addr16
mov
xor
dec
mov
dec
pop
jne
pop
jbe
lret
fnstenv
pop
loopne
lahf
jp
cltd
push
flds
pop
mov
sahf
jo
sbb
add
sbb
out
pop
scas
push
push
mov
mov
ss
int
lret
movsl
mov
lcall
mov
aaa
and
xor
int
shr
jae
ret
orb
xchg
lds
les
mov
sbb
int
in
stos
xor
push
cmpl
dec
cmc
mov
testl
mov
sahf
lods
lods
push
stc
je
jno
pop
icebp
hlt
jb
adc
sahf
outsl
xchg
push
cs
stos
pusha
fcomps
pusha
loopne
test
mov
xor
jle
dec
xabort
push
fwait
xchg
fsubr
aad
daa
push
pop
xor
divb
dec
jl
mov
mov
in
fst
mov
sbb
mov
loop
and
popa
jae
pop
inc
adc
cmc
xchg
aaa
aad
mov
push
js
cmp
sbb
mov
mov
sub
push
xchg
dec
sbb
or
lret
xchg
cs
mov
and
mov
rcr
mov
push
jae
fwait
and
jg
add
sbb
and
mov
hlt
inc
scas
mov
into
xchg
popf
jp
mov
repnz
cmp
mov
outsb
push
dec
push
dec
enter
push
sarb
ret
or
adc
pop
mov
pop
mov
add
ds
int
adc
aaa
leave
adcl
stos
push
rcrl
mov
jg
sub
out
mov
or
mov
push
xchg
jle
sbb
cmpsb
aam
mov
shlb
mov
and
pop
fstpl
push
das
sbb
sbb
aas
fdivrp
xor
pop
test
std
push
lods
mov
jno
test
add
int
js
mov
mov
fs
fcmovbe
jl
jo
jp
stos
lods
fildl
dec
mov
xchg
jno
sar
push
sbb
sub
xchg
stos
jle
data16
or
cltd
jbe
inc
push
fsubs
pusha
rolb
xor
pop
or
jnp
push
popf
inc
shl
insb
scas
mov
into
cmpsb
dec
insb
cltd
hlt
mov
push
loopne
mov
mov
icebp
mov
pop
outsb
roll
mov
mov
mov
push
inc
add
inc
je
mov
jmp
cwtl
ljmp
and
add
push
sub
inc
adc
repnz
mov
popf
hlt
popa
dec
out
pusha
adc
jge
aas
lret
test
js
pop
into
add
xchg
pop
lret
sub
pop
push
dec
fs
inc
mov
cmp
push
xlat
cwtl
dec
ret
outsl
push
jne
push
fcompl
and
lods
xchg
in
in
sbb
in
dec
xor
das
lret
dec
mov
push
clc
add
fsts
test
pop
or
lea
int
xor
xchg
mov
or
sahf
inc
loopne
into
imul
jl
push
nop
ret
xor
jno
jecxz
mov
bnd
jecxz
aam
imul
push
sbb
adcb
stos
mov
mov
mov
fistl
lcall
nop
test
jne
add
int3
mov
fucomi
les
xchg
xchg
test
adc
adc
call
ret
push
cmp
adc
jbe
add
adc
sbb
add
inc
ss
shll
popf
ja
push
nop
jp
adc
rcrl
fdivs
std
outsl
mul
pop
jo
gs
cld
in
loop
clc
aam
mov
jmp
fucomip
cld
inc
addr16
mov
sbb
nop
ret
int3
dec
inc
fildll
mov
cmpsl
mov
imul
or
jb
xlat
mov
sarb
jl
in
mov
icebp
or
jp
sub
sahf
iret
pop
ss
in
pop
mov
or
mov
sbb
jb
lock
mov
test
add
das
xlat
stos
jmp
xchg
nop
inc
or
xlat
enter
cmp
push
popa
subb
ja
pushf
inc
clc
push
adc
out
fcoms
mov
add
dec
jbe
add
nop
dec
sub
mov
and
mov
xchg
jns
sub
mov
lcall
out
sub
cmp
sbb
push
lahf
dec
mov
std
insb
push
fwait
and
test
cmp
dec
movsl
push
aaa
push
mov
pop
add
int3
cltd
mov
push
insb
rcl
lahf
loop
and
mov
jnp
pop
sub
jl
cmp
daa
sbb
fprem
ret
inc
and
inc
mov
adc
pop
mov
cmpsb
addr16
loope
pushf
fs
mov
pop
es
in
sbb
or
test
shl
lahf
push
int3
insb
popf
mov
mov
aam
loope
mov
ret
lret
cs
hlt
nop
dec
mov
dec
sub
rcll
dec
pop
xlat
sar
mov
adc
xor
add
add
jg
jbe
xchg
fistpl
cwtl
pop
dec
xchg
jecxz
lods
in
xchg
sub
mov
inc
cltd
loope
loop
fcoml
fistl
adc
mov
push
and
mov
lods
push
clc
mov
mov
cmpl
sub
push
jmp
xor
pusha
pusha
mov
push
push
sahf
cltd
pushf
add
push
insl
pushf
jnp
std
ja
lea
lods
mov
jmp
mov
mov
push
mov
in
mov
jne
xor
push
xor
inc
pop
insl
push
xchg
push
push
nop
out
jbe
inc
stos
mov
stc
into
xchg
push
int
lods
inc
scas
lods
dec
stos
pop
push
xor
pop
fldt
sahf
loope
cli
pop
mov
inc
push
push
mov
out
fbld
sbb
frstor
out
cmpsl
mov
in
sbb
pusha
cmp
xchg
or
ds
add
jbe
cmp
xchg
mov
cld
jbe
fisttps
mov
jg
jno
or
ljmp
das
cs
push
xor
sbb
gs
jbe
push
outsb
mov
imul
xchg
dec
arpl
push
jp
adc
hlt
out
icebp
lea
mov
and
es
fwait
loopne
orb
jg
push
sub
jns
addr16
mov
pop
repz
icebp
movsb
test
movswl
cwtl
and
shll
pop
in
mov
jle
inc
push
push
sbb
into
dec
std
rcll
fdivl
dec
outsl
cld
sbb
mov
dec
inc
cmp
insb
test
aad
push
push
inc
jno
sbb
dec
and
je
inc
roll
jnp
inc
pop
pop
push
lea
ja
pop
sbb
ret
cmp
dec
sbb
jbe
loopne
pop
cmp
sub
lahf
adc
jp
subl
test
fisubs
dec
fsts
data16
mov
aad
mov
addb
imul
enter
sahf
testl
mov
jne
xorl
hlt
outsb
xor
imul
stc
scas
dec
pop
hlt
mov
mov
mov
xor
es
push
xchg
cmp
nop
sbb
pop
cmpl
icebp
loopne
xchg
inc
in
pop
clc
mov
mov
sub
ret
jmp
pop
in
repnz
lds
loope
xor
mov
or
pushf
mov
notb
jno
jo
rcr
mov
jnp
dec
inc
push
std
lock
and
jne
push
sub
fiaddl
cmp
fsubp
mov
cmp
adc
xchg
adc
scas
sti
cmp
push
shrl
subl
imul
mov
sbb
jno
jp
cmp
lods
mov
mov
xchg
mov
mov
lahf
mov
js
adc
fisubrl
jo
pop
cmp
ffreep
fimull
sbb
bound
orl
xchg
xor
inc
cmp
test
daa
cmc
sbb
jno
adc
test
into
pop
xor
xchg
mov
mov
lcall
subb
les
je
jl
lret
in
lods
stos
xchg
jp
xchg
jnp
adc
mov
scas
xor
pop
and
push
mov
es
jmp
lock
dec
xor
dec
sub
or
adc
repnz
adc
and
jno
inc
int
or
cmpsl
sbb
mov
adc
mov
loopne
rorb
loop
jmp
jns
lds
fcmovnu
lock
jp
add
clc
sub
in
inc
cmpsl
push
outsl
xchg
adc
add
cmp
ljmp
mov
mov
xchg
movsb
push
data16
and
inc
mov
push
dec
xchg
and
std
and
xor
sbb
pop
jl
stos
sbb
shr
adc
pop
or
sbb
insl
cltd
inc
push
add
sub
dec
or
mov
imul
mov
lds
sbb
mov
popf
and
xchg
push
push
push
shrl
ret
mov
adc
mov
into
mov
adc
adc
fimull
pop
fmull
cmp
push
shll
sti
roll
out
lock
lret
or
cli
scas
repz
repnz
pop
xor
ja
mov
mov
ret
jl
ds
inc
push
mov
lea
leave
jecxz
inc
fs
xor
inc
adc
and
sub
mov
sbb
jge
or
stos
popf
rclb
pop
sub
inc
jl
mov
leave
push
push
jns
test
pop
jmp
mov
mov
jle
imulb
pop
or
xor
mov
shrl
arpl
lock
inc
out
xor
xchg
popf
inc
pop
pop
mov
idivb
mov
and
stos
lea
outsl
scas
pop
mov
fst
jnp
cmp
fnsave
ret
mov
enter
mov
mov
rclb
shlb
mov
pop
sub
xor
pop
pop
sbb
xchg
ljmp
push
add
imul
xor
sub
mov
cmp
cli
pop
lahf
loop
jg
mov
xchg
mov
out
pop
dec
or
faddl
dec
repnz
shl
fldt
xchg
fmull
fsts
cmc
cmp
movl
mov
dec
mov
jg
cwtl
adc
and
rcll
fistps
xchg
jb
mov
insl
mov
jbe
fcom
andl
pop
pushf
les
mov
pop
loop
lret
arpl
jecxz
lcall
xor
xor
scas
cmpsb
fdivl
xchg
aaa
stos
xchg
aad
cmp
out
fistps
mov
int3
xor
and
jne
add
mov
pop
pop
stc
imul
sub
daa
ljmp
or
cld
outsl
jp
push
ja
push
xchg
jns
xor
adc
nopl
insb
mov
cmpsl
adc
xor
dec
out
push
push
or
jp
std
dec
sti
pusha
ljmp
lcall
pop
sub
outsb
aam
icebp
repz
inc
repnz
test
push
mov
sarl
inc
mov
adc
sbb
or
rorb
cmp
pop
testl
xchg
faddl
sbb
cmp
loope
aad
ja
mov
int
inc
inc
outsl
and
cwtl
xor
pop
jne
dec
scas
aam
rcr
jae
rep
int3
test
or
shll
push
jno
shlb
mov
jb
sub
rolb
subl
cmpl
insl
into
movsb
sbb
add
test
ds
or
or
and
pop
push
pusha
cwtl
sbb
dec
xor
pop
push
movsl
cmpsl
lret
shrl
lahf
and
mov
push
sub
scas
jecxz
sub
jo
mov
push
enter
lahf
mov
inc
sarl
stc
hlt
gs
pop
aam
dec
scas
lods
test
mov
cmp
outsl
jo
or
pushf
xlat
data16
jle
mov
and
out
mov
ficompl
or
ja
setno
rep
push
mov
jp
and
leave
test
mov
addr16
in
dec
cmp
dec
icebp
jnp
data16
inc
mov
jmp
subb
jmp
xor
add
and
mov
outsb
les
bnd
dec
inc
repnz
xor
loope
add
cld
les
dec
or
daa
div
in
loope
mov
add
test
in
shll
push
push
imul
or
or
lds
mov
mov
sub
cltd
jmp
cmpsl
mov
mov
push
xor
das
push
jae
push
stos
pop
inc
dec
mov
shll
testl
test
pop
mov
int
push
mov
jmp
lods
test
pusha
in
ret
lcall
jecxz
add
adc
jbe
movsb
mov
sahf
push
xor
js
sbbb
xchg
sub
out
lods
in
fidivrs
inc
xlat
mov
adc
sbb
push
push
push
movb
mov
aam
ficoms
lcall
jmp
outsb
sbb
cmp
addr16
jo
mov
xor
inc
mov
mov
ret
push
iret
inc
sbb
xchg
sbb
and
fcomp
mov
xor
mov
dec
pushf
data16
jne
sbb
add
fdiv
push
adc
pop
call
jle
sbbl
jge
add
pop
mov
inc
jle
sbb
adc
cli
dec
adc
movsb
jp
pop
add
xor
sub
sti
les
test
scas
shrb
test
cmp
dec
adc
int3
push
sbb
mov
push
push
dec
cmp
mov
test
dec
insl
cmp
jo
leave
and
fisubrs
push
jg
clc
add
mov
sarl
add
ret
xchg
test
std
mov
iret
jmp
and
jne
mov
jne
adc
xchg
jne
mov
mov
icebp
mov
push
lcall
out
sub
cmp
inc
mov
inc
notb
ret
sub
jb
push
das
shll
pop
shlb
mov
xchg
dec
in
xchg
les
stos
push
xchg
mov
jl
mov
sbb
imul
stos
popl
movsb
xor
sbb
or
cmp
cmp
mov
xchg
push
shll
cmp
or
xor
insb
fildll
jnp
cmc
stc
in
repnz
or
insl
push
cltd
mov
clc
das
or
pop
idivl
mov
sar
loope
sti
xchg
inc
addb
sbb
xor
xor
xor
mov
fimull
testl
or
cltd
mov
inc
xorb
decl
icebp
push
rcl
cmpsb
mov
adc
aaa
and
jmp
mov
jne
cli
test
push
mov
pop
out
push
pop
stos
sarl
add
popa
pop
les
iret
xor
cmpsl
xor
cs
cmp
pop
add
dec
andb
icebp
shrl
popa
test
adc
or
sbb
cmp
pushf
je
out
jnp
add
sbb
inc
jmp
add
mov
add
sbb
dec
push
jge
lret
addb
dec
in
pop
in
cmp
jne
in
jne
xchg
or
jl
jno
daa
ret
inc
into
mov
outsl
inc
loope
add
int3
cwtl
test
das
xor
daa
insl
ds
mov
popa
cmc
or
and
dec
mul
push
jp
add
push
inc
repz
inc
pop
femms
xlat
push
les
stc
xorb
xor
jne
sbb
push
jge
in
in
popf
push
sub
add
mov
dec
pop
loop
sbb
mov
es
sub
test
sbb
cmp
mov
mov
mov
rcr
pushf
adc
int3
fs
xchg
inc
xchg
andl
mov
jno
jnp
cmc
lcall
xorb
ficomps
add
inc
hlt
inc
stos
pop
mov
adc
push
lcall
sbb
pop
add
push
lret
aam
inc
daa
xchg
pusha
mov
pop
xchg
je
loope
add
xchg
sbb
xchg
jle
add
cmp
cld
aad
je
lahf
pop
sti
xlat
stc
fiaddl
adc
mov
adc
mov
jmp
mov
js
pop
or
pop
xchg
mov
repz
mov
out
xchg
addl
clc
xor
aaa
jbe
or
sbb
cld
into
lahf
sub
mov
xlat
mov
adc
cmp
test
pusha
cmp
push
addr16
insb
dec
sub
repz
bound
pop
inc
xor
in
stos
stos
add
cmpsl
fnsetpm(287
mov
xor
aam
push
sub
int
adc
mov
lcall
arpl
push
xchg
mov
or
lret
jbe
data16
mov
sub
cwtl
dec
popa
js
push
fisubs
dec
and
lods
ret
push
pop
push
pusha
adc
mov
pop
test
lds
inc
cmp
sub
pop
inc
fwait
push
xor
sahf
mov
pop
mov
ja
call
sbb
sub
sub
cmp
fdiv
xor
add
jg
popf
ljmp
sub
xchg
add
movsl
mov
imul
push
mov
fisttpll
pop
ds
jle
push
insb
sbb
xor
mov
mov
push
xchg
es
icebp
ds
jp
subb
lahf
stos
loope
loop
jg
xor
mov
and
mov
out
push
inc
ud0
jmp
orl
movsl
clc
cmp
das
xlat
loopne
push
cmp
and
adc
mov
cli
sub
xor
jecxz
sbb
dec
jno
dec
xchg
mov
jnp
outsb
mov
mov
pushf
inc
ret
jnp
jge
or
pop
repz
data16
loopne
stos
call
test
movb
add
xlat
in
xor
dec
mov
mov
imul
arpl
push
push
jmp
lcall
fisttps
inc
std
xor
jmp
adc
scas
gs
es
das
mov
jmp
mov
lock
and
mov
sbb
insb
in
xchg
or
nop
in
jl
dec
fisubs
adc
out
or
int3
or
addr16
out
sub
mov
lds
push
stos
das
pop
dec
shl
mov
in
push
push
mov
pop
mov
cmp
aas
rorb
popf
fwait
lahf
clc
cmp
jge
sbb
lahf
mov
mov
jmp
mov
jg
out
adc
xchg
sbb
cmp
cmpsb
xchg
mov
pusha
pop
gs
ss
pop
ljmp
jg
or
nop
lds
cmpb
push
mov
scas
out
shr
std
adc
adc
iret
add
enter
jnp
rolb
hlt
jecxz
sub
shll
popa
ror
fimuls
sahf
sub
imul
push
push
sbb
mov
dec
test
mov
mov
movl
ljmp
jne,pn
imul
xchg
aas
xchg
inc
nop
fsin
int3
pop
adc
sti
cli
jp
mov
push
mov
inc
decb
stos
inc
and
sub
xchg
or
imul
jecxz
ds
xchg
js
loop
pop
sbb
test
push
fadds
pop
lea
xchg
int3
pop
sub
fstps
push
sub
inc
and
adc
pushf
mov
or
cmp
sahf
scas
stos
lods
mov
popa
movsb
popa
fidivrs
jae
test
mov
sub
adc
adc
xchg
inc
cmp
dec
ljmp
out
xchg
dec
add
in
std
jbe
push
sub
pop
enter
lcall
notb
or
jnp
test
pop
cmp
clc
pop
xchg
icebp
dec
gs
push
push
inc
std
add
add
lock
sti
and
add
cwtl
push
std
jo
dec
jae
xchg
pop
loope
fbld
lret
outsl
imul
rorl
and
dec
sbb
and
xchg
inc
adc
push
sti
xor
pop
cmp
imul
pop
scas
rcrb
es
inc
shll
dec
addb
out
in
dec
scas
imul
pop
inc
lcall
imul
pop
add
mov
pop
shll
jne
lea
les
mov
and
daa
fs
push
in
popl
xchg
clc
bound
mov
add
pop
jb
xchg
dec
lret
cwtl
js
aaa
xchg
outsb
inc
imul
sahf
add
in
adc
loop
in
push
mov
cmpb
push
cmp
cli
inc
iret
lods
mov
or
data16
icebp
adc
jnp
xchg
stos
pop
jno
lahf
sbb
std
xchg
dec
fildll
cmp
pop
pop
lods
int3
add
in
mov
stc
push
mov
mov
out
xchg
mov
mov
mov
or
dec
sbb
loop
sbb
adc
pop
lods
leave
push
rorl
movsl
mov
outsb
xchg
test
cmpsl
ret
sti
sbb
out
mov
sbb
cs
push
or
mov
cli
into
push
shr
decb
cwtl
lock
dec
nop
test
or
gs
adc
xchg
mov
push
jae
jmp
xchg
ljmp
cli
cmp
and
or
pop
fcomi
cltd
inc
cmp
sti
test
leave
lock
hlt
jbe
rorb
push
dec
inc
mov
sbb
mov
xor
jbe
xor
jmp
xchg
mul
xor
mov
dec
test
xor
daa
cwtl
adc
cmp
mov
push
adc
inc
xor
cmp
pop
jnp
jp
sub
cmpsb
test
xchg
aam
mov
iret
ss
sub
test
dec
ret
test
pop
fs
add
jbe
cs
jl
aad
ja
out
bound
mov
push
sysret
ds
xchg
mov
aaa
fwait
sbbl
fs
push
pop
je
push
dec
xchg
mov
out
xchg
or
cmp
int3
out
ds
int
outsl
push
sub
jg
pop
mov
arpl
adc
das
leave
sub
sbb
andl
leave
push
stos
pop
pop
sbb
out
repnz
jno
cli
int
and
sub
mov
jbe
clc
popf
dec
mov
inc
stos
mov
or
jle
or
sahf
xchg
jge
clc
pop
aad
cmpsb
mov
std
jno
mov
add
test
mov
and
not
sti
dec
rcl
fneni(8087
mov
inc
negl
mov
mov
and
jl
mov
mov
add
scas
call
mov
ja
inc
mov
xor
push
sub
movnti
cmp
xchg
dec
pop
jno
nop
je
pop
push
rorl
cld
and
jns
sub
xchg
push
or
mov
loope
xchg
pop
imul
push
mov
mov
cmp
jne
xchg
and
loop
rolb
and
cmpsl
inc
hlt
aas
cmpsl
pushf
aam
inc
scas
lods
mov
or
std
js
arpl
sbb
xorb
and
xor
jae
idivl
cmp
cmpsb
pop
jne
movsl
ret
std
imul
sub
rorl
movsl
test
popa
adc
or
pop
adc
push
or
mull
or
repnz
pop
repnz
jmp
xchg
nop
add
test
cmp
push
push
rorb
and
push
or
rcr
jmp
shl
jno
lahf
ret
aad
lods
xchg
je
fcompl
fs
cmpsl
push
stos
inc
dec
gs
subl
orb
jge
push
sub
push
dec
mov
addr16
xor
cmp
loope
sbb
fsubl
lock
xchg
xlat
pop
xchg
add
fwait
mov
popl
test
xchg
call
mov
mov
mov
push
dec
stos
scas
scas
stos
pop
cld
mov
faddp
cmpsb
adc
lcall
dec
lahf
inc
jle
and
jg
adc
aad
bound
out
imul
push
or
jnp
mov
jbe
aas
loope
or
xchg
sub
fwait
rorl
sub
enter
pop
lahf
into
outsb
movmskps
jmp
cmc
pop
loopne
push
add
aad
lret
mov
pushf
gs
mov
addr16
dec
jb
es
jge
in
or
lret
add
and
mov
cwtl
div
test
flds
sub
adc
or
jns
repnz
sbb
loopne
sub
mov
cli
shrl
jge
rorl
cld
fsubrs
out
sub
aad
push
test
jl
inc
add
fwait
ds
fdivrs
loope
std
fstpl
mov
loope
and
cld
push
mov
push
sub
loope
pop
jb
loopne
pop
pop
mov
ret
inc
push
add
sub
std
xor
outsb
shll
jns
push
mov
fstl
rorb
inc
fsubl
mov
lock
push
dec
outsl
stc
xlat
fidivrs
and
js
dec
push
repnz
dec
jb
into
adc
mov
inc
sti
jl
pop
xchg
stos
xchg
movsl
mov
je
xchg
iret
ret
mov
in
insb
scas
mov
pop
lret
clc
dec
sahf
sarb
aas
xchg
jae
mov
lock
mov
gs
adc
lret
mov
inc
jp
push
or
pop
sahf
seto
mov
mov
inc
cld
fwait
xchg
sub
ret
add
jle
cld
xchg
scas
cmp
aas
movsl
mov
push
ret
sbb
add
shll
fsubrl
fsubs
lock
add
sbb
stos
xchg
loope
xor
mov
orl
add
xchg
into
cmp
mov
pop
nop
add
xchg
loop,pn
jae
cs
shr
loopne
cs
mov
jle
push
fnsave
jg
cltd
js
or
xchg
ret
xchg
pushf
sbb
mov
iret
lds
fldcw
inc
xorl
inc
mov
sub
jge
pop
xchg
push
pop
pop
cmpsl
dec
sbb
inc
inc
mov
aam
xchg
xor
enter
pop
mov
stos
cmp
ret
and
push
lret
jmp
icebp
shrb
add
shr
sbbl
fstpl
adc
insb
lret
add
and
xor
push
jg
in
lods
ret
adc
add
inc
sub
mov
pop
inc
xchg
ja
mov
fists
and
cmp
inc
test
and
jb
mov
in
and
test
sub
movsb
or
xor
lret
int
lock
sub
cmp
jmp
movsl
cwtl
mov
fistpll
lahf
mov
nop
mov
dec
test
xor
push
add
add
and
notl
and
je
aas
push
cmpl
cs
lods
shlb
sub
xchg
sbb
stc
std
rcrl
repnz
lods
test
pop
dec
inc
cmp
mov
sub
mov
jl
mov
inc
jno
jmp
xchg
and
cmpsl
and
jnp
sub
dec
xchg
cmp
inc
in
cmpsb
or
mov
in
aad
push
adc
addb
inc
add
mov
aam
ds
icebp
sub
cmpsl
pushl
or
in
lock
call
inc
mov
pop
add
lcall
fwait
inc
dec
mov
mov
call
jns
or
sbb
mov
adc
adc
mov
lds
rcl
data16
outsl
icebp
sbb
xchg
mov
mov
aam
in
pop
mov
es
iret
rclb
cmp
inc
cmp
das
push
orb
inc
pop
lods
icebp
ljmp
outsl
add
insl
push
jge
sbb
das
out
scas
mov
lahf
ficomps
arpl
out
popa
jbe
lods
lea
outsb
fbstp
cmp
loopne
push
sarb
inc
inc
out
out
mov
dec
cmpb
cld
rol
adc
outsb
push
pop
je
int3
fidivrs
icebp
mov
sarl
add
cltd
imul
insb
hlt
leave
mov
or
arpl
xchg
mov
sbbb
sbb
adcl
xchg
movsl
mov
mov
imul
pop
add
into
or
and
cmp
js
cmc
je
cltd
mov
cltd
mov
clc
xor
out
xchg
or
or
xchg
sbb
ret
out
sub
scas
inc
adc
ljmp
lods
es
mov
sbb
and
inc
sub
ja
pushf
cltd
je
adc
inc
in
pop
sub
pop
xor
bound
mov
sub
int3
sub
dec
test
xor
add
push
mov
add
push
sub
mov
cli
xlat
add
adc
xor
test
out
es
shlb
fdivl
ret
fnstenv
js
xor
icebp
fbld
mov
push
pusha
icebp
sarb
pop
insb
add
enter
cs
loop
or
sub
pop
aaa
mov
push
out
push
lock
filds
mov
test
lret
imul
dec
lahf
shll
les
push
inc
test
pop
mov
mov
xchg
ficomps
mov
xorb
sbb
mov
adc
repz
je
aaa
and
sub
push
stc
xchg
push
repnz
scas
mov
xchg
adc
cmpsl
cli
dec
add
mov
fs
imul
test
push
popa
ficoms
fnstcw
add
mov
std
mov
insb
movsb
stos
mov
pushf
mov
pop
jb
sbb
xor
and
in
mov
sub
dec
cmp
dec
das
pop
cwtl
repz
addl
dec
jg
pop
sbb
mov
int3
inc
aas
dec
pop
iret
push
ds
jae
sti
pop
sbb
jb
and
push
leave
fsubl
push
push
fst
fcompl
or
mov
mov
jb
enter
je
pop
adc
add
xor
pushf
iret
out
fwait
imul
imul
cwtl
insl
dec
push
and
or
cli
and
ds
sub
fldenv
mov
xchg
xorl
add
les
cmp
imul
ss
sub
popf
scas
movsl
cmp
adc
dec
sbb
or
insb
jae
ret
ljmp
loope
jp
or
dec
add
push
lods
mov
emms
cli
out
iret
mov
and
ds
mov
shr
and
mov
xchg
roll
lahf
or
jle
movsb
mov
out
into
jge
imul
repz
or
xor
ret
push
jb
pop
ds
daa
dec
test
movsb
mov
leave
into
push
and
jge
and
cmpsl
push
or
aad
mov
out
xchg
and
dec
xchg
loop
mov
jmp
movsl
or
lods
out
int
cmpb
xchg
mov
xchg
loop
frstor
cld
add
jbe
push
mov
push
icebp
pop
shrl
jb
xchg
add
pop
add
pop
shl
daa
xchg
in
mov
cmp
mov
add
cwtl
mov
call
fwait
rorb
mov
or
inc
mov
dec
subb
sti
pop
mov
dec
jne
jb
repz
pop
mov
addr16
cmpsb
ljmp
shrl
aam
aaa
mov
and
dec
push
jne
rclb
xchg
sub
push
std
lods
sti
in
pop
js
add
or
add
sti
lcall
cmp
fs
outsl
adc
dec
dec
popa
and
adc
ljmp
lcall
adc
xor
lcall
mov
push
mov
cmp
jmp
test
sbb
push
loopne
test
outsl
and
cmc
repz
mov
je
mov
ficoms
mov
stos
inc
or
push
sub
fidivl
push
or
pop
mov
mov
mov
out
cmp
and
ss
rcrb
xchg
repz
fucom
jnp
inc
scas
out
imul
jns
jp
leave
cltd
test
mov
call
rcll
repz
inc
in
pop
lcall
xchg
pop
adc
add
lahf
pop
loopne
push
enter
cmp
flds
pop
mov
repz
inc
mov
lahf
pop
in
cmpsb
and
inc
xor
pop
dec
mov
push
and
fstp
dec
in
fstps
rcl
xlat
sbb
sahf
std
xor
inc
inc
add
add
mov
cwtl
hlt
lods
jns
std
mov
sbb
add
aam
mov
or
xchg
sub
dec
dec
xchg
mov
ljmp
in
add
fiadds
subl
jmp
ja
pop
popa
mov
and
popa
xchg
add
mov
jmp
xlat
outsl
jp
xor
inc
in
out
mov
mov
mov
and
xor
cmp
inc
mov
pop
and
enter
inc
inc
cld
pop
std
fwait
in
and
cwtl
adc
mov
fstpt
mov
xor
lock
out
sbb
add
ljmp
pcmpgtd
mov
mov
nop
shlb
dec
pop
or
sub
je
es
xchg
cltd
lds
outsb
pop
dec
subw
inc
push
mov
cs
xchg
incb
not
cmpb
pop
pusha
sbb
loopne
ret
push
and
nop
sub
jnp
outsb
fcoml
push
mov
pop
insl
jle
mov
sbb
sbb
je
test
je
mov
mov
dec
loopne
insl
in
fwait
lods
adc
push
shrb
adc
clc
out
jno
pop
mov
mov
dec
or
xlat
sub
test
and
adc
stos
push
sbb
xor
cmpsl
jg
push
add
scas
ret
sub
push
clc
movsb
and
gs
jl
shlb
flds
icebp
loop
popa
jmp
xor
in
dec
fs
jne
aam
lods
dec
std
dec
jp
in
es
adc
pop
lcall
cmp
xor
movsb
nop
pop
lahf
sbb
divb
xchg
pop
jg
leave
adc
lret
mov
ljmp
mov
insl
fisttpl
lock
sbb
xor
ja
pop
sub
arpl
repz
int3
push
ss
pop
dec
mov
jge
push
aaa
mov
xor
xchg
jo
mov
and
std
loopne
cld
in
cwtl
inc
ss
ljmp
push
xchg
inc
or
aad
push
cmpsb
inc
xor
mov
xchg
sahf
pusha
fldt
rcrl
out
fisubrs
out
mov
mov
stos
cmp
das
xchg
stc
lds
inc
xchg
imul
and
mov
xchg
shlb
mov
leave
test
xchg
inc
mov
push
dec
in
fidivs
add
xchg
imul
cmp
lret
cld
or
pop
incl
mov
aad
and
mov
push
clc
pop
fs
scas
sub
push
jo
inc
cmpsl
mov
xor
add
stos
xchg
popf
outsl
xor
mov
add
cs
add
cld
mov
push
dec
leave
scas
jge
imul
fstpt
stos
add
das
mov
jno
xor
movsb
xor
aam
roll
nop
int
mov
in
push
nop
mov
call
mov
inc
out
repnz
mov
sub
xor
inc
mov
fimull
das
hlt
mov
mov
jmp
xor
adc
or
in
jmp
cltd
jo
xchg
jbe
mov
hlt
pop
movsb
imul
mov
lret
cmp
cmc
inc
leave
inc
outsl
sub
xchg
pcmpgtw
dec
jb
adc
xlat
cli
dec
pop
sarb
mov
xor
sbb
xchg
cwtl
fistpll
ds
xchg
and
dec
pop
jns
mov
and
adc
inc
cmp
arpl
sub
mov
mov
lock
mov
ret
mov
js
mov
addr16
pop
fdivrs
or
movl
lea
cmp
insb
cmp
push
dec
test
sbb
stc
add
xchg
add
jns
and
xor
jns
das
insl
dec
ret
add
add
imul
xor
ds
pop
dec
ljmp
or
repz
hlt
dec
dec
leave
sub
aad
and
mov
insl
jns
xor
test
test
testl
insl
mov
mov
js
add
cmovbe
sub
cli
mov
outsb
lahf
and
xchg
cltd
mov
xchg
insl
push
fcmovu
lret
enter
rolb
push
cmp
sub
adc
mov
mov
rolb
push
cmpsl
mov
mov
mulb
ljmp
outsl
cli
inc
xchg
std
mov
lret
pop
stc
push
cmp
mov
dec
cmp
dec
or
je
mov
das
inc
push
jae
orps
and
xlat
xor
test
xor
xor
mov
xor
push
imulb
adc
pop
or
lret
pop
call
sbb
add
jae
mov
sbbl
dec
test
mov
test
or
mov
repz
ds
and
or
xor
xchg
adc
insb
in
jl
frstor
dec
lods
arpl
mov
sub
movsb
jl
fs
and
sub
andb
xor
xchg
imulb
je
or
or
aad
xor
jae
push
dec
xor
shll
mov
fwait
pop
cmpsb
sbb
lret
int
sub
add
mov
xchg
pop
out
shrb
pop
dec
push
push
imul
and
xor
push
popf
cmp
fsubrl
dec
push
enter
les
sbb
outsb
mov
test
add
push
add
test
fnstenv
push
sbb
imul
pop
and
mov
mov
out
mov
jecxz
xchg
mov
or
cmpsl
ret
cltd
repz
fnstcw
push
xor
or
cmp
pop
mov
mov
and
cwtl
test
int3
lea
dec
push
fidivrs
xor
push
bound
insb
xor
stos
sarb
push
mov
pop
add
mov
leave
mov
std
jg
pop
mov
mov
push
out
leave
scas
movsl
in
nop
add
nop
fs
jns
jge
lret
test
push
xor
xor
movsb
push
lahf
scas
mov
std
adc
add
mov
lahf
call
and
add
or
test
dec
shll
jle
incl
arpl
sub
dec
xchg
arpl
xchg
bound
xor
imulb
dec
mov
mov
sub
mov
adc
sbb
pushf
lock
addr16
cmp
cltd
jp
and
out
jo
es
mov
and
ds
rcll
pusha
test
jge
dec
outsb
in
insb
xchg
inc
out
inc
xchg
mov
lock
cmp
fwait
enter
dec
mov
dec
push
pop
cmp
test
mov
mov
jo
lret
sbb
stc
xor
and
jg
aam
dec
and
arpl
push
jns
movsl
rolb
add
pop
mov
or
in
xchg
and
add
inc
lahf
fimull
mov
cmp
fmull
push
insb
mov
sub
into
xor
sub
jae
icebp
ret
xchg
adc
sti
std
mov
and
jb
inc
fbld
test
sbb
push
sbb
in
sbb
mov
xlat
cli
dec
fildll
lds
cmp
out
mov
add
insb
test
loope
push
xor
sbb
repz
gs
dec
jecxz
push
jp
cmp
dec
cltd
nop
repz
ja
add
scas
jae
mov
ret
sub
leave
mov
sbb
fmull
jns
mov
jmp
fnstsw
jge
mov
lock
mov
push
lahf
mov
sub
or
scas
pop
pusha
leave
ficomps
rcrb
and
loope
mov
loope
jne
jno
sbb
test
test
cmp
ret
or
jmp
mov
ror
mov
lcall
adc
mov
sub
gs
cmp
sbb
xor
mov
sub
dec
cmpsb
test
ret
insb
add
mov
rcl
sti
movb
daa
aam
into
mov
sub
imul
push
pop
je
add
inc
adc
sahf
mov
test
mul
jno
sbbl
bnd
sub
cmp
jno
inc
rcrb
adc
xor
mov
sub
fstps
inc
int3
lea
aaa
inc
or
and
int3
fdivrl
mov
fldcw
je
into
repnz
cmc
cmpsl
mov
add
dec
loop
ja
out
scas
daa
xchg
push
stos
mov
lahf
iret
ficomps
test
ss
or
jl
loop
push
ljmp
ds
cli
idiv
cmp
pop
lahf
push
icebp
push
movsb
ror
jp
popf
push
dec
scas
pop
mov
dec
sub
mov
movsb
jle
mov
lahf
test
dec
jnp
arpl
lods
or
mov
or
push
push
jg
andb
into
xor
leave
sahf
jge
xor
in
mov
push
mov
push
sbb
das
add
in
std
jp
testb
mov
push
pop
push
bound
popf
ja
adc
push
sub
cmpsb
es
mov
push
outsl
pop
jb
jp
mov
adc
push
sbb
aas
pop
adc
or
pop
les
outsb
adc
in
push
cmp
aaa
cmp
mov
fnstcw
pusha
in
icebp
sbb
push
nop
test
xor
xchg
jbe
ret
xchg
lds
cld
cmp
enter
out
das
aad
loopne
lods
fiaddl
mov
adc
int
scas
sub
and
loop
add
pop
outsb
xchg
out
aaa
push
outsb
insl
add
jl
stos
inc
inc
stos
sub
xbegin
fsts
mov
pushaw
adc
inc
jl
cmp
push
movsb
pusha
out
mov
pop
popf
flds
sub
add
cmp
leave
clc
dec
int
fdivrl
iret
std
hlt
sbb
ja
jno
movsb
lcall
movsb
jne
jo
lret
jle
mov
imul
mov
hlt
cmp
or
insb
jge
inc
add
jnp
pop
xchg
cmp
mov
push
mov
xchg
je
mov
cmpsl
push
insl
dec
sbbb
out
movsb
push
sbb
testl
dec
das
mulb
sti
pop
test
pushf
mov
sub
fdecstp
hlt
mov
jmp
jnp
inc
movsb
xor
iret
scas
xchg
add
out
in
sbb
push
outsl
repnz
fcmovne
adc
lock
int3
pop
mov
inc
inc
mov
sub
cwtl
pop
daa
bound
and
fsubs
lret
cs
and
jae
push
xchg
jne
mov
fwait
popl
mov
sbbl
hlt
loop
aad
and
cld
cmp
in
sbb
decb
sbb
xlat
aad
sub
xor
shrl
fdivrs
sarl
inc
nop
out
cmp
in
movsl
cmp
inc
add
shlb
test
stc
or
sub
in
push
inc
mov
jne
lret
aad
jle
push
ss
add
sti
mov
movsl
adc
shrb
std
loopne
xchg
test
je
jae
jno
stos
jns
and
push
jbe
stos
ljmp
rolb
pop
fstps
xchg
popl
jl
or
adc
lcall
lods
mov
shrb
dec
inc
cs
insl
shl
pop
add
sbb
paddusb
sub
imul
xchg
mov
rorb
add
lea
lds
xorb
or
dec
jp
adc
cli
arpl
sbb
lret
ret
or
insl
dec
fsubrs
loop
adc
mov
pop
mov
into
sub
and
sar
xor
daa
addr16
out
add
push
scas
inc
fisubrl
clc
adc
movb
test
mov
dec
pop
popa
jno
add
mov
test
cmpsl
xor
sbb
pushf
and
rolb
add
stc
mov
pop
inc
mov
xchg
or
xor
jbe
pop
mov
pop
movb
loop
mov
out
dec
in
pusha
sub
cltd
xchg
or
icebp
pop
mov
dec
dec
jnp
fiaddl
lods
std
rcr
xchg
pop
sub
andl
call
jae
and
cmp
addr16
pushf
xor
lds
mov
insl
jg
inc
mov
stc
pop
fs
dec
stc
xchg
push
ficomps
and
int
imul
aas
sbb
aaa
and
push
sub
pusha
xlat
int3
sbb
adc
jmp
into
jnp
dec
jno
mov
jno
jo
xor
imul
and
jl
mov
adc
scas
jbe
das
mov
fwait
adc
neg
cmp
jns
popa
out
jne
popa
lahf
lea
std
xor
dec
es
pop
les
jo
adc
mov
fimull
into
jno
pop
cli
mov
fisttpll
mov
mov
jo
loopne
lods
into
push
int3
ret
loope
sbb
shl
std
mov
pushf
insl
xchg
pop
push
fcoml
xor
popa
les
sub
test
cs
std
fsubrl
icebp
bnd
sarl
cmp
mov
mov
pop
push
mov
adc
mov
test
and
daa
in
xchg
aas
cltd
scas
sub
mov
sub
cmpsb
int3
mov
dec
xchg
out
lods
and
shl
jns
pop
cwtl
cmp
fs
mov
jae
push
xor
cmp
xchg
rcrl
pusha
cmp
sub
add
int
lahf
sbb
cli
in
or
mov
mov
stos
in
cs
inc
into
inc
fisubs
cwtl
xchg
sahf
xor
dec
mov
mov
scas
stc
xor
fdivrs
in
imul
jnp
sbb
sub
repz
ja
rorb
popf
pop
mov
in
xor
sti
mov
in
out
jmp
repz
jne
pop
and
dec
jno
pop
and
cmpsl
inc
xorb
xor
leave
ja
leave
adc
add
mov
and
sbb
out
sub
cs
cli
and
xor
test
pushf
cltd
roll
push
add
xchg
in
xor
out
std
push
xlat
inc
shll
test
sub
and
sub
add
loopne
push
push
popa
mov
pusha
jb
sti
cmc
xor
mov
movsb
ss
movsb
aaa
push
ret
popf
mov
mov
pop
jmp
add
dec
insb
jmp
sub
sbb
add
xchg
lcall
or
les
fdivrs
mov
adc
leave
pop
xchg
cld
addl
adcl
xlat
dec
push
fisubrl
sub
cmpsl
jbe
xchg
aaa
jmp
xor
je
aas
movsl
out
fldenv
inc
jmp
adc
aam
pop
mov
ja
out
jnp
ljmp
dec
stc
js
pop
cmc
lahf
jne
iret
incl
fnstsw
test
push
push
rcl
sbb
negl
icebp
mov
push
sahf
sbbb
frstor
pushf
rolb
lret
cmpsb
dec
lahf
push
out
or
jmp
leave
inc
xlat
jne
mov
mov
sub
test
xor
mov
pop
inc
daa
inc
xorb
inc
leave
mov
test
int3
jle
pop
jmp
or
cwtl
and
fldt
lods
push
mov
pop
pop
mov
enter
push
ficoms
fwait
aad
adc
sahf
enter
xchg
jp
jg
aas
jnp
mov
loopne
jmp
popa
adc
addr16
push
add
cmp
inc
addl
stc
jae
lcall
or
mov
inc
jnp
sarb
es
dec
movsb
pop
movsl
jl
mov
lods
xchg
repnz
pop
loope
sub
xchg
cld
mov
cmp
xchg
mov
mov
rorb
cmove
jmp
std
mov
pop
cmp
clc
add
mov
xchg
and
leave
mov
cmp
js
call
or
jb
and
cmp
in
stos
out
dec
dec
out
subb
inc
jg
sbb
xchg
scas
push
sbb
sbb
inc
or
cmp
lock
inc
int
stos
out
dec
mov
out
gs
fmul
std
xlat
add
mov
inc
mov
mov
fwait
addb
mov
and
ds
shrl
jmp
lea
inc
aad
les
cmp
fisubrs
cmp
inc
and
and
call
adc
pop
push
popa
jle
push
dec
mov
mov
push
sbb
cld
or
adc
or
lret
shrb
pop
stc
daa
out
mov
dec
push
sbb
enter
inc
mov
push
push
and
sub
stc
jmp
add
daa
push
iret
lock
and
push
addl
out
sti
push
mov
pop
xor
adcb
insl
in
jo
gs
push
test
lds
popa
in
arpl
lds
popf
ss
movsl
sbb
loop
mov
jmp
add
push
pop
and
push
call
pop
arpl
mov
stc
cmp
xor
aad
je
or
sarb
cmc
jne
scas
mov
subl
dec
inc
sub
sub
push
mov
data16
iret
imul
dec
ret
mov
es
pusha
mov
push
add
orl
sub
fsubs
sub
jg,pn
data16
cmp
and
adc
mov
fsubrl
jnp
push
ds
fbstp
inc
xchg
xchg
xchg
jnp
mov
mov
cwtl
ret
sahf
push
fsts
push
jmp
and
xlat
sbb
cmp
mov
add
daa
cmpsl
scas
loopne
sbb
mov
xor
fwait
test
mov
faddl
xchg
jbe
loop
scas
pusha
cmp
loope
xchg
push
dec
cmp
inc
push
ds
adc
mov
stos
imul
push
sub
mov
pop
fcompl
sub
push
pop
push
jp
cmp
jl
xchg
ret
rcrl
push
test
rcr
or
out
cmc
sub
outsl
jmp
orl
mov
mov
sub
scas
in
pop
popa
xchg
adcl
cmp
gs
test
sbb
and
pop
test
jmp
inc
cmp
mov
clc
jb
and
loope
dec
loope
xlat
sbb
mov
xor
or
sarb
test
mov
cmp
fdivrl
mov
or
mov
dec
pop
jecxz
jbe
out
mov
fcom
mov
sahf
sbbb
int
into
or
inc
movsb
sub
inc
lret
divb
gs
xchg
cltd
int3
inc
jecxz
xor
adc
mov
std
stos
negl
or
mov
xor
inc
imul
xchg
in
pop
insb
lock
xlat
call
daa
cmpl
add
sbb
fldenv
bnd
lods
mov
lret
add
cltd
clc
lds
test
sub
sub
cmp
mov
inc
jnp
mov
test
or
arpl
mov
ret
mov
cwtl
xor
pop
nop
or
pushf
xchg
cltd
out
mov
xor
adc
jns
int
ds
aam
pop
jae
mov
xchg
mov
loopne
das
pop
jae
xor
out
add
add
and
movsb
aam
dec
mov
inc
or
sbb
jae
dec
mov
iret
insl
bound
mov
daa
mov
mov
add
xchg
jae
int3
popf
cltd
or
cmc
or
fisttps
adc
cmp
push
into
jno
inc
inc
pop
rolb
ja
mov
xchg
cmc
inc
jbe
mov
or
in
dec
test
mov
outsl
push
movl
sub
cs
rol
jl
push
dec
dec
daa
lock
clc
mov
addr16
dec
mov
xchg
inc
mov
or
jbe
addr16
dec
ret
imul
scas
xchg
jno
ret
push
sub
xor
ss
out
jmp
lea
in
xchg
daa
cwtl
mov
cs
jnp
pop
pop
lret
push
xchg
fistps
and
lock
pop
clc
xlat
setnp
push
cltd
dec
int
inc
dec
out
push
popa
inc
inc
bound
jmp
mov
xchg
or
xlat
sbb
pusha
inc
jae
or
sti
push
lea
ret
mov
cs
pop
sub
dec
divb
add
cmp
sub
inc
loopne
gs
enter
outsl
inc
xlat
jb
imul
nop
xchg
xor
inc
jl
push
aad
shl
rclb
dec
aaa
inc
mov
xor
or
xlat
jg
into
sbb
scas
loop
xchg
lods
insl
dec
into
and
shrl
and
inc
push
jmp
fstpt
mov
mov
cld
mov
imul
xor
cmpl
or
cwtl
mov
notl
xchg
jbe
jecxz
mov
cmp
scas
sub
or
xchg
ret
mov
add
jle
mov
cmp
sbb
mov
in
enter
adcl
inc
ja
sti
mov
call
and
sbb
pop
pop
mov
out
xor
dec
clc
sar
mov
popa
loop
scas
bound
dec
xchg
scas
jb
movsl
and
call
lcall
call
or
mov
jb
bnd
xor
push
jle
gs
or
in
sub
jae
inc
popf
sar
adc
ret
das
push
sbb
int3
mov
jb
outsb
and
mov
popf
testb
cmc
es
xchg
xchg
aad
out
es
or
push
jb
stc
pop
cmpsl
loop
inc
mov
inc
add
mov
adc
sbb
mov
pop
add
xor
mov
sbbl
jno
and
mov
imul
dec
push
mov
in
les
pop
std
and
ss
fcompl
repz
push
xchg
lcall
lret
cmp
lods
test
aad
js
repz
mov
mov
xchg
data16
les
ss
shlb
sbb
adc
sbb
outsb
loop
dec
imul
mov
incl
cmc
out
or
lods
dec
cmp
bound
pop
pop
stos
inc
mov
imul
pop
mov
push
cmp
sbb
lds
push
test
int3
inc
mov
out
mov
test
adc
jecxz
mov
out
xorl
repnz
rcr
ret
xor
insb
cmp
cs
jno
lahf
out
inc
mov
out
jl
test
lahf
jne
inc
inc
mov
and
mov
jge
push
xorl
mov
out
add
out
in
cmpsl
jne
mov
cld
push
pop
dec
test
in
inc
cltd
push
ffree
cmp
inc
push
mov
push
inc
outsb
ljmp
and
inc
dec
xchg
cmp
mov
push
xchg
push
jl
adc
jns
push
shl
pop
xorb
cmp
psrlw
fprem
insb
mov
sub
mov
in
dec
hlt
call
fwait
add
xchg
scas
xor
lret
aaa
xchg
hlt
movsb
mov
lret
mov
sbb
cld
stc
adc
cmp
ja
das
stc
cmp
and
negl
call
sbb
inc
push
sbb
popa
sbb
sub
fildll
loopne
dec
dec
dec
inc
and
jbe
leave
mov
jecxz
mov
imul
pop
call
mov
popa
push
enter
xchg
mov
xor
and
dec
cmpsl
insb
scas
xchg
and
hlt
mov
mov
inc
popa
test
cltd
lods
test
cmp
sbbl
pusha
inc
outsl
mov
inc
adc
test
jg
lret
xor
sub
xor
cmpsl
andb
jmp
arpl
xor
add
xchg
rep
iret
inc
aas
mov
jno
insb
sbb
mov
movsl
cmp
or
jp
pop
jns
cli
adc
pop
dec
movsb
pop
push
gs
push
add
loop
pop
adc
push
into
cwtl
lods
xchg
int3
or
sti
ss
jo
inc
mov
popf
icebp
shll
or
mov
add
cmpsb
add
jns
push
jne
insl
mov
popa
ret
sbb
out
mov
xlat
and
test
adc
lret
cs
inc
inc
int3
out
jne
jge
test
out
push
repnz
push
test
ljmp
fistpll
mov
sbb
and
xor
stc
xor
stos
push
cmpsl
sbb
mov
pop
pop
jno
aaa
jecxz
sbb
mov
addr16
sbb
lods
sti
push
pop
daa
in
ret
or
testl
ficoms
xchg
rcll
sub
mov
push
xor
sub
and
iret
les
in
xchg
clc
dec
xor
mov
xchg
sti
lods
add
cli
sbb
les
movsb
mov
dec
jmp
xlat
shl
dec
mov
mov
test
or
xor
in
or
loopne
int3
mov
rcrl
jae
test
sub
add
enter
xor
ficomps
mov
xor
mov
mov
lret
rcr
ds
and
repnz
jecxz,pn
adc
sub
mov
adc
or
ret
dec
int3
jb
sub
pusha
xchg
dec
sbb
mov
sbb
adc
push
mov
lods
enter
xor
into
and
lea
sbb
sub
cld
std
ret
mov
xchg
icebp
xor
sbb
fwait
xor
clc
sub
inc
out
pop
adc
push
xor
dec
negb
jns
aaa
out
lods
or
and
mov
int3
dec
mov
fistpll
inc
xor
or
fisttps
adc
cwtl
jmp
orl
pop
pop
cmp
adc
adc
jmp
stos
adc
add
ja
mov
push
ljmp
xchg
insl
xchg
popf
hlt
mov
push
cmp
arpl
dec
outsl
fstl
scas
scas
jnp
in
jp
jle
mov
shl
nop/reserved
and
inc
cmc
or
or
sti
push
popa
jno
adc
mov
xor
fwait
ljmp
mov
popa
add
mov
pop
jge
icebp
mov
xchg
mov
and
and
or
ret
and
fbld
inc
into
mov
sub
dec
dec
fsubr
mov
aad
stos
sub
xor
lods
xchg
ret
mov
inc
je
enter
int
jp
lock
movsl
ret
movsl
mov
cmpsb
imul
add
imull
ds
pop
je
or
inc
dec
xchg
into
push
xor
mov
cmp
mov
fdivrs
inc
rcr
inc
pusha
sub
call
movsl
pop
lea
filds
cltd
dec
sbbl
loopne
shlb
bound
andl
jnp
add
lcall
aaa
mov
lea
imul
inc
mov
outsb
je
mov
in
pop
or
lds
scas
mov
jmp
mov
rcrb
inc
shl
movsl
jmp
test
adc
outsb
fdiv
aad
ja
add
lods
xor
adc
cmp
loopne
loop
in
in
cmp
cmp
std
jmp
pop
fsubrl
push
xchg
mov
push
das
or
stos
aas
pop
xlat
mov
jecxz
popf
shl
aaa
xor
daa
imul
fsubl
jle
into
xchg
test
mov
xchg
sbb
mov
dec
push
test
mov
int
stos
inc
inc
in
sbb
fistpl
iret
cwtl
mov
sbb
cmpsl
jg
loopne
in
idivl
mov
mov
or
lcall
xchg
jns
inc
dec
cmpsb
xchg
jl
inc
xor
xchg
adc
add
dec
js
jbe
cmp
cmp
mov
arpl
and
sub
dec
pop
push
pop
dec
loop
lea
sbb
jg
sub
test
sbb
cmpsl
mov
mov
sar
ja
push
sub
aad
pop
jg
xor
and
arpl
fsub
das
push
dec
dec
imul
mov
mov
ljmp
xor
sub
xor
cwtl
lds
clc
push
popa
lret
xchg
clc
mov
cmpsb
mov
lret
test
adc
sub
into
dec
push
jbe
iret
repnz
notl
mov
xchg
pop
cmpsb
mov
mov
test
mov
cltd
mov
mov
cmp
das
mov
xor
test
or
lods
bound
dec
icebp
ds
aaa
repnz
loop
lret
push
cmp
push
and
mov
adc
mov
or
popf
ret
shlb
or
test
push
shll
push
push
mov
inc
repz
loopne
ss
xor
loope
cs
aaa
mov
faddp
pop
arpl
add
lods
scas
mov
pop
pusha
mov
ds
and
cli
in
daa
add
mov
push
int
mov
cmp
std
shrl
jne
cmpsl
jns
dec
int
movsb
repz
jmp
mov
cmp
lahf
stos
dec
sbb
sbb
and
sti
push
out
pop
add
inc
out
xor
or
outsb
das
and
ljmp
imul
push
les
fwait
aas
push
mov
sbbl
sbb
fincstp
pop
icebp
outsb
aam
fsincos
jns
push
push
cmp
rep
add
movsb
fsubrs
adc
xor
mov
lret
xor
pushf
or
push
sub
xlat
out
mov
aam
lcall
and
pusha
or
sbb
ds
mov
jmp
mov
je
lcall
ljmp
outsl
dec
or
adcb
push
xor
dec
mov
sub
xor
xchg
lret
push
inc
out
xchg
mov
movsl
ret
stc
sbb
leave
jns
mov
pop
add
addb
lods
mov
cwtl
cmpsb
xchg
rcrl
aam
icebp
and
jo
in
xchg
mov
and
push
sti
pop
mov
aas
jb
loope
lods
imul
lcall
fsubs
push
vsqrtsd
bound
repz
ljmp
movsl
or
cmp
gs
fld
sub
adc
ljmp
jecxz
nop
sbb
jle
pop
adc
sbb
mov
lods
mov
aaa
mov
int
mov
xor
cmc
or
xor
xor
lcall
pop
ret
push
sahf
dec
fs
xchg
repnz
jg
icebp
bound
pop
mov
mov
movsl
inc
aas
mov
data16
fstps
stos
fldt
ret
repnz
stos
inc
sbb
xor
gs
insb
inc
cltd
jns
scas
mov
adc
inc
mov
aam
push
clc
dec
dec
aam
mov
leave
jnp
pop
mov
push
sub
sbb
fistpl
test
lret
lds
push
mov
fimuls
jl
loopne
cld
lcall
jg
push
fwait
sub
mov
add
test
sub
mov
out
cmp
fwait
ja
jmp
mov
inc
in
push
leave
mov
fsubrp
movsb
cli
jnp
mov
xchg
mov
loop
or
shl
pop
or
xchg
sub
pop
pop
sbb
out
mov
ss
int
dec
mov
lret
push
pop
mov
push
sar
inc
ds
sub
in
add
out
mov
icebp
adc
push
stos
pushf
test
or
test
push
in
sub
mov
leave
inc
iret
push
mov
dec
dec
pop
pop
sbb
mov
push
test
add
cltd
cmp
in
mov
imul
sub
rorb
scas
es
insb
cltd
cmpsb
push
dec
push
push
scas
aaa
lds
sub
gs
clc
and
gs
dec
pop
fisubrs
les
xor
outsb
sub
push
addr16
xor
and
test
scas
sub
cmp
les
inc
lahf
subl
jge
sbb
repnz
js
roll
mov
movsl
lahf
lock
xchg
imul
lods
pushf
es
xor
inc
inc
fimull
jbe
adc
loopne
ret
mov
cli
sub
je
jecxz
and
sarl
dec
addr16
push
inc
push
mov
rcrb
xchg
mov
ja
cwtl
pop
pop
mov
adc
std
mov
stos
movsb
fs
in
xor
lcall
push
scas
out
sub
add
pop
mov
sarl
mov
loop
inc
scas
xchg
sbb
jne
sbb
sbbb
sbb
fwait
stos
push
icebp
pushw
pop
push
cmp
in
xchg
xor
cmp
sub
imul
les
push
mov
lret
pop
push
cmp
jnp
shrl
dec
inc
cmp
dec
fst
add
xor
add
and
push
jno
es
jge
pop
popa
jmp
arpl
hlt
mov
add
lea
andl
fldl
jge
mov
adc
pop
mov
hlt
hlt
aas
ss
aam
pop
fsubp
sahf
sub
divl
dec
sbb
adc
or
adc
lret
outsb
iret
cmp
movsl
mov
xchg
xor
pop
out
fistpll
add
mov
popf
into
divl
dec
jmp
xor
jb
mov
roll
stc
mov
push
sti
dec
popf
outsb
in
add
dec
dec
cltd
xchg
hlt
xchg
ret
mull
inc
add
xor
sub
sbb
xchg
hlt
sub
lcall
test
fistpll
je
stos
aaa
jno
xchg
icebp
aaa
fildll
daa
fninit
sbb
pop
jae
in
pop
and
xorb
push
ds
sub
mov
fisubl
les
adc
sahf
push
jnp
add
xor
mov
sti
scas
sbb
sub
outsb
xor
out
cmovl
aaa
into
or
clc
ror
cmp
mov
fmuls
sub
sbb
rcr
mov
push
scas
fucomip
ret
scas
sbb
inc
arpl
pusha
inc
pushf
mov
addb
lock
lea
sbb
jno
mov
ret
outsb
add
xchg
mov
cld
test
ja
lock
rorl
pop
xchg
orb
dec
inc
or
mov
add
or
clc
jl
test
push
xor
cs
lock
mov
pop
loopne
cmp
adc
adc
icebp
jecxz
insb
sbb
sahf
pop
sbb
jg
sti
sub
leave
pop
out
xor
jb
xorb
adc
mov
dec
call
lahf
mov
stc
and
cmc
insl
push
mov
and
push
es
stos
call
cmpsb
mov
dec
push
pop
je
add
jg
dec
pop
cmp
subb
push
mov
scas
xor
popa
shll
arpl
inc
ret
into
add
fisttpl
repnz
ja
dec
dec
sahf
sbb
mov
mov
jo
add
sbb
push
xchg
pop
ret
mov
cwtl
dec
push
cltd
or
adc
sarb
pop
jb
adc
loopne
pop
xor
add
ret
ds
sub
add
mov
lahf
cwtl
push
aam
add
out
es
jmp
lea
push
xorb
jae
out
outsb
ds
mov
scas
mov
xorl
push
dec
and
scas
les
scas
or
or
add
mov
aaa
fildl
out
sub
repz
movl
inc
xor
inc
jno
xlat
xchg
cli
mov
subl
outsb
xchg
adc
ljmp
ja
or
xchg
xacquire
enter
xchg
xor
or
leave
dec
pop
mov
cwtl
pop
icebp
fisubrs
icebp
inc
popf
adc
xor
icebp
dec
jb
mov
mov
or
mov
stos
fimull
jo
sbb
es
mov
movsl
int
rcrb
pop
fstps
cmp
rorl
mov
xchg
movsb
fs
add
cmp
pop
push
xchg
nop
mov
sub
ret
les
gs
xor
jp
popf
jb
scas
sub
and
mov
cmp
adc
call
movsl
xor
and
add
in
sbbb
adc
lds
inc
mov
scas
jbe
jp
pop
int3
insb
push
push
cmpsl
xchg
shlb
in
xchg
jae
je
mov
xchg
shll
pop
es
xchg
loope
xchg
in
shlb
fwait
mov
pop
repnz
xchg
mov
repnz
xor
and
jae
mov
popa
mov
loop
adc
inc
sbb
jmp
add
dec
pop
aas
jns
mov
aas
or
jbe
lret
arpl
lods
sbb
popa
xchg
cs
andl
xor
pop
shll
xchg
outsl
addr16
sub
adc
loop
out
xchg
cmp
mov
pop
push
movl
push
sbb
mov
push
les
subl
out
ret
xlat
inc
outsb
in
ljmp
mov
sub
xchg
imul
insb
gs
or
mov
fs
inc
mov
dec
fnsave
wbinvd
inc
mov
test
push
cmp
in
arpl
add
cmp
or
xchg
mull
dec
fmull
pop
jmp
xlat
sbb
mov
mov
ja
inc
inc
jmp
sub
fcmovnb
adc
and
es
movsb
das
adc
pop
xor
push
fldenv
push
ss
xor
addr16
mov
ficomps
push
xchg
dec
and
dec
sub
ret
mov
testb
mov
adc
insb
popf
push
cwtl
sarb
adc
nop
repnz
sub
lods
cmp
cmp
add
nop
jle
adc
pop
mov
add
or
and
inc
dec
push
pop
xchg
cltd
sub
stos
mov
das
int3
xchg
mov
cli
jecxz
push
pop
inc
inc
mov
pop
out
jle
mov
aas
push
add
or
decb
jmp
xor
cmpsl
add
adc
dec
mov
jnp
mov
out
or
or
shll
xor
and
pop
outsl
out
sbb
jae
and
fstpl
jns
shrl
xchg
mov
jb
cmpsb
dec
jp
and
cli
xor
repnz
sbb
push
cmp
fwait
push
push
jl
push
lcall
dec
fstl
sub
add
push
cld
mov
js
and
pop
gs
lds
pusha
pop
push
pop
gs
jo
pop
test
cs
xchg
out
lret
mov
mov
xor
xor
shl
shrb
add
dec
cmp
cltd
pop
call
loope
jmp
mov
sub
or
inc
shl
pop
aaa
xchg
add
fstps
xchg
jecxz
movsb
sbb
insb
lods
cmp
xor
push
cmp
push
and
dec
mov
mov
rol
xchg
sbb
mov
fistl
adc
in
push
push
hlt
xchg
and
test
or
sub
push
pop
in
pop
xor
aad
pop
ljmp
cmp
sub
lcall
dec
popa
jg
imul
xor
mov
fidivs
andb
pop
std
nop
in
sbb
test
pop
popf
mov
jne
push
aaa
adc
jbe
orb
ret
mov
mov
jmp
xchg
adc
add
fidivs
mov
sahf
jne
insl
xchg
sti
test
adc
and
pop
push
cld
adc
inc
les
xchg
jb
mov
cwtl
pop
jge
fsts
push
outsl
fwait
pop
pop
add
outsl
mov
cmp
clc
enter
cmpsl
cli
mov
pop
fisubrs
cmp
adc
add
insl
jl
inc
shrb
insl
lahf
fidivs
das
mov
add
jne
into
sub
roll
mov
add
jg
sbb
xlat
or
call
mov
inc
daa
adc
pop
or
cmp
pusha
inc
cmp
mov
inc
jle
pushf
add
push
cld
cmp
push
lcall
adcb
ret
ror
iret
cs
mov
mov
ss
ja
xlat
mov
adc
or
pop
pop
in
lcall
mov
rorl
push
dec
mov
fistps
mov
pop
insl
xchg
add
mov
sti
lret
or
js
xor
cli
xchg
aad
sub
outsb
cwtl
rcrb
push
push
mov
popa
push
inc
or
dec
or
cmp
push
leave
mov
mov
fcoms
lea
or
jno
rol
outsl
mov
rclb
lret
mov
test
imul
ds
aaa
scas
jge
jo
scas
out
dec
andb
and
add
xor
jle
jl
fisttpll
sti
mov
pop
xchg
nop
out
enter
mov
std
jmp
sbb
add
jae
call
loop
push
lcall
xor
pusha
mov
adc
ds
push
out
lcall
mov
repnz
sub
das
push
sub
stos
push
or
dec
in
and
xor
jne
cwtl
out
mov
dec
aam
inc
pop
sbb
fmuls
adc
push
push
xlat
jge
arpl
push
jbe
dec
clc
mov
test
negb
daa
mov
stc
xor
in
filds
push
sahf
push
rorb
loop
mov
fisubs
add
jne
leave
popa
sti
mov
fstpt
out
inc
add
cltd
faddl
rolb
incl
lds
cmp
outsl
lods
and
dec
push
pop
std
pop
rcr
adc
mov
pop
fs
sti
mov
in
pop
inc
out
xor
decl
inc
mov
orb
sbb
jno
bound
in
sbb
inc
pmaxub
sub
push
and
lret
ret
lock
inc
cld
add
sbb
test
adc
push
rclb
sbbl
inc
push
cld
call
mov
enter
push
mov
out
adc
sub
dec
enterw
sbb
sbb
lds
sti
es
mov
jmp
arpl
lea
xlat
ret
loopne
test
or
popa
pop
ret
dec
aas
mov
adc
loope
push
test
lcall
dec
mul
ret
les
lock
stos
pop
xchg
test
inc
cmp
rolb
xor
icebp
mov
pusha
adc
sbb
stos
test
push
push
dec
ss
add
and
int
adc
mov
clc
dec
aam
fisttpl
mov
add
adc
shll
ljmp
cmp
mov
insl
inc
push
lods
jne
clc
lret
mov
inc
popw
fcoml
pop
out
add
dec
cmpsl
andl
pop
mov
mov
icebp
lods
mov
adc
add
shlb
xchg
shrl
leave
lret
mov
pop
adcl
filds
lret
aas
and
pop
inc
adc
jmp
mov
flds
sub
sbb
push
sub
push
rcll
jo
int
out
loop
scas
mov
cmp
in
pop
scas
in
sbb
and
or
and
fdivr
adc
pop
push
popf
addb
add
sbb
aaa
jbe
and
repnz
push
icebp
mov
adc
out
jl
or
xor
jl
jbe
push
ss
xor
sbb
and
ret
sbb
lods
mov
dec
sbb
dec
imul
mov
lret
ss
inc
xchg
stos
cmp
mov
hlt
cltd
sahf
sub
fcomps
pause
popa
add
push
pop
jmp
mov
dec
sub
add
pop
xor
xor
sbb
and
fstps
mov
jg
in
hlt
add
pop
scas
xchg
mov
shrl
mov
adc
inc
pause
ret
dec
js
and
fidivs
push
arpl
fmul
fiadds
or
add
test
js
mov
movsl
adc
inc
push
leave
jmp
mov
sub
and
adc
leave
rcll
aas
push
mull
pop
outsl
cli
mov
xchg
cmp
lcall
mov
add
pop
in
xchg
jg
push
repz
call
pop
sub
pop
and
and
mov
or
add
xor
add
inc
mov
jg
ror
stos
sbb
add
ja
pop
xor
xor
lcall
pop
sub
test
mov
xchg
sbb
je
lea
pop
mov
dec
fists
dec
pop
jb
xchg
mul
shl
daa
das
aas
mov
inc
mov
and
cltd
cmp
imul
push
movsl
xchg
jnp
xor
nop
or
ret
cmc
push
lock
lds
xchg
mov
scas
inc
add
aas
insb
cmpsl
mov
mov
inc
sahf
xor
lock
pop
adc
pop
xchg
insl
push
loop
pop
and
xlat
outsb
jmp
lods
mov
cmp
inc
loopne
xchg
out
mov
cwtl
add
out
movsb
mov
mov
popf
clc
out
in
ja
xchg
cmpsb
ficompl
push
pop
stos
mov
xchg
pop
rcrl
xchg
jp
xchg
fisttps
out
jp
and
mov
mov
std
ljmp
sbb
jecxz
add
mov
out
mov
fists
cmp
adc
cwtl
jge
push
xor
ret
push
and
mov
and
popf
jecxz
push
pushf
ret
mov
imul
add
pop
lahf
mov
xor
and
adc
jnp
ljmp
dec
fmuls
sbb
cli
push
dec
cmp
in
mov
dec
fistpll
lcall
rep
sbb
repnz
iret
in
mov
pop
lods
push
fbld
cmp
pop
movsb
inc
xor
dec
inc
stos
sti
fistl
sbb
js
leave
or
ret
call
stos
xlat
loope
fs
out
jno
stos
adc
and
inc
sarb
fidivrs
push
jnp
mov
sub
cmc
data16
pusha
jo
jbe
pop
jmp
cmc
add
sbb
or
push
fnstenv
mov
imulb
xor
pop
repz
addr16
jg
lods
sbb
xor
cmp
lcall
popf
cmp
rclb
outsb
cmp
add
add
adc
mov
mov
sbbl
and
in
mov
sub
aas
push
jp
push
or
movsb
or
xor
push
pop
sahf
dec
movntps
aas
and
push
inc
sub
fdivl
popf
sahf
in
shrl
mov
test
or
adc
shll
push
xlat
lods
xchg
ja
in
jmp
push
outsb
xchg
rcrb
lret
mov
push
sbbl
dec
mov
aad
sbb
pop
sbb
add
fldt
mov
loopne
pop
cltd
arpl
les
ret
mov
fcomip
jge
orl
sbb
push
xchg
push
sbb
push
xchg
mov
repnz
lahf
lret
jl
pop
and
in
xchg
dec
imul
mov
sarl
xchg
dec
test
pop
mov
xor
mov
lret
js
cmp
dec
push
add
push
fcompl
ja
and
jg
lods
push
loopne
imull
dec
cli
aam
or
fcomps
dec
mov
xchg
test
jb
psubsb
cwtl
stos
ss
in
xor
add
mov
cltd
or
es
and
inc
xor
sub
data16
and
mov
or
xor
push
dec
cli
ja
shrl
mov
outsb
or
mov
sbb
sub
adc
inc
pushf
nop
push
sub
or
mov
fisubrs
daa
xchg
dec
mov
scas
and
mov
xlat
pop
and
pop
shrb
sub
ret
adc
fisttpll
imul
inc
loopne
aam
push
mov
mov
popf
mov
mov
xor
fstps
gs
mov
clc
jns
sbb
test
cli
gs
in
cmp
ss
int
cmp
lock
mov
sbb
xor
cmc
or
mov
addr16
cmp
inc
xchg
inc
addr16
shl
aaa
js
xor
lret
test
aas
dec
rcrb
push
ss
sub
mov
xor
hlt
aas
aaa
sti
jno
ret
cmp
lcall
xchg
lock
mov
das
and
push
push
ja
iret
and
jmp
sbb
dec
xchg
data16
sbb
mov
or
je
push
xor
jne
jl
int3
jle
imul
ret
movsl
mov
or
cmc
and
and
call
inc
inc
data16
and
leave
cmp
lahf
outsb
dec
inc
push
shll
popf
insb
xchg
and
cwtl
mov
mov
les
sbb
int
sub
les
pusha
pop
dec
mulb
inc
sbb
xor
in
arpl
inc
dec
clc
pop
xor
jne
xchg
xchg
cmc
loopne
cmp
adc
mov
dec
jle
outsl
xor
lock
inc
push
xor
shlb
out
cltd
sub
mov
sub
call
cwtl
jo
jb
push
je
rorl
test
mov
adc
inc
rorb
imul
push
leave
out
out
pop
jae
adc
xlat
or
xchg
out
aam
jne
mov
outsl
cmpsl
dec
pop
mov
push
xor
gs
sub
sti
movsl
icebp
mov
dec
sbb
xor
mov
jne
bound
imul
sub
xor
cmp
decb
add
jecxz
adc
lods
mov
icebp
lods
push
mull
cs
add
dec
scas
idivl
jmp
xor
js
rcrl
fistpl
mov
loopne
icebp
ret
cmp
sahf
dec
sub
aad
mov
push
nop
out
out
adc
lea
push
loop
sub
xchg
les
lods
dec
push
cltd
sub
jp
xchg
xchg
ljmp
leave
pushl
mov
divl
mov
mov
push
mov
fucomi
int3
mov
cmp
adc
lods
je
cmpsb
or
sub
pop
in
pop
lret
jmp
push
pushf
ss
leave
sbb
int
sbb
dec
test
addr16
lea
fistpl
xchg
xor
push
call
test
mov
out
ds
xlat
lahf
xor
cmp
jmp
in
mov
add
stos
mov
dec
loop
pop
jl
fstps
out
cmp
clc
jl
or
mov
and
cmc
fsubrs
xor
aam
pushf
cmp
mov
in
fldenv
cmp
sbb
stc
mov
xchg
jecxz
sbb
push
sbb
ficompl
dec
push
dec
sbb
sub
stc
into
cmp
pop
mov
fs
add
mov
ret
pop
stos
or
lret
sbb
js
dec
in
int3
adc
mov
add
mov
cld
mov
in
inc
pop
mov
lret
push
lds
or
mov
cmpl
push
push
lea
adc
xchg
mov
js
inc
or
into
fwait
sub
fdivs
popf
out
dec
loope
push
inc
inc
cmpsl
pop
fs
sub
ja
sbbb
test
fildll
sti
test
pop
xor
lret
jecxz
iret
pop
stc
xor
jbe
or
cwtl
or
dec
daa
dec
mov
or
push
std
cltd
xchg
add
pusha
adc
mov
sub
shrb
mov
out
or
imull
pop
dec
inc
fisubs
xor
jecxz
inc
lret
pusha
arpl
sbb
sahf
jno
push
dec
popa
sbb
sub
mov
iret
or
imul
mov
aas
lea
insb
dec
outsb
push
xchg
push
sar
add
cld
cmp
fimuls
test
imul
xlat
rorl
mov
in
outsl
mov
push
test
out
jbe
repnz
mov
mov
xchg
push
mov
mov
lea
push
mov
jae
nop
sahf
xchg
pop
ja
mov
ja
aad
xchg
jbe
add
leave
aas
test
js
loope
fs
lods
cmp
mov
test
jge,pn
iret
add
mov
mov
movsb
pushf
fbld
out
push
into
inc
stc
lahf
clc
or
jnp
mov
sub
push
mov
cmpsl
enter
xchg
or
dec
fcmovbe
push
xacquire
stos
stc
mov
push
in
cmp
out
xor
shrl
jmp
pop
cltd
xchg
jne
and
out
mov
fdivrl
xchg
pop
push
das
and
cmpsl
push
rcrl
loope
je
cmpsl
lds
rolb
and
push
xchg
dec
mov
jp
cwtl
xor
push
ja
mov
jmp
push
or
and
adc
dec
xlat
jne
ja
jmp
mov
jg
xchg
negl
stos
daa
mov
idivl
adc
mov
repnz
ljmp
mov
ds
xor
test
mov
out
call
in
mov
jle
daa
inc
adc
jo
test
cltd
inc
rorl
and
mov
fnsave
into
iret
dec
adc
icebp
pop
aaa
jecxz
fimuls
mov
into
fisttpl
mov
sub
xchg
out
stos
adc
jle
movsl
push
mull
cmp
hlt
sub
shl
jle
xor
jns
mov
jl
into
cmc
test
and
sti
cmp
pusha
loopne
andb
xchg
enter
or
xchg
test
mov
or
push
pop
pop
test
mov
pop
in
je
cmp
mov
mov
dec
test
fcoms
mov
xor
clc
ret
jns
xchg
dec
das
in
test
rcrl
cmp
jmp
fimuls
fsubrs
arpl
mov
adc
addr16
pusha
mov
mov
into
addr16
xor
xor
and
cs
mov
lods
lahf
jns
dec
lret
dec
sub
jno
xor
mov
jnp
fmull
cltd
sub
in
sarb
xor
xor
imul
push
cmp
cwtl
lods
popf
mov
rclb
sahf
andl
jbe
jle
cmp
and
ds
push
rcr
js
mov
lods
mov
loopne
push
or
xchg
add
testl
push
jns
ljmp
adc
mov
inc
pop
and
das
testl
stos
imul
int3
out
or
not
push
push
loop
jmp
test
shlb
test
xchg
inc
stos
push
mov
pop
mov
push
rcrl
stos
push
xor
pop
sbb
movsb
arpl
jne
lods
cwtl
cmc
sbb
mov
adc
inc
dec
adc
jg
xchg
mov
push
mov
xchg
or
arpl
add
cs
add
xlat
pop
mov
adc
fadd
push
into
sub
mov
mov
push
out
inc
fstpl
sub
stos
pop
sbb
sub
mov
cmp
sarb
loop
out
out
enter
cmp
or
add
movl
sbb
mov
mov
inc
pop
and
inc
scas
or
or
scas
xchg
ds
addr16
idiv
or
lock
pop
stos
add
mov
bound
xchg
mov
xchg
mov
sub
outsl
mov
cltd
shlb
xor
push
dec
cmp
mov
cmp
push
pusha
mov
aas
les
test
and
mov
dec
es
or
out
shll
push
mov
popa
sbb
pop
pop
or
pop
rcrb
aam
fwait
cli
lahf
add
lret
nop
mov
xor
shlb
pop
push
adc
int3
test
cmp
push
adc
sarl
add
addl
in
popa
sub
and
loopne
sti
sbb
mov
loop
or
test
or
fdivl
orl
sub
fdivp
xchg
cmpl
lcall
dec
push
jae
loope
mov
mov
dec
mov
jmp
pop
fidivrl
dec
cmpsb
rclb
sub
mov
sbb
jo
int3
xchg
push
pop
mulb
lret
popf
outsl
out
sbb
xchg
mov
jp
push
jle
xchg
cltd
jns
jns
fnsave
sub
xchg
insl
cmp
mov
push
mov
jo
pushf
dec
in
push
pusha
lods
cmp
fistps
icebp
popa
roll
cmp
jmp
cli
xchg
lods
int3
xchg
gs
mov
movsb
jl
pop
popa
fsub
mov
je
in
mov
dec
cmp
ds
leave
and
movsl
adc
jns
in
ret
jbe
bound
stos
sub
in
sbb
std
cmp
mov
daa
adc
enter
cltd
pushf
int
jl
dec
pop
icebp
loope
push
pop
and
xor
mov
addl
mov
sub
jl
sbb
lods
xchg
sbb
int3
jno
cs
xchg
inc
out
add
jae
gs
push
add
lea
out
rolb
lods
jg
dec
outsl
lods
out
movsb
out
jge
mov
in
pop
cwtl
jp
mov
pop
and
outsl
decb
or
dec
add
jg
gs
cmc
gs
idiv
pop
popa
lret
push
rclb
jmp
arpl
mov
lcall
or
cmc
pop
lcall
add
or
pop
jmp
adc
sub
cmp
fisttps
jl
in
mov
dec
xchg
ja
sbb
icebp
xchg
mov
cmp
mov
sbb
stos
and
dec
je
xchg
mov
cli
jge
add
repz
jmp
inc
pop
and
or
fcoml
leave
es
adc
out
fs
inc
andb
je
mov
sbb
mov
mov
pop
push
stc
lea
jge
xor
cltd
cltd
lock
sar
add
xor
neg
icebp
fcmovb
jnp
push
fbld
cmp
mov
pusha
ret
adc
pop
add
rcll
mov
mov
push
sarb
jbe
mov
mov
into
and
mov
add
cmp
into
xor
sub
lcall
adc
cmp
sti
in
mov
mov
mov
daa
leave
mov
insb
cmp
ret
sub
mov
ds
dec
arpl
popa
push
mov
xchg
mov
lret
push
fsubrp
pop
xchg
push
fisubs
xorb
lods
jnp
mov
stos
xchg
sbb
sbb
adc
scas
mov
ljmp
jne
rclb
jle
ss
outsb
rcrl
test
xchg
mov
push
add
aad
aas
mov
cmp
mov
pop
icebp
mov
mov
mov
lahf
dec
mov
addl
js
push
fisubrl
rorb
dec
out
fldt
or
pop
aas
in
add
test
cmp
and
jl
out
xlat
pop
xor
insl
pop
sub
stos
jle
push
out
or
out
ja
add
lahf
xchg
cmp
or
mov
inc
mov
and
mov
inc
std
cmp
inc
flds
dec
les
mov
cmpsb
adc
sbb
mov
push
dec
clc
lahf
push
popf
loop
int
and
mov
jg
xchg
dec
add
jle
std
outsb
sub
mov
stos
out
mov
repz
jb
cmpsb
rcrb
xor
sub
shll
divl
in
ds
xor
in
pop
sbb
add
enter
rorl
ds
test
cmpb
jmp
jp
push
outsb
jge
xor
into
mov
xchg
outsl
dec
xchg
jne
xchg
and
inc
pop
mov
outsl
xchg
mov
mov
std
sub
fsubrs
pop
jmp
xor
inc
int3
push
cmpb
scas
push
or
xor
inc
mov
jge
jae
add
or
xlat
stc
scas
int3
test
fwait
add
cmp
imul
sbb
inc
int3
and
mov
sub
aas
cmc
das
mov
in
iret
mov
bound
add
or
das
dec
sub
out
out
sub
js
popf
popf
shrb
inc
and
ret
xchg
dec
cmpsl
mov
stc
out
lret
cmp
aas
adc
jae
mov
lret
sub
addr16
in
test
cmc
inc
or
mov
mov
or
inc
inc
sbb
addl
add
lret
mov
cmp
pop
mov
inc
and
inc
in
mov
add
int3
imul
aam
xchg
iret
sub
ja
mov
cwtl
in
mov
dec
adcb
jno
xor
pop
sti
in
dec
jbe
or
test
xchg
insb
xchg
popl
xchg
push
repnz
inc
int3
xchg
push
mov
frstor
mov
daa
fstp
sub
rcrb
enter
and
pushf
jno
pop
addr16
push
cmp
loop
push
jle
adc
int
js
je
inc
aaa
sar
cld
gs
in
sbb
rcrl
in
rcrl
orl
xchg
or
mov
stos
cmp
cltd
or
imul
mov
ss
insl
aam
outsb
cmp
dec
add
push
pushf
push
les
cltd
adc
popf
cmp
adc
ret
mov
int
pusha
movsl
sub
aad
cmp
mov
decl
inc
and
outsl
insb
cmc
or
xlat
popf
sub
cmp
and
sti
cmp
leave
mov
add
xor
test
dec
ret
fs
shl
mov
rol
inc
pop
jnp
stos
divb
dec
jle
mov
ds
mov
aad
fwait
mov
cwtl
pop
jbe
mov
adc
js
dec
push
sub
pop
addb
pop
icebp
xchg
sub
push
and
fs
arpl
jle
les
jp
ret
push
in
mov
das
xchg
shlb
pop
cmc
mov
inc
stc
or
push
xchg
int3
lahf
inc
stc
inc
imul
int
jl
add
stos
jns
jnp
jnp
sub
fisubrs
inc
ret
sahf
out
add
inc
lahf
fidivrs
sti
mov
pushf
mov
cmpsl
leave
lcall
and
testl
mov
frstor
xchg
mov
lods
push
or
cs
iret
pop
and
mov
dec
lods
ss
data16
mov
je
popf
fidivs
pop
dec
adc
dec
pop
mov
adc
out
enterw
divb
insb
cmp
inc
jnp
mov
add
mov
insl
stos
cmc
fadd
jg
cltd
xchg
mov
lahf
or
lret
sahf
aas
leave
sbb
pop
dec
std
je
xor
enter
sbb
mov
loop
cld
xchg
mov
pushf
ja
pop
movsl
jle
rorl
pop
mov
subl
sbb
stos
xchg
adc
mov
jb
jmp
loop
xor
cmp
mov
jl
jmp
ljmp
sbb
mov
movl
into
test
aad
xchg
sub
mov
inc
rcrb
add
pop
adc
je
mov
into
pop
or
scas
mov
mov
sub
mov
nop
adc
mov
and
inc
mov
sub
imul
ljmp
fldt
jb
xchg
xchg
pushl
sub
sub
dec
lock
or
mov
rcrb
lret
push
popa
test
rcll
mov
pusha
movsb
in
aam
shll
int3
jg
fcmovb
rclb
insl
out
xchg
pop
call
xor
xorl
sub
sbb
push
and
pop
pop
mov
fcoms
or
jmp
cmp
adc
cmp
xchg
psubsb
enter
pop
adc
into
cmc
pop
idivb
cltd
xchg
outsl
lods
in
fiaddl
mov
sub
push
je
pop
cmp
outsl
cmp
xchg
in
hlt
cwtl
cmp
test
push
sub
aas
mov
leave
xchg
xor
xor
add
push
insl
cmc
or
pop
divb
push
or
cmp
mov
es
mov
cmp
sbb
sbb
mov
negl
into
out
lahf
sbb
scas
xlat
push
movsl
movl
pop
mov
mov
pop
inc
jo
cltd
fbstp
movsb
loop
lret
adc
sbbl
xor
mov
sub
aas
xlat
adc
cmp
sbb
pop
mov
adc
leave
aam
push
or
jmp
pop
cmp
je
sahf
push
insb
imul
mov
inc
jne
out
push
inc
xchg
fisttpll
fldenv
sub
and
stc
stos
cmp
je
cmc
xchg
mov
pop
mov
sub
cli
or
inc
loopne
xchg
mov
or
insb
add
into
mov
daa
mov
loop
adc
push
mov
movsl
inc
push
sti
pop
dec
pop
xlat
inc
and
pop
mov
mov
lret
mov
and
outsb
int
ds
sbb
jnp
mov
push
jl
pop
div
push
xchg
add
cwtl
cld
mov
jecxz
mov
mov
xorb
sub
jno
adc
loopne
in
jecxz
sub
pop
scas
inc
inc
dec
loope
push
in
fmuls
test
adc
int
add
adc
mov
cmpsb
add
push
ret
push
and
jg
push
getsec
mov
rcrl
imul
call
mov
xchg
push
int
sub
stos
mov
jecxz
mov
cmp
mov
arpl
out
xor
jae
dec
mov
push
mov
cmc
arpl
andps
add
sub
jns
stc
outsb
lahf
jno
mov
sbb
jmp
cmpsl
cmc
sbb
mov
cmpsl
imul
imul
in
ficomps
pop
repz
wbinvd
into
mov
add
xor
xlat
xchg
test
cmpsb
stc
xchg
daa
sahf
movsl
jbe
scas
xor
fnstcw
xlat
mov
pop
sub
scas
or
scas
call
sidtl
shr
cltd
fldt
imul
xor
xchg
mov
push
in
cmpsb
sub
pop
cmpsl
gs
adc
mov
mov
mov
fs
sub
nop
movsl
ljmp
jmp
jne
int3
test
ficomps
pusha
push
inc
shll
sbb
retw
jbe
imul
jne
mov
iret
sti
scas
mov
inc
fwait
xchg
iret
adc
add
pop
popa
cmp
js
cmpsb
and
lds
mov
pop
xor
xor
nop
adc
cs
and
mov
fildll
popa
xorl
and
add
pusha
adc
shufps
mov
js
push
push
add
scas
stos
daa
mov
loop
ror
scas
mov
adc
lods
data16
daa
shlb
stos
jecxz
inc
test
mov
xor
ret
mov
push
push
cs
ss
cmp
fwait
lods
dec
inc
popa
adc
lods
pusha
sub
xchg
ret
mov
push
mov
dec
xor
add
sub
cmp
lret
pop
xchg
movsb
in
into
pop
or
out
xor
or
xchg
out
push
testl
adc
leave
dec
sbbl
std
adc
lahf
sarl
out
fs
jp
dec
pop
aaa
cld
push
les
dec
and
inc
cmp
out
push
cmpsb
ljmp
test
inc
subl
loopne
dec
in
cmp
fbld
loope
dec
add
cmp
and
or
and
sbb
clc
pop
cmp
insl
es
and
test
add
hlt
mov
xchg
dec
mov
mov
fnstenv
or
sub
pop
inc
pop
test
andl
add
int
sub
sbb
pop
sti
cmp
dec
inc
stos
cmp
adc
xor
cmp
lcall
imul
rclb
pop
jle
mov
cmp
das
jae
cld
shl
loop
sbbb
es
mov
inc
and
mov
ror
mov
or
les
jmp
dec
xchg
int
rcr
pop
into
xor
xlat
ljmp
addr16
cli
std
fbld
mov
pop
stc
jb
in
pop
popf
xchg
or
mov
inc
adc
addr16
and
mov
arpl
pop
mov
and
shrl
stos
sahf
out
push
and
js
ret
sbb
fstps
add
out
repz
jb
or
fs
push
mov
test
hlt
jg
adc
jl
add
jge
pusha
sbb
cmpsb
or
mov
ret
push
mov
fprem
repz
inc
add
flds
ret
addr16
in
sbb
mov
adc
mov
push
movsb
or
xor
xchg
jp
inc
sbbl
mov
ja
subb
fstl
in
push
sub
test
int
sbb
pop
stos
sub
shrl
icebp
xor
lret
rol
jecxz
arpl
mov
mov
jae
imul
fsubp
popa
cmp
out
xchg
xchg
imul
loope
sub
pop
fcompl
mov
cmp
ret
add
xor
rcr
dec
dec
and
cwtl
rcll
iret
inc
cmc
icebp
nop
rclb
push
call
xchg
aas
ret
les
in
sub
das
mull
mov
push
xchg
mov
mov
cltd
sti
sub
pop
fldenv
pop
std
fldpi
shll
xchg
scas
test
incb
vmovaps
test
inc
cld
cmpb
iret
dec
and
nop
lds
inc
loopne
jl
xchg
xor
and
push
adc
sub
fldcw
push
loope
pop
cmp
inc
inc
jle
cmpsb
shrl
je
dec
int3
rcll
mov
add
xchg
jecxz
cld
mov
and
sti
daa
icebp
and
xor
xor
xor
mov
movsl
adc
out
push
loop
lcall
pop
hlt
test
in
clc
push
xchg
int
sub
push
cmp
sub
push
or
lret
adc
xor
mov
mov
dec
stos
xchg
sub
out
mov
jne
pop
jge
fcomip
in
addl
xchg
cmp
push
les
and
fcomps
add
cs
dec
sbb
sbb
mov
or
ret
out
mov
repz
pop
mov
mov
fisttpll
push
and
fcomps
mov
mov
and
jmp
xor
and
cmp
orl
xchg
mov
outsl
lahf
or
cltd
and
xchg
lahf
mov
ret
cld
pusha
cmp
jnp
hlt
mov
mov
insb
mov
int
fwait
mov
add
les
in
leave
mov
jae
test
adc
int
popf
adc
fldenv
inc
insb
loope
icebp
in
dec
sti
das
fdivs
mov
or
sti
dec
js
mov
test
xor
cld
sahf
int3
movsl
inc
mov
insl
out
dec
test
xor
insb
out
lock
inc
xchg
mov
into
lea
mov
sahf
repz
cmp
cmp
into
mov
ljmp
fs
inc
aam
jae
std
and
data16
jg
mov
cmp
push
push
xor
in
adc
repnz
addl
xor
sti
sahf
test
add
jnp
bound
ss
sbb
pop
out
xor
sbb
jge
push
mov
js
lcall
sub
pop
movsb
jp
stos
repz
mov
cmc
sub
cmp
shrl
je
add
mov
lods
ds
mov
mov
fisubrs
cmc
lea
and
stos
pop
dec
add
nop
adc
sahf
add
sbb
cltd
sbb
inc
xchg
loop
push
dec
cmp
and
xchg
jae
aaa
fsubs
int3
push
pop
add
int
push
fs
movsl
fisttpll
cltd
fcmovbe
xlat
scas
dec
pop
and
sbb
push
dec
push
shrb
sbbb
adc
cwtl
mov
and
add
mov
jmp
xor
push
or
adc
inc
pop
fldenv
cltd
sbb
leave
js
mov
dec
add
xorl
insb
sub
sbbb
inc
jno
xor
xor
jae
mov
test
and
cmp
xchg
test
push
adc
mov
mov
jo
fs
sub
fiadds
aas
sbb
push
mov
repnz
repz
xchg
push
or
ret
stc
jb
nop
test
popa
mov
sahf
movsl
xchg
loopnew
in
sbb
fwait
mov
or
push
xor
in
pop
stc
push
cld
sti
inc
andb
aaa
out
xchg
push
loopne
pop
ret
pop
xchg
inc
test
add
xor
fbld
std
mov
xchg
cmpsl
mov
test
std
sarb
or
arpl
pop
xchg
sbb
enter
roll
or
ret
out
hlt
sbb
dec
lds
sub
jmp
fdivrs
xchg
aaa
movsl
jp
sahf
push
xor
lcall
aaa
or
into
test
lods
push
rorl
out
dec
scas
sbb
mov
push
jnp
insl
aad
fistl
pop
push
jle
push
mov
stos
aam
scas
pop
cmp
cmpsb
daa
sbb
fsts
flds
inc
outsb
sarl
ret
and
shl
imul
cmpsl
add
negb
decl
mov
or
rcll
cmp
inc
and
xchg
cli
insb
icebp
into
sub
cwtl
jmp
in
dec
mov
cmp
sub
mov
pop
and
push
cmp
mov
out
nop
and
dec
jg
jns
mov
cmp
arpl
and
adc
mov
and
jg
mov
testb
imul
call
lods
mov
or
das
cmpsb
les
push
xlat
pop
ljmp
shll
dec
sub
dec
cmp
xor
popf
xor
jnp
out
andl
push
xchg
mov
cmpl
or
mov
rcr
xor
sbb
jecxz
add
and
aad
shll
inc
inc
add
jno
xor
loop
inc
popf
sbb
mov
js
jl
xchg
scas
les
mul
xor
cmp
out
rorl
sub
fisttps
mov
mov
mov
das
push
aam
popf
in
pop
scas
loope
jnp
and
mov
xor
mov
push
mov
adc
pop
stc
mov
fistpll
cmp
xlat
out
ss
sbb
pop
cwtl
adc
cmp
enter
arpl
and
mov
gs
shlb
repnz
jmp
xor
push
adc
sub
push
adc
aas
dec
jmp
cmp
push
inc
pop
sub
inc
and
sbb
push
divl
data16
sbb
dec
xchg
or
dec
xchg
lods
aam
jns
jl
xlat
movsb
cli
inc
fucomi
mov
jnp
inc
push
outsl
push
orb
pop
pusha
test
adc
push
cmp
scas
sbb
lret
lret
xor
sarl
mov
mov
and
mov
aaa
jg
nop
push
pop
pop
leave
arpl
adc
bound
mov
jl
pop
bound
xchg
jl
ds
jecxz
stc
mov
mov
lahf
decl
sub
and
shl
xchg
shrl
sbb
pop
popa
stc
aas
jl
cmp
cmpsb
sub
or
jne
mov
lcall
mov
jne
push
repnz
adc
mov
jg
add
sub
shlb
push
sbb
imul
sub
mov
pop
jg
cmp
add
mov
jnp
xchg
leave
fdivrl
xor
les
imul
aaa
shr
mov
jno
push
mov
subb
aaa
mov
mov
movsb
es
mov
sub
aad
lahf
jno
arpl
push
out
sarb
xor
push
inc
mov
rcrl
mov
pop
and
push
icebp
repz
andb
ljmp
mov
in
jb
ds
adc
pop
test
jnp
or
pop
or
sub
inc
movsb
fdivp
and
in
xor
add
jge
xchg
movsl
cmp
adc
push
or
fdivrp
adc
jbe
nop
mov
lods
dec
insb
inc
bound
push
cli
or
aad
sub
mov
pusha
ljmp
push
out
adc
dec
scas
jb
roll
xchg
dec
mov
cmp
jbe
add
movsb
dec
sbb
dec
dec
cwtl
add
cmc
mov
dec
mov
mov
cwtl
jp
js
cmp
jecxz
popa
out
add
imul
mov
movsl
push
sub
stos
xchg
data16
cwtl
in
lcall
aad
mov
ret
out
lahf
adc
mov
adc
cmpsl
lods
repz
outsl
fimull
nop
dec
in
fdivp
push
xchg
jne
pop
sbb
pop
push
loop
xor
aam
push
scas
dec
fcom
xor
rcrb
int3
dec
imul
mov
rcll
xlat
adc
cmpsl
mov
xchg
sbb
ret
inc
inc
idivb
push
add
lock
sbb
dec
test
imul
roll
pushf
test
inc
jo
enter
mov
popf
fsub
push
push
push
jae
xor
sbb
mov
daa
dec
imul
lods
cltd
iret
stos
mov
outsb
sbb
lods
fcoml
cs
cmp
rol
das
or
sub
mov
sbbl
lret
fldl
cli
int
mov
leave
imul
adcl
cltd
mov
in
mov
test
and
pop
inc
rorb
mov
mov
iret
dec
push
sbb
jno
rol
mov
test
and
sbbb
out
mov
xchg
and
jecxz
aam
jmp
in
jmp
out
test
and
jecxz
out
cmp
xlat
mov
inc
outsl
in
xor
ljmp
jo
push
daa
mov
mov
jg
int
inc
imul
movsb
add
mov
and
sbb
xor
xchg
js
leave
or
xlat
xor
cltd
push
add
fwait
scas
push
jno
out
mov
jns
cmp
push
fmull
xchg
xchg
bound
cld
in
mov
test
fst
dec
xor
movsl
xor
add
jmp
or
jmp
mov
popf
jmp
or
dec
pop
pop
fistpll
std
sti
or
xor
add
or
mov
push
inc
push
dec
and
push
sbb
stc
lock
or
out
inc
sahf
add
scas
add
xor
out
pop
jg
out
mov
xchg
mov
addr16
add
xchg
test
js
push
push
sbb
repz
cmpsl
jbe
popf
cmp
addl
pop
out
outsb
imul
sub
ds
sub
cmp
out
mov
mov
sbb
mov
in
cmp
sbb
cmp
jmp
shl
xchg
mov
clc
cmp
mov
mov
jnp
movsl
jecxz
test
jnp
shrb
es
cmp
mov
xor
enter
xchg
mov
xchg
dec
mov
xor
test
ja
jbe
add
xchg
out
and
daa
cmp
mov
jmp
nop
jmp
sti
pop
imul
mov
sub
push
cmpsl
scas
shrl
decb
out
test
fldt
sbb
mov
fsubrl
enter
es
out
mov
stc
std
xchg
lahf
xchg
mov
mov
mov
std
pop
sub
sahf
dec
mov
jno
sub
and
xchg
in
popf
in
es
stos
xchg
cmpsl
cli
imul
test
mov
dec
lcall
jge
js
jo
daa
sub
std
xchg
lahf
dec
adc
mov
lret
sub
cmc
bound
and
mov
mov
cmp
mov
cmpsb
hlt
cwtl
out
aaa
and
dec
or
lods
lds
in
mov
cmp
or
cmpsb
xchg
mov
sub
mov
insb
xchg
pop
cmp
and
dec
jg
in
ds
pop
mov
sbb
and
outsb
jle
es
mov
xchg
cmp
in
std
mov
jmp
in
icebp
jne
inc
aas
in
lods
jp
mov
pop
sub
loopne
repz
ret
into
outsl
test
inc
aas
dec
outsb
jg
ljmp
jbe
cmp
push
imul
lods
push
imul
push
mov
cmp
sub
jbe
xchg
jnp
leave
sbb
push
cld
loopne
jmp
jo
mov
scas
icebp
pop
stos
dec
add
cltd
mov
or
sub
mov
nop
inc
ljmp
bound
or
fisubl
mov
cli
inc
outsl
xchg
or
aaa
xor
dec
fsubp
fdivrl
jne
add
shlb
das
ret
mov
jp
mov
insb
pop
pop
shr
pop
movsb
cli
popf
pushf
lahf
lods
das
out
add
nop
jmp
je
add
mov
cmp
loop
stos
cltd
cs
add
inc
lods
cs
push
mov
add
stc
sbb
cmpsb
mov
xchg
mov
and
and
pop
inc
jbe
pop
aam
sahf
dec
cmp
add
movsb
insl
int
cmpb
adc
or
xchg
fwait
mov
inc
sahf
lret
loope
xlat
mov
leave
adc
aam
mov
sti
aam
xchg
lock
fldcw
push
or
jg,pt
iret
xchg
repnz
mov
adc
jo
cmp
test
movsb
mov
stos
or
mov
xchg
mov
adc
insb
pop
pop
popf
xor
sbb
test
mov
loope
adc
dec
mov
pop
mov
jge
inc
std
add
lea
mov
push
mov
ds
or
or
aam
int
js
lds
repz
sbb
les
outsl
insl
adc
cmp
cmpsb
jno
xchg
or
popa
nop
fisttps
mov
test
rorb
xchg
sbb
mov
jno
xor
mov
ret
dec
call
frstor
mov
sar
pop
insb
or
mov
jg
sbb
sbb
hlt
inc
jp
jo
sbb
inc
int
mov
mov
out
lcall
inc
mov
mov
ljmp
xor
repz
dec
xor
and
inc
pop
mov
out
sbb
out
xorb
sub
test
enter
mov
bound
stos
inc
xchg
pop
test
outsb
mov
pop
pop
mov
cld
lock
mov
cmpb
stos
push
cmc
cwtl
xchg
or
rclb
in
daa
dec
xor
cmpb
push
mov
mov
pop
imull
fstpt
mov
cmp
mov
sub
in
jb
pop
xchg
push
into
and
nop
test
fwait
ljmp
push
xchg
xchg
out
xchg
dec
bnd
jmp
in
cmp
leave
mov
dec
xorb
xor
orb
js
pop
xlat
shlb
adc
out
inc
mov
sbb
loope
loope
lret
mov
and
mov
cwtl
mov
push
jecxz
mov
pop
cmp
fists
lret
adc
ja
inc
idiv
js
cmp
mov
mov
jecxz
and
daa
leave
inc
or
out
enter
lcall
xor
inc
push
jae
out
dec
push
mov
mov
out
dec
movsb
mov
mov
jp
sub
inc
push
movb
fcmovb
imul
sub
mov
cmp
fxch
sub
add
pop
inc
jecxz
and
leave
cmp
jmp
jo
pusha
sub
ljmp
xor
lock
mov
insb
sbb
ds
cmp
loopne
pop
jne
cmp
pop
rcll
outsl
sub
inc
dec
mov
lcall
imul
pop
icebp
dec
push
leave
test
push
sti
mov
inc
mov
orb
mov
push
popa
stos
xor
adc
aam
mov
push
subl
mov
push
inc
and
jo
out
add
lahf
xor
test
loope
mov
fsubrl
jle
mov
test
insb
imul
fstl
rolb
jae
std
outsb
dec
fstps
ss
push
add
xchg
test
aad
pop
ret
out
and
sub
jb
enter
loopne
mov
repz
xor
add
int3
fmuls
adc
and
cmpsb
push
es
jge
or
push
adc
dec
xchg
xor
dec
out
out
inc
aad
fldt
cltd
rclb
leave
pop
imul
cmpsb
mov
andb
push
xchg
aam
scas
lret
push
lcall
sub
mov
enter
out
out
rcrb
sub
fldt
xor
lahf
addr16
sbb
roll
loope
test
pop
sub
cmp
out
dec
arpl
cmp
jge
sbb
movsl
stc
std
push
cmp
mull
in
or
cld
pop
sbb
pop
push
cs
mov
sbb
jns
jae
xchg
xchg
into
mov
or
adcl
sahf
iret
fadds
ror
ja
cld
dec
mulb
mov
inc
movsl
cmp
out
test
das
sub
jp
sub
xchg
pop
in
mov
and
push
mov
js
sar
sub
bnd
mov
or
js
pusha
inc
pavgb
adc
xor
addr16
dec
hlt
mov
addb
leave
aas
pop
push
inc
lock
iret
gs
adc
inc
mov
cltd
js
out
dec
je
scas
cltd
rol
cmp
jnp
mov
movsl
adc
sub
adc
sti
das
add
faddp
mov
inc
sbb
pop
sahf
dec
push
xchg
mov
lahf
mov
add
cltd
sti
push
fs
mov
test
nop
pusha
mov
adc
ret
push
test
pop
pop
into
jp
xor
mov
push
sub
test
lcall
jae
gs
xchg
xlat
popl
fcom
into
sub
add
imul
mov
inc
jbe
neg
add
scas
hlt
push
dec
jo
test
xchg
int
imul
jne
ret
jne
test
ret
std
cmp
xchg
or
xlat
pop
xor
int
icebp
push
dec
jmp
aaa
mov
ss
xchg
jno
iret
enter
mov
sub
dec
sbb
pop
outsl
lock
sahf
dec
jbe
leave
dec
addr16
rcll
xrelease
cmp
lock
mov
pusha
loopne
mov
cmp
mov
and
add
int
fisubl
add
cmp
fmull
xor
xor
lea
into
in
cli
or
mov
das
push
and
and
sub
popf
dec
jne
xchg
roll
jmp
ret
mov
pop
dec
aad
pop
inc
dec
and
std
add
es
or
insb
hlt
cmp
mov
xchg
mov
sub
jbe
jge
out
test
xchg
and
fildll
repnz
xchg
popf
lods
addb
xchg
sbb
fbld
add
idivl
out
xchg
out
and
lds
pop
pop
sbb
or
adc
lret
jae
scas
add
aam
sbb
pushf
vmread
iret
out
lea
pop
adc
icebp
je,pt
imul
sbb
aas
out
dec
push
adc
in
dec
js
adc
add
jbe
ja
inc
inc
and
pop
push
stc
and
cmc
lret
mov
ja
fs
jge
cmp
cmovs
cmp
fmuls
movsb
xor
mov
bswap
adc
or
jl
movsb
mov
and
in
lds
jp
or
jbe
cwtl
sbb
inc
mov
pop
mov
add
insb
js
add
mov
cmp
add
adc
cmc
ss
push
addr16
and
shr
fidivrl
aam
pop
cmp
xchg
sti
rcll
fwait
mov
push
sub
arpl
sti
push
fcomps
repz
das
pop
or
popa
push
mov
inc
lahf
arpl
ss
scas
pop
push
mov
dec
rolb
xorb
xor
jns
lea
ret
lods
jecxz
mov
pop
dec
xor
orl
test
mov
cmp
inc
ret
push
aas
or
push
sub
ds
in
cmp
inc
mov
inc
mov
fsubr
popa
stos
bound
lahf
push
mov
inc
into
dec
adc
xor
mov
or
sbb
jbe
mov
mov
add
in
nop
pusha
inc
test
xor
lret
sarb
pop
mov
push
jne
cmp
int3
mov
in
jecxz
test
mov
sbb
sbb
cs
mov
loopne
cmp
fldenv
test
ret
inc
push
in
cwtl
jb
dec
and
push
jbe
into
xor
jb
xchg
cmpsl
xchg
xor
cmpsb
cli
shll
std
pop
add
rol
mov
not
mov
cltd
mov
add
push
pop
test
dec
les
stos
aad
fwait
aas
jg
subb
data16
shll
out
cmp
aad
xchg
jle
insl
dec
mov
xorl
imul
mov
int3
or
push
rcrl
int3
aaa
and
in
in
inc
mov
jle
mov
repnz
and
popa
in
jo
lea
pop
repnz
popa
push
dec
pop
pop
push
push
popa
or
sub
outsl
leave
mov
push
loope
mov
lahf
mov
mov
cmp
cmp
out
and
icebp
arpl
jne
mov
add
outsb
pop
movsb
push
cmpsb
cmpsb
pop
mov
pop
clc
movb
popf
aam
inc
xchg
push
loopne
push
imul
xor
push
std
jecxz
ljmp
fisubrl
lock
ret
ret
in
mov
jne
xor
xor
mov
incb
mov
setnp
adc
jb
popa
pushf
fisttpl
cmpsl
rorb
iret
cmpsb
fs
add
mov
ss
aad
imulb
sti
pop
popa
loopne
aas
cmp
or
cs
and
or
xor
movsb
xor
imulb
fsubl
in
or
aad
test
jae
mov
or
push
inc
pop
dec
mov
sub
mov
movsl
aaa
sbb
das
stos
cmp
pop
pop
dec
ja
test
cmp
or
and
sahf
cltd
js
psubb
inc
aaa
stos
push
in
movsb
jno
lds
out
mov
adc
clc
subw
enter
mov
dec
loope
sub
stc
sahf
adc
mov
push
bound
mov
dec
pushf
jmp
fbstp
ret
fisttpll
imul
bound
sahf
cmp
fdivrs
push
aam
add
enter
mov
cmp
cmp
inc
lret
or
inc
mov
ljmp
cmp
je
dec
mov
jno
push
pop
pop
mov
lds
push
movsl
pop
jl
sub
jb
mov
pop
push
cmp
lock
cmpsl
sahf
fisttpll
popf
in
movsl
cli
sarl
and
and
inc
repnz
inc
lret
fidivs
je
lret
movsl
xor
lock
inc
dec
pop
fmull
xor
sbb
jo
sub
stos
add
add
mov
pop
mov
mov
xor
xor
in
push
mov
loop
pusha
ret
popa
sbb
inc
cwtl
ds
and
add
mov
jae
jne
mov
xlat
pop
xchg
pop
daa
lahf
pop
sbb
inc
lock
mov
movsl
loope
test
xchg
sub
inc
in
fnstenv
jg
ljmp
mov
push
sub
pop
pop
lods
lret
scas
jns
xchg
cmp
into
dec
dec
lea
inc
repz
movsb
adc
mov
mov
push
fstps
das
sub
and
iret
lods
mov
push
rorl
dec
or
mov
sub
push
jp
out
pushl
lods
ret
push
repz
into
sbb
cmpsl
sub
mov
mov
push
int
mov
fwait
push
inc
sarl
stc
cmpsb
mov
cltd
xchg
cld
ds
fiadds
add
xor
rcll
into
dec
adc
repz
cs
es
mov
mov
je
aaa
std
sbbl
jmp
repnz
gs
mov
push
popa
fs
out
add
pop
stos
sbb
push
cwtl
mov
jo
jl
push
mov
leave
jle
clc
stc
xor
mov
aaa
das
stc
popf
push
xor
add
push
popf
aad
das
rol
sbbl
fidivs
dec
dec
mov
psraw
jne
ret
mov
mov
mov
jne
clc
mov
jb
jg
mov
repz
addl
or
inc
movsl
hlt
mov
jno
or
cmpsb
or
jb
inc
insl
push
sbb
cltd
loope
enter
xchg
neg
test
hlt
mov
mov
not
dec
orb
xchg
les
mov
outsb
into
xchg
pushw
add
jle
outsl
or
push
sbb
cmp
dec
push
daa
lock
and
add
ds
dec
pop
cmp
pop
dec
mov
das
xchg
dec
outsb
in
loopne
data16
adc
xchg
jbe
or
or
data16
lahf
mov
and
jmp
lods
ret
adc
js
add
dec
cltd
sti
fisttpll
inc
lods
dec
sti
push
loope
push
cltd
inc
jne
fisttps
jg
aaa
nop
and
inc
mov
flds
mov
or
ret
out
adc
setnp
rorl
es
xchg
inc
xchg
mov
adc
sarb
jae
imul
fstpt
loope
xor
and
popa
jp
sbb
dec
cmpsl
and
ficoml
fcmovnb
out
fmull
aam
aad
int3
cmp
out
mov
mov
mov
jae
and
add
loope
mov
ret
mov
in
test
add
rorl
mov
mov
cmc
jg
imulb
jge
mov
shrb
clc
insl
sarb
popf
push
push
ss
ficompl
popa
je
cmp
decb
or
outsl
popf
or
sbb
movsl
aas
adc
mov
xchg
push
cmp
sub
inc
scas
out
aaa
hlt
xor
or
cmp
dec
cmp
sbb
ret
and
jne,pt
bound
fdivrp
dec
mov
aaa
sub
gs
and
and
aas
fildl
mov
or
insl
sub
mov
adc
jnp
iret
test
clc
stos
add
mov
movsb
sbb
cltd
push
xor
lds
fs
lcall
mov
jl
cmp
lods
ds
dec
dec
fldln2
mov
ret
sub
pushf
out
mov
add
popf
ja
fisubrs
fisubrl
pop
jmp
push
mov
scas
jle
ss
cmpsb
push
arpl
sbb
pop
mov
leave
and
cmp
jb
out
sub
push
pop
add
xchg
mov
pop
pop
pop
push
test
insl
insl
sarl
sbb
lods
or
cmp
data16
insl
and
or
dec
into
icebp
fbld
into
inc
lock
push
inc
outsb
call
lcall
lahf
inc
int3
dec
jbe
hlt
mov
dec
push
push
jno
gs
sbb
jmp
addr16
clc
scas
addr16
lret
push
xchg
and
cmp
clc
pop
arpl
addl
jmpw
fstpt
int3
aas
pop
dec
mov
fstps
inc
mov
pop
jne
push
dec
xchg
psubsb
imul
pop
fsts
fsubrs
fldl
rorb
xchg
sub
imul
js,pt
loopne
fldenv
inc
out
xchg
pop
js
icebp
jl
or
push
sbb
push
and
je
inc
ret
pop
cs
cmp
stos
popf
mov
pop
das
push
clc
imul
imul
add
and
int3
add
add
rolb
rorl
push
adc
and
mov
ffreep
ss
shrl
cwtl
mov
repnz
push
cmp
inc
push
filds
nop
xchg
lods
stc
das
jo
cld
pop
or
cld
jnp
inc
lods
sbb
push
xchg
mov
mov
nop
inc
ja
add
ds
in
add
push
add
xor
or
lods
dec
jb
insl
push
leave
xor
mov
insl
insl
push
add
xor
js
inc
or
pop
loopne
leave
mov
pushf
in
fidivl
testl
push
loopne
mov
pop
insl
repz
dec
cmp
or
jg
sub
shr
les
arpl
inc
call
jl
insl
cmpl
out
lods
ret
popa
adc
std
cmp
loope
jmp
test
pop
mov
add
test
nop
rorb
sbb
mov
xor
in
jl
imul
jle
ljmp
jmp
ret
inc
fsubl
jge
jl
mov
lock
mull
sub
cmp
je
repnz
or
xchg
sbb
sbb
sbb
lea
cli
fucomp
push
xor
push
je
xchg
xor
adc
ret
rol
add
jae
out
shll
popa
das
xchg
push
mov
jbe
into
mov
fs
jmp
and
ret
add
ret
mov
les
rolb
iret
push
pop
dec
ss
jecxz
test
mov
shl
fdivrp
sub
push
xorl
subb
fwait
in
push
ljmp
push
inc
rolb
sbb
cmp
dec
ds
inc
or
jno
ret
call
js
clc
push
fisttpll
cld
push
push
inc
sbb
lock
les
jp
ret
sbb
mov
push
mov
push
ljmp
sti
xor
das
sarl
lock
sub
cwtl
dec
jb
xor
sub
insb
repnz
mov
sub
add
gs
jns
push
mov
cmc
test
lods
ret
push
xchg
mov
sub
les
jecxz
bound
int3
aad
daa
imul
fbstp
movsb
or
xor
ret
xor
mov
dec
mov
sbb
lods
std
sub
mov
movsl
xchg
ljmp
gs
inc
in
roll
dec
jle
stos
lock
cmp
sbb
cmp
aaa
mov
or
xchg
mov
jno
push
addr16
lcall
mul
or
sbb
movsl
or
test
mov
sub
aaa
pop
sub
ljmp
in
test
mov
rcr
push
mov
popf
fwait
lcall
xchg
icebp
cltd
cmp
aad
scas
mov
lret
into
push
leave
es
stos
lahf
jo
mov
aad
lahf
cmpsl
lds
idivb
push
pop
push
test
fidivs
mov
push
jecxz
xor
cmpsl
push
mov
jnp
movsb
jmp
ljmp
ficompl
hlt
xlat
fisttpl
addr16
scas
adc
sbb
in
repnz
mov
or
std
aam
test
sub
add
in
faddl
testl
dec
fistps
test
loopne
lds
jge
loope
mov
outsl
lcall
add
in
neg
adc
jb
sub
pop
mov
ljmp
popf
push
cmp
std
mov
push
jle
jge
in
lahf
fstpt
flds
jbe
mov
jno
sarl
xlat
imul
xchg
push
out
test
test
lret
or
jl
cmp
mov
mov
lods
sahf
ret
inc
aas
xchg
aaa
leave
xor
xchg
dec
cmp
loope
xchg
dec
mov
push
push
int3
repnz
mov
cmp
bound
mov
insl
sti
inc
and
icebp
stos
xchg
iret
sbbb
push
ret
std
mov
adc
scas
dec
mov
push
cmp
xor
aaa
xchg
out
in
fisttps
add
xchg
lret
int3
mov
mov
mov
lahf
mov
aas
push
cmp
lahf
adc
and
jae
pusha
sbb
mov
shll
jae
add
hlt
push
les
pop
inc
insb
jnp
dec
iret
movsb
xchg
push
pop
mov
sbb
dec
and
std
add
popa
adc
inc
cmp
sti
stos
lods
jg
imul
movsl
clc
jge
insl
mov
xchg
dec
mov
and
loop
lea
fs
mov
jg
push
sbb
adc
sub
lods
test
in
sbb
mov
jg
rcrl
xchg
fdivrl
xchg
sahf
adc
adc
pop
in
adc
adc
cmp
push
arpl
and
add
xchg
test
jp
std
push
pop
lds
popa
sar
in
repz
mov
pop
mov
and
fstl
hlt
je
pop
imul
js
inc
inc
sbb
mov
cmp
sarb
lret
push
jbe
sahf
data16
repz
inc
xchg
add
inc
incl
sar
nop
imul
das
xor
sub
pop
push
sbb
out
lods
cmp
dec
and
jbe
pop
cld
dec
lods
lea
inc
jns
aad
les
scas
mov
arpl
cltd
lods
inc
pop
sub
push
mov
cmp
cltd
fs
or
jo
sbb
ljmp
lods
enter
push
repz
sahf
pop
loop
cmpsl
ds
push
sub
pusha
lds
fidivs
or
add
adc
or
push
pop
xchg
stos
adc
aas
dec
fistpll
and
and
cld
xor
adc
mov
das
sub
add
loop
popf
sar
jne
sub
dec
mov
insl
fnstenv
mov
insb
jnp
push
and
jns
cld
fadds
stos
movsl
loop
mov
sarl
xor
ret
orb
xor
cmp
add
test
inc
fwait
outsl
mov
ret
mov
les
push
shlb
subl
ds
test
mov
xchg
cmp
sbb
mov
cmp
scas
movsl
xchg
xchg
loope
fidivl
clc
fbstp
divb
sub
shlb
sbb
push
inc
mov
add
cld
cmpsb
jge
icebp
adc
cmp
mov
xchg
pusha
loope
call
jnp
jbe
imul
repz
xchg
xchg
xchg
popa
mov
or
outsl
ds
test
cwtl
popa
aam
dec
icebp
in
mov
out
aaa
fcompl
rolb
out
or
or
pop
inc
mov
adc
aaa
adc
repnz
pop
inc
xor
jge
loopne
add
repnz
inc
mov
roll
mov
repz
loopne
test
jle
mov
dec
sbb
cmpb
fmull
jne
out
pushl
push
adc
xor
mov
mov
aad
cltd
les
push
loope
cmp
mov
cmp
dec
into
in
or
xchg
jb,pt
sub
push
adc
dec
out
loop
cmp
out
orb
ret
lret
cmp
cmp
and
setno
jg
insl
and
xor
add
aam
jp
add
iret
and
fsubp
cmp
push
ss
xor
int
dec
jp
and
cmpsb
lret
mov
into
iret
sar
pop
push
cmpsl
jb
fwait
leave
cmpsb
repz
dec
imul
lret
xor
cmc
xor
cmpsl
pushf
mov
xor
test
fdivs
mov
cli
fs
sbb
pop
mov
lock
scas
movsl
popf
sbb
sahf
loopne
or
add
xchg
loop
or
cmp
push
push
test
cmpsb
pop
xor
in
daa
subb
cmp
mov
popf
rcll
jg
push
sbb
jecxz
imulb
dec
xchg
add
ljmp
adc
add
stc
jns
fdivrl
aam
xchg
incb
ret
sub
daa
inc
add
add
lds
xchg
in
xchg
mov
add
fdivr
jl
add
in
xchg
dec
sub
cwtl
mov
fwait
xlat
std
push
mov
leave
add
arpl
and
out
outsl
push
mov
or
xchg
imul
mov
aam
adc
pop
into
mov
jae
inc
cmpsl
enter
mov
and
ror
jae
imul
out
jge
or
or
out
cli
fldenv
push
pop
xor
mov
sbb
repz
dec
shll
in
cmpl
mov
push
into
scas
cmp
fwait
and
add
inc
test
adc
cmpsl
mov
idivb
iret
scas
adc
or
push
testb
scas
popa
addl
push
ret
inc
roll
lock
call
mov
cs
in
bound
xor
ljmp
insb
dec
dec
xor
pop
add
cmp
mov
adc
and
mov
jge
add
push
cld
loope
outsb
mov
inc
jg
movsb
and
cltd
push
out
adc
and
imul
call
and
cmp
pop
push
sub
clc
nop
xchg
mov
cli
cmp
push
xor
push
pop
test
mov
adcl
cs
xchg
or
pusha
mull
cmp
push
jl
adc
leave
adc
xor
jg
cmp
data16
xorl
enter
iret
test
add
xchg
leave
and
outsl
sbb
or
jnp
sub
push
jmp
or
pop
xchg
sub
pop
fldl
lea
pop
adc
loop
dec
hlt
jle
cmp
or
cmp
xchg
popa
xor
add
imul
leave
mov
mov
repz
sbb
adc
repz
or
pushl
lods
push
cld
outsb
lods
or
out
scas
in
push
ret
rcrb
sbb
mov
or
sub
inc
fiaddl
mov
and
aam
mov
fwait
jge
mulb
and
pop
lcall
insb
sub
ds
sbb
mov
mov
xchg
notl
fwait
pop
scas
mov
adc
push
pop
inc
loopne
gs
xchg
or
ljmp
jae
pop
scas
es
std
push
jno
mov
mov
in
lods
cmp
mov
into
jp
scas
cld
decl
or
pop
stos
movsb
push
sub
xor
sarl
cmp
mov
cmp
nop
add
mov
sub
inc
pop
mov
pusha
ljmp
and
add
stc
pushf
xchg
or
xchg
mov
insb
icebp
scas
push
push
xor
push
call
loop
nop
adc
test
and
xchg
inc
loopne
or
xchg
jne
inc
pushf
push
jle
xchg
arpl
scas
ret
testl
xchg
ret
xor
lret
add
pavgb
sbb
data16
sar
lock
cmp
ret
popa
jp
xchg
jmp
shl
ficoms
sbb
xchg
pop
mov
adc
and
movlps
jno
loopne
div
lods
or
xchg
and
repz
inc
add
in
bound
sbb
loop
jle
out
pop
fwait
pop
push
xor
dec
mov
mov
in
jge
fisubs
pop
mov
inc
pop
xchg
shrl
call
leave
out
sti
fildll
iret
xlat
push
int
pop
in
push
in
dec
ror
bswap
movzwl
filds
mov
fidivrl
adc
or
cmpsl
mov
fisubs
loopne
xchg
cmc
or
test
xchg
cmpsb
loopne
mov
jecxz
xlat
pushf
pushf
in
jecxz
xlat
enter
sti
sub
les
aas
dec
bound
movsb
add
mov
or
cmp
pusha
pushf
mov
sbb
int
mov
leave
dec
and
mov
cli
mov
or
int3
ja
cmpsl
jb
mov
in
jbe
fwait
pop
fdivrp
jb
inc
xor
dec
mov
dec
or
or
outsl
icebp
inc
sub
dec
push
dec
push
fwait
pusha
adc
xchg
addr16
sub
adcb
cmp
es
je
dec
rclb
ja
pop
sub
leave
dec
mov
fdiv
in
fsubs
push
in
jle
mov
inc
mov
or
add
popf
xchg
movb
xor
fucomp
xchg
in
rolb
add
ret
sub
fwait
sub
icebp
inc
push
push
