sbb
add
mov
int
ss
mov
js
xor
xor
adc
in
into
sub
pop
push
mov
sarl
out
mov
mov
sahf
subl
aad
icebp
ss
push
loop
cli
addl
xchg
pop
cmp
stc
ss
clc
sbb
push
sbb
xchg
stos
dec
aad
cmc
mov
adc
sub
jb
xchg
mov
sbb
and
imul
inc
push
xchg
or
adc
adc
aaa
sbb
inc
mov
jae
out
fstp
sub
cmc
xor
mov
aad
filds
inc
mov
push
dec
outsl
cltd
mov
loop
inc
shrb
adc
fcoml
add
into
dec
and
lea
jecxz
hlt
into
imul
push
adc
xor
sub
jmp
xchg
mov
cmp
and
pop
cmp
insb
cwtl
daa
pop
ficompl
push
dec
sbbb
imul
sub
sahf
imul
ja
or
push
js
add
stos
insb
ljmp
test
cs
mov
jge
and
jge
out
imul
rcrl
or
loopne
cmp
cli
mov
mov
xor
add
nop
jbe
repz
jg
mov
movsl
iret
pop
dec
cmpsb
in
cld
xlat
mov
mov
scas
jmp
iret
fwait
mov
pop
jns
inc
cmp
data16
testl
xor
inc
cld
mov
or
adc
push
scas
gs
mov
cs
mov
push
xor
movsb
dec
push
dec
add
lods
les
mov
loop
xor
jnp
divl
add
les
push
cmpl
push
stc
mov
xlat
bound
inc
mov
cmc
push
xchg
lods
fs
mov
imul
push
mov
test
imul
fiadds
jo
adc
fistpll
movsb
jo
imul
mov
pop
sub
add
xlat
inc
mov
mov
test
enter
sti
push
adc
cli
adc
ss
ds
push
push
out
xlat
jbe
mov
iret
inc
leave
ret
push
xchg
pop
idiv
mov
jmp
iret
jnp
andps
push
outsb
loopne
sti
ret
out
xor
push
shlb
icebp
lock
cmpsb
stc
add
test
mov
sarl
lock
das
orl
dec
push
and
add
pop
insl
fistps
xor
sub
mov
popa
and
popa
cld
add
std
mov
ds
fwait
cmp
sbb
mov
bound
lret
imul
insl
or
mov
scas
mov
flds
repnz
mov
mov
fldenv
jmp
enter
lds
push
cmp
or
adc
das
sbb
pop
iret
aam
xor
and
addb
push
in
scas
pmaxub
stc
sahf
pop
dec
lods
jg
movsl
adc
jp
arpl
push
and
sub
ja
lret
fdivrp
rcrl
lock
adc
rcll
jno
daa
jnp
sti
arpl
lcall
sar
or
push
lret
inc
and
jae
inc
lret
outsb
lds
push
dec
lcall
insb
xor
es
lock
setns
cmpl
jge
popf
ljmp
mov
ret
xlat
test
daa
sub
push
sbb
jle
fildll
or
push
mov
popf
ret
adc
lods
inc
and
pop
and
pushfw
mov
adc
nop
pop
jnp
add
lods
mov
and
js
jo
cmpsl
xor
dec
and
ficoml
push
rcr
icebp
stos
jnp
imulb
dec
ret
repnz
jge
fs
lods
inc
cs
fucomip
mov
pmaddwd
mov
test
enter
and
int
mov
inc
cmp
movsl
loope
mov
lods
int
cmp
mov
ss
adc
mov
adcb
fldt
xchg
das
mov
ja
push
sti
push
adc
pop
scas
push
xchg
movsb
cmp
xchg
incb
mov
int
pop
mov
stc
and
jg
inc
add
xor
push
inc
or
enter
xchg
mov
and
add
in
and
cmp
sub
lods
pop
and
cmc
ljmp
movsl
or
shll
lret
sbb
add
mov
mov
pop
mov
loopne
cmp
jbe
push
aam
aam
xlat
xchg
fwait
adc
jl
or
fs
jnp
push
push
mov
out
inc
mov
lea
sahf
add
sahf
int
shrl
adc
push
jnp
lock
pop
inc
pop
cmp
xchg
cld
add
cld
popf
sub
test
mov
test
inc
and
sbb
push
lock
add
sbb
fnstsw
lods
dec
xchg
imul
mov
and
and
inc
aam
cld
inc
pop
mov
inc
push
sub
jecxz
enter
fwait
pop
incb
cwtl
fwait
ror
push
mov
mov
mov
fbld
out
inc
dec
lcall
dec
call
cs
push
arpl
push
int
mov
ret
sub
inc
mov
xchg
sti
mov
and
sbb
push
shlb
xor
in
lds
cltd
ljmp
xchg
xchg
push
dec
movsb
push
outsl
mov
ljmp
insb
lods
aam
jle
aaa
jae
jmp
inc
mov
ljmp
inc
call
push
xlat
pop
inc
sub
jnp
push
mov
stc
inc
dec
sub
xlat
mull
rcrl
xchg
cmpsb
lret
test
mov
aam
adc
test
inc
inc
push
fmull
pop
add
pop
adc
add
loope
test
inc
ret
shll
sbb
xchg
ret
icebp
cmp
xchg
popf
repnz
sub
xchg
mov
mov
mov
stos
shrb
push
lods
cli
mov
cmp
aaa
dec
jb
fwait
test
jle
pop
mov
xor
fcomp
xchg
andb
test
jg
add
rorl
out
add
adc
cmp
jo
out
or
inc
test
jne
pop
dec
pop
inc
xchg
in
sub
es
loope
mov
loop
jp
cli
aam
cmpsl
repnz
mov
sbb
jb
inc
mov
out
push
fsubrl
aam
pop
pusha
xlat
cmpsb
das
fwait
stos
adc
test
lock
mov
inc
sub
mov
stos
xlat
sbb
shll
or
push
inc
ficompl
in
out
cmc
and
xchg
iret
cwtl
popf
daa
mov
rol
pop
sbb
add
mov
pop
arpl
adc
test
mov
int
lea
leave
or
loop
adc
jecxz
cltd
cli
push
aam
mov
push
popa
mov
inc
pmulhuw
cmpsl
in
aam
nop
or
dec
lock
and
pop
das
jle
mov
xchg
and
outsl
test
jg
repz
mov
ja
inc
inc
in
pop
add
mov
ss
lods
jne
fdivrl
popa
mov
add
jmp
pop
shrb
test
sub
cli
mov
and
lea
cwtl
adc
dec
out
push
mov
out
sub
sbb
in
dec
pop
adc
dec
sub
cmp
adc
cli
fs
jbe
sub
out
cwtl
cmpl
call
mov
fiaddl
mov
stos
mov
or
ret
pop
fnsave
aas
out
pop
pusha
out
icebp
scas
mov
and
jnp
imul
sbb
sbb
aam
mov
cmp
push
pop
inc
pop
or
cmpsl
and
and
cmpb
test
pop
sbb
lcall
push
jae
movsb
int3
into
push
and
push
pop
das
mov
jl
adcl
fisttps
xor
mov
pusha
data16
out
out
mov
sub
sub
ret
xor
gs
cmp
ds
and
aaa
addb
xlat
outsl
push
out
sub
mov
je
mov
push
xchg
clc
inc
adc
aas
sbb
test
ret
mov
inc
dec
push
xlat
mov
mov
mov
mov
cmpsb
or
or
out
outsl
pop
pop
sub
add
outsb
adc
data16
mov
imull
push
add
repz
sbb
sarb
jne
scas
or
mov
bound
inc
push
fnstcw
gs
pop
mov
imul
add
ljmp
dec
incb
lret
mov
call
fcmovnb
sub
outsb
ljmp
imul
mov
xchg
jno
pop
shrd
loope
int
inc
inc
adc
loop
cmc
in
push
in
rcrb
xchg
fistl
inc
mov
push
leave
into
mov
lock
iret
sbb
add
dec
xchg
push
fdivrl
ret
lcall
rcrl
cmc
cltd
lock
stos
dec
ficoms
call
lods
pop
mov
add
int
fcmovnbe
adc
setae
sbb
in
jecxz
jo
ljmp
arpl
rorb
add
inc
inc
aad
xchg
fbld
roll
cmp
inc
stos
jb
fwait
cmp
push
push
xchg
mov
mov
fbld
jp
rolb
jl
out
ljmp
push
int3
jns
fwait
or
pop
add
andb
sub
daa
daa
jp
enter
sub
add
jge
push
push
push
xchg
repnz
fisubl
jmp
push
adc
not
js
loopne
cmpsb
pop
call
sub
inc
nop
in
mov
inc
loope
std
cmp
outsb
ret
arpl
xchg
pop
or
cmp
dec
sub
sti
add
sahf
mov
orb
push
dec
insl
xorb
fadd
aaa
jmp
ret
pop
ret
mov
dec
rolb
jecxz
div
les
push
and
pop
mov
add
push
inc
xchg
dec
imul
lcall
and
imulb
sub
dec
adc
mov
outsb
lods
mov
jmp
adc
sbb
jmp
or
sbb
mov
call
sub
sub
jnp
cmp
jno
xor
xor
dec
mov
cmp
imul
inc
and
fdivrs
add
pop
or
cmp
inc
loop
test
sub
mov
push
fxch
jmp
test
pop
lcall
jo
push
test
pusha
daa
sub
pusha
pop
adc
sti
push
mov
sbb
push
xchg
dec
fstps
mov
cld
add
sub
ret
out
lods
lods
sub
pop
cmpsl
push
mov
pop
inc
sub
shlb
push
mov
mov
sbb
xor
mov
iret
mov
xchg
fsubr
pop
nop
jb
and
icebp
dec
ret
cmovge
mov
mov
push
pop
mov
pop
sub
inc
jo
cmpsb
aas
xor
cmp
push
sub
pushf
pushf
icebp
dec
dec
pavgw
add
ja
int
inc
scas
frstor
mov
mov
mov
sub
adc
mov
aaa
sbb
inc
lahf
fbld
mov
insb
mov
and
incb
push
mov
pop
aad
imul
fsts
aad
in
pusha
call
pop
xor
ja
push
js
dec
push
mov
sub
adc
xor
popf
jg
sbb
mov
rclb
jo
xchg
inc
push
rorb
jge
add
adc
adcl
push
roll
jno
cmpsl
or
push
push
jbe
loope
mov
repz
mov
and
adc
pop
sub
push
sahf
pop
xor
cmp
pushf
aaa
imul
jmp
sahf
sbb
push
js
fldenv
sahf
mov
and
dec
mov
out
or
loope
popl
loop
dec
push
cmp
lock
and
push
xor
inc
cmp
scas
mov
push
add
push
pop
lahf
out
mov
rcl
cmp
jbe
mov
push
test
lds
mov
in
psraw
add
inc
pushf
orb
sbb
push
mov
jl
xchg
xor
shll
add
mov
mov
push
pop
movb
ret
and
stos
stos
jle
lods
loopne
sbb
sub
jbe
rcr
mov
xor
sti
bound
loop
std
mov
push
pusha
sub
push
clc
stos
test
je
mov
mov
push
movsl
xlat
lea
int
xchg
mov
popa
inc
push
push
pushf
aam
push
jo
into
pop
lock
out
jg
cltd
outsl
repz
jg
sarl
insb
mov
mov
mov
aaa
cmpsl
sbb
aam
mov
or
cmp
cmp
mov
adcb
dec
cltd
dec
in
ret
std
mov
mov
add
sub
lahf
jle
enter
or
and
jbe
and
pop
cltd
lcall
sbb
dec
xor
mov
xor
pop
cmp
jecxz
sbb
clc
xchg
mov
je
mov
outsl
push
pop
stos
ljmp
or
jle
xor
inc
xlat
cli
dec
repz
xor
pop
xchg
cmp
nop
mov
or
jae
leave
ja
dec
movsl
sbb
mov
cmpsl
ret
fstpt
xor
xchg
das
lret
mov
sub
lods
inc
popa
cs
cmpsb
mov
xor
adc
mov
daa
jge
push
jecxz
xchg
hlt
adcb
imul
inc
daa
cmpsb
jb
or
sbb
cmp
push
lret
xor
pop
rorl
pop
mov
rolb
and
add
mov
add
mov
sbb
sub
adc
pop
data16
dec
sub
nop
int
pop
faddl
lahf
xchg
add
sbb
test
lea
push
add
cmp
jne
fldcw
jae
or
mov
mov
test
mov
ds
adc
xor
jecxz
jae
sbb
sub
dec
and
fistps
and
lods
in
pop
in
lods
cmp
mov
inc
mov
mov
xchg
pop
xchg
and
xor
ret
pop
xor
movsb
fisubrl
cmp
lock
sub
xchg
cmpsl
nop
adcl
pop
jbe
insl
jmp
mov
aaa
ds
fnop
xor
cs
or
iret
out
adc
mov
lods
stc
gs
add
sub
bound
pushl
cmpsb
pop
and
xlat
loope
clc
or
pop
cmpsb
out
add
pushf
xchg
data16
or
mov
pop
mov
xchg
in
xchg
pop
jp
out
popf
lock
leave
icebp
adc
mov
pop
das
xor
call
shrb
shrb
or
pinsrw
cmpsb
ss
sbb
mov
mov
ret
dec
mov
dec
or
xor
fsqrt
gs
push
jl
sbb
das
jnp
push
add
icebp
inc
in
in
cltd
sub
pusha
xchg
push
sub
addl
or
insl
or
mov
into
clc
gs
xchg
ret
cmovno
and
nopl
fidivrl
sbb
xor
sbb
loope
jmp
maskmovq
testl
jbe
push
xor
sbb
ret
sbb
mov
dec
addr16
pop
or
jb
outsb
push
outsl
ja
or
xchg
push
pusha
out
sbb
push
adc
xor
adc
pop
scas
ljmp
shl
scas
adc
out
pop
jbe
push
sub
test
imul
cmc
mov
sub
xchg
enter
inc
out
inc
aas
aas
inc
xchg
cmc
adc
mov
push
lret
mov
add
rcrb
xlat
xchg
jo
rcr
xor
lcall
adcl
push
mov
xchg
jbe
outsb
insb
outsl
xor
insb
sub
fbstp
sbb
jge
push
fbstp
jg
enter
xor
mov
cltd
jge
hlt
lds
les
adc
push
in
jb
xchg
cmp
push
push
or
lcall
lods
mov
xchg
add
mov
xchg
or
and
scas
test
jg
cmp
or
test
movsl
cmpsb
mov
lret
cmc
xchg
dec
mov
mov
cmpb
pop
movsb
or
aad
pop
aaa
inc
daa
movsl
dec
movsb
adc
push
inc
ret
roll
dec
jle
into
hlt
mov
arpl
popa
aas
addb
push
sti
cmpb
sbb
jle
dec
push
mov
ljmp
outsl
cltd
js
pop
addr16
insl
sub
andl
lods
mov
shl
or
xchg
pop
jge
xor
enter
out
gs
mov
sbb
outsb
xor
and
inc
cmp
enter
nop
mov
add
icebp
dec
xchg
mov
shlb
inc
push
push
mov
fdivrl
mov
lock
xlat
inc
sub
lea
cmpsl
cmp
in
lahf
das
fimull
sbb
dec
mov
jmp
pop
push
in
cmp
sub
push
pushl
dec
inc
daa
and
sbb
and
shrb
repnz
mov
outsb
push
rol
popa
fidivrs
ja
lods
mov
mov
inc
mov
add
js
outsl
movl
sbb
add
jge
fstps
pop
sub
sbb
imul
imul
or
jl
mov
add
pop
out
stos
and
or
pusha
aas
pop
sub
loope
mov
insl
inc
cmpsb
aas
arpl
je
enter
push
scas
flds
xchg
ret
push
mov
stos
aam
pop
repnz
loope
mov
jle
mov
fwait
in
fildll
xor
mov
pop
icebp
or
push
lods
in
aam
ljmp
push
push
or
repnz
pop
xlat
pusha
std
adc
cmpsl
jg
stc
mov
cmpsl
insl
test
ficompl
arpl
pop
pop
inc
mov
jmp
cwtl
jbe
xchg
and
or
or
ljmp
outsl
push
push
push
mov
adc
add
pop
cltd
mov
sti
push
lahf
imul
adc
pop
pop
and
clc
fs
mov
nop
and
xchg
fsubrl
sub
adc
jbe
mov
push
jae
ss
fbstp
test
cmpl
sub
xchg
sbb
movsb
push
mov
sti
xchg
fistl
cmc
repz
ds
adc
pop
adc
mov
data16
cmp
pop
ret
subb
or
es
lret
jno
lds
scas
add
lret
add
add
mov
ret
xchg
add
movsl
and
lcall
mov
dec
xlat
shll
sub
add
es
mov
lret
jo
inc
into
and
scas
adcl
out
sub
shrb
enter
cmp
xlat
pop
inc
xor
std
cmp
push
or
ret
dec
mov
jne
sahf
imul
imul
test
cwtl
shll
dec
mov
fistps
and
out
push
hlt
mov
push
xchg
aam
xor
lods
xchg
xlat
jl
pop
mov
cli
sbb
dec
pusha
popf
mov
push
lcall
rorb
adc
cmp
lock
or
jg
lods
aaa
push
scas
popf
add
dec
jno
and
int
fcmovnu
nop
push
sub
jle
aas
outsb
aad
cld
xchg
sbb
push
in
rolb
sub
movsl
xchg
les
dec
mov
imulb
push
ss
scas
inc
dec
hlt
nop
add
imull
xchg
mov
subb
das
test
inc
mov
imul
jmp
and
fisttps
aam
test
fstpl
pushf
test
push
arpl
sbb
pop
mov
cmp
addr16
adc
dec
and
xor
xor
lods
mov
ret
xor
sbb
cmpb
in
pop
lea
rcr
fstps
mov
sarb
lea
xlat
mov
mov
jno
ret
mov
mov
fiaddl
jno
ret
cmp
out
addr16
pop
daa
push
fdivs
test
or
dec
cltd
ljmp
repnz
pop
cmpsl
out
insb
cmpsl
sub
fwait
call
push
icebp
mov
rcr
pop
xchg
xor
outsb
ret
and
sub
aas
movb
insl
test
or
inc
aad
push
mov
jmp
jle
cmp
adc
aam
jmp
adc
mov
movsl
daa
shl
lea
out
add
add
jle
mov
ss
fidivs
mov
jg
jnp
dec
xchg
dec
imul
dec
xlat
lcall
xor
icebp
subb
shr
mov
or
loop
push
jae
jmp
or
xchg
add
adc
xchg
icebp
testb
xchg
jl
sbbb
stos
pop
mov
mov
es
inc
sbb
inc
jl
or
jp
popa
je
mov
jnp
sbb
xchg
lret
mov
adc
xor
push
fld
jbe
es
xchg
out
inc
bound
or
aas
int3
push
mov
sbb
nop
cli
pop
xchg
add
arpl
dec
add
mov
pop
or
in
jbe
push
mov
mov
ficoml
into
inc
lcall
movsb
les
out
and
push
in
addr16
sub
push
pop
jb
pop
mov
leave
dec
pop
sti
dec
fnsave
popa
aam
fsts
mov
or
cmp
decl
mov
mov
stos
add
test
sub
cld
adc
out
mov
push
gs
add
test
and
shll
mov
aas
test
sub
cmp
movsb
mov
mov
push
sbb
sub
jns
xchg
dec
sub
rcrb
cmp
adc
pop
cmpb
dec
out
jecxz
test
xlat
jnp
pop
or
daa
sarb
add
scas
and
sbb
sbb
add
ffree
xchg
fstpl
add
xchg
loop
or
push
mov
jmp
adc
fmul
fwait
dec
nop
rcrl
dec
push
imul
mov
scas
sub
sub
sub
roll
dec
mov
cmp
pusha
adc
mov
bound
dec
test
or
xlat
add
jb
jbe
dec
ret
in
lods
cmp
fidivl
sbb
or
stos
mov
sbb
add
stos
ss
lods
mov
cli
xor
cltd
insb
fwait
adcl
aad
dec
iret
mov
rcr
iret
add
xchg
mov
mov
mov
push
leave
or
adc
lcall
push
push
in
lret
std
lcall
dec
das
fadds
xchg
test
loop
iret
fildll
insl
mov
js
fildl
mov
fstl
push
xchg
pop
sbb
xor
lods
inc
scas
fnsave
push
movsl
lahf
pop
xchg
mov
ja
inc
or
stc
xlat
aad
jns
hlt
iret
test
and
xchg
mov
push
xor
cltd
imul
fbld
fs
jmp
lcall
or
fcmovu
sub
adc
sbb
mov
cltd
fcmovnb
mov
dec
mov
dec
fsubr
stos
ret
fwait
push
addr16
mov
aas
dec
shlb
xor
push
dec
std
orl
into
imul
or
sbb
test
mov
xchg
loope
out
fcmovnu
and
mov
fidivrl
shr
and
cwtl
mov
sub
jb
xor
push
cmp
out
and
xchg
xor
adc
dec
out
mov
movsl
arpl
out
adc
lods
jns
fstps
and
adcb
inc
dec
fadd
jno
sub
push
outsl
mov
loop
mov
xchg
pop
sbb
jne
mov
dec
insl
ja
xor
shll
jbe
sbbb
lahf
xor
aaa
fnstsw
ljmp
add
fchs
js
nop
fldcw
insl
push
neg
adc
aaa
xchg
popa
fcoms
xor
jecxz
push
aaa
push
sub
cmp
dec
cmp
push
dec
out
mov
dec
and
inc
subl
jle
mov
cmc
jle
jae
sub
mov
inc
push
and
add
jmp
xor
fldl
cmp
add
sbb
pusha
in
adc
mov
cmc
fcomp
mov
repz
cmp
and
lods
dec
js
dec
out
fadd
aas
dec
inc
push
push
cwtl
pusha
pop
imul
xchg
inc
sbb
inc
data16
adc
adc
or
mov
inc
adc
dec
dec
lds
test
lds
jno
add
not
fs
sbb
mov
sti
arpl
cmp
jmp
add
std
mov
ror
and
push
lcall
insl
or
add
clc
in
ret
aaa
or
scas
adc
popf
push
push
test
adc
ret
shr
psllq
std
jbe
out
jg
in
insl
decl
enter
push
insb
lret
rol
fildll
and
fcmovnb
cmp
mov
fwait
lea
pop
sbb
fucom
lds
repnz
add
mov
fstpt
jb
mov
ljmp
daa
mov
or
cwtl
jl
inc
pop
xor
outsl
sub
arpl
jb
hlt
inc
dec
cli
lock
dec
pop
clc
loopne
sbb
int
or
adc
shrb
pop
adc
cmp
lea
jnp,pt
xchg
sbb
dec
xchg
imul
addr16
inc
mov
fidivs
pop
push
mov
add
jecxz
adc
bound
stos
push
daa
and
adc
std
mov
icebp
aas
shlb
xchg
push
sti
add
pop
gs
daa
push
mov
loope
call
repnz
ss
inc
stos
jne
adc
aas
jmp
sbb
jle
mov
popa
mov
fwait
adc
int
scas
lret
dec
test
jp
cmpsl
mulb
pop
mov
push
xchg
add
loop
sub
mov
pop
sub
lret
push
jae
mov
addr16
and
lds
dec
add
push
sub
dec
add
mov
lret
scas
pop
and
xchg
mov
jae
outsl
test
cmpsb
cmp
fwait
daa
fisttps
scas
fwait
push
outsb
pop
xor
sub
dec
aam
scas
subl
cli
mov
das
repnz
jo
arpl
sub
out
xchg
bound
fsubrl
push
dec
daa
cmp
cmpsl
jnp
inc
mov
push
ds
mov
icebp
xor
push
xor
hlt
clc
popa
mov
test
or
pop
mov
loopne
jne
lods
adc
sti
jp
mov
rorl
inc
pop
mov
aad
aad
push
pop
daa
pusha
add
jns
pop
pusha
jae
add
inc
repnz
adc
lea
adc
sbb
lahf
fistl
insb
out
in
dec
jbe
movsb
inc
dec
mov
mov
dec
mov
push
imul
sbb
fists
repnz
lock
add
cwtl
mov
jle
xor
cli
ret
icebp
sbb
out
mov
lret
movsl
sbb
cltd
mov
fists
push
imul
lds
ss
dec
sub
xor
jnp
gs
mov
loopne
clc
lods
dec
enter
test
add
push
cmp
das
push
enter
scas
add
shlb
sbb
loopne
and
pop
loopne
pop
mov
push
sbbb
lea
and
das
jge
fs
arpl
fdivr
movsb
test
add
mov
movl
in
fcomip
fwait
push
push
in
mov
mov
dec
rorb
pop
jnp
mov
mov
dec
add
mov
sub
cmp
or
sbb
outsb
pushf
testl
loopne
mov
xchg
jp
clc
sbb
pop
jnp
iret
push
cmp
loopne
cmpsl
je
inc
pusha
mov
and
or
sbb
pop
pop
addr16
inc
movsb
sbb
call
pushf
out
cwtl
dec
inc
adc
out
pop
jge
lock
fsubr
or
push
push
or
sbb
gs
pop
leave
push
push
icebp
sub
movsl
test
int
scas
sub
fists
sub
data16
pop
adcl
dec
pusha
sbb
jle
pusha
add
sahf
imull
arpl
sbbb
cmpsb
jbe
scas
cmpsb
loopne
mov
mov
shr
cmc
mov
frstor
and
cli
mov
mov
push
dec
js
sahf
aad
xlat
out
cmp
and
push
sti
inc
iret
xlat
adc
in
sub
outsl
jmp
jg
push
stos
popa
push
fbstp
out
mov
mov
js
mov
mov
iret
mov
nop
lahf
sub
ljmp
xor
dec
xor
push
lea
add
pop
jmp
xchg
and
je
pop
test
icebp
fstpl
movsb
sbb
and
shlb
xlat
mov
mov
cmp
sub
movsl
mov
popf
lock
and
xor
outsb
das
push
out
mov
mov
aaa
pop
jo
dec
stos
push
pop
mov
aam
sbb
rcll
sarb
arpl
jo
mov
lods
test
sub
into
dec
dec
scas
xor
sub
adc
loope
lods
sbb
sub
arpl
incl
fmulp
adc
loop
pop
orb
lods
outsl
movups
rcll
jmp
mov
iret
roll
daa
lahf
rclb
btr
mov
popa
jae
mov
sbb
mov
mov
iret
arpl
scas
xlat
cmc
mov
sbb
pop
arpl
xchg
addr16
push
dec
xchg
mov
loop
pushf
inc
xchg
xchg
arpl
pop
clc
sbb
add
ljmp
mov
ja
in
push
cltd
call
push
jne
rcll
fmuls
aam
jb
les
int3
mov
dec
rorb
mul
insb
ja
xor
and
in
mov
je
popf
ss
xlat
xchg
fistl
movsl
and
jbe
jns
inc
push
cli
add
popa
add
les
adcb
pop
dec
xlat
jge
negb
push
cmpsl
popf
dec
adc
xor
test
add
out
aad
adc
dec
or
in
pushf
leave
pop
pop
jecxz
or
icebp
cmp
mov
pusha
pop
scas
xchg
hlt
sub
mov
jo
stos
daa
mov
lea
in
cmp
sbb
andl
ja
out
inc
mov
in
jno
insb
pushf
lds
inc
into
and
sbbl
sub
mov
xchg
push
jecxz
mov
nop
outsl
mov
or
adc
xor
shll
push
rorb
pushf
lret
jl
mov
push
cmp
cld
mov
cmp
lret
in
shrb
pop
loopne
call
orb
in
mov
push
aam
insb
aas
pavgb
in
cmpsl
ja
dec
subb
outsb
and
enter
cmc
scas
mov
loop
gs
or
jbe
lds
cmp
dec
push
sub
jnp
push
adc
jnp
test
mov
jns
push
push
out
in
dec
push
mov
int
es
push
xor
imul
aaa
mov
xor
lcall
xchg
jne
inc
mov
sbb
push
lcall
dec
outsb
cmp
rcl
loopne
leave
xor
pop
mov
fcomip
cwtl
outsl
or
pop
icebp
test
imul
jp
ljmp
xorb
mov
in
sub
lret
add
stc
mov
or
cmpsb
cmp
cmp
rcrl
sbb
data16
add
pushf
popa
bound
xor
dec
and
sub
dec
and
test
dec
xor
cmp
data16
mov
cmp
adc
mov
fistps
test
or
sbb
push
sub
bound
fbstp
or
mov
lea
push
js
push
aas
inc
in
shl
mov
fiaddl
int
xchg
frstor
mov
jle
pop
inc
imul
divl
add
add
adc
leave
ffreep
call
les
es
dec
icebp
ret
dec
inc
scas
mov
push
not
add
sbb
sbb
push
jnp
popf
dec
pop
sbb
aam
xor
sahf
xchg
mov
insl
push
xlat
sub
jnp
test
adc
cmp
sahf
add
loop
arpl
xlat
mov
cld
fsubrs
icebp
sbb
push
inc
sub
inc
pop
insb
lahf
les
inc
ljmp
rolb
movsl
mov
jnp
jge
dec
int3
inc
dec
test
xchg
loopne
in
jmp
addr16
outsl
aaa
shll
and
mov
mov
jge
aam
imul
adc
add
or
mov
dec
mov
mov
push
fwait
ljmp
mov
aaa
xchg
mov
push
push
dec
inc
test
addr16
andb
xor
jge
mov
sarb
inc
push
popa
add
lret
pop
sub
or
clc
aad
mov
jmp
add
or
sbb
add
mov
add
pop
pop
sbb
add
test
push
lret
pusha
insl
sbb
push
xchg
jl
xor
out
jae
push
lcall
loopne
repz
ret
mov
outsl
push
icebp
outsb
aaa
pop
cmp
xchg
cmc
pop
lock
cwtl
gs
push
mov
out
aaa
push
mov
fwait
jg
and
xor
sbbl
rol
push
xchg
push
negl
mov
sahf
lahf
dec
js
add
dec
and
mov
cmp
outsb
mov
xchg
and
push
shr
and
popf
clc
lcall
iret
rclb
cld
jne
cmc
cmp
pop
stos
cmpsl
lret
in
and
leave
andb
jecxz
xchg
rorl
loopne
inc
cltd
mov
popa
xor
push
out
lods
pop
cli
or
push
or
shl
xchg
mov
push
enter
lea
xchg
stc
clc
pop
jne
arpl
cmp
jb
jns
cmpsb
pop
sbb
mov
shll
mov
sbb
loopne
int
cmc
mov
cltd
lcall
inc
dec
pushf
negl
sbb
jno
mov
adc
fisubl
lods
mov
push
mov
jl
sti
cwtl
repz
mov
shrl
loope
pop
sbb
cmp
loopne
mov
xor
pop
out
inc
and
or
lahf
and
xor
sub
inc
sbb
dec
fstps
jecxz
and
outsb
inc
mov
stos
xchg
sarl
test
fimuls
pop
loope
lcall
xchg
adc
jae
and
push
movsb
mov
sbb
aam
fcomp
mov
js
add
jbe
mov
xor
movsb
in
xchg
adc
int
pop
stc
mov
pop
enter
xchg
xchg
jno
enter
pusha
mov
aam
sahf
insl
aam
sbb
inc
mov
scas
stos
xchg
ret
push
xchg
xlat
and
xchg
jmp
mov
sbbb
xchg
cmpsl
popf
cli
xor
cmp
xchg
pushf
fildl
fs
mov
sub
xor
lods
pushl
mov
sub
cmc
mov
adc
pop
and
xor
or
sti
push
push
jne
xchg
dec
sbb
mov
test
and
pop
in
push
in
xor
pop
into
xchg
xchg
mov
lea
nop
stc
and
adc
pushf
xchg
jbe
dec
fsubl
popa
push
push
cmpsb
lods
pop
ss
jmp
ss
and
lods
dec
push
scas
jl
mov
stos
aaa
stc
into
lods
fsts
iret
aam
iret
xchg
adc
xlat
int3
arpl
xchg
shrb
enter
divb
mov
jo
rcll
or
sbb
mov
jb
fsubs
push
adc
mov
push
mov
lret
mov
pusha
mov
sbb
pop
pop
mov
jg
pusha
xor
and
sub
fiaddl
fwait
jo
popa
jmp
mov
adc
push
jnp
arpl
mov
rclb
roll
imul
pop
xchg
or
cmpsl
dec
pop
sub
ja
mov
push
out
lahf
gs
xor
ljmp
lds
shll
shll
xchg
pop
cmc
push
sbb
jnp
cmp
push
xor
inc
jo
popf
cli
sarb
xorl
push
inc
jo
jno
dec
in
xchg
mov
sbb
mov
xchg
ss
sub
sbb
xor
xchg
cld
loope
xchg
call
nop
dec
sahf
inc
repz
sbb
in
mov
xor
test
push
cmp
sub
rorl
pusha
negb
inc
ja
push
cmp
cmpsl
loop
out
push
test
orl
or
addr16
out
mov
adc
push
sub
bound
mov
inc
cmp
ja
ret
pop
shrb
sbb
xchg
pop
mov
aas
mov
imul
fidivl
inc
xlat
dec
fistpll
es
test
fwait
stc
aaa
iret
ret
test
jae
mov
jo
mov
rcl
in
push
mov
jmp
dec
pusha
jns
adc
mov
jmp
lret
out
mov
movsb
xchg
mov
xchg
loop
mov
mov
rcr
arpl
fstpl
sub
jb
call
pop
fstpl
cmp
scas
mov
lahf
pop
push
movsl
in
xchg
enter
in
ljmp
mov
insb
out
shlb
or
lock
movsl
outsl
xor
xlat
imul
pop
imul
xchg
cltd
pop
stc
mov
insb
or
sbb
sub
stos
mov
stos
insl
inc
xchg
iret
lret
and
or
xor
or
mov
and
mov
clc
out
xor
sbb
icebp
ret
and
adc
cmp
iret
jecxz
inc
pop
aad
cmpsl
js
sub
push
jmp
pop
fisttps
xchg
lcall
mov
xchg
in
scas
adcl
pop
lcall
imul
repnz
and
enter
call
std
sbb
xchg
cmpsl
xchg
lret
cmc
pop
lea
push
scas
cmpsb
mov
movsl
int3
leave
jnp
push
dec
push
mov
jns
out
push
xchg
mov
push
push
jle
or
loop
enter
sub
mov
rcll
dec
dec
sbb
frstor
and
mov
int
xchg
xor
dec
xor
pop
jo
enter
std
dec
dec
pop
out
add
fsubrl
aam
jecxz
xchg
cmp
movsb
jmp
jp
scas
add
loop
aaa
push
push
std
mov
std
xor
cs
iret
mov
adc
pop
aad
jns
and
subl
push
scas
and
and
lods
mov
es
and
fdiv
mov
pop
scas
push
jg
fcompl
into
fldenv
lahf
test
or
pop
lahf
iret
int
stos
and
negb
stos
inc
pop
dec
or
mov
push
jbe
in
enter
xor
mov
sub
jbe,pt
cmp
xor
mov
jno
addb
inc
add
inc
sbb
cmp
lret
mov
test
fcomip
and
or
sbb
in
dec
jbe
popa
jge
push
mov
subl
adc
ja
add
cmp
dec
lods
ja
xchg
ret
sarb
ret
push
ss
jmp
mov
mov
loope
lock
lret
mov
jp
jnp
pushf
int
out
cmp
scas
outsl
mov
je
mov
dec
shlb
ror
sub
and
jecxz
notb
out
cli
cmpsb
sub
add
add
xor
mov
or
aam
add
cmp
sbb
pop
outsb
fcoml
push
fwait
in
lret
cltd
xchg
fldcw
xor
das
cwtl
push
hlt
nop
into
xchg
pop
push
push
popa
or
dec
adc
lods
test
cmp
gs
popf
or
adc
fisttpl
mov
and
inc
inc
adc
push
aam
cwtl
pop
sbb
scas
nop
decl
fistps
out
pop
lock
enter
add
inc
jl
std
cmp
shrb
enter
scas
mov
pop
lcall
imul
and
mov
stos
int3
cmpsl
shlb
repnz
cmp
gs
out
repnz
or
bound
or
rorb
jmp
push
pop
cvttps2pi
jno
inc
test
lock
or
je
outsb
cmp
ret
pop
jl
shlb
js
into
sbb
repnz
out
aas
fistl
fcoms
shll
lds
fdivs
add
sbb
push
dec
fisubrs
mov
mov
cmc
jns
cli
inc
cli
jmp
jmp
mov
mov
pop
pop
inc
mov
clc
sbb
push
es
sti
std
pop
das
test
fiadds
pop
fstps
push
mov
jae
lahf
cmpsb
add
cmp
int3
sbb
mov
idivb
clc
pop
test
addr16
lea
sbb
lods
std
orl
es
push
test
mov
cmp
jnp
jb
leave
out
call
mov
jmp
mov
out
movsl
pop
inc
add
outsl
stos
lcall
rol
rclb
adc
loop
jb
popa
sub
dec
test
inc
push
jne
arpl
and
mov
jle
stc
dec
cmp
cmpsl
xorb
xor
mov
jg
sub
or
mov
sub
rcrl
jge
inc
dec
movsb
dec
lret
loop
ds
in
into
push
jbe
pop
cmc
in
lret
add
push
jg
add
jb
cmp
xchg
mov
fcomp
lods
not
push
mov
inc
dec
enter
aam
pop
push
xchg
lds
push
mov
pop
aaa
insb
loop
aam
jo
mov
add
rol
out
sbb
fsubl
jge
pop
fistpll
pop
adc
out
jns
leave
mov
aaa
sub
dec
dec
lcall
push
rcll
mov
push
dec
xchg
test
or
push
adc
sahf
std
pop
fwait
jne
cmp
cmp
mov
in
scas
in
dec
aam
sbb
addr16
scas
out
cs
xchg
mov
xchg
fcoms
jge
dec
cmc
cld
in
scas
call
xchg
data16
and
stc
bound
out
xchg
aam
jns
sti
out
loop
int
jno
sbb
sub
sub
cld
cmp
stos
pushl
push
roll
nop
jecxz
inc
stc
mov
xchg
lods
std
mov
xlat
fdivl
jmp
and
push
cmpsb
fidivrs
nop
mov
cmp
mov
imul
xor
popa
and
pop
inc
jl
imul
mov
push
pusha
testl
xchg
or
call
das
nop
mov
pop
popa
addr16
xchg
fmuls
shlb
jo
sub
sbb
mov
jo
mov
cltd
into
ficoml
sbb
xor
mov
push
cmc
inc
in
lcall
add
mov
cld
adc
fcmovne
push
pop
stc
add
rorb
inc
sti
push
shlb
push
outsb
add
addr16
push
sahf
fadds
fstl
mov
int
xchg
pop
adc
ret
sbb
fisttps
or
icebp
stc
dec
ss
in
mov
adc
inc
scas
dec
and
xor
repz
getsec
sub
jl
rorl
sub
adc
shl
or
inc
mov
mov
icebp
lahf
dec
mov
mov
mov
shrl
insb
jp
out
adc
xor
shrb
lods
cli
or
test
pop
ret
rcr
lods
and
or
imul
mov
fwait
movsb
mov
addl
ja
in
pop
mov
push
sbb
cmpsb
test
add
cwtl
ds
push
inc
fnsave
mov
lods
sbb
jecxz
push
stc
cmc
out
lcall
cs
pop
mov
je
pop
dec
leave
les
sahf
jne
popl
mov
sub
pop
cmp
xchg
jbe
lret
scas
cmp
xchg
jecxz
pop
cmpsl
mov
imul
ror
xchg
cltd
rolb
push
dec
test
lods
movsb
or
mov
mov
inc
or
pop
mov
and
adc
or
inc
or
sub
call
adc
lods
aam
mov
lock
inc
in
push
daa
xchg
cmpsl
and
inc
jno
icebp
sar
push
adc
sar
pop
sub
repz
or
pop
cld
imul
xlat
lods
fstl
push
cmp
icebp
fists
loope
repnz
xor
mov
je
cmp
sbb
dec
lret
adc
pop
mov
dec
test
jmp
sub
jns
ljmp
testb
cwtl
popa
lods
xlat
inc
dec
test
inc
or
pop
stos
pop
cmp
xchg
and
push
adc
stc
jbe
xchg
aad
and
adc
jno
add
cmpb
cmp
ret
arpl
int
and
cli
mov
les
mov
arpl
push
sbb
out
aaa
fisttpl
sub
mov
stc
mov
jmp
and
xor
cmp
out
xchg
sub
outsb
ss
mov
je
push
rolb
lods
or
pop
in
pop
lcall
ficompl
int3
pop
xchg
dec
gs
dec
xchg
loop
sub
stos
int
mov
inc
adc
cmp
cmp
orl
aaa
mov
ja
mov
lret
xchg
inc
add
sti
mov
cmp
mov
test
mov
cmpsb
mov
inc
arpl
std
in
lock
lds
pop
push
adc
sbb
setle
xchg
push
mov
mov
rcl
test
out
add
andb
adc
fnstcw
pop
mov
and
jmp
aam
out
xor
jmp
es
adc
ret
fisubl
xchg
fprem
or
stos
scas
ror
loope
pop
mov
sbb
push
mov
ret
push
in
jge
mov
mov
ja
pop
out
ror
or
add
ffreep
cli
aaa
cld
in
lahf
pop
xor
dec
out
mov
or
shlb
mov
inc
pop
add
inc
cltd
rcrb
mov
add
xor
push
mov
shl
fcoms
fistps
fmull
stc
cltd
sbb
je
ja
pop
sbb
pop
leave
iret
xchg
pop
mov
imul
sbb
dec
fistpl
adc
mov
rolb
pop
dec
loope
test
aad
push
inc
shlb
filds
sbb
push
das
push
pop
push
sti
jp
fdivrs
push
call
and
adc
push
rorl
xor
loop
data16
pop
in
xchg
mov
jg
mov
or
xchg
popa
jmp
int
sbb
push
xchg
cmpsl
ss
pop
cld
inc
jb
xchg
pop
aam
int
xor
arpl
lock
and
xchg
in
xorl
nop
xor
loopne
loope
and
sub
jno
lret
cmpb
jecxz
sub
pushf
dec
sub
cmp
mov
sarl
sub
push
xchg
dec
xchg
fwait
repz
push
ret
push
sti
cmpsl
hlt
lods
test
clc
xchg
imul
or
out
push
int
in
pop
sbb
mov
bound
jns
hlt
arpl
outsl
and
aaa
int3
sbb
cld
mov
mov
stos
and
jo
sbb
jne
sbb
and
scas
lret
push
or
fstl
mov
decl
pop
lods
popa
clc
adc
movsb
nop
fisttps
push
dec
or
cmpsb
inc
daa
fwait
shll
push
scas
mov
ds
add
lods
dec
pop
pop
out
push
and
pop
es
dec
inc
sub
mov
sub
push
gs
lcall
mov
loop
int
clc
lock
jle
xchg
ljmp
das
idivl
sub
sub
bound
cmp
xchg
sub
adc
shrl
cld
add
insb
dec
hlt
das
shl
cli
lcall
popa
sbb
sbb
stos
pop
and
pop
pop
movsb
xchg
xor
mov
mov
mov
xor
adc
hlt
std
insl
ss
xchg
scas
scas
sub
pop
cli
inc
mov
fists
push
aas
lods
and
mov
cmpsl
je
mov
jne
stos
sbb
sub
loop
dec
adc
sub
mov
nop
pop
shll
std
mov
cmpl
xchg
outsl
jecxz
cmp
dec
dec
inc
sbb
mov
pop
adc
mov
movsl
int
and
aas
stc
inc
mov
adc
mov
lret
loope
jae
ja
mov
popa
and
fstpt
cli
xor
or
movsl
rcrb
and
sub
dec
pop
jbe
dec
or
in
lock
mov
and
mov
aam
neg
cmp
mov
imul
sti
and
jno
pushf
cmpsl
into
les
lcall
mov
push
std
outsl
ljmp
aas
rcrb
cwtl
les
cmc
inc
out
nop
jbe
in
lret
mov
or
pop
xadd
mov
adc
stos
gs
daa
js
aaa
adc
loopne
clc
and
fbstp
sbb
dec
dec
and
xor
jne
nop
rcrb
pop
andb
and
xchg
push
pop
pop
dec
test
xorl
jle
xor
mov
cmp
mov
sbbl
negb
jmp
cmp
xchg
stos
stos
test
iret
cmpl
dec
or
es
loop
in
daa
jb
sub
into
sub
idiv
cmpsl
subl
lret
push
xlat
xchg
jge
shrl
dec
es
pop
pop
movswl
cmp
into
push
negl
mov
jns
and
sbb
popf
iret
jae
lahf
shlb
sub
mov
popf
adc
fwait
test
lods
mov
mov
pop
jb
mov
dec
das
scas
dec
dec
push
push
pusha
insb
adc
jbe
mov
out
decb
mov
push
cmc
pop
leave
lret
mov
jecxz
sarl
mov
pusha
and
or
test
aas
or
add
repnz
xchg
sbb
inc
adc
xchg
ret
je,pt
sub
js
cmp
xchg
mov
int3
jnp
fcoml
insl
pop
mov
fidivs
hlt
stos
sub
mov
std
iret
rclb
int3
pusha
adc
call
gs
sbb
iret
dec
ja
cltd
mov
adc
mov
adc
and
push
mov
into
loopne
mov
xor
loop
jle
in
lods
and
rolb
shlb
inc
adc
mov
pop
cmp
shl
and
lods
mov
ja
insb
repnz
divb
nop
decb
mov
lds
nop
pushf
lock
and
test
and
popf
mov
out
jg
xor
stc
into
fs
bound
iret
cmp
pop
loop
jae
pop
fcmovnu
mov
movsl
sub
jmp
jnp
mov
js
les
stos
and
lock
or
or
xchg
mov
sbb
inc
sub
fs
aas
aaa
enter
cli
ds
pop
fdiv
dec
popa
sti
arpl
dec
sub
sbb
mov
mov
pop
out
xchg
xor
jb
scas
imul
or
sbb
shr
movsl
int
and
mov
sbb
cld
sbb
cmp
adc
mov
adc
je
pusha
icebp
jge
sbbl
mov
inc
push
test
loope
adc
out
lret
test
pop
mov
movsb
add
imull
lcall
sahf
in
push
pop
movb
ljmp
ja
jecxz
xor
push
pop
cmp
or
mov
push
popf
cs
fstpl
mov
inc
fldcw
xor
add
lret
jmp
in
mov
jo
loopne
push
jmp
inc
pop
and
push
iret
cmp
loope
adc
icebp
sbb
xchg
mov
push
add
dec
cwtl
jns
aas
mov
xlat
cmp
test
pop
xchg
rolb
cli
or
lcall
daa
leave
xchg
push
and
js
pop
mov
jno,pt
push
ret
cwtl
imul
test
sahf
mov
aad
sbb
mov
nop
popf
fnstsw
lret
scas
sbb
cmp
popf
push
dec
push
xlat
arpl
test
mov
dec
out
mov
jge
and
inc
add
std
dec
xchg
imul
jmp
pop
adc
jp
imul
push
arpl
jb
add
loop
popa
mov
in
push
rcrb
fnstsw
lcall
stos
fwait
shll
and
lret
xor
pop
jns
ljmp
jns
pop
and
and
aam
mov
sub
das
jge
mov
sbb
push
int
ret
sarl
ja
orb
lea
inc
mov
cmp
scas
scas
sbb
cmp
jo
insb
imul
push
int3
arpl
inc
popf
push
cltd
shll
inc
les
pushf
sbb
or
cltd
ret
mov
adc
inc
cwtl
movsl
pushf
cmp
lret
jb
inc
xchg
pop
mov
pop
jno
dec
ja
mov
push
mov
dec
lods
shlb
shlb
repnz
imul
addr16
mov
lods
rcrb
lods
add
imul
rcr
loop
sub
inc
push
mov
call
xchg
arpl
divl
jnp
xor
mov
orb
jns
pusha
fwait
fs
int
js
cld
inc
xchg
mov
pop
mov
xor
lahf
shr
hlt
fmul
add
btc
scas
out
js
in
or
les
dec
add
pop
cwtl
cs
hlt
push
cmc
sti
pop
jecxz
jge
or
dec
add
sbb
xchg
leave
xchg
xchg
dec
push
add
mov
iret
cld
push
scas
cmpl
cwtl
or
push
js
jne
sbb
push
divb
add
sbb
out
and
mov
jbe
jg
fnsave
orb
ds
cs
leave
sbbl
mov
xchg
xlat
ljmp
das
add
mov
enter
xor
rcrl
or
ja
lock
lods
leave
inc
int
jecxz
xchg
repz
xor
sbb
cmpsb
sahf
xlat
lea
xchg
clc
inc
xor
cld
sbb
xchg
sub
mov
mov
dec
push
mov
jbe
xlat
and
enter
jge
roll
mov
and
aam
decl
mov
push
pop
sub
inc
shll
sbb
jg
cli
les
adc
pop
lods
stos
push
add
fldl
push
add
and
add
in
addr16
stos
cli
mov
or
arpl
sbb
mov
push
sub
xor
push
mov
xchg
xor
ss
pop
sbb
dec
cmp
pop
addb
or
pop
cmp
sub
lret
in
cmc
imul
mov
in
scas
dec
cmc
pusha
loop
daa
push
pop
push
xor
in
dec
gs
mov
and
jle
xlat
cmp
mov
or
pushf
and
jl
fneni(8087
mov
xchg
arpl
inc
cmp
and
pusha
fsubrl
push
mov
sub
inc
rcrl
jb
lock
or
xlat
hlt
adc
adc
dec
shl
mul
lret
sbb
rcrb
hlt
cmpb
fst
cltd
add
idivl
cld
jmp
movsl
push
jns
push
enter
or
or
mov
jle
pop
cs
stos
stc
mov
add
inc
fimuls
popf
rclb
sbb
cmp
shl
cli
loop
cmp
jne
sub
jecxz
in
cld
xor
nop
cmpsb
xchg
subps
dec
aas
adcl
sbb
imul
mov
stos
ret
popf
cmp
test
push
int
dec
mov
test
imul
arpl
fsubrs
das
fstl
pop
sbb
mov
stos
mov
sub
and
aam
dec
cmovne
ljmp
mov
mov
add
mov
and
mov
inc
rcrb
icebp
std
rcrb
jle
sub
jg
and
push
int3
loopne
mov
xor
push
cmp
inc
pop
lods
mov
out
pusha
fisubrs
js
addr16
pusha
js
out
jmp
leave
test
sbbb
jle
ret
adc
lcall
or
jae
or
mov
loope
mov
mov
pop
lds
or
cwtl
adc
adcl
push
std
dec
repz
lcall
push
mov
pop
lcall
insb
or
inc
subb
jnp
shr
adc
icebp
inc
lods
lea
mov
leave
aas
mov
lds
dec
nop
mov
add
xor
dec
dec
xor
jnp
add
popf
xor
sbb
mov
and
push
dec
stos
mov
and
mov
rdmsr
std
jp
inc
mov
lret
imul
std
push
aas
int3
mov
mov
mov
push
or
in
dec
mov
xor
stos
and
xchg
jecxz
les
daa
mov
out
mov
push
mov
cmc
aad
dec
cltd
xor
add
rclb
mov
jge
test
jb
and
pop
xor
call
out
in
add
dec
cmc
push
or
mov
mov
fdivr
icebp
std
xchg
mov
out
push
dec
fdivl
inc
sub
push
jecxz
out
xor
les
movsb
or
in
jp
push
loop
sub
mov
push
sub
outsb
jle
inc
mov
xor
push
shll
mov
aam
jnp
sahf
cmp
jbe
enter
in
sub
mov
push
sahf
arpl
daa
add
ficoms
sub
xor
xchg
cmpsb
xor
jo
lds
leave
adc
iret
xor
xchg
or
pop
xor
addr16
fisubl
xor
cmp
fcmovne
push
and
xor
jnp
imul
pop
xchg
sbb
dec
and
out
or
jl
jg
int
sbb
cmpsb
das
push
mov
cmp
pusha
dec
cmpsl
sahf
out
andl
sub
shlb
clc
div
je
mov
xchg
push
insl
xchg
mov
sub
cltd
xor
pop
jbe
dec
aas
sub
int3
notl
inc
jnp
out
leave
mov
or
mov
jmp
dec
testl
pop
jp
lcall
mov
sub
jne
xchg
sub
cs
popf
mov
out
add
inc
and
aaa
aam
sbb
stos
mov
sub
frstor
or
insb
jbe
pop
test
sub
fstps
lods
sub
lods
or
push
xor
pop
cmpsw
mov
mov
inc
and
pop
stos
cltd
pop
sub
mov
or
adcl
mov
mov
mov
jnp
jecxz
loopne
mov
outsl
ss
jecxz,pt
mov
idivl
loopne
cli
or
jmp
test
xchg
pusha
adc
inc
mov
fcomip
pop
mov
push
push
mov
jle
dec
sub
jns
jb
int
sbb
sbb
dec
push
jmp
movsl
mov
aas
jp
mov
mov
pop
das
cs
mov
add
or
mov
jecxz
cli
add
lds
dec
mov
xor
iret
clc
push
in
cmpsl
mov
test
cmp
stc
test
cmpsl
rcll
lret
test
sbb
test
lods
push
out
sbb
add
pop
mov
jo
data16
xchg
dec
leave
int
adc
enter
cld
in
inc
addl
enter
sub
popf
jp
push
pop
ja
in
xor
add
lcall
mov
push
pmulhw
mov
out
bound
rol
jo
data16
dec
test
mov
adc
xchg
outsb
inc
testb
mov
dec
jns
iret
ret
mov
mov
push
js
testb
or
pop
mov
icebp
inc
out
xlat
sbb
cmc
cli
aaa
dec
jb
mov
cmp
data16
cmp
sub
test
imul
ret
pop
daa
lds
jge
mov
pop
xor
pop
cmpsb
outsb
sub
pop
bound
jecxz
cmp
ss
jmp
sub
and
push
and
sub
fnstcw
xchg
cmc
mov
xchg
loop
jp
stos
mov
cmc
lret
cmp
aaa
hlt
jge
xchg
xchg
pop
fsubl
or
pop
fdiv
mov
mov
cmc
push
xor
dec
mov
jge
adc
shrb
rcl
mov
cmc
iret
xlat
mov
pop
movsb
sub
imul
repnz
and
fstl
inc
jl
ret
int
adc
mov
lods
add
nop
jmp
in
adc
jns
mov
mov
in
add
mov
push
inc
dec
cld
int3
fstps
mov
xchg
xor
pusha
scas
jp
out
jne
sub
fs
test
ja
or
pop
jne
pop
jle
mov
int3
push
jge
loope
xchg
mov
and
call
add
out
in
mov
mov
and
sarb
mov
add
into
stos
cmp
mov
pop
or
adc
xchg
insl
ljmp
inc
mov
pop
push
cld
loop
in
adc
ret
sbb
lods
je
stos
pop
test
jmp
data16
jmp
cmp
sbb
lods
out
sub
mov
cmp
xchg
pop
add
into
xor
jae
cli
stos
dec
sub
jmp
addb
pop
inc
or
fists
js
mov
rorl
sub
notb
mov
xchg
cmpl
sbb
mov
sbb
rclb
fistpll
repz
jp
sub
add
mov
mov
fwait
xor
lret
push
shr
lret
add
cmp
into
and
popf
test
je
lcall
jl
jno
and
mov
jp
adc
orl
shrl
or
dec
aaa
inc
cmpsb
pop
fdivrl
fwait
sub
sub
pop
fdivs
adc
mov
xchg
mov
mov
rorl
mov
inc
pop
je
inc
lahf
cwtl
fbstp
imul
insl
inc
jno
cmp
cmp
mov
nop
push
pop
jp
imul
mov
cmp
ljmp
mov
mov
mov
or
pop
push
call
cs
rcrw
lret
data16
clc
xchg
fdivrs
daa
js
push
pop
lds
test
jle
jmp
push
mov
and
pop
imul
sbb
pop
out
insb
aaa
and
ret
jp
pop
out
jl
divl
and
popa
ja
push
movsb
sahf
mov
jge
xchg
mov
xor
mov
sbb
into
and
imul
lret
test
out
scas
push
xor
add
mov
ja
popf
jbe
push
cmp
fwait
sub
sub
out
mov
loopne
mov
mov
inc
int
push
std
aaa
and
hlt
pop
insb
xor
pop
sarb
or
loop
test
int
adc
cmp
adc
adc
bound
cs
adc
jp
cwtl
mov
fisubs
sbb
leave
cmp
and
xchg
inc
enter
adc
dec
mov
xchg
js
jl
pop
rcrl
pop
push
sbb
mov
sbb
sbb
inc
mov
in
cmp
push
add
push
sahf
mov
pusha
popf
and
fisubl
pop
nop
jbe
and
and
out
lods
mov
and
pop
or
addr16
jbe
cltd
cmpl
not
jl
ja
adc
repnz
idivb
fwait
add
leave
cmp
xor
insl
and
pop
mov
test
cmp
test
add
outsl
inc
xor
in
fistl
add
mov
leave
ret
mov
popf
xor
xlat
jo
lcall
leave
fidivrl
aad
cmp
xor
js
rolb
loopne
popf
mov
gs
cmpsb
lods
xchg
fldt
push
pop
sar
sti
adcl
addb
decl
lods
pop
mov
jge
xchg
xlat
pop
add
aam
sti
hlt
out
mov
sti
and
cmp
cmc
jecxz
pop
mov
sti
lahf
test
jecxz
imul
cmp
popa
xor
adcb
iret
je
push
sbb
mov
out
add
sbb
inc
jl
mov
fbld
dec
pop
dec
std
adcl
fs
push
add
inc
dec
sub
aas
imul
addr16
inc
mov
scas
stos
fmulp
int3
push
iret
mov
sub
inc
in
out
add
lds
dec
lds
jmp
push
mov
fadds
out
outsb
stos
sar
mov
cmp
mov
andl
and
add
and
flds
xchg
mov
in
notl
inc
xchg
xlat
pop
sti
sbb
outsl
xlat
nop
repz
sub
hlt
das
add
sub
dec
inc
mov
in
lret
outsl
mov
pushf
rclb
mov
or
lods
sbb
or
outsb
mov
lret
pop
push
js
mov
ss
into
sub
mov
cmp
sbb
hlt
mov
push
out
inc
enter
repz
xor
dec
hlt
cmp
sarb
or
add
mov
xor
aaa
repnz
xor
cmp
push
inc
mov
xlat
das
or
dec
int3
in
sbb
inc
push
add
repz
and
sbb
gs
daa
xor
or
hlt
test
icebp
rolb
sarb
jno
loop
out
and
int
pop
iret
add
imul
gs
mov
popa
sub
enter
xor
jg
dec
and
sub
sbb
mov
repz
push
cmp
mov
fnstsw
aaa
arpl
cwtl
pop
mov
clc
jae
jmp
data16
sti
pop
jno
jae
and
pop
mov
push
cmp
jle
popf
pop
xchg
mov
int3
out
adc
inc
orb
pop
pushfw
mov
aam
push
in
sbb
loopne
movsl
xchg
call
test
fs
lock
mov
pop
add
ret
ljmp
sub
dec
les
mov
std
insl
dec
xor
dec
push
cld
add
inc
out
lcall
out
into
add
push
shrb
sbb
cwtl
repnz
dec
leavew
xchg
ss
call
mov
pop
stos
xchg
sub
jecxz
dec
push
and
imul
fmulp
add
adc
add
pushf
sbb
cmp
cs
mov
rorb
pop
pop
xchg
dec
scas
sub
iret
sub
das
xchg
jmp
pop
jp
int3
xchg
std
cli
add
jne
mov
std
sbb
js
stc
movsl
insl
push
dec
aas
adc
mov
lcall
xchg
push
sub
add
ljmp
adc
cmpsb
repnz
inc
fcmovnb
leave
adc
out
das
xchg
adc
arpl
adc
add
rcrl
in
lods
pusha
jns
out
mov
cmc
mov
movsb
shrl
sub
inc
mov
subl
leave
jl
mov
loope
lret
cld
xorb
fstl
xchg
test
dec
mov
les
sub
das
add
mov
notb
std
xor
je
push
daa
sub
cli
call
in
imul
or
mov
push
repnz
inc
pop
cmp
xor
xchg
push
jle
or
adc
call
sbb
cld
shrb
lahf
dec
mov
lods
data16
jnp
jne
mov
mov
in
sub
xor
sub
fdivs
mov
out
fsts
cmp
sarl
mov
in
add
jge
adc
or
xchg
enter
add
mov
adc
pop
js
icebp
mov
inc
cmp
test
cltd
fisttpll
jmp
jnp
jge
add
mov
sahf
pop
cmp
inc
pop
push
andl
ss
filds
movsb
orl
mov
mov
xor
arpl
lods
outsl
loopne
xor
mov
inc
leave
inc
sbb
or
ficomps
fadds
mov
cwtl
push
lods
add
mov
adc
adc
pusha
pop
mov
lods
popf
nop
add
jb
dec
addb
mov
pop
test
call
iret
outsl
stos
jo
ja
jl
sub
loop
pop
int3
das
sub
mov
mov
mov
rcr
jmp
inc
fistpl
rolb
call
and
jo
aam
push
push
arpl
pop
jmp
sbb
pop
dec
outsl
decb
in
in
cld
xor
sub
add
fidivrs
inc
lretw
shr
jge
ja
and
jge
or
dec
adc
or
test
lea
xchg
arpl
std
xor
xchg
adc
shlb
sbb
jmp
imul
fs
and
mov
cli
ficoms
push
mov
lods
cltd
pop
mov
dec
mov
and
daa
sbb
adc
insl
pop
push
mov
cmp
dec
sub
or
xor
add
nop
sub
push
scas
enter
and
xlat
xor
lret
pop
mov
lret
mov
pop
jp
shrb
push
fidivs
lods
inc
bound
shrl
adcb
dec
std
fistps
cli
push
push
pop
es
xchg
leave
push
js
inc
or
enter
cmpsl
sbb
ror
rolb
mov
aas
subb
outsl
jl
inc
popl
call
xor
pushf
sbb
jg
mov
dec
add
jmp
lcall
int3
mov
cmp
aas
xor
lret
fcmovb
push
out
lahf
inc
mov
mov
in
stos
xchg
cs
and
mov
lret
dec
push
jl
add
jno
adc
push
outsl
jae
pop
js
cmc
add
xchg
outsl
in
mov
pop
xchg
inc
out
push
icebp
mov
push
loope
xor
or
mov
mov
and
cmpsb
outsl
push
icebp
adc
pop
mov
jb
cmp
adc
push
test
push
stos
imul
mov
xlat
nop
pop
das
dec
je
scas
pop
stos
cmpsl
test
jb
daa
cwtl
outsl
push
and
in
pop
fsubs
mov
mov
inc
rcl
mov
das
pop
pop
cmp
push
dec
pop
xchg
das
sub
call
and
mov
mov
in
pop
xlat
sub
jo
push
add
dec
push
push
push
addb
and
pop
and
xchg
jle
test
out
mov
inc
mov
mov
int3
jbe
cltd
shlb
dec
es
dec
mov
ret
cmp
outsl
call
cmp
mov
popf
xor
cmpsl
mov
inc
push
pop
xchg
mov
test
sub
or
mov
sub
lods
jne
push
jne
lods
imul
jg
mov
mov
cmp
and
dec
add
imul
mov
and
clc
xchg
sbb
jne
scas
adc
pusha
mov
and
mov
fidivrl
sub
xchg
mov
or
mov
sbbl
dec
sbb
es
movsl
push
pop
je
loopne
push
data16
xorb
mov
adc
inc
pushf
push
lret
fs
mov
sbb
pop
push
cli
or
mov
out
cs
pushf
pop
adc
loop
stos
sub
pop
push
sub
out
add
loope
jno
xor
fldt
and
mov
xchg
pop
outsb
lods
ss
cmpsl
ds
and
cmp
pushf
mov
int
ds
lahf
cmc
int
stos
lea
pop
repz
sub
or
mov
mov
pop
scas
mov
push
mov
push
sbb
sub
call
testb
mov
aas
sti
adc
test
cs
pop
lea
pop
out
pop
cmpsl
dec
sub
popf
cli
imul
inc
ss
repnz
push
in
jge
sbb
pop
cmc
fldl
ljmp
sbb
fnsave
push
nop
pavgb
rorl
fs
faddl
lock
jecxz
mov
jae
xchg
das
push
or
cmc
mov
sbb
xorl
jae
xchg
dec
imul
sahf
cmp
movsb
or
leave
ljmp
jecxz
xchg
mov
pop
fimuls
push
iret
jg
add
negb
push
iret
jne
es
mov
inc
xlat
pop
pop
cmp
mov
test
jg
adc
imul
lret
les
lea
dec
cmp
das
xchg
outsb
sbbl
adc
std
cltd
adc
xor
test
inc
jnp
push
cmpsl
cmp
jmp
sbb
cmpsl
call
into
fnstcw
sub
dec
mov
fidivs
insb
push
idiv
pushf
xor
call
in
jbe
push
stos
into
test
mov
mov
daa
mov
mov
jmp
inc
lret
mov
or
xor
and
pop
push
mov
loope
test
add
add
and
cmpw
movb
sbb
scas
xor
iret
add
sbb
lock
sub
mov
or
xor
fldenv
push
sti
insb
xor
test
cli
lea
cmp
or
stc
pop
push
sub
cmpsb
and
cwtl
cmp
jle
mov
sbbl
rol
fidivrl
and
enter
lods
xlat
imul
insb
add
out
out
ljmp
lods
loope
jl
mov
leave
cwtl
and
dec
dec
mov
jmp
sub
cmp
jecxz
lods
xor
mov
jno
mov
or
nop
pop
pop
shl
shl
roll
mov
cltd
inc
ja
and
fsubrl
int
pop
adc
les
pop
ljmp
out
out
sub
xor
fnstenv
imul
mov
jg
inc
pop
subl
lea
sbb
inc
pop
sbb
loop
imul
dec
shrb
jne
nop
jge
testl
aaa
aas
adc
daa
mov
xor
mov
adc
xchg
stos
incl
push
mov
lock
pop
jnp
stos
jnp
pop
push
sbb
sbb
fistps
imulb
jbe
je
mov
xchg
xor
out
sub
aad
lahf
outsl
iret
stos
in
dec
dec
add
ficompl
cld
je
xor
or
repnz
sbb
rclb
test
cmp
mov
fidivrs
dec
stos
dec
sbb
adc
roll
es
inc
mov
xchg
outsb
pop
push
pop
push
or
out
adc
jno
dec
outsb
mov
sbb
jge
add
push
jae
pushf
aam
repnz
nop
pusha
aam
sbb
fxch
std
mov
sbb
mov
in
jge
cwtl
lods
xchg
ret
and
in
leave
out
je
fsubrs
rorb
scas
and
nop
add
dec
cwtl
mov
push
or
push
or
sub
mov
xchg
das
test
imul
rol
mov
insl
push
jle
scas
mov
cmp
and
fs
mov
mul
add
push
mov
mov
bound
out
shl
in
push
cs
mov
inc
inc
test
jns
aaa
jge
pop
mov
sbb
fdivrl
punpckhbw
xchg
outsb
sub
outsl
ss
fists
and
test
enter
sbb
rcr
fisttpl
in
or
repz
cli
pushf
mov
addb
jg
jmp
or
dec
adc
xor
mov
pop
ss
pop
aaa
push
cmp
pushf
mov
std
lret
std
jg
jnp
addr16
dec
push
iret
sbb
mov
incb
ret
xchg
pop
shlb
push
ja
add
lcall
les
jg
xorb
mov
repz
xchg
or
int
dec
push
cltd
jo,pn
and
ret
lds
cwtl
arpl
enter
aam
push
lret
outsl
std
dec
pop
ljmp
lahf
enter
jmp
add
xchg
arpl
fisttpll
mov
mov
or
jns
xchg
fcoms
xor
sub
fistpl
add
pop
test
xchg
das
mov
inc
push
or
inc
pusha
cmp
lret
cmp
add
in
leave
ja
maxps
aas
into
mov
insb
loop
adc
cmpsb
jge
shll
cwtl
negb
outsb
xchg
cmp
and
ficompl
andb
insb
fidivrl
into
jp
or
and
add
iret
gs
jmp
pop
adc
fistpll
mov
in
adc
push
daa
in
in
cmp
ficoml
lods
je
pop
cmp
mov
mov
mov
cmpsb
ret
or
sub
arpl
lods
ret
xchg
inc
inc
add
pop
xchg
cmp
les
add
inc
push
sbb
jnp
pop
xor
shr
mov
data16
and
inc
mov
jp
arpl
mov
sbb
aad
lock
jle
adc
scas
repnz
pop
insb
push
fmuls
repnz
mov
mov
mov
nop
roll
out
cmp
or
addb
int
mov
inc
aaa
pop
mov
jl
jl
jbe
lods
cmp
cwtl
jg
or
or
addr16
loope
daa
mov
int3
addr16
ret
mov
push
notl
dec
or
push
aad
xchg
notb
in
add
imul
cmp
jp
cmp
inc
jp
push
int
or
or
sbb
cmp
outsb
inc
sub
xchg
adc
dec
add
xchg
int3
ret
sbb
scas
pop
xchg
and
push
das
xor
sbb
xchg
lods
push
in
lea
jg
push
cmp
and
add
cltd
mov
loopne
xor
push
mov
rcrb
insb
lods
pop
pop
mov
push
stos
pop
sub
pop
gs
fistps
and
and
roll
adc
xchg
repnz
jae
and
arpl
and
rolb
mov
lahf
inc
lahf
rorb
and
mov
pushf
hlt
lret
test
push
mov
mov
insl
aaa
fucomip
mov
or
jno
data16
fwait
loop
pop
call
lds
sbb
cld
hlt
cmp
roll
xchg
mov
dec
mov
jbe
aas
ds
imulb
mov
int
mov
imul
push
out
mov
pop
cmc
pop
in
lcall
fstpt
cmpsl
popf
inc
pop
dec
sub
pop
iret
inc
gs
jp
dec
mov
dec
sub
lock
cmp
shll
mov
fcomps
movb
cmp
mov
pop
sub
in
stos
sbb
insl
mov
mov
mov
pop
aam
rorl
jg
pop
add
je
hlt
lods
and
mov
lahf
pop
pop
xor
insb
jecxz
sub
fdivp
dec
rcll
subl
mov
outsb
lar
hlt
bound
push
lea
mov
ja
add
inc
aaa
outsl
xchg
inc
mov
dec
sti
cmp
push
fisubs
sbb
pop
mov
aaa
repz
cmp
pop
ret
dec
sub
daa
das
cmpb
lahf
or
mov
aam
xor
push
dec
repnz
cmpsb
ret
imulb
test
add
push
ficomps
or
cmp
push
adc
mov
je
sbb
jg
pop
hlt
in
push
inc
dec
ficoms
lret
and
pop
mov
sbb
insb
mov
out
scas
push
mov
inc
sub
mov
xchg
xor
mov
sbb
or
lcall
mov
push
cs
push
stos
stos
mov
inc
cmp
das
push
es
jecxz
xor
cmpsl
insb
rcrl
push
data16
xchg
or
lret
or
cmpsl
popf
daa
mov
inc
pushf
aas
jo
loopne
out
mov
xlat
subb
adc
mov
addl
adc
push
xor
and
jg
cmp
cmovnp
push
cmp
divl
test
ds
adc
dec
pop
mov
sahf
push
mov
repnz
cld
jnp
pop
xor
jp
bound
cmp
popa
or
arpl
jb
shrl
ficompl
test
out
in
and
add
adc
pop
sub
movsl
lods
xor
imul
push
add
mov
mov
arpl
and
adc
xchg
enter
and
test
shll
negb
mov
mov
cmpsb
sbb
clc
pop
sar
aas
cmp
push
fwait
lahf
xchg
sahf
repz
inc
idivl
insb
pop
cmovae
loop
insl
jne
pop
out
mov
fisubrs
and
int
negb
xlat
jle
dec
cmp
xor
cmp
jae
jmp
pop
std
int
add
mov
sahf
data16
jmp
sub
mov
stos
mov
jge
dec
mov
movsb
out
sbb
in
pop
imul
push
dec
xchg
push
rclb
stc
scas
das
xor
mov
in
adc
push
push
or
add
fisubs
inc
lods
in
jge
jmp
jo
dec
sub
cmp
mov
int
jmp
sbb
test
mov
imul
sub
dec
fidivrs
mov
div
jl
lods
or
into
or
dec
jecxz
outsl
sub
mov
jle
test
shll
xchg
mov
jns
inc
lods
stos
add
shlb
imul
leave
adc
inc
nop
fidivrl
js
lcall
jp
adc
pop
sub
jp
orb
aam
shr
add
xchg
xchg
push
scas
test
enter
adc
ret
gs
add
mov
andb
xor
fsts
shr
jbe
outsl
pop
into
das
pop
out
imul
or
sbb
jno
cmp
daa
add
xchg
in
das
inc
mov
mov
int
call
out
push
or
mov
fsubl
adc
hlt
xchg
push
adc
into
cmpsb
mov
shlb
xchg
jecxz
xor
dec
xor
mov
repnz
mov
sti
popf
inc
lods
inc
add
in
mov
pmulhuw
pop
mov
fiadds
les
push
test
jecxz
iret
adc
jmp
cmp
mov
in
push
inc
push
lock
pop
aas
clc
sub
push
scas
mov
fcompl
rcrb
test
or
insl
movsl
in
cld
dec
mov
jns
push
loop
ret
bound
xchg
mov
push
mov
test
lds
es
shl
xchg
add
sub
popa
ficompl
out
decl
mov
cmp
mov
cwtl
jbe
pop
inc
sti
int
aad
dec
sbb
es
fcoml
mov
stc
jecxz
or
sti
and
add
sub
cmp
fdivr
and
sbbl
gs
adc
or
mov
and
push
jl
or
ss
xor
std
lods
sbb
add
adc
cltd
or
pop
repnz
jno
mov
in
add
mov
sbb
fdivl
pushl
sbb
mov
mov
jl
into
adc
imul
inc
mov
xor
cmc
mov
sbb
fwait
popa
push
sub
fstp
cmp
in
cmpsb
leave
mov
out
mov
or
cwtl
jns
push
dec
add
mov
add
not
dec
and
lret
lea
push
in
shll
adc
mov
dec
adc
jbe
mov
fwait
pop
adc
mov
subb
add
test
push
jns
rcrb
adc
sbb
shll
stos
and
adc
pushf
out
add
dec
mov
adc
hlt
add
push
sarl
sbbl
pop
mov
cmp
clc
fbstp
jne
push
sub
push
jg
xchg
and
mov
fwait
hlt
pop
test
call
xor
movl
and
filds
xchg
sbb
stos
or
sahf
daa
push
add
xor
dec
cwtl
fwait
scas
or
mov
les
bound
sbb
mov
push
hlt
nop
fcmovbe
imul
lods
push
jmp
test
call
mov
inc
ficomps
scas
jl
scas
dec
push
lret
cmp
fwait
movsb
sbb
aas
sbb
mov
fmull
outsb
loopne
jle
mov
testb
lret
repnz
mov
int3
in
adc
loope
icebp
mov
push
jmp
xor
loope
lahf
in
push
insb
lret
icebp
int
pushl
pushf
shl
adc
pop
in
ljmp
test
adc
push
movsl
xor
push
inc
sub
fisubrl
lods
addr16
fwait
repz
in
cmpsb
mov
addr16
adc
jp
sbb
adc
into
inc
andb
xlat
aas
sbb
and
lea
adc
cltd
in
inc
mov
mov
jae
sbb
int
dec
push
jg
xor
lret
into
mov
xor
and
sub
mov
cmpsl
popf
mov
push
inc
mov
roll
xorl
cli
sub
ss
jecxz
ja
pop
std
lcall
jns
xor
dec
loope
inc
jle
jo
es
xchg
pop
arpl
stc
add
popf
popf
loope
pop
adc
and
pop
add
xchg
faddp
jmp
mov
stos
mov
stos
push
addr16
fldcw
hlt
mov
fldenv
pop
adc
or
out
lea
cmp
mov
adc
mov
mov
out
popf
scas
mov
js
add
and
mov
cmpsl
popf
fwait
jbe
outsl
cltd
cmp
jne
into
ljmp
movsl
xor
les
pop
mov
jno
mov
lods
out
jbe
mov
mov
es
popa
cld
push
insl
cltd
iret
movsb
mov
aas
sub
push
jp
jg
out
rclb
xchg
sub
test
or
cmpsl
pop
daa
sbb
jmp
dec
sbb
jbe
aaa
negl
jle
push
dec
mov
test
mov
sbbl
fs
adc
dec
inc
inc
dec
ucomiss
mov
xor
fidivrl
loopne
shl
xchg
jbe
jae
or
jns
or
into
std
push
mov
rclb
fxch
data16
inc
dec
mov
dec
cmp
fcomp
popa
rorb
adc
mov
cs
movd
test
jle
jbe
lea
xchg
mov
test
xchg
sub
cltd
sbbl
mov
ret
pusha
int
dec
adc
xor
stos
jmp
into
pusha
pop
add
pop
ja
aaa
sub
mov
daa
rclb
pop
shl
dec
and
sbb
lret
mov
mov
xor
and
rorl
push
fwait
imul
inc
sbb
add
clc
icebp
jl
int3
imull
cmc
loopne
ficompl
mov
mov
mov
pop
or
jnp
adc
add
dec
stos
aam
stos
and
cmp
lock
mov
daa
adc
std
enter
adc
mov
outsl
jo
aad
test
cld
rorb
das
adc
pop
mov
arpl
insl
adc
call
movsl
cmp
inc
inc
lods
fadds
inc
push
mov
pop
aad
jno
adc
jnp
mov
in
inc
pusha
stos
outsb
xchg
sub
mov
sub
insl
xor
test
cmp
ja
sbb
mov
xchg
cmc
and
jno
out
and
cmp
jne
fiadds
adc
test
and
mov
cmpsl
mov
fcmovu
ret
sarb
in
inc
out
in
fstps
xor
or
fstps
imull
lock
fwait
lds
shr
inc
push
pop
add
sbb
jg
lret
jmp
push
push
jge
leave
stos
xor
mov
je
and
sub
bnd
mov
call
inc
lods
jb
jne
jb
les
xor
push
mov
clc
or
push
push
and
leave
dec
sbb
pop
es
sub
jg
xchg
in
js
and
cmp
bound
xchg
mov
shrb
xor
addr16
ja
movsl
mov
adc
in
sub
shl
mov
pop
ficoml
push
adc
pop
cltd
fs
int3
mov
pop
in
je
pop
mov
fcmovbe
popf
cld
jmp
cli
fisubl
scas
xchg
out
adc
out
inc
inc
sbbl
mov
aam
and
push
in
insl
dec
adc
lcall
push
das
mov
dec
scas
mov
mov
jbe
or
jg
xor
push
dec
mov
mov
push
or
data16
push
lahf
cmp
add
sub
aad
lahf
mov
mov
lods
and
mov
pop
push
or
mov
test
pop
lock
jnp
cwtl
aaa
xchg
mov
mov
mov
sub
mov
sbb
pop
rorb
push
es
xor
imul
sbb
les
movsb
sub
inc
iret
into
jl
decb
push
orb
sahf
mov
mov
xor
cmp
imul
inc
or
xchg
in
fbld
movsb
xchg
aam
mov
push
addr16
in
push
mov
cltd
sub
insl
insl
dec
shll
in
jge
jge
sbb
shrb
mov
xor
mov
fiadds
in
xchg
jle
adc
pop
pop
cmp
inc
scas
outsb
mov
jl
lds
sbbb
ret
jnp
fistpll
pop
fwait
xor
cmp
mov
or
mov
cmp
nop
pushw
cltd
subb
mov
lock
adc
movsl
pop
iret
jg
and
and
add
mov
lock
jp
jbe
sub
mov
rol
xchg
sbb
outsb
mov
lock
add
pop
or
lock
mov
xlat
std
int
dec
cwtl
lcall
pop
push
js
mov
mov
and
enter
clc
cld
push
xor
xlat
mov
sbb
sub
fstpt
mov
jmp
outsb
jo
std
mov
pop
rcll
sbb
leave
in
insl
test
mov
out
mov
in
sub
ds
stc
pop
xchg
or
add
fadd
mov
adc
gs
mov
aaa
mov
jno
or
mov
scas
xchg
and
addr16
push
add
push
and
loope
xor
lds
cltd
and
push
add
test
stc
pop
outsw
ret
push
xor
data16
insl
test
call
in
leave
fisttps
insl
xor
adc
jne
mov
rcrb
sub
jl
sbb
fisubrs
jb
jecxz
lcall
cmpsl
hlt
rclb
and
aad
mov
add
repz
mov
adc
fwait
pop
stos
push
xchg
sahf
xchg
ret
rorl
xchg
repz
dec
adc
call
xlat
in
cwtl
mov
lret
lret
aad
enter
loopne
fwait
inc
and
push
adc
cld
or
aaa
fdivl
adc
insl
add
mov
in
mov
ret
data16
aam
sbb
push
mov
dec
leave
and
divb
dec
into
test
dec
daa
lret
out
shlb
xchg
fs
push
pushw
push
fisubrl
push
scas
sbb
aad
aam
push
inc
adc
inc
mov
mov
jle
mov
je
lret
push
loopne
cmp
fldl
inc
or
push
iret
cld
mull
repnz
add
cmp
fimuls
jb
cmp
insb
push
push
iret
jp
in
xor
je
lret
jg
mov
sub
dec
aad
add
push
sahf
jo
add
push
pop
mov
dec
or
jl
sub
pop
inc
jae
mov
xchg
std
cmpsl
int
popa
sbb
test
sbb
or
xchg
rcrl
mov
sub
orb
scas
dec
cmpsl
xor
stos
pop
push
sub
push
adc
inc
mov
scas
mov
fistl
jmp
add
bound
push
pop
les
fisttpl
movsb
and
mov
mov
cmp
fimuls
add
push
dec
divl
clc
add
fwait
inc
xchg
scas
mov
and
xchg
xor
subl
cs
lods
xchg
jg
insb
out
lds
cmp
out
mov
in
ret
inc
jp
inc
pop
std
jo
enter
ret
mov
sbb
je
add
or
pop
das
sbbl
pop
jne
dec
mov
test
test
jb
mov
xor
adc
popf
cmp
xchg
cwtl
sub
add
dec
test
mov
jg
push
addl
add
cwtl
faddl
lea
or
das
push
insl
decb
enter
push
movsl
shl
insl
or
xor
mov
popf
push
push
dec
mov
xchg
dec
push
jno
jne
sbb
mov
dec
dec
std
adc
mov
and
mov
and
pop
loopne
pop
mov
sub
nop
sub
pop
mov
push
subl
or
pop
xor
xchg
movsl
lret
xorb
daa
mov
pop
imul
rorb
shlb
out
ljmp
and
add
and
sarb
mov
lds
outsl
sahf
pop
or
pop
in
js
fxch
cmp
inc
mov
int3
loop
loop
jno
xor
imul
cli
fidivl
cs
cmp
adc
push
jne
push
fs
pushf
mov
mov
sub
daa
sbb
testl
and
add
shl
and
lcall
mov
call
cmc
lods
inc
lahf
ja
dec
in
lahf
mov
rorb
ficomps
xor
lcall
sub
xchg
stos
arpl
or
dec
js
lods
pop
pop
pop
arpl
adc
data16
push
pop
inc
nop
xor
sbb
inc
hlt
xchg
imul
jnp
hlt
stc
lret
adc
addl
and
fs
sbb
loopne
adc
fwait
sbb
cmc
ss
dec
outsl
cltd
movb
sbb
push
aad
push
mov
fisubrl
mov
xlat
insl
mov
pushl
out
scas
mov
lcall
add
sbb
xchg
add
pop
loopne
mov
sub
cmp
dec
lds
mov
dec
pop
add
xor
xchg
pop
mov
inc
ret
jl
je
arpl
mov
out
fidivl
hlt
scas
push
or
lods
xor
popa
mov
mov
inc
push
pushw
push
cld
inc
pop
push
into
and
repnz
and
cwtl
jbe
mov
or
xchg
repnz
in
pop
lahf
gs
iret
je
mov
movsb
rcll
dec
dec
adc
negl
in
pop
mov
mov
push
xchg
or
sub
test
jae
aad
les
jmp
jmp
mov
mov
or
imull
jne
push
jae
fwait
stc
adc
or
pusha
add
and
mov
or
mov
xor
idivb
fnsave
orb
data16
imull
jg
insl
scas
inc
out
pop
je
inc
outsb
nop
xchg
adc
int
adc
enter
sbb
ficompl
jmp
pop
lahf
jp
sarb
outsb
xchg
adc
daa
xor
jbe
mov
jmp
fadds
add
rcr
int
and
int
movl
adc
xchg
cmc
jg
out
ljmp
adc
add
cmp
test
int3
mov
xor
cmc
mov
xchg
sbb
lahf
ljmp
ss
add
adc
cvtpi2ps
fldcw
pop
lahf
mov
push
cwtl
movsb
stos
push
xchg
jno
dec
inc
jns
push
daa
cwtl
push
lods
loopne
inc
aas
ffree
pop
sbb
jne
push
lahf
stc
xchg
decb
mov
sbb
inc
adc
mov
cmc
jmp
dec
xor
cmp
out
cltd
lds
mull
repz
or
popa
inc
hlt
out
jmp
xchg
pop
mov
lock
int
decb
cmc
ja
jg
mov
mov
pop
cltd
mov
mov
shll
divb
dec
sbb
or
imul
adc
repnz
or
addr16
shlb
call
sbb
loop
mov
scas
inc
xor
adc
jae
add
lods
push
adc
cmc
pop
inc
xchg
scas
jmp
call
xor
das
xor
aam
scas
xor
or
mov
add
mov
stc
pushf
and
sti
push
adc
sahf
jb
or
dec
in
jle
rolb
xor
inc
aad
mov
sub
pop
jb
ret
decl
enter
cmp
mov
xchg
aaa
add
lods
xor
hlt
cld
sbb
rcr
test
cmp
cld
aam
test
mov
or
sub
adcb
das
mov
fcmovu
sub
mov
lret
aad
in
pop
cltd
adc
push
jb
ja
xor
xchg
jl
jae
sub
sbb
mov
daa
dec
mov
ja
cs
add
adc
sub
out
mov
xchg
cmp
and
movsb
cs
cvtps2pi
add
testl
mov
push
xor
xchg
jns
push
jo
inc
inc
scas
xchg
push
mov
xchg
pop
icebp
xlat
ret
sahf
popa
sbb
adc
pmuludq
lock
cmp
insl
dec
test
lret
xchg
scas
add
or
fistps
js
dec
scas
inc
movsb
cmp
rcll
mov
out
lret
scas
add
cmp
mov
and
gs
test
in
test
dec
xchg
or
push
gs
scas
mov
or
mov
dec
lods
in
iret
fadd
xor
ljmp
sbb
ret
mov
sub
mov
push
inc
mov
cld
cli
cmpsl
lods
mov
xchg
xchg
pop
hlt
enter
fisttpl
sahf
or
push
shl
std
in
int
ds
inc
test
mov
sub
das
jge
ds
push
mov
add
mov
mov
cmp
add
jne
cmp
dec
inc
arpl
push
pop
dec
lods
xor
xor
outsb
mov
inc
inc
les
enter
movsl
push
mov
aas
sbb
jge
icebp
rolb
mov
add
push
rcll
pushf
hlt
in
shl
out
movsb
or
dec
jecxz
add
shl
arpl
test
lods
push
mov
mov
lret
and
lret
push
dec
lds
in
sbb
mov
subb
cmp
arpl
dec
mov
dec
and
lcall
lea
mov
adc
mov
sbb
or
adc
dec
ja
pusha
out
jo
sti
pop
es
mov
fcoml
sbb
push
dec
fnstcw
jbe
jl
xor
das
pop
dec
push
call
aad
jns
fdivr
mov
jae
loop
popa
stos
ss
jb
movsl
dec
call
lock
mov
test
testb
mov
fs
gs
fisubl
push
fwait
lcall
fcomip
cmp
mov
out
and
lods
push
mov
and
sub
push
pop
and
out
jo
fwait
sti
cmp
adc
mov
mov
incl
inc
mov
je
pushf
inc
cli
or
xchg
nop
jo
sahf
cli
or
xlat
add
sbb
sti
movsl
sub
jo
mov
xor
sub
pushf
dec
rolb
mov
dec
mov
add
lcall
mov
mov
xchg
outsl
and
mov
shll
and
stc
sbb
lods
cmp
popf
fs
jmp
outsl
cwtl
xor
jno
shll
sbb
pop
dec
test
data16
sbb
les
into
cmp
cmp
rcl
or
pop
xchg
jbe
mov
enter
mov
pop
shl
ret
pusha
mov
call
xor
push
adc
shlb
sub
ja
hlt
mov
stos
cmp
adc
jge
or
mov
fsubrs
bswap
mov
popf
shrb
enter
mov
adc
pop
movsl
outsb
std
mov
sub
add
xchg
push
ljmp
push
sbb
dec
shrb
out
notb
in
pusha
mov
add
mov
lock
cwtl
sahf
cmp
imul
loope
sub
in
sarb
aam
imul
xor
jo
sub
adc
ss
fidivrs
stc
negl
and
inc
pushf
in
cmp
insb
jne
clc
push
mov
mov
loop
icebp
mov
xor
ret
popw
mov
xor
loope
sub
fiadds
aam
xor
dec
movsb
je
jmp
push
insl
or
mov
or
cld
lods
cmp
jl
inc
idivb
pop
mov
adc
mov
testl
and
mov
sub
and
fdivrp
sbb
jmp
pop
cmp
ja
stos
ss
jo
sbb
xor
xchg
push
xor
fdivs
jp
sahf
or
sbb
cmp
jge
pop
mov
in
fwait
xor
psrld
jge
fisubs
push
test
and
jmp
je
cmpsl
inc
fildll
mov
xchg
shl
leave
pop
or
int
cmp
adc
fstl
adc
mov
mov
dec
dec
stos
push
add
pop
add
sbbl
dec
jb
push
pop
push
dec
scas
inc
leave
les
gs
jl
test
stos
in
xchg
in
stc
push
stos
inc
test
out
add
mov
mov
adc
lcall
stc
loopne
imul
jge
dec
je
sbb
inc
mov
cwtl
mov
dec
cs
adcb
or
push
cwtl
mov
arpl
in
and
xchg
xchg
ds
test
in
pop
sub
test
adc
adc
mov
xchg
and
mov
mov
lods
cld
inc
hlt
lret
dec
xor
out
sub
cmp
pushf
adc
aad
add
add
leave
ror
dec
pop
arpl
xor
cmp
xchg
dec
scas
aaa
or
mov
cmp
pusha
cwtl
ret
callw
test
idiv
popa
and
sbb
xlat
fwait
jne
xchg
ljmp
lret
repnz
aaa
inc
das
mov
in
aas
jb
inc
fcmovne
movsb
mov
test
stc
add
dec
sahf
mov
testb
add
jmp
mov
lahf
or
add
and
xor
pop
into
adc
leave
nop
sub
lret
jo
push
mov
nop
adc
sub
add
aad
jbe,pt
lods
sbb
dec
jnp
mul
dec
add
stc
mov
or
clc
cmp
jl
add
mov
shlb
fimull
in
fiaddl
stos
jle
mov
mov
mov
xor
push
mov
mov
pop
les
fidivs
mov
mov
orb
xor
mov
jo
adc
sbb
sarb
add
push
or
or
in
cmp
xor
add
ror
bound
mov
dec
dec
sub
or
pop
inc
popf
movsl
xor
mov
sub
dec
sbbb
sbb
arpl
cmp
sbb
les
imull
mov
pop
sbb
mov
add
jle
ljmp
dec
mov
push
or
inc
sti
jmp
pop
aad
sbb
dec
push
push
sbb
sti
cltd
xchg
in
out
sti
test
sti
cltd
das
sbbl
lods
cmp
orl
movsl
idiv
mov
inc
aas
push
add
cmp
mov
push
out
outsb
popa
mov
cltd
add
dec
and
xchg
mov
addr16
cmp
ret
mov
pop
pop
mov
xlat
cld
cmp
fidivrl
cmp
push
xor
fldl2e
out
mov
ljmp
call
stos
test
push
lret
sbb
mov
jmp
movsb
sbbb
sbb
adc
movl
addr16
sbb
test
ja
inc
ja
dec
adc
mov
inc
jecxz
fcmovnbe
sub
pop
push
movl
pop
pop
imul
lahf
imul
xor
push
xchg
fs
mov
mov
and
fs
add
inc
cld
les
outsl
adc
pop
add
imul
jns
pop
cmp
call
scas
into
jp
fcomps
add
sub
or
jmp
loope
jnp
adcb
in
jp
cmc
adc
lock
add
sub
in
push
mov
inc
lcall
ljmp
mov
rcrl
lods
cli
lret
xchg
out
sbb
sbb
movsl
insl
xor
dec
dec
add
dec
and
dec
mov
mov
fisttps
jl
arpl
jmp
inc
andb
cmp
rcll
push
push
and
out
jb
dec
das
ja
ss
push
push
in
je
xchg
outsb
xorl
divps
or
inc
lret
sahf
mov
cli
stc
sub
or
push
aas
pop
popf
cs
out
ss
ficoml
jmp
xlat
ljmp
push
pop
pop
movsl
push
cmp
or
cmp
cld
pop
dec
shrb
inc
mov
pop
ja
jge
ja
test
xchg
jno
mov
sarl
ret
dec
add
dec
mov
ja
xor
int
inc
mov
xor
loop
stos
bnd
bound
shl
xchg
mov
stc
popa
out
ja
outsl
enter
adc
mov
dec
xbegin
insb
mov
imul
leave
mov
stc
xchg
in
aam
icebp
or
outsb
sub
jmp
pop
iret
addr16
les
push
sbb
jnp
std
repnz
in
push
aaa
je
sub
inc
mov
adc
xor
icebp
add
jae
sti
inc
mov
jbe
iret
sbb
mov
aam
ret
xchg
negl
push
push
sbb
inc
out
dec
xor
lret
dec
stos
lock
dec
push
sub
iret
outsb
push
rorb
cmp
test
out
hlt
jae
cli
jno
icebp
popa
dec
xor
lcall
imul
push
sti
push
lock
outsb
inc
ss
and
xchg
dec
loop
ss
popa
and
out
stos
pop
js
popa
shl
cwtl
adc
js
cmpsb
cs
rorl
and
mov
mov
or
push
sbb
xor
sti
mov
or
xchg
sbb
scas
mov
fnstcw
in
xchg
inc
mov
push
xchg
mov
jp
outsl
cmp
cmp
in
call
outsb
mov
cmp
inc
daa
pop
xlat
int
sbb
fwait
jge
sti
icebp
xor
sub
xlat
inc
xor
inc
rclb
mov
repz
pop
push
das
and
ret
jecxz
mov
shrl
mov
mov
mov
xor
aas
jae
or
dec
and
icebp
movsl
xor
mov
cmpsb
enter
mov
arpl
roll
loope
mov
js
and
out
or
test
mov
push
out
push
loope
push
or
push
mov
and
or
mov
xchg
push
xchg
addr16
dec
xchg
insb
sub
push
jecxz
lods
add
xchg
repz
nop
dec
addr16
cmp
or
loope
cmpsl
aaa
jo
mov
hlt
cli
jg
pop
jb
push
sub
fs
push
inc
inc
and
xchg
xchg
dec
pop
cwtl
pop
cli
mov
adc
dec
ficomps
or
mov
ror
jne
mov
jnp
scas
scas
mov
pushf
and
je
out
pop
sub
xor
ficoml
jl
mov
push
sarb
adc
cmp
add
adc
inc
aam
andl
jne
push
std
pop
jae
pop
mov
outsb
and
lret
mov
xchg
cmp
mov
ss
cmp
push
sub
das
stos
mov
add
dec
lcall
push
push
push
xorb
mov
adc
in
add
mov
adc
pop
and
inc
sbb
sbb
aad
shrb
adc
int3
pop
mov
mov
in
stos
xor
fnstsw
jb
cmpsb
repz
sar
into
push
xchg
mov
inc
push
mov
sti
add
lods
movsb
adc
dec
mov
cmp
pop
imul
sub
push
push
pop
and
cmp
insl
jnp
aam
jg
xchg
inc
ja
outsb
pop
test
cmpsl
or
pop
sub
push
pop
cwtl
mov
mov
jno
rorb
push
pushf
mov
sbb
sbb
fildl
pusha
pusha
mov
mov
scas
xchg
mov
mov
inc
mov
std
add
jno
dec
sub
fsubs
xchg
adc
outsl
js
xor
xchg
mov
stc
int3
cmp
sbb
das
dec
mov
int
and
mov
lock
sub
xchg
cs
subl
ret
dec
jp
fwait
leave
outsb
push
push
clc
in
cmp
xchg
dec
mov
mov
sahf
es
pmullw
aam
inc
pusha
scas
test
enter
xchg
xor
and
nop
push
mov
repz
xchg
and
mov
dec
dec
push
stos
mov
xor
sti
add
out
jnp
ss
mov
or
mov
cmp
cmpsb
loope
in
inc
and
lahf
aad
outsl
stos
adc
xchg
aas
in
inc
cltd
loop
xor
stos
aam
pop
in
and
pushf
cmpsb
lock
pop
mov
or
stos
aas
push
push
movsl
xchg
xor
pop
js
mov
fwait
mov
shll
mov
mov
lock
test
jns
les
jbe
aad
jno
pop
add
loope
jne
xor
iret
pop
inc
add
push
insb
mov
cmpl
add
jmp
sbb
adc
xchg
or
add
dec
sbb
ljmp
or
fidivrs
pop
push
sbb
pop
mov
arpl
sub
fwait
sti
xchg
xchg
pop
mov
fsubl
mov
pop
lea
sbb
or
mov
int3
push
mov
gs
aas
mov
jecxz
mov
aas
inc
cmpsl
insl
pop
jmp
fstpl
mov
push
in
ret
mov
mov
xorb
cld
push
imul
mov
test
add
in
in
xorb
add
in
shll
cli
hlt
inc
int
popa
fcmovbe
push
lea
lods
pop
test
dec
mov
je
or
loope
clc
sar
ss
push
loop
xor
std
pop
adc
popf
and
mov
cmp
popa
ljmp
aam
out
sbb
adc
in
sarl
popf
sub
push
inc
daa
popf
cmpsl
inc
or
pop
stos
in
dec
js
out
inc
mov
jns
sbb
xor
inc
in
jle
cmc
pop
mov
fadd
sub
inc
cmpsl
leave
addr16
in
xchg
repz
cmp
stos
push
into
adc
or
adc
pop
out
je
std
cmp
stc
pop
adc
pop
ja
jno
pop
inc
mov
cltd
dec
frstor
sbb
jecxz
cmp
add
push
xor
jg
hlt
and
adc
push
mov
pushl
shrl
jmp
andl
es
cltd
inc
jl
push
mov
push
mov
mov
loop
mov
rcrb
mov
mov
nop
mov
mov
stos
sub
out
xchg
add
fdiv
leave
mov
inc
in
jg
int
and
sbb
loope
inc
dec
jbe
mov
mov
ds
fldcw
aas
sbb
inc
adc
negb
gs
sub
insb
jb
push
ficompl
icebp
push
push
addr16
dec
cmp
mov
loop
popa
roll
jg
push
popa
test
and
xchg
fnsave
add
push
jmp
lret
dec
out
fs
sbb
imul
inc
jo
je
sub
xchg
push
rcr
jnp
test
dec
lret
xchg
dec
xor
gs
add
mov
fs
push
xchg
mov
aad
mov
dec
lea
pop
std
imul
lds
inc
xor
jge
in
mov
lcall
inc
mov
adc
aad
xor
aad
je
inc
jle
cmp
pusha
pop
sarl
jg
inc
dec
lahf
inc
das
movzbl
pop
and
or
movsb
inc
mov
pop
out
add
jmp
pop
push
sbb
aaa
jp
call
aam
scas
jl
mov
dec
negb
push
push
cli
adc
push
cmpsl
pop
mov
inc
das
popa
in
add
mov
push
mov
adc
adc
push
jecxz
dec
inc
jg
aas
xchg
in
pop
inc
mov
andb
std
std
subl
sub
shll
dec
outsl
pop
push
cltd
addb
nop
aas
int
jbe
das
dec
iret
shll
or
fdivl
mov
and
pop
aaa
aas
adc
mov
jae
into
sub
add
xchg
test
ret
popa
and
xorl
imul
sarl
xor
mov
negl
popa
or
aaa
xchg
dec
dec
jge
xchg
nop
mov
movsb
cmp
xor
mov
mov
adc
mov
add
lret
jns
fists
or
inc
inc
aad
cs
adc
pop
ljmp
sbb
sub
or
pop
inc
sub
mov
add
pop
push
and
adc
sub
js
lds
outsl
mov
popf
mov
mov
add
roll
cmc
in
test
or
mov
lea
mov
sub
in
sub
test
lahf
lahf
push
push
mov
mov
loop
mov
dec
sbbl
adcl
rcrl
fidivl
dec
xchg
jnp
adc
mov
mov
mov
addr16
mov
rcrl
jg
in
adc
push
mov
ret
clc
xchg
sub
adc
cmc
jge
icebp
bound
jne
out
xchg
add
cmpsb
dec
or
and
mov
inc
jecxz
push
cmp
fbld
cli
clc
call
cmp
pop
rorl
cmc
insl
pop
loopne
xchg
mov
mulb
arpl
and
notb
push
jp
outsb
or
push
loop
jns
xorb
jp
ret
lea
dec
test
rorb
fimuls
out
and
gs
xchg
mov
aam
movsb
cmp
mov
ss
dec
cmp
cmpsb
and
push
xchg
push
cmp
les
pop
lods
jnp
and
out
sub
xchg
loope
rol
jnp
mov
mov
adc
lds
stos
ss
repz
fsubrl
push
sbb
xchg
imul
sbb
mov
jle
add
shlb
cmp
mov
ljmp
sbb
mov
jp
dec
cmp
out
fistps
sub
push
enter
outsb
aad
push
mulb
outsb
sarl
inc
xchg
mov
pop
outsl
incb
stos
push
lock
loop
cmpsb
test
mov
push
movsl
lds
cmpsb
cltd
mov
shrb
xchg
arpl
stos
adc
mov
and
cmpsb
test
and
cmp
dec
shll
mov
aad
imul
sbb
jecxz
mov
icebp
mov
popa
push
mov
pop
pop
mov
lcall
adc
xorl
js
sbb
sbb
pop
sub
repnz
or
std
sub
mov
sub
pop
push
jle
in
pop
sbb
push
lret
repnz
cmp
jno
dec
mov
inc
sub
and
daa
mov
jmp
mov
ds
movsb
xchg
mov
ja
mov
imul
hlt
fisttpll
or
add
loopne
int3
dec
cld
rcr
ljmp
xchg
mov
or
pop
or
or
lahf
pop
int
push
add
push
push
or
out
leave
movsb
ja
test
jae
repz
xchg
inc
lret
mov
pop
daa
mov
mov
in
mov
les
jl
jnp
sti
mov
sub
shrl
xor
and
ljmp
mov
les
aad
out
or
inc
jno
jl
add
push
adc
jecxz
mov
clc
cmpsb
loop
mov
jno
fwait
pop
sub
ret
notb
pop
lds
add
int3
jg
pop
and
or
outsl
push
dec
fisttps
push
cmpsb
jnp
push
lods
jnp
dec
aas
testl
add
gs
testb
stos
inc
jle
cmp
enter
push
cmp
xchg
dec
mov
pop
fisttpll
mov
dec
mov
jns
loope
popa
sub
pusha
inc
xchg
pop
cmp
std
sarb
push
pusha
add
hlt
dec
rcl
in
cmp
push
insl
push
jecxz
sub
in
lcall
xor
das
sub
into
inc
adc
rorl
sub
inc
inc
rclb
xor
data16
popa
push
stc
clc
inc
push
jo
xor
lret
cwtl
dec
or
jmp
cmp
subl
cwtl
adc
shl
pusha
scas
loopne
jl
sub
leave
lret
into
movsb
repnz
in
add
or
mov
dec
shl
xor
shrl
loope
jnp
mov
dec
or
hlt
mov
or
sbb
push
mov
out
dec
inc
mov
sbbl
jb
clc
faddl
in
popa
adc
enter
lcall
xchg
mov
mov
pop
jne
mov
inc
loopne
cmp
pop
insb
scas
jb
repnz
bound
xchg
xlat
fildl
xor
insb
stos
mov
push
mov
push
cmpsb
sub
or
lret
jl
mov
push
xor
and
pushf
mov
or
xor
lret
fidivl
sarb
stc
xor
insl
or
mov
push
shrb
xchg
imul
adc
dec
jle
and
sahf
aad
fistps
das
adc
lret
arpl
cs
mov
loopne
jns
sub
push
and
cmp
push
lret
push
adc
lahf
xchg
adc
jo
imul
or
mov
or
lds
pusha
shlb
mov
sbb
ret
lcall
add
shl
mov
jb
mov
xor
pop
push
add
fstpt
xlat
mov
push
sub
gs
xchg
jmp
inc
jle
jo
push
int
and
sub
insl
lea
inc
lret
addr16
pop
cmp
les
cmp
xchg
stc
lret
enter
sbb
mov
lds
in
jecxz
andl
or
cmpsl
xor
insb
push
es
xor
jbe
ss
out
gs
test
ficoml
pop
inc
ret
push
jge
cmovnp
or
jmp
mov
mov
dec
repnz
es
out
cmp
jae
stc
fsubs
mov
mov
push
aam
and
es
std
and
add
loopne
movsl
adc
pop
inc
push
insb
mov
jmp
xor
mov
push
das
out
outsl
inc
lcall
shrb
psraw
xor
dec
dec
jbe
add
xchg
lods
pop
aas
jmp
or
bound
xchg
ret
sti
and
push
int
pop
push
sub
pop
mov
cmc
scas
pop
leave
pop
inc
ja
mov
push
fidivs
ja
adc
scas
das
and
aas
pop
inc
cmpsb
lret
test
and
pop
push
call
dec
sub
xlat
mov
pop
dec
int3
xor
xor
lods
sbb
inc
push
sbb
jb
jb
shlb
int3
hlt
sbb
dec
dec
in
or
insb
xchg
adc
xchg
and
or
lret
bound
mov
lds
lods
gs
cmpsb
cmp
jmp
inc
arpl
or
jae
inc
comiss
cld
arpl
fcmovb
cli
dec
pop
pusha
and
shll
movsl
sbb
test
jb
add
push
or
sbb
mov
out
mov
fcompl
mov
rorl
cmp
js
sub
inc
jbe
ret
xchg
cmp
xor
loope
sub
cwtl
cs
stos
int3
push
int3
or
hlt
ds
xchg
stc
mov
or
inc
stos
arpl
cli
mov
jne
pop
inc
cmc
inc
sbb
aaa
stos
push
push
cmp
test
push
pop
pcmpgtw
sub
cmp
std
stos
test
jge
adc
icebp
pop
lret
clts
sbb
addr16
enter
sub
sub
call
shr
inc
stos
adc
cmp
out
jp
cltd
mov
push
or
in
test
cmp
adc
adc
jns
in
jg
mov
adc
fildl
inc
push
mov
pop
inc
je
outsl
insb
lods
out
je
shrl
push
lods
fucomip
push
shr
aas
sti
test
fwait
sub
fimull
mull
lret
lret
nop
or
pop
stos
jecxz
mov
dec
inc
int
cmc
mov
in
js
xchg
aaa
or
pop
and
pushl
loopne
mov
mov
dec
vaddsubpd
shrl
add
fsubrl
repnz
cs
push
imul
aaa
sbb
sub
dec
test
mov
mov
jmp
sub
adc
push
push
xchg
stc
dec
mov
leave
cmp
loope
fdivl
std
leave
inc
sbb
loope
dec
jns
add
jg
out
jno
push
daa
xchg
xchg
mov
les
shrl
push
or
movsl
popa
mov
pop
fld
jl
inc
gs
jbe
add
test
addr16
inc
add
movsb
mov
sti
dec
and
pop
pop
xchg
aas
jo
repnz
jle
lock
adc
out
fs
fs
pop
mov
dec
or
xchg
xchg
inc
jle
cli
or
insl
xchg
inc
push
cmpsb
sahf
filds
push
std
pop
add
inc
sub
int3
imul
pmuludq
xlat
sbb
loop
pop
pusha
test
sahf
pop
inc
int3
aad
cld
cld
loopne
jl
inc
adc
lods
cmp
mov
push
cmp
jp
xchg
mov
cmpsl
rolw
add
lahf
ds
add
cmp
pop
cmp
dec
lea
or
cmpsb
jne
fldl
xchg
or
aas
mov
mov
fdiv
lahf
jp
or
push
shrl
pop
push
fmul
xorb
aaa
xchg
or
std
inc
mov
subl
sar
sub
sahf
outsl
inc
rcrb
test
xchg
jne
insl
jb
xor
or
lea
lahf
fdivl
cwtl
pop
shlb
xchg
fnstcw
or
jns
divb
bound
nop
aaa
shlb
xor
cltd
add
les
mov
xor
sub
mov
in
xchg
stc
fcomp
das
xlat
es
in
out
je
add
iret
push
jmp
or
xchg
or
clc
loopne
xchg
pop
mov
cmp
lods
jne
jl
and
jmp
test
les
les
mov
into
push
aam
pop
dec
add
xor
inc
sbb
lcall
mov
outsl
movsl
or
pop
cmc
stos
xchg
out
cld
mov
mull
mov
ficoml
and
xor
inc
sub
push
and
sub
adc
jmp
jns
lock
cmpsl
mov
mov
inc
clc
das
or
aas
sbbb
dec
sti
out
adc
mov
leave
add
or
sbb
and
in
mov
sub
fisubs
int3
pop
xchg
jae
jecxz
lret
dec
jp
mov
repnz
gs
mov
jnp
adc
push
in
cwtl
rcrb
cmp
jmp
inc
adc
sti
aas
dec
fnstenv
adc
lahf
je
mov
mov
dec
lret
mov
lahf
pop
and
xchg
rorb
add
sub
add
out
mov
mov
adc
or
pop
cli
inc
jle
push
ja
inc
mov
and
gs
arpl
int
cmp
sub
rcll
mov
out
mov
mov
mov
and
or
data16
shll
nop
inc
andl
hlt
hlt
or
mov
push
mov
sbb
mov
insl
pop
movsl
pusha
orl
out
add
fs
xor
adc
push
add
shll
add
cmpsb
xor
inc
enter
imul
movsl
in
test
cmp
gs
dec
stc
movsl
xor
fisttpl
jo
in
jmp
stc
dec
inc
inc
movsb
and
arpl
or
inc
shlb
and
sbb
lods
pop
mov
sub
sbb
sti
add
mull
test
cs
sarb
outsl
mov
add
jo
inc
lds
add
shrb
out
insb
adc
and
xchg
ret
xor
scas
mov
dec
test
xor
iret
pop
push
or
push
cmc
fldenv
xor
xor
push
dec
jg
mov
je
ss
add
add
jno
fidivrl
roll
cmp
sbb
in
mov
cmp
xorb
sub
or
xchg
cwtl
push
ljmp
jo
inc
lock
push
sub
sub
adc
out
pushf
push
mov
jbe
hlt
pop
cltd
lock
mov
push
push
mov
sbb
mov
pushf
hlt
insl
mov
mov
sbb
sti
jbe
inc
rcrb
fidivrl
mov
jnp
fs
sti
dec
push
push
xchg
inc
dec
cmp
hlt
jg
sbb
bound
cs
xchg
xor
add
std
push
xor
jp
sti
jle
xor
mov
inc
jl
in
movsl
or
xor
pop
jle
push
sbb
adc
fcmove
adc
arpl
xchg
lea
stos
insl
dec
fcomps
dec
ss
sbb
aam
or
fs
stos
pop
mov
inc
imul
scas
lret
imul
pcmpeqw
sti
sbb
fsubl
push
ret
pop
lret
int
shlb
xchg
mov
loope
pop
push
mov
xor
pop
inc
inc
xchg
aas
rorl
jbe
and
outsl
and
or
lock
xor
imul
inc
cwtl
xor
pop
cltd
pop
js
in
faddl
lods
jb
sbb
or
xor
push
int3
push
push
push
xchg
add
lret
dec
imul
flds
loope
mov
xor
push
shlb
subb
pop
aaa
stos
fildl
jo
call
add
push
fstps
pop
mov
and
in
sti
movsb
dec
push
dec
push
jl
nop
dec
ret
stc
cmpsb
movsl
push
in
and
xchg
std
inc
xor
aaa
leave
mov
je
mov
sub
scas
mov
mov
xchg
fisttps
aas
std
jp
or
push
outsl
add
jecxz
cld
test
dec
xchg
lahf
cltd
push
mov
ja
mov
cmp
in
push
je
inc
cltd
clc
cli
fadds
or
jl
and
flds
test
dec
xchg
aad
cmp
xor
fdivl
inc
popf
push
sbb
xor
jbe
out
mov
out
dec
ficoms
cs
push
js
adc
shr
scas
push
adc
stos
cmpsb
clc
and
idivb
push
xchg
adc
adc
inc
dec
xchg
cmpl
mov
mov
inc
xor
shrw
je
mov
clc
jmp
faddl
fdiv
mov
cmp
in
cltd
add
jg
in
outsl
out
testl
or
push
test
imul
out
in
adc
ds
jae,pt
cmp
cmp
mov
bound
lea
pop
mov
xchg
inc
test
cmp
fiadds
clc
mov
in
stos
adc
lret
jecxz
pop
jae
mov
pop
int
loop
mov
das
adc
nop
icebp
mov
stc
leave
push
ds
fcoms
test
inc
mov
adc
aad
es
cmpsb
pop
lds
int
xor
mov
pop
mov
jge
pushf
dec
fidivl
aad
push
insb
cli
aad
fcmovne
mov
leave
sbbb
pop
scas
pop
xchg
adc
dec
das
iret
xor
cltd
outsb
repnz
test
hlt
test
movsb
cmp
pop
adcl
push
xchg
push
and
sahf
push
pshufw
mov
push
loopne
push
aaa
js
inc
fcoms
daa
outsb
outsb
xor
cs
adc
dec
leave
daa
gs
fcomps
pop
fcoml
adc
les
bound
pop
inc
inc
stos
cltd
out
inc
sahf
gs
inc
fcomp
xor
pushl
popf
lret
addb
loop
adc
mov
add
pop
das
and
mov
dec
cld
imul
pop
jns
mov
cmp
lret
adc
sub
mov
icebp
mov
or
sti
out
adc
sub
insb
into
lcall
jb
jb
push
ret
mov
pushl
push
arpl
out
jno
stos
mov
fimuls
loop
mov
sbb
enter
jbe
fwait
mov
aas
ljmp
pop
lock
lret
and
inc
in
add
cs
mov
pop
xchg
and
addr16
sub
daa
and
sub
je
push
clc
and
stos
ss
test
dec
adc
call
add
fcomps
shl
or
add
adcl
clc
aad
xor
sbb
inc
fs
push
pop
jnp
stos
pop
xchg
mov
out
test
dec
ja
jge
test
jno
scas
test
test
stos
bound
xchg
shl
aaa
popa
adc
pop
jbe
stos
sbbl
add
mov
push
das
bound
cld
xchg
fstp
in
or
enter
out
inc
pop
push
insb
sti
push
mov
pusha
fsubrl
cmp
mov
lret
and
dec
xlat
imul
cmp
outsb
addr16
push
adc
inc
xor
push
xchg
push
push
in
inc
pushf
and
in
xchg
bound
bound
inc
inc
bound
call
mov
and
cld
push
sub
ss
in
sbb
out
fsubl
mov
push
arpl
leave
add
nop
leave
xchg
dec
lcall
outsb
inc
fidivrl
repnz
mov
decl
fimull
jmp
xchg
jmp
clc
mov
aam
xchg
sub
in
push
icebp
pop
popa
jns
push
jno
movsb
scas
aam
pop
and
push
sub
clc
addr16
int
idivl
outsl
addr16
cwtl
icebp
cmpsb
popf
sti
aaa
fs
test
arpl
mov
andl
dec
jge
xchg
sbbb
lods
iret
adc
or
in
push
cld
js
jo
nop
ror
xor
mov
adc
je
mov
mov
in
fistl
jle
cmp
data16
mov
xchg
cmp
test
mov
stos
shlb
lds
adc
mov
cmpsb
push
xlat
jb
push
mov
aad
lret
mov
and
pop
mov
loop
fadds
mov
ret
ljmp
bound
dec
scas
sti
shlb
xor
push
in
cmpsl
ss
test
jne
pop
push
sub
hlt
or
into
xchg
sahf
mov
out
xor
jno
cltd
push
lret
mov
stc
xchg
push
jae
arpl
xor
push
push
sbb
and
sbb
sarl
dec
push
addl
ljmp
filds
in
cmc
popa
lds
mov
and
adc
sbb
mov
or
and
fiadds
repnz
or
sub
mov
push
hlt
out
add
jne
add
cltd
sub
xchg
movsb
scas
movsb
imul
out
fcomps
add
ljmp
pop
mov
add
nop
lahf
popa
ja
bound
dec
aad
sbb
xchg
sbb
addl
int3
and
shlb
cmp
ret
loopne
adc
mov
sbb
shll
mov
out
shll
in
xchg
mov
sub
ss
cs
test
subl
add
imul
addl
push
xor
rolb
repnz
dec
xchg
adc
push
xor
lds
into
push
pop
mov
outsb
pop
sbb
sbb
mov
out
push
adc
xor
in
inc
and
mov
in
out
stos
outsl
mov
cmp
ja
lds
cmpb
dec
pop
xchg
jp
js
jno
pop
inc
or
in
jecxz
fwait
iret
cmpsb
out
mov
and
jge
lods
xor
out
arpl
jge
stos
shrb
in
in
xor
mov
je
cmc
pop
push
mov
add
dec
xchg
mov
push
int
jnp
and
jmp
aam
mov
jb
aas
adc
and
adc
lcall
outsl
popa
mov
mov
mov
pmulhw
cmpsl
push
lret
sub
push
push
cmp
and
cld
gs
mov
pop
pop
cltd
cld
xlat
icebp
cmp
test
mov
jns
add
adc
and
and
stc
clc
cwtl
jae
out
push
sub
pop
and
add
in
enter
xchg
add
inc
adc
shll
pop
sti
push
mov
lds
out
in
gs
xchg
fsincos
movb
xlat
mov
and
lea
lcall
pop
cs
or
fsubrs
shrb
cld
fs
clc
in
pop
push
stos
ss
inc
or
bound
mov
and
rcr
sahf
into
inc
or
in
in
fsubs
je
sub
sbb
insb
hlt
shll
push
scas
es
xchg
pop
in
repz
push
pop
out
push
xchg
sub
ret
sub
push
nop
push
sub
xlat
inc
cmp
jmp
popf
pop
mov
dec
lods
jno
xor
fdivrl
fs
mov
cltd
shl
dec
sub
or
ret
jo
sub
xchg
sbb
inc
mov
mov
jge
dec
pop
sbb
xchg
shll
pop
sbb
mov
pop
aam
mov
ljmp
cmp
stos
lcall
cmc
mov
sbb
repnz
ja
fucomi
insb
cmp
mov
xchg
jge
sub
into
inc
mov
xchg
jns
fbld
push
test
lahf
loop
jno
aas
sub
xor
sbb
in
dec
add
mov
mov
push
mov
or
incb
aaa
sub
hlt
jne
sbb
mov
cmpl
pop
mov
cmc
jecxz
push
sahf
add
gs
in
sub
aaa
xor
das
cmpsl
sub
lods
clc
jae
fcomip
pop
ss
push
ret
out
rcr
fldl
add
test
cltd
sbb
mov
iret
fsubrl
scas
cmp
mov
loopne
scas
cmp
add
negb
xchg
jnp
xchg
jbe
push
pop
pop
mov
stc
aad
mov
divl
imul
pop
add
sti
xchg
push
nop
xlat
movsb
inc
push
lods
jmp
ljmp
xchg
test
xor
dec
mov
das
mov
enter
pop
pop
pop
rclb
xchg
cli
cld
lods
dec
jp
dec
call
fwait
mov
insl
and
mov
inc
jns
shrl
stc
pop
stos
push
cmp
xor
push
jle
loop
cld
mov
addr16
jnp
outsb
lret
adc
sbb
clc
xchg
mov
adc
pop
pop
mov
or
icebp
shlb
mov
jo
mov
push
loop
arpl
inc
shll
jb
push
push
ror
push
adc
sub
mov
jg
bswap
fisubrl
xor
aam
push
idivl
sbb
clc
mov
pop
nop
orl
xchg
adc
push
and
dec
cmc
loope
and
adc
sbb
push
cld
xor
xchg
xchg
dec
rorb
push
pusha
or
movsb
in
jns
pop
mov
cmp
shlb
shll
or
mov
jmp
arpl
mov
mov
js
loop
adc
adcl
mov
or
mov
inc
icebp
int
mov
dec
lods
adc
iret
loope
scas
or
les
dec
mov
ret
jle
jno
rcrl
loop
and
shll
dec
and
pop
cmp
add
or
mov
cwtl
cmp
jbe
or
xor
subb
mov
inc
insb
pop
gs
cltd
pop
mov
mov
fs
xchg
jecxz
xchg
int3
jno
call
test
fs
sbb
ret
mov
pop
adc
in
xchg
jbe
iret
xor
cmp
jne
cmc
xor
mov
mov
jp
imul
das
insl
push
fwait
sti
fisubl
add
outsl
in
sub
repnz
in
adc
dec
in
lods
cmp
pushf
xchg
inc
test
insl
xor
out
mov
iret
int
icebp
xchg
bound
xchg
repz
addr16
stc
and
pop
js
lock
out
aas
xor
jmp
adc
mov
fcompl
jns
out
aaa
inc
add
adc
dec
imul
and
pop
pop
sub
mov
cmp
es
dec
outsl
adc
add
push
xor
mov
jecxz
repz
push
mov
fwait
push
aaa
lds
ljmp
arpl
sbb
sub
lcall
daa
lcall
test
sub
fdecstp
mov
mov
fmull
sahf
loop
mov
jns
pop
pop
pop
mov
or
fcompl
loop
daa
cmpsl
dec
nop
dec
and
jp
pop
cmc
loope
push
pop
inc
jp
and
fs
movsb
and
xlat
jno
and
inc
pop
movb
push
jae
mov
insb
loope
or
xchg
and
push
rcll
loope
push
mov
cwtl
push
dec
roll
in
mov
mov
mov
inc
dec
loope
out
jnp
dec
push
dec
out
lock
and
out
push
aad
push
testl
daa
jle
aad
adc
addl
outsl
movsb
add
mov
xchg
xor
lods
lock
es
hlt
or
rol
fisttpl
pushf
jecxz
sbb
xchg
jns
push
out
adc
test
add
jecxz
cmp
jl
sub
imul
cmc
nop
push
add
lea
pop
scas
jmp
and
cmpsl
xchg
adc
adc
pop
and
out
cmpsl
out
xor
or
sub
jno
xor
sahf
popa
imul
nop
gs
sti
push
cmpsl
xchg
xchg
xor
in
pop
inc
xchg
push
jnp
adc
insb
adc
loope
pop
sbb
inc
lods
outsl
pushf
xchg
dec
sbb
push
mov
dec
fcoml
add
xchg
shrb
sbb
or
mov
add
push
cmp
aam
mov
test
hlt
xor
dec
push
sbb
mov
fmul
cltd
dec
mov
and
sub
aas
mov
jecxz
jmp
xchg
or
je
sahf
mov
jg
hlt
mov
push
xchg
fsubs
shlb
mov
popa
ss
xlat
adc
xlat
gs
sbb
clc
aaa
fisubrl
inc
cli
inc
inc
sahf
dec
cs
mov
lods
aam
jne
jl
jge
xor
mov
sbb
xchg
cltd
jge
imul
push
loop
inc
movsb
xchg
sub
sti
pop
inc
scas
mov
cltd
sbb
insl
sti
xchg
aam
ret
pop
pusha
xchg
outsb
xor
stos
jmp
mov
call
imulb
jnp
xchg
loopne
add
mov
xor
pop
xor
mov
je
aad
out
cwtl
or
xchg
out
pop
orb
cmpb
cmp
xchg
xor
jg
mov
sbb
fcoms
fnstcw
adc
cs
sub
jns
mov
or
int3
xor
fldt
clc
mov
sbb
xchg
std
cmp
xlat
ja
inc
mov
lret
dec
jno
mov
iret
mov
cli
cli
adc
mov
mov
xchg
outsl
dec
bound
das
ljmp
fcoml
dec
arpl
rcrb
sbbb
mov
subb
sti
das
mov
dec
das
xchg
lcall
mov
cmc
xchg
push
inc
inc
xor
add
mov
push
sbb
mov
push
pushf
add
mov
and
mov
pop
es
mov
dec
mov
push
clc
and
sahf
or
sub
dec
dec
push
push
ret
jl
jg
test
sarb
in
dec
js
jne
pushf
stos
inc
or
push
rcr
lds
or
ret
out
mov
test
cmpsl
push
mov
mov
js
and
in
jecxz
pop
inc
cmp
dec
cmpsl
lods
icebp
nop
adc
xchg
inc
pushf
leave
cmpsb
cwtl
leave
mov
fstp
xchg
xchg
xchg
sub
xor
cmc
andl
pop
add
xchg
insl
add
xchg
imul
sub
je
push
inc
mov
pushf
adc
xlat
shr
mov
dec
cltd
loope
aad
out
cmp
push
push
lds
xchg
stos
addb
mov
jp
mov
jge
nop
incb
xchg
adc
push
push
ja
cmp
inc
push
in
test
adc
or
jle
mov
insl
jmp
add
sbb
add
icebp
mov
cmp
in
fidivl
inc
pop
and
mov
lret
xchg
add
in
push
shll
jp
or
push
andl
pop
fistl
sahf
clc
mov
adc
ficoms
sti
cmpsl
push
test
mov
out
jl
rcl
data16
std
sbb
inc
mov
fucomip
out
insl
ror
cmp
push
cltd
insb
and
sub
xchg
out
test
inc
and
lods
jb
icebp
in
pop
iret
loop
fcoms
sbbb
add
jo
xchg
into
mov
loope
xor
stos
mov
xchg
cltd
mov
jae
push
jbe
fimull
jp
jno
loop
dec
mov
mov
mov
push
push
mov
pop
mov
aam
nop
jns
add
aas
fcmovnb
mov
jp
stos
cltd
push
xchg
inc
and
add
nop
fninit
sbb
test
pop
push
test
mov
insb
add
into
add
mov
jae
mov
enter
lret
cmp
dec
repz
cs
insb
shll
jl
and
insb
xor
popa
add
movl
out
mov
insl
jecxz
inc
jmp
popf
iret
xchg
lahf
pushf
scas
jnp
ret
out
xchg
in
inc
scas
adc
idivl
mov
movsl
lds
push
pop
add
sarl
ds
stos
loope
fwait
pop
adc
adc
cmpsl
andl
inc
shl
mov
jno
sbb
xor
cs
and
pop
adc
adc
inc
inc
add
mov
rcll
mov
mov
and
adc
mov
lcall
stos
stc
cwtl
clc
jb
inc
lds
xorl
divl
cmp
pop
mov
xchg
lea
xchg
xor
push
test
sbbl
dec
in
adc
dec
sbb
stos
add
jp
dec
push
or
movsl
inc
jae
xchg
imul
test
dec
bound
lret
push
xor
mov
mov
inc
mov
push
fs
cmp
je
popf
cmpl
mov
cmp
cli
popf
push
loop
test
mov
daa
mov
sub
cmp
mov
movl
jg
dec
sbb
push
mov
xor
hlt
jge
dec
fstps
mov
cmp
xchg
ds
stos
push
jp
dec
addr16
mov
negl
sub
mov
orl
add
cmpsl
addr16
frstor
pop
jg
insb
iret
push
lahf
aas
pop
push
mov
mov
push
fcomps
test
sti
sub
add
mov
push
mov
out
xchg
dec
lcall
mov
xchg
xchg
sub
cli
popf
cmpsl
movsb
inc
fs
mov
and
cld
mov
or
subl
imull
xchg
sbb
mov
cmpsl
and
js
mov
sbb
js
sbb
popa
sbb
pop
inc
je
mov
mov
test
shlb
cli
add
jl
adc
mov
movsl
xor
mov
sub
and
mov
inc
inc
pop
addb
pop
movsb
outsl
flds
sahf
cwtl
sub
hlt
inc
jmp
mov
nop
and
loopne
pop
cmp
mov
mov
lods
push
mov
subb
and
dec
out
xor
inc
push
cmpsl
mov
in
out
inc
lcall
jmp
daa
cmp
add
sbb
repnz
ret
adc
jns
lods
xor
icebp
xchg
lea
loop
xchg
int3
or
cmc
movsb
jo
shll
loope
imulb
sbb
scas
or
sbb
in
aam
std
les
mov
pop
ficoml
mov
pop
rclb
inc
add
hlt
lds
call
adc
pop
ror
cmp
into
and
outsl
and
fcomp
push
int3
add
scas
repz
pop
push
outsb
pop
dec
or
and
mov
cmc
push
out
icebp
adc
xchg
xchg
jne
push
push
pop
mov
and
sbb
pusha
stc
mov
dec
dec
data16
adc
loopne
aaa
aad
cmp
fsubs
popf
out
test
lds
loop
in
in
cmpsl
inc
or
cli
jae
mov
in
in
xor
out
cltd
lret
aaa
pop
lea
dec
mov
add
and
sub
cmp
aas
in
adc
mov
outsb
stc
rol
popa
inc
xor
and
pop
mov
jmp
js
pop
cmpsb
call
fisubrs
cmp
subb
jl
xchg
lea
arpl
jmp
dec
sub
testb
lahf
adc
mov
aad
xor
xlat
and
xchg
sbb
jecxz,pn
mov
loop
fbstp
push
push
data16
pusha
test
xchg
cwtl
push
ljmp
fs
mov
xchg
push
mov
outsb
sub
mov
xchg
outsl
icebp
int3
dec
int3
and
pushf
cmp
aaa
cmc
mov
pop
push
and
adc
icebp
or
mov
test
cmc
jl
rcr
in
stos
shr
add
sbb
push
xor
out
test
jle
mov
jge
arpl
or
push
mov
subb
mov
into
fsub
pop
ja
and
rcll
xlat
push
sbb
adc
sub
scas
pop
pop
add
in
sub
das
inc
rorl
mov
xor
clc
and
xorb
xor
fcoml
pop
cmp
xor
jmp
sub
dec
test
xor
adc
shlb
mov
nop
bound
jb
andb
in
addr16
mov
inc
inc
pop
xchg
cli
jo
stos
jecxz
xchg
imul
jne
fbstp
outsl
xor
adc
aaa
loope
adc
lods
pop
dec
jge
aaa
rcrb
push
mov
aas
mov
or
lea
int3
ljmp
jne
and
pusha
mov
xor
addb
sbb
aaa
arpl
cmc
push
inc
push
std
lods
loopne
aam
mov
lea
in
dec
pushf
and
leave
std
aad
or
leave
push
repz
fisubrl
pop
lds
xor
push
or
lcall
std
ds
push
sbbb
popa
das
mov
jnp
adc
cld
dec
jp
dec
cmpb
jns
out
aam
xor
test
mov
xchg
mov
icebp
and
nop
mov
pop
int3
iret
mov
stc
push
fbld
es
pop
xchg
nop
stos
and
mov
insb
cltd
mov
xchg
sub
imul
pop
fwait
or
adc
add
inc
xchg
mov
push
and
or
fwait
cli
ja
lea
andl
jg
das
adc
jmp
or
mov
push
pop
stos
test
sbb
mov
pop
xor
dec
cmpsb
inc
inc
push
or
add
setg
imul
sbb
cmpsl
adc
idiv
xchg
into
xor
adc
mov
pop
sbb
sahf
imul
jne
outsb
jle
test
mov
push
imul
incb
inc
mov
push
shll
and
push
sti
cmpsl
enter
int3
insb
or
dec
xor
popa
popa
push
jnp
or
loop
sbb
push
pushf
fistl
mov
push
xor
sub
shlb
push
dec
xchg
jo
and
int
mov
jmp
cmp
pop
std
pop
pop
shrb
mov
pushf
outsb
inc
movsl
ljmp
and
mov
stos
stos
mov
xchg
insl
cli
mov
push
adc
fisubrl
mov
push
and
lret
mov
out
xorl
mov
inc
out
lret
jle
pop
pop
push
loop
or
pop
int
icebp
jg
mov
dec
daa
clc
adc
push
adc
fldl
mov
fs
jg
sahf
jo
clc
test
push
je
xor
cmp
outsl
in
mov
pop
ficompl
or
xor
loope
ljmp
sbb
icebp
cwtl
aam
cltd
addb
ret
je
adc
js
js
in
imul
rcrl
cmp
inc
movsl
mov
or
adc
cli
or
adc
cmpb
cmp
into
mov
daa
dec
cld
inc
notb
pop
into
outsl
gs
fldl
lods
xor
dec
sbb
out
in
outsl
shlb
and
nop
mov
inc
mov
pop
addl
call
mov
jnp
loop
cmp
sbb
cmc
in
pop
or
leave
adc
scas
xor
shll
sbb
mov
mov
clc
jge
or
sbbl
imul
mulb
xchg
and
loope
call
aam
lcall
mov
mov
inc
test
lds
jmp
mov
dec
inc
dec
mov
push
daa
inc
stos
test
and
fcompl
aad
and
adc
cltd
outsl
xchg
jns
stos
mov
sbb
aaa
js
adc
lods
cmp
int
call
pop
popf
adc
xchg
aam
lret
xchg
fwait
cmpsb
xchg
sub
cmp
cli
push
fisttpll
pop
jmp
add
inc
in
xlat
sbb
roll
loope
mov
into
dec
add
iret
jns
lea
pop
cmc
adc
or
out
sub
fnstcw
xor
mov
jmp
sub
mov
sbb
xchg
insl
in
out
jle
push
insb
mov
mov
nop
mov
xlat
sbb
imul
xchg
adc
push
xchg
stos
add
inc
push
mov
test
fbld
int3
pop
out
rcll
arpl
sarb
addr16
and
mov
gs
cwtl
in
cmp
dec
fisubrs
fisubl
fnstsw
pop
xchg
mov
xchg
js
out
cmp
or
cmpsb
sub
jmp
popf
idivb
push
cmp
out
shlb
add
xchg
in
gs
add
xor
in
xchg
iret
xchg
aad
push
std
lahf
pop
jb
inc
fucomp
push
jnp
sbb
cmp
fisubl
xlat
push
ret
push
mov
pushf
gs
nop
movsb
xor
cmp
sbb
jle
das
jne
or
or
jbe
outsb
ds
cmp
leave
stos
fucomi
sub
mov
mov
cltd
lods
jecxz
push
aad
cmp
stc
rolb
ret
imul
add
inc
push
std
int3
movsl
mov
iret
sub
push
sub
cs
mov
xor
fdivrs
rolb
jecxz
mov
inc
mov
ficomps
aam
mov
aaa
mov
outsb
mov
movsl
popa
cld
std
fimuls
and
add
sbb
mov
mov
sti
xor
movsb
push
push
les
loope
adc
xorl
addl
lods
dec
inc
or
addr16
mov
xchg
insl
and
push
clc
aad
aam
cltd
jmp
dec
lds
les
nop
jae
inc
cmp
dec
repz
loop
rcll
lock
imul
jbe
inc
mov
xor
rorb
sub
nop
fwait
ss
data16
je
cmpsb
jnp
sbb
add
push
xor
mov
pop
mov
add
imul
lods
push
xchg
lea
fstpl
pusha
push
jns
pcmpeqd
mov
dec
cmpsl
rcll
mov
push
add
dec
push
xchg
cmp
sbb
sbb
xor
xlat
popf
stc
mov
pop
sbb
into
jne
clc
jmp
ficompl
lods
stos
mov
jmp
stos
leave
lret
cmp
xor
jbe
dec
je
pop
lret
addr16
push
bound
jo
jge
loop
jg
ljmp
outsl
mov
aam
outsb
lea
nop
push
add
inc
aam
jne
mov
pop
pop
sbb
es
leavew
and
push
xlat
push
jle
lahf
sbb
stc
aam
pop
sub
jb
dec
int3
in
jne
stc
push
shlb
mov
aas
adc
jg
sbb
movsb
ds
call
jne
les
pop
repnz
pusha
dec
cmp
fldt
adc
mov
mov
mov
jg
scas
add
test
lret
dec
daa
insl
and
cmc
lret
push
ja
pop
cmp
mov
pop
dec
add
out
mov
fdivl
jmp
add
std
cltd
sarb
mov
pop
xchg
mov
cld
mov
pop
push
cs
aas
mov
ret
mov
and
in
addl
mov
aam
aas
aaa
xchg
xchg
cltd
adc
lea
ljmp
rcrb
stc
dec
pop
or
cwtl
pop
cmp
or
mov
dec
fisubrs
add
sbb
sbbl
lea
add
cmp
shrl
movsl
mov
mov
mov
into
aad
xor
xlat
popa
fucomip
adc
fisttpl
gs
call
fucomip
mov
or
and
push
mov
adc
mov
xor
xchg
xchg
pop
xchg
dec
aas
lds
ljmp
xchg
loope
xchg
cli
and
mov
pop
fcoms
mov
or
cmp
js
mov
xlat
jecxz
testl
cmpb
andl
xor
out
inc
jmp
xchg
and
xchg
test
mov
test
fisttps
mov
sbb
push
jmp
lcall
test
bound
nop
das
dec
subb
je
pop
mov
sbb
popf
dec
inc
mov
hlt
cld
cmp
out
adc
sub
nop
js
ds
jns
fldl2t
add
adc
push
std
dec
imul
adcl
cmpsl
push
sbb
testb
mov
imul
stos
test
push
imulb
xchg
sub
inc
sbb
mov
push
and
push
imul
sbb
sbb
sub
xchg
adc
bound
jne
cmp
mov
repz
jl
pop
scas
and
popf
ret
sbb
aaa
fucomip
dec
subb
pop
jle
xor
mov
or
mov
cmpsl
sbb
pop
inc
sbb
or
popf
aam
jp
xlat
jbe
pusha
add
call
mov
push
lea
xor
scas
fcmovnbe
jle
dec
cmp
inc
hlt
mov
or
daa
mov
aam
lahf
add
cli
and
sbb
add
dec
test
mov
fisubrl
inc
jmp
pushf
and
aaa
and
int3
dec
sbb
inc
cmp
scas
data16
aas
and
jmp
and
dec
movsb
push
push
sbb
loopne
cmp
scas
out
decl
hlt
or
scas
cwtl
xor
lods
xchg
ljmp
roll
pop
pop
ficompl
rolb
mov
or
or
bound
inc
xchg
or
jnp
push
adc
lea
or
test
add
aas
popf
jo
jp
shrb
imul
or
sbb
inc
loopne
jnp
iret
xchg
mov
addl
imulb
xor
jno
dec
jl
and
mov
sbb
sbb
sbb
xor
mov
add
pop
fidivrs
sub
or
adc
jno
mov
insb
loope
and
or
sbb
data16
aas
insb
dec
xchg
pop
and
jb
je
jp
shrl
pusha
pusha
cmp
lods
loopne
out
adc
cs
rcll
fwait
aad
dec
ljmp
sub
dec
popf
pop
rorb
loopne
test
mov
mov
cwtl
loop
bound
push
jbe
stos
cmp
adc
es
es
xor
sbb
push
pop
shl
fcmovu
not
ja
lahf
inc
jecxz
cmp
cmp
jno
xor
fadds
mov
insb
lock
aad
push
jnp
xchg
dec
pop
mov
in
pop
pop
adc
xchg
and
leave
mov
mov
add
fcoms
jne
pop
adc
xchg
ljmp
gs
sahf
dec
xchg
cmp
or
mov
inc
cld
sbb
mov
test
inc
and
or
mov
mov
mov
mov
mov
jno
pop
test
sub
xor
jp
mov
jecxz
lock
in
mov
mov
mov
or
fstpl
pop
nop
jne
nop
sub
dec
fdiv
or
stc
or
pop
cmp
push
sti
dec
sbb
aaa
mov
adc
aaa
or
std
out
jp
mov
ret
dec
pop
add
aaa
push
pop
es
movsl
mov
and
cltd
addl
ret
jg
and
push
mov
cmp
sbb
adc
mov
loop
fidivrl
mov
lods
push
loop
ret
fcomip
add
sbb
rorl
xor
jbe
shrb
ret
mov
adc
xchg
bound
lock
adc
xchg
push
and
or
jb
jb
rep
dec
inc
sub
jg
add
xor
push
dec
jo
mov
nop
js
addb
push
mov
cmpl
int3
mov
lea
loop
lds
and
cmp
shrb
push
fdivr
repnz
mov
int3
xchg
lret
push
pop
das
jno
push
fs
sahf
out
into
sub
pusha
cmc
cmpl
pop
aad
outsb
repz
mov
mov
in
jo
jnp
inc
cmp
cltd
sahf
inc
aad
movsl
inc
mov
in
jle
es
test
ret
int
arpl
arpl
lea
divb
ss
add
jecxz
xchg
insl
ret
adc
fisttpll
fdiv
cmp
shrl
jns
mov
and
dec
icebp
xchg
popf
outsl
sub
nop
cmp
add
addb
xchg
push
ret
adc
sub
test
orl
mov
je
sbb
jbe
enter
and
loope
std
cltd
mov
jmp
dec
cs
aam
jle
or
or
call
scas
test
mov
pop
jge
fisubl
dec
adc
outsl
mov
push
mov
aas
push
mov
xor
xor
test
sub
sub
scas
sar
and
and
add
or
fs
mov
xlat
fadds
adc
jp
decb
or
clc
mov
ret
and
std
ljmp
mov
mov
imul
inc
stc
push
sub
dec
pop
stos
jg
pop
sarb
cmpsb
loopne
add
gs
mov
mov
int
je
out
xor
and
cmp
out
incb
out
jne,pn
jg
out
or
pop
adc
ret
inc
dec
lahf
push
dec
mov
popf
xor
cld
fisubrs
fiaddl
loop
imul
out
out
out
leave
xor
int
and
push
pop
inc
cs
and
cs
arpl
and
push
lret
add
movsl
push
inc
adc
sub
stos
into
dec
push
push
movsl
xchg
insl
int3
mov
mov
fcmovb
je
mov
push
push
pushf
in
xlat
lods
add
iret
mov
hlt
push
in
int
mov
push
es
or
sahf
cmp
add
mov
and
out
repz
leave
js
jnp
out
xchg
ret
es
movsb
push
and
enter
dec
adc
fisttpl
mov
jne
cmp
xor
aad
and
inc
int3
pop
lds
ljmp
dec
xchg
sbb
jae
push
jmp
push
mov
cmp
das
fyl2x
push
cmp
js
int
mov
in
das
mov
jecxz
sbb
shlb
sub
popf
add
stos
in
notl
push
out
popa
ds
cmp
dec
js
std
jg
gs
add
dec
push
xchg
mov
out
insb
test
pop
cltd
arpl
les
jmp
dec
sub
adc
mov
pop
shll
and
repnz
push
add
cmpsb
lcall
std
lret
xchg
dec
and
xor
adc
leave
sbb
xchg
cmp
mov
xor
xchg
imul
inc
pusha
lods
enter
pusha
lahf
stc
sub
clc
push
xchg
int3
sbb
xchg
es
popa
jecxz
cmp
add
imul
sub
pop
lea
aad
movsl
and
push
cltd
shll
out
xor
pop
cmpsl
xlat
ja
or
mov
push
or
push
mov
gs
mov
xlat
outsb
push
cs
ret
clc
pop
stc
mov
pop
cmp
ja
pusha
inc
jo
push
movsl
das
push
je
push
pop
fidivrs
enter
cmpl
mov
pop
fsubr
test
ficompl
xchg
mov
clc
sbb
leave
popa
loope
inc
or
pop
mov
icebp
xor
or
dec
fs
push
insl
cli
enter
pop
pop
fdivrl
xor
or
mov
imul
insl
inc
add
cmp
dec
sub
aad
pop
sti
sbb
pushf
mov
std
mov
mov
scas
inc
mov
mov
ljmp
push
lret
mov
mov
xchg
cmp
movsw
mov
mov
jae
pop
jg
jb
lahf
in
jmp
rorl
xor
jg
movsl
xor
daa
mov
cltd
addr16
fisttpll
xor
mov
faddp
xchg
sbb
pop
mov
inc
cmp
adc
push
mov
sbb
push
mov
mov
mov
cmpl
or
xchg
xchg
adc
scas
jle
arpl
insl
pop
in
cmp
addr16
ja
xor
test
test
add
or
cmp
aas
mov
inc
pop
ret
jne
jecxz
jge
xor
inc
movsb
pop
mov
pushf
dec
aaa
xchg
dec
or
lods
and
lret
or
xchg
mov
sub
jno
lcall
cmp
fsubl
inc
jb
lret
insb
adc
lcall
in
mov
cmpl
add
jae
std
inc
jg
and
mov
faddl
jecxz
fimull
std
call
leave
xor
clc
or
adc
or
sub
pop
gs
xchg
fchs
popa
or
adc
pushf
cld
push
imul
ss
add
add
insb
lret
arpl
lret
inc
push
xor
pusha
inc
setbe
cli
push
sar
xchg
in
lods
cmc
mov
arpl
lahf
pop
xor
je
movsb
jmp
dec
jp
fsub
lret
out
dec
mov
xchg
fists
subl
cmpl
sbb
and
jp
adc
ret
jo
sub
jp
push
iret
cwtl
jge
shll
xchg
fidivrl
cmpps
test
das
int3
test
insb
js
test
xchg
cmp
stos
setae
ss
push
inc
jp
fcmovbe
and
jnp
insb
dec
jle
fwait
pop
mov
sti
mov
mov
mov
and
cmp
pop
inc
loop
xchg
rorl
cld
mov
sbb
ja
sbb
test
popf
sub
jo
xor
das
xchg
xchg
xchg
cmpsl
sbb
imul
inc
ret
and
xor
add
xor
stos
movsb
mov
mov
lods
scas
lea
test
dec
bound
jno
rcll
mov
andl
inc
fs
or
jl
jo
or
pop
push
pop
ret
mov
pop
fistpll
divps
into
cmpsl
in
cmp
push
sbb
pop
dec
insb
dec
lret
sub
std
out
fcmovb
aas
gs
lcall
sahf
mov
add
pop
outsl
adc
cmp
sub
push
sahf
adc
sbb
pop
fwait
std
and
dec
jne
fadds
or
ret
lods
out
frstor
mov
lahf
ss
aam
mov
js
sbb
cmp
cmpsl
add
xchg
cmpl
rorb
mov
jnp
out
adc
xchg
add
pop
xor
push
in
loop
sub
inc
int
loope
out
aam
ja
pop
hlt
mov
stos
cmp
adc
push
test
or
je
stc
mov
mov
jle
sbb
xor
addr16
xlat
sbb
or
je
pop
adc
mov
adc
push
in
mov
sub
cmp
adc
clc
push
cli
xchg
rcr
out
pop
sahf
jnp
stos
notl
cld
fwait
push
xchg
fisubs
mov
test
mov
and
mov
mov
lods
outsl
fists
ret
cmp
stos
adc
addb
test
dec
cmpsl
jb
pusha
jbe
or
pop
jo
add
movsl
outsl
stos
jle
and
jge
fstpt
scas
loopne
xor
cmpb
lahf
push
cmp
cmp
imul
mov
sti
pop
jnp
bound
adc
ret
mov
xor
and
adc
in
stc
mov
adc
xor
add
aaa
or
cltd
push
or
sbb
in
add
test
arpl
cltd
add
imul
add
mov
mov
mov
inc
cld
cs
test
icebp
inc
jae
test
leave
bnd
sti
aaa
test
lcall
sub
mov
mov
popf
add
mov
xor
into
in
test
push
adcl
pop
xchg
jae
ljmp
cmp
xchg
sbb
out
lcall
xchg
mov
add
aam
outsb
jge
and
cmp
push
sbb
jne
daa
jns
jae
jmp
or
in
mov
lock
stos
cmpsb
adc
jae
push
add
and
mov
out
inc
xchg
sbb
mov
sub
jo
mov
stos
stc
mov
sbb
insb
mov
mov
out
ljmp
in
mov
mov
push
insl
into
fidivrl
cmp
cwtl
adc
shrl
or
or
cmp
push
cmp
and
insl
mull
fimuls
cmp
stc
pop
popa
jbe
xchg
pop
test
cmp
cli
lea
loopne
sub
xchg
repnz
xor
divl
inc
shlb
mov
mov
sbb
jl
loopne
adc
xor
repz
push
adc
into
ss
xchg
mov
pop
dec
cmc
jecxz
add
mul
ret
inc
in
push
cltd
out
movsl
iret
push
fdivs
imul
ret
sbb
dec
jnp
fldt
in
fdivp
add
push
mov
repz
jnp
pop
jo
mov
addb
imul
stos
jge
add
mov
ljmp
out
or
and
rcrl
gs
inc
pop
mov
stos
hlt
or
mov
cwtl
int
sbb
pusha
std
mov
stos
addr16
outsl
add
cwtl
jmp
pop
and
pusha
xchg
shll
mov
cmp
dec
push
xchg
xchg
movb
popf
das
mov
rorb
and
int
mov
jnp
fadd
or
sub
jge
mov
or
xchg
mov
pop
test
dec
sbb
sbb
lods
xorl
dec
adc
and
aam
pop
nop
lea
jne
decl
xchg
sbb
push
lahf
jge
loopne
sub
lcall
test
inc
jle
and
push
mov
fmuls
push
dec
pushf
mov
dec
jg
loope
stos
mov
ss
jo
xchg
fisubrl
push
shrb
inc
mov
xor
pop
scas
ljmp
and
mulb
push
jo
inc
jl
and
testl
faddl
repnz
aaa
lret
pop
jp
std
out
imul
dec
pusha
pushf
idiv
xor
xchg
pop
faddl
push
jge
outsl
push
mov
jmp
mov
lods
lcall
aad
insl
leave
dec
loopne
cld
in
movsb
push
xlat
and
dec
mov
dec
jno
push
sbb
adc
xchg
ror
mov
in
mov
adc
and
dec
inc
movsb
dec
lret
xor
jns
repnz
mov
std
cli
sub
inc
push
test
sbb
add
xorb
lcall
out
iret
sahf
push
rclb
cmp
out
or
mov
gs
rcrb
out
adc
pop
fisttps
and
in
inc
faddl
dec
sbb
push
aas
dec
or
sub
jecxz
adc
or
ret
mov
fs
lods
or
or
outsl
ja
les
in
les
in
sbb
or
hlt
and
test
insb
jae
gs
icebp
int
xchg
mov
shrd
pusha
lahf
cmp
cmovge
xor
lds
add
lods
xor
cmp
fdivs
imull
xorb
push
imul
stos
cmpsl
add
cmp
lcall
cmp
pusha
popa
lcall
mov
push
cwtl
movsl
aam
aad
pop
jnp
stos
icebp
aam
jl
cmp
subl
jp
pop
icebp
lahf
roll
cmpsl
hlt
aam
inc
mov
add
adc
repz
das
je
xor
or
mov
jb
adc
jle
pop
mov
mov
pop
outsl
xchg
and
stos
fsts
sti
in
sti
mov
loopne
ds
push
pop
inc
lods
xlat
cmp
dec
cli
or
in
inc
out
jge
push
rolb
loop
sub
mov
mov
out
ljmp
stos
mov
rcrb
jnp
popa
lods
push
enter
loop
pop
xchg
jle
ljmp
mov
jecxz
jecxz
test
ret
push
xchg
push
push
cli
lret
mov
xchg
push
sub
in
pop
mov
andb
ss
mov
adc
aaa
std
cmp
call
fs
sti
mov
push
cmc
mov
andb
xchg
pop
clc
ret
jbe
push
sbb
loope
cmpsb
mov
cltd
pushf
mov
add
pop
data16
inc
xchg
rcrb
cmp
aas
sub
js
mov
sbb
js
xor
mov
or
mov
mov
cmp
dec
xchg
jo
out
arpl
scas
fwait
and
or
sub
sub
mov
das
add
pop
sbb
call
insb
outsl
dec
mov
std
popf
nop
icebp
dec
pushf
leave
inc
mov
and
xchg
push
rcll
push
cld
push
div
jb
loopne
aaa
cmc
jns
push
inc
jle
popf
daa
std
jecxz
sbb
xor
mov
push
cmp
push
mov
das
push
testb
aaa
aam
xchg
sbb
clc
push
jmp
popf
xor
dec
stc
mov
pushf
outsl
ss
ds
jmp
pop
jl
and
ror
push
rcl
ljmp
jae
insb
aam
psubusw
mov
mov
js
mov
adc
mov
pop
xchg
push
inc
xchg
aaa
cmpsl
dec
mov
sub
jo
push
xchg
mov
mov
jne
add
cs
js
lds
and
jg
ret
stos
dec
addb
jge
jo
push
mov
sbb
popa
pop
sub
repnz
or
add
jmp
inc
pop
into
inc
aam
mov
jmp
cs
jo
sbb
cmp
ss
pusha
aaa
adc
cmp
dec
out
mov
add
sub
repnz
push
arpl
sbb
dec
push
and
mov
jg
mov
pop
and
hlt
jmp
out
xchg
mov
into
dec
and
pop
mov
aaa
inc
movsb
mov
arpl
sbb
pop
jmp
in
sbb
mov
mov
push
rorl
adc
jg
push
clc
push
mov
bound
xchg
and
pop
sbb
stos
ds
dec
xor
mov
sub
jmp
imul
push
cmp
cwtl
lock
jnp
jl
xchg
lahf
icebp
jnp
clc
shl
cltd
or
fdivrs
dec
jmp
sbb
leave
nop
call
cli
int3
clc
mov
in
mov
hlt
xor
pushl
push
add
std
or
jg
push
subl
dec
ljmp
daa
xor
insl
jecxz
mov
pop
xchg
mov
das
cwtl
iret
adc
adc
mov
sub
dec
lock
loope
mov
pop
nop
mov
lea
ja
arpl
or
testl
das
repz
cmc
test
or
stos
dec
popa
or
xchg
mov
xchg
loop
cltd
aas
dec
mov
mov
or
cltd
aas
sbb
imul
fsubs
movsl
test
xor
push
adc
jecxz
mov
fnsave
mov
inc
mov
cld
dec
pop
repnz
cmc
dec
loope
and
xlat
fsub
fisttps
cltd
call
stos
jnp
push
outsl
mov
push
ds
push
jb
and
mov
stos
dec
les
mov
pop
cmpsb
push
jp
mov
ljmp
mov
sti
pop
cwtl
mov
sbb
dec
loopne
int
sbb
adc
mov
cltd
nop
or
je
cmp
nop
push
mov
sbbb
out
xor
xchg
out
push
ss
andl
cld
cmp
shlb
pusha
nop
lds
cmp
lret
daa
mov
xor
mov
ret
xchg
dec
call
push
lea
mov
pushf
inc
lret
pushf
clc
mov
fs
xor
cmpsb
inc
ss
mov
cmp
dec
sbb
inc
cmp
pusha
vunpcklps
push
jecxz
cld
addr16
std
rolb
bswap
push
addr16
mov
push
testb
sbb
out
or
ret
or
mov
mov
add
iret
jmp
push
add
lret
into
push
es
lret
inc
int3
xlat
mov
ljmp
jnp
cli
push
shrl
jg
or
fdiv
rcrb
lret
dec
pop
inc
mov
sar
aas
mov
inc
jb
xchg
jge
or
dec
jo
push
outsb
addl
ffreep
repz
push
xor
jl
das
lret
mov
xchg
mov
call
fsubrl
xor
push
mov
push
test
sbb
xchg
sti
sub
mov
in
and
mov
and
fcoml
sahf
icebp
cmp
fcoms
mov
sti
nop
xchg
test
pop
je
imul
mov
fcmovu
jge
loope
push
push
or
add
ds
mov
ja
cmc
fs
xor
push
andb
repz
add
insb
xchg
sti
add
cmpsb
das
xchg
xor
xchg
adc
test
jae
fcmovbe
leave
and
clc
pop
xchg
push
ret
int
or
test
add
cmpsb
lret
sbb
and
sub
xor
mov
xchg
das
js
sbb
adc
jne
cmpsb
cmpsb
push
scas
jmp
inc
test
jmp
inc
adc
pop
inc
mov
arpl
dec
xchg
mov
mov
jmp
lock
int
gs
sbb
cmp
adc
push
inc
cmp
mov
or
sub
inc
stc
add
add
inc
repz
pop
push
add
jecxz
pop
notb
ss
fnstenv
mov
jns
testb
fwait
outsl
pop
inc
clc
in
mov
lods
and
dec
outsb
scas
inc
outsb
sub
mov
cld
push
imul
imulb
adc
mov
mov
and
ss
fdiv
in
pop
in
xchg
enter
xor
dec
mov
cltd
or
test
xor
jne
sbb
sahf
xchg
popf
inc
lcallw
jae
jge
icebp
lods
dec
mov
lret
lock
dec
mov
loopne
jno
adc
xor
jp
inc
daa
movl
push
imul
and
cld
inc
and
in
movsl
sbb
mov
mov
data16
or
sbb
dec
divl
xor
cmp
mov
mov
pop
int3
cmp
jno
outsb
sbb
fs
jl
sarl
xor
jg
sub
pusha
out
sub
rcrl
cwtl
jae
insb
nop
cmp
or
cmp
imul
sahf
test
movb
rcll
repz
mov
jne
shll
adc
or
mov
test
jl
jg
xchg
mov
js
cmp
push
je
ljmp
dec
xlat
jge
pop
aas
scas
scas
push
insl
addb
lods
ja
jmp
into
lock
jecxz
dec
xchg
js
mov
test
xor
outsl
adc
loopne
mov
mov
xchg
add
test
pop
orl
adc
push
add
mov
adc
rclb
test
addr16
mov
and
popf
mov
mov
rorb
sbb
ljmp
mov
stc
mov
push
rorl
or
push
subl
xor
mov
movsb
xchg
pop
sbb
jl
lahf
mov
lcall
outsb
aad
cmpsb
stos
insl
cmp
pop
bound
sub
jle
fadd
fstps
pop
mov
lret
cvtps2pd
lea
push
shll
pop
xchg
lret
repnz
addr16
mov
xchg
gs
and
xor
jle
in
dec
shl
add
mov
and
jbe
ja
mov
ss
call
popf
popl
lret
mov
adc
mov
nop
icebp
inc
jae
mov
jmp
scas
stos
dec
push
js
push
mov
scas
inc
lds
and
fmull
sub
jbe
xchg
fld
dec
gs
sub
out
shlb
insb
test
repnz
xor
mov
jmp
add
and
fidivrs
mov
jbe
mov
lds
rcrb
mov
push
xchg
test
mov
lock
icebp
adc
sbb
or
jl
popa
mov
cmpb
les
sbb
push
inc
rolb
push
pop
jo
mov
jo
cmp
cmp
mov
lcall
cmpsb
mov
jle
sub
and
out
xor
sbb
xchg
xor
out
sbbl
stc
lods
nop
sub
mov
push
orb
add
icebp
insl
hlt
jb
mov
outsl
jns
ret
out
sub
cltd
xor
push
out
mov
ret
mov
xorl
lret
repnz
aas
xchg
dec
jo
or
pop
lds
inc
pop
fcmovbe
jge
push
orb
and
jp
xchg
mov
std
test
dec
inc
xor
lahf
cmp
outsb
das
cs
rcrl
cmpsl
jbe
inc
call
pop
nop
and
jl
lods
or
cmp
inc
in
or
mov
xchg
adc
ret
negb
les
mov
ljmp
push
fs
lret
arpl
inc
arpl
mov
cmpsl
divl
add
mov
mov
jmp
jmp
sbb
sti
mov
fldt
imul
ljmp
loopne
sub
pusha
shrl
mov
stos
ds
cmp
imul
sarb
xchg
jl
push
jmp
iret
and
cmp
lds
int3
mov
or
inc
repnz
cmpsb
sub
test
cmp
rcrb
inc
jmp
cmp
sahf
add
inc
jae
sbb
mov
mov
jo
push
lock
jno
faddp
xor
repz
push
fmull
inc
sbb
js
add
jb
mov
jp
or
mov
jmp
xlat
out
dec
add
or
ja
stos
sbb
jno
pop
push
cld
pop
sub
test
cmp
mov
pop
outsl
cwtl
jns
mov
in
notl
push
cwtl
ja,pt
fs
xchg
xchg
scas
and
mov
pop
stc
jne
pop
popa
daa
fnsave
rorl
test
xchg
cmp
sub
cld
adc
scas
mov
movsb
mov
xlat
adc
jne
push
std
jo
aaa
jb
dec
mov
xchg
pop
jl
dec
sti
lock
pop
fwait
sub
and
pop
xchg
mov
add
out
and
xchg
sub
out
sti
dec
xchg
xor
fadds
scas
cmp
daa
push
lret
stc
js
shrl
adc
inc
cld
mov
pop
sub
insb
add
fcoml
inc
inc
fistpl
mov
dec
pop
test
push
push
cmp
rorl
dec
testb
xor
inc
cmpsl
leave
imul
pusha
and
aaa
xchg
inc
pop
xor
das
sahf
inc
outsb
push
add
test
into
loopne
push
int
sahf
xchg
imul
pop
sbb
ror
inc
pop
cmp
mov
iret
popfw
lods
imul
push
mov
inc
shlb
pusha
lea
mov
sbb
add
or
cmp
sahf
test
and
out
mov
and
dec
mov
xor
xchg
sub
fstpt
sub
adc
outsl
mov
or
jo
das
out
lret
pop
imul
cli
mov
insl
ljmp
repnz
ss
arpl
rclb
inc
add
fs
call
or
sbb
adc
sub
adc
sbb
inc
xor
outsl
sbb
or
mov
jns
out
hlt
sbb
shrl
fwait
lret
xor
adc
xchg
cmp
jl
in
lock
cwtl
sub
sub
mov
scas
sub
das
mov
mov
mov
and
lds
push
or
clc
int3
sub
dec
clc
lods
daa
jmp
scas
and
pop
xor
fisttps
test
or
dec
adc
add
shrb
ja
xchg
out
xor
sub
sbb
hlt
lahf
inc
hlt
cmpsb
dec
mov
xchg
pop
push
lds
sbb
scas
xlat
jb
fxch
adc
fmull
stc
pop
xor
leave
sar
xorl
imul
popa
jo
lods
jge
ljmp
call
inc
pop
sub
test
insl
cmp
test
mov
fldl
mov
in
pop
stc
inc
das
ret
xchg
mov
and
popa
cmpsb
movsb
inc
or
mov
outsb
mov
lret
loopne
fwait
movsl
mov
data16
pop
dec
mov
sbb
dec
or
loop
xchg
xchg
leave
loopne
neg
pop
pop
push
aam
xor
cli
sbb
adc
pop
or
repnz
mov
jle
dec
shll
pop
push
push
sub
adc
mov
loopne
dec
leave
les
jecxz
or
sub
loop
std
jbe
outsl
icebp
inc
pop
jge
xchg
out
icebp
cltd
cwtl
add
adc
push
mov
mov
ljmp
mov
loope
xor
gs
mov
inc
cmp
in
ja
push
or
daa
gs
sub
or
lea
sbb
xor
jle
lods
int
fstpl
push
ficoms
cwtl
adc
cmp
out
xorl
stc
popa
add
mov
or
jns
loope
cmp
imul
xchg
jg
sahf
sub
or
ja
movsl
cli
sbb
popa
jg
popa
stos
xor
lahf
add
mov
inc
data16
mov
std
or
leave
fisttpl
push
repnz
in
xchg
enter
add
or
in
push
fldenv
pop
fildl
add
into
cmpl
sbb
jecxz
testl
mov
pushf
mov
push
lds
fisttpll
dec
cmp
mov
xchg
je
xchg
jne
mov
pop
std
popa
aas
xor
ret
je
clc
mov
or
lds
shlb
rorl
cld
ret
and
outsb
std
aam
shll
stos
xchg
inc
jp
sbb
loopne
pop
inc
and
mov
xlat
adc
mov
mov
push
add
inc
sbbl
mov
inc
jne
push
addb
push
dec
repz
in
mov
movsl
rcrb
inc
or
out
test
and
popa
and
ljmp
ds
sahf
cmpb
das
cli
cmp
out
jae
std
ljmp
sbb
or
add
push
cs
cwtl
imul
gs
jmp
pop
adc
mov
push
jb
pop
scas
xchg
jo
xor
imul
movsl
bound
scas
insl
inc
jae
les
sbb
jo
lret
xor
sti
jae
fadds
pop
test
jns
ds
pop
lcall
fwait
push
cmpsl
or
dec
inc
lods
mov
sbbb
in
lret
adc
data16
jb
fwait
out
xchg
mov
add
nop
mov
imul
std
and
sti
sub
scas
xchg
inc
and
and
push
cmp
sbb
push
popa
dec
xor
adc
and
std
out
es
flds
sub
add
popa
xchg
inc
sbbl
out
movsb
cmp
cmpsl
loopne
mov
or
or
gs
push
loopne
repz
mov
or
pop
push
in
jge
aaa
lock
jge
test
jae
or
test
insb
test
or
insl
imul
cld
mov
xchg
jmp
ds
lcall
imul
stos
jno
mov
outsb
and
fistl
rcrl
and
fidivrl
ret
ss
les
outsb
in
push
xchg
and
out
xorb
push
and
ficoml
scas
mov
hlt
and
fwait
adc
mov
xor
push
test
sub
dec
xlat
push
dec
sbb
sub
cltd
jae
inc
rorb
mov
sbbb
lcall
cmovo
cmpsb
pop
cmp
loopne
pushf
or
sahf
and
aas
mov
adc
xlat
ds
xor
ja
xchg
inc
dec
cmp
push
iret
lahf
adc
pop
dec
adc
or
es
and
cli
loope
data16
repz
andl
insb
pop
aad
sbb
fdivrl
mov
aaa
and
sbb
jo
loope
lret
or
imul
pop
pushf
cmpsb
mov
mov
pop
loope
push
sub
pop
jp
rolb
inc
dec
mov
sbb
outsb
imul
fs
xlat
insl
adc
xor
add
sbb
cmpsb
adcb
loop
faddl
xacquire
sbbb
and
jge
mov
mov
add
jmp
or
xchg
and
dec
test
fdivs
sub
rcr
fdivl
xchg
push
mov
xchg
mov
adc
fwait
test
lahf
loop
rorl
je
pushf
leave
mov
mov
call
fcomi
mov
xor
xchg
pop
outsl
lock
mov
divl
je
rorl
push
popf
or
sbb
cs
xchg
mov
mov
push
mov
push
mov
inc
mov
in
or
adcl
scas
fsubr
mov
or
mov
mov
fstps
add
jge
mov
inc
pop
out
hlt
jmp
pop
stos
sub
in
ret
or
cmovp
pusha
sub
pop
icebp
cltd
cmpsl
loop
mov
fidivs
lods
add
fs
mov
dec
cmpsb
aas
fs
int3
inc
call
cltd
adc
jmp
in
push
jne
or
jmp
lcall
ficoml
movsl
in
mov
mov
cli
sbb
jae
aam
push
or
xlat
pop
sbb
scas
sbb
adc
xchg
pop
inc
lret
jne
add
sub
jo
testl
cmp
and
sbb
inc
inc
sub
pop
jmp
xchg
popa
mov
and
mov
cmc
stos
andb
addr16
adc
and
inc
testb
xor
add
inc
int3
jmp
fsubl
je
mov
or
mov
fadd
into
or
push
icebp
inc
dec
mov
xchg
pop
or
fbld
add
or
push
xchg
lods
lcall
adc
outsb
jl
nop
incl
jle
push
movsl
mov
mov
jns
mov
lahf
xchg
int3
nop
out
xor
insl
sub
jne
add
jb
js
xlat
and
aas
pop
fwait
dec
inc
je
adcl
inc
fistps
mov
rcll
ret
incl
add
in
sbb
test
xor
jmp
lods
xchg
jmp
fcoml
lds
xor
ds
xor
pop
xchg
scas
leave
in
xchg
cltd
fisttps
and
sbb
push
push
into
fidivrs
xchg
pop
inc
movq
and
roll
fidivl
adc
xchg
adc
cmp
je
mov
dec
add
jne
cmpsl
sti
or
dec
mov
int
sub
fisubrl
aam
pushf
sub
iret
fidivs
pop
push
int3
lret
cmpsl
arpl
test
pop
jecxz
mov
sub
roll
xchg
inc
inc
mov
and
aad
les
inc
xchg
ret
orl
call
dec
ss
cmp
or
les
loope
or
cmp
shlb
mov
xchg
int3
loope
push
clc
lahf
push
scas
aad
jnp
xchg
xor
mov
nop
and
add
inc
rol
ror
hlt
push
lahf
jg
jb
and
pop
cmp
fwait
out
outsl
add
repnz
lds
jl
in
push
jno
mov
test
mov
fs
cmc
or
mov
lret
in
cmpsb
push
test
ds
bound
fisttpll
mov
dec
pop
loopne
or
sub
dec
jp
cs
mov
mov
sbb
lods
mov
jb
jnp
data16
jnp
jge
push
das
mov
adc
sbb
fistl
adc
fwait
cltd
xchg
movsb
mov
aad
jnp
dec
push
and
lods
pop
mull
stc
xor
mov
xchg
mov
data16
and
enter
leave
push
test
test
jle
cwtl
adc
pop
aam
lea
dec
pop
int3
pop
dec
out
lret
pop
arpl
je
pop
and
dec
ljmp
pop
ret
out
sbbb
int3
mov
ret
push
scas
cmp
insb
rclb
inc
clc
clc
hlt
pushf
xor
aas
lcall
flds
mov
int3
je
push
cmc
pop
out
mov
pop
cltd
call
jbe
ljmp
cmp
push
movsl
jne
jo
mov
pop
js
pop
cli
lods
std
div
mov
je
and
push
mov
aam
xor
xor
xorl
je
push
cmp
faddl
add
jmp
and
ficomps
popa
in
sbb
adcl
int
out
xchg
cld
mov
and
js
cld
iret
into
add
jl
dec
lret
sbb
imul
fmul
out
sub
add
xor
mov
mov
pop
out
pop
imul
fmull
xor
or
add
fbld
push
sbb
dec
rcll
inc
push
jl
dec
push
xchg
and
mov
cwtl
andb
cmp
jmp
in
dec
imul
cmpb
mov
cmpsl
inc
mov
popf
es
scas
inc
pop
push
lret
ja
lods
jno
daa
jge
ret
imul
rorb
mov
or
sbb
inc
test
push
es
push
xchg
stos
mov
popa
xchg
and
xchg
and
out
xor
push
dec
mov
pop
out
gs
fst
push
adc
repnz
inc
cmp
mov
aaa
dec
mov
lea
dec
inc
mov
lret
sbb
or
jl
sbb
sbbw
cld
stos
orl
pop
cmpsb
mov
and
lret
push
jecxz
push
arpl
cwtl
adc
mov
lea
clc
lahf
das
sbb
std
out
sub
fisttpl
out
add
loop
fisubrs
lret
mov
sbb
pop
rol
arpl
movsb
jne
inc
arpl
sahf
rcll
test
pop
jg
sub
mov
mov
mov
lahf
mov
fstpl
jg
sti
pop
lret
jae
cmp
sub
xor
jg
lods
sbb
and
and
repz
les
pop
add
and
aad
cmp
imul
mov
jmp
xrelease
hlt
and
cmp
pop
sbb
ja
sub
jge
or
add
push
mov
mov
add
inc
push
in
inc
roll
dec
adc
leave
movsb
out
cmc
bound
gs
xchg
loopne
mov
incl
push
ja
hlt
das
shrb
lock
shll
add
enter
mov
push
jecxz
testb
or
daa
pop
mov
or
shlb
test
add
pop
insb
sub
adcb
lods
xor
pop
stos
xchg
movsb
stc
mov
jmp
dec
aas
fsubr
xchg
adc
cs
xchg
je
repz
ss
mov
push
sub
in
mov
mov
lods
mov
jg
test
xchg
je
test
testl
test
cltd
mov
movsl
jns
mov
mov
and
pop
pop
sub
lods
jge
and
pop
lahf
inc
mov
nop
push
mov
mov
stos
inc
divl
decb
ljmp
dec
adc
mov
sbb
mov
jmp
add
xchg
shr
add
out
mov
lods
xchg
imull
jns
arpl
jb
fstpl
cmpsl
mov
pop
cmp
inc
jae
imul
lahf
mov
pop
daa
jp
mov
add
es
iret
notb
imul
push
and
jb
fistpll
lahf
jge
cmp
jns
pop
or
decl
and
jmp
xlat
add
pop
lret
insb
sbb
sub
mov
push
pop
cmp
sbb
je
mov
je
mov
push
lret
xor
roll
jecxz
mov
lock
jb
int3
pop
bound
das
ficomps
sbb
scas
push
inc
int
or
fucomip
mov
sti
lods
inc
in
and
stos
xchg
roll
sub
jb
pop
xlat
push
sahf
and
pop
test
xor
adc
or
rcr
push
add
sti
cmc
test
lea
pushf
popa
sbb
loopne
push
or
push
loopne
lea
fucom
adc
jo
ja
sub
mov
cld
mov
stc
lret
mov
out
addr16
mov
lret
rcll
pusha
mov
lahf
aad
xchg
loope
add
ja
dec
sbb
cmp
mov
xlat
xchg
in
rol
cmp
mov
aas
test
les
cmp
sub
addr16
cmpsb
mov
stc
inc
data16
in
pop
sti
inc
adc
add
daa
cwtl
or
inc
es
inc
mov
aas
fs
xor
dec
push
sbb
xchg
addb
sbb
sub
out
mov
arpl
add
mov
push
pop
lret
div
xor
adc
and
jmp
cmp
pop
jo
je
aad
test
cmp
cmpb
mov
xor
xchg
cwtl
mov
adc
or
xor
push
insl
rorl
stos
addl
mov
mov
test
mov
outsb
call
shrl
stos
loope
popf
xlat
inc
mov
jge
jae
mov
xchg
daa
dec
test
cltd
bound
pusha
ror
sub
test
jns
jne
pop
das
mov
dec
mov
lock
shll
imul
inc
fsubrs
or
mov
arpl
xor
sarb
inc
jge
adc
add
adc
popl
jp
push
cwtl
or
mov
pop
into
mov
jnp
sub
iret
std
mov
push
loope
dec
xchg
jns
dec
sub
mov
push
pop
mov
fistl
sarl
in
push
and
sub
mov
jns
in
pop
mov
test
push
out
out
jp
xor
scas
sbb
push
mov
pop
enter
notl
ret
sub
mov
mov
push
repnz
xchg
adc
daa
cld
mov
mov
and
lods
daa
mov
xor
popf
lret
push
jb
iret
cmp
push
cmpsl
test
dec
test
gs
adc
test
push
or
es
fiaddl
xchg
into
lahf
test
xchg
mov
adc
fsubrp
mov
cwtl
subl
jb
mov
sub
sbb
fxtract
pop
inc
xchg
mov
dec
xor
push
leave
sbb
movsb
add
push
in
adcb
out
adc
sub
xchg
jmp
jns
out
sbb
test
pop
rcrb
aaa
jne
fstps
cmp
push
lea
mov
sub
std
in
sahf
les
cld
js
push
imul
inc
pop
xchg
test
sub
add
aad
imul
out
pusha
jp
xchg
jbe
jmp
stos
mov
pushf
in
adc
addb
mov
xchg
in
or
lret
xchg
push
in
rdmsr
jmp
and
cmpsb
call
push
lret
ret
or
or
pusha
cltd
mov
fbstp
lods
jo
mov
mov
push
pop
mov
pusha
pop
add
hlt
add
adc
jb
cli
cmp
maxps
jns
adc
pop
mov
scas
xlat
cwtl
add
repz
cltd
mov
mov
decb
xchg
out
xchg
lret
fwait
pop
mov
sub
or
in
xchg
data16
cmp
mov
xor
test
pop
adc
mov
leave
neg
data16
iret
sub
cmc
jl
push
and
sub
sbb
arpl
in
mov
or
push
aad
scas
add
cmp
and
stos
data16
test
in
sti
push
subl
mov
sub
sub
pop
insb
cmp
mov
mov
inc
in
mov
adc
sub
icebp
sbb
out
jb
repz
jne
mov
mov
lods
loope
push
mov
add
fstl
aad
mov
lds
sub
push
daa
jae
jg
icebp
aam
into
outsl
xchg
decb
pop
shrb
mov
hlt
pop
dec
jne
fcompl
fwait
stos
imul
xchg
decb
andl
clc
and
ret
outsb
icebp
in
fisubl
mov
push
stos
cmc
push
lods
in
xchg
add
xchg
pop
mov
adc
push
outsl
hlt
aas
mov
xchg
push
mov
in
mov
pop
xchg
mov
inc
das
ror
movsb
push
fiadds
arpl
data16
xchg
mov
inc
or
sbb
repnz
cmp
lret
aam
packuswb
mov
and
pop
sbb
pop
es
cwtl
mov
adc
lods
adc
sub
out
outsl
imul
decb
inc
subl
aas
pop
jl
fbstp
jae
xor
mov
cmc
lahf
mov
mov
pop
xchg
xorb
mov
das
cmp
inc
outsl
int3
xchg
xor
aam
in
imulb
mov
xchg
jecxz
arpl
icebp
clc
stos
sarl
mov
mov
adc
jnp
add
mov
decb
fidivl
lret
dec
repz
shlb
fwait
pusha
repz
insl
lcall
testl
mov
and
das
cmp
insb
fisubs
push
movsb
mov
dec
mov
test
push
jmp
mov
push
and
pop
jmp
mov
addr16
fistpl
push
push
and
dec
mov
pop
repz
jp
xor
test
pushl
out
dec
and
jbe
sub
and
call
sbb
and
test
imul
movsl
inc
je
cmp
lret
in
cmp
mov
sbb
lods
push
mov
pop
fcoml
popf
cmpb
mov
pop
jbe
divl
ss
ljmp
repz
add
inc
jg
cltd
pop
mov
mov
xchg
lret
dec
daa
aad
jns
xchg
enter
shl
adc
cltd
fsubs
test
pop
mov
xor
rorl
fcmovnbe
into
std
leave
mov
fldcw
cltd
xchg
mov
push
sub
or
push
cmp
sti
fsubrl
ret
mov
mull
sar
sti
mov
dec
inc
jle
jmp
jbe
arpl
les
loopne
lret
fwait
pop
into
aam
jg
add
ret
sbb
sbb
jg
push
or
push
loope
imul
mov
jne
sbb
outsb
pop
xchg
std
adc
adc
xor
push
js
jmp
call
cmp
dec
sahf
add
ficompl
xchg
out
or
into
mov
das
pop
insl
jae
cmpsl
push
xchg
sub
push
fcmovu
repz
inc
fs
add
cwtl
imul
mov
push
in
adc
movsb
cwtl
loop
js
loop
ja
in
sbb
mov
shlb
push
mov
out
mov
popf
dec
inc
xchg
mov
sbb
loopne
loop
xlat
cmpsb
and
cmp
cltd
loop
sarl
adc
mov
push
mov
add
pop
or
inc
add
das
cmp
push
mov
test
push
lods
sbb
in
mov
stc
pusha
ss
xchg
mov
sbb
jg
dec
or
icebp
pop
xchg
and
mov
cwtl
mov
add
inc
push
cmc
xor
mov
adc
scas
inc
mov
test
arpl
ja
sub
jle
push
into
inc
adc
push
pop
sub
push
rolb
add
cmp
jg
dec
cmpsb
push
rcl
xor
repz
jno
ljmp
cmp
cmp
mov
lods
mov
xor
add
arpl
outsb
cmove
jmp
cmpl
shr
push
and
lods
pop
ljmp
jbe
rep
sub
mov
out
lock
adc
out
mov
sub
xchg
popf
xor
iret
inc
add
and
int3
clc
dec
aaa
and
out
push
xlat
push
sti
mov
pop
xchg
inc
mov
mov
out
mov
sahf
add
insl
leave
xchg
push
xorb
aad
mov
mov
icebp
mov
shlb
sub
jle
mov
aas
sub
push
faddp
mov
out
mov
cltd
and
cmp
xor
push
js
ljmp
push
test
arpl
ljmp
fwait
cmc
mov
std
inc
lods
or
mov
nop
das
aad
fisttpl
jecxz
imul
sub
mov
fiaddl
and
mov
cld
sbb
je
push
sbb
sahf
loop
mov
ret
xor
sub
aaa
rcl
mov
jno
push
aad
mov
pop
lods
add
or
xor
out
fldt
aas
jnp
test
xor
pop
jecxz
je
dec
pusha
jbe
fidivrl
in
hlt
adc
fwait
jbe
inc
mov
xchg
cmc
ds
mov
mov
nop
jo
lock
pop
adc
pop
pop
dec
out
jecxz
stc
lahf
ss
sbb
into
adc
pop
adc
and
test
sbb
sub
xor
imul
or
jle
fsubrl
xor
out
xchg
mov
mov
push
mov
rcrl
cmp
cmp
adc
loopne
shrb
pop
in
addb
pop
jmp
imul
ljmp
loope
xchg
inc
imul
arpl
icebp
test
movsl
outsl
inc
push
and
jmp
jle
or
xlat
out
ret
xor
shrb
lcall
ss
pop
dec
and
xor
daa
cmp
leave
rorb
lret
into
or
add
stc
sbb
sbbb
jne
sub
and
rsqrtps
testl
test
adc
cmp
xor
mov
sbb
jb
shr
pushf
cmp
mov
mov
fbstp
sbb
xchg
add
inc
out
dec
sub
subb
mov
inc
fst
xchg
and
jnp
movsb
xchg
aad
jecxz
mov
add
pop
outsb
bound
mov
sarl
dec
adc
inc
pusha
int
cwtl
pop
out
adc
xchg
push
cmp
sub
mov
xchg
inc
cmpl
aaa
jo
dec
sub
push
jae
jo
fucom
movsl
or
jno
mov
dec
ret
mov
and
into
sub
jbe
fdivrp
rcll
xor
push
js
add
stos
or
inc
scas
cmpsl
out
xlat
lock
cmp
sbb
scas
and
jbe
outsl
add
mov
xchg
dec
mov
shll
repnz
push
push
cmp
aas
mov
push
adc
rclb
cmc
pop
sahf
fldenv
enter
pop
mov
or
xor
or
cmp
push
add
pop
push
xor
mov
call
lock
mov
cmp
xchg
decb
lahf
adc
popf
out
stos
pop
or
bound
lods
xchg
xchg
movl
or
stos
or
jp
repz
add
stc
dec
cmpsb
xchg
jg
push
hlt
std
inc
mov
xor
cmp
shll
mov
mov
pop
xor
fildll
mov
sbb
adc
loopne
clc
push
sub
ret
mov
in
push
rolb
scas
adc
mov
sbb
lea
mov
stos
filds
push
and
ds
shlb
popa
shrb
push
scas
or
jmp
and
push
dec
xorl
and
xchg
sbb
fldenv
xlat
xor
xor
in
xor
dec
add
jo
or
mov
out
mov
xor
ds
push
jnp
lds
sarl
push
loope
adc
and
xchg
cli
ds
ret
or
fbstp
popa
mov
ret
pusha
shrb
sarl
ss
popa
sbb
adc
pop
cmp
pop
and
cmp
fdiv
popw
jle
and
in
push
rcrl
ror
mov
push
mov
in
and
dec
int3
in
xor
fisttpll
push
cli
mov
push
and
out
imul
pop
or
ret
inc
mov
imul
mov
push
stos
jns
and
push
sti
loopne
flds
shll
cltd
stos
push
gs
mov
and
hlt
sub
jmp
scas
ja
add
ficomps
add
in
xchg
loope
mov
cmp
lock
stos
lods
sbb
and
out
test
mov
xchg
mov
lods
push
imul
pop
cmp
sub
mov
and
push
mov
cmp
mov
pop
mov
and
dec
jnp
cmc
and
cmpsb
adcb
sbb
jmp
or
pop
mov
dec
stos
jno
in
lahf
adc
pop
push
or
movsb
lds
sub
test
rclb
shr
in
fisttpll
xor
push
repnz
mov
mov
fmull
mov
jmp
cs
mov
into
mov
test
pusha
mov
icebp
aad
push
in
mov
insl
das
xor
pop
mov
fildl
add
push
out
shl
push
cld
mov
add
call
pop
cmpsl
add
mov
pop
jg
jo
sbb
adc
jmp
inc
mov
push
cmpb
stos
xchg
or
bnd
loop
into
pop
data16
data16
sarl
push
cmc
adc
or
or
fiadds
stos
add
repnz
adc
in
das
jg
stc
xor
fs
imulb
dec
sbb
inc
jg
aam
jecxz
sbb
popf
outsl
sbb
les
in
sbb
push
inc
in
test
jle
lods
xchg
push
out
jmp
mov
movsl
and
xor
mov
pop
out
lret
sbb
fstp
xchg
cmpsl
xchg
sbb
and
mov
mov
push
dec
repnz
or
pop
pop
mov
adc
mov
lods
jns
and
pop
jp
mov
clc
outsb
loopne
int3
mov
int
call
cmp
cld
pop
in
enter
and
lret
ss
pop
lcall
out
lea
push
and
hlt
mov
or
pop
add
fs
jmp
sub
scas
mov
aas
or
inc
scas
and
imul
mov
jns
jb
fs
insl
ret
adc
clc
icebp
mov
addb
ljmp
iret
test
es
mov
mov
fwait
imul
xchg
push
pop
test
stos
cmpsb
xchg
bound
adc
or
mov
pop
pop
leave
inc
xor
ja
cmp
jne
mov
add
cld
cwtl
push
pop
sbb
mov
call
or
nop
rolb
hlt
lcall
int
int
xchg
call
cmp
dec
pop
getsec
mov
fiaddl
or
pop
adc
push
sub
push
xor
jg
loop
mov
popa
fdiv
cmp
mov
dec
push
dec
sub
nop
pop
jmp
mov
push
rclb
mov
aaa
cmpl
lret
mov
mov
inc
mov
mul
xor
jb
xor
cmp
jbe
sub
mov
xor
outsl
sahf
push
jbe
adc
or
mov
sbb
push
adc
dec
mov
pop
mov
jne
xor
or
ret
pushf
fadds
xor
cmp
mov
jnp
mov
ss
pop
sar
leave
inc
cmp
out
xor
sarb
in
fldenv
fstpl
lret
repnz
mov
jno
sbb
sbb
push
pop
pop
cmp
sbb
xchg
in
sub
loop
lret
aas
add
mull
ficompl
je
sbb
sti
cmpsb
ljmp
aaa
push
sbb
int
sbb
mov
dec
icebp
aas
dec
bound
push
jne
mov
mov
add
xchg
jge
jne
pushf
adcl
cmp
push
rolb
fwait
sbb
ljmp
xorl
pop
jns
adcl
xchg
pop
push
insb
out
cmp
push
das
call
cmp
inc
mov
sub
lret
sbb
add
add
adc
adc
int
ja
dec
fsubrs
std
outsl
rorl
sbb
insl
mov
or
xchg
icebp
test
loop
rorl
ss
xchg
jmp
mov
push
xchg
dec
and
cmp
fsubr
addr16
dec
into
lds
mov
pusha
sbb
ret
sti
stos
andl
pushf
fs
xchg
xchg
movsl
leave
mov
xchg
imul
cmpsl
mov
or
dec
js
add
sub
sub
dec
shl
cltd
aaa
dec
dec
dec
sbb
add
add
adc
rep
dec
ss
pushf
test
fisubs
ljmp
xor
adc
das
sub
repz
cmp
xor
hlt
jl
scas
in
in
test
and
shlb
addr16
loope
sbb
cmpsb
test
cmp
push
fsubrs
jae
and
imul
daa
and
mov
or
aaa
outsl
pop
addr16
arpl
call
xchg
push
out
mov
and
mov
int3
in
mov
mov
jl
mov
repnz
out
enter
inc
lcall
jae
stc
cmp
push
je
cmp
jno
mov
sub
data16
out
outsl
aam
xchg
movsb
lcall
cld
loopne
mov
xlat
lahf
leave
sbb
adc
adcl
xlat
mov
pop
sbbb
inc
dec
ds
cld
cmp
mov
lcall
scas
xor
dec
ja
adc
push
inc
or
cmp
movsl
add
out
repz
loopne
cmpsb
orb
arpl
fsubl
jae
jg
lret
out
xor
xchg
cwtl
sub
push
das
or
xor
inc
addb
push
jnp
push
mov
and
mov
je
loopne
not
mov
in
mov
or
xor
jmp
scas
jle
jns
sub
pop
clc
insb
xor
mov
sbb
in
dec
ret
pushf
repnz
pop
cs
cmp
cwtl
mov
stos
or
std
or
dec
sbb
imul
dec
pop
jle
int3
int
and
xchg
test
jp
xor
or
mov
and
sub
jl
mov
xor
dec
arpl
test
clc
dec
lahf
testl
inc
mov
mov
sbb
push
mov
lea
test
pop
cmp
cld
lock
ds
push
and
nop
pop
adc
mov
dec
ror
test
in
jns
movsb
or
or
xchg
das
xor
jns
xchg
notl
sub
insb
or
mov
mov
imulb
mov
aad
push
adc
dec
and
int3
notl
int3
stos
mov
xchg
xor
fcomps
xchg
scas
aas
mov
ret
mov
or
ret
lret
dec
and
fisttpll
ds
cmpl
ret
or
imull
jge
cs
add
fiadds
lahf
jle
lret
fimull
pusha
mov
iret
test
mov
jmp
test
ret
aam
xchg
loop
lahf
mov
lods
mov
jecxz
ficoms
jb
fldcw
jl
push
lret
jle
or
cmp
scas
stc
and
out
add
sbb
sub
mov
inc
leave
mov
sbb
dec
enter
imul
xor
jns
mov
xlat
xchg
sub
mov
cld
cld
inc
repz
rorl
inc
or
ljmp
daa
aaa
test
jl
push
aad
xchg
sub
jl
mov
jle
xor
xchg
pop
rcrl
sub
pushf
mov
push
jae
mov
in
sub
pop
stos
sub
mov
int3
in
sub
sbb
xchg
adc
mov
fsubr
push
mov
flds
pop
xor
adcb
aad
inc
aam
jbe
in
pusha
lock
pop
sub
or
ds
push
es
push
push
xorl
mov
lahf
repz
cwtl
jbe
lcall
in
test
aas
in
test
jge
pop
loop
push
jmp
xchg
cmp
mov
fdivl
and
jmp
cmp
stos
push
pop
popa
mov
push
lret
rorl
test
je
sbb
aas
lcall
lds
mov
xchg
mov
fildll
mov
fsincos
imul
xchg
xchg
cwtl
iret
jecxz
sbb
test
sub
jbe
push
jp
and
mov
adc
lods
or
incb
jmp
iret
and
cmp
cmpsl
jnp
pop
mov
fcomps
int
jbe
mov
xor
movb
inc
xchg
inc
sti
xchg
jbe
test
sbb
fidivrl
mov
mov
add
ljmp
jne
cmp
or
popa
fwait
popf
sbb
sarl
xchg
mov
ss
lods
repnz
mov
mov
push
xor
mov
fisubrl
push
push
and
jl
cmc
xchg
aaa
leave
int
or
or
call
int3
lret
jp
outsl
fs
mov
cwtl
sub
out
sub
push
das
cmpsb
mov
out
data16
jbe
repz
gs
into
xor
cmp
test
cmpl
xchg
xchg
sbb
or
pushaw
test
lds
fstpt
ficoml
daa
cmp
mov
pop
in
fidivs
fcomi
and
les
xlat
pushf
in
mov
int
nop
sbb
add
test
je
ja
adc
test
push
pop
mov
cltd
jmp
or
mov
xor
cltd
pop
xchg
adc
xor
stos
test
adc
ds
pusha
mov
mov
pop
xor
pop
ret
xchg
aas
push
jnp
xchg
xor
xor
test
jno
xchg
repnz
fwait
cmp
aam
leave
mov
loop
scas
imul
push
aad
push
insb
iret
cmp
sbb
je
insl
jns
test
out
lods
push
jmp
addr16
xor
lret
xchg
mov
jno
decl
push
rolb
sub
int
jge
sub
add
mov
xchg
scas
gs
mov
or
lea
pop
jae
call
jge
shl
test
push
loop
sbb
jne
lods
jecxz
push
decb
pop
sub
scas
mov
push
int3
fwait
addb
stos
mov
mov
shll
arpl
mov
gs
mov
jmp
call
mov
sub
xor
pop
xchg
and
fwait
push
pop
sbb
dec
lret
pop
or
cmc
sbb
ror
push
mov
mov
xor
mov
loopne
dec
pushf
cli
pop
jno
out
lods
in
hlt
les
cli
sbb
or
xchg
adc
mov
inc
outsb
arpl
mov
scas
push
mov
lock
int3
jl
std
mov
cmp
sbb
dec
mov
pop
inc
daa
fwait
xchg
int3
frstor
push
jnp
cli
dec
mov
dec
or
or
sub
call
xor
jne
shlb
inc
push
aaa
testb
adc
dec
or
leave
inc
addb
mov
add
icebp
cltd
lods
stos
sub
dec
es
lcall
cld
sbb
icebp
cmp
sub
out
sub
fdivrl
inc
jo
jne
test
jmp
mov
mov
movsb
in
jne
call
cmc
sub
stos
mov
sub
jg
sarl
dec
mov
push
ja
das
push
mov
push
cmpsb
sbb
out
sbb
adcl
ret
out
add
addb
cmc
sbb
and
add
mov
mov
inc
in
mov
ficompl
inc
daa
daa
push
xor
jb
out
push
je
faddp
push
insl
outsb
xor
pop
imul
in
insl
dec
pop
fsubp
sbb
cmpsb
pop
xor
mov
inc
rcrb
pop
scas
sub
sbb
aas
stos
stos
pop
stos
add
xchg
cli
mov
sahf
enter
inc
mov
inc
lds
xchg
mov
pop
mov
roll
push
testl
xchg
dec
fs
int3
inc
fadd
outsl
clc
lds
push
jne
mov
bound
mov
sahf
and
xchg
lods
xchg
shlb
xor
aam
aas
mov
sbb
clc
les
imul
les
push
shll
imul
and
lcall
inc
adc
sub
adc
movsb
mov
into
and
sbb
enter
xchg
cwtl
fistpll
lea
popa
lods
xchg
xor
aas
and
lret
and
xchg
xchg
ds
sar
push
lea
mov
mov
mov
lods
jg
bound
leave
jge
icebp
pushf
push
pop
xor
repz
int
repnz
pop
or
jmp
pop
lds
into
fwait
push
xchg
jg
mov
push
pop
fistpll
lret
sbb
jno
inc
jle
popa
clc
inc
inc
xchg
mov
and
adc
loop
push
nop
aaa
insb
sub
cs
adc
push
arpl
jg
inc
aam
imull
out
dec
shll
xchg
xor
sbb
into
pop
adc
cmp
mov
insb
dec
pop
push
xor
out
push
and
mov
int
push
jg
jge
mov
mov
adc
cmp
jp
pop
mov
mov
je
fistpll
mov
xlat
and
adc
mov
fimull
in
or
es
rorl
test
fcmovnb
repz
dec
sahf
jne
lods
mov
hlt
stos
dec
sahf
xor
dec
fidivs
bound
orl
mov
push
lods
cmc
mov
push
dec
add
rcrb
in
push
int3
loop
fmul
fptan
mov
fidivrs
xchg
or
data16
iret
jb
into
enter
push
mov
rclb
fisttpll
xchg
nop
data16
push
cld
out
push
scas
pop
outsb
repnz
xchg
pop
call
insl
fistl
subl
mov
cld
sti
pushl
push
cmpsl
mov
lret
adc
scas
push
adc
loope
fdivl
clc
mov
xchg
push
setle
mov
xchg
test
movsb
adc
jnp
js,pn
clc
rcll
or
adcb
fidivrs
xor
xor
inc
jnp
shrb
lahf
mov
dec
sub
adc
ret
add
mov
in
mov
rorb
je
or
fs
fwait
jns
insb
not
push
in
rcll
call
mov
mov
sbb
xchg
cmpsb
push
scas
jnp
mov
or
filds
es
icebp
mov
mov
hlt
outsb
cmp
fidivrs
inc
adc
xor
lcall
and
and
lahf
movsl
js
inc
mov
imul
pop
arpl
insl
jne
or
fldt
lret
ja
jo
and
mov
xor
ret
push
lahf
outsb
lret
cld
ret
mov
mov
sahf
test
jo
mov
xchg
mov
shlb
scas
jle
and
out
and
pop
inc
jmp
fs
movsb
cmp
frstor
dec
mov
adc
ficoml
pop
inc
push
out
mov
mov
mov
adc
jmp
insl
lds
aas
or
dec
divb
xor
lcall
rcrb
and
sub
dec
mov
xor
sbb
outsb
add
call
jae
inc
inc
int
idiv
int
scas
xchg
ror
ja
or
aaa
movsb
add
arpl
xchg
call
pop
push
in
cmp
mov
popf
gs
loop
movsb
sbb
div
bound
dec
cmpsl
push
xor
inc
cmpsb
in
or
xor
xchg
ret
xlat
insb
in
lret
xchg
mov
add
fdivs
push
orb
xchg
push
movl
out
jbe
in
sbb
pop
mov
pop
xlat
xchg
rcll
sbb
ret
dec
js
adc
int3
lods
fs
inc
gs
into
movsl
stc
aas
movsl
call
ficoms
sbb
push
mov
pushf
dec
jmp
inc
jne
inc
ds
jb
mov
push
js
pop
or
xchg
movsl
mov
ljmp
insb
cltd
int
pop
stos
clc
hlt
sbbb
aad
sbb
stos
mov
fadds
lcall
hlt
sbb
cmpsl
mov
aaa
jo
in
xchg
lods
fdivs
jb
xchg
data16
push
imul
pop
lahf
in
addl
pop
mov
test
push
or
aad
pushf
repz
mov
cmpl
pop
mov
adc
xchg
push
cmp
loopne
push
pop
push
push
inc
sbb
pop
jb
mov
fsubrl
fabs
jmp
cli
ret
push
mov
dec
daa
es
cmp
test
test
or
xchg
and
pop
pop
mov
cmpsl
xchg
mov
jmp
xchg
fcoms
and
sub
cmpsb
scas
add
adc
idiv
jnp
fs
out
imul
fwait
pop
dec
dec
cmp
pusha
pop
or
mov
shr
adc
and
or
xor
repnz
inc
mov
push
fwait
lea
sub
ret
lods
repz
adc
stos
dec
ret
mov
or
lock
and
xor
adcl
jno
bound
rcrb
inc
mov
cmp
ss
fwait
cmp
movsl
in
inc
outsb
loopne
xlat
or
mov
mov
dec
movsb
jns
or
and
mov
cmp
inc
inc
movsb
cmp
dec
mov
and
sti
fadd
js
mov
mov
dec
andl
in
push
movsl
push
stos
imul
mov
mov
dec
jge
push
sahf
outsb
loop
aad
jne
sbb
insl
stc
dec
jns
dec
ret
ljmp
inc
and
and
aaa
enter
lcall
xor
int3
jbe
fs
xchg
dec
repz
insl
aad
mov
xor
jae
cs
in
mov
lods
inc
pop
cmc
out
sbb
cmp
sub
push
mov
jp
orl
mov
push
pushf
hlt
leave
int3
push
pop
rcrl
mov
in
mov
movsb
stos
repnz
lods
sbb
les
movsb
jmp
aam
jne
mov
aas
pop
mov
inc
add
xchg
pop
lds
jno
andb
and
outsl
lahf
pusha
sbb
add
xchg
xchg
sub
xlat
mov
adc
scas
pop
xor
sar
cwtl
ljmp
cmpsl
fadds
xor
or
dec
ret
pushf
ret
cli
push
or
scas
sub
mov
int
dec
lcall
cmp
jl
add
cmpsb
shl
dec
jmp
mov
xor
lods
ja
scas
push
add
inc
push
addr16
enter
aam
mov
shl
shll
es
andl
cli
aaa
in
loopne
testl
mov
popf
arpl
ja
rdmsr
cmp
outsl
aaa
inc
in
pop
pushf
mov
dec
or
push
push
cmp
inc
in
adc
dec
loope
add
cmp
lret
push
loop
pop
dec
and
insb
iret
xor
push
ficoms
lret
sbb
lea
mov
les
xor
push
dec
hlt
cmp
inc
out
in
pop
jo
add
ss
ljmp
int3
mov
int
push
mov
xor
test
aaa
and
fiadds
pushf
jno
push
aaa
mov
scas
cmp
data16
push
test
in
jmp
xor
dec
outsl
ret
lret
xchg
loopne
mov
cmc
pop
ja
xchg
nop
out
push
pusha
push
rcl
out
xlat
stos
adc
push
outsl
cmp
jecxz
add
mov
outsl
sub
ficoms
fucomi
xchg
das
sub
fwait
ds
push
testb
mov
mov
outsl
mov
movups
or
imul
bound
testb
xchg
push
fdivrp
addl
sahf
pop
imul
mov
sbb
pop
orl
orb
jne
imul
and
or
test
test
out
aam
xor
icebp
bound
ss
arpl
push
push
frstor
jp
ret
jg
mov
xchg
jns
repnz
dec
xor
or
dec
add
dec
jmp
dec
lock
or
jno
jne
stc
pop
ja
mov
or
xchg
push
dec
es
test
loope
mov
sahf
cmp
into
pop
ret
pop
dec
test
jg
popf
popa
test
test
mov
test
cmp
pop
add
hlt
stos
stos
fcomi
movsl
mov
jno
lock
mov
lds
cmp
add
jne
imul
push
cmp
mov
sub
outsb
fnstsw
iret
outsl
jb
mov
cmp
xor
stos
push
std
das
xchg
xor
int
mov
fwait
push
aam
mov
push
push
ror
sarl
xchg
lea
xor
fstp
pusha
xchg
je
cmpsb
je
test
stc
jmp
fidivl
and
testb
jbe
pop
push
rclb
jmp
fcoms
cmc
aad
jb
lret
sub
fst
rolb
jne
shll
sub
aaa
data16
repnz
jo
movsb
or
adc
cmpsb
mov
mov
outsl
ror
adc
call
push
xchg
into
adc
xor
sbb
ds
push
mov
pusha
cmp
getsec
sub
test
insb
enter
fdivrp
jbe
sbb
shlb
sahf
sbb
or
test
xchg
je
push
hlt
and
ljmp
xchg
jbe
push
mov
rclb
incl
mov
adc
inc
lret
pop
enter
lods
lret
fisubrl
push
fst
mov
mov
iret
mov
push
inc
cld
mov
aam
push
pop
sub
dec
lret
xchg
pop
fsubs
add
hlt
jbe
jae
jnp
push
test
hlt
pop
scas
insl
popf
adcl
lcall
inc
es
aaa
sarb
inc
repz
inc
adc
icebp
lods
jecxz
subl
in
out
inc
or
add
xor
sbb
cltd
outsb
test
pusha
adc
add
cli
mov
scas
add
add
push
push
popf
in
mov
xlat
push
ficoms
inc
popf
bound
pop
aam
movsl
add
cmpsb
jae
or
mov
or
pcmpgtw
rcr
adc
scas
clc
jnp
clc
sbb
or
out
insb
out
ss
inc
xor
cmp
pop
out
sti
in
push
lods
xchg
arpl
pushf
push
jno
and
sub
pop
enter
nop
dec
fs
push
pop
cmp
sahf
adc
out
aas
ficoml
ret
xor
and
ja
sbb
jnp
push
pop
sub
in
popa
clc
sbb
pop
mov
mov
xchg
adc
testl
and
xchg
xchg
push
loope
nop
xor
pop
mov
sub
xchg
subb
addr16
xor
sub
sub
movsb
jmp
sbb
mov
imul
push
adc
lahf
xchg
sti
jle
out
int3
pop
popf
out
sub
aaa
sbb
pop
add
pop
pop
ret
xchg
dec
inc
jle
ljmp
je
lahf
push
fldl
test
sbb
ljmp
xchg
jge
dec
stos
pop
xchg
in
cmp
stc
bound
jne
ficoml
inc
call
iret
rcrb
subl
sbb
loope
lahf
movsb
xor
sub
out
jne
pop
aam
popa
lret
mov
jno
xchg
fwait
aaa
scas
dec
leave
mov
cmpl
xchg
or
mov
mov
mov
ret
xchg
mov
aas
aas
mov
cmovb
mov
mov
and
mov
push
inc
inc
out
mov
stos
xor
in
mov
movsb
jne
scas
mov
rorl
into
add
or
mov
out
gs
sbbb
cmp
filds
dec
xorl
call
mov
testl
xchg
mov
nop
push
je
jp
sbb
xor
in
idivb
shlb
and
aas
jbe
call
push
jno
jae
sbb
inc
push
aas
or
pop
inc
ss
sarl
jecxz
scas
push
repnz
test
stos
les
fnsave
push
out
cmp
je
or
pushf
mov
mov
fs
sub
popf
xchg
and
das
adc
insl
std
xchg
sub
int3
sub
mov
aad
inc
sbb
jge
movsl
mov
lds
and
sti
mov
insl
aad
aaa
push
in
pop
arpl
cmpsb
adc
pop
test
pop
jle
xlat
and
aas
or
xor
mov
mov
or
out
fucomp
daa
jge
enter
xchg
mov
flds
data16
arpl
jbe
pop
push
inc
arpl
add
adc
insb
cwtl
and
inc
jmp
nop
xorl
add
pop
mov
lds
xchg
xchg
push
sbb
lods
mov
jbe
shll
cltd
ja
pop
mov
push
int3
jo
mov
mov
jae
pop
adc
cmp
jne
jne
push
cmp
les
sbb
inc
mov
jnp
rclb
sub
jge
scas
jecxz
jo
cmpxchg
xor
roll
and
xchg
leave
lahf
add
xor
insb
std
inc
jge
outsl
in
jecxz
std
dec
dec
push
xor
daa
fmull
lds
out
fnstcw
daa
and
inc
jmp
cmpsb
insl
or
jecxz
mov
loopne
fnstsw
mov
iret
ljmp
xchg
or
adc
sbb
shlb
ljmp
pop
out
sbb
movsb
les
fs
ljmp
push
clc
jecxz
xchg
adc
mov
pusha
je
mov
mov
gs
aaa
ds
sub
and
mov
out
mov
outsl
test
stos
aas
call
dec
aad
push
dec
ret
imul
xchg
and
push
push
shrl
inc
pop
into
xchg
lods
les
mov
mov
gs
std
ret
sbb
aam
dec
test
mov
xchg
test
out
mov
stos
xor
jnp
xor
stc
mov
add
xchg
imul
add
mov
in
in
popa
sahf
jns
loop
jnp
insl
lods
jbe
mov
aam
xchg
push
pop
dec
ljmp
jae
pop
stc
cmp
sub
add
int
movsb
xchg
dec
les
mov
pop
addr16
pusha
stc
fisubl
in
fistpl
enter
fcoml
iret
add
stos
scas
jge
push
push
movsb
xchg
out
push
int
or
xchg
pop
pop
mov
adc
add
scas
orb
cmpsl
ret
dec
lods
rcl
jns
cmp
adc
lret
jno
inc
popa
mov
sbb
mov
mov
test
xchg
imul
sbb
sub
sub
movsb
dec
pop
push
jg
jno
or
adc
cmp
or
push
mov
cld
aaa
jb
push
sub
push
sarb
int
or
shrl
test
rcrb
pusha
jb
mov
out
add
ret
js
dec
or
xchg
pslld
add
mov
adc
push
inc
into
out
or
pusha
lods
or
mov
cld
xchg
cmovno
adc
lds
lods
add
in
fdivs
lods
fisttps
adc
push
mov
mov
rorl
outsb
je
test
and
add
jnp
movsl
outsl
jl
std
fnsave
pusha
loopne
push
mov
daa
xchg
mov
add
loopne
outsb
cld
xor
or
mov
mov
or
and
shll
hlt
xor
lret
fwait
lods
mov
test
sarb
mov
inc
mov
xlat
adc
cld
pop
mov
cltd
mov
xor
pop
getsec
adc
mov
ja
in
sahf
jle
sbb
andl
das
es
xor
lcall
sti
mov
inc
push
xchg
pop
mov
dec
daa
push
or
push
add
push
mov
sbb
or
ss
mov
add
loope
cs
jmp
daa
cld
call
je
roll
movsl
xchg
rclb
lods
pop
aad
rcrb
cmp
jne
xchg
mov
sub
push
lock
int
lea
loop
inc
xor
inc
sub
pusha
xor
out
rorb
sbb
xchg
aas
adc
push
inc
fbstp
jp
mov
loop
xchg
adc
dec
xchg
or
push
cli
xor
xchg
xchg
pushf
inc
mov
ror
mov
mov
or
mov
ja
xchg
mov
dec
imul
pop
fmull
pop
cmp
mov
dec
sbb
xchg
pop
cli
mov
push
fists
cwtl
in
xchg
xor
adc
sahf
in
aaa
popa
ss
pop
arpl
popl
or
xchg
mov
aaa
or
push
out
xor
xor
inc
or
mov
hlt
cmp
cmc
pop
enter
in
out
lds
adc
lcall
imul
pop
iret
sub
rolb
jmp
roll
push
jp
cmp
gs
push
and
mov
filds
mov
adc
and
adc
pop
scas
stos
test
sbb
inc
push
hlt
leave
xor
xlat
cmpsl
inc
add
jle
xor
hlt
sub
xor
nop
call
shll
lea
out
inc
sbb
iret
out
loop
outsb
scas
ja
lds
lods
push
xchg
adc
pop
out
inc
lret
jo
mov
rcl
aaa
je
push
sub
jbe
scas
sarl
push
xlat
call
mov
mov
cmc
adc
adc
cmp
pop
mov
mov
mov
fistl
mov
and
sub
pop
stos
rcrl
mov
int
xchg
inc
out
mov
mov
inc
shrl
cs
jns
pushf
push
mov
test
cmpsb
xchg
icebp
outsb
inc
jnp
loop
or
or
add
in
or
jno
push
jmp
xchg
mov
jmp
jne
add
test
pop
inc
mov
ljmp
mov
fnstenv
repnz
sahf
inc
repnz
ret
or
jno
out
and
cmp
insb
mov
test
in
in
and
jbe
lods
push
nop
add
scas
sub
lret
inc
mov
or
push
andb
sbb
pop
pop
push
scas
mov
add
lods
cmpsl
repnz
pop
rcrb
popf
add
in
in
jecxz
xor
sbb
sub
int
pop
shrb
xchg
lahf
into
jno
nop
push
jmp
xchg
mulb
rcr
arpl
add
xlat
out
xchg
mov
push
insl
mov
fsub
fsubs
out
cmpsl
inc
adc
test
out
jo
das
push
loop
push
pushl
int
pop
sub
ds
dec
aad
int3
cmp
dec
pop
jge
xchg
inc
xor
mov
xchg
lret
std
xchg
popf
nop
mov
in
mov
mov
cli
cmc
out
sub
xchg
fisttpll
movsb
leave
xor
mov
mov
push
testl
cmp
jnp
jb
mov
test
cmpsb
rol
jl
adc
push
pop
mov
arpl
scas
shl
insb
push
push
lock
adc
sub
add
xchg
pop
dec
xor
mov
inc
pop
adc
divb
cli
faddp
ja
hlt
jl
inc
xor
test
cld
icebp
or
jbe
inc
cmp
fnstsw
xchg
imul
mov
popf
mov
pop
ret
fdivl
outsb
shrb
push
add
dec
or
mov
adc
inc
popa
insb
mov
sub
ljmp
cmpsl
mov
add
addb
fnstenv
and
xchg
cmp
inc
outsb
push
pushf
xchg
inc
lea
cmp
push
iret
and
rcrl
bound
fsubrs
popa
cmp
sub
out
mov
bnd
jle
xchg
fistpl
insl
sbb
hlt
sub
pop
lcall
adc
in
hlt
sbb
pop
cmpb
xchg
fldenv
out
cmp
icebp
ljmp
push
dec
pop
mov
stc
lods
mov
or
inc
xchg
jno
std
add
ljmp
por
ja
sbb
and
shlb
bound
inc
ds
adc
lahf
sbb
iret
arpl
ljmp
ror
push
add
xchg
dec
loop
repz
sti
sub
outsb
mov
jne
dec
inc
jle
test
xchg
inc
xchg
outsb
lods
in
lds
test
fnsave
pop
lock
push
dec
out
push
rclb
jmp
pop
sub
sub
xor
or
divb
in
adc
add
pop
rorb
in
repz
in
rol
jae
std
out
mov
into
push
aam
adc
loop
test
mov
xchg
xor
cmp
test
mov
movsb
mov
fisttpl
adc
adc
sbb
dec
push
ss
sbb
fldpi
pop
test
xor
jp
push
sbb
lods
jnp
lahf
insl
sub
filds
ret
in
les
insb
mov
push
arpl
ret
mov
pop
hlt
int
cli
movsb
fnstsw
es
test
ljmp
imul
in
push
jno
dec
lock
jb
add
loopne
cld
ds
hlt
cmc
sarb
inc
repz
scas
jecxz
lcall
xchg
inc
rcrb
xchg
cmp
or
nop
stc
cltd
mov
push
sti
sub
dec
jae
shll
or
cwtl
xadd
push
cmp
cmc
xchg
inc
add
lea
dec
nop
pop
rol
scas
mov
sbb
stos
mov
jecxz
push
int
int
sbb
push
and
inc
push
leave
push
push
lret
int
rcl
inc
scas
loope
mov
lds
push
cmc
sbb
test
and
jo
test
inc
and
xchg
leave
scas
push
or
jmp
sbb
out
shll
sub
add
xchg
fsts
adc
sub
mov
cltd
push
cltd
mov
scas
iret
test
mov
test
jbe
sbb
sarb
fidivrl
fidivrl
ljmp
scas
or
mov
or
push
lock
loop
mov
mov
sti
xchg
insl
dec
movsb
jnp
sub
xchg
nop
loope
in
test
ljmp
add
sbb
cmc
mov
pop
inc
test
out
cs
test
xchg
cmc
test
adc
jbe
inc
addr16
cmp
xor
pop
jo
out
jp
shrl
push
push
mov
mov
stos
mov
ret
cmp
xchg
mov
mov
lods
imul
loop
lock
popaw
dec
pop
into
push
dec
xchg
jns
scas
jae
out
pop
mov
pop
ja
push
test
jecxz
insl
pop
mov
or
lahf
out
dec
xor
sahf
dec
mov
mov
add
or
mov
das
in
push
repz
jp
inc
cmp
or
pusha
test
mov
mov
in
sar
xor
lret
cmp
sbb
scas
fwait
mov
fists
les
or
movsl
cli
adc
pop
leave
jmp
push
jle
mov
movsl
jp
or
lahf
cmp
xchg
lods
mov
adc
jbe
push
imul
leave
ljmp
aam
loope
int3
std
pop
fcomip
jge
fldcw
cmp
nop
sub
inc
mov
pop
das
pop
sbb
iret
test
cmpsl
sar
lret
cmp
imul
scas
sub
sbb
cmp
pop
cmp
adc
mov
xchg
mov
inc
inc
inc
lea
add
xor
cmpl
xor
jo
ljmp
xchg
test
test
ja
jg
imul
int
mov
insb
cmpsl
loopne
mov
std
fmuls
cmc
scas
sbb
gs
adc
arpl
and
test
cmp
push
cmp
in
cmpsb
cmp
popl
push
ss
lods
addr16
popl
jmp
xchg
inc
fmul
pop
push
or
and
xchg
clc
pusha
adc
stos
in
test
adc
lfs
mov
xchg
pop
and
data16
adc
and
pop
mov
int3
pop
add
mov
cwtl
rcr
mov
add
rcr
ja
and
ret
std
fldl
shll
int3
push
mov
sub
add
std
imul
jecxz
pop
xchg
jnp
ja
or
xchg
mov
mov
jne
decl
sbb
loope
insl
lcall
jmp
xor
xor
cmp
push
cltd
call
dec
fcmovu
outsl
add
mov
push
pop
dec
int3
pushf
ret
pop
xchg
mov
sub
lods
out
adc
mov
pop
inc
lods
pop
rorl
cmpb
sbb
jbe
fiaddl
out
sbb
lret
mov
cmp
pusha
sbb
jae
arpl
es
lahf
mov
lds
mov
pusha
mov
and
xlat
xlat
mov
bound
mov
aaa
cmpsb
and
adc
adc
dec
jle
xchg
test
dec
jge
nop
mov
sub
xor
cmp
add
and
sub
incl
xor
cld
nop
fdivrl
clc
and
pusha
fidivl
ljmp
leave
xchg
loopne
jo
fcmovnbe
dec
arpl
aas
jg
dec
adc
xchg
dec
lea
int
mov
cmp
push
sbb
shrb
push
jne
cmp
into
mov
repz
scas
adc
imul
mov
out
cmpl
aam
clc
xchg
insb
rolb
pop
icebp
xchg
rdpmc
push
mov
pop
bound
mov
loopne
pop
sbb
cmp
cmp
pop
fistl
pop
shrb
out
mov
test
pop
bound
fs
cmp
stc
jg
jg
imul
cld
xchg
in
sbb
ja
mov
imul
sarb
test
std
push
in
out
sbb
push
test
cmp
add
inc
addr16
and
add
jp
xchg
sbb
pusha
push
int3
cmp
pop
inc
and
dec
in
adc
jge
mov
lds
or
ds
add
add
push
sbb
in
sbb
lret
pop
and
orb
xchg
fisubl
icebp
repz
dec
orb
fwait
jbe
lods
lods
lret
rcrb
mov
push
incl
or
pop
adc
in
adc
jp
scas
inc
imul
sahf
mov
in
jle
andl
rcrb
pop
and
das
imulb
adc
mov
or
setns
inc
lods
pop
pop
lcall
push
mov
xor
inc
ficompl
inc
aas
inc
shr
or
and
fmuls
push
out
lret
fcomps
addr16
daa
jge
sub
sub
sbb
cltd
out
jne
stos
lahf
popa
cmp
pop
or
bound
lcall
inc
sbbb
mov
push
fidivs
cltd
sbb
and
jae
mov
sbbb
jmp
stos
pop
ss
enter
xchg
or
iret
scas
sub
push
dec
push
out
push
jae
inc
iret
push
jge
sub
sub
push
mov
lret
inc
dec
sub
pop
in
push
cli
inc
testl
fadd
and
aas
stc
jns
xchg
inc
xchg
pop
clc
jl
lret
mov
xor
add
out
sarl
dec
aaa
mov
popa
or
or
mov
cld
movsl
int3
mov
xor
mov
mov
xchg
sbb
inc
pop
insb
and
subl
test
and
std
in
scas
and
jl
adc
push
and
add
imulb
pop
mov
cmpsl
inc
xchg
std
out
dec
xorb
jl
mov
pop
loope
pop
and
dec
jb
mov
test
xchg
fs
test
repnz
leave
mov
iret
push
in
xor
dec
pop
sub
pop
jne
push
adc
xor
or
add
cmpb
or
and
lock
fwait
xchg
pop
enter
sub
subb
sbb
fcmovbe
xor
mov
ret
jmp
rcrb
popf
int3
push
pop
or
stos
cmp
js
vpminsw
cmp
cmc
ljmp
jmp
fldl
inc
stos
es
adc
dec
fcomip
aam
push
or
idivb
leave
pop
popf
push
sub
push
clc
mov
sub
and
cli
jns
arpl
sbb
cmp
ficomps
ret
out
mov
iret
jp
les
imul
scas
add
jae
rorb
daa
popa
iret
mov
and
push
in
cmp
xor
xlat
js
aam
mov
sbb
fsubl
pop
popf
jb
inc
repnz
dec
addb
cmp
and
enter
mov
cwtl
lods
jne
or
jne
pop
push
imul
fcoms
or
loop
pop
pop
or
jne
xor
out
mov
jb
cwtl
insl
and
push
xor
jo
shrb
mov
lret
jb
arpl
xor
loope
add
lcall
gs
xorb
test
xor
push
ja
repnz
fcompl
sbb
inc
cmp
cmp
mov
adc
push
outsb
xchg
js
jp
push
pop
daa
aam
sbb
pusha
in
cltd
cmp
enter
dec
add
xor
mov
mov
out
add
and
fs
cltd
sub
pop
lret
lret
dec
test
mov
fistl
fstps
clc
fdivrs
dec
cmc
mov
adc
leave
pop
mov
mov
scas
popa
subl
jg
sbbl
cmp
adc
mov
into
add
push
or
and
sbb
xchg
rol
imul
and
xor
daa
xor
dec
movsl
and
std
hlt
pop
test
push
fwait
test
lock
imul
push
int3
inc
and
out
sub
popf
mov
inc
mov
pinsrw
and
mov
mov
out
dec
jno
unpcklps
ficoml
repnz
jnp
sub
dec
inc
sbb
fwait
jb
adc
fcmovbe
push
iret
iret
sub
bound
add
mov
ret
mov
jmp
testb
push
loop
daa
mov
mov
mov
inc
shrb
fwait
pop
xlat
pop
repz
mov
inc
inc
push
sbb
or
repz
inc
outsl
sbb
xchg
das
sbb
sahf
or
pop
mov
add
mov
push
lods
insl
dec
fisubrs
std
fs
mov
push
mov
popa
and
rorb
or
iret
test
mov
add
xchg
xlat
dec
das
lds
xchg
dec
xor
jbe
fneni(8087
inc
mov
stos
pushf
pop
jno
cmp
loop
andl
xchg
rorb
mov
sub
xor
mov
sub
lods
or
pushf
loopne
loope,pt
jg
shrb
push
inc
fistpl
push
xchg
stos
sbb
das
or
rclb
push
bound
and
sbb
push
out
jl
cmp
insb
std
jle
negb
pusha
or
pop
aas
das
xchg
mov
rol
pop
jmp
xor
jne
jge
xchg
adc
mov
test
jg
out
pop
out
dec
shl
loopne
xorb
pop
popf
imul
adc
push
insb
lods
enter
ljmp
mov
push
or
dec
roll
jbe
enter
aad
lahf
cmp
gs
jl
adc
jmp
movsl
cmp
or
scas
cld
fs
mov
xor
mov
pop
stos
pop
sbb
addr16
and
add
sub
push
xor
testb
mov
dec
jg
adcl
xor
popf
xor
add
mov
lds
or
mov
iret
adc
xchg
xchg
popa
jnp
xchg
nop
cld
push
add
dec
push
in
mov
xor
xor
push
xchg
pop
pusha
cli
aas
mov
pop
hlt
orb
loop
push
ja
es
sbb
adc
daa
out
sbb
ja
mov
icebp
xor
pop
push
push
mov
scas
and
push
popf
mov
push
jg
sub
imul
lock
out
je
and
movsl
loop
and
stos
add
bound
stos
cmpsb
aas
mov
xorb
pop
movsb
lahf
stos
popf
icebp
out
cmp
jmp
push
push
pop
ficoms
fldt
and
or
movsb
push
dec
mov
xor
aas
icebp
xchg
dec
sbb
cld
cld
mov
aam
xor
insb
shl
mov
pop
cltd
adc
hlt
out
mov
ret
fs
jp
push
mov
leave
test
fisubs
loop
mov
xchg
sub
mov
dec
cmp
aam
incb
xchg
ds
shll
mov
sub
and
push
adc
push
pop
loopne
or
pop
inc
out
mov
sbb
lret
aad
fsubrs
cmp
fs
pop
jbe
inc
or
mov
sbb
cmp
xchg
or
xchg
fadd
dec
cli
popf
mov
sbb
jl
xchg
sub
pop
jb
int
sbb
or
pop
jecxz
xor
subb
xchg
xchg
mov
sub
out
xlat
jae
mov
mov
add
lcall
cmp
mov
cld
imul
mov
push
das
jl
mov
in
mov
gs
cs
sbb
xlat
pop
mov
int3
shll
movsb
stos
pop
int3
int3
in
or
xlat
insb
fs
and
popa
mov
jle
insl
mov
fsubrl
loopne
bound
outsl
lcall
mov
inc
fdivrs
addr16
pop
popf
sub
arpl
or
mov
mov
cwtl
sbb
and
divb
ljmp
es
cwtl
sub
sbb
mov
ss
imul
fimull
aaa
xor
push
sbb
insb
movsl
inc
jo
mov
mov
mov
pop
in
xlat
decl
addl
lods
and
enter
adc
stc
xchg
stos
lods
adc
leave
mov
int
pop
or
cmp
inc
aad
sub
inc
xchg
and
mov
pop
and
popa
mov
aaa
es
mov
dec
iret
cmpsb
std
or
sbb
out
mov
mov
inc
stos
cli
imul
scas
outsl
es
and
jle
or
or
daa
fdivp
mov
repnz
xorl
xchg
jg
jnp
sub
in
jl
mov
mov
mov
icebp
mov
stos
cmpsb
ljmp
xchg
adc
in
imul
jg
cltd
in
jo
sahf
scas
sbbl
pop
jno
out
lods
push
xchg
scas
jb
scas
mov
mov
scas
lods
lahf
inc
aam
jae
aaa
out
mov
and
inc
jne
dec
adc
rcrb
xor
sbb
add
call
test
clc
movsl
adc
lock
movsb
xchg
rcrl
mov
pop
sbb
loope
shl
mov
aas
xor
inc
xor
sub
sub
jle
or
xor
stos
decb
mov
and
or
mov
jmp
lea
lods
andl
out
pop
or
dec
jne
test
pop
iret
mov
push
dec
pushf
fcoms
and
lret
sbb
or
add
mov
and
inc
and
xchg
pusha
xor
add
insl
inc
pop
or
lock
sbb
and
xchg
xor
and
int
dec
mov
into
jnp
fadds
out
mov
mov
out
adc
push
lahf
cmp
ss
jb
mov
dec
or
iret
repz
xchg
push
push
adc
arpl
add
lods
dec
and
in
inc
or
sti
and
idivb
and
mov
jg
loop
imul
fs
dec
popfw
sub
fbstp
mulb
das
sub
mov
dec
iret
push
addr16
inc
cli
ljmp
mull
mov
or
mov
aaa
sbb
sbb
mov
mov
adc
mov
lret
sbbw
lea
notl
dec
sbbl
xchg
int
out
rcrb
push
lcall
jne
cmp
mov
mov
jo
adc
lret
push
sub
std
dec
cmp
xor
mov
mov
inc
outsl
ficoms
bound
push
xchg
mulb
nop
push
xchg
inc
mov
dec
pop
out
cmp
rcl
sbb
inc
mov
adc
add
and
mov
lret
sqrtps
lock
add
push
mov
mov
dec
nop
xchg
mov
test
adc
and
out
dec
hlt
mov
js
push
in
sub
fists
sti
fwait
out
push
sbb
stc
xchg
call
les
adc
aas
sbb
popw
or
rorb
mov
dec
jnp
xchg
sub
mov
jle
mov
loop
into
mov
les
inc
mov
jo
les
push
inc
pop
pop
mov
xor
stos
cwtl
rorb
addr16
pop
sub
adc
pusha
and
stc
adc
add
or
sbb
cmc
mov
imul
daa
lret
out
lret
pop
fistpll
xor
stos
jg
mov
cltd
cmp
hlt
sub
hlt
cmp
iret
cld
lcall
add
sub
into
lret
pop
fadd
lods
ljmp
cmc
into
push
push
xchg
sbb
cld
push
daa
cmp
jne
push
arpl
cwtl
add
sbbb
jne
mov
or
scas
sahf
pop
jl
cltd
fbstp
jg,pn
ret
test
cmp
mov
push
or
loop
and
mov
xor
mov
std
sub
mov
inc
out
jge
pop
pushf
dec
pop
add
in
push
inc
es
xchg
ret
in
int3
fsubs
shll
jns
cmp
shr
in
std
mov
test
movsl
dec
cmpsl
dec
mov
jne
popa
jns
rcr
inc
sbb
push
addl
lock
shlb
jp
xlat
jb
push
add
sbb
paddd
mov
int3
das
sbb
sbb
xchg
cmpsb
mov
in
add
hlt
xchg
popa
push
pushf
xchg
jb
cmpsl
lahf
xchg
mov
adc
mov
sub
js
jl
cmp
push
sub
fdivr
int3
pop
sub
mov
jb
leave
jge
push
icebp
cwtl
jns
daa
or
mov
xchg
pop
pop
out
jns
cmp
push
out
jp
shlb
aas
jl
push
ds
in
xor
sub
icebp
aad
push
scas
adc
xor
lock
lret
call
mov
push
mov
jmp
aam
fbstp
inc
pop
test
mov
mov
shrb
jmp
daa
xor
stc
sub
dec
shr
and
pop
jle
ret
outsb
pop
and
hlt
ror
mov
push
enter
jmp
cmc
dec
and
pop
in
adc
add
lock
addr16
xchg
mov
cmpsl
in
sub
mov
mov
push
in
inc
sbb
add
fidivs
mov
rcrb
mov
push
mov
ja
rcl
loope
ficomps
adc
sti
and
iret
push
aad
lcall
xlat
and
mov
cmp
sub
mov
or
rorb
jo
mov
sbb
cmp
in
out
mov
xor
nop
lods
leave
sbb
js
sub
fstps
mov
pop
in
divl
pop
mov
ljmp
movl
cmp
xor
jne
cmp
in
inc
xor
lret
mov
jg
in
lret
sub
in
jb
leave
mov
out
add
repz
lock
sti
jae
cmpsl
sub
push
sub
inc
mov
xchg
and
lods
jmp
push
and
ror
xchg
jg
add
aaa
jbe
xor
mov
pop
xchg
imul
mov
call
shll
xor
pushf
and
cmpb
dec
pop
xor
rcll
mov
fisttpl
sub
adc
loope
loope
insl
jmp
xchg
sbb
cmpsl
lea
dec
mov
push
xchg
sub
stos
std
fld
lods
adc
movsb
aaa
jnp
stos
push
cmp
addr16
mov
ficoml
aas
addr16
mov
out
sub
push
dec
scas
mov
inc
or
jne
sbb
xor
idivb
test
lods
inc
cltd
test
lock
add
imull
mov
xchg
adc
fcoms
pop
repnz
xlat
pop
pop
std
push
sbb
pop
mov
pop
out
jns
jns
cmp
call
outsb
aaa
mov
outsl
xor
dec
inc
inc
or
mov
ficomps
popf
imul
dec
outsl
sbb
fnstcw
inc
push
outsb
sub
pop
or
xchg
jae
adc
push
cmpsl
jb
xor
jl
daa
pop
nop
adc
xchg
and
shll
sbb
fwait
sbb
xor
and
mov
movsb
mov
mov
inc
mov
xchg
adc
jmp
ss
daa
ficompl
xor
push
decb
fwait
scas
jl
add
jecxz
pop
imul
in
and
pop
fidivs
pop
testb
je
packsswb
jge
scas
or
mov
xor
lret
ret
pop
or
pushf
sbb
and
push
call
insb
addr16
xchg
jp
inc
inc
jle
les
popf
jecxz
mov
xor
or
and
fcmovnb
mov
aaa
sahf
sub
in
outsb
in
mov
xor
subb
pop
stos
and
pop
lods
sub
test
imul
pop
push
out
mov
insb
jno
mov
fisubl
push
in
push
jb
dec
popa
mov
mov
xchg
push
or
ljmp
cli
add
imul
mov
outsb
push
sub
cs
outsb
dec
and
mov
inc
repnz
aam
xchg
sar
test
test
fcoml
in
ds
or
mov
js
dec
imul
aad
shrb
pop
xor
pop
cmpsb
dec
sti
int3
stos
sbb
sbb
sub
xchg
add
mov
mov
loope
and
mov
test
pop
sbb
xchg
call
xchg
xchg
pop
cld
mov
addr16
xor
sub
es
pushf
xor
lock
mov
inc
movsl
mov
aad
sbb
adc
test
mov
inc
imulb
jmp
push
add
popaw
dec
sub
outsl
mov
gs
xlat
xorl
mov
mov
pop
lods
cmp
in
xchg
pop
mov
movsb
push
cwtl
xchg
movhps
dec
jecxz
pusha
aad
xchg
push
pusha
xlat
cmpsb
jnp
jl
clc
loop
sub
adc
push
gs
xchg
repnz
das
aad
js
ljmp
pop
or
out
insl
fs
push
add
push
and
ficompl
in
cmp
xor
inc
int3
insl
ljmp
clc
mov
loopne
dec
pop
fldl
in
nop
andb
mov
insb
adc
cmp
xlat
add
pop
popf
stos
inc
adc
sbb
push
enter
loopne
negl
xor
aam
xorl
loope
xchg
mov
hlt
push
loop
out
jl
xor
dec
mov
cmp
xorl
lea
mov
cmpb
fcomps
cltd
pusha
push
insb
repnz
fucomi
es
mov
out
lods
adc
outsl
stc
daa
add
int
mov
test
sbb
stos
insb
inc
in
jle
mov
stc
mov
mov
call
lds
pop
insl
sbb
push
bound
add
sub
xor
mov
xor
ficomps
mov
ljmp
test
or
fidivrl
ret
pop
cmpl
ret
or
out
mov
push
xchg
jne
test
xchg
aam
jecxz
push
fdivrl
dec
inc
pop
cmp
xor
pop
dec
lret
and
inc
ret
dec
mov
mov
cltd
js
sbb
das
push
daa
cld
pop
shrb
cmp
jbe
mov
movsl
push
rcl
stos
or
cmp
lahf
dec
rcll
jmp
lods
inc
loop
mov
ja
jbe
add
dec
xchg
lock
mov
add
jns
mov
sahf
xchg
cmpsb
sub
in
cld
dec
jne
addb
enter
mov
in
dec
sbb
push
mov
xchg
cmp
add
jnp
and
push
scas
mov
bound
cmp
fsubs
inc
add
pop
xor
mov
lock
xchg
push
arpl
adc
sub
sahf
jecxz
cmpsl
add
mov
sub
addl
fidivrl
and
inc
aas
gs
jg
call
popf
loopne
xchg
fsubl
bound
and
out
sti
and
loope
fidivs
insb
cld
pop
fdivrp
call
xchg
ja
mov
adc
arpl
daa
sub
ja
aad
push
fsubs
icebp
jnp
setb
pop
sbb
int3
js
mov
outsl
xor
out
jno
mov
shrb
enter
in
loopne
sub
lds
jmp
arpl
leave
lret
dec
outsl
or
mov
call
movsl
out
mov
inc
or
xorl
mov
jle
lods
jne
in
jmp
mov
pop
xchg
xor
jl
test
divl
mov
orl
dec
xor
inc
test
mov
dec
mov
pop
aaa
xchg
vmwrite
pop
sbb
sbb
ret
jb
sub
out
push
call
sbb
cli
pop
adc
cmpsb
cwtl
fwait
xchg
into
push
lcall
xor
loopne
test
jnp
xor
jbe
fs
sahf
mov
fisubl
idivl
pusha
cmp
stos
push
loopne
inc
stos
jns
out
mov
and
cmp
adc
shl
cmpl
and
stos
jge
jmp
cld
xchg
lods
mov
xchg
roll
mov
data16
jge
nop
adc
jno
ret
jb
sahf
mov
or
xor
leave
lds
push
mov
jbe
push
or
or
xor
aaa
fadd
jmp
pop
xchg
add
ss
add
jg
inc
push
in
xor
adc
nop
jae
cmc
jg
icebp
dec
jl
mov
sbb
fwait
sbb
and
ljmp
sahf
pop
fiaddl
pop
adc
mov
mov
pop
fcompl
xchg
dec
pop
pop
data16
push
add
jecxz
push
cltd
jp
xchg
pop
imul
cmpsl
jle
or
js
mulb
xchg
jno
jnp
add
and
sti
jmp
and
in
mov
es
movd
xchg
pop
and
test
andb
sarl
pusha
shl
stc
mov
popa
cmp
sbb
cmp
aas
test
mov
pusha
addr16
inc
js
es
cmpb
pusha
mov
cltd
push
js
notw
pop
push
dec
pop
adc
dec
popa
mov
loopne
lods
aad
out
in
popa
adcw
lret
fadds
jecxz
dec
sbb
push
outsb
cmp
out
push
inc
mov
add
or
mov
and
insb
cmpsl
cltd
icebp
push
test
pop
inc
mov
ljmp
mov
add
mov
and
sub
lea
mov
ljmp
jle
aad
ljmp
cmpsl
aaa
sbb
mov
shll
cwtl
gs
sub
shr
sub
es
or
mov
and
nop
and
push
and
sti
adc
mov
shl
mov
sub
mov
xor
jne
pop
adc
aas
mov
mov
adc
iret
mov
jo
cs
cmp
mov
aaa
repz
subb
add
xor
mov
xchg
sahf
mov
pop
fsubp
aas
xchg
mov
sub
or
js
ret
pop
inc
sarl
and
add
jns
sahf
mov
and
fsubrp
xor
inc
cmp
add
push
dec
jne
repnz
ret
daa
insl
daa
or
add
xor
fadds
mov
push
shrl
jns
sbb
pop
or
in
daa
mov
pop
sbb
adc
sub
mov
ss
push
or
in
mov
loope
int
cmp
inc
lds
mov
bound
pop
mov
push
cmpsl
sub
inc
push
lret
outsl
pop
add
icebp
push
cld
stos
test
into
lret
shl
xchg
jmp
inc
dec
dec
aam
inc
add
fsubrs
fwait
daa
or
lcall
jmp
ss
cld
adc
push
test
jo
addb
test
cmp
jne
pushf
pop
out
pop
std
nop
jge
cmp
fs
es
jle
ret
dec
mov
nop
xchg
sbbb
or
xchg
jle
push
ret
pop
lock
shlb
mov
mov
loope
xchg
adc
scas
mov
add
jmp
in
push
iret
and
hlt
cmc
add
data16
push
jno
sbb
lret
and
pusha
in
aaa
ds
shlb
popa
aad
jp
mov
rcrl
push
lcall
cld
iret
xor
rolb
ljmp
adc
fldcw
cmpsl
outsl
jle
out
jl
aad
xchg
rorl
shr
call
fistl
test
lds
inc
icebp
aas
pop
xchg
add
mov
mov
gs
jmp
aas
test
ret
in
xchg
and
adc
pop
and
testb
sbb
shll
out
xor
jo
ss
jno
cwtl
popa
loop
movsb
dec
jmp
push
leave
aas
loopne
rcrl
scas
shll
xor
mov
adc
adc
mov
add
sub
inc
cmp
push
dec
or
adc
push
test
add
gs
iret
and
push
adc
pop
sub
fsubrl
ds
out
out
dec
fcoms
and
sahf
hlt
jae
jo
mov
ja
mov
push
or
cs
and
je
lret
sbb
lcall
sbb
dec
pop
push
idivb
adc
adc
stos
in
lret
stos
ss
pop
sub
mov
pushf
jl
rorb
ret
lea
mov
lds
jmp
and
sub
out
aas
or
cmp
cs
fwait
pushf
add
pop
xor
jno
add
mov
or
sbb
add
jne
ljmp
jle
mov
out
aaa
xor
dec
aas
leave
out
or
daa
sbb
dec
push
out
cld
mov
int3
xlat
adc
jg
jl
mov
addr16
mov
insl
cltd
iret
push
lret
repz
ja
scas
scas
add
jo
cmp
push
push
sub
mov
cmp
dec
stc
adc
or
push
xchg
fdivrp
rcrl
hlt
mov
inc
or
jle
adcb
data16
cmp
and
dec
lods
sbb
push
rorl
insb
sub
fcmovu
insl
mov
movsb
push
frstor
inc
jb
lock
fmull
hlt
leave
sbb
mov
sahf
mov
pop
pop
cmpsl
jge
movsl
fdiv
dec
pop
ss
outsl
popf
add
dec
add
cmpsl
jne
cli
enter
je
out
jl
dec
and
sbb
ss
out
jae
or
mov
mov
sbb
jg
call
sbb
fnstcw
stos
push
push
dec
add
sub
pop
in
xchg
fidivrs
push
jmp
dec
add
mov
fldcw
ja
in
mov
sub
pop
stos
sub
nop
pop
stos
cld
mov
jbe
xchg
ja
insl
bound
ret
sub
sub
add
jo
rol
mov
fisttpl
add
push
in
add
call
sti
addr16
or
gs
push
sti
aam
ret
call
inc
cmp
jbe
mov
dec
cmp
sub
inc
jmp
cmp
popf
sbb
adc
jmp
enter
dec
stos
push
pop
les
lods
pop
popa
jo
xor
sbb
test
test
mov
dec
jbe
hlt
clc
push
cmp
inc
dec
inc
shr
je
push
sub
add
add
enter
lods
mov
shll
inc
push
sar
mov
fisubrs
push
popf
mov
sbb
xchg
call
movsl
push
in
and
ljmp
pushf
in
jns
jmp
push
push
mov
jae
popa
sahf
lods
pop
clc
sti
movsb
mov
lret
add
push
adc
mov
andl
cmp
repnz
loopne
jae
inc
mov
dec
test
aam
mov
sahf
bound
mov
jbe
or
pop
cs
rcrb
inc
or
pop
sbb
lret
mov
mov
inc
fs
loop
aam
dec
inc
sbb
sarb
xchg
add
sub
es
mov
out
fdivrs
call
stc
fnsave
lret
adc
sub
test
dec
popf
push
lcall
out
jns
loope
mov
push
xchg
pop
mov
push
add
movsl
ret
stc
outsb
sbb
enter
pop
or
adc
in
pop
aaa
xchg
add
daa
fldl
lods
mov
in
xor
or
xchg
sub
fwait
add
fs
xchg
fsts
cli
mov
mov
enter
push
enter
rcrl
push
and
dec
push
lret
lods
out
add
into
sub
pushf
ja
mov
sti
and
sbb
bound
pop
in
adc
fisubl
mov
lods
sbb
or
sub
mov
adc
aaa
adc
xor
push
in
xchg
mov
cmp
ja
mov
or
imul
mov
sbb
mov
xchg
push
inc
sbbb
mov
int3
hlt
dec
aad
push
jg
push
adc
cmp
push
cli
into
outsl
mov
out
pop
sbb
or
shlb
shll
cmp
pop
in
cmp
imull
push
xchg
popa
cmp
ret
jno
fucomi
inc
inc
sbb
or
push
fadds
arpl
test
xchg
cwtl
sbb
cmp
movsb
xchg
cmp
je
add
fsubp
lods
and
ficompl
out
sbb
stos
cmpsl
mov
pop
sub
xor
insl
mov
xor
add
fisubrl
ds
aaa
mov
ja
pop
icebp
mov
and
jae
cltd
and
sbb
add
fsubl
jecxz
mov
hlt
dec
shlb
mov
jecxz
lahf
mov
jp
aas
sbb
adc
xchg
scas
or
imul
adc
leave
sub
sub
shll
fcompl
mov
push
ds
gs
sub
jbe
lods
std
adc
fs
xchg
popa
daa
mov
and
insb
les
jmp
xchg
call
push
pusha
mov
shll
xchg
dec
add
and
or
shlb
out
adc
mov
inc
fwait
mov
inc
pop
setl
cmc
movsb
hlt
ret
xchg
int3
xchg
lods
mov
dec
pop
xor
das
cmp
pop
sub
sub
icebp
lods
or
inc
mov
imul
add
ret
lds
jae
mov
lods
fldenv
mov
fdivr
cmp
or
mov
xor
add
mov
mov
and
push
arpl
mov
es
sarl
mov
pop
sbb
lods
jle
lods
aam
in
dec
mov
mov
mov
dec
ljmp
fs
xlat
gs
lret
cmp
notl
mov
or
rclb
mov
les
sub
or
out
jge
sub
jle
sub
or
das
jecxz
data16
add
pop
pushf
cmp
loop
mov
adc
stc
imul
test
mov
outsl
cmp
rcll
fisttpl
lea
imul
sbb
cs
nop
sarb
aaa
mov
shrb
mov
shrb
and
repz
in
mov
jb
fstl
dec
lahf
repz
leave
xor
clc
iret
push
sub
cmpsl
mov
jne
stos
in
imul
adc
imul
sti
outsb
pop
in
add
push
push
add
scas
pop
outsl
xlat
jge
popa
push
fbld
scas
xor
dec
repnz
outsb
or
add
inc
lea
imul
out
mov
push
mov
pop
mov
in
push
mov
or
fisttpl
lds
jp
xchg
sbb
bound
out
xor
dec
adc
cmpsl
cmp
mov
cli
push
xchg
nop
and
sbb
push
or
jb
add
sbb
cwtl
mov
or
mov
xchg
push
adc
xor
lret
xor
dec
das
call
mov
ja
fwait
lret
pop
xchg
lea
mov
orps
mov
lods
jo
je
pop
xor
sbb
mov
movsb
outsl
insb
ljmp
popf
pop
into
in
pop
add
push
repz
or
push
call
push
dec
mov
cmp
ds
xchg
mov
push
mov
jmp
gs
in
cmpsl
adc
xor
popl
cmp
fstpl
cmp
ret
ja
gs
mov
es
cmp
fdiv
scas
jp
inc
lcall
out
lret
pusha
dec
stc
xchg
jbe
mov
js
popa
xor
xchg
lods
and
pop
push
inc
lcall
sub
popf
orb
lcall
sbb
push
scas
mov
mov
and
adc
call
xor
lret
jge
out
xorb
or
std
mull
in
cmp
push
adc
dec
nop
lds
push
mov
push
aaa
jae
xor
movsl
dec
lret
loope
cmp
repnz
daa
or
ja
outsl
and
std
cld
pop
lea
lahf
lret
jne
sub
repnz
loopne
adcb
mov
stc
ja
jecxz
mov
jp
outsb
xchg
sbb
mov
cmpsb
iret
adc
xor
jns
add
mov
sbb
xlat
int
inc
add
mov
xor
pop
mov
enter
mov
sahf
lods
pop
mov
pop
mov
icebp
lods
xchg
stos
xchg
cmp
lea
lock
mov
inc
inc
jb
inc
mov
ds
stos
mov
std
cwtl
dec
mov
movq
mov
dec
add
fstpt
fnstsw
cmp
rorl
lock
jg
out
mov
adc
push
cmp
pushf
mov
stos
and
xchg
push
dec
pop
mov
lds
hlt
aas
cmp
lods
sbb
cmpsl
dec
mov
je
ss
stos
cmp
loope
orb
test
mov
divl
iret
rcll
mov
fildll
fisubs
sub
lea
jl
or
xor
out
or
outsl
mov
faddl
sbb
and
pop
inc
ljmp
cs
and
faddl
or
out
call
xchg
push
adc
inc
mov
dec
xchg
push
xor
orb
ja
fcoml
xchg
out
push
loope
stc
xchg
cmpsb
mov
add
decb
xor
movsl
aad
adcl
stos
dec
pop
mov
and
cmp
xchg
daa
int
sub
outsl
scas
inc
cltd
pushw
cld
push
jnp
lcall
xchg
mov
ds
sbb
jle
and
inc
pop
out
jp
rep
ja
lret
inc
shrl
stc
adc
orl
testl
push
dec
pop
fxch
stos
mov
mov
push
pop
xchg
cmc
aas
rol
mov
xor
stc
shll
iret
mov
jle
sahf
lods
shl
stos
lcall
imul
jl
fucompp
sub
mov
pcmpeqw
fdivs
sub
mov
clc
repz
out
mov
xchg
mov
loopne
dec
add
fadd
in
dec
pop
push
inc
inc
xchg
je
dec
cmpsb
adc
or
sbb
addr16
loop
inc
jo
fisubrl
ds
rorb
in
mov
cmp
and
pop
cld
inc
fldenv
adc
dec
movsb
dec
xchg
imul
jnp
subl
pop
xchg
pop
push
pusha
enter
out
sbb
jmp
dec
rorl
sbb
jp
xor
and
inc
popf
cmp
cmp
sub
and
add
cmpsb
sahf
lcall
movsb
repnz
or
sbb
outsb
mov
sub
scas
dec
out
data16
rolb
pop
cmp
sbb
insb
jbe
movsl
sbb
sbb
int3
xchg
inc
pop
mov
push
and
into
lret
cltd
addb
adc
push
jle
cmp
inc
jb
sub
dec
lret
out
outsb
dec
cmp
mov
push
dec
iret
xor
fwait
add
ss
out
xchg
hlt
call
adc
inc
cmp
arpl
jle
add
pop
dec
movsb
xlat
lds
cmp
pop
addr16
dec
jle
imul
sub
fisttpll
and
fcmove
push
pop
and
into
jle
mov
repz
or
mov
loop
popf
gs
xor
cltd
jae
gs
add
sub
pop
insl
leave
sti
int
mov
outsb
ret
les
xchg
and
aad
add
sti
cmp
fchs
push
test
inc
push
movaps
les
aas
xchg
inc
icebp
add
jmp
jmp
sub
or
inc
adc
bnd
add
cmpsb
mov
jbe
mov
cltd
cli
pop
mov
shll
push
int
jo
stc
push
ljmp
pop
rcll
inc
and
js
cmc
jge
inc
aaa
shrb
cmp
daa
arpl
aas
jp
xchg
cltd
int3
sbb
ds
jns
sahf
arpl
push
scas
cmp
imul
sahf
mov
sbb
outsb
mov
push
sbb
icebp
roll
mov
add
add
out
ljmp
popf
rclb
jmp
cmp
xor
cmp
xorb
push
insl
in
jb
stos
pop
fistl
pushf
jle
test
dec
push
es
push
xor
das
mov
push
hlt
and
lds
imul
xchg
repz
mov
xor
cs
mov
ljmp
pop
mov
mov
push
test
pop
pop
jnp
insb
jg
loopne
sahf
out
dec
cmpb
inc
jp
stos
jg
xchg
add
enter
ret
inc
inc
cmc
pop
mov
adc
inc
adc
xchg
mov
mov
cmp
aam
inc
popa
sahf
lock
adcl
andl
xchg
hlt
outsb
scas
in
xor
pop
xchg
push
testw
insb
cltd
lds
inc
cmp
push
xchg
rcrb
insl
xor
sbb
inc
dec
cmp
sbb
shl
ljmp
inc
or
xchg
push
push
imul
mov
push
or
xchg
mov
hlt
fsts
xorb
mov
cld
push
inc
inc
xlat
or
push
in
aad
pop
pop
fadd
test
push
out
aas
hlt
jmp
sbb
imul
loop
mov
jle
imul
sub
jb
jbe
jp
out
pop
pop
adc
fcompl
or
and
repnz
or
sti
mov
push
in
insl
imul
adc
outsl
push
fs
push
dec
xchg
outsb
cli
jnp
ficomps
push
mov
dec
add
std
stos
xor
and
mov
sub
fs
sarb
aaa
cmp
mov
push
adc
mov
scas
mov
or
xchg
pop
xor
pop
fildll
in
cmc
roll
mov
pusha
or
lock
add
pop
movsl
jge
js
int
pop
sub
jmp
int3
inc
hlt
sub
push
or
pop
outsb
lods
push
jl
icebp
inc
mov
mov
lock
out
scas
push
cmpsl
nop
fisubrl
gs
mov
and
pop
xor
lods
dec
mov
sub
sarb
mov
and
mov
xor
lock
mov
sti
or
enter
push
mov
push
vmulps
and
imul
push
fs
xchg
sar
mov
mov
pop
sub
fistl
mov
jnp
iret
repnz
mov
int
ficoms
icebp
aad
ja
cmp
xchg
outsl
xorl
lret
dec
pop
add
mov
arpl
decl
leave
mov
outsl
std
and
mov
xchg
scas
mov
sbb
fcoml
ds
pop
mov
mov
je
mov
pop
in
xchg
js
cmp
push
mov
dec
ret
jo
push
ret
stc
in
pusha
or
mov
push
repnz
cld
dec
fadd
test
add
outsl
test
data16
aas
movsb
inc
inc
test
jl
mov
aam
rcrb
jp
pop
pop
pop
push
adc
and
adc
mov
mov
inc
add
and
add
or
xchg
imul
push
dec
loop
and
pop
sub
inc
stos
call
pushf
xor
and
out
sbb
add
aad
add
and
mov
pop
cli
mov
cs
fdivl
into
adc
cld
adc
push
outsl
int3
or
jbe
data16
or
mov
jbe
jb
ds
jae
imul
outsb
mov
rcr
jbe
cmp
push
out
pop
sbb
dec
int
fucomp
sub
iret
jbe
push
jb
mov
push
xchg
ss
es
nop
cwtl
daa
aam
scas
sub
es
jae
notl
andb
or
pop
mov
flds
xchg
loop
jmp
subl
loopne
es
or
sbb
mov
or
cmp
mov
ret
and
adc
scas
repz
mov
mov
xor
push
lds
in
mov
mov
xor
mov
jo
sbb
pop
add
in
sub
enter
pushf
stos
orb
ljmp
inc
roll
sbb
lds
icebp
mov
imul
clc
fcompl
cmp
pop
in
mov
jg
enter
fstp
mov
dec
negl
inc
jb
lret
ja
add
in
hlt
aaa
ds
shr
mov
sub
arpl
loopne
shl
shll
add
xchg
mov
and
bound
in
push
mov
into
andb
lds
jmp
pop
jp
dec
inc
shl
jge
mov
pop
ss
hlt
leave
scas
cli
sbb
adc
cmp
into
sub
loopne
ja
repz
dec
or
pusha
cmc
add
data16
inc
pop
cs
cmpb
cwtl
movsb
jmp
xchg
mov
mov
cmc
push
cli
outsl
scas
jle
push
push
aam
xchg
popf
cmpsl
scas
jmp
jmp
jae
mov
sti
jp
daa
lret
cltd
jno
dec
out
cltd
or
ret
push
and
fwait
shlb
insl
sbb
push
mov
test
aam
bound
int
or
xor
sub
adc
cmp
dec
cmp
add
mov
jl
sbb
pop
test
adc
xchg
roll
push
rcll
and
xchg
xchg
mov
pop
mov
mov
dec
sub
lock
mov
cltd
mov
adc
pop
cmp
mov
sbb
bound
dec
sbb
sbb
pop
fwait
stos
rorb
dec
shlb
insb
out
sbb
push
inc
jle
popa
popf
add
pop
pop
and
mov
pop
adc
lods
mov
cmp
mov
mov
sahf
insb
sti
shlb
mov
mov
dec
call
cmp
mov
xlat
fbld
jae
xchg
jb
inc
mov
adc
in
test
outsb
mov
ficompl
pop
mov
lock
insb
rorb
or
lcall
in
cmp
mov
pop
cs
sar
aas
repnz
sbb
test
call
lods
lea
bound
hlt
inc
and
push
and
push
scas
test
xchg
out
inc
lea
mov
scas
inc
leave
aas
stos
sub
sar
gs
xor
cmpsb
shl
or
xchg
xchg
out
sub
inc
mov
xchg
or
clc
cs
into
adcl
mov
enter
and
sbb
sahf
test
dec
jnp
loope
data16
pop
js
add
mov
in
sub
mov
and
lods
push
add
sbb
xchg
imul
outsl
in
in
dec
cltd
lcall
mov
test
int
in
pop
inc
mov
std
xor
sbb
roll
test
out
xor
call
mov
loope
rcl
push
sub
mov
mov
inc
inc
lret
filds
das
inc
pop
cltd
and
in
into
icebp
push
push
stos
mov
xor
sbb
into
lods
mov
mov
inc
sub
lret
lds
xor
fwait
cs
loop
inc
mull
pop
push
or
pop
mov
cltd
shrb
push
jo
mov
mov
cld
and
xorl
and
mov
popf
inc
imull
sarb
or
jnp
dec
in
jg
mov
cld
cld
popf
xor
dec
dec
jge
sbb
in
rolb
cmpl
xor
inc
lahf
icebp
lcall
loope
enter
push
jl
cmp
and
aad
adc
sbb
xor
ja
xchg
int
insb
outsl
xor
cmove
push
sarb
movsl
ret
add
mov
insl
cmpsl
and
lods
testb
es
fs
stc
inc
mov
cmp
adc
mov
sbb
cmpxchg
fdivrl
stos
mov
sarb
add
fistl
decb
dec
scas
addr16
insb
mov
jmp
out
lods
sbb
aas
add
lahf
mov
rcrb
inc
jge
mov
dec
jp
jg
add
iret
rcr
add
and
or
mov
fcomi
fidivrs
and
add
jl
and
lds
add
and
flds
in
ljmp
cs
fst
loop
xor
cld
stos
xlat
bound
and
out
mov
fdivrl
and
xchg
fiaddl
inc
into
orl
or
jo
call
pop
iret
sahf
jno
mov
xchg
lahf
rcrb
mov
mov
or
subl
repz
push
cmp
loope
sub
inc
mov
lret
test
inc
cmp
dec
pop
xor
int
dec
lea
ja
jl
dec
mov
sbb
orb
fisubl
clc
mov
adc
icebp
cmp
mov
jp
pop
push
cmp
in
lock
cmp
test
loope
jbe
dec
push
int
pop
cmp
add
iret
ret
mov
inc
fsts
sbb
test
imul
xor
add
inc
mov
mov
lods
je
push
out
add
fwait
push
sub
test
and
cmp
lea
inc
call
insl
xchg
fs
dec
cwtl
scas
int
push
mov
push
or
daa
fidivrl
sub
es
or
xchg
mov
cmc
cmp
jmp
stos
pop
push
test
fidivs
xor
jle
scas
mov
or
lea
negb
jnp
es
sub
rcr
sbb
andl
out
mov
sbb
nop
arpl
dec
pop
inc
inc
push
jns
fisubl
adc
popa
sub
vcvttss2usi
icebp
push
js
negb
test
rorb
sahf
imul
scas
out
adc
mov
sub
pop
out
outsl
lret
pop
fsub
nop
outsl
daa
aam
stos
cmp
mov
xchg
and
shlb
dec
mov
mov
in
sahf
mov
cwtl
mov
out
xchg
orb
lds
sbb
adc
push
sub
mov
pop
mov
shl
out
in
sbb
shl
gs
or
mov
mov
mov
cwtl
mov
fistl
pushf
sub
xchg
and
inc
dec
cli
iret
lahf
jmp
sub
push
or
mov
jecxz
mov
andl
shrl
ds
jno
out
ljmp
daa
scas
mov
cwtl
repnz
xor
jp
lret
push
jmp
cmp
or
xor
out
dec
xchg
imul
xor
std
pushf
fs
xchg
push
xchg
or
int3
jo
mov
inc
sbb
pop
dec
pop
and
mov
fnstenv
mov
dec
lds
xchg
jg
mov
dec
adc
mov
scas
sbb
nop
pop
xchg
xchg
sub
push
jl
popf
xor
call
inc
leave
nop
add
rep
inc
push
inc
cmc
or
push
ljmp
inc
ds
mov
fisttpll
call
or
or
negl
xchg
ret
outsl
pop
sbbb
cmp
insb
and
fdivs
push
mov
xor
jge
inc
mul
out
mov
insb
pop
stos
rcll
pop
push
dec
mov
and
punpcklbw
mov
push
mov
xchg
push
pop
test
pop
fisubs
dec
jge
fisttps
jp
mov
repz
les
leave
jb
mul
and
mov
push
scas
push
push
xchg
cmpsb
xor
push
dec
sub
in
mov
xor
fisubrl
jnp
or
inc
dec
and
and
mov
xlat
mul
dec
shrl
push
xor
loope
xchg
mov
in
js
cmp
aaa
sbb
loop
xor
jge
in
std
loopne
aam
jo
ret
in
mov
shlb
mov
and
jmp
ja
nop
push
pusha
pop
inc
out
jnp
inc
mov
in
inc
or
daa
out
aad
lea
push
cmp
repnz
and
fldcw
jno
shlb
test
sarb
lods
ss
cmp
scas
mov
add
ret
addr16
int
es
pop
dec
sbb
pop
jns
mov
fucomi
pop
fisubrl
jbe
ret
lahf
out
sbb
bound
sbb
scas
into
int3
xor
mov
test
out
lret
mov
js
mov
shll
clc
pushf
or
jno
movsb
push
out
mull
sbb
imul
cmpsl
aam
loope
xor
mov
enter
mov
lods
hlt
jmp
inc
icebp
ret
jae
jne
les
mov
outsb
lcall
mov
pop
jle
xchg
cmpsb
add
push
sub
int
inc
mov
popf
mov
xchg
mov
cmp
mov
pop
cld
and
scas
out
dec
jne
mov
ss
sub
pop
fcoms
test
out
fwait
lret
pop
loopne
ja
popf
fsubs
arpl
mov
mov
aas
pop
out
cmp
or
jne
int
call
ds
das
shrw
loopne
lret
inc
sub
rol
push
sbb
add
out
cmp
cmpl
xchg
push
push
mov
je
data16
jnp
dec
pop
mov
or
arpl
movb
ret
std
std
xchg
std
inc
add
outsl
pop
cmp
dec
xor
xchg
rclb
cli
push
mov
pop
in
mov
mov
sub
fadd
lds
in
rorl
add
pusha
jo
hlt
adc
imul
arpl
xchg
push
addr16
xchg
sbb
pop
out
gs
xchg
add
lea
mov
jns
jl
pop
add
test
mov
mov
hlt
notl
shrb
movsl
std
leave
jmp
call
sahf
rclb
call
push
push
and
jecxz
dec
inc
mov
bound
xor
lret
addl
pusha
ret
inc
jge
cwtl
inc
shll
movl
push
and
addr16
dec
adc
add
sbb
inc
push
push
xchg
cs
fcomps
dec
jl
dec
or
push
mov
and
or
cltd
sub
rcrl
mov
int3
pop
jo
or
sub
mov
inc
pop
dec
xor
mov
inc
mov
gs
lds
lahf
pop
lcall
shrl
inc
inc
sti
out
loopne
jne
out
hlt
sbb
jns
fbld
add
mov
push
fwait
insl
cwtl
ljmp
pop
popl
mov
pop
scas
iret
notl
es
xor
inc
xor
mov
push
jne
or
sub
cs
cld
sbb
fcomi
fimuls
enter
lea
mov
mov
mov
loopne
lods
popf
fucom
call
clc
fcomi
icebp
adc
xchg
adc
notl
sub
inc
dec
jb
insb
push
ret
mov
test
jbe
add
rcrl
mov
xchg
sbb
lea
pop
adc
push
daa
ret
push
mov
xchg
aad
test
pop
shll
movl
cmp
pop
cmp
xchg
xchg
push
out
dec
stos
jb
and
in
cmp
or
outsl
imul
sub
push
mov
test
jmp
fisttps
ret
imul
pop
lods
popf
arpl
xchg
push
jno
lds
lret
sub
mov
xchg
adc
pushf
pop
repnz
sbb
ss
push
sbb
inc
and
pop
adc
paddw
das
push
push
mov
fidivl
push
cmp
or
movb
mov
jg
and
sub
nop
and
cmp
fnstenv
cmp
out
in
xchg
fnstcw
aas
das
pop
test
jg
xchg
repnz
mov
fmuls
ljmp
jmp
mov
add
loopne
inc
repz
xchg
out
cmova
nop
outsb
dec
sahf
orl
or
fwait
mov
cmpsb
in
or
ja
xchg
and
test
inc
in
loopne
aaa
adc
stos
movsl
outsb
imul
stc
fucomp
bsf
jb
lahf
adc
test
adc
add
lcall
movsl
lds
lea
ja
and
scas
negb
ss
or
adc
adc
rolb
leave
add
pop
addl
addr16
xor
fbstp
fwait
dec
jnp
ja
je
movsl
sub
add
inc
xchg
pop
mov
ficoms
or
xchg
mov
jnp
or
sub
mov
imul
add
mov
add
xlat
clc
xchg
fwait
cmp
mov
sub
xchg
scas
mov
adc
clc
jg
or
mov
pushf
cmp
dec
adc
pop
fisttpll
sub
sub
in
sbb
xchg
or
push
jg
das
mov
leave
and
movsb
jl
pop
in
leave
push
gs
and
mov
add
jne
repnz
pop
in
inc
cli
inc
mov
sbb
mov
pushf
xchg
cmp
sub
push
jns
mov
nop
push
add
addr16
lock
lods
push
or
jp
mov
pop
bound
hlt
data16
xlat
jne
sub
leave
dec
jno
hlt
pop
addr16
lock
lea
fsts
neg
push
xchg
js
movsb
loope
xchg
dec
pop
mov
add
mov
mov
cmc
xchg
jno
es
sahf
mov
aaa
and
push
and
pop
push
lods
adc
bound
mov
notb
xchg
xchg
jmp
in
or
lea
or
aaa
push
scas
lret
imul
mov
mov
fisubs
out
cmp
cwtl
adc
insl
rcrb
and
shrl
lret
xor
outsl
lret
xor
pop
dec
dec
stc
aas
gs
fdivs
inc
loope
sub
test
push
dec
sub
in
outsl
fdivrl
shrl
jns
fwait
aas
push
shlb
ljmp
nop
cmpsb
arpl
or
inc
sbb
lods
shll
cld
fdivrs
fs
sub
pushf
cmpsb
jne
aas
add
sbb
aam
xchg
adc
into
jnp
cld
repz
aad
imull
imul
pop
xchg
mov
fsubs
cmp
repnz
pop
loopne
pop
xorb
popf
adc
jnp
lock
mov
ja
subl
push
xchg
mov
lods
out
sarl
inc
mov
mov
insb
loope
stos
jl
test
xchg
clc
xor
filds
lahf
pushw
enter
jmp
dec
xchg
mov
add
cmc
jae
sbb
call
adc
shl
cmp
and
movb
mov
sub
pop
cmpsb
aaa
fidivrs
cwtl
cmpsb
mov
xchg
jb
xchg
lahf
fs
fwait
into
std
ljmp
mov
mov
sub
pop
fldenv
fidivrs
xorl
pop
stos
sti
jecxz
test
add
adc
in
testb
jecxz
jge
mov
into
pushf
movsb
jo
adc
sub
xor
jno
pusha
mov
fdivs
cs
xchg
lock
pushf
scas
fisttps
test
mov
sbb
dec
pop
stos
in
rcrb
insl
cld
dec
inc
loopne
outsb
out
sahf
fldcw
out
cmp
aam
clc
push
or
jl
insb
add
js
adc
xchg
popf
inc
push
push
xor
push
ljmp
add
add
jo
jo
mov
or
bound
mov
in
iret
lea
mov
mov
mov
scas
push
sub
push
add
jae
sahf
dec
xchg
sbb
sbb
call
test
int
push
or
jg
xor
inc
mov
jbe
decl
inc
loopne
decl
adc
mov
lret
aam
pop
or
or
jns
push
into
sub
inc
push
fisttps
push
imul
jg
negb
sbb
inc
ficomps
and
ss
dec
jg
cmp
pop
fiadds
pop
add
stos
pushf
xor
jne
int
stc
pusha
xchg
cltd
movsl
les
cld
inc
mov
test
fsubs
shr
xchg
add
imul
es
ret
sahf
sbb
cmp
adc
xchg
dec
hlt
xor
subb
mov
or
sub
dec
sub
movb
cwtl
ljmp
leave
pop
in
or
sub
icebp
insl
xor
sbb
cwtl
mov
and
arpl
cmpsb
jbe
and
in
bound
or
leave
mov
mov
xchg
mov
cs
fidivl
add
pop
sub
xor
and
xor
sub
jle
inc
sti
pusha
sahf
dec
aad
in
fsubrs
xchg
pushf
lds
sub
lds
add
pop
enter
dec
add
rcrl
pop
lods
ror
nop
pop
loopne
push
jl
jno
pusha
xlat
movsl
pop
adc
add
fisttpll
mov
fstps
test
imul
and
fcmovnb
test
push
out
jne
data16
push
push
fistpll
dec
scas
stos
les
mov
sbb
mov
jo
push
pop
adc
jne
or
aam
flds
mov
into
xchg
xor
pop
push
out
xor
sub
int3
repz
push
stos
inc
mov
nop
mov
mov
lahf
rcrb
pusha
lds
ss
int3
push
iret
jo
cmc
cltd
stos
mov
mulb
addr16
insb
or
nop
dec
adc
inc
in
or
test
out
push
loope
adc
inc
xchg
mov
fidivs
jne
cltd
sub
jo
add
pop
neg
je
outsb
adc
bound
jp
mov
divb
jns
movsb
jo
jl
jge
jns
jns
mov
xor
out
cmpsl
mov
fcmovnb
xor
in
jp
out
sub
in
push
inc
push
add
or
cmp
pop
xchg
mov
mov
xchg
push
lcall
jecxz
jg
aad
inc
lahf
add
or
repnz
sbb
jns
add
add
push
adc
leave
in
pop
imul
adc
imul
fs
sahf
test
hlt
adc
lds
jnp
sub
stos
aaa
inc
lods
lcall
xor
lret
pop
sbb
cs
sub
dec
or
lahf
push
sub
pop
sbb
mov
and
cwtl
lods
inc
lcall
setg
rclb
mov
aas
pushf
cli
dec
push
cmc
in
mov
fwait
cs
and
stos
mov
pop
or
pop
jb
test
push
xchg
xchg
lock
cmc
mov
loop
mov
xor
jle
mov
stos
sbb
dec
push
fisubrl
in
sbb
popf
ret
popf
add
hlt
pop
popl
into
xchg
pop
push
pop
adc
xchg
pop
jno
out
iret
mov
jne
sbb
jb,pn
dec
mov
loop
jp
mov
mov
jo
push
cltd
xchg
cld
dec
add
mov
add
gs
jae
stos
inc
insl
mov
push
sbb
outsb
fstps
push
sbb
push
les
sti
gs
inc
jbe
out
ffreep
lods
and
add
cmp
lahf
adc
lcall
fcomps
pushf
mov
movsl
and
rol
and
sub
mov
pop
loopne
pop
insl
cltd
sub
aas
aad
inc
cmp
jno
xchg
out
jl
sbb
das
lahf
js
add
or
int3
mov
mov
clc
adc
mov
shl
xchg
fnstcw
repnz
shlb
sti
push
mov
gs
mov
mov
scas
dec
add
cmp
fbstp
sti
testb
inc
in
add
jae
push
ret
loope
sar
stc
push
repnz
test
fucomip
jns
test
dec
nop
clc
cwtl
cs
int3
xchg
cli
adc
out
add
add
inc
movsl
xchg
in
mov
mov
mov
sub
shll
pop
pop
jno
xor
dec
pop
subb
js
push
call
and
repz
sbb
sbb
test
jg
xlat
lock
loope
mov
ret
mov
lret
in
jmp
test
pop
pusha
cmc
xor
in
push
jns
sub
cmpsb
jne
sbb
repnz
insl
jo
xchg
out
popa
mov
cmpl
sbb
cmp
xor
pop
xor
mov
test
cmp
rol
pop
push
push
lret
adcl
and
dec
mov
sbb
lret
dec
jbe
cltd
push
dec
clc
jb
mov
xchg
pop
pop
dec
xor
mov
fnstenv
repnz
mov
insl
ss
fnsave
in
fistps
ret
imul
cli
out
push
aaa
out
add
inc
xor
call
mov
mov
aas
mov
out
sub
fnsave
pop
je
sub
es
test
mov
cmpsl
cmc
xor
in
jp
mov
bound
dec
pop
cmp
call
dec
bound
adc
lds
dec
mov
inc
jb
mov
push
inc
mov
mov
adc
imul
mov
mov
sub
lcall
push
cmc
sbb
fcompl
aad
imul
ffree
xchg
xchg
adc
xchg
cs
or
xorl
pop
mov
inc
sub
cmp
push
repz
mov
cmp
roll
cli
aaa
ror
push
mov
enter
loope
insb
mov
add
pop
call
push
and
lahf
xchg
xor
jl
aaa
lahf
pop
cmc
imul
jne
jecxz
or
das
mov
popf
add
lahf
and
push
sbb
mov
fisubl
cmp
mov
mov
shrb
inc
test
std
xchg
out
add
push
imul
push
icebp
adc
inc
push
outsb
or
xchg
pop
dec
hlt
mov
js
inc
cmp
cmp
mov
xor
pop
add
xor
add
mov
cli
mov
sbb
mov
ds
dec
adc
enter
xchg
jne
or
outsb
or
hlt
xchg
ja
ret
imul
push
pop
out
cwtl
lock
dec
adcl
push
jb
mov
and
int3
xor
jecxz
mov
aas
inc
jo
je
mov
adc
addr16
and
or
aaa
mov
jg
cmc
or
push
mov
xchg
push
aas
nop
pop
mov
sub
scas
inc
xchg
mov
shrb
loope
sti
cmp
fs
hlt
pop
idivb
cmp
pop
les
xor
mov
hlt
mov
cmp
jge
outsl
xchg
mov
aas
push
std
clc
mov
inc
lret
ret
aam
in
xchg
cwtl
xor
push
push
and
xor
es
nop
xlat
les
test
ds
add
je
mov
or
into
testl
jae
rcrb
adc
jnp
sub
xchg
inc
icebp
mov
push
sub
jmp
jmp
dec
fs
jb
sbb
xchg
imul
fcoml
test
and
push
lea
nop
adc
loope
jns
loope
xor
repnz
ja
les
push
mov
mov
sbb
movsb
into
mov
out
into
scas
addr16
jb
bound
fstpl
stos
add
xchg
push
sbb
out
inc
movb
sub
scas
aaa
mov
jb
adc
shl
push
mov
jne
fsubrl
out
fidivrl
inc
xchg
inc
outsb
mov
sti
push
pop
jl
outsl
lods
sbb
xchg
inc
lds
insb
pop
je
mov
adc
popa
dec
in
shlb
test
jbe
rclb
xor
popa
mov
jp
cmp
jmp
or
int3
out
mov
xchg
pop
lret
inc
cmp
fldt
in
add
pushf
fisttps
out
cli
pop
ss
outsl
imul
je
adc
xor
neg
jmp
sub
push
stos
or
inc
or
adc
adc
loop
aaa
mov
inc
lds
sbb
sbb
jecxz
adc
dec
ljmp
dec
pop
addl
mov
dec
push
fnstcw
or
sti
std
mov
bound
jp
push
repz
out
cmpsb
cli
mov
clc
mov
out
sub
jecxz
dec
sub
xor
dec
cmp
mov
fcmovnu
jno
and
push
ja
ss
out
arpl
loopne
imul
and
fimull
mov
adc
pop
sbb
ret
dec
repnz
and
ficoms
insb
dec
or
dec
ja
nop
dec
cmpb
or
gs
mov
popf
xlat
push
xchg
test
lret
mov
add
add
aaa
xor
fwait
inc
jg
xor
loopne,pt
xor
or
jne
add
xchg
fnstenv
fsubrs
out
sub
jp
mov
dec
dec
cmp
xor
in
xor
mov
cmp
mov
push
xchg
fmulp
jecxz
jb
daa
push
mov
inc
jno
or
sti
adc
insl
add
mov
inc
push
sbb
xor
mov
sub
insb
push
mov
aam
loopne
fdivp
fmull
inc
fstpl
adc
fidivrs
add
gs
dec
lret
mov
adc
fld
scas
xchg
and
idivl
push
cmp
daa
js
fwait
les
xchg
pushf
xchg
fldt
mov
pop
repz
lret
mov
mov
adc
push
sub
jo
and
pop
testl
push
cs
mov
and
aad
shrb
xchg
scas
dec
sub
push
movsl
and
xor
sub
aas
aam
and
daa
mov
addb
aad
test
outsl
mov
call
xchg
addr16
arpl
jge
repnz
scas
fdiv
cmp
jae
cmc
es
xlat
pop
ss
std
shr
repnz
cmpsb
aas
or
scas
pop
sbb
pop
or
mov
push
lcall
daa
insl
fadds
ds
push
nop
filds
jmp
sub
and
mov
test
dec
pop
std
repz
lret
jge
dec
ret
push
xchg
adcl
or
mov
enter
pop
mov
rol
inc
lea
ret
mov
imul
dec
cmpsl
mov
sbb
ret
movsl
fcom
jmp
in
test
insb
jbe
sbb
cld
clc
jno
push
xorl
fsubrs
repz
test
loope
icebp
sbb
daa
push
push
xor
outsl
call
jae
sti
or
out
jle
pushf
sub
ja
jecxz
mov
popa
aad
mov
jno
push
mov
sub
out
int3
xor
inc
xor
dec
insb
inc
dec
adc
mov
call
rorl
ficoml
mov
push
lods
xchg
lret
adc
repnz
cmp
push
xor
xchg
mov
and
lods
cmp
dec
xchg
in
rcl
push
mov
jmp
push
jns
dec
insb
ja
jg
popf
std
adc
pop
pop
jmp
in
lcall
push
or
add
push
sbb
push
add
and
sbb
popf
fsub
mov
dec
xchg
mov
xchg
leave
test
call
push
stos
hlt
fistpll
mov
mov
jg
sub
push
cltd
xchg
int
ret
test
mov
xchg
mov
sub
pop
in
pop
sti
popf
aam
stos
and
cmp
sub
nop
jge
pusha
or
jl
add
pop
sub
test
pop
inc
lret
das
icebp
iret
pop
push
sti
mov
inc
mov
out
push
cmp
jbe
xor
inc
test
xor
fwait
sbb
popa
test
leave
fadd
pop
ljmp
fsts
out
rorl
hlt
out
jg
lcall
in
fstl
inc
push
das
dec
mov
lret
push
test
scas
pop
inc
or
add
sbb
fidivs
pop
in
movsl
popf
adc
add
sbb
fidivrl
mov
and
out
or
mov
mov
mov
pop
out
imull
push
dec
cmp
jmp
int
loopne
adc
or
push
jno
and
fiaddl
cwtl
mov
daa
in
jb
ja
jnp
adc
stc
pop
sbb
dec
lock
sub
sub
orb
jo
pushw
inc
popa
nop
sbb
mov
jl
popa
cmp
movsb
ss
xchg
mov
jb
gs
lds
jne
mov
sbb
pop
jmp
sbb
push
add
mov
mov
push
mov
push
and
enter
inc
lea
jg
jg
lods
push
inc
mov
int3
rcll
movsl
or
std
xchg
push
jbe
and
cmp
push
jmp
insl
pop
jp
mov
das
pop
cs
ret
mov
and
jnp
popa
push
mov
xlat
movsl
aas
stc
push
mov
jb
dec
jno
ret
inc
ljmp
mov
loop
faddl
rclb
cltd
aam
jl
aas
test
add
dec
add
mov
and
sbb
mov
pop
jmp
mov
fmul
inc
dec
fst
xor
sbb
sbb
pop
mov
pop
fbld
ja
xchg
jo
dec
pushf
mov
stos
pop
push
in
add
dec
jo
dec
mov
push
mov
mov
ret
pop
cmpsb
jle
lret
sbb
sbbl
clc
aas
cmpsb
mov
add
adc
test
inc
jo
int3
ljmp
xor
mov
push
inc
mov
fists
adc
loop
sbb
shrb
in
and
sub
test
xor
sbb
lcall
mov
bound
les
pop
inc
mov
xlat
leave
xchg
xchg
inc
dec
sbbl
daa
jp
mov
leave
lcall
call
adc
jl
mov
inc
mov
sar
cmp
js
jl
mov
adc
xor
out
push
outsl
cwtl
std
pop
mov
ret
aam
jmp
sub
mov
addr16
mov
sub
imul
jo
aam
cmc
popf
pop
inc
lods
hlt
jbe
imulb
push
xor
sbb
test
testb
cmp
fsubl
pop
call
sbb
cmpsb
insl
cmp
stos
int
leave
addr16
cmp
adc
out
add
mov
mov
fsubs
push
adc
stc
repz
sub
cmp
push
imul
jecxz
or
lahf
sub
xchg
icebp
mov
mov
mov
mov
dec
xor
adc
iret
or
cwtl
js
iret
cmp
sub
mov
jmp
jns
jb
or
mov
xchg
outsl
cmc
mov
mov
mov
mov
xor
imul
pop
insb
push
push
mov
cmp
outsb
in
orb
cli
je
sbb
sub
jae
adc
and
inc
adc
push
xchg
mov
out
je
sbbl
insb
xchg
andl
out
decl
imul
inc
dec
cwtl
push
sbb
and
cwtl
cli
pusha
xchg
and
sub
dec
in
fisttps
or
dec
leave
cmp
push
mov
lcall
mov
loop
cli
inc
mov
clc
dec
aaa
loopne
jb
xchg
arpl
aaa
popf
mov
loop
imul
fwait
jle
pop
dec
push
dec
pop
add
jg
xchg
add
lock
sbb
je
pop
sbb
loope
stos
and
into
xor
lcall
incl
mov
mov
fcompl
push
xchg
sub
fnstsw
jle
movsl
repnz
and
xor
scas
xchg
adc
aas
jl
and
mov
scas
outsl
or
push
mov
lds
stc
outsl
ja
inc
ja
mov
stos
lret
inc
add
lret
push
loope
sub
shl
mov
pop
jmp
xchg
inc
jmp
stos
call
pop
push
mov
inc
xchg
mov
adc
loop
mov
cmp
fs
or
xor
subb
push
les
push
mov
in
cmp
add
scas
sub
adc
pop
insl
sub
mov
add
pop
add
pushf
xchg
push
inc
in
sahf
loop
inc
loop
das
pusha
sbb
sub
cs
sbb
dec
jl
push
testl
mov
xchg
fcoml
sbb
pop
sub
sbbb
shll
and
adc
pop
je
adc
add
stos
shll
mov
mov
or
ficomps
cltd
inc
cmc
mov
push
sub
cmp
ss
loop
sbb
or
fsubl
das
or
mov
xor
rorl
mov
imul
pop
loop
rcr
sbb
push
dec
dec
cmpsl
mov
sar
xchg
push
xabort
out
hlt
mov
mov
jnp
andl
pop
test
into
sti
mov
clc
or
cmc
iret
dec
into
adc
add
xchg
push
test
out
mov
inc
jle
xchg
stos
std
cmp
sub
lock
mov
cmp
or
xchg
push
jb
js
bound
mov
xchg
mov
xchg
fidivrs
shlb
lods
pop
xchg
scas
or
scas
rcrl
ret
jle
inc
shl
out
loopne
movsb
lods
push
cmpsb
out
dec
pop
xor
shrb
fldenv
test
jo
cs
sub
nop
in
dec
and
icebp
mov
loope
jbe
cmp
rclb
push
jbe
mov
out
inc
xor
xorb
rcll
sub
inc
or
cltd
push
cli
xor
into
loopne
scas
je
ret
sarb
cmp
dec
cltd
testb
jecxz
cmc
push
push
adc
loope
mov
dec
xchg
aam
push
es
pusha
lea
pop
lret
std
pop
xchg
daa
aas
std
and
loope
ret
mov
movsl
pop
xchg
adc
jl
shl
sub
add
push
stos
jo
push
cmpsl
jo
lret
rcrb
outsl
dec
mov
and
sub
xchg
jb
pop
pop
inc
stos
pushf
push
aaa
mov
add
dec
in
mov
adc
push
dec
adc
jmp
test
dec
outsl
cltd
push
out
xchg
popa
hlt
push
mov
and
cmpsl
cmc
ljmp
inc
adc
sub
mov
push
add
push
sbb
push
stc
rorb
lea
xor
push
mov
fistps
jbe
and
jg
xor
rcr
mov
insl
loopne
cmp
shl
dec
and
pop
arpl
outsb
inc
mov
dec
mov
push
scas
xor
dec
in
push
or
and
out
int3
push
ljmp
mov
bound
aam
shrl
sarb
push
shll
mov
xor
lds
mov
pushf
out
shll
pop
pop
adc
int
pop
lret
or
lea
xor
jp
icebp
mov
cmpsb
stos
sti
sbb
sbb
jnp
pushf
js
jns
hlt
lahf
mov
stos
jbe
inc
cwtl
stos
cmpb
test
jbe
clc
mov
xchg
mov
or
xchg
mov
push
xor
xorb
sub
xor
push
jl
xor
lods
mov
fildll
pop
rcr
dec
dec
out
mov
dec
push
bound
push
sbb
mov
lret
out
push
xchg
fsubs
in
shr
pop
js
lods
adc
xchg
xchg
xor
mov
inc
add
or
mov
or
pushf
jae
fisttps
aam
adc
sub
hlt
loope
cmp
ficomps
out
icebp
shrb
jnp
push
add
push
mov
inc
mov
scas
inc
dec
std
and
xor
push
inc
sub
je
fdivs
sub
adc
mov
pop
into
push
push
inc
lret
jge
push
pop
data16
mov
cmc
adc
andb
dec
test
mov
shlb
or
in
pusha
pushf
sub
push
push
pushf
push
bound
cmp
mov
bnd
or
mov
add
add
xchg
mov
or
in
jo
or
add
fbld
xchg
and
shll
pop
pop
sub
add
daa
cmovne
jne
push
jne
cltd
pop
or
and
add
imul
adc
jb
mov
push
nop
ja
fldl
xchg
push
mov
lcall
and
mov
cli
ja
pop
add
dec
cmpsb
jbe
out
push
jp
mov
xor
pop
scas
adc
sub
iret
jmp
xlat
ret
mov
aas
ds
hlt
mov
rclb
test
inc
add
pop
xchg
repz
xlat
aam
rclb
clts
and
mov
test
cmp
loope
jmp
sbb
dec
pop
leave
clc
sti
stc
insl
lock
add
sbb
ror
sub
outsb
in
and
push
sbb
or
arpl
mov
xor
adc
xor
inc
mov
jae
sbb
mov
adc
lock
lret
cmp
decl
out
js
rcrb
ja
lcall
popa
das
mov
not
aas
inc
arpl
sub
insb
sbb
pop
sub
addr16
pop
mov
jbe
lods
ja
dec
mov
and
popa
clc
mov
shll
sbb
xchg
les
shll
mov
push
les
mov
cmpl
mov
or
jmp
jmp
test
clc
rcl
jae
inc
scas
enter
cmc
in
and
dec
push
gs
and
or
cmp
pop
pop
sbb
xchg
sub
and
mov
nop
lds
cli
aad
out
and
jecxz
inc
pop
and
ret
rorl
loopne
lret
mov
jbe
fistpll
notb
pop
pop
notl
outsb
cwtl
xor
xchg
mov
cltd
clc
ljmp
adc
jne
lcall
mov
imul
add
jo
mov
fs
pushf
repz
inc
inc
mov
gs
xchg
scas
popa
pusha
push
dec
jo
or
ljmp
into
xor
aad
adcb
cmp
mov
jl,pt
arpl
gs
xor
adc
adc
mov
push
out
or
dec
xchg
xchg
dec
fst
xchg
jg
ja
das
dec
sbb
out
lea
cld
mov
rcr
shlb
push
cmpsb
es
cs
sbb
xchg
pushf
dec
pop
aas
sbb
add
mov
bound
adc
jae
sbb
inc
ja
subl
nop
push
test
loop
push
jge
insl
rolb
mov
or
mov
add
mov
mov
cmpsl
sbbl
pop
data16
jp
sti
sahf
fidivl
loop
mov
test
lret
fildll
cmp
adc
or
stos
add
mov
icebp
jb
inc
inc
push
outsb
add
cli
xor
aas
int
push
xchg
imul
jb
add
fisttpl
lods
loop
rcrl
jae
aaa
std
in
adc
adc
jne
pop
xor
mov
mov
icebp
lock
mov
dec
cmp
je
testl
into
imul
jle
nop
repz
ret
mov
roll
pop
sub
pop
iret
mov
mov
jp
or
push
out
pop
insb
jae
adc
rcrb
mov
in
subb
out
pushf
incl
add
inc
test
test
lcall
or
xchg
out
pop
daa
jp
jne
push
pop
orl
mov
push
mov
mov
pop
mov
add
xor
cmp
mov
or
dec
fdiv
sti
sahf
mov
mov
pop
or
cmpsb
sub
push
mov
inc
pop
pop
and
xchg
jmp
inc
out
xchg
ror
aad
repz
out
in
lahf
cmc
sub
jle
and
dec
inc
insb
xchg
mov
test
xbegin
sbb
fwait
cld
mov
lcall
es
push
in
std
sbb
add
lcall
sub
les
leave
mov
and
jnp
in
stos
call
in
int3
imul
sub
jb
cmp
rolb
push
lea
sub
bound
test
pop
mov
jl
sub
dec
mov
inc
sahf
sbb
push
add
mov
punpckhbw
cmp
adc
mov
jmp
ja
cmp
xchg
add
sbb
into
aam
divb
mov
leave
add
ja
clc
ret
cmpsl
int
mov
dec
lret
mov
dec
cmp
nop
lret
inc
pop
in
out
cmpsb
lret
mov
decb
rorl
ljmp
xchg
sahf
sub
aas
push
xchg
mov
pop
pop
mov
cmp
cmpsl
dec
mov
xor
scas
cwtl
gs
jmp
mov
jb
testl
or
or
mov
adc
ret
mov
and
adc
push
testb
into
mov
test
push
push
push
fisttpl
xchg
movsb
pop
jnp
es
pop
repnz
xlat
aam
or
mov
adc
dec
or
mov
push
loop
dec
mov
arpl
push
mov
aam
in
repnz
nop
out
push
or
and
xchg
xchg
dec
xchg
sbb
in
xor
sahf
jmp
add
mov
jl
pop
shl
mov
test
sub
popf
add
jge
xlat
pop
out
fistpll
decl
scas
cs
sahf
xchg
daa
jno
mov
sbb
lods
push
adc
or
push
adc
rclb
movsl
test
xor
in
cmp
int3
xor
sahf
mov
xchg
bswap
jge
jmp
into
xor
pop
movsl
dec
mulb
loop
lcall
notl
sarb
leave
mov
inc
push
insb
loop
outsb
or
add
or
lea
mov
out
xchg
xchg
mov
les
jle
mov
aaa
movsl
lahf
pop
adc
ds
pop
push
push
repnz
and
jp
cmc
into
mov
mov
pop
adc
mov
dec
xchg
jae
cmp
outsl
jl
imul
mov
mov
jne
dec
mov
notl
loop
and
fcoml
push
pop
out
dec
lahf
mov
orl
inc
fdivs
sbb
add
and
inc
ret
lcall
in
data16
pop
or
fldenv
jmp
repnz
push
add
out
movb
mov
jb
inc
cmpl
imul
test
dec
jg
insb
sub
mov
mov
repnz
pop
test
or
out
pop
repz
mov
shr
sbb
jnp
scas
adc
adc
lcall
mov
jle
test
adc
ljmp
pop
xor
fdiv
icebp
jmp
sub
cmp
and
rorl
cmp
push
push
push
adc
mov
xor
out
testl
rolb
mov
inc
push
xchg
iret
out
adc
mov
lea
sarl
in
stos
sahf
add
mov
mov
icebp
inc
leave
mov
cmpsl
push
pushf
mov
repnz
push
mov
loopne
dec
das
or
xchg
fistps
xchg
aas
shl
dec
push
mov
test
iret
rcl
mov
push
stc
ret
jle
scas
add
scas
mov
test
mov
sub
cmp
into
mov
add
sub
cmpsl
xchg
addr16
push
jle
call
lods
inc
add
lret
nop
aam
insl
xor
rclb
push
mov
mov
adc
xlat
xchg
sbb
jecxz
outsb
mov
loopne
xor
sbb
mov
ss
mov
cmpsl
xor
adc
repz
mov
insb
or
inc
pop
push
rcll
outsb
sub
int
cli
movsb
push
mov
adc
mov
dec
mov
das
repnz
out
imul
test
or
ds
sub
in
mov
in
add
jbe
xchg
xor
jmp
test
mov
mov
add
cmp
fs
or
xchg
mov
xchg
xchg
int
xchg
cltd
sbb
push
ja
push
jno
dec
mov
imull
hlt
xchg
cld
sub
mov
das
sub
add
sub
dec
ror
js
rcll
stos
add
test
push
add
fistpl
lea
cmpsb
add
jns
pop
sahf
adc
xor
dec
shlb
mov
pop
xor
xchg
test
inc
push
push
pop
pop
aad
into
xchg
and
fcoml
jns
push
std
xor
xor
inc
push
lea
enter
add
call
insl
mov
add
jg
repz
js
addl
vpackssdw
sbb
or
iret
sbb
xchg
es
sub
jb
sub
lcall
pop
and
jp
pusha
mov
dec
mov
pop
dec
in
aas
imul
add
pop
xchg
cmp
pushf
data16
rcrb
pop
jp
or
rolb
cli
sub
lods
and
fstl
lcall
pop
sub
xchg
fsubrp
push
mov
fbstp
mov
out
xchg
xchg
mov
int3
push
out
mov
inc
mov
sti
in
sarl
push
hlt
in
xchg
jle
mov
je
in
mov
cwtl
pop
inc
mov
sub
idivb
xorb
sbb
aam
lods
mov
loop
stc
into
xchg
in
out
cli
test
mov
insb
inc
cmpsl
subl
mov
or
xor
std
ds
lret
push
add
jp
dec
lcall
pushf
jecxz
dec
xchg
xchg
cmp
hlt
add
in
adcb
mov
dec
gs
ret
mov
std
mov
out
xchg
int3
mov
or
sti
and
loope
mov
cmc
mov
cmp
scas
push
das
scas
ljmp
ret
ret
pop
stos
push
xor
out
je
mov
cmp
imul
pop
lcall
sub
adc
loopne
xor
mov
xlat
outsl
lods
sbbb
push
notb
sbb
ret
fisttpl
test
xchg
push
jns
cld
mov
xor
dec
stc
sub
dec
add
push
fs
rcl
lock
cli
nop
mov
sub
push
and
cs
mov
ja
jo
ret
int3
sbb
lock
xor
xor
fwait
inc
stc
dec
js
adc
mov
mov
adc
cmp
and
adc
cmp
pop
jne
out
into
add
outsb
jl
cmp
cmc
lds
ds
mov
mov
gs
sub
cmpsl
es
mov
xchg
jne
jnp
flds
pusha
adc
je
imul
js
mov
sbb
dec
mov
fcomp
push
push
sbb
sub
xchg
popa
in
and
imul
stc
leave
push
cwtl
mov
jo
cmp
rolb
cmc
rcll
aam
and
xor
int
int3
jb
push
lds
sub
sbb
sbb
dec
cmp
mov
xor
mov
int3
shr
dec
mov
pop
and
and
out
mov
hlt
sahf
adc
lods
filds
push
jno
jnp
jns
call
lret
movsb
test
mov
pop
subb
imul
cmp
loop
jg
lret
add
pop
int
jmp
ljmp
cmc
fs
aas
addr16
mov
inc
cmp
lock
les
negb
rorl
cwtl
xchg
fcoml
cmp
dec
popf
repnz
insl
jae
loop
dec
in
negl
mov
or
mov
loop
push
outsl
push
mov
or
loopne
scas
pop
inc
loop
inc
sarl
mov
pop
push
xchg
outsl
addr16
mov
ss
push
push
add
xchg
mov
lea
mov
sbb
add
dec
movsb
into
fstpt
mov
out
flds
shrb
mov
push
fldcw
xor
enter
aas
and
cli
movsb
in
pop
inc
jge
inc
pop
js
dec
pop
sub
mov
pushf
jnp
pop
cli
mov
cmp
mov
sar
popa
inc
call
ljmp
add
shrb
cmp
movsb
shl
stos
pop
push
rorl
inc
in
xor
cmc
mov
lods
dec
lret
sbb
add
mov
out
cli
cs
cli
pop
test
dec
push
jl
mov
lea
add
in
ljmp
and
pop
or
jns
mov
lds
daa
pushf
add
dec
pop
push
mov
fsubl
in
cmp
aad
and
je
push
int
sub
push
or
aad
sahf
mov
lds
ja
jg
lahf
ret
mov
popf
inc
cli
add
adcl
js
push
lret
or
clc
nop
jmp
ss
out
pop
jb
mov
int3
push
xlat
fldt
adc
scas
cmp
popa
loop
jmp
in
sahf
adc
sbbl
mov
imul
pop
xchg
ljmp
imul
movsl
adc
jl
mov
pop
data16
dec
push
jle
aas
dec
hlt
sub
xlat
popa
aas
cmp
sbb
xor
loopne
sub
mov
dec
data16
repnz
mov
loope
xchg
push
clc
jmp
inc
inc
nop
popa
inc
gs
stc
xor
adc
xor
ja
aaa
sbb
add
mov
adc
fcoml
scas
iret
adc
lret
jp
loopne
push
and
decl
pop
ret
and
jnp
xchg
sbb
cmpsl
sub
negb
adc
sahf
loope
dec
xor
xchg
ds
xor
cmp
push
notl
jmp
cmp
lret
xchg
dec
pusha
inc
sub
into
mov
adc
idiv
add
add
push
stos
repnz
cmp
inc
jp
mov
jecxz
lcall
inc
dec
lcall
cmpsb
pushfw
dec
jge
cmpsl
adc
mov
nop
je
adc
test
mov
mov
adc
pop
mov
dec
ss
and
dec
notrack
cmpl
icebp
fisttps
cmc
mov
jno
sub
cmp
and
xor
out
xchg
lret
inc
jno
push
imul
adc
loop
sub
cwtl
movsb
popa
in
daa
push
ret
mov
sbb
cli
cmc
inc
mov
repz
jbe
mov
sbb
or
or
addl
sbb
xchg
cmpl
mov
and
jns
jmp
mov
or
add
mov
adc
lret
in
sub
inc
popf
in
jge
stos
pop
insb
sahf
mov
xor
test
add
ret
cs
mov
sub
adc
mov
out
gs
mov
inc
cld
je
inc
inc
jb
pushl
xor
add
jae
fs
repz
cld
sub
mov
lret
lods
mov
negl
ljmp
int3
cld
pushf
fsubrl
rcll
mov
out
in
in
jle
jecxz
mov
call
ljmp
lahf
and
outsb
mov
adc
ds
js
fisubl
pop
lahf
ret
shrl
cltd
mov
test
mov
popf
icebp
sbb
aas
sbb
icebp
xchg
cmp
sahf
mov
jnp
enter
xchg
insl
pop
inc
idivl
popf
dec
movl
das
fadd
mov
xchg
pusha
xchg
stos
pop
cmc
in
shrl
adc
pop
dec
xchg
fs
and
mov
dec
cmpsl
sarb
xor
xor
mov
push
js
jo
add
fisubrs
inc
xchg
adcb
xchg
cmpsb
jb
mov
iret
cli
repnz
std
icebp
outsl
mov
mov
fidivl
aas
imul
jns
notl
dec
mov
ds
in
cltd
fnstcw
xchg
std
add
addr16
mov
sbb
in
dec
shl
dec
hlt
xchg
add
cmp
call
movsb
xor
out
dec
mov
shl
dec
add
or
dec
jp
fwait
cmp
lret
push
jae
ja
push
mov
repnz
imul
out
xor
std
cmpsb
mov
pop
jb
xchg
add
dec
xchg
jecxz
bound
in
cmp
push
mov
add
adc
mov
add
xor
subb
mov
sahf
jns
adc
mov
dec
mov
mov
cmp
or
dec
xchg
xor
push
and
stos
ja
inc
lods
sub
mov
jg
movsb
add
cmp
or
neg
test
cmp
ljmp
sub
mov
out
sbb
push
sbb
dec
dec
bound
pusha
xor
mov
sub
int3
clc
adc
mov
enter
add
and
jbe
xor
cmpl
xor
imul
sbb
jne
jg
in
push
loop
push
inc
sub
lea
sub
popf
shll
add
dec
push
xor
mov
sbb
test
js
imul
cmpsl
lahf
dec
push
push
lcall
mov
push
cmp
sbb
fiaddl
sbb
jmp
adc
aaa
xor
pop
mov
cld
pop
push
cmp
ljmp
push
mov
arpl
fdivrs
jle
push
fistpl
sub
sub
mov
adc
pop
dec
jne
in
stos
pop
jb
in
fstps
mov
adc
lods
push
add
lahf
orb
xor
fidivrs
lret
es
fisttpl
pop
lods
cmc
xchg
es
jge
pop
xchg
scas
fwait
call
lret
js
mov
sub
push
cmpsl
sbb
dec
call
cld
out
xchg
jp,pn
movsb
cli
mov
mov
gs
and
lahf
mov
out
inc
movsl
fwait
jno
push
pop
lret
loopne
pop
ficompl
hlt
dec
jns
inc
mov
mov
mov
dec
cmp
leave
and
pop
cmpsl
push
xchg
cld
xlat
lods
xor
shld
cwtl
ds
popa
cli
or
fwait
and
cmp
test
mov
or
sbb
and
mov
fdivrl
or
mov
cmp
aaa
cmp
imul
ja
mov
lock
lcall
push
scas
insl
pop
pop
dec
sbb
pop
mov
ret
mov
test
xchg
jp
data16
fldcw
jg
out
cmp
int3
inc
pop
and
sbb
addb
pop
sbb
or
pusha
int
clc
and
xor
fbld
jl
pop
cmpsb
test
xor
push
sbb
in
sbb
in
pop
adc
jb
dec
popf
cmp
xlat
push
jae
lahf
xor
mov
push
cmovbe
out
pop
fsubrp
pop
adc
jg
pop
adc
xor
and
fwait
xor
fidivrs
add
jle
mov
push
mov
popf
outsb
jge
push
mov
lahf
adc
lahf
adc
das
rcrl
mov
fwait
jbe
lea
imul
notl
xor
and
lret
pop
out
mov
dec
mov
rorb
flds
sub
sub
mov
xchg
inc
pop
sbbb
and
test
ret
sbb
sbb
lea
in
sbb
cli
mov
mov
jmp
fmul
mov
cltd
mov
dec
jp
pop
push
gs
push
xor
mov
dec
fwait
mov
dec
mov
adc
imul
sub
jmp
add
cwtl
and
mov
pop
xchg
sbbb
aad
add
arpl
pop
std
fcoms
out
pop
mov
or
lds
inc
and
fldt
testl
outsl
pop
aad
loopne
or
mov
pop
mov
mov
sub
sti
setp
cmp
and
aaa
mov
stos
mov
movsb
sub
pop
pop
rclb
inc
adc
jmp
push
lds
and
mov
jne,pt
mov
inc
je
int3
subb
scas
mov
gs
fnstsw
cwtl
out
outsl
addb
or
scas
test
dec
sub
test
push
dec
mov
xchg
in
sti
std
rclb
fstps
bound
push
je
push
mov
insb
jo
xchg
out
inc
cmp
xchg
movsl
ds
mov
out
lea
outsl
xlat
mov
rcll
pop
xchg
movsb
push
inc
adc
loopne
dec
icebp
cwtl
mov
adc
stos
xor
lahf
pop
or
int3
stc
xchg
notl
jle
inc
or
loop
into
and
mov
loopne
mov
movsl
mov
jecxz
jp
push
xor
sub
adc
add
int
xor
mov
adc
mov
push
loope
stos
jl
or
shll
push
jbe
sub
ficoms
aas
cmp
pop
test
fists
add
sbb
mov
jbe
pop
enter
inc
pinsrw
fmuls
addr16
jge
insl
xchg
int
fmuls
push
loopne
js
lds
dec
mov
mov
nop
fdivl
aam
outsb
cmp
cmp
xor
in
adc
sbb
sbb
aam
adc
push
scas
and
int3
scas
in
adc
xor
sub
subb
sbb
fdivs
xor
sbb
push
mov
loope
aad
daa
lret
push
sub
mov
aad
aam
push
mov
sti
pushl
daa
rcrl
or
insl
lds
add
inc
xchg
fs
push
popf
nop
dec
je
arpl
into
iret
fsubr
gs
sbb
mov
jns
into
adc
xor
je
cmp
and
ss
enter
cmp
jmp
xchg
inc
out
cmpsb
pop
dec
xor
in
mov
arpl
pop
lock
repnz
sti
test
and
out
xor
cmp
cmc
jle
lahf
rol
xchg
push
fucom
in
push
push
outsl
mov
xchg
jp
ret
in
xchg
cmp
pushf
hlt
jecxz
pop
imul
jae
in
jl
mov
cmpsb
inc
clc
mov
pusha
ret
in
lds
es
mov
dec
lret
mov
fdiv
push
jb
out
scas
mov
mulb
and
jg
lahf
sbb
pusha
repz
adc
pop
test
adc
mov
jle
mov
ret
mov
ret
vmovsldup
jecxz
fsub
jb
js
mov
jmp
mov
push
ja
jge
mov
fs
push
dec
mov
add
adc
and
shrb
mov
jmp
scas
or
or
push
sub
and
jo
fsubp
dec
sub
and
es
inc
adc
stc
mov
pop
rcrl
mov
adc
lods
jge
mov
or
xchg
shll
outsb
xor
scas
lea
out
push
mov
pop
sahf
mov
and
stc
mov
sbb
cmpsb
jne
jecxz
inc
lcall
mov
add
xchg
inc
pop
ss
scas
pusha
xchg
fwait
stc
lds
std
mov
loop
jp
push
loop
mov
mov
ds
sub
or
test
mov
inc
and
cmpsb
push
aam
xlat
lea
cmp
loop
pop
jo
jecxz
bnd
pusha
cld
dec
sub
cmp
pop
shrl
xchg
sahf
and
adc
bound
fnstenv
adc
sub
out
lods
and
fstpl
pop
mov
mov
mov
ficoms
pop
and
push
pushf
push
mov
push
pop
or
xor
jecxz
sub
or
imul
cwtl
fists
popf
fcmovne
mov
xchg
test
mov
adc
sub
leave
add
test
std
cmp
bound
loope
cmc
aas
sub
xor
pop
je
mov
testl
mov
dec
jo
mov
inc
repz
test
push
aad
je
icebp
out
insl
mov
pop
ret
inc
ja
ret
fmull
or
loopne
shr
xor
push
pop
int3
stc
ret
jns
or
cltd
push
adc
push
repz
loop
cmp
dec
stos
xchg
in
mov
jo
add
xchg
shlb
inc
jno
ret
add
xor
stos
sub
jb
cmp
loopne
jb
xor
stc
xchg
xchg
push
dec
je
cs
cwtl
sub
movsl
ficompl
inc
add
pop
mov
or
dec
into
pusha
fiaddl
pop
sbb
and
filds
daa
fdiv
adc
std
addr16
hlt
mov
sbbl
test
jno
mov
out
fs
clc
fisttpl
mov
xchg
gs
pop
pop
les
jne
push
jge
mov
frstor
clc
int
xchg
mov
pop
out
scas
sbb
or
dec
stos
push
fsubs
ljmp
int
or
push
sti
inc
xor
stc
pop
popa
dec
lahf
push
dec
jb
inc
push
pop
outsl
lahf
fnsave
testb
pop
por
mov
xor
int
and
pop
push
fwait
add
in
popf
sbb
and
jbe
mov
int3
jmp
pop
inc
iret
jp
test
gs
out
mov
and
mov
add
mov
fs
push
cmpl
sbb
das
sbb
or
adc
ret
and
in
mov
push
dec
es
lret
ss
aaa
mov
mov
add
or
jp
cmc
add
push
or
lds
ss
cmp
loop
mov
sub
or
mov
mov
mov
jl
add
rolb
lods
movsb
cltd
xchg
adc
and
dec
push
aaa
or
jne
or
into
cmpsl
push
xor
jne
jg
sbb
or
mov
cs
adc
mov
mov
pushf
addl
jnp
test
stos
pop
add
jo
lods
popa
shr
and
and
or
daa
dec
sbb
shr
add
push
lods
inc
cs
jl
jne
push
adc
movsb
dec
inc
mov
or
scas
cmpb
loop
mov
in
push
or
mov
fsub
xlat
lcall
insb
pop
and
push
ja
inc
jbe
mov
jb
and
push
ljmp
scas
js
or
arpl
cld
push
cld
adc
cmp
pop
push
inc
lea
repnz
dec
adc
mov
adc
pop
mov
jb
mov
xchg
inc
jl
cmp
in
sub
jmp
ja
stc
mov
jmp
and
mov
push
mov
popfw
pop
out
ret
mov
push
push
inc
adcb
repz
adc
adc
nop
adc
out
push
sbb
jne
pop
scas
mov
repz
mov
cmp
fwait
push
repz
imul
sti
imul
add
add
les
mov
mov
inc
push
pop
adc
bound
adc
cmpb
outsl
xor
sbb
insb
jnp
inc
cs
mov
data16
enter
xchg
xor
mov
mov
add
iret
xchg
inc
sbb
cli
insl
les
mov
mov
inc
daa
xchg
sbb
and
rolb
xchg
sub
aas
xor
add
cmpsl
adc
cwtl
xchg
ljmp
es
sub
pop
in
cmp
imulb
hlt
fadds
icebp
je
jo
adc
nop
shl
push
pop
mov
cmp
loop
jg
or
xor
jb
adc
int3
lods
xor
jo
cmp
xchg
popf
insl
push
jbe
mov
popf
push
lret
nop
pop
xor
mov
pop
xor
mov
lcall
arpl
daa
xchg
imul
shlb
lods
and
imul
cmp
fsubl
xor
push
fsubs
push
xchg
pop
xchg
ret
xchg
push
cld
test
insl
ds
mov
jne
cmp
adc
loope
pop
sbb
imul
jnp
sub
push
cltd
mov
sub
push
popa
aam
popf
add
sbb
xlat
dec
in
mov
rcll
es
xor
es
int
inc
xlat
adc
mov
gs
inc
and
lret
jge
add
adc
mov
les
cmpsb
hlt
adc
das
mov
repnz
and
fadds
xchg
unpcklps
out
fdiv
and
pop
aaa
fnstsw
cmp
iret
sub
leave
fildll
mov
gs
cmp
repnz
pushf
mov
out
in
mov
clc
adc
jbe
mov
shlb
pop
js
or
out
movl
add
inc
aaa
lret
pop
inc
fst
xchg
or
mov
outsb
mov
add
andb
aas
cmp
sti
push
mov
ja
test
in
jae
xlat
imul
in
sbb
add
nop
out
xchg
ljmp
sahf
loop
pop
jbe
mov
ljmp
rolb
jbe
and
jp
xchg
js
shr
pusha
adc
hlt
ffreep
test
ss
add
roll
xchg
jg
mov
xchg
mov
mov
cmp
adc
dec
mov
les
mov
and
xchg
andb
add
mov
cmp
pop
sub
cmp
cli
mov
mov
and
mov
sbb
or
rcl
in
lcall
out
adc
out
pusha
push
cmc
jle
lods
fdiv
not
les
mov
imul
xor
mov
and
mov
mov
call
adc
mov
pop
daa
js
jl
sub
push
add
dec
mov
mov
xor
jnp
ret
jmp
mov
in
fbstp
rorb
fsubrp
jecxz,pt
xor
faddl
out
push
adc
cmp
sbb
sbb
adc
mov
sub
movups
inc
mov
inc
and
subl
add
enter
enter
repz
lods
and
sti
dec
push
sub
jo
testb
mov
cs
mov
lcall
dec
mov
in
sbb
mov
mov
sub
mov
push
jl
cmp
dec
sarb
fwait
cwtl
lock
daa
jp
es
sbb
xchg
aad
jno
and
hlt
push
imul
andl
push
dec
jae
pop
mov
cmp
sti
inc
push
xor
push
mov
push
push
push
pop
dec
ljmp
aas
jecxz
jge
lods
pop
cmp
and
fcoml
jnp
ja
xor
jl
inc
sub
mov
sub
inc
mov
fsubp
ret
je
decl
jmp
adc
and
int3
or
add
mov
repnz
mov
out
jo
filds
aaa
and
pusha
push
inc
lods
insl
fcompl
sub
xorl
xchg
lods
iret
lcall
fs
ss
pop
jo
call
iret
adc
cmc
fdivrs
lea
mov
lds
lods
scas
mov
pop
cmp
mov
mov
cmpb
stos
insb
and
push
dec
push
sub
je
cmp
aad
jl
fwait
sbb
xor
push
cltd
push
pop
into
out
pop
rorl
test
je
rclb
hlt
or
add
xchg
push
dec
add
xchg
pop
mulps
xchg
outsl
mov
dec
mov
and
or
sahf
cltd
fildll
and
jmp
jb
push
cmp
mov
cmpsb
dec
jns
jb
mov
in
mov
popf
testb
divl
inc
rorb
call
ds
sbb
jns
push
js
xor
adc
scas
call
push
es
loop
inc
or
pop
ja
xor
scas
pop
mov
pop
dec
add
scas
pop
jae
and
fisubrs
mov
xor
sti
sbb
mov
jecxz
cwtl
jmp
xchg
mov
add
mov
xor
js
adc
rcl
xor
cltd
or
mov
sbb
imul
mov
xchg
call
std
sbb
pop
lock
jnp
bound
push
stos
imul
cmp
repz
popa
jnp
insl
push
mov
out
mov
iret
jbe
rclb
mov
sub
arpl
xchg
ror
mov
lea
mov
cwtl
lea
sbb
ss
cmp
loop
pop
push
xor
subl
jnp
rep
cmp
xlat
add
call
movl
inc
mov
mov
cmp
iret
fwait
stc
enter
add
cs
push
dec
test
pusha
mov
jg
aam
and
inc
adc
add
pop
mov
in
pushf
cmp
push
xor
adc
push
mov
sbb
lcall
xchg
sbb
and
loope
ja
scas
sti
andl
sar
inc
icebp
adc
jle
xchg
out
shl
repnz
xorl
loope
pop
and
pushf
ret
dec
cmp
scas
jp
nop
bnd
mov
test
sub
mov
push
or
mov
mov
repnz
sbb
in
xchg
xchg
loope
mov
stos
and
mov
pusha
bound
rorl
test
push
scas
sub
xor
cmp
pop
jae
jne
imul
icebp
je
pop
pop
lcall
lret
mov
cmc
mov
mov
stos
stc
imul
cmp
cltd
mov
cmp
mov
iret
and
je
add
sbb
out
je
xchg
cs
xor
cwtl
das
roll
ficoms
dec
adc
jg
xchg
addb
lahf
inc
add
mov
lods
sbb
fwait
jg
sbb
sbb
mov
mov
mov
int3
loop
mov
sbb
stc
xchg
mov
jge
mov
ret
xchg
xor
push
imul
sahf
dec
sti
scas
push
cmp
rcrl
clc
mov
mov
neg
xchg
xchg
rorb
insl
inc
dec
xchg
push
insb
sub
ds
stos
mov
jmp
gs
loope
stos
pop
xor
mov
dec
mov
movsb
mov
xor
cld
or
int3
inc
xor
inc
dec
aas
hlt
lock
xchg
adc
xchg
cs
nop
pop
pop
cmp
jge
fistl
push
jae
add
mov
and
mov
cmp
testl
lret
jne
push
sbb
lds
js
sbb
cmp
or
pushf
xchg
pop
sub
test
push
mov
rcr
fwait
add
fwait
test
jg
or
sub
jns
fbld
lea
mov
push
jg
gs
aaa
adc
dec
mov
shl
mov
clc
jle
push
sti
call
std
pushfw
jns
push
add
push
cmp
pop
push
jle
inc
xchg
cmc
mov
xchg
cli
leave
bound
adc
out
das
push
jecxz
scas
ds
and
mul
pop
fcoms
xchg
cmp
push
loopne
lret
lea
mov
cmpsb
dec
mov
jmp
mov
test
icebp
in
pop
push
test
cmp
ja
loope
std
loopne
call
sbb
mov
push
and
xor
cld
in
mov
iret
rorl
jge
push
enter
jnp
hlt
and
cmp
sub
gs
movsl
or
mov
mov
dec
lock
or
mov
jge
jb
loopne
sbb
push
lds
xchg
pop
inc
test
repnz
loope
mov
cmpb
movsb
repz
fnstcw
jns
xor
xchg
addb
in
bound
clc
sahf
sub
adc
xchg
out
mov
add
jg
adc
les
pop
addb
fstl
jmp
or
cmp
or
sarb
mov
dec
mov
arpl
call
fmull
insb
fnstenv
pop
sub
sbb
shr
mov
push
jns
cltd
loop
xchg
sahf
mov
out
xchg
push
out
or
jo
call
ljmp
mov
cmp
push
cmp
push
mov
sbb
shrl
jle
scas
inc
push
cmpsl
jecxz
fnstsw
scas
mov
dec
jmp
jl
mov
xor
pop
in
aam
inc
jmp
sub
lea
shll
pop
stos
jle
dec
inc
ficomps
xchg
push
loopne
mov
in
xchg
test
pop
movsl
test
test
mov
lock
dec
jge
xchg
mov
add
lahf
pop
add
inc
sub
in
test
mov
or
dec
xchg
stc
lock
inc
fmull
xor
iret
dec
out
fimuls
push
inc
mov
mov
inc
clc
popf
mov
rep
push
into
pop
lock
insb
test
mov
insl
or
clc
cmp
shlb
push
addr16
dec
mov
xchg
loopne
repnz
cs
shl
out
push
or
iret
pushf
test
loop
jns
dec
in
xchg
and
mov
fdiv
dec
push
mov
fucom
cs
xor
inc
adc
outsb
mov
gs
push
mov
sahf
in
in
loope
repnz
xchg
mov
cmp
xlat
jge
push
in
ds
adc
popf
inc
xchg
iret
outsl
cmp
or
pop
dec
aaa
outsl
xor
mov
test
hlt
pop
mov
loop
inc
dec
pop
lock
xor
jo
pop
jle
les
popa
fsts
adc
jbe
push
sbb
stc
pop
pop
mov
jl
mov
xorl
lods
in
xor
sub
push
fnstenv
in
xchg
push
fstpl
enter
xchg
lds
stos
fstpt
das
dec
xchg
negb
adc
rcl
imul
mov
cmp
and
sar
mov
outsb
js
rol
and
flds
add
testb
stos
adc
cmpsb
push
in
out
jle
out
les
test
inc
out
pop
es
pop
mov
scas
scas
repnz
test
xchg
pop
inc
jl
daa
adc
add
sub
jbe
xor
sahf
and
sub
loope
push
or
data16
xchg
xlat
mov
out
les
sbb
cmp
cltd
mov
mov
sahf
cmp
inc
enter
or
sub
jg
loopne,pn
mov
sub
movb
in
push
pop
add
cmp
sub
xchg
inc
cltd
incb
test
test
in
out
repz
orl
inc
push
lret
icebp
push
cmp
aad
sbb
loop
push
enter
aam
sbb
outsl
and
cmpsb
lock
jecxz
adc
dec
mov
inc
scas
int
aad
iret
or
rclb
pop
or
aas
xchg
pop
pop
push
adc
lock
test
insb
shll
jbe
testb
pop
add
xchg
into
test
out
ret
test
ss
dec
fadd
mov
nop
mov
test
mov
decl
shlb
push
jmp
test
xor
fidivl
adc
fwait
xor
xchg
mov
fiadds
aaa
add
push
add
enter
sbb
dec
push
inc
imul
push
jae
push
cmc
jb
pusha
or
mov
sub
mov
test
lds
iret
add
mov
call
in
mov
jmp
in
sbb
out
pop
sbb
jns
pusha
test
mov
pop
push
hlt
je
scas
mov
jbe
pop
repz
outsb
repz
cli
cmc
or
insl
or
mull
lea
aaa
movsb
les
sub
cmp
out
jge
ss
jmp
cwtl
lods
cwtl
hlt
pushf
gs
idivl
inc
and
pop
mov
andb
into
mov
test
mov
enter
stc
aas
or
jg
mov
jecxz
cmp
sbb
sbb
jo
stc
adc
leave
pop
xor
inc
lock
filds
out
in
arpl
adc
mov
mov
test
orb
call
int3
xchg
rcll
scas
std
sub
xchg
popf
jae
sbb
jne
movsl
repz
xor
outsl
mov
mov
xchg
fisttpll
into
aaa
std
push
jl
test
jl
mov
pop
push
xlat
repz
mov
mov
repz
pop
jno
scas
add
and
int3
stos
adc
pop
push
scas
dec
addr16
in
push
pop
movsb
aaa
xor
pop
sarl
push
popa
loop
dec
or
in
call
jae
sahf
test
jne
mov
sarl
jl
and
aas
sbbl
pop
xchg
or
cmp
sbb
cmp
mov
and
popf
sub
lea
test
xchg
icebp
and
mov
sub
test
xchg
cwtl
fldpi
mov
repz
and
adc
ret
lahf
decl
cmp
fs
mov
bound
imul
in
mov
andb
les
mov
push
add
lcall
sti
mov
mov
mov
stos
cmpsl
and
test
cmp
push
mov
jo
dec
inc
dec
cmp
inc
lcall
in
ja
and
jecxz
pop
push
lds
imul
pop
jp
mov
ret
sub
push
out
mov
pushf
mov
daa
addr16
testl
mov
or
lods
loope
mov
sbb
jae
jae
add
mov
inc
insl
xchg
pop
outsb
xchg
pushf
add
ja
cmp
mov
lock
mov
or
xchg
scas
pop
sbb
xchg
data16
jp
int
lods
fidivrl
loope
addb
daa
push
pop
xor
cmpsl
inc
outsl
sbb
leave
popf
pushf
jbe
push
mov
pop
mov
aaa
mov
leave
lds
in
sub
mov
xchg
cwtl
mov
lcall
mov
loope
mov
xchg
sbb
and
xchg
pusha
push
lods
ret
add
dec
sub
jbe
scas
dec
cli
loope
imul
std
cmc
aaa
loop
shrl
cli
arpl
mov
add
jecxz
jns
es
cwtl
mov
xor
pop
popf
mov
push
stos
mov
and
jmp
mov
dec
jmp
push
xchg
sub
lds
dec
dec
xor
cwtl
push
cmp
xchg
xor
fildl
sub
jae
mov
xchg
xchg
scas
pushf
fsubrp
sbb
rcrb
push
mov
mov
xor
sub
repz
sbb
jle
push
push
mov
lcall
mov
or
xlat
inc
pop
jge
adc
or
xchg
xchg
jne
sub
lds
adc
mov
cmp
or
fidivl
out
mov
or
in
arpl
rorl
mov
dec
jg
iret
pop
jp
mov
dec
addr16
mov
cltd
in
pop
mov
push
push
ds
jns
dec
mov
push
xor
movsb
add
mov
int
iret
divb
leave
test
and
adc
cli
push
xor
adc
push
dec
adc
lret
ret
in
jb
and
push
inc
frstor
adc
lods
sbb
movsb
add
test
xchg
dec
es
ret
xor
mov
in
mov
sub
out
push
xor
imul
daa
adc
das
mov
push
popa
push
jns
inc
je
sub
cwtl
push
lret
pop
aas
ss
out
clc
add
xor
movsl
out
pusha
cmp
mov
jmp
daa
imul
rolb
adc
cwtl
push
push
push
incl
lods
inc
roll
lret
pushf
lds
jmp
xor
inc
clc
mov
lret
mov
mov
mov
push
jae
stos
hlt
dec
incl
in
mov
lods
mov
adc
xchg
xchg
xor
adc
or
or
push
xor
mov
js
or
mov
xchg
icebp
cmp
orl
les
dec
pop
jl
movaps
mov
xor
pop
outsl
mov
faddl
cmp
inc
nop
fimuls
call
out
push
popa
scas
daa
and
dec
aad
mov
push
fisubl
adc
pop
jl
je
in
push
lret
cmp
in
sub
mov
dec
adc
mov
sub
cmp
clc
cmp
xchg
xlat
push
inc
cmp
jno
xor
or
pop
test
xchg
insl
lret
add
leave
inc
jns
imul
and
icebp
imul
add
and
divb
pop
sbb
push
lahf
je
add
sbb
cmp
push
cmp
scas
push
xchg
mov
fstpl
sub
ss
add
sub
ljmp
xchg
test
xor
pop
mov
stc
sub
adc
push
add
pop
loop
jmp
fsubr
mov
cmp
adc
and
cmp
add
mov
add
out
adc
jbe
subl
stos
fsubrp
sbb
mov
xchg
stos
inc
pop
and
inc
lret
cmpb
call
xor
cmp
pop
push
mov
push
xchg
ret
mov
repz
loopne
addr16
dec
in
repnz
leave
in
sbb
mov
mov
fdivrs
push
idiv
push
pop
mov
pop
pop
ss
cli
lret
in
push
push
std
and
cmp
jae
jae
lahf
subl
sub
xor
aas
cmp
js
and
nop
lds
test
sbb
in
sub
xor
mov
push
inc
adc
mov
sbb
or
lret
mov
js
ss
ficomps
xor
and
aas
into
pop
add
mov
mov
leave
mov
in
xchg
insb
popa
int
push
and
pushf
mov
fistps
inc
dec
rclb
int3
sub
js
pop
cmp
mov
xor
aam
xor
stos
cs
xor
jb
mov
rorb
xchg
jne
mov
js
addr16
inc
adc
int
rcrb
cmc
lods
sub
jne
inc
in
jle
inc
mov
lret
lea
xlat
mov
test
mov
cmc
and
sub
clc
insb
fnstsw
lahf
jecxz
inc
clc
cmove
stos
scas
aas
ret
test
adc
xchg
sub
cltd
lret
fs
jnp
test
popa
movsb
mov
mov
aaa
orl
test
mov
sub
mov
xor
lock
xor
add
mov
xchg
das
int
sbb
rorb
mov
shll
and
dec
neg
js
xor
nop
movsl
push
sbb
fisubrl
lret
ret
inc
sub
mov
cltd
jne
and
clc
dec
mov
push
jecxz
fdivr
test
pop
testb
and
dec
out
in
das
stos
mull
jb
shl
call
out
pop
or
sahf
mov
int3
cmpsl
ljmp
cmp
and
jecxz
pop
inc
lock
push
xchg
add
rcr
jp
fbstp
and
lret
add
stc
mov
aam
mov
xchg
mov
mov
xchg
and
jl
popf
and
test
mov
jbe
in
pop
les
jle
enter
cld
and
mov
and
pushf
jge
std
repnz
xchg
out
test
dec
ja
add
jle
add
cmc
jge
lods
mulb
int3
sbb
rclb
jb
dec
inc
jae
jge
repnz
add
pop
outsl
cmp
pusha
push
cmc
push
ss
mov
add
fsubp
adc
popf
pusha
adc
into
mov
outsb
jne
mov
cld
sbb
adc
sbb
lret
movsl
pushf
cli
rcll
lcall
sub
stos
shlb
push
shrb
movsl
test
xlat
ret
jne
xchg
and
pop
pop
cmp
nop
xor
mov
push
push
rclb
hlt
xchg
fcmovu
pop
daa
out
ljmp
mov
call
mov
std
loope
insb
pop
les
out
data16
ja
mov
in
adc
cmp
jo
and
arpl
insl
xor
ficompl
inc
cwtl
pop
mov
add
movsb
fs
sbb
sub
sub
inc
pop
push
int3
dec
and
pop
lock
ljmp
scas
mov
xchg
xchg
push
out
shlb
mov
xor
xchg
mov
call
jl
xlat
cwtl
leave
xor
pop
scas
lret
test
cwtl
push
loop
sbb
aad
outsb
fnsave
popf
cwtl
adc
fldcw
rcl
daa
and
jmp
mov
fs
aaa
add
mov
mov
xchg
je
or
popf
xchg
and
or
push
leave
jne
mov
adc
notl
popf
cmpl
lods
fdivl
in
lds
in
or
leave
js
stc
pop
and
sti
inc
mov
push
pop
rol
shll
xor
xchg
inc
cwtl
pushl
mov
cmc
xchg
mov
xchg
addb
shrl
scas
mov
mov
or
movsb
adc
js
sbb
cmp
and
stc
add
xor
rolb
ja
test
test
jmp
shrb
push
iret
inc
enter
in
pop
fs
xchg
test
xchg
sbb
and
bound
pop
into
into
jg
out
lock
fisubs
jb
mov
mov
bound
sbb
stc
lahf
adc
mov
push
jne
je
aas
idivb
add
ret
cmp
daa
cltd
jle
cmp
ja
mov
jge
mov
inc
addr16
push
adc
fistpll
sahf
and
mov
pop
sbb
inc
aam
out
push
jmp
xor
not
cmp
cli
scas
test
add
pop
fwait
rclb
xchg
pop
rcl
out
adcl
mov
lea
enter
cmp
call
mov
or
mov
stos
data16
flds
xchg
stos
mov
mov
jge
and
adc
cs
call
mov
hlt
out
lret
mov
mov
dec
js
int3
mull
pushf
or
fidivrs
insl
mov
inc
fidivs
mov
push
inc
mov
push
lret
xchg
or
std
repnz
mov
test
in
rcrb
xchg
insb
cld
inc
add
sbb
jl
pop
sti
lcall
jnp
adc
mov
xchg
inc
xchg
cmc
iret
sub
adc
pop
mov
mov
sub
jne
adcb
nop
pop
scas
mov
mov
lahf
lock
pop
fnsave
cmpsb
mov
test
cmp
dec
popf
jl
ret
cmp
and
stc
pop
mov
push
scas
mov
mov
xchg
sbb
ss
pop
and
leave
arpl
movsl
clc
jmp
xor
hlt
imulb
jg
sbb
pop
inc
jmp
pop
xor
sbbl
movsw
lcall
out
shrl
mov
pop
jns
cmc
xchg
std
repz
fstps
nop
jmp
insb
cmc
mov
lea
pop
push
pop
cmp
mov
push
test
adc
jl
fcomip
mov
sbb
imul
or
adc
lods
add
or
out
xchg
jnp
jo
pop
aas
sub
rcrb
es
cmp
sbb
insl
gs
sub
xlat
push
fwait
mov
pop
jns
bound
cmp
xor
fidivl
cli
or
jo
jecxz
push
cmp
lahf
push
pop
xchg
fs
jns
pop
jmp
push
dec
movsl
psraw
jo
mov
lcall
xchg
pop
jne
repnz
push
sbb
lahf
pop
xor
pop
and
push
arpl
push
fwait
scas
and
fstpt
or
push
push
mov
jmp
insb
mov
push
xlat
in
test
and
adc
leave
adc
or
mov
jns
and
insl
xchg
incl
sahf
pop
xor
sarb
and
cmp
sub
sti
pop
xchg
data16
leave
incl
outsl
jo
fisttps
enter
mov
pop
lods
xchg
push
xor
dec
xchg
insb
mov
jns
dec
int3
sub
leave
shrb
mov
jnp
cwtl
mov
mov
jg
dec
test
adc
lods
lods
adc
pop
push
pop
stos
add
in
jns
sti
lret
jb
cmpb
push
xor
lds
aas
push
js
test
inc
enter
pop
stos
sti
adcb
add
cmpsl
push
out
push
nop
cmp
les
sub
cmc
cli
scas
jle
fs
scas
push
insl
pop
jns
loopne
dec
int
aad
das
and
das
dec
cmp
and
ret
add
repz
lret
ja
mov
dec
dec
fidivrs
push
sbb
dec
inc
add
or
and
sub
xchg
arpl
jo
push
lea
nop
xlat
pop
jg
and
int3
jmp
mov
sub
jnp
push
cmp
cmp
mov
mov
imul
ftst
cli
repz
push
popa
sbb
out
mov
cmc
cltd
dec
push
ja
fldl
or
xor
dec
loopne
sub
jne,pt
out
stos
in
push
push
xor
rclb
ffree
sub
add
enter
cmp
jno
jno
insl
in
sbb
and
sbb
mov
push
sti
test
push
lsl
out
scas
dec
jmp
adc
adcb
dec
adc
aam
xor
scas
std
sub
gs
int
imul
lea
and
or
mov
lods
xchg
arpl
ds
add
mov
add
xchg
inc
xcrypt-ctr
cmpsl
lcall
mov
and
mov
add
sar
pop
lret
aaa
mov
jnp
jle
dec
or
push
repnz
rclb
push
sub
lahf
push
loopne
addr16
jle
cmp
push
cli
das
add
and
icebp
adc
sbb
fstl
sbb
add
mov
mov
sbb
pushl
cwtl
pop
xor
mov
mov
movl
das
and
cli
stc
popf
mov
sub
push
aad
test
into
mov
aas
jno
out
pop
mov
xchg
pop
push
popf
sub
test
mov
fwait
nop
push
aad
add
inc
add
roll
loop
dec
dec
cmc
push
mov
out
jmp
xchg
hlt
mov
adc
xor
mov
and
jle
into
jle
inc
or
inc
xorl
movsb
scas
pop
stos
jno
rcr
sar
dec
icebp
icebp
push
data16
or
sahf
push
fistpl
fstp
cs
or
test
pop
push
aam
aaa
and
inc
lock
mov
ja
test
lock
lock
dec
mov
fldl
lcall
insb
push
jo
outsb
sarl
xlat
movsl
adc
dec
dec
movzwl
push
inc
jbe
daa
imul
out
rcr
lret
imul
sbb
cmp
mov
sti
mov
mov
pusha
jmp
lea
mov
stc
push
adc
pop
mov
sbb
lds
outsl
push
ror
sub
sub
pop
sbb
rorl
lods
dec
pop
addr16
lods
repnz
inc
or
mov
ret
js
idivb
dec
jb
std
in
icebp
lods
out
mov
fadds
outsb
andl
sub
in
repnz
mov
cmp
add
dec
mov
mov
mov
xor
adc
sub
scas
rclb
inc
fcomi
inc
cltd
ret
repz
sti
push
idivb
cmp
adc
jge
enter
or
mov
in
jns
and
cmpsb
add
sbb
dec
outsb
lea
aas
call
mov
rcrl
loop
repz
push
lds
or
ja
loope
xchg
cmp
aas
shlb
cmp
lcall
adc
sub
cmp
xchg
mov
push
dec
addb
cmp
in
xor
inc
mov
lods
mov
or
sbb
or
rol
inc
movsl
mov
jbe
pop
jnp
xchg
out
mov
addr16
jns
sbb
jle
pop
mov
jl
pop
or
sub
push
fstl
push
inc
adc
pop
inc
mov
mov
dec
or
repnz
iret
aaa
mov
enter
xor
sbb
lds
lahf
out
rclb
cmp
js
testb
in
xchg
or
and
gs
cmpsl
inc
jg
pop
adc
jb
mov
push
or
dec
lea
lods
cmc
loop
je
mov
sub
fbld
xor
dec
pop
and
out
jl
jmp
popf
ror
cmp
mov
mov
dec
in
cmpsb
dec
in
adc
incl
les
cwtl
aad
push
add
pushf
xor
mov
pop
cmp
pop
and
sbb
cmp
scas
sbb
cwtl
dec
pusha
mov
jnp
pop
adcl
int
push
push
int3
dec
movsbl
sub
test
popa
cmp
inc
push
sub
outsl
cltd
mov
test
sarl
push
ja
arpl
adc
lea
call
out
dec
shrl
sbb
push
cmpsl
imul
pop
xor
out
mov
inc
sarl
subb
sub
or
andb
aaa
xor
cmp
outsb
cmp
mov
cli
sub
and
jecxz
addr16
xlat
sub
push
cmp
xor
jns
mov
xor
cmc
adc
fbstp
aad
sti
push
scas
push
sbb
pusha
sbb
xchg
leave
mov
inc
mov
jg
fiadds
cmp
les
or
jp
jae
add
test
push
test
cmc
lea
mov
scas
andb
popf
add
inc
repz
xor
xchg
movsb
insb
add
push
jp
flds
aad
jo
sub
sub
mov
fcoml
jle
jne
inc
insl
mov
orb
push
stos
adc
shl
push
pop
and
sahf
fldt
sub
push
jl
cltd
xor
or
xlat
in
jae
cwtl
mov
arpl
dec
and
jbe
test
in
icebp
xor
cmpsb
jl
cmpsl
add
pop
shll
dec
xchg
lcall
fwait
in
mov
test
addr16
mov
fcomip
sub
sub
sbb
sbb
xlat
lret
xchg
out
js
aam
mov
out
ljmp
mov
cmp
xchg
mov
into
or
insl
xchg
lock
or
lea
lods
lea
dec
mov
hlt
mov
xor
out
mov
mov
inc
push
int3
aam
out
clc
or
add
jo,pt
sub
iret
inc
es
add
sub
data16
dec
jmp
fldl
inc
jmp
cmp
adc
dec
out
addr16
cmp
xchg
inc
iret
xchg
jl
mull
out
bound
in
cmpsb
sub
xchg
in
pushl
repnz
clc
jnp
setp
mov
divb
pushf
sub
in
add
aam
mov
adc
inc
cmp
loop
das
rcrb
mov
sti
ret
sbb
cmpsb
mov
jmp
cmp
je
es
fsubrl
pop
adc
dec
mov
xchg
out
aaa
cmp
pop
mov
jns
adc
in
hlt
rorl
scas
fidivrs
notl
adc
rcr
cmp
xor
or
test
sub
fcom
loopne
lods
ret
pop
jb
or
add
les
je
push
rcr
dec
std
fxch
movsb
iret
adc
ret
in
repnz
mov
xchg
icebp
mov
jb
lret
or
mov
imul
push
outsb
dec
rcll
mov
xor
lods
jecxz
pop
or
add
jmp
rcr
xor
fstpt
or
mov
cltd
shlb
icebp
mov
imul
xlat
ss
loop
lahf
inc
pop
adcb
push
mov
scas
in
leave
leave
mov
mov
xchg
push
lahf
fidivrs
std
test
xor
push
stos
jns
push
fcmovnbe
sub
les
xor
pop
call
cmp
and
xor
sub
xchg
fdivl
fwait
cmc
dec
and
stos
lea
sarl
aad
lret
or
push
mov
shl
mov
push
cmpsl
mov
test
or
sub
lods
aaa
inc
inc
std
test
div
jo
dec
xor
sbb
in
or
mov
call
ss
pop
jnp
add
xchg
mov
xchg
pop
lock
lods
dec
pushf
mov
rolb
xchg
ljmp
lret
ficoms
outsb
fs
xor
jb
fsubrs
bound
mov
push
repz
fmul
mov
jmp
jbe
insb
mull
imul
insl
int
push
faddp
sarl
movsl
dec
pop
inc
movsb
mov
bound
aad
sbb
addl
and
imul
mov
int3
out
inc
hlt
imul
mov
fsin
les
imul
mov
out
sbb
push
pop
inc
enter
nop
sbb
add
mov
xchg
addb
inc
pop
mov
and
or
push
or
lods
xlat
cmp
or
movsl
leave
stc
nop
cmp
add
sub
cmpsl
repz
jo
pop
je
imul
repnz
ucomiss
xchg
paddusb
lods
lds
stos
out
aas
mov
mov
pop
fucomip
jmp
mov
and
mov
adc
mov
cmp
mov
dec
lcall
out
cmp
sub
jnp
ja
cmp
cmp
inc
xor
mov
push
fldt
jecxz
les
sarb
jecxz
add
or
push
cmp
imul
add
clc
dec
pop
repnz
popa
test
mov
and
scas
lds
insb
stc
jp
bound
mov
xchg
insb
or
int
jne
xchg
ljmp
stos
pop
pop
shl
mov
inc
in
arpl
lock
add
roll
pop
mov
loop
adc
shlb
xchg
leave
test
stos
sbb
jmp
mov
lret
stos
das
outsl
sub
jno
dec
hlt
pop
sti
push
rcl
xchg
push
shrl
jl
mov
sub
dec
call
mov
xor
pop
jl
mov
in
sbb
daa
mov
aad
hlt
jne
mov
cltd
xchg
hlt
push
or
rclb
cmpb
jno
sbb
dec
icebp
int3
clc
add
mov
mov
xor
stos
mov
sbb
arpl
dec
push
fstps
das
mov
notl
or
repz
iret
mov
and
inc
jp
cltd
dec
cmc
scas
xor
add
xor
jb
rcrb
ret
dec
jg
dec
lret
stos
ficoms
subb
fstpl
sbb
pop
xchg
sarl
add
mov
adc
xor
dec
adc
lea
jno
lahf
cmpsb
cmpsl
dec
pop
iret
xchg
lret
mov
rcl
xchg
jb,pt
stos
push
pop
add
push
stos
mov
andl
lahf
out
mov
add
dec
cmp
mov
pop
test
jnp
adc
out
pop
cmp
jecxz
stos
add
pop
mov
xlat
scas
mov
sarl
mov
shl
push
push
or
push
pop
in
mov
jae
add
fiadds
xor
pusha
sub
xchg
divl
xchg
adc
pop
sub
sub
repnz
into
push
gs
or
hlt
jmp
std
mov
mov
int3
mov
cmp
shr
in
arpl
xor
and
mov
push
push
cmp
sbb
mov
in
es
aaa
cld
or
loopne
adc
adc
insl
pushf
mov
adc
add
fwait
mov
gs
fwait
shlb
scas
lahf
arpl
cmpsl
dec
push
imul
sub
fcomps
cld
hlt
movsb
mov
xor
insl
pop
ret
dec
xor
sub
int3
imul
std
mov
sub
mov
jns
aam
daa
and
pop
add
daa
xchg
or
lock
bound
push
inc
sub
mov
cmpsl
jge
mov
cmc
xor
pushf
dec
cmp
fs
push
jns
cwtl
xchg
lret
push
pop
leave
push
fdiv
xor
fistpll
shrb
mov
xor
in
jne
mov
addb
out
es
aas
mov
mov
je
xchg
mov
add
inc
jle
xchg
repnz
mul
mov
push
push
mov
gs
lods
dec
pop
cltd
movsb
sub
mov
pop
jmp
cmp
cmp
push
int
pop
call
decl
in
jbe
mov
test
jnp
xor
push
pop
iret
mov
in
xchg
xchg
test
dec
sbb
jle
out
dec
inc
inc
ret
adc
jo
int
jno
jge
pop
cmc
sti
jp
push
je
adc
sti
ljmp
in
test
xorl
sub
in
popf
pop
fcompl
sbb
ret
roll
fwait
lods
testl
xor
jg
in
loopne
sub
mov
jb
pop
jns
pop
mov
add
add
sub
negl
pushl
lahf
pop
adc
je
sarb
aaa
push
xor
sbb
xor
dec
pop
mov
stos
out
data16
pop
leave
mov
roll
push
int3
mov
sbb
lds
call
iret
insb
mov
pop
mov
daa
pusha
outsb
xchg
pop
push
add
leave
mov
ss
mov
insb
mov
inc
and
scas
test
or
int3
push
mov
pop
cmp
or
and
loop
push
pop
in
mov
xchg
hlt
in
ss
push
lea
insb
out
lds
xchg
in
imul
je
test
dec
mov
xor
mov
insb
jb
xchg
push
xchg
mov
movsb
inc
sbb
adc
and
xchg
inc
lds
push
dec
aas
rcrl
inc
and
jecxz
and
call
xlat
dec
jmp
add
mov
inc
push
idivl
mov
sub
imul
mov
jb
fsub
xor
and
sahf
arpl
cltd
lds
xchg
test
inc
jne
addr16
int3
ljmp
cld
xchg
pop
push
sub
test
xor
xor
xchg
jl
out
js
jbe
fmuls
xor
jne
andl
push
dec
jo
xchg
mov
in
mov
add
pop
mov
sub
in
mov
mov
lret
js
push
ret
popa
call
in
push
mov
mov
mov
dec
lahf
mul
imul
sub
fsubs
pop
jbe
sbb
mov
ret
mov
xlat
mov
jle
mov
mov
fisttpl
je
in
jb
stos
les
dec
jb
mov
push
lods
sarl
jnp
pushw
stos
cs
mull
mov
jle
mov
sub
enter
mov
push
cmpps
mov
imul
addr16
in
inc
outsl
pop
loopne
sbb
inc
ss
mov
repnz
fimull
jp
dec
jo
add
cmp
test
sub
daa
addr16
call
push
mov
dec
into
int3
orb
movsb
push
nop
pop
iret
lcall
in
mov
jne
jne
push
addr16
push
dec
call
mov
sub
clc
or
mov
addr16
or
mov
or
mov
sar
bnd
leave
stos
push
inc
shl
cmp
mov
mov
mov
in
mov
jmp
sti
inc
jle
and
popa
or
inc
xorl
mov
or
xor
add
adc
add
cmc
mov
je
inc
mov
dec
fwait
fwait
adc
loop
push
jb
inc
rcr
loopne
mov
cltd
repnz
mov
dec
adc
ss
sbb
inc
inc
dec
aad
jge
mov
jae
dec
prefetch
xchg
sbb
fadd
mov
mov
cmp
add
push
push
jmp
addr16
das
dec
lret
xchg
rorb
gs
sbbb
cmp
mov
xor
or
inc
daa
sub
nop
stos
adc
ljmp
mov
gs
xchg
arpl
inc
lret
fcmovne
pop
mov
cmp
pop
movsl
or
sahf
int3
xor
cmp
sub
fisubs
add
mov
add
insl
rcrl
mov
push
mov
xlat
iret
adc
cmc
outsb
pop
div
xor
adc
sbbl
add
stc
stos
inc
mov
pop
and
std
data16
addr16
not
repz
xor
les
add
cmpsb
loope
sub
inc
mov
push
xor
rolb
sbb
ficoms
ja
jns
test
inc
xchg
dec
mov
popa
mov
xchg
arpl
and
push
cmp
xor
icebp
subb
cld
in
out
shl
enter
das
out
repnz
loope
addr16
lock
jmp
dec
jmp
mov
icebp
ljmp
lret
mov
scas
push
jge
out
jbe
add
mov
xor
mov
xchg
rorb
imul
ljmp
add
imul
sub
cltd
push
outsb
stc
outsl
cmpsl
out
and
mov
mov
push
jl
iret
jmp
std
scas
push
push
mov
push
mov
pop
sbb
and
mov
adc
mov
insb
gs
jae
mov
fnstenv
mov
mov
lea
jo
loopne
fidivl
and
flds
es
pop
and
xchg
stc
add
stos
jne
in
loopne
dec
mov
pop
stc
imul
add
pop
leave
add
jae
loop
fiadds
pop
mov
sarl
add
in
ljmp
mov
pop
std
xor
and
aad
arpl
sbb
push
adc
fadd
xor
xor
dec
add
add
cpuid
movsb
ret
adc
jne
icebp
ss
js
sub
inc
repnz
mov
jmp
adcl
faddl
or
cmc
repz
stos
sub
iret
mov
xchg
out
dec
test
add
sarb
xor
scas
sbb
adc
mov
mov
sub
push
out
out
sbb
push
out
mov
inc
out
xor
clc
inc
cmp
repz
xchg
iret
insb
inc
pushf
loope
cld
lock
loope
pusha
sbb
hlt
movsl
and
arpl
jae
and
adc
jo
inc
push
cmp
jle
adc
mov
xor
movsb
fld
mov
inc
aas
das
test
adc
sub
lods
push
lea
pushf
jle
ja
push
mov
dec
xchg
loopne
jns
insb
push
jge
enter
xchg
jmp
cmp
mov
xchg
or
ret
gs
in
jle
lods
mov
in
shl
mov
les
xchg
mov
xchg
mov
mov
pusha
in
out
rol
and
js
jmp
leave
push
aas
fisubl
aaa
imul
mov
jl
rorb
lret
pop
vcomisd
sahf
in
cmc
xor
and
shll
out
lds
or
xor
iret
imul
rcrl
xor
stos
icebp
inc
je
pop
imul
add
addl
adc
jle
mov
xchg
repz
movsl
int3
jns
inc
addl
fwait
push
pusha
repnz
mov
loope
jp
cld
fdivl
dec
scas
push
push
or
loope
stc
bound
out
cmp
je
lea
sbb
jbe
ret
sahf
lea
loope
xor
jns
pop
mov
in
mov
test
and
ljmp
cli
call
xlat
in
dec
lea
push
adc
sub
and
push
rclb
rorl
jbe
mov
mov
test
aad
in
in
mov
and
orl
xor
mov
inc
mov
adc
imul
pop
out
add
ljmp
aas
xchg
xor
add
pop
stc
cmc
test
adc
jp
mov
lock
sbb
pop
cmpsl
mov
adc
mov
dec
inc
xorl
repz
ficomps
lock
cmc
sub
inc
and
popa
mov
adc
movsl
push
sbb
scas
loop
lahf
xor
push
out
mov
clc
loopne
add
ss
test
mov
or
jns
mov
pop
loop
push
jecxz
pop
loopne
sbb
scas
lret
inc
mov
add
mov
jle
fwait
xor
push
int
push
je
inc
pop
add
in
fnstenv
inc
xlat
or
push
mov
pop
mov
xlat
call
out
shrb
inc
sub
je
jnp
sbb
int
mov
inc
addb
push
out
add
sbb
ljmp
jae
cmp
bound
xchg
pop
scas
xor
scas
mov
push
mov
xchg
leave
ret
mov
xchg
and
outsl
sub
ficompl
jecxz
pop
roll
xchg
cmp
pop
pusha
mov
push
pop
xchg
mov
fsubp
ret
mull
pop
xchg
xchg
ss
int
xor
hlt
add
sub
mov
sub
xor
push
dec
xor
cltd
sbb
sbb
sub
or
fsubp
pop
sub
out
push
lcall
stos
ret
in
adc
jb
inc
push
mov
mov
fwait
xor
cmp
fxch
push
adc
xor
ss
inc
and
mov
out
pop
pop
aas
adc
push
add
and
xchg
imul
mov
divl
das
jbe
xchg
pushf
sbb
mov
add
sub
pop
pop
push
es
rcrl
data16
or
mov
pushf
es
scas
mov
rcll
popa
lea
lahf
fbld
mov
inc
les
icebp
ljmp
jnp
bound
mov
dec
jns
popf
movb
xor
imul
pop
push
std
xor
or
add
scas
inc
mov
adc
loope
mov
les
xor
in
icebp
ljmp
xor
xor
add
inc
xor
sahf
jl
lock
movsl
cmpsl
cmp
pop
dec
push
in
cli
shlb
fisubs
test
jnp
pop
js
jecxz
shrb
and
filds
push
lods
mov
sar
daa
mov
xor
and
jmp
adc
push
in
sbb
arpl
mov
sub
mov
pop
outsl
lds
adc
mov
push
das
aad
jae
fisttpl
xchg
fstl
pop
pop
cmp
and
dec
mov
outsl
ret
dec
test
push
cli
mov
dec
enter
and
push
in
mov
cmp
daa
or
cli
xchg
adc
js
push
and
mov
jns
stos
stos
fsubr
mov
and
insl
cmp
pop
add
mov
cmp
std
int
aad
sbb
ret
cmp
ret
xchg
enter
sti
push
and
inc
test
dec
add
mov
enter
dec
fnsave
adc
xor
mov
push
sbb
mov
sbb
inc
cwtl
shrl
and
inc
mov
mov
das
add
pop
repz
popf
xor
fucomi
ljmp
mov
bound
mov
xchg
push
mov
inc
push
jo
cld
jnp
xchg
pop
out
test
ret
add
aas
push
in
xchg
bound
jp
shlb
inc
push
and
lahf
add
jne
or
mov
or
scas
outsl
sub
add
sahf
push
jno
mov
adc
cs
daa
aas
mov
and
and
jnp
je
cmp
ror
dec
pop
call
inc
dec
mov
mov
int
and
mov
push
push
inc
in
call
mov
hlt
mov
xlat
arpl
mov
sti
fisubl
fnstcw
daa
test
mov
icebp
mov
add
sub
cmpsb
dec
inc
xor
add
stc
cmp
pop
cmp
dec
cmp
xor
daa
adc
jge
add
xor
daa
pop
cwtl
sub
lods
mov
xor
orl
dec
outsb
jg
lret
cs
iret
lcall
xor
mov
int3
and
sub
jbe
sarb
sbb
std
test
add
jae
mov
mov
or
jo
xchg
rcr
int3
stos
mov
ret
popf
ss
rcl
fdivrp
push
fidivl
repnz
adc
xor
or
xor
push
mov
fldt
imul
add
movsb
and
cmp
mov
nop
cmc
data16
jo
aam
bound
jp
repz
shlb
xchg
dec
stos
mov
ja
inc
addr16
add
cwtl
xor
aas
scas
dec
ds
mov
add
jns
mov
mov
xchg
shrb
xorl
inc
out
xchg
xorb
bnd
cltd
and
sub
jg
cltd
scas
gs
or
lret
or
dec
fsubrs
jns
xchg
frstor
or
inc
xor
jecxz
fs
adcb
mov
adc
mov
pop
xor
xchg
loopne
push
xchg
sbb
pop
bound
xchg
mov
out
sub
jb
sbbb
sbb
jp
pop
test
mov
sbb
jo
pusha
pop
sbb
dec
pop
sbb
int
inc
orb
jae
adc
push
test
add
movsl
aas
outsb
into
out
xchg
add
and
icebp
inc
mov
clc
fimull
aam
sti
push
sti
int
dec
mov
jge
mov
and
shr
or
jl
xchg
jecxz
pop
pop
push
push
sub
mov
ljmp
mov
cmpsb
pop
sahf
mov
clc
sub
insl
in
add
or
mov
bound
psubq
aas
sbb
or
test
ret
xor
in
fcomps
jb
pushf
pop
test
shl
sub
dec
pop
lahf
dec
mov
icebp
inc
xchg
aas
das
shll
fsub
dec
pop
push
jecxz
lahf
mov
push
jl
dec
or
pop
aas
dec
rcr
xor
sbb
lea
mov
loopne
andb
sub
stos
fdivl
pushf
jp
into
dec
stc
filds
dec
sarb
cld
clc
inc
sub
push
adc
xorl
rclb
sahf
add
sub
push
xchg
repz
lret
push
aaa
int
mov
cmp
lahf
mov
xor
sbb
inc
or
pop
lahf
stos
mov
stc
dec
insb
cmp
rclb
inc
fbstp
out
pushf
daa
or
fwait
inc
adc
pop
jnp
xor
or
mov
push
or
int
mov
adc
jl
fs
orl
push
mov
je
cmpsl
aad
popa
jbe
lods
popa
cmp
stos
fidivrl
int
push
aam
cld
and
xchg
ret
pop
cmpsl
mov
xchg
sbb
push
or
inc
add
out
test
out
xchg
clts
inc
add
jb
adc
ja
mov
je
clc
lea
fisttps
sbb
pop
add
gs
mov
jbe
dec
dec
ret
or
mov
stos
or
add
inc
repz
imul
sub
or
into
popf
cmc
jge
cwtl
bound
add
cmpsl
fists
add
lods
aad
mov
pop
dec
call
push
push
push
mov
pop
scas
int
jecxz
ljmp
xor
in
pop
sub
add
fsubp
icebp
daa
clc
inc
xchg
cmp
mov
ds
cs
add
aas
cmp
add
insl
cld
inc
arpl
sub
out
jge
dec
sub
dec
stos
lds
out
rorb
push
or
insl
pop
repnz
out
ja
sub
xor
outsb
and
jp
xor
sti
lea
inc
mov
and
mov
push
sbb
int3
mov
outsb
xchg
pop
mov
outsl
mov
sub
mov
cmp
data16
test
and
cmc
push
ss
xchg
mov
cmp
stc
cmp
test
out
dec
cmp
add
iret
jae
movsl
gs
out
push
clc
call
push
in
mov
leave
rcrl
repz
jmp
das
pop
sbb
pop
testl
jbe
lods
mov
push
lock
and
cmp
cli
test
xor
xlat
jne
cmpb
call
adc
mov
inc
cld
jl
jp
daa
sub
sub
cmpsb
aaa
ret
mov
notl
daa
cmpsl
ljmp
pushl
das
inc
jl
jne
aad
cmp
xchg
filds
aas
icebp
mov
cmp
cmp
push
pushf
nop
sub
and
sub
int3
mov
cmpsb
jno
inc
mov
adc
jecxz
and
xor
lds
dec
add
pop
popf
xchg
sti
cmc
inc
lea
daa
int3
call
and
pop
cmpsb
push
xor
pop
jmp
jnp
sub
repz
mov
push
outsl
gs
xor
jmp
pop
dec
in
pop
sub
mov
xchg
ss
cmp
xchg
adc
dec
adc
xchg
jecxz
lcall
xchg
jmp
xor
lret
cmp
inc
dec
test
rorl
fsts
lods
add
xchg
mov
push
xchg
mov
sbb
into
mov
mov
inc
jnp
push
add
lcall
xchg
jl
sbb
or
sub
out
and
cmp
push
mov
dec
insl
loopne
dec
out
mov
cld
adc
xor
into
sub
cmpsb
or
sbb
aad
cli
cmpsb
push
mov
xchg
popf
and
pop
sub
push
xchg
test
stos
and
mov
rep
jp
pushf
fwait
ss
fisttpll
subl
push
mov
cmp
shll
pop
mov
adc
fldcw
mov
push
les
fidivrl
scas
adc
outsl
add
mov
les
jp
fs
sub
pop
or
cld
out
sbb
mov
jbe
and
push
fnstcw
xlat
jo
js
mov
jp
adc
add
and
push
inc
ds
push
sbb
popf
loope
jae,pn
andl
pop
push
repz
cmp
pop
pop
movsb
dec
cmp
movsb
out
in
ds
hlt
lds
daa
adc
sub
test
repnz
ss
push
ja
add
jecxz
les
push
mov
add
jns
or
inc
or
scas
ljmp
pusha
cmc
insb
pop
popa
inc
inc
mov
pop
mov
inc
push
jmp
lahf
jmp
cmpsb
xchg
jns
pop
mov
rcll
inc
mov
pop
adc
stos
push
jl
fcoml
xor
dec
inc
sbb
stc
test
jo
lock
xor
mov
adc
shrl
shll
xor
jae
push
inc
pop
or
inc
ja
push
mov
in
ljmp
mov
test
mov
mov
arpl
pop
push
es
sbb
or
inc
aas
in
shrb
ss
mov
mov
push
test
jg
or
stc
mov
and
sub
sub
sub
cmp
lock
hlt
adc
jb
cli
jb
push
cs
mov
cmpsl
divb
push
jg
sbb
dec
enter
mov
mov
lods
pop
pop
sti
mov
sub
xor
ret
cwtl
mov
fmulp
jne
shll
jmp
int
aas
xlat
inc
jmp
cmp
mov
add
cltd
xor
jg
mov
push
xchg
call
xchg
loop
rcrb
fdivl
jmp
mov
repnz
mov
rcr
xchg
and
scas
mov
cmpsl
dec
in
pop
lods
sbb
lret
jo
je
add
push
pushf
in
out
adc
xlat
arpl
cmpsl
lahf
in
es
inc
fstpl
xchg
aaa
or
clc
aas
cmp
shll
movsb
mov
jae
mov
repz
cmpsl
stos
xor
ja
jbe
push
sbb
add
mov
cli
es
cmove
xor
nop
mov
in
mov
jne
pop
xchg
sbb
dec
pop
test
lcall
cmp
xchg
notl
lcall
jne
popf
test
cmpsb
inc
xor
xorl
mov
loope
push
jo
mov
jo
imul
cmp
out
mov
fs
ret
loopne
mov
shll
jns
push
int3
jae
push
xchg
cld
or
test
adc
int
lea
leave
and
or
fldt
fwait
add
pop
ret
lea
insl
xchg
push
aas
or
mov
mov
test
int
or
push
or
sub
jle
out
mov
dec
in
pop
or
subb
sbb
ds
jbe
xchg
int3
xchg
mov
xor
lret
js
ja
bound
adc
popf
jmp
test
les
dec
mov
pop
imul
arpl
jl
cmc
das
je
sub
jp
fcom
les
lds
cld
cltd
mov
andb
popf
test
and
fstps
mov
int3
dec
jmp
cmpsb
push
mov
cmp
mov
cmp
enter
sti
inc
test
mov
adc
and
fwait
mov
inc
adc
push
movsl
mov
jecxz
mov
inc
mov
fisubrl
xlat
rol
or
pop
hlt
xor
mov
movsb
popa
cs
adc
es
mov
push
mov
bound
cs
data16
dec
mov
jnp
les
jecxz
sbb
daa
insl
test
mov
jo
mov
or
inc
cmp
jnp
jecxz
lock
push
inc
std
or
push
mov
into
cmp
dec
xchg
cmpsb
sbb
xlat
pushf
stos
repz
push
fisttpl
sub
mov
imul
movsl
out
es
dec
xchg
mov
jns
int
aam
mov
inc
call
in
aas
push
xchg
mov
iret
das
popa
shrl
js
scas
gs
xor
cmp
call
jbe
dec
adc
rcll
xor
aas
mov
dec
add
sub
aas
mov
cli
jo
pushf
and
dec
add
aas
sub
jg
imul
clc
push
addr16
cmp
ret
addb
or
and
or
lret
insb
std
xor
test
sub
and
filds
inc
call
inc
cmp
icebp
in
push
pop
popa
ret
mov
mov
add
pop
fnsave
inc
push
inc
jp
mov
iret
mov
out
xor
pusha
sarl
jp
mov
rcrb
ljmp
sub
fcoms
lcall
push
rcrl
cmpsb
and
scas
inc
mov
mov
inc
cmp
ret
sbb
jo,pn
dec
enter
or
pop
cmpsl
popa
aam
xchg
cmc
sbb
arpl
jno
mov
xchg
jae
in
jb
push
sub
ret
ret
pop
ror
xor
pusha
dec
pop
inc
daa
cmpsb
push
mov
xor
aam
push
stc
dec
ret
or
xchg
lcall
xlat
stos
dec
movsb
cmpsl
ja
sub
jb
mov
aad
and
cmp
lret
std
faddl
mov
les
test
mov
xchg
add
sub
push
pushf
mov
dec
repnz
xor
dec
pcmpgtd
cmp
addr16
dec
adc
xchg
inc
fcoml
and
dec
das
push
xlat
inc
pushf
inc
divb
push
int
pop
inc
inc
sub
outsb
mov
jge
xor
lcall
mov
dec
xorl
xor
int3
push
sbb
mov
fstpt
or
into
pop
mov
push
jbe
adc
cmc
into
aas
push
inc
ficomps
andb
stc
fprem
loope
pop
cwtl
inc
adc
dec
lea
lahf
mov
xor
fstps
push
outsb
pop
cld
xchg
or
xlat
sbb
mov
mul
xorl
mov
cmp
sbb
ss
test
sbb
stos
push
shr
and
xchg
ss
jg
mov
xor
push
loop
stc
pop
cmp
adc
mov
mov
das
push
xor
adc
loope
in
in
mov
sti
adc
dec
mov
fisttps
orb
movsl
sbb
pop
add
cmp
lret
insl
pop
imul
bound
in
je
divl
push
and
pop
mov
mov
jp
fwait
in
mov
int3
jo
or
in
mov
and
jmp
xor
into
xchg
sub
push
cwtl
xchg
mov
add
cmp
sbb
out
or
add
add
dec
inc
call
or
sub
push
jl
push
mov
or
in
mov
cmp
sbb
jb
leave
sbb
cltd
fwait
pop
std
scas
dec
stos
lock
mov
and
dec
lret
notl
fsubs
insb
mov
inc
cs
lods
cld
roll
cwtl
jno
outsl
jns
jle
inc
aam
subb
gs
pop
push
test
clc
pusha
mov
pop
push
sbb
sbb
or
cmp
pop
xor
loope
mov
testb
pushf
mov
lret
shl
ror
imul
xor
bound
cltd
xor
lret
xchg
jae
in
fnsave
push
call
dec
adc
cs
xor
and
mov
out
ljmp
and
shll
push
out
mov
inc
jb
inc
stc
add
mov
jae
mov
xor
dec
mov
les
iret
add
ret
and
lods
xchg
jp
in
out
inc
xor
mov
add
or
pushf
mov
test
and
insl
jne
mov
lds
fwait
lret
scas
ret
mov
adc
repz
xchg
ss
scas
cli
imul
pop
pop
outsl
lea
sbb
xorl
jl
push
mov
inc
or
cmp
lods
xor
or
mov
jp
jp
pusha
repz
pop
push
xchg
pushf
cmp
or
notb
fdivr
add
jecxz
stc
push
jecxz
sub
or
pop
inc
dec
shrl
xor
or
pop
mov
pop
subl
addl
inc
sahf
sbb
shlb
arpl
shl
nop
mov
in
int3
xor
data16
clc
dec
imull
pop
jmp
xchg
aaa
lods
jecxz
and
fimuls
xor
ds
and
in
jle
pop
dec
popa
inc
shrl
xchg
push
mov
mov
sahf
pop
test
fwait
dec
js
or
imul
movsb
sahf
adc
loope
jmp
lods
fbstp
sbb
nop
push
xchg
ret
dec
xor
rorb
adc
out
sahf
mov
movsb
aaa
in
push
dec
rclw
imul
xchg
popa
add
rclb
xor
and
pop
jo
andnps
inc
mov
jnp
push
or
cwtl
in
ret
jmp
divl
sub
cmpb
aad
push
push
je
mov
adc
out
loop
addr16
jmp
mov
ja
stos
in
shlb
cli
hlt
popa
or
mov
mov
sbb
dec
rcrl
and
or
mov
dec
lds
dec
add
lds
std
mov
sub
add
shrl
call
outsb
adc
sbb
cmp
pop
andl
sbb
push
pop
jbe
scas
outsb
repnz
mov
loope
clc
and
sub
inc
cltd
cmp
movsb
xchg
sub
inc
or
dec
in
repnz
xchg
mov
pop
inc
insl
pop
jb
out
test
mov
xchg
pop
sbb
sarb
inc
out
cli
sub
jne
pushf
push
jno
mov
lcall
dec
jp
sarl
scas
decl
ds
xor
sub
add
sbb
repz
and
jl
sbb
add
jmp
adc
insl
aad
mov
popa
jnp
and
jg
jmp
or
jnp
popf
mov
lret
inc
arpl
ljmp
mov
xlat
jmp
rcr
sub
in
pop
push
in
push
adc
sarl
test
mov
push
fisttpll
in
pop
ret
insl
lret
dec
daa
sti
lcall
iret
sub
imul
jnp
adc
mov
mov
and
adc
and
hlt
sbb
xor
xor
push
stc
adc
or
or
ret
shll
cld
mov
add
in
push
fwait
scas
cmpsl
xchg
add
xchg
imul
enter
lcall
push
pop
es
mov
adc
or
pop
ret
popa
orb
repnz
sub
xchg
fdivr
roll
xor
adc
mov
inc
and
out
mov
pop
push
mov
outsl
or
in
fimuls
dec
mov
jb
jb
js
dec
inc
fldcw
ss
mov
jo
dec
sahf
mov
push
dec
aam
push
dec
xor
mov
and
jae
fsubs
dec
push
in
fs
xchg
cld
sbb
stos
push
cmp
test
cmp
and
jae
push
jb
add
jle
shr
divl
or
dec
insl
shr
test
push
dec
xchg
fsubrl
sub
rcll
lahf
mov
mov
adc
pop
jnp
push
mov
cli
movsb
shl
sar
sbb
xchg
pcmpeqb
divl
jo
xor
insb
cs
fbld
push
adc
lahf
outsb
scas
popa
pop
outsl
jmp
bound
lea
sub
std
xor
sub
or
xchg
dec
scas
lahf
mov
push
pop
insl
and
outsl
mov
pop
lahf
jns
sub
adc
xor
sub
jmp
adc
hlt
jmp
ds
push
pop
pop
repnz
dec
adc
mov
data16
lods
jg
add
xlat
in
dec
xchg
cmp
pop
adc
mov
pop
sti
lds
inc
aad
ss
xor
xchg
arpl
jnp
add
mov
pop
add
or
outsb
mov
stos
add
cwtl
insl
mov
push
mov
fs
pop
cld
das
addr16
fs
js
jnp
int3
repnz
inc
mov
mov
push
lret
movsb
sbb
ret
lods
in
cmpb
in
and
imul
ficoml
cmp
xor
lret
dec
dec
shlb
hlt
mov
xor
out
and
ljmp
dec
pop
sub
jns
lret
push
jbe
lret
jl
movsl
mov
in
inc
mov
or
ret
pushf
push
and
push
and
pop
lds
mov
push
jmp
bound
mov
js
dec
and
cmpb
aam
shl
leave
mov
jno
fsubrs
mov
loop
mov
xchg
fwait
cmp
sbb
into
popf
adc
adcl
xchg
sbb
mov
jae
jg
jns
sti
arpl
cs
pop
mov
ret
xor
jecxz
mov
xor
push
adc
stos
push
xor
mov
sbb
lahf
pop
rolb
and
out
test
fsub
pop
xchg
repz
xchg
loopne
dec
sub
fcomi
xchg
nop
jle
das
movsw
mov
pop
or
loope
es
icebp
mov
push
cmp
mov
js
fmull
scas
cs
pop
xorl
push
outsb
adcl
xchg
bound
pop
add
es
test
nop
pusha
sbb
enter
lods
pop
nop
sub
mov
jne
jno
int3
mov
mov
adcl
in
xchg
movsb
aam
icebp
aas
pop
in
sbb
mov
sub
xchg
fistpll
bnd
in
pushf
push
stos
ss
ss
test
repz
jo
mov
push
cmpsb
pop
mov
sbb
add
outsl
repnz
ss
xor
inc
dec
mov
mov
xchg
in
jno
orb
ljmp
and
imul
add
xchg
jl
daa
jns
xor
je
dec
repz
andl
aas
jp
xchg
pop
pop
mov
loop
mov
push
mov
cld
stos
mov
loop
fisttpl
int
jbe
daa
or
cwtl
shrb
jae
fidivs
outsb
loop
dec
sbb
insb
inc
lds
push
sarb
mov
cld
xchg
mov
out
fs
popa
mov
daa
and
test
cmp
jle
pop
loopne
jnp
aaa
mov
sbb
std
in
cmpsl
std
fnsave
sbb
mov
dec
hlt
lar
test
arpl
mov
push
mov
bound
inc
cmp
sub
movsl
add
pushf
aam
add
inc
mov
test
fiadds
adc
popf
or
inc
sub
in
and
jnp
shll
mov
sbb
xor
mov
push
fisubs
pop
sub
out
stos
cmc
lahf
xor
or
fcmovnb
movsl
movsb
test
xlat
add
fistpll
mov
loopne
icebp
xor
and
xchg
inc
xchg
in
hlt
mov
xor
and
sbb
cmp
popa
outsl
into
stos
dec
pusha
test
adc
xor
jmp
add
rcll
jo
and
popf
xchg
sub
or
pop
imul
push
push
jbe
popa
imul
jle
insb
call
push
jo,pn
js
shlb
xchg
dec
out
pushf
and
xchg
stc
dec
test
xchg
mov
and
lds
loopne,pn
aam
aas
lret
sbbb
pop
neg
mov
into
adc
lret
and
jns
push
in
xrelease
shl
sbb
stos
adc
mov
pop
imul
and
lret
mov
fdivl
into
dec
pop
pop
mov
or
adc
push
or
popa
daa
call
adc
fwait
repz
push
inc
in
xor
pop
sub
rorb
xchg
sbb
pop
sub
jns
popa
out
ret
pop
push
xor
sbb
sahf
jge
or
and
pop
leave
dec
push
fistl
out
pushf
xor
sub
in
out
lea
and
es
mov
shl
xchg
and
sbb
xchg
fisttps
dec
mov
mov
nop
add
jo
inc
hlt
outsb
in
push
or
cltd
mov
das
popa
aas
xor
sub
std
xlat
or
test
and
ret
mov
cmp
int3
cld
push
ret
lahf
mov
fisubs
cltd
mov
arpl
xchg
add
test
sbb
cmc
ss
test
out
or
into
aaa
pop
lea
shr
decb
jne
xchg
imul
cmc
cmp
lret
pop
les
push
xchg
dec
push
jnp
cli
bound
push
imul
jmp
lahf
xchg
pusha
mov
or
call
lods
push
stos
adc
fidivrs
mov
orl
mov
xor
mov
gs
inc
sub
mov
adcb
xor
arpl
push
arpl
inc
pusha
sub
icebp
stos
push
cmp
fs
xchg
dec
mov
lods
mov
orl
xor
jbe
aad
cmpsl
pop
and
inc
dec
xchg
add
sub
pop
icebp
jg
pop
mulb
enter
cmp
pusha
pop
fadds
negb
dec
popf
push
add
ja
jae
or
dec
out
sub
insl
add
mov
iret
xlat
roll
add
test
mov
popa
dec
cmp
inc
pushf
sub
pop
mov
daa
cwtl
rorl
jbe
aad
xor
sub
pop
xchg
xchg
les
and
repz
jl
inc
cmp
hlt
lock
mov
outsl
mov
test
divb
mov
ror
add
shrb
xchg
sbb
in
sub
mov
add
mov
push
cwtl
das
aad
into
cmp
mov
push
scas
push
adc
ss
push
faddp
cwtl
mov
pushf
mov
into
cmp
sbb
scas
jge
shr
clc
out
pop
std
sahf
pushl
xor
pushf
popf
xorl
mov
cmp
mov
mul
sbb
pop
out
daa
dec
jne
or
jnp
and
or
adc
mov
scas
ds
push
loopne
pop
sbb
xor
sub
and
leave
call
mov
mov
jle
pop
dec
cwtl
cmpsl
mov
loopne
sub
cmc
mov
jae
push
mov
push
out
mov
pop
pop
xor
iret
lea
js
or
stos
loope
mov
out
je
mov
ja
xchg
pop
loopne
push
mov
bound
jge
pop
andb
imul
and
push
push
cltd
mov
pop
std
and
xor
pop
shl
cmp
lcall
in
loopne
out
jno
xor
psadbw
add
push
popa
mov
mov
mov
sbb
add
iret
push
rcrb
or
into
fdivs
clc
lahf
sbb
jo
inc
out
mov
inc
ret
xor
fsubrl
fcoms
lret
mov
push
push
pop
push
psubusw
or
dec
sbb
jle
jnp
cmc
and
pop
or
repnz
es
push
cmp
jmp
add
in
jle
dec
cmpsl
out
daa
test
pop
push
shlb
cld
jl
insb
xchg
addr16
dec
mov
and
mov
sub
insl
int
inc
jae
mov
sar
std
push
pop
std
fstps
repz
push
ficompl
aaa
stos
cmp
das
jg
xor
lds
mov
dec
gs
test
or
xlat
fldcw
cmp
out
stc
pop
movsl
push
mov
lock
pop
data16
dec
xor
mov
frstor
xchg
or
push
add
jb
inc
jb
mov
dec
mov
dec
mov
xchg
inc
add
fwait
mov
inc
and
push
cwtl
xchg
enter
jge
pop
inc
inc
shrl
jae
in
cmp
leave
loop
das
jne
ja
xor
push
pop
das
jne
push
pop
xchg
jg
mov
mov
movsl
cmp
cmpsl
nop
imul
cmc
xchg
jae
subb
pop
daa
jmp
or
push
cli
dec
testl
loopne
push
cmc
inc
popa
imul
out
jnp
jne
in
xlat
pop
add
shl
xor
test
pop
cs
les
shrb
jecxz
and
pop
sbb
mov
add
sarb
sub
outsb
cmp
insb
sbbl
sbb
int3
cmp
and
inc
add
cmp
jo
mov
cltd
cltd
adc
sbb
jp
icebp
adc
inc
jae
insl
mov
mov
jno
jp
xor
push
or
int
mov
das
pop
inc
stos
mov
jnp
jmp
jne
mov
inc
jne
imul
div
scas
jge
xchg
mov
nop
add
sahf
jo
cld
and
je
push
xor
lret
cs
jns
fwait
out
dec
in
stos
ss
lret
sbb
add
xbegin
mov
sub
xchg
rolb
repnz
adc
es
mov
gs
pop
scas
fidivs
xor
cmc
in
movsb
loop
lcall
jg
jl
add
sbb
sbb
repz
in
cmc
les
dec
bound
mov
int
out
lock
and
sbb
mov
mov
nop
fs
push
xor
ret
sub
mov
xor
sbb
call
xchg
push
inc
cmpsl
loop
jecxz
call
in
out
test
shlb
lock
adc
pop
cwtl
data16
xor
bound
sub
inc
sub
pop
lds
shll
sbb
mov
out
outsb
enter
cmpsl
mov
cltd
lret
xlat
and
adc
push
mov
dec
and
cmp
pop
or
sub
mov
sti
add
fsubl
jl
scas
sbb
data16
imul
push
xor
aaa
aas
dec
xchg
adc
pcmpgtd
sbb
adc
jecxz
xorl
mov
push
movsb
leave
or
testl
mov
inc
lret
ja
cmp
and
js
or
jne
sti
jo
dec
fildl
sub
mov
mov
cmp
fnsetpm(287
or
in
cmpl
fs
mov
gs
mov
jne
or
mov
mov
pop
jl
mov
dec
mov
and
fistl
dec
aam
lahf
fimuls
push
sbb
push
daa
cmpsb
sub
sub
mov
mov
dec
push
adcl
stc
ss
scas
dec
mov
inc
jmp
out
shl
les
ds
jmp
push
dec
inc
push
dec
xchg
insb
inc
adc
sbb
aam
addr16
lcall
int
mov
cmp
lret
std
sbb
inc
mov
pushf
mov
add
inc
or
push
mov
or
sbb
add
mov
in
mov
ljmp
int3
lock
test
mov
jbe
js
jbe
lods
or
out
je
and
lods
mov
adcl
es
adc
mov
div
or
pop
shl
xor
testb
inc
out
xor
and
push
mov
xchg
pop
fiaddl
jp
fstl
and
mov
orb
mov
sub
push
push
pop
dec
dec
pop
fs
fs
aas
xchg
push
push
mov
test
sbb
stos
mov
jnp
xchg
inc
idivl
enter
popa
filds
inc
fcomi
ffreep
lret
jo
sbb
jno
mov
sub
enter
sbb
mov
jmp
aaa
sub
mov
fisttpll
movsl
repz
gs
adc
out
jl
cld
shlb
mov
imul
cmp
lcall
inc
sbb
pop
or
xchg
add
loop
into
icebp
pop
or
adc
xchg
data16
xlat
fidivl
bound
push
arpl
sti
inc
gs
in
and
mov
stos
mov
mov
int3
and
or
mov
fldt
xchg
cmp
sub
stos
les
into
add
sub
popa
xchg
stos
or
test
mov
sbb
and
pop
or
lret
cwtl
pushf
loop
xor
inc
dec
sub
xchg
sbb
push
push
push
iret
cmpsb
pop
dec
fdivl
lea
popf
out
jle
pop
adc
xor
inc
pop
out
fidivs
mov
insl
int
aad
stc
fwait
jle
std
mov
mov
ss
fnsave
insl
out
lods
push
pop
leave
flds
cwtl
push
in
pop
jecxz
cmpsl
scas
jnp
mov
dec
loop
cmpb
xor
adc
cmp
test
or
je
or
in
mov
dec
mov
sub
fistpll
sub
ja
push
mov
scas
mov
filds
notl
jae
stos
leave
mov
pop
mov
sbbl
mov
in
fninit
dec
scas
jmp
push
push
hlt
xor
ja
inc
scas
lds
popa
cltd
cld
push
cltd
add
or
loopne
pop
push
jmp
std
dec
adcb
out
and
mov
xchg
dec
dec
and
pushf
ja
xor
sahf
imull
or
ss
or
jmp
mov
test
int3
mov
cld
push
imul
or
pop
fisubl
xchg
push
outsb
fldpi
and
std
push
mov
mov
dec
ret
and
jo
test
adc
sub
pusha
mov
dec
jg
test
imul
push
das
stos
call
pop
lods
jae
cld
dec
jb
mov
ds
sbb
jno
js
xor
fldt
int
imul
fists
sarb
loope
subl
or
cmp
and
sub
dec
mov
add
je
fs
leave
adc
cld
inc
inc
push
pop
inc
fstpt
pop
test
lcall
ss
and
mov
xor
push
into
inc
jns
push
lret
sahf
rcrl
fwait
inc
repnz
push
jmp
inc
adc
fstpt
nop
popf
jo
xor
adc
popa
and
xchg
mov
lea
mov
sar
inc
pushf
mov
push
cmp
jecxz
enter
rcr
xchg
cmp
out
jg
leave
outsb
cmpsl
cmp
popf
popa
jecxz
aam
xor
int
pop
cmp
cs
movsb
pop
mov
mov
inc
push
push
dec
push
add
add
push
in
and
call
dec
inc
add
add
mov
jns
pop
popf
cmpsl
shll
std
xchg
aas
xor
or
fwait
and
xor
dec
mov
jno
outsl
dec
jo
and
push
push
xchg
jecxz
cmc
imulb
cmpsb
and
jmp
ljmp
pop
dec
mov
lds
cmp
pop
dec
adc
out
cmpsl
inc
inc
data16
and
js
sbb
xlat
in
repz
cmpsb
fsts
pop
jno
out
mov
andl
es
push
sti
mov
stc
adc
inc
pop
jo
into
outsl
and
sub
es
cmp
jge
xchg
sbb
or
inc
fsts
push
scas
jae
inc
xlat
adc
push
ja
cltd
scas
add
stc
pop
pusha
sub
pop
jp
inc
cmc
sahf
dec
adc
sbb
stos
outsb
subl
pop
fcmovne
mov
add
mov
mov
inc
sahf
jae
test
pop
xchg
xchg
mov
jecxz
out
orl
ret
mulb
out
aas
test
xchg
sbb
sbb
pop
loop
inc
jp
pusha
lods
xchg
fwait
shrl
push
in
dec
ds
mov
pushf
call
das
arpl
sub
in
enter
dec
movsl
ja
xchg
outsb
std
popa
shlb
ljmp
xchg
and
mov
pop
push
pop
xchg
movsb
dec
add
jns
pop
div
push
lahf
fcomip
das
leave
add
fmull
xlat
or
xor
loop
jecxz
jg
jge
out
push
pushf
dec
add
mov
stos
dec
mov
jp
xchg
ficoms
jge
data16
push
xor
mov
lea
arpl
lret
sbb
xchg
and
fwait
jbe
dec
xchg
dec
ret
daa
popa
sbb
dec
mov
std
incl
movsl
pusha
mov
sbb
cmpl
lock
pusha
lea
cmp
jle
sbb
adc
adc
push
shrl
jmp
jb
pop
push
divb
movsb
xor
ficomps
mov
jle
inc
and
mov
sbb
in
dec
mov
pushf
lods
mov
jo
push
xor
sti
and
adc
cmp
or
cli
cmp
adc
adc
xor
or
shlb
popf
inc
lret
test
das
rcll
adc
push
and
int3
shr
repz
cmp
inc
out
push
imul
push
jl
stos
adc
fsubs
cmp
push
cmp
sbb
inc
movsl
lock
xor
sbbb
sub
call
hlt
jle
push
mov
iret
in
add
in
pop
filds
ja
daa
xchg
or
and
test
ds
ret
mov
in
pushl
cmp
arpl
fisubl
jo
sti
xor
gs
xor
add
rorl
inc
sti
push
xchg
add
pop
out
idivb
mov
add
pop
iret
and
mov
into
mov
lret
and
aas
xor
sarb
lock
add
jle
mov
push
mov
lahf
adc
sti
mov
movsl
cmp
test
mov
scas
dec
push
or
push
or
stc
mov
aam
mov
sub
and
and
stc
xor
add
jge
mov
lods
test
inc
and
adc
lock
and
dec
mov
cmp
jp
mov
pop
test
mov
jne
mov
xchg
and
iret
adc
adc
std
imul
cmpsl
xor
movsb
rorl
xchg
cmc
mov
aaa
xchg
cltd
outsl
mov
xor
cld
fwait
xchg
sbb
jns
stos
jl
jp
aam
ljmp
jmp
dec
inc
mov
xlat
sbb
mov
jae
out
push
push
xor
cmpl
jecxz
jle
subl
push
pusha
inc
imul
ds
popa
gs
push
lret
dec
clc
stos
leave
les
out
lret
jne
out
adcl
jne
insb
cs
cmpsb
fistpl
loopne
in
xchg
xor
fbld
aas
cmpsb
xchg
mov
and
push
push
xor
cmp
loope
and
jmp
jno
stos
loope
outsl
jl
cmp
dec
add
loope
dec
in
jnp
sub
xchg
mov
cmc
mov
outsb
lcall
cmp
jnp
jne
das
out
xchg
mov
push
mov
push
sbb
imul
adc
and
loopne
mov
loopne
ja
jl
ret
repz
cmpsl
jmp
jbe
jnp
dec
cmp
push
int
loope
test
cmp
push
dec
orb
dec
and
bound
outsb
daa
xor
sub
fs
sbb
out
imul
daa
gs
mov
xor
mov
pop
popa
call
cmpsb
push
sbb
movsl
lods
stos
cmp
sub
dec
cmc
fildll
mov
dec
lock
mov
inc
xor
lea
cltd
clc
and
mov
pop
cmpsb
xor
and
test
mov
sub
movsl
mov
or
dec
int
aad
sbb
xchg
in
jb
das
ror
shlb
xchg
shrl
sbb
jne
add
add
ret
sti
fldcw
mov
shll
xchg
inc
loope
push
xchg
mov
dec
stos
pop
je
inc
pop
or
outsl
add
jle
leave
lahf
jb
in
dec
incb
cli
out
mov
adc
enter
dec
pop
aaa
cltd
fcoms
sbb
sbb
jg
icebp
cmp
ds
test
cmpsl
pop
push
add
cld
pusha
sbb
enter
stos
and
mov
int3
std
or
cmp
push
orl
call
and
xchg
dec
add
enter
scas
es
xchg
adc
sub
jae
cltd
xlat
enter
lods
push
adc
out
or
idivl
pop
xor
sub
inc
inc
sub
dec
sub
inc
mov
nop
subb
pop
js
and
pop
out
jle
and
or
cwtl
adc
imulb
lock
lods
fwait
iret
sub
sbb
aam
lock
add
pop
stos
sbb
add
repnz
loopne
jle
push
mov
lcall
sti
ret
mov
dec
sub
jb
sbb
jo
adc
mov
cmpb
sbb
gs
lret
in
and
insb
jge
aam
xor
loop
out
mov
ret
or
fidivrl
lock
pop
push
push
aam
jns
xchg
icebp
xchg
adcb
loopne
ret
cld
outsl
shrl
iret
jb
test
fidivrl
in
inc
fsave
insb
xchg
bound
adc
outsb
mov
lret
push
and
aaa
xchg
push
inc
xchg
mov
fcomi
dec
jle
addb
adc
push
mov
enter
mov
mov
aad
or
xchg
cwtl
fidivs
int
in
frstor
push
inc
pop
ret
mov
clc
add
aam
ljmp
or
mov
gs
mov
jnp
mov
lock
jge
pop
insb
ljmp
or
xor
test
inc
sbb
and
cli
fxam
testb
sub
fisubrl
mov
inc
dec
mov
cmc
addr16
fisubl
int
fdivrl
int
jbe
add
ficoml
add
xchg
xor
xor
imul
std
mov
sub
in
jg
cvtdq2ps
push
scas
pop
xchg
cs
scas
cmp
incb
hlt
pushf
jae
dec
daa
cmp
and
pop
push
xchg
aad
imul
push
imul
sub
jno
pop
mov
dec
xchg
faddl
jns
hlt
xor
sub
adc
pop
fwait
xor
push
xchg
sub
adc
mov
fwait
mov
iret
pop
xor
fldt
cmp
dec
mov
sbb
push
daa
xchg
xchg
test
cs
adc
xchg
pop
in
jno
div
push
scas
hlt
std
pop
dec
les
mov
mov
mov
imul
adc
add
loope
sbb
popf
inc
add
push
aas
call
mov
pop
pop
sbb
shrb
xchg
sbb
mov
fiadds
jecxz
pop
mov
push
ja
add
sbb
cmc
xorl
popf
enter
lea
pop
pop
pop
and
jae
jne
aam
out
sub
pop
cmpsb
cmpsl
jae
xchg
xchg
xchg
movsb
std
js
popf
lock
jbe
mov
push
nop
mov
fs
sbb
sbb
fwait
inc
and
subl
inc
jle
adc
push
movsl
ret
popa
mulb
adc
inc
add
clc
sbb
push
xchg
arpl
out
loope
int3
fidivrs
inc
and
sahf
fisttpll
les
add
rclb
pusha
in
test
mov
ret
xor
adc
pop
push
mov
lea
cmp
or
xor
mov
fdivr
pop
pop
mov
jnp
dec
xor
cs
xchg
sub
movsb
pop
jae
pop
push
loop
sbb
pop
inc
fstpl
insl
aas
xor
pop
dec
sub
add
or
or
mov
scas
dec
push
push
imul
sub
lea
sbb
cs
add
lods
xor
sahf
std
xor
mov
scas
fadds
daa
adc
xor
add
nop
popa
pop
iret
xchg
inc
jmp
inc
aaa
scas
or
lods
loop
xor
notb
xor
lods
adc
test
ficomps
movsb
mov
es
mov
stos
xchg
xlat
sub
inc
cmp
outsl
mov
mov
icebp
xchg
jmp
jp
inc
pop
pop
pushf
and
rcrb
aaa
add
mov
push
shlb
pop
int3
mov
shrb
adc
sub
pop
jno
adcb
lods
lret
inc
stos
mov
ret
adc
pushf
repnz
daa
cltd
push
pop
daa
pop
jno
mov
push
mov
add
lret
insb
jmp
cmpxchg
pop
sub
sbb
aaa
and
jnp
xchg
add
imul
out
push
std
mov
fwait
adc
lret
dec
push
pop
mov
fists
shll
mov
mov
sbb
aaa
sbb
in
adc
insl
sti
aaa
xor
adc
add
xchg
jbe
adc
loope
mov
out
sbb
sub
imul
jp
sub
and
jnp
shlb
xchg
int3
decb
or
test
pop
dec
popf
dec
mov
sbb
add
sbb
in
les
mov
ss
pop
cs
push
int
lret
jle
pop
out
mov
mov
lret
cmp
add
cmp
pop
out
leave
fsts
popf
mov
jge
xchg
cmp
aaa
pop
and
and
mov
mov
fiadds
jae
pop
xchg
sbb
fldl
dec
xchg
xlat
test
push
fiadds
in
lahf
nop
icebp
cmp
xor
and
xchg
jmp
fdivrl
adc
sahf
inc
mov
add
inc
jecxz
xor
cwtl
push
pop
push
rolb
out
xchg
nop
or
aad
jg
cmp
xchg
dec
pop
mov
jnp
repz
push
push
xchg
out
push
mov
and
inc
cmp
xchg
mov
push
mov
mov
cmpsl
negl
daa
imul
and
stc
repz
outsb
nop
pop
insb
jno
cmp
add
into
inc
fisubl
gs
mov
outsb
jecxz
fsts
fwait
mov
notl
lahf
aad
mov
cltd
or
in
test
xor
idivl
ss
insl
jle
test
test
mov
movsb
push
adc
mov
movsb
in
jecxz
mov
int3
pop
and
in
mov
in
lods
outsb
pushf
sub
sub
and
push
dec
pop
xor
jl
es
jo
cmp
xchg
or
ds
jno
xchg
mov
push
push
fs
ja
push
add
dec
mov
push
mov
dec
hlt
cmp
loop
sahf
lock
loope
pop
add
repnz
lods
push
iret
sub
xor
dec
xchg
andb
insl
flds
rolb
je
add
xor
sub
sti
xor
jbe
sti
adc
jb
mov
int
mov
das
inc
testl
add
add
repnz
bound
out
shlb
inc
jb
imul
mov
pop
jns
dec
and
clc
clc
and
sbb
sub
popf
fstpt
push
mov
leave
imul
loop
cs
and
or
sbb
shl
add
xorb
out
mov
pop
mov
pop
add
sti
cli
dec
xchg
pop
mov
pop
push
aad
flds
insb
jge
ret
xchg
mov
push
inc
movsl
pop
shll
cs
mov
imul
jle
lcall
pop
adc
fcmovb
xchg
ret
test
jmp
loop
popa
fiaddl
or
fistl
dec
xchg
adc
mov
ja
stos
cs
jb
leave
dec
mov
cmp
fs
dec
inc
cmp
xchg
dec
jmp
bound
or
dec
popf
jl
dec
cmc
inc
inc
aas
push
inc
rcll
push
xchg
mov
out
pop
mov
imul
adc
lret
cmovb
add
fwait
push
and
xor
test
push
fisubs
test
mov
ret
jb
jg
aaa
jb
in
je
and
iret
add
push
insl
mov
aaa
out
js
adc
iret
sti
pop
or
xor
arpl
int3
sub
jmp
push
sahf
sub
push
leave
into
or
out
push
mov
or
mov
jbe
adc
mov
mul
adc
cmc
rcrl
xorb
sahf
fndisi(8087
and
jecxz
and
dec
pop
aas
dec
repz
jbe
or
pop
mov
jecxz
inc
les
js
loopne
pop
mov
push
xchg
fwait
movsb
push
pushf
mov
fisttps
lret
addb
mov
mov
adc
in
ss
addr16
scas
ja
inc
cld
dec
push
lahf
cltd
xchg
jb
sahf
pop
in
dec
ja
sbb
rcrb
sub
imul
loope
pop
fmuls
add
in
outsl
xchg
or
xor
push
sbb
lock
and
mov
shl
enter
sub
clc
int3
filds
xchg
cmpsb
pop
sub
icebp
into
pop
push
xor
shlb
fisttpll
cmp
lods
xchg
sbb
dec
sbb
dec
inc
loope
lcall
fstpt
enter
pop
sub
cmp
dec
xor
mov
jle
fwait
cli
sti
mov
xor
dec
mov
mov
in
iret
add
inc
xorb
dec
and
js
sub
iret
repnz
mov
in
xlat
lods
dec
cmpl
lret
xchg
or
arpl
inc
pushf
push
cmp
inc
int
ss
out
out
lahf
adc
lds
cld
mov
in
test
or
ss
xchg
cmc
mov
pop
xor
repz
mov
inc
fisubrs
sti
movb
es
sub
push
fsubl
movsb
sbb
adc
inc
jb
sub
sahf
lock
int
movsb
shll
add
sbb
push
ljmp
stos
mov
jge
inc
jo
cmp
xchg
lahf
call
gs
sahf
fst
andl
cmp
xchg
push
sahf
push
fmull
lret
jmp
inc
push
in
jo
add
sub
out
xchg
mov
into
int3
lds
push
mov
pop
jne
lret
test
es
mov
xor
pushf
lahf
xchg
dec
push
addr16
adc
mov
icebp
into
ljmp
lret
lea
xor
sbb
or
sub
lahf
adc
les
loope
sbb
xor
adc
fcmovu
sbb
imul
sub
xor
cmp
int3
mov
mov
lret
into
mov
sbb
daa
xor
pushf
loope
sbb
add
mov
jno
testb
daa
jecxz
xchg
adc
scas
sahf
incl
dec
jl
in
lahf
pusha
sar
mov
xchg
push
sbb
bound
cmp
fs
adcb
mulb
mov
iret
addb
fldcw
sub
pop
jg
mov
das
pusha
iret
ljmp
dec
shrl
pop
out
in
xor
jecxz
push
or
test
dec
push
jns
mov
jmp
inc
add
xor
mov
push
cmp
xchg
mov
ficoml
adc
and
in
addr16
addb
push
loope
or
mov
mov
xchg
ret
imul
fsts
xchg
mov
out
divb
mull
ja
nop
lret
dec
subb
mov
sbb
mov
leave
imul
fldenv
jmp
fcomps
fstps
sub
xchg
sub
insl
cmp
adc
inc
imul
call
mov
and
mov
xor
jge
sbb
sub
pop
mov
and
aad
les
sub
cltd
lret
aas
add
add
outsb
sbb
mov
in
jp
out
out
pop
lds
push
cli
dec
inc
addr16
add
data16
ja
inc
dec
hlt
test
aaa
pop
leave
lods
fwait
loopne
cmpsl
inc
cli
pop
pushf
ret
mov
pop
lret
mov
popf
mov
cmp
mov
lods
sub
sub
loop
repz
das
dec
xor
popf
adc
in
aam
es
pusha
push
mov
sbb
dec
bound
pop
xor
das
inc
mov
xor
mov
push
pushf
jmp
mov
lcall
pusha
outsl
pusha
ja
jge,pt
lret
lock
repz
lods
ja
adc
adc
imul
fimuls
test
pop
fadd
clc
or
add
inc
inc
stc
add
xchg
test
xchg
addb
xchg
ret
dec
adc
mov
adc
lock
push
nop
out
mov
jns
mov
rcrb
in
xchg
inc
xchg
test
dec
call
xor
fnstenv
fwait
mov
insb
insl
stos
jg
pop
mov
mov
and
es
dec
mov
stos
data16
pop
adc
mov
push
push
loopne
mull
cmp
mov
jo
add
popa
mov
lods
add
sbb
dec
out
mov
rorl
add
mov
mov
xchg
jge
sarl
inc
aas
mov
ficompl
mov
aad
pop
mov
cs
das
xor
aam
mov
loopne
jp
call
mov
leave
sbbb
mov
cmpsl
cli
xor
jp
sub
ror
out
fwait
pop
out
push
pop
jmp
imul
nop
mov
fisttpl
in
push
and
pop
sub
fistps
xchg
adc
mov
push
push
adc
push
gs
leave
stos
adc
mov
orb
sbb
mov
mov
xchg
cld
sbb
cmp
pop
outsb
out
xor
sub
popf
sbb
mov
and
lcall
jl
mov
aaa
in
mov
mov
repnz
and
fbstp
aaa
adc
ficoms
xlat
cmp
mov
hlt
dec
loop
mov
stos
and
jo
cmp
push
push
fsubr
in
fists
add
stos
push
rorb
jbe
lods
mov
and
punpckhdq
movsb
cmp
call
xor
fs
pop
clc
hlt
cmp
dec
js
pop
add
orb
xchg
push
xchg
push
imul
mov
dec
or
hlt
aad
dec
pop
lds
notb
mov
pop
rcll
xchg
test
add
scas
lret
sub
mov
xchg
mov
imul
lods
push
setne
adc
sbbb
out
xor
call
shrl
popa
jo
lcall
hlt
jae
daa
subl
pop
out
fisttpll
icebp
sti
dec
js
cmp
xlat
mov
xor
push
cmpsb
cmp
ja
mov
movsb
add
lock
lahf
in
adc
icebp
sbb
aas
orb
lea
jae
testb
clc
and
and
jae
add
xchg
push
mov
or
pop
sti
enter
inc
mov
xchg
mov
fmull
pop
jno
sbb
mov
int3
sbb
lahf
popf
sub
pop
sbb
cli
das
rcll
lahf
mov
sub
mov
stos
ret
ss
and
shll
scas
repnz
add
mov
fdivrs
mov
enter
in
mov
mov
and
push
push
mov
inc
cwtl
jno
lahf
mov
or
inc
stos
sbb
pop
pop
cmp
push
fs
push
repnz
push
mov
xlat
mov
dec
int3
imul
or
ficoms
adc
shll
das
cmp
adc
cld
push
sub
rorl
cld
add
and
sbb
pop
roll
or
scas
or
cmpsb
jne
testb
xchg
sub
mov
adc
sarl
pusha
adc
inc
ljmp
pop
mov
push
das
mov
movsl
cmpsb
push
jle
and
sub
mov
mov
mov
ficoml
sub
fnstsw
adc
test
sar
push
jle
xlat
inc
push
xchg
dec
cmp
rorl
movsb
dec
fwait
pop
add
jns
les
fldl
or
inc
das
mov
pop
dec
icebp
xchg
aam
adc
mov
lods
cmp
mov
xchg
fs
iret
dec
daa
pop
in
fcmovnbe
ja
and
repz
into
addb
xchg
and
rol
dec
lea
repnz
out
add
cmpsb
xor
and
rolb
imul
cltd
repnz
gs
icebp
cmp
stos
jns
add
arpl
inc
loop
sahf
pushf
mov
cmp
sub
adc
ss
dec
sub
pop
sbb
stos
pop
scas
jl
or
cmp
pushf
iret
xchg
repnz
adc
xor
dec
push
jge
jns
cltd
cmc
pop
fidivs
shrb
adc
sti
sub
negb
xchg
dec
xchg
mov
mov
inc
adcb
leave
icebp
pusha
cmpsl
sub
push
int3
mov
cli
in
mov
movsl
js
push
and
in
cmpl
sbb
int3
lods
inc
in
repnz
jnp
sub
lds
push
lea
push
sbb
andb
xchg
sbb
xchg
das
cmpl
into
repz
xchg
or
pop
mov
push
enter
std
arpl
cmp
mov
sub
push
iret
xchg
sbb
xchg
leave
imul
stos
push
mov
dec
adc
push
iret
pop
sub
sub
imul
out
pop
cmpsb
inc
cmp
and
pop
sar
pop
xor
dec
data16
iret
inc
fwait
das
andb
sbb
subl
aaa
repz
and
pushf
shlb
adc
pop
pop
jnp
aam
ljmp
lret
pop
or
fwait
sbb
rcrb
into
jae
sub
pushf
ljmp
sbb
jne
pop
dec
or
lock
mov
call
je
dec
addr16
push
adc
cmpsl
mov
into
bound
add
cli
add
dec
xchg
rcrl
pop
test
push
movsb
stos
loope
xchg
and
sub
push
pop
fstps
les
cmp
push
xchg
ja
bound
adc
leave
pop
cmpsb
rorl
mov
xlat
mov
jmp
pop
mov
lods
pop
adc
loop
out
movsb
int
jle
fsubrs
adc
js
outsl
xchg
loop
shrb
push
nop
fidivrs
pop
pop
cmp
cmp
leave
adc
add
jb
gs
lret
fsts
cmp
sub
stc
xor
push
push
sbb
pop
jb
mov
mov
sub
int
mov
mov
sbb
xchg
jns
ljmp
outsb
pop
inc
gs
lea
cmp
inc
pop
sbbl
movsb
and
call
test
mov
add
fisttpl
sbb
hlt
ret
push
loop
inc
cmpb
pop
inc
scas
lea
rcr
xchg
into
repz
mov
rcr
mov
xchg
shlb
jb
mov
sbb
cwtl
arpl
push
jecxz
add
push
lea
js
xchg
andnps
adc
outsb
xchg
push
bound
mov
mov
xchg
das
cmp
xor
test
inc
wrmsr
mov
cmc
imul
xor
subb
xchg
scas
mov
cmpsl
lods
insb
xchg
cwtl
adc
scas
jle
sub
adc
adc
std
popa
enter
fwait
push
push
mov
pop
aaa
add
int3
in
fcom
push
hlt
sbb
pop
or
rol
cmp
and
inc
and
mov
mov
pop
cmp
cmp
mov
gs
mov
cld
aas
ljmp
loope
lahf
dec
rclb
xor
sub
hlt
jo
cmp
pop
mov
inc
sti
inc
int
mov
sub
arpl
out
mov
imul
out
lock
ret
fmul
adc
adc
in
sbb
mov
mov
adc
pop
pop
mov
in
bound
mov
jno
dec
out
inc
mov
lea
push
push
in
add
adc
jp
das
dec
adc
notb
in
imul
aaa
xchg
adc
jmp
in
repz
fistl
out
in
loop
push
daa
pop
xor
jg
ja
fidivrl
fwait
sub
addb
jbe
scas
imul
fdivrs
push
pop
mov
aam
int
push
push
mov
jge
dec
imul
loopne
mov
xor
push
stc
cmp
imul
jle
in
adc
or
dec
ffree
insl
sub
fistpl
arpl
mov
or
add
and
xor
sbb
ffree
fldt
outsl
jg
insb
sub
sub
and
psllq
jne
add
pop
adc
mov
popa
sarl
insb
pop
mov
in
xor
mov
mov
js
hlt
jmp
frstor
hlt
es
cmp
and
and
mull
je
mov
loopne
pop
lods
or
and
stos
inc
sbbl
mov
fwait
cmp
or
repz
cmp
xor
in
adc
adc
push
lcall
out
pop
cld
adc
ret
loop
adc
jg
std
mov
xlat
mov
sti
fsubs
mov
mov
ret
cmpsl
enter
fdivr
pusha
ds
aaa
out
and
or
test
cmc
push
jmp
mov
fucomip
or
xchg
test
push
pop
pop
ffree
jno
sbb
sahf
ret
sbb
inc
jmp
add
jno
mov
fcoms
mov
lcall
shll
int
test
sbb
mov
pushf
mov
or
or
dec
xchg
imul
add
std
mov
je
jecxz
aaa
movsl
pop
inc
rorb
inc
cmp
or
adc
and
adc
sbb
xor
jmp
and
fidivs
inc
mov
jge
push
adc
lock
add
jp
pushf
mov
inc
xchg
mov
xchg
sub
lods
jo
pushf
push
in
and
pop
out
sbb
sub
out
add
push
outsb
dec
jne
or
cmp
cmp
xchg
mov
mov
jo
icebp
jecxz
out
pop
dec
rorb
sub
int3
std
test
cld
fidivl
xor
nop
adc
lret
popf
sar
cwtl
xchg
insb
or
sbb
inc
test
inc
sahf
inc
dec
fimuls
pushf
inc
andb
cwtl
mov
pushf
xorb
ficoml
fimull
jg
jle
hlt
dec
loopne
out
cmpsl
inc
cmpl
test
or
mov
add
mov
fdivr
aas
repnz
add
push
push
popf
xor
stos
pop
pop
push
sub
mov
clc
pop
cmpsb
sbb
scas
gs
inc
jle
test
in
sbb
mov
mov
in
push
mov
cmpsb
jae
sub
cmp
xor
adc
ja
test
jbe
push
cmp
scas
xor
rcl
shll
in
cmpsb
test
incb
ret
fptan
cmp
pop
fwait
pop
dec
add
or
lods
bound
je
adc
pushf
scas
fbstp
movsb
mov
shrb
add
sti
and
mulb
inc
dec
repz
sub
and
ja
scas
sub
mov
pusha
imul
dec
inc
inc
and
push
xor
jo
popa
lea
mov
mov
stos
lods
les
test
pop
loop
rcr
bnd
mov
inc
pop
loop
repnz
cmp
lds
add
int3
inc
aas
inc
test
pop
shll
in
clc
aas
es
mov
mov
add
adc
pop
mov
inc
xor
sbb
mov
cli
rcrl
std
sbb
dec
mov
mov
and
push
dec
popf
stc
lods
mov
icebp
sub
into
scas
sub
leave
dec
sarl
stc
test
jp
add
hlt
movsb
xchg
cmp
mov
jo
cmpb
jmp
jl
enter
out
cmp
or
or
mov
or
xchg
popf
mov
mov
mov
and
test
mov
push
push
fdivs
mov
sbb
or
repz
mov
andl
adc
pop
repz
push
cmp
pop
add
sbb
pop
cmp
push
jecxz
inc
adc
inc
mov
xor
xor
icebp
clc
nop
cmp
mov
sub
divb
testl
popf
cwtl
xor
sbb
insl
inc
nop
cmp
test
or
ror
cs
clc
and
push
jns
add
sarb
xor
arpl
mov
or
xchg
cwtl
test
fdiv
in
adc
data16
mov
xchg
cmp
jo
loopne
shl
and
imul
lahf
shrb
cmpsb
scas
mov
fwait
adc
out
xchg
out
into
pop
xor
and
test
ret
aad
popf
mov
lcall
ds
lret
sbb
imul
inc
negl
loope
pop
adc
in
subl
lods
push
or
push
cmpsl
xchg
push
adc
mov
ficomps
clc
rcll
subb
dec
sbb
js
outsl
fcmovne
xlat
jne
cmp
mov
or
fsubr
fxch
rcll
cwtl
mov
inc
mov
jge
jne
cmc
lahf
popa
int
add
sbb
dec
nop
dec
pop
pusha
mov
xchg
inc
sbb
pop
xor
addr16
push
dec
mov
push
imul
cs
out
dec
xor
cli
cs
out
rclb
outsb
jno
mov
mov
push
cmpsl
cmc
or
fnstsw
test
rcll
and
push
dec
bound
in
pop
shlb
mov
xchg
add
mov
mov
cld
subb
test
leave
mov
sub
lret
jle
popf
inc
inc
cmp
xor
and
cmp
cmpb
xchg
imul
cs
inc
loopne
pop
sub
dec
pusha
mov
stos
fdivl
and
scas
mov
mull
stc
adc
sub
push
cli
js
fldt
imul
in
mov
push
ss
cmpb
flds
mov
fsts
inc
sbb
loop
adc
ljmp
xchg
pop
ja
iret
mov
add
aad
mov
pushf
xor
fsubrp
fldl
std
mov
xor
xchg
cmp
push
inc
test
loope
lods
addl
lea
test
push
dec
je
pop
or
dec
sti
stos
cwtl
dec
mov
jecxz
lock
mov
dec
adc
and
sbb
popa
xor
mov
push
lods
insl
mov
ret
aaa
jl
ja
jns
icebp
sub
sbb
inc
jnp
pop
dec
sbb
sahf
aam
push
lahf
adc
sbb
mov
imul
inc
xchg
mov
mov
icebp
inc
loope
scas
test
jno
mov
fcomip
xor
pushf
out
mov
gs
jp
lahf
sub
adc
jecxz
int3
out
jne
jo
push
std
mov
adc
fdivl
xchg
mov
and
inc
int3
inc
aam
pusha
mov
jnp
ficompl
sti
add
fidivrs
leave
notb
mov
std
xchg
loopne
test
or
xchg
pop
enter
xchg
mov
mov
pop
or
inc
dec
icebp
cmp
jnp
mov
lock
imull
arpl
jns
mov
scas
jbe
cwtl
scas
pop
sbb
jo
push
mov
in
dec
out
sbb
xchg
shlb
mov
repz
mov
test
jl
mov
sbb
adc
or
scas
xchg
dec
cmp
mov
daa
fisubs
sub
int
and
adc
int3
lcall
dec
ffreep
stc
xchg
out
jp
in
sbb
add
fadds
aaa
daa
loop
xchg
aam
test
sub
or
lock
cltd
cmpsb
ficompl
mov
gs
dec
hlt
mov
popl
mov
push
out
push
dec
in
xchg
push
js
adc
addr16
repz
and
imul
mov
pop
xor
les
mov
jmp
inc
pushf
and
fisubrs
dec
or
mov
add
jae
les
push
sub
and
shl
xor
icebp
mov
add
call
test
in
xor
mov
dec
repz
rcrb
push
jb
les
cmpsl
jp
lods
mov
fwait
xchg
in
in
push
dec
push
pusha
pusha
mov
inc
pop
xor
mov
push
sbb
fbld
xchg
icebp
mov
or
inc
cmp
adcl
and
and
dec
fisubs
push
mov
jnp
ret
daa
and
scas
and
dec
imul
mov
test
or
mov
mov
mov
iret
jbe
sbb
mov
shlb
mov
les
lret
adc
arpl
or
nop
daa
adc
add
sub
push
push
or
out
push
cli
repz
add
outsb
cltd
int
shlb
mov
inc
fsub
cli
mov
lret
sub
inc
pusha
sub
fmulp
cmc
fstpl
outsl
subl
and
dec
inc
mov
xor
andb
or
and
sahf
or
sub
xchg
sbb
jae
shl
cltd
in
dec
bound
call
pusha
daa
jno
and
adc
sbb
daa
mov
xchg
pop
data16
cmp
repz
jle
popf
cmp
and
mov
test
bound
jo
and
jb
add
mov
inc
xchg
sbb
push
jle
mov
add
inc
gs
in
lods
pop
jmp
inc
mov
imul
mov
ss
xchg
ror
dec
fsts
inc
mov
fimull
push
push
testb
pop
or
fimull
add
mov
jns
push
stos
aaa
jbe
fwait
push
scas
sbb
and
rclb
jl
pop
fstpt
adc
test
inc
inc
cmpsb
insl
xor
xchg
lcall
xorb
adc
leave
pop
iret
jp
or
or
pop
mov
stos
mov
out
jno
decl
sub
and
mov
dec
call
mov
fucomi
aaa
pop
dec
xor
movsb
jg
in
push
or
xchg
jno
push
shll
nop
ljmp
aam
cmp
and
lock
jb
mov
insl
dec
jg
mov
add
lret
fcomp
inc
adc
sbb
into
sub
sahf
adc
or
clc
clc
sbb
sbb
inc
and
push
rcll
int3
pop
stc
insb
out
in
cli
mov
or
mov
outsl
es
xor
in
jp
mov
sub
cmp
popa
ljmp
div
dec
lcall
fildl
and
stos
jmp
mov
leave
ret
cmp
insb
lock
shll
cmc
push
es
cmc
mov
shll
je
add
adc
pop
mov
in
loop
aaa
or
fmull
loopne
jp
mov
xchg
cwtl
rorl
bound
mov
out
fldlg2
push
dec
daa
mov
call
fistl
std
or
aam
les
push
xchg
add
lret
arpl
add
xor
dec
lods
insb
pushf
push
lock
int
sqrtps
mov
call
xlat
call
cmp
cs
or
xor
xor
cwtl
and
jo
pop
jo
pusha
cwtl
or
and
daa
mov
imul
stos
stos
dec
pushf
cld
and
cmpl
dec
int3
jle
js
cli
roll
enter
or
loop
ss
imul
jae
sbb
xorb
js
jmp
shll
mov
fnstsw
mov
pop
and
jno
sti
test
mov
insl
call
ret
rcl
jnp
mov
das
and
test
outsl
shr
pushf
mov
and
jnp
jge
mov
mov
ror
jns
sub
jns
inc
out
sub
adc
sbb
fucompp
in
call
arpl
sbb
push
imul
mov
iret
mov
push
add
in
fisubrl
adc
sub
mov
outsb
sti
mov
adc
daa
xchg
inc
mov
jle
aad
daa
xor
popa
mov
jns
cmpl
mov
fildll
or
in
scas
xor
sbb
shlb
shrl
inc
mov
sub
sahf
enter
pop
in
xor
and
sbb
pushf
jl
lds
sbb
ss
sbb
inc
mov
and
sub
std
dec
fs
adc
pop
fsubs
jne
jecxz
jle
ret
imul
icebp
dec
nop
inc
bound
das
ljmp
cmp
mov
xor
shl
dec
mov
cwtl
hlt
adc
sbb
sarb
icebp
hlt
sub
imul
loopne
and
icebp
xchg
pop
outsb
push
cmpsb
mov
push
cwtl
inc
mov
jmp
push
add
push
shrl
ljmp
lock
jg
adc
imul
adc
mov
imul
enter
jge
subl
pop
sbb
addr16
fsts
push
sbb
sahf
rcpps
cmpsb
adc
arpl
add
and
mov
in
push
mov
add
sbb
sahf
cli
jne
add
test
ja
mov
push
clc
cmp
cmc
lahf
out
mov
mov
cmp
dec
movsb
test
sbb
sbb
loop
mov
mov
adc
pop
dec
lret
sub
cmpsl
cwtl
repz
inc
adc
fildl
orl
adc
xchg
add
call
loop
aaa
ss
cwtl
aas
inc
fs
arpl
dec
lds
adc
mov
icebp
jo
mov
inc
mov
cmp
push
outsl
enter
out
add
ss
pop
adc
add
xchg
out
jnp
add
adc
push
test
cmp
dec
and
add
sub
xor
cltd
pop
and
shl
in
and
cmp
push
inc
insb
shrb
push
out
arpl
dec
int
jno
aad
add
push
jno
les
mov
mov
test
aad
adc
jbe
sarb
sbb
pop
mov
adc
pop
inc
mov
mulb
sub
fwait
push
test
push
leave
inc
scas
cmpsl
sarl
sbb
inc
xchg
test
adc
and
mov
cltd
scas
mov
mov
inc
adc
inc
sub
aam
cld
dec
imul
pop
imul
ss
les
mov
aam
sub
scas
adc
inc
jle
scas
std
lret
cmp
cmp
std
into
into
imull
or
fistpl
xchg
test
or
loop
inc
mov
movsl
int3
lret
fsincos
mov
sbb
xor
add
pop
xchg
pop
movsl
cmpsb
addr16
inc
adc
ret
insl
mov
add
daa
mov
xchg
mov
adcb
or
sahf
push
pop
fmul
or
cmp
rorl
roll
mov
inc
dec
shlb
dec
fnsave
loope
inc
in
xor
push
jnp
out
and
sbb
ljmp
mov
pusha
push
mov
bound
xor
or
xor
pop
dec
mov
mov
or
adc
inc
cltd
pop
jnp
dec
shlb
lods
fisubs
outsb
push
sbb
cmp
aaa
cs
andb
cmp
cmp
adc
inc
hlt
fisttps
xchg
push
mov
cs
lods
aaa
lods
sbb
or
xchg
fsubrs
shrl
adc
dec
xor
push
dec
mov
cs
enter
cli
mov
loop
push
gs
mov
lds
sub
sbb
pop
or
pop
mov
xor
ss
call
push
iret
push
dec
je
sub
jae
mov
lock
mov
sub
push
inc
xor
push
pop
push
and
into
jp
dec
rcl
xlat
pop
push
movsb
or
iret
cmp
fidivl
fdivs
fimuls
xor
dec
and
inc
sbb
or
aaa
add
lea
test
lret
pop
xchg
jg
insb
dec
addr16
out
jne
push
lret
roll
pop
sahf
rcll
and
sub
dec
and
xchg
mov
rclb
inc
ds
iret
stc
sti
xorb
pop
push
mov
ljmp
sub
in
add
scas
dec
stos
jns
movsl
mov
es
pop
jo
dec
xchg
test
pop
sbb
int
loop
sub
rcrl
mov
push
ret
xor
aad
adc
sub
fcmovnu
aam
adcl
fisubl
mov
inc
push
inc
movsl
lods
loopne
fdivrs
stc
pop
mov
gs
cmp
sbb
mov
jg
and
pop
fdivl
and
mov
xchg
loopne
inc
cmpl
jne
jne
jae
sbb
sbb
fists
dec
ds
cmp
mov
push
in
add
push
nop
mov
sub
adc
inc
gs
shll
and
add
fsubl
mov
insl
jge
xor
xor
dec
call
mov
jge
gs
sbb
cmp
cmp
pop
cltd
xchg
inc
xlat
shl
jb
jb
mov
pop
in
inc
inc
pop
or
repz
or
mov
scas
mov
sub
cli
cmp
xor
fmuls
jo
sbb
out
inc
fdivr
stc
stc
cmp
add
or
enter
idivb
imul
mov
lock
pop
in
adc
es
mov
pop
mov
mov
mov
aaa
in
xchg
adc
xchg
out
enter
push
daa
push
lods
or
mov
add
pushf
fldt
idivb
aam
mov
mov
out
inc
mov
incl
cli
addr16
mov
dec
rol
fstpt
mov
test
fs
cmpsb
dec
lock
mov
push
testb
ficoms
lret
jg
adc
stc
int
lahf
dec
sub
adc
mov
ficompl
jnp
mov
in
or
aas
inc
cli
inc
mov
cmpsb
or
push
hlt
dec
pop
lock
lea
mov
xchg
xchg
ret
dec
mov
mov
sub
cld
aad
pushf
and
sahf
es
scas
mov
dec
mov
aaa
jecxz
add
cmpsl
mov
add
push
inc
sbb
mov
subb
pop
dec
pop
into
sbb
int3
pop
adc
jnp
xor
jg
adcl
sti
sub
jnp
outsb
sbb
lcall
cwtl
cwtl
xchg
pop
fisubl
out
inc
inc
sub
insl
lea
jle
int
loopne
lea
add
push
mov
imulb
or
and
cmpsb
pop
dec
cmp
leave
mov
fdivl
sbb
testl
mov
outsl
dec
nop
sbb
cmc
cmpb
mov
movsl
jno
lds
push
lahf
jae
inc
mov
cli
lock
cmp
mov
pop
ljmp
jmp
dec
sbb
insb
jl
data16
out
mov
sbb
mov
cli
xchg
lret
lock
lahf
testl
lret
sbb
mov
xor
inc
pop
ja
add
loop
clc
or
rclb
push
lods
push
xchg
push
or
xchg
dec
push
aas
mov
gs
push
flds
dec
ds
push
testl
cmp
sub
inc
fstps
cmp
ret
or
out
push
loopnew
out
push
sub
aam
fcomps
push
repnz
push
jbe
adcl
adc
sub
callw
xor
jo
call
cli
jp
jns
out
rol
pop
sbb
andb
loopne
and
jge
fisubl
leave
repnz
aad
in
adc
pushf
mov
inc
fwait
sub
push
pop
push
popf
mov
cmp
nop
mov
mov
fwait
test
imul
dec
push
subl
pop
mov
std
lret
sbb
or
mov
and
mov
cmp
fsubs
sub
fildl
insb
popa
and
call
mov
test
ljmp
cmpsl
aaa
jge
jecxz
push
sbb
leave
fwait
lret
cmp
scas
cmp
push
add
mov
adc
fildll
in
test
cmp
xlat
ds
into
pop
ret
jb
repz
pop
xchg
pop
jecxz
movsl
out
jecxz
ss
das
adc
in
mov
ret
xchg
dec
inc
test
cli
jl
out
xchg
repnz
cli
push
push
lret
sti
cld
scas
xor
nop
nop
mov
push
sub
jae
jns
mov
xchg
daa
sub
aam
cmp
cmpsl
adc
xchg
inc
nop
imul
ds
mov
pop
adc
add
orl
push
ljmp
das
jg
stc
cltd
sti
fwait
out
mov
cmp
cmp
cli
outsb
adc
stc
das
mov
cmpsl
js
movsb
or
fstl
xor
push
sti
cmp
mov
loop
call
ret
xchg
jno
lcall
mov
sub
and
pop
sti
mov
mov
test
mov
or
sub
pop
loope
scas
push
pop
ds
int3
lods
repz
xor
jg
lea
in
call
or
addr16
cmp
add
es
rorl
pushf
js
mov
lds
mov
les
jbe
ja
enter
adcl
ljmp
mov
cmp
inc
mov
and
xchg
scas
lahf
mov
jb
adc
test
pusha
jecxz
sbb
sub
ljmp
scas
std
jb
in
ja
push
stos
addl
xorb
lods
inc
lret
mov
or
out
add
imul
jle
lds
andb
fs
testl
int
mov
jl
ret
fwait
mov
loope
lret
ss
pop
call
adc
leave
pop
xor
xor
rcrb
mov
or
insl
popa
push
in
test
mov
cld
jns
popa
inc
fisttps
cmp
fistps
pop
mov
xor
add
mov
jbe
and
sbb
fistpll
or
push
sbb
int3
rcrb
pop
sbb
dec
lahf
sbb
fildll
addr16
test
out
sbbb
pop
mov
frstor
bound
mov
adc
mov
jnp
test
jbe
mov
sbb
sbb
pop
stc
inc
inc
mov
add
cltd
dec
out
sbb
out
and
lods
add
jbe
mov
aas
xchg
cmpsl
lret
cmpsb
test
xorb
lods
sbb
pushw
or
pop
in
sub
mov
add
or
pop
jb
or
nop
test
inc
add
idivb
sti
jle
cmc
sbb
add
arpl
mov
mov
enter
mov
stc
push
int3
jo
or
das
add
dec
sub
ljmp
test
repz
ljmp
add
pop
jno
mov
cmp
mov
pop
lea
push
outsb
ja
jae
lds
push
in
fisubrl
jns
test
cltd
push
les
inc
mov
bound
pop
out
hlt
dec
dec
sbb
scas
cmc
or
imul
lret
jl
cmp
aad
mov
dec
les
decb
push
jl
lret
orb
jecxz
lret
stos
add
addl
jns
test
iret
mov
dec
aam
int3
push
rorb
scas
sbb
std
test
add
xchg
xor
adc
mov
mov
mov
xlat
jge
loope
rcrl
mov
hlt
scas
rorl
mov
sbb
in
adc
sbb
test
or
dec
push
ljmp
or
sbb
aaa
pusha
mov
daa
imul
or
cmp
dec
lcall
adc
inc
xchg
orb
jmp
sbb
xorps
not
and
pop
sub
shlb
mov
sahf
jle
loope
mov
js
add
jnp
movsl
cmp
pop
or
add
enter
adc
or
repnz
out
jmp
cmp
stc
aaa
sbb
lret
pusha
adc
ljmp
mov
push
enter
xor
or
data16
xor
xor
mov
jo
imul
xor
sub
push
ss
test
and
jge
ret
fisttpl
mov
mov
and
lds
xor
out
popf
mov
out
aas
lcall
leave
jp
subl
cmpsb
jae
inc
lds
xor
mov
or
adc
adc
jg
add
cs
subl
dec
pop
push
jle
push
push
test
push
inc
sahf
xchg
data16
fmull
and
fists
add
out
cwtl
push
jae
loop
ds
bnd
sbb
imulb
ss
jmp
and
out
je
sbb
fs
lock
je
cmp
sub
psllq
clc
jae
inc
jmp
js
stc
mov
mov
jae
out
incl
adc
add
insb
out
pusha
cmp
fwait
jns
xchg
sub
sarb
ret
mov
fs
incb
cltd
call
cmp
clc
cmp
cmp
adc
into
push
adc
and
sbb
mov
mov
popf
ja
lahf
sub
in
sbb
sbb
jb
outsl
xchg
mov
lock
mov
and
lcall
add
pop
sbb
adc
add
sbb
mov
add
lds
or
fwait
jbe
xchg
pop
sahf
mov
addr16
and
jp
mov
je
test
insl
adc
adc
das
push
inc
fmuls
or
sti
dec
cmp
mov
push
fnstsw
scas
xlat
iret
xchg
cmp
stc
ss
jns
fwait
outsb
xchg
push
inc
stos
inc
jecxz
mov
jp
loopne
pop
or
aad
lods
sub
cmc
scas
hlt
ret
jo
pop
add
testb
in
in
aam
ja
mov
fiadds
cmp
pop
aad
outsb
sbb
xchg
lret
adc
and
pop
push
mov
sub
cld
inc
cs
mov
icebp
ficompl
pop
or
dec
in
xchg
pop
jnp
popa
mov
sahf
les
rclb
mov
xor
and
and
jbe
pop
iret
lock
or
movsb
xchg
sub
mov
hlt
and
adc
aaa
inc
dec
xchg
pop
fadd
mov
xlat
js
cmp
mov
out
cmpsb
jl
cmp
or
or
lods
test
pusha
add
daa
mov
icebp
push
mov
mov
roll
ss
xlat
or
movsb
sub
xchg
testb
pop
dec
xchg
shrl
cmc
jp
jb
shll
fisttpl
loop
enter
lret
flds
mov
sub
pop
std
cli
mov
add
daa
jb
fs
mov
clc
popf
or
in
es
rolb
jb
adc
leave
inc
ss
jmp
push
pop
or
emms
repz
sbb
adc
lahf
mov
adc
cmp
mov
push
or
ficompl
stos
fsubr
jae
xor
inc
hlt
pusha
popf
stc
bound
movhps
cmp
mov
push
sbb
xchg
loop
fs
mov
clc
fcmovne
push
fwait
mov
repz
add
mov
and
cli
xchg
test
fsub
sbb
shlb
xchg
mov
xor
inc
push
sti
test
push
pushf
sti
pushf
ja
in
adc
pop
cld
push
test
inc
mov
mov
popf
jecxz
nop
cld
pusha
and
xor
and
loop
dec
mov
sbb
std
je
rcrb
inc
mov
int3
pop
jns
pop
clc
inc
outsl
jb
sub
add
jae
adc
jl
cmp
movsl
cmp
xchg
mov
jp
inc
enter
mov
or
lcall
push
jne
inc
andl
sti
adc
mov
out
xchg
clc
pop
ja
and
jl
test
mov
and
rcrl
dec
imul
sbb
and
jb
push
jmp
push
mov
add
orl
imul
mov
mov
inc
pop
xchg
imul
xchg
std
cmpsl
cmp
pop
adc
fwait
call
and
mov
add
cmp
push
rorl
dec
adcl
sub
lds
sbb
mov
aas
loope
arpl
mov
and
lds
jnp
data16
fisubrs
inc
fwait
adc
fcmovu
cmp
sbb
adc
inc
movsl
popf
or
int3
out
out
and
mov
push
mov
dec
sbb
add
adc
mov
sahf
fimull
mov
xchg
sbb
pop
inc
push
mov
mov
das
dec
push
adc
add
fxch
dec
pop
adc
mov
mov
jmp
cmp
leave
adc
cmp
xchg
mov
xchg
movsb
aam
inc
nop
adc
shl
ljmp
adc
outsb
call
jbe
data16
mov
shrl
dec
xlat
and
mov
xor
lahf
cmp
mov
or
cld
jecxz
mov
shlb
in
mov
cltd
or
sbb
out
mov
fcomp
mov
and
add
dec
inc
adc
sbb
test
shl
sti
jecxz
test
lret
dec
ja
dec
sub
fnstcw
scas
jmp
push
and
dec
sub
inc
cli
mov
pop
das
sub
dec
cmc
call
push
fdivr
lods
jno
sbb
inc
nop
cmc
sub
jl
xchg
cltd
pushf
fdecstp
add
cltd
inc
adc
sbb
sbb
push
jns
or
test
int3
xchg
pop
adc
mov
pop
mov
popf
and
ret
pop
out
out
ret
hlt
jmp
mov
sub
mov
dec
mov
mov
call
sub
push
mov
fwait
data16
push
mov
popa
cmp
int3
dec
xor
clc
sbb
ljmp
lcall
xor
push
add
fs
xchg
ret
push
movsb
clc
cmpsl
movsl
fsubrl
dec
pop
adc
cmp
aad
xchg
sbb
cs
xchg
lahf
das
jno
mov
and
cltd
push
fdivrs
dec
add
jnp
sub
add
fidivrs
sub
mov
movsl
repnz
mov
or
mov
xchg
and
xlat
dec
mov
into
jo
push
sub
jle
jge
mull
lds
stc
test
cmp
loopne
mov
out
mov
lock
lea
pop
and
sub
push
xor
je
xchg
arpl
inc
and
ds
imul
mov
test
pop
adcb
add
add
inc
sbb
in
mov
fstpt
xchg
adc
imulb
cld
sbb
ret
not
xchg
jns
and
jno
or
jmp
das
mov
add
mov
in
movsb
inc
in
cmp
es
push
outsl
sub
and
dec
push
fs
imul
xorb
or
movsb
mov
scas
jne
sub
movsl
dec
movsl
jmp
add
sub
bound
rclb
or
xor
cmp
fmull
mov
int3
test
push
pusha
push
sub
or
loop
lods
pushf
test
push
push
aad
inc
rorb
mov
out
js
cmp
inc
cwtl
stos
mov
cmp
test
pop
add
mov
cs
out
mov
lret
movsl
lods
addl
stc
ljmp
popa
jo
fwait
test
add
adc
outsl
push
or
mov
xchg
mov
fwait
gs
lods
dec
adc
or
mov
test
jp
lret
inc
and
add
sub
or
call
pop
mov
popf
mov
push
repz
inc
int
pusha
das
das
xor
mov
pop
aad
push
cmp
test
loopne
push
cmpsl
outsb
lahf
sbb
nop
push
aaa
sti
and
or
adc
dec
dec
rolb
js
adc
xlat
push
jnp
xchg
and
pop
int3
pop
inc
jmp
push
and
jb
js
in
jbe
sbb
nop
dec
rol
scas
popf
sub
adc
stc
jl
test
adc
cmp
rolb
cmp
rcl
xlat
sbb
aas
jge
loopne
dec
xlat
sub
ds
mov
mov
enter
add
jmp
inc
jae
cli
cmp
cwtl
shll
xlat
out
or
sarl
mov
push
inc
mov
stos
jg
add
add
pop
mov
sub
xadd
sbb
xchg
stos
outsl
stos
mov
mov
and
lcall
mov
jmp
sbb
mov
jg
mov
out
mov
sub
fmul
lret
inc
xor
fsubs
xor
mov
imul
push
mov
imul
pushl
cwtl
push
mov
mov
adc
loope
mov
lea
xor
shll
add
imul
add
andb
mov
movq
fmuls
jmp
scas
imul
add
iret
jbe
roll
mov
jl
mov
aas
lods
pushf
test
mov
test
lock
xchg
mov
adc
xor
push
mov
cmc
rorb
out
movsl
out
jne
add
dec
mov
out
xchg
adc
nop
into
push
cmc
sbb
dec
xchg
repz
sbbb
jae
hlt
pop
push
lcall
inc
push
nop
sbb
cltd
enter
push
jns
jae
jg
movsb
sbb
mov
sti
push
push
or
push
inc
or
in
cli
lds
subl
fwait
movsl
into
movaps
jno
shlb
xor
mov
and
jno
add
sbb
aas
push
popf
cmpl
jne
mov
ret
pop
inc
pop
inc
mov
inc
mov
fucomp
mov
cmp
xor
cmp
xor
fwait
cwtl
mov
nop
fs
imul
cmp
and
dec
sbb
clc
rcl
inc
mov
lods
shlb
arpl
and
sbb
mov
outsl
xchg
rol
es
adc
jle
xchg
aam
mov
std
sub
xchg
mov
xor
aam
sarb
int
dec
insl
lock
idiv
rcrl
es
sbb
cmp
sub
insl
bound
lods
mov
int3
orb
loop
dec
cmp
sbb
enter
hlt
pop
aam
lds
xor
div
adc
cmpsb
cltd
call
push
push
mov
add
jnp
out
lret
cwtl
cwtl
xor
mov
enter
adc
fdiv
jge
jne
int
cmp
lock
imul
cmp
xchg
cmc
push
stos
ljmp
fsubrl
pop
adc
push
xchg
lds
mov
sbb
pop
mov
mov
sub
pop
xchg
mov
and
dec
fisubs
leave
fsubrl
and
mov
xor
push
lret
mov
sbb
ret
cmp
fildl
into
mov
lret
insl
sub
sbb
adc
pop
push
lods
or
data16
icebp
int3
cli
adc
mov
dec
in
pop
mov
sub
add
inc
inc
cmp
shlb
xchg
mov
xchg
lds
adc
cmp
mov
imul
inc
cmp
jge
insl
ss
insb
pop
mov
cwtl
push
jg
mov
mov
xlat
xchg
pusha
add
xorb
sbb
out
pop
je
cmp
cmp
push
adc
ja
mov
sbb
push
add
mov
leave
cli
cmpsl
xchg
push
mov
jb
push
jl
mov
cwtl
aad
aam
negl
lea
sti
out
xlat
sarb
lea
sub
pop
or
xor
inc
pop
call
incb
fisubrl
dec
xchg
cltd
fs
push
cld
out
adc
xor
movsl
jl
outsb
jle
cmp
mov
xor
add
idivl
adc
xchg
sbb
out
fsub
cmpsb
fldcw
sbb
test
mov
fsubrl
out
or
or
pusha
addb
leavew
push
in
in
popf
jns
jns
mov
shl
scas
sub
out
in
mulb
xchg
add
mov
stc
int
push
add
inc
ret
xchg
or
xor
pop
idivb
inc
sub
mov
inc
jmp
cmp
mov
subl
push
dec
fadd
pop
xor
stc
insl
fs
jl
pop
pop
sbb
enter
add
clc
jecxz
es
test
ja
arpl
ljmp
cmp
stos
push
sub
cmp
sbb
dec
ja
daa
mov
test
and
clc
or
lods
lods
mov
jmp
dec
movsl
jg
mov
jbe
cmp
fs
call
xchg
or
ror
xor
cmp
adcl
sarl
stc
outsb
cmpsl
ret
mov
arpl
movsb
fnsave
sub
and
sbb
std
out
cmpsl
cmp
sbb
aad
cli
jge
inc
adc
nop
ja
int
lcall
mov
or
cmp
cmpsl
outsb
jmp
cmp
mov
cmp
dec
push
mov
mov
ja
jae
pop
movsl
mov
or
and
or
mov
and
out
mov
int
push
fucom
out
shl
popf
jo
dec
cwtl
jbe
ss
imul
sbbl
test
sub
cli
pop
loopne
sub
test
lret
mov
jp
push
test
es
iret
dec
movsl
jnp
rclb
inc
int3
mov
cmp
pop
cwtl
dec
nop
imulb
and
popf
xor
pop
push
cmp
out
into
add
cmpsl
xchg
jle
pop
stc
fwait
jo
ret
jnp
std
adc
je
enter
aad
lret
shrb
jno
pop
add
sahf
stc
lcall
inc
neg
pop
cld
jl
clc
mov
or
mov
mov
cmp
or
adc
dec
or
mov
lods
aaa
daa
sti
fs
adc
add
stos
lock
data16
dec
testb
loopne
fbstp
push
addr16
mov
insl
inc
iret
and
push
jp
jmp
stos
pop
add
push
pushf
or
pop
scas
sbb
adc
test
jb
push
sbb
push
adc
out
movsb
testl
mov
sbb
pop
std
xchg
repnz
xorb
jp
mov
xor
test
jp
mov
fs
popa
js
jp
jo
sbb
aad
inc
xchg
jmp
inc
data16
sbb
or
push
add
fwait
jae
inc
add
add
inc
jne
popa
jns
xchg
and
in
pop
sub
insb
and
jbe
cmpsl
mov
subb
lea
xlat
imul
adc
inc
mov
pop
fnstsw
lods
in
out
sbb
sahf
aam
std
mull
add
add
fisttpll
test
pop
leave
ja
shl
xor
mov
jge
xchg
mov
dec
pop
xadd
outsb
xchg
pop
fcmovnbe
out
call
sub
pushf
into
scas
movsl
je
fidivrl
dec
out
cmp
or
inc
add
pusha
mov
pop
sarl
ficompl
inc
mul
idiv
xor
icebp
and
cwtl
or
pop
rclb
fildl
mov
enter
popa
pop
push
scas
sahf
sbb
out
adc
aam
repnz
dec
push
gs
xchg
cld
mov
arpl
test
push
cmpsb
in
xchg
call
and
xchg
test
inc
decl
in
add
lret
mov
lcall
xchg
push
and
adc
jl
push
jne
fisubrs
fstps
cs
jnp
outsl
nop
mov
push
pushf
xchg
xchg
pushf
loop
cmpsb
movsl
push
xchg
dec
push
xchg
pop
push
ja
xor
gs
xchg
mov
jae
push
pop
pop
sbb
inc
xor
fsubs
xor
mov
pop
mov
cli
lea
inc
rcr
sbb
sti
mov
mov
dec
add
lahf
fs
mov
sbb
dec
push
inc
or
jge
ret
and
xchg
call
sbb
movsl
lods
movsb
add
push
movsl
inc
shl
aaa
push
scas
or
xchg
out
out
dec
mov
jmp
lock
inc
data16
sub
inc
sbb
aam
jle
sbb
mov
xchg
bound
data16
imul
loop
scas
movsb
pop
adc
cmp
lods
dec
int3
ja
loope
inc
sbb
clc
or
aas
push
leave
mov
or
and
std
cmpsb
adc
and
add
cmp
push
jne
out
ljmp
inc
pop
cmp
arpl
ds
xchg
cwtl
jo
cwtl
push
ficoms
imul
loop
cwtl
mov
adc
jns
in
fnstsw
sti
xor
jge
mov
mov
repz
outsb
cwtl
ds
std
sub
jb
or
inc
inc
lds
sub
cli
mov
test
sbb
sub
iret
pusha
xchg
lea
mov
mov
mov
push
movsb
sahf
mov
push
inc
in
xchg
add
dec
orb
pop
leave
fimull
js
test
pop
sti
sbb
cmpsl
and
popf
pusha
jmp
add
or
xor
fisubl
mov
jnp
out
test
repz
inc
xchg
push
js
mov
pop
stc
mov
dec
push
lret
mov
pop
pushf
sub
popa
or
mov
jb
jecxz
pop
add
push
xchg
mov
iret
roll
into
pop
loope
cltd
rclb
cmp
repz
fnstcw
fisubs
or
addr16
out
ja
jmp
mov
bound
ljmp
xor
jmp
mov
inc
push
loop
stos
pop
adc
push
sbb
and
lret
scas
sbb
jmp
loope
repnz
jnp
movsb
add
mov
mov
rorl
lret
and
adc
dec
add
dec
pop
mov
push
dec
lahf
cwtl
mov
jle
fmull
push
ss
jb
sbb
addl
adc
mov
sbb
xchg
outsb
jle
mov
pop
inc
adc
mov
std
inc
stos
jbe
xor
add
fdivrl
dec
cmpsb
out
ja
jl
sbb
or
loop
fildll
sti
rorl
in
mov
dec
jg
adc
in
cmp
in
icebp
ficompl
sbb
push
rcll
cli
and
jp
paddq
add
push
in
cld
frstor
pop
mov
imul
lods
adc
test
mov
mov
gs
dec
lds
sti
push
add
jp
cmp
movsb
dec
mov
dec
dec
dec
xchg
cli
cmpsb
fwait
lods
push
push
jbe
aad
popa
sbb
iret
mov
mov
pop
mov
or
popa
adc
imul
sbb
and
rorl
fdivp
in
sbb
fcomi
cmp
std
pop
or
sbb
mov
mov
ret
lret
jmp
jl
xchg
push
jle
inc
les
fldl
xchg
push
mov
cmp
jae
push
adc
in
pop
pop
mov
and
push
mov
into
hlt
push
loop
stos
fisttpl
xchg
mov
mov
fucom
fcomps
dec
daa
xor
add
in
imul
std
outsl
std
mov
imull
test
lcall
pop
pop
lcall
xor
add
jne
jecxz
cmp
inc
sub
cld
popf
or
es
adc
divl
jo
pop
dec
adcb
xor
stos
repz
testl
inc
in
aaa
out
into
add
inc
jl
pop
jno
fsubrs
dec
inc
ja
jo
loope
aad
imul
push
sub
outsl
cld
or
or
lock
ljmp
iret
repnz
inc
fcomi
subb
pop
aad
lahf
push
arpl
sbb
jmp
out
int3
xchg
std
outsl
das
dec
pop
add
sbb
in
mov
lock
out
sub
mov
xchg
leave
and
dec
mov
xchg
into
fisttpl
stos
ss
push
dec
cmp
jb
popf
push
or
in
dec
xchg
fsubl
or
mov
es
lcall
jmp
and
test
xor
sub
sbb
push
call
adcl
push
mov
lods
xchg
fstp
shlb
xor
lds
outsb
fcompl
or
xor
xchg
or
dec
aaa
test
and
ds
dec
fstpt
in
fcomps
jecxz
jmp
and
or
bound
aad
cmpsl
pop
ror
xchg
fidivl
lods
fbld
jp
fldenv
cltd
ret
sub
daa
add
ret
mov
test
add
dec
out
test
mov
mov
sti
jge
scas
test
xchg
scas
dec
cltd
enter
inc
cmc
and
mov
outsb
leave
cltd
cmp
fcmovne
dec
ljmp
inc
sbb
xlat
xor
dec
mov
mov
fwait
xlat
fdiv
aam
cmpsl
add
pop
subl
dec
push
cwtl
lcall
call
repnz
xorb
add
out
xor
jne
insb
adc
mov
jae
jb
sub
pop
pop
jnp,pt
mov
icebp
imul
out
into
jp
xchg
mov
loope
xchg
xchg
ds
pop
xchg
pop
dec
call
stc
pop
rcr
out
inc
cmp
daa
ljmp
xchg
repnz
dec
ljmp
mov
sbb
data16
mov
inc
add
sbb
cmpl
fstl
push
or
mov
movsl
cmp
cs
xchg
pop
movsl
fisttpll
cmp
push
daa
stos
adc
out
fsubr
es
xchg
mov
sub
ret
int
aam
inc
inc
mov
repnz
or
jecxz
pop
add
repnz
jae
add
xchg
xlat
popa
xor
out
nop
leave
push
inc
add
pop
cmp
in
mov
mov
insb
mov
inc
push
mov
scas
lahf
jns
ss
mov
test
pusha
and
int
inc
outsb
fsubs
sahf
sbb
int
arpl
jns
sbb
mov
adc
adc
push
add
xor
mov
xor
sub
mov
cmp
jl
mov
fimuls
inc
sti
or
adc
pushf
xcrypt-ofb
cmpsl
cs
jno
mov
mov
divb
ret
nop
xchg
jns
cld
push
int3
bound
inc
xor
stos
jge
je
cmc
mov
mov
and
and
adc
loopne
mov
pop
repnz
cmpsl
jl
mov
fwait
add
mov
sub
popa
add
sub
movsl
cmc
icebp
sub
ljmp
lret
je
in
icebp
inc
addb
push
xchg
add
or
add
leave
xchg
xchg
int3
push
dec
jnp
sub
notl
xor
push
aad
daa
test
push
fcoml
push
test
inc
fcompl
xchg
movsl
fistl
push
insb
int
gs
call
or
mov
popf
repz
aad
mov
push
push
mov
aas
push
daa
cmp
repz
lods
add
inc
hlt
jnp
fcoms
pusha
add
in
jns,pn
push
ret
mov
roll
mov
mov
dec
insl
inc
lret
jge
fs
dec
sbb
or
dec
mov
mov
push
xor
in
add
in
lcall
xchg
fsubrl
dec
aam
adc
cmp
add
xor
inc
pop
loope
icebp
sbb
das
popf
mov
cmp
xor
icebp
push
scas
xchg
hlt
add
adc
dec
sbbb
dec
in
loope
push
mov
dec
sbb
jecxz
outsb
jle
inc
mov
test
mov
out
clc
mov
push
cltd
pop
push
xor
cmp
out
jp
jle
das
and
adc
and
jl
mov
sbb
push
das
inc
push
cli
dec
push
sbb
pop
xlat
and
movsb
aaa
push
loope
mov
adc
fdivrl
jg
jne
adc
pop
daa
jmp
inc
fcomps
inc
push
das
mov
shlb
in
mov
add
inc
mov
push
repnz
jb
aaa
popa
push
sbb
mov
pop
dec
test
jle
mov
aad
sub
lds
imul
es
cmpsl
movsl
push
insl
daa
dec
push
fsubr
push
push
cmp
negl
int3
out
das
in
xchg
xor
push
test
dec
scas
jmp
dec
pop
jmp
aad
cs
stos
mov
test
pop
imul
adc
and
lds
mov
flds
jno
push
cmp
enter
mov
push
push
dec
xor
lret
push
jae
clc
imul
pop
and
movb
sub
xchg
outsl
pop
sti
leave
das
mov
std
lods
mul
mov
sarb
mov
jge
mov
fldt
pushf
jno
aas
dec
push
ljmp
sub
sub
cwtl
sub
sahf
cmp
xchg
stos
add
out
imul
pop
pop
sbb
xchg
in
fists
push
mov
jg
or
in
ret
lock
xchg
mov
movzbl
loop
jg
pop
mov
andb
imul
cmp
fnstsw
pop
xor
mov
jo
aaa
jnp
lret
mov
subl
mov
and
cmc
ret
pop
bound
jno
aas
mov
sarl
push
shll
add
push
hlt
inc
pop
mov
mov
roll
xchg
shl
fimull
andl
ret
lds
outsb
push
jb
add
pop
mov
in
dec
sbb
xor
push
pop
shll
push
push
pop
inc
ret
jmp
mov
lret
scas
mov
repnz
das
mov
out
dec
bound
out
fwait
jmp
dec
mov
sub
js
cmpsb
pop
push
pop
jle
in
sub
das
inc
daa
das
lea
js
push
mov
inc
fsubl
clc
mov
iret
pushf
inc
in
cmp
lahf
mov
insb
or
jl
sbb
es
cli
outsl
lods
leave
lahf
aad
lods
jecxz
and
mov
test
and
shr
and
in
aad
lea
mov
dec
mov
adc
add
int3
push
outsl
mov
arpl
pop
pusha
sub
cmp
push
pop
ss
sti
push
outsl
dec
mov
lock
adc
out
cwtl
pop
icebp
ret
mov
fcmovnb
jge
out
fisubrl
loope
shr
lahf
push
imul
dec
pop
mov
xor
or
ret
jg
mov
cmp
out
xor
xor
mov
movsl
add
popf
test
and
lret
repnz
pop
jge
imul
imul
push
push
inc
jl
sub
mov
scas
in
or
xchg
fs
cld
lock
pop
sub
sahf
in
test
out
stos
inc
hlt
lret
or
cmpl
jae
cltd
clc
cwtl
mov
push
incb
xchg
in
cmp
adc
adc
inc
jb
mov
pop
inc
fwait
mov
mov
sbb
stc
sbbl
cltd
cli
add
loopne
mov
popf
std
rcll
pop
sub
xchg
xlat
scas
cmpb
in
push
xchg
aad
and
add
jge
mov
cmp
jbe
mov
test
mov
fwait
dec
mov
rclb
addr16
leave
dec
in
lcall
or
pop
xor
movsl
mov
jge
and
jg
mov
mulb
mov
inc
sbb
gs
mov
lods
lahf
jnp
mov
int3
jmp
pop
pop
and
mov
imul
jnp
nop
std
cli
dec
bound
popa
pop
dec
inc
sub
pushf
pop
repnz
jo
adc
shr
nop
cmp
out
loopne
int3
aas
push
das
loope
add
scas
mov
repz
sbb
mov
cmp
sbb
mov
fisttpl
mov
cmpl
xchg
outsb
xchg
cmp
mov
iret
cli
out
add
mov
das
insb
nop
repnz
daa
aam
arpl
mov
jg
loop
push
inc
das
mov
imul
fs
daa
data16
pop
iret
shlb
mov
mov
scas
pop
cmp
das
insb
dec
cmp
ja
or
mov
jp
jmp
inc
jo
xor
mov
pop
ja
mov
sub
enter
xor
jne
mov
or
xchg
sti
mov
sub
cmp
es
adc
push
lcall
pushf
push
loopne
sub
not
fwait
aad
jno
dec
or
push
xchg
and
loopne
les
xlat
add
push
pushf
andl
lret
stos
dec
mov
jo
xchg
xchg
sbb
add
sbb
xor
ja
int
dec
mov
add
out
inc
mov
xchg
int3
cltd
xchg
mov
push
sub
cwtl
jmp
inc
loop
ror
cmpsb
push
sbb
add
jp
ret
jae
add
ret
cld
cs
add
jnp
shll
fcomp
rolb
pop
and
clc
scas
std
xchg
das
ss
push
mov
addr16
imul
mov
jns
mov
data16
pop
xchg
popf
cmc
clc
cs
aas
mov
xor
inc
mov
push
push
pop
xor
inc
repnz
xlat
mov
fs
push
push
or
xchg
ss
xor
sub
jg
xlat
jmp
lods
out
loop
mov
jp
in
fsubrl
popa
jb
push
mov
jle,pn
cltd
popl
test
call
mov
std
pop
ficompl
test
xor
dec
dec
and
push
adc
fnstsw
lods
jns
mov
stc
xchg
mov
mov
or
mov
add
gs
movsl
push
push
push
and
pop
cmp
leave
insl
sti
or
and
mov
push
test
aas
pop
cmp
out
sti
mov
jp
sbb
pop
dec
pop
lret
mov
xchg
bound
or
cs
cmp
sub
xlat
pop
sub
lds
xchg
xor
xchg
cwtl
or
add
cld
adc
cmp
mov
fnstenv
lds
sub
pop
inc
xor
pop
and
adc
cmp
push
lahf
int
push
jno
lock
push
xor
fadds
xor
sti
cmc
rol
insl
xor
dec
xchg
mov
jo
add
int3
and
fildl
pop
pushf
pop
insw
dec
push
cmc
test
rcll
pop
scas
outsb
xor
adc
test
lea
jmp
stc
pushl
adc
sub
xor
mov
es
fs
xchg
in
lods
jns
pop
jge
inc
push
sbb
std
sub
jns
arpl
call
das
jl
lods
daa
roll
or
jb
mov
js
fidivl
jnp
inc
sbb
jmp
cs
sti
call
sub
je
xchg
rcrl
orl
fdivrs
sub
adc
adc
and
mov
jno
mov
lods
sarl
and
insl
faddl
nop
dec
add
test
cmpsb
sbb
test
or
icebp
dec
cld
adcl
mov
fnsave
test
ds
pop
es
add
jl
insb
adc
pushf
insb
push
pop
dec
arpl
fdivrp
out
in
andb
push
xor
rclb
in
bound
push
add
xor
int3
outsb
mov
push
mov
add
push
mov
add
cmpsl
mov
mov
jg
std
aaa
or
jmp
pop
cmpsb
xor
jg
jl
sub
xchg
scas
in
ret
add
cmp
pop
xchg
cmp
mov
shlb
mov
jae
movsl
cmc
mov
lds
sub
adc
dec
or
outsl
xor
pop
movsb
add
dec
jle
ljmp
test
add
jge
jb
orb
dec
movsl
push
jne
pop
push
pop
push
sub
mov
xchg
cli
add
shl
data16
add
inc
lret
lods
mulb
inc
inc
icebp
cmp
add
lock
repz
cs
mov
cmp
xor
sbb
or
dec
test
sbb
add
hlt
sub
xchg
cmp
or
jp
cs
mov
mov
sub
mov
lahf
popa
xor
int3
inc
jo
cs
push
sbb
repnz
aas
push
xchg
icebp
lods
xchg
sbb
loop
cli
imul
daa
movsl
outsb
pop
inc
mov
inc
int3
mov
add
stc
mov
lods
sti
cmp
inc
jmp
jo
std
jae
sub
jae
mov
xchg
mov
mov
adc
mov
jl
loope
inc
pop
mov
adc
fsubr
xor
rcrl
add
sbb
mov
xchg
and
dec
inc
xor
and
jnp
cmpsl
jbe
xchg
pop
pop
dec
add
dec
js
mov
inc
sbb
test
fstpt
xchg
lret
cmp
pusha
fsubrs
loopne
loopne
pop
js
test
dec
sub
cmp
std
add
pop
or
adc
push
and
xchg
jno
or
add
lcall
sbb
leave
cmpsl
cli
ds
in
pop
jg
das
scas
adc
mov
out
ret
add
mov
int3
inc
xchg
in
inc
stc
jo
xor
in
inc
dec
fcomps
xor
out
out
mov
xor
cs
int3
mov
mov
mov
mov
insl
inc
in
dec
push
adc
adc
cwtl
xor
cs
cs
or
sub
ret
ss
lea
dec
out
mov
pop
and
mov
xor
fisttpll
cld
push
cmpb
imul
out
jne
or
lock
int3
dec
push
jle,pt
mov
and
and
push
repnz
mov
push
dec
cmc
adc
xchg
rclb
and
mov
lods
je
push
sub
xlat
cli
inc
in
out
outsb
int
ja
clc
out
sbb
xor
sub
xchg
out
pop
jb
nop
bound
lret
adc
mov
mov
cs
mov
loop
lods
xchg
mov
jne
pop
dec
adc
mov
push
and
ja
jae
lcall
pop
inc
xor
aad
sub
fildl
lahf
jge
cmpsl
mov
cmp
insb
cmc
sbb
push
sarb
leave
test
cwtl
repz
mov
movhps
mov
lods
pushf
dec
int3
dec
adc
jns
cmpb
fadd
lods
push
sub
xchg
fbld
or
cs
dec
dec
outsl
push
ja
sti
js
or
xchg
gs
fimull
ljmp
lock
jno
inc
add
xor
jb
stc
and
push
pop
mov
repnz
das
popa
leave
lea
pop
mov
add
es
add
and
icebp
outsl
jg
ds
jp
into
dec
mov
fmuls
ret
mov
jle
xchg
sbb
ret
jne
mov
ja
aam
daa
adc
dec
jae
cmpsl
sub
adc
and
stos
xchg
or
ss
vorps
push
xchg
loope
xchg
mov
fstpl
pop
addl
mov
jbe
stos
push
adc
inc
in
xchg
sbbb
das
mov
outsl
mov
movsb
cmpsb
mov
dec
lcall
and
add
cmp
cmp
lods
mov
xchg
mov
xor
dec
mov
inc
outsb
inc
test
inc
js
les
lret
pop
mov
popf
push
and
xor
adc
and
inc
pop
out
mov
pop
sub
sbb
or
mov
jge
les
xchg
pop
inc
jns
outsl
cwtl
int
pop
pushf
mov
push
lret
push
nop
stos
push
pop
xor
aam
sbb
cmpsl
inc
add
je
pop
repz
arpl
loope
loope
mov
divl
jmp
scas
nop
bound
inc
xchg
je
and
adc
mov
test
ds
mov
dec
ret
and
jmp
pop
push
call
std
xchg
cmp
stos
push
cmp
in
fiaddl
rorl
lods
adc
pop
jbe
sbb
sbb
out
push
pop
in
or
sub
xor
jae
stos
frstor
arpl
jnp
test
jno
dec
movsl
cli
pop
and
ret
sarl
push
mov
jno
sahf
xor
stos
jo
dec
minps
ret
lret
xchg
or
fistps
les
imul
pushf
repnz
xchg
or
inc
nop
or
inc
pop
mov
jle
sbb
fwait
mov
add
xchg
std
sbb
sub
popf
xlat
shl
cmc
push
idivl
xchg
pusha
xchg
aas
inc
mov
leave
stos
cmpsb
mov
cli
mov
movsb
lods
ret
push
dec
mov
or
sbb
cmp
mov
inc
inc
jae
imul
aaa
pop
mov
loope
fildll
pop
stc
sub
fwait
xor
daa
test
in
jp
ljmp
mov
or
addr16
rclb
addl
enter
jle
scas
in
iret
dec
xchg
dec
or
push
outsb
sub
pop
repnz
add
xor
adc
fisttpl
mov
adc
dec
cmp
pop
ud0
ljmp
xchg
push
fcoml
loope
xlat
mov
or
rcrb
sbb
inc
clc
adc
mov
mov
and
loop
push
or
rdmsr
mov
es
das
xor
sbb
mov
movsl
push
lods
nop
cmovge
mov
push
shrl
dec
gs
push
out
jne
dec
addb
xor
inc
xchg
jns
lods
out
lret
sbb
into
loop
fnstenv
xchg
jp
push
push
sbbl
jbe
push
adc
mov
or
jecxz
xlat
sbb
sbb
das
push
dec
mov
fstp
dec
pop
xor
pop
or
push
repnz
cmpsl
icebp
or
call
jl
jge
xchg
xchg
lods
sub
dec
aad
cli
arpl
adc
push
cmc
xchg
push
mov
mov
int3
adc
and
es
fsubrl
es
cmc
lcall
cmpsl
pop
mov
fdivs
in
popf
js
pop
jo
shlb
cmpb
sbb
outsl
pop
imul
mov
cs
and
cwtl
or
addr16
stc
fsubrs
inc
xchg
cmpsl
popa
sbb
or
js
pusha
call
hlt
push
repz
outsl
pop
mov
push
and
lret
out
pop
or
and
sub
adc
pop
aas
lahf
jo
mov
leave
add
enter
inc
jmp
or
jae
sub
dec
in
icebp
sbb
xchg
cmp
pop
negl
test
icebp
inc
push
mov
inc
jns
xchg
ja
mov
insb
xorb
movsb
cmpsl
xchg
mov
int3
movsl
es
out
leave
test
rorb
mov
js
arpl
jmp
or
adc
pop
mov
jl
loop
mov
test
jge
sub
loope
insl
push
movaps
bound
and
cmp
sbb
rcl
xchg
pop
ret
xchg
mov
jb
stos
lods
shrl
fdivl
pusha
add
loope
and
sahf
dec
cmpsl
lods
mov
dec
sub
inc
imul
pusha
into
rolb
or
pop
dec
int
aaa
jl
repz
nop
pop
in
add
int
push
loop
push
mov
mov
or
nop
out
fdiv
idivl
aad
add
mov
pusha
scas
dec
cmp
cwtl
cmp
fsubl
pop
xor
dec
js
mov
dec
stc
pop
jb
and
push
movsl
out
fdivr
add
sbbb
cmpsl
cli
arpl
jg
gs
popa
aas
pop
push
xchg
push
daa
js
push
ljmp
adc
xchg
adc
cmpsl
and
sub
shrl
or
fwait
test
inc
or
sbb
insl
loope
fidivs
mov
and
lods
sti
mov
cmp
ds
ret
lret
sub
stc
add
mov
push
xchg
xchg
sub
lret
es
pop
in
cmpl
dec
xlat
pop
push
mov
mov
enter
xor
jp
dec
mov
les
inc
dec
pop
xchg
jo
rcrl
mulb
lds
cld
push
or
std
cs
sbb
int
pusha
ficoml
lods
mov
rclb
cld
or
cmpsl
jno
jno
pop
mov
sub
rorb
fdivs
ret
and
popf
cs
ret
rorl
mov
mov
mov
adc
outsl
mov
xchg
add
jb
adc
fiadds
dec
mov
xor
xchg
fucomip
aad
out
add
add
jle
push
lcall
jae
rcrb
int
gs
adc
push
and
lods
test
repz
jnp
mov
mov
lods
mov
pop
mov
dec
jl
insl
mov
and
adc
inc
mov
int3
push
insl
mov
call
and
push
into
gs
mov
pop
sbb
loop
sub
mov
pop
add
mov
push
or
mov
xlat
sub
orl
jge
fstps
mov
or
aaa
sahf
lahf
mov
pop
cmp
mov
clc
xor
mov
dec
mov
arpl
ds
push
pop
or
ljmp
hlt
leave
std
mov
stc
lock
dec
sbbl
jl
xchg
inc
jl
and
push
or
test
cmpsl
mov
and
ljmp
lds
adc
dec
mov
je
lods
std
ss
xchg
jno
int
sub
inc
or
or
test
clc
mov
mov
adc
out
shrl
scas
push
mov
jb
jle
and
inc
stos
hlt
orl
add
xchg
lret
sbb
push
sub
shlb
mov
jmp
fnstenv
fwait
enter
sahf
sbb
fistpl
mull
pop
and
pushl
ljmp
into
xchg
ret
jmp
mov
ljmp
jmp
mov
fisubs
cmp
addr16
aaa
jo
addb
stc
fwait
insb
push
test
jb
cli
or
lahf
xchg
or
adc
jns
ja
dec
jne
cmp
and
mov
lret
adc
cmp
mov
pusha
roll
xor
push
jecxz
addl
scas
xchg
daa
cwtl
adc
daa
jmp
cmp
daa
cmpb
xchg
aam
dec
lods
xor
es
push
mov
shl
cltd
out
xor
mov
jp
adc
sub
dec
daa
lcall
in
dec
jl
es
mov
sub
pop
imul
loop
inc
jp
mov
orl
sbb
dec
jno
pop
aad
push
scas
out
shr
dec
dec
xor
cmc
fcoml
pop
adc
add
xchg
xor
ret
loop
in
inc
imul
and
and
orb
and
loope
nop
inc
aad
rcll
xchg
mov
int
addr16
jecxz
cmpl
imul
inc
inc
lahf
iret
in
inc
mov
inc
sub
mov
mov
push
pop
mov
clc
stc
inc
and
cmp
mov
push
pop
sub
jbe
jns
enter
rolb
int
in
test
push
enter
xor
out
mov
xchg
sbbb
shl
es
jne
dec
push
arpl
sarb
dec
out
outsb
enter
sbb
cmpsb
mov
ljmp
outsb
popf
int3
push
or
sahf
cmpsl
dec
mov
outsl
aaa
ja
mov
call
mov
std
imul
std
adc
mov
xchg
imul
fcmovnb
xchg
invd
mov
lahf
add
add
pop
and
add
into
andl
stc
pop
roll
and
sbbl
adc
inc
les
adc
movsl
add
adc
es
call
pop
aaa
bound
pop
fs
push
aam
shl
xchg
jb
mov
cld
ja
push
lret
or
jbe
xor
jg
rol
popa
push
fiaddl
sbb
mov
adc
gs
dec
sbb
shlb
das
inc
cmpsl
out
ja
les
xchg
cmc
cmp
xchg
loop
push
icebp
roll
push
test
mov
cld
cwtl
into
dec
rorb
rcrl
xchg
cmp
or
outsl
popf
stos
and
movsl
inc
jge
mov
jno
or
mov
std
icebp
loopne
jmp
ss
dec
loope,pt
shlb
scas
adc
in
out
imul
add
sub
and
sbb
inc
sub
lcall
push
shrl
or
or
xor
in
mov
push
dec
test
cmpsl
xchg
fadd
xchg
imul
mov
pop
loopne
jae
cltd
mov
mov
stc
jo
hlt
fs
and
movsb
xor
test
stc
ret
rolb
sub
les
enter
push
add
lret
pop
leave
insl
xor
push
pop
cmp
sbb
nop
cwtl
cmpsl
push
pop
mov
mov
lods
das
scas
shrl
sbbb
cmpsl
arpl
mov
js
pop
nop
mov
jge
pop
int
dec
rcrb
subl
and
testl
add
frstor
repz
lea
ja
nop
mov
xchg
mov
lds
push
ljmp
mov
js
mov
add
jo
into
into
xchg
cmp
stc
test
xchg
lock
loopne
mov
cmpsb
test
out
xor
sub
outsb
sub
cmp
notl
mov
ja
xchg
scas
repnz
pop
out
lcall
xor
xor
out
xchg
mov
lret
dec
pop
inc
xchg
cmp
mov
into
sbbl
fstp
cli
cmp
les
sub
inc
sub
add
aaa
lods
pusha
jmp
cmp
pop
mov
js
push
push
in
dec
inc
inc
dec
adc
fwait
es
xchg
add
lret
inc
decl
pop
jne
cmc
dec
bound
into
ljmp
jg
out
adc
sbb
cmp
sbb
jne
add
test
pop
sbb
pop
xor
jnp
subb
adc
cld
sahf
std
enter
cld
jnp
int
sahf
in
in
mov
xchg
jns
xchg
jae
clc
sbb
loopne
and
jle
dec
add
addr16
and
jne
mov
mov
mov
jge
xchg
or
aad
les
aaa
ret
mov
mov
xchg
aaa
test
jbe
mov
jo
stos
jp
nop
mov
imul
or
jae
push
jl
shlb
add
inc
repz
loope
xor
and
aas
std
fs
lea
mov
jae
jae
fnsave
shrl
xor
insl
push
fisttps
js
jne
js
aas
mov
scas
add
jle
loop
daa
ror
je
xor
jmp
xchg
sbb
push
and
mov
sub
xlat
cmp
or
fwait
sbb
mov
aad
fcom
and
mov
fldenv
mov
adc
sub
fistl
jb
jg
push
mov
sbb
cwtl
fsubr
xor
das
rolb
or
xchg
pushf
andl
mov
sub
push
rcl
push
push
test
fdivl
jns
imul
or
stos
loopne
call
ja
push
dec
dec
sbb
mov
dec
mov
push
jmp
cmpsl
std
sbb
outsl
in
shrl
dec
out
add
pop
dec
add
es
add
shl
sub
push
iret
sti
mov
push
in
idivb
push
dec
les
lahf
pop
flds
cli
add
icebp
ss
cmc
xor
aad
lock
push
and
mov
mov
xchg
or
fwait
pop
inc
jbe
push
outsb
outsl
outsb
inc
sub
js
imul
push
sbb
lret
add
lret
cmp
lods
pop
ss
mov
mov
in
mov
outsl
lahf
scas
push
or
mov
dec
and
sbb
stos
lea
arpl
inc
enter
and
movsl
in
cld
fnsave
push
stos
iret
inc
or
testb
xor
outsl
add
push
add
lds
jg
push
bound
mov
mov
sub
jnp
mov
jl
aad
movsb
push
movb
jp
test
nop
push
scas
fsubr
aaa
and
or
lods
add
pushf
xchg
daa
inc
cmp
and
in
sbb
gs
cld
sar
mov
jecxz
xchg
outsb
sbb
loope
add
xchg
out
adc
push
adc
cs
push
dec
bound
xchg
in
fstl
arpl
xchg
loop
rcrl
push
xchg
pop
hlt
sbb
jns
nop
mov
xor
cs
mov
sub
pop
mov
fsts
mov
push
mov
insb
mov
popf
xchg
inc
pop
jp
xlat
pushf
xor
dec
mov
popa
pandn
aaa
and
stc
jmp
cld
fisttpl
mov
mov
xor
push
dec
xchg
mov
je
bound
ljmp
shll
add
mov
and
jecxz
sar
mov
mov
jns
in
cmpl
fsubl
nopl
xchg
cmp
sbb
cmpsl
and
cs
outsl
test
push
mov
cli
aam
movsl
xlat
mov
fcmovnbe
fmul
jp
pop
push
ret
and
pusha
push
adcl
cs
pushf
loopne
cmp
dec
xor
sbbl
add
mov
add
aas
dec
stc
outsb
pusha
and
movsl
dec
and
mov
insb
popf
int3
popf
leave
xorl
sub
nop
mov
enter
outsl
xor
pusha
sbb
jmp
and
std
sub
push
inc
mov
aas
dec
adc
mov
lcall
push
das
es
cmpsb
or
dec
scas
sbb
test
xchg
inc
cmpsb
sahf
mov
fdivl
adcb
test
fcmove
mov
xchg
jmp
add
dec
sbb
fmuls
inc
adc
sub
pop
and
aad
inc
cwtl
frndint
int3
cmp
sbb
cmp
push
add
xlat
or
je
pop
xlat
mov
imul
rorb
mov
lea
sarb
adc
mov
cmp
or
cld
add
int3
and
lea
or
daa
jae
out
ror
push
inc
xor
jne
push
and
xlat
add
xchg
push
leave
movsb
dec
push
dec
in
mov
sbb
enter
dec
movsb
push
jge
dec
test
xchg
lea
add
dec
sub
sahf
xchg
inc
fs
mov
aam
mov
repnz
inc
test
and
mov
and
push
add
mov
test
out
cld
inc
jmp
adc
or
aas
jmp
loop
sbb
sub
push
xchg
xor
jo
call
xor
pop
rcrb
hlt
inc
mov
sub
adc
pop
mov
push
push
pop
mov
data16
sbb
cwtl
lcall
xchg
in
jge
inc
int3
loope
xor
pop
scas
aas
daa
dec
inc
pop
insl
and
sbb
add
leave
xorps
add
adc
cmp
sarl
data16
movsl
adc
hlt
dec
xchg
jne
sbb
insl
int
pop
jl
mov
lret
inc
lcall
test
cmpsl
or
and
mov
test
sbb
cmp
jle
nop
jo
mov
or
ret
cmc
pushl
sbb
ds
test
pop
and
and
and
mov
mov
cmc
pop
pop
inc
adc
and
std
clc
jns
mov
shll
push
xor
rcrb
add
stc
jno
stc
inc
cmp
cmp
cmp
pop
xor
das
cmp
xor
das
or
xchg
pop
into
mov
cmp
lret
mov
pusha
sbb
mov
ljmp
dec
jge
shll
cmp
hlt
cli
add
into
push
jmp
jns
sub
into
ss
mov
and
pop
mov
sbb
dec
popf
rorl
fdivl
mov
mov
movsb
or
cmp
pushf
ljmp
xor
adc
inc
push
lcall
sbb
mov
roll
shr
push
cmp
out
pop
or
or
jb
ficompl
add
inc
jnp
inc
in
adc
cmpb
cmp
shlb
sub
inc
mov
mov
sub
cltd
enter
cmp
mov
mov
mov
imul
mov
movsl
dec
push
adcb
adc
ja
adc
stc
adc
in
rcll
imul
sbb
loopne
mov
sbb
lea
outsb
dec
out
movsl
fisubl
lea
push
sub
xchg
scas
fwait
js
loope
inc
or
push
lcall
sbb
std
sbb
test
cmp
and
and
pop
cmpsb
call
fcmovnbe
jge
sub
negb
call
cmp
dec
pop
dec
or
mov
or
aad
sub
mov
and
pop
repnz
pop
fstpt
ljmp
sbb
outsl
sbb
je
aam
jg
mov
xchg
and
in
jae
sahf
and
sahf
movsl
mov
aam
fstp
je
sti
dec
jo
scas
push
pop
imul
pop
stos
loope,pn
sub
cmpsl
daa
lds
lret
ds
adc
and
adc
mov
stos
dec
mov
jmp
pop
sub
and
ret
xchg
pop
inc
mov
ss
es
add
mov
shrb
out
mov
fwait
movb
lret
cltd
movsb
or
cmp
insb
mov
stos
adc
ds
ds
dec
aaa
ds
xchg
dec
mov
fwait
pop
int3
mov
or
mov
stos
push
andb
mov
or
cmp
imul
sub
out
ds
sub
xor
scas
xorl
ss
adc
pushf
mov
mov
jmp
mull
adc
cmp
pop
pop
dec
mov
outsb
add
mov
jmp
and
addb
movsl
push
adc
sbb
sbb
subl
adc
sbb
sub
fcoml
jo
xor
addb
push
sub
and
pop
movb
movsb
repz
dec
adc
adc
mov
or
faddl
mov
imul
shll
and
mov
sub
sub
pop
test
stos
bound
dec
adc
adc
daa
xor
pusha
and
push
aam
xchg
fdivrl
mov
std
push
adc
adc
loop
jg
dec
sbb
inc
lret
fwait
cmp
mov
ret
repnz
jo
cltd
push
jne
ja
lds
lret
pop
push
adc
sbb
push
std
dec
add
in
sbb
push
cs
neg
pop
outsl
pop
sbb
cwtl
sub
add
or
pop
cmc
sbb
push
sbb
shlb
sti
ret
mov
cmc
mov
loop
shrb
call
out
or
or
sarl
cs
push
xchg
test
nop
pop
outsl
lea
dec
jno
outsb
push
sub
pop
lock
push
cmc
es
test
clc
cli
add
test
add
push
xor
and
mov
or
nop
ret
cmp
iret
cmp
enter
jns
out
lret
lock
movsl
bound
and
dec
xchg
iret
insl
push
cmp
pop
mov
fmuls
adc
dec
cmp
inc
push
jge
cmp
dec
data16
ficoms
dec
jl
xchg
aad
arpl
inc
flds
add
mov
dec
sahf
jp
rcll
lods
push
mov
sbb
js
shlb
outsb
in
mov
push
lret
dec
ret
imul
jbe
movsl
les
jl
rcrb
rcll
and
push
sub
std
inc
in
sbb
shlb
or
lds
jl
xor
cmp
mov
popa
and
repnz
inc
pusha
les
add
jmp
push
inc
test
repnz
sbb
test
inc
sti
jo
xor
scas
repz
sbb
xchg
sarb
adc
or
lahf
mov
mov
mov
mov
jbe
cmp
jp
and
jnp
pop
pop
imul
mov
sub
sarl
xor
xor
jns
mov
pop
pop
leave
lock
cltd
imul
testb
paddb
lods
inc
ss
dec
or
rcr
jmp
xor
xor
xchg
mov
sbbl
rcl
and
dec
lods
mov
fldcw
scas
aad
mov
inc
es
xor
lret
loope
pusha
into
add
test
test
pop
or
jg
lds
icebp
or
cli
xor
sti
das
xchg
mov
decb
movb
punpckhdq
push
mov
inc
sbb
xchg
lods
xor
sar
iret
and
cmp
or
ss
arpl
shll
mov
and
jmp
adc
push
push
ficoml
xchg
mov
sub
subl
inc
jbe
mov
js
dec
jp
popa
ja
mov
lods
mov
inc
out
dec
aas
dec
lcall
sbb
mov
add
mov
xor
clc
jg
or
dec
mov
les
repz
stos
mov
cmpsb
lods
outsb
add
xor
jl
fwait
call
jp
sbb
scas
nop
sbb
xchg
lcall
and
sub
test
add
jl
enter
sbb
lods
repnz
lcall
xchg
imul
popf
lods
push
add
data16
cmp
xchg
insl
fcompl
jmp
fisubrl
movsl
jne
popf
cld
sub
cli
dec
and
xor
rorb
lods
dec
sub
std
xchg
adc
popa
adc
arpl
fdivs
icebp
sbb
aaa
jge,pt
and
and
xchg
pop
pop
jns
xchg
xor
cs
ljmp
rolb
les
mov
xchg
cmp
xor
addr16
push
iret
mov
out
add
aam
loopne
mov
test
mov
cmp
popa
ss
dec
fisttpl
xchg
scas
dec
jecxz
aad
test
sub
loopne
into
lods
add
xchg
xchg
das
push
add
hlt
rcrb
dec
sbb
xchg
ret
stos
cmc
aad
adc
shll
inc
mov
add
into
adc
in
sbb
int
xchg
sbb
popf
mov
add
into
nop
mov
mov
sub
movsl
pop
cmp
sahf
ficomps
mov
loopne
aas
push
int3
add
mov
pop
stc
sbb
mov
jmp
xor
add
xchg
sarl
cmp
fdivr
loope
cld
test
cli
xor
cwtl
testl
and
mov
or
sbb
jecxz
leave
inc
mov
shlb
xchg
inc
cmp
stc
stos
in
sbb
push
sbb
lcall
jp
lsl
push
mov
jnp
cmp
icebp
xchg
cmp
mov
mov
inc
pop
inc
mov
xchg
add
scas
fldenv
mov
call
pop
idivb
or
sbb
iret
and
mov
mov
mov
dec
movsb
dec
cmp
ja
push
notl
xor
and
cmpsb
add
lods
mov
or
mov
dec
push
fstps
sbb
negb
push
icebp
mov
xor
jle
orb
adc
jb
jb
pop
sbb
jle
xchg
xchg
and
inc
xor
adc
pusha
xchg
scas
outsl
fistl
pop
psllw
int3
push
hlt
mov
outsl
flds
push
push
jne
pop
fistl
dec
push
jae
int3
jmp
mov
push
notb
test
pop
mov
sbb
adc
arpl
popa
jp
mov
addl
pop
imul
aas
xchg
cmp
inc
xchg
inc
and
sbb
nop
adc
mov
mov
cmp
lea
mov
pop
jp
jl
mov
mov
mov
adc
xchg
jmp
clc
sbb
jns
daa
add
ja
and
lods
test
sbb
inc
or
or
arpl
int3
sbb
pop
cmpsb
dec
inc
lods
inc
pop
mov
sub
aas
movsl
mov
int
cmc
fidivl
lret
sub
scas
fiadds
imul
xchg
iret
mov
and
fsubrl
push
movl
int
call
mov
cmp
out
icebp
cmp
cld
and
cld
sbb
lods
outsl
loop
std
xchg
mov
mov
mov
cwtl
ror
sub
test
cmp
jl
out
lds
loopne
sub
push
lcall
bound
repz
cmp
mov
sub
lahf
adc
idivb
leave
cwtl
fcoms
sub
xlat
cli
imul
ffree
push
sub
mov
xchg
lret
aad
or
dec
data16
in
sub
fistl
adc
cmp
sbb
and
mov
test
jnp
call
cwtl
or
sub
lea
les
in
shll
gs
dec
cmp
mov
test
sub
push
xchg
or
ss
sbb
mov
mov
mov
popa
cmc
repz
int
xlat
xor
xor
insb
cmpb
test
enter
cmp
jbe
in
adc
mov
movsb
jbe
lahf
dec
adc
push
testb
popf
sub
sti
dec
pop
adc
mov
sbb
stos
bound
inc
lds
movsb
cltd
dec
mov
pop
cli
fld1
ljmp
xor
andl
inc
jae
mov
insb
int3
mov
mov
xor
mov
or
mov
daa
loop
or
adc
popa
inc
test
add
mov
stos
inc
stc
lea
pop
dec
fiadds
jl
movsb
xor
pop
or
mov
bound
push
les
xor
mov
xor
sahf
dec
loope
movsb
loopne
idivb
lds
pushf
mov
xor
mov
cmpsb
repz
stc
mov
push
dec
ljmp
rclb
adc
aas
jecxz
xor
stos
xor
dec
mov
daa
shrl
mov
sbb
shlb
or
push
arpl
stos
out
inc
sbb
cmp
xor
dec
in
dec
aaa
jnp
sahf
dec
or
xor
mov
cmp
pop
jbe
outsl
ret
xor
addr16
inc
lret
add
ja
push
mov
or
dec
pop
jecxz
ficomps
or
xchg
mov
inc
or
loopne
sbb
lret
jae
fldt
shrl
mov
aam
int
xor
push
ja
jne
xchg
and
pop
push
ss
sbb
cld
xor
mov
stc
in
adc
psrlw
pushf
imul
lock
adc
test
les
aaa
out
loopne
mov
or
jbe
test
jae
xor
lcall
mov
cmp
ror
out
xchg
mov
sbb
pop
cmp
incb
aaa
inc
dec
fdivs
mov
pop
jecxz
arpl
in
std
int3
sbb
xchg
mov
std
mov
mov
jb
lahf
lret
ja
push
fs
add
js
int3
insl
push
mov
lea
dec
mov
sti
ret
pop
mov
movsl
sti
orl
das
pop
push
xchg
ret
es
mov
jno
insb
or
pop
cmpsb
xor
jo
xchg
pop
mov
shrb
jl
pop
sub
int3
rcrl
jns
icebp
xchg
loopne
jle
rolb
out
popa
dec
orb
jb
sbb
cmp
sbb
arpl
imul
push
subl
test
jb
iret
mov
mov
sbb
js
adc
cmp
cmp
mov
fwait
mov
dec
dec
cmpsl
jns
and
inc
aas
mov
add
jmp
cwtl
gs
push
out
pop
in
cmp
hlt
ret
mov
xchg
or
pmaxub
nop
rcrb
pusha
lods
pop
inc
dec
testb
push
push
lods
mov
cmpsl
dec
int3
scas
fldt
in
mov
push
pop
xor
std
shrl
leave
aad
sub
mov
pop
inc
jl
pop
dec
shlb
and
std
insl
sub
je
in
imul
cmp
sbb
movb
imul
sahf
mov
sbb
icebp
outsl
jmp
das
push
mov
loopne
aaa
cs
mov
shlb
les
loope
dec
das
test
pop
or
and
lods
sahf
shrb
mov
enter
inc
fdivr
loopne
cmp
int3
lods
xor
ljmp
incl
jecxz
xchg
cli
addr16
add
and
xor
stos
int
rcr
in
lock
pop
adc
jns
mov
testb
cmp
xlat
jns
mov
fwait
inc
cwtl
mov
push
iret
test
push
sti
xor
push
jb
int
pop
adc
pop
mov
pop
pop
sub
js
push
mov
aam
inc
scas
enter
mov
mov
pop
into
dec
jg
sub
in
xor
or
push
or
movsl
sbbl
scas
jecxz
mov
mov
lock
or
testb
sub
sbb
pop
add
cmp
dec
mov
push
push
imul
imull
sbbb
add
jecxz
aad
dec
dec
add
add
jno
and
push
jecxz
shrb
ret
sbb
and
imul
jb
mov
gs
inc
mov
rol
add
subb
xchg
xor
outsl
rcll
call
stos
test
pop
xchg
mov
dec
mov
aad
enter
jle
std
xchg
std
out
imul
mov
inc
notl
movl
add
push
fdivrl
push
je
popa
cwtl
mov
add
std
pop
hlt
xor
jmp
mov
stc
push
push
inc
addb
daa
adc
xlat
dec
push
xor
push
cmpsb
mov
mov
dec
movsb
data16
je
xor
int
ljmp
fnstsw
cmovge
dec
test
scas
orb
xchg
xchg
inc
mov
mov
mov
jb
loope
addr16
outsl
repz
or
adc
mov
ss
mov
jmp
push
in
adc
mov
pop
fnclex
fsubs
xor
out
pop
jne
cmpsb
mov
jl
jnp
mov
imul
call
xor
adc
pusha
out
lds
ret
mov
cmp
insl
push
add
add
and
stos
loop
xchg
aam
orb
inc
and
insb
xor
adc
push
lock
in
cmpsl
shrl
xor
shll
mov
push
add
aas
adc
and
push
cmpsl
lods
popa
out
push
loopne
and
xor
xor
repnz
mov
ret
sbb
movsl
fidivs
jmp
int3
js
adc
test
adcb
sub
div
loop
mov
sub
pop
call
sub
push
mov
nop
flds
mov
in
stos
mov
mov
jno
sub
jl
xchg
mov
mov
cmc
dec
mov
pusha
xchg
adc
cs
aad
add
mov
push
and
pushf
movsb
add
nop
and
fdivrl
push
out
or
into
out
and
rorl
mov
out
sbb
push
lods
ret
shll
fisubs
popa
cli
aam
lods
ja
jmp
fs
js
sub
adc
mov
or
add
inc
sbb
shll
add
in
adcl
aad
push
out
mov
mov
pop
push
xorl
and
fisubrl
adc
pop
mov
xchg
ficoml
cmp
and
push
mov
mov
pop
sub
mov
mov
ja
push
inc
jnp
and
sub
or
xchg
scas
imul
xchg
cmp
dec
imul
jmp
mov
clc
jnp
jp
movsl
shlb
cmp
fdiv
mov
mov
jns
je
jmp
into
ljmp
mov
in
adc
imul
or
push
lret
mov
fcomi
lea
sbb
and
ljmp
add
mov
and
sub
pop
int
cmp
cmp
negb
mov
scas
mov
dec
inc
push
in
sbb
cmp
push
arpl
js
fcoms
jo
mov
xchg
repnz
jae
aam
xchg
add
aam
movsb
sbb
roll
jge
int3
xor
or
jbe
and
jns
dec
pop
es
pop
int
and
pop
adc
xchg
fwait
sbb
lods
test
arpl
or
addb
cmp
push
xor
daa
sbb
push
adc
push
cmp
cmp
xchg
jns
sti
inc
sub
xor
push
mov
out
sbb
lea
popl
mov
mov
pop
mov
inc
cmp
cmp
cwtl
inc
repz
jne
outsb
adc
push
insb
push
enter
pop
sbb
xchg
pop
adc
jle
repz
fnstcw
mov
mov
mov
fs
lcall
inc
sub
lds
movsl
lahf
loope
and
inc
push
mov
loop
push
pushf
mov
sbb
cmp
daa
and
ja
jno
sbb
inc
lsl
add
movl
mov
js
push
push
inc
dec
lret
jbe
mov
jo
insl
ja
sti
fsubl
addl
dec
push
xchg
dec
sub
dec
leave
je
mov
leave
lds
cmpsl
and
dec
in
or
pop
cmovg
mov
imul
bound
cld
jg
dec
test
dec
rolb
inc
adc
fsub
ja
lahf
cmp
sub
iret
sbb
and
scas
out
push
xor
dec
test
mov
mov
scas
mov
xor
sti
test
inc
shll
sub
mov
in
sar
jp
add
sub
cmpsb
mov
je
clc
es
pop
nop
jo
sbb
or
sub
push
or
xlat
in
loope
mov
dec
inc
arpl
mov
xor
dec
jecxz
push
lods
les
xchg
inc
daa
loopne
repz
adc
ja
out
jnp
aad
add
pop
mov
loopne
out
inc
adc
push
jmp
jl
pop
push
xlat
lahf
mov
pop
xor
lds
pop
icebp
add
jg
xor
shll
fsubs
adc
mov
add
jnp
mov
pop
jns
inc
aad
mov
adc
stos
inc
cmp
adc
pop
into
push
jg
dec
sbb
sub
xchg
jge
inc
mov
inc
fwait
mov
add
hlt
mov
pop
out
sahf
cs
cmp
add
ss
xor
inc
xor
add
dec
add
inc
aaa
ds
int3
in
movsb
in
cmpsb
leave
cmp
imul
xchg
lret
dec
push
mov
popa
xchg
in
pop
aaa
xchg
cmp
inc
cmp
mov
add
aas
rol
jecxz
cmpsb
sar
push
jmp
adc
lret
stos
shlb
imul
daa
scas
lock
cli
inc
cmp
outsl
sbb
aam
shr
add
cwtl
call
lcall
and
fnstenv
dec
rorb
popa
int
ffree
rcrb
adc
sub
aaa
mov
stos
popf
pop
ds
mov
inc
mov
rcrl
inc
shrb
sti
push
movsl
fsub
dec
jns
lcall
or
fisubrs
cs
xor
jno
add
aad
push
test
test
mov
mov
cmp
lods
das
xchg
mov
orb
je
mov
jl
xorl
adc
sub
aad
shll
outsl
sub
add
inc
xchg
add
jle
adc
cltd
jns
fdivs
in
popl
loope
xchg
or
sahf
clc
test
sar
dec
into
and
push
js
lods
jle
frstor
and
mov
dec
sub
xchg
in
addr16
or
xor
rcl
ds
add
mov
sti
mov
push
movsb
jns
mov
arpl
cwtl
outsb
cs
adc
sub
xchg
repz
ss
sub
push
ja
xor
rcll
mov
pop
sub
xor
push
ss
dec
jecxz
cmc
mov
test
or
sub
cmp
pop
imul
xchg
xchg
push
ja
insl
xor
mov
test
out
mov
add
add
dec
fdivr
mov
adcb
xlat
mov
data16
js
notb
inc
cmp
test
dec
outsb
aas
nop
mov
lahf
out
jne
cmpsl
imul
and
xor
outsl
pop
mov
jg
insl
or
testl
mull
push
ds
push
push
mov
dec
mov
push
push
push
addr16
xchg
int
sbb
out
mov
dec
xor
lea
add
or
mov
jns
push
ss
ret
jp
mov
test
out
aam
pusha
xchg
and
mov
aam
stos
xchg
outsl
mov
aam
cmovp
mov
xor
pushw
mov
jmp
mov
dec
dec
xchg
fsubp
xchg
jae
scas
xchg
cmpsl
dec
or
std
sbb
xchg
ret
sbb
cs
rcl
mov
call
xchg
dec
xchg
xor
cmp
pop
pop
addr16
xchg
inc
pusha
lods
testb
popf
addr16
inc
inc
mov
adc
cld
xchg
or
sbb
pusha
jae
imul
lahf
cmp
lret
subl
aam
or
gs
or
xor
ret
pop
inc
sbb
cmp
sbb
mov
mov
jge
sub
pop
push
jne
adc
adc
push
jnp
repnz
dec
js
pop
add
hlt
sub
pop
xchg
mov
jecxz
cmp
mov
jae
out
sub
adcb
sbb
mov
and
sbb
ret
dec
jo
je
xor
fcoml
call
sahf
pop
jne
xchg
mov
out
add
hlt
and
push
jle
mov
mov
cs
inc
xchg
jnp
shlb
mov
mov
cwtl
xchg
push
xchg
in
gs
cmp
pusha
adc
iret
rorb
mov
jne
and
and
push
add
cmp
test
ret
xor
lods
pop
ljmp
enter
mov
xchg
lods
aam
push
out
lods
popf
jns
pop
shlb
pop
jb
iret
adc
aas
inc
jmp
mov
mov
push
jle
pop
cli
lahf
xchg
push
inc
jl
pushf
push
mov
cmp
inc
lods
mov
sub
push
mov
mov
lock
xor
outsb
mov
jbe
fistpll
sahf
ror
movsl
pop
ret
xchg
xlat
testl
scas
inc
sbb
adc
push
or
add
sub
stos
cld
icebp
mov
push
sub
out
icebp
popa
or
push
inc
mov
lret
imul
xor
push
out
jp
pop
mov
xor
jo
shrl
lods
scas
dec
fstpl
in
lea
push
sub
sub
into
test
popa
into
fists
xor
aaa
ljmp
cmp
push
push
pop
pop
xor
cld
xor
popf
les
or
mov
or
out
jg
imul
cltd
lahf
stc
gs
sub
mov
shlb
decb
in
shrb
sub
int
xchg
pushf
test
mov
or
adc
test
or
aam
in
push
sbb
stos
bound
jl
sub
jbe
aad
xor
push
lock
rcrb
push
out
inc
cmc
mov
sub
pop
mov
dec
mov
call
cld
dec
pop
and
and
aaa
orl
inc
jnp
into
ljmp
rorl
in
xor
fimuls
cld
lahf
roll
gs
pushf
mov
add
lea
repz
cmp
popa
aaa
in
jmp
cld
out
sarb
mov
xor
mov
dec
in
or
orl
in
mov
or
ja
sbb
in
and
or
xor
out
jne
ds
jmp
fcmovu
scas
shlb
addr16
aas
cmpb
icebp
sbb
add
mov
les
leave
xchg
add
repz
fisttpl
adc
scas
xchg
and
pop
movsb
xchg
jbe
loope
sbb
xchg
lea
lods
pop
and
ror
lods
pushf
out
test
jl
popa
pop
pusha
mov
xchg
mov
int3
out
jp
loope
xchg
push
notl
nop
pop
mov
imul
das
cld
outsl
xchg
and
add
fs
pop
int
fists
dec
xor
mov
shlb
push
jne
test
sub
gs
push
mov
inc
pop
cmpb
cmp
mov
popf
mov
mov
fcoml
pop
ja
or
pop
mov
dec
xchg
jecxz
xchg
mov
mov
adc
in
lret
xchg
ja
imul
sub
pop
xchg
push
cmp
dec
rcr
daa
mov
ficomps
int
bound
movsl
pop
inc
mov
jo
pop
cmp
inc
mov
das
fidivrs
ljmp
xchg
movsl
nop
ja
mov
add
mov
inc
jne
shll
iret
shr
dec
xchg
shlb
sub
jp
cs
imul
cmp
jnp
adc
vaddsubps
jl
mov
pop
pushf
movsb
cmpsl
decb
sbb
push
fiadds
mov
jno
shlb
rcl
ss
and
cmp
pop
scas
fnstenv
sub
pop
add
daa
mov
mov
out
dec
setp
lahf
call
in
sub
jp
arpl
xor
cmp
mov
jne
cmp
rorl
aam
jbe
dec
mov
push
sub
jb
mov
adc
inc
or
jne
mov
jmp
inc
in
icebp
int3
mov
xchg
jmp
or
sbb
fidivrl
mov
mov
cmp
xor
ret
sub
inc
mov
push
push
int
test
xor
xor
jl
sbb
cwtl
push
cmpb
ret
xor
xchg
inc
icebp
xchg
call
mov
cmp
and
aad
sub
jge
and
jmp
cmp
pop
xor
ljmp
inc
mov
pushf
shrl
movsl
lds
movsl
ljmp
adc
or
iret
push
hlt
jo
bound
gs
sub
jp
inc
or
mov
jl
data16
mov
paddq
leave
mov
add
sbb
scas
xor
je
aad
push
inc
mov
test
in
xchg
arpl
adc
aad
lcall
in
aam
sbb
pop
push
push
es
cmp
lret
mov
test
xlat
xchg
jg
fidivrl
fs
imul
movsb
pop
push
cld
rol
decl
js
cli
int
jne
lea
sub
aas
leave
adc
or
rcr
mov
adc
fsubr
mov
lds
rcrl
inc
sahf
xor
push
out
negl
push
movsl
push
sub
enter
loop
push
jae
mov
test
into
xchg
adc
fwait
jmp
not
mov
in
popf
pop
mov
outsb
int
pop
adc
xor
adc
test
jecxz
pop
xchg
or
fsubrl
xor
daa
sub
or
push
sahf
add
aam
push
inc
movsb
cs
loop
jbe
dec
hlt
lock
pop
loop
mov
xlat
adc
scas
mov
mov
jmp
movsl
lock
loop
inc
packsswb
lock
pop
jmp
sbb
fists
mov
mov
test
mov
lret
shrb
pop
repz
gs
call
ja
mov
enter
push
pushf
into
cmp
xchg
xor
sbb
jmp
aam
imull
out
ljmp
or
shll
mov
ja
pusha
into
ficomps
movsl
imul
mov
inc
pop
xchg
test
cltd
push
mov
push
cwtl
out
mov
insl
xchg
repz
mov
pusha
or
pop
push
out
inc
cmp
loop
adc
sub
inc
rorl
sub
adc
ljmp
dec
or
push
lahf
in
ficompl
lock
or
lret
pop
inc
ret
inc
aaa
xchg
aam
or
mov
sub
enter
call
jo
scas
or
mov
movsl
sbb
jae
sahf
int3
mov
outsl
hlt
pop
nop
sbb
cmpsl
das
jle
stos
in
or
rcl
mov
mov
pop
cwtl
pop
lret
bound
mov
jg
pop
inc
jl
pop
loop
adc
inc
lcall
xor
das
aaa
fcoml
sarb
out
lcall
mov
in
pop
je
dec
dec
xchg
pop
pop
sbb
in
repz
lods
dec
mul
xchg
or
mov
rcrb
out
in
mov
mov
xor
repz
dec
jle
in
scas
push
ljmp
jmp
mull
or
jae
aas
mov
sub
sub
push
mov
mov
std
in
mov
xlat
vxorps
sbb
lahf
out
sub
cmpsl
mov
fwait
scas
test
aad
lret
sbb
xlat
push
mov
xchg
ss
xor
lds
sahf
shll
idivl
jns
cmp
shrb
mov
sti
dec
pop
sbb
fisttps
cld
and
pop
push
gs
jne
fwait
sub
cmp
hlt
mov
xor
in
mov
aaa
xchg
jo
push
rcrl
imul
gs
sbb
daa
sub
xchg
sub
adc
add
push
or
lock
dec
cmp
mov
pop
popl
int3
push
sbb
lea
clc
mov
add
scas
jle
jbe
add
jo
mov
mov
aam
rorb
or
dec
adc
insb
xchg
iret
loop
jp
or
lds
xchg
xor
push
mov
leave
jp
or
pusha
dec
push
pop
mov
jo
movsb
adc
xchg
out
fcoms
outsb
test
adc
out
xchg
fcom
jne
mov
push
jl
jl
fcmovnbe
sbb
pop
mov
enter
testb
adc
cli
pusha
testl
std
push
fildl
mov
mov
pop
scas
xor
mov
sub
std
xchg
cli
scas
add
sbbl
outsb
nop
lds
push
adc
jbe
and
inc
pop
shrl
ss
sbb
add
dec
aam
loopne
mov
adc
cmp
mov
mov
sbb
add
sbb
ds
stos
imul
je
push
sbb
test
push
and
cmpsl
pop
and
idivb
adc
in
scas
push
mov
test
addr16
pop
popa
filds
aam
in
subb
mov
and
pop
pop
movsl
mul
xchg
imul
jecxz
add
add
out
out
add
dec
sbb
inc
repz
in
sbb
adc
rcrb
adc
sub
mov
jae
pop
xor
stos
in
ss
pop
clc
es
pop
mov
pop
std
xor
mov
pop
into
xor
pop
cltd
and
orb
xchg
sub
cld
sub
cmp
push
jp
push
and
adc
lahf
pop
or
mov
inc
mov
xchg
mov
jne
cwtl
out
jp
movsl
ds
iret
pop
shl
pop
mov
sti
or
ret
shll
js
addr16
mov
xor
int3
mov
lret
jno
popa
imul
or
rcrb
adc
outsb
mov
pop
dec
stos
dec
jo
or
loopne
sahf
movsb
inc
lock
cmp
movsb
sbb
dec
fnstsw
stc
ds
dec
adc
mov
rorl
and
xchg
add
dec
xchg
inc
lds
jnp
lock
int
inc
add
sub
testl
mov
lods
test
movsl
and
adc
jle
inc
xchg
pop
nop
gs
dec
xor
loop
adc
cmp
icebp
xor
add
es
pop
lods
dec
das
mov
orb
lcall
add
sbb
inc
ja
pop
xchg
mov
mov
mov
fdiv
mov
mov
mov
stos
cld
repnz
lods
fisubs
or
out
lods
out
lret
inc
in
sub
push
cs
fidivrs
sbb
insb
pushf
inc
lds
shll
es
inc
or
adc
push
insb
jmp
jne
lods
les
mov
xor
sub
adc
pop
push
adc
add
inc
mov
and
cmp
jnp
sbb
dec
movsl
addl
cli
out
nop
mov
xchg
lea
xchg
mov
in
outsl
icebp
pop
mov
scas
les
fs
bnd
leave
punpckhdq
and
dec
repz
jnp
inc
pop
lcall
rcl
out
push
xor
push
push
mov
mov
sbb
call
jbe
jns
pop
neg
movsl
std
sbbb
pop
shrl
jo
or
loopne
mov
cs
lods
mov
xchg
inc
mov
incl
cld
add
ret
mov
insl
lret
sub
push
dec
stos
xlat
mov
rcl
ja
cmp
popl
shlb
xlat
in
test
push
lret
add
daa
sbb
mov
sub
test
clc
out
loopne
xor
in
and
rorb
or
pop
andl
or
cmp
push
mov
xchg
or
insb
xchg
out
jb
scas
cmp
and
shll
dec
int
jmp
inc
sub
jle
movsl
out
ja
add
movsl
int3
idiv
lret
rcrb
int3
mov
shlb
outsb
push
imul
push
sbb
lods
sub
bound
jne
das
ret
ds
mov
rorb
push
mov
ds
xchg
inc
jmp
and
fbld
push
xchg
pushl
push
add
cmp
pusha
bound
jno
xchg
dec
int
pop
xchg
arpl
imul
int3
mov
lret
dec
pop
dec
and
dec
and
movsl
sub
mov
sbb
jnp
lods
pop
aas
test
inc
rclb
cmpsl
push
or
and
ficompl
into
add
dec
addr16
dec
mov
out
pop
cmpsb
inc
lds
shrl
sbb
arpl
sub
inc
fs
subb
fstl
mov
aam
addr16
repz
dec
and
aad
std
imul
leave
ljmp
push
mov
pop
mov
jmp
aad
dec
fst
int3
addr16
imul
add
popa
sbb
loopne
mov
push
andl
repnz
pop
rorl
punpckhbw
jmp
inc
shrl
in
test
shl
jg
mov
mov
popa
dec
pop
or
mov
add
xor
aas
mov
hlt
lods
jae
fistpl
sub
jg
pop
mov
sbb
pop
cmp
out
dec
sbb
sti
ret
int
mov
int
fsts
cmp
scas
fcoml
dec
imul
test
ds
push
sbb
sbb
inc
push
ds
iret
jge
xchg
filds
scas
shrb
dec
cmp
ss
lock
sub
add
popf
scas
xchg
enter
das
xchg
push
xor
mov
or
mov
cwtl
aam
ficompl
stc
lcall
sbb
sub
vmovdqu
xor
ds
into
lcall
add
pop
pop
mov
iret
adc
mov
add
repz
mov
out
xchg
in
or
dec
icebp
xchg
pop
movsb
or
xchg
repnz
jp
jg
add
inc
xchg
lea
filds
repnz
lock
and
jns
js
mov
loop
ss
xor
iret
sub
int3
xchg
test
arpl
out
sbb
shl
add
outsl
loop
outsl
cli
fsubs
fistpl
xlat
sti
sbb
insl
popf
pop
cmpsb
mov
dec
in
dec
lcall
loope
insb
popl
aaa
lahf
mov
pushf
icebp
mov
push
mov
subl
cmp
cmp
mov
rcl
jns
iret
sbb
in
fimuls
js
mov
mov
xor
stc
in
mov
mov
jnp
jge
gs
xor
cmp
loopne
mov
xchg
or
sbb
add
ds
popf
je
test
add
add
test
push
push
jbe
int
pusha
mov
jb
sbb
dec
mov
or
sub
in
mov
or
xor
xlat
push
test
outsb
mov
pop
es
lcall
add
mov
cmp
cld
jge
out
xchg
sbb
bound
rcll
aad
pop
sbb
or
mov
push
out
inc
test
rcrb
es
cmp
repnz
cltd
lahf
rclb
sub
add
jae
nop
cmpsl
pop
popa
xor
cmp
mov
inc
test
pop
outsl
cmp
lret
dec
xchg
lret
sbb
pop
inc
xor
clc
or
push
push
loope
outsb
lods
push
lods
mov
rcr
inc
mov
fs
loopne
pop
je
inc
or
stos
cmp
mov
aam
stos
inc
mov
adc
lahf
pop
xor
push
inc
hlt
clc
pop
jae
cmp
test
rorb
inc
push
shr
mov
imul
xor
int3
fs
notl
js
addr16
sub
aam
jmp
sub
sub
call
shll
pop
or
dec
cltd
mov
mov
mov
mov
repz
xchg
xchg
sti
cmp
push
rclb
push
outsb
stos
xchg
fsts
shrb
jb
bound
adc
insb
jb
sub
pusha
xorl
add
xchg
dec
pop
js
cmp
lds
cmp
ss
sbb
push
or
inc
iret
add
mov
hlt
lret
adc
filds
rclb
jmp
sbb
xchg
packsswb
out
sub
mov
inc
pop
mov
xchg
lahf
test
push
xor
je
aas
fimuls
sbb
das
add
xchg
push
push
fldcw
fnstcw
lods
cmc
fucom
js
sbb
push
aam
jb
dec
mov
out
mov
xor
repz
hlt
or
cmp
inc
aaa
sub
pop
sub
lds
jne
sub
pop
dec
sbb
gs
js
ja
adc
or
mov
pop
or
or
outsb
mov
insb
mov
and
xor
jecxz
idivl
pop
pop
fldt
xor
pop
roll
fs
mov
in
adc
mov
pop
jle
and
mov
sbb
adc
push
shll
iret
pop
xchg
xlat
sub
jp
imul
enter
aaa
xor
iret
shl
jp
shl
or
push
dec
fldt
test
jmp
jle
and
es
into
out
js
mov
and
or
push
mov
xor
jecxz
inc
cmc
cwtl
mov
sbb
dec
das
or
mov
int3
inc
mov
mov
popa
lahf
shlb
xchg
outsl
ret
mov
cmpsb
inc
xor
fwait
or
pop
mov
vaddss
shld
in
mov
and
fiadds
lret
push
lcall
jmp
mov
fwait
pop
ljmp
mov
loop
xchg
mov
test
in
cmc
inc
test
mov
sub
fwait
push
jl
leave
xchg
jbe
mov
pop
test
xor
sub
pop
adc
mov
shlb
sti
xchg
inc
aad
inc
adc
call
ret
sub
loopne
jp
stos
cmc
cmp
dec
sub
push
mov
dec
mov
inc
or
fdivs
cmp
jp
in
xchg
dec
inc
mov
jg
stc
sbb
pop
mov
or
mov
xor
out
mov
mov
sub
inc
pop
rorb
mov
je
lret
loope
mov
push
mov
testl
and
nop
push
stos
pop
popf
into
mov
lret
pop
lret
push
mov
test
add
mov
cli
mov
testb
dec
lahf
inc
insb
or
enter
call
je
push
fisubs
mov
and
frstor
jge
lahf
in
fs
arpl
clc
jns
add
fcoms
sub
pop
jle
inc
aad
xor
mov
and
cmpsb
push
lahf
leave
cmp
push
add
or
out
loope
or
fsubr
lcall
inc
adc
scas
mov
leave
out
les
adc
dec
rclb
mov
sub
mov
ja
stc
lods
adc
hlt
lods
jo
ds
mov
es
push
repnz
add
mov
test
aam
std
scas
mov
sub
mov
rolb
adc
sti
or
pop
test
in
xchg
xchg
rorb
sub
xchg
dec
push
jge
roll
push
lret
mov
in
push
xchg
jb
mov
pop
fcoms
and
cmp
mov
idivb
push
and
jle
int3
aam
into
jb
xor
sub
xchg
nop
mov
in
mov
jmp
xor
cmp
jl
add
in
sti
and
or
insb
fistpll
xchg
into
add
mov
sub
lods
mov
cmp
fs
call
mov
mov
imul
callw
push
jp
add
mov
mov
ss
setnp
adc
scas
cmpsl
mov
mov
xor
add
cmp
daa
orl
test
mov
movb
jbe
ds
xor
xor
das
xor
fs
fs
adc
push
rcll
mov
sub
xor
jle
faddp
xchg
aad
imul
jne
mov
mov
pop
or
inc
push
mov
push
pop
add
xor
inc
shrb
out
add
roll
push
lret
push
push
cmpsb
jecxz
sub
xor
pop
es
loopne
fwait
xchg
sarb
cmp
jnp
not
inc
cs
push
sbb
ror
ja
aas
das
cmp
rclb
jo
call
jge
and
jb
stc
fs
cmp
push
lret
aam
dec
dec
loope
xchg
push
dec
cmp
sti
fldt
mov
mov
outsb
adc
out
data16
sub
or
mov
xor
push
mov
push
decl
jge
xchg
lock
cmp
nop
or
fimull
pop
fcmovne
sar
es
sub
repnz
notl
ficoms
adc
sbb
or
aad
loopne
lods
push
sbb
gs
inc
mov
icebp
repnz
popf
call
xor
bound
cmp
xlat
cltd
xchg
sar
dec
notb
shlb
and
dec
cwtl
stos
insl
xchg
adc
imul
mov
fiaddl
push
lds
sub
and
notl
or
push
rorb
xchg
adc
fiadds
jp
push
lods
loopne
jl
mov
ss
repz
push
cmp
mov
cmp
mov
cld
pop
lret
xchg
pop
es
inc
jmp
pop
orl
or
jecxz
adc
les
int3
pop
inc
imul
sub
repz
imul
in
and
testb
sub
mov
sbb
add
testl
test
gs
xchg
test
pushf
sbb
decb
sub
leave
adc
cmpsb
stos
in
push
add
push
enter
shrb
lcall
or
jo
popa
in
in
test
imul
sbb
fsubrs
cli
fiadds
lea
aam
pusha
je
dec
call
movsb
inc
hlt
pop
cmp
adc
inc
sub
outsb
idivl
gs
fcmovnb
pop
pop
push
in
jns
pop
xchg
inc
push
mov
dec
inc
fucomi
mov
adc
jnp
cs
xor
ds
aam
lret
jo
xchg
mov
inc
das
lea
mov
ds
xor
and
nop
push
in
sti
fnstsw
push
imul
adc
lock
pop
jae
cltd
jb
jle
enter
pop
sub
sbb
push
push
push
filds
enter
add
mov
mov
addr16
sbb
fbld
pop
testl
mov
syscall
mov
jo
adc
addl
sub
mov
dec
sbbb
test
std
ljmp
lods
xchg
inc
scas
stos
add
and
lds
mov
or
lahf
fistpl
inc
add
cmp
sub
mov
pop
dec
push
aaa
lahf
mov
fildl
decl
lock
jl
pop
jb
popa
or
sbb
mov
dec
push
push
bnd
xor
bound
mov
enter
pop
shll
hlt
mov
in
movsb
add
push
adc
repnz
push
dec
stc
add
add
pop
mov
xchg
mov
out
sub
fsub
xor
fildl
cmp
xor
es
pop
and
in
fdivs
xchg
rcrl
mov
loopne
in
pop
fmuls
test
mov
mov
sbb
sbb
repz
add
movsl
popf
add
inc
xor
or
mov
shlb
mov
das
and
fbld
aam
mov
fiaddl
dec
pop
lahf
lods
mov
mov
enter
lods
cwtl
adc
dec
push
popf
sbb
mov
pop
lret
rcl
lods
scas
cmp
mov
adc
xchg
addr16
pop
fiaddl
and
sub
mov
xchg
push
arpl
dec
xor
xchg
popa
aas
mov
arpl
adc
xchg
mov
shlb
fsub
inc
mov
adc
mov
lods
addr16
jmp
mov
pop
shr
add
mov
mov
pop
cmp
dec
out
adc
out
mov
pushf
je
mov
daa
cwtl
mov
inc
and
lods
mov
jmp
loop
xor
sbb
xlat
pop
mov
daa
adc
mov
into
scas
les
jb
daa
leave
ficoms
push
ja
addr16
mov
in
idivb
dec
out
dec
lods
clc
ret
cli
adc
test
insl
mov
cmp
aad
fcmovnb
or
dec
repnz
decb
cmp
sub
mov
pop
inc
fcomp
lret
ret
pop
pop
jge
jl
cmp
sub
cmp
cs
pop
arpl
mov
xchg
scas
enter
sahf
push
cwtl
rol
xor
mov
push
lahf
ds
sub
ds
cwtl
mov
cmp
push
sub
repz
out
cwtl
or
mov
sub
cld
jle
arpl
mov
dec
jno
mov
jl
pusha
or
ss
xor
out
lods
mov
and
fsubs
enter
out
mov
push
pop
in
or
xor
les
dec
test
xchg
xchg
cmpsl
nop
mov
divb
push
inc
iret
ja
ret
in
imul
icebp
cmp
dec
mov
jae
das
lods
in
or
pop
shl
aam
push
test
add
loop
xchg
repz
rorb
mov
aaa
inc
jp
sbb
jg
imul
add
push
aam
and
sub
pop
xchg
xlat
cmp
push
dec
rcrb
xlat
test
jae
add
lock
mov
or
adc
popa
mov
idivl
aas
sbb
jle
pop
stos
aad
pusha
rcrl
mov
iret
pushf
movsb
loopne
inc
dec
rcrb
sbb
sub
or
add
fdivrl
or
inc
push
mov
sbb
jne
test
out
outsl
rclb
clc
xor
arpl
sub
xorb
mov
movsl
sub
std
aaa
outsl
sbb
push
adc
aaa
movb
test
jle
imul
dec
js
xchg
je
call
adc
fsubrl
insl
fmulp
mov
inc
gs
sti
fwait
addr16
sahf
add
inc
pop
stos
ss
cmpsl
jne
hlt
repz
mov
outsb
fsubs
xor
sahf
push
divb
lds
push
and
jne
outsb
push
iret
sub
dec
in
mov
bound
cmpsl
ret
mov
sub
popf
add
pusha
sti
dec
mov
insb
mov
in
imul
xchg
lods
es
clc
addr16
mov
jp
xchg
aas
fsubrs
scas
mov
pop
rorl
cmp
push
mov
addr16
cmp
jbe
jmp
adc
das
in
das
ss
lock
into
jne
jp
pop
bound
stos
sahf
repnz
ss
sbb
sbb
fisttpl
xchg
add
sub
mov
pop
or
and
xchg
push
fwait
clc
icebp
adcl
mov
jnp
scas
mov
sub
pop
mov
push
mov
add
sti
xchg
int
pushf
mov
sbb
ja
xchg
add
push
mov
sub
mov
das
adc
lahf
packssdw
jbe
mov
js
xor
mov
mov
cmp
lcall
jne
insb
push
shrb
dec
nop
mov
jne
pusha
push
jne
xor
mov
nop
push
sub
push
xor
stc
xchg
and
dec
ss
adc
js
xchg
mov
outsl
xchg
add
push
push
or
or
lcall
sub
sbb
mov
pop
or
mov
jmp
lods
add
shl
mov
std
imul
sbb
push
sbb
inc
movsl
pop
scas
fwait
mov
fstps
push
and
push
scas
xchg
aas
lret
mov
repz
sti
xchg
lret
xchg
lock
mov
or
fdivl
cltd
add
test
shr
push
fistl
dec
fists
jnp
stos
outsl
xchg
push
cmovp
sub
mov
cmpsb
mov
addr16
test
jle
fisttpll
cmp
ss
pop
xchg
and
mov
roll
jge
push
iret
js
or
jp
test
clc
imul
lcall
push
ret
outsl
cmpsb
jg
sbb
popf
shlb
xlat
inc
pop
pop
sub
push
fwait
pushf
cmp
je
fisubl
xchg
cmp
outsb
shlb
cmp
cltd
push
bswap
mov
lods
sbb
xor
andb
adc
ljmp
cld
or
movsb
inc
pop
mov
fidivs
mov
outsl
mov
sbb
enter
fists
sbb
push
and
xor
add
data16
fwait
ss
test
jl
leave
out
inc
movsl
or
mov
fcom
push
push
pushf
pop
ljmp
mov
scas
popf
sbb
push
pop
adc
lret
add
mov
mov
popf
push
pop
mov
sbb
scas
or
jns
dec
add
dec
popa
sbbb
push
outsl
int3
push
clc
add
and
mov
ret
cltd
mov
mulb
or
sbb
cmpl
inc
mov
mov
ja
aaa
fwait
scas
data16
lahf
test
inc
rcrl
adc
push
jle
jecxz
and
or
clc
push
and
dec
repz
stos
adc
pop
mov
testb
mov
cmpsl
fstl
out
dec
jmp
je
aam
pop
test
fstpt
rcrl
xor
ret
cmpl
test
inc
cmp
hlt
mov
popf
lods
xor
sbb
jge
adc
xchg
jp
imul
out
adc
pop
scas
pop
add
stc
jno
test
jns
aas
imul
and
cltd
aad
mov
popf
out
xor
mov
mov
daa
xchg
push
inc
lods
adc
inc
mov
roll
mov
mov
js
in
push
ss
daa
jge
dec
mov
imul
clc
aam
popa
icebp
sub
push
add
inc
adc
cmp
jns
repz
lds
sbb
and
js
out
add
cmp
pusha
mov
dec
call
push
sarb
repnz
gs
pop
fndisi(8087
mov
xchg
sbb
mov
addr16
and
sub
aas
out
xchg
lahf
jbe
inc
inc
mov
xor
out
mov
mov
xlat
ljmp
mov
mov
xchg
pop
jge
pop
add
sbb
xor
dec
push
ja
add
and
jg
add
lcall
mov
dec
push
aaa
dec
inc
pop
gs
or
dec
mov
inc
inc
mov
les
outsb
push
xor
sbb
iret
int
ss
loope
push
out
loope
xchg
pushl
test
das
stos
mov
test
mov
xchg
pop
pushf
jmp
xchg
je
enter
ja
pushl
mov
rorb
jmp
ret
ficomps
ja
add
mov
mov
inc
fsts
cs
fidivl
mov
shll
movsl
jle
outsl
shrl
pop
sbb
pop
cltd
movsl
mov
int3
dec
in
jge
mov
sub
stos
out
mov
inc
cmp
rorb
movsl
jae
fwait
ljmp
mov
repz
neg
arpl
xchg
les
mov
mov
jbe
pop
cmc
mov
mul
jno
clc
jle
pop
xchg
in
sbb
or
es
adc
pop
push
movsl
pop
cmp
sbb
or
add
into
push
shrb
inc
cmp
fisttps
sar
jl
cld
adc
into
xchg
testb
and
popa
xchg
push
fwait
lock
or
cmpsb
nop
sbb
push
stc
stos
mov
es
mov
dec
call
into
lock
int
sbb
mov
aad
xor
pop
js
mov
jp
lret
dec
mov
cmp
mov
jl
adc
nop
mov
mov
push
adc
cmp
xchg
mov
mov
cmp
out
popa
cmpsl
xor
lahf
jne
insl
push
pop
test
mov
push
fcmovnb
jnp
fwait
xor
sbb
push
pop
push
inc
add
shlb
js
pop
repz
notb
and
add
jo
dec
mov
roll
scas
push
xchg
sub
sahf
jle
imul
push
iret
mov
outsb
sub
mov
dec
add
dec
lcall
inc
cmp
clc
test
bound
idivl
inc
mov
cmpsb
lcall
and
push
pushf
mov
test
sbb
inc
sub
shlb
push
negl
jb
outsb
or
loope
dec
fildl
divl
sti
frstor
mov
xchg
mov
arpl
cmpsl
sbb
addr16
mov
or
pop
stos
fwait
movsb
and
lods
jne
pop
mov
cli
adc
ljmp
adc
jb
xchg
and
gs
inc
das
fs
and
dec
arpl
sysexit
pop
lds
ret
sub
mov
imul
cwtl
aad
loop
out
js
shlb
icebp
aad
cld
das
sub
aaa
sub
adc
fcoms
add
lcall
popf
mov
add
mov
pop
lret
pop
pop
movsb
inc
aam
stos
dec
push
addr16
jg
adc
mov
dec
mov
or
push
push
nop
mov
pop
mov
lahf
add
mov
mov
jmp
fistpl
jne
sbb
jae
ss
sbb
repnz
mov
xchg
js
inc
mov
xor
movsl
popa
ja
sbb
movsb
or
or
push
shll
fadds
sbb
push
push
nop
or
in
inc
pop
push
sahf
xchg
pop
inc
mov
lea
cmp
xchg
mov
xor
adc
pop
cs
push
outsl
sbb
and
je
mov
mov
jo
push
ljmp
jg
or
pop
or
ret
cs
rorb
in
pop
in
push
push
add
fcomi
jnp
sub
xor
cmp
les
test
adc
cmp
jle
pop
adc
lret
cmpsb
js
dec
lods
adc
das
cwtl
pop
inc
nop
in
adc
fists
or
icebp
inc
lret
mov
test
in
cwtl
xchg
mov
or
lea
les
push
pop
lods
cmpsb
gs
mov
bound
mov
and
aam
xchg
or
cmp
ss
addr16
outsl
cli
lret
pop
add
mov
cmp
inc
test
mov
push
inc
inc
ds
or
popf
mov
add
outsb
sbb
ror
mov
pop
or
or
mov
ljmp
and
cmc
aad
adcl
jno
cs
sub
push
jle
data16
or
test
idivb
mov
sbb
in
iret
add
fnstenv
adc
lods
push
xlat
ret
imul
rorl
out
pop
popf
daa
shl
js
icebp
imul
testl
icebp
mov
std
cmpsl
out
inc
fsubr
rolb
mov
xchg
or
cmc
or
js
scas
sbb
sub
lret
push
pop
and
xor
loope
les
mov
cmp
pushf
xchg
out
iret
jl
pop
movsb
inc
ljmp
aaa
pop
lea
mov
add
mov
push
jmp
cmp
ret
movsb
sahf
mov
mov
pusha
rcrl
aaa
push
dec
jmp
je
mul
data16
jge
clc
pop
scas
enter
hlt
dec
sbb
test
mov
stos
andb
and
lret
push
cld
or
mov
lods
or
into
gs
ret
loop
mov
push
pop
cwtl
sbb
loopne
icebp
add
jg
xor
lods
dec
shlb
dec
ret
adc
inc
mov
ja
ljmp
test
push
jo
lcall
mov
out
out
dec
arpl
push
mov
dec
fcoml
push
loope
sbb
and
out
les
mov
lret
pop
jae
imul
fsubp
inc
gs
lcall
xchg
lea
inc
jle
mov
stc
and
pop
insl
cs
addb
push
adc
xchg
push
aad
and
popa
jnp
add
add
jns
xchg
push
and
mov
out
cmp
in
push
test
pop
xchg
xchg
pop
jne
addr16
xchg
test
sbb
arpl
lock
push
aas
aas
into
shrb
cwtl
mov
cld
push
jbe
lahf
clc
ss
push
mov
repz
pop
mov
lods
xor
inc
dec
mov
inc
push
clc
inc
mov
mov
mov
mov
stos
or
test
stos
lds
scas
xor
sbb
cltd
jl
pop
add
push
sti
into
imul
add
adc
sbb
pop
data16
fldcw
fisubrl
in
fwait
jl
roll
bound
mov
jne
dec
lret
mov
adc
sub
jbe
sti
pop
in
in
jle
add
cmpsl
rorl
push
sti
es
fsubrl
in
xchg
fmulp
arpl
mov
in
inc
mov
push
mov
xchg
or
jo
in
mov
mov
xlat
rcrl
sub
sbb
ss
sahf
mov
popf
int3
cs
jle
popa
cmpsb
xchg
jns
je
rolb
in
pop
aad
jecxz
mov
push
push
adc
mov
mov
jbe
or
xor
sub
popf
or
dec
stos
shl
sub
test
pop
xor
pop
and
movsl
aad
xchg
js
aaa
cmpsb
cmp
xchg
push
nop
pop
call
pop
push
dec
aam
inc
mov
mov
xchg
scas
jp
xor
aas
adc
dec
xor
adc
loope
cmp
sti
je
cmp
mov
sub
cmpsl
cld
pop
pop
add
adc
jl
lret
cmp
lods
sbb
mov
les
or
imul
test
adc
lock
std
cmp
xor
add
fmuls
cs
push
stc
xor
shrb
into
data16
pop
idivl
es
imul
xchg
mov
cmp
push
daa
mov
mov
gs
aaa
rcrb
push
leave
movsb
mov
ja
loop
jge
in
push
test
pop
in
push
push
cmpsb
mulb
mov
mov
sbb
aad
mov
pop
or
fwait
addr16
adc
sbb
mov
mov
cwtl
ffree
jmp
imul
iret
jmp
mov
mov
cmp
xor
add
inc
push
gs
jecxz
outsb
cmpsl
jmp
or
jns
jecxz
clc
cwtl
arpl
dec
sahf
out
or
pusha
das
popf
outsb
dec
push
loopne
xor
adc
mov
inc
mov
jne
dec
scas
and
push
cmpsb
add
arpl
mov
adc
lods
test
cmp
dec
test
hlt
movsb
repz
sub
add
mov
icebp
sbb
out
stc
inc
ss
fdivr
loope
add
shrb
insl
dec
sub
lock
xchg
fwait
test
ja
subb
andb
es
xchg
sub
out
lods
into
nop
flds
addl
cmpsl
jmp
fs
roll
xor
and
loopne
add
dec
push
shrd
les
decb
in
add
xchg
lret
push
xor
push
push
xor
or
jae
ss
pop
xlat
and
fwait
in
mov
call
xor
lock
mov
cmc
repnz
xchg
loop
sub
add
mov
cmpsl
popf
pusha
mov
in
jp
push
fdivs
ja
inc
add
xchg
mov
int3
mov
out
lock
notl
xchg
int3
jg
cmp
xcrypt-cfb
cmpsl
daa
inc
sti
mov
pop
daa
orb
xor
pop
popa
push
and
add
mov
adc
addl
push
xchg
aad
lcall
mov
pop
repz
leave
fisubl
xor
movsb
jg
in
mov
sub
dec
in
decb
popf
icebp
cmp
jno
cmp
mov
je
jecxz
sarb
add
roll
push
roll
or
push
mov
imulb
adc
movsb
xchg
or
xchg
inc
scas
hlt
xchg
push
pop
or
inc
test
fisubl
or
out
sbb
in
adcl
push
jp
push
cmp
shlb
std
or
pop
jns
dec
add
mov
push
stos
ret
cmp
out
dec
stos
mov
sub
lds
push
inc
ror
insb
sbbb
cli
mov
sub
inc
xor
mov
pop
js
cmpsl
sbb
sahf
sbb
stos
pushf
push
int3
mov
and
adc
div
cmc
fnstsw
jle
cmp
fs
dec
xor
test
add
dec
dec
scas
outsb
scas
add
cld
sub
repnz
loop
mov
loop
cmp
dec
mov
adc
sti
into
pop
mov
xor
mov
imul
pop
mov
inc
mov
outsl
mov
icebp
fisubrs
daa
jp
loop
je
push
xchg
mov
dec
mov
mov
incb
xchg
sub
mov
outsl
or
andb
cmp
jo
jle
rcl
and
call
call
aaa
jnp
inc
push
fisubs
into
cs
filds
fwait
sbb
cmpsb
mov
sub
mov
or
andl
push
xchg
insb
and
je
xor
sbb
addl
aad
into
mov
cmp
dec
pop
fs
mov
add
pop
push
jae
jb
inc
fisubrl
negb
aas
ds
jo
movsb
and
std
ret
and
xor
sti
cli
dec
push
in
shrb
dec
or
shl
scas
sti
scas
outsb
test
pushf
stos
pop
pop
in
daa
nop
mov
adc
lds
inc
in
outsb
aaa
cwtl
adc
xchg
insl
fwait
popa
dec
jmp
mov
arpl
clc
or
or
fisttpl
xor
shlb
dec
jge
jns
xchg
ret
adc
mov
mov
bound
rcl
cli
pop
gs
lahf
arpl
push
xlat
dec
jo
add
mov
ret
sti
pop
sub
cmpsb
mov
mov
sub
out
mov
out
fildll
sub
shlb
fwait
mov
mov
rclb
push
mov
rclb
cltd
jae
mov
mov
adc
shlb
mov
into
ret
outsl
aaa
pop
fildll
call
outsb
jnp
dec
test
mov
decl
mov
mov
iret
pop
xor
push
or
mov
pop
or
popa
push
in
arpl
pop
mov
sbbb
pusha
xor
lods
sar
enter
test
fs
sbb
dec
cld
pop
mov
push
xor
pop
ficompl
adcb
pop
mov
testb
adc
enter
fwait
aaa
xor
push
push
sub
stc
sub
inc
pushf
adc
fs
andl
pop
cmp
dec
fwait
or
leave
jns
xchg
ja
repz
repz
push
push
negl
mov
dec
mov
or
out
loop
jle
dec
jb
lds
and
jecxz
sbb
inc
enter
pusha
dec
and
xchg
add
and
xchg
sbb
dec
pop
loopne
mov
outsb
jbe
inc
xlat
push
jecxz
xor
arpl
ds
pop
push
cmpsl
in
adc
mov
dec
mov
push
fistpl
rorl
adc
dec
nop
pop
push
mov
push
adc
push
dec
cmpsb
sub
pushf
xor
in
cmp
jmp
mov
and
sbb
xchg
push
outsb
aas
out
cmp
nop
shll
jb
nop
cli
lock
cmp
orl
or
aas
fs
pop
xchg
movsl
rolb
mov
repz
mov
lahf
and
hlt
adc
popf
or
insl
ficoms
pop
sbb
call
stos
push
mov
rolb
push
mov
aaa
enter
imul
mov
xchg
mov
mov
push
jno
xchg
loope
clc
xor
sub
jae
dec
fldl
ljmp
pushf
cld
cmp
ss
ret
push
aad
rcr
push
and
adc
scas
out
xchg
cmp
xor
shll
imull
mov
fisubrl
push
pop
mov
cmp
int
sahf
adc
sahf
pop
pop
mov
stc
xchg
in
sub
imul
ret
jl
xor
cmpsl
xchg
or
jle
out
adc
xor
push
sarb
loop
repnz
sahf
and
xlat
movsb
push
int3
arpl
jge
inc
jns
pop
sahf
loope,pt
mov
loop
adc
test
jb
mov
mov
lods
enter
mov
cmp
push
pusha
add
repnz
xor
jmp
add
adc
outsb
cmp
movsl
pop
pop
mov
rcr
jmp
jmp
mov
dec
insl
dec
or
xchg
fiaddl
lds
lret
clc
lret
xor
adc
movsl
pop
jmp
in
and
stos
arpl
mov
outsl
cmpl
inc
leave
inc
test
pop
mov
mov
or
shrl
xlat
pop
in
test
scas
stc
outsb
or
pop
dec
pushf
shld
fldpi
and
movsl
cli
test
ljmp
ret
in
out
dec
jp
lds
addr16
sbb
fisubrs
sub
fmull
mov
jp
mov
sub
addr16
int3
pop
add
add
inc
psadbw
stos
in
lret
imull
cld
fcmovne
loop
in
movsl
aaa
sbb
addr16
andl
lds
stos
adc
pop
jle
jmp
enter
jne
lea
in
js
xchg
push
mov
jmp
js
in
mov
mov
cmpsl
sbb
mov
fsubrl
ljmp
aad
sbb
aad
sbb
mov
adc
cmp
ja
cmpsb
or
rclb
xor
cmpsb
mov
cltd
xor
daa
pop
add
arpl
ljmp
xor
aas
test
lds
adcl
cli
cltd
addr16
xor
sub
or
daa
mov
out
mov
jb
int3
jge
repz
in
or
in
and
mov
dec
sbb
sub
xor
ret
cmpsb
shlb
mov
sbb
push
sbb
push
xlat
ret
ja
and
gs
jmp
cmp
sub
fcoms
fdivrl
ljmp
jmp
inc
cmpsb
out
sub
rolb
call
insl
sarl
adc
mov
mov
push
decl
testb
jns
mov
pop
movsb
xchg
cmpsb
jbe
xor
adc
xor
ss
jmp
mov
add
sbb
mov
pop
fisttps
push
ret
pop
push
je
scas
pop
icebp
call
ja
movsb
repnz
ret
push
and
sub
shrb
and
mov
ja
clc
leave
insb
xor
notl
and
enter
mov
iret
fcoms
jb
add
cs
mov
mov
mov
orb
pop
cs
enter
xchg
xor
push
lcall
insw
pop
mov
mov
fnsave
cmpsb
icebp
dec
fwait
push
add
push
jle
inc
inc
xor
mov
or
cmpsb
sbb
stc
pusha
sbb
push
mov
push
pop
xor
sbb
hlt
and
mov
or
pop
stc
add
and
jg
xlat
cmp
xor
out
lea
popf
or
nop
test
mov
inc
push
mov
hlt
into
jecxz
movsl
mov
jnp
mov
or
pop
addr16
test
add
hlt
and
xchg
mov
mov
rorb
jg
xor
mov
adc
xchg
aam
jae
lods
into
push
sub
push
pop
push
filds
ret
jg
sarl
js
mov
push
mov
addl
loop
xchg
js
xor
add
inc
insb
mov
lret
int
icebp
scas
cs
loope
mov
iret
pushf
sub
cmpsb
das
das
nop
jo
xchg
sbb
push
and
into
dec
popf
push
or
movsl
les
fidivl
in
push
sub
setb
pop
jb
fpatan
jno
mov
cli
xchg
jae
fisubrs
cmpsb
push
icebp
sbb
sbb
ds
cmpsb
shrb
xor
jns
inc
hlt
xor
cmp
aad
ds
ret
jno
xchg
fucom
aad
cmpsb
rcl
inc
mov
bnd
add
and
adc
in
xlat
pop
and
in
mov
push
xchg
push
xchg
push
ffreep
sub
and
and
je
cltd
fcomip
adc
rcrb
mov
or
aaa
insl
and
mov
fbld
sub
or
sbb
lods
xchg
sub
cwtl
xchg
fwait
jp,pn
xor
insb
fdivl
push
add
std
mov
dec
jns
in
js
push
xchg
mov
push
orb
pop
mov
repnz
jne
xchg
imul
insl
add
jp
loopne
pop
mov
fldl
jae
outsl
push
mov
dec
divb
nop
stos
int
call
mov
stc
outsl
loope
scas
negl
push
jge
jae
pop
sub
mov
sbb
xchg
loop
adc
mov
stos
jmp
adc
mov
shll
sub
push
sbb
mov
nop
dec
or
push
js
sub
sbb
shll
sub
and
addr16
das
lcall
test
jns
stos
iret
lahf
dec
xchg
jb
jno
push
lock
mov
and
orb
sub
iret
push
xor
xlat
xchg
popf
int
xor
ret
mov
push
cld
jns
add
aam
pop
in
dec
xchg
scas
adc
add
cmp
sarl
sbb
loope
mov
adc
jbe
cmp
cmc
jns
and
pop
lea
bound
lods
cmp
mov
jle
rcrl
cmp
aaa
fisubrs
push
mov
or
arpl
pop
mov
cmpb
xchg
movsl
loopne
inc
call
push
fimull
outsl
xor
push
mov
dec
jne
nopl
pop
xor
pop
andb
in
ss
fwait
mov
push
idivb
mov
lret
jb
jp
testb
or
cmp
insb
cwtl
add
mov
push
imul
cmp
out
xor
push
push
incb
out
fsts
jae
mov
shrl
push
fistl
jb
lods
pushf
push
popa
mov
xor
cs
push
jnp
fstl
rol
in
iret
imul
sbb
push
or
lods
mov
adc
in
mov
add
or
rcl
mov
inc
adc
clc
adc
xor
jnp
and
es
mov
push
pop
aad
mov
lahf
out
push
xchg
and
aaa
mov
pop
fbstp
cwtl
and
ss
xchg
cmp
pop
xor
inc
cltd
inc
addl
mov
xor
push
punpckhdq
hlt
ja
push
and
push
push
mov
scas
lcall
in
jbe
adc
mov
sub
mov
push
gs
int3
jo
jns
imul
xor
jmp
lretw
ffree
dec
push
lahf
test
lret
dec
sub
js
add
ss
xor
hlt
pop
mov
dec
mov
insb
cltd
pand
adcb
ret
pop
dec
int
addl
int
xorps
and
mov
test
inc
push
sbb
int
pop
nop
test
or
pop
jmp
jg
mov
loop
xor
call
or
in
pop
pop
hlt
push
in
mov
xlat
test
and
inc
fiaddl
imul
rclb
cmp
mov
xor
add
sti
lahf
les
cmp
or
cmp
data16
loope
insl
sub
xchg
pop
test
jmp
stos
js
jmp
mov
fs
lcall
add
out
sbb
mov
sbb
pop
and
mov
jns
jecxz
push
subl
addr16
xchg
xchg
mov
int
xchg
inc
mov
fnstenv
test
jl
jns
dec
enter
mov
ds
cmc
xor
mov
xor
sahf
sub
cwtl
idivl
lods
lahf
mov
cltd
inc
push
sbb
dec
ljmp
fwait
sbb
and
and
call
loopne
stos
nop
cli
testl
lods
leave
cmp
dec
pop
sub
les
cwtl
fcmovbe
xlat
xchg
pop
pop
xchg
xor
or
pop
push
mov
pusha
mov
fldt
stos
and
stos
adc
dec
pop
addr16
outsb
add
push
lcall
cmc
xchg
ljmp
ja
int3
int3
paddd
sbb
divb
outsl
jns
jge
jo
jbe
adc
int3
jle
movsl
stc
into
mov
arpl
or
mov
push
sbb
das
repnz
jns
hlt
clc
loopne
scas
jae
push
mov
pop
jle
cmpl
and
cmp
and
icebp
aam
jecxz
aas
jae
arpl
stos
add
xor
popf
arpl
aaa
jno
cmp
ret
and
fidivrs
push
bound
add
adc
cmpsl
jg
jl
xor
adc
aad
xlat
stos
jno
mov
mov
orb
sub
aad
leave
sub
orl
push
lcall
cmc
mov
addr16
in
test
jo
jecxz
mov
add
pop
xor
sub
xchg
js
or
mov
fdivrl
ljmp
lret
mov
xor
scas
hlt
mov
adc
fstl
sbb
mov
cmp
fs
fcom
stos
mov
aaa
das
xor
lods
lods
out
mov
push
sub
repnz
repnz
or
and
fidivrl
lahf
inc
cmc
push
sub
leave
je
pop
add
clc
or
mov
sub
addb
pop
push
lock
cltd
mov
jae
data16
mov
shrb
push
fistpl
pop
or
sti
sbb
gs
dec
mov
mov
push
or
pop
das
pop
xor
out
sub
fucompp
adc
bound
aaa
rcr
jne
leave
test
mov
cmp
fdivrs
cmpsb
jb
call
add
pop
or
dec
repz
pop
inc
mov
pop
jmp
dec
sub
pop
enter
daa
sub
insb
fidivrl
cmp
xchg
push
addr16
cmc
sub
cmpsb
mov
leave
cmp
loop
test
stc
jge
inc
shl
dec
fcoml
push
inc
jecxz
jge
and
lcall
or
mov
bnd
pop
mov
pop
pop
sbb
std
mov
sub
gs
int
mov
out
sarl
mov
mov
inc
pop
and
repz
mov
mov
movsb
and
pop
mov
jb
fisttps
inc
test
movsl
cmc
call
lock
or
sub
dec
and
int3
and
aam
aam
dec
xchg
xchg
stc
mov
clc
lret
jo
imul
scas
mov
lret
adc
adc
jb
cs
dec
dec
mul
mov
cmp
xchg
and
fists
xchg
in
jo
shrb
fisubs
jmp
sbb
mov
ds
mov
in
out
sbb
fnstenv
jecxz
cmp
ret
jb
push
clc
into
in
aad
jmp
jo
ja
sbb
ficompl
lds
lods
clc
add
mov
jge
popa
xchg
cmpl
add
xor
insb
inc
and
xor
inc
fcompl
or
mov
push
jp
out
push
call
das
xchg
aad
adc
ret
aam
sub
lahf
popa
hlt
add
push
xor
ja
cmpsb
mov
xchg
shl
aaa
fbld
cli
test
mov
mulb
xchg
dec
cmp
sbb
imul
popa
adc
cmpb
mov
fs
xchg
lcall
mov
lret
shlb
scas
pop
rcrl
or
dec
mov
and
add
rclb
test
aaa
gs
jbe
scas
cmpsl
mov
mov
test
or
jno
mov
loop
cmp
test
cmpsl
outsb
jae
xchg
sub
pop
in
lahf
jmp
push
data16
dec
add
lods
dec
sarl
jnp
aas
add
mov
mov
mov
stos
lret
sbb
fcoml
cmp
out
popa
loope
idivb
push
and
add
push
clc
pop
add
sbb
cmp
sub
call
aas
icebp
mov
dec
inc
scas
loopne
insb
cmp
mov
fisubs
shrl
mov
lret
push
add
mov
and
jle
cmp
lea
test
lods
xorl
sub
shr
mov
xor
lea
jb
push
pushf
mov
xchg
std
clc
cmp
lods
mov
lock
inc
sub
add
data16
pop
fwait
push
ljmp
adc
inc
dec
pop
inc
sbb
cmp
shll
sarb
sbb
or
lcall
rdmsr
mov
sahf
scas
fldenv
lock
mov
push
mov
sub
loope
enter
push
faddl
dec
aas
jnp
insb
popa
stos
cltd
xor
or
gs
xchg
mov
dec
jp
cmp
mov
fwait
jecxz
stos
cmp
loope
mov
lds
dec
arpl
jl
dec
add
outsb
pop
pop
pushf
insb
sub
cmp
or
loopne
add
loopne
scas
mov
gs
outsb
frstor
leave
xor
scas
ficoml
test
iret
push
sbb
dec
loop
stos
push
fdiv
cmp
cmp
scas
and
xchg
add
scas
xchg
movsl
pusha
lcall
add
popf
repz
sub
mov
dec
movsl
shlb
imul
mov
flds
aad
lods
mov
loopne,pn
aaa
jge
out
inc
mov
pop
jle
fwait
pop
jae
sub
xchg
xchg
sbb
pop
and
pop
into
js
cmp
sbb
xorb
lcall
cmp
push
mov
dec
lea
sbb
xor
pushf
mov
jns
rorb
rcrb
jnp
js
pusha
mov
pushf
xor
mov
sbb
jl
sub
and
das
mov
xor
iret
mov
punpckhwd
xor
icebp
sbb
std
push
lret
xchg
jp
imul
and
dec
fcoms
out
nop
out
imull
mov
icebp
cld
dec
cwtl
mov
sbb
stc
mov
ds
inc
loope
mov
dec
jmp
hlt
movsb
loop
push
inc
xor
rorb
notb
and
mov
fildl
lret
jp
repz
xchg
sbb
xor
adc
or
cli
arpl
push
pop
scas
or
in
inc
adc
or
inc
xchg
and
jb
add
sahf
add
adc
jg
das
in
pop
test
xchg
das
xchg
orl
mov
pop
xor
sti
push
sub
test
inc
lds
lret
stc
pusha
dec
jle
pop
xor
adc
scas
ljmp
pop
push
push
adc
push
fisttpll
dec
xor
xor
mov
aas
xchg
jl
addr16
scas
inc
pop
push
cmp
jmp
sbb
pop
repz
push
rorb
insb
loope
lahf
push
aad
fldt
in
add
and
enter
pop
xlat
pop
repnz
sub
inc
inc
shl
or
mov
leave
add
xor
or
xlat
mov
jl
enter
push
xchg
inc
test
popl
xchg
sbb
dec
push
sbb
stos
push
loope
xlat
ja
aad
push
lods
sarb
fucomi
in
pop
addr16
xorb
inc
in
pop
fimull
rclb
mov
mov
xchg
pop
mov
pop
inc
add
mov
lods
popa
scas
lcall
mov
hlt
pop
jo
adc
push
sub
insb
lea
mov
sub
mov
mov
popa
dec
mov
insb
xchg
sub
push
xchg
outsl
lahf
notb
sub
lret
sbb
ss
movsl
or
mov
daa
insl
pushf
mov
mov
jnp
in
mov
mov
mov
movsl
mov
imul
push
sub
or
test
and
lods
adc
repz
outsl
aas
mov
jo
pop
dec
add
cli
inc
sbb
faddl
daa
movsb
into
std
loopne,pt
idivb
aam
and
outsl
cmc
js
shr
mov
test
adc
test
or
pop
push
sbb
iret
mov
jge
mov
pop
jle
ds
shr
inc
je
and
fucom
push
ljmp
cwtl
pop
loopne
shlb
inc
xchg
cmc
mov
stos
cwtl
test
mov
xor
jg
mov
jae
pop
and
mov
mov
les
jae
jbe
repnz
pushf
popa
pusha
xor
jne
push
pop
enter
scas
push
ret
xchg
dec
or
repz
lods
lds
int3
std
mov
or
iret
imul
imul
add
fcomps
mov
movsl
divl
xor
push
stos
adc
add
aad
gs
mov
lods
rcrb
dec
push
adcb
ljmp
inc
or
xchg
repnz
mov
into
or
orb
mov
out
loopne
xchg
add
ja
xor
push
jecxz
addr16
xor
xchg
test
xlat
push
pop
popf
mov
push
jle
pmaddwd
sarl
fucomp
sti
add
test
lock
fistps
popa
push
dec
inc
mov
ret
jne
popf
or
or
jg
aas
cwtl
dec
jne
mov
push
jmp
rcll
adc
daa
mov
lds
insl
aad
xor
mov
shl
fsubrs
loopne
mov
xchg
inc
pushf
call
lea
mov
lret
jmp
andl
or
lods
nop
pop
dec
mov
xchg
repz
jg
push
and
and
add
inc
fcoml
dec
movsb
inc
loopne
repz
cld
data16
fsts
fcmovnu
add
sbb
push
loope
das
scas
mov
xchg
push
arpl
ja
in
jle,pn
jl
ja
adc
out
or
adcl
sbb
inc
fwait
cmp
mov
repnz
or
cmp
ret
sbb
dec
loop
sbb
inc
std
jo
daa
add
xor
mov
lcall
and
imul
jmp
cmpsb
sbb
nop
mov
clc
in
push
nop
push
add
or
add
inc
push
lcall
cmp
movsl
ret
lahf
stc
add
out
pop
add
leave
add
jne
testb
dec
or
and
mov
js
cmp
mov
jp
arpl
mov
pop
sar
popa
lods
jnp
shl
and
xlat
or
mov
dec
and
clc
fsubs
cs
scas
mov
mov
cltd
inc
and
loope
mov
fdivrl
mov
imul
lods
cld
push
les
popa
mov
add
push
mov
or
int
pop
loop
and
jmp
insl
inc
sub
jmp
xchg
cltd
ja
xlat
sbb
jge
adcl
ds
imul
adc
xchg
xchg
in
xlat
in
sbb
dec
xor
pop
rcrb
faddp
lds
adc
xchg
push
out
adc
fldl
xor
dec
push
push
xchg
aaa
das
push
push
or
pop
mov
push
push
xchg
adc
add
adc
mov
mov
je
mov
add
mov
pop
inc
pop
leave
fisttps
lahf
or
xor
lcall
xlat
adc
xchg
sbb
dec
jns
leave
jno
das
push
mov
pop
test
add
fstpt
insb
jmp
or
mov
mov
aam
push
and
lret
int3
sub
sbb
push
aaa
cld
cld
jb
inc
hlt
popa
sub
ss
and
jne
pop
mov
push
rol
xchg
insl
jbe
sbb
fstpl
jecxz
xor
fbld
cmpsl
sub
push
mov
imul
sub
roll
push
jb
push
jbe
cwtl
mov
jne
ret
jo
fnsave
or
cmp
imul
mov
lret
loopne
add
call
test
ret
mov
add
loopne
jg
xor
sbb
adc
aaa
cli
and
jg
xchg
inc
xor
imul
push
xor
loopne
mov
inc
shl
add
adc
ret
pusha
into
repnz
cmp
xlat
out
das
xor
push
xor
scas
ret
jo
sbb
cwtl
test
push
push
in
es
nop
adc
mov
sbbl
dec
lods
or
popa
cmpsl
jae
xor
test
imul
lahf
cmc
mov
data16
lea
mov
pop
push
cmp
repnz
fwait
xchg
out
cmp
stos
popa
jg
pop
push
jnp
imul
cwtl
inc
and
sub
stc
fadds
add
adc
pop
pop
and
mov
mov
xor
lods
rcrl
imul
adc
xchg
xchg
inc
push
mov
inc
movsl
mov
sarl
mov
into
sub
pop
in
mov
pop
push
imul
insl
fildll
inc
cmp
pop
in
dec
into
mov
sbbl
mov
loop
mov
jp
jecxz
shll
js
inc
and
mov
and
notb
frstor
popf
cmp
push
fcmovu
call
mov
xchg
or
mov
ret
and
xchg
lds
notb
xchg
das
jmp
add
push
dec
dec
sub
fistpl
mov
inc
fstl
xchg
aam
fstpl
mov
dec
sbbl
add
dec
add
jge
and
mov
pop
xor
xchg
add
cmp
add
mov
in
adc
inc
dec
dec
mov
lret
out
sub
push
dec
mov
stc
xchg
nop
fisubrs
nop
inc
int3
call
adc
jle
enter
pusha
sub
jecxz
mov
inc
dec
xor
out
je
ljmp
jle
cmp
pop
cmp
fisubs
popa
imul
popa
jle
dec
les
pop
scas
pop
fwait
jae
jl
scas
inc
repz
fwait
clc
lret
cmp
sub
cmp
or
xlat
mov
cmp
lods
movlhps
push
push
mov
inc
push
lock
call
int3
lock
loop
pusha
std
data16
inc
adc
pop
xchg
hlt
ss
shl
cmp
pushf
push
mov
inc
add
dec
adc
ss
ss
xchg
sub
sub
sub
mov
mov
outsl
jb
fidivrl
sub
sti
mov
lret
xorb
mov
sub
out
mov
repz
shlb
enter
mov
add
xchg
pop
cs
test
or
lock
outsl
xor
pushf
xlat
aaa
pop
syscall
into
aam
fcompl
cmp
jbe,pt
dec
shll
add
popl
movsl
mov
lahf
jle
xor
rdpmc
rcll
push
cmc
and
rol
push
xor
rolb
fistps
dec
rcl
movsl
push
mov
test
in
xor
in
mov
daa
cmp
loop
pusha
dec
xchg
in
iret
jae
sub
sub
mov
and
jns
sub
iret
xlat
iret
jnp
icebp
lea
inc
add
testl
notl
mov
push
mov
mov
jno
je
xor
call
xchg
cmp
push
int
jbe
jbe
sbb
rcrb
mov
bound
dec
ret
nop
push
xlat
jg
inc
and
inc
or
sub
add
fsubrl
jb
sub
sub
int
sub
and
mov
cmp
cmp
addr16
push
int3
sub
xchg
mov
loop
lret
cltd
pop
and
popf
loope
scas
loopne
cmp
mov
xchg
inc
xor
das
stos
iret
in
xchg
stos
ja
and
stc
inc
int
aas
sbb
mov
addr16
mov
orl
push
fmull
addl
sbb
test
in
jae
addr16
sar
push
lret
jnp
aaa
pusha
pop
pop
repnz
xorb
xchg
mov
push
arpl
cmpsl
notb
icebp
scas
cmp
lds
aaa
or
decl
and
xor
sti
int3
fwait
jnp
mov
sub
dec
xlat
and
add
mov
xchg
mov
je
cmp
mov
stos
fs
pop
out
xchg
mov
jo
jns
pop
lock
dec
icebp
mov
cli
sbb
pusha
pop
fs
and
lret
testb
pusha
cmc
cmp
pop
lcall
jbe
popf
das
push
pop
fdecstp
cld
ret
push
aad
jmp
push
scas
mov
stc
fldt
cwtl
fisubl
movsb
cmp
movsb
mov
add
imul
mov
and
sbb
sbb
fs
xlat
mov
xor
mov
rcrl
shlb
jge
or
cmp
in
xor
mov
cld
sti
inc
cmp
fildll
adc
sub
xchg
add
pusha
jmp
or
dec
loopne
pop
sub
ds
popa
sbb
lcall
xchg
pushf
test
std
out
mov
fsubl
and
mov
mov
dec
pushf
xor
icebp
outsb
outsb
pop
aam
imul
and
mov
into
sahf
cwtl
fsubrs
imul
and
movsb
outsl
mov
pop
jmp
rolb
or
push
imul
testb
out
mov
or
push
push
lock
add
sahf
cs
adc
mov
mov
adc
sbb
test
insl
imul
insl
add
movsl
adc
in
and
xor
inc
imul
rcr
cmp
push
in
or
sbb
lret
test
cmpsb
imul
scas
mov
push
mov
fimuls
cmpsl
lock
cwtl
rcrb
or
lds
add
test
mov
push
inc
pop
jns
movsl
pop
jno
cmp
sbb
call
mov
lea
sub
cmp
das
xor
lods
cmp
test
and
jl
test
in
sub
pusha
ret
add
or
push
or
repz
push
lods
fs
aad
or
or
pusha
lret
daa
int
outsl
test
mov
push
push
add
pop
popa
inc
mov
mov
popa
stos
and
je
xor
xor
push
cld
xchg
dec
enter
cmpsb
mov
adc
dec
push
rol
push
jno
mov
xchg
mov
lcall
xor
inc
pop
pop
xchg
mov
nopl
aas
mov
mov
sbb
int
or
sbb
adc
shll
jg
in
shlb
dec
das
push
jecxz
js
cmp
mov
out
movsl
push
popa
mov
ja
test
sahf
push
mov
int
adc
call
decl
jmp
jp
ss
xchg
sub
outsl
pop
je
rcll
sub
pop
pop
jle
in
int3
test
jbe
imul
gs
insb
les
jle
dec
cmpsb
rorb
pop
cmp
sub
pop
xor
sbb
cwtl
aaa
bound
jecxz
push
sahf
mov
dec
ss
mov
mov
adc
mov
sub
cltd
mov
es
xchg
lock
into
loopne
ret
and
mov
jmp
das
dec
push
pushf
aam
in
cmp
std
or
in
dec
frndint
inc
or
insl
rcrb
mov
pop
rcrl
mov
adc
jp
fistpll
into
cmp
jmp
pop
xor
jbe
arpl
sub
inc
jecxz
imul
pusha
imul
fdivrl
pop
xchg
fildl
sarb
push
enter
sahf
add
pop
add
or
movsb
movsl
lods
daa
fisttpll
andb
ja
jecxz
push
cmc
stos
nop
js
icebp
push
push
neg
dec
xor
mov
inc
pop
sahf
mov
dec
mov
sahf
cmp
jecxz
push
icebp
or
out
int
mov
inc
outsb
inc
pusha
push
add
les
loopne
jl
pop
mov
mov
mov
xor
test
add
cmp
cmc
mov
pushf
mov
test
or
rcl
test
mov
adc
out
nop
loop
lcall
jns
fnstenv
jnp
and
cmpl
sti
and
or
movswl
jno
data16
pop
out
cmp
jns
cmp
jb
pop
scas
iret
cmc
push
scas
xchg
je
mov
adcl
insl
out
daa
lods
sub
shlb
dec
mov
xor
jmp
loopne
push
ljmp
xor
fidivl
sbb
loop
and
dec
jbe
test
jne
jp
adc
mov
lret
test
fiaddl
inc
and
mov
jnp
out
gs
xchg
push
les
pop
stc
push
mov
xchg
repz
push
mov
pop
sub
rcll
fidivs
adc
or
xchg
test
and
jns
or
dec
mov
idivb
jno
fucomip
xchg
icebp
mov
fldt
adc
in
jbe
push
imul
icebp
shr
and
dec
rcll
fnstsw
scas
pop
and
cwtl
lgs
add
sarb
lahf
repz
mov
pop
mov
xchg
adc
push
pop
xor
repnz
popa
inc
lcall
imul
push
adc
xor
push
pop
push
into
jecxz
dec
es
mov
sbb
cmpsb
and
repz
mov
sahf
sub
sub
mov
xor
mov
add
lret
and
jmp
adc
fistpll
cmp
adc
stos
mov
inc
lods
adc
pop
xchg
ficoms
mov
idivl
inc
outsb
leave
leave
ljmp
cmpb
lods
jl
mov
sbb
adc
in
out
push
pushf
jge
fwait
shll
xor
fisttpl
gs
pop
mov
mov
mov
mov
cmp
sahf
sub
js
adc
xchg
outsb
ja
in
jae
lret
mov
shlb
aam
sbb
adc
xchg
mov
mov
out
imul
cmp
pop
ljmp
push
aam
jg
js
cmp
mov
pop
xor
adc
ljmp
jne
test
dec
mov
pop
pop
stc
ss
imul
jno
lea
ret
inc
inc
add
xchg
pusha
leave
roll
stos
lcall
cli
push
cmpsb
movsb
xchg
pop
xchg
loope
dec
cs
jns
xor
sbb
out
in
stos
imul
or
dec
es
xor
cmp
subl
imul
dec
sub
shr
stos
lock
sub
bound
jmp
pop
cltd
mov
jge
jb
out
into
vminsd
shll
fdiv
movaps
divl
and
add
mov
mov
jmp
pusha
adc
lahf
and
scas
cmpsl
push
mov
mov
or
xor
repnz
outsl
lcall
or
jae
fsubs
fadds
fwait
lret
test
pop
int3
out
sub
leave
les
inc
xchg
and
leave
lahf
frstor
jle
xor
mov
pop
add
sub
xchg
jns
jne
add
adc
aad
int
das
and
push
imul
pop
ljmp
scas
xchg
sub
outsl
cmpsb
inc
sub
sbb
xchg
mov
fs
inc
push
shrl
scas
aaa
imul
xor
hlt
popl
cli
or
xor
dec
loope
pop
dec
call
fisubrs
xchg
mov
sti
jle
cltd
xchg
es
or
decb
push
sarb
sbb
push
mov
fadd
sbb
push
lock
mov
xchg
pop
jbe
sahf
cmp
inc
addr16
mov
movl
sbb
cmp
xchg
cmp
lahf
lock
stc
imul
or
sbb
in
adc
out
in
aas
jecxz,pn
pop
sub
add
lret
pop
or
test
divb
pop
xchg
icebp
fs
cmpb
inc
shrb
ss
dec
andb
pop
push
pop
cmpsb
lahf
add
or
hlt
push
add
cmp
mov
stos
or
test
xchg
xchg
out
push
jle
xchg
pop
orl
subb
cmp
inc
test
cmp
rcr
xchg
sbb
pop
dec
jo
popa
pusha
mov
mov
ss
sub
cs
mov
mov
in
sbb
movsl
xchg
addl
fldt
push
aas
ljmp
test
ljmp
pop
in
push
int3
inc
cld
aam
cmova
addr16
xor
mov
inc
xor
lret
stos
ud1
daa
mov
nop
sbb
bound
push
insl
jp
das
mov
push
push
testl
push
jb
cmc
mov
dec
dec
sbb
sarl
dec
cld
fisubrl
cmp
insb
xchg
adc
call
inc
sti
push
sbb
xchg
inc
loopne
mov
and
jp
mov
sub
cmp
sub
or
sub
aad
popa
dec
add
lcall
repnz
std
aaa
cld
dec
jnp
filds
fdivl
push
fs
mov
mov
icebp
test
out
arpl
push
sbb
mov
sbb
push
fsubrp
movsb
lea
dec
push
aas
mov
mov
lods
mov
lock
add
jb
sub
es
jp
pop
sub
pop
mov
inc
push
or
inc
adc
adc
dec
jo
lret
adc
imul
pop
jbe
xchg
dec
cmp
cs
and
xchg
fcompl
or
fs
mov
pop
sbb
jnp
push
jecxz
cmpsl
xor
fcompl
ds
movsl
jmp
in
sbb
mov
sub
stos
dec
jge
pop
in
outsl
aad
cmpsb
inc
mov
sub
icebp
adc
pop
jne
lea
pop
push
dec
dec
lods
pop
addr16
cmp
pop
adc
in
pop
shll
pop
xor
pop
mov
xchg
lahf
movsb
test
mov
inc
daa
xor
add
in
mov
scas
xor
pop
xchg
xchg
cwtl
xor
xorl
cmpsb
daa
push
cltd
jae
or
cmp
or
push
bnd
fnsave
and
cmp
jg
fistpl
stc
stos
mov
loope
xchg
inc
pusha
xor
loop
cltd
dec
inc
inc
jg
in
cmpsb
sub
nop
xchg
and
cmp
lods
dec
cmpsb
fcomp
cmp
pusha
push
push
out
sbb
or
and
fstps
dec
mov
arpl
jecxz
dec
add
jae
out
add
dec
out
sub
insl
mov
nop
cmp
xchg
mov
cmp
outsl
outsb
sub
or
push
sbb
mov
xor
mov
xlat
ljmp
lcall
psubb
roll
mov
or
pop
leave
aaa
cmpsl
inc
repz
inc
arpl
inc
sti
mov
shlb
sub
add
push
sub
pushf
lret
cs
je
into
outsl
and
xchg
outsb
sahf
js
ret
sub
insb
jge
daa
stos
xchg
and
xor
int3
push
out
loop
rcl
adc
scas
mov
adc
loopne
or
xchg
pop
mov
and
lods
pop
leave
subl
andb
xchg
fstl
push
sub
xchg
ret
repnz
out
inc
add
adc
xchg
jmp
out
push
aad
sti
jge
sti
sbb
cwtl
fmuls
shrl
mov
mov
outsl
or
gs
sar
add
rorl
mov
xor
out
loope
pusha
cli
mov
sub
int3
jns
mov
jmp
push
loope
push
hlt
xor
sub
or
pop
mov
imulb
pop
jnp
lock
or
and
out
fwait
lock
cmp
jge
int3
mov
sub
stc
mov
push
mov
and
adc
sbb
lds
jne
dec
push
ja
add
ret
xchg
imul
inc
jmp
popf
push
cmp
xor
push
xor
pop
push
add
mov
add
in
push
adc
daa
cwtl
mov
bound
test
sub
enter
xor
jae
xchg
adc
sbb
xor
push
add
pop
adc
stc
jno
sbb
xchg
scas
push
cmp
mov
cltd
dec
fnclex
sti
and
shll
jl
leave
and
dec
cmp
inc
in
and
inc
add
mov
mov
dec
dec
and
mov
cmpsb
outsb
imul
addr16
subl
xchg
pop
insl
mov
jmp
scas
stos
dec
sbb
xchg
lock
add
pop
sahf
test
jp,pn
movsb
in
fimuls
sti
mov
dec
add
jns
in
cmp
rolb
pushf
int3
hlt
mov
jp
lds
pop
or
mov
push
loop
scas
push
in
dec
or
xor
decb
sub
loopne
sbb
jo
mov
and
jg
pusha
test
stos
out
test
stos
aam
cmp
dec
test
xchg
arpl
push
and
mov
in
dec
mov
rcrl
push
scas
and
dec
out
out
ret
lock
iret
pop
push
fimuls
repz
out
push
test
lret
decb
imul
sub
test
mov
pop
inc
loope
iret
shll
cmp
repz
aaa
testb
sbb
daa
sub
dec
test
jb
aas
call
pop
and
js
lods
int
pop
dec
aad
ds
fiaddl
push
nop
sbb
out
or
sarl
sub
cmp
call
push
mov
sarb
push
cmp
int
mov
shrl
xchg
mov
sbb
hlt
sub
rcll
lds
or
addl
rorl
fdivr
jecxz
xchg
mov
cld
inc
mov
mov
xchg
and
push
cmovp
push
sbb
add
addb
adc
xor
mov
add
mov
push
test
rolb
into
mov
notb
stos
movsb
push
xchg
addl
scas
xor
das
adc
outsb
pop
out
sbb
stos
push
sub
mov
mov
xchg
sahf
lcall
pop
shll
jmp
test
cld
and
jb
movsb
push
and
pop
fisubs
mov
inc
sbb
mov
mov
inc
or
sbb
shlb
push
std
hlt
or
pushf
cmp
stos
aas
or
cmpsl
push
xor
xchg
daa
lods
add
mov
pop
sbb
rolb
repnz
xchg
cmp
jno
fst
shrb
dec
je
adc
rorb
push
call
aad
ret
xchg
jnp
fstpl
mov
test
test
in
dec
jbe
ltr
dec
push
aas
leave
ljmp
mov
cmp
pop
or
adc
pop
dec
sub
cmp
idivb
pop
leavew
sub
das
mov
sub
dec
mov
push
stc
push
fcom
std
jmp
insb
jae
rcrl
outsb
sbb
pop
or
stos
add
stos
xchg
push
ja
jecxz
mov
sub
adc
push
adc
or
adc
jle
je
jb
dec
call
cmp
movsb
lock
inc
xchg
cmpsb
xchg
int
mov
mov
push
test
mov
clc
push
add
adc
popf
push
data16
or
std
bound
sub
push
subl
test
es
and
fisttps
pop
mov
enter
aas
jo
sub
sbb
idivb
sub
movsl
xlat
shrl
xor
sub
stos
popa
js
cwtl
cmp
cs
mov
dec
mov
xor
or
pop
test
pop
in
rcll
in
fildll
pop
test
lret
dec
test
dec
mov
pushf
or
inc
subb
adc
add
push
je
rorb
testl
cwtl
cmp
push
mov
pusha
adc
roll
sahf
cmp
xchg
adc
in
jg
mov
sbb
push
cld
daa
fisubrs
sarb
test
jo
stos
dec
jno
jnp
aam
push
js
jae
out
sub
xor
mov
push
jo
arpl
in
xorl
lock
scas
repz
ljmp
dec
mov
test
out
inc
aaa
aaa
shr
in
std
adc
lahf
lret
xor
lret
daa
mov
and
mulb
cmp
clc
add
add
std
xor
jl
hlt
mov
fcoml
add
inc
in
push
cmp
push
in
testb
cmp
jmp
lea
in
sbb
jle
sub
mov
or
mov
cwtl
fmul
pop
mov
mov
leave
mov
dec
inc
cmp
pop
pusha
mov
mov
ss
inc
sub
loopne
jmp
mov
xchg
dec
xchg
cmp
mov
xchg
lret
pop
cmpsb
pop
into
scas
pop
lea
insl
pop
pop
into
add
loope
fucomip
xor
insb
in
pop
lahf
xchg
push
clc
dec
sub
stos
jno
jmp
pop
add
pop
jmp
add
push
add
or
das
scas
sahf
mov
mov
dec
and
gs
dec
sbb
aad
imul
push
mov
int3
out
sbb
pop
les
xor
cltd
imul
jmp
inc
stc
cmp
mov
in
pop
test
loope
adc
pop
movsb
push
dec
or
cmp
pop
ljmp
into
mov
das
sub
mov
or
xchg
or
inc
adc
mov
and
mov
cmp
jno
xor
gs
lcall
inc
mov
stos
sbb
mov
insl
xor
push
xchg
sub
icebp
stos
add
sub
lods
stos
pop
ljmp
leave
shlb
imul
push
adc
into
lods
push
inc
xchg
dec
popa
sub
push
std
in
dec
and
push
insl
mov
out
xlat
mov
xchg
cltd
out
shlb
scas
sub
icebp
cmp
sub
add
pop
xchg
pop
cmp
int3
mov
push
mov
inc
into
rol
jns
push
adc
aas
dec
mov
mov
idivb
or
mov
orb
test
mov
dec
jg
adc
push
mov
pushf
xlat
mov
and
out
lods
jns
lock
fsub
adcb
lcall
outsl
push
lcall
mov
inc
and
insb
or
xchg
jns
in
xchg
aam
jge
add
out
push
movb
cmpsl
dec
adc
push
adc
ja
inc
pushf
mov
movsl
xchg
fistps
bound
jmp
out
jno
mov
xchg
jge
mov
cwtl
push
adc
xchg
repz
push
gs
std
cmpsb
loop
nop
adc
add
push
add
push
sbb
or
xchg
out
in
or
or
icebp
fnstenv
cli
or
sti
movsb
pop
testb
rcpps
adc
into
mov
shl
aad
ja
ret
mov
cmp
jmp
pop
mov
test
jbe
and
cmp
cwtl
sub
aad
addr16
jo
push
and
dec
cmp
incb
test
popa
bound
cli
or
mov
movsb
jecxz
add
lea
lahf
mov
pop
mov
test
inc
mov
cmpsl
fistpll
or
dec
cmp
pop
ficoml
stos
adc
adc
mov
push
jge
subl
xchg
push
inc
lods
inc
lock
push
xchg
fwait
je
orl
dec
repnz
pusha
xchg
add
mov
inc
int
call
push
mov
pop
addb
fwait
add
repz
lret
aas
cmp
jmp
push
fists
pop
push
mov
jl
lea
inc
push
add
mov
movsb
mov
add
jl
xchg
cmp
cli
mov
icebp
push
xchg
xchg
enter
out
mov
mov
scas
ja
and
pop
lock
test
mov
pusha
or
int
jnp
mov
fmull
mov
push
adc
imulb
cmpsb
jbe
in
sbb
insl
dec
jmp
insb
and
mov
outsb
inc
mov
add
cld
dec
jmp
pusha
lock
xorl
fstpl
push
divl
cli
sub
cmpsb
sbb
jns
push
mov
mov
addr16
pop
fwait
out
stos
mov
insl
test
cwtl
mov
push
das
lods
mov
inc
fwait
jge
pusha
stc
adc
ds
ds
std
push
stc
sub
testb
mov
dec
pop
xor
sbb
leave
orl
add
jmp
and
cmp
adc
pop
in
adcl
ret
loopne
sub
add
stos
sub
xlat
push
sub
movsl
xor
pop
lods
push
test
into
not
mov
inc
sub
in
cmc
mov
int3
pop
cwtl
aaa
mov
cmc
jge
mov
dec
xor
aas
mov
xor
stc
push
xchg
orl
sbb
scas
in
jl
push
mov
cmc
dec
mov
out
out
xor
jbe
rorb
jp
out
fwait
push
add
scas
fldl
xor
cmp
lahf
call
cld
sub
bound
std
pop
lea
bound
pushf
jle
lret
mov
and
iret
dec
cli
das
mov
mov
lret
arpl
adc
ret
and
pusha
std
xchg
loopne
in
aam
movsl
cli
add
call
pop
or
cli
call
inc
punpckhdq
inc
mov
decb
adc
jns
fiaddl
add
push
int
adcb
fnstsw
xor
mov
sub
or
xor
lock
scas
lods
iret
adc
xchg
push
jp
mov
mov
shrl
inc
mov
cmc
iret
call
lret
loope
xchg
mov
out
popa
dec
pop
sub
adc
ret
lcall
mov
scas
ja
mulb
sarb
jle
xor
dec
mov
dec
xchg
scas
pop
mov
mov
push
cld
dec
jno
shll
cli
mov
cs
fwait
xorl
aam
cwtl
ret
jecxz
inc
adc
mov
inc
cmp
scas
and
jg
mov
dec
adc
mov
cmp
les
cld
xor
dec
push
jb
lret
and
mov
mov
fsubrl
scas
orl
mov
aam
xor
pop
jl
sbb
xchg
add
sbb
subl
xor
mov
popf
iret
loope
xchg
xor
cld
or
jne
add
paddw
lock
insb
insl
ja
repnz
data16
out
xchg
js
cs
decb
pop
fdivrs
mov
mov
push
xchg
mov
call
ljmp
xor
movsl
pop
mov
mov
adc
dec
jno
add
xor
imul
das
pop
push
push
sbb
icebp
imul
test
jecxz
clc
mov
xchg
mov
or
or
xchg
out
outsb
jns
cmp
add
jmp
add
testb
jp
xchg
scas
push
mov
shrl
push
or
mov
add
aam
daa
mov
and
shlb
cwtl
lcall
outsb
jae
int
shlb
sbb
or
mov
in
faddp
add
mov
dec
mov
inc
mov
xor
sub
out
jo
out
cli
loope
pop
lahf
push
sub
mov
cltd
insl
cmpsb
std
dec
or
ja
mov
bound
aad
dec
mov
popf
fcmovb
push
rclb
loope
mov
jo
inc
inc
mov
or
mov
jbe
rcrl
mov
or
cmpsl
jo
test
mov
stos
xchg
iret
movsl
sbbb
cmp
add
xor
lahf
pop
gs
xlat
inc
inc
aad
sub
pop
jo
mov
adc
lahf
div
xor
loope
xchg
cmc
or
popa
dec
dec
aas
and
test
push
imul
mov
and
adc
inc
inc
insb
rclb
push
mov
mov
xor
sub
loopne
fldl
aaa
and
sub
jp
and
xor
cs
jnp
cli
cmc
rolb
xor
and
ds
lahf
int
and
lea
std
pop
mov
adc
sqrtps
loopne
cmp
fdivrs
lds
mov
pop
mov
xchg
add
push
xchg
push
sbb
mov
test
jo
mov
cmpsl
cmpsl
xchg
dec
or
lock
xlat
psubw
jge
test
pop
sub
or
add
fidivs
mov
fdivl
movsl
sub
shrd
in
insb
sbb
mov
or
in
insl
sub
pop
cmc
jns
cmp
minss
dec
in
jno
adc
cld
jne
jg
mov
mov
cmp
ret
aaa
mov
popf
and
stos
pop
jns
mov
lods
lods
xchg
dec
push
leave
push
and
adc
mov
hlt
push
testl
mov
nop
mov
dec
xor
xchg
pop
sbb
or
stos
mov
xchg
mov
mov
shlb
pop
enter
inc
pop
fstpt
ror
cmp
lods
pushf
in
cmp
ds
je
mov
pushf
dec
int3
mov
add
adc
stc
lcall
sbb
adc
out
adc
lcall
and
mov
add
sbb
mov
cs
lds
mov
filds
addr16
mov
fcompl
jno
cmp
fs
push
imul
mov
xor
dec
mov
lock
add
test
aad
or
add
mov
loopne
outsb
clc
js
add
cmpb
aam
jbe
pushf
icebp
push
sub
jne
mov
inc
lea
or
adc
clc
fidivrl
cs
es
adc
insb
jnp
push
icebp
fstpt
push
cmp
mov
in
mov
das
std
mov
and
out
inc
and
dec
xor
xchg
inc
sub
ficompl
mov
pop
rcl
mov
sarb
mov
cmpsb
orl
inc
mov
ss
push
jne
lea
fwait
stos
mov
push
sub
and
js
insb
xor
fisubrs
notl
inc
adc
pop
ss
in
inc
pop
in
int3
neg
stos
rorb
sbb
es
sahf
jno
or
jmp
xchg
daa
fxch
aaa
inc
cmp
add
push
cmp
xor
dec
popa
adc
push
lods
aaa
mov
inc
jp
mov
insb
test
push
sub
jecxz
inc
cmc
stc
mov
jge
loop
aam
fistpll
push
ret
mov
mov
xor
cmp
cmp
adc
dec
loopne
pop
aaa
sub
sub
mov
and
cmp
add
rorl
or
rorb
jg
jmp
xchg
cmpsl
or
fwait
xor
sbb
or
std
cmpsl
jle
hlt
movsb
xor
or
sahf
outsb
fildll
sti
push
test
xchg
add
fwait
out
aad
in
and
dec
int3
mov
jb
ret
mov
int
push
in
cmc
xor
adc
repz
lock
in
pop
sti
bswap
adc
insb
mov
mov
xlat
popa
sub
jbe
cmp
loope
adc
arpl
outsb
adc
pop
inc
xor
and
in
cmp
call
mov
pop
in
sbb
push
xor
daa
test
pop
sbb
mov
movsb
add
lcall
adc
mov
jl
pop
mov
push
push
popf
out
test
mov
add
inc
ret
outsl
inc
test
mov
cwtl
add
loope
jo
mov
cmp
ljmp
pop
dec
mov
mov
loop
sub
movsl
sub
stos
sub
jb
pop
je
xor
into
push
pop
adc
mov
dec
xchg
adc
or
xor
pop
ja
dec
or
loopne
push
push
xchg
inc
ret
xchg
push
sbb
mov
movsb
pop
cmp
mov
mov
jnp
movsb
jb
push
cmp
movsl
shrl
arpl
shr
xchg
jmp
stos
inc
jno
and
and
mov
fs
inc
in
arpl
in
xchg
movsl
xchg
push
push
or
jecxz
pusha
repnz
incb
sbb
dec
pushf
test
movsl
jmp
in
sub
outsl
mov
add
inc
sub
in
jae
test
sarb
or
iret
xchg
jmp
fsts
mov
jno
das
shr
pop
mov
hlt
and
in
jns
movd
and
cmp
insl
js
jne
repnz
mov
lock
sub
imul
xor
mov
ret
pop
adc
push
xchg
sahf
pusha
inc
sti
sbb
xchg
push
dec
enter
mov
out
insb
jecxz
add
lcall
push
lea
mov
mov
inc
mull
cmp
jo
mov
dec
cmp
daa
fiadds
adc
mov
movsb
adc
pop
mov
mov
data16
add
xchg
xchg
hlt
or
arpl
add
mov
and
pop
sbb
inc
loope
mov
pop
aas
into
in
inc
xorb
lods
pop
add
dec
fcomps
xchg
jae
cmp
jp
stos
cld
das
notb
dec
or
mov
push
xor
mov
insl
ret
jno
xchg
adc
xchg
mov
fcoms
add
hlt
out
cmp
xor
addr16
scas
aas
inc
into
subl
repz
ret
fsubs
xchg
cld
jo
int
and
mov
in
adc
notb
inc
fnsave
lods
int3
mov
jno
mov
icebp
or
js
inc
push
xchg
rcrb
sahf
div
loop
dec
in
push
dec
cmpsb
jne
mov
xor
ret
push
or
out
out
shll
fwait
movsl
add
mov
dec
imul
jne
cltd
cmovbe
xchg
mov
pop
shll
or
xchg
ds
aas
sbb
into
fcomi
sbb
push
mov
dec
and
imul
pop
xor
mov
sub
enter
loopne
pop
push
cmp
imul
rorb
mov
jl
out
ficomps
mov
and
or
test
sbb
adc
mov
jnp
or
jg
es
xchg
mov
mov
jge
stc
popa
pusha
mov
aas
xor
daa
dec
or
fisttpl
cmp
mov
test
cwtl
jp
fistpl
jno
mov
fmull
arpl
jp
gs
out
in
push
add
icebp
mov
ret
sarb
xchg
int3
ljmp
aad
enter
addr16
fdiv
cmpsl
sbb
jo
jo
lock
loopne
sti
lds
clc
fsubrl
insb
sbb
stos
mov
dec
push
dec
dec
rol
bound
jbe
int3
lods
nop
repz
fsub
lret
mov
shll
pop
xor
scas
arpl
xchg
xor
mov
cltd
cmp
xchg
xlat
jecxz
aam
mov
pop
push
adc
pop
sarb
xor
lret
mov
pop
mov
das
sbb
sbb
xor
mov
jns
aam
push
stos
rcr
fisubl
sarl
aaa
cmp
int
and
mov
cmpsb
scas
nop
jmp
push
rol
adc
xor
jb
pop
sbb
stos
mov
inc
mov
push
xchg
or
or
and
insb
cli
mov
out
jmp
outsb
je
ljmp
aad
mov
add
jno
inc
scas
dec
pushf
test
jns
arpl
out
or
lea
mov
inc
pop
adc
push
mov
push
xchg
add
pop
lcall
jno
negb
mov
cmp
mov
jo,pn
jl
rcl
inc
cs
and
mov
pop
pop
xchg
das
test
test
lcall
or
jb
mov
add
test
fdecstp
jmp
xchg
adc
mov
adc
cli
sahf
test
int
mov
jb
div
and
fwait
inc
dec
or
or
xchg
mov
adc
enter
cmp
popl
push
inc
pop
adc
or
clc
pop
add
xchg
pop
adc
adc
out
sub
lret
popf
push
push
jmp
sub
xchg
mov
enter
or
cs
mov
fildll
adcb
mov
push
jge
fidivl
fldenv
stos
inc
push
xchg
aam
stos
sub
jmp
dec
aaa
dec
pop
xor
push
add
dec
jns
icebp
jbe
xor
fwait
mov
mov
or
repnz
mov
fstpt
push
mov
fldl
jecxz
jo
addr16
std
inc
shll
je
add
out
add
mov
jg
popf
dec
adc
and
dec
mov
or
lret
and
les
jmp
xchg
into
adc
loopne
and
aam
adc
imul
mov
mov
add
lcall
pop
out
pop
jmp
xor
jae
add
sub
setns
je
xor
xchg
sbb
call
loope
aaa
or
fcom
repnz
sti
lock
xchg
adc
scas
push
out
movsb
outsb
jl
rorb
inc
lret
add
jg
push
mov
and
mov
push
push
lret
inc
stos
lods
pop
sbb
loopne
scas
bound
inc
sahf
mov
jg
cmp
xchg
xor
xchg
inc
movsl
movsb
xchg
sbb
xlat
cmp
or
into
stos
jbe
lods
pusha
aaa
in
daa
stos
push
dec
nop
mov
popl
and
push
mov
mov
movsb
mov
mov
mov
sbb
cmp
test
adc
arpl
cmp
cmp
cmpsl
lcall
cmp
cmpsl
pop
dec
xchg
sbb
popa
dec
mov
xchg
push
adc
xlat
pop
xor
mov
aam
inc
adc
jmp
pop
pop
cmpsl
sub
pop
cld
das
jmp
inc
mov
mov
mov
rorl
pop
cli
add
stos
popa
xor
loop
loop
js
scas
insb
das
xchg
lds
sub
and
stos
rcll
cmp
stos
sub
movsl
fisubrl
das
incb
aaa
add
into
roll
push
cmp
cmp
adc
mov
push
xchg
mov
negl
inc
cmpsb
and
xchg
cmp
andl
bound
mov
sbb
outsl
mov
sbb
cmc
dec
out
movsl
call
xchg
mov
push
inc
inc
jnp
scas
rcrb
xchg
sahf
xlat
pop
lcall
mov
jmp
xor
es
cld
mov
cmp
aaa
push
jns
sub
or
dec
xor
mov
scas
movsl
idivl
scas
xorb
pop
cwtl
dec
popf
push
das
dec
lret
add
aad
insb
fcoml
mov
insb
mov
mov
out
outsl
pusha
imul
pop
test
or
cmc
inc
xchg
jne
and
pop
ja
rcrl
outsb
xor
outsb
lods
dec
and
lock
imul
stos
shl
pop
xor
loopne
adc
inc
out
lret
dec
and
loop
xchg
cmpsb
adc
enter
mov
add
nop
inc
push
loope
pop
pop
push
or
xchg
mov
mov
ss
jbe
xchg
shlb
sub
xchg
pop
jl
nop
xchg
xor
mov
xchg
mov
sbb
push
dec
test
mov
test
hlt
imul
push
dec
loop
push
cmp
push
insl
popf
leave
mov
xchg
outsb
xor
cmpsb
sti
out
xor
xor
inc
aaa
add
cmp
lods
arpl
pop
mov
loope
xchg
jne
pop
jo
sub
insl
aad
inc
lods
mov
movsb
nop
jg
adc
mov
adc
pop
xor
outsb
lret
js
stc
pop
push
adc
xor
jmp
dec
mov
cltd
push
pop
sub
mov
daa
xchg
fstpt
andb
push
lods
mov
lcall
and
push
pop
aad
pushf
cmpsb
sub
jno
inc
fidivrs
cmp
xchg
incl
push
inc
fstps
push
inc
cltd
sub
ja
mov
mov
mov
leave
sbb
pop
cld
sbb
jg
cmpsb
push
mov
add
mov
add
int3
fisubl
fadds
fcom
iret
imul
xchg
adc
cli
insb
push
xor
inc
aad
lahf
mov
lret
rcl
in
mov
xchg
push
arpl
or
xchg
cmp
inc
jae
and
and
lock
lea
or
arpl
mov
sbb
pop
into
int
insb
xor
ds
add
or
and
orl
xchg
fnstsw
js
lret
data16
stc
xchg
aaa
outsl
cmc
sbb
js
movb
pusha
add
and
jne
mov
adc
bound
cwtl
xor
jl
sbb
adc
xor
dec
xchg
fsubrs
mov
filds
fs
pop
mov
jmp
lock
lcall
test
movsb
popa
mov
shll
fistpl
lret
mov
fistps
ds
into
bound
inc
je
push
sbb
mov
jle
les
aas
sbb
pop
unpcklps
lahf
sub
ret
ja
xor
lret
lret
and
mov
fists
push
outsb
out
mov
add
or
jbe
int3
mov
sbb
in
add
jge
pop
mov
in
cld
movsl
fucomip
jbe
add
imul
cmp
mov
popa
rorl
stos
fisubrl
mov
pop
or
or
mov
addr16
push
sbb
add
inc
mov
xor
loopne
and
testl
aaa
aas
out
rorb
mov
mov
sti
fwait
lahf
sub
in
bound
mov
lcall
xor
mov
stc
cmp
insl
mov
add
imul
or
push
repz
adc
setae
clc
imul
fisttps
mov
mov
fsub
mov
jns,pt
adc
inc
xor
mov
jmp
fsubs
test
stc
faddp
push
ficompl
je
loopne
or
gs
mov
fsub
sub
outsb
cld
or
nop
in
sub
iret
test
mov
pop
cmp
int
xchg
aam
mov
lcall
mov
adc
sti
aam
jle
add
arpl
sub
negb
dec
jnp
jle
data16
frstor
sub
add
inc
popf
sub
and
cmp
sti
and
lods
sub
pop
push
in
jp
sbbb
cmp
arpl
pusha
jl
xor
sbb
mov
es
lds
jle
or
push
ret
push
mov
in
fistps
ds
jl
fcmovb
jle
sub
xorl
add
hlt
les
mov
sbb
nop
pop
cmp
dec
sbb
scas
imul
fisubs
leave
push
rclb
insb
ljmp
imul
mov
mov
aam
cs
mov
jnp
gs
sub
jecxz
incl
or
jnp
sub
dec
push
xchg
cmp
adc
or
mov
stos
mov
lds
jne
push
aam
push
or
pop
sub
adc
inc
lcall
pop
ret
sub
lds
loope
jb
inc
pop
pop
hlt
sbb
fcmove
sub
and
inc
fstpt
enter
jbe
fs
mov
imul
xor
pop
out
push
outsl
cmp
mov
decb
push
xor
cmp
xor
mov
aas
xor
mov
xchg
mov
fsubrl
pushf
into
imul
arpl
mov
lret
mov
cmpsb
jo,pt
popf
pop
inc
andl
daa
loopne
orl
pop
mov
ja
pop
push
push
adc
test
mov
mov
or
sub
xor
js
fsub
push
sub
sbbl
cltd
pop
adc
pop
and
std
mov
ss
in
ss
sti
iret
insl
dec
inc
mov
mov
and
ffree
pop
aam
cmp
mov
cmpsb
sub
add
push
shrb
xchg
int3
mov
lcall
xchg
mov
lcall
jge
test
mov
pushf
jg
cmpsb
iret
jmp
push
pop
pop
pop
cmp
fsub
push
and
lock
imull
imul
je
sbb
pop
cltd
inc
jecxz
mov
test
insl
cltd
cli
add
fimull
inc
out
adc
push
push
pop
pop
cs
push
sub
cmpsl
lods
loop
adc
add
lret
aas
aad
adc
repnz
popa
fs
jns
lret
mov
inc
imul
xor
arpl
or
inc
add
insb
xor
pushf
xchg
fldenv
orb
js
jecxz
in
push
push
movsl
adc
sarl
ljmp
mov
and
push
inc
js
cli
or
in
call
dec
push
dec
pop
add
fwait
imul
imul
loopne
ja
push
insl
mov
mov
inc
es
mov
shlb
lret
fsubrl
jo
cmp
out
cmp
fcompl
test
adc
pushf
sbbb
sahf
adc
push
sahf
enter
sbb
add
lea
in
and
loop
fbld
nop
mov
rclb
or
inc
sbb
xchg
sub
fnstsw
fsubl
lods
cmp
imul
call
nop
dec
andl
mov
add
sbb
cltd
ja
or
loop
cmpsl
lahf
jle
sub
aam
mov
xor
inc
jle
add
sbb
push
imul
test
cmp
jo
in
sbb
divl
mov
mov
nop
popf
sar
cwtl
into
xchg
sub
mov
mov
fcoms
push
imul
nop
test
popf
bsr
dec
mov
test
sahf
sbb
xchg
mov
sbb
jae
gs
mov
or
xchg
imul
clc
mov
cltd
adc
pop
xor
or
test
imul
dec
into
std
repnz
add
loopne
out
mov
into
psubusb
enter
lret
lahf
pop
insb
lock
inc
lods
push
xchg
pushl
sbb
fwait
lret
push
ficoml
inc
out
cli
or
push
jne
test
movsl
cmp
outsb
push
push
cmp
insl
xchg
jo
adc
add
dec
gs
xchg
filds
adc
and
movsb
sub
js
cmpsb
cli
inc
push
mov
jl
out
dec
cmp
dec
jns
mov
in
xor
icebp
sbb
iret
mov
jae
mov
pop
lret
xlat
adc
mov
icebp
icebp
je
xchg
and
cmc
iret
pop
pop
sbb
pop
adc
divb
sbb
sbb
pop
call
jmp
shl
adc
xchg
ljmp
and
xchg
sbb
fsubrs
std
addr16
jecxz
xor
fcompl
pop
sub
or
mov
push
mov
leave
subl
fwait
stc
imul
push
test
cmp
addr16
jl
push
inc
xor
cmp
idivl
jp
sub
out
inc
jg
and
fsubrs
mov
int
insl
movsl
mov
jl
xor
dec
stos
mov
fcmovne
fimuls
sbb
inc
popa
lret
dec
aas
dec
add
ss
add
and
mov
and
addr16
call
adc
aam
mov
dec
adc
rol
and
cld
sbb
ds
cmpl
cmp
jno
bound
or
out
ficoms
mov
and
jae
push
mov
icebp
fcmovnu
adcb
jl
ljmp
adc
mov
xchg
jp
hlt
data16
roll
or
rcll
and
lret
sub
mov
outsl
scas
xor
movsb
rol
nop
fsub
stc
xchg
mov
push
outsb
mov
call
test
testl
add
push
inc
mov
inc
pop
enter
xor
repnz
sub
cmpsl
dec
bound
jmp
lea
mov
cmpl
sbbl
and
sbb
push
mov
fnstsw
shll
mov
loopne
pop
add
xor
and
sub
into
stos
out
mov
out
jl
push
mov
repz
lret
pusha
fstps
adc
xchg
imul
testb
ret
scas
jp
push
sub
in
bnd
cmp
jp
sbb
out
jge
dec
mov
js
gs
lahf
insl
push
pop
mov
xchg
loopne
ljmp
mov
sbb
in
inc
inc
inc
aad
pop
mov
mov
dec
jne
sbb
inc
sbb
or
sub
mov
sub
addl
jae
pop
xor
shlb
sbb
pop
jge
clc
fldl
mov
sbb
xchg
hlt
adc
sbb
push
mov
aaa
or
mov
ljmp
mov
sahf
fstps
jge
mov
lret
inc
xchg
cmp
mov
sub
xchg
xchg
jnp
pop
jmp
xchg
insl
arpl
fisubrs
sbb
loop
ljmp
jo
fmull
inc
jne
xchg
push
outsb
push
fisttpll
dec
inc
xor
xchg
stc
in
loope
inc
pop
inc
inc
jns
dec
cli
in
and
dec
mov
addr16
iret
into
addb
mov
jno
mov
stos
es
add
cld
nop
pop
mov
xchg
les
pop
mov
push
cmp
mov
sbb
loope
mov
push
jg
xorl
mov
add
jno
test
clc
test
add
lret
mov
and
or
push
movsb
or
and
sahf
push
bound
sub
jge
icebp
mov
fldenv
inc
mov
jge
rol
enter
daa
test
xor
mov
sub
sub
and
in
cmp
add
jle
mov
sbb
add
mov
sbb
pop
or
test
in
sub
push
xchg
les
mov
inc
insl
fbstp
pop
aaa
add
popf
cld
iret
adc
cli
enter
jnp
inc
fstpl
bound
test
push
inc
repnz
pop
loope
pop
dec
add
and
mov
mov
jbe
int
mov
rorb
sahf
jnp
inc
adc
fwait
dec
xlat
gs
cwtl
cmc
xor
pop
jbe
lcall
scas
push
jo
shrl
shr
daa
sub
dec
jae
gs
jmp
cmp
adcl
mov
cld
das
in
imul
cmpsl
pop
outsl
orl
je
mov
add
sarb
jl
aas
shr
pop
mov
into
xchg
jecxz
mov
xor
mov
add
inc
pop
mov
bound
xor
je
out
es
cli
cld
sti
mov
push
mov
ss
mov
push
fxch
orl
in
lret
test
or
rol
mov
and
jno
pop
leave
push
js
dec
push
pop
pop
and
icebp
xor
xor
and
fsubrp
jle
loop
jge
sbbb
jmp
sarb
cmp
add
or
push
out
int
cmp
xchg
lea
stos
shl
out
dec
loope
sub
dec
jo
aas
outsl
inc
mov
pop
fsubl
inc
ljmp
add
fcoml
lret
xchg
test
out
lcall
cmp
jg
cmp
or
pusha
aam
jl
push
jne
cs
in
sbb
fcmovb
xorl
dec
mov
stc
xor
xor
jg
mov
cwtl
stc
rolb
mov
mov
shlb
mov
or
loopne
into
push
fmuls
in
leave
les
mov
mov
fistps
jb
or
mov
imul
xlat
push
xor
jno
xchg
or
popa
leave
mov
adc
decb
dec
mov
xor
fildl
leave
das
into
mov
cmp
outsl
cmpb
sub
xchg
out
mov
lret
inc
daa
mov
scas
adc
pop
lods
loop
sbb
out
lret
mov
xchg
jns
or
pop
incb
imul
cmc
inc
or
arpl
frstor
fcomps
sub
and
mov
shl
hlt
std
or
cmp
push
test
icebp
xchg
insl
sub
out
aas
outsl
lock
stos
cld
sbb
fists
test
mov
mov
and
xor
test
inc
neg
xor
dec
adcb
dec
mov
push
popa
inc
lods
sti
or
push
push
dec
lret
andl
adc
shll
sbb
push
xchg
mov
outsl
out
addr16
xor
mov
dec
imul
jl
xchg
popa
mov
inc
idivl
stos
inc
adc
call
loopne
ja
clc
lcall
lods
sahf
ret
xchg
aad
out
adc
pop
ljmp
xchg
jmp
fs
stos
fisubrl
sub
aas
and
sbb
push
inc
dec
movsb
repz
shl
xchg
stos
pop
cmp
loope
pusha
mov
cmpsl
mov
push
adc
arpl
mov
icebp
testb
jne
lods
loope
sub
aad
js
leave
jne
push
lds
ljmp
jns
fists
sbb
mov
icebp
dec
shrb
mov
mov
xchg
cli
add
jmp
jg
lahf
push
out
sub
scas
ja
mov
xor
jle
dec
pop
push
mov
into
lret
inc
fisttpl
xor
jl
mov
add
scas
push
into
lods
aas
dec
fidivl
adc
inc
push
jb
or
jge
push
int
in
clc
ja
aam
inc
add
xorl
push
lret
dec
fwait
fwait
lret
or
mov
dec
xchg
enter
adc
jno
xchg
in
inc
push
jne
les
andb
sub
aam
mov
mov
cs
xchg
jecxz
or
push
sub
imul
rorl
and
mov
adc
mov
pop
add
int
iret
pusha
aam
in
adc
fnstenv
xchg
mov
jp
xchg
cmp
pop
and
test
mov
addr16
aas
or
pop
ja
pop
iret
mov
jbe
or
adc
pop
xchg
mov
cmpsb
outsb
pushf
outsl
xchg
xor
or
sbb
inc
icebp
pop
xor
test
fsubr
pop
and
rcl
or
out
mov
or
xor
movsl
enter
inc
ja
jg
sub
inc
mov
les
xor
iret
ds
mov
dec
dec
sahf
mov
pop
popf
iret
gs
cmp
xchg
and
xchg
pop
add
das
stos
mov
imul
nop
fadds
dec
xchg
repnz
sub
ret
pop
les
mov
hlt
stos
xchg
mov
add
fsubl
sbb
add
pop
mov
mov
iret
je
cmp
push
les
stos
push
and
in
pop
fnsetpm(287
and
test
mov
pop
xchg
mov
jo
ret
mov
add
add
add
nop
sbb
shr
insb
push
add
out
cmp
mov
jns
inc
cmp
push
in
pop
inc
icebp
sahf
jbe
jno
icebp
dec
and
out
jo
and
push
xor
xor
mov
in
mov
xorb
xchg
or
lea
or
cmp
js
cmpsb
cs
lea
stos
mov
mov
fcoml
fimull
ret
sbb
inc
int
gs
pop
pop
lret
adc
cld
or
inc
pop
mov
mov
mov
enter
shl
arpl
cltd
xchg
std
repz
outsl
or
addl
in
dec
loope
pop
pop
rcrb
fisttpl
lods
je
cmp
fildl
out
push
cwtl
mov
pop
lret
jbe
clc
push
mov
mov
loope
xchg
adc
cltd
aas
mov
inc
dec
dec
xor
and
out
repz
popf
lret
and
inc
push
ret
sti
lret
jecxz
test
ret
repz
data16
jecxz
mov
fidivs
inc
cwtl
pop
sub
fistpl
sarb
inc
mov
xchg
loope
mov
aad
cmpsl
dec
imul
adc
mov
in
fs
je
sbb
pop
mov
test
jns
inc
jp
dec
loop,pt
negl
adc
xchg
dec
mov
aad
icebp
sbb
fldl
adcb
scas
leave
ss
dec
outsb
cmp
or
xor
or
jmp
data16
std
jecxz
push
mov
out
es
cmp
clc
cmpsl
mov
popf
jae
pop
mov
or
es
xchg
add
xchg
icebp
push
jno
fwait
lock
adc
push
aaa
in
dec
fsts
dec
add
cmp
push
ret
add
into
mov
aad
mov
outsb
jo
inc
stc
mov
incl
cld
out
stos
test
pop
cmpsb
push
jbe
shll
int3
sub
addr16
pop
xchg
jmp
dec
mov
xor
int3
fimuls
mov
filds
int
fwait
sub
mov
inc
in
xchg
sub
inc
inc
imul
lock
push
inc
stos
push
inc
scas
pcmpgtd
lahf
jb
or
xchg
xor
movsb
adc
push
mov
push
cmpsl
int
adc
movsb
enter
cld
lea
fbstp
inc
sbb
sbb
xchg
iret
cli
addr16
es
pop
xor
jmp
icebp
push
dec
aam
repnz
fwait
xchg
fs
inc
xor
jg
mov
sub
sub
scas
add
loopne
or
push
and
test
push
sub
push
xlat
mov
mov
sbb
sbb
js
fbld
fdivl
test
push
mov
pop
pop
xchg
ss
adc
cmpsl
xchg
hlt
sub
shrb
sbb
mov
xchg
jae
cmp
clc
jb
inc
daa
stos
dec
jns
adc
xchg
pushf
icebp
jmp
dec
fcoml
lcall
testb
gs
arpl
lret
stos
mov
in
arpl
and
sbb
adc
and
adc
or
sbb
fiadds
pop
pop
cmp
repnz
add
sahf
scas
jge
mov
sbb
insb
fdivrl
cltd
shr
jo
mov
mov
fnstcw
cmp
lahf
mov
push
mov
cltd
jge
aaa
fldt
or
aaa
iret
test
cmp
or
addr16
mov
stos
into
add
fldt
gs
fsubl
pop
lds
dec
addb
xchg
mov
xchg
sbb
movsl
test
clc
mov
push
push
jl
jnp
fwait
pop
faddl
iret
jno
push
test
xchg
or
stos
cmpsb
nop
push
jmp
push
push
jp
cmp
add
xchg
les
sub
jnp
out
outsl
jge
pop
lock
add
sbb
sub
or
ret
imul
js
inc
sbb
cmp
or
negb
mov
addl
add
push
cmpsl
in
xchg
fsubrl
iret
mov
sub
adc
xor
rclb
or
ljmp
mov
outsb
push
mov
mov
or
shlb
jns
insl
pop
fwait
mov
push
orl
push
jns
enter
std
mov
cmp
iret
and
cld
lcall
jb
xchg
int3
mull
call
mov
shrw
add
xor
jno
popa
cmp
cli
shl
add
stos
jg
adc
push
aas
pop
cmp
pop
js
test
cmp
repz
mov
imul
in
fisttps
dec
fistpll
jp
jecxz
mov
mov
push
test
stc
scas
and
clc
aad
sub
cs
imul
xchg
xrelease
adc
cmc
rclb
rorl
iret
mov
sub
sbb
aad
aaa
leave
mov
roll
lods
xor
jno
lds
repz
lea
jge
cld
sbb
inc
lds
pusha
pop
adc
lret
adc
bound
cmp
jo
push
ret
cmpl
push
xchg
mov
push
pop
sbb
stos
adc
or
inc
lods
cmp
xchg
cs
in
mov
cmp
inc
movsb
mov
sub
shl
mov
icebp
push
mov
pop
xlat
mov
aaa
mov
out
lahf
js
dec
xchg
das
pop
in
pop
mov
sahf
jnp
pop
sub
cwtl
mov
or
test
inc
into
test
int
dec
xchg
sbb
sub
pop
popf
adc
aas
jnp
jae
mov
mov
ljmp
push
in
das
sub
xchg
data16
pop
ds
adc
icebp
mov
test
pop
mov
sub
lret
addl
repz
dec
cmp
std
aas
push
test
mov
lods
or
gs
sarl
add
xchg
mov
pop
lcall
xor
mov
icebp
mov
jle
je
fs
push
lods
leave
and
nop
iret
mov
hlt
adc
add
cmp
sbbb
or
int3
mov
sahf
in
sbb
xor
pop
lcall
aas
in
push
add
and
and
add
xor
mull
setg
push
test
inc
cmp
std
mov
stos
daa
hlt
divps
and
inc
lods
es
ljmp
dec
mov
cmpsl
cwtl
shrl
inc
dec
sbb
cmp
imul
and
pop
add
jecxz
js
or
aaa
pop
test
xchg
cmc
fisubrl
adcb
mov
test
mov
xchg
jno
fwait
mov
imul
pop
insb
push
fildl
jne
mov
or
xchg
push
xlat
sahf
in
xor
pop
jge
jae
loop
cmp
sub
repz
pop
xor
movsb
jl
sbb
movsl
mov
shlb
cmp
and
cltd
xchg
int
sbb
xor
inc
mov
sbb
push
jl
loop
inc
sbb
test
sub
rcrl
xchg
in
jnp
dec
lahf
fwait
sahf
les
lret
scas
aad
xchg
negb
rolb
mov
xchg
out
sub
out
pop
ret
or
or
sti
pop
cli
sub
lcall
xchg
xor
je
inc
lcall
pop
faddl
stc
fldenv
sarb
xor
or
lods
cmp
lds
int3
jl
mov
add
aam
pop
mov
loope
jne
push
xchg
idivb
int3
stos
jp
push
or
sbb
mov
add
xchg
or
hlt
jecxz
cld
add
decl
mov
aam
inc
das
outsl
stos
mov
iret
mov
xchg
inc
fsub
and
ljmp
aam
enter
push
add
dec
inc
sub
mov
nop
fidivs
cmpsl
clc
sbb
sub
int
dec
jecxz
lahf
mov
in
imul
lds
outsl
movsl
inc
ret
dec
or
mov
pop
mov
xchg
jecxz
fidivrl
push
mov
gs
stos
orb
movsb
cmp
jge
push
mov
into
enter
das
cmp
pop
pop
inc
fsts
aaa
sub
jge
not
xor
and
rorb
fsubs
insl
and
add
adc
cmpsb
aam
push
into
loopne
mov
jne
add
stos
lds
pop
sub
imul
test
shll
cmpsl
mov
lods
xor
mov
xchg
jmp
out
mov
mov
in
mov
ja
inc
jbe
or
std
repz
fisttpl
and
xorb
dec
inc
cwtl
dec
add
xor
orb
aaa
jecxz
mov
loope
inc
push
pop
test
cwtl
jns
mov
je
jp
mov
xchg
dec
push
sub
pop
lods
leave
mov
sub
adc
or
push
iret
adc
movl
insl
add
cltd
add
repnz
hlt
cmp
cld
jmp
or
mov
das
rol
xchg
xchg
mov
ret
push
jg
int3
scas
clc
xchg
jle
mov
mov
mov
subl
clc
inc
jmp
dec
pop
mov
sub
pop
clc
lds
shll
cmpsl
push
dec
inc
pop
dec
enter
fimuls
sbb
out
pop
add
sub
inc
sbb
and
lock
adc
push
mov
sub
jns
out
cmpsl
mov
lods
addr16
stc
pop
push
dec
cli
push
xor
dec
in
leave
enter
push
mov
cmp
lret
sbbl
dec
jo
cmp
cmp
into
je
ret
out
lsl
sbb
fdivr
iret
minps
adc
fdivrl
jns
mov
rolb
popa
pop
aad
mov
mov
dec
mov
ja
dec
sbb
das
popf
lods
scas
cmp
scas
or
fs
xchg
xchg
mov
push
and
sub
xor
imul
mov
sbb
pop
lea
mov
xor
xor
xchg
scas
into
pop
mov
cmp
arpl
stos
lods
adc
pushf
mov
mulb
fs
insl
stos
lahf
sub
test
pop
sahf
pop
mov
mov
je
jl
out
das
pop
sub
pop
jns
cltd
push
add
out
rorb
lcall
dec
adc
scas
loope
pop
pop
mov
pop
inc
mov
jle
pushl
dec
clc
jno
jmp
push
sub
out
enter
mov
data16
jl
push
rcrl
pushf
roll
rcl
mov
add
or
push
sbb
and
idiv
leave
pop
inc
add
cwtl
inc
dec
mov
inc
cld
mov
dec
insb
addl
nop
mov
test
out
jns
dec
imul
push
dec
addr16
das
movd
icebp
xchg
sbb
or
mov
repnz
mov
out
imul
iret
jge
mov
js
aaa
test
push
stos
je
nop
outsb
je
mov
sub
addr16
push
dec
shrl
mov
and
push
jbe
cwtl
movsb
inc
dec
leave
push
jge
adc
mov
icebp
or
jp
cmp
stc
jnp
cmp
fnsave
in
pop
lods
or
aad
xchg
pop
and
xor
inc
jl
add
pop
movsb
and
sub
rorb
adc
nop
out
shlb
sti
dec
and
xchg
decl
fscale
add
push
and
adc
dec
or
adc
xchg
inc
lock
out
lock
loopne
sbb
pop
fldt
icebp
mov
cmp
mov
loopne
sub
or
dec
fisttpl
js
rcl
int3
and
xor
gs
inc
sub
call
stos
dec
nop
inc
rolb
push
data16
movsb
loope
loope
sub
fstpt
push
jle
fstl
push
addr16
loopne
movsl
push
cvtps2pi
into
mov
cmpsl
aad
pop
push
mov
out
ss
push
in
inc
inc
imul
das
gs
cmp
push
into
mov
aad
test
scas
and
jmp
dec
and
mov
mov
int3
in
xor
js,pn
jg
and
repz
pop
mov
dec
dec
out
out
or
int3
test
lods
sbb
adc
test
mov
mov
fld
mov
jmp
mov
aaa
xor
pop
inc
addr16
and
or
sbb
stos
jns
mov
jns
dec
shlb
mov
sbb
fdivrs
push
imul
xor
loopne
lods
push
stos
xorb
jg
xchg
inc
sahf
push
push
inc
je
inc
and
and
sub
jns
push
std
out
sti
sub
fcomps
sbb
mov
cmpsl
and
and
psrlw
mov
jg
add
cmp
jle
adc
or
test
negl
xchg
out
mov
ret
jno
mov
add
sub
jecxz,pt
stos
pushf
xchg
lret
out
arpl
shl
ljmp
push
loop
fildl
ljmp
or
cli
xchg
cltd
inc
popf
and
out
jne
test
push
or
shlb
ss
dec
adc
or
and
scas
and
int
and
add
mov
insl
mov
lahf
clc
xor
dec
js
ds
jl
adcb
inc
cltd
icebp
adc
jns
push
es
pop
fmul
mov
popa
pop
orb
aam
into
jle
jbe
inc
sub
xor
ss
pop
inc
bnd
push
ret
lahf
push
sub
ret
mov
xchg
out
xchg
mov
inc
xor
or
fisubrl
stc
push
outsb
jmp
mov
int
dec
rorb
lahf
mov
mov
and
cmpsb
inc
out
sub
or
stos
pop
cmpb
add
in
sub
pusha
xchg
sbb
adc
call
jge
fbld
sub
jno
pusha
loope
outsb
fimuls
cld
xchg
add
divl
jae
jl
daa
loop
xchg
sub
out
ss
xchg
pop
call
push
fstps
les
repz
lcall
ret
in
mov
enter
cltd
cmp
jmp
outsb
jmp
das
cmpsb
outsl
ljmp
mov
ss
mov
aas
adc
stos
fldt
out
cmpl
adc
and
hlt
movsl
jmp
popa
lea
push
dec
sahf
arpl
adc
jg
and
xchg
fisttps
cmp
fcmove
ja
push
fwait
mov
test
or
in
add
sti
push
les
outsl
call
loopnew
xor
iret
adc
out
jle
call
dec
push
adc
add
mov
notb
int
dec
jg
pop
and
mov
mov
out
xchg
mov
adc
pop
stos
dec
popf
into
sub
into
inc
or
dec
inc
fs
imul
leave
fiadds
mov
test
jmp
pop
orl
mov
pop
cld
pop
call
into
adc
jp
cs
popf
ficoml
dec
add
std
enter
sbb
push
push
push
xchg
aad
in
adc
movsb
adc
pminsw
xlat
roll
into
fnstsw
lret
jno
mov
dec
lahf
jne
outsl
mov
insl
imul
aas
outsb
data16
inc
jno
les
xchg
dec
inc
jne
mov
sbb
cwtl
dec
adc
pop
pop
insb
dec
imul
stos
fwait
add
adc
push
xor
xor
add
lret
in
outsb
adc
aad
je
cli
push
fistpl
mov
mov
push
mov
mov
stos
add
xchg
xchg
ljmp
pop
push
mov
push
push
call
sarb
add
cmp
jae
dec
in
mov
mov
jne
mov
cmpsl
mov
imul
in
aam
mov
repnz
or
pop
nop
outsl
subb
fimuls
cmp
aaa
int3
enter
imul
popa
sub
popf
mov
cli
xor
int3
mov
aaa
in
sub
cmp
xchg
cmp
sahf
cmp
lds
pop
xchg
jno
mov
lcall
mov
mov
fnsave
stos
fldl
in
in
inc
push
lds
insl
pop
or
stos
xchg
imul
scas
dec
rclb
mov
not
mov
mov
rol
dec
inc
sti
dec
pop
int3
or
or
lahf
cltd
mov
incb
xorl
xchg
cli
out
dec
pusha
xchg
imul
mov
pop
cmpsl
pop
arpl
jle
bound
cli
outsb
call
lods
nop
pop
enter
adc
jle
sub
lcall
xchg
pop
xchg
repz
push
in
dec
dec
aaa
dec
push
es
movsb
cmp
cld
in
pop
lcall
mov
gs
xor
cmpsl
cmp
jle
cli
push
push
ds
xchg
mov
aam
mov
mov
cli
loopne
scas
or
mov
cmp
mov
dec
cmp
lea
push
dec
mov
andb
outsl
nop
pushf
xor
sbb
dec
cmp
and
mov
sbb
sub
mov
test
sub
xchg
sbb
outsl
xchg
popfw
sbb
fs
pop
dec
int3
and
andb
push
mov
or
ret
in
ret
test
inc
loopne
push
ja
lods
divb
adc
cs
test
gs
sbb
cmp
inc
lods
push
arpl
mov
adc
sbb
add
pop
addr16
movsb
ss
xor
inc
mov
std
rolb
popa
jnp
inc
fucomi
std
fadds
divl
popa
sub
push
sub
lock
sbb
jo
sbb
push
jno
pop
sar
jmp
mov
aam
mov
xchg
cmc
mov
insl
ss
insb
decl
push
and
pop
pushf
jecxz
mov
out
sahf
bound
inc
and
fnstcw
jmp
test
xchg
ret
cmpsb
fwait
bound
les
icebp
test
outsl
cmp
sub
xchg
ret
adc
ret
out
xchg
jp
cmp
mov
movsb
pop
insb
clc
cltd
mov
or
mov
in
mov
fld1
xchg
leave
ljmp
mov
pop
or
imul
ficoms
pop
add
pop
pushf
aad
int3
loope
sbb
cltd
inc
or
hlt
adc
jp
mov
sbb
inc
dec
add
cmp
leave
mov
stos
fisttpl
jo
push
daa
mov
xlat
pushfw
and
or
dec
cmc
xchg
aaa
fistpl
sbb
adc
jecxz
or
mov
fyl2xp1
dec
inc
es
outsl
inc
and
lahf
inc
adc
hlt
pop
cmp
je
pushf
dec
test
addb
inc
or
les
mov
imul
mov
les
dec
dec
es
sahf
dec
pop
dec
jne
stc
jae
and
std
int3
adc
xor
jb
clc
out
lcall
cmp
in
test
cs
in
cld
xchg
xchg
rolb
dec
push
cltd
lea
push
inc
mov
xchg
clc
out
ljmp
jno
and
mov
lret
jl
ds
dec
adc
jmp
xor
push
rcll
test
push
clc
out
or
in
sti
jno
xchg
rorl
out
in
mov
xlat
test
dec
out
pop
lock
jb
in
inc
mov
jbe
add
dec
add
mov
lods
mov
pop
mov
jo
loop
xor
and
mov
mov
mov
addr16
xchg
pop
pusha
cli
jno
sbb
xchg
fwait
out
es
jmp
dec
mov
or
inc
xchg
jmp
add
ror
adc
xor
or
sbb
xor
cmp
adc
lds
mov
aaa
push
jge
in
mov
subl
or
lods
insb
clc
dec
int
in
not
rorl
loopne
lahf
mov
rcrb
cmp
jmp
mov
jl
adc
mov
jb
and
iret
repnz
fidivs
repnz
mov
pop
sbb
cltd
insb
sbb
xchg
insl
pop
pop
add
adc
lahf
fsts
xchg
pop
decl
lret
xchg
pusha
in
pop
pop
pop
add
shll
xlat
mov
ds
xchg
jb
test
add
sub
leave
repz
gs
xlat
in
sub
or
mov
leave
movsl
mov
sbb
sbb
xchg
push
xchg
add
int3
in
sbb
mull
mov
pushf
fisttpl
dec
pop
jb
lods
into
movsb
or
mov
pusha
dec
lcall
stos
cmp
and
nop
xchg
jno
je
inc
pop
mov
movsb
lret
xchg
scas
adcl
sbb
xchg
popa
pop
adc
mov
fs
or
test
or
xor
out
pop
fdivrs
push
jno
sarl
ss
xchg
out
adc
jbe
shll
add
jae
bound
sbb
mov
cmp
insb
call
or
sub
or
mov
xorb
xchg
sarb
xchg
push
jmp
cli
arpl
mov
add
push
jle
js
xor
inc
mov
mov
scas
lds
outsl
pusha
je
cmp
aas
mov
sbb
or
lods
mov
or
fistl
mov
push
repz
fwait
sarl
xchg
dec
out
ret
push
cmp
out
adc
outsl
mov
movsb
jp
dec
adc
repz
lods
lock
push
mov
in
inc
enter
xchg
mov
mov
mov
lods
push
jb
pop
andl
lret
push
mov
in
mov
xor
adc
and
mov
and
lret
repz
ja
mov
lcall
sub
shrl
and
movsl
mov
and
les
xchg
inc
test
and
mov
hlt
mov
and
adc
mov
iret
pop
cld
adc
gs
dec
sub
mov
repz
cli
ds
lret
sub
int
jg
sbb
mov
xor
xorb
sbb
and
adc
cmp
popa
enter
lods
imul
andl
dec
adc
add
mov
fwait
clc
sbb
test
sbbl
imul
movsb
jmp
jb
mov
insb
pop
pushf
test
push
hlt
aaa
adc
mov
push
sbb
or
mov
jle
lcall
add
shrd
cmp
out
sti
add
mov
sbb
xchg
addb
lods
scas
xor
adc
pop
add
mov
sbb
cltd
addb
arpl
add
and
sarb
mov
lahf
push
imulb
lea
mov
add
imul
pop
lahf
ret
jp
sbb
out
fwait
add
paddd
js
mov
cmpsb
inc
or
inc
push
mov
aam
dec
stos
loop
xchg
cmp
mov
and
and
gs
sbb
xor
pop
pop
mov
xlat
mov
popf
daa
pushf
cmc
lcall
cmp
shrb
mov
mov
pushf
xor
es
test
cs
jecxz
sarb
cmpsb
cmpsl
or
scas
xchg
cltd
mov
arpl
cmpsb
lret
aad
ljmp
xor
sahf
pop
clc
nop
pop
mov
in
add
sub
add
pop
sbb
pop
jp
or
pushf
filds
add
mov
fdivl
push
mov
ret
lods
add
xlat
lock
dec
dec
cli
lods
ret
cmp
jl
sub
fstps
sbb
fstpl
lahf
call
fwait
dec
test
std
cmpsl
push
push
fldln2
jge
jb
dec
lcall
mov
fsin
inc
scas
push
repnz
xor
shll
outsb
or
jno
push
pop
and
dec
pop
pop
push
adc
dec
pop
enter
pop
mov
jge
shll
dec
xchg
ds
sbb
inc
inc
and
int3
xor
mov
test
imul
das
push
out
push
lret
mov
mov
jne
ret
aaa
mov
test
mov
aas
mov
push
les
aam
int
stc
jge
ja
lret
or
movsb
loopne
sbb
xchg
pop
add
xor
xchg
pusha
and
xlat
stos
sub
push
lahf
in
xchg
pop
clc
push
xor
inc
pop
popf
or
xor
cmc
jo
insb
imul
mov
or
imul
mov
mov
ret
dec
mov
es
popa
xor
sbb
dec
fsubp
mov
movsl
mov
pop
stos
popf
sbb
ss
out
xchg
cltd
imul
push
nop
mov
sbb
mov
push
out
imul
fbld
arpl
inc
mov
mov
adc
int3
and
jnp
fs
ret
xchg
sbb
mov
repnz
pushf
subb
mov
cwtl
lods
or
mov
add
jmp
enter
push
dec
cmp
setns
cltd
das
cltd
dec
sbb
pop
push
pop
push
push
pop
mov
subl
and
pop
sbb
aaa
into
bound
cmp
sub
push
sub
lret
jns
xor
jbe
std
out
stc
lahf
loope
cs
iret
xlat
jp
mov
xchg
cmp
into
inc
mov
cmp
scas
ds
lcall
fwait
dec
adc
cltd
dec
xchg
cld
sbb
jp
subb
cmpsb
adc
mov
xor
test
jno
and
insb
mov
cmp
lcall
or
jns
mov
into
jmp
cs
inc
jg
popa
mov
or
andb
ret
adc
inc
push
jmp
loopne
cmpsb
dec
adcl
ljmp
cmc
inc
cwtl
sbb
mov
jge
rolb
loopne
mov
rclb
mov
inc
into
push
or
test
imul
push
adc
shll
mov
mov
and
cmp
sbb
dec
xor
btr
ret
jae
cmp
rol
adc
cmp
or
push
cmc
imul
andb
sahf
cwtl
pop
cmp
sbb
cmp
mov
mov
inc
mov
sub
je
jae
inc
addb
dec
scas
dec
cmp
int
add
mov
ja
inc
scas
sbb
addr16
jmp
gs
add
xor
xchg
inc
and
daa
fisttps
push
add
pop
sbbb
lcall
adc
add
enter
pop
in
inc
test
jno
stc
in
test
mov
push
sbb
cmpsb
in
loop
push
jo
inc
scas
out
sub
xchg
mov
pop
ja
call
sbb
insl
push
lret
mov
mov
je
xchg
mov
xor
in
je
mov
daa
mov
dec
mov
lahf
insl
sbb
mov
pusha
sub
mov
out
jle
sbb
dec
imul
iret
and
add
or
rcl
je
imul
mov
in
arpl
or
jl
sar
pop
iret
cmp
and
pop
mov
jl
jp
dec
pop
and
js
outsl
in
xor
xchg
popf
ret
in
xchg
or
push
inc
xor
sti
jp
gs
cmp
rcrb
dec
dec
xchg
movsl
push
data16
scas
rcrb
pop
pop
xchg
inc
jmp
jecxz
stc
sbb
popf
lahf
inc
aaa
loop
repz
aas
push
add
cmpsb
mov
and
lds
sbb
into
hlt
repnz
mov
fcmove
cmp
xchg
insb
mov
in
imul
push
dec
mov
out
cmp
sub
cmp
sbb
push
adc
icebp
es
pop
orl
enter
jle
iret
pop
pop
lahf
shll
mov
sbb
imul
ficomps
andb
sub
out
and
add
sbb
jbe
push
in
inc
dec
daa
stc
adc
adc
fwait
aam
imul
mov
insl
and
jecxz
lret
push
inc
xchg
mov
inc
popf
sbb
dec
icebp
mov
jmp
inc
add
test
mov
or
add
jo
test
dec
fisttpl
jmp
test
mov
jns
xor
cmpl
push
das
ret
test
xchg
ljmp
dec
push
push
out
scas
sahf
xchg
push
shrl
test
mov
inc
cs
jae
pop
pusha
pop
inc
sbbl
lds
jg
mov
out
fsubrp
pop
sbb
push
packssdw
fists
xor
into
cld
pop
jecxz
xchg
inc
test
or
mov
hlt
inc
sbb
cs
push
add
mov
shlb
daa
dec
sbbb
clc
std
jecxz
loop
cmp
jnp
movsl
loopne
cmp
in
mov
clc
nop
push
dec
cmp
pop
mov
out
xor
dec
jb
sbb
dec
mov
lret
insl
punpckhdq
jne
pop
push
or
mov
insl
out
inc
cmpsb
push
sbb
push
or
shl
insb
mov
fnstenv
cmp
mov
xor
das
jp
mov
mov
inc
pop
dec
sbb
ljmp
sub
orb
dec
push
imul
dec
xor
std
cltd
nop
cld
dec
or
jle
mov
pop
pop
and
xor
xor
lret
xchg
inc
mov
dec
aad
fadds
mov
and
sbb
aaa
jg
int
pop
hlt
mov
fcmovb
push
test
bound
sbb
or
mov
out
jge
inc
loop
ja
lea
call
aam
pop
stos
stos
fisttps
sub
mov
jne
stos
cltd
sbb
loopne
out
pushf
sub
mov
shrl
ljmp
out
sbb
leave
daa
push
mov
shr
sub
xchg
jnp
loopne
push
adc
fstpt
divb
mov
mov
aaa
mov
std
jecxz
inc
aam
dec
add
inc
clc
push
jl
outsl
mov
xchg
inc
outsl
adc
pop
and
aaa
push
or
xchg
cmpsl
and
xchg
inc
add
jo
mov
and
and
ds
addr16
addr16
jmp
or
aad
into
out
jl
pop
shll
adc
xor
or
mov
test
cmp
mov
cwtl
push
shl
xor
sub
fwait
lret
ljmp
or
rclb
call
dec
and
mov
sbb
adc
pop
in
push
mov
lods
pop
push
push
add
fs
xchg
fstpt
mov
mov
aaa
sub
push
mov
jp
clc
lock
dec
fwait
xchg
nop
cmpb
outsl
stos
cmp
imul
js
lea
lcall
dec
stc
sar
push
ret
lret
pop
dec
push
xchg
stc
cld
jnp
movsb
test
jb
inc
test
clc
cmp
andb
sub
xlat
push
sbb
lds
jnp
push
mov
mov
fisttps
subb
mov
cmp
fadds
out
testl
jmp
les
notb
addr16
fimuls
ret
or
cmc
repz
lds
out
mov
in
push
dec
push
or
push
call
in
pop
ret
ja
rcr
enter
icebp
and
mov
pop
cs
fcmovnbe
arpl
js
dec
popf
push
bound
mov
adc
idivl
inc
jb
ljmp
inc
mov
inc
pop
push
imul
jae
xlat
enter
xor
dec
xor
in
loopne
push
lret
loop
insl
insl
mov
cwtl
fnstenv
and
or
mov
jns
pop
sub
sbb
hlt
ret
mov
add
loopne
outsl
lcall
call
pusha
notl
or
push
movsb
stc
xor
sub
dec
sub
push
adc
add
xchg
data16
pop
in
dec
push
pop
and
mov
mov
mov
cmp
inc
std
lahf
mov
xchg
popf
dec
xor
xchg
adc
pushf
pop
cmp
pushf
sub
adc
jne
inc
test
cmc
stc
xchg
lea
imul
mov
xchg
cs
and
lahf
inc
mov
fiadds
inc
jae
leave
lcall
imul
cmp
sub
cli
push
notl
mov
in
or
jle
adc
jae
xor
pop
cli
xor
iret
cltd
mov
lea
jb
jb
sub
loop
sbb
outsl
jb
addr16
mov
cmovne
push
dec
sub
mov
adc
adc
into
bound
movsl
mov
test
adc
xchg
adc
callw
out
dec
lret
inc
in
enter
add
lea
lock
dec
dec
mov
imul
repnz
fnstcw
out
imull
sbb
sub
aad
test
popf
lds
cmp
pop
and
sbb
mov
movd
xor
sbb
xlat
or
ja
das
call
adc
pop
push
xor
cmp
popf
pop
mov
aam
push
inc
pusha
cmc
popa
add
popa
jp
cmpsl
mov
push
push
mov
out
dec
movsb
aas
mov
pop
mov
pop
stos
push
pop
fcomps
sub
pop
inc
ds
outsl
arpl
add
cmp
jmp
xchg
btr
push
jmp
shrb
mov
les
mov
test
add
loop
jle
mov
pushf
aam
add
mov
je
sub
mov
sub
faddl
cmpsl
xor
sti
pop
sbb
push
xchg
jmp
mov
hlt
mov
insb
lahf
out
mov
xchg
push
mov
outsl
mov
sub
movsb
jns
sub
insl
jle
faddl
inc
enter
inc
loopne
cmp
loopnew
hlt
idivw
shll
fcmovnu
adc
fnsave
sbb
adc
lock
dec
xchg
inc
jle
ss
mov
pop
cltd
mov
lds
bound
aas
mov
out
xchg
filds
clc
sbb
mov
sbb
sbb
cmpsb
lods
mov
sbb
inc
mov
pop
adc
xor
xchg
push
mov
popa
add
and
xor
imul
movsl
scas
adc
popa
stos
inc
xor
arpl
addr16
ljmp
sub
add
bound
mov
mov
lcall
mov
dec
push
testl
lock
jae
jge
orl
xchg
jo
mov
sub
data16
mov
scas
push
jge
jnp
out
xchg
popa
push
mov
inc
sub
imul
lahf
je
or
test
xor
pop
popf
or
imul
mov
inc
cmp
dec
mov
xchg
and
dec
outsb
jg
and
adc
insb
stc
or
xor
ret
sbb
jo
sbb
add
mov
adc
inc
pop
and
lods
and
insl
dec
lret
xchg
xor
aaa
jp
pop
lock
jno
not
mov
jle
add
push
mov
mov
in
inc
lds
cmpsb
fisubl
jp
inc
cwtl
mov
xchg
fnstcw
or
sub
xor
pop
testb
test
dec
cld
rcl
sub
mov
sbbl
out
fs
jne
mov
pop
mull
sti
sub
imul
bts
scas
add
xor
push
jg
int
lret
aam
mov
xor
cmp
xchg
stos
pushf
shlb
jnp
bound
test
mov
cmp
mov
loopne
je
aas
movsl
mov
into
add
inc
jne
dec
mov
cltd
enter
jp
mov
and
cmp
lret
jp
lods
sbb
mov
andb
ficompl
inc
sti
mov
jbe
mov
adc
call
mov
mov
inc
call
adcl
inc
stos
jmp
insl
sbb
stc
ret
or
sub
xchg
ret
stc
add
push
fsubs
popf
dec
icebp
ss
js
pop
and
cmp
icebp
movsb
shlb
sarb
aas
int3
jecxz
xchg
lds
add
int
mov
mov
add
xor
mov
ljmp
cmc
gs
iret
in
stos
pop
imul
push
aas
stc
adc
pushf
cli
repnz
and
push
push
aaa
xchg
dec
mov
stos
sub
pop
lods
sbb
fistpl
mov
push
sub
mov
adcl
loopne
mov
xor
mov
jle
packssdw
pushf
jae
out
add
out
push
add
bound
int3
enter
pop
push
xor
jecxz
pop
call
fdivrs
mov
push
cmp
test
add
int
sbb
aad
jl
shll
shrl
xchg
imul
mov
push
fmuls
les
insl
fwait
lret
xorb
sub
ret
scas
push
aaa
test
inc
or
rclb
es
push
stos
push
push
jmp
mov
cwtl
xchg
add
add
inc
lret
sub
int
or
push
adc
lea
adc
push
inc
mov
mov
push
dec
mov
data16
pusha
aaa
sub
add
inc
lret
push
cmp
dec
in
pop
sbb
dec
and
mull
xor
pop
cs
out
sti
dec
or
pop
nop
jmp
in
fnstcw
xchg
scas
rcrb
and
fisubl
push
ficompl
pop
cmp
into
mov
and
or
scas
std
jg
cmpsl
jb
je
xor
and
lds
mov
xlat
test
in
push
pop
aam
cld
sub
les
mov
mov
cltd
je
cmp
or
mov
iret
cwtl
push
into
mov
dec
imul
aaa
shlb
fs
fidivrs
adc
icebp
movsb
cmp
mov
sub
xor
arpl
sbb
mov
std
mov
push
push
sbb
sbb
push
daa
or
mov
sarb
pop
out
cmp
push
aas
ret
les
xchg
mov
sub
testl
sub
push
std
insb
lods
data16
in
mov
mov
mov
pop
lods
imul
js,pt
adc
sbb
lock
aam
shll
pop
fld
jae
mov
jecxz
jnp
int
mov
loop
adcl
add
xchg
push
pop
lods
lahf
stos
add
ficompl
jp
aam
imul
lahf
rcr
dec
sub
cmp
xchg
test
int3
cmpsl
repz
sub
out
jp
scas
dec
ja
sub
cltd
mov
sub
inc
out
in
sub
add
dec
pop
dec
test
insb
mov
shrb
adc
fiaddl
push
fcmovnb
push
int3
push
push
mov
inc
adc
push
push
decb
popa
pop
dec
jp
test
jp
mov
cmp
cmpl
adc
mov
xchg
push
mov
mov
adc
pop
mov
jns
xchg
or
loop
add
push
sub
das
stos
fcmovnb
pop
push
pushf
push
sarl
andb
jb
sahf
hlt
cmp
push
cmpsb
imul
iret
pop
shl
ret
rorl
xor
outsb
pushf
ss
aad
jo
mov
notl
dec
je
js
or
jg,pn
je
out
insb
push
and
sub
cmpsl
bound
jmp
or
lahf
call
fnstcw
mov
std
cmp
adc
jne
lcall
test
imul
out
xchg
int
decl
adc
les
repz
loop
jne
jno
sub
mov
clc
imul
cmp
jne
push
xor
mov
and
sbb
dec
mov
dec
inc
xor
push
arpl
or
mov
sbb
lret
or
push
fcmovnu
mov
in
imul
cmp
decl
jle
in
das
scas
nop
repnz
shrl
scas
lods
in
lcall
jmp
adc
cmpsl
mov
jl
add
push
enter
dec
mov
mov
ret
or
les
les
xchg
inc
cmpsl
call
aaa
call
sbb
leave
and
dec
push
mov
inc
repnz
mov
add
imul
addr16
int
fbld
test
hlt
fisubrs
cli
jg
adc
mov
or
hlt
rcrb
cmp
testb
dec
inc
jbe
loope
mov
push
sbb
aam
pop
enter
and
fsubl
cmpsb
push
popa
fstpt
lea
fwait
pop
xor
aam
loop
out
lret
mov
idivb
mov
leave
stc
popf
loop
dec
out
mov
popf
push
clts
dec
clc
jmp
dec
shll
cs
shl
fs
inc
mov
movsb
sti
stc
ret
jne
push
imul
jmp
fsubs
vunpcklpd
add
fmulp
cli
cmp
ret
push
call
aaa
rorb
sahf
test
in
jecxz
and
cmpsl
and
cmc
add
jle
bound
cmp
aaa
insl
inc
decb
cli
jle
mov
aam
xor
dec
sub
add
bound
jns
fadd
push
push
inc
pushf
or
testb
mov
and
and
mov
sbb
rcll
clc
in
scas
leave
mov
stos
call
out
les
lods
inc
or
out
sub
and
xchg
icebp
mov
add
in
lret
add
int
and
sti
and
cvtps2pd
loop
xchg
xchg
shlb
imul
xchg
data16
push
xchg
jge
mov
in
adc
push
leave
and
popa
mov
mov
push
aad
mov
pusha
xchg
psrld
or
popa
xor
mov
icebp
lds
fxam
in
js
push
mov
test
mov
mov
clc
stc
xor
inc
push
push
jne
fs
xchg
imul
dec
jecxz
sbb
or
lcall
sbb
xchg
movsb
cmc
pop
dec
icebp
sti
icebp
call
pop
inc
out
movsb
rcrb
pshufw
int
add
dec
orb
in
jae
stos
js
cmp
dec
popa
xchg
fstps
or
outsb
inc
jl
fwait
xlat
sub
jns
in
pop
std
rcll
loop
jb
xor
hlt
dec
inc
cmpl
xchg
jl
test
das
cmc
ljmp
cmpsb
pushf
repnz
cmp
sbb
push
inc
push
test
cmc
sub
mov
mov
cli
scas
lret
arpl
mov
into
mov
test
mov
mov
pop
xchg
dec
pop
cmpsl
cli
cmp
iret
or
dec
decb
push
aaa
jns
arpl
rclb
mov
lahf
or
in
daa
rolw
push
icebp
scas
shr
in
aas
popf
ret
mov
inc
jns
repz
push
or
js
imul
sahf
loopne
or
cmpsb
mov
adc
shrl
imul
adcb
inc
jecxz
shll
inc
jno
add
lods
xchg
sub
cltd
ljmp
inc
mov
movl
popf
ficoml
scas
mov
pusha
cmp
adc
out
mov
adc
arpl
hlt
push
dec
push
dec
push
scas
jbe
cltd
stos
add
or
outsl
insb
orl
push
push
dec
or
mov
push
sub
insl
pop
push
mov
scas
mov
jne
ljmp
xchg
pop
and
mov
scas
call
insb
or
repz
ja
out
jle
ljmp
inc
clc
stos
clc
movsb
dec
xchg
lret
movsb
xor
bound
xor
or
js
inc
xor
jge
fiadds
sbb
das
scas
adc
fs
and
movsb
pop
dec
lcall
inc
in
lock
and
test
pop
inc
loop
xchg
pop
es
mov
adc
insb
arpl
mov
fwait
pop
cs
gs
fimull
in
and
sub
aaa
and
mov
and
stos
cmp
fwait
imul
mov
jecxz
sub
cld
inc
andl
dec
pop
out
fstl
nop
xchg
push
jo,pt
scas
popa
adc
int3
xorl
sub
insb
aam
mov
mov
imulb
or
addr16
jl
jnp
sub
and
ljmp
lcall
loope
xchg
in
fwait
jno
cltd
cmpsb
pop
nop
cmpsb
xor
pop
loop
push
orb
mov
or
sbbl
dec
fldenv
mov
lret
mov
push
ret
xor
push
adc
iret
xchg
lcall
add
outsb
aas
xchg
inc
dec
inc
mov
or
int
mov
jecxz
adc
out
mov
adc
insb
adc
loopne
xchg
dec
roll
es
outsb
popf
xor
dec
hlt
aas
sub
sti
mov
jmp
scas
and
imul
cmp
cmc
into
popl
cmc
push
mov
inc
jmp
push
xchg
setp
popa
cmp
or
adc
scas
dec
hlt
shll
push
cmp
es
xor
and
jp
xor
xor
xchg
popa
setno
fnstenv
ret
mov
push
jg
sub
jb
aad
int
in
fsubs
imul
in
sub
inc
shlb
aaa
into
xor
in
js
pop
inc
jecxz
mov
adc
ret
xor
dec
xor
mov
add
cmpsl
pop
mov
mov
sub
add
mov
add
xchg
sbb
cmp
mov
lret
repnz
fcoms
and
dec
notb
xchg
sti
jg
inc
lods
scas
out
das
pop
cmp
sub
adc
lods
aad
outsb
jmp
or
xlat
dec
inc
cmpl
jge
and
mov
scas
push
mov
dec
add
pop
cmp
dec
arpl
nop
jecxz
cmpsb
add
fs
je
fists
inc
arpl
aad
xchg
in
xor
push
xchg
mov
in
scas
jae
test
ds
xor
pop
push
aas
inc
mov
pop
xchg
xor
pop
inc
and
push
adcl
push
jle
shlb
mov
add
mov
lock
inc
add
mov
in
mov
mov
xor
sbb
std
jp
out
and
andb
cwtl
mov
adc
data16
mov
pop
lock
pop
mov
mov
xor
lods
xor
and
mov
mov
mov
dec
mov
das
repz
andb
addr16
dec
pop
push
mov
xor
clc
inc
mov
mov
xchg
jo
rcrb
test
popa
fldenv
es
lods
sahf
jle
aas
inc
fcoml
inc
push
or
and
out
mov
xchg
mov
fdivs
clc
testl
or
xor
pop
orl
sub
cmp
mov
mov
cmc
addr16
leave
andl
xchg
cltd
out
lds
js
inc
ljmp
aaa
rolb
fists
dec
aaa
scas
mov
test
xorb
adc
sub
inc
mov
not
mov
aad
mov
push
fisttpl
ret
addl
les
ja
xor
sbb
jne
inc
icebp
push
loopne
clc
xchg
and
lahf
adc
sub
mov
cmp
adc
jp
lea
cmp
pop
mov
pop
xor
jg
aas
fldenv
fsub
mov
adc
test
fistpll
sbb
xchg
push
or
movsb
mov
xchg
jge
jbe
cmp
sahf
xchg
adc
push
jne
xchg
lahf
inc
push
dec
sbb
pop
int3
push
fs
or
dec
dec
add
dec
in
ljmp
pushf
insl
repz
inc
xor
xor
dec
push
pusha
or
sahf
adc
ret
addb
inc
and
stos
add
adc
push
mov
notl
icebp
fdivrl
xchg
mov
lcall
sub
mov
sub
mov
jp
shl
cmp
pusha
mov
cmp
inc
pop
add
gs
xor
add
fsubrl
cwtl
push
sbb
adc
shlb
iret
adc
adc
into
rorl
mov
cmpsb
xor
push
adc
jl
and
mov
std
mov
faddp
xchg
inc
jno,pn
in
out
arpl
aaa
lods
mov
push
pushf
push
and
fiaddl
scas
cwtl
sub
scas
push
in
aaa
xchg
xor
call
push
daa
sbb
xor
stc
inc
nop
cmp
jl
inc
imul
add
jb
xor
gs
popa
dec
enter
les
mov
push
test
mov
pushf
cmp
rcr
insb
cs
jns
out
mov
inc
das
out
inc
loopne
filds
clc
jnp
pop
sub
push
out
sub
pop
aas
out
cli
and
rcll
aad
mov
or
adc
jb
jne
aaa
push
add
xor
loop
push
notb
rclb
les
cmc
cmp
or
push
push
jns
pop
in
in
cmp
popf
outsl
or
cwtl
ljmp
xor
ret
jnp
mov
mov
mulb
cld
jl
fs
cwtl
je
pop
mov
popf
ret
fidivl
call
jb
dec
inc
cmc
repnz
sbb
into
in
negl
pop
arpl
insb
rcr
out
mov
outsl
test
xor
or
call
nop
dec
shll
aas
mov
ja
and
xchg
enter
push
call
or
sub
fsubr
push
push
movsl
adcb
push
nop
pop
or
ret
cmpsl
xlat
lcall
repnz
mov
dec
loop
sahf
vsqrtps
mov
lret
js
fidivrl
jmp
sarb
clc
frstor
mov
pop
mov
sub
mov
hlt
xorb
das
aas
inc
adc
cmp
adc
lea
lods
ret
in
fisubl
pusha
nop
inc
jge
adcb
push
movsb
imul
into
dec
inc
test
fldt
lds
sbb
popl
cwtl
sarl
inc
pusha
leave
xor
and
addr16
into
sbb
push
popa
inc
add
jle
sub
ss
outsl
shlb
mov
jbe
icebp
jp
xor
adc
outsb
pop
sti
test
hlt
insl
inc
mov
jne
or
les
daa
decl
and
cmpsl
in
js
push
mov
xor
insl
xlat
sbb
dec
loope
ror
cltd
daa
push
daa
mov
shl
gs
clc
xchg
cltd
in
mov
enter
or
jns
or
ja
push
or
mov
push
lock
jecxz
dec
lahf
icebp
add
lods
pop
add
call
xor
dec
ret
in
push
stos
xchg
fdivl
movsb
out
jecxz
gs
jnp
fdivs
dec
outsl
mov
and
push
or
stos
hlt
jo
clc
mov
fisttpl
jmp
fsubp
jg
dec
leave
lcall
mov
and
jb
jg
sahf
mov
and
xchg
xchg
sub
mov
push
icebp
mov
stos
pushf
and
cmp
ljmp
pop
int
loope
mov
add
pusha
mov
mov
dec
hlt
mov
rolb
lea
call
aad
lock
lods
pop
fdiv
fcoml
mov
push
cmp
jle
mov
int
dec
or
sub
mov
loop
xor
hlt
scas
cmp
rcll
xchg
pop
out
test
cli
jb
movsb
jae
or
aas
in
xchg
inc
mov
jns
stos
inc
lret
and
repz
cmp
xchg
in
sub
out
push
call
in
xor
xchg
jp
into
test
lidtl
fsubs
mov
insl
xchg
fldt
adc
dec
int3
das
adc
xor
cwtl
bound
ret
add
nop
rcr
add
sbb
mov
jb
icebp
jmp
aas
cmp
leave
pop
ljmp
mov
or
js
cmp
sub
fsubrs
les
movsb
fildl
cmp
mov
inc
imul
dec
push
or
int
add
bound
stos
cmp
inc
gs
add
fldl2e
roll
out
fisubs
mov
insb
daa
cmc
dec
xchg
push
cmp
add
and
mov
jne
mov
adc
jg
xchg
inc
scas
fildl
and
jp
sbb
fiaddl
xor
out
dec
mov
mov
xchg
fsub
xor
push
push
and
and
fwait
rcrb
movsl
push
lods
rorl
sub
sti
pop
je
idivb
dec
aam
mov
movsb
cmc
sarl
stos
rorl
mov
mov
fisubl
xchg
icebp
jp
shll
leave
xor
inc
lea
and
cmp
cmp
and
inc
adc
sub
and
test
test
ret
lcall
dec
incb
xchg
pop
mov
xor
lret
or
aas
mov
or
xor
rcl
jnp
adc
jns
sbb
inc
ret
enter
mov
sarb
sub
sbb
adc
ret
sbb
cmp
sti
nop
ret
push
aas
rcrl
or
in
fsubr
push
jge
sub
sub
into
dec
in
mov
stc
test
mov
push
or
or
sub
jno
sahf
xor
ficoms
inc
adc
jb
ret
pusha
call
xorb
cltd
orl
xlat
xchg
add
xor
testb
call
cmpsl
and
jmp
jge
pushf
xchg
adc
dec
addr16
cmp
in
ret
test
pop
add
imul
out
mov
push
jns
sbb
imul
sbb
scas
ljmp
scas
outsb
sub
sarl
ss
and
push
mov
xor
mov
movsl
mov
cli
imul
lea
mov
xchg
xor
lret
lahf
mov
das
scas
mov
push
pop
xlat
je
sub
inc
add
fs
xor
sub
mov
xchg
fisttpl
lret
adc
fisubs
iret
inc
mov
hlt
cmp
int
sub
enter
jae
es
adc
je
mov
in
push
mov
and
gs
adc
sbb
xor
sub
push
xchg
bound
xor
jmp
or
push
sbb
fisubrs
scas
pop
dec
pop
ss
dec
inc
push
sub
arpl
pop
push
jmp
dec
mov
into
sbb
sarl
mov
mov
xchg
divl
inc
in
enter
rorb
leave
xchg
lcall
push
xchg
xor
dec
mov
xlat
and
int
sub
shl
test
dec
jo
mov
cmp
jl
xlat
out
push
inc
arpl
pop
std
rcrl
mov
xor
adc
popa
push
pusha
mov
ljmp
jmp
out
lds
popl
movsl
ljmp
bound
adc
lods
sbb
xor
pop
or
out
push
add
mov
and
push
shl
popa
stc
and
push
leave
or
sahf
leave
cli
adc
add
sub
sub
or
mov
int
sbb
movl
or
pop
cmp
incb
fdivs
inc
mov
cmp
adc
repz
inc
inc
addr16
inc
pop
icebp
out
inc
or
inc
cwtl
add
adc
das
addl
add
add
pusha
mov
sub
sbb
cltd
outsb
add
push
pop
mov
movsl
or
xor
cli
outsl
inc
dec
xor
cmp
popf
insl
jb
or
inc
mov
clc
push
fwait
lahf
int
or
insb
mov
int
push
adc
inc
xorl
pusha
fwait
adc
dec
aaa
inc
loopne
sbb
and
je
out
push
cmp
mov
pop
xchg
test
sbb
sti
dec
mov
int
das
lahf
mov
decl
push
repnz
xchg
lea
js
push
pusha
push
cmp
repnz
pop
xor
dec
popa
push
adc
add
fs
call
cld
sbb
test
xchg
push
hlt
and
xor
loope
sbb
and
dec
fimull
xchg
xor
daa
xchg
push
sahf
inc
mov
add
addr16
fldl
loopne
jle
daa
push
pop
sub
call
add
adc
test
push
into
add
mov
test
pop
cwtl
faddl
cwtl
adc
leave
leave
dec
sbb
push
and
add
or
mov
add
mov
les
pop
in
sbb
test
int
dec
push
roll
push
push
mov
lahf
push
sub
and
in
dec
sarl
push
movsl
add
mov
push
hlt
or
mov
sbb
dec
sub
ficomps
pop
shrb
or
add
mov
pop
shl
imul
adc
mov
lock
mov
sbb
jge
cmp
mov
dec
nopl
lret
hlt
inc
xchg
or
test
mov
lret
mov
mov
ret
ds
xchg
orl
mov
mov
jg
xchg
push
and
jge
out
and
mov
outsb
jne
outsb
int3
je
inc
pop
fbstp
data16
xor
push
test
lds
movsb
das
pop
sub
out
add
lret
lret
pop
out
stos
lock
in
inc
cmp
jae
mov
dec
jle
adc
pusha
aam
or
aas
insl
mov
ficomps
test
shlb
and
test
cld
mov
mov
push
push
rorb
test
std
adc
pop
cwtl
mov
jbe
sbb
aas
cmp
rorl
cwtl
loopne
or
push
mov
loope
into
cli
aad
inc
jne
mov
lds
and
sti
and
push
lret
push
ja
push
push
test
push
mov
cltd
fimull
cmpsl
push
in
adc
ret
and
push
lods
inc
sub
lock
mov
push
cltd
xor
push
mov
into
sarl
sbb
mov
in
mov
sub
rcrl
or
in
jg
mov
dec
jb
mov
fildll
repz
in
push
dec
lods
jno
jmp
mov
je
mov
pusha
cwtl
xchg
shlb
sub
fdivl
popl
mov
mov
adcb
or
lock
nop
cmpsl
gs
cmp
test
or
add
dec
cmc
test
aas
icebp
dec
inc
mov
incb
jg
xchg
cmp
cmc
add
les
and
fcoms
sub
aas
nop
cmp
ret
and
xor
adc
js
jnp
pusha
movsl
lock
inc
imul
push
shrl
insl
int3
jmp
push
adc
cmp
loop
ljmp
pop
mov
adc
cs
sub
fiadds
popf
fsub
das
in
movsl
adc
xchg
pop
hlt
pop
shrb
rorl
cs
enter
lock
xchg
aaa
mov
mov
jl
dec
loope
insl
lcall
inc
gs
sbb
or
dec
jae
mov
or
sub
cmp
pop
pusha
mov
mov
mov
test
clc
jmp
fnstenv
loopne
pushf
loopne
dec
inc
dec
and
sahf
mov
or
mov
add
mov
jbe
daa
loop
mov
mov
ds
sub
rcl
xchg
cmp
mov
frstor
stos
jp
sub
daa
daa
xor
mov
lock
cmpsb
lcall
pop
pop
jge,pt
cwtl
inc
adc
hlt
nop
scas
stos
or
mov
sahf
stos
add
mov
xchg
bound
mov
dec
sahf
sti
movsl
les
lds
push
xchg
lahf
sub
sub
sub
sub
jne
cmp
adcb
mov
xchg
fadds
inc
mov
imul
sti
std
loopne
lret
sub
dec
hlt
push
push
push
mov
scas
or
lret
push
cmpl
out
cmp
jb
push
outsb
inc
and
and
lcall
mov
add
pop
xchg
sub
lods
inc
push
mov
in
pop
mov
push
adc
out
xacquire
cs
imul
aad
lahf
jmp
add
push
inc
jecxz
mov
div
fnstenv
rolb
in
repnz
push
cmp
mov
push
xchg
int3
lret
add
pop
adc
test
mov
cmp
mov
stos
arpl
or
into
cmc
jg
mov
cltd
sub
adc
push
mov
add
cmpsb
jmp
adc
ficompl
ljmp
neg
inc
sbb
or
cmc
movsl
xchg
mov
int3
cwtl
xor
loope
aad
cmp
cmpsl
jne
xor
test
in
ret
aam
pop
stos
lock
loop
xchg
aaa
inc
fidivrl
unpckhps
pop
popa
inc
dec
or
lret
xlat
jl
loope
mov
jno
sub
xchg
ret
popf
pushf
adc
xorl
sti
sub
xchg
cmp
or
ret
test
or
incb
fwait
daa
mov
pop
cmp
rcr
mov
fldl
mov
pop
and
xor
and
dec
mov
mov
setle
addl
repnz
add
jp
dec
in
xchg
movsb
iret
push
dec
dec
xchg
mov
lcall
pop
stos
fimuls
sub
sbb
lahf
stos
test
sbb
xchg
and
and
jne
das
int
jo
pop
aas
repz
scas
addb
xlat
aad
mov
dec
push
scas
pop
push
cs
fmull
sub
test
lcall
xor
sbb
mov
push
insb
lds
jmp
xchg
sbb
adc
mov
xor
push
adcb
lahf
loopne
aad
into
dec
ja
adc
xchg
stc
test
xchg
xor
movhps
sbb
stos
insb
je
add
jle
scas
pop
jb
mov
mov
mov
stos
jmp
pushf
in
imul
lret
adc
cmc
test
adc
push
lret
mov
fisubrs
shrb
jbe
daa
jp
xchg
js
in
cs
icebp
sub
and
inc
or
xor
inc
int
jno
int3
cwtl
jp
sub
dec
dec
repnz
data16
dec
xchg
mov
jmp
outsb
in
roll
add
or
push
inc
jmp
add
je
popf
xchg
je
insl
dec
sbb
dec
scas
frstor
mov
lretw
cmp
jbe
push
dec
in
add
in
push
movsb
nop
sbb
nop
es
or
in
repnz
or
cmp
cmpsl
adcl
cmp
dec
cmp
cmpl
ja
jbe
jno
xchg
cld
pop
mov
jb
xchg
jg
jge
mov
adc
jl
int3
inc
mov
mov
mov
inc
stos
stos
xchg
lret
addr16
jecxz
mov
jl
sti
inc
xor
push
repz
mov
in
dec
lods
pusha
cmp
test
fisttpl
add
lret
cmp
rclb
stos
jle
xor
add
or
cmp
xor
dec
cld
xchg
dec
pusha
data16
lret
in
in
dec
mov
call
adc
std
cmp
into
cwtl
push
xchg
xor
pop
mov
ja
jecxz
xchg
xchg
mov
dec
sub
shld
pop
xlat
and
lcall
mov
xor
popf
xor
xlat
call
cmp
in
push
mov
xchg
fs
mov
gs
pop
adc
pop
popa
icebp
jns
push
rolb
mov
cli
cmpsl
in
push
cmc
lods
adc
lret
stc
popf
xchg
cmpsl
or
mov
xor
out
pushf
and
je
jp
notb
push
adc
repnz
add
in
ljmp
xchg
fwait
sub
sub
inc
jp
int
inc
xchg
and
lahf
jb
popf
cli
adc
out
jg
mov
rol
fsub
inc
xchg
stc
mov
sbb
pop
cmc
lods
in
ficompl
xchg
sub
pop
adc
iret
pop
in
mov
test
or
fs
jp
jns
xchg
stos
mov
cmp
xchg
in
mov
test
aas
sub
pop
cmp
and
jbe
dec
fwait
inc
outsb
shlb
xchg
add
cmpsb
push
sbb
inc
jo
jo
sbb
jge
or
add
sbb
movsl
shr
dec
jp
inc
cld
dec
outsb
adc
cmpsb
adc
in
mov
push
xor
jno
push
test
stos
mov
cmp
dec
adc
hlt
xchg
test
fisubrl
mov
jo
call
mov
jo
aam
pop
ss
aaa
arpl
inc
mull
push
ja
rcll
mov
jns
xchg
jae
jge
fcom
add
fimull
test
xchg
inc
es
mov
fisubrl
adc
test
mov
add
je
lods
jo
fs
lds
ret
fwait
lret
hlt
stos
cmp
test
pop
fbstp
or
es
adc
ja
push
pop
fildll
loopne
outsb
movsl
xlat
clc
adc
insb
cmp
mov
dec
sub
dec
ja
xchg
push
add
xchg
pop
push
popf
xchg
cmp
inc
dec
sbb
push
jno
shl
jbe
push
out
sub
cwtl
push
adc
into
ljmp
add
xchg
mov
mov
pop
pop
inc
outsl
rcrb
xchg
cmp
mov
dec
mov
mov
and
popa
push
fmull
push
dec
and
lock
cs
jmp
push
dec
xor
pusha
sbb
cmpsb
call
xchg
xor
sbb
xchg
cli
movsb
test
inc
jmp
ja
mov
loopne
mov
xor
cmpsb
jno
mov
shrl
divl
ss
daa
jmp
test
lret
fsubs
mov
add
lds
nop
jbe
lea
jmp
subl
sbb
movsb
jo
loop
jp
aam
mov
mov
sahf
je
jl
mov
loope
fdivp
mov
sbb
fisttpll
sbb
int
and
jg
and
mov
push
aas
mov
jbe
mov
int3
mov
shrl
daa
ret
adc
ss
adc
fcoms
lock
xchg
aam
dec
popf
loop
popf
mov
insl
mov
dec
inc
adc
push
cmp
pusha
lods
and
loop
or
cld
xlat
dec
out
inc
cmpsl
sub
pop
mov
or
sti
xor
cmp
cmpsl
js
add
movsb
mov
sbb
xchg
and
jge
int
enter
and
stos
add
sti
or
xchg
dec
shl
iret
cwtl
insb
push
inc
fistpl
rcll
rcll
push
jl
stos
lods
add
inc
mov
fldcw
pop
aas
popa
pop
loop
hlt
push
or
pop
repnz
fnsave
ret
mov
mov
mov
add
divl
movb
xchg
imul
iret
dec
pop
imul
fcomp
rcll
mov
aad
xor
add
or
test
pusha
or
adc
fstps
push
mov
leave
adc
xor
orl
and
mov
fsubl
mov
pop
push
xlat
popf
xchg
mov
loope
mov
push
jb
aas
push
push
dec
pushf
xchg
cli
dec
adc
fidivl
or
out
lds
lods
ljmp
mov
arpl
xchg
xchg
jns
sbb
pusha
aaa
hlt
mov
movsl
out
call
nop
into
sbb
test
lods
repz
daa
or
add
xor
faddl
jmp
fisubrl
mov
add
jl
mov
subb
bnd
sub
dec
mov
or
in
prefetchwt1
or
cld
dec
lcall
adc
into
mov
mov
cmc
pop
aad
or
daa
cli
mov
add
add
cmpsb
fsubl
and
aas
das
movsb
int
or
iret
jl
fmuls
aam
and
repnz
or
test
cmpb
lods
aad
test
cmp
mov
stos
xor
or
jmp
sbb
insb
mov
loope
or
push
sbb
jne
pop
jle
and
movsb
xchg
int
xor
inc
xor
jne
or
xlat
popa
jne
mov
in
frstor
push
sbb
inc
adc
pop
out
jle
mov
movsb
jno
cld
xor
pop
xor
cmp
xchg
shrb
mov
mov
aad
gs
or
mov
scas
jp
mov
xor
rolb
and
into
cmp
std
aam
lods
mov
ja
std
mov
insl
push
mov
jno
sbb
rcrb
sbb
lahf
lock
rolb
mov
and
rcl
lods
sbbl
lock
es
test
mov
pop
xchg
scas
enter
outsl
mov
and
movsl
cmp
push
xor
push
or
fdiv
loope
popf
mov
cmp
sub
scas
cwtl
ffree
cwtl
jno
adc
push
hlt
adc
xor
xor
in
insl
int3
push
imul
add
out
mov
pop
movsb
sbb
adc
orb
jns
test
push
cli
stos
push
add
dec
pusha
scas
xor
sub
jb
adc
adc
pusha
pop
push
out
xchg
test
aad
in
out
mov
ficompl
and
loop
add
xor
roll
push
sub
xchg
movsb
rcr
and
push
aam
and
ficompl
jbe
shr
std
js
das
sub
push
xor
mov
adc
adcl
dec
sahf
pop
or
adc
lock
imul
hlt
jns
dec
or
jle
ss
outsb
arpl
mov
fadds
std
xchg
test
xor
lea
dec
loope
icebp
mov
cmp
fdivs
into
ret
mov
enter
dec
aam
shlb
mov
xchg
call
pop
inc
gs
hlt
or
mov
rcrl
adc
es
loope
cmp
cmp
pmulhuw
out
cltd
xchg
outsb
add
jge
insl
dec
mov
imul
mov
scas
jg
ret
add
pop
jmp
out
mov
data16
cmp
arpl
mov
xchg
in
xor
sbb
mov
outsb
bound
aad
adc
sbb
inc
data16
inc
fnstenv
jecxz
fldl
or
mov
lds
dec
jle
pcmpgtw
push
mov
cmp
or
stc
push
pop
dec
nop
push
scas
je
out
aaa
cmp
mov
test
cmpsl
push
jge
xor
xchg
out
dec
cmp
shll
popa
and
push
cmp
mov
mulb
outsb
and
xor
ficomps
pop
add
iret
pop
mov
in
push
cmp
add
xchg
sub
insb
sahf
daa
outsl
rcrl
stos
add
and
adc
aas
je
cli
int
xor
insl
divb
dec
fs
sub
stos
je
int3
fs
iret
push
iret
shll
sub
jbe
sahf
sub
push
sub
mov
cmp
sbb
cs
dec
xchg
push
jne
cmpsb
loop
in
pop
dec
xchg
xor
jno
ja
mov
add
divl
in
imul
loope
and
lcall
mov
lods
stos
ja
clc
arpl
stc
out
cmp
xchg
outsl
imul
in
in
sub
imul
mov
shrl
ja
pop
andl
ret
ja
xor
push
pushl
scas
into
mov
mov
dec
lock
inc
nop
push
sub
inc
xor
stos
add
ret
mov
adc
call
push
lods
pop
jbe
icebp
sub
stos
mov
test
sub
xchg
data16
mov
jge
adc
fsub
cmp
cmp
pop
sbb
nop
sbb
pop
or
sub
out
nop
pop
test
repnz
cmp
push
adc
mov
and
and
in
jb
push
and
frstor
fidivs
dec
loope
aam
rcrb
cmpb
mov
inc
mov
clc
in
imul
sub
sbb
iret
outsl
mov
pushf
push
mov
xchg
lret
lds
mov
jp
cmp
cmpsb
sbb
popf
shll
rolb
add
push
shr
mov
insl
and
jp
pop
mov
fs
ret
adc
xchg
loop
inc
xor
jae
sub
mov
call
jns
cmp
jecxz
ljmp
jmp
js
xchg
sbb
cmpsl
test
shlb
or
testl
bound
sub
pop
add
jg
jmp
daa
nop
jnp
cmp
data16
fsubrl
or
jecxz
lods
ljmp
xchg
mov
aaa
mov
push
jb
test
sub
nop
movlps
fnsave
xor
add
jnp
dec
aad
pop
jne
sti
sti
mov
fists
fnsave
cld
insl
decb
popa
iret
sbb
aas
cmpsb
and
rcl
add
adc
mov
xor
cmpl
mov
and
jo
push
dec
adcl
call
push
mov
adc
dec
ret
lret
pop
push
cmp
mov
in
xor
and
lea
mov
es
mov
rolb
lods
lret
inc
inc
dec
push
mov
add
inc
sbb
test
push
xchg
out
add
std
insl
sbb
cwtl
and
pop
adcb
push
add
pop
pop
lds
sbb
mov
notl
cli
shrl
pop
stos
sbb
dec
jbe
mov
scas
test
call
xchg
inc
mov
shrl
mov
pop
pop
fnstsw
pop
cwtl
arpl
mov
dec
cmpsl
in
jg
xor
push
fs
push
push
sub
xor
adc
push
pop
sbb
filds
dec
sub
xchg
add
xorb
jb
sarl
es
aas
lock
scas
inc
rcll
dec
cmp
adc
jnp
fwait
sbb
lret
lret
fwait
push
add
or
push
mov
dec
jb
adc
ja
test
ret
sbb
sbb
ds
mull
ja
pop
mov
sbb
or
popf
inc
mov
jg
mov
orb
pop
rol
das
mov
fwait
inc
je
aas
push
pop
pop
jns
push
call
and
shlb
sub
sub
aam
cmp
in
push
sub
pop
insl
lcall
cmp
pop
and
push
pop
add
or
repz
jmp
aaa
les
pop
pop
inc
fnstsw
orl
sub
shr
push
fwait
decb
nop
sub
fdivrl
sub
adc
xchg
outsl
xchg
fildll
cmp
xchg
popf
bound
adc
adc
sub
ss
add
insl
or
ret
data16
mov
dec
cld
add
pop
fcoml
mov
cli
push
out
fisttpl
push
clc
scas
pop
mov
add
psrld
xchg
xorl
lock
icebp
mov
add
cmp
popf
sub
and
xchg
into
hlt
aaa
js
stos
dec
out
scas
inc
push
mov
fidivl
cmp
out
stc
mov
arpl
push
pushl
or
xor
xchg
pop
cmp
dec
sub
mov
push
loope
shll
scas
adcl
sub
sub
mov
pop
fisubrs
add
xor
pop
les
aad
rcrb
lret
dec
mov
imul
push
mov
pop
lret
mov
popf
fisttpll
shll
pop
push
adc
cmc
je
loope
popf
mov
repz
mov
and
lahf
or
out
fimuls
fwait
lods
es
and
rcrl
loop
adc
add
out
xlat
insb
inc
in
ret
adc
outsl
lret
int
pop
jg
gs
cmc
aaa
movsl
push
fidivrl
and
test
add
dec
outsl
xor
cmp
lcall
subb
sub
in
cmp
scas
jecxz
push
sbb
stos
cmp
stc
xchg
push
rorb
data16
dec
pop
test
mov
clc
and
cmc
mov
lcall
es
insb
or
std
cmp
and
cwtl
ret
mov
jbe
mov
divb
imull
dec
das
jge
inc
or
inc
jns
inc
dec
jnp
out
fucom
dec
mov
xor
jg
arpl
xchg
std
in
jo
adc
sub
push
es
ss
xchg
jecxz
mov
jg
jecxz
push
lret
fstl
mov
ret
dec
inc
dec
jp
xor
or
repnz
sbb
cmpsb
shrb
mov
mov
js
and
cld
add
pushf
lret
mov
mov
imul
ljmp
int3
shll
notb
stos
scas
sub
xor
out
pop
ja
scas
fstl
aad
aam
jl
out
xor
mov
mov
cmp
jne
lret
cmp
xchg
stos
imul
in
in
repnz
sbb
mov
shlb
xchg
mov
mov
adcb
addb
adc
repnz
jo
stos
out
into
bound
sub
jo
fisubrl
dec
lret
movsb
scas
pushf
pop
stos
lret
fiaddl
cmp
faddl
xor
push
inc
cmp
stc
aad
or
imul
push
iret
jnp
clc
arpl
outsl
outsb
push
adc
shrb
out
add
mov
icebp
insb
orb
insl
lcall
sub
andb
jecxz
mov
rol
inc
sub
and
sub
pop
sub
aad
cmp
enter
add
lock
push
lret
push
pop
push
add
int
cmp
xchg
jp
dec
add
mov
dec
mov
sbb
test
into
shrb
repz
and
lock
fdiv
lds
inc
fdivs
mov
dec
add
inc
pop
data16
lods
add
mov
sahf
ret
sarb
push
ds
and
mov
mov
cmp
icebp
data16
cld
dec
outsl
ljmp
jg
jecxz
inc
xor
mov
out
test
pop
xchg
and
and
mov
dec
pop
int3
and
xlat
push
mov
sub
adc
in
inc
mov
sub
dec
mov
inc
xor
movsb
mov
call
into
movsb
popf
aam
pop
ds
mov
dec
ds
xchg
movsb
pop
xor
loope
sahf
adc
cmpb
pushf
arpl
mov
aam
sub
sbb
push
je
jecxz
sub
mov
fisttpll
ss
sub
pop
movsl
hlt
inc
gs
sbb
mov
divb
push
jp
fbstp
push
ss
into
popa
jle
int3
fldenv
sub
fisubl
xor
cmpsb
das
push
mov
inc
pop
dec
xchg
push
jbe
xor
xor
ret
idivb
scas
into
sbb
xchg
xor
xor
cmp
xchg
mov
ret
aam
adc
std
push
xchg
cli
jg
arpl
inc
test
jae
test
pop
mov
out
jp
mov
ss
scas
push
hlt
and
sbb
cmp
pop
daa
aas
aas
int
dec
sahf
in
mov
add
in
fdivrl
push
mov
push
cmpsb
sbbb
inc
sub
fsub
inc
lret
orb
testl
insb
pushf
sub
ret
stc
in
add
jle
xor
enterw
fisubrs
mov
mov
repnz
or
add
lea
pop
cli
cmp
and
xchg
in
das
fnstcw
sbb
dec
jmp
sbb
test
pop
push
addr16
push
pop
inc
push
shlb
andb
mov
and
cltd
les
pushw
jp
or
jnp
cwtd
jae
add
mov
xor
test
pop
divb
out
cs
faddl
inc
roll
xchg
cmp
mov
push
addr16
rcll
inc
mov
sub
in
and
enter
imul
cmp
addr16
fwait
dec
cmpsl
inc
mov
rcrl
xchg
fisttpll
add
push
mov
stos
imul
cmpsb
sbb
mov
fwait
mov
sbb
sub
sbb
cld
je
sarb
rorl
dec
rorl
sub
sub
push
sti
mov
push
cs
dec
cmp
cmp
sbb
out
mov
cmp
sub
cmp
cwtl
gs
pop
loopne
lahf
pop
les
inc
repz
inc
je
mov
lds
jbe
aam
add
mov
dec
pop
fadds
push
mov
lahf
xorb
and
aad
ret
sub
fists
nop
lahf
aas
dec
add
scas
dec
add
dec
adc
dec
push
test
dec
mov
mov
pop
fcomps
addl
movsl
and
cmp
cltd
dec
js
fucomp
imul
sub
out
cwtl
fiadds
fisubs
add
or
shll
ljmp
hlt
or
sub
mov
cmpsl
bound
jmp
adc
xor
dec
mov
pusha
xor
lahf
mov
mov
ds
filds
sub
cli
scas
push
addb
das
out
in
xchg
mov
rolb
jb
push
jp
ret
fstpl
iret
dec
adc
mov
xor
jbe
test
mov
test
out
mov
inc
pop
push
sbb
in
inc
enter
xchg
sub
gs
mov
xlat
ljmp
mov
xor
lcall
sub
mov
mov
data16
xchg
lret
adc
pushl
movsl
xchg
jle
divl
cmp
cmc
in
xor
stos
lods
sub
sbb
push
test
jl
mov
cmpsl
xor
stc
mov
cld
lods
and
ror
aas
or
xchg
shll
and
daa
xchg
cli
pop
mov
bound
push
sub
mov
push
faddl
call
enter
and
xchg
popa
repnz
add
je
ffreep
mov
xchg
hlt
in
add
call
test
jge
call
pop
sarb
lea
in
and
sub
repnz
pop
jb
xchg
repnz
rolb
or
mov
loop
mov
pop
push
lods
jge
adc
jl
test
mov
repnz
arpl
jl
mov
pop
into
mov
pop
pop
arpl
mov
dec
in
cmp
in
cld
outsl
xchg
sbb
into
pop
and
test
or
jg
and
push
ret
iret
setns
fsubrs
movsb
rep
adc
outsb
or
xorb
fs
stc
inc
xor
in
imul
dec
xchg
call
mov
xchg
dec
dec
hlt
outsb
dec
cmp
in
pop
adc
xchg
sub
mov
jmp
cmp
adc
sbb
std
or
xchg
mov
jg
sahf
adc
shld
lods
xor
mov
jnp
mov
cmc
adc
or
jle
dec
movsl
jno
dec
cltd
lret
mov
push
pusha
or
sub
mov
adc
sub
out
lea
or
aam
jnp
pop
std
add
mov
xchg
jb
mov
inc
dec
loope
sbb
iret
stos
sti
inc
lcall
div
jo
lea
stos
dec
rclb
test
or
lret
lcall
sub
push
push
mov
test
stos
pop
das
jge
xor
push
dec
mov
je
push
fdivrl
rcll
ret
mov
jl
pop
rorl
shlb
sbbl
and
iret
bound
stos
cwtl
push
jge
int
push
cld
mov
mov
push
arpl
fiadds
dec
fsub
ja
add
adc
repz
dec
pushf
sub
int3
mov
icebp
nop
imul
bound
xchg
lcall
cltd
mov
data16
xor
sub
add
movsb
into
scas
pushf
fiadds
jmp
subb
cwtl
cmp
xchg
in
imul
xor
push
xchg
pop
xchg
in
ljmp
dec
mov
pop
cmp
mov
xchg
cmc
cwtl
jae
in
es
loopne
jnp
div
test
xchg
jmp
or
outsl
xor
ss
ret
mov
addr16
lcall
or
fisttpll
inc
sbb
xchg
cltd
adc
mov
cmp
push
mov
adc
clc
repnz
add
dec
lods
xchg
inc
pushf
pusha
jns
in
fs
pop
negl
les
push
inc
test
dec
adc
inc
lods
cwtl
inc
mov
dec
mov
xor
xor
leave
shlb
mov
mov
test
push
push
test
cmpsl
sbb
loope
repz
sbb
adc
inc
out
push
xor
je
insb
jae
lret
xchg
int3
es
sub
shrb
xchg
mov
clc
mov
insb
mov
and
jo
popa
xchg
movsb
rcll
lea
adc
cmc
mov
loop
mov
jecxz
mov
test
xchg
lods
mov
jge
pop
pop
aaa
add
out
mov
add
adc
movsb
icebp
cmp
jb
aam
mov
and
aad
loop
fwait
xor
shlb
mov
lahf
cmpsl
pop
and
in
lcall
push
aaa
std
xchg
push
lahf
aaa
out
jmp
andb
or
int
mov
add
in
sub
enter
loop
xchg
mov
or
mov
xor
xchg
add
dec
xchg
es
mov
in
inc
pop
adc
je
shll
lods
cmp
xor
push
movsl
add
sbb
outsb
add
xchg
dec
fnstcw
jno
sub
push
xchg
imul
fcomps
fwait
dec
push
popa
cmp
fwait
test
or
or
das
sbb
dec
xchg
mov
rcrl
loopne
mov
push
sub
mov
stc
test
cmp
adc
cmp
les
insb
dec
mov
inc
aad
lods
and
push
ret
lret
lods
int3
cs
cld
mov
test
test
and
rolb
or
push
xchg
dec
andl
dec
xchg
outsl
cltd
push
mov
add
test
out
lds
inc
test
icebp
mov
loop
hlt
mov
sbb
mov
pop
cli
cli
sub
scas
jmp
movsb
mov
aam
clc
push
dec
mov
dec
scas
scas
out
in
mov
adc
fwait
icebp
and
or
sub
outsb
mov
pusha
into
arpl
pusha
inc
cmp
lret
xor
mov
jnp
ja
into
daa
cmp
cmp
xchg
adc
repz
adc
inc
outsb
dec
cmp
aas
xor
je
aad
push
push
lret
push
cwtl
in
cmc
icebp
lret
mov
cli
cltd
fwait
and
in
pushf
mov
cmp
in
pop
sub
mov
jno
out
fcoml
or
mov
fildll
pop
pop
push
adc
xchg
pop
dec
mov
pusha
add
shlb
icebp
sbb
pushf
add
sub
pop
int3
xchg
aad
rol
cmp
lock
mov
int3
mov
fisttps
fnsave
leave
shrb
cli
sarb
addr16
cmp
pop
mov
add
push
cmp
call
pop
jp
js
pop
mov
popl
test
dec
int
mov
sub
loop
setne
out
repnz
mov
aas
jae
jnp
add
cmc
mov
and
scas
gs
mov
jle
shll
out
cld
out
mov
mov
rclb
mov
or
add
sti
jb
gs
je
push
daa
sbb
cmp
sbb
mov
xchg
add
sub
mov
ret
fdivrl
testb
pop
mov
or
xchg
clc
fadds
jae
or
cmp
mov
or
adc
lea
shll
repnz
pop
adc
clc
fistpl
stc
fcmovnbe
loopne
or
push
icebp
mov
test
sbb
cld
popf
jp
sbb
jle
popa
cmp
in
sub
cmp
bound
stos
jae
pop
mov
imul
dec
cmpsb
mov
js
inc
sub
enter
ss
int
inc
jnp
js
ffreep
icebp
inc
pop
and
or
dec
adc
popa
shll
xor
out
loopne
dec
imul
fxch
xchg
loop
jne
cmpsl
xchg
xor
adc
pop
dec
jmp
outsl
out
jae
push
cmpsl
inc
aad
mov
data16
jl
gs
mov
xor
jno
fs
mov
push
adc
shlb
stc
and
push
xor
cmpsl
ja
mov
addb
loope
jne
jb
xor
std
push
inc
daa
scas
fbld
cmpsb
sub
pop
lods
xchg
int3
mov
mov
imul
gs
xchg
and
pop
addb
imul
xchg
pop
mov
sahf
out
movsb
mov
testb
fcomps
mov
outsl
fisubl
xor
pop
or
lds
rep
mov
das
jb
iret
mov
sahf
inc
add
jg
dec
mov
mov
jo
or
or
out
xchg
insb
pop
push
shll
popf
cmp
xchg
inc
mov
out
or
mov
jg
ljmp
outsb
mov
xchg
sub
aad
fwait
ds
jmp
jmp
mov
sti
sbb
mov
ds
movb
cmp
mov
pop
cwtl
lock
cltd
fcoms
mov
ret
je
or
sbb
adc
cli
cmp
pop
lds
pop
scas
je
out
es
xlat
inc
dec
ret
adc
out
rcll
xchg
cld
xchg
sbb
sub
sbb
pop
movsl
or
jge
and
or
cmp
jp
mov
cmp
jecxz
dec
ret
push
adc
pop
xorb
rclb
les
hlt
stc
mov
sbb
pop
dec
dec
mov
aad
arpl
push
mov
scas
dec
dec
inc
dec
aas
and
dec
xadd
daa
xor
lcall
add
shr
nop
mov
sbb
mov
push
fcmovnbe
jno
mov
movsl
pop
fmul
push
sti
lahf
std
fldcw
push
mov
sub
gs
xchg
in
mov
mov
leave
cmp
fldl
sar
fwait
jg
mov
adc
sbb
xchg
lahf
xchg
cmp
adc
xchg
mov
push
pop
rcr
dec
xor
and
lret
cwtl
ficompl
and
jp
sahf
orb
insb
out
es
add
mov
fisttpl
jge
push
push
jle
test
in
mov
lea
sbb
pop
jne
insl
adc
jo
cwtl
es
sbb
sub
mov
test
shlb
in
push
push
outsb
sbb
mov
jae
fnstsw
pop
outsl
scas
pop
mov
les
and
mov
insb
in
add
scas
in
movsl
mov
shll
sbb
pop
xor
mov
int
push
out
jbe
xchg
mov
loopne
daa
ljmp
mov
fwait
scas
rorl
sbbb
cmpb
pop
push
ss
movsl
ret
loope
dec
stos
dec
mov
test
mov
dec
adc
mov
sbb
xchg
adc
popa
sub
sti
cmp
push
cmp
mov
mov
mov
cld
popf
mov
aam
call
adc
mov
jmp
into
fistpll
jns
inc
fcom
shlb
push
push
xchg
add
adc
dec
or
dec
in
fmulp
shll
dec
xor
loopew
lock
pop
aam
arpl
in
int
jb
scas
and
icebp
out
mov
lea
xchg
cmp
inc
test
sbb
fs
pop
mov
xor
add
dec
in
inc
scas
pop
outsb
sub
sub
ret
mov
pop
insl
leave
mov
loop
call
pop
leave
stc
sbb
mov
cmp
pop
xchg
jno
mov
mov
push
lcall
mov
addr16
mov
cmpsl
out
and
adc
dec
sub
mov
jl
loopew
xchg
sbb
lcall
iret
add
jle
xchg
clc
add
inc
insb
loop
sub
roll
adc
xchg
push
jae
mov
jmp
dec
push
addr16
imul
xchg
jae
push
out
jb
mov
call
inc
lret
mov
pop
pusha
cmp
mov
inc
jne
pop
sahf
and
cmp
int3
pusha
shrb
jl
loop
cmp
fldcw
jg
and
dec
pop
out
xor
fsubrs
loope
mov
je
js
int
jnp
dec
out
sbb
popf
jle
mov
dec
ljmp
mov
ja
je
sbb
xchg
lret
add
movsl
daa
push
aaa
push
mov
pop
or
js
xor
or
add
data16
add
xchg
movsl
imul
andb
xor
inc
inc
test
dec
fistl
cmp
jne
push
jb
xchg
jl
in
xorl
adc
lods
jb
outsl
rcrb
adc
inc
mov
out
popf
out
push
jl
or
cltd
lds
dec
mov
sub
in
dec
popa
sub
mov
push
xor
lds
out
negb
cwtl
sbbl
mov
lods
add
jnp
jecxz
push
add
sub
movsl
fst
sub
ds
mov
mov
mov
gs
xor
sbb
pop
fbld
shlb
ljmp
jle
fnstsw
xchg
pop
pop
jge
or
mov
push
out
add
sbb
mov
mov
inc
push
xor
lock
popa
mov
xchg
out
adc
out
test
jo
shl
mov
arpl
lods
mov
mov
adc
or
ficompl
xchg
ret
les
mov
sbb
rol
add
das
scas
aad
sahf
loope
pop
cmp
dec
arpl
ret
sub
xchg
jp
jne
jl
mov
push
stos
arpl
xor
jmp
nop
pop
js
cmp
in
dec
mov
lcall
ljmp
sbb
jg
push
jo
cmp
jb
and
xor
lret
dec
enter
shl
loopne
cmc
and
mov
jb
sub
jb
shll
lock
sbbb
xchg
adc
outsb
adc
lds
mov
loopne
sbb
mov
jge
xor
loop
jbe
hlt
jl
icebp
cmc
jae
mov
lret
push
pop
test
add
ljmp
idivb
sti
rolb
mov
outsl
jecxz
lods
cmp
loopne
sub
daa
add
loope
and
push
sub
mov
jmp
je
mov
and
mov
fcomps
ror
mov
jecxz
xor
fiadds
lds
mov
ret
push
in
data16
inc
cli
xchg
push
mov
lods
or
xchg
push
das
outsl
push
popf
mov
aas
addr16
adc
lock
pop
int3
out
jns
out
push
insl
bound
mov
ljmp
jbe
sub
xchg
test
push
aaa
dec
or
sbb
push
pusha
xor
in
jge
pusha
movsl
je
add
hlt
gs
cltd
in
lret
and
sub
cmpsb
das
add
ss
scas
in
das
mov
push
xchg
pop
outsb
lahf
incb
mov
xchg
sub
adc
iret
out
push
or
mov
mov
ret
sbb
mov
cmp
clc
js
popaw
arpl
movsb
mov
call
in
lea
mov
rorl
mov
gs
xchg
psubb
push
dec
sub
mov
repz
lret
test
rolb
mov
fldt
sub
arpl
mov
cltd
insl
lret
xorb
ret
shlb
out
and
popa
les
dec
flds
lea
andl
cmpsb
out
xor
dec
adc
loope
andl
hlt
sub
lods
fwait
adc
sbb
clc
shl
jl
ja
data16
cmovs
imul
bound
jb
xlat
imul
aaa
out
pushf
pop
pop
push
sbb
scas
test
in
and
push
imul
sub
sbb
es
cmovle
pop
insl
out
sbb
or
jg
cmpsb
rolb
in
ja
cmc
push
shld
imul
cmpb
mov
mov
addb
ss
adc
mov
jmp
pop
cltd
sub
mul
adc
insb
pop
or
iret
popa
dec
pop
insb
push
xor
in
fistl
shlb
xor
sub
mov
or
in
push
scas
or
and
nop
sti
pop
inc
fs
sbb
cs
mov
imul
imul
push
sbb
xchg
cmp
orl
jl
mov
adc
incl
pop
pop
std
jmp
fsts
jnp
cs
dec
int
mov
leave
jae
pushf
outsl
sbb
pop
mov
pushf
push
out
mov
sub
add
in
sarb
pop
cld
push
xor
leave
cmc
add
pop
nop
mov
dec
and
pop
rcrb
inc
adc
jae
test
add
imul
mov
pop
jns
lds
aam
into
scas
out
sti
mov
add
imul
push
mov
and
mov
xor
add
cs
pop
mov
lods
add
sbb
jmp
rolb
push
testl
jp
or
jbe
shrb
jns
inc
lret
sbb
into
rorl
aaa
int
pop
or
insb
cwtl
cmpsb
jecxz
xchg
pop
pop
sub
push
lcall
ret
stos
cmpsb
mov
and
mov
jno
stc
inc
ljmp
mov
xchg
xor
xchg
sub
cltd
cmp
aaa
lods
hlt
gs
in
jnp
sar
jae
cmp
in
js
pop
outsl
mov
cmp
imul
fldt
inc
cmpsl
pop
cmpsb
push
pusha
daa
pop
add
or
cmpsb
ret
lret
jp
test
ret
hlt
out
mov
shr
or
cmp
mov
add
test
and
or
pop
inc
jge
div
xlat
test
fiadds
mull
cmp
repz
cmp
and
xchg
imul
push
sahf
mov
repnz
lahf
outsl
push
pop
and
mov
mov
adc
lret
pop
push
lahf
add
dec
js
push
stos
or
add
and
pop
mov
xor
xor
icebp
call
sub
inc
pushf
pop
push
loopne
mov
fnsave
mov
testb
pop
sub
frstor
jl
push
scas
pop
ja
mov
xor
and
fisubrl
dec
cmp
neg
pop
cmp
mov
push
pop
dec
aad
nop
into
sbb
into
test
and
jmp
lret
clc
push
jno
cli
div
mov
xchg
cwtl
adc
loopne
std
and
xlat
xchg
aas
imul
jno
fdivrl
pop
mov
xor
ret
or
incb
xchg
pop
fdivrl
xorb
movsl
repnz
repz
mov
mov
xor
cmp
push
out
icebp
inc
push
xlat
es
inc
sbb
jg
lcall
sahf
xor
adc
lret
adc
sub
std
out
and
gs
mov
sarb
rol
push
dec
jo
movsb
in
in
mov
mov
dec
mov
fsubp
int3
xchg
xlat
adc
mov
scas
cmp
fdivrl
dec
gs
pop
leave
mov
pusha
repnz
mov
jecxz
andl
xor
jno
iret
add
jmp
sar
mov
pop
xchg
stos
cs
cmpsb
jnp
mov
andl
mov
popa
adc
xchg
mov
inc
out
jge
jge
or
stos
fdivrs
pop
push
scas
push
enter
in
ss
fnstsw
jae
jo
lea
add
lds
in
mov
ret
xchg
dec
inc
pusha
add
lods
insl
lahf
mov
je
ret
addr16
xchg
outsb
sub
imulb
mov
in
jb
rcr
das
jecxz
mov
push
push
or
jo
or
xchg
les
xor
xchg
inc
rcrb
ret
enter
mov
hlt
in
stc
mov
pushf
mov
shll
inc
seta
scas
push
fdivrl
adc
mov
cwtl
sub
jns
or
rcrl
sub
xchg
push
stos
in
sub
inc
pop
lods
xor
xchg
fcomps
ss
shll
jl
add
into
xchg
mov
inc
and
xor
fnstenv
sub
jo
and
adc
enter
repnz
mov
rol
ret
push
filds
pop
data16
dec
adc
pop
mov
outsb
adc
jp
mov
pop
push
push
dec
add
fnstsw
cmp
pop
jno
add
popa
sub
adc
cmp
push
or
or
inc
shlb
in
push
inc
inc
clc
pop
mov
inc
daa
mov
pop
xor
mov
inc
or
out
lret
jl
movsb
add
inc
push
xchg
test
loopne
jnp
push
mov
imul
and
cld
into
adc
jmp
xchg
lea
cmpsb
sub
sub
sti
dec
mov
pop
jge
xchg
pop
movb
popf
jmp
lds
enter
jo
sbb
ja
arpl
jecxz
cmp
pop
xor
xchg
repz
or
lret
adc
ljmp
add
adc
jp
movzbl
pop
enter
sti
cwtl
mov
push
mov
jbe
cli
xor
sbb
xchg
popf
leave
cmp
setae
mov
jae
mov
push
jecxz
sub
mov
mov
sbb
jns
lock
push
out
mov
push
mov
pop
xor
xchg
dec
add
jmp
pop
xchg
call
clc
sub
jecxz
mov
movsb
in
into
pop
jle
je,pn
mov
cmp
dec
inc
jae
xchg
fwait
bound
cmpsb
xor
mov
mov
repz
clc
jmp
cmp
sahf
mov
loopne
das
sbb
fs
in
xchg
addr16
je
add
jb
push
cmp
dec
mov
push
repnz
xor
jns
sub
cli
jmp
sbb
xor
lcall
cvtdq2ps
test
xlat
mov
mov
jp
repnz
das
mov
or
xchg
or
mov
pop
nop
mov
pop
adc
push
pusha
mov
or
or
and
outsb
ret
add
pusha
cmp
addr16
dec
hlt
fxam
push
es
mov
cmp
lcall
in
dec
in
xor
dec
repnz
not
cmpsl
dec
pop
rclb
in
outsb
or
push
dec
cmp
mov
in
mov
add
test
inc
jno
hlt
cmp
loopne
inc
jge
xchg
scas
xor
dec
or
lock
jp
xchg
xchg
pop
jns
iret
jae
lods
clc
or
pop
shr
fisubs
push
adc
dec
pop
mov
icebp
push
mov
lods
call
adc
jo
outsl
sub
adc
sbb
jae
aaa
and
outsl
leave
std
sub
xor
mov
adc
sbb
cmp
xchg
int3
test
cmp
pop
mov
mov
jmp
hlt
insl
push
xor
in
mov
sbb
sarl
ljmp
jae
in
arpl
fidivrl
popa
mov
inc
or
cmpsb
leave
push
mov
and
jnp
or
int
cmp
orl
push
dec
pop
adc
cmp
jl
mov
lea
repnz
ljmp
in
lds
inc
jb
pop
xor
sub
call
pop
es
pushf
mov
push
vpshufd
dec
rcll
rcrl
mov
adc
jmp
mov
outsb
mov
cmp
leave
or
shrb
pusha
pop
sbb
jno
mov
aas
cmp
mov
jge
and
adc
xchg
push
pop
lahf
xor
sbb
or
xor
idiv
jno
pop
mov
mov
pop
mov
loop
push
cmc
hlt
add
jmp
test
in
and
idiv
jnp
jg
cmp
and
push
fbstp
inc
aad
andb
ret
xor
and
push
sarb
mov
mov
xor
dec
aam
ret
mull
jge
icebp
add
xchg
adcb
cmp
mov
sub
testb
leave
decb
and
notl
outsb
push
ficoml
movsl
pop
jb
jbe
sbb
pop
jmp
test
rcr
jb
bound
jns
stos
loopne
insl
mov
neg
mov
cmp
dec
add
sbb
inc
inc
jo
ss
sub
mov
and
and
mov
daa
lds
mov
ja
jae
cmpsl
xor
mov
and
fildl
push
in
mov
jg
test
and
and
lahf
in
inc
fdivs
lods
lock
dec
insl
daa
lods
sbbb
xchg
pop
and
outsl
add
mov
or
adc
outsb
les
add
outsl
rclb
fsubl
fcomip
aam
xchg
sub
xchg
sub
inc
imul
jp
or
test
inc
mov
pop
popf
ds
gs
movsl
ja
popf
push
sub
out
or
push
ret
imul
js
pop
test
pop
test
hlt
sbb
push
push
push
mov
pop
iret
or
xor
xor
jge
inc
nop
leave
pop
push
inc
xorl
mov
xchg
add
in
inc
cmp
mov
mov
jb
rorl
or
mov
mov
pop
jbe
bnd
call
add
xchg
xor
into
loop
lds
loopne
sbb
xlat
test
adc
dec
dec
jno
adcl
mulb
pop
stos
rorb
ja
fists
inc
out
notl
add
xor
scas
cmp
xchg
jle
stos
sub
mov
icebp
jno
sub
push
adc
push
clc
sbb
pop
popa
push
or
dec
add
loopne
xchg
push
cmp
push
adc
mov
stc
pop
cltd
std
mov
rcll
sub
pop
fists
pop
mov
mov
jmp
jmp
add
or
aaa
pop
and
fs
rcll
jbe
and
call
and
inc
pop
or
xchg
or
in
sub
dec
lock
call
lods
inc
xchg
and
jecxz
das
xchg
cmpsl
adc
inc
es
imul
popf
sbbb
xor
stos
jle
nop
movsb
ds
mov
shll
icebp
scas
dec
outsb
shrl
in
push
std
xchg
sub
enter
add
fnstenv
sbb
in
sbbb
mov
fisubs
js
sar
inc
ud1
dec
mov
mov
dec
and
dec
dec
xchg
jae
cmp
inc
mov
and
pop
dec
les
mov
inc
sub
lret
popf
mov
imul
push
lock
pop
mov
out
hlt
shll
jne
popa
in
daa
lea
sti
sbb
pop
pusha
les
mov
mov
inc
inc
mov
repz
das
pop
fisttpl
add
adc
lret
or
push
jb
lods
sahf
rorb
xchg
push
and
mov
dec
sahf
mov
jmp
or
dec
js
cmc
mov
jae
add
sbb
test
jge
ja
jno
sub
sbb
xor
sbb
mov
aam
inc
cmp
mov
lods
push
mov
cmp
imul
sub
jb
sbb
push
sbb
frstor
xor
hlt
cmp
popa
das
xchg
cmpsb
add
xchg
mull
sub
jnp
jae
jns
nop
push
fs
add
jge
les
leave
inc
or
push
pushf
xchg
std
and
pop
mov
pop
mov
push
cwtl
adc
inc
jae
push
inc
sub
loope
aad
lahf
sub
int3
or
mov
in
bound
in
xchg
rorl
into
or
push
fdivl
out
jns
adcb
jae
je
aam
mov
sub
inc
inc
loop
push
add
xor
lea
insl
enter
lods
ret
scas
dec
movsl
aad
jnp
mov
or
dec
insl
mov
mov
push
idivb
mulb
icebp
ret
int3
fldenv
or
push
add
fwait
mov
mov
pop
jg
in
xor
je
repz
jbe
adc
int3
into
test
scas
inc
out
pushf
adc
dec
mov
or
in
jle
mov
fdivr
cmp
out
cli
xor
movsb
xchg
push
sbbl
sub
dec
xchg
repz
xchg
add
movd
mov
jo
sbb
into
cs
leave
jle
call
ret
popa
or
pop
cli
pop
fs
inc
mov
repnz
fnstsw
clc
pop
outsl
sub
inc
inc
lahf
pushf
test
scas
mov
out
xlat
jl
cmpb
xlat
ja
xor
sub
mov
rolb
repz
or
and
popf
dec
inc
gs
dec
insb
xor
rcr
mov
imul
dec
mov
sbb
mov
lret
push
jae
jl
jo
mov
shrl
mov
int3
dec
jmp
push
mov
stos
mov
pop
lds
jge
sbb
ja
cmp
inc
push
and
push
fisubrl
dec
cmp
je
fisttpll
dec
in
aad
dec
ret
jo
ljmp
sbb
cmpsb
or
xor
aas
inc
pop
cmpsl
xchg
das
cmc
push
iret
gs
aaa
ret
bts
std
sbb
into
push
jle
subb
shll
pop
xorb
dec
jp
pusha
not
sahf
jbe
mov
aam
jno
rolb
add
push
aas
cmp
das
repz
xchg
jnp
out
int
or
pop
push
and
scas
xchg
cmp
dec
xor
push
jbe
lahf
ljmp
mov
lds
inc
lahf
and
lods
clc
stc
push
adc
das
dec
dec
jl
scas
cmp
jmp
xchg
scas
inc
iret
mov
jmp
mov
arpl
or
add
movsl
enter
js
aad
sbb
fdivrs
add
xor
fnstenv
rorb
roll
push
into
cmc
jnp
int
std
inc
adc
addr16
movsl
mov
jne
cmp
jle
push
inc
sahf
mov
or
mov
adc
loope
add
push
ret
loopne
adc
loope
jp
sbb
push
icebp
insl
popf
cmp
add
cld
icebp
push
div
cltd
push
fcmovnu
iret
pop
ds
cli
out
inc
adc
pop
js
mov
dec
scas
pop
sub
mov
out
cli
jmp
out
in
outsl
mov
in
js
mov
filds
movsl
push
cmp
push
sbb
mov
jmp
xor
gs
in
cmp
fdivl
mov
cmp
in
aad
and
jae
adc
scas
in
push
xor
shlb
aad
test
cmp
push
xlat
mov
cs
or
adc
xor
mov
push
scas
sti
icebp
sarb
inc
mov
xchg
scas
add
and
mov
adc
mov
lock
andb
mov
jmp
push
xlat
cmp
rcl
xchg
mov
ljmp
push
orb
xor
hlt
mov
loop
mov
jae
push
add
nop
loopne
cmp
call
enter
cmpsb
fisubs
pushf
lret
mov
call
pop
mov
push
popa
cmp
pop
jne
xchg
cs
pop
test
sarl
jae
cltd
push
rorb
jbe
pop
lds
push
sbb
xchg
push
add
aaa
insb
cmc
out
jg
and
ds
mov
push
push
int
sub
rcll
dec
inc
mov
cmpsb
fistps
pop
inc
mov
sti
movsb
and
or
push
adc
or
outsb
mov
cld
test
in
xor
arpl
mov
push
pmulhw
xchg
ds
jns
mov
stos
sbb
lret
adcl
dec
xchg
das
mov
dec
sbb
sbb
jo
mov
jo
jno
out
es
jmp
test
mov
push
aas
push
jns
shl
inc
pop
lea
test
cmp
lods
push
pop
out
dec
popf
inc
sub
imulb
lds
xlat
sub
inc
jmp
bound
or
cmpsb
inc
push
mov
fs
sbb
arpl
and
sbb
fwait
popf
cmp
loopne
xor
mov
dec
or
addr16
sbbb
xor
cmp
ret
cmp
jnp
into
inc
pop
xchg
xchg
push
scas
jae
cmp
cmp
mov
push
fcoms
sbb
pop
xchg
popa
cmp
rcrl
mov
sbbl
cmp
mov
sub
inc
insl
adc
out
mov
pop
xor
xchg
add
jmp
movsb
jmp
xlat
xchg
imul
ret
mov
aaa
pop
sbbb
shll
ja
xchg
adc
imul
add
jae
pop
lret
lret
ficomps
iret
dec
cmp
cmpsl
cmp
pop
clc
std
sbb
mov
int3
jns
stos
stos
insl
cwtl
pop
icebp
add
fadd
fcoml
sbb
pop
pop
mov
sub
and
call
adc
cld
ljmp
ret
pop
or
aas
ret
fs
push
pop
push
inc
and
jecxz
lds
insb
pmulhw
push
mov
sub
pop
ficompl
adc
rorl
ds
jne
cmp
stc
xchg
pop
inc
cmp
xchg
cmp
xchg
fists
stos
clc
sub
xor
cs
fnstcw
int3
xor
jl
scas
jne
cmpsl
nop
sbbl
jne
iret
inc
loope
incl
xor
bnd
pop
pop
cmp
sbb
hlt
out
and
xor
std
dec
aaa
imul
fstps
data16
xchg
xchg
push
dec
adc
sahf
push
rorb
jg
mov
push
dec
xor
movsb
dec
and
sbb
loop
or
dec
pop
push
mov
dec
test
jns
fcoml
aaa
pop
call
nop
jge
sahf
outsl
cmp
scas
rcl
ja
inc
lods
sbb
mov
xchg
inc
ja
push
mov
jecxz
sub
cmp
xor
sarb
lret
stos
dec
cmp
mov
loope
loop
fiadds
aam
push
in
dec
call
mov
fsubrs
mov
cmp
dec
dec
cld
roll
or
in
scas
jno
cmp
lret
xchg
fidivs
enter
jbe
cmp
lds
and
fwait
and
pushf
outsl
xor
xchg
ja
mov
loope
mov
fs
das
rcrb
sbb
mov
jbe
push
ror
fdivrs
insl
inc
out
in
mov
dec
in
sbb
mov
nop
fldcw
lods
pop
sbb
push
xchg
scas
xchg
out
jne
lahf
repnz
cmp
add
aaa
xor
xor
push
cmp
loopne
pop
pop
jp
and
xor
mov
sbb
mov
negb
bound
scas
push
fabs
imulb
mov
adc
outsl
dec
mov
nop
fwait
pop
mov
mov
mov
lods
lds
dec
int3
fidivs
test
fists
movsl
stc
fidivrl
mov
insb
in
mov
imul
mov
adc
in
inc
or
xchg
cmc
xchg
sarb
loope
mov
xor
cmc
lahf
push
js
xchg
pop
fists
xchg
movsb
mov
and
popa
xchg
lods
lret
sub
je
jg
pusha
lock
mov
jno
xor
fistps
into
das
push
mov
mov
shlb
jns
pushf
daa
imul
dec
ljmp
and
shll
addb
inc
lahf
mov
jo
mov
iret
sarl
rclb
pop
es
lret
outsl
fdivs
aam
jg
mov
jle
mov
gs
int3
xor
cmpsl
cmp
push
and
outsl
xchg
in
or
and
inc
mov
movsb
dec
push
enter
sub
cld
scas
mov
mov
pop
pop
mov
xor
sub
mov
sbb
dec
fwait
push
push
out
xchg
xor
int3
adc
das
xchg
push
imul
rcl
pushf
in
cmp
ds
and
fstpt
jp
in
outsl
stos
cmp
jns
or
or
jne
pandn
jmp
and
nop
sub
js
jne
and
adc
icebp
xor
jno
pop
mov
inc
rorl
and
push
movsb
out
sub
inc
sub
aad
das
test
add
add
push
imul
imul
push
inc
push
push
sbb
lods
fidivs
aas
in
aam
out
and
jmp
mulb
push
in
mov
mov
in
sub
push
add
out
int
arpl
inc
mov
xor
cmp
jnp
fs
cli
cmovns
test
inc
in
add
arpl
mov
ss
testb
hlt
add
rcrb
cmp
cli
push
scas
jnp
fildl
sbb
dec
lahf
inc
shl
shrl
jnp
mov
lock
sub
scas
mov
xchg
fcomps
jmp
repnz
outsb
add
mov
in
xchg
add
or
pushf
fimuls
loop
dec
mov
js
or
xor
mov
jne
nop
lret
insl
dec
int
loopne
mov
fisttpl
dec
jae
jecxz
sub
lahf
sub
pop
lods
jne
lcall
pop
les
pop
pop
sbb
outsb
arpl
mov
cmpsl
add
dec
mov
or
dec
in
mov
adc
loope
jb
and
pop
add
call
fisttps
roll
ret
les
jmpw
aas
or
inc
in
lret
push
sti
or
cli
jne
xchg
xor
adc
or
and
jl
les
mov
adc
xor
test
call
jmp
pushf
dec
inc
sbb
rcll
inc
ret
and
push
mov
cmpsl
jno
add
jo
sbb
imull
xchg
call
ss
sub
inc
out
frstor
adc
movsb
mov
sub
push
pop
jge
sub
test
adc
fists
cmp
and
lods
aaa
push
mov
cmp
jns
int
mov
sbb
fsubs
lahf
inc
fbstp
adc
xchg
lret
outsl
cltd
jle
aad
push
daa
decl
mov
adc
sub
inc
pop
fldl
inc
ljmp
adc
dec
and
out
ret
add
pop
and
stos
popa
daa
inc
jg
test
pop
sbb
xchg
cli
push
iret
mov
dec
in
hlt
fldenv
ja
mov
jno
add
adc
aaa
jnp
pop
stos
or
mov
les
ret
cmpsb
xchg
xor
mov
leave
addb
out
outsb
cli
aam
and
sbb
loope
push
add
jb
jbe
vpunpcklqdq
repz
or
jg
ljmp
test
outsl
mov
pop
pop
xchg
sbb
movsb
push
mov
and
xchg
stos
or
jns
out
push
leave
lods
call
sbb
cmp
stos
repz
and
adc
cmp
or
in
bound
bound
jne
jl
mov
or
in
mov
insb
pop
push
fs
loop
mov
pop
xchg
rolb
loop
sbb
mov
sbb
jns
in
lcall
sub
sbb
icebp
dec
inc
cld
xchg
je
out
roll
mov
or
inc
lea
imul
clc
push
or
add
jae
xchg
adc
negl
mov
aaa
movsb
inc
pusha
mov
popf
aad
je
push
mov
fldcw
xchg
outsb
xrelease
or
mov
mov
sbb
scas
push
adc
adc
lods
mov
lods
in
adc
das
hlt
sub
aam
imul
add
xor
cmp
idivl
mov
or
out
or
shlb
outsl
enter
cmp
fnstcw
xor
push
not
clc
aas
push
xchg
jg
out
inc
fcmovu
sbb
pop
xor
ret
sub
and
add
pop
clc
and
loope
cmp
out
mov
out
push
push
out
or
sbb
or
mov
inc
ret
mov
inc
rcpps
gs
sub
xor
mov
cmp
xchg
fistpl
cs
les
jg
pusha
clc
popf
add
jecxz,pn
push
popf
stos
mov
push
data16
push
and
repz
xlat
add
inc
out
xor
in
andl
pop
lret
lock
mov
mov
push
and
and
ds
aad
icebp
es
pop
js
xlat
push
mov
mov
hlt
js
push
mov
push
xchg
loop
stos
shll
pop
in
jno
jns
mov
or
sbb
mov
mov
sbb
jl
and
mov
inc
push
movb
shl
repnz
mov
hlt
pushf
arpl
mov
mov
pop
inc
and
sti
movsl
xchg
loop
shll
or
aaa
sub
ret
push
pop
and
int
lcall
in
test
mov
and
sub
jnp
push
push
lea
lret
data16
add
xchg
add
imul
pop
jmp
inc
xchg
fisubl
ret
ret
adc
test
jp
dec
pushf
mov
cmpsl
pop
pop
ljmp
pushf
idiv
loope
mov
out
mov
lods
js
adc
mov
mov
out
mov
inc
xor
mov
adc
scas
nop
ret
xor
pop
add
inc
and
push
inc
aaa
in
in
adc
push
inc
xchg
adc
sub
adc
adc
xchg
dec
out
adc
loope
dec
ja
out
jle
iret
dec
mov
fistl
or
inc
add
int
lret
mov
jno
pop
nop
jns,pn
inc
jne
adc
call
pushfw
and
cmp
jae
std
movsl
add
aaa
sub
shrl
pop
shll
adc
adc
push
lret
ret
inc
xor
dec
lods
stos
push
enter
mov
sbb
add
lea
fldcw
imul
sub
arpl
add
cmpsl
cmp
push
xchg
int3
pop
test
fistpll
mov
mulb
push
push
push
inc
mov
push
cli
hlt
sahf
xor
scas
ds
out
iret
add
jp
lcall
sbb
or
cmp
push
xor
lock
ret
adc
repz
sub
cmp
sub
cmp
dec
loope
fwait
xchg
jae
scas
in
mov
leave
mov
sub
or
jg
movsl
xchg
cmp
sub
xchg
daa
pop
cmp
aas
aad
cli
or
and
cltd
lret
or
mov
or
mov
cmp
mov
and
and
mov
cmpsl
sub
push
mov
pushf
push
inc
xchg
orl
test
sbb
push
inc
push
jecxz
jg
cmp
push
push
cmp
pop
cmp
inc
cmpsl
bound
mov
adc
jl
or
arpl
cmpsl
push
ss
mov
add
cmp
leave
jp
pop
bound
pushf
inc
test
scas
imul
clc
lods
lods
fisubs
fs
jae
rep
ss
push
lcall
xor
jmp
fwait
mul
lahf
sub
and
es
call
mov
pop
jmp
sbb
sbb
and
std
lea
fisttpll
sti
push
mov
into
fbstp
jle
xorl
fwait
push
scas
stos
leave
xchg
mov
insb
out
ljmp
xorl
scas
jp
ror
xor
in
xor
test
sarb
stos
ja
ret
inc
sub
mov
fdiv
mul
add
cmpsb
or
jb
lret
shrb
call
mov
pop
out
stos
fstpl
mov
pop
pop
cs
scas
in
add
xor
gs
shr
insl
or
push
call
and
push
pop
or
xchg
jmp
xchg
adc
push
cmp
adc
push
subl
addr16
xchg
or
pusha
std
pop
ja
jmp
xor
xor
pop
into
pop
cli
decb
rcrl
mov
or
pop
pop
lods
sbb
scas
cmp
jae
push
clc
lret
mov
mov
cmp
ret
stc
or
fsubrl
mov
hlt
sbb
mov
sub
cld
jne
add
or
push
push
rcl
mov
inc
ja
ficomps
jmp
dec
add
push
xchg
mov
adc
push
scas
stos
inc
popa
jmp
xchg
jno
push
cmpsb
cmp
imul
push
mov
pop
pusha
jecxz
in
sarl
push
jnp
aam
testb
imul
push
xchg
ljmp
push
dec
fnstsw
jne
nop
fs
xor
scas
scas
dec
aad
pushf
ljmp
sub
pusha
fcomps
push
test
hlt
add
jecxz
ds
loope
mov
and
cmp
out
sub
cltd
scas
fldcw
imul
pop
lock
add
out
xor
adc
pop
push
lods
push
xchg
sub
adc
jecxz
inc
and
fwait
inc
add
loopne
loop
inc
lcall
dec
data16
cmpsb
push
and
fcmovnu
scas
mov
mov
bound
loopne
push
add
gs
pop
mov
push
les
stos
mov
add
and
dec
cli
inc
cmp
xchg
or
lods
int
iret
call
scas
iret
test
cmp
cltd
mov
push
dec
push
movsb
loop
cmp
and
scas
inc
jle
add
inc
inc
sbbl
lahf
mov
adc
push
pop
xor
movsb
push
inc
ljmp
fists
adc
iret
dec
shrl
mov
sub
mov
popa
pop
sbb
and
out
ja
stos
gs
ret
aam
pop
fbstp
cltd
sub
out
lds
xor
push
xor
les
cmp
in
mov
insb
in
or
inc
mov
cmp
dec
fcmove
sbb
jecxz
or
pop
pushf
cmpsb
and
pop
pop
stc
dec
mov
int3
lods
jp
imul
jl
dec
mov
ret
jae
xchg
jno
push
inc
shll
movl
sub
add
dec
jle
push
lret
pop
popa
mov
cmp
push
dec
mov
fsubrs
lret
jge
push
and
cld
loope
xor
mov
call
adc
test
test
jmp
xlat
mov
shrb
shlb
fiaddl
imul
stos
xchg
or
mov
push
xor
jge
xchg
leave
ret
test
in
push
xor
and
jno
lods
xorl
pushf
cmp
lcall
sbb
in
andb
fdiv
and
xchg
and
push
into
fsubrs
xchg
dec
daa
jb
call
sbb
xchg
jle
loopne
pusha
shld
mov
imul
sbb
in
icebp
and
pushf
pop
xchg
push
iret
xor
pop
in
sti
fsts
inc
xor
mov
mov
xor
sbb
mov
xor
aas
inc
arpl
mov
and
mov
jg
pop
idivb
cli
jnp
mov
stos
inc
push
xor
std
iret
xchg
in
jbe
adc
je
imul
out
js
pop
je
lret
adc
add
shll
lcall
adc
insb
outsb
xchg
ret
lock
aas
sub
outsb
pop
xor
sbb
sbb
data16
je
push
pusha
xor
imul
mov
jg
xchg
ss
ret
rorb
xor
movsb
mov
lock
push
push
shlb
sbb
xor
inc
sub
mov
mov
dec
cs
mov
jns
and
inc
jge
fcoml
cli
enter
mov
idiv
mov
testl
shrl
jb
ficomps
cmp
rol
cmc
and
pop
ja
pop
adc
mov
pop
or
enter
lds
aas
and
or
pusha
bound
jg
popf
jl
xchg
or
data16
ds
cmp
outsl
shl
repz
cmpsb
iret
and
sbb
pop
sbb
jp
mov
out
push
pop
loop
cmpsl
ljmp
daa
aaa
jecxz
or
jne
movsl
add
sbb
mov
testb
mov
cltd
jo
popa
cmp
xor
popf
mov
cs
pushf
xlat
cmpsl
or
adc
dec
movaps
pop
mov
cmp
loop
sbb
popa
xor
pop
dec
and
pop
into
cltd
xchg
test
cs
jne
dec
loop
imul
xchg
jge
jno
xor
push
and
jnp
stc
pushf
cmpsb
add
pop
pop
inc
or
xor
incb
lods
mov
clc
aaa
mov
stos
shrb
aaa
ds
cli
lret
pop
cmpsl
cmp
jae
sub
push
xor
lret
movsb
loop
mov
testl
fnstcw
test
xor
sti
xchg
cmp
fidivs
jge
sarb
pusha
pop
or
jne
nop
lods
imul
and
pop
push
int
jmp
leave
inc
inc
pop
mov
pop
stos
icebp
sbb
or
test
dec
jnp
jns
fnstenv
pop
in
dec
push
and
ficoms
pop
adc
or
sub
mov
sbb
mov
in
mov
lret
fistpll
imul
cmpsb
cmp
out
jl
in
jbe
mov
mov
xchg
jl
mov
adc
sarl
pop
repz
pop
iret
mov
jae
adc
and
pop
sarb
cmp
fucomip
pushf
cwtl
loopne
dec
mov
into
ret
add
stc
mov
jmp
cmp
sti
xchg
dec
pop
ja
mov
sbb
mov
push
testb
add
fldenv
cmc
xlat
fs
mov
lret
jmp
fistl
cmpsl
sbb
cmpsb
enter
xor
xor
xchg
cmp
mov
aad
mov
je
sbb
call
imul
dec
cld
imul
mov
mov
inc
cs
sub
fdivp
call
mov
loope
test
push
data16
shl
cld
cmpsl
pop
repnz
fsubs
ret
lods
aad
scas
push
pop
pop
cmpb
enter
mov
push
mov
mov
mov
in
das
bswap
push
jge
push
jmp
out
into
pop
lret
or
and
jp
out
and
insb
outsl
sbbl
jp
dec
int
sub
sbb
mov
inc
mov
jno
jmp
or
xor
jge
add
sub
mov
call
repz
nop
mov
pop
les
jmp
ret
xor
ss
jmp
enter
out
fisttps
hlt
outsl
jne
xor
mov
jecxz
testl
fidivrs
push
mov
and
xchg
mov
test
mov
adc
cwtl
mov
inc
leave
incl
sarl
bound
stos
pop
add
stos
or
jmp
cs
xchg
pushf
es
ss
dec
aas
jge
mov
loope
xchg
xor
nop
cltd
sbb
xchg
jne
push
sbb
scas
mov
mov
mov
xchg
pop
fcomps
popf
loopne
icebp
pusha
and
add
cmp
inc
mov
aam
pop
shl
in
inc
cs
xor
bnd
and
lds
in
mov
loopne
mov
push
push
jae
inc
mov
xor
sbb
and
daa
inc
daa
test
adc
sub
jno
jnp
mov
mov
lea
cmp
mov
in
push
into
pop
cwtl
mov
dec
fistpl
outsb
data16
testl
rcrb
jne
stos
mov
jmp
sbb
push
into
pop
cmp
dec
add
pop
mov
mov
roll
arpl
inc
adc
sub
scas
push
pop
xlat
icebp
mov
lahf
out
insb
scas
fistpl
cli
xchg
in
sub
lea
push
leave
pop
shll
jl
sbb
out
mov
cmc
dec
ret
push
mov
inc
mov
cld
xor
fstps
push
pop
popa
imul
es
cmp
fcmovnb
adc
adc
dec
push
mov
or
loop
stos
mov
test
imul
mov
xor
jns
stc
aad
pushf
aaa
xchg
add
das
das
js
dec
std
addr16
cli
stc
ljmp
enter
mov
xchg
ss
adc
and
ljmp
jns
dec
dec
test
shl
test
shr
jnp
mov
bound
dec
push
cmpps
das
mov
mov
push
pop
mov
inc
daa
mov
sbb
orl
sub
movsl
and
subl
arpl
inc
add
inc
xor
popa
pop
push
mov
movsl
jnp
dec
jp
xchg
js
and
jmp
rcll
mov
dec
daa
inc
dec
push
inc
popf
cwtl
popa
and
mov
inc
jnp
and
ret
ss
xchg
popf
xor
pop
fwait
icebp
repz
movsb
sti
add
clc
inc
cmp
inc
add
jg
adc
add
lock
xchg
dec
lds
pop
popf
xchg
sub
jg
sbb
xor
mov
mov
jg
fmull
pop
xchg
movsb
mov
das
lock
in
mov
add
imul
or
in
cmp
sahf
mov
fmul
mov
xchg
outsb
shll
sbb
add
xchg
in
cmp
mov
aaa
push
push
xchg
shrl
add
lods
bound
stos
icebp
inc
popf
jo
sub
dec
or
xchg
subb
notl
in
mov
pop
testl
adc
dec
aad
stos
outsb
cmpsb
cmpsb
dec
cwtl
cld
cmpsl
cld
or
lcall
jl
add
dec
in
mov
and
pop
in
rcrb
pop
cmp
inc
inc
xchg
add
movsl
es
dec
jmp
fildll
je
jge
xchg
cmp
adcl
mov
jmp
sub
je
aaa
dec
push
insb
loope
nop
pop
push
mov
xlat
movsb
add
and
lds
jp
add
sbb
ret
stc
imul
cmp
rcrb
aaa
add
mov
cmpsl
addr16
xor
adc
popa
jmp
scas
psubd
int3
js
pop
mov
sub
push
mov
xor
xor
subl
sahf
and
pop
jp
fildll
cmpb
mov
divb
outsl
add
pop
lds
negl
adc
push
dec
ret
stos
inc
cmp
push
and
dec
insl
lea
testb
lock
rcll
jne
push
lea
cli
inc
call
pcmpgtd
mov
push
int
cmpsl
jge
scas
iret
inc
or
and
jnp
or
sbb
test
movsb
pusha
mov
mov
push
or
jl
enter
dec
sbb
xchg
lds
aaa
enter
jg
popf
test
jg
lds
clc
out
scas
mov
mov
stos
xchg
shrb
nop
jg
stc
sub
mov
ja
aaa
mov
push
cmpsl
out
imul
lret
aam
fs
inc
jbe
loopne
inc
adc
cmc
adc
cli
sbb
into
das
xchg
lcall
jg
dec
inc
cmp
dec
cmpsl
jo
add
into
out
and
adc
int3
or
pusha
sarl
mov
aad
pusha
xlat
inc
xor
enter
lods
lcall
mov
ljmp
fbstp
mov
adc
add
xchg
mov
add
mov
sbb
outsl
movsl
cs
int
fidivrs
mov
in
sub
mov
fildll
mov
or
roll
ret
jle
pop
test
arpl
cli
pop
inc
sbb
dec
and
mov
pop
xor
pop
rcl
icebp
add
inc
lods
add
lahf
fidivrs
push
ds
sarl
xchg
push
xor
push
pop
pop
dec
push
mov
dec
ja
mov
jl
test
push
scas
dec
lods
mov
and
insl
dec
ds
fstpt
lods
pop
xor
xchg
mov
fistpll
mov
add
sub
aaa
or
shlb
lahf
cmpsl
sbb
movsb
bnd
jl
pop
mov
jae
iret
sbb
push
or
xchg
mov
push
pushf
and
test
xor
daa
push
sbbb
xor
out
imul
jecxz
mov
scas
fcmovb
rcrl
shll
hlt
cmpsl
cmp
or
xchg
fwait
out
subl
int
inc
fwait
mov
or
pop
push
pop
dec
xchg
mov
sahf
loop
push
nop
pop
movsb
sub
xor
repnz
ja
mov
cmpsl
fucomp
scas
rcll
jbe
test
and
push
mov
shlb
ret
divb
mov
faddl
cmp
icebp
or
test
sub
pop
test
pop
lods
mov
call
js
mov
cmp
xor
lds
cmp
cs
jp
es
addl
adc
xor
xchg
mov
cmpsb
xchg
nop
loopne
ss
sahf
push
scas
adc
mov
stos
jne
call
xchg
lret
lods
cmpsb
xor
fldt
sahf
mov
das
cs
push
xor
fbld
les
sti
ret
hlt
xor
jge
jae
repz
jle
aas
mov
testb
cli
push
das
xor
fcmovnu
stc
mov
les
cmp
cwtl
adc
and
rcrb
lds
adc
sbbb
in
adc
mov
shlb
push
sub
gs
lods
scas
cmp
mov
mov
cmpsl
push
mov
cli
xor
inc
lock
and
imul
out
sbb
aaa
jg
inc
inc
inc
rcll
adc
xchg
movsl
add
adc
jno
cwtl
test
das
dec
stos
jne
xchg
aad
jl
leave
leave
jae
mov
inc
dec
pop
cwtl
test
lcall
pop
adc
cmp
pop
jnp
xchg
xor
pop
loope
jo
sub
sub
ret
cmp
xchg
add
sbb
inc
pop
mov
jb
jmp
arpl
lret
fldcw
dec
dec
push
pop
push
pop
out
fwait
add
jno
adc
fs
lret
mov
fcoml
mov
pop
scas
xlat
add
bound
push
mov
xor
mov
add
and
imul
xchg
lea
adc
or
add
outsb
cmc
xor
and
insl
mov
fwait
out
lcall
add
rcrb
mov
mov
hlt
ja
cmp
add
mov
stos
movsl
fs
ss
mov
sahf
cmc
adc
popf
sti
xchg
cs
cmpsl
stos
and
lret
pop
es
or
rclb
pop
or
ljmp
dec
sub
jnp
pop
sbb
xorl
xor
pop
out
fdivp
out
ja
jo
push
or
ret
out
ss
in
in
push
push
sub
add
push
out
aam
cltd
adc
jmp
jnp
lock
cmp
inc
adc
les
jns
pop
xlat
and
push
lahf
orl
jbe
push
jge
push
dec
mov
sbb
sbb
push
add
xor
jno
into
stos
sbb
cltd
rclb
mov
aas
shl
adc
and
fiaddl
ss
xor
fs
scas
fld
pop
sub
and
cmp
inc
jnp
cld
xor
mov
in
mov
fmull
sbb
inc
andb
push
xchg
iret
aaa
jmp
push
insl
lock
stos
xchg
in
and
rorb
fadds
lods
xor
push
mov
mov
nop
xchg
add
or
nop
xor
clc
and
cmp
mov
nop
adc
clc
bound
cmp
fadd
daa
movsb
int3
xor
jg
test
test
loope
imul
push
fnstenv
jle
xchg
adc
outsl
sarl
stos
mov
push
lcall
test
loope
rcr
jecxz
cmp
aaa
ret
ss
mov
xor
imull
lock
loope
xor
sub
test
xchg
lock
dec
dec
dec
mov
dec
cmp
mov
sub
add
bound
push
pop
mov
xor
and
mov
mov
mov
repz
push
ret
imul
ret
in
insb
and
dec
push
add
adc
jp
dec
adc
pop
and
adcb
call
add
popa
jle
push
int3
add
stos
xchg
clc
leave
or
outsb
imulb
jmp
cld
xor
rcll
fldt
adc
mov
mov
add
and
jmp
inc
or
or
pop
push
add
jnp
nopl
push
bound
loopne
leave
sbb
xor
add
shlb
ljmp
sub
je
mov
cld
pop
xchg
dec
dec
sub
sub
orl
xchg
stos
mov
mov
fiaddl
fistpll
inc
mov
lea
and
fisttpl
repz
mov
daa
aam
push
je
push
lods
mov
cmp
add
scas
sbb
movsb
xchg
insl
mov
mov
jp
or
out
and
lret
fcompl
adc
scas
xchg
dec
sahf
xor
pop
loopne
in
xchg
pop
lods
mov
arpl
lea
sbb
enter
push
pop
and
fs
push
mov
inc
mov
add
pop
push
and
jo
popf
test
loopne
jns
stc
ret
mov
sti
jecxz
lahf
xchg
cmp
mov
dec
lods
push
push
ljmp
sbb
sub
cmp
rorb
sbb
xor
cmp
and
adc
xor
rcll
jp
xchg
sub
jge
cltd
lret
mov
lods
add
mov
lret
hlt
or
daa
ret
bnd
out
jne
cmp
cmp
enter
pop
in
xchg
sub
mov
fwait
mov
idivl
sub
sbb
mov
fisubs
mov
add
mov
leave
lock
scas
in
mov
mov
inc
jl
mov
fstpl
daa
dec
js
out
mov
or
repnz
out
rcll
push
jo
fld
repz
in
bound
dec
push
push
cmpl
jmp
push
mov
push
pop
cld
in
jp
add
sbb
mov
mov
mov
lods
fs
cmp
stos
dec
mov
jbe
cmp
mov
cld
rorl
lods
fnstenv
les
pop
movsb
mov
in
pop
ljmp
dec
popa
mov
push
inc
je
fldl
jle
in
dec
aaa
dec
lds
testb
mov
and
pop
mov
les
arpl
lret
loop
shll
adc
pop
cwtl
leave
sbb
add
jns
and
aad
dec
push
jns
in
cmp
jns
sub
sbb
push
fidivrl
fstpl
mov
mov
jecxz
add
sub
jmp
outsl
fcomps
negb
pop
in
movsb
ss
pop
iret
xchg
sub
sub
daa
aam
les
mov
and
int
sbb
or
mov
int
mov
xchg
cmp
add
add
call
mov
leave
mov
mov
leave
push
movsb
fstps
stos
repz
in
sbb
enter
push
popf
mov
pop
rorl
dec
jae
cmc
or
push
lds
jo
and
pushf
test
imul
test
pop
loope
insl
inc
push
xor
test
cmp
sub
add
pop
pop
fidivl
jbe
stos
enter
ds
dec
sub
das
cld
push
pop
int3
imul
fisttpl
jbe
ret
pop
xchg
cltd
adc
popa
mov
fsubrs
cs
and
mov
int
pop
xor
pushl
jle
pushf
jle
add
popa
pop
test
pop
mov
push
cmpsb
stos
cmp
xchg
lods
push
imul
in
mov
jle
sbb
cvttps2pi
push
jecxz
hlt
mov
mov
mov
rcrl
rorb
mov
enter
pop
in
inc
call
pop
outsb
xchg
push
push
lods
jmp
push
imul
mov
xor
inc
mov
out
dec
popf
sub
subb
xchg
push
mov
sub
inc
jle
mov
imul
lcall
fistps
pop
imull
jl
nop
xchg
mov
and
shll
aad
adc
or
das
popa
cmp
xchg
call
fcomps
loope
jecxz
in
and
shl
mov
push
shrb
adc
jge
movsb
mov
dec
mov
add
leave
sub
or
mov
xchg
jae
xchg
cwtl
addr16
daa
xchg
gs
mov
inc
sbb
xchg
and
jo
movsl
cli
es
mov
inc
mov
cmp
nop
adcl
aas
pop
mov
leave
js
sub
lods
aam
push
xchg
cmpsb
jnp
notb
xchg
mov
inc
or
adc
inc
pextrw
pop
push
outsb
out
aam
lahf
or
mov
jnp
fwait
mov
repz
mov
fs
lcall
jge
cli
xor
mov
push
mov
pop
rolb
fistpll
push
xor
jb
shll
inc
jle
dec
mov
inc
into
xor
cltd
lahf
std
fstpl
clc
fs
cs
stos
push
lea
lcall
mov
xlat
inc
jmp
icebp
mov
cli
arpl
inc
add
jo
loopne
push
int
dec
imul
stc
xchg
ja
in
out
sarb
cmc
bound
sub
in
sbb
or
mov
repz
mov
push
cmp
or
fldcw
pop
pushl
push
dec
fsubrp
cmp
test
mov
ljmp
mov
loop
sbb
sub
rolb
inc
xor
stos
mov
roll
xchg
jg
popf
int
sbb
push
add
fistl
xchg
mov
shlb
and
in
lds
es
xchg
dec
in
dec
das
add
scas
adc
cmp
dec
mov
mov
ja
fnstenv
inc
jmp
and
pushf
and
or
dec
xorl
orl
sbb
mov
sbb
mov
xchg
xor
add
push
cld
mov
pop
pusha
hlt
scas
xor
lret
lret
bound
sbbl
lds
xor
ja
and
imul
or
xchg
leave
loopne
pushf
daa
xchg
movsb
cmc
jne
jb
jmp
sbb
xor
icebp
adc
adcb
mov
hlt
ljmp
sbb
enter
shll
ret
imul
dec
fsubl
xor
sbb
pop
xchg
insb
or
mov
pop
cmp
js
push
sbbb
fistl
adc
and
lahf
popf
out
push
aam
fnstcw
js
and
xor
push
out
sbb
sub
test
aaa
lcall
mov
xchg
in
mov
scas
push
sti
mov
arpl
xchg
out
cli
outsl
cmp
out
jo
lahf
pop
dec
cmp
mov
cltd
enter
add
cmp
loope
fwait
cltd
push
fs
imul
subb
sub
stos
mov
sti
imul
push
push
or
addr16
es
out
cmc
push
mov
pusha
loopne
xor
inc
in
dec
pop
jp
pop
mov
jns
ljmp
fists
cmp
mov
insb
add
ljmp
cld
or
dec
mov
bound
lock
push
movsl
popa
arpl
cmc
mov
js
pusha
dec
out
inc
sub
and
jbe
das
pop
dec
loopne
in
xor
mov
fisubs
out
add
mov
jg
lret
push
mov
mul
mov
in
pop
mov
or
shrl
idivl
fadds
lret
sti
daa
fidivrl
adc
xchg
jecxz
xor
dec
in
lahf
adc
fiadds
push
call
outsl
out
lret
fidivl
mov
sub
test
xchg
cmp
out
adc
add
test
xlat
or
jns
push
push
faddl
out
push
int
lahf
ret
lret
cmp
cwtl
pop
loop
pop
data16
stos
pop
pop
ja
stos
jne
inc
xor
add
cs
mov
aas
push
popf
dec
in
sarb
addr16
push
iret
mov
xchg
sbb
aad
insl
pop
push
out
shr
adc
out
mov
mov
xlat
sub
dec
les
dec
mov
rcrl
pop
jb
lcall
je
xchg
jmp
jp
test
cltd
outsb
jmp
mov
movsb
mov
mov
jle
jp
clc
add
jp
cmpsb
movsb
pop
out
call
movsl
mov
mov
aam
add
dec
adc
mov
mov
push
movsb
aaa
or
lcall
xchg
notb
pop
cmp
mov
lahf
std
mov
addr16
sub
sub
lahf
sbb
fs
leave
mov
cs
sbb
adc
fldcw
ja
jge
es
cmp
clc
pop
or
mov
mov
sbb
jmp
aam
dec
pop
xchg
adc
rorl
rorb
cmp
cmp
push
push
add
fistl
idivb
xor
insb
hlt
push
or
fisubs
cmp
mov
outsb
xchg
mov
nop
and
popf
lock
pop
test
mov
ret
loope
je
push
mov
mov
mov
fadd
mov
dec
jno
xchg
arpl
mov
add
push
addr16
add
jecxz
inc
dec
xchg
adc
inc
lea
aaa
ficoml
clc
cmp
cmp
jae
add
push
das
xchg
mov
mov
mov
shr
inc
mov
rcll
ljmp
jmp
jnp
push
push
out
fdivrl
jl
and
and
int
sub
jge
in
or
inc
cmp
mov
cmpl
cmc
dec
cmp
mov
ror
popa
std
xchg
out
inc
stos
mov
xor
add
sub
ds
mov
cmpsb
lds
loop
pusha
push
jo
test
pop
imul
lahf
cmpl
push
xchg
std
aad
ror
or
cli
sarl
stos
stos
ret
cltd
adc
adc
add
ret
testl
sub
cmp
xchg
xor
adcb
mov
mov
into
xor
cld
inc
shl
fwait
mov
add
jo
ja
mov
mov
add
int3
xor
fs
and
cmpsb
xchg
fs
inc
movsb
ret
pop
shll
rcrb
mov
xchg
and
or
push
xchg
sub
mov
fld
lods
mov
mov
mov
filds
jecxz
lods
aaa
sub
outsl
jae
call
sarl
popa
jb
dec
fldl
pop
and
cmp
popa
jg
jns
ret
mull
lret
es
jmp
fsubrs
jbe
sahf
xor
pop
nop
les
scas
out
nop
dec
sbb
mov
inc
jae
dec
fwait
in
dec
mov
insb
and
and
lahf
dec
mov
mov
ficoms
scas
ficomps
push
loop
daa
ficoms
cmp
repnz
sbb
adc
call
mov
push
cmpb
jecxz
out
pop
push
pushf
sbb
rcrl
rorb
subl
sbb
add
mov
subl
ficompl
jns
mov
test
and
outsb
add
add
jns
xlat
cmp
lea
push
aad
mov
mov
aam
imul
jg
insl
xor
cld
mov
cmp
jbe
push
inc
test
xchg
stos
scas
dec
mov
notl
jp
roll
sbb
pop
mov
mov
lods
js
push
add
ret
jp
push
add
jp
dec
std
subb
sbb
inc
inc
xchg
not
and
xor
mov
addl
ljmp
ljmp
mov
call
push
or
cwtl
sti
insb
pop
leave
outsl
mov
fwait
ret
dec
or
or
dec
mov
addr16
pop
test
pop
push
cmp
xchg
push
loop
xchg
lret
loope
idivb
xor
aaa
jmp
or
imul
push
mov
divl
out
sbb
inc
mov
xchg
shll
cmp
mov
inc
push
jp
aad
push
or
add
jns
add
mov
mov
stos
sbb
leave
push
outsl
mov
aad
cmp
inc
lock
add
mov
add
push
jmp
es
adc
add
jmp
add
cmp
pusha
jno
shlb
and
push
push
cmpsl
repnz
mov
shrb
loope
inc
ja
xchg
dec
dec
or
xchg
out
add
les
lret
mov
push
mov
inc
lods
sarb
test
lods
pop
dec
cmp
fcmovnbe
aas
aas
mov
pushf
dec
dec
fbld
xor
inc
loopne
adc
mov
add
pop
lds
xchg
hlt
pop
pusha
ret
outsl
xchg
mov
rol
sub
jnp
enter
imul
fmul
sub
or
cmpsl
loop
jl
popa
jne
adc
and
ret
rcl
and
ret
xchg
sbb
jno
daa
jnp
pop
xchg
outsl
test
jmpw
inc
pop
insl
mov
dec
mov
pop
xchg
mov
push
dec
cs
fsubs
leave
and
hlt
in
notl
data16
mov
ffreep
cli
lods
hlt
in
aam
stos
xchg
mov
mov
jecxz
push
add
aam
mov
jne
push
nop
es
inc
cs
and
scas
repz
inc
mov
inc
xor
dec
mov
ljmp
xor
mov
ficoms
fwait
dec
cmp
in
nop
xchg
xor
insb
je
cmp
pop
pushf
loope
scas
xor
add
dec
inc
icebp
fwait
sbb
mov
xor
je
jle
or
push
lods
test
xlat
and
sub
push
cltd
imul
sub
mov
mov
icebp
iret
cs
fstps
divl
adc
mov
sti
cmp
inc
jnp
lock
mov
sti
jp
mov
test
cli
lods
cli
inc
repnz
and
ljmp
cmp
cmp
outsl
mov
je
jbe
and
movsl
xchg
xor
dec
mov
int3
jecxz
insb
pop
loope
mov
js
or
cmp
test
push
fsubl
loope
ds
dec
sbb
mov
or
sbb
xchg
stc
cmc
xor
ret
fnstcw
cltd
and
cs
in
es
sbb
mov
iret
clc
cmp
shlb
je
dec
sub
jl
aas
sbb
pop
dec
cmc
xchg
div
adc
rorl
pop
enter
nop
cmp
call
mov
sub
ss
pop
lock
rclb
in
int
popf
and
mov
popf
xor
pop
iret
jbe
addb
cmp
mov
call
pop
push
jae
fs
xchg
push
push
push
call
pop
mov
insb
mov
out
sbb
jne
cmp
lea
movsl
je
push
xorl
xor
aam
pop
inc
push
mov
orl
sahf
inc
adc
pop
sub
repz
rorb
or
jmp
insb
enter
shl
cwtl
data16
daa
sub
ret
repz
std
daa
outsb
scas
ret
adc
xchg
lods
mov
cld
dec
scas
cli
in
mov
fld
ret
inc
dec
push
fwait
in
imulb
or
add
cmpsl
jno
mov
adc
aas
repz
push
xchg
mov
iret
jmp
push
inc
xchg
xor
cli
push
dec
jns
and
stos
inc
xchg
fcmovu
fnstenv
ljmp
jnp
out
pop
jp
imul
aam
pusha
add
clc
mov
mov
mov
cmc
dec
pop
lds
out
mov
jns
push
repnz
mov
xchg
iret
pop
inc
jno
lret
xchg
cwtl
sbb
xchg
aas
cs
mov
ficompl
push
sub
jns
loop
jns,pn
aam
cmp
mov
enter
cltd
mov
fucompp
mov
xchg
pop
loop
mov
ds
jle
cmp
xor
decb
jl
iret
loop
inc
arpl
mov
jg
div
sbb
xor
jle
push
sub
pop
mov
adc
dec
sbb
push
dec
lret
stc
loopne
out
rcl
mov
dec
lret
movl
jmp
or
leave
jne
popa
xor
fdivp
jl
mov
pop
fcomip
cmp
addb
pusha
pop
out
imul
icebp
loopne
jg
andl
lea
sub
push
xor
incl
mov
add
mov
cltd
mov
cmp
and
popf
or
sbb
mov
sbb
mov
in
xor
push
sub
mov
and
loope
or
push
xor
andb
mov
inc
sbb
fimull
jmp
push
test
dec
jo
lret
dec
inc
mov
mov
fadds
arpl
xchg
adc
sbb
xor
push
pop
test
add
push
mov
les
sub
push
or
cmp
jl
mov
or
pop
jmp
notb
inc
stos
xchg
and
inc
pop
fnstcw
imulb
in
enter
and
and
and
fidivs
movsb
and
roll
pop
imul
mov
js
aam
fsubl
adc
mov
imul
sub
cmp
xor
call
iret
or
hlt
int
or
dec
add
mov
imul
push
daa
push
xor
or
pop
imul
jp
pop
pop
mov
ljmp
stos
ret
pop
inc
add
push
int
testb
mov
push
push
mov
leave
dec
sbb
mov
cmp
addr16
in
or
xor
jb
cli
adc
or
adc
lock
add
jae
bound
lret
jno
add
loopne
and
test
push
int3
mov
mov
sbb
pop
cltd
outsb
pop
xchg
ljmp
fs
iret
push
jns
fistps
xchg
aaa
adc
into
pop
in
ds
movsb
mov
xchg
insl
push
and
jno
stc
in
icebp
sub
fildl
add
or
and
ret
adc
mov
insl
jo
dec
sub
sbb
gs
xor
pop
mov
popf
andl
call
xchg
push
push
cmp
enter
pop
mov
xchg
mov
scas
into
sbb
jns
ja
jo
imul
sbb
inc
push
lea
mov
scas
push
push
imul
scas
mov
loope
and
loop
jnp
add
ljmp
push
dec
and
stos
test
xchg
xor
or
and
xor
xchg
pop
xchg
sbb
mov
push
pop
push
iret
lock
call
and
mov
aas
call
pop
push
daa
cmp
rorb
pop
bound
mov
inc
xor
inc
pop
test
add
jno
incb
mov
mov
in
adc
xor
rorb
fwait
dec
and
nop
and
scas
and
cmpsl
cmpl
inc
xchg
addb
cwtl
jl
lods
xchg
lret
inc
sub
lret
aam
cmpl
popa
mov
sbb
push
adc
and
inc
and
cmpb
pop
negl
sahf
lcall
les
and
push
inc
ds
and
add
mov
xchg
pusha
and
xchg
xor
mov
sub
mov
pop
pusha
inc
push
mov
int
movb
jns
stos
inc
sahf
sub
dec
inc
pop
or
mov
leave
pop
jmp
cmpsb
push
and
movsl
xor
pop
sub
push
cltd
fstl
sti
es
xor
jmp
pop
rcrb
pusha
pop
jne
push
jge
loop
pop
mov
pushf
fcmovne
test
aas
inc
sub
outsb
and
mov
mov
and
and
sub
and
pop
jno
push
cwtl
js
jg
adc
or
jne
bound
adc
fs
mov
lock
push
inc
pop
or
inc
cmp
idivl
dec
mov
loop
hlt
push
mov
pop
mov
sbb
sub
inc
mov
cmp
sub
lret
or
out
out
fwait
add
and
in
adc
addr16
push
loop
rcrb
rorl
mov
jl
jnp
nop
or
fimull
sub
bound
popa
dec
ret
scas
mov
mov
adc
cwtl
mov
dec
push
cltd
xchg
xchg
int
or
popf
add
loop
sub
adc
xor
jne
pop
arpl
jbe
imul
push
call
or
xchg
add
mov
repnz
lock
test
jns
test
sti
mov
pushf
xchg
cmc
rclb
push
inc
jge
mov
cmp
nop
enter
dec
mov
or
pop
or
dec
arpl
mov
ficomps
push
test
aaa
outsb
icebp
adc
xor
rol
push
imul
mov
and
es
fcmovne
out
les
enter
lea
test
xor
mov
dec
xchg
push
mov
inc
test
inc
es
test
cs
aad
and
std
mov
adc
xchg
mov
gs
cmp
test
inc
jecxz
xchg
cmpb
sub
cmp
inc
stos
rorb
iret
loope
jbe
inc
ret
or
pop
out
xorps
mov
jno
jno
leave
fcomps
lea
outsb
dec
fisubl
jl
adcb
sbb
cs
ljmp
roll
imull
insb
and
jns
and
test
xchg
inc
or
push
lods
into
cmp
cmpsl
or
daa
leave
loopne
push
rcrl
fldl
and
sti
jns
cmp
roll
mov
test
out
adc
clc
dec
insb
rep
fbstp
push
sub
mov
dec
mov
dec
mov
push
sbb
les
daa
sub
jl
cmc
inc
mov
add
cld
lods
insb
cmp
aad
jns
xor
loop
cmp
pop
push
pop
xchg
in
shrb
iret
call
or
inc
rorb
sbb
aas
sarl
and
aad
ret
pusha
add
outsl
push
int3
cs
and
sbb
mov
dec
ss
int3
outsb
movl
push
je
mov
jg
popf
jecxz
jg
stc
xor
jo
mov
scas
cmc
jecxz
pop
int3
mov
or
mov
xchg
sub
cld
lahf
loop
leave
cmpsl
pop
xchg
push
cld
xor
jle
sub
fs
pop
inc
and
push
mov
adc
lahf
js
aas
inc
xlat
dec
cli
aaa
insl
loopne
lods
lea
pop
fld
dec
ja
push
shll
pop
aad
bnd
push
fcompl
enter
push
mov
adc
adc
in
mul
cmp
inc
stos
rclb
jecxz
cmp
cmc
jg
or
sub
in
sub
push
std
fwait
push
insb
cmp
in
out
and
xchg
cld
add
ss
or
les
jl
jle
pop
and
pushf
test
enter
inc
jnp
popf
jns
pop
lods
loop
mov
and
popf
jmp
pushf
insl
ds
cli
cmpsb
add
xchg
jp
and
cmp
cwtl
add
push
out
cs
cwtl
mov
xchg
fcmovb
test
cli
aad
mov
mov
ljmp
add
inc
rcl
pop
xor
mov
out
xor
aaa
sbb
dec
sahf
adc
faddl
es
push
push
cmp
cmp
jecxz
mov
jl
jg
sbb
mov
scas
inc
add
mov
int3
test
ret
cmpl
jle
sbb
cli
jns
xchg
outsb
jmp
sbb
popf
cmp
and
inc
pop
xchg
cmc
jp
pop
shlb
jge
mov
les
mov
jp
andb
mov
outsb
mov
and
rolb
pusha
xor
pushl
imul
xor
aad
xchg
iret
clc
insl
mov
cltd
dec
scas
cmp
mov
dec
subb
sbb
out
push
scas
sub
into
out
loopne
movsb
cltd
lret
mov
mov
mov
cmp
lea
in
xor
lcall
imul
xchg
lods
gs
mov
pop
dec
out
std
ljmp
outsl
cmp
sbb
stos
imul
mov
mov
fmul
inc
jmp
jb
ret
xor
inc
jge
mov
mov
cld
mov
mov
dec
test
mov
ds
aad
dec
lods
and
xor
ljmp
xor
into
mov
push
ret
mov
enter
ret
bound
xchg
mov
or
nop
mov
movsl
mov
cmp
sub
inc
dec
mov
jmp
arpl
add
pushf
mov
aam
and
addr16
mov
sbb
daa
adc
daa
rcl
pop
pop
fs
xchg
sbb
add
adc
push
mov
mov
nop
mov
imul
lds
dec
jne
aad
divb
shrl
adc
inc
jp
mov
rol
ficompl
push
outsl
sahf
pop
and
mov
mov
jb
xchg
jle
out
sarb
pusha
sub
and
stc
add
pop
cmc
adc
sbb
add
push
lea
shll
push
dec
rclb
sbb
add
clc
push
sbb
into
fs
arpl
out
pushf
shl
inc
shrl
mov
scas
je
ret
into
inc
dec
lret
addr16
std
sub
or
mov
inc
adc
orb
xchg
adc
or
das
add
dec
mov
and
push
aas
xchg
ljmp
ficompl
call
pop
dec
cli
std
sbb
mov
mov
and
cwtl
sti
pop
popf
pop
repnz
jnp
lods
mov
cmpsl
mov
sbb
aas
mulb
and
in
sahf
ficoms
fs
xor
roll
mov
mov
pop
and
imul
cmp
test
dec
repnz
lcall
fiadds
lds
cmp
hlt
adc
out
out
mov
and
call
mov
data16
out
outsb
jl
jp
push
cmp
stos
xchg
push
out
movsb
cmp
sub
ret
jno
jne
sub
repz
xchg
mov
stc
xor
mov
mov
fimuls
repnz
ds
add
loope
call
push
inc
ds
shll
jg
pop
imulb
dec
ljmp
add
add
dec
test
into
or
fnstcw
rclb
addr16
out
adc
dec
in
js
adc
js
imul
dec
jne
leave
mov
shll
jno
call
shlb
int3
push
cmp
test
jbe
or
dec
test
jne
or
mov
aam
ja
cmp
in
clc
int3
hlt
xor
int3
mov
dec
pop
mov
or
sub
dec
sbb
cmp
xchg
fisubl
into
lret
jae
add
out
push
sub
adcl
popa
popa
inc
into
mov
repz
or
push
pop
rorl
jno
insl
mov
pop
call
fstps
xchg
mov
dec
cmc
mov
pop
lods
jb
mov
imul
repz
mov
and
test
in
stos
cltd
fmul
jns
movsb
cs
addr16
cmpsl
and
inc
xor
cli
subl
sbb
sbb
add
das
mov
cmp
or
cmp
sar
mov
ljmp
imul
movsl
jns
stc
pushf
dec
lret
sti
pop
mov
imul
adcb
call
adc
test
lds
mov
lret
jecxz
dec
fidivs
sbb
into
pop
mov
adc
gs
in
jne
cli
adc
xchg
lods
ljmp
outsl
lea
imul
or
pop
pop
imul
and
mov
inc
stos
push
hlt
push
push
pop
call
fs
jecxz
jbe
call
mov
xor
pop
sbb
and
fs
xchg
lock
mov
loope
leave
pop
mov
test
mov
inc
cmpsl
aaa
aad
add
xchg
sbb
xchg
dec
loop
push
js
aaa
or
or
test
push
push
popa
mov
add
push
sub
fs
leave
jnp
push
loopne
sti
ja
or
out
ja
xchg
shl
push
jae
push
test
outsb
dec
subb
lahf
jnp
cmp
xor
mov
pop
cmc
sbb
mov
pop
mov
enter
lcall
out
fldenv
rclb
lds
mov
ja
movl
inc
jnp,pn
inc
leave
dec
cmp
adc
mov
ljmp
sub
clc
push
mov
pushf
lods
sub
leave
clc
adc
mov
add
add
pop
dec
insb
or
data16
pushl
aam
pop
in
test
rclb
bound
fldt
xchg
push
sti
rcrb
ds
mov
xchg
andl
imull
lret
jo
mov
mov
pop
dec
sbb
pop
sub
enter
sub
cltd
rorb
ret
cmp
clc
jmp
sbb
notb
pusha
xor
mov
call
cwtl
inc
jo
mov
add
outsb
xchg
sub
sti
or
sbb
dec
loop
cmpsl
rolb
test
mov
test
cli
or
inc
fsubrl
gs
mov
jge
pop
cltd
jmp
test
add
push
shlb
outsl
test
or
scas
add
cmp
xor
scas
movsl
idivl
mov
push
add
scas
in
divl
sub
xor
lcall
in
lahf
loop
in
sub
and
aaa
notl
cmp
mov
sub
mov
subl
dec
in
add
popf
shll
and
lret
loopne
ja
out
inc
xchg
mov
aad
ja
xchg
jno
adc
push
fbstp
push
cmp
pushf
movsb
adc
adc
or
push
sub
aas
into
pop
xor
ficomps
rcrb
pop
into
add
xchg
notb
dec
adc
cmp
and
dec
dec
int3
dec
ret
sti
mov
add
mov
lods
iret
jo
or
pop
sahf
aad
out
and
jmp
lods
dec
es
in
repnz
push
or
not
push
xchg
sarb
call
xor
xchg
push
lods
sub
pop
xchg
push
ret
enter
xor
aas
adc
mov
aaa
out
mov
xchg
xorb
out
in
inc
xor
movsb
sub
jp
and
dec
loope
cld
or
pop
test
sbb
jg
mov
rcrb
aam
push
jnp
inc
ljmp
or
cmp
xor
lret
cmp
hlt
xor
rorl
sbb
xchg
push
ds
in
mov
push
mov
push
std
sbb
jns
loopne
mov
and
dec
add
dec
testl
mov
mov
ret
fsubrs
push
pop
sub
shlb
aad
add
adc
xchg
rcr
pop
mov
repnz
loopne
fildll
inc
idivb
pop
mov
faddp
mov
pushf
nop
imul
gs
inc
sbb
ret
stos
sub
or
dec
add
pop
sbb
mov
cmp
or
std
xor
jmp
or
dec
sbb
sub
pop
arpl
ds
fistpl
push
sub
cld
nop
popf
scas
sub
imul
push
icebp
inc
scas
int3
mov
sbb
std
stos
andb
enter
fs
push
mov
stos
fcompl
fcmovb
es
dec
pop
push
ficompl
or
mov
insl
jbe
lret
jg
or
xchg
repz
cmp
adc
push
aaa
cmp
xchg
add
insl
mov
pop
test
lahf
add
inc
push
out
lcall
mov
and
adc
pop
cwtl
mov
mov
adc
push
add
and
out
loop
pop
inc
sbb
and
rep
icebp
aas
mull
fmul
test
and
push
and
or
mov
lahf
push
push
dec
xchg
adc
cmc
add
or
xchg
dec
rcrl
mov
add
sbb
cmpsl
push
pop
cmpsl
lock
push
push
mov
and
scas
ret
mov
outsl
dec
dec
xchg
enter
test
sar
jmp
fbld
mov
and
pop
lea
in
dec
outsb
sbb
ss
jns
out
mov
push
test
xchg
inc
xchg
cmp
mov
repnz
adcb
stos
js
sub
xchg
pop
test
ds
cltd
cmpsb
inc
ret
jbe
icebp
or
sets
sbb
push
adc
loopne
or
jne
in
pusha
int3
or
insl
xchg
ds
adc
mov
xor
loope
imul
cmc
daa
jge
sarb
das
sub
movsb
xor
subl
rcll
jnp
xor
loop
or
adc
mov
pop
jge
pushf
or
xchg
out
shl
jb
fidivrl
lret
imul
push
xchg
outsb
or
iret
pop
fsubrs
repnz
popw
xor
dec
cltd
adc
cmpb
xchg
out
into
enter
or
lcall
stos
cld
or
ret
xchg
shrl
loop
inc
and
push
pop
and
pop
xchg
in
mov
mov
enter
rcll
xchg
xlat
jl
fcoms
sub
sub
hlt
sbb
ja
add
sub
dec
mov
lret
mov
das
xor
repz
mov
and
push
inc
sub
jmp
push
jl
lds
mov
push
jge
ret
inc
and
mov
push
inc
lock
popf
push
sti
add
adc
sub
inc
lahf
xchg
sub
cmp
in
mov
mov
sbb
push
aam
in
shrl
sub
fisttps
nop
mov
cwtl
adc
aaa
sub
inc
fs
xor
sub
adc
jecxz
ss
lods
decl
cmp
lahf
adc
jbe
and
mov
mov
sbb
int3
mov
dec
mov
pop
arpl
jg
pop
mov
sbb
cld
mov
sbb
sti
pop
addl
mov
or
outsb
lock
cmp
push
xchg
mov
jmp
insb
dec
int
sti
mov
xchg
stc
mov
sub
enter
push
int
push
scas
or
jae
mov
js
insl
ret
jbe
orl
aas
xchg
fimull
rsqrtps
mov
mov
sbb
pop
sbb
ror
push
ror
lea
rclb
or
sub
adc
cmp
pop
push
xchg
jb
aas
xor
aaa
sbb
dec
fists
ret
pop
lods
jnp
inc
jo
imul
cli
add
mov
cwtl
mov
rol
cltd
and
in
jo
adc
call
icebp
push
mov
or
dec
in
lods
notb
loope
mov
jae
lcall
stos
pop
inc
stos
sbb
ret
mov
and
shlb
imul
add
aad
test
in
inc
mov
mov
pop
daa
jmp
out
and
fs
testb
dec
ss
icebp
xor
test
xchg
repnz
popf
jmp
sbb
movsl
ror
jmp
ret
pop
pop
mov
inc
ret
pop
ret
adc
lcall
icebp
les
addr16
pop
sub
add
and
jge
vaddpd
mov
cwtl
xchg
push
test
lea
jno
push
lea
sahf
add
scas
jno
push
push
popf
dec
or
pop
and
and
mov
test
es
rol
popf
mov
jecxz
and
and
xchg
mov
lods
mov
adc
insb
adc
push
xor
dec
sub
adc
pop
jb
sub
es
and
loopne
add
inc
dec
cmp
and
push
and
std
insb
mov
or
fwait
cwtl
data16
cltd
jo
inc
jo
adc
mov
jmp
mov
dec
cwtl
rcll
stos
mov
push
je
xchg
pop
ja
in
adc
adc
xchg
jno
jecxz
data16
jle
int
or
test
movsl
js
inc
ja
jecxz
add
dec
test
popf
sarl
dec
stos
jnp
cld
and
xchg
loop
popf
testl
outsl
sub
cmp
es
xchg
outsl
adc
add
test
adc
pop
leave
inc
mov
cli
adc
mov
insl
fcomp
and
sub
popa
sbb
pop
fcomi
jl
ret
stos
jg
adc
cmpxchg
dec
aad
mov
out
or
pop
dec
jnp
insb
leave
mov
xor
int3
jbe
test
movsl
push
mov
sub
mov
mov
js
shlb
punpckhdq
and
aam
js
jo
inc
xor
cmc
es
pop
sarl
mov
dec
xchg
pop
xor
daa
xchg
int
lea
push
cwtl
icebp
xor
or
mov
push
push
int
fimuls
ret
imul
xchg
push
sahf
cs
daa
mov
pop
xor
inc
cs
dec
pop
loop
mov
jae
cmc
mov
mov
xchg
fwait
mov
mov
fcmove
mov
test
scas
fidivrl
inc
mov
push
inc
pop
mov
cmpl
lea
mov
xor
scas
jo
xorl
xchg
add
sbb
push
shrb
sub
aas
andl
and
roll
movsb
insl
inc
fs
in
xchg
mov
scas
push
xchg
adc
mov
test
movsb
dec
xorb
in
subl
xchg
mov
pop
and
and
cmpsb
insl
pop
jns
inc
std
shrl
xchg
push
and
jp
and
dec
lret
shll
jnp
xor
and
call
mov
push
dec
stos
int
xor
cmp
adc
dec
mov
insl
jl
sub
push
cmp
mov
fnstsw
pop
xor
ja
movsb
outsl
jl
mov
add
aas
aad
loopne
lea
mov
mov
mov
test
frstor
dec
stos
into
ret
jge
xchg
mov
loop
dec
fwait
dec
cmp
jne
dec
xlat
icebp
imul
mov
and
mov
shll
cmp
sub
mov
xor
in
or
inc
jnp
and
mov
mov
int3
rorl
push
push
mov
push
dec
xchg
insl
ret
insl
inc
xor
cli
sbb
add
push
cmovae
fisubs
add
enter
inc
xor
dec
out
push
ds
rolb
lock
mov
bound
mov
mov
aam
movsl
mov
shld
mov
imul
push
cs
daa
xchg
cmp
or
pusha
mov
aam
mov
pop
insl
icebp
and
adc
mov
sbb
add
lcall
cmc
push
push
fsubrl
mov
cmp
inc
inc
insb
mov
add
jg
aaa
xchg
mov
mov
mov
mov
fcmovu
aas
movsb
inc
movsl
repz
push
xor
mov
sarl
mov
movsl
addr16
pop
sti
cli
in
mov
jmp
cmp
or
jnp
mov
and
icebp
push
inc
xchg
in
mov
in
adc
aas
aas
adc
push
xchg
push
pop
mov
pop
mov
outsl
stos
sbbb
cmp
jmp
xor
shrl
sub
imul
sbb
test
rcrb
push
pushf
aad
cmp
xor
mov
out
pop
jle,pt
imul
jne
out
inc
jo
pop
call
flds
mov
push
mov
out
loope
jb
cmp
adc
stos
bound
xor
shll
sub
mov
pop
out
cwtl
add
into
rcrl
mull
mov
cmp
cmc
cs
movsl
push
and
push
jns
fs
dec
add
and
mov
cwtl
iret
or
fildl
mov
fcmovb
inc
sbb
and
pop
imul
daa
xchg
mov
adcw
sbb
gs
in
fucom
jno
mov
jno
sti
daa
push
xchg
negl
jmp
cwtl
inc
push
sbb
aad
in
leave
adc
cmpsl
cmp
pop
loope
adc
xchg
or
mov
rclb
sti
ljmp
daa
pop
jnp
js
or
cmpsb
cwtl
test
adc
fisttpll
shlb
sarl
mov
mov
lret
push
push
je
cwtl
out
mov
jae
negl
jge
jne
outsl
xchg
call
sbb
xchg
mov
push
push
shrb
xchg
push
push
sub
in
test
pop
mov
fidivrl
ljmp
add
sahf
mov
push
icebp
aad
or
push
xchg
dec
mov
cli
xchg
fsubs
movsb
sub
jo
cmp
rcll
push
std
push
clc
aam
hlt
clc
or
inc
je
jbe
pop
xchg
scas
pusha
pop
mov
xchg
inc
pop
or
mov
jl
outsl
pop
jge
or
mov
push
mov
add
lods
dec
adcb
mov
add
sub
xlat
imul
mov
loopne
sti
dec
push
push
inc
xchg
jb
adc
sub
mulb
add
push
push
cmp
rcr
jnp
pushf
loopne
dec
sub
daa
jmp
add
push
insb
mov
cmp
mov
fistpll
pop
jb
cltd
inc
sti
cmp
jp
xor
stos
sahf
xchg
adc
xchg
add
lea
aas
xchg
sbb
ret
pop
call
inc
dec
cltd
out
or
out
arpl
loope
cld
xlat
ja
sbb
xchg
in
leave
lock
xchg
pop
insb
sti
cmp
pushf
aam
fcmovb
loop
shrb
fs
inc
ror
dec
gs
jnp
lock
fwait
jge
movsl
cmp
push
orps
fdivrp
and
and
mov
jne
in
test
mov
cmp
pop
sahf
push
aad
push
lods
adc
int3
inc
add
mov
adc
cmp
cmpsb
push
ja
loopne
xor
fwait
popf
fdivrs
out
std
aad
or
xchg
cltd
push
mov
jg
adc
divb
lods
add
rorb
xor
jno
nop
and
adc
add
adc
cmp
data16
xchg
xchg
adc
inc
repz
mov
mov
add
out
scas
and
fsubp
cld
sbb
es
adc
cmp
mov
inc
cmp
shlb
jl
call
mov
leave
pop
mov
jo
lods
daa
sbb
pop
pop
addr16
push
in
pop
sbb
test
fcomp
ret
sub
jecxz
mov
jns
fcompl
add
std
push
aam
jnp
js
sub
jb
aam
addb
mov
and
sbb
mov
nop
stos
cmp
sbb
insb
imul
mov
lods
push
xor
cmp
movsl
xchg
ret
jno
and
lods
not
dec
je
dec
lods
xor
or
mov
pop
call
shll
or
push
daa
test
xchg
dec
insb
push
mov
lods
dec
add
imul
arpl
cmpsb
int
add
ret
in
mov
sbb
sbb
ret
mov
sbbl
imul
scas
fstpt
sbb
out
test
xor
ja
xor
aas
mov
sbb
lret
cltd
ds
mov
pop
xchg
hlt
je
push
imul
into
frstor
es
xor
cltd
fstps
and
cld
lahf
xor
lea
pop
pusha
adc
jmp
pop
js
arpl
mov
lods
cvtps2pd
xchg
in
and
xchg
adc
dec
jae
or
or
mov
adc
pop
jo
loop
adc
cmp
fs
jnp
dec
stos
sahf
add
fmuls
push
lods
ret
lds
out
jno
xor
mov
jbe
stos
cmp
mov
push
mov
inc
data16
xchg
adc
or
or
jle
test
lods
mov
rcll
jge
fchs
movl
hlt
mov
xchg
repz
mov
aad
pop
push
dec
fdiv
insb
daa
sbb
arpl
adc
dec
daa
lds
xchg
xchg
mov
push
mov
sbb
adc
in
fcmovnbe
sahf
cmp
clc
in
fs
ss
js
inc
cmc
lods
sbb
sbb
fs
test
jns
shr
loope
test
sub
adc
push
divb
js
loop
mov
loope
lcall
xor
push
ret
cmp
inc
stc
sbb
loopne
xchg
mov
dec
push
daa
call
jecxz,pt
cmp
pop
out
mov
add
fcom
or
xor
mov
jmp
lret
xor
lret
sahf
lods
mov
or
pop
sbb
inc
and
scas
dec
movb
pop
xor
pop
mov
xchg
xchg
mov
push
xor
dec
jl
ret
loope
or
sarl
xchg
fimull
cmpsl
cld
sbb
insl
xchg
clc
pop
add
jl
push
mov
jbe
testl
jg
mov
mov
imul
and
or
int
adc
out
lods
nop
shrb
push
aaa
repz
add
les
dec
out
orl
pop
inc
lret
imul
xchg
movsl
mov
add
fstpt
push
sbb
imul
mov
pop
movsl
idivb
push
cmpsb
xchg
sarl
jmp
jge
mov
adcb
out
and
and
mov
cli
call
arpl
loope
jbe
xchg
fs
je
ret
mov
and
inc
fiadds
push
xchg
pushf
and
imul
out
mov
add
and
aad
xchg
push
sahf
hlt
in
pop
push
lret
push
idiv
inc
sahf
mov
mov
jns
dec
les
js
int3
xor
addr16
adc
jmp
shrl
push
mov
popf
mov
jl
sbb
sub
add
adc
aas
xchg
and
enter
cmp
pop
xor
roll
pushf
shr
js
mov
rorb
sbb
push
outsb
andb
dec
and
or
imul
popa
movsb
aad
mov
mov
test
lcall
lods
test
pmaddwd
dec
push
nop
xchg
sub
push
and
or
in
nop
pushf
or
inc
xchg
pop
push
add
push
cld
out
repnz
es
push
ja
arpl
std
aaa
dec
and
int
popl
in
dec
xchg
adc
push
nop
out
jae
lahf
cltd
xchg
sub
xchg
sahf
jg
imul
mov
inc
iret
pushw
rcrb
scas
dec
push
xor
movsb
loopne
dec
jecxz
and
jo
dec
cmpsl
adc
pop
mov
mov
mov
call
sbb
xor
mov
cmp
push
stc
test
sbb
cld
jbe
jmp
push
mov
xchg
fdivrs
xchg
mov
jle
inc
sub
outsb
dec
ret
xchg
mov
lret
icebp
add
add
mov
lods
test
pop
xchg
mov
sbb
das
lret
fmuls
jp
imul
mov
cld
jno
hlt
cmp
fldl
fnsave
sbb
out
movsb
dec
dec
jmp
lock
and
pop
pop
outsb
lret
xchg
adc
adc
or
or
push
int3
inc
sub
inc
orb
adc
sbb
in
adc
mov
cmp
mov
add
in
push
xlat
cmp
sbb
mov
mov
or
sbb
jnp
ret
in
sbb
jns
sbbl
xchg
push
and
pushf
faddl
push
out
add
inc
push
sarb
fnstenv
push
rcl
and
pop
add
jg
in
mov
mulb
imul
mov
or
loope
mov
fwait
movsl
popa
icebp
js
cli
maskmovq
testl
cmpsb
cmp
cmc
stos
fcmovnbe
jg
shrb
mov
add
lret
push
mov
fs
hlt
adc
xor
rclb
mov
xor
xchg
xlat
mov
frstor
cld
int
sti
inc
bound
mov
in
add
aad
lcall
add
push
mov
repz
or
pop
sbb
sub
lahf
pop
sti
lods
dec
frstor
cmp
cwtl
xlat
outsl
sub
sbb
ss
mov
jl
xor
sbb
sahf
cmpb
sti
pop
xchg
popf
xor
sbb
out
dec
adc
push
adc
mov
pop
sbb
mov
or
test
dec
and
cmp
pop
dec
fisubrs
scas
push
push
jmp
lret
cmp
insl
sti
outsl
adc
lcall
pop
push
and
pop
js
inc
iret
call
ret
daa
dec
xlat
or
pop
or
scas
fsubrs
mov
repz
stc
inc
sub
jb
dec
rcrl
ss
in
dec
adc
test
imul
hlt
test
xor
xchg
dec
push
nop
fildll
cmp
pop
cmpsl
xchg
lahf
in
gs
int
pop
aaa
ds
dec
add
push
ficomps
cmp
pop
div
je
and
test
imul
cmpl
sbb
and
pop
lock
in
or
sub
mov
sbb
fstp
cmp
int3
mov
imul
out
cmpsl
adc
dec
xor
push
mov
mov
mov
pop
daa
data16
sbb
popa
std
xchg
jecxz
jecxz
rcrb
jp
mov
clc
cmp
add
mov
mov
add
mov
push
add
pop
loopne
lock
fbstp
popf
pusha
pop
sahf
sub
jp
xor
movsl
loope
insb
mov
test
cwtl
ss
out
cmpsl
pop
inc
mov
jmp
sub
jge
leave
pop
outsb
push
pop
mov
popf
push
negl
xor
or
sub
inc
inc
int
jl
lret
jge
testb
test
loopne
xlat
mov
roll
jno
mov
lea
xor
push
add
enter
xchg
push
leave
mov
insb
lds
lret
inc
xchg
aas
cwtl
add
out
imul
jecxz
and
fidivl
in
xchg
or
stos
leave
insb
jns
pop
scas
or
cld
test
popa
pop
jmp
mov
push
pusha
cli
test
dec
xchg
push
xchg
inc
out
repz
xchg
pop
adc
mov
jmp
sub
xchg
test
and
inc
test
fsubrp
lds
jge
out
inc
xor
add
mov
fidivrl
or
ss
es
mov
xor
pop
sbb
xchg
sub
push
aaa
or
add
cmp
dec
sbb
push
dec
xchg
aad
sub
stc
jae
lcall
pop
ljmp
and
lahf
xchg
jo
mov
stos
insb
mov
ss
pop
lds
inc
cmp
push
xor
jecxz
aam
and
lea
adc
add
push
xor
pop
cld
xchg
cs
mov
nop
cmp
daa
push
pop
push
jnp
and
sbb
icebp
int3
mov
push
dec
mov
sbb
lock
leave
dec
pop
sub
repnz
cmpl
call
sbb
add
icebp
push
jbe
fwait
in
movsl
jbe
push
sub
pop
rorb
aad
aas
sbb
adc
jl
jge
fucomp
aaa
or
pop
les
mov
adc
gs
dec
jp
cmp
das
test
lods
xorb
ds
stos
mov
mov
out
ret
xor
and
jo
andl
pop
mov
insb
pop
stos
lret
sbb
pushf
out
aad
cmpsl
in
inc
stos
jae
jne
pop
push
pop
dec
stc
out
dec
fsubrl
ds
cmp
gs
mov
test
dec
frstor
leave
pop
popf
int
mov
or
xlat
aaa
pop
jo
test
and
fisttpll
fs
roll
jo
jl
pop
or
push
cmp
frstor
mov
lcall
out
cwtl
cmpsb
push
repz
iret
lock
outsb
add
or
adc
add
ficomps
imul
or
lahf
andb
pop
fnclex
in
cmp
mov
rcll
dec
sub
pop
sub
pop
cmpsl
dec
jg
mov
icebp
sub
movd
dec
sub
clc
out
or
inc
cmc
je
jae
cmp
mov
jo
sahf
out
inc
xchg
push
mov
outsb
pop
movsl
inc
pusha
pop
insl
nop
dec
js
cld
and
orb
lds
sahf
popa
lret
and
lds
loop
cmp
pop
mov
sub
sahf
cmpsb
lock
add
jbe
xchg
aas
es
mov
xchg
test
jl
cs
dec
ja
adc
pop
inc
mov
push
dec
or
add
add
xor
iret
pop
push
mov
lret
ljmp
pop
push
xchg
aaa
push
arpl
add
xchg
xchg
adc
sub
jne
xchg
mov
sub
mov
adc
dec
inc
dec
xlat
repz
add
test
mov
push
pop
add
mov
jmp
pop
bound
inc
das
sub
xchg
mov
push
xor
xchg
inc
out
adc
fwait
in
add
divl
sub
jl
push
insb
jl
jle
mov
push
into
ja
lret
inc
mov
xchg
mov
lret
jge
sbb
cli
push
jmp
scas
testb
cmp
shlb
cmpsb
fisttps
cmp
xor
daa
adc
call
out
jnp
stos
push
jl
jb
mov
or
ljmp
mov
jns
sub
pop
push
outsl
outsl
mov
add
dec
mov
xorl
lcall
and
pop
sbb
repnz
mov
aam
cmp
in
int3
pop
inc
gs
and
cmpsb
mov
lcall
jno
mov
jo
adc
or
mov
and
stc
lcall
test
xor
sub
cmp
and
out
and
inc
repz
pop
jns
mov
aas
sub
cmp
pop
mov
repz
mov
sbb
je
lcall
inc
ret
popf
jecxz
jp
inc
push
pop
mov
hlt
jbe
push
scas
xchg
and
call
lds
shlb
mov
sbb
adc
pop
mov
jmp
sub
xor
push
lahf
cld
xchg
test
add
fsubl
je
sahf
dec
imul
xchg
mov
xlat
js
pop
mov
dec
rclb
loop
loope
inc
data16
jns
mov
cmp
and
shr
inc
nop
outsl
push
es
je
xchg
aas
and
inc
xchg
push
cmp
ret
pushf
adc
mov
lods
jmp
mov
loopne
aas
fdivrs
inc
movsb
ja
inc
fs
cmpl
xor
push
mov
lret
negb
jg
mov
inc
shll
stos
iret
pop
into
out
add
cs
inc
mov
and
std
mov
or
jp
jmp
mov
dec
or
fsubs
mov
idiv
orb
adc
xor
cvtps2pi
mov
cmc
cmpsb
cmp
jb
int
int3
or
mov
cltd
or
cwtl
sahf
jle
fsubs
fimull
push
iret
popf
adc
jg
add
je
xchg
mov
sbb
fs
jbe
stos
stc
mov
and
push
xor
xchg
push
or
movsl
push
pop
mov
popa
mov
or
cld
xchg
jbe
jle
aas
sub
jne
jl
dec
mov
loopne
lahf
in
popf
jmp
pop
mov
and
cmpsb
xchg
dec
dec
sbb
dec
and
xchg
ds
dec
stos
pop
and
insl
repz
push
stos
inc
dec
aad
hlt
cmp
cmc
sub
xor
popl
mov
sbb
cmp
xchg
test
xchg
sub
sbb
ret
pop
sub
dec
in
jno
push
xchg
mov
mov
test
adcl
adc
xchg
gs
cmpsb
lock
iret
mov
out
and
enter
dec
leave
jl
cld
out
jp
adc
mov
add
inc
mov
iret
mov
mov
and
cmpsl
sbb
adc
inc
lcall
movsl
push
jmp
fwait
pop
jnp
or
pop
push
or
mov
pop
adc
scas
xchg
push
addr16
add
fcmovu
in
out
jmp
cmpb
outsl
stc
jno
stos
push
test
mov
mov
cmpsl
inc
ret
push
cmp
mov
push
mov
pop
test
test
and
dec
in
pop
ficoml
pop
dec
std
scas
stos
repnz
add
movsl
popa
aad
aad
inc
jae
jnp
or
sub
jns
subl
cltd
xchg
xchg
pop
pop
cmp
into
das
out
mov
inc
cmp
fistl
nop
dec
mov
fsubrl
sub
and
jecxz
mov
inc
adc
xchg
stos
daa
and
idivl
loopne
push
test
dec
xchg
loope
adc
push
mov
jmp
mov
mov
or
push
mov
cs
imul
push
push
lahf
mov
je
sbbb
mov
adc
daa
push
popa
mov
rorb
nop
sbb
outsl
lock
xchg
cltd
jge
fbstp
sub
mov
inc
xor
out
mov
test
sbb
jg
mov
lods
mov
cmp
mov
adc
add
xor
or
sbb
jp
into
pop
nop
cmp
push
mov
push
addb
sbb
fwait
sbb
jmp
stc
fwait
or
xor
ds
test
and
shl
or
ja
jne
or
icebp
outsl
jnp
ss
int
inc
pop
clc
repnz
sub
call
mov
and
pop
mov
and
shrb
pop
pop
or
xlat
icebp
lea
dec
sub
jns
sbb
lret
mov
inc
sarl
adc
pop
aas
fldl
fs
pop
mov
jecxz
jge
add
adc
test
inc
push
mov
cltd
mov
pushf
sub
mov
push
push
insb
fcomps
imul
insl
int
xchg
sbb
adc
pushf
xchg
ss
push
call
lret
mov
jl
shl
sbb
mov
push
ja
push
adc
jnp
jbe
jmp
push
push
cmp
imul
xchg
add
adc
push
xor
cmpsb
xor
addr16
jl
in
jb
or
sarl
xchg
cmpsb
sete
push
add
xchg
lock
repz
bound
pop
fcomip
inc
or
inc
xor
or
jae
mov
jo
cmpsl
test
xchg
mov
testl
pop
mov
add
xchg
inc
je
in
mov
out
sub
sbb
jno
stos
enter
dec
mov
xor
adc
out
shrb
jp
mov
dec
mov
divb
movsb
cmp
and
cmp
cmp
scas
lods
mov
push
sub
clc
aad
dec
inc
adc
movsl
and
sbb
sub
jmp
dec
cmp
jb
pusha
pop
testb
in
jae
ficompl
mov
mov
or
popf
xchg
into
mov
imul
add
cs
popf
push
clc
lahf
nop
xchg
aad
jns
frstor
cli
aas
cwtl
xchg
jmp
cmp
repz
xchg
fisttpll
xchg
jae
mov
fstp
or
add
sbb
arpl
mov
daa
xchg
push
js
call
inc
mov
lcall
icebp
mov
xchg
mov
xchg
and
testb
dec
dec
cmp
jmp
lcall
jg
in
outsb
mov
push
push
in
testb
cwtl
enter
arpl
xchg
cld
jb
dec
sbb
pop
hlt
es
adc
mov
lods
cmp
das
in
int3
repnz
mov
pop
or
popf
pop
loope
mov
sub
push
xchg
dec
loope
inc
addb
xchg
sbb
pop
insb
push
jge
cmp
sbb
and
or
cld
sbb
movsb
subb
shr
and
cmp
push
aaa
jp
inc
sub
mov
fwait
xchg
fldcw
js
mov
sbb
dec
lds
push
push
cmc
sub
clc
movsb
or
loopne
cmp
jl
jb
xor
mov
aam
add
push
stos
inc
repz
mov
mov
out
push
in
into
mov
clc
inc
out
and
call
or
nop
push
sub
mov
inc
mov
xor
add
enter
cmp
loope
stc
iret
lods
ss
xchg
lret
mov
push
adc
and
sbb
add
je
stos
jmp
and
sbb
packuswb
loope
adc
negl
adc
mov
add
mov
pop
sub
jle
imul
jno
stos
xor
sub
dec
xchg
pop
lcall
adc
inc
outsl
daa
cmpsb
fisubrs
fisttpl
push
jge
jns
icebp
sbb
add
stos
push
ret
sti
call
imul
lahf
cmp
in
and
clc
enter
mov
or
loopne
mov
jne
pop
fdivrl
jl
sub
mov
jo
cltd
pop
jecxz
nop
inc
or
ljmp
lock
inc
fs
mov
std
mov
push
sbb
rcrl
xor
out
enter
popa
push
inc
mov
mov
mov
in
push
test
inc
xchg
adcb
adc
popf
push
mov
test
adcl
jnp
in
inc
cld
arpl
and
les
mov
dec
dec
mov
into
inc
scas
addb
inc
xorl
xchg
and
inc
loop
nop
cvtps2pi
fistpl
out
jecxz
jns
xchg
outsb
dec
aas
sbb
mov
mov
nop
lret
ja
push
pop
lahf
or
popf
out
pop
inc
adc
mov
cli
sbb
cmc
sti
aaa
xchg
arpl
inc
jb
fwait
cmc
push
xor
popa
mov
adc
cmp
jle
mov
dec
inc
out
shrb
shlb
cwtl
push
pop
mov
aam
or
sub
ret
jecxz
test
cmp
test
dec
or
movsl
and
data16
nop
aad
out
sar
fidivrs
xor
nop
das
cmp
jae
lcall
fcoml
and
inc
pop
ja
lds
mov
mov
or
push
xor
push
pop
popa
push
aad
or
and
inc
and
and
jle
push
mov
push
std
bound
mov
mov
les
fucomp
loope
leave
inc
jnp
pop
stos
aaa
lods
insl
and
xor
popa
sub
cmpl
adc
or
cltd
jecxz
dec
push
into
dec
daa
mov
pop
jecxz
mov
jne
enter
frstor
mov
and
add
stos
pop
pop
dec
jo
adc
push
ss
xchg
mov
jo
ljmp
popa
sbb
and
aam
cmp
test
jo
mov
scas
inc
test
jl
daa
out
sti
fiadds
pop
insb
out
fiadds
sub
ljmp
mov
dec
out
add
daa
leave
sbb
daa
call
push
loop
nop
fwait
sbb
or
push
xor
pop
pop
loopne
into
div
psrld
inc
gs
mov
xor
xchg
and
sbb
mov
add
inc
enter
xlat
and
adcl
push
inc
pop
sahf
sbb
cmpb
adc
pop
stc
mov
jl
sbb
push
lea
push
call
mov
dec
fsubrs
sbb
sarb
dec
sub
out
push
add
xor
mov
xor
jp
dec
pop
bound
and
cwtl
fsubl
cli
fistl
js
fdivrl
outsl
repz
stos
rcll
dec
les
out
mov
sub
jp
into
js
adcl
lret
fsubl
scas
adcl
repz
mov
mov
pusha
fsts
push
test
lods
add
xor
or
push
jge
in
mov
imulb
out
push
inc
fadds
dec
xor
sub
out
pop
mov
mov
sbb
arpl
insb
das
xchg
je
cmp
fdivr
outsb
or
fsqrt
jp
mov
ja
fs
outsb
clc
cmp
lret
push
lea
inc
out
into
jle
ja
jno
fdivs
dec
fwait
mov
fsubr
lock
loope
daa
in
cmp
fsubrl
mov
sbb
push
mov
movsl
rolb
inc
pop
outsb
push
sti
dec
mov
orl
cmpsl
int
push
fldt
pop
inc
stos
loopne
inc
sti
pop
bound
push
pusha
add
xor
jno
add
sbb
mov
imul
cwtl
pop
lods
ss
add
pop
adc
lahf
dec
cmp
mov
cltd
dec
stc
fistl
das
ror
les
inc
push
lret
pop
cmp
xchg
cmp
adc
adc
jb
test
sahf
pop
addr16
dec
in
add
cmpl
call
outsb
inc
mov
cmp
dec
dec
lock
push
in
lods
pop
sub
jae
sub
idivb
xchg
fidivs
mov
arpl
shlb
ret
aam
and
imul
sbb
mov
cmc
pop
cmpsb
daa
daa
jnp
inc
mov
or
stos
flds
push
and
out
fmul
and
xor
sub
pop
cwtl
les
sub
aam
out
xchg
sbb
icebp
mov
inc
divl
dec
addb
das
sub
insl
out
test
out
loope
mov
push
push
jo
sub
adc
push
repnz
cmc
push
ret
ds
lahf
add
push
pop
push
mov
dec
pop
mov
pop
enter
sub
pop
orb
loop
or
aas
add
mov
rdpmc
test
xor
push
iret
xchg
packuswb
js
or
fwait
push
pushf
push
sub
jne
mov
dec
aas
in
dec
mov
sti
ret
mov
mov
dec
and
lea
sub
cmp
cmp
dec
arpl
je
add
mov
ljmp
inc
hlt
sbb
std
mov
mov
xchg
xchg
rcrb
add
or
and
ret
loopne
cwtl
mov
fstpl
inc
mov
lcall
inc
pop
jmp
in
or
lods
movsb
pop
fcmovb
idiv
pop
imul
daa
aas
aaa
jge
repz
dec
mov
pop
lods
shl
leave
in
inc
adc
jl
lcall
loopne
sarl
fs
mov
pusha
repnz
add
icebp
jnp
das
mov
inc
mov
add
inc
shlb
cmpsl
dec
xchg
stos
fistl
sahf
daa
xor
dec
sub
leave
arpl
cmp
sbb
dec
lods
jo
or
or
and
inc
xor
sbb
into
sub
pop
insb
cmc
hlt
mov
daa
test
xchg
or
cwtl
sti
repnz
mov
test
pop
subb
jbe,pt
mov
push
xchg
push
idivl
in
mov
lods
stos
imul
xchg
das
lock
inc
mov
or
mov
clc
adc
nop
movsl
sbbl
lahf
mov
loop
pop
mov
push
mov
jns
add
insl
pop
ja
bound
jns
inc
pop
add
lret
es
sbb
xor
jnp
pushf
dec
mov
mov
inc
fldcw
imul
cmc
imul
fcomps
mov
scas
dec
shlb
adc
add
fisubl
adc
cmp
cmc
xchg
xchg
xchg
or
jge
jbe
mov
testl
xchg
out
inc
ds
addl
or
cmc
adc
mov
sahf
pop
lcall
dec
jne
mov
clc
aaa
jb,pt
and
adc
mov
add
cld
mov
xchg
call
or
dec
stos
lock
and
cmpsb
cs
outsl
mov
inc
lea
daa
push
test
fimuls
cld
nop
pop
std
ret
mov
pop
add
add
or
ds
out
push
in
imul
adc
bound
push
inc
mov
repnz
mov
sub
shlb
movsb
push
jp
cmp
add
inc
movsl
outsl
cmp
sub
outsl
fldenv
test
jecxz
and
push
xor
nop
pushf
shrb
mov
bound
mov
inc
test
xchg
gs
imul
into
and
push
and
lret
int
adc
xchg
ds
lcall
or
dec
mul
xor
jo
std
stc
cmpsb
sbb
cmpb
inc
inc
rcl
sbb
or
cmp
dec
sahf
cmp
sahf
inc
dec
or
mov
je
loop
pop
out
cmp
adc
gs
push
loopne
test
test
mov
push
stc
sahf
jge
gs
pop
shrb
shll
loop
mov
cltd
cltd
mov
sbbl
mov
jne
inc
mov
mov
lods
fidivs
pop
repz
mov
jne
mov
loop
inc
mov
cmpl
or
ds
lea
inc
imul
jle
sar
movsl
push
sarb
roll
pop
xor
inc
scas
fnstcw
ret
pop
ljmp
hlt
cmp
clc
adcl
push
sub
cmp
pop
dec
add
push
cmc
dec
insl
sbb
pop
mov
dec
orb
mov
rcrl
xchg
adc
xchg
loopne
and
call
repnz
ss
mov
jle
in
or
xor
pushf
inc
mov
les
push
clc
push
mov
lahf
push
lea
sub
sbb
ljmp
pusha
sahf
repnz
ja
inc
cmpsl
lret
leave
cli
xchg
stos
dec
enter
sub
es
popa
mov
mov
into
dec
gs
out
xlat
jne
dec
andb
mov
out
mov
inc
test
and
pushf
pop
out
mov
ficompl
mov
ret
fnstcw
dec
mov
cmpsl
stos
pusha
outsb
stos
rcll
xchg
je
into
mov
das
test
xchg
inc
arpl
push
clc
shl
and
mov
mov
inc
xor
clc
mov
dec
pop
inc
stos
fsub
pop
repnz
mov
das
jecxz
sbb
ret
sti
mov
cmc
aad
adc
mov
push
jno
or
aad
cmc
addr16
fsubs
pop
out
int3
aaa
gs
fwait
or
mov
in
jge
cmc
test
sti
sbb
or
mov
push
addr16
pop
cltd
sub
jns
fcmovne
mov
adc
pop
daa
jmp
fwait
add
adc
sub
rorl
push
xor
dec
outsb
mov
daa
or
into
jle
and
call
xchg
mov
hlt
cmp
sbb
xchg
imul
fsubl
and
leave
and
xlat
or
xor
jge
test
in
pop
cmp
xchg
or
lods
setge
jns
outsb
or
cmp
out
rorl
dec
xchg
rcr
sahf
mov
outsl
loop
mov
push
adc
es
xlat
lea
xor
mov
clc
and
cmp
ficompl
xchg
shlb
lcall
hlt
fwait
imul
dec
ret
mov
div
out
je
dec
in
push
fstps
arpl
shrl
sbb
and
jbe
cmpsl
es
sarl
repz
divb
hlt
cmc
mov
mov
xchg
jae
sbb
cmc
xor
fidivrs
pop
andb
data16
push
inc
daa
mov
jl
mov
mov
or
mov
cltd
insl
data16
mov
nop
btc
outsb
xor
mov
mov
mov
cmp
mov
mov
sbb
fidivl
cmpsb
enter
stc
testb
mov
cld
lret
cld
sub
pop
sub
inc
push
pop
repnz
or
fwait
mov
test
in
xor
loopne
jmp
lea
aam
dec
push
mov
pop
push
sbb
ja
add
jae
outsb
mov
push
lahf
jle
imul
jl
mov
sub
or
mov
push
sbb
xchg
xorb
jo
adc
scas
fdivs
in
xchg
popf
pcmpgtb
dec
test
mov
jp
mov
dec
push
dec
std
out
push
jno
rcrl
pusha
mov
xor
inc
xor
push
cld
sbb
push
xchg
das
sub
xchg
cmp
mov
push
jbe
mov
cmp
in
in
mul
jne
test
lret
and
cli
push
fwait
adc
in
push
loopne
out
iret
mov
or
cmp
jns
mov
cmpsl
pop
ja
test
mov
fisubrs
pop
hlt
aad
ret
and
mov
xchg
xor
mov
lea
outsb
cmp
push
adcl
or
lods
jns
xchg
sbb
insb
and
and
pop
femms
sub
add
add
xchg
outsb
adc
mov
pop
adc
pop
pop
lret
and
cmp
and
in
xchg
data16
clc
cmpsl
into
pop
sbb
repnz
jns
push
icebp
fcom
inc
mov
out
insb
int
fmull
popa
bound
xor
jnp
enter
les
xor
loop
push
popa
jo
fistpl
pop
call
jg
js
mov
incb
dec
je
cli
inc
xchg
jne
in
mov
jo
ret
pop
ljmp
shlb
cmp
mov
sub
es
xor
mov
mov
lahf
or
sbb
xchg
jno
daa
imul
push
fildll
dec
or
push
data16
aaa
pop
imul
das
mov
lods
arpl
mov
ror
dec
pop
xlat
shll
lock
inc
jo
and
xchg
es
imull
jmp
int
pop
out
pop
mov
daa
cmc
gs
jnp
popl
push
jne
fcoml
mov
push
mov
cltd
jae
in
xor
and
ds
push
imul
data16
daa
sbb
add
pop
xor
hlt
pop
fsubp
inc
into
jns
mov
inc
jnp
add
jbe
loope
fldt
dec
dec
arpl
jp
mov
cmp
push
adc
repz
mov
loop
dec
ficompl
or
adc
cmp
dec
stc
xchg
cmp
sub
xchg
mov
lret
ds
dec
orb
mov
insb
adcb
or
mov
pop
or
roll
push
outsb
xor
mov
push
fcmovnu
jo
ret
dec
imul
sub
stc
hlt
pop
sbbl
mov
pop
xor
es
scas
test
cwtl
or
add
arpl
adc
push
pop
dec
xor
jns
nop
mov
mov
pusha
inc
rcrl
cs
mov
in
pop
fs
inc
dec
adc
cmc
dec
pop
jle
add
jns
test
sbb
mov
addb
sub
lahf
add
pop
or
cmp
aas
jp
mov
xchg
frstor
imul
out
add
xor
pop
xchg
push
sub
mov
pushl
sbb
test
mov
xor
xchg
xor
lret
cmp
add
cld
and
mov
faddl
pop
fiadds
or
mov
addl
add
mov
push
aad
ret
pop
add
fiadds
sub
mov
in
and
jmp
inc
mov
adc
xchg
mov
sub
js
stc
inc
fisttps
sub
sub
int
add
fldenv
imul
mov
ficompl
cmp
mov
cmp
mov
addr16
xor
mov
adc
lock
cmpsb
lahf
es
dec
dec
addb
pop
or
cmp
inc
fisubs
aam
notb
adc
inc
push
mov
ljmp
out
mov
xchg
mov
jb
pop
sti
insb
and
pop
push
inc
xor
mov
rclb
mov
add
mov
cmp
nop
fwait
enter
sbb
loopne
je
add
cmp
mov
repz
and
popf
orb
rorb
sub
mov
ffree
arpl
push
ljmp
push
out
xchg
fistl
in
sub
cmp
mov
push
iret
stos
add
into
push
loop
aam
ds
mov
insb
pop
jle
sbb
pop
add
pop
outsb
out
nop
lea
mov
adc
cmpsb
rsm
stos
js
xor
and
push
push
cmp
adc
enter
mov
aas
sbb
push
pinsrw
adc
loope
pop
std
and
add
and
mov
bnd
sbb
xchg
adc
fildll
inc
cmp
shll
out
and
xchg
pushf
fidivl
fildll
xor
push
pop
fld
sub
pusha
push
popa
outsb
jmp
fstpt
cmc
dec
repz
pop
pop
lcall
or
into
sub
movsl
and
bnd
addl
mov
scas
mov
pop
pop
loopne
jnp
mov
pop
iret
iret
mov
ljmp
jp
ss
ja
jle
arpl
enter
scas
sbb
sbb
push
mov
adc
mov
sub
mov
pop
notb
xor
inc
popf
dec
pop
pop
jo
sbb
xor
adc
jns
icebp
sbb
sub
loopne
jmp
push
fwait
dec
hlt
jb
mov
divb
sbb
in
mov
and
enter
enter
jge
push
cmc
mov
data16
mov
lods
push
lods
mov
repnz
cmp
ss
cmpsb
rcrb
sbb
cmp
ret
lea
mov
adc
into
cmpsb
hlt
mov
sub
push
jbe
inc
mov
fidivrl
adc
lods
popf
adc
test
xor
adc
add
mov
and
fmull
inc
xchg
insb
push
and
cmp
call
test
mov
or
imul
in
call
subl
ficompl
sub
iret
cld
ss
sbb
subb
ret
pop
adc
cmp
inc
mov
gs
mov
mov
jb
insb
xchg
sti
fisubs
sub
xor
cmpl
imul
mov
shlb
push
pop
sub
lret
stc
sub
inc
es
cmp
mov
andl
mov
sar
adc
ror
cmpsb
adc
jnp
mov
les
xlat
pusha
cmp
ljmp
mov
cmp
jnp
rsqrtps
push
call
lcall
stos
mov
les
movsl
aas
pop
jo
push
mov
push
jecxz
popa
cmp
jge
ja
push
or
inc
inc
sub
ljmp
fistpl
cmpsb
sti
and
gs
shl
jne
cmp
nop
fstl
lods
mov
pop
jno
dec
and
dec
add
mov
xchg
lock
clc
cmp
ds
addr16
xorb
cli
push
in
or
sti
inc
movsl
jmp
dec
fnsave
gs
movsb
in
push
sub
lcall
repz
mov
lahf
mov
adc
call
mov
std
into
sti
mov
sbb
xchg
out
in
into
sbb
fists
insb
gs
sbbl
inc
mov
lret
push
or
adc
or
cmpsb
je
dec
scas
or
sub
dec
test
test
sbb
call
push
mov
fcomps
or
dec
dec
leave
ja
les
lock
jae
dec
lods
sub
sbb
fwait
insl
pop
pop
pushf
add
jno
and
adc
pop
ja
adc
cld
or
imul
jge
fsubrp
and
ss
add
fdivrl
jle
iret
xchg
lock
enter
fisubl
cltd
xchg
or
add
sbb
sbb
cmp
mov
xchg
xor
jae
int3
inc
push
pop
pop
jbe
fs
sti
es
insb
lret
in
movsb
les
push
fistl
adc
sbb
out
in
push
sbb
add
lea
sub
jo
lods
and
add
ljmp
jge
je
jbe
test
cltd
pusha
ljmp
fisttpll
mov
lea
test
jno
test
lods
lret
mov
cld
and
jge
mov
jge
mov
and
fnstenv
xchg
pop
inc
dec
icebp
lock
leave
aam
cmp
fldl2e
mov
pop
add
mov
cmp
cmp
pop
shrb
jns
cmp
mov
aam
xor
or
lret
mov
or
xchg
xchg
test
js
jae
stos
fdivr
pop
pop
sahf
arpl
adc
push
in
enter
inc
movsl
ret
or
cs
jecxz
inc
mov
ret
and
push
call
mov
add
sbb
inc
pop
sub
pushf
leave
dec
scas
pop
jnp
test
adc
inc
dec
lds
les
sbbb
push
shll
cld
lahf
pop
or
xchg
dec
cmp
pop
sub
dec
mov
xchg
daa
sub
dec
mov
mov
std
nop
sbb
pop
jne
cmp
mov
lods
xchg
mov
iret
lock
jo,pt
popa
ret
dec
mov
jno
xchg
pop
jle
mov
outsb
pop
mov
mov
or
scas
std
pop
inc
fwait
mov
pop
xchg
and
ret
cmp
pop
adc
fbstp
add
insl
mov
jmp
dec
stos
add
hlt
adc
stc
jno
mov
jmp
cli
ds
mov
mov
mov
mov
icebp
pop
dec
js
sub
nop
imul
int3
xlat
out
mov
or
test
repnz
pop
pop
in
rorl
aas
and
mov
sub
inc
cmp
andl
and
fistps
pop
inc
sub
adc
outsb
nop
or
xor
aaa
mov
sub
out
cli
pusha
iret
xor
sti
pop
dec
inc
cltd
or
dec
sbb
and
fwait
xchg
dec
add
pop
push
xchg
cmp
cs
fistl
fstpl
sbb
dec
pushf
mov
sbb
add
and
data16
aad
mov
shrl
inc
call
ficoms
adc
mov
sbb
imul
add
mov
cmp
sub
repnz
inc
lahf
fwait
rorl
shll
adc
xchg
lcall
pop
shlb
hlt
jecxz
push
xchg
jl
dec
or
mov
mov
mov
aas
push
out
out
cltd
adc
pop
fcmovne
arpl
ret
faddp
and
in
fcompl
dec
out
imul
dec
or
push
popf
mov
testb
cmp
push
mov
push
pop
and
arpl
aaa
je
inc
xchg
sbb
lcall
ljmp
aas
sbb
das
arpl
sub
and
jns
add
sbb
hlt
addb
mov
sbb
fidivs
jecxz
pop
les
inc
jns
imul
je
clc
sub
jb
and
dec
das
xor
das
jecxz
fnsave
pop
push
lods
xor
pusha
cmp
adc
cmp
aaa
je
fldcw
in
filds
aam
xchg
in
dec
aas
fdivr
pop
mov
or
sbb
ss
jge
push
xchg
cmpsl
and
mov
shrl
ja
jns
inc
mov
call
cmp
jnp
or
and
fistpll
stos
sub
adc
test
es
mov
sbbl
mov
or
xor
cmc
rcll
xchg
push
ret
adc
cmc
dec
test
dec
pop
repz
adc
inc
sbb
mov
loope
mov
in
popf
clc
insl
push
stos
cwtl
sub
xchg
outsb
adc
outsb
sub
xchg
hlt
and
mov
mov
inc
xchg
dec
lar
arpl
jnp
sub
xor
xchg
aam
js
dec
inc
outsl
xchg
rclb
sahf
xchg
jp
pushf
xchg
test
flds
pop
ret
mov
pushf
xor
or
pop
int
adc
ret
popa
stos
mov
sub
imulb
js
int3
in
loop
fwait
out
push
mov
cmc
je
mov
stos
loopne
jno
arpl
call
and
in
dec
icebp
push
cwtl
sub
jl
or
inc
adc
add
sbbb
in
xchg
cs
and
gs
sbb
xor
in
pop
sbb
push
adc
shll
xor
cli
and
xchg
fldenv
imul
and
lds
sbb
jb
ret
jl
inc
inc
xor
inc
mov
dec
shll
cmpsb
lret
dec
rcr
dec
bnd
lcall
notl
subb
or
sub
fadd
jg
es
mov
sbbb
mov
push
push
jecxz
sbb
push
xchg
sbb
scas
arpl
outsb
or
scas
cmp
ret
in
out
mov
pop
pushf
jmp
mov
jbe
xchg
or
fs
add
pop
add
stos
jne
lock
stos
jp
sbb
sub
jecxz
popa
incb
adc
into
aam
cmp
cli
not
mov
outsl
sub
mov
sbb
mov
mov
pop
and
int3
arpl
pop
or
es
sbb
cwtl
stos
xchg
inc
pop
add
decb
out
iret
int
fsubrl
adc
sub
and
mov
leave
adc
adc
inc
stos
sbb
loop
push
jmp
cmpsb
inc
inc
outsl
sbb
mov
xor
loope
pop
and
xorl
or
divl
sub
dec
mov
xchg
and
les
test
flds
xchg
pop
push
jecxz
ljmp
lea
sub
push
ss
fwait
sbbb
and
add
subb
cmpsb
sub
fdivrs
lret
stos
test
inc
bound
cld
xor
lock
lahf
cmp
mov
sub
xor
iret
pop
xor
fcoms
mov
dec
or
lds
mov
and
add
dec
mov
cmp
mov
push
pop
mov
jns
fsts
push
cmp
sbb
ret
jno
stos
cltd
jo
mov
jne
pop
pop
lods
push
pop
sub
pop
sbb
cmp
push
cmc
cld
fcom
jge
adc
cmp
mov
jle
fsubl
mov
lcall
sbb
mov
adc
movsb
mov
cmp
fwait
jp
je
add
dec
and
push
push
rorl
rorl
mov
negb
ret
jmp
mov
stos
adc
and
push
aam
int3
jo
inc
dec
jns
stos
push
xor
insl
outsl
jne
and
or
or
adc
lods
test
pop
cmpsl
leave
or
sti
xor
mov
push
lds
pop
repz
lahf
mov
mov
inc
add
cli
cld
popaw
xchg
popa
xchg
cmp
pop
fmull
aaa
arpl
push
jnp
dec
jne
mov
pop
push
test
stos
inc
ret
mov
test
iret
jne
sbb
xchg
jge
push
aas
fstps
sbb
outsb
repnz
out
push
stc
test
mov
add
jae
pushf
push
xchg
pop
add
mov
ret
lods
sarb
push
or
and
loop
pop
and
ret
mov
xchg
loope
cmp
sahf
in
jle
out
cmc
out
xchg
outsb
mov
or
test
hlt
sarb
lret
push
jnp
cmp
lret
dec
xchg
mov
mov
or
test
mov
xor
pop
push
mov
or
out
cmp
jns
mov
cmp
mov
and
mov
jmp
xchg
scas
in
inc
dec
lret
xlat
push
push
ret
jp
sahf
fistpll
sub
push
jb
xor
inc
mov
loop
das
push
jb
and
cmp
fildll
xor
mov
dec
xorl
fsts
mov
mov
xor
mov
hlt
lea
fcomps
jle
sbb
icebp
popa
jmp
out
jae
xor
or
xchg
sbb
out
xchg
divb
fsubs
adc
or
mov
std
xor
ret
and
test
aas
cmp
test
cmc
test
out
insl
aaa
scas
pop
xor
orb
jmp
dec
jge
stos
test
and
lds
push
mov
movsb
ficomps
add
popa
or
jge
rorb
out
iret
fcom
dec
ljmp
jns
sbb
jno
adc
jb
pushf
mov
dec
lahf
push
push
push
and
inc
sbb
daa
lcall
daa
add
out
shlb
loopne
loope
fisttps
push
iret
xchg
adc
cwtl
stc
and
scas
aas
lret
pop
rolb
cmp
xchg
fsubs
xchg
daa
outsb
ljmp
outsl
push
add
or
and
popa
insl
ret
jge
je
push
xor
rcrb
xchg
add
mov
mov
inc
add
pop
jge
sahf
ret
std
jl
jl
jmp
sub
xor
sub
loop
and
pop
push
jns
mov
ret
sub
adc
movsl
mov
mov
mov
xchg
inc
imul
loopne
je
add
sub
adc
jle
bound
cmp
push
insl
xchg
cli
rclb
dec
insb
cmc
cwtl
adc
cmpsb
xorb
xor
mov
mov
jmp
xchg
push
add
lods
add
andl
sti
mov
js
aas
rolb
and
cmp
loopne
pushf
or
add
rcr
scas
sbb
ffreep
repnz
xor
movsb
push
into
jecxz
sub
cmp
jae
push
sbb
dec
dec
cmp
dec
inc
xchg
mov
ds
fcmovb
into
push
pop
jl
rcrb
jae
test
nop
mov
xchg
lcall
call
and
push
nop
imul
inc
sarl
mov
mov
or
mov
cmp
lret
xchg
roll
test
mov
and
fs
shll
ss
ret
mov
cmp
cmp
pop
rclb
test
xchg
cmpsl
add
inc
popf
inc
sbb
inc
mov
inc
nop
test
sub
cli
aad
or
and
or
outsb
xor
jle
popa
xchg
fldenv
push
inc
dec
out
sti
cmp
push
jno
jo
xchg
fs
gs
jmp
push
xchg
jnp
shrb
arpl
mov
xorl
cli
jae
inc
imul
cmp
or
xchg
sbb
fisttpl
sbb
add
ficomps
fsubrl
fdivrs
cmp
ss
addr16
jg
imul
push
jne
adc
addr16
repz
adc
out
andb
add
pop
inc
aas
ret
cli
stos
and
popf
pop
leave
lds
cmp
loope
jg
out
add
js
out
dec
lods
cmp
pop
cmc
dec
roll
aaa
stos
movsl
call
sbb
cmpsl
sbb
scas
push
cli
dec
std
sub
sahf
push
mov
jle
leave
cmpsb
push
mov
rcll
sbb
iret
sahf
mov
sub
and
out
je
push
call
jp
sub
or
push
xchg
sarl
pop
xchg
testl
mov
dec
mov
ja
or
mov
jp
mul
jp
push
test
inc
or
testl
xlat
xchg
pop
ja
mov
mov
dec
mov
jecxz
je
out
mov
fstps
pop
sbb
stos
pop
jge
loop
adc
call
fnsave
pushf
ret
stc
sub
xor
cmp
js
push
lock
mov
mov
mov
xor
sarb
mov
pop
adc
inc
xchg
movsb
cltd
rol
insl
out
movsl
movsl
dec
cmp
cs
std
fwait
ja
leave
and
sbb
sub
adc
repz
repnz
push
xor
cmc
sub
outsl
stc
push
cmp
jae
pop
jecxz
inc
repnz
mov
test
mov
call
jle
subl
push
jge
cmc
or
mov
cmp
shlb
adc
jmp
or
test
jae
popa
repz
pop
xrelease
mov
out
icebp
inc
add
sub
jnp
jle
inc
data16
aam
mov
mov
jnp
jg
xor
jo
mov
push
sbb
mov
mov
je
lahf
push
cmpsl
pop
rcll
xchg
data16
sub
push
or
mov
leave
adc
jmp
sbbb
sbb
movsb
inc
dec
dec
push
ja
mov
xlat
pop
decl
iret
lret
mov
ret
addl
imul
imul
jge
stc
in
push
mov
dec
cmp
lock
jmp
imul
imul
insl
push
shll
adc
jg
sub
sub
into
aam
inc
ss
fs
loop
movsb
jbe
adc
mov
mov
in
jnp
mov
test
fwait
push
or
push
mov
subb
jne
mov
in
push
test
push
jle
dec
imul
xchg
lret
xchg
pop
xchg
mull
sahf
or
stos
orl
aas
add
sbb
repz
mov
pop
sbb
push
loope
int3
or
les
insl
xchg
je
pushf
es
fcmovnbe
jmp
mov
insb
cmpsb
test
inc
popa
jne
push
enter
daa
jae
cmc
outsb
mov
lds
mov
sub
jae
dec
movsb
call
inc
rcrw
negb
mov
sbb
cmp
ja
out
lock
subb
mov
test
fmuls
ds
push
inc
sub
dec
out
cmc
and
scas
cld
imul
jnp
fucomip
push
mov
test
mov
aaa
mov
ffree
or
inc
enter
stc
jno
addr16
insl
cmp
mov
push
mov
sub
pusha
xchg
cmp
das
push
cmp
das
or
aam
pusha
stc
fimuls
lcall
and
mov
dec
scas
cmpsb
sbb
jno
inc
enter
nop
andb
dec
push
lret
or
loop
ret
lods
jp
ss
sbb
sbb
pop
mov
pop
cld
dec
cmp
xor
sub
cmpsl
bound
jmp
dec
dec
andl
nop
imul
add
aam
jns
popf
xchg
mov
js
inc
fwait
mov
xor
and
cld
xchg
mov
xchg
mov
out
mov
in
xor
jns
cmp
or
add
sub
or
inc
xor
and
fidivrs
or
pop
mov
pop
sub
loope
mov
dec
adc
cmp
xor
jl
cld
lahf
dec
sbb
or
outsb
adc
repz
test
aas
ds
dec
jl
pop
jnp
xchg
mov
das
pop
les
fildl
leave
and
push
sbb
sti
jns
push
into
hlt
inc
push
outsb
adcl
xchg
xorb
add
add
movsl
dec
lret
cmp
rorb
test
mull
jge
pop
xlat
pusha
pushf
push
xor
or
pop
cmpsb
inc
ds
or
in
pop
mov
jmp
popa
jnp
pop
mov
rolb
loopne
int
and
ret
cltd
jl
lods
lds
inc
cs
fistpll
and
adc
xchg
add
clc
mov
aam
mov
fisubs
subl
dec
mov
ds
fbstp
mov
aas
xor
pop
mov
leave
inc
imul
lahf
mov
mulb
pusha
ret
pop
pop
inc
or
lret
xchg
xor
and
arpl
dec
ljmp
push
stos
push
mov
dec
int
add
sbb
pop
aad
jmp
aad
cmp
sbb
mov
lea
push
int
push
in
enter
daa
mov
mov
dec
lret
jge
jae
lods
inc
jl
pusha
aas
cmpsb
sbb
adc
push
sbb
fists
mov
pop
in
les
add
xchg
jp
sbb
push
xchg
ds
or
mov
in
shl
imul
mov
sbb
test
and
dec
in
jnp
fstpl
ds
cmp
mov
push
ss
mov
fsubl
mov
mov
clc
sbb
xchg
jno
outsb
dec
movsl
and
xor
jge
lds
jbe
push
cmp
lods
cmp
dec
test
dec
mov
cwtl
jmp
adc
mov
mov
in
pop
jmp
arpl
jmp
ja
ret
in
inc
sub
test
dec
insl
dec
fadds
sahf
xchg
dec
ror
int3
mov
push
push
aam
sbb
mov
aam
or
test
ja
dec
xchg
std
lea
repnz
mov
hlt
lds
insl
nop
dec
rcl
fisttpll
xchg
adc
ljmp
add
in
out
adc
inc
in
cmp
in
rcl
mov
das
jmp
mov
fwait
call
pop
sub
lock
sti
push
repz
or
test
cli
adc
shl
xchg
sub
out
add
repnz
xor
xchg
cs
int
in
cmp
hlt
shll
or
enter
sub
std
stc
xchg
je
inc
enter
xchg
dec
xchg
dec
div
pop
jo
sbb
jne
mov
int
pop
call
out
movsl
insb
cmp
iret
aas
rcrb
enter
sarl
dec
pop
or
inc
jns
mov
shll
repz
mov
xchg
adc
mov
stos
mov
jmp
fisubs
jne
repz
and
idivb
stos
cmp
jg
lods
scas
inc
cmp
cmovo
test
sub
adc
mov
and
fistpll
dec
jp
xchg
sbb
add
es
cmp
out
into
pop
orl
mov
mov
pushf
push
and
xchg
push
cmp
jb
mov
cmpw
add
push
dec
xor
xchg
daa
leave
lods
call
bound
aam
mov
cmp
addr16
lods
pop
icebp
dec
cmpsl
xlat
add
stos
jl
jbe
pop
lea
xchg
mov
or
dec
enter
jo
jle
aam
shll
push
inc
mov
loope
jp
mov
icebp
nop
or
dec
pop
push
lock
mov
jne
cwtl
aas
sbb
xchg
cmp
rcrl
jge
mov
xchg
inc
jecxz
sub
lods
push
push
pop
imul
adc
add
pop
inc
repnz
sub
mulb
popa
rclb
out
fs
cmpsb
and
dec
insl
aas
lea
lods
aad
xchg
pop
push
cmp
insb
cli
ret
add
pop
cmp
or
int3
or
jp
jg
add
sub
push
adc
lret
mov
cmpsl
fistl
fstl
sbb
bound
or
mov
out
cs
push
lds
jae
fwait
cmp
inc
testl
adc
hlt
or
xor
push
cmp
hlt
lret
fadd
push
cmp
notl
test
push
mov
jg
dec
inc
jns
popa
mov
sub
xor
in
in
push
into
in
jl
std
mov
xor
push
add
cmpsb
cld
pop
lock
adc
jno
or
mov
mov
lea
lahf
cmp
pushf
loop
lea
mov
testb
pop
cli
ja
pusha
jg
je
test
add
repz
dec
faddl
sub
dec
jne
inc
jge
xchg
mov
sbb
stos
test
jae
add
movsb
push
sub
clc
inc
add
jecxz
sub
push
or
sub
fcmove
push
inc
bound
sarl
xchg
jne
adc
and
in
dec
mov
pop
mov
psrlq
dec
cmp
fimuls
xchg
jo
add
mov
out
andb
dec
sub
xor
dec
mov
shr
xor
stc
negb
fistl
mov
xchg
jg
ss
enter
jmp
rol
dec
fildl
lea
repz
fdivrl
lcall
out
adc
pmaxub
jb
or
pop
fisubrs
movsl
out
imul
add
or
jmp
mov
xchg
aam
test
sahf
outsl
adc
cli
adc
pusha
push
clc
xor
jbe
sahf
cmpsb
and
aam
pop
add
dec
fs
lret
and
and
fs
imulw
xor
icebp
je
cld
xchg
push
outsb
dec
repz
jp
push
out
pop
cmp
xor
repz
jbe
shrl
sub
stc
xchg
dec
or
jb
mov
xor
pusha
sbb
push
push
xchg
fwait
jae
add
jge
aam
jno
shll
outsl
mov
push
inc
jne
adc
adc
stos
lcall
add
pop
popa
inc
or
and
xor
cmp
mov
aam
orb
xchg
fildl
mov
push
lret
xchg
pop
dec
sbb
iret
hlt
fs
pop
std
imul
add
push
out
adc
subl
dec
movsl
xchg
mov
dec
sahf
add
jne
push
rorb
mov
sub
int3
sbb
cwtl
xor
out
pop
popf
in
mov
mov
push
sbb
dec
xchg
mov
adc
fimuls
es
repz
loop
lret
into
mov
add
movsl
push
mov
xor
imul
fcmovnbe
mov
out
pop
cli
dec
dec
jo
loopne
shlb
test
cmpsl
das
outsl
fs
sub
and
out
cld
lcall
mov
ljmp
xchg
xchg
jnp
xor
sub
outsb
inc
in
mov
mov
bound
sbb
pop
sub
cmp
sbb
cmpsb
push
add
jae
mov
stos
loope
cmc
aam
outsb
jo
xor
inc
je
sahf
push
icebp
mov
idiv
inc
xchg
push
repnz
rorb
orb
add
inc
mov
and
jbe
xor
pop
loope
jp
mov
mov
inc
or
sar
insb
out
test
push
cmp
sti
call
aas
add
repnz
repnz
mov
or
cmp
loopne
in
movsl
ret
ss
xchg
inc
pusha
fnstsw
adc
mov
hlt
lahf
hlt
xchg
mov
xchg
pop
lock
pop
lcall
jno
add
pop
mov
mov
sahf
and
dec
popf
jno
fisttpll
push
mov
mov
mov
scas
cltd
lods
mov
ss
sbb
lods
mov
lret
mov
sbb
cmc
negl
xchg
scas
inc
and
inc
fwait
jle
sub
and
loope
imul
xchg
push
adc
xorb
adc
sub
xor
leave
jbe
cld
add
lock
dec
shlb
cmpsb
fldcw
mov
scas
rcll
or
repz
cli
mov
mov
sub
pop
dec
push
cmp
xor
xchg
fsubrs
scas
dec
mov
xor
out
mov
jno
in
sub
mov
mov
push
adc
clc
or
ret
fs
cmp
js
add
or
cmp
mov
sbb
leave
bound
sub
cmc
dec
xacquire
adc
add
les
loop
or
add
push
dec
leave
push
aam
sub
jge
or
dec
int
enter
rolb
or
das
shrl
ljmp
mov
fisubl
std
mov
mov
mov
imull
mov
fcompp
sbb
mov
mov
mov
inc
rcll
xor
sbb
mov
sub
mov
mov
sbb
hlt
mov
outsl
jl
fsubs
int3
jmp
pop
jae
xchg
pop
mov
adc
xor
or
xor
xchg
cmp
xchg
push
add
xchg
cmpsb
fisttpl
push
es
repnz
lahf
jne
ss
idivl
cs
ss
sub
cld
pop
push
add
or
inc
cmc
xor
inc
arpl
bnd
add
scas
push
xchg
ja
sub
xchg
movsb
dec
idivl
mov
subb
popl
pusha
adc
xor
mov
fstpl
pop
pop
sub
pusha
aaa
dec
fstl
or
imul
jb
out
daa
ficompl
repnz
stc
hlt
js
cli
mov
fwait
ds
imul
lcall
ja
and
mov
push
push
shr
es
inc
clc
mov
mov
sbb
and
push
adc
fldl
jp
xchg
lret
pop
pop
ret
xchg
mov
shrl
in
mov
pop
xor
lock
adc
sbb
test
imul
and
mov
sbb
jno
push
sahf
mov
lods
pop
mov
call
in
sbbb
and
add
cwtl
bound
jl
or
cmpsb
pop
daa
inc
mov
subl
sub
test
push
ret
cmp
test
shlb
or
mov
test
sbb
jl
mov
rorl
xchg
jo
jp
je
push
dec
arpl
scas
add
add
shr
dec
jne
rorb
gs
pop
scas
cwtl
mov
loop
add
cmc
xchg
mov
jle
fistps
movsl
fdivl
insl
rorl
inc
fldt
inc
ljmp
dec
mov
inc
ljmp
push
dec
jns
pushf
imul
les
mov
sbb
dec
gs
aam
jg
idivl
mov
js
cmp
dec
sub
sbb
and
aas
sbb
aaa
xchg
dec
cmp
xchg
stos
cmp
pop
xchg
inc
out
iret
test
and
xchg
in
cmpsl
mov
lods
js
adc
arpl
mov
sarl
cmp
inc
sub
xchg
nop
jle
cmpsb
sub
add
ror
jbe
jns
xorb
test
jmp
movsl
pop
inc
inc
sub
mov
cld
dec
jb
fwait
bound
jno
jle
adc
out
movsb
clc
dec
inc
xchg
push
and
xor
jge
sbb
or
outsb
pop
xor
xor
hlt
adc
fcompl
xor
lods
fneni(8087
cmpl
mov
imul
adc
mov
mov
push
mov
or
pusha
cmp
mov
pushf
sbb
lds
enter
lahf
sbb
stc
lret
test
or
imul
xlat
lea
and
push
fwait
in
push
pop
jge
fsubl
fcomip
dec
test
push
aas
je
and
les
sahf
scas
push
xor
jbe
add
inc
stc
inc
mov
sbb
movlps
mov
push
xchg
xchg
loop
inc
ret
push
lea
insb
stos
cli
mov
cwtl
enter
xchg
cmp
push
or
negl
or
sbb
pop
xor
inc
xchg
jl
movsb
test
dec
pop
ja
and
sbb
xor
outsb
and
jge
test
aam
add
dec
and
inc
jge
push
xchg
movl
sbb
mov
mov
orl
jns
mov
sub
push
clc
add
jecxz
fstp
sub
mov
lods
fbstp
cmp
jne
das
inc
pop
jno
pop
cmp
sub
ss
sar
xchg
aam
pushw
mov
or
add
jns
nop
fildll
cwtl
adc
lock
xlat
xorl
bnd
scas
xchg
inc
mov
and
pop
frstor
and
scas
fcomip
arpl
cmp
dec
leave
xchg
xchg
je
sti
jne
cmpsb
adc
movsb
cmp
add
jne
in
movq
insb
xchg
imul
mov
pop
or
pusha
cmpsb
sbb
pop
adc
xor
in
jnp
mov
cmp
push
fs
femms
mov
mov
jecxz
push
mov
fmul
out
xor
pushf
ret
dec
fdivr
stos
dec
mov
rolb
decl
jge
inc
pop
cmp
je
xchg
insl
pop
mov
lret
mov
jmp
pop
stos
test
or
jp
out
push
mov
add
sub
scas
and
push
inc
or
roll
scas
loopne
adc
aaa
mov
jno
jno
mov
and
mov
add
popf
lods
mov
mov
xor
cmp
push
xor
cmc
daa
mov
mov
test
mov
mov
enter
in
nop
pusha
push
cmpl
je
nop
pop
je
sarl
imul
xlat
out
repz
in
mov
pop
xchg
outsb
pop
fs
imulb
in
pop
sti
shl
mov
xchg
dec
mov
mov
xchg
icebp
sub
jmp
test
ljmp
loopne
inc
sbb
ja
jle
into
mov
in
outsb
in
mov
inc
aas
aad
and
jge
int3
les
imul
es
outsb
loopne
jbe
pop
jb
jp
mov
jo
pop
sub
adc
mov
inc
add
jb
or
dec
adc
cmc
or
and
fs
imul
sub
orb
push
sub
repz
sbb
rcl
or
pop
dec
aad
sbbl
add
mov
xchg
xchg
jge
lock
sub
mov
es
xchg
sub
cmp
or
fists
push
outsl
ja
fisttpl
jl
sub
pop
mov
stos
repz
outsb
notb
pop
cli
imul
roll
xchg
push
mov
mov
jns
fimuls
mov
cltd
clc
pop
loop
in
add
mov
lahf
add
push
xchg
mov
xor
dec
push
pop
cmp
jb
lock
xchg
add
xor
and
aaa
pop
hlt
scas
add
mov
mov
sbb
sub
imul
xor
push
pop
fucomi
add
jns
into
cmp
jge
mov
cld
jbe
loope
cmp
jle
test
push
mov
add
cli
loopne
pop
loope
in
pop
xor
pop
jge
sbb
adc
cwtl
inc
inc
xchg
inc
ds
or
jecxz
pop
bound
bnd
hlt
push
loopne
in
enter
iret
xor
lods
scas
inc
xchg
test
xor
sahf
sub
gs
das
fdivs
add
mov
dec
ret
add
inc
cmp
xchg
or
test
push
xchg
cmp
pop
notl
nop
into
movsl
in
insb
jle
aaa
pop
shl
pop
xor
testl
add
cmp
inc
pop
sbb
mov
mov
ds
xchg
dec
scas
andl
mov
out
mov
das
fstpt
stc
movups
into
test
ret
and
jp
enter
mov
cmpsb
int3
int3
mov
or
push
mov
cmp
mov
insb
lahf
pop
dec
iret
add
adcb
in
fs
mov
arpl
sbb
xchg
push
xor
mov
adc
mov
pusha
outsl
cltd
ss
lahf
stos
enter
ja
dec
adcb
sahf
jo
flds
test
movsb
adc
jecxz
dec
outsl
repnz
cwtl
es
cmp
sti
mov
mov
movsb
inc
mov
ja
sub
xchg
jle
iret
xchg
es
push
pusha
jno
test
mov
mov
cltd
mulb
push
ficomps
call
push
enter
movsb
adc
xchg
repz
inc
arpl
fs
mov
mov
cmpsb
mov
lahf
aam
ja
xchg
pop
das
jmp
bound
mov
adcl
popf
jno
mov
movsb
sbb
or
mov
inc
cmp
sub
aam
pop
outsb
loopne
sbb
scas
test
daa
lret
xchg
clc
loop
add
aas
aaa
xor
outsb
pop
push
push
or
aam
ret
add
dec
mov
es
mov
mov
add
inc
push
lock
mov
jnp
out
aad
jo
pop
inc
mov
lea
push
xchg
pop
dec
hlt
fwait
adc
scas
xlat
mov
and
fs
popf
push
and
add
fbstp
inc
dec
pop
mov
test
int
popf
cmp
dec
stc
mov
rorl
and
adc
or
clc
fidivs
cmp
addr16
loope
adc
xor
or
and
xchg
ja
sub
sti
test
js
xor
jbe
and
aam
sbb
add
mov
rclb
xorb
call
gs
xchg
xor
in
inc
push
aad
stos
dec
mov
pop
pusha
lods
sbb
or
pop
mov
cmpsl
bound
cli
fnstcw
cmp
pop
cmp
add
dec
inc
lock
or
push
sub
cmp
inc
lahf
dec
xlat
aad
dec
adc
aaa
lock
dec
les
es
js
int
ljmp
outsl
lds
add
repz
rcr
loopne
enter
out
pop
pop
addr16
mov
push
gs
and
out
add
out
sbb
sbb
push
popa
sbb
sahf
or
pop
and
pop
adc
loope
pop
je
jmp
aad
setns
add
adc
in
test
insl
xlat
sti
inc
stos
ja
outsl
outsb
test
xchg
mov
cmc
je
mov
push
push
sbb
outsb
shlb
movsb
pop
dec
and
or
dec
mov
cltd
or
sbb
sub
inc
addr16
jnp
fwait
xchg
jmp
xor
cld
leave
push
or
xchg
ljmp
pop
lods
fldt
inc
imul
ds
mov
jp
out
ja
arpl
inc
mov
inc
aam
and
ljmp
xchg
insl
xchg
nop
cmp
push
jge
xor
add
shl
push
ljmp
sub
lock
outsb
push
mov
bswap
stc
out
les
and
push
cld
push
daa
xchg
dec
cld
mov
dec
cltd
stc
mov
and
insb
xor
popa
data16
clc
mov
enter
jne
mov
mov
repz
ret
xchg
mov
or
rol
jb
fisttpll
mov
aad
mov
out
insl
pop
cmp
mov
ret
xor
or
rcll
xchg
call
shll
push
xchg
sbb
and
bound
add
pop
sbb
sbb
ret
inc
shrl
out
sar
repz
jno
pop
cvttps2pi
lcall
clc
sbb
subb
jbe
lret
repnz
lds
std
scas
js
lret
std
inc
xor
daa
into
imul
dec
cmp
test
ljmp
cmp
subl
daa
mov
jbe
insb
cmp
cmpl
xchg
push
fistl
add
mov
push
fmuls
data16
sbb
insl
outsb
je
cmc
inc
adc
shl
imul
idivl
inc
or
xchg
xor
add
out
call
insl
push
cltd
sub
lret
pop
cs
fisttpl
imul
cmpsb
enter
xchg
in
dec
cmpl
fcmovnu
popa
sti
or
sub
in
add
lods
xor
es
push
inc
xor
dec
and
dec
sbb
mov
clc
fcoms
xchg
sub
sbb
mov
jg
fcmove
popa
jl
jg
sbb
mov
aam
push
gs
xlat
lcall
shl
pop
cmp
stc
adc
ljmp
cmpsl
pop
aam
pushf
in
pop
aad
retw
iret
xchg
sub
pop
push
inc
lds
push
clc
mov
out
lods
mov
pop
cltd
dec
int
andb
cmp
sub
hlt
xor
movsb
dec
push
insl
test
jb
lds
sti
sbb
jnp
aad
lock
mov
inc
idivl
iret
sub
cmpsb
and
aam
push
sub
mov
push
cltd
cmp
push
pop
sbb
mov
test
mov
cmp
inc
cmc
divl
xchg
dec
sbb
mov
rcll
lret
je
push
jb
and
in
cmp
lock
dec
mov
cmp
dec
arpl
inc
push
dec
in
shrb
add
xor
pop
push
outsl
pop
mov
mov
adc
sub
jb
stos
and
rol
ret
aas
fwait
xchg
push
out
out
sti
and
adc
mov
int
out
rcrl
jg
jb
xchg
bound
jae
mov
xlat
insl
pop
adc
mov
push
sub
push
cwtl
mov
stc
cmp
lock
sbb
lock
pop
data16
push
mov
mov
cwtl
sub
aaa
jl
aaa
aas
push
push
ret
pop
hlt
enter
sub
cs
cmp
pop
test
in
pop
jo
push
jp
xchg
inc
cmpsl
mov
and
pushf
in
bound
les
mov
or
mov
xchg
jbe
and
inc
add
sahf
insl
mov
or
mov
push
or
ljmp
stos
sub
loop
ficomps
cmp
mov
xchg
lods
push
pop
and
push
pop
ret
jnp
aad
fisubl
sbb
add
cmc
cmpsl
mov
xchg
add
enter
jp
mov
icebp
cmp
mov
xor
mov
jg
scas
push
and
pop
lods
mov
data16
ficomps
popf
lock
cld
xor
ss
stos
xlat
fdivl
lods
fwait
sti
xor
mov
pop
rcl
mov
arpl
shll
out
mov
push
notb
xor
xchg
lret
mov
inc
int
imul
aas
mov
mov
push
sub
aaa
cmp
dec
adc
insl
stos
pop
fnstenv
cmp
xchg
inc
lock
jle
mov
hlt
push
loopne
into
in
outsb
jl
xlat
sbb
movsl
insl
cmc
dec
cli
inc
mov
or
push
test
fisttpl
jne
iret
mov
inc
jno
dec
push
gs
push
jne
cmp
subb
or
inc
nop
data16
xorb
cld
shlb
xchg
pop
pop
jb
adc
insb
mov
sub
test
pop
hlt
subl
mov
or
jge
jl
xor
in
jge
xchg
out
xchg
dec
popf
sub
push
ret
loopne
rcll
int3
xchg
push
hlt
adc
in
call
lds
inc
sub
xor
bound
or
xor
addr16
jg
xchg
and
sub
cmpsl
or
nop
inc
vunpckhpd
aam
sub
sbb
jp
lods
and
dec
inc
sbb
push
cmp
bound
xchg
lds
cmp
inc
lods
les
sub
xchg
mov
ds
ret
frstor
sub
repz
mov
outsb
lret
add
and
mov
movsl
popa
loopne
in
jp
sbb
push
sti
jae
mov
add
mov
push
mov
xchg
or
pop
out
loope
andb
xor
cli
leave
loop
je
sbb
inc
ss
fsts
decl
into
pop
xchg
test
push
sbbb
pop
sahf
cmpsl
loope
pop
cli
sahf
sbb
stc
test
mov
in
cmpsb
out
outsl
add
fs
pushf
mov
xchg
mov
push
add
icebp
cli
cmpsl
cmp
in
aas
xchg
add
test
fsubl
in
push
xlat
jle
mov
add
xor
dec
aas
jge
xchg
lods
enter
rol
js
adc
mov
ja
repnz
sahf
nop
cmpsb
sub
pop
sub
pop
popf
scas
mov
outsb
push
or
inc
insl
loop
add
ljmp
aam
dec
mov
out
dec
ja
sub
jmp
jb
push
cwtl
adc
add
fnstcw
jl
xchg
push
lcall
std
cmp
mov
sub
mov
xchg
mov
aas
out
sahf
jne
fpatan
jne
mov
fnsave
xor
mull
lret
push
add
lahf
sub
movsl
pop
pop
xchg
iret
xchg
insl
iret
cld
notl
movsl
gs
out
enter
inc
pop
xor
push
jl
push
out
cmp
adc
sbb
enter
lret
sbb
mov
imul
sti
out
cmp
push
punpcklwd
test
sbb
jmp
insb
cmp
daa
add
sbb
int
inc
jle
and
jne
push
xor
mov
hlt
add
xor
sbb
decb
or
enter
rcl
lret
sub
lahf
jge
mov
adc
in
adc
dec
inc
sbb
mov
pop
mov
mov
mov
adc
xchg
or
jbe
out
loope
mov
data16
jp
jae
jle
push
scas
test
es
mov
or
cmp
adcl
mov
ds
and
and
insb
lds
push
test
push
pop
aaa
cmpsb
scas
mov
icebp
cmpsl
scas
fcmovnbe
std
and
inc
int3
mov
jg,pn
push
pop
mov
les
or
pop
inc
lea
inc
es
repnz
or
nop
inc
sub
cwtl
aad
push
cmc
test
cld
mov
mov
pop
lcall
dec
stos
fdivrl
movsl
add
mov
lods
outsb
adc
lods
sbb
loop
popa
jb
adc
sbb
fidivl
push
jmp
and
sub
cs
jmp
out
aad
or
bound
cltd
shlb
adc
push
das
push
sbb
jnp
addr16
push
or
pop
pusha
fsubs
push
add
fnstsw
scas
sub
mov
adc
icebp
out
es
aas
pop
int3
add
mov
inc
and
js
pop
stos
arpl
aam
add
addr16
mov
fimull
out
jl
add
outsl
loop
or
add
clc
and
shrl
insl
mov
adc
inc
dec
xor
imul
pop
popa
push
and
imul
jle
call
in
or
inc
xchg
or
outsl
test
push
mov
stc
inc
shll
lock
mov
sub
cld
fadd
adc
xor
mov
insb
and
cs
push
mov
cmpsb
sbb
sub
pop
push
popa
xchg
add
test
out
push
push
fimuls
mov
or
sub
xor
lds
lea
or
xchg
xchg
adc
je
dec
cmp
cs
insl
clc
shll
fdivs
int3
lret
mov
xchg
jbe
movsl
in
add
mov
fs
inc
aad
in
gs
rol
cmp
inc
xor
insb
xchg
cli
cmovae
loopne
inc
jg
mov
cmp
aas
lods
or
adc
inc
jmp
mov
mov
add
ja
std
gs
idivl
dec
lahf
sub
cmp
test
bound
psadbw
pop
dec
nop
mov
add
cmp
sti
call
movsb
inc
fwait
xchg
push
xchg
inc
or
mov
insb
sahf
add
mov
test
jp
push
ljmp
inc
xchg
inc
sub
fidivrl
mov
jbe
fisubs
movsl
loop
dec
clc
and
pop
and
push
rorl
iret
jae
jg
and
add
into
pop
xchg
arpl
leave
lret
push
mov
into
mov
lock
mov
in
adc
or
imul
mov
push
scas
inc
and
add
loop
xchg
mov
out
xchg
sub
test
fistps
or
std
outsl
push
lcall
iret
push
mov
pop
pop
cmp
iret
mov
stos
pop
cld
add
dec
inc
push
lock
cltd
outsb
jp
mov
shrl
mov
jge
or
add
dec
pop
test
sbb
jne
notl
nop
mov
das
push
ficompl
push
ja
adcb
mov
add
int3
mov
ret
lret
push
in
add
cmp
std
sti
repz
jge
push
popf
cld
in
leave
lret
cmpsl
iret
cmp
sar
xchg
nop
cmp
ret
inc
int
xor
pop
pusha
orl
cwtl
add
push
or
jp
xlat
add
mov
je
sti
rclb
shl
clc
or
adc
out
push
sbb
xor
sub
out
push
mov
dec
int
jae
fmuls
cmp
or
xchg
cmpb
mov
jl
xchg
push
orl
xchg
sbb
jae
mov
testb
mov
std
iret
adc
jo
sbb
jecxz
les
mov
shrl
mov
xchg
mov
data16
sti
mov
aad
dec
cltd
lret
lods
sbb
icebp
push
aas
jno
out
repnz
mov
lahf
mov
xor
imull
fdivs
mov
movsl
mov
test
sub
adc
xchg
int
mov
push
aaa
cmp
int
add
aas
jg
or
mov
pop
pop
jne
cltd
jp
lcall
ds
imul
cmp
sub
dec
mov
mov
mov
push
bound
out
ss
cmpsl
push
mov
pop
cmp
cmpl
mov
insb
rcrb
cmpsl
insb
push
jo
fmul
es
stos
pop
jle
mov
pcmpeqb
sub
dec
xor
pop
sub
bound
push
adc
sub
fnstcw
mov
outsb
lahf
andnps
aam
cmp
adc
and
mov
adc
cmp
mov
enter
sub
mov
mov
push
pop
loop
push
jp
jb
in
xlat
aam
dec
enter
jmp
pop
xor
jmp
jecxz
lret
xor
std
pop
shll
fistl
push
fdivr
jl
xchg
shrl
cltd
out
mov
scas
pop
add
jge
jae
out
lea
cmp
push
push
or
sti
dec
popa
jb
mov
dec
das
leave
push
aam
sbb
pop
loop
add
in
adc
fldt
je
mov
push
push
mov
mov
mov
mov
sub
mov
lock
outsb
mov
mov
inc
jg
sbb
or
imul
mov
sti
ret
adc
sbbl
mov
movb
mov
clc
and
outsl
pop
jmp
push
jg
xlat
mov
lret
add
mov
imul
clc
repz
mov
lahf
push
int3
cs
push
pop
push
sub
aaa
pop
inc
xchg
jne
lahf
into
xchg
movsl
cmp
add
out
adc
xchg
mov
jmp
test
stc
into
leave
adc
push
idivb
sbb
inc
dec
loopne
jmp
mov
and
test
cs
hlt
pusha
cmp
sub
clc
scas
insb
cmp
cli
mov
inc
fwait
pop
push
xchg
lea
cmp
movb
cmp
and
mov
popa
outsb
bnd
lea
stos
lock
fstps
xor
cmp
lret
shlb
test
add
into
xor
rolb
jmp
sub
add
xor
xchg
jne
add
int
pop
or
sbb
xchg
data16
and
inc
mov
mov
stc
adc
cltd
icebp
lods
pop
mov
int
nop
cltd
or
sbb
dec
cmpsl
or
int
ss
fsts
mov
out
and
cmp
add
dec
stc
cmp
sub
pusha
jg
add
popa
xchg
push
lret
fidivrl
jg
lods
sbb
lock
lods
push
pop
out
mov
adc
or
inc
or
scas
sub
push
xor
sahf
mov
insl
js
es
stc
jmp
out
and
out
cld
push
stc
frstor
dec
xchg
mov
jb
dec
aaa
sbb
sti
int3
push
scas
cli
movsb
and
sub
and
scas
mov
jae
arpl
mov
cmp
adc
cmp
pop
xor
push
pop
push
fldt
dec
xchg
psubb
jp
loop
cmc
out
mov
pcmpeqb
subl
mov
aaa
pop
add
mov
pop
jge
mov
xchg
inc
jg
test
xor
mov
insb
pop
out
pop
stos
mov
jge
push
add
movsl
inc
pop
adc
dec
arpl
into
das
ret
addl
push
mov
pusha
mov
pop
adc
popa
xchg
mov
add
mov
scas
cmp
cltd
sahf
pusha
pop
loopne
outsl
lahf
fcoml
cmovle
shll
or
push
cmp
lods
jg
xchg
xorb
test
inc
cltd
into
push
out
dec
mov
in
push
div
lods
mov
mov
pop
out
into
fldcw
inc
cli
xlat
das
inc
gs
mov
dec
incl
xchg
sub
xchg
adc
jb
fwait
push
dec
mov
mov
sbb
pop
jnp
xor
repz
mov
fiadds
cmp
mov
ja
out
repz
adc
fsubrl
add
lods
fmulp
outsl
xor
idivl
outsb
sahf
add
xor
push
fsub
scas
mov
daa
xchg
inc
push
push
mov
pop
jg
add
and
mov
push
pop
mov
sub
pop
push
cmpl
and
clc
inc
push
mov
push
and
stc
xor
adc
test
lds
and
jmp
adc
xchg
pop
orl
xor
sub
cmp
add
rolb
ss
rcll
and
push
mov
or
adc
sbb
lret
jns
fstps
stos
repz
mov
inc
pop
ljmp
jle
and
out
outsl
sti
sbb
repz
test
pop
test
cmpb
loop
addr16
js
and
imul
mov
fwait
or
popa
mov
lcall
add
add
fnstenv
cwtl
out
repnz
xor
pop
fdivl
mov
cmp
out
dec
xchg
gs
mov
mov
les
xor
mov
dec
in
js
sbb
loopne
js
cs
mov
les
sahf
and
iret
push
das
loopne
xlat
outsb
ret
sub
pop
arpl
inc
std
lret
cmp
ret
jecxz
fs
and
cmp
inc
sbb
andb
jl
imul
int
ret
mov
into
sub
popf
xchg
cmp
movsl
shl
inc
xchg
cwtl
fldl
xor
pop
out
mov
cmp
rorb
inc
ret
xchg
cmp
test
cli
data16
add
addr16
inc
push
cmp
push
adc
mov
pop
adc
int3
js
les
push
or
add
rclb
int
push
add
lret
add
mov
iret
popf
out
push
in
sbb
xchg
nop
cmpb
popf
or
je
push
inc
fstps
push
out
or
pop
mov
insl
gs
add
in
push
mov
and
or
stos
int3
xchg
cmp
dec
mov
push
add
mov
mov
sbb
xchg
add
frstor
mov
sti
cmp
pop
sub
lds
mov
aas
dec
pop
call
fdivrl
in
jns
test
int3
ret
and
xor
repz
shlb
fisttpll
or
adc
gs
sar
add
xor
fldln2
aad
outsb
lret
inc
pop
sbb
cmpsl
inc
cmpl
frstor
and
xchg
lods
mov
mov
jns
mov
mov
sub
movl
fbld
mov
aad
sbb
movsb
nop
sbb
adc
cmp
loope
adc
lret
inc
sbb
das
jo
jne
hlt
jne
add
cmp
pusha
test
fwait
sub
cmp
adc
mov
in
mov
popa
fldlg2
into
add
and
pop
aam
mov
push
les
scas
dec
incb
xor
cmp
testl
cltd
stos
and
test
in
or
mov
out
mov
movsb
ret
sub
aaa
dec
xor
lods
fcom
and
iret
xchg
sub
push
adc
out
dec
push
scas
mov
mov
push
jbe
adc
lcall
sbb
dec
and
jmp
push
aad
ss
pop
mov
or
ds
stos
lcall
inc
mov
hlt
cli
test
sbb
hlt
mov
sub
jecxz
in
xchg
push
add
mov
xchg
mov
or
test
adc
inc
shlb
fs
xor
mov
push
rcll
mov
push
cmp
or
fsubr
adc
mov
mov
int3
pop
xchg
push
arpl
pusha
push
jno
ljmp
jno
sbb
cmpsb
jae
xchg
sbbl
stos
les
jge
clc
sbb
dec
aam
xchg
jle
into
pushf
out
adc
sub
stos
nop
addr16
shl
js
inc
in
pop
sti
lods
sub
addb
xchg
and
nop
fldt
out
xchg
inc
cmp
mov
mov
xchg
sbb
dec
mov
mov
push
xor
add
andb
inc
lods
lea
xor
add
and
push
xchg
leave
pop
jge
pop
add
mov
sbb
filds
pop
sub
addr16
or
pop
sti
hlt
xlat
pop
inc
repz
mov
loopne
in
sti
cmp
adc
fscale
cmp
lock
lret
addr16
mov
jl
mov
cmpsl
jl
arpl
sarb
lahf
nop
shrl
pop
pause
shr
push
stos
jae
or
rorb
xor
mov
shrl
leave
cmp
cmp
rol
pop
icebp
mov
mov
sub
adc
jne
and
dec
xchg
bound
fisttpll
insl
mov
cmpsl
in
mov
sbb
xchg
out
sbb
mov
movsl
inc
pop
ffree
mov
push
jge,pt
add
sti
jnp
imul
adc
cmp
lret
pop
addr16
icebp
loopne
ljmp
movl
add
cmpsb
push
sub
or
and
mov
shlb
les
push
or
add
push
sbb
and
gs
out
push
inc
negl
dec
mov
fs
and
dec
and
push
and
out
xchg
andb
push
xchg
sbb
jp
cmpl
jp
ljmp
mov
aas
scas
lret
cmpb
add
mov
xor
push
or
pop
adc
xchg
jae
cltd
ret
sbb
data16
dec
and
pop
outsl
jmp
xchg
fcompl
xor
lock
sahf
mov
and
cmp
xchg
shr
dec
push
and
test
or
xchg
dec
pop
cld
lods
mov
xchg
jne
std
cld
jns
xchg
mov
mov
movsb
mov
movsl
push
xchg
xor
jg
xchg
jge
and
xor
popl
dec
movl
or
arpl
addr16
mov
enter
pop
mov
fmull
dec
roll
lds
ljmp
pusha
stos
test
cmp
pop
les
clc
leave
cwtl
ror
dec
jns
push
dec
xor
jne
aam
mov
ljmp
xor
stos
add
or
scas
in
out
or
push
test
sbb
mov
aam
lds
and
das
lret
lods
mov
dec
pop
ret
xchg
and
rcrl
xchg
xlat
jle
hlt
shlb
test
dec
or
andb
shrb
push
lcall
loope
cld
imul
dec
rolb
xchg
jmp
pop
sbb
adc
add
sbb
cli
repz
enter
pop
add
mov
fs
or
pop
cmp
ljmp
fcomps
mov
outsl
sub
imull
pop
or
mov
or
sbb
mov
aad
push
dec
call
aam
cmp
cmp
push
outsl
jb
pop
mov
inc
jbe
inc
and
lds
ljmp
sub
aas
mov
test
outsl
cmp
add
mov
mov
xchg
inc
lds
pop
sub
std
outsl
in
inc
xchg
js
outsl
sarb
in
sub
nop
xor
sbb
in
lods
jle
imul
fildl
and
mov
popa
out
jae
je
xor
jl
mov
dec
mov
lret
lds
sbb
loopne
and
dec
xlat
aad
or
cmc
mov
in
rcrl
movsl
pop
fidivs
pusha
and
or
push
push
pop
cwtl
and
dec
clc
and
xchg
push
adc
or
divl
orb
pop
dec
pop
push
icebp
jbe
mov
scas
cmp
xor
cmp
pushaw
dec
mov
test
sbb
ret
lods
xorb
push
sar
dec
xchg
adc
add
insb
push
dec
sbb
xchg
addr16
fidivl
clc
cmp
sarl
mov
xchg
jge
sbb
pop
or
mull
xchg
mov
dec
pushf
popa
and
inc
es
sbb
stos
popa
adc
rolb
nop
pop
add
cltd
pop
movsl
test
pop
push
cmpsb
into
add
pop
adc
loopne
dec
adc
std
mul
or
jno
push
data16
sbb
inc
jmp
mov
imul
mov
rcr
jle
fisubl
dec
mulb
xchg
jmp
jb
into
mov
and
adc
insb
jne
rcrl
xorb
jge
lret
subl
in
adc
fidivrs
and
and
push
adc
fsubr
and
push
bound
scas
lock
mov
and
scas
lods
jo
and
add
inc
push
xchg
bound
fnstcw
int
jb
mov
mov
adc
stos
mov
xchg
mov
fimuls
and
mov
xchg
jbe
xchg
test
sti
push
sbb
jl
xor
add
cmp
lds
insl
in
add
sub
stos
daa
dec
outsl
cmpsl
push
les
push
add
ss
aad
mov
int
idiv
gs
mov
push
and
inc
loopne
pop
pusha
lea
jnp
mov
push
lods
mov
mov
sbb
cmp
sub
rcrl
mov
push
add
std
inc
addr16
xchg
fsubl
into
xchg
add
test
dec
sub
jae
iret
lret
cs
add
call
insb
movsb
mov
fstl
dec
cltd
stos
aam
xchg
iret
cmp
mov
scas
testb
ds
ds
and
inc
mov
inc
repz
mov
scas
stc
cli
cld
xor
sbbl
inc
jo
mov
test
dec
mov
or
sbb
fmuls
push
inc
jge
and
daa
cmpsl
fwait
lahf
pop
popf
xor
cli
ret
sub
addr16
or
es
lock
adc
dec
xchg
arpl
mov
xor
out
xchg
jns
push
jae
out
rcrb
lret
fldl2t
xor
test
pusha
ret
lods
dec
js
pop
pop
cmp
jb
call
std
ds
push
mov
inc
dec
ljmp
dec
sti
push
out
jle
call
nop
outsl
mov
jae
xor
mov
cmp
add
in
rcll
pop
sarl
and
adc
cmc
pop
mov
out
test
mov
jbe
add
and
div
inc
daa
jne
je
int3
test
cmp
testl
fsubrs
or
push
jb
loope
clc
sbbw
push
loope
xor
popf
dec
mov
push
je
fisubl
or
sub
inc
push
xchg
call
lods
inc
repz
mov
in
ja
jmp
push
in
inc
pop
test
sbb
dec
mov
vunpckhps
dec
jg
stos
inc
push
leave
sub
cli
mov
movsl
out
ret
add
add
jbe
jl
inc
or
lret
xlat
gs
xor
adc
movsb
fldcw
mov
jno
push
sbb
scas
dec
and
jne
ror
data16
dec
sub
push
fwait
cmp
data16
pop
loop
mov
in
repz
test
fwait
in
cmp
lcall
insl
xchg
xchg
scas
mov
jnp
pop
xchg
scas
sbb
sbbb
pop
and
xlat
sbb
dec
sbb
ss
orl
mov
bound
scas
cmp
adc
ret
adc
inc
inc
sahf
xor
xor
adc
jne
sub
push
rclb
mov
jge
je
mov
cmpsl
add
add
in
mov
or
xchg
mov
xor
icebp
xchg
adc
outsb
stos
add
or
sub
out
ss
push
out
ss
jl
xchg
push
dec
dec
lret
imul
mov
adc
out
jns
add
pop
fmuls
scas
loopne
ja
push
xchg
mov
std
mov
sbb
dec
or
out
test
call
add
mov
bound
addr16
js
fsubrl
lods
pop
pop
subl
cmp
mov
bound
mov
push
push
nop
repnz
push
cli
and
das
pusha
test
stos
sbb
push
fidivrl
mov
rorl
mov
aas
sbb
xor
cmc
pop
out
insl
sbb
dec
lods
loop
mov
push
dec
cmp
or
xchg
adc
aas
sarb
out
jnp
fcmovb
int3
mov
mov
movsb
jb
mov
mov
pop
iret
ljmp
je
popf
cs
pop
xchg
mov
je
iret
leave
jle
popf
mov
dec
cs
pusha
xor
fwait
sarb
inc
in
es
jp
mov
jo
mov
dec
cli
in
mov
push
imul
adc
and
sub
jno
mov
lods
jne
dec
inc
mov
gs
addb
adc
inc
push
push
sub
leave
xor
push
jmp
jle
je
lcall
leave
lahf
rclb
add
xabort
xchg
rorb
inc
mov
push
dec
pushf
pusha
adc
jo
fistpl
icebp
mov
shll
pop
jle
jne
mov
in
nop
mov
pushf
mov
xchg
and
sbb
dec
enter
stc
push
fisubs
sbb
int
cltd
popa
xor
push
mov
mov
in
sbb
sbb
out
loopne
or
test
jl
aaa
std
push
push
repnz
or
xor
dec
mov
mov
out
cmpsb
scas
pop
pop
mov
cmp
pop
mov
cltd
lea
mov
rclb
add
xchg
mov
cs
push
add
sar
xor
xchg
sbb
gs
sub
jnp
popf
cmpsl
push
push
scas
jb
push
or
push
mov
scas
jbe
hlt
cs
cltd
leave
dec
mov
shr
mov
inc
mov
cmpsl
add
push
dec
mov
jecxz
mov
jno
subb
mov
iret
sbb
xchg
mov
pop
call
xor
mov
inc
push
fadd
std
mov
aas
std
cmp
pop
cmp
mov
cmp
out
mov
mov
pop
dec
repnz
adc
lock
scas
xchg
pop
stc
stc
ds
adc
cltd
out
fldl
daa
mov
cmp
mov
incb
es
fsubr
mov
mov
loop
or
or
test
or
and
mov
pop
push
or
mov
mov
insb
dec
mov
pop
jp
rolb
inc
jg
or
stos
push
bound
fsubrl
push
lock
fbld
psubsw
leave
xchg
in
pop
push
mov
cmpb
adc
fadds
js
jmp
xchg
dec
ljmp
mov
mov
mov
sub
dec
mov
pop
inc
sbb
mov
sbb
lret
fs
lods
sbb
mov
jl
rcl
pushf
imul
lret
jmp
pushf
std
dec
sub
pop
cmp
dec
and
mov
xchg
es
push
lods
popa
and
ljmp
pop
ljmp
sub
add
sub
inc
cmpsl
jno
dec
or
sbb
or
sahf
ds
cltd
repnz
push
inc
enter
or
ret
jno
sbb
mov
push
mov
sbb
or
leave
lods
sub
std
add
xchg
adc
ljmp
sub
xor
pop
into
adcl
push
jmp
inc
frstor
dec
and
pop
mov
jmp
sbb
or
sbb
fmuls
neg
push
mov
jb
sub
push
mov
lock
sub
fisttpll
inc
outsl
scas
cmpsb
add
pop
dec
mov
lea
xchg
dec
popf
and
out
jbe
les
adc
movsb
mov
clc
sub
mov
je
mov
ljmp
mov
pusha
shll
in
ret
loop
inc
in
stc
test
and
clc
push
jge
inc
mov
fsts
loope
fsubs
fs
adc
pop
mov
les
bextr
inc
pop
push
mov
pop
cmpb
adc
sub
js
leave
mov
and
xor
ret
push
pop
in
fs
mov
push
add
sub
mov
aas
mov
dec
arpl
insb
mov
cwtl
stos
repz
inc
mov
jb
outsb
push
loop
jne
inc
fistps
xchg
out
cmc
xchg
loopne
mov
xchg
xchg
cmp
leave
adc
mov
xchg
cmp
cmc
xchg
js
inc
outsl
cli
adc
pushf
push
stos
dec
adc
adc
popf
jae
movsb
cmp
pop
mov
ss
mov
cmpsl
in
outsb
das
mov
and
ret
adcb
test
int
xchg
aas
push
mov
scas
cltd
bound
jo
pop
dec
mov
adc
leave
sbb
mov
jmp
or
popf
or
xor
adc
xor
mov
in
arpl
je
out
out
pop
lock
insl
pop
dec
lock
sbb
mov
shlb
sub
gs
dec
xor
daa
mov
loopne
push
pop
int
stos
adc
call
faddl
cmc
pop
push
cmp
lock
fcoml
push
out
decb
iret
and
sub
jbe
imul
inc
cs
movsb
add
sub
je
pop
xor
mov
add
nop
and
dec
ds
stc
ret
divl
fistl
mov
push
loop
lods
xor
push
in
pusha
mov
xchg
in
mov
test
cmpsb
sub
lahf
mov
mov
lret
scas
push
add
mov
jne
xchg
dec
and
shll
xorb
shll
addl
fcomip
pop
ret
std
iret
mov
adc
rcll
mov
mov
pop
mov
movsb
cmc
in
cltd
fisubrl
pop
ljmp
dec
xchg
ja
shr
cmpsl
jmp
jno
jge
std
jg
aad
mov
pushf
inc
insl
repnz
fidivrs
push
sub
in
stos
fwait
mov
inc
repz
mov
lahf
inc
ljmp
jmp
rcll
or
jb
das
sbb
add
call
aaa
cld
cmp
inc
adc
jne
dec
push
pop
andb
mov
mov
gs
popa
orl
popf
pop
mov
dec
rcrl
gs
xor
inc
add
mov
mov
les
mov
xor
scas
cmp
mov
out
leave
mov
push
jge
js
mov
ficomps
call
sub
inc
clc
mov
mov
adc
dec
jo
sbb
mov
es
mov
sbb
insl
adc
stos
shl
iret
pop
and
pop
les
sbb
mov
jecxz
andb
scas
add
pop
fldenv
bound
ret
inc
push
jno
sub
orb
mov
test
arpl
mov
jle
jle
and
je
pusha
enter
adc
in
out
sahf
or
sbb
and
hlt
stc
ror
inc
dec
adc
icebp
mov
gs
adc
push
add
pop
sbb
pop
jmp
sub
sub
nop
jmp
sub
adc
jg
xor
pop
dec
cs
add
cmpsl
imul
incl
pop
cwtl
enter
fisttpl
dec
idivl
imulb
imul
js
push
push
mov
sub
ds
or
inc
or
add
push
enter
fildl
xor
add
and
fcoms
fcomip
mov
stos
out
dec
mov
sbb
pushf
xor
roll
fs
cmp
gs
and
lods
test
in
das
add
cmp
movsl
test
std
inc
cmpsb
cmpsb
or
mov
pop
mov
leave
push
fadds
jo
xlat
inc
xchg
cmc
popa
jle
pop
cmp
xor
ss
mov
mov
js
pop
pop
into
insb
xchg
cmp
mov
cmp
jo
push
push
fnstenv
adc
cmp
xor
sbb
rol
test
push
testl
xchg
pop
push
push
cmp
mov
je
jae
lcall
popa
jns
test
hlt
dec
aad
addr16
clc
outsl
adc
xchg
cld
addr16
lea
insl
imul
adc
in
ljmp
adc
arpl
add
pop
testl
test
aam
out
inc
cmp
sbb
jle
pop
iret
cltd
push
fnsave
out
pop
fmuls
sahf
outsl
dec
stos
inc
push
add
aas
fldenv
adc
inc
push
inc
clc
in
jle
lea
cltd
cmpl
mov
pop
xchg
mov
hlt
jno
mov
popf
jp
mov
jg
mov
std
push
add
testb
ljmp
movb
cmpsl
mov
push
iret
loop
pop
shll
cmc
sub
in
jl
push
push
jno
pop
jmp
insb
idivl
jne
jns
pushf
dec
push
cwtl
xor
jne
push
je
sub
xor
sbb
stos
push
dec
jno
jge
dec
out
aas
jno
ret
sbb
push
orb
repnz
pop
ret
inc
pop
loope
xor
pusha
mov
mov
jecxz
push
push
xchg
and
mov
jno
pop
xor
imul
lods
mov
loopne
jecxz
dec
pop
loop
sub
jne
or
popf
fdivs
xor
add
aad
mov
scas
or
adc
and
outsb
shlb
test
test
insl
mov
pop
push
ja
adc
outsb
dec
and
add
scas
jecxz
jno
in
inc
xor
jb
ret
mov
mov
mov
cli
mov
cmp
or
xchg
add
push
xor
jl
insb
out
mov
adc
rol
push
and
dec
das
lods
mov
mov
test
push
add
lcall
js
xor
movsb
jecxz
jae
flds
fwait
mov
push
jle
dec
sbb
xchg
stos
jge
imul
popf
mov
mov
jo
mov
mov
cmp
roll
jge
cltd
add
das
or
daa
push
mov
cmp
lock
adc
mov
push
xchg
inc
cld
cmc
dec
fsubl
lret
outsb
inc
mov
das
popf
inc
inc
add
mov
aad
dec
sti
aam
jo
lods
insb
mov
fcompl
enter
push
adc
in
bound
enter
fildl
push
push
stos
mov
cwtl
or
mov
dec
mov
push
mov
pop
repnz
test
push
jbe
clc
cld
cmp
adc
arpl
push
pop
cmp
mov
push
sub
push
adc
ror
dec
sub
ret
sahf
in
movsl
add
rolb
stc
push
icebp
mov
shll
pop
and
lahf
or
sbb
pop
sbb
hlt
push
jecxz
push
xor
notl
jo
sub
cmp
and
jbe
insb
scas
in
inc
dec
enter
xor
mov
cmovp
in
cmp
cmp
xchg
roll
jo
cmpsl
cmp
sbb
push
or
cmp
sub
mov
lfs
lods
nop
push
aam
cmp
daa
idiv
cmp
mov
aad
adc
aaa
rorb
pop
inc
call
pop
sahf
xchg
pop
mov
add
push
mov
mov
fistl
lea
in
test
xor
adc
loop
push
dec
ret
add
movsb
repz
scas
push
pop
sldt
add
scas
insb
jbe
jb
jp
rorb
outsb
fistpl
and
mov
stc
hlt
jo
gs
leave
sbb
push
dec
push
xor
outsb
mov
push
push
stos
mull
iret
popa
ja
mov
adc
popa
scas
rorb
aad
pop
pop
xor
imul
pop
xchg
cs
in
scas
inc
mov
mov
out
test
outsl
out
into
subb
ja
loopne
dec
inc
sarb
mov
pop
dec
inc
xchg
testl
inc
dec
aas
nop
inc
adc
lahf
clc
jnp
cli
pop
jg
pop
cmp
dec
inc
test
xchg
aaa
scas
fnstenv
push
lret
cmp
ret
ss
jg
ja
js
xchg
sbb
mov
sbbl
push
cltd
adc
int3
xchg
call
out
mov
cmp
xor
xlat
push
push
int
xor
sbb
aad
xchg
cmc
jl
xor
out
jns
push
icebp
fwait
dec
jl
sbb
ret
inc
jbe
sbb
dec
xlat
jnp
cltd
push
popa
sbb
fsubrs
lds
dec
aam
mov
fdivrs
add
pop
addb
push
mov
xor
dec
nop
frstor
mov
clc
cmc
mov
imul
mov
dec
call
mov
shrl
imul
jp
fwait
shlb
fmuls
xchg
inc
ja
sub
jnp
mov
sbbl
pop
mov
out
jge
and
add
testb
fs
cltd
cmp
pop
or
mov
inc
popa
mov
pop
inc
inc
xchg
jno
iret
dec
sbb
fstpl
and
rcl
aam
dec
adc
scas
cltd
int3
ficompl
lret
mov
inc
add
xchg
lock
dec
xchg
shr
shll
adc
outsb
mov
mov
sub
pop
mov
push
daa
not
aaa
out
pop
and
pop
dec
push
mov
xchg
inc
jae
xchg
icebp
cmp
mov
pop
pushl
cmp
fisubl
sub
xor
jbe
imul
adc
inc
and
cli
lods
and
outsl
leave
xchg
sti
adc
mov
inc
jge
into
inc
xchg
inc
out
adc
jnp
movb
mov
mov
out
cmpsl
sub
mov
fwait
jg
pop
lds
loope
imul
mov
and
popa
lods
daa
rcll
push
arpl
push
shrl
loope
push
mov
or
inc
fadds
pop
ret
sub
or
sahf
lahf
mov
xor
outsb
test
shlb
lods
mov
loope
inc
je
and
sub
cmp
insb
mov
inc
mov
imul
dec
mov
sub
sbb
mov
inc
lea
sub
popf
mov
fs
mov
push
sahf
roll
inc
out
push
pop
nop
cld
pop
shlb
fwait
movsb
subb
pusha
inc
push
outsl
push
cwtl
int
out
sub
lock
les
adc
fcom
xor
and
test
data16
sub
pop
fwait
pop
or
in
icebp
call
or
sub
lods
ret
sub
push
lea
xor
jmp
push
cmc
xlat
stc
or
out
out
leave
int3
sbbl
call
clc
dec
cmp
iret
test
fwait
or
iret
add
sub
jge
dec
mov
xchg
sub
sbb
and
or
dec
lds
int
movsl
or
xchg
clc
repnz
inc
mov
loop
pop
add
inc
xor
mov
adc
jge
mov
in
or
inc
and
dec
test
xlat
xchg
hlt
inc
scas
xor
mov
roll
adc
add
addr16
adc
mov
imul
sbb
mov
stos
or
fidivrs
jmp
adc
out
lahf
test
jmp
shlb
pop
pop
push
pop
sahf
jle
lods
in
dec
clc
sub
arpl
mov
sub
rcl
inc
test
test
push
xchg
es
sub
add
jecxz
jnp
and
imul
out
xchg
fisttpll
out
mov
jl
xor
lods
ds
inc
add
adc
mov
jl
add
push
adc
lea
inc
cmp
je
out
adc
jp
sub
pusha
incb
xchg
movsl
dec
push
pushf
imul
es
add
sbb
notl
or
jmp
sahf
lock
ds
xchg
jg,pn
es
daa
pop
loope,pt
out
xor
lock
or
jle
adc
jmp
and
pushf
mov
mov
mov
das
jnp
repz
cltd
jmp
xorb
xor
xchg
inc
push
jne
fs
dec
jl
icebp
push
dec
and
leave
xor
repnz
mov
insb
xchg
xlat
loopne
push
mov
add
loopne
out
add
inc
push
xchg
sbb
sbb
dec
sub
mov
sbb
cmp
test
adc
hlt
lods
hlt
xchg
out
push
sub
or
mov
test
push
inc
andl
pusha
stc
gs
mov
dec
scas
or
daa
pop
mov
jge
add
loope
fcomps
cmp
adc
int
test
mov
cwtl
jecxz
mov
stos
jno
pushf
and
mov
fistpll
test
pop
adc
xchg
sbb
jno
adc
pop
push
xor
mov
test
dec
cmp
ficomps
pushf
or
arpl
sub
lock
jmp
or
adc
nop
jge
aad
push
jp
mov
xlat
ss
mov
std
mov
in
sub
cmc
fisttps
mov
and
mov
hlt
sbb
loopne
aaa
leave
jnp
xor
in
push
or
popa
scas
add
imul
xchg
xchg
and
es
xchg
adc
sbb
pusha
aam
addr16
lret
pop
imul
push
stos
cli
xor
in
das
mov
gs
xor
push
jb
addr16
repz
inc
jnp
xor
iret
xchg
aaa
rolb
and
sbb
mov
inc
sbb
imul
hlt
jle
outsl
fisubrl
jbe
mov
cmp
cltd
mov
loope
mov
add
xchg
int3
or
adc
cltd
ss
push
movsl
sbb
sbb
mov
fcomps
lods
test
pop
mov
or
cli
push
scas
in
cmp
push
or
xor
decb
lahf
adc
aas
sub
and
movsl
sub
test
inc
sub
adc
mov
add
or
push
push
sub
dec
lock
call
popa
jae
inc
loope
jp
mov
dec
mov
fidivl
cli
insl
popf
and
pop
fisttpl
iret
std
imul
movsb
xor
xchg
cli
test
test
inc
js
ds
rep
xorl
fldt
fisttpll
mov
cli
fwait
jecxz
jp
dec
icebp
sub
test
sbb
pop
int3
jns
call
jno
cwtl
je
fs
mov
adc
fisubl
call
insb
fcomip
mov
push
sbb
lea
daa
arpl
and
scas
into
and
decl
sbb
jp
mov
arpl
push
sub
leave
xchg
mov
idivb
out
ljmp
arpl
sub
xchg
leave
dec
xchg
push
xchg
xor
xor
xchg
mov
insl
outsl
cli
xor
outsb
fistl
xor
repnz
fldl
lahf
xor
push
ss
int
pop
dec
mov
xor
cld
jb
loop
in
xchg
das
aad
push
or
leave
scas
call
test
pusha
cs
mov
cmp
xor
xor
ljmp
xchg
add
leave
outsl
lods
shrb
jle
mov
mov
adc
add
sarl
loop
pop
je
in
fdivrl
js
cs
mov
dec
insl
jns
lret
dec
in
jge
jp
add
jmp
repnz
fstpt
adc
ret
mov
mov
lidtl
pop
sbb
gs
jle
xchg
push
cmpsb
xor
insb
insb
or
sub
lea
out
push
test
sub
repnz
mov
jb
mov
fcmovne
push
or
sub
jne
sbb
mov
mov
cmp
les
add
sbb
repz
icebp
pop
or
mov
mov
fwait
ret
dec
pop
fstpl
mov
pushf
jno
fs
sbb
sub
jbe
pop
add
cwtl
mov
int
mov
mov
testl
add
imul
test
daa
mov
sbb
fildl
data16
push
ror
sbb
shrb
or
push
repnz
imul
daa
into
add
lret
ja
push
pop
aaa
aad
add
cmpsl
jb
sti
adc
icebp
and
stc
dec
jb
insb
xchg
jmp
jbe
call
hlt
dec
roll
inc
fsubrl
cmp
mov
cmp
out
into
test
mov
test
clc
scas
fdivrs
push
push
xchg
cmc
or
mov
cmp
shlb
leave
lret
stc
pop
sub
push
push
stos
jmp
dec
mov
es
pop
jnp
or
fdivs
test
xchg
mov
ret
out
sub
jbe
call
loop
mov
fisubrs
cmp
mov
jg,pt
pop
push
cmp
cmp
push
lret
fs
js
jecxz
hlt
inc
movzbl
in
out
or
or
push
add
dec
aad
popf
cs
jg
lahf
out
div
in
dec
mov
fsts
mov
sub
inc
js
jnp
fisubl
mov
add
cmp
sub
dec
mov
shll
cmp
mull
les
ljmp
push
cltd
in
mov
lret
cltd
inc
popa
inc
fildll
inc
clc
add
test
jmp
sahf
push
lret
or
lods
push
imul
cld
stc
divb
sub
xchg
mov
fidivrl
in
fdivrl
and
push
das
add
mov
lret
wbinvd
jo
push
repz
sarb
sbbb
repnz
mov
loop
je
ficomps
mov
xchg
mov
pushf
pop
mov
test
shll
movl
adc
cmp
pop
xor
out
and
mov
pop
in
lods
add
inc
enter
add
in
adc
stos
into
aam
in
mov
jnp
pop
shlb
jge
shll
push
xor
out
add
scas
call
dec
xor
loopne
int3
cmpb
ret
mov
push
cld
roll
popl
mov
nop
dec
shrl
xor
mov
jno
test
call
fsubrp
push
test
push
rorl
and
imul
je
nop
repnz
out
sarl
fs
inc
push
dec
loopne
pop
pop
mov
outsb
scas
inc
inc
mov
lock
outsl
cmpsl
sbb
jno
addr16
and
test
xor
push
jne
mov
jne
lret
ret
dec
push
lret
mov
xchg
in
jmp
popf
inc
jb
pop
fsubrl
adc
stc
push
push
rcl
enter
dec
pop
pop
add
push
xlat
lcall
jno
mov
filds
enter
mov
out
orl
mov
sub
and
pop
push
adc
mov
mov
leave
xor
sub
sbb
es
push
out
sbb
imul
ret
adc
dec
fcmovu
gs
je
std
push
push
sub
outsl
mov
test
loopne
inc
push
pop
hlt
lret
es
lds
sub
outsb
mov
std
mov
cmpsb
test
pop
jae
push
adc
test
and
repnz
push
in
mov
mov
pop
test
pop
cltd
xlat
mov
daa
inc
xchg
jno
insl
aaa
icebp
pinsrw
cmpsb
mov
jo
fs
sbb
fimull
sbbl
mov
cld
insl
in
mov
xor
and
add
bound
nop
filds
push
imul
inc
in
sub
xlat
push
and
jg
leave
lea
mov
out
jp
je
xchg
mov
inc
dec
clc
in
adcb
iret
sbb
and
jge
iret
pop
push
push
mov
push
and
sub
aam
cmc
sbb
or
das
lds
adc
arpl
test
and
mov
loope
or
jge
mov
clc
scas
cwtl
mov
repz
in
sbb
ret
bound
xor
sbbl
push
fsubs
jge
inc
rcrb
push
int
shlb
sbb
or
fildll
pop
jecxz
push
daa
out
mov
mov
inc
xchg
add
mov
rcrb
ds
dec
cmpsb
out
xchg
jp,pt
test
jg
add
in
mov
icebp
add
int3
sub
mov
dec
mov
sbb
and
inc
arpl
or
mov
in
cmpsb
xchg
jge
fs
add
ds
sbb
dec
pop
adc
xor
xchg
int
lds
jno
fstpt
lock
xchg
lret
inc
insl
pop
sub
push
popa
mov
xchg
ja
fisubs
pop
rcrl
sbb
fsts
negl
dec
xor
xor
add
rclb
xor
fsubrl
xchg
and
lds
mov
incb
icebp
inc
loope
cmpsl
das
mov
addr16
cmc
fdivp
xchg
ss
pop
aas
jle
mov
imul
sub
cmpsb
dec
sahf
daa
pop
xor
or
jne
imul
loope
repnz
aam
ljmp
loopne
push
shlb
add
bound
push
xchg
add
adc
fwait
xchg
cwtl
hlt
and
xchg
fiadds
int
mov
mov
adc
mov
sarb
dec
jp
mov
cld
push
test
out
scas
test
cli
rolb
pop
rdtsc
and
sbb
vsqrtsd
cmp
jae
sahf
mov
movsl
xchg
sbbl
cmc
mov
cmp
insl
xlat
lfs
aas
and
test
cmp
scas
xor
mov
push
and
mov
or
lret
outsl
lods
inc
insl
mov
data16
xor
dec
inc
jno
push
pop
test
push
fisubrs
fucomp
mov
sub
ret
lods
push
mov
lret
ret
or
sub
sbb
lahf
jbe,pt
add
into
or
dec
sysenter
cld
xlat
ret
jge
mov
jbe
ret
push
pop
jae
aad
out
pop
incl
sub
or
pushf
lods
rcrb
mov
jbe
jne
and
stc
and
or
or
sub
stos
xor
sub
push
and
push
and
add
cmp
xor
das
mov
mov
cmpsl
adc
cmp
mov
jnp
roll
loop
lea
stos
sti
stos
xlat
popa
xchg
ja
rorb
ret
pop
sub
jno
dec
cmp
repnz
imul
or
imulb
adc
or
sbb
out
and
jmp
idivb
push
orl
mov
xchg
sub
cli
fcoms
inc
cs
sub
popa
jmp
repz
ret
or
cmp
repz
mov
mov
pop
stc
jmp
das
sbb
in
xor
out
loope
xchg
test
xorl
inc
into
enter
jmp
repnz
loop
adc
repz
xor
xor
lods
jb
in
int3
xchg
das
ficoms
test
pop
imul
sbb
pop
psrlq
jae
movsl
push
lcall
mov
orl
cmp
cmp
cmp
and
inc
push
rorb
and
insl
aas
pusha
js
adc
jnp
mov
inc
je
or
sbb
xor
dec
movsb
daa
mov
aam
xchg
lret
inc
sbb
jecxz
mov
into
lahf
add
das
test
and
faddl
sbb
ficoms
fcomps
sbb
xchg
xchg
inc
adc
mov
outsl
add
fistpl
push
mov
fsubl
popa
test
sti
sbb
test
icebp
outsb
test
lods
jmp
pop
test
jmp
sub
push
mov
dec
fimuls
pop
or
jecxz
xchg
push
in
mov
pusha
shlb
test
inc
add
push
mov
enter
ljmp
and
or
mov
stos
add
lcall
mov
enter
sti
psrld
adcl
cld
out
add
sub
adc
aas
ss
icebp
mov
cwtl
adc
lret
inc
mov
mov
popa
jle
sbb
clc
and
pushf
lds
jne
sbb
mov
int3
dec
fistl
lock
push
ds
mov
inc
push
xchg
es
mov
and
sti
enter
mov
push
jl
imul
mov
int
subl
out
pop
sub
sbb
jbe
ret
fistps
std
mov
jmp
push
add
scas
mov
das
lods
push
in
adc
in
mov
xchg
hlt
pop
out
pop
popf
mov
test
sbb
outsl
xor
mov
pop
sub
push
mov
cmp
dec
push
cmp
loop
cmpsb
mov
dec
lret
jge
xor
in
jecxz
mov
push
scas
sbb
ja
lods
and
stos
jns
mov
inc
mov
sti
mov
jge
filds
popf
add
mov
or
insb
xor
mov
add
jne
mov
jbe
xchg
xchg
outsb
add
jne
push
fwait
add
add
mov
jno
lret
jnp
mov
lds
or
outsb
pushf
cli
mov
sbb
iret
cmp
mov
aaa
push
push
lea
lds
mulb
inc
mov
fmulp
stc
cltd
lret
cwtl
sti
mov
popf
test
fimuls
mov
mov
and
add
mov
in
cli
lret
popf
cld
xor
out
movsl
mov
mov
stos
push
add
cmp
inc
xchg
push
popl
push
sarb
mov
cmp
jb
pop
std
cmp
sub
mov
pop
enter
leave
sti
push
lret
and
cmpl
iret
pop
clc
mov
fs
mov
push
mov
adc
mov
jl
les
mov
repz
adc
and
scas
mov
je
and
xchg
dec
test
lods
loop
mov
push
add
and
cltd
ds
pop
rcrb
sub
mov
pop
inc
cmp
sub
or
xorb
int
dec
shrb
sahf
mov
lods
and
adc
or
sub
js
rolb
shll
test
adc
cli
push
cmc
and
jl
lock
add
mov
mov
dec
adc
xchg
addb
or
inc
test
cs
inc
or
das
roll
clc
or
pop
xor
in
push
test
adc
mov
sbb
mov
or
cmp
dec
loopne
int
pop
jge
add
push
les
mov
cs
pop
adc
aad
popa
movsw
das
cmp
pusha
ret
pop
cs
lcall
add
push
xchg
xchg
xchg
je
aam
cmp
jbe
lods
inc
or
shrl
cmp
imul
icebp
jno
lea
adc
jl
arpl
dec
fdivl
lods
xchg
jae
xchg
lods
mov
xchg
mov
xor
sbbb
sbb
adc
fmuls
inc
sub
pop
lods
cld
lods
adc
xchg
lods
and
cmp
cmp
jmp
cltd
es
xor
pop
mov
jl
sbb
lret
fcomp
xchg
inc
leave
popf
out
pop
mov
ljmp
jmp
inc
aas
jo
ljmp
and
lock
cmp
cltd
xor
hlt
icebp
jmp
pop
fwait
inc
mov
stc
aaa
adc
inc
mov
xchg
fildl
loop
out
mov
cmp
shll
xor
mov
js
popf
dec
ja
test
jl
mov
icebp
push
bound
push
inc
fs
and
int
roll
sarl
dec
push
add
aas
addr16
inc
addr16
push
pop
cmpsb
or
add
push
addb
repnz
pop
repz
stos
cmp
stc
xchg
lock
dec
enter
jno
rcl
pusha
inc
dec
aam
std
add
mov
mov
xchg
or
mov
mov
jp
inc
je
jmp
jg
push
jmp
sub
fdiv
setle
aad
jle
and
mov
test
lahf
cli
mov
imul
lret
out
dec
in
cltd
sub
cmc
add
mov
dec
or
repz
mov
cmpsl
xor
and
sub
jbe
stos
jge
dec
stos
mov
iret
xchg
in
sahf
cmp
stos
lods
pop
arpl
push
and
popa
sbb
out
add
mov
sbb
int
fwait
adcl
lret
leave
add
cltd
rcrl
inc
jge
mov
mov
push
jl
xor
jge
jo
outsl
rorb
push
xchg
sbb
xchg
lods
ret
sbb
push
cmp
test
jne
into
pop
jns
sub
sar
or
not
aad
jbe
pushf
fiaddl
imul
fcmovbe
mov
cmpsb
mov
inc
push
jae
mov
push
subl
xor
mov
sarb
mov
xor
cltd
inc
lods
dec
hlt
xor
push
dec
fsubrl
push
sbb
jb
rcll
call
daa
movl
lahf
mov
mov
sbb
add
call
outsl
test
push
andb
scas
or
jne
enter
push
insl
sub
add
xchg
ds
push
sar
adc
stos
add
pop
rorb
test
mov
adc
rcrb
popf
in
flds
mov
and
xchg
aam
and
xor
jno
xorl
xor
cmp
lock
cltd
xchg
cltd
cmpsl
jae
mov
sub
in
mov
cld
mov
pop
xchg
loope
loopne
sub
xor
push
dec
bound
lret
in
fsubp
adc
leave
jns
cmp
jo
jp
arpl
ret
jg
lret
rcrb
mov
jp
scas
sub
mov
inc
sbb
push
pop
ja
ficoml
mov
rcll
dec
int3
in
and
ret
out
mov
add
mov
outsb
nop
out
dec
shll
mov
mov
cmp
sub
aad
stc
adc
std
sub
dec
inc
cmp
sub
adc
pushf
and
mov
dec
sarl
iret
or
pop
sub
ds
scas
fidivl
sub
dec
pop
sti
sti
jecxz
sub
stos
pop
push
insl
js,pt
inc
pop
or
aas
xchg
je
ret
lds
xchg
mov
out
sub
sub
jnp
sub
push
popf
adc
ljmp
divl
pop
imul
sti
test
icebp
loope
aad
icebp
mov
mov
rorl
jne
clc
mov
xor
nop
cmc
ret
lock
cmp
xor
inc
ja
mov
cmpsl
jge
xor
xchg
add
test
dec
int3
jge
jae
jnp
add
ss
sbb
lock
aaa
mov
adc
into
popa
testb
push
sbb
adc
fsubrl
aas
arpl
xlat
shrl
jmp
je
add
lcall
jg
outsb
jns
xchg
jg
pop
test
inc
fcoml
jecxz
sub
dec
mov
fsubrp
mov
jg
pop
shlb
ja
dec
ss
clc
jnp
gs
pop
push
popa
rcrl
ret
pop
pop
fimuls
rcl
cvtps2pi
fdivrs
popl
addr16
loop
ret
sbb
cmpl
pop
movsb
push
out
out
ljmp
mov
push
imul
push
gs
movsb
mov
or
sbb
push
mov
pop
sub
sbb
xor
test
pop
jle
mov
test
int3
push
and
mov
mov
sbb
xchg
test
sbb
add
pop
pop
xchg
add
int
pop
xor
lret
xor
fldl
shrl
sub
fsubrl
into
add
and
mov
pop
stos
enter
enter
and
sti
or
iret
mov
cmp
movsb
ficomps
jmp
jb
mov
flds
sbb
test
sbb
lcall
jmp
mov
imul
nop
cmp
add
into
in
xlat
push
scas
pop
inc
inc
and
in
out
leave
out
repnz
in
inc
dec
outsb
lcall
stos
xchg
push
jns
inc
pop
inc
int
or
inc
aas
sub
test
jae
outsl
insl
fmull
scas
xor
imul
das
out
roll
imul
sti
xchg
push
mov
mov
xlat
dec
dec
mov
pop
lods
and
mov
inc
je
push
imul
lahf
push
xchg
and
xlat
popa
mov
data16
es
out
xor
sub
or
lret
sub
mov
pop
push
add
xchg
fmulp
cltd
shr
push
fcomip
out
mov
aad
mov
pusha
jno
test
lret
adc
fnstsw
push
xchg
movsl
dec
cmp
jno
loopne
repz
mov
adc
push
cmp
and
sub
or
inc
xor
sub
sbb
mov
push
push
jecxz
mov
cmpsb
mov
testl
xchg
aam
lods
in
sbb
add
rcl
xor
push
out
js
dec
cwtl
outsl
sbb
dec
inc
rcll
mov
dec
fcoml
mov
jo
lret
push
push
std
jae
les
dec
div
add
mov
sub
push
sub
inc
test
cmc
push
imul
cltd
repz
inc
add
scas
jge
sarl
cltd
js
pop
shll
test
aam
and
rcrb
dec
std
add
cmc
inc
cmp
fwait
sti
mov
dec
fnstenv
fwait
inc
sahf
sbb
or
iret
xchg
jg
xchg
inc
out
test
dec
push
jmp
push
mov
mov
nop
fisubl
cmpsb
iret
adc
mov
and
mov
mov
mov
jmp
dec
lds
lret
roll
xlat
dec
push
push
ja
test
cld
ucomiss
cld
and
push
fdivs
xlat
fcoml
cwtl
add
les
jge
jg
in
data16
and
imul
xor
dec
sbb
jle
mov
pop
outsl
loopne
xchg
enter
jo
sarb
xor
or
fnstsw
sub
sub
pop
inc
jnp
mov
jmp
sub
push
push
out
add
repnz
jbe
jae
mov
xor
push
dec
adc
cmc
adc
hlt
add
pop
shlb
xchg
sbb
inc
je
cld
mov
cmp
or
arpl
js
push
dec
and
lods
mov
lea
add
pop
fs
ds
rcrb
adc
insb
dec
jp
out
jmp
xor
push
fabs
jo
iret
iret
js
test
mov
ljmp
pop
mov
addl
jae
jbe
mov
mov
int
ja
or
xor
frstor
and
test
inc
xchg
orl
pop
push
mov
lcall
popa
dec
jg
mov
cmp
cmp
and
xor
lea
xchg
jle
pop
jp
je
jb
pop
inc
jg
push
repnz
loope
arpl
mov
xlat
adc
fs
push
imulb
stos
jge
pop
sub
xchg
scas
test
in
dec
or
repz
loop
xor
inc
pop
xor
xchg
pushf
outsb
jmp
sbb
mov
jae
imul
gs
xor
mov
dec
mov
js
xchg
popf
dec
pop
xor
cwtl
inc
aaa
push
sub
xor
fwait
pop
testb
xchg
xor
outsl
and
sahf
or
xchg
ja
add
xchg
fwait
in
imul
sub
push
and
dec
fstps
scas
mov
clc
cmp
xchg
ja
daa
jecxz
mov
xorl
pop
iret
adc
pop
mov
cmpsl
xor
lods
jno
imul
pop
call
pop
push
repz
dec
sub
sub
jecxz
fdiv
or
jl
jno
ror
pop
pop
mov
js
xor
inc
sbb
fstl
mov
mov
jl
sahf
mov
mov
jo
xchg
aaa
xchg
jecxz
xchg
dec
add
imul
sub
jb
adc
inc
sub
dec
scas
cwtl
int3
out
bound
mov
aaa
test
add
loopne
xchg
xchg
mov
aam
mov
jmp
in
call
push
and
pop
sbb
inc
je
cmpsl
xchg
and
cmp
xchg
mov
popa
mov
jnp
xor
xchg
push
adc
das
and
ja
mov
divps
dec
mov
dec
fisttps
dec
push
and
push
sbb
jnp
int3
cmpsb
push
lds
or
aas
add
int
adc
call
lahf
leave
jbe
out
sub
in
inc
jno
rorb
mov
adc
sub
xchg
mov
insl
and
ret
shlb
inc
cmpsb
xor
jle
pop
or
negb
mov
jae
jg
mov
push
lods
in
fwait
repz
roll
pop
movsb
loop
xchg
mov
fimuls
fsts
fldenv
or
mov
cmp
aam
xor
mov
jb
loopne
pop
rcll
shlw
cmp
inc
mov
rclb
cli
xchg
fnsave
stc
inc
out
mov
adc
cld
fildl
sbb
test
sub
inc
pop
inc
push
subl
mov
call
outsl
push
and
call
cmp
sbb
jp
adc
pop
in
xor
cs
add
loopne
lret
ficoms
push
pop
stos
bts
repnz
sysret
hlt
xchg
mov
mov
mov
xchg
push
test
pop
shl
lret
stc
sub
mov
jnp
aad
sahf
xchg
pushf
scas
test
insl
jnp
and
cltd
fidivrl
and
xchg
inc
add
mov
or
jle
adc
les
mov
imul
mov
cli
or
xchg
push
pushf
and
push
cmp
mov
popa
mov
dec
xchg
xor
push
jle
mov
sarl
xor
mov
addl
inc
sbb
cmp
inc
mov
pop
mov
cwtl
dec
xor
mov
or
les
stc
push
call
fldenv
push
fistpll
fdivl
adc
pop
jno
adc
mov
add
addl
push
sti
cmp
pop
frstor
lret
subl
hlt
xchg
orl
add
jo
mov
addr16
aad
ja
push
loop
daa
xchg
fnstenv
xor
jecxz
aas
sbb
insl
cld
imul
movsb
movsl
dec
push
lcall
push
mov
dec
push
mov
test
ds
adc
inc
jb
sbb
push
cmp
pushf
rcrl
shrb
xchg
mov
push
and
add
mov
mov
in
int
push
aad
mov
test
push
popf
cmpl
dec
add
and
xor
pop
mov
cmp
aas
push
fidivl
repz
push
fwait
movsb
xchg
mov
xor
ret
inc
out
lods
je
xchg
and
fdivrl
pop
xchg
jmp
cld
or
jns
lea
pop
call
out
aaa
mov
outsb
sbb
mov
sbb
dec
add
pusha
arpl
push
out
sbb
push
mov
in
lods
divb
popf
mov
jne
ret
sub
mov
stos
cmp
add
xchg
sub
loopne
mov
xchg
lcall
imul
mov
sti
pop
idiv
filds
fnstcw
xor
mov
lret
push
and
push
jmp
jmp
mov
ss
mov
arpl
jmp
lahf
inc
das
cmp
mov
xor
lret
or
dec
add
hlt
inc
jnp
xor
xor
test
or
icebp
repnz
ret
fidivl
outsb
fsubr
loop
cmp
dec
push
test
test
nop
add
sbb
dec
mov
sbb
and
fsubs
sti
jg
sub
fisubrs
fmull
popf
xor
mov
adc
mov
and
sahf
jno
hlt
cli
inc
pop
push
fldpi
sbb
es
and
jmp
rol
lret
push
incb
fistpll
subb
cmc
sbbl
lret
inc
sbbb
sub
adc
add
push
xor
xchg
pop
stos
in
in
cmp
outsl
imul
lods
mov
sbb
dec
jle
mov
dec
dec
repnz
dec
sbb
push
pop
hlt
cwtl
xor
and
adc
das
iret
pop
movsl
cmpsb
jl
cmc
sbbb
or
adc
mov
ds
mov
and
test
xlat
icebp
jp
mov
iret
mov
add
mov
mov
mov
add
lahf
add
sahf
repz
sbb
add
push
or
add
loope
sub
sub
cmc
sub
stos
bound
fists
and
mov
js
lods
das
cmc
push
je
lods
or
inc
mov
scas
jle
xor
movb
inc
dec
psraw
mov
push
insl
ljmp
push
sub
xor
lods
adc
jp
js
roll
sub
pop
fdiv
lock
popf
pop
stos
xor
mov
in
push
insb
dec
xor
xor
cwtl
dec
nop
fisubl
and
sbb
jle
sar
call
stos
mov
push
lret
mov
inc
fdivl
add
fnstcw
ds
pop
lock
call
imul
loope
push
sbb
pop
and
mov
jecxz
filds
adc
dec
cltd
call
shll
cmp
test
jmp
sub
dec
stos
bound
jbe
lea
sub
cmp
add
insl
sub
xchg
loop
pop
pop
test
gs
push
push
pop
test
test
inc
stos
insl
add
push
inc
mov
stc
stos
mov
xor
jb
test
gs
std
or
and
mov
jo
iret
or
xor
out
sub
sub
jmp
and
push
vpsrlw
add
sub
insl
lcall
adc
mov
sbb
cmp
ja
dec
inc
sub
cmp
lea
nop
xchg
push
push
mov
or
fucomip
pop
mov
vpsrld
aam
and
cmc
ret
ja
push
fldt
mov
aam
mov
mov
sub
in
cmpsb
mov
clc
jge
iret
dec
or
pop
out
iret
dec
dec
jg
and
fidivs
call
mov
ss
and
and
arpl
aas
sbb
aam
inc
mov
popf
pop
repnz
adc
cmp
sbb
cmc
jb
lea
scas
cmp
jle
test
inc
into
sbb
movsl
pop
inc
divb
inc
into
imul
and
adc
lret
mov
jnp
sub
sbbb
inc
sub
lret
xor
mov
dec
xchg
leave
arpl
insb
mov
sarb
imul
nop
xlat
pop
js
mov
jb
rcrb
iret
ja
into
repnz
and
test
repz
pushf
lods
jns
jbe
jg
jbe
pop
aam
rol
sti
mov
les
sbb
sbb
or
add
daa
inc
shlb
jb
clc
sbb
add
into
fisubrs
jnp
mov
push
leave
push
xchg
rorb
loope
lods
ljmp
lcall
sbb
loopne
cmpsb
add
mov
push
jmp
xchg
shl
jl
lahf
stos
cmp
scas
inc
mov
inc
dec
mov
stc
bnd
or
call
mov
mov
push
sarb
mov
mov
and
mov
psubsw
xor
add
mov
ss
sub
sbb
or
lock
jae
push
jmp
jmp
inc
loopne
nop
jb
iret
mov
mov
int
lret
inc
lahf
mov
out
inc
mov
or
mov
xor
cs
aad
cmp
iret
or
les
mov
xadd
icebp
mov
pop
cmpl
rolb
stc
faddl
xor
mov
adc
xor
adc
mov
cmp
xchg
xchg
or
test
in
add
je
mov
fnstcw
out
iret
adc
loop
xchg
fs
push
adc
sub
push
xorb
popa
cmp
adc
inc
in
iret
push
mov
adc
or
ja
xor
sub
divb
mov
test
adc
pop
subl
xchg
sub
lcall
fcmovnu
jns
push
jp
mov
xor
loopne
ja
or
cmpsl
adc
mov
add
stc
lret
sbb
outsb
cli
xchg
cmp
xor
movsb
inc
rcl
sub
repz
out
pop
mov
mov
repnz
aaa
out
jl
test
sbb
and
push
jbe
or
cmp
push
mov
add
xor
mov
push
dec
pop
hlt
pop
es
cmp
push
addr16
fwait
push
xchg
cwtl
dec
lods
lret
fstps
jmp
in
icebp
jae
jns
xor
test
mov
call
adc
js
int3
push
mov
inc
sub
int3
push
mov
or
rcll
shr
orps
mov
push
jbe
and
rclb
lcall
jmp
into
lods
data16
add
fdivl
mov
out
and
jp
shl
push
jns
icebp
dec
out
xchg
dec
xchg
mov
push
loopne
shll
jge
clc
xor
mov
sbb
lds
jnp
pop
inc
addr16
pusha
mov
sub
push
mov
xchg
sub
jle
scas
lret
and
arpl
out
adcl
sbb
lahf
sub
mov
sub
mov
lods
je
jmp
jmp
or
add
and
inc
aas
adc
jns
xchg
outsl
imul
adc
out
bound
mov
out
mov
cli
inc
mov
repnz
sti
lea
mov
inc
sbb
jp
jp
push
repnz
js
pop
nop
pop
xor
test
sbb
cmpl
fdiv
testl
xchg
or
cli
pop
cli
sub
in
fcomps
xor
js
lcall
les
push
dec
neg
lret
test
pop
scas
aas
adc
sub
fiaddl
jge
scas
adcl
adc
sahf
test
mov
enter
or
aam
xor
cmpsl
aam
jae
insl
stos
int3
clc
inc
sbb
dec
pop
sbb
mov
mul
nop
push
xchg
cmp
mov
and
and
leave
out
test
sbb
ficompl
in
push
dec
mov
shrb
cmp
in
imul
mov
push
adc
subl
test
cmpsb
cmc
je
add
bound
add
in
js
cmc
outsl
lea
sub
loope
leave
lcall
das
lods
and
stc
xchg
aam
lods
test
jge
mov
inc
sar
push
insb
xchg
stc
adcb
pop
xor
ficompl
lea
sets
sbb
jb
rcr
mov
in
lret
mov
push
pop
iret
mov
imul
ja
movsl
outsb
aad
mov
dec
cmp
aas
imul
lahf
dec
data16
in
add
mov
xor
scas
xor
mov
push
fsubr
scas
in
insb
icebp
insl
pop
jnp
scas
xlat
clc
out
insl
xchg
into
loop
lds
lds
test
jno
mov
pop
add
hlt
xor
xor
lcall
inc
push
xadd
popf
leave
and
addl
inc
adc
ds
jns
fst
fsubl
leave
jle
sbb
inc
pop
jecxz
iret
dec
icebp
fistl
jno
loopne
fiaddl
cld
js
daa
inc
daa
pop
arpl
xchg
scas
arpl
mov
fimuls
push
lret
lock
and
inc
add
aad
fdivrs
mov
push
imulb
test
pop
js
dec
rcrb
movsl
call
mov
xorl
bound
and
out
cmpb
cmp
dec
loope
in
jg
lret
xor
xchg
adc
jge
jp
jmp
pop
popf
push
scas
sub
push
fistps
jmp
adc
test
fstpl
jae
mov
addl
mov
adc
les
into
xchg
push
xor
xlat
into
mov
cmpsb
push
scas
ds
arpl
xchg
stc
ficomps
in
cmp
sahf
mov
sub
push
and
pop
in
xchg
sub
addr16
add
pop
hlt
mul
addr16
mov
or
push
inc
dec
adc
ss
mov
push
ds
mov
and
sahf
repz
jle
dec
repz
arpl
mov
or
dec
icebp
push
insl
xor
adc
push
les
cmc
sti
push
inc
aaa
mov
jbe
fs
mov
jmp
mov
inc
pop
add
fistl
mov
adc
or
xchg
and
rcrl
clts
lods
xchg
sbb
addr16
xor
adc
lea
dec
xchg
add
mov
inc
inc
mov
mov
jp
push
pop
fmuls
xchg
lret
inc
imul
mov
sub
shl
scas
cwtl
hlt
adc
aad
mov
sbb
mov
lds
cmp
xor
push
icebp
test
test
dec
bound
fsubp
push
out
inc
ret
xlat
inc
ficoms
pusha
push
icebp
xlat
shrl
mov
test
fcoms
int3
fdivrl
or
sbb
or
pop
and
xor
pop
mov
xor
or
xor
add
ss
adc
in
inc
sbb
das
in
popa
dec
ret
sahf
clc
push
repz
cmpsb
loop
push
shll
xchg
or
lea
inc
les
cmp
sub
cwtl
sub
nop
mov
adc
adc
test
loope
fmuls
jle
pop
iret
mov
mov
test
mov
inc
mov
je
mov
jge
and
xor
jl
aas
ret
jne
mov
and
adcl
jmp
fadds
mov
imulb
loop
mov
mov
dec
fistps
pop
mov
inc
push
mov
push
faddl
inc
or
pop
mov
fidivrs
jnp
pop
mov
push
mov
xor
inc
fists
pop
ds
or
fbstp
push
mov
jnp
aad
fwait
dec
adc
rcrl
mov
sub
jns
and
pop
add
push
mov
repnz
push
jbe
test
std
pushf
add
cs
mov
push
cmpsb
add
sub
mov
out
xchg
jb
jl
mov
nop
rol
fs
leave
sub
bound
jge
adc
push
shlb
mov
cld
mov
jle
scas
sahf
pop
jmp
popf
pop
fldl
xchg
int3
in
out
test
mov
enter
leave
out
inc
jp
mov
xor
adc
mov
cmpsb
ljmp
cmp
or
jns
fidivl
adc
pop
orl
adc
mov
dec
nop
mov
insl
enter
sbbb
and
or
aas
iret
mov
cmp
pop
or
loope
mov
xchg
cld
lods
or
adc
std
jg
jnp
int3
imul
nop
inc
cmp
jl
mov
fs
ja
push
xchg
push
pushf
xchg
or
loope
cmpsl
fsubrs
jno
movsl
and
and
jns
cmp
cltd
test
sarl
sub
icebp
sti
push
push
jecxz
es
paddq
push
fsubr
das
daa
sub
mov
mov
mov
sti
out
stc
xchg
push
pop
imul
xchg
inc
xchg
jo
sbbb
addr16
cmp
push
jge
pop
mov
addr16
outsl
add
xor
lods
stos
jne
xchg
lea
lahf
push
daa
inc
jnp
push
adc
ss
add
mov
test
push
lods
xchg
lcall
stc
jno
mov
into
lahf
movb
adc
andnps
jne
aam
or
pop
push
or
sub
xchg
push
adc
fiadds
movsb
pop
add
fidivl
inc
sbb
sub
lds
imul
and
repz
out
rorb
push
mov
mov
aaa
sub
repnz
add
push
push
jge
inc
clc
aas
push
cmp
push
jns
lret
sbb
sbb
pushl
xor
push
test
mov
popa
lock
mov
in
jb
xchg
fildl
popa
dec
sbb
std
imulb
mov
pop
and
cmp
mov
sbb
outsl
cltd
and
cmpsl
lret
pushf
std
lret
icebp
pop
scas
jge
jae
jb
les
inc
ficomps
sub
cli
test
outsb
fcoml
loope
mov
xor
hlt
je
lcall
dec
jns
ljmp
push
call
cltd
pop
cmp
push
push
out
push
xchg
out
and
int
sub
divb
int
mov
pop
xchg
scas
cmp
pop
pusha
lods
xchg
or
lahf
testb
add
fcoml
fs
xchg
add
lods
and
pop
and
pop
scas
pop
xchg
imul
sbb
mov
ja
xchg
shl
and
and
push
dec
inc
lcall
sub
ret
sti
dec
out
add
rol
js
jg
fists
xor
sbb
pop
sub
sub
imul
pusha
jno
add
xor
xlat
sub
or
es
xor
outsb
cmp
inc
dec
pushf
add
aaa
push
and
leave
dec
ret
dec
adc
mov
imul
leave
hlt
or
rorl
in
aam
xlat
mov
xchg
jg
out
inc
pop
inc
lcall
fmul
dec
stc
cmp
call
sahf
lret
push
ds
pop
mov
mov
jge
call
xchg
jns
lahf
pushf
inc
dec
scas
pop
sub
dec
xchg
add
xorl
pop
bound
out
adc
cwtl
xchg
loop
push
hlt
in
bound
out
cmp
mov
sarb
pusha
cmpsb
inc
dec
insl
jmp
aas
xchg
nop
cmp
xchg
lds
ss
inc
xor
xchg
bound
adc
xor
mov
insl
jbe,pn
outsl
lods
rcrl
ror
push
mov
mov
sbb
mov
shlb
testb
xchg
in
into
add
ds
fsubl
scas
sbb
pop
addl
out
outsb
jns
and
cli
out
pop
cld
sbb
cmp
or
sbb
fadds
and
add
js
out
sub
adc
cmp
fwait
aad
sub
mov
push
xchg
mov
in
in
sub
cli
sub
sub
lods
xlat
aas
scas
cwtl
sbb
inc
mov
cmpsl
popf
push
test
or
mov
into
push
fcoml
sbb
lcall
rcll
popf
inc
aam
lahf
in
loop
jns
out
push
aaa
mov
sub
into
rorl
add
in
and
lock
ss
leave
rorl
leave
ret
and
sub
push
sbbb
popf
mov
mov
add
pushf
loopne
pop
rclb
jge
adc
push
repnz
stos
mov
fiadds
jns
lds
dec
mov
push
mov
push
leave
call
inc
and
mov
in
mov
out
mov
fsin
jae
push
xorb
xchg
cs
outsl
xlat
out
cmpsb
xlat
or
xchg
cmc
outsb
dec
movsb
xor
and
xchg
and
mov
cmpsl
xor
gs
test
shlb
lahf
mov
cmp
jp
jle
sti
loope
inc
jnp
loope
inc
loop
push
or
lea
xlat
jbe
bound
pop
hlt
fistps
and
repz
cltd
or
lea
xchg
xor
arpl
mov
cmp
test
and
ljmp
xlat
sub
jp
xchg
addr16
iret
cwtl
push
mov
push
das
dec
sub
scas
lcall
cmp
test
adc
add
pop
sbb
adc
jo
pop
jmp
lcall
xor
mov
mov
les
mov
mov
dec
sbb
movsl
cmp
xchg
lret
mov
into
mov
cld
cmp
adc
cmp
push
js
pop
mov
fistps
imul
loop
mov
imul
fcmove
and
bound
add
inc
dec
ja
mov
icebp
es
push
inc
das
out
inc
repz
adc
popa
add
out
ds
dec
test
dec
les
push
adc
jmp
rep
xchg
popf
xlat
fisttps
lcall
mov
inc
fisubrs
aam
or
push
cmc
flds
adc
or
jno
jne
mov
and
dec
lock
sbb
mov
inc
outsb
mov
push
out
fs
pop
mov
das
jbe
push
inc
aad
adc
adc
mov
mov
push
or
repz
es
cmp
mov
cmpsl
pop
insl
mov
mov
cmp
mov
cmp
push
cwtl
scas
mov
ljmp
sahf
dec
jns
xchg
xor
insb
call
or
jp
xor
daa
sahf
je
sbb
mov
cmp
sahf
out
sbb
orl
ljmp
mov
gs
es
mov
call
ret
aas
and
sbb
fwait
shl
aad
outsl
xchg
push
cwtl
popa
xchg
adc
adc
in
notb
into
shlb
push
fs
shlb
jge
aam
inc
rolb
add
notl
inc
scas
into
dec
jne
mov
cwtl
into
loopne
rorl
test
xor
in
pop
or
xor
enter
ficomps
lahf
xor
stos
andl
cmp
pusha
add
pushf
cmpb
mov
add
or
lods
packuswb
pop
or
push
push
stos
in
repnz
dec
insb
enter
mov
inc
pop
or
mov
push
das
lahf
sbb
pop
xor
out
aad
addr16
push
jnp
adc
pop
mov
push
mov
pop
cmp
push
in
adc
mov
sti
je
data16
int
stos
lods
outsb
add
jecxz
or
and
loopne
in
mov
xchg
repnz
pop
mov
dec
sub
sub
mov
push
fisttpll
fidivrl
jg
and
xorl
cltd
push
xor
jmp
aas
lret
push
jae
dec
mull
aam
add
jecxz
lret
cmp
leave
in
push
test
rorb
sar
inc
int
lds
int
test
push
mov
cmpb
xchg
loopne
mov
jb
lahf
push
fwait
xor
jecxz
test
sbbb
and
xor
daa
mov
xchg
fwait
jb
and
mov
sahf
pop
mov
pop
sbb
inc
push
test
lock
pusha
sub
jg
adcb
data16
aam
push
mov
push
xchg
movsl
mov
cmpsb
inc
fstps
xor
mov
pop
adc
je
test
sarl
mov
mov
insl
push
cmpsl
mov
inc
xchg
jecxz
rorb
mov
jmp
lcall
and
dec
pop
mov
lret
and
push
sub
imul
int3
jg
mov
ret
sbb
sub
inc
push
adc
xor
jne
mov
pop
or
adc
jge
push
or
pop
scas
xchg
dec
sub
sbb
inc
or
cwtl
iret
dec
ljmp
cld
cmp
adc
scas
lock
pop
cmc
mov
int3
das
call
scas
fwait
dec
cli
pop
pushf
fwait
pop
rcl
add
cmp
scas
xor
test
lds
jb
push
inc
jae
add
rclb
add
pop
jl
jae
xor
or
rorb
jo
repz
mov
imul
mov
out
loop
stc
add
adc
fldenv
dec
adc
addb
inc
mov
push
insb
cmp
or
jnp
mov
mov
fsubr
xchg
mov
mov
inc
ljmp
or
cld
iret
xor
push
or
jne
lret
adc
cli
sub
bound
bound
and
inc
push
fistpll
leave
sbb
aas
roll
or
add
cwtl
adc
aam
roll
subb
and
mov
in
out
mov
ret
jae
fbld
and
mov
adc
sbb
fwait
add
das
mov
xor
pop
ds
xchg
test
pop
mov
xchg
cmp
mov
les
push
mov
aas
addr16
xchg
cmp
dec
add
push
mov
cmpsb
cs
pop
mov
fstps
pop
or
inc
xor
push
aam
push
xor
rolb
test
dec
mov
push
mov
roll
and
jae
nop
lret
adc
cli
mov
adc
sbb
rolb
fists
arpl
pop
add
fisubl
pop
dec
jbe
dec
and
cmp
jle
pop
sbb
sub
and
inc
out
inc
dec
pop
and
nop
push
pop
movsb
data16
movsb
xchg
push
sub
scas
jb
lahf
dec
ficoms
stc
js
cmp
cmp
mov
in
push
add
mov
mov
push
jg
push
fcoml
das
jle
cmp
ds
cmp
inc
in
pusha
idivb
lret
sbb
or
hlt
push
rcrb
imul
push
xchg
mov
cltd
mov
adc
mov
sbb
jbe
scas
mov
push
push
add
jmp
inc
dec
adc
mov
test
push
sub
pushfw
sahf
sbb
or
lods
divl
or
enter
addl
adc
sub
data16
xchg
and
push
aad
out
and
and
movsl
jbe
pop
or
pop
adc
jbe
mov
loopne
pop
xor
testb
adcl
inc
loopnew
push
movsl
arpl
dec
test
icebp
outsl
sahf
imul
sahf
scas
adc
lidtl
xchg
jge
orb
mov
and
hlt
das
imul
lret
xlat
xchg
stos
cs
pmovmskb
rorb
xchg
aad
rolb
dec
mov
dec
mov
std
adc
mov
scas
sbb
mov
fsub
jae
rorl
ss
cmpsl
dec
or
xor
stos
ljmp
fcmove
adc
pushf
and
daa
pushf
in
je
bound
les
iret
repz
out
and
out
pop
bound
cmp
xchg
pusha
sub
inc
mov
push
fdivl
gs
mov
test
mov
sbb
xchg
clc
pop
in
repnz
test
jb
mov
pop
push
adc
ss
sub
sub
pop
in
mov
das
mov
pusha
stos
xchg
shrl
or
sub
and
sarb
push
sub
loopne
mov
and
inc
fcmove
mov
jno
adc
subb
mov
in
push
push
popf
sarb
leave
iret
int
jecxz
mov
repz
push
jb
pop
xchg
push
aas
jmp
lret
cmp
mov
xlat
lahf
call
push
adc
dec
lret
push
pop
jmp
pop
and
inc
jns
jg
inc
popa
jnp
push
ja
sub
or
dec
neg
inc
sahf
fdivs
inc
aas
pop
icebp
in
aad
icebp
fdivrs
addl
mov
xlat
loopne
mov
inc
fldcw
and
mov
mov
jle
xchg
out
xchg
add
pop
outsb
ficoms
xchg
sub
jmp
mov
test
lahf
mov
adc
in
mov
mov
mov
or
data16
notb
cmpsl
xor
lock
and
cli
into
pop
mov
mov
or
adc
mov
dec
out
mov
xlat
jbe
stc
jg
inc
cmp
mov
aam
dec
dec
pop
add
sahf
jbe
rcrl
in
out
sub
notb
lods
inc
mov
pop
notb
cmp
fmull
jnp
lods
mov
jbe
insb
pop
mov
stos
adc
pop
pusha
pop
dec
insb
sbb
lea
ds
inc
xlat
aas
clc
mov
mov
je
push
roll
or
inc
mov
xchg
test
ds
insb
fcomps
xor
add
or
lahf
mov
orb
std
scas
jmp
push
push
rcrb
sahf
sub
lds
mov
testb
out
stos
hlt
outsb
jbe
lahf
cmp
xchg
inc
stc
aaa
push
jno
xchg
cmp
mov
sbb
vpcmpgtb
cwtl
cmpsb
mov
mov
scas
enter
test
pop
aas
pop
leave
xor
std
lods
push
mov
test
pop
push
or
jbe
jns
loope
outsl
cmp
scas
out
mov
jmp
cmp
cmc
cltd
mov
add
lds
repnz
mov
loop
xchg
inc
cmp
and
fiadds
mov
pushl
xor
add
addr16
ljmp
dec
cmc
nop
push
jno
insl
orl
call
mov
rcrl
inc
mov
mov
xlat
jmp
dec
sbb
ja
aas
insb
test
or
sub
jle
mov
push
outsl
imul
insl
jmp
push
mov
xor
cmp
mov
roll
or
leave
jecxz
sub
test
xchg
jge
sbb
push
xchg
push
jmp
pop
mov
shlb
out
addl
scas
movb
push
push
mov
lds
stos
in
or
jecxz
mov
faddp
aaa
js
loope
rcr
aad
fisubrs
adc
sub
test
pop
sbb
adc
mov
jp,pn
rcr
pop
jbe
aam
push
lahf
or
cltd
jns
addr16
pushf
and
sub
xchg
push
mov
dec
mov
mov
icebp
xor
aad
pusha
inc
push
ss
dec
or
push
inc
or
inc
outsw
addr16
or
stc
adc
or
fistps
aas
push
sar
cmp
jno
add
pop
xchg
dec
mov
cld
push
pop
xor
data16
test
pop
popf
repnz
sbb
mov
pop
rcrb
xchg
and
aas
push
int3
dec
insl
shll
es
or
push
lods
fld
clc
dec
xchg
sub
xlat
mov
mov
pop
ret
sbb
dec
and
lods
xchg
std
mov
dec
inc
mov
js
mov
arpl
jne
ljmp
cli
push
xchg
jno
subl
add
push
adc
outsb
andl
notl
cmp
xchg
test
jle
cmp
pusha
cmpsl
dec
add
cmp
lret
push
adc
mov
shl
sbb
add
push
js
sbb
sub
add
mov
stos
inc
add
stc
dec
mov
imul
fs
cltd
mov
mov
insl
cmp
dec
out
ret
cli
push
mov
mov
mov
and
test
pop
add
and
jle
push
fs
jno
jle
inc
inc
gs
call
sub
lahf
add
xor
rclb
adcl
sarl
dec
faddp
nop
int
add
inc
inc
test
lods
out
mov
xor
pop
int3
movsb
test
jmp
iret
cmp
das
and
xchg
cli
in
jbe
xchg
in
imul
cld
mov
mov
aaa
call
sbb
push
push
mov
xor
outsb
xchg
fdivp
xor
and
dec
fimuls
jne
sti
mov
xlat
fucom
ret
ljmp
mov
push
stos
cli
jle
sub
xchg
jo
jmp
sbbl
jbe
jb
outsb
fwait
pop
popa
xchg
jne
push
adc
std
shll
push
mov
fs
repnz
outsb
sbb
repz
data16
stc
jg
and
les
mov
loop
je
cmpsb
dec
jl
inc
in
fcmovnu
fmull
mov
not
sbb
enter
cltd
addr16
lea
icebp
xor
lcall
out
enter
addb
jmp
pop
int
hlt
leave
xchg
jmp
mov
punpckldq
gs
mov
pop
insl
fs
es
nop
in
add
lahf
mov
mov
mov
lret
adc
mov
or
mov
into
stos
jae
jnp
cmp
ds
push
jg
push
hlt
adc
mov
sbb
push
sbb
cld
inc
mov
xor
ja
jb
mov
xchg
xchg
test
pop
jg
add
mov
and
inc
je
test
push
aad
js
cmp
and
inc
in
ja
push
pop
pushf
push
sbb
cmc
push
call
xchg
cmp
fidivs
xchg
ja
pop
pop
fildl
mov
mov
sub
lret
push
in
int3
cmp
repz
enter
push
js
inc
sbb
sub
out
ss
dec
xchg
jbe
push
inc
outsb
push
dec
mov
add
xchg
in
shr
sarb
in
jno
jge
cli
mov
mov
xchg
lret
xchg
add
repz
and
cld
ljmp
imul
jno
cli
pop
sahf
mov
mov
adc
pop
int3
fs
xchg
cwtl
aad
pop
orb
ljmp
jns
push
lcall
test
imul
mov
mov
jnp
je
sahf
dec
sbb
clc
daa
sub
stc
cmp
fldt
gs
pop
and
out
push
push
dec
lods
in
loope
add
xor
mov
mov
and
shl
mov
inc
fwait
out
inc
cli
js
add
xchg
pop
ret
jne
add
pop
mov
loop
add
mov
mov
cli
lock
inc
mov
pop
pop
aam
sbb
mov
xchg
cmpsl
dec
in
addr16
jmp
jecxz
sti
adc
in
jge
hlt
stos
mov
xchg
fcoms
in
test
xchg
into
js
pushf
mov
popa
popa
dec
jbe
loopne
addl
not
mov
jae
mov
es
jg
or
in
add
push
jb
into
mov
call
lods
cmp
insb
cmp
ds
adc
mov
lret
lea
out
mov
sub
xchg
loop
hlt
outsl
icebp
jg
in
push
pop
aaa
pop
jmp
push
jle
dec
mov
fwait
dec
add
fwait
cwtl
pop
pop
jae
lock
fistl
push
xchg
adc
xchg
out
aas
icebp
fldt
sub
int
pop
push
inc
pop
xor
fldenv
lret
adc
inc
js
repnz
imul
cld
out
mov
push
das
jg
es
ss
mov
xor
mov
lock
dec
cmp
lods
cmp
push
ljmp
xor
das
push
lods
xor
out
mov
sbb
je
cltd
sub
scas
loope
sbb
mov
or
je
push
mov
je
add
adc
mov
push
sub
xor
movsb
inc
clc
inc
scas
and
aaa
orl
mov
or
jnp
inc
pop
jge
add
cmp
addl
repz
push
imul
add
enter
sbb
xchg
jo
repnz
inc
mov
stos
sub
enter
jmp
or
push
jbe
inc
in
sub
pusha
idivl
in
dec
cmp
ss
rclb
stc
scas
xor
stos
and
jns
mov
adc
js
packuswb
push
loope
repnz
adc
pop
mov
push
cli
mov
mov
push
ss
dec
dec
jecxz
mov
sub
cmpb
cmp
bound
in
in
adc
call
in
mov
push
jbe
rolb
icebp
sub
inc
enter
xchg
add
cmc
pop
xor
inc
clc
xor
out
mov
jb
adc
pop
inc
push
shl
es
int3
push
and
jle
icebp
push
jg
push
jp
or
cmp
bound
pop
jo
xor
cmp
jecxz
ja
out
loopne
leave
pushf
pop
ja
scas
ja
lods
ds
out
ret
not
out
shll
pop
loop
push
sbb
sbb
rcrb
in
lods
mov
enter
or
pop
fs
pushf
testl
cltd
push
lods
mov
jo
movsb
sub
inc
push
lods
cs
mov
inc
jb
sub
jb
push
int
mov
mov
ret
xor
addr16
bound
pop
push
insl
shlb
sub
dec
mov
cmp
imul
and
je
loope
lock
xchg
adc
jns
leave
xor
jg
push
sbb
inc
lret
push
xor
jne
lahf
fiadds
shll
inc
loope
popa
push
mov
push
and
xchg
loop
ret
mov
adc
xor
mov
ret
insb
push
mov
jecxz
ds
adc
cmp
add
adc
xchg
and
lea
ror
popl
mov
add
and
loopne
lods
lcall
out
cmp
cmp
pop
imul
cld
sub
jbe
iret
xor
lcall
in
aaa
sbb
jne
stos
lret
and
inc
pop
fcom
pop
cmp
shlb
movsb
push
or
mov
out
mov
pop
sbb
shlb
jecxz
aam
dec
pop
and
aam
imul
scas
sub
cmpsl
mov
outsb
xchg
outsl
adc
xchg
lret
cli
push
xchg
mov
stos
or
push
pop
pop
mov
and
cwtl
xchg
xor
and
sbb
push
out
push
pop
cmc
into
jo
icebp
mov
mov
mov
push
xor
hlt
movsb
loopne
je
sbb
js,pn
fisttps
dec
leave
or
push
nop
dec
pusha
cwtl
test
fistps
push
mov
mov
and
shll
dec
loop
inc
sbb
jne
jb
cmp
das
xor
insl
mov
fwait
test
lods
outsb
push
adc
cltd
mov
ret
push
sahf
jae
dec
mov
out
aas
into
adc
add
mov
insb
or
xchg
jne
mov
inc
dec
and
inc
adc
mov
xor
stos
into
cmp
mov
out
jns
inc
xlat
repz
mov
dec
sub
pushf
jge
xor
jmp
je
aam
test
bound
call
ss
in
iret
jle
dec
mov
xor
xchg
lea
mov
fisttpl
fwait
imul
stos
mov
cmp
dec
and
xor
in
ja
into
ret
shlb
movl
lods
or
cwtl
es
rclb
movsl
adc
das
test
xchg
loopne
sub
gs
and
sbb
jnp
sub
repnz
pop
push
pop
jns
jmp
xor
cmp
jp
inc
es
pop
repz
xor
xlat
movsb
loopne
popf
pop
mov
aaa
out
mov
xor
add
mov
sbb
dec
sub
pop
add
inc
and
add
mov
loope
mov
inc
sub
insb
movsb
cmp
dec
rcl
data16
pop
push
adc
jne
pop
int
xor
sbb
mov
in
pop
imul
add
int
adc
cli
jp
cmp
adc
pop
shlb
xchg
cs
add
punpcklwd
push
js
or
je
mov
mov
cli
ret
pushf
lods
push
into
sub
mov
pop
pop
repz
pop
mov
loope
fbstp
mov
testb
cmp
cltd
repz
lahf
mov
mov
mov
jbe
jne
je
enter
push
mov
nop
ret
mov
push
push
jp
xchg
call
popa
jne
sub
lods
cmpsl
jmp
lea
repz
inc
xchg
sbbl
loope
lods
shl
push
xor
dec
popf
pop
cld
neg
nop
outsb
faddp
and
pop
sar
push
lret
jg
ss
mov
addr16
aad
rolb
fdivr
addl
dec
aam
xchg
es
inc
aaa
addr16
orb
add
cld
fxch
mov
pop
popf
xchg
mov
xor
mov
fildll
into
xchg
sbbl
ret
daa
stc
fnstenv
aaa
jb
xor
into
mov
or
sbb
pop
and
pushf
push
in
pop
int3
push
mov
scas
test
jg
jmp
daa
inc
aam
dec
jo
fmulp
mul
es
pop
inc
stos
inc
xchg
cmp
orb
das
int3
and
xchg
cmp
sbb
in
inc
cmpsb
js
outsb
loop
inc
nop
inc
sbb
xor
inc
sbb
mov
ret
mov
dec
xchg
cli
das
rclb
test
pusha
sub
mov
pop
lods
add
or
sbb
cmp
in
pop
gs
aaa
lret
mov
and
hlt
mov
aaa
xor
sub
hlt
sub
sbb
mov
inc
popa
gs
fldcw
sbbb
lcall
jp
test
sbb
cld
pop
adc
std
and
mov
mov
adc
insb
mov
xchg
and
dec
add
jge
mov
rolb
gs
inc
pop
mov
xor
stos
nop
adc
sbb
js
mov
fcoml
lahf
xorb
cli
push
repnz
cs
mov
sub
subb
sub
sti
add
hlt
popf
mov
jae
mov
loop
les
push
loope
in
adc
mov
ja
ljmp
in
push
cmp
pop
push
adc
dec
lahf
sbb
push
xor
sarb
sub
testl
aam
imulb
xchg
mov
loope
fdivl
int3
mov
sbb
push
jg
pop
mov
sbb
push
and
or
enter
xor
lock
mov
lahf
add
jb
dec
sbb
fwait
daa
or
loopne
lar
in
mov
or
ja
mov
mov
inc
mov
les
fistps
cwtl
jge
jb
mov
sub
push
pop
idiv
std
imul
push
adc
mov
inc
xchg
fistpl
loope
adcb
xchg
add
test
mov
repnz
ret
cmc
pop
xlat
inc
sbbl
int3
adc
mov
jno
sbb
jmp
outsl
pusha
cli
mov
cmpsb
sti
incb
xchg
adc
push
mov
and
sub
icebp
xchg
pop
daa
loopne
mov
imul
pop
sbb
cmp
pop
dec
popa
addr16
nop
xchg
jp
insl
cmpsl
pop
cmc
and
imul
mov
nop
imul
cwtl
popa
loop
sbb
mov
test
mov
add
jnp
mov
push
inc
lds
push
mov
jmp
jmp
sub
ret
das
and
push
dec
pushw
lods
inc
dec
push
dec
test
or
xor
jmp
scas
roll
repz
loop
imul
ljmp
jno
jge
out
xlat
sbb
ficompl
mov
push
cmp
mov
push
dec
jo
sbb
incl
mov
lahf
xor
pop
adc
scas
jl
or
leave
stos
sbb
nop
or
stos
adc
shr
cltd
sbb
inc
and
add
frstor
nop
lea
mov
out
sahf
movswl
fldl
mov
add
in
cld
push
push
movsb
cmpsb
mov
or
pop
push
fmul
into
aas
jno
aas
bound
mov
call
pushf
insb
xor
repz
xchg
mov
adc
sub
in
dec
repnz
inc
xor
xchg
push
and
mov
inc
out
inc
xor
aam
mov
int
outsl
jl
notb
or
xchg
push
push
cmc
mov
mov
shll
rolb
arpl
pushf
jecxz
fistps
jnp
or
xchg
dec
pop
test
inc
outsb
xchg
popa
mov
ds
es
push
sbb
inc
hlt
push
sti
mov
hlt
mov
dec
sldt
mov
push
xor
dec
cmp
lahf
and
jmp
jmp
ror
xchg
dec
or
xchg
shrl
lret
jnp
icebp
aaa
pop
jmp
test
aam
into
mov
sub
outsb
mov
mov
mov
lret
dec
sub
xchg
loope
dec
std
cmpb
or
xor
add
iret
cwtl
pop
shr
adc
aaa
cmp
in
imul
mov
pop
add
mov
jo
xchg
in
jbe
pop
or
or
jecxz
adc
jge
dec
lcall
gs
or
out
arpl
xchg
add
sbb
dec
push
sti
push
pusha
push
mov
jae
ret
ljmp
push
mov
jae
int3
gs
lods
inc
mov
xor
add
mov
es
xchg
pop
fmull
xor
cmp
imul
into
pusha
dec
repnz
int
fdivr
fimuls
cmp
or
cwtl
and
mov
sub
xchg
cmpsl
testb
ud0
testl
aas
sub
and
out
cmp
outsb
xchg
mov
sub
popf
repnz
mov
jmp
ret
popf
in
movsl
leave
xchg
popf
popf
fmul
fwait
aas
scas
pushf
nop
out
sarl
push
sub
nop
das
xor
adc
add
xchg
pushf
sub
jns
hlt
adc
test
jecxz
dec
and
lods
mov
gs
outsb
mov
jg
test
es
xor
lcall
repz
fdivrp
or
inc
dec
lds
pop
mov
stos
out
mov
adc
mov
mov
shr
fsubr
push
mov
addb
pusha
jge
jmp
into
sub
inc
xchg
add
int
mov
sub
mov
enter
adc
iret
in
popa
loopne
loopne
inc
cmp
pop
mov
lock
sbb
cmp
jnp
jmp
fisubs
movsl
pop
mov
mov
or
stos
rorl
ljmp
or
xchg
sbb
and
call
cwtl
mov
rorl
mov
cmp
in
jb
and
rorb
pusha
cld
lock
je
sbb
int3
adc
hlt
ret
mov
nop
xchg
cmpsb
mov
pushf
loopne
jne
cmp
test
fcomi
jl
int3
lds
fdivrl
dec
cmp
jb
aaa
and
jb
out
mov
pop
js
add
pop
dec
sub
inc
mov
dec
xchg
loope
pop
hlt
sarl
mov
pop
cmp
fidivrl
data16
inc
icebp
fcmovb
fwait
sub
and
cmp
jo
loop
loop
push
stc
pusha
loope
shll
jno
xlat
xor
adc
hlt
mov
mov
aam
and
add
jecxz
xchg
push
push
incb
fwait
dec
or
add
xchg
add
jecxz
out
loope
fucom
jecxz
push
stos
mov
enter
hlt
pusha
ds
gs
jno
dec
mov
hlt
ret
jbe
es
fwait
and
lcall
nop
test
call
jl
dec
aaa
jmp
jecxz
pop
mov
js
mov
mov
test
lds
fisttpl
mov
xchg
xchg
mov
sti
xchg
mov
fildll
mov
pusha
mov
mov
movsl
daa
xor
push
fs
jl
cmp
or
sbb
leave
aaa
rcll
mov
pop
push
dec
stc
or
rcrl
dec
cmp
lods
fists
arpl
mov
outsl
cmpsb
jecxz
mov
mov
imul
add
mov
mov
cltd
enter
shl
add
ficomps
push
sub
jmp
add
pusha
mov
push
push
inc
test
cld
inc
js
sbb
inc
sub
push
mov
or
xchg
xchg
xchg
ss
push
inc
aam
clc
lret
out
jge
mov
rcl
dec
cmpsb
je
or
hlt
cmp
sbb
mov
adc
or
adc
jnp
inc
push
arpl
or
dec
ss
ret
xlat
outsb
mov
xor
push
push
mov
push
mov
and
xchg
insb
jl
xchg
inc
std
jbe
add
ret
test
adc
pop
jno
push
sub
sub
rorb
mov
lret
mov
pushf
adc
push
aam
mov
stc
jecxz
insb
dec
or
xchg
mov
jle
imulb
xor
cli
add
test
arpl
das
repnz
inc
jmp
lea
cmp
xor
jle
cmpsb
daa
mov
xchg
push
jno
dec
insb
sbb
mov
sub
pop
mov
sub
aam
aas
mov
lods
xor
pop
imul
popa
jnp
and
movsl
movsb
das
les
mov
xchg
push
xor
cltd
stos
repz
sarb
fimull
sti
push
es
test
jno
popf
push
test
sbb
mov
int3
jp
lea
notl
add
jnp
xchg
data16
ds
or
mulb
pop
mov
cmc
add
dec
gs
xchg
insl
add
test
push
into
jmp
dec
aas
call
mov
decb
bnd
sub
outsb
outsb
dec
aas
add
mov
or
out
rcl
js
pop
or
divb
fdivp
push
shll
sub
push
or
cwtl
std
fstpt
cwtl
or
cli
cmpsl
js
mov
cmp
mul
in
mov
push
or
sub
adc
out
popf
stos
xor
pop
push
clc
in
xchg
adc
scas
into
or
testl
adc
loope
push
or
ljmp
roll
sub
scas
jae
daa
xchg
scas
xor
outsb
out
mov
xor
xchg
jp
in
sub
jb
xchg
adc
xchg
int3
jle
mov
mov
aaa
xchg
xor
das
xchg
adc
aas
mov
push
dec
mov
or
xor
mov
insl
push
or
pusha
push
sub
into
shll
fldcw
inc
pushf
mov
ja
rcrb
stos
push
xor
dec
ficompl
sbb
jp
add
xor
mov
ret
call
mov
xchg
push
mov
mov
jo
xor
mov
popa
imul
bound
cmp
sarb
xlat
cmp
pop
std
pop
pop
push
ds
lret
nop
fsubrl
sbb
push
fwait
addr16
cmp
pop
cmp
jp
fisubl
data16
push
lcall
std
test
xchg
das
jno
in
adc
scas
jl
in
add
add
popa
out
add
iret
imul
xchg
je
push
mov
das
cmp
cli
xchg
jmp
jb
and
gs
pop
or
clc
mov
mov
movsb
adcb
inc
outsb
adc
sbb
push
in
push
lea
loopne
and
push
xor
insb
jne
jno
add
xchg
push
ss
iret
aaa
test
lock
adc
cmp
pop
ret
add
scas
leave
imul
xchg
inc
int3
inc
mov
pushf
xchg
subb
repz
mov
add
mov
lea
mov
dec
repz
xchg
add
add
add
mov
sub
add
sub
mov
int
sub
mov
or
inc
inc
scas
or
out
mov
jmp
adc
or
xchg
fsubp
stos
cld
push
jp
in
ret
std
mov
mov
mov
adc
push
push
push
cmp
xchg
movsl
enter
sbb
enter
sbb
jmp
in
ss
xchg
movsl
adc
xchg
xor
add
jbe
mov
fadds
fldl
cmp
xor
cld
stc
lock
pop
int
int
pushf
imul
jge
pop
and
sub
mov
push
cmp
xchg
test
push
mov
dec
or
mov
push
push
dec
inc
push
dec
shlb
mov
aam
sub
rcrb
sub
pop
or
push
jl
push
movsl
and
cmp
xchg
xor
mov
xchg
loop
sub
mov
fcomps
into
inc
mov
daa
inc
aaa
je
lea
sahf
rolb
jecxz
movb
orb
sbb
shlb
imul
cmp
jmp
push
jecxz
mov
fst
out
cmpsb
pushf
push
stos
xchg
xchg
lds
call
pushl
cld
jge
out
movsb
popf
mov
jmp
or
in
sub
xor
xchg
xor
mov
jle
mov
popf
pop
lret
xor
divl
sub
push
jae
outsb
loope
test
sti
mov
sbb
scas
pop
es
je
or
rclb
leave
inc
mov
jg
xchg
imul
dec
mov
movsb
cmp
stos
mov
cmp
push
adc
mov
jl
lea
or
mov
sbb
rcl
mov
icebp
xchg
jmp
bound
iret
xor
enter
cmp
vphsubwd
sub
in
movsb
por
push
pushf
in
fs
mov
xchg
cwtl
ss
xchg
inc
push
dec
jg
ret
cld
adc
sbb
test
shrl
mov
cmc
sbb
pushf
jle
sub
cli
pop
push
lods
ds
mov
mov
addb
int
lahf
test
adc
push
pusha
sub
pop
mov
in
xchg
rolb
lods
push
sbb
push
or
mov
lods
outsl
or
xlat
movsb
pop
data16
lea
test
cltd
or
mov
sbb
push
cmpsl
std
xor
inc
jl
cmp
hlt
xchg
sbb
sbb
test
xchg
les
pop
push
mov
pmulhw
jbe
xlat
xor
lods
inc
add
mov
loopne
xor
xchg
mov
je
fisubrs
pop
lcall
enter
repz
pop
loop
insl
pop
clc
mov
shlb
div
and
and
js
mov
and
enter
popa
cwtl
aas
shlb
pop
xor
push
gs
jae
xorl
lods
cmp
lret
and
lcall
aaa
pop
sub
dec
mov
aaa
cmpsb
shl
sbb
ss
sub
mov
mov
pop
mov
xor
loope
pop
lcall
jge
xchg
adc
test
jmp
out
iret
push
cmpsb
mov
stos
inc
push
mov
push
or
scas
scas
sub
cmc
push
pop
pop
es
mov
fmul
gs
sbb
ss
xchg
pop
jl
ror
iret
popa
nopl
stc
hlt
sbb
das
and
jb
jl
test
cmp
mov
cmp
mov
lods
repz
shrb
push
fisubrl
in
dec
in
jg
pop
call
dec
sbb
mov
es
adc
adc
call
xor
ds
dec
push
adc
jae
jb
adcb
test
imul
add
es
push
dec
push
adc
mulb
pop
test
and
int
mov
mov
inc
les
cmp
and
pusha
cmp
or
lods
xchg
je
inc
inc
iret
xchg
jle
inc
mov
subb
rcrb
imul
sub
cmp
pusha
xor
jo
mov
add
cmp
cli
xchg
test
dec
ja
les
pusha
je
fstpl
stc
and
arpl
leave
arpl
mov
dec
mov
sub
imul
sbb
push
mov
scas
sbb
mov
or
sub
push
and
mov
sbbl
ss
mov
call
jbe
iret
fisubrl
in
xchg
cmc
aaa
psubq
insb
mov
sbb
fwait
int3
cltd
sub
iret
fnstsw
mov
sti
stc
push
mov
ficoms
cld
mov
mov
in
mov
aaa
fwait
into
and
insl
lods
jns
repz
movsb
or
incb
sub
mov
xor
jns
mov
rol
sub
mov
mov
pop
push
cmp
mov
inc
mov
ja
imul
insl
jecxz
out
jmp
or
sbb
pop
dec
arpl
mov
mov
ja
cmp
mov
mov
mov
inc
mov
jp
mov
mov
cli
fbstp
inc
pop
cltd
sub
jne
pusha
xchg
imul
lds
and
dec
mov
jo
mov
stos
out
adc
pop
xchg
jnp
cmp
loope
mov
sti
or
xchg
popa
adcb
xchg
shlb
jmp
outsb
subl
gs
pop
aam
dec
daa
mov
sbb
xorb
add
or
loop
push
mov
sub
insl
mov
cs
sarl
dec
dec
mov
cltd
mov
push
ds
mov
jl
xchg
punpckhdq
push
out
hlt
les
loop
enter
out
xchg
xchg
or
imul
and
je
cld
lahf
mov
jno
fistps
lret
or
xchg
push
fisttpll
mov
scas
clc
xchg
lahf
cld
xchg
jb
mov
daa
inc
movsl
dec
xchg
iret
mov
push
loope
out
fiaddl
js
repnz
ss
stos
pop
loopne
push
movsl
or
cmp
xchg
push
dec
ja
cmpsl
loopne
dec
adc
adc
xlat
push
push
jmp
jns
sub
clc
mov
xor
xchg
std
sub
test
and
test
out
and
jp
cltd
dec
loop
mov
movsl
js
mov
lcall
mov
je
imul
movsl
jno
addr16
es
sbb
js
fidivrl
inc
adc
cli
insl
sbb
cmp
stos
cmc
sbb
aad
mov
jge
clc
aad
dec
or
xor
jbe
sub
andl
out
test
rcll
jne
sbb
and
sahf
jmp
in
ss
and
mov
call
and
cld
icebp
sbb
lahf
mov
cmp
sarl
cmp
and
xchg
gs
mov
jae
or
ret
unpckhps
inc
clc
fiadds
push
roll
dec
mov
adc
outsb
xchg
fstps
shrb
es
or
or
jecxz
es
mov
xchg
lds
and
sbb
cmc
cs
loope
mov
inc
xlat
mov
cmp
pop
call
popf
xchg
cmp
mov
das
call
mov
jle,pn
pop
lret
repz
lock
sbb
push
push
cwtl
int
and
add
cmc
ds
mov
in
vpcmpeqw
arpl
push
mov
fisubs
jbe
sub
ficoml
add
and
arpl
mov
add
loope
push
mov
and
xchg
mov
fisubrl
out
iret
in
jmp
cmpsl
js
sbb
mov
loopne
and
mov
stos
mov
test
fnstsw
mov
push
ja
pop
test
arpl
enter
cmc
xor
dec
sub
mov
jb
inc
mov
aaa
jns
imul
pop
pop
cmpsl
loopne
cmp
lcall
xchg
cmc
sub
mulb
mov
jle
inc
xchg
and
pop
pop
adc
sarb
stc
leave
fs
jae
pusha
stc
mov
cmpl
and
and
mov
push
enter
mov
fdivrs
inc
inc
mov
mov
sbb
into
hlt
fwait
pop
mov
jmp
test
int3
fcmovnb
rol
addl
xchg
jmp
cmp
test
aaa
mov
in
push
fwait
xor
cmc
loop
pop
sbb
pop
fwait
gs
mov
push
jg
js
sarb
test
insl
and
stc
add
popa
add
xor
inc
fwait
test
inc
pop
shll
mov
pop
out
pop
in
mov
inc
xchg
enter
pop
cwtl
xor
pop
push
enter
hlt
add
sub
int3
cmp
in
xchg
xchg
cmp
sub
xchg
shr
ljmp
test
jb
sti
sahf
lds
push
mov
ja
icebp
jb
adc
inc
pop
mov
add
jae
test
and
shr
aas
cmpsl
inc
nop
jecxz
cmp
xor
mov
xchg
and
sub
add
adc
push
or
sub
sahf
inc
xchg
mov
mov
xlat
gs
mov
bound
test
aas
lds
push
and
mov
stos
movsl
dec
in
pop
mov
mov
cld
jne
sbb
jecxz
insb
in
ficomps
ja
and
push
addl
push
jecxz
ret
cltd
adc
pusha
and
fsubl
or
cmp
ret
sbb
xor
aam
mov
mov
inc
inc
cmpsb
cs
push
cmp
pop
push
push
insl
ret
lods
push
cmp
in
push
xchg
and
icebp
sub
inc
fistpl
dec
mov
sbb
or
outsb
push
fldenv
inc
xchg
push
mov
dec
sub
sub
loopne
mov
in
scas
xor
jp
add
and
and
adc
xchg
jecxz
pushf
cmc
and
pop
pop
data16
sub
loop
xchg
pusha
lock
imul
dec
popf
out
xchg
mov
inc
xchg
fistpl
in
push
fiadds
repnz
mov
xor
pop
arpl
push
mov
sbb
scas
jmp
pop
push
and
fwait
fwait
add
sub
test
mov
rcl
mov
loopne
inc
lahf
fimuls
mov
and
fdivrs
cmp
mov
mov
adc
fistl
sub
fwait
ret
sub
and
dec
push
dec
in
test
push
ljmp
repz
pusha
mov
mov
xchg
mov
dec
fs
ror
sbb
xchg
inc
push
push
cmp
js
cld
test
test
xor
out
popa
jp
xchg
pop
push
push
mov
jno
adc
in
andb
ret
ds
xchg
dec
iret
dec
and
nop
xchg
outsb
mov
or
adc
mov
push
imul
subl
mov
mov
pop
add
xchg
push
dec
jmp
je
fucomp
or
lods
adc
adc
lea
out
push
insb
sbb
test
scas
imul
sub
mov
inc
mov
imul
incb
dec
adc
sti
add
add
adcl
lods
inc
jo
int
fnsave
scas
sahf
jle
jmp
jbe
xchg
out
mov
adc
xchg
mov
mov
stc
hlt
cmp
pop
jge
jp
sbb
add
insl
mov
jbe
filds
pop
rcrb
lcall
xor
pop
into
push
jge
cmp
fiaddl
movsb
pop
mulb
pop
jge
and
mov
or
xchg
or
add
lods
addb
cmp
xchg
in
push
aas
pop
jno
dec
mov
or
pop
dec
clc
dec
pop
mov
cwtl
and
ret
mov
ficoms
or
dec
lret
push
outsl
mov
push
ljmp
xlat
lret
nop
pop
mov
lea
dec
dec
mov
addr16
xchg
adc
mov
popa
test
int3
lock
xchg
jb
enter
outsl
fiadds
fcoml
jo
rorl
and
jg
dec
hlt
test
movsb
loop
in
mov
sub
je
in
mov
mov
leave
call
xor
mov
mov
xchg
jg
arpl
mov
dec
pop
sti
xchg
dec
and
add
rolb
pushf
rcl
sub
inc
pushf
cld
xchg
out
or
xor
add
outsb
rol
xor
lret
xchg
inc
and
test
inc
iret
mov
jnp
inc
and
push
bound
cltd
xchg
pop
sub
stos
aas
inc
or
adc
inc
sbb
add
adc
adc
mov
xchg
repnz
icebp
jg
stos
int
loopne
loopne
jbe
dec
ss
sub
push
xorps
das
leave
jge
int3
stos
jno
add
dec
mov
and
push
add
mov
or
jns
add
rcll
aam
add
and
lea
imull
mov
inc
add
adc
jo
sahf
cmp
adc
ror
test
mov
insl
repz
ljmp
jl
shr
jbe
hlt
cltd
movsl
mov
lahf
inc
imul
ror
nop
cmp
jne
xor
xorl
test
fidivl
and
mov
imul
push
fidivrl
iret
dec
cs
xchg
or
outsl
sub
test
lcall
cmpsb
add
xchg
mov
pop
stc
sahf
cmpsb
ret
data16
sub
and
call
mov
pushf
add
add
add
popf
lcall
or
mov
push
fbstp
xchg
out
mov
inc
sbb
and
mov
or
ljmp
adc
andb
sbb
add
and
sbb
call
int3
out
mov
mov
mov
stc
adc
and
es
jne
xchg
add
pop
mov
mov
xchg
xor
xor
pop
cwtl
movsl
notl
and
or
add
shll
out
adcb
push
sub
jns
int
mov
mov
es
xor
push
ljmp
inc
sbb
mov
pop
jbe
push
jo
js
sub
sub
int3
sub
inc
insl
mov
aaa
mov
inc
hlt
in
jo
mov
sub
adc
lods
adc
popa
or
mov
fidivrs
mov
adc
pop
pop
push
out
sahf
mov
or
jb
or
pop
popa
les
xor
enter
dec
ja
cltd
out
int3
leave
outsl
fnsave
movsb
or
filds
cmp
sbb
cwtl
or
add
ficoms
es
bound
push
mov
pop
loope
movsl
adc
repnz
push
inc
loopne
mov
inc
mov
daa
pop
lock
stos
or
inc
push
mov
addr16
adc
stos
fistpl
fidivs
mov
pop
mov
cmp
xorl
pop
je
pop
jge
mov
cmpsl
fisubl
movsb
or
fcomip
inc
lahf
push
inc
in
ret
cli
and
ss
shl
jmp
jns
popf
jg
push
out
fsubp
pop
jne
sarl
xchg
ret
mov
cmc
mov
and
shll
sti
push
pop
mov
pop
push
or
cmp
bound
in
test
dec
or
push
cmp
inc
mov
rcl
jl
push
aam
shlb
push
cld
mov
add
ficomps
mov
mov
dec
stc
adc
popf
es
enter
mov
mov
ljmp
pop
sbb
lds
mov
or
mov
push
add
cmc
adc
mov
pop
bound
lret
jno
xchg
rcrb
out
mov
in
cmp
add
in
stc
cld
or
sub
cli
push
mov
mov
stc
stos
lea
out
inc
stos
test
push
adc
popf
roll
lea
xchg
cmc
push
xor
int
xchg
jle
fisubrl
sub
mov
hlt
in
outsl
ss
mov
add
cli
pop
sub
adc
sbb
cmc
sub
sub
sti
mov
push
xor
dec
adc
std
sbb
pop
inc
jg
loopne
pop
in
push
dec
fdivp
pusha
cmc
xchg
lock
cmp
or
xor
add
sbb
insl
lcall
cmp
outsb
popa
in
xchg
daa
mov
cwtl
sub
pop
fidivl
out
push
sbb
sub
inc
adc
insl
insb
arpl
out
aas
insb
pop
push
xchg
cmc
in
pusha
inc
push
inc
jg
mov
icebp
arpl
out
insb
incb
jbe
ljmp
mov
dec
pop
in
add
push
mov
push
xchg
pop
outsl
insl
push
or
mov
iret
loopne
popa
mov
xor
cmpsb
popf
mov
add
xchg
fcmovnb
pop
int
inc
adc
cmc
jecxz
jno
xchg
js
mov
subb
cmp
adc
data16
add
arpl
adc
add
aas
push
inc
ror
adcl
repnz
fs
or
insl
xor
dec
test
ss
fildll
ret
test
js
sarl
or
pop
sbb
sbb
sbb
add
mov
jae
add
mov
xor
sbb
mov
popf
aaa
ja
test
call
imul
and
shll
rclb
aas
in
jp
lds
xchg
hlt
scas
pop
cmpb
add
add
mov
sbb
xlat
je
add
lods
test
gs
ret
repz
or
xchg
lret
ljmp
ljmp
mov
xchg
leave
lret
lods
xchg
mull
cli
xor
xchg
loopne
cmp
inc
scas
imul
roll
call
mov
push
cmp
fiadds
roll
mov
outsl
or
push
ficompl
inc
dec
mov
add
incb
xlat
mov
xchg
pop
je
xchg
push
jp
leave
jbe
jmp
xchg
cmpsb
ja
lcall
push
xchg
jnp
shlb
ret
sbb
jge
popf
mov
jmp
mov
push
cmpsb
insl
xor
fnstenv
and
ret
dec
jo
aad
inc
test
std
jmp
mov
mov
mov
test
icebp
dec
and
call
lds
vmaxss
ret
xchg
pushf
cmpsb
cmp
dec
sub
clc
ret
enter
pop
mov
jno
adc
das
subb
int
cmp
mov
in
in
fistpll
jg
push
cmp
or
addr16
mov
data16
sub
pop
sbb
xchg
fisubs
xchg
lods
inc
and
or
pushf
lods
dec
xchg
jae
xor
jae
gs
insb
gs
lods
out
push
pop
out
cmp
add
ret
mov
dec
and
movsb
jae
adc
inc
dec
or
xchg
lret
inc
adc
sti
std
dec
adc
pcmpeqw
cmp
movsl
push
in
sbb
pushf
fs
adc
lea
gs
hlt
ljmp
push
je
movsb
lock
pop
lret
in
pusha
adc
in
xor
inc
mov
mov
push
cwtl
xchg
add
xor
mov
pop
mov
hlt
mov
popl
cmp
es
mov
jbe
stc
and
push
ret
sub
xor
movsb
fsubp
pop
add
pop
loop
mov
das
aas
jle
xor
push
cmc
lock
sbb
out
add
xchg
adc
add
xor
and
mov
sub
pop
push
push
push
jns
movsl
mov
dec
pushf
mov
dec
popf
inc
xor
repnz
imul
faddl
mov
fdivl
xor
shll
inc
inc
ror
insl
push
sub
push
out
aad
cmp
sbb
and
jle
popa
iret
in
jbe
jne
gs
clc
popa
popf
hlt
sub
adc
out
mov
lret
mov
inc
shrb
jmp
adc
call
das
nop
insb
in
fiadds
in
cs
cmc
sub
xchg
adc
les
lea
and
hlt
cld
xchg
jno
aas
jmp
xchg
movsl
and
inc
out
movsl
ret
xor
xchg
ja
cmpsb
jae
popa
xchg
add
pop
xchg
fstps
mov
mov
ficomps
push
jecxz
dec
and
ret
add
dec
xchg
mov
mov
lcall
mov
or
push
adc
sbb
in
scas
cmpl
dec
sahf
pop
inc
stc
ja
mov
jnp
dec
loop
scas
add
orb
mov
lea
outsl
icebp
xor
jo
and
xor
push
outsb
pop
insl
jl
mov
aam
shrb
test
lahf
orl
fst
inc
lea
push
and
arpl
in
or
jp
sub
stc
cmp
mov
gs
and
inc
mov
dec
mul
xchg
aad
div
ja
popa
out
enter
jl
test
loopne
adcl
add
cmp
cltd
mov
sub
ljmp
and
lock
push
imul
push
add
data16
or
and
inc
mov
ds
sbb
sarb
xor
stc
push
insl
lods
mov
xor
roll
mov
pop
xchg
mov
jno
shlb
add
adc
pop
into
insl
dec
leave
lea
inc
repnz
jno
jp
es
rorb
into
xor
dec
fisubrs
aam
call
push
mov
sbb
lahf
xor
int3
les
fwait
lds
cmp
fmull
fistps
push
adc
adc
and
mov
lahf
mov
push
fisttps
pop
push
mov
icebp
and
xor
loop
mov
push
push
push
inc
outsb
pushf
xchg
adc
lret
push
xchg
stos
pushf
mov
popf
fisttps
pop
negl
pusha
adc
sbb
cmp
inc
sbb
mov
js
xchg
daa
orb
jb
cmovae
xchg
adc
mov
add
jg
or
sbb
hlt
xor
xchg
lock
xchg
and
xor
adc
in
ja
fcomp
lcall
clc
testb
xchg
inc
fbstp
mov
xor
lcall
mov
sbb
fs
inc
rcll
in
adc
cld
iret
data16
imul
or
xorb
dec
int
shrl
inc
jb
cmp
gs
bound
and
adc
inc
mov
xchg
in
movb
mov
mov
in
adc
in
pop
pop
arpl
daa
fldl
mov
xor
xchg
test
movsl
pushf
test
or
xchg
ds
mov
push
mov
inc
xchg
push
xchg
lahf
and
sub
into
int3
push
lahf
fs
jl
xchg
mov
sub
mov
push
arpl
cmp
mov
fs
xchg
mov
mov
ds
movsb
stc
mov
inc
mov
mov
cmp
fwait
push
mov
into
aas
leave
mov
shl
or
ret
rcrb
mov
cli
lods
pop
mov
enter
into
mov
jns
mov
sbb
cwtl
xchg
sahf
push
adc
sbb
mov
lcall
in
fdecstp
stos
add
icebp
lock
shr
mov
mov
mov
dec
dec
push
out
roll
cld
sbb
dec
aam
incl
sub
mov
add
or
pop
pop
pushf
mov
inc
leave
fcmove
pop
sub
jl
into
push
cmpsb
sbb
pushf
shrb
adc
dec
in
shl
popf
jg
scas
aam
test
cwtl
das
loop
and
addr16
jb
jl
notl
fdivrs
mov
mov
lcall
and
mov
or
das
ret
jb
repz
adc
rcrb
dec
jbe
aam
pushf
sub
fimuls
test
or
mov
lcall
ret
sub
sub
daa
add
jno
push
pop
loop
scas
adc
sub
sbb
inc
xor
and
sbb
cwtl
cli
shll
dec
inc
movsl
adc
fwait
or
loopne
call
cld
iret
retw
push
adcb
xor
push
push
gs
arpl
cmp
outsl
addr16
add
add
pusha
sti
adc
ret
jecxz
mov
and
out
xor
in
sub
das
js
rorl
cmp
mov
je
lret
xor
dec
dec
xchg
xor
daa
aad
rcll
subl
push
sbbl
cli
pop
lcall
sahf
add
repnz
xor
fst
sbb
rcll
popf
jle
addb
imul
cmpb
pop
lret
sarb
call
bnd
mov
daa
pop
cmp
jns
jl
mov
mov
jbe
cs
and
gs
push
fwait
repz
or
or
pop
arpl
mov
and
out
adc
aas
out
data16
repnz
inc
mov
xchg
xchg
push
dec
ja
in
mov
or
xchg
cmovno
arpl
adc
pop
sbb
andb
mov
ljmp
rcpps
mov
mov
lret
xorl
mov
dec
movsb
cmc
shll
lret
add
or
sti
stc
int
and
jne
movsl
fisttpl
add
adc
sub
gs
push
sub
pop
in
cs
xor
cmpsl
dec
cwtl
xor
nop
in
fcomps
xchg
pop
xor
outsl
cmp
jbe
repnz
test
in
test
mov
aas
or
test
lods
or
xchg
adc
fwait
popa
sbb
pop
sbb
jne
adc
lods
fldt
lea
dec
sub
iret
jbe
xchg
movsb
xorb
push
pop
movsl
pop
testl
movsb
inc
fucomi
dec
in
push
sbb
insb
inc
push
pop
push
mov
lret
cld
cmp
not
lahf
stos
mov
sbb
mov
popf
subb
xor
push
insl
pop
inc
fmull
aad
and
test
ret
int3
fsubrl
add
daa
add
add
mov
popa
adc
add
daa
repz
xor
sub
ljmp
mov
jmp
xchg
adc
test
sbb
xor
pop
cmpsl
cmpsb
adc
pop
pop
cmpsl
in
movb
shll
pop
mov
push
and
mov
mov
mov
dec
adc
clc
lret
pop
ss
pop
fimuls
jbe
jle
outsl
bound
lds
arpl
xor
sti
jnp
icebp
fldenv
dec
adc
and
adc
inc
cli
xchg
inc
gs
add
stos
cmp
push
and
repnz
push
rorb
push
jmp
aaa
int3
or
sbb
xor
inc
xlat
pushf
cmpsl
dec
lahf
xchg
or
pop
or
jp
add
mov
mov
scas
add
out
dec
or
cld
mov
mov
inc
mov
inc
cltd
pop
mov
ds
inc
leave
lret
mov
xor
fwait
push
mov
or
andl
mov
pusha
pushf
adc
push
cmp
rorl
cld
adc
shll
cmp
outsl
push
inc
mov
jg
int3
mov
lret
stos
notl
or
mov
push
cli
sbb
mov
int
popf
sbb
mov
mov
clc
cltd
pop
or
insb
arpl
ss
mov
inc
mov
cli
pop
mov
gs
inc
mov
mulb
xor
jp
mov
movsb
push
jmp
jbe
add
lret
push
jbe
out
pop
int3
inc
add
call
pop
lret
pop
dec
xchg
cmp
and
sbb
lret
daa
clc
pop
je
xchg
sbb
lods
xor
loope
cmp
jnp
and
pop
adc
mov
aaa
pavgb
test
in
inc
mov
in
mul
jbe
fmull
mov
xchg
ljmp
ja
cmpsb
fwait
test
int3
imul
xchg
push
jle
faddl
les
push
rcrb
sbb
jno
loopne
xor
inc
mov
rcrl
xchg
jno
sbb
inc
stos
adc
push
clc
nop
in
inc
repz
in
and
ss
push
or
inc
mov
ljmp
push
pop
push
dec
pop
cmpsl
dec
adc
xchg
cmc
and
dec
inc
jg
xchg
xchg
mov
out
cltd
inc
push
adc
out
lock
fwait
mov
loopne
inc
push
pushf
xor
kmovd
out
pop
cltd
add
bnd
test
ljmp
dec
pop
xchg
xchg
jne
test
mov
in
loopne
or
insl
jnp
pusha
jmp
xor
shll
std
lret
or
jecxz
mov
ja
out
pop
jg
lret
push
cmp
loope
roll
mov
outsb
xor
mov
sahf
lcallw
mov
hlt
scas
rorb
dec
mov
idivl
pop
push
movsb
and
or
adc
andl
enter
int
cmp
pop
mov
xchg
inc
imul
xor
push
pop
das
xchg
sub
mov
sbb
outsb
inc
jns
push
sub
jb
enter
jle
adc
jnp
xor
push
xchg
jno
or
adc
jl
mov
mov
mov
clc
inc
pop
aaa
xchg
outsl
and
lahf
movsb
and
jl
and
insl
mov
mov
rcr
lcall
shrb
inc
push
pushf
xchg
cmp
dec
leave
cwtl
xor
fidivs
lods
cld
add
push
jno
add
popf
mov
or
in
and
fwait
int
rcrl
inc
out
iret
inc
or
fnstcw
js
arpl
insl
ss
lods
inc
jg
gs
stc
lcall
xchg
push
dec
cld
dec
xchg
inc
std
sub
cltd
or
ret
mov
ret
lea
inc
nop
stos
aas
out
lods
mov
pop
add
hlt
sbb
stc
and
les
sub
sahf
adc
jl
rclb
jg
test
dec
dec
lea
add
aaa
fwait
pop
repz
cli
js
sbb
fidivrs
mov
sbb
bound
pop
jne
pop
mov
cltd
adc
cs
stos
pop
dec
and
dec
pop
mov
rorl
andl
call
subb
out
cmp
inc
stos
sbb
out
jb
cmpsb
push
sub
or
fdivp
mov
jno
jno
sti
sbb
rclb
push
shll
push
pop
and
test
stos
cmp
inc
std
jbe
adcl
mov
dec
xor
repz
add
dec
mov
and
das
pop
arpl
sub
pop
or
cmp
lret
mov
pushf
inc
push
adc
test
jns
dec
and
dec
jb
jne
test
bound
adc
imul
lret
jecxz
mov
ljmp
std
insb
xlat
test
pop
repnz
dec
stc
push
or
fwait
ret
mov
std
divl
in
sub
rcrl
mov
out
add
fwait
out
das
punpckhbw
inc
mov
mov
add
aaa
mov
stos
xchg
ror
jl
add
pop
jp
fidivs
jae
cs
ljmp
int3
insl
adc
pop
mov
pop
and
fsubl
push
fldenv
push
sbb
outsb
inc
xor
mov
sbb
add
ljmp
les
sub
sbb
rorb
scas
jmp
xchg
and
and
mov
inc
ret
sti
mov
pop
push
cmpsb
push
xor
mov
xchg
jge
enter
sub
dec
ds
jp
push
int
negb
fdivrp
sub
insb
mov
mov
jmp
or
int
cmpsl
cmp
mov
sub
shrl
mov
les
gs
cld
jno
imul
xor
clc
mov
pusha
push
and
mov
mov
pusha
call
cmc
sbb
push
cmp
not
mov
dec
dec
xchg
sbb
mov
in
lock
or
int
mov
out
and
idivl
popf
ret
loope
loop
sub
sub
sahf
or
mov
mov
ja
cmp
xor
notb
stos
xchg
mov
mov
or
xor
pushl
add
fbld
fldl
adc
and
add
sub
scas
es
mov
jp
loope
adc
fucom
mov
mov
mov
lock
int
pop
fnstcw
movsl
mov
nop
leave
in
cld
xchg
in
jnp
mov
add
mov
jl
mov
mulps
and
inc
addr16
pop
jle
and
imul
test
and
fsubs
psubw
jns
xor
pusha
and
int3
jo
inc
cmp
jp
lods
sub
sbb
test
mov
and
repz
and
lea
sbb
frstor
pushf
push
ss
clc
lea
fcomps
push
inc
sub
test
in
pop
push
hlt
jb
pushf
mov
jnp,pn
imul
fistpl
pusha
lods
dec
push
mov
das
adc
dec
or
pop
mov
dec
mov
inc
test
out
imull
stos
xor
mov
icebp
stos
and
and
push
push
les
mov
sar
add
and
test
data16
fbld
in
nop
leave
pop
cmpsl
push
nop
mov
scas
cmp
adcl
push
inc
or
xchg
inc
scas
or
pop
dec
inc
sbb
push
ja
xor
in
mov
jns
ds
inc
dec
push
fidivl
mov
cli
out
stos
xchg
mov
cmp
or
push
in
or
stc
and
inc
gs
mov
add
sub
sar
cmpsl
pop
inc
mov
jg
mov
dec
test
sbb
in
xor
inc
hlt
lret
xchg
sbb
bound
scas
pop
cld
int
cmc
pop
es
insb
stos
ljmp
inc
and
sub
fcompl
fdivrl
dec
scas
daa
push
icebp
stc
pop
jge
insl
mov
inc
jnp
gs
stc
jae
loope
push
lock
jne
movsb
jp
mov
push
push
inc
insb
out
mov
ficoms
mov
xor
int3
push
rolb
sti
outsb
mov
call
cld
out
ljmp
loope
cmpb
std
fsubl
insb
aam
xchg
push
xor
shrl
sub
and
ds
add
call
rorl
fimuls
cs
movsb
and
out
xchg
xor
rorl
shlb
outsb
inc
shlb
repz
pop
add
mov
ret
inc
add
out
in
test
push
out
jnp
cmp
scas
xchg
mov
push
push
inc
idivl
out
inc
repnz
cmp
aas
pop
add
or
imul
xchg
dec
xor
sbb
hlt
fadds
addr16
push
push
mov
cmp
xchg
dec
aam
pushf
popf
fnstenv
mov
cltd
cwtl
call
scas
xchg
in
ret
cmp
xchg
popa
jne
sbb
jg
les
mov
pop
rcrl
jecxz
jae
stos
aam
stc
mov
mov
test
mov
dec
and
inc
es
xchg
ss
test
incl
fmuls
add
push
fidivl
leave
and
idivl
sbb
aas
lret
mov
mov
iret
aaa
out
lods
imul
push
lahf
sahf
fneni(8087
mov
shl
add
lea
aam
sbb
fisubl
inc
sub
mov
das
notl
xchg
add
test
dec
fistl
sbb
and
sahf
dec
push
les
and
push
notb
mov
push
repnz
push
dec
pop
cltd
xlat
inc
and
jp
insb
rorl
mov
push
dec
mov
jae
ja
xor
fst
fwait
dec
inc
push
push
adc
sbb
sbb
jge
into
and
pusha
mov
pushf
pop
dec
dec
fwait
js
insl
mov
aas
fs
repz
xor
mov
into
movsl
jmp
sub
xor
inc
arpl
mov
outsl
push
dec
adc
test
and
xchg
pushf
dec
mov
adc
lea
jmp
or
adc
pop
inc
xor
lock
mov
xor
push
sub
gs
jg
mov
ljmp
mov
xor
dec
repnz
lds
in
jle
scas
mov
xchg
cwtl
shll
iret
jmp
ds
aaa
push
adc
mov
mov
jb
xchg
loopne
das
imul
push
cmp
sbb
jb
dec
clc
cwtl
test
in
pushf
lret
fistl
lds
jb
leave
js
scas
xor
pusha
lcall
and
ds
xor
mov
stos
mov
xchg
push
add
push
clc
push
dec
icebp
and
push
lret
mov
fwait
jg
sub
xlat
xchg
jg
leave
pop
adc
jle
and
addb
jg
in
mov
cwtl
test
fbstp
adc
aam
outsb
dec
loop
fnstsw
pop
jle
mov
xor
adcl
mov
cmp
xchg
push
insl
aad
push
xor
dec
mov
sti
pusha
sub
stos
adc
test
fsubrl
mov
cwtl
daa
xor
das
xor
ret
mov
test
hlt
inc
adc
add
fldenv
sbb
adc
push
or
jae
sbb
das
or
loop
mov
sbb
and
repnz
call
in
inc
lahf
inc
push
and
bound
xor
in
xor
fmull
mov
mov
cmp
xchg
inc
pushf
and
xor
push
divl
ficompl
clc
add
xchg
fmuls
lods
lret
adc
popf
in
jle
sub
lret
add
dec
xor
aaa
scas
jecxz
popa
add
push
lds
dec
inc
inc
pop
fdiv
outsb
cmp
cmp
jg
add
loop
loopne
dec
mov
sbb
jmp
mov
sbb
jb
sub
je
and
jp
rclb
or
aam
xor
out
aad
ds
mov
fwait
jl
mov
jno
out
sbbb
xchg
and
or
imul
sarl
push
xor
push
dec
filds
cwtl
gs
es
mov
nop
cmp
mov
cmp
lahf
pop
das
ljmp
jno
inc
adc
or
gs
xchg
out
lock
cmp
push
xchg
nop
jae
cmpl
repz
pop
out
inc
mov
add
mov
and
notl
fs
jo
lcall
rclb
xor
stc
pop
ficomps
repz
cmc
adc
fcmovbe
xchg
scas
xor
vrcpss
lret
addr16
mov
pop
push
out
ljmp
xchg
ss
ret
nop
inc
rclb
sub
popf
stc
sub
inc
adc
popa
jmp
test
call
mov
cmp
push
push
pop
std
cmp
call
shl
fildll
cmp
in
inc
imul
cmp
js
push
repz
sahf
jg
mov
in
shll
add
push
push
es
cmp
adc
inc
push
sbb
xor
mov
pusha
ret
lea
daa
xorl
jno
push
ss
and
aad
in
cmp
cld
mov
jne
inc
outsb
mov
push
addr16
rcrl
sbb
dec
scas
jne
push
jmp
popa
mov
xlat
inc
lods
fs
fcomip
pop
int
pop
xor
in
stc
rorb
dec
sub
xor
sub
icebp
xchg
aas
lods
inc
xor
xchg
sub
std
jo
sarb
cmp
in
sahf
out
sub
and
push
inc
loop
jbe
imul
dec
mov
mov
inc
pop
add
mov
push
notl
aad
imul
loope
js
add
inc
inc
popf
pop
movsb
int3
dec
and
xor
and
lea
daa
lods
pop
imul
sbb
sub
mov
in
sbb
mov
xor
mov
pop
shl
je
out
add
xor
add
rcrl
pop
lods
cmp
imul
jg
scas
and
pop
xchg
mov
jb
pusha
mov
dec
push
inc
enter
dec
js
subl
mov
xchg
push
cmc
xor
xor
lea
movsb
incl
mov
fsubrp
int3
jl
aaa
pop
mov
xor
std
xchg
dec
lahf
data16
aam
mov
ljmp
mov
fmulp
ret
sbb
nop
xchg
lea
or
imul
mov
insl
loop
jl
cld
inc
imul
in
xchg
mov
enter
lods
cli
fwait
xchg
mov
mov
and
adc
inc
push
cli
repnz
adc
popf
push
xchg
fwait
xchg
ss
stc
mov
fisubrl
pop
iret
or
fstps
loop
ret
sub
mov
push
pop
mov
pushf
xor
cwtl
push
mov
push
add
xchg
pop
inc
xor
lock
clc
call
sub
xor
fstpt
std
dec
jmp
incb
sub
cmp
lock
inc
dec
push
push
mov
mov
dec
je
xchg
je
ss
data16
sub
test
xchg
add
jl
jb
repnz
scas
lock
rorb
mov
push
jle
lods
and
jnp
and
push
cltd
fisubs
scas
sbb
cmc
fisubrl
adc
cld
sub
mov
sub
sub
out
sbb
fsubr
iret
movsl
jae
sub
pop
mov
mov
das
test
sbb
cld
push
inc
cmc
cmp
flds
pop
stos
pop
xor
xchg
pop
test
jbe
push
xchg
mov
scas
mov
ror
pop
pop
dec
repz
pusha
xchg
jl
inc
add
jmp
hlt
daa
dec
fsubr
mul
push
fcoms
and
ret
pusha
lds
dec
in
fidivrl
dec
mov
jns
popa
into
pop
stos
fcmovb
sbb
and
push
cmp
push
push
lock
cs
lods
dec
add
aad
fisubs
jb
mov
pusha
popa
clc
in
out
ficomps
les
fmuls
cmp
stos
shrl
fucomi
jo
fwait
or
aad
addb
les
sub
jmp
fildll
or
scas
cmp
fdivrs
outsl
jns
adc
lods
cmpsb
movsb
cli
pop
sbb
stos
pusha
sbb
adc
addr16
test
fimuls
loope
push
adc
daa
incl
cmp
fcoms
xor
cmpsl
pop
imul
add
arpl
xor
pop
fldcw
pop
jne
push
mul
push
sbb
lods
lcall
push
dec
std
lock
pop
push
das
fsts
add
idivl
push
fiadds
test
fs
and
pop
jnp
roll
bswap
sar
movb
pop
jne
sub
mov
dec
and
test
cld
sahf
or
jbe
mov
nop
mov
das
imul
and
jl
or
outsl
inc
push
and
inc
out
add
sub
insl
add
hlt
mov
jg
jo
cmp
imul
sbb
inc
repz
xchg
aad
push
sbb
divl
ret
imul
mov
inc
popf
xchg
leave
mov
cmp
pop
cmp
lret
lcall
lahf
je
stc
adc
cmp
outsb
sti
movsl
mov
popf
std
fisttps
outsl
aad
insb
push
hlt
inc
push
mov
dec
mov
sbb
jae
dec
loop
repnz
sti
adc
ficoms
cmp
mov
and
test
inc
sub
insl
and
add
inc
dec
sbb
inc
data16
jmp
xor
aam
pop
into
jg
fs
je
fldt
push
cmp
push
xchg
scas
push
inc
sbb
cli
dec
fadds
pop
scas
sub
sbb
jmp
push
push
xchg
add
fisubl
mov
dec
xor
clc
cmp
ja
adc
xor
pop
cs
mov
ret
outsb
inc
jecxz
push
movb
inc
adc
add
and
gs
imul
jmp
aam
test
pop
add
das
lea
out
idiv
rcrb
dec
addr16
pop
test
mov
out
push
fcmovnb
xchg
das
out
shl
adc
popf
mov
cmp
mov
pop
mov
push
push
add
inc
out
cmpsl
pop
filds
dec
into
bound
pop
ss
cwtl
add
mov
dec
cmp
jo
pop
mov
and
mov
pop
lcall
nop
and
pop
insl
arpl
pushf
and
lahf
clc
fistps
cmp
subps
repz
repz
mov
lret
push
sub
sub
lock
fstpl
and
pop
jno
int
mov
lods
imul
cwtl
cmpsb
inc
xchg
imul
shr
fcmovu
stos
and
sbb
mov
sub
pushf
xchg
imul
pop
and
addr16
jns
xchg
in
test
inc
mov
clc
jo
push
push
enter
enter
fucom
mov
sub
and
dec
fstps
stos
xchg
adc
jle
rorl
adc
xor
cld
sub
cmp
lret
ss
call
cli
rcrl
lods
cmpsb
jo,pt
add
ds
xor
insb
stc
adc
dec
lcall
jae
enter
mov
outsb
lods
outsb
pop
js
xchg
scas
movsl
add
insb
aaa
pop
sbb
add
cmp
flds
push
repnz
mov
rclb
sbb
inc
in
mov
sub
and
test
test
add
aaa
inc
xor
orl
stos
in
or
gs
sub
imul
ds
sbb
aam
dec
inc
dec
cmpsl
test
push
scas
dec
or
inc
repz
lret
inc
fucomp
and
mov
hlt
aaa
pushf
adc
test
mov
and
pop
leave
push
add
addl
mov
cmp
jmp
nop
repnz
adc
int3
or
rolw
dec
andl
inc
insb
vfnmsub213ss
orl
cltd
xchg
jae
mov
mov
push
adc
divb
out
je
dec
add
push
xchg
xchg
cmp
out
pusha
and
pop
or
stos
or
adc
push
ficompl
dec
shll
fmul
and
cli
int
push
ret
cs
xor
pop
mov
push
pop
sub
xorb
fstp
inc
cmp
sbb
daa
lea
dec
into
jae,pt
mov
pop
shll
rclb
jbe
cltd
inc
jmp
xlat
pop
inc
mov
xor
push
add
gs
xor
mov
push
mov
lods
lahf
xchg
cmp
popf
fstps
and
jnp
icebp
mov
rol
into
sti
dec
ret
and
loop
clc
jbe
out
and
daa
sbb
je
inc
leave
inc
mov
inc
cmpsb
add
sbb
inc
or
or
fbstp
inc
in
arpl
mov
clc
shlb
sbb
mov
popa
mov
mov
js
xchg
lret
jp
xor
lock
push
into
jae
xchg
jle
cmpsl
lcall
mov
out
gs
xchg
test
loopne,pn
test
xor
dec
mov
lods
sti
outsb
mov
pop
sahf
sti
sbb
pop
cmp
push
xor
cld
add
scas
inc
movsl
stos
xlat
add
xlat
and
into
adc
push
or
pop
and
push
nop
arpl
and
rorl
sub
push
shrb
or
cmp
dec
pop
inc
dec
mov
mov
cmp
shlb
stc
xchg
cmpsb
jbe
xor
or
add
adc
jno
mov
fimuls
lods
sahf
jp
pop
insb
inc
add
xchg
lods
sbb
insb
sbb
pop
or
cltd
cwtl
lret
mov
or
out
jge
mov
mov
pop
xchg
popa
sbb
sbb
jne
pop
fwait
mov
sbb
push
dec
push
fisubl
cltd
in
or
test
frstor
lods
fistl
mov
add
sahf
test
ja
cmp
aam
outsb
outsl
stos
ja
insl
lea
lret
and
mov
in
loope
rcll
and
xchg
dec
pop
data16
xor
and
stc
pop
insl
insl
cmc
fstp
mov
bound
xor
mov
add
rol
sarl
inc
ljmp
fimull
outsl
loopne
or
mov
test
dec
testb
sub
xorl
pop
adc
add
cltd
leave
cmp
jge
dec
scas
leave
cmp
mov
jns
in
mov
xor
daa
lahf
enter
ret
out
outsb
repnz
mov
pop
scas
rcr
repz
ljmp
sbb
ja
out
dec
add
push
pop
mov
or
idiv
negb
inc
push
pushf
js
clc
popa
add
push
inc
enter
xchg
test
dec
das
jle
frstor
addb
inc
fst
cwtl
xchg
jnp
add
mov
stos
xor
dec
dec
in
lods
pop
pushf
mov
sahf
adc
xchg
mov
sahf
arpl
or
outsl
mov
out
inc
stc
lret
inc
mov
mov
mov
cli
xor
push
mov
lds
mov
push
sub
and
daa
inc
jbe
mov
imul
jecxz
lcall
or
add
loopne
cmc
cld
dec
sbb
xchg
sti
daa
pushf
aas
bound
xor
js
fstpt
push
xor
mov
dec
xchg
sub
pop
mov
cltd
mov
mulb
clc
cmpsl
cmp
cmp
stos
jle
xchg
push
adc
sbb
mov
shrb
lret
arpl
popa
sub
cmpsb
mov
iret
aam
arpl
jb
les
sub
push
push
push
mov
push
pop
xchg
mov
popa
mov
std
imul
cmpsb
inc
pusha
pop
cmp
fildll
mov
loop
data16
mov
lods
pop
fnstsw
mov
setge
out
pop
add
popa
add
cmpsb
test
ret
pop
and
fsubrl
in
jle
test
mov
js
push
sarb
inc
fsub
xchg
leave
cmpsb
adc
sub
sub
sar
or
and
jle
lahf
inc
sub
and
pop
addl
stc
sahf
lahf
int
and
std
clc
fldt
xchg
mov
push
push
jmp
test
cmp
movl
mov
sbb
dec
xor
fmul
mov
and
mov
mov
repnz
ret
adc
fwait
xlat
xor
cld
out
lahf
add
jo
fwait
push
push
pop
adc
sub
divl
push
pop
and
push
sub
pop
dec
add
lahf
je
pop
lret
cmp
jge
faddl
xorb
mov
in
mov
adc
push
iret
shrb
pop
jnp
js
push
lock
pop
mov
mov
rorl
cmp
leave
idiv
and
xchg
in
xchg
ljmp
stos
daa
mov
movsb
inc
cmc
mov
mov
mov
into
sbb
pop
mov
test
imul
and
sbb
mov
lods
stos
dec
cmp
sub
mov
orl
pop
adc
dec
call
popa
xor
mov
xchg
adc
into
outsl
mov
xor
repz
mov
mov
mov
jns
les
lret
rclb
mov
push
addr16
pop
mov
and
cmp
adc
jmp
hlt
mov
and
mov
js
or
or
sbb
jno
addr16
jle
inc
loop
and
pop
call
icebp
lods
xor
push
stc
out
movsl
int
cld
or
outsb
xor
cli
idivl
push
jnp
enter
jp
jb
xor
test
jmp
scas
addr16
jge
cltd
xor
mov
push
inc
xor
add
icebp
stos
stc
insl
std
inc
add
mov
mov
pop
xchg
jns
pop
in
fsubs
dec
fmuls
jne
mov
push
lods
in
lods
adc
jg
sahf
loop
lret
mov
mov
subl
cmpsl
insl
sub
jg
int
add
mov
adc
pop
shl
lea
push
sub
xchg
jl
int
ss
cmp
jb
cmpsl
lods
pop
add
nop
movsb
pop
dec
dec
xchg
and
push
stos
sbb
enter
stos
jle
fwait
lret
mov
pop
aas
mov
clc
into
mov
jg
inc
jg
mov
ja
std
insl
es
fidivl
sar
out
decl
dec
mov
cmp
push
add
cmp
shr
shl
mov
clc
notl
in
outsb
daa
ja
jge
or
fs
scas
adc
pop
js
sbb
movsl
int3
xor
loopne
lds
mov
imulb
data16
rcl
mov
mov
out
sub
sbb
fildll
inc
ss
xchg
push
mov
cli
lret
jno
push
cmpl
cwtl
lods
das
lret
data16
mov
je
outsl
jae
testb
imul
outsb
sbb
stc
cwtl
sbb
sub
push
and
xor
out
pop
push
dec
jo
adcb
dec
mov
sub
adc
jecxz
cwtl
rep
pop
mov
insb
mul
stos
dec
call
jg
or
jl
cmp
mov
jp
popa
jne
faddl
sbb
mov
movsl
or
lcall
push
cmp
add
clc
mov
add
push
mov
call
push
jne
pop
add
insl
iret
daa
mov
loope
pop
push
lock
adc
hlt
stos
xchg
out
dec
add
xchg
enter
push
cmp
jae
cmp
and
push
jb
lcall
int3
or
shr
inc
int
sbb
je
int
ret
add
mov
jmp
xor
pop
jle
loope
xchg
sbb
andb
maskmovq
idivl
cwtl
int
add
jg
or
mov
push
in
and
fadds
push
std
push
jmp
test
pop
dec
cmc
mov
je
lret
shll
arpl
push
jae
fcoml
mov
mov
adc
insb
in
jg
mov
pop
out
rolb
jcxz
lea
pop
jmp
inc
ret
lret
daa
out
jnp
dec
cmc
or
fmull
cmp
pop
in
sub
test
jo
or
outsb
mov
push
sub
inc
ficoml
outsl
pop
cmpsl
jmp
dec
imul
ret
movsl
sub
aas
imul
adc
xor
test
nop
rorb
pop
loop
loopne
sub
mov
lret
cli
movsl
cwtl
subb
adc
clc
and
mov
ffree
xor
lods
mov
adc
repz
jmp
call
repnz
cmp
add
lock
cs
into
enter
cmp
adc
ffreep
pop
fistpl
shll
mov
inc
and
dec
ss
icebp
cwtl
cmp
out
in
in
rorl
cltd
in
testb
or
sbb
cmp
lret
cli
scas
shlb
push
jecxz
jl
and
insl
lods
and
push
js
fldl
jae
xchg
in
lods
add
fidivl
and
push
adc
int
xor
jmp
lods
jl
inc
mov
std
mov
int
sbb
mov
shlb
push
mov
add
icebp
sbb
add
inc
push
or
arpl
xlat
fcomp
and
xor
push
cwtl
imul
stos
in
subl
pop
bound
lret
dec
test
faddl
push
push
int
and
jno
aam
xchg
push
jbe
pop
scas
arpl
inc
inc
fidivs
int3
cmp
jno
ds
mulb
jmp
jbe
mov
sar
pop
pop
jle
cmp
lods
rcl
mov
leave
aad
sbb
mov
jno
icebp
mov
daa
add
xor
adc
into
xor
and
xor
lock
pushf
mov
out
and
stos
push
xchg
jmp
fimuls
test
inc
clc
or
mov
les
int
in
mov
into
xor
dec
popa
shlb
movsb
add
dec
xor
and
jge
pop
push
adc
test
cmc
call
hlt
loope
ret
or
sub
das
inc
xchg
push
cmp
ret
jmp
repnz
inc
mov
and
scas
dec
jbe
pushf
mov
jnp
push
push
cld
test
sbb
inc
out
jae
cmp
inc
push
and
add
sbb
fstp
and
mov
pop
jmp
lea
pop
sub
lahf
clc
testl
cli
addb
pusha
mov
pop
in
cli
sti
push
adc
jle
cmpsl
mov
stos
loopne
sub
mov
xor
fmull
ret
sub
sub
pop
imul
inc
or
push
sbb
xchg
push
shl
inc
out
sbb
dec
stc
fs
jns
sbb
les
jo
fsubp
test
pushf
shll
sub
mov
sbb
inc
sub
mov
sbb
or
pushl
lds
icebp
jp
orb
jo
fisubrl
mov
xchg
pop
sarl
in
inc
xor
or
shl
pop
test
sti
std
loopne
and
jo
test
xor
call
pop
and
mov
enter
es
stos
movsl
ret
cmp
icebp
mov
pop
inc
cmp
out
pop
cmp
mov
stos
movsl
shll
ljmp
push
add
pushf
shlb
jae
in
xchg
ficompl
movsb
cltd
stos
xor
xchg
dec
dec
fnstsw
jnp
popf
fwait
movsb
ficoms
sbb
popf
hlt
insl
data16
dec
lea
test
jb
jbe
in
cld
fisubs
cltd
in
lahf
fistl
jno
xor
lcall
icebp
test
ret
jl
mov
xchg
inc
pop
into
push
jbe
fistpll
stc
xorl
ficoml
and
js
dec
xor
outsl
icebp
fsubs
inc
scas
or
push
cmp
je
mov
pop
cltd
sbb
hlt
pop
adc
dec
leave
mov
insl
inc
sbb
cmp
dec
add
cmpl
xchg
sti
mov
data16
or
jno
inc
push
push
jg
aaa
insb
into
mov
inc
inc
sarb
into
aaa
fadds
test
popf
push
jecxz
cmpb
cmpsl
mov
test
sbb
shll
lea
mov
mov
push
ljmp
sbb
mov
cmovae
std
and
jecxz
test
mov
in
scas
mov
notl
jne
sub
sub
jbe
mov
xchg
aas
pop
incb
inc
popf
rcrl
les
in
mov
test
and
test
pop
push
std
popf
push
pop
out
jp
test
inc
fstpt
clc
pop
mov
sbb
aad
push
pop
xchg
bound
jo,pn
rorb
sbb
pop
inc
loop
out
push
or
mov
inc
mov
jle
sbb
call
mov
cli
nop
in
scas
dec
adc
push
jmp
adc
cmp
fwait
push
addl
push
inc
jae
dec
sub
mov
test
out
hlt
gs
pop
gs
xchg
scas
cmp
clc
pop
std
pop
sbb
mov
xchg
js
sti
shll
fistpll
jp
inc
or
mov
sub
lahf
jge
shll
sbb
jo
fistl
sbb
leave
pop
jmp
lods
inc
jno
add
out
fdiv
pop
jae
imul
outsl
push
mov
scas
jp
aam
push
push
inc
adc
sbb
loop
lods
scas
xchg
add
scas
popf
adc
jb
and
mov
mov
shrb
and
add
adc
push
out
shll
stc
jbe
add
pop
dec
mov
xor
dec
clc
mov
add
sub
mov
ret
cmp
adc
mov
lahf
fidivl
push
nop
or
fwait
or
pushf
imul
cli
fcmove
lock
push
xor
addr16
cmp
or
dec
lret
add
pop
leave
in
cmp
pop
mov
push
xchg
push
pop
adc
outsl
mov
fdivs
inc
lods
xor
or
and
arpl
inc
cltd
sub
mov
lock
pop
scas
stos
xor
popa
or
mov
scas
jbe
adc
xchg
mov
push
into
test
jnp
clc
fsubrs
mov
lds
adc
insl
dec
lahf
les
sbb
jecxz,pn
imul
arpl
mov
sbb
out
inc
mov
arpl
jle
xchg
jae
hlt
pop
cmpsl
push
push
xor
ja
lret
mov
rclb
mov
sub
daa
sub
mov
mov
adc
jmp
gs
pop
xor
add
movsl
cli
mov
sbb
jle
out
mov
mov
cmpsb
inc
shl
adc
mov
jle
sbb
dec
xchg
pop
jmp
mov
xchg
pusha
cwtl
sub
sbb
adc
adc
inc
xchg
pop
stc
pusha
mov
push
adc
and
test
ret
cmpsb
sub
loopne
jle
jae
cmp
push
ret
dec
rcr
mov
popa
jne
adc
xchg
out
and
daa
mov
jg
into
or
cltd
mov
xchg
adc
sub
jno
pop
loopne
sahf
aad
xor
dec
mov
stos
test
pushf
insb
push
idivl
and
rcll
jns
sbb
pop
sti
shl
andl
pop
sbb
sti
lods
dec
push
push
aas
sub
and
push
int
pusha
loop
inc
pop
mov
out
es
xor
in
add
sub
jo
sbb
notl
inc
mov
ja
cwtl
lcall
int
loopne,pn
insb
dec
jo
cmp
mov
mov
aas
dec
andb
mull
push
in
jnp
jecxz
cmpsl
mov
cmp
arpl
ljmp
sbb
xor
xorl
pusha
inc
lret
push
or
dec
loope
cwtl
sub
xlat
scas
xchg
stos
into
jnp
test
outsb
mov
mov
addr16
mov
dec
leave
arpl
aad
mov
pop
stos
test
xchg
pop
mov
adc
outsb
sub
inc
sti
sbb
jns
sbb
jb
dec
pop
rorl
cmpsb
lcall
decl
inc
imul
pop
sbb
mov
ja
sbb
push
in
shll
xchg
int3
inc
into
stos
or
mov
add
cmp
insl
addl
push
push
leave
jae
mov
sub
fwait
pop
mov
mov
and
dec
sti
mov
aad
mov
jecxz
in
push
xor
inc
xor
mov
pop
in
stos
shr
sub
movnti
xchg
inc
inc
sbb
and
sbb
xchg
xchg
dec
sub
add
ficomps
or
repz
out
cmpsb
in
fwait
call
scas
cwtl
cld
ret
xchg
in
cmpb
mov
adc
sahf
jbe
addl
lcall
push
fisubl
mov
enter
jp
pop
mov
pop
out
xor
into
jnp
add
scas
adc
out
cmp
lret
faddl
sahf
push
inc
push
stos
mov
push
cmp
add
inc
sbb
loopne
dec
leave
fistpll
pop
mov
pop
movsl
dec
cmp
loopne
push
and
imul
pop
sbb
pushf
popa
out
int3
pop
mov
mov
xchg
sub
imul
mov
pop
and
loopne
mov
test
push
enter
sbb
mov
nop
cmpsb
push
cmpsl
pushf
mov
xor
ret
jo
sbb
loope
js
mov
pop
inc
jns
xchg
repz
mov
pop
fwait
aaa
xorb
mov
into
nop
jmp
push
jae
sahf
mov
mov
repz
mov
pop
fsubrl
loop
mov
lods
dec
mov
mov
jl
aaa
inc
ljmp
dec
ss
imul
mov
std
lahf
mov
mov
enter
aam
iret
scas
shll
adc
dec
jns
cltd
or
pop
ja
popf
in
adc
xbegin
dec
jbe
xlat
test
sub
pop
add
jmp
adc
in
mov
mov
mov
cmpsb
into
and
mov
pop
or
test
or
xchg
div
xchg
lcall
dec
adc
ret
sub
sbb
xchg
outsb
popa
lret
aad
dec
addr16
jg
fildl
and
iret
push
in
aad
cld
in
cmp
inc
fcom
roll
sbb
cmp
xor
ss
dec
div
sub
mov
cld
es
int
outsb
inc
fmulp
add
pop
fs
pushf
lds
insb
lods
in
and
or
pop
pop
xor
mov
lods
mov
mov
ja
insb
or
mov
cmp
test
jne
sub
mov
aaa
push
sub
xchg
clc
mov
rclb
jnp
test
leave
rcrl
inc
dec
and
mov
inc
xor
inc
sbb
sti
and
xchg
fdivl
sub
adc
or
out
std
pop
pop
rorl
not
jae
ljmp
aas
aam
cmpsl
lahf
push
add
fwait
sti
sbb
scas
lret
cmp
sahf
repnz
lahf
testl
lds
mov
jle
mov
rclb
dec
test
cmp
leave
jle
lcall
mov
xchg
ja
xor
cmc
mov
pop
outsb
pop
pop
lock
sbb
add
aad
or
sbb
pusha
lods
cmc
cmc
mov
incb
cld
loope
mov
push
push
xor
jp
rclb
sbb
sbbb
and
mov
adc
inc
cmp
or
daa
addr16
test
outsb
jae
jp
xor
dec
subl
pop
and
xchg
mov
inc
hlt
mov
loopne
adc
stos
sub
jae
or
inc
and
test
mov
mov
mov
cmp
int3
xchg
xor
fsubr
xor
pop
adc
rcrl
test
xchg
xor
inc
scas
insl
push
sahf
push
mov
inc
add
cmc
sub
adc
das
add
xor
cmp
push
repz
mov
dec
adc
xchg
inc
sub
mov
pop
mov
mov
std
mov
dec
sbb
aaa
pop
negb
loop
jp
mov
lcall
xor
test
mull
mov
pop
fimull
sti
jp
sub
xchg
push
and
mov
jecxz
xor
mov
rcl
push
add
jns
sbb
mov
mov
mov
mov
lds
popa
inc
test
xchg
out
std
clc
sbb
roll
lods
mov
sbb
gs
pop
xchg
aaa
xlat
gs
insl
loop
add
dec
dec
das
xchg
mov
push
xchg
mov
mov
lcall
nop
repnz
mov
sahf
mov
cmp
enter
mov
push
cmp
pop
je
or
bound
and
pusha
fldt
and
sub
xchg
add
and
push
pop
int
mov
out
lods
dec
push
pop
imul
push
and
movzbl
cmpsl
ret
push
lahf
cmp
aam
leave
testl
jno
sub
jnp
or
out
out
in
jb
push
sbb
mov
inc
jl
sub
ror
cmp
pop
mov
xchg
mov
aad
mov
jge
imul
pop
inc
xchg
insl
jae
dec
adc
dec
mov
hlt
dec
sbb
xchg
stos
les
addb
push
pushf
shlb
in
cld
jle
in
mov
fisttps
sub
xchg
xchg
sarb
gs
inc
imull
insl
add
sub
push
xlat
or
popa
sub
cmp
out
cmp
aam
add
shr
xchg
ffreep
or
or
int
in
mov
jecxz
adc
inc
test
leave
cmpsb
mov
movsl
adc
imul
push
push
clc
int
mov
iret
hlt
mov
cltd
xchg
mov
or
jns
jg
pop
ljmp
pop
pop
vphaddubq
shrb
arpl
pusha
out
in
push
fisttpll
outsl
push
mov
mov
das
sahf
lods
stos
movsl
pop
xchg
xchg
gs
pop
flds
pop
or
out
sahf
ja
in
imul
imul
add
or
lahf
xor
pop
pusha
xchg
push
adc
mov
push
mov
aad
ret
inc
jge
cmpsl
popa
in
pop
jl
movsb
sbb
popa
xchg
test
out
sub
dec
mov
andl
ret
repnz
jb
fs
jp
inc
test
scas
sub
push
adc
ret
lock
lcall
std
adc
cmc
mov
lret
jge
div
cmp
js
xchg
fldt
inc
xor
push
out
lret
cmc
jnp
mov
test
add
es
sub
dec
adc
jns
js
jge
mov
xlat
cmpsl
or
pop
je
xlat
inc
mov
and
mov
cs
jl
repnz
dec
push
add
lcall
test
das
dec
lcall
push
aas
or
rorb
or
shrl
cs
sahf
jle
pop
inc
loop
mov
jns
jl
add
mov
fstps
inc
mov
cmp
adc
cs
icebp
hlt
pop
jns
ret
pushf
push
pushf
adc
inc
push
push
xchg
icebp
and
and
aam
or
ljmp
jnp
in
icebp
mov
add
adc
icebp
jmp
out
xor
mov
out
push
xor
push
push
xchg
mov
push
pop
add
add
mov
mov
mov
push
rclb
add
bound
jo
sti
scas
add
dec
pop
movsb
jae
adc
or
in
mov
xor
push
xor
test
adc
mov
mov
enter
xchg
test
lahf
or
clc
das
mov
sar
dec
add
jne
scas
sub
jmp
pop
cmc
push
cmp
fiadds
sub
enter
sub
cmpsb
lock
push
mov
movsl
cld
push
mov
xchg
mov
cs
cmovg
and
out
ret
inc
adc
jmp
sub
orl
fs
sbb
dec
sahf
loop
sbb
ja
loope
jge
test
mov
add
nop
sbb
loop
test
sub
sub
loopne
aas
mov
mov
jno
jg
rclb
stos
repnz
jne
inc
test
mov
jnp
and
out
pusha
sbb
rsqrtps
fstpt
xlat
xchg
ds
fadds
hlt
movsl
pushf
sub
das
xor
or
fidivrl
cwtl
in
ret
shl
aam
mov
inc
out
mov
pop
testl
cmp
ss
leave
clc
cltd
mov
cmp
xchg
adc
cmc
jno
and
pmaxub
push
ret
idivl
push
cmp
fisubrs
adc
dec
lcall
lock
rclb
mov
out
bound
aad
cmp
out
jb
mov
xchg
aaa
mov
push
dec
les
sub
std
and
out
push
inc
pop
out
out
mov
sbb
pop
mov
xchg
fwait
aad
fs
in
outsl
clc
lea
add
cmp
data16
repnz
adc
pop
fdivrl
sub
inc
roll
daa
cli
inc
dec
pop
das
and
sti
int3
push
jmp
les
je
jnp
xchg
dec
mov
fnstsw
test
daa
cmp
lahf
lret
dec
push
rcrl
mov
jae
repnz
daa
int
sub
fisttpl
push
inc
sbb
adcl
inc
orb
mov
fs
mov
fbstp
cmp
mov
out
jl
aad
out
mov
push
sub
inc
or
push
push
gs
xchg
mov
idivb
sbb
leave
pop
out
sbb
subb
sub
or
jle
ret
mov
sbb
add
das
test
lret
cs
jnp
icebp
mov
test
js
sbb
subb
test
mov
aas
mov
lcall
or
shrb
xlat
xor
icebp
cltd
lods
iret
repnz
lea
push
out
rorl
scas
xor
push
fcomp
call
and
bound
lods
xlat
pop
xor
jnp
lods
sbb
sti
jnp
cmc
xchg
loop
or
and
pop
inc
push
jge
mov
fistl
roll
mov
pop
and
fdivrs
mov
and
sbb
popf
jmp
jp
push
adc
sub
sub
gs
stos
test
xor
jecxz
cmp
mov
adc
cmp
enter
aad
mov
push
out
or
adc
into
xchg
imul
mov
jnp
xchg
cmp
adc
fmuls
sbb
rcrl
aaa
aaa
in
imul
into
xor
sub
adc
push
arpl
loope
das
xor
dec
fisttpll
lahf
dec
lods
push
push
nop
notb
sub
arpl
xchg
icebp
jge
outsl
cwtl
shr
jecxz
rol
sub
lcall
insl
scas
jne
not
data16
mov
dec
xorb
orb
fstps
fistl
imul
xor
aam
xchg
fdivrl
stc
loope
xor
dec
jo
push
lret
gs
dec
xchg
test
add
aam
mov
das
pop
cmp
mov
sti
add
pop
pop
jl
xor
out
lods
push
push
sub
push
lock
xor
in
xchg
push
xor
inc
xor
sarl
loopne
or
inc
cmpsl
sub
and
mov
jno
xchg
out
stc
cmp
pop
inc
outsb
aad
jmp
out
psubw
fwait
cli
cltd
mov
shll
dec
stos
xor
das
pop
and
cmpsl
std
es
nop
call
add
or
and
jbe
xlat
jnp
aaa
add
lret
sbb
add
fsubs
or
xor
mov
push
xor
add
push
shlb
andl
mov
jle
outsl
mov
jle
cld
push
aam
push
daa
fs
in
das
mov
dec
movsb
pop
mov
jp
fisubl
jge
sbb
xor
push
in
mov
and
shrl
fcomps
dec
aaa
decb
ds
fs
stos
in
pop
repz
dec
bound
and
iret
xchg
imul
push
mov
xor
movsl
xchg
add
testl
xchg
sub
sub
jb
out
out
mov
cmp
js
push
inc
push
add
mov
mov
cmp
fisubrs
add
adcb
dec
mov
sbb
icebp
outsb
dec
jecxz
jp,pn
lea
push
mov
fistpl
fucom
sbb
insb
ficoms
mov
jp
cli
mov
sbb
cmp
cmpsb
sbb
iret
out
dec
adc
je
shrb
and
aad
jns
push
pop
and
mov
cmp
test
add
out
push
xor
sbb
cmpsl
and
dec
sbb
cli
jns
mov
adcl
jecxz
in
jnp
sbb
ljmp
icebp
pop
filds
divb
jge
sub
cltd
mov
pop
dec
cmp
adc
push
push
cmp
shrb
cwtl
lret
gs
push
and
in
push
pop
sub
rclb
cmpl
jo
push
fiaddl
testl
push
aam
adc
pop
ret
sub
inc
sbb
movsl
popa
ret
push
jb
pop
test
roll
les
cld
hlt
repnz
or
mov
push
inc
arpl
test
daa
popf
push
je
push
pop
mov
aas
sar
lret
dec
sub
xor
int
mov
std
xchg
dec
testb
movaps
adc
add
jl
xchg
fnstenv
je
nop
xchg
std
es
pop
sbb
mov
push
pop
pop
push
addb
add
outsb
loopne
imul
mov
xchg
adc
mov
orl
add
fdivrs
popa
mov
mov
repz
mov
add
pop
int
iret
test
mov
fcoml
popf
push
adc
push
pop
movsl
data16
into
loopne
push
out
clc
sahf
pop
mov
ffree
or
es
mov
nop
sub
js
lock
jb
mov
cmp
jmp
pop
adc
js
jo
or
mov
pop
mov
pop
lcall
sub
pop
dec
add
or
mov
ja
std
sahf
jp
jmp
push
push
adc
ret
mov
mov
push
gs
add
ror
dec
adc
dec
dec
sub
sub
and
jg
ffree
mov
lea
clc
mov
sbb
or
xchg
sub
jg
out
push
pop
nop
paddw
sti
ficoml
xchg
lahf
cld
mov
dec
mov
sbb
xchg
cmp
ret
loope
and
jnp
adc
adc
xor
pop
insb
fld
lock
int3
dec
jno
ret
cmp
jg
fs
movsb
shll
mov
mov
fsubrl
movsl
sbb
mov
xchg
sbb
or
fdivs
movsb
sub
mov
sbb
fiadds
mov
js
stos
push
adc
add
out
add
aaa
dec
in
lods
loop
mov
sub
test
pop
fs
testl
enter
sbb
mov
cltd
inc
pop
in
out
push
addl
pop
sub
lret
sub
out
push
iret
cmp
lahf
test
sbb
test
data16
and
jl
jne
mov
xchg
gs
or
fbld
cltd
mov
stos
insb
xchg
arpl
add
and
jmp
xlat
subl
sbb
idivb
testb
pop
cmp
mov
inc
inc
in
push
cmp
fcmovb
or
or
and
inc
push
mov
mov
ret
jnp
mov
push
lahf
nop
in
push
xor
stc
adc
xlat
notl
adcb
add
jle
inc
push
pop
cltd
imulb
xchg
stos
lcall
daa
jmp
mov
cmpsl
push
or
mov
iret
in
pop
rcrl
cwtl
fisttpl
add
stc
cmpb
mov
cli
inc
xor
pop
inc
push
scas
cmp
scas
jbe
push
mov
sbb
lret
pop
jb
jne
pop
lea
mov
movsb
test
and
push
icebp
xor
mov
lods
fs
into
lods
jecxz
xchg
lods
loope
sub
dec
lods
arpl
popa
and
cmc
sub
jle
loopne
int
test
or
test
subb
addb
cmp
push
mov
mov
mov
push
fcmovbe
mov
dec
hlt
fs
ja
adc
mov
sarb
mov
inc
in
xor
xchg
sbb
xlat
imul
ja
repz
xor
inc
loope
mov
adc
fldcw
cmp
in
add
push
cmp
ljmp
xor
pop
hlt
mov
int3
je
sub
push
fstpt
lea
out
ljmp
and
mov
rorb
adc
sbb
push
push
pop
xor
add
dec
pop
adc
mov
jle
punpcklbw
icebp
mov
cmp
loopne
push
xchg
aas
jbe
call
loop
out
shlb
push
incb
inc
xor
push
cs
pop
cmp
stos
adc
test
push
or
outsb
and
cmovno
inc
adc
fnsave
pop
adc
push
dec
lret
shrb
in
xchg
movsb
cmp
adc
cli
mov
pop
mov
jns
push
mov
cmp
mov
mov
bnd
mov
mov
loope
pushf
clc
lds
mov
xchg
frstor
push
fdivl
out
popf
sub
inc
bound
movsb
syscall
adc
ret
lahf
sub
test
xor
xlat
loope
inc
scas
test
fstl
sbb
lods
inc
js
push
bound
scas
dec
stos
push
mul
hlt
in
stos
sahf
mov
push
push
sub
sbb
push
popa
ror
out
movsl
and
mov
xor
jo
test
movsl
popf
stc
lock
cmp
add
cwtl
sub
in
lahf
outsl
ljmp
and
cmp
sbb
cli
push
and
gs
aas
es
aad
mulb
xor
push
lea
sbb
cltd
dec
inc
ljmp
and
arpl
pop
mov
mov
pop
push
add
insb
std
test
rcrl
sub
dec
repz
loope
dec
test
bound
mov
movsl
or
dec
xchg
adc
ds
in
mov
jg
push
dec
pop
inc
aam
push
ljmp
lock
lods
loopne
fsubrl
inc
mov
addr16
add
bnd
imul
sti
sarl
shrl
cmp
push
push
inc
jo
lret
lret
pop
xchg
adc
pop
cmpsb
addr16
add
jns
popf
jge
arpl
cmp
lea
mov
cmp
fistpl
movsb
std
cmpb
lds
xorb
adc
dec
mov
mov
xor
testl
pop
dec
jno
sarb
pop
dec
xchg
dec
add
dec
fdiv
repz
lret
cmp
inc
repnz
cmpsb
xchg
cmp
incl
mov
cmp
lret
jg
adc
rol
pavgw
test
pop
fwait
outsl
jle
push
xchg
dec
mov
jg
add
push
rorb
cmp
mov
nop
insb
ret
mov
cmp
into
cmp
cwtl
ja
or
movsb
mov
ss
cltd
adc
mov
sti
loopne
movsb
scas
mov
fwait
adc
adc
test
or
stos
mov
mov
sarb
imul
push
divb
pop
div
fidivrs
scas
inc
lea
int3
js
hlt
mov
lret
xchg
sbb
push
pop
adc
pop
leave
adc
test
mov
fistpll
cwtl
mov
rcr
pushl
push
sbb
inc
imul
push
jnp
push
push
sbbl
sbb
mov
sub
insb
sahf
xchg
jmp
rcr
push
xor
stc
daa
mov
inc
sti
jb
bound
push
and
loope
jecxz
xlat
test
das
lods
xchg
loop
lods
mov
sbb
es
or
movsl
outsl
aad
fidivl
test
jbe
push
stos
repz
lea
arpl
mov
pop
lods
test
xchg
pop
popf
mov
fisttps
scas
pop
sub
lock
dec
adc
pop
pop
lret
or
insl
sahf
sbb
insb
fdivrl
or
pushf
mov
add
push
sub
es
dec
pop
jnp
aas
fs
mov
mov
and
or
gs
mov
inc
movsl
mov
or
mov
inc
fists
les
jmp
in
adc
cltd
jns
orb
jbe
stc
and
dec
xchg
inc
jle
mov
cmpsb
and
and
scas
hlt
adc
jmp
test
xchg
outsl
imul
sbb
js
roll
xchg
add
sbb
inc
ja
cli
pop
ds
std
pop
xchg
or
outsl
cs
push
jmp
popf
stos
scas
dec
cltd
fsubrp
pop
inc
or
bound
out
push
mov
ja
iret
rcll
push
test
push
inc
lods
sbb
mov
xor
cmp
jb
cs
xchg
ss
arpl
sbb
test
mov
shll
xor
pusha
adc
xor
stos
insb
push
or
sbb
pop
jecxz
push
or
loope
lods
leave
lea
mov
aam
stc
xchg
stc
insb
jp
push
adc
adc
add
cltd
add
mov
sub
xor
sbb
or
pop
es
daa
mov
cmp
jp
sub
xor
or
enter
cltd
sbb
sbb
pop
in
dec
push
decb
loope
adc
cmpsb
fists
inc
or
call
lds
test
add
lea
mov
stos
dec
jnp
push
sub
int
addr16
inc
jp
imul
xor
out
inc
nop
cmp
mov
sbb
cmp
jns
and
dec
repz
or
cmpb
bound
jb
adc
int
fldl
jmp
xor
push
lret
or
sub
mov
je
pop
pop
xchg
cmpsl
iret
inc
jnp
pop
inc
inc
sub
dec
mov
dec
jbe
cwtl
mov
test
mov
les
mov
in
dec
cld
gs
jne
xchg
xor
movsb
ds
inc
inc
push
ficomps
sub
mov
mov
ljmp
imul
add
das
jns
cmp
clc
sub
xor
push
inc
inc
xchg
je
xor
xor
out
fdiv
sbb
xchg
pop
test
inc
test
inc
daa
ret
sub
ficoms
mov
outsl
aad
and
inc
xor
cli
int3
sbb
jecxz
scas
jge
rcll
aad
add
pop
jb
mov
insb
clc
jb
mov
mov
fsubs
scas
jno
push
push
fisttpll
jg
enter
inc
sub
push
jae
lods
lock
outsl
xor
incl
push
dec
pushw
ret
mov
push
add
mov
cltd
push
and
xchg
adc
test
dec
lahf
jb
add
sbb
cmp
mov
pop
out
cmpl
push
and
lea
dec
fistpl
inc
inc
ds
inc
cli
sbb
and
push
bound
out
sbb
jg
xchg
out
pusha
push
out
popa
int
dec
dec
mov
repz
mov
inc
loopne
sbb
cmp
sbb
addl
pop
push
fcoml
adc
jae
cmp
int
mov
lds
inc
or
and
adc
lcall
dec
jne
inc
pop
pushf
or
pop
sub
mov
fucomp
jg
push
dec
in
jl
mov
repnz
sub
xchg
cmpsl
insl
mov
pusha
test
into
push
xchg
insl
mov
stos
outsb
mov
and
mov
cltd
xor
push
lods
cmp
xchg
shll
jmp
scas
jmp
pop
icebp
jmp
hlt
cwtl
addr16
hlt
jbe
faddl
sub
test
dec
cmc
mov
shll
andb
ret
ficoml
lock
cld
pop
jnp
push
ljmp
ret
fsubs
rcll
lock
int
out
je
push
lea
lods
push
and
pop
xchg
sub
scas
lods
jns
and
lahf
xor
fs
add
push
es
es
push
sbb
or
rcll
test
addr16
sbb
into
sbb
inc
stos
cld
add
loopne
testb
or
pop
sar
dec
xor
adc
ljmp
lret
lds
cs
mov
outsb
adc
in
in
and
mov
stos
subb
test
movl
sub
lods
xor
jnp
popf
pop
rclb
mov
xor
mov
or
pop
sbb
movsb
sub
push
ret
scas
xchg
fisubl
pop
xlat
repnz
jle
add
aam
ja
and
or
xchg
test
cmp
out
sbb
fwait
and
fcompl
leave
cmp
insb
aas
sub
dec
fwait
sbb
into
enter
push
adc
mov
ds
popf
pop
xchg
inc
test
cltd
pop
sbb
pop
fisubrl
or
fiadds
dec
pop
dec
gs
movsb
xchg
out
stc
sub
cli
sub
sbb
scas
push
jo
inc
sbb
xlat
push
iret
addr16
adc
clc
mov
xchg
aad
jecxz
mov
out
stos
loope
adc
inc
jo
scas
lahf
aas
cmp
enter
sar
lret
mov
dec
jl
fldl
xor
jnp
jne
and
push
nop
pop
js
add
int3
ret
lret
or
data16
pop
mov
inc
into
pushf
leave
mov
imul
jno
dec
pop
hlt
mov
mov
push
jg
negl
cmpsl
jnp
or
xor
lcall
xor
cmp
add
push
ss
mov
es
lahf
cmpsl
je
push
scas
in
xor
dec
pop
cmp
pusha
mov
lods
push
leave
fiadds
xchg
or
add
jmp
and
dec
inc
pusha
cmp
sbb
in
imul
jnp
cmp
cmpsl
lods
in
xchg
pop
cmp
lret
pop
je
out
mov
sbb
hlt
and
into
lock
sbb
cld
mov
mov
fsubr
out
lods
jmp
daa
movsl
jp
cmpsl
sub
push
pop
scas
jmp
nop
jle
lcall
mov
lods
iret
add
adc
jnp
sti
ffree
jns
out
xor
sbb
xchg
jp
movsb
loop
add
and
xchg
xchg
rcll
out
push
jp
aam
loope
test
cmovnp
jl
mov
push
mov
dec
xor
aam
in
lahf
xor
adc
push
and
sbb
pop
out
mov
pop
mov
jle
add
movsl
xchg
inc
scas
in
addr16
in
add
push
movsl
mov
cmp
pop
adc
pop
fildl
stc
mov
xchg
xchg
jne
jmp
negb
in
pusha
pop
cltd
test
pop
repz
mov
loope
lods
cmpsb
sti
icebp
dec
mov
mov
xchg
cmp
mov
mov
inc
mov
call
mov
out
adc
push
imul
push
inc
popf
pop
mov
dec
stos
cld
mov
fimuls
xchg
rcll
icebp
sahf
fs
mov
inc
test
inc
cmp
jbe
push
add
push
mov
adc
rcrb
nop
ja
xor
aam
adc
inc
es
divb
ds
jbe
ss
frstor
cmpsb
roll
mov
lret
int
arpl
mov
ljmp
mov
test
cwtl
inc
cld
in
outsl
scas
scas
xor
int3
shr
shlb
aam
out
test
test
shl
xor
or
mov
xchg
mov
xchg
mov
test
xchg
pop
mov
mov
loop
aas
stc
pop
pop
jae
loope
lret
push
gs
movsb
jae
cmp
out
xor
inc
out
or
neg
icebp
jae
js
sbb
aam
pusha
mov
test
fsubs
popa
dec
sub
ja
and
popa
mov
xor
je
aaa
pop
dec
jno
ss
popa
dec
fnstsw
arpl
jecxz
nop
sub
add
into
xchg
lret
incb
fwait
aad
pop
cmp
and
fdivs
dec
adc
inc
xchg
push
push
ljmp
aam
fldenv
inc
or
xor
ja
fnstcw
fdivrl
lock
xor
pop
cmpsb
fsub
sub
scas
inc
jns
movsb
push
lahf
pushf
sub
das
pop
inc
mov
or
push
addl
mov
std
in
jae
fwait
movsb
es
mov
cld
neg
pop
mov
iret
call
xor
lret
sbb
cmp
push
dec
cltd
movsl
push
mov
cmp
inc
cmp
sti
imul
push
test
fwait
cmc
pop
in
jo
test
cli
test
insb
dec
aas
add
outsb
sub
jl
add
pop
pop
ficoms
xchg
stos
pop
pop
fnsave
mov
shrl
outsl
mov
or
cmpsl
mov
int3
mov
into
out
or
pop
icebp
xlat
mov
inc
in
icebp
std
jbe
sti
add
mov
xchg
xor
mov
mov
dec
popa
jl
pop
rcll
sub
cmp
es
outsl
and
fildl
lods
flds
movsb
add
test
pop
add
cmp
jmp
push
shl
mov
adc
or
pop
xchg
into
ficompl
rcll
and
push
adc
jp
rol
add
repz
dec
call
sbb
fcmovnu
mov
stc
cmp
xchg
mov
xor
loop,pt
enter
test
mov
fcmovbe
repnz
int
xor
inc
es
pusha
fsubs
bnd
jae
jno
xor
mov
adc
cmp
ljmp
fsubrs
pop
inc
mov
cwtl
adc
loop
xchg
pop
mov
dec
test
dec
pop
in
rclb
ss
fucom
leave
lahf
loope
adcb
pop
mov
xor
mov
pop
mov
xor
dec
jg
mov
push
jmp
mov
loop
ljmp
sbb
or
jns
stc
es
fwait
aad
popf
iret
mov
cmp
ljmp
or
ja
xor
fwait
or
push
push
fsts
pop
test
movsl
mov
daa
xlat
test
jl
or
ja
dec
insl
test
jae
adc
aad
pop
mov
jge
ror
push
add
jns
loope
bound
out
cmc
add
push
sub
rclb
inc
pusha
mov
or
or
dec
or
inc
test
fimuls
mov
movsb
ret
and
sub
mov
pop
ja
sub
rorb
lds
sub
insb
imul
cmp
sub
push
or
lcall
adcb
pop
scas
sbb
cld
notl
negb
scas
jp
enter
ja
cli
je
push
lock
out
xchg
inc
fcmovne
push
mov
inc
xchg
inc
mov
out
xchg
push
mov
mov
fsubs
inc
jecxz
dec
int3
mov
xchg
pop
push
shlb
aam
mov
cmp
xor
pop
in
jae
pop
dec
sbb
xor
scas
cmp
pop
mov
das
and
ljmp
push
pushw
popa
lahf
pop
jmp
pop
inc
push
fisttpll
mov
icebp
loop
mov
roll
push
dec
cmc
mov
mov
lods
sbb
add
dec
pusha
test
mov
add
cmovp
les
and
mov
jne
lods
imul
jecxz
sbb
lds
cmp
stos
add
popa
leave
roll
inc
mov
divb
adc
int3
int
mov
jmp
pop
mov
and
pop
pop
or
sbb
call
add
or
rcl
outsb
xchg
test
push
inc
cmp
sbb
jge
cmp
pop
lock
add
aas
into
dec
rcll
mov
mov
mov
cwtl
xlat
push
push
sbb
mov
adc
push
sbb
pusha
mov
shlb
xor
js
add
pop
dec
cmp
dec
clc
movsb
xchg
lret
mov
inc
jg
cmp
sub
pop
xlat
test
pop
js
dec
mov
inc
fs
je
cmp
movsb
push
add
mov
pop
sbb
mov
repz
adc
test
insl
inc
mov
pop
sbb
sub
mov
mov
xchg
leave
pop
dec
test
rol
pop
loop
pop
mov
ja
pop
jmp
fisubrl
rcr
mov
add
dec
pusha
jne
outsb
dec
xor
cwtl
add
ret
inc
mov
loopne
add
loope
mov
imull
lds
in
jp
sub
xchg
cmpl
pop
imul
mov
adc
pop
scas
aad
and
sub
fsubr
jbe
mov
imul
jne
or
push
je
and
rcrb
mov
adc
lock
psubw
lods
mov
mov
or
test
jnp
push
rcr
mov
push
and
push
rcrl
push
leave
gs
pop
mov
jl
push
stc
push
aas
bnd
adc
dec
imul
jge
cmp
add
icebp
imul
cmp
xlat
int3
pop
push
mov
xchg
pop
adcb
notb
aad
ror
cwtd
jle
aad
xor
cmpsl
cmp
cld
dec
in
jge
sbb
mov
ds
jnp
adc
enter
cld
in
cmp
or
inc
cmp
clc
and
mov
pop
aam
outsl
dec
mov
xlat
fld
pop
mov
outsl
mov
insl
pop
mov
add
ret
mov
sub
sbb
cmpsb
jnp
lret
xor
test
adc
stos
lret
xchg
mov
adc
nop
and
shlb
pop
pop
fsts
aaa
push
mov
test
inc
push
and
jbe
stc
mov
lock
fildll
adc
sbb
negl
dec
pop
int3
pop
mov
mov
cmp
in
test
outsl
in
jb
mov
test
lods
or
int3
int
jl
xlat
jns
call
xor
add
mov
addb
scas
rorb
int
cmp
push
mov
aad
cmp
xor
in
subl
cltd
test
xchg
inc
bnd
mov
add
xchg
sbb
sbb
cvtps2pi
push
pusha
mov
adc
pop
cltd
movups
push
adcl
or
sahf
cmp
inc
mov
push
pop
mov
stc
les
jne
fidivs
inc
dec
push
shll
sub
sub
add
push
call
adc
popa
addb
mov
mov
xchg
rclb
xchg
dec
and
or
sbb
bound
cmp
aam
jmp
xchg
push
cld
mov
stc
jbe
notl
pusha
dec
jmp
push
adc
repz
out
ds
mov
mov
push
jbe
pop
scas
mov
mov
and
dec
sub
mov
mov
mov
push
inc
jo
fnsave
lret
adc
ss
mov
data16
and
or
inc
outsl
int
push
push
jmp
xor
insb
sub
iret
xchg
popa
je
add
jmp
les
push
jmp
jne
ss
aas
jno
dec
dec
dec
loopne
fs
test
movsl
cmp
cwtl
add
mov
les
sub
push
xchg
adc
insb
jbe
mov
rolb
lahf
cmc
bound
addr16
xor
and
mov
lcall
mov
das
arpl
jmp
cld
popf
dec
gs
in
and
subb
mov
xor
dec
aaa
push
mov
out
and
in
shl
mov
lahf
lods
cmp
scas
mov
jns
cmp
das
and
dec
sbb
ss
popa
mov
jmp
add
cli
aad
sbb
rcr
mov
cmpsl
into
pmulhuw
and
xchg
add
inc
gs
sub
jl
pusha
xor
xchg
mov
pop
mov
mov
dec
or
xchg
movsl
out
ja
faddl
and
sbb
cmpsb
popf
lods
push
sub
xchg
add
lock
cmp
xchg
add
out
int3
loopne
xlat
aaa
or
pop
cmp
add
and
jge
cwtl
jb
negl
cmc
jg
mov
shll
shlb
cmp
mov
pusha
cmp
fidivs
add
adcl
sbb
sub
sbb
aam
cmp
gs
sub
insb
and
fwait
dec
daa
push
sbb
cmpsb
test
aam
mov
test
fptan
or
pop
mov
add
inc
push
or
inc
cs
sub
sbb
sti
cld
ss
imul
jmp
int
in
push
pop
push
cmp
mov
jl
or
xchg
repnz
pop
jns
mov
fldcw
nop
cwtl
in
test
mov
push
arpl
rorl
cmp
icebp
sbb
lea
stc
lret
jmp
dec
jl
mov
subl
or
cs
incl
mov
stos
lods
xor
orl
repz
mov
jmp
sar
ret
sub
dec
shll
pusha
xor
jnp
inc
sub
sbb
aam
add
mov
xlat
xlat
add
fists
cli
xchg
xchg
ret
adc
dec
out
add
out
adc
lret
pop
mov
hlt
ss
popa
mov
push
das
and
repz
out
xor
cmp
and
sbb
movd
xlat
xor
into
sub
adc
xchg
push
jbe
add
pushf
lods
pop
dec
lods
pop
out
and
sahf
ljmp
cld
pushf
leave
rcl
lcall
iret
cmp
ljmp
or
inc
cmpsb
and
int
pop
cmp
mov
stc
mov
es
punpckhwd
andb
cmp
mov
push
loopne
kunpckwd
xchg
sarl
cmp
addr16
mov
orb
arpl
jb
into
aaa
xor
mov
jge
sbb
loope
sub
and
jecxz
add
gs
xor
xchg
pop
sbb
mov
in
or
rolb
mov
dec
out
repnz
ficoms
sub
mov
push
pop
arpl
sub
mov
pop
or
xchg
out
cli
adc
mov
adc
or
addr16
cmp
and
add
nop
xor
adc
pop
cmp
lret
pop
ljmp
daa
rcrb
pop
xor
mov
adc
mov
lea
pop
lahf
xor
pop
stc
movsb
xchg
lock
fisubrs
pop
cmpsl
sbb
pop
lcall
push
ljmp
jmp
add
lds
push
or
or
mov
aam
add
in
push
push
fsubl
js
outsb
and
mov
lea
lret
mov
lock
imul
outsl
loope
gs
pop
test
pop
les
test
call
jmp
xor
fdivs
gs
mov
gs
push
fcmove
das
push
xor
into
pop
icebp
dec
and
sub
lfs
xchg
hlt
add
test
lahf
mov
rcrl
fisttpll
sub
lret
mov
pop
sub
aad
lahf
jecxz
sbb
xchg
movsb
leave
lock
inc
fmull
cmp
mov
and
dec
cmp
mov
mov
sbb
lahf
aad
and
inc
or
test
repz
mov
jno
jl
dec
mov
push
mov
cmp
push
mov
int
jne
sbb
inc
sti
adc
xor
push
pop
cli
dec
leave
sbb
xchg
xor
repz
test
aam
sbb
push
xchg
adc
rol
cmp
mov
push
sub
lds
mov
lret
cmpsb
adc
js
cmc
movsl
fildll
inc
in
xchg
add
cmp
roll
xor
pop
sarl
jge
lahf
sub
arpl
cltd
push
scas
pop
aad
mov
pop
iret
and
ljmp
mov
xor
add
or
fiadds
cmp
inc
int
addr16
mov
adc
xchg
lock
test
pop
fcoml
mov
mov
pop
jge
xor
or
inc
rcrb
lret
lods
sbb
xor
ret
sahf
inc
jnp
gs
mov
jno
inc
mov
jae
or
mov
leave
cmc
mov
iret
xchg
add
das
nop
fs
lods
daa
es
mov
adc
outsl
jmp
aam
pop
data16
sub
push
sub
notb
pop
in
aaa
adc
dec
add
in
pop
or
ret
gs
push
cmp
icebp
inc
adc
mov
rolb
mov
jno
mov
icebp
push
rcrb
ret
into
nop
push
pop
jo
out
inc
inc
pop
lahf
push
push
in
ficoms
pusha
mov
jle
dec
pop
mov
sbb
call
shld
lahf
ljmp
cmp
fcos
mov
testb
shr
repnz
jae
sbb
ss
inc
hlt
cld
mov
mov
test
sahf
call
test
mov
xor
inc
mov
mov
js
mov
call
adc
out
imul
mov
dec
jo
inc
jg
rolb
xchg
xlat
das
fnsave
sub
adc
shll
mov
push
or
pop
xor
pop
icebp
dec
rolb
jo
jo
push
push
aaa
ljmp
jl
pop
lea
inc
out
outsl
fnstcw
xchg
repz
pop
push
and
bound
jmp
push
les
sbb
add
dec
insl
fstl
std
in
mov
mov
fildl
add
sbb
adc
ds
mov
repz
hlt
cmc
pop
xlat
loope
data16
sbbl
cmc
dec
int
mov
cwtl
inc
sti
inc
push
mov
inc
pop
ds
cmp
xchg
sub
and
dec
enter
push
or
adc
stos
test
push
sub
ja
jg
test
dec
dec
sarl
ret
push
mov
inc
jns
inc
mov
mov
or
js
imulb
mov
aas
push
mov
xchg
loop
rcl
dec
insl
popf
fdivs
cmc
adc
cmp
loope
idivl
sarb
push
cmpl
sbb
cmpsb
and
xchg
jo
inc
and
jno
dec
cmp
mov
and
sarl
sahf
pop
sti
out
jecxz
dec
mov
add
cmp
mov
bound
jns
xchg
push
idivl
xor
adc
rclb
das
cmp
pop
test
xor
js
cmp
mov
inc
push
adc
push
sub
sub
in
mov
add
scas
roll
push
in
lret
push
cmp
pop
xor
int3
add
inc
aam
dec
test
stc
cltd
mov
sub
or
xchg
mov
xchg
insl
push
cmpsl
jno
sbb
loope
pop
and
fnstenv
out
cmpsb
jp
push
hlt
pushw
add
mov
and
mov
pop
loop
dec
addr16
push
dec
enter
push
sub
rcrl
sbb
jns
imul
add
sub
pop
movsl
cmp
sbb
jge
mov
mov
stc
aas
fsubr
add
xchg
mov
inc
inc
test
iret
ret
jecxz
mov
xor
les
mov
sti
jmp
sub
xor
insl
xchg
jnp
pop
pop
xchg
pop
mov
dec
sbb
xor
cwtl
rolb
dec
xchg
clc
inc
cmpsl
sbb
sub
push
sbb
push
cwtl
cmpsb
nop
pop
mov
inc
in
ror
and
fcoms
cs
ds
imul
je
cltd
xlat
inc
add
cmc
imul
and
sub
cmpsl
stos
call
test
aaa
std
jno
mov
adc
adc
jle
mov
stos
daa
popa
cmc
je
insb
sub
aaa
pop
subl
lcall
inc
push
jp
cmp
lret
shrl
or
mov
imul
adc
imul
push
dec
loop
pop
das
das
aaa
testb
notl
test
pop
test
mov
leave
mov
jo
jmp
mov
pusha
sub
jg
mov
sti
fbstp
mov
inc
sbb
mov
mov
inc
enter
dec
out
lahf
sub
aaa
mov
arpl
movb
cmpb
out
add
pop
cs
jl
addr16
push
sub
repnz
push
mov
insb
xlat
sbb
mov
ret
pop
xchg
sbb
nop
jg
into
sub
icebp
loop
and
sbb
mov
cmp
pop
out
sbb
outsb
xchg
rorb
mov
mov
or
cmp
hlt
vxorpd
fs
xchg
mov
adc
fimull
sbb
sub
sbb
pop
fmulp
pop
mov
mov
dec
std
adc
dec
rclb
icebp
enter
leave
hlt
sahf
xchg
push
lds
ret
shlb
mov
xor
adc
lahf
fs
and
push
add
pop
push
pop
stos
ret
mov
stc
insb
out
or
aad
mov
inc
lods
pusha
fstps
repnz
dec
fidivrl
mov
cli
mov
pop
rcl
push
jae
sahf
push
sahf
pushf
ret
pop
mov
pop
insb
pop
xchg
fmuls
mov
inc
lods
outsl
and
cmp
dec
inc
mov
mov
out
fstpt
int
sub
xchg
push
dec
hlt
add
jbe
and
cld
mov
push
inc
push
sub
add
mov
cli
aas
jge
in
pop
adc
ficoms
jl
xor
pop
jle
mov
jb
pop
shlb
pushf
jge
shr
push
and
movq
mov
dec
or
adc
inc
scas
lahf
mov
stc
push
xchg
adc
jmp
dec
pop
sarb
jg
push
and
pop
sbb
bound
psadbw
outsb
lods
xchg
jl
xlat
sbb
and
xchg
jae
test
sbb
mov
add
sub
add
enter
and
cld
push
cmp
insb
outsl
and
imul
xchg
mov
xlat
add
jno
les
data16
fistpl
cltd
inc
test
dec
sbb
rolb
xchg
xor
xchg
into
je
shlb
mov
jbe
insb
andl
jae
rcr
dec
outsb
scas
scas
ret
stos
stos
adc
shufps
negl
dec
test
outsl
imul
mov
loope
sub
stos
mov
inc
adc
fsubr
lods
in
iret
in
mov
std
adc
pop
push
mov
jmp
lcall
aad
aad
imul
shll
imul
and
or
xor
push
add
call
lods
fstl
xchg
int3
jo
push
test
out
outsl
adc
scas
jg
cmc
mov
xchg
and
mov
insl
dec
loope
cs
loope
sbb
leave
lea
mov
or
jl
cmpsl
repz
or
xorl
mov
fimuls
shlb
in
pop
and
cmpl
mov
scas
push
mov
push
xchg
cmpb
mov
out
mov
pop
fisubl
test
int3
daa
nop
cmp
jne
push
daa
call
cmp
int
iret
mov
pop
inc
pop
xor
in
mov
or
push
xchg
fsubs
gs
add
or
mov
std
mov
push
sbb
or
inc
and
ds
repnz
dec
bnd
aaa
add
mov
sbb
inc
xchg
push
push
jg
std
xor
sub
int
lods
mov
cmpsl
push
mov
mov
stc
shl
xlat
jl
pop
push
call
in
add
cmp
testb
aad
divl
push
popa
fmuls
lods
stc
std
adc
cmpsl
pop
or
xchg
movsb
lahf
xchg
inc
jae
xchg
popa
or
and
add
fildll
sub
fstpt
cmp
insb
sti
sub
js
ror
ret
lahf
xor
leave
leave
jecxz,pn
xor
cmpsb
mov
fwait
hlt
gs
cmp
cmp
into
iret
repz
lcall
rcl
mov
or
daa
adc
sbb
cmp
inc
fdivrl
daa
jp
cli
inc
gs
outsb
fcmove
ja
data16
pop
lcall
push
cmpsl
pop
test
add
xor
mov
mov
jne
or
pop
and
aas
insl
out
jno
daa
sub
arpl
outsl
in
and
xchg
or
aaa
lods
sub
sub
or
add
stos
inc
jo
xchg
jo
das
das
out
add
jns
or
push
sub
xor
ds
pop
pop
lret
or
push
mov
sti
xor
cwtl
xor
pop
add
pop
sub
mov
mov
cli
pop
adc
fildl
imul
sbb
inc
mov
dec
push
push
data16
divb
arpl
inc
xchg
xor
jbe
xchg
cli
mov
call
mov
out
push
ret
and
aaa
push
lea
filds
call
ss
aam
cmp
aam
fcoml
xchg
xchg
mov
jo
mov
popf
aas
lcall
test
mov
pop
inc
xchg
pop
fstps
cmp
pop
pop
ljmp
fsubrs
add
lahf
and
dec
in
cltd
test
sbb
fs
test
cmpsb
insl
lea
dec
das
jl
xor
cmp
mov
es
fsubs
or
sbb
inc
rclb
push
mov
and
push
push
fmull
xchg
stos
in
shrl
add
mov
xchg
repz
pop
sbb
sbb
scas
sbb
ss
iret
mov
loopne
daa
iret
lcall
dec
xchg
out
outsl
outsl
and
sbb
pop
push
movsl
sbb
inc
rcr
cmp
stc
dec
fcoms
in
cmp
repz
fiaddl
hlt
or
or
mov
fnstsw
mov
push
mov
pop
add
in
jp
dec
sar
push
sbb
cmpsb
fimull
pop
push
insl
mov
call
mov
repz
push
dec
pop
mov
out
xchg
xor
adc
pop
sbb
stos
and
push
inc
mov
xor
push
stos
xlat
in
in
dec
fcoms
je
xchg
out
jo
test
sub
fdivl
jp
cmpsl
fsubl
push
xchg
push
aad
xchg
int3
fisttpl
push
outsb
jmp
dec
es
nop
add
das
inc
jb
ja
jbe
stos
outsl
push
int3
sbb
dec
sbb
and
std
and
js
push
dec
cmp
in
adc
xor
sbb
push
xchg
pop
inc
in
lret
inc
sub
dec
repnz
inc
idivb
std
push
add
cld
dec
mov
xchg
outsb
fnstenv
jb
adcl
aaa
xchg
cmpsl
nop
jmp
ja
lock
xor
and
clc
nop
jns
push
cmp
mov
xor
xor
in
push
mov
cltd
bound
fs
cs
cmc
shrl
xor
popf
sub
movsl
fst
add
jae
out
bound
push
sbb
dec
test
sub
cmp
clc
popf
out
dec
pop
jge
dec
mov
add
or
popf
lret
and
or
movq
fbstp
fildl
scas
sub
mov
adc
fistps
leave
test
jne
lods
mov
test
push
insb
into
add
push
inc
cmp
in
pop
test
cli
test
lahf
dec
xchg
pusha
and
test
rcrl
cmp
fiadds
addb
mov
cmp
mov
aaa
mov
call
outsl
or
lds
jmp
pop
in
data16
outsb
xchg
addr16
loope
cmp
xor
push
popf
xchg
or
scas
cmp
mov
jns
xor
mov
add
cli
mov
roll
ficompl
rcrl
or
out
flds
ret
pop
leave
xor
std
iret
lods
data16
sbb
mov
xchg
sbb
fadd
stc
xor
mov
stos
ret
cmp
jmp
inc
inc
sub
pop
in
xchg
jmp
mov
pop
sub
out
cwtl
pop
sbb
je
leave
sti
iret
or
das
imul
lcall
sub
fmuls
jne
mov
cmp
jge
loopne
lods
pop
in
sbb
aaa
pusha
pop
cmpsb
ficompl
pop
pusha
iret
xor
scas
cmp
dec
add
dec
add
inc
fisubs
int3
lret
stos
mov
int3
jecxz
xlat
or
jno
pop
shr
jmp
xchg
add
pop
mov
xchg
push
and
lods
mov
lds
sti
aad
pop
out
inc
daa
mov
mov
fidivrl
dec
out
mov
iret
outsl
lahf
push
ds
and
add
sub
mov
push
mov
xchg
out
mov
xor
dec
jge
shl
adc
xor
mov
jno
ret
ret
movsb
in
jns
or
sarl
inc
mov
daa
loope
aam
dec
fisubs
xor
push
mov
popf
sti
mov
add
insb
mov
cmpsb
test
xor
add
aad
jle
push
lcall
jo
pop
push
pop
add
xor
jle
cmp
movsl
xchg
push
and
popf
mov
loop
punpckhdq
push
testb
jl
push
pop
popf
xchg
ficoml
pushf
fsts
ds
push
cwtl
and
xchg
pop
add
and
cmp
js
fwait
cmpsl
xchg
mov
lcall
fldcw
addr16
dec
add
mov
mov
cld
into
es
push
in
aas
fistl
pop
pop
inc
mov
clc
push
push
je
fwait
cmp
dec
ret
jne
cmp
inc
inc
cwtl
movsb
mov
adc
bound
dec
fs
adc
cmpsl
lods
push
movsl
or
sbb
frstor
add
and
rorl
lock
std
les
lds
mov
rcll
and
xchg
adc
or
xchg
pop
nop
xchg
in
push
testb
fdivl
repz
in
inc
cli
ds
mov
sub
repz
aaa
jecxz
xorl
enter
ret
sbb
shlb
leave
sbb
lret
dec
pop
sahf
data16
mov
jo
pushf
mov
pop
and
into
scas
repnz
ret
xor
mov
in
nop
sub
cltd
push
outsb
aas
pop
cmp
dec
sbb
and
ja
aas
fisttpl
mov
sbb
insl
lret
in
int
sbb
sub
pop
xchg
cltd
loopne
mov
rorb
stc
jg
or
cmpsb
sub
push
inc
gs
addr16
insb
and
cmp
pminsw
mov
mov
lods
pop
xchg
xor
cltd
nop
call
pop
and
mov
aas
adc
jecxz
fimull
mov
nop
ret
xor
jnp
in
jle
fildll
or
cmc
xchg
flds
xor
pop
xor
jle
lret
push
dec
mov
xor
xchg
fwait
leave
sti
gs
loop
cmc
pop
adc
aas
add
mov
xorl
pop
out
aad
sub
sub
cmpsl
mov
add
outsb
add
out
in
popf
cmp
jnp
mov
or
or
push
out
lea
adc
jg
imul
mov
lods
xor
xchg
sti
shll
mov
dec
mov
push
in
jno
loope
in
push
and
sub
or
push
mov
bts
xor
leave
sbb
test
pop
mov
stc
cmpsb
loopne
loopne
je
or
add
lea
cmp
inc
jle
xor
mull
push
stos
and
movsb
sbb
ss
push
movsl
in
pop
cwtl
pop
aam
xchg
add
call
testb
sub
xchg
xor
jae
mov
loopne
push
repnz
adc
gs
xchg
scas
cs
rolb
jp
addl
sbb
decl
fnstsw
jb
shlb
in
and
and
sti
cmpsl
mov
pop
xor
movsl
repz
or
lahf
and
outsb
push
stos
push
mov
sbb
enter
fistps
aad
mov
inc
leave
sahf
pusha
js
sub
jae
mov
jns
lods
int
cwtl
inc
jno
inc
mov
lods
push
out
aad
dec
sbb
hlt
dec
int3
xor
std
testb
fwait
mov
mov
jbe
add
or
daa
sbb
jne
jp
clc
xchg
shll
sbb
adc
add
jns
adc
fs
mov
jge
scas
jo
or
sbbb
incb
rorl
test
int
lahf
ja
jg
lahf
cmpl
push
daa
sbb
mov
sub
jbe
aaa
xchg
xchg
xor
pop
sub
cmp
sarb
cmp
pop
shll
inc
jns
add
and
dec
lcall
imull
sub
repnz
punpcklwd
jns
sub
stc
add
das
cmc
scas
or
sti
cmp
sub
dec
cli
sbb
add
jo
aaa
xor
repnz
movsl
push
pop
enter
rclb
dec
mov
mov
les
xchg
ret
mov
jecxz
mov
outsb
sahf
ljmp
cmpsl
mov
adc
fbld
stc
sbb
mov
int
imul
pop
in
lret
pop
push
aaa
movsb
icebp
rorl
aas
das
push
in
cmpsl
frstor
movsb
dec
arpl
push
add
in
ret
cmc
insl
loope
or
push
aas
test
call
arpl
push
fcomps
lret
xlat
add
scas
daa
sub
stc
xchg
loope
xchg
into
popf
mov
push
dec
and
mov
cwtl
movsl
xor
adc
jae
std
rclb
xchg
pop
fiadds
cmpsl
xor
iret
aaa
push
ljmp
cwtl
mov
mov
mov
sbb
call
imul
push
pop
mov
mov
sbb
xchg
jge
adc
imul
dec
pop
das
iret
mov
sbb
xor
adc
imul
ret
jns
test
mov
xor
negl
imul
and
cmp
loope
dec
jg
add
sub
add
mov
lock
les
test
or
push
lea
add
mov
add
test
ljmp
imul
stos
test
aaa
aaa
ss
in
cs
mov
cmp
or
ret
movsb
mov
cmp
pop
push
xchg
pop
jg
pop
or
xor
xor
xor
addr16
movsl
data16
loopne
adc
sbb
jecxz
add
push
pop
leave
mov
sbb
rcl
xchg
pop
outsb
in
outsl
insl
orb
test
jmp
out
or
dec
lahf
sbb
xchg
lods
mov
fcmove
out
mov
and
pop
fldcw
arpl
mov
int
test
sub
and
aaa
cwtl
imul
loopne
push
aaa
loop
adc
mov
ljmp
push
sub
or
xchg
test
jg
aas
lret
aas
mov
inc
les
aad
and
sbb
lsl
jle
lcall
jmp
gs
stos
cmp
mov
push
in
aad
jg,pn
adc
fprem1
repz
inc
lea
cmc
add
pop
xchg
push
outsl
aam
dec
mov
dec
and
loope
xchg
daa
inc
jl
out
or
mov
or
call
pop
adc
push
mov
and
cmp
and
jmp
pusha
rcrb
add
pop
scas
xor
mov
cmp
and
inc
lcall
add
lret
cmp
jb
icebp
sahf
pop
aaa
inc
int
jbe
faddp
xor
mov
xchg
popf
cld
mov
icebp
xor
cmp
imul
xor
mov
push
dec
dec
push
and
dec
sti
adc
rcrb
xor
div
jb
fdivrp
pop
cli
pop
mov
outsl
outsb
icebp
xchg
js
dec
sbbl
inc
jo
pop
lock
lcall
enter
es
fidivl
xlat
add
xchg
out
push
jbe
inc
cwtl
sbb
mov
mov
jg
das
in
pop
jge
test
mov
cmp
dec
pop
fadds
lds
loopne
out
scas
push
jg
mov
pop
xchg
mov
xchg
push
push
pushf
addr16
or
jb
sbb
jl
jnp
add
test
mov
popa
in
mov
scas
clc
mov
mov
shrb
dec
xor
pop
sbb
xor
out
jnp
cmp
repz
nop
and
nop
movsl
in
inc
dec
cmp
stos
adc
push
fdivr
or
test
sub
mov
inc
pushf
and
adc
stos
xor
outsl
pop
mov
lds
int
scas
rclb
leave
dec
xor
xor
stos
or
int
inc
sbb
add
jnp
movsl
mov
aaa
shrl
mov
xor
sbb
push
test
sahf
lock
adc
out
inc
lods
and
xchg
pop
push
test
cmp
jmp
stos
repnz
test
add
rcr
cwtl
jmp
sbb
cli
mov
mov
jae
fbld
mov
push
xchg
mov
movsl
mov
and
fnstcw
push
pop
xchg
sub
and
dec
cltd
sbb
jg
add
or
cmpsl
mov
faddl
mov
mov
hlt
ja
arpl
out
xchg
jle
xchg
aam
xchg
xchg
or
mov
jae
stos
pop
aad
xorb
dec
inc
repnz
xor
mov
xor
movb
cmp
sarb
cld
mov
xor
pop
cmp
cmp
in
jne
mov
mov
adc
mov
aam
dec
cltd
iret
pop
addr16
cli
or
or
addr16
lds
insb
and
push
mov
js
lret
or
push
icebp
lea
fcoms
xor
ficomps
sbb
cmc
pop
dec
jbe
cmpsl
and
push
sti
cmp
fisubl
mov
push
sti
cmp
jmp
adc
xchg
out
test
outsb
cmpsl
push
pop
add
and
fisttpll
sub
jne
xchg
data16
dec
lods
push
dec
shl
out
inc
or
adc
arpl
push
loopne
xor
lods
pop
xchg
xorl
stos
test
iret
andb
testl
mov
jmp
jl
aad
fdivl
xor
add
test
test
pop
enter
sbb
enter
lahf
xchg
int
xlat
cmc
pop
push
ss
shlb
cmp
xchg
js
push
sbbl
dec
fwait
enter
xchg
imul
scas
call
dec
or
sahf
mov
push
fdivp
fiaddl
adc
inc
pop
stos
lcall
test
or
xor
jo
aaa
mov
cli
iret
push
mov
ljmp
mov
lcall
adc
shlb
and
push
push
adc
jg
sbbl
pop
jbe
and
int
mov
in
in
mov
dec
pop
sti
dec
andl
js
fstl
sbb
rcrl
vmwrite
mov
cmp
insl
lcall
and
xor
fdivl
cmp
mov
je
test
jp
inc
fimuls
ds
out
adc
out
mov
ds
dec
addr16
mov
lahf
sub
jne
push
fwait
mov
sbbb
fldl
testl
or
add
test
mov
mov
xchg
mov
add
cmpsb
adc
xchg
ds
cmp
rdmsr
aas
clc
cs
cltd
mov
mov
xchg
iret
aaa
inc
in
jnp
pop
pop
or
into
hlt
scas
dec
sti
lock
mov
mov
mov
lods
or
push
add
in
aaa
data16
mov
sub
xchg
push
cmp
movsb
orb
sub
data16
imul
fidivs
cwtd
cmpsl
xchg
and
movsl
sbb
xor
sub
and
add
jp
inc
adc
and
out
fsubl
xlat
xor
and
push
push
inc
aad
mov
pusha
mov
jne
loop
popf
bound
push
fcoml
loop
mov
mov
out
lcall
sub
mov
mov
jno
cmp
adc
pop
test
rolb
pop
jmp
or
popf
pushf
das
scas
bound
xlat
mov
insl
jno
int3
inc
jb
jecxz
aad
mov
insb
rorb
test
xchg
fs
mov
lret
or
loop
adcb
add
pop
popa
fdivl
popa
or
flds
imul
into
jl
into
or
pop
mov
or
fsub
pop
dec
and
lea
pop
jp
mov
cmp
into
lret
xchg
mov
enter
push
mov
loopne
inc
mov
out
and
lds
popf
sbb
inc
mov
es
xchg
dec
cld
push
gs
jne
sar
jbe
jae
mov
pop
addl
inc
sub
mov
in
mov
mov
pusha
test
cltd
sbb
call
lret
sbb
mov
mov
je
push
mov
jb
xchg
mov
jecxz
push
push
cmp
push
xor
jb
xchg
nop
notb
adc
ficoml
jmp
bound
adcl
adc
sub
sub
mov
sbb
ds
lods
push
adc
imul
fsubrp
icebp
ror
cli
lret
mov
or
mov
add
in
sahf
and
and
mov
xchg
je
push
adc
cmp
bound
and
mov
xchg
jge
fdivs
sbb
outsb
push
addr16
xlat
leave
popf
lods
test
inc
ret
inc
cmpsb
je
cmp
fdivrs
inc
adc
pop
inc
adc
roll
adc
xor
icebp
adcb
jno
jbe
sub
orb
mov
jmp
test
mov
xchg
mov
push
mov
adc
aas
or
out
sbbb
fs
movsb
mov
mov
daa
into
pop
sbb
pop
dec
push
pusha
xor
adc
push
mov
cmc
sbb
hlt
jne
fstps
or
sub
nop
push
and
cmp
and
or
or
gs
adc
mov
sarl
sub
dec
and
add
dec
fs
out
andl
pop
sbb
divb
cmp
movsl
mov
in
inc
lock
push
outsb
or
out
es
inc
or
push
cmp
pop
pmuludq
sub
and
mov
dec
xchg
inc
adc
jnp
fstps
cmp
sub
or
pop
mov
push
push
push
mov
dec
sbb
xor
mov
push
mov
shll
fmulp
push
adc
loop
sbb
cmpsb
int3
mov
xchg
pop
sub
mov
push
cmp
int
mov
mov
push
mov
fsub
icebp
push
jmp
jb
leave
add
in
xor
pusha
sub
repz
aam
and
lahf
fildl
in
pop
mov
leave
mov
add
push
mov
mov
shlb
jecxz
mov
hlt
in
addr16
push
jmp
out
lock
insb
pop
xchg
movsl
fimull
lock
jp
push
xchg
ljmp
out
push
sub
jo
add
add
scas
into
push
imul
fwait
jge
cmp
sbb
sub
pop
lcall
mov
xor
data16
push
mov
lods
adc
adc
sbbb
imul
ror
xchg
lret
aad
mov
or
xchg
xchg
pop
xchg
pop
push
scas
aas
fcmovnbe
lods
mov
insb
add
mov
insl
fdivrl
shll
nop
cmp
fnsave
imul
sahf
test
in
fcmovnbe
leave
inc
xorl
pop
mov
cmp
and
sti
add
jo
xchg
or
fists
rorl
dec
mov
and
add
mov
pop
std
cmpsb
xor
and
dec
loop
xchg
sub
sbb
test
xor
inc
and
mov
cli
lds
vaddsubpd
jmp
andl
push
rcrb
jo
mov
inc
sarl
ds
cmpsb
dec
sub
mov
lods
pop
inc
call
test
out
stos
rolb
adc
jo
xor
adc
sub
pusha
cmpsl
outsl
jecxz
and
ret
test
dec
pushw
stos
mov
into
mov
das
enter
xchg
les
jle
loop
test
sub
xor
leave
inc
mov
fs
adc
aaa
jo
or
adc
jmp
cld
sti
add
into
lahf
ja
pop
sbb
pop
jne
cs
push
mov
xchg
loope
mov
std
dec
add
stos
sbb
ss
xchg
pop
sub
out
test
rcrl
adc
sbb
cmp
in
test
cld
dec
andb
push
cmp
cmp
sbb
xchg
and
add
shrl
add
or
xchg
fldt
ficoms
mov
mov
cli
aam
sbb
rcll
outsl
jmp
or
push
dec
cmc
jmp
imul
jle
inc
adc
lea
clc
jle
scas
test
xor
popa
popa
cmp
cvtps2pd
xchg
jecxz
push
adc
push
iret
cld
fwait
repnz
loope
and
aas
jecxz
push
roll
cwtl
jns
xor
pop
popf
pop
adc
stos
sbb
sub
int3
les
dec
setg
repnz
push
movsb
add
lret
fimull
xorb
rol
stc
ljmp
cwtl
inc
jbe
insl
push
adc
jo
push
mov
dec
and
negb
xchg
pop
mov
cmp
jge
jl
dec
outsb
dec
lcall
mov
lret
xor
ja
jae
adc
insl
or
sub
xor
loop
test
rorl
lahf
mov
mov
into
jne
push
xor
psubsw
dec
in
or
dec
repnz
sub
clc
fldenv
imul
mov
lahf
ds
ljmp
inc
mov
push
sbb
or
subb
out
sbb
push
xchg
xor
cmc
xlat
ljmp
xchg
mov
ret
mov
loop
popf
cwtl
sub
sub
mov
cmc
lret
jmp
or
xor
pop
sbb
xor
lock
loop
outsb
mov
mov
inc
clc
adc
jp
outsl
and
inc
pop
add
scas
dec
mov
les
dec
cmp
lea
mov
mov
jbe
fldt
push
dec
sbb
and
push
aas
jae
xor
mov
cli
lods
cmc
out
out
or
add
xchg
loop
xor
sub
xchg
je
sarb
cwtl
mov
ret
fwait
js
shll
and
sub
shr
mov
sub
adc
or
inc
cld
adc
into
imul
jmp
sub
addl
jl
add
sbb
mov
repnz
inc
inc
jnp
mov
mov
stc
xor
lods
xchg
sub
andb
add
incb
mov
mov
xorl
sbb
aas
ds
push
xchg
adc
jle
add
push
adc
nop
dec
mov
cmp
jecxz
sub
cmc
test
inc
sbb
ss
sbb
out
xor
inc
test
repz
push
idivl
sub
xchg
mov
lds
lret
mov
or
mov
xor
aas
jmp
aad
int3
push
ss
add
mov
xor
push
mov
jle
imul
dec
in
dec
inc
lret
imul
roll
movsb
lret
rcl
xchg
add
xchg
cmp
fiaddl
and
mov
aad
push
adc
sbbl
add
inc
scas
fildll
or
cmp
loop
mov
mov
ljmp
fdivrs
push
or
aaa
int3
and
dec
in
push
and
sarl
adc
pushf
push
jnp
int
scas
testl
test
push
or
add
dec
xor
std
jl
xchg
add
sub
and
pop
mov
fwait
dec
cmpsb
shl
clc
loop
mov
and
out
cwtl
mov
scas
inc
mov
lcall
mov
scas
sbbl
aas
mov
dec
imul
xchg
sbb
xor
jne
cld
sbb
subl
sub
aas
sbb
inc
into
faddl
fcompl
push
hlt
sbb
and
mov
daa
inc
shll
jmp
cmpsb
leave
cmp
shr
and
xchg
jae
xor
pop
jecxz
sbb
jb
shlb
xor
lock
lods
fisubs
ljmp
push
ss
movsl
cmpsl
sub
js
sub
jmp
push
negl
outsl
xchg
in
mov
push
or
cmpsl
rol
into
mov
mov
mov
push
jg
jge
push
mov
and
ja
mov
aas
popa
dec
incl
mov
and
jb
and
mov
xchg
mov
stc
cs
and
dec
mov
loope
movsl
mov
bnd
in
push
push
inc
sbb
mov
data16
and
mov
call
dec
das
xor
jmp
pop
in
jecxz
loop
pop
fsubl
jge
sub
xchg
sbb
push
adc
lock
idivb
daa
mov
arpl
sbb
push
add
mov
and
cmpsl
xor
push
loopew
fwait
jge
mov
mov
neg
jp
or
jg
lcall
aad
mov
or
into
stos
lea
mov
icebp
xchg
mov
stc
push
fiadds
sbb
xchg
addb
popf
aaa
mov
mov
or
and
scas
push
aaa
aas
ss
test
mov
nop
aam
pop
repnz
jne
dec
add
lods
fstp
aaa
inc
pop
jnp
xchg
lods
pop
add
pop
mov
iret
jmp
and
ja
pop
xchg
js
push
sbb
add
jecxz
es
adc
push
add
pushf
sub
in
jae
cmp
sub
xchg
mov
ljmp
mov
jo
xchg
jmp
push
add
push
out
adc
sti
jp
xchg
pop
das
loope
dec
and
jl
loop
mov
jle
mov
repz
jecxz
mov
jno
sub
xor
lock
jle
xchg
popf
mov
scas
arpl
data16
std
shlb
jg
xchg
push
jns
lret
sub
pop
push
inc
iret
push
xchg
dec
out
pop
arpl
push
gs
lods
leave
paddsw
mov
repz
lds
add
test
fisubs
sub
xchg
mov
push
lock
pusha
and
adcl
mov
loopne
sub
outsb
xor
and
hlt
in
je
push
inc
inc
add
jno
jge
xor
ja
sub
scas
xor
mov
cmc
xor
or
xor
out
scas
mov
sbb
push
pop
pop
jbe
sub
stos
fisttpll
ror
movsl
jmp
dec
enter
push
inc
hlt
adc
jg
enter
cltd
stc
and
enter
cli
lea
xchg
dec
std
mov
inc
mov
nop
inc
mov
push
jg
push
mov
jno
fsts
ljmp
jge
andl
inc
jmp
aas
mov
dec
stos
hlt
add
rorb
int3
lcall
adc
inc
enter
mov
dec
cmp
push
sbbl
mov
outsl
ret
repnz
loopne
mov
lret
lods
inc
xor
notb
xor
stc
push
lea
sub
xor
mov
xor
daa
adc
in
inc
out
xchg
mov
add
test
mov
test
pusha
aam
dec
adc
jne
mov
test
repnz
cmp
mov
shrb
mov
xchg
int3
je
xor
movntps
leave
insl
stc
pop
sub
push
into
fildll
sahf
inc
rolb
inc
fstl
ret
mov
jmp
addr16
pop
fwait
add
lea
mov
add
cmc
cmp
push
dec
mov
fwait
aas
or
mov
inc
movsl
jno
fimull
sbb
enter
out
and
lret
pop
adc
push
jle
xor
fbld
lock
aaa
ljmp
push
test
and
shrl
rcrl
and
xlat
xchg
sete
outsl
shll
rolb
pop
rolb
xor
aam
in
add
nop
xor
popa
pop
js
cmc
xorl
mov
adc
fdivrp
jmp
nop
imul
pusha
ret
fnstcw
fdivs
xor
fs
push
mov
movsl
cmp
jb
out
sti
test
ret
cmp
adc
mov
bound
mov
or
pop
mov
mov
movsb
xor
jne
push
leave
sub
push
inc
aas
xorb
mov
xchg
jns
mov
jbe
sbb
push
ret
or
arpl
jle
jp
clc
test
inc
push
xlat
aam
arpl
fisttpll
and
enter
sbb
jl
dec
sbb
std
xor
and
gs
es
xchg
aaa
and
adc
ret
ret
repnz
mov
pop
xor
dec
stc
lock
push
xchg
test
cmp
fisttpl
std
add
mov
pop
push
push
ljmp
adc
dec
cmc
cmp
lods
test
rcll
insb
ljmp
mov
add
adc
jg
push
sbb
icebp
mov
mov
dec
mov
pop
xor
repz
mov
adcb
aam
in
daa
inc
mov
outsl
mov
lods
js
rolb
mov
sub
push
mov
xor
inc
push
incl
pusha
jne
adc
jl
nop
fiaddl
out
rcll
fs
sub
inc
and
mov
lea
aas
mov
pop
insb
mov
jl
mov
fs
mov
mov
sub
pop
fwait
pushf
push
and
xor
fadds
in
xlat
xchg
jg
or
push
mov
add
ja
jg
pushf
adc
ljmp
ljmp
lcall
outsl
addl
xorl
jg
pop
pop
scas
or
lea
dec
xchg
and
repz
fnsave
or
ret
lods
mov
mov
mov
imul
std
mov
adc
jo
repz
pusha
ret
repz
pop
ja
cmp
push
inc
fdivl
jmp
jno
imulb
dec
xlat
in
pusha
imul
mov
jbe
inc
xchg
mov
push
lock
pop
dec
adcb
mov
mov
ss
xchg
xchg
sub
jge
enter
mov
mov
dec
outsl
loopne
inc
imul
js
flds
add
or
inc
pop
iret
and
jp
or
imul
sub
push
fldenv
aam
pop
arpl
cmp
pop
movsl
mov
pop
jmp
test
xor
cltd
lahf
adc
dec
mov
jno
push
xor
cmp
lret
xlat
sub
pop
sub
sbb
shll
xchg
test
into
mov
pop
fidivrs
into
lock
cmpsb
sbb
shrl
stc
test
sti
iret
mov
cmpsb
scas
mov
repnz
jecxz
pop
stos
pop
cmp
sti
sbb
push
pop
pop
mov
popf
adc
mov
lret
pusha
sub
jb
movsl
or
fisubrs
test
stos
or
or
daa
mov
sub
xchg
mov
outsb
cmp
test
add
and
cs
or
ret
jecxz
jne
pop
cwtl
mov
mov
xchg
mov
jge
mov
addb
lahf
adc
push
cltd
push
jno
test
stos
sub
mov
mov
cli
push
cmc
jo
rorl
mov
mov
in
xor
xchg
push
jb
out
scas
clc
sbb
push
ds
pop
shr
loopne
push
mov
mov
xchg
sbb
or
add
pop
jle
call
into
adc
ds
sahf
pop
orl
int
cmp
enter
gs
jb
icebp
adc
sub
xchg
mov
dec
and
ret
es
testl
add
cmp
pop
add
xchg
mov
mov
scas
inc
inc
push
rclb
arpl
popa
sti
cmpsb
movsb
lahf
scas
pop
and
out
adc
js
dec
repz
mov
scas
mov
imul
add
call
xor
and
jle
pop
xor
loop
sbb
clc
sub
and
push
fldenv
mov
push
dec
mov
cmp
imul
sbb
clc
stos
adc
pop
adc
lret
pop
aas
or
adc
out
bswap
inc
dec
mov
pusha
shlw
dec
xchg
pop
es
push
call
jle
xchg
push
mov
push
lods
frstor
inc
jge
loop
lods
jo
test
cmp
in
mov
orl
gs
shrb
out
xchg
pop
movsb
popf
andb
imul
iret
jns
add
xor
pop
mov
imul
ret
clc
test
hlt
pop
pop
sub
dec
mov
xchg
sub
mov
aaa
and
jecxz
rclb
pop
test
xor
in
pop
mov
pop
add
mov
xchg
ret
inc
mov
in
mov
push
sahf
lret
gs
jl
fmulp
lcall
mov
lret
movsb
pop
mov
or
and
ja
popf
push
loop
adc
idivb
xor
fisttpl
add
dec
pop
pop
push
mov
push
inc
std
jbe
mov
mov
sbb
in
pop
cmp
jmp
repz
ja
aad
mov
aas
insl
xlat
push
inc
mov
sub
test
stc
into
pop
andb
pop
in
push
lods
aam
jl
test
shlb
in
hlt
or
inc
cmp
test
cli
sbb
divb
rcrb
fidivrl
cltd
rcrb
mov
popf
bound
sub
test
cmp
pop
mov
int
shl
ds
sub
jmp
repnz
inc
xlat
sbb
and
mov
and
int
inc
dec
fwait
stos
sbb
inc
pop
xchg
in
insl
rcrl
xor
clc
xchg
fs
jle
js
inc
rorb
inc
adc
or
jmp
andl
xchg
dec
cmp
out
mov
mov
out
mov
xlat
aas
rorb
icebp
push
xor
cli
hlt
jge
lods
std
xlat
push
pop
movsl
push
sbb
scas
jecxz
hlt
or
std
sbb
mov
sub
mov
jl
cmp
out
enter
lahf
ljmp
jmp
ja
sbb
sahf
fcomip
shll
call
cmp
jg
xor
dec
sub
add
insb
fcmove
push
mov
in
add
int
sub
icebp
cmpsl
clc
js
push
inc
pop
stos
add
insl
lcall
testb
call
call
mov
das
cmc
imul
ljmp
add
ret
jp
sarb
aaa
push
pop
or
mov
lods
daa
movsb
in
gs
and
outsl
jge
pop
lahf
loope
push
stc
imul
dec
outsl
jecxz
call
dec
insb
push
push
cmpsb
out
push
cli
sub
call
sub
dec
sub
sbb
iret
add
cli
or
inc
inc
shrb
addl
xor
outsl
mov
cmp
add
sub
rcr
dec
mov
daa
mov
movsb
aaa
xor
daa
sub
enter
push
xchg
cmpsb
imul
loopne
push
cmp
imul
mov
xor
mov
mov
push
jecxz
push
mov
popf
fdivrl
push
fldl
test
mov
push
mov
dec
cmp
add
mov
add
test
mov
mov
xchg
pop
sbb
adc
xchg
fs
lea
and
lcall
in
lea
and
lods
cmp
inc
outsb
call
scas
or
sbb
ret
clc
push
push
inc
sbb
int3
movsl
orl
fst
loop
adc
mov
aam
dec
xchg
add
pop
aaa
cmp
mov
xchg
or
push
in
sarb
cmpsb
push
cmpsb
shl
mov
mov
clc
lret
lea
xor
mov
lds
daa
cmp
and
ljmp
shlb
xchg
xor
inc
mov
and
and
mov
pop
inc
pop
push
or
push
or
or
jno
mov
mov
push
jmp
cs
jmp
test
pop
add
test
ret
cmp
dec
imul
adc
jnp
push
jbe
jmp
pop
xchg
xor
mov
rol
hlt
inc
jne
roll
nop
jae
lods
out
rolb
mov
push
stc
inc
mov
ljmp
jnp
ljmp
pop
insb
cld
aas
aas
push
jne
xor
lcall
jno
in
jge
aam
inc
neg
xchg
and
rcll
ds
jo
repnz
sbb
add
mov
pop
inc
push
pop
test
push
xor
pusha
imul
test
mov
scas
lahf
outsb
sbb
ret
cmc
jb
decl
mov
xor
cmc
push
out
or
inc
sub
cmp
scas
mov
pop
jb
scas
cwtl
pop
jg
pop
pop
fwait
icebp
push
push
mov
cs
adc
jl
sbb
cmp
add
and
cmc
add
add
call
in
and
push
push
mov
sti
clc
ficompl
jae
mov
lret
and
or
sub
inc
jne
xchg
add
lret
mov
sub
xchg
mov
jmp
mov
js
cmp
pop
js
mov
fistps
xor
scas
fidivs
cmpsl
adcl
push
int3
inc
mov
push
push
je
cmpsb
xchg
test
inc
rolb
mov
add
cs
popa
int3
or
inc
sbb
xor
lcall
outsb
and
cwtl
cs
add
loope
out
push
popa
add
stc
sub
fnsave
push
popa
inc
andb
adc
and
into
cwtl
frstor
mov
xor
add
pop
das
xchg
or
test
mov
enter
adc
out
inc
out
shrl
or
testl
jno
xchg
arpl
sub
loop
fld
xchg
pop
call
data16
rcrl
gs
cmpsl
xchg
mov
lock
sti
sti
fildll
dec
mov
lret
mov
sbb
fldl2t
shl
imul
lods
and
sbb
pop
mov
jbe
test
outsl
pop
icebp
fimuls
dec
pop
xchg
ss
push
or
push
and
rclb
daa
xor
pop
mov
push
fidivs
test
xor
leave
or
jg
sahf
cli
pushf
xor
aad
mov
inc
sti
iret
jg
imul
repz
mov
or
mov
jl
push
div
imul
stos
push
test
push
or
fisttpll
js
jge
adc
gs
lahf
push
stos
sub
clc
or
fwait
dec
or
mov
jnp
icebp
sarl
xor
push
jmp
icebp
iret
xor
xlat
std
xchg
rcrb
test
and
push
push
jb
int
call
loopne
ja
pop
insl
stc
mov
jbe
dec
xorl
mov
movsb
cld
mov
mov
jecxz
sub
cmp
mov
xchg
nop
sub
jl
add
or
es
cld
mov
xchg
add
or
adc
xor
xchg
test
js
out
cmc
ja
push
jge
mov
mov
jp
push
cmp
add
pusha
and
ss
push
out
pop
and
or
enter
mov
aas
fs
fbstp
cs
imul
aad
mov
out
ret
push
into
pop
in
push
inc
mov
or
xlat
mov
je
mov
mov
mov
ja
cld
push
mov
cli
pusha
push
pusha
iret
sar
pop
ja
xor
cltd
push
add
ret
cmp
ror
push
in
push
imul
add
sahf
mov
adc
xchg
pusha
lahf
outsl
sbb
les
adc
mov
add
mov
arpl
push
push
xor
inc
lods
sahf
mov
clc
adc
cmp
pop
mov
lcall
mov
cmp
and
push
push
jne
les
in
jg
xchg
scas
stos
mov
insb
stos
addl
push
mov
arpl
add
test
or
stos
bound
jne
jg
cmc
fcompl
mov
lea
sahf
leave
popa
sbb
xchg
cmpsl
pop
push
push
pop
idivl
fidivrl
adc
shll
jb
sub
dec
mov
movl
lea
sbb
repnz
jp
mov
in
inc
clc
outsb
movb
xchg
dec
jl
dec
jecxz
mov
shlb
sub
int
pop
inc
cmp
jp
cmp
addb
mov
std
sahf
jns
ss
add
dec
out
xlat
and
shlb
pop
inc
fcompl
clc
ret
mov
adc
mov
sbb
repz
jge
inc
cmp
ss
push
mov
cltd
xor
idivb
in
fnstcw
enter
pusha
push
das
sub
popl
jo
shrl
cmp
andb
cmpsl
inc
xlat
jecxz
je
andb
mov
lret
ljmp
adc
xchg
fistpl
int
push
ss
enter
inc
pop
push
push
fbstp
jg
cmp
cmc
mov
add
push
mov
loope
dec
and
push
push
lahf
xchg
jmp
imul
jae
insb
xchg
push
push
xor
addb
inc
mull
out
push
nop
imulb
cld
popf
cli
mov
jmp
sahf
jae
sub
fyl2x
out
icebp
xor
das
test
lods
pusha
ljmp
aad
pop
jno
sbb
subl
adc
popa
fmuls
push
lcall
icebp
cmp
adc
pushf
jl
aam
adc
hlt
int3
lea
aaa
or
add
in
dec
sarb
shrl
lods
mov
fcoml
inc
inc
in
push
mov
push
test
cmp
inc
lret
adc
dec
jp
daa
sub
mov
scas
fdiv
jp
cmp
push
fimuls
mov
jns
pop
pop
push
pop
mov
dec
and
sbb
fwait
in
xor
inc
dec
dec
mov
push
and
mov
pop
jg
mov
popf
pushw
aas
inc
jecxz
aam
or
or
jo
and
and
jbe
int3
jns
inc
mov
mov
cmp
jg
pop
addr16
inc
aas
in
xor
movsl
mov
xor
iret
and
div
inc
nop
std
sbb
cmp
mov
clc
sub
pop
in
inc
lock
leave
lods
or
or
push
scas
mov
lcall
hlt
and
cs
cmp
push
mov
mov
cmp
faddl
inc
mov
adc
loop
inc
and
jae
int3
or
or
loope
js
rcr
inc
lock
pop
es
dec
xchg
mov
mov
adc
add
fcmovnb
out
aaa
mov
lret
movsl
mov
mov
add
xchg
insb
and
xchg
rol
stos
xor
inc
cs
sub
test
xor
add
mov
outsb
test
mov
fdivrl
xchg
nop
cli
out
jg
rorl
iret
jb
rorl
dec
cmpb
lock
adc
lea
in
lds
std
out
cmp
test
icebp
mov
pop
add
sub
mov
dec
mov
cli
pop
mov
dec
mov
and
cmp
or
jp
inc
dec
mov
cmp
xchg
and
lret
inc
add
fsubl
jbe
test
or
and
adc
daa
adc
pop
clc
push
xchg
cmp
or
inc
dec
mov
ficompl
int
mov
adc
pop
inc
fidivl
insl
xchg
in
enter
movl
fdiv
jbe
xchg
outsl
xor
pop
movw
xor
dec
outsl
sti
jge
push
cld
js
cmpsb
push
sub
cmp
sbb
adc
or
mov
push
rclb
data16
and
cmp
fidivl
mov
sti
mov
sti
xchg
jecxz
pop
adcb
js
xor
stos
faddl
shl
jp
xor
pop
in
repz
fmulp
xor
ret
sub
loop
jl
xor
int3
mov
adc
pop
jmp
mov
jl
neg
or
adc
push
sti
push
jo
and
inc
test
inc
call
dec
pop
test
stc
out
cld
xchg
sub
enter
xchg
push
pushf
dec
push
pop
xchg
subb
adc
sarb
fwait
jle
call
mov
jl
scas
mov
cmp
cmpsb
push
inc
call
shrl
dec
gs
mov
inc
cmp
out
mov
repnz
loope
lock
jae
mov
add
cmc
mov
popa
fwait
cbtw
leave
sbb
int3
iret
clc
iret
adc
imul
jnp
pusha
jg
xchg
mov
bound
in
test
les
mov
add
popf
mov
nop
lret
cmp
and
lods
jne
mov
in
and
add
xchg
idivb
jle
imulb
cmp
mov
pop
push
mov
in
cmp
push
xor
lods
ds
sbb
scas
aas
imull
lods
test
adc
out
mov
outsl
adc
cmp
sahf
or
cmp
outsb
sbb
mov
jo
movsb
mov
pop
mov
jle
push
stc
fdiv
xchg
hlt
jb
vxorps
xlat
mov
imul
scas
aad
mov
jno
repz
mov
je
mov
xchg
pop
jg
cli
jne
sub
sbb
hlt
and
iret
lret
in
lock
xchg
jmp
sti
cmp
bound
push
out
fstpl
mov
fsubl
inc
nop
and
movsb
add
dec
cmp
dec
fsubp
jge
or
hlt
pop
or
scas
adcb
add
dec
push
loopne
imul
arpl
mov
insb
repz
pop
aad
xor
cltd
scas
icebp
dec
adc
je
cltd
test
inc
xor
or
lea
adc
jb
fldenv
add
push
xorl
ljmp
and
inc
ja
sbb
fldl
movsl
flds
mov
dec
cmpsl
cmc
add
std
xchg
into
jmp
out
and
xchg
fwait
mov
mov
iret
push
mov
fs
mov
push
mov
jnp
sti
pop
or
cli
fs
jmp
cwtl
ja
push
inc
addl
or
loop
mov
xchg
pop
inc
out
shlb
lods
popa
mov
ljmp
cmpsb
fcoml
pop
jnp
jb
xor
or
jle
popf
and
pop
dec
cmp
mov
cmp
xchg
jae
push
pusha
aas
adc
aas
andl
inc
push
add
mov
je
cld
popa
adc
call
adcb
cmp
pop
inc
add
dec
outsb
push
or
inc
mov
stos
iret
jnp
scas
sub
mov
jb,pn
addr16
xchg
push
outsl
add
pop
addl
push
clc
or
pop
incb
test
cmpsl
add
ja
fsubr
cmpl
iret
cmp
rclb
in
mov
lret
inc
inc
in
inc
lock
addr16
ret
pop
movsb
mov
insl
jno
rclb
and
push
sbb
push
outsl
adc
cmp
add
push
ret
xchg
idiv
mov
xchg
aaa
daa
in
sbb
sbb
pop
cmp
xlat
imul
enter
shll
mov
mov
popl
mov
lds
xchg
sub
mov
xor
js
jp
test
jmp
rcrb
add
inc
fs
test
pop
lods
loopne
adc
dec
sbb
scas
xor
sub
imul
adc
jmp
cltd
lret
mov
or
sbb
xchg
adc
adc
sub
icebp
pop
aas
dec
dec
arpl
in
jecxz
cmp
dec
mov
dec
ljmp
stc
std
shll
hlt
push
and
fsts
fnsave
scas
cs
mov
mov
test
test
jl
pop
dec
and
sti
pop
stos
sbb
iret
jbe
es
pop
push
pop
push
je
test
negb
std
loopne
sub
out
enter
mov
stos
jae
sbbl
or
outsb
xchg
sub
ljmp
dec
je
test
lea
and
and
movzbl
mov
loope
jae
dec
in
xchg
fyl2x
shlb
or
and
in
jb
ja
push
mov
mov
push
test
and
bound
in
js
fmull
inc
jmp
das
xlat
mov
pop
mov
jle
xchg
test
mov
sbb
add
dec
sub
cwtl
add
or
or
int3
daa
mov
not
test
pop
jb
out
xchg
xor
testb
std
test
adc
movsb
jne
imul
add
nop
nop
push
mov
lcall
push
ret
lret
cwtl
pop
test
cli
xor
data16
imul
popa
stc
add
mov
in
xor
mov
mov
rorl
stc
int
into
insl
in
and
inc
sub
dec
repnz
mov
cmp
push
js
gs
or
mov
push
ss
clc
leave
jecxz
add
insb
loopne
fwait
inc
adc
stos
pushl
pop
jo
pop
rcll
or
fsubl
lods
stos
xchg
push
mov
loope
nop
scas
leave
sub
sbb
adc
dec
dec
mov
mov
icebp
lods
fldcw
sbb
push
fiaddl
sbb
stc
push
mov
mov
jae
stc
jo
mov
ss
dec
std
popf
or
lds
lods
mov
sbb
mov
or
push
and
mov
fwait
sub
dec
mov
fwait
add
jmp
in
or
add
sub
outsb
jne
mov
setae
add
cltd
rorl
xor
bound
mov
outsb
repnz
mov
lret
aas
xchg
mov
jno
call
cmp
iret
lock
daa
dec
sbb
hlt
call
ret
ljmp
and
sahf
hlt
call
pop
xchg
lahf
or
mov
cmpsb
inc
sbb
shl
pop
fyl2x
movsb
stc
xchg
pop
int3
test
xchg
loopne
and
sbb
add
push
jns
jge
and
lds
ret
jecxz
pop
enter
hlt
adc
sub
mov
xor
into
mov
in
movl
insl
lret
mov
imul
push
je
mov
int
cmp
repnz
dec
mov
lcall
fisubrs
pop
mov
ss
pop
fidivl
push
int
jns
or
mov
add
xchg
pop
mov
adc
push
in
jp
jp
mov
adc
test
int3
xchg
jmp
mov
cmp
adc
sbb
daa
inc
movsb
js
nop
ret
push
das
mov
scas
push
stos
les
je
ret
je
pop
shrb
popa
or
xchg
pop
les
xchg
mov
add
dec
scas
xor
mov
inc
xor
sub
jns
das
add
je
xchg
cmp
cmpsb
out
or
sub
inc
mov
adc
lds
dec
movsb
dec
sbb
insb
and
push
or
int3
push
jbe
loop
or
cvtpd2pi
push
xchg
push
pop
pop
in
jne
xchg
scas
push
xor
subl
loope
push
sub
and
sbb
mov
add
push
jo
std
jle
push
add
movsb
ret
jo
xlat
pop
movups
inc
jmp
jg
jecxz
addb
sbb
test
lea
dec
mov
gs
nopl
and
dec
dec
mov
jae
mov
push
jo
negb
sub
loope
outsb
push
sub
in
inc
out
call
dec
es
push
cmp
xor
add
mov
xchg
fsubrp
shlb
jnp
popf
cli
jae
dec
xor
xchg
mov
or
mov
and
pop
xor
adc
xchg
orb
jl
adc
lods
int3
pop
std
jo
add
adc
mov
pop
sbb
jmp
subb
adc
cmp
outsb
aas
fs
mov
cmpsb
ljmp
ja
mov
insb
out
dec
xor
jmp
fistps
xchg
sub
rcrb
push
rcrb
or
inc
jge
push
sub
in
sti
inc
and
popa
ret
mov
stos
int
mov
ljmp
fdiv
push
hlt
mov
shlb
sub
or
out
lahf
jp
mov
cmp
push
mov
mov
cmpl
push
and
add
std
es
jbe
aaa
sti
stos
pop
outsb
in
ja
mov
inc
andb
aas
das
addr16
int3
push
clc
test
jae
sbb
xor
negb
notb
pushf
inc
pop
mov
fwait
sbb
jns
bound
mov
andb
in
sub
cmp
push
xchg
cmc
test
into
add
jle
jno
adc
inc
jmp
mov
dec
aad
in
lea
jno
xchg
daa
add
enter
sbb
pop
je
ret
and
or
mov
mov
mov
sbb
test
out
inc
push
lods
xchg
icebp
ss
adc
shlb
push
jne
jbe
sub
mov
mov
mov
jp
jmp
sbb
dec
pop
aam
test
or
cmp
and
loop
addr16
mov
pop
and
orl
mov
sahf
add
mov
ret
cmp
pop
push
push
adc
mov
inc
jo
shrl
dec
xchg
bnd
mov
data16
and
jb
jb
sub
jno
ljmp
mov
pop
stc
inc
lcall
mov
fdivs
xchg
push
add
lea
adc
mov
xor
mov
pop
shll
mov
jg
ror
js
aaa
mov
add
inc
iret
out
xlat
imull
xor
push
jp
sub
or
fisubrl
test
push
xchg
jecxz
scas
pop
lea
pusha
inc
hlt
mov
cld
pop
loope
sbb
lret
je
cld
fisubrs
inc
jl
mov
sub
fnstcw
lret
inc
sbb
sbbl
jnp
sub
clc
and
daa
cmp
ss
push
add
mov
jbe
dec
sub
cli
mov
push
push
cld
xchg
ret
mov
push
push
ror
lcall
or
out
sti
imul
faddl
push
xor
rcl
aad
fwait
gs
loope
cmp
dec
jecxz
int
shlb
inc
mov
jae
or
jo
dec
into
out
push
test
repnz
inc
inc
adc
jmp
inc
jb
add
xor
cli
aas
mov
imul
jne
pop
xchg
and
out
cmp
or
ja
jge
cmpsb
lahf
dec
into
andl
jne
sub
test
push
add
insb
shl
leave
or
dec
outsl
or
push
sub
mov
fisttps
push
mov
in
sub
mov
testl
fsubrs
imul
out
push
daa
sbb
stos
daa
jo
stos
js
stc
andb
addr16
cmp
sbb
fwait
xchg
mov
aaa
repz
jmp
mov
and
not
mov
inc
or
aaa
xor
rclb
xor
shlb
addb
or
jo
dec
cmpsl
int3
sarb
repnz
mov
cmpsb
repz
jb
pop
and
and
fs
mov
in
scas
pusha
jl
addr16
cmp
popa
iret
scas
movsb
add
ja
push
dec
into
jle
mov
testl
adc
mov
orl
lret
jecxz
jns
lods
jmp
popa
or
aaa
push
push
pop
mov
sub
je
pop
cmp
lret
jae
fcmovbe
pop
into
test
jno
inc
mov
jecxz
pop
outsl
mov
jbe
aas
cmp
inc
sub
mov
xchg
mov
imul
inc
jl
inc
cmp
out
fnstcw
movsb
jae
jbe
jns
mov
mov
pop
adc
xlat
xor
aam
push
pop
jg
and
pop
xchg
shlb
out
iret
xor
or
and
call
fnstsw
mov
int3
movsl
ja
cmp
rorb
lea
popa
aas
mov
jmp
push
push
and
xor
imul
nop
mov
into
ficoml
sbb
push
lret
mov
popf
rorl
decl
not
push
push
sub
jl
call
and
ja
mov
rorb
ss
push
mov
sub
mov
and
insl
add
mov
and
repz
xchg
fwait
mul
xor
inc
lods
cmp
adc
clc
sbb
addr16
jmp
inc
in
fstps
jle
sub
dec
jb
add
mov
sti
push
sub
sub
jno
mov
cltd
and
adc
push
cmp
stos
adcb
inc
mov
push
mov
sahf
and
push
jp
xchg
sub
cmp
in
xchg
push
loopne
lret
xorl
push
add
stos
insl
dec
jl
inc
ficoms
jp
pushf
sub
mov
mov
cld
cmp
and
shrb
mov
ja
mov
lock
pushf
lods
pop
mov
shrb
sbb
int
dec
pop
push
negb
iret
fbstp
or
adc
test
ds
shlb
das
mov
dec
sbb
std
imul
ret
jmp
aaa
inc
or
out
sahf
inc
nop
cs
and
adc
xchg
fbld
fucomp
pushf
sti
or
push
mov
mov
xchg
shll
jge
sahf
lcall
je
sub
push
cmpsb
call
mov
lods
sti
add
push
mov
cmp
jmp
sahf
pop
push
adc
xchg
mov
jle
dec
lea
test
lahf
mov
dec
xor
outsl
stc
out
xor
shl
fldcw
pop
adc
cmpsl
stos
xchg
ja
repnz
cmp
cmp
jae
jns
imul
mov
jb
in
and
xor
aad
rcll
cmpl
fsubl
and
jecxz
iret
inc
scas
fucomi
ja
sbb
shlb
lods
mull
insl
pop
jns
add
rorl
cld
insl
sbb
enter
clc
and
out
inc
mov
inc
xor
and
out
xchg
clc
jae
and
test
xor
mov
mov
out
aaa
cmc
sar
lods
out
scas
xor
jne
fstpl
push
lret
mov
dec
adc
mov
and
test
push
out
sub
int
lea
mull
shrl
jns
insb
pop
shll
sti
pop
in
sti
cmpsl
stc
loop
fnstcw
add
hlt
sbb
data16
inc
rcrb
dec
cmove
push
mov
or
push
ret
in
mov
imul
in
jno
mov
xor
sbb
push
mov
stos
test
cwtl
rcll
cwtl
scas
addr16
adc
ss
imull
cmp
inc
andl
jmp
pop
xchg
jne
fidivrl
lret
pop
xorb
mov
inc
dec
mov
and
outsl
mov
cwtl
lret
ja
push
jo
addl
test
xchg
pop
inc
mov
nop
shlb
loopne
mov
stos
mov
test
and
jbe
insb
pop
subl
push
shl
je
adc
xor
in
lods
stos
rorl
cmpsb
cmp
push
and
jne
insl
xchg
mov
loopne
imul
pop
mov
js
dec
fdivl
jno
cmp
jnp
das
fwait
mov
dec
fdivs
pop
sbb
shr
scas
in
js
fimuls
pop
inc
arpl
loope
int
push
scas
dec
cmpsl
mov
std
je
aad
fs
fistl
cwtl
xor
in
sbb
out
nop
faddl
leave
ret
jp
jns
adc
jbe
push
scas
cmpsb
dec
push
push
mov
inc
inc
cld
push
cmp
push
and
push
pushf
sarb
fsubrl
mov
addr16
enter
ficoml
lret
adc
scas
lock
dec
sbb
icebp
cmp
inc
sti
xchg
outsb
sbb
sub
push
mov
imull
cmp
jns
popf
xchg
mov
sbb
mov
adc
out
jmp
cmp
xchg
inc
lahf
dec
pop
sub
lds
mov
test
out
add
xorb
ret
mov
dec
cltd
sub
pop
jecxz
popf
pop
dec
mov
sti
cmp
daa
push
mov
out
mov
insl
shlb
popf
sbb
test
and
push
insb
sbb
jnp
cmpsl
sahf
sub
iret
jo
call
jae
andb
movsb
push
jg
mov
cmp
loopne
push
movsb
mov
add
jecxz
sbb
xor
add
jmp
jp
add
mov
cwtl
inc
lods
inc
fisubrl
outsb
fucomi
cmp
cmp
xor
jae
cmp
rcrl
mov
xchg
adc
in
sarl
ret
adc
and
imul
cmc
sub
mov
mov
andb
ljmp
rolb
cli
or
in
fcomp
inc
jne
out
or
ljmp
add
pop
inc
mov
imul
int
mov
or
jle
dec
cmpsl
xchg
xor
mov
mov
ret
dec
iret
inc
iret
push
iret
jae
hlt
fdivs
jns,pt
rcll
mov
sub
push
cmc
dec
inc
sub
cli
push
xchg
movsb
lea
mov
push
dec
xor
test
int
mov
pushf
je
pushf
clc
jne
dec
adc
popa
sub
mov
jnp
out
mov
into
cltd
int
in
shlb
ret
and
cmc
mov
movsb
aam
dec
lods
jne
dec
push
pop
jecxz
mov
jecxz
shll
repz
cmp
and
xor
popf
xchg
std
idiv
and
and
pop
cli
mov
nop
dec
int3
xchg
jg
mov
cmpsb
cmp
add
inc
add
daa
inc
repz
sub
inc
add
and
jmp
movsl
sbb
int
loopne
pop
jb
stc
push
xchg
mov
jecxz
and
lds
adc
mov
add
repnz
pop
pop
cwtl
out
je
es
jnp
cmp
repz
sbb
jecxz
sbb
movsl
add
and
sbb
lods
add
pop
pop
and
jp
pop
es
sub
pop
xchg
push
xor
mov
sub
adc
xor
lods
mov
xchg
insl
xchg
in
push
and
xchg
hlt
fisttpl
inc
push
push
les
insb
fs
pop
arpl
ss
dec
decl
stos
mov
rcrl
lcall
sti
lock
xchg
leave
rcr
mov
xchg
dec
cmp
aas
iret
xchg
xchg
pop
rorb
iret
fst
pop
test
adc
mov
aaa
imul
jg
cmp
int
inc
scas
lods
mov
hlt
push
cmp
ljmp
daa
mov
mov
sahf
pop
test
popf
stc
ficoml
sub
or
lret
ss
movsb
jp
pop
xchg
cmp
sahf
dec
xchg
das
in
pop
xchg
lods
je
sbb
pop
pop
mov
sahf
push
pushf
aaa
and
add
jo
fwait
loope
leave
inc
outsb
jno
das
daa
test
xchg
fbld
adc
push
adc
xlat
in
fmuls
cli
adc
add
inc
cs
jb
mov
jbe
shl
jle
test
inc
call
in
cmp
es
dec
ror
lea
pop
nop
movsb
sbb
icebp
int
add
pop
push
push
sub
dec
insl
insl
jno
dec
mov
cmp
push
pop
adc
aad
cwtl
lods
movsl
mov
pop
xchg
or
in
xor
mov
or
sbb
xor
flds
in
push
add
cmpsb
and
cli
es
je
push
ds
xor
mov
cld
cs
sbb
cmp
imul
stos
shlb
out
test
inc
push
and
jle
dec
add
sbb
and
mov
roll
push
clc
and
clc
dec
mov
cs
or
test
lahf
lret
roll
mov
push
js
adc
jg
dec
adc
push
das
push
sbb
jmp
nop
jecxz
add
notl
iret
out
pusha
xchg
das
xchg
mov
repz
cmpsl
jb
sarl
xlat
pushf
xchg
cmp
xchg
into
cwtl
and
adc
sbb
jle
imul
je
loope
test
outsb
bnd
jl
cmp
xchg
test
lock
sub
test
xchg
push
mov
dec
lret
cmp
and
ss
sarb
imul
shl
clc
adc
xor
filds
test
scas
dec
xor
aaa
ret
cs
ss
sbb
ljmp
lock
sub
adc
mov
insl
cmpsl
push
mov
and
sbb
scas
xlat
push
cmp
outsl
jle
xorl
jle
mov
push
imul
sti
test
push
mov
inc
mov
lock
push
or
add
xchg
mov
out
and
add
sbb
hlt
inc
das
jecxz
mov
mov
stos
shrd
cmp
inc
xchg
cmp
je
and
stos
mov
jle
mov
push
subl
shll
xor
arpl
push
mov
jo
into
or
jecxz
bound
inc
pop
out
les
adc
cmpsl
xchg
jae
orl
into
arpl
out
adc
sub
add
and
mov
jne
loop
aam
xchg
pusha
xor
xchg
aad
stos
test
fwait
clc
pop
and
fidivs
je
sbbl
imul
ret
fildl
mov
jb
dec
xor
subb
cmc
xor
mov
xchg
sub
pop
mov
dec
and
int3
sahf
les
add
iret
sahf
add
scas
test
cmp
sbb
rorl
fldenv
sbb
jle
and
fwait
pop
inc
loop
or
inc
rcrl
es
dec
popa
lock
mov
pop
out
cmp
shlb
mov
sti
xchg
adc
sbb
jecxz
es
cli
dec
and
or
inc
inc
or
lret
test
insb
pusha
lcall
ljmp
pushf
stos
or
inc
flds
test
cwtl
cmpsl
mov
std
mov
lret
imul
push
andb
movsl
mov
dec
xor
aam
ja
add
out
test
jg
push
pop
test
mov
test
pop
mov
fidivs
adcl
inc
mov
idivb
cs
add
mov
rorl
mov
jae
pushf
xor
cwtl
mov
in
cmpsb
out
jne
std
inc
xor
dec
outsb
adc
add
jbe
ret
push
push
jge
dec
push
loope
cwtl
push
outsb
sbb
clc
hlt
in
mov
adc
sub
outsb
xor
pop
dec
test
imul
pop
push
xchg
in
mov
jne
push
ret
rcrb
ret
dec
mov
movsl
hlt
xchg
mov
inc
xchg
stc
jo
popa
sub
mov
mov
and
test
or
cwtl
daa
sub
sarl
mov
jnp
test
xchg
inc
pushf
decl
jecxz
push
mov
call
ret
inc
jmp
in
pop
jge
and
divb
xor
sbbl
int
mov
idivb
xor
jmp
push
pop
daa
xor
add
push
mov
push
fcmovnu
aam
lds
pop
mov
idivl
cmp
arpl
mov
mov
aad
ljmp
push
and
sbb
jae
dec
pop
xorb
mov
inc
mov
sbb
lods
and
pop
xor
inc
adc
insb
push
cmp
mov
loope
das
inc
mov
mov
stos
lods
add
push
adc
and
pop
cmp
bound
in
or
lret
dec
or
or
sub
test
xchg
lret
bound
loope
mov
dec
lock
out
cmp
xchg
mov
pop
and
add
imul
into
dec
jge
ljmp
icebp
lea
roll
insb
nop
cmp
loop
jae
gs
adc
arpl
fidivs
aad
adc
inc
cmp
mov
lods
mov
popa
mov
sti
repz
negb
push
adc
std
jns
fdivrl
mov
xchg
aaa
fmull
in
out
int3
daa
inc
dec
lret
aad
jae,pn
or
mov
adc
idivl
pop
add
inc
popf
xor
dec
mov
cld
rolb
mov
iret
lret
arpl
pop
mov
cmp
in
sub
shlb
and
add
pop
mov
lock
dec
add
ljmp
pop
and
push
adc
int
sti
dec
dec
aam
mov
aam
pushf
call
and
int3
rcl
insb
testb
test
xchg
and
fsubr
mov
mov
cs
stos
imul
lret
ret
cmp
adc
pushf
pop
jno
mov
divb
sbb
push
cld
pushf
xor
rorl
nop
xchg
lret
jnp
lret
rorl
jmp
cmp
ljmp
add
lock
inc
outsb
inc
outsb
sub
mov
mov
dec
lret
std
mov
jns
and
aas
dec
pop
popf
popa
stos
dec
and
cs
push
cld
and
mov
in
mov
arpl
mov
loopne
insb
outsb
movsl
or
inc
pop
lods
jp
xchg
xchg
cltd
bnd
js
and
and
xchg
dec
sahf
sbb
lea
jnp
enter
and
pusha
fmull
stos
ds
aad
sbb
inc
inc
loop
cmp
dec
inc
or
pusha
movsl
mov
in
fisubrl
fimuls
imul
and
ret
jne
lods
inc
por
dec
cwtl
or
aaa
ficoms
popa
xchg
scas
mov
add
xchg
sub
aas
adcl
rol
jne
aaa
and
sub
test
add
jnp
sti
repnz
es
add
lea
mov
fsubrl
lods
pop
jmp
hlt
faddp
add
xchg
mov
cmc
inc
ret
dec
filds
fbld
mov
jmp
cmp
sbb
add
add
inc
das
push
jp
push
dec
jne
rcrb
hlt
or
and
and
js
pop
pop
mov
mov
and
or
out
fs
mov
pop
mov
fcoms
inc
mov
mov
jmp
mov
sbb
pop
xchg
loopne
popa
push
cld
outsb
xlat
cmp
push
pop
mov
data16
push
jne
pop
pop
je
nop
xchg
mov
shll
sarl
jg
mov
movsb
ljmp
push
test
xchg
xchg
lret
clc
fsts
or
movsl
sti
jp,pn
insb
adc
and
sbb
add
mov
idiv
out
mov
lods
pop
cld
js
or
loope
in
mov
jo
sbb
push
cli
jle
pop
pop
xchg
dec
ja
mov
sbb
adcl
outsl
fsubs
push
and
repnz
pop
out
sbb
lods
iret
in
pop
xchg
or
mov
outsb
jbe
jne
fisttps
sarl
push
and
ss
push
sub
shlb
outsl
cwtl
jae
incl
sbb
mov
pop
mov
xor
push
jge
or
xchg
das
out
mov
cs
inc
cld
or
jne
pop
sub
cli
mov
mov
inc
rcr
add
leave
movsb
scas
in
fnstenv
fisttpll
fidivs
insb
push
jbe
test
mov
aam
in
into
sbb
or
cmpsl
mov
xorb
out
pop
imulb
cmpsl
lret
lds
mov
dec
sbb
int
stc
pop
aam
mov
xlat
bndmk
mov
lds
or
mov
popa
enter
jb
out
rclb
mov
idivl
mov
jbe
mov
or
mov
mov
shl
push
ss
xchg
int
js
out
mov
movsl
in
or
push
fstpt
adcb
inc
loop
je
inc
addr16
imul
jb
pop
dec
dec
addr16
ja
mov
imulb
scas
inc
arpl
sub
inc
xchg
fisubs
xor
shrb
stos
push
cmp
ljmp
or
xchg
aaa
ret
test
xor
pop
imul
sbb
scas
push
add
es
adc
repz
pop
jo
cmp
insb
dec
mov
bound
sbb
mov
test
add
ret
pop
sub
stc
mov
movsl
mov
xor
dec
dec
lret
dec
inc
dec
xor
dec
in
fildll
or
aaa
push
add
or
jecxz
xchg
fbstp
repnz
xchg
cwtl
ljmp
rorl
notl
shl
add
and
lret
cld
inc
aad
or
xor
adc
fistl
iret
pushf
adc
repnz
xor
mov
cmpsb
cmc
int3
sub
cld
ret
jle
bound
loop
xchg
mov
xchg
ja
jae
pop
aam
xchg
sub
push
add
in
sti
cwtl
sub
icebp
mov
jge
mov
js
mov
push
xchg
mov
push
in
inc
sub
out
jno
add
add
lods
xchg
pop
out
jl
mov
pop
push
movsl
lods
aam
data16
jb
stos
or
push
mov
negl
orl
rorl
push
inc
adc
jns
sbb
iret
pop
adc
cmp
dec
leave
pop
lds
and
lcall
or
and
pop
into
test
or
push
data16
inc
push
popf
mov
or
pop
xor
cs
call
mov
pop
pushf
into
push
jle
xchg
das
mov
jnp
push
cmp
std
int3
stc
adc
ja
in
js
cwtl
lods
jno
nopl
insb
fwait
push
pushw
and
ret
repnz
mov
scas
or
inc
insl
loop
popa
fcmovne
lahf
mov
lcall
mov
push
scas
popa
or
mov
pop
jmp
ret
pop
data16
icebp
sahf
cmp
daa
add
inc
insl
mov
xchg
sbb
lret
fs
pop
push
cli
jne
js
sub
xor
hlt
cmpsl
sub
fadd
fsubr
imul
dec
jle
adc
sub
cmp
dec
test
outsl
or
arpl
cwtl
push
add
sahf
andl
lods
jmp
push
ss
fs
cmc
jmp
cmp
daa
pop
mov
pop
pusha
into
mov
push
pop
sub
shll
pop
fistpl
jle
int3
cmp
adc
popf
xchg
stc
sub
lods
inc
insl
dec
test
mov
adc
ret
push
inc
jecxz
xor
add
in
inc
rcrb
add
push
pop
lock
jo
clc
add
orb
jg
sub
scas
push
dec
mov
testb
xchg
loop
sbbb
cmp
lahf
xchg
stc
imul
lods
sub
jcxz
out
popl
fcoms
xchg
fxtract
or
aaa
or
and
add
mov
fmull
not
in
or
test
add
and
aad
cmc
stos
xchg
out
fimuls
or
mov
cmp
leave
mov
inc
push
adc
add
cmp
orl
add
imul
into
andb
insl
add
cmp
push
jle
cmp
leave
rcl
stos
cli
inc
test
inc
push
sub
sbb
xchg
sbb
and
pop
out
fcompl
cs
sbb
dec
mov
stos
mov
fsts
jmp
dec
inc
xchg
dec
jmp
lock
cmp
jecxz
mov
outsb
jge
incb
clc
jge
xchg
push
mov
inc
aam
push
ret
repnz
pop
mov
fstpt
or
int
or
mov
xchg
pop
lods
int
xor
insl
sbb
xchg
loop
mov
fisttpll
push
popa
das
xchg
mov
enter
sti
inc
sti
sbb
mov
xchg
in
outsl
xor
and
mov
mov
mov
cmp
xchg
inc
bound
ljmp
loopne
push
fsubrl
mov
add
mov
or
roll
push
cmp
cmc
xchg
mov
ljmp
pop
mov
add
rcrb
lret
jne
jl
ret
adc
add
cmp
mov
clc
push
stos
push
shrl
and
mov
mov
andb
and
in
push
imul
rcrl
lea
scas
push
xor
pop
jns
sub
or
add
into
fists
cs
xchg
out
xchg
or
cmp
pop
cmp
dec
add
and
fsts
push
test
push
lret
out
mov
mov
sub
cmp
pop
pop
mull
jp
icebp
es
inc
lahf
nop
nop
push
pop
add
in
pop
test
cmpsb
sti
in
lahf
call
sbb
cmpsb
stos
lds
pop
or
stc
jge
xor
and
cmp
clc
mov
subb
jne
inc
rorl
sarl
dec
cmp
and
out
lock
imul
lock
mov
adc
out
and
jbe
int3
rorb
cmp
ret
mov
das
sbb
sub
xchg
movsl
dec
cmpsl
gs
loope,pt
jle
push
mov
scas
shlb
scas
xchg
jle
push
ret
in
fildl
mov
pop
test
adc
or
xor
adc
and
lea
out
cmp
mov
outsb
xchg
mov
sub
call
pop
xchg
mov
sti
sub
loopne
xlat
push
das
int3
pop
rcr
mov
bound
mov
popf
cmp
pop
lock
lds
stos
push
rcrl
add
sarb
mov
stos
les
lea
adc
jb
and
inc
and
jno
idivb
xchg
pop
sbb
test
and
out
icebp
jecxz
ja
dec
loopne
and
mov
lahf
les
outsl
std
jp
lretw
lods
inc
lret
inc
dec
mov
jp
or
bound
or
cmp
sub
cmc
xor
mov
sbb
data16
test
movsl
adc
dec
or
and
popf
push
mov
test
popa
mov
push
stc
xor
and
jp
mov
rorb
mov
sbb
in
sub
bnd
sub
repnz
mov
sbb
leave
fistpll
test
fidivrl
test
jne
cmp
dec
aaa
fidivs
fcmovnb
and
pop
mov
test
add
movsl
jae
xchg
xor
jb
dec
adc
pop
xchg
lock
in
inc
jns
jge
inc
in
mov
add
cmp
fcmovnb
out
repz
ret
lcall
xor
push
ret
call
clc
repz
jecxz
ret
mov
and
movsl
jmp
xor
xchg
daa
in
pushf
in
push
aad
sbb
ret
lock
mov
repnz
rcrl
insb
mov
pop
jl
mov
outsb
mov
rolb
sar
and
dec
mov
cmp
mov
fcomip
sbb
mov
mov
add
mov
test
pop
cmp
loopne
dec
fstp
mov
inc
add
pop
xor
jl
or
rcl
mov
pop
in
sbb
dec
jp
mov
or
lret
in
xlat
pop
push
jns
or
jl
dec
sub
inc
inc
js
or
mov
ja
jne
cltd
in
les
fcompl
inc
icebp
movsb
cmpb
sbb
lods
pop
out
lret
scas
mov
and
les
adc
fwait
jmp
add
cmp
mov
add
xchg
sub
cmp
int3
inc
scas
fisubl
add
iret
cmp
frstor
clc
sahf
test
aam
test
in
sbb
jnp
call
ret
and
xchg
jo
jg
add
mov
mov
std
jmp
dec
cmp
cmpsb
and
idivl
loop
cmp
lret
add
xchg
sbb
jae
pop
es
das
pop
xchg
mov
hlt
loope
aad
jae
push
sbb
sbb
xorb
xchg
cmp
int
stc
loop
out
dec
mov
neg
sub
pop
pop
insl
xchg
sub
dec
rcrl
inc
scas
dec
inc
popf
inc
sub
mov
rorl
push
or
and
xor
repz
cmpb
lods
jmp
loope
jb
inc
dec
loope
std
roll
push
stos
les
mov
test
ds
pop
push
fisubrs
aaa
mov
sbb
es
xchg
mov
or
xchg
sub
ja
xchg
bound
pop
inc
mov
mov
movsb
mov
adc
cmp
dec
jg
sub
js
pop
lret
jno
sahf
out
dec
repz
push
push
xchg
addr16
insl
fwait
xor
enter
push
adc
sarl
push
xchg
inc
jns
shl
xchg
mov
dec
dec
sbb
xor
dec
iret
or
in
les
popa
shlb
adc
js
mov
loop
xchg
ss
int3
aaa
xchg
hlt
or
daa
push
shr
fisubl
bound
mov
cmp
dec
or
jle
cwtl
shlb
adc
sub
xchg
jp
jno
out
shl
add
and
enterw
cmp
adc
sub
cmp
aam
or
add
notb
mov
arpl
mov
js
sub
js
scas
addr16
aam
cmp
mov
int
cmp
mov
in
xchg
mov
xor
addr16
loope
call
push
fmuls
test
push
fisttpl
mov
xor
xor
out
adc
incl
xchg
add
pop
ffreep
add
ret
sub
cmpsl
xor
ljmp
pop
sarl
pop
xchg
adc
add
mov
sbb
cmpsb
bound
cltd
out
into
sub
out
test
adc
mov
jne
mov
dec
loopne
mov
loopne
mov
shlb
addr16
pop
push
out
cmc
mov
dec
or
lahf
xchg
iret
sarl
xchg
fsubrp
add
inc
nop
fwait
push
push
mov
dec
adc
imul
aad
or
movl
add
xor
or
cwtl
fnsave
movsb
xchg
mov
out
std
xchg
and
fcoms
pusha
testb
out
std
dec
rcr
fsubr
xchg
sarb
jl
outsb
xor
inc
imul
dec
popa
or
aad
xchg
pop
mov
sbbl
mov
xchg
test
into
es
daa
or
cmpsb
gs
mov
pop
sub
call
pop
jo
cmpsl
adc
mov
pop
adc
ja
dec
jmp
hlt
mov
mov
add
scas
and
jo
aaa
inc
cmp
pop
or
scas
imul
add
jmp
inc
xor
add
inc
mov
enter
mov
aad
mov
cmpl
push
gs
daa
jne
stos
lods
pusha
js
xor
jne
movsl
add
rcrb
std
movsl
jge
sbb
xor
push
mov
sub
sub
mov
jp
std
mov
add
loopne
add
mov
mov
or
gs
ljmp
cmp
lret
shl
dec
cmpsl
sbb
mov
add
pop
pop
stos
clc
cmp
pop
lds
dec
leave
test
stos
pop
xchg
adc
ds
jae
inc
out
test
aaa
lea
adc
orb
xor
push
sti
and
es
mov
jg
mov
rcll
cld
orl
nop
insb
sub
sti
pusha
mov
sub
adc
fdivp
mov
dec
dec
stc
push
lcall
xchg
call
lds
cmp
test
int
out
sar
imul
jecxz
out
sbb
daa
mov
cmp
rcrl
xchg
cmp
cmp
mov
mov
pop
andl
jmp
lcall
lahf
mov
cmpsl
jo
mov
xor
push
les
push
inc
cltd
lds
xchg
jmp
call
insb
pop
push
cmp
xchg
push
cmc
push
sti
in
dec
push
dec
inc
fists
push
cmp
fcmovnb
repnz
pop
ret
mov
divb
pop
push
out
pop
or
dec
movsb
sbb
adc
pop
pop
in
shlb
mov
sub
mov
or
sbb
or
mov
inc
nop
cmp
or
loope
mov
loopne
adc
xchg
pop
add
push
add
and
push
jae
inc
dec
cmp
and
inc
mov
mov
push
dec
shrb
out
sahf
wrmsr
addl
push
sub
ljmp
sbb
fwait
cmpb
add
pop
stc
and
mov
bound
loopne
clc
mov
mov
mov
out
test
idivb
jmp
mov
call
cmp
mov
ss
mov
push
outsb
and
inc
and
push
mov
mov
jecxz
ret
ljmp
lret
or
add
fwait
popf
andb
and
push
dec
xor
insl
leave
ljmp
data16
daa
int
jl
leave
cld
std
ss
sbb
dec
scas
pop
pusha
sub
repz
cmp
lods
adc
lret
add
pop
scas
and
lods
test
test
sub
lods
inc
mov
or
cmp
sub
inc
inc
imul
repz
imul
loope
inc
sub
mov
jo
mov
in
lret
pop
outsl
inc
push
fists
push
ficoms
adc
jbe
cmp
ffreep
xor
xchg
scas
mov
stc
outsb
loop
or
and
mov
dec
push
mov
aad
movsb
icebp
lods
sbb
fistpll
fmul
sub
movsb
dec
mov
jp
stos
lds
leave
jecxz
push
test
add
sub
push
xchg
loopne
fwait
pop
or
mov
sti
jbe
aad
cld
daa
push
pop
inc
ljmp
add
push
loopne
xor
imul
int3
mov
adc
icebp
testl
pop
push
adc
mov
mov
cmc
movsl
data16
js
ret
push
inc
or
dec
push
mov
jns
scas
lea
imul
out
adc
cmpsl
sbb
out
pop
lret
lahf
xchg
lods
nop
lret
jns
scas
xor
fsubs
int
lahf
mov
xchg
add
lods
mov
jle
dec
clc
xor
test
pushf
aaa
sub
lods
and
jne
cmp
add
or
pop
popa
stos
sub
call
in
cmp
leave
push
mov
mov
stos
rclb
sub
mov
shl
notb
xchg
mov
add
jge
or
sub
or
mov
pop
mov
or
stos
mov
inc
xor
xchg
nop
imul
jg
dec
mov
fsts
xor
mov
or
ljmp
stos
dec
or
dec
sbb
push
jp
xchg
sbb
sahf
fidivrl
mov
divb
test
insl
jns
jg
lcall
stos
aas
mov
es
or
inc
inc
bound
mov
and
xor
cmovo
add
xchg
push
pop
daa
cli
sbb
inc
out
sarb
popf
or
jmp
ss
jp
jp
cmp
rorb
push
mov
inc
aas
push
sub
sub
stos
cld
daa
rorl
mov
outsb
ljmp
pop
adc
mov
cmp
das
jl
dec
into
adc
xchg
pop
call
push
cmp
sbbb
mov
loop
push
push
sarb
aaa
je
jno
iret
ljmp
or
sbb
loop
pop
sti
fistl
pop
jb
stos
mov
aaa
mov
aaa
fmuls
ja
adc
fxch
xor
push
test
inc
popf
popa
inc
loopne
mov
push
lock
les
enter
xor
mov
ret
or
xor
sbb
in
int
xchg
mov
sbb
sub
inc
jb
or
push
jno
or
aaa
daa
subb
add
scas
jb
test
scas
cmp
sbb
popf
xchg
or
lds
adc
lods
inc
outsl
mov
dec
sbb
inc
fbstp
out
test
pop
cmp
sbb
adc
xorl
inc
mov
cmp
dec
clc
push
push
mov
insb
lea
jmp
mov
rcrl
dec
or
adc
imul
pop
out
movsb
jnp
repz
rcrl
ds
inc
mov
push
je
add
xor
aam
ljmp
std
and
arpl
and
in
daa
lea
mov
into
xchg
dec
mov
lods
lock
shrb
fsubs
and
aam
pop
dec
adc
ja
divb
es
lock
fwait
push
mov
andl
cmp
jbe
add
mov
fsubrl
xlat
cmp
or
mov
sub
xchg
sbb
cmpsl
adc
xchg
pop
jp
jo
loope
in
xchg
xor
stos
cmc
push
xchg
int
push
mov
add
adc
push
jbe
ret
pop
mov
mov
fisubrl
loope
push
inc
xor
outsb
out
jnp
pop
jnp
mov
enter
push
xchg
in
mov
adc
test
pushf
xchg
fdivl
jo
xchg
ds
jnp
jecxz
std
nop
lcall
outsb
ret
mov
mov
in
inc
sbb
int
hlt
xchg
stc
aad
popf
sbb
xchg
push
rclb
pop
iret
mul
addr16
pop
push
lods
add
xchg
dec
or
ljmp
adc
fsubl
data16
pop
adc
pop
xlat
call
rcrb
pand
xor
js
jne
es
lret
pop
out
js
jo
pop
subb
sub
pop
sub
adc
dec
cmp
pop
cmp
xor
cmpsl
sub
xchg
fbld
inc
rcl
mov
jo
jecxz
sar
ret
fisttpll
and
and
stc
mov
sahf
mov
out
add
mov
gs
rorb
popf
sub
inc
mov
mov
pop
ja
pop
add
and
imul
xor
inc
iret
sub
fdivr
lret
dec
aam
xchg
sbb
xchg
sub
jg
mov
mov
lret
stos
iret
push
shr
movsb
mov
push
push
push
loope
or
jb
repz
pop
xchg
mov
and
andb
or
negb
push
scas
jl
or
scas
adc
pop
jbe
imull
subb
mov
mov
mov
leave
cmc
mov
pop
fistpll
repz
daa
and
cltd
scas
jns
lret
xor
jae
adc
cld
loope
leave
jbe
mov
add
push
mov
and
xchg
lret
jbe
cmp
cmp
jae
ret
push
ljmp
ret
dec
daa
jae
test
or
or
int
pop
bound
scas
xchg
popl
lds
adc
into
sbb
aaa
cmp
push
and
lds
clc
adc
das
cmpsb
mov
jmp
out
mov
mov
mov
inc
jo
xor
sub
je
jl
cli
ss
out
mov
and
cmp
outsl
rol
mov
xchg
clc
outsl
stc
aas
mov
dec
out
cmp
inc
sub
mov
or
push
xchg
adc
jae
push
mov
scas
jo
out
inc
or
insb
mov
push
in
stos
pop
shl
sbb
add
repnz
xor
xor
mov
sub
xor
leave
jle
inc
ret
stc
aas
fwait
xchg
lock
jmp
xchg
mov
or
mov
jne
das
aas
push
jno
mov
dec
and
lds
mov
xor
and
mov
inc
stos
cmc
mov
popa
push
fidivrs
cmc
push
in
sub
inc
pop
lahf
jnp
mov
xor
and
inc
mov
mov
sub
icebp
out
push
dec
sarb
jg
push
std
lret
xchg
insl
loop
and
aad
lea
pusha
xchg
xchg
ficomps
out
mov
aad
push
cmp
jle
dec
jmp
rclb
loopne
or
je
ficomps
dec
lcall
or
loop
sbb
fwait
and
dec
jno
jbe
shl
movsb
jbe
dec
xor
mov
xlat
add
divb
popf
dec
or
iret
fnstenv
jo
fsubp
cmp
xor
cmp
jb
push
es
dec
lret
push
jle
mov
and
mov
lds
mov
pop
lahf
or
std
cmp
pop
imul
aam
push
xor
hlt
dec
in
xchg
sub
iret
push
int
adc
push
or
mov
adc
mov
cmpsl
mov
cmp
adc
mov
xchg
sbb
mov
pop
and
es
push
rcll
dec
scas
jl
das
dec
pop
test
sbb
fcmovu
add
push
stos
mov
and
sti
pushf
shll
sbb
outsb
ret
adc
stos
push
cmp
add
add
das
xchg
out
xchg
mov
jge
imul
test
adc
jg
ja
xlat
aaa
insl
pop
fnstsw
fbstp
imul
inc
add
push
push
addb
pop
add
xchg
loop
push
out
mov
pop
addb
test
pop
dec
push
sahf
pop
leave
shlb
add
add
cmpsb
fsubs
mov
cmc
or
cmp
jmp
cmp
add
mov
sbb
call
mov
mov
and
push
in
cmp
mov
push
repz
mov
movsb
stc
in
lahf
aam
sbb
jne
push
mov
and
pop
stos
jbe
cs
or
arpl
push
inc
xchg
shrb
arpl
ljmp
test
adcb
enter
jge
add
jl
std
cli
mov
pop
cmp
xlat
bound
and
pop
sbb
je
test
loop
decb
pop
loope
adc
loop
sub
push
scas
ds
loop
and
mov
testb
mov
xchg
push
pop
sbb
ret
inc
mov
stc
out
mov
mov
filds
cli
jb
push
mov
push
mov
push
dec
mov
xchg
pusha
nop
repz
and
jne
sarl
lret
ret
pop
aam
movsb
xchg
mov
mov
rcll
inc
inc
sub
imul
push
sbb
imul
inc
add
xchg
jns
fildl
xor
ret
or
xor
sbb
adc
xor
push
cs
fstpt
testl
xor
arpl
inc
jns
sbb
jp
add
fsubp
mov
jns
jb
lods
sub
scas
lods
xchg
popf
and
addr16
pop
popf
test
push
ss
jmp
cmp
daa
lret
xor
sub
lods
and
test
sbb
iret
loope
mov
outsl
aas
notb
sbb
sbb
iret
xchg
lods
xor
mov
adc
out
xor
jnp
lods
pop
xchg
push
and
sub
in
mov
dec
or
dec
mov
mov
mov
inc
daa
lods
sbb
inc
jmp
xchg
dec
lods
and
push
in
fcomps
mov
test
ds
cli
mov
lahf
cmp
rolb
adc
enter
lahf
cwtl
jle
test
nop
jns
out
mov
andl
data16
mov
xor
cmpsb
incl
push
dec
push
mov
and
clc
aam
mov
das
sbb
in
jb
js
jl
rcl
jnp
jl
pop
pop
ficompl
lods
inc
or
repnz
xchg
jae
mov
mov
xor
push
outsl
pop
add
aad
ret
rcll
outsb
out
or
sahf
mov
data16
sub
cmc
sti
aad
or
addl
mov
or
push
xor
pop
shrb
xor
mov
imul
sbb
movsb
sub
mov
lock
cli
mov
fstpl
shlb
scas
daa
das
adc
sbb
nop
xor
add
mov
out
push
cmp
add
ret
shrb
sub
hlt
cwtl
push
cs
aam
mov
repnz
cltd
pop
add
mov
cmp
xchg
shll
fstps
cmp
mov
sub
or
jmp
adc
dec
add
aaa
test
pop
xor
sbb
pop
jb
jne
fwait
adc
ja
fwait
mulb
clc
out
lcall
xchg
xchg
jne
dec
inc
sbb
and
cwtl
mov
lea
js
mov
mov
leave
in
mov
push
sbb
dec
jp
push
xor
pop
push
in
add
fscale
pop
cmp
data16
jnp
repnz
jmp
push
inc
data16
push
dec
je
scas
adc
orl
mov
ucomiss
sbb
cmpsl
lods
outsl
xor
pop
jecxz
int
sub
pop
enter
pop
mov
rep
and
stos
sbb
push
inc
cmpsb
stos
scas
ljmp
in
or
fisttps
jmp
in
dec
sbbl
ljmp
xchg
sti
pop
xchg
push
data16
pop
mov
xchg
jl
outsl
rol
sub
push
gs
inc
es
pop
mov
std
pop
dec
in
mov
test
movsb
adc
push
sbb
push
outsl
pop
enter
ss
pop
test
pusha
stos
jge
call
add
fcomps
popf
xchg
and
or
xchg
inc
add
sbb
dec
add
xchg
adc
add
push
arpl
repnz
jl
jl
je
pop
xchg
arpl
add
cli
ret
cwtl
cltd
cltd
arpl
es
pop
sti
xor
push
mov
push
data16
mov
inc
add
addr16
jg
mov
cmp
inc
push
mov
test
pop
cmp
mov
loopne
lret
ljmp
sub
xchg
mov
int3
pop
xorb
mov
push
gs
jns
cwtl
lahf
jno
jmp
stos
lea
in
dec
imul
sub
pop
add
jns
adc
dec
and
push
push
mov
adc
vpackuswb
jns
jl
xchg
cmpsl
popf
lahf
cmpsl
aaa
out
popf
outsb
jmp
and
fs
cs
or
stos
push
shl
and
std
int
imulb
test
sti
lret
pop
mov
sarb
sbb
loopne
push
test
hlt
scas
fistl
xor
int3
mov
pop
shlb
sub
cmp
clc
fs
push
mov
sbb
addl
adc
shlb
movsl
cs
adc
or
cmp
dec
out
lock
sarl
xor
and
sbb
pop
aad
cmp
pop
cmp
stos
fdivrs
loope
jge
lcall
jno
fwait
mov
sub
test
stos
pop
lahf
sti
arpl
jbe
inc
add
sarl
jl
ret
cmp
insb
mov
jno
cmpsb
enter
mov
or
mov
iret
ss
pop
pop
sub
add
add
call
jle
imul
loop
fadd
mov
aad
cmc
fs
push
int
push
popf
cltd
sub
lret
std
daa
gs
xor
mov
and
mov
aam
aad
imul
xchg
mov
in
cmp
mov
mov
or
ja
cmp
add
push
mov
and
imul
xchg
adc
lds
std
xchg
outsb
or
pop
adc
cld
mov
sbbb
loope
xor
test
mov
xchg
xchg
push
lcall
repz
and
inc
stos
inc
sbb
arpl
pop
ret
xchg
cmovne
and
das
in
packsswb
and
pop
xor
and
sub
mov
pop
push
leave
add
les
push
sbb
in
fs
pop
or
insw
pop
out
adc
xor
out
test
enter
mov
addb
push
test
out
int
fistl
or
jg
mov
xchg
sub
sbb
ja
pop
mov
and
jp
mov
mov
and
arpl
mov
test
jno
xorb
insl
rol
mov
and
adc
jmp
cs
pop
sbb
je
push
movsl
mov
push
jmp
mov
imul
or
mov
mov
xor
inc
adc
or
sbb
jo
cmp
cmp
add
dec
cmp
jne
xchg
sub
int
sub
mov
xchg
mov
mov
scas
fmuls
xchg
pop
push
xor
rol
rclb
fdivr
std
jo
lods
push
imul
pop
sub
jmp
in
push
fisttpl
dec
and
loopne
push
stos
je
cmp
pusha
pop
cs
push
inc
jmp
sub
jns
mov
lea
ficoms
enter
jns
xor
dec
mov
mov
ds
es
movsb
shlb
aas
in
loope
mov
dec
mov
pop
lret
xor
imulb
cvtps2pi
sub
pusha
lret
push
jmp
push
stc
pop
mov
push
pusha
add
outsl
nop
imul
cmp
mov
gs
je
cli
and
dec
push
pop
adc
adc
rcr
xchg
sbb
insl
mov
mov
or
jnp
jo
subb
scas
std
clc
push
fimull
push
pop
inc
loop
loopne
xchg
iret
jp
mov
push
pop
xchg
inc
sub
jecxz
lea
push
mov
dec
ret
inc
movsb
xchg
jmp
dec
adc
add
dec
inc
add
mov
das
sub
or
mov
cmpb
sbb
jno
je
lods
sub
cs
cmp
lods
push
nop
enter
sub
fdiv
scas
mov
aam
inc
add
adc
in
mov
bnd
ss
pop
lea
imul
xor
dec
mov
mov
orb
sub
xchg
popf
mov
inc
and
shlb
inc
gs
insb
or
scas
rorb
add
shll
ret
inc
push
sar
loop
insb
js
ret
andl
mov
shrb
int
adc
cs
movsb
pop
push
pusha
test
pop
mov
cmc
push
bound
out
adc
mov
mov
iret
popa
mov
push
ret
and
dec
mov
and
testb
sub
mov
imul
scas
loope
pushl
arpl
aad
rclb
jp
lret
jae
xchg
xchg
jecxz
push
mov
mov
adc
ja
adc
out
cmp
xor
fsubrl
loop
cmp
mov
dec
js
mov
add
mov
mov
imul
mov
or
je
dec
lcall
push
jnp
inc
lods
sub
xchg
or
sbb
sub
or
cmpsb
jne
xchg
push
push
xchg
ljmp
aam
mov
jecxz
dec
pop
dec
adc
mov
ja
mov
aam
mov
jno
or
dec
decl
popf
fbld
mov
sbb
cmp
cli
into
push
and
sbb
ror
xchg
xchg
adc
push
dec
lea
xor
in
scas
sbb
inc
ss
insb
popa
jmp
loope
pop
mov
sub
xchg
in
mov
fs
out
icebp
xchg
and
cmp
sub
fldl
mov
mov
loop
cmp
fcoml
adc
and
jo
popa
sbb
jbe
outsl
sub
xchg
outsb
dec
aaa
int3
push
adcb
add
inc
pop
aad
iret
ret
push
jle
xor
js
push
aas
xorb
add
xor
and
pop
shlb
mov
pslld
pop
int
lret
stos
cltd
movsb
xchg
nop
repnz
pop
adc
add
jp
dec
xchg
pop
imul
xlat
shll
loop
and
adc
xchg
loope
pop
ds
pop
xor
mov
hlt
lods
and
pop
out
add
call
or
mov
cld
scas
divb
sbb
movlps
sub
mov
fdivrl
in
mov
jl
loopne
subl
mov
insl
dec
popf
or
leave
mov
push
jo
arpl
jo
push
mov
shll
je
sahf
add
cld
cmp
in
pop
movsb
cmc
data16
xlat
xor
fdivrl
call
in
std
or
mov
mov
lods
mov
push
aam
pop
push
push
jge
dec
out
xchg
inc
pop
stos
xchg
cmpsb
das
aas
adc
pop
pop
test
lret
aam
enter
add
je
cmp
aas
pop
sub
sbb
clc
iret
xor
push
mov
pushf
add
out
pop
jb
adc
mov
pop
das
aaa
inc
adc
pop
sbb
scas
inc
insb
int3
or
cmp
ret
inc
dec
lods
dec
jmp
sub
sbb
fisubrl
lcall
push
loope
sbb
mov
repz
adc
int
cmc
ja
pop
inc
mov
jg
add
pushf
pop
and
mov
orb
jp
and
subl
cmp
std
mov
push
sti
cld
out
iret
cmp
xchg
and
xor
inc
icebp
jle
aad
push
pop
xor
sub
into
loope
mov
in
or
dec
add
imul
dec
out
lea
out
ret
or
arpl
add
inc
inc
xchg
mov
data16
ss
test
lret
out
ds
popf
stos
adc
add
ja
nop
insb
stos
loop
paddusb
inc
repz
push
jne
add
mov
sbb
push
push
dec
fsubs
pop
or
cltd
dec
mov
addb
leave
xchg
mov
loope
mov
and
or
cmp
popa
arpl
pop
imul
and
orl
mov
repz
inc
xchg
stc
pop
ret
cs
pop
rolb
add
insl
lahf
shrb
jmp
test
xor
sub
adc
jne
jns
sbb
cmp
emms
or
fadd
adc
jge
scas
fidivs
jno
add
and
fcomps
lods
fsubrs
or
mov
inc
lods
sbb
adc
loope
mov
add
test
ret
nop
mov
shrl
and
loopne
das
shlb
inc
inc
ljmp
xor
sub
insl
inc
js
aam
sub
mov
pop
iret
sarb
sub
push
orl
mov
jmp
cmp
pop
or
stc
push
sub
mov
mov
shl
jl
pop
or
iret
addr16
int
or
in
in
rorl
cmc
into
xor
aaa
out
sub
xchg
jae
sbb
sbb
popf
mov
fmuls
sbb
shl
inc
fwait
loope
or
stos
add
mov
add
and
cmp
incb
fldt
push
mov
mov
lahf
inc
mov
pop
xchg
push
testl
cmp
dec
and
sub
stc
xchg
mov
xor
imull
jge
pop
xchg
cmc
cld
cltd
xchg
mov
cmp
sub
sub
js
mov
fistpll
fisttps
andl
sbb
push
ja
push
push
cs
or
dec
fildll
fs
cmp
sbb
arpl
mov
out
imul
mov
xor
and
in
adc
pop
xchg
lea
decb
mov
cltd
fisttpll
xorb
inc
adc
pop
mov
xor
xchg
das
jno
pop
or
test
mov
hlt
sbb
popf
lret
sti
cmp
arpl
pop
xchg
add
sbb
inc
sbb
loop
mov
adc
jno
out
mov
and
pop
je
jecxz
jns
pushf
fwait
or
mov
scas
sbbb
jmp
jle
cmp
adc
cmp
addr16
int
xchg
sub
test
and
fmull
ss
push
sbb
ret
arpl
fisubl
lret
mov
lods
mov
ret
sti
loope
cwtl
xchg
mov
mov
adc
ror
push
mov
mov
iret
push
daa
xchg
aad
les
dec
or
push
fidivs
add
repnz
push
sahf
push
sbb
insb
dec
pushf
lret
xorb
xor
call
xlat
lea
cld
jno
dec
adc
fiadds
mov
mov
push
out
mov
jle
jg
in
xor
xor
lods
cmpl
push
mov
ds
fcompl
mov
adc
sub
dec
mov
gs
mov
sbb
sub
rcrl
xchg
out
add
adc
push
or
jle
pop
jl
xchg
sub
xor
int3
test
aaa
lods
xor
pusha
xchg
add
out
cmp
fs
popl
fsts
aaa
and
cmp
lods
push
sbb
jmp
or
and
sarl
xlat
xchg
ficoms
push
std
push
mov
int3
in
xchg
ret
fisttps
mov
xchg
add
xor
push
mov
mov
mov
cli
mov
fmull
push
pop
stos
sub
popa
sub
ret
adc
loopne
cld
adc
cld
xor
jo
in
shll
pop
jae
cmp
pop
mov
movsb
call
push
cmpsb
imul
jae
mov
jae
push
aaa
xchg
popa
mov
pop
sbb
cmpb
sub
xchg
dec
or
dec
xor
mov
je
cmp
mov
xor
dec
jp
roll
or
dec
popa
push
pop
jg
das
sar
aam
inc
lcall
add
and
scas
out
into
add
sub
adc
std
push
and
shll
outsb
sub
rcl
inc
divb
pop
inc
stc
lcall
aaa
lock
xchg
jnp
outsl
decl
nop
mov
jmp
leave
ret
shlb
sarl
lds
push
rol
pop
mov
push
popf
cmpsb
movl
jnp
xchg
jle
imul
hlt
jae
sub
pushf
ja
imull
test
mov
inc
jge
mov
fistpll
mov
mov
jmp
jne
movsb
and
inc
imul
icebp
shlb
pusha
sti
pop
mov
push
test
sub
jnp
pop
clc
loopne
jecxz
dec
lock
into
data16
sbb
repz
dec
push
enter
jbe
mov
sbb
pusha
sahf
scas
add
or
or
je
leave
add
cli
sbb
js
xchg
mov
test
cmpb
mov
sub
add
sbb
cmp
sbb
stc
cwtl
leave
shll
in
xor
sub
pop
adc
cmp
sbb
dec
test
clc
pop
or
mov
push
cmp
fs
jecxz
pop
std
ss
push
das
faddp
push
xorb
iret
cmpl
xchg
xor
mov
and
adc
xchg
push
adc
jne
pop
insl
nop
dec
das
jmp
int
jbe
cmp
pop
aad
cs
in
out
pusha
xchg
pop
ss
test
add
jecxz
add
adc
xor
push
das
sbb
fdivr
and
xchg
xchg
fadd
fcmovnb
mov
xlat
adc
inc
sub
sub
pop
add
mov
push
xchg
jl
and
add
or
adc
cmc
jnp
je
add
pop
jmp
movb
sbb
sbb
cmp
push
cmp
dec
aas
mov
loope
jne
int
mov
shll
rorl
mulb
jno
mov
das
sahf
leave
lods
pop
and
jo
mov
popa
inc
repnz
mov
mov
jnp
push
push
fsts
ds
subb
jmp
sub
scas
push
cli
xchg
loopne
fcompl
jmp
ljmp
jno
dec
lock
jb
dec
and
adc
repnz
pop
call
mov
inc
jle
js
call
loope
cmp
mov
jb
and
dec
sbb
data16
ja
mov
daa
xchg
call
push
mov
sbb
sbb
cmp
aam
xchg
mov
bound
ret
int3
je
dec
pop
add
jmp
xor
mov
push
lahf
mov
inc
push
shrb
out
fsubrs
jle
sbb
mov
je
insb
lods
in
xor
popl
push
lock
movsb
pop
and
ja
daa
mov
lcall
adc
sarl
or
mov
or
ret
jle
clc
mov
test
out
imul
outsl
mov
fdivl
test
mov
js
pop
pushf
ja
mov
mov
mov
and
add
push
jnp
push
fwait
jmp
xchg
xchg
xchg
lods
pop
pop
jp
mov
pop
mov
push
or
das
lea
jo
loopne
pop
inc
sarl
negl
daa
and
sub
lret
popa
push
loope
cmp
adc
jae
jge
or
pop
lods
lcall
pop
loop
pushw
jge
xchg
cmp
jecxz
push
sbb
add
adc
or
movsl
mov
into
jbe
cmp
clc
and
mov
mov
stos
cwtl
mov
or
enter
ss
jge
pushw
movsb
cmp
or
adc
imul
iret
sub
ljmp
andl
and
out
addr16
xchg
or
test
mov
popa
pop
mov
mov
popf
sbb
icebp
movsb
mull
add
out
adc
sysenter
inc
and
bound
jns
mov
jg
stos
call
hlt
bound
sub
jo
sbb
mov
popa
pop
fdivp
loope
push
mov
fdivs
pop
push
push
mov
data16
les
sti
mov
adc
add
xchg
orl
pop
mov
mov
sub
inc
mov
addr16
int
andb
push
or
loop
shrl
flds
add
adc
ret
push
ja
fsubrs
xor
lods
mov
aad
stos
ljmp
xchg
daa
jns
adcl
mov
sbb
in
mov
mov
push
sub
enter
test
sbb
sahf
pop
outsb
and
je
mov
into
mov
mov
sub
clc
jns
mov
xor
adc
pusha
out
dec
xor
sti
mov
imul
in
arpl
xor
push
js
das
jecxz
imul
or
push
roll
xor
movsl
cwtl
cs
inc
push
add
inc
repnz
cmp
fsubl
int
jle
movsl
cmpl
xor
add
inc
aam
in
sub
adc
xor
xchg
xor
xor
xchg
pop
mov
enter
loop
cli
cmc
fs
mov
mov
pop
mov
insl
sarb
data16
mov
adc
test
test
in
inc
int
xor
inc
fdivr
pop
add
mov
or
mov
xchg
aad
inc
stos
mov
push
dec
sbb
xchg
in
and
xlat
cmp
dec
dec
dec
mov
lods
xor
push
sbb
push
pop
loop
add
jae
jne
aad
jnp
adc
xchg
imul
mov
pop
push
movsb
cmp
mov
dec
movsl
loop
cli
pop
dec
and
icebp
fsin
loop
sub
stc
add
push
xor
pusha
pushf
inc
outsb
in
cmp
jne
aaa
dec
jbe
fistpl
xchg
or
adc
pop
ljmp
push
sbb
pop
cmp
xchg
fs
call
stos
add
sub
nop
imul
rorb
sahf
xor
std
jp
jno
daa
mov
sbb
cli
mov
pop
mov
call
insb
cs
shll
jb
rcrb
add
lods
pop
pop
jp
and
jb
fs
push
xor
adcl
out
addr16
aaa
push
negb
shrb
push
cmp
addr16
adc
and
in
xchg
fdivrl
xor
inc
lcall
jmp
ficomps
enter
adc
pushf
dec
stos
loope
lods
mov
ds
movsl
insb
call
daa
bound
add
ret
mov
push
pop
lahf
inc
test
mov
fwait
addl
sub
sbb
lds
aam
cmp
and
out
add
mov
dec
aas
int3
int3
stc
sbb
movsb
push
jno
jge
repnz
outsl
xor
cli
pop
jg
lods
dec
call
aad
xchg
inc
and
fmull
mov
adc
sbb
std
cmp
add
cmpsb
shlb
xor
js
cmc
sbb
xchg
dec
xor
add
rol
pop
cltd
aad
push
add
out
enter
popa
cltd
dec
pop
dec
movsl
mov
cmp
rolb
hlt
std
mov
or
es
rcrl
sti
mov
test
cmpsb
pusha
dec
outsb
xor
or
xchg
sbb
inc
iret
in
loopne
jge
push
adc
cltd
mov
push
mov
add
out
stc
xchg
movsl
insl
mov
xor
and
aam
fcomp
mov
xchg
sub
scas
adc
repnz
sahf
xor
mov
adc
add
sbb
mov
fs
mov
jmp
rcrb
or
das
sbb
cs
cltd
loopne
test
xor
and
mov
pop
sbb
mov
sbb
mov
gs
cmp
hlt
pop
fcmovbe
jle
outsb
or
mov
sbb
shrb
inc
pop
adc
adc
clc
xor
xor
sbb
in
stos
cmp
movsb
ret
xchg
or
pusha
push
cmp
hlt
mov
lods
dec
pop
jbe
movsb
ljmp
push
mov
cmp
shlb
mov
les
and
inc
push
jmp
out
loopne
subb
inc
jb
pushf
dec
and
mov
out
sub
pop
scas
xchg
addl
mov
or
mov
leave
cmp
inc
and
sti
mov
sbbl
push
arpl
fsubs
in
cmpsl
dec
mov
jmp
cmpsb
ss
pop
pop
sub
cltd
xchg
push
mov
add
jecxz
inc
das
mov
cmp
test
out
rcl
mov
xchg
sub
stos
mov
movsb
test
je
add
push
subb
lock
cmpsb
outsl
popa
adc
dec
or
fwait
sbb
xor
call
add
xchg
loop
in
mov
adc
mov
sarb
int
add
xchg
lcall
mov
jae
adc
xchg
cltd
repz
inc
imul
sbb
xor
pop
cmpsb
mov
out
and
out
cld
out
jmp
mov
dec
dec
insl
in
imul
fsubp
push
int3
aas
mov
pop
jmp
push
rolb
sti
mov
or
call
mov
jl
pop
mov
dec
imul
inc
mov
ret
rclb
das
mov
xchg
js
shlb
pop
rol
adc
sbb
jp
inc
xor
loop
dec
aam
icebp
adc
or
mov
lret
cli
jne
add
fs
and
aaa
push
mov
xor
jg
inc
mov
mov
cld
aad
out
pop
lcall
jle
icebp
fcoms
xchg
loope
fcoms
cmp
cmc
inc
int3
mov
ret
movsb
insb
cltd
or
jmp
les
push
xor
sub
adc
nop
adc
pop
or
lret
scas
xchg
ret
xor
xchg
dec
mov
icebp
inc
call
add
adc
pushf
mov
push
xchg
sbb
test
mov
in
iret
push
imul
loop
test
fcomps
and
push
repz
cmpl
push
test
mov
ja
jne
repnz
cmp
push
loop
and
cltd
jne
outsb
or
movsl
jle
scas
scas
rcl
into
pop
jnp
push
sub
inc
lea
sub
out
lret
add
push
es
insb
out
mov
out
and
push
ja
pop
fdivs
mov
ja
cmp
pop
xchg
xchg
or
fisttpl
ror
add
and
daa
xor
xchg
jecxz
repnz
xor
icebp
pop
sbb
fldl
jle
dec
or
and
xor
test
mov
jecxz
mov
fwait
jb
xchg
jo
in
mov
jl
sahf
jae
les
test
jo
daa
cmp
inc
pop
jle
mov
imul
xchg
xor
mov
xor
ss
mov
pop
pop
jo
inc
jns
pushaw
stos
inc
fadd
jp
fxch
mov
fs
mov
andl
out
bound
mov
inc
shlb
inc
hlt
push
mov
add
xchg
in
gs
adcl
pop
and
loope
xlat
imul
sbb
out
imul
sbb
call
sbb
mov
jecxz
les
xor
pop
adc
push
or
sbb
jo
pop
pop
hlt
xor
cltd
adc
aas
gs
inc
inc
push
aaa
mov
xchg
add
pusha
cmp
and
push
notb
add
cmp
mov
jg
nop
scas
sar
ja
cwtl
cmpl
xchg
insl
ljmp
xchg
mov
and
testl
ljmp
jge
jge
push
mov
pop
movsl
ret
popf
sub
test
sti
xchg
test
push
cs
test
loope
mov
cmp
push
nop
sbb
sbb
fsubs
sti
sbb
push
outsl
cmpsb
xlat
or
cmpsb
inc
pop
mov
mov
xor
popa
xchg
mov
inc
in
push
addb
cmc
lret
out
add
mov
push
xor
cmpsb
adcb
pop
push
scas
pusha
pop
pop
call
push
in
jp,pn
jg
pushf
and
jecxz
mov
or
xor
das
or
xchg
movsl
inc
pop
cmc
xor
cmc
xlat
inc
xlat
inc
movsb
aas
sub
add
ficoms
stos
inc
xchg
xchg
movsb
dec
outsl
out
les
sbb
xor
cld
xchg
or
shr
popf
sbb
dec
push
flds
push
mov
sub
adc
js
out
xor
into
inc
dec
cmp
loop
imul
sub
xchg
push
and
pop
cmp
jne
inc
fisubrs
inc
lock
push
pop
sub
shlb
les
sub
mov
mov
inc
clc
push
push
cmpb
icebp
adc
lret
lcall
and
mov
jae
cmp
dec
enter
stos
jns
into
sbbl
dec
enter
cmp
popf
ss
lods
popa
aad
mov
mov
into
inc
inc
loop
loopne
mov
jb
or
fnstcw
icebp
inc
adcl
jg
push
fwait
xchg
inc
mov
mov
loope
testl
inc
es
test
push
fstl
add
shlb
adc
and
subl
ss
mov
sub
mov
testb
lods
jbe
jecxz
in
test
mov
out
push
mov
aam
scas
inc
mov
jmp
std
test
jp
mov
sub
movsl
pop
xchg
push
push
cltd
push
sbb
sarl
or
popa
dec
aad
mov
mov
xlat
aam
shl
cld
sbb
mov
cmpsl
fld
jne
rcr
adc
and
push
aas
cmpsb
ljmp
inc
lret
popf
mov
arpl
mov
push
fimull
mov
push
lahf
adc
out
mov
daa
mov
mov
sbb
or
das
stos
subl
xlat
jmp
xor
push
pusha
outsb
pop
addr16
add
add
inc
cmp
cmp
aad
xchg
inc
pop
mov
mov
shrb
inc
lds
pop
mov
loope
pop
scas
pop
fldcw
add
xchg
or
lahf
fldt
mov
cmp
out
jbe
rcl
imul
mov
pop
into
xor
pop
push
movsb
xor
sarl
test
add
jo
add
std
lahf
loope
das
fmulp
jb
jl
dec
fldcw
out
cltd
push
mov
xorb
test
loop
push
inc
and
popa
stos
aaa
repnz
adc
mov
lods
sub
in
lcall
arpl
push
sbb
jno
mov
test
popa
sarb
shr
jne
out
cmp
pushf
jl
shlb
xchg
inc
cld
inc
dec
xchg
push
jnp
scas
aaa
mov
sahf
je
mov
jnp
leave
fisttpl
push
jns
inc
push
movsb
cld
sbb
add
es
aaa
pop
ret
push
push
adc
add
mov
stos
popa
scas
shl
fbld
outsl
je
mov
push
sub
adc
inc
andb
jg
xor
imul
pushf
xlat
xchg
iret
pop
das
mov
insb
adc
inc
inc
negl
xor
cmpsb
and
inc
cmp
mov
outsb
and
jne
cmpsb
movb
add
call
pusha
cwtl
push
mov
or
pop
push
mov
mov
je
cld
fisubrs
dec
imul
in
push
push
insl
aaa
pop
jo
mov
jno
aam
xor
push
lods
aad
dec
mov
adc
push
pop
mov
shrb
movsb
fcomps
cli
mov
call
sub
enter
or
mov
cmp
sub
lahf
bound
xor
sbb
popa
cmp
xor
stos
aas
pop
gs
lods
or
in
stos
push
imul
rcll
jns
mov
add
sbb
mov
xor
push
mov
inc
inc
int
inc
addr16
loop
movsb
jae
dec
lret
fcoml
dec
ja
xor
add
fidivrs
push
outsl
inc
xchg
push
add
sahf
test
dec
push
fiaddl
and
cli
push
sub
divl
xchg
das
cmpl
push
int3
cmc
enter
scas
jb
shll
jg
inc
push
pop
divb
lods
daa
push
pop
test
std
arpl
lods
adc
out
xor
adc
out
jnp
jne
mov
xchg
sub
icebp
test
cs
sub
lods
jb
mov
addr16
icebp
int
inc
xor
shr
arpl
imul
cli
dec
ss
inc
inc
iret
cmp
adc
daa
xchg
or
add
and
mov
adc
sbb
std
roll
fdivrl
inc
dec
shl
sbb
jne
inc
in
add
jl
jge
xor
movsb
loopne
adcl
icebp
adc
shll
mov
mov
insl
inc
xlat
psubusb
sbb
and
ds
pop
mov
inc
dec
xchg
xchg
int
cmp
jg
lds
jbe
dec
jb
xor
pop
aam
fwait
sbb
jnp
clc
es
mov
add
lock
jae
push
les
test
mov
loope
lret
loop
pop
mov
xchg
rcll
lods
mov
stc
xchg
sbb
ja
push
add
fistl
movsb
inc
sub
dec
daa
push
cmp
lret
in
jb
sbb
dec
aaa
in
pop
xor
sub
out
test
std
push
xor
test
cmp
pop
sbb
jmp
jo
push
out
and
call
mov
ds
push
lea
aaa
push
pop
fisubrs
shlb
clc
scas
arpl
add
inc
mov
push
mov
push
insl
inc
mov
push
das
push
aad
jge
add
mov
stc
sbb
add
lds
mov
xor
fcomp
adc
pusha
scas
movsb
add
sbb
ss
std
add
jo
les
in
scas
sbb
pop
int
mov
jne
inc
test
cmp
cmpsb
mov
enter
inc
frndint
lahf
test
loopne
fsubrl
pop
jno
pop
or
add
cmp
push
fwait
pop
cltd
js
pop
cli
adc
stc
test
dec
cmp
pusha
mov
mov
xchg
test
outsl
out
push
in
mov
orb
jo
leave
ja
cld
mov
stos
push
pushf
push
lock
push
aam
loopne
pop
jbe
arpl
jo
jns
sbb
movsl
je
dec
add
adc
rolb
mov
jnp
push
ret
and
lods
loop
cmp
test
mov
cli
push
pop
xor
sbb
cmp
xor
int
pop
fnstenv
add
mov
mov
mov
jne
jno
mov
adc
pop
mov
xor
inc
fwait
xor
xlat
lods
out
and
cmc
xor
hlt
les
push
add
iret
jnp
fwait
out
sub
mull
popa
and
enter
sbb
mov
into
daa
mov
in
inc
xchg
arpl
and
mov
adc
mov
mov
mov
sti
loopne
int
repz
rcrl
hlt
xchg
mov
and
test
xchg
pop
and
push
hlt
inc
fsts
pop
xor
cmpsb
mov
adc
cmp
dec
push
icebp
lods
in
push
addr16
jecxz
ret
loope
stc
loope
xor
push
adc
push
repz
popa
jno
mov
movsb
in
cli
cld
jb
mov
push
mov
aam
sub
push
mov
dec
push
sarl
punpckhdq
jo
fcoml
cltd
xchg
cli
mov
scas
jb
adc
jg
add
ja
clc
dec
cld
idivb
scas
dec
jo
aas
ret
rorb
out
adc
lahf
imul
rorl
psraw
mov
sub
pop
rcrb
ss
sbbl
mov
in
or
jecxz
xchg
jbe
xchg
mov
pop
mov
mov
cmc
adc
cld
pop
inc
push
push
leave
jg
jo
clc
int
aam
scas
sub
leave
mov
jo
add
adc
clc
xchg
mov
faddl
mov
mov
not
out
inc
cwtl
pop
xor
mov
mov
cmc
or
sbb
or
gs
dec
in
push
pop
jo
das
mov
mov
rcrb
fsubs
sbb
adc
adc
adc
push
popf
lock
push
and
psadbw
rorl
mov
mov
js
ljmp
sub
movsb
dec
mov
scas
add
mov
test
jmp
cmp
scas
xchg
cwtl
add
or
cmp
dec
fs
std
cs
loope
movsb
push
movsb
xchg
pop
pop
xchg
jmp
loopne
add
push
inc
inc
cli
dec
lods
mov
arpl
imul
xchg
ds
inc
into
imul
xor
xlat
shr
loopne
jecxz
jb
in
iret
and
push
sbb
test
mov
test
ja
ja
cwtl
xor
test
inc
inc
or
and
sahf
fdivrl
adc
iret
insb
push
cmp
addr16
std
mov
leave
pop
sbb
outsl
cmp
scas
sbb
rol
adc
adc
jl
repnz
out
out
cmp
movsb
push
xor
lea
inc
stos
mov
xchg
ljmp
pop
ds
cmpsb
or
movsb
mov
cmp
inc
mov
mov
lret
sub
xlat
in
insb
into
xchg
adc
iret
mov
mov
das
push
es
sbb
push
mov
inc
popf
jge
pop
sub
jae
and
adc
mov
sub
rorl
outsl
clc
aad
pop
in
ljmp
jmp
shr
xchg
repnz
mov
lock
add
push
imul
fidivrs
sub
jmp
lcall
xchg
nop
arpl
setge
inc
adc
fs
jg
jno
ret
in
mov
push
dec
inc
add
xor
cmp
xchg
pop
and
mov
xor
shr
out
mov
mov
mov
addr16
lods
push
jecxz
mov
cld
pop
ds
adc
imul
mov
aam
jle
mov
sub
jo
cmp
loop
pushf
popf
xor
dec
movsb
sub
notb
sbb
xor
lods
pushf
mov
xchg
in
mov
sub
and
cmpxchg
iret
lahf
ljmp
sbbl
out
pop
mov
xchg
xchg
out
mov
jle
sub
aad
jle
sbb
imul
test
stc
jb
mov
push
xchg
cmp
dec
xor
loopne
sub
fdivs
fidivrl
xlat
jmp
sbbl
and
testb
scas
out
pop
mov
lret
push
rorb
push
inc
mov
or
scas
and
fnsave
cmp
cli
push
and
out
xorb
and
cltd
jecxz
cmp
adc
adc
insl
jmp
ret
push
nop
ja
cmp
jl
inc
add
fldt
loop
fwait
mov
xchg
or
mov
test
cmpsl
push
pop
pop
sub
hlt
jmp
mov
or
jg
push
andb
xchg
in
push
aad
nop
ljmp
mov
aad
mov
ficoml
push
insb
int
lcall
sbb
popa
clc
fldpi
and
jl
mov
add
clc
ja
cmp
jnp
aam
flds
or
xchg
enter
dec
fnstenv
mov
shll
lcall
fisubs
pop
dec
add
in
lock
idivb
adc
lods
sub
in
test
movsb
hsubps
push
mov
adc
rclb
xor
dec
ficoms
in
test
push
pop
adc
rorl
in
inc
adc
or
dec
push
mov
pop
aam
fnstenv
enter
mov
insb
push
aam
inc
push
pop
dec
test
mov
xchg
in
pop
psadbw
leave
sub
cmc
cli
push
mov
dec
sbb
fdivrs
sbb
inc
in
xchg
and
push
rorl
aaa
movsb
xor
adc
popa
push
rcrl
add
dec
mov
or
xchg
sahf
dec
xor
les
jno
jg
mov
push
sbb
stc
pop
aas
mov
xchg
ljmp
pop
outsb
mov
and
sub
lods
mov
mov
shlb
filds
dec
int
cmc
jbe
sub
add
lret
in
popa
and
sub
in
add
das
mov
outsl
inc
in
pop
xchg
mov
enter
iret
push
mov
sbb
jecxz
loope
xchg
adc
sub
inc
push
jge
sub
or
dec
pop
add
jno
pop
popl
sahf
inc
inc
xor
shl
mov
lahf
out
fistpl
loopne
outsb
rcl
pop
ds
inc
inc
je
pop
ja
jecxz
xchg
nop
ljmp
ljmp
and
lea
and
mov
test
jge
adc
test
loop
mov
pop
sbb
sbb
cld
adc
js
cli
add
scas
pop
add
iret
cmpsl
sub
jge
jae
add
cmp
jmp
repz
fimull
fwait
mov
cld
inc
cld
test
aam
push
jnp
mov
scas
pop
shll
jmp
repz
into
sti
sahf
mov
aas
dec
mov
shl
dec
xchg
test
dec
les
add
pop
enter
scas
xor
add
ds
int3
mov
xor
ret
test
sub
std
inc
cmpsb
shlb
sub
daa
mov
adc
add
pop
pop
hlt
into
icebp
fwait
jmp
jecxz
xchg
in
dec
stc
hlt
testb
push
cmp
add
enter
xchg
dec
int3
sti
movsb
lods
push
sbb
xor
insl
push
sahf
cmp
out
cwtl
imul
clc
fcomps
add
pusha
pop
sbb
cmp
sub
fxch
imul
lds
sub
stc
fdivs
push
xchg
pop
xchg
jne
aaa
or
ficoml
push
fisubrs
loopne
sbb
mov
cmc
imul
scas
adc
and
in
mov
pusha
mov
inc
jno
push
nop
jge
xor
inc
inc
imul
and
das
mov
fldl
add
imul
xchg
les
stc
or
pop
daa
inc
sub
aas
cli
test
jne
ljmp
ret
jle
pop
dec
shll
imul
fldcw
in
imul
jns
frstor
adc
dec
test
in
rcr
lahf
mov
pop
mov
mov
ror
leave
insb
popf
cmp
mov
ret
jne
and
loop
fildl
lds
mov
push
mov
or
lds
sbb
dec
push
or
insb
inc
inc
ss
bound
cmp
pop
out
cwtl
inc
add
cmc
ljmp
push
cmc
lods
mov
mov
ret
loop
roll
sbb
stos
aad
int3
push
repz
sarb
loopne
sub
jle
daa
mov
adc
jge
push
movsb
test
cmpsb
sti
rol
push
out
nop
loopne
mov
int
or
nop
jb
lea
inc
pop
aad
leave
sarb
and
push
xor
push
cmp
xor
rcr
ja
lock
sub
and
subb
inc
rol
lret
pop
sub
and
push
mov
loop
movsb
push
jno
and
ret
dec
adc
call
and
mov
xchg
test
mov
pop
insb
lret
cmp
mov
and
test
xor
jp
subl
ret
sub
aas
loopne
out
jmp
mov
pop
xchg
sbb
jnp
push
dec
icebp
xchg
push
push
ret
xchg
adc
cmp
mov
aam
mov
xor
lahf
dec
sbb
sti
xchg
jl
ficoml
pop
add
test
pop
in
dec
sub
push
loopne
in
push
sub
std
test
push
and
mov
mov
test
mov
sub
cmc
push
movsl
cmpsl
jns
dec
mov
or
mov
rolb
sub
sbb
scas
adc
push
ss
add
xchg
xorb
dec
and
nop
xchg
push
lods
loop
pop
repz
mov
mov
add
sbb
sbb
int
xchg
popf
repnz
push
inc
fcoms
add
mov
mov
xchg
aas
fstl
mov
push
pushf
je
icebp
imul
std
aad
dec
push
test
push
inc
cmp
pop
push
vpshuflw
icebp
cmp
mov
sti
nop
dec
pop
aaa
and
adc
pushf
jge
sub
sbb
jbe
rolb
lret
int
dec
shrb
cli
mov
pop
pop
aaa
bound
in
sbb
aaa
cld
dec
cltd
mov
pop
call
out
push
lahf
call
pop
int3
cmp
movsl
add
and
ljmp
xor
jbe
sahf
fisubrl
cmp
into
sarl
mulb
daa
add
lds
fs
xchg
lods
and
pop
mov
push
pop
xchg
ret
jns
lods
inc
lret
dec
push
mov
adc
xor
xchg
stc
mov
fs
add
or
mov
add
jge
loope
lock
rcl
es
xor
ret
and
adc
cmp
mov
lret
inc
int3
and
cwtl
mov
subl
shlb
sub
mov
pop
mov
lret
lahf
mov
sahf
fists
mov
inc
cmp
repnz
fsts
mov
cld
push
mov
add
mov
cmc
push
lahf
ljmp
inc
cmp
lret
mov
xchg
fldl
idivb
call
in
xor
lret
or
jp
dec
fwait
mov
aam
mov
jnp
notl
pop
pop
jb
aad
adc
lahf
outsl
stc
inc
cs
push
sub
add
pop
popa
pop
fsub
punpckhwd
cwtl
mov
pop
or
sbb
cmp
test
loope
lods
sub
sbb
cmpsl
ret
shll
cmpsl
xor
xor
xchg
mov
mov
and
lea
and
hlt
mov
or
jmp
xchg
jg
test
sub
imul
ja
jns
jb
dec
hlt
mov
dec
sub
or
pop
fucomip
call
aaa
lret
and
mov
lock
in
test
aad
inc
mov
stos
xor
jns
inc
xchg
outsl
addr16
dec
sbb
cmp
add
aaa
cli
sub
or
lret
cs
pop
ljmp
call
call
call
xchg
mov
shr
pusha
mov
rclb
mov
ljmp
xor
jbe
adc
jg
js
jge
ja
xorb
aaa
mov
add
icebp
cmp
movsl
add
jnp
xor
int
mov
mov
mov
add
scas
and
jge
int
ljmp
std
int3
ljmp
dec
mov
mov
roll
aad
xchg
dec
mov
lret
cmp
imul
fsubl
mov
aam
icebp
lds
and
aas
jno
xchg
cmp
pushf
aas
imul
movsb
scas
jle
test
movsl
add
mov
or
dec
dec
test
pop
xor
pop
push
lods
out
ja
mov
lret
xchg
ds
xor
xchg
sbb
popa
lcall
lods
popf
clc
xchg
sbb
das
aaa
cmc
push
stos
and
inc
inc
mov
xor
mov
mov
mov
lods
mov
mov
pusha
or
imul
or
stos
mov
cmpsb
mov
dec
loope
std
aaa
dec
xor
adc
mov
mov
inc
shl
nop
aad
arpl
fdivs
out
scas
hlt
jp
pop
push
push
push
inc
mov
mov
inc
fmul
pushl
dec
paddusw
jl
lcall
push
pop
lds
push
cli
mov
sbb
xchg
dec
pop
insb
int
aam
call
mov
iret
fwait
pop
popf
xchg
or
fcom
or
mov
pop
sbb
push
and
mov
mov
sub
and
sar
push
pushf
inc
fistl
xchg
pop
sbb
hlt
mov
push
pushf
adc
pop
xchg
jnp
push
mov
in
shlb
fucomi
mov
pop
int
call
stc
in
fisubrl
push
or
and
ficoml
aas
mov
inc
inc
or
mov
mov
ror
mov
or
push
xor
add
cmp
aam
jle
xor
in
mov
dec
push
inc
add
pop
mov
bound
cmp
inc
sub
xchg
repz
jo
sbb
sbb
xacquire
mov
or
fbstp
mov
inc
aad
gs
mov
and
loope
jne
jbe
adc
lret
inc
rorl
sbb
dec
popl
and
scas
int
mov
daa
test
rcrb
sbb
dec
mov
push
clc
sbb
ljmp
sub
mov
or
rorb
jae
adc
sbb
scas
or
and
pop
pop
aad
mov
mov
into
ljmp
pop
add
aas
push
enter
dec
fildl
mov
xor
xchg
xchg
mov
mov
icebp
cmp
jecxz
push
adc
jb
cmpb
lods
in
jne
or
push
je
sub
mov
out
sbb
mov
aaa
dec
push
loope
dec
xchg
xor
xor
cs
push
mov
stc
push
leave
shlb
loopne
or
xor
ss
mov
push
imul
pusha
mov
push
sbb
fs
in
inc
shl
aaa
push
and
push
pop
push
dec
das
imul
add
xchg
or
sti
push
inc
aad
sub
out
shll
sub
es
adc
push
lcall
jbe
pushf
push
pop
adc
orb
in
insb
xchg
nop
loopne
andl
xor
aam
cmp
enter
lods
dec
dec
and
dec
std
inc
adc
dec
data16
cmpl
jae,pn
sti
shlb
mov
pusha
add
inc
in
dec
inc
scas
push
cwtl
xorl
bound
adc
stos
push
sbbl
xchg
notb
xchg
daa
roll
inc
push
jge
out
or
push
inc
add
bound
dec
add
shll
loope
xlat
xchg
stc
test
mov
mov
std
test
mov
cmp
jg
js
and
das
add
jne
out
out
or
push
inc
mov
stc
imul
movsl
pop
mov
jmp
push
rcrb
sbb
hlt
outsl
out
pop
daa
mov
cmp
add
dec
adc
push
mov
cmp
push
or
sub
sub
pushf
mov
cmpsl
jle
testl
and
sbb
icebp
fs
mov
cmp
push
stos
loope
or
mov
pop
sarb
pcmpeqw
dec
sbb
xchg
cld
mov
jl
outsb
flds
add
mov
loope
jnp
mov
movsl
cmp
xchg
and
cmc
mov
jg
movsb
icebp
idiv
into
shll
mov
shrl
mov
das
add
out
jb
mov
in
imul
nop
push
or
sbb
arpl
das
mov
mov
mov
daa
add
xchg
push
xchg
adc
or
or
pop
and
or
rolb
sbb
fsubl
cmp
scas
in
stos
aad
repnz
jge
xlat
mov
or
push
scas
rcl
mov
pop
cmpsb
mov
outsl
mov
outsb
mov
push
or
sub
pop
or
inc
adc
add
test
sub
push
xchg
rclb
mov
in
mov
negl
sti
cmp
rorb
pop
inc
adc
inc
ret
imul
inc
loope
cmc
fnstsw
dec
cld
ds
subl
iret
addl
xlat
lods
popa
imul
xor
jae
addr16
pop
dec
push
scas
pop
lret
movsl
aam
insb
addb
addb
inc
push
xchg
sbb
sbb
scas
cld
pop
std
mov
popf
shlb
stos
repz
arpl
das
lods
mov
outsl
jp
comiss
adc
les
das
mov
jmp
pop
and
jnp
adc
mov
jb
test
xor
adc
mov
lock
xchg
push
shrb
sbb
mov
mov
xorb
sub
fsts
and
xlat
xor
out
sahf
mov
push
or
aad
and
into
test
in
mov
push
lahf
inc
xchg
shlb
rclb
jg
iret
stc
sub
sbb
xor
or
dec
iret
mov
mov
rolb
repnz
nop
push
xor
adc
sarl
in
shl
dec
push
xchg
pusha
push
aaa
aaa
pop
sahf
and
popa
jnp
mov
inc
mov
cmp
fsubrs
or
inc
pop
in
adc
inc
out
mov
and
mov
and
in
pop
mov
jns
pop
in
or
outsb
pop
mov
cli
xor
das
push
jp
adcb
sbb
jmp
or
push
push
and
xor
sbb
jmp
cmp
out
jae
stc
daa
idivl
shlb
cwtl
mov
cmp
int
jb
divl
inc
push
cwtl
aad
jo
sub
jecxz
inc
mov
inc
fnstenv
fists
mov
jo
fbld
in
stc
mov
adc
dec
insb
mov
push
push
mov
outsb
inc
lea
sbb
pop
pop
adc
push
lock
movsb
mov
mov
pop
inc
jo
hlt
int
test
cltd
and
stos
xchg
jne
cld
insl
fistl
adc
loope
and
dec
icebp
sbb
inc
mov
fs
in
xor
fwait
jb
mov
aas
sub
mov
out
enter
or
adc
idivb
xor
sbb
loopne
sbb
jns
cmpsl
in
aad
in
dec
mov
ret
orb
call
mov
add
test
push
fstps
xchg
and
pop
mov
rcr
inc
js
or
insb
and
lret
repz
test
xor
jp
jns
pop
push
nop
jo
lcall
scas
pusha
popf
push
cwtl
cmpsl
in
mov
inc
sarl
mov
shrb
pop
xor
lret
sub
addr16
adc
mov
shll
adc
je
pop
loop
cltd
xor
pop
mov
stos
scas
push
xchg
cmp
stos
jle
ret
mov
xchg
dec
daa
fdivl
push
mov
add
repz
lret
mov
ds
adc
int3
xor
jl
dec
lds
fdivrs
std
xlat
shrl
add
data16
xor
lds
jb
add
inc
leave
shrl
das
mov
pop
mov
xlat
adc
cmpsb
lret
nop
roll
push
push
xor
adc
and
aam
clc
das
leave
sbb
inc
ret
cmc
arpl
xor
cmpsl
mov
stos
icebp
sub
mov
nop
scas
xor
jmp
and
jo
iret
scas
jmp
les
out
aas
mov
mov
test
mov
test
ret
add
jg
scas
xchg
or
jl
jns
xor
or
pop
jae
bound
jnp
rcrb
das
and
das
sub
mov
mov
inc
hlt
imul
mov
repnz
lret
test
mov
repnz
sbb
push
dec
imul
jnp
jae
inc
test
push
in
and
pop
cmp
inc
add
into
sbb
xor
or
mov
inc
je
sbb
shrb
pushf
fildl
adc
je
popa
aad
dec
loope
insl
outsb
in
xor
ja
mov
gs
movsb
daa
push
push
shrd
add
adc
or
jp
xor
mov
and
mov
adc
sub
push
push
xor
dec
sbbb
aas
sub
insl
test
adc
mov
push
mov
and
mov
mov
addr16
sbb
roll
sbb
and
iret
jecxz
inc
cli
mov
clc
insl
filds
inc
rcrl
cmp
bound
inc
jle
sahf
xchg
ljmp
push
insl
fs
sbb
cwtl
icebp
sub
dec
cmpsl
jle
mov
out
shrb
adc
or
mov
pop
dec
pop
iret
adc
xchg
filds
aaa
loopne
scas
cmpsb
push
es
jg
or
insb
in
pushf
cmp
mov
daa
sbb
ljmp
test
orl
dec
mov
pop
push
add
mov
call
inc
xor
pop
pop
jmp
mov
and
dec
or
lea
jnp
cmc
lods
orl
mov
pop
scas
testl
mov
adcl
cmp
movsl
lock
hlt
ds
xchg
idivl
fcomp
jle,pn
pop
or
lea
dec
dec
das
lods
scas
jge
mov
cmp
scas
pop
stc
loop
nop
movsb
in
jp
adc
std
sub
adcb
rcr
mov
mov
loop
cltd
iret
nop
sub
jo
mov
push
subb
push
jbe
mov
or
adc
jmp
ds
or
xchg
inc
fidivrl
add
inc
jecxz
andl
dec
mov
mov
ret
stos
jecxz
jmp
xchg
or
sbb
mov
int
xchg
mov
fnstsw
shll
xor
rorb
fidivrs
pop
lods
repz
pop
mov
shr
mov
push
xor
pop
cld
test
cmc
mov
es
dec
sbb
cltd
stc
push
iretw
inc
jnp
mov
paddsw
adc
mov
adc
mov
sbb
sarb
jo
cmc
and
xor
cli
push
adcb
testb
idivl
fdivr
pop
loop
lds
mov
loopne
jg
pop
xor
mov
aaa
push
or
inc
inc
inc
hlt
xchg
add
sbb
push
or
andl
test
outsl
in
push
or
cmp
bound
xor
fnstenv
jns
inc
imul
outsb
push
add
insb
add
sbb
cli
fdivrl
mov
es
les
dec
aas
adc
pop
lock
aad
xchg
mov
popl
sahf
pop
mov
cs
adc
lea
int
data16
jb
imul
mov
lods
cld
adc
int3
test
push
adc
ljmp
bound
inc
ss
cs
or
int
ret
rep
leave
aas
bound
pop
es
xor
jo
xchg
into
out
dec
and
sub
pop
ds
orb
pop
mov
xor
jbe
test
mov
pop
pop
lret
in
cmpsl
cmp
push
out
mov
adc
aas
or
imul
ret
push
fstpt
call
sub
bound
jecxz
inc
cld
imul
out
in
or
pushf
int
pusha
xor
pusha
movsb
xor
mov
sbb
pushf
xor
sub
push
fsubl
mov
push
or
daa
xor
xor
sarb
cmp
sub
int3
hlt
push
jecxz
out
dec
and
jae
fsubrl
ret
repnz
sbbb
push
sub
push
push
push
pop
arpl
lods
movsb
in
pusha
xchg
nop
cmpsb
je
ror
push
into
int3
xchg
and
sar
adc
inc
jmp
fistps
lcall
sub
inc
xor
rorl
xchg
sub
in
xchg
add
jnp
lahf
mulb
or
jne
gs
pop
in
rcll
jge
sbb
pop
popa
add
nop
test
jns
dec
and
mov
daa
lds
loope
orb
ss
sarl
rcll
cmp
jae
jg
insb
pop
and
mov
rcr
mov
enter
mov
mov
les
jg
pop
mov
lcall
push
jle
repnz
adc
fucomip
mov
testl
sbb
fidivrl
xchg
adc
shll
sbb
inc
in
in
and
outsl
ljmp
lds
popf
ljmp
xor
out
pop
lods
call
orb
xor
iret
vpaddq
add
xchg
inc
ficoms
ficomps
pop
enter
dec
aad
movsb
push
mov
cwtl
cmp
sbb
inc
fistl
inc
popf
fistl
outsl
jmp
xchg
add
xchg
mov
and
outsb
clc
scas
mov
push
adc
cltd
xchg
negb
repnz
push
add
cmp
jae
ja
cmp
dec
mov
xchg
sub
call
out
sbb
sub
lea
std
cmpsb
mov
inc
popa
sahf
xchg
lret
lods
mov
shll
loope
jle
xor
push
imul
adc
movsb
inc
sbb
sub
mov
decl
das
into
std
pop
pop
and
sbb
xchg
std
scas
pop
lods
and
repnz
adc
dec
addl
cld
fsubrs
fsts
fldenv
xchg
out
les
inc
out
mov
in
fnsave
sbb
mov
test
mov
je
push
add
mov
xor
or
cld
in
dec
mov
ficompl
jp
lds
sub
ljmp
push
pop
or
jb
sub
or
stos
ljmp
xchg
adc
inc
jp
or
sbb
imul
xchg
mov
push
mov
xchg
push
cmp
adc
das
sarl
jge
mov
mov
lret
mov
push
xor
xor
xchg
xchg
lods
iret
jl
and
pop
iret
cmpsl
add
pop
or
andl
mov
push
or
icebp
sbbl
fwait
dec
and
mov
xor
arpl
cmp
out
mov
into
push
or
imul
mov
jecxz
ja
popa
adc
movsl
ljmp
dec
je
jl
bswap
lds
das
lcall
dec
in
lret
inc
mov
mov
inc
sti
je
ret
jmp
dec
xor
and
ja
cmp
lea
jg
sbb
lds
xchg
arpl
shlb
adc
test
or
lahf
dec
adc
sbb
xchg
and
test
push
sbb
xor
mov
sbb
shlb
arpl
mov
lods
push
aam
jns
and
les
call
dec
pop
les
jmp
jmp
xchg
inc
inc
aas
out
mov
adc
addr16
jns
stos
jg
or
mov
mov
mov
jne
mov
mov
lods
iret
jmp
or
jp
jmp
jne
clc
add
push
in
dec
lods
int
outsl
ret
out
inc
mov
cmp
sbb
test
adc
mov
or
out
adc
mov
mov
pop
movsl
mov
inc
xor
rclb
and
cmp
repz
pop
arpl
sbb
aas
scas
movsl
fs
push
push
jl
pop
cli
jae
lea
repnz
cmpps
push
jb
outsl
nop
aaa
es
jns
xchg
xchg
repz
lcall
shl
lods
sti
je
mov
outsb
sahf
pop
xchg
test
stc
push
aas
test
repnz
sub
mov
xor
ljmp
push
lret
cmp
sti
std
loop
xorl
jmp
movsl
pop
jle
notb
xchg
push
testl
sub
xchg
xor
mov
sbb
stos
lcall
or
hlt
out
xor
pop
jae
sbb
in
mov
movsl
sub
mov
dec
add
inc
cmp
adc
mov
aam
xor
ja
add
adc
in
mov
int3
popa
in
test
loopne
xchg
jg
sahf
push
decb
pop
mov
and
call
lock
sahf
mov
push
clc
fcomps
push
loope
cmp
push
sbb
mov
lods
fisubrs
dec
jo
ret
pushf
dec
cmpsl
lret
out
std
inc
jle
and
push
xchg
pushl
push
mov
lods
mov
fwait
push
fwait
divl
fs
mov
mov
enter
or
jnp
ds
mov
ret
in
jnp
sub
cltd
repz
leave
je
jp
mov
xchg
pop
or
push
push
add
mov
out
inc
pop
mov
sub
jnp
stos
and
inc
loop
js
loop
dec
mov
cltd
lods
push
push
add
xchg
movsb
xchg
out
lcall
xor
loop
test
mov
daa
jl
aaa
pop
push
outsl
sarl
ss
push
pop
dec
and
movhps
jnp
das
nop
push
jne
add
pop
pusha
cmp
and
filds
jae
enter
test
mov
andb
adcb
xchg
hlt
jae
scas
stos
inc
je
pop
repnz
sti
cmpl
rclb
lahf
lea
repz
incb
ljmp
scas
out
adc
arpl
repnz
jl
ljmp
sti
jecxz
jnp
test
xor
jno
mov
mov
cmp
push
push
mov
xor
data16
adc
and
lea
push
dec
fwait
sbb
orb
dec
pop
and
iret
and
in
mov
cmp
sub
adc
cmpb
js
pop
rorb
jp
fs
push
adc
push
arpl
sbb
push
test
push
je
stos
xchg
sub
ja
orl
nop
imul
fucomi
fs
pop
outsb
js
push
xor
mov
cltd
je
and
inc
ljmp
push
sbb
iret
sub
jbe
out
and
insb
stos
dec
add
xor
pushf
aas
cmpsl
sbb
arpl
xchg
add
or
mov
scas
jns
pop
sbb
ja
std
cld
add
xchg
push
aad
jg
mov
cwtl
jno
adc
cli
arpl
mov
lahf
add
loop
pop
dec
out
cwtl
sbb
dec
jns
adc
sbb
sub
mov
dec
adc
push
or
arpl
lock
popf
jmp
int3
push
mov
xor
cmp
add
negb
mov
mov
sub
push
inc
pop
mov
add
dec
push
sbb
pop
lods
adc
jnp
inc
cmpsl
call
or
push
adc
xor
std
cmp
or
push
mov
mov
out
adc
shl
push
or
or
mov
mov
cltd
or
mov
push
push
icebp
mov
mov
lret
push
jl
jl
mov
sahf
mov
test
add
test
fdivl
inc
or
mov
aam
jl
jg
fcompl
push
arpl
mov
paddd
xchg
mov
inc
sti
es
and
jle
addr16
mulb
jno
add
or
adc
and
out
sub
or
fadds
jmp
or
and
pop
push
ficoms
and
roll
add
cmpsb
fildl
jle
orl
in
lret
jge
hlt
negl
pop
mov
jbe
inc
mov
jo
pop
pop
popf
fwait
scas
insb
jne
out
sbb
fs
xlat
adc
jge
jp
pop
adcb
or
stc
and
shlb
mov
add
jecxz
add
jo
mov
les
popf
cmpsl
cld
cs
adc
ret
pop
lahf
lock
jle
inc
cmp
cmp
push
in
call
aas
sahf
mov
test
pop
push
enter
xchg
into
xchg
push
ret
ds
inc
pop
sbb
cmp
stc
dec
gs
pop
fiadds
mov
outsl
pop
inc
adc
adc
ljmp
subl
iret
xor
mov
lahf
lcall
rclb
adc
sti
test
pop
in
les
fsubs
das
das
dec
or
pop
add
and
outsb
xchg
dec
ss
mov
push
cmpsl
imul
push
jnp
fidivl
lea
lock
movsb
jl
push
and
in
mov
mov
lods
mov
jmp
push
mov
sbb
lahf
arpl
pop
push
adc
pop
fldenv
jne
lods
jne,pn
jmp
push
jecxz
dec
mov
xchg
ss
mov
stos
in
dec
in
xor
ljmp
add
mov
movsl
push
mov
lods
or
xor
cmp
cmp
cmp
data16
push
adc
cmp
out
fs
cli
dec
arpl
rorl
movsl
sarb
add
lods
add
adc
sbb
or
xchg
jmp
in
hlt
jb
divb
lds
mov
xchg
add
pop
fcmovnbe
std
or
pop
shll
push
ljmp
adc
outsb
push
xor
jecxz
les
jg
mov
adc
mov
popf
mov
lods
jae
lock
cltd
pop
push
dec
outsl
andb
jp
dec
mov
push
push
mov
int
icebp
mov
push
push
jl
into
stos
sti
xchg
sub
imull
xor
sub
jl
or
xchg
pop
push
cmp
rcrb
mov
xorb
and
jbe
dec
jge
xor
andb
in
out
adcl
outsb
imulb
cli
cmp
dec
sbb
sbb
in
fcmovu
xor
lock
or
fwait
adc
or
mov
mov
xchg
adc
jmp
jae
inc
sub
jae
pop
mov
ljmp
and
xor
mov
hlt
push
sub
js
out
cmp
stos
and
lcall
stos
insb
pop
push
iret
sub
incb
loop
decl
jge
cli
fistpl
add
xor
rolb
sbb
or
negb
pop
loope
and
sub
lcall
ljmp
xchg
ds
cmp
add
mov
xchg
sbb
insl
mov
lock
mov
sub
or
int3
sbb
orl
shrl
dec
out
faddl
call
xchg
jle
and
ficoms
or
jmp
aad
aam
jae
sub
nopl
inc
mov
clc
sbb
jecxz
jl
add
inc
push
movsl
add
jge
hlt
insb
loop
sbb
outsl
mov
push
std
mov
mov
mov
iret
cmp
dec
arpl
pusha
sti
cmp
mov
or
subl
call
outsb
jno
mov
and
cmp
fucomi
ficomps
in
push
xchg
ja
mov
neg
int3
div
pop
mov
mov
sub
popf
lds
bswap
cltd
or
jecxz
pop
sbb
adc
shll
or
pop
sarb
cmp
or
add
push
ja
jns
cltd
loopne
nop
hlt
jg
cwtl
sbb
cmp
xlat
push
jb
test
mov
xchg
or
sbb
pop
adc
mov
lahf
clc
xor
loop
xchg
dec
lret
xchg
sahf
or
mov
popa
rcrl
pmuludq
push
das
mov
jo
mov
lock
xor
out
enter
stos
adc
into
arpl
sarl
hlt
push
shl
cmpsb
push
roll
jge
pop
xchg
je
cld
cs
popa
adc
movsl
push
rcl
mov
scas
or
test
push
cltd
xor
jb
mov
or
and
push
mov
mov
inc
xor
out
jg
or
sbb
xor
and
jno
ss
repz
xor
jp
mov
addr16
mov
adc
loop
xor
cmp
shll
adc
daa
sub
mov
mov
sbb
mov
ror
imul
out
or
push
jle
sbb
lcall
cltd
ret
xorl
xchg
mov
pop
sbb
jp
dec
jnp
aaa
imul
lds
dec
pusha
test
jle
pop
push
sti
push
dec
xlat
stc
or
fidivrs
inc
pushf
push
int
push
imul
xlat
and
scas
test
in
sub
fnstenv
setl
sub
fistps
loop
es
insb
int3
jnp
cmc
or
add
out
in
ret
push
addl
ret
dec
cli
test
push
mulb
add
stos
pusha
cmp
inc
mov
cmpsb
adc
pop
xchg
gs
xchg
sarb
lret
scas
mov
lea
push
fdivr
and
inc
dec
mov
test
push
pop
mov
fwait
inc
cli
cmc
inc
and
sbb
mov
jbe
mov
shll
fsubs
ja
gs
ja
xchg
and
xchg
movsl
pop
cs
lock
sub
scas
pushf
xor
pop
mov
mov
lods
fsubrp
iret
cmpl
dec
ljmp
lret
jge
int
out
fstpt
push
and
cmpsl
xchg
es
popf
je
mov
lret
pop
xor
mov
outsl
ficomps
mov
scas
dec
dec
shrl
negl
jb
stos
sbb
movsl
sbb
jbe
cmp
fstps
cmp
lds
jns
imul
mov
or
xchg
and
in
rclb
scas
pop
movsl
mov
pop
test
cld
ljmp
jmp
add
inc
test
jmp
decb
lds
push
mov
dec
scas
fbstp
push
and
dec
dec
cli
pushf
cs
in
fistps
fistps
add
jbe
mov
add
insl
hlt
daa
movsb
xchg
pop
add
hlt
dec
pop
sarb
enter
addr16
xchg
pusha
mov
mov
xor
mov
mov
cmp
rorb
in
dec
ja
or
jmp
adc
test
mov
mov
test
xlat
ret
inc
loopne
dec
add
cmpsb
shld
imul
xchg
push
ljmp
jno
clc
scas
cld
scas
enter
loop
push
inc
fimuls
xor
cmp
iret
imul
or
sub
movsl
sbb
xor
fwait
fwait
jne
pop
ret
pop
and
or
mov
mov
lret
push
dec
pop
dec
xorl
cli
dec
mov
in
xor
jb
push
roll
adc
push
inc
jne
test
inc
or
and
insb
int
jne
push
stos
imul
push
out
inc
dec
dec
adc
dec
xchg
pusha
mov
shll
out
ret
hlt
pop
jbe
scas
inc
negb
pop
in
gs
push
cmp
mov
add
mov
lret
lahf
std
notb
std
out
int3
inc
mov
sbbl
dec
aam
pop
dec
sub
es
jnp
lods
pop
stos
andnps
mov
ja
insb
stos
add
sahf
push
dec
jne
adc
mov
in
imull
cli
scas
xchg
mov
dec
call
xchg
decl
sbb
imulb
sbb
jmp
mov
mov
sub
xor
ret
repnz
iret
jg
icebp
mov
out
jns
sub
call
fisttps
sbb
push
nop
cmp
int3
mov
dec
push
cmpsb
adc
cwtl
adc
jne
rorb
sti
leave
lods
out
out
pop
jg
aas
test
in
pop
rcrb
lcall
hlt
into
into
lods
push
repz
pusha
loopne
lds
bound
imul
dec
lcall
jo
aad
cmp
arpl
cmpsb
int
pop
add
lock
imul
imul
movsl
dec
xchg
rcll
hlt
stos
inc
jmp
mov
sub
mov
fisttpll
jge
clc
mov
add
les
or
mov
inc
popf
insb
lock
iret
mov
jmp
cmp
push
fistpll
out
jae
hlt
push
iret
or
dec
jg
sbb
rcll
sahf
leave
cmp
jge
push
xchg
test
loope
gs
inc
out
stos
js
or
lahf
rcl
pop
scas
filds
mov
pop
xchg
push
popa
sub
outsl
add
jmp
mov
or
pop
mov
scas
inc
out
cmc
inc
test
inc
out
xchg
cwtl
sahf
mov
aam
xor
add
xlat
or
cmp
js
push
faddl
sarb
aas
ficoms
pop
in
fisubrs
mov
movsb
push
ret
orb
fisubl
movb
jo
es
push
movsl
imul
popf
pop
jne
xchg
mov
inc
mov
xlat
fdivrs
xchg
out
mov
sbb
std
fbstp
addb
xor
pop
in
lret
xor
lcall
xlat
fidivrs
jbe
cmp
add
pushf
loop
sbb
out
xchg
dec
and
push
pushf
push
lea
lock
sub
rolb
sbb
mov
dec
rolb
cmpsl
loope
and
xor
push
or
adc
push
mov
pop
js
fcmovnb
js
push
adc
xlat
pop
add
lods
pop
insb
and
sbb
iret
push
popf
mov
es
out
adc
mov
lods
fnsave
adcb
lcall
dec
loop
xor
loop
or
mov
jl
cld
dec
mov
andl
orb
mov
stc
mov
jbe
push
lock
sub
stc
and
jle
or
call
addr16
or
pop
sbb
mov
fucomip
mov
jmp
das
loopne
aaa
mov
mov
pop
sbb
mov
mov
lods
mov
inc
jb
mov
jg
push
mov
inc
mov
cltd
adc
mov
or
sbb
mov
cmp
in
cmp
lcall
je
int
int
lcall
cmpsl
cwtl
dec
inc
lock
jne
mov
popa
iret
out
push
aam
jle
ret
mul
pop
mov
add
ljmp
arpl
adc
into
icebp
in
add
push
adc
nop
sbb
fisubs
stc
push
mov
fs
mov
sub
jecxz
gs
mov
or
sbb
out
xchg
pop
ds
xor
js
jle
outsl
xchg
aaa
lea
daa
mov
outsl
cld
sbb
adc
shl
push
in
mov
movsb
es
fstps
out
mov
adc
repnz
jl
rcl
testb
bound
fdivl
je
xchg
jmp
insl
mov
inc
adc
add
icebp
stos
pop
loop
insb
jp
aad
sub
mov
jnp
cmp
xchg
xchg
dec
sti
sbb
loope
dec
adc
mov
inc
mov
lret
ljmp
pop
cmp
jo
movsl
ret
jnp
push
imul
inc
push
adc
scas
out
cmpb
test
ret
sbb
insb
mov
popf
dec
sbb
mov
push
mov
cld
sub
aaa
jg
pop
icebp
cltd
push
sub
lds
lea
xchg
mov
sbb
mov
push
and
fwait
cli
push
ja
cld
pusha
mov
and
cs
jmp
in
xchg
push
movsb
inc
add
and
xchg
pop
push
gs
ds
pop
sarb
cmp
mov
cwtl
jg
ret
sub
sbb
mov
adc
outsb
js
pushf
xchg
mov
mov
xor
pusha
dec
inc
loope
bound
aad
xor
and
call
lock
lret
and
movsl
dec
sbb
ss
loopne
aas
or
idivb
add
les
mov
cltd
clc
pop
out
jle
sbb
mov
or
jae
stos
dec
ss
sbb
movsl
es
sbb
and
mov
lock
push
sbb
clc
cmp
pop
inc
mov
in
inc
lahf
push
cmp
out
add
daa
ds
sub
mov
adc
stos
into
dec
repnz
cmp
jae
mov
data16
add
jl
pop
rcl
push
mov
cwtl
jbe
call
or
jecxz
jecxz
in
jecxz
mov
nop
xchg
mov
inc
popf
loop
movsb
cli
mov
push
xlat
leave
cmp
dec
lcall
shr
out
aad
jp
xor
hlt
jle
push
fldenv
dec
xchg
mov
out
push
adcl
xor
mov
popf
sub
and
jb
jns
movb
cmp
loopne
lods
movb
lods
or
dec
jmp
orl
xchg
sbb
fldcw
dec
lret
sti
jno
fsts
and
repz
sti
push
pop
xor
scas
gs
jecxz
mov
adc
push
stos
mov
adc
or
out
push
push
xchg
mov
add
mov
sbb
xchg
test
loopne
jnp
mov
dec
cmp
mov
pop
and
adc
enter
add
jbe
inc
mov
mov
cmp
test
int
inc
xchg
mov
andl
pop
cmpsb
xchg
push
mov
mov
mov
aas
hlt
lret
push
fs
inc
dec
xor
rorl
adc
xchg
dec
rcrl
jb
ljmp
gs
push
xlat
cli
out
mov
cli
pop
outsb
cmp
or
jmp
fistpll
fsubr
jo
jle
jl
mov
shll
stos
adc
sbb
add
ja
mov
adcb
stc
xchg
les
incb
mov
push
xor
flds
or
inc
sub
mov
shrl
test
jge
dec
push
push
out
out
lods
cmp
cmp
loope
popa
stc
pop
repz
xchg
pop
and
mov
lea
inc
sbb
loopne
xchg
js
dec
inc
arpl
movsb
jae
sbb
fsubrl
fisubrs
leave
out
mov
aas
out
or
aas
shll
subb
int3
mov
sub
and
call
pop
fdivl
lea
testl
pop
test
mov
mov
xor
xchg
sbb
inc
mov
nop
data16
mov
repnz
dec
sbb
push
lods
cld
and
stos
adc
jp
test
and
jg
repz
addr16
add
jne
daa
xchg
aad
fcmovu
nop
jmp
fs
sbb
call
in
scas
aas
cmpsl
lcall
jo
sub
jmp
push
xor
jb
fs
jnp
adc
mov
hlt
dec
mov
dec
outsl
js
lret
sbb
mov
adcb
aam
out
mov
in
mov
jbe
sub
lods
mov
je
cld
mov
pop
push
pushf
jo
je
xor
push
fadds
js
dec
adcl
shr
cmp
pop
xor
mov
shrl
dec
adc
xchg
dec
mov
mov
pop
jns
dec
ss
xor
lret
lea
xchg
add
lds
adc
or
pop
xor
in
lahf
xor
call
jns
fsubs
dec
in
adc
imul
jg
mov
stos
lret
inc
adc
repz
mov
mov
xorl
loopne
cmp
adc
sbb
pop
leave
icebp
xchg
scas
dec
dec
call
push
add
push
mov
pop
pop
adc
mov
or
inc
xor
shll
in
or
pop
shr
push
jg
mov
sahf
push
xor
xchg
or
jecxz
cmp
insl
push
das
jmp
mov
cmp
jp
rcll
fstpl
shll
std
pop
fistps
js
push
cmp
adc
fidivl
cmp
mov
imul
mov
enter
pop
mov
cltd
jns
not
adc
xor
xlat
pop
cmp
mov
loop
or
push
imul
mov
xchg
jge
push
sarl
cld
dec
xor
mov
jle
cmp
fadd
mov
jno
data16
push
xor
push
sbb
pop
out
and
fisubs
adcl
ljmp
cmc
popf
aaa
xlat
movsb
lret
inc
dec
mov
sahf
inc
sub
xchg
cmp
fdivl
in
fidivrl
sub
imul
daa
mov
ss
lcall
idiv
subl
xchg
popa
push
adc
mov
sbb
sub
jns
adcb
xchg
cwtl
adc
dec
xor
mov
cs
push
lahf
cmpsl
stc
mov
out
or
clc
sub
inc
dec
loope
sub
add
orb
sbb
inc
inc
mov
add
adc
xlat
push
jg
jl
mov
ja
outsb
jne
shrl
imul
xchg
or
out
and
stc
jne
mov
test
test
sbb
mov
cmpsb
lds
lea
inc
stos
push
push
es
lahf
out
stos
mov
icebp
fiaddl
fsubr
or
and
mov
or
and
ljmp
inc
mov
or
jl
and
push
in
and
jecxz
sbb
inc
or
inc
jecxz
out
or
mov
or
outsl
xor
jo
enter
push
xor
mov
mov
out
push
lods
outsb
inc
mov
mov
push
mov
jns
testl
popa
aam
stos
imul
cli
fmuls
jbe
mov
cs
popf
test
icebp
std
mov
add
xchg
test
cmp
dec
push
cmpsl
sbb
sub
ja
jmp
jo
rorl
sti
mov
mov
movsb
xor
xchg
shlb
mov
xor
push
push
push
scas
jl
fiaddl
inc
arpl
fldenv
or
bound
lods
jle
pop
jge
in
push
scas
incl
inc
mov
mov
in
xor
or
lahf
sahf
fildll
cmpsb
fs
sub
push
inc
ret
push
call
loopne
inc
repz
sbb
and
int
dec
fwait
inc
mov
jle
mov
mov
cmpsb
addr16
pop
lret
jb
loope
neg
movsl
or
call
pop
push
mov
jmp
push
out
movb
sbb
je
lahf
aad
jp
and
push
shlb
jns
sbb
call
sub
xor
ja
enter
and
dec
xor
cmp
xor
imul
adcl
add
mov
dec
in
jle
and
cmpb
aaa
sbb
ret
mov
adc
mov
fisttps
imul
mov
xor
imul
adc
in
mov
pop
sbb
les
clc
mov
scas
pop
pop
mov
and
imul
dec
into
push
sbb
es
lret
xchg
xor
inc
mov
and
xchg
mov
sbb
push
adc
push
mov
bnd
xor
cltd
cld
xor
pushf
js
loop
lods
fadds
repz
cwtl
scas
pushf
ret
sub
je
xor
mov
cmc
fimull
xchg
xchg
shrb
test
cmp
xchg
popa
mov
push
pop
cld
push
adc
stc
repz
jg
fdivrp
ss
movb
cld
add
fstp
stos
jb
xchg
xor
mov
and
aam
loope
inc
sub
inc
aad
cmp
out
cltd
addr16
test
mov
push
jp
gs
out
scas
lret
lret
dec
scas
push
leave
mov
sub
and
in
push
pop
adc
lods
fidivs
pop
sbb
aas
das
divl
pop
stos
push
mov
push
clc
inc
in
cs
and
and
hlt
cmpsl
fwait
xchg
testl
or
ss
sbb
xor
popa
mov
cmpsb
push
andb
bound
push
push
push
mov
cltd
inc
int
sub
mov
push
scas
and
cmpxchg
lret
mov
cwtl
adc
inc
fisubl
or
push
shrb
pop
fs
add
test
cmp
fldenv
sarl
pop
lret
mov
pop
int3
dec
xchg
and
dec
mov
in
mov
and
dec
inc
dec
sbb
jbe
outsb
test
dec
adc
scas
test
adc
and
mov
jle
and
div
mov
sub
das
xchg
aam
lods
and
mov
out
das
fiaddl
mov
xor
gs
sar
sub
sbb
xchg
lods
pop
aad
push
mov
aas
pop
push
inc
add
pop
sbb
sbb
fisubl
mov
adc
push
jecxz
idivb
push
mov
fdiv
xor
popa
mov
dec
jg
jmp
sub
mov
push
push
repnz
push
ss
icebp
jno
andl
push
loopne
adc
mov
out
dec
sbb
cmp
sub
fbstp
add
add
mov
shrb
push
enter
sub
roll
and
xchg
aas
jbe
xchg
cmpsl
lcall
fimuls
or
lods
inc
outsl
or
stos
adc
or
loope
popa
les
jecxz
jecxz
test
push
inc
xchg
add
mov
out
xor
or
mov
push
sarb
je
loopne
xchg
test
cmc
mov
ds
inc
insl
cmp
daa
pop
cmp
push
ret
xor
inc
mov
push
sbb
aas
fcomi
arpl
ret
lods
ficompl
popf
jne
xor
xchg
push
mov
or
lret
ret
addr16
stos
jnp
cmp
addr16
xchg
dec
dec
jno
cli
cmp
xlat
leave
xlat
jbe
and
sbb
ficomps
cmp
xor
pop
xchg
cmp
or
hlt
js
push
inc
mov
cmp
and
dec
daa
shll
inc
jge
das
adc
int3
in
fbld
loope
int3
aaa
movsb
mov
out
scas
mov
fisttpll
inc
es
push
push
mov
pop
aad
cwtl
xor
jno
sarl
hlt
sub
and
xor
inc
negb
dec
sub
mov
xchg
jmp
inc
mov
mov
out
int
sub
xchg
movsb
push
outsl
jne
sahf
mov
xchg
pop
es
es
push
int3
stos
push
inc
subb
repnz
notb
repnz
int
lea
icebp
fwait
insb
jp
sbb
loopne
cmpsl
dec
mov
stc
mov
push
aad
pop
mov
sahf
sub
in
adc
lods
cmc
inc
mov
and
movsb
xchg
xchg
mov
mulb
jb
rol
sub
loope
in
or
loop
pushl
sbb
pop
in
push
and
jge
call
jne
repnz
stos
out
shlb
lahf
add
data16
pop
fidivl
cld
rcrl
nop
push
lods
repz
in
push
jl
push
mov
and
mov
fldt
add
dec
bnd
inc
or
cmp
pop
inc
xchg
push
xchg
dec
mov
xor
js
mov
sbb
aas
test
roll
sub
cld
cwtl
mov
movsl
xchg
push
fisubs
test
xchg
jmp
sahf
push
mov
sarl
repz
push
or
pushf
and
das
int
add
out
leave
pop
jle
xchg
adc
jns
xor
add
and
mov
fisttpl
xchg
rclb
je
inc
icebp
xchg
loope
push
ficoms
imul
push
cmp
icebp
ljmp
push
mov
or
lcall
xor
mov
cmp
push
ljmp
imul
sbb
sub
insl
sbb
adc
loope
in
lock
xchg
pop
cs
or
dec
sub
xor
popf
jns
or
shll
popa
cmp
cmp
out
addr16
xchg
pop
pop
lock
pop
jbe
adc
shll
movsl
cmp
cmp
lret
sub
xchg
inc
rcrb
mov
fdiv
add
loope
insb
xchg
jo
add
frstor
fs
cmpb
sti
in
outsl
xorl
cmp
movsl
adc
insl
add
xchg
jo
adc
inc
in
cmc
sahf
xlat
mov
movsl
or
insb
adc
xor
fsubrs
pop
shll
jge
mov
add
jmp
addr16
outsb
js
jns
mov
sbb
push
es
test
lret
cmc
mov
pop
outsb
dec
orb
sub
data16
mov
cmp
xor
cmc
aad
xchg
jne
jp
add
movsl
into
int
xchg
adc
out
sbb
push
andl
inc
mov
inc
fcmovnu
hlt
cmpsl
lds
or
leave
movsl
loopne
nop
push
sub
mov
stos
in
aam
dec
push
negb
repnz
mov
into
mov
lahf
add
sub
push
or
sub
jmp
cmp
xor
movsb
loope
test
pop
or
pop
xchg
xor
roll
mov
fimull
push
movsb
shr
xor
sarl
pop
xor
inc
mov
test
lret
out
cmp
lret
pushf
dec
nop
out
fimuls
push
jmp
adc
and
data16
bound
push
hlt
push
scas
sahf
pop
jbe
dec
fdivs
lods
scas
cld
sbb
arpl
mov
lock
repnz
mov
mov
add
incb
sbb
ljmp
lss
movsl
lds
add
mov
fidivs
or
je
dec
call
pop
mov
sbb
enter
add
add
ljmp
cmp
gs
push
icebp
addr16
sbb
and
jnp
xor
and
testl
repnz
adc
mov
aam
es
xchg
cwtl
fnstsw
sbb
mov
push
fwait
gs
mov
mov
jp
cwtl
mov
leave
and
cltd
mov
or
mov
es
sti
cmp
aas
ja
adc
add
mov
movsb
clc
mov
je
lea
mov
xchg
lods
iret
shll
fwait
pop
femms
stos
cmpsb
mov
fucomi
sub
jne
push
mov
test
stos
rclb
mov
cwtl
aam
cmpsb
roll
scas
daa
push
cmp
in
hlt
adc
fwait
xchg
or
cmp
mov
cmp
negl
jbe
add
daa
js
addr16
cltd
rcrb
das
mov
cli
imul
idivb
sbb
movsl
mov
mov
test
dec
or
adc
cltd
jo
ficompl
adc
mov
push
into
test
fwait
jne
stos
sub
loope
inc
rcll
lcall
fcmovu
mov
push
lods
xor
inc
xor
push
insl
mov
push
and
in
or
and
add
jae
push
arpl
push
pusha
ret
ret
and
icebp
imul
add
xchg
out
inc
cmp
sub
pusha
dec
jmp
sar
out
sti
and
xor
aas
xor
xor
pop
sbb
inc
adc
cmpsb
jle
sbb
cli
je
and
sti
mov
notl
inc
lods
or
inc
xchg
jge
fs
rorl
mov
iret
pop
in
inc
lods
movsl
xor
jp
das
insl
aaa
arpl
xchg
push
jns
lcall
add
testb
fcoms
pop
xor
mov
mov
jbe
jb
imul
in
jecxz
jo
pop
aaa
adc
mov
rcl
in
pushf
andl
sbb
jl
dec
ds
mov
adc
add
fsubl
dec
roll
push
fs
popa
dec
shlb
mov
fiaddl
sub
jmp
jb
mov
sbb
daa
sbb
rcrl
std
dec
push
sbb
divb
add
rorl
inc
dec
daa
add
mov
daa
orb
cmp
jge
sub
js
adc
sbb
lock
std
inc
mov
subl
dec
shlb
cmp
iret
cmpsl
pop
and
test
dec
xchg
jo
sarb
outsb
out
fldenv
adc
insl
stc
cmp
loop
movsl
pop
das
std
test
pop
cmpsl
insb
ja
es
mov
adc
mov
cmp
mov
test
lahf
loope
mov
sahf
icebp
popa
jle
cli
push
dec
loop
sbbl
pop
pop
dec
xchg
xchg
cmp
add
rclb
loop
lods
in
sbb
pop
jae
out
fs
test
push
push
scas
fdivrs
loopne
pop
mov
std
adc
mov
inc
inc
cwtl
adcb
lods
lahf
inc
mov
dec
push
xor
scas
sbb
scas
and
push
lods
cmpsl
stc
stos
dec
rep
inc
les
int3
icebp
mov
cld
aaa
cmp
popa
test
lock
daa
sub
imul
repz
push
daa
xor
sub
rcrl
mov
pop
xchg
mov
lret
fcmovb
mov
call
pushf
xchg
lea
imul
ficoml
lods
mov
xlat
pop
shl
ja
das
repz
js
cmp
dec
and
add
sub
repz
cmc
sub
dec
outsb
lcall
jmp
push
roll
cmp
or
adc
loopne
xchg
rcrl
sbb
adc
xchg
mov
sti
test
jbe
bound
movsb
lds
arpl
sub
jle
pop
aas
sti
ljmp
xchg
loopne
arpl
test
fsubs
jne
xchg
js
or
cltd
stc
cmp
or
int3
mov
ficompl
push
ljmp
in
xchg
push
dec
or
xchg
js
iret
mov
mov
or
cmp
out
pop
sub
push
fucom
mov
mov
jbe
mov
jecxz
cld
cmpsb
test
mov
adc
aas
jmp
sub
gs
and
push
xchg
add
je
pop
lds
popl
test
add
pushf
mov
jge
mov
outsb
fucomi
movsb
xchg
enter
hlt
js
cmp
je
sbb
rcl
shl
adc
fidivl
into
daa
and
mov
lock
mov
pop
jge
or
das
idivb
ds
or
xchg
andb
sub
shlb
cmp
pop
adc
push
cmp
arpl
cmpsl
ja
mov
jns
lcall
add
ds
mov
mov
add
sub
dec
jmp
dec
adc
xchg
jp
add
push
inc
mov
ret
mov
nop
call
jmp
sbb
sub
pop
scas
fadds
add
xchg
icebp
in
scas
ds
daa
add
pop
popf
inc
icebp
mov
inc
pop
jmp
or
nop
push
push
dec
push
mov
shlb
int3
xchg
in
aaa
mov
cmp
pop
call
fsubp
or
in
out
movsb
insl
repz
sub
jno
or
inc
add
push
or
or
js
arpl
and
stos
idivb
push
push
dec
mov
addr16
dec
loope
push
stc
xchg
icebp
sub
jecxz
xorb
sub
sub
jnp
popf
mov
mov
out
decb
and
xchg
adc
movsb
ret
cmc
and
xlat
xor
in
push
push
or
or
push
pop
sti
pop
call
imul
mov
mov
cmc
lods
popa
and
insl
mov
fmull
push
pop
sti
incb
fsubs
mov
mov
and
push
cmp
aaa
movsl
xchg
mov
jbe
orl
mov
dec
loope
xchg
lods
xorl
xchg
cmpsb
pop
pusha
pusha
add
ss
pop
arpl
xchg
xor
aam
sub
push
adc
inc
dec
cmp
xchg
imul
xor
inc
dec
jno
mov
or
stos
sti
lock
push
ss
adc
shrl
push
or
sub
jle
inc
ret
sbb
pop
pop
call
shrl
data16
fs
push
movsb
insl
push
outsl
stos
push
sti
mov
mov
mov
in
ja
test
adcb
pop
outsb
adc
mov
int
or
push
lcall
xchg
iret
ret
jl
js
push
mov
jns
adc
lret
jg
stos
and
aam
hlt
inc
les
jge
mov
sub
and
pushf
lods
or
push
add
push
cmp
push
add
lea
repnz
push
push
pop
mov
adc
add
jmp
imul
xchg
adc
pop
in
mov
inc
add
test
dec
dec
jmp
clc
addl
sbbl
xor
mov
fisubrs
test
dec
sub
lret
into
cltd
insb
cmp
jl
ret
shll
stc
mov
inc
cmp
ffreep
mov
adc
aad
sbb
xchg
mov
popf
inc
arpl
rcll
adc
aas
insl
jp
add
xor
into
inc
loope
adc
sbb
dec
push
in
inc
dec
dec
adc
out
rorb
leave
pop
and
outsl
sti
jno
mov
dec
sub
or
dec
add
xchg
sti
push
mov
pop
gs
call
mov
repz
add
cmc
mov
gs
push
jge,pt
fcmovnbe
loopne
sub
push
push
getsec
lds
jg
fcomi
scas
mov
sarb
xchg
stc
in
aaa
mov
call
jmpw
pusha
and
xorl
sahf
xchg
test
sub
std
fisubl
cmp
add
enter
and
imul
sbb
addb
jmp
sub
cmc
addb
and
jae
insl
mov
cmp
pop
cmp
jl
faddl
loopne
fcoms
lods
fwait
mov
das
mov
xchg
jecxz
lods
aad
int3
xchg
and
mov
xchg
mov
stos
sbb
xchg
daa
iret
mov
loope,pt
xchg
fcompl
xor
mov
ljmp
push
mov
dec
nop
pushf
xor
lock
xchg
ds
push
cmpsl
repz
in
sub
inc
in
clc
mov
add
shlb
mov
rcrl
lock
in
iret
mov
pop
aam
adc
mov
dec
fmull
mov
or
test
sti
loop
add
xchg
inc
dec
jmp
insl
mov
sbb
fcmovnb
xchg
cmc
mov
xchg
fmull
addr16
sbbl
movsl
sub
in
inc
pusha
sahf
pop
mov
ljmp
out
or
loope
and
ljmp
cmp
movsb
sub
inc
adc
inc
pop
shll
lret
mov
xchg
mov
aad
jo
int3
sahf
fsts
xchg
fldt
mov
jno
mov
xchg
iret
or
aas
pop
xor
fsub
aas
popa
push
ja
sub
mov
arpl
ljmp
fisubrs
jae
pusha
xchg
mov
std
jnp
seto
shl
cld
cld
mov
sbb
in
repnz
xchg
fnstenv
pop
mov
add
popa
das
std
out
sarb
dec
ret
cld
lahf
std
mov
sub
call
inc
xchg
andl
mov
cmp
dec
add
stos
pop
stc
cmp
fistps
xchg
mov
ja
jle
xchg
pop
outsl
inc
jnp
addb
test
push
dec
jns
fwait
mov
stos
mov
sbb
jbe
repnz
push
iret
xchg
lods
jno
mov
mov
and
dec
dec
cli
adc
xchg
mov
cmpl
sbb
sahf
mov
insb
push
dec
mov
xor
mov
mov
arpl
out
movsb
fiaddl
cmpsl
dec
jle
mov
sbb
cmp
push
mov
sub
cmc
mov
in
call
sub
imul
mov
jecxz
mov
inc
inc
ljmp
and
or
fwait
lods
jg
adc
xchg
mov
inc
push
sub
xchg
andl
xchg
pop
fnstcw
stos
imull
xor
push
sub
int
pop
or
aad
pop
pop
xchg
mul
mov
js
ret
inc
movsl
aaa
aas
cltd
mov
repz
lds
inc
daa
mov
pop
jecxz
movsb
jg
push
lret
addr16
mov
lret
jl
outsl
mov
xchg
std
pop
outsb
push
and
aad
mov
add
mov
scas
pop
dec
sbb
aaa
or
mov
sub
mov
jnp
popf
es
cs
inc
cmp
and
mov
push
ret
dec
mov
push
adc
cmp
subb
dec
mov
jne
lret
cli
xor
divl
dec
pop
mov
xchg
mov
jbe
fwait
jmp
jo
imul
mov
pop
pop
jle
xor
and
dec
mull
or
pushl
je
out
in
lea
rcrb
mov
xor
pop
mov
xchg
aam
cmp
add
add
push
add
and
rorb
imul
dec
or
mov
xor
push
js
setno
sbb
push
adc
xchg
mov
rcrb
lods
fcoms
dec
xchg
call
pusha
mov
and
insb
sbb
cmpsl
push
in
push
pop
aas
fcoms
xor
inc
or
push
xor
mov
dec
paddb
adc
pop
mov
cmp
xor
add
dec
push
ret
or
push
mov
rorb
pop
adc
mov
push
cmc
lds
add
inc
push
ljmp
cmp
js
in
cmpsb
xchg
addl
gs
xchg
mov
and
sahf
lret
arpl
stos
popa
push
icebp
push
flds
cld
call
insb
and
inc
mov
movsl
jno
cmp
add
jg
xor
cmp
dec
es
mov
outsl
outsb
cld
pop
xchg
mov
mov
clc
inc
minps
and
push
jecxz
sbb
in
ds
xchg
mov
jno
mov
jnp
inc
roll
dec
clc
xchg
shll
fsubl
jno
mov
sbb
clc
or
jne
out
mov
cmpsl
cmp
push
aas
test
push
jbe
mov
lahf
xlat
add
pop
js
ss
sbb
fsubs
imul
mov
cwtl
std
arpl
jno
pusha
test
in
mov
or
fwait
xor
mov
inc
lods
jp
adc
shlb
xor
insb
out
mov
jnp
xchg
cmp
mov
ret
cmp
sub
icebp
adc
xchg
jo
fwait
getsec
aas
sti
jo
cmp
repnz
cmp
inc
inc
clc
shl
rcl
adc
notb
sub
xor
imul
cmp
loope
mov
xlat
jle
xor
add
fdivrp
sbb
cmpsl
adc
push
adc
adc
fcoml
popa
sub
or
cmc
sahf
movsb
sub
cmp
mov
clc
or
cltd
add
dec
add
test
dec
mov
outsl
fldcw
lock
insl
ficoms
push
mov
push
out
or
repz
cs
repz
xlat
shrl
lcall
lahf
imul
push
xor
add
ja
call
loopne
push
ds
stos
jbe
and
repnz
mov
or
push
insb
lcall
shl
loop
fidivrl
mov
lahf
xor
pop
ljmp
shrl
cmp
push
push
push
loopne
push
repz
fstpt
sub
xchg
sub
bound
std
sbb
pushl
push
cmpsl
out
xchg
pusha
or
cmpsb
lock
dec
les
fcompl
insb
mov
add
sub
mov
cmpsb
ja
imul
inc
int
push
mov
ret
mov
cltd
sbb
push
pop
jp
hlt
scas
push
jle
mov
xor
push
lds
dec
test
imul
int
adc
mov
test
push
mov
and
jo
and
cmp
mov
test
out
adc
cmp
mov
stos
fs
lret
jmp
loopne
or
jno
test
sbb
mov
aam
push
ds
in
push
outsl
iret
xchg
call
inc
cmp
js
es
lock
lret
lea
jne
xor
sbbl
or
setge
mov
mov
or
push
adc
push
nop
outsl
pop
sti
push
jl
sub
lret
inc
or
add
fadds
jmp
inc
add
cmp
sti
psraw
xor
add
out
or
lcall
push
mov
and
push
aad
mov
pop
jns
cli
xchg
sbb
dec
lahf
sbb
dec
jb
fdivr
mov
arpl
cmp
inc
das
cmp
scas
andl
push
xor
data16
pop
stos
dec
pop
lea
mov
pop
enter
dec
cld
je
mov
fisttpl
xor
addr16
mov
sbb
jecxz
ret
cmpsb
adc
pop
jle
mov
aas
xchg
pusha
loopne
and
hlt
xchg
inc
ret
inc
stc
pop
mov
sti
in
add
addr16
mov
mov
data16
data16
pop
dec
mov
mov
push
subb
orb
ror
sahf
xor
sub
inc
xchg
mov
in
pop
sbb
mov
inc
xchg
ret
std
loop
sub
xchg
dec
insb
lcall
adc
push
add
adc
adc
xor
in
in
cmc
call
push
pop
and
test
test
adc
in
ja
mov
push
mov
ds
test
sbb
push
out
xlat
xchg
and
sub
dec
pop
out
adc
sbb
cwtl
cmp
inc
pop
push
mov
fadds
inc
mov
pop
adc
nop
push
xor
adc
mov
gs
lds
adcl
xlat
into
inc
inc
pop
cmp
mov
mov
movsl
cmc
or
xchg
mov
data16
mov
mov
sbb
dec
jp
push
je
sub
cli
xor
dec
fsubrs
mov
sbb
fstpt
mov
pop
out
nop
insl
cli
mov
iret
sub
add
loope
xchg
add
ss
ret
movsb
add
cmp
mov
add
das
sbb
push
outsl
jg
sub
rolb
icebp
pop
dec
ljmp
mov
out
cmc
xchg
pop
scas
and
lds
aad
nop
mov
sub
and
fidivs
dec
mov
dec
push
adc
inc
movsl
sbb
test
or
or
imul
pop
fisttpll
add
out
and
lods
dec
or
jg
xchg
fidivrl
int3
or
sub
add
adc
mov
cwtl
xor
rclb
test
inc
je
dec
sbb
jp
cs
cltd
leave
mov
std
fst
push
loope
ficoml
nop
punpckldq
xchg
imul
loopne
out
jl
pop
adc
bound
ret
inc
cmp
cmp
cltd
cmpsl
sti
xchg
pop
xchg
push
cwtl
flds
adc
xchg
fstps
xlat
out
cmc
adc
inc
mov
mov
mov
faddl
add
xor
ret
out
and
hlt
mov
mov
pop
outsl
dec
jecxz
test
lahf
cmp
mov
mov
or
sub
push
repnz
jbe
leave
inc
mov
in
ss
stos
pop
inc
add
aas
add
dec
xchg
movsb
lretw
fldl
in
sub
lahf
cmp
arpl
sub
cmpsl
popf
and
movsb
das
or
int
loopne
leave
clc
aam
dec
cmpsl
mov
sub
xchg
rorl
icebp
test
mov
xchg
xchg
test
fstpt
push
mov
adc
sub
adc
sbb
push
out
inc
mov
push
ret
sub
mov
popf
movsl
push
int
out
cmp
sub
add
or
cmc
icebp
divl
pop
ja
popf
aad
xor
stos
push
jle
test
mov
add
inc
adc
arpl
xchg
sar
push
pop
mov
mov
pop
imul
hlt
sub
sbb
ffree
int
es
or
jbe
lock
cmpsb
aam
ret
mov
cltd
imul
aam
jp
or
xchg
push
xchg
push
fwait
and
imul
imul
mov
jnp
inc
jge
xor
push
xor
pop
mov
pusha
outsl
inc
insl
sub
shlb
xchg
lret
ret
push
dec
xchg
jo
and
adc
test
jne
xchg
sahf
adc
in
mov
xorl
imul
data16
repz
cwtl
stos
xchg
bnd
inc
inc
or
add
in
insl
popl
nop
dec
push
cmpsl
push
cmp
jae
pop
ret
cmp
mov
mov
inc
sub
xor
add
xor
lods
mov
in
or
adc
xor
in
aas
lea
pop
ds
out
mov
std
mov
dec
test
adc
jle
mov
enter
test
popa
sbb
pop
push
gs
pusha
clc
scas
mov
or
lds
sub
cltd
dec
pushf
mov
and
hlt
adc
push
iret
enter
sbb
push
and
scas
outsl
lods
pop
xor
out
push
xchg
iret
xchg
test
adcb
cmpsl
pusha
es
fistpl
mov
mov
or
lret
dec
out
int3
pop
iret
sbbl
add
ljmp
pop
clc
lahf
adc
sbb
and
and
or
outsb
push
repz
movsb
fcoml
shlb
adc
lods
fcomps
mov
add
push
inc
mov
in
adc
popf
mov
and
hlt
sbb
shrb
or
jmp
lahf
ret
in
out
or
adc
or
shrl
aaa
test
xor
ds
jnp
sahf
inc
adcb
lock
addr16
xchg
sbb
mov
sbb
push
cmp
sbbb
jl
mov
pop
iret
add
lods
sbb
mov
xor
xchg
movsb
mov
das
jo
inc
fwait
cmp
outsl
int3
push
mov
mov
jmp
push
mov
in
popl
pop
es
pop
xchg
adc
enter
loope
clc
push
lods
outsl
inc
mov
enter
jl
idiv
jle
jbe
scas
cmpsl
sub
push
fimuls
push
cmp
add
lcall
lret
stos
dec
mov
and
mov
dec
leave
dec
out
mov
sub
add
enter
and
or
mov
mov
pushf
out
arpl
femms
pop
dec
mov
mov
push
lret
rorb
lret
sahf
orb
movsb
pop
stos
cmp
xorl
xor
mov
cmp
sub
mov
jecxz
jg
lcall
cmpsb
outsl
fldenv
jb
xchg
or
pop
ficoml
xor
loope
sti
pop
inc
stos
in
xor
and
cli
sub
dec
lcall
and
xor
push
js
ljmp
inc
pop
loop
inc
xlat
ja
mov
dec
imul
xor
enter
loope
cli
daa
ret
cmpsl
mov
xor
hlt
adc
pop
in
adc
add
pop
leave
xor
mov
cmp
mov
lea
fstps
pop
leave
pop
lods
scas
and
ds
outsb
inc
lcall
orl
mov
daa
iret
adc
test
or
jbe
xor
mov
push
mov
add
lods
shr
add
push
or
stos
test
mov
clc
sub
fdivr
std
rclb
xor
cmp
xchg
fbld
rorl
inc
cmp
jae
mov
mov
cltd
mov
ds
mov
sahf
out
scas
cmp
adc
xchg
inc
repnz
scas
in
shll
je
enter
cmp
pusha
pop
mov
push
adc
or
add
or
repz
dec
es
les
or
int
jmp
cltd
psubsw
flds
jae
int
into
ss
xor
jle
jns
idivb
and
in
mov
or
cmp
or
jo
add
es
xor
pop
in
das
in
test
push
test
xchg
movsb
insl
rcl
fstpt
jne
xor
adc
xlat
push
out
mov
je
lret
jae
mov
out
loop
xor
or
pop
inc
aaa
adc
push
mov
movsl
mov
push
lods
fcoms
pop
shlb
addr16
fdiv
mov
rorl
sub
rorb
mov
xchg
jns
add
in
mov
adc
popf
daa
iret
scas
test
dec
add
push
jns
xor
imul
mov
push
out
jb
lods
inc
in
sub
aad
lret
jl
out
pop
sbb
dec
push
or
xchg
movl
xchg
les
pop
ficomps
mov
imul
sub
lods
das
fwait
pop
sbb
idivl
and
fmull
push
orb
mov
popa
adc
mov
pop
popf
orb
push
ss
pop
enter
mov
pop
or
cmpsl
into
cmp
xor
xor
pushf
mull
es
inc
mov
push
cmpsb
jl
pushf
hlt
lods
call
outsb
or
movsl
pop
and
mov
outsb
mov
pop
imul
pushf
or
ds
stc
lods
clc
cwtl
addr16
pop
push
adc
out
xchg
je
dec
movsb
lahf
lock
hlt
mov
insl
out
rol
sti
inc
ljmp
in
imul
sbb
push
dec
mov
rolb
insb
leave
xchg
jl
pusha
sub
paddusw
jl
frstpm(287
out
leave
push
cld
cmp
inc
iret
pop
jg
add
shl
xor
pop
fcom
add
pop
adc
insl
sub
jg
inc
divb
jb
cli
inc
push
add
xor
inc
pop
add
jge
scas
aaa
repz
mov
in
push
shll
cmpsl
jl
ja
pop
into
gs
je
lods
xchg
push
inc
cwtl
int
xor
push
mov
aaa
and
sub
sarl
mov
cmp
insb
lods
jae
iret
inc
jo
xlat
dec
dec
xchg
mov
incb
fimuls
insl
das
je
stos
in
in
sti
xchg
adc
or
int
ja
outsl
jne
cmp
bound
stos
mov
pop
icebp
xchg
sarl
adc
sub
movsb
push
leave
hlt
mov
and
push
jbe
ja
sti
inc
ss
testb
xchg
cmp
testl
adc
xchg
adc
mov
adc
dec
test
popl
jns
lcall
push
popf
pop
clc
xchg
adc
int
adc
rcl
mov
dec
or
inc
popa
sbb
mov
jbe
or
int3
sbb
cmp
push
pop
fs
outsl
insb
push
pushl
jmp
push
mov
cmc
movsb
aad
fnstenv
add
pop
xchg
cmpsb
fisttps
dec
jl
add
add
daa
stos
ljmp
popf
xor
push
xchg
fnstsw
pop
jo
and
dec
or
mov
mov
mov
mov
jmp
dec
aaa
mov
sub
and
xor
lahf
cmp
mov
cmp
cs
and
lods
mov
fs
mov
xchg
fadd
mov
jb
push
dec
mov
push
mov
testb
mov
xor
adc
xchg
outsl
scas
mov
sub
adc
mov
mov
and
mov
std
inc
or
mov
shlb
push
scas
xor
js
or
in
sbb
cmc
fisubrs
xor
js
gs
or
mov
dec
pop
in
sbb
and
push
pop
push
add
cmp
out
add
lcall
push
shlb
rep
jb
outsl
sti
xor
mov
in
dec
fistl
insl
or
add
mov
sarb
or
pop
pop
sbb
and
mov
dec
jp
xchg
jecxz
imul
dec
jg
ret
jmp
dec
lock
and
inc
out
jle
andl
xorb
out
sub
jg
xchg
call
lahf
sbb
in
mov
out
mov
loopne
movsl
pusha
mov
sti
outsl
repnz
les
insl
xchg
divl
sub
or
mov
jbe
add
das
cwtl
jne
test
inc
mov
xchg
dec
adc
das
hlt
add
das
dec
push
cmp
imul
ss
lcall
int3
jne
fdivrs
pop
ret
and
xchg
ljmp
les
aas
cmp
jge
mov
mov
adc
sbb
fwait
dec
jae
insl
inc
push
add
sub
bound
pop
sbb
cltd
sbb
stos
out
pop
rcrl
mov
mov
addr16
jle
gs
mov
cmp
clc
jg
jecxz
into
mov
stc
pushf
mov
add
push
xor
push
push
pushf
cmp
add
addr16
lcall
sub
aam
movsl
mov
add
mov
xor
mov
adc
divl
mov
and
sub
jle
jge
push
mov
mov
sbb
dec
mov
pop
ja
dec
xor
mull
push
jb
push
out
repz
sbb
cmpsl
lea
cwtl
xor
ret
cmove
xor
mov
jbe
jp
xchg
inc
add
xor
test
aam
mov
lcall
cmp
inc
lock
dec
mov
lock
je
ret
scas
push
xlat
cltd
out
jle
adc
push
fstl
xor
sbb
rol
push
sbb
sbb
arpl
mov
int3
lcall
jns
sbb
xchg
mov
push
mov
leave
sbb
xor
pop
jb
mov
lods
sbb
fmuls
and
mov
xchg
cmp
call
mov
je
adc
cmpsl
jo
or
mov
ljmp
mov
mov
rcrl
adc
fisttpll
and
xor
idivb
adc
icebp
push
inc
sub
xchg
jns
xor
pop
insb
and
insl
pop
jb
aas
cmp
xor
push
adc
fmull
stos
mov
xor
imul
mov
inc
sbb
ret
push
cmp
and
xlat
mov
aas
movsb
pop
pop
adc
or
inc
push
das
jg
out
mov
inc
push
lds
clc
sub
insl
adc
xchg
mov
ja
mov
push
sbb
into
mov
ja
inc
xchg
push
in
jno
fstpt
sar
sub
push
pop
aad
imul
lret
sahf
sbb
test
inc
das
fneni(8087
orb
cli
ret
daa
mov
icebp
loopne
or
lret
out
and
jno
cmpb
and
mov
dec
outsb
sahf
xchg
dec
jb
lret
sub
outsl
int
mov
mov
pop
mov
or
movsl
loopne
xlat
rorb
jle
mov
push
cmpsl
jg
push
fucom
xor
push
and
sub
gs
sub
fistps
shrb
or
out
sub
add
sbb
pop
pop
fsubrs
loop
es
outsl
xor
std
cmc
add
inc
sub
pop
jmp
pop
jo
sbb
aaa
mov
push
dec
mov
ljmp
adc
subb
mov
push
xchg
dec
dec
mov
push
lds
mov
push
fstp
mov
stos
sbb
xor
or
fs
xchg
das
ret
mov
inc
mov
jge
pushw
sub
sub
les
rorl
mov
xor
mov
xor
xchg
test
fists
adc
jg
shlb
mov
outsl
aam
jecxz
mov
std
mov
cmp
aas
insb
ffree
jg
mov
loop
mov
inc
imul
int3
mul
xchg
pop
cli
jo
xor
adc
cmp
mov
jb
scas
cltd
insb
lahf
addr16
mov
mov
jecxz
int
mov
das
lahf
mov
push
popa
cmp
mov
les
hlt
and
push
inc
loope
push
pop
push
clc
dec
sbb
in
test
mov
push
adc
mov
test
jae
mov
lret
call
loopne
ret
pop
jmp
dec
add
popa
mov
stos
daa
cs
es
inc
inc
mov
lods
mov
push
mul
les
mov
sbb
cmp
arpl
mov
aad
pop
stos
shll
outsb
jo
cwtl
or
pusha
in
adc
test
mov
aas
adc
pop
or
adc
js
das
or
nop
pop
addr16
sub
xchg
sbb
ja
push
adc
shlb
mov
popf
mov
fsubrs
outsb
ljmp
sbb
pop
sbb
scas
adc
xlat
dec
ss
divl
mov
pop
rorb
xchg
notb
enter
leave
nop
pop
out
mov
test
jg
jmp
mov
ficoms
out
jmp
dec
insb
mov
jnp
pop
popf
loop
fs
push
popa
xchg
sbb
arpl
rorl
data16
mov
ret
or
aas
sub
xchg
xor
mov
mov
or
test
dec
mov
ja
and
cmp
test
mov
mov
or
mov
fcomps
xchg
es
lret
mov
push
nop
mov
jb
or
push
and
inc
in
faddl
mov
leave
sbb
mov
pop
fidivl
js
pop
jp
fsubrs
dec
dec
ja
mov
mov
jp
jmp
aam
iret
xor
ret
jg
jle
fcmovnb
xchg
shll
in
in
sbb
mov
xor
imul
popa
clc
adc
jmp
or
stc
push
scas
loope
pop
mov
mov
or
sbb
mov
cmpsl
mov
pop
jae
mov
and
test
shl
mul
loope
mov
ss
nop
pop
mov
addl
add
sub
push
cmpsb
pushf
sub
jge
or
shrl
int3
imull
in
out
imul
mov
cwtl
fs
lcall
mov
pop
fcomp
sti
stos
test
mov
pop
adc
fldt
cmpsl
push
dec
jo
nop
test
cmp
test
js
jnp
adc
jno
push
or
imul
jl
jbe
xor
and
mov
or
dec
std
add
inc
dec
adc
push
cmpsb
jae
xor
sub
mov
cmp
rolb
xor
mov
jl
call
cs
js
cwtl
mov
aas
mov
xchg
out
xchg
ret
test
xor
stc
ss
ss
mov
jp
push
call
or
mov
sbb
adc
add
push
inc
je
aad
mov
push
mov
int3
call
xor
or
stc
clc
adc
es
mov
pusha
out
push
add
rcrl
push
mov
push
pop
idivb
ficomps
fsubl
xchg
jb
jmp
and
data16
or
xchg
pop
dec
loopne
cmc
popa
mov
inc
mov
adc
insl
cli
ss
loopne
outsb
test
jmp
cmp
dec
fists
fstl
lret
pop
ret
pop
cmp
cmc
mov
hlt
out
mov
mov
mov
data16
cli
fstpt
push
adc
fcomps
repz
stc
xchg
jae
push
out
mov
pop
es
lock
cmpsb
mov
mov
jnp
popa
and
sub
mov
movl
xchg
xchg
adc
rorb
jl
stc
shrb
mov
dec
dec
rorb
sbb
inc
jecxz
xchg
xor
call
mov
loopne
jbe
imul
pop
push
push
das
sbb
and
ffree
pop
or
bound
call
xchg
cld
sbb
lds
push
dec
clc
xchg
in
aaa
add
repnz
stc
mov
jne
push
cmc
loopne
scas
cli
lret
rcll
mov
cmp
and
out
jle
mov
incl
ret
aaa
xchg
adc
test
xor
test
dec
in
jbe
fldl
scas
repz
pusha
add
loope
or
movsb
sub
negb
xlat
lods
dec
mov
fsubs
cwtl
cmp
pop
pop
add
pop
mov
pop
dec
mov
mov
sarl
adc
jo
push
pop
mov
pop
sbb
jne
fstpt
cmc
lret
dec
stc
mov
loopne
mov
stos
xor
nop
cmp
xchg
mov
insl
push
push
cmp
or
push
leave
dec
in
lds
int3
inc
push
cld
mov
mov
pop
jns
pop
sbb
leave
dec
xor
enter
mov
push
and
or
mov
or
fldenv
xlat
mov
and
pop
pop
fwait
repnz
xor
sub
sti
push
pushf
mov
jge
test
cltd
mov
sub
and
repnz
sarl
push
jne
sub
mov
xchg
popa
daa
cmp
and
cltd
dec
loopne
cwtl
cld
aam
cmp
data16
dec
mov
aaa
ret
int3
ja
cmp
jbe
divb
das
ficoms
lock
sub
sub
lcall
or
cmpb
pop
dec
fucomip
rolb
movsl
fs
sbb
lods
movsb
shlb
sbb
popa
test
pop
popf
es
aam
add
sbb
cmp
inc
add
jle
popa
lret
aaa
sub
inc
or
lcall
cmpsl
add
test
scas
leave
mov
out
arpl
mov
cmp
push
dec
sbb
pop
push
lret
adc
dec
sub
jl
loopne
das
subb
push
jns
pop
js
jmp
in
movsb
push
jg
aas
xor
test
cmp
pop
iret
add
sub
pop
jl
sub
insl
fldl
pop
jl
add
movsb
lret
push
adc
cmp
cmp
cld
jecxz
mov
mov
faddl
mov
mov
es
je
out
inc
mov
daa
fcmovnb
jle
stc
in
add
dec
movsb
jb
and
jns
jo
cltd
lock
mull
ljmp
enter
repnz
popf
sti
nop
push
mov
out
mov
inc
push
stos
sub
fisubs
mov
xor
add
ret
in
push
pop
add
imul
add
mov
jne
movsb
mov
adc
dec
insb
cs
mov
sbb
mov
insl
pop
movsb
push
outsl
gs
mov
outsb
inc
push
mov
in
cld
dec
mov
sbb
xor
mov
or
sbb
push
out
icebp
js
dec
into
outsl
aas
and
inc
sahf
sbb
stc
and
inc
adc
jnp
dec
lret
aad
rolb
pop
mov
mov
shlb
sarb
fidivrl
or
dec
inc
pop
lahf
pop
xlat
outsl
mov
push
mov
andb
sub
cmp
jb
dec
mov
shl
cmc
inc
or
leave
adc
mov
mov
popf
fldcw
and
jb
fidivrl
mov
int
out
pop
mov
xchg
mov
les
in
into
arpl
into
out
push
lret
loop,pn
mov
arpl
pop
fiaddl
dec
cmpsl
cmp
jbe
fcos
insb
out
out
cld
push
arpl
and
sbb
cwtl
mov
stos
aaa
loop
sbb
lahf
loopne
pop
lret
jne
mov
repnz
icebp
mov
mov
loope
fcoml
cmp
roll
out
mov
sub
lcall
dec
xor
arpl
mov
cmp
jno
add
in
ret
pop
inc
popf
loopne
inc
jbe
mov
aad
cs
js
outsl
push
imulb
sbb
inc
mov
shl
pop
or
mov
aad
dec
dec
xlat
and
das
addl
push
pop
pop
sbb
cltd
ss
outsl
jbe
lret
adc
sub
popf
cltd
call
dec
fmull
jae
mov
xor
lods
test
mov
adc
mov
cmpsl
mov
or
inc
adc
mov
and
nop
pop
in
pushf
adcl
js
test
jo
add
and
jae
cmpsb
xor
jno
in
cli
out
lahf
sub
mov
rcrb
and
decb
adc
pop
push
mov
xor
cmp
repz
push
sti
fdivr
mov
jae
sbb
loope
incb
pop
and
mov
jmp
cwtl
xorl
xchg
aam
data16
xor
loope
xor
test
aam
xchg
ss
mov
pop
lock
lahf
fcoms
mov
add
arpl
push
fmull
dec
mov
xor
xorb
mov
daa
inc
js
jmp
les
cmp
inc
in
cmp
sbb
inc
out
xchg
adc
nop
popa
push
mov
scas
icebp
in
mov
rorb
aad
and
add
adc
outsl
inc
push
mov
push
push
jp
cs
mov
dec
ljmp
push
cld
add
dec
dec
out
pop
or
mov
adc
mov
es
es
xchg
adc
mov
fdivrs
mov
mov
pop
push
imul
sahf
pop
cmp
or
lcall
fistl
mov
sub
sti
jmp
mov
xchg
fsubs
rorl
hlt
add
in
xor
push
sub
std
fwait
cmp
ret
ficomps
iret
pop
les
or
xchg
ljmp
iret
sub
lods
sbb
inc
push
out
test
stos
mov
inc
inc
cs
arpl
lahf
sub
ja
mov
das
dec
sub
dec
xchg
out
arpl
or
inc
out
leave
into
dec
mov
push
daa
lock
pop
adc
sbb
dec
sub
icebp
ret
mov
stc
cltd
add
jg
mov
xor
xor
imul
and
sti
cwtl
lock
adcb
gs
xchg
test
pop
sbb
add
mull
mov
stos
mov
pop
jo
sbb
test
mov
mov
daa
xor
shlb
rep
or
mov
enter
cmp
clc
push
and
fs
push
scas
sbb
faddl
sbb
mov
jg
sbb
dec
leave
addr16
sahf
xor
mov
iret
mov
push
bnd
into
and
fwait
lea
icebp
js
in
ss
icebp
cmpl
sub
mov
sbb
int
aaa
nop
dec
fnstenv
jne
sbb
xor
xchg
and
scas
loopne
and
and
push
jmp
sbb
mov
aad
lock
mov
add
mov
imul
jge
andl
inc
lahf
dec
hlt
jg
lret
dec
aas
pop
pop
push
insb
xor
dec
movsl
mov
xchg
xor
ja
out
sub
or
jl
sbb
inc
xchg
aad
lods
cwtl
hlt
nop
add
lret
sbb
jb
jb
test
test
sti
xor
jp
and
sbb
sub
rcll
push
and
sbbl
xor
sbb
js
or
das
mov
pop
add
ret
pop
stos
mov
adc
dec
pusha
mov
int3
jnp
jb
dec
cmp
lods
push
add
mov
aas
clc
mov
sbb
jne
xchg
xlat
sub
ja
xchg
pushf
bnd
and
xor
ja
and
test
pop
unpcklps
or
stc
jnp
popa
imul
hlt
cmp
scas
or
imul
mov
jp
icebp
test
ja
adc
dec
mov
lahf
cltd
and
fidivs
mov
adc
repz
dec
pop
out
xor
sub
xlat
push
sbb
mov
aad
cmp
or
orl
sub
mull
cltd
insl
mov
jp
or
add
xor
xor
adc
fs
xchg
rolb
aam
dec
adc
out
mov
leave
insl
jo
outsl
sbb
cmc
xor
aam
rorl
push
mov
loop
pop
push
lcall
jp
add
inc
sub
call
jo
xchg
xchg
and
adc
leave
loope
cltd
rorl
dec
int
sub
mov
mov
pop
sbb
stos
mov
scas
ja
out
stc
clc
or
jg
mov
inc
inc
adc
pop
xchg
xor
jnp
not
hlt
xchg
dec
stos
ja
xor
test
or
pop
repz
call
pop
pop
cmp
inc
iret
stos
movsb
inc
add
push
dec
mov
aas
jno
int3
in
mov
add
cmc
push
xchg
mov
bound
push
andl
jecxz
stos
imul
enter
pop
mov
sbb
push
ljmp
dec
jne
cmp
stos
or
fnsave
bound
adc
sub
inc
repnz
in
shll
xchg
outsb
sbb
std
sub
xor
mov
and
push
mov
sarl
lret
mov
jnp
inc
sbb
jb
push
ret
mov
cmp
jnp
pop
dec
pop
icebp
adc
clc
ucomiss
jmp
lsl
stos
and
pop
mov
xor
xor
sub
call
paddusw
sbb
imul
mov
sbb
cmp
sarb
aas
iret
inc
cld
mov
add
jbe
jmp
test
and
push
scas
inc
aaa
xor
mov
call
sbb
push
les
out
push
loopne
insl
lret
xor
push
lret
mov
sub
jecxz
in
dec
dec
cmp
push
sbb
xor
dec
xchg
pop
sti
add
imul
in
pop
inc
xlat
xor
mov
mov
rcl
es
jg
insl
pop
in
js
dec
data16
mov
clc
mov
cli
dec
pop
mov
or
mov
stos
push
pop
pop
mov
or
inc
cmp
es
jmp
mov
ret
push
mov
ss
aas
addps
nop
lock
icebp
jbe
sub
clc
pop
adc
dec
lahf
popa
sub
push
stos
gs
mov
mov
push
xor
imul
mov
loopne
xor
in
test
jb
jno
fimull
orb
pop
scas
sub
into
mov
mov
jns
scas
mov
imul
push
mov
shll
cmp
or
out
sbb
dec
adc
inc
sub
mov
cmc
add
fistpll
or
bound
sbb
arpl
cmp
xchg
loopne
into
mov
inc
pop
sbb
stos
push
jecxz
sti
jbe
xchg
mov
lods
rclb
push
icebp
test
fisttpll
lods
mov
sub
out
bound
jle
subl
lds
mov
and
push
jle
repz
inc
push
fldl
mov
xor
mov
pop
leave
test
mov
mov
sub
insb
mov
and
mov
movsb
dec
ja
mov
adc
jge
aaa
inc
cmp
ljmp
jmp
mov
dec
mov
jl
andl
loopne
in
mov
sarb
and
jbe
xchg
dec
sbb
stc
cmpsl
inc
jo
mov
jbe
jle
out
mov
pop
imull
addr16
out
mov
cltd
push
and
mov
push
lret
mov
daa
in
subl
addr16
sbb
push
xchg
shll
mov
loopne
cwtl
mov
lret
mov
test
mov
ljmp
in
dec
rclb
addr16
mulb
lods
mov
mov
jb
mov
sub
cmp
repnz
scas
loop
fldcw
or
mov
sbb
push
testb
ror
cmp
mov
movsb
sub
and
lds
xchg
lods
call
sub
dec
iret
sub
and
and
add
test
push
push
jae
leave
mov
cmp
and
aad
das
mov
push
vmwrite
leave
add
lock
adc
decl
hlt
mov
jae
mov
daa
mov
xor
fsub
enter
lret
mov
scas
jo
push
sub
or
xor
xor
jge
push
push
lcall
popf
outsb
repz
pop
dec
and
fistpll
shr
xchg
movsl
pop
mov
lahf
push
rcr
mov
rcrl
cmp
jl
imul
dec
test
add
sbb
cmp
cld
dec
sub
fwait
mov
lea
sub
dec
lahf
xchg
or
jbe
sbb
stc
mov
pop
aad
sub
jmp
int3
aas
push
mov
pop
rclb
pop
insl
add
sarb
xor
ljmp
sbb
push
adc
cltd
xchg
scas
loop
adc
aas
xchg
hlt
xchg
test
lahf
dec
xor
push
fstpl
mov
add
mov
xor
imul
xor
in
mov
pop
mov
test
imull
addr16
inc
imul
aas
mov
addr16
aam
jmp
std
movsl
lock
mov
fisubrs
push
lock
aam
add
pop
mov
shlb
mov
divb
ffree
cmp
or
lahf
adc
jecxz
inc
xor
subl
mov
mov
in
call
insb
in
cmp
and
mov
rcl
fucomp
aas
fs
call
jo
test
ss
push
ret
sbbb
or
or
or
scas
dec
add
mov
aas
outsb
cmpsl
cltd
lods
sub
mov
lock
pop
sarb
xchg
outsb
or
adc
sub
pop
inc
fxch
xor
add
out
rorl
xchg
cs
ss
adc
lods
sub
jnp
js
adcb
cmp
jae
ja
inc
scas
push
out
sbb
fildll
inc
dec
xchg
add
xor
push
cmp
pop
stos
mov
rorb
leave
or
cltd
ret
bound
xchg
push
repnz
lea
inc
pop
out
mov
jecxz
daa
nop
lods
push
sbb
leave
sbb
daa
xchg
sub
fdivl
and
mov
lods
mov
push
pop
loopne
sbb
mov
push
popa
add
pop
pop
cs
clc
xchg
bound
bound
shll
lcall
cmp
rcrl
scas
out
xchg
rorl
stos
aas
and
js
pop
lea
in
ret
mov
in
sbb
das
cld
mov
fucomip
mov
int
lahf
xor
in
mov
aaa
sahf
jbe
lock
adc
sbb
lock
in
jb
jmp
sahf
js
lret
mov
std
xchg
sbb
dec
push
and
cmp
fdivp
lcall
jnp
jo
fs
cmp
cwtl
out
pop
cmp
and
and
mov
push
add
cmp
inc
mov
inc
js
cmpsl
jp
aad
arpl
cmc
pop
pop
sbb
cltd
inc
pop
and
mov
mov
jo
cmpsb
pop
cli
xor
lods
mov
cmp
stos
mov
pop
inc
and
xor
sarb
dec
dec
jb
aas
test
jp
sbb
fucomi
rcrl
rolb
ds
popf
inc
out
lods
sub
lods
add
sarb
es
push
push
enter
popa
jns
and
xchg
lock
push
lds
or
pop
out
ds
or
pop
jl
pop
movsl
sbbl
mov
ja
stos
lahf
add
enter
add
in
bound
mov
dec
sub
imul
fsub
out
push
xor
xor
decb
sbb
out
pusha
xor
mov
xchg
dec
dec
cmc
fnstenv
inc
daa
mov
or
hlt
scas
cmp
pop
test
jge
ja
dec
and
in
add
imul
mov
mov
fsubr
je
inc
in
lret
int3
outsl
jmp
push
jo
cwtl
xlat
stos
mov
mov
xchg
in
scas
adcb
push
imul
sbb
add
mov
mov
cmp
stos
fstps
test
mov
pushf
jno
sbb
push
push
jae
leave
sbb
fisttps
cwtl
inc
es
loopne
jmp
mov
or
cltd
xchg
jge
hlt
push
push
imul
mov
test
dec
cmp
inc
out
sub
add
jge
js
ds
test
push
stos
xlat
daa
or
loope
imul
jg
fsubrp
incb
xchg
int
xchg
aas
sub
sub
pop
sbb
lods
divl
adc
test
sti
arpl
lahf
push
mov
mov
and
arpl
pop
sti
xchg
std
sub
repz
mov
mov
xor
sub
ljmp
inc
adc
nop
in
out
mov
dec
loope
std
cmp
es
mov
xchg
xchg
in
popf
outsb
jle
xor
dec
mov
jp
sti
sbb
loop
aad
jo
movsb
inc
pop
mov
push
inc
sahf
sbb
pop
dec
jecxz
xchg
xchg
pop
rorb
inc
sarb
jge
imul
mov
gs
inc
xchg
jecxz
and
lock
inc
jle
pop
ds
pop
and
jne
adc
ds
gs
aam
mov
pop
dec
outsb
inc
mov
lret
sbb
in
or
cli
mov
xchg
xlat
sbb
mov
aaa
jbe
daa
push
add
add
addl
xchg
mov
mov
inc
cmp
pushf
ret
cmp
xchg
and
sbb
sub
aad
lods
cli
add
mov
pop
std
fbstp
sub
int3
inc
mov
jae
xchg
pop
fisttps
jno
in
add
pusha
iret
cmp
push
pop
dec
sub
sbb
cmp
pushf
mov
jecxz
xor
clc
loope
inc
cmp
and
icebp
bound
out
mov
jae
addb
shll
jbe
ss
mov
dec
push
lock
and
je
stos
sub
test
jae
jae
cmp
int
cmp
aaa
xor
mov
es
add
push
and
test
rolb
mov
push
outsl
xor
cmp
xchg
xlat
ja
jle
and
dec
mov
mov
xlat
ds
sbb
test
in
xchg
dec
xlat
nop
sbb
in
nop
in
lcall
popa
jp
mov
stos
mov
roll
add
mov
and
xchg
out
fdivrs
xchg
pop
out
into
push
sbb
inc
mov
scas
and
enter
sub
pop
xchg
dec
insl
dec
notb
mov
outsb
push
add
or
andb
jmp
sub
sub
cmp
sbb
jb
sahf
imul
or
cwtl
popl
jl
and
xlat
pop
test
dec
sahf
test
push
xor
fistpl
push
inc
cld
jge
jl
mov
mov
push
xorl
adc
pop
add
int3
mov
in
ss
push
mov
xchg
and
rol
ret
cmp
push
ret
scas
sub
imul
cwtl
repnz
and
xchg
xchg
adc
or
loopne
inc
cs
loop
or
lret
pop
mulb
mov
jb
add
in
mov
hlt
xor
je
mov
adc
mov
imul
not
fildl
leave
sbb
std
addb
dec
xchg
out
leave
mov
icebp
mov
jnp
daa
lcall
xor
enter
xchg
cmp
pusha
fnstenv
dec
inc
aam
outsl
push
xlat
test
cmp
sub
mov
jbe
mov
sbb
addr16
stc
mov
out
cmpb
mov
cltd
clc
test
and
adc
inc
mov
jmp
push
mov
in
pusha
clc
popl
sbb
mov
jmp
test
or
cli
and
orl
dec
pushf
iret
aad
mov
leave
fs
and
xchg
bnd
mov
nop
push
cmp
and
addr16
sbb
push
inc
jmp
pop
int3
push
test
jae
les
xor
mov
in
or
inc
push
push
popf
push
mov
imul
out
sub
test
addl
add
mov
or
pop
sbb
nop
test
inc
dec
cwtl
add
push
fcoml
in
cmpsb
sub
pop
mov
cmp
adc
mov
jmp
inc
ds
stos
pop
outsl
repz
aam
or
pop
jns
mov
lahf
je
and
leave
fdivp
ljmp
movsb
nop
lods
mov
cltd
pusha
jns
push
idivb
push
stos
mov
mov
pop
jae
hlt
jg
xchg
cmc
lds
mov
add
jb
ret
xchg
je
ljmp
pop
in
inc
sbb
ljmp
or
negl
dec
movsl
popa
inc
jb
push
daa
sub
mov
ret
pop
or
movsl
mov
inc
ret
data16
out
pop
xchg
loopne
mov
ret
ja
lods
push
scas
and
and
out
lods
leave
add
jns
mov
bound
cmp
mov
add
sbb
mov
mov
xor
jle
push
js
push
jl
lahf
dec
jge
inc
mov
and
call
adc
mov
icebp
fsubr
shrl
and
adc
ffree
in
adc
pop
dec
subl
iret
ds
out
xchg
mov
pop
repnz
mov
stc
ljmp
daa
sbb
sbb
or
or
outsb
mov
cli
xor
mov
cmc
lea
pop
es
xlat
cmp
or
mov
push
scas
cmp
aam
pop
lods
cmp
sub
xchg
or
mov
rorl
into
lds
aaa
or
cmp
jnp
jecxz
cwtl
jmp
daa
cmp
mov
lahf
leave
iret
xchg
ret
dec
or
ret
cmpsb
test
push
aad
jg
imulb
push
hlt
dec
int
pop
jmp
xchg
lret
imul
mov
mulb
mov
scas
or
into
inc
cmp
xor
cmp
jnp
mov
dec
cmpsb
dec
je
repnz
xchg
or
test
pop
mov
and
pusha
sub
mov
ret
pop
sub
outsb
stos
add
cli
rcrb
movsb
sub
rcrb
inc
pop
fcmovbe
jge
jae
inc
mov
mov
mov
or
cmp
hlt
in
and
xchg
and
adcl
nop
mov
pop
lahf
cltd
or
push
in
cmpsb
inc
xchg
mov
sub
push
dec
mov
in
mov
cli
push
icebp
add
rcll
hlt
sbb
jecxz
jne
sbb
imul
fs
call
dec
jne
pop
sbbb
mov
cmp
xor
ja
cwtl
hlt
and
cwtl
mov
mov
xchg
addl
aad
sbb
pop
push
sarb
scas
mov
xor
pushf
roll
in
push
hlt
repnz
inc
popl
call
jae
xchg
adc
loopne
pop
repz
push
sub
pop
cmp
int
inc
cmp
in
iret
mov
mov
xor
divb
pop
mov
xchg
mov
jmp
mov
dec
les
pminub
push
mov
jae
sbb
add
push
out
mulb
jns
pop
sbbl
inc
icebp
scas
pop
cmp
cmp
jl
das
insb
jo
aaa
fucomi
pop
or
xor
dec
xchg
push
loop
repnz
into
imul
addr16
inc
movsl
movsl
call
lods
mov
movsb
or
fnsave
mov
jno
push
pop
or
xor
cmpsl
out
sbb
push
pop
je
mov
fs
in
out
das
outsb
mov
aam
dec
push
add
push
ficomps
xchg
fisttps
xor
je
mov
cltd
fisttpl
jno
out
and
jo
pop
fisubrs
test
push
push
cmp
mov
inc
or
inc
sub
jnp
dec
insb
mov
in
les
ds
mov
jge
mov
pop
jecxz
inc
or
cwtl
dec
push
jecxz
mov
xchg
nop
sbb
cmp
push
ja
cmp
push
popa
test
dec
aam
mov
push
xor
mov
lea
mov
rcr
cmp
ja
lea
ret
push
cmp
adc
xchg
fcmovnu
xchg
adc
ret
inc
jle
lea
adc
inc
xor
aam
adc
inc
push
shlb
xlat
pop
cltd
xlat
lret
scas
dec
dec
mov
jmp
push
push
inc
mov
sti
mov
mov
aam
loope
sub
es
push
sub
adc
xor
or
mov
inc
shll
dec
mov
stos
and
aam
aam
arpl
not
cmp
or
fisubs
mov
push
nop
stos
in
aad
pusha
andl
leave
or
movsb
data16
icebp
sbb
addr16
xlat
ljmp
jo
mov
add
sub
ss
mov
decb
das
mov
rorb
addr16
ja
gs
repnz
ds
sbb
imul
mov
mov
and
push
inc
test
adc
push
mov
dec
call
cltd
inc
mov
xlat
or
and
inc
cmp
push
add
sbb
adc
xchg
push
or
lods
or
push
or
cmp
test
lods
inc
xor
inc
out
aad
xchg
out
xchg
outsl
sti
cld
lea
orl
out
aad
scas
popf
xchg
les
pop
xlat
inc
rorl
jecxz
mov
cbtw
sub
mov
push
push
mov
lods
push
sbb
loopne
into
fs
sti
repnz
outsl
sahf
jnp
add
xchg
or
sbb
mov
mov
jecxz
call
sti
cmpsb
mov
cmp
jmp
adc
out
mov
repz
mov
repz
fbld
orl
xchg
mov
push
add
popl
push
mov
adc
fnstenv
push
or
xchg
cmp
out
fists
loope
aam
pushf
daa
shrl
lcall
daa
addb
cmpl
sbb
mov
scas
ret
mov
xor
adc
fdivl
cmc
mov
popf
adc
popf
shlb
add
js
inc
movsb
in
insb
dec
push
arpl
mov
ret
ljmp
jno
xor
jae
dec
mov
push
dec
lods
idivl
dec
lock
icebp
mov
mov
lea
subb
ss
imul
les
divl
push
push
int3
xchg
adc
incl
mov
push
xor
or
mov
xchg
mov
loop
aad
inc
imul
imul
divb
ret
and
lret
jns
jnp
jne
pushf
jge
test
push
dec
fucomip
mov
jne
ret
xorl
vandps
test
dec
xchg
cmp
shrb
jns
addr16
jg
sbb
cli
push
repnz
pop
aam
adc
data16
adc
aam
and
iret
dec
sub
mov
sahf
ret
push
push
popf
add
jp
es
jo
pop
push
popf
inc
add
cmc
es
sbb
arpl
mov
xor
cltd
push
jge
sub
iret
adc
cmp
repnz
outsb
mov
enter
add
jno
lret
inc
mov
fistl
xorl
movsl
sub
out
fwait
jnp
mov
or
or
push
lods
mov
mul
jecxz
int
das
fs
and
scas
inc
fimuls
ss
out
mov
ljmp
ret
insl
add
adc
fisubrl
xorb
xlat
inc
mov
add
ds
sbb
inc
pop
sbb
mov
push
sub
mov
test
lcall
repz
cli
inc
loopne
push
mov
call
fiaddl
push
pop
xor
outsb
nop
lds
lods
stos
sbb
outsb
jae
and
daa
pop
add
addr16
mov
xor
push
shll
dec
dec
lods
xor
rcr
cltd
mov
xchg
cltd
lret
dec
and
daa
adc
jne
push
rorb
subb
in
push
movsl
movsl
int3
push
ret
jo
and
dec
xor
leave
mov
in
pop
mov
ja
fnstenv
leave
xor
in
mov
stc
push
jecxz
cmpl
mov
xchg
ror
mov
outsl
jg
iret
or
jecxz
add
pop
xchg
fdivl
jne
jl
es
stos
ljmp
jo
sbb
mov
push
and
sbb
cmpsl
out
clc
push
roll
fsts
xor
jp
adc
enter
std
push
inc
imul
aas
mov
lea
aaa
ret
fimuls
pop
or
add
jmp
int
inc
fstpt
cmc
loopne
fs
out
cmp
dec
push
repnz
xor
mov
dec
and
adc
sbb
and
mov
jl
adc
rcrb
lahf
aam
and
fsub
xchg
mov
lcall
xor
stc
shrl
divb
repnz
fdivl
jb
xor
loop
xchg
and
outsl
test
xchg
subb
les
push
aad
inc
jg
aaa
icebp
mov
ja
sub
add
lea
ds
shlb
push
pop
xchg
arpl
out
popf
jno
shlb
movsl
mov
add
jl
mov
jg
adc
pop
dec
add
pop
push
sbb
repnz
lds
mov
dec
pop
jmp
call
mov
push
outsl
xchg
sub
icebp
test
into
shll
and
pop
jbe
outsb
into
stos
lahf
or
cmpsb
in
xor
inc
xor
mov
cmpsb
jae
xchg
pop
mov
popa
sub
inc
rcrb
fists
movups
jbe
fldcw
ret
dec
loopne
or
insl
xor
mov
sahf
shll
fstl
daa
mov
cmpsb
rorl
stos
or
mov
dec
notb
cmp
jb
fisttps
fwait
in
jmp
test
push
push
ljmp
mov
dec
out
in
ret
inc
xchg
xchg
subb
dec
loopne
push
mov
movsl
xor
int
in
lret
mov
push
cmp
dec
adc
iret
outsl
pop
test
inc
and
jo
cmp
aas
sbb
push
adc
dec
cmp
dec
mov
es
lea
cmp
cmp
sbb
or
cs
cmp
inc
mov
jnp
incl
mov
lcall
mov
dec
push
hlt
pop
mov
add
inc
out
add
sub
ret
daa
lock
dec
insb
push
fwait
int3
out
dec
lahf
stos
xchg
arpl
or
test
test
push
add
mov
dec
das
and
inc
push
pop
fiaddl
movsl
xchg
ret
cmp
lods
movsb
gs
push
icebp
and
inc
sub
push
mov
cmpsl
test
es
fisubl
xlat
jge
aaa
arpl
clc
cmp
sti
cmp
and
fcmove
in
pop
loopne
push
sub
fucompp
push
xor
pop
jo
jo
push
push
inc
xchg
sbb
outsl
dec
and
adc
lret
stc
dec
cs
adc
call
int
daa
and
sub
xor
add
push
sbb
dec
inc
sub
js
leave
adc
xchg
mov
inc
pop
or
ret
xchg
sub
aad
mov
jmp
scas
out
insl
iret
aam
and
mov
adc
sub
lods
nop
call
adc
loopne
xchg
cli
shlb
push
ret
subb
dec
int
xchg
incb
negb
testb
sbb
mov
jns
icebp
xor
hlt
ljmp
imul
fsubl
loope
stos
test
inc
mov
testb
xchg
xor
cmp
dec
adc
je
lock
mov
inc
hlt
je
or
fldenv
dec
lods
and
jb
test
test
fcoml
cmp
mov
sub
rcll
jbe
xchg
sahf
ds
and
push
sub
ljmp
addr16
std
sahf
or
movsl
repz
mov
cld
cmp
in
les
sbb
repz
bound
push
fnstenv
mov
std
mov
mov
xor
pushf
dec
jnp
xor
pop
or
hlt
inc
inc
cmpl
ret
int
aas
jbe
movsb
sbb
dec
std
in
sub
cmpsl
sub
pop
pop
aaa
lret
or
nop
xchg
out
cmp
and
and
cwtl
hlt
pop
inc
push
xor
aad
jno
dec
jns
xor
pushf
sub
cmp
push
rcr
wbinvd
test
pop
aaa
popa
ret
stos
mov
dec
jne
mov
lea
pushf
xor
dec
sbb
push
loop
movsb
xor
add
fnstcw
ss
rolb
fwait
push
xchg
adc
call
mov
jge
dec
sbb
jno
bound
adc
mov
in
adc
jmp
add
mov
and
mov
mov
xchg
faddl
sub
add
aaa
pop
jl
or
arpl
adc
dec
jl
mov
pop
and
sti
inc
jnp
mov
mov
cmp
push
xchg
rolb
pushl
ficoml
stc
inc
xor
leave
dec
cwtl
scas
push
movsl
mov
inc
pop
arpl
test
pushf
jnp
call
movsl
add
std
nop
insb
cmp
movsl
or
ret
mov
cmp
cmp
push
cmp
loop
mov
je
cmp
pop
adc
int
xchg
xchg
js
repnz
mov
adc
push
push
mov
pop
inc
mov
mov
loopne
mov
mov
jb
call
mov
xor
loop
outsb
cmp
lea
xchg
test
lret
mov
imul
pop
xor
adc
out
add
inc
cmp
mov
pop
jae
add
add
or
nop
mov
xchg
dec
add
hlt
stos
push
inc
mov
dec
jns
sbb
outsl
sub
out
mov
add
mov
cmc
pop
lds
popa
popa
aaa
hlt
sub
addr16
sub
inc
in
aas
arpl
enter
push
xchg
push
and
cmpb
sub
mov
xor
mov
clc
adc
mov
lret
inc
add
dec
dec
or
and
rcr
and
aad
lcall
push
mov
xchg
cltd
jne
add
xor
pop
mov
aam
out
pop
repnz
mov
or
cmp
mov
xacquire
add
mov
pop
pop
and
sub
mov
mov
push
pop
xor
cmc
jecxz
fwait
pushf
mov
inc
cld
sub
movsl
mov
add
fsubl
adc
aaa
fstpt
add
insb
mov
mov
lcall
push
sub
mov
cmp
inc
xchg
push
cs
jbe
mov
push
xchg
imul
jo
test
pop
fcoml
jge
sub
pop
pop
jno
cmp
lea
and
adcb
xchg
mov
jne
out
inc
mov
loop
inc
mov
and
sbb
jg
xchg
jne
sub
sub
inc
sarb
push
repz
cmpsl
roll
stos
out
je
aas
inc
mov
test
cmp
les
add
xchg
aaa
jmp
imul
and
sti
cmp
xorl
repnz
jecxz
and
ficomps
push
test
out
push
pop
xor
pop
leave
mov
popf
andb
and
loopne
xchg
jns
sbb
mov
popa
dec
jmp
imul
sub
and
dec
addb
daa
push
cmp
ja
aad
into
popa
notb
xchg
ja
fs
mov
push
insb
rcrb
mov
mov
mov
adc
mov
insb
outsl
jae
or
test
cmp
and
daa
xchg
jmp
mov
or
jp
jle
into
jp
jo
ret
sub
in
mov
add
lret
aas
fs
inc
std
mov
outsb
xchg
les
cs
push
mov
push
push
bound
mov
jno
outsl
dec
pop
xor
xlat
aam
mov
jl
jbe
sbb
js
imul
dec
pop
pop
sbb
sbb
lret
cmp
in
aam
test
in
mov
mov
les
mov
lahf
pop
aad
les
ja
cmpsb
imul
mov
jae
push
cli
in
and
pop
or
adc
je
jns
adc
xor
pushl
inc
or
repz
in
cmpsb
push
mov
adc
jmp
shrl
std
int
lods
testl
imul
lods
lods
push
int
daa
dec
pushfw
push
leave
icebp
cltd
scas
sub
inc
shll
shlb
in
add
mov
xchg
mov
push
mov
nop
iret
adc
jmp
or
imul
addl
pop
push
dec
pushf
lea
fs
cmp
cmp
push
shrl
mov
or
shrb
push
xchg
add
or
pop
dec
shlb
or
jae
jecxz
negb
mov
std
and
ljmp
aam
out
adc
aam
jbe
jmp
int
and
cmpsl
xor
adc
inc
push
sarb
push
fdivrs
test
cli
loop
push
fs
arpl
xchg
mov
cmp
iret
inc
cwtl
orb
push
sbb
add
incb
lds
aas
fdivl
mov
iret
daa
xlat
dec
jb
test
jmp
lods
lcall
inc
jns
inc
xchg
js
mov
sarb
in
xor
mul
xchg
imul
mov
push
lds
jno
xor
sbb
push
stc
inc
out
lock
jb
cmpsl
push
lcall
add
icebp
addb
sbb
adc
ror
jns
xor
stc
add
out
cld
loope
mov
mov
clc
imul
mov
or
push
cmc
add
into
popf
jle
sbb
stc
cmpsl
sahf
adc
loope
loop
pop
push
jl
fcomip
lods
repnz
fistpl
and
xchg
aam
out
ss
out
cmp
rcrl
outsl
push
jmp
enter
shlb
add
pop
mov
add
xor
in
mov
cmpsb
jl
das
pop
shl
je
push
mov
ljmp
call
xor
sysenter
das
push
mov
rcrb
mov
mov
add
sbbl
test
xorb
adc
mov
push
xlat
push
pusha
push
lods
movsl
cwtl
cmp
pop
mov
loopne
add
mov
repnz
stos
das
loopne
mov
jp
mov
and
orl
addr16
push
cmp
sub
out
out
pop
lret
mov
dec
insb
push
mov
push
subb
into
testb
ja
in
scas
push
mov
andl
push
lcall
and
inc
stos
out
adc
gs
call
jge
sbb
rolb
cltd
imul
pop
adc
gs
pop
lods
or
cmp
bnd
mov
push
nop
push
mov
sbb
add
xor
mov
pop
shl
test
scas
cmp
insb
mov
adc
shld
movsl
xorb
cmpsb
xor
pop
lahf
inc
cmpsl
push
aas
repnz
sub
iret
cmpsl
aam
repnz
aas
pop
aam
orb
dec
mov
stos
sub
or
jp
pop
out
push
pusha
pop
addr16
rcl
mov
andl
pop
pop
jmp
push
pop
rorb
lret
sub
adc
ficompl
andb
ja
cmp
cmp
cltd
outsb
mov
mov
fistpll
cs
mov
in
dec
push
loop
sbb
dec
adc
mov
or
xchg
sti
adc
pop
jbe
push
rol
cli
cli
imul
in
cltd
and
call
in
rcrl
mulb
adc
clc
mov
outsb
decb
dec
xchg
cmpsb
lret
mov
add
enter
jnp,pt
pop
ficoms
iret
or
imul
xchg
rol
pushf
test
adc
insb
or
push
mov
clc
bound
nop
pop
pop
mov
int
xchg
sub
hlt
dec
arpl
and
mov
mov
add
push
push
jae
dec
sbb
mov
pop
xlat
jae
xorb
sub
jl
in
imulb
adc
das
adc
lock
xchg
mov
xor
ja
outsb
stc
push
mov
sbb
mov
mov
cld
mov
or
lahf
and
inc
shll
lods
pop
inc
out
cltd
fwait
mov
or
stos
dec
sti
pop
xchg
adc
push
mov
call
mov
iret
cwtl
das
aam
inc
loop
je
lock
out
cwtl
divl
into
cld
inc
jb
aas
lods
pop
mov
and
cld
shll
lret
es
mov
cmpsl
sub
adc
les
or
ja
pop
sub
movsb
ss
mov
inc
mov
fists
mov
mov
or
dec
nop
stos
sahf
icebp
ret
sbb
lahf
jnp
cmpsl
push
or
mov
stc
add
aam
adc
mov
mov
cli
mov
fmulp
shll
mov
jg
mov
inc
into
jo
lcall
out
pop
test
rclb
jno
stc
clc
and
fadds
jle
or
sarl
adc
xchg
scas
adc
xchg
adc
xor
icebp
mov
fildll
sub
pushf
jg
fistpl
mov
pop
repnz
jge
mov
stos
insl
enter
pop
adc
xchg
ljmp
jmp
dec
adc
dec
cmc
daa
imul
and
and
mov
orl
pushf
mov
jecxz
mov
jnp
xor
cmp
orl
jae
mov
cli
mov
fimuls
sbb
ficompl
sub
add
adc
jl
or
jle
and
jle
push
sbb
sti
push
mov
pusha
fwait
adc
in
repnz
adc
enter
enter
sbb
movsl
xchg
xlat
scas
mov
bound
mov
and
leave
cmp
xor
push
es
push
ret
xchg
clc
cmp
push
lods
into
jns
pop
mov
dec
loop
call
decb
sub
push
sti
ret
sbb
js
sbb
stos
pop
xchg
jg
sub
jp
xchg
fbstp
daa
lods
adc
mov
test
sub
xor
inc
mov
jb
leave
xchg
xchg
sarl
test
mov
xor
lods
or
outsb
int3
cmp
stc
scas
mov
mov
cmp
jo
xchg
cmpsl
mov
arpl
loopne
and
mov
jne
mov
and
xchg
cmpsb
inc
test
and
sbb
and
dec
add
mov
out
mov
mov
dec
call
bound
pusha
fsubrs
stc
sub
dec
pop
js
arpl
adc
dec
stos
xchg
test
jecxz
sahf
jp
add
fwait
jb
jne
xchg
mov
aad
mov
testl
mov
jmp
cmpsl
jecxz
mov
dec
dec
mov
mov
mov
int
sub
in
ret
subl
pop
inc
js
mov
in
pop
ror
or
push
ror
aaa
loopne
imul
lods
mov
imul
inc
out
mov
decl
xor
movsl
ret
xor
in
add
cmp
pop
mov
cmp
inc
out
sub
sbb
cmp
repz
mov
jecxz
mov
mov
sbb
cmp
std
inc
sbb
jo
lret
add
jmp
test
icebp
shr
mov
xor
cli
and
add
mov
cmp
loopne
pop
sub
xchg
sbb
and
or
lods
jo
cs
mov
in
lahf
popa
mov
das
cmp
loop
or
mov
in
fsubr
jb
enter
push
cltd
xor
xchg
jns
daa
pop
xor
out
cli
pop
inc
or
data16
loope
mov
jns
or
out
cmc
lods
hlt
aas
nop
outsb
adc
cmp
mov
mov
bound
mov
pusha
pusha
adc
add
cld
sti
pop
push
out
hlt
xor
je
std
int
xchg
cwtl
popa
in
pop
aas
sbb
mov
xchg
scas
mov
rcr
push
cmp
add
outsl
jb
aad
cmp
mov
sbb
loopne
mov
imul
test
jp
shlb
jb
das
pusha
sbb
ret
adc
sbb
jb
xor
jne
dec
shlb
les
xor
dec
das
jne
mov
mov
push
mov
bnd
rcrl
lods
sbb
adc
and
xchg
xchg
mov
enter
lds
mov
das
scas
out
or
mov
push
daa
or
das
and
jmp
test
lock
and
lret
xor
jecxz
int
seto
fisttpl
mov
lock
in
pop
or
jle
add
fnstcw
pop
fists
sahf
les
stos
or
mov
inc
aam
fwait
push
jae
dec
mov
jns
pop
cli
in
jo
xchg
mov
test
cli
push
in
out
imul
push
hlt
add
pop
jae
and
dec
scas
lea
jl
adc
adc
in
mov
fs
push
shrb
shll
lahf
and
enter
xor
aas
xchg
inc
pushf
push
jmp
bound
cmp
add
pop
mov
sub
dec
mov
int3
sbb
addr16
cmp
hlt
addb
test
and
push
outsl
pop
dec
pop
cltd
loopne
xchg
clc
xor
push
insl
cmp
xlat
jno
pop
push
shlb
lahf
sbbb
stc
std
in
iret
sub
hlt
gs
in
inc
shll
test
cmp
sbb
dec
cmp
pop
inc
in
xchg
rcll
pop
lahf
ficoms
add
add
pop
cmp
int
pop
fdiv
inc
mov
lcall
jl
pop
out
push
fmuls
push
bound
ds
shll
lret
cmp
repnz
and
inc
pop
dec
mov
inc
out
lret
pop
adc
fiadds
add
inc
mov
inc
in
addr16
hlt
sub
out
icebp
aam
mov
dec
mov
arpl
movsl
pop
cli
setge
add
push
dec
dec
cmp
lods
iret
adc
shl
adc
mov
push
push
imul
or
mov
loope
jge
inc
faddl
hlt
aaa
mov
es
or
jecxz
xor
cmc
negl
cmovs
test
jb
sbb
pop
fiaddl
xor
dec
push
test
add
and
xor
cmp
inc
decl
js
in
dec
js
mov
xor
inc
fistpl
dec
pop
inc
pushf
lret
sub
adc
enter
push
and
cmp
call
sub
in
lea
movsl
inc
xchg
cmc
mov
aad
mov
lret
ret
or
pop
pop
mov
push
test
cli
cli
xchg
test
out
repz
pop
cmp
sub
stos
sub
popa
cmp
push
lahf
dec
cmpsb
and
and
dec
daa
daa
and
mov
mov
sti
arpl
out
loopne
out
adc
jb
xor
jae
loop
pusha
xlat
outsb
cmp
xor
sub
xor
out
data16
pushf
movsb
push
sbb
movsl
mov
iret
pop
sbb
adc
mov
pop
loop
push
jnp
aad
jo
fidivrs
fst
mov
and
mov
xlat
sbb
in
lcall
cltd
test
pop
popf
sbb
popf
push
cwtl
dec
cld
mov
flds
inc
fwait
inc
aaa
sub
insl
pusha
xlat
pop
cmpsl
popa
xchg
xchg
cli
and
and
jae
movsb
or
pop
cmp
lock
sub
push
inc
aad
xor
cmp
outsb
iret
sub
cmp
push
popa
lcall
cmp
imul
add
call
mov
push
mov
mov
xchg
dec
jne
pop
mov
jbe
mov
xor
cmp
lds
lock
push
fcoml
out
stos
pop
addr16
ja
add
gs
cmp
cs
cmp
insl
pop
xchg
cmp
sub
popa
mov
jne
mov
out
or
mov
mov
inc
lcall
cmp
or
push
adc
and
bound
add
test
orl
adc
push
mov
jno
sarb
stos
cmp
jp
sub
outsb
jp
imul
and
loopne
scas
ror
js
xchg
clc
mov
in
add
cltd
out
mov
add
mov
js
mov
add
adc
pusha
imulb
sub
test
sub
sub
mov
mov
mov
icebp
out
imul
adc
out
lods
lods
ret
faddl
xlat
dec
rorl
sub
loope
xchg
int
in
aaa
mov
cmp
sahf
adc
xor
mov
mov
lahf
xchg
jp
pop
sub
lret
inc
push
jne
sahf
loope
mov
fstpt
scas
and
adc
int
mov
popa
stc
sub
dec
cli
inc
xlat
test
push
stc
icebp
adc
popf
fisttps
sub
or
sbb
mov
rep
jae
pop
shrl
xor
add
mov
push
or
pop
sbb
push
mov
inc
pop
adc
push
stos
dec
aad
lock
fs
inc
outsl
mov
pop
or
aaa
cmp
mov
sub
enter
push
inc
dec
xchg
mov
lret
push
std
inc
out
mov
das
fst
orb
pop
ss
sub
out
sbbl
jnp
pop
jbe
test
or
xor
push
add
mov
jecxz
pop
cs
dec
testl
adc
xlat
mov
sbb
xchg
mov
lods
adc
pusha
mov
mov
shl
xlat
pop
jp
out
jbe
mov
sub
lea
push
ljmp
jg
cmc
push
clc
add
mov
xorb
lret
push
repnz
dec
movsb
dec
fidivs
mov
es
leave
pop
into
pop
add
nop
push
cmp
in
loopne
lods
fisubrl
decb
mov
loope
xabort
mov
push
mov
mov
cld
ds
jmp
adc
arpl
pop
fisttpl
std
cmp
dec
fdiv
or
aad
dec
shrb
or
test
std
adc
sarb
inc
loopne
cs
outsl
leave
xchg
leave
mov
andl
sub
popa
sub
bound
aaa
mov
xchg
xor
fs
jle
cltd
shl
mov
xchg
daa
mov
mov
aaa
je
push
dec
pop
sbb
pop
adc
mov
mov
xsha256
cmpsb
jno
sbb
fsubrs
pop
dec
shl
inc
xor
dec
das
sub
cmc
dec
imul
and
es
subb
mov
dec
mov
mov
pop
out
mov
push
pop
push
mov
sbb
dec
xchg
cmc
xlat
adc
jno
cmp
xchg
fs
repz
pop
mov
ja
cmc
inc
cwtl
shrb
sbb
repnz
jbe
lret
getsec
xchg
inc
aad
int3
cmc
push
cs
xlat
push
mov
rorl
bound
mov
adc
icebp
clc
mov
jo
stc
mov
pop
cmp
sbb
jg
inc
mov
or
pop
dec
add
pop
in
or
push
pushl
lea
aam
jl
aas
test
int
inc
push
mov
sub
pop
cli
cmpsl
fldcw
or
mov
or
movsl
pop
lock
call
xchg
dec
aaa
fsts
mov
pop
ret
lret
shrl
sahf
movsl
es
int3
dec
xor
mov
or
pop
xor
fdivrs
out
bound
in
or
daa
in
jl,pt
push
call
lret
loop
dec
push
inc
mov
mov
mov
push
loop
fwait
adc
icebp
push
xor
loopne
xchg
cmp
rorb
fistpl
scas
jecxz
lret
or
in
cld
sbb
cmp
cmp
test
in
jl
fisubs
fcmovb
repz
test
jg
sbb
mov
ds
ret
mov
mov
movsb
sub
lret
daa
fisubs
sbb
jmp
mov
pop
push
push
cmp
push
cmp
push
mov
sar
in
jb
jecxz
sahf
adc
mov
icebp
cmp
xlat
cmp
xchg
lret
inc
jne
cmp
xchg
bndldx
imul
mov
jb
lods
pop
stos
loop
fistpll
int
aad
ja
pop
xchg
ljmp
inc
sbb
adc
inc
std
xchg
jnp
inc
mul
lret
test
mov
loope
pop
jnp
in
sub
add
andb
push
test
shlb
push
inc
repz
mov
adc
rolb
out
or
adc
out
in
rorl
shlb
xchg
mov
into
dec
dec
repnz
push
lahf
add
xchg
cltd
cmp
add
and
fbld
arpl
add
mov
lret
sbb
aaa
test
loopne
insl
push
dec
loop
out
pop
out
popa
add
mov
mov
popa
mov
lret
pop
stos
xchg
and
les
add
jbe
lods
xchg
cli
insb
test
insl
add
testb
mov
shrb
arpl
lods
lock
sbb
jg
inc
nop
xchg
out
jo
in
pusha
xchg
leave
ret
dec
pop
loopne
dec
rcl
dec
mov
mov
lock
fnstcw
adc
pushf
xor
loopne
pop
test
inc
xchg
pop
js
sub
push
jns
pop
mov
lea
xchg
repnz
shrl
sbb
cmp
xchg
sbb
call
insb
dec
push
fs
mov
adc
out
sub
idivl
notb
mov
jmpw
rcrb
add
mov
inc
leave
pop
mov
movsb
imul
adc
push
xlat
int
movsl
xchg
jge
movsl
mov
add
ljmp
xor
xor
pop
inc
or
jp
fldl
cld
stc
and
adc
dec
jl
sub
or
or
imul
xchg
insl
fists
pop
int
std
inc
into
mov
bound
add
sub
mov
fs
fisubs
out
jbe
insl
lcall
sbb
stos
int3
aaa
xor
and
scas
dec
or
fnstcw
lcall
cmp
jb
cli
push
jb
ds
daa
jecxz
outsl
lock
mov
jbe
lock
xor
or
dec
js
jns
hlt
push
cmp
fidivrl
xchg
inc
pop
mov
movsl
cmp
adc
pand
test
add
xor
out
sarl
por
fiaddl
inc
in
mov
out
ret
mov
or
daa
jns
jl
xchg
or
or
cmp
jbe
push
add
mov
xlat
pushf
testl
insb
add
xor
mov
push
in
push
jg
sbb
arpl
xlat
dec
rcl
push
nop
push
shll
mov
pusha
add
xor
push
iret
sub
test
xchg
jg
push
into
fcmove
pop
cwtl
lds
cmp
mov
setnp
adc
xor
test
xchg
or
lcall
fidivrs
rcrl
fimuls
mov
push
out
pop
pop
in
xor
fisubrs
mov
mov
pushf
push
add
xchg
mov
pop
fisubs
rorl
mov
scas
sub
inc
bound
iret
and
ljmp
ret
mov
ret
sub
cmpsl
in
orb
mov
push
outsl
stos
jno
adc
out
jno
ljmp
sti
xchg
scas
ljmp
sub
ret
cmpl
call
or
fwait
pop
jmp
jno
adc
cltd
pop
cmp
aas
xlat
call
test
lods
xchg
scas
shlb
leave
pushf
arpl
mov
jl
or
out
dec
mov
and
inc
xor
mov
decl
mov
sbb
daa
sub
add
and
data16
adc
pop
enter
cltd
jb
repnz
sbb
sbb
nop
cmp
aaa
out
mov
push
movsb
dec
lock
jp
push
xchg
test
inc
dec
mov
ret
pop
mov
mov
lcall
mov
or
in
dec
shll
xor
mov
inc
popf
sub
dec
inc
cmp
lods
aas
insl
repz
dec
add
or
roll
movd
push
push
jae
mov
cwtl
test
test
pop
test
movsl
xchg
jl
aas
xchg
push
call
das
push
sub
push
jmp
xor
add
pushf
lret
xchg
jg
sbb
in
in
lahf
mov
inc
ss
jo
mov
dec
pop
sti
lahf
daa
lds
or
in
sbb
sbb
lret
orb
loop
es
lea
fucomi
mov
push
xchg
in
loop
imul
adc
sub
mov
mov
push
ljmp
lret
dec
jecxz
sub
lret
test
push
lret
cmpl
imul
imul
xor
adc
mov
inc
adc
or
xchg
daa
nop
imul
scas
ss
cld
loop
out
push
outsb
mov
insl
fsubrs
lock
push
adc
leave
push
fs
jecxz
xchg
push
mov
in
pop
jb
pop
lret
dec
inc
orb
mov
arpl
jmp
dec
and
hlt
push
ret
std
je
call
or
mov
out
mov
jbe
xlat
add
and
dec
mov
call
mov
rcl
mov
jmp
and
add
les
fbld
sbb
or
cmpsb
mov
sbb
jmp
push
sbb
ss
dec
mov
dec
mov
xor
icebp
inc
xchg
outsb
popf
push
inc
xchg
sub
inc
push
push
sub
push
mov
pop
jp
pcmpeqw
dec
faddl
pop
and
test
aas
sti
ljmp
and
filds
sbb
push
cli
hlt
jle
pop
shrb
xchg
pop
mov
movsl
xchg
mov
mov
sub
sub
test
cld
push
jmp
iret
pusha
pop
mov
lahf
push
aam
fcmovb
cmp
lret
xchg
inc
mov
lcall
lret
mov
fldcw
xor
xor
adc
fwait
push
jmp
cmp
push
jmp
mov
sub
fdivl
rcr
ja
ljmp
cmpsb
lock
jl
add
decb
pop
dec
js
dec
and
icebp
jno
dec
loop
and
int
or
xchg
add
cli
scas
cmp
fs
mov
popf
into
jmp
xor
popa
notb
test
mov
push
into
clc
xor
imul
orb
cmp
jge
inc
loop
mov
xor
jbe
shlb
xchg
in
adc
repnz
mov
cs
cld
fsubp
test
enter
pop
jnp
sbb
mov
add
stos
add
aas
sarb
fstpt
cmp
lods
icebp
ja
stos
mov
movsl
sbb
imul
fisubrs
ds
mov
sahf
xchg
push
in
inc
lcall
mov
pop
int3
outsl
jne
hlt
xor
mov
lock
stos
fldl
adc
popa
mov
jge
xor
mov
cld
lea
ja
mov
movsb
lcall
dec
imul
mov
test
movsb
sub
cwtl
popa
pusha
or
xchg
lods
into
and
mov
das
daa
add
jge
xorl
add
std
lock
pop
jg
stos
enter
nop
ss
pop
lcall
pop
dec
mov
inc
lret
in
push
mov
adc
cwtl
add
clc
pop
lods
xor
pcmpeqw
cld
nopl
and
mov
cmp
dec
test
sti
xchg
mov
mov
pop
inc
mov
jo
paddd
shlb
in
sbb
sbb
mov
and
shlb
push
int
push
rcrl
push
test
inc
add
push
das
testl
adc
gs
cmp
inc
mov
xchg
dec
data16
pop
xor
data16
sub
iret
sbb
sub
xor
sbb
mov
mov
pop
dec
ds
fldenv
sbb
hlt
jo
testb
sbb
fwait
pop
or
add
pop
sbb
imul
inc
adc
shll
notb
xor
shlb
adc
das
inc
sbb
leave
mov
andb
xchg
mov
dec
jmp
repnz
aas
xchg
dec
into
xor
cmp
dec
inc
movsl
outsb
fxch
stc
mov
jp
fistpl
loop
cli
mov
mov
std
pop
sub
adc
and
test
test
or
inc
fsubrl
jo
rorl
mov
lret
xorl
jnp
ret
popf
insl
sub
fidivl
sbb
sahf
xchg
sub
xchg
mov
popa
mov
xchg
xchg
cli
sbbl
das
xor
jle
adc
and
shr
cmp
pop
insb
xor
dec
cmp
insb
in
pop
adc
xchg
push
and
xchg
pushl
notl
cmpsb
mov
pop
outsb
jo
mov
test
imul
add
xchg
cmp
in
xorb
and
popa
pushf
xor
popa
dec
outsb
aaa
loopne
mov
push
int3
mov
push
pop
mov
mov
fnstcw
fiadds
add
xchg
ljmp
loope
divb
std
dec
add
mov
and
mov
imul
or
fists
cmp
mov
mov
push
repz
add
nop
and
push
iret
xchg
lret
mov
lods
cmp
sti
and
fstl
mov
mov
dec
aad
adc
xchg
jl
ss
xchg
mov
fistpl
daa
xchg
leave
in
push
jns
sub
adc
mov
mov
mov
pop
addb
repnz
mov
sbb
cmc
aas
add
pop
cmp
adc
shrb
lret
cwtl
js
test
pusha
out
test
addr16
scas
mov
xchg
fwait
lcall
jbe
jns
ljmp
lds
aam
sub
dec
in
add
jne
cltd
fdivl
jnp
xchg
jge
scas
aaa
push
divb
cltd
fmull
nop
daa
or
push
push
cwtl
outsl
stos
inc
in
or
arpl
push
mov
mov
shrb
cmpsl
adc
lahf
fucom
push
sub
enter
xor
pushf
lahf
imul
mov
push
loope
and
xor
xchg
cmp
ljmp
or
negb
or
xchg
cmp
int
sub
and
cmp
mov
iret
in
jmp
inc
mov
adc
mov
out
fwait
int
xchg
fisubrl
ret
mov
or
adc
xorb
addr16
jmp
mov
xchg
sti
adc
jle
into
jbe
cmp
sahf
or
or
arpl
adc
clc
outsb
loope
pop
popf
add
push
xchg
jl
adc
and
aas
rcrl
xchg
push
fs
fs
pusha
dec
sbb
pop
pop
fidivrs
pop
pop
push
pop
rcrl
xchg
pusha
faddp
mov
cmp
dec
ljmp
or
rcpps
dec
mov
add
pop
and
pop
dec
mov
jmp
mov
xchg
and
jno
pop
cmp
xchg
pop
mov
sub
adc
rorl
es
lock
lods
pop
lods
cmp
fisubrl
stos
jle
leave
aaa
jne
jge
shl
jb
mov
in
movsl
mov
sub
lods
mov
jo
aaa
sub
fs
cmp
faddp
cmp
pop
imull
pop
mov
into
or
push
adc
pop
pushf
xchg
addl
pusha
adc
lods
enter
xor
movsb
and
repz
outsl
sub
popf
cltd
cmpsb
popf
sbb
loope
adc
xlat
enter
mull
push
push
cmpsb
dec
aad
call
iret
sbb
or
aaa
add
pop
adc
ja
inc
add
cmp
push
mov
fldt
imul
outsl
dec
fimull
imul
loope
push
xor
outsl
pop
push
out
je
stos
xor
xchg
inc
cmpsl
jne
inc
push
pop
or
mov
pusha
mov
cmpsl
sbb
lods
xchg
jnp
scas
push
mov
mov
mov
mov
jl
mov
cmp
jne
in
pop
lahf
dec
push
mov
lret
loopne
sbb
pop
push
rcrb
dec
stos
data16
xchg
lret
and
repz
mov
push
bound
mov
mov
pop
bound
xchg
inc
mov
or
dec
mov
mov
daa
notb
sahf
sbb
push
xchg
ss
pop
sub
jmp
imul
cmp
lahf
rclb
jnp
xor
into
sub
cwtl
mov
jle
sub
fs
daa
movsl
repnz
mov
lcall
cmp
mov
idivb
mov
mov
inc
mov
pusha
cmp
fdivl
lcall
ljmp
test
push
dec
mov
pop
shlb
js
addl
inc
enter
inc
cmp
cld
or
inc
xor
push
push
jnp
cwtl
fwait
inc
scas
int3
mov
outsl
and
adc
jg
xor
jne
and
mov
mov
add
mov
cwtl
or
jne
xor
push
jne
xchg
btr
cwtl
sbbl
pop
out
into
andb
jle
pop
jno
jmp
mov
sarl
push
pushf
in
pop
adc
insb
push
popa
add
sti
stos
fsubrs
jg
xor
xor
sub
or
pop
dec
inc
pop
xchg
incb
fildll
fcompl
ss
xchg
xchg
pushf
cli
mov
icebp
xor
lods
jg
push
std
into
ret
mov
loop
sub
insl
icebp
add
mov
leave
xchg
popf
je
out
push
jns
push
mov
push
mov
movsl
jo
test
into
fisubrl
push
sub
push
pop
test
sbb
or
fdivrs
out
jae
and
fsubs
pop
arpl
jnp
loopne
or
or
inc
cmp
push
loope
push
aaa
pop
pop
test
sub
mov
outsl
adc
sbb
add
adc
subb
cwtl
mov
call
test
gs
test
fidivrl
pop
inc
jo
push
sub
rol
mov
jnp
xchg
mov
and
and
sbb
in
test
pusha
jb
jns
stos
mov
sub
mov
mov
mov
mov
add
aam
insb
xchg
push
dec
les
lods
push
sbb
pop
sbb
cmp
rclb
xchg
das
clc
mov
sbb
popa
out
adcb
cmp
shl
or
filds
mov
test
mov
lahf
mov
es
sub
add
out
push
xchg
push
mov
add
pusha
std
ljmp
dec
das
pop
mov
push
aad
idiv
ljmp
push
cmp
push
bound
andnps
addr16
jae
pop
push
mov
xor
xchg
add
fsubrp
sub
mov
into
inc
ja
into
pop
push
lock
xor
sub
lds
out
ficoml
flds
add
inc
cmp
sbb
sbbl
imul
jno
testb
xchg
pop
jle
mov
rcrl
mov
sbb
dec
mov
orb
sarb
sbb
sbb
insl
xor
add
pop
mov
xor
jp
fdivr
or
cmpsb
in
dec
adc
incl
rol
jp
loop
fisubs
cltd
repnz
mov
push
push
sbb
push
insb
adcl
sub
cs
ljmp
or
stos
popf
ljmp
pop
loopne
cltd
std
xchg
sub
push
sbb
adc
notl
mov
dec
lahf
clc
mov
push
dec
xchg
push
mov
stc
mov
jp
dec
mov
sti
out
xor
xchg
sbb
icebp
xchg
rclb
dec
dec
stos
add
or
mov
das
push
jp
cld
jae
jne
in
dec
popf
push
xchg
ficoml
test
lds
lahf
mov
or
jge
sub
popa
jle
arpl
mov
fildl
mov
shlb
mov
stos
dec
aas
fucomip
cmpsb
sub
inc
or
mov
aad
pop
int
pop
cli
loop
adc
jg
fwait
or
add
xlat
push
aad
inc
jne
mov
sbb
stos
mov
jno
mov
repz
jle
scas
pusha
gs
into
subl
insl
dec
and
shr
gs
jne
jmp
mov
sub
lret
cs
jnp
into
adc
adc
sbb
dec
sub
rcr
dec
pop
rcll
adc
push
cmp
xchg
inc
cmpsb
cmp
mov
imul
or
loopne
imull
mov
test
pop
sbb
in
pop
jns
dec
mov
push
loop
jg
sbb
sub
inc
xor
enter
xor
pop
xor
lret
mov
cltd
dec
ret
decl
xor
imul
or
add
int
repz
sbb
xorb
imul
xchg
or
lds
jne
cmc
adc
shll
insb
in
lea
fnsave
scas
fldcw
dec
sti
mov
pop
outsl
sbb
add
jp
lods
fsubl
jb
addr16
lcall
sbb
fs
inc
push
js
dec
xchg
hlt
xchg
fsubr
mov
cwtl
push
sub
add
stc
aam
mov
cwtl
cmp
loopne
mov
cmc
lds
pop
and
pop
mov
cmp
adc
daa
lret
rclb
repnz
xchg
xchg
iret
call
xor
sti
xchg
dec
iret
xchg
jge
cmpsl
and
aad
dec
stos
insl
xor
sahf
popf
ror
arpl
add
pop
pop
dec
or
cmp
jb
shll
add
mov
push
push
bnd
adc
and
ljmp
jb
dec
mov
add
xor
stos
pop
popf
adc
inc
fwait
cs
pushf
xorb
imul
daa
cmpsb
sub
rcl
imul
and
push
push
adc
xchg
cmc
js
inc
xor
bound
stc
arpl
inc
lcall
inc
test
iret
pop
jnp
sbb
inc
iret
mov
push
cmp
popf
jge
das
xlat
inc
pop
enter
clc
das
fstpl
std
test
insb
jecxz
test
cltd
sbb
outsl
sbb
imul
push
shr
ss
jmp
cltd
icebp
sub
nop
xchg
pop
lcall
mov
iret
cmp
pop
shll
push
inc
jo
das
popa
in
stos
xor
fwait
or
mov
adc
fwait
push
cmpsb
sbb
pushf
xor
mov
and
or
pop
jno
pushf
cltd
or
jns
mov
fwait
and
ret
cmp
pop
iret
icebp
cltd
mov
xor
fstl
jmp
xchg
dec
enter
fldl
or
ret
fisttpll
mov
dec
mov
add
scas
repz
sbb
stos
jo
out
movsb
out
and
pop
js
sub
ja
lds
jecxz
fildll
int
fucomip
add
test
lock
sub
cmpsb
and
jae
mov
xor
add
cmp
faddp
sub
movsl
ja
aad
test
sti
loop
pop
or
loope
xchg
and
xchg
cmp
xor
loopne
push
xchg
mov
mov
xor
jb
ss
out
adc
mov
data16
adc
inc
pop
xchg
aaa
das
jecxz
lods
popa
or
les
pop
jl
in
jmp
push
outsb
mov
lods
stc
pop
lea
inc
pop
adc
shr
push
inc
and
in
imul
iret
adc
jno
test
pop
mov
sbb
and
xor
mov
add
sub
mov
push
jg
push
sub
fisubrl
lock
and
jb
test
in
add
jmp
ljmp
inc
jecxz
mov
clc
mov
inc
or
cmc
mov
pop
and
xchg
mov
xor
xchg
push
xorb
daa
inc
inc
dec
fwait
mov
or
std
nop
repnz
icebp
adc
mov
sbb
movsb
fidivrl
pop
push
add
lea
jle
push
scas
xor
xchg
outsl
mov
leave
xor
xlat
dec
sarb
gs
dec
jge
filds
sub
inc
dec
pop
out
push
cmp
loope
pushf
leave
sahf
outsb
add
xor
enter
lock
sub
daa
inc
xchg
cmp
mov
cmp
inc
std
insl
or
aaa
cmpsb
dec
jne
movsb
mov
int
mov
test
jno
imul
dec
sub
and
lods
icebp
dec
cmp
or
or
sub
es
push
xchg
push
pop
add
ror
sbb
movsl
xchg
xchg
aaa
insb
xorl
pop
sbb
bound
xor
xor
jle
rolb
mov
movsb
out
xchg
adc
imul
sbb
inc
mov
lahf
mov
dec
cmp
movsb
out
out
pop
lods
push
scas
mov
cmc
mov
inc
fst
mov
add
add
fwait
lret
fistps
fisubs
inc
cmpsb
dec
mov
js
jb
jnp
pop
or
pop
push
jl
push
pushf
loope
das
test
pop
jae
jmp
xchg
mov
sti
ret
in
aas
in
lret
add
xchg
aad
mov
test
lret
lods
pop
xorb
jne
xor
shrb
or
pushf
inc
ret
mov
mov
rorb
pop
fimuls
push
dec
mov
rcrb
dec
mov
iret
popa
mov
sbb
inc
and
icebp
test
lods
ret
shlb
ja
pop
ret
fwait
push
shr
sbb
mov
ja
adc
ret
xlat
xchg
add
adc
scas
fldenv
adc
or
sub
icebp
and
cmp
sbb
leave
push
adc
jl
sub
enterw
dec
pop
imul
push
ds
add
clc
mov
jmp
imul
cmpsl
scas
lds
icebp
dec
lea
push
push
shl
inc
ret
jnp
popa
or
test
vmwrite
add
mov
mov
xchg
adc
loopne
aas
mov
sbb
int3
dec
and
mov
in
icebp
push
xchg
and
ja
stos
sub
pop
xor
pop
pop
fdivs
or
sbb
pop
jle
pop
mov
adc
xor
inc
pop
dec
lahf
ljmp
lahf
cmp
stos
jns
mov
push
imul
mov
test
test
lea
out
imul
std
adc
xor
cwtl
test
rorl
mov
push
mulb
dec
xchg
les
imul
mov
push
inc
pop
adc
sarl
nop
sbbl
outsl
dec
test
push
adc
sbb
ret
sahf
or
lods
aad
test
and
aad
cmp
and
cmp
add
loopne
or
cmpsl
mov
adc
inc
aas
add
or
jmp
pop
adc
btr
insb
sub
and
push
jmp
clc
sahf
mov
xchg
push
adc
fmul
adc
mov
aam
lahf
aaa
insb
call
jae
lret
in
add
jno
es
push
movsl
push
dec
addl
pop
adc
pop
fwait
mov
xchg
push
push
pop
inc
push
fcoms
sarl
xor
or
add
outsb
aad
xlat
std
mov
sti
jg
lea
test
mov
aad
push
dec
ret
lcall
stc
mov
mov
dec
movsb
lods
enter
xchg
mov
or
jns
sbb
hlt
mov
addb
in
imul
jp
movsl
insb
sbb
pop
fnsave
movsl
cmc
nop
pop
sbb
sbb
loop
cltd
mov
pop
cmpsb
mov
in
xchg
pop
cmpsl
dec
dec
ret
xor
ret
push
incl
shll
cmpsl
mov
pop
popf
fadd
and
outsl
add
test
aas
jg
mov
xor
mov
iret
cltd
xor
pop
stc
mov
packuswb
insl
or
ficoml
mov
mov
xchg
je
mov
into
push
mov
mov
mov
mov
jne
cmc
test
xchg
xlat
adc
xor
int3
bound
mov
xorb
mov
jae
gs
mov
dec
pop
push
jecxz
mov
and
lret
loop
xchg
inc
lahf
cli
cmpsb
mov
fdivl
das
sub
cmpsl
lds
scas
lcall
add
out
incb
je
push
out
mov
fldl2t
jo
adc
ret
in
movl
decl
sub
pop
rorl
mov
jge
mov
movzwl
xchg
aaa
jg
das
jle
daa
jl
cmp
cmc
pop
dec
gs
xchg
push
sbb
jmp
negb
jmp
cmpsb
and
data16
inc
mov
mov
add
into
xor
mov
ja
mov
or
jbe
mov
pop
ficoms
mull
mov
sbb
or
adc
pop
out
stos
leave
fwait
sbb
push
dec
cmp
mov
fcompl
inc
dec
sahf
jg
inc
push
repnz
and
jmp
cmp
xchg
or
adc
faddl
pop
in
dec
xchg
dec
push
sahf
lods
lods
je
rcr
cmpsb
repz
push
pop
jge
cmpsl
cmp
out
stos
repnz
mov
jle
fildll
stos
fwait
pushl
inc
xchg
fisttps
xor
inc
pop
or
stos
iret
cmp
mov
jle
inc
xor
fidivl
insb
aam
sub
jns
mov
dec
or
mov
popa
imul
cmpb
aad
xchg
jg
xor
lcall
adc
test
adc
lret
dec
pop
or
inc
insb
testl
mov
loop
ds
add
push
add
mov
rcrb
jns
or
push
lret
jns
fs
aad
push
mov
sbb
cltd
mov
pop
pop
imul
dec
call
repz
rcl
or
jge
popa
aad
fsubrs
mov
jb
sbbl
sbb
mov
das
adc
leave
sub
sub
mov
cwtl
push
and
nop
daa
sti
ret
push
call
mov
stos
add
pop
cmpsl
das
cltd
pop
popf
mov
mov
je
dec
cmp
jecxz
push
sbb
pop
push
mov
pop
cmp
jnp
pop
mov
and
lcall
and
pusha
enter
mov
push
jnp
mov
and
push
xchg
or
test
inc
inc
mov
pop
sub
xchg
pop
push
rorl
pop
mov
fisubrl
push
push
cli
mov
dec
inc
gs
jns
int
arpl
sub
sbb
enter
pop
add
cmpb
xchg
arpl
mov
inc
call
add
pop
adc
jge
jnp
mov
ja
or
nop
jo,pn
sbb
or
gs
inc
jo
call
test
sbb
cld
xor
inc
or
add
and
pop
test
mov
stos
das
in
cmpsb
cmc
aam
ss
mov
sbb
repz
cmc
je
cmp
lock
dec
je
add
and
test
lods
int3
aas
mov
aaa
mov
arpl
in
notb
lret
and
mov
adc
push
xchg
popa
movsb
popf
popf
lret
xor
inc
xor
data16
mulb
in
jnp
pop
insl
les
mov
aas
in
mov
sahf
clc
cwtl
aam
cltd
sub
dec
jb
clc
adcb
pop
out
mov
sub
enter
test
mov
lods
fisttps
jno
icebp
mov
push
iret
fisttps
das
mov
sub
fidivrs
or
shll
in
sbb
rcrb
cwtl
jo
add
scas
sub
scas
pop
lret
in
outsl
jge
mov
ret
pop
inc
rclb
lods
aam
mov
mov
into
add
xchg
jno
movsb
cmpsl
jae
inc
aaa
fs
mov
lahf
xchg
add
incb
jecxz
cmp
cmp
xchg
nop
out
mov
xchg
pop
cmp
lahf
dec
push
mov
call
loop
xrelease
inc
cmp
or
loopne
into
fcoml
loop
out
das
sub
cwtl
adc
push
add
xor
dec
dec
insl
mov
lret
mov
dec
ret
negb
or
fcmovnu
sarl
xlat
dec
jo
js
and
shrb
jecxz
xchg
int
test
push
pop
jmp
xchg
pop
cmp
enter
les
loope
shll
data16
idiv
mov
lds
mov
xorl
add
pop
jns
pop
orb
std
fisttpll
movsl
mov
mov
rcll
inc
mov
and
jne
out
jg
xlat
adc
pop
sbb
test
ljmp
xchg
adc
jp
inc
pop
jne
js
lds
sub
dec
adc
daa
push
add
fwait
idivl
rcr
mov
rolb
cmc
xchg
xchg
jg
dec
and
dec
nop
dec
ror
jb
xchg
sar
push
mov
mov
mov
dec
inc
test
add
xchg
sahf
adc
pop
es
add
xchg
mov
jg
cmc
call
das
fcmove
push
movsb
pusha
push
lea
andl
loope
es
daa
sahf
nop
lock
in
ja
lret
sbb
sbb
gs
inc
sbb
fwait
xor
xor
dec
mov
mov
sbb
fs
loop
mov
xor
js
in
and
mov
popa
dec
dec
incl
std
xor
faddl
mov
dec
sbb
jne
mov
xor
mov
or
mov
fwait
ret
pop
int
mov
pop
push
push
lds
xor
cmp
inc
xorb
adc
gs
and
in
int
mov
shrb
inc
push
nop
jmp
mov
add
insl
cmp
cmp
add
sbb
ljmp
cld
adc
add
cmpsb
mov
outsl
lret
pop
mov
lahf
stos
ds
sbbb
and
add
inc
mov
dec
fisubl
push
mov
je
add
or
fwait
movsl
and
ljmp
xor
jne
and
mov
sbb
push
into
cmp
dec
xor
fwait
loop
mov
popa
scas
mov
outsl
and
movsb
inc
mov
ja
ret
dec
push
stos
in
scas
sbbb
mov
clc
xchg
hlt
sub
or
push
add
jne
insb
xchg
cmc
fwait
mov
and
xchg
lods
cmpsl
adc
sbb
push
add
pop
pusha
insl
dec
xchg
in
push
daa
popa
pushf
rorl
loop
rcrb
aad
push
dec
xchg
xchg
pop
out
cmp
push
out
xor
icebp
dec
adc
lcall
aad
cmp
and
jmp
sbb
repz
pop
test
cltd
jns
repz
scas
mov
lods
mov
fs
push
jecxz
xchg
xchg
mov
nop
pop
mov
cmc
pop
lock
shr
sub
xchg
pop
shrl
int
fsts
jb
jne
cmp
and
int
aaa
insb
into
into
inc
and
pop
ret
dec
mov
rclb
cmp
mov
pop
jbe
insl
xor
or
adc
mov
fdivrs
and
popl
out
adc
int
and
lcall
and
add
cmpsl
xor
jecxz
mov
dec
arpl
insb
add
push
fidivl
dec
adc
out
shlb
test
dec
pop
cmc
xchg
imul
jmp
rcl
push
add
mov
fwait
rcrb
push
shrl
out
mov
xor
adc
sub
aam
imul
ljmp
dec
inc
call
call
pop
fistpl
out
xchg
cmpsl
out
pop
out
and
inc
aas
adc
jp
fisttpl
leave
xor
xchg
pop
aaa
sbbl
cmpsb
mov
push
ss
test
stos
in
xchg
xor
cmpsl
push
popfw
mov
outsb
sub
aaa
sar
into
and
lret
mov
mov
mov
add
adc
movsl
imul
fucomip
jle
or
xchg
pop
cmp
xor
stc
movsb
inc
repnz
dec
fsubrs
clc
xor
dec
out
iret
daa
inc
aam
mov
sub
pusha
out
or
mov
aam
fstps
arpl
xor
and
push
xor
pop
fisttps
loope
mov
adc
mov
ror
ljmp
lods
stos
fidivrl
ret
mov
pop
push
adc
push
add
lods
ljmp
sti
scas
nop
inc
out
jno
mov
dec
shlb
push
xchg
sbb
push
idivb
push
mov
test
add
dec
lcall
lods
pop
push
jge
sbb
ss
hlt
push
dec
in
or
addr16
ja
lahf
jp
xchg
into
mov
cld
out
push
mov
mov
mov
cltd
lock
and
adc
lds
ret
push
addr16
push
sbb
dec
jae
lcall
lods
adc
jnp
inc
shll
pop
fisubs
test
adc
cmpsb
cmp
adc
addl
gs
and
das
js
cmp
mov
mov
int
lods
ret
xchg
and
add
sub
lds
ja
mov
cld
je
dec
mov
out
fs
shll
xlat
sbb
popa
dec
or
and
mov
pop
stos
sti
stc
or
cltd
sbb
mov
push
adc
sub
shrb
mov
jne
xor
adc
mov
test
imul
xchg
popf
idivl
pusha
outsb
push
mov
ret
mov
cld
mov
push
inc
pop
es
pcmpgtb
mov
cmpsb
jecxz
jle
fs
sub
adc
in
and
iret
adc
das
xor
scas
sub
out
mov
cmp
das
clc
sub
rcll
dec
cmpsb
ljmp
loopne
test
in
dec
fisttps
mov
cmp
mov
fsubr
dec
jo
pop
mov
loope
sbb
adc
or
aam
mov
js
aad
sub
rcl
rcr
dec
shlb
cmpl
sti
into
insb
dec
pop
add
test
xchg
jae
pop
call
xchg
insb
add
mov
adc
pushf
outsl
xchg
cmp
jns
mov
dec
pusha
cmp
imul
inc
les
cltd
pop
add
pop
cmp
adc
mov
imul
xchg
mov
push
mov
pop
sarl
outsb
shll
punpcklwd
out
xchg
inc
jl
adc
loopne
hlt
cltd
sbb
mov
jge
insl
in
imull
pop
cmpsl
mov
lods
sbb
rcll
loopne
pop
mov
mov
mov
enter
ds
jmp
mov
test
mov
xlat
icebp
int3
inc
push
test
add
fiadds
and
pop
mov
pop
lds
jne
ret
movzbl
xchg
push
add
cmp
or
mov
lea
mov
and
and
adc
repnz
push
xchg
cmp
xchg
jnp
dec
adc
icebp
js
popa
es
out
mov
and
pop
sub
fdivr
cwtl
pop
inc
mov
add
fwait
jns
dec
mov
roll
loopne
sub
das
sub
in
adc
out
cmpsb
or
sub
call
and
addr16
imul
scas
sahf
dec
movsl
mov
mov
pop
xchg
add
ret
imul
mov
shll
shlb
mov
lcall
popa
popa
pop
in
sbb
inc
push
aaa
mov
orb
xor
scas
add
outsb
out
dec
inc
fwait
mov
pop
or
cmc
adc
outsb
adc
add
mov
js
push
pushf
adc
jnp
pop
sub
sub
ror
or
mov
inc
lea
xor
lea
push
jmp
loop
loopne
jnp
mov
add
jle
inc
mov
stos
lods
div
mov
in
jge
sbb
xchg
xchg
repnz
mov
sbb
aaa
inc
call
dec
sub
xlat
les
fwait
sub
fstpl
inc
cltd
into
leave
jns
sub
mov
or
cmp
out
cmp
sub
push
lods
test
and
mov
push
or
jmp
movsb
div
jnp
adc
insb
mov
and
push
dec
ficomps
fwait
scas
xchg
in
mov
jo
cli
add
jmp
insl
dec
mov
adc
jne
pop
insb
cltd
insb
js
pop
fst
shr
orl
inc
mov
push
lea
push
mov
fs
sbb
loopne
cltd
fcomi
jmp
jbe
push
push
xor
aad
cmp
or
xor
and
enter
daa
test
outsb
inc
jecxz
cmpsb
sub
icebp
pop
in
fstpl
jle
cld
mov
andb
mov
or
sub
fs
lods
insb
xchg
xor
call
inc
es
outsb
stos
mov
jp
and
cmp
lods
nop
ret
out
aam
lea
ljmp
or
fdivrs
xchg
jnp
lods
mov
jae
imul
insl
pop
pmaxub
fadds
push
shlb
in
mov
js
fwait
nop
cmc
sbb
push
movsl
das
jmp
gs
pushf
add
scas
and
and
mov
fistpll
dec
push
mov
adc
in
out
fcomip
jo
or
fistps
push
push
fdivl
lock
icebp
cld
faddp
movsl
dec
mov
adc
ja
cs
add
mov
inc
rcll
into
popa
cmp
jo
into
push
mov
aad
or
pop
jmp
pop
fisttpll
adc
arpl
add
in
outsl
ds
movsb
mov
cmp
pop
push
add
or
adc
arpl
ficoms
or
jp
call
orl
pusha
mov
push
pop
lret
cmp
jecxz
jb
and
jns
pop
mov
and
sbb
xchg
dec
mov
jbe
jl
adc
mov
inc
ret
test
insb
xchg
stc
jns
int
cmpsb
xor
xchg
mov
adc
lods
mov
xor
and
push
jmp
fs
pop
pop
jmp
mov
or
jbe
and
movsb
cmp
arpl
pop
xchg
xchg
outsl
daa
fwait
jmp
movsl
pop
mov
inc
nop
xor
call
lods
sbb
push
ret
sti
cmp
aas
xchg
or
adc
jmp
pop
cwtl
mov
movsl
push
jns
sbb
or
out
data16
loopne
cmp
shlb
mov
mov
xchg
fs
adc
popa
dec
dec
cmp
lret
adc
shlb
pop
cmpsb
xchg
aam
icebp
aad
and
stc
fbstp
xor
xor
iret
int3
aam
sub
mov
popf
cld
mov
les
mov
ja
fistps
fisubl
pop
ljmp
xor
hlt
movsl
cli
adcb
out
outsl
inc
out
sub
or
sti
sub
add
icebp
lds
jno
bound
pushf
mov
xchg
sti
mov
or
das
xchg
les
les
out
add
js
call
push
test
mov
insl
xchg
jle
add
fs
add
mov
lea
stos
jbe
xchg
lods
shlb
ss
imul
rcll
sub
xor
stos
dec
fstl
test
lcall
ror
imul
sub
push
jge
test
mov
mov
insl
int
pop
push
in
and
out
push
push
sbb
lahf
and
xchg
mov
inc
fwait
mov
xchg
xchg
jmp
stos
xchg
aad
add
aam
repnz
lret
pop
push
push
xor
sbb
dec
lcall
iret
xor
mov
decl
cwtl
pusha
push
cld
pop
lea
repnz
mov
dec
mov
inc
cmpl
sarl
fwait
pop
pusha
add
aaa
mov
movsl
fisubrl
xchg
jle
cmpsb
cld
sbb
mov
rcrb
daa
or
cltd
mov
jno
pop
and
cltd
pop
cmp
or
pop
xor
gs
shll
adc
dec
jnp
push
add
push
mov
adc
mov
xor
rcll
pop
leave
stc
dec
or
pop
or
xlat
jb
push
mov
aaa
ljmp
fisttpl
arpl
test
cli
dec
add
pop
dec
cmpb
push
repz
or
add
aam
fdivl
arpl
fcoms
push
inc
add
add
cld
sbb
stos
fld
sub
inc
enter
cli
xchg
dec
cmpsl
aas
push
push
fsubs
mov
clc
adc
mov
adc
sbb
jb
xchg
pushf
push
outsl
jo
repnz
pop
sbb
call
mov
pushf
ficomps
mov
lds
xchg
in
add
push
shrb
dec
and
xorb
sub
add
pop
add
test
jecxz
stc
negb
testb
push
into
jecxz
xor
xchg
nop
loop
pusha
fldl
or
xor
cwtl
out
mov
mov
mov
or
clc
add
xchg
mov
push
adc
and
pop
mov
ss
cltd
and
mov
je
fnstsw
jns
testl
jo
ljmp
imul
loope
mov
data16
cmp
outsl
push
mov
jb,pt
sahf
cmc
mov
push
mov
dec
repnz
push
out
out
pop
test
call
hlt
mov
shlb
lret
push
mov
andb
or
xchg
pop
sbb
sub
pop
sbb
mov
pusha
js
dec
push
out
mov
ss
cli
mov
xor
dec
iret
sub
outsb
ret
arpl
mov
or
test
into
or
add
cld
pop
pop
xorl
dec
xchg
mov
fsubs
sahf
in
cld
pop
mov
data16
push
adc
xor
adc
loopne
loopne
inc
dec
mov
and
cmpsb
or
and
insl
cmpsl
test
cld
ja
dec
rolb
mov
push
outsl
cld
inc
scas
dec
enter
xlat
add
and
cs
scas
bound
push
add
cmp
inc
mov
pusha
call
or
lea
bnd
jl
mov
sub
jmp
loop
xchg
sbb
js
pop
pop
enter
aaa
fnstsw
cmc
sarl
dec
sbb
sbb
outsb
enter
ds
cs
js
xlat
adc
or
into
nop
push
dec
leave
adc
ret
js
dec
mov
out
imul
lcall
xlat
fdivrp
ds
imul
out
outsl
jns
jbe
cmp
lahf
push
mov
jp
sbb
sahf
stos
mov
cmp
arpl
dec
stos
adc
sub
xor
insb
ret
pop
aam
inc
jbe
fcmovnu
mov
cmp
sarb
cmp
jae
sti
fmuls
popa
int3
or
loope
cmp
cmp
xor
test
cmpsb
adc
addl
pop
insb
jo
cmp
xor
sub
outsl
xor
push
ja
push
push
cld
int
call
ljmp
jge
xadd
pop
pop
add
testl
imul
mov
nop
and
cmp
add
cld
lods
bound
dec
test
lods
pop
adc
jne
dec
push
push
push
lahf
and
pop
push
dec
xor
and
pop
loopne
ja
push
mov
inc
dec
jle
aad
fldcw
sti
out
push
adc
test
xchg
push
dec
add
cmp
mov
mov
push
cmp
in
and
pusha
xor
or
or
push
movsl
aad
inc
xchg
in
pop
mov
icebp
sbb
adc
je
movsb
ret
std
into
pop
movl
push
xchg
scas
nop
dec
add
into
out
pop
xor
jmp
inc
int
dec
add
adc
sub
or
aam
ret
pop
cmp
cmp
mov
cmp
popf
fmuls
jle
cmp
add
mov
or
pop
out
sti
sahf
push
or
push
cmp
adc
adc
lock
sbb
mov
bound
popf
icebp
push
xchg
adcl
mov
dec
leave
mov
sub
xchg
out
adc
adc
sbb
inc
repnz
gs
enter
hlt
sub
xchg
mov
cmp
out
mov
lods
adc
aas
lea
sbb
pop
enter
adc
push
pusha
xlat
sarl
repnz
jbe
scas
sub
push
jb
mov
xchg
jecxz
fisubrs
pop
dec
cli
lods
jns
int3
into
lods
cli
add
jg
test
jg
adc
xchg
and
sbb
jno
mov
aam
push
xor
add
mov
jns
test
xor
push
call
out
pop
rol
sbb
inc
int3
xchg
inc
scas
add
scas
repnz
idivb
jg
repz
jmp
or
idiv
pop
pushf
enter
jns
or
out
ss
mov
add
lahf
and
shrb
in
jmp
xchg
sub
les
shll
imull
or
mov
xchg
lock
sub
stos
leave
loope
xchg
push
cli
sbb
fs
add
push
movsb
mov
sub
push
ffree
dec
push
dec
inc
mov
xchg
mov
dec
loop
xchg
inc
out
and
mov
or
mov
lods
and
mov
dec
ret
rcrl
push
dec
push
cmpsl
stc
and
xchg
pop
enter
xor
mov
push
dec
repz
cltd
xor
shrb
nop
jp
fistl
add
andl
mov
add
das
mov
aas
ret
andb
lcall
jg
push
sarl
cli
and
fcompl
cmp
shrl
adc
push
push
fsubrl
xor
outsb
imul
in
jl
cmovne
or
mov
lods
div
push
inc
push
mov
sub
arpl
cmp
sahf
or
jg
sbb
mov
inc
ljmp
es
mov
adc
pop
rcrl
mov
mov
decl
movsb
inc
loope
in
out
inc
rcrb
nop
xor
fdiv
mov
outsb
movb
in
lahf
pop
cmp
push
lods
pop
pop
ficoms
lods
push
addb
out
insb
fiaddl
pop
shl
xchg
mov
cwtl
mov
mov
or
enter
loope
pop
pop
leave
push
fwait
dec
mov
popa
xchg
in
prefetch
or
xor
fs
jno
clc
sub
cs
adc
sbb
mov
cmp
gs
jle
mov
xchg
jno
dec
enter
push
fwait
out
leave
jb
sbb
aas
push
icebp
push
and
dec
mov
or
sub
xlat
mov
sbb
inc
pop
jg
adc
loop
push
movsb
push
xorb
imul
mov
jecxz
gs
fisttps
push
xor
xchg
push
mov
mov
aas
push
jns
dec
or
xor
mov
adc
fstl
insb
ud2
push
movsl
or
test
insb
aas
outsb
sub
jne
ret
and
pop
ret
pop
test
addb
rorl
and
inc
lds
cmp
clc
sbb
lea
fists
pop
cmp
jge
adc
cmp
iret
mov
lods
ja
pop
imul
ret
icebp
cmc
jg
mov
in
aaa
shlb
out
pop
pop
adc
popf
jmp
in
and
lret
push
mov
loopne
adc
pushf
dec
jno
movsl
mov
mov
sub
push
mov
test
or
fiadds
xchg
push
jbe
loop
cmp
rclb
fisttps
mov
dec
loopne
sbb
call
jnp
push
int
xchg
shl
sub
lea
sub
sbb
jl
sub
add
inc
out
jne
int3
mov
inc
adc
ffreep
sbb
mov
xrelease
push
lds
leave
inc
hlt
out
lret
imul
dec
inc
sbb
daa
mov
xchg
dec
inc
out
sbb
xchg
std
dec
movsl
xchg
jl
data16
add
push
pop
inc
jp
movsb
push
jle
fldl
push
mov
jp
shlb
add
movsl
test
push
data16
mov
pop
call
sub
repz
xchg
testb
arpl
and
mov
sub
gs
jnp
xlat
fnstsw
jge
add
push
or
lcall
mov
sti
mov
outsl
loopne
mov
adc
fmuls
sub
xchg
push
lea
adc
add
sub
loop
xchg
call
mov
xchg
inc
xor
sbb
mov
inc
fldenv
addr16
rorb
sub
lret
inc
mov
scas
stc
push
in
mov
lret
cmp
lods
mull
xchg
jmp
jno
pushf
xchg
cld
pop
popf
insb
adc
out
test
loop
and
add
mov
jge
cmp
mov
addb
pop
insl
shlb
cmp
int3
jnp
cmp
enter
mov
and
cmp
mov
cmp
sbb
imul
pushf
fmulp
aas
lods
subb
test
loopne
nop
push
sbb
sbb
out
nop
jns,pn
adc
xchg
jmp
adcl
pushf
mov
movsb
inc
repz
aam
adc
gs
movsb
je
fistl
xchg
add
jne
incb
push
jns
dec
and
in
enter
imul
lret
add
mov
int3
cwtl
insl
lcall
mov
ret
cmp
xor
cmpsl
cwtl
test
cmpl
insl
pop
jno
fldenv
imul
arpl
or
mov
dec
test
and
int
inc
inc
or
mull
shll
push
mov
cli
stos
mov
std
dec
call
jns
fsubrs
push
repz
mov
sub
push
jle
mov
scas
repz
mov
inc
inc
lea
ret
and
inc
cltd
xor
lds
mov
shll
mov
mov
outsl
scas
out
mov
das
loope
add
test
mov
push
mov
xor
std
mov
mov
addl
cmp
push
and
aam
pop
mov
push
in
jno
sub
test
pop
xchg
out
pop
inc
es
add
test
stos
add
jmp
movsl
add
mov
mov
mov
cmp
cli
repz
ljmp
cmp
xchg
push
test
repnz
dec
jno
jg
fmuls
enter
or
sub
mov
shr
xor
cmc
push
dec
dec
or
and
cli
inc
hlt
rol
stos
lahf
or
ds
subb
lods
add
shrb
bound
pushf
cmc
push
or
repnz
shr
jno
mov
adc
mov
push
mov
push
pop
and
gs
push
stos
fs
mov
and
jmp
filds
push
ds
push
mov
andl
lret
and
pop
jae
mov
xchg
loopne
pop
cmc
adc
cwtl
lahf
mov
push
mov
mov
mov
pop
daa
adc
ds
xor
inc
fdivl
pusha
stos
mov
shl
push
and
jmp
cmc
inc
cmp
push
popf
push
mov
xchg
arpl
sbb
pusha
sub
shl
xchg
adc
add
sbb
or
scas
inc
push
popa
pop
mov
jnp
lahf
and
jnp
aad
sbb
sahf
sbb
scas
mov
add
lock
fwait
lcall
mov
es
inc
xchg
lcall
push
jns
sbb
leave
adc
popa
push
out
mov
dec
pop
xchg
mov
loope
or
sahf
push
xchg
mov
xchg
data16
sahf
sub
sub
mov
or
pop
rcll
into
ret
adc
sub
pop
out
into
lcall
roll
das
xor
mov
add
addr16
fwait
mov
adc
pushf
iret
addr16
pop
pop
add
je
pop
sbb
cmp
mov
dec
sbb
fimull
mov
dec
test
sub
push
cmc
rep
sarl
and
mov
sbb
dec
loop
aad
or
das
imull
inc
aaa
or
lahf
jg
adc
rol
mov
shll
add
popf
push
addr16
loopne
rorl
sbb
and
push
jae
mov
shr
popa
pop
pop
popf
mov
lret
lods
push
inc
mov
out
addr16
ret
cmp
dec
sub
or
xchg
and
iret
xchg
sub
cwtl
push
mov
aas
fdiv
inc
jg
ja
mov
cmpsb
nop
mov
jmp
ja
xchg
lds
xor
mov
cwtl
loopne
sbb
je
icebp
adcl
pop
mov
adc
and
cltd
or
test
adc
addr16
sub
adc
js
pop
mov
pop
push
jg
jmp
loopne
fs
sub
mov
xor
mov
mov
test
out
or
or
pop
cwtl
add
iret
jl
outsb
frstor
mov
repz
mov
xchg
or
push
push
and
pop
push
dec
pop
ljmp
ss
fnstsw
cs
loop
mov
lock
ds
inc
mov
jecxz
inc
mov
nop
cs
push
xor
add
loope
rcll
loop
xchg
filds
pop
movsb
inc
xchg
into
inc
jp
fdivs
call
outsb
and
cs
test
jno
stos
inc
fcmovnbe
pop
sbb
mov
leave
adc
xor
enter
jbe
ljmp
add
or
ficompl
popf
in
int3
push
cmp
jb
push
cmp
sbb
std
scas
or
les
int
mov
je
jg
sub
out
mov
testb
rcr
das
add
jne
and
int3
inc
mov
repz
adcl
inc
ljmp
cmp
cwtl
jp
aas
add
cwtl
lret
leave
jge
push
jg
mov
and
outsb
jp
jae
iret
int
cmp
out
fmul
pop
rcll
repnz
insb
adc
dec
lock
jmp
push
sbb
pop
scas
xchg
jg
test
in
push
jne
inc
push
hlt
xlat
les
sti
sbb
out
push
lret
ljmp
adc
js
jmp
daa
jmp
add
loop
jns
stos
loope
push
imul
mov
fidivs
pop
cmc
je
mov
fsubr
adc
dec
xchg
inc
fimull
xchg
dec
in
das
sub
adc
jb
and
push
fmuls
movsl
mov
andl
ret
mov
setae
cmpsb
mov
cmpsl
int3
pop
lock
fisubl
jmp
xor
push
sub
clc
bnd
cmpsb
fisttpll
jg
jge
pop
push
jbe
add
les
arpl
das
imulb
aas
cmp
or
test
adc
adc
xchg
mov
pop
add
enter
fnsave
sub
or
in
pop
cmpb
adc
cltd
jno
fdivrs
mov
inc
scas
lcall
aad
mov
sub
add
add
popf
lock
pop
aas
loopne
inc
ljmp
imul
lods
test
cmc
xor
shlb
dec
mov
test
aad
inc
and
addb
xchg
pop
pusha
stos
mov
jg
xchg
jl
sbb
fldt
mov
pushf
add
mov
scas
jne
dec
mov
jo
popa
mov
popf
repz
stos
ss
cmp
les
pop
ljmp
xchg
and
cmp
in
scas
xchg
loop
inc
xchg
adc
scas
inc
inc
inc
test
testb
insl
das
stos
nop
popa
mov
push
mov
imulb
in
popa
sub
inc
sbb
dec
ljmp
hlt
pop
pop
out
fidivrs
pop
ja
cli
popa
pop
dec
movsb
push
or
dec
inc
ja
clc
cmp
and
lcall
scas
rorl
push
fadds
daa
jo
push
push
mov
sub
add
mov
arpl
in
xchg
dec
inc
leave
aad
xor
lret
push
rclb
in
outsl
inc
xor
inc
sbb
cmc
cld
push
jle
sbb
adc
out
roll
sbb
xor
stos
das
mov
or
sub
dec
cli
pop
insb
jl
aam
imul
fnsave
pushf
mov
sbbb
pop
sub
lock
stos
mov
push
dec
insl
aad
mov
jecxz
fsubr
pop
push
jb
test
aaa
xor
fbld
push
in
jl
mov
sub
or
rcrb
xchg
lods
push
sbb
repnz
mov
jg
data16
adcl
xchg
inc
jne
jmp
and
inc
daa
cmc
xor
ret
mov
lds
cli
hlt
lock
inc
sub
mov
insb
mov
inc
inc
int
pop
in
inc
sbb
addr16
adc
psrld
mov
lods
add
fidivs
dec
shlb
sti
pop
es
add
aad
sub
mov
xchg
mov
test
add
mov
lea
xor
jg
adc
les
push
out
jl
pop
insb
loopne
xchg
je
xor
lods
jle
push
movsb
ljmp
jmp
daa
mov
xor
jae
sub
nop
test
jne
mov
cmpsl
jl
movsb
pop
fstpt
fiadds
loope
jns
mov
in
das
fisubrs
cld
int
enter
lcall
in
in
sbb
lock
lcall
add
jnp
sahf
cmp
push
lock
push
aaa
sti
xor
or
pop
int3
aam
adcb
nop
xchg
inc
or
imul
imul
push
mov
mov
ficomps
adc
xor
xor
incb
mov
lret
andl
rclb
cmp
pop
stc
add
lret
dec
mov
fadd
mov
mov
dec
pushf
scas
mov
and
mov
push
add
mov
stos
mov
iret
xchg
cmp
shll
in
push
cmp
enter
mov
sbb
inc
fdivrs
inc
sbb
mov
frndint
hlt
mov
push
xor
jle
mov
loopne
fwait
add
andb
inc
adc
fldl2e
xchg
xchg
pop
push
ret
loop
outsb
adc
and
push
pop
int
or
fwait
fwait
stos
mov
sub
cs
add
sub
push
or
out
sbb
mov
or
test
jge
pop
sub
sbb
sub
jae
lods
incb
test
scas
shld
divl
xchg
push
pop
lods
das
daa
xor
mov
dec
and
mov
mov
inc
ss
push
pop
and
data16
inc
movq
and
pop
lcall
fs
fimuls
aad
inc
aaa
fstpt
fwait
jg
jmp
sbb
and
into
lcall
stc
lds
sti
fdivs
stos
pop
mov
sti
and
insl
xor
outsb
call
jae
cwtl
jp
sbb
mov
insl
int3
sbb
mov
popa
cmp
call
ja
cli
and
add
scas
lods
xlat
andl
sbb
jb
into
cmp
jb
sub
cmc
repnz
lcall
daa
push
mov
mov
addr16
inc
or
mov
ret
fwait
incb
sub
mov
rorb
popa
cltd
xor
icebp
sub
pop
in
ljmp
sbb
inc
push
imul
mov
push
adc
inc
call
or
sbb
sub
repnz
test
push
aas
shrl
lahf
rep
inc
lea
lea
sub
pushf
in
jecxz
jb
xor
add
push
dec
lret
faddl
xchg
pushf
jns
xchg
xchg
jp
adc
fwait
les
fisubrl
and
addb
pop
std
xor
mov
addr16
cmp
imul
cld
roll
xor
jno
test
push
js
rolb
dec
and
adc
aad
push
incb
mov
add
jp
mov
cmp
sbb
adc
xchg
dec
mov
jnp
push
sub
leave
inc
sub
ljmp
pop
iret
std
test
push
lods
add
shll
add
sub
sbb
or
xchg
pop
pop
leave
dec
sub
sbb
pop
sub
jle
in
mov
pop
push
cmp
fmulp
jecxz
sti
nop
imul
mov
ljmp
stc
cltd
mov
mov
dec
push
cmpl
sbb
ljmp
pop
mov
clc
push
ficomps
aad
sbb
add
add
adc
jno
cld
fildl
pop
rorl
mov
mov
mov
push
cltd
fsubs
jb
mov
pop
jl
into
popf
jne
push
nop
scas
push
shl
xor
sub
imul
daa
inc
lahf
out
cli
xchg
call
js
cmp
mov
fstl
push
icebp
stos
fs
cmp
mov
xlat
adc
jle
jae
rorl
mov
push
andb
int
sub
and
loopne
dec
movsl
lret
and
jb
sbb
xchg
jge
mov
mov
jle
ds
ficoml
int3
mov
push
cltd
mov
lea
mov
mov
mov
push
pop
lods
out
xchg
cmp
aaa
xchg
adc
xchg
push
addl
mov
push
add
outsb
sub
cld
adcb
jns
stos
mov
call
mov
testb
and
mov
jb
repnz
fst
push
sti
and
mov
adc
aas
adc
jae
sub
mov
cmp
or
pop
mov
mull
inc
jp
fstpt
mov
jnp
jl
pop
mov
lods
cmp
dec
mov
inc
mov
sahf
dec
nop
adc
outsb
addr16
sahf
sbb
or
xor
pushf
inc
xor
cmp
mov
pop
or
pop
pop
addr16
ret
xchg
iret
dec
aam
sbb
cmp
mov
mov
fldt
pop
pop
loopne
sbb
insb
cmp
jmp
pop
std
adc
pop
daa
das
test
dec
lods
push
outsl
cmpsl
jmp
clc
cmp
mov
mov
test
loope
out
mov
loopne
bound
adc
xchg
sub
push
test
or
xor
mov
xchg
lock
and
fbld
sbb
sbb
loopne
test
mov
lahf
pushf
in
sbb
xor
lret
sarl
idivb
call
ret
inc
pop
cmp
repz
push
call
add
mov
pop
nop
push
fimull
dec
pop
pop
ljmp
pop
push
inc
jne
inc
test
cmp
scas
cmc
xor
hlt
out
xchg
fsts
and
test
mov
daa
jge
pop
jae
rclb
ret
cli
jl
in
and
adc
ret
push
hlt
sub
or
clc
dec
adc
es
dec
cs
pop
mov
insl
push
or
inc
insl
jbe
addb
or
divb
push
mov
sub
and
movsl
in
ret
dec
xlat
sub
mov
js
clc
xchg
pop
decb
sbbb
daa
mov
push
shlb
or
les
cmp
bound
fcomp
inc
insb
stos
repz
xchg
or
dec
test
fsubl
imul
icebp
jae
xchg
mov
pop
shll
frstor
mov
mov
outsl
xchg
mov
int
lret
push
je
sti
insb
das
inc
jl
or
or
mov
cmp
jmp
loop
imul
lea
leave
jecxz
pusha
scas
lea
scas
mov
jno
icebp
in
jl
push
mov
es
test
inc
sbb
cli
push
aaa
or
and
mov
jno
notb
in
mov
push
add
xchg
jnp
cmp
jb
push
cmpsl
xchg
sub
jle
sarb
pop
orl
in
cld
cmpsl
and
stos
xorb
adc
mov
outsl
jg
lock
sti
sbb
fsubl
xchg
fsubr
push
xchg
inc
es
xor
mov
cltd
xchg
xchg
cmp
add
mov
popf
cmp
fadds
arpl
mov
xor
xchg
mov
jge
xor
jo
clc
ficoms
xor
fcoml
sub
and
ret
out
fidivrs
daa
push
push
or
pop
fisubl
popf
bound
mov
dec
pop
lea
popa
sbb
dec
or
out
mov
cmpsb
sub
and
lahf
jnp
xlat
mov
push
jmp
call
mov
sahf
fwait
clc
pop
sub
adc
clts
xchg
cmpsb
and
insb
push
cld
jl
inc
scas
and
ret
mov
js
das
sahf
lods
outsl
pop
fistpll
pop
pop
stos
pop
lock
jns
clc
rcr
in
xchg
push
cmp
inc
jb
insl
lods
stc
call
sarl
jno
mov
or
sarw
mov
xor
inc
push
call
fidivrl
xlat
dec
inc
call
pushf
sbb
and
fisttpll
fstl
xor
divb
mov
shlb
sarl
push
das
push
sbb
add
or
mov
sub
gs
mov
jg
adc
subb
inc
fsts
inc
sbb
iret
pop
movsl
cmp
add
mov
sbb
fisubs
cmp
jmp
aad
or
jbe
bound
cmp
mov
icebp
or
enter
loope
aad
enter
add
rcll
sub
push
movb
int3
sbb
jae
sub
mov
xchg
mov
and
cmc
fwait
pop
scas
dec
xchg
out
jge
lock
inc
clc
push
std
imul
jmp
loopne
stc
out
pop
daa
movsl
icebp
adc
ret
cmp
in
fdivl
lds
lret
pop
loopne
add
pop
xchg
pop
cmc
lahf
fwait
imul
add
sbb
add
jno
jge
lahf
ret
adc
loopne
push
xor
cwtl
outsb
cmp
dec
gs
std
imul
mov
loop
rorl
dec
inc
cs
or
incb
ret
pop
cs
lahf
push
stos
xor
xchg
mov
imul
data16
mov
addl
adc
mov
dec
rorb
out
jmp
in
and
adc
cmp
int3
inc
cmp
in
jmp
cmpsb
xchg
xchg
in
pushf
sub
pop
popf
xor
mov
dec
cmc
fwait
outsb
xchg
and
jnp
sub
mov
lret
daa
fcompl
or
sub
sbb
aaa
insb
mov
cmp
cmp
mov
inc
lods
mov
fdivp
mov
pop
aad
xor
inc
mov
mov
dec
inc
decl
pop
sub
ret
stos
adc
leave
push
cmpsb
mov
ds
scas
lret
lcall
and
xchg
jbe
push
enter
sbb
and
cmp
cmp
outsb
stos
loopne
lret
mov
or
dec
mov
push
sbb
bound
adc
test
ss
push
test
jnp
sub
push
addb
sbb
mov
add
inc
pop
int
jns
popa
rep
and
mov
sahf
jle
sub
adc
notl
mov
movl
je
push
mulb
arpl
push
shll
mov
int3
or
and
and
lock
pop
scas
inc
sbb
pop
das
fcompl
add
mov
mov
dec
mov
cld
or
lds
push
fldt
lods
ret
iret
pop
hlt
pop
pop
and
push
fisttpl
mov
jae
mov
sub
and
cld
aad
out
xchg
test
rcrb
lret
jae
jl
lahf
clc
mov
enter
cwtl
jnp
addr16
push
push
xchg
cmp
sbb
cmp
das
popa
lock
pop
pop
sbb
out
sbbl
xchg
adc
js
aam
mov
jecxz
jns
or
fstps
mov
cltd
enter
outsl
lods
pop
mov
in
mov
mov
pop
ds
outsb
mov
cli
out
add
aaa
loope
jae
in
movsl
adc
adc
cmp
adc
adc
add
lea
pop
outsl
in
or
dec
ljmp
mov
xorl
bound
push
nop
xchg
mov
adc
mov
xchg
stos
jne
hlt
sbb
xchg
mov
aam
nop
xlat
add
mov
pop
mov
xchg
test
jmp
test
push
xor
and
push
imul
jg
add
jecxz
mov
sbbb
out
fidivrl
sbb
int3
xor
xchg
in
dec
nop
mov
or
inc
aaa
in
and
mov
cmp
les
pop
lret
sbb
xchg
divb
rol
imul
mov
cs
int
sub
inc
popa
test
jmp
mov
jno
stos
outsl
xchg
push
mov
leave
push
push
rorl
sbbl
js
push
mov
inc
cmpl
cmp
and
add
xor
jns
js
bound
lcall
lret
mov
cmp
push
mov
data16
lret
dec
orl
mov
jo
xor
mov
call
pop
aad
add
xorl
lret
in
sbb
lods
mov
inc
bound
sbb
adc
mov
mov
push
pusha
mov
mov
in
mov
int
test
sarl
jmp
call
in
mov
adc
jg
xor
jbe
cmp
push
out
shl
fsubl
out
pusha
ret
pop
cmp
xor
shl
mov
mov
dec
mov
fdivrs
cmp
insl
and
arpl
fcmovnb
clc
add
je
sarb
shll
lcall
insl
enter
mov
jl
into
jae
icebp
add
pop
loop
sub
sbb
xchg
sub
lret
mov
fcmovb
lea
cwtl
mov
dec
out
xor
and
pop
fbld
xor
rclb
add
mov
mov
int3
push
adc
lret
js
inc
cmp
cmp
inc
imul
inc
push
cld
and
or
jp
mov
std
mov
fnstcw
shr
lahf
inc
xchg
adc
scas
pop
jne
je
addr16
call
in
jnp
das
fiaddl
sub
xchg
sbb
dec
sbb
insl
cli
and
mov
cmp
sbb
mov
cmp
hlt
mov
pop
adc
sti
ret
sub
dec
mov
in
sbb
cwtl
shl
int
or
add
cmp
sahf
add
pop
fbstp
sbb
cmpsl
iret
stos
cmc
or
and
out
popa
scas
sub
sbb
xlat
push
xchg
push
lret
mov
fnstsw
jge
push
adc
inc
in
popf
push
xor
cmpsl
push
mov
insb
add
shrl
pushf
push
shr
adc
faddl
arpl
aam
sahf
testb
sbb
cmp
and
loope
adc
rorb
sbb
rcrb
std
push
pop
movsl
daa
xor
adc
outsb
jno
push
mov
out
outsl
add
out
or
sbb
push
mov
into
std
sub
sub
xorl
and
pop
mov
xchg
test
mov
push
cmp
xchg
and
adc
mov
test
jl
mov
and
inc
mov
lods
mov
add
in
dec
insl
cwtl
cmp
loopne
out
jge
das
aaa
dec
mov
pop
pop
scas
out
adc
inc
push
push
int
cltd
xchg
arpl
or
push
fisubrl
push
jo
popf
pop
pop
insl
ret
sarb
cmp
enter
lea
adc
fdivrs
cld
iret
jne
test
aas
xor
out
fnstsw
inc
mov
inc
je
popf
faddl
adc
mov
ljmp
mov
aaa
pop
pop
mov
cld
jb
loop
and
adc
inc
lcall
and
subb
lret
xchg
mov
in
les
in
xchg
int3
out
repz
ret
cld
sub
pop
hlt
xchg
push
push
outsl
xchg
enter
lret
lret
xor
jle
push
lods
mov
gs
repnz
inc
ret
out
lret
or
out
outsl
mov
idivb
jbe
pop
cmp
adc
lock
lock
lods
lea
jmp
cld
dec
sbb
add
rcll
or
jno
sbb
scas
and
movsb
faddl
sbb
imul
stos
shufps
aas
leave
mov
pop
xchg
cmc
lods
sbb
push
cltd
push
bnd
xor
cmp
sarl
inc
out
fwait
push
xchg
sub
cwtl
nop
xor
aaa
lcall
scas
scas
inc
mov
and
inc
gs
loope
pop
mov
ss
push
addb
nop
bound
mov
add
xor
rclb
sbb
std
pop
push
jnp
cwtl
ljmp
test
dec
adc
divb
mov
mov
mov
repz
push
cltd
or
jno
dec
xor
test
push
cwtl
jp
testl
mov
mov
or
mov
xor
fstp
hlt
rclb
and
out
or
cld
pop
inc
mov
shll
mov
mov
out
add
lods
movl
call
sub
into
es
mov
arpl
ss
mov
jg
dec
test
pop
push
xor
test
mov
sub
jno
loopne
sbb
mov
xchg
pop
imul
xor
or
pop
and
mov
jae
sbb
ss
fucomp
jae
jl
cltd
lret
mov
in
cmp
jle
mov
jecxz
push
xor
sbb
insb
lock
mov
xchg
or
pop
mov
mov
xchg
cmpsb
or
pop
clc
sbb
pop
clc
fwait
or
aad
xorl
cmp
jmp
icebp
and
xchg
sbb
mov
movsl
aas
or
sbb
loop
stos
sbb
mov
orl
sbb
cld
imul
icebp
pop
ljmp
inc
add
iret
pop
nop
xor
dec
or
jl
aas
add
cmp
iret
sbb
fiadds
adcl
sbb
push
in
mov
xchg
cmpsl
sub
sbb
cmc
outsb
push
sarb
sbb
enter
sub
lods
fidivl
adc
xchg
mov
leave
adc
enter
mov
aad
ss
cmp
or
sub
add
and
sub
push
xor
popa
jg
push
inc
push
lea
scas
orl
xorb
ret
pop
jge
sahf
xchg
cmpsl
cmp
movsl
js
movl
xor
gs
jecxz
icebp
aaa
cmp
jno
cmpsb
push
pushf
adc
xchg
call
pop
xor
or
iret
sbb
push
insb
jecxz
sbb
leave
sbb
lret
push
jle
in
pop
dec
dec
lods
push
fimull
bound
sub
ja
pusha
loopne
out
mov
popf
data16
mov
jnp
clc
lods
mov
mov
stos
dec
jbe
and
xlat
gs
movsl
in
pop
shl
cmp
pop
add
xchg
cmpsl
mov
jle
cmpsl
mov
cmpsb
inc
fs
xchg
imul
rolb
movb
pop
out
jp
test
jns
add
push
mov
inc
int3
mov
stc
loop
xlat
shlb
adc
pop
mov
lcall
sub
mov
ja
subl
adc
xchg
mov
rcrl
sbb
mov
pusha
mov
cltd
movsb
stc
clc
cmp
sbb
cld
mov
sbb
jno
xor
xlat
mov
ljmp
mov
dec
xchg
insl
push
inc
nop
insl
ss
push
aas
es
lret
fsubp
mov
fisubrl
and
mov
in
xchg
loopne
push
stos
push
sbb
rorb
into
movb
lods
repnz
xchg
mov
mov
sbb
push
sub
pop
std
cld
dec
adc
hlt
xchg
mov
add
mov
loop
test
pop
fwait
push
sti
xlat
mov
insl
jns
jbe
sbbb
rcrb
xchg
or
out
int3
pop
mov
scas
mov
out
out
mov
out
xchg
or
repz
push
push
mov
push
addr16
and
xchg
stos
ljmp
sub
mov
ficoml
int
ja
sub
into
push
mov
push
mov
push
in
xor
jbe
push
cld
movsb
test
mov
push
test
gs
cmpsl
mov
push
push
int
inc
movsb
icebp
inc
aas
clc
pop
mov
into
cltd
stos
mov
mov
ror
mov
cltd
mov
inc
xor
sbb
inc
ret
inc
cli
arpl
adc
adc
or
and
xchg
push
push
fmulp
or
push
or
mov
jae
sub
and
push
mov
aaa
sbb
add
std
daa
cwtl
pop
movsl
fwait
fwait
test
call
adc
cli
sbb
cmp
mov
pop
pop
jno
jl
mov
dec
fldt
out
rol
les
in
jge
shrb
loopne
lds
push
stos
data16
and
test
sbb
cwtl
fucomip
into
pop
aad
add
inc
je
push
sub
and
adc
cmp
dec
inc
jl
sub
shl
rolb
mov
outsl
leave
jmp
imul
mov
dec
sbb
fbstp
stc
mov
sbb
lcall
cs
xchg
pop
add
cmc
sub
jae
inc
dec
push
or
loop
enter
addb
sub
sahf
insl
hlt
iret
push
mov
ds
push
and
mov
ja
cmpsb
dec
push
xor
in
mov
sbb
cmp
mov
xchg
jge
shll
and
inc
sub
loop
repnz
mov
cmp
xchg
jmp
pop
fmul
mov
idiv
sub
mov
lods
outsl
xchg
movsb
adc
push
sbb
cltd
lret
bound
push
std
dec
stos
mov
lods
add
nop
cmp
push
ds
test
mov
into
or
mov
fsubrs
stc
insb
mov
adc
in
mov
sbb
aam
inc
movl
sbb
dec
mov
int
cmp
cmpsb
mov
push
sub
das
push
inc
loope
cwtl
gs
jne
or
sub
out
ds
sbb
int3
adc
loop
sbbl
cmp
or
or
jmp
jb
push
mov
xorl
data16
pop
test
enter
movsb
sub
dec
iret
rolb
inc
fstpl
jbe
jae
inc
pop
faddl
cmpsb
sub
mov
inc
ret
mov
sub
sbb
jp
cmp
sbb
std
add
mov
dec
ret
daa
cmp
stos
xchg
cld
daa
inc
mov
xchg
push
int
cwtl
dec
pushf
ror
rorl
sub
mov
sahf
jbe
shrb
test
cwtl
outsb
mov
mov
fistl
jae
mov
out
stc
dec
lahf
mov
loope
sbb
sbb
sub
int3
pop
test
xchg
mov
enter
out
cli
jp
pop
jbe
movsb
imul
mov
into
out
sub
jge
shlb
gs
dec
and
or
dec
jle
andl
lahf
or
les
in
call
push
sub
mov
hlt
inc
sti
mov
mov
daa
roll
push
das
cs
lock
dec
dec
or
mov
pop
xchg
fbld
adc
mov
xchg
outsb
pushl
aas
sti
sbbl
in
sbb
popa
cmpsl
repz
pop
add
jg
mov
scas
pop
mov
data16
insb
js,pt
adc
leave
rol
adc
sbbl
push
ljmp
mov
fisubrs
fisubrs
mov
inc
imul
push
leave
xor
aam
push
cmp
xor
xchg
sbb
test
xchg
push
sqrtps
enter
orl
ja
rorl
pop
fistpll
or
cltd
sub
jae
lock
ret
dec
rorl
jg
mov
fsubs
inc
das
rcrl
mov
fcoms
inc
dec
mov
in
mov
mov
in
loope
into
rcr
jp
popf
lea
repz
pop
ror
shrl
pusha
arpl
sahf
movsb
repnz
sub
and
inc
ja
pop
inc
insl
ljmp
lea
shll
jns
push
cltd
jne
cmp
pushf
std
jo
inc
push
std
mov
lcall
adc
sub
dec
mov
nop
jno
cld
push
popf
xor
in
call
lods
test
push
shr
out
jo
inc
daa
in
xchg
pop
and
pop
and
xchg
loop
cmp
and
push
sbb
jbe
xor
mov
mov
outsb
jecxz,pt
subb
pushf
int
mov
fwait
loope
hlt
mov
repnz
insl
jmp
xor
out
inc
mov
je
dec
xchg
xor
popa
fldl
in
adc
shlb
mov
add
push
loopne
jge
repz
xchg
imul
inc
int3
mov
es
lds
jnp
inc
cmp
inc
pop
ja
addr16
inc
shl
adc
pop
sub
scas
jle
pop
rep
xchg
fiaddl
aas
mov
jmp
jmp
or
call
and
das
and
std
pop
dec
outsl
ja
int
int
imul
in
pop
bnd
push
rolb
movsb
push
xor
rorb
jo
sti
in
test
outsl
sarb
out
add
mov
std
lcall
mov
cwtl
roll
enter
mov
push
imul
add
mov
aam
and
jne
test
fmull
cmpl
and
jne
jmp
negl
orl
cmp
std
sbb
dec
mov
push
lea
or
jecxz
adc
lcall
sub
insb
mov
clc
loope
cmp
shll
es
xor
xchg
push
xchg
hlt
cmp
rcrl
cmc
push
lret
out
pop
mov
sbb
sarl
insb
fs
out
cli
imul
mov
xchg
and
dec
mov
sub
ror
and
das
out
arpl
pop
mov
cltd
repnz
inc
push
xor
pop
jp
lock
or
idiv
adc
mov
and
mov
je
in
repz
pop
outsl
push
dec
ja
add
push
sbb
dec
movsb
fisubrs
bound
fadd
xor
jmp
mov
lods
mov
mov
js
cmpsl
fwait
inc
shrb
cld
insb
xor
pop
cld
outsb
sub
cmp
push
in
add
adc
adc
jecxz
mov
mov
push
stc
cmp
popa
cmpsb
jnp
sub
push
mov
add
jae
in
pop
sbb
mov
adc
loope
pop
lods
push
sahf
xor
testl
frstor
xor
sub
aas
cmpsl
inc
jge
and
scas
mov
mov
cmp
out
push
xlat
push
push
js
xchg
dec
add
push
repnz
shll
adc
stc
mov
gs
lea
sub
fld1
jl
shll
ficompl
sbb
out
js
call
sbb
addr16
xchg
lods
repnz
lods
ret
shr
inc
inc
rorb
int3
dec
jbe
dec
mov
test
pop
leave
icebp
enter
adc
sbb
mov
xchg
inc
fsubl
mov
cmp
jg
in
jbe
push
out
divb
lds
xchg
stc
push
add
lcall
add
sete
addl
sbb
imull
outsl
lods
dec
jmp
jb
aad
lret
xor
and
xor
enter
ss
mov
pop
jge
lret
sahf
insb
hlt
daa
clc
adc
imul
ljmp
into
orb
pop
out
les
push
push
sbb
outsl
mov
xchg
roll
aaa
mov
sbb
cmpsb
push
out
dec
xchg
fisubrl
ds
aad
or
dec
nop
stos
adc
mov
dec
pop
mov
loopne
or
adc
mov
outsl
stos
mov
xor
jo
lret
mull
dec
pushf
int
mov
xor
je
aad
dec
sub
mov
ja
mov
cmp
dec
rolb
aad
lret
jmp
sti
popf
mov
dec
mov
mov
adc
mov
sbb
lods
fdivs
mov
jg
pop
and
cmp
scas
fildl
scas
xchg
std
or
xor
sub
test
sti
mov
filds
xchg
daa
jmp
push
mov
mov
jne
fdivrs
mov
inc
jecxz
js
and
or
xor
jne
pop
mov
out
jno
jl
push
fs
fidivrs
push
idivl
nop
jns
xor
mov
cltd
ds
or
jmp
aaa
stc
cwtl
icebp
or
ret
push
mov
out
sbb
sbb
sbb
aad
jmp
int3
pop
sub
xchg
sbb
or
and
fisttps
sub
or
jnp
es
cmp
sbb
int
into
fistps
dec
or
rcl
ret
ljmp
test
xor
push
pop
ss
movsb
mov
xchg
fcmovne
cltd
xchg
lea
inc
sahf
and
xchg
xchg
cmp
fs
push
xlat
sub
fcom
addl
mov
in
js
mov
sbb
push
data16
sbb
out
add
xchg
pusha
mov
pusha
jecxz
imul
inc
inc
xchg
push
fucomp
ja
xchg
mov
sarl
mov
loope
hlt
loope
push
sbb
pop
xchg
scas
mov
dec
jbe
adc
sar
mov
ds
and
inc
add
or
in
gs
sbb
inc
adc
rolb
js
fnstenv
push
or
cmpsb
js
inc
nop
push
inc
daa
out
and
xchg
inc
pop
popf
enter
pop
push
xchg
jge
out
adc
ja
lock
addr16
inc
filds
mov
push
mov
scas
repnz
scas
mov
add
jne
cmc
enter
loope
mov
push
mov
mov
fnstenv
dec
jns
mov
mov
test
and
sbb
or
cmp
fwait
or
inc
lods
int3
add
stos
enter
ja
xor
xor
imul
sub
ret
pop
mov
dec
sbb
mov
mov
cmp
ret
rcrl
xor
subb
mov
je
pushf
std
loopne
cmp
gs
mov
and
mov
xchg
inc
mov
mov
xorl
in
aad
ret
adc
fmul
or
inc
insb
jo
xchg
sbb
sub
jle
inc
je
inc
js
xor
cmc
dec
test
mov
xchg
cld
movsl
push
lock
popa
insl
fisubs
out
addl
mov
jbe
xor
stos
dec
nop
js
fcoms
dec
insb
xor
subb
sahf
std
or
fcmovnbe
cmp
fstpl
sbb
jne
sbb
out
mull
aaa
cmc
in
jbe
inc
in
mov
push
aaa
or
fwait
icebp
sbb
cwtl
aam
push
movsl
ss
inc
or
outsb
dec
sbb
cli
ljmp
dec
mov
sub
push
addb
call
mov
lods
movsl
lds
mov
ret
push
sub
pop
sbb
and
dec
xor
mov
sbb
sub
and
adc
das
dec
into
inc
push
xchg
test
in
or
add
dec
mul
cmp
pop
mov
addl
cmp
lock
mov
cli
jg
daa
call
jecxz
push
test
stos
xchg
out
cmpsb
inc
push
rolb
pushf
pop
orl
scas
mov
and
xor
hlt
sbbl
es
in
pop
and
cmpsl
push
adc
push
pop
mov
hlt
insb
mov
les
cmp
jb
in
fiadds
test
fdivl
sub
push
cmpsl
dec
push
fwait
add
adc
insl
pushf
mov
pop
pop
inc
jmp
arpl
and
addr16
sbb
jge
sbb
aas
fldl
cltd
sub
or
mov
mov
xor
subb
and
jno
mov
sbb
aam
push
mov
push
cld
mov
lea
test
cmp
popa
int
cmp
xchg
push
xchg
pop
scas
xchg
mov
sbb
sti
inc
xor
xchg
mov
lods
push
lahf
xchg
shll
mov
aam
or
push
cmc
mov
movsb
mov
push
and
aam
mov
rorl
push
push
lret
mov
jne
cmp
xchg
and
lahf
cld
insl
push
add
mov
loopne
hlt
out
xchg
push
jae
adc
fistpl
sbb
jo
cs
sbb
sbb
and
mov
cmpsb
and
xor
add
add
xchg
mov
in
mov
inc
mov
or
repnz
jl
loope
mov
ds
jns
or
inc
pop
sub
lcall
pop
lahf
stos
sbb
nop
cmp
push
outsb
or
xor
mov
out
pop
and
xor
push
inc
scas
xchg
fsts
sub
dec
adc
mov
cwtl
cmp
mov
mov
addr16
push
divl
xor
cmpsb
repnz
pop
cmpsl
popa
mov
in
mov
jl
fnstsw
inc
adc
cld
bound
adc
test
pop
dec
cmpsb
shlb
jg
cmp
ret
fsubrp
dec
jle
pop
mov
dec
cmp
ss
aam
and
hlt
cld
and
mov
push
imul
add
sub
xor
mov
and
nop
xor
icebp
push
cmc
mov
mov
insb
loop
cmp
xchg
jp
mov
mov
adc
es
sbb
ljmp
loope
sub
imul
sub
xor
sti
mov
adc
inc
hlt
aas
sub
test
lret
xchg
leave
dec
lahf
pop
sub
jb
jne
jne
popf
sbb
and
ljmp
loop
je
mov
pop
testb
xor
pop
lock
sub
dec
mov
cmp
fimuls
lcall
sub
js
dec
jg
hlt
pop
jae
or
sahf
and
xchg
xchg
cmp
cmp
lcall
pop
mov
je
adc
fiaddl
mov
and
cmpsl
xchg
dec
movsb
lret
jbe
xchg
out
lds
and
stos
pop
aad
test
sub
sbb
pushf
pop
outsl
jl
pop
lods
mov
dec
in
into
push
in
dec
cmp
dec
out
xor
or
lods
aad
mov
cmp
pop
mov
fcomps
xchg
rcr
into
mov
iret
out
pushf
mov
cmp
pop
jb
xchg
add
lods
sti
dec
xchg
jle
hlt
and
cmp
in
outsl
inc
lret
pop
jmp
idiv
dec
sti
mov
rol
mov
stc
out
push
xchg
or
addl
loopne
int3
mov
mov
or
mov
jo
adc
shl
mov
cmp
xchg
push
mov
mov
int
fildl
shrb
or
stos
insl
push
sti
dec
fwait
xchg
cmp
out
adc
in
jg
dec
push
xorb
fstl
cmp
mov
mov
adc
mov
icebp
faddl
cli
cmc
imul
inc
push
jne
dec
xor
mov
imul
mov
in
jbe
in
icebp
mov
add
dec
push
rcrl
adcl
fimuls
or
insl
xchg
cmp
add
jbe
mov
mov
aaa
mov
rcrb
inc
pushf
mov
gs
jge
mov
xor
hlt
fsubrl
in
ret
xor
push
cmp
fwait
sti
rcrb
arpl
cld
mov
cli
in
fcoms
outsb
repz
xorl
sbbl
vmptrld
ds
pop
test
pop
jle
mov
push
loope
xchg
das
fs
push
sahf
mov
mov
jnp
xor
inc
xchg
lods
push
push
jecxz
inc
movsl
lods
mov
mov
movsb
mov
or
repz
cltd
or
les
inc
push
out
cmpsb
imul
and
movsb
jne
adc
test
popa
mov
fdivrp
xor
loop
inc
lret
in
xchg
leave
pushf
inc
popf
aam
fbstp
add
hlt
lcall
popa
xor
leave
stos
pop
cmp
jns
jb
into
fs
les
in
sub
mov
ja
cmpsb
shrw
cmc
jmp
or
jp
jae
nop
jno
movsb
notl
mov
inc
mov
mov
fimuls
fwait
sti
out
mov
dec
addr16
mov
sbb
fs
push
and
dec
jo
cmp
cmp
xchg
ret
jnp
imul
cmp
sbb
cmpl
mov
out
adc
pop
orb
mov
es
nop
aad
enter
lahf
pop
or
mov
xor
xor
loope
lcall
and
stos
inc
ds
mov
ds
and
sub
std
cmpsb
cld
push
int
outsb
lret
jg
hlt
mov
aaa
and
lea
sub
mov
mov
xchg
outsl
cmp
ds
fistpl
cwtl
in
nop
add
xor
adc
addl
xchg
and
mov
stos
icebp
ret
clc
lods
add
ja
pop
fstpl
inc
popa
mov
mull
test
pop
sub
cmpsl
or
mov
shlb
clc
mov
push
test
sub
jge
sub
mov
sbb
sub
jp
adc
add
adc
js
iret
flds
mov
fdivl
inc
dec
xchg
sub
inc
nop
add
xchg
dec
dec
popf
sbb
push
mov
int
cmp
pusha
or
mov
ret
xor
data16
jmp
add
mov
inc
cltd
jmp
shll
aas
or
icebp
clc
stos
sub
cwtl
pop
fisttpl
mov
mov
int
shlb
divb
push
cmp
ds
jno
imul
insl
ja
pushf
ja
sarb
mov
fldt
test
int
fsubrl
lcall
fsubrl
sbb
inc
dec
lods
arpl
mov
pop
arpl
test
cwtl
out
mov
jp
js
add
imul
xor
insb
daa
pop
pop
push
mov
mov
jp
mov
nop
lea
mov
push
jge
adc
fmul
lods
jne
xchg
lret
cmp
jae
or
jb
movsb
stos
pop
nop
es
mov
inc
jne
int3
int3
jns
xchg
jo
jnp
btr
add
sahf
mov
xor
fwait
popf
push
pop
push
jno
jge
xchg
pop
idivl
jmp
add
adc
mov
add
xor
faddl
mov
data16
in
dec
out
ret
pop
add
fdivrs
loope
jecxz
push
or
sub
and
adcb
test
int3
add
cwtl
fsts
and
jno
sbb
leave
pop
lcall
dec
inc
push
pop
lods
data16
xchg
fbld
repz
mov
or
aad
in
test
mov
xor
das
xor
sbb
shrb
or
ja
rorb
jg
aas
test
xor
xchg
clc
loope
addl
insl
cltd
jo
cmpb
aad
dec
mov
sub
pop
pop
in
ss
jo
lds
adc
shl
cwtl
mov
mov
dec
into
in
and
sub
clc
stc
or
ljmp
pop
in
xor
sbb
push
add
aas
mov
pop
mov
lcall
jmp
adc
fcmovnbe
setno
fistl
sbb
test
push
cli
movl
and
cmp
cmp
notl
adc
daa
dec
or
inc
icebp
pop
idiv
pop
mov
mov
jbe
jns
mov
int
subb
dec
je
inc
hlt
fsts
mov
and
adc
sbb
insl
pop
leave
push
fdivrs
cmp
mov
push
sbb
adc
push
jo
xlat
mov
inc
scas
std
sahf
scas
xor
adc
dec
lea
das
xchg
add
adc
scas
add
imul
jle
inc
mov
loop
mov
ja
lret
movsb
mov
pusha
movsl
ficoml
imul
daa
rol
outsl
imulb
adc
shll
push
jns
inc
jecxz
les
sub
in
adc
jp
sub
xor
xor
and
mov
xchg
stos
pop
jmp
pop
mov
ljmp
jmp
and
xchg
out
or
aas
pushfw
jmp
mov
pop
daa
sbbl
jae
jge
dec
or
jb
mov
test
repz
adc
popf
jo
sub
out
jmp
lsl
loope
mov
adc
xchg
jmp
cmp
sub
pop
mov
sub
push
push
mov
rcll
jbe
add
and
pop
mov
cmp
mov
xor
pop
iret
lods
aam
cmc
fdivs
jne
jge
pop
popa
jle
pop
jge
xchg
dec
aam
imul
inc
int3
out
pop
stos
punpckldq
sarb
adc
dec
mov
cmp
inc
dec
pop
xchg
dec
or
pop
test
dec
jge
mov
jae
ficompl
bound
rorb
pop
fchs
cs
test
cld
stos
lods
and
icebp
inc
and
xchg
lods
lods
mov
add
push
mov
push
and
dec
loopne
add
xor
cmpsb
sbb
dec
jno
flds
lods
pop
imul
pop
sbb
inc
nop
js
jne
push
sbb
pop
xor
ja
push
sbb
mov
out
push
dec
pop
repnz
jle
and
out
cmc
inc
pop
push
pop
mov
in
pusha
in
and
std
xchg
fnsave
mov
shlb
sbb
ja
mov
fisubrs
push
insl
sbb
out
adc
jo
inc
mov
push
jbe
add
pop
or
push
pop
bsr
stc
outsl
sti
xchg
cmp
mov
adc
push
xchg
ja
popl
divb
pop
mov
cmp
dec
inc
pop
aad
mov
dec
inc
xor
inc
cmc
rcl
inc
lods
ss
out
jbe
loop
lea
mov
cmp
shrb
lock
dec
iret
lock
outsb
outsl
sti
sbb
aas
xchg
pop
cmp
sbb
lods
ds
dec
call
mov
lret
adc
xorb
movsb
ficompl
inc
andb
sbb
shlb
and
cmc
mov
rol
clc
stc
mov
push
push
add
sub
xchg
jns
xchg
adc
and
and
test
cmp
arpl
adc
mov
sti
adc
pusha
add
jne
xlat
bound
mov
out
call
xor
add
pop
das
movsb
mov
push
scas
subl
andl
popf
xor
gs
std
sub
inc
jbe
or
push
sbb
popl
lea
rorl
or
cmc
in
movsb
repnz
aam
fisubl
adc
dec
adc
out
std
repz
and
int3
sub
psubb
loopne
int
test
movsb
xlat
xor
mov
adc
movsb
xlat
pop
sub
cmp
cwtl
add
scas
and
sub
dec
and
xor
stos
push
ds
xor
xchg
cmpb
sub
push
mov
xchg
xlat
dec
mov
adc
std
or
loope
lock
pop
pop
or
inc
pop
pop
pushf
xchg
scas
loope
not
shl
insl
fisttpll
dec
popf
movsb
arpl
and
scas
mov
divl
mov
popl
jne
fldenv
movsb
js
fbld
mov
mov
add
xor
es
adc
aam
jns
cmp
mov
xchg
mov
fnstenv
jmp
pop
and
push
cmp
cltd
orl
inc
xor
push
bound
stos
jle
mov
inc
jmp
pushf
ret
sbb
insl
fsubs
in
insl
iret
gs
jle
pop
clc
sahf
and
daa
dec
les
or
xchg
faddl
jge
clc
lret
fdivrs
sub
add
mov
jmp
cmp
cltd
xor
mov
and
xor
shlb
aad
cmpsb
cli
cwtl
jle
lahf
outsb
imul
mov
mov
mov
mov
outsb
mov
test
sbb
mov
mov
jae
push
mov
cmp
adc
mov
sub
in
pop
popf
loope
fdivs
push
xchg
xlat
cmp
loope
and
sub
pop
mov
pop
in
mov
cld
nop
mov
pushf
pop
pusha
ret
addr16
push
int
ret
pusha
repz
mov
xchg
iret
add
outsb
push
push
inc
in
mov
or
xor
inc
mov
adcl
mov
lea
js
mov
mov
xchg
cmc
mov
mov
stos
sbb
lret
cli
and
mov
shlb
xchg
sbb
in
ja
xchg
imull
ret
frstor
imull
loop
xor
call
cmp
ja
rcrb
add
sbb
stc
sub
stc
pop
inc
sarl
int3
fistpll
jecxz
stos
sub
sbb
aaa
ret
sub
and
hlt
inc
cmp
mov
and
push
shlb
cmp
sub
inc
mov
fisubrs
push
iret
mov
pop
ret
sar
adc
repnz
imul
ret
inc
mov
sarb
jae
pop
repnz
ret
push
adc
lcall
cmp
fistpl
mov
lret
imul
lret
mov
mov
in
fcomps
and
push
int
jo
ljmp
mov
dec
pop
mov
adc
mov
jmp
and
sub
push
push
inc
out
iret
push
dec
jecxz
pop
std
mov
fwait
insl
push
cmpl
add
sub
dec
fnstsw
xchg
ljmp
hlt
cmp
lcall
icebp
sub
nop
mov
pusha
leave
les
imul
cmp
cmp
push
jb
cmpsl
and
mov
jmp
dec
mov
jae
sbb
sbb
insl
push
into
jae
jmp
test
pop
add
xchg
movsb
enter
test
pop
mov
mov
arpl
adc
ret
pushl
loop
xor
jl
bound
inc
inc
popa
push
add
and
shrb
bound
dec
adc
test
adc
imul
aam
sbbb
aaa
pop
jmp
or
subb
xor
and
push
pop
ror
jle
gs
xchg
shll
daa
dec
cli
push
scas
mov
xlat
aas
lods
xchg
insl
outsl
jno
loope
mov
add
lcall
clc
ficoml
test
jmp
xchg
test
scas
add
pop
icebp
add
outsb
inc
push
push
dec
pushf
mov
iret
bound
xor
sbb
jecxz
ljmp
lods
inc
gs
out
mov
inc
mov
inc
inc
pop
mov
fwait
out
aaa
lea
andb
sub
nop
dec
and
pop
daa
xorl
cmp
fnstenv
lcall
imul
sbbb
xchg
mov
test
xchg
fchs
fldl
data16
or
clts
mov
shr
out
outsb
cmc
sub
aaa
fisttpll
addr16
jno
out
popf
fidivrl
mov
sub
jae
js
xor
int
pop
xchg
mov
aaa
pop
inc
dec
jb
lods
into
loope
mov
out
cmp
repnz
enter
fs
lock
test
xor
scas
xchg
push
lret
jb
sti
addr16
iret
fstp
movsb
and
dec
lea
jae
out
inc
xchg
add
hlt
invd
nop
pop
pop
insl
add
outsl
jle
or
in
adc
in
mov
fldcw
movsb
inc
xor
ret
xchg
std
insl
push
adc
inc
mov
iret
aam
cmp
sbb
cmp
or
into
fstpt
hlt
cmp
ret
xor
popf
mov
sbb
or
inc
in
cmp
jmp
dec
cmp
notl
mov
pop
pusha
in
mov
leave
int
cmp
sub
outsb
cwtl
push
js
ljmp
insb
mov
jnp
psubusw
jno
mov
test
popf
popf
adc
fisttpl
add
push
push
stos
and
sti
pop
sbb
jle
out
add
dec
jg
mov
mov
dec
ret
xchg
cmpsl
test
jns
mov
ljmp
cltd
inc
jns
int3
popf
and
adc
pop
and
push
pusha
mov
cmp
ja
push
int3
sarb
xchg
adc
inc
cmpsl
push
aaa
dec
mov
cmpsb
fmull
sub
push
mov
int3
and
js
xor
xor
push
xlat
sub
lret
sbb
sub
std
xchg
lds
outsl
inc
push
pop
pop
jge
fisttps
mov
call
test
rolb
pop
mov
ja
dec
adc
fcoml
adc
pop
push
daa
daa
int3
mov
xor
xlat
loop
nop
xor
mov
mov
add
outsb
bound
mov
xchg
xchg
mov
scas
gs
enter
sub
adc
add
sub
xchg
jbe
or
sahf
xchg
std
push
push
je
and
mov
xchg
xchg
pop
mov
aad
test
and
cld
pop
mov
push
mov
ret
jbe
stos
shl
xchg
outsl
push
js
loope
mov
inc
or
jg
pop
hlt
xchg
ss
add
sub
ret
dec
add
xchg
test
mov
loop
testl
xchg
outsb
xor
loop
cltd
mov
push
xor
repnz
mov
ds
cmp
mov
popf
or
ret
dec
sbb
adc
xchg
sbb
daa
xchg
adc
aas
xlat
inc
int3
shrb
pop
int3
xchg
clc
cmp
push
sbb
xchg
aad
cmpsl
xchg
test
sbbb
bound
push
or
cmpsl
repz
xchg
pop
push
jmp
fadds
adc
sbbb
inc
popf
pop
out
add
sub
or
out
fwait
loope
fiadds
mov
inc
sub
jne
add
mov
push
cs
add
mov
xchg
pushf
sti
neg
decb
mov
outsl
cli
mov
adc
movsl
pop
push
push
pop
jne
jmp
push
inc
and
push
inc
cmp
mov
or
mov
in
sbb
mov
add
mov
fdivr
in
popa
ds
jge
loope
daa
mov
in
mov
dec
sub
out
push
cwtl
xlat
mov
dec
add
mov
mov
pop
sbb
pop
xchg
xor
inc
xor
hlt
repnz
bound
xor
mov
add
fcmove
sarw
dec
jp
mov
ret
lcall
push
push
cli
repnz
ds
mov
imul
dec
out
sbb
sbb
int3
mov
in
mov
fwait
sub
decb
stc
pop
in
mov
push
aad
cltd
scas
mov
test
cld
jno
dec
mov
out
scas
pop
les
test
call
loope
je
mov
enterw
aaa
adc
fs
shlb
movsb
fildl
push
cmovl
pop
dec
jecxz
sub
imul
xchg
cmp
mov
push
mov
mov
je
mulb
popa
xchg
xchg
loope
pop
in
fisttpll
jne
jnp
out
orl
push
cmp
dec
add
outsb
add
and
inc
cmpsb
push
xchg
mov
inc
xchg
add
cld
jae
sbbb
in
call
or
cli
xor
cli
jg
je
hlt
mul
aaa
int
int
jecxz
jle
jb
jo
in
xchg
sub
arpl
jg
pop
mov
pop
cltd
dec
lahf
movsl
fildll
addr16
jne
and
ds
jb
out
lret
jmp
pop
dec
or
xor
sbb
aaa
scas
ja
add
push
add
rorb
mov
ljmp
pop
xlat
or
pop
jo
cmpsl
pop
scas
xchg
push
xor
add
lcall
dec
mov
in
xor
add
cvtpi2ps
mov
inc
stc
out
push
scas
jo
std
adc
cmp
aas
mov
or
fldl
testl
pop
cmp
mov
js
sub
mov
mov
push
dec
int3
mov
fstpl
or
jle
dec
mov
inc
insl
clc
call
pop
les
xor
loop
enter
orl
mov
xor
shlb
cs
loope
adc
mov
dec
iret
or
aaa
and
cs
enter
push
sahf
jecxz
dec
sbb
movsb
dec
mov
mov
and
repnz
push
xor
out
pop
adc
mov
adc
testl
movsb
xor
mov
xor
dec
cs
xor
cmpsl
pop
gs
mov
test
leave
fs
daa
mov
call
decl
mov
mov
fsubrs
sub
jns
xchg
sub
inc
cmp
loope
sub
pop
jge
sbb
push
imul
adc
fiaddl
mov
mov
movsl
xor
test
insb
push
cld
and
dec
lods
movsb
push
icebp
or
jg
lahf
jae
cmp
fiaddl
jae
testb
sbb
push
je
pmulhw
pop
jnp
push
mov
data16
in
xchg
test
jge,pt
ja
mov
lret
mov
jno
aad
mov
add
test
pop
fldl2e
pop
jl
push
and
mov
cmp
clc
pop
push
dec
push
movsl
mov
sub
cmp
pop
dec
push
add
push
popf
incl
mov
dec
shrl
into
push
jmp
nop
dec
cwtl
lock
jle
push
inc
cmp
mov
sahf
xlat
pop
jno
addr16
mov
call
leave
daa
fwait
aaa
mov
lock
mov
mov
or
pop
out
daa
fcoms
adc
lods
sbb
dec
mov
insb
xorb
rcll
addr16
fs
in
xor
push
cwtl
test
cmp
sub
ret
imul
adc
and
sub
popa
ret
xor
adc
pop
cmp
repnz
lock
sbb
sub
jle
outsb
adc
test
scas
int
daa
push
scas
or
dec
aas
fsts
test
orb
mov
mov
bound
mov
inc
push
mov
pushf
fistpll
mov
inc
in
mov
outsl
dec
pop
test
lock
ss
sub
pop
jb
add
push
out
xchg
jne
inc
arpl
jno
xchg
mov
popa
xor
frstor
insl
pop
lret
jmp
pop
sbb
mov
ljmp
push
rorb
loopne
in
mov
xor
jb
lock
pop
ret
mov
jle
insb
cmp
mov
pop
fildl
cltd
xchg
shll
test
add
cld
and
or
test
dec
sti
dec
cmp
and
or
out
mov
cmp
push
jl
lcall
adc
mov
mov
pop
push
xchg
cmp
push
adc
sub
sub
lods
bnd
mov
cmpsl
push
sbb
adc
test
sbb
fldln2
andb
sbb
xchg
nop
inc
pop
imul
rclb
addl
sbb
dec
pop
test
loopne
aam
cmp
addb
lret
cli
pop
pop
test
adc
adc
test
movsb
jg
adc
mov
fs
int3
mov
add
aas
sub
call
dec
mov
xor
adc
rcl
imul
repz
sbb
and
imul
push
cmpsb
dec
cli
movsb
cmp
incb
movsb
xchg
bound
pop
sbb
mov
inc
mov
xchg
or
mov
popf
jb
xchg
roll
mov
imulb
mov
jo
mov
cltd
outsl
fisttpl
popf
mov
ret
and
xchg
lret
sti
jmp
jnp
sub
xor
mov
out
jns
pushf
shrl
pushf
mov
sub
je
add
lret
into
mov
push
ss
fisubl
gs
or
out
mov
cltd
outsb
push
das
out
push
into
push
outsl
fimuls
repz
sub
mov
mov
or
stos
cmpsb
orl
mov
cmpsb
jno
mov
mov
aad
ret
cmp
mov
and
sub
cmpsb
in
addr16
adc
sbb
and
push
js
cmp
sbb
xor
stc
xor
fists
cs
xchg
leave
stc
stc
mov
ret
test
mov
sbb
sbb
adcl
pop
or
xchg
or
in
aam
inc
xchg
jmp
mov
aad
fcomi
adc
shlb
out
jbe
sbb
outsl
in
outsb
dec
pcmpgtb
movsl
or
push
jno
jl
mov
push
sahf
mov
and
mov
mov
add
pop
in
out
int
cmpsb
js
daa
or
mov
xchg
ljmp
insb
mov
stos
call
mov
repnz
inc
js
inc
or
cmpsl
mov
mov
jp
xchg
and
dec
push
pop
mov
jne
cmp
or
addr16
push
jo
mov
jmp
int
push
mov
repnz
xor
and
xchg
divl
sbb
outsl
pop
incl
call
nop
xchg
mov
adc
leave
or
jne
test
pushf
sbb
xlat
jns
pop
test
adc
repnz
push
neg
pop
adc
xlat
adc
mov
pop
hlt
jnp,pt
xchg
fwait
sbb
in
mov
push
in
mov
jmp
out
and
mov
xchg
cmp
fadd
rorl
leave
lock
out
ja
rcll
or
sub
sti
mov
ljmp
adc
cmpsb
dec
subl
xor
insl
insl
xchg
inc
push
lods
or
sbb
inc
pop
out
test
nop
xor
sbb
xchg
cmc
in
arpl
cwtl
or
fisubrs
sbb
mov
inc
or
fmuls
idivb
addb
rcl
int3
inc
setne
ret
jb
mov
enter
sub
mov
jle
movsl
push
je
add
icebp
les
mov
sbb
or
mov
push
cmp
lea
jnp
sub
sbb
push
aas
mov
jge
or
imul
xchg
mov
push
jmp
out
push
test
add
in
xlat
repnz
sbb
xor
dec
int3
daa
sub
fwait
mov
in
clc
dec
and
dec
test
enter
mov
cwtl
xor
dec
sub
mov
subl
shlb
cmc
lahf
stos
xchg
fbstp
ja
outsb
std
loope
insl
lret
xchg
jge
and
xchg
inc
xor
out
scas
lcall
jo
jns
pop
jbe
dec
xor
jmp
nop
xchg
int3
inc
mov
dec
out
clc
fwait
add
cwtl
aaa
push
add
sub
bound
sbb
dec
fucomi
lcall
dec
inc
nop
dec
je
jne
push
add
ja
out
subb
fwait
or
mov
inc
xchg
jmp
outsl
lcall
outsl
sarb
imulb
ret
xor
xchg
xor
mov
lods
ljmp
inc
dec
insb
cmp
or
int3
stos
pop
scas
mov
lods
enter
push
mov
test
jecxz
imul
inc
pop
inc
outsl
mov
mov
push
lds
or
psubsw
jno
pop
jle
inc
or
loope
mov
fistpl
ret
clc
push
inc
cld
cmp
adc
mov
repnz
sahf
pop
jbe
mov
pop
mov
dec
xor
arpl
je
inc
push
das
sarb
sete
mov
xchg
shrb
mov
or
xchg
test
stos
jae
or
lods
xlat
popf
outsb
mov
cltd
pop
stos
inc
xor
jae
test
jno
xor
cmpsl
dec
pop
lret
fidivl
inc
xchg
cmp
jge
jae
push
dec
mov
shrl
lcall
fstpl
sbb
xor
xchg
ljmp
rorl
xchg
push
lods
jae
jae
mov
sbb
mov
push
int3
jb
lahf
fwait
cld
xlat
mov
pusha
ss
inc
ss
xor
xor
cmp
push
or
mov
mov
xchg
push
test
push
mov
xchg
and
das
fsubrl
mov
into
cmpsl
lds
jbe
and
out
es
push
xchg
shll
nop
jmp
cmp
jae
movsl
ret
ret
or
inc
inc
out
push
xor
ljmp
insl
pop
and
mov
cmp
sub
sbb
test
pusha
adcl
hlt
test
shrb
add
cs
fisttpl
push
cld
dec
cmp
bound
mov
repz
mov
pop
xchg
fdiv
xor
pop
add
es
jle
movsl
and
push
mov
add
ret
add
lea
es
xchg
lods
out
sub
mov
pop
dec
les
jbe
jne
mov
imul
lods
pusha
cmpsb
pop
sub
mov
call
mov
lea
call
or
shlb
ds
sub
jo
jb
cld
push
dec
lcall
cmp
mov
cmp
xchg
inc
test
stos
lea
xor
xchg
into
mov
cmp
xor
adc
fisttpll
lret
repnz
mov
loope
in
test
bts
jb
arpl
loopne
lea
enter
in
movsl
std
aam
pusha
dec
jnp,pt
cmp
stos
adc
dec
scas
xchg
inc
sub
rcrb
xor
stos
mov
sarl
add
mov
in
cld
push
sub
cs
out
and
push
scas
nop
jns
jbe
jb
fcoml
sarb
pusha
and
in
pop
lds
sbb
negl
and
aad
mov
dec
pop
aas
cmp
inc
rolb
cmp
cltd
imul
stos
cmp
in
push
push
leave
dec
and
sub
out
add
mov
hlt
mov
dec
mov
or
mov
sub
and
stos
mov
jmp
pushf
stc
mov
mov
xor
das
jmp
jae
pusha
jg
adc
aad
bound
mov
adcl
shll
jecxz
outsb
test
jbe
mov
addb
xchg
in
cli
push
pop
outsl
add
out
in
mov
fwait
mov
fistpll
shld
popf
sbb
mov
pop
aam
mov
dec
push
dec
in
lret
pop
push
pop
stc
and
js
jecxz
imul
repz
or
inc
xchg
pop
imul
adc
xor
fcompl
hlt
add
xor
mov
aas
ljmp
dec
into
dec
faddl
inc
pusha
jge
cmp
dec
loop
test
dec
cs
mov
mov
mov
arpl
andl
mov
mov
push
testb
xchg
flds
mov
mov
push
sahf
scas
add
pop
mov
pop
add
in
mov
and
inc
or
fisubs
sbbl
mov
add
dec
sti
rorb
cli
scas
inc
inc
inc
sti
mov
mov
mov
rcll
cld
mov
xor
hlt
insb
jp
xor
gs
movsb
cli
ds
or
mov
inc
imul
xor
push
xlat
out
shll
xchg
mov
mov
gs
inc
iret
push
mull
mov
repnz
xor
pop
imul
cmp
dec
lock
lock
push
add
movaps
xchg
sbb
ret
pop
shlb
pop
xorl
xchg
sbb
or
outsb
mov
testb
ret
push
inc
jae
dec
mov
pop
gs
xor
adc
push
pop
fnsave
dec
nop
jecxz
or
cmp
ret
pop
dec
mov
jge
sub
in
loop
test
outsb
cld
adc
cmp
ret
outsb
and
lods
xor
sub
mov
adc
stos
xchg
std
movsb
ss
inc
out
push
pushf
and
mov
ret
cmpsb
or
stos
sbb
and
xchg
lahf
stos
cli
or
cmc
push
mov
ret
pop
jb
call
lcall
add
fists
leave
adc
mov
sub
cwtl
sbb
aad
lods
js
xorb
mov
lds
pop
cld
shlb
dec
push
pusha
incb
int
bound
shrb
and
in
cmpsb
pushf
push
lret
mov
out
ficoml
movsl
sbb
dec
gs
fs
cli
in
or
mov
negl
add
pop
int3
push
mov
jno
jnp
fs
inc
xchg
test
and
aaa
je
loope
and
data16
and
inc
sub
mov
test
lock
inc
loope
dec
sbb
adc
push
std
jns
and
data16
sub
loop
arpl
in
out
push
jno
loop
mov
sub
push
pusha
call
out
out
sub
fstl
dec
or
lcall
push
jbe
ficoml
leave
movsl
adc
aad
test
shlb
cmpl
sub
mov
mov
leave
popl
dec
push
fwait
pop
ret
out
xchg
push
or
mov
lds
sub
insb
ljmp
test
push
mov
loopne
jmp
sti
insb
addb
and
outsb
pushf
and
pop
stc
xchg
or
repnz
rolb
push
pop
mov
rclb
push
or
xchg
movsb
push
add
push
jecxz
mov
jns
addr16
jae
out
cs
jb
int
test
mov
ficoml
adc
or
out
jnp
fs
sub
pushf
lret
aam
jp
sarb
jb
fwait
mov
adc
lock
mov
cmp
mov
je
jl
push
stc
mov
cmp
std
sub
cmc
cli
imul
int3
dec
adc
mov
mov
adc
les
dec
sub
mov
outsl
daa
loopne
jno
mov
jbe
imul
lods
xchg
stos
and
or
shr
push
sbb
inc
aad
dec
or
sbb
into
stc
lcall
fucomp
xor
pop
jb
xchg
outsw
mov
lahf
add
stos
idivb
mov
fwait
stos
push
shrl
add
aad
add
push
cmpsb
push
imul
push
popf
push
jp
pop
push
test
loope
je
stc
rcr
cmp
xchg
outsl
or
mov
ficomps
mov
int3
push
pop
jecxz
fidivrs
add
cmp
aad
dec
out
test
jno
xor
fstl
out
and
insl
push
fiaddl
outsb
addr16
dec
ficoms
jne
out
mov
ret
pop
xlat
fsubl
scas
jne
ficoml
jbe
mov
hlt
sti
dec
addr16
negl
loop
pop
cs
aaa
xchg
xchg
cli
inc
sub
les
pop
and
mov
aaa
sbb
cmp
or
jb
xchg
das
sub
out
cmp
jno
push
std
fstps
push
pop
out
mov
add
fdivrl
lret
hlt
dec
rol
push
add
icebp
dec
jmp
sub
mov
mov
jbe
dec
mov
jle
movsl
shlb
aam
iret
fstpt
lock
dec
xchg
mov
and
dec
xchg
sub
adc
popa
stc
scas
outsb
mov
jnp
sub
es
hlt
bnd
xchg
fistl
mov
add
ss
cmc
adc
mov
push
cmpsb
or
out
add
lods
fnstsw
scas
mov
aam
push
cmp
xchg
jl
xor
xor
jecxz
jae
sbb
jbe
mov
mov
in
push
cmpsb
dec
hlt
int
or
es
pop
shr
pop
sub
or
dec
dec
lcall
jl
jno
test
out
pop
daa
nop
icebp
sbb
lret
mov
out
sbb
icebp
ret
mov
sar
inc
jmp
aas
sub
es
stc
adc
pop
scas
cmp
jo
std
xchg
and
push
ja
bound
pusha
lds
lods
mov
cld
xchg
adc
in
and
decl
imul
repz
xchg
iret
stos
sti
dec
test
test
inc
mov
xchg
into
dec
push
jmp
jge
sti
js
mov
sub
xor
inc
lcall
popa
mov
notl
test
hlt
and
gs
mov
test
sbb
mov
jecxz
mov
sbb
or
mov
rcrl
filds
inc
test
ljmp
dec
add
insl
shlw
sbb
mov
or
aaa
mov
pop
fldenv
lret
xchg
test
xchg
jno
push
shll
lcall
dec
sub
fimuls
call
sub
sbb
jae
sub
and
xor
cwtl
cmpsl
inc
cmpsl
xor
pop
mov
jno
jl
aas
es
in
mov
cmpsl
data16
fmul
push
dec
push
mov
outsb
xchg
fisttps
xchg
sub
jmp
or
nop
imul
cmpsb
mov
aas
es
sti
dec
jne
mov
inc
jge
xor
clc
xorb
adc
std
imul
push
dec
adc
pop
xor
pusha
iret
push
test
sub
xor
jb
jne
sub
inc
sub
sbb
sub
mov
rcrb
popa
add
insl
scas
aad
sbb
pushf
pushf
rcrb
ds
jmp
repnz
pop
int3
pop
roll
add
mov
cmp
pusha
andb
rcl
call
test
repnz
adc
jne
loope
lea
repz
fadds
dec
icebp
sub
sahf
jae
pop
push
jae,pn
popa
sub
adc
and
in
ljmp
test
ret
jp
jae
int3
dec
int3
mov
push
lock
dec
inc
rorb
push
ffreep
and
sbb
jns,pt
xor
push
loope
aas
and
inc
icebp
mov
inc
xor
imul
int3
sbb
loope
xchg
aam
stc
vmwrite
and
mov
mov
fstpl
push
stos
in
fsts
ret
add
pop
lea
xchg
or
leave
in
out
fdiv
loope
pop
leave
aaa
das
out
mov
mov
cmp
mov
shrl
push
je
outsl
lret
test
ret
jnp
mov
push
push
push
xchg
rcrb
fs
mov
or
and
in
inc
or
xor
outsb
insl
push
jne
jmp
in
rorb
or
push
inc
iret
jne
xchg
test
xchg
sbb
fucomip
cmc
xchg
shl
mov
enter
cmp
sbb
stc
mov
cmp
xchg
mov
shlb
icebp
or
mov
cmp
decb
cld
sbb
sbb
or
lock
lea
xchg
cmp
je
scas
push
or
inc
mov
shl
adcb
sar
inc
test
out
popf
iret
and
ret
jle
cmp
ficomps
outsl
xchg
in
sbb
arpl
lret
push
sub
jbe
stos
cmp
rclb
lahf
nop
push
orl
test
mulb
lods
lods
daa
mov
fcmovb
cmp
adc
sbb
aad
aam
push
inc
inc
xchg
out
flds
test
movsl
mov
lcall
cmp
iret
mov
cmpsl
xor
push
insl
sub
cld
mov
dec
dec
mov
repz
and
mov
xor
ja
cmp
lahf
mov
inc
clc
fistpl
cmp
mov
sti
push
xor
xchg
mov
lahf
jmp
sti
loop
cmpsl
fiadds
push
aad
jl
push
jmp
shll
and
std
inc
sahf
out
insl
push
or
dec
cmp
ds
repnz
test
add
add
push
lret
mov
and
add
shr
out
add
loop
fwait
scas
dec
and
mov
jmp
fwait
iret
fists
add
enter
or
jecxz
addl
stc
jecxz
dec
jns
stos
or
sti
decb
outsl
inc
adc
fldenv
lret
mov
test
adc
movsl
fcmovb
fidivrs
mov
pop
in
mov
sbb
pop
pushf
sbb
and
jo
sbb
or
jno
xor
and
stc
xchg
hlt
sbb
xor
sub
gs
aad
jl
cmp
mov
je
shl
icebp
jecxz
and
mov
in
negb
daa
mov
iret
in
dec
insb
outsb
insb
jb
jns
pusha
jecxz
ja
xor
mov
arpl
jo
mov
jns
or
lea
mov
mov
sbb
inc
sbb
mov
into
aaa
adc
xor
fldt
xchg
or
shrl
push
aas
test
cmp
outsl
loopne
jno
jmp
cmp
push
jns
pop
jl
xor
and
test
jbe
adcb
or
in
pop
push
cmp
bound
and
cli
pushf
cmp
clc
popa
pop
cmp
push
mov
movsl
scas
jnp
sti
sbb
shll
aad
mov
dec
shlb
cld
and
sbb
or
dec
cmp
nop
ret
dec
in
cmp
jmp
mov
jmp
sarl
andb
shlb
xor
sub
lea
jg
push
fnstenv
bound
aad
sbb
and
sub
and
sub
es
or
in
scas
cmpsl
sti
sbb
jge
stos
icebp
cmp
xlat
ss
outsl
cmp
daa
push
mov
dec
push
add
mov
jle
rol
sbb
push
shll
mov
lods
pop
and
out
jns
pushf
mov
push
movsl
lods
jno
push
sbb
rcr
pop
lds
xor
imul
aas
bound
in
xchg
and
mov
pop
push
notb
idivb
rorb
xor
andb
loope
fidivl
mov
mov
cld
js
xchg
mov
inc
outsl
mov
popf
mov
movsl
adc
jg
pop
mov
inc
push
jnp
xchg
jle
nop
jno
mov
pop
or
aam
iret
mov
pushf
sbb
xchg
das
push
or
cmp
mov
rcr
fsubrs
pop
and
fisttpll
enter
adc
lahf
popa
sub
out
lock
jnp
dec
pop
movl
cmp
fidivrl
dec
test
mov
adc
and
fistps
mov
inc
or
orb
rcll
adc
inc
jmp
jnp,pt
pop
repnz
bound
push
in
fidivl
add
pop
xchg
in
cld
imul
not
aad
inc
mov
cld
fidivs
push
lock
js
lahf
pop
and
enter
minps
cmp
ret
shl
pushf
or
xchg
in
xchg
add
dec
inc
add
mov
xlat
jns
fs
add
gs
sti
pop
pusha
xchg
data16
idiv
ja
push
dec
idivl
aas
adc
fdivrl
inc
jnp
outsl
sbb
stc
pop
push
or
into
test
mov
mov
test
outsl
add
int
add
orl
jno
in
cltd
fldt
add
dec
idiv
imul
cmp
mov
insl
stos
cmp
ja
cmp
incl
dec
jnp
pushf
ja
mov
and
mov
roll
xchg
andl
mov
jl
jl
outsl
lret
add
out
add
jg
ret
ja
decb
add
lods
ret
jnp
arpl
leave
xchg
jmp
iret
inc
jmp
imul
movsl
inc
or
fildl
mov
ja
cld
pop
add
adc
jns
mov
mov
sbb
sbb
or
xchg
cs
mov
stc
cltd
loope
repz
mov
aas
push
repnz
push
jecxz
mov
scas
mov
xchg
mov
clc
repnz
mov
or
cmc
sbb
outsb
ljmp
jg
in
dec
cmpsb
lret
clc
notl
inc
xor
popf
dec
xchg
lods
and
jge
xchg
jnp
std
dec
lahf
xchg
mov
sub
std
sti
adc
dec
push
push
int
test
jae
mov
enter
pop
repz
mov
push
shrb
ja
test
mov
jp
cltd
lcall
sub
shlb
mov
sti
out
stc
xchg
ret
cs
and
addr16
ss
in
mov
xchg
int3
fldcw
jbe
jb
fs
add
and
pop
push
fs
xor
push
insl
repz
jecxz
hlt
rcll
stos
mov
cs
jmp
arpl
into
test
inc
sub
rcrb
sbb
mov
js
sbb
or
out
mov
mov
shl
push
and
mov
repz
sahf
fidivs
fwait
pop
sbb
or
stos
sub
mov
scas
adcb
push
nop
stos
adc
lods
es
stc
cmpsl
js
test
mov
xchg
jmp
cwtl
inc
jne
and
add
jl
mov
sbb
pop
lret
repnz
mov
lcall
not
inc
aas
jl
pop
and
mov
xchg
xor
clc
popf
inc
sbb
loop
lret
push
into
fcoms
scas
cmpsb
xchg
rcrl
imull
lea
add
fstps
mov
pop
dec
mov
sbb
std
lds
fsubrs
dec
cmpsb
or
mov
pop
shl
addb
js
pop
xchg
sub
and
add
jl
adc
aam
ja
jge
xor
adc
jp
jns
repz
mov
pop
mov
sahf
bnd
scas
into
cmp
mov
sub
inc
sub
cmc
dec
push
jle
out
sti
push
and
lock
popa
jno
adc
fildl
ljmp
jbe
faddl
loop
jns
sub
sbb
icebp
sub
inc
inc
inc
pop
inc
fwait
xor
cmpsb
xor
sub
enter
int3
dec
push
out
dec
call
jmp
fs
test
sbb
xchg
pop
in
pop
in
flds
mov
lret
pushf
push
inc
adc
cmp
cmp
push
iret
pusha
scas
pop
ss
and
repz
inc
pop
in
mov
push
lret
add
dec
cmpsb
xor
mov
out
ds
mov
insl
cld
xchg
xchg
sbb
repz
mov
leave
aam
jmp
xchg
jb
jo
fldcw
jmp
fldenv
mov
sti
pop
negl
cs
out
pop
shrl
leave
fdiv
repnz
or
fiaddl
dec
pop
out
cmp
leave
mov
cli
jge
jbe
test
pop
lods
inc
add
mov
ret
ds
xchg
inc
iret
add
lahf
add
cmp
adc
mov
cmpsb
mov
inc
movsb
sub
xor
and
daa
ja
and
jmp
and
or
fucomp
pop
adc
std
xchg
andl
add
and
cmp
add
repz
xchg
sarb
push
out
xchg
call
sub
in
add
loop
mov
push
and
push
dec
adc
xorl
cmp
in
testb
mov
mov
jmp
jg
out
lods
sarl
inc
mov
fidivl
xchg
addr16
pop
jno
or
pop
das
cmpsb
or
addr16
insl
mov
es
sarl
or
pop
pop
xchg
mov
in
testl
and
in
push
arpl
repnz
mov
out
mov
xchg
mov
sarb
aam
movsb
mov
push
mov
xchg
jle
push
xor
or
xor
push
xchg
enter
jbe
cmpsl
imul
lods
xor
mov
xchg
and
mov
lods
mov
aas
std
adc
test
ret
arpl
js
lods
add
adc
fs
adc
xor
sub
ret
lock
fmuls
in
mov
insb
or
pusha
mov
arpl
sbb
inc
sti
pop
jbe
xor
nop
into
int
call
cwtl
call
sub
sub
xchg
sbb
dec
pop
add
inc
loope
scas
outsb
pop
scas
jae
sub
jp
fidivl
mov
ficomps
mov
das
mov
enter
cmp
mov
fsubs
sub
inc
pop
addr16
ss
sti
pop
hlt
in
xchg
fisttpl
inc
insl
pop
xor
test
push
cmp
jl
nop
lds
push
dec
xchg
cmp
mov
lock
inc
jb
popf
shll
xchg
mov
in
xchg
jo
dec
shl
sbb
pusha
pop
stos
filds
daa
adc
pop
xchg
shrl
out
cmpl
lea
out
sbb
insb
jo
xchg
push
mov
or
cltd
ja
mov
xchg
addr16
movb
mov
inc
rcrb
test
loope
fidivrs
int3
mov
daa
pop
add
mov
js
mov
fsts
andb
out
jle
and
mov
out
pminsw
pushf
in
outsl
testl
enter
movsb
repnz
xchg
inc
xor
mov
sarl
lahf
mov
fidivs
vpsubw
cmp
push
js
jno
adc
mov
ss
xor
xchg
push
and
mov
fiadds
xchg
sbb
adc
pop
fcmovbe
mov
mov
int
repz
fwait
jg,pt
scas
incl
cltd
movsl
lea
ud0
rcl
adc
int3
sbb
in
pop
sub
sub
bound
imul
mov
adc
enter
sub
stc
out
jae
add
ror
dec
xchg
es
sbb
sahf
mov
adc
inc
push
fmul
decb
mov
mov
lock
mov
popa
xchg
dec
test
repz
add
pop
mov
jnp
adc
xchg
push
lods
sbb
mov
add
pop
fsts
and
add
adc
testb
fldl
jnp
addl
aam
dec
mov
mov
test
push
test
mov
push
lret
pusha
mov
enter
xchg
fadds
pop
leave
leave
cmp
and
adc
leave
jge
insl
rcrb
aaa
pusha
xor
sbb
enter
push
or
or
cmc
mov
mov
add
movsb
push
mov
mov
jno
cmp
imul
sbb
stos
push
adc
outsb
pop
inc
mov
dec
push
adc
aam
imul
insl
add
sbb
mov
xchg
fidivs
mov
xchg
int3
icebp
cmp
shrb
aas
mov
dec
incb
mov
pop
sub
inc
movsl
imul
pop
push
sbb
cld
or
leave
xor
xor
shlb
or
cmpsl
or
add
sbb
pop
mov
push
jno
mov
push
cmpsb
scas
les
and
out
or
test
xchg
ret
add
dec
or
xor
jae
test
daa
shrb
add
leave
or
les
shrl
shl
push
add
out
and
adc
sub
inc
in
daa
shll
sub
xchg
jmp
std
out
jmp
or
cmp
into
data16
add
into
cmp
xlat
push
aaa
pop
xchg
and
mov
xchg
or
scas
in
fcmovnbe
xor
adc
shrl
xor
stos
add
loope
xchg
xchg
cwtl
jnp
loope
shll
faddp
stos
sti
enter
test
sub
fcmovbe
imul
push
pop
sbb
lods
push
or
in
mov
or
pop
pop
psubusb
dec
shrb
xor
push
adc
cs
cmp
push
push
lahf
sti
pop
mov
cmp
lds
mov
arpl
adc
outsb
xor
or
clc
bound
int
mov
add
push
adc
push
xor
cmpsl
cmpl
aad
out
dec
pop
push
aas
jl
adc
push
and
hlt
lcall
in
xchg
call
dec
rclb
repz
mov
hlt
add
push
fcmovnbe
in
gs
addl
jmp
jp
shlb
dec
sub
sub
or
jmp
aaa
fimuls
test
mov
imul
cmc
xor
ljmp
outsb
cmp
cmpsb
in
outsb
mov
dec
cmpsb
pop
dec
int
ljmp
cmp
dec
leave
or
es
xchg
sahf
cmc
pop
in
pop
inc
dec
dec
pop
jb
dec
lock
sahf
movsl
sbb
xlat
movsb
inc
adc
inc
stos
and
pop
mov
cmpsl
fisubrl
or
dec
cmp
cmpsl
sbb
je
in
faddl
aad
push
xor
cmp
popl
and
mov
mov
push
movsl
cmpb
adc
add
or
out
lahf
adc
je
imul
xchg
cs
and
rcrb
dec
push
in
or
mov
cwtl
mov
lods
xchg
cld
out
mov
test
mov
sub
xor
xor
lret
flds
mov
cltd
sub
jp
in
cmp
movsl
jno
pop
adc
xchg
xlat
sti
push
addr16
fcmovu
dec
push
cmp
cmpsb
loopne
push
and
mov
ljmp
nop
idivb
je
repz
mov
jl
jnp
jbe
scas
xchg
in
sbb
ficomps
xchg
adc
jg
movsl
sti
sub
add
sub
into
mov
mov
in
or
ret
adc
xor
mov
jl
mov
mov
mov
nop
cli
adc
xchg
cmp
fiaddl
mov
mov
stc
je
sub
test
xor
notl
gs
push
nop
jecxz
dec
daa
cmpb
mov
dec
sub
bnd
ja
push
scas
pop
sbb
adc
pop
dec
test
shrb
addr16
mov
dec
dec
add
std
jl
jo
and
xor
sti
js
jge
lcall
jp
push
fldcw
loop
stos
testb
stos
sbb
insb
aam
enter
mov
shll
scas
mov
inc
in
adc
aas
call
or
jo
fstps
jae
mov
mov
xchg
scas
xor
cmp
or
pop
cwtl
or
pop
cmp
shl
nop
jne
daa
cmp
movsb
into
jp
mov
push
adc
fwait
dec
xchg
push
andl
inc
jp
push
outsl
mov
dec
xorl
add
mov
int
aam
sbb
pusha
lcall
inc
mov
add
and
shrb
mov
inc
fpatan
out
mov
pop
and
cmpsb
sbb
icebp
add
xchg
leave
cmp
hlt
sbb
xchg
jge
cmp
sahf
jae
jle
sub
xor
sbb
and
js
sub
jmp
mov
jo
imul
adcl
jb
in
jge
enter
movsl
sub
mov
jns
xor
mov
inc
insb
push
int3
sti
push
idivl
iret
pop
rcrb
add
xchg
fcom
jmp
std
rcr
jg
test
jp
xor
sarl
jmp
in
push
push
cli
adc
jl
scas
insl
and
jecxz
add
out
fldln2
xchg
ds
or
das
pop
aas
rclb
std
into
int
xchg
ss
mov
movsb
dec
pop
xor
jo
push
or
aaa
mov
in
out
leave
jge
sarb
insl
and
imul
arpl
dec
cmp
mov
mov
xchg
cmpsl
add
ds
lcall
fistpl
mov
imul
pop
cmp
mov
insb
scas
outsl
ret
jo
mov
icebp
int
outsl
dec
cmp
int
xor
jge
adc
andb
or
pop
inc
mov
cmpsb
and
push
inc
in
out
mov
push
adc
test
imul
mov
mov
mov
push
fs
int
and
aaa
addl
xor
xchg
inc
inc
bt
pop
bound
arpl
mov
adc
inc
or
inc
push
lods
sub
scas
in
scas
sub
das
dec
sbb
rcrb
out
cwtl
mov
shrl
lret
push
ret
jecxz
rorl
in
push
xor
ljmp
jmp
xor
das
enter
sub
adc
mov
rclb
out
mov
pop
pop
add
call
sbb
inc
push
pushl
aad
push
inc
fidivl
es
lret
or
xchg
add
inc
jmp
sbb
sub
xor
repnz
inc
xchg
lock
pop
mov
bound
fistl
addr16
cltd
jge
or
and
lock
mov
lock
sbb
rcrl
pop
sub
or
ret
push
jp
push
mov
lea
stos
iret
out
pop
mov
out
gs
xchg
scas
gs
ds
cmp
mov
insb
or
jl
xchg
fstps
rorb
xor
push
insl
popa
jge
pop
pop
cmp
sub
pop
push
adc
jne,pt
in
add
mov
or
push
sub
pushf
call
jb
mov
xor
ljmp
inc
adc
ds
or
xchg
jnp
jae
popa
cmpsl
daa
dec
ja,pt
push
fnstenv
push
mov
test
mov
ds
mov
add
jge
sub
mov
mov
xchg
mov
xlat
mov
mov
xlat
daa
leave
push
and
scas
movsl
icebp
mov
and
js
and
pop
cli
xchg
movsl
xchg
push
clc
mov
push
ja
and
rorl
ljmp
xchg
daa
lahf
imul
shll
cmp
mov
add
push
aam
test
pop
dec
xchg
imul
aaa
enter
or
popf
scas
imul
mov
std
xchg
dec
lcall
push
pop
or
jecxz
or
sbbl
test
int
imul
mov
push
jecxz
ror
jne
inc
je
sbbb
xchg
sub
jb
dec
repz
in
sbb
cmp
stc
dec
or
mov
ficompl
scas
xchg
rcr
adcb
jo
incb
jle
loope
fwait
lds
fndisi(8087
mov
popf
xchg
dec
mov
insb
lock
inc
or
xor
cmpl
pop
bound
dec
mov
push
ljmp
repnz
arpl
cs
iret
orl
mov
pop
sub
dec
sti
mov
push
mov
leave
lods
ss
sub
or
xor
pop
or
and
dec
arpl
divl
push
or
lods
add
adc
test
fstpl
and
and
sbb
ret
or
repnz
ljmp
jno
cmc
fimuls
or
aad
lret
and
fidivrl
movsb
mov
pusha
push
sbb
jnp
dec
insb
push
and
mov
aaa
and
xchg
inc
jge
js
lods
add
sbb
inc
push
lock
roll
enter
fidivs
push
push
inc
xchg
fistpl
dec
pop
pop
call
cli
mulb
repnz
adc
cmp
mov
dec
jecxz
clc
rolb
dec
imul
jbe
sbb
xchg
mov
inc
mov
jbe
or
mov
push
adc
xlat
sbb
cmp
sbb
cmp
jbe
popa
mov
xor
mov
lahf
out
scas
xchg
or
punpckldq
mov
xor
push
test
test
mov
ds
dec
loopne
data16
pop
iret
les
add
test
and
stos
jnp
fs
in
imul
xchg
sbbl
inc
push
sahf
sbb
push
jb
insb
dec
out
xor
dec
hlt
sbb
xchg
cltd
inc
lock
femms
subb
xchg
pop
mov
jmp
push
push
jnp
repnz
adc
xchg
cli
mov
sub
adc
mov
rcll
push
dec
ret
push
push
pusha
gs
push
push
jo
push
cmp
mov
xor
push
sub
out
jb
pop
or
xlat
mov
sub
fidivs
repz
cmp
out
std
cwtl
jb
jno
push
insl
addr16
test
punpckldq
xchg
adc
adc
in
dec
mov
es
pop
pop
xchg
jg
mov
add
ret
scas
mov
aam
stos
insb
inc
cs
in
adc
mov
push
cmp
mov
repnz
js
lahf
lods
inc
mov
cmp
test
cmp
mov
cli
sbb
sub
scas
jne
mov
cs
in
add
arpl
mov
lret
insb
fs
enter
jno
pop
sub
jge
outsb
sub
adcb
hlt
inc
in
repz
pop
xchg
xor
push
iret
and
loope
jg
cmp
adc
mov
add
cmp
sbb
jne
enter
mov
aas
mov
pop
mov
xchg
mov
xchg
jns
int3
jmp
mov
nop
pop
adc
scas
pop
mov
cld
xor
jecxz
add
mov
pop
inc
mov
loope
das
jmp
std
int
int3
sub
sbb
popf
add
push
cmc
push
xchg
jg
cmp
hlt
hlt
test
aaa
int3
js
out
push
fdivl
jo
in
popa
and
push
int
mov
in
negl
xchg
push
dec
cmp
pop
mov
dec
add
pushw
inc
lahf
xchg
xchg
push
jl
in
mov
std
cmp
divl
jmp
push
xchg
in
insl
dec
out
mov
pop
xor
lods
push
inc
minps
mov
pop
jne
add
divb
push
nop
cmp
fistpl
or
fstpl
lods
xor
imul
cmp
or
xchg
pop
data16
fistpl
cmpsb
aas
mov
gs
aad
insl
add
push
pop
dec
or
sbb
jge
cmp
sbb
cmp
mov
inc
mov
lcall
jno
jl
adcl
loope
mov
outsl
cmpsl
dec
push
js
das
outsb
fcomps
xor
mov
nop
dec
call
outsl
xor
jnp
out
stos
pop
mov
push
pop
push
dec
int3
negb
ja
rcrl
sahf
dec
cmc
cs
dec
into
jmp
stc
out
cmp
iret
into
jle
sbb
sub
in
ret
lret
jo
jne
jno
int
cs
je
jp
sbb
ficoms
jb
fs
ds
add
and
lahf
pop
jb
cmp
lea
jl
mov
mull
cli
pop
and
fildl
cmpsl
jnp
and
pop
adc
out
or
add
inc
mov
ret
lods
aad
fsubrl
sub
jno
and
add
scas
iret
jle
hlt
out
unpckhps
stos
in
xchg
jnp
repz
in
dec
jle
aas
loop
push
jne
test
push
xor
and
stos
or
clc
iret
lret
xchg
mov
mov
pusha
lcall
push
jbe
sub
fisubrs
inc
andb
mov
dec
mov
dec
pop
cltd
addb
call
mov
out
push
data16
xor
in
lcall
add
jb
rolb
sbb
jnp
fwait
loope
out
ret
mov
cmpsb
adc
lret
adc
fxtract
sub
inc
jg
cs
adc
push
mov
xchg
jno
xchg
lods
or
fsubl
xchg
pop
pop
pop
dec
movsb
add
rclb
mov
loopne
ret
jecxz
in
mov
mov
xchg
test
loope
xchg
dec
and
shr
nop
mov
mov
data16
lock
push
mov
adc
aad
xchg
cmpsl
adc
jno
sbb
cmp
outsl
addr16
call
mov
adc
cs
adc
pop
jg
aad
mov
push
adc
sub
mov
dec
repnz
je
jl
xchg
addr16
xor
pop
or
out
out
xchg
iret
popa
or
or
mov
imul
shll
pop
cwtl
fsubrl
dec
mov
rcrl
mov
fldln2
repnz
sub
sbb
lret
imul
jp
jnp
push
mov
sub
mov
mov
xchg
imul
or
pop
lahf
pop
mov
movsb
jnp
mov
xor
es
mov
xchg
add
js
dec
sbb
fimull
xor
dec
icebp
add
jae
inc
inc
pop
xor
ljmp
pop
pop
sub
ret
mov
arpl
xchg
ret
or
mov
adc
rcrl
inc
notb
sbb
ror
insl
sti
cmc
int
xchg
lret
ss
mov
push
sbb
int3
cld
push
adc
cltd
fwait
stc
dec
shlb
test
std
and
hlt
js
jle
inc
jno
inc
pop
mov
out
xchg
push
jl
shll
out
sbb
arpl
and
fdivrl
push
adc
jl
push
lock
cmc
pushf
pop
inc
shlb
push
pop
sahf
psubq
shll
mov
add
xchg
repnz
in
insb
daa
jg
loop
ss
sbb
loope
push
mov
xchg
cmp
xchg
das
daa
inc
cmpsb
push
or
mov
outsl
dec
fs
addr16
adc
das
and
out
es
adc
nop
mov
xor
outsb
sti
cli
mov
adc
mov
jnp
pusha
mov
sbb
xor
loope
imul
insb
fwait
hlt
mov
xchg
je
ljmp
aad
inc
insb
push
lret
js
mov
popa
aas
loope
adc
mov
fucomp
cltd
inc
les
sbb
or
pop
in
lock
scas
push
scas
clc
push
or
test
mov
jne
xor
and
cltd
jp
mov
push
mov
and
nop
frstor
dec
xchg
pop
leave
out
xchg
scas
mov
pusha
rorb
adc
push
pop
mov
inc
mov
mov
jecxz
rcr
xor
pop
and
mov
lods
cli
push
and
sbb
call
clc
cmp
jno
pop
in
pop
cmp
xor
movsb
push
mov
andb
scas
and
adc
out
cmp
aad
in
jns
push
les
mov
push
in
xlat
testb
add
adc
inc
or
lock
test
mov
xor
lret
jnp
loopne
daa
mov
cmp
leave
or
arpl
inc
xchg
sahf
mov
or
jp
mov
xchg
xchg
ljmp
dec
loop
xchg
push
inc
mov
inc
ror
inc
es
pop
cli
scas
mov
and
mov
cmp
jnp
in
addr16
and
sbb
aas
dec
sub
xorb
adc
sbb
loopne
adc
mov
add
inc
gs
addr16
fcoms
scas
xor
cld
popa
and
imul
mov
testl
push
mov
or
mov
lds
or
pop
add
into
iret
call
mov
xor
adc
cs
pop
cs
mov
aaa
popl
mov
mov
push
push
pop
cmp
scas
insl
mov
fiaddl
cli
aad
cmp
fcom
rcll
aad
adc
hlt
or
dec
mov
lods
xchg
scas
and
cmp
mov
cli
pop
nop
jno
sub
xchg
sbb
scas
inc
pop
ljmp
out
inc
mov
cmp
and
push
push
cmpsb
mov
jb
int3
cmpsb
aad
push
loop
outsl
adc
inc
mov
cltd
dec
fisttps
adc
into
and
loope
clc
and
pop
cmp
iret
ds
add
sbb
xor
and
pop
pop
aam
mov
loope
cld
clc
add
dec
repnz
fcmove
xchg
cli
movb
cmp
std
repnz
cmp
das
jns
leave
adc
sbb
sahf
test
cs
aaa
push
stc
xchg
addl
test
pop
pop
dec
pusha
inc
aaa
cwtl
fcmove
lret
pop
into
ds
cmp
add
pop
or
cmc
jb
mov
sub
ss
xor
repz
xchg
in
jns
jb
wrmsr
fadds
out
fstps
clc
jmp
jbe
scas
cltd
add
push
pop
mov
xor
pop
pop
mov
and
insb
hlt
popf
call
jae
imul
adc
scas
lods
mov
xchg
xchg
lret
lods
xor
out
push
sbb
push
inc
daa
push
aaa
arpl
lods
and
adcb
in
sub
adc
movsb
pop
mov
and
test
sub
cmpsl
ret
int3
stos
adc
lret
xor
mov
lret
lcall
cmpsl
push
fwait
mov
mov
scas
cwtl
movsl
lahf
insb
sub
cmpsl
push
and
sub
cmp
xor
sub
lret
or
outsb
cmpsb
cmc
pop
int3
popfw
xchg
cmc
xor
add
pushf
fsubl
scas
or
sbb
std
movb
orb
roll
sub
lahf
in
out
push
inc
jo
pop
pop
cmp
xchg
xchg
mov
mov
and
shlb
insb
movsl
fdivs
ljmp
scas
push
pop
test
int
add
mov
in
stc
pop
sahf
sbb
fistpl
insb
stos
sti
and
out
mov
fcomp
cmpsb
iret
int
push
in
xorb
outsb
dec
aas
cmpsl
mov
push
fsubl
mov
adc
icebp
add
mov
cmc
test
ror
movsb
jl
in
add
cmp
aam
sub
pop
xchg
ds
push
fisttpl
ret
and
pop
sub
pop
aaa
pop
and
fcomps
jnp
mov
pop
xchg
cmpsl
dec
cli
movsl
cmc
mov
pop
or
pushf
sub
sbb
cltd
scas
sbb
stos
jbe
cwtl
test
dec
xor
pop
xor
mov
add
mov
loopne
pop
aas
leave
outsl
jne
test
int3
fidivs
lcall
clc
in
adc
mov
mov
or
leave
or
adc
mov
mov
dec
insl
cmpl
inc
adc
xlat
push
fsts
mov
cld
push
jb
and
and
rol
sbb
nop
xor
jns
cmc
stos
push
das
das
cmpsb
and
jo
les
or
xchg
enter
mov
xchg
xlat
cwtl
mov
movsl
das
and
bound
cmp
int3
adc
addr16
icebp
mov
repnz
inc
dec
mov
sub
pop
stos
shl
mov
popa
sub
mov
sahf
adc
mov
cld
sbb
in
push
out
das
daa
mov
cmp
inc
xchg
jno
repnz
insb
jg
mov
aaa
call
stc
push
popf
pop
or
xchg
std
dec
mov
dec
or
rcll
call
outsl
ljmp
call
push
gs
daa
daa
and
rorb
mov
and
mov
fcmovbe
mov
imul
sahf
andb
mov
pop
filds
nop
push
inc
mov
push
scas
inc
cltd
inc
push
cmp
xor
dec
mov
lea
js
ja
sub
pop
insb
xchg
enter
inc
lods
mov
clc
pop
and
jmp
movsl
idivb
push
call
push
push
clc
xchg
xor
ss
pop
rcll
push
pop
pop
inc
roll
cmp
popa
fildll
xor
bnd
mov
outsl
lahf
test
pop
aas
insb
inc
sub
mov
jecxz
mov
mov
cmp
jmp
sbb
mov
rcl
mov
fistpl
fs
in
adc
pop
je
mov
aaa
cmp
rorb
popa
pop
out
cmp
pop
sahf
lcall
fwait
xchg
and
ret
fwait
cld
lcall
adcb
inc
aad
sbb
ja
loopne
fwait
ja
movsl
rorb
hlt
cmp
cmpsb
sahf
jg
das
std
mov
jae
mov
das
mov
add
sub
loope
test
adc
push
lock
mov
stos
movsb
cmp
stc
cltd
and
jo
roll
fwait
xchg
inc
ror
ret
mov
xor
sbb
push
or
xor
xor
aad
mov
ljmp
iret
push
jmp
outsb
sub
xor
fldenv
leave
andb
jo
mov
sti
mov
pusha
test
jnp
aam
stc
mov
lods
dec
push
xchg
jp
stc
fadds
fwait
mov
loopne
sarl
movsl
or
cmp
adc
or
fisttps
push
andl
adc
loop
cmp
sbb
out
sbb
icebp
ds
sahf
inc
mov
push
sbb
insl
xor
enter
ljmp
addb
test
mov
ljmp
add
es
aad
sub
xorl
and
sti
jnp
cmpsl
sbb
pop
frstor
xchg
xchg
imulb
push
lcall
filds
out
jo
jo
cld
mov
lods
xchg
mov
loopne
mov
cmp
adc
mov
inc
movsb
jge
add
std
sub
out
jnp
xchg
cmc
mov
sti
pop
cld
or
xor
outsl
mov
fwait
int3
mov
push
ss
xor
rcl
arpl
das
add
in
cltd
out
pusha
push
ret
xchg
sub
test
mov
add
loope
cmp
sbb
and
dec
pop
cwtl
sbb
mov
inc
stc
jae
roll
mov
iret
add
lret
ljmp
ret
sti
rcr
or
imul
mov
mov
dec
sbb
xchg
push
mov
mov
cmp
loope
dec
pusha
inc
push
jno
mov
fadds
cmp
pop
addr16
push
stos
jae
jno
mov
adc
xchg
jnp
stos
fs
adc
cwtl
out
mov
jns
rcrl
or
stos
gs
add
xchg
push
out
pop
cmp
lret
out
jl
imul
shl
add
inc
cmpsb
ror
jecxz
inc
in
dec
dec
jae
fcmovnbe
cmp
in
stos
pop
push
jns
outsl
notl
ret
enter
adc
cltd
cld
cmc
ja
or
mov
fst
cld
fwait
pop
lcall
repnz
loope
jno
fisubs
mov
pop
dec
int3
mov
shr
popa
sbb
lock
add
xor
pop
fwait
add
push
lods
pop
subb
pop
mov
pushf
or
outsl
jl
dec
mov
or
jmp
xor
jmp
xor
test
dec
xchg
or
ja
push
xchg
mov
push
or
loop
es
pop
cli
sbbl
cs
ja
mov
pusha
or
inc
nop
shll
xor
xor
mov
xchg
push
sub
les
mov
insb
xorl
add
ds
xor
dec
xchg
cmp
ret
bound
or
in
popf
xchg
fwait
divb
imul
lret
sbb
inc
cmpl
fwait
lret
popa
scas
jl
stc
leave
mov
int3
mov
mov
mov
sub
add
jne
mov
adc
inc
ljmp
test
pop
sub
int
in
cmp
lock
inc
nop
popf
ror
sub
adc
mov
or
roll
adc
sub
sub
pop
pushf
add
es
add
jbe
jb
and
sub
ds
inc
cmpsl
daa
xlat
sbb
lret
loope
sub
sub
jns
popa
out
add
je
mov
sub
mov
int3
into
mov
jg
add
fsubrl
cli
das
cmp
mov
out
push
lret
sub
fidivrl
add
pop
jne
add
div
fnstcw
enter
jle
ljmp
mul
arpl
xchg
pop
loope
aad
rcrl
xchg
sbb
inc
adc
and
gs
mov
fstpt
repnz
lods
int3
pusha
test
jbe
cmc
mov
dec
ljmp
add
cmp
std
fnstenv
data16
andb
inc
in
cmpsl
fsubl
lock
pop
incb
and
pop
aam
mov
into
inc
popa
xor
mov
push
scas
mov
neg
cmp
or
xchg
fcmovb
add
insl
or
and
sub
notb
sbb
fsts
mov
push
faddp
lock
or
popa
notl
shrb
test
mov
push
stos
fs
push
into
int3
mov
fildl
mov
mov
aas
and
call
mov
cmp
cmp
dec
sbb
push
jp
adc
ds
adc
mov
scas
out
fstl
shll
dec
xlat
xor
cli
repz
je
out
mov
sub
push
dec
sub
pop
inc
pop
xchg
fucomi
loopne
in
dec
aas
ljmp
jnp
testb
lds
aam
pop
leave
out
jecxz
pop
cs
sub
fdivl
jae
mov
push
repnz
aam
imul
cmp
pop
inc
pop
push
inc
or
push
and
mov
ss
hlt
cmovbe
add
test
loop
insl
or
cmc
mov
mov
mov
test
xchg
aam
fnstenv
ss
call
in
andl
lret
push
mov
out
adc
xlat
leave
inc
imul
xchg
mov
lahf
inc
cs
popf
inc
test
dec
sbb
movsl
push
inc
js
enter
cltd
repz
je
dec
fwait
repnz
inc
jmp
mov
stos
or
jnp
dec
mov
push
mov
je
or
in
add
add
shlb
aaa
dec
xchg
xor
jp
or
xor
adc
dec
mov
test
lock
imul
xor
adc
push
inc
jg
cmp
add
push
adc
fs
mov
ret
rcrb
xor
sub
repz
cmpsb
pop
frstpm(287
inc
pop
xor
outsl
dec
int
pushf
or
cwtl
test
fwait
xlat
test
mov
inc
incl
clc
push
dec
sarb
out
xchg
in
ljmp
out
scas
aam
cmp
cwtl
push
jge
pop
pop
cmp
mov
sbb
xchg
fildll
addr16
ljmp
js
add
adc
mov
je
sti
push
inc
sub
adc
adc
push
sahf
ljmp
xchg
mov
test
xchg
jne
rorb
mov
out
idivl
fsubr
in
or
or
inc
insb
and
and
xchg
mov
jbe
inc
push
mov
adc
mov
jmp
pop
repnz
pop
test
lret
jg
mov
mov
mulb
mov
ja
jmp
adc
adc
ror
jae
int
mov
inc
lahf
sbb
ret
pop
lods
pop
pusha
jp
xor
jge
test
pop
push
std
lcall
dec
popf
mov
push
leave
xor
repnz
aad
outsl
in
cmp
lcall
mov
js
out
sbb
jb
out
jbe
cmpsb
hlt
lahf
add
jne
fdivl
rcrb
push
pop
inc
mov
mov
cmp
adc
and
imul
adc
jns
int
repnz
int
dec
add
jbe
push
jo
imul
xchg
xlat
xchg
and
pop
lret
aaa
jae
cmp
aad
inc
sbb
lods
mov
hlt
or
dec
outsw
or
stos
cs
dec
cmp
bound
dec
aam
ret
out
cmp
inc
and
sarl
dec
sub
repz
sbb
mov
outsl
jge
pushf
cmp
test
push
jae
cmp
out
mov
add
mov
jg
jb
inc
xchg
pop
sbb
jecxz
mov
mov
and
push
sub
jns
and
add
jmp
in
jl
ss
sub
mov
xlat
out
cwtl
inc
push
scas
lret
mov
imul
mov
cmp
in
es
addr16
aas
jecxz
in
cwtl
adc
mov
and
push
mov
shll
and
and
lock
add
popf
loopne
icebp
cmp
sahf
xchg
pop
enter
jg
add
mov
lds
mov
lret
inc
stos
ljmp
test
fisubrs
sarb
cmpsb
or
dec
xlat
or
inc
lcall
scas
cmpsl
sub
rcrb
fs
lcall
sbb
or
loopw
mov
mov
pop
fsubs
push
lcall
hlt
sub
call
loopne
jno
lea
icebp
imul
iret
jo
daa
jo
mov
pop
or
jecxz
test
or
or
das
loope
cmpsl
dec
inc
and
mov
fnstenv
mov
ficomps
sbb
sti
pop
adc
push
test
stos
mov
push
adc
js
cpuid
ljmp
js
mov
inc
add
sub
jns
or
daa
pop
fbstp
add
daa
xor
pop
aas
mov
shll
aas
mov
repnz
scas
gs
stos
inc
outsb
mov
dec
loop
xchg
add
sub
fldl
sbb
imul
and
inc
imul
mov
nop
stc
insl
mov
adc
jg
cmp
cwtl
popa
scas
repnz
xchg
adc
mov
cmc
mov
push
push
jmp
jne
fisubrs
ja
cmp
out
insl
mov
ss
mov
loop
les
lods
jo
mov
cmp
jb
dec
pop
jp
inc
mov
adc
and
movsl
and
mov
pop
or
xchg
or
jle
jmp
sub
call
push
fists
mov
loop
jns
shll
addb
fs
out
and
arpl
mov
and
lock
popf
and
scas
lret
push
fisubrs
mov
jp
push
or
orl
sbb
and
sub
mov
cmp
xlat
adc
push
sub
cs
pushf
add
aas
sub
cmc
les
fs
push
lock
arpl
dec
jns
mov
pop
dec
inc
mov
xlat
xor
bound
cmp
mov
push
cwtl
aam
popf
mov
sbb
arpl
pop
imul
lret
xor
or
xchg
bound
jo
lods
jp
mov
into
inc
mov
insl
aaa
cmpsl
pop
les
jo
xor
mov
or
lcall
ror
dec
dec
mov
test
lods
jmp
movsb
cs
push
or
push
push
jge
je
xor
and
fsub
lock
int
adc
xor
int
cwtl
pop
sub
ja
out
push
xor
ja
dec
mov
or
sbb
push
sbb
mov
push
in
cmp
mov
pop
out
add
icebp
loope
add
pushf
stos
aad
sub
add
bound
mov
cmc
aaa
mov
adc
dec
jg
cwtl
xchg
dec
test
add
jp
pop
aaa
stos
hlt
pushf
jecxz
and
imul
lock
mov
test
add
mov
add
inc
push
xchg
dec
xchg
sub
lret
jecxz
mov
sbb
or
leave
inc
scas
test
imul
push
jo
dec
mov
xchg
inc
xor
lret
fsts
out
popa
xor
adc
xchg
or
sbb
ret
sti
aam
cmp
daa
nop
mov
ss
mov
pop
inc
adc
test
mov
mov
xchg
or
inc
jno
cmc
or
push
mov
and
sub
lock
loop
push
pop
shlb
push
or
scas
cmp
dec
jbe
inc
das
addr16
mov
ror
lds
sub
jno
test
je
jg
xor
fld
cld
adc
sub
lret
in
std
mull
out
aas
cwtl
push
xchg
mov
in
add
jmp
loope
lcall
or
cmp
mov
sbb
fwait
inc
xor
mov
fcom
push
sbb
mov
xlat
data16
aam
gs
fstps
stos
lahf
jns
push
pop
sbb
mov
data16
add
mov
push
imul
xchg
call
and
push
ret
ret
jae
jo
cli
sub
push
jno
aam
dec
mov
mov
sbb
mov
xchg
dec
mov
loopne
cmp
es
jbe
and
pop
shll
adc
imul
in
fwait
sbb
dec
div
popl
fsub
dec
jb
sti
jb
push
xchg
lahf
xchg
and
jg
dec
dec
cmp
lods
jne
pop
decb
cmpsb
data16
aas
xchg
enter
iret
jl
fs
add
inc
in
and
or
push
sbb
add
mov
jb
js
sti
enter
xor
pop
and
xchg
inc
inc
cmc
cmc
or
js
popa
jp
sbb
int
ja
add
xor
push
or
cwtl
test
stos
inc
shlb
dec
imul
enter
clc
iret
notl
xor
jl
int
leave
fcmovbe
insl
and
add
sub
push
movsb
shrl
fs
outsb
inc
mov
lock
roll
lahf
jne
jnp
jecxz
pop
out
xchg
je
adc
and
js
mov
cmpsb
iret
fsubr
cmpsb
lcall
dec
pop
xchg
dec
mov
daa
dec
imul
adc
test
mov
or
movsb
xchg
testb
hlt
cmp
adc
arpl
sbbb
sub
jmp
mov
xor
js
push
ffreep
xlat
cs
rorl
and
mov
inc
fnstenv
and
shlb
jmp
lds
sbb
sbb
in
pop
hlt
or
lcall
daa
std
test
sbb
leave
inc
popf
repz
in
inc
fidivrs
xchg
test
imul
imul
subb
stc
xchg
add
jle
popa
sub
clc
jp
dec
ret
dec
xchg
mov
dec
hlt
fdivrs
ret
and
push
inc
or
and
inc
lods
jmp
xchg
dec
fucomip
lret
aam
sbb
scas
jnp
cli
or
stos
cli
inc
stos
stc
sub
aaa
jbe
pop
leave
jb
jbe
sub
fstpt
fcmovb
out
push
cltd
jnp
mov
xor
xchg
dec
cmpsb
inc
xchg
dec
mov
sbb
scas
add
or
aam
push
ror
shlb
dec
push
pushf
outsb
mov
stc
and
sarl
lock
hlt
pop
mov
insl
imul
or
sub
jnp
jb
lret
cli
mov
cmp
mov
aaa
jg
sub
xchg
in
aam
ret
push
std
pop
adc
rorb
jo
int3
icebp
fwait
pushf
dec
scas
jbe
or
add
inc
pop
push
mov
jmp
mov
fcomp
loope
adc
cmpl
mov
rcrw
imul
xor
dec
outsl
xor
adc
test
lods
lods
lds
xchg
push
fistpl
aad
or
clc
adc
mov
xchg
push
in
adc
xor
pop
imul
imul
xor
adc
pop
push
push
call
sbb
sub
test
sbb
inc
fistps
sub
xchg
inc
jae
sarl
cltd
sbb
xchg
pop
lods
sbbb
add
inc
dec
or
jbe
sub
adc
fs
dec
cmp
outsb
loop
mov
mov
jp
das
adc
dec
lcall
stos
bound
xchg
pusha
inc
shlb
xor
cs
movsl
pop
push
push
iret
repz
xor
ss
fmull
cmp
jne
out
or
mulb
xchg
mov
push
int3
mov
dec
sbb
test
push
fdivs
and
pusha
andb
jo
jle
mov
fidivs
std
data16
cmpsl
add
inc
stos
popf
je
repz
add
cmp
inc
dec
rcll
sbb
cli
pop
jns
mov
dec
adc
shrl
jbe
test
jg
out
mov
sub
mov
xor
sub
scas
andb
push
idivl
sbb
inc
andl
sub
cmp
rclb
xor
add
pop
inc
push
adc
adc
mov
lea
dec
ds
cmp
leave
imul
lods
andb
push
or
out
sbb
and
or
lods
ljmp
add
mov
push
outsl
rcl
pushf
pop
xchg
cmp
lods
fsubr
and
sar
inc
iret
pushf
add
das
ds
mov
gs
shrl
xchg
loopne
int3
push
jo
ljmp
sub
and
inc
mov
dec
lods
pop
out
xor
push
mov
push
adc
cmc
aam
adc
fdivr
xchg
cmpsb
ret
pop
rcll
dec
mov
repnz
cmp
cmc
jge
mov
retw
and
enter
call
adc
xchg
adc
push
js
gs
cmp
ljmp
cmp
cmp
mov
ret
sbb
fwait
or
adc
test
cmp
xchg
inc
lahf
or
push
cmp
jmp
jle
lret
lahf
and
dec
pop
mov
xchg
and
aam
xchg
movhps
gs
or
aas
adc
fs
mov
and
add
xor
inc
movl
jbe
add
sti
pop
cmp
aad
fs
xchg
fadds
mov
jne
cld
inc
sahf
and
sbb
mov
pushf
xchg
inc
sbb
mov
data16
push
nop
mov
and
and
aad
sub
mov
jne
mov
inc
shll
cmp
pop
or
out
dec
out
lods
jb
push
inc
lret
push
mov
test
idiv
jnp
adc
popf
jge
das
lahf
int3
inc
or
out
int3
adc
inc
mov
pop
add
cwtl
dec
dec
in
inc
fdivr
pop
mov
nop
mov
xchg
xor
jne
in
xor
or
roll
cmp
aad
insl
add
loope
cwtl
dec
inc
lock
inc
loopne
dec
lret
shll
loop
out
decb
loopne
lret
sub
xor
push
fbstp
sub
rcrl
fs
std
cmc
sbb
jg
bnd
jb
inc
js
and
test
pop
bound
sbb
pop
ljmp
sbb
inc
test
or
xchg
pop
pop
mov
lret
cmp
das
rcll
cmp
or
inc
imul
cmp
imul
cmpb
dec
mov
or
add
xchg
add
sahf
addr16
stos
or
pop
faddp
scas
loope
push
pushf
xor
dec
daa
push
pop
in
test
push
popa
jnp
sbb
push
lahf
pop
mov
and
cmp
jl,pt
pop
dec
leave
cmc
sbb
ljmp
pop
loope
inc
and
fimuls
outsb
jg
pop
xchg
hlt
xorl
xchg
pop
cs
pslld
jge
test
dec
ret
pushf
add
pop
dec
add
sub
shll
xlat
adc
jbe
pop
fsubrl
add
pop
loop
les
icebp
dec
test
mov
in
into
xor
mov
mov
adc
movsb
mov
les
mov
cwtl
je
leave
jle
mov
sbb
stc
decb
lock
je
cmpsb
sub
push
loop
sbb
mov
lods
add
dec
es
jb
dec
ret
and
pop
and
and
test
sub
push
pop
jg
aam
pop
pop
mov
dec
xchg
xchg
adc
pushf
daa
jae
in
adc
outsb
test
aam
cmp
aas
repz
adc
xchg
aad
sub
leave
orl
dec
adc
fsubl
mov
xchg
sub
jb
fcomps
cmpl
mov
lds
enter
or
push
sbb
sbb
ret
leave
cmc
push
shr
pop
dec
push
daa
fsts
scas
mov
test
sbb
fsubs
dec
fidivrs
std
and
fbld
clc
fildll
clc
rorb
movsl
sbb
mov
push
nop
pop
lret
stos
testl
jae
fnstsw
sbbl
xchg
leave
or
xor
push
stc
inc
xor
sbb
pop
jnp
insb
popf
cli
mov
inc
push
cmp
cmpsl
dec
pushf
jo
push
inc
imul
mov
cmpsb
push
fists
xor
bound
cmp
or
mov
test
inc
test
add
orb
aam
mov
test
dec
or
popf
ror
add
jns
sbb
mov
punpckhwd
nop
clc
ljmp
aam
stc
add
jecxz
xchg
pop
lahf
clc
bound
imull
jmp
cmp
add
cld
mov
cmp
push
jns
mov
mov
or
jbe
dec
mov
adc
fiaddl
imul
js
jne
orb
lods
das
adc
jmp
cmp
xchg
mov
fst
punpckhwd
inc
divl
scas
addb
dec
fidivrl
xchg
sub
dec
aam
inc
dec
insl
jg
push
mov
test
cmpsl
scas
movsl
xlat
clc
add
stos
cmc
subb
pop
pop
push
cmpsb
shlb
xor
add
fiaddl
divl
mov
jne
ss
sub
je
fidivs
add
xchg
mov
call
xchg
cltd
fistl
repnz
pop
jne
sub
int3
out
ds
sahf
ja
aas
inc
orb
pop
les
push
scas
out
jp
mov
sbb
ds
repnz
fwait
mov
push
jge
and
pop
adc
push
rcrl
rorb
and
daa
push
or
jle
xchg
jbe
xchg
js
sub
cmc
jecxz
xor
pop
mov
lds
sub
mul
fnstcw
and
mov
cmc
sbb
cmp
xchg
push
bound
popa
imul
mov
adc
jle,pt
mov
mov
fdivl
fs
mov
xchg
leave
je
inc
adc
jae
and
adc
push
scas
adc
out
sbb
pusha
pop
xor
pop
xchg
in
mov
add
rcrb
inc
push
stos
lock
push
push
and
popa
xchg
dec
xor
std
fstpt
cltd
jno
pusha
andb
xchg
ljmp
dec
in
and
popa
inc
pop
jg
call
add
lods
in
dec
lahf
push
xor
mov
xor
enter
adc
call
aam
push
ds
jmp
stc
fwait
ja
mov
pop
jg
mov
jb
and
mov
adc
xchg
loopw
jae
mov
in
mov
insl
cmp
push
and
sti
loopne
pop
sub
popa
xchg
addr16
shlb
repz
int
pop
shll
mov
xlat
xor
pop
jmp
shr
mov
jge
dec
lods
sub
out
fldz
loopne
lahf
jo
addr16
mov
sbb
dec
inc
mov
jl
aaa
pop
std
add
jbe,pn
sti
pop
ja
nop
pop
mov
pop
mov
cmp
roll
pop
xlat
in
loop
xchg
lret
mov
les
pop
movsl
cmp
jp
push
dec
dec
stc
std
mov
inc
in
test
push
out
ret
xor
sbb
lcall
inc
gs
and
sahf
dec
inc
pop
mov
ss
arpl
add
or
mov
ljmp
adc
cmp
jbe
fdivl
adc
icebp
dec
dec
outsl
gs
aad
js
jmp
mov
negb
pop
inc
out
popa
mov
dec
dec
sbb
push
loope
inc
outsb
push
fldcw
test
jne
mov
add
sbb
shl
fcompl
jne
scas
movsb
leave
cmp
cmp
jne
dec
lock
cmpsb
and
aam
jno
pop
jae
jecxz
xchg
aas
or
mov
sub
pop
dec
xlat
std
sbb
repnz
in
sub
pop
sahf
lret
xor
push
xor
mov
addr16
fidivrs
pop
lret
adc
mov
mov
lea
pop
xchg
add
out
sub
add
lods
ja
dec
insb
adc
mov
push
ret
dec
dec
js
lret
push
sub
push
mov
inc
mov
outsl
mov
jle
call
lds
mov
dec
mov
jg
pop
xchg
and
cmpsb
mov
mov
rolb
jg
cld
sub
in
inc
mov
inc
call
xor
je
dec
shl
fstpt
and
sbbl
cmc
int
jo
in
jno
pop
cmp
shlb
ss
mov
mov
sbb
cmp
fisubrs
dec
mov
pop
decb
ljmp
inc
jae
or
or
jecxz
fsubrl
lea
lahf
mov
or
mov
fldt
stos
adc
and
andb
xchg
jmp
scas
cmp
add
shr
add
cmp
cli
pop
repnz
inc
sub
or
stos
in
out
lods
mov
mov
or
xchg
mov
sbb
sub
shl
jg
aad
das
out
ss
ss
arpl
mov
sbb
xor
jmp
pop
xchg
push
fidivrs
pop
and
xlat
insl
bound
inc
lcall
and
push
or
andb
mov
andl
pusha
adc
sbb
jp
lret
fsubrs
repz
jecxz
inc
loope
add
aaa
rolb
xchg
or
jmp
pusha
fs
fsubrs
inc
loope
shll
ds
jmp
adc
xorb
jecxz
outsb
mov
sub
mov
rorb
sbb
fists
fs
into
adc
push
in
xor
outsb
and
inc
insb
imul
pop
test
mov
xchg
ja
into
testb
cmp
fnsave
test
sub
notb
insl
ljmp
adc
lret
add
bound
test
dec
mov
test
dec
out
jl
push
jno
sti
insb
loope
mov
lret
outsb
pop
out
lret
aaa
addr16
in
mov
and
imul
ljmp
sub
and
mov
mov
cmp
out
jle
xor
cmp
mov
in
rcl
xchg
lret
sti
adc
sbb
add
xlat
ret
ds
mov
dec
cmp
outsb
push
adc
push
or
mov
out
mov
mov
mov
pop
cwtl
test
lea
stos
iret
clc
xchg
or
pop
and
sbb
cmc
pop
lds
mov
dec
jbe
dec
incb
out
out
and
pop
into
push
cmpl
loope
inc
pop
adc
push
jae
fdivs
leave
jns
jg
daa
pop
push
lahf
ja
in
cmp
jnp
adc
dec
cmp
sub
ret
jg
cmpsb
cs
xor
sbb
xorl
or
or
add
sub
sub
and
jb
inc
adc
pushf
inc
mov
add
mov
inc
lock
add
push
int
insl
jl
aaa
loop
std
xchg
out
mov
popf
lcall
arpl
mov
clc
mov
xchg
or
mov
imul
shl
jp
in
xchg
int3
push
lea
xchg
pushf
add
dec
inc
inc
les
or
inc
sarl
clc
mov
mov
lock
sbb
into
lahf
xchg
mov
loop
cmp
jnp
push
ljmp
mov
push
sub
loop
negl
sub
xchg
sub
negb
add
inc
fisttps
pop
rorb
push
add
ja
and
jmp
or
mov
cltd
sbb
dec
inc
cmp
lods
add
push
in
cwtl
dec
bound
or
or
add
je
cmp
lods
popa
adc
or
rcrb
scas
dec
scas
sbb
movsb
push
insb
in
in
mov
lahf
popf
xchg
sub
pusha
sbb
push
mov
mov
jae
out
shl
push
loop
aas
add
jge
mov
cmp
sub
mov
mov
sti
add
ss
in
loopne
pop
xchg
test
test
cmp
test
push
mov
xchg
jp
stos
mov
mov
add
shll
cmp
inc
pushl
adc
jb
insb
xchg
xor
out
cli
es
insb
and
movsl
cmpsl
bound
add
sub
in
sarl
popa
fwait
and
xor
mov
pop
cltd
cmp
call
enter
adc
inc
push
push
clc
daa
and
sbb
das
and
sub
jnp
lcall
inc
jle
das
or
js
test
adc
xlat
stos
xchg
mov
aas
cltd
stos
je
popf
and
lahf
lock
and
dec
xor
cwtl
pop
int3
in
xchg
cmc
xor
iret
lock
test
enter
mov
testl
adc
out
stos
testb
dec
dec
and
cmp
cli
std
mov
mov
enter
jne
call
cwtl
add
inc
mov
rolb
aaa
adc
xchg
idivl
jno
loope
popa
in
pop
jg
shrl
xchg
dec
test
shrb
mov
push
ljmp
xchg
mov
sarb
adc
imul
lods
or
hlt
cmpsb
inc
jbe
cmc
mov
push
aad
adc
sbb
pop
mov
xor
int
jbe
adc
hlt
sbb
fs
cltd
test
enter
lret
clc
mov
icebp
or
mov
sti
je
pop
lcall
nop
add
lea
cmp
xchg
shlb
sub
fwait
add
mov
sarl
cmp
sahf
mov
sbb
fwait
xchg
stc
cmp
and
lea
mov
faddp
or
test
negb
movsl
dec
sti
add
push
sub
nop
jne
sbb
jne
jmp
cmc
sarl
pop
movlps
or
or
das
mov
mov
dec
out
pusha
xchg
jb
popl
cmp
hlt
fstp
iret
mov
inc
mov
movsl
int
pop
xor
out
iret
daa
push
jo
add
mov
or
adc
xchg
loop
jecxz
push
inc
cld
mov
and
pop
cwtl
xor
pop
data16
cmp
inc
dec
inc
sti
mov
dec
scas
jg
in
inc
push
iret
icebp
fnstcw
mov
mov
xor
bound
inc
sti
ret
cltd
xchg
jns
fbld
in
jo
cltd
fcoml
out
sub
cmp
sbb
movsl
daa
xchg
mov
xchg
pusha
sub
push
in
lods
sbb
xlat
adc
mov
lcall
sbb
inc
in
dec
movsb
xchg
and
jbe
adc
rcl
inc
bound
add
sbb
or
adc
jmp
pop
and
push
fs
and
lock
push
xchg
xor
cltd
jae
je
mov
movsl
mov
test
lock
dec
mov
xchg
bound
dec
pusha
lea
pop
or
adc
fildll
cwtd
inc
sbb
jg
and
jnp
jp
or
and
lret
and
or
xchg
scas
xor
add
popf
push
cmp
clc
fcomps
sub
or
enter
mov
mov
mov
jbe
aad
sbb
adc
dec
test
pop
jb
inc
add
xchg
leave
mov
mov
pusha
or
and
aaa
movsl
dec
in
mov
push
in
sahf
mov
xchg
dec
lods
shll
mov
sbb
mov
push
test
and
rcl
daa
push
out
pushf
lock
xor
sahf
add
out
call
in
dec
and
in
jnp
dec
fisubrs
aas
test
mov
sbb
inc
jno
loopne
adc
cwtl
mov
lds
outsb
popa
lock
fdivr
push
or
icebp
xchg
mov
ret
mov
adc
inc
jnp
imul
call
push
jb
out
out
lea
adc
fidivs
in
cmp
cltd
jae
xchg
int3
cmp
pop
and
enter
push
ljmp
jg
jno
stos
shll
mov
push
lods
nop
lods
inc
add
mov
push
pop
mov
cmpsb
jg
dec
sub
mov
xchg
aas
mov
vmread
lds
mov
sbb
inc
mov
mov
imul
mov
mov
adc
add
jne
dec
sub
scas
jno
mov
cmp
jae
and
hlt
iret
jecxz
fs
mov
mov
lods
push
cli
ret
cmp
mov
lods
pop
pop
ljmp
add
fnstenv
adc
or
pop
jbe
xor
in
ja
decl
out
xorl
adcl
xchg
sbb
xor
adc
mov
jp
fsubr
cs
enter
dec
pop
into
jl
cld
sti
ror
adc
sar
sbb
call
ss
xchg
lods
pop
loop
sbb
out
loopne
icebp
cmc
loop
push
arpl
fldcw
aaa
mov
sbb
js
lods
addl
jl
lcall
fndisi(8087
fs
in
cmpsl
orb
add
adc
jno
ljmp
cmp
enter
ss
negb
sbb
push
pushf
xchg
das
ret
idiv
fiadds
fisttpll
mov
mov
sahf
mov
fidivrs
in
ret
test
shr
cmp
adc
cmp
lret
sub
inc
in
sub
push
cmp
xor
mov
xlat
out
xchg
mov
int
jae
or
mov
xor
stc
cmc
int
ja
mov
iret
repz
ret
mov
iret
aad
xchg
mov
xor
push
sub
jae
sub
ljmp
sbb
pop
pop
pushf
int3
push
int
test
lods
dec
movsb
cltd
jg
pop
es
out
xchg
push
hlt
dec
lret
adc
inc
int
movsb
enter
clc
inc
mov
ljmp
adc
inc
lock
jbe
daa
push
xlat
sub
push
mov
xor
mov
iret
cmp
push
idivl
and
ss
xlat
adc
sub
jnp
out
cwtl
push
add
outsb
cmpsl
sbb
xor
push
mov
mov
movsl
es
push
out
pop
popa
outsb
test
fcompl
and
inc
pop
xor
leave
or
fmull
imul
fwait
cmpsb
fmulp
fcmove
ja
daa
xor
xchg
loope
mov
push
sub
pop
jns
mov
lret
or
add
mov
rcl
xchg
push
cmp
aaa
sahf
icebp
enter
or
adc
movsl
push
icebp
dec
inc
mov
xchg
lret
and
mov
xchg
jmp
pop
cld
jg
mov
test
cmpsb
inc
mov
out
add
stos
or
movsb
and
xor
jmp
add
add
outsb
pop
fcompl
or
jo
repnz
sbb
sbb
push
adc
fistl
adc
jno
adc
mov
xor
addl
push
xchg
push
inc
das
adc
adc
ss
xchg
xor
imul
sbb
fucomip
fstp
pushf
movsl
repz
test
xor
or
outsb
dec
ja
mov
mov
cs
push
std
or
cmpsb
lock
pop
pop
daa
lods
jle
dec
pop
or
mov
div
fisubrs
inc
hlt
in
bnd
jmp
jo
xor
add
insl
mov
sbb
mul
xor
cmp
xor
rclb
pusha
push
jl
sahf
add
or
xchg
cmova
xchg
scas
jle
insl
sub
in
es
push
call
mov
jno
into
sub
test
ja
adc
test
pop
stos
inc
aad
lods
loope
cld
dec
jbe
mov
test
adc
jae
jb
int3
jg
mov
fimuls
movsl
loope
jmp
fnstcw
sub
cli
test
scas
in
icebp
ret
and
repz
pop
outsl
pop
pop
lea
fisubrs
jo
inc
dec
pop
into
and
push
outsl
js
adc
daa
movsb
out
subb
xchg
jg
mov
jmp
or
pusha
mov
cmp
adc
adc
or
dec
sarb
out
sub
inc
jo
outsb
cmp
xchg
xor
inc
inc
xor
std
cmpsb
cwtl
and
pop
inc
subb
cs
cmp
or
test
push
lods
test
inc
sahf
aaa
std
cwtl
jo
inc
in
mov
leave
mov
dec
clc
mov
out
adc
xor
dec
jno
adc
imul
jp
repz
les
inc
pusha
push
mov
mov
iret
ret
inc
ja
neg
pushf
fwait
js
es
mov
stos
xlat
iret
push
lret
test
enter
ret
sahf
dec
mov
mov
aam
jns
cmp
cmc
les
lret
bound
bnd
out
push
and
xchg
xchg
insb
mov
jecxz
jne
nop
cs
mov
pop
iret
stos
dec
xchg
loopne
lods
jae
dec
leave
or
fidivl
lods
fwait
cltd
ret
addl
adc
jg
ret
out
das
shlb
sub
pop
test
lcall
mov
aas
mov
shlb
loope
xor
xor
data16
ret
fdivl
dec
cmp
in
popf
outsl
fwait
incl
xchg
sbb
movsl
sub
cld
mov
or
stc
addb
mov
jg
call
lret
xor
out
insb
or
or
mov
mov
rcr
out
test
dec
bound
rclb
xor
or
lock
addr16
xchg
mov
outsb
and
fdivrl
sbb
bound
jp
popa
lods
out
jns
les
les
rcrl
sar
dec
loopne
out
lret
call
adc
cmpsb
and
jno
dec
js
fidivs
xor
cli
adc
es
test
xor
mov
mov
add
xchg
fsub
ljmp
in
pop
sti
out
mov
test
xor
xchg
xor
mov
insl
xchg
ret
ror
fsubrl
ret
out
lea
push
lahf
cltd
popf
mov
aas
rolb
xchg
or
cs
mov
outsb
outsb
cli
lods
std
mov
into
popa
cmpsl
sbbb
jno
adc
aaa
rclb
enter
mov
mov
mov
push
push
enter
icebp
fs
and
fs
jne
fidivl
movsb
cs
push
pop
lods
dec
cmp
pop
scas
pop
xchg
dec
mov
mov
push
sub
push
mov
cltd
dec
les
jbe
arpl
mov
cmpsb
adc
xchg
lods
leave
xor
add
mov
pop
icebp
xorl
fcoms
cmpsb
fmuls
addl
dec
fadd
stc
call
icebp
jp
nop
inc
cmpsb
mov
jne
mov
popf
jbe
cmp
dec
es
rcrb
xor
inc
ds
int3
test
sbb
loope
push
ds
mov
ret
xchg
inc
shlb
jns
and
jns
adc
bound
inc
mov
inc
lahf
pop
in
fs
dec
test
enter
pop
jecxz
add
xchg
addr16
mov
mov
push
push
pop
xchg
pushf
jne
and
outsl
dec
ds
aam
loop
and
sar
jp
dec
orb
fistps
mov
lsl
rcrb
les
pop
shll
in
cwtl
lock
call
rclb
fwait
inc
jbe
mov
jp
mov
mov
scas
add
sub
ret
and
sub
in
mov
and
and
rolb
lock
sub
dec
jl
scas
sbb
orl
and
aad
pop
jne
mov
aam
stos
dec
cmp
in
mov
mov
fsub
cmp
xchg
pushf
test
xor
mov
ds
add
lods
sbb
adc
icebp
xor
mov
call
adc
mov
imul
inc
int3
cmc
inc
ret
movsl
jmp
int
and
stc
shrb
movsl
pushf
cmp
je
mov
adc
and
jae
sbb
cmp
int3
push
ret
sbb
scas
mov
rorb
scas
hlt
gs
push
push
xlat
gs
sub
xor
fidivrl
out
sub
mov
hlt
pop
cltd
dec
xlat
cmpsl
je
xchg
mov
movb
and
mov
inc
or
stos
je
int
inc
lods
int3
fidivrl
out
aas
insl
pop
js
adcb
in
pusha
sub
adc
aaa
jecxz
or
jnp
inc
stos
cmp
mov
mov
sbb
jno
adc
pop
cld
das
xor
xor
in
xor
jo
cmpps
sbb
cld
cmp
adc
test
push
pop
std
add
inc
imul
repz
sbb
sub
aam
fdivrs
mov
stos
jmp
adc
mov
xchg
push
pop
popa
mov
jl
jae
xor
lahf
call
sbb
test
xor
inc
mov
repz
pushf
pop
mov
hlt
xchg
js
mov
xor
lahf
mov
mov
test
lcall
mov
sub
cli
hlt
mov
ss
xor
sub
mov
or
cmp
and
sub
and
add
rorl
lods
mov
mov
movl
and
xlat
sahf
mov
enter
jns
adc
cmp
imul
scas
stc
bound
jle
xorl
sub
pop
pusha
push
aaa
clc
xchg
sub
jp
jnp
andb
dec
fisttps
loope
xor
cmpsb
xlat
push
out
sbb
inc
and
in
jge
mov
iret
icebp
cmp
xor
mov
pushf
dec
add
jae
xor
xchg
cwtl
out
out
mov
mov
lcall
arpl
pop
ret
add
roll
movsb
add
test
xor
xchg
push
adc
cmp
inc
mov
xchg
push
paddq
fiadds
jnp
out
inc
push
fmull
int3
mov
jae
pushf
jns
and
in
push
or
imul
sub
inc
insl
movsl
popa
mov
pop
mov
leave
jp
fdivrl
mov
in
jne
add
mov
and
insb
out
int
or
ds
mov
adc
adc
dec
lahf
and
lahf
jno
push
adc
mov
cmp
xchg
lret
mov
mov
int3
inc
jbe
cmp
test
insl
pop
lret
ret
jns
pusha
data16
and
add
push
div
jmp
fcom
shll
das
xchg
dec
addr16
mov
test
scas
lret
push
pop
ljmp
leave
pusha
mov
mov
lcall
divl
inc
in
sbbl
adc
pop
loop
push
insb
xlat
iret
push
popf
adc
test
cli
bound
jne
jge
sahf
pop
test
lret
imul
jg
rcrb
adc
lds
and
jle
jg
ror
gs
pop
xor
les
cmp
mov
xorl
pop
rol
sub
pop
pop
sub
call
aad
repz
jge
pop
repnz
dec
frstor
stc
push
jle
int3
stc
push
dec
mov
rorl
fisubrl
stos
adc
add
push
imul
xor
mov
sbb
popf
js
repnz
sub
test
pop
push
bound
mov
je
popf
inc
aam
mov
clc
sub
jmp
mov
lcall
xor
and
shlb
repnz
pop
cmp
das
push
adc
mov
cmp
loop
mov
add
push
mov
push
xchg
and
je
pop
sub
jp
inc
ljmp
dec
push
push
cmpsl
rcr
test
pop
dec
rorb
jne
pop
jmp
mov
nop
cmp
add
js
sbb
data16
lds
pusha
int3
mov
clc
ret
cmc
cli
loop
jge
movsl
mov
leave
in
xchg
mov
jge
scas
xchg
inc
mov
lcall
lods
insl
add
das
gs
call
xchg
mov
cld
mov
aam
mov
xchg
or
decl
in
scas
push
xor
sbbl
aaa
jno
lcall
dec
xorl
add
data16
xor
incb
rcll
mov
push
xor
mov
lcall
add
out
loopne
scas
cmp
push
pop
and
divl
mov
mov
pushf
cmpb
aam
and
adcl
xor
push
mov
ret
jnp
adcl
imul
mov
sbb
dec
aad
push
gs
or
out
stos
data16
scas
push
pop
repnz
aaa
sbb
xchg
test
push
test
sahf
cmovl
pushf
push
inc
addr16
fisubl
popf
in
lods
std
pop
lret
inc
xlat
xor
testl
js
pop
in
ds
subl
push
mov
lods
lahf
js
fistpl
test
mov
sbb
and
adc
sahf
call
leave
dec
mov
jo
ja
std
rolb
notl
popf
xchg
sub
sbb
mov
pop
lahf
sub
repnz
jge
or
inc
adc
mov
push
xchg
ds
push
ja
scas
inc
aam
cmp
jle
data16
das
sbb
in
dec
sbb
pop
sarl
imul
or
xor
data16
aad
cmp
pop
pusha
jnp
xor
std
xchg
mov
leave
das
outsb
lret
dec
fcomp
aad
jb
hlt
dec
repnz
cltd
dec
out
fdivr
daa
mov
add
in
push
xor
dec
adc
testb
push
xchg
sub
popa
cwtl
aam
xchg
test
mov
mov
loope
imul
xchg
pusha
dec
imul
lret
fwait
push
pop
mov
xchg
push
sbb
pop
ja
addr16
andb
lret
dec
inc
iret
pop
jl
mov
cmc
fucom
fbld
dec
push
jno
or
or
mov
sub
fsubrs
mov
inc
ret
add
jb
pop
ljmp
stc
cmpsb
sbb
mov
or
lods
mov
dec
push
subb
std
clc
je
pop
icebp
imul
jmp
xchg
or
test
js
call
les
inc
aad
subl
jns
adc
xchg
cld
rcrl
out
lret
ficompl
ljmp
mov
pop
sub
stc
stos
out
addl
insb
cs
aam
or
cmp
mov
clc
gs
jne
xchg
pop
mov
mov
mov
push
pop
push
xor
xchg
pop
fucom
or
and
mov
cli
xchg
or
push
ficomps
subb
xchg
xor
repnz
push
rorb
dec
mov
inc
cmp
lea
scas
movsb
lock
outsb
xchg
jbe
int
push
pushl
arpl
mov
add
aad
les
mov
jo
popf
in
jae
jno
call
ja
inc
or
sub
mov
mov
xor
cmp
mov
lock
pop
xchg
arpl
loopne
cwtl
xor
movsl
insb
lret
int3
lods
lds
fstpt
arpl
inc
insb
scas
repnz
xchg
scas
xchg
jb
pop
rcrb
mov
addb
cmp
xorl
ficoms
jne
mov
mov
into
push
int
xor
insb
inc
jmp
mov
outsb
insb
mov
sub
mov
adc
jne
gs
fwait
jnp
arpl
jbe
and
pop
pusha
cmp
pop
pop
xor
add
es
and
inc
daa
xchg
push
jae
push
sub
ds
xchg
mov
sub
sub
xchg
jae
mov
rcr
adc
mov
out
xor
mov
bound
push
std
adc
jno
dec
and
out
sub
aaa
sub
outsl
and
pop
push
loop
inc
in
subl
ljmp
push
int
faddl
rcrb
mov
push
inc
and
loop
fcomps
push
fbld
mov
mov
imull
sub
jae
mov
in
push
mov
popf
insb
es
xor
inc
in
jns
add
fistpl
push
xor
adc
fcomi
das
push
mov
out
push
jae
jp
push
addr16
adc
xchg
movsb
add
or
fsubrs
sub
js
out
in
push
fmuls
xor
inc
and
ljmp
cli
mov
inc
cmp
out
xchg
lcall
and
cmp
and
clc
jae
fwait
clc
call
test
sti
mov
dec
scas
mov
adc
dec
push
idivb
jb
jp
xor
cmpb
mov
mov
inc
add
xchg
inc
pop
pop
pushf
lea
imul
sti
dec
repnz
shl
lret
pushf
jns
dec
push
jg
popf
jbe
enter
sbb
dec
ja
xchg
fisttpll
or
push
lock
mov
leave
divb
jle
scas
ds
mov
dec
cltd
adc
add
std
cmovp
mov
mov
arpl
xchg
outsb
dec
in
or
xchg
hlt
loop
and
push
push
fnstenv
aam
add
and
loop
mov
add
inc
sahf
dec
es
shll
sub
iret
lret
ljmp
subb
das
test
mov
addl
flds
sbb
ds
mov
dec
cmc
ljmp
add
into
int
cmp
and
mov
or
or
dec
stc
fnstcw
pop
sbb
or
jo
jb
sub
push
mov
xlat
ja
test
jnp
push
xchg
lret
incb
jmp
lea
lods
xchg
add
shrb
in
je
mov
shlb
outsb
ss
jp
mov
xchg
je
sub
jo
xchg
loope
aam
les
test
pop
xorw
push
jns
push
lret
popf
inc
or
imul
repnz
cmp
cmp
push
or
and
push
add
popf
mov
pop
cmc
insb
and
loope
cs
cltd
out
call
dec
ja
jns
test
mov
add
pop
lcall
popf
mov
movsb
add
into
arpl
mov
inc
mov
insl
scas
sub
aaa
lahf
arpl
fistpll
inc
mov
mov
push
mov
les
pop
mov
fildll
ror
mov
popf
out
push
xlat
dec
and
leave
aaa
jecxz
cmp
pop
pushl
sub
jge
out
cmp
and
sub
shrl
xchg
jbe
sbb
mov
pop
insb
sub
xor
arpl
mov
insb
mov
fmul
jbe
push
xchg
sarl
jge
sub
dec
sti
insl
clc
movsl
jp
jl
loope
inc
test
insb
lahf
jmp
int
mov
out
iret
dec
xlat
cmpps
jmp
cli
and
lcall
push
mov
mov
int3
jle
jmp
imul
jns
lods
and
stos
xchg
pushfw
xchg
insb
sbbl
jp
pop
icebp
and
pop
xor
fidivrl
popa
jmp
es
jp
dec
sub
rep
mov
push
repz
test
les
jbe
int
mov
sub
mov
push
mov
popl
inc
xor
mov
into
ret
dec
mov
xchg
mov
das
ror
movsl
inc
lods
mov
sbb
mov
cmp
add
lods
sbb
stc
or
test
mov
or
mov
jno
movsl
dec
stc
sbb
cmp
jb
rclb
shr
mov
loopne
shlb
dec
bound
test
mov
scas
sub
jno
test
lahf
inc
cmpsb
sbb
repnz
xor
xor
and
push
loope
jo
scas
pop
lret
jne
mov
xchg
xor
lock
popa
xor
dec
cmp
mov
pop
sarb
dec
cmp
mov
mov
dec
jnp
in
mov
in
in
dec
pop
in
in
movsb
jp
pop
mov
or
mov
dec
xchg
ljmp
in
mov
mov
adc
stc
xor
add
iret
leave
into
jmp
sub
and
jmp
sbb
pop
jge
test
ror
dec
sbb
jo
cmp
jle
out
lahf
jbe
inc
pusha
push
fists
inc
mov
sub
lods
sub
lock
or
jbe
out
mov
xor
or
in
inc
add
fstps
sbb
inc
sub
pop
inc
cmpsl
loopne
pushf
ficoml
mov
mov
rcrl
cmp
pop
sbb
mov
out
and
jmp
leave
and
shlb
jmp
repz
mov
mul
push
in
mov
int3
mov
out
pusha
xor
adc
mov
out
les
jg
dec
fdiv
mov
mov
pop
ret
ficoms
adc
and
test
scas
cmp
mov
mov
mov
ja
dec
enter
movsl
push
fcomi
inc
icebp
sub
add
jp
imul
outsl
add
daa
ret
das
cmp
jle
mov
mov
ja
int3
popa
loope
jo
or
sarl
add
inc
push
sub
and
jl
insl
insb
cmp
aam
sub
jns
and
test
xor
sbb
outsl
xorl
shlb
stos
pop
cli
aaa
nop
add
cmc
test
jl
pop
loopne
jno
xor
add
les
xchg
in
popf
mov
pop
jae
dec
rcrb
gs
and
ret
int3
mov
arpl
pop
and
sbb
or
add
push
xchg
and
out
sbbl
jg
push
pop
pop
outsb
out
jb
inc
or
test
stos
test
imul
and
or
inc
sbb
out
pop
inc
xchg
loope
leave
fcomi
shl
cmp
inc
sub
aas
or
in
mov
push
lods
sti
sbb
enter
or
jns
pop
and
xlat
into
sub
je
clc
push
pop
adcl
outsl
jns
sarl
cmp
xlat
mov
jle
lcall
lea
cmp
sub
pop
xchg
lret
lds
int3
mov
push
dec
shl
xor
mov
sub
cmp
cld
dec
sub
pop
sbb
push
arpl
mov
popa
stc
ja
mov
or
cld
imul
mov
fsubs
lock
addr16
fstl
rclb
or
pop
mov
push
mov
cltd
cltd
adc
add
icebp
ja
notl
sti
push
pop
test
int3
pop
adc
cmpb
xchg
sub
cs
repnz
mov
adc
clc
dec
and
enter
or
xor
cmp
jb
insb
mov
mov
shlb
jl
sub
push
push
arpl
out
lods
add
and
xchg
mov
imulb
sub
xchg
pusha
cmp
jp
sub
cmp
int3
jno
das
pop
mov
imul
xchg
out
xchg
xchg
scas
add
sub
pop
lcall
inc
cmpsb
mov
push
scas
dec
mov
dec
mov
sahf
xchg
xor
insl
jmp
xchg
xchg
push
fsubrp
adc
cwtl
mov
push
jl
scas
call
push
test
sahf
mov
pop
pop
cmp
test
dec
clc
outsb
inc
popa
lret
cmpsb
fwait
lret
ljmp
test
pushl
mov
in
dec
cmpsl
inc
imul
pop
push
pop
lods
sarl
sti
mov
adc
sbb
dec
inc
pop
jmp
lret
mov
inc
in
jae
les
push
aam
stc
mov
add
cmp
mov
push
or
out
sahf
lea
lret
push
cmpsb
jmp
xlat
jbe
pop
jae
xchg
mov
cmpsb
fmuls
add
dec
add
adc
icebp
push
shl
fnsave
mov
cli
arpl
sbb
mov
incl
pop
jl
out
pop
cmp
dec
jmp
sbb
cmpb
xor
std
mov
jle
sbb
stos
mov
sbb
std
and
cmp
inc
and
xor
lods
ljmp
shll
and
mov
mov
adc
cmp
mov
and
ljmp
testb
lods
mov
jae
sbb
dec
dec
cmpsb
sahf
ucomiss
push
push
add
mov
jg
mov
lods
inc
fwait
and
xchg
loope
mov
test
pop
int3
mov
int
pop
out
push
dec
cltd
hlt
shrb
and
jb
das
xorb
push
daa
adc
jbe
xor
pop
pusha
es
rcrl
and
mov
adc
pop
cmp
enter
mov
jmp
ja
fst
adc
out
test
sarl
cmp
in
or
fcmove
rcll
shll
or
jno
jbe
pop
sbb
dec
add
cmp
cmp
sub
jbe
mov
pusha
and
pop
cmpsb
mov
jnp
cmp
popf
sbb
scas
in
mov
lock
mov
std
and
inc
clc
test
lret
fs
pop
jbe
cmp
jne
push
xchg
inc
dec
int3
and
push
stos
jle
arpl
sub
dec
xchg
sub
lock
out
ljmp
add
and
mov
sub
xor
jl
outsb
inc
cmc
fucomi
adc
or
imul
popf
pop
dec
jle
stos
movsb
push
dec
push
cmpsl
aam
xor
dec
sbb
bound
push
jl
stos
dec
xor
fcompl
andl
adc
addr16
outsb
pop
inc
popf
out
sub
andb
dec
add
es
inc
sub
loop
or
insb
ds
cmp
cmpsl
jnp
out
inc
ret
bound
add
aam
inc
push
js
lods
movsb
in
dec
add
into
mov
rcl
push
push
xor
mov
inc
or
loope
xor
pop
mov
test
stc
popa
jecxz
repz
movsl
or
addl
push
hlt
push
loope
incb
lret
call
notb
inc
mov
mov
jnp
fiaddl
push
xchg
jae
in
pop
loop
xchg
insl
cli
pop
fwait
adc
push
jns
insb
ds
faddl
push
mov
xchg
mov
aad
sbb
xlat
rcll
adc
stos
sub
int3
test
pop
pop
and
adc
pop
mov
pop
sti
adc
loop
push
push
ret
lcall
mov
test
add
pop
xchg
xchg
incb
testb
stos
sbb
rcrl
xchg
mov
pop
and
movsb
xchg
lock
loope
lods
push
mov
sub
sbb
mov
adc
pop
into
jbe
rorb
mov
mov
shrb
bound
sarl
mov
sbb
jle
imul
dec
into
gs
sarl
sub
and
push
mov
and
cmp
sub
ret
dec
cmp
fucomip
fwait
gs
cmpsb
cmp
ja
dec
scas
pop
jae
lcall
outsb
repnz
dec
xchg
xchg
xchg
mov
int
jnp
fidivrs
or
cwtl
cld
pop
push
push
mov
dec
out
imul
lds
xchg
mov
push
outsl
dec
rorl
mov
imull
out
mov
adc
xor
in
into
pop
dec
in
lcall
aam
xchg
sbb
mov
fmull
cmc
test
addr16
xor
test
mov
in
ret
inc
jns
pop
lret
push
inc
xor
test
cmp
cmpsb
push
jb
test
dec
xor
pusha
mov
inc
sahf
pop
cmp
dec
mov
or
ljmp
mov
jne
xor
adc
xchg
cli
jae
mov
rolb
and
popa
cs
imul
pop
shlb
jmp
cs
jecxz
test
cmpsl
mov
xor
push
fsubs
inc
sahf
mov
xor
iret
fcoml
addr16
enter
je
push
mov
ljmp
push
push
push
popfw
push
push
pusha
add
push
jge
cltd
pop
fidivrl
addl
and
push
pop
mov
xchg
mov
add
imul
jp
inc
daa
test
pop
xchg
push
xor
inc
push
sahf
je
out
pop
int3
ja
mov
mov
sub
mov
sub
sbbb
cli
or
into
inc
add
ret
xchg
les
xorl
and
in
sbb
xchg
loopne
mov
add
xor
dec
inc
xchg
xor
mov
shlb
or
lret
push
jbe
mov
insb
dec
mov
inc
adc
inc
ret
xor
jno
push
jecxz
pushf
or
inc
mov
mov
sbb
iret
data16
ljmp
pop
sti
fistpll
frstor
xor
mov
clc
pusha
push
leavew
add
add
mov
add
loopne
outsb
mov
lods
cmp
push
stc
pop
mov
push
inc
sbb
popa
jecxz
nop
pop
pusha
ss
jmp
pop
jl
mov
mov
stc
int
push
sub
add
sub
jg
sbb
lods
fadd
imul
dec
or
pop
dec
push
nop
das
xor
xor
lock
xchg
lods
pop
mov
jge
ja
in
pop
lahf
sbb
jno
sub
cli
push
jb
sub
inc
lcall
out
mov
in
sahf
or
repnz
pop
mov
mov
jae
lahf
inc
push
movsl
popf
mov
mov
mov
fucomp
mov
inc
cmpsl
mov
and
ficompl
addr16
xchg
xchg
jp
test
pop
daa
inc
sub
fwait
xchg
adc
jae
icebp
sub
cs
hlt
push
mov
xchg
test
and
adc
jecxz
or
test
arpl
clc
loopne
sub
lods
stc
pop
into
out
fisttpll
movsb
add
mov
ud0
mov
cwtl
loope
mov
adc
mov
xchg
inc
cld
lret
xchg
and
dec
enter
jo
sbbb
mov
or
pop
subb
fmulp
or
test
mov
and
sarb
test
cld
add
xchg
js
repnz
jne
imul
std
adcl
xchg
dec
popa
dec
add
fmull
je
sub
mov
xor
adc
lret
jbe
insl
out
jg
pop
xor
je
push
int3
test
jg
jp
out
dec
xor
xchg
fiadds
div
cmpsl
orb
inc
pop
pop
int
loope
arpl
jp
jno
insl
cmp
insb
out
and
mov
sahf
sbb
and
fwait
push
sub
dec
xchg
pop
lods
cmp
mov
lcall
cs
std
outsb
xor
jno
xchg
rorl
outsl
stos
popa
adc
add
mov
hlt
add
pop
mov
or
rcrl
outsl
sbb
enter
sbb
xor
call
lds
sbb
sti
dec
inc
loop
mov
loopne
insl
add
jo
popf
stos
arpl
xchg
in
xor
pushf
ficoml
sahf
xor
fsubr
cmp
bound
sbb
imul
add
outsl
xchg
sarl
xchg
ja
mov
xchg
imul
loope
and
cli
mov
add
mov
add
adc
mov
sbb
arpl
dec
sahf
xor
mov
push
push
pop
adc
mov
fs
push
lret
sbb
or
dec
sbb
mov
push
addr16
bound
xchg
xchg
jae
mov
jno
xchg
pop
leave
xchg
lock
pop
push
subb
or
xor
lds
aas
push
in
stc
fst
lahf
mov
mov
sub
cli
jle
cmc
les
or
mov
cmp
fldt
mov
shl
pop
enter
outsl
inc
sti
ret
imul
xchg
dec
cmp
pop
jecxz
dec
xchg
jl
shl
fidivrs
mov
mov
xor
stos
ds
fwait
popa
repnz
fnstsw
pop
inc
add
mov
fistpll
in
fldenv
inc
mov
adc
punpckhbw
or
or
pop
cmp
jmp
test
dec
inc
dec
dec
lods
jbe
lahf
sbb
nop
enter
in
out
loopne
push
sbb
out
aad
push
mov
out
add
pop
mov
sbb
cmp
lea
mov
and
mov
push
add
or
sub
mov
xor
push
xor
push
mov
mov
mov
mov
mov
push
push
incl
fwait
xchg
sub
mov
addr16
movsl
jne
add
cmp
std
jg
jge
jmp
cwtl
jnp
dec
test
mov
mov
mov
icebp
xchg
add
and
and
pop
mov
xlat
xor
or
mov
xlat
outsb
jl
shrb
xor
test
adc
and
out
adc
test
insb
dec
gs
test
or
scas
pushf
mov
shrb
ljmp
stos
test
cmp
pushf
jle
pop
or
shll
dec
push
repnz
pop
adc
adc
jge
mov
cmc
mov
mov
mov
xchg
and
mov
adc
mov
shll
jle
dec
pop
push
add
adc
or
test
cmovle
jmp
mov
icebp
and
outsl
daa
in
inc
inc
add
jns
inc
addb
outsb
decb
leave
xor
scas
add
int3
add
pop
jle
jne
jge
mov
inc
xor
fnstsw
and
and
adc
stos
adc
filds
fwait
mov
jg
and
add
mov
insb
xor
hlt
mov
pmullw
push
shl
lahf
testb
mov
add
enter
and
cld
test
xlat
or
test
mov
pop
aam
push
lret
stc
out
xor
shrl
data16
xchg
mov
out
in
movsb
in
loopne
pop
lds
int
xchg
dec
fwait
xchg
les
clc
add
lahf
or
mov
xor
sub
pop
or
cltd
pusha
aas
mov
fstpt
inc
sub
cmpsl
fwait
popa
in
daa
rorl
xchg
mov
push
das
or
jnp
adc
popa
iret
mov
pop
xor
dec
pop
pop
mov
in
jle
mull
in
sub
pop
jne
ja
leave
lea
cmp
cmc
test
cmp
jns
mov
cld
xchg
add
pushf
in
jb
lods
pop
mov
and
loopne
push
adc
xor
sbb
and
cli
call
lret
repnz
test
mov
dec
inc
in
or
jno
mov
add
lret
lods
mov
xchg
iret
and
jbe
add
dec
adc
andb
mov
push
insl
cmpsl
sahf
dec
lock
pop
adc
fldl
add
push
cld
adc
pop
jecxz
jp
out
stos
adc
repz
repnz
out
push
lret
aad
scas
pop
sub
sbb
pushf
int3
into
pop
subl
lret
xchg
mov
xchg
test
test
dec
add
push
adc
jl
pop
cmpsb
dec
cmc
cwtl
insb
iret
insb
icebp
xor
aad
xorl
dec
popf
cmp
dec
jle
not
cmc
adc
cmp
sub
divb
mov
or
xor
mov
add
adc
cmpl
sub
add
jno
cmp
add
movsb
test
movsb
in
add
ss
xor
es
fistpll
movsb
lret
mov
int
enter
pop
rcrl
cmp
mov
cld
fsub
dec
mov
das
sarb
xor
jp
or
lahf
insl
and
rorb
adc
inc
dec
movsb
es
fdivrs
cli
cmpsl
adc
test
push
int3
pop
jmp
sbb
xor
repnz
add
lret
loope
test
cli
lahf
ljmp
add
inc
dec
fsubrp
pop
add
in
lahf
std
lret
scas
xchg
push
hlt
rclb
clc
rorl
loop
cs
add
fnstcw
lcall
xchg
sbb
sbb
jbe
fdivrl
or
out
aaa
insl
add
cmp
pop
imul
in
shrl
pop
sbb
out
lods
and
fstl
jmp
aas
cmp
xor
and
imul
mov
sbb
out
lret
idivb
mov
and
jp
into
lock
mov
mov
test
fiadds
hlt
pop
sub
sub
fisttpll
shlb
das
clc
iret
movsb
dec
cmpsb
cmp
add
cld
jmp
mov
push
sub
sub
dec
repnz
add
stc
lahf
out
mov
jp
add
push
adc
arpl
inc
sub
ja
imul
xor
pushf
fxch
pushf
or
pop
add
jle
fs
mov
mov
jg
xor
cld
daa
dec
movsb
test
dec
icebp
cs
sub
sub
or
sbb
out
inc
xor
aad
jo
dec
cmp
roll
mov
pop
push
iret
or
scas
xor
popf
fisttpll
jbe
in
dec
xor
push
test
je
dec
lret
loopne
push
xchg
sub
pusha
xor
xor
jo
and
stos
jge
xchg
add
cltd
mov
mov
xor
into
test
xor
or
mov
dec
pop
rcrl
dec
cmp
dec
sarb
mov
shll
scas
and
xchg
mov
add
into
pop
mov
mulb
lods
push
div
dec
test
push
jno
aad
mov
popf
jmp
into
xchg
jmp
rol
pusha
pop
in
or
jne
mov
xlat
jmp
bound
cmp
or
loopne
mov
xchg
test
int
ja
shlb
xor
cmpb
movsl
fdivrp
repnz
pop
sbb
xchg
sub
or
loopne
sahf
sub
test
scas
sub
mov
or
mov
pusha
inc
inc
add
in
adc
pop
pop
and
mov
jnp
mov
add
push
out
out
fs
xchg
or
mov
aad
outsb
pop
push
and
add
pop
aas
mov
loope
xlat
mov
icebp
fcompp
sub
mov
rolb
push
add
ja
cmp
lds
adc
pop
adc
scas
jl
mov
lds
lcall
cmp
cmc
dec
shlb
lea
sahf
outsl
pop
int
jne
rclb
loope
dec
sub
push
cmc
out
pop
into
add
cmc
enter
adc
dec
inc
push
mov
lock
popa
adc
and
push
out
adc
lods
and
popa
and
pop
mov
add
fldl
jl
pop
pusha
cmp
imul
decl
cltd
jne
fstpt
mov
sub
loopne
jg
pop
or
xchg
lods
cli
sbb
dec
mov
and
xlat
jmp
sub
bound
enter
in
repz
jae
adc
xor
mov
add
ret
fistpll
cs
xlat
mov
add
jge
xor
push
mov
xchg
adc
int3
cli
ja
ret
and
scas
push
pop
and
roll
pop
sbb
nopl
mov
push
cmp
lcall
shll
adc
pop
repnz
pusha
sbb
into
cmp
cmp
outsl
lret
in
roll
mov
outsb
pop
out
pop
cmpsl
sbb
rcl
insb
push
push
shlb
scas
adc
aam
xor
push
add
ss
inc
lcall
cli
movsb
orl
in
ret
mov
lcall
mov
cwtl
jne
jne
outsl
out
fildl
push
stos
out
pusha
and
mov
out
jmp
sti
clc
icebp
aad
leave
loop
sbb
inc
push
hlt
xor
cwtl
jo
cs
nop
cmp
xchg
aam
jbe
pop
mov
popa
lahf
ds
mov
mov
xor
nop
outsb
mov
loop
ss
outsl
pop
sub
xor
mov
orb
cmc
inc
stos
and
adc
adc
push
sub
pop
scas
xchg
hlt
or
cmpsb
mov
push
movsl
dec
adc
inc
push
dec
xchg
push
inc
fs
movsb
xchg
push
push
jne
enter
inc
adc
mov
lcall
stos
xor
mov
adc
scas
push
pmullw
or
aaa
lods
dec
and
and
sahf
cmpsb
xchg
mov
inc
test
mov
cmp
pushf
shrb
dec
rolb
xchg
adc
stos
or
jae
std
push
mov
jb
lahf
push
mov
fwait
jnp
mov
fwait
add
dec
dec
add
sbb
addr16
push
lds
rcr
leave
xchg
add
adc
push
adc
les
cmp
call
and
and
dec
sti
pusha
aaa
mov
gs
cmp
std
sbb
pop
jmp
mov
pop
or
fbld
jmp
fdivrp
in
push
pop
aam
mov
inc
sbb
sarb
ret
dec
jle
pop
data16
mov
jae
je
cmp
std
les
sbb
stos
jle
xchg
aad
push
lahf
rol
jne
cmp
popa
pop
add
xchg
adc
shlb
loopne
repnz
xchg
rdmsr
push
mov
inc
mov
sbb
in
adc
mov
stc
fadds
movsb
aam
pop
inc
daa
clc
std
or
pop
inc
xchg
in
ds
iret
popf
inc
lahf
aas
clc
or
orb
inc
stos
inc
test
fmul
fwait
or
ljmp
outsb
xlat
cmp
mov
das
jle
in
or
cmpsb
or
cmp
push
int
out
aad
or
sub
jb
scas
adc
test
std
mov
mov
outsl
jae
enter
pop
in
inc
and
scas
xlat
js
push
add
jo
movzbl
daa
pop
adc
je
sub
dec
jg
adc
push
adc
mov
xchg
outsb
cmp
pop
fcoms
ja
push
movsl
pop
shl
pop
popf
test
push
lds
xor
sti
js
or
sbb
pop
mov
push
inc
out
cmp
movsb
test
mov
rcrl
sub
inc
sarb
andl
jge
lret
push
sbb
jp
jns
adc
cld
orl
sub
inc
push
shlb
sbb
outsl
mov
in
js
inc
sbb
pop
iret
adc
sbb
xor
mov
jle
fadds
pop
rorl
adc
loopne,pt
loopne
sti
in
and
cmp
pop
lret
pop
push
imul
cmpsl
mov
pop
addr16
push
fs
push
and
xchg
mov
nop
lods
dec
fldz
cli
fnstsw
fst
add
add
mov
lods
mov
dec
xchg
iret
dec
stc
cmp
scas
jb
pop
in
pop
mov
js
sub
xchg
jnp
outsl
pop
jbe
imul
ljmp
test
push
inc
ficomps
sbb
push
lock
mov
sub
pop
arpl
neg
cmc
push
pushl
fistl
inc
pop
scas
push
movsb
movsl
mov
je
fisubrl
inc
mov
ss
dec
inc
repnz
mov
mov
pop
enter
lahf
jnp
out
mov
mov
sbb
addr16
xchg
pop
xchg
dec
xchg
add
aam
nop
mov
xor
insl
outsb
sbb
add
push
outsl
imul
mov
jl
in
addr16
push
shlb
fwait
iret
repz
mov
test
xlat
mov
and
test
mov
adc
mov
lock
lods
test
test
dec
pop
mov
sarb
test
sbb
push
mov
push
and
jno
gs
shll
sub
bsr
or
mov
cld
lds
inc
jbe
into
cmp
faddl
dec
insb
jge
mov
rorb
ss
inc
xchg
and
jge
andb
sbb
mov
lret
in
arpl
jl
insb
jmp
xchg
js
cld
data16
out
sbb
cmpsl
pop
lds
sub
jns
push
test
ss
shrb
in
and
or
mov
push
pop
fnsave
aaa
dec
lcall
add
movsb
jae
inc
int3
leave
roll
insl
loope
pop
xor
fxch
cltd
adc
mov
iret
xchg
adc
inc
in
add
cmpsl
loop
roll
cmp
pushf
cmp
arpl
jnp
jae
stc
mov
scas
adcb
out
mov
je
jnp
fistl
test
pop
bound
leave
push
outsl
dec
push
scas
in
xor
xchg
bswap
pop
call
xchg
insb
sbb
pop
mov
or
adc
dec
pop
pop
sub
cmp
mov
ret
lahf
std
mov
movsl
arpl
idivl
and
push
xchg
fildll
cld
movsl
hlt
cld
inc
shlb
lahf
ja
inc
jno
clc
ret
xchg
adc
movsb
pop
jle
aad
insl
icebp
push
push
iret
ds
mulb
hlt
dec
sbb
pop
int
int3
cmp
mov
add
int3
pusha
lock
aad
and
mov
scas
mov
leave
push
add
sub
or
jae
mov
cmc
adc
lock
imul
dec
lea
adc
pushf
out
ror
icebp
sbb
xchg
push
ret
adc
outsl
dec
push
fxtract
lahf
in
and
out
or
mov
dec
imul
fcompl
test
push
enter
push
xchg
mov
mov
cmc
jg
test
cmp
aam
js
stos
xchg
add
and
mov
mov
subb
pop
push
rcll
ret
adc
push
and
and
rolb
jns
std
neg
daa
jae
dec
xor
mov
mov
xor
test
lds
iret
fst
push
pushf
mov
not
sub
add
subl
mov
mov
sahf
add
fadd
adcl
test
adc
adc
mov
insl
aam
xchg
mov
aas
sar
sub
ret
pop
add
stos
mov
jo
inc
sbb
pushf
jno
add
add
insl
jmp
dec
repnz
or
sub
or
repnz
out
jne
pusha
jmp
or
xchg
adc
xchg
push
cmp
cmp
imul
ljmp
cmpsb
inc
and
insb
rcll
mov
leave
sarl
cmc
fs
dec
lds
in
pop
push
sbb
lret
or
in
pop
cs
pop
adc
xchg
arpl
push
xlat
push
inc
cmp
push
in
and
dec
inc
jg
inc
fs
imul
pop
popf
inc
repnz
and
mov
std
adc
add
shr
mov
rcrb
mov
inc
ja
add
cwtl
mov
in
adc
out
fdivrs
sbb
cmp
inc
lods
sbb
fadd
xlat
xor
sahf
clc
pusha
sub
inc
cwtl
jg
push
enter
push
xchg
cmpsl
sub
arpl
xchg
stos
or
repnz
lret
inc
bound
dec
cltd
shl
dec
sub
pop
cmp
and
cmp
divl
xor
call
or
mov
fwait
mov
popf
push
in
loope
mov
dec
push
daa
loope
aam
popf
jae
addb
jecxz
fcomp
leave
clc
arpl
arpl
lret
data16
stos
daa
inc
pop
pusha
imul
aas
ss
jg
loop
dec
pop
jbe
dec
js
bound
cmc
fstps
out
js
pushf
loopne
push
lret
fidivs
xor
push
cwtl
mov
pop
adc
add
aas
cmp
test
jae,pn
loop
mov
xor
xchg
jl
daa
jle
clc
stos
push
jge
scas
jmp
push
push
adc
imul
mov
push
jns
and
jns
sub
mov
mov
adcl
scas
pop
mov
xchg
xor
inc
xor
bound
mov
mov
or
mov
int
push
fmull
jle
sarl
xchg
repz
dec
fnstsw
dec
jbe
xlat
or
and
sarl
int3
lcall
xor
push
in
fsubr
add
ret
movl
xor
ljmp
in
cmpsb
cmp
daa
add
shrb
lret
enter
cmp
fsubrs
jmp
mov
mov
add
jns
dec
push
imul
pusha
sti
test
and
dec
and
fldcw
lds
mov
xchg
mov
sub
jo
dec
jmp
jns
fstps
scas
imul
xor
xlat
mov
mov
out
subl
jno
sbb
andl
fcmovb
xor
hlt
push
inc
mov
ja
and
sub
imul
cld
adc
cmp
ret
xchg
ss
lcall
and
cmp
popf
jo
pop
add
inc
inc
jp
sbb
cmp
loop
ds
push
in
gs
iret
xchg
imul
adc
pop
jae
in
cmp
or
push
loopne
jns
mov
cmp
push
jo
mov
js
cmp
fnsave
ret
adc
cmpb
mov
pop
xchg
shl
shlb
inc
shl
popa
sub
lret
cmp
mov
inc
rol
lock
ret
xchg
inc
adc
ret
jp
es
or
mov
cli
push
es
mov
push
jb
or
xchg
ss
xor
cltd
add
inc
shlb
mov
es
mov
sahf
ljmp
add
repnz
rcrl
cmp
popl
or
aam
hlt
addl
inc
jbe
ljmp
cmp
and
popa
es
lret
arpl
pop
sbb
inc
and
iret
pop
mov
sub
mull
push
mov
push
into
or
pop
and
hlt
xor
sub
iret
arpl
js
xchg
test
sub
in
jg
ficomps
in
jns
xchg
or
mov
imul
add
in
and
xchg
mov
imul
fcmovne
xor
push
mov
dec
push
xor
popa
mov
sarl
enter
dec
enter
and
pusha
out
push
movsb
mov
movsl
pop
mov
pop
pop
arpl
lret
cmp
repz
mov
stc
sub
or
subl
ljmp
jb
jge
jns
and
loope
adc
div
lds
push
mov
jns
push
cmp
cltd
push
sub
inc
sarl
loope
or
jmp
test
rep
jb,pt
mov
push
xchg
je
xor
push
cmc
sbb
data16
jg
sbb
ficoms
ds
and
inc
jb
add
fcomps
inc
xchg
jg
and
sbb
outsl
out
add
mov
xchg
pop
lods
scas
add
repz
mov
pop
and
jnp
ljmp
push
addw
pushf
and
add
inc
cwtl
pop
call
adc
gs
push
or
mov
sbb
cli
cmpb
leave
imul
sub
xchg
aam
decl
mov
adc
inc
xchg
fistps
mov
push
cmpsl
pop
mov
inc
mov
inc
adc
mov
outsl
int3
xor
push
out
mov
add
popf
lds
out
inc
pop
mov
rcrl
cmpb
scas
lds
inc
mov
or
test
xor
push
test
mov
das
dec
mov
orb
push
pop
in
loope
jle
or
bound
mov
push
bound
mov
or
jno
fwait
sbb
dec
sub
push
xor
sbb
xchg
lahf
aad
dec
scas
bound
jb
int3
cmp
pop
jl
xchg
sub
fsubrs
pop
sbb
inc
xchg
sbb
adc
stos
or
xchg
jl
inc
fwait
mov
sub
pop
out
and
pop
ret
fists
repz
xlat
pop
xchg
jp
sbb
mov
xchg
push
arpl
test
js
push
jecxz
xchg
add
cmp
inc
jb
jno
pop
jne
rcr
cmp
popf
shl
and
sti
aas
mov
mov
movsl
jbe
mov
sbb
xchg
and
mov
push
lock
ss
les
push
jns
sbb
cmp
out
rcrb
in
fwait
cltd
mov
mov
cmp
cli
mov
rclb
dec
xor
insl
rorl
and
nop
nop
or
dec
cmpsl
int3
call
push
outsl
outsb
xchg
jae
je
negl
adc
push
push
sbb
pop
pop
mov
add
roll
scas
dec
jle
ljmp
scas
fcoml
push
jae
test
mov
insb
xor
je
daa
shrl
cmp
jle
cmp
adc
mov
stos
mov
xchg
add
push
mov
jle
lds
jmp
mov
jmp
jno
addr16
std
fcompl
push
dec
ret
fisttpl
je
cmp
xor
notb
insl
jge
imull
leave
dec
stos
adc
mov
in
inc
jbe
cltd
adc
orb
mov
cmpsb
ja
subl
rclb
daa
lods
sub
push
jb
out
adcb
loope
gs
pop
jmp
fs
jp
mov
nop
and
or
jne
xchg
fs
jle
daa
sbb
xchg
outsb
in
gs
push
xor
shll
jge
xchg
or
sbb
adc
push
mov
lcall
sbb
push
fsubrl
pop
xor
mov
test
dec
add
jo
or
leave
jb
push
add
scas
push
push
xlat
mov
mov
cli
in
jp
jno
das
cmp
mov
int
outsb
into
mov
dec
xchg
mov
scas
pop
int3
idivl
push
mov
imul
add
sbb
test
movsb
sbb
xorb
or
xchg
cwtl
jae
dec
lods
mov
pusha
mov
jl
es
lahf
or
scas
pop
cld
cmp
dec
push
cmc
mov
xlat
sbb
pop
outsl
aaa
jo
mov
mov
inc
xor
xor
push
jmp
int
xor
add
or
jp
xlat
adc
imul
es
pop
mov
aas
lock
or
out
bound
ja
push
adc
and
mov
mov
flds
movsb
jg
test
jo
dec
push
push
mov
pop
lods
pop
ds
and
stos
lret
xchg
adc
jae
sub
cmpsb
ljmp
and
insb
fsubl
dec
dec
lods
jecxz
inc
cli
add
inc
dec
cmp
jbe
inc
fisttps
or
out
lds
sub
jo
mov
or
sub
out
push
xrelease
pop
int3
xchg
xchg
mov
cmp
test
mov
pop
fildll
cmpsb
arpl
sbb
jp
addr16
repnz
mov
sahf
fiadds
ss
test
mov
cmp
rcrl
fsts
mov
lret
xchg
xchg
fs
and
sub
mov
xor
dec
lret
mov
inc
xchg
ja
inc
lret
mov
pop
ja
cltd
lcall
mov
pop
rcrb
push
in
sbb
xchg
sub
pop
sahf
cmp
movsb
or
outsl
loopne
fsubrl
push
push
sahf
fdiv
lret
neg
mov
push
mov
cld
aad
dec
nop
and
cs
cmp
das
mov
sbb
xor
jp
pop
cld
loop
mov
sub
mov
pop
mov
pop
test
fwait
repz
movb
je
sbb
push
xchg
sbb
mov
xchg
repnz
lahf
bound
pop
aas
in
mov
fmuls
pop
jmp
scas
int3
sub
pop
repz
enter
push
or
adc
push
jb
dec
push
push
and
pop
dec
xorl
or
pop
lock
cwtl
nop
fwait
push
fistl
xor
fisubl
sbb
and
add
inc
mov
or
rorb
lret
mov
jnp
sti
lock
pop
ljmp
mov
insl
push
sti
jmp
xor
add
xor
xor
fwait
add
sbb
ret
fisttpll
in
push
test
push
cwtl
add
je
push
adc
loopne
in
lcall
push
push
push
adc
xor
xlat
test
adc
test
out
xor
adcb
mov
je
adcl
push
leavew
insb
pop
adcb
sbb
mov
mov
mov
cmc
xchg
push
adc
sbb
mov
testl
fiaddl
lea
ret
or
mov
push
xor
or
fstp
pop
sbb
mov
insb
adc
pop
inc
or
xchg
enter
push
push
out
dec
sbb
imul
jle
lahf
or
xchg
and
inc
mov
out
sbb
dec
mov
mov
add
add
inc
jne
idivl
pop
daa
pop
insl
xor
test
arpl
pop
jge
in
sub
pusha
loopne
dec
inc
xlat
jmp
pop
dec
mov
adc
and
add
daa
xlat
mov
mov
xor
jne
sbb
lret
xchg
add
mov
dec
subb
dec
xor
inc
sub
xorb
in
test
and
mov
stc
mov
mov
cld
insb
mov
pushf
pop
jne
pop
or
repnz
jno
aam
push
js
inc
out
cltd
adc
and
cmp
movsl
cmp
mov
inc
ljmp
ret
stc
test
int3
sub
mov
scas
cmp
cmp
mov
mov
cwtl
push
and
jnp
xor
addr16
mov
pushf
dec
cld
test
test
adcb
pop
inc
pop
pop
std
adc
outsb
xchg
sbb
jne
stos
adcb
aaa
mov
mov
sub
inc
fs
js
or
or
int3
jo
test
sarl
loope
fisubrs
es
sbb
pop
xchg
fstps
lea
mov
inc
pmaxub
xchg
and
or
xchg
pushf
aas
icebp
xchg
es
daa
fcmovb
repnz
rcll
jo
dec
jno
add
and
and
rcrb
cmp
adc
xor
jae
je
inc
add
cmp
imul
into
adc
ret
push
leave
loopne
add
sarb
mov
sbb
sbb
push
cmp
loope
add
nop
add
shlb
je
mov
daa
xorl
pop
add
cmp
cmp
ret
mov
in
mov
xor
outsb
test
mov
sbb
jle
jbe
jbe
sti
fbstp
mov
xorl
mov
shrb
cli
sub
int3
dec
xchg
mov
aaa
cmpsl
dec
imul
addr16
dec
std
pop
inc
enter
xchg
jl
xchg
ja
jae
scas
daa
xchg
and
push
xorps
iret
sub
inc
hlt
jae
xor
je
add
and
pop
repz
mov
jo
rorb
dec
ret
dec
mov
cmp
adc
mov
xor
idivb
clc
and
jle
mov
lea
cmp
lret
mov
mov
lods
cmpsb
cmp
mov
jg
xlat
cmp
sahf
movb
mov
xor
stc
js
jnp
add
pop
leave
jbe
pop
or
cmp
cmp
cmp
push
mov
icebp
and
xchg
xor
das
xchg
out
lods
mov
icebp
xor
aas
xchg
cmpsb
pop
inc
lret
jl
hlt
or
sub
cmp
adc
dec
jo
dec
sbb
adc
inc
or
cltd
mov
incl
jae
add
dec
sbb
fwait
pop
stos
cmp
mov
xchg
loop
icebp
ret
repz
mov
or
dec
fndisi(8087
push
cs
rcrb
enter
ja
push
mov
or
sbb
jne
sub
xor
test
movb
mov
cmpsb
add
in
or
sub
das
adc
cmp
push
loope
je
mov
test
pushf
mov
mov
sbb
fisubs
cmp
xor
dec
push
dec
nop
adc
mov
jecxz
push
cmp
enter
clc
lds
lock
add
push
xor
jl
sub
xor
xor
mov
lods
out
cmp
or
outsb
adc
adc
leave
fdivrs
andb
out
lret
rolb
dec
cmc
lea
add
in
sub
cs
incb
add
cmp
xchg
fwait
mov
sti
mov
pop
sti
imul
sbb
pushf
ret
mov
xchg
pop
sbbb
xchg
xchg
or
mov
imul
push
enter
cld
pop
hlt
pushf
xchg
mov
lcall
inc
push
testb
push
cmp
cmpsb
jns
lds
nop
jb
push
adc
xor
enter
stos
notb
jmp
aad
scas
or
loopne
sbb
lahf
aaa
nop
or
sbb
repz
shrb
xchg
outsb
jae
mov
cmp
xchg
adc
adc
inc
stos
add
xor
nop
aas
sub
movsb
imul
enter
dec
pusha
or
enter
loop
dec
add
ljmp
mov
jg
xchg
outsl
fdivr
xchg
and
mov
shl
sbb
push
dec
loopne
jnp
stos
cmpsl
add
ja
loope
out
inc
sub
in
test
hlt
cmp
movsl
hlt
daa
dec
or
icebp
lahf
xchg
mov
xlat
or
lret
idivl
mov
or
or
mov
cmc
lea
pushf
and
mov
add
push
sbb
mov
or
sbb
std
stos
pop
test
mov
call
mov
test
pop
mov
mov
xor
mov
ret
hlt
mov
pop
add
ss
dec
xchg
push
jae
lods
sbb
test
scas
push
pop
lods
lock
cld
pop
xchg
sub
jg
push
sub
cli
mov
clc
imul
pop
shl
ljmp
add
pop
jge
clc
or
mov
sar
sahf
push
jno
fwait
bound
fadds
cs
inc
rorl
and
call
outsl
pop
mov
mov
jmp
sub
xchg
xlat
fdivl
pop
jmp
pop
and
and
outsl
inc
mov
jne
push
inc
enter
mov
xor
sbb
pop
inc
mov
bound
dec
mov
cli
arpl
mov
sub
daa
stos
popl
ret
lods
cltd
rcr
cwtl
xor
hlt
push
fisttpll
mov
je
xchg
rolb
mov
lea
nop
or
fistpll
inc
push
pop
repz
mov
xor
and
testb
loope
adc
sub
fs
imul
sub
cmpl
push
and
pop
push
add
cmp
and
rcrb
movsl
daa
sbb
push
rcrl
xchg
fcoml
xor
cltd
dec
jne
sbb
jg
sti
inc
mov
jmp
into
js
jg
or
mov
cmpsl
outsb
lret
sti
insl
and
xor
sbb
dec
xor
sub
xlat
out
iret
or
movsl
xlat
xor
cmp
pop
mov
cwtl
dec
insl
mov
daa
dec
fs
mov
xchg
cmc
inc
lock
pop
lods
sti
add
pop
aam
out
arpl
sti
pop
sub
xor
rcrb
dec
pop
xor
pusha
repz
lods
outsl
inc
and
rcll
sahf
sub
lods
add
outsl
aad
daa
jns
fisubs
push
ret
or
aad
inc
fidivrs
pop
xor
into
mov
scas
mov
and
outsl
mov
into
dec
fmull
ljmp
sub
pusha
add
ds
fldt
sub
and
pop
out
cli
and
mov
test
mov
arpl
push
sahf
js
cmpsl
test
ds
dec
mov
les
jno
fucomip
jb
jl
adc
mov
adc
lds
rolb
imul
pop
sub
cli
out
xchg
sbb
call
xor
cmp
lock
cmc
push
cwtl
xchg
sub
add
aaa
inc
outsl
movsb
bound
jns
jo
insl
or
in
or
sub
sbb
clc
cmp
repz
push
xchg
jns
push
dec
xor
or
cmc
sub
xchg
pop
inc
test
addl
sub
or
cltd
mov
out
sarb
and
inc
andl
mov
xchg
push
das
cmpsb
rcl
bound
dec
ficompl
in
and
push
or
dec
lock
pop
out
sub
andb
jl
std
mov
cmp
dec
push
or
and
jbe
sbb
sbb
jp
lock
xor
insl
and
mull
dec
pop
jno
insl
cld
lods
popa
dec
jno
es
sbb
ret
mov
jb
xchg
js
das
push
movsb
insl
mul
iret
mov
cld
or
pop
sbb
or
data16
mov
in
sahf
dec
lcall
out
sbb
pop
and
push
popa
stc
movl
sub
in
enter
xor
add
add
repz
ss
and
add
test
or
jg
sbb
dec
mov
in
dec
stc
leave
push
stos
imul
test
mov
ror
mov
dec
call
test
shl
roll
mov
in
push
enter
roll
mov
out
inc
orb
outsb
pop
mov
mov
mov
adc
enter
xchg
xchg
or
mov
xchg
sbb
push
lret
xor
sbb
mov
xchg
mov
ja
call
sbbb
int3
test
shrb
ds
pop
dec
adc
jge
cmpsl
ljmp
mov
push
cmp
cmp
int
cltd
and
in
cmpsb
xor
clts
xor
mov
inc
aaa
fstps
outsb
imul
gs
jl
fistl
cmpsl
add
mov
sbb
aas
daa
cmpb
ds
mov
mov
cmp
xchg
cmp
shll
jle
leave
popf
ljmp
lods
ret
mov
into
sbb
inc
and
dec
xchg
inc
mov
dec
aaa
outsb
xchg
inc
push
or
lds
mov
lods
pop
xor
mov
push
pop
mov
mov
movsb
insb
xchg
jns
xchg
adc
xchg
inc
mov
push
fidivl
fstpl
das
jae
mov
in
nop
xor
aaa
test
arpl
movsl
mov
rol
pop
jae
jno
out
cmp
lock
insl
pushf
data16
cmc
xchg
xchg
stc
mov
dec
repz
addr16
jns
iret
sub
ds
cmpb
rol
push
jnp
mov
mov
or
loopnew
imul
idivl
or
mov
adc
maskmovq
imull
cmp
jle
cmp
sbb
mov
dec
lret
iret
in
xchg
jno
jmp
or
add
lea
lahf
mov
ret
push
xor
es
xlat
arpl
cmp
ljmp
cld
pop
push
ja
xchg
add
rclb
pusha
stos
ljmp
pop
add
sbb
dec
inc
mov
mov
mov
dec
push
push
call
xor
pushf
push
sub
sbb
ds
bound
out
sbb
cmp
inc
inc
jge
cmc
push
xchg
push
shl
cmp
out
sbb
ja
rorl
movsl
mov
popf
fimuls
push
stos
push
outsb
imul
pop
in
xchg
cld
sub
adc
mov
cmp
jo
mov
iret
sub
xor
incb
icebp
sub
cmpsb
loopne
filds
pop
mov
in
add
arpl
adc
std
mov
pop
cmp
or
loope
aad
pop
adc
adc
mov
test
sbbl
and
ja
andb
sbb
mov
test
dec
mov
es
lods
fwait
and
inc
and
int3
jae
xor
iret
or
sarl
imul
test
jmp
xor
aad
sub
jecxz
jb
jb
xchg
xchg
jb
dec
inc
out
mov
repz
in
incb
inc
sbb
dec
fwait
jns
xchg
jg
insl
inc
or
and
inc
outsb
pop
mov
pminub
pop
loope,pn
por
lahf
int3
mov
dec
call
lahf
ja
mov
subb
repz
lea
in
mov
sbb
stos
push
jge
fs
adc
scas
jge
mov
inc
mov
adc
pop
mov
test
movsw
mov
sbb
pop
sub
cld
ljmp
xchg
jns
les
xchg
scas
data16
or
add
icebp
xchg
inc
sub
adc
xchg
dec
lret
or
mov
mov
in
ret
mov
and
jnp
stos
fbld
imul
adc
std
mov
data16
dec
adc
dec
fistps
xchg
sub
repz
cwtl
jnp
sub
dec
mov
push
inc
adc
mov
repnz
xchg
pusha
xor
cmp
inc
cmp
pop
out
ficoms
adc
sub
add
cltd
inc
ret
pop
lods
ret
jmp
jp
cli
out
and
jbe
outsl
repz
into
pop
sbb
es
mov
sub
mov
subl
lock
ja
inc
int
cmpsb
mov
sbb
data16
jo
mov
mov
fstps
sub
jmp
nop
mov
cwtl
inc
test
js
mov
add
jne
mov
adc
jmp
insl
mov
mov
pop
pop
xor
int3
or
popa
mov
add
sub
in
data16
adc
sarw
or
into
les
jns
mov
cmpsb
inc
inc
push
loope
and
mov
nop
sbb
lahf
insb
add
pop
js
jns
enter
ja
pop
packsswb
aad
adc
fucomip
and
mov
mov
bnd
aas
dec
push
outsl
mov
cmp
xor
movsl
mov
adc
in
pop
xor
mov
cmc
call
std
inc
in
fsubrp
sbb
or
pop
sub
mov
or
loope
int3
sti
lret
cmpsl
xchg
dec
add
adc
insb
es
jno
mov
cli
sub
sbb
xchg
xchg
adc
jmp
outsl
sbb
test
pushw
jae
push
adc
pop
xchg
mov
sub
pop
xor
ds
push
dec
loop
pushf
adc
in
xchg
outsb
adc
push
sub
cmpsb
aas
mov
prefetchwt1
add
stc
xchg
and
cld
inc
xchg
std
or
inc
ljmp
movsb
mov
shlb
mov
add
lret
sbb
sub
sub
std
mov
iret
and
pop
inc
enter
dec
dec
out
cltd
xor
xor
lods
or
sbb
int3
cmp
cltd
aas
or
rcrl
pop
out
dec
xlat
fisttpl
shrb
jb
pop
imul
shlb
xchg
fstpt
inc
sub
lds
xchg
sahf
inc
or
loop
or
mov
sbb
xchg
lret
std
dec
popa
ds
gs
rolb
loop
cld
stc
popa
push
subl
jmp
cltd
lret
orl
out
enter
jmp
jmp
cmc
dec
or
fwait
jo
mov
xor
cmp
je
scas
mov
sub
or
push
inc
lock
fldt
ja
xchg
xchg
or
divl
cmpsb
cmp
repz
inc
mov
xchg
jns
sahf
fdivr
ss
lods
les
rorb
sub
adc
xchg
dec
mov
movl
std
and
jle
push
sbb
nop
adc
pop
sbb
lahf
push
cmc
aam
sbb
mov
dec
idivl
aaa
pop
inc
pop
sbb
pop
daa
popa
or
daa
jne
pop
cld
push
push
pop
call
add
cli
push
ficompl
mov
push
mov
push
jbe
or
cmp
hlt
push
insb
or
imul
pop
sub
mov
mov
lods
std
rcl
pop
lcall
lock
pop
xchg
mov
mov
rorl
jno
ljmp
xchg
xchg
in
pop
jbe
lds
cli
loopne
sub
dec
ja
mov
bound
push
mov
subb
fnstcw
xchg
push
je
jmp
sbb
arpl
cmc
jecxz
jbe
repz
sbb
jns
cmp
imulb
andb
xlat
mov
fldl
bound
scas
mov
scas
test
idiv
mov
cmp
jge
add
jmp
xlat
xor
test
push
test
mov
loopne
jge
xchg
push
testb
push
mov
adc
arpl
mov
dec
xchg
and
dec
pop
ss
test
outsb
dec
mov
ret
aas
in
into
ja
cmp
xchg
push
loopne
xchg
aas
scas
repnz
enter
repz
cmp
hlt
jl
sub
jge
insl
stc
jbe
mov
stos
cli
mov
sub
rcll
lds
das
cmp
mov
xchg
push
bound
xchg
or
and
mov
fadd
test
ret
insl
fmuls
lahf
in
mov
add
inc
insb
pop
inc
push
bound
xor
add
scas
dec
jecxz
sarl
xchg
nop
xor
mov
arpl
pop
ss
sbb
or
ds
lock
sti
mov
fidivrl
gs
lds
or
sbb
test
dec
sbb
push
pop
inc
lock
mov
cmc
xchg
jp
pushf
dec
push
scas
sbb
mov
test
jecxz
push
nop
sub
stos
add
xor
jg
mov
mov
imul
inc
rcll
pop
hlt
loope
call
inc
push
je
mov
cmpsb
mov
insb
push
int3
xchg
dec
jl
mov
test
mov
lods
lea
shll
gs
jmp
mov
ljmp
les
mov
cmp
cmp
loope
imul
jns
mov
sbb
idivb
loopne
lds
mov
ret
sbb
xor
sub
movsb
push
cmp
and
push
mov
xchg
inc
adcl
mov
stos
add
push
xchg
jbe
aad
jb
mov
add
xchg
pop
mov
arpl
pop
mov
xor
inc
xor
pop
das
ljmp
push
adc
pcmpgtb
ficoml
fisubs
push
out
loop
stc
cmp
fnstsw
add
rolb
cmp
mov
pop
pop
stc
popa
lock
mov
and
push
cs
lahf
adc
in
cmp
movsb
sub
stos
push
hlt
popf
pop
jmp
mov
adc
les
mov
filds
mov
push
sbb
dec
xor
sub
inc
ss
ret
sub
cmp
cmpsl
stc
clc
repz
pushl
data16
clc
pop
push
sbb
sbbb
or
das
mov
test
mov
cmp
dec
testb
in
xchg
into
cmpsl
scas
push
out
add
or
popa
cmc
push
scas
fadds
fnstsw
ud2
filds
ss
cmp
jl
jmp
dec
les
fldcw
movsl
subb
mov
or
jle
es
push
add
cmc
inc
stos
insl
jle
mov
and
adcl
fs
pop
cli
out
lret
and
jge
inc
sub
mov
loop
dec
xor
out
repnz
pop
xchg
xchg
fimull
je
imul
dec
pop
push
insl
push
mov
xchg
xchg
pop
mov
rorb
stos
cld
int
test
lods
imull
adc
xor
rcrb
push
push
push
test
push
mov
fsub
cltd
cmp
rcrl
dec
adc
arpl
pop
loop
adc
sbb
aaa
and
sub
fsubl
jnp
add
je
jl
sti
das
aam
xor
push
mov
xor
into
fwait
xchg
add
mov
daa
iret
adc
sti
mov
xor
cmp
daa
imul
mov
push
dec
out
out
or
mov
xor
in
pop
pop
cmovnp
pop
push
pop
jp
insb
xchg
out
mov
mov
movsb
jnp
xor
fsubrp
cmp
int3
add
fisttpll
scas
popa
outsb
mov
and
dec
mov
mov
xor
test
mov
mov
push
pusha
cmp
push
xor
xchg
and
movsb
mov
aaa
xor
mov
lods
imul
sub
adc
dec
mov
mov
cwtl
nop
mov
cmpb
out
sbb
mov
aas
loope
adc
mov
fstps
push
movsb
enter
mov
lods
notl
imul
stc
xchg
mov
jp
imul
mov
adcl
imul
pop
repnz
add
xor
push
imul
mov
inc
jg
jp
aaa
mov
dec
out
imul
into
stc
add
pop
iret
xchg
push
ljmp
jae
outsl
jns,pt
nop
sbb
add
insb
sbb
jns
ljmp
sub
rorb
cld
or
ficoms
gs
jns
cmp
jmp
popf
xchg
and
or
pop
sbb
jmp
push
push
pop
jae
pop
pop
jo
dec
push
leave
or
sub
andl
jns
addr16
pop
sti
dec
dec
cwtl
je
inc
sbb
in
mov
pop
cmp
mov
movsb
cmp
cwtl
sbb
lock
pop
jmp
iret
mov
fwait
xchg
iret
out
int
test
call
iret
jmp
push
push
dec
or
popa
in
cltd
push
and
mov
push
lcall
enter
and
sahf
add
outsl
pop
dec
test
les
sarl
outsl
mov
jmp
fwait
out
inc
fists
ss
push
jecxz
lret
iret
and
jns
mov
cmp
cmc
std
ja
les
rcr
cmp
dec
sub
mov
das
dec
fwait
xchg
testl
adc
sbb
push
in
inc
pop
aas
or
out
jecxz
mov
popa
ss
mov
cltd
out
mov
popa
out
add
add
call
sbb
sbb
cwtl
lods
in
inc
js
cld
lea
or
pop
outsl
dec
sub
cmp
sbb
into
push
sub
fldcw
mov
pop
cmp
repnz
lods
add
pop
and
mov
jne
leave
loop
jmp
push
aaa
xchg
mov
xor
scas
dec
fisttps
sub
lea
cmp
cwtl
or
ret
addr16
mov
mov
mov
adc
ds
shrb
jb
arpl
pop
pop
das
and
pop
sbb
pop
push
cmp
out
dec
pop
mov
paddd
repz
mov
insb
shr
repnz
lods
push
insl
dec
push
fiaddl
cltd
xchg
pop
es
fimuls
notb
push
xor
mov
das
pop
icebp
sbb
jmp
lods
cs
jbe
insb
jne
mov
add
test
push
ret
mov
clc
cmp
aad
mov
sarb
das
sbb
je
push
in
les
mov
shll
or
jbe
test
mov
and
pop
mov
lcall
mov
and
mov
dec
fistpl
xorb
xchg
test
repz
or
rcl
adc
leave
push
or
cld
mov
xor
push
shrb
xlat
pop
ficoms
jp
inc
jae
and
in
sbb
adc
out
ds
arpl
mov
gs
cmp
pop
lret
cmp
xchg
sub
adc
and
and
aas
xchg
rol
sarl
cmp
mov
lret
out
mov
jp
out
lods
mov
call
mov
cli
lret
xchg
push
sarb
pop
enter
std
xor
inc
or
rcl
fst
xor
insl
movsb
push
movsb
pop
push
dec
or
shll
es
hlt
pop
movsl
arpl
or
xor
dec
popf
icebp
and
mov
xchg
jae
pop
insb
sarb
jns
jmp
cmp
pop
test
jecxz
lret
scas
andl
das
xchg
in
and
push
test
xor
adc
in
cmpsb
in
imul
sbb
bound
xor
mov
shr
mov
jnp
lret
sbbb
enter
scas
push
lret
push
dec
std
pop
in
or
inc
rorl
inc
adc
sub
fisubrl
test
jns
or
int3
push
mov
js
shll
adc
sub
jmp
or
add
cmp
addr16
movsb
xchg
pop
and
cmp
add
pop
sub
jo
adc
mov
pop
xchg
cmp
push
stos
xor
les
inc
popf
dec
repnz
adcb
pop
push
int
roll
repz
sbb
dec
es
push
lcall
outsl
lret
push
call
add
add
jnp
push
rclb
mov
pusha
or
sub
push
mov
mov
enter
xor
sbb
shufps
bound
pop
sbb
push
xor
inc
xchg
pop
push
jae
dec
fs
mov
mov
icebp
lds
fs
shlb
add
xchg
mov
cmp
or
dec
div
lock
cmp
inc
lods
lods
mov
clc
inc
inc
cmp
sub
mov
push
inc
insb
int
subl
inc
mov
out
jbe
xor
cmc
inc
inc
jge
cltd
or
xchg
mov
mov
mov
pushw
xchg
inc
stos
jl
jge
movsl
repnz
sbb
in
aas
pop
mov
pop
and
inc
xchg
call
mov
xchg
stc
nop
insb
and
das
cltd
leave
dec
xor
adc
jmp
sub
cmpl
aam
test
and
ja
pop
jp
cmp
iret
out
dec
fwait
or
ds
mov
mov
cmp
jmp
add
std
add
or
stos
loopne
cmp
loop
sub
mov
out
stos
add
pushf
mov
int
mov
stos
test
xor
cmp
and
fcmovnb
cmpsb
shrb
stc
mov
mov
shll
or
xchg
and
loope
lods
stos
test
mov
test
scas
add
aaa
addb
imul
dec
push
xor
rcr
popf
mov
les
fistpll
sbbl
pusha
adc
iret
jno
adc
out
aaa
sarb
xchg
out
sbb
fcmovnb
mov
jne
push
imul
jecxz
mov
mov
repz
jle
dec
add
sarl
clc
bound
loopne
or
xor
inc
add
mov
push
mov
test
repz
xchg
inc
popf
gs
xchg
mov
xchg
cmc
shll
dec
js
jmp
cmp
mov
cs
jle
fcmovbe
xor
or
inc
cs
adcl
inc
mov
repz
mov
test
jp
jmp
mov
sar
or
cmpsb
das
sub
mov
cmc
fwait
ret
cltd
pop
add
out
lcallw
sbb
mov
sub
lcall
mov
sub
sub
cmp
ror
jne
shrl
lahf
lds
test
jmp
sbbb
pop
cli
mov
xor
and
sbb
jb
push
fidivs
cmp
cmc
fcomip
and
enter
mov
hlt
imul
movsb
in
adc
ror
mov
add
les
fwait
xchg
jle
lds
outsl
fs
test
inc
xchg
in
xchg
dec
jnp
popf
lret
shrl
movl
cli
push
pop
inc
jo
cltd
adc
mov
cmpsb
test
loopne
lcall
in
cmp
mov
cmp
mov
xchg
fcoms
lahf
std
addl
lret
ss
imul
sbb
add
mov
pop
fbstp
xchg
or
jnp
xchg
imul
iret
add
add
xor
jg
and
inc
add
lret
dec
ret
out
dec
sub
xlat
jp
xchg
push
cmp
or
orl
iret
adc
pop
shr
loope
jno
xor
shll
mov
cmp
or
or
xchg
sub
ljmp
sbb
les
lret
pop
vpor
aad
insb
fidivrl
dec
pop
xchg
mov
cmp
cltd
sub
imul
outsb
push
inc
insb
fwait
jp
int
in
xor
sbb
dec
push
dec
imul
test
test
mov
sub
dec
data16
push
jmp
insb
sbb
ss
cld
add
dec
je
imul
pop
mov
out
cltd
sbb
rcll
in
mov
sbb
sub
fwait
js
fmull
sbb
pop
lods
movsb
sub
test
in
insl
add
in
cltd
adc
out
and
add
cmpl
pop
mov
mov
mov
and
cmc
jmp
cmp
ljmp
xor
ds
xchg
daa
mov
jg
mov
xchg
mov
xchg
stos
jmp
adc
cmp
test
xchg
scas
xor
mov
jnp
lcall
jp
lods
iret
dec
mov
push
lret
insl
dec
je
leave
mov
jle
test
xor
xor
out
nop
bound
lock
sub
inc
faddl
std
and
lret
lock
outsw
pop
jnp
negl
xchg
int3
xchg
into
and
std
cli
leave
mov
jno
push
or
sbb
cmc
cmp
popa
cmp
lcall
or
mov
ss
mov
sub
aas
hlt
mov
imul
push
inc
shrl
pop
and
xchg
mov
jnp
or
jl
cmp
repz
xchg
and
int
test
int
orl
jg
and
sbb
xchg
or
add
dec
pop
sbb
pop
sbb
mov
popf
pop
mov
out
pop
inc
lods
divb
enter
aaa
jecxz
arpl
fnsave
pop
xor
xor
dec
sarb
sub
popa
adc
xor
push
xchg
xor
pop
pop
xchg
sub
xor
and
push
inc
push
mov
inc
psrlw
jbe
push
mov
sub
cwtl
xlat
push
lahf
les
pushf
fs
pushf
push
mov
cli
cmp
in
adc
jmp
std
jmp
mov
or
es
pop
mov
in
loope
mov
daa
xor
pusha
jae
cltd
rol
and
or
cmpl
ret
adc
test
movsl
jl
mov
xchg
mov
gs
lock
insb
leave
adc
std
and
cltd
inc
popa
xchg
adc
add
mov
sub
or
xchg
fbstp
in
inc
and
sub
sub
dec
fisttpll
inc
mov
mov
out
fdivl
add
jmp
pop
xchg
lret
ret
cld
mov
out
lea
push
aaa
cwtl
imul
in
xor
and
dec
aas
dec
push
add
cmp
jo
jnp
test
push
shrl
jge
push
adc
lahf
push
sub
add
outsb
jecxz
test
out
inc
add
adc
enter
push
lret
shlb
fisubl
scas
xlat
lcall
mov
sbb
ret
loopne
sar
arpl
mov
imul
inc
mov
ret
lcall
sub
lea
lds
sub
lods
lahf
mov
sbb
enter
clc
cmp
mov
mov
cmp
in
movsl
sbbb
fstp
cli
cld
aaa
mov
cmpsb
mov
hlt
dec
test
dec
cmp
mov
test
fs
sub
andb
mov
sub
xor
out
mov
lea
stos
mov
sub
inc
adc
aas
cltd
mov
adc
and
push
and
xor
loop
outsb
xor
cmp
xlat
dec
les
sub
sub
stos
mov
ljmp
mov
enter
lds
mov
mov
inc
cld
in
or
jnp
mov
and
lods
xor
and
jns
sahf
jle
xlat
jp
adc
int3
fdiv
out
xlat
xchg
lcall
and
lahf
sbb
outsl
inc
adc
xchg
pusha
dec
test
mov
aad
addr16
popa
sti
pop
inc
pop
jno
dec
je
mov
jmp
pop
test
repz
mov
sti
je
push
addl
jnp
lods
out
xchg
aad
cmp
nop
cli
or
in
mov
push
popa
push
push
les
cmp
jo
popf
xchg
dec
lods
dec
test
push
clc
aad
mov
out
jmp
mov
loopne
das
jae
in
mov
push
int
inc
dec
sbb
popa
pop
mov
mov
mov
xchg
jno
pop
stos
pop
push
and
movsb
test
rcr
mov
adc
aad
cmp
pop
lds
outsl
daa
xchg
or
push
dec
cld
inc
int
lcall
sahf
cmpsb
push
stos
mov
mov
pop
dec
jno
aas
add
pinsrw
out
mov
xchg
je
aaa
dec
mov
and
push
nop
int3
vpshufd
mov
xchg
mov
push
adc
outsb
xor
mov
jae
fxch
sub
sbbb
add
aas
dec
and
push
lahf
adcl
ljmp
mov
cmp
hlt
xchg
sbb
data16
add
pop
inc
sub
ret
in
lret
test
dec
mov
push
jle
jg
rcr
out
cmp
jl
inc
repnz
mov
stc
shlb
cmp
lods
fstps
add
lock
or
das
daa
mov
jb
lret
pop
fldt
flds
sub
cmpsb
mov
pushf
xor
insb
and
xchg
lock
pop
jbe
add
mov
and
jp
dec
add
mov
cld
mov
aad
lahf
inc
dec
loopne
aas
icebp
icebp
mov
mov
dec
push
daa
cmp
es
loop
mov
push
sub
xchg
aad
xor
lea
popf
dec
pop
mov
shrl
scas
cmp
inc
xchg
shlb
loopne
test
mov
cmc
aaa
sahf
cmp
mov
stc
xorps
or
xchg
push
push
xlat
dec
fiadds
mov
add
push
lcall
pop
cwtl
fmuls
mov
arpl
sub
and
adc
jmp
repnz
hlt
lock
pop
sbb
loopne
sbb
scas
movhlps
xor
xchg
test
lcall
test
push
jnp
ljmp
sbb
xchg
push
mov
mov
jp
inc
adc
push
pop
add
cmp
or
ss
add
pusha
movsb
lea
pop
or
push
pop
movsb
subb
popf
pop
in
add
mov
scas
movsl
pop
mov
nopl
or
inc
dec
and
jle
push
jne
pop
mov
jne
sbb
int3
jae
popf
sti
cmp
fnstsw
push
popf
or
aam
icebp
cli
test
or
jle
sub
int
cmpsl
push
and
mov
sub
jl
aas
je
or
hlt
add
stc
jae
cmp
or
std
daa
cli
mov
mov
and
fcomip
sub
mov
scas
sbb
lea
adcb
imul
inc
xor
or
cmpsb
jle
daa
testb
add
pop
pop
or
test
xchg
add
push
mov
lcall
sub
adc
dec
push
lds
gs
andb
push
mov
jb
stc
ss
fs
pop
stos
cltd
dec
mov
lods
jae
fcmovne
popa
je
fimuls
inc
mov
mov
adc
enter
cmp
pop
or
leave
loop
fcmovbe
mov
xchg
fcompl
xchg
sahf
mov
mov
popa
jne
xlat
addl
int
jns
movsl
fcomps
push
pushf
push
sti
jnp
mov
push
das
xchg
pusha
xor
cmpsl
xchg
ds
je
fstpl
sbbl
mov
nop
jbe
dec
fcmovu
icebp
jb
sub
ret
jnp
jnp
rorl
add
mov
shrl
mov
call
adc
and
icebp
lahf
dec
test
adc
jns
daa
push
xchg
xchg
mov
inc
stc
sbb
mov
pop
xchg
lret
mov
sbbl
mov
push
data16
lds
loope
dec
sub
jae
xor
lea
test
aam
push
popf
int
xor
xchg
inc
or
aas
push
das
out
cli
push
pop
into
xor
push
inc
gs
sbb
push
cmp
jmp
jb
mov
add
jg
mov
dec
mov
cmpl
stos
andb
std
mov
lods
sub
lahf
shr
nop
dec
insl
shlb
jno
and
push
lret
hlt
out
rorl
imul
fldcw
dec
dec
les
mov
fildl
inc
xor
pop
scas
sub
sbbb
cmp
out
iret
inc
enter
cmc
out
sub
pushl
xor
cs
and
jno
cltd
incb
popa
and
mov
pop
and
adc
push
cs
movsb
adc
cmp
dec
sbb
adc
jns
fiaddl
aad
cltd
pop
mov
dec
aad
dec
dec
fs
lds
sbb
sbb
cs
in
inc
out
stos
inc
fnstsw
aad
jns
in
cmpsb
pop
jno
mov
sub
fbld
sbb
or
mov
orb
adc
or
es
movsl
in
lcall
aad
inc
xor
daa
lods
orl
ret
sbb
and
out
inc
push
mov
out
mov
dec
sub
cmp
inc
mull
inc
sub
adc
jnp
scas
cld
push
jns
test
insb
mov
lcall
rcl
push
sub
and
in
dec
out
inc
shl
mov
lds
dec
ljmp
test
mov
mov
ss
or
xchg
je
pop
push
call
shll
outsb
push
dec
loope
sub
add
popa
test
xchg
enter
fidivrs
and
imul
lahf
add
les
mov
clc
pop
pop
push
inc
sbb
out
fucomp
leave
in
sbb
in
jnp
pop
sahf
jp
out
je
bound
add
sub
xor
mov
lret
shrb
jne
mov
inc
inc
pop
sub
sub
cmp
lock
jo
or
xchg
inc
test
inc
in
ja
dec
or
mov
fdivr
cli
or
lods
pop
jno
loopne
repz
je
dec
dec
stos
jno
in
xchg
addr16
cmpsl
subl
mov
fwait
repnz
pop
xor
sub
lret
xchg
sbb
dec
mov
mov
mov
mov
or
cld
lcall
dec
mov
jecxz
pop
popa
repnz
mov
cmp
xor
sbbl
adc
fwait
jge
lods
lret
cmp
mov
mov
cmpl
adc
jo
xchg
push
addr16
jl
in
shlb
int3
je
iret
and
in
cmovne
xchg
and
mov
mov
inc
aas
in
in
jl
pop
add
mov
loope
sub
and
cli
pop
fidivs
je
pop
inc
push
rcr
sbb
into
mov
fsubl
incb
std
repz
mov
jnp
mov
pop
vmwrite
popf
push
and
iret
jp
in
into
cmc
loopne
rorl
or
aam
fiaddl
in
push
push
mov
and
xor
xor
shr
adc
filds
int3
sub
fwait
pop
mov
dec
cwtl
and
push
jbe
add
clc
ljmp
pop
or
test
mov
xlat
sbb
or
mov
pop
adc
jmp
cmc
movsl
jae
cs
hlt
sbb
fcmovbe
push
stc
push
or
pop
dec
dec
xor
dec
jo
ret
ds
or
out
xchg
xlat
mov
dec
fstpt
loopne
xor
lock
mov
add
pushf
xor
bnd
insb
and
jb
notl
iret
mov
and
sar
jp
orl
push
and
mov
mov
mov
movsb
sahf
decl
add
sbb
fdivrs
scas
jl
mov
lods
ja
add
xor
jp
mov
xor
sarl
sbb
push
inc
movsb
ret
mov
lock
mov
repnz
outsb
lods
mov
mov
add
ret
lcall
jecxz
add
int3
add
mov
cmc
xchg
cmp
lahf
or
jbe
add
and
jge
adc
jbe
nop
out
inc
mov
push
lds
xchg
andl
mov
in
pop
mov
mov
sbb
decl
and
push
dec
loope
lea
aas
inc
sub
fildll
hlt
and
jnp
mov
test
js
sub
ss
xor
daa
cmp
loopne
mull
int3
xor
xchg
aad
xchg
inc
gs
ljmp
sub
cmpl
jle
push
pop
in
inc
jb
jle
shl
pop
mov
jne
adc
fcomps
and
push
add
in
jb
xlat
dec
repnz
fisubrl
push
lahf
cmpsb
outsb
sahf
test
mov
sub
ja
adc
pop
out
icebp
movsl
sub
xor
int3
xor
shll
pop
ds
scas
dec
loope
lds
mov
sarb
scas
aam
lcall
push
fsubrs
lock
or
inc
imul
test
lret
je
xchg
data16
jecxz
or
into
and
lahf
in
ljmp
add
xlat
dec
fstp
jl
and
out
lcall
sub
call
cwtl
ss
lret
shll
and
inc
repnz
push
rol
pop
add
mov
add
or
xchg
imul
ja
lea
mov
jecxz
in
or
repnz
or
shll
ret
pop
push
jp
vpshufhw
mov
stos
inc
mov
pop
mov
outsl
inc
sbb
push
outsl
inc
or
loope
push
aam
mov
ret
nop
push
cmp
mov
mov
sbb
fisubl
mov
xchg
gs
cld
lcall
sub
arpl
jnp
icebp
xor
das
dec
stc
popl
leave
sbb
cli
icebp
loopne
cmp
shrb
cmp
dec
addr16
rcrb
dec
jne
movsl
imul
inc
push
xchg
inc
loop
push
cmp
leave
xchg
xchg
jb
rolb
jnp
ret
notl
test
jmp
inc
in
imul
cmpsb
push
loopne
push
popf
ljmp
sub
dec
aas
mov
test
lock
cli
outsb
jmp
push
aaa
and
clc
insl
dec
adc
inc
ljmp
clc
mov
fstpt
daa
cmp
js
or
inc
mov
sbb
push
movsl
sysret
shrb
lds
test
fbld
pop
cmp
cli
imul
subl
jns
std
xchg
dec
nop
scas
ss
out
ror
nop
stos
orl
xchg
lods
adc
dec
cmp
dec
out
je
test
into
and
pop
cs
je
xor
loope
jnp
dec
jb
mov
sbb
push
cmpsb
mov
dec
mov
adc
movsb
rcrl
jl
ret
cmp
and
or
adc
cltd
arpl
shlb
lods
sub
cmp
push
dec
repz
in
popa
sbb
push
xchg
add
push
xor
xchg
cmp
subb
push
fimull
mov
icebp
mov
jno
mov
xchg
adc
xor
and
inc
loopne
loopne
popa
cs
push
cld
sahf
xchg
call
sahf
xchg
popa
decb
lret
push
push
lods
jp
jnp
rcl
ds
pop
jl
xlat
dec
lret
push
fisubrs
mov
dec
std
push
fcomps
sbb
cwtl
loop
decb
mov
cmpsl
call
pop
jecxz
jae
adc
lret
pop
mov
mov
bound
icebp
or
sbbb
decl
mov
outsb
pop
sbb
cmp
push
stos
scas
xchg
inc
ret
add
mov
jno
aam
push
sub
enter
mov
push
jno
mov
xchg
jecxz
nop
lods
idiv
sti
pop
sbb
rorl
xchg
mov
int
or
pop
loope
mov
ret
js
xor
cmp
dec
dec
mov
pop
or
imul
loope
pop
enter
hlt
jmp
cmpsb
xchg
scas
fs
fsubl
enter
mov
call
xor
repz
cmp
add
push
loop
sbb
pushf
cltd
arpl
aad
stc
inc
push
insl
xchg
sub
outsb
cmp
lret
imul
in
jp
inc
xorl
js
bnd
aam
or
dec
xor
js
xor
or
mov
repz
in
or
cmp
aad
fistl
cmp
loop
pop
xchg
std
jmp
dec
scas
mov
push
mov
pop
jbe
arpl
inc
mov
mov
sbb
movsb
in
pusha
fnstenv
mov
shll
stc
adc
and
lds
xchg
or
sub
xlat
out
mov
ret
mov
pusha
pop
test
adc
std
and
out
iret
loop
js
sub
add
xchg
nop
sbb
mov
jae
jns
dec
dec
insl
mov
imulb
mov
arpl
stos
lret
xchg
cld
rcr
fscale
and
loop
enter
cs
shrb
xor
aas
insb
pop
sub
add
sub
in
or
inc
xchg
je
mov
mov
jmp
fistps
xlat
cmpsb
jge
fists
add
ret
push
dec
scas
mov
mov
and
shrl
jmp
rcrb
pop
cmp
daa
mov
or
dec
xor
divl
dec
mov
push
clc
mov
lret
pop
lret
dec
call
pop
sbb
mov
out
xor
sti
adcw
jns
sbb
push
fisttpll
inc
adc
mov
cmp
jmp
ffree
mov
sbb
dec
out
sub
jmp
lock
ret
sahf
mov
add
scas
repz
gs
pop
bnd
jo
notb
std
cmp
pop
cmpsl
sahf
aam
jle
or
icebp
call
into
adc
pushf
xor
push
les
mov
add
or
cmp
cmp
jne
nop
es
or
xchg
imull
cs
pop
pop
push
inc
mov
push
out
sbb
xor
sub
cmpl
in
repz
inc
std
out
dec
sub
inc
inc
test
adc
mov
adc
mov
lret
fldt
out
mov
mov
push
jb
out
jg
inc
fistps
mov
scas
lret
cltd
push
sti
or
ds
mov
es
mov
or
inc
push
xchg
insl
mov
pop
popa
pushf
push
cltd
les
loopne
sbbb
cmp
cld
ds
jle
sub
aam
std
add
aas
push
pusha
adc
sub
jno
mov
or
test
push
xchg
jp
and
jmp
xchg
pop
lahf
mov
inc
fdivrl
inc
mov
imul
rolb
fadd
jecxz
adc
cmp
dec
mov
sbb
stos
jnp
outsb
movsb
cwtl
mov
jle
loop
lret
leave
and
mov
jmp
or
xor
cmpsl
scas
loop
fs
dec
cmp
xchg
test
test
cwtl
leave
fdivr
enter
pop
xor
cwtl
lds
add
jg
ret
pushf
lahf
dec
shll
jmp
test
cmp
mov
data16
arpl
or
shlb
or
and
mov
add
adc
sti
test
dec
rclb
mov
jae
rorl
insl
push
rorl
mov
das
mov
arpl
call
gs
stos
inc
insl
es
shlb
rol
les
and
jecxz
fidivs
sbb
cmpsl
jecxz
sbbb
push
cmpsl
fldcw
inc
xor
add
inc
fcoml
cmc
idivl
or
popf
std
outsb
mov
icebp
dec
es
mov
sbb
and
sub
add
jecxz
sahf
sub
call
stc
jmp
jae
push
dec
xchg
and
adc
push
mov
pop
repnz
dec
xchg
icebp
loop
sub
scas
cmp
inc
lret
lret
dec
adc
sahf
aaa
sbbl
sub
or
call
fnstcw
add
add
lds
jb
jge
test
jnp
add
xchg
jne
sbbb
mov
and
inc
or
jnp
dec
rep
mov
cmp
imul
sub
popa
push
rorl
or
stos
add
ds
xchg
movsl
dec
mov
bound
pop
flds
divb
push
mov
out
pop
pusha
es
mov
mov
lcall
dec
xor
sub
xor
dec
mov
inc
adc
inc
push
fcompl
cmp
lock
add
jns
xchg
outsb
xchg
insl
and
pop
cmc
adc
cwtl
jne
fnstenv
mov
shll
xor
addr16
je
mov
out
aaa
jne
popa
dec
pop
lods
rol
or
mov
insb
icebp
jmp
out
jno
cmpsb
xchg
mov
fld
cli
dec
jle
stos
jb
xchg
ja
inc
mov
pop
bound
add
divl
popf
xor
mov
dec
xchg
mov
push
push
stos
sub
xor
loop
push
cmp
mov
andb
jnp
dec
addr16
jl
xchg
mov
fucomp
andps
fiaddl
sbb
mov
test
inc
xchg
cmpsb
or
mov
das
xor
ss
pushf
mov
cmp
lds
sub
ret
inc
and
ret
imul
xchg
scas
ja
hlt
mov
faddl
fwait
out
sub
clc
shl
in
aam
dec
hlt
in
sbb
subl
cltd
and
insb
sti
jmp
ds
mov
outsb
pop
mov
sub
cmp
ret
data16
js
and
das
hlt
jl
cmc
cmp
pslld
xor
and
scas
dec
ret
call
xor
pusha
xchg
fcoms
or
pop
nop
xchg
xor
jb
xlat
fists
mov
aaa
push
insb
or
divb
outsb
enter
sub
cmc
xor
inc
lahf
sbb
dec
pop
fmull
clc
cmp
xor
ror
mov
pop
and
jno
sbb
lcall
stc
int
fdivp
mov
cmp
pushf
dec
ja
scas
iret
push
sbb
outsl
repnz
stos
adc
gs
nop
jecxz
arpl
adc
mov
lret
pop
mov
pop
cld
jecxz
fstl
xchg
xchg
jne
jo
iret
rcrl
addb
sbb
mov
loop
cmp
jle
lret
or
cmp
cmp
inc
stos
sbb
push
icebp
outsl
stos
dec
mov
jp
movsb
mov
insb
mov
jbe
fdivl
cmp
cmp
inc
mov
out
mov
iret
cmpl
or
jl
test
xchg
sub
incb
decl
sub
lods
test
call
lds
in
push
addb
sahf
fdivrl
mov
in
call
add
in
or
loop
mov
icebp
shll
dec
add
icebp
cmc
stc
pop
les
in
or
jp
pushf
aad
cltd
popf
outsl
ja
test
jbe
cmp
nop
and
repz
fildll
inc
mov
and
mov
or
xchg
popf
fstp
outsb
mov
pop
lods
dec
sub
jae
inc
push
lods
dec
sbb
fs
bound
loope
pushf
ret
jle
outsb
xlat
inc
clc
ret
mov
jb
mov
adc
fists
test
cmpsb
add
ljmp
xchg
mov
cmp
xchg
jmp
cmp
or
call
into
int3
in
popa
loop
and
ds
and
cs
xlat
cmp
add
inc
push
xchg
mov
in
es
psubsw
shr
mov
sub
je
add
imul
imul
mov
arpl
insl
mov
movsb
inc
or
inc
fs
push
sarb
cmp
repnz
add
andb
lock
lds
pop
movsb
in
cmp
inc
fstps
scas
ret
insl
lahf
popf
xor
clc
daa
fptan
fisubs
sbb
jge
push
push
add
icebp
mov
dec
ja
les
xchg
repz
hlt
outsl
dec
cmp
scas
adc
rol
or
xor
cwtl
xlat
jns,pn
cltd
jne
addb
jg
sub
push
xlat
adc
in
icebp
sub
mov
es
shl
bound
push
adc
inc
pop
sbb
jmp
jo
dec
fisubs
call
mov
xchg
and
test
sbb
push
fcomp
mov
adcb
stc
ss
xor
ljmp
push
js
loope
fdivs
sub
sti
mov
inc
jp
pop
xchg
shld
fstps
jnp
hlt
loope
sbb
ss
hlt
jg
cmc
movsb
pop
cmc
mov
push
je
repz
xor
jecxz
sarl
sub
cmc
std
adc
into
pop
leave
lods
cmpsl
mov
jecxz
xchg
mov
data16
sub
cltd
ja
pop
mov
pusha
std
pusha
sub
xor
shlb
jl
mov
or
loope
test
fcmovne
cmpsb
and
out
and
cmpsl
ds
or
sbb
mov
cmpsl
cmp
fwait
iret
add
and
pop
pop
jbe
add
pop
ret
jecxz
aas
in
xchg
sbb
stc
jg
lds
aad
data16
repnz
add
ficoml
sub
pop
mov
mov
inc
jp
ss
std
enter
and
xor
mov
push
idivl
ror
es
jne
insl
das
jae
pop
lock
or
xchg
xchg
scas
push
mov
subb
movsl
pop
jo
test
push
clc
pusha
jmp
mov
add
sbb
test
and
test
mov
cwtl
jb
mov
fcmovnb
std
pop
inc
rcrb
mov
xor
imul
and
inc
xor
sub
cmpl
lcall
orl
xor
push
fwait
cli
pop
stos
inc
subl
mov
jmp
imul
lock
jne
mov
dec
lock
popf
adc
popa
insb
jb
xor
in
pop
or
jge
sbb
adc
mov
fbstp
add
or
movsb
mov
cld
and
scas
lods
cmc
bound
and
cmpsb
lahf
cmp
cmp
lea
mov
stos
imul
test
sub
mov
cs
mov
mov
and
sarl
rolb
ret
xchg
and
or
popf
and
mov
or
sub
mov
pop
leave
fwait
mov
hlt
dec
adcb
push
outsl
mov
push
jmp
jne
jns
inc
xlat
insl
add
nop
mov
xor
mov
repz
sti
cld
jg
cld
data16
das
mov
or
mov
movsb
jecxz
cmpsb
popf
inc
pop
loop
repz
ret
cmp
mov
mov
jno
inc
xchg
or
mov
in
in
lret
sbbl
mull
out
sub
loopne
mov
ret
cmp
stos
cmpsb
add
imul
fnstenv
in
inc
clc
or
sub
pop
shr
cmp
hlt
jg
rcr
xchg
cmp
iret
jecxz
repnz
aam
les
xchg
out
pop
in
mov
mov
stc
popa
or
cmp
mov
stos
fistpll
ss
pop
mov
mov
popa
add
sbb
lcall
mov
cmpsl
adc
push
cltd
int
cmc
les
jge
ds
sti
sbb
add
push
push
mov
push
pop
mov
dec
dec
cwtl
bound
int
and
mov
mov
js
sarl
test
push
incb
mov
sbb
cltd
mov
test
aad
lds
push
mov
loope
rcll
xchg
cmpsb
push
mov
sbb
inc
into
jnp
out
repz
test
push
pop
ret
in
inc
inc
outsl
stos
add
in
notl
lock
and
or
push
mov
out
mov
mov
inc
fnstenv
dec
sub
imul
xor
push
or
in
jge
mov
gs
push
pusha
cwtl
pop
rcrb
lret
sub
mov
mov
jnp
jae
loopne
sbb
cli
outsb
mov
mov
lods
outsl
daa
gs
gs
enter
mov
sub
scas
int3
stc
arpl
test
sub
fs
cmp
sbb
jl,pt
mov
push
adc
or
ret
xchg
rolb
outsl
mov
mov
stos
div
lock
mov
decl
pop
std
icebp
fmull
ret
cld
fadds
int3
sbb
pop
fimuls
or
rol
and
mov
cmp
shrb
out
insl
sbb
movsb
mov
stc
xor
jo
xor
das
lret
fwait
xor
mov
xor
pop
std
les
insb
jne
iret
aad
and
and
call
aas
popa
push
and
rcr
js
inc
stos
jbe
ss
pslld
lea
jge
and
xchg
test
outsl
fisubrl
sub
or
inc
out
dec
sti
popf
sub
xchg
xchg
fst
xor
sahf
mov
fisttps
outsb
pusha
cmp
push
idivb
mov
aad
xlat
pop
cmp
mov
mov
in
mov
inc
mov
daa
push
xchg
cli
mov
fs
iret
mov
sahf
lret
mov
out
inc
sti
cwtl
cmp
xor
pop
xchg
in
mov
mov
insl
mov
jmp
xor
xor
pushf
xchg
cmp
shr
negb
push
cmp
jge
xchg
pushf
or
adc
dec
sbb
add
jmp
jbe
push
xchg
mov
test
cs
pop
mov
lret
leave
stos
ljmp
test
or
dec
or
subl
outsb
cmp
stos
mov
xor
outsb
dec
mov
fsts
in
aad
inc
mov
sub
dec
imul
and
and
sti
adc
sub
shlb
mov
insb
fistl
adc
js
in
gs
pop
lods
mov
in
jae
out
lret
addb
mov
pop
jg
out
mov
cmp
ret
jmp
mov
add
sub
mov
cmpsl
cld
xchg
xchg
sbb
push
shlb
xlat
xchg
sbb
test
xchg
pop
addr16
pop
mov
push
inc
clc
sarl
popf
sbb
repz
mov
push
and
std
int3
lcall
pushf
adc
aas
pop
fwait
xchg
pop
lods
fistps
cmpsl
out
out
cltd
mov
or
clc
lods
in
lds
imul
scas
in
bound
inc
movsl
xchg
test
jbe
mov
jmpw
bound
add
mov
iret
mov
or
hlt
andb
or
stc
cmpl
rep
fsubrp
testb
std
cmp
mov
sub
cmp
xchg
test
and
mov
jl
sub
sub
inc
subl
cmp
ror
pop
adc
sub
mov
jnp
jno
push
mov
push
cwtl
pop
cs
add
mov
into
mov
sub
mov
test
roll
cwtl
aam
pop
jp
cmpsb
iret
jo
adc
or
jae
mov
loopne
pushf
insl
iret
cmp
dec
mov
enter
pusha
sbb
add
cli
adc
nop
jne
mov
pop
orb
sub
dec
add
cmpb
inc
mov
out
js
lret
ljmp
add
inc
scas
leave
rorb
pop
enter
ds
loopne
jmp
pop
test
xchg
dec
lock
hlt
jno
in
movsl
insl
ja
popf
dec
lods
aam
inc
cmp
push
cmp
inc
jecxz
pushf
clc
cli
inc
cli
cltd
stc
daa
jl
testb
aad
cs
xchg
push
cmpsb
and
dec
xor
out
out
addb
leave
std
gs
repnz
pop
sub
cmp
mov
mov
popa
sbb
adc
into
inc
gs
adc
out
inc
adc
loopne
sub
pop
mov
pop
cmp
sub
push
adc
or
test
jmp
or
adc
pop
add
sti
fbld
rcll
pop
add
sub
and
add
mov
mov
aaa
sub
nop
sub
cmp
add
shl
sbb
mov
pop
fildll
fs
movsl
push
enter
sti
mov
cmpsl
sarl
mov
in
and
movl
jecxz
mov
inc
ret
dec
das
and
mov
test
pop
fldt
loope
mov
inc
enter
movl
pop
xchg
jge
lret
loopne
adc
or
dec
fwait
or
sub
jno
in
pop
hlt
lods
clc
addr16
test
jns
mov
das
in
inc
xlat
add
hlt
xchg
pop
idiv
mov
repnz
shl
andb
xchg
stos
xor
mov
pop
add
roll
repnz
cli
or
mov
push
jne
aam
push
jg
fsubrs
xor
cmp
adc
or
cmpsl
dec
push
mov
scas
and
int3
pop
hlt
rorl
dec
mov
mov
push
fucomp
dec
dec
mov
lcall
mov
mov
or
add
mov
fstpt
xlat
push
insl
fsts
pusha
aad
int3
repnz
jnp
lods
lahf
and
xchg
jo
test
push
lock
loopne
pop
mov
sar
cmp
xor
dec
cmp
and
rorl
mov
sbb
push
add
adc
xchg
cmp
add
outsl
out
pop
cmp
pop
mov
ds
mov
adc
mov
sti
push
mov
mov
push
xchg
inc
clc
rorl
add
cmp
data16
cltd
lods
push
mov
mov
fstpt
xchg
dec
or
fdivrs
mov
inc
sub
and
mov
jb
cmpsl
loop
jno
adc
clc
repnz
and
movhps
aas
inc
and
pop
mov
dec
jns
xor
pop
or
bound
push
cmpb
inc
push
mov
cmp
fwait
dec
fdivs
fwait
dec
or
daa
lods
or
mov
sbb
test
fcompl
fsubr
sub
mov
lds
jp
cmp
cli
es
pop
sahf
pop
popf
pop
cmp
jge
and
dec
or
pop
mov
adc
and
and
xchg
mov
stos
enter
popf
jo
sti
xchg
movl
out
cmp
push
xchg
lock
xchg
mov
aas
xchg
sahf
mov
leave
adcb
push
mov
insl
dec
shrb
aaa
mov
repz
xor
js
jne
movsl
mov
imul
pop
or
mov
sub
sbb
ret
cmpsb
cmp
xor
out
fcompl
out
out
mov
fiadds
int3
or
fmulp
cs
rclb
dec
mov
dec
push
insl
cmpl
scas
lret
and
pop
test
push
or
hlt
cmp
movsl
scas
or
mov
cmp
sarl
cmova
pop
in
sbb
std
xchg
sub
push
cli
mov
xchg
mov
ret
jp
cwtl
add
or
adc
or
sbb
nop
je
pop
mov
aas
dec
dec
dec
sub
or
push
shl
push
push
jbe
jb
push
jle
test
sbb
and
mov
mov
mov
mov
repnz
xlat
cmp
mov
ljmp
stc
jbe
shrb
fidivs
mov
adc
movsb
out
pop
and
pop
shlb
mov
jne
in
sbb
inc
inc
sub
cwtl
mov
les
cmc
or
mov
arpl
mov
aad
icebp
hlt
or
push
pop
and
mov
mov
fcmovbe
in
jbe
pop
aam
adc
fdivrs
movsl
cmp
or
ret
mov
popa
xchg
push
das
test
shlb
add
jecxz
inc
punpcklbw
push
fs
mov
das
push
stc
lds
jecxz
mov
dec
push
fs
fwait
scas
out
cmp
xchg
not
js
sub
xchg
lods
ret
cli
inc
fcoms
sub
sti
xchg
pop
mov
sub
adc
xchg
ds
cmp
mov
cmpsl
fimull
repz
stos
in
cli
push
or
imul
jb
inc
cmp
addr16
xchg
imul
mov
frstor
xor
push
subb
xchg
fmul
xchg
iret
iret
stos
cmpsl
scas
jae
repnz
sub
sbb
mov
das
daa
mov
jae
mov
leave
mov
push
bound
cmp
das
cmc
adc
cmp
add
and
add
jmp
cmp
nopl
sbb
jnp
jne
mov
shr
pop
je
test
ds
dec
loopne
add
les
scas
repz
sub
push
or
lahf
xchg
in
xchg
test
cs
adc
mov
pop
lea
jbe
loopne
ret
inc
js
xchg
pop
movsl
dec
inc
add
test
mov
adc
jmp
sbb
clc
xchg
sbb
cmpsb
inc
xor
dec
and
sub
add
cmpsb
sbb
xor
xor
adc
loope
mov
aad
fcomps
push
incb
in
or
pushl
enter
aam
movsb
js
in
mov
enter
movsl
orb
sub
into
inc
out
data16
rcrb
xchg
xchg
xchg
add
clc
out
shrl
mov
mov
dec
fwait
xor
mov
aam
outsb
fs
jne
scas
int3
scas
dec
sahf
add
add
cwtl
mov
lods
lret
jg
or
sti
sbb
mov
out
lds
pop
aam
mov
fstps
or
ja
and
mov
addr16
or
pop
push
shrb
jne
inc
cwtl
shld
jno
outsb
mov
or
cmp
rcll
mov
and
jns
shll
dec
adc
addr16
inc
push
push
lods
mov
and
popa
arpl
push
sbb
inc
adc
sub
or
mov
gs
dec
pop
or
push
sbb
sbb
mov
lret
pop
sbb
lret
cmc
jecxz
add
iret
inc
xor
addb
fcmovne
xchg
or
daa
sbbb
icebp
push
and
std
aaa
pop
stc
push
and
not
mov
cmp
lods
mov
loopne
xchg
cmpb
jno
leave
out
pop
sbb
cld
xor
jnp
sbb
fcmove
xorb
or
pop
mull
push
les
fcmovnbe
dec
inc
loope
imulb
xor
fbld
cvttps2pi
xchg
sbb
mov
addr16
std
mov
cmp
adc
add
cwtl
les
lock
fisubrs
and
add
mov
ds
push
jmp
je
sbb
lret
arpl
dec
adc
pop
nop
jge
adc
push
fbld
shl
sbb
or
into
aad
pop
and
cwtl
cmpsb
and
inc
push
adc
ret
cmp
mov
sar
lds
loop
iret
jns
movsl
test
add
mov
pop
jo
xchg
lahf
xor
test
jo
add
call
push
arpl
out
mov
out
add
pop
add
into
push
xchg
cmp
int3
cli
scas
fcoms
mov
and
popa
lea
rorl
out
dec
jge
xchg
stc
dec
sbb
cwtl
push
das
icebp
out
out
aad
mov
jl
stos
sub
out
mov
push
out
sbb
std
push
push
push
or
adc
dec
mov
jno
mov
pop
mov
je
std
lds
add
inc
adc
sub
outsl
inc
je,pt
lret
dec
xor
test
addr16
push
add
mov
loopne
lods
rcr
popf
loope
fbld
add
das
lea
dec
mov
jno,pt
and
loope
and
test
adc
sub
insb
add
pop
mov
inc
cmp
jne
ja
dec
int
push
repz
lcall
aam
ljmp
insl
push
jecxz
push
popf
xor
les
orl
ds
xor
movsb
and
jnp
jae
jae
xchg
ljmp
and
pop
cmp
aam
loope
out
pop
xor
push
dec
xchg
mov
jg
or
xchg
xchg
jl
rep
sti
in
mov
jae
inc
dec
ss
shl
iret
scas
cmpsb
dec
std
dec
mov
xor
int
dec
orl
pop
roll
cmc
jae
aad
rclb
or
jo
inc
cmpsb
repz
pslld
rorb
mov
sbb
inc
icebp
cltd
jecxz
lret
in
inc
stos
in
and
je
dec
cs
jl
dec
adc
sub
xchg
mov
popa
loope
pop
sahf
dec
call
cmpb
scas
stos
movsl
mov
arpl
repz
out
mov
int
cmp
out
mov
or
adc
push
or
outsb
push
push
mov
xlat
jg
test
mov
call
mov
mov
lret
inc
mov
call
rcr
icebp
push
nop
das
pop
push
icebp
clc
aas
adc
sbb
mov
xchg
sbb
bound
pop
shrb
lock
mov
xor
jne
xor
jae
ret
xchg
leave
mov
jmp
bndldx
cmpsb
popf
xchg
cmc
add
pop
add
arpl
pop
xlat
js
pusha
adc
insb
or
xor
cwtl
lods
in
xor
mov
fildl
xchg
xor
and
or
enter
inc
cmp
iret
or
imul
cmpsb
add
cmpl
sub
jecxz
sub
xor
adc
nop
mov
push
jmp
js
sub
mov
pop
xor
imul
push
repnz
repz
mov
jg
add
sbb
sbb
add
sbb
stc
fs
mov
loopne
sub
lock
or
out
outsb
negl
jle
int3
cmpsl
loop
sti
mov
lret
xor
mov
jecxz
addr16
xor
stc
xchg
xchg
or
or
fnstsw
mov
loope
xor
push
cli
push
sbb
ljmp
test
mov
gs
adc
sarb
jno
dec
xchg
push
cmpsl
xor
mov
ljmp
and
ret
pop
ljmp
sbb
sbb
dec
jns
out
insl
rorb
mov
inc
into
dec
mov
das
push
dec
das
ret
mov
fiadds
fwait
out
lods
fnsave
adc
pxor
fnstenv
sub
push
daa
and
add
xor
dec
pushf
cltd
sahf
push
out
pop
or
xlat
add
cmc
insl
mov
mov
orb
movsb
fcmove
push
jg
jge
cmpsb
into
jmp
jne
jle
xchg
xor
popa
movsb
ljmp
mov
lods
jp
mov
aaa
fdivs
cmpsb
aad
pop
js
lods
mov
or
and
or
add
cmp
sub
daa
test
inc
mov
dec
test
mov
dec
push
ret
cmc
and
xlat
movsl
dec
cltd
xchg
adc
or
pop
pop
and
cld
cmp
sbb
lret
sub
fstps
rcrb
xor
jl
fstl
cmp
add
mov
dec
enter
data16
jmp
mov
push
cltd
inc
addr16
pop
cli
dec
imul
dec
aaa
mov
inc
shl
flds
into
dec
cmp
mov
ds
insb
adc
jle
push
mov
pop
popf
pop
aaa
lea
lahf
push
jp
mov
cmpsl
out
inc
push
jae
push
xchg
aaa
jmp
mov
mov
pop
sti
cmp
jnp
xchg
dec
daa
sbb
test
cs
js
push
cltd
in
in
out
mov
push
dec
push
fcmovu
sbb
hlt
adc
scas
dec
stos
and
imul
outsb
pop
popf
gs
insb
out
cmp
push
stos
iret
mov
inc
add
pop
pop
and
cmpsb
mov
nop
jp
jae
repnz
pop
les
xchg
pop
adc
imul
inc
xor
call
lret
cwtl
ret
mov
outsb
sbb
and
cmp
div
jne
mov
pop
dec
xor
inc
xor
hlt
lahf
dec
out
xchg
out
hlt
gs
loop
jge
and
pop
aam
push
cmpsb
cld
decb
das
pop
fldcw
or
lcall
movsb
jne
jle
aam
pop
pop
push
aam
push
jl
lahf
push
jp
and
sub
xlat
mov
in
in
and
xchg
addl
aaa
xlat
bound
push
dec
push
jmp
pop
push
stc
adc
or
outsl
outsb
ret
mov
stos
idivb
movsb
je
pop
mov
pop
mov
jge
jge
and
inc
cmp
fwait
mov
dec
scas
aad
push
lret
movsb
adc
outsb
enterw
jae
xlat
cli
into
gs
and
cs
leave
sbb
into
outsl
mov
mov
sub
fistps
scas
movsb
xchg
jge
leave
sub
xchg
jne
das
jle
pop
rcll
sti
mov
cmp
test
mov
cmp
xchg
sbb
fs
mov
das
xor
pop
sub
repz
addr16
xchg
dec
fimull
push
mov
repz
xor
or
jns
mov
jp
mov
mov
and
out
out
aad
sbb
imulb
popa
ljmp
xchg
fisttpl
stos
xchg
ret
scas
dec
inc
and
pop
jns
scas
cmp
pushf
jle
sbb
rclb
adc
cld
mov
cmp
je
int3
cmpsl
adc
xchg
clc
leave
jl
add
shll
fstl
into
mov
fisttps
outsl
lock
scas
inc
push
jns
lret
lret
outsb
xchg
and
xchg
repnz
dec
testl
sub
shlb
mov
push
mov
movsl
adc
iret
mov
imul
push
mov
imul
insl
popf
insl
xor
push
out
lods
mov
cmp
jmp
lahf
add
jecxz
pop
sbb
popa
outsb
lahf
stc
fwait
arpl
cmp
insl
jmp
push
es
mov
movsl
imul
fisubs
mov
mov
ja
xorb
lcall
stos
fldt
mov
adc
xchg
or
aad
pop
lds
insl
cmp
push
mov
jecxz
and
jle
sbb
cltd
dec
lock
out
ret
pop
clc
jge
and
aam
xor
dec
xor
mov
dec
jle
sub
inc
dec
ficomps
je
push
call
lods
repnz
mov
test
test
and
addr16
incl
add
not
fucomip
mov
xchg
mov
pop
or
ja
dec
cs
or
loope
and
add
sub
and
repnz
cld
out
mov
clc
out
pop
and
add
sbb
ret
mov
movsb
daa
dec
lret
ds
les
inc
dec
sbb
pop
adc
xlat
xchg
shrl
adc
pop
jg
es
adc
pusha
push
test
loope
aas
jge
push
ret
cmc
jecxz
xchg
push
aaa
or
roll
and
movsb
arpl
ret
lahf
movsb
xchg
addr16
or
rolb
adc
cmpsb
jb
mov
pop
cmpsb
lds
mov
ja
out
jb
stos
sbb
mov
fstpt
xor
xor
bnd
std
push
repnz
xchg
iret
mov
mov
pop
test
pop
or
mov
fistpll
aam
loope
pushf
pop
inc
inc
dec
fcmovbe
mov
sarb
shl
pop
lods
xor
mov
call
test
add
jb
cltd
lea
scas
xchg
or
imul
jecxz
mov
xor
sbb
push
fs
ficoml
loop
mov
rcll
push
cld
sbb
in
sbb
pop
or
icebp
and
outsb
cmc
shll
xchg
pusha
dec
in
cmpsl
inc
into
cltd
mov
scas
shll
or
mov
fistl
jle
cmp
cmp
adc
fmull
je
sub
pop
push
rcrb
ret
sub
cmp
push
mov
popf
cmp
fcompp
adc
orl
scas
mov
or
out
sarl
add
lahf
ret
cli
xor
dec
outsl
xchg
pop
mov
push
xchg
mov
dec
orb
in
test
int3
mov
shll
inc
gs
in
mov
mov
dec
inc
jbe
sbb
lcall
adc
mov
movsl
xor
jmp
daa
xor
xor
into
and
test
pop
sub
repnz
push
xor
jmp
dec
mov
or
decb
fnstsw
mov
rcll
shrl
xor
sbb
xchg
xchg
cmc
cwtl
add
sub
inc
xlat
jecxz
nop
adc
jl
out
add
dec
out
fwait
aam
aam
pop
push
sbb
sub
stos
push
mov
xchg
ja
adc
pop
js
sub
jle
jg
popf
and
jnp
jb
into
int3
int
mov
loop
mov
dec
rcrl
cli
mov
pop
dec
adcl
push
hlt
push
out
jns
mov
xor
movsl
mov
rorb
ret
mov
stc
add
push
std
add
aas
insl
xor
pushf
add
repnz
pop
pop
sub
js
mov
sahf
cmp
add
dec
push
les
xchg
mov
out
mov
fstpl
mov
xchg
add
inc
xchg
inc
fdivr
pop
iret
xchg
cmpsb
and
pop
push
jp
outsb
xchg
xor
mov
add
movsb
lea
xchg
dec
and
mov
push
push
gs
scas
ja
repz
or
test
jbe
leave
cmp
nop
add
ret
stc
mov
imul
ja
pop
xor
add
pop
ds
fnstcw
popa
mov
dec
stos
mov
sbb
push
imul
inc
aad
arpl
add
bound
xor
xchg
stos
lods
fwait
or
push
data16
stos
nop
div
jbe
rcrb
lret
insl
push
lock
xchg
nop
or
mov
jle
or
sarb
roll
lahf
push
ret
popl
sti
in
mov
shrl
icebp
std
jae
pop
inc
pusha
ret
add
sub
push
sub
lock
mov
xchg
cmc
sbb
jge
cmp
push
xor
or
imul
jmp
adc
scas
add
ss
sub
add
or
mov
hlt
sub
stc
outsb
lret
xlat
subl
mov
shll
imul
mov
or
mov
stos
pop
imul
pushf
fildl
pop
xlat
xchg
or
ds
dec
adc
and
xor
sub
loope
sti
decl
push
xor
jle
ljmp
data16
lea
adc
add
test
das
and
dec
dec
add
xor
shll
stc
roll
shll
cmp
sbb
sarl
sbb
stc
mov
mov
cmc
mov
push
lahf
pop
mov
inc
outsb
into
lds
mov
dec
fnsave
bound
fs
aam
jecxz
jp
sbb
lcall
sbb
dec
push
lods
sub
inc
das
fsave
cmp
decb
xlat
adc
dec
popa
xor
jmp
dec
or
clc
jnp
mov
scas
test
add
outsl
jo
add
nop
test
mov
test
xlat
ficomps
push
pop
push
in
adc
cmpsb
mov
lret
jge
mov
mov
out
and
nop
push
data16
ret
sbb
outsl
jbe
or
fistps
xchg
pop
cmp
fs
dec
nop
pop
and
adc
push
mov
cli
arpl
hlt
sbb
xor
pushf
cwtl
aad
adc
inc
mov
adc
testb
jp
cld
dec
jb
jmp
add
xor
fdivrs
jp
mov
rclb
jns
add
adc
push
inc
sbb
movsl
ss
dec
arpl
xchg
repnz
mulb
jno
daa
cld
push
inc
add
clc
lock
pop
push
mov
pop
test
xchg
cmp
jecxz
or
ret
jmp
testl
scas
stc
pop
popf
mov
push
std
fdivl
lods
jno
sub
dec
lods
cmpb
dec
adc
inc
je
lock
mov
mov
jle
fnstenv
scas
xchg
jo
psubw
xor
mov
out
mulb
or
ret
mov
rcr
inc
gs
pusha
xchg
mov
and
jle
add
pop
dec
xor
inc
sub
mov
idivb
xchg
cmp
test
dec
pushl
sub
add
sbb
adc
adc
push
sub
jnp
cmc
pop
xor
xchg
test
stc
jb
xchg
or
add
fwait
and
xor
lods
repz
jp
in
and
pop
insb
pop
xorb
xor
sbb
xchg
cmp
or
or
notb
lret
repnz
xor
lcall
sbb
lds
ds
scas
mov
mov
cli
mov
push
cld
std
or
andl
sbb
lds
dec
cltd
cmp
rcr
fwait
loop
inc
ret
sbb
jns
and
nop
filds
push
lret
sahf
movsl
aaa
rcll
sahf
outsb
cli
jns
push
and
and
and
rcrl
push
rcrb
loop
pop
aaa
jmp
pop
add
and
inc
idiv
push
lock
adc
ljmp
xchg
sub
cs
vandnps
sbb
mov
xchg
in
aad
loope
dec
rorb
dec
jle
out
push
shlb
add
push
jo
add
sub
push
pop
lods
scas
pop
mov
adc
mov
xor
fimuls
daa
jo
std
inc
xor
lret
or
jae
repz
adc
lock
jp
jns
out
and
mov
or
cltd
adc
xchg
sbbl
call
fscale
and
pushf
daa
repz
sbb
jg
xchg
pushf
push
jmp
add
fsubr
outsb
mov
mov
push
imul
sub
or
cmpsb
imul
out
jge
nop
stos
iret
sbb
pop
ljmp
add
jmp
leave
sbb
push
scas
mov
fiaddl
sub
fidivrl
lret
and
push
and
clc
fwait
xor
fbld
mov
std
push
insb
leave
and
push
lods
jp
dec
xchg
ret
in
gs
aas
mov
pop
sbb
add
cwtl
or
or
mov
popa
cwtl
loope
xchg
cmp
shlb
cmc
mov
inc
inc
shll
push
cmp
notb
and
fdivl
jns
movsb
inc
popf
jns
mov
test
das
cld
jno
cmp
inc
and
inc
testl
lea
jp
xlat
std
or
test
mov
repz
lret
cmp
bound
adc
aad
scas
rcrl
lahf
adc
movsl
pop
cmp
and
hlt
lock
adc
pop
popa
xchg
stc
lahf
ror
in
mov
xchg
ljmp
pop
add
loope
popf
jecxz
data16
lods
mov
cs
fs
scas
sub
cmpsb
sub
aam
mov
andb
add
adc
lods
test
mov
dec
sbb
stc
dec
enter
xchg
cmp
sbb
gs
hlt
cmpsl
add
xchg
in
sbb
push
cmp
inc
sub
mov
and
sub
push
or
call
hlt
lds
sbb
or
mov
addl
movsb
cmpb
jle
cmp
sbb
push
and
insb
fisubl
jae
inc
inc
adc
insl
push
lock
xchg
and
sti
test
sub
sbb
jo
les
inc
call
popf
shll
push
icebp
lahf
insl
les
ljmp
inc
lea
lock
mov
lods
lea
cltd
or
fdivrl
into
ljmp
repz
jbe
in
mov
aad
gs
jp
aam
sub
orl
les
mov
xchg
xchg
int
pusha
fldcw
pop
pop
xchg
mov
leave
jp
or
mov
icebp
and
mov
insl
fs
and
pushf
xor
xchg
and
lods
xor
outsb
imul
jae
out
push
xchg
pop
cmp
int
dec
or
nop
add
inc
cltd
push
adc
inc
inc
mov
add
and
jmp
dec
push
sbb
mov
ljmp
lds
in
sub
pop
jnp
xchg
sbb
mov
stos
pop
push
lods
std
pusha
movsb
jb
xchg
div
pusha
sti
cwtl
mov
inc
insb
xchg
je
lock
push
mov
testb
out
insb
adc
push
fwait
rorb
ficompl
sub
cvtdq2ps
loope
mov
xchg
imul
sub
inc
scas
rcrb
jno
ficompl
jbe
sub
movb
outsb
xchg
js
mov
mov
rcrb
fisubrl
jae
jae
fisttpl
jno
ss
or
jp
xchg
out
scas
out
lret
dec
dec
shll
inc
xchg
jno
fcomps
data16
and
mov
jns
data16
loop
cld
sub
iret
inc
xor
sbb
inc
push
lods
hlt
cmp
pusha
iret
cmp
adc
fwait
sbb
sbb
jno
or
pusha
stc
loopne
adc
fistps
enter
outsl
fmuls
add
in
inc
pop
pop
stos
inc
cli
sub
sahf
dec
mov
js
adc
std
gs
add
mov
mov
pop
into
mov
scas
xchg
movsl
lock
cwtl
mov
sub
jmp
jp
mov
mov
mov
in
mov
call
pop
into
mov
cld
inc
cmp
aad
and
sbb
stc
mov
pop
adc
pop
in
jae
ljmp
insb
adc
scas
and
ret
cmp
not
and
inc
aaa
out
jecxz
out
or
push
js
nop
scas
stc
stc
push
mov
xchg
pop
fistpll
or
inc
in
frstor
sbb
xorl
pusha
test
les
fildll
mov
xor
test
cltd
repnz
and
or
outsl
ds
test
pcmpgtd
jl
xor
push
fmuls
xor
and
lret
push
lcall
lods
mov
cmp
scas
in
xchg
arpl
inc
add
and
adc
cwtl
fistpl
hlt
and
les
cmp
fsubrs
lret
xchg
sahf
xchg
jmp
ljmp
and
clc
popf
ret
in
xchg
shll
push
stos
sub
dec
mov
mov
scas
emms
mov
out
sti
add
sbb
dec
fnstenv
mov
inc
gs
jo
divb
scas
dec
daa
int
xor
push
push
sub
in
mov
jp
std
xor
cmpsl
pop
lods
mov
cmp
mov
xor
mov
mov
mov
icebp
icebp
jns
xor
les
roll
add
push
aas
xchg
inc
xor
inc
push
inc
dec
enter
fwait
inc
fmul
cmc
sub
jl
iret
andnps
shlb
xor
sbb
cmp
lcall
push
stc
out
loop
ret
sub
scas
mov
jne
jmp
adc
out
repz
inc
ficoml
aaa
js
aas
popa
imul
mov
ljmp
sbb
mov
enter
clc
cltd
xchg
fnsetpm(287
mov
and
in
pop
lcall
add
dec
test
cli
test
nop
jae
popf
dec
imul
mov
nop
cmpl
inc
imul
sbb
stos
add
sub
push
movsl
jmp
cmpsb
dec
cs
jge
and
in
xor
cs
mov
outsb
imul
adc
sub
aad
dec
add
push
imul
cltd
dec
repnz
pop
stos
test
insb
pop
xchg
jo
sub
iret
and
mov
mov
jo
mov
stos
pop
mov
cli
js
pop
pop
lret
dec
sti
pop
shlb
xchg
push
out
iret
cmpsb
add
fdivrl
mov
ret
adc
mov
stc
xchg
sub
decb
xlat
dec
repz
jae
arpl
cmp
cmp
xchg
jo
fisubl
fdivl
jnp
jbe
loop
sub
sub
jne
mov
ja
add
jmp
repz
int3
out
jge
inc
adc
sub
hlt
fstps
xlat
adc
in
xchg
lods
es
push
xchg
mov
mov
sub
and
cmpl
mov
cmp
cmp
mov
rolb
inc
pushf
imul
stos
ja
cmc
lcall
xchg
lods
xor
repnz
ret
cwtl
iret
sub
sbb
mov
mov
out
jp
pop
xchg
sub
xor
pop
fstl
adc
pop
or
test
popa
sbb
add
lahf
pop
arpl
mov
shlb
je
sub
mov
inc
stos
or
insl
mov
insb
hlt
push
jge
push
add
push
mov
mov
lcall
push
adc
loop
add
cmp
sub
jg
cmpsb
push
or
sbbb
andl
xor
je
ret
ja
mov
addb
jae
cmp
push
xchg
cmpsb
jg
push
leave
loopne
lret
or
mov
aas
in
js
pop
push
in
cli
shl
imul
into
pushf
faddl
outsl
cmp
mov
add
inc
sahf
xchg
add
icebp
push
xchg
or
mov
push
in
mov
orl
sub
lea
mov
or
xchg
or
mov
pop
mov
sub
sub
test
fdivrs
sbb
inc
lret
popa
sahf
out
jmp
xor
pusha
repz
pop
jmp
enter
add
mov
ret
dec
and
inc
lock
iret
mov
test
sub
inc
pop
idiv
dec
stos
fwait
push
pop
sub
aad
jl
scas
int
mov
and
xchg
and
push
je
mov
push
mov
js
xchg
or
pop
lahf
out
adc
loopne
mulb
int
ret
mov
je
jl
in
sub
dec
jo
ret
and
in
sub
mov
les
xor
out
call
mov
insb
or
rcll
inc
jl
mov
inc
jmp
add
push
loop
sbb
pusha
cmp
cmp
aas
xchg
stos
imul
addl
and
mov
popf
popf
into
dec
out
lret
inc
aad
inc
lea
mov
nop
loop
mov
std
enter
push
mov
cwtl
push
shlb
push
or
xchg
repz
mov
in
loope
inc
std
lret
or
ret
mov
and
ja
inc
pushf
sarl
pop
push
mov
into
ud1
ds
pusha
fdivl
pop
adc
sbb
and
inc
push
add
adc
dec
sub
sbb
push
dec
test
in
fisubrl
fildl
in
mov
jmp
or
jno
adc
jmp
mov
push
out
sub
cmp
push
add
push
and
xor
je
cmp
mov
imul
shl
cs
push
clc
pop
cmp
and
imull
loop
xlat
jl
push
addr16
lahf
inc
cmp
add
test
sbb
jle,pt
sahf
pop
test
lock
mov
adc
test
jl
popa
mov
mov
xchg
xor
in
lfs
cmp
lret
iret
push
cmp
add
xor
in
ds
pop
call
loop
xchg
mov
movsl
jmp
mov
push
shll
aad
ret
aam
outsl
int3
pop
lcall
sub
mov
pop
cmp
push
mov
stc
mov
rcll
or
fxch
inc
sbbl
jns
mov
adc
out
ret
mov
popf
stos
push
cmp
ljmp
inc
cwtl
sub
adc
add
or
pop
jle
fisttpl
pushf
aaa
shll
imul
or
aam
in
add
and
push
adc
cmp
mov
push
out
jnp
jb
call
hlt
adc
mov
in
cmp
xchg
sti
inc
iret
sub
jl
mov
hlt
jno
mov
mov
lret
xchg
jg
cmp
push
mov
rcr
xchg
dec
fs
ja
xchg
loop
sub
cltd
shr
fnstenv
cmpsb
rcrl
cmpsb
mov
sti
pop
dec
sbb
push
daa
and
hlt
push
ja
push
enter
arpl
jnp
xchg
xchg
and
out
arpl
shrl
sub
rcr
shl
mov
xchg
test
push
nop
or
pop
mov
loopnew
dec
dec
xor
mov
in
jae
jmp
dec
push
cmp
lds
popa
xor
adc
and
subb
inc
xchg
fwait
out
lret
push
fistpll
adc
lock
leave
roll
shlb
and
fists
xor
mov
push
test
fcomps
and
arpl
and
push
cmpl
mov
into
add
inc
mov
adc
mov
adc
ss
add
jle
clc
inc
shlb
jge
insl
clc
fs
mov
lret
inc
test
repz
ret
add
adc
bswap
xchg
int3
and
dec
movsl
pop
jge,pt
sub
jns
fcmovu
lods
dec
and
loopne
mov
xchg
mov
and
pop
fmuls
pop
fisubl
fdivs
push
ret
scas
jo
inc
fimull
xchg
ret
jp
cmp
mov
push
jb
cmp
test
out
and
shrb
clc
das
shrl
xchg
or
lret
mov
adc
icebp
es
insl
pop
xor
ret
scas
mov
or
jge
inc
or
int
cmpsb
mov
popa
push
cli
xlat
or
xor
in
outsb
shlb
add
movsb
pop
xchg
lea
push
sbb
rcr
imul
dec
push
lods
cwtl
pop
pop
xor
js
out
into
daa
sub
add
pop
or
pop
stc
pop
insb
pop
mov
add
push
das
and
fsubp
dec
mov
sub
cmpsb
mov
bound
mov
lea
into
movsb
jge
aaa
push
shrb
sbb
adc
fldenv
and
inc
sub
cmpsb
lahf
push
and
aad
dec
testb
or
dec
cmp
sti
inc
dec
push
sub
jae
mov
mov
repz
leave
mov
xchg
inc
daa
ffreep
mov
loopne
hlt
dec
mov
pusha
mov
shlb
mov
aad
mov
sub
aas
mov
scas
mov
outsl
sub
adc
cli
jne
addr16
aad
test
fdivl
sub
sbb
stc
inc
mov
shl
mov
or
outsb
imul
or
stc
xor
and
xor
or
fmuls
mov
lds
gs
in
lcall
mov
adcb
push
test
sub
sti
jns
xor
scas
dec
incb
jecxz
mov
inc
cmp
dec
test
mov
cmp
push
add
movsl
sbb
inc
les
lret
mov
push
push
in
ror
and
shrl
adc
inc
pop
ja
xor
andb
pop
add
loope
out
mov
iret
test
lret
adc
or
push
or
lods
loopne
mov
lods
je
jg
inc
jae
and
and
add
mov
push
dec
xor
ret
test
stos
xchg
test
sub
and
les
int3
mov
pop
pop
loopne
jb
mov
mov
and
pop
fwait
bound
icebp
cwtl
test
jl
jmp
jo
push
loop
push
out
sub
jle
add
lods
pop
xor
mov
cmpsl
ss
or
das
xor
cmp
jnp
cmp
sbb
add
movsl
stos
das
rcrl
mov
sbb
cmp
mov
sub
test
mov
inc
test
mov
mov
popf
lret
jle
gs
imul
push
adc
mov
insb
jmp
into
jle
cld
jo
mov
das
cmc
imul
aam
cmp
mov
pop
sub
xchg
mov
cmpsl
cmp
lret
popa
int
call
add
pop
das
adc
loop
cmc
mov
jg
jo
repz
push
xlat
test
dec
lock
mov
and
fimull
cwtl
in
out
aad
out
xchg
xchg
das
jl
in
dec
fidivrl
pop
add
inc
xor
cmpsb
mov
jo
imul
and
fcomps
dec
insl
aaa
mov
cwtl
cmp
lds
xchg
pop
jne
movsb
aad
fwait
ds
jae
pop
or
and
jno
loopne
data16
test
pop
mov
lret
std
jecxz
pop
mov
sbb
mov
xchg
stos
imul
int3
jge
fbstp
test
sbb
repnz
sahf
xchg
popa
ss
lds
add
and
cmp
add
xor
insb
addr16
mov
sbb
inc
sbb
and
test
xor
push
xchg
and
xchg
insl
sbb
mov
int3
insl
insb
sarb
rolb
xor
std
loopne
jl
leave
lcall
and
pop
mov
push
movsl
in
xchg
adcb
ljmp
mov
mov
movsb
cwtl
sub
call
sub
outsb
cmpsb
xor
lret
xor
outsb
cmp
mov
movsl
in
pusha
or
setno
jge
fs
xlat
cltd
in
out
ret
mov
or
es
and
cmpl
xor
js
jecxz
test
mov
cmpsb
mov
daa
cmc
out
push
xchg
pop
insb
rolb
push
aas
dec
mov
pop
dec
in
adc
popa
cwtl
fadds
jno
sub
fsubl
or
fldt
ret
mov
in
adcb
sub
mov
mov
fs
cltd
jp
lea
inc
into
data16
pop
mov
in
dec
sti
or
aas
mov
inc
lret
push
cwtl
pop
or
mov
sarl
add
inc
out
push
and
push
rcrl
loope
ljmp
loope
mov
test
mov
xchg
sti
std
ja
pop
out
sbbb
test
pushf
xor
xchg
push
scas
movsl
and
cmp
jge
add
pop
rolb
add
mov
in
cmpsl
out
jge
push
adc
ficoms
fistps
lea
push
loop
adc
aas
sbb
push
mov
lcall
cli
dec
push
movsl
outsl
iret
les
movsb
bound
sub
ja
xchg
xchg
mov
fistps
fsubs
sub
mov
xchg
xchg
cwtl
clc
dec
and
mov
out
or
loope
iret
jns
push
daa
in
mov
and
out
or
jle
or
hlt
add
jno
std
mov
aam
lods
xchg
mov
sbb
add
test
sti
dec
mov
push
cmp
cmp
out
addr16
add
movd
pop
add
aas
mov
cmp
jns
clc
clc
mov
hlt
in
movsl
or
lcall
pop
lahf
gs
add
loopne
push
std
out
stc
sbb
ret
in
test
xchg
mov
jb
mov
outsb
icebp
mov
inc
add
mov
pop
popf
fwait
scas
cmpsl
test
xchg
cld
lds
cmp
cmp
stos
push
bound
lret
or
sub
jp
test
dec
ja
aam
sub
and
or
outsl
into
sbb
rcl
mov
movhps
xchg
movl
cwtl
stos
js
xchg
xchg
in
fsts
add
in
add
ds
and
imul
sub
adc
in
xor
fisubrl
cs
push
adc
sbb
xchg
jno,pt
cmp
or
mov
loope
push
hlt
jbe
fistpll
popf
mov
sub
jno
ret
mov
push
mov
lea
push
repnz
xchg
mov
cmp
insb
lret
imul
cmpsb
sub
cmp
je
or
mov
xchg
lret
sub
xor
mov
xchg
and
dec
nop
call
lds
pop
inc
adc
data16
jmp
fsubp
jecxz
or
cmp
xchg
lea
fldcw
faddl
mov
fisubl
test
into
ret
test
nop
js
stos
lods
push
mov
pop
push
push
jo,pt
lret
jge
mov
ja
and
clc
jo
test
jl
je
inc
push
mov
loope
xor
xor
lcall
subb
shl
es
int3
loop
ljmp
inc
sbb
jne
push
xchg
rorl
mov
in
cs
mov
imul
pop
jo
stos
aaa
cld
fstpl
in
or
fiadds
push
and
adc
sub
mov
dec
and
test
xor
into
pushf
imul
add
test
aad
pusha
test
jno
in
cwtl
es
mov
mov
fldl
das
loop
xchg
cmp
inc
scas
xchg
repz
cmp
mov
js
icebp
stos
pop
into
hlt
mov
inc
jne
aas
adc
mov
lret
mov
xlat
lods
inc
in
out
jb
mov
or
sbbb
enter
fnsave
cmpsl
inc
push
cmp
push
movsl
cltd
aas
mov
les
cmpsl
jmp
mov
xchg
and
ficompl
or
cwtl
sub
jb
inc
stos
jae
fldenv
test
addl
jp
negl
mov
enter
mov
lods
andl
add
dec
mov
call
fstpt
jecxz
or
lea
loopne
mov
inc
je
repz
mov
sub
push
lcall
scas
add
ret
push
pop
sub
bound
lods
jo
xchg
jns
js
jmp
outsb
adc
push
mov
pop
insl
je
cwtl
stc
into
dec
pop
inc
sarl
pop
dec
cmc
mov
loopne
jecxz
or
testl
cmpsl
pop
inc
insb
ss
dec
outsl
in
stc
aaa
rorl
ja
mov
push
or
arpl
add
pusha
or
ljmp
add
inc
xor
sbb
inc
ret
sbb
cmp
imul
bound
or
xchg
add
pop
fmuls
icebp
xor
mov
ret
bound
mov
in
in
jb
clc
pop
in
inc
lds
adc
ret
pop
xor
sub
push
mov
mov
les
dec
in
ja,pt
or
popa
fsubrs
mov
jae
pop
ja
imul
xchg
leave
sub
or
les
mov
loope
jl
es
xlat
pop
int
pop
mov
iret
adc
pop
dec
and
xor
aad
push
adc
dec
sbb
adc
lret
cs
inc
cmc
and
lahf
and
add
data16
mov
jne
adc
pop
bnd
and
dec
or
daa
lock
fnstcw
sti
dec
push
cmc
fwait
dec
cmp
loopne
push
arpl
stos
mov
inc
rclb
lret
pop
movb
mov
je
and
movsl
movsl
mov
loopne
mov
jns
dec
flds
jb
testb
ret
js
fists
or
mov
movb
xchg
aam
sub
mov
gs
mov
dec
mov
mov
push
lret
mov
fldl2e
repz
es
das
loop
roll
sub
dec
outsl
cmp
fsubs
fadds
dec
adc
mov
cmc
jge
das
xchg
dec
dec
sub
dec
mov
mov
add
je
cmpsl
lds
loope
sahf
loope
jae
ret
cmp
xchg
repnz
xor
inc
cmp
sub
pop
jg
jecxz
aam
pushf
mov
dec
adcb
imul
mov
lahf
jecxz
jmp
js
insb
mulb
out
adc
insb
roll
sub
add
mov
jns
jmp
fwait
scas
mov
or
mov
data16
jge
bound
in
enter
mov
mov
adc
mov
pop
add
mov
lds
xchg
inc
inc
mov
popa
cmp
xor
push
fwait
mov
xor
dec
lds
push
mov
pop
ficompl
in
sbb
jmp
pop
adc
hlt
cmpsb
inc
fpatan
repnz
mov
into
and
cmpsb
add
mov
dec
jmp
dec
lret
pusha
and
sub
in
mov
sbb
pop
push
fs
dec
sti
shl
out
xchg
fs
rorl
les
rorl
sti
jb
push
inc
test
inc
cltd
add
mov
sbb
cmp
cmp
out
gs
jb
mov
leave
daa
or
enter
ret
mov
inc
sub
inc
outsl
mov
and
notl
push
pop
sbb
in
inc
lcall
sub
test
cmp
pop
push
push
inc
xor
push
mov
lret
mov
std
inc
popa
mov
mov
call
pop
shlb
lods
fistps
loopne
push
mov
and
std
sbb
movsb
dec
push
pushf
test
sbb
imul
daa
arpl
dec
push
js
out
fcmovnb
xchg
jp
call
mov
scas
xor
push
add
incb
popa
push
adc
sub
es
movsb
jne
jge
push
lcall
jecxz
les
cmpsl
call
iret
nop
test
out
outsb
idiv
mov
pop
or
cwtl
test
and
sbb
es
orl
out
es
dec
dec
hlt
fdivs
sub
add
lret
mov
cmpsl
and
jne
lods
sub
popa
mov
pop
sarl
es
sbb
negl
iret
cmp
xor
aaa
jg
jp
sub
loop
mov
ret
je
jbe
dec
dec
xchg
test
inc
dec
enter
call
rcrb
xor
pusha
aas
lahf
xor
sbb
loope
pop
les
sub
mov
scas
or
mov
dec
push
addr16
push
addl
stc
mov
repnz
jno
fcomp
insl
cmpsb
mov
push
xchg
cmc
popf
cmpl
pop
mov
jp
stc
int3
sub
fstps
push
test
xchg
jl
pop
mov
pusha
into
mov
and
lods
xchg
mov
xor
mov
mov
or
jg
insb
das
or
mov
inc
and
add
mov
sbb
addr16
hlt
loop
aaa
dec
lahf
sbb
cmc
fstpt
mov
movsl
add
xchg
jg
cmp
add
ret
lods
adc
jo
in
daa
and
pop
pop
jb
push
iret
mov
and
mov
mov
mov
mov
leave
stc
add
inc
and
loope
fwait
inc
ss
fdivl
scas
push
push
push
bound
xor
sbb
rolb
fdivrs
stc
lcall
clc
dec
mov
aaa
fdivrp
mov
mov
adc
ss
xchg
sti
fimuls
cmpsb
xchg
jnp
fsts
and
nop
fnclex
push
movsb
roll
aaa
fs
rorl
sbb
inc
adc
fs
lret
aaa
inc
jmp
mov
add
and
xchg
adc
inc
jl
sar
mov
pop
adc
leave
pusha
rcrl
cs
popf
dec
lea
mov
sub
pop
inc
out
push
add
popa
ret
push
test
lds
jns
or
test
mov
ss
cltd
rcll
dec
scas
mov
sbbb
ficoms
into
mov
das
ss
dec
pop
shlb
mov
pop
popa
int3
xchg
and
pop
js
daa
decl
cwtl
insl
fdivr
mov
adc
fcoml
rorl
mov
adc
daa
pop
out
ret
shl
mov
outsl
nop
jmp
fs
or
pop
sub
and
xchg
ja
or
pushf
cmp
stc
pop
aas
sub
add
mov
add
sbb
fnstcw
loopne
mov
xchg
mov
sbb
andl
neg
movsb
xchg
dec
jo
mov
repnz
sub
in
cli
std
imul
add
mov
inc
hlt
push
mov
pop
jns
pop
movsl
xchg
jno
pop
clc
aaa
adcl
shll
xchg
cmp
roll
in
lahf
andb
sbb
leave
sbb
inc
mov
mov
aaa
cmpsb
pop
loopne
in
xor
sub
adc
stos
xchg
push
mov
mov
pop
or
lret
xchg
xor
or
jbe
rcll
addb
int
insb
cmp
lcall
test
jp
cmp
push
pusha
adc
or
aam
pusha
stc
fwait
loope
inc
jne
jecxz
push
inc
lock
fistps
pop
dec
push
xchg
cwtl
adc
fcmove
or
xchg
jp
sti
mov
dec
dec
fidivrs
jbe
rolb
mov
lods
dec
push
je
les
add
xchg
jge
and
clc
inc
pop
repz
nop
jp
jo
lcall
dec
or
push
mov
mov
loop
ds
adc
xchg
enter
xchg
jo
dec
jno,pn
fbld
adc
addr16
dec
fwait
jno
lods
sub
cmc
outsl
stos
inc
in
sub
test
push
cld
out
nop
icebp
fnsave
cmpsb
mov
sub
inc
nop
in
jle
lahf
xchg
mov
push
cmpsl
or
lea
out
hlt
mov
je
jnp
loope
add
popa
jle
push
jp
aaa
fsts
lcall
rorl
push
outsl
xchg
dec
sub
shrl
popf
or
mov
pop
sub
xchg
in
jl
mov
adc
mov
sub
xchg
mov
insb
jmp
loopne
js
into
mov
sub
lock
pop
leave
xor
inc
arpl
je
lods
stos
in
xor
mov
ja,pn
dec
sbb
call
jo
je
and
cld
push
inc
jne
jecxz
lcall
int
sbb
in
stc
sbbb
mov
fnstsw
rol
xchg
daa
in
jp
inc
jb
enter
and
jb
fnsave
repnz
mov
adc
outsl
fnstcw
adc
lods
add
push
pusha
hlt
pusha
mov
aam
in
mov
hlt
hlt
fisttps
sbb
je
aam
mov
or
mov
shl
rcrl
jle
jo
je
mov
fnstcw
scas
add
stc
in
sbb
repz
mov
sbb
shlb
xchg
cmp
rolb
insl
test
hlt
scas
sub
pop
or
pop
pop
jbe
sub
subl
mov
daa
pop
popf
jbe
xchg
subl
testb
cs
icebp
call
imul
mov
mov
xchg
dec
stc
mov
hlt
lret
cmpsb
rcrb
outsl
sub
lods
push
mov
adc
out
orl
push
out
cmpsl
sub
std
aad
hlt
or
pop
testl
sbb
mov
lcall
je
loopne
movsl
scas
inc
insb
sub
mov
lea
mov
cmp
xchg
out
lahf
mov
mov
testl
cmp
or
ret
iret
jp
cli
lods
pushf
addr16
data16
inc
pop
fnstcw
cmp
mov
xchg
sti
repz
popa
mov
imul
call
sbb
sbb
add
mov
cmpsl
xchg
lock
sub
pop
idiv
shlb
insb
outsb
inc
mov
pop
jo
mov
lret
sbb
push
fldenv
pop
bound
daa
daa
dec
lods
arpl
fistpll
sbb
push
outsl
mov
jno
mov
mov
xor
call
push
pop
dec
push
jne
or
aad
add
test
inc
push
int3
shlb
inc
loop
add
xor
xor
es
rorb
fwait
int
xorl
and
cmp
jne
xchg
cld
fucomip
sub
outsl
add
xor
cmpsb
je
imul
aas
popa
lods
sbb
adcb
and
lock
not
icebp
mov
cmp
in
js
sti
cmp
dec
negb
jle
shrl
stc
cwtl
shlb
mov
ret
cltd
out
dec
or
popa
cmp
test
push
push
push
je
jmp
iret
iret
adc
add
pop
lock
inc
push
lcall
shll
test
push
adc
ror
xchg
gs
inc
jge
jno
cli
xor
push
jo
add
lret
scas
cltd
lods
xchg
ficoms
lahf
loop
and
fimull
jmp
cmp
jg
cs
mov
js
lret
frstor
inc
add
mov
int
pop
cmp
mov
daa
jbe
int
rcrb
sub
mov
out
sbb
and
push
pushf
cmp
addb
dec
in
mov
testl
inc
dec
out
adc
xchg
xor
push
push
mov
repnz
fsubrs
ds
cmpsl
add
jno
mov
cmp
fistl
repz
cmp
xor
jne
fcmovnu
hlt
add
mov
inc
add
xchg
push
jne
dec
cmpsb
aas
cwtl
inc
sti
push
dec
cmp
inc
dec
fidivrs
lcall
push
rorl
or
xor
jmp
sbb
cmp
mov
inc
in
push
popa
and
mov
insl
notb
sbbl
jb
insl
sahf
mov
loop
mov
prefetch
push
mov
mov
dec
and
and
cli
shlb
imul
cltd
lahf
mov
pop
popa
data16
inc
dec
arpl
iret
cltd
cmp
mov
xchg
testl
jns
jp
arpl
lret
or
mov
mov
push
add
sahf
lahf
sti
out
push
into
pop
test
jmp
idiv
cli
sbb
scas
iret
mov
out
int
xchg
shll
pop
mov
or
and
imull
pop
aam
push
fistps
das
out
or
sbb
les
jne
loope
mov
dec
push
movsb
and
test
rcll
cmpl
cmpb
push
and
jb
xor
stc
push
enter
test
sbb
pop
mov
mov
ja
aam
enter
ljmp
repnz
push
and
nop
sahf
mov
repnz
daa
and
mov
jmp
sbb
cmp
cmpsl
cmp
sbbl
mov
xor
and
loop
in
sub
sub
xchg
sti
cmpsl
inc
pop
loopne
sub
fisttps
mov
mov
sbb
loop
data16
xorb
sub
pop
push
adc
lds
les
cld
outsl
pop
fs
jg
ljmp
xchg
rcrl
int3
fnstsw
pusha
inc
jle
or
cwtl
sti
repnz
mov
ret
inc
ret
inc
jb
dec
jge
dec
ds
cltd
mov
dec
or
cmp
fidivs
push
jnp
repnz
sub
ljmp
jne
adc
out
test
outsl
cmp
mov
daa
sbb
pop
sbb
fdivs
inc
mov
xchg
loop
ror
dec
mov
pop
dec
dec
xor
dec
test
xchg
cmp
clc
cld
cs
sbbb
sbb
lock
mov
ss
movsl
insl
movsb
cmp
xchg
es
ds
xchg
jae
js
dec
fistl
aas
jnp
pushf
mov
sbb
cli
ds
sahf
pop
add
ljmp
loop
push
rcrb
jge
jle
lds
jp
push
adc
jp
pop
stos
pop
rcrl
xchg
shl
jmp
pop
or
or
cld
push
lods
push
pop
in
cmp
loope
mov
push
notb
dec
inc
mov
aam
mov
mov
xor
es
mov
jnp
cld
lret
mov
inc
mov
xor
xchg
jg
popf
icebp
enter
mov
rclb
push
add
imul
sbb
dec
mov
lea
and
mov
jo
outsb
mov
xor
jmp
mov
ja
dec
pause
mov
movlps
push
pop
add
cmpsb
sbb
cmp
enter
pop
in
cli
in
cmp
push
lods
adc
stc
xchg
mov
sarb
pop
dec
push
int
pop
mov
mov
or
push
fsubrl
adc
or
in
cmp
jecxz
mov
into
loopne
insl
dec
or
lcall
cmp
mov
add
cmp
sti
cld
add
repnz
test
jecxz
push
cwtl
aad
add
adc
jmp
xchg
cmp
jge
jno
push
ds
sub
popf
in
pop
mov
loope
shl
mov
jmp
jae
xchg
fnstenv
test
jmp
push
inc
int3
push
and
or
jl
test
icebp
inc
push
ljmpw
cmpsb
mov
das
iret
out
xlat
add
mov
add
sub
icebp
add
inc
aaa
pop
repz
mov
adc
mov
dec
arpl
dec
mov
jnp
mov
std
jp
or
push
inc
mov
sbb
js
jne
sbb
sahf
ss
dec
pop
or
pop
xchg
dec
scas
repz
outsl
icebp
inc
jle
test
dec
and
fcompl
inc
sti
xchg
sbb
cmpsl
test
sub
xchg
and
dec
push
fs
test
rcll
cwtl
pop
pop
clc
popa
addr16
add
push
lods
shrb
xchg
pop
xchg
outsb
fisttps
cmp
movsl
mov
cmp
or
xchg
out
or
enter
inc
mov
xor
and
adc
test
xchg
lcall
stos
sbb
pop
cmp
adc
rcr
or
pop
inc
int
lcall
add
jb
dec
negl
ja
xchg
push
and
add
mov
cmp
pop
sarb
stos
xchg
cld
xchg
pusha
pop
test
das
xor
mov
dec
test
into
pop
loope
test
cmpb
rcl
pop
inc
xlat
leave
lock
mov
sbb
fnstsw
mov
ja
sbbb
xor
jle
push
xchg
cmpsl
push
outsb
faddl
lds
push
adc
pop
std
mov
mov
aas
mov
lods
movsl
data16
js
ret
mov
xor
mov
xlat
andb
jp
mov
jecxz
push
dec
stos
xor
mov
sub
jbe
adc
push
push
mov
roll
mov
dec
inc
mov
cwtl
mov
lods
sarb
sbb
jnp
xlat
pop
insb
cltd
inc
push
dec
out
jl
inc
xor
nop
mov
idivl
push
push
mov
mov
sbb
xchg
je
cmp
push
and
pop
insb
sub
das
mov
adc
sbb
cs
xchg
in
imul
mov
in
jge
mov
outsl
inc
mov
mov
subb
call
adc
or
fbld
or
xchg
pop
pop
test
xchg
push
das
jns
rorb
jae
push
mov
popa
and
mov
stos
loope
lahf
fs
xchg
cmp
in
in
scas
jo
jp
cli
xor
or
fs
sarl
in
cwtl
mov
dec
adc
enter
mov
jg
adc
pop
inc
mov
mov
adc
aaa
andl
ret
daa
movsb
les
mov
pop
adc
lret
int3
fimuls
movsl
adc
mov
sti
cltd
sub
gs
and
jge
pop
mov
shl
lods
push
push
inc
dec
jne
ds
dec
inc
sub
cmpb
leave
xchg
jmp
pop
aaa
and
xchg
jnp
xlat
cmp
and
cmpsb
les
lea
sbb
cmc
bound
inc
ss
das
lds
in
xor
call
xor
add
jne
mov
fwait
and
mov
jle
iret
mov
loope
subb
sub
stc
imul
loop
dec
fisttps
pop
push
pop
outsl
xchg
ret
jo
repnz
fiaddl
insl
daa
and
mov
mov
mov
popf
mov
and
ffreep
sbb
lea
lahf
sti
stos
push
pop
pop
mov
jbe
sub
in
pop
sti
xchg
lds
test
cmp
pop
inc
pop
out
jg
xor
pusha
xlat
xor
pop
pop
stc
xchg
pop
add
adc
add
or
rcll
ret
out
jg
mov
inc
imul
and
or
dec
sti
mov
ss
mov
insl
jo
sub
movsb
mov
xchg
mov
lret
pop
daa
jns
cmpsb
pop
testl
es
pop
inc
mov
and
adc
mov
xor
inc
jno
pushf
addl
mov
loopne
xchg
in
repz
loope
and
sub
mov
adc
push
and
lahf
lds
pop
movsl
rcrb
testb
scas
test
insb
mov
push
xor
sub
jae
outsl
mov
outsl
bound
xchg
cmp
xchg
inc
xchg
lret
dec
int3
popl
rclb
xchg
xchg
push
cmp
gs
cmp
dec
test
sar
and
sub
sbb
xor
sbb
out
in
mov
lret
push
out
imul
lahf
jnp
andl
cwtl
mov
pop
adc
push
sbb
cwtl
test
jp
lods
adc
popf
cli
ret
aas
jp
lcall
insb
dec
pop
inc
lret
hlt
iret
jns
xor
test
ja
stos
push
sub
dec
data16
mov
fwait
and
aaa
fistpll
push
mov
dec
nop
mov
imul
lcall
or
cmp
aaa
stos
xchg
xor
loopne
sub
rorl
popf
mov
stc
out
loopne
or
fadd
jmp
ss
inc
dec
mov
push
sbb
inc
pop
jle
cmpsl
push
in
jbe
add
push
dec
pushf
and
sub
icebp
out
test
adc
jno
shrl
test
ja
xchg
mov
cmp
orb
pop
jg
sbb
popf
call
xchg
xchg
push
inc
ds
sbb
cltd
in
es
icebp
cmp
jl
test
scas
cmp
sub
xor
out
xchg
xchg
cmpsb
add
xchg
ret
and
rcr
test
jl
mov
mov
aam
xchg
scas
arpl
hlt
sub
or
xor
cs
mov
cmpsb
mov
loopne
fadds
ret
test
scas
aas
mov
or
call
mov
inc
mov
les
xchg
aaa
inc
rol
pop
mov
popf
xchg
jl
xchg
add
int3
fldenv
cltd
icebp
jbe
or
test
add
sub
daa
fidivs
pop
sbb
rcll
mov
sar
std
js
mov
out
imul
xchg
pop
test
mov
ljmp
call
inc
aam
outsb
je
test
jnp
sub
aam
call
lds
icebp
push
or
pop
mov
stc
xchg
inc
stc
cmp
aad
pop
dec
int3
notl
jle
popf
xor
mov
in
mov
mov
or
inc
in
fs
mov
jnp
test
into
scas
jns
or
ljmp
shrb
inc
mov
dec
mov
add
or
ljmp
lds
adc
int
std
into
dec
jno
inc
jg
xor
lcall
pop
mov
inc
fbstp
add
ret
fs
cli
lods
add
pop
out
push
push
dec
jl
in
xor
pop
push
sbb
mov
sub
mov
loop
jns
sbb
addl
and
xor
cld
or
gs
ret
sarl
repz
jp
aad
adc
xchg
cmp
or
mov
ret
in
icebp
test
rcrb
icebp
and
mov
stc
mov
test
sbb
xchg
cmp
jo
and
ljmp
sub
test
push
insb
test
push
insl
movsb
sbb
inc
sbb
xorb
inc
call
cli
fistpl
cmp
sub
mov
je
leave
xchg
pop
adc
push
mov
sarl
push
negb
lret
enter
xchg
test
jg
ja
sub
mov
orb
in
aam
out
jbe
std
mov
out
addl
jnp
jb
std
or
dec
sahf
fcoml
stos
dec
xchg
mov
cmp
add
es
pop
dec
les
jp
xor
xchg
pop
lcall
mov
mov
adcl
mov
adc
lret
scas
insb
aad
cli
pop
pop
jo
add
clc
iret
rol
pop
inc
outsl
dec
mov
xor
xchg
sbb
dec
jl
mov
fldt
mov
iret
pop
lods
hlt
xchg
out
cwtl
mov
jbe
xor
jns
lods
fprem
or
ror
stos
int
mov
jg
movsl
mov
rcrl
jg
mov
imul
adc
or
cmp
lret
subb
ds
or
jg
and
in
add
push
loopne
ret
mov
mov
cmpsb
call
and
scas
inc
add
inc
lret
movsl
pop
add
cld
jae
mov
lods
call
ja
mov
stos
das
mov
ret
add
das
lret
popf
sub
push
addr16
mov
sbb
inc
and
mov
loope
lods
sbb
xchg
xor
mov
shrl
xchg
mov
push
jo
or
ret
pop
inc
xor
ret
movsb
mov
xlat
or
sub
or
mov
icebp
sbb
int3
ret
mov
or
testb
or
mov
das
jae
pop
jl
and
sbb
mov
bound
cli
mov
or
add
cwtl
sub
adc
jns
popa
jmp
xor
pop
xorl
aaa
pop
adc
rolb
les
add
ljmp
sbb
mov
adc
jb
inc
aas
sub
lods
pop
mov
adc
notb
loope
pusha
add
dec
cmp
xor
or
pop
jg
adc
inc
push
clc
mov
and
mov
aas
pop
add
mov
mov
sar
lahf
outsl
jecxz
inc
push
push
pop
aad
int3
cmpsl
or
add
std
sub
mov
je
and
cmp
mov
popf
or
aaa
jle
int
and
rcrl
in
fs
jecxz
xchg
adc
dec
subl
sub
mov
cmpsl
push
sbb
stos
and
insl
jge
pop
jl
add
inc
shlb
mov
in
cmp
outsb
jnp
cmp
add
js
cmp
gs
std
stos
hlt
sub
in
lods
cmp
jp
mov
subb
cltd
mov
frndint
sub
ret
stc
movsl
out
call
mov
inc
dec
jns
mov
lock
out
push
add
mov
xchg
loopne
call
imul
cmp
adc
lret
decl
stos
orb
lret
add
js
sbb
pusha
sahf
aas
fnstcw
add
and
jge
mov
loopne
or
xor
aas
lcall
dec
add
sbb
mov
cmpsl
jl
std
pop
sub
and
ja
into
fnstenv
inc
int3
dec
movsb
jge
xor
or
stos
or
test
insl
jno
vmovdqu
jne
shll
loope
mov
jae
push
ljmp
loopne
lret
adc
dec
mov
leave
js
test
lahf
mov
mov
xchg
outsl
outsl
cmp
imul
mov
add
movsb
mov
arpl
cltd
xlat
movsl
es
xor
enter
fisubs
ret
dec
xor
rcrb
ja
decl
stc
cmp
nop
out
ds
hlt
sub
pop
add
adc
push
insl
sbb
cmpsb
xlat
xorl
push
and
lret
cs
js
andb
cwtl
mov
addr16
mov
sub
scas
pushf
scas
inc
mov
fisubs
xchg
push
push
dec
leave
lock
std
jg
pop
adc
popf
popf
pusha
pop
scas
and
and
inc
cmpsb
pop
pop
jb
daa
testb
enter
cmp
aam
mov
repz
or
xchg
mov
push
aaa
sbb
push
pop
mov
pop
pop
sub
adc
fisubl
scas
add
jbe
pop
es
inc
ds
adc
pop
std
daa
dec
clc
pushf
sub
jmp
test
push
idiv
inc
loopne
rcll
push
test
mov
cmc
enter
xor
loope
stos
sarb
mov
js
scas
lcall
mov
xor
add
adc
add
mov
cwtl
test
movsl
dec
adc
xlat
xor
aad
fwait
jge
pop
jnp
inc
pop
xor
pusha
or
ljmp
push
pop
xchg
mov
push
outsb
inc
mov
fildll
sub
sub
lods
adc
mov
pusha
in
scas
cmp
cltd
lods
pop
inc
mov
enter
cmp
lea
cmp
sbb
ret
gs
dec
rclb
imul
lret
add
stc
sub
push
sbb
jmp
push
cmp
mov
cmp
add
sbb
mov
pop
sbb
or
in
frstpm(287
pop
push
inc
jle
push
xor
and
fs
orl
inc
lods
negl
shlb
rorl
push
dec
imul
cmp
aad
cmpsl
jne
sbb
in
orl
jmp
lock
push
push
jle
out
movsl
lret
xchg
sub
dec
push
push
push
dec
xchg
jbe
hlt
divb
fimull
push
leave
cmp
loopne
xor
jno
jno
insl
cmp
adc
xchg
or
test
jge
fcmovne
xor
lods
dec
jp
and
loop
push
xor
and
jmp
jmp
hlt
divb
test
fmul
jb
popf
scas
cwtl
popa
cmc
hlt
xchg
fs
pop
dec
push
mov
mov
sbb
jne
ss
mov
movsl
sbb
xor
enter
xor
jle
mov
leave
xor
ret
inc
cmp
xacquire
mov
jnp
mov
dec
xchg
mov
mulb
mov
mov
into
lock
int3
cmc
js
and
add
sti
xchg
nop
ret
jne
ja
sbb
popa
pushf
xchg
push
cmpsl
pop
aad
into
test
or
popa
jl
jbe
idivl
xor
sub
test
mov
xchg
ret
scas
push
adc
ror
adc
xor
dec
cmp
inc
popa
push
arpl
xor
in
test
std
cmp
aad
sbb
inc
in
mov
das
in
xchg
jecxz
dec
out
out
push
xorb
pop
jmp
jg
jnp
subl
cs
loop
dec
cmp
dec
add
jne
iret
pop
rcr
imul
je
add
jbe
jp
rcrb
pop
lahf
rcrl
mov
jns
jae
adc
jno
push
call
add
jne
pop
cli
je
enter
aaa
js
aam
dec
leave
cmp
stos
xchg
in
or
imul
std
roll
or
imul
mov
inc
subb
jns
dec
orb
inc
rcl
aaa
pop
sbb
rcrb
popf
out
pop
testb
lea
or
push
xor
mov
xchg
das
dec
push
fcoml
sub
cltd
and
mov
shl
test
and
test
loope
je
ret
push
push
mov
push
mov
daa
ljmp
scas
push
cmp
mov
out
push
sub
stc
sub
call
jmp
fsubrl
popf
insb
jae
pop
test
sahf
mov
pop
mov
push
lahf
mov
adc
iret
mov
sub
cld
dec
and
jae
fcoms
pop
sahf
xchg
cld
aad
popl
push
push
inc
fwait
lret
out
sub
leave
mov
jmp
cmp
subb
pop
cmp
push
movsb
or
or
mov
cs
enter
mov
test
sbb
in
jle
cmp
int3
inc
cmp
add
std
outsl
add
repnz
nop
mov
xchg
jnp
rcrl
shll
and
ficompl
in
xor
fucomi
mov
dec
outsb
mov
mov
dec
sbb
leave
daa
aam
jg
das
mov
repnz
push
jo
stos
ja
xchg
lcall
mov
pop
push
das
icebp
andb
jp
lret
sbb
imul
and
in
pop
aad
jns
xor
repnz
mov
pop
push
fidivs
push
adc
test
bound
jno
and
loopne
cmp
adc
mov
imul
dec
out
imul
mov
jnp
or
in
inc
daa
jne
out
cmp
push
test
bound
enter
xor
shlb
fisubrs
imul
int
and
jbe
xor
lret
popa
frstpm(287
rol
adc
xor
and
aad
pop
nop
xchg
and
cmp
popa
sbb
fsubrs
and
mov
add
mov
dec
test
mov
in
shrb
fwait
inc
jnp
jb
mov
mov
lea
xlat
add
mov
daa
cwtl
dec
adc
test
adc
jae
xchg
stos
dec
js
mov
xor
test
sub
cs
andl
xor
faddl
inc
jbe
mov
pop
and
mov
clc
pusha
dec
sub
add
inc
call
jne
mov
jbe
repnz
aaa
push
lcall
fwait
jle
push
incl
cmp
mov
xor
fnsave
and
or
jne
stos
addr16
rorb
fwait
and
sbb
pop
out
jle
idiv
pushf
push
and
jnp
pop
orb
daa
icebp
scas
js
ret
sub
mov
movsb
shrb
mov
xchg
jge
mov
pop
add
rcl
sub
inc
pop
lds
push
adc
or
sbb
mov
lret
mov
pop
pop
pushf
sbb
shl
out
negl
mov
pushf
and
cmp
dec
push
dec
out
inc
cltd
clc
cmp
shll
out
and
into
dec
ss
aaa
dec
push
outsb
and
sbb
jle
dec
lods
fadds
insl
dec
lret
mov
mov
sti
inc
imul
xchg
jb
sub
push
mov
lods
ret
add
shlb
sub
mov
fcompl
dec
jno
inc
mov
jae
test
pop
loope
fdivl
and
sahf
popa
push
jecxz
jne
xchg
mov
into
cmp
sarl
insb
xor
fxch
cmc
imul
xchg
cmpsl
sbb
jbe
xchg
inc
test
mov
pusha
sarb
sub
inc
jnp
mov
punpcklbw
ret
fcoml
lds
scas
jnp
sbb
aaa
xor
dec
dec
out
cmp
cmp
repnz
repz
push
push
ret
mov
mov
mov
adc
inc
and
and
aad
fwait
in
mov
into
push
fdivrp
jl
cmpsb
insl
loope
mov
mov
sub
outsb
jno
aad
push
inc
inc
pushw
sbb
or
out
dec
jg
jle
movsb
cwtl
pop
repnz
jae
mulb
decb
push
test
dec
dec
push
and
adc
mov
xchg
cltd
cmc
inc
cmp
test
add
divb
nop
mov
mov
cmpl
cmp
sub
push
js
or
pop
fidivrs
jns
or
or
notl
arpl
push
sub
adc
mov
push
inc
pop
adc
call
push
adc
mov
aaa
push
dec
int
jnp
jb
imul
sbbb
and
aaa
and
in
sahf
or
xor
ljmp
dec
dec
aam
xor
test
cs
popl
inc
sti
xchg
popf
add
stc
or
or
mov
lock
mov
fwait
pushf
cli
cld
idivb
test
mov
inc
test
mov
aam
outsb
adc
cmp
outsb
dec
jmp
dec
inc
ja
sub
mov
decl
fiadds
adc
hlt
jns
in
xchg
adc
mov
inc
xchg
faddl
outsl
and
and
adc
paddw
xor
xchg
cmp
popf
sub
push
mov
inc
sbb
fidivrs
data16
and
imul
rcrl
dec
add
ficomps
popa
jg
fwait
shlb
stos
mov
push
inc
sub
addl
fs
jl
gs
loope
or
js
scas
imul
add
lock
rolb
insl
dec
arpl
fmul
adc
jbe
sahf
repz
andb
movsl
add
add
iret
rcl
aaa
jmp
adc
and
jle
jg
int
xchg
jg
cmp
out
jg
test
pop
jmp
fbstp
dec
push
mov
sbbb
lods
cli
cmc
pop
outsl
inc
ljmp
test
or
mov
inc
fldcw
mov
outsl
sahf
cmp
push
mov
xchg
cmp
adc
xlat
jns
cmc
xor
fldcw
orb
mov
cli
shlb
movsl
fs
push
dec
xchg
jo
arpl
ret
rorl
mov
addr16
xor
mov
dec
sub
pop
push
stos
mov
inc
cli
iret
inc
mov
aam
inc
pop
fs
loop
shl
out
shl
sbb
pop
adc
aas
add
bound
and
mov
push
push
mov
cmpsb
mov
jb
inc
cmp
cmp
dec
scas
testl
rol
push
lock
add
sti
or
inc
js
pushf
scas
mov
lahf
dec
lea
in
aaa
and
nop
pop
inc
icebp
nop
out
dec
cmpl
or
cmpl
jb
stos
loope
pop
clc
and
xchg
adc
mov
ja
fnstsw
jg
mov
shrl
icebp
mov
movsl
mov
sbb
add
lds
mov
sti
clc
test
jo
stos
rclb
cmp
or
pop
jns
xchg
outsl
cmp
fistl
movsl
xchg
sbbb
or
or
sub
out
mov
insl
scas
dec
push
and
enter
fldl
fucomi
lods
push
push
rcrl
fcomps
inc
jle
dec
pop
mov
icebp
jecxz
pushf
hlt
jp
adc
mov
inc
mov
sbb
pop
and
test
dec
mov
iret
mov
inc
mov
mov
or
jge
pop
mov
cltd
mov
int
sub
jg
iret
cld
insl
out
mov
inc
imul
popa
outsb
mov
incl
mov
adc
mov
push
jge
pop
and
inc
xchg
push
push
insb
sbb
mov
shll
cli
mov
rcl
or
sti
mov
into
pop
test
mov
repnz
iret
movsb
sbb
stos
cmc
cmp
mov
add
sub
mov
iret
jno
add
push
andl
imul
gs
dec
adcb
std
out
negl
push
mov
lods
sub
fwait
inc
inc
data16
mov
pop
mov
mov
jle
dec
rolb
cmp
stc
adcl
sub
sbb
jnp
mov
stos
dec
movhps
out
xor
lret
shll
rcl
mov
xor
xchg
push
out
es
add
stc
enter
fwait
bound
jno
add
lahf
nop
jbe
iret
cltd
and
mov
cmp
push
mov
xchg
fldt
outsl
xchg
xchg
mov
pop
test
cmp
outsl
lahf
and
inc
cmp
fs
cmp
pop
mov
sub
mov
pop
pusha
in
mov
je
push
jnp
adc
jl
mov
pop
loop
pop
pop
push
test
mov
cwtl
push
jns
lods
xor
jno
and
cltd
nop
jmp
sbb
faddp
mov
sbb
and
sub
aad
lcall
sbb
push
push
mov
sti
xor
rcr
inc
push
sbb
pop
dec
negl
cld
sti
cmp
sub
lret
lods
cmp
mov
dec
lods
mov
sti
mov
inc
imul
mov
mov
jae
ljmp
das
adc
adc
inc
mov
cli
test
mov
fucomi
std
mov
or
mov
stc
aaa
xchg
lret
mov
hlt
outsl
pop
xchg
ret
data16
aas
xor
ljmp
xchg
lea
add
fs
je
add
pop
xchg
lret
jecxz
xchg
mov
mov
add
icebp
sub
dec
mov
popf
sbb
xor
mov
sub
or
cmp
lock
dec
dec
rcl
cmc
insb
xchg
pop
and
clc
mov
inc
sbb
xchg
test
lea
movsb
mov
in
mov
scas
pop
ljmp
lahf
mov
cmp
mov
and
lahf
jecxz
jge
ds
stos
cmp
imul
mov
jmp
imul
lret
xchg
lret
mov
mov
inc
sahf
mov
mov
outsl
mov
xor
dec
xchg
inc
test
or
mov
mov
ror
sbb
dec
pushf
cmpsb
and
lret
mov
jl
mov
ret
out
lea
xchg
xchg
push
dec
dec
mov
lds
pushf
push
mov
stos
mov
iret
test
ror
arpl
xor
mov
inc
xlat
and
push
xor
mov
sub
xchg
and
sbb
stc
sbb
push
hlt
es
add
cmp
lret
pop
cli
or
scas
test
mov
cmpsb
mov
jno
and
or
cwtl
fwait
jg
mov
sar
call
addr16
lock
ljmp
jbe
xchg
pop
dec
push
xchg
pop
mov
pushf
jg
sti
call
mov
rorl
jo
sub
sbb
add
dec
push
adc
cmp
or
lret
movsl
jb
es
xchg
mov
jecxz
ljmp
mov
mov
mov
bound
mov
mov
cmp
xchg
pop
loope
fistpl
mov
cmpsl
cwtl
ja
add
and
nop
cmp
movsb
xchg
xor
jns
add
jecxz
mov
mov
sahf
cmpsl
mov
mov
adcl
repnz
inc
push
mov
mov
fildl
test
or
xlat
int3
rcr
jmp
mov
pop
mov
icebp
mov
push
outsb
adc
mov
mov
xor
frstor
sub
leave
mul
inc
xchg
into
mov
xorl
mov
xor
mov
xchg
ret
jns
inc
jbe
mov
cmp
orb
jle
inc
cmp
adc
mov
bound
pop
nop
add
inc
mull
or
mov
mov
lahf
pop
mov
ret
add
cmpsb
pop
adcb
lcall
int
cmc
push
test
repz
xchg
lahf
add
xchg
iret
mov
adc
jge
adc
stos
dec
fimull
je
push
and
mov
xor
aaa
jae
push
mov
cmp
and
leave
js
iret
jp
adc
push
in
cmpsb
mov
outsl
dec
int3
mov
or
lret
out
sahf
lret
mov
xor
add
outsl
inc
fcoms
jnp
sub
lret
ret
leave
adc
sti
push
mov
mov
sarl
int
daa
shll
adcl
xchg
rcrb
subl
xchg
lcall
ja
adc
jno
fwait
js
fs
xor
arpl
push
shrb
mov
jbe
and
add
into
movsl
rcll
test
cmc
xor
xchg
ret
cli
jmp
shrb
scas
inc
aad
popa
cmp
arpl
outsl
pop
bound
fidivrs
setnp
inc
out
lret
insl
lcall
mov
sub
xchg
xor
movsl
cmp
std
sub
xlat
pop
nop
xor
scas
xor
nop
mov
cmp
lahf
adc
pop
arpl
mov
cmp
jecxz
or
xchg
mov
lret
in
subb
cmp
push
aaa
movsl
dec
sbb
or
insb
jecxz
es
orl
je
pop
in
fwait
dec
ffreep
pop
into
xor
ja
icebp
or
jbe
cmpsb
xor
imul
mov
hlt
xchg
cwtl
push
add
mov
imul
insb
je
push
stc
mov
outsl
mov
sub
in
scas
inc
jnp
nop
xor
jp
sub
dec
jne
cmpsl
xchg
push
out
pop
ja
adcl
out
out
repnz
int
xchg
pushf
rorb
pop
adc
nop
add
mov
cmp
cmp
add
adc
adcb
ret
popa
push
xchg
sbb
mov
dec
adc
out
std
adc
pop
scas
aaa
sub
push
inc
mov
or
inc
fisttps
sti
push
xchg
jne
lods
and
pop
cmp
out
jl
xor
push
shll
xor
cmp
es
in
xor
or
push
std
dec
vrcpss
cmpsb
fiadds
scas
jno
mov
repz
std
push
inc
push
daa
cmp
lods
insl
mov
fisubl
mov
stos
fldenv
into
popf
xchg
add
cmp
pop
jne
sub
jl
sbb
int3
cmp
sub
shr
xor
lds
nop
imul
stc
jmp
mov
jbe
andl
dec
arpl
or
inc
cmp
mul
inc
pop
call
ljmp
or
fcomps
cwtl
push
les
fnsave
fwait
adc
idivl
out
or
adc
cmpsl
pop
xchg
loopne
add
test
clc
aas
or
jp
rcll
sarb
lods
xchg
xor
inc
mov
mov
and
in
xor
xor
and
add
and
lret
shlb
jg
aas
mov
sbb
enter
push
fwait
jmp
xchg
fwait
int3
push
mov
ss
push
or
ss
and
adc
xlat
lock
and
mov
lcall
jnp
or
mov
in
dec
cli
mov
mov
cltd
and
push
mov
fcoms
rcr
std
mov
cli
cmp
mov
int3
insl
iret
push
add
add
loope
addr16
xchg
fwait
popf
pop
cmp
or
test
mov
pushf
or
outsb
cmp
inc
dec
jmp
fmuls
pop
jb
fmuls
mov
inc
test
and
lock
hlt
and
inc
std
aad
cmpsl
aas
mov
shl
test
push
jo
incl
inc
loop
loop
test
pop
insl
orl
pusha
subl
divl
mov
dec
jns
jb
jne
mov
adc
xchg
jecxz
bound
arpl
clc
jns
jbe
jne
rcll
outsb
test
and
jnp
shr
cmp
test
mov
add
dec
ja
outsb
mov
loopne
push
sbb
out
loopne
push
mov
shll
or
dec
xchg
stos
cwtl
cmpsl
cmp
dec
jns
pop
out
mov
icebp
int3
push
adc
rcrl
cmp
test
into
push
frstor
stc
inc
inc
push
pop
xchg
and
fcmove
fbstp
jmp
loop
int
imul
hlt
enter
outsl
cli
aad
loopne
or
popf
sbb
outsb
aaa
xchg
adc
dec
loope
jo
andl
mov
popf
sarl
and
sub
xor
or
sbbb
gs
mov
enter
xchg
add
cld
dec
and
mov
xor
sahf
jno
fdivrs
or
cmpsb
shl
int3
jo
pop
repnz
inc
cmp
mov
bound
loope
add
inc
mov
ss
push
imul
call
push
outsb
add
add
bound
loopne
mov
and
cmc
lea
cltd
xchg
lea
imul
pop
jbe
push
add
out
mov
aas
pop
xchg
aas
outsl
inc
pop
neg
jns
stc
aaa
fldl2t
pop
imul
sahf
movsb
xchg
jg
xor
ret
aaa
cmpsb
mov
mov
mov
and
mov
mov
jne
mov
pop
add
xlat
repnz
push
popa
js
fildll
jmp
popl
sub
fldt
mov
imul
cmp
xchg
push
pop
insb
jp
pop
jne
cltd
sub
and
aas
lock
enter
in
movsl
orl
fsubrl
and
sbb
repz
adc
jl
inc
xchg
add
movsb
add
mov
add
dec
test
repnz
icebp
jg
pop
fwait
jbe
cmp
push
rcrl
pop
mov
mov
ds
mov
ss
sahf
inc
dec
push
cmpsb
or
mov
sbb
loopne
pop
push
cmpsl
fcmovne
or
or
xor
in
lea
call
fwait
imul
call
jae
jnp
xor
std
mov
or
add
lods
jne
jbe
sti
jnp
mov
cltd
mov
aaa
pop
adc
mov
mov
cmpsb
mov
mov
xorb
adc
lock
int3
mov
leave
aam
scas
xchg
movsb
pop
sbb
cmc
scas
xchg
jno
dec
adc
dec
addps
mov
inc
adc
pop
ficompl
dec
pop
xchg
fbld
and
je
aad
mov
insl
pop
mov
push
mulb
out
mov
fwait
rcl
outsb
sub
mov
sub
adc
sti
ds
dec
fs
icebp
mov
xor
cmc
sbb
stos
push
inc
fistpl
lahf
fs
and
add
out
flds
call
jo
das
addr16
mov
lret
pop
loop
jns
pop
jno
cmp
aad
icebp
cltd
mov
cli
enter
aam
push
mov
test
bound
cmp
lret
mov
in
sub
pop
shrb
cmp
rol
jno
mov
and
sub
insl
jbe
push
xlat
jnp
sub
data16
ds
mov
lret
push
enter
js
dec
adc
mov
fsub
js
sbb
out
cltd
cmp
cli
sub
sub
dec
je
pop
shr
imull
lcall
sbb
lret
mov
jo
jmp
lahf
xrelease
dec
push
sub
dec
ret
mov
mov
mov
add
shrl
push
fdivrl
jo
ret
or
in
xor
sub
add
mov
xor
push
fidivs
dec
sbb
ljmp
aam
pop
sbb
out
push
repnz
fcmovne
clc
and
dec
cmp
dec
nop
inc
ljmp
and
enter
sub
imul
pop
adc
iret
cmc
data16
xchg
lcall
sub
int3
mov
xor
pop
imul
dec
cmpsl
cwtl
insb
jne
gs
stos
test
pusha
fadds
aam
sbb
adc
scas
sbb
inc
add
cs
pop
or
cltd
mov
orb
cmp
mov
cmp
and
adc
fsubr
cmp
fbstp
cmp
movsl
push
inc
loop
into
popa
mov
aam
lea
mov
inc
imul
push
fildl
push
jl
ss
pop
mov
cmpsl
adc
xor
pop
mov
xor
into
ret
lods
jecxz
faddl
xlat
jg
or
jae
pop
cmpsb
push
adc
sahf
xchg
sbb
jle
stos
fsubr
adc
das
mov
fstpl
mov
inc
mov
adcb
int3
add
mov
dec
cmp
stos
mov
push
mov
xchg
adc
lock
push
movb
sti
rcrl
bound
scas
jecxz
outsl
test
sub
ret
inc
mov
subps
ja
pop
push
lods
jg
sub
mov
iret
ret
jp
imul
data16
xor
scas
ret
ss
loopne
adcl
cmp
mov
cmpsb
mov
mov
lock
dec
xor
inc
xor
pusha
mov
inc
pop
inc
sub
nop
mov
lret
inc
adc
aam
xor
push
pop
sbb
pushf
mov
out
and
cwtl
jns
sbb
mov
loope
stc
jbe
dec
aam
pop
aad
repz
shlb
mov
sub
insb
dec
pusha
fstpl
cmp
push
clc
scas
out
push
rcrl
shrl
iret
push
scas
mov
mov
loope
jne
sahf
out
out
push
sub
test
and
loope
jle
cmpsb
fdivrs
xchg
lock
lcall
outsb
in
dec
push
add
adcl
mov
fstpt
ret
sub
movsl
sbb
dec
testl
jno
daa
cmp
inc
and
mov
jmp
sub
fwait
gs
sahf
mov
data16
jmp
mov
cs
inc
rolb
jbe
sbb
xchg
popl
popa
arpl
mov
sbb
gs
jle
shlb
bound
inc
mov
push
inc
pop
aad
xor
mov
sub
aaa
add
pop
das
pop
mov
or
or
or
cltd
iret
js
lea
sub
test
and
int
aam
jecxz
cmp
lods
andl
xchg
xor
roll
xchg
pop
repnz
dec
sti
adcb
stc
cmp
popw
leave
push
cli
add
imul
hlt
mov
sub
mov
cmp
mov
divl
fucomi
fistl
pop
xor
insb
xchg
icebp
lock
clc
adc
jg
fdivr
inc
add
jle
test
mov
xchg
sahf
jecxz
std
inc
clc
or
cld
xchg
mul
pop
mov
fiaddl
out
int
xchg
dec
les
dec
push
sbb
pushl
hlt
daa
mov
pushl
std
ret
adc
std
adc
mov
mov
xor
addr16
push
mov
imul
inc
sub
xchg
loope
lods
in
lds
push
xor
mull
testb
insl
rorl
scas
dec
pop
inc
in
add
jo
mov
rclb
jg
and
pop
cld
int
lock
and
xchg
add
int3
fs
xchg
scas
pop
stos
push
push
sbb
inc
and
push
jb
xchg
imul
sub
aas
jle
or
rclb
ds
cli
ljmp
inc
out
jae
jecxz
add
xchg
stos
fs
and
js
pop
sbb
or
push
data16
and
jge
nop
lret
mov
cmp
iret
rcrl
cmp
cmp
adc
pop
and
sbbb
jge
add
fs
push
sub
gs
jbe
xchg
mov
lea
xor
cmp
mov
frstor
sub
outsl
xchg
cmpsl
mov
test
mov
cs
push
lcall
cmp
cltd
adc
mov
pop
mov
mov
mov
cwtl
in
pop
repz
sbb
mov
nop
movsb
xchg
jge
adcl
popf
imul
pop
or
lds
mov
add
pop
fbstp
xchg
xor
adc
or
sub
out
lcall
loope
jae
sbb
outsl
call
xchg
push
mov
loop
ret
sbb
scas
addps
pushf
jbe
push
mov
roll
sub
addr16
pushf
lahf
add
rcrb
cmp
push
dec
jo
scas
in
or
sbb
das
hlt
dec
add
outsl
sbb
cwtl
or
dec
mov
adc
adc
dec
test
cmp
sub
xlat
mov
adc
xchg
adc
mov
inc
pop
mov
mov
push
fdiv
or
sub
xor
cmc
lret
jno
icebp
sbb
addr16
jecxz
movsl
jg
cmp
insb
add
addr16
jp
inc
pop
mov
push
popa
push
or
int3
xchg
push
mov
insb
jle
leave
mov
adc
mov
or
or
and
fbstp
icebp
repz
pop
popa
mov
dec
sahf
mov
push
call
push
loop
sahf
out
push
dec
pop
shlb
cmp
jg
lock
ss
sub
xor
cwtl
jle
aad
push
les
add
out
xor
mov
push
inc
ja
pop
bound
mov
stc
and
jbe
jnp
fwait
icebp
and
les
pop
dec
add
fiaddl
mov
sub
cld
pop
js
incl
movsl
daa
and
scas
xor
lea
cltd
repnz
push
sbb
aas
push
pop
roll
adc
fst
sub
and
xchg
mov
jp
mov
mov
insl
cmp
lcall
or
in
sbb
or
or
mov
jp
xchg
popa
div
mov
xchg
cld
out
in
roll
addl
icebp
jb
push
ds
and
aad
sbb
insl
push
adc
adcl
in
lds
or
in
js
enter
faddp
push
jmp
push
repz
add
cmp
mov
lret
arpl
fistl
push
and
add
int3
scas
fucomi
cmc
test
sbb
shll
mov
lret
jl
sub
les
mov
movl
inc
jbe
scas
aam
out
fistps
mov
push
outsl
adc
xor
mov
inc
addr16
test
in
dec
in
adc
jl
lods
fstps
sub
mov
push
in
bound
rclb
stc
pop
mov
xchg
in
fs
lods
jns
mov
mov
jo
inc
leave
icebp
jle
sbb
or
inc
sbb
fisttpl
xlat
add
mov
add
loop
xchg
mov
dec
mov
push
adc
popf
rclb
add
sbb
movsb
out
xor
imul
xor
and
in
roll
pop
fisubrl
rcll
ret
jmp
push
sbb
cmp
push
test
and
cwtl
inc
lods
lret
jno
addr16
in
fcom
xor
push
xor
mov
mov
ret
sarb
loopne
stc
leave
fists
fidivrs
jae
les
add
jb
add
mov
adc
in
jnp
sbb
mov
cmp
call
jge
pop
outsb
cmpsl
xchg
pushf
push
or
adcb
xor
push
scas
daa
sbb
test
inc
inc
mov
jns
outsl
pop
sub
stc
enter
push
mov
and
jne
push
ja
jmp
cmp
and
ficoms
fldcw
inc
cwtl
pop
or
rclb
addr16
inc
arpl
dec
inc
or
orl
sti
add
es
add
in
lret
xchg
mov
inc
add
or
notb
xchg
cmp
loopne
xor
out
lcall
sub
cmp
mov
mov
cli
outsw
adc
pop
lret
lods
lea
xchg
mov
or
push
xlat
xchg
add
nop
jmp
in
add
je
cmp
push
iret
loop
add
dec
mov
repz
sbb
in
and
cmp
insb
test
mov
sbb
es
mov
inc
std
pop
loopne
iret
inc
frstor
fcoms
xor
cmpsl
and
pop
dec
xchg
jmp
or
mov
shlb
xor
dec
dec
mov
ficoml
repz
push
adc
mov
jb
aad
insl
xchg
dec
sub
movsl
and
dec
loope
or
or
pop
or
test
cmp
mov
push
jo,pn
xor
fucomip
roll
aad
and
dec
scas
dec
out
push
jne
xlat
sbb
cld
rcrl
mov
jne
cld
xor
xor
mov
leave
mov
loop
push
push
ljmp
lahf
xchg
daa
dec
jb
jmp
add
fcmovne
xor
cmpsl
jmp
lods
xchg
mov
push
lods
negl
jmp
mov
push
push
clc
sahf
das
nop
fisttps
ret
jmp
mov
adcb
fwait
mov
rolb
repnz
sahf
dec
fstps
add
in
dec
out
fwait
and
imul
sbb
pop
or
rcrb
adcb
or
mov
incl
mov
lahf
and
lea
xchg
mov
and
or
loop
inc
pop
jnp
lods
add
call
xchg
dec
add
lret
fstps
fs
xchg
fsubrl
nop
popa
push
xchg
orl
pop
add
lahf
mov
mov
loopne
outsb
fwait
es
mov
sbb
and
adc
xor
mov
cmpsb
test
xor
rorl
jns
pop
and
sbb
or
scas
dec
js
mov
xor
gs
add
loope
jp
pushf
push
adc
lea
sti
cld
pusha
sub
aad
sbb
cwtl
xor
int
mov
push
popa
mov
sbb
repnz
sub
loopne
arpl
roll
out
inc
jecxz
loope
pusha
mov
cmpsb
outsl
mov
loope
xchg
fists
andl
xorl
into
push
pop
aam
ret
or
cwtl
fdivrs
inc
pop
das
in
mov
jmp
test
xchg
adc
aas
xchg
or
ljmp
je
adc
jp
push
lods
mov
pop
fisubrl
adc
aad
ja
imul
add
jp
sub
lock
loop
sub
cmc
push
dec
xchg
lods
leave
sub
mov
pop
and
adc
jp
push
mov
mov
nop
cmp
lret
push
cmp
dec
ds
popf
mov
daa
insb
out
sbb
rolb
test
push
cmpb
insb
cmp
and
decl
jo
jb
cmp
ret
sub
setns
mov
sahf
addr16
lea
and
in
sub
shll
int
js
mov
idivl
insl
in
mov
repnz
pop
shll
push
lret
das
adc
xchg
int3
or
enter
adcl
shl
aad
xchg
add
jmp
cmp
mov
jle
sub
lods
and
and
sub
inc
and
mov
stos
mov
scas
fcmovnb
lds
jbe
mov
pushf
cmp
mov
neg
add
jmp
xor
add
repnz
dec
xchg
jo
push
sub
lret
repz
pop
fists
scas
gs
in
fdivs
call
mov
js
sub
add
and
mov
mov
cli
jbe
jno
inc
movsb
aas
in
push
adc
mov
movsb
push
push
popf
dec
inc
add
sub
mov
jge
xor
pop
and
xor
pop
or
xor
cmpl
stc
push
gs
lcall
out
je
push
repnz
mov
jne
inc
dec
andb
imul
in
sbb
mov
mov
mov
cltd
or
pop
pusha
cmp
xor
dec
add
cs
test
or
mov
adc
in
xchg
mov
js
pop
je
mov
lds
mov
xchg
pop
je
jmp
daa
out
sbb
mov
mov
sarb
jb
mov
inc
pop
add
push
mov
movsb
mov
in
inc
enter
inc
xchg
jns
pusha
or
mov
sub
or
sub
pop
xchg
dec
or
jb
mov
push
cs
and
jge
aaa
mov
pop
mov
lods
mov
mov
mov
shll
adc
ret
in
das
imul
sub
sbb
cmc
sbb
xor
xor
cmp
mov
ja
push
jmp
mov
repz
daa
jb
popa
dec
outsb
aad
mov
jns
fbstp
js
fildl
sub
and
mov
fildll
mov
jnp
or
mov
jno
pop
shl
movsb
popf
scas
call
or
test
daa
cs
xchg
dec
pop
adc
testb
jle
push
dec
add
mov
pop
and
popf
fs
xchg
dec
and
cmp
mov
push
and
cmpsb
int3
in
fdivrl
sub
iret
jge
cmp
in
jg
pop
loop
js
enter
sbb
popf
rcr
lret
sub
cs
imul
notb
hlt
pop
mov
scas
sti
adc
pop
or
daa
dec
dec
mov
sarb
into
std
push
repz
sub
mov
push
jge
lret
mov
xchg
cmpsl
push
push
mov
jmp
cli
xchg
sbbb
cvtps2pd
push
fcomps
jo
push
add
mov
mov
loope
adc
jl
insl
mov
loope
sbb
bnd
sub
setle
sub
fiadds
mov
xor
into
cli
aam
pop
enter
data16
enter
sub
movsl
fcomip
mov
push
adc
pop
data16
jb
ss
xchg
sar
fldcw
fisubs
stos
das
jmp
fmul
and
punpckhbw
sub
jg
leave
sbb
xchg
sbb
mov
aaa
jp
shl
adcw
cwtl
push
fistpl
push
test
or
repz
cmp
aas
mov
repz
shll
sub
xchg
ds
mov
push
adc
in
rcrl
jbe
test
jno
inc
xor
cmp
push
push
popf
std
adc
adc
dec
xchg
push
dec
test
or
jae
push
aas
loop
mov
push
dec
jecxz
dec
movd
cmc
add
dec
mov
ret
xchg
inc
loop
pop
sub
repnz
loope
int
xchg
mov
add
lahf
ds
mov
jns
ret
push
mov
add
mov
pop
push
xchg
and
out
test
lret
push
xchg
cmpsl
dec
js
out
add
mov
inc
inc
or
jb
cmovbe
add
fistl
pop
sbbl
push
and
push
mov
cwtl
and
and
insb
sub
push
pop
dec
repnz
lret
and
dec
push
shll
jnp
cltd
mov
lods
clc
mov
imul
jmp
popa
fld
sbb
cmpsb
test
mov
mov
jb
stos
mov
inc
shlb
roll
pushf
cltd
int
lds
push
stos
mov
movsl
mov
ja
clc
xchg
adc
jle
sbb
scas
fwait
adc
in
aas
stos
mov
pop
cmp
dec
mov
test
jp
mov
mov
sti
sub
movb
mov
or
lret
jge
push
lods
xlat
dec
jae
sbb
pop
pop
cld
jg
add
test
repz
sbb
jmp
adc
mov
gs
pop
mov
jns
sbb
mov
int3
push
mov
push
xchg
hlt
or
adc
jno
outsl
in
sbb
push
cwtl
gs
xchg
ljmp
and
jle
js
sbb
dec
xor
mov
push
leave
imul
or
adc
inc
cltd
inc
aaa
jle
add
cmpsb
push
or
cmpsb
dec
cwtl
clc
add
loopne
add
adc
call
into
js
xchg
xorb
jns
daa
and
add
inc
dec
cli
push
sbb
push
xchg
pop
sub
pop
mov
pusha
sub
push
push
pop
adc
cli
ret
adc
pop
inc
mov
xor
or
pop
xchg
popa
sbb
xchg
push
add
inc
inc
outsb
push
inc
sbb
mov
mov
sahf
lcall
or
out
std
inc
scas
mov
pop
xchg
mov
jl
jge
das
rorl
rol
pop
and
scas
mov
jbe
outsl
daa
and
sub
push
aad
mov
mov
jg
ds
push
jecxz
stc
inc
into
addl
mov
jl
pop
jp
out
movsl
push
and
test
inc
cli
out
add
adc
jbe
aas
mov
xlat
mov
cltd
aam
ret
imul
pop
adc
mov
mov
or
loopne
pop
push
adc
ret
mov
in
jbe
mov
and
or
mov
adc
push
into
mov
std
mov
pop
inc
mov
xchg
mov
jg
outsl
xchg
and
aam
bnd
xchg
add
outsb
in
std
add
cmp
in
xor
cs
jbe
lahf
shll
jns
cmp
push
pop
pushf
jle
scas
test
fsubl
push
pop
aaa
mov
dec
fwait
orl
repnz
push
jns
dec
ss
and
movsb
sub
pop
pop
pop
dec
shll
jmp
xlat
rolb
add
sti
into
pop
mov
test
mov
lds
mov
fsub
sub
aam
adc
orb
leave
mov
adc
and
mov
jne
pop
mov
xchg
mov
ja
sub
cmp
mov
sti
int
cltd
cs
pop
cld
dec
in
ficompl
jne
pushf
pop
mov
scas
rol
enter
fcoml
scas
mov
popl
inc
jbe
pop
cmp
mov
jl
xchg
shrb
lods
adc
mov
mov
xchg
jo
popa
dec
inc
das
jp
mov
cmpsl
icebp
dec
fstpl
out
mov
and
inc
pusha
sub
into
jo
and
mov
mov
mov
stos
mov
xchg
add
loope
in
jb
inc
dec
xor
add
test
divl
fstpl
in
jp
es
dec
nop
stos
sub
outsl
lods
stos
pop
xor
dec
inc
jg
xchg
jbe
xor
inc
fwait
jg
push
jo
jae
mov
mov
stos
pop
push
or
inc
push
ret
dec
jp
adc
sub
fdivp
lret
shlb
inc
sbb
movsl
push
dec
dec
xor
popa
push
sub
dec
aam
push
sub
lods
andb
jns
das
lods
cld
ss
scas
call
pop
stc
in
fs
addr16
push
mov
out
add
push
mov
ret
popa
out
sub
xchg
ljmp
adc
adc
dec
in
push
jo
loope
addr16
adc
lock
mov
sti
push
push
mov
cmp
sub
jnp
sti
call
push
sub
lret
add
dec
popf
xchg
add
insb
add
into
cmp
jns
dec
jmp
cld
leave
stos
stos
xlat
jo
pop
notl
stos
gs
lods
pusha
fcomps
or
std
sbb
jne
inc
mov
sbb
sbb
push
push
xor
pop
fstl
mov
call
das
mulb
xchg
mov
or
out
call
notl
int
pop
aas
fwait
int
pop
mulb
call
int3
enter
pop
in
mov
xchg
lret
xor
pop
lret
lret
fldt
mov
addr16
jle
das
pop
adc
mov
sub
stos
stos
imul
push
filds
jnp
imul
cli
into
repz
scas
mov
cmp
out
insl
cld
xchg
aad
stos
fiadds
sub
in
cmc
xor
mov
aam
je
sub
imul
fldcw
lcall
adc
les
xlat
add
ret
es
add
insb
scas
dec
outsl
call
cmp
cs
xor
iret
jg
rcrl
rorb
lcall
imul
push
nop
mov
xor
adc
test
enter
adc
dec
inc
xchg
les
dec
mov
sub
push
sbb
mov
mov
add
pop
fnstsw
jns
push
outsb
into
xchg
inc
fldt
mov
ror
sub
mov
cmc
imul
cmpsl
shrl
ljmp
ret
xor
hlt
mov
frstor
dec
inc
sub
clc
scas
adc
sbb
cmp
push
mov
lcall
sti
or
lea
stos
rorl
nop
sbb
xor
je
ret
fsubs
lock
dec
int
lock
add
xor
pop
fcompl
arpl
shrb
add
push
and
sub
sti
jb
test
mov
es
pushf
lret
das
jmp
xchg
fisttpl
dec
adc
push
scas
outsb
fbld
sub
in
xchg
adc
push
mov
push
push
stos
inc
or
inc
shll
mov
mov
addr16
out
mov
mov
mov
mov
sti
xor
dec
out
sub
inc
adc
or
arpl
jno
pop
movsb
pop
scas
data16
shrb
xchg
xor
xchg
xor
xchg
ljmp
pop
push
add
psllq
mov
mov
sti
sub
xor
sub
fstps
jge
adc
aas
inc
out
jecxz
sub
push
rcrb
lods
cmpsb
and
dec
and
pusha
neg
cltd
std
add
add
or
andb
mov
or
aad
jnp
cs
mov
enter
nop
shr
lods
add
lock
or
dec
stos
push
mov
sub
sbb
sbb
mov
push
repnz
mov
jp
lcall
fldl
adc
shlb
cs
mov
jb
dec
mov
pop
mov
insl
adc
xchg
jp
jae
jge
test
xchg
cmp
mov
int
cld
inc
add
mov
inc
popa
mov
repnz
mov
cmp
dec
loope
ss
cwtl
push
subl
push
bound
xor
insb
clc
mov
sub
cmp
push
adc
fisttpl
or
xchg
leave
aad
lock
pop
inc
dec
sub
and
je
mov
lcall
in
mov
or
push
aaa
outsb
or
adc
dec
pop
repnz
leave
js
cmp
scas
and
fcomps
push
jbe
cs
fbstp
popa
jno
jmp
inc
popw
pop
cmp
mov
xlat
pop
dec
push
or
jecxz
add
lods
outsl
inc
movl
mov
mov
adc
lret
loope
mov
push
cltd
adc
jbe
aam
bound
inc
mov
fsubr
loope
adc
and
pop
roll
arpl
scas
dec
out
sub
out
lcall
pop
ds
in
and
arpl
lret
rcl
jb
ror
and
mov
or
sar
add
dec
lods
test
jns
dec
jle
je
js
lods
sbb
pop
lret
bound
mov
jns
jmp
xchg
stos
sub
cmp
jp
in
hlt
mov
jg
cmpsl
gs
in
pop
push
sarb
mov
fwait
cli
mov
jae
mov
pop
aad
jno
pushf
xor
sub
fbstp
push
inc
jo
push
fistps
mov
outsl
dec
pop
ret
ja
and
shrb
push
stc
pop
int
cltd
xchg
jae
or
not
mov
dec
pushf
scas
pop
in
enter
xchg
adc
aad
mov
jo
imul
imul
mov
mov
filds
adc
pop
cmp
jl
xchg
cli
push
xchg
jno
ret
xchg
push
nop
xchg
mov
popa
dec
or
sub
sbb
int3
repz
mov
ja
fwait
pop
or
ficoms
push
mov
nop
or
mov
or
pop
add
xor
jae
mov
out
fstp
xor
xchg
xor
adc
popf
lds
mov
mov
stos
ret
xchg
push
and
outsl
xchg
ja
shll
dec
mov
pop
fidivl
sbb
mov
jecxz
into
out
sub
mov
ret
pop
xchg
jbe
adc
mov
sbb
xchg
and
push
loope
mov
stos
mov
fbld
aam
pop
push
int
addr16
xchg
add
push
aaa
int
xor
jno
jo
loope
mov
loope
mov
popa
mov
inc
in
outsl
ret
mov
aam
in
mov
mov
test
adc
add
mov
outsb
mov
xchg
ljmp
adc
sbb
fcmovbe
das
aaa
scas
pop
mov
dec
pop
repnz
jle
mov
xchg
xchg
pop
ret
int
arpl
xchg
jo
jbe
aas
xchg
push
push
pop
adc
cld
iret
mov
pushf
lods
and
nop
stos
pop
ds
fdivl
arpl
push
ljmp
mov
cmc
xchg
push
pop
cmp
es
lcall
push
dec
int
inc
fwait
mov
xchg
push
fistl
jnp
inc
jmp
pop
or
hlt
rorb
and
cmpsb
pop
mov
sbb
xchg
mov
or
jne
in
push
xchg
idiv
pop
dec
push
mov
xchg
aaa
fs
call
jmp
jbe
fidivrl
cmp
idivb
adc
bound
adc
xor
cmpsb
loopne
dec
ds
jno
outsb
cwtl
popf
enter
mov
dec
cmpsl
cmp
movsl
add
sub
fndisi(8087
clc
dec
xchg
mov
call
jae
out
outsb
jne
leave
push
sbb
clc
in
scas
jmp
push
shll
pop
pop
pop
xchg
icebp
cmp
loop
jne
mov
cmp
rorb
fcoml
fimull
stos
pop
es
and
xchg
test
push
outsl
push
shll
movsb
inc
mov
mov
jbe
cli
icebp
fiadds
dec
xchg
lea
add
mov
jo
test
leave
mov
xchg
daa
jns
cmpsb
arpl
cmpsb
das
mov
mov
aad
cs
insl
iret
ds
push
ret
lret
imul
dec
jnp
cmp
mov
mov
jo
bound
push
dec
aaa
in
mov
dec
inc
bound
xorb
mov
mov
inc
or
fnstenv
dec
int
popa
push
aam
inc
push
inc
xchg
xor
shll
cs
jp
jp
and
and
scas
add
inc
sbb
jne
cmc
neg
repz
sahf
cli
lock
jae
mov
mov
jb
adc
push
xor
dec
xchg
loope
xchg
add
xor
movsl
call
mov
push
adc
repz
sub
jg
lcall
push
stos
das
jns
mov
jecxz
inc
inc
mov
xchg
and
pop
mov
add
scas
pop
stos
sbb
inc
inc
xchg
shl
lods
dec
mov
mov
test
rorl
in
and
mov
push
icebp
add
insl
cmp
xlat
ret
rorl
arpl
popa
iret
xchg
pop
mov
in
sub
sahf
cli
fndisi(8087
lret
sub
icebp
jp
mov
mov
push
jl
and
sbb
fdivr
or
cmpb
stc
js
xchg
and
int
sub
sub
or
pushf
outsb
das
xlat
add
insb
je
hlt
in
insl
leave
scas
and
je
xchg
mov
btl
pop
cmpsb
popl
imul
cmpsl
loopne
xor
jne
jb
jae
nop
xor
xchg
sbb
sub
pusha
xor
mov
stos
adc
inc
fnstenv
sahf
or
stc
loop
xlat
push
lods
or
push
add
js
cmpl
pop
and
sbb
lahf
xchg
clc
fadds
cltd
shlb
fstps
rclb
addb
insb
lret
pop
jp
xor
add
sub
stos
fnstenv
jno
xor
cwtl
mov
inc
leave
mov
jo
insl
pusha
jl
inc
in
fisubl
mov
imulb
lods
mov
fnstsw
dec
push
das
fistps
lret
fadds
jl
push
pusha
xor
shrl
fmul
pop
inc
cmpb
aas
rorl
adc
xor
mov
inc
dec
stos
out
xlat
movl
push
fs
and
icebp
cmp
push
xlat
movsb
inc
pop
sbb
sbb
lds
aas
hlt
push
pop
sbb
cmp
popa
adc
sbb
pop
mov
add
inc
mov
xchg
mov
xchg
aas
inc
xor
mov
mov
xor
bound
cs
or
sbb
xor
sbb
cmp
cli
mov
jo
mov
subb
rolb
loope
gs
push
outsl
fstpl
jbe
aas
push
cmc
mov
enter
sbb
sbb
xor
ljmp
nop
sbb
adc
sub
pop
fisubl
cmp
scas
push
adc
fstl
push
je
loope
icebp
out
push
dec
mov
mov
lds
lcall
in
lahf
xchg
dec
xchg
je
testb
add
outsl
xchg
in
movsb
inc
adc
jb
lret
xor
int
xchg
adc
add
add
stc
push
dec
sbb
negl
add
lods
sub
and
dec
in
mov
xchg
test
push
rcll
pusha
loop
jnp
adc
aas
sbb
pop
ljmp
xchg
mov
or
and
dec
jnp
add
pop
sbb
gs
push
adcb
adc
sbb
insb
arpl
cwtl
and
cwtl
sub
movsb
bound
in
mov
sub
jae
into
fsubp
out
push
repz
mov
mov
bnd
adc
xor
pusha
test
ds
loopne
lret
xlat
outsb
movsl
xor
aas
cld
mov
test
lds
adc
cld
sbb
push
mov
popa
ret
leave
xor
stos
imul
sub
inc
enter
mov
mov
shrb
leave
jo
ljmp
mov
mov
into
bound
data16
jmp
leave
mov
fstp
mov
cmpsb
add
ja
lock
loop
notl
inc
sbb
xchg
sbb
fadd
sti
out
pop
std
xchg
cltd
gs
rcll
pop
out
cmp
in
dec
adc
push
xchg
lock
mov
aaa
xchg
sub
out
inc
sbb
dec
rorb
cwtl
test
fildll
sbb
imul
lret
shll
inc
dec
out
ja
ficomps
seto
inc
xchg
pop
in
jge
xlat
inc
xchg
loopne
cmp
call
fcom
pop
shll
aaa
test
cs
imul
ljmp
sub
mov
sbb
popf
das
aaa
sub
xor
jbe
clc
xchg
outsl
or
or
stos
les
mov
add
loope
pusha
jae
dec
and
mov
jecxz
cmp
popf
in
jo
add
or
shll
dec
mov
loop
xchg
jno
mov
scas
and
int
rorb
add
xor
clc
cmpsl
mov
or
fdivr
pop
shll
inc
lcall
adc
adc
aam
adcl
lods
not
mov
or
in
push
adc
sub
inc
stc
xchg
lcall
xor
jbe
pop
decb
jecxz
data16
lods
pop
leave
or
sub
dec
mulb
fwait
negb
cwtl
jl
add
xor
sbb
outsb
inc
out
adc
fistpl
push
std
addr16
hlt
push
rol
dec
adc
bound
mov
das
popf
xchg
fimuls
icebp
ja
pop
inc
pop
mov
xchg
and
mov
push
ret
jp
mov
call
lea
jp
call
mov
ret
je
and
lret
sbb
mov
jge
cmp
push
sub
in
daa
mov
into
or
push
mov
mov
dec
clc
and
sbb
push
push
mov
xchg
cs
outsl
jb
addr16
push
mov
ret
sahf
mov
lods
mov
test
cmpsl
sbb
leave
mov
daa
ret
loope
aad
push
cwtl
cmp
pop
xchg
cli
xor
ljmp
xchg
push
stc
ja
pop
jmp
cmc
or
adc
rcrb
lods
pop
aaa
mov
adc
test
ja
cs
xor
and
pop
push
lods
popf
jecxz
mov
push
xchg
aad
add
jno
iret
xor
hlt
mov
idiv
sub
or
mov
jne
cmp
adc
mov
or
sar
xchg
ljmp
aad
inc
cmpsl
fdivr
mov
jg
cwtl
js
push
jmp
dec
lret
scas
in
out
adc
mov
mov
inc
sub
jg
int3
sub
in
cmp
ss
and
pushf
jecxz
mov
daa
or
lahf
iret
sbb
lret
xchg
mov
dec
shlb
pop
jl
ds
rol
sub
aad
popf
xor
data16
jb
mov
clc
dec
jmp
addr16
cli
inc
addr16
jns
call
pminub
js
push
outsb
push
mov
mov
adc
imul
out
insb
adc
std
jp
adc
repz
sbb
stos
jns
xchg
int3
lcall
inc
sub
push
stos
jmp
sub
daa
aas
loope
sbb
test
sbb
hlt
sub
mov
jo
inc
icebp
rcrl
movsb
enter
jle
cmpsb
cmp
loope
aas
dec
jmp
mov
pop
lea
sub
mov
cmc
xchg
push
adc
lock
or
je
jne
shlb
pop
pop
xchg
and
fsts
mov
mov
jmp
stos
lods
movsl
add
scas
rcll
ljmp
xchg
popf
cmp
push
cmp
movsb
sbb
mov
cld
push
rcr
rcrb
daa
outsl
xor
jge
es
mov
fadds
dec
sbb
fnstsw
push
pop
cwtl
movsl
nop
lock
fimuls
cmpsl
push
lea
fbstp
ja
xchg
imul
mov
outsb
jno
cmp
mov
add
cmpsb
dec
adc
outsb
enter
ficomps
pop
sub
sub
jecxz
idivb
cmp
js
sub
fwait
enter
ss
hlt
int
dec
push
mov
popl
pop
xchg
std
rcrb
and
mov
sub
sarl
jmp
cmpsb
push
jae
jge
jo
imul
push
sbb
test
ds
jo
fsubrs
sbb
mov
sub
repnz
std
outsb
xor
pop
cmc
dec
ss
sub
dec
cli
imulb
rcrb
ret
scas
jecxz
mov
jecxz
cs
lea
jmp
imul
rorl
dec
push
pop
add
fsubp
dec
mov
ss
push
ds
mov
mov
outsb
fimuls
xlat
adc
add
jge
mov
mov
test
mov
fimull
fcmovnu
dec
mov
pop
jb
mov
mov
mov
push
push
fstpl
mov
mov
cmp
xor
aas
sub
in
insb
lahf
inc
push
call
inc
dec
je
cwtl
push
jp
pop
sub
inc
das
cmp
sub
and
mov
or
gs
pop
add
xor
pop
int3
je
imul
inc
mov
mov
ret
xchg
pop
daa
ds
mov
cli
sub
aaa
stos
data16
insl
add
lret
stc
mov
divl
test
test
adc
jae
pop
jl
dec
bound
adc
jbe
bound
movsl
inc
in
in
jb
rcrl
aad
push
aaa
movsb
jnp
pop
and
sub
loopne
push
jno
leave
cmc
fwait
add
pop
sbb
ljmp
sbb
xchg
jno
test
mov
cmp
mov
faddl
dec
jle
popa
pusha
jo
mov
mov
xchg
xor
mov
pop
xchg
mov
mov
add
jns
rcll
repnz
sarb
lea
add
and
push
sub
xchg
sbb
push
daa
fldenv
mov
mov
sahf
push
mov
xchg
mov
pop
in
ds
clc
pusha
ret
sahf
mov
jb
rolb
jae
lcall
cmc
loopne
addr16
lret
dec
rolb
out
add
inc
mov
mov
xchg
add
sbb
dec
jns
fucomp
std
outsb
cmp
cmc
daa
xor
and
rcr
cwtl
rcl
add
aas
push
scas
scas
dec
fcomps
jmp
dec
push
lcall
adc
lcall
ret
out
cmc
push
push
dec
sar
or
dec
sub
push
jbe
mov
xor
dec
and
aam
push
add
pop
lret
add
jbe
inc
mov
fcomip
cmpsb
popl
sub
shl
sbb
sbb
repnz
cmp
push
and
inc
xor
repnz
int
loop
mov
inc
decb
subl
adc
in
ja
repz
int
loope
es
stc
fwait
shl
mov
roll
or
out
adc
xor
or
fidivl
mov
lea
cmpsb
and
rcr
ljmp
xchg
adc
cmp
in
out
xchg
imul
jne
sub
sarb
dec
sti
jbe
pusha
pop
insb
adc
fs
mov
or
xor
inc
pop
sti
cmpsb
xorl
mov
mov
dec
pop
mov
or
shlb
sahf
xchg
cmp
and
jnp
mov
jg
aas
clc
cmc
fnsave
ss
pop
mov
inc
sbb
mov
aam
insl
pop
xchg
out
cmpsb
mov
or
insl
jns
sahf
test
and
fwait
pop
ja
jl
jae
dec
adc
inc
mov
inc
fldcw
scas
add
xlat
mov
xchg
out
adc
adc
daa
inc
out
cwtl
inc
fimuls
neg
insb
adc
pop
mov
outsl
and
sar
or
adc
fidivs
mov
pop
push
clc
push
or
xor
fs
add
pop
pop
and
in
push
lea
and
mov
pop
hlt
add
gs
pushf
mov
cmpsl
add
mov
fdivrs
mov
jns
fwait
jle
add
xlat
jp
adc
push
gs
xor
jecxz
pusha
jno
add
cmpsb
and
lods
pop
repz
jg
xchg
mov
in
and
sub
and
mov
or
out
ss
call
mov
push
xor
pop
rcll
imul
cli
add
push
adc
in
push
sbb
lahf
fisubrl
cld
aam
in
cmc
ljmp
test
ret
pop
mov
add
jnp
mov
in
mov
xor
test
cmpsl
jne
sub
pop
rorb
mov
insb
fbstp
bound
inc
cmp
sbb
mov
inc
or
loopne
cmp
sub
aad
lret
or
sar
mov
mov
ret
cmp
xchg
roll
subl
ret
imul
test
xchg
and
es
daa
sti
leave
lock
push
and
lea
fwait
adc
in
cmpsl
ljmp
rorb
roll
xchg
test
sub
mov
orb
xor
dec
dec
insl
mov
inc
jp
inc
lock
insl
bound
jo
in
adc
repz
mov
add
xor
ljmp
mov
push
add
mov
add
out
insb
dec
jne
cmc
popf
test
aaa
mov
push
loopne
push
jmp
cmpsb
aad
push
movsl
lcall
push
fiaddl
xlat
sti
int3
mov
std
in
and
mov
js
inc
stc
pop
sbb
mov
add
out
mov
data16
cmpsb
shll
pushl
push
bound
je
dec
sbb
pop
inc
or
jp
sub
push
lock
push
bound
daa
je
lds
mov
stos
cld
pusha
inc
and
in
sahf
cmp
scas
leave
cmp
add
mov
cmpsl
cli
fildll
in
pop
xchg
push
lods
call
std
jno
xchg
push
pusha
mov
clc
in
mov
xor
bound
jno
pop
pop
mov
lret
std
loope
xchg
out
adc
pop
fstpt
out
and
cmpsb
fdivrp
adc
inc
push
and
push
xchg
or
les
and
andb
jg
cli
xchg
xchg
and
rorb
andl
push
jg
push
pop
push
mov
sti
lock
sbb
jp
clc
dec
rcrb
add
cli
sub
test
movsb
jl
lods
inc
add
mov
xchg
stos
or
loope
and
inc
cld
in
cmp
mov
fistps
cmpl
or
cmpsl
xchg
out
popa
mov
jne
ret
cmpsb
or
aas
adc
in
jg
pop
add
mov
inc
cmpsl
scas
mov
mov
addb
lahf
loopne
ret
and
ds
add
stos
inc
sbb
sahf
mov
push
aas
and
out
xor
adc
test
fcompl
lret
mov
testl
adc
les
bound
adc
inc
lret
or
and
es
and
push
imul
scas
in
inc
lods
popf
inc
sub
push
sub
int
add
repz
std
mov
xchg
lcall
test
aas
pushf
xchg
jge
ds
gs
icebp
mov
xor
jp
roll
push
bound
outsb
stc
mov
jg
adc
inc
outsl
sarb
jnp
sbb
cltd
adc
push
pop
test
roll
jnp
addb
and
or
mov
pusha
test
xchg
iret
mov
mov
popa
loop
lock
xor
inc
rcrl
lods
fistl
ljmp
out
in
mov
fsts
add
sub
xchg
test
dec
arpl
push
sub
mov
pop
push
lds
call
pop
adc
pop
fldl
jno
das
out
inc
iret
jnp
add
dec
test
roll
mov
jecxz
sbb
cmp
fidivl
cmp
xchg
cmc
fs
inc
add
dec
cmp
or
pop
fs
rcrb
sbb
xchg
xor
test
or
push
mov
hlt
loopne
fdivrl
add
and
pop
mov
sbb
imul
jecxz
test
mov
jg
mov
fistpll
dec
divb
xor
inc
jp
stos
xchg
mov
and
xchg
inc
xlat
mov
popf
imul
dec
rcr
dec
push
cmpsb
push
mov
cs
cmp
mov
pushf
setae
pop
js
or
mov
xchg
adc
xchg
jae
sbb
pop
sub
xchg
sub
fwait
adc
xchg
sub
xchg
dec
stc
mov
test
jmp
stos
jb
rol
leave
cmp
ljmp
add
insb
popf
sub
push
dec
mov
enter
cld
fsubrs
into
test
sbb
lcall
shrb
mov
or
gs
aas
or
push
test
adc
pop
adcb
movsb
lods
lcall
jg
mov
ds
mov
into
int3
call
adc
sbb
lea
inc
add
loope
dec
xchg
xor
movsl
dec
mov
divb
sub
mov
push
or
testb
and
in
sbb
add
fadds
rolb
loope
push
mov
mov
inc
out
in
pop
push
and
leave
mov
fidivrl
stos
lods
mov
mov
and
mov
cld
pop
stos
add
jle
pop
cmpsb
outsl
loop
test
mov
pmuludq
or
data16
cmpsl
mov
push
aas
pop
and
push
das
jno
cmp
loope
scas
lcall
nop
call
sbb
xlat
dec
popf
sarb
jb
push
testl
mov
scas
inc
jno
frstor
xor
shlb
call
repnz
rclb
cwtl
fwait
sub
movsl
test
pusha
xor
pop
arpl
out
inc
xor
mov
mov
or
fwait
ret
xlat
lods
push
mov
mov
mov
add
sarl
or
sahf
xor
aam
xor
cld
xor
fs
out
mov
popa
dec
or
jbe
xor
mov
adc
es
pop
gs
cmp
xchg
std
shll
cmp
ds
push
jbe
jecxz
xchg
outsl
mov
out
mov
cmc
shlb
xlat
lret
sbb
dec
sub
pop
rorl
pop
mov
push
adc
sbb
cmpsl
cmpsb
aas
sbb
or
out
and
jle
bound
cmp
pop
jno
or
push
insl
gs
mov
sbb
dec
xchg
aas
cs
inc
pop
xorb
notb
push
mov
adc
mov
scas
in
xchg
std
inc
xlat
xor
hlt
imul
pop
dec
sbb
xchg
jns
cmpl
xchg
mov
dec
xchg
mov
in
push
push
cld
pushf
jae
das
lret
or
pop
ret
shl
sub
add
mov
inc
push
inc
inc
fimull
xchg
mov
mov
fidivs
fstl
je
xor
xchg
testl
cmpsl
jno
fisubrs
je
aas
add
loopne
mov
popf
jge
dec
call
iret
test
and
lret
xor
lret
mov
fcmovnbe
jl
inc
mov
sbb
mov
mov
ret
ret
sbb
sbb
dec
add
push
xor
shrb
push
cmc
int
decl
cmp
test
loopne
fistpll
cmp
int3
stos
adc
cltd
frstor
and
xchg
mov
ljmp
mov
lds
cmc
dec
stc
xchg
hlt
out
jne
pop
jns
dec
push
and
inc
test
into
pop
pop
xor
push
xchg
inc
lahf
sub
push
xchg
jae
xor
mov
cli
push
rolb
jbe
cmp
in
xlat
int3
mov
cld
in
movsl
dec
fists
cld
mov
sbb
es
push
jl
fmulp
out
popa
mov
adc
notb
mov
push
sub
lea
aam
jecxz
xchg
add
dec
loope
in
pop
jo
inc
push
jecxz
xchg
arpl
pop
inc
sti
or
std
push
enter
and
je
mov
inc
outsb
pop
sahf
arpl
rcrl
addb
mov
cld
dec
add
movsl
ja
jae
adc
into
push
adc
pop
fbstp
pop
cltd
mov
pop
ja
imul
mov
xor
and
add
ror
sbb
mov
or
addr16
fidivs
bound
lods
pop
add
stos
mov
cmp
sti
cmp
enter
push
lcall
xchg
stos
sti
or
xchg
push
jno
cmp
jne
fldl
lret
mov
sub
fstcw
ret
fstl
stc
mov
push
sahf
mov
leave
lahf
das
mov
xchg
shlb
out
int3
addb
cld
sub
xchg
jp
pop
mov
or
or
iret
dec
push
inc
lret
aam
in
mov
aas
scas
sbb
pop
push
loopne
xchg
sub
sub
inc
jp
mov
test
aas
dec
sbb
pop
sub
xchg
inc
pushf
rcrl
hlt
pop
jl
mov
mov
pop
clc
popf
push
mov
es
stc
dec
xorl
pop
aam
pop
xchg
cmp
das
cmc
inc
lea
pop
xchg
lcall
pop
mov
jmp
sbb
fsubrp
cld
fucomip
loope
pop
xor
mov
adc
outsl
fbstp
mov
dec
test
jle
enter
pop
mov
ds
loope
jge
std
xor
push
pop
test
inc
lahf
ret
mov
dec
cmpsl
in
adc
add
add
sub
mov
cltd
jae
sbb
cmc
xchg
sub
and
arpl
sahf
into
scas
pop
movsl
cltd
scas
cmp
std
lret
movb
push
test
cmpsb
lock
int
ret
sbb
sub
push
inc
pushl
jbe
imul
jo
ss
inc
pop
sbb
or
test
push
mov
popa
push
dec
sbb
pop
cltd
icebp
iret
data16
and
lock
test
dec
outsb
pushf
mov
mov
cmpsl
clc
or
adc
and
jo
sub
roll
xchg
out
xor
mov
jge
dec
in
aam
mov
xchg
inc
xchg
push
mov
fdivrs
xor
or
add
inc
outsl
mov
imul
mov
pop
xor
mov
jl
sbb
lock
and
aaa
fisubl
stos
sbb
lahf
in
pop
negb
and
jl
rcl
push
iret
mov
mov
push
jae
push
and
or
mov
jecxz
mov
xor
xchg
or
mov
jp
cli
add
or
repz
fsubrl
cmpsl
imull
test
cli
mov
mov
sarb
fadds
cltd
jecxz
ljmp
or
xchg
aad
stos
fsubl
inc
cmp
mov
cmpsb
fisubrs
and
lahf
lods
cli
adc
loopne
xor
fistpll
scas
push
push
orl
and
xchg
imul
les
ja
flds
sub
out
ret
movsb
add
pop
cmp
mov
push
ja
jle
jb
nop
bound
cmp
sub
fldenv
jge
sbb
jb
movsb
test
nop
ja
inc
or
into
fwait
scas
jo
aad
in
pop
aas
lods
aad
mov
sbb
push
into
sbb
testl
dec
lock
xor
push
push
jecxz
cmp
jmp
ret
pop
sub
call
aaa
test
in
mov
push
shrl
movsb
dec
add
rolb
mov
les
dec
std
xchg
pop
add
sbb
cmp
int
dec
jno
sbb
lret
fcomps
fcoml
xor
sbb
cmp
ljmp
xchg
mov
xchg
clc
mov
pop
add
mov
and
into
xchg
and
add
arpl
sub
mov
xor
loop
cmp
out
xorl
in
cmp
nop
add
jnp
pop
test
cmp
scas
ja
mov
in
xor
lret
xchg
push
call
push
pop
insl
into
sbb
xchg
mov
mov
xor
cmp
lods
xchg
or
es
icebp
in
mov
jp
push
sbb
mov
xlat
cs
cmpsb
icebp
mov
mov
into
pop
push
gs
aam
jb
stc
sbb
xchg
lcall
aam
sub
sub
mov
test
mov
insl
les
dec
ret
hlt
pop
lock
mov
inc
pop
stos
pop
std
in
ret
or
lret
push
hlt
shrb
dec
or
inc
jecxz
jg
pop
cltd
push
in
ret
test
xor
or
sbb
pop
push
shl
arpl
sbb
inc
pop
stos
mov
sbb
pop
out
shrl
in
call
and
dec
add
dec
sub
shll
repnz
js
push
jmp
mov
jae
fisubrl
mov
sbb
cmp
xchg
cmc
inc
xchg
aad
sahf
int
ljmp
lock
jno
addb
inc
push
stos
cmp
pop
mov
int3
inc
ljmp
xchg
adc
lock
jnp
inc
lods
pushl
sub
cmpsl
lret
cli
jge
pop
jmp
jno
bound
add
stos
mov
call
cs
jmp
mov
inc
add
test
add
xor
mov
add
ret
or
sub
and
dec
leave
inc
pop
cmc
inc
int3
clc
aam
or
fwait
jne
cmpsb
js
mov
dec
cmp
lods
add
ret
pop
dec
jp
add
aad
or
dec
jmp
mov
xor
sub
outsb
xor
pop
xor
es
mov
mov
dec
add
sbb
inc
push
push
mov
mov
popf
mov
fists
push
jnp
int3
scas
sbb
cltd
std
pop
test
hlt
mulb
shll
push
push
jle
nop
cmpsl
dec
cmp
jecxz
lahf
push
cmpsl
cmp
pop
repz
xchg
fucomi
or
daa
in
iret
loopne
pop
out
sarl
or
jns
push
dec
push
insb
or
xchg
sub
pop
insb
test
mov
mov
xchg
sbb
out
loopne
adc
test
mov
lods
fimull
lods
in
push
lret
pshufw
fnstcw
in
hlt
jb
xchg
jge
flds
mov
fdiv
fsubr
jge
test
sahf
jae
insb
and
aaa
push
adcb
sub
addr16
push
sarl
dec
jnp
outsl
lods
xorb
inc
sub
scas
xchg
mov
or
pop
push
cltd
push
dec
rorl
in
popl
mov
out
push
movsb
inc
test
sbb
mov
dec
or
js
mov
jl
stos
adc
mov
lds
ds
cld
add
dec
aas
out
pop
popf
movsl
sbb
add
inc
sub
push
jg
outsl
mov
movl
dec
push
jl
dec
jb
mov
push
stos
cs
xor
adc
sarb
fisubs
pop
cmp
test
ret
dec
xlat
nop
cmp
fiaddl
mov
hlt
mov
cmp
sub
adc
add
push
cmp
aad
pop
inc
sub
push
mov
popa
cmp
or
mov
cmp
push
lods
jbe
clc
imul
aam
flds
int3
adc
add
stc
adc
test
fbstp
stos
nop
scas
cmpsl
pushf
pop
jl
cmc
adc
outsb
mov
mov
fcoms
cmp
or
push
cmpsl
mov
or
ds
mov
in
call
fimuls
adc
in
and
ret
cmp
adc
cmc
fsubr
imul
xor
pop
aad
mov
lret
sbbl
rcr
daa
nop
into
mov
mov
outsl
push
in
add
mov
iret
lret
js
pop
sub
in
out
hlt
lcall
pop
xchg
ja
xchg
pop
sub
dec
mov
and
enter
sahf
or
stc
fidivrl
inc
sbb
movsl
or
data16
orl
shl
stc
or
fbstp
mov
movsb
inc
ret
and
jg
inc
push
or
cltd
lds
mov
inc
aam
xor
cmc
das
fwait
adc
or
cmpsl
jp
push
icebp
and
sti
cmp
test
cmpsl
inc
pop
jno
scas
outsl
iret
add
sbb
and
rcrb
push
icebp
push
fldenv
pop
sahf
or
push
jmp
pusha
sarl
jbe
cmp
movsl
lea
clc
sarb
in
pop
xor
add
push
jne
mov
int3
push
lock
repnz
in
int
cmp
dec
xchg
jp
sbb
jno
inc
dec
xor
mov
leave
mov
xchg
pop
pop
daa
insl
xchg
mov
sbb
ljmp
or
mov
inc
test
int3
jae
mov
xchg
insb
loope
dec
jge
repz
lods
sub
loope
leave
mov
xchg
push
or
pop
jnp
or
add
outsl
xor
cs
popf
sbb
dec
lock
xor
push
ficoms
xor
addb
sti
mov
scas
jnp
pop
mov
push
ljmp
cmp
loop
daa
push
loopne
loop
gs
adc
iret
adc
repnz
mov
fsubrs
arpl
ret
mov
push
or
jnp
in
mov
inc
and
pop
pop
adc
movsb
mov
in
xchg
dec
mov
mov
mov
adcb
js
inc
sbb
lods
lret
inc
and
dec
push
cmc
mov
in
xchg
lcall
subb
sub
adc
int
in
dec
cmp
sbb
add
lods
jge
out
jnp
xchg
data16
lahf
inc
shll
insl
sub
into
mov
pop
adcl
xchg
lock
rorl
addb
sub
mov
xor
fisttps
xchg
test
ja
pop
jge
or
pop
ret
je
cld
sbb
pusha
cmp
push
xor
add
sarl
popf
sub
lods
pop
dec
jcxz
xchg
int
xchg
mov
xor
das
sub
shlb
negl
int
lods
popf
pop
les
dec
or
pop
adc
dec
cmp
cltd
aaa
and
jmp
cmp
dec
and
adc
mov
call
outsb
add
jecxz
sbb
pop
inc
outsl
push
and
loope
push
js
sbb
xchg
add
test
pusha
popf
adcb
inc
jo
adc
pushf
stc
xchg
inc
xor
rol
sub
test
mov
das
pop
in
enter
pusha
js
xor
test
or
pop
flds
cwtl
ds
scas
pop
cli
loop
in
pop
pop
ljmp
cwtl
jg
enter
cmp
bound
jmp
sbb
out
jp
imul
xchg
inc
jo
xor
mov
mov
fstp
cltd
scas
inc
push
jecxz
lret
rcl
jnp
mov
mov
sub
sbb
lahf
sbb
push
lret
sbb
stc
sahf
inc
or
sbb
xor
jae
pop
cwtl
je
xor
sbb
sbb
fld
and
or
cwtl
out
xchg
cmp
out
mov
aas
test
xchg
dec
outsb
or
or
sbb
in
cmc
in
cmp
xchg
aam
xorb
pop
pop
lret
lret
push
mov
mov
push
sub
ds
fsubl
movsb
pushf
xchg
sub
sahf
or
jno
stc
mov
jg
insb
je
inc
xchg
dec
or
pop
add
test
in
movsl
jle
xchg
mov
test
sbb
mov
leave
add
dec
mov
cltd
add
and
pop
lods
xor
mov
ja
add
shl
insb
sub
jno
stos
cmp
jmpw
icebp
or
int3
lods
xchg
into
data16
loop
repz
push
mov
pop
insb
and
aam
ja
arpl
dec
push
jnp
mov
test
arpl
mov
xlat
jmp
int3
push
js
in
fbstp
movsl
lock
call
xchg
ret
inc
test
adc
je
mov
shrl
sub
mov
test
leave
mov
cmp
push
push
in
rcll
and
cmp
adc
dec
xchg
rorb
in
jmp
je
stos
fisubrs
popf
cmp
push
lods
inc
push
push
lds
jbe
out
shrl
pop
sbb
movsl
jmp
xchg
mov
inc
xor
lea
push
int3
inc
mov
fwait
and
aam
scas
or
sub
in
adc
or
xchg
insl
jne,pt
xor
pop
scas
inc
push
xor
aas
inc
jo
cmp
lcall
jno
jp
xchg
stos
bnd
into
sbb
mov
xor
loope
rcl
or
xor
sbb
fdivrl
scas
je
aad
add
incb
fiadds
aas
ret
scas
hlt
in
jae
cli
pop
inc
jne
jbe
xorl
hlt
stos
pop
scas
xchg
dec
daa
mov
mov
pop
cmp
ja
push
dec
fs
push
call
pop
aaa
mov
cmc
mov
jp
lahf
popf
or
imul
pop
or
lods
cmp
push
notl
cwtl
in
aam
mov
loopne
xchg
ljmp
hlt
shrl
nop
push
inc
stc
loope
lahf
sub
mov
inc
insb
push
or
adc
pop
mov
inc
mov
pop
pop
sub
jno
fidivrl
mov
cmp
pop
jno
subb
out
flds
add
test
mov
mov
andl
adc
add
es
push
inc
outsl
jl
pop
jg
dec
pop
daa
add
ljmp
mov
and
inc
fidivrs
jmp
cmpsl
dec
and
jns
or
idivl
dec
add
and
adc
test
nop
mov
add
out
pop
shrb
das
pop
xlat
aam
js
std
imul
jl
sbb
dec
icebp
stos
ret
dec
add
outsb
mov
into
fisttps
mov
mov
add
scas
dec
sub
jnp
mov
adc
aas
xor
arpl
mov
jmp
lahf
in
xorb
scas
popa
and
loope
sub
dec
or
loope
cmpsb
push
cmp
cmp
pop
add
cli
cmp
bound
mov
push
push
repz
movsb
popf
jbe
jae
push
cmpsl
test
sahf
mov
jp
insl
cmp
jbe
and
jne
or
mov
dec
sub
mov
enter
adc
movnti
fistpl
ljmp
ret
xor
mov
jne
out
pop
sub
jne
aaa
jbe
xchg
jnp
mulb
aam
jb
cmc
mov
rcl
push
enter
aad
in
push
fnsave
enter
mov
lds
add
shll
mov
test
subb
insb
aam
cmc
inc
sti
jae
inc
pushw
add
mov
cmp
jmp
test
sub
pop
pop
data16
cmp
xchg
cltd
add
aam
or
inc
jns
lods
mov
push
xlat
inc
popa
in
mov
dec
in
dec
or
mov
push
inc
dec
jecxz
aaa
fimuls
ja
mov
mov
jle
cmp
jno
xlat
sbb
pop
sub
adcl
sbb
test
xor
jnp
das
in
int
inc
cmp
stos
mov
mov
js
jae
xorb
inc
lods
pextrw
cmp
push
add
stos
inc
fcmovnbe
ja
test
fsubl
movsb
inc
sahf
xchg
mov
in
scas
es
shll
in
pushf
cmpsl
xor
pop
jmp
mov
ljmp
jp
adc
jb
or
inc
fdivrp
cmpsb
loope
orl
inc
popa
sbb
jae
jns,pt
sbb
cld
pusha
pop
lods
lret
negb
push
sub
mov
mov
daa
xchg
gs
or
pop
and
lock
sbb
sti
andb
jno
adc
push
daa
sub
cltd
imul
loope
sbb
mov
adc
jle
push
fdiv
ret
lds
outsb
dec
lret
sub
adc
jno
push
cmpsb
jno
xor
sub
sub
aad
icebp
adc
cli
xor
std
or
xor
cmp
dec
repz
mov
sahf
ret
xchg
mov
or
and
dec
es
test
lds
or
mov
pop
repz
mov
movsl
idivb
int3
pop
cwtl
pop
lret
push
mov
testb
mov
cmp
mov
sub
sarl
loopne
adc
sub
cmpsl
enter
and
lea
inc
fcmovnbe
imul
inc
imul
mov
jae
mov
fxch
int
sbb
popl
iret
push
lcall
jmp
jb
xorl
and
push
das
jmp
jae
ja
out
sahf
imul
pop
mov
cmp
out
xor
and
or
jbe
pop
xor
sahf
xor
and
lock
xchg
idivb
stos
pop
popf
sbb
lock
adc
ret
add
negb
nop
test
mov
sahf
mov
xor
lods
xchg
sbb
mov
lret
mov
adcb
jecxz
adc
rorb
pop
aad
enter
cld
cmp
clc
out
clc
lret
fcompl
imul
pop
push
mov
incb
into
outsl
or
mov
xchg
imul
xchg
sub
inc
aad
push
shlb
jle
jl
dec
jno
sub
ret
add
repz
adc
ret
ret
push
pop
ss
jb
and
movsl
push
xlat
inc
sub
xchg
mov
ret
inc
cli
pushf
in
adcb
push
or
mov
jns
adc
xchg
sbb
push
add
jl
mov
sub
push
shlb
sbb
push
sub
into
in
mov
fwait
and
fwait
das
ror
xor
les
pop
push
testl
cmp
movsb
fisubrl
cwtl
or
fisubrl
xchg
add
add
pop
jb
insb
xchg
ds
mov
and
xor
rolb
outsl
and
test
add
movsl
aad
aam
fwait
aad
sub
xor
fsubrl
adc
aas
mov
dec
in
xchg
std
imul
sbb
fisttpl
or
ret
jnp
out
test
sub
stc
or
shll
push
es
orl
inc
loope
xor
push
aas
inc
inc
add
mov
adc
fisubrs
mov
cmp
push
pop
loop
pusha
sbb
pop
ljmp
and
in
xchg
add
loopne
mov
loop
aam
test
xor
es
mov
fnstsw
mov
xor
fwait
lods
mov
sub
jle
jmp
lods
inc
es
jge
in
sub
mov
stos
xor
xchg
push
addr16
jp
pop
in
dec
mov
pusha
add
mov
mov
scas
jo
leave
cs
adc
or
scas
cli
xchg
repz
in
push
pop
or
jne
cli
sbb
int3
jo
dec
in
cmpsl
mov
pop
inc
dec
jmp
or
xor
push
aaa
dec
cli
dec
push
xor
pop
arpl
ss
filds
pop
and
lods
jge
xlat
gs
jno
std
xlat
out
jno
popf
rcrb
out
sbb
xchg
push
aaa
int3
leave
mov
dec
inc
pop
shlb
insl
xlat
sbb
shr
loope
cltd
sbb
jmp
push
fadds
mov
rorl
dec
mov
mov
int
out
ret
pop
idiv
or
test
fs
in
jae
sbb
out
and
insb
lcall
and
rcr
jmp
xor
sbb
cmp
mov
rcl
or
test
mov
inc
jnp
jo
stos
jno
cmp
push
xchg
sub
mov
jp
or
jge
adcl
xor
pop
mov
fsubrl
repnz
add
lds
orb
inc
mov
int3
imul
jge
mov
inc
mov
mov
dec
pop
push
adc
movsb
cltd
jg
mov
hlt
sbb
movsl
loopne
imul
push
jae
jo
or
jo
and
outsl
xor
push
sub
loopne,pn
push
outsl
sbb
mov
inc
and
adc
ret
cmc
adc
rol
aaa
dec
insb
das
jo
cmp
cmp
sbb
mov
test
dec
sbb
in
adc
fucomip
dec
pop
sti
lret
out
push
mov
push
imulb
dec
cmc
gs
dec
pop
scas
movb
loopne
fstl
fildl
data16
mov
xlat
adc
jae
pop
orb
stc
jecxz
jo
ds
fadds
cmp
add
outsl
sub
sbb
arpl
dec
cmc
and
pop
push
loopne
ret
and
addb
sbb
nop
xor
jge
lea
xor
fwait
sbb
clc
mov
inc
bound
adcl
hlt
test
ret
jno
mov
outsl
adc
cwtl
enter
push
jno
jae
adc
cmp
nop
out
ss
jns
dec
dec
adc
lods
jecxz
hlt
icebp
shlb
xchg
push
mov
outsl
mov
ja
sbb
or
dec
mov
cmp
lcall
outsb
stc
jle
inc
push
push
inc
pop
lret
ror
sti
sub
sbb
jecxz
push
decb
stos
sti
mov
jg
pusha
scas
rorb
dec
pushf
mov
les
pop
mov
pop
test
jmp
jns
xchg
cwtl
dec
mov
insl
lret
fsubrp
pop
jae
repnz
stos
stos
hlt
mov
xchg
movsl
notb
xchg
xchg
or
cmpsb
mov
idivl
ret
xchg
outsb
sbb
push
imul
stos
jecxz
in
mov
xchg
movsb
call
aaa
fs
xchg
ljmp
fcmove
jno
int
sub
or
or
pusha
jno
mov
cld
add
inc
pop
mov
mov
inc
mov
ret
leave
sbb
ja
cmpsl
push
repz
jne
jne
sub
mov
jg
jae
clc
mov
jne
push
icebp
sbb
fdecstp
cs
repz
insl
fists
push
ja
xor
inc
mov
clc
cwtl
leave
pop
cmc
mov
add
sbb
xor
add
mov
bound
mov
test
mov
fstpl
ret
or
sbb
push
lds
mov
cmp
ljmp
loopne
cmp
pop
nop
cld
dec
cli
std
xor
cmp
dec
mov
icebp
jmp
and
lods
mov
repz
sub
ror
mov
xor
ss
data16
clc
enter
xor
iret
xchg
mov
jbe
fnsave
mov
scas
xor
xor
cltd
xor
jmp
sbb
jne
sub
fwait
test
jae
push
mov
sbb
pusha
mov
sub
jmp
mov
push
cld
xchg
sub
mov
xchg
mov
test
loopne
repnz
sub
lock
mov
mov
xor
and
push
or
fprem1
add
add
sbb
jle
pop
popa
xchg
jmp
xchg
mov
xchg
mov
leave
in
push
inc
fcmovne
mov
dec
inc
mov
movaps
dec
or
jae
jl
adcb
dec
lret
push
aad
or
mov
popa
xchg
push
mov
cmpsb
clc
cmp
jno
xchg
cld
mov
or
add
push
or
or
out
mul
ljmp
lods
sti
ds
push
or
jo
xlat
cmp
jl
mov
imul
cmc
ss
test
lcall
ret
cmp
inc
mov
ljmp
ljmp
mov
adc
fsubl
addr16
iret
arpl
mov
mov
pop
popa
stc
icebp
jl
jne
mov
sahf
out
pop
jae
lret
mov
mov
inc
adc
divl
cmc
add
sti
inc
dec
loopne
inc
jo
xchg
stc
mov
leave
fistpll
mov
scas
inc
mov
aam
lcall
sbb
xor
mov
insl
fnsave
mull
pop
dec
mov
or
mov
mov
les
push
lahf
mov
repz
xchg
scas
jne
sub
mov
loopne
xor
sbb
scas
inc
xchg
repnz
push
scas
cli
mov
clc
jp
mov
popa
outsl
out
clc
sub
int
mov
cli
and
ret
dec
popa
jae
cwtl
rorb
mov
push
cmpsl
inc
and
cltd
inc
push
rclb
add
push
cmc
jnp
in
lret
je
pop
aam
out
pop
mov
xchg
test
sub
loop
repnz
outsb
cmc
pop
xchg
and
jecxz
shlb
pushf
in
int
add
in
pop
cmp
cmp
pop
fsubs
rcll
loop
shl
xchg
adcl
rclb
pusha
cs
sub
jae
dec
sbb
sbb
sub
jle
into
or
test
sbb
inc
pusha
jge
xchg
sbb
cmp
dec
push
cmp
lods
test
push
adc
lods
xor
imul
push
imul
loope
cmp
push
or
movsb
jno
cli
inc
dec
or
or
gs
sbb
adc
and
xchg
add
xor
adc
push
mov
aaa
or
call
in
pusha
jns
push
leave
add
pushw
cli
jp
lods
inc
stc
and
push
push
daa
movsb
jae
jl
rolb
sub
add
insb
lds
mov
cs
testl
inc
out
push
mov
loope
jg
xchg
jo
inc
test
stos
fisttps
and
mov
and
shll
lret
sub
cmpsl
push
clc
xchg
xchg
cmp
and
fcoml
or
inc
addr16
cltd
test
rol
in
loop
xor
aam
mov
sbb
loopne
or
outsb
mov
xor
xor
and
mov
xor
jae
mov
or
pop
adc
push
xor
inc
or
shl
jg
leave
cltd
es
sub
pop
sbb
aam
push
jecxz
inc
dec
cmpsl
inc
xchg
or
daa
in
iret
lods
icebp
test
inc
xor
bound
mov
mov
xor
ljmp
leave
scas
xchg
fiaddl
or
jmp
cld
aam
cwtl
insl
cli
ljmp
int
add
cmpsb
mov
add
sti
lds
jae
das
adc
xchg
movsb
outsb
or
jo
fimull
aad
xchg
inc
cld
aad
sbbl
mov
pop
jno
add
dec
ds
adc
fwait
push
fisttpll
stos
insb
inc
jae
jg
test
jo
into
aaa
and
push
xor
pusha
dec
lcall
mov
sbbb
push
je
fadds
sar
jae
sahf
jbe
or
repnz
fwait
lcall
inc
imul
outsb
sbb
inc
mov
cmpsb
mov
pusha
jg
inc
push
sti
jl
jb
jle
mov
xchg
cmp
mov
dec
out
movsb
jle
dec
ds
add
clc
scas
sti
psubd
sarb
xchg
dec
jno
bound
push
imul
xor
sahf
inc
into
inc
pop
inc
xchg
cmp
push
sbb
mov
pop
sbb
or
xlat
push
xchg
jl
jp
pop
jge
inc
jp
dec
and
cmp
insb
dec
rcl
std
mov
fisubrs
add
pusha
rcrl
movsb
sbb
pop
inc
clc
jmp
cmc
push
loopne
push
or
cmp
xor
ret
leave
dec
ds
jb
lea
xlat
fs
sti
fistps
push
jne
mov
mov
loopne
cmpl
daa
mov
data16
xlat
or
jb
test
in
jle
shl
xlat
push
jno
test
lahf
filds
outsb
sub
pop
mov
xchg
test
call
mov
sti
les
rcll
mov
in
and
jp
sti
popa
inc
mov
js
repz
outsb
arpl
mov
les
xchg
mov
or
mov
cmc
cmpsb
insb
inc
inc
fnsave
cmpsb
negl
xchg
cmp
or
cld
inc
sub
sbb
notl
cs
insb
insb
jl
inc
ret
loope
sbb
cli
adc
mov
repnz
mov
push
xchg
or
pop
lds
dec
mov
or
data16
dec
inc
das
in
jl
sub
mov
adc
xchg
jae
lods
dec
and
outsb
push
enter
fs
jo
gs
test
cs
inc
icebp
in
mov
shr
mov
fisubrl
pop
in
push
fidivrl
push
mov
pop
push
xchg
popf
pop
int
ret
imul
mov
outsb
mov
loopne
add
mov
jno
dec
mov
es
dec
cvtpi2ps
test
push
pushf
int3
clc
lock
leave
xor
sarb
sbb
adc
mov
push
xlat
dec
adc
ja
mov
jle
dec
lock
push
imul
fstps
aad
mov
dec
dec
rcrl
and
push
outsl
fstpt
sbb
rol
stc
lret
mov
inc
das
xchg
cs
sub
sub
cmp
add
adc
pop
in
jb
sbb
jmp
push
add
mov
scas
inc
and
sarb
les
in
ret
test
lret
push
cltd
pop
cwtl
push
and
repz
mov
push
adc
cmc
and
lods
push
lret
popf
cmpsl
fiadds
fwait
pop
sbb
xor
dec
pop
xor
pop
popa
pushf
sub
stos
shlb
lods
push
pusha
and
dec
xchg
in
push
insl
repnz
mov
push
test
push
loopne
or
js
aam
inc
mov
push
bound
call
pop
in
cmp
roll
or
xchg
mov
jg
mov
ljmp
jle
inc
into
jl
out
sub
pop
mov
lcall
cmc
adc
cwtl
jno
push
jne
in
ds
jnp
fbld
sub
mov
test
mov
repnz
xchg
pop
sbb
rclb
lea
lods
rolb
repnz
ret
ja
adc
mov
jp
add
inc
loop
fwait
mov
sbb
cwtl
mov
cmp
jne
mov
push
es
out
mov
xor
sbb
insl
repz
hlt
adc
lea
pop
inc
dec
mov
outsl
xchg
insl
ds
aad
popa
xor
pop
dec
int
push
dec
ds
in
sbb
pop
xchg
aam
and
sbb
push
mov
add
scas
or
dec
aas
out
test
add
inc
hlt
jno
and
push
jp
ret
sub
pop
lahf
mov
jo
or
xor
push
mov
mov
rcrl
dec
outsb
jo
ficomps
jmp
test
push
daa
pushf
lret
addr16
fcmovnbe
and
sbb
insb
mov
out
dec
cmpsl
mov
dec
and
cltd
sbb
mov
mov
or
shufps
mov
cmp
inc
xor
cltd
leave
jo
lcall
jbe
jecxz
jmp
pop
add
stc
mov
enter
mov
cs
imul
adc
fistl
pop
mov
aas
add
arpl
filds
test
dec
cmpsl
lret
adc
sbb
cmp
mov
and
shrl
xchg
aad
pop
sub
push
push
lahf
xchg
cmp
out
int
or
into
add
inc
outsl
loop
stos
and
jmp
sub
cmp
ret
cltd
pushf
cmpl
dec
and
leave
push
push
insl
jbe
cmp
cmp
imul
dec
sti
scas
dec
adc
adc
sbb
xchg
outsl
sub
sub
xchg
jne
ret
inc
aas
test
pop
mov
mov
icebp
int
mov
xchg
movsb
loop
sub
xor
add
mov
shlb
in
push
cmp
pop
test
rolb
les
and
divl
cmp
adc
clc
arpl
sti
jno
mov
dec
mov
xor
cld
orl
sbb
mov
xchg
add
in
pop
sub
aaa
mov
test
dec
and
and
repz
out
enter
xor
hlt
inc
scas
xor
xchg
es
js
add
sub
push
sub
add
out
and
in
stos
add
add
jmp
xor
outsl
out
ja
loopne
std
mov
adc
adc
inc
inc
sub
fwait
push
ret
fistpl
in
pop
and
xchg
insb
push
mov
pop
cs
xchg
cmp
imul
xchg
call
movsb
clc
pop
lret
pusha
nop
mov
sub
mov
add
aad
dec
pop
sahf
xlat
inc
mov
rcl
jle
push
cmp
pop
push
mov
out
xchg
xchg
movsl
push
fstl
nop
push
jbe
rcl
cmp
aad
into
in
aaa
mov
arpl
ret
in
lods
scas
in
or
je
jae
arpl
inc
and
jne
fs
dec
fs
mov
mov
aaa
les
insb
sbb
insb
mov
rol
cmpsb
mov
cli
loope
test
mov
les
jae
dec
cmp
daa
sbb
sbb
xor
xor
push
daa
pop
rorb
lods
dec
cmp
in
push
jne
lea
ret
mov
pushf
jg
inc
pop
loope
popa
and
jb
or
pop
fstps
in
jecxz
push
mov
repz
leave
mov
cmp
es
lods
mov
adc
and
xchg
stc
push
mov
ds
rorb
inc
sbb
aas
loopne
inc
cmp
add
jmp
fidivrl
inc
push
addr16
sbb
push
lahf
rolb
ret
push
insb
mov
repz
les
imul
sbb
mov
scas
hlt
adc
and
ret
in
push
fcoml
mov
mov
or
repnz
pop
push
inc
cmp
out
aaa
roll
into
sub
mov
shrb
das
int
mov
sub
xchg
fildll
and
in
jp
pop
xchg
or
or
xor
std
jle
pop
jns
ds
fdivs
pop
dec
lock
sti
lods
or
icebp
clc
adcb
sahf
mov
and
xchg
cmp
fsubl
xor
jmp
lret
outsl
push
push
movsb
sahf
sbb
inc
mov
inc
and
cmp
ljmp
mov
jecxz
lret
std
mov
inc
ss
outsl
rcrl
incl
std
dec
and
cmc
xor
add
or
rorl
cmp
cmp
js
jns
icebp
std
mov
push
data16
out
movsl
jmp
xor
or
shl
and
dec
cmp
pop
js
lds
pusha
out
or
or
negb
aas
imul
shl
data16
orl
mov
jno
cltd
push
cmp
add
push
dec
adc
pop
sub
mov
in
adc
cmp
scas
repz
cmp
insl
daa
mov
repz
mov
lcall
push
hlt
sbb
shll
jle
fs
jmp
gs
cmp
jge
pushl
dec
xlat
sarb
movsl
pushf
xchg
cs
inc
std
dec
das
aam
das
or
cwtl
sub
jne
adc
xchg
push
shrl
insb
mov
out
and
iret
loope
xchg
cli
push
enter
hlt
mov
or
jns
or
lds
push
mov
ja
xchg
jbe
sbb
mov
into
bound
nop
sbb
cmp
imul
sti
ja
rcrb
adc
fwait
in
push
iret
jne
jne
add
dec
frstor
and
cltd
movsb
dec
aaa
xchg
sub
adc
xchg
test
inc
and
mov
in
mov
fwait
test
xchg
dec
add
pop
and
fwait
push
ret
dec
pushl
out
aas
inc
test
lret
fistl
xor
sub
mov
mov
sar
decb
dec
cmp
cs
xchg
push
xchg
and
mov
jbe
test
lds
outsb
and
mulb
jns
aas
orl
inc
bound
push
jg
dec
ret
enter
adc
pop
cmp
les
xchg
adc
test
cmp
pop
iret
and
mov
shrl
push
fndisi(8087
scas
stos
sahf
mov
cmc
mov
in
fistps
nop
sub
stos
jo
or
daa
or
ret
jg
out
or
cmpsb
or
push
ljmp
pusha
xor
std
sti
and
cld
outsl
push
stc
lds
fs
mov
vsqrtps
mov
loopne
jne
push
aam
add
shl
fcomps
das
xchg
adc
pop
mov
xchg
cmp
push
mov
dec
sub
cmp
lds
imul
cli
xrelease
mov
xchg
sahf
test
or
lret
push
sbb
ficompl
mov
and
dec
fs
rolb
inc
push
in
test
cmpsb
add
repnz
mov
push
sbbb
and
cmp
jae
fisubs
push
hlt
cmp
cld
xor
js
scas
lods
cmp
mov
mov
push
xchg
int
jp
or
lods
stc
jmp
push
outsb
es
shl
pop
add
xor
out
mov
adc
pop
inc
mov
adc
adc
xchg
or
push
sbb
loope
leave
sbb
aas
jo
ljmp
out
imul
sbbl
lcall
out
cs
jl
mov
rcrl
or
loope
inc
bound
lock
fwait
pop
pop
mov
pushf
mov
sbb
or
mov
enter
inc
sbb
stos
inc
push
pushf
sbb
out
dec
sbb
scas
in
out
popf
and
or
jge
arpl
and
push
and
ljmp
jno
sub
and
gs
xor
inc
jns
push
add
pop
mov
mov
imul
pop
push
fs
jmp
add
pushf
xchg
aam
xor
jg
mov
sbb
fdivs
loopne
insl
jnp
jg
test
sbb
mov
imul
pop
lret
imul
xor
adc
mov
xlat
pop
inc
cmp
aad
mov
in
or
fldt
fidivl
gs
ljmp
dec
fdivrp
push
idivl
or
repz
fs
xchg
aaa
mov
out
adc
push
or
add
mov
or
test
inc
loope
into
mov
fmul
sbb
and
les
xchg
add
add
std
sbb
fcomip
sbb
testl
shll
ficoml
repz
or
insl
xchg
out
pop
outsl
inc
std
fsubr
bound
xor
aad
daa
int3
lds
sub
xlat
sbb
jg
push
mov
pop
rol
adc
cwtl
and
in
cmc
icebp
in
fists
test
in
fdiv
jmp
adc
dec
loope
stos
es
mov
pushf
lret
inc
enter
popa
pop
insb
and
into
lods
shll
leave
aam
inc
lret
and
and
mov
push
push
xor
push
xchg
inc
out
mov
mov
mov
mov
add
out
jecxz
push
push
sub
aas
mov
in
pop
jp
jg
imul
aas
mov
lods
das
jns
pop
dec
sub
add
mov
mov
scas
lcall
adc
jb
xchg
mov
mov
insb
xor
pusha
pop
icebp
sub
mov
lcall
jle
inc
sbbl
pop
fstl
jno
cli
adc
test
pop
mov
xchg
xchg
repz
fs
aas
mov
inc
out
sahf
dec
dec
pop
mov
xchg
and
pop
ret
push
ret
mov
jle
loopne
ret
into
iret
lock
sub
and
outsl
stos
push
cwtl
sub
aam
sub
cmp
xchg
ret
in
stc
adc
jecxz
scas
sar
mov
xchg
out
inc
pop
or
mov
pop
jl
mov
mov
push
pop
bound
fdivrl
push
cld
adc
movsb
cmp
popa
jge
cli
cltd
inc
jne
inc
into
cmp
jne
sbb
push
jns
sub
arpl
add
xchg
in
mov
and
jecxz
cld
std
out
adcb
loopne
jmp
mov
sub
cltd
pop
sub
inc
fdivrl
aad
xchg
aas
insl
in
fldenv
outsl
push
sbb
jg
nop
jmp
cmc
sti
sub
and
adc
or
shl
mov
add
push
mov
out
dec
movsb
pop
sbbb
push
jle
mov
xlat
int3
xor
cmp
ss
shll
inc
fiaddl
xor
out
mov
jne
lcall
lds
test
mov
sbb
lret
fwait
adc
pop
or
add
pop
int3
sahf
cwtl
pusha
cmp
push
ror
pop
je
ret
push
rcrl
data16
or
jns
outsl
test
or
in
jbe
mov
test
and
cld
push
insl
xchg
clc
lret
cmp
cld
jnp
push
xorl
mov
mov
xchg
fiaddl
adc
pop
in
into
icebp
cmp
daa
cmc
rclb
xor
pop
sbb
and
out
dec
test
push
sbb
mov
jae
rorb
rol
andl
incb
pop
out
int3
xchg
arpl
jb
loop
cs
push
cmp
jecxz
popl
sarb
out
sub
inc
jg
xor
dec
stos
xor
rcrl
stos
inc
cmp
dec
xchg
xor
or
pop
push
jmp
push
sbb
and
and
nop
push
clc
push
xchg
jp
es
fistpl
rcrb
adc
std
sub
loop
aad
ljmp
fimuls
test
and
dec
jne
dec
stos
inc
ds
test
pop
jp
test
inc
daa
add
scas
aas
adc
adc
lock
ljmp
loopne
imul
push
out
mov
pop
jl
daa
mov
lods
jg
jp
movsl
jb
fxch
inc
shrl
lock
or
loopne
mov
add
clc
cs
sub
repnz
mov
outsb
cmpsb
pop
inc
xchg
andl
ljmp
sub
xor
lahf
inc
in
xor
mov
ds
lds
incl
jmp
lds
or
mov
xor
pop
arpl
pop
lret
movsb
lock
cmpsb
sbb
cwtl
in
test
jle
aad
in
jp
scas
test
test
je
mov
mov
cmpsl
or
aaa
test
xorb
test
sbb
jb
leave
xchg
xor
mov
add
dec
pop
sti
push
sbbl
cltd
aad
mov
pop
cmp
jb
stc
scas
sub
add
mov
and
sub
jge
adc
mov
sub
push
add
jp
push
mov
xchg
inc
out
sbb
pop
jno
out
push
lds
push
je
jno
fsts
jge
mov
add
cmp
jecxz
adc
cld
xchg
fwait
lds
xchg
mov
ljmp
mov
and
call
and
push
jo
movsl
inc
je
or
xlat
xchg
bound
filds
xchg
xchg
push
cmpl
negb
push
jno
nop
push
xor
ljmp
mov
cmpb
mov
pushw
mov
ss
sub
test
pusha
pop
hlt
stos
mov
dec
jae
ja
lahf
pop
in
and
mov
cmpsl
add
into
push
and
mov
adc
jbe
call
sarl
aaa
cmp
scas
ds
fsubl
repz
mov
test
or
add
fcmovne
adc
int3
or
nop
fdivrp
insl
pop
fildll
jo
testl
sbb
inc
or
addr16
iret
popa
xchg
pop
jp
adc
inc
mov
jge
xchg
sbb
push
insl
insb
push
std
adc
daa
mov
jmp
ds
jbe
adcb
mov
movsl
pop
pop
in
mov
or
negl
ficoms
sahf
add
cmp
imul
std
mov
pop
and
pushf
fldenv
js
adc
and
mov
outsl
shlb
psubusw
jecxz
ret
out
data16
dec
jo
cli
xor
or
dec
es
add
jae
not
std
mov
adc
jo
adc
pop
dec
add
adc
fnsave
out
lods
and
push
push
mov
icebp
xchg
jae
test
lret
cmc
fcmovb
mov
arpl
orl
mov
sarl
jle
add
and
xor
enter
cmc
xor
mov
mov
push
out
sub
or
jmp
lcall
xchg
enter
call
adc
insl
inc
mov
mov
inc
ficomps
cmp
push
ljmp
xor
stc
lahf
mov
push
sahf
fbld
sbb
sbb
fmuls
push
iret
in
sbb
or
inc
aaa
sub
pushf
popa
and
in
scas
ds
cmc
and
lods
mov
js
gs
stc
xchg
movsb
daa
mov
push
sub
nop
cmp
sarb
jmp
aas
repz
fldcw
dec
xchg
testb
jge
out
cmpsb
mov
aad
push
cwtl
pop
sbb
aad
rolb
jne
and
test
mov
push
dec
cs
in
push
cmpsl
lock
adc
lea
pop
cmp
shrl
dec
dec
pop
and
imul
xchg
push
inc
add
sub
inc
jns
jmp
movsb
leave
adc
dec
ret
jp
mov
in
mov
mov
or
repz
pushf
push
inc
insl
push
jmp
test
dec
xor
popa
pop
sub
jg
pop
push
ret
xor
mov
push
aad
js
movsb
outsb
in
add
xor
inc
xchg
add
insl
cmp
dec
mov
mov
and
mov
iret
jnp
inc
jle
inc
stc
cld
sbb
pop
pop
inc
adc
repz
fldl
jmp
push
leave
add
adc
ja
mov
icebp
xchg
sahf
repnz
rcrb
out
push
xor
xor
icebp
rcl
je
sub
aad
idivl
dec
in
and
ds
inc
lods
dec
jns
mov
daa
sarb
stc
inc
addr16
js
jns
daa
mov
mov
mov
cmp
std
dec
ljmp
lods
xchg
pop
cmpsl
mov
flds
mov
and
mov
hlt
idivb
sbb
add
test
push
stos
adc
push
dec
push
repnz
aas
add
add
jmp
sbb
xchg
adc
dec
xor
inc
jp
push
outsb
sub
test
sbb
les
xor
jmp
pop
out
rorl
inc
mov
sub
or
pop
loop
and
xor
js
nop
incb
test
cmp
lcall
outsl
pushf
xchg
std
xchg
testb
pop
sub
stc
xchg
xor
jge
push
test
mov
pusha
insl
int
pop
inc
pop
test
lret
pop
mov
pop
lods
lret
push
or
xor
inc
loop
and
lock
loopne
insb
mov
pushf
test
add
pop
push
cli
add
into
icebp
xor
push
lock
push
mov
aad
lds
cmpsb
and
outsl
clc
sbb
int3
adc
fistpll
mov
jno
jb,pt
mov
or
sbb
mov
lea
and
insl
in
sbb
fisubs
jmp
rcl
lds
xor
mov
dec
aam
aam
sbb
dec
int
lock
pop
dec
xchg
rcll
test
pop
std
mov
js
arpl
inc
push
xchg
push
int
sub
dec
adc
pop
mov
sub
fwait
or
scas
pop
cmp
imul
mov
xor
aas
nop
ljmp
sbb
in
xor
outsl
jae
aad
cmp
scas
inc
jle
pushf
pop
sub
mov
push
jecxz
pop
int
outsb
icebp
pop
stos
push
dec
sub
sbb
cld
mov
mov
pop
scas
bound
rclb
cmpsl
fidivrs
cmp
sub
push
enter
insb
int
xchg
sub
sub
shll
or
cmpsb
test
orb
fldenv
sbb
pop
sub
pop
dec
pop
cmp
pop
ret
sub
aad
testb
cmp
movsl
ja
ror
pop
andl
cmp
in
push
push
insl
push
adc
cmpl
adc
inc
cli
and
jo
nop
dec
jl
xor
and
xchg
sub
adc
ds
xor
aad
pop
lcall
adc
imul
mov
test
aad
std
dec
mov
cmp
sbb
lods
mov
sti
mov
sbb
in
pop
mov
shlb
pushf
insl
or
les
loopne
scas
or
ss
mov
or
scas
inc
ljmp
ret
aaa
scas
hlt
mov
cld
gs
clc
adc
xchg
or
inc
fiaddl
imul
lods
inc
loopne
push
enter
imulb
das
push
pop
subb
repnz
pop
fcmovnb
fcmovne
cmp
aaa
jae
sbb
popf
push
mov
pushf
stos
fiadds
jnp
mov
js
xchg
sub
jno
je
add
mov
mov
call
cmp
clc
xchg
jle
adc
leave
and
imul
daa
outsb
adc
xor
push
inc
add
cmpsl
jo
cli
dec
or
cmp
dec
cs
pop
and
dec
in
jl
lds
xchg
repnz
pop
sub
imulb
xor
leave
sbb
sbb
pop
icebp
push
enter
into
lahf
fldenv
dec
cmpb
jbe
hlt
gs
jo
sub
out
clc
xor
xor
push
sbb
sbb
and
sub
ret
xchg
adc
mov
jg
call
je
call
popa
pop
rclb
fadd
pop
loop
push
or
adc
pusha
enter
sbb
sub
fwait
gs
adc
pop
add
add
sub
xlat
jecxz
inc
mov
arpl
cmp
andl
icebp
mov
stc
add
cmpb
fistpll
mov
popf
mov
jg
fwait
shrl
jb
cmp
fwait
rclw
sbb
repz
mov
jnp
out
fcomps
and
ret
in
js
push
scas
adc
fstps
lock
push
loopne
adc
fsub
mov
pop
jnp
imul
xchg
fimuls
sub
xchg
pop
scas
ret
jg
inc
cmpsb
jle
cmp
and
shlb
aaa
sbb
and
dec
fs
or
lods
bound
and
ret
cmp
sbb
in
sub
xchg
js
jge
cmpsb
mov
xor
pop
fnstcw
mov
push
mov
lret
mov
movsb
js
sbb
cmpsl
cmp
pop
in
xor
xor
lahf
sub
les
xchg
arpl
stos
clc
pushf
sub
dec
adc
sar
repnz
or
jecxz
add
test
adc
iret
jns
adc
and
pop
lret
jns
test
mov
push
sti
push
mov
fbstp
divb
repz
sahf
mov
inc
jb
das
popf
xchg
lcall
leave
imulb
mov
test
popf
stc
cwtl
or
pushf
pushf
mov
inc
hlt
ret
leave
das
loop
lcall
mov
sub
pop
pusha
cmp
xor
xchg
and
cwtl
mov
std
xchg
adc
add
xor
sti
imul
jp
insb
add
pop
negb
cmp
sub
out
cmp
push
adc
lret
or
sahf
out
and
adc
dec
scas
in
sbb
fdivr
sti
out
les
xchg
daa
inc
bound
bound
mov
insb
xchg
call
test
fs
inc
adc
xlat
testb
push
jno
inc
inc
sub
push
movsl
add
adc
add
ljmp
or
dec
loope
push
adc
jne
lahf
stos
or
lods
fucom
adc
lods
test
lret
jnp
stc
imul
mov
outsb
push
cmc
pop
lret
jno
fiadds
push
inc
lret
and
pop
or
rorl
out
xchg
jecxz
pushf
and
or
and
imul
pop
arpl
push
mov
ret
ljmp
out
xchg
es
mov
cmc
push
mov
adc
in
leave
mov
adc
iret
aad
dec
sub
shll
adc
mov
or
enter
shr
iret
loope
loopne
rcrb
jl
dec
jb
mov
add
popa
je
jge
ja
inc
sbb
scas
ret
push
in
mov
lods
add
xchg
xor
jge
cmp
pop
dec
or
outsl
repnz
xchg
xchg
jecxz
mov
lahf
push
inc
xlat
jae
and
mov
aad
jno
in
xchg
push
loop
xor
out
lds
test
out
aas
ja
aad
setne
fidivrl
and
inc
inc
jae
or
add
loope
xor
bound
sbb
hlt
push
push
lock
dec
sbb
xor
inc
cmp
out
out
cmpsl
xlat
mov
and
lods
lock
xchg
and
clc
push
js
int
fstl
dec
out
ret
xor
adc
js
rolb
sti
cwtl
mov
pop
mov
push
inc
or
les
loop
ds
enter
insl
push
mov
sti
fidivrl
inc
js
xchg
push
ret
fdivl
test
cld
hlt
out
mov
inc
adc
sbb
inc
sbb
aas
add
test
inc
or
mov
dec
xor
mov
jb
inc
inc
nop
push
clc
popf
mov
pushf
stos
pop
inc
shl
push
jmp
jno
push
or
test
scas
xor
mov
loope
mov
mov
cmpsb
mov
rcrb
repnz
ds
inc
dec
lcall
cmpsb
cmc
movsb
and
or
repnz
add
aas
mov
push
jnp
cs
sbb
mov
sbb
or
push
sub
out
ret
cmc
cmp
add
fmul
stc
sub
rorb
adc
cmp
or
adc
mov
bound
jmp
inc
xchg
sbb
repnz
jns
xchg
ds
dec
addb
xor
daa
jmp
xchg
mov
pop
sbb
ret
sarl
xchg
add
add
in
hlt
sub
dec
pop
pop
leave
jno
ror
das
inc
out
in
loope
xor
ss
sbb
test
test
xchg
subb
pop
jge
int3
out
lods
bound
lret
xchg
out
out
into
jbe
mov
or
movsb
test
jns
test
lock
cmp
repz
jp
dec
adc
lret
jge
hlt
sbb
andl
adc
cmpsl
push
loope
inc
repz
mov
out
adc
dec
aad
stos
ret
add
outsl
or
mov
lret
lea
mov
outsb
pusha
rcrb
sub
movsb
lods
loope
mov
cmp
push
fs
xchg
mov
adc
cld
pop
or
movsl
xchg
out
ret
sbb
mov
inc
cmp
inc
or
add
jnp
gs
inc
jecxz
jg
ficoms
jmp
xor
mov
insl
mov
idiv
mov
ljmp
mov
fstps
push
or
test
sub
adc
imul
test
xor
inc
fwait
shl
lock
push
cwtl
inc
daa
or
mov
mov
mov
in
sub
mov
enter
sub
jle
scas
mov
cmc
push
xchg
incl
xor
sbb
test
ficoms
in
jp
push
rolb
in
or
add
xchg
das
hlt
cmp
and
xchg
js
xchg
ss
push
daa
push
jnp
xor
ljmp
push
pop
shll
pop
mov
enter
pop
mov
sbbb
sub
inc
enter
jno
inc
add
sub
xor
jb
out
and
mov
lahf
xchg
inc
js
lcall
aaa
sub
pushl
add
popf
and
loope
pop
pusha
xor
andl
or
fbstp
out
lret
mov
sbb
shlb
xor
push
dec
xlat
and
aam
out
mov
cmp
fnstenv
lahf
test
bound
fbld
fistpl
imul
sub
clc
insl
mov
scas
or
jb
jns
fimuls
lea
inc
push
pushf
and
jns
sbb
cli
or
cltd
loop
mov
inc
lock
xor
subl
movsb
shl
inc
shl
add
iret
clc
faddl
ret
mov
add
sahf
mov
mov
inc
fisubs
mov
les
fwait
add
inc
imul
fmul
adc
inc
mov
push
and
mov
or
pop
cmpsb
push
xor
mov
mov
out
movsl
jle
iret
pop
call
loop
inc
add
sub
xchg
dec
cmp
outsb
rolb
sub
push
mov
fimuls
cmc
jl
into
sbbl
fld
add
mov
xor
jo
cld
and
fisubrl
mov
cmp
jb
xor
loopne
sbb
adc
jo
int3
maxps
xchg
movsb
xchg
xor
ret
mov
fs
mov
dec
cwtl
imul
fwait
hlt
push
adc
sub
pop
jne
push
jmp
mov
mov
int
out
addl
dec
nop
pushf
mov
movsb
movsl
cmp
lcall
es
jnp
fsubl
popf
cltd
adc
mov
jb
or
dec
inc
cmp
movq
pop
sub
fiaddl
fcomp
enter
cwtl
mov
mov
test
outsb
push
decb
adc
mov
mov
in
mov
xchg
and
mov
test
mov
mov
shrl
xchg
mov
test
aaa
mov
movsl
hlt
xchg
xchg
rcll
dec
or
cmp
xchg
cld
ret
mov
sbbb
or
loop
push
xchg
ret
mov
mov
test
in
gs
cmpl
loope
inc
xchg
inc
jno
push
mov
jo
ljmp
xchg
lods
stos
push
cmp
dec
dec
movsl
shlb
dec
punpckhwd
hlt
jbe
cmp
pushf
or
xor
outsb
and
loope
xor
mov
xor
mov
inc
xchg
jmp
pusha
fnstenv
leave
add
push
pop
ficompl
imul
sbb
pushf
push
cmp
push
loopne
pop
inc
mov
ret
xchg
mov
pushf
push
xor
loopne
cltd
inc
mov
jmp
dec
push
push
fwait
xor
mov
add
mov
insb
add
cmp
int
and
pop
mov
addl
adc
stos
mov
inc
lock
imulb
sbb
and
push
das
dec
mov
push
sub
clc
xchg
sbb
inc
shlb
daa
fcmovbe
jae
jp
cmc
inc
sti
jecxz
pop
das
mov
mov
cmc
xor
arpl
es
jb
inc
push
sbb
jp
mov
not
mov
jp
jns
movsl
stos
adc
repz
imul
lea
push
hlt
lock
daa
xor
sbb
jne
xor
leave
xchg
ds
sbb
loop
or
mov
sarl
or
stos
xor
xchg
xlat
jge
mov
bts
jp
orb
mov
dec
push
andl
lret
xchg
test
loope
mov
adc
icebp
mov
push
shrb
mov
jl
xchg
mov
mov
aas
aas
add
add
in
adcb
mov
cmp
xor
push
xor
or
sub
call
daa
dec
mov
sub
outsb
das
mov
xor
sbb
jmp
dec
addr16
imul
push
test
adc
sub
lds
dec
in
or
std
shlb
jo
pop
imul
sbb
mov
popa
repnz
andb
dec
mov
lea
dec
and
adc
dec
xor
or
mov
pop
test
jge
or
gs
lret
in
fs
inc
mov
add
fstps
stc
cmp
mov
jnp
push
xor
ljmp
xchg
aaa
add
aaa
into
lods
fldt
jne
movsb
test
nop
cmpsl
outsl
mov
imul
pushf
and
cltd
lret
jecxz
fistpll
pop
pop
cmp
sbb
pop
repnz
xor
lods
outsb
out
xchg
jecxz
and
jge
aam
adc
mov
dec
adc
in
int
sbb
in
popa
cmp
aad
sbb
pop
adc
push
mov
std
xor
and
dec
jle
jnp
inc
leave
rcrb
insb
jecxz
xchg
adc
sti
sbb
cli
jb
fiaddl
or
sub
push
mov
inc
pop
adc
iret
add
popa
loope,pt
enter
xor
xchg
dec
bound
mov
pop
std
adc
xchg
sbb
imul
bound
xchg
adc
addr16
adc
inc
and
add
mov
push
or
aaa
or
add
xor
aaa
dec
push
test
hlt
lea
adc
xchg
bound
test
adc
sarl
mov
jge
movsb
jnp
xor
lea
sub
iret
in
jns
jmp
and
call
push
cli
jns
inc
enter
idiv
fwait
sbb
mov
test
inc
sub
into
sti
mov
pop
pop
mov
in
ds
adc
dec
xchg
adc
roll
mov
in
nop
bound
ffree
mov
retw
dec
or
cmpsl
test
mov
cmp
mov
outsl
pop
and
into
inc
aad
push
dec
and
mov
mov
jo
ds
dec
repz
xor
out
out
mov
movsl
inc
ss
aaa
and
adc
mov
testb
dec
sbb
and
test
pop
inc
enter
and
mov
arpl
mov
pushf
subb
xor
in
pop
pop
enter
lods
in
jge
sbb
insl
jecxz
lahf
push
js
cmp
dec
xor
outsb
fs
add
pop
push
fadd
ficomps
inc
ret
ljmp
fucomp
test
pusha
lret
fucomp
cs
inc
add
arpl
out
mov
mov
jle,pt
jnp
cmp
fs
sub
cmp
cmp
sub
adc
jg
call
jnp
aaa
sbb
in
jmp
cmc
mov
sub
pmaddwd
icebp
pop
nop
repz
lods
xor
sti
add
insl
pop
les
fcomi
pop
xchg
mov
mov
ret
jbe
insl
adc
add
jo
in
or
and
sub
scas
adc
aam
inc
stc
fisttpl
cltd
and
fstpl
jle
repnz
mov
ss
cwtl
sbb
mov
jnp
enter
ret
stos
push
idivl
dec
push
addr16
test
je
scas
mov
push
ret
inc
xlat
mov
xor
inc
mov
insb
add
mov
jns
inc
push
mov
or
repnz
xchg
cs
cmp
adc
aam
inc
imul
push
push
loop
loope
adc
iret
iret
movsb
and
ljmp
adc
lahf
xchg
cmpsl
dec
aad
xchg
pusha
xchg
cmp
dec
xchg
mov
sbb
cmc
insb
adc
dec
push
add
add
divl
ds
jp
dec
xchg
js
bound
and
es
sbb
dec
xor
jmp
sub
cmpl
and
xchg
aas
imul
fiadds
fidivrl
jmp
xchg
add
loop
cmpsl
push
bound
call
sahf
pop
push
mov
dec
dec
cld
stos
aad
out
jg
in
popf
out
mov
fwait
dec
rcrl
scas
push
cmp
std
mov
jo
repz
jnp
mov
sarb
cmp
inc
lret
popa
test
cmpsb
push
ss
inc
dec
inc
or
xchg
xchg
pop
sbb
lods
adc
aaa
les
shrl
mov
push
js
xchg
fiaddl
fucom
mov
gs
pop
or
ret
dec
xor
add
and
push
loope
dec
fs
aaa
adc
daa
mov
cmp
clc
lret
push
sub
inc
ret
cwtl
lock
mov
imul
fisttpl
fsubrl
xchg
mov
imul
mov
and
mov
loopne
or
mov
data16
push
int
xor
sbbl
jnp
jno
andl
imul
in
cmc
or
iret
lods
jne
push
lahf
lahf
add
lea
xchg
lock
sahf
or
cwtl
inc
in
mov
mov
inc
xor
and
movsb
ljmp
flds
test
loop
mov
sub
gs
cmp
cltd
gs
cmp
inc
inc
xchg
mov
sub
mov
cs
outsb
lock
and
bound
pusha
mov
sbb
mov
push
mov
sarl
xor
std
xchg
addr16
gs
sub
jp
ljmp
cmp
or
inc
enter
jo
pop
xor
mov
or
adcb
fnsave
fstps
mov
aad
repz
inc
cmp
movsl
dec
fwait
mov
mov
mov
lret
jmp
lahf
jns
fcoml
loopne
xchg
test
cmpsl
xchg
add
out
std
mov
lods
jae
pop
pop
lods
and
sub
fbld
das
jp
xchg
or
popa
leave
xor
cmp
push
movsl
push
xchg
fistpll
in
lahf
pop
xchg
mov
ja
lret
or
stos
xor
movnti
jb
add
scas
adc
inc
mov
or
in
loope
add
mov
cld
aam
test
add
jbe
push
pop
js
sub
gs
aad
and
mov
jbe
iret
fldt
and
arpl
dec
jl
cs
rcrl
jp
sbb
fstps
mov
mov
mov
lcall
jl
add
pop
push
daa
pop
push
lods
and
jo
cwtl
fldcw
xor
movsb
mov
jmp
push
ja
dec
xchg
add
stos
cmp
inc
xor
dec
jg
mov
add
outsl
jle
cmp
enter
pop
jnp
cmpb
addr16
pop
ljmp
mov
rcl
jns
orb
lock
roll
into
iret
shrl
frstor
scas
rorb
jnp
in
inc
mov
mov
or
ja
mov
xchg
add
add
mov
and
or
cmpsl
es
sub
call
clc
sub
imul
dec
jge
nop
lods
shlb
out
lea
neg
or
in
divl
mov
adc
cmp
adc
pop
ljmp
push
sub
jns
cmpsl
imul
adc
push
js
stc
icebp
aas
lret
into
cli
sarl
fnstcw
lds
inc
and
inc
or
and
popf
cmp
cmpsb
mov
pop
pop
in
sub
les
jle
jne
std
sbb
xor
into
jns
cmc
loopne
cmpl
int3
push
mov
fistpll
sar
xor
dec
aaa
pop
dec
rolb
loope
pop
add
shlb
lods
rcrb
xor
cmp
movsl
dec
int
xor
xchg
adc
mov
or
mov
lret
popfw
stos
popa
ret
test
xchg
test
rorb
repz
stc
push
pop
out
js
cli
add
pusha
scas
sub
scas
inc
in
orb
add
aam
cmp
imul
inc
jbe
test
fs
or
xor
and
inc
out
and
cmpb
ret
or
add
iret
mov
jnp
xor
mov
add
sti
mov
cwtl
pushf
movsb
fwait
dec
stc
adc
mov
or
mov
in
mov
loopne
dec
push
adc
cmpsb
sub
call
xor
out
pop
test
pop
sub
mov
cmp
fcompl
xchg
pop
cmp
mov
push
lret
mov
push
add
cmp
out
loop
iret
adc
stos
xor
mov
out
mov
cmp
push
pusha
inc
push
or
ret
cltd
loop
fistpll
arpl
xor
divl
sbb
pop
loope
pop
mov
mov
out
sub
xchg
push
xchg
mov
jle
xor
xor
fwait
pop
mov
shl
push
imul
popf
mov
push
cmp
push
sub
fucomp
divl
sub
dec
adc
adc
cli
clc
cltd
xchg
jmp
add
ret
mov
pop
lahf
enter
jge
push
mov
cwtl
or
xchg
lea
clc
imul
add
iret
inc
jae
dec
lods
add
das
jl
xchg
jae
or
add
pop
test
inc
xchg
jne
negl
repz
lcall
mov
sbb
aas
sarb
cld
mov
or
lret
jl
cltd
inc
dec
add
push
popa
cmpsb
cmp
push
ja
fucom
xchg
mov
dec
int3
mov
dec
jae
aad
jns
arpl
xchg
mov
and
or
xchg
inc
xor
pushf
cmp
jb
jl
mov
or
cmc
push
sbb
aam
scas
or
cs
sti
stos
mov
mov
mov
push
inc
loopne
cmpsb
sub
push
add
popf
addb
adc
cmp
out
and
fcoml
out
fnsave
out
push
sbb
add
in
jbe
stc
xchg
aaa
aas
mov
mov
inc
push
ret
nop
iret
pop
xor
dec
in
popa
xchg
sti
pop
scas
sti
and
out
push
add
adc
and
addr16
xor
mov
xor
push
bound
sarl
aam
cltd
cmp
nop
dec
fcoml
adc
fs
cld
cmp
psubsw
sahf
pop
mov
ret
dec
adc
mov
mov
fbstp
out
cld
lds
cmc
jg
aas
jecxz
test
aas
ficoms
roll
sbb
inc
push
and
fs
pop
and
andb
pop
add
jmpw
inc
imul
add
cmp
xchg
test
or
add
or
leave
adc
push
push
dec
cmp
je
icebp
mov
cs
mov
push
push
std
lods
add
sbb
mov
xor
mov
jo
sbb
pop
jecxz
xlat
inc
dec
mov
cmpsl
popw
test
jp
outsb
lret
not
mov
jmp
jbe
pop
or
inc
loope
adc
or
cmp
unpckhps
or
lret
inc
shrl
imul
rol
push
jb
std
jmp
ss
mov
jb
call
nop
sbb
sahf
xor
push
xchg
sbb
clc
popl
or
xor
push
addr16
inc
rcll
xchg
xchg
pop
pop
cmp
sub
rcr
test
or
enter
and
mov
icebp
dec
les
popf
je
inc
xchg
jb
test
shr
xor
add
xchg
aad
cmpsb
sbb
sti
lahf
push
cmpsl
cltd
mov
imul
pop
sbb
or
je
or
sets
fisubrs
dec
jle
arpl
stos
gs
enter
mov
adc
insl
adc
mov
mov
daa
adc
inc
push
loope
ret
xlat
ror
daa
xchg
rol
jnp,pn
mov
push
xor
mov
xor
imul
mov
cmp
inc
pop
cs
xor
push
cmp
adc
jno
pop
xchg
testb
mov
cmp
out
inc
pop
mov
pop
sub
pop
sbb
adc
sti
mov
sbb
lods
cmpsl
sub
std
inc
lcall
sbb
mov
iret
fldenv
iret
xor
dec
pop
cmp
jg
sbb
or
lods
cmp
movsb
xorl
xor
fldl
gs
test
mov
out
arpl
adc
ss
in
and
ljmp
stos
movsl
int3
pop
popf
nop
in
sub
aaa
pop
dec
push
xchg
mov
testb
dec
lret
push
pop
test
aas
mov
pop
shlb
mov
or
into
pushf
data16
pop
mov
out
clc
mov
pop
cmc
pop
sub
jg
pop
and
push
into
outsl
xchg
xchg
mov
and
shl
lret
mov
shll
stc
cmp
add
fsubl
cltd
lcall
add
notl
cmpsb
ljmp
mov
adc
push
jge
or
aaa
push
dec
fs
out
push
out
mov
jl
cld
stos
xchg
push
sbb
iret
andps
stc
dec
sub
cs
pop
jne
mov
jns
ss
push
xchg
clc
sti
leave
adc
in
movsb
mov
into
mov
xchg
adc
jb
fcomip
popa
adc
add
into
dec
adc
out
fisubrs
cmpb
push
sbb
jno
movsb
pushl
push
xorb
mov
push
add
daa
pop
outsb
and
mov
cmpsl
loopne
and
cld
pop
adc
and
into
add
xor
and
cld
pop
movsb
xor
das
leave
push
push
xchg
daa
adc
sbb
jp
ja
imulb
clc
cmp
or
fldl
stos
mov
cmpsl
data16
test
fbstp
scas
mov
sub
inc
inc
sbb
movl
pop
cmp
es
cmp
sub
push
ficoms
fisttps
sbb
dec
or
in
jecxz
jg
clc
mov
add
shl
sub
xchg
jp
loope
jb
sbb
push
cmp
gs
es
add
in
sub
cmp
add
into
lcall
shrb
jns
mov
inc
cmp
scas
adcb
mov
adcb
cmp
pop
pop
sub
out
pop
xlat
std
adc
jp
in
ret
out
shll
cmpsb
dec
repnz
or
cld
sahf
or
imulb
mov
xlat
shrb
addr16
repnz
call
push
dec
jbe
in
sub
cmp
aaa
or
test
cmp
jo
dec
jae
dec
inc
mov
fmull
push
or
dec
mov
stos
xchg
std
lock
inc
sti
neg
popf
int3
or
jno,pn
adc
push
bound
dec
popa
and
push
aam
rolb
jo
int3
addl
push
sub
mov
ja
mov
fsqrt
mov
add
fsts
test
rcrb
cmpsb
xchg
push
sahf
fdivrs
mov
pusha
jno,pt
mov
iret
add
xchg
inc
jp
hlt
iret
dec
mov
xchg
outsl
jle
fadd
pusha
xchg
cwtl
imul
ret
xor
leave
mov
push
sub
cmp
push
adc
in
lods
and
dec
rcr
int3
jmp
mov
insl
adc
out
fucomp
add
or
cmp
inc
jmp
inc
sahf
jo
jns
mov
or
mov
pushf
push
push
mov
stos
xchg
mov
adc
pop
jbe
jl
fisubs
push
scas
cmp
jbe
lods
push
cmpsl
jg
lahf
movsl
jo
mov
test
lea
repnz
pusha
mov
cmpsl
das
movsl
testb
mov
les
in
jns
ds
jns
push
jp
jge
shll
bound
cs
jge
and
in
jno
dec
fsub
xchg
test
mov
insb
ret
xor
pop
dec
stos
mov
int3
pusha
test
mov
pop
sub
int3
cmp
jmp
jl
lcall
and
dec
sbb
lret
mov
cli
cld
aaa
pop
fisubl
js
inc
inc
leave
xchg
cli
loope
and
pop
nop
mov
jo
out
cmp
sbb
mov
insb
add
adc
fldenv
movsl
or
rolb
jmp
push
cmp
insb
inc
ficompl
ret
aas
push
push
outsl
lcall
lcall
shll
in
frstor
inc
cli
fsubrs
xchg
mov
sarb
cli
js
loop
adc
adc
lret
adc
mov
in
pop
std
test
sub
cld
and
sahf
movsl
xchg
mov
inc
out
sti
test
add
xor
sbb
sub
loopne
push
add
ds
xor
or
aaa
ficoml
mov
sti
jge
outsl
sbb
stc
push
pop
ds
pushf
add
add
inc
mov
adc
ds
add
cld
cli
or
jp
mov
push
push
push
push
rcr
mov
repz
or
mov
mov
push
jp
adc
add
xor
int3
test
and
es
loopne
and
shl
sbbl
inc
mov
mov
lret
cld
in
movsl
imul
lahf
mov
mov
das
or
xchg
mov
inc
in
mov
mov
cld
subl
adc
mov
mov
stc
loopne
dec
test
ljmp
aad
mov
or
pop
daa
or
and
jl
rcr
iret
cmpsb
movsb
sbbb
mov
sub
dec
cmp
mov
adc
or
je
sahf
mov
xor
cmp
push
imul
mov
es
inc
jae
and
inc
cs
mov
fwait
js
je
stos
mov
jne
mov
mov
rcrl
les
jecxz
aas
cmpsl
pop
fiaddl
mov
lcall
sbb
test
pop
or
mov
xchg
mov
iret
rcr
int3
cmp
cmp
mov
jmp
xchg
stc
xor
ja
pop
jl
push
jne
js
out
jb
mov
pushfw
mov
ljmp
add
pushf
mov
std
jg
jp
out
scas
add
loope
insl
push
daa
mov
mov
cmp
dec
sbbl
add
fsubrs
jnp
rol
andb
lahf
aaa
mov
sbbb
out
mov
adc
jb
stos
dec
mov
mov
imul
mov
aad
shll
push
popf
ret
int
sub
nop
jge
ja
andl
and
jb
outsl
fdivrs
sbb
cwtl
aam
stos
out
repnz
jge
sub
mov
scas
fwait
test
das
sbb
cmp
int
arpl
das
jno
lahf
push
sbb
xor
jmp
mov
das
negl
mov
adc
cmp
js
mov
aad
cmpsl
pop
nop
fwait
cmpsb
push
iret
and
jmp
jl
repnz
jo
jg
in
dec
or
shll
jp
sahf
xor
add
pop
lock
jmp
in
jno
stos
dec
out
fwait
and
in
in
js
cmp
es
mov
stc
sbb
push
push
mov
add
scas
mov
inc
xor
mov
xor
jmp
xchg
cmpsl
into
mov
or
and
mov
push
in
enter
sar
ficoml
jmp
inc
xchg
fwait
cmpsl
adc
add
leave
cld
sub
in
mov
mov
push
or
ds
daa
sub
shrb
es
or
inc
push
imul
sbb
pop
dec
std
aas
mov
sbb
lahf
sub
outsl
sub
mov
sbb
jo
es
mov
and
jns
adc
xchg
scas
sahf
push
sub
pop
faddl
push
xchg
pop
test
into
fcmovu
push
ljmp
out
stos
cmpl
dec
xchg
in
test
imul
mov
addr16
cmpsl
mov
push
xchg
hlt
sub
add
movswl
xchg
aad
mov
xor
pop
movl
inc
sti
jg
out
adc
mov
cs
je
rcrb
in
out
lods
aaa
jg
jecxz
mov
pop
jge
pop
pop
loope
push
xor
xor
daa
outsl
arpl
cltd
jnp
icebp
ja
cltd
out
ljmp
add
push
mov
or
sub
cli
mov
mov
mov
pushf
mov
mov
dec
mov
aam
dec
pop
fcomp
aad
loopne
push
addb
into
cmc
dec
mov
mov
mov
or
sub
dec
pop
sub
enter
or
mov
xchg
inc
dec
js
pop
lds
cwtl
rcrl
lds
popf
ja
adcl
mov
je
and
jo
in
cwtl
ds
xor
std
ret
hlt
add
or
xchg
lods
fimull
ret
pushf
push
popa
xor
in
leave
mov
lahf
cmp
or
js
mov
movb
inc
test
xchg
test
pushf
test
lcall
aam
outsb
xor
sbbb
loope
insb
nop
mov
aaa
mov
xchg
pop
testl
inc
mov
ficompl
andl
or
addr16
fidivs
stos
mov
jns
mov
movd
mov
inc
lds
inc
stc
fisttps
adc
shll
mov
divl
or
sbb
dec
pop
mov
adc
lock
xchg
and
inc
fidivrs
scas
repz
test
sbb
loope
iret
std
test
add
or
movsb
or
mov
and
pop
mulb
inc
mov
in
xlat
push
test
inc
popa
mov
in
adc
rcll
add
cmp
das
stc
push
shll
push
sub
sar
inc
mov
aam
or
lcall
mov
jmp
sub
mov
push
in
xlat
mov
gs
add
ds
add
xchg
jae
xchg
sahf
sbb
xor
adc
roll
push
lahf
inc
and
aas
lahf
cmc
cmpsl
ss
jle
sbb
js
aaa
imul
mov
leave
mov
pop
or
pop
jge
test
shlb
mov
hlt
xchg
popa
or
iret
idivl
or
inc
cmpl
mov
adc
push
xor
cmp
push
or
push
jmp
jl
subb
imul
mov
test
aaa
push
sbb
aaa
ret
mov
js
push
pop
je
xor
xchg
push
notb
and
int3
sbb
negl
fnsave
xchg
sbb
sub
ss
adc
mov
mov
adc
dec
pop
xchg
xor
push
xor
or
or
in
or
mov
mov
jo
inc
bswap
test
push
lahf
or
icebp
jmp
xchg
movsl
test
stos
push
movsb
xchg
mov
mov
pop
sbb
pop
sub
adc
icebp
push
out
inc
in
lods
dec
sbb
xor
cmp
mov
sub
movb
popa
cld
scas
jle
jle
mov
mov
and
subb
data16
aad
cmp
icebp
je
mov
mov
into
mov
in
add
stos
andl
mov
jle
mov
sti
repz
xchg
fnstcw
push
int3
hlt
cmp
and
repz
pop
mov
loopne
aam
and
cmpsl
outsb
mov
int
add
pop
inc
jb
jno
dec
and
arpl
inc
add
push
xor
mov
test
pop
jecxz
ds
loope
lds
sbb
fnstenv
inc
sub
or
jl
out
sub
mov
test
xor
out
cld
call
inc
inc
and
push
xchg
dec
or
add
clc
rol
xor
fsts
fstl
faddp
inc
shll
sub
enter
mov
sbb
lods
mov
and
mov
jecxz
mov
cmpsb
xchg
int3
nop
int
adcl
arpl
je
sbbb
pop
arpl
fs
and
adc
clc
je
xchg
xchg
cmpsb
cs
iret
fdivrl
outsl
scas
ds
and
mov
sahf
stos
or
sbb
pop
roll
shll
test
je
pusha
xor
adc
lock
ljmp
mov
adc
clc
aam
push
push
mov
std
in
inc
jmp
imul
inc
push
jecxz
pop
fiadds
mov
xchg
jmp
sub
xchg
and
inc
nop
xchg
push
mov
sbb
push
fisubl
pop
out
clc
icebp
test
add
int3
fcoms
jbe
cmp
icebp
mov
mov
popa
fildl
cmc
movq
cmp
mov
jb
sahf
in
cmp
mov
inc
test
xchg
xor
or
ljmp
movsb
push
jb
loopne
lods
repz
dec
xchg
pop
pop
cmp
jae
stos
jg
popa
mov
xor
add
adc
ja
mov
hlt
xchg
repz
sub
inc
inc
xlat
enter
or
fs
mov
imul
cmp
pop
stos
je
cmp
mov
in
xor
adc
inc
mov
es
xchg
popf
fistps
ror
add
in
adc
dec
fcomi
in
mov
sub
pop
scas
add
and
ss
lcall
loop
inc
out
push
jle
cltd
mov
sub
into
arpl
sub
or
pop
mov
jle
dec
adc
push
in
xor
xchg
dec
xchg
and
lods
mov
mov
xor
test
insb
fcoml
dec
test
pop
add
jg
orb
fbld
xchg
popf
or
pop
out
xor
or
or
aam
arpl
cltd
das
ss
iret
sbbb
mov
jg
cli
mov
movsl
or
adc
push
mov
movsl
mov
cmp
js
sahf
inc
sbb
fwait
mov
mov
ljmp
enter
adc
mov
shlb
ret
lds
test
xchg
cli
jl
jl
jo
rcll
cs
add
arpl
fsubl
mov
xchg
out
cmc
push
ret
jmp
push
push
xlat
adc
repnz
push
clc
xor
stos
mov
fisubrl
mov
stos
sti
rcl
xor
fmull
outsl
pop
mov
or
repnz
mov
pop
int3
dec
arpl
test
mov
out
adc
mov
cmpsl
outsb
das
lahf
inc
sbb
or
or
ret
imul
push
pop
and
aas
xorl
std
mov
sub
sub
pop
add
mov
pop
repnz
rcrb
aaa
jmp
aas
pusha
mov
mov
mov
jns
inc
xor
pop
dec
clc
dec
cltd
int
sti
dec
cmc
cs
frstor
mov
xchg
int
pop
lcall
push
push
mov
fcoml
sub
jmp
cmc
xor
jbe
stos
push
or
cmp
xchg
inc
mov
xchg
sbb
dec
add
in
aam
pop
add
aaa
xor
nop
test
call
loopne
sahf
sub
and
lds
imul
ficoml
cmpsl
ret
ret
jbe
imul
pop
lahf
stc
rcrl
xchg
or
adc
ja
cmpsb
xlat
rcll
push
negb
cmc
jo
mov
cli
add
mov
roll
loopne
mov
lods
fadds
sbb
clc
pop
scas
insb
push
pop
popa
out
mov
sbb
cmc
jmp
sahf
cwtl
xor
pop
mov
ret
sbbb
add
out
push
ds
adc
rep
xchg
jmp
sub
aad
cld
subb
add
lods
mov
inc
movsl
sti
adc
jg
inc
xchg
fstp
sub
aas
or
xor
int3
outsb
xchg
mov
and
clc
inc
sbb
sub
ret
scas
dec
mov
mov
xchg
sbb
mov
arpl
or
push
mov
cmpsl
cli
fmuls
movsl
or
mov
pop
ret
inc
repz
and
adc
mov
xchg
pop
call
mov
mov
aam
pop
filds
lods
sbb
sbb
lret
fldcw
sub
dec
mov
or
jae
in
repnz
sti
mov
xchg
sub
dec
inc
mov
push
pop
pop
out
mov
cmpsl
jne
out
test
inc
mov
mov
insb
shrl
inc
mov
xchg
outsb
leave
pop
popa
xorl
pop
mov
adc
jg
lcall
mov
sub
cmc
xchg
jb
movsb
mov
inc
rol
adc
hlt
loop
and
add
inc
xor
add
mov
addl
leave
test
jo
xor
fadds
xchg
sub
ret
mov
xchg
jne
inc
bound
jg
add
jg
inc
js
sub
jp
or
jb
lods
lock
xor
movsb
lret
dec
xor
xchg
mov
stos
pusha
clc
push
dec
out
fwait
xchg
jns
mov
enter
out
jo
lahf
xchg
lds
leave
xor
and
xchg
iret
jns
add
fisubs
and
cmp
sahf
add
clc
movsb
push
lea
stc
jae
jl
int
sub
rorl
test
fistpll
test
jno
icebp
cld
int3
xor
cmp
decb
inc
daa
sub
jo
sub
aaa
popf
sub
jmp
shlb
mov
scas
mov
cmp
pop
mov
mov
xchg
aas
pop
js
out
inc
mov
inc
cld
inc
in
mov
std
mov
imul
push
ss
outsl
or
cmpl
ret
out
out
in
lods
mov
jbe
dec
fsubrp
or
mov
pop
push
xor
sbb
into
vucomisd
inc
xor
push
fdivl
mov
push
fildl
mov
cltd
add
cmc
and
xchg
fwait
stos
xchg
out
mov
sbb
sub
pop
jbe
jbe
nop
std
roll
stc
mov
es
fwait
cmp
cmp
int3
add
mov
fdivrl
ljmp
mov
pop
call
repnz
push
nop
lahf
sbb
sub
popf
pushf
adc
sub
xchg
mov
push
sti
pop
cwtl
icebp
mov
xor
sub
pushf
pop
push
mov
fistpll
mov
pushf
sbb
call
imul
scas
jmp
push
loope
adc
sub
not
divb
inc
and
aam
sbb
cmp
add
xchg
or
fimuls
adc
int
or
and
mov
dec
int3
dec
jg
pxor
pop
mov
adcb
rorb
add
push
jnp
in
sahf
enter
sahf
pop
sub
int3
jmp
inc
lea
push
sbb
loope
cmpsl
test
sub
xor
stc
dec
mov
outsl
push
enter
loope
pop
int
adc
fldl
cmp
push
mov
pcmpgtb
pop
iret
ja
outsb
ret
hlt
testl
sar
ss
mov
or
xlat
in
pusha
stos
dec
sub
add
xchg
jnp
aas
ds
insb
sbb
outsl
in
mov
repnz
lcall
data16
add
idivl
fisttpll
pop
inc
dec
push
pop
mov
dec
fcom
jge
ss
jmp
pop
adc
push
pop
ljmp
jp
xor
push
pop
or
in
jne
outsb
push
sub
add
dec
leave
or
daa
jecxz
test
lret
inc
push
push
push
pop
jg
sub
scas
dec
in
mov
aas
sbb
push
inc
bound
jg
xchg
xchg
lcall
mov
orb
aaa
pop
pushf
sahf
cmpsb
icebp
arpl
fdivrl
push
jno
adc
cmp
sahf
xchg
mov
sbb
std
xchg
insl
xchg
cs
cmpsl
fcmove
iret
lea
test
movsl
cmp
push
out
inc
je
sbb
in
cmp
fldt
mov
psrlw
mov
into
imul
andb
adc
rol
lcall
cmp
cwtl
sbb
es
mov
mov
scas
mov
scas
cmpb
leave
sub
cmpsl
adc
dec
xor
xchg
stos
icebp
pop
jo
movsb
jbe
jle,pt
fstps
fincstp
bound
outsb
sbb
mov
imul
lcall
xchg
and
mov
mov
mov
rclb
pop
sahf
ficomps
push
fidivs
ffreep
jnp
inc
aam
fwait
push
fisttpll
push
fsubs
out
rol
or
aad
cmp
and
inc
sub
daa
in
int3
orl
sub
test
jbe
push
adc
mov
mov
addr16
lahf
xchg
jle
fidivl
mov
cwtl
and
ret
int
rorb
shlb
fldl
cli
arpl
jne
jge
int3
jnp
adc
add
outsb
outsb
push
mov
cmp
fadd
mov
cld
or
xchg
popf
pop
inc
mov
and
mov
mov
sti
push
sbb
roll
lods
bound
xor
mov
adc
jns
lods
scas
cmpsl
mov
mov
pop
mov
sti
inc
pop
in
mov
jno
xlat
dec
lahf
test
push
mov
push
mov
test
jmp
fcmovb
sti
cmp
jge
xchg
in
lea
pop
inc
mov
xchg
pusha
jl
test
aad
sbb
aas
shlb
mov
frstor
cld
and
jo
adc
xor
in
or
sbb
push
push
push
insb
repnz
mov
bound
scas
stos
xchg
fwait
jns
adc
fsubrp
inc
push
mov
loopne
cmp
sbb
pop
pop
pcmpeqd
addr16
pop
icebp
fstpt
sahf
add
stc
fistps
in
adc
sbb
jge
sbb
out
ret
cs
test
xor
sysret
dec
adc
stos
pushf
mov
dec
iret
adc
pop
das
dec
aad
sub
push
push
or
mov
lea
xor
push
and
push
clc
inc
push
ljmp
mov
dec
cmp
push
add
dec
mov
add
and
stos
jns
xor
xchg
add
inc
cmpsb
add
xor
pop
pop
mov
prefetch
sub
adc
stos
in
jmp
sub
inc
pusha
stos
mov
pop
scas
add
lret
mov
aas
push
std
xchg
test
push
cmp
cli
mov
mov
sbb
cld
mov
fadds
stos
hlt
mov
xchg
bound
ret
adc
push
jne
cltd
lsl
push
imul
mov
xchg
pop
nop
stos
lret
popa
inc
in
scas
pmulhuw
jl
ljmp
enter
lea
or
xor
or
or
sbb
jmp
cld
aam
add
cwtl
sbb
pop
insl
dec
lods
pushf
pushf
fildl
dec
push
push
push
fistl
mov
fildll
xchg
inc
fldt
mov
lret
nop
add
orl
add
movsl
iret
dec
mov
jge
pushf
cltd
lds
xchg
push
cmp
mov
cmp
and
sbb
sbb
mov
jae
and
leave
cwtl
dec
mov
cwtl
sub
sti
and
in
fcompl
loopne
mov
dec
cs
dec
dec
test
jb
fs
out
cs
xor
adc
pushf
test
push
js
enter
cmovno
and
mov
andb
dec
adc
push
dec
mov
jbe
lods
sub
orl
test
sbb
inc
cltd
ja
dec
rorb
enter
imul
pop
fbstp
in
dec
mov
xchg
inc
add
loopne
std
mov
jg
jo
adc
sub
lods
push
inc
fucom
in
mov
shll
jmp
sub
pop
shll
adc
mov
push
mov
imul
push
xchg
adc
and
adc
cli
or
mov
xor
test
test
shll
push
and
mov
lahf
mov
lds
rcrl
gs
jge
add
popf
pusha
adc
inc
cmp
xor
jl
mov
js
int
cmpl
pop
enter
xchg
adc
lcall
shll
aaa
dec
mov
imul
cwtl
hlt
lds
adc
and
lret
inc
ret
paddusb
jnp
mov
cli
pop
adc
repz
sbb
xchg
xor
dec
in
sbb
xchg
clc
mov
xchg
xor
sahf
repz
jnp
push
xchg
xchg
inc
or
jo
push
shl
mov
mov
sarl
adc
or
push
rcrl
int3
jne
rorl
popa
xchg
xor
jmp
jae
fnstenv
cmpsb
insl
outsb
aad
jnp
pop
xor
add
enter
cmp
sti
rorl
cli
add
and
imul
sbb
and
inc
fwait
and
hlt
aas
mov
pop
lock
jo
mov
jp
mov
fs
add
hlt
fsubrs
lcall
mov
div
sbb
scas
dec
frstor
rorl
incl
insl
xor
fdivrl
pop
jge
testl
ljmp
xchg
adc
hlt
and
and
push
icebp
fbld
dec
and
add
pop
jg
aam
pop
aad
pop
cltd
mov
das
in
add
imull
sti
aas
mov
cli
out
std
ss
in
mov
popa
sti
test
fsubrs
movsb
flds
stos
iret
test
test
out
jmp
sbb
cli
mov
push
cmpsl
pop
and
ret
les
lds
fistpl
add
jo
cli
mov
je
adc
gs
sbb
dec
pop
adc
jl
mov
popf
mov
xchg
lcall
mov
mov
leave
enter
jp
jecxz
ret
fsubrs
addr16
sbb
and
mov
jb
jl
movsl
sbb
std
repnz
test
mov
or
cmp
mov
jnp
in
inc
sbb
mov
mov
mov
sahf
or
mov
cld
cmc
std
jae
inc
daa
roll
sbb
frstor
mov
into
or
movsl
jno
stc
mov
inc
fwait
ja
imul
sbb
mov
cltd
je
fldcw
popf
mov
ja
dec
or
aam
cmp
and
push
rorb
sahf
xchg
dec
ss
cli
popf
test
dec
shl
ss
add
xchg
popf
movsb
mov
movsb
adc
clc
lds
inc
pop
mov
dec
loope
sub
push
inc
lahf
pop
fldt
jle
or
dec
adc
sbb
pop
in
jg
imull
fpatan
clc
lock
mov
fsub
stc
addb
pop
pop
popa
clc
or
xchg
cltd
imul
push
es
lcall
andl
in
xchg
sub
pushf
xchg
subl
jecxz
fcomp
jae
jge
aaa
mov
out
and
pop
dec
mov
mov
mull
popf
shll
aas
sarb
mov
push
xchg
roll
push
mov
mov
insl
out
andw
cmp
rcrl
sbb
cmpsb
sub
xlat
rcrl
mov
sti
cmp
add
outsb
ja
inc
call
decb
xchg
aad
in
xchg
fdiv
inc
lods
fidivs
int
mov
xorw
dec
and
xchg
xchg
movsl
xchg
sub
adc
test
test
cmp
cmp
pop
or
or
xchg
cmpsl
rorl
push
sbb
mov
cs
pop
ffreep
insb
xchg
cli
xor
jmp
pop
les
outsb
addr16
and
sahf
idiv
movsl
mov
fidivrl
xchg
fcom
cli
idivb
xlat
pop
sub
push
mov
mov
jge
xor
repnz
and
js
push
mov
push
aas
loop
sbb
ror
xor
mov
xor
push
xchg
xor
ljmp
cwtl
push
push
fcomps
mov
jmp
inc
enter
xchg
out
push
roll
push
test
repz
add
cwtl
fs
or
aaa
test
mov
add
es
and
int
ds
test
mov
insl
adc
adc
ljmp
inc
jecxz
out
mov
sub
movsl
xchg
mov
fwait
das
pusha
fcoml
arpl
in
cmp
inc
xchg
jne
addb
shl
add
ja
in
xchg
mov
mov
das
mov
clc
aam
fs
or
push
daa
rolb
sub
push
sbb
lret
clc
jle
fwait
scas
push
cmpsl
lahf
daa
or
repz
sbb
sahf
mov
or
sbb
push
mov
push
and
mov
outsl
push
xor
mov
or
adc
and
pop
aaa
inc
ss
xchg
cmp
inc
cmp
push
xlat
pop
pushf
pop
cmpsl
insl
push
daa
lock
xor
repz
gs
or
or
dec
in
lock
pop
int3
lahf
fs
bound
mov
fadd
lods
ficompl
xor
in
adc
xchg
fs
dec
fcom
insb
xchg
xchg
loopne
jb
fsts
data16
mov
insb
mov
or
pop
push
insl
sbb
xchg
add
in
add
or
inc
xchg
add
jg
andl
and
jnp
or
pop
sahf
stc
jns
js
jns
cmp
idivb
out
addb
mov
pop
lret
adc
inc
xchg
fbstp
push
popf
loopne
subb
pushf
sub
mulb
aam
sub
loop
cwtl
lock
xor
ja
push
jmp
in
add
int
jmp
pop
sahf
push
pushf
pop
inc
sub
lcall
jo
fucomip
stc
dec
scas
cmp
mov
jbe
testb
adc
pop
scas
dec
jne
mov
lcall
mov
jne
dec
fcoml
test
push
mov
int
inc
inc
mov
dec
gs
xchg
pop
fcom
xchg
std
lahf
cs
pusha
sub
jb
xor
in
movsl
fwait
xlat
shl
add
incl
imul
dec
cwtl
movsl
mov
js
push
daa
sti
pushf
jnp
jnp
sahf
jge
in
scas
outsl
test
sbb
frndint
xor
and
out
inc
fmulp
fdivrl
mov
jne
call
cmp
jg
outsb
xor
aam
movsl
mov
int
mov
pushf
or
scas
loope
push
sti
bound
jg
addr16
daa
fmulp
negl
push
lods
inc
cmp
lea
mov
or
add
int3
push
fmull
jno
ds
sub
fs
xor
rorb
xchg
les
std
jae
push
cmp
pushf
test
mov
and
cmp
xchg
mov
push
ss
mov
cmp
arpl
add
mov
xchg
push
int3
shrl
fwait
dec
test
loope
xchg
scas
push
pushf
mov
adcb
movsl
cmc
scas
insb
ljmp
mov
xchg
rcr
inc
rolb
imul
int
movsb
repnz
or
add
mov
out
xchg
in
fldcw
stos
das
or
add
mov
mov
jg
fwait
jp
mov
dec
scas
xor
testl
jl
and
push
pop
enter
outsl
lret
and
push
cld
scas
sub
mov
repz
popw
mov
cwtl
mov
cmp
and
fwait
dec
add
mov
or
cmp
mov
and
cmpl
pop
call
ds
subb
or
jmp
fstpt
scas
rcll
sbb
sub
push
pop
pop
loope
xchg
jne
loopne
outsb
and
cs
xchg
fs
mov
inc
xor
pop
andl
std
aaa
sbbb
imul
inc
cmc
mov
cmpsb
dec
aam
inc
aas
or
pop
xor
push
dec
in
and
cmp
add
mov
pop
bound
scas
add
jb
cmp
fcmovnbe
adc
lcall
xchg
jbe
sub
xchg
lcall
push
xorb
mov
lock
enter
test
mov
xor
hlt
lock
mov
lret
jmp
sub
dec
in
cli
fcompl
test
dec
lods
fadds
sbb
sub
mov
loop
loopne
push
cwtl
or
mov
xchg
int
loop
outsl
add
test
insb
jb
pop
xor
repnz
cmc
test
mov
add
mov
sub
cmp
xor
mov
cmpsl
dec
icebp
mov
jnp
mov
cs
sbb
dec
and
adc
push
mov
or
inc
inc
imul
cmpsb
in
loope
mulb
sbbl
call
lds
jns
mov
inc
adc
imul
fbstp
scas
mov
xor
notl
jo
xchg
orb
add
pop
push
mov
sbb
mov
fldenv
mov
incl
rol
ja
mov
mov
adc
ss
push
rcl
shl
ret
or
scas
jge
lds
in
dec
repz
test
mov
cmpb
das
dec
movntq
push
adc
rcr
ljmp
push
xor
sbb
in
cmpsb
sbb
cld
les
xor
sub
repz
add
mov
add
lods
mov
rcrb
repz
sbb
lahf
and
cmpsb
cmp
sub
mov
lods
gs
push
outsl
pop
stos
sbb
int
and
xor
imul
add
adc
loope
daa
jo
sti
js
cld
pop
cmp
jnp
sarb
daa
popa
push
or
or
jns
add
xor
lods
pop
loope
adc
mov
mov
pop
loop
mov
or
dec
push
push
sub
sahf
ja
mov
daa
mov
mov
sarb
xor
in
dec
iret
stos
xchg
mov
ljmp
scas
push
ret
xor
lods
sub
sti
lock
jnp
and
int
inc
mov
xor
xchg
xchg
insl
imul
subl
icebp
cltd
cmp
pusha
lret
ja
filds
sub
movsl
add
jae
ret
push
add
dec
mov
jecxz
add
sbb
jo
and
iret
inc
enter
idivl
ret
jne
adc
ret
jae
lret
pop
mov
push
mov
cmp
mov
mov
inc
cltd
adc
lock
pop
lods
and
std
push
dec
sbb
popa
rcrb
xchg
es
arpl
cld
nop
lret
das
pusha
jmp
arpl
add
sbb
lods
push
jle
addr16
inc
mov
add
inc
push
add
sbb
fmulp
sbb
incl
ljmp
sbb
imul
mov
jp
call
mov
adcl
cmp
dec
scas
inc
adc
add
mov
outsl
insl
lods
repz
pop
dec
hlt
pop
sbb
adc
xor
lods
mov
and
dec
addb
dec
loop
jge
iret
push
out
mov
xchg
jl
mov
jmp
ret
insl
ja
out
lret
dec
sub
mov
fbstp
leave
mov
cmp
and
dec
cli
outsl
cmp
push
sub
xchg
jmp
cmp
in
pop
repnz
daa
nop
and
sbb
in
shl
push
daa
ds
push
or
fs
adc
mov
adc
mov
rorb
push
ss
cmc
bound
rcrb
sahf
or
stos
adc
dec
mov
push
xchg
lock
mov
add
xor
rcl
movsl
cli
test
cmp
enter
ret
sbb
pop
in
inc
int3
jp
test
and
cmpsb
addl
mov
push
and
xchg
add
js
movsl
mov
and
jbe
mov
test
ret
cmp
jb
push
shr
sbb
inc
js
pop
jmp
shl
jb
pop
sub
xchg
mov
add
xlat
data16
data16
xor
ret
jl
fstps
dec
fmuls
clc
lea
cmpsb
adc
je
jnp
jmp
mov
in
jne
mov
adc
ljmp
adc
ljmp
movsl
mov
mov
orb
ficomps
pop
push
pop
in
add
stos
mov
dec
jge
out
push
pop
mov
ret
adc
pop
mov
pop
mov
call
jbe
test
mov
push
ja
insl
ret
or
adc
into
push
test
cmpsb
call
xchg
fisttpll
push
outsl
jo
js
call
sahf
mov
dec
cmp
adc
ja
and
aas
hlt
or
test
xchg
push
int3
adc
sbb
sub
test
jmp
inc
xchg
cmpsb
dec
test
icebp
lret
in
test
jno
test
inc
in
adc
inc
and
push
aam
mov
gs
xlat
mov
les
mov
pop
xor
or
aas
add
rorl
nop
mov
sahf
push
mov
xchg
daa
adc
jp
adc
pushl
arpl
dec
cmp
cmp
orl
mov
lret
in
push
sarb
or
das
mov
xchg
dec
jae
movsb
jns
sub
loopne
pop
sbb
iret
pop
and
xchg
push
xor
lods
imul
lds
xor
push
jno
fsubp
sub
repz
ds
insb
adc
jle
or
sahf
movsb
pop
inc
xchg
jbe
mov
xor
lret
push
xchg
and
sub
inc
add
cmp
cmpsl
jnp
mov
test
sub
stos
outsl
fs
sbb
pop
xor
mov
xchg
mov
and
fldl
cmpsb
ret
in
repz
jp
lea
sub
les
cmpsl
push
popf
dec
shr
aad
pop
aad
add
sbb
movsl
bound
rclb
mov
fdivrl
and
xchg
jge
pop
mov
xor
pop
mov
vmovaps
pop
sbb
out
out
xchg
push
and
mov
outsb
xchg
sbb
jmp
xchg
inc
add
and
enter
sub
arpl
std
jmp
lods
pop
dec
negb
jl
mov
xor
std
xor
iret
sbb
rorl
ja
ret
xor
jp
test
pusha
filds
sbb
inc
dec
ljmp
je
into
cmpsl
push
negb
rcrb
pushf
addr16
inc
xchg
jp
scas
mov
bound
inc
dec
lds
icebp
and
mov
dec
movsl
jns
xchg
int
ret
xor
dec
fsub
call
cmpsl
or
scas
mov
fwait
mov
test
jmp
or
pushf
xchg
call
aad
into
mov
std
xrelease
out
sbb
push
push
sbb
nop
dec
loop
pop
sarb
mov
sub
popa
ja
fsubrp
xor
lods
mov
sub
icebp
iret
test
mov
rolb
cltd
adc
cs
cmp
arpl
push
jns,pn
xchg
mov
pop
loopne
cmp
mov
popf
in
outsb
sbb
daa
mov
ret
mov
sahf
mov
pop
cmpb
xchg
in
cli
sbb
xchg
jae
push
mov
in
mov
add
sti
mov
test
push
cmp
add
adcl
pop
sahf
cltd
pushf
into
cmp
daa
into
movsl
cli
dec
int
inc
in
and
mov
popf
leave
movsl
mov
or
cld
jmp
clc
lcall
lret
loope
sti
fldenv
stc
jmp
loop
nop
push
aas
push
mov
lods
bound
and
out
inc
adc
mov
loop
cs
sbb
inc
and
movsb
insl
ljmp
dec
shll
mov
daa
add
movsl
shlb
add
jl
shrl
aad
das
inc
rcll
mov
xchg
adc
mov
and
gs
loope
ss
sub
adc
pushf
inc
cld
aas
adcb
cmpsb
nop
push
std
add
pushf
mov
fldl
stos
sub
test
jno
mov
and
rol
out
das
les
and
pop
and
mov
ss
pushf
xchg
cmp
lcall
fcompl
in
cmp
add
hlt
push
mov
movsb
jmp
mov
mov
inc
stos
mov
pop
lods
or
xor
scas
inc
mov
lret
push
rclb
push
mov
nop
insl
fsubp
int3
loop
sahf
sub
mov
inc
mov
out
jg
add
mov
mov
in
in
cs
scas
in
pop
and
mov
inc
xchg
pop
popf
fdivrs
push
out
orb
push
mov
lods
daa
xor
aam
and
pop
stc
out
dec
or
lcall
or
sbb
xchg
movsb
or
cmp
cmp
popf
push
jg
dec
cmpsb
mov
loope
movsl
test
push
lret
xor
lods
xchg
jl
mov
pop
add
sahf
lock
outsl
adc
shll
adc
xchg
sub
leave
into
mov
mov
jb
jmp
xlat
scas
jno
mov
jnp
dec
sbb
xchg
aam
movsl
and
dec
dec
mov
pusha
add
dec
push
ret
mov
add
xor
and
sarb
dec
mov
jns
test
mov
or
xchg
pushf
mov
adc
add
cmp
mov
and
lock
sub
jbe
dec
and
add
and
mov
ds
pop
outsl
in
nop
pop
push
push
popa
mov
iret
pop
sbb
fildl
call
sub
popf
pop
std
lea
mov
mov
cmc
lret
mov
pop
add
imul
ss
bound
mov
test
cltd
repz
test
loop
inc
outsl
jno
adc
arpl
mov
mov
and
ss
mov
fldl
jmp
jg
sarb
jmp
push
mov
pop
ljmp
adc
popf
mulb
push
loopne
test
adc
push
or
ja
cltd
cltd
rep
imul
mov
enter
pop
loop
out
shrb
push
dec
jnp
xchg
mov
sub
aad
mov
lea
pop
pop
pop
cmp
mov
push
dec
fildl
addr16
leave
xor
pop
jg
mov
into
adc
inc
push
sbb
mov
sub
or
insb
mov
push
movsb
jae
lret
shl
ljmp
repz
push
inc
jae
jno
xchg
aas
insl
stos
pushf
push
pop
push
ret
movsl
xchg
ret
lret
pop
xchg
sbb
testb
sub
mov
aaa
or
fmuls
mov
icebp
jg
movsb
stos
fcmovne
stc
cmp
sbbb
loope
add
fwait
lret
gs
sub
or
cld
mov
push
ljmp
mov
iret
xlat
and
repnz
std
cmpsl
popa
std
inc
shrb
dec
adc
xor
or
xor
push
ds
movsl
mov
xor
cmp
lods
sub
jl
cli
cltd
mov
jno
pop
in
push
and
scas
in
adc
popa
push
rcrl
aad
pusha
in
cld
shlb
rep
sub
jno
inc
outsb
in
dec
push
cmp
xor
mull
fildll
repnz
adc
xchg
xor
mov
dec
sahf
fabs
mov
into
ja
imul
loope
push
ret
repnz
out
iret
repz
jl
cltd
mov
jp
push
loop
or
sbbl
adc
std
pop
in
cld
sbb
imul
mov
push
outsb
push
push
or
movsb
jle
into
fnstcw
aam
dec
inc
ret
xchg
mov
push
loope
mov
xchg
push
xor
cmp
popl
push
sbb
pop
push
dec
rcll
test
rcll
mov
xchg
or
lahf
mov
add
stos
aam
call
test
or
stos
mov
add
jo
push
jo
xor
inc
xchg
mov
fbld
push
test
mov
mov
cmp
hlt
mov
scas
add
test
outsl
pop
add
xor
adc
jns
mov
adc
cmp
js
inc
dec
add
mov
xchg
cltd
pop
xor
mov
pop
ja
or
test
es
je
pusha
add
aam
lret
or
out
lods
push
jno
mov
fmuls
hlt
adc
sbb
jo
ds
mov
imul
push
lods
movsl
jo
arpl
outsl
dec
insl
stc
in
stos
mov
inc
bound
testl
mov
sub
mov
sub
das
addb
sub
adc
xorl
inc
sahf
or
xor
dec
push
cmp
insl
push
pop
mov
xchg
ljmp
or
jns
push
aaa
dec
nop
jle
inc
jl
out
add
in
xor
pop
jb
mov
sub
add
in
xlat
lret
pop
xchg
imul
sbb
cmp
jp
mov
jmp
inc
sub
mov
push
int3
push
sub
test
lret
sti
das
adc
lcall
call
ret
ret
stos
test
fwait
jl
sub
cld
neg
pop
fwait
ljmp
sbb
imul
out
nop
addb
test
fmul
bound
mov
pop
into
lods
push
jmp
adc
movsl
or
in
mov
stc
neg
sub
int3
push
pusha
add
cmc
aaa
push
or
add
push
sbb
movsb
test
mov
gs
cmpsl
loop
test
pop
fisubs
loop
sbb
add
popf
xchg
in
fsts
cltd
lret
dec
pop
je
mov
mov
rorb
pop
int
imulb
out
or
insl
popa
mov
or
adc
cli
add
ret
inc
jl
ret
xor
ret
notb
mov
lods
mov
enter
adc
push
test
xchg
das
add
mov
jmp
pop
xor
dec
out
xor
inc
jg
adc
adc
aaa
aad
fldt
sbb
cmp
cmp
test
notb
imul
xchg
ss
lret
inc
pop
jmp
sbb
push
nop
test
push
std
sub
cmp
sbb
sarb
es
in
or
jno
sbb
cli
in
mov
flds
bound
jae
push
aas
sbb
cs
add
test
pop
cmp
mov
mov
and
sbb
pop
jnp
xor
loopne
int3
push
js
hlt
mov
adc
fmull
nop
jne
add
mov
cmp
lea
cltd
lock
cs
addr16
adc
scas
xchg
stc
insl
fidivrl
mov
stos
push
dec
test
dec
aad
add
mov
mov
jmp
testb
sub
push
je
add
scas
movsl
xchg
loopne,pt
sub
push
mov
test
loope
xchg
or
cmp
cmp
mov
mov
and
xor
test
sahf
cltd
or
mov
gs
inc
mov
lret
pushf
imul
icebp
jp
push
int
lret
xchg
jle
cmp
aad
and
dec
outsl
orl
xor
lds
inc
mov
test
push
sbb
out
std
xor
lret
and
jns
adc
lret
add
cmp
mov
jle
js
push
cwtl
lods
jmp
lret
dec
jae
loopne
mov
arpl
cmp
stc
push
add
insl
sub
in
sbb
dec
and
movsl
idivl
cmp
xchg
xor
lds
mov
out
lea
insb
in
nop
sbbb
scas
cmp
gs
enter
daa
into
rorb
test
xorb
xchg
lods
mov
in
xor
lods
cmpl
xchg
int3
mov
std
pop
sub
loope
adc
mov
cmc
xchg
jbe
insb
push
inc
push
sbb
test
pusha
scas
jecxz
add
mov
data16
and
sbb
icebp
push
fnsave
or
cmp
jo
or
mov
mov
adc
inc
mov
jae
hlt
test
mov
xchg
pop
loop
mov
pop
jne
outsl
mov
shl
inc
movsb
or
jo
dec
jmp
mov
push
into
pop
push
dec
sbb
inc
enter
ja
jmp
mov
ja
mov
dec
addl
popa
lret
push
fs
fcompl
sub
push
sbb
push
sub
push
dec
lds
dec
sti
ds
lock
insl
decb
nop
into
mov
mov
mov
mov
fsubl
scas
adc
nop
push
mov
adc
dec
sub
fsubrp
pop
gs
xchg
pop
add
into
test
outsl
sbbb
addb
or
push
inc
mov
mov
out
aad
adc
add
bound
pusha
call
pop
mov
adc
sti
xchg
sbb
dec
fwait
or
xor
in
and
sub
push
xor
mov
sbb
sub
cwtl
jns
shlb
sub
xor
inc
int3
push
xchg
adc
out
mov
pop
int3
mov
sbb
jge
out
push
pop
sub
jb
lods
repz
jp
addb
jp
mov
fsubp
icebp
out
iret
jne
cld
lahf
fcmovbe
and
roll
repz
test
xchg
inc
fildll
xor
jo
pop
repnz
cmp
iret
push
jge
dec
xor
add
cli
push
andb
mov
dec
inc
xor
insl
sub
popa
data16
cmpsl
push
fisubl
insb
fidivs
mov
mov
es
add
jl
clc
das
ss
imul
sbb
push
dec
je
jecxz
jbe
int3
xor
cmp
sub
std
ljmp
and
stos
pop
jnp
push
xor
popl
push
cmp
jge
je
stos
mov
rorl
fildl
inc
inc
xchg
sbb
jl
in
push
push
aaa
in
cmc
scas
jmp
sub
push
jge
decb
jl
xor
mov
sbbb
iret
pop
add
scas
push
sbb
add
shl
pop
pushf
jmp
dec
mov
jno
iret
cmp
lahf
mov
xchg
js
add
pop
test
and
stc
out
fcoml
fildl
xchg
cs
cmp
out
xchg
cmpsl
dec
mov
rorb
into
int3
add
pop
arpl
jecxz
cmpsl
xor
mov
faddl
xchg
mov
int
data16
faddl
ljmp
pusha
pop
adc
inc
mov
and
sbb
test
gs
scas
push
xchg
sbb
dec
cltd
sbb
adc
lock
cmpsl
add
rcrl
adc
mov
xor
fdivrl
idiv
movsb
push
sbb
jae
jnp
push
cs
xlat
jg
mov
xor
mov
jg
xchg
inc
push
push
les
add
test
imul
loop
pop
or
mov
pop
lret
adc
mov
jl
pop
lahf
push
sub
xchg
or
outsl
lret
xchg
or
popw
cwtl
fistps
cmp
pop
xchg
jne
ja
mov
jmp
add
lods
call
js
or
adc
sbb
jae
lret
leave
push
xchg
mov
movsl
inc
bound
outsl
lods
jno
sbb
xor
testl
aaa
push
sbb
test
sub
pop
pop
xlat
add
mov
push
mulb
rcrl
jp
in
je
shlb
sbb
xchg
fs
out
stc
test
dec
ljmp
cmp
push
shll
sbb
out
xchg
dec
and
jbe
sarb
inc
mov
test
stos
and
xor
and
icebp
outsb
bound
mov
in
imul
pop
cmp
mov
mov
cmp
xchg
cli
mov
inc
jl
test
and
sar
sbb
les
sbb
fnstenv
push
xor
jo
push
test
orl
mov
pop
mov
mov
pop
xchg
adc
jne
js
pop
iret
out
adc
and
add
push
push
outsl
xor
or
cmp
cwtl
add
mov
mov
imul
outsl
lock
cmp
adcl
xlat
mov
aaa
call
jmp
or
in
xchg
xor
or
pop
stos
pop
sbb
ja
xor
out
in
pushf
adc
scas
movsb
pop
ret
rep
popl
repz
mov
outsl
dec
fidivl
pop
push
pop
subb
adc
mov
mov
jo
aaa
mov
push
jae
adc
movsl
pop
ljmp
pop
cmp
ss
mov
rcr
pushf
outsb
mov
and
pop
push
ljmp
popa
add
rorl
and
cld
jle
pushf
test
rorb
insb
pop
mov
adc
dec
popf
or
dec
mov
xchg
in
mov
xchg
mov
das
js
mov
cld
mov
push
xor
repz
adc
cmp
jo
sbb
ret
or
mov
cmp
ljmp
inc
aas
pop
and
dec
xchg
out
in
xchg
std
and
xchg
hlt
clc
jmp
jne
add
int
sbb
lahf
jno
and
mov
mov
jns
mov
jns
xor
add
push
insl
sbb
mov
pop
ficoms
mov
mov
pop
pop
out
es
add
outsl
stc
xchg
popa
aad
in
insl
fwait
lret
mov
jns
xlat
faddl
and
sbb
stos
cli
lods
jbe
adc
fisttpl
negl
cwtl
dec
mov
pusha
sbbl
mov
push
and
call
call
sbb
and
push
insb
dec
mov
cmc
clc
hlt
xlat
mov
sub
inc
dec
hlt
mov
xchg
or
mov
lret
subl
jne
sbb
mov
mov
lcall
fcmovnb
mov
in
sub
mov
adc
dec
mov
xor
rolb
push
out
or
or
push
divl
loope
dec
or
sar
loope
decl
pop
nop
or
push
sahf
pop
cmp
stos
sub
out
ret
jecxz
sbb
out
add
orl
xchg
rcrl
mov
test
xchg
fmuls
lds
push
push
jno
sub
push
push
push
repz
and
loopne
xorl
pop
and
fstpt
pop
orl
or
cmp
jg
stc
stos
mov
ja
sbb
insb
jecxz
pop
sti
push
push
ljmp
or
ret
lret
inc
push
sbb
addb
jge
stos
add
add
outsl
lock
and
jecxz
call
mov
popa
inc
aam
jbe
inc
jle
pop
sti
sbb
lds
orb
xor
loope
lret
scas
imul
and
dec
pop
mov
mov
fwait
cmp
out
push
mov
sbb
sbb
sahf
dec
cwtl
shll
sbb
sub
shlb
and
nop
inc
nop
push
imul
cmp
lcall
popf
orb
dec
jo
jmp
rcrl
loop
dec
inc
mov
sbb
rcll
jno
popf
sub
cmpsl
ljmp
arpl
aaa
mov
xor
sbb
notl
jmp
mov
push
jle
les
ds
pop
inc
addr16
aas
sti
mov
push
and
add
and
jbe
dec
outsb
lahf
cmpsb
mov
popa
xor
shrb
mov
fisubrl
loope
xlat
movsl
mov
sub
add
jg
test
repz
sahf
dec
pop
sti
inc
std
ljmp
sub
popa
mov
leave
shll
sbb
idivl
mov
out
add
pop
outsb
mov
mov
push
dec
ds
shlb
lahf
xchg
push
das
xchg
out
pop
mov
inc
pop
call
xor
mov
cltd
inc
cli
dec
and
in
popl
shlb
cltd
xchg
into
out
mov
fistl
bound
xor
fstpl
xchg
adc
gs
mov
pop
cmp
pop
push
cwtl
inc
and
in
push
lock
dec
mov
enter
mov
cmp
inc
xchg
cmpsl
and
add
cltd
sbb
ja
lock
aaa
jmp
xor
leave
out
stos
fmull
pop
cmpsl
je
cltd
sbb
repz
loope
or
ja
hlt
ret
or
pushf
in
sub
enter
jp
mov
sub
sbb
sbb
data16
jae
dec
cs
test
xchg
outsb
or
inc
xchg
pop
xchg
pop
xor
loope
xchg
js
mov
mov
xchg
loop
sbb
inc
aam
loop
loop
adcl
sub
mov
in
cwtl
adc
icebp
or
mov
fwait
loope
repnz
inc
push
pop
movb
dec
pop
mov
iret
pop
jge
mov
mov
cltd
sbb
ror
mov
mov
dec
add
or
aas
scas
xchg
or
xor
jmp
rclb
push
dec
mov
dec
pop
leave
inc
fisubrs
dec
std
or
clc
ret
loope
out
lods
pop
xor
pop
lods
fs
cmc
mov
loope
or
mov
mov
push
dec
into
mov
mov
push
mov
mov
imul
divb
cmp
sub
fadd
jge
loopne
ljmp
and
test
stc
in
xor
test
cmpsb
fcomip
ror
xchg
pushf
je
roll
jl
xchg
nopl
fisubl
xor
scas
loope
pop
xor
dec
dec
divb
xchg
sbb
xor
dec
nop
xor
stc
and
jae
fnstsw
fidivs
and
xchg
mov
aad
cmp
adc
ss
mov
icebp
dec
fists
lods
call
sub
pushf
and
rclb
jl
les
cmp
inc
std
sbb
cli
push
inc
xor
sub
adc
idiv
aad
add
nop
daa
or
dec
into
stos
and
mov
or
mov
loopne
shrl
fwait
xor
dec
and
test
mov
pop
ja
mov
dec
insb
sub
push
adc
hlt
aad
idivb
add
mov
iret
inc
cs
movsb
xchg
lret
lret
sbb
jnp
das
fwait
jecxz
mov
inc
pop
push
cmpsl
repnz
jmp
xchg
jae
pop
xchg
mov
adcl
dec
ja
xor
roll
clc
push
cmp
dec
ljmp
add
loope
ljmp
mov
pop
cmp
and
mov
pop
int3
andl
and
lahf
fwait
xchg
dec
dec
ret
into
cmp
shrl
dec
sub
ret
jo
adcl
pushf
arpl
sbb
icebp
aas
add
push
insl
adc
div
scas
xchg
push
mov
rclb
iret
and
mov
mov
mov
and
lcall
inc
sbb
fwait
test
push
pop
and
xor
xor
sub
inc
out
push
pminsw
and
dec
xor
sub
xchg
xchg
sub
jno
push
imul
pushf
ljmp
xor
test
xchg
int
arpl
bound
out
fldenv
in
shrb
and
push
data16
clc
imul
xchg
push
test
mov
sbb
pop
flds
into
scas
mov
mov
pop
fcmovnbe
mov
xor
rcrl
call
ret
xchg
add
rol
pop
sahf
lret
aaa
and
xor
cmpsb
aas
sbb
jo
add
pushl
inc
insb
push
insb
push
mov
add
add
sub
subb
gs
pop
jge
push
sbb
cvtsd2ss
mov
push
mov
adc
push
lahf
and
mov
std
push
loope
mov
insb
and
xorb
mov
push
dec
pusha
xchg
lret
insb
in
jge
test
mov
jmp
xor
popa
or
sub
xchg
cmp
arpl
fwait
lock
sarb
aam
lock
loopne
jmp
sbb
mov
dec
and
push
cltd
mov
push
pop
push
cld
stos
add
popf
push
sbb
sub
dec
adc
lret
test
repz
pop
data16
jae
xchg
add
cmpsl
mov
dec
xchg
out
test
push
cmp
cmp
sbb
sub
outsl
inc
mov
loope
mov
out
ds
cmc
aad
and
iret
popf
lock
xchg
adc
sub
xchg
cmpsl
insl
movsb
dec
pop
sbb
sub
sbb
int
rcrb
lret
outsl
call
dec
pop
arpl
int
push
jbe
adc
pop
lods
push
adc
mov
out
xor
inc
mov
out
in
pop
inc
pop
dec
inc
mov
sbb
and
jae
data16
cltd
add
or
jnp
mov
rol
and
sub
xor
push
in
je
sbb
adc
mov
or
int
ret
popa
or
add
sbb
es
out
data16
sbb
inc
xor
jns
pop
jbe,pn
mov
sub
push
aam
and
dec
loopne
lods
xchg
xchg
or
out
cmp
jnp
pop
sbb
in
jns
test
sbb
pushf
jmp
cld
sub
mov
leave
xchg
push
and
add
lods
sub
pop
test
imul
sub
lds
mov
lds
sahf
test
or
jp
sbb
rclb
jnp
xor
scas
jo
cs
adc
jo
in
adc
outsl
aam
or
mov
sti
nop
adc
popf
iret
pop
lret
fsub
insl
and
jmp
out
jecxz
pop
call
inc
sbb
mov
in
inc
mov
icebp
cmp
jle
sub
or
pop
rcll
emms
jle
int3
and
fistpll
adc
add
ja
pop
popa
sbb
int3
popa
movsb
dec
imul
sbb
enter
push
pop
jne
ds
rcr
jmp
pop
fwait
sbb
mov
add
imul
dec
movsl
mov
mov
inc
xchg
mov
popf
rcrb
sbb
stos
fsts
jmp
inc
sub
mov
jns
lahf
gs
jb
inc
pop
out
repz
sub
push
lahf
push
jns
adc
popf
dec
mov
enter
mov
andl
hlt
jl
xchg
xchg
pop
push
jne
or
adc
xchg
inc
mov
testb
lret
inc
mov
pop
ret
pop
push
mov
push
xchg
inc
imul
mov
out
test
das
mov
sub
adc
and
ss
ljmp
push
push
xor
jge
les
adc
dec
insl
ljmp
daa
sub
dec
das
nop
pusha
and
jecxz
fildl
adc
sbb
sti
sub
cld
movsl
imul
movb
scas
pop
mov
dec
mov
in
icebp
in
ja
xchg
in
mov
xchg
loop
loopne
jne
xor
sub
pop
dec
cs
cs
and
cmc
inc
xchg
lods
jmp
sbb
add
nop
leave
add
push
arpl
std
mov
xchg
push
mov
outsb
and
mov
jb
pop
imull
xchg
cli
inc
dec
mov
mov
xchg
int
shl
jmp
sbb
push
stos
fs
sbb
dec
inc
lcall
icebp
or
pop
or
and
add
mov
fwait
jge
adc
inc
pop
jne
fs
pop
sub
int
jnp
int
push
addr16
mov
pusha
insl
imul
mov
or
fimuls
mov
fisttpll
loop
test
adc
mov
mov
insb
cmpsb
aas
sbb
xchg
out
ret
mov
or
push
xlat
or
popf
cld
test
mov
int
jge
lahf
rcrb
jecxz
push
std
cmpl
fisttpll
or
xor
push
lods
scas
fwait
adc
scas
add
shll
stc
roll
pop
insl
rcrb
pop
inc
repz
xor
mov
or
push
sub
loop
lock
cmp
jmp
cli
cld
test
repz
inc
loope
mov
lea
cmp
lahf
call
adc
ja
push
movsb
cltd
mov
jmp
int3
xor
into
sub
nop
shll
adc
push
ror
outsl
jb
stos
xchg
push
jae
repz
cmpl
pushf
icebp
sub
loop
lods
jo
stos
enter
das
jo
inc
in
xlat
das
sub
cmpsb
mov
sbb
or
pusha
cmp
cs
push
movsl
sbb
std
cmp
shr
dec
sub
das
inc
xchg
xor
mov
pop
js
mov
mov
repz
sbb
aad
pop
inc
xlat
xor
lock
cmp
test
add
sahf
out
and
cld
or
loop
jmp
and
aas
fs
xchg
push
xchg
xorb
les
push
mov
adc
mov
stos
xlat
lock
loope
cmp
cwtl
add
bound
xchg
push
loopne
add
inc
and
dec
mull
fs
xchg
add
ret
pop
movsl
jge
mov
xor
jmp
dec
pop
shlb
add
mov
dec
lret
or
jp
and
cmp
inc
loope
dec
push
cmpsl
clc
insb
cmp
pop
add
xchg
je
mov
pop
adc
stos
add
mov
push
adc
fstps
xchg
cwtl
dec
xor
sbb
fbstp
jp
imul
pushf
icebp
iret
mov
xor
inc
loop
js
out
ljmp
sbb
insb
mov
in
call
repnz
loopne
int3
repnz
cmpsb
cmc
fbstp
mov
scas
sbb
jmp
xor
popf
nop
lret
lods
mov
xor
xor
call
push
adc
add
inc
cmpsb
xor
pop
jecxz
cmp
lret
lret
bound
jns
mov
lds
and
or
mov
pop
cmp
push
pop
mov
ret
in
dec
jmp
xor
pop
sahf
jbe
mov
andb
cmp
aad
mov
dec
pusha
pushf
cmp
fsubr
xorb
xchg
divl
movsb
pop
xchg
or
cmp
add
into
mov
imul
push
pop
ret
cmpsb
adc
cltd
pop
js
enter
or
pop
mov
add
je
mov
das
jae
out
nop
shl
mov
clc
and
cmp
sub
cmc
mov
and
mov
mov
or
sti
outsl
cmp
mov
test
or
mov
mov
dec
movsl
jne
xor
add
push
fwait
fwait
push
pop
je
in
jp
dec
call
lods
dec
icebp
popa
addb
mov
lods
jle
packsswb
and
inc
mov
int3
out
lods
cmp
fildll
dec
fld1
sub
fdivl
pop
mov
scas
mov
sahf
stc
sahf
bswap
aam
cld
add
dec
and
lods
inc
xchg
and
jg
jno
xor
mov
push
jecxz
mov
adc
stc
aad
mov
mov
jae
cmp
sbb
dec
push
movsb
in
lods
jmp
lcall
hlt
xlat
cmp
testl
cmc
adc
add
cld
roll
mov
mov
call
jle
cmc
decl
test
mov
lock
out
cltd
mov
xor
insl
loope
fdivrp
xor
call
outsb
push
xor
push
mov
add
dec
inc
mov
sub
aad
xor
xchg
stos
fsubl
xor
lods
sbb
pop
and
dec
adc
lea
fistpll
or
out
jp
dec
mov
cmp
sbb
ja
cmp
xchg
fisubrs
inc
jb
cli
sbb
add
jo
pop
out
add
leave
inc
popf
aaa
adc
inc
addr16
shll
lahf
mov
andl
test
sub
cmp
aaa
out
push
cmp
xchg
fwait
pop
jne
xchg
and
jg
das
mov
push
insb
mov
adc
sahf
mov
mov
js
pop
or
mov
sub
out
ja
out
add
sbb
mov
sub
mov
jmp
mov
popa
idiv
js
gs
iret
fsubrs
sub
jg
in
in
lcall
dec
push
push
cmpsb
xchg
xor
rorb
in
push
push
in
adc
clc
call
dec
imul
in
lock
mov
pop
cmpsb
adc
cli
dec
mov
inc
idivl
daa
sbb
mov
or
or
cmpsl
xchg
sub
cmp
mov
xchg
jnp
cmp
xchg
dec
xor
test
aas
and
bound
in
dec
xchg
push
loop
push
lock
dec
clc
je
mov
idivb
and
pop
cmp
ret
adc
dec
push
in
and
mov
push
pop
jecxz
iret
mov
push
mov
pop
div
addr16
ret
sub
sub
mov
mov
pop
loop
pop
sbb
pop
pusha
pusha
nop
or
mov
fnstenv
xchg
pop
jmp
in
cmpsb
sbb
adc
jl
bound
pushf
mov
mov
xor
aad
das
jp
or
mov
bound
sub
pop
jp
jne
inc
pop
icebp
bound
push
andl
jecxz
push
xchg
jbe
popl
in
loop
cltd
std
push
pushf
jle
or
pusha
mov
or
or
je
xor
sub
mov
lret
mov
add
cltd
xor
pop
insl
aaa
dec
and
mov
cmp
dec
fistl
pop
jne
dec
ret
add
add
out
pop
repz
push
sub
mov
xchg
sbb
subb
dec
adc
pop
fldenv
ja
xlat
xchg
divb
pop
push
mov
es
cmp
sub
loopne
fisttpll
adc
xor
inc
imul
sbb
repz
insb
xor
ljmp
stc
xchg
subb
stos
jo
dec
jge
stos
xor
mov
push
push
mov
outsl
das
outsl
lahf
cltd
mov
cltd
or
das
cmpsl
mov
cmp
mov
aaa
or
add
xlat
shrl
loopne
add
loope
xor
lds
and
shlb
pop
les
cmp
mov
inc
mov
mov
push
ficoms
push
mov
shlb
jmp
icebp
cs
out
mov
or
addl
sub
in
and
ljmp
lret
sbb
dec
mov
mov
xor
mov
dec
sub
or
jmp
and
outsb
stos
test
xchg
lock
subl
iret
mov
ljmp
cld
int3
xchg
pop
unpcklps
mov
jle
lret
int
repnz
xor
dec
test
sub
add
push
ficoms
in
lret
shll
out
insb
or
mull
adcb
and
push
mov
sahf
mov
pop
outsl
and
out
fidivl
shlb
mov
xchg
inc
or
jbe
jg
dec
insb
ret
xor
vandps
add
mov
sbb
xchg
sbb
enter
and
dec
inc
repnz
dec
and
repnz
xchg
in
inc
insb
ss
pop
dec
mov
jbe
aas
and
pop
dec
outsl
and
insb
loope
jecxz
or
lahf
cli
and
jl
inc
sub
mov
mov
rcrl
mov
testl
nop
nop
xchg
cmpsl
xor
push
lods
xchg
xchg
cmp
xor
lock
iret
mov
testb
and
sub
movsl
push
fdivl
fists
stos
pop
lock
adc
mov
adc
or
ja
lea
repz
jno
mov
mov
cmp
ret
pop
aad
rcrl
insl
aad
mov
cli
inc
enter
and
push
inc
ror
or
jo
lods
fists
sub
cs
cltd
lds
sub
lahf
xchg
mov
xchg
inc
ret
cmp
daa
sbb
pop
stos
mov
cmpsl
insl
outsb
insb
out
popa
inc
sbb
add
mov
jp
gs
rclb
fdivl
mov
mov
and
ficomps
pop
xchg
xor
mov
add
out
cmp
popw
adcl
iret
mov
addr16
fstl
fs
cltd
cld
mov
mov
mov
sub
faddl
out
repnz
fs
inc
pop
mov
loop
mov
and
movsb
cmp
sbb
sti
inc
dec
leave
es
out
loop
dec
je
mov
les
mov
out
sub
orb
and
jo
ret
int
test
cmp
in
pop
mov
and
je
xor
out
inc
scas
dec
test
sti
push
jns
jnp
xor
xor
cmp
xchg
mov
dec
xchg
bound
and
pop
cmpsb
cli
in
loop
imul
fstpt
pop
addl
dec
aas
in
ja
loop
mov
dec
sub
loop
xchg
pop
sbb
ljmp
rclb
push
int
stc
icebp
fcomi
push
sbb
add
hlt
dec
add
mov
and
mov
pop
sbb
mov
mov
lahf
imul
jb
imul
repnz
test
pushf
int
outsb
arpl
sub
xchg
adc
js
repnz
pushf
daa
aaa
mov
push
mov
test
push
fisttpll
cwtl
push
into
out
inc
and
jmp
sbb
scas
call
aad
jbe
fisubs
or
cs
sbbl
add
pop
lret
ror
inc
pop
std
mov
stos
mov
ds
cld
pop
xchg
push
fsubl
mov
js
sub
ret
cwtl
sbb
test
cmp
cmpsl
push
aas
and
mov
push
inc
mov
and
js
xchg
test
jne
mov
mov
xor
inc
adc
mov
in
cmpsl
cld
movsl
les
je
or
adc
xchg
cmp
sub
icebp
int
insl
int
sahf
sbb
test
mov
out
shlb
leave
pop
dec
bound
imul
ret
out
mov
add
jo
pop
ja
sbb
or
stc
add
pop
js
mov
xor
clc
mov
sbb
pusha
cltd
mov
nop
dec
pop
or
inc
icebp
xrelease
fistpll
pop
sbbl
jl
fcoml
and
leave
cmp
sub
push
and
daa
out
pop
das
xchg
jmp
sbb
jge
xor
and
adc
ss
jne
sub
or
and
sub
int3
test
lds
fwait
ss
cmp
loope
inc
xchg
bound
sbb
repnz
popf
dec
dec
sti
and
and
and
or
jg
adc
ret
push
jmp
imul
popf
and
andb
gs
mov
fsubrl
in
sbb
mov
sti
insl
mov
sahf
jg
dec
aas
iret
inc
adc
lcall
xchg
cltd
add
mov
pusha
lods
test
jg
int3
bound
cmp
pushf
loopne
loopne
fcmovnb
mov
dec
mov
mov
ljmp
and
rcrl
sbb
adc
fdivs
pop
sub
fisttps
sub
call
mov
sub
mov
xchg
mov
mov
adc
inc
fisttps
test
icebp
sbb
ret
adc
inc
push
jne
lock
outsb
inc
xchg
and
shl
pop
sar
inc
sbb
fcmovb
mov
lret
cli
shll
mov
adc
mov
mov
cs
test
fstp
mov
mov
sbb
sarb
xchg
mov
push
dec
jne
hlt
or
loope
or
iret
sbb
js
out
or
xchg
aas
xchg
dec
sbb
and
or
arpl
rclb
xchg
stc
xor
pop
mov
jp
in
dec
cltd
and
mov
or
call
mov
mov
icebp
in
cmp
repnz
mov
jnp
cli
and
dec
xchg
shrl
and
int
or
stc
push
mov
xchg
sahf
jp
and
mov
fwait
xchg
mov
outsb
outsb
add
adc
ret
inc
pop
mov
js
fs
pop
push
inc
lret
leave
cli
cmp
enter
mov
push
pop
inc
pop
out
pfrcpit1
outsb
subl
call
stos
lret
sub
int3
sub
cmp
mov
inc
add
aad
or
or
add
insb
dec
or
pusha
jbe
imul
incb
arpl
xlat
in
dec
loopne
ljmp
adc
testb
pop
dec
icebp
add
jg
sti
pop
into
add
xor
jp
in
mov
push
xlat
mov
adc
or
mov
lea
inc
or
add
pop
adc
movsb
fists
movsb
in
cmp
lds
inc
mov
pop
jle
xchg
push
lds
out
sub
test
xor
dec
mov
and
cmp
sbb
movsb
ret
jg
push
sub
sub
cld
jbe
dec
sub
jb
jnp
xchg
movlps
in
sbb
out
mov
getsec
out
scas
lret
ret
insb
pop
sub
lods
pusha
inc
mov
sbb
add
mov
mov
dec
clc
fwait
jl
cmpsl
test
pushf
cld
ror
ss
sbb
or
adc
sahf
leave
dec
or
jns
cmp
aam
and
mov
dec
push
int3
cmp
lret
cmpb
dec
imul
stc
lods
dec
xor
adc
jne
mov
adc
xor
test
insl
fcoms
imul
jns
mov
stos
mov
loope
mov
sbb
cmpsl
jne
push
cwtl
std
loope
and
je
lods
dec
pop
fdiv
sub
movsb
aam
mov
ret
jmp
sbb
enter
cld
stos
and
lea
es
sub
sub
add
iret
stos
mov
stos
clc
mov
shll
pop
subl
repnz
xchg
mov
movsl
sub
adc
jp
in
roll
repnz
inc
push
mov
xchg
xchg
iret
mov
jmp
or
pop
lcall
scas
lock
bound
out
xor
mov
inc
sub
nop
lock
inc
adc
push
mov
outsb
lods
sub
and
push
in
rolb
mov
int3
lods
shll
mov
aaa
test
lods
lret
out
in
mov
dec
testl
mov
sbb
mov
push
icebp
test
hlt
jnp
sub
mov
jmp
repnz
fnstenv
sub
cmpsb
xchg
cmp
repz
aaa
xlat
xor
jg
dec
sub
and
cwtl
jns
sbb
inc
sub
adcb
in
cs
jle
pop
cwtl
cmpsl
push
mov
mul
and
sub
xchg
cmp
stc
lcall
pop
xchg
shll
dec
mov
shr
and
and
out
ficompl
imul
sti
cmp
out
mov
lods
outsb
shll
push
ljmp
fstpl
jb
jecxz
mov
sbb
xor
dec
jns
aaa
shll
fidivs
sub
xchg
faddl
push
mov
cmp
xor
pop
cmp
inc
sub
das
aad
push
jmp
cmpsl
add
adc
sahf
dec
sub
stos
xchg
push
lods
divl
sub
xor
mov
xlat
adc
popa
aam
push
out
inc
mov
xchg
hlt
mov
cmpsb
cmp
xchg
out
or
adc
enter
sbb
jl
sbb
stos
aad
push
in
cmp
cmp
inc
push
jmp
hlt
flds
add
sub
sbb
sub
mov
mov
pop
dec
aaa
das
ds
shll
mov
movsb
mov
imul
sub
prefetcht0
test
add
lret
insb
cs
inc
sti
sub
lret
pop
stos
enter
int
scas
lahf
add
lcall
xor
adcl
jp
xlat
aaa
fwait
rorb
dec
cs
jmp
out
pop
jnp
sbb
sbb
pop
lds
jns
xchg
add
cmpsb
rorb
loopne
and
daa
mov
sub
lea
mov
cmp
negl
filds
pop
pop
repnz
jge
xchg
in
movsl
dec
adc
sbb
scas
mov
in
dec
fstps
add
jmp
sub
xchg
or
and
mov
and
out
out
jne
cmpsb
sub
dec
pop
xor
sbb
pop
and
mov
test
dec
mov
adc
cltd
cwtl
sbb
xorb
mov
repnz
in
sub
mov
cli
fadds
movb
dec
push
pop
insl
fwait
lcall
out
pop
call
and
mov
mov
sarl
stc
inc
inc
add
movsb
addr16
leave
jne
out
adc
inc
fsubrs
mov
pop
push
cmp
dec
repnz
daa
les
dec
pop
dec
pop
add
fistl
jbe
pop
lcall
add
bnd
stos
in
or
sbb
ss
push
ja
imul
insl
cltd
or
cs
jne
movl
in
jl
mov
add
lret
cmc
jmp
push
dec
fisubrl
xor
xorb
push
fcoms
xor
in
ljmp
jmp
aam
call
in
les
leave
rorl
mov
jl
in
hlt
fildll
and
fadd
outsb
dec
xor
mov
dec
es
sub
add
jecxz
pop
dec
cmp
inc
jno
cmp
jae
imul
mov
les
add
sbb
or
and
dec
lret
je
jl
test
and
lock
lods
adc
adc
jbe
dec
adc
aad
xchg
sarb
fstl
add
ss
call
pop
test
inc
scas
ds
lock
sub
mov
mov
insb
mov
testl
mov
mov
add
cltd
fimuls
adc
cld
mov
fldcw
cmp
jecxz
ds
or
and
in
cmp
xor
dec
cmp
stos
push
loope
push
cmpsb
mov
xchg
jecxz
mov
ret
pop
movsl
sub
leave
jne
stos
movsl
add
sub
mov
subb
clc
push
lret
arpl
push
loop
lds
pop
mov
outsl
test
xchg
es
mov
andb
xor
in
scas
pop
in
fisubrs
and
nop
insb
pop
xor
scas
test
incb
fcmovu
jno
ror
popf
ret
test
mov
or
add
fs
jge
rorl
jp
fnstsw
mov
xchg
pop
lods
movsl
and
sbb
mov
call
out
pop
and
dec
je
in
imul
add
and
scas
es
addl
xlat
stos
sub
sbb
pop
out
pop
movsl
scas
cs
xchg
mov
stos
push
ret
add
outsl
shl
adc
stos
dec
inc
repz
push
sbb
enter
jns
mov
mov
je
jecxz
mov
outsb
popf
rorl
pop
push
xchg
mov
bnd
fwait
push
add
xor
inc
fsubrl
cmpsl
push
jmp
js
aaa
ret
push
sub
push
dec
xchg
ljmp
ja
inc
sarb
mov
cli
iret
mov
imulb
xchg
mov
add
in
cmp
out
out
clc
xor
shll
xor
ret
loopne
out
nop
pusha
dec
les
mov
insl
test
or
movsl
inc
aam
mov
inc
dec
fistpl
adc
pusha
enter
jno
imul
push
lahf
les
mov
fs
add
dec
cld
in
aaa
icebp
hlt
pop
rcll
adc
pop
dec
mov
arpl
dec
lds
push
pop
mov
xor
mov
add
sahf
mov
pcmpgtb
cmp
mov
mov
mov
lea
push
call
adc
cmp
inc
into
inc
mov
xor
aam
std
stos
dec
movsb
dec
adcl
mov
cmp
sar
sbb
xlat
call
call
stc
push
fmuls
mov
imul
int
push
nop
leave
gs
jns
les
sub
fidivrl
out
xchg
lcall
jle
rclb
xchg
pop
dec
cmp
cmc
pop
repnz
adc
xchg
xor
push
add
shll
dec
pop
jne
scas
aaa
fsubs
repz
jns
mov
rdmsr
sti
pop
lcall
out
mov
pop
inc
incb
cwtl
mov
icebp
and
or
sbb
arpl
cwtl
mov
imul
push
ds
sub
cmp
sbb
mov
sub
adc
mov
push
daa
dec
andl
fistpll
jae
call
push
mov
inc
xchg
lea
cmp
mov
ds
jb
mov
test
lds
xlat
sub
cmp
cmp
sbb
lea
sbb
fisttpl
fcmovbe
movsb
inc
jo
sbb
xor
push
mov
fisubs
pop
and
inc
call
scas
jp
js
daa
sub
mov
jle
push
loopne
inc
push
rdtsc
and
and
jp
mov
cmp
add
rcl
ffree
add
jl
lods
xchg
cmpsl
dec
ficoml
movb
dec
outsb
fsubr
push
or
ljmpw
hlt
mov
lods
or
filds
rclb
and
and
jg
mov
cmp
push
cld
xchg
nop
call
xlat
popl
xor
and
push
mov
cmc
adc
sub
jbe
mov
pushf
cli
icebp
clc
sti
mov
adc
stos
inc
out
cmp
icebp
jne
push
stc
in
dec
int
test
add
xor
jb
cmp
popl
jbe
xchg
stc
or
or
xchg
sbb
scas
sbb
es
or
mov
in
and
mov
or
cmp
inc
pop
aas
add
jmp
sub
leave
test
mov
cmp
scas
iret
out
push
and
loop
inc
movsl
xchg
in
sbb
sahf
ss
or
pop
out
out
sbb
dec
xor
add
mov
stos
loop
mov
outsl
sbb
jmp
shll
push
fisttpll
insb
out
daa
mov
xor
mov
adcb
test
sbb
cmp
xchg
in
jmp
jle
xchg
lahf
or
out
test
aaa
xchg
stos
imul
insb
inc
ja
dec
lock
push
push
loope
hlt
jo
mov
dec
push
cmpsb
mov
in
xlat
lock
int
cltd
popa
dec
mov
lss
jno
je
std
mov
add
es
cld
mov
xor
popw
push
jmp
testb
jmp
xor
das
outsl
test
jp
gs
pop
adc
and
ror
fmull
inc
pop
sbb
into
rclb
and
imul
push
jno
scas
pop
push
in
add
aad
pusha
jo
rolb
in
bound
lock
stos
inc
mov
nop
ljmp
les
dec
dec
jmp
pop
addr16
aam
xlat
dec
xlat
mov
and
xor
mov
xor
hlt
in
clc
in
loopne
and
sub
andl
mov
orb
xchg
rorb
mov
fnstcw
mov
mov
daa
push
xchg
test
push
data16
lcall
popf
adcl
negl
shl
push
loope
into
xor
jo
insl
inc
enter
sbb
sarl
bound
push
insl
or
mov
in
scas
in
lods
mov
mov
nop
ljmp
mov
and
les
lcall
cld
and
mov
fists
inc
ljmp
lods
fwait
cmpsb
dec
jecxz
mov
test
scas
inc
add
jecxz
and
std
pop
sarl
jmp
add
mov
int3
gs
addl
push
add
in
dec
rcrb
dec
cmp
aaa
mov
cmp
stos
stos
pop
pop
shlb
cmp
dec
cld
sub
inc
push
mov
scas
flds
lcall
insb
inc
int
popf
cmp
rcr
fs
aaa
push
push
stos
xorb
or
ret
scas
jb
cs
in
mov
and
loop
cmc
mov
inc
push
fmul
cltd
or
popf
cmp
aaa
imul
outsb
jmp
adc
or
lahf
test
add
cmp
xchg
or
popa
dec
fidivrs
cmp
adc
int3
faddp
js
test
xor
cmp
in
ljmp
push
in
inc
sbb
jl
lret
or
clc
sbb
lea
lock
mov
pop
repz
and
out
call
out
pushf
or
iret
mov
push
jae
dec
xchg
xchg
ret
out
dec
sbb
mov
mov
incb
repz
push
add
lret
xlat
icebp
stc
mov
aam
std
add
pop
cltd
pusha
xchg
aam
fcmove
cli
or
loope
pop
std
or
mov
push
cld
pop
mov
jmp
cltd
pushf
fadds
xlat
xchg
cli
sbb
out
rcll
mov
push
addr16
outsl
xchg
push
inc
shlb
adc
pop
es
dec
cmp
shll
scas
push
push
sub
mov
pop
leave
pop
pop
push
xor
push
ljmp
inc
fiadds
ret
push
aas
jnp
sbb
adc
cmp
loop
mov
sub
pusha
dec
dec
jnp
xor
insb
rorb
push
es
enter
inc
lcall
adc
cmp
dec
push
inc
cld
smsw
dec
pop
inc
lret
inc
mov
inc
outsl
push
sarl
sub
cmp
cmp
adc
cld
lret
dec
out
push
mov
test
repz
sahf
lods
jmp
dec
or
das
cmc
aad
cmp
aad
pop
adc
or
jne
jge
stc
lock
enter
mov
inc
cld
nop
mov
movl
jne
cltd
cmpsl
dec
or
add
dec
int
in
movsb
cmc
cltd
push
insl
mov
stos
ds
loopne
ja
inc
loope
ret
mov
in
popf
and
and
enter
fcoms
jo
call
xchg
aaa
enter
inc
cmp
and
out
into
fwait
jnp
fimull
lods
jnp
pop
mov
ljmp
cmp
test
test
mov
add
fwait
jmp
out
das
lods
lds
ret
mov
cs
mov
aaa
push
dec
lods
cmpsb
fdivs
jnp
bound
mov
and
out
orl
add
sbb
xor
clc
fsubrp
push
cmpsb
pop
xor
roll
lcall
cmpsl
adcl
fdivl
addr16
xor
insl
aad
in
or
push
daa
xor
ret
push
scas
or
mov
mov
mov
pusha
lahf
xchg
push
sbb
cmpsl
les
fsubr
icebp
mov
mov
dec
cmpsb
arpl
clc
cmp
icebp
xchg
lcall
push
fsubrl
mov
cli
xchg
shlb
mov
cmp
or
cli
adc
mov
aam
inc
jo
xlat
out
sub
jge
cwtl
rorl
mov
sub
arpl
std
scas
pusha
dec
push
pop
jmp
dec
es
cmp
loope
sbb
in
pop
gs
jmp
jmp
fs
fcmovnu
push
push
ja
add
sti
scas
pop
add
rolb
fsubp
stos
out
and
and
mov
pop
dec
mov
sbb
ret
fs
sti
adcb
flds
lds
mov
adc
push
and
mov
mov
fwait
jae
lcall
inc
dec
int
popa
mov
mov
jo
dec
nop
dec
xchg
loop
clc
pop
pop
mov
add
aaa
js
xchg
mov
jns
scas
adc
test
mov
cmpsb
xor
dec
jno
mov
sub
iret
or
nop
dec
pop
sub
inc
cmc
jnp
pop
testb
call
mov
cmc
nop
cltd
arpl
cmpsb
cmp
mov
scas
mov
add
adc
jl
sti
icebp
pop
and
pop
pop
jbe
decl
cmpsl
fsts
in
inc
inc
sub
mov
mov
test
es
rcr
add
inc
push
sub
sarb
adc
pop
sqrtps
sub
add
mov
push
pop
and
into
shll
aam
jb
jmp
data16
sbb
mov
xor
loop
sbb
arpl
jmp
or
pusha
mov
ficompl
pop
sbb
lods
das
leave
fmull
cmp
movsb
mov
adc
pop
test
mov
push
dec
jmp
out
icebp
cmp
adc
inc
in
stos
or
leave
std
imul
int
nop
lcall
xchg
insb
rcrl
inc
mov
cld
or
or
nop
add
mov
imul
popa
lret
loopne
push
mov
lods
mov
xor
repz
or
imul
adc
movsb
xchg
test
pop
test
fisttps
iret
imul
xchg
adc
cmpsl
rclb
dec
xor
lahf
loopne
mov
push
inc
leave
push
int
sbbl
push
and
jae
inc
enter
hlt
into
cli
adcl
cmpsb
mov
cmc
ljmp
sbb
shrl
int
int
je
pop
sub
pop
sub
inc
sub
gs
pop
mov
cmp
scas
mov
dec
mov
jecxz
and
add
fnstsw
mov
outsb
out
xor
jmp
ret
mov
rcl
cld
in
divl
sbb
imul
pusha
jae
or
adc
orl
sub
jp
adc
outsl
dec
out
inc
sbb
cmp
lods
cmp
enter
add
jecxz
push
sub
mov
inc
xchg
xor
enter
fdivr
xchg
xchg
push
or
pop
xlat
pop
in
gs
mov
adc
insb
pop
xchg
aad
jae
adcl
mov
push
fiaddl
addr16
jns
xor
adc
jno
jl
bound
insl
out
push
mov
outsl
mull
cmp
inc
inc
pop
cmpb
outsl
fidivl
push
int3
adc
in
imul
cmpsb
rclb
ja
pop
jecxz
outsb
push
dec
mov
rcll
pushf
loopne
push
addl
jnp
xchg
pop
and
pop
movsb
jg
mov
xchg
cmp
add
repnz
clc
jne
jb
push
mov
in
hlt
aad
lret
sbb
stos
and
insb
cmp
lods
or
xchg
fstl
repnz
stos
jg
push
js
mov
sbb
xchg
out
fcompl
mov
sub
stos
repnz
adc
inc
aam
push
xchg
mov
stc
shl
xchg
aam
inc
xchg
pop
dec
fwait
cmp
test
popf
push
lock
nop
int3
sidtl
js
or
ds
xchg
xor
ficoms
mov
mov
mov
xor
out
xlat
popa
faddp
adc
pop
adc
jb
mov
mov
xchg
movl
sub
or
popa
insb
or
leave
xchg
jae,pn
ja
push
fsubrs
push
xchg
push
mov
sbb
add
hlt
mov
pop
pop
in
pop
ror
or
shll
jle
adc
mov
ret
jle
dec
pushf
sarb
add
stos
fsubrs
xlat
repz
inc
push
outsl
inc
fistl
movsb
sub
cmc
sub
or
adc
lods
add
xchg
add
adc
scas
stos
fidivrl
jecxz
jecxz
push
dec
push
mov
or
je
lods
inc
push
push
in
and
inc
mov
movsb
lret
scas
sub
pop
mov
aam
dec
dec
sub
sti
sarb
imul
jbe
ss
addr16
pop
decb
mov
or
pop
cwtl
inc
imul
addr16
sbb
sbb
out
jbe
shll
or
pop
popa
pop
outsl
pop
addb
jle
adcb
dec
xor
movsb
cmp
sub
call
ljmp
stos
sti
insl
addb
dec
adc
orl
ja
pop
cmp
rcll
stos
sbb
adc
jae
sbb
das
int3
cmpsb
jnp
movsb
movsl
sub
insl
data16
pop
test
loop
push
sarl
cli
call
adc
js
jno,pt
sti
mov
sub
xchg
sub
seto
xor
or
push
mov
xor
pop
mov
sub
into
imul
ljmp
test
and
inc
outsl
push
inc
cs
add
mov
and
pop
and
xchg
ljmp
mov
sbb
dec
icebp
lea
outsb
rcrl
popa
push
pop
cmp
push
div
mov
loop
loopne
push
pop
jo
loopne
arpl
les
push
sahf
daa
jmp
std
cmpsb
sar
and
or
xlat
jle
push
add
dec
fcomps
iret
in
adc
xchg
pop
dec
lods
xchg
mov
dec
clc
jge
lahf
xchg
cltd
inc
test
push
dec
jge
out
jb
push
or
dec
scas
add
mov
lret
or
imul
ds
adc
pop
loope
sub
cmp
les
out
jp
stos
aam
pop
pop
xor
or
stos
stos
push
dec
pop
push
data16
add
out
fisubl
mov
ljmp
mov
push
lock
cmp
and
int
inc
jmp
mov
les
fwait
data16
inc
jp
loop
or
cltd
lcall
pop
movsb
shrl
pop
xor
inc
aad
inc
mov
inc
xrelease
mov
push
pop
mov
push
scas
ret
jmp
jg
jl
inc
xchg
lcall
lods
pop
push
mov
std
fs
fcmovbe
fsubrs
inc
lahf
mov
daa
jp
push
nop
in
mov
out
dec
jp
push
les
mov
aaa
mov
lods
jb
mov
pop
xchg
xor
cmpsl
gs
jnp
inc
jp
xchg
je
scas
xchg
adc
addb
xor
shlb
pop
fsubr
les
sahf
mov
std
jb
mov
dec
pop
lea
scas
lret
ss
mov
outsb
sbb
pop
jmp
xchg
mov
add
mov
shrl
inc
jmp
stos
aam
lods
mov
push
cmp
mov
popf
mov
push
cmp
sbb
sbb
add
pop
xor
xchg
in
mov
enter
jge
dec
and
push
adc
mov
aad
pop
xchg
pop
push
pop
lds
pop
dec
adc
out
xor
sbb
psrad
jns
ja
popf
mov
out
pop
sbb
scas
in
and
rol
and
insl
sarb
fdivrl
mov
mov
cmp
stos
xchg
sub
aaa
and
xchg
das
adc
out
push
repz
sti
add
repz
out
loopne
push
out
test
mov
es
inc
pop
sbb
lret
or
pinsrw
add
hlt
js
jne,pn
mov
enter
gs
subl
push
sub
ret
push
pop
pushl
adc
and
jp
cmpsl
leave
in
push
mov
xor
fmul
lret
lock
add
or
adc
movsl
add
push
jne
outsb
dec
pop
pop
mov
ret
lds
push
jg
fildll
ja
repnz
scas
adc
xor
mov
inc
jp
or
scas
fbld
mov
dec
jno
jmp
stos
out
lods
cmpsb
cld
mov
or
mov
test
les
adc
adc
cmp
fadds
jecxz
mov
or
xchg
addr16
cmp
xchg
cli
sahf
test
lcall
dec
mov
jne
shrb
mov
sbbb
push
pusha
push
je
test
das
ret
jne
xchg
stos
add
xchg
icebp
and
jmp
loop
in
jns,pn
mov
lret
sub
mov
add
xor
clc
movsb
xor
sahf
int
or
popa
test
mov
xlat
loopne
cmpsb
sbb
out
sbb
cmp
jno
mov
aam
add
imul
hlt
gs
mov
mov
sbb
or
sub
xchg
push
xlat
mov
call
sarb
pop
and
imul
or
and
adc
fs
push
cmc
mov
mov
shll
dec
test
insb
flds
adc
scas
mov
push
les
ja
mov
loop
add
cmp
call
insl
add
jb
mov
mov
inc
dec
cmp
sahf
rcrb
dec
movsb
dec
loopne
pop
je
dec
ljmp
fcoml
gs
mov
roll
aaa
into
xchg
or
xorb
jns
or
push
jle
inc
stc
sbb
imul
sub
ds
push
or
jnp
push
mov
dec
xor
xchg
inc
int
xchg
pushf
leave
push
xchg
loopne
adc
ds
gs
icebp
testl
mov
adc
sub
mov
inc
rcl
cli
add
adc
lds
movsl
mov
adc
iret
js
clc
or
dec
and
ss
xchg
inc
lret
lods
xchg
pop
cmc
pandn
fildl
sti
xchg
jp
and
push
adc
sarb
rcrl
inc
out
dec
inc
mov
stos
jp
imul
mov
out
push
push
mov
fs
shll
push
fwait
push
mov
xor
inc
clc
lahf
in
es
aam
movsb
jns
add
inc
adc
adc
nop
data16
jae
rcrb
negl
shl
mov
and
inc
mov
jnp
mov
sbb
ja
or
xchg
jb
push
sbb
pushl
mov
fs
inc
test
sbb
stc
repz
fisttps
ja
xor
inc
or
pop
push
xchg
pop
out
dec
or
movsl
nop
bound
mov
gs
into
push
in
sub
push
mov
pusha
jae
jmp
push
mov
ret
lcall
xchg
dec
lea
xchg
sub
jbe
repz
int3
stos
mov
pop
xor
fld
rolb
jl
sbb
dec
dec
xor
cwtl
push
add
aas
enter
das
push
xchg
adc
push
xor
iret
adc
mov
sub
pop
or
push
fwait
adcb
stc
mov
mov
jp
ljmp
pop
loopne
jge
popa
jb
dec
xchg
xchg
loop,pt
sbb
icebp
pop
and
pop
or
test
cmp
inc
dec
xchg
mov
cld
fildll
adc
adc
jae
jle
lret
or
out
jge
shrl
push
in
mov
hlt
or
jbe
fs
in
stc
loope
mov
sub
mov
jbe
mov
in
mov
or
lods
xchg
push
int
test
sub
rolb
mov
mov
sub
jg
add
les
jl
adc
fcomps
std
xchg
or
in
and
ror
xorl
gs
push
mov
outsl
scas
sbb
negl
mov
sub
jae
es
mov
push
xchg
add
jns
fistpl
and
cmp
mov
push
sbb
mov
jmp
push
lret
popf
cwtd
sub
scas
dec
scas
inc
mov
inc
insb
scas
movsl
popa
dec
rcrl
or
iret
insb
adc
push
fwait
in
or
orb
adc
mov
or
sahf
pop
out
mov
mov
or
andl
mov
add
push
sub
sbb
xchg
icebp
mov
jae
add
jne
in
movsl
int3
es
outsb
and
inc
mov
imul
sub
and
aad
lods
xlat
xor
pop
pop
pop
cmc
shrl
inc
cmp
cmpsl
cmpsl
mov
insl
fsubr
sbb
imul
mov
and
cmp
movsl
je
or
xchg
adc
add
test
and
add
cld
ror
cmc
mov
jb
ret
repz
xchg
dec
sub
mov
pop
test
push
and
add
push
xchg
out
push
add
clc
pusha
ljmp
data16
stos
inc
adc
or
out
mov
lcall
popf
subl
add
sub
sahf
add
int3
cmp
mov
xor
adc
les
xchg
pop
sbb
test
sub
mov
cwtl
and
pusha
scas
jae
pop
repnz
or
sub
lods
jo
enter
or
ds
jbe
pop
movsl
ljmp
mov
lods
sbb
or
sti
jns
and
push
insb
mov
loop
test
ret
adc
filds
iret
dec
mov
fsubp
xor
mov
test
xchg
ficomps
rep
push
out
test
push
jl
push
mov
and
xor
mov
sbb
inc
add
fnsave
jns
mov
ret
lods
loope
dec
xchg
push
cltd
imul
mov
leave
jecxz
js
inc
and
xchg
adc
inc
lds
mov
loope
call
jae
dec
movsb
inc
jne
pop
fistpll
dec
fnstenv
shl
mov
test
pop
aaa
jle
xor
inc
xor
or
mov
jl
notl
scas
mov
negl
in
dec
decl
neg
aaa
fsubs
rol
cmp
or
cmp
dec
mov
dec
in
popa
dec
daa
add
xchg
mov
lahf
mov
inc
mul
cmp
lds
aam
jecxz
mov
cwtl
negl
jne
xchg
stos
test
add
fldl
add
push
add
stos
insb
jbe
movsb
movsl
adc
mov
pusha
pop
ficomps
sbb
xor
xor
js
insb
popa
jmp
or
daa
test
js
mov
jo
add
mov
push
mov
lret
scas
and
sbb
iret
pop
aad
ja
push
add
pop
mov
xchg
imul
lret
xor
stc
fisttps
iret
addr16
fwait
mov
imul
cwtl
mov
mov
test
int
mov
xor
mov
jle,pn
andb
stos
fistpll
xor
xchg
fistpl
or
aam
add
and
cmp
xor
stos
rcrl
cmp
cli
fs
out
cmc
mov
jle
roll
shl
cld
sub
es
pusha
and
jmp
cltd
cmp
sarl
cs
xchg
xchg
jge
insl
and
sti
movsl
insl
push
fwait
jle
mov
jns
pop
add
mov
incb
or
adc
test
ljmp
outsb
adcl
and
mov
and
fadds
mov
daa
stos
int3
repz
fwait
sarl
mov
xor
aam
inc
das
pop
stc
shlb
test
push
mov
xchg
out
decb
mov
or
orb
inc
inc
sti
cld
jno
xchg
pusha
mov
std
inc
push
sbb
lods
popa
push
adc
mov
loopne
repz
rorb
push
mov
call
mov
fsts
popa
xchg
pop
inc
imul
cmc
mov
xchg
pop
sbbb
push
cld
into
aaa
insl
push
sti
mov
inc
mov
push
sbb
dec
inc
add
adc
stos
ss
mov
dec
dec
test
push
sahf
dec
mov
xor
xchg
xor
imul
push
pop
rolb
jo
or
pop
sahf
sub
out
cmc
push
mov
or
notb
sub
lret
lds
int3
mov
movsb
sub
add
jnp
mov
push
or
adc
jge
mov
lods
test
sbb
rep
mov
std
inc
mov
adc
jle
dec
jecxz
sbb
sbb
or
mov
xchg
fnstenv
gs
adc
adcb
and
adc
mov
mov
mov
lahf
pop
aas
movl
inc
push
dec
add
jge
dec
stc
lret
sahf
movsl
push
out
push
scas
andl
mov
jb
pop
shrb
loop
add
lea
or
rclb
add
and
std
fisubl
push
adc
std
jne
xchg
fs
pusha
jle
repz
cmpsl
sbb
inc
fmulp
ds
scas
cmp
movsl
loopne
mov
push
icebp
out
adc
inc
pop
loopne
stos
mov
sbb
test
fnstenv
icebp
mov
rclb
sub
cmpsb
repz
cmp
jg
add
icebp
jno
sahf
idiv
test
inc
test
out
jmp
mov
ljmp
push
filds
dec
or
cmpsb
sbb
xor
sub
les
lods
ficoml
daa
xlat
jb
and
insl
jmp
scas
mov
mov
jge
mov
push
pop
sbb
fldt
jns
movsb
sahf
in
lods
inc
jecxz
xor
movsb
push
and
cmp
cmp
cmp
add
xor
int
ret
scas
cli
mov
jg
lds
lods
jle
lret
sbb
mov
cld
and
cmp
jg
lret
pop
imul
pop
push
inc
lods
cmpsb
jecxz
push
fcomps
cs
cmpsb
lret
imul
shrl
arpl
and
dec
push
xchg
push
add
or
cli
popf
mov
dec
and
rol
ret
je
inc
test
je
enter
cmp
inc
mov
mov
movsl
dec
adc
xlat
xor
pop
mov
aad
xchg
lock
jg
mov
xchg
sub
pop
popf
dec
movsb
jg
cmpl
ljmp
add
mov
and
sbb
fstpt
pop
push
sbb
out
std
or
push
jnp
inc
pusha
pop
nop
push
int3
xor
sti
repz
bound
pop
pop
das
std
sbb
and
aas
inc
testl
fstpl
outsl
mov
xchg
ret
pushf
repz
cmp
push
xchg
lret
push
push
rorl
shlb
cmc
clc
or
movsl
lods
jp
mov
stos
leave
repnz
add
cmc
loop
faddl
dec
push
inc
loop
push
mov
pop
nop
rclb
andl
inc
fstps
iret
dec
cli
mov
sbb
mov
jnp
sarb
fsubs
arpl
sub
cmpsl
dec
ja
sbb
jg
fcompl
rorb
icebp
popa
fstpl
mov
dec
pop
mov
sub
push
add
push
imul
add
repz
add
push
int3
subl
loope
out
mov
pushf
xchg
repnz
int
shr
push
ja
sbb
xor
mov
cmp
pcmpeqd
arpl
push
sub
inc
out
jmp
daa
movsl
aam
mov
and
es
sbb
lahf
jg
and
add
mov
and
in
jns
add
sub
rclb
adc
push
ss
insl
push
push
mov
pop
jmp
repz
adc
mov
xor
ret
pop
icebp
jg
xchg
adc
adcl
test
sub
into
lea
inc
in
xchg
popa
jmp
and
pop
sub
fwait
and
jl
lds
push
xchg
addr16
test
or
mov
cmpsl
mov
mov
bound
cmp
inc
push
ja
sbbl
xor
pop
aas
fidivrs
mov
inc
or
pop
aaa
loopne
stos
jl
out
fildl
imul
push
shlb
pushf
jne
mov
xor
pop
adc
pop
scas
seto
sbb
sub
ret
mov
mov
js
sbb
outsl
lret
xorb
clc
testb
mov
dec
enter
jl
mov
decl
and
adc
fldl
add
cmpl
stc
push
mov
or
inc
cmp
leave
xor
in
mov
lret
add
std
repz
clc
and
rcrl
les
adc
sti
ljmp
aam
outsb
or
loope
push
mov
mov
jno
mov
xor
sub
loopw
jl
or
lret
lea
and
into
or
and
cmp
and
hlt
test
jmp
xchg
iret
xor
or
sub
jno
loop
mov
jecxz
out
mov
xchg
jae
adc
rcl
shlb
sbb
xchg
insb
adc
nop
fidivrl
pop
adc
arpl
jp
hlt
test
adc
jb
test
dec
push
dec
jecxz
mov
push
addr16
mov
and
or
ss
ror
and
jecxz
inc
pop
shr
mov
movd
xchg
fmulp
je
fucomi
cmp
pop
stos
jl
push
cmpsl
cmovne
sbb
dec
testl
stc
push
aam
add
add
mov
mov
push
pop
aas
mov
jb
rcrl
cmp
adc
mov
push
xchg
add
sbb
xor
push
nop
jg
dec
fcomi
ficoml
xorl
sub
in
lds
dec
or
pop
lret
daa
mov
aas
les
out
out
mov
cli
repnz
jae
icebp
nop
call
jg
mov
jns
mov
xchg
push
jae
stos
add
lret
pop
pop
or
and
into
jbe
mov
push
movsb
mov
push
pcmpgtb
mov
orb
clc
dec
xor
sbbb
in
lcall
arpl
aam
inc
movlps
jle
mov
adc
mov
imul
or
xchg
cs
mov
pop
mov
xchg
imul
popf
mov
fildl
push
add
movsb
fsts
add
nop
and
push
and
cmp
rcll
adc
jp
mov
cld
pusha
enter
jp
cwtl
xchg
sbb
mov
hlt
xor
push
aaa
popa
jp
out
and
jecxz
mov
or
mov
or
xchg
bound
loope
mov
ja
test
movsl
pop
repnz
ds
mov
add
and
mov
gs
inc
sub
decb
pop
movsl
cmc
jo
jl
jo
fisubrs
xchg
sbb
mov
add
mov
sbb
iret
lods
shll
orl
xor
and
inc
testb
ret
repnz
pop
pop
sbb
fsub
add
insb
or
jp
into
in
mov
popf
jg
jp
dec
lods
ljmp
lahf
shll
push
ret
jmp
sub
push
inc
jns
dec
sbb
mov
adc
jo
xchg
jp
pop
cmp
daa
stos
leave
adc
mov
xor
push
pop
pop
xchg
push
pop
repz
mov
xor
mov
outsb
fistl
sbb
add
mov
jno
inc
xchg
int3
bound
push
gs
mov
out
jl
inc
sarb
push
cmp
test
xor
xchg
and
cmpl
pop
add
cli
inc
aas
push
pop
pop
push
dec
out
adc
es
mov
mov
pop
add
in
push
adc
xchg
inc
or
add
pushf
mov
les
pop
div
daa
inc
pop
cmp
jae
inc
pushf
cld
inc
pop
lods
pop
jle
cmc
sub
loope
incl
aas
pop
je
and
int
sub
or
gs
bswap
and
imul
cmpsl
mov
test
inc
push
add
daa
call
test
mov
push
lret
std
add
bound
push
sub
adc
pop
out
jbe
cmp
sbb
in
data16
movsl
loop
jecxz
or
movsb
in
inc
adc
insl
sahf
movsb
flds
aad
sub
sub
push
mov
mov
push
iret
mov
mov
xchg
xor
jno
je
jne
add
xor
push
out
cmpsl
ffree
inc
fdivrl
lods
roll
in
jle
xchg
and
mov
cli
jnp
jb
mov
addr16
push
mov
outsl
xchg
cmc
adc
cmpsb
fnstcw
inc
mov
push
xchg
push
pop
mov
in
arpl
into
inc
sbb
and
or
xchg
mov
es
clc
sbb
mov
loop
adc
ss
addr16
icebp
and
sbb
bnd
cmc
icebp
or
xor
sub
mov
xchg
fstpl
mov
or
rorl
and
mov
popf
test
pop
stos
push
enter
pop
mov
pop
fwait
cmpsl
adc
fwait
xor
or
xchg
and
cltd
js
adc
mov
pop
sbb
xor
and
sbb
mov
ja
or
fdivr
push
jle
popf
push
xchg
das
xlat
jmp
jae
adc
repnz
or
sub
xchg
mov
sub
lods
nop
jecxz
int3
xchg
mov
daa
sti
dec
adc
mov
ljmp
adc
mov
sub
pop
int
cmpsb
mov
mov
pop
idiv
sub
in
mov
repnz
mov
cmp
mov
jmp
aas
cld
popa
xor
loop
cs
xchg
fsub
xor
or
data16
jno
testb
lcall
cmpsl
sbb
rorl
insl
aam
push
jle,pt
rorb
or
aaa
mov
mov
dec
cmp
jnp,pt
rclb
sub
jns
mov
jne
pop
sub
ret
xor
pop
mov
add
or
push
aaa
test
mov
mov
and
shl
daa
or
mov
addr16
xchg
test
push
ret
dec
add
sub
adc
pop
incb
push
mov
and
xchg
inc
in
enter
add
cmpsb
push
sub
mov
lods
adc
xchg
lods
fwait
and
mov
jecxz
mov
ret
add
pop
leave
xchg
aad
cmp
push
mov
mov
les
cmp
es
jle
adc
out
out
dec
cmp
push
sbb
out
mull
loopne
fs
shrb
sahf
dec
lods
adc
xor
adc
into
loopne
sbb
jns
fisubrs
ret
push
lds
xchg
addl
jp
cs
dec
push
pop
pop
idivl
xchg
outsb
cwtl
xchg
xchg
loop
add
dec
dec
adc
cmp
sti
cmc
sub
fwait
jle
fisubl
sub
dec
sbb
andb
cmp
insl
sbb
inc
mov
je
shr
dec
add
inc
hlt
out
cmp
xchg
push
fwait
or
fidivl
fadds
pop
shrl
add
int3
pop
push
js
jecxz
jmp
and
out
and
push
lock
or
loope
out
test
inc
leave
iret
adc
push
adc
push
inc
dec
sub
sbb
mull
xorb
leave
add
int
adc
int
rcrb
stc
sbb
add
xchg
js
pusha
stos
fsubs
jmp
jo
cmp
idiv
fbstp
int
jno
sbb
shlb
cs
and
dec
xlat
nop
sub
fst
sbb
aam
fwait
jb
adc
adc
in
dec
fs
das
push
cmp
lds
push
xor
lods
cmp
iret
iret
cmpsb
ds
jno
cmpsl
xor
movsl
fisttps
in
test
imul
xor
dec
aad
sub
mov
scas
jns
cwtl
mov
push
sahf
lahf
outsb
push
add
mov
push
hlt
pop
outsl
cs
movsl
daa
mov
iret
das
imul
dec
and
into
push
push
jecxz
shll
push
adc
js
std
mov
ds
mov
pop
sti
out
push
mov
push
andl
jmp
mov
lret
fldcw
pop
lret
xlat
aad
mov
cmpsl
aas
pop
call
addr16
lds
cmp
rcll
arpl
dec
dec
cmp
inc
and
and
nop
into
add
xchg
orl
push
mov
dec
cmp
insb
popf
jp
daa
xchg
cmp
mov
mov
inc
push
int
mov
in
pop
rolb
imull
arpl
imul
pusha
scas
mov
cwtl
int3
arpl
and
push
out
push
xlat
mov
jo
arpl
int
add
xor
fwait
jmp
mov
dec
scas
xchg
addr16
jno
inc
inc
push
mov
sbb
mov
push
ljmp
xchg
lods
or
push
xor
xchg
daa
or
jns
pusha
mov
out
inc
notl
leave
push
daa
lds
aad
data16
mov
repz
sbb
sub
ret
jmp
add
xchg
shl
insb
cwtl
dec
jp
lcall
mov
dec
lods
add
jne
adc
lods
jbe
mov
pop
sub
mov
lcall
xor
and
lcall
jo
mov
lds
sub
stos
ljmp
jno
test
inc
sbb
stc
push
jb
pop
xchg
popa
ss
dec
add
in
add
dec
mov
fdivl
jmp
mov
incl
mov
fiadds
and
sbb
daa
pop
outsl
shl
mov
lcall
clc
xor
aas
pushw
xchg
mov
adc
dec
ficomps
inc
in
sbb
mov
push
inc
imull
in
sbb
push
cmc
cmp
push
jecxz
add
das
out
cld
cmp
ret
inc
sbb
jo
mov
cmp
sti
loop
arpl
inc
push
mov
sub
pop
xlat
dec
mov
test
mov
add
cmp
sti
ds
into
dec
imul
repnz
outsl
mov
andl
jo
pop
or
mov
adc
jge
int
mov
call
std
mov
mov
arpl
add
cmp
test
int
ds
shll
cmpsb
push
and
sbb
mov
sbb
sbb
push
loope
iret
sbb
cwtl
insb
sarl
lcall
aam
loop
lahf
xchg
mov
adc
jae
sbb
adc
mov
sub
dec
adc
in
xchg
or
mov
mov
inc
data16
jg
mov
sub
clc
cltd
rclb
aad
add
sbb
daa
nop
xchg
inc
imul
adcl
inc
add
pop
fisubrl
aas
loop
imul
dec
icebp
data16
outsb
movsb
adc
lock
stos
pushf
mov
sar
ljmp
daa
scas
int3
pop
scas
mov
inc
std
dec
or
in
push
xor
repz
add
add
and
scas
or
test
lea
out
add
std
sbb
add
fsubs
inc
cmc
subb
shll
lods
mov
in
add
push
movsb
mov
cmp
dec
mov
sbb
cltd
mull
sbb
movsl
into
cs
dec
xlat
xchg
inc
jae
dec
fcomp
xchg
or
cmp
shr
sahf
pop
jbe
clc
cmp
and
idivl
pop
movsb
jmp
ret
dec
test
jge
pop
addr16
adc
cmpsb
inc
add
sub
femms
data16
mov
lea
pop
add
mov
pop
add
lods
lahf
test
rclb
mov
neg
jl
sbb
jo
push
roll
ss
ljmp
int
arpl
or
inc
jo
inc
cld
sub
sbb
mov
inc
pusha
or
adc
in
and
xchg
in
or
pop
pop
andb
xorl
jns
sar
adc
xchg
pop
mov
lret
int3
mov
xchg
shll
sarl
rcrl
push
mov
ret
arpl
lret
adc
cld
jne
test
les
pop
inc
and
adc
lea
dec
pop
into
adc
pop
mov
xchg
or
mov
ret
cmp
stc
sbb
idivl
call
sub
and
lock
inc
test
adc
push
or
push
add
xchg
inc
jg
jecxz
xor
and
les
bound
push
jmp
je
mov
dec
xlat
dec
ret
and
mov
mov
lret
test
inc
pop
adc
inc
in
mov
repz
les
inc
dec
js
jne
repz
sbb
inc
mov
data16
fwait
arpl
jle
mov
mov
shlb
mov
aas
pop
mov
iret
pmuludq
stc
stos
mov
dec
dec
dec
mov
add
fwait
push
fistpll
cmp
dec
negb
movsl
fstpl
pop
popf
fmulp
mov
sti
repnz
lock
aas
cli
push
fs
das
xchg
mov
scas
and
mov
sbb
movsb
xor
pop
int
jmp
jl
push
lret
fwait
push
sbb
jmp
xchg
in
dec
sub
lea
or
mov
push
mov
inc
cmp
xor
in
adc
jb
xor
mov
push
fs
jmp
pop
rcll
jl
push
inc
enter
sbb
iret
jmp
mov
call
mov
fbld
xlat
mov
nop
xor
inc
mov
and
std
int3
inc
lea
jmp
pop
hlt
popa
pop
jae
iret
leave
fs
in
and
rolb
stos
sbb
jmp
in
jg
pushf
rcll
dec
ds
testb
adc
cltd
loopne
loope
sti
in
and
and
jle
and
ds
das
pop
mov
xchg
cwtl
cmp
mov
imul
testb
sub
mov
lahf
mov
push
sbb
push
inc
mov
inc
mov
pushf
mov
pop
or
add
push
ja
jmp
adc
ret
cs
ss
mov
push
inc
inc
and
test
fisubl
imul
dec
lods
mov
sbb
mov
xor
fstpt
loopne
xchg
xor
add
xchg
mov
addr16
sbb
pop
imul
add
mov
pop
xor
fldt
and
pop
dec
aam
lods
xor
int
dec
test
ljmp
rclb
sbb
std
cltd
lock
fstl
test
fsts
xor
in
stos
push
stos
push
mov
rcrb
push
aam
jno
sbb
jbe
or
movlps
or
xlat
cld
mov
out
or
pop
inc
in
mov
ret
or
inc
out
icebp
aas
cli
pop
sbb
add
jnp
xchg
das
mov
dec
ficomps
or
and
test
es
add
cmpsb
loop
lock
pop
fmuls
sbb
add
cli
and
inc
mov
iret
dec
les
les
jb
loop
and
adc
xlat
push
pop
fwait
mulb
xlat
jp
cld
std
xchg
jp
inc
push
psubsw
xchg
aam
sbb
test
shlb
lret
arpl
fdivl
and
lods
xlat
cmp
xor
movsl
lock
jg
jo
outsb
adc
push
push
nop
stos
ja
xchg
xchg
test
push
mov
push
jae
jns
addl
add
jp,pt
jmp
scas
dec
orl
cmc
or
outsl
shll
xchg
clc
cmp
ljmp
push
roll
cmpsb
cmp
pop
adc
subl
in
sar
pop
jnp
push
push
out
les
xchg
xchg
and
loopne
out
xchg
mov
cs
and
orl
pop
cmc
lds
push
xchg
fildll
scas
stos
and
mov
ss
jae
cmpsb
jl
mov
mov
mov
fnstsw
push
sbb
fistpll
mov
or
jg
jne
mov
sub
fst
adc
call
lahf
mov
dec
add
xchg
xchg
xor
loop
xlat
push
ja
test
ss
sbb
cltd
ret
xor
xlat
jo
add
sti
cs
orl
jmp
arpl
mov
sbb
sub
icebp
fsub
pop
sbb
je
decb
jnp
jl
stos
and
std
nop
mov
or
sub
inc
adc
daa
das
adc
push
aad
dec
pop
bound
outsl
cmp
aad
add
dec
push
in
loop
lahf
and
adc
outsb
add
pop
scas
mov
es
lock
pop
and
outsb
imul
rolb
sub
adc
mov
movsb
jae
daa
jmp
dec
pop
mov
ljmp
imul
lods
sub
mov
outsl
mov
cpuid
pushf
xchg
lea
shll
xchg
xor
inc
fwait
pop
adc
sub
jae
xchg
shll
jns
dec
insb
mov
add
adc
fistl
pusha
pop
cwtl
jecxz
cmpsb
jp
loopne
addb
shll
sub
xchg
test
jp
outsl
inc
addl
mov
repnz
into
jno
lahf
mov
imul
jnp
in
mov
iret
pop
pop
ror
mov
or
jg
in
outsl
out
test
inc
cmp
orb
aas
cmpsb
mov
fnsave
lcall
mov
stos
ret
dec
mov
jmp
in
idivb
test
sbb
xchg
mov
out
shll
or
pop
add
clc
jmp
or
sbb
xor
mov
pushf
hlt
insb
inc
cmpsb
dec
and
dec
ja
jno
adc
and
sahf
std
xchg
out
je
mov
cmp
rcrl
icebp
test
dec
orb
call
imulb
mov
sbb
stos
mov
push
orl
subl
xor
cld
dec
bound
push
rcrb
push
orl
mov
push
test
popf
insl
int3
das
in
cmp
jecxz
sarl
add
std
sbb
inc
inc
fadd
stos
mov
mov
sub
push
mov
test
das
pusha
in
fsubrl
aam
mov
rorl
ds
pop
lods
leave
fcmovnb
and
repz
xchg
xchg
mov
sub
outsl
out
cmc
scas
mov
push
test
es
add
mov
dec
jbe
addl
out
mov
fisubs
jne
add
adcb
popf
sub
outsb
mov
aam
push
movsl
sub
xchg
xchg
lds
fnstsw
push
clc
jbe
and
jge
inc
xor
jg
imul
sub
or
and
jle
shll
jge
clc
mov
push
or
fimuls
jle
xchg
fs
fcoms
push
adc
lahf
adcl
or
and
xor
loop
push
xor
xchg
inc
jmp
pop
fld
into
mov
pop
cli
jl
push
lahf
insb
js
lds
sub
sbb
subl
mov
sub
shll
fdivrp
js
popa
and
pop
shrb
pop
inc
sarl
adc
xchg
xchg
cmp
insb
pop
push
push
test
out
pop
xor
mov
js
fsin
push
imul
or
cli
scas
and
xchg
jecxz
stos
add
fs
loop
mov
or
jle
xor
mov
sbb
push
adc
mov
loope
fistpl
aaa
icebp
test
mov
sub
mov
cmp
lods
out
jb
xchg
push
aad
mov
mov
pop
adc
jge
dec
test
loop
fs
insl
lds
aas
push
movsl
mov
mov
cli
mov
enter
pop
incb
cmpsl
incl
add
out
sub
loop
insb
mov
mov
rcll
call
or
dec
lods
rclb
adc
loop
les
scas
lods
scas
xor
push
insb
sbb
ficoms
fs
mov
into
xchg
mov
outsb
push
adc
add
sbb
jl
fisubs
jg
insb
aam
sbb
lods
ja
mov
jnp
repnz
mov
lock
adc
dec
jo
mov
movsl
movsb
pop
scas
shrb
cmp
or
call
loopne
push
lea
lret
jmp
loop
dec
repnz
xchg
ljmp
mov
adc
cmp
insl
dec
aaa
xor
inc
inc
push
cmp
xor
jae
dec
idivl
mov
stos
fs
idivl
xchg
dec
jae
pop
xchg
leave
cmp
lods
jle
mov
incb
sti
jle
mov
push
xchg
and
lds
xlat
mov
mov
shlb
or
mov
loopne
mov
xchg
mov
fildl
ljmp
cmp
enter
int
jge
das
xchg
mov
fidivl
jge
movb
fmul
pop
jl
jl
mov
xor
mov
jo
js
pop
mov
push
push
shrl
sub
outsb
or
popf
popf
imul
xlat
xor
into
sahf
and
lahf
lcall
in
jle
andb
ret
pop
or
test
cwtl
xchg
sub
push
je
dec
in
mov
jl
jecxz
in
push
jne
or
pushf
addr16
shl
popf
xchg
jg
daa
dec
xchg
das
pop
aaa
js
jae
jo
xor
subl
inc
cltd
add
enter
addb
mov
aam
int
add
mov
std
mov
cmpsb
mov
jmp
hlt
pop
jo
lock
loop
lea
dec
mov
test
sahf
fs
clc
idivb
iret
jecxz
int3
fdiv
enter
inc
jbe
sbb
fs
mov
lock
andl
ret
lahf
or
scas
mov
test
int3
push
add
mov
sub
or
adc
roll
inc
lret
scas
sti
out
dec
sbb
loop
out
cmp
lcall
or
cwtl
and
xor
aad
loopne
in
jnp
in
jp
push
stos
dec
ljmp
outsl
cs
outsl
mov
cmpsl
dec
arpl
pop
rcl
push
inc
lea
js
shrb
push
mov
repnz
call
xor
cmpsl
repnz
in
outsl
fsubs
mov
stc
cmpb
outsl
mov
add
sub
movsl
mov
pop
aas
popa
add
rcll
aaa
push
imul
sub
xchg
add
mov
add
push
mov
jecxz
mov
mov
cltd
sub
int3
loopne
and
sub
lods
popf
pop
call
push
mov
movsb
inc
cltd
and
adc
jb
mov
sti
popa
or
in
jne
pop
mov
int3
jp
inc
sar
and
loope
xchg
cs
sbb
pop
rcrb
adc
xor
sarl
mov
mov
repz
out
pop
testb
jno
inc
inc
mov
test
ds
stc
into
xor
sub
outsb
jbe
jo
jge
aad
dec
nop
push
shl
pop
jp
add
in
mov
popf
js
addr16
fscale
inc
lret
adc
movsb
xor
fnstenv
mov
cmc
outsb
mov
pop
notb
out
out
push
int3
and
push
mov
test
dec
mov
sbb
add
push
repz
cmp
out
lea
or
lahf
xor
sub
dec
push
or
popf
and
enter
dec
and
xchg
cmp
je
aam
jmp
hlt
fldl
arpl
pop
jge
add
mov
push
mov
pop
les
sbbb
mov
dec
ffreep
pop
in
fldcw
xchg
push
inc
cmp
push
lret
push
xchg
mov
lcall
sar
sub
das
xor
mov
pop
bound
or
or
inc
ret
cld
inc
xor
inc
fists
in
xchg
jne
sub
ret
xchg
inc
jl
dec
jbe
push
in
iret
push
or
int
dec
xchg
push
inc
imul
add
pop
clc
fisttps
add
leave
pop
inc
hlt
push
scas
hlt
sub
repnz
adc
push
call
jnp
xor
mov
mov
cmp
inc
dec
out
sub
or
jle
fdiv
outsl
adc
cmpsl
mov
pop
imulb
jbe
bswap
push
sub
ret
jle
jae
pop
lds
and
mov
push
enter
push
enter
outsb
test
push
std
ss
sarb
pop
sbb
shlb
inc
sub
out
addb
sahf
div
in
push
arpl
cmpb
movl
insb
divl
fisttpll
lods
shrb
or
and
sbb
push
add
hlt
cmp
and
lods
xor
rorb
sub
jge
mov
sub
cmp
out
fists
pop
fwait
pop
push
sub
and
outsl
inc
xchg
enter
cld
cmp
sbb
jo,pn
movsb
pop
xor
ret
jle
ret
pop
push
lea
mov
or
push
inc
jl
mov
jae
clc
push
insb
lods
mov
or
cmp
or
in
and
ljmp
in
dec
xor
js
enter
out
sbb
sbb
mov
pushf
pop
aaa
pop
in
pop
ljmp
sub
stos
and
dec
out
dec
iret
cli
ljmp
cmpsb
jno
pop
xchg
mov
jle
adc
push
cmp
imul
xor
sti
scas
inc
xchg
jae
or
test
cmc
pop
sahf
xchg
pop
add
mov
leave
repz
sub
pop
cmpsl
xchg
or
es
xor
in
mov
arpl
xor
push
cmpsl
mov
push
cmp
or
and
popa
imul
mov
mov
cmp
mov
jns
or
jl
or
lea
les
sub
cs
and
in
nop
fsubl
ja
ds
pop
jge
aad
cmp
mov
cmp
pop
sub
pop
dec
lods
xchg
sub
sub
out
jne
cs
lock
rcll
mov
movsl
mov
fistpl
pop
idivb
shl
out
pop
fbld
shrb
and
mov
test
fwait
mov
push
xchg
jnp
inc
ss
pop
or
ljmp
ficoml
sub
pop
inc
out
out
jne
mov
jo
sbb
lret
cltd
cmp
fbstp
lahf
ljmp
lods
ljmp
lds
clc
data16
negb
sarl
jb
clc
repnz
lret
pop
aad
in
ds
ja
and
sub
jno
jns
xor
push
out
inc
and
mov
scas
mov
repz
aaa
jl
cmp
cmpsb
sbb
or
cmpsb
adc
and
sub
mov
mov
in
push
adc
xchg
mov
pop
mov
add
xchg
pause
mov
in
fnstenv
and
ljmp
inc
data16
lcall
sbb
pop
lock
or
mov
pop
dec
jl
mov
and
pop
mov
add
and
or
lods
push
adc
jns
fwait
cs
mov
push
cld
adcl
push
cmp
dec
or
mov
jge
cmpsb
pop
sub
jg
xchg
decw
push
neg
out
mov
ss
out
lcall
sti
xlat
add
jno
mov
inc
mov
insb
jo,pn
cmpsl
addr16
inc
jge
in
iret
add
add
roll
roll
mov
ja
jae
jp
jo
xor
in
cltd
dec
xor
pop
aam
pop
clc
fyl2x
xchg
je
xor
icebp
repz
mov
stc
in
cmpsl
inc
push
in
pop
scas
mov
fcomps
jbe
fsubp
xchg
mov
mov
fisubl
mov
out
insb
loope
mov
mov
adc
shlb
jo
cmp
sti
das
dec
jge
clc
push
hlt
in
imul
lahf
sub
or
sahf
scas
test
and
push
xchg
lods
cli
and
aaa
iret
jle
loop
lahf
cmpb
xchg
adc
or
inc
adc
fld
cmp
stos
push
test
test
notb
mov
jnp
sbbl
jecxz
mov
mov
imul
push
mov
pop
mov
xor
dec
jp
push
pop
lret
shlb
push
pushf
shll
add
adc
sbb
dec
adc
rcrb
std
add
jg
cltd
sahf
rcrb
scas
xchg
xor
xchg
xor
fwait
int
outsl
jne
loopne
push
cltd
or
loopne
mov
inc
sub
sbb
inc
mov
adc
das
dec
mov
outsl
inc
or
jmp
xchg
sub
repnz
bound
push
imul
xor
adc
aaa
pop
gs
or
fs
outsl
pop
add
outsl
lea
fnstcw
dec
cmp
mov
pop
pop
lock
call
scas
xor
fucom
cmp
xor
or
mov
mov
sbb
xor
sbb
movsb
movl
aas
subb
dec
enter
sub
jge
iret
aaa
outsl
mov
dec
pop
xor
es
pop
ret
dec
push
into
push
aaa
adc
imul
xchg
mov
loopne
mov
imull
jno
adc
leave
pop
inc
add
sub
stc
adc
add
cld
jo
xchg
xor
leave
out
mov
xchg
add
test
add
and
xchg
lock
ja
cwtl
push
out
std
pushf
repnz
mov
loope
pop
mov
inc
push
add
inc
xchg
xchg
push
movsl
cli
mov
dec
dec
imulb
mov
jnp
and
test
rolb
in
iret
push
in
sahf
and
push
mov
jmp
inc
xchg
sub
adc
mov
repnz
jg
pop
jge
cmp
inc
mov
mov
stc
mov
mov
sahf
repnz
adc
test
fcomps
jg
pop
jl
test
push
mov
std
and
pop
xor
pop
out
fdivrs
callw
sahf
jbe
into
int
cmp
ss
test
pusha
inc
sub
pusha
xchg
scas
mov
xchg
ret
mov
mull
movb
xchg
in
jnp
cmpsl
push
jns
lret
push
fidivrl
sbb
ljmp
in
pop
xchg
test
imul
popf
cmp
jo
cmpsl
xchg
xchg
mov
inc
loopne
add
inc
popf
jl
mov
aam
dec
sub
and
mov
lock
push
decl
stos
ds
packssdw
xchg
mov
movsl
mov
idivb
sarl
push
dec
lods
repnz
lock
pop
dec
pushf
jl
mov
adc
popf
mov
ret
pushf
push
outsl
inc
loope
sub
sbb
push
test
pop
cmp
or
mov
rcll
std
andl
ss
push
lcall
mov
cmp
popf
mov
xchg
sub
pop
jp
inc
push
jmp
jnp,pt
cmpl
add
xchg
outsb
add
cmpsl
xchg
vcvtsi2sdl
push
add
push
or
sbbb
call
imul
lock
jmp
dec
mov
xchg
outsl
xchg
sbb
rorb
mov
loop
push
addr16
and
cmp
scas
ljmp
cmp
rcrb
rep
add
mov
dec
pop
adc
sub
dec
sub
pop
test
mov
dec
sti
push
mov
adc
inc
mov
mov
push
idiv
mov
sub
daa
xor
out
stos
sbb
pop
lcall
imul
add
scas
aam
xorl
jmp
test
mov
leave
cli
adc
mov
push
scas
xlat
dec
pop
push
dec
and
insb
jecxz
mov
pop
push
mov
jbe
scas
add
jl
std
shll
outsb
mov
mov
les
fsubl
rcrb
and
into
or
call
pop
cmp
cs
mov
mov
xchg
and
in
out
adc
test
loope
push
cmp
ret
fnstenv
push
push
jle
decb
leave
push
stc
cmp
xchg
sti
adcb
add
rcrl
pop
sbb
cld
pop
dec
repz
push
pusha
gs
into
push
add
push
push
sbb
jp
or
add
mov
pop
add
imul
shrl
mov
xor
xor
insl
dec
test
mov
fstps
xchg
js
xchg
add
jb
shll
xor
mov
dec
incb
hlt
xchg
push
sahf
push
dec
pop
outsb
jae
xchg
insb
popa
stc
stc
addl
nopl
insl
cld
insl
fsubs
push
dec
pop
nop
jp
xchg
dec
mov
pop
dec
mov
inc
pop
mov
cmp
pop
or
xor
sti
xchg
in
rcll
jmp
sarb
inc
inc
cmp
xor
cmp
int3
add
xchg
shlb
xor
subb
loope
pop
movq
xor
insb
sub
mov
int3
cs
push
icebp
sbb
rol
xor
mov
test
push
addr16
pop
xchg
cmp
in
pop
push
cmp
mov
sub
shl
mov
stc
sbb
enter
hlt
mov
bound
dec
movsl
dec
sti
or
mov
pop
pop
mov
scas
add
xchg
clc
out
pop
inc
inc
xchg
sbb
pop
mov
xor
fiaddl
bnd
pop
dec
xor
xchg
pushf
icebp
ret
out
das
jle
jge
lret
ret
mov
jle
cs
das
jne
cmp
lods
sbb
int3
adc
movsl
pop
sbb
jae
dec
jb
clc
cmp
sub
mov
and
imul
shlb
jno
mov
dec
sbb
sarl
add
xor
mov
and
hlt
inc
jns
mov
out
inc
mov
mov
dec
xor
dec
jnp
mov
mov
xor
stos
jns
sbb
fcompl
out
imull
cmc
add
adc
dec
jmp
cmp
push
add
repnz
mov
stos
iret
push
push
and
cld
cli
outsb
shll
push
add
dec
push
cwtl
xchg
subb
add
dec
push
inc
adc
cli
push
adc
les
std
cmp
jbe
fsubrl
add
fistpl
imul
jae
jmp
xor
daa
cmp
fldenv
pushf
sbb
sbb
and
repz
adc
xchg
pop
jns
push
in
adc
sub
popa
aas
mov
mov
into
mov
repz
or
xchg
psubb
mov
pop
inc
decl
repz
roll
ficompl
jmp
jbe
dec
dec
imull
aas
in
mov
sub
mov
movsl
pop
movsl
inc
lea
pop
pop
mov
inc
or
lcall
push
pop
nop
incl
iret
cs
sub
or
xchg
xchg
fsubr
mov
sbb
cli
fmul
stos
jnp
into
into
and
pop
hlt
hlt
adc
jg
jecxz
cmp
shr
and
sbb
cmp
xchg
jecxz
push
test
dec
jbe
or
inc
fsts
and
les
stc
mov
inc
sub
rolb
dec
dec
ret
aaa
pop
mov
sbb
sub
inc
cwtl
cmp
pop
xchg
push
dec
jecxz
lcall
lahf
outsl
xor
and
adc
xor
pop
test
addb
clc
adc
insb
fadds
pushf
inc
push
pop
push
sahf
and
mov
lds
add
jns
enter
popf
flds
enter
dec
xchg
inc
jmp
dec
fnstenv
ret
enter
fistpll
frstor
daa
fisttpl
mov
adc
adc
arpl
enter
add
cs
jp
pop
cmp
icebp
cmp
roll
icebp
scas
or
ret
ds
scas
stos
clc
mov
imul
and
jbe
cld
dec
cmp
sbb
and
test
pop
popa
jmp
pop
int
push
mov
mov
das
clc
or
ficompl
daa
inc
fstpt
mov
out
mov
xchg
js
sub
out
xchg
sub
dec
movsb
dec
std
inc
add
or
xchg
insl
roll
push
ja
sub
cli
lahf
lea
xor
dec
rorb
aaa
jb
es
pop
push
cmp
daa
outsb
mov
xchg
test
xchg
mov
daa
sub
sbb
out
dec
aad
lret
inc
test
xchg
and
pop
arpl
pop
inc
jae
call
push
outsl
test
push
pop
mov
cltd
cld
xor
cli
mov
cmpsl
das
sub
cmp
or
sub
call
pop
arpl
lock
aas
scas
icebp
hlt
jo
movsl
ljmp
or
lret
movsl
aas
mov
in
fisubs
xchg
lret
and
mov
imul
mov
cwtl
into
add
pop
rcr
push
ss
insb
mov
lods
addr16
mov
jb
and
jmp
sbb
lret
pop
roll
nop
xchg
xchg
dec
sub
mov
mov
pusha
cmp
fnsave
adc
jg
fadd
cmp
sbb
ret
das
xor
into
lods
fisubrs
mov
jae
es
rcl
stc
aam
xchg
fwait
jp
adc
test
and
xchg
jmp
cmpsl
and
int
aad
ficoml
into
jle
xchg
fadd
jmp
push
jecxz
aam
jae
out
jno
idivb
cmp
frstor
or
les
adc
repnz
and
or
xlat
sub
aas
jge
xor
xchg
xchg
cld
or
movsl
pusha
int
or
push
sub
les
in
das
movb
in
push
mov
call
enter
pop
test
push
ret
lods
mov
insl
pop
lods
lret
pop
dec
hlt
xor
push
pop
in
mov
push
cwtl
jmp
dec
and
outsb
mov
or
nop
cli
adc
data16
adc
mov
and
add
mov
xor
addb
clc
negl
aas
mov
xchg
in
cld
sti
into
mov
pop
data16
andb
adc
fdivrl
in
or
sub
xchg
xchg
inc
popf
fnstenv
stos
ret
rolb
lods
gs
rol
mov
mov
and
push
arpl
popa
sbb
xchg
cwtl
or
xchg
inc
ror
notl
test
adc
jmp
mov
inc
jp
fwait
add
inc
xor
or
int
js
insl
mov
mov
xor
mov
jmp
mov
dec
popa
and
fcoms
int
jg
jnp
fstpl
jno
push
lret
stos
in
out
mov
popa
jbe
rorb
out
xchg
pop
jae
cs
xchg
pop
sub
rorl
cmp
ret
and
cmp
mov
cs
cmpsl
push
push
in
and
adcb
and
aad
ds
sub
fwait
adc
dec
jl
mov
adc
mov
pop
sti
push
imul
jmp
jp
jnp
int3
out
into
push
popl
fildl
and
loope
adc
xchg
mov
iret
js
sub
push
add
int
cwtl
std
imul
cs
jbe
dec
cld
mov
push
in
repnz
sbb
dec
popa
fidivrs
and
sbb
movl
jae
sub
xor
stos
dec
repz
cmp
ja
ret
loopne
test
sub
adc
pop
movsb
dec
push
cld
fwait
jg
lcall
adc
fsts
xlat
test
sub
mov
mov
xchg
dec
leave
es
jge
cmp
rorl
out
xor
or
cmp
push
stos
push
lods
sbb
push
mov
mov
adc
cmpsl
push
cmpsl
cltd
insl
nop
jmp
push
inc
fisubs
and
xchg
movsl
loope
mov
jp
mov
mov
scas
mov
lret
or
mov
add
inc
data16
sub
test
mov
dec
jp
cmpsb
lds
sti
ror
cld
outsb
fxch
cmpsb
dec
loop
xchg
push
adc
or
adc
xchg
mov
adc
pop
xor
xlat
and
nop
push
mov
testl
lcall
mov
jbe
aam
fiaddl
sbb
pop
dec
test
lea
lahf
xchg
xchg
sarl
mov
push
cwtl
and
xchg
pushf
orl
test
clc
fmull
std
shll
jns
or
bnd
pop
sbb
imul
stos
mov
dec
lds
xchg
ja
scas
pop
pusha
jae
je
scas
dec
repz
fnstenv
fildl
jb
mov
rcrl
test
jnp
sbb
push
and
mov
sub
xor
cmp
xor
mov
mov
inc
pop
and
test
mov
or
pop
int
movsl
cmp
roll
addr16
inc
ds
jge
or
fnsave
and
gs
outsl
fists
dec
inc
ret
inc
out
ret
lods
lcall
lods
push
dec
std
inc
pop
imul
jle
adc
call
add
and
fs
mov
enter
mov
aad
add
gs
add
cs
and
mov
pmaxub
in
adc
in
in
adc
dec
xor
in
sub
mov
fsts
adc
aas
out
xor
rolb
cld
inc
lock
cld
jp
cltd
mov
sub
jnp
add
repnz
jecxz
inc
jp
movsb
xchg
out
sahf
mov
dec
mov
dec
jne
fcompl
fstps
cltd
jb
mov
add
mov
sub
pop
lods
imul
jno
xchg
int
pop
in
xor
fmull
and
dec
and
cs
lods
mov
cmp
fbstp
adcb
inc
leave
daa
xlat
out
xor
xchg
inc
fdivl
inc
sub
ret
leave
lcall
loope
aaa
mov
rcrl
popa
and
in
mov
orb
hlt
pop
jae
mov
arpl
dec
in
lods
and
xor
adc
sbb
mov
sub
inc
icebp
ds
addr16
imul
mov
lods
daa
lahf
jecxz
lcall
hlt
popf
inc
jle
stc
jl
ljmp
lret
cwtl
mov
mov
push
push
jge
xchg
adc
stc
push
cmp
xchg
jb
idivb
xchg
inc
add
inc
loope
nop
cltd
aad
call
pop
and
xor
out
pop
stc
jne
push
mov
sub
stos
hlt
cmp
rclb
mov
into
or
test
cli
jmp
xchg
jle
xchg
sub
imul
inc
cmp
insb
nop
mov
jae
cmp
ss
gs
add
daa
pushl
jp
dec
dec
xchg
cmp
xchg
or
mov
aaa
aas
mov
pusha
xorb
pop
es
andl
popa
jl
xchg
test
vpaddusw
pop
inc
into
inc
push
pop
push
dec
outsb
stos
push
adcl
xor
or
insl
dec
cwtl
and
and
ret
ss
mov
ret
cmp
iret
cmp
pop
incl
loop
ret
rcrl
adc
jno
mov
pop
inc
in
xor
sub
out
sti
add
mov
loope
xor
orb
adc
fsts
adc
call
sbb
push
add
mov
xor
loop
mov
pop
add
mov
cmp
or
pop
inc
sbb
repnz
outsl
inc
daa
cwtl
and
int
clc
xchg
icebp
pop
les
jno
ss
xchg
adc
xorl
pop
repz
ret
cmp
cwtl
pusha
sub
jno
lock
dec
outsb
les
lahf
punpckhbw
insb
ss
inc
cmpsb
cmpsb
or
iret
mov
mov
daa
pop
lods
sbb
sub
fs
enter
roll
nop
pop
adc
inc
or
mov
arpl
subl
hlt
inc
inc
push
mov
orl
loopne
cmp
jae
xchg
je
stc
cltd
sbb
add
loop
fdiv
enter
dec
jge
pop
repz
add
repnz
ret
inc
test
arpl
add
push
mov
sbb
add
daa
jg
insb
stos
add
or
icebp
jns
icebp
loop
stos
mov
ds
xchg
adcb
addr16
imul
adc
out
inc
int3
inc
scas
fadds
loope,pt
pop
fnstenv
js
sbb
and
xchg
mov
xor
iret
push
mov
popa
pop
fsubrl
leave
xor
test
sahf
jmp
adc
rol
xor
out
mov
nop
fnstsw
adc
add
mov
ja
mov
call
lret
out
int
sbb
cmp
icebp
inc
push
or
inc
sub
xchg
push
jp
in
lret
repnz
movsl
and
sub
xlat
lock
pushf
jb
imul
cs
push
inc
jge
je
push
sub
cmp
fistpll
jle
iret
call
cli
lret
pop
rcll
adc
inc
out
jns
and
jne
aam
icebp
out
lods
movsb
inc
fldenv
insl
fwait
call
xor
inc
in
or
inc
inc
adc
loop
xchg
rol
sub
xlat
dec
or
dec
cmp
pop
pop
int
outsl
pop
sbb
xor
mov
cli
xor
cmpsl
jg
int
shl
xor
jb
push
outsl
mov
xchg
adc
or
xor
jmp
adc
inc
sub
repz
pop
push
ret
or
pop
mov
mov
push
cmp
repz
shll
inc
sbb
mov
std
in
lahf
inc
mov
cmp
jne
adc
mov
xor
cli
jo
addr16
mov
dec
cs
sbb
push
mov
rorb
pop
scas
add
cmp
fld1
cmp
sbb
cmp
outsb
or
push
test
outsb
mov
cltd
xchg
cmp
int
pop
mov
adc
adc
mov
lods
scas
testb
fsubrl
jle
mov
mov
pop
insl
inc
add
add
dec
xor
lcall
mov
pop
xchg
movl
push
xor
push
xor
xor
out
mov
add
nop
roll
scas
or
es
add
sbb
sub
lods
push
jnp
cs
pop
rorb
es
insl
sub
mov
lds
push
xchg
push
jg
push
andb
dec
fwait
inc
inc
lock
sbb
mov
jl
hlt
pop
outsb
jb
inc
push
inc
pop
cmp
jmp
jne
add
push
fsubp
aad
pop
inc
cwtl
movsb
pop
out
push
xchg
mov
leave
pop
std
mov
shr
ret
inc
loop
lds
mov
mov
lea
or
in
fcomps
rolb
leave
das
cmc
sbb
lret
pop
jge
out
sbb
mov
sarl
aas
mov
imul
xchg
int3
mov
inc
pushf
cmpxchg
unpckhps
dec
dec
or
mov
ror
xor
pop
mov
inc
les
xor
xchg
std
lret
pop
jb
xor
inc
test
outsb
jl
or
scas
cli
sbb
stos
adc
cmp
xchg
cmp
jmp
mov
xor
mov
cmp
xchg
enter
adc
les
xor
icebp
jmp
clc
mov
ficompl
lret
imul
add
xor
push
js
or
lret
xchg
pop
lahf
push
sub
test
add
dec
or
repz
lods
jle
aaa
lahf
xlat
dec
inc
xchg
ja
jle
jae
in
xchg
jp
iret
xor
test
fists
add
push
jl
add
es
lret
push
stc
push
sbb
xchg
mov
leave
dec
int
xchg
lods
mov
pop
jno
pop
push
push
sbb
lock
push
nop
push
les
sbb
inc
push
mov
and
mov
push
jno
imul
outsl
mov
mov
lock
mov
ret
movsl
test
push
jl
or
test
xchg
pop
add
mov
mov
pop
or
pop
sahf
xchg
aad
mov
xor
mov
out
mov
jnp
inc
sbb
cmpsl
sarb
mov
jecxz
lahf
xchg
xor
push
fisttps
xchg
out
mov
adc
mov
sarl
mov
add
loopne
in
cmc
add
popf
jnp
inc
mov
test
or
jnp
mov
cmc
mov
shr
jne
lcall
loop
adc
cmp
pop
sub
iret
test
jno
xchg
sahf
jno
arpl
fcoml
movsl
subb
xchg
mov
sub
rolb
mov
movsl
dec
mov
cmp
fstpl
cmpsl
out
xchg
push
icebp
sbb
dec
lahf
xchg
jl
es
inc
rcrb
sbb
pop
inc
mov
mov
or
push
insl
lods
dec
syscall
in
lock
stos
mov
sbb
push
or
repz
dec
idiv
test
pop
fldl
arpl
nop
mov
testl
ja
mov
sbb
test
jecxz
lea
mov
and
orl
mov
js
xchg
xlat
inc
dec
cli
cmp
xor
cmp
add
aam
pusha
pop
mov
inc
out
mov
push
xchg
cmp
out
fs
pop
jmp
pop
lret
jp
mov
push
ljmp
in
xchg
sbb
into
and
insb
xor
jb
out
fwait
or
push
lds
mov
inc
cmp
in
jp
xchg
pusha
or
mov
sarl
adc
push
jge
les
aas
cmc
xor
inc
xchg
mov
push
rcll
xor
dec
lds
pop
or
insl
mov
dec
pop
fisubrl
cmp
jnp
neg
lds
adc
in
dec
inc
mov
jbe
jp
incl
jno
sbb
sub
xchg
xor
mov
mov
int
addb
lcall
into
jg
ds
mov
push
cltd
fidivrs
loop
loop
and
cmp
and
je
enter
cmp
in
call
cmp
mov
inc
daa
shrb
adc
mov
imul
scas
arpl
imul
cmp
test
xor
stos
add
add
loopne
lock
or
jo
pop
cltd
stos
xor
jb
js
pop
or
pop
mov
push
adc
mov
leave
jecxz
xchg
pop
push
rcll
movsl
mov
push
out
cmc
aaa
out
scas
push
call
sub
mov
andl
mov
mov
or
aam
adcl
dec
push
push
clc
mov
cltd
dec
aad
fdivrs
cmp
adc
push
jbe
ss
and
fsts
push
scas
mov
stos
in
lds
jno
enter
scas
je
pop
mov
lock
sub
leave
xor
js
clc
xchg
push
pop
xor
outsl
js
pop
std
and
add
cld
xchg
aam
call
pop
sub
dec
int3
gs
dec
loop
xor
jo
jmp
push
adc
jne
push
cmp
xor
mov
pop
jecxz
lcall
and
loop
in
out
mov
jge
cs
je
scas
ret
mov
jo
imul
lea
mov
push
insl
mov
lea
pop
into
and
es
lcall
adc
dec
sbb
cmp
std
push
es
outsb
pop
inc
sbb
shll
mov
and
adcl
jns
mov
mulb
mov
insl
mov
cmp
xchg
imul
mov
jecxz
jbe
sub
lahf
adc
adc
inc
sub
ljmp
xchg
jo
mov
pop
push
mov
mov
testb
adc
push
rorl
mov
jle
and
test
xchg
outsl
jb
inc
cwtl
sub
pop
inc
fisubrs
jmp
or
repz
xchg
jae
pop
stc
jmp
sub
movsl
addr16
add
lods
shrd
pop
and
inc
in
inc
idivl
push
inc
jne
sbb
aaa
jnp
jmp
or
dec
test
mov
hlt
or
div
sti
popa
mov
jle
mov
cwtl
lahf
mov
leave
push
adc
lcall
fcomp
data16
xor
aad
sub
cmp
mov
sub
jnp
movsb
lret
xlat
inc
push
adcb
clc
les
and
mov
mov
push
mov
lods
mov
push
adc
popa
xchg
aam
mov
arpl
int3
push
jmp
xchg
cwtl
xchg
push
sbb
cmpsb
aaa
pop
push
insb
stc
add
sbb
xchg
cs
push
addb
les
xor
outsb
stos
xor
sti
push
testl
jecxz
in
add
adc
adc
das
xlat
pop
sahf
push
adc
lahf
push
jecxz
inc
push
xchg
into
push
push
mov
mov
nop
mov
test
stos
dec
cs
out
xor
pop
out
jge
std
and
fbld
shrb
cmc
xchg
jge
jns
jg
inc
cli
nop
cmp
hlt
jecxz
or
sub
cmp
push
inc
ret
push
and
jno
insb
imul
push
xchg
int3
leave
adc
in
push
adc
and
mov
lret
test
cmp
movsb
mov
jmp
sub
mulb
pop
xchg
cmp
and
bound
pusha
lcall
call
add
sub
negb
dec
pop
push
xchg
jp
sub
daa
mov
pop
stos
stos
pop
jb
sub
imul
outsb
mov
fwait
adc
push
sti
out
pop
or
xchg
std
loop
jae
jmp
xor
cmc
in
adc
sub
out
pushf
sti
test
dec
sbb
inc
jecxz
lahf
shlb
adc
sbb
out
xlat
xor
fisubs
mov
xlat
sub
jecxz
mov
int3
cltd
sahf
and
aam
add
iret
xor
sbb
jo
scas
mov
xor
mov
outsb
mov
lret
popl
xchg
shrb
fcomi
pop
in
lret
in
fsubs
bound
add
adc
adc
or
pop
ds
and
add
repz
cmp
sbb
in
ret
mov
xor
jg
push
cli
push
sub
cli
fists
cmp
and
mov
ja
aad
int
cs
outsb
add
push
sbb
inc
in
stc
stos
lods
add
xchg
cmp
jg
sarb
hlt
mov
push
cmp
imul
pop
add
and
cmp
inc
sub
adc
pop
js
shlb
ja
test
sub
jmp
loope
add
repz
out
ja
bound
xor
fiadds
int3
dec
sbb
daa
mov
add
nop
jle
jbe
aam
aad
xor
dec
data16
push
lahf
mov
or
rep
fidivl
lcall
mov
push
mov
ret
es
sbb
fcoms
movsb
imul
sarl
lds
fnstenv
cwtl
adc
pop
sub
sahf
xchg
cmp
test
and
mov
pop
lea
push
mov
xchg
add
and
pushf
cmpsb
stos
shll
lods
int
mov
xchg
and
mulb
outsl
loopne
xchg
jbe
add
jbe
iret
js
mov
xchg
mov
mov
mov
xchg
xor
ss
xchg
mov
dec
pop
jo
fwait
add
js
pop
xchg
leave
ds
ja
fwait
or
shll
scas
lcall
jne
dec
rorb
xorb
es
addr16
mov
in
pop
lcall
dec
lods
cltd
sub
and
insl
pop
lret
mov
and
mov
call
leave
es
outsb
pop
jp
cli
add
je
cmpsl
or
jecxz
mov
or
les
xchg
mov
scas
sbb
push
and
dec
imul
pop
cmp
out
jl
cmp
cs
test
xchg
or
pop
leave
arpl
repz
stos
dec
adc
in
push
int3
or
fwait
repnz
mov
dec
jg
sbb
maskmovq
aas
fsub
push
pop
xor
push
sub
mov
stos
lds
imul
mov
test
pop
jge
ds
mov
in
movsb
gs
lods
ficomps
lahf
stos
movq
cmp
xor
inc
push
mov
add
fwait
cltd
pop
cs
mov
mov
inc
dec
xchg
sub
cmp
jecxz,pt
insb
rcrb
jbe
lods
js,pn
orl
and
jmp
inc
add
push
push
push
test
jnp
xchg
data16
gs
sbb
or
jmp
stos
push
in
or
or
lods
add
fs
lahf
dec
inc
xchg
imul
adc
js
pop
dec
add
data16
jg
enter
dec
jle
or
mov
leave
sub
or
pushf
arpl
daa
mov
mov
jp
xor
mov
sub
mov
sbb
sbb
push
lods
aas
popa
ljmp
je
cmpsl
mov
stos
rorb
movsl
popa
movsb
adc
data16
lods
jo
and
loope
mov
fidivrs
pop
push
aam
lret
jb
sbb
xor
addr16
dec
insb
insb
add
jbe
mov
scas
inc
dec
popa
cli
inc
fbld
inc
andl
mov
rcr
add
and
xor
xchg
cltd
hlt
xchg
pop
xchg
rolb
and
push
insb
push
push
std
mov
loopne
aam
stos
push
add
sahf
xchg
pop
leave
add
cld
lahf
mov
inc
int
inc
inc
mov
cmp
mov
lcall
shlb
movsl
out
sub
outsl
addb
cmovb
mov
push
aas
nop
shlb
add
mov
lahf
cmpsl
int
mov
jp
xlat
and
loop
roll
popf
or
jns
inc
mov
sub
mov
mov
arpl
cmpsb
inc
stos
repnz
enter
xlat
pop
imul
imul
or
push
mov
mov
popa
xorl
push
addr16
into
sbb
cwtl
cmp
jg
lret
fwait
aas
sub
cwtl
cld
xchg
leave
adc
iret
movsl
data16
and
dec
and
or
jp
stc
ja
mov
or
and
stc
adc
pusha
loop
roll
cmp
jae
jno
cmp
mov
bound
inc
lods
add
adc
or
cs
push
push
lcall
hlt
xlat
clc
mov
dec
out
outsl
or
test
hlt
icebp
stos
addr16
dec
pop
icebp
popf
popa
adc
aas
sbb
sbb
jge
sbb
mov
cmp
xchg
pop
add
fincstp
xorb
lods
dec
aas
add
pop
mov
roll
push
push
jns
jmp
insl
cmp
fdivl
or
add
outsl
inc
dec
inc
fildl
fstpl
pop
fs
cmp
pop
add
lds
jno
and
pushf
add
std
push
sahf
jo
movsl
call
xorl
push
dec
pusha
lahf
dec
and
and
mov
cmp
dec
and
mov
dec
inc
sub
push
movsb
adc
xor
dec
xlat
pop
xor
rorl
icebp
pop
sbb
mov
int3
pushl
jne
aam
fsts
cmp
shll
and
jle
mov
xlat
jno
cld
fdivp
adc
cmp
cmpsb
mov
in
cs
inc
sub
sub
std
push
test
movsb
lret
lea
lret
imul
sub
call
mov
pop
int3
xorb
test
cmpsl
stos
push
stc
rcl
jl
cmp
pop
inc
cltd
fdivr
mov
orl
fidivrs
or
div
push
test
mov
fadd
addl
pop
mov
lds
jns
mov
scas
out
jg
xor
sbb
insl
icebp
in
ljmp
cmc
jp
xchg
ficomps
jae
in
inc
pop
orl
bound
add
mov
mov
imul
pop
xlat
or
xchg
icebp
xchg
xchg
cmp
ret
pop
sub
sbb
out
pop
xchg
ja
xchg
add
jecxz
or
das
xlat
cmpsb
jecxz
lds
add
lret
cmp
hlt
xor
jne
cmpsl
jnp
loopne
xor
mov
gs
jnp
jo
sub
and
sub
call
sysexit
jecxz
lods
aad
call
xorb
jno
imul
pop
les
adc
mov
xchg
das
add
add
outsl
ret
movsb
lds
mov
adcb
xchg
ret
xlat
aad
xor
push
outsl
rcr
fadd
rcrb
push
mov
jg
call
jne
or
push
jp
push
or
gs
je
div
jnp,pt
sbb
mov
lods
cmc
push
xor
push
mov
cli
push
rcr
xchg
js
mov
and
lods
stos
pop
das
add
popa
xchg
lods
insb
aaa
cli
xor
fwait
pop
dec
les
shl
in
jmp
cs
popf
pop
mov
imul
add
ficompl
pop
or
in
fisttpll
cmp
pop
pop
add
aaa
xchg
push
xor
mov
mov
sub
pop
out
cmp
loope
jecxz
and
lods
or
pop
aad
fcompl
push
add
add
testb
sub
xchg
sbb
movsl
popa
jge
mov
fsubrs
push
out
pop
loope
movsb
mov
lea
pop
adc
cmp
jecxz
mov
clc
push
cmp
mov
nop
outsb
adc
cld
adcb
shrd
js
fcoms
fnstenv
cmc
shrl
fwait
cmp
xlat
pusha
pusha
aaa
sbb
inc
lret
mov
xlat
imul
fcmovne
mov
popf
cmp
add
pop
xor
aas
xchg
popf
mov
out
aaa
ret
in
addr16
popa
mov
mov
xchg
repnz
mov
test
add
loope
sbb
sbb
adc
jo
xor
jns
jo
inc
sahf
decl
dec
sub
dec
mov
sar
in
mov
inc
jae
mov
adc
jle
xchg
fs
movsl
push
sahf
iret
into
scas
js
mov
mov
sti
subb
sbb
pop
mov
dec
dec
dec
push
imul
pop
jl
pop
fidivrs
ret
mov
adc
pop
sbb
mov
push
dec
cltd
xor
sbb
xor
ret
push
in
iret
bound
out
push
pop
mov
and
jb
aaa
push
jmp
outsl
mov
and
lods
pop
lods
xchg
outsb
fnstenv
cmc
jmp
les
addr16
pop
loopne
jecxz
mov
xchg
mov
mov
xor
push
sahf
push
mov
and
mov
mov
adcb
iret
addr16
insl
jmp
pop
nop
mov
gs
sti
aam
into
adc
leave
into
pop
dec
jnp
cmp
mov
sub
ret
lods
in
mov
mov
xchg
les
es
xchg
imul
adc
xor
mov
dec
mov
jns
sub
pop
pop
shll
xchg
outsb
sub
addl
mov
sti
icebp
ja
ret
cmp
push
in
push
dec
loop
cmpsl
jo
ror
mov
inc
cli
mov
add
push
adc
or
test
inc
fcoml
into
imul
leave
nop
sub
adc
daa
sbb
push
pop
pop
dec
xor
sub
mov
addr16
rcr
lret
dec
push
out
sub
cmp
test
jnp
sbb
clc
cltd
pop
ljmp
ret
fdivrl
aaa
sbb
mov
out
or
mov
test
loop
pop
xor
rorl
cld
dec
ja
pop
mov
adc
cmp
push
outsl
fwait
pop
clc
jl
or
xchg
fmuls
fisubrs
inc
cwtl
daa
jns
in
lods
cmp
jne
pop
sub
in
dec
loop
adc
mov
insl
dec
popf
insl
sub
ficoms
xor
int3
cmpsb
or
jl
in
sti
lret
add
fildl
cld
es
inc
adc
mov
pop
push
jmp
test
mov
sbb
add
nop
lods
ss
or
cmp
movsl
dec
fcomp
push
xchg
loopne
jno
xchg
adcb
xchg
cmc
je
fcomps
sbb
enter
andl
jmp
inc
rorl
add
push
pop
xor
shll
ror
dec
icebp
ret
in
ss
lret
xor
mov
push
loope
icebp
movsl
push
scas
pop
jl
in
ret
jne
in
pop
dec
test
fisttps
push
into
in
inc
mov
adc
mov
or
dec
inc
inc
call
gs
xor
mov
sub
mov
cmpsb
mov
xlat
cs
mov
fists
cmp
test
cmpsb
mov
or
mov
pop
iret
pop
testl
push
mov
dec
jmp
loop
inc
iret
add
pop
push
cmpsb
or
push
sbb
push
pop
xlat
sub
adc
sbb
xor
mov
pop
xchg
cld
inc
mov
cltd
sub
and
cmp
ror
fsubr
lret
test
lods
test
xor
inc
mov
inc
push
ljmp
dec
cwtl
iret
jbe
dec
push
and
add
bound
xlat
jg
loope
add
cmp
inc
cmp
jle
mov
mov
jns
inc
inc
testl
movsb
test
mov
mov
mov
inc
cltd
mov
cmpsl
jge
mov
push
lods
call
subb
fwait
mov
fsubr
loope
fisttpl
jbe
fldl
jmp
push
in
cs
icebp
pop
out
sbb
lock
adc
clc
cmp
incb
xor
jmp
xlat
outsb
mov
jae
adc
jae
daa
jne
int
and
jo
jge
movsl
push
xchg
scas
cmpsl
mov
enter
or
popa
cmp
cmp
pop
add
xchg
or
pop
dec
xlat
push
scas
pop
add
addb
in
mov
mov
movsb
out
dec
and
xor
lods
in
mov
sarl
ret
and
ret
test
mov
pushf
imul
popa
push
cltd
or
pop
ljmp
lds
xchg
fwait
cld
arpl
arpl
pop
stos
xorl
cli
enter
push
mov
pop
pop
in
push
dec
aaa
ret
push
int3
iret
push
jns
xlat
imul
push
xor
xor
cltd
mov
imul
dec
test
iret
mov
xchg
or
sub
mov
or
insb
xchg
outsl
xchg
stos
imul
push
inc
addr16
ret
orl
ss
jg
pop
pusha
cmpsb
mov
jo
push
les
mov
pop
imul
add
mov
xchg
mov
jno
pop
fisubl
ret
movsb
lock
jle
cmp
fs
and
mov
push
stos
cli
add
sbb
lock
xor
jge
cmpsb
cltd
mov
add
cmp
lret
or
jae
cmovns
sbb
iret
push
or
sbbb
in
shll
xchg
inc
pop
lret
pop
daa
adc
adc
pop
or
mov
or
or
add
fimuls
mov
movl
sub
insb
and
inc
rcr
iret
frstor
push
inc
sahf
push
cmp
jns
clc
pop
sbb
outsl
lods
sarb
push
pop
les
cltd
inc
lds
or
mov
xlat
aad
add
fs
std
addr16
jg
and
enter
xchg
std
lret
pop
adc
mov
add
sbb
test
fnstsw
bound
mov
scas
in
jnp
sub
adcl
pushf
pusha
xchg
or
aad
bound
sbb
xor
lods
insw
clc
nop
xlat
repnz
xor
mov
cmp
xchg
mov
outsb
dec
leave
ss
inc
idivl
xor
add
shlb
int3
sbb
mov
push
sti
adc
incl
dec
cmp
mov
dec
sub
add
add
leave
test
mov
jns
and
xchg
pop
push
es
add
pop
into
pop
test
pop
inc
int3
sbb
mov
pop
fs
jg
sbb
and
fisubrl
gs
pop
mov
into
repnz
inc
or
je
jmp
xchg
push
dec
call
and
clc
jl
sub
jle
lods
or
mov
stos
dec
sbb
push
adc
insl
jae
idivl
test
sti
dec
ss
loope
sbb
enter
jp
jp
dec
mov
test
mov
xchg
stos
and
mov
int
push
rorl
jecxz
jecxz
xor
cmp
push
sub
dec
stos
pop
cmp
xchg
insb
mov
pop
jns
es
mov
lea
movsl
rolb
mov
mov
mov
or
shl
mov
cld
arpl
jp
cmpsl
stos
mov
lock
pop
outsl
lock
push
js
push
mov
in
stos
xchg
mov
sub
cmp
mov
adc
mov
popf
lahf
jne
fnstsw
and
and
aam
inc
and
popf
je
sahf
jle
imul
cmp
xor
cmpsl
mov
sub
popl
sub
or
scas
out
mov
inc
outsl
mov
mull
mov
or
mov
sbbl
out
sub
push
pop
mov
push
cmp
xchg
add
mov
scas
cmp
outsl
mov
icebp
cmc
mov
inc
dec
lea
xor
insl
cmpb
jno
mov
in
aas
add
mov
movsb
icebp
xchg
jb
aas
pusha
jb
adc
fimull
in
mov
inc
cmp
fimull
into
test
test
add
aad
dec
cld
push
lock
cmp
cmp
mov
sbb
outsl
mov
fisubs
sbb
jmp
adc
popf
cli
adc
inc
mov
or
mov
or
xchg
fwait
xchg
push
loopne
mov
lea
mov
mov
sbb
test
push
push
jb
sub
mov
mov
xlat
nop
push
pop
mov
dec
sbb
push
pop
in
jae
add
pop
fcomps
mov
mov
add
int
lahf
add
adc
sub
in
and
je
add
mov
ficoms
bound
js
mov
cltd
fstpl
push
stos
push
jp
jnp
psadbw
jbe
xchg
mov
lds
fstl
xchg
push
jo
sbb
lahf
lcall
push
push
mov
insl
mov
push
std
arpl
mov
jge
add
mov
adc
lret
lsl
stos
outsb
movsl
jmp
dec
mov
adc
xor
test
mov
decb
cmpsl
fnstenv
or
in
andb
dec
or
xchg
mov
and
lret
test
in
cld
mov
pop
sub
arpl
add
mov
test
lea
sbb
cmpsb
xor
loope
outsb
dec
pusha
jecxz
rorb
push
repnz
push
add
jl
fs
mov
pop
jne
popf
scas
xor
testl
adc
inc
mov
les
fs
push
movsb
sbb
xchg
out
cwtl
mov
scas
sbb
mov
jge
mov
data16
xor
sbb
std
xlat
das
adc
push
shlb
sub
or
ja
gs
xor
inc
lcall
sbb
dec
or
push
and
sub
ljmp
jo
cwtl
in
nop
loope
dec
or
and
mov
or
outsb
stos
fwait
mov
pop
xchg
mov
push
pop
push
mov
cld
addr16
jbe
cmc
jp
enter
jmp
dec
xchg
mov
pop
daa
or
lea
ret
daa
mov
hlt
daa
push
add
ss
mov
xchg
ficoml
ss
add
and
mull
cmp
or
pop
mov
or
aad
stos
push
ret
fnsave
movsb
jne
dec
add
xchg
imul
cli
cwtl
popf
cmp
lret
movsl
addl
lea
dec
data16
xchg
repz
cwtl
mov
fwait
hlt
dec
inc
adc
test
mov
loope
cmc
adc
xor
mov
jae
fcomps
add
add
pop
xor
outsb
mov
cmp
in
push
repz
pop
and
adc
dec
dec
xchg
mov
int
xor
incl
jb
insb
js
call
inc
sub
imul
xor
ss
mov
rcr
jne
and
mov
bound
test
xchg
insb
popa
dec
xchg
fwait
scas
out
iret
jno
jnp
les
iret
rcl
adc
cmp
dec
ds
fs
lret
mov
es
xchg
nop
mov
fdivrl
jnp
dec
pop
or
int3
outsl
jl
frndint
jnp
dec
ljmp
fisubrl
sbb
and
mov
sbb
adc
in
jns
daa
cmpsl
dec
and
sub
mov
pop
cwtl
xchg
ret
sbb
mov
stos
in
daa
mov
jmp
mov
dec
pop
adc
in
cli
push
call
cmpsb
inc
pop
lods
ret
test
hlt
test
rorl
sub
loope
cmp
jb
stos
inc
cmp
mov
int
data16
aam
sbb
lock
xchg
xor
jp
push
dec
aam
in
mov
add
lds
inc
xchg
xor
sahf
adc
loope
ljmp
rorb
into
ja
cmp
std
xor
idivl
in
sub
hlt
xchg
rcrb
fsubrp
xor
cmp
xor
hlt
inc
ds
sub
cwtl
shll
ds
sub
call
lock
cltd
inc
subb
xchg
jae
stos
popf
or
movsl
roll
dec
test
shl
fidivrs
inc
inc
mov
fdivrp
pop
jle
imul
stc
jne
rcl
imul
enter
std
aas
adc
orl
jb
mov
scas
addl
outsl
mov
inc
cmp
arpl
dec
lods
inc
push
xchg
xchg
iret
mov
dec
xchg
scas
and
jmp
sub
movsb
daa
sub
loop
mov
pop
ret
mov
jb
insb
ljmp
sahf
test
es
mov
xchg
adc
mov
iret
jecxz
or
ret
jmp
jl,pn
push
outsb
mov
sub
pop
mov
add
jmp
jne,pt
jnp
inc
pushf
adcb
pop
sub
dec
jl
adc
ds
test
leave
fimuls
adc
movl
cmc
mov
xchg
pop
dec
in
ds
cld
test
dec
or
aas
pop
sub
aam
or
add
nop
push
sub
or
insb
add
jns
xor
pop
jmp
and
idivb
sti
dec
push
ficompl
mov
adc
movsl
pop
shrb
and
or
sbb
test
pusha
fs
lock
jo
cmc
sub
insl
and
push
mov
cmp
jbe
outsb
pop
dec
jnp
lods
inc
ss
imul
int
xchg
pop
sbb
jecxz
orl
std
adc
ja
js
mov
cwtl
popa
mov
pop
pop
outsl
imul
inc
inc
movl
mov
mov
mov
aam
fidivs
jb
andb
xor
jl
test
add
inc
push
mull
fnsave
scas
push
in
inc
and
mov
pusha
xor
push
push
js
xchg
bound
aad
into
in
data16
inc
enter
dec
mov
sbb
adc
arpl
mov
jno
cmp
into
mov
imulb
push
mov
popa
or
rcrb
inc
lahf
cmp
sub
aad
shlb
ds
sar
and
xor
mov
in
pushf
sub
jmp
jg
scas
push
sub
pusha
mov
pop
mov
fstps
add
sbb
ss
cltd
push
add
pop
add
push
jae
push
sarb
mov
xchg
fdivr
in
outsb
cli
push
repz
arpl
mov
jo
je
sti
lahf
vpsubw
xchg
rcrl
popa
nop
into
mov
and
fwait
lret
and
sbb
jbe
sub
dec
push
jnp
pcmpgtb
test
adc
ficompl
sti
mov
sub
lret
add
push
les
ret
loopne
sti
scas
pop
bound
cmp
in
fbstp
mov
fiadds
jp
inc
sbb
lods
loope
dec
xchg
mov
xchg
push
cmc
arpl
enter
mov
mov
xlat
lahf
sub
popf
repz
jge
sbb
cmpsl
cmp
in
repz
shr
loopne
mov
pop
sti
adc
ja
mov
not
ret
popa
jae
rcrl
dec
sbb
add
cmp
mov
push
sub
mov
clc
xor
mov
sub
fstl
cmp
test
pop
call
adc
lods
pop
add
cmp
fadds
jmp
data16
xchg
dec
xor
add
sub
dec
scas
sti
dec
adc
xor
loopne
and
sub
and
dec
in
cwtl
mov
test
addb
scas
repz
adc
arpl
ljmp
jb
jne
xchg
ret
movsb
mov
cmp
clc
jmp
xor
ss
fwait
xor
push
aam
lock
addr16
sub
out
test
imulb
adc
iret
arpl
dec
adc
jo
pop
repz
stos
mov
cs
in
inc
scas
subb
dec
jecxz
inc
scas
jmp
push
sarl
fsub
std
or
jnp
icebp
dec
mov
cmp
stos
movsl
loop
and
std
cmpsl
mov
mov
bound
pop
sub
and
mov
adc
popa
mov
loopne
cmp
cmp
fldl
xchg
and
mov
lret
ror
cwtl
push
push
test
test
dec
nop
dec
movsb
imul
mov
sub
sbb
mov
mov
out
insl
inc
or
imul
or
in
jmp
jecxz
shll
cmp
iret
push
rorb
inc
pop
push
inc
mov
cli
xor
popf
clc
push
notl
mov
and
rcr
sub
sbb
or
mov
bound
pushf
push
lods
pop
mov
push
jbe
xchg
stos
xor
insb
je
sbb
arpl
add
pushf
push
outsl
or
mov
sbbl
movsb
pop
repz
sbb
mov
push
imul
push
or
sub
das
out
add
cs
mov
loope
test
mov
sub
sub
dec
xchg
inc
push
xor
jecxz
shl
xchg
and
data16
bound
mov
in
es
inc
es
lret
aad
cmpsl
mov
xchg
shrl
ret
out
ja
pop
fistpll
fsubrs
pop
mov
cs
ds
xchg
imul
lods
and
lea
mov
jge
out
aad
xlat
loop
sub
xchg
mov
pop
xchg
jb
lahf
shl
fsubrs
xor
inc
shll
sub
add
loopne
xchg
and
xorb
shlb
test
pop
mov
push
shlb
mov
lcall
or
dec
daa
fnstsw
xlat
and
mov
pop
imul
pop
xchg
test
cmp
mov
lret
lods
push
aas
mov
dec
hlt
fldl2t
cltd
xchg
and
inc
in
mov
mov
add
push
loopne
sbb
arpl
loopne
xchg
push
sahf
fidivs
sti
stc
sti
scas
push
addb
sub
mov
jmp
and
pop
add
shrl
pusha
outsl
daa
ret
inc
jmp
jp
adc
push
mov
mov
dec
adc
or
mov
cld
xchg
and
or
jp
inc
mov
das
jecxz
loopne
pop
insl
cmc
xchg
sub
test
mov
adc
cltd
into
mov
xchg
mov
sub
xlat
lods
mov
je
push
mov
pop
push
insl
inc
pop
movsl
les
movsb
push
lret
sub
pop
mov
mov
jg
sub
mov
inc
mov
mov
push
xchg
jl
das
sub
into
jle
cmpb
bound
push
mov
mov
cmc
add
dec
je
add
icebp
fcoml
in
pop
insb
inc
xor
inc
imul
lods
inc
shlb
and
pop
mov
or
fildll
arpl
push
xchg
pop
jne
jbe
pop
adc
fxch
or
cmp
daa
testb
fstpt
dec
cmpb
jge
fisttps
aam
push
jg
stos
js
and
xchg
les
dec
and
stos
sub
ret
mov
ds
sub
cmpsl
xlat
pop
cmpsl
and
xchg
mov
cmp
pop
in
test
inc
mov
pop
or
je
scas
cmp
hlt
fisttps
xchg
fdivrs
inc
cmp
daa
dec
xor
in
dec
xor
lret
dec
mov
insl
jge
xchg
data16
cmp
push
icebp
mov
push
xchg
mov
cmc
cltd
add
push
push
mov
divl
inc
std
xchg
jmp
adc
insl
test
call
mov
cmpsb
mov
jb,pn
pop
movsb
mov
mov
pop
ficompl
outsl
out
jmp
cs
pop
pop
mov
ja
pop
push
test
dec
push
andb
inc
stos
addr16
jae
jle
inc
aam
sub
jecxz
pop
push
cmpb
sarl
ss
mov
into
pop
inc
and
rcrb
movl
and
cwtd
xchg
mov
sbb
pop
inc
jge
fcoml
mov
push
xchg
test
push
repz
lock
mov
pop
mov
push
push
sub
or
ljmp
lock
sbb
insl
cs
xchg
mov
xor
mov
cwtl
xchg
enter
adc
stos
jae
rclb
and
pusha
dec
aam
or
pusha
sub
or
lds
and
or
std
lcall
mov
fildl
fmul
and
arpl
push
imul
add
cmp
mov
add
mov
stos
fstpt
cmp
xor
cmc
and
shll
xor
xchg
pop
mov
mov
jg
mov
das
sub
adc
adc
add
out
sub
xor
mov
xchg
enter
cld
arpl
lds
inc
dec
out
outsl
cmpsl
ficoms
rolb
aad
ljmp
aas
mov
add
pop
cmc
sbb
in
lods
dec
mov
es
inc
scas
pop
cmp
jge
test
add
into
rorl
aaa
in
bound
dec
into
scas
dec
sub
ljmp
mov
popa
dec
jecxz
icebp
movsl
das
rol
push
scas
xchg
stc
cld
fidivrl
add
stos
std
or
gs
and
testl
stos
fsts
std
ret
push
cli
flds
imul
movsl
in
ret
hlt
aas
cwtl
ja
adc
rol
dec
test
cmp
test
mov
lods
jecxz
xchg
add
mov
sub
stc
inc
rolb
out
sbb
imul
mov
or
and
stos
sub
pop
sarb
in
pop
popa
mov
out
and
adc
mov
fnstcw
es
jae
add
cmp
test
jecxz
cs
xchg
adc
out
xchg
pusha
dec
cmp
jle
add
cwtl
daa
and
fdivs
jb
cmp
ds
mov
outsb
mov
mov
sub
lods
push
es
cmp
or
and
pop
pop
push
aad
mov
pop
xchg
movsl
push
mov
jmp
ds
jbe
test
inc
std
outsl
ja
xor
stc
mov
mov
mov
icebp
lock
or
cmp
or
and
adc
add
mov
add
add
sbb
xlat
jb
sub
cmp
das
fwait
shl
hlt
fistpl
jmp
xor
popf
popf
out
fdivl
stos
in
jl
and
insb
int3
add
dec
popf
pop
push
and
mov
dec
shr
rcrb
pushf
fs
imul
cli
jge
fwait
ljmp
jno
adc
icebp
sbb
cmp
push
aas
xor
sbb
pushf
and
adc
mov
arpl
out
mov
pop
mov
or
fistpll
out
repz
adc
aad
pop
or
scas
cltd
push
cmp
sbb
in
xor
fisubl
add
inc
test
push
or
rcr
jle
or
repz
rorb
sub
xor
repz
in
jp
push
xlat
shl
push
outsb
sbb
mov
fs
sahf
adc
push
imul
repz
cltd
sbb
push
pop
and
mov
dec
rcrb
jo
add
push
negl
mov
mov
inc
and
mov
dec
jae
lcall
mov
scas
lock
test
or
shlb
scas
sbb
sbb
arpl
aas
daa
add
mov
repnz
iret
data16
mov
in
loope
or
mov
divb
or
lret
jp
addr16
mov
jae
cmpl
or
lahf
loop
sbb
xchg
rcrl
cmpb
adc
fcoms
inc
push
dec
cli
adc
pusha
dec
pop
sbb
cmp
ror
adc
ret
scas
sarl
ja
loop
xor
adc
add
mov
jnp
lods
std
or
dec
add
fldcw
xor
pop
leave
shr
je
sub
and
lods
jle
cmpsl
mov
jb
orl
mov
add
cld
xor
sub
mov
movsb
dec
sub
loope
xor
adc
mov
fcmovne
cmp
pop
xchg
or
scas
sub
pop
loopne
push
movsb
in
aam
xor
add
inc
adc
lahf
popl
jbe
or
ja
push
loope
bound
movl
sarb
je
dec
dec
fnstenv
scas
and
xlat
add
dec
mov
mov
or
xchg
xor
in
dec
adc
jae
cmpsl
ficoms
and
pop
punpckhdq
cmp
ret
shrl
sbb
fstl
jbe
dec
cwtl
pop
mov
bound
ficoml
pop
bound
loopne
shll
mov
push
lret
cwtl
and
sub
cmpsb
imulb
mov
and
into
int3
aas
inc
fwait
cmp
push
or
sub
gs
js
aaa
outsb
mov
enter
rolb
movsb
jbe
nop
popa
repnz
mov
xchg
fnstenv
cmp
repz
jne
fimull
push
sub
xor
test
lahf
repnz
pop
pop
or
cmp
sbbb
fcoms
adc
inc
rorl
mov
sahf
xchg
and
adc
cmc
mov
or
sbb
rclb
cmpsl
pusha
xchg
loop
sti
jg
dec
rclb
jge
outsl
insb
push
adc
cld
dec
fistl
out
iret
adc
mov
sub
jl
mov
push
sub
dec
leave
insl
outsl
mov
jns
jnp
daa
push
fnstcw
add
or
jmp
xchg
popf
insb
in
push
lods
stos
lds
int
aas
lods
jl
jns
psrlq
int3
jnp
in
pop
rorl
loop
lock
icebp
xchg
enter
fstpt
les
mov
mov
inc
iret
je
sbb
jno
mov
rcrb
cwtl
inc
std
popf
jae
cmpsb
or
cmpsl
int3
out
jge
cmc
pop
mov
push
data16
loopne
mov
xlat
lret
mov
insb
jg
sahf
mov
push
jnp
mov
sub
jo
dec
rclb
inc
adc
pop
jb
pop
or
xchg
sarl
addr16
pop
mov
jo
icebp
js
sub
push
xor
test
xchg
pop
mov
sbb
ficoms
and
dec
xor
adc
hlt
test
mov
adc
aas
cmc
fsubl
xchg
pusha
jl
sub
pop
testb
cs
xchg
adc
pop
test
lock
mov
js
lret
shlb
jle
xor
lods
js
cmp
mov
pop
cld
nop
jns
adcl
pop
icebp
sahf
es
adc
fldl
xchg
inc
mov
fldt
push
pusha
shlb
pusha
decb
adc
mov
incl
xchg
adcb
fidivs
sarl
push
dec
xchg
fs
aas
or
adc
aad
pop
mov
and
inc
push
loope
and
push
shll
inc
sbb
fsts
dec
mov
push
lds
rcrl
sub
mov
call
sbb
shlb
out
xlat
data16
arpl
shrb
inc
ss
lods
mov
push
pop
jmp
mov
leave
inc
mov
fs
sub
faddp
sub
fs
mov
pop
aad
out
mov
popf
cmp
sub
adc
lahf
insb
xor
ss
push
pop
jmp
stos
mov
jge
inc
jle
aad
mov
xor
cmp
and
adc
lods
mov
in
sbb
out
xchg
pop
adc
popa
mov
cmpsb
arpl
outsb
or
hlt
mov
aad
mov
push
outsl
orl
andl
popa
cmp
fistpll
ficomps
or
fdivs
repz
dec
outsl
cmp
ds
lods
mov
ds
inc
test
dec
lods
fsubrl
pop
popf
lock
mov
jl
repnz
es
mov
fisubrl
mov
outsb
push
pop
cld
mov
inc
mov
lret
ss
add
push
inc
xchg
pop
call
fcomps
pop
inc
jp
out
xlat
cwtl
test
jecxz
divl
mov
mov
mov
mov
in
mov
dec
mov
push
xor
test
sub
ljmp
dec
and
hlt
and
shl
out
adcb
and
add
movsb
std
aam
test
in
imul
ds
insl
cmpsl
and
xor
lahf
lds
push
jnp
stos
lret
fprem1
jbe
lcall
out
mov
jmp
pop
dec
pusha
cwtl
ss
push
xchg
push
adc
cmp
mov
mov
push
addl
mov
mov
add
xchg
test
dec
aaa
test
jb
mov
push
hlt
hlt
add
mov
jecxz
xor
call
fidivrs
and
cmp
sub
inc
daa
dec
jp
es
pop
sbb
cltd
adc
jecxz
mov
mov
fistps
sar
sbb
js
or
outsl
loope
sub
scas
pop
shlb
test
js
push
loop
sbbb
int
shl
jae
mov
stos
push
mov
xor
push
and
sub
mov
inc
mov
cmp
mov
xor
popa
pop
popa
sub
pusha
or
sub
xorb
dec
scas
lahf
xor
adc
jbe
push
cmp
xchg
jmp
in
push
lret
inc
dec
lcall
scas
jnp
notl
je
push
rcr
mov
pop
or
pop
mov
popa
out
push
imul
mov
dec
gs
shl
jbe
lea
add
rcr
or
jb
jp
pop
insl
rcrb
sub
pop
iret
aad
cltd
test
imull
mov
lahf
pop
xchg
xor
movhps
mov
shlb
leave
fdivl
fimuls
cmp
jg
aas
pop
adc
adc
inc
jnp
pop
js
xchg
imul
xchg
outsb
xor
xor
int3
xchg
push
into
movb
inc
test
pop
xchg
push
jge
pop
stc
fstpl
inc
movd
mov
fnstenv
ret
or
jmp
dec
test
lock
dec
dec
or
adc
mov
sub
dec
push
cmpsl
pop
dec
call
stos
cmpb
xchg
jb
pop
sub
in
jns
mov
sbb
mov
test
aad
popa
xchg
fdiv
jbe
ficoml
xor
inc
mov
adc
jb
outsl
out
sbb
cmpsl
clc
repz
and
sub
dec
push
push
lret
sbb
and
fnsave
inc
sbb
xchg
idiv
das
jo
pop
sub
or
idiv
es
or
ds
std
inc
mov
xchg
sbb
arpl
add
inc
add
cmp
or
adc
fldl
les
xor
in
cmp
sub
mov
call
cmp
pop
sub
outsb
ret
orb
imul
jp
jno
mov
and
inc
ja
jns
sahf
fdivs
addr16
pushf
ss
rorb
ja
adc
in
test
push
dec
sarl
pop
sbb
roll
adc
jmp
scas
and
in
and
jns
and
outsl
sets
dec
loopne
mull
aaa
or
adc
pushf
repz
popf
iret
fldt
adc
insb
cmp
mov
adc
add
push
ljmp
ljmp
sub
mov
and
xor
roll
shll
jecxz
gs
aas
sti
push
stc
sbbb
nop
mov
test
shll
aad
ss
ds
ds
stos
mov
gs
ljmp
sub
mov
push
in
and
cmp
pop
pop
cmp
iret
ror
call
sub
push
xchg
adc
test
sub
pushf
lock
icebp
pop
inc
test
cmp
inc
add
jnp
and
nop
pop
pop
movsl
imul
sbb
push
fldln2
into
inc
call
cs
es
push
fcomps
push
cwtl
clc
jnp
jmp
call
or
xchg
mov
mov
out
pop
loop
push
push
xlat
cmpsb
gs
push
hlt
dec
stos
sub
in
test
test
repz
dec
xor
in
scas
xchg
dec
les
inc
xlat
popa
xor
and
shrl
xor
mov
adc
shl
aam
cltd
fs
mov
lcall
cmpsb
push
mov
add
mov
lret
jbe
sbb
dec
push
mov
call
mov
aad
inc
dec
adc
repnz
sarb
into
in
mov
cmp
orl
push
inc
or
pop
pop
jmp
jl
xchg
dec
out
jnp
imul
sbb
jno
push
stos
das
dec
cld
pop
aad
jle
inc
mov
mov
mov
or
pcmpgtd
dec
shl
pusha
add
je
push
andb
adc
int
mov
cmp
pop
fisubs
mov
in
and
icebp
push
mov
sbb
lcall
adc
and
cs
mov
jmp
negl
aam
aaa
inc
dec
imul
mov
and
add
aad
sbb
sbb
daa
cmpsb
jp
dec
mov
test
lods
sub
lahf
xchg
dec
sub
xor
fsubl
fwait
gs
mov
jbe
jno
mov
movsl
fcom
fs
mov
xor
cmpsl
inc
fistpl
ljmp
xchg
mov
nop
pushf
mov
inc
mov
mov
cli
add
push
scas
xchg
jae
cli
or
outsb
out
icebp
cmova
sti
out
jmp
push
sti
stos
adc
rcrl
mov
mov
jno
rcrb
ds
or
mov
push
pop
jl
mov
inc
fildll
dec
lret
sahf
mov
shlb
xchg
cld
andb
daa
mov
lret
stos
dec
fsubp
pop
xor
and
mov
loope
push
cmc
jecxz
loop
enter
add
cmc
inc
and
in
data16
shll
xor
out
je
dec
xor
add
mov
or
inc
fst
sarb
mov
push
push
mov
div
out
jb
lret
aas
shr
mov
ret
jb
add
jnp
incl
iret
mov
into
xchg
and
add
ds
shlb
f2xm1
out
das
and
enter
xchg
add
ja
sahf
psubd
cld
js
inc
cmp
orl
enter
xchg
xchg
or
cmp
sub
in
push
pop
xor
mov
dec
dec
and
orl
in
sub
pop
push
arpl
xlat
xchg
add
push
or
mov
lods
jp
mov
fs
out
hlt
sahf
ja
mov
enter
and
call
lahf
js
scas
dec
add
mov
divl
pop
repnz
repnz
call
xchg
arpl
push
dec
enter
cmpsl
out
add
sbb
mov
xor
xor
push
out
sbb
out
push
js
ret
movsl
pop
adc
push
add
ficomps
pop
mov
xchg
cld
insl
mov
mov
fwait
lods
movsb
add
cld
aad
inc
lods
xor
lret
and
int3
xchg
iret
test
rorb
hlt
dec
jge
aaa
sbb
jb
ret
xlat
iret
sbb
push
mov
and
dec
mov
fisttpll
insl
cltd
mov
scas
dec
dec
negb
in
fildll
je
sub
repnz
enter
xchg
fldl
push
xor
xor
pop
loop
add
lea
fisttpll
addr16
xchg
inc
sub
dec
loop
iret
in
mov
pusha
adc
mov
push
ja
pusha
push
cmpsb
cmpsl
and
sub
inc
scas
add
jae
xor
sbb
sbb
lea
neg
sub
cltd
jne
and
rcrb
mov
int3
dec
mov
out
pop
imul
mov
or
jne
test
jl
pusha
pusha
jo
dec
cmp
cmp
cmpsb
clc
dec
pop
cmp
les
push
lea
jge
push
fadds
pop
push
in
push
imul
sahf
jae
dec
inc
dec
and
jmp
cld
cmp
adc
imul
lret
push
sbb
sbb
mov
adc
sti
dec
call
sbb
in
notb
push
das
fildll
insb
cmp
mov
xchg
cs
nop
or
outsb
hlt
test
mov
scas
mov
dec
test
lahf
and
lock
pop
mov
repz
or
push
adc
aaa
mov
cld
andl
or
jne
fdivr
push
add
push
xchg
stos
sub
int
les
push
les
mov
fisubrl
push
adcb
cmp
adcl
int3
ds
inc
aam
adc
lods
mov
xor
xchg
pop
mov
add
pop
cmp
js
mov
js
jbe
and
pop
mov
icebp
xchg
movsl
ss
mov
call
mov
js
and
jge
sub
mov
mov
lods
add
mov
ja
mov
movsl
in
shl
ret
movswl
dec
scas
mov
and
adc
pop
push
jl
cmpsl
sbb
mov
out
xchg
inc
pop
dec
pop
leave
pop
out
pop
mov
pop
pusha
xchg
cltd
dec
xchg
sub
mov
or
mov
mov
rorl
pop
push
lcall
and
aad
ljmp
popf
sahf
repz
ret
outsb
lock
mov
lods
xchg
dec
push
je
or
pop
inc
and
mov
pushf
das
sbb
ss
jne
dec
adc
bound
mov
dec
jmp
add
movsb
lea
test
sub
clc
pop
mov
lcall
rep
inc
lret
out
lcall
stos
xor
fcom
jle
sti
xchg
sbb
scas
sarb
add
in
outsl
mov
xor
adc
nop
mov
js
push
xchg
jnp
ja
enter
mov
arpl
mov
mov
test
mov
cwtl
and
mov
jae
xor
push
adc
pop
adc
inc
jg
jmp
xchg
sbb
in
test
push
push
and
jmp
imul
hlt
dec
inc
inc
adc
lret
push
test
mov
push
sbb
dec
rcrl
xchg
inc
lods
adc
icebp
mov
movsb
or
inc
mov
ret
mov
xchg
int3
push
sub
sub
pop
lods
repnz
pushw
xor
add
imull
iret
lock
dec
and
inc
stos
fidivrl
aaa
cmc
mov
sbb
push
lcall
mov
and
cmc
hlt
sub
lock
xor
inc
stos
shr
lret
ror
xor
jns
mov
sbb
mov
jo
push
pop
out
pushf
mov
xor
scas
xchg
mov
in
rorb
aam
dec
sub
std
inc
call
xor
sub
out
sub
movsl
repnz
lahf
inc
outsb
arpl
bound
jle
pop
lods
jnp
inc
idiv
iret
data16
sub
sub
adc
adc
xchg
into
push
bound
dec
xor
stc
lods
adc
stos
pop
das
in
mov
sub
mov
das
scas
sarl
cltd
inc
jb
mov
shlb
popa
pop
test
mov
push
mov
xor
push
js
scas
test
dec
push
repz
adcb
or
loop
xor
jle
dec
push
test
push
addr16
jne
imul
adc
or
aam
sbb
push
enter
sbb
enter
lods
inc
xorb
dec
inc
int3
inc
cmp
jae
dec
mov
les
or
sub
mov
xor
mov
add
sub
daa
outsl
xor
movsl
mov
dec
pop
rcl
adc
mov
sub
jge
jb
xor
cli
ljmp
mov
add
pop
dec
inc
outsb
sub
inc
sub
repnz
mov
add
or
and
test
mov
mov
pop
andb
sub
shrl
pop
push
rclb
add
fnstcw
sub
sub
repz
out
jne
pop
mov
mov
dec
pop
pop
and
xchg
mov
inc
jb
lods
inc
shrb
dec
lcall
inc
negb
jnp
cli
xchg
pop
xchg
mov
call
dec
ror
pop
loopne
push
das
inc
or
movsl
cwtl
and
mov
push
adc
int
add
imul
mov
pop
arpl
jb
xor
sub
add
cmp
inc
inc
or
mov
imul
pop
dec
lea
xor
mov
sti
imul
push
sarb
dec
fwait
int3
orl
jle
inc
or
fnsave
push
int
cmpsb
les
sbb
mov
or
test
push
cmpsl
leave
ljmp
dec
fucompp
loop
cmp
mov
mov
mov
mov
repz
cmp
adc
or
xchg
xchg
cmc
scas
imulb
test
add
repz
shrd
int
mov
dec
xchg
and
fildll
mov
in
sbb
mov
dec
in
fistpl
cltd
sahf
js
lret
or
mov
loope
lds
push
stos
outsl
push
jae
cmp
dec
rolb
xor
sub
mov
fdivrp
dec
jle
mov
mov
stc
xchg
call
bound
inc
imul
movsl
hlt
bnd
insl
inc
pop
jbe
ficompl
xlat
pop
in
dec
mov
push
scas
inc
pop
pusha
pop
mov
lods
add
mov
iret
rolb
lods
add
mov
cmc
mov
loop
mov
jne
push
cmovge
or
and
jge
dec
mov
pop
pusha
jmp
cli
dec
jmp
scas
push
or
in
lods
loope
andb
push
lret
and
xchg
icebp
lcall
xchg
scas
stos
sbb
cmpsl
sub
out
and
shlb
push
jmp
jle
repnz
aas
inc
adc
mov
push
lcall
mov
mov
adc
sbb
call
dec
ds
mov
loope
and
jns
fdivrs
mov
dec
les
push
sub
sbb
cltd
pop
icebp
aas
int
xor
bnd
inc
push
adc
jp
cs
test
or
ss
cmp
int3
roll
loopne
outsb
sub
mov
sahf
test
ret
shll
jle
mov
jbe
xor
imul
mov
repnz
sbb
pop
arpl
std
adc
ror
mov
dec
fucomi
pushf
ja
packsswb
inc
mov
std
sub
insl
add
sti
add
pop
pop
nop
cli
std
imul
test
xchg
pop
inc
fs
adc
dec
sbb
sub
fsubl
adc
mov
test
adc
loopne
mov
mov
shlb
mov
sbb
push
fwait
call
cli
mov
fs
sbb
lcall
mov
or
bound
cmp
aas
mov
lea
mov
push
aaa
inc
call
mov
aad
mov
dec
sti
xchg
aaa
aaa
pop
rclb
sub
cmp
add
mov
cli
and
mov
test
movsb
or
fldt
push
xchg
inc
jp
xor
xchg
gs
mov
dec
xlat
mov
fsubrp
fbstp
pop
xchg
xor
add
das
incl
cmp
dec
hlt
lds
shl
push
mov
insl
daa
adc
mov
mov
or
mov
dec
std
xchg
loop
xor
inc
or
pop
mov
nop
iret
ja
out
shrb
call
mov
data16
jns
in
loop
loope
inc
xor
into
insb
in
int3
daa
jbe
test
mov
pop
jo
jg
sti
movsb
add
sbb
in
sub
test
cmp
jo
into
fdivrl
lret
push
lea
xor
xor
adc
nop
movsl
adc
nop
xchg
cmp
push
add
loope
lock
xor
ds
mov
adc
stos
movsb
jge
push
mov
inc
movsb
fdivs
xchg
out
jge
stc
xchg
pop
push
dec
jg
out
push
int
sbb
sub
in
out
mov
data16
in
ficoml
pop
push
popf
cmp
inc
ss
inc
mov
fwait
cmp
adc
loop
test
pop
push
stc
pop
sahf
cmpsl
cmp
dec
pop
mov
lods
mov
testl
sar
xchg
loope
pop
int
daa
aad
filds
sbb
push
fs
mov
inc
stos
pop
aas
addl
jmp
mov
and
push
popa
cmp
dec
dec
js
push
sbb
divl
rcr
lret
rclb
mov
xor
sub
js
and
jmp
or
push
mov
es
loopne
jge
movsb
push
inc
lods
stos
pop
fistps
dec
lcall
ljmp
jmp
fcoms
add
jmp
push
or
in
adc
popa
lret
lods
fwait
test
sarb
lock
mov
xchg
sub
mov
or
sub
sub
push
outsl
mov
fnstsw
scas
pop
or
mov
repz
cmpsb
sub
out
push
loope
fwait
mov
std
jl
adc
inc
pushf
repnz
jno
fs
in
push
negl
mov
push
sbb
sbb
mov
jg
pop
adcl
insl
xchg
mov
icebp
pop
cmp
dec
xor
dec
pop
dec
push
ja
inc
dec
pop
pop
repnz
mov
repnz
xchg
sub
insb
mov
sub
aas
out
frstor
mov
push
stos
lds
ret
sahf
popa
inc
jp
jb
sbb
sub
jnp
mov
movsl
push
repnz
lds
adc
cmp
sbb
jo
cld
fwait
adc
and
add
nop
sti
inc
jae
stos
int3
push
aam
mov
xor
adc
lods
in
adc
add
in
jns
jne
push
pushf
es
sbb
aad
mov
mov
push
cmpsl
cltd
xor
dec
push
xchg
stos
scas
shlb
sub
sub
and
fdivs
cmpsl
add
sub
sub
gs
ljmp
js
sub
adc
jecxz
stos
imul
cmc
adc
mov
mov
pop
lds
lods
dec
inc
fucomp
inc
out
in
outsl
mov
mov
bound
or
ret
pushf
xchg
fs
and
push
lods
mov
and
cwtl
push
and
idivb
imulb
inc
nop
outsl
or
mov
clc
sub
sti
and
stos
pusha
roll
jns
mov
icebp
lods
jmp
nop
xchg
ret
leave
pushf
icebp
xchg
sub
jo
cld
mov
int3
dec
mov
clc
fwait
and
pop
addr16
pop
mov
pop
das
stos
mov
or
sbb
cmp
sti
inc
inc
jmp
int
cmpsl
int
fildll
ret
pop
sub
dec
xchg
add
das
sbb
xchg
sub
sti
xor
push
lcall
mov
jno
stos
inc
xchg
aaa
xor
enter
loop
fabs
into
cmp
jle
adcl
movsl
cmp
pop
shrb
fadd
testb
sub
pop
aas
and
pop
scas
and
mov
mov
pop
cmpsl
xorb
mov
mov
xor
dec
xor
and
movsb
outsl
jb
cmp
out
fwait
pop
jle
outsb
inc
mov
movsb
mov
sub
dec
vmptrst
jle
and
cwtl
inc
inc
pop
mov
imul
pop
xor
rcr
adc
push
mov
dec
push
push
pusha
repnz
mov
shrl
dec
in
mov
pop
inc
lret
mov
mov
in
dec
inc
push
mov
lods
orl
inc
enter
lahf
lret
lret
out
sub
adc
int
mov
lods
inc
int
push
imul
idiv
fisubl
mov
xlat
daa
adc
add
mov
cmpsb
dec
shrb
stos
inc
icebp
in
push
enter
adc
jecxz
xchg
push
fidivrs
jmp
sbb
das
jns
mov
add
jle
pop
movsl
gs
popa
pop
aas
adc
mov
aam
ss
imul
cmpsb
mov
sbb
das
sbbl
mov
pop
pop
jg
jge
sbb
jl
ficoml
cmp
cwtl
mov
lcall
dec
loopne
and
xchg
xchg
in
dec
jb
dec
mov
sbb
xchg
mov
sbb
xor
filds
jno
loop
dec
in
fcoml
je
sbb
sbbb
jmp
mov
in
sbb
jb
sarb
mov
inc
dec
jo
sbb
call
or
mov
gs
jg
das
mov
rclb
dec
xchg
into
mov
jo
mov
cmc
scas
stos
lods
sub
pushf
push
rcll
mov
cmp
jnp
xor
sub
dec
leave
and
mov
and
sbb
int
cmp
sbb
push
adc
pushf
xchg
mov
int
add
sti
dec
pop
xchg
dec
jmp
push
xor
mov
xchg
ds
dec
test
pop
call
stc
inc
icebp
push
fs
fst
adc
loope
mov
inc
in
fisubrl
stos
dec
std
orl
inc
pop
or
push
bound
push
pop
xor
sub
data16
adc
popa
arpl
call
daa
cmp
inc
pop
ret
inc
inc
in
push
push
rclb
pop
sbb
push
in
les
xor
lds
and
lea
add
out
push
test
jecxz
addl
mov
cmp
mov
sbb
jbe
xchg
fucom
inc
imul
ret
daa
shll
adc
sub
jbe
sub
adc
rol
mov
std
mov
and
jecxz
mov
iret
push
mov
rclb
fidivrs
fnsave
pushf
dec
mov
xor
jno
push
and
lea
shlb
or
dec
mov
mov
adc
mov
aas
cmpl
outsl
add
dec
cmp
cltd
xlat
mov
stc
mov
je
les
js
sub
popf
sahf
fidivrl
iret
jecxz
adc
mov
fcoml
sbb
xchg
pusha
aaa
fdivrl
jmp
add
cwtl
out
loop
loop
cli
dec
dec
push
daa
pop
test
cmp
pop
dec
mov
adc
push
pop
std
jo
sbb
pop
inc
cmp
pop
decb
mov
iret
sbb
loop
rorl
lret
inc
scas
scas
sbb
jnp
jbe
pop
popf
sub
xor
sub
lret
sbb
dec
and
ret
lods
jae
and
je
enter
add
idivl
adc
inc
imul
fcoms
push
and
imul
add
es
daa
ljmp
ret
rep
sbb
aaa
jl
pop
pop
in
fldcw
sti
mov
mov
daa
push
dec
or
popa
fldt
mov
sahf
outsb
repz
out
or
outsl
shrl
add
jnp,pt
sbb
pop
and
xchg
jmp
mov
push
push
fistl
lock
inc
add
xchg
jae
and
add
out
sarb
push
push
sub
mov
push
mov
fnsave
inc
pop
sti
push
push
sub
or
imul
jb
insb
aaa
imulb
jae
mov
cmp
jecxz,pt
pushf
hlt
add
xor
int3
cs
xchg
dec
in
dec
push
and
in
push
push
movsb
adc
les
lahf
insl
or
rcrl
jp
lock
sahf
andb
in
nop
clc
out
add
int3
repnz
inc
int
and
mov
lret
outsl
gs
les
fistpl
sbb
aaa
int
inc
imul
xchg
xor
arpl
lret
repz
lods
in
pop
jmp
test
adc
pop
sub
out
jae
pop
inc
lock
lcall
cmp
js
push
stos
push
test
pop
cmp
cmp
pop
addb
lods
movsb
insl
inc
mov
fsubr
or
xor
jno
fdivr
shlb
ja
call
mov
xor
pop
mov
add
jne
add
pusha
fnstsw
repz
popf
fs
jmp
out
mov
jge
mov
es
mov
push
mov
iret
mov
insb
pushf
inc
sbbl
jo
add
inc
bound
jnp
xchg
stos
fnstsw
pop
sub
adc
cmp
cmpsb
ljmp
dec
pop
inc
js
int
cwtl
mov
sub
mov
adc
mov
xchg
mov
outsb
mull
loop
stos
mov
lret
mov
les
mov
sbb
xchg
sti
leave
insl
insl
in
push
aam
lcall
adc
aam
xchg
lahf
push
xor
inc
data16
cmp
or
jmp
jnp
inc
jne
push
xchg
xchg
jge
jbe
xor
or
cmp
test
adc
dec
out
dec
mov
lcall
lret
lock
push
xchg
xchg
xor
aaa
stos
shrl
inc
mov
jae
cmp
pop
jns
lret
sub
cltd
movsb
and
cmpsl
jl
xchg
cmp
insb
xchg
add
idivb
rcll
mov
jmp
aam
repz
lahf
inc
sub
or
adc
dec
pop
aaa
xor
mov
push
mov
scas
push
adc
loop
aad
sub
xor
loope
fmull
push
popf
rclb
js
imul
cmp
rcl
mov
sub
js
lret
cmpsb
shrl
jle
push
mov
sahf
cmp
jp
dec
rorb
fsubrp
mov
mov
mov
cltd
inc
ucomiss
sbb
iret
mov
or
in
int
mov
mov
andl
loop
ljmp
jae
fistps
ret
cmpsb
lds
nop
lar
aaa
jnp
push
imul
sub
cmp
arpl
rol
dec
pop
fadds
sti
mov
pop
movsl
es
rclb
jg
mov
dec
imul
jg
out
xor
sbb
xor
int
mov
mov
push
icebp
sbb
or
and
lods
outsl
outsl
dec
add
test
outsb
cmp
outsl
and
scas
xlat
inc
jae
jmp
push
adc
pop
mov
sub
in
push
mov
mov
push
dec
sub
xlat
lds
pop
dec
andl
dec
movsb
in
mov
mov
fucomip
sub
mov
mov
mov
xor
sub
neg
pop
sbb
and
mov
cs
push
sub
mov
arpl
fcmovnb
aas
popa
imul
and
push
test
subl
mov
and
adc
cmp
daa
xor
pop
ret
movsl
icebp
xor
jnp
pop
stc
xchg
stc
repz
in
add
nop
xor
fnstenv
inc
sub
sarb
jle
mov
outsl
stos
xor
inc
mov
jge
inc
ret
jecxz
lods
loope
dec
pushf
mov
sti
jno
into
js
rcrl
movsl
fistpl
inc
add
iret
gs
andb
and
inc
stos
popa
adc
sarl
pop
mov
push
fadd
out
mov
pop
lret
cmpsl
inc
scas
cmp
and
lods
sbb
pusha
pusha
adc
inc
std
sahf
push
sub
sub
inc
add
in
roll
addr16
cmp
insb
adc
sbb
stos
jecxz
out
icebp
or
inc
js
shlb
xchg
std
xchg
adc
and
mov
cmp
fwait
cmp
iret
jp
and
fucomip
addr16
add
mov
adc
dec
mov
fcoms
ja
ja
sbb
jbe
xchg
xchg
mov
dec
jo
sbb
push
sub
mov
adc
inc
xchg
lcall
out
cmp
dec
jmp
xor
sub
add
mov
enter
push
mov
push
sbb
add
mov
adc
push
xchg
mov
ror
icebp
mov
out
addl
push
fcomip
sub
jb
insl
test
cli
sbb
dec
fiadds
outsl
aad
push
and
xchg
jns
es
xlat
mov
dec
enter
sub
inc
les
cmp
or
push
in
inc
popa
loop
xchg
into
jbe
cmpsl
mov
jle
jp
fwait
in
repz
into
sub
pop
ja
mov
jns
outsb
mov
int3
mov
scas
pusha
mov
or
int3
add
inc
rcrb
jle
sbb
std
inc
mov
bound
pusha
mov
sarl
dec
sbb
outsl
dec
arpl
mov
out
xchg
daa
nop
notl
xor
add
rorl
das
dec
aam
js
in
repnz
loop,pn
cs
mov
adc
movsl
add
test
add
das
ficomps
loop
enter
xchg
int3
int
mov
adc
nop
add
and
jge
mov
mov
mov
enter
pop
xchg
or
and
or
sbb
ds
pop
rcrl
or
jl
testb
in
xchg
add
popf
imul
and
stos
test
ja
bound
movsb
and
mov
mov
jns
test
mov
faddp
add
or
xchg
repz
or
ret
out
mov
jl
xor
xchg
stos
pop
push
inc
in
in
sub
out
ficoml
jmp
fnstcw
lea
inc
lods
and
pop
lret
sub
add
test
cltd
lret
mov
rorb
loope
es
aam
jecxz
adc
xchg
rcll
mov
mov
cmp
pop
gs
mov
popa
mov
inc
fsubp
push
mov
push
loope
add
sub
jo
nop
or
inc
mov
or
ror
aas
repz
stos
dec
xchg
enter
pop
push
mov
divl
ljmp
repz
stc
mov
push
pop
mov
push
add
lods
push
mov
push
add
pusha
or
jp
pop
push
sub
or
or
cltd
data16
ja
inc
imul
shlb
ret
cmp
cmc
xor
adc
ret
adc
and
inc
xchg
repz
push
movsb
mov
or
push
and
lods
ret
xorb
cld
sbb
push
int
or
xchg
pushl
push
xor
or
adc
add
dec
and
pop
aad
addr16
xor
cmpsb
sbb
dec
pop
insb
xor
add
push
cs
push
xchg
adc
xchg
mov
cmpsl
jne
rcll
ds
adc
cmp
ja
insl
repz
dec
out
scas
sub
fiaddl
mov
adc
aaa
cmp
sbb
lret
fimull
in
imul
xor
stos
mov
mov
xlat
add
into
add
mov
jno
lss
dec
shrb
jp
loope
dec
roll
mov
shlb
jmp
sub
and
rcrb
jecxz
shlb
arpl
xor
mov
push
push
in
mov
cltd
int
sbb
jg
or
or
dec
lea
xchg
mov
aad
ds
ficomps
adc
mov
sti
jns
sbb
pop
xchg
inc
imul
test
cmp
sti
cmc
sti
test
add
in
pusha
push
inc
inc
inc
xchg
pop
and
jo
sbb
outsb
or
inc
cmp
sarl
insl
xor
dec
inc
imul
shlb
movsb
mov
mov
add
push
mov
and
lahf
sub
and
pop
inc
mov
frstor
sub
add
stos
aam
xor
push
cli
lock
test
les
ds
mov
bound
push
out
mov
movsl
int
and
pop
mov
test
xchg
lds
push
insb
outsl
mov
scas
rcr
je
cmc
pop
je
xor
rorl
push
cltd
push
adc
inc
stos
sub
ret
xor
test
int3
ror
and
adc
xchg
push
mov
in
outsl
fidivrs
cmp
jne
jle
aaa
inc
lods
stos
shrl
sbb
push
push
sub
popa
mov
loopne
xlat
int3
popl
pusha
inc
pushf
roll
scas
jle
mov
xchg
mov
aaa
xor
lds
nop
icebp
fldl
sub
mov
test
inc
aam
shlb
mov
jbe
jecxz
or
bound
mov
in
adc
inc
mov
pop
pop
xor
pop
popf
pop
pop
push
fldenv
mov
adc
outsb
pop
sti
xor
xchg
and
call
call
in
rep
scas
test
or
loopne
sti
ja
sbb
jl
mov
dec
lcall
jecxz
loop
mov
and
dec
cmp
movsb
inc
add
sub
mov
or
or
movsb
test
nop
inc
or
mov
addr16
xchg
test
pusha
push
ficoms
int
aad
mov
push
nop
das
adc
mov
jb
bound
lret
lret
aas
icebp
inc
jmp
xchg
and
loope
scas
sbb
out
and
pop
push
dec
int3
dec
or
aas
dec
out
sbb
fsubrl
dec
in
push
lods
into
push
cmp
mov
push
lds
flds
jno
pop
in
push
lret
xor
lahf
popa
mov
xorb
dec
aam
inc
outsb
jecxz
rcr
cmpsb
dec
pop
stos
subl
test
pop
faddp
mov
test
in
mov
dec
popf
daa
xor
cwtl
daa
cmp
xorb
faddp
out
js
pop
push
xchg
stos
shr
cmp
mov
sbb
adc
pop
into
jne
out
cli
push
insb
repz
dec
mov
popw
xlat
xchg
xchg
mov
stos
lahf
cltd
and
cmp
insl
add
inc
xchg
add
adc
sbb
pop
push
es
negl
ret
fadds
cltd
notb
sub
mov
pop
into
jmp
ss
mov
mov
sub
insb
repnz
xchg
xchg
mov
sbb
bnd
dec
les
addb
inc
and
mulb
sub
pop
data16
imul
pop
cmpl
in
jbe
jg
fistpl
add
outsb
rcrb
dec
or
mov
je
pop
ja
dec
imul
jl
xchg
lret
and
dec
and
adc
pop
icebp
es
and
push
jbe
and
divl
fstps
sbb
sahf
rcrb
ret
imul
ljmp
gs
movsb
ja
mov
stos
out
mov
test
addr16
cmc
mov
mov
iret
jno
aam
cmp
bound
dec
rorb
push
daa
adc
lret
jecxz
dec
pop
iret
xchg
mov
mov
stc
pop
pushf
xor
sbb
push
sub
and
xor
jmp
jge
outsl
inc
bound
into
loope
int
icebp
dec
fidivrl
cmpsb
orb
pop
sbb
jp
popf
pop
xor
pop
mov
xchg
sbb
fwait
aaa
mov
jp
xlat
sub
cmp
xor
inc
loop
fsubrp
js
push
sub
sbb
roll
mov
loopne
sub
push
rclb
mov
mov
xchg
ljmp
std
lods
lds
daa
sub
sti
inc
jnp
push
mov
aaa
outsl
add
pop
in
jecxz
sbb
ja
pop
ret
mov
adc
adc
ja
loopne
push
jnp
cmpsb
loopne
outsl
or
push
fsubs
sbb
mov
cmc
inc
jno
sbb
lret
mov
je
jg
rcr
scas
out
std
inc
scas
aad
pop
orl
subl
iret
or
lret
mov
push
test
xchg
std
or
jb
aad
mov
xchg
outsl
test
clc
outsb
test
mov
fmulp
add
jl
int
pop
inc
shlb
inc
xor
in
nop
hlt
sahf
mov
out
or
fldenv
dec
xchg
hlt
xchg
jns
xchg
or
cmp
mov
adc
mov
les
mov
mov
and
inc
pop
sub
movsl
in
rclb
lds
pop
mov
xchg
mov
push
into
sbb
fimull
into
call
das
jecxz
pop
fsubl
push
inc
mov
add
cmp
movsl
jns
mov
push
outsl
push
xor
adc
int
arpl
test
fadds
fwait
push
jne
xchg
jne
es
movsl
in
adc
fmull
xor
or
mov
inc
ret
cmp
dec
popa
clc
inc
adc
cltd
adc
and
lods
mov
adc
mov
jge
push
push
aas
fistl
cmpsl
fdivl
rcrb
imul
xchg
xchg
pop
xor
lods
test
jno
add
jl
sub
aas
mov
into
fldcw
adc
mov
jge
jnp
jecxz
or
lret
clc
lock
fistps
imul
inc
push
scas
adc
push
jno
mov
int
jns
sub
xchg
mov
sbb
enter
mov
sbb
or
mov
xor
sbb
call
push
cmp
xchg
repz
mov
mov
lods
mov
inc
push
pusha
xchg
cmp
sub
sub
pop
das
jno
xchg
mov
mov
and
sub
cmp
in
add
int
loop
icebp
mov
mov
pop
inc
cmp
sahf
fcmovnu
jnp
test
add
addb
iret
push
mov
sbb
add
inc
gs
sub
push
sbb
cmc
sub
scas
iret
inc
xor
lcall
arpl
jmp
lds
xchg
xor
or
je
xchg
scas
sub
adc
pop
cmc
and
icebp
mov
pop
repnz
sbbb
sub
add
lcall
rcll
iret
andl
xor
pop
fstpl
cli
and
sbb
or
cltd
in
mov
ja
std
sbb
inc
imul
push
das
rorb
xchg
stos
mov
lods
pop
outsb
sbb
sub
outsb
lcall
icebp
movntps
mov
subb
fs
fbld
mov
or
int3
xchg
sub
xor
andb
mov
in
test
mul
incl
mov
pop
ror
or
ret
ficomps
xor
xor
loope
out
cmp
push
out
repnz
js
dec
jno
cmp
cmp
cmpsl
je
mov
in
jae
pop
cld
mov
sti
inc
sbb
out
pusha
nop
shrl
pop
aaa
xchg
lea
aad
ja
inc
sub
pushl
push
sbb
mov
mov
sbb
sub
hlt
test
out
xchg
insl
jle
mov
sar
mov
lret
pop
repz
lcall
hlt
or
fiaddl
mov
scas
and
sub
icebp
xchg
dec
out
aas
cmp
adc
fisubrs
jne
sub
movsl
pop
movsb
mov
testb
mov
sahf
xor
pushf
test
fistpll
movsb
sub
dec
scas
cmp
inc
popf
rcrl
lret
mov
inc
add
imull
or
rorl
pxor
jmp
jns
into
xchg
mov
aam
pushf
fsts
ljmp
mov
add
fildl
xor
sub
mul
jns
push
lds
jmp
ss
testl
or
ja
pop
das
fdivp
pop
or
sub
fistps
xchg
and
fmuls
je
imul
or
insb
push
arpl
lock
xor
out
aas
jp
push
inc
inc
mov
mul
in
add
in
in
ret
mov
jge
and
adc
jecxz
xor
cmp
xchg
sub
pop
jmp
cmp
inc
xchg
and
lock
mov
gs
and
mov
fnsaves
js
idiv
das
cmp
addr16
jp
test
push
jg
xchg
push
add
popf
ja
test
push
subb
test
out
ja
pop
inc
mov
rorb
jp
and
out
sbb
push
jne
inc
ret
outsb
jns
pop
imul
dec
lcall
fdiv
fdiv
leave
movsb
sbb
adc
inc
cltd
mov
iret
sub
rolb
mov
lds
jmp
jecxz
xor
ret
add
pop
andb
daa
xlat
cmc
test
neg
bound
or
or
dec
aam
scas
adc
loop
rol
arpl
push
mov
mov
push
into
cmp
std
fcmovnb
and
daa
outsl
imul
mov
push
mov
inc
sub
sti
cmpsl
adc
out
push
addr16
loope
pop
lea
std
xchg
mov
aas
xor
mov
inc
cld
idivl
inc
movsl
add
sub
push
and
movsb
sbb
outsb
push
mov
imul
les
outsb
pop
xchg
and
and
pop
je
xor
out
jg
int3
ret
mov
imul
mov
cltd
mov
sbb
lahf
jg
pusha
mov
mov
push
xchg
and
icebp
jle
cltd
iret
jmp
dec
xor
mov
add
add
and
cmpsl
jp
jmp
lea
testb
add
pop
mov
pop
repz
sbb
pushf
jge
stos
mov
shrl
inc
mov
sti
enter
push
add
inc
outsl
rorb
inc
add
dec
sarb
int
adc
add
pop
xchg
int3
fld
scas
xchg
sub
lahf
mov
lahf
mov
dec
loop
scas
ljmp
cmp
mov
push
mov
push
repz
jge
cmp
mov
mov
int3
sbb
scas
jp
insl
pop
cwtl
popa
inc
jae
in
idivb
das
fists
sbb
je
cs
cli
cmp
int
rcr
mov
mov
stos
xchg
imul
or
arpl
aam
xor
lret
cmp
jmp
movsb
mov
movsl
inc
jmp
jns
pop
mov
es
std
mov
xor
jae
lahf
stc
fwait
daa
lea
xchg
mov
flds
loope
jae
and
push
stos
dec
repz
test
lods
pop
bound
pop
add
out
mov
mov
lret
mov
shlb
pop
pop
jge
add
mov
xlat
add
call
mov
mov
ja
xlat
jns
inc
jbe
stos
cld
dec
pop
or
popl
jne
jmp
xchg
inc
and
les
dec
movups
mov
repnz
pop
mov
mov
bound
mov
mov
fwait
adc
xchg
test
cmp
clc
scas
shll
out
movsl
xchg
jecxz
in
ljmp
pop
sub
mov
lea
mov
mov
js
pusha
inc
aaa
rcrl
jecxz
scas
rcl
or
mov
or
dec
mov
sub
in
bound
jns
pop
and
mov
dec
jmp
pop
or
and
jae
xor
sub
xor
xor
ret
mov
dec
leave
out
adc
mov
mov
ja
inc
les
pop
hlt
mov
or
out
daa
aas
je
ret
inc
outsb
and
mov
mov
mov
add
out
jle
rclb
xchg
imul
leave
jl
ljmp
in
sub
stos
jg
icebp
cli
popf
cmp
fwait
add
shrl
mov
nop
aaa
cmp
addb
das
xor
ret
pop
and
or
push
jp
xchg
push
cmp
jnp
sbb
jle
xchg
jbe
push
test
scas
mov
imul
adc
pushl
add
adcl
xor
sub
out
shlb
adc
add
push
dec
push
push
jle
in
sub
adc
movsb
int
sub
mov
add
mov
clc
add
out
ret
jle
enter
dec
inc
xchg
ja
aaa
mov
inc
sbb
pop
push
inc
push
test
dec
fs
sub
adc
insb
xchg
xlat
pop
arpl
cmp
sub
mov
dec
aad
leave
icebp
xchg
add
or
mov
iret
sbb
pop
loopne
lods
aas
add
cmpsb
dec
jmp
mov
xor
popf
movb
cs
adc
fs
push
popf
rcrb
enter
stos
daa
xlat
out
add
dec
adc
jl
xor
push
shr
sbb
sbb
push
cld
add
cmp
hlt
scas
or
adc
gs
xchg
js
sahf
test
mov
cmpl
mov
and
cltd
mov
push
bound
xchg
testb
mov
cmp
adc
ffreep
ficoml
lcall
loop
das
inc
ret
pop
rcl
out
mov
clc
xor
outsl
mov
jmp
leave
std
cmpsl
loopne
je
inc
insb
dec
sub
loope
sub
jle
into
aam
or
mov
outsb
inc
add
lock
dec
ja
mov
jb
int
or
inc
sbb
push
sbb
lea
mov
ss
xchg
and
sbb
jecxz
jo
xchg
mov
movsb
cwtl
cld
cli
sub
push
bound
or
mov
loope
rcll
xor
and
add
ret
ss
jbe
cmp
cmp
in
fistps
push
mov
adc
mov
xchg
xlat
repnz
inc
jo
jg
push
jne
cmp
int
sete
adc
ret
cltd
ljmp
out
jp
aaa
pop
add
call
sbb
lods
std
mov
cli
shlb
adc
dec
or
jl
pop
xorb
stos
or
and
adc
xor
iret
xchg
xchg
cltd
mov
arpl
hlt
sub
inc
popa
imulb
sub
or
sahf
lock
lods
push
jae
pop
or
inc
sbb
inc
inc
xor
mov
push
xor
jle
mov
daa
mov
out
push
mov
mov
or
jnp
xchg
inc
mov
mov
inc
xchg
jmp
mov
jnp
ss
addr16
add
gs
in
in
in
movsb
sub
adc
insl
push
sbb
mov
pop
and
dec
in
jae
sbb
push
pop
sbbb
pop
shll
dec
hlt
jecxz
lods
inc
lods
pop
and
lret
inc
push
pusha
cwtl
aad
push
push
jmp
sub
sub
lahf
sbb
pop
cmp
aam
cmp
inc
mov
xorl
mov
inc
jbe
cmp
jns
xchg
mov
xchg
movsl
sbb
sbb
and
imul
sbb
add
aam
dec
or
gs
xlat
mov
ret
cmpsl
lret
call
or
fdivp
add
stos
repz
rclb
and
add
out
aas
cmpsl
jecxz
mov
xchg
les
dec
loopne
or
ss
push
les
push
xorb
sub
or
outsb
ds
dec
icebp
out
sti
inc
sub
or
out
addl
push
lret
and
sub
out
in
dec
mov
inc
or
scas
hlt
dec
cmp
dec
cwtl
cmp
jne
jp
jp
lods
pusha
mov
xchg
loope
mov
xchg
dec
cli
jecxz
jg
fisubs
xchg
or
jmp
mov
adc
and
popa
push
lcall
fnstsw
insb
fsubrp
cwtl
adc
mov
clc
lcall
push
mov
jo
sub
cmp
aad
add
push
repnz
xchg
xor
or
fimull
fld1
xchg
jo
sti
les
and
lret
pusha
sbb
add
mov
cmp
jbe
push
mov
lods
add
cwtl
cmp
mov
push
ss
lds
enter
jp
push
adc
mov
sahf
xchg
shll
jo
xchg
mov
push
inc
cwtl
push
inc
lahf
push
dec
jae
cmp
push
repnz
dec
jp
pushf
dec
jno
das
jns
xchg
inc
jecxz
lds
xchg
lea
cmp
fwait
xor
cld
fstpt
add
add
xchg
push
clc
mov
cwtl
xchg
lret
fsub
mov
fwait
pop
xor
push
mov
mov
and
in
push
push
sub
adc
repnz
shll
lock
fmull
addr16
jae
lret
sbb
pop
or
push
mov
add
testl
push
pop
xchg
pop
adc
jae
jge
pusha
jg
mov
xchg
scas
cmp
sub
movl
imulb
cmp
mov
push
dec
rcrl
das
or
int3
fisubs
imul
mov
mov
repz
jmp
rclb
std
dec
mov
out
movsb
stc
mov
fisubrs
add
sub
and
pusha
sarl
mov
repnz
mov
mov
and
pop
lods
sbb
or
ret
enter
stos
ret
test
push
pop
and
jo
hlt
lods
or
mov
dec
cs
nop
imul
add
test
push
push
ljmp
stos
sub
xor
sub
or
mov
inc
repz
out
test
dec
test
or
repnz
xchg
out
push
xlat
into
ss
inc
ds
fnsave
subl
xchg
out
es
ja
inc
ss
ljmp
push
pop
xor
movsl
scas
xchg
sti
sbbl
faddl
call
mov
inc
sub
fcompl
xchg
cmp
inc
rorl
loope
mov
out
mov
adc
fwait
or
and
mov
cld
push
dec
xlat
cmp
jne
cmc
stc
or
mov
stos
cwtl
or
in
xchg
sub
ret
pop
dec
shl
xorl
adc
int
pop
mov
mov
test
sbb
add
adc
mov
cs
jo
nop
inc
inc
sub
push
fldt
xchg
dec
jae
and
xchg
iret
sub
sti
mov
int
cs
mov
lock
pusha
lock
cmp
sub
xor
stos
inc
cmpsb
addb
xchg
xchg
aad
pop
add
jae
add
jg
insb
mov
cmp
inc
adc
xor
mov
jg
ds
shl
jmp
dec
incb
daa
dec
jno
in
fs
add
das
imull
in
jle
jge
add
ficomps
sbb
xchg
xchg
leave
loopne
xchg
and
cmpsb
and
adc
loopne
insb
lea
inc
cmp
xchg
push
adc
aam
mov
and
mov
dec
pop
addr16
jns
sub
inc
ret
dec
lods
insl
push
popa
ljmp
cmp
enter
fcoml
cld
lahf
std
sbb
pop
push
jge
cli
enter
aas
insb
enter
call
ret
pop
sbb
push
mov
push
mov
and
pusha
dec
adc
pop
sub
and
jp
push
add
cmp
ds
ret
decb
and
jb
roll
pop
adc
xor
xchg
sub
das
call
push
int3
jae
sub
push
or
cmp
cmpsl
mov
jl
fmull
pushf
sub
je
rcrl
push
nop
push
jmp
lahf
push
push
pop
push
gs
and
dec
lock
jae
adc
sbb
add
in
sbb
fstpt
or
sub
lahf
scas
jmp
push
xlat
scas
leave
imul
xchg
push
cmpsl
adc
mov
add
test
hlt
rcrl
lds
push
fstps
add
gs
jg
adc
fnstenv
pop
in
mov
pushf
cmpsb
and
imulb
out
insb
sub
pop
mov
and
std
jns
add
fsub
xor
mov
fidivrl
rcrl
adc
cmp
mov
jp
mov
adc
or
xlat
push
mov
movsb
je
adc
push
mov
mov
daa
sbb
inc
int
je
rolb
imul
loope
xor
xor
xchg
mov
and
push
stc
jp
and
push
loop
pop
ret
or
sub
lret
hlt
xchg
xchg
cmc
pop
mov
es
outsl
in
sarl
lock
mov
int
pop
cmpsb
xor
lret
dec
jmp
shlb
inc
xchg
loopne
mov
dec
push
mov
fldenv
cmp
mov
jno
pop
mov
jmp
add
ja
pop
pop
and
in
repz
ljmp
fwait
mov
les
and
add
inc
add
test
lds
cmpb
xlat
adc
iret
into
sarb
stos
rorl
mov
xlat
inc
imull
adc
and
mov
cmpl
movsl
stos
cwtl
stos
fdivrl
das
xchg
and
loop
xor
pusha
stc
inc
notl
cmpsl
adc
pop
inc
div
jmp
loope
cmp
add
orb
pop
scas
ret
lretw
popl
jo
adc
jmp
lods
das
mov
inc
fmulp
iret
jl
scas
arpl
loopne
add
lret
mov
repz
mov
jno
lcall
stc
inc
push
add
push
les
iret
rclb
imul
imul
push
and
sbb
pusha
mov
gs
or
mov
sub
pop
sub
jmp
das
xchg
loopne
sbb
rcl
dec
pop
pop
es
or
aad
das
inc
and
decl
pushf
movsb
jge
mov
xor
cmp
adc
xchg
pop
mov
cmpsl
cmpsl
sti
push
jl
push
sub
inc
ljmp
sub
sub
mov
stc
shl
jge
test
mov
insb
andb
xor
movsbl
mov
and
nop
add
shll
ja
insl
jae
imul
out
test
es
rcl
cmpsb
jnp
pop
push
inc
push
aam
adc
rcll
mov
mov
call
add
outsl
or
jg
add
lods
sub
movsb
hlt
xchg
dec
pop
stos
sahf
inc
xchg
gs
xchg
iret
mov
sub
es
lods
pushf
sub
xlat
or
lods
cmp
in
fs
inc
sbb
cmpb
sti
xchg
aad
dec
sbbl
into
mov
cmpsb
dec
jo
jae
mov
popa
scas
xor
cs
mov
mov
xchg
movsl
out
add
leave
mov
push
out
ret
inc
and
call
cld
repz
loop
add
mov
mov
jmp
cmp
jns
in
mov
jnp
inc
xor
js
dec
and
add
pusha
es
add
mov
fistpll
leave
sub
test
aaa
notb
adc
in
mov
inc
loope
out
lods
call
icebp
shrl
mov
out
mov
or
sbb
inc
out
imulb
sti
jmp
dec
sbb
rorl
nop
les
in
cwtl
adc
mov
xchg
or
stc
dec
xchg
mov
cmp
jmp
add
adc
sub
in
add
sbb
xlat
inc
icebp
push
jb
and
out
and
loopne
aas
repz
arpl
iret
mov
or
sahf
shl
arpl
out
loop
mov
daa
icebp
cmp
dec
stos
cmp
or
pop
xchg
lret
xchg
ss
mov
inc
mov
int3
popf
cs
testl
test
xchg
inc
stc
shll
nop
push
andb
ret
std
mov
xor
and
cmp
aad
loopne
xchg
fldcw
jno
fs
cmpsl
je
mov
test
jmp
and
aam
std
mov
cmp
cmp
mov
xchg
and
rcrb
or
cmp
aas
mov
fsubl
jns
scas
cltd
cmp
xchg
nop
jo
out
pop
add
cld
xor
and
orb
popf
out
cmp
jle
mov
sub
xor
sub
js
pop
in
jne
outsl
js
insb
iret
and
or
xchg
lret
jns
cmc
dec
and
sbb
add
ds
jmp
jae
loop
add
dec
shrb
sbb
cmpsb
adc
or
pusha
dec
push
add
inc
sbb
mov
add
les
sti
push
aad
leave
xor
adcb
mov
aam
sbb
fs
nop
xor
jge
in
lret
pand
inc
xchg
pop
xchg
inc
and
hlt
xchg
sbb
jl
jo
fbld
filds
xor
pop
cmp
add
mov
cwtl
ret
std
jle
add
fcmovnu
adc
jb
xlat
fimull
add
int3
dec
getsec
lock
clc
bound
mov
pop
xor
push
mov
rorl
xlat
jp
insb
jnp
add
pop
in
sbb
outsb
adc
int3
dec
pop
cwtl
testb
pushl
cmp
mov
rcrl
mov
mov
push
xor
in
cmp
add
pusha
add
sbb
adc
cmpsb
repz
push
in
mov
enter
repz
addl
mov
pusha
test
inc
mov
pop
daa
clc
push
sub
cmp
scas
testl
scas
add
jae
dec
jmp
xor
sbb
pushl
repnz
imul
movsb
xchg
pop
push
outsb
push
lret
inc
ret
or
xor
lods
or
rol
mov
mov
sahf
cmpsb
sbb
cmp
nop
jbe
add
data16
stos
call
daa
and
shll
dec
mov
add
mov
mov
inc
fcompl
iret
sbb
cmc
cmp
icebp
pop
mov
mov
jno
sub
das
xlat
rolb
fisttpl
mov
sbb
daa
dec
lahf
lret
test
test
add
shrb
push
sahf
pop
lock
xor
cmp
lock
push
rolb
xor
insl
ds
mov
aad
popf
cmp
sbb
loopne
lods
ret
add
pop
xchg
xlat
test
dec
xchg
mov
cltd
sub
js
cld
cmpb
out
loope
aad
daa
outsl
lods
adc
cmp
loop
sub
aaa
mov
lea
adc
insb
xchg
dec
clc
sbb
sub
addr16
jge
int
movsb
aas
lea
inc
aam
fsubl
aad
lcall
shr
cmp
mov
push
mov
cmpsl
push
je
aad
sub
xchg
orb
push
pop
outsb
jmp
cmp
enter
fildl
ficompl
insl
data16
lods
cmp
and
push
inc
add
mov
adc
dec
mov
adc
shlb
das
out
mov
popf
in
fwait
inc
loopne
imul
xorl
xchg
pop
lret
inc
push
enter
jo
ss
fnstenv
mov
mov
neg
je
pop
push
stc
push
sub
pop
jl
in
adc
scas
dec
je
ds
push
and
inc
bound
push
stc
inc
adc
cmc
pop
or
adc
inc
cmp
push
mov
mov
call
ficoms
push
stos
dec
lret
push
xchg
cmp
mov
adc
sub
mov
lcall
adc
jle
js
jno
xchg
test
movsl
xchg
fidivrs
je
jmp
xlat
adc
xchg
jmp
mov
addr16
scas
loopne
mov
leave
mov
pushf
nop
sbbb
scas
clc
xchg
inc
cmc
inc
xchg
pop
jmp
jg
sbb
sub
pushf
inc
or
jno
and
xor
movsb
subl
mov
xchg
sahf
mov
jecxz
pop
out
sbb
mov
and
movq
rcll
push
xchg
push
lods
pop
int
ds
cmp
addr16
lods
or
daa
fistps
cmp
inc
push
sub
repz
das
cmp
pusha
dec
outsb
mov
pop
movsl
cmp
mov
ficoms
mov
push
cmp
lcall
dec
mov
add
mov
push
cli
dec
mov
or
cwtl
dec
bound
push
push
cmp
paddusb
jle
add
pushf
jg
pop
sarl
mov
sbb
and
sbb
xchg
int
in
je
adc
cmp
jns
sbb
movsl
push
pop
ret
mov
jl
fcmovu
in
jne
pop
xlat
mov
adc
mov
addl
pop
ret
nop
and
hlt
add
add
mul
das
cltd
aam
add
push
add
mov
mov
int3
sub
rcrl
jne
jmp
and
rep
movsb
arpl
push
cmp
lret
sti
dec
es
dec
aas
lcall
or
in
push
mov
inc
mov
pop
or
dec
lret
jge
shrb
mov
adc
repnz
das
enter
xchg
jns
and
or
stos
repz
adc
ficomps
fwait
inc
int
inc
stc
jg
loop
lfs
daa
and
aad
movsl
jmp
inc
mov
pop
mov
aam
xchg
loope
aad
or
adc
mov
leave
lcall
xor
js
xor
mov
sbb
dec
adc
xchg
adc
sbb
xlat
mov
pop
xchg
pop
xor
dec
jo
and
test
aad
jg
jbe
pop
xchg
cli
mov
xlat
jmp
gs
outsb
mov
sub
lret
sub
fcomi
fcomps
push
int
sbb
sub
mov
pop
movsb
pop
cmp
or
fists
aas
add
pop
sub
lcall
repnz
push
or
add
adc
test
rclb
ret
stc
cmc
clc
or
mov
inc
xchg
cli
inc
xchg
ds
or
mov
add
and
loop
sub
dec
xor
popf
hlt
jb
insl
int3
push
fiaddl
push
shl
dec
sub
lock
push
je
nop
sub
push
sti
xor
setp
mov
aad
mov
in
imul
js
or
shr
and
xor
push
cmp
repnz
xchg
push
add
cld
xlat
jle
cli
push
adc
shll
dec
mov
stos
fdivrp
ja
push
lock
in
movsl
int3
dec
in
adc
pushf
jne
or
ret
icebp
push
mov
mov
dec
xor
sub
mov
test
sbb
adc
rcrb
push
mov
in
stos
clc
pcmpeqb
cmp
mov
jmp
mov
loop
jne
dec
clc
gs
mov
in
or
dec
lock
mov
push
pop
cmp
and
stos
jno
ds
sbb
inc
shll
dec
mov
mov
xor
lahf
ja
dec
loop
arpl
loope
insl
and
dec
add
pop
pop
sub
mov
xchg
cmp
mov
aaa
xchg
fnstenv
sub
fldt
xor
mov
lret
mov
cmp
imul
stos
adc
xchg
das
aas
out
in
mov
dec
or
ret
lods
ficompl
xchg
or
xor
adc
or
push
xlat
aas
or
js
test
insb
pop
jb
and
pop
jg
add
push
mov
xchg
lret
call
sahf
adc
out
enter
push
mov
mov
push
cmc
xor
imul
rcll
jae
int3
rolb
mov
push
popa
xchg
xor
sbb
inc
test
ljmp
mov
dec
jl
imul
aad
jle
aad
add
and
mov
insl
sub
fwait
out
xor
xor
movlhps
sbb
jns
mov
bnd
fdivl
jle
xchg
clc
lods
fdivrp
ss
dec
dec
sbb
sti
inc
cwtl
mov
fprem1
jno
lods
mov
into
and
jl
pop
sub
movb
addl
andb
lds
xor
mov
leave
bound
xor
inc
shl
adc
adc
cmc
xchg
xchg
fcoml
shl
push
popa
leave
mov
cmp
cmc
push
aam
std
or
or
or
adc
lcall
stc
int3
mov
mov
inc
mov
inc
outsb
xchg
test
inc
into
stc
sti
notl
in
lea
and
lea
ds
clc
xchg
pusha
sub
sahf
lahf
testl
inc
cmp
cmp
sub
xor
loope
lea
add
daa
fldl
lods
ret
lods
mov
xor
adc
push
add
mov
es
push
sahf
xor
ja
pop
mov
jno
fidivl
popf
xor
into
mov
inc
addb
dec
bound
pop
push
dec
and
add
mov
and
outsb
jnp
adc
lods
cltd
mov
pop
loope
pop
femms
mov
adc
add
movsl
lret
sbb
xor
xor
and
jb
es
jecxz
leave
jae
sbb
repz
je
push
dec
insb
push
pop
push
mov
lock
stc
rcl
fistpl
push
andb
in
push
scas
test
jp
push
lcall
jecxz
pop
add
dec
test
xchg
cwtl
mov
je
pop
push
call
stc
das
mov
shll
or
jmp
push
pop
int3
adcl
aaa
xor
ss
cmpl
pop
shll
xor
icebp
and
ret
sbb
jle
loop
sbb
orl
mov
dec
repnz
xchg
cmp
aaa
je
in
out
mov
mov
pop
sbb
jne
cmp
or
push
jl
lods
cltd
outsb
stos
insl
jb
lahf
xchg
and
xchg
add
insl
inc
pop
xchg
jp
xorb
mov
cmp
enter
jle
movsl
adc
movsl
in
addr16
sub
cmp
push
rcrl
gs
xchg
cs
push
cmp
jge
xor
jbe
dec
dec
lods
push
push
cli
stos
xor
jne
clc
adc
je
jns
andb
in
psadbw
insb
fidivs
lret
lods
jbe
fists
loopew
add
mov
inc
icebp
dec
push
or
addb
sbb
mov
sbb
jbe,pt
jo
daa
push
sti
push
ret
jae
ja
push
dec
outsb
push
inc
fldcw
ljmp
call
and
shl
lods
sub
popf
push
leave
jb
movsl
push
fidivl
in
jecxz
addl
fcomps
push
pop
jo
arpl
adc
icebp
pop
es
sub
or
dec
ror
or
adc
mov
jecxz
mov
inc
test
adc
push
leave
inc
dec
faddl
mov
into
cmp
mov
push
sub
sub
and
lods
sub
pop
in
movhps
inc
sti
xor
pop
shlb
cmp
inc
mov
dec
mov
xchg
add
jnp
enter
xor
orl
lahf
repz
mov
sbb
cmp
fsubrp
cmc
sub
mov
push
movsl
sbb
or
mov
xor
outsb
and
lcall
in
or
fs
adc
mov
pop
mov
adc
testb
stc
jbe
shll
stos
xchg
inc
pop
xor
lods
push
push
add
xchg
xchg
int3
jnp
hlt
push
ret
cmpsl
inc
jl
dec
insl
adc
cwtl
xorl
lods
sbb
pop
jecxz
pop
dec
cmpl
sbbl
sub
arpl
int
mov
mov
cli
fwait
rcrb
xchg
rorl
pop
fistpl
mov
or
fistps
cltd
adc
sbb
fstps
xchg
push
popf
lods
lods
insl
in
jecxz
popf
lret
imul
cmc
jno
mov
dec
adc
ss
imulb
pusha
add
sahf
jl
inc
or
scas
sbb
les
out
mov
cli
std
push
sub
jp
test
imul
jge
and
xchg
sbb
mov
icebp
jg
add
jmp
outsl
ja
test
push
ror
push
pop
fstl
adc
inc
mov
mov
pop
xchg
idivb
inc
cmp
and
mov
or
cs
fs
das
xor
dec
hlt
das
or
pushf
imul
andb
dec
xor
add
int3
popa
jns
push
shlb
mov
cmpsl
dec
mov
sarl
dec
and
push
fisubrl
mov
mov
lods
pop
cmp
es
pop
cmp
or
and
jmp
pop
repz
in
mov
mov
shlb
dec
dec
lcall
mov
cmp
lea
add
pop
add
sub
imulb
rclb
inc
sub
dec
in
xor
das
scas
adc
movsb
pop
jo
add
dec
stc
inc
sub
xor
mov
xor
dec
adc
stc
lds
flds
push
enter
mov
xchg
sbb
adc
test
adc
push
pusha
call
push
mov
push
lea
cmp
mov
aam
fidivrl
into
enter
jl
and
xor
fsubrl
mov
mov
pop
push
push
xchg
lret
shl
js
decb
rorl
xchg
mov
push
jecxz
nop
cmp
cmc
or
jbe
jmp
jb
rcrl
mov
mov
addr16
sub
mov
xchg
inc
pop
xchg
pop
dec
jne
jbe
add
out
jmp
sub
adcb
and
cwtl
mov
ret
aad
subb
and
xchg
inc
xchg
out
adc
imul
pushl
pop
mov
loope
mov
xchg
and
insb
into
cmc
test
lcall
sub
jno
jg
inc
cs
jnp
notb
stc
or
ljmp
dec
clc
int
and
sbb
mov
xor
dec
mov
out
jns
lret
ss
out
dec
sarl
test
sub
push
pop
pop
out
je
xchg
inc
mov
sub
xchg
sbb
pop
and
bound
lahf
cmp
scas
adc
mov
xor
je
mov
fidivs
addr16
aas
mov
adc
jnp
lock
outsl
sbb
mov
ret
pushf
or
pop
push
or
xor
in
or
aad
xor
test
inc
mov
lret
jo
xor
add
sbb
add
jne
push
loopne
popf
push
fstpt
mov
jmp
jbe
packsswb
jo
push
sbb
mov
dec
adc
dec
sbb
add
aas
loop
mov
cmp
adc
out
movsb
mov
cld
dec
push
loope
sbb
movsl
pusha
mov
add
gs
cmp
jae
xchg
pop
xchg
imul
aam
ror
dec
sub
mov
repz
xor
orb
lcall
xchg
loope
mov
xor
pop
xchg
bound
icebp
sbbl
daa
cltd
out
push
mov
pop
xor
xor
shrb
lock
and
pop
shr
lcall
mov
sbb
jmp
and
xchg
lods
mov
shrl
and
fcompl
jbe
cmc
cmpsb
icebp
xchg
adc
jmp
or
jle
xchg
pop
cmp
adc
adc
mov
or
xlat
arpl
mov
mov
mov
sbb
xor
add
push
and
leave
jno
test
nop
popa
sub
push
adc
pop
push
mov
pop
es
xchg
mov
push
cmp
sarb
mov
out
mov
movsb
stos
adc
lret
mov
imul
pusha
xchg
mov
adc
rcrl
mov
ret
pushl
push
or
sub
je
call
rcl
out
adc
stos
xchg
sbb
lods
sub
js
into
cmpsb
xchg
mov
xchg
imul
mov
dec
jns
push
xchg
push
imul
sbb
lock
mov
jno
pushf
addr16
test
adc
xchg
add
mov
nop
jno
mov
push
dec
rol
rorb
rorb
imul
cmp
cli
loop
pusha
in
orl
test
xchg
mov
out
fs
dec
add
out
lods
or
cmpsl
loop
or
shl
adc
add
push
mov
jnp
xlat
nop
clc
jl
aad
jbe
gs
shll
out
sarb
movsb
push
clc
xchg
mov
cmc
push
cli
jmp
push
xor
ret
das
mov
loop
push
out
in
scas
cmp
lods
test
pop
mov
lea
mov
shrb
and
push
lret
ret
ja
mov
mov
std
mov
stc
nop
add
sub
sub
lock
stos
mov
mov
mov
mov
test
das
sub
mov
testb
xor
fwait
xchg
jns
xchg
inc
in
and
jb
cmp
jl
in
jecxz
popa
clc
nop
sub
cmpsl
loope
push
rcll
aas
pushf
rorl
loop
repnz
xchg
xchg
fdivl
lock
adc
inc
inc
xchg
mov
mov
in
into
inc
outsb
cltd
imull
repz
jbe
cwtl
pop
pushf
cmp
push
movsb
or
mov
scas
mov
sahf
dec
push
add
push
sbb
stc
mov
add
mov
daa
aad
ret
jg
xchg
les
jmp
push
pop
cmp
aad
popa
or
xor
fld
or
dec
cmpsb
sbb
xchg
push
dec
jnp
ret
dec
push
sbb
in
sub
ljmp
lods
inc
lock
mov
dec
push
xchg
scas
inc
lods
mov
mov
add
ret
incb
jmp
push
mov
mov
sahf
ss
jp
push
xchg
xchg
add
popa
nop
pop
jns
mov
sub
into
jno
aaa
lods
loop
jl
push
test
push
jg
int
fmull
pop
add
cli
jmp
inc
out
mov
shl
fistps
adc
lods
pop
mov
xor
sbb
mov
cmc
outsl
cld
push
and
pop
inc
cs
orb
jg
xrelease
xor
pop
lods
mov
sbb
xchg
mov
jnp
cmpsl
dec
sbb
fisubrl
inc
in
out
add
xchg
fldcw
andl
dec
or
movsl
push
mov
pop
push
sbb
sbb
dec
cmc
jno
xor
data16
int
mov
cmp
inc
leave
shlb
mov
or
mov
mov
push
xor
or
mov
pop
jnp
andb
jo
imul
dec
bound
out
test
stc
stc
int
or
mov
divl
cmpb
cmp
jg
cmp
es
test
adc
cmpsl
shld
add
inc
je
cli
inc
jmp
les
mov
sub
sbb
mov
test
imul
push
gs
mov
stos
and
xchg
fisttpll
inc
lcall
xor
xor
cli
out
pushf
sbb
mov
push
addr16
jmp
xlat
test
add
xorb
and
cltd
xor
scas
sub
xchg
mov
scas
xchg
pop
out
in
pop
aam
push
nop
xor
inc
mov
and
pop
out
divl
dec
push
xchg
xor
mov
ret
add
sbb
es
jno
stos
sbbl
andb
mov
clc
lret
les
push
jnp
lahf
sbb
shll
push
test
adc
je
stos
scas
cmp
popf
lods
adc
popa
jns
loope
stos
sahf
aad
lcall
mov
aaa
sti
jge
pop
repz
outsb
fnsave
loope
mov
mov
dec
sbb
incb
stc
push
cmp
sbb
movsb
arpl
into
pop
mov
mov
divl
pushf
xchg
push
insb
dec
iret
shrl
insb
xor
div
cld
sub
mov
and
out
adc
xchg
or
jle
add
fidivrl
xor
les
pop
pop
dec
pop
mov
adc
fdivrl
mov
adc
int
enter
js
jne
pop
out
sbb
jmp
mov
rclb
mov
push
mov
scas
xlat
ds
fstpt
les
jb
inc
mov
daa
test
sbb
jmp
call
pusha
call
inc
sbb
xor
push
loop
or
sbbl
jl
fcmovnu
xor
dec
sbb
imul
or
or
dec
sub
add
or
sbb
hlt
out
dec
jp
sbbl
add
xorl
inc
dec
in
push
jb
leave
hlt
pushf
cmp
sub
mov
cmpb
loop
or
sti
daa
aad
pop
mov
ljmp
pop
pop
jg
int3
cmp
mov
fistpll
fnstenv
scas
bnd
jg
xchg
pop
cltd
aam
sub
adc
add
add
mov
pop
jle
roll
fsubrl
sahf
ss
rcrl
mov
xlat
pop
into
cmpsb
lea
jae
or
jnp
dec
cld
pop
xor
scas
xor
mov
dec
scas
clc
bound
cmpsb
cmp
push
xor
mov
xchg
cmp
ljmp
mov
or
scas
add
xor
insb
pop
mov
out
adc
aas
fs
in
dec
mov
dec
inc
pop
push
repnz
repnz
scas
outsl
neg
les
fsubs
jecxz
sahf
std
pop
push
ficoml
push
icebp
push
test
inc
fisubl
adc
inc
insl
push
das
jle
push
cs
lret
cmp
sub
in
dec
pop
aad
arpl
int
ret
popa
fldl
std
dec
push
adc
add
pop
sub
dec
popa
in
push
push
incb
jnp
out
push
outsb
std
aad
dec
mov
or
inc
or
scas
xchg
or
adc
movsb
scas
add
lock
data16
cwtl
dec
xchg
lret
mov
outsl
ret
adc
or
push
sub
out
sti
sub
adc
jne
push
or
sub
je
xor
cmp
hlt
ds
inc
pop
push
popf
fstps
insl
test
call
imul
dec
scas
idivl
push
lock
ja
mov
les
bound
inc
mov
in
ret
jns
cwtl
fmuls
dec
jmp
jle
jae
and
in
out
push
push
cltd
sbb
add
mov
gs
sbb
ret
pop
sub
mov
arpl
dec
fxch
ficompl
in
test
les
xchg
mov
daa
aam
adc
jge
js
les
mov
clc
cld
xlat
fdivr
pop
xchg
ss
adcl
subb
stc
aad
jecxz
adc
cmp
sub
arpl
mov
push
fsubr
addr16
and
jp
out
fstpl
in
loopne
dec
push
cs
js
out
out
dec
fidivl
inc
sbb
shll
sbb
and
testb
cmp
jnp
mov
into
fxtract
int3
push
mov
popa
ss
or
pop
data16
aad
xlat
mov
xor
xchg
sub
sbb
mov
or
pop
mov
xchg
sbb
lahf
fidivs
pop
mov
dec
add
adc
jmp
stos
jne
inc
pop
ds
mov
lret
xchg
and
pop
push
mov
push
loop
mov
les
in
sbb
bound
xchg
mov
cli
pop
test
subl
push
fisubl
scas
sbbb
push
ret
add
icebp
inc
hlt
test
mov
mov
cli
je
xor
outsl
mov
aam
xor
sub
test
sub
cmp
lret
pusha
jle
cmp
xor
sub
mov
jecxz
push
std
nop
addl
nop
ret
repz
mov
xchg
xchg
pop
daa
jp
inc
bswap
xor
xchg
jbe
cmp
ss
push
cs
or
pop
mov
movsl
cmpsl
mov
mov
pop
inc
imul
xchg
mov
stos
mov
mov
aam
lods
insb
add
into
inc
ja
iret
push
imul
cmp
gs
dec
movsl
and
fs
mov
outsb
stos
out
push
fdivrs
cmpl
lret
ljmp
inc
dec
mov
rcrl
mov
in
fcomps
push
sub
and
shld
hlt
push
xor
push
fcompl
fiaddl
popa
lock
mov
pushl
push
repnz
shlb
and
sbb
sub
mov
je
pop
ljmp
je
dec
out
xchg
dec
push
or
push
in
les
push
test
and
xor
fadd
insl
pop
push
push
and
movsb
sub
mov
divb
aam
and
insl
add
push
inc
push
adc
bound
mov
sub
xchg
add
aaa
add
hlt
jge
and
add
dec
add
stc
ja
jbe
xlat
mov
daa
or
insl
test
aas
jmp
push
mov
repz
add
fistl
xchg
fidivs
mov
sbb
popa
jecxz
push
in
push
push
push
fbstp
sar
push
and
leave
xor
sbb
or
lods
xor
xchg
dec
rclb
fdivl
push
dec
xor
adc
js
cmp
push
jl
add
movsl
mov
call
lea
test
lahf
popf
pop
out
adc
cltd
push
mov
xchg
jecxz
jae
mov
divl
mov
out
push
jge
jecxz
and
ja
cmp
fisttps
inc
insb
inc
arpl
fldcw
das
fcom
mov
inc
jg
cmpsb
lret
push
add
or
leave
sub
dec
pop
mov
and
or
push
inc
mov
scas
sbb
push
aam
ret
xchg
addr16
or
cwtl
push
imul
jno
jecxz
cli
outsb
mov
repz
setg
lret
inc
sti
data16
add
fwait
testb
sub
cmpsl
pop
js
cwtl
sbb
mov
xor
push
push
and
mov
pop
out
ja
xchg
sub
movsl
adc
arpl
or
movsb
gs
out
das
jns
fisttpl
jmp
stc
dec
icebp
or
xor
loope
out
sub
xchg
outsb
popa
gs
xor
inc
stc
test
cwtl
hlt
mov
or
jno
inc
pop
cld
jmp
jge
pop
dec
lcall
and
out
iret
not
cmpsb
gs
xor
lea
cltd
and
pop
pusha
movsl
adc
in
mov
rolb
nop
les
cmpsb
add
fidivrl
mov
loope
sbb
inc
add
nop
mov
and
arpl
cld
insb
lods
fists
out
imul
es
out
jae
ja
cmp
hlt
or
mov
inc
fcmovbe
lret
loope
cmp
arpl
mov
cmpsl
push
outsl
pop
or
sbb
int
in
cmp
data16
push
movsl
insl
pop
adc
pop
ret
mov
in
cmp
mov
mov
fldl
test
push
push
sub
in
lahf
sub
std
cmc
bound
xorl
mov
xchg
ja
pusha
test
push
mov
xlat
cwtl
repz
test
adc
in
imul
and
inc
xchg
repz
inc
jl
inc
xchg
aaa
outsl
mov
aaa
les
xor
xchg
hlt
mov
cmp
lcall
enter
or
stos
xchg
and
sbb
xor
xchg
decb
dec
lret
and
scas
sub
dec
cmp
add
cmpsl
dec
sti
mov
inc
outsb
test
mov
jae
cmpsb
out
ret
test
imul
adc
inc
push
addr16
cld
push
jnp
and
cmpb
mov
add
xchg
imul
adc
ss
leave
cld
push
aaa
inc
inc
mov
clc
stos
fxch
mov
ds
push
sub
imulb
addr16
dec
ljmp
xchg
mov
sahf
jns
faddl
jecxz
xchg
sbb
cmpsb
int
mov
sbb
add
push
das
sub
jmp
into
jge
push
js
imul
lea
gs
and
daa
lock
aam
jge
push
fists
push
adc
dec
sbb
call
orl
aas
jne
and
int3
pop
sub
stc
jmp
sbbl
or
movsl
pause
in
lret
aaa
fldenv
daa
lods
shlb
loope
fucomp
mov
insl
push
pop
and
dec
ljmp
jmp
ds
xchg
shlb
ss
sub
and
mov
jmp
imul
cmp
roll
loop
fdiv
push
gs
adc
xchg
inc
gs
sti
sar
imull
push
and
mov
loopne
push
jb
icebp
outsb
fnstsw
inc
or
ret
movsl
rorb
sbbb
sub
mov
mov
pop
dec
pop
fs
and
jb
hlt
inc
mov
dec
sbb
ds
jns
cld
mov
cmp
cs
sbb
sub
mov
ja
repz
add
add
push
sub
mov
cmc
jp
sub
sbb
cmp
es
aaa
xor
andl
cmc
mov
cli
stos
jae
lds
dec
in
xor
jb
mov
cmc
aam
mov
sub
stc
or
subl
xchg
sbb
aam
test
movsl
test
or
dec
rorl
cmp
sub
and
aad
and
in
pop
insl
cmp
repnz
cmp
jmp
out
data16
xchg
add
imul
and
pop
dec
dec
dec
add
jl
ret
bound
sahf
nop
mov
inc
pop
lock
jle
cmp
rorb
mov
std
loop
push
das
cmc
ror
lcall
int
cmp
push
pop
pop
dec
mov
jo
mov
lea
push
repz
inc
mov
addl
add
pop
daa
jno
pop
dec
xlat
mov
dec
add
stc
ja
popa
or
or
adc
pop
xchg
sahf
pusha
dec
outsb
adc
sub
lahf
dec
fdivl
fists
cmpsl
xor
cmp
loopne
rclb
add
rcrl
fbstp
out
fisubrs
adc
cmp
xchg
mov
pushf
fildl
jae
js
push
ret
ret
negb
xchg
mov
lods
xchg
sub
icebp
push
push
inc
jno
pop
sub
or
inc
mov
ja
or
dec
rcrb
jae
mov
sbb
ljmp
sbb
jbe
out
sbb
lret
lds
jns
pop
or
add
sbb
jno
jge
enter
loopne
inc
ss
mov
pusha
jge
push
subb
or
lret
in
pop
in
dec
pandn
sbb
popf
jl
les
add
jo
mov
imul
xor
jo
sbb
xchg
jecxz
mov
mov
inc
pop
dec
push
xor
idiv
or
xor
rcl
cmp
dec
mov
rolb
mov
push
jecxz
and
jno
daa
jmp
pop
in
fldt
in
hlt
dec
mov
push
inc
adc
in
movsl
jno
add
lods
xor
repnz
or
notb
jbe
pushf
mov
pop
shlb
aad
test
jmp
jne
mov
mov
inc
shll
std
xlat
pop
mov
sbb
out
sbb
jg
or
mov
jae
jge
mov
cmp
or
popa
cmpsb
jae
int3
in
ja
dec
mov
cwtl
mov
mov
les
jg
xchg
mov
dec
in
sbb
fwait
jp
out
mov
ret
sbb
js
inc
pushf
xlat
cmpsb
orb
cmp
sub
aas
das
push
es
in
popa
rcrb
insb
cmovo
dec
xchg
aaa
adc
gs
movsl
jecxz
add
mov
pop
mov
or
iret
shlb
nop
fbstp
cmpsb
andl
and
sbb
adcb
inc
jmp
int3
jle
roll
mov
and
xchg
and
int3
lds
cmp
lret
mov
ljmp
mov
les
aaa
std
cmpsl
xchg
jp
cwtl
or
push
jge
rorl
sub
test
jnp
leave
inc
mov
xchg
mov
cmpsl
cmp
test
cmp
addb
mov
hlt
movsl
orl
out
xor
mov
jge
cmpsl
xchg
pop
nop
and
push
cli
sbb
popf
lret
push
xor
popa
in
inc
cld
fs
cmp
cmpsb
repnz
sahf
cmp
mov
add
insl
pop
in
aam
stos
push
lock
movsb
mov
push
sti
mov
jge
sub
mov
mov
or
jle
loop
scas
add
and
and
ret
or
xchg
pop
fcmovnu
push
lods
int3
mov
sahf
cmc
and
sub
and
daa
cltd
jle
js
shl
and
decl
and
pushf
aas
sarl
fldcw
fcmovnbe
ljmp
enter
scas
and
in
and
cmp
outsl
sbb
adc
lea
push
and
sub
add
fwait
int
push
sbb
ljmp
mov
decb
dec
cli
shll
scas
lret
fnstcw
js
pop
icebp
ret
out
xor
jno
std
cmp
add
dec
mov
int
and
dec
push
aad
add
scas
jl
fimuls
in
scas
mov
or
inc
test
es
push
pop
aad
inc
pop
pop
cmpsb
shll
adc
xor
sub
shll
or
aas
popf
lahf
sub
roll
cmpsb
sahf
and
fs
or
and
mov
in
int
xor
mov
cmpsb
and
in
call
push
lods
pop
adc
fisubrl
or
movsb
xor
into
decl
dec
aam
xchg
and
in
dec
adc
lahf
adcl
mov
push
xor
stos
dec
add
outsl
rcll
fists
xchg
into
repz
filds
imul
fsts
mov
push
add
jb
adc
add
aam
out
ret
insb
inc
sub
sbb
pop
mov
dec
sbb
fisubl
cmp
gs
cmpsl
enter
loope
adc
jecxz
or
ds
cmp
or
mov
mov
leave
iretw
insl
ljmp
xchg
jp
ss
dec
jno
xor
fidivl
je
xor
ret
inc
faddl
sbb
add
xrelease
mov
inc
addb
adcl
xor
pop
mov
lods
dec
sbb
pop
cmp
loope
fildll
jl
insb
cmp
outsl
lds
dec
orl
fdivrs
cmpsl
cmpl
pop
mov
pop
insl
shld
orl
xchg
mov
jmp
cli
aad
sub
sbb
cld
adc
pop
jae
mov
testb
adc
scas
dec
and
std
out
add
xorl
push
sbb
mov
push
leave
ss
dec
xchg
mov
rorb
ljmp
popa
lret
push
aaa
pop
movsb
mov
mov
stos
jg
jp
stos
es
xor
mov
and
sub
fildll
insb
xchg
push
hlt
je
scas
pop
loop
jg
cmp
sbb
cmp
or
mov
inc
std
add
pop
jmp
add
sti
dec
sbb
pop
or
cli
in
mov
test
lret
in
dec
sub
cltd
dec
dec
cli
cmc
adc
hlt
dec
cs
jb
mov
pop
push
cmpsb
and
mov
jno
or
cli
push
or
stc
test
pop
shl
cmp
and
sub
cs
push
stos
jo
scas
aas
adc
pusha
jmp
pushl
stc
popl
cld
xchg
cld
fwait
or
cld
push
test
add
mov
test
mov
push
lds
mov
cld
es
lock
add
push
into
and
insb
jge
dec
aam
cs
mov
testb
sub
push
mov
pusha
add
mov
sbb
jg
cmpsb
sub
add
sar
pusha
mov
jle
lea
rolb
stc
loop
shr
enter
insl
add
or
sub
es
jp
add
repz
mov
aad
jge
adc
aas
out
repnz
push
out
into
repz
ljmp
int3
or
cmp
js
cld
jne
xchg
sahf
sbb
scas
dec
sbb
lods
jp
out
cmpsl
inc
mov
inc
jge
mov
mov
jae
ffree
jmp
test
cmp
mov
push
int
pop
jmp
into
lock
roll
lds
mov
int
and
mov
xchg
xchg
adc
or
ret
push
pop
lods
pop
adc
rcll
and
ret
xchg
mov
push
mov
and
xchg
adc
and
cli
dec
ljmp
test
lahf
es
jnp
int3
mov
std
mov
and
iret
fistpll
lahf
xchg
cmpb
imul
adc
insl
jae
insl
pop
cld
dec
popf
adc
ljmp
fistpll
bound
fwait
popf
lret
xor
mov
test
xchg
jo
push
testl
roll
rcll
sbb
or
inc
xor
cmp
mov
jmp
mov
lcall
mov
lret
js
ds
jbe
cmpsl
data16
ss
xor
js
movsb
jnp
or
rorb
je
cmp
and
mov
sbb
xor
push
push
shrl
or
cmc
mov
inc
cmp
loop
mov
cmp
add
dec
inc
adc
inc
inc
cmc
das
dec
xor
push
push
lock
fnsave
sub
fbld
xchg
xchg
push
or
xchg
mov
nop
mov
call
sub
repnz
add
icebp
sahf
lahf
movl
mov
jle
and
repnz
pop
test
mov
push
in
adc
nop
fs
cltd
jae
cmp
fwait
roll
daa
jl
push
xchg
push
sub
mov
pop
mov
inc
lock
and
jb
jmp
push
adc
ss
xor
int3
fs
sar
push
mov
sbb
push
aaa
xor
mov
mov
rep
out
dec
ljmp
jae
fucomp
adc
pop
pop
xor
mov
mov
aas
mov
xchg
sub
lds
jo
inc
mov
lret
lcall
sti
lcall
cmp
dec
jo
push
clc
rcl
inc
ret
jecxz
ret
xor
mov
sbb
inc
cmp
lret
or
pop
xchg
push
mov
dec
mov
cs
es
push
mov
lock
cmp
shlb
xchg
jns
das
lods
push
cmp
lods
sarb
pushf
mov
ds
mov
xchg
xchg
mov
jne
mov
mov
add
test
fmuls
cmpsb
lahf
add
loop
aad
clc
lea
jecxz
aaa
mov
es
jp
mov
mov
jo
inc
cs
stos
stc
cmpsl
mov
cli
out
sbb
scas
jl
lret
jg
cld
pushf
jnp
dec
jl
jmp
xor
jbe
xchg
rorb
add
stos
insl
ds
sahf
inc
rcll
js
sub
push
adc
jb
shl
test
jecxz
pop
in
hlt
scas
in
adcl
mov
xor
jmp
int
pusha
lret
xlat
arpl
xlat
out
xchg
pop
jp
xchg
dec
ljmp
xor
outsl
lret
addb
call
push
pop
mov
cmp
sub
pop
std
aad
dec
cmp
cmp
push
repnz
fimull
or
leave
mull
dec
and
xor
push
scas
ror
repnz
addb
xchg
lcall
add
sub
jge
cmp
bound
ljmp
inc
lahf
fdivrs
mov
dec
sub
ret
mov
loop
mov
aas
cld
popa
push
cmc
or
lret
pusha
cmc
or
sub
jnp
or
jne
add
xor
or
sahf
lods
cmp
cmpsl
lahf
inc
inc
sbb
inc
ss
mov
jnp
jnp
scas
add
cmp
and
ljmp
cmc
call
inc
dec
add
stc
add
mov
mov
pop
mov
add
inc
mov
pop
test
icebp
cltd
gs
dec
fidivrs
adc
pop
pop
shrb
inc
mov
repz
aaa
andl
sti
and
outsb
mov
mov
jne
pmaddwd
push
cld
movsb
cmp
mov
rolb
aaa
imul
add
inc
inc
adc
je
popf
sbb
sbb
xchg
cmpsl
adc
adc
push
jnp
aad
lds
shlb
sbb
call
inc
mov
mov
pop
in
adc
mov
pop
jecxz
fbstp
test
in
sub
insl
filds
movsl
sbb
int
push
pop
adc
out
cmp
dec
dec
pop
iret
mov
mov
pop
sahf
mov
push
mov
mov
leave
in
ja
dec
dec
pop
insb
jecxz
jg
aam
jg
aam
sti
jge
pop
sbb
pop
push
pop
adc
mov
mov
mov
outsl
sub
test
scas
xchg
mov
push
xor
shll
test
fsubs
outsb
sahf
sbb
jno
push
jns
sbb
movsl
mov
xor
and
jg
jmp
nop
sbb
mov
adc
les
fwait
xchg
push
sbb
gs
loop
pop
adc
jb
and
out
mov
ret
mov
mov
pusha
push
fstpt
dec
xchg
andl
cmpsl
add
inc
jo
shll
jnp
lods
stos
out
and
hlt
cmp
add
insl
push
aam
pop
sbb
lahf
and
push
stc
pop
mov
ljmp
mov
fldl
pop
icebp
cmp
and
push
ljmp
push
sub
jg
test
fwait
inc
inc
dec
push
push
ljmp
lret
in
loop
mov
push
inc
mov
mov
fildll
xor
in
test
inc
mov
pause
mov
xchg
mov
inc
pop
xchg
adc
and
mov
pop
cmpsb
or
data16
inc
in
push
movsl
stos
clc
nop
lret
push
test
xor
insb
out
add
lds
mov
das
rcrl
fxch
movb
jne
aam
int
mov
pop
or
fmull
notl
scas
mov
sub
sti
fadds
xchg
gs
xchg
imul
cmpsb
cli
mov
jmp
push
jmp
cmp
mov
pop
roll
mov
inc
shlb
test
mov
push
xor
adc
lea
adc
mov
inc
fnstsw
cmc
jae
scas
mov
insl
jle
add
push
xchg
inc
sub
inc
push
fisubrs
iret
scas
dec
or
adcl
in
push
std
cmp
dec
imul
pop
test
loope
inc
mov
insl
sub
in
xor
call
inc
fbstp
jg
cmpsb
out
lods
mov
leave
dec
incb
adc
xor
mov
repz
imul
lea
shll
inc
test
fbld
xchg
out
xchg
xor
std
push
mov
inc
imul
in
or
mov
jo
sub
enter
ffree
icebp
lods
mov
enter
sub
dec
dec
out
xchg
es
jl
in
loope
xor
xor
mov
adc
or
push
mov
mov
movsl
testl
movsl
aam
lahf
xor
adc
sub
cmpsb
jae
xor
xor
pop
pop
push
repnz
dec
mov
xor
stos
pop
loop
lock
jecxz
xor
gs
push
add
cwtl
cld
sub
lods
fidivrs
push
je
push
xchg
sub
test
xor
xchg
test
je
inc
mov
mov
les
loope
jmp
dec
jo
and
pmulhuw
movsl
dec
sbb
xor
std
ffreep
sub
iret
aam
pusha
in
pop
pop
int3
or
xor
cmp
subl
inc
mov
ficompl
jge
sub
cmpsb
cltd
and
add
adc
sub
movl
dec
outsl
aad
out
inc
daa
insb
push
loopne
adc
popf
dec
dec
pop
pop
add
adc
mov
pop
and
xlat
popa
scas
inc
pop
sti
fcompl
push
loope
popf
jle
cmp
test
dec
aam
adc
ja
mov
cltd
mov
mov
dec
sub
lock
nop
bnd
mov
push
xor
movsb
js
jb
jmp
jg
es
mov
stc
sti
add
jmp
push
fcom
scas
movsl
lds
mov
xor
xchg
xlat
lea
pop
fs
adc
imul
mov
pop
xor
xchg
push
xor
jecxz
fwait
push
push
js
icebp
push
lods
xorl
fstpt
mov
ljmp
inc
clc
fmul
ret
mov
mov
and
jmp
xor
adc
mov
or
fisubl
jecxz
js
outsb
xor
or
lods
fdiv
lcall
dec
push
inc
and
hlt
or
xor
dec
mov
or
xchg
pushf
adc
int
sti
rorl
jg
cld
imul
add
imul
movsl
jl
pop
jle
je
jg
stos
cmp
jecxz
bswap
push
fs
in
and
inc
pushf
mov
adc
outsb
js
pushf
pop
xchg
add
mov
push
xor
adc
push
sbb
pop
mov
dec
sarl
cmp
mov
pop
cmp
push
adc
cmp
cli
mov
movsl
fdivrs
outsb
and
aam
cmp
pop
out
leave
sti
cmpsl
ret
mov
push
xlat
mov
gs
test
cwtl
or
and
inc
add
sti
mov
and
das
add
inc
mov
aas
dec
pop
arpl
xor
jo
mov
xor
dec
adc
adc
arpl
xor
and
aas
inc
sti
sub
jg
fwait
loop
mov
ljmp
pop
inc
sbb
in
fsubs
data16
in
push
lahf
mov
add
xchg
stos
and
cmp
adc
in
cmp
or
in
add
xor
ss
std
push
int3
out
hlt
mov
mov
lret
cli
push
enter
xor
mov
jnp
push
stc
out
jp,pn
xor
es
mov
cmc
adc
add
jecxz
inc
push
sub
mov
push
cmc
add
pop
in
cmp
mov
mov
call
leave
mov
insl
fidivl
jno
test
mov
leave
andb
push
push
ja
test
cmc
mov
xchg
movsb
ss
jle
xchg
pusha
daa
sar
rcl
out
ss
pop
mov
inc
insl
pop
hlt
aas
jno
aad
or
jecxz
addr16
rorl
fwait
xlat
sbb
jnp
fs
lret
and
inc
add
adc
sbb
ret
push
cmc
mov
cmpl
ret
into
inc
into
in
int
dec
pop
adc
xchg
daa
int
test
loop
pop
add
fs
sarl
mov
lahf
rolb
jns
and
icebp
sub
cmp
add
sub
mov
lock
adc
adc
fistps
movsl
dec
jecxz
or
cmpsb
test
push
push
push
jno
loopne
inc
or
jle
add
inc
dec
outsb
ljmp
jle
clc
lods
adc
xchg
pop
pop
rorb
fwait
mov
and
cmpsl
mov
pop
sti
rorl
sub
test
sahf
shll
xor
lds
pop
sbb
xchg
out
inc
hlt
sub
js
cmpsl
aam
aam
jge
push
cmp
insb
adc
stos
mov
loop
out
lock
fld
outsb
add
enter
jmp
out
dec
lock
in
les
push
mov
int3
add
mov
add
xor
xchg
mov
inc
pop
pop
les
imul
pop
pop
int3
and
xchg
cmc
dec
inc
cmp
pop
or
sbb
mov
cs
xchg
js
inc
mov
test
shrb
rcrl
repz
in
mov
scas
stos
movsl
rclb
out
int
dec
cmp
loopne
and
jl
filds
jecxz
cmpsl
push
lods
movsl
jp
and
xchg
push
inc
int3
gs
hlt
mov
mov
ja
mov
jb
xor
les
bound
cwtl
cmpsb
lcall
mov
into
mov
mov
jg
lahf
xchg
add
scas
fs
jp
pop
sub
pushf
gs
jg
mov
push
and
cmc
lock
xor
or
dec
push
jno
test
pop
es
add
cli
into
sbb
out
sti
cmpsl
icebp
imul
jle
jnp
out
xor
repnz
call
les
lahf
add
mov
adc
or
fsts
aas
mov
mov
jae
add
in
mov
sbb
dec
dec
add
roll
or
sbb
pop
ljmp
shrl
jp
xchg
jnp
and
add
out
jne
inc
imul
inc
shlb
outsb
gs
add
add
add
xchg
sbb
inc
sti
repz
adc
pushf
jmp
sbb
mov
xor
lahf
cld
adc
adc
jae
inc
adc
dec
ret
cmc
movl
rorb
sub
sahf
and
xchg
and
xor
pop
inc
std
cmpsl
cltd
mov
adc
aad
outsl
lcall
stos
in
addb
repnz
inc
sti
aas
mov
adc
andl
es
outsb
xchg
in
jbe
pop
ret
push
outsb
lea
or
inc
ret
cmp
add
call
and
cmp
or
sbb
in
ret
or
xor
jmp
in
mov
popa
movsl
and
ss
fsubs
adc
jmp
sub
push
sbb
xbegin
and
xor
les
lds
call
or
lcall
cmp
or
cmp
hlt
cmp
fiadds
lods
add
in
aam
insb
cmc
mov
mov
inc
sbbl
cmp
mov
leave
sbb
pusha
mov
rcll
add
rcrl
mov
xlat
mov
pop
add
lcall
hlt
jnp
repz
mov
pushf
inc
lcall
into
jp
out
lret
add
sbb
mov
test
mov
int
lds
cmp
dec
jbe
repnz
fildll
popa
lcall
imul
xchg
xor
shrb
rorl
int
cld
sbb
gs
xchg
push
fsub
clc
jno
cmc
jmp
mov
movsb
ss
adc
sbb
pop
scas
stos
push
aam
pop
lret
or
jl
cli
sbb
dec
in
lcall
dec
divl
pusha
fs
ljmp
lods
sub
arpl
lea
out
push
sbb
fistpll
pop
hlt
lea
pusha
sbb
inc
jp
out
jb
push
addl
dec
inc
lea
fiaddl
pop
mov
adc
stos
testl
or
nop
rclb
inc
jp
test
dec
push
inc
aad
negl
cmp
push
and
loope
and
lea
fidivl
pop
mov
or
push
adc
mov
sti
aaa
cmpsl
imul
sub
bound
xchg
cmpb
jbe
lret
shrl
and
pop
aad
iret
ljmp
movsb
cmc
rolb
sahf
lret
mov
shrb
leave
mov
movsb
sub
xchg
aaa
mov
mov
or
xchg
push
cltd
ljmp
insb
fildl
out
cmc
fwait
xchg
mov
jg
push
cmp
or
mov
cmpsb
add
movsl
inc
mov
frstor
xchg
idiv
inc
aad
loop
and
pop
xor
test
add
push
test
sbbb
mov
js
jp
jecxz
mov
sub
push
and
and
shrl
iret
sub
cmc
inc
bound
dec
add
push
into
es
orb
addr16
adc
adc
cmp
imul
leave
scas
lods
inc
popf
xorl
and
sbb
xchg
jo
aaa
pop
xchg
das
leave
or
int
pusha
jp
push
xor
movsl
and
inc
js
inc
out
test
hlt
adc
sub
push
and
sbb
notl
cltd
cmp
add
cwtl
sub
stos
inc
dec
cld
and
lahf
fldcw
loopne
les
dec
mov
cmp
dec
dec
sbb
fndisi(8087
repz
popf
push
jecxz
loopne
rcll
dec
out
lret
sub
inc
sub
frstor
loopne
sub
xchg
xlat
mull
jae
loope
xchg
jl
push
out
dec
xchg
push
arpl
das
push
fldt
es
cmc
push
mov
lret
not
lock
mov
clc
dec
add
sbb
inc
shlb
and
popf
rclb
call
leave
aam
push
ror
lahf
dec
into
push
imul
cld
push
fcom
mov
out
das
push
test
adc
xchg
int3
pop
popa
daa
sbb
and
cmp
adc
cmp
sbb
pushf
sub
inc
shll
popf
sbb
jnp
gs
xor
xchg
jns
repz
les
dec
jmp
pop
aas
sub
or
jl
clc
aas
test
mov
je
add
imul
xor
lret
cmp
pop
push
mov
in
jae
sti
pop
mov
jl
lret
notl
mov
lcall
jne
dec
fisubrs
push
mov
and
incb
neg
sub
fiaddl
pavgb
stos
std
add
ret
out
xor
pop
fwait
dec
aaa
pop
mov
mov
cmc
cmp
inc
mov
inc
mov
sub
xor
sub
insb
and
or
push
icebp
fs
mov
repz
sbb
enter
pusha
push
sbb
scas
jge
sub
aaa
dec
jnp
orb
arpl
and
hlt
cmp
dec
cli
mov
push
xchg
das
out
popa
shl
pop
dec
and
cmpsb
mov
sub
pushl
xor
shl
stos
xor
push
lahf
sub
or
jecxz
jae
or
je
ret
fwait
add
sub
mov
inc
pop
mov
into
mov
mov
jp
inc
and
jmp
sub
imul
ror
pop
jmp
in
dec
xchg
sub
push
adc
mov
dec
pop
movups
mov
adc
testl
xchg
jl
xor
add
inc
shl
fstl
jp
cltd
mov
inc
into
jg
sbbl
in
fld
scas
jnp
or
pushf
push
mov
test
lds
adc
push
fcoms
enter
push
std
rorl
ss
clc
sbb
aas
xchg
gs
ror
lods
test
push
push
not
lods
iret
add
mov
ror
in
imul
jmp
int3
jecxz
scas
ja
lea
jl
sbb
rolb
push
lods
xor
or
stc
test
cmc
ss
push
mov
pop
int
lcall
cld
xchg
adc
js
pop
add
and
xchg
daa
dec
inc
call
cmp
fildl
add
or
sbbb
jbe
dec
ja
push
push
cltd
fisttpll
sbb
cld
fildll
fidivl
enter
push
loop
push
xchg
sahf
xchg
insb
cmc
cmp
pop
ficompl
movsl
loope
pop
in
out
mov
dec
pushf
xor
loopne
pop
mov
out
je
icebp
pop
enter
mov
push
inc
out
test
adc
cmp
in
pop
push
fldenv
mov
mov
outsb
loope
push
dec
gs
lods
imul
jg
cmc
int3
mov
insl
mov
pop
dec
hlt
jl
mov
loope
push
push
movsb
or
cmp
insl
inc
mov
jmp
dec
push
and
mov
push
xlat
fbld
mov
cmp
in
pop
imul
xchg
sbb
push
sub
mov
les
mov
mov
decb
mov
adc
in
mov
enter
push
xchg
pop
out
iret
mov
jb
xor
jno
aaa
push
icebp
mov
fucomip
inc
test
notl
mov
std
push
and
inc
pop
inc
aas
xchg
mov
push
sub
gs
cltd
push
and
or
xor
pop
call
out
cmp
subl
and
insl
mov
test
arpl
lds
enter
push
cltd
dec
pusha
mov
sub
mov
movsb
stos
repnz
stc
fucomip
mov
jns
aaa
hlt
es
pop
xor
movsl
push
cmp
out
pushf
mov
daa
pushf
fisttpl
not
xlat
jns
fucomip
mov
fildl
push
lret
movsl
in
push
lret
push
dec
iret
dec
and
mov
dec
mov
push
popf
icebp
arpl
in
or
mov
stos
rcrl
mov
out
jmp
mov
pop
xchg
and
or
nop
or
jb
cmpsl
rorl
test
loope
mov
fwait
push
cmp
add
dec
add
sbb
mov
aam
xor
clc
sbbb
pop
jge
inc
rcll
mov
aad
mov
add
mov
pop
repnz
mov
js
jp
out
xchg
popf
icebp
ficomps
pop
mov
lds
push
lcall
imul
fcmovnbe
lret
insl
push
xchg
jne
into
hlt
aad
or
jp
push
in
pop
mov
xchg
leave
sbb
iret
gs
mov
mov
aas
add
hlt
mov
fs
mov
sub
in
or
xchg
movb
xor
add
xchg
movsb
rcr
sbb
fdivrs
fwait
in
shr
mov
push
cltd
cmpsb
pop
push
mov
and
test
adc
in
jbe
mov
or
add
repz
and
dec
test
add
test
cmpsb
mov
pop
repnz
fbld
lea
sbb
loop
mov
mov
lret
add
push
pop
push
rorb
shrl
fs
dec
sbb
decl
dec
mov
cs
sbb
out
dec
pop
ret
in
int
dec
outsl
clc
ret
adc
adc
cmp
popa
aad
push
fadds
add
cmp
and
pop
jb
fisubrs
nop
mov
out
dec
hlt
inc
mov
jl
jge
jecxz
mov
push
mov
scas
xchg
xor
aas
push
mov
mov
sub
mov
aas
lret
add
cmp
and
cmp
mov
std
sub
fs
and
pop
test
mov
fcomps
adc
loope
addl
in
mov
cld
into
outsl
add
jbe
out
xchg
enter
scas
arpl
cli
loop
or
mov
jge
iret
adc
ret
push
imul
mov
int3
xor
stc
xor
sbb
pop
sbb
xor
orl
and
push
shlb
call
jae
fimuls
or
jge
movsl
pop
mov
push
subl
mov
mov
int3
inc
movsl
or
jmp
mov
repz
into
lret
push
ret
movsb
dec
mov
test
hlt
push
jnp
mov
iret
ficomps
test
mov
add
jae
pop
xchg
inc
xor
or
sbb
mov
jecxz
mov
push
mov
insb
and
dec
cwtl
fisubrs
subl
sahf
sbb
xchg
fwait
jge
icebp
mov
push
cmp
incb
popf
and
insb
nop
xchg
out
jb
cwtl
sub
adc
test
push
jnp
hlt
mov
xchg
add
mov
aam
arpl
pop
xor
stos
inc
fs
cs
inc
and
lret
pop
push
mov
std
xor
mov
stos
sub
cld
rclb
mov
scas
enter
xchg
mov
hlt
sbb
or
jne
mov
imul
enter
mov
aad
jbe
cmp
jl
sub
mov
roll
lret
jae
hlt
push
call
xchg
enter
add
mov
add
fildll
fistpl
aad
or
hlt
lea
insb
hlt
test
imul
imul
sub
sbb
mov
jmp
xlat
push
pop
enter
xchg
std
loop
lret
cmp
std
jns
stc
fwait
add
fsts
shl
dec
xor
arpl
lret
inc
pop
call
add
addr16
ljmp
mov
cwtl
lahf
out
int3
mov
gs
es
popf
mov
sub
cmp
dec
xor
movsb
inc
xor
adc
icebp
fiadds
shrl
push
jnp
call
inc
lods
scas
cld
jmp
add
scas
cmpsl
out
shrb
xor
jb
mov
imul
pushf
lret
mov
test
fidivrl
push
mov
movsb
or
adc
push
adc
mov
lea
sub
adc
ljmp
movsl
jmp
cmp
and
dec
cmp
shll
mov
xchg
inc
test
inc
lahf
push
cmc
mov
inc
dec
gs
insl
add
jge
ja
xor
add
or
jae
jbe
cld
mov
lea
adc
pop
jg
leave
les
dec
adc
hlt
add
pop
fidivl
lea
mov
jo
dec
fmuls
push
inc
sbb
jae
push
packssdw
imul
xor
push
jmp
pop
pushf
add
and
out
xor
dec
lea
xchg
sahf
out
ret
pop
dec
aaa
mov
fsubs
mov
xchg
mov
iret
push
adc
xchg
outsl
popa
and
cwtl
pushf
inc
and
and
loope
repnz
inc
scas
xlat
add
popf
loope
out
mov
das
xor
mov
mov
pop
push
xor
pop
mov
rorb
xchg
adc
xor
addr16
loope
insb
test
xchg
cmp
lahf
cmp
test
cmp
xchg
icebp
jg
leave
sbb
cmp
mov
jno
cmpsl
jne
test
stos
cmc
mov
dec
lret
comiss
pop
sub
sbb
and
insl
xor
mov
scas
mov
xchg
mov
roll
sbb
pop
xchg
popa
ja
fistpl
ror
subl
fiaddl
test
jl
pop
in
pop
xchg
test
stos
stos
jmp
rol
ficoml
lret
daa
xor
fimull
push
cs
arpl
aam
pop
jno
andb
cmp
sbb
aas
add
out
scas
mov
mov
xchg
ret
and
das
xchg
mov
push
cmpsb
jnp
movsb
mov
jecxz
lods
lret
sbbl
aaa
or
dec
adc
mov
and
adc
sub
jg
hlt
loopne
shr
dec
std
imul
mov
cmp
rcl
inc
xchg
or
or
lcall
and
mov
pop
or
and
jne
mov
mov
jle
mov
lds
mov
jl
mov
enter
mov
mov
inc
dec
movsl
or
fcmovne
std
cmp
pop
adc
cltd
mov
in
comiss
das
ror
outsb
xchg
mov
dec
mov
push
and
push
and
cwtl
inc
lds
addr16
mov
lcall
xchg
push
jae
xchg
mov
sbb
mov
mov
icebp
sbb
or
and
mov
dec
mov
xchg
das
movsb
sub
ret
xor
sbb
cmp
repz
add
dec
add
pop
cs
jnp
sbb
gs
lret
shll
xor
pop
jmp
push
add
lret
push
insb
xchg
in
or
mov
push
adc
repnz
rcr
push
cld
aad
into
push
jle
xor
push
cmp
adc
mov
mov
jmp
add
addb
push
cmp
xor
negl
gs
adc
mov
leave
jecxz
pushf
pop
dec
movsb
data16
sub
das
sub
sbb
in
in
outsl
dec
mov
mov
ja
addr16
inc
movsb
ja
and
pop
fadds
jp
imul
pop
outsb
call
sti
gs
sbb
mov
inc
jo
sub
je
sti
or
pop
jl
insl
lret
mov
push
mov
cmp
push
je
addr16
push
int
adc
cmpsb
jns
popf
cmpsb
xor
inc
nop
ljmp
dec
mov
int3
push
cmp
pop
popf
popa
daa
lahf
mov
push
lds
push
inc
mov
add
mov
cmpsb
push
cmpsb
and
push
mov
jnp
xchg
inc
in
dec
add
leave
xor
in
das
scas
std
lea
jae
lds
icebp
sub
clc
push
ud2
out
std
dec
ja
push
sti
xorl
lods
cmp
daa
outsb
clc
xchg
ss
xchg
aad
add
add
jae
fst
xchg
call
loopne
xor
lods
insl
stos
out
add
and
lock
pushf
aam
into
je
inc
pop
mov
in
and
xor
or
rcll
fsubr
pop
fbld
stc
inc
add
mov
test
test
daa
mov
mov
adc
roll
sub
xchg
push
cmpsb
mov
stos
ficomps
sarl
leave
xchg
in
add
rcrb
popa
popa
cmp
roll
mov
xchg
adc
dec
leave
fisttpl
loop
or
iret
adc
sbb
iret
jno
jb
mov
sub
jge
push
mov
pop
or
inc
cmp
cld
mov
test
pop
mov
hlt
aas
mov
into
mov
sbb
inc
fildll
enter
adc
movsl
or
sub
cmc
pop
jno
inc
addr16
pop
popa
roll
mov
adc
jecxz
push
fwait
push
jns
jae
pop
mov
mov
pop
mov
xchg
aam
addr16
pop
lods
mov
out
dec
inc
or
popf
pop
rorl
imull
push
dec
addb
data16
xchg
cmp
xlat
sbb
je
cmpsb
adc
mov
fwait
dec
push
testb
cmpsl
inc
dec
jge
dec
xchg
mov
popa
mov
shlb
add
sbb
push
push
sub
aas
imul
pushf
and
mov
js
movsb
pop
cmp
xchg
daa
mov
mov
mov
out
pop
jg
dec
test
fsubs
and
mov
cmp
test
dec
inc
xchg
adc
aaa
and
pop
xchg
sbb
cmc
pop
xor
mov
pop
rcrl
adc
fwait
jp
mov
cmc
ficompl
rcrl
mov
or
arpl
stos
aam
cmp
sbb
pop
outsl
adcl
xor
mov
mov
adc
pop
gs
add
aas
xchg
sbb
push
fisttpll
sub
lcall
in
fs
sbb
push
and
sub
nop
cwtl
adc
addr16
sub
jl
loop
imulb
mov
lds
add
out
xor
inc
stc
sbb
mov
fcmovu
movsl
xor
mov
inc
stos
mov
xchg
ljmp
aam
cld
push
imul
jns
dec
mov
fsub
xchg
jl
cmpsl
adc
or
sub
xchg
aad
sti
pop
mov
push
mov
xchg
repnz
mov
dec
loop
lods
pop
test
jbe
sub
movsl
in
cmpsl
insl
and
mov
inc
rcl
fistps
pop
push
hlt
xchg
inc
faddl
test
xchg
fsubrs
xorl
push
add
cmpsl
add
je
mov
gs
outsb
inc
outsb
jl
nop
xchg
cmp
dec
and
js
lea
loop
jle
sub
fisttpl
loop
push
orb
mov
fbld
pop
xor
in
rorb
or
mov
jo
cld
pop
insb
mov
mov
mov
xchg
jg
cmp
pushf
mov
jne
clc
stc
jp
ret
pop
mov
insb
or
cmp
sbb
sar
ds
addr16
inc
pop
ret
loopne
jge
inc
adc
aas
dec
jg
scas
add
xchg
fisubs
jbe
leave
into
js
sbb
adc
mov
aas
jo
xlat
cmpsl
call
push
test
inc
sub
push
ljmp
push
mov
jno
push
test
out
adc
or
push
xchg
imul
out
xchg
and
lret
mov
xor
adc
inc
out
push
xchg
fildll
out
adc
lret
cli
cmp
xor
shr
out
xor
cmp
nop
mov
cmp
push
xlat
mov
ficoml
fcmove
inc
loop
pop
xlat
mov
loope
pop
xchg
inc
push
fidivl
sbbb
dec
std
ret
in
in
xchg
iret
sub
lahf
pushf
mov
sub
imul
testl
shll
aas
cmp
adc
push
inc
jo
mov
jo
mov
aas
sbb
repnz
push
loope
pop
mov
pop
mov
pusha
jle
add
dec
add
cmp
fsincos
mov
bound
pushf
or
aad
lock
aas
int
scas
mov
pop
fldt
pop
mov
jle
sub
sbb
shrl
dec
sbb
xor
scas
fists
movsl
loop
push
xchg
xchg
dec
mov
dec
jno
cmpsb
mov
pop
xlat
mov
inc
push
push
sub
pusha
ret
popa
rcrb
daa
jmp
shll
cmp
test
and
cmp
push
jbe
mov
andb
call
jb
je
push
mov
jmp
jns
test
mov
add
int3
cmc
xor
cmc
es
das
lret
je
xor
or
adc
sahf
out
xor
fwait
inc
test
jnp
pause
fmuls
movsb
cwtl
arpl
ret
adc
loope
fsts
loopne
dec
sub
xor
and
pop
sub
xchg
fdivrl
imul
fistpl
jmp
push
pop
incl
mov
sarb
xor
aaa
pushf
xor
and
pop
cmp
lock
cmc
mov
and
xchg
loope
cmp
xchg
jno
xor
cmc
xor
xor
push
dec
mov
xor
or
cmc
mov
mov
or
jns
jge
push
cld
adc
ds
gs
push
xchg
fidivs
fisubrl
cmpsb
sub
rolb
sub
jo
jb
shl
mov
lahf
dec
stos
ret
inc
mov
popf
cmp
dec
inc
push
mov
adc
stos
cmp
push
jb
lret
sbb
cs
lahf
jnp
outsb
sub
lock
mov
or
enter
imul
ja
jge
scas
push
xor
cmp
std
sub
in
addl
push
mov
mov
jno
xchg
xchg
mov
push
popa
daa
dec
insb
mov
gs
bound
stos
in
xchg
push
xchg
mov
xchg
int3
jecxz
lret
ja
loope
pop
dec
xchg
insl
mov
das
mov
jae
in
xchg
mov
repz
rcrb
gs
sbb
dec
push
xchg
out
insb
roll
imul
pop
add
dec
popf
pop
test
insb
hlt
sbb
mov
mov
and
and
adc
jno
lcall
inc
inc
adc
dec
xor
jp
adc
fucom
nop
sti
jecxz
std
mov
inc
jb
stos
fstl
std
xchg
outsb
add
movsl
mov
test
cld
adc
sbb
push
sbb
stc
adc
add
ljmp
adc
jp
mov
adc
in
lods
mov
aad
in
in
les
cmc
jp
dec
notl
mov
testb
and
das
xchg
mov
pop
mov
inc
rorb
pop
in
pop
or
jmp
add
inc
xor
pavgw
mov
rcrl
out
aaa
pusha
popf
mov
call
shl
addr16
hlt
std
adc
xchg
aam
sbb
ds
sbb
pop
mov
xor
sub
gs
jne
in
cli
pop
jns
mov
or
jbe
out
rolb
mul
shlb
inc
jmp
lods
jnp
insl
inc
mov
or
or
call
leave
add
xchg
dec
jnp
pop
jns
mov
pop
leave
jle
mov
bound
pop
popa
mov
jmp
xlat
testb
arpl
scas
std
push
rclb
nop
sbb
popf
push
sahf
mov
testb
cmpxchg
outsl
cmpsl
mov
jno
pop
inc
fst
das
vcvtss2si
cmp
dec
xlat
xchg
xchg
jo
mov
add
mov
push
bound
sbb
sar
insb
imul
lret
in
stc
adc
scas
out
into
jle
roll
dec
and
sbbl
sub
sbb
adc
out
mov
push
jo
test
repnz
xor
popa
in
sbb
mov
sub
and
xchg
and
fiaddl
popa
sub
mov
repnz
sbb
shr
lahf
aam
iret
adc
stos
fnstcw
mov
stos
lods
into
fxch
inc
sub
xor
cwtl
push
vgatherdpd
std
add
add
cmpsb
add
sahf
inc
insl
dec
ret
ljmp
insl
mov
jo
aas
inc
sub
sub
call
ja
icebp
lret
xor
add
mov
cmp
cwtl
rcll
pop
psubusw
mov
jae
cmp
xchg
fadd
pusha
aas
push
ljmp
sbb
dec
fimull
dec
xor
test
pop
inc
enter
push
stos
adc
fcmovbe
inc
push
ja
subb
sbb
push
test
cld
outsb
stos
sbb
jp
adc
sbb
jmp
lret
gs
jns
inc
movsl
aas
sub
pop
cwtl
xchg
js
pop
xchg
call
loope
mov
outsb
or
pushf
addr16
loopne
mov
push
insb
or
push
mov
mov
sbb
xor
inc
daa
jecxz
adc
fsts
repz
jb
push
pop
pushf
out
frstor
or
insb
adc
das
scas
dec
pop
pop
dec
xchg
pop
inc
ficoms
movsl
add
pop
mov
movsl
mov
jecxz
cmp
sahf
inc
mov
test
mov
clc
out
pop
inc
adc
mov
arpl
mov
fisubrs
push
ret
add
sbb
xlat
xchg
inc
jns
xchg
js
aas
bnd
sbb
shll
mov
nop
rclb
fiadds
cmp
ljmp
lods
pop
pop
xchg
sub
push
adc
loopne
pop
and
call
sarl
adc
mov
sbb
aas
cmp
mov
add
fstpt
jg
add
pop
in
push
jno
jmp
xchg
movsl
push
mov
negb
call
fmul
inc
xor
push
in
mov
loop
std
push
repz
push
sbb
xorl
mov
push
call
jp
jg
pusha
les
mov
sub
add
inc
div
pop
ficompl
scas
xchg
cmp
out
sbb
out
sbb
jbe
jmp
lcall
xor
ss
jmp
mov
popf
enter
mov
jnp
push
inc
mov
insl
jmp
dec
sbb
imul
stos
testl
rclb
shlb
pop
clc
divl
and
cwtl
add
cwtl
cmp
popf
mov
gs
cs
fisubs
lret
stos
gs
mov
clc
add
inc
in
sbb
jne
movsb
je
push
cltd
aam
xlat
and
sahf
or
dec
outsb
lds
iret
pusha
jge
dec
fnstenv
sub
cmp
ss
dec
pop
inc
scas
push
rol
out
je
rorl
adc
sbb
mov
mov
cmp
mov
imul
push
lods
inc
dec
into
or
sub
xlat
popa
test
inc
lcall
jmp
lock
or
ror
mov
jb
mov
mov
pop
pop
aad
mov
push
push
nop
int
jl
jle
hlt
pusha
pushf
mov
xchg
or
or
mov
push
add
lea
xchg
adc
push
sub
lods
in
mov
jns
mov
jb
mov
stos
jbe
fisubrs
outsl
mov
cmp
lret
rcrl
stos
and
jp
mov
push
andl
outsb
orb
dec
jmp
in
ror
pop
pop
lds
mov
xchg
push
inc
sbb
xchg
adc
jecxz
aaa
xor
lods
lods
leave
sahf
push
push
or
imulb
in
jp
sbb
mov
lret
or
mov
cmp
ds
sub
or
test
rcr
faddp
mov
jmp
sbb
push
dec
add
jo
sti
mov
and
or
pmuludq
add
inc
xchg
sub
fwait
inc
out
pop
xor
mov
jecxz
subl
sub
mov
jg
dec
lea
and
pop
mov
sbb
stc
or
push
icebp
sub
mov
and
lea
pusha
adc
int
pop
xor
addl
push
and
lahf
jl,pn
pusha
and
inc
push
mov
mov
nop
daa
pop
fadds
push
mov
out
fildl
jle
mov
jnp
or
addr16
loop
fnstenv
push
ret
xchg
inc
insb
pusha
push
push
mov
inc
jecxz
mov
jge
cmp
inc
jl
sbb
push
xor
xlat
and
mov
xchg
and
push
je
movsl
pop
push
loop
jecxz
or
test
sbb
xchg
rorl
bound
sbb
inc
ss
jl
jo
lret
cmp
add
gs
dec
mov
lds
cmpsb
sub
mov
movsl
nop
jae
pushf
push
mov
cmp
cli
jge
outsb
push
dec
push
out
xchg
ljmp
outsl
ficoms
cli
fsubrs
icebp
nop
dec
enter
ret
fsubrl
add
call
call
frstor
or
lea
inc
sub
push
adc
unpckhps
mov
cli
ret
push
mov
mov
insl
mov
add
or
adc
xchg
sbb
push
cmp
ljmp
pushl
lret
lret
adc
jnp
lahf
add
lods
lret
lret
xchg
xchg
xchg
inc
ret
or
loop
add
adcl
sti
je
inc
ja
xchg
xchg
mov
inc
subb
lds
cltd
pop
push
adc
inc
xchg
mov
push
cld
push
ret
sti
sub
mov
jae
pop
call
inc
aam
jge
clc
pop
mov
or
jmp
das
jns
inc
orl
jb
shrb
popf
and
out
loop
das
cmp
pop
mov
push
mov
es
mov
push
jmp
mov
sbb
xchg
pop
pop
jae
pop
mov
pop
aam
sbb
push
adcl
jle
sub
cmpsb
mov
rcrl
xlat
insb
in
daa
xorb
and
mov
out
cmp
cmc
dec
sbb
bound
push
dec
adcl
leave
pop
pop
dec
sub
inc
xchg
push
inc
rcrb
jno
push
inc
push
add
mov
sub
icebp
xchg
lcall
cmpsl
cli
dec
mov
repnz
sbb
fildl
fisttps
cltd
sar
pop
iret
xchg
ss
cmpsl
pushf
leave
and
call
ja
inc
pop
mov
dec
fcoml
jno
push
imul
fisubrl
into
ret
pusha
inc
das
inc
or
loopne
inc
sub
dec
pushf
inc
insl
adc
or
mov
jb
imul
mov
push
cmp
mov
sbb
and
cmp
cmp
adc
jge
sbb
imul
lods
mov
or
adc
sub
and
out
cwtl
inc
sub
lods
jmp
push
nop
sti
sub
lds
gs
mov
test
jo
mov
push
and
stc
sahf
je
mov
out
xchg
cmp
add
adc
arpl
jp
shl
rolb
dec
or
aad
mov
and
xor
push
or
push
nop
inc
dec
mov
loop
cld
insl
push
mov
test
sarl
mov
dec
lahf
sti
pop
inc
or
pop
notl
mov
dec
jmp
inc
mov
into
or
addr16
out
call
ljmp
ds
jle
xlat
inc
arpl
fsubr
cmp
sub
adc
push
mov
push
cmpsb
xchg
push
leave
leave
add
sub
lret
xchg
mov
scas
push
icebp
cmp
mov
mov
pop
mov
jbe
mov
lahf
adc
cmp
push
mov
out
hlt
pop
movsl
add
sarb
imul
xor
out
mov
ret
lret
in
in
push
scas
arpl
loope
cmp
stos
in
repz
aaa
imul
fisubl
adc
lcall
inc
mov
addr16
dec
pop
jle
aaa
or
add
xor
jbe
sbb
fstpt
pop
or
mov
sbb
dec
mov
push
rcll
bound
add
lea
cltd
push
fstps
add
shll
out
iret
out
mov
inc
jno
cltd
cmpsl
loop
jl
cmp
sub
iret
lods
sti
call
mov
shrb
xchg
int3
and
and
jg
sahf
rcrl
jmp
fadds
scas
lret
and
adc
int
xchg
cmp
dec
pop
int3
stos
xchg
push
and
jbe
daa
jo
in
pop
outsl
addr16
xor
stos
pop
fisttpl
test
jns
ljmp
out
daa
inc
cmp
cmp
test
or
rcr
cmp
lea
les
pushf
sub
mov
in
dec
lcall
push
std
mov
leave
pusha
xchg
xchg
inc
mov
out
sub
fnstcw
adc
leave
scas
pushw
jno
cmp
sti
int3
push
jmp
outsl
mov
xchg
movsb
icebp
inc
and
cltd
cmpsl
sahf
dec
adc
adc
inc
sahf
pop
cmpsb
push
lcall
aad
jns
insb
xor
out
clc
enter
dec
jbe
push
testl
fcomps
pop
das
ror
sbb
and
bound
leave
sub
roll
add
jno
icebp
sbb
pop
repnz
repz
out
xchg
xchg
subl
rcll
xor
cmpsb
adc
jnp
sbb
decl
das
and
pusha
mull
xlat
ficompl
clc
jle
xchg
idiv
fldz
mov
aam
push
loopne
sti
insl
stos
mov
xorb
ficoml
movsb
dec
adc
gs
iret
xor
xor
cmp
data16
ret
pop
jecxz
xor
in
aad
rcrb
test
lcall
mov
inc
out
mov
lcall
adcb
dec
adc
push
push
repnz
pop
into
mov
ret
or
mov
push
shlb
cmpsb
mov
add
stc
mov
mov
pop
add
clc
pop
add
xor
int3
jmp
les
lea
out
pop
ds
shrb
test
test
jle
aas
cli
sub
mov
ljmp
pop
xlat
pusha
sbb
inc
loope
sbb
jg
dec
cmpsb
push
nop
xchg
pop
jns
sbb
cs
mov
mov
fsubr
adc
cmp
aas
mov
pop
cmp
adc
js
aad
fisubs
aam
mov
sbbb
mov
sarl
and
fisttpl
iret
enter
jle
add
and
lods
cmp
mov
iret
pop
clc
ja
add
mov
fcoms
jae
insb
fcomip
movsb
pop
cli
jge
xlat
subb
mov
jns
push
push
push
bound
outsl
mov
adc
scas
pop
push
into
test
lea
sbb
xor
gs
hlt
push
ficompl
add
xchg
jp
xor
xchg
aad
neg
scas
subl
cmc
popa
jmp
sti
or
adc
ss
fists
mov
or
push
cs
in
jl
arpl
xchg
mov
mov
stc
inc
addr16
call
shlb
mov
pop
lret
mov
sbb
aaa
dec
jg
aam
pushf
pop
and
ds
movsl
sbb
popa
das
jbe
pusha
loop
xor
imul
nop
mov
daa
ficomps
test
clc
cmc
pop
jecxz
and
gs
leave
sbb
jae
sub
sub
notb
cmpsl
or
loope
adc
mov
xchg
lea
push
into
jo
and
out
jl
rolb
xchg
bound
dec
add
mov
call
push
add
out
bound
xor
mov
arpl
pop
ja
dec
rorb
push
jne
sbb
pusha
mov
jno
addr16
inc
lods
loope
mov
mov
test
and
mov
scas
push
mov
pop
xchg
jo
and
dec
scas
popf
sbb
repnz
jne
sbb
movsb
dec
cld
mov
sbb
pop
out
mov
andl
push
jb
aaa
mov
addr16
push
xchg
and
dec
push
adc
iret
jge
mov
mov
punpckhdq
mov
xor
jo
pop
pop
fsts
nop
cmp
lret
mov
xor
shrl
pop
and
or
inc
js
sub
lret
daa
arpl
in
jo
add
shl
xorl
into
adc
leave
mul
jge
movsb
cmp
shl
mov
add
sub
jecxz
shrl
inc
popa
pop
lret
or
mov
sub
cmp
push
fcom
mov
dec
pusha
pushf
xchg
repz
xor
jl
mov
jp
movswl
arpl
xchg
loop
adc
sahf
and
ja
hlt
ds
mov
add
cmpsb
mov
mov
test
xor
xchg
iret
mov
push
cltd
push
dec
sarb
ret
mov
shll
sub
test
mov
xor
hlt
das
mov
mov
shr
lcall
mov
in
testb
insl
lods
inc
push
negb
outsb
hlt
cmp
push
xchg
or
pop
pop
mov
out
jne
and
imul
insl
test
mov
incl
shll
cmp
das
pop
popf
data16
mull
es
lods
popf
lahf
sbbl
lock
lea
sub
push
mov
fwait
xor
aad
cmpl
mov
add
mov
stc
or
loopne
inc
into
hlt
cs
addb
jl
or
cmp
push
mov
mov
repz
hlt
or
stos
sbb
dec
pusha
xor
lahf
dec
xor
dec
xchg
and
jg
lods
clc
lret
sti
xor
jl
pop
mov
or
push
ja
je
xchg
in
rcl
into
pusha
mov
std
mov
jnp
shll
pop
lods
out
cmp
push
pop
sbb
lea
out
out
pop
imul
xchg
imul
dec
mov
xor
imul
pop
mov
ret
sub
add
int
loope
aaa
push
mov
and
test
js
mov
sub
xchg
xchg
mov
inc
jl
test
repz
rcrl
out
mov
pop
enter
rclb
jge
inc
jg
lea
or
or
lahf
mov
or
xor
lds
popf
data16
adcb
in
mov
adc
sbb
push
inc
and
push
or
sti
dec
lods
mov
test
dec
fsubrl
aas
dec
inc
or
or
pop
mov
xchg
dec
faddl
mov
mov
js
les
leave
mov
or
in
xor
mov
enter
cmpl
rcrb
push
lods
cld
mov
rcr
incb
cmp
imul
iret
test
clc
adc
mov
mov
add
mov
incb
cwtl
adcb
or
outsb
pop
int3
dec
push
sub
in
aad
loope
aad
jnp
xchg
jne
pop
or
push
xchg
adc
mov
sub
in
xor
xor
xchg
jge
outsl
and
push
adcl
daa
dec
imul
inc
les
andb
shlb
xor
sub
loope
sub
lds
lock
test
lods
call
pop
jnp
addr16
xchg
sar
les
sub
adc
xchg
lahf
pop
lahf
jae
flds
fcmovu
das
pop
adc
sbb
nop
pop
ja
insl
xchg
jg
and
test
cmp
mov
das
push
in
mov
xlat
fwait
ret
lea
sbb
addr16
cli
aas
test
sub
add
mov
jge
xchg
int3
mov
outsb
mov
xchg
sbb
aam
mov
fs
fwait
outsb
daa
shlb
ss
inc
dec
out
or
pop
movl
sub
xchg
ja
cwtl
pop
fstpl
or
mov
push
xor
ret
adc
jo
loopne
fnsave
testl
enter
adc
push
cmp
dec
movsl
arpl
addr16
mov
int3
sahf
dec
imul
scas
nop
imul
repnz
test
in
cmp
push
stc
fldenv
add
notb
jp
leave
insb
dec
fcmovne
out
punpcklwd
cs
hlt
lahf
pushf
movswl
cmpl
push
mov
clc
out
je
xchg
scas
adc
mov
pop
sbb
int
loope
inc
adc
fldcw
inc
adc
xchg
push
mov
dec
mov
cmc
mov
sti
dec
push
js
fcompl
mov
mov
xchg
lret
ss
add
lret
jbe
loop
dec
mov
out
push
pop
push
add
dec
popa
inc
mov
mov
pop
jmp
repnz
cmp
pop
lods
or
scas
and
dec
sub
adc
cmpsl
js
mov
cmp
pop
movsb
fucom
adc
daa
and
in
cmp
in
jl
jmp
dec
mov
inc
sbb
xchg
push
pop
inc
mov
adc
lahf
stos
push
add
dec
jecxz
pusha
xor
mov
sub
int3
cli
lcall
push
dec
imul
pop
in
adc
adc
pop
pop
ret
adc
hlt
xor
imul
sub
fs
xor
push
fiadds
cwtl
loop
push
jb
mov
scas
cld
jmp
jb
test
fldenv
mov
add
and
fcoms
cld
icebp
push
cmp
push
push
pop
mov
dec
ror
in
imul
and
push
mov
cmp
jmp
xchg
je
xorl
or
fwait
in
fnstsw
jnp
cmc
xchg
jns
pop
leave
out
ret
shll
mov
push
idiv
in
xchg
cwtl
push
xchg
xchg
xchg
pop
pop
sub
int
je
hlt
push
test
movb
push
addl
vrcpss
loop
std
jge
mov
and
and
adc
sarb
sbb
test
xchg
je
dec
lds
add
push
stos
fsubs
pop
cld
hlt
sbb
xor
fnstcw
jb
xor
cmpsb
clc
shlb
jo
cmpsb
mov
enter
imul
jecxz
ret
sub
fsubrs
shll
add
popa
test
fbstp
xchg
outsb
faddl
push
or
or
lds
lret
mov
out
shl
cld
xchg
add
mov
cld
pop
insl
mov
push
jg
iret
loope
stos
jge
addr16
xor
pop
mov
pop
mov
arpl
and
iret
xor
stos
mov
js
xor
xor
adc
test
xchg
push
dec
lcall
push
pushf
insb
adc
aam
in
icebp
icebp
mov
or
fwait
push
push
pop
cmpsl
mov
and
pop
mov
mov
lock
pop
add
inc
popf
or
pop
jae
js
loop
aad
lcall
mov
inc
jmp
stos
cmp
cli
xor
jbe
mov
mov
repz
mov
lock
lret
push
push
adc
popf
js
leave
adc
mov
ret
mov
rolb
enter
pop
addr16
jl,pn
mov
pop
rcl
insl
stos
sti
push
or
rcll
subb
lret
loop
out
sub
cmpsb
xor
adc
out
sbbb
xchg
or
push
cmp
sbb
push
insb
lcall
loop
popl
rclb
pop
xor
mov
pop
cmpsb
sbb
repnz
lds
sti
fisttpl
push
rolb
ljmpw
lods
push
aam
jl
xchg
adc
jmp
imul
pop
sub
pop
ds
shlb
orb
or
push
xor
sub
mov
daa
or
jge
adc
insb
add
rcrl
xchg
lret
or
or
cwtl
dec
push
or
and
lcall
inc
dec
jo
xchg
push
ror
andl
stc
mov
cmp
push
push
push
and
cmp
dec
push
pop
pop
and
cmp
scas
loop
dec
aad
mul
addl
cmpb
pop
out
jecxz
hlt
stos
aas
std
roll
mov
pushf
sub
push
mov
jb
cmpsl
pusha
cmp
push
emms
ror
inc
dec
stos
ja
xchg
cmp
sub
repnz
mov
sub
inc
push
mov
inc
and
clc
pushf
jns
subb
mov
jmp
pop
fstps
add
push
add
adc
mov
outsb
or
cwtl
cmp
enter
subb
pop
scas
xchg
or
js
inc
inc
sahf
icebp
cmpsb
icebp
in
lret
xor
xchg
pop
xchg
shr
push
icebp
sub
repz
mov
adc
or
sbb
lods
les
inc
fbstp
leave
repz
loopne
add
pop
mov
pop
fidivl
lahf
stc
inc
xor
repnz
jg
push
ret
lret
outsl
and
lahf
push
pushf
stos
dec
lock
xor
stos
mov
incb
lea
mov
inc
lds
sub
inc
jne
in
xchg
mov
shrb
movsb
mov
cmc
mov
ds
and
sahf
push
fstl
int3
movsb
push
jbe
push
out
adc
fisubs
ja
mov
push
jo
cmp
aam
push
mov
jge
jge
xchg
add
inc
outsb
dec
popa
das
mov
jnp
mov
and
pop
jne
sub
mov
mov
ds
popf
not
xchg
and
idivl
pop
pop
cmp
cmp
push
ds
mov
push
repnz
in
lret
stc
ja
add
into
mov
jo
mov
jae
jle
in
add
test
mov
add
insb
xchg
in
or
out
test
cmp
pop
pop
mull
dec
push
ss
cs
adc
pop
adcb
cwtl
gs
sub
jns
pop
mov
je
pop
jmp
loop
and
movsl
popa
push
imul
in
ss
sub
push
adc
adc
pop
add
cmp
pop
ljmp
dec
push
jb
repz
push
fmul
push
sbb
cmp
mov
mov
mov
jge
mov
imul
pop
call
cmp
ret
mov
cmp
xlat
or
mov
inc
mov
sbb
repnz
pop
dec
cmp
add
leave
or
adc
es
movsl
rclb
lods
dec
shlb
mov
lcall
out
aas
out
outsb
insb
loopne
in
mov
nop
xor
cmpb
scas
rcll
add
jbe
jmp
jns
pop
and
in
adc
lock
dec
xchg
jp
and
mov
push
mov
out
gs
jno
int
aam
pop
lret
cmp
iret
pop
push
and
stos
and
sar
or
filds
xchg
push
mov
dec
imul
mov
hlt
dec
cmp
divl
mov
push
out
hlt
leave
mov
adc
adc
mov
insb
adcl
fmull
in
out
insb
push
scas
xchg
mov
jns
cmpsb
jle
mov
adcl
js
xlat
test
add
sbb
repz
jge
cmovge
enter
pop
adc
cmp
lahf
adc
hlt
sub
push
outsb
outsl
fcoms
out
popf
shl
mov
pusha
subl
mov
jp
push
mov
add
cmp
add
leave
sub
lahf
pop
dec
xlat
shll
push
mov
xor
xchg
xchg
add
shlb
fdivl
xchg
jle
dec
xchg
xchg
andb
repz
add
or
xor
test
xlat
sahf
imul
inc
push
ss
mov
adc
scas
cmp
nop
or
sbb
aam
pusha
in
pop
adc
cmp
xor
or
jle
xor
mov
fcoms
mov
rclb
jbe
repnz
mov
push
xor
lock
adc
mov
out
mov
shll
cmp
sarb
movsl
jne
ljmp
ret
sahf
pop
repz
lret
aaa
leave
dec
and
leave
int
nop
xchg
adc
dec
xor
mov
mov
lret
fisttpll
and
pushf
cmpsb
xlat
sbb
cmp
out
mov
sub
inc
mov
pop
jge
test
fabs
scas
shlb
xchg
bound
mov
adc
mov
mov
movsb
push
ja
imul
jb
mov
sbb
clc
cwtl
cli
sub
pusha
mov
sbb
sub
repnz
lods
mov
ja
pop
fnstsw
call
out
movsl
dec
mov
repnz
mov
sub
xor
pop
add
and
pusha
aas
daa
mov
repz
xchg
fs
xchg
add
int
dec
inc
stos
test
cmpsl
sbb
mov
mov
xchg
repnz
sbb
iret
cmp
sbb
int
cmp
mov
cwtl
sbb
cmc
push
aam
xchg
arpl
inc
add
mov
mov
dec
mov
sub
shrb
sbb
adc
outsb
inc
insl
cli
ljmp
cmpb
inc
mov
daa
pop
adc
bound
rol
sbb
decl
push
in
xchg
addr16
pop
int
movsl
sarl
inc
fs
jo
adc
pop
add
outsl
mov
rcrb
cmpsl
add
sub
lods
div
rorb
pop
fildl
subb
sbbb
push
add
pop
pop
mov
bound
or
loopne
mov
in
mov
es
outsl
xlat
into
ss
sbb
inc
clc
sbb
xchg
sti
insl
cmpb
stc
ret
sahf
and
decb
xchg
dec
inc
sub
mov
mov
mov
mov
rolb
fldenv
push
mov
mov
movsb
dec
jge
scas
mov
mov
or
repz
stos
xorb
iret
sub
sub
or
lods
and
out
push
in
sahf
ret
sbb
in
xchg
cmc
inc
in
mov
push
and
sti
ret
jae
jae
xor
mov
sbb
push
inc
jmp
in
aad
xchg
xchg
loop
lds
movsl
lret
cmp
test
outsl
imul
and
xchg
mov
inc
pusha
pop
mov
lret
popf
ljmp
fs
into
jae
loopne
and
notb
jmp
inc
fistpl
jno
insb
dec
dec
jno
repz
xchg
popf
adcl
addr16
rol
cmpb
add
xchg
fldenv
mov
mov
sbbl
js
mov
ja
mov
aas
movsb
stos
mov
loope
ret
xor
jo
in
std
adc
push
or
push
adc
add
inc
out
clc
sahf
mov
adc
leave
ja
adc
mov
jg
inc
jne
or
testl
jl
xor
lock
ss
mov
sbb
mov
jmp
and
pop
fildll
fsub
inc
bound
daa
mov
mov
pop
cmp
push
scas
je
mov
testl
xchg
pop
xbegin
and
mov
lret
out
add
dec
inc
js
fnstcw
cmp
dec
fstpt
fstpl
fsubrs
in
repnz
push
jmp
sub
mov
int3
pop
inc
ja
cmp
add
mov
imul
and
jge
je
clc
xor
jb
cmpsl
mov
pop
fstl
mov
xor
loopne
shrl
jno
scas
push
call
fistl
xchg
call
mov
repz
mov
pushf
popf
cmpsb
mov
insb
or
cmp
cmp
fs
mov
ljmp
lds
ret
cmp
out
lds
inc
mov
insl
xor
push
pop
sbb
jbe
push
imul
jbe
jg
push
cs
mov
inc
inc
lcall
adc
xchg
mov
mov
push
xchg
xor
mov
xor
push
pop
mov
jae
rclb
push
dec
int
cmp
cmp
leave
mov
dec
data16
dec
cwtl
pop
dec
mov
out
in
fcmovnu
ffreep
aam
inc
dec
cmp
push
pop
arpl
jg
scas
test
jmp
in
xchg
rclb
rorb
imul
push
in
mov
jp
and
push
nop
lcall
jo
mov
add
mov
clc
xor
jo
hlt
lock
xchg
idivl
adc
mov
aas
add
sub
sti
hlt
mov
dec
or
cmpsb
das
test
adcb
or
push
mov
mov
add
xor
std
sub
cltd
sahf
call
mov
sahf
xchg
ljmp
add
cwtl
mov
mov
inc
daa
jl
pop
ja
jecxz
sub
in
inc
insl
or
xor
add
xchg
mov
sbb
mov
jp
repz
stos
or
les
sbb
imul
test
lds
cmp
testl
ror
adc
aas
or
inc
cli
adc
inc
adc
popl
mov
inc
dec
sub
test
mov
out
push
sub
cmpsb
pushf
xchg
dec
ds
xlat
ljmp
and
iret
lahf
xor
sti
loop
test
icebp
fs
stos
add
push
cmc
gs
push
insb
push
mov
mov
add
jmp
mov
xor
movsl
data16
add
cmp
xor
dec
adc
jecxz
dec
inc
dec
es
mov
scas
cmp
pop
mov
push
pop
adc
imul
sti
dec
dec
jbe
addr16
addr16
mov
jno
jo
and
aam
addr16
and
dec
adc
das
xor
movsb
mov
ja
or
mov
add
cwtl
xor
mov
sbb
cmp
mov
stos
and
jle
mov
lahf
sbb
push
sbb
rcll
clc
push
sbb
cwtl
insl
sti
sbb
pusha
lea
inc
ret
xchg
shrb
test
xchg
shr
dec
outsb
push
or
testb
fs
and
fmull
mov
mov
pop
rcr
cmp
aaa
mov
pusha
push
jp
sub
push
mov
push
add
mov
mov
fildll
pop
cmpsl
clc
or
test
out
inc
sarl
scas
adc
repnz
ljmp
fidivl
jl
cmp
ret
mov
dec
push
sbb
outsl
and
pop
mov
rcrb
test
xchg
cmc
or
test
mov
mov
divb
ret
xchg
xchg
stc
pop
and
xor
sub
cltd
loop
sbb
popl
xor
pop
push
in
in
and
rorl
popl
aaa
movsb
xlat
pop
inc
enter
shll
pusha
outsb
jge
out
or
xchg
cld
loop
adc
mov
mov
aam
popf
mov
outsl
mov
xor
push
mov
repnz
cmp
fildll
cltd
or
pop
daa
adc
movsl
dec
sub
test
add
xchg
pop
lcall
cltd
inc
out
int
aam
push
jo
into
mov
inc
mov
shll
nop
lods
inc
arpl
adcb
xchg
inc
invd
dec
cld
jp
std
pushf
lods
mov
adc
add
insl
jecxz
pushf
insl
push
xchg
fwait
repz
stos
insl
iret
adc
movsl
xorl
jnp
cmp
xchg
xchg
rcrl
cmpsb
in
add
fwait
sub
cmpsb
add
add
hlt
mov
mov
jecxz
add
mov
aaa
cltd
mov
cwtl
fisttpl
das
mov
fmull
xor
xchg
push
scas
popf
test
jb
and
dec
pusha
test
jnp
push
pop
out
stos
sbbl
daa
lret
mov
aas
xchg
dec
add
pop
jle
leave
mov
and
fsubrs
hlt
rorl
lcall
pop
and
fst
adc
mov
enter
jae
or
dec
jo
addr16
mov
jnp
aad
sbb
fbld
push
xchg
jno
stc
dec
sahf
bound
push
or
js
test
or
outsb
imul
sbb
sahf
or
loope
pushf
out
loop
mov
lahf
cmc
sbbl
daa
mov
rcrl
dec
std
scas
sahf
lods
pop
aaa
sarl
adc
clc
dec
xchg
loopne
mov
push
xchg
push
pushf
rcl
pop
dec
jne
xchg
fisttpl
mov
lods
mov
ds
mov
dec
fs
adc
idivb
mov
hlt
adc
fdivs
subl
jb
sbbb
gs
mov
enter
sbb
and
lahf
pop
mov
lcall
lock
movl
or
jae
sbb
popa
test
sbb
xchg
push
xchg
nop
add
bound
lret
mov
pop
cmpsl
mov
sbb
iret
pusha
aad
mov
subb
hlt
push
pop
cmpsl
les
lods
fcom
test
or
xor
mov
mov
stos
adc
into
sub
pop
pop
sbb
test
jne
in
cwtl
xor
pop
cmpsb
icebp
imul
decl
icebp
rcrb
push
mov
dec
loope
mov
add
mov
ja
sub
dec
into
lds
test
push
icebp
jp
shll
or
or
mov
xchg
cmp
xchg
mov
mov
xchg
pop
push
roll
dec
andl
add
outsl
push
xor
push
arpl
clc
dec
jne
mov
repnz
imul
lock
aas
xor
xor
xchg
sbb
jmp
xchg
in
cmpsl
pop
xchg
aaa
sub
pop
dec
fdivrs
test
pop
push
iret
mov
data16
fbld
popf
xor
pop
fimuls
fidivl
dec
js
mov
nop
lret
xchg
addr16
push
mov
mov
add
daa
push
lahf
sub
cmp
sub
std
aas
sbb
mov
jp
pop
repnz
mov
mov
shl
ret
loopne
repz
dec
aaa
pop
dec
jno
ret
fisubrl
and
mov
stos
hlt
cld
cld
and
xchg
mov
cmp
rcl
xchg
add
push
pop
pop
and
jno
hlt
mov
or
cmp
lret
or
sub
gs
sti
pop
mov
mov
mov
outsb
push
mov
data16
mov
jmp
mov
sub
pusha
nop
jb
cmp
jg
and
jo
jb
int
mov
mov
jg
lret
dec
sti
xchg
and
mov
push
pop
mov
lock
adc
and
lods
cmpxchg
jb
and
mov
jmp
stc
mov
mov
shl
imul
test
push
adc
negb
sub
cwtl
sbbl
fldt
mov
icebp
xor
mov
cmpsb
jp
and
shrb
imul
sub
es
adc
push
pushf
pusha
aad
mov
add
jns
push
adc
outsb
movsb
xor
scas
add
dec
jne
lcall
mov
stos
jmp
jmp
mov
into
popa
js
pop
aam
aad
push
dec
fld
insb
pop
enter
aaa
leave
mov
mov
nop
cmpl
jbe
mov
je
fwait
push
imul
imul
scas
xor
aas
xchg
xchg
jbe
decb
jge
xchg
mov
sbb
cs
cltd
in
adc
mov
mov
adc
jmp
into
stos
push
insl
lret
stc
xchg
sbb
inc
push
fsub
ret
dec
dec
mov
pop
push
mov
cmp
mov
insb
dec
repnz
cmpb
sti
pop
push
into
dec
mov
add
mov
aaa
icebp
cld
sbb
addb
sbb
loopne
jg
adc
ret
enter
xchg
xor
shr
lods
xor
stos
and
fisttpll
mov
nop
push
cmpsb
jno
dec
mov
adc
ja
repz
into
repz
mov
fidivl
add
and
mov
scas
adc
add
and
into
add
outsb
push
in
add
mov
sub
dec
aas
int3
aam
into
testl
fstps
in
fsubrs
test
inc
jge
ror
mov
sub
test
lcall
dec
mov
imul
mov
sbb
roll
pop
ret
sub
lret
fistps
lds
jle
pop
andl
sbb
gs
test
add
push
pop
addr16
call
outsl
inc
shll
jecxz
jo
sbb
xchg
adc
clc
adc
cmp
fs
test
dec
jl
jp
dec
jo
xchg
test
sub
mov
sub
cwtl
jno
out
ss
cmpl
ret
or
add
pop
pop
int3
fwait
pop
pusha
push
sbb
ja
xchg
xchg
push
and
push
cmpsl
push
incb
daa
es
xor
call
xor
mov
iret
jmp
dec
inc
push
jg
cmpb
clc
mov
into
stos
jl
cmpsl
pop
ret
and
mov
mov
xchg
repz
inc
inc
jecxz
sub
xchg
std
ret
cwtl
xlat
lds
sub
aad
add
or
mov
test
fpatan
aaa
in
mov
popf
out
cmp
dec
fdecstp
imul
mov
es
mov
mov
sbb
mov
and
cmpsb
jle
mov
leave
dec
out
adc
mov
sub
adc
sub
inc
ret
jno
dec
jp
or
mov
addr16
cmp
pusha
cmpsl
sub
jmp
or
add
or
mov
mov
or
mov
sbb
lret
into
dec
dec
sub
dec
push
lods
fs
mov
jno
movsb
and
xchg
pop
lds
lea
pop
jb
pop
fsub
mov
xor
andb
cmp
adc
lock
rolb
sbb
or
orl
jg
movsl
pusha
fs
xor
ror
or
sub
orb
push
jmp
movsl
xchg
lea
mov
and
dec
test
fmull
ds
fmuls
aas
out
or
in
sarb
ja
fstpl
sub
nop
jecxz
lahf
test
fnstsw
fldenv
and
push
push
shrl
incl
sub
call
fnstsw
movsl
jmp
mov
fbld
lret
push
sub
roll
cmp
dec
loop
pusha
icebp
jo
mov
inc
sbb
das
xor
mov
jmp
ja
mov
jmp
adc
inc
dec
int3
mov
push
inc
loope
sbb
lret
xor
push
scas
clc
repnz
xor
std
and
jg
and
out
jns
rcr
pop
cmp
jae
punpcklwd
aam
and
cmp
sbb
in
test
rorb
je
xor
mov
in
dec
sub
jp
imul
mov
lock
stos
data16
lods
pop
or
lret
cli
sbb
shufps
sti
fwait
mov
cmc
divb
or
inc
jb
lcall
add
insl
sbb
xlat
arpl
aad
clc
mov
pop
or
sti
and
ljmp
and
push
or
in
enter
shrb
shl
icebp
clc
cld
jno
stos
add
ja
jp
rorl
pop
iret
out
mov
pop
mov
sub
shl
mov
jbe
mov
testb
pop
push
fistps
aas
ret
or
popa
pop
mov
inc
mov
pop
enter
gs
jg
dec
popa
mov
js
mov
mov
push
pop
mov
add
mov
inc
sub
in
icebp
pushf
mov
push
icebp
nop
stos
xlat
ret
push
lahf
js
mov
je
in
inc
mov
push
outsl
adc
push
inc
aam
inc
and
in
repnz
mov
in
inc
jbe
arpl
cmp
push
je
jo
xlat
sbbl
or
stos
cltd
cmp
outsl
jge
lods
push
imul
mov
shl
cmc
outsb
sub
mov
jge
dec
pop
ja
add
dec
xchg
ret
std
xor
push
xor
bound
or
stos
mov
mov
ljmp
mov
ljmp
inc
mov
add
push
lock
push
cmp
cli
mov
pop
sbb
cmpsl
ret
xchg
mov
mov
and
pusha
push
test
lret
loop
push
jb
sbb
aam
sub
mov
push
dec
mov
insb
mov
mov
inc
dec
outsb
clc
mov
mov
dec
add
adc
push
sub
bound
mov
add
mov
sar
rep
cmpb
or
shl
and
xor
mov
push
xor
fmull
pop
or
add
or
and
sahf
jle
xlat
daa
pop
pop
les
pop
lock
into
out
jp
pop
shlb
or
test
inc
jo
cmp
xor
mov
clc
inc
pushf
lds
mov
dec
mov
push
and
add
sub
xor
push
xchg
insl
push
push
cs
aad
cmp
into
or
inc
test
ja
sarl
pop
xlat
inc
jg
iret
pop
mul
push
jg
test
or
out
cmp
mov
xchg
sbb
push
jb
jo
fstp
mov
pusha
cmp
out
add
jmp
lds
leave
stc
push
push
and
fisubrs
adc
enter
mov
gs
cmp
push
push
test
out
das
and
xchg
and
jmp
or
ja
imul
pushf
pusha
outsb
mov
stos
leave
iret
mov
scas
xor
xchg
fsubp
push
mov
jp
out
fdivp
out
sub
aam
je
jmp
out
int3
mov
mov
jne
cmovnp
xor
int
push
sbb
jb
js
dec
push
add
push
adc
jle
mov
stos
and
loopne
jbe
cmp
cmpsb
andl
fistps
ja
out
cwtl
jmp
xchg
aam
add
in
push
sub
cs
jne
xchg
push
cmp
repnz
cmp
and
and
sarl
dec
lds
cmp
test
dec
sbb
mov
dec
repnz
or
inc
das
jae
stos
lock
push
fmull
out
push
push
in
test
inc
pushf
mov
icebp
sti
in
dec
mov
dec
int
shl
lods
cs
cmp
cs
jno
jl
push
inc
jb
jmp
and
cmp
fisttpl
pop
loope
lods
dec
idivl
mov
jle
fistpl
pop
jp
les
lods
jae
scas
xchg
test
xor
dec
and
cmpsb
mov
mov
sbb
push
addr16
repz
cmp
pop
mov
outsb
dec
in
xchg
fadd
jb
inc
js
push
ljmp
js
pop
aam
aam
or
add
xor
push
xor
push
int
loope
push
mov
cli
scas
jg
sub
push
mov
hlt
daa
cs
movsb
ljmp
repnz
dec
pusha
shrb
gs
dec
xor
jb
int
mov
xor
cmpsb
jns
insb
divl
or
out
push
xchg
int3
in
dec
popa
in
mov
ds
fwait
in
push
pop
in
sbb
in
out
xor
cmp
mov
gs
mov
cmp
cmova
test
pop
jns
xchg
jno
ljmp
jl
adcl
shlb
mov
and
mov
mov
xor
loop
add
pop
or
mov
popa
daa
push
jae
imul
jle,pn
push
scas
xchg
lods
lret
roll
xchg
mov
pop
or
add
sub
jo
xor
jg
test
loope
sub
mov
xchg
xor
or
loop
jbe
rcrl
push
sbb
fucomp
sub
inc
test
cmp
sti
ret
popf
inc
jp
push
inc
notl
ds
outsl
xchg
aam
mov
inc
imul
lahf
cld
enter
lock
mov
sbb
or
jbe
jae
lds
mov
cld
cmp
pop
mov
fucom
mov
sti
xchg
mov
movsl
sbb
push
mov
xchg
out
pop
push
inc
es
sbb
sub
jg
pop
out
add
in
dec
jb
js
add
pop
sub
sbb
lock
sbb
cs
xor
cmp
arpl
out
add
pop
rolb
aad
push
mov
je
dec
adc
and
ret
pushf
mov
adc
mull
push
adc
imul
adc
push
push
xor
nop
mov
dec
loopne
mov
loop
mov
mov
pop
shlb
cmp
repz
push
xlat
dec
rol
fsub
inc
push
pop
fdiv
xchg
stos
push
clc
push
popf
stc
fwait
mov
pop
jbe
jno
sbb
jmp
jnp
inc
dec
fcmovnbe
push
addl
or
call
stos
decl
dec
cmpsl
mov
dec
mov
dec
jbe
xchg
enter
lods
sbbl
jae
push
dec
dec
add
dec
inc
push
mov
pop
rcl
mov
and
fmuls
xor
mov
outsb
fisubl
fisubrl
shrb
out
xor
vpmuludq
testl
mov
negb
rcll
xchg
in
add
inc
lret
cli
lods
inc
push
cwtl
push
dec
sub
cs
in
aam
nop
pop
jno
jg
mov
cmp
mov
jg
sbb
pop
pop
std
aam
or
ljmp
stc
mov
in
fdivrs
incl
sbb
popf
jmp
mov
jno
sbb
ljmp
fimuls
add
xor
mov
pop
sub
pop
jno
pop
pusha
mov
orb
fdivrs
test
cmc
jp
mov
je
outsl
xchg
mov
jmp
and
xchg
into
repz
push
fs
jns
push
fstpl
adc
add
xchg
lods
andl
into
div
adc
mov
mov
sbb
jno
xor
mov
mov
enter
cmpsl
add
mov
lds
or
dec
outsb
adc
inc
int3
add
outsb
sub
xor
stos
lret
lahf
pop
push
mov
jo
inc
dec
or
test
test
jb
pushf
leave
repz
callw
and
cmpsl
sti
dec
rcrl
lcall
cmp
xchg
das
cmp
mov
or
xchg
fisttpl
mov
dec
pushf
mov
push
iret
xlat
inc
mov
dec
cmp
dec
add
aas
movsl
fistl
pop
pop
out
stc
mov
mov
sbb
icebp
repz
insb
ds
add
fildll
pop
and
lods
call
mov
int3
jbe
push
aad
or
insb
fildl
out
or
leave
adc
inc
lods
std
pop
inc
adc
mov
imul
pop
mov
xchg
mov
pop
xchg
pop
in
into
xchg
cmp
insl
out
inc
sbb
in
or
sahf
mov
inc
decb
sbb
out
lea
cmpsl
cwtl
out
mov
push
and
arpl
repz
mov
sbb
xor
out
clc
aam
aas
popf
and
data16
pop
iret
sbb
stos
adc
sbb
inc
or
addr16
push
in
pusha
lock
adcb
mov
jge
xchg
addr16
mov
dec
lcall
leave
add
push
add
js
jb
or
imul
cs
ret
xchg
sub
push
adc
push
je
data16
dec
jp
add
pushf
or
pushf
sbb
xchg
shrl
push
push
int
repnz
xor
movsb
inc
cmp
cmp
cmp
sbbb
adc
ss
test
cmc
fisttpll
outsb
mov
fs
mov
and
push
push
nop
adc
xor
les
or
fiadds
fisubs
lahf
cmp
rcrb
popl
xlat
mov
jno
cld
dec
inc
into
sbb
pop
add
lret
in
clc
stos
inc
or
insl
ljmp
and
xor
mov
pop
or
fst
sbb
adcb
fstpt
xor
gs
and
lods
enter
inc
shlb
shl
cmpsb
js
mov
repz
aaa
ret
imul
xchg
pop
fs
jns
stos
std
push
mov
test
sarl
mov
enter
and
lods
fstps
adc
stc
push
dec
add
mov
push
push
fldenv
insl
nop
sahf
test
aam
sti
push
movsb
mov
mov
cltd
fistpll
push
repnz
imul
ds
mov
pop
cld
cmp
xchg
cmp
popa
icebp
outsl
popf
fdiv
popf
sarb
mov
push
pop
adc
lret
cmp
sbb
add
fcom
xchg
pop
mov
pop
inc
cli
jg
xchg
pop
lods
stc
addr16
xor
adc
test
adc
into
or
add
in
inc
jp
and
iret
gs
cmp
cmc
add
ret
das
inc
pop
inc
insl
cwtl
xchg
sbb
icebp
xor
repz
xchg
or
out
push
aad
mov
lods
jo
lods
subb
je
in
jo
js
cmpsb
icebp
xor
pop
std
dec
dec
cmp
xchg
sbb
xchg
push
cmp
xchg
pop
nop
push
inc
stos
cwtl
xchg
repnz
cmp
xchg
repz
movsb
scas
mov
sbb
push
pusha
hlt
das
sub
push
popa
and
rolb
mov
stc
or
jbe
dec
adc
test
dec
mov
mov
mov
mov
imul
mov
cmp
stc
imul
enter
loope
cmovp
arpl
inc
mov
dec
xor
xchg
aam
subb
fnsave
js
jno
lods
idivl
jmp
add
ss
shll
xchg
xchg
shrb
push
jnp
sbb
idiv
xchg
push
jae
adc
jecxz
add
xor
mov
adc
sbb
add
jo
aad
add
cmp
lods
cs
mov
jb
leave
fcmovnb
lds
inc
repz
mov
mov
testb
or
pop
sbb
pop
call
lock
xor
hlt
in
rcrl
out
push
test
push
loop
or
dec
frstor
and
out
iret
push
dec
arpl
xor
aas
adc
insl
pop
pop
sbb
ja
incb
jb
negb
addl
test
pop
sbb
jbe
rorl
mov
nop
pop
mov
mov
cmp
jno
push
cmc
mov
sub
xor
lret
test
and
in
push
sub
mov
ss
ljmp
aaa
rcrb
shlb
mov
dec
pop
data16
sub
int3
jbe
test
mov
int
fs
sub
adc
or
iret
or
outsl
in
popf
mov
in
loope
adc
sbb
push
sbb
jle
call
jns
into
fisttpl
add
adc
or
jmp
sbb
pop
inc
fld
call
add
shll
jnp
std
insl
push
arpl
mov
pop
lret
fwait
dec
aam
stos
cld
mov
sub
mov
mov
test
push
mov
pop
push
jecxz
aad
mov
pushl
inc
sub
out
jns
push
repz
fwait
sub
xor
insb
mov
push
daa
inc
loop
mov
rcll
xchg
xlat
out
jmp
dec
iret
fimull
cmp
xor
mov
xor
call
adc
ret
xor
hlt
cli
sub
xchg
mov
mov
cmp
adc
push
cld
call
jmp
incl
ljmp
xlat
call
jns
lret
cmpsl
shlb
pop
sbb
inc
repz
sub
xchg
mov
rolb
xchg
lea
sub
mov
xchg
xchg
mov
jne
mov
sarb
movsb
mov
add
insb
jno
mov
out
or
or
cld
pusha
add
nop
mov
pop
xchg
xchg
xchg
cwtl
mov
pusha
jecxz
shrb
push
fadd
divb
sbb
jge
xchg
loopne
xchg
pop
scas
inc
dec
push
lret
mov
xor
aad
je
push
xchg
xor
cld
dec
stos
sbb
shr
mov
lcall
push
ds
lods
ss
and
add
ret
stos
or
mov
or
int
mov
xor
nop
push
fdivrs
pop
inc
int3
iret
jg
popa
in
movsb
out
cmpsb
push
jns
or
mov
imul
cmp
fdivrs
insl
lcall
lcall
jg
cmpsl
in
mov
and
add
pusha
scas
fs
repz
mov
push
push
int3
push
pop
jnp,pt
rclb
jmp
aas
mov
add
notb
xchg
sub
sbb
mov
mov
jp
jg
fwait
cmpsl
cmp
pop
mov
mov
fldcw
mov
mov
pop
inc
dec
sbb
fldln2
fcos
les
out
rclb
icebp
ret
es
dec
mov
cltd
in
add
pushf
xor
sbb
inc
pop
adc
mov
dec
insb
cltd
test
cmp
cmp
push
arpl
jp
push
jge
sbb
ret
push
push
mov
sbb
dec
lock
or
jge
std
mov
fnstsw
rcrb
jg
sbb
cli
ret
cmpl
xchg
negb
mov
lds
sbb
jmp
mov
mov
out
pusha
mov
cmp
decb
jmp
mov
mov
jae
mov
in
insb
popa
xor
in
pushf
mov
sbb
inc
gs
into
adc
xchg
mov
ret
push
in
dec
xchg
in
addb
sbb
loope
mov
pop
xchg
leave
adc
test
push
sti
popa
in
add
dec
and
or
inc
hlt
pusha
or
mov
imul
js
sbb
movsb
mov
imul
adc
ror
cmp
dec
xlat
test
lahf
sub
ja
adc
loop
in
in
lret
dec
xchg
cmp
cmpsb
loop
push
fldcw
out
leave
dec
cld
insb
hlt
and
mov
push
add
lret
or
fnstsw
fcoms
push
fcomps
sahf
xchg
stos
xchg
movl
mov
xchg
adc
hlt
fdivrl
pusha
test
or
or
add
dec
sub
cmp
sti
sub
cmpsb
and
add
aam
or
xor
jle
test
jmp
call
sub
insl
pushf
pop
mov
or
xlat
jge
jb
pushf
push
popf
jb
addr16
add
cmpb
out
jl
mov
out
scas
out
rorb
mov
pop
pop
into
arpl
sar
pushf
test
jge
dec
jge
rorl
inc
loopne
adc
sbb
inc
fs
push
divl
fcomp
popa
fildl
mov
adc
mov
dec
ret
mov
mov
test
imul
mov
cmp
push
inc
ret
outsb
aas
das
je
jle
insb
daa
mov
inc
andl
mov
sbb
and
rcl
fisttpll
fidivs
push
sbbb
mov
push
push
jp
or
sbb
inc
dec
dec
mov
jp
ss
sub
dec
jg
and
pop
cmc
shll
jge
push
mov
jge
adc
cmc
lcall
cmp
pop
push
test
sar
inc
into
ja
lods
fstp
lret
push
xor
in
pop
shrb
addl
jne
and
xor
mov
or
jmp
sub
adc
and
mov
pop
call
and
cmp
sar
lods
mov
out
rcl
dec
mov
imul
lock
xchg
aam
popf
xchg
scas
dec
add
mov
dec
imul
test
pop
cwtl
and
stos
and
call
fldl
sti
adc
bnd
xorl
pop
push
push
xchg
add
push
mov
jp
xchg
out
push
roll
loope
lcall
shlb
xchg
push
mov
cltd
and
std
incl
je
pop
cmp
out
test
fwait
imulb
and
hlt
sarl
pop
dec
or
and
sbb
sub
pop
cmp
sub
ss
inc
jb
movsl
fwait
lods
das
xor
in
sub
add
fmuls
inc
xor
sti
or
aas
fnstsw
idiv
sbb
aad
ds
sub
inc
sub
mov
int
cltd
xor
sbb
sbb
push
adc
or
out
test
push
test
aas
push
sti
stos
pop
test
xor
xor
sahf
adc
enter
push
cmp
ret
cmpsl
or
cmp
orl
popa
fdivrs
inc
mov
xchg
and
cwtl
psubd
xor
in
imul
xchg
fucomi
xchg
mov
call
sbb
xor
add
sub
imul
mov
push
addr16
in
popf
out
sbb
dec
cmp
jne
call
pop
mov
dec
adc
cmpsl
gs
pop
cmpsl
jle
ja
cmpxchg
mov
sbb
and
cmp
or
hlt
imul
inc
jno
ficompl
xchg
dec
repnz
int3
mov
mov
add
sbb
xchg
mov
lea
and
scas
hlt
cli
cmp
test
in
dec
sbb
cmp
mov
push
dec
dec
cmpb
sarb
lahf
jo
dec
push
push
stos
rorb
int3
frstor
lldt
adcb
xchg
scas
movsb
xor
iret
pushf
push
test
filds
popf
stos
rorb
ja
fisubl
inc
xchg
or
dec
xor
sbb
inc
lods
hlt
jbe
js
jbe
std
ds
out
loopne
mov
mov
lret
clc
and
jg
and
xchg
push
bnd
push
mov
dec
lock
dec
scas
scas
sbb
sub
insb
in
in
jb
lods
rol
cmp
fwait
out
mov
sahf
mov
sar
sahf
dec
adc
pop
pop
sbb
cltd
test
pop
fisubrl
push
pop
xor
dec
mov
js
mov
jae
scas
push
mov
inc
stos
call
cli
and
pop
jno
aad
iret
add
lcall
push
das
xchg
xchg
push
fidivrs
inc
dec
inc
sub
test
insb
xchg
sub
and
lods
cli
data16
clc
adc
hlt
fmull
fistps
in
xchg
dec
dec
sbb
dec
ret
mov
pop
mov
add
dec
dec
aas
jae
inc
push
out
shl
pop
daa
mov
test
jae
mov
insl
jecxz
xchg
int3
cli
mov
dec
stos
insb
inc
scas
aad
arpl
push
movsb
aam
bound
sarl
divb
jg
xchg
movsl
xor
fldt
mov
sub
rcl
sbb
insl
loopne
cmp
pop
push
or
pop
xchg
cmovl
test
dec
xchg
data16
fwait
and
imul
xchg
ljmp
or
out
sub
ret
out
push
sbb
push
inc
cmp
sub
mov
xchg
jne
mov
and
dec
dec
adc
neg
add
sbb
repnz
mov
imul
dec
add
fwait
mov
fs
pop
mov
mov
jbe
sub
int3
dec
addr16
leave
lods
notl
jmp
push
mov
int3
pop
mov
shlb
xor
xlat
inc
xor
loop
mov
cmp
mov
adc
out
sub
or
adcb
call
or
int3
add
adc
clc
cmp
addb
out
xor
pop
pop
mov
gs
dec
jnp
or
push
icebp
in
push
lds
add
or
adc
loopne
js
insl
push
int3
bound
je
lods
push
push
outsl
jmp
inc
push
and
push
fimull
test
cmpb
jg
into
adc
lahf
adc
and
in
and
lock
mov
lods
loopne
push
outsl
pop
or
inc
or
sub
push
test
mov
out
push
out
lret
rcr
and
lds
xchg
xchg
dec
sbb
xchg
mov
das
cwtl
bound
jmp
cli
in
push
add
subl
ud0
loope
lods
rorl
and
push
inc
out
clc
mov
mov
mov
jp
mov
sbb
and
xor
and
mov
pop
sub
sub
mov
push
mov
icebp
addr16
fld
outsl
add
xor
int
cmp
es
movsl
scas
shlb
push
cmc
test
rep
push
dec
lds
mov
in
mov
cmp
adc
pop
push
out
test
jae
add
mov
mov
or
mov
and
stc
nop
xchg
aaa
imul
js
push
jb
popf
out
or
mov
in
les
jbe
xor
mov
cmp
cld
push
sub
and
stos
repnz
mov
mov
push
cmp
rcll
sbb
nop
in
out
sbb
sbb
ss
jmp
and
jg
scas
pop
rclb
mov
mov
push
leave
push
inc
sarl
sbb
scas
cmp
in
int3
and
mov
mov
pop
xchg
push
stc
xchg
iret
jg
out
out
pusha
mov
inc
and
imul
cmp
xor
in
cs
fdivl
mov
xchg
sbb
jmp
aaa
cmpsb
shl
xor
xchg
pop
dec
add
inc
sbb
aas
out
push
mov
rolb
stos
popa
jnp
xchg
mov
nop
in
movsl
stc
gs
cmpsl
mov
into
aaa
sbb
pusha
cmp
mov
lock
cmp
cld
inc
decb
iret
mov
pop
aaa
out
outsl
mov
cmp
rcrb
cmp
mov
dec
in
cmc
fbstp
xchg
add
fsubrl
or
lods
in
mov
push
rclb
mov
push
cmp
cld
repnz
cmp
adc
push
movsb
xchg
test
imul
push
cmp
pop
sbb
jb
fimull
adc
dec
sbb
cmp
jle
cmc
push
mov
xlat
push
mov
mov
dec
jnp
sbb
cld
push
nop
aad
dec
stos
mov
pusha
xorb
ja
adcl
das
loope
xchg
xor
popa
test
adcb
out
jmp
cmpsb
rcr
dec
imul
pop
outsb
and
ret
xchg
dec
sub
push
xchg
je
out
cmp
jo
lahf
jmp
jecxz
popf
int3
ret
or
xor
jge
dec
cmpsb
cmc
pop
fbld
jl
push
aaa
mov
hlt
or
add
sbb
ds
inc
repnz
cmovp
in
push
inc
sahf
cs
scas
push
mov
movsb
shll
cld
clc
das
xchg
fdivrp
mov
mov
pop
in
mov
xchg
daa
cwtl
xor
fs
jbe
out
iret
les
addr16
push
push
std
sbb
cmp
cmpsl
fsubp
cmpsb
sub
adc
mov
out
push
lods
mov
popa
pop
mov
pushl
adc
pop
lock
jle
jmp
loop
not
movsl
and
mov
test
lret
pop
sub
or
xchg
popa
sub
pop
pushf
inc
pop
lock
loopne
mov
mov
movl
inc
icebp
pop
imul
inc
mov
aad
pop
enter
pop
js
add
pop
imulb
sbb
sub
fld
or
aam
dec
vmovups
dec
out
jb
pop
lock
xchg
sbb
mov
dec
cmp
mov
mov
xor
loopne
pop
cmpsb
and
dec
cld
cltd
ds
cwtl
mov
pop
xor
dec
fstl
adc
rclb
lds
mov
adc
inc
aas
jbe
push
adc
stos
imul
out
xor
push
mov
ljmp
mov
mov
std
cmpsl
add
icebp
xor
sub
xor
jo
push
pushf
mov
cmp
and
xor
aam
movsl
mov
test
aaa
lret
jmp
cmp
clc
or
rcrl
add
dec
or
xchg
vorpd
cmpsb
dec
cmp
jle
and
sub
lret
lret
pop
repnz
pop
fcomp
lcall
sti
and
test
cmp
mov
inc
aaa
adc
ds
jnp
dec
cmp
xorb
dec
test
data16
jecxz
xchg
or
fdivrs
add
mov
mov
xlat
out
cmpsb
adc
jl
in
xchg
lcall
fxch
hlt
pop
adc
xchg
sbb
jb
ficoml
mov
lahf
cld
inc
shlb
aad
xchg
pop
cli
cmp
xorl
dec
sahf
jle
aas
inc
fstpl
lret
test
inc
push
in
jno
pusha
mov
xchg
inc
bnd
add
orb
je
clc
cmp
inc
dec
cmpsb
lock
sub
sub
mov
sti
call
or
clc
cmp
and
jle
jo
pop
push
cmp
ret
sub
stc
sbb
ja
lahf
sbb
mov
jnp
mov
jae
cmp
add
lcall
xchg
je
cli
adc
test
lea
inc
mov
jge
sti
ljmp
inc
movsb
xor
lret
mov
arpl
movl
vpaddw
sarl
pop
and
cs
fidivl
pop
push
fidivs
sti
cwtl
inc
jmp
inc
push
dec
movsb
fdivrl
sub
or
and
pop
insl
dec
jmp
jne
jmp
and
fucom
add
push
ds
mov
sbbl
lcall
call
pop
ss
push
push
fdivrl
mov
xor
jg
mov
jo
cwtl
lret
ret
jmp
pop
ret
jp
mov
mov
ret
mov
jnp
stos
pop
rol
lock
cmpsl
pop
cli
push
jnp
jg
adc
fdivl
mov
mov
sbb
pop
pop
pusha
inc
shl
mov
pop
fstl
cli
xor
movsl
xchg
lods
int
mov
adc
xchg
or
addr16
pop
push
push
fdiv
push
or
notl
and
pop
out
inc
cld
or
pop
adc
lcall
and
pop
shr
and
je
cld
sbb
mov
push
sub
or
push
cmpsl
mov
mov
jno
mov
xor
addb
mov
loopnew
stos
inc
int3
push
pop
jb
out
dec
cmp
aas
imul
add
jb
jbe
lahf
xor
mov
dec
xor
push
rorl
orb
add
xchg
and
mov
mov
mov
outsb
pop
pop
pop
push
jg
push
pop
xchg
repnz
aam
loopne
add
sbb
jnp
aad
jecxz
jne
jl
push
les
popa
inc
into
push
jns
int3
addl
lods
out
mov
inc
pop
cmc
inc
fisubs
out
sub
jp
sbb
jns
out
leave
test
mov
sahf
cmp
in
jnp,pn
and
ret
test
lock
dec
ror
ja
in
inc
or
repz
and
pop
and
and
in
dec
scas
pop
add
repnz
fld
push
sub
and
vpunpckhwd
lret
mov
repz
inc
ret
mov
jl
sbb
adc
dec
out
push
pop
outsb
jnp
in
fisubs
fimuls
rclb
das
sub
fninit
or
pop
push
ja
leave
out
in
fsubl
jne
mov
pop
mov
adcb
imul
out
cmpb
test
xor
cmc
xor
cs
inc
ret
jns
dec
icebp
xchg
movsl
sbb
fstp
push
mov
mov
pop
fisttps
leave
daa
imul
xor
dec
inc
and
sbb
mov
cmp
test
mov
fidivrs
jns
fcompl
adc
mov
test
jae
push
xchg
or
xchg
outsl
rcrb
inc
dec
xchg
push
and
test
gs
fsubrl
mov
pop
pop
aad
xor
xchg
push
sahf
in
xchg
mov
push
xor
add
cmpsl
jne
test
push
shll
fstl
enter
adc
fsubr
cmp
mov
aas
xchg
mov
loop
add
mov
inc
sub
andb
or
leave
ret
pop
mov
fisubs
mov
lods
jbe
jge
insw
mov
mov
imul
jb
inc
mov
cld
in
cmp
std
ret
repnz
fldenv
mov
push
icebp
lcall
jo
jmp
cld
pop
adc
mov
mov
inc
out
jg
pop
adc
stos
call
aaa
xchg
and
jmp
ja
out
xchg
shrl
jns
icebp
adc
repnz
nop
imul
jl
push
pushf
push
divl
cmp
cmpsb
gs
xlat
lods
aad
aad
ficoml
call
inc
xchg
adc
mov
push
dec
jmp
cmp
movsl
fsubs
cmc
jle
test
or
shll
js
add
sbb
add
loope
adc
lea
icebp
cmpsl
ja
inc
jmp
xor
vpaddsw
outsb
jae
mov
jbe
rcrb
push
stc
clc
mov
mov
mov
mov
fnstsw
or
stos
jp
gs
mov
cmp
inc
popf
int3
icebp
jl
pop
mov
shl
xor
repnz
add
in
sti
mov
mov
cli
outsl
pop
adc
push
mov
out
gs
jae
scas
mov
loopne
ret
bound
test
lahf
sbb
in
fdivrp
addr16
mov
out
mov
pop
pop
mov
cs
aaa
push
cli
shl
pop
or
xchg
push
in
xor
cmpsl
outsl
push
aad
adc
lcall
push
shlb
dec
sbb
aas
mov
es
xchg
adc
test
xchg
ss
mov
lea
pop
shrl
push
dec
out
mov
sbb
xchg
push
and
mov
es
lods
mov
addr16
inc
push
dec
dec
jo
jae
aam
cmp
nop
fldcw
and
xorl
loop
push
jb
lods
mov
and
sbb
fnstenv
and
lods
int3
pop
bnd
bnd
push
or
lret
pop
or
sub
movsl
mov
xor
jmp
imul
sbb
arpl
shll
mov
lret
addr16
pop
pop
xchg
xchg
inc
inc
js
sub
dec
fstl
jnp
push
mov
xorl
cmp
test
repnz
addl
cld
loope
fisubrl
pushf
in
push
jns
repz
test
xchg
or
xchg
sarl
out
mov
push
sbb
and
lret
adc
movsl
mov
xchg
loopne
std
and
mov
sub
jns
add
sbb
imul
inc
cwtl
popf
fsubrs
sub
cmp
out
pushf
lcall
push
test
inc
mov
cmp
mov
add
jp
mov
pop
jg
cld
test
stos
cmp
jmp
xor
mov
incb
dec
out
jo
lds
xor
cmpb
fcoml
cli
push
dec
pop
outsl
data16
pop
jmp
push
jne
aas
outsb
or
mov
in
sub
pop
loope
icebp
pop
stc
cmpsl
sub
in
xchg
imul
cmpsl
scas
add
sbb
xor
popf
sub
shl
negl
daa
pop
cwtl
je
andl
inc
aas
xchg
mov
stos
cs
mov
into
cmp
das
pop
push
and
xchg
mov
fidivrs
xor
cmp
lods
cmp
in
mov
push
arpl
ss
add
pop
push
and
and
sub
rorl
dec
pop
lret
stos
loop
sub
dec
sbb
mov
sbb
or
cmp
or
push
add
gs
pop
adcb
test
mov
insl
cmp
iret
es
es
cli
xchg
mov
cmp
outsl
add
fwait
sub
aad
push
es
inc
pop
shl
inc
pusha
cli
mov
jb
add
hlt
popa
cmpsb
mov
sahf
mov
xorb
pushf
imul
pop
xchg
xchg
push
mov
jle
popa
xchg
pop
je
xchg
jo
add
arpl
cmp
sub
inc
scas
adc
jno
test
sbb
mov
sbb
inc
xor
xlat
cmp
das
xchg
and
icebp
in
mov
mov
mov
mov
sahf
and
or
repz
out
adc
xor
jbe
jl
iret
outsl
jg
xchg
sub
out
in
xchg
loopne
or
mov
cmc
enter
jmp
inc
jae
xor
movb
mov
je
push
xchg
xorl
cmp
add
push
hlt
pop
pushf
arpl
daa
out
loopne
lret
xor
sahf
nop
mov
xor
xchg
mov
mov
add
loopne
aam
push
mov
and
imul
stos
fisttpll
call
test
lcall
sahf
aad
and
aas
push
inc
cld
iret
inc
test
hlt
mov
mov
daa
lret
mov
je
fiaddl
inc
or
lea
xorl
adc
pop
ds
pop
dec
cli
xchg
jmp
rorb
leave
lea
imul
pop
ficomps
psubusw
and
jnp
loopne
cmpsl
popa
out
pop
inc
mov
push
pushf
and
cmpsl
push
dec
lods
xchg
pop
movsb
push
sbb
int3
pop
sarl
loopne
je
xchg
sti
andb
data16
lds
jne
inc
das
mov
mov
dec
and
loopne
push
pop
inc
addr16
cmpsb
gs
aaa
jle
shlb
arpl
in
gs
inc
mov
cmp
data16
pop
push
cmp
bound
pop
cmp
xor
mov
cmp
cmp
in
test
jns
pop
jecxz
popa
and
stos
inc
lock
cwtl
sub
jecxz
cmp
subb
xor
adc
jmpw
sbb
jns
xor
mov
xchg
mov
mov
shrb
mov
mov
std
movsl
cs
adc
xchg
add
sub
inc
je
scas
pop
xor
ret
and
sbb
push
and
popf
push
mov
cmp
rcrl
out
jno
outsl
sub
push
and
jle
insb
fmull
xchg
add
aad
mov
and
adc
jmp
or
pop
xor
adc
push
imul
pop
pop
je
jbe
out
push
pop
sbb
adc
cmpsl
push
cmc
bound
mov
jo
mov
pop
xor
sar
mov
in
push
mov
es
mov
testb
jle
cmpsb
sbb
sbbb
cmp
stos
push
insb
lahf
dec
or
stos
loope
or
jmp
sbb
aaa
dec
je
or
pusha
out
sub
test
jae
shlb
ret
and
cmp
bound
stos
jnp
push
and
xlat
gs
xchg
pop
xor
cs
daa
jmp
dec
jle
data16
add
sbb
and
mov
idivl
lods
lods
jg
mov
sub
jle
outsb
mov
jmp
mov
outsl
fldl
adc
sbb
hlt
push
ds
in
push
or
cmp
lea
subb
test
gs
push
aam
bound
pop
test
fwait
ja
movsb
lods
xchg
lea
xchg
cs
int3
push
fsts
push
jae
popa
jns
ficoms
repz
inc
mov
outsl
imul
fs
shr
or
cmp
jge
int
mov
sti
mov
jbe
mov
jns
hlt
mov
stos
jle
xor
dec
aam
jo
mov
rclb
cmp
into
add
leave
std
and
mov
inc
adc
aad
iret
inc
out
add
test
and
mov
hlt
lret
or
fistpl
adc
int3
scas
pop
push
dec
and
mulps
stos
arpl
mov
cltd
inc
xchg
dec
dec
and
pop
jle
cmp
or
jg
lea
mov
ja
aad
andl
cld
add
and
test
dec
xchg
lea
jp
jno
add
sbb
cs
push
aas
popf
int
pushf
test
mov
cwtl
hlt
imul
mov
sti
stos
sub
ss
xlat
rcl
mov
jb
xor
insl
stos
pop
cmp
mov
adc
mov
lret
push
adc
push
add
xor
jecxz
inc
cmp
xchg
jns
or
test
and
mov
adc
inc
sbb
fwait
cmp
cmpsl
jno
lea
or
xor
call
or
push
or
mov
cmp
xor
push
loop
xor
push
mov
scas
mov
jmp
popf
imul
imull
lahf
scas
and
xchg
jbe
xchg
popa
adc
call
sbb
or
addl
in
cmp
inc
mov
mov
movsl
adc
mov
cs
fisttps
ret
icebp
jle
scas
jnp
sub
mov
cli
call
pop
clc
outsl
or
and
mov
xchg
shrb
shlb
mov
out
pop
mov
jl
cmp
lahf
imull
or
or
inc
xor
xchg
xchg
sub
mov
mov
lock
xchg
sub
dec
ret
cmp
or
orb
adc
mov
push
lock
out
mov
jb
out
push
test
add
dec
jb
pop
dec
jecxz
sbb
or
popf
jg
mov
mov
sti
jno
outsb
fcomip
clc
adc
das
mov
mov
das
and
shll
add
aad
push
loop
push
ja
mov
ftst
daa
fisubs
ds
xor
adc
xor
adc
jne
or
daa
pop
push
dec
lock
dec
add
stos
adcl
das
sbb
mov
out
jmp
outsl
fs
sbb
inc
pop
scas
test
insb
jmp
push
pop
or
jmp
mov
fdivl
movsl
in
loop
imul
xchg
call
mov
dec
shl
fs
adc
sub
in
dec
orb
or
ljmp
xchg
loope
sub
xor
mov
cmp
jmp
dec
dec
xorb
jns
imul
js
sbb
scas
ret
jecxz
loop
sbb
or
xchg
out
fdiv
inc
std
dec
adc
leave
sbb
push
lcall
mov
popf
inc
mov
sti
jo
rcr
mov
mov
test
lea
mov
pop
inc
jmp
daa
fdivl
in
lea
fs
adc
mov
dec
adc
mov
adc
mov
or
test
test
loopne
insb
popa
mov
and
std
iret
pop
pushf
or
xor
outsb
cmp
mov
cmc
push
sarl
mov
mov
jle
loop
arpl
inc
movsb
add
arpl
orl
mov
leave
pop
pop
sub
mov
sarb
lods
or
pop
out
stos
and
insb
sbb
scas
xchg
adc
adc
mov
int
sub
pushf
jmp
not
int
dec
cmpsb
in
sbb
push
and
jae
adc
lcall
add
or
xchg
jo
inc
ret
mov
dec
add
add
cli
xchg
lret
ljmp
sahf
xlat
ja
pop
sub
add
or
outsb
inc
mov
and
xchg
enter
adc
jo
xchg
pop
subb
dec
mov
sbb
test
and
lea
mov
test
push
in
fdivs
dec
fsubr
xchg
stos
and
or
int
je
fistpll
daa
pop
enter
lds
push
stos
mov
fsubrp
xchg
xor
adc
push
std
push
stos
sbb
xchg
lret
ds
cwtl
insl
enter
sbb
xchg
inc
mov
jns
stc
xor
inc
xchg
jge
inc
popa
mov
xor
sbb
sti
jnp
fisubrs
mov
sahf
xor
or
add
fcomps
xchg
lea
dec
mov
jo
mov
adc
push
std
out
insl
enter
pop
popf
pop
inc
mov
mov
jnp
jo
lret
push
push
inc
adc
add
and
dec
mov
jno
sbb
fcmovbe
add
adc
xchg
fmull
mov
test
jecxz
shll
mov
xor
sbb
stos
addr16
insb
push
out
jne
xlat
idivb
and
dec
lret
and
sahf
shlb
rcl
fs
loop
in
add
inc
cmp
inc
xchg
in
aas
call
pop
xchg
xchg
mov
mov
inc
in
out
loopne
push
mov
nop
add
sbb
js
mov
xchg
lods
cltd
mov
sbb
sub
test
aam
cmpsb
jno
loop
sahf
sub
lret
xor
outsl
int
mov
mov
imul
push
sar
jecxz
fwait
lahf
or
loopne
dec
mov
fwait
jmp
mov
cld
or
adc
push
mov
maxps
stc
adc
shl
lret
and
jge
fs
stos
push
fldl2e
jg
sbb
lret
fdiv
icebp
movsb
or
loope
jmp
xchg
sbb
push
or
dec
mov
mov
jno
pop
lret
and
mov
pop
lods
cmp
ja
aam
mov
cmp
xchg
xchg
sbb
loope
inc
mov
jmp
mov
mov
testb
push
lds
dec
pop
mov
sbb
nop
dec
push
in
dec
lret
aaa
lret
inc
arpl
loop
inc
fs
repz
push
int3
mov
movsl
in
inc
rcrb
loop
xchg
cld
or
sub
dec
adc
cmp
clc
cmp
sbbb
adc
rcrl
int3
jp
and
dec
ret
add
add
sbb
jae
scas
lahf
sbb
or
roll
push
pop
loopne
imul
add
out
push
jcxz
xor
jl
das
pop
aad
inc
lret
xor
testb
iret
aam
fnstsw
in
lcall
or
cmp
jno
in
adc
mov
mov
js
mov
and
dec
andb
jmp
cmpsl
addr16
std
sbb
jbe
jbe
xchg
add
lret
outsl
mov
stos
stos
arpl
dec
shlb
movsb
jg
popf
lahf
xchg
or
mul
adc
xlat
je
out
sub
and
xchg
inc
sub
out
movsl
sub
mov
xchg
lahf
sub
in
imul
loopne
lret
jnp
gs
loop
and
mov
pushf
rcll
into
andb
orl
cmp
cld
adc
fmull
scas
mov
adcb
fs
pop
fidivl
push
bnd
lahf
sbb
jo
and
mov
sbb
lret
insl
punpcklwd
sbb
rcrl
out
cli
movsb
mov
adc
aaa
ljmp
sbb
add
lret
push
sbbl
sub
xchg
pop
adc
sbb
adc
mov
arpl
mov
adc
mov
mov
jg
insl
xor
or
mov
test
out
dec
aam
dec
stc
nop
sbb
imul
jmp
call
jb
xchg
fucomp
mov
add
pop
add
aad
sbb
mov
push
fwait
xchg
push
cs
xchg
inc
sub
mov
sub
and
mov
xor
cltd
shrl
cmp
mov
rcll
mov
ret
in
mov
ret
lcall
rol
aas
mov
fdivr
aad
pop
int
inc
ljmp
int3
ret
iret
filds
push
xor
pop
jnp
xchg
rclb
sub
lea
test
sub
cmp
out
aaa
pop
xchg
mov
push
pushf
sbb
repz
mulb
dec
cli
cmp
imul
int3
jmp
adc
in
fiaddl
push
sub
stos
xor
std
pushf
ret
in
pop
ss
std
add
leave
push
fwait
das
ficoms
and
in
mov
jae
inc
test
mov
fsts
push
lea
sbb
andl
jo
cld
rclb
fcompl
push
add
clc
fwait
push
daa
xor
xor
jl
jmp
jp
xchg
or
sbb
adcl
mov
cmp
pop
dec
iret
or
cmc
mov
lock
and
adc
ret
add
pusha
stos
push
and
leave
mov
ret
mov
or
adcb
scas
jb
int
aad
cmp
in
out
mov
cwtl
inc
dec
sbb
repz
lahf
ret
fdivr
pop
sarl
cmpsl
mov
into
jo
sbb
je
addr16
movsl
dec
push
mov
mov
lret
fdiv
xchg
mov
and
mov
xor
or
test
outsb
push
insb
mov
test
adc
cmp
pop
cmp
movsb
push
movsl
inc
andb
mov
add
jle
cmp
pop
xor
xlat
loopne
shrb
call
sbb
mov
jnp
mov
shrl
int3
and
dec
jae
ret
fildll
fldt
inc
ja
mov
maxps
cmp
in
dec
sbb
imul
jge
xchg
in
jg
sbb
testl
xchg
imul
fdivrs
mov
rclb
test
jnp
ret
adc
jo
in
dec
fs
mov
inc
pop
clc
sub
dec
inc
sbb
cmpsb
repnz
ret
into
cli
add
pop
das
and
pop
push
jno
jne
out
xor
adc
dec
and
rcrl
loopne
loope
orl
jo
and
mov
adc
pop
cmp
mov
repnz
daa
inc
fs
cli
dec
loop
in
jle
mov
pop
imul
lods
xchg
mov
xor
push
and
add
sbb
out
insb
adc
cmpsl
shll
popf
addb
sub
mov
aad
shrl
orl
mov
mov
cmp
jnp
mov
iret
add
push
int
pxor
mov
mov
imul
and
cmp
inc
inc
aas
enter
cmp
es
andl
scas
aam
cltd
sub
lret
sbb
pop
mov
jmp
addb
iret
pop
movsl
cmp
orl
sarl
insb
sbb
dec
mov
mov
push
leave
cmpsb
push
repnz
pop
jo
and
fwait
push
mov
dec
mov
adc
es
mov
pop
stos
xchg
shll
xchg
ficompl
mov
fdivs
jge
pusha
jecxz
aaa
cmp
inc
cld
into
pop
gs
sbb
sub
jl
dec
inc
jle
push
in
imul
lds
int3
outsb
sbb
mov
mov
rorb
adc
pop
and
repz
and
stc
mov
inc
jnp
inc
fsubl
xor
outsb
mov
cmp
xchg
pop
int
or
loop
stos
cmp
ja
xchg
imul
int3
push
into
test
inc
mov
les
cwtl
cmp
inc
cld
push
mov
fwait
add
loope
mov
xchg
sahf
sbb
subl
add
clc
out
shll
dec
flds
dec
out
data16
mov
cmp
cwtl
cltd
mov
push
mov
hlt
xchg
mov
mov
fisubl
sub
fisttpl
mov
xchg
push
or
out
rorb
pop
imul
dec
lahf
inc
cmc
aaa
pusha
dec
cmp
enter
cltd
jbe
pop
xchg
pop
inc
push
adc
out
cmpsb
pop
jne
lock
cmp
cmpsl
mov
xor
pop
test
popl
or
add
incb
in
add
dec
rcrb
push
mov
jnp
inc
jbe
mov
shll
inc
andl
negl
jns
sub
adc
int3
repnz
mov
sub
fwait
cmp
mov
xor
sbb
sbb
sbbl
out
pop
ljmp
jno
sub
in
sbb
fs
xchg
sub
cwtl
sub
push
out
rcll
mov
lods
fwait
pop
mov
cmpsl
jle
jmp
and
mov
fisubl
pop
pushw
test
push
ret
push
xchg
adcl
sbb
stos
mov
mov
xchg
hlt
sbb
pop
bnd
fdiv
add
sbb
cmp
dec
cmp
xchg
test
sbb
push
xor
inc
es
outsb
lahf
mov
aas
movsb
mov
push
pushf
mov
push
push
sub
or
sbb
roll
adc
in
add
push
pop
ja
dec
mov
cmp
or
mov
fstpt
lods
cmpsl
je
ret
test
mov
in
cmpsb
jle
push
adc
sub
movsl
call
popf
jecxz
mov
lods
jne
lret
fbld
xchg
mov
jecxz
adc
xchg
mov
sbb
mov
mov
add
sbbl
mov
sahf
add
jp
leave
loope
xchg
imul
mov
dec
pop
add
idiv
fiaddl
jne
sbb
imul
push
mov
mov
jno
or
dec
mov
and
leave
lahf
sbb
push
mov
imul
loope
roll
dec
fmulp
pusha
movsl
lcall
les
lcall
pop
sub
movhps
push
in
push
jg
adc
dec
lahf
sub
les
jp
rcll
cmp
inc
insl
or
jl
mov
daa
xchg
into
les
into
scas
dec
mov
aas
mov
jo
mov
test
or
jge
stos
addr16
xchg
dec
jnp
fcompl
adc
sti
xor
jb
fcomps
je
lea
arpl
lods
or
dec
jno
lret
inc
bnd
add
cmp
adc
dec
adc
cmp
cld
std
cmpsb
fidivrs
test
notb
out
dec
push
cltd
mov
adc
lea
pushf
cltd
je
out
adc
jne
pusha
fcoms
fstp
pusha
out
sbb
mov
movsl
pop
sbb
sbb
mov
incl
adc
test
mov
rcll
push
jo
mov
push
stos
jg
arpl
pop
sub
int3
stc
adc
sub
or
or
push
dec
xchg
jmp
add
insb
push
jb
out
mov
test
jmp
rolb
sub
fisubrs
sbb
cmp
jb
ret
mov
outsl
xchg
mov
pop
daa
test
jo
xlat
dec
jg
adc
scas
mov
loope
push
mov
dec
sub
cmp
fisubs
out
hlt
mov
jg
sbb
sti
and
xor
addr16
daa
sarb
mov
call
inc
daa
push
mov
aam
test
add
xor
jno
mov
sub
aas
cmc
std
into
push
mov
inc
mov
call
jbe
sub
lret
nop
bound
cmc
mov
dec
rclb
push
xchg
test
or
and
fnstsw
xchg
and
and
mov
nop
pop
and
sbb
rorl
push
insl
fisttpl
rcrb
popf
test
mov
xorl
ss
loopne
jp
dec
pusha
dec
in
dec
scas
xor
or
lcall
ds
cmpsl
pop
mov
stc
clc
test
jg
xchg
sub
mov
sub
fwait
xchg
movsl
ja
xor
jecxz
pop
xchg
stos
dec
and
xchg
pop
call
scas
push
pop
cld
ret
and
jne,pn
loop
loope
mov
lods
mul
jmp
andl
mov
or
cltd
lcall
mov
or
mov
nop
sub
adc
lret
inc
adc
lods
mov
pop
inc
cli
sub
cmc
and
adc
test
test
lcall
xchg
pop
test
mov
push
ds
test
cld
in
and
repz
out
xor
jmp
mov
mov
sahf
inc
dec
out
dec
sti
std
fs
dec
stc
pop
test
outsb
gs
outsl
test
cmpsb
and
cltd
shlb
sahf
scas
sub
push
inc
sub
lds
sub
inc
and
mov
adc
mov
mov
push
call
cltd
dec
fmuls
mov
mov
adc
sub
nop
and
or
fs
pushf
lods
das
xchg
andb
lret
insl
or
mov
cli
loop
rcrb
das
pushf
aad
inc
daa
daa
testb
xor
cmp
or
jae
push
and
mov
sbb
je
push
cld
popa
sub
mov
pop
sbb
pop
les
mov
mov
sti
and
pop
addb
ds
or
das
mov
jecxz
or
pop
cmp
je
negl
stos
cli
rclb
call
mov
arpl
or
out
jnp
mov
cwtl
imul
popw
mov
mov
lds
ret
mov
enter
xchg
std
sbb
js
insb
cmp
jl
in
cmpsl
jnp
jmp
sbb
cmp
xchg
les
jge
adcl
mov
xchg
mov
pop
in
jo
and
stos
lods
xor
cmpsl
or
lods
push
cmp
pop
jnp
loopne
mov
jmpw
fs
and
scas
cmp
mov
nop
xchg
in
inc
data16
arpl
add
popa
mov
movsb
xchg
in
testb
nop
xor
pusha
cmp
test
icebp
dec
repz
push
add
inc
lcall
idivb
sbb
sbb
push
adc
and
fwait
mov
cmp
data16
mov
jmp
xchg
cmp
add
pop
or
mov
nop
jl
jno
mov
mov
lret
cmp
loopne
out
push
and
mov
int
sar
lcall
xor
and
mov
lahf
cltd
les
jmp
fsubs
mov
mov
loope
or
call
push
std
jecxz
rclb
add
in
leave
stc
sub
iret
cmpsb
fdivrs
mov
pop
int
cmp
dec
fdivp
aas
out
daa
lods
packssdw
int
add
adc
je
add
sbb
fdivrl
and
push
mov
rcrb
mov
mov
gs
mov
cmpl
andl
pop
lret
test
inc
scas
mov
cld
lods
stc
lods
xor
fadds
daa
fisttpll
push
movd
or
add
aaa
mov
adc
and
dec
cwtl
cli
rep
icebp
sbb
jmp
ss
jo
in
add
pop
mov
jbe
fimuls
imul
mov
ljmp
jno
test
lock
cmp
push
int3
inc
stos
lret
push
stos
mov
into
dec
fwait
pushf
cli
mov
ret
xchg
xor
sahf
mov
fistps
aas
and
inc
jle
mov
test
jne
mov
lret
rcrl
call
test
les
inc
cmp
sbb
es
jge
jge
dec
mov
add
adc
aam
pop
cld
push
pop
subl
dec
push
cs
ret
or
mov
pop
int
int
scas
sub
testb
fidivl
out
mov
add
mov
cmc
xor
jle
jecxz
jle
add
xchg
inc
lods
sub
in
sbb
ljmp
pusha
push
or
clc
leave
rcrl
js
sbb
scas
pop
jbe
xor
pop
rcl
adc
out
push
jno
insb
mov
sti
mov
sbb
pop
addr16
popf
gs
adc
test
sub
lock
adc
sub
jo
adcb
cmp
push
mov
fnsave
add
rcl
and
jns
repnz
dec
fdivl
imul
xchg
mov
ss
or
aas
js
shrb
lock
push
popa
push
jno
jmp
ret
push
or
cmp
mov
cmp
shlb
sub
inc
xor
daa
decb
adc
pusha
pop
sub
rorb
mov
insb
mov
jp
ljmp
and
and
mov
ja
mov
sbb
and
xchg
imul
std
mov
fsubrs
cmp
fwait
loopne
jb
mov
dec
xor
jnp
push
repz
dec
or
mov
push
and
fs
mov
pop
cmp
ret
aad
inc
add
ret
sbb
cmp
xchg
rcl
je
sbb
pop
cmp
cli
cmp
test
push
mov
loope
or
in
fucom
push
lods
les
rorb
pop
cmc
stc
test
push
mov
scas
data16
cmpsl
pop
push
adc
sub
pop
hlt
insl
in
fwait
xor
fidivrl
xlat
fmull
add
outsl
mov
mov
rcll
sub
fs
dec
stc
jmp
sahf
imul
aaa
fbld
loopne
andl
or
sbb
roll
add
outsl
fnstsw
xchg
jg
mov
shlb
out
cld
jle
popf
daa
stos
xchg
and
xchg
dec
adc
jle
sub
sahf
lock
scas
aaa
mov
inc
jbe
xchg
mov
sub
or
out
dec
aaa
jg
in
addr16
scas
xor
jmp
sub
jbe
pop
testl
push
and
lods
add
dec
loope
fnstcw
clc
inc
dec
push
xchg
mov
test
mov
xchg
es
or
popa
cmp
pop
xchg
jne
out
push
fs
xchg
movsl
inc
std
mov
lods
fwait
cwtl
sub
mov
and
jbe
cmp
in
and
cmp
sbb
and
out
outsl
inc
jnp
orb
xchg
lret
and
add
mov
test
xchg
push
push
inc
xor
lahf
nop
pushf
jo
inc
insb
and
push
mov
and
scas
mov
xlat
cmc
ret
jg
mov
fstl
cmpsb
mov
sbb
ffreep
jno
mov
dec
ret
or
jge
stos
mov
popf
and
sub
or
fnstenv
cmp
out
sbb
subb
jmp
xchg
lcall
shl
mov
les
mov
aas
dec
aam
pusha
add
push
stos
fs
inc
push
cmp
jno
mov
push
testb
cmp
mov
cli
pushf
cmpsb
inc
jp
adc
add
lods
addl
shrb
test
icebp
fadds
out
out
aad
repz
icebp
addb
icebp
test
adc
cltd
iret
outsl
xchg
repz
cli
xchg
repz
or
xor
inc
popa
aad
ljmp
xchg
cli
pop
hlt
push
call
rcr
xchg
jae
inc
mov
xchg
or
sbb
xor
mov
cmp
xchg
xchg
loope
push
and
lret
inc
fwait
fwait
jae
insb
xor
sub
cmpsl
xchg
or
xor
mov
push
outsl
add
out
mov
pop
pop
test
mov
mov
mov
push
and
div
dec
jecxz
movsl
jnp
cmp
clc
pop
cli
xchg
stos
int
imul
subl
fildl
and
lret
mov
pop
loop
pop
push
les
std
imulb
leave
push
and
int
in
jl
jb
lcall
mov
xchg
cmp
pop
xchg
cmp
das
ja
imul
pop
xlat
jae
lret
xchg
dec
push
and
fdivp
mov
fldenv
lret
lods
shl
cmp
fwait
cwtl
sub
jg
shrl
lahf
adc
sub
ja
xor
xchg
shlb
push
push
or
push
int
popa
mov
adc
jo
into
aas
loope
and
dec
or
pushf
int
imul
into
insb
mov
dec
and
xor
jbe
jno
popf
inc
add
fs
mov
cmp
dec
sarl
ret
jb
or
das
xor
subb
xchg
lock
cmp
out
sbb
mov
xchg
loopne
and
lahf
dec
popa
out
pop
xor
fst
sahf
jns
movsl
push
je
jmp
inc
shlb
mov
mov
aam
nop
push
xchg
cmp
jecxz
out
mov
xor
xchg
sub
test
test
insb
sub
fisttpll
jmp
jmp
test
ficoml
adc
add
lea
mov
pop
add
lods
out
inc
aad
out
dec
inc
dec
mov
stos
jp
aam
xchg
adc
push
add
sbb
jle
xchg
mov
movsb
cmp
js
xlat
add
fnstcw
in
or
lret
dec
xor
sarl
aam
loopne
jnp
sbbl
insl
loop
mov
ds
jno
push
hlt
leave
test
jnp
dec
mov
ret
or
inc
push
sub
call
cmp
gs
or
mov
aaa
or
mov
bound
inc
cmp
sahf
xor
dec
mov
dec
cwtl
or
loop
or
clc
xor
rcr
mov
jp
push
ljmp
adc
out
mov
and
push
pusha
mov
ss
popa
cs
adc
test
scas
jb
aam
jl
xchg
cltd
cmc
outsb
add
out
inc
inc
mov
es
std
sub
pop
cltd
in
mov
adc
loop
out
js
adc
scas
sbb
fwait
stos
scas
js
enter
rclb
cmpsl
repz
mov
push
sbb
mov
fcompl
xor
scas
cmp
outsb
sahf
in
aaa
imul
and
popf
inc
jnp
lods
outsb
and
sub
sbb
pop
imul
ds
mov
mov
aaa
or
push
shrb
push
mov
lock
js
movsb
fnstcw
inc
mov
xchg
outsl
mov
repnz
js
std
xor
in
loope
mov
pop
cwtl
mov
sub
rol
jle
fstps
xchg
push
scas
mov
sbb
mov
andl
mov
test
push
fwait
andl
dec
imul
sbb
add
jg
inc
mov
decb
push
inc
pop
sbbl
and
lret
jnp
lods
xor
insl
rcll
popa
xchg
adc
arpl
jle
popa
and
cmp
mov
popf
adc
aas
nop
ret
ss
dec
testl
imul
scas
xchg
push
filds
xchg
mov
icebp
and
ret
inc
push
fs
mov
adc
jne
add
xchg
les
or
data16
sahf
push
pusha
pop
sbb
jb
xor
stos
xchg
inc
cs
scas
mov
or
cmp
jp
rclb
les
outsl
mov
dec
xor
add
add
sub
dec
inc
sbb
push
mov
adc
mov
stos
into
or
xchg
fwait
aas
js
stos
pop
sub
pushf
adc
shl
rol
jl
aaa
cmp
pushf
sbb
fs
pop
and
fildl
pop
out
pop
jge
pop
jl
xor
insb
repnz
xchg
shrl
cmpl
jo
loop
cmp
inc
arpl
insb
add
push
pop
cli
push
pop
pusha
pop
cmp
sarb
in
lcall
mov
movsb
stc
or
jb
lahf
mov
mov
or
adc
aaa
xor
jne
in
push
loope
push
js
add
xchg
cli
rclb
xlat
push
cmp
and
xlat
orl
mov
pop
xchg
sbb
adc
push
xchg
stc
cmc
subb
ficoms
cld
nop
mov
jp
cmp
mov
cltd
gs
arpl
pop
movl
push
lea
outsl
rcll
in
jnp
xchg
inc
lods
cmc
pop
adc
push
xlat
popf
inc
aad
addb
insl
sub
sahf
cs
and
call
xchg
loop
push
test
mov
and
sub
stos
cli
add
cmp
ljmp
adc
out
insl
out
sbb
je
push
js
mov
hlt
xor
dec
jb
cmp
push
hlt
popa
sbb
shrb
mov
pushf
push
mov
cli
xchg
jns
sub
push
cmpsb
hlt
in
movsl
sti
push
or
push
cld
divb
sub
mov
pop
loope
into
mov
test
jns,pt
stc
push
lahf
sbb
fisubl
xchg
xlat
xchg
cmc
sbb
cli
pop
inc
and
push
call
out
sbb
pop
popf
cmp
and
mov
js
test
sbb
test
mov
mov
mov
mov
sub
pop
mov
cs
inc
add
mov
push
nop
cmp
mov
stos
push
or
or
movsb
inc
push
cmpsl
test
sub
inc
in
sar
inc
popf
jae
daa
xchg
and
rclb
pop
xchg
or
sbb
push
sti
or
in
outsb
fistl
fcmovne
mov
aaa
loope
mov
push
popa
push
ds
loop
adcb
lods
sbb
pop
xor
hlt
in
icebp
add
loop
xor
rcl
add
or
xchg
add
add
xchg
mov
fistps
mov
subb
xor
adc
data16
pop
lahf
clc
cmp
cmp
jp
lock
into
fsubrs
jle
aas
xchg
xor
xchg
popf
in
pop
int
mov
push
inc
jbe
out
in
ss
stc
fsubrp
lcall
aam
pushf
lds
inc
in
pop
lods
jo
and
jo
and
icebp
enter
add
std
pop
addr16
sbb
push
notb
and
mov
ss
out
dec
cmp
jge
out
mov
test
std
in
in
out
aaa
int
sbb
jae
cmc
or
rorb
outsb
jns
fwait
loop
jae
fsubrp
dec
pusha
loop
xor
xchg
jnp
ret
cmp
adc
hlt
xor
or
jg
out
gs
add
cltd
js
jge
push
sbbb
int3
cmp
jbe
xchg
inc
dec
cs
pop
xor
or
and
inc
jbe
loopne
outsb
mov
push
fisubrl
add
push
mov
push
fidivs
push
mov
push
mov
lret
ficoms
test
push
mov
jge
imull
push
pop
andb
jle
lret
sti
nop
mov
mov
mov
mov
sbb
mov
and
cld
cmp
addr16
js
xor
ss
and
or
mov
sbb
mov
cmc
pop
daa
mov
jns
sub
adc
lods
scas
sbb
push
inc
addr16
inc
mov
push
or
xor
xor
xlat
lock
es
inc
sub
mov
jnp
pop
add
cli
cmp
add
testl
and
orl
or
add
mov
mov
divb
jp
sbb
add
outsl
lods
jnp
sub
out
fsubrl
mov
inc
mov
jbe
pop
xchg
dec
lahf
clc
imul
cmc
mov
js
leave
mov
pusha
imul
jecxz
xchg
dec
pop
in
add
pop
add
sbb
negl
rcrl
fwait
xchg
and
sbb
push
sub
pop
fadds
cmp
pop
mov
xchg
mov
mov
mov
test
jmp
cmpsb
lock
push
loop
pop
mov
mov
inc
push
sbb
dec
xor
lret
popa
es
mov
insb
inc
hlt
sbb
or
pop
mov
test
cli
cmp
sub
mov
jb
and
mov
xchg
add
xchg
shlb
aas
add
jle
lods
pop
pop
fisttps
mov
inc
sarb
mov
pusha
jne
fdivs
mov
dec
push
cltd
mov
ja
sub
in
lcall
jmp
inc
mov
jb
xchg
testb
sbb
pop
fistps
and
xor
aam
push
jge
mov
call
insl
addr16
js
or
fidivl
lret
pop
sahf
mov
cmp
cmc
orl
xor
mov
jnp
mov
mov
stos
test
mov
test
out
shll
shrb
add
mov
jmp
rol
fwait
repz
jnp
mov
pop
adc
add
loopne
xor
stos
cltd
push
push
mov
and
loop
ja
or
mov
stos
rol
jmp
xor
movzwl
cmpsb
data16
lods
jmp
and
xor
test
xor
inc
push
jge
arpl
dec
add
filds
push
aam
adc
pop
xlat
jl
stos
js
repnz
jbe
mov
jecxz
nop
xchg
neg
and
das
loopne
scas
xchg
add
xor
xor
movsl
popa
fcmovne
call
inc
mov
std
sub
mov
lcall
mov
jp
mov
cwtd
xor
jo
mov
mov
push
sbb
inc
pushf
and
sbb
negb
mov
sub
mov
push
mov
sub
hlt
mov
jle
inc
lea
and
pop
cmp
rcrl
sbb
lods
pusha
adc
sub
add
fimuls
rol
pop
mov
sbb
jae
jne
sahf
or
lret
xchg
insl
mov
sub
jns
jg
cmp
push
and
mov
adc
aad
out
mov
adcl
push
ror
lock
dec
mov
mov
dec
imul
cmp
nop
dec
out
sub
ljmp
cmpsl
dec
iret
push
hlt
bound
js
ds
dec
out
mov
sub
cmpsl
data16
sub
adc
jbe
ljmp
push
jo
or
xor
inc
xor
jmp
cmp
cmp
jne
pusha
shll
je
push
or
lods
icebp
xor
push
sub
scas
and
ret
dec
sub
adc
or
dec
stos
aaa
pop
lret
mov
sbb
cmp
test
loop
mov
out
mov
inc
and
push
mov
and
jb
mov
pop
stc
scas
es
jbe
insb
jle
ret
stos
pusha
jge
aaa
cld
scas
outsl
gs
aas
pushf
sbb
int
jne
xorl
and
or
push
jl
mov
jp
jg
movsb
imul
icebp
mov
jae
jl
pop
inc
test
inc
mov
xchg
icebp
idivb
sbb
jo
out
out
push
sahf
out
add
pop
mov
in
mov
pop
pop
and
mov
jg
data16
jmp
lcall
add
test
cmp
sbbb
jl
mov
push
fiadds
dec
pop
pusha
or
ret
jmp
in
int
les
and
testb
mov
jno
outsb
rolb
jnp
cmp
pop
lds
mov
push
movsl
jne
fisubs
mov
dec
subb
push
insb
std
mov
cltd
cmc
xor
mov
icebp
int
xor
xor
xor
aad
push
and
out
int
sub
and
aam
sbb
jp
add
fs
xor
dec
xchg
sub
repnz
lret
std
outsb
fstpt
xchg
aaa
sub
sbb
mov
jne
fcomp
mov
out
xor
cmpsb
xlat
push
rcrb
pop
jg
push
adc
add
out
insb
insl
icebp
jbe
es
dec
adc
rol
ja
mov
ljmp
ret
ja
push
fldl
mov
ret
push
std
fdivs
mov
inc
inc
pop
or
sbb
mov
shrb
xchg
and
das
add
dec
mov
cmpsb
cmp
repz
ret
enter
push
in
dec
sub
add
ss
sub
and
inc
cmp
pop
sti
leave
das
xor
sub
gs
pop
mov
stos
ror
fdivp
or
cld
inc
mov
and
imul
add
scas
pop
jg
or
xor
stc
fidivrl
les
outsl
rclb
jno
imul
div
add
lcall
mov
repz
push
xchg
lret
cwtl
repnz
dec
pop
pop
pop
dec
mov
mov
pop
and
cmp
shrb
mov
cmpsl
sti
stos
mov
mov
fnstenv
xlat
push
loopne
add
dec
lret
or
pop
add
jbe
call
mov
mov
mov
mov
ss
xchg
xor
mov
scas
mov
dec
in
push
fwait
xchg
cld
adc
sarl
ds
fs
mov
mov
pop
insb
sbbl
orl
xor
adc
or
dec
stc
inc
ja
push
iret
cld
add
orb
jns
or
stc
outsl
mov
ds
fsubr
notl
xchg
pusha
std
rorl
enter
mov
mov
jns
pop
lret
pusha
cmpsb
sbb
pop
test
add
dec
xor
iret
add
movsl
push
roll
dec
and
sub
testb
add
cmp
cmp
fdiv
fbld
mov
lods
inc
mov
or
mov
orl
aam
rcl
mov
into
mov
and
or
aas
out
sub
adc
add
and
loope
test
cltd
and
jmp
enter
movsl
inc
pop
rorl
int3
jnp
pavgw
add
shl
mov
adc
cmp
inc
std
inc
pop
mov
insl
mov
in
js
in
out
shrb
adc
push
cmp
jbe
out
mov
mov
adc
sahf
fistl
jns
ret
insl
xchg
xchg
fbld
arpl
cmpsl
je
mov
inc
add
hlt
xchg
xor
sbb
dec
rolb
jp
xlat
cmc
add
pop
fsubr
xchg
mov
lret
add
call
cmpl
clc
sbb
mov
outsl
cltd
push
lcall
push
xchg
sbb
add
mov
pop
test
pop
popa
or
out
sti
add
ss
mov
js
cwtl
leave
rclb
es
icebp
fimull
inc
mov
sti
xor
sub
nop
js
rorb
cmp
pop
push
int3
or
lods
mov
sbb
xlat
fsubrl
into
add
mov
xor
jb
scas
lods
das
sub
add
sub
icebp
data16
cmc
leave
loope
fcomi
test
and
dec
mov
push
scas
fisubs
mov
xchg
mov
pop
hlt
sbb
jl
mov
int
push
pop
mov
inc
repz
xchg
push
repz
sarb
shr
inc
pusha
shrb
push
or
sub
mov
mov
cmp
into
xor
and
mov
jo
inc
testl
int
mov
mov
aad
roll
cmc
xorl
push
pop
jno
sti
clc
bound
add
daa
arpl
cmpsb
outsb
adc
imul
push
adc
insl
adc
mov
pop
adc
cli
sbb
stc
mov
pop
out
fs
jbe
jmp
pop
adc
out
out
adc
and
jb
out
sub
into
rcr
clc
aaa
push
push
push
sub
inc
add
mulb
inc
call
call
pop
ss
jp
or
sub
rcrb
adc
and
push
int
add
mov
insl
jns
sbb
adc
push
mov
push
orl
and
lock
mov
call
andb
pop
sub
adc
aaa
xor
inc
cmp
jecxz
jl
mov
jo
insb
test
cmpsl
pop
push
out
cmp
dec
nop
sbb
add
sbb
cli
test
mov
mov
add
and
mov
cltd
inc
mov
movsb
popa
movsl
jp
arpl
jg
sbb
inc
inc
aaa
or
or
and
divb
pop
mov
scas
push
fmuls
subb
mov
push
js
popf
imul
push
cli
mov
push
dec
out
dec
sub
or
cmp
push
iret
lock
adc
sub
adc
mov
adc
and
push
daa
sahf
push
lret
lods
pop
jnp
mov
es
mov
stc
xor
mov
icebp
add
icebp
fsubs
aad
loop
mov
insb
mov
les
or
pop
mov
andl
rolb
dec
movsb
jmp
fisttpll
movsl
roll
mov
fiadds
aam
dec
jno
lret
out
ret
aam
mov
cmp
insl
shr
and
icebp
aaa
mov
xor
fidivrs
push
fldcw
popa
add
push
pop
dec
jno
test
sbb
pop
inc
pop
loopne
push
cltd
in
push
jmp
jl
add
inc
push
movsb
ret
repz
dec
sar
loop
mov
fdivl
js
mov
mov
or
sbb
orb
cs
xchg
jmp
cmp
mov
xor
xor
cmp
out
cmpsl
sub
ror
mov
cli
inc
fistl
dec
mov
jo
and
add
adc
mov
not
mov
or
inc
dec
sti
cmp
xchg
repnz
xor
cmpsl
dec
sbb
add
xor
jbe
jno
sub
fs
cmp
test
out
addb
movsb
push
mov
mov
addr16
mov
push
adc
jno
lods
sar
mov
sbb
outsb
push
adc
ficompl
xorl
xor
pop
pop
push
jp
xor
pusha
push
inc
sbb
pop
inc
push
lahf
cld
lea
pop
xlat
xchg
hlt
call
inc
in
inc
cmc
xlat
push
sub
aad
sti
movsl
hlt
cmp
inc
imul
cmp
notb
pop
push
ffreep
in
sub
xchg
sub
pop
add
pop
hlt
or
js
sbb
scas
dec
enter
or
sub
jns
fisttps
xor
loop
add
xchg
push
pop
mov
pop
aas
leave
xchg
dec
or
je
inc
dec
mov
es
jno
mov
cmp
jo
inc
insb
and
int
jbe
adc
mov
ss
clc
pusha
pop
pusha
push
xchg
and
lahf
imul
lcall
mov
cwtl
xor
push
push
outsl
adc
sub
lds
jne
jl
mov
and
into
repz
bound
clc
or
and
mov
pop
je
sbb
sub
iret
cmp
ret
xor
fstl
mov
std
push
dec
ljmp
mov
sub
dec
sub
push
mov
pop
push
subb
or
and
fs
push
lcall
dec
push
clc
pusha
sbb
and
fsts
dec
dec
xor
jge
hlt
lcall
outsl
mov
or
notl
and
loop
rclb
jecxz
mov
jmp
daa
lods
leave
push
push
and
les
test
and
cmp
adc
pop
daa
inc
cli
pop
imul
xor
xchg
out
cmp
push
xchg
insb
loope
push
lret
mov
push
not
sub
pop
push
mov
insb
xchg
dec
pop
push
dec
inc
push
subb
cvttps2pi
jb
push
ss
daa
xor
or
addr16
int3
shlb
sarl
adc
pusha
jmp
push
into
adc
xchg
push
int3
push
stos
push
dec
out
mov
jae
sub
and
pop
mov
inc
jae
data16
inc
into
leave
flds
jmp
in
arpl
pop
dec
loop
pop
lcall
push
in
scas
aad
adc
das
pop
mov
in
inc
daa
outsb
xor
cmc
mov
insb
push
xor
jmp
rcrl
mov
pop
cmp
adc
daa
cmp
jg
mov
push
or
xor
push
sbb
push
fistps
mov
cmpsb
pop
lds
xchg
fstp
xor
subl
mov
call
outsl
fcmovb
stos
mov
push
rorl
or
shrl
push
xor
insl
add
sub
test
lock
sbb
xchg
adc
and
into
popa
add
sbb
adc
rcrb
inc
pusha
rorb
out
mov
add
fisubs
gs
in
roll
dec
lea
mov
dec
cmpsb
std
fsubs
fistl
cmp
fwait
sbb
cmp
shll
scas
xchg
dec
xchg
aaa
and
rcll
js
stos
cli
je
int
sbb
addr16
xchg
dec
out
pop
mov
xchg
cmp
and
pop
sahf
jbe
in
dec
std
pop
hlt
inc
cmpl
mov
cmp
or
sub
xor
jecxz
or
lods
icebp
das
push
mov
jno
popa
and
lock
inc
xor
and
jle
fists
mov
fimull
repz
test
idiv
mov
stc
fidivs
cmp
dec
mov
shrb
jnp
out
fwait
mov
or
fnstsw
stos
lods
mov
arpl
pop
inc
jne
ret
lods
sub
adc
popa
and
push
jno
pusha
mov
inc
mov
cmp
outsl
lea
push
xchg
int
pop
mov
cmp
add
pop
pop
inc
loop
mov
icebp
cs
mov
mov
test
test
mov
mov
push
add
sbb
and
mov
inc
popa
es
adc
adc
xchg
stos
std
and
dec
test
fistps
pushf
sub
xchg
push
push
mov
repz
loopne
xor
out
sbb
or
mov
sbb
xor
pop
xchg
nop
daa
mov
mov
je
push
cmpsb
xchg
jne
mov
pushf
sub
cmp
mov
jno
pop
mov
sub
pop
adc
in
out
stos
dec
aam
pop
rcrb
inc
js
ret
les
cli
jo
imulb
push
inc
jge
mov
dec
adc
stc
inc
xchg
lret
dec
xchg
mov
sbbl
mov
stos
popf
sbb
mov
pop
aad
sti
popa
in
icebp
lds
fcomps
loopne
sbb
stos
adc
pushf
std
mov
insb
orl
lret
les
lcall
lods
push
cld
idivb
out
int3
mov
or
and
lahf
out
incb
push
ja
movsl
sub
jmp
jmp
mov
push
sti
mov
loope
shll
test
scas
loopne
xchg
out
sub
jbe
neg
lcall
cmpsl
mov
icebp
jae
add
xchg
dec
sbb
mov
lea
lret
aaa
mov
rol
fucompp
pop
imul
push
mov
mov
sub
mov
xchg
cmp
lahf
jmp
lret
rcrb
push
mov
sub
scas
inc
dec
fld
jmp
data16
scas
mov
or
int
push
push
mov
fcomi
or
xor
sti
arpl
loop
mov
xchg
add
pop
pop
cmp
mov
aas
xorl
sbb
lret
mov
popa
inc
int3
fidivl
mov
xchg
cmp
out
fidivrl
cmp
in
test
push
xchg
xchg
out
mov
aam
roll
ret
cmc
loope
ljmp
sbb
xchg
add
pop
xchg
inc
pop
mov
mov
jns
movsl
leave
mov
scas
scas
cs
dec
mov
in
pop
add
cmp
jo
xor
shl
mov
bound
and
data16
pop
flds
mov
adc
push
xchg
lods
xor
adc
int3
xor
ds
dec
shlb
scas
push
mov
xor
cwtl
ds
loope
lock
stc
push
jbe
outsl
and
add
cmp
stc
ss
lock
and
add
jmp
cmc
ja
test
ljmp
xchg
imul
inc
push
mov
cwtl
xchg
insl
mov
mov
fstl
fistpll
jno
mov
jg
mov
xchg
xor
cmp
imulb
xchg
jle
inc
sbb
bound
daa
jae
rol
sub
mov
and
sub
jecxz
dec
loopne
aad
lea
ss
jno
out
repz
xor
fnstsw
lcall
sub
std
dec
popa
sub
loop
inc
test
push
fwait
inc
fldcw
xchg
arpl
test
mov
push
call
xchg
gs
ret
or
int3
push
add
out
lock
fsubrl
in
xchg
add
mov
aaa
mov
in
jl
gs
aam
test
lea
dec
dec
inc
test
mov
inc
sub
cmpsb
mov
add
jnp
pusha
xchg
in
dec
fneni(8087
mulb
xchg
jecxz
jle
daa
pop
mov
push
ficompl
push
pushf
push
adc
mov
outsl
sahf
adc
pushf
es
push
sti
imul
lods
ret
stos
jns
add
lods
enter
movsl
inc
shll
pop
fdivrs
push
xchg
dec
xchg
lret
iret
flds
mov
xchg
adcb
push
pop
fimull
out
xchg
hlt
inc
std
inc
lock
pop
xor
scas
imul
out
js
dec
jne
repz
cmc
push
xchg
pop
out
std
mov
test
out
in
cmp
jns
loopne
addr16
add
test
pop
cmpsb
jno
imul
dec
jle
cmpsb
pop
cmp
sbb
push
adc
dec
int3
je
adcb
mov
addb
mov
cmp
lock
sbb
dec
das
sbb
inc
pop
pop
sub
jno
pop
push
push
xor
xor
daa
mov
jle
mov
loop
daa
cli
mov
popa
adc
cmpsl
imul
repnz
push
mov
aad
fcomps
dec
ss
jno
sbb
lahf
stos
aam
jo
xor
arpl
sub
cli
pop
cmp
pop
pop
xor
add
cmp
testb
mov
dec
pop
loope
pop
pop
insl
xor
pop
or
add
xor
add
mov
int
mov
pop
mov
in
xchg
mov
ja
pop
add
or
cli
aad
add
sahf
dec
sbbb
cmp
mov
cmc
mov
bound
test
pop
ficomps
cmp
pop
sbb
jbe
xor
movsb
push
mov
sti
pushf
jb
lahf
push
outsl
fcomps
daa
cli
adc
vmovupd
sahf
xchg
or
shlb
or
and
lcall
push
imul
insb
icebp
adc
int
adc
movsb
mov
aad
sbb
or
in
out
lret
push
pop
xchg
mov
adc
add
cmp
xor
lock
jle
jno
mov
pop
sub
fistl
xor
xchg
nop
dec
fistl
jge
in
push
rcrl
int3
xchg
add
stc
test
pop
and
repnz
xchg
movsb
mov
lds
aam
mov
dec
lahf
lods
lock
aas
xchg
mov
jnp
shlb
std
push
pop
lods
sub
movsb
mov
imul
out
xchg
mov
call
js
pop
add
jecxz
pop
ffree
sub
lcall
movsl
out
or
imul
push
inc
ret
xchg
sub
add
fwait
out
int
jo
mov
pop
push
sub
sahf
dec
pop
sub
push
fiaddl
push
ljmp
in
es
pop
rcll
or
arpl
out
in
ss
cmp
icebp
mov
out
pop
push
adc
push
cmpsb
test
std
adc
sahf
jge
es
xor
push
fs
mov
mov
pop
hlt
sub
add
data16
ds
ficomps
mov
stc
xchg
data16
mov
pop
mov
ret
mov
pushf
mov
das
adc
inc
insb
aas
sbbl
push
lods
lcall
test
dec
lcall
std
and
stos
stos
shrl
pushf
or
lret
popa
lock
lds
lea
outsb
fdivr
loope
cmp
mov
push
xchg
into
pop
sarb
add
fnsave
sub
popa
push
in
push
stos
add
shr
inc
fsubl
jnp
jbe
xor
aas
xor
inc
add
dec
cmp
js
push
rolb
jb
sbb
fildl
mov
lret
repz
aas
or
fcmovnbe
stc
js
sbb
mov
popf
fmull
cmp
int
adc
rorl
scas
cmp
add
orl
cmp
pop
or
push
cwtl
push
or
in
inc
fwait
sahf
lahf
or
inc
bnd
xchg
leave
ja
movsl
hlt
imulb
push
out
lods
dec
dec
xor
fwait
mov
sub
lret
jge
out
cmp
test
cmpsl
das
mov
push
dec
jecxz
inc
fldt
ds
out
push
dec
cmp
cmp
insl
je
je
xor
mov
ja
jnp
mov
ret
test
andb
mov
inc
xchg
insb
insl
leave
mov
js
pop
push
and
or
fsts
into
jb
pop
in
test
inc
je
cmp
push
cmp
mov
sub
or
rorl
add
xor
mov
xor
adc
js,pt
mov
sub
loopne
aad
je
aas
cli
mov
adc
das
movsb
aaa
fdivl
push
mov
pop
mov
scas
loop
adc
push
and
out
test
dec
movsl
cs
ljmp
and
dec
xchg
mov
push
mov
cwtl
pop
lret
mov
jge
inc
lock
pop
or
outsb
and
clc
dec
dec
xchg
mov
lcall
aas
ja
dec
sub
imull
mov
shrl
shl
movsb
cmp
jo
and
inc
test
mov
and
jl
sbb
mov
ficoml
stc
nop
ljmp
or
and
test
mov
inc
ficompl
test
sbbb
loopne
push
sar
push
push
test
insb
sbb
add
dec
stc
iret
xor
mov
pushf
out
psubsw
sub
subl
imul
sub
arpl
stos
dec
daa
mov
push
adc
xchg
shll
pop
jp
xor
xor
sbb
mov
pop
cmpsb
ljmp
mov
pop
xchg
lret
test
adc
jns
and
cld
stos
sti
mov
shl
add
es
mov
add
ja
daa
adc
scas
adc
ret
xor
cmp
xchg
xor
fldenv
cmpsb
push
lock
rolb
push
clc
xor
sub
pop
mov
stos
test
xchg
and
sub
pop
dec
into
das
aaa
inc
add
cmp
push
mov
push
pop
mov
jbe
scas
pop
int3
imul
mov
sarb
jecxz
in
jae
test
jmp
aaa
xchg
test
sub
jl
scas
jns
fsubr
scas
lea
cld
aas
pop
loopne
jg
fistpll
push
pop
push
push
xchg
push
cmp
mov
jle
cmc
xchg
loope
rcr
add
out
div
dec
xor
dec
aad
fs
mov
inc
call
sti
mov
push
pop
es
fs
jl
adc
shlb
push
push
pop
xchg
out
scas
cs
inc
fcomps
or
sbb
mov
mov
clc
mov
dec
mov
cld
push
xor
lret
jge
fabs
lcall
cmpsb
int3
mov
rol
fsts
xchg
pushf
div
cmpsl
int
and
cwtl
dec
xchg
dec
xlat
push
push
xor
mov
das
cmc
js
mov
inc
inc
inc
mov
jne
dec
in
decl
inc
aaa
and
sarb
add
xchg
push
pushf
iret
sub
lret
addr16
scas
cmp
mov
or
inc
lahf
push
pop
sub
and
sbb
mov
and
mov
test
xchg
xchg
dec
out
int
mov
dec
ljmp
cmp
test
test
cltd
testb
test
or
aad
push
xor
call
push
cltd
or
inc
jge
jg
jmp
or
cli
filds
push
cmp
sbb
or
shr
cmpsl
stos
call
or
jns
inc
inc
sbb
pop
aaa
add
je
lea
in
lea
ret
add
mov
pusha
and
daa
dec
mov
outsb
jp
adc
cmpsb
pop
out
icebp
jge
adc
lret
add
fldenv
and
sbbb
mov
jbe
jge
push
int
add
xchg
stos
push
cmp
loop
push
into
xor
out
sbb
ds
mov
or
mov
xlat
push
dec
xlat
negl
jbe
push
jnp
sub
fdivs
mov
leave
jp
scas
loop
popa
push
fists
pop
into
or
sbb
repz
popa
mov
sarl
jno
ja
jge
cmpsb
gs
movsl
cmp
lods
js
incl
mov
aam
aaa
jmp
mov
gs
aaa
xchg
push
dec
in
pop
push
adc
inc
inc
sbb
mov
test
sti
jnp
xlat
push
cmp
divb
cmp
adc
ror
sbb
std
inc
clc
mov
adc
sarb
mov
loope
cmp
rcll
fdivrp
xor
mov
pushf
lcall
inc
cmp
and
and
popa
lods
aam
arpl
test
mov
push
and
gs
and
xchg
les
xor
or
sbb
adc
inc
das
iret
aaa
int
loopne
jne
lock
lds
mov
inc
or
jge
sub
mov
cmpsl
inc
add
cld
dec
es
fcmovne
inc
stos
jbe
cmpl
out
and
mov
and
mov
jle
hlt
xchg
mov
mov
jnp
or
mov
lret
scas
cmp
or
lahf
jb
mov
or
inc
push
in
ficomps
aas
push
lret
aas
xchg
out
out
fucomip
popa
dec
icebp
inc
or
les
movsb
inc
sub
inc
jnp
movsb
pusha
je
and
mov
mov
movsb
mov
mov
rolb
mov
test
add
and
in
movb
mov
inc
dec
xchg
push
mov
pop
out
pop
mov
dec
pop
stos
inc
adc
in
push
outsb
add
clc
mov
test
movsb
xchg
mov
mov
inc
addr16
inc
dec
jecxz
in
fsubr
mov
pop
int
xchg
iret
shrb
cltd
mov
rolb
ret
push
out
mov
insb
bound
hlt
dec
sahf
jb
test
sub
cmp
out
ja
out
dec
lret
sbb
mov
data16
es
cmp
pop
cli
imul
sbb
jae
bswap
out
jle
gs
xorb
into
adcl
jecxz
shlb
inc
stos
add
orl
add
lcall
repnz
mov
dec
xor
jno
jl
inc
int
bound
lcall
push
inc
dec
push
mov
lods
mov
dec
xchg
mov
int3
rcll
xchg
adc
popf
stos
xor
inc
jl
mov
das
jg
xchg
sub
pop
push
bound
add
in
jne
push
incb
int3
pop
sub
sti
push
fdivrp
mov
cmp
sbb
je
rclb
mov
testl
popa
jb
mov
push
fs
jmp
cmp
adc
das
fistl
mov
xchg
aas
int
jg
mov
mov
cli
out
mov
bound
xchg
lret
xchg
outsl
mov
inc
repz
lods
in
sub
push
pop
fnsave
lret
cmp
movsl
sarb
or
push
add
arpl
inc
cmpb
movsl
or
dec
cmp
jge
cmp
mov
in
insb
filds
or
idivl
sub
in
dec
movsl
arpl
stc
addr16
outsl
jnp
test
sti
dec
push
or
inc
pop
mov
sbb
cmp
or
or
add
test
or
push
es
loopne
rorl
mov
jbe
jb
out
rclb
stos
xchg
jg
pop
xor
pushw
imulb
shlb
out
outsl
push
movsb
in
dec
sub
insl
lret
aad
sub
mov
and
dec
sub
mov
lock
mov
mov
mov
lock
pop
cli
jno
and
adcl
gs
cmovb
or
mov
rolb
pop
add
adc
mov
aam
ds
inc
sub
scas
aad
pop
xchg
fcmovu
dec
xchg
lret
inc
loop
pop
jns
cmp
sbb
aam
cmp
aad
adc
ja
nop
outsb
cmp
shlb
flds
inc
cmp
fwait
test
jno
mov
pop
xor
and
and
mov
aad
mov
into
call
push
mov
dec
jmp
pop
mov
aaa
fwait
cmpsb
sbb
mov
sbb
bound
and
mov
push
frstor
scas
dec
adc
sub
inc
xor
pop
loope
and
xor
dec
sbb
push
loop
fldl
mov
xchg
pop
mov
inc
shrl
out
cmp
imul
cmp
mov
dec
push
xor
pop
pusha
dec
les
sbb
jo
mov
adc
fildl
mov
mull
cmc
in
ja
call
inc
movsl
addr16
and
mov
mull
data16
sub
adc
lahf
das
or
mov
cmp
sub
jp
xor
pop
fidivl
sbb
inc
in
arpl
in
fidivl
daa
jg
into
fildl
imul
xchg
js
dec
sub
pop
insb
mov
push
dec
imul
mov
mov
dec
add
bound
aam
test
sub
jge
cmp
cmp
sub
mov
mov
bnd
add
pop
addr16
cltd
adc
cmp
insb
xor
mov
andl
inc
xchg
sub
fstpl
inc
aam
xchg
loop
xchg
aas
mov
out
adc
mov
cmp
jo
xor
inc
mov
jl
leave
pop
and
in
roll
jge
popf
pop
sbb
and
pop
xor
mov
xchg
sub
cmp
mov
fwait
iret
fidivs
fnstcw
inc
xchg
mov
mov
clc
mov
mov
call
out
sub
test
jecxz
pop
cmpsb
pop
or
cmc
fstpt
add
dec
and
das
and
ja
pop
es
rolb
or
jo
mov
and
scas
std
lret
push
dec
inc
or
or
push
pop
scas
push
xor
lcall
in
mov
imul
xor
push
shr
push
bound
mov
xchg
cwtl
push
push
mov
int
lea
mov
dec
cmp
push
daa
dec
or
andl
gs
fadds
push
jo
insb
loop
shrl
popf
out
les
ja
ja
mov
in
sub
ds
ja
or
mov
or
xlat
push
sti
loope
lods
mov
mov
out
mov
cmp
fucomip
mov
repz
call
or
ja
jmp
fiadds
ret
mov
sbbb
ja
xchg
lock
mov
jo
add
mov
enter
frstor
xchg
daa
popa
xor
repnz
outsl
pop
sbb
shlb
jl
cmpsb
imul
sub
cmp
or
test
push
mov
cmpsl
in
pusha
or
shll
mov
mov
insb
scas
ds
repnz
rorb
movsb
outsl
outsl
fnstenv
jmp
mov
mov
add
xor
sbb
sbb
ret
shlb
cmp
inc
lcall
mov
lock
lods
mov
adc
mov
aam
jp
inc
pop
xchg
push
int3
mov
ljmp
dec
cwtl
addr16
mov
jle
ja
fs
test
sbb
sub
and
push
dec
ds
ret
and
mov
cmc
dec
xchg
mov
sub
jmp
cli
out
jnp
dec
inc
inc
xor
imul
flds
jnp
jo
dec
movsb
neg
cmp
mov
js
xor
icebp
jmp
pusha
je
add
sti
cmp
ss
push
fidivrs
adc
lret
xor
in
mov
faddl
xor
xchg
cli
mov
sbb
pop
mov
pop
cmp
out
ljmp
and
or
shll
pop
shlb
inc
scas
inc
jmp
call
mov
adc
cmp
cwtl
ljmp
popf
add
pusha
inc
lds
and
test
fdivrl
insb
mov
xor
int
mov
inc
clc
fidivs
out
mov
xchg
or
jbe
dec
dec
test
xchg
mov
adc
loopne
ja
fcomps
jge
mov
sti
popa
mov
cmpl
popf
icebp
and
ret
cmp
cmp
inc
shr
jno
add
dec
and
pop
mov
fwait
fs
sbb
jp
aas
cmp
mov
lock
out
outsb
push
es
clc
mov
inc
xor
iret
in
push
jnp
or
rcrl
lcall
rclb
fs
jl
pop
mov
fnstenv
scas
frstor
repnz
jmp
inc
in
push
inc
je
pop
dec
movsl
sbb
ret
push
mov
inc
dec
jno
and
mov
pop
dec
jae
mov
xchg
test
or
sbb
fs
or
or
lock
xorb
pop
pop
jne
scas
cs
jmp
out
enter
mov
cmpsb
push
inc
and
sub
aaa
sbb
enter
adc
iret
sub
mov
lret
into
mov
xchg
sahf
out
nop
mov
scas
es
hlt
ja
scas
roll
mov
pop
xor
sub
pop
repz
enter
repz
jnp
incb
mov
fnsave
or
add
mulb
mulb
les
xchg
dec
pop
ds
mov
add
subl
stos
mov
aad
sub
xor
mov
xchg
sbb
iret
pushf
jb
addr16
mov
fwait
mov
mov
in
cltd
stos
jns
add
insb
popl
jbe
iret
xlat
jbe
data16
ds
and
xchg
cmp
jl
xor
sbb
adc
sbb
aad
and
and
inc
cmp
bnd
mov
sbb
clc
jmp
mov
dec
pushf
orl
cmpsl
test
or
pop
cmpb
out
sbb
inc
pop
adc
sarl
insb
sbb
push
sub
xchg
adc
pop
maskmovq
divl
sub
lahf
push
or
dec
iret
sbb
cmp
mov
dec
xchg
lods
lret
inc
dec
add
stos
dec
daa
loope
aas
jle
xor
fdivr
mov
push
dec
inc
cmc
mov
cmpsb
xchg
pop
js
test
adc
xor
or
push
mov
mov
es
testb
push
jbe
das
mov
inc
into
sbb
lahf
sahf
paddsb
scas
xchg
xchg
lcall
mov
sub
push
lods
push
jp
xor
cmc
mov
enter
lods
cwtl
mov
test
inc
or
sbb
shlb
jg
xor
mov
fcompl
stos
movsb
cld
pop
cmc
push
xor
cmp
cmp
jle
or
lock
out
jbe
sar
mov
insl
arpl
mov
or
daa
adc
push
xor
lea
call
and
fisubl
pop
mov
hlt
daa
push
test
and
cmpl
cwtl
pop
test
jp
imul
dec
cltd
add
popa
movb
aas
ret
cmp
mov
pop
pop
mov
mov
fldcw
cwtl
jge
pop
mov
fcmovne
cmc
in
mov
ficoms
mov
adc
cs
and
outsb
add
and
and
je
ret
divl
int3
into
sarb
in
mov
sbb
cmp
cld
pushf
pop
into
aam
or
ret
mov
adc
lahf
or
xor
or
pop
movsl
int
mov
push
cwtl
lret
stos
lea
lahf
repz
mov
adc
push
incb
jecxz,pn
inc
xor
xchg
test
jmp
decb
faddl
pop
rcl
insl
cmp
nop
call
outsb
mov
repnz
rcrl
iret
mov
push
mov
xchg
jle
lods
out
insl
mov
sbb
testl
inc
test
push
pop
fs
or
aas
add
and
xchg
mov
pop
loop
in
aas
in
into
loop
movsb
fcomps
mov
insl
in
fldcw
and
mov
pop
sub
adc
fldl
out
fistl
lock
scas
cli
stos
int
sub
arpl
in
inc
or
lcall
xor
rorl
push
push
js
call
mov
xchg
pop
fdivr
das
fwait
ret
pusha
mov
clc
in
outsb
mul
xchg
pop
cmovno
fmull
fisttps
in
adc
lods
lods
movsl
jle
subb
dec
pop
mov
outsb
pop
jnp
sarl
sahf
es
push
hlt
shll
push
mov
mov
push
rdmsr
hlt
or
push
or
aas
or
test
mov
push
push
stc
xchg
xor
mov
outsb
and
xchg
xchg
and
aas
push
fucomp
rorl
jmp
mov
movsl
fistpll
or
or
sbb
iret
andb
mov
xor
cmc
rcll
adc
xchg
and
pop
sub
cmp
inc
sub
mov
fdivrs
jl
pop
leave
leave
xchg
insl
scas
mov
push
and
cmp
xchg
push
xor
js
fstl
inc
mov
add
xchg
pushf
aas
lcallw
arpl
movsb
jnp
fdivrl
pop
cmp
pop
icebp
stos
les
add
sbb
shll
jp
data16
mov
rcrl
pop
cmp
pop
lods
xchg
dec
dec
pop
cmp
mov
pusha
adc
imul
fnsave
sahf
test
les
jno
icebp
pusha
icebp
pop
push
pop
and
add
stc
dec
aam
mov
shl
rcrb
arpl
das
insl
fwait
sbb
test
loope
popa
mov
nop
pop
jmp
add
and
jg
scas
sti
ret
cmpsl
xor
inc
stos
shrb
nop
movsb
in
pop
jne
or
in
mov
pusha
inc
push
or
sub
adc
scas
hlt
adc
push
jmp
stos
int
stos
or
sub
mov
test
or
jno
jmp
call
inc
stos
lcall
push
cmp
ret
adc
inc
dec
in
das
push
mov
sbb
fstpl
push
jmp
inc
test
sti
adc
xchg
clc
repnz
shrb
xor
nop
cs
sub
test
les
add
int
mov
sbb
adc
stos
out
jg
ror
gs
sahf
mov
sub
xchg
notb
scas
push
xor
cmpsb
dec
int
dec
push
jo
in
hlt
mov
xchg
test
add
lahf
sahf
xor
jg
mov
xchg
pushf
js
mov
sub
les
push
loope
push
test
xor
cld
loopne
mov
popa
dec
movsb
mov
push
in
mov
enter
sub
movsl
mov
jg
int
pop
jns
icebp
sub
xor
cmp
outsl
inc
and
daa
addr16
cmp
fmulp
sub
mov
add
sub
jge
arpl
addr16
cs
xchg
sti
dec
xchg
mov
xchg
mov
ret
push
popf
loop
sub
cmp
and
sbb
cmp
popf
pop
cwtl
imul
loop
and
pop
in
call
outsb
imulb
repz
ja
in
or
or
inc
pusha
adc
cmp
scas
pop
call
fcmovnb
mov
scas
scas
jecxz
jg
stc
cmpsl
xor
adc
sbb
aas
cmp
int3
mov
cmpsb
mov
dec
xchg
jb
call
sahf
xchg
cwtl
iret
divl
fs
jl
loopne
lds
sbb
mov
repnz
leave
cwtl
cmp
imull
dec
cmpsl
fmulp
gs
mov
stc
sub
push
sbb
pop
test
in
test
mov
cwtl
jbe
pop
jge
sbb
xchg
jmp
push
leave
sbb
adc
stos
sbb
mov
in
push
aad
mov
jns
scas
fldenv
mov
sbb
jne
dec
xchg
mov
cmp
or
sti
sub
inc
dec
lods
daa
je
mov
sub
dec
imul
popa
xchg
mov
inc
and
jecxz
in
dec
dec
loopne
sbb
or
in
add
adc
inc
jp
lds
scas
pop
push
jne
into
and
out
inc
jle
cmp
sbb
std
xor
or
ds
mov
inc
adcl
ss
or
mov
mov
in
arpl
adc
push
and
enter
mov
iret
into
xor
repz
mov
sub
or
sbb
je
and
fstpl
mov
push
sub
mov
push
mov
lcall
loope
in
pop
lds
inc
mov
int3
cli
sub
push
aaa
icebp
xchg
jmp
js
jae
fcmovnu
jge
pushf
repz
and
mov
push
test
mov
cmp
repz
push
xchg
sub
xor
or
xor
sbb
dec
sbb
pop
fisubl
mov
inc
sub
pop
lock
lods
or
mov
roll
ljmp
xor
mov
push
cmp
in
jg
xchg
push
dec
jb
adc
lock
pop
movsb
mov
dec
jne
int
pop
roll
out
and
aaa
push
mov
loop
push
jo
subl
mov
out
lods
pop
pop
and
add
jbe
xchg
jge
aas
or
sbb
adc
je
inc
cmp
leave
xorl
insl
xchg
enter
xchg
movsl
xor
xchg
jle
fnstenv
pop
mov
lcall
dec
mov
cmpb
jl
jnp
out
inc
int
popf
lods
pop
xchg
loop
sub
pop
mov
pop
stos
pusha
into
int3
enter
std
xor
popf
gs
addl
mov
stos
clc
or
adc
or
jmp
scas
lahf
inc
insb
mov
mov
jl
xchg
mov
adc
js
daa
nop
push
jmp
jo
cmc
mov
adc
lret
dec
fwait
xchg
sub
ret
out
sub
mov
and
push
cmp
mov
into
shr
sub
repnz
inc
into
outsl
out
das
jbe
push
fsubr
xor
jl
js
popa
idivl
xchg
mov
cmp
cmp
mov
inc
in
xchg
aam
jo
xchg
cmp
jne
push
xlat
stos
pop
or
pop
pop
mov
jmp
xchg
rcrb
mov
sbb
inc
mov
aam
dec
push
pop
mull
pusha
sub
icebp
in
ja
push
and
xchg
ljmp
icebp
sbb
pop
test
cmp
pcmpgtd
xchg
mov
leave
or
add
testl
leave
jae
movsb
mov
test
enter
ret
push
pop
push
jnp
das
add
adc
in
adc
cmp
out
mov
push
insb
mov
add
cmp
int
inc
push
scas
jecxz
push
imul
pop
sub
add
das
stos
jge
mov
mov
and
xor
addr16
icebp
bound
movsl
lods
and
es
cli
das
fwait
aas
test
fidivs
push
int3
dec
xchg
imul
inc
mov
lock
pop
add
scas
out
jge
mov
sti
out
xchg
sbb
cmpsb
leave
sbb
xchg
jae
xchg
jmp
fcomps
aad
je
ds
pushf
ret
sti
xor
sub
mov
incl
in
sub
lock
add
pop
add
push
shlb
imul
inc
jg
ftst
push
addr16
jae
loop,pt
inc
jo
mov
sub
pop
insl
sti
mov
sti
lret
xchg
addr16
jno
sbb
icebp
or
sub
insl
cltd
push
sbb
mov
es
aas
inc
out
pop
sub
inc
or
push
flds
or
fdivrs
xchg
fcmovbe
sbb
xor
mov
and
xor
xchg
or
out
fdivrl
popa
dec
push
mov
mov
mov
push
sahf
sbb
push
je,pt
in
sub
daa
sbb
and
xchg
aas
push
js
test
xor
movsl
mov
add
sarl
pop
lock
sub
xchg
jae
adc
sbb
inc
jns
cmp
int
xchg
sub
cmp
jns
cli
enter
sbb
lock
and
stos
xchg
roll
xchg
sbb
ds
addb
add
fwait
mov
xor
adc
mov
pop
dec
pop
jg
inc
sub
add
and
xchg
mov
loopne
inc
ficomps
jb
sub
mov
xorb
int
orb
jg
repnz
in
mov
clc
lcall
aas
mov
test
add
int
mov
orl
out
and
out
xlat
sbb
std
add
and
add
dec
inc
push
mov
or
pop
inc
imul
add
add
xorb
stc
mov
push
cli
imul
ss
push
xchg
adc
or
lcall
xor
sbb
sbb
loope
cmpsl
js
jge
sbb
mov
std
insb
xor
movsl
pop
xor
cmpsl
cli
xchg
dec
call
inc
adc
movsb
and
jno
add
sub
clc
inc
mov
sbb
loopne
jmp
lods
push
std
cwtl
lock
cwtl
xchg
adc
jl
jb
inc
mov
jae
pop
sub
ds
jg
popa
inc
cs
push
sti
inc
push
mov
mov
lock
jo
cmpsb
inc
rdmsr
cmc
push
loopne
mov
pop
xchg
mov
iret
push
cltd
xor
sbb
adc
test
lea
lds
repnz
or
imul
sbb
jbe
inc
push
jne
fiadds
xchg
xor
sbb
ret
pop
jmp
sbb
mov
sbb
mov
pop
pop
push
xor
imull
test
fisttps
icebp
mov
push
xor
fwait
insl
prefetch
or
out
cmpl
pop
std
jp
cwtl
sbb
pop
sbb
xchg
mov
cmc
pop
mov
js
xlat
xor
cmp
add
mov
adc
push
sbb
jmp
dec
lahf
xchg
sti
movsl
mov
jo
inc
xchg
push
mov
dec
cmpb
add
test
jb
pop
mov
dec
mov
cmp
sarb
push
lds
repnz
and
mov
push
das
sub
inc
shrb
sbb
fstpt
shll
and
pop
jge
cmp
pop
push
jecxz
orl
loope
xchg
xor
cmp
bswap
bound
shlb
sub
xchg
insb
cmp
jbe
das
inc
adc
cmp
hlt
xor
std
mov
pop
cmp
add
inc
xchg
fcompl
into
fnstsw
ret
sahf
xor
aas
negl
sahf
jno
push
mov
rcr
inc
scas
mov
data16
dec
mov
jmp
shr
mov
jne,pt
push
push
lret
mov
push
repnz
xor
xlat
ret
sub
xor
push
mov
inc
movsl
mov
leave
cltd
lret
inc
push
cmp
adc
cmp
scas
int
imull
ja
popf
ret
jno
mov
push
sahf
dec
repz
and
mov
stos
inc
out
xor
iret
jno
data16
addr16
add
adc
fwait
cmp
pusha
popf
cwtl
int3
mov
aam
add
sbb
xchg
icebp
lret
inc
cs
mov
xor
js
aam
jns
lahf
xchg
fwait
pop
loop
add
hlt
adc
adc
mov
xor
mov
pop
mov
repnz
dec
fldt
mov
jg
mov
xchg
call
je
jecxz
shld
jmp
nop
xor
jmp
dec
mov
xorl
stc
xchg
stc
shl
dec
pop
clc
inc
std
les
fdivrl
push
ss
xchg
add
xlat
into
or
ss
push
push
sbb
push
add
outsl
xchg
sub
loopne
aas
and
xchg
in
out
loope
push
push
loop
xor
setge
inc
push
adc
or
sub
add
mov
roll
outsl
xchg
outsb
je
icebp
pop
or
jge
pop
inc
pop
mov
mov
mov
hlt
cmp
inc
jmp
pop
inc
sar
ljmp
and
lret
pushf
enter
aad
fmull
ret
out
xor
xor
jno
sbb
mov
mov
popa
mov
leave
aad
mov
orl
in
gs
cmp
pop
add
hlt
mov
and
pop
ljmp
mov
jp
cmc
aaa
sbb
imul
and
adc
jp
das
inc
movsb
add
cs
push
shll
lahf
imul
repnz
lods
jae
cmp
leave
cmpb
insl
xor
sub
jo
cmp
icebp
insl
imul
inc
jo
push
es
mov
ret
sub
mov
test
push
xchg
and
xor
fnsave
lcall
mov
sbb
fmul
pusha
int3
mov
add
push
jns
inc
push
std
fnsave
xchg
je
fdivl
or
mov
call
inc
cmp
inc
cwtl
pop
outsl
faddl
inc
pop
addr16
jo
lods
iret
push
push
or
mov
and
jge
mov
inc
es
shl
mov
adc
mov
repz
pop
push
fxch
sbb
test
mov
ds
add
push
into
aas
fdivs
popa
push
std
aad
sbb
pop
out
mov
sbb
pop
xchg
lcall
sub
aaa
fadds
in
xor
and
cs
mov
aam
mov
inc
cwtl
mov
or
xor
leave
cld
inc
out
not
xor
mov
cmp
mov
jg
adc
test
loope
cmpsb
lods
lret
stos
in
test
rcl
idivb
in
icebp
xor
xchg
inc
pop
and
fimull
out
cmp
std
jmp
mov
mov
adc
aaa
dec
icebp
sti
sub
out
lods
lcall
stc
push
mov
mov
sbb
movsl
subl
pushf
sub
jg
mov
pop
hlt
jg
xor
in
outsl
into
ds
xlat
lea
daa
add
or
xlat
sbb
add
repz
jo
jecxz
pop
pushf
test
xchg
mov
stc
dec
and
mov
adc
and
test
mov
insb
decl
jmp
push
dec
sti
stc
outsl
inc
insl
adc
sbb
fsubrl
push
adc
adc
jb
push
push
rcrb
test
test
scas
dec
sbb
pusha
cmp
xor
push
sbb
hlt
mov
std
mov
mov
xor
int
pop
xchg
insb
mov
sbb
xor
imul
sbb
dec
push
and
cmp
ljmp
adc
jg
ss
pop
ljmp
inc
dec
nop
or
lods
aam
pop
testl
in
push
xchg
std
rolb
lods
push
sub
adc
and
iret
int3
xor
andl
fnsave
or
xchg
or
mov
js
mov
mov
nop
jns
lds
lods
mov
mov
dec
lcall
popf
divb
pop
bound
jno
sub
das
mov
test
add
lods
stos
jmp
ds
pop
jbe
sahf
ss
or
and
imul
inc
lcall
xchg
stos
int
sub
lock
xchg
pop
add
mov
sub
mov
push
sbb
xchg
js
outsb
jnp
pop
aad
lahf
in
pop
add
cmp
adc
pop
js
gs
mov
in
iret
int
push
fmuls
mov
rcr
ficompl
sarb
xchg
movsl
lahf
jp
xor
jbe
ja
jmp
cwtl
mov
or
loope
call
cmp
clc
push
sbb
adc
sahf
xchg
jmp
mov
mov
fwait
xchg
adc
jmp
sub
repnz
loop
mov
shll
out
or
mov
ja
cmc
xchg
push
insl
inc
pop
dec
push
ret
mov
mov
shl
repz
jns
sub
mov
sbb
cmpsl
xlat
cli
push
mov
or
ljmp
sti
loopne
mov
cmp
jmp
repz
cld
sub
cs
aaa
push
fisubl
add
in
cwtl
pminub
jne
mull
loopne
out
inc
imul
mov
rorl
outsb
mov
jp
and
outsb
inc
dec
pop
scas
jmp
ss
jae
and
push
repz
sub
pusha
jae
cmp
fcmovne
repz
sbb
or
fnsave
inc
rcrb
jbe
pop
mov
ret
adc
js
lds
add
test
test
xlat
stos
sub
inc
stos
mov
in
cmp
xchg
and
in
lock
pop
enter
fs
dec
repnz
loop
push
jl
mov
fcmovnbe
sub
cmp
hlt
lods
mov
repnz
ss
popa
sub
jne
fdivl
hlt
aad
sub
out
test
fisttpl
dec
stc
cmp
push
mov
mov
pop
stos
inc
jnp
mov
add
inc
pop
rclb
ret
mov
xchg
ljmp
mov
xchg
jne
xchg
popl
sbbl
sahf
daa
enter
jnp
in
pop
leave
add
cmp
mul
push
jp
jns
loope
loope
out
inc
adc
push
insl
enter
ljmp
jp
xor
jl
outsb
das
clc
inc
iret
cmc
xorl
pop
push
xor
dec
pushf
fisttpl
fistps
stos
sub
mov
sahf
mov
addr16
idivl
test
int
mov
cmp
pop
sub
pop
push
test
sub
ret
inc
cmpsl
add
fstl
repz
xorl
ret
in
clc
inc
pushf
into
hlt
sub
mov
in
push
mov
mov
inc
sbb
mov
push
adc
mov
cmpsl
xor
imul
leave
aas
or
imul
rolb
mov
lahf
scas
loopne
inc
and
xchg
hlt
repnz
ds
mov
je
jecxz
jmp
out
and
dec
xchg
les
faddl
cli
imul
and
fidivs
xor
push
add
fisubrs
xchg
inc
or
out
test
sub
jmp
push
clc
lods
in
and
inc
xor
inc
dec
pusha
or
mov
js
mov
pop
call
lcall
das
inc
repnz
js
nop
aas
pushf
push
jo
push
mov
test
pop
or
lods
shlb
fwait
push
xchg
int3
xor
cli
nop
test
inc
inc
sbb
add
fldl2e
push
into
mov
push
jb
fisubrl
xchg
cmpsb
xchg
and
pop
fcompl
add
iret
pop
mov
rclb
add
das
clc
xor
sbb
aad
pop
clc
xchg
jg
fisttps
stc
in
loope
repz
xchg
xchg
pusha
mov
xlat
mov
jb
xor
pop
cmp
scas
or
out
idivb
repnz
addr16
ds
rcrb
je
inc
xchg
adc
imul
subb
jnp
add
xchg
push
xchg
pop
mov
or
imulb
cmc
fnstsw
mov
sbb
icebp
push
hlt
add
inc
pop
mov
lods
jmp
and
add
insl
movd
inc
add
jecxz
dec
push
sbb
push
js
js
in
daa
jg
imul
lock
fimuls
or
leave
sahf
cmpb
in
jge
fisubl
fistpl
add
push
cmp
repz
aad
lea
dec
stc
popa
sbb
mov
jns
fadd
mov
jns
lea
or
jne
adc
imul
out
inc
jbe
cmp
mov
cmpsl
xchg
lcall
mov
popf
repnz
or
ljmp
and
dec
pop
jmp
in
sub
or
xor
pop
ljmp
roll
cmc
dec
popa
rolb
pop
mov
out
mov
jbe
lods
loopne
jo
mov
sbb
xor
and
xchg
xor
ficoms
lret
insb
pop
leave
aaa
and
mov
int3
pusha
call
enter
or
test
cmp
fdivrl
movsl
mov
pop
fsub
cwtl
xchg
leave
xor
xchg
insl
mov
movsl
insl
call
out
mov
add
inc
xchg
push
sub
aas
lcall
dec
movsb
mov
adc
sbb
shlb
leave
lock
and
lret
pop
jne
lock
bound
xchg
sub
cwtl
pop
dec
arpl
jecxz
adc
mov
add
insl
jmp
and
lcall
test
fisubrl
mov
cli
pop
mov
jle
lahf
test
daa
nop
add
xchg
cmpsb
loope
push
cwtl
aam
into
add
test
scas
or
and
mov
popf
ret
push
jno
or
pop
add
popf
test
and
xor
sub
adcl
mov
cltd
popa
dec
outsb
ljmp
inc
aad
jmp
stc
push
push
pop
fcmovu
mov
jae
xchg
add
test
mov
popf
idiv
cli
pop
mov
imul
pop
sub
sub
jo
arpl
movsl
movsb
cbtw
adc
and
ds
adc
rol
add
js,pn
pop
rcl
imul
xchg
inc
sbb
ret
and
jno
fmull
jo
scas
out
in
cmp
ljmp
fisubl
cmpsl
jbe
jmp
cmp
cmp
loop
cltd
pop
outsl
jp
add
add
test
sub
nop
or
xchg
pusha
lock
and
jno
popl
push
add
cmp
rcll
or
or
push
outsb
sbb
push
js
cmp
roll
out
mov
testb
icebp
ss
pop
add
ljmp
std
pop
xor
add
cmc
in
js
jo
aaa
mov
inc
or
xlat
mov
pop
sub
push
test
xor
push
or
lods
icebp
lds
mov
fstpt
add
loop
ret
repnz
test
add
imul
jo
pop
ljmp
in
inc
and
inc
pop
jnp
mov
pop
pop
les
fwait
cld
addr16
in
sahf
sti
les
pop
mov
xchg
or
dec
pop
jnp
pop
jne
push
idivb
xchg
bound
pop
cmp
xlat
jl
icebp
sub
outsb
mov
sub
imul
call
sbb
aaa
mov
xor
push
es
repnz
ret
push
lods
xchg
inc
or
or
and
into
adc
xor
ret
inc
mov
pop
add
popf
hlt
js
mov
nop
cmpsb
int3
out
push
add
inc
adc
cmp
pop
cmp
scas
mov
repnz
mov
scas
push
pop
xor
call
cltd
inc
aaa
xchg
xchg
hlt
ja
fisubl
jne
dec
fcomps
in
jnp
movsb
je
inc
testb
dec
test
mov
lahf
pop
mov
add
dec
cmpl
rcll
lods
or
adc
gs
pusha
mov
or
mov
faddl
jb
or
cld
cs
inc
inc
xor
and
aaa
je
enter
jbe
jb
jecxz
jmp
add
jo
dec
movsb
sti
rcr
sbb
call
in
xchg
es
add
lret
shll
out
popl
adc
dec
ss
jp
data16
rolb
aaa
scas
lods
sar
push
fwait
jl
adc
adc
movl
mov
sbbb
cmp
pop
nop
cs
loop
xchg
mov
inc
pop
xor
dec
loop
jns
pop
sub
xchg
and
arpl
dec
add
rcll
in
dec
call
jle
push
mov
loop
ja
xchg
sub
lock
xor
mov
cmc
loop
pop
lods
sbb
data16
jp
in
xor
negl
dec
faddl
in
mov
push
adc
jmp
clc
imul
push
mov
sub
mov
rcll
dec
ljmp
test
xchg
jecxz
cmp
or
out
lcall
ljmp
mov
lods
lock
adc
mov
ds
add
dec
jb
or
les
cmpsl
jg
and
cmp
xor
outsl
fucomp
sub
and
sbbl
or
test
bound
adc
jns
ljmp
inc
shll
add
subb
jns
add
leave
jnp
push
pusha
dec
out
add
and
jecxz
push
xor
xor
fs
or
loop
mov
mov
add
dec
jo
es
push
and
sub
inc
call
movsb
add
cltd
xor
call
test
or
or
xor
xor
dec
icebp
js
jl
xchg
dec
clc
test
out
test
cmp
adc
sbb
cli
cmpsb
pop
lods
sub
mov
add
test
ja
lret
out
orl
lret
icebp
rclb
js
xor
hlt
ret
sbb
mov
mov
lock
sub
adc
call
outsl
inc
fimuls
inc
xchg
mov
or
inc
sar
pop
inc
push
fisubrl
out
sti
cmc
xor
adcb
lret
cmp
dec
in
mov
aad
stos
push
data16
cwtl
cmpsl
xchg
sub
lret
adc
lahf
sbb
mov
push
mov
sbb
add
in
test
pop
sbb
adc
dec
jne
and
jp
or
test
movsb
cmpsl
mov
cmp
mov
mov
shll
scas
ffree
push
mov
mov
inc
pop
ja
in
jecxz
lret
js
lahf
hlt
mov
repz
push
popa
cmp
repnz
ljmp
add
movsb
xchg
dec
mov
inc
cli
adc
imul
std
inc
pop
sbb
xchg
fs
cmp
lahf
mov
xchg
prefetcht0
dec
in
dec
jns
pop
push
xchg
mov
sbb
mov
imul
ffreep
dec
fists
sbb
icebp
lea
cwtl
out
aad
sbb
sahf
push
dec
call
pop
les
scas
pop
das
xor
js
sti
mov
mov
jecxz
sub
rcrb
and
push
push
push
push
repz
out
int3
jb
lods
mov
add
jp
aam
cmp
mov
bound
out
dec
cmp
mov
imul
int
mov
gs
mov
mov
cli
xor
ljmp
in
xlat
jg
pushf
shrd
insb
int3
aaa
in
mov
jg
stc
sub
cmpsl
mov
insb
int3
shl
popf
sbb
pushf
out
cltd
jle
test
aaa
gs
mov
movsb
insl
sbb
pushf
mov
rcrl
test
or
jmp
jl
fcomip
pop
subl
and
repnz
sub
cmpsl
orl
dec
jne
sbb
pop
je
add
inc
cmp
lods
inc
adc
cmp
fcmovb
sbb
jnp
xor
das
popf
test
cltd
test
sbb
ret
popf
pusha
adc
add
sub
cwtl
sub
sub
xor
jle
fisttps
mov
mov
xchg
cmp
mov
hlt
rcrl
mov
xchg
push
and
adc
movsl
lret
mov
lahf
sbb
lock
aas
ret
into
outsl
hlt
int
and
xlat
cwtl
icebp
call
mov
nop
gs
in
out
adc
aam
roll
push
xor
aas
jb
adc
ss
jmp
inc
mov
sbb
scas
outsl
lret
aad
and
subb
leave
xchg
cltd
cmp
fstp
mov
xor
outsb
test
sbb
outsb
mov
lock
xchg
sbb
roll
rol
mov
sub
xor
mov
bound
jnp
or
nop
aas
ljmp
jl
jg
adc
adc
jno
mov
pushf
cltd
mov
push
stos
pop
push
sub
mov
xchg
mov
cmpsb
subl
push
lahf
or
aas
dec
push
imul
aam
sbb
dec
or
mov
mov
or
lret
into
lods
popa
xchg
push
jb
cld
push
jb
xchg
mov
jp
mov
inc
aam
mov
aad
mov
sub
inc
inc
loope
jns
sub
mov
mov
out
jne
aaa
cmpsl
inc
jg
das
in
mov
pop
jno
loop
jp
dec
test
rclb
pop
jecxz
sub
ret
push
sub
inc
mov
addr16
push
jns
mov
xchg
bound
jb
insl
sbb
push
xchg
pop
xchg
xchg
iret
xchg
in
scas
fidivl
ret
addr16
daa
test
jl
sti
adc
inc
test
cmp
pop
sub
mov
loopne
in
jne
fdivl
xor
xchg
adc
mov
jnp
pusha
out
sbb
int3
cmp
xor
sahf
mov
push
sbb
sbb
mov
inc
jmp
in
mov
mov
mov
scas
in
xchg
xchg
push
clc
push
xchg
xor
fbstp
mov
jae
dec
and
or
push
sbb
fisubl
fisttpl
les
xor
mov
outsl
xchg
push
push
ljmp
cmovne
push
ja
jge
mov
mov
push
inc
scas
cmp
jl
bsf
imul
shrl
cmp
imul
push
jae
out
cmpsb
std
or
dec
push
mov
cmp
nop
adc
inc
mov
fsts
cmpsl
je,pt
push
inc
mov
mov
xchg
inc
sbb
mov
push
mov
pop
jle
cmp
lret
cmpb
dec
nop
pop
dec
mov
lcallw
mov
mov
push
cmpsl
lea
add
dec
mov
dec
out
gs
imul
sbb
xchg
scas
rorl
inc
orb
pop
adc
ja
ret
jns
mov
dec
mov
pop
fisubs
and
adc
inc
div
adc
mov
ds
push
and
cmp
mov
jle
test
push
cmp
cs
jmp
incl
imul
popf
pop
cmp
aad
pop
bound
insb
jge
or
mov
pop
loop
popl
inc
cmp
adc
rol
jnp
sub
jno
lods
mov
out
loope
sbb
sub
das
jnp
mov
dec
mov
cwtl
cld
hlt
cltd
dec
push
fisttps
sub
mov
pop
xor
scas
adcl
test
mov
ret
cmpsb
popf
int3
sti
test
xchg
fbstp
cmc
int
jbe
insl
push
mov
xorl
enter
adc
mov
aad
xor
mov
fists
mov
inc
jns
mov
je
xor
cwtl
loope
test
rcrb
subb
daa
into
adc
jns
and
jae
lods
and
test
shr
in
cmpsl
xor
lret
roll
fnsave
push
jg
push
add
jl
pop
inc
fwait
mov
jle
mov
mov
imul
dec
loope
leave
xor
sbb
push
movsb
mov
shlb
test
adc
fwait
aaa
popf
lds
ss
clc
js
sub
loope
mov
sbb
test
adc
pop
fildl
stos
inc
mov
push
fisubs
mov
pop
les
pop
and
std
scas
dec
test
fsts
mov
add
repz
mov
shlb
sahf
dec
imul
into
and
jg
enter
xor
daa
push
mov
je
cld
push
bound
testb
xchg
cmp
roll
push
fxch
push
ds
jl
mov
mov
push
lcallw
jo
sti
fsts
jge
and
cwtl
ret
mov
xchg
push
test
xchg
xadd
mov
cmpsb
push
adc
mov
cmp
pop
nop
push
xchg
xlat
xchg
dec
daa
inc
add
ja
cmpsl
xor
in
push
mov
xor
sahf
push
inc
lock
ljmp
mov
or
xor
xor
xchg
adc
mov
je
rcll
bound
cld
in
cmp
lcall
dec
insl
pop
ret
jae
call
cwtl
jne
cmp
idivl
movsl
outsb
mov
fcompl
or
imul
mov
fisttps
pushf
mov
jecxz
and
int3
iret
repnz
fbstp
mov
mov
adc
mov
stos
subb
xor
dec
movsb
pop
enter
adc
xchg
or
sbb
sti
mov
jo
cmpsl
add
in
repnz
dec
fld
ljmp
scas
jb
daa
call
aaa
fwait
push
jnp
lret
stc
sbb
push
fisttpll
inc
push
and
out
loope
adc
jp
dec
jbe
leave
add
and
push
shrl
mov
mov
nop
imul
enter
fsubrl
fistps
nop
in
sub
daa
cli
dec
sbb
push
or
adc
movsl
jnp
rcrb
roll
xchg
cltd
aad
outsb
shlb
jne
and
aad
int
sub
ficompl
push
loopne
mov
add
movsb
sbb
fwait
aaa
sbb
cli
scas
bnd
popw
cmpsl
and
idivl
lcall
push
ss
mov
dec
jecxz
aas
adc
jg
mov
sub
int3
inc
pop
jp
jle
jp
inc
movsl
push
clc
xchg
push
add
ds
xlat
ja
pop
outsl
push
loope
add
push
mov
fsubl
inc
cmc
or
fists
fwait
test
mov
cmp
add
or
pop
into
xor
rcll
test
xchg
pop
sub
ljmp
inc
les
adc
es
inc
lods
in
dec
imul
popf
mov
out
jo
in
push
push
jecxz
push
bts
push
and
or
aas
je
pop
cmpsl
aaa
cmpsb
sahf
sbb
icebp
sbb
cmp
les
sbb
orl
push
movsb
aas
jno
call
popf
sbb
and
or
ljmp
xchg
jle
inc
mull
test
lahf
push
mov
pop
xrelease
xchg
hlt
mov
sub
sbb
cmp
jnp
in
adc
jg
lods
data16
push
insl
jecxz
lds
in
cld
mov
inc
inc
les
lods
dec
scas
aad
pop
jae
call
push
out
mov
gs
mov
mov
test
lahf
mov
js
aas
pop
mov
divl
mov
pmulhuw
sub
movsl
out
cld
cmp
out
pop
lahf
or
jo
aad
push
or
xchg
clc
into
fldl
lods
fcmovnbe
imul
or
out
imul
rcl
je
std
cmp
in
sbb
scas
dec
lahf
in
in
sbb
add
jp
or
add
jo
mov
gs
push
cmp
inc
lods
call
outsl
mov
mov
mov
data16
dec
pop
cmp
insl
xchg
inc
pop
in
jns
in
cwtl
addr16
movsb
jno
inc
bound
icebp
push
shll
scas
enter
mov
push
test
lods
insl
adc
jbe
out
and
or
mov
jmp
lods
sub
outsl
ja
push
dec
bnd
mov
stos
jmp
pop
mov
out
jg
jle
lods
cltd
xor
gs
dec
lret
arpl
mov
insb
imul
and
fldl
int3
addr16
jl
and
cmp
movsb
xchg
xor
cs
les
std
test
sahf
and
test
push
or
mov
or
and
out
mov
jb
popa
cltd
fsubrs
test
push
cltd
test
or
sbb
cmpsl
je
cmp
push
push
pushf
xor
push
std
and
push
imul
popa
xchg
adc
inc
je
sub
xchg
lcall
sbb
mov
es
dec
jmp
pop
in
sbb
call
adc
lahf
aam
xchg
xchg
jno
enter
dec
test
mov
push
inc
dec
popf
negb
jl
neg
es
lods
cmp
out
dec
cmp
inc
jae
test
sub
mov
dec
xor
clc
sbb
shl
jbe
pop
xchg
ss
mov
les
or
fs
daa
popf
sbb
and
into
adc
pop
mov
stos
mov
inc
sbb
xor
adc
loope
imul
mov
flds
fistl
pop
cld
or
insl
stos
inc
xchg
dec
xchg
fsubs
es
inc
aad
cmc
dec
pop
mov
xchg
jbe
dec
fs
je
into
mov
sbb
sub
cmp
and
sbb
push
inc
nop
out
inc
sub
xchg
xor
stos
mov
mov
mov
pop
dec
cltd
and
outsb
adc
and
mov
hlt
in
or
sub
stos
adc
cmpsl
xchg
out
inc
mov
xor
cmp
mov
loop
scas
hlt
push
lret
out
mov
repz
dec
mov
or
sub
xchg
mov
cmpsl
inc
stos
shlb
ret
jb
mull
or
jbe
std
lea
cmpsl
in
cmp
jnp
loopne
xchg
push
add
inc
enter
je
xchg
test
ss
leave
aam
push
mov
mov
cmp
callw
jne
repnz
loop
gs
in
jl
or
jp
loop
je
repz
xor
js
test
add
sbb
into
pop
xchg
popf
mov
mov
std
mov
push
xor
add
push
mov
add
popa
test
lret
arpl
push
loope
loope
sub
imul
cmp
push
pop
pop
shlb
out
mov
popa
sbb
loopne
jmp
popa
sub
pop
add
mov
fistpl
cmp
xlat
ficomps
mov
lahf
fs
out
cmp
adc
pop
aaa
sub
lds
popf
ljmp
sti
cmp
outsb
dec
sub
cld
orb
imul
hlt
or
fwait
cmc
in
mov
outsb
in
push
jbe
pop
jg
jnp
je
sbb
movzbl
or
into
push
negb
out
inc
sub
adc
bound
mov
dec
call
rorl
or
mov
or
popl
push
jge
cmp
cs
out
and
sbb
lret
sub
scas
add
jmp
ret
jae
stc
rol
and
dec
add
out
out
sarb
dec
mov
pushf
adc
in
clc
pop
and
jmp
cwtl
jb
pop
out
outsl
mov
pop
dec
or
inc
pop
ret
jb
dec
ss
cmp
xor
xor
jp
fisubs
adc
int3
xor
inc
jl
test
pushf
xchg
aam
inc
je
jmp
lret
nop
jecxz
sbb
mov
mov
fimull
cmpsl
adc
outsb
xchg
stc
jmp
aas
or
sbb
cwtl
out
movsl
imul
nop
mov
fs
mov
xor
fsubrs
xchg
mov
xor
sub
sub
shr
sub
rolb
xchg
das
xor
xor
test
adc
andps
xor
mov
test
je
jecxz
cmp
add
sbb
jmp
mul
mov
dec
ss
fidivs
clc
test
lock
push
loope
aaa
mov
bswap
cwtl
iret
roll
stc
jae
adc
out
movsb
xchg
mov
mov
sub
dec
aas
or
adc
lahf
pop
loopne
cli
ror
or
push
dec
add
cmc
mov
push
mov
xchg
mov
mov
sub
sahf
loopne
arpl
lcall
push
or
inc
mov
or
or
pushf
pop
xchg
cmp
or
repz
rorb
jge
or
jns
jl
mov
test
pop
mov
pusha
or
test
jmp
jmp
pop
mov
mov
add
jns
lods
xchg
dec
daa
adc
in
push
cmp
jp
outsb
xchg
popa
rol
dec
adc
dec
shrl
sub
fidivrl
in
jae
cmp
jle
inc
fcmovu
mov
popa
sbb
xor
lock
jns
cmp
fcoml
pop
movsl
cli
inc
sub
inc
xchg
xchg
call
push
gs
mov
cmp
sub
inc
les
repnz
repz
sbb
std
mov
out
outsb
lea
jns
push
fsub
dec
outsb
adc
aas
fiaddl
push
adc
mov
push
insl
mov
scas
sbbl
icebp
lds
xchg
les
pop
and
dec
insl
pop
adc
push
jae
adc
push
pushf
mov
push
or
cmp
lret
push
push
ss
and
jno
fwait
test
sbb
pop
push
mov
mov
scas
sub
ret
mov
pop
mov
pop
xchg
mov
cltd
mov
ret
les
mov
or
cmp
jecxz
sbb
ds
jmp
xchg
and
movsl
sub
rclb
lret
stc
lods
dec
outsl
cmc
cltd
dec
inc
cmpsb
in
sbb
xor
and
pop
adc
in
cmpsb
mov
mov
out
iret
out
gs
xchg
pop
ret
punpcklbw
sub
cmpsb
into
or
sbb
into
aaa
loop
aad
sub
stc
imull
lret
pop
sub
js
addb
jp
loop
repz
pusha
cmp
jbe
add
or
scas
xchg
add
jne
pop
jge
bound
aas
data16
mov
jbe
pop
dec
xlat
mov
mov
jb
arpl
sbbb
jmp
int
aad
arpl
lds
lods
inc
push
xor
mov
adc
jb
in
push
mov
out
addl
cmp
mov
pop
jl
jge
pop
pushf
xchg
xor
sbb
add
arpl
sbb
hlt
pop
xor
mov
mov
icebp
and
jne
push
in
fstpl
imul
mov
and
cmpsb
or
stc
sub
xchg
aas
or
xchg
pop
jnp
into
push
xor
aaa
call
cmp
aam
in
pop
mov
sub
xlat
shr
out
stc
adc
fists
add
inc
dec
call
sub
lcall
ljmp
and
stc
lods
push
aaa
lcall
sub
jg
mov
addr16
test
sub
lret
div
fiaddl
xor
or
add
push
jns
cmpsb
jp
pop
adc
xchg
bound
pop
and
out
jbe
xlat
pop
and
push
imul
dec
popf
int3
xor
inc
cmp
movsl
stos
push
xor
insb
or
mov
mov
lods
mov
push
jmp
lcall
sub
in
or
push
pusha
sbb
mov
jae
pop
out
sub
test
dec
out
test
int
loopne
push
fs
dec
cmp
push
pushf
mov
mov
shll
shr
lret
jle
test
or
call
out
mov
jecxz
mov
int3
cs
test
adc
movsl
ret
push
add
xor
testb
xchg
js
sbb
push
cs
sbb
sarb
mov
jb
bound
jmp
je
fnstenv
mov
negb
lea
mov
lret
rolb
xchg
dec
add
les
loop
std
and
xchg
ljmp
imul
scas
jne
out
xchg
and
inc
fisttpll
mov
sub
xor
pop
fldcw
pop
pushf
cltd
cwtl
xchg
cs
ljmp
xor
pop
cs
repz
and
sbbb
pop
xchg
es
mov
lea
xor
xchg
arpl
dec
cld
xchg
in
mov
mov
mov
test
xor
xchg
or
dec
popf
mov
or
mov
mov
pop
test
cmp
sbb
test
fsubrs
repz
jno
add
xchg
into
dec
test
jl
and
jae
lret
sbb
lcall
push
shrb
popf
and
bound
push
cmp
cmp
inc
mov
in
mov
out
jae
xor
and
lea
dec
jne
sbb
pop
aam
pop
outsl
lods
add
out
sub
mov
repz
stos
add
pop
imul
lods
popl
jp
pop
jmp
inc
mov
lahf
out
pop
aaa
push
rolb
setnp
push
mov
ljmp
xchg
test
sbb
stos
fimull
shll
sbb
mov
sbb
push
push
popf
sahf
pusha
insb
pop
cltd
outsb
popf
xchg
jp
outsl
push
push
mov
sbb
cmp
or
popf
push
and
xchg
mov
mov
sbbl
mov
push
sti
imul
mov
ds
fadds
xor
jmp
movsl
lret
sub
addb
and
pop
cmpsl
js
loop
in
inc
xchg
test
xlat
fistpl
iret
out
popf
repnz
dec
pop
loop
inc
xor
mov
pop
test
dec
outsl
fsubr
ds
nop
cmp
xchg
pop
mov
push
push
pop
imul
cmc
adc
mov
cmpsl
and
xchg
dec
shll
add
sbb
es
sub
imul
sub
xor
popa
xor
push
aam
outsl
cmpb
std
nop
popa
fcomi
sub
lock
jmp
and
sti
jnp
pop
je
outsl
dec
je
stc
jns
cmp
popa
mov
shll
mov
push
dec
xorl
cmp
push
ret
movsl
test
div
out
int3
sub
rorl
lods
mov
lea
aad
mov
jb
mov
pop
out
popa
cmp
inc
xchg
xchg
pop
mov
mov
inc
push
movsb
or
fwait
ljmp
test
ficoml
and
bound
jnp
insl
call
imul
addr16
in
mov
and
inc
popa
xlat
dec
movsl
push
stos
or
fnstcw
push
das
stos
xor
fsts
jns
jp
sbb
test
jns
sub
inc
out
shlb
cmc
pushf
fistps
mov
fnsave
cmpsl
cld
mul
mov
aaa
xchg
fbstp
jb
add
inc
inc
adcl
xchg
add
scas
pop
sbb
and
ss
lds
or
test
sbb
out
adc
pushw
adc
or
inc
fcomip
mov
ja
testl
xchg
fstpl
or
aaa
jl
ret
in
ljmp
clc
test
les
mov
sub
pop
lods
shl
inc
add
jo
jle
pushf
in
or
jp
xor
lods
pop
test
dec
divl
imul
add
inc
jp
rcl
into
addr16
mov
xlat
and
lea
cmp
daa
inc
in
mov
dec
fsubr
sarl
gs
popa
adc
ja
inc
sbb
out
add
jl
add
je
jo
lds
test
rorl
jge
nop
pop
push
mov
iret
insl
out
mov
mov
push
enter
int
lcall
xor
sahf
inc
and
add
pop
or
sbb
pop
cmp
test
adc
icebp
cmc
int3
sbb
mov
cmp
fsubl
or
and
aad
xor
mov
rol
push
jl
sub
sub
xor
jecxz
mov
push
mov
div
pop
pop
mov
pop
dec
cmp
add
clc
bound
fisubrs
sbb
mov
jnp
cmc
pop
xchg
and
add
fdivr
cmp
aas
push
out
jecxz
cmp
or
adc
xchg
inc
push
outsl
mov
xor
out
sub
stos
or
aam
xor
cmpl
push
xchg
inc
sub
test
pushf
gs
insb
jns
ret
push
and
add
mov
std
inc
push
xor
mov
dec
aas
test
sbbb
fnstenv
mov
imul
mov
fldt
stos
mov
mov
adc
or
pop
dec
push
xchg
jne
add
mov
in
stc
out
xchg
ss
xor
in
in
mov
iret
scas
js
cmpsl
cmp
idiv
jl
pop
pop
and
jbe
dec
and
sub
mov
lock
fistpll
lds
mov
push
jno
lahf
push
jge
dec
inc
inc
add
xor
adc
scas
sbb
int3
mov
sbb
cmp
popf
cmp
add
adc
inc
push
push
mov
or
ljmp
mov
mov
sbb
xchg
mov
cmpb
push
push
cmp
xorb
xchg
jb
xchg
cli
out
mov
dec
insl
pop
add
scas
pushf
or
pop
test
and
mov
xchg
add
cmp
add
pop
sbb
pop
test
inc
daa
push
in
les
cltd
idiv
mov
leave
lcall
push
push
or
iret
mov
push
fisubrl
outsl
jo
jae
pop
jle
push
int
test
push
xchg
popl
cld
lret
repnz
sbb
rcl
inc
cmp
cmc
push
iret
jle
mov
pop
fs
xor
in
in
rcl
inc
outsb
sbb
mov
call
adc
in
xchg
pop
das
and
jge
fistpll
jbe
mov
fsubrs
mov
xchg
subb
dec
adc
pop
jmp
jge
xchg
fs
xchg
xor
ja
rorb
es
pushf
add
push
dec
jae
push
xor
and
push
stc
or
jecxz
jb
and
mov
fdivs
ljmp
mov
ljmp
cmpb
xchg
sub
unpckhps
sbb
ret
cld
outsb
or
or
dec
add
mov
clc
xchg
sub
sub
cmp
leave
loopne
popf
repnz
lret
jnp
stos
fiaddl
mov
mov
add
into
in
xchg
pop
sub
lock
sbb
into
imul
in
movsl
mov
pop
jle
into
shl
fstpl
sub
and
xchg
mov
xor
movsb
jmp
add
sbb
push
jle
mov
enter
popa
cmp
mov
sub
lods
mov
inc
push
jb
inc
enter
daa
xchg
push
pop
or
xor
pop
sub
jge
mov
adc
mov
or
test
outsb
adc
imul
popf
fidivs
ss
clc
sbbb
mov
push
in
lret
out
fmul
xchg
pop
inc
dec
pop
xor
orl
daa
dec
shr
push
mov
push
mov
jae
xchg
sbb
outsb
xor
cmpsl
cmpsb
mov
into
dec
and
ja
or
stos
ja
lea
inc
insb
and
sahf
jb
adc
xorl
lods
je
push
inc
lds
in
inc
and
aam
shlb
jmp
jge
dec
fstl
dec
pushf
aad
add
lods
flds
sti
mov
adc
imul
jo
lret
jo
imul
sbbb
add
mov
and
cld
les
pusha
test
pop
push
xor
int
jne
jo
iret
xchg
out
dec
ljmp
mov
push
cmc
lahf
push
and
aaa
loop
clc
and
inc
xchg
and
test
or
jne
push
in
xchg
movsb
in
aaa
inc
insl
faddp
call
sarl
fcmovb
and
out
repz
jmp
mov
sub
cmp
lahf
sbb
pop
icebp
ficoml
mov
int
test
mov
iret
fwait
pop
inc
in
jae
jne
arpl
push
stos
movsb
pop
and
sahf
imul
lret
cmovbe
fmuls
xchg
fsts
or
inc
test
xchg
daa
iret
sti
lea
cmp
shl
aad
or
les
or
inc
test
bnd
mov
les
pushf
std
push
std
pop
in
bswap
loop
jae
sbb
and
sub
into
mov
orb
xchg
inc
adcb
jl
sub
sub
push
push
add
repnz
sub
cmpsb
scas
pop
lods
jmp
pushf
pop
cltd
fsubrs
dec
push
aad
ficoms
insb
pop
or
popa
nop
xlat
in
ss
aam
push
movsl
cmpsl
jmp
xchg
iret
int3
mov
mov
insl
leave
insl
mov
xor
jb
mov
fcoms
push
fstps
mov
xor
out
ret
insl
rorb
lock
xchg
mov
aad
mov
mov
icebp
push
std
enter
int3
dec
std
test
sbb
adc
in
sarb
xchg
in
iret
push
or
lret
imulb
int
jmp
and
mov
pop
stc
mov
je
adc
inc
hlt
mov
adc
roll
or
ficomps
cmp
fnstcw
scas
sub
scas
pusha
cmpsb
cmp
scas
je
xchg
adc
sbb
fwait
add
sub
cmp
xor
imul
imul
cmp
cmp
sarb
xchg
subb
pop
ret
jnp,pn
pusha
pushf
cwtl
mov
fcoml
sub
lods
leave
mov
xor
and
cmp
push
lret
iret
adc
pop
cld
xor
dec
clc
pop
mov
scas
sbb
movsb
push
sbb
or
or
or
cmp
push
test
clc
inc
mov
int3
push
cmp
repz
fsubl
mov
iret
add
xor
jae
lods
mov
cmp
and
cmpsl
push
cli
test
dec
fsubr
mov
adcb
outsb
mov
into
fwait
nop
pop
sarl
pop
adc
mov
pop
rorb
lret
or
jge
cmp
jp
xchg
aad
adc
negb
rolb
lcall
sub
mov
mov
cmp
or
nop
cmp
outsb
ss
xlat
testl
shrb
sub
xchg
es
rcll
xchg
mov
rorb
cmp
inc
and
ja
inc
push
xchg
add
adc
mov
orb
insl
filds
pop
enter
clc
call
icebp
or
ret
pop
push
mov
sub
int3
sbbl
in
nop
je
cli
popa
les
jno
fwait
jmp
cmp
push
jg
xlat
pop
lret
push
pop
pop
mov
inc
dec
xor
jno
and
shrl
add
push
sbbb
jle
xor
dec
cmp
sbb
ret
xchg
xchg
dec
enter
imul
test
lret
mov
mov
inc
cmpsl
fadd
outsl
stos
in
push
dec
std
mov
loopne
inc
aaa
ds
pop
dec
mov
dec
cmovge
xchg
fs
lods
test
sbb
lods
mov
fsts
xchg
outsb
push
jmp
subb
xor
shrb
pusha
sbb
icebp
cmp
insl
pop
orb
add
dec
mov
rorl
add
mov
xchg
add
aam
lods
ud0
shl
test
mov
jbe
shll
mov
jl
fld
je
mov
sbbb
mov
fisubl
scas
push
js
push
add
in
push
enter
cli
call
icebp
out
in
cli
pop
lds
xchg
fcomip
pushf
outsb
ljmp
movsl
jg
loope
aas
rcrl
jl
mov
xor
ja
daa
out
mov
xchg
ret
jno,pt
addr16
pop
or
cmpl
sbb
cltd
mov
std
jmp
sub
roll
adc
arpl
bound
mov
out
mov
jns
add
pop
push
inc
mov
insl
adc
loope
jb
cs
sub
mov
xchg
lahf
push
lock
lea
adc
mov
and
rcrb
sub
ds
stc
inc
ljmp
cld
mov
mov
xchg
andb
out
or
mov
xor
mov
ds
sti
ss
ljmp
ret
mov
iret
or
sbb
inc
out
adc
jge
mov
pushf
jecxz
and
mov
lds
pop
aam
push
imul
movsb
mov
pop
frstor
add
dec
dec
sub
gs
fxch
sub
or
dec
aad
nop
outsb
sbb
cwtd
insb
mov
mov
cld
subb
sub
xlat
dec
mov
test
mov
subl
scas
and
loop
mov
stc
cwtl
or
mov
je
mov
cs
ss
std
outsb
insl
sub
and
ss
push
sar
addl
dec
fwait
les
je
sub
dec
dec
idivl
lock
and
lret
outsl
xlat
je
aas
adc
lds
orb
faddl
repnz
sbb
mov
std
ret
cmp
inc
pop
dec
in
push
sbb
lcall
inc
hlt
iret
xchg
movsl
push
push
and
mov
inc
das
adc
data16
inc
jmp
push
cmp
cmp
test
jo
sub
add
jg
cmp
aaa
shrb
and
dec
lahf
mov
fidivrl
arpl
or
sub
push
sub
arpl
xchg
adc
repz
sbb
out
xchg
inc
pop
mov
scas
pushl
dec
pop
and
jg
add
mov
pop
lods
sbb
dec
mov
inc
stc
test
push
xchg
rcrb
xor
insb
cmc
aaa
sarb
loopne
stos
jne
mov
leave
or
pop
addr16
cmp
clc
leave
xor
push
pop
adc
push
loope
or
pushl
popf
out
movsb
push
mov
jle
cmp
pop
sub
idiv
pop
xchg
xchg
stc
jae
add
jno
ret
jecxz
movsl
xchg
jno
outsl
cld
dec
lock
xor
in
xor
loope
or
dec
xor
in
cwtl
into
adc
push
shrl
dec
jbe
test
or
inc
fcomps
add
sub
idivl
mov
dec
addr16
fcomp
inc
or
dec
hlt
fwait
cmpl
enter
or
jne
mov
jmp
pusha
push
mov
sub
mov
mov
insb
or
push
pop
cltd
arpl
and
pop
hlt
pop
or
rorl
addr16
subb
jl
pushf
jl
jmp
jmp
mov
sbb
mov
mov
lock
das
cwtl
xorb
popa
mov
lret
out
sub
xor
cmpsb
out
fcmovnbe
imul
mov
mov
aas
mov
shrl
mov
mov
fdivrs
dec
repz
cltd
cltd
shll
mov
sarw
jl
aas
lods
repnz
dec
sub
stc
pop
pusha
pop
push
in
mov
scas
adc
and
jno
mov
jmp
dec
sub
dec
loopne
mov
adc
out
sarb
add
ficoml
mov
mov
mov
call
pop
imul
mov
das
lret
xlat
or
push
int3
call
and
dec
iret
sbb
push
and
lret
pop
xor
and
add
push
push
scas
dec
decb
push
decb
sahf
xor
and
mov
push
xchg
lret
push
lock
sub
dec
call
cmp
and
and
xchg
push
ret
js
mov
sbb
std
popa
mov
or
mov
add
fidivrl
jg
inc
lcall
sbb
stc
lods
adcb
pop
jp
mov
jbe
fcompl
nopl
mov
out
pop
jno
loope
jo
cmpsl
push
bound
add
fistl
adc
and
jge
adc
push
xlat
pop
jle
mov
out
add
mov
xchg
jmp
bound
sti
cld
push
sbb
clc
mov
sub
nop
adcb
dec
adc
sub
out
jle
xlat
mov
inc
scas
shrb
push
cmp
mov
push
lea
dec
sarb
xchg
sbb
sub
push
int3
sbb
inc
sbb
push
js
mov
sub
daa
sub
fsubrs
std
jle
rclb
sarb
icebp
test
fucom
inc
popf
lahf
pop
jecxz
fisubrl
dec
pop
ja
and
xchg
scas
lods
and
pop
adc
out
fmul
out
mov
push
sbb
outsl
push
lods
hlt
pop
push
cmp
push
ret
std
sub
mov
jns
xorb
mov
test
int3
lods
cmpsb
adc
add
or
mov
xchg
mov
test
jp
mov
outsl
insl
push
daa
xor
xchg
into
bound
popa
es
jge
stc
pop
push
gs
sub
push
lods
movsl
push
mov
jge
popf
push
test
pusha
mov
mov
mov
testl
add
aam
mov
mov
inc
pop
aam
jl
adc
pushf
insl
inc
rolb
inc
add
incb
cwtl
add
push
fwait
iret
gs
stos
das
xchg
push
lock
inc
ds
cmc
jne
icebp
sbb
jo
xor
cmp
lret
adc
cmp
mov
adc
sbb
jecxz
sti
sbb
icebp
push
fiadds
sub
int3
stos
xchg
fists
je
jo
sub
dec
inc
cltd
inc
ja
and
ljmp
inc
loopne
jl
mov
imul
or
movsb
sahf
mov
adc
pop
jnp
jb
sub
ljmp
pushf
mov
mov
sub
xor
adc
fldt
fcoms
pop
pop
outsl
ret
xchg
push
ret
pop
fcompl
mov
xchg
xchg
mov
test
sub
ss
gs
in
push
orb
mov
sbb
gs
jle
pop
sub
push
enter
gs
xlat
jp
mov
dec
test
or
cwtl
jnp
sbb
movsb
pop
call
cltd
les
lock
test
or
mov
incb
repnz
jbe
outsb
push
xchg
pop
cmc
cltd
push
pop
into
xchg
leave
push
sub
jae
mov
jns
inc
or
dec
imul
stc
out
aam
cmp
outsb
or
xchg
decl
mov
test
xchg
cld
mov
stos
push
jno
cs
test
lds
or
mov
push
mov
enter
and
test
lock
imul
rclb
cmp
cmp
xor
stc
fldl
je
push
jp
icebp
cmp
jno
jp
and
int
xor
dec
add
mov
sarb
loopne
jle
and
subb
jno
mov
sbb
adc
fistl
nop
push
mov
decl
sbb
pop
rep
push
sub
jae
js
mov
mov
loop
insl
lods
xchg
sub
rolb
jne
inc
push
cmpsb
cmp
stos
aas
fmull
or
adc
and
jns
dec
xor
cmp
xchg
and
jnp
es
insb
jae
dec
mov
insb
adcl
or
sub
out
mov
and
sbbb
mov
gs
dec
jl
dec
or
in
das
push
std
imull
insb
dec
sub
jle
icebp
scas
test
pop
icebp
add
jg
push
jle
push
lret
jo
pusha
jae
out
mov
pop
jg
and
ret
mov
or
sahf
mov
sub
pop
jl
mov
ret
ja
mov
jl
or
dec
das
jb
or
mov
mov
fs
loopne
cmp
aas
inc
xchg
sti
lahf
lea
iret
and
mov
sub
or
out
dec
xchg
imull
aad
in
push
add
idiv
mov
cmc
test
arpl
mov
cmp
lods
sub
ljmp
stc
jnp
and
mov
xor
out
popf
aad
lods
push
es
mov
test
inc
mov
lock
adc
int
adc
ret
pop
inc
out
test
js
stos
out
pop
loopne
lret
lret
enter
stos
stc
dec
and
jnp
xchg
gs
ljmp
jb
data16
cmp
or
dec
push
lret
ljmp
out
addb
pop
jnp
imul
dec
adc
popa
adc
imul
pop
jecxz
push
pop
negb
out
out
stc
std
mov
and
out
cmpsb
lcall
jns
push
mov
jmp
leave
adc
fwait
nop
test
mov
xchg
lret
subb
xor
cmp
mov
rcrb
scas
ret
adc
xlat
in
xchg
lret
pavgb
nop
or
mov
in
mov
sub
ficompl
fs
bound
xchg
into
adc
cwtl
pop
rsm
jo
dec
std
xchg
aam
mov
mov
and
pop
sahf
insl
adc
sub
loopne
out
jp
mov
add
cmp
push
push
stos
outsb
lret
jmp
xchg
dec
and
fadds
cwtl
repnz
movl
dec
test
dec
movsb
loopne
out
or
or
out
push
aaa
fcomi
fs
inc
inc
sub
mov
test
adc
in
xor
inc
push
test
aas
in
test
icebp
movsb
cmp
push
aaa
inc
in
mov
cltd
dec
test
or
jo
or
inc
push
ret
mov
push
xchg
test
insb
add
kmovd
jp
std
mov
loopne
inc
cmp
lcall
in
inc
jg
dec
cmp
push
and
mulb
outsl
dec
and
jnp
repnz
jmp
mov
xlat
inc
subl
aas
ja
sbb
negl
lret
mov
push
clc
sbb
fisubrl
cld
inc
fstps
pushf
clc
enter
or
mov
hlt
sbb
lcall
cld
push
push
loop
cli
arpl
rclb
pop
sub
sub
adc
adc
cmpsl
mov
dec
popa
push
dec
das
cmp
jg
inc
add
sub
les
cld
xchg
test
ja
movsl
arpl
cli
pusha
xchg
loop
ja,pt
rclb
xor
inc
push
loope
sti
cli
mov
and
fneni(8087
pusha
pop
mov
mov
push
ret
sbb
std
pop
cld
fmul
arpl
mov
xor
mov
push
gs
cmpsb
push
cmp
lds
popf
jns
cmc
adc
xchg
stos
ss
inc
cmp
enter
std
cmp
mov
push
js
cmp
lret
insl
outsb
pop
leave
test
iret
mov
xor
repz
fisubrl
inc
jmp
push
jle
mov
pop
mov
pop
dec
imul
rcrl
mov
xchg
push
mov
inc
push
push
shll
mov
adc
je
stc
mov
mov
xchg
fldlg2
loopne
push
es
fs
or
adc
aad
mov
int3
add
cmp
fnstenv
int3
pop
cwtl
shll
sbb
mov
fldenv
mov
rol
jecxz
fnstcw
push
dec
stos
sub
jae
mov
push
iret
inc
xlat
in
inc
jb
sti
scas
xchg
cmp
iret
mov
mov
fs
push
iret
ret
or
test
push
xchg
push
cld
cmc
imul
pushf
push
in
mov
jmp
pop
outsb
cmc
mov
ret
je
or
arpl
fstl
addl
xchg
jp
cmpsl
mov
outsb
cmp
test
xchg
xchg
bound
loope
not
cmp
mov
out
std
mov
push
sbb
cmp
mov
scas
adc
ret
mov
lahf
xor
ja
subl
push
fs
insb
lods
xchg
ss
dec
daa
loop
push
faddp
movsb
adc
js
rolb
inc
cltd
xchg
repz
jp
cmp
dec
lock
repz
loopne
es
jmp
mov
out
aad
pusha
shll
out
sub
push
sbb
mov
out
pop
push
mov
outsl
push
adc
dec
sbb
cwtl
shll
jo
push
push
enter
sub
int
or
mov
mov
dec
cwtl
aam
and
popf
adc
mov
mov
pop
inc
mov
add
jle
ljmp
or
jb
aam
adc
mov
mov
icebp
mov
pushf
and
jle
inc
adc
pop
cltd
ja
push
xor
dec
inc
dec
pop
es
loope
mov
call
sahf
daa
xor
pop
sub
inc
and
mov
or
cmpsb
pop
lds
test
sbb
lock
stc
popa
dec
dec
inc
mov
test
add
cmpsb
mov
lcall
sbb
addl
mov
out
out
in
test
cmp
pop
xchg
repz
push
outsb
xor
jnp
lret
push
dec
iret
mov
lods
jmp
push
outsl
cmpsb
ja
inc
sub
sub
xchg
adc
add
mov
out
sti
push
adc
inc
and
mov
jb
dec
dec
add
addr16
lea
push
pop
pop
cwtl
in
fidivrs
cmp
mov
add
call
outsl
mov
repnz
inc
gs
push
mov
call
mov
push
mov
inc
in
jle
add
mov
cltd
xor
or
adc
push
test
in
xor
sub
sub
lcall
dec
std
mov
scas
out
fldt
jmp
lods
loopne
push
out
fs
loop
push
inc
mov
mov
out
repnz
sub
add
sub
cmp
adc
movsb
sub
pushf
sbb
jae,pt
push
xchg
inc
ss
or
rorb
push
dec
addr16
xchg
sahf
sti
repnz
sub
push
int3
inc
xchg
call
shl
and
loope
ja
call
pop
adc
jecxz
xchg
and
push
push
inc
das
lahf
aad
ret
jg
xor
or
outsb
sbb
add
mov
xchg
dec
cmpl
shll
mov
into
nop
in
lret
jg
testl
int3
loopne
push
jmp
hlt
pushf
sub
mov
ret
pusha
cmc
aas
adc
jns
push
add
out
jmp
ljmp
sub
mov
or
push
add
cld
not
add
push
mov
movsl
jo
push
repnz
andl
dec
jo
mov
and
adcl
lods
sti
cmp
pop
addr16
jle
pop
or
sti
xor
mov
sbb
sub
inc
sbb
imull
lods
lods
mov
add
fstp
pop
mov
jecxz
out
and
inc
sub
push
outsb
mov
lcall
jp
imul
dec
rcrb
dec
cmpsb
xor
lret
xlat
sub
and
testb
sub
pop
cmpsb
push
or
leave
cld
mov
fdivs
sbb
std
insb
xchg
cmp
xlat
sub
jl
pop
push
push
add
mov
enter
pop
jmp
dec
ljmp
mov
aas
lods
dec
fists
sub
mov
rolb
push
xchg
ret
pushf
js
hlt
cltd
int
cs
iret
je
mov
cmp
sbb
adc
pusha
in
cmp
stc
enter
stos
xchg
popf
sarb
jo
pusha
movsb
jge
loop
mov
cwtl
jnp
test
lea
in
stos
stc
in
xchg
lods
cs
xchg
ljmp
adc
fprem1
push
mov
mov
mov
ja
pop
pop
inc
mov
shl
xchg
enter
nop
cmc
xchg
mov
mov
inc
icebp
bnd
fimull
leave
sbb
add
popf
mov
xor
mov
mov
sub
repnz
enter
mov
sub
pop
push
ror
mov
add
int
push
cmpsb
out
push
xor
xchg
test
stc
mov
sahf
ret
dec
pop
pop
pusha
inc
mov
xchg
inc
sbb
jno
jge
movsl
xlat
sub
push
push
pop
lret
dec
dec
rorb
jle
push
xchg
pop
sub
addl
movsl
dec
mov
scas
pop
fstpl
pop
push
mov
ljmp
jno
ja
shrl
mov
xchg
pop
pop
lret
sarl
mov
rcrl
jb
in
cmp
xor
insb
push
lods
and
rclb
dec
pop
add
in
push
rolb
and
daa
test
pusha
push
mov
ja
cmp
push
insl
and
or
cmp
and
mov
popf
sub
in
bound
lds
fadd
add
inc
mov
in
lret
loope
xchg
leave
push
rep
outsl
jl
insb
mov
mov
imul
cmp
jecxz
pop
adc
jo
jno
rorb
xchg
je
dec
ljmp
push
mov
ret
mov
push
pusha
cmpsl
aaa
in
xlat
das
dec
in
test
in
xchg
addr16
loop
mov
ljmp
xchg
fsubl
jmp
push
mov
jo
fnsave
outsl
movsb
je
hlt
test
dec
add
lods
in
sbb
xchg
icebp
aad
mov
sub
or
sub
scas
mov
and
fisttpll
and
iret
clc
shl
loope
mov
into
fistpll
mov
jle
mov
pop
arpl
mov
dec
sbb
lds
jl
or
jmp
shll
push
mov
dec
cli
jbe
add
adc
dec
lret
fbstp
push
repnz
movsl
mov
sub
gs
lahf
fisubs
cmp
mov
stos
adc
mov
mov
outsb
pop
sub
aas
mov
jl
ja
mov
lock
jne
add
out
sub
adc
aam
mov
sub
jnp
dec
fldenv
imul
mov
cmp
sub
lea
xchg
dec
pop
adc
mov
mul
lock
mov
sub
or
lods
pop
add
in
mov
data16
mov
pop
repnz
bound
out
mov
xor
push
pop
push
ss
jnp
pop
lds
jno
shr
inc
mov
xor
inc
cltd
mov
sub
pop
ljmp
xchg
dec
pushf
inc
pushf
mov
fistl
loop
call
pop
sub
aad
mov
jl
mov
mov
dec
jp
xchg
push
cwtl
test
lretw
insb
repnz
sub
pop
ret
sub
mov
add
sahf
cs
pop
fcmovb
test
cmp
pop
and
lods
je
std
dec
test
add
jecxz
outsb
scas
ds
adc
pop
inc
mov
jp
adc
pusha
inc
mov
ds
fsubrs
int3
inc
scas
lea
mov
pop
rcrb
addr16
repz
push
call
cmpsb
sahf
les
sarb
pusha
sti
mov
sub
and
or
mov
push
jp
jmp
sahf
repz
mov
mov
mov
sbb
add
jae
je
rclb
pop
adc
cld
sbb
pop
cmp
push
cmc
adc
cli
loope
xor
int3
in
add
inc
add
in
sbb
fdivl
fmulp
addr16
mov
xchg
dec
popa
in
pop
flds
shrl
xchg
jp
push
cwtl
js
adc
stos
sbb
or
mov
bound
mov
dec
add
scas
stos
jae
sub
scas
xchg
dec
notb
insb
push
mov
aas
cmp
popf
and
adc
test
jno
push
into
mov
cmc
cmpsb
test
aad
call
int3
add
sti
aam
sub
cmpsl
and
or
leave
sub
jb
cli
jo
cld
jns
cli
ret
cmc
push
xor
mov
or
mov
cli
addr16
lret
or
mov
pop
scas
add
mov
ret
fcmovnu
pop
aad
lock
popa
mov
or
xchg
sbb
xlat
ret
mov
lds
pop
dec
loopne
pusha
dec
add
lret
mul
xor
jg
adc
jl
adc
dec
decb
into
int
sbb
and
imul
jb
ss
xchg
std
mov
filds
outsb
xchg
lea
sti
shll
loop
inc
nop
sub
inc
mov
mov
dec
pop
add
push
mov
fidivs
cmp
lods
add
scas
loope
pop
das
xor
dec
in
imul
cli
idivl
cmp
icebp
lods
mov
repz
paddusw
ficoml
popa
nop
addr16
pop
jmp
pop
jns
and
inc
repnz
into
popf
sbb
xor
add
andb
mov
push
insb
mov
push
xchg
xchg
dec
sarl
fstpt
vxorpd
cmp
sub
mov
mov
imul
or
sbb
rorb
addl
cwtl
loope
and
icebp
inc
test
aad
fidivrs
jne
push
xor
cmp
bound
xorb
in
xorl
pop
pop
pop
lret
pop
int3
cmp
outsb
sub
lret
jno
cmp
mov
dec
mov
and
mov
mov
testl
xchg
push
cmp
inc
cmp
pop
mov
jb
inc
fdivrs
or
dec
int3
cmpb
mov
fucomip
jno
add
rorb
xchg
fiaddl
pop
xchg
xchg
das
fildll
jecxz
out
das
repnz
push
sbb
xlat
stos
pop
inc
cmp
sti
iret
mov
lods
idivl
mov
movsl
rep
lea
mov
orl
mov
cltd
mov
adc
dec
add
iret
add
lds
sub
icebp
out
call
popa
dec
cmp
cmpsb
int3
mov
mov
mov
xchg
les
xor
cmp
jmp
into
test
dec
ljmp
xchg
je
push
inc
fcmovne
imul
out
xchg
hlt
subb
aam
fstpt
jns
cmc
test
ljmp
test
sub
lahf
or
inc
and
mov
dec
adc
xchg
jp
cmp
sub
mul
lret
into
cmp
pop
mov
sbb
daa
shrb
outsb
sbb
test
in
test
pop
addr16
jge
mov
in
sbb
mov
cs
push
das
dec
mov
add
sub
sbb
jmp
mov
cmp
and
pop
adc
push
jge
sub
fistpl
cmp
push
movsb
jl
dec
loop
jb
or
inc
jp
xchg
fstp
jno
fldl
bound
dec
ja
dec
push
dec
mov
or
pop
cmp
mov
test
arpl
arpl
sub
notb
cmc
test
mov
dec
dec
sub
into
fs
xlat
aas
xchg
dec
daa
inc
mov
inc
cmp
sbb
push
dec
shl
scas
mov
jge
push
mov
fistps
inc
xchg
test
jmp
mov
push
lret
xor
pop
test
fs
adc
test
and
or
shrb
popf
cmp
inc
adc
ss
mov
nop
jecxz
imul
add
testb
cwtl
lds
pop
pop
xchg
jmp
and
outsb
cli
jae
movsl
lods
loop
mov
ss
xchg
int3
sub
cmpsl
cld
mov
in
adc
mov
mov
sti
js
and
popa
dec
jmp
jo
mov
add
idivb
xchg
lahf
jnp
add
adc
dec
test
xchg
pusha
inc
push
rcrb
xchg
cmc
inc
push
js
sbb
jns
in
and
inc
sub
fwait
in
mov
js
ja
push
jp
out
std
aad
sub
lock
sbb
mov
das
inc
std
or
out
popf
pop
insb
cmp
mov
push
ret
sub
xorl
sbb
cmp
xlat
std
fcoml
cmp
jecxz
and
sbb
mov
push
push
add
notb
jg
jecxz
cld
fmuls
mov
arpl
scas
into
adc
sub
imul
int3
or
push
or
pusha
and
ds
data16
dec
cld
scas
pop
popf
shll
aas
aam
shrb
jp
gs
lea
std
sbb
adc
popf
pusha
sti
lahf
push
loop
mov
testb
rcll
adc
push
fistps
cmp
enter
adc
jl
push
mov
lret
cli
lret
mov
iret
or
int
andb
lods
fdivr
xlat
push
adc
push
inc
mov
cld
sbb
sub
ja
or
xor
mov
scas
enter
push
mov
outsb
rclb
or
int
enter
mov
cmp
and
mov
test
xor
pop
fs
xlat
or
outsl
mov
jbe
in
cmp
lea
push
lods
in
push
jb
lcall
xchg
jle
test
mov
adc
mov
addr16
fimuls
outsl
data16
push
cmp
xchg
or
arpl
insl
fs
and
cmpl
daa
scas
lea
inc
ljmp
mov
or
push
push
inc
popf
in
sbb
decb
imul
notb
push
jp
jge
rcrb
insb
pop
std
lock
push
adc
adc
imul
mov
dec
popa
iret
adc
inc
jbe
cli
js
shr
mov
xlat
js
loopne
test
push
rorl
bndstx
sbb
repz
ljmp
mov
mov
lret
ss
or
fstpt
ret
mov
and
add
movsl
sub
mov
or
push
cmp
mov
push
enter
roll
jle
sub
lahf
sbb
mov
pop
pop
sub
pop
push
incb
aam
ja
mov
xchg
clc
cmpsb
std
imul
jge
push
dec
push
psubsb
push
mov
and
clc
fsubrs
les
sbbl
dec
arpl
jg
adc
push
loopne
pop
int
test
jmp
and
jp
shl
pop
rorl
iret
hlt
movsl
dec
pusha
adc
push
aas
cmc
xor
aaa
xor
loopne
push
movsb
mov
das
fs
jl
push
outsb
jp
cmpb
scas
push
inc
cmpsl
mov
xor
mov
push
movzwl
jno
std
in
push
add
sub
mov
add
shll
xchg
insb
adc
mov
or
lahf
icebp
repz
mov
xor
sar
dec
xor
jne
repz
lea
xor
dec
js
mov
and
pop
push
jg
pop
test
arpl
push
dec
xchg
call
adc
loop
cli
mov
jb
fmul
fucomi
je
or
xchg
mov
lods
test
xor
pusha
popf
push
jne
adc
mov
mov
imull
cmpb
stos
int3
or
inc
pusha
icebp
into
adc
stos
stos
out
in
mov
mov
xorl
pop
mov
xor
xlat
popf
pop
ret
add
pop
dec
or
xchg
ret
xor
push
xlat
add
inc
int
mov
mov
out
clc
push
out
xorl
xchg
call
xchg
pop
add
cwtl
sbb
inc
lret
out
jo
push
ljmp
arpl
popa
push
xor
jle
js
sub
aam
std
or
lcall
pop
mov
cwtl
push
push
xor
xchg
addr16
jmp
inc
mov
dec
pop
xlat
dec
and
or
mov
push
xchg
stos
jns
fs
adc
fstpl
push
icebp
pop
and
stos
out
jns
xchg
lret
push
add
cwtl
out
pop
pop
fildl
out
je
xchg
jmp
in
bound
ss
out
lods
sbb
pushf
pop
insb
dec
push
ljmp
mov
push
lds
fisttps
arpl
jg
aaa
pop
fidivrl
add
cld
mov
push
add
ds
mov
xchg
sub
inc
dec
mov
lods
inc
mov
jne
xchg
popa
pop
and
sub
jbe
push
inc
movsb
fsubrs
xchg
insl
andb
jns
stos
cmpsl
pop
nop
jae
xchg
and
xor
xchg
mov
mov
out
jno
jmp
pushf
inc
adc
push
insb
pop
xchg
rcrl
jmp
mov
xchg
sbb
add
out
stos
mov
popa
in
cli
xchg
pop
push
lret
or
mov
stos
bound
daa
ss
xchg
jmp
adc
mov
repnz
dec
jecxz
push
and
mov
dec
sbb
add
jns
sub
insb
push
and
int
into
jae
fs
pop
inc
dec
add
aas
popa
mov
sti
fwait
jle
mov
mov
jge
cmpsl
or
cmp
rcll
xor
fcmovne
aaa
push
pop
popa
lods
mulb
mov
pop
lret
jmp
inc
pop
fnstenv
xchg
add
xchg
rclb
or
push
lret
popf
cmc
mov
stc
xor
test
xchg
sub
pop
jl
loop
shr
add
mov
loop
dec
add
aaa
pusha
pop
adc
mov
cmpsl
jge
and
mov
jmp
xorb
push
cwtl
xor
pop
xchg
fstpt
inc
xchg
cli
hlt
dec
lock
mov
add
fwait
adc
imul
inc
outsl
outsb
mov
jg
cmp
mov
popf
pop
jno
dec
sbb
out
addl
fldt
jmp
push
ret
outsl
dec
mov
pop
adc
out
sbb
sbb
inc
xchg
ficoml
lret
sti
and
aaa
jb
fsubrl
xchg
andb
or
dec
hlt
sbb
pushf
cli
cmp
adc
dec
jno
xchg
mov
dec
push
and
jo
inc
lods
pusha
xor
repz
cmp
insl
inc
shlb
xchg
mov
notl
femms
inc
loopne
mov
aam
adc
aaa
leave
add
in
popa
inc
mov
ficoms
pop
out
outsl
or
mov
repnz
das
sub
and
lods
and
insl
push
and
add
sahf
pop
pop
movsl
adc
dec
xor
cmp
enter
sarb
push
mov
cmc
movsl
fnstcw
add
dec
into
movsl
lods
xchg
inc
rolb
fcomi
sbbl
lea
add
inc
fisubrl
jo
mov
sbb
shrb
mov
sbb
into
rcll
xchg
sbb
test
adc
jnp
lret
jae
xor
outsl
mov
scas
stc
in
movl
lds
mov
cld
mov
in
lcall
push
fwait
ja
adc
repz
mov
scas
mov
mov
jo
stos
lods
xchg
into
push
ficoml
and
add
lock
sub
out
add
pop
mov
scas
jno
mov
mov
xlat
cmp
jg
cmpsb
sub
sbb
enter
jecxz
sub
int
lahf
xchg
inc
cmpsb
call
dec
popa
dec
add
scas
fisubrs
push
into
rcll
insb
stos
andl
sub
int3
push
pop
jmp
push
nopl
inc
lea
push
loop
out
pushf
imull
mov
enter
xchg
jno
dec
dec
iret
fildl
sub
push
or
xor
adc
xor
cld
repnz
push
loope
xor
and
mov
fdivs
mov
jl
pop
jb
mul
rol
sbb
jle
inc
shrb
cmp
rclb
sbb
push
in
out
call
add
push
aaa
jg
scas
and
push
je
mov
mov
fldt
clc
sti
mov
test
mov
mov
js
adc
aam
lock
cmpsb
lret
lea
add
adc
std
mov
and
fistpll
mov
push
push
das
push
mov
xchg
shl
rcll
jl
es
stc
int
cmp
pop
jl
daa
cmp
cmpl
xorb
mov
xchg
pop
or
enter
rcl
sub
add
jmp
lods
arpl
sbb
sahf
ljmp
loop,pt
dec
adc
inc
pop
and
fdivrp
adcb
hlt
jnp
xor
lea
sbb
int
pop
enter
push
dec
push
es
fidivl
dec
call
divl
lds
stos
sbb
adcl
pop
adc
sub
jecxz
popf
dec
inc
aam
pop
or
ret
xchg
aas
mov
or
cmp
lcall
sbb
dec
or
frstor
stc
push
jle
push
ficoms
mov
jecxz
sub
cmp
mov
arpl
inc
dec
nop
sub
in
xor
data16
test
jge
neg
jp
jge
or
stc
or
cmp
cmp
bound
and
inc
into
push
mov
in
pop
lods
adc
aad
popa
add
jl
fmul
pushf
cmp
rorb
mov
cwtl
cli
add
orl
lods
mov
mov
or
xor
popa
sbb
sub
adc
xor
jnp
push
loop
pop
js
in
cli
sbb
ret
loope
in
icebp
push
mov
pop
loop
int3
inc
inc
mov
dec
jge
repnz
xchg
into
popf
int
xlat
call
lds
cmpsl
mov
and
daa
bound
sbb
popf
js
lock
jno
jl
addr16
icebp
std
pop
lahf
lret
rcl
inc
popf
stc
insb
sbb
mov
gs
dec
mov
and
mov
mov
inc
xchg
call
pop
test
adc
sbb
mov
pop
pop
fistpl
adc
mov
cltd
pop
cltd
test
dec
cli
pop
jle
adc
dec
in
pop
scas
mov
sbb
mov
lret
add
xor
sbb
cwtl
adc
jle
and
xor
ss
mov
in
adc
mov
sub
in
sarb
das
bound
mov
adc
dec
insb
push
icebp
fmul
ds
sbb
in
fiaddl
shrl
stc
cmp
loop
mov
adc
xchg
xchg
pop
inc
gs
pminub
cmp
ljmp
or
xor
insl
add
cmpsb
lock
sub
xchg
les
pop
and
sub
dec
ljmp
or
mov
xchg
test
out
movsb
lahf
pop
inc
sbb
and
xchg
dec
sub
in
imul
adc
out
push
cmp
lret
jg
dec
pop
aad
out
or
cmpsb
clc
fadds
hlt
xor
hlt
test
ret
fmuls
inc
mov
lea
adc
in
je
rcrl
cmp
cmc
movsb
cmp
mov
adc
inc
jecxz
dec
cs
or
sbb
aaa
pop
pop
scas
ljmp
mov
ss
xchg
aam
mov
jo
pop
jo
sahf
mov
movsl
fdiv
js
jl
sarl
repnz
jl
das
lods
adcb
es
xchg
lahf
popa
add
mov
pop
ficomps
popf
std
inc
iret
jae
test
movsb
add
imul
lret
jecxz
shrl
jle
mov
cwtl
gs
mov
pop
ret
inc
fcompl
push
sbb
pop
jno
inc
enter
and
repz
or
addr16
add
out
sbbb
mov
sub
mov
stc
add
xchg
mov
pop
outsb
loopne
jecxz
mov
lret
mov
pop
xlat
pop
push
scas
cld
sbb
test
or
rol
ret
or
jl
cli
inc
in
xchg
clc
dec
lcall
mov
mov
push
aaa
push
push
or
sti
add
adc
bound
adc
ffreep
add
xor
fsubrs
into
jp
and
mov
in
xchg
fisttps
cmp
out
fisubrs
pop
pop
test
das
ds
pop
jle
scas
lret
lcall
mov
dec
sarl
pcmpgtd
inc
jge
imul
push
or
popaw
stos
negl
pushw
sbb
ret
hlt
mov
roll
stos
push
int
mov
loope
icebp
lcall
lock
pop
jno
jbe
xchg
fs
fidivrl
les
cmp
adc
sbb
inc
xchg
add
dec
repnz
xor
push
stc
pop
xchg
or
inc
pushf
dec
sti
sub
outsl
test
cmpsl
daa
xchg
cmp
mov
loope
cmp
xor
jb
xchg
pop
add
mov
mov
sbb
popa
shlb
stos
loope
xor
daa
mov
inc
cmp
push
in
incl
in
adc
roll
jno
or
mov
xchg
adc
movsb
mov
adc
addr16
mov
sbb
adc
dec
or
sarb
imulb
dec
fsubl
jno
repnz
inc
ret
push
into
jecxz
sub
leave
insb
adc
push
pop
jp
idivb
mov
jns
xchg
cmp
jns
sub
fsubl
jle
mov
and
outsb
xlat
jbe
sub
lock
out
inc
push
push
fcomip
insb
les
and
imul
push
ljmp
mov
pop
cbtw
in
rcrb
dec
imul
mov
je
lret
add
jmp
lods
sub
sub
imul
pop
xor
lret
rolb
ja
mov
loope
testb
stos
jae
neg
orl
jg
imul
xor
push
adc
push
jp
loopne
sahf
int
jae
dec
sbb
sub
mov
arpl
push
add
and
scas
fcmovnbe
xchg
iret
in
hlt
mov
mov
jmp
xlat
mov
test
or
or
scas
ret
jnp
nop
pushf
push
xlat
stos
fwait
jbe
das
lcall
daa
and
lea
cwtl
leave
push
push
mov
adc
push
sub
dec
rorl
imul
push
pop
jb
sub
scas
mov
add
cld
hlt
push
std
add
adc
sti
add
in
sti
je
adc
inc
xor
cmc
sbb
jns
and
fiaddl
imul
pop
jle
adc
movsl
adc
shl
cmc
ds
sahf
popa
dec
loopne
pusha
jae
xor
mov
pop
imulb
ljmp
inc
fs
xor
and
test
cmc
and
add
fnstsw
or
mov
sahf
pop
negb
shlb
cmp
dec
push
shrb
leave
addr16
in
scas
movsl
int3
outsb
dec
pop
mov
add
shr
or
cwtl
mov
xchg
outsl
fiaddl
out
lea
xchg
pop
jmp
push
les
dec
js
imul
adc
adc
out
jp
mov
jne
test
gs
icebp
inc
imul
in
pop
mov
cli
push
mov
ss
push
sub
sub
das
lea
or
std
fcmovnbe
pop
inc
stc
push
std
jae
lahf
sub
in
dec
sbb
jo
cld
in
mov
or
jmp
xlat
cmp
sbb
and
mov
sub
lods
ret
cld
inc
mov
push
sub
lods
xchg
out
shrb
xchg
clc
jecxz
xchg
jl
mov
fiadds
xchg
out
enter
test
cli
hlt
adcb
xchg
adc
cmc
test
aad
data16
bound
xchg
in
push
push
imull
cmp
or
pop
divl
jne
sub
jmp
pop
dec
xor
dec
sub
into
and
jb
mov
mov
test
aam
in
sbb
rol
dec
stos
dec
scas
nop
movsb
fs
leave
int3
shrb
push
pop
xchg
lea
or
movsl
dec
lds
or
lahf
aaa
sti
andnps
les
orl
sbb
pop
notb
xchg
dec
dec
mov
xchg
mov
jbe
push
sbb
mov
jl
int
addr16
roll
or
jge
scas
lcall
pop
ret
insl
shrb
int3
mov
ret
repz
sbb
xchg
arpl
addl
dec
sub
fadd
sti
imul
div
dec
jmp
cmp
xlat
in
adc
in
dec
inc
out
fisubrl
push
lods
sarl
xor
sbb
jge
push
les
in
test
movsl
loope
call
cmp
loopne
inc
nop
xor
adc
adc
out
insb
popf
jmp
sub
pushf
lret
mov
sub
stos
test
pushf
pop
xorl
insl
daa
out
bound
push
lods
sub
cmp
lods
adc
mov
push
andl
mov
std
xor
inc
addl
and
mov
jl
daa
out
add
or
pop
ret
add
jmp
cmp
push
jno
nop
mov
nop
testb
js
pop
outsb
sub
stc
sub
or
inc
sbb
jge
cmp
mov
push
es
push
nop
lret
ljmp
mov
push
lcall
or
test
and
pushf
arpl
out
sahf
cltd
andl
insl
inc
mov
jae
sbb
fistps
mov
mov
mov
mov
pop
outsl
out
push
xor
cmc
mov
sbb
xchg
repz
jl
ss
jbe
adcb
imul
sbb
lds
jmp
pop
jp
xchg
ss
pusha
inc
jno
inc
sbb
push
sub
jecxz
insl
leave
stc
push
and
jmp
movsl
xchg
ss
mov
pushf
inc
xlat
cli
lock
sbbb
mov
icebp
dec
sub
jge
pusha
jbe
notl
pushf
pop
push
adc
mov
pop
inc
ret
es
inc
mov
sbb
and
xchg
add
adcb
xchg
push
pushf
inc
mov
and
in
xor
inc
pop
xor
jg
inc
jns
or
pop
and
xchg
outsl
sbb
adc
outsb
jg
push
test
and
mov
push
loope
xor
mov
mov
xor
fcmovu
stos
fsts
adc
push
daa
sub
mov
pushf
or
xchg
popa
adc
xchg
ret
mov
or
ss
cmp
xchg
and
mov
push
xchg
mov
icebp
mov
jge
jg
cmp
add
rcrl
mov
shrb
into
sti
sbb
daa
push
sbb
cmp
and
aam
adc
adc
ds
in
xor
pop
aas
or
xchg
xchg
adc
pop
xchg
fisubrs
xchg
xor
xor
adc
bound
hlt
dec
add
mov
ret
cli
jno
sub
aad
lahf
repnz
cmp
mov
jno
lret
inc
cmpsl
or
std
icebp
stc
jbe
shlb
and
pop
insb
dec
mov
xchg
pop
adc
out
add
pop
xor
xor
dec
shr
shll
popf
lock
adc
pusha
fxch
call
maskmovq
testl
shlb
sub
ficoms
adc
add
mov
stos
dec
es
jp
aad
ficompl
addr16
push
les
jle
sahf
pop
adc
lods
jne
incb
add
or
sub
test
adc
data16
ret
xor
dec
xchg
mov
clc
or
scas
ret
faddl
pop
imul
xor
cmp
dec
je
aaa
arpl
pop
mov
add
sbb
sbb
xor
mov
data16
out
mov
xchg
sub
add
xlat
stc
and
xchg
and
and
and
adc
pusha
mov
ret
cmc
adc
mov
int3
stc
pop
mov
xor
outsl
test
mov
aaa
cwtl
mov
add
in
shll
push
movsb
or
movsb
movsb
daa
xchg
inc
lods
or
leave
inc
rorb
jl
pop
sti
pop
cmp
shrl
xchg
pop
pop
rcrb
lods
jmp
or
jnp,pn
jecxz
imul
pop
xor
fimull
lret
ret
xchg
mov
mov
mov
daa
hlt
or
test
fldl
mov
addr16
sub
mov
pop
pop
negb
aaa
int3
pusha
or
pop
mov
jo
add
ss
fdivr
jnp
or
fnsave
jle
adc
adc
in
xor
mov
or
repz
sub
sti
pop
fidivrs
adc
jmp
notb
loop
push
pop
dec
mov
cltd
xchg
xchg
cmpsl
pusha
aas
sahf
shl
push
cmp
pop
pop
add
roll
in
xor
cmpsl
test
sldt
jl
testl
dec
scas
fldenv
push
loop
mov
nop
or
mov
dec
in
mov
fisubl
insb
mov
sahf
dec
sbb
sbb
sbb
pushw
getsec
fldl2t
test
lcall
jecxz
xchg
jbe
xchg
js
pusha
xchg
repnz
mov
mov
mov
mov
jb
lds
cmp
inc
cmc
bound
aam
and
xor
sub
icebp
inc
testb
sbb
test
clc
push
std
das
adc
cmp
aam
imul
lcall
dec
jp
xor
sub
fimuls
pop
addr16
fimuls
mov
std
in
ljmp
fcoms
out
jo
lock
lcall
pop
jecxz
jb
arpl
or
pop
xchg
test
jg
pop
xor
sahf
addb
cmp
add
flds
xchg
loop
sbb
pop
push
add
xchg
inc
push
jge
push
xchg
and
adc
fidivrl
cld
mov
test
jp
add
sahf
mov
and
fbstp
inc
cmpsl
push
add
enter
cld
pop
add
movsl
in
popa
ss
xrelease
jecxz
cli
xor
pop
pop
js
loope
pop
hlt
es
push
push
inc
adc
cmpsb
dec
mov
dec
cmp
cmpsb
push
mov
in
clc
out
enter
test
pop
inc
popf
jge
enter
add
mov
and
in
mov
or
dec
mov
lock
inc
dec
mov
and
arpl
dec
jg
call
sub
movsb
cmpsl
pop
lahf
jl
lcall
pop
cld
push
jp
pop
imul
mov
or
sbb
movsl
notl
loop
pop
sbb
jp
mov
sbb
lods
or
repnz
push
lcall
inc
and
pop
cld
dec
xor
imul
ljmp
jp
cmp
loop
dec
mov
or
jecxz
mov
cmpsb
mov
jmp
mov
mov
jne
mov
lret
mov
aad
xor
out
push
dec
add
std
fisubl
mov
mov
jp
inc
adcl
aam
test
add
into
push
xor
mull
mov
sbb
adc
and
cmp
loop
mov
mov
cmp
andb
fsubrs
push
movsl
repnz
movsl
int3
inc
test
in
push
jge
test
hlt
je
dec
nop
aad
pop
leave
into
cmp
inc
mov
xchg
imul
fcomp
cmpsl
mov
mov
in
and
pop
xchg
adc
mov
mov
sbbb
mov
sahf
lods
stos
push
xor
js
sahf
test
add
inc
add
frstor
inc
pushf
repz
in
push
arpl
xchg
mov
mov
popf
movsb
mov
mov
jo
ds
xchg
push
out
sub
mov
loop
mov
stos
hlt
sub
fimuls
xor
mov
jp
mov
sbb
mov
iret
mov
in
fst
fdivr
xor
out
xchg
mov
pusha
push
lret
push
in
pop
sti
push
mov
movsb
jecxz
cs
xchg
push
icebp
lea
imull
repz
ret
cmp
mov
mov
cmp
cmpsb
push
or
in
dec
lea
lock
pushl
xor
mov
shll
dec
fwait
fwait
fs
das
push
dec
stc
or
xchg
cmp
rorl
repnz
and
inc
out
xchg
inc
inc
mulb
xchg
mov
cld
test
or
aad
jns
inc
push
xchg
outsb
and
fwait
fwait
ljmp
push
push
jmp
dec
stos
fstpt
jg
cmpsl
pop
cmp
push
cld
mov
and
xlat
add
call
or
dec
lea
movsl
lahf
out
les
add
add
xor
xchg
dec
push
aaa
loopne
neg
iret
or
or
mov
out
movsl
daa
pop
test
sub
out
hlt
cwtl
mov
xchg
xchg
pop
cmp
mov
jae
aaa
pushf
into
push
and
adc
pop
pop
and
and
jp
data16
lret
test
xorl
fiaddl
fyl2xp1
lahf
pop
cmp
stc
mov
loope
ss
push
pop
jge
ljmp
ss
mov
and
shll
cmp
idivl
lods
sub
or
jecxz
mov
jo
push
jg
bound
push
and
icebp
outsb
mov
jo
adc
insl
mov
movsl
ret
clc
lds
out
mov
fcompl
pop
lret
fldl2t
shrl
fsubrs
jge
mov
rclb
mov
fisttps
xor
out
and
push
mov
in
hlt
xchg
daa
fwait
and
or
jecxz
les
jl
cmpsb
loope
std
ret
xchg
mov
or
sbb
mov
push
inc
in
mov
xor
bound
and
in
jne
addr16
or
xchg
js
dec
imull
inc
mov
pop
arpl
imul
add
aam
xor
mov
xor
data16
jge
push
dec
rcll
adcb
shld
mov
stos
sti
cmp
push
sub
or
imul
paddb
loop
lret
bnd
xchg
jb
inc
clc
ljmp
or
adc
in
pop
add
jle
push
je
lahf
dec
gs
imul
sbb
and
shrl
jmp
pop
inc
pop
sbb
in
cmp
stc
add
js
inc
movsl
call
loop
and
stos
imul
jl
pop
je
sub
mov
in
hlt
shll
cmp
imul
aaa
xchg
enter
pushf
ja
and
arpl
xchg
mov
mov
xchg
adc
rcrl
mov
and
jp
dec
test
cli
xor
mov
mov
jbe
shrl
mov
push
enter
xchg
and
mov
jp
inc
mov
gs
dec
jo
sbb
xor
xchg
int
cwtl
mov
cmp
pop
ret
fcompl
sub
test
dec
sahf
or
shlb
fs
jge
aas
fildll
sub
lret
push
jb
lea
add
mov
sbb
xor
xchg
les
sub
out
int3
repz
push
sbb
push
jb
cmp
mov
add
mov
jge
mov
fimuls
xchg
pop
pushf
scas
leave
inc
int3
mov
movsl
inc
mov
leave
dec
and
add
jp
fbld
adc
push
les
out
jle
push
push
popf
filds
sarb
ret
pop
mov
or
dec
push
fwait
xchg
xchg
push
or
pushf
cmp
stos
arpl
sub
loope
fwait
xchg
aad
xlat
fsubp
rcll
dec
cmpsb
pop
mov
xor
loope
or
push
sbb
lret
sbb
movsb
xchg
cmpsb
or
xor
xor
jle
adc
loope
sahf
out
stos
in
ss
leave
lcall
push
add
jp
shll
aad
jns
xor
mov
rolb
icebp
xchg
mov
pop
test
xchg
adc
pushf
adcl
fnsave
or
fsubrs
add
jae
insb
subb
popf
inc
sbb
adc
nop
daa
std
inc
loopne
fiadds
adc
sub
popa
mov
scas
outsl
lret
in
jns
pop
and
sub
push
pop
jb
icebp
and
or
mov
repz
hlt
out
push
lods
ds
jno
jb
push
add
jmp
add
pop
dec
stos
cli
rorb
lea
sbb
xor
xchg
mov
stc
mov
inc
xchg
rorl
jne
sahf
and
pop
enter
cld
dec
add
xor
and
dec
jb
cmp
push
cmp
fisttps
gs
mov
add
pop
sti
pop
sbb
jmp
push
int3
lds
dec
incb
or
adc
xchg
cmp
cmp
insl
cltd
or
movsb
sbb
les
push
ficomps
sub
mov
hlt
sbb
or
sbb
xchg
sub
mov
ds
lcall
mov
and
sub
or
iret
fucomi
jae
addb
push
fdivs
pop
fbstp
test
mov
sarl
fldcw
out
push
mov
jnp
shll
xchg
cltd
fildl
push
jo
fisubs
add
sbb
sbb
jno
lret
insb
push
dec
sub
into
mov
into
nop
pop
xlat
jmp
in
call
roll
loop
xor
lods
push
or
xor
mov
leave
sbb
nop
stos
add
pop
fisttps
dec
or
fdivs
stc
add
jg
fcoml
das
pop
xor
adc
xchg
cmp
lea
dec
rorl
out
lahf
insb
dec
and
lret
pop
bound
aad
int
mov
mov
je
les
in
cmp
movl
ja
mov
cmpsb
out
xor
jns
push
ja
xor
mov
mov
pusha
and
add
arpl
xor
add
cmp
sub
repnz
pop
scas
pcmpeqb
pop
xchg
mov
je
or
mov
into
pop
or
arpl
add
inc
sub
add
push
pop
sub
or
stos
xchg
popl
xchg
xor
fs
pop
test
js
hlt
movsb
inc
dec
lcall
push
mov
sub
subl
rcll
sbb
sbb
nop
hlt
movsl
imul
xchg
adc
pop
xchg
into
iret
sub
sub
push
dec
dec
imul
pop
sub
stc
es
mov
jecxz
push
bound
clc
xchg
xchg
push
rol
test
sub
add
lea
movsb
xor
cmp
outsb
add
cmp
and
cld
ljmp
xchg
andb
js
or
in
lret
iret
clc
nop
imul
sub
mov
xlat
test
xor
into
jae
lock
jne
popf
stos
popa
inc
mov
pop
inc
cmpsl
in
imull
cmp
idiv
sbb
ds
push
xor
lahf
imul
sbb
scas
fisttpl
sarb
shrb
divb
out
rolb
adc
test
pop
sbbl
std
ljmp
in
push
pop
and
jle
in
insb
sub
adc
add
lock
sub
pop
add
cmp
pop
adc
bound
in
push
and
cli
inc
out
dec
adcl
addr16
jmp
je
mov
insb
push
lods
xchg
fidivrl
andl
and
mov
pop
movl
jb
scas
lret
mov
ljmp
xor
or
mov
mov
cs
and
mov
in
sbb
std
inc
mov
cmpsb
stc
push
mov
mov
and
sar
pop
pusha
mov
es
lds
nop
lret
out
cltd
ljmp
mov
fwait
jp
xor
add
push
setb
dec
aaa
adc
or
cmpl
cmp
xor
enter
ja
movsl
adc
mov
ficoml
mov
xlat
dec
jp
shl
out
sub
jge
movsl
xchg
fcom
sti
mov
shlb
stc
mov
lret
arpl
pushf
outsb
addr16
cmc
push
shr
fwait
cmp
mov
ljmp
pop
sahf
mov
sbb
add
mov
sbb
sti
out
dec
stc
cmp
pushf
cli
jecxz
fsubrl
es
cmp
jnp
arpl
mov
scas
arpl
push
fs
lea
sbb
popa
fldl
inc
rcrl
shr
sub
and
add
adc
and
push
test
dec
stc
popf
mov
outsl
jp
mov
xor
dec
popf
jae
jae
push
sbb
inc
jmp
lret
out
mov
xor
imul
inc
jo
push
xorl
lea
dec
push
sub
and
sub
cmp
jp
loopne
push
xchg
ss
sub
rolb
xchg
sub
imul
sub
push
xchg
mov
push
push
loop
jp
scas
orb
popf
add
cltd
scas
add
dec
js
adc
fldz
or
push
xor
ficompl
inc
rorb
and
or
xor
sub
pop
fwait
int
std
movsb
out
jns
mov
mov
xor
shlb
movsl
adc
sbb
xchg
mov
fsubrs
push
je
sbb
lahf
daa
aad
jmp
mov
fwait
cmp
bound
or
adc
aad
in
arpl
xor
insb
mov
mov
and
shlb
cmp
sub
loop
mov
xchg
aas
adc
fstl
sar
push
loope
xchg
aas
out
std
jg
and
push
mov
pop
into
inc
lahf
mov
xchg
lahf
ss
out
roll
jmp
dec
stos
xchg
dec
mov
adc
or
xor
insb
mov
or
push
dec
and
test
sub
and
push
cs
pop
dec
mov
xor
adc
dec
addr16
pop
xchg
test
xchg
adc
outsl
in
xor
or
xchg
cmpsl
inc
xor
fdiv
xor
adc
adc
nop
adc
cmp
fistl
sar
jns
inc
add
dec
loopne
mov
push
push
mov
jb
inc
aad
and
sbb
daa
insb
aaa
sub
je
lods
imul
sbb
pop
mov
dec
aad
fwait
and
mov
insb
lock
dec
sbb
inc
enter
aad
jbe
inc
mov
pop
add
adc
loopne
pusha
add
aad
xchg
scas
mov
and
dec
mov
adc
addr16
insl
push
out
loopne
xor
sbb
loope
inc
add
subl
test
ja
sahf
fs
ficoms
arpl
test
loope
cmpsb
xlat
outsb
dec
data16
push
aam
cmp
arpl
jg
movsl
xchg
jg
pop
mov
mov
loope
nop
xchg
jne
jmp
aas
inc
pushf
mov
sahf
dec
mov
mov
inc
lds
orl
in
ss
or
push
and
dec
loop
sbb
or
aas
divb
sahf
ret
sbb
sar
scas
in
mov
mov
stc
int
fiaddl
stc
bound
shrl
pusha
or
xor
movntps
lds
push
cmpsb
xchg
cld
xchg
jae
cmpb
enter
mov
arpl
mov
mov
addr16
leave
fildll
das
xchg
cmp
sub
jle
jg
cltd
test
xchg
cmp
pop
les
cmp
idivl
or
cmp
insl
jl
mov
pop
repz
cmp
mov
push
mov
ret
das
and
xchg
sbb
push
out
stos
lock
test
pop
fstps
daa
sbb
sub
fwait
mov
nop
scas
jl
or
imul
mov
test
clc
push
add
push
xchg
inc
dec
jl
sub
movsb
push
in
movsb
cmp
adc
cmc
ror
pop
xchg
mov
cmc
daa
dec
fstpt
das
add
jno
sahf
add
pop
mov
in
dec
push
into
inc
push
into
out
frstor
mov
inc
int3
mov
hlt
adc
jo
jns
sbb
scas
cmpb
in
iret
inc
ret
xor
out
subl
movsl
fs
scas
test
jne
push
clc
stos
fsubrs
cli
mov
dec
loopne
sbb
jns
into
out
popl
jecxz
bound
lret
ds
mov
data16
mov
and
hlt
mov
mov
leave
fucomp
sub
pop
out
std
ret
cs
roll
adc
xchg
push
sbb
mov
xchg
bound
out
hlt
test
and
ds
jg
bound
or
cmp
cmp
mov
fs
push
xchg
cmp
jl
push
cli
sbb
mov
int3
out
icebp
imul
int3
out
fwait
movsl
insl
push
mov
and
lds
popf
in
mov
mov
xor
in
in
jae
pusha
dec
lret
xchg
scas
cmpsb
lods
cltd
int
inc
and
sti
and
mov
out
test
push
push
and
xor
jl
add
leave
cmp
fnstsw
jg
sub
adc
cmp
push
adc
mov
dec
pop
push
fsubs
pop
adc
sahf
push
add
lret
or
mov
xchg
cwtl
adc
subb
jp
repnz
xchg
test
popf
pop
mov
or
adc
push
inc
mov
cltd
inc
int3
cld
andnps
xor
jmp
aas
pop
dec
cmp
xor
outsb
fildl
ret
push
test
fimuls
ja
js
mov
push
add
out
xor
subl
xor
and
inc
rorl
cmp
jne
hlt
push
mov
daa
test
stos
mov
stos
cmp
test
out
mov
sbb
add
out
mov
add
inc
sub
stc
push
out
jge
dec
xchg
push
daa
ja
sarb
mov
hlt
and
jne
fadds
dec
sbb
mov
inc
scas
sbb
out
pop
add
push
push
push
xor
stos
cwtl
dec
adc
sbb
addr16
fstpl
xchg
xor
xor
shl
fs
mov
jmp
les
mov
pop
adc
jmp
mov
mov
jb
pop
int3
outsl
repz
and
popa
cmp
mov
jnp
je
inc
andps
xorb
rcll
das
aas
cmp
inc
add
and
xchg
test
and
inc
ret
jne
cmpsb
cmpsl
int
xor
jnp
mov
adc
inc
xchg
inc
push
dec
add
add
outsl
pop
into
jb
mov
repnz
fistpll
mov
jo
fcmove
notl
testb
add
push
jae
insl
cmpsl
ja
sahf
adc
rorb
sbbb
daa
movsl
jp
mov
ret
in
in
and
rolb
in
adc
pop
or
push
push
mov
fldcw
mov
loope
push
dec
dec
push
out
jno
mov
int
sahf
sti
pop
pop
out
test
in
imul
lcall
sub
inc
popa
ret
dec
js
aad
dec
mov
insb
leave
mov
shl
mov
in
out
dec
lods
loope
jmp
js
out
mov
lahf
jp
jp
adc
inc
fldcw
enter
sbb
inc
mov
xchg
adc
xchg
lods
add
sub
ret
cmp
mov
out
loopne
jmp
jnp
sub
inc
popf
ror
or
or
mov
sbbl
fs
push
int3
jle
rolb
daa
pop
aam
xor
add
jb
sbb
outsb
sub
aad
and
nop
and
scas
xor
inc
sbb
repz
insb
cltd
mov
inc
inc
inc
icebp
mov
pop
pop
out
aam
std
xchg
addr16
sbb
xor
insb
jns
push
fadds
shll
mov
adc
dec
cmp
add
je
mov
ficoms
div
fidivl
sbb
dec
out
ja
nopl
lock
ret
call
push
push
jbe
insb
shrl
sub
aaa
and
pop
aas
shrl
les
lods
icebp
adc
mov
cmpsl
rcl
xor
cmpb
cmp
leave
xor
lods
xor
xor
aaa
outsb
lods
sti
xor
cs
cmpsb
aad
mov
lock
mov
into
xchg
add
push
sbb
add
mov
popa
cmc
sbb
shll
and
mov
fcmovu
xchg
clc
test
repz
iret
arpl
adc
add
sti
pusha
jnp
in
popf
imul
add
push
int3
push
jl
sahf
sub
rcrl
sub
outsl
or
or
test
mov
mov
jno
call
mov
mov
cs
push
add
push
outsl
int
mov
loopne
fcmovne
jmp
add
jbe
and
sbb
fiadds
dec
sbb
mov
adc
jge
repz
or
cmp
jo
ret
ret
push
dec
sti
clc
cmp
mov
push
add
aam
scas
xchg
and
outsl
aad
iret
adcl
push
shlb
jp
xor
pop
repnz
inc
stos
jl
mov
cmp
jl
fisubrl
mov
test
int3
mov
fldl
sbb
xor
add
scas
cmp
push
cmpl
cltd
movsl
das
jmp
popf
and
out
mov
xor
mov
dec
pop
fldcw
fcmovb
sub
add
push
js
mov
pop
movsb
scas
mov
enter
sub
push
enter
cmc
adc
or
xchg
jmp
es
xchg
ret
daa
cs
jmp
mov
push
or
aam
andl
and
mov
insl
sub
adc
or
xor
imul
repnz
and
test
mov
xchg
aas
mov
push
es
test
cmpsl
imul
rclb
cmp
mov
adc
test
clc
ror
push
daa
cwtl
inc
push
out
cmc
mov
push
out
add
popf
imul
ret
mov
pop
lods
clc
dec
adc
test
mov
mov
jle
pop
jle
lds
in
xor
push
mov
mov
movsl
nop
jbe
nop
sbbb
jo
push
mov
mov
cwtl
subl
xor
add
scas
cmp
sbb
mov
bts
dec
add
dec
jl
or
ret
xchg
cmpsl
mov
mov
push
or
sarb
mov
pop
or
ret
addr16
cmp
mov
and
adc
fwait
sub
jmp
ds
cmp
sahf
mov
aam
xor
mov
xchg
fadds
dec
jecxz
sarb
jnp
popa
push
cmc
jp
cmp
adc
push
icebp
or
ret
arpl
cwtl
aam
cmp
jl
sub
lahf
loopne
aad
lcall
out
and
cld
das
js
mov
cmc
rol
lea
xor
rcrl
inc
mov
testl
mov
enter
or
pusha
mov
fistl
out
mov
xlat
das
cwtl
sar
mov
mov
mov
fsub
push
mov
loope
mov
mov
jg
insl
mov
roll
gs
xchg
or
outsl
add
jle
push
pop
lock
inc
cmp
jge
mov
imul
add
push
inc
daa
sbbl
inc
add
mov
test
mov
and
ss
xor
je
int3
pop
enter
stos
inc
cwtl
xor
mov
stos
fnstenv
fs
mov
test
into
inc
loope
cmc
mov
pushf
lahf
jge
inc
imul
lcall
fisubs
rorl
mov
jo
pop
std
popa
pop
mov
mov
aad
or
and
ds
inc
fwait
mov
mov
mov
mov
mov
dec
ret
dec
xor
xor
push
xchg
mov
push
out
sub
jp
andb
mov
pop
test
add
pop
sub
ret
sub
mov
mov
or
ja
xor
loopw
lods
les
inc
and
inc
xlat
mov
push
jmp
inc
pop
movsb
call
out
add
mov
nop
loop
jns
repnz
popa
jno
inc
lret
or
sub
lcall
ret
popl
jnp
insb
and
push
adc
orb
into
dec
add
or
jb
sbb
fldcw
shrb
cmp
mov
xchg
xor
mov
jp
jb
nop
adc
lea
jmp
jne
ret
mov
xor
adc
mov
mov
outsb
add
cmc
inc
push
gs
sbb
push
xor
xor
les
jne
aaa
lods
dec
aam
jb
push
push
cmpsb
push
jecxz
push
sbb
inc
out
clc
rsm
sbb
stos
jbe
inc
push
or
test
loop
adc
push
pop
lret
imul
loope
sub
iret
lods
push
or
mov
inc
pop
jae
push
enter
pop
movsb
test
push
pop
pop
cld
adc
icebp
jle
and
idivb
xor
xor
shl
and
add
cmp
repnz
mov
iret
loope
pop
test
add
jnp
cmpsb
pushf
call
cmpsb
mov
mov
paddusb
scas
push
add
push
aas
push
ljmp
jp
test
scas
lret
cmp
sub
cli
dec
jl
or
sbb
pusha
push
mov
push
outsb
inc
in
call
jb
test
add
push
sub
and
aad
movl
fistpll
je
jge
cld
push
cmp
sti
cli
jo
sahf
into
push
icebp
mov
and
pop
std
arpl
aaa
jo
pusha
jae
aaa
cmpsb
jbe
push
movsb
loop
adc
loopne
in
mov
rorl
loop
fldcw
jo
pop
test
popa
jo
test
push
adc
dec
fimull
js
jp
lock
sub
mulb
or
inc
push
sbb
adc
xor
nop
popf
jnp
and
scas
in
mov
in
out
sbb
mov
mov
sbb
stc
push
inc
and
test
lods
mov
cmp
sub
out
cmpsb
call
mov
in
mov
nop
jp
lods
dec
out
stos
divb
dec
sbb
pushf
lock
ret
sbb
jg
cmp
roll
jge
fiadds
icebp
pop
dec
js
hlt
bnd
das
sbb
add
mov
xor
mov
out
lahf
and
fstpt
test
loopne
mov
dec
jb
faddl
outsb
cmpsb
xchg
in
sti
cwtl
mov
sub
cmp
imul
arpl
ds
xor
test
enter
pop
cld
mov
inc
ljmp
inc
add
xorb
std
jl
stos
sub
shlb
jp
add
int3
insb
out
mov
add
xchg
mov
push
subl
ret
sub
pop
or
and
lds
repz
xchg
xlat
mov
lock
adc
stos
aam
pop
pop
push
push
cmp
sub
and
mov
push
shrb
dec
and
int3
mov
jne
decb
cli
mov
lea
sahf
mov
mov
mov
pop
outsl
pop
xchg
mov
fwait
cmp
jb
jmp
fnstsw
out
lret
mov
leave
push
push
loopne
xor
cli
stos
cmpsb
mul
mov
adc
decb
orl
fisttpl
ja
push
ljmp
ds
popa
xlat
in
cmpsb
add
rorb
lret
cmp
ret
jp
cmpsb
pushf
subb
inc
fnsave
imul
and
xchg
cmp
test
loop
js
rorb
push
and
in
xchg
loopne
lods
mov
rolb
bound
push
mov
in
insl
dec
pop
fnstenv
cmpsb
jbe
ret
int
call
mov
repz
cli
in
ja
je
mov
rcrb
dec
adc
enter
repnz
sub
mov
mov
push
add
pop
jo
sub
and
popf
pushl
or
dec
ja
mov
ja
lret
or
cmpsl
insl
mov
daa
shlb
icebp
mov
addr16
inc
xor
ja
lods
lea
roll
mov
jae
stc
inc
xchg
pop
lret
testl
xor
dec
ds
fdivs
pop
and
mov
mov
xor
test
roll
in
push
popl
sub
mov
dec
ja
jae
nop
and
cmp
or
pop
pop
push
push
fnstcw
ds
fidivrl
xchg
mov
and
pop
ds
mov
dec
dec
ja
jle
popa
lahf
xchg
push
test
xor
leave
inc
popa
and
cmc
add
and
push
icebp
pop
pop
push
scas
push
loop
add
pusha
mov
ret
sub
data16
pop
xchg
jnp
stos
fadds
dec
fwait
adcb
incl
cmp
fstpl
jge
cs
dec
inc
mov
cmp
inc
mov
sub
movb
cmp
leave
dec
sarl
movsl
push
mov
stos
jmp
add
shl
iret
or
scas
mov
mov
dec
sbb
iret
das
add
addr16
or
cmp
inc
sub
andps
mov
pop
movsl
push
into
pop
adcl
sbb
rcll
pusha
sbb
insb
gs
notb
aaa
shrb
int3
push
inc
sbb
adc
jbe
sub
sbb
out
pop
push
push
push
data16
addr16
sti
das
in
aaa
clc
stos
daa
fdivl
orb
jae
lods
mov
push
push
je
stos
pop
jno
aam
mov
lcall
jmp
cmc
pusha
push
adc
push
xchg
scas
scas
or
movsl
cmp
sahf
and
mov
call
int
xor
mov
rcrb
fisubs
and
icebp
rorb
cmp
shlb
icebp
xlat
add
mov
dec
repnz
adc
mov
adc
or
stos
adc
fcoms
subl
lds
int
std
mov
mov
leave
xor
sbb
rolb
icebp
cmc
push
sahf
cmp
xor
fiaddl
fnstcw
call
or
cmc
pop
pop
test
fdivp
clc
jle
fcomip
mov
jle
push
call
add
and
cmpsb
push
mov
je
inc
repnz
sbb
push
sbb
stos
fistpll
jo
jae
loopne
je
xchg
xor
js
insl
push
push
cmpsb
int3
inc
aaa
js
icebp
or
push
flds
mov
pop
fdivs
push
adc
jg
dec
sbbl
xor
pop
stos
cmp
push
fldenv
mov
and
lcall
mov
lahf
cltd
hlt
add
or
stc
or
mov
mov
cmp
out
add
xor
dec
dec
pop
aaa
insl
adc
xor
dec
in
push
mov
lods
arpl
and
and
mov
pop
insb
jo
aaa
mov
mov
inc
mov
je
iret
and
push
sub
fidivrs
aad
popf
and
enter
shr
xor
fcmovne
xor
jecxz
cld
fadds
sbbl
xor
push
jge
mov
adc
popa
jns
daa
pop
cld
cld
sbb
popl
stc
loop
dec
ret
jle
or
out
dec
inc
pop
arpl
mov
mov
fiadds
sub
cltd
insb
loop
dec
in
xor
in
and
push
insb
imul
xchg
imul
mov
aaa
adc
pop
fwait
pop
mov
pop
movsb
dec
add
xor
push
mov
mov
push
mov
jge
add
movsb
scas
mov
sbb
jae
cmp
mov
sbb
notb
shl
icebp
call
and
ss
cmpsl
jg
dec
addl
add
push
sbb
insl
shlb
rol
inc
and
or
mov
test
push
gs
loop
adc
fdivs
inc
fprem
sub
mov
xchg
mov
sbb
test
ja
xor
scas
icebp
mov
jg
repz
lea
add
xor
aas
xor
in
and
jnp
xchg
hlt
sub
mov
pop
mov
pop
ljmp
push
icebp
repnz
dec
ret
pop
jge
das
push
or
paddusw
fcoms
jmp
ds
add
xchg
cmpsl
sub
push
dec
sub
jo
sbb
jnp
inc
test
scas
mov
in
out
in
cmp
or
bound
popf
out
in
enter
bound
push
and
les
sub
jg
enter
jbe
outsb
dec
inc
push
cmc
xchg
or
leave
imul
xchg
stos
pop
iret
xchg
xor
adc
xchg
std
mov
out
out
stc
pop
dec
test
lahf
sbbb
add
sub
outsb
xor
in
xchg
pop
gs
push
mov
test
and
mov
in
mov
add
sbb
lret
xor
push
mov
pop
movsl
jecxz
mov
push
xorb
adc
insb
dec
js
out
push
or
push
inc
push
fsub
aaa
inc
lock
leave
and
lcall
push
jbe
dec
divl
add
loopne
cwtl
fistl
pop
add
ret
ljmp
shlb
xor
xchg
adcl
cmpsl
cs
cmc
dec
call
fdivrs
sbb
mov
fwait
dec
dec
mov
push
outsl
fbstp
pop
fwait
pop
mov
push
mov
daa
xor
ss
int3
sahf
mov
insb
in
stos
add
jb
jg
xchg
mov
xchg
mov
mov
mov
xchg
dec
pusha
arpl
cmpsl
cltd
sub
gs
mov
ret
dec
sub
sub
mov
mov
xchg
add
or
cmpl
lods
or
lods
movsb
pop
dec
mov
adc
or
mov
imul
inc
mov
mov
sti
loopne
divb
js
lea
cmp
imul
mov
lock
mov
popa
pop
fcomps
cmp
ss
fiadds
and
imul
outsl
mov
out
les
cltd
stc
and
repz
xchg
imul
mov
mov
inc
xchg
pop
cli
stc
lret
sti
pop
push
inc
dec
and
int
push
lods
push
nop
ja
out
loop
lock
xlat
jne
pop
mov
loop
ds
fmull
xchg
mov
rcll
cmp
mov
repz
mov
xchg
imul
xor
adc
and
std
push
mov
ret
pop
movsl
dec
or
mov
lret
xchg
adc
and
in
inc
test
xor
xor
dec
outsb
shll
or
lret
cmp
push
dec
popa
pop
mov
cmp
test
jle
ret
jb
aas
xchg
insl
mov
inc
in
jae
ret
add
push
inc
dec
arpl
fisubrs
lret
xchg
and
cmpsl
pop
cmpsl
fsts
in
add
lahf
pop
jns
cltd
aaa
call
ljmp
and
adc
pop
aad
rcrl
mov
popf
sub
roll
pop
ret
sahf
outsl
insl
sub
leave
xchg
xor
cmp
cmp
cs
mov
gs
jmp
loopne
dec
add
lods
xorb
lea
jno
pop
push
shr
pop
mov
sbb
push
insb
and
jae
imul
mov
dec
mov
adc
and
sub
pushf
mov
xchg
mov
inc
adc
xchg
or
inc
pop
pop
and
out
push
es
add
sub
lahf
add
inc
add
dec
jae
dec
das
xchg
xor
mov
sub
mov
pushl
fwait
pop
cmp
pushf
pop
jnp
aam
call
cmp
mov
or
mov
aas
aaa
stos
mov
add
or
mov
sbb
xchg
sbb
mov
test
sub
roll
jmp
insl
add
xor
cmp
mov
xchg
into
xchg
xor
out
cmp
fdivs
sbb
mov
testl
mov
ss
pushf
je
push
push
dec
test
cltd
icebp
sub
push
aas
push
movsl
jae
mul
xchg
shlb
sub
and
repnz
xor
test
dec
xchg
push
addr16
or
cmc
pushf
daa
mov
aam
js
cli
jmp
mov
and
out
call
xor
pusha
inc
dec
inc
sub
pop
pop
lea
or
pop
negb
mov
pop
or
pop
bound
inc
enter
inc
pop
adc
fdivrs
jb
cmp
and
fimuls
ss
inc
mov
add
push
sbb
stos
pop
cmp
mov
in
or
xchg
aam
enter
ret
daa
jb
cmp
test
mov
insl
testl
dec
roll
lock
sub
dec
xorb
aam
out
fstpl
sub
stos
nop
cmp
lcall
test
cmpsl
mov
inc
std
jg
mov
mov
fistpll
iret
sbb
push
test
adc
inc
pop
in
xchg
test
imul
inc
adc
pop
in
sti
movsb
xor
in
test
jns
jmp
mov
cli
ret
test
mov
add
add
dec
les
ret
mov
daa
mov
mov
test
inc
dec
fisubl
xchg
dec
fs
sub
or
cmpsb
pop
int
inc
test
ret
jmp
or
dec
insl
push
adcb
jae
add
stos
jae
mov
dec
idivl
aam
fists
lds
gs
pop
lahf
pop
sub
repz
or
out
addl
inc
int
cld
xor
mov
mov
lea
push
push
jne
sti
inc
das
sete
loop
rolb
ror
sar
shll
lret
cmp
mov
ja
pushf
sub
adc
add
dec
ds
pop
dec
jno
adc
and
cmp
mov
mov
push
or
sub
data16
cmp
stc
mov
sbb
jae
aam
enter
mov
dec
inc
add
stos
loop
nop
dec
pop
aam
fcoml
push
cmp
mov
out
repnz
pop
dec
and
mov
fidivl
pushl
inc
je
push
scas
mov
std
mov
in
push
test
ret
dec
jmp
inc
cmpsb
pusha
mov
sbb
cmpsb
jb
pop
dec
push
sbb
mov
or
add
pop
xor
imul
dec
jecxz
fistpll
fisubrl
loopne
movsb
adc
cmp
lahf
mov
cwtl
cmp
fs
adc
add
repz
xchg
fwait
pop
mov
decl
mov
repz
mov
in
jae
icebp
adc
dec
push
ds
xlat
cwtl
cmpsb
pop
nop
pop
xchg
repz
fmull
push
fisubrl
inc
stc
jp
cmpsb
jle
iret
pop
or
add
dec
inc
test
std
add
jb
lret
call
add
adc
push
jne
jg
andl
shlb
sarb
test
mov
repz
pusha
jmp
pop
jne
pop
cmp
shrl
jge
fcompl
sub
xchg
test
push
ds
fiaddl
cmpsb
iret
and
pop
idivb
ficoml
mov
aas
sub
or
testb
das
fsubrs
les
sub
stos
bound
sarb
cwtl
cld
jl
sbb
in
push
mov
mov
std
sti
inc
jne
ret
jne
roll
in
jg
inc
adc
fwait
test
rorb
push
xchg
jmp
and
jnp
pop
pop
fxch
inc
mov
inc
ret
adc
shlb
jo
and
jle
mov
pop
push
repz
xchg
iret
push
adc
jbe
dec
xor
adc
arpl
adc
cmp
sbb
dec
inc
into
add
adcl
dec
sbb
xchg
or
bound
sub
frstor
push
push
sub
pop
push
mov
fmuls
aaa
clc
cli
ss
cli
pop
cmp
adcl
in
scas
testl
or
mov
into
fsubr
scas
inc
push
shrl
adc
sbb
pop
fwait
in
and
xor
gs
sub
outsl
mov
jmp
or
push
mov
inc
hlt
test
dec
shlb
xorl
ja
xlat
frstor
sub
in
clc
inc
jns
or
sbb
or
fbld
ss
push
test
add
push
out
ds
leave
sub
or
pop
and
in
ja
add
push
mov
arpl
add
pop
int3
push
push
cmpsl
push
sahf
scas
add
sti
push
jge
jl
ja
xor
push
dec
jle
mov
stos
sub
jo
testb
mov
xchg
push
inc
inc
clc
mov
sbb
xor
jnp
test
xor
push
mov
or
ja
sbb
cmpl
mov
push
outsl
pop
in
sahf
pop
mov
shrb
dec
outsl
pop
pop
adcl
hlt
pusha
add
loopne
ja
pop
not
test
jb
inc
sahf
inc
push
inc
push
dec
or
xlat
andl
or
and
jnp
mov
je
std
in
fisubrs
inc
xchg
out
es
mov
std
popf
idivb
mov
bound
xor
insl
cs
add
xor
call
or
in
cmp
stc
inc
mov
dec
xchg
jno
dec
jecxz
fucompp
adc
cmovp
push
xchg
dec
inc
inc
fwait
xchg
add
sti
inc
int
lcall
mov
lds
in
xchg
stc
out
jge
and
cli
aad
repnz
inc
cli
push
lods
pop
test
push
data16
push
out
orb
popf
and
push
cmp
fnstcw
clc
rorl
stos
jbe
jo
das
dec
push
stc
dec
push
stos
lods
iret
js
ljmp
mov
les
pop
mov
rolb
inc
add
cs
add
or
je
movsb
mov
cmp
addr16
test
hlt
jno
cmp
mov
rclb
jnp
leave
lret
shlb
xor
mov
fs
xchg
dec
push
int3
mov
jle
xchg
lcall
ror
jne
mov
mov
in
cltd
pop
pop
dec
outsl
dec
lods
inc
aam
dec
pop
push
sub
inc
rorb
sub
push
inc
and
xlat
movsb
cmpsb
inc
ljmp
pusha
add
mov
mov
mov
cmp
mov
fucomi
mov
sub
pop
adc
shrl
and
add
inc
jns
or
xchg
pop
cltd
inc
sub
and
dec
cmpsb
das
gs
sub
rorb
loop
dec
das
xchg
and
fninit
push
cld
nop
push
sub
sub
adc
in
lahf
pusha
call
sub
repz
push
test
or
push
outsb
loop
pop
cmpsb
mov
scas
jmp
jbe
lahf
mov
lea
test
jge
scas
sbb
test
push
mov
and
lds
icebp
stos
mov
lock
addr16
lret
pop
or
dec
ja
dec
rdmsr
mov
arpl
and
in
enter
add
lock
movsb
je
movsb
sti
or
out
inc
cmp
mov
aas
rcrl
out
and
aas
xchg
xor
push
xchg
sbb
stos
jmp
sbb
testl
outsb
cmp
lods
and
jbe
jns
stos
outsl
cmp
xor
mov
rcrb
mov
cmc
mov
mov
inc
mov
lods
cs
add
lcall
fstpt
cli
sahf
add
jno
inc
push
xchg
test
xchg
into
pop
bound
pushf
cld
lock
push
stos
lds
push
or
mov
mov
xchg
stc
mov
pop
subb
imull
push
testl
fsubs
adc
push
mov
icebp
cmpsl
insb
aad
std
lods
roll
mov
sub
push
in
dec
or
into
jl
je
mov
inc
das
adc
sub
aaa
clc
rorl
inc
in
and
inc
mov
scas
inc
pop
jge
std
hlt
xor
int
ljmp
mov
aas
repz
jecxz
push
mov
push
cld
xchg
dec
mov
add
cmpsl
mov
mov
dec
pop
jb
into
mov
or
inc
xchg
int3
push
jmp
out
ret
iret
hlt
xlat
mov
out
jp
push
in
test
lcall
mov
aam
cmp
xor
and
sbb
das
mov
mov
cmpsb
adc
lret
sub
adc
mov
incl
adc
in
add
dec
ficomps
mov
in
in
or
mov
dec
mov
xchg
inc
daa
mov
outsb
mov
lock
fistpll
scas
push
mov
jge
dec
f2xm1
mov
mov
xchg
push
cmp
mov
sbb
lahf
ja
dec
mov
pop
into
stos
cmpsb
repz
cmp
xlat
imul
push
lods
ss
lahf
add
jp
int
into
jge
int
add
aam
sub
lock
mov
mov
jbe
sbb
mov
js
cwtd
add
insl
lods
xor
fisttpll
push
cmp
dec
je
add
lahf
xor
push
outsl
sbb
ret
xchg
add
loop
or
sbb
or
mov
mov
mov
add
push
iret
dec
inc
iret
cmp
ss
adc
cltd
stc
and
mov
pop
mov
aas
pop
or
or
xor
enter
fldt
push
sub
xchg
out
jp
mov
pop
je
ret
or
gs
ret
adc
into
sub
xchg
lea
jge
pop
cmp
rcr
out
notl
arpl
xor
sbb
stc
repz
and
sbb
cmp
sbb
test
mov
dec
rcll
sbb
int3
andl
es
rorl
pop
sbb
jp
inc
lods
test
or
enter
cmpsb
out
int3
pop
push
rcrl
inc
mov
push
cmpsl
dec
mov
and
mul
jb
stos
pusha
in
test
mov
rorl
mov
push
sahf
test
cmc
or
stos
push
das
mov
xchg
fwait
lods
or
sub
and
in
mov
in
add
lahf
push
push
lea
push
push
mov
sub
push
jns
pop
dec
mov
mov
mov
mov
push
mov
cs
enter
lcall
push
inc
arpl
inc
jae
push
ss
fcmovnb
pop
push
dec
cs
mov
jmp
xchg
xchg
push
pushf
pop
or
movq
dec
lds
out
lock
add
xor
lock
call
pop
hlt
push
out
or
add
jmp
or
dec
pop
fcoml
arpl
imull
dec
out
jecxz
sbb
aad
lret
mov
std
dec
mov
mov
push
cmpsb
cs
sub
sti
mov
add
push
mov
inc
sbb
sbb
jae
xchg
fs
scas
aad
xchg
push
pop
xchg
pop
pusha
loopne
lret
sbb
mov
push
mov
xchg
inc
fsubrs
fwait
ss
dec
leave
lahf
adc
insl
jnp
es
mov
mov
xchg
mov
dec
lret
mov
mov
fnsave
das
or
sarl
sti
add
daa
push
fisubl
jae
leave
adc
aas
cmp
push
loope
stos
shrb
mov
rcrb
and
mov
call
and
into
inc
and
cmpsb
jbe
daa
jmp
adc
mov
in
inc
rolb
jle
mov
jbe
mov
jb
out
clc
pop
cmpsb
push
aaa
sti
mov
jle
jne
mov
jnp
mov
dec
int3
fisubrl
dec
inc
xchg
cmpl
jae
adc
aam
inc
xlat
inc
mov
insb
dec
fisttps
push
dec
mov
sub
shl
or
arpl
xor
xchg
rorl
pop
jbe
and
fisubrl
mov
stos
sub
movsl
out
mov
jae
test
mov
inc
call
pop
xchg
mov
lock
sub
test
mov
mov
cmpsb
int
ret
loope
in
sbb
dec
int
popa
mov
or
movsb
cmpsb
les
cmpsb
cmp
stc
fcomip
test
ds
in
add
mov
xchg
jne
lret
outsb
movsb
jae
jg
repnz
inc
jmp
fnsave
xor
push
icebp
inc
loop
ds
xlat
or
loop
fst
jmp
and
int3
ror
sbb
jno
leave
pop
nop
xchg
fcompl
lock
mov
cld
xchg
icebp
cmp
pop
mov
sbb
ret
cmp
sbb
fwait
in
pop
xchg
loope
inc
mov
ljmp
daa
clc
push
int3
jb
and
push
push
ror
xchg
or
insl
repnz
pop
xor
jne
mov
test
test
push
or
dec
insb
lcall
inc
test
mov
mov
mov
add
push
add
bound
dec
cmp
push
test
test
or
push
xor
rcll
adc
out
push
or
add
test
ffree
imul
cmp
outsl
push
cmp
incl
push
or
and
lret
mov
xorb
mov
mov
jne
sub
pop
fisubrl
cmp
mov
sub
jno
mov
movsb
pop
pop
sbb
xor
pop
jge
addr16
push
imul
repz
inc
hlt
jle
into
lret
mov
mov
inc
leave
popa
dec
hlt
pop
out
jle
in
xchg
or
es
mov
xor
out
xor
lds
fldcw
adc
loopne
push
jne
or
mov
sub
ds
dec
and
xor
or
cmc
pop
push
lods
outsb
jne
and
test
pop
rcrb
enter
js
or
cmp
jp
xchg
rorl
jb
pop
movsl
shll
inc
xchg
pop
push
dec
xchg
stos
enterw
shrb
cmpl
cmp
xchg
icebp
arpl
in
pop
adc
xor
inc
rcll
data16
out
subl
ss
cmc
es
dec
dec
movsb
insb
xor
cmp
f2xm1
and
mov
sbb
push
fadds
cld
mov
in
sbb
orb
or
fildll
xchg
fisubs
mov
pop
pop
add
imul
adc
arpl
fldt
xchg
hlt
into
sbb
cmp
inc
jno
jmp
xor
call
or
daa
sub
fisttps
and
mov
xor
scas
cmpsl
fidivl
sahf
inc
add
ret
fstpl
clc
rorb
mov
test
mov
pop
cmp
xor
add
stos
lret
fstl
in
andl
into
add
adc
popf
adc
std
dec
pop
bound
mov
std
inc
test
xchg
in
push
data16
jle
rorb
jne
mov
mov
cld
sbb
andb
int3
jmp
sbb
mov
cmpsl
mov
sbb
push
cli
rcll
push
lret
mov
adcl
mov
int3
or
sub
sbb
xchg
daa
xor
cmpsl
push
inc
xchg
add
adc
in
popf
pop
in
add
stos
cmp
jne
or
rolb
push
sub
stos
pop
or
rolb
imul
mov
pop
sbb
sahf
dec
inc
cmp
sbb
loop
dec
fadds
dec
inc
pop
clc
add
push
popa
push
jae
pop
test
and
and
mov
xchg
jb
in
jbe
arpl
inc
dec
dec
lcall
push
xchg
dec
push
sub
pop
icebp
lret
jg
and
sbb
inc
xor
push
daa
jmp
aaa
jns
sub
into
or
pop
or
mov
push
arpl
fdivl
cwtl
or
adc
inc
in
mov
sbb
pop
cmc
js
lret
xchg
mov
mov
or
pop
xor
push
inc
in
int
mov
inc
dec
push
loop
imul
add
cli
xor
lods
mov
aad
ljmp
ljmp
sahf
lock
and
lret
fs
push
out
mov
fsubs
clc
and
testb
cmp
fst
imul
dec
xor
loop
sub
mov
inc
fcompp
jnp
dec
fs
xlat
les
test
jae
lahf
pusha
mov
jg
inc
mov
test
scas
daa
mov
jge
xchg
dec
sbb
adc
sub
cmp
and
sub
gs
pop
sbb
lods
lods
add
xor
loopne
popf
loope
mov
sarl
mov
push
adc
addr16
jno
repz
testl
pop
das
call
clc
cltd
pop
cmpsl
lcall
vmaxss
push
enter
cld
and
inc
and
adc
mov
and
out
xchg
cmpsl
movsl
loopne
push
icebp
bound
lods
dec
mov
out
in
pop
xorb
pop
out
dec
mov
mov
mov
cmp
and
imul
ficoml
and
movb
jbe
pop
jns
push
jmp
inc
mov
mov
mov
ljmp
xchg
xchg
pop
cwtl
aad
push
inc
jno
mov
inc
rolb
lock
sti
gs
test
outsb
fcoms
fldl
push
or
jns
or
jge
jl
testl
scas
or
test
ja
aaa
inc
daa
test
test
push
push
jno
adc
loop
icebp
sub
mov
sbb
out
fimuls
mov
js
mov
mov
pop
push
inc
xor
cld
jb
in
cmp
popf
out
shufps
mov
and
push
sti
mov
sbb
insb
or
cli
int
mov
clc
jge
out
mov
rcrb
and
inc
xor
jle
mov
cmp
pusha
inc
cli
pop
lea
lods
repnz
add
inc
and
sbb
daa
mov
adc
mov
arpl
ret
xchg
pop
jg
mov
jecxz
je
js
ret
dec
cmp
sbb
mov
jmp
ds
xchg
fldl
movsb
mov
cwtl
xor
imul
jnp
xchg
fsubl
out
outsb
adc
scas
push
js
push
cmc
cmp
xor
mov
jne
jmp
push
shl
or
xchg
cmc
cmp
cmpsb
rcrl
mov
arpl
arpl
sarb
mov
test
jmp
pop
pop
rorl
jmp
repnz
in
data16
mov
sub
pop
add
movsb
movsb
sub
and
sbb
lret
mov
jo
in
sub
leave
lahf
ret
inc
jne
pop
call
movsb
dec
aam
cld
bound
push
push
lea
rcrb
in
mov
pop
cmp
stc
fisttps
xorl
fsubrl
clc
adc
jp
xor
shll
mov
fistl
jl
or
shlb
mov
into
aam
lret
cmp
mov
push
jb
jae
mov
fldlg2
das
imul
sub
inc
mov
and
jecxz
jmp
out
lds
imul
pop
xor
dec
in
mov
stos
int
ret
imul
push
push
out
int
jnp
sbb
mov
cmpsl
dec
sbb
loope
inc
and
into
sbb
add
xchg
pop
mov
shlb
cmpsl
mov
mov
mov
les
insl
aad
add
xchg
cmp
call
out
movsb
jge
push
dec
jecxz
dec
cmpsl
jo
mov
mov
xchg
push
adc
jg
lcall
rorl
jle
leave
leave
lods
repz
add
mov
adc
or
outsb
xor
mov
xchg
sub
dec
lds
mov
je
xor
sub
cmp
jno
cmp
mov
lea
loopne
shll
pop
in
push
leave
or
pop
push
cmpsb
push
std
cmpsb
xor
nop
shll
arpl
insl
lret
add
lods
and
xor
and
adc
push
sub
in
push
dec
sub
pop
and
or
xchg
loop
loop
push
xchg
aaa
jmp
sbb
filds
jl
das
mov
adc
jo
shr
adc
sbb
or
leave
jo
rcl
xor
xor
jno
mov
jge
inc
adc
push
shlb
stos
popa
xor
mov
lds
pusha
and
inc
sahf
jl
clc
push
push
or
shll
dec
adc
clc
or
sbb
aad
cmc
xchg
or
shll
pop
je
xor
inc
cmc
outsl
lret
sbb
jl
inc
pop
jmp
mov
mov
pop
cmc
lahf
cmp
add
mov
sub
mov
adc
rcrl
out
rcrl
xchg
cmpb
add
pop
sahf
xchg
ficoms
pop
in
xchg
jb
push
cmp
daa
std
sub
cmp
data16
aam
in
xchg
fdiv
adc
inc
sbb
movsl
xchg
jno
sbb
imul
inc
in
mov
dec
inc
and
popa
push
xchg
mov
jo
mov
mov
pop
inc
pushf
pop
xchg
movsb
xchg
dec
jne
xorl
jb
sbb
sbb
xchg
mov
cmp
and
ss
add
pop
mov
mov
aad
adc
jp
aaa
mov
jl
inc
test
iret
bound
insl
cmpsl
je
popf
sar
repnz
aad
mov
mov
add
mov
mov
repz
adc
lret
mov
pop
out
clc
mov
pop
mov
push
repnz
jge
xor
cltd
mov
lods
push
mov
mov
jl
ss
push
lods
aaa
repnz
rclb
pop
test
xchg
cmp
push
daa
movntq
and
cld
jbe
sbb
test
addr16
test
fbstp
cvtpi2ps
imul
sbb
clc
jae
adc
out
repnz
mov
jge
addr16
rorl
sub
call
ret
daa
pusha
mov
bound
or
mov
cmp
and
mov
fists
enter
ds
mov
sti
out
sti
inc
test
flds
or
out
jae
ret
pop
pop
cmpsb
jb
out
sub
and
lcall
fnsave
pop
mov
jbe
add
subl
push
or
fwait
pop
or
in
add
imul
mov
cltd
ja
cmp
cmp
mov
add
movsb
insb
sub
roll
mov
add
cmpsb
mov
addb
in
cwtl
jl
sti
rclb
mov
inc
cmp
shlb
sbb
push
mov
xchg
dec
bound
or
cmpsb
cmp
fistps
ljmp
inc
les
aas
add
mov
test
sbb
mov
cs
rcr
push
mov
adc
test
stc
shl
push
and
jl
int3
cmpsb
and
cmp
sub
bound
mov
mov
inc
add
jg
or
or
data16
xchg
test
dec
xchg
mov
xchg
pop
aam
ud1
cmp
mov
cmpsl
lret
mov
inc
mov
or
and
or
call
clc
lea
loop
mov
mov
fbstp
je
std
mov
cmpb
in
mov
scas
add
hlt
js
rorl
pushf
or
loope
xchg
add
cmp
mov
mov
push
xor
pushf
inc
add
push
arpl
xchg
es
cmp
leave
xchg
lods
out
sub
loope
mov
lcall
ret
je
and
push
repz
jno
mov
lret
adc
into
xor
popa
shl
les
mov
rclb
shlb
movsl
xchg
bound
das
mov
out
lds
dec
sub
sti
nop
xchg
push
push
ret
andl
in
mov
cs
icebp
mov
push
or
scas
mov
lcall
rcll
hlt
push
mov
into
bt
and
imul
popa
and
or
mov
inc
lds
aad
rcll
jecxz
insl
or
mov
push
push
xor
mov
test
xor
sbb
dec
sub
out
loopne
mov
sbb
mov
out
lcall
inc
add
and
add
xor
sti
test
sbb
pop
in
xchg
ss
cmp
ds
fbstp
loop
ja
inc
outsb
mov
cvttps2pi
push
sarl
sbb
fsubl
outsb
inc
sub
or
out
dec
iret
js
xchg
inc
scas
cmpsb
inc
dec
lret
mov
pop
pop
fisttpl
pop
ja
out
jecxz
std
mov
adc
dec
sub
pusha
add
adc
mov
mov
shrb
cwtl
lds
mov
es
out
test
mov
mov
lods
sub
add
inc
mov
lahf
pop
xor
jns
sbb
mov
sbb
sarb
lret
adc
fiaddl
adc
js
and
test
xchg
mov
or
mov
xor
push
sub
pop
mov
mov
in
cmpsl
stc
bound
fldl
jmp
bound
xchg
dec
icebp
stos
les
mov
xchg
test
fbld
mov
test
sub
push
jg
sti
cli
les
div
pop
sub
cmpsl
insb
mov
push
bound
roll
fists
or
dec
jo
sbb
xor
push
shrb
inc
lock
mov
stc
xor
mov
shlb
jbe
popa
sti
xchg
es
test
cmpsl
fsubrs
jl
mov
rorb
or
pop
mov
sti
je
pop
xor
or
test
imul
sub
mov
movlps
mov
fnstsw
or
pop
test
sti
aad
push
add
cltd
shll
movntps
int
movsb
rorl
add
fnstenv
test
cmpsl
inc
test
jecxz
flds
xchg
ret
movsb
inc
sub
leave
clc
inc
insb
adc
dec
and
jle
movsb
flds
inc
sub
pop
or
mov
or
test
mov
and
das
add
in
fdiv
aas
call
dec
stos
cmp
pop
xchg
sti
pop
subl
sub
push
test
repz
inc
cmp
outsb
xlat
imul
movsl
mov
pop
ret
call
xor
mov
addl
inc
cmpsb
push
gs
int3
lahf
stos
cmp
mov
jg
into
and
jl
in
mov
adcl
clc
rcrl
popf
fcmovne
mov
fcoml
mov
xchg
addr16
or
xchg
add
and
mov
xchg
cmpsb
stos
jns
jp
fcoml
out
fidivrl
sub
lds
subb
fs
or
movsl
jecxz
mov
mov
add
es
adc
adc
cmc
pop
gs
cmp
insb
or
inc
insb
loopne
js
ss
inc
jnp
lods
xchg
insl
mov
jl
dec
adc
testl
xor
xor
fbld
push
std
cwtl
mov
jmp
cmp
cmp
repnz
test
mov
fbstp
lds
sub
in
in
mov
lods
cld
shll
mov
popa
add
lahf
jb
sarl
cmp
stc
popa
std
mov
sub
inc
mov
js
push
sahf
cmp
cmp
mov
aam
pop
cld
ret
dec
mov
xor
pop
inc
mov
not
sbb
insb
insl
out
jmp
xorb
jge
xor
xchg
cmp
sbb
sahf
jns
fs
imul
das
popf
and
ds
jle
aad
mov
jbe
int3
push
adc
lret
stos
insl
xchg
or
mov
inc
sub
mov
and
mov
loop
jmp
and
inc
in
inc
cmpsb
icebp
cltd
mov
stc
cmp
lahf
imul
dec
lods
mov
arpl
sbb
xchg
out
div
lret
inc
fs
in
movsb
aam
mov
leave
arpl
push
mov
dec
xchg
mov
pop
lea
adc
jns
les
and
repnz
adc
lahf
jns
pop
packuswb
cmp
je
mov
xchg
mov
stos
cmpsb
jecxz
pop
pop
adc
nop
call
loop
pusha
test
dec
test
lds
int3
xchg
test
mov
sub
mov
push
cmp
jg
gs
or
mov
xor
stc
pop
arpl
and
lahf
jp
lods
aad
scas
lods
xchg
cmp
rcrl
mov
xchg
repnz
bound
cmp
push
or
sbb
sub
arpl
or
pop
neg
test
inc
adc
cltd
jmp
mov
fnstenv
mov
or
lods
lahf
jecxz
cltd
loope
push
jmp
push
jecxz
movsb
insl
mov
scas
notl
pop
call
adc
inc
scas
aaa
test
cmpsb
clc
cmc
stos
fstps
fisubs
call
dec
xchg
push
std
mov
in
fdivs
adc
ret
lea
outsl
iretw
push
and
rol
jnp
xor
test
push
clc
xchg
ret
insb
stos
out
mov
jmp
pop
leave
in
popa
adc
mov
sub
xor
ljmp
or
cmpsl
das
cmp
dec
adc
jne
push
ficompl
xor
lock
push
sub
xor
push
icebp
mov
sbb
loope
mov
cmp
ja
pop
ljmp
jbe
lcall
sub
out
add
out
jmp
pop
fimull
lock
aas
std
aas
sub
loope
test
push
jno
arpl
push
outsl
sub
jp
sub
test
mov
ret
sahf
mov
es
out
test
and
mov
pop
movsb
lods
push
jp
mov
jl
add
in
pop
int3
test
add
xchg
add
sar
lods
fcoml
inc
sub
sbb
mov
sbb
aaa
sti
pop
push
popa
test
or
aaa
cmpb
shll
std
sub
dec
je
xor
sub
popf
mov
test
adc
out
dec
xchg
aas
inc
sbb
mov
sti
aad
adc
ds
dec
lock
push
ljmp
xchg
andb
push
aas
sti
pop
pop
movsl
pop
jl
lods
inc
cmp
mov
cmp
idivl
cld
std
imul
jo,pt
add
lds
dec
mov
mov
and
arpl
pop
mov
xchg
mov
add
cmpsb
cmp
sti
outsb
es
sub
imul
and
test
dec
adc
xlat
cmpsb
das
imul
dec
inc
cmp
dec
aas
aam
fists
sub
add
lea
push
mov
mov
aas
out
dec
inc
shlb
mov
inc
xor
sbb
mov
lock
sbb
ljmp
xchg
xchg
mov
sar
jp
das
pop
int
loop
or
sbb
adc
lock
mov
ja
dec
xchg
mov
loopne
pushf
add
mov
xlat
cmpsb
and
std
movsl
cmp
stos
cmp
push
in
sar
or
mov
das
and
lods
sbb
cltd
push
adc
movsb
jge
leave
pop
cmp
push
push
pop
jg
in
xchg
imul
leave
je
sti
out
test
shlb
mov
xor
fnstcw
cmc
outsl
push
nopl
push
sbb
stc
int
jnp
cmp
jnp
pusha
roll
imul
push
xor
mov
cmp
icebp
pushf
mov
mov
mov
into
call
rclb
mov
xor
in
mov
pop
loopne
add
int
pushf
mov
xchg
int
or
fiadds
fs
aaa
xchg
sub
outsl
adc
mov
sub
fs
xor
xor
daa
fcomi
loopne
xchg
xor
jp
xchg
imul
xor
xor
jmp
sbb
push
push
jmp
iret
aas
pop
lea
aas
jmp
mov
daa
js
xor
addr16
jmp
mov
mov
push
pop
stos
dec
push
xchg
clc
mov
movsl
fwait
pop
aas
and
into
sbb
cmpsb
dec
add
pop
push
mov
fcompl
or
jmp
stos
pushf
xor
inc
mov
test
mov
pushf
or
not
mov
pop
push
dec
push
out
or
les
cwtl
push
iret
rcll
call
adc
mov
sub
shl
nop
jns
ljmp
ss
or
mov
pop
repz
mov
mov
jg
imul
sub
por
popa
mov
pop
sbb
popa
add
ja
sbb
int
iret
dec
cs
sbb
movsl
ret
scas
dec
add
clc
or
cmp
xchg
ret
dec
xchg
sarb
and
call
shll
inc
push
cwtl
inc
adc
enter
dec
xchg
push
and
ret
cmpsl
adc
push
in
add
adc
mov
add
insb
sbb
mov
dec
movsb
lret
loope
fsubl
fwait
xchg
sarb
popf
sub
in
sahf
sub
cmp
lods
inc
fldt
scas
insl
sbb
shll
add
inc
imul
test
stc
adc
je
jge
xchg
int
adcl
insl
sub
fptan
jae
mov
je
push
daa
mov
popa
pop
mov
lea
push
das
jne
pop
movsl
add
call
cmpsl
add
jle
rol
out
and
push
andb
xchg
bound
sahf
ret
xorb
dec
sbb
andps
dec
es
pop
cmp
jge
cvtdq2ps
cmc
mov
push
rcll
rcrb
push
jbe
sbb
push
insb
sub
xor
fcomps
mov
lods
sub
add
add
test
adc
cmp
bound
jle
inc
loop
mov
xchg
cmp
setl
cwtl
mov
ds
fnsave
lret
jge
lods
ds
cli
loop
xor
jle
xor
adc
mov
out
mov
or
sub
mov
jnp
add
cmpsl
in
inc
das
stos
or
xor
sbb
xchg
push
lods
mov
sbb
addr16
lods
imul
cmp
jp
insb
sub
mov
scas
pop
and
sub
stc
jb
dec
xor
shr
cmp
gs
mov
cli
cmp
xor
loopne
lods
cmp
sub
cmp
add
push
add
dec
repnz
mov
sbb
lret
in
pop
cmp
mov
mov
cmp
add
into
sbb
outsl
in
xor
fisttpl
out
in
popf
and
jns
push
jmp
inc
cmp
cli
lods
mov
js
sbb
fildll
sbb
fists
nop
xlat
pushf
mov
inc
push
movsb
push
cmp
sub
adc
jl
movsl
xor
cmp
cmc
add
jecxz
push
outsl
and
dec
xchg
adcb
insl
inc
mov
cltd
push
adc
xor
mov
sbbl
adc
cmpsl
jecxz
cmp
loop
outsl
xor
xor
test
mov
jo
lret
aaa
jae
adc
hlt
sub
sahf
inc
jl
scas
and
ja
mov
jb
sbb
add
fdivrs
fists
sub
mov
daa
je
popw
mov
mov
adc
pop
ret
cmp
sarb
push
cli
lahf
mov
das
js
ljmp
into
jns
pusha
inc
in
stos
or
sarb
dec
cli
mov
ret
mov
jbe
or
int
mov
jns
cmp
xlat
loope
cmp
add
and
mov
lret
sbb
and
push
jecxz
fisttpll
xchg
icebp
popf
mov
jp
int3
push
pop
orl
ja
ja
arpl
sub
dec
xor
dec
pop
ss
call
push
in
jecxz
out
dec
mov
into
xor
cmc
sbb
js
movsl
insl
testb
or
aad
in
mov
imul
lods
out
dec
aad
dec
ds
xorb
imul
fidivrl
sub
je
shrl
test
jo
jae
jp
ss
mov
cmp
sti
mov
addr16
xor
imul
mov
sbb
sbb
cmp
mov
mov
lret
loope
sarb
jg
pop
loope
adc
aam
jbe
pop
jns
xor
aad
xor
addl
lds
mov
dec
cli
push
xor
jns
mov
jle
add
into
lret
or
incb
jb
or
add
jb
clc
push
cs
in
mov
decl
fsubl
mov
pop
and
push
daa
jo
jno
aaa
pop
lcall
xchg
rcrl
mov
sub
sub
sbbb
xchg
xor
dec
in
mov
add
shll
mov
idivb
js
xchg
dec
xor
js
outsl
fcoml
mov
xchg
jmp
aaa
push
xchg
dec
or
cmc
in
inc
mov
push
out
dec
pusha
shrb
mov
dec
loope
or
jns
lret
pop
mov
test
and
mov
mov
inc
movsb
inc
sarb
sbb
imul
and
pop
scas
jle
sbb
test
div
std
scas
cmpsb
mov
jne
call
push
test
mov
fsubrs
loopne
cmp
cltd
clc
jbe
bnd
dec
cld
clc
mov
hlt
ss
pusha
les
mov
xchg
out
sub
add
xchg
pusha
loop
addr16
stc
xchg
in
xchg
inc
adc
lea
cmp
test
divb
inc
push
lea
in
inc
pop
cli
mov
in
aas
jns
xchg
or
repz
add
addl
pop
ljmp
cmpsl
sub
mov
sub
mov
enter
hlt
cmpsb
xor
dec
mov
mov
push
lahf
pop
ss
lret
pop
mov
mov
mov
lahf
mov
mov
mov
mov
lret
fists
pushf
aas
mov
sub
push
pop
pushf
rcrl
decl
in
iret
xchg
dec
test
dec
fsubs
das
faddl
push
xchg
jns
xchg
test
cli
vmovupd
sbb
cs
lea
xchg
cltd
insb
cltd
adc
orb
or
or
vmread
dec
vsubss
shll
cmp
push
shrb
push
xorl
popf
dec
xchg
xchg
push
jl
aam
mov
in
pop
adc
add
jb
es
dec
push
adc
notb
test
loope
in
inc
cmp
bound
or
and
mov
pop
out
out
js
xadd
xchg
nop
xchg
test
imul
ror
or
dec
jg
movsb
mov
cli
xchg
ss
aad
rorb
orl
out
pop
lods
lcall
fsubrs
test
loope
push
pushf
xor
xlat
movsl
mov
cld
mov
adc
loop
mov
in
aam
cmp
xchg
daa
outsl
outsl
fildl
imul
jmp
das
pop
mov
mov
subl
cli
inc
cmpsb
xchg
mov
jbe
leave
sbb
jne
aam
idivb
cwtl
and
shlb
adc
xor
jbe
les
pop
inc
sub
lock
xor
ret
or
stc
xor
in
js
mov
imul
fists
in
or
adc
call
outsl
add
jbe
jg
in
adc
add
mov
in
daa
mov
mov
test
push
xor
pop
mov
xor
aad
fdivp
jb
fwait
jle
adc
in
fs
ljmp
xchg
mov
mov
movb
pusha
mov
outsl
push
mov
jmp
popf
sbb
lcall
fdivrs
es
cmp
sbb
add
mov
into
mov
scas
roll
mov
iret
dec
pop
pop
lods
xchg
xor
dec
jl
dec
sbb
and
sbb
adc
jb
dec
cltd
dec
ljmp
mov
and
inc
aad
sbb
stos
and
pushf
subl
sbb
imul
pusha
loopne
cli
dec
rcrb
cmp
daa
xchg
xchg
arpl
cmpsb
cmp
fnclex
xor
mov
mov
pushf
adcl
and
inc
add
jo
movsb
jmp
push
cmc
cmp
sbb
pop
inc
shll
dec
insb
adc
add
xchg
jae
sbb
jnp
dec
adc
jns
adc
fadd
clc
imul
sbb
xor
dec
pop
and
xlat
mov
pop
dec
movhps
out
push
push
cmc
mov
xchg
push
scas
mov
sbbl
dec
sub
mov
test
mov
dec
adc
cs
pop
jl
cmp
aas
scas
pop
mov
jge
ret
inc
mov
aas
fildl
insb
adc
push
add
xor
into
lods
ja
mov
inc
sbb
lret
hlt
shlb
mov
jne
adc
xor
sbb
adc
mov
stos
mov
lods
jo
cmp
jl
inc
iret
cmp
jl
xchg
ljmp
jle
mov
or
pop
stos
xor
mov
enter
add
sub
cmp
inc
aam
repnz
dec
mov
xlat
test
xor
inc
in
push
and
ret
and
fstpt
pushf
cli
das
or
pop
jl
inc
push
lock
cs
mov
test
push
repz
imul
in
sti
out
or
arpl
jne
cmp
ret
sub
mov
in
push
or
test
sbb
xor
pop
pop
or
cmp
inc
mov
js
inc
jl
inc
call
inc
loop
cld
or
mov
cmp
cmp
push
lock
pop
sub
lea
sub
stos
push
add
outsl
inc
push
in
das
xorb
and
cwtl
push
stos
cmp
or
dec
mov
dec
xchg
xlat
jp
dec
ret
les
cmp
xchg
out
xchg
mov
aad
insl
aad
enter
lahf
clc
cmp
xchg
xchg
jp
add
mov
xor
jns
sbb
iret
movsl
enter
fnstsw
jno
fsqrt
xchg
sbb
neg
pop
int3
xlat
mov
fstp
pop
std
js
or
pop
mov
xor
and
mov
bound
cmp
in
fistpl
outsl
sub
inc
xor
ljmp
pop
test
inc
insl
fldl
in
ss
ja
pop
shrb
repz
out
mov
cs
mov
inc
stc
dec
push
inc
dec
jb
mov
imul
leave
sarl
mov
lret
mov
jp
fstp
lret
iret
leave
leave
stos
in
cmp
push
jmp
sahf
fs
jge
fdivl
xchg
cmp
imul
push
dec
ja
pop
pop
push
and
jne
sbb
pop
scas
loope
sbb
in
sarb
mov
cmp
shlb
add
sarl
js
or
adc
lock
enter
clc
mov
add
ret
cltd
pop
or
cld
mov
shlb
jle
test
jne
das
imul
mov
push
outsl
mov
and
scas
inc
mov
jle
outsl
fimull
sub
int3
inc
pop
je
mov
push
les
cmp
je
jge
mov
dec
pop
add
push
ret
lret
inc
js
outsl
popf
push
cmc
adc
and
loopne
xchg
popa
pusha
xor
insl
out
daa
js
jecxz
pop
lods
or
or
testl
ret
je
mov
fsubr
popf
imul
dec
jno
pop
jge
mov
pop
pusha
cmp
stos
aam
mov
cltd
mov
fwait
jnp
popa
bound
int3
in
add
fnclex
mov
mov
out
loop
sbb
xor
daa
adc
imul
into
inc
mov
sub
xchg
fldcw
mov
loope
repz
pop
jecxz
call
cmp
xchg
mov
jp
fbld
add
xor
mov
andb
sub
mov
inc
pusha
stc
js
clc
aas
jmp
cmp
sbb
mov
mov
pop
cld
mov
sarb
addr16
inc
push
aad
inc
pop
xor
call
adc
les
ficoms
mov
cmpl
pusha
incb
dec
fwait
lds
push
push
decb
stos
fsubrl
jns
mov
lahf
xor
cmpsl
pop
push
add
pop
mov
addb
inc
mov
push
lea
ljmp
dec
clc
sbb
test
stos
jle
mov
inc
pusha
cmp
dec
inc
insb
push
out
push
cmpsb
jecxz
push
enter
push
fstl
cwtl
gs
mov
pop
lcall
mov
pop
fsubs
sub
cmp
lahf
adc
sarl
stc
lcall
mov
push
xor
dec
int3
fistl
outsb
iret
sbb
sbb
mov
in
imul
add
pop
into
mov
fldt
push
das
mov
fs
div
out
or
dec
dec
in
lahf
stos
push
loopne
sub
std
out
cltd
loop
cmpb
out
std
sub
add
call
mov
inc
sarl
mov
push
xlat
push
mov
push
mov
mul
mov
not
pop
cmc
fdivrl
outsb
inc
leave
movsl
and
xor
or
and
and
incb
movsl
loop
ss
sbb
imul
test
mov
cmpb
dec
lods
adc
sub
sbb
lods
jecxz
subb
sbb
xchg
ljmp
test
outsl
roll
sub
scas
inc
add
mov
jp
push
push
pop
push
mov
insl
xor
lret
movsb
jmp
repz
mov
cmpsb
imul
pop
mov
movsl
mov
imul
mov
adc
mov
mov
cmp
push
xchg
xchg
bound
pop
rcrb
adc
popa
andb
xchg
lret
cs
dec
ljmp
adc
fnstcw
in
pop
mov
and
adc
sbb
mov
div
sub
and
fmuls
xchg
add
and
jl
cmp
sub
sarb
cmp
xchg
jg
xchg
jns
adc
out
pop
pop
aam
testb
in
out
inc
adc
jne
out
pop
mov
jbe
mov
es
mov
xchg
call
js
pop
xor
push
jne
push
stos
push
or
repnz
and
sub
adc
cmp
pushl
xlat
out
pop
mov
xchg
xchg
inc
hlt
rcrl
mov
xchg
cmp
mov
adc
fcmove
sbb
shl
add
inc
imul
imul
jmp
lahf
cli
or
std
cld
or
jg
xor
lock
or
cmp
dec
push
test
add
jae
pop
pop
stos
ljmp
push
rorb
mov
fdivr
add
dec
mov
xor
arpl
mov
or
pushf
aaa
mov
push
push
push
fs
jae
push
jp
mov
pop
add
arpl
xchg
inc
jne
push
adc
dec
loop
inc
mov
sbb
cmp
mov
add
mov
int3
cmp
stc
and
lcall
mov
push
loope
call
inc
and
inc
pushf
or
pop
js
push
jns
push
lds
andb
mov
mov
jle
xor
mov
jb
pop
shl
mov
mov
jp
rorl
repnz
xchg
mov
divl
sbb
data16
bound
push
aad
cmp
xor
fwait
cs
aas
out
inc
mov
movsl
or
lds
cmpsl
cmpb
fisttpll
imul
leave
mov
into
jne
mov
mov
push
aas
test
nop
loopne
add
inc
jle
out
inc
push
dec
push
imul
scas
movsl
jp
push
int
movsb
mov
mov
movsb
icebp
bound
pop
add
or
lock
pop
popa
cltd
aad
mov
test
adc
adc
out
scas
and
xchg
or
leave
stc
test
leave
test
out
cmc
sahf
imul
push
push
icebp
fstpl
push
loope
mov
xchg
loope
mov
fiaddl
sbb
pop
repz
push
cmpsl
es
enter
lret
in
inc
mov
lds
les
inc
mov
arpl
and
popa
dec
and
inc
dec
ja
divb
lcall
pushf
sbb
xchg
ja
mov
push
xchg
shlb
or
cltd
pop
inc
inc
test
push
sub
sbb
rcrb
ret
bound
movsl
in
fisubs
cmp
in
cmp
sub
xchg
rcrb
hlt
or
lret
les
cmpb
shll
lcall
inc
loopne
clc
or
daa
lahf
push
hlt
ss
and
sub
aas
hlt
mov
mov
or
popa
push
sub
pop
pop
lret
out
es
pop
sbb
fldl
add
imul
push
fs
cmp
mov
stos
cs
shrb
arpl
cmp
sahf
sbb
add
xorb
sub
out
icebp
adc
cld
ss
dec
pop
mov
cmp
ja
mov
sub
andb
push
jbe
ds
jecxz
lahf
jbe
add
mov
inc
cmp
cmpsl
imul
xor
push
das
sbbl
daa
xchg
daa
xchg
bound
xcrypt-ctr
cmpsl
cltd
and
cltd
pop
iret
lods
add
cwtl
imul
cmp
testl
jbe
xor
scas
rclb
dec
lock
imull
mov
mov
icebp
testb
pop
pop
inc
imul
rcr
lods
mov
inc
mov
jo
repnz
repz
cmp
adc
aad
ror
push
push
repnz
out
add
add
add
int3
testl
push
loop
xchg
xchg
sub
dec
pop
jno
pop
daa
loopne
xchg
mov
ds
arpl
rcrb
and
scas
xchg
mov
scas
shr
pop
repz
nop
mov
xor
in
orb
in
pop
push
mov
xlat
push
mul
xchg
ret
popf
fwait
nop
arpl
out
out
adc
imul
xchg
sbb
loope
test
jnp
movsb
and
mov
pop
pop
pop
ljmp
adc
sub
out
xchg
add
push
mov
and
cli
rcll
daa
inc
push
xor
mov
add
cmp
push
fdivr
mov
or
call
outsb
mov
ret
mov
mov
hlt
cwtl
dec
stos
push
xchg
jmp
pusha
pop
add
js
lret
push
cltd
inc
sbb
or
aam
aam
jbe
pop
ja
pop
lods
ljmp
arpl
push
pop
dec
sbb
iret
in
mov
pop
push
in
mov
std
call
mov
mov
add
adc
push
fdivrl
filds
lds
outsl
testb
divps
xchg
int
mov
int3
in
daa
shrl
push
xor
mov
sbb
ljmp
or
js
repz
outsb
push
jbe
aad
mov
or
add
add
vmwrite
mov
mov
insb
fnsave
jno
jg
iret
fisubrs
xor
xor
mov
cwtl
push
mov
cwtl
xor
lods
sbb
int
jno
outsl
cmp
pop
mov
das
cld
scas
cli
call
and
gs
push
jae
push
dec
sti
rolb
adc
cs
inc
xchg
ret
push
sbb
dec
aam
cmp
outsl
sbb
in
out
orl
into
aas
xchg
jl
outsl
popa
aaa
cmc
mov
mov
add
jge
add
dec
mov
jne
fmull
andl
jnp
stos
in
adc
pop
adc
lcall
es
dec
add
xor
inc
sbb
das
lock
mov
pusha
adc
fisttpl
mov
push
es
add
sbb
test
and
jle
xor
or
cmp
push
stos
outsl
add
cli
xchg
xchg
inc
xlat
stos
or
sub
cmpsl
aam
fabs
sub
push
jbe
rorb
popa
cmpl
mov
mov
addr16
cmpsl
adc
push
add
stc
mov
aaa
clc
mov
or
movsl
stc
mov
shll
cmp
nop
jle
jb
imull
xor
and
xlat
iret
stos
pop
push
in
xchg
dec
jnp
mov
popf
push
mov
ja
pop
add
stos
in
or
arpl
out
mov
pop
lods
ja
testb
adc
into
mov
inc
lcall
jno
xor
cltd
mov
repnz
aaa
fists
adc
cmc
mov
loope
je
pushf
ljmp
sub
fs
cmpb
mov
scas
sub
sti
adc
out
cmp
insb
sub
stc
pop
aad
mov
xor
pop
pop
add
and
addr16
cld
or
cmp
insb
jecxz
into
or
aad
xor
es
lds
mov
addr16
addr16
inc
xor
addr16
imulb
aam
lret
mov
fldt
je
push
iret
stos
jecxz
xor
out
cmc
outsb
hlt
xchg
fisttpl
in
fs
fnstcw
mov
jo
out
add
jb
call
push
repz
mov
pop
mov
outsb
pop
xchg
add
sarl
adc
gs
push
mov
jns
out
scas
aaa
negb
les
iret
fldt
lods
pop
pop
mul
into
insl
test
ficompl
push
xchg
aad
jb
icebp
stos
add
test
rol
scas
pop
aad
aad
and
or
mov
mov
int3
jo
mov
ficompl
lock
outsb
pop
jno
out
popf
push
or
push
cmpsl
lcall
scas
mov
scas
test
adc
jg
dec
arpl
mov
lods
lret
in
data16
sti
jno
cld
mov
bound
push
jns
jl
jmp
pushf
sti
pop
out
jne
pop
leave
xchg
xor
jnp
mov
shlb
inc
jno
xchg
dec
je
mov
mov
ds
imul
xchg
movsl
push
xchg
insl
jno
fists
andl
insb
mov
mov
and
push
faddl
incl
stos
in
mov
in
mov
jl
roll
aaa
cmpsb
mov
push
cmp
ljmp
mov
pop
sub
je
push
and
arpl
repz
pop
stos
xchg
or
xchg
push
dec
les
daa
push
int3
out
fsubrs
pop
test
aaa
scas
or
stos
mov
lods
push
push
pop
jns
test
mov
or
dec
js
dec
leave
in
outsl
sbb
xchg
fcomp
lock
dec
xor
dec
push
fcmovu
and
mov
sbb
aam
sbb
mov
fwait
add
xlat
movsl
pop
mov
movsl
push
mov
sti
popf
outsb
adc
aam
and
rcpps
pop
or
dec
sbb
push
push
pop
push
pop
popa
jge
int3
fcmovne
insb
jbe
xor
lret
test
mov
or
iret
cmc
push
xor
rorb
and
cmc
ret
mov
adc
mov
mov
lds
fcomps
cmp
adc
dec
jo
stos
cmc
test
adc
lea
sub
arpl
insb
dec
pop
into
iret
add
cmp
xchg
insb
add
gs
cltd
dec
aad
lods
jns
out
sbb
lods
add
test
test
out
iret
cltd
xor
push
popa
inc
std
std
push
xor
push
inc
sbb
movsl
dec
gs
hlt
repz
shlb
dec
dec
inc
push
je
add
sbb
fcomps
or
push
mov
lods
call
pop
call
push
leave
fs
loopne
sti
mov
ret
push
in
lcall
fidivl
cwtl
dec
or
leave
out
loop
mov
and
insl
mov
pop
adc
push
stos
push
aas
movsl
bts
xor
jo
test
mov
ja
sub
mov
jle
dec
lcall
lcall
fbld
xchg
jns
aas
jb
jge
cmp
mov
push
ret
push
inc
cmp
daa
jne
test
pop
subb
je
sarb
into
outsl
sbb
int3
xchg
mov
jbe
push
inc
xchg
into
and
sbb
movsl
popa
iret
pop
sbb
and
ja
add
pop
repnz
jb
je
decb
mov
cmp
lock
stos
ljmp
push
cli
pop
clc
fs
scas
je
jle
out
sbb
or
mov
lds
adc
out
or
mov
push
jecxz
aad
gs
arpl
outsb
popf
mov
fsubrp
inc
subb
push
dec
or
out
pop
mov
add
bound
jmp
sub
xor
mov
in
daa
fistpl
fs
jo
sar
std
mov
ljmp
and
cld
daa
shrb
pop
push
cwtl
shlb
push
lret
xor
sub
mov
les
dec
cmp
out
rorl
push
dec
daa
xchg
mov
repnz
int
movntq
sahf
cli
pop
add
mov
pop
enter
jmp
inc
xor
mov
dec
xchg
loopne
test
cmp
orl
cmp
sub
xor
movsb
loope
aad
cmpsl
js
jbe
mov
push
push
add
into
lret
jns
ror
pop
dec
adc
mov
cmpsb
adc
mov
jge
mov
cli
cwtl
fldenv
jb
nop
in
enter
aam
ret
mov
push
sbb
ret
arpl
subb
cmp
dec
cwtl
cmp
aad
mov
sbb
push
ret
mov
push
bound
mov
repz
jle
sbb
push
jae
sti
xchg
mov
adc
popa
outsb
inc
xor
mov
or
leave
inc
push
xor
das
daa
mov
out
add
fisttps
lret
imul
jnp
and
ja
in
sarl
sti
add
push
aam
stos
push
aaa
jl
sbb
divl
adc
test
cmp
pop
shlb
push
add
scas
mov
scas
sahf
popa
enter
fdivr
sub
adc
mov
movsl
scas
push
ret
and
loope
xchg
aam
jae
push
sub
mov
daa
mov
cmp
movsl
insb
inc
cmpsl
jecxz
mov
dec
fisubrl
dec
test
add
inc
xchg
pusha
xchg
dec
jne
cmp
push
inc
cwtl
dec
stc
pushl
push
lcall
mov
movsl
adc
xchg
xor
insb
mov
mov
in
push
cli
stos
push
inc
adc
imulb
inc
andl
rorl
outsb
icebp
fs
sbb
fcmovnbe
or
add
cmp
add
sbb
xchg
mov
inc
addr16
adc
adc
out
dec
fdiv
cmpsl
lods
mov
loopne
in
xchg
lcall
sbbb
cwtl
jge
mov
sbb
fdivl
scas
ss
pop
rcl
stc
adc
sub
pop
jp
out
test
sarb
ja
into
int3
sub
mov
cli
daa
ret
fcmovbe
shr
orb
cli
adc
sub
insb
xchg
cmc
adc
xorb
jbe
adc
imul
adc
out
popf
outsl
mov
cli
repnz
sub
adc
dec
cli
jmp
fucomp
les
and
jo
out
push
out
pop
xchg
adc
push
pop
lock
push
std
xor
jmp
jp
mov
pop
stos
sbbb
cwtl
or
es
and
sbbb
in
mov
clc
cltd
adc
pop
and
in
bound
pop
xor
pop
adc
dec
testl
in
inc
and
xchg
stos
ds
imul
fdivrs
aad
fnstcw
jo
ret
pop
in
dec
dec
push
clc
pop
andnps
dec
mov
inc
or
daa
mov
push
adc
xor
xchg
out
push
mov
mov
dec
iret
les
add
or
das
push
jo
or
push
dec
jb
xchg
mov
add
mov
imul
mov
pop
xchg
mov
scas
cli
and
adc
rcr
mov
je
cmpsl
ljmp
loopne
mov
mov
xchg
in
in
xor
mov
jmp
lcall
mov
dec
sub
push
andb
pusha
in
scas
ret
cmp
fists
stos
loopne
lods
push
pop
imul
xor
call
pop
jp
adc
imul
fdivrp
xor
dec
sbb
out
mov
and
jecxz
pop
xchg
in
or
mov
and
addl
sbb
jecxz
sub
mov
clc
into
icebp
daa
and
inc
sbb
sti
jae
xor
jnp
sarl
mov
adc
and
push
cmp
cmc
xor
and
mov
pop
mov
mov
cmp
daa
dec
es
jo
std
fwait
aam
aas
jg
push
pop
pop
add
cmp
mov
leave
xor
xchg
mov
mov
jle
sub
pop
aad
imul
mov
sbb
out
pop
cs
cwtl
rclb
or
gs
pop
iret
movsl
mov
add
repnz
push
movsb
cmp
mov
adc
in
mov
push
xchg
ljmp
stc
add
pop
gs
mov
test
sbb
jl
jecxz
cmpsb
dec
cld
cmp
les
cld
lods
cli
dec
lret
mov
jbe
loop
add
nop
nop
cmp
sub
stc
mov
nop
subb
ficoms
mov
clc
jmp
cmp
movsl
xchg
push
add
cmp
mov
lret
fbld
push
shl
mov
int3
sub
imul
or
stos
emms
and
cmp
lods
jl
scas
jo
xchg
pushf
insb
cmp
pop
fstps
inc
stos
adc
push
mov
mov
int
mov
adc
out
es
aas
pop
dec
push
pop
scas
pop
or
jecxz
inc
cs
add
cmpsl
xchg
enter
arpl
add
es
mov
clc
mov
sub
push
mov
add
push
push
fistl
dec
in
mov
out
shl
ret
pop
mov
mov
fucomi
jmp
dec
movsl
ret
pushf
ret
fbld
jae,pt
mov
jno
shrl
lret
or
ja
cs
inc
mov
mov
insl
das
dec
mov
pop
lea
jmp
ljmp
xor
aas
js
cs
lret
insl
jecxz
jg
iret
pop
xchg
cld
lcall
xor
out
mov
mov
jo
lods
fsubrs
outsl
leave
mov
xor
shr
inc
pop
pop
mov
jno
lcall
out
cwtl
or
adc
mov
or
cmp
stc
push
pop
inc
daa
cs
aaa
aaa
push
js
inc
xorl
lret
loopne
lret
clc
pop
lcall
fdivs
and
enter
push
xorb
add
fwait
mov
stos
mov
gs
jb
pop
pop
out
in
mov
push
cmp
and
mov
push
sbb
cltd
mov
pop
fistl
jge
push
subb
xor
dec
push
xchg
cld
ljmp
push
or
aaa
jne
and
sarb
push
nop
pop
mov
push
fsubrl
adc
daa
pusha
fimull
ljmp
es
push
mov
js
inc
or
xor
dec
jns
loope
pop
add
les
aam
je
movsl
push
inc
arpl
outsb
insl
lcall
push
aas
fstps
int3
cmp
scas
xlat
pop
inc
sub
cmp
and
lock
inc
cmp
sub
sahf
pop
jle
cmpsl
addr16
and
lret
lds
out
mov
loope
lods
out
xor
push
cmp
ljmp
mov
icebp
pop
sbb
pop
scas
xchg
mov
mov
mov
add
cltd
mov
or
ss
sub
divl
or
roll
cmp
adc
loope
dec
dec
jle
outsb
ror
push
sbb
out
repnz
mov
add
sub
data16
jl
gs
ficoms
jo
xchg
xchg
pop
add
rorb
mov
push
dec
call
and
pusha
in
rcrb
mov
pop
mov
mov
jae
into
push
dec
inc
push
jle
insl
mov
sub
stc
dec
lds
in
imul
push
xlat
dec
jle
sahf
dec
ljmp
jno
ret
fs
cmp
mov
cwtl
mov
pop
mov
int3
lds
arpl
lods
mov
sbb
arpl
loop
xor
xor
xchg
jge
data16
sub
jge
dec
xchg
lods
inc
rcll
or
and
mov
dec
inc
push
cltd
daa
pop
xor
mov
lret
stc
or
js
jne
jp
jae
pop
mov
jg
xor
je
lods
and
cmp
mov
cmp
xor
add
popa
jnp
inc
lods
inc
cld
sbb
into
inc
loopne
sbb
js
adc
add
pushf
addb
js
insw
mov
push
cmp
test
jnp
into
mov
and
cmc
push
stos
xchg
decb
xchg
dec
cli
and
movsb
cmp
jb
and
mov
mov
jns
sarb
lret
jecxz
stos
pop
dec
xchg
fcmovnu
ret
rorl
sub
jecxz
imul
es
insb
cmp
outsl
mov
sub
ss
icebp
enter
icebp
fdivl
xor
add
jb
stos
and
or
and
mov
pop
aad
out
or
pop
mov
sub
xchg
inc
jbe
test
xor
out
push
xchg
xchg
cmp
imul
xchg
nop
mov
mov
or
push
lods
insl
test
jle
movsl
add
dec
mov
stos
roll
or
nop
leave
inc
push
jae
inc
xchg
imul
fnstenv
jmp
cmpsb
and
pop
cmc
jne
ljmp
call
sub
stc
adc
ret
or
jmp
sub
lock
aaa
pop
cmp
xchg
pop
std
cmpsb
lds
sub
jmp
mov
lods
aam
cwtl
out
mov
enter
mov
push
and
dec
mov
xor
cmc
aad
fisttps
push
clc
inc
fisubl
xor
lcall
inc
sbb
loopne
insl
test
je
in
cmp
scas
push
jg
cmpsl
adc
mov
das
xor
fadds
dec
mov
addr16
testb
cmc
aad
mov
push
xchg
gs
outsb
adc
mov
lcall
icebp
dec
out
lds
xchg
push
hlt
xchg
out
and
mov
and
xor
hlt
pop
push
push
imul
cmovbe
adc
sub
in
pushf
out
adc
adc
jmp
add
int3
or
xor
sbb
pop
leave
cmp
aam
fidivs
sub
test
cwtl
movsb
xchg
out
js
fwait
jno
push
lods
daa
pop
orl
data16
add
je
xor
lret
pop
lds
lahf
jb
push
lret
shr
xchg
imul
iret
lahf
mov
pop
inc
fwait
rorb
adcl
ret
fdivr
fimuls
sahf
xor
mov
les
in
insl
sub
mov
sub
je
lret
sahf
cmpb
stos
mov
mov
aad
dec
or
fsubr
cmp
rcrl
jb
mov
inc
jne
adc
fisttps
pop
cmp
adc
inc
dec
cmp
mov
in
adc
nop
or
add
loop
rsm
dec
loope
aaa
mov
call
cmpl
mov
cmp
mov
push
jle
inc
xor
in
add
dec
iret
dec
mov
pop
pop
adc
pushf
ss
push
adc
imul
push
cwtl
xchg
fwait
jns
pop
das
cmpsb
cld
fiadds
adc
push
fs
add
in
jge
fisttps
pushf
jnp
out
xchg
jl
push
cld
and
mov
imul
insl
sub
je
inc
outsb
lcall
push
ret
cmpsl
dec
call
adc
push
adc
inc
add
mov
mov
int3
out
leave
insb
pop
jb
add
sub
je
mov
fsubrp
outsb
dec
jno
aam
xchg
mov
lcall
add
add
mov
adcl
nop
jns
inc
inc
cld
test
mov
ss
andb
jb
aaa
sub
lret
xchg
rclb
xchg
lods
push
mov
fistpll
sbb
movsb
push
out
into
jbe
adc
fnsave
fs
out
push
es
inc
in
das
ja
loope
fnstcw
sahf
xlat
xchg
add
cld
mov
sbb
adc
adc
cmp
and
mov
mov
lods
ss
aam
adc
int
call
sbb
cmc
adc
lahf
ss
push
push
pop
lret
sbb
and
jle,pn
mov
test
or
ss
sbbl
and
jae
das
int
aam
test
cmpsl
cmp
fbstp
iret
stos
fidivs
and
ffree
pop
xor
sbb
mov
add
enter
dec
popa
sub
int3
jne
mov
mov
popf
inc
cmpsl
pop
xorb
aam
out
push
ljmp
aad
imul
loop
inc
mov
fs
fildl
std
pusha
stos
sti
filds
pop
aam
adc
xchg
loope
fisubl
movsb
gs
sub
cmp
inc
scas
lea
ja
jcxz
call
inc
nop
mov
pushf
and
sti
aaa
sub
dec
inc
mov
and
out
jno
negb
ret
repnz
imul
out
rorb
mov
out
cmp
mov
lea
mov
xor
xor
flds
int3
mov
mov
shll
pop
pop
add
out
popa
or
loopne
je
mov
mov
mov
enter
mov
jno
fcomps
loope
leave
or
clc
inc
add
popf
cmp
and
ds
push
dec
mov
push
cmpsb
in
push
add
push
popf
xor
sub
out
inc
push
clc
pop
aaa
and
mov
loope
adc
pop
push
sti
xor
xor
hlt
mov
xchg
add
lods
adc
push
pushf
movsb
nop
jne
lods
sub
test
xor
inc
dec
test
test
lock
test
add
pop
add
or
mov
cmp
cltd
jge
lret
push
dec
jmp
xor
and
ljmp
pushl
mov
push
shll
mov
scas
xlat
stc
neg
inc
cmp
cmp
loop
or
fildll
push
cmp
xchg
rcr
sbb
or
mov
jae
mov
addr16
xor
xchg
dec
into
xchg
aas
adc
fcompl
xchg
pop
clc
adc
adc
xchg
js
lods
cli
dec
mov
das
call
mov
jp
roll
mov
jno
in
dec
std
shrb
mov
inc
aaa
pusha
push
frstor
or
push
mov
and
push
mov
sbb
jne
pusha
lock
or
out
mov
call
cmovno
and
pop
loopne
add
in
or
insb
lahf
imul
popa
cmp
and
jmp
xlat
push
pop
adc
dec
lock
add
subl
in
jo
lods
xor
out
loop
cltd
push
sbb
ret
popa
loope
mov
ret
xchg
fs
push
pushf
lret
mov
jmp
and
mov
mov
popf
adc
adc
inc
and
jle
xor
sahf
pop
jo
and
xor
les
aad
loop
or
ljmp
lock
and
xlat
jae
scas
cmp
push
inc
xor
repnz
cmp
mov
jle
cltd
in
in
out
dec
lds
cs
adcb
jge
adc
xchg
aam
je
push
movsl
js
dec
fbld
sbb
jae
and
mov
imul
repnz
std
sbb
into
hlt
dec
sbb
or
cmp
adc
into
xchg
es
cs
fstpt
jge
add
scas
loopne
mov
leave
popf
jge
xor
dec
mov
std
xor
mov
sub
lea
cmc
ss
out
dec
pop
outsb
dec
in
xchg
psubusw
data16
sbb
jmp
inc
test
mov
add
pop
popa
push
daa
les
loope
sub
sub
sub
mov
adc
nop
adcb
call
xor
pop
and
cmp
mov
out
lret
jmp
popa
ja
lahf
out
mov
rcll
popa
push
dec
jbe
adc
in
mov
mov
add
movsl
and
and
mov
pop
shll
insl
pop
dec
loopne
mov
sub
sub
jo
xchg
cmpsl
pushf
xchg
sub
adc
add
or
sbb
sub
ss
pop
data16
cmp
int3
mov
ficoms
pushf
fisubrs
pop
dec
mov
sbb
pop
lcall
ret
jae
mov
daa
push
cld
mov
fldl
jp
and
sbb
iret
jne
out
decl
jmp
jg
push
and
hlt
dec
xor
jmp
ja
pop
lcall
imul
in
mov
cmp
jp
testb
sbb
cld
jle
adc
cli
cmp
adc
and
enter
clc
bound
or
mov
in
mov
test
into
outsb
mov
push
into
flds
xor
scas
sti
pop
mov
insl
inc
rcrl
outsb
pushf
sbb
fstpt
sbb
lahf
ja
cmpsb
and
fcoms
stos
shll
cld
cmp
or
das
mov
jno
push
test
sub
mov
rcrl
push
fucompp
decl
ret
cmp
sub
mov
hlt
jns
jmp
testb
ret
xor
sub
jle
and
add
bound
dec
mov
daa
xchg
mov
dec
sub
cmp
mov
sub
push
lahf
aam
test
jb
mov
imul
andl
adc
pop
adc
pop
inc
push
add
lock
test
sub
pusha
push
jbe
ror
jne
es
mov
ficompl
fistps
movsb
adc
dec
scas
enter
push
xchg
pop
in
scas
adc
sbb
push
je
cs
xchg
lea
addr16
cmp
ljmp
pop
push
ljmp
sbb
mov
lcall
mov
adc
cmp
xor
cmp
or
or
adc
sub
pop
mov
incb
loope
mov
mov
js
jmp
test
push
ret
fnstsw
xchg
lea
lret
pop
sub
loop
xor
jns
xor
ret
push
in
mov
mov
inc
notl
gs
mov
aas
mov
mull
adc
pop
sbb
push
cld
mov
movsb
scas
jle
and
adcb
lahf
jne
mov
mov
pop
or
aas
lock
clc
dec
cli
pop
pop
pop
pop
xchg
ficompl
ficoml
into
jnp
jo
or
test
jle
mov
push
adcl
inc
cmp
mov
mov
insb
mov
push
into
lock
bound
mov
mov
dec
sbb
popa
out
aas
popa
lahf
add
daa
add
jp
cmp
insl
scas
mov
int3
outsl
push
es
arpl
idiv
rclb
pusha
and
std
xchg
inc
stos
stos
out
mov
test
mov
pop
jecxz
in
shrb
mov
adc
pop
pop
mov
repz
xchg
mov
sub
repz
mov
int3
pop
sbbl
jns
xchg
mov
dec
icebp
in
adc
in
sub
mov
jmp
or
lea
bnd
jge
mov
sub
loope
loopne
test
lret
dec
mov
hlt
decl
enter
and
stos
sbb
fcompl
push
pop
push
mov
add
sbb
imul
cwtl
repz
orl
inc
pop
push
xor
insl
inc
xchg
sbbb
push
ljmp
mov
popa
das
loop
cmp
push
sbb
cli
sahf
aaa
or
lea
cmp
dec
outsl
xchg
outsl
fstpt
inc
fbstp
push
xor
mov
dec
neg
pop
sub
xchg
push
mov
push
mov
mov
mov
or
mov
je
sbb
call
in
rcrl
adc
inc
jl,pt
test
xchg
and
and
jae
loope
sbb
sahf
or
mul
xorl
in
xor
xchg
sbb
outsb
out
outsb
mov
popa
lock
das
xor
sub
add
lret
adc
push
lock
dec
fdiv
inc
lcall
push
xchg
lods
push
outsb
mov
xchg
sbb
xor
xchg
es
addr16
dec
and
and
mov
or
and
push
mov
in
add
or
popa
sub
subb
push
cmp
or
and
mov
ret
dec
insl
das
incb
sub
jecxz
sub
aam
sbb
pop
and
insl
daa
imul
mov
push
sub
push
mov
xor
pop
pop
push
xchg
xor
shl
icebp
in
movl
andl
movsl
test
inc
pop
and
popa
jmp
xor
xchg
test
push
div
mov
ss
mov
xor
mov
daa
or
repz
repz
shrl
or
test
push
adc
jge
and
shl
aad
loop
into
fwait
sbb
jb
mov
mov
pop
cs
mov
cli
dec
lahf
push
je
popa
es
mov
mov
adc
mov
je,pn
nop
add
in
sbb
mov
mov
fwait
sbb
jbe
dec
fs
mov
and
sbb
fcom
aaa
pop
lret
jmp
add
cmp
je
push
xchg
jno
stc
adc
jbe
ja
xchg
adc
and
ds
jns
test
mov
loope
outsl
sbb
cli
hlt
in
xor
shr
mov
push
outsl
mov
ret
xchg
shlb
adc
scas
clc
mov
mov
pop
mov
lret
xor
lods
add
jmp
xchg
add
or
repz
push
sub
jnp
mov
push
xor
push
roll
mov
mov
rcll
push
leave
dec
and
stos
arpl
fincstp
pop
push
lahf
push
mov
fs
add
imul
jnp
jbe
dec
dec
or
or
ficomps
sub
mov
xchg
adc
lret
bound
sub
fwait
xchg
aas
jle
pop
mov
popa
data16
imul
xor
add
sti
inc
cld
push
and
or
fs
roll
mov
mov
jg
in
andl
test
sbb
jmp
sarl
fld
nop
xchg
lret
daa
std
jns
inc
cmpsl
cmc
pusha
fldcw
arpl
cmp
mov
xchg
mov
popa
addb
jecxz
lods
test
mov
adc
mov
cld
scas
mov
lds
rcl
push
xchg
sbb
sbb
or
mov
jmp
nop
mov
test
jne
pop
mov
xlat
mov
stc
adc
cmc
ljmp
in
addr16
leave
adc
flds
mov
mov
bound
adc
sbb
fsubrs
xchg
ret
idivl
or
gs
inc
lret
mov
mov
out
add
adc
xchg
insb
fsubr
scas
xlat
test
mov
inc
xchg
std
ret
lock
mov
mov
inc
mov
and
imul
ss
xchg
xor
sub
mov
xor
orl
adc
xor
jp
sub
mov
pusha
dec
ds
xchg
dec
push
adc
es
mov
repnz
out
fwait
movsl
inc
shrl
pop
push
les
mov
push
xchg
and
pop
jbe
adc
shrb
inc
jmp
jno
sahf
xchg
in
sub
xchg
ret
push
ficoml
mov
inc
addr16
push
lret
mov
inc
mov
lods
pushf
lock
pop
jne
pop
outsl
push
in
addb
fildll
jbe
lret
add
movd
adc
mov
dec
addl
mov
cld
pop
mov
mov
pop
mov
repnz
xlat
mov
xchg
out
pop
in
lret
stos
lock
add
cmp
xlat
jmp
mov
inc
adc
adc
sbb
and
push
and
lea
bound
fcmove
fisttpl
in
fwait
pop
xor
xchg
cs
jp
jo
mov
mov
fiaddl
insl
fidivs
shlb
mov
push
jmp
mov
xor
cld
mov
out
mov
out
stos
fs
roll
xorl
stos
test
or
fwait
and
mov
mov
dec
xchg
lret
push
and
push
clc
cltd
call
push
cmp
jp
sbb
fadd
pop
loop
lods
inc
bound
or
lock
mov
mov
andl
jae
and
add
lret
cwtl
movsl
cmpsb
movsb
inc
and
out
and
and
aad
hlt
sbb
mov
dec
xchg
sub
pusha
out
jne
pop
loop
lods
imul
xlat
and
sbb
push
fsubs
xor
imul
aam
aaa
sub
dec
mov
xchg
jb
rcrb
adc
jmp
test
bound
xor
push
push
dec
repnz
stc
and
inc
daa
mov
xor
lretw
cmp
scas
lret
loop
aad
add
out
cmpsl
jecxz
cmc
cmp
jae
jb
lahf
jnp
je
sub
gs
xorb
cmp
pop
dec
arpl
ja
icebp
push
insl
loop
jno
je
xor
hlt
gs
repnz
gs
xor
sub
dec
cltd
nop
push
inc
scas
icebp
scas
add
and
xchg
out
or
data16
inc
inc
out
loopne
ljmp
jmp
daa
stc
int3
ret
js
mov
ss
movl
jnp
pop
mov
outsb
inc
int
dec
mov
pop
xlat
in
sahf
pop
or
lods
gs
je
cmpsl
jp
pushf
dec
clc
push
test
lea
sahf
fidivrl
popf
mov
jge
hlt
addl
xchg
cmp
pop
cmc
mov
addl
push
enter
daa
jecxz
test
leave
adc
or
mov
rol
jg
xor
shlb
add
mov
imul
int
popa
shrb
jbe
test
sub
sub
push
bndldx
rolb
add
test
mov
sbb
xchg
andb
jg
fimuls
loop
ds
xor
out
xor
je
mov
mov
adc
addr16
inc
inc
aam
rcrb
ja
fadd
mov
test
rcll
or
jbe
loop
xor
jmp
cltd
rcrl
sbb
xchg
movsl
cmpsb
inc
mov
adc
cld
data16
mov
jne
mov
xchg
pop
dec
dec
jnp
pop
fs
in
sarb
int3
test
jle
cmpsl
addr16
push
dec
cltd
pusha
dec
fcmovb
mov
sbb
jne
insl
inc
mov
jae
jae
mov
push
mov
pop
dec
add
ljmp
sahf
sbb
adcb
xor
push
push
movsl
xchg
rcrb
mov
sub
js
dec
jbe
aad
ja
and
daa
subb
imul
and
int3
sub
xlat
in
xlat
call
and
add
loope
cmp
in
dec
pop
popf
adc
mov
loop
adc
ja
call
roll
mov
out
cmpsb
call
jg
sub
push
pop
ja
nop
adc
pop
out
lahf
push
mov
addr16
daa
loop
xchg
inc
stc
sbb
jp
insb
add
std
popf
jb
fnstcw
cmpsb
mov
call
lret
jnp
inc
fnstenv
or
xor
add
les
subb
jnp
lods
push
push
sbb
mov
cmpsl
out
pusha
ljmp
jge
xchg
aam
inc
mov
rcrb
mov
or
push
pop
or
out
inc
push
or
xchg
aas
dec
lods
mov
les
add
mov
lea
sub
add
mov
mov
or
jae
cld
pop
lret
sub
scas
sub
jns
dec
push
sti
sub
movsl
mov
push
jno
mov
mov
mov
mov
inc
jns
mov
je
inc
and
xor
or
scas
stos
mov
lock
cmpsb
cmc
mov
mov
mov
mov
sti
xchg
insb
adc
arpl
mov
jle
sbb
mov
pop
stc
aad
cmpsl
js
ret
jb
sbb
orb
or
fcompl
cwtl
inc
add
push
lcall
aam
out
cs
sbb
mov
cmpsb
sub
cmpsb
shlb
sbb
out
leave
outsb
inc
xor
cmp
in
int
push
add
cs
push
mov
jg
or
enter
and
cli
lret
out
pop
inc
inc
jg
lret
pop
sarb
rclb
xchg
ret
rcll
loop
xor
lods
adc
cmp
in
outsb
mov
dec
test
xorl
add
lret
addl
jae
test
std
lock
or
cmp
xor
add
sbb
xchg
mov
inc
xchg
lock
out
and
outsb
outsb
sub
popa
sbb
bound
lret
mov
pop
or
test
xchg
push
andl
sbb
xchg
jl
jb
in
pop
in
fldt
sbb
push
fisttpl
in
or
in
and
push
popf
jbe
pusha
stos
cli
jo
mov
lds
scas
call
outsb
fnstcw
mov
negb
and
out
bound
or
movsb
mov
sahf
add
and
add
dec
cwtl
or
ljmp
rcrb
sub
aam
inc
popf
pop
sub
out
or
or
std
xor
rolb
data16
rcrl
pop
dec
mov
mov
lret
adc
sahf
sbb
aaa
loope
cmp
or
loopne
sbb
jo
and
mov
sbb
movsl
xor
fstl
push
sahf
mov
and
cmc
xchg
mov
cli
enter
out
sub
push
mov
lahf
dec
data16
aad
loopne
mov
lods
push
jg
icebp
adc
popa
mov
out
pop
inc
ret
out
ret
push
das
movsb
mov
sub
les
adc
sbb
notl
jp
in
jnp
imul
mov
sub
mov
test
loop
andb
in
jp
dec
mov
ret
dec
push
pop
mov
add
add
lret
inc
lock
outsl
aas
push
mov
hlt
mov
imul
push
imul
ds
push
dec
fwait
into
lahf
or
mov
jo
add
push
fucompp
mov
loopne
push
xlat
push
cli
and
or
cmp
repz
jns
repnz
scas
xchg
arpl
push
mov
sti
mov
fs
or
inc
fisubrl
and
subb
inc
mov
roll
in
push
divl
add
inc
test
adc
lds
inc
sbb
lods
bound
es
rcll
aaa
popf
lret
adc
xor
push
push
xor
cmp
stos
loop
in
leave
std
lret
mov
add
lock
cmp
mov
fs
mov
rclb
data16
lcall
or
xchg
xchg
aaa
aaa
fiadds
jle
jg
mov
dec
jb
xlat
cmp
test
in
js
ja
movsl
mov
adc
inc
cltd
push
and
and
ret
insb
loope
xchg
imul
jmp
mov
fdivr
dec
pop
ds
cs
add
pop
data16
scas
or
scas
lds
cmp
adc
mov
stc
call
inc
inc
lahf
fsubs
jo
mov
insl
jne
mov
jg
dec
pop
add
stos
call
cltd
repnz
arpl
loop,pn
cmc
xchg
add
push
cmp
push
or
jne
cmpsb
jno
lea
and
test
push
add
mov
cmc
mov
xchg
and
stos
pop
data16
imul
inc
enter
xchg
sar
push
ds
imul
and
jl
outsl
ds
jl
push
inc
repz
loopne
and
lock
jnp
ljmp
sbb
sbb
loopne
jmp
cmpsb
pop
in
pop
and
stc
cmc
repz
adc
stc
push
rorl
lock
ret
xchg
inc
mov
cmpsl
pop
mov
mov
add
mov
sub
mov
sub
push
pusha
sub
or
xor
outsb
sahf
nop
enter
jg
scas
and
jnp
adc
mov
mov
fnstsw
mov
iret
addl
mov
aad
iret
aad
pop
push
jbe
nop
dec
lret
xor
dec
loope
sbb
adc
xor
repz
dec
pop
sbb
daa
es
xor
rcrb
mov
pop
cmp
cmp
push
cmp
in
in
enter
cmp
sbb
loop
pop
push
and
mov
dec
sahf
sbb
and
mov
outsl
int
mov
insl
pop
push
push
gs
and
cmp
inc
pushf
xor
lods
fstps
pop
xlat
adc
sbb
pop
push
hlt
xchg
icebp
movsb
ror
pop
xor
push
push
movsl
dec
and
and
lods
xorl
in
mov
fbld
stc
out
into
out
jns
dec
data16
cmc
in
adc
shlb
dec
mov
repz
lock
mov
and
daa
push
out
cs
enter
stos
sbb
mov
push
mov
shrl
mov
negl
loopne
popa
ja
insb
loop
or
inc
shl
pop
add
add
or
sub
and
push
add
filds
xchg
mov
aad
mov
xchg
xchg
jo
imul
fmul
jmp
loopne
mov
xchg
cmp
lahf
pusha
mov
sbb
insl
push
mov
fsubrp
xor
push
lods
adc
enter
mov
mov
xor
jno
in
addr16
inc
jle
sub
pop
cltd
adc
cmc
fwait
jne
pop
shl
dec
dec
out
in
ss
inc
and
loopne
mov
adc
ret
mov
or
xlat
divl
pop
ljmp
add
outsb
jno
test
les
cmp
stos
or
sub
enter
mov
jnp
cmp
cmpsl
out
jb
add
cmp
jl
pop
jmp
add
jmp
dec
test
jecxz
outsl
adcb
fwait
lods
fs
xchg
xchg
lods
rorb
jmp
out
sbb
sahf
cmp
in
pusha
mov
push
jg
fwait
bound
leave
stos
jae
mov
jmp
ss
inc
ror
cmp
fistpll
testl
nop
dec
fst
mov
mov
leave
lds
mov
push
pop
mov
jb
adc
ljmp
fcoms
pmulhw
pop
shll
ja
outsl
fiaddl
scas
sbb
inc
aas
hlt
jg
mov
and
mov
jnp
push
sahf
cmp
mov
lds
bound
insb
sahf
clc
call
cmpb
outsb
test
dec
mov
jg
pop
pop
sti
std
jnp
or
out
cmpsl
subl
xchg
push
sbb
rcr
mov
fsubs
scas
adcb
mov
in
pop
pop
or
push
repz
sub
jne
mov
sahf
in
dec
jg
subb
out
jb
rcl
mov
enter
pop
cmpsb
sbb
fsts
ja
or
cmp
or
ja
add
nop
nop
mov
popl
rcrl
and
test
jbe
inc
mov
dec
pop
je
hlt
or
lret
fcomps
push
cmpsb
pop
inc
rorb
jl
cmp
ss
jnp
into
stos
call
sbbl
pop
out
out
mov
outsb
repnz
js
out
sbb
jns
leave
cltd
dec
push
inc
pop
bound
adc
pop
iret
pop
xchg
movsb
data16
cmpsl
aas
pop
mov
pop
ret
or
jo
jb
ror
shrb
mov
mov
insb
movsl
xlat
mov
mov
loopne
movsb
dec
sbb
je
sub
dec
xor
dec
xchg
hlt
insb
das
fs
xor
cmp
cmp
pop
sub
cmpsb
jge
gs
std
mov
test
pop
push
or
in
xchg
test
add
push
xchg
mov
pop
jge
xchg
insl
rol
push
test
xlat
cmpl
outsl
sti
dec
lahf
fdivs
jo
outsl
cmpsl
cmp
stos
sub
and
pusha
pop
fwait
aaa
ret
mov
lahf
roll
or
andnps
push
cmp
add
jo
xchg
bnd
popa
xchg
pop
xchg
dec
mov
clc
push
mov
gs
in
jae,pn
pop
scas
push
rcrb
mov
sub
movb
add
insl
movsl
add
ss
or
das
fidivl
fistpl
xor
jae
ret
fidivrs
stos
lret
pusha
stos
sbb
imul
arpl
pop
inc
push
sub
or
push
mov
mov
pop
xchg
mov
mov
xchg
mov
fcoml
test
call
mov
imul
add
je
js
scas
push
pop
inc
jge
pop
fnstsw
scas
mov
push
dec
rolb
inc
stc
inc
or
mov
ret
dec
lds
jmp
jmp
mov
scas
push
cmpl
adc
pop
cmp
jae
int3
push
inc
sub
out
movsb
ljmp
aad
hlt
bound
sti
cld
pop
mov
mov
jb
cmp
and
sbb
jnp
xchg
negl
sub
arpl
in
test
xchg
ja
in
cmp
jo
push
dec
sbbb
enter
test
sbb
xchg
lock
je
and
out
fcmovnbe
mov
mov
mov
jmp
cmpb
add
push
jl
repnz
test
or
cwtl
dec
js
bound
fs
lret
pop
push
add
jns
imul
iret
add
loope
in
aam
jno
add
std
sbb
add
jl
rcll
lret
outsb
inc
call
cmp
les
fstpt
jne
push
out
mov
insb
push
and
push
cmp
jae
xchg
mov
xchg
mov
movsb
faddl
add
fsubs
ret
sbb
out
cmp
test
pop
scas
inc
sbb
aaa
adc
ret
jl
into
mov
push
out
xchg
mov
enter
xor
sahf
cwtl
cmp
xor
mov
xchg
or
dec
pushf
xchg
popl
sar
leave
outsb
popf
iret
cmpsb
adc
cltd
rcrl
pop
push
aad
in
sub
inc
rcrl
ja
and
cmp
cmp
xchg
cmp
jbe
xchg
insb
pop
repz
repz
push
add
aad
inc
pop
sub
andl
xchg
jecxz
sbb
sub
adc
daa
add
clc
xor
in
movsb
fidivs
in
out
mov
aad
mov
cmp
dec
lock
jge
idiv
inc
jb
push
add
pop
adc
dec
leave
nop
and
fs
xchg
hlt
xchg
xor
sahf
addb
outsl
das
in
lahf
dec
jae
add
jo
mov
inc
nop
mov
mov
subl
movsb
xor
fs
cmp
es
jae
dec
sub
xor
dec
out
xchg
iret
cmp
iret
jmp
push
jbe
mov
jno
pusha
es
sbb
repz
add
hlt
inc
xchg
xor
lea
data16
jecxz
cwtl
or
mov
pop
popa
push
imul
faddl
or
mov
xchg
xchg
adc
add
dec
mov
jmp
sub
int3
mov
adc
cmp
std
pushf
call
and
sub
sub
ljmp
add
xor
mov
in
dec
imul
adc
fs
inc
je
pop
mov
pop
fcom
add
inc
frstor
pop
sub
cs
pop
sub
mov
jp
xchg
mov
push
push
push
xor
imul
mov
popw
or
jle
lods
fstps
xchg
dec
mov
lea
push
or
sahf
scas
cmp
jmp
vpcomuq
clc
pop
mov
xchg
fs
pop
popf
shrb
aaa
int3
mov
pushf
push
sub
sbb
cwtl
sbb
js
pop
pop
sbb
hlt
frstor
int3
outsl
test
popa
mov
mov
lods
int
cltd
jg
test
sbb
hlt
inc
popa
mov
jmp
jnp
adc
fsubrp
push
stc
movsl
pop
gs
xor
sub
pushl
fdivl
jo
mov
add
out
cmpb
mov
push
mov
sahf
in
jae
pusha
lret
jb
std
lods
push
and
jne
mov
arpl
jp
dec
pushf
jl
sub
dec
aam
pop
mov
insl
sarl
sbb
dec
nop
clc
push
ss
cmp
ficomps
mov
pop
ret
push
loopne
mov
and
out
insl
stc
mov
xchg
mov
pusha
jnp
sub
inc
sub
movsl
cmpsb
gs
iret
cmp
xchg
loopne
xchg
push
arpl
stos
lcall
sbb
mov
outsb
jl
dec
add
push
or
icebp
fisubrs
xor
in
fildll
adc
mov
and
mov
test
mul
sarl
inc
in
or
push
fisttps
fs
dec
adc
xor
loopne
test
jb
lea
adcb
fsts
outsl
addr16
outsb
or
adc
lahf
dec
sti
mov
fcomps
sub
dec
lret
addr16
jp
jns
pop
cmp
ret
push
cltd
push
lret
push
push
testb
out
into
sbb
test
fdivrp
mov
mov
pop
out
stc
sub
sbbb
push
sbbl
sub
xchg
jle
and
dec
fidivs
inc
popa
addl
rorl
mov
lcall
fidivl
aam
test
leave
movsb
outsl
cltd
sahf
sbb
sub
pusha
mull
je
inc
pushf
es
enter
xchg
xor
ds
dec
jno
aam
dec
mov
mov
cwtl
jge
push
mov
fisttpll
adc
call
dec
xchg
loopne
mov
jecxz
jo
add
mov
call
clc
loopne
ljmp
ljmp
mov
push
loopne
mov
push
inc
es
or
dec
fcomip
inc
in
lret
push
cmp
xchg
imulb
ljmp
ss
cs
call
mov
push
pop
loop
testl
enter
sahf
sub
cmp
dec
in
adc
fidivs
popa
lcall
cmpsb
inc
daa
push
sbb
addr16
push
movsl
and
fsubl
popf
pop
lods
stc
out
push
adc
repnz
mov
imul
push
sbb
imul
push
fsubr
rcl
cmp
rcrb
push
into
fildll
inc
inc
fildl
fisubl
mov
mov
jnp
mov
add
les
icebp
jno
cmp
jb
and
mov
sbb
sbb
add
push
jo
sbb
arpl
out
jle
nop
add
ret
inc
xlat
jo
xchg
pop
sub
imul
jle
push
mov
ret
dec
stos
pusha
cmp
inc
ds
popf
jns
mov
outsb
push
leave
jg
sbb
jae
out
lahf
or
mov
in
repnz
int3
in
mov
add
mov
scas
jmp
jl
xchg
sbb
cli
jg
mov
xor
push
or
movsb
dec
jge
jne
cmpsb
push
push
fdivl
xchg
push
xorb
xchg
pop
in
pop
fwait
lods
sub
ret
sbb
and
mov
and
pushl
cmpsl
fsubrs
push
mov
xor
lock
arpl
push
in
xor
adc
clc
movsl
jmp
cs
jb
andb
lock
les
test
and
ror
xchg
and
cmp
ret
cmpb
cli
dec
rolb
adc
orl
scas
rcll
lret
addr16
pop
cmp
repz
push
jecxz
mov
adcl
ja
insb
pop
fdivrp
jmp
das
ficoms
cmpsb
in
or
xchg
lds
pop
arpl
push
hlt
mov
cmp
adc
xor
bnd
jle
mov
inc
inc
mull
xor
mov
jno
lods
dec
in
or
add
in
ja
jo
mov
xchg
pop
cmp
loopne
push
fucomp
mov
fdivl
push
setge
cltd
imul
inc
pusha
cli
sub
sub
pop
mov
movsl
or
and
insl
sub
jnp
lcall
add
xchg
xchg
test
cmp
inc
test
dec
fldenv
xchg
xchg
test
lcall
cmpsl
or
stos
stos
out
fcomip
lock
rorb
out
sub
lcall
adc
jp
xor
xchg
in
pop
and
xchg
sub
call
xor
mov
jne
dec
fwait
cli
add
das
pop
scas
mov
das
loope
test
add
xlat
lea
dec
or
clc
sbb
jmpw
cltd
pop
push
mov
stc
in
add
mov
int3
fldcw
adcb
int
add
inc
bound
jo
es
cmpsb
sub
push
sub
iret
gs
cs
idivl
stos
sbb
cs
daa
adcb
cmovle
sbb
or
jo
pop
mov
mov
mov
pop
mov
push
gs
mov
xor
add
lcall
in
xorb
cmp
mov
mov
fidivrl
and
dec
cmpsl
nop
test
push
mov
je
aad
and
cmp
xchg
lock
jge
cs
int
cld
rcll
rorb
cmp
adc
ja
lds
sub
ret
js
sub
popa
gs
or
jle
push
mov
fstps
jo
cld
lea
cmp
or
sub
fsubrl
pop
or
insb
loopne
clc
into
dec
aas
inc
daa
out
dec
add
pop
test
negl
push
or
outsb
and
es
shll
rorb
push
sub
stos
decb
cli
sub
repz
mov
stos
std
inc
lock
inc
add
insl
pop
mov
popf
stos
shl
aas
or
mov
fs
mov
mov
lds
inc
clc
sbb
mov
lods
lods
pop
addl
mov
jnp
addl
nop
in
jecxz
testl
inc
mov
dec
jg
mov
inc
xchg
cmp
jle
inc
mov
in
dec
xchg
test
jg
test
sbb
pop
dec
inc
inc
cltd
call
inc
jmp
rcll
mov
pusha
dec
repnz
in
mov
aas
adc
or
stc
lock
pop
rcrl
test
fdivs
roll
or
mov
sub
sarl
gs
push
icebp
add
xor
addr16
push
jp
mov
xchg
mov
xchg
roll
rclb
js
mov
cmp
mov
test
aas
lcall
faddp
pusha
int
sti
shll
popa
dec
and
xchg
lcall
mov
rorb
hlt
mov
lods
fistpl
dec
out
xor
insl
cmpsb
sbb
jecxz
mov
or
fs
cmovl
add
fwait
or
icebp
add
cltd
pop
push
ss
popl
cld
ror
mov
dec
xchg
add
insl
scas
repnz
fisubrl
mov
cmpsb
pcmpeqw
fdivr
scas
mov
and
cmp
fmul
cmp
lcall
push
push
pop
jae
mov
movsb
gs
aaa
iret
cmpsb
and
jne
add
mov
cmp
shrl
mov
insb
ret
and
and
fld
subb
xor
inc
inc
mov
jne
inc
mov
loope
or
inc
cli
scas
lods
out
mov
sti
cmpb
stc
inc
or
js
or
cmp
push
xchg
dec
xchg
or
aam
lcall
rcrb
adc
test
test
push
lcall
jo
fs
lods
mov
je
push
xchg
lahf
jnp
cmc
push
lcall
orb
fucomi
push
jle
push
adc
ret
xlat
push
dec
int
pop
test
cli
cli
mov
mov
adc
int
ficoml
push
xor
mov
std
lahf
mov
mov
test
xor
pusha
cmpsl
push
das
adc
in
rcll
test
pop
loop
or
jno
cs
cli
sbb
pushf
xor
cmpsl
xchg
push
sti
movsl
bound
jno
fcoml
mov
and
lret
dec
int
pop
jne
popf
movsl
pop
subb
and
dec
pop
push
cmpl
push
outsl
dec
ror
movl
push
test
push
bound
push
mov
outsb
jmp
movsl
add
jno
out
les
fcomps
lods
mov
xor
mov
cmpsb
mov
fwait
rcrb
mov
cmc
inc
out
xchg
push
fucom
mov
movsb
pop
or
sbb
popa
rcr
mov
sbb
jecxz
fdivs
aaa
inc
std
sub
out
and
push
test
out
pushf
nop
inc
testb
dec
push
xchg
mov
mov
or
imul
stos
sbb
mov
outsl
inc
int3
mov
orl
fsubr
stos
gs
mov
stos
push
nop
cmp
addr16
cmc
or
cmp
jmp
jb
mov
add
loop
int
mov
pop
or
cltd
pop
rcrb
mov
pop
jp
stc
pusha
jbe
and
mov
or
std
das
cmp
mov
mov
dec
fmull
jg
push
sbb
lods
jmp
sbb
inc
fwait
les
push
dec
mov
or
std
paddb
or
cmp
rcrb
loop
jecxz
inc
pop
es
mov
cli
arpl
xchg
inc
in
mov
es
push
cmpsl
hlt
cmpsl
loope
xor
push
cli
sbb
cmp
cmpsb
inc
xor
pop
sub
push
xor
jbe
outsb
or
xor
nop
ds
push
sbb
lret
psubd
cmpsl
mov
sbb
pop
imul
pop
test
mov
cmpsl
push
cmp
or
inc
cmc
mov
jae
or
inc
cmp
adc
or
adc
mov
push
push
ja
jb
inc
mov
or
pop
dec
jge
addr16
cmp
xor
pminub
lahf
loop
mov
adc
aaa
mov
cmp
and
pop
rcr
arpl
sahf
cmp
je
pop
xor
ja
pop
jle
or
out
or
dec
data16
in
in
xchg
xchg
xchg
shll
adc
jecxz
aaa
lock
lcall
or
sub
aas
cltd
mov
insl
mov
pop
pop
xchg
xor
bound
in
shlb
fimuls
jne
std
push
jg
jne
mov
out
ret
adc
out
inc
lret
adc
fisubrl
sbb
stc
mov
fldcw
test
fstl
mov
je
xchg
mov
add
sbb
mov
lods
push
add
inc
add
imul
imul
xchg
aad
iret
loope
adc
int3
mov
cmc
andl
inc
fst
xchg
out
fildll
loop
lock
cmc
push
outsl
fsub
rolb
pop
push
leave
mov
sub
jp
sub
sarb
add
das
sti
repnz
sahf
pop
mov
adc
mov
enter
insb
orl
rclb
adc
adc
jle
or
rorb
data16
std
insl
pop
xchg
mov
arpl
shrd
xchg
cmpsl
pop
sub
lods
out
lahf
push
jle
adc
rorl
lret
jg
sub
data16
xlat
into
inc
insl
jle
sbb
jbe
fs
pop
popf
imul
out
andb
shrb
ja
clc
lcall
inc
loop
stc
ret
and
outsl
adc
inc
int3
lock
cmp
test
sbb
pop
jmp
pop
fildll
adc
add
je
out
xor
pop
xchg
mov
lret
aad
xchg
cmpsb
enter
das
scas
adc
out
sbb
xchg
or
call
jge
loope
push
addl
mov
aam
addr16
push
mov
in
leave
or
mov
je
xor
xor
pop
cli
cmpl
icebp
cmovge
lock
jge
push
daa
jbe
inc
jecxz
fistl
xor
fsubrl
jp
fcompl
daa
clc
sub
dec
bound
pusha
jbe
mov
xor
cwtl
int3
cli
mov
and
fs
imul
popf
outsl
lret
rcrb
int
dec
add
fcomi
push
inc
jne
enter
dec
repnz
stos
and
jno
xchg
cltd
lahf
sbb
icebp
pusha
xor
pop
sarb
ljmp
scas
pusha
lds
cli
jp
inc
sti
jo
out
in
test
ds
sub
cmp
sti
jge
in
lods
ss
lds
mov
outsl
dec
xchg
xchg
sbb
dec
sbb
xor
repz
jbe
insb
pushf
sub
pop
sub
or
pop
xchg
pop
sub
sbb
mov
mov
jle
sahf
shlb
andb
jp
in
cltd
lret
xchg
push
aad
sub
clc
or
fs
jns
cmc
cmp
push
test
iret
in
test
aas
test
into
mov
dec
mov
out
movsl
in
test
sub
movsl
or
sbb
cltd
nop
out
repz
popf
bound
divb
dec
ljmp
pop
xchg
jnp
xor
in
leave
or
icebp
push
not
xor
and
insb
add
fistps
mov
mov
pop
mov
scas
dec
push
xchg
rcrb
iret
ret
jno
into
jg
dec
and
loopne
mov
cltd
xchg
jge
std
sbb
popf
or
aam
sub
jae
mov
shll
dec
mov
mov
mov
js
jo
ficoml
mov
fsubrl
pop
xchg
out
ret
mov
inc
push
mul
rorb
inc
mov
loope
dec
addr16
mov
cmpsb
jnp
add
lods
imul
mov
ja
jle
pop
push
ret
xor
add
sub
sub
xor
out
or
mov
cmp
lods
inc
jns
cltd
repnz
shl
mov
mov
mov
and
int3
inc
mov
fstps
xor
inc
loopne
stc
jmp
stc
hlt
es
xchg
addr16
pop
fstps
or
or
movsb
shlb
aam
push
ja
push
jne
push
ds
popf
xor
insb
push
mov
mov
sub
jae
hlt
movsb
and
push
sbb
pop
mov
mov
xor
pop
out
sub
test
cmp
mov
sbb
or
mov
bound
dec
enter
jo
arpl
mov
add
subl
mov
imulb
dec
cmc
mov
daa
mov
xchg
sub
cmpsb
aam
jg
xor
mov
push
xchg
out
and
jae
fnstsw
cmpsb
mov
lahf
mov
scas
sbb
push
icebp
jg
rcrb
lock
std
xor
out
or
popa
and
loopne
sbb
mov
ficoml
mov
fcoms
sarl
sub
inc
jb
je
xor
jno
and
xchg
outsb
popa
mov
icebp
loop
arpl
mov
push
jmp
sbb
bound
test
hlt
jne
imul
mov
dec
gs
xchg
data16
sbb
movsb
mov
daa
mov
out
mov
pop
fsubrl
push
add
inc
xchg
in
js
fwait
and
cmp
or
scas
sub
shll
ja
or
and
xor
inc
pusha
mov
dec
mov
pop
loopne
repz
xor
pop
les
dec
sub
inc
xor
enter
filds
dec
mov
popa
push
mov
push
pop
inc
mov
shrb
sti
add
imul
test
in
or
scas
rcl
data16
xchg
shrl
push
rorl
cmp
push
pop
cs
push
cmp
or
add
sbb
add
adc
and
mov
xchg
jmp
sbb
dec
call
dec
inc
dec
test
push
outsb
cwtl
push
movb
inc
cld
lock
jo
mov
cli
pop
mov
dec
testl
cmp
shlb
inc
cli
jg
movsb
out
enter
pop
mov
dec
dec
loopne
xchg
clc
ds
and
mov
inc
xchg
sti
pop
pushf
sub
push
jns
mov
fdivrs
or
data16
hlt
mov
mov
adcl
fstl
adc
push
inc
pop
xchg
xor
sbb
lods
fstps
adc
cwtl
add
push
mov
ja
adc
push
jmp
and
cmpsl
pop
mov
mov
mov
pop
lods
das
jge
sbb
add
pushf
pop
lods
test
push
jle
mov
dec
test
inc
dec
sbb
jp
sbb
dec
lods
pop
std
cmp
dec
sbb
test
fucomp
push
push
xor
add
arpl
mov
jle
xchg
out
call
insb
test
shrl
xchg
lahf
cmp
mov
aaa
movsl
imul
adc
mov
lock
cwtl
mov
gs
jl
or
enterw
xchg
adc
xlat
test
xchg
or
push
mov
shl
add
cltd
xchg
loope
mov
fisubrs
pop
cmpsb
xchg
xchg
jmp
cmp
mov
dec
jecxz
negl
jle
cwtl
rorb
inc
pop
add
mov
cwtl
test
push
sub
in
adc
ret
mov
xchg
jge
data16
or
insl
mov
imul
jle
in
push
or
xchg
jle
inc
sti
sarl
sbb
xchg
stos
and
dec
inc
jae
jecxz
push
mov
insl
jmp
aad
fisubs
loop
mov
inc
outsl
mov
adc
enter
notl
pop
xor
insb
push
sub
test
mov
cwtl
inc
fwait
mov
xchg
xor
jnp
or
cmpsb
gs
sub
pop
sub
ljmp
pop
aas
push
jmp
xchg
push
xchg
pop
test
imul
es
mov
js
inc
sbb
repnz
mov
or
test
dec
fmull
ljmp
fidivl
sbb
xchg
lea
xchg
jge
fst
jnp
and
sbb
and
mov
push
mov
dec
mov
enter
out
call
fwait
and
xlat
sub
inc
mov
pop
sub
nop
int
xchg
inc
mov
int3
lods
mov
test
mov
xchg
shll
js
sbb
dec
fcmovu
stos
xchg
jmp
ffree
pop
into
mov
repnz
insb
or
sti
movsb
inc
imul
cld
sbb
in
sbb
push
scas
dec
mov
ja
push
xchg
push
sarb
lods
inc
fstps
daa
dec
inc
imul
lods
adcl
leave
mov
aaa
pop
data16
and
dec
pop
jne
fnstsw
bound
outsl
aas
aas
xchg
cmc
ds
xor
into
pop
xchg
ljmp
pop
orb
add
adc
xor
in
fcompl
jg
rcrl
test
and
pop
lods
dec
lock
test
push
jg
movsl
jge
jnp
add
shrb
lods
int3
or
xchg
and
xchg
or
add
ss
adc
sub
lea
in
insl
dec
in
pop
jno
repz
gs
cltd
jae
aam
popa
sbb
or
cmp
repnz
xor
inc
or
mov
stc
and
mov
jmp
cli
mov
dec
imul
pop
out
adcl
iret
or
push
pop
out
leave
sub
js
shlb
sbb
repz
adc
and
pop
adc
jmp
sub
mov
push
test
cmp
sbb
movsb
or
cmc
and
sub
pop
sub
push
cmc
in
icebp
cmp
clc
jns
mov
mov
or
lcall
int
sub
fstpt
mov
loope
pushf
mov
loopne
insb
dec
push
adc
lret
push
push
mov
fildl
sti
mov
mov
jge
xchg
jno
fsubrl
popa
sub
and
fidivs
push
jp
mov
cld
mov
cwtl
fnstenv
cmp
in
jbe
push
gs
dec
rorb
sub
insl
push
lret
pop
pop
test
jge
or
aad
xorb
adcl
lret
insl
adc
gs
shlb
inc
cmp
cmpl
sbb
dec
xor
pop
mov
hlt
jge
js
xchg
leave
dec
fwait
ss
sahf
pop
fwait
adc
xchg
hlt
xchg
xchg
insb
in
sbb
xor
lds
inc
out
fnstsw
push
adc
push
xor
push
lods
int3
push
sub
mov
jo
out
cmp
ret
js
fcompl
push
repz
insb
fwait
ret
or
mov
cmc
shrb
xchg
and
aad
sbb
std
xchg
jmp
out
jno
data16
lret
imul
lea
nop
arpl
ds
push
jl
xor
jge
repnz
movsl
icebp
mov
outsl
mov
xor
pop
in
outsl
fisubrs
int3
pop
cmp
je
and
in
iret
mov
fdivrs
jne
push
outsb
pop
nop
iret
fcmovbe
in
lcall
dec
pop
push
mov
cltd
xor
push
add
hlt
out
xchg
or
mov
mov
and
xchg
insb
in
popa
lea
daa
mov
push
addl
out
pushf
push
subb
lret
imul
cmp
xor
mov
popf
sbb
dec
ljmp
jae
out
push
sub
rorb
aaa
jno
test
pop
xchg
sub
fsubr
jbe
adc
or
popf
lds
cmp
push
dec
in
add
test
mov
and
ds
loope
xor
adc
pop
std
push
dec
addb
out
in
mov
jb
loop
fs
pushf
imul
mov
cmp
loop
in
inc
jecxz
aaa
ds
fwait
scas
and
pop
pop
push
andb
xor
in
shl
add
jnp
xchg
das
push
test
add
cli
sbbl
subb
popa
test
jne
aas
mov
cmp
test
fadds
ret
sub
lcall
shrl
jle
inc
xchg
pop
pop
lea
addb
icebp
outsb
cli
push
dec
setnp
cmp
push
mov
dec
xchg
pop
lods
mov
shll
scas
imul
pop
xchg
dec
mov
mov
dec
dec
loopne
or
lret
nop
push
mov
insb
sub
cmp
cmc
push
movsl
je
xchg
sub
add
inc
add
popa
mov
stos
push
xor
jo
negl
loopne
in
sbb
inc
jl
add
push
pop
sub
mov
mov
lret
lods
ja
adc
cmpl
test
mov
lahf
pop
jnp
add
call
adc
jnp
cmovnp
in
pop
inc
and
mov
push
fwait
pop
dec
call
push
sub
nop
or
js
cmpsl
and
jne
cmp
or
jl
push
mov
and
daa
sbb
enter
sub
and
dec
or
rcll
jns
and
mov
cltd
mov
les
xlat
call
ret
divl
ror
sbb
push
aad
xor
aam
ret
push
dec
dec
testb
test
xor
int3
mov
jo
icebp
push
jno
gs
ficomps
imul
ja
cmp
cmpsb
outsl
add
and
bound
inc
fmuls
pop
mov
jb
imul
lds
sarb
dec
arpl
nop
inc
xor
pusha
dec
or
sub
hlt
jl
jo
adc
mov
and
shr
xchg
ss
add
gs
shll
stos
push
lods
ja
push
out
ror
adc
cmp
dec
sub
movsl
dec
test
movsl
int3
jl
enter
rorl
outsl
dec
inc
lock
dec
push
ret
push
insl
mov
outsl
fsubrs
push
xor
jecxz
xchg
pop
xor
outsl
or
cmp
or
stos
jmp
int3
idiv
insl
adc
rcl
dec
push
inc
notl
dec
scas
jl
enter
inc
imul
outsl
es
sbb
pop
jb
inc
adc
push
sbb
cmp
pop
push
int
jmp
mov
pop
or
jno
pop
jns
cltd
add
pop
dec
ss
or
push
sbb
xlat
dec
xorb
data16
pop
call
xchg
std
mov
push
lret
and
cmp
xor
mov
rclb
icebp
cmp
incl
mov
inc
hlt
ret
cs
pop
add
adc
push
aaa
add
or
or
xor
jle
adc
xor
inc
test
xor
insl
testl
cli
sbb
sbb
pop
pushf
adcl
sbb
jg
rcl
ret
test
dec
fdivl
cwtl
xchg
cmpsl
or
orb
push
inc
pop
outsb
mov
arpl
call
and
cltd
lds
xchg
out
aaa
cwtl
jbe
add
sahf
inc
pushf
push
lods
outsb
xchg
shll
stos
xchg
arpl
mov
icebp
into
movsl
jne
fmull
out
aam
aam
out
mov
scas
and
pop
push
and
mov
shlb
xchg
inc
test
push
andl
das
dec
mov
inc
adc
ljmp
rcr
enter
or
inc
fildl
scas
cs
ret
repz
pop
fists
xlat
pop
cmp
mov
xor
fsubp
sbb
out
dec
test
or
loop
sarl
stos
cs
mov
shrb
xor
movsb
mov
cltd
stc
loope
sbb
daa
fisubs
aas
xchg
cli
pop
jo
dec
dec
mov
rol
ja
mov
lret
sub
pop
push
inc
mov
mov
push
ret
ret
cmp
inc
mov
test
push
lahf
insb
sub
xor
aam
and
add
cmp
leave
fimuls
fwait
xchg
cmp
clc
pusha
dec
xchg
jecxz,pn
and
out
aas
das
jle
xlat
push
loope
add
aam
mov
iret
incl
addr16
popf
jne
mov
subl
adc
jmp
xor
xchg
mov
xor
adc
and
jp
mov
or
je
sub
insl
mov
mov
clc
cwtd
test
adc
jecxz
adc
cmp
jle
repz
push
lods
sub
sub
movsl
lods
int
xor
lret
xchg
dec
sub
rcrb
fidivrl
jb
adc
imul
stc
mov
sahf
push
xlat
adc
push
aad
mov
loop
or
jl
fwait
sub
aaa
gs
jb
popf
ss
pop
pop
cld
imul
cwtl
stos
scas
mov
fs
shll
push
mov
xor
add
lods
sahf
mov
dec
mov
lcall
daa
xchg
add
pop
nop
lock
xchg
loopne
sub
lods
sub
jg
hlt
imul
xchg
andb
in
out
inc
pop
dec
mov
ljmp
mov
imul
xchg
sbb
mov
out
lds
in
pop
jbe
jo
sub
loope
mov
adc
addr16
sahf
add
in
out
fldcw
sbb
lahf
jmp
or
pop
stc
mov
negb
fs
bound
repnz
dec
ret
mov
mov
pop
bound
and
mov
cmp
cmpsl
outsl
nop
dec
xchg
aad
pop
lock
fdiv
ja
or
out
and
inc
les
sub
mov
inc
inc
lds
jae
mov
ret
mov
dec
jbe
loopne
loope
and
hlt
dec
aam
stc
add
dec
pop
mov
cmp
sahf
adc
jmp
and
insb
rolb
repz
stc
mov
dec
stc
fwait
xchg
cld
out
or
neg
mov
xor
popf
leave
pop
inc
jnp
adc
pushf
js
dec
and
stos
aam
je
aas
push
loopne
and
ja
xchg
outsl
stos
push
lods
push
mov
test
push
and
sub
mov
stc
arpl
dec
test
sub
jns
push
adc
adc
or
and
out
int
push
stos
aam
add
jae
fsincos
imul
jl
inc
jne
dec
mov
loope
lods
in
iret
mov
shrl
sub
fs
sub
aam
sub
sbb
jecxz
pop
pop
fs
mov
pop
jno
jb
data16
jb
push
icebp
mov
push
repnz
scas
sub
jbe
push
pop
fs
dec
pushf
shrb
ret
lea
fs
jge
mov
add
inc
sub
rorl
insl
add
jmp
xchg
popl
insl
movq
pop
cwtl
inc
sbb
inc
fcmovbe
iret
sbb
je
pop
pop
xlat
xchg
pop
bound
js
pop
fwait
rclb
adc
mov
dec
lret
dec
daa
add
push
add
ljmp
ret
test
leave
pop
cmpsl
or
mov
mov
xchg
add
sbb
mov
adc
data16
add
imul
pushf
jb
jnp
stos
mov
sub
subb
push
mov
jle
adc
rcll
adc
sahf
dec
inc
xor
xor
leave
loope
mov
or
mov
add
cmpsb
lods
daa
lret
fisttps
dec
in
icebp
insl
cs
xchg
sbb
clc
push
std
mov
push
pop
adc
dec
out
mov
jnp
out
pushf
xchg
pop
lea
jb
out
lock
mov
cmc
pop
and
cld
add
sti
jg
mov
mov
cmc
pusha
inc
cmp
jo
clc
jmp
xchg
in
dec
cmpsl
rorl
test
jae
and
fmuls
add
mov
iret
scas
cmpsl
in
ljmp
lcall
sbb
add
stos
push
fwait
push
lahf
enter
outsl
add
add
stos
push
push
xchg
mov
scas
popf
call
inc
test
pop
aam
mov
cmp
mov
aas
fisubl
leave
gs
push
es
mov
dec
xor
insl
icebp
jecxz
sub
sarl
push
loopne
and
insb
mov
repnz
mov
dec
and
jns
inc
movsl
and
push
jo
movsb
cmp
out
mov
stos
jnp
out
imul
pop
mov
cltd
mov
test
mov
fcompl
and
dec
cmpsb
lea
adc
test
pusha
mov
hlt
hlt
xchg
imul
lcall
clc
sbb
mov
pop
add
hlt
push
adc
arpl
fsubl
scas
mov
xchg
mov
lods
cld
push
xor
es
mov
imul
int
xor
cmpsl
push
mov
pop
mov
jg
push
cli
pop
jae
pop
and
pop
xor
mov
sub
jne
sbb
cmp
mov
pop
in
cmp
adc
push
xchg
call
jnp
dec
inc
fldt
sub
fdivrl
sub
and
cmp
sub
ret
sbb
lret
inc
dec
xor
mov
fdivp
mov
shl
pop
adc
outsl
stos
or
inc
jbe
adc
shrl
push
cs
shlb
or
jnp
repz
cli
push
dec
lods
loopne
out
cli
mov
orl
pop
xchg
cmp
fidivs
fidivrs
or
inc
pop
xchg
adc
lock
jmp
add
repz
std
js
mov
loop
iret
xchg
loop
cmp
xchg
sti
fwait
jno
in
hlt
sub
stos
dec
in
or
lods
repnz
jge
outsb
out
iret
inc
jno
xor
imul
fnop
add
xchg
insl
sbb
xchg
or
dec
ljmp
push
mov
mov
adc
inc
pop
dec
mov
mov
inc
mov
and
mov
sti
les
lahf
insb
inc
and
out
add
jge
mov
nop
xlat
popf
fdivl
aaa
xchg
div
mov
or
int3
and
add
movsb
and
dec
jge
or
mov
xchg
out
xchg
dec
js
rorl
das
pushf
lcall
les
rcll
lahf
test
fdivs
call
add
mov
cmp
push
add
xchg
lret
add
ret
test
sub
daa
sahf
or
repnz
sarb
sbb
jg
sub
and
mov
pop
movb
sbb
inc
arpl
mov
ds
pop
ficoms
ds
cs
ljmp
push
push
pop
mov
outsb
out
pop
lea
inc
mov
lret
xorb
push
sahf
out
roll
mov
repnz
cmp
lret
rclb
adc
iret
push
in
dec
pop
push
ss
data16
mov
repz
pop
cltd
rcrl
outsl
shl
xor
push
movsb
mov
xchg
mov
inc
jmp
sbb
pop
orb
je
inc
push
and
fistps
jmp
mov
push
js
and
adc
cmp
or
mov
mov
fdivr
adc
push
dec
sub
jp
hlt
sbb
test
mov
add
cmc
test
xor
and
sbb
sbb
jp
aas
dec
and
ss
ds
stos
mov
mov
push
pop
mov
mov
pop
stos
inc
sub
mov
sbb
cltd
jge
out
dec
fsub
mov
cmp
jle
xor
hlt
int
cltd
gs
rcrb
and
cmpps
jb
loopne
mov
mov
and
aaa
data16
popf
dec
pop
rorb
movsl
xchg
aam
repz
sti
jmp
test
dec
test
ret
mov
xchg
ret
sbb
aas
ljmp
fyl2xp1
mov
cmp
leave
daa
into
or
jp
jmp
mov
dec
mov
xchg
gs
adc
cld
out
js
mov
pop
adc
xor
mov
sbb
xor
lds
das
push
mov
add
xchg
int3
xchg
cmp
mov
add
cmpsl
dec
ret
adc
jbe
lcall
hlt
jb
cmpsb
jecxz
mov
es
mov
data16
xor
adc
dec
jnp
pushf
mov
push
mov
insb
dec
or
into
sbb
jb
inc
xchg
lods
test
add
push
sbb
shll
leave
xlat
sub
movsb
jle
in
push
fimull
or
inc
cli
dec
cmp
xchg
cs
stc
jo
pop
in
jno
mov
stc
ret
mov
pop
and
fs
add
adc
loop
pop
loope
gs
mov
scas
movb
sbb
loopne
adc
adc
ja
rorl
in
push
cmpsl
lock
int
fdivs
pushf
xor
loope
sub
fidivs
sub
call
mov
mov
lods
xchg
ss
out
sbb
and
push
jne
sahf
mov
or
mov
add
jns
pop
mull
shrb
dec
mov
in
cmpsl
push
out
pop
shl
adc
rorb
xchg
add
and
daa
xchg
sbb
ja
adc
and
push
adc
insl
je
pop
xor
dec
imul
mov
arpl
xchg
shl
mov
xor
xor
mov
cmp
add
xchg
add
cs
inc
jns
mov
and
mov
aad
mov
lods
sar
pop
cld
mov
aad
sub
adcb
push
ja
xchg
repz
inc
mov
cmp
lods
pusha
jl
jle
sti
cmpsl
lret
jbe
mov
imul
mov
inc
xchg
dec
mov
pop
sub
pop
or
jecxz
out
adc
sub
test
scas
cmp
jle
cmp
mov
mov
xlat
lret
mov
mov
push
jge
push
mov
jns
push
daa
in
push
lds
pop
fcmovnu
lds
aaa
cli
adc
pop
lods
mov
mov
test
ffreep
pop
call
sub
cs
dec
mov
sub
dec
sub
icebp
xchg
or
jle
or
addb
ljmp
lods
arpl
or
scas
icebp
sbb
add
pop
in
adc
movsb
cmc
mov
lcall
xor
adc
sub
sbb
xchg
push
mov
cmp
sbb
lret
sbb
dec
das
fsub
push
ret
xchg
imul
test
sahf
repz
out
xchg
fs
iret
mov
stos
call
hlt
out
inc
cwtl
push
out
js
sbb
xlat
repnz
xchg
dec
dec
fdivl
sbb
and
xchg
test
mov
or
or
jno
int
inc
xchg
outsb
jns
pusha
pop
insb
movsl
lods
aaa
inc
ret
sbb
dec
loopne
pop
mov
bound
cmpsl
or
out
and
mov
repnz
xor
shll
or
fwait
jl
push
adc
mov
orl
mov
mov
test
fsubl
push
clc
stos
lcall
mov
cli
rol
push
sbb
arpl
ret
hlt
jo
xor
outsl
jg
pop
jns
inc
hlt
add
gs
lret
xchg
rclb
xchg
sbb
mov
pushf
cmc
rclb
push
icebp
pop
cmp
dec
sub
jns
aam
test
mov
sub
mov
int
inc
js
movsb
add
mov
pop
xchg
dec
dec
pop
addr16
js
mov
out
sbb
pop
filds
je
mov
insl
scas
das
dec
das
push
cwtl
test
push
mov
outsb
in
sub
sub
lods
bound
out
fidivl
js
xchg
stos
mov
or
js
xchg
cmpl
jo
pushf
xchg
cmp
icebp
push
sub
xlat
mov
lods
add
and
mov
mov
fwait
out
xor
ficoms
adc
adc
cmp
imul
les
xchg
movsb
test
pop
les
inc
es
insl
push
dec
insl
or
scas
ret
ja
pop
fisubs
lret
cmp
shlb
add
sub
ret
lea
jecxz
enter
cmp
icebp
sub
push
xor
fcmovnbe
sbb
fcompl
push
int3
orw
add
ret
jo
stos
test
and
ds
sbb
ja
popa
fs
popa
sahf
bound
xor
popa
jno
dec
sub
jge
dec
lods
cmpsl
and
and
mov
fistl
sbb
stos
adc
xor
ret
dec
insl
push
adc
mov
inc
dec
adc
fistl
xchg
sub
inc
dec
outsb
cmp
jmp
push
mov
nop
inc
je
getsec
dec
or
sub
xor
int
dec
pop
fdivl
and
cmpl
or
and
push
repnz
pop
fimull
mov
cmpb
or
nop
sub
fnsave
test
push
jge
sub
hlt
ret
sbb
mov
sbb
mov
test
jecxz
movsb
repnz
push
cwtl
out
daa
mov
mov
pushf
inc
xor
cmp
add
cli
mov
adc
mov
out
adc
ljmp
call
jb
mov
int3
les
push
pop
fnstenv
jmp
adc
loopne
mov
xchg
pop
lods
pop
sub
sub
mov
and
aaa
cmpsl
pop
stc
scas
and
shrl
pop
test
adc
std
mov
leave
fists
adc
into
lahf
xor
or
lret
rolb
mov
fbld
xchg
roll
push
fwait
jo
imul
fldt
mov
push
imul
dec
pop
dec
fcmovu
inc
pusha
movsl
dec
jnp
sbb
dec
das
mov
xchg
xchg
mov
push
imulb
xor
pop
adc
fs
push
jl
mov
sti
sahf
push
pop
or
bound
pop
insb
daa
inc
aad
int
jg
ds
leave
mov
and
cmp
xor
cltd
push
lods
sbb
push
rorb
add
aas
dec
and
xor
mov
cwtl
ret
jle
insl
cmpsb
adc
rcrl
clc
stc
xor
lahf
or
nop
xorb
mov
jmp
sub
or
pop
and
test
pop
enter
fsts
ss
pusha
scas
imul
or
cmp
inc
mov
sub
pop
sub
imul
inc
sub
pop
dec
pop
sbb
das
mov
cmp
mov
fldl
mov
pusha
jb
ret
or
femms
daa
cmc
dec
sti
sbb
adc
cli
mov
push
ret
jbe
jb
sub
sub
sbb
xchg
sub
jb
cli
cmpsb
imul
movsb
mov
add
aad
out
test
cmp
xchg
es
xor
push
sbb
or
add
imul
pop
mov
shll
das
movsb
mov
jae
mov
sbb
cmc
xchg
jb
cmp
xor
repz
ljmp
stos
sub
mov
push
sbb
fnstsw
jb
aaa
shll
jmp
cmp
imul
and
por
daa
sub
pop
fadds
mov
pop
mov
push
pop
aas
fwait
jbe
mov
scas
fistps
dec
mov
fwait
divl
mov
stc
fisubl
loop
fisttpll
shrb
or
cmpsb
adc
negl
adc
test
shlb
test
ljmp
push
mov
outsl
inc
jbe
mov
aam
mov
inc
xchg
push
sbb
pop
add
jo
pop
mov
aam
or
movsl
mov
xor
test
addr16
addr16
repz
xchg
es
std
cmp
inc
inc
mov
das
in
lods
imul
pop
mov
loopne
fs
cmpsb
pop
hlt
pop
out
jg
out
inc
fsub
jmp
mulb
lret
lahf
xor
lcall
add
add
adc
test
and
fdiv
jge
lods
adc
jno
ljmp
daa
push
mov
pop
fiadds
dec
fnstcw
push
ss
int3
dec
sar
add
lods
xchg
or
cmp
sub
leave
and
out
add
pop
sub
lcall
insb
arpl
shlb
fstpl
arpl
shrl
das
insb
scas
cmp
xchg
mov
mulb
adc
mov
push
fucomp
pop
pushf
or
and
cwtl
ficoms
loope
sbb
cld
hlt
and
inc
jne
ret
lret
dec
sub
rcl
fsubl
clc
mov
mov
daa
dec
stos
stc
dec
sahf
dec
cli
xor
mov
clc
icebp
repz
push
and
and
xlat
int3
add
xlat
mov
adc
inc
imul
int
lock
xchg
mov
iret
outsl
jmp
repnz
xchg
push
mov
test
xchg
lea
add
inc
hlt
xchg
xchg
push
push
jle
cs
mov
sar
test
popa
ds
lret
scas
mov
push
lret
xchg
and
in
sbb
jmp
mov
add
xchg
js
and
dec
jno
push
cmp
mov
pop
or
sub
fsubrl
jno
and
push
stos
and
adc
hlt
pop
inc
arpl
xrelease
scas
std
jbe
into
adc
xchg
mov
mov
rorb
jo
sub
cs
divl
rcl
cmp
sbb
add
stos
pop
rcll
lock
les
aam
push
icebp
xchg
frstor
pop
enter
loopne
pushf
stos
adc
rcrb
mov
sti
lret
mov
dec
sbbl
xchg
clc
in
gs
clc
rclb
movb
jl
test
in
addr16
ljmp
pop
push
sbb
mov
and
fcmovb
repnz
cmpsb
daa
cmovbe
lret
shr
outsb
fistps
loope
xlat
rcll
inc
mov
mov
sahf
mov
xchg
mov
mov
cmp
sub
adc
add
into
stos
ret
lcall
xor
or
jl
push
xor
push
stos
xchg
inc
mov
call
ja
sbb
imul
es
lret
cmp
dec
cmc
lret
mov
jno
cmp
adc
jge
add
dec
test
popa
cmpsl
mov
lret
push
xor
hlt
sbb
fs
cmp
in
jb
lods
pop
push
test
mov
dec
fstl
xchg
nop
mov
mov
shlb
push
and
sub
jnp
jae
mov
enter
loope
pop
dec
fisttpl
xchg
push
jmp
loop
xor
pop
daa
jg
stc
in
mov
jns
rcrb
jnp
sbb
mov
pop
outsb
add
dec
into
dec
mov
xor
iret
mov
inc
test
loop
xlat
sbb
loope
add
leave
bound
add
test
mov
loope
or
sti
sbb
or
xorl
cmp
aad
xchg
lods
push
idiv
imul
loop
scas
insb
repz
sbb
ss
sarl
into
or
jnp
in
repnz
mull
test
mov
or
in
daa
inc
lods
testl
or
lret
xchg
iret
pop
imul
push
adc
cmp
inc
movsl
scas
repnz
movsb
lds
mov
ds
jg
pop
lcall
jl
ss
xchg
shl
xchg
dec
stos
leave
sbb
dec
dec
stc
jo
xchg
mov
in
mov
or
xchg
sub
push
pop
ljmp
xlat
pop
pusha
iret
push
pop
inc
mov
icebp
divl
push
sub
imulb
movsl
mov
fdivs
or
dec
cmp
xchg
push
int
push
lea
std
mov
mov
and
mov
pop
rcr
add
adc
in
loop
push
mov
repnz
xlat
loopne
jecxz
cmp
push
mov
je
jge
arpl
mov
hlt
lods
dec
cmpsl
jl
in
dec
push
int3
or
mov
out
and
fs
out
fisttps
pop
sbb
fs
push
lock
pop
sahf
and
out
inc
rcll
cmp
jg
lods
or
push
mov
push
pop
lret
or
fdivrp
mov
adc
movsb
lock
das
rorb
mov
pusha
mov
jg
sub
xchg
outsl
lds
xlat
cmpsb
dec
rcrl
pop
xchg
test
pusha
cmp
xor
loopne
daa
daa
sbb
dec
jecxz
repnz
ret
fdivrl
push
xor
and
inc
movsl
jbe
bound
adc
es
mov
pop
lcall
mov
nop
aam
out
lret
inc
jecxz
mov
fidivl
add
mov
jecxz
pushf
mov
lock
imul
xchg
mov
sub
jae
mov
call
jecxz
push
shlb
adc
or
mov
xchg
outsb
sub
xchg
das
xor
int
dec
es
mov
cld
inc
rcr
movsb
iret
push
and
mov
dec
jo
dec
addr16
fidivs
inc
sub
mov
jecxz
lcall
shlb
movsb
mov
lahf
mov
or
les
adc
fisubrs
mov
jge
xor
pusha
sub
in
xchg
fiaddl
lods
jmp
out
addr16
add
and
xlat
add
or
add
sahf
mov
sbb
jp
je
inc
notb
inc
xor
jg
imul
scas
xor
adc
cmp
mov
jns
push
or
out
call
clc
xor
movsl
call
out
jae
es
mov
repz
dec
jns
mov
stos
jns
scas
cld
cmp
cmpsb
ja
cmp
test
aad
pushl
lds
add
popa
and
je
lret
push
in
pop
aam
out
in
mov
cltd
jno
stos
loopne
jne
scas
jne
mov
ret
xor
xchg
ret
mov
and
fs
and
bound
test
adcl
xlat
push
push
sub
fistpl
stc
jno
daa
or
int
sub
into
in
stc
sahf
mov
mov
int3
push
inc
je
test
xchg
jns
xchg
shl
dec
aas
cmp
mov
movsl
mov
push
clc
movsb
sbb
fisubl
xor
int3
cmpsl
inc
nop
rorb
xlat
mov
mov
sub
orb
or
ret
xchg
insb
pop
leave
test
data16
mov
inc
mov
jle
movsl
push
pop
mov
ret
pop
insl
jp
ror
bound
mov
lea
mov
pop
iret
xchg
imul
and
stc
loope
insb
lea
cmp
sub
out
aam
test
cmp
add
aas
sub
dec
inc
xlat
dec
ret
nop
stos
cmp
pusha
jns
addb
rcrl
sbb
cmp
aaa
mov
inc
mov
jns
xchg
and
or
mov
testl
mov
sub
sti
mov
ljmp
xor
iret
adc
cmpsl
bound
jb
add
sbb
lret
pop
mov
hlt
jbe
mov
adc
jae
push
mov
push
rorb
arpl
lods
roll
pop
shll
sbb
dec
ds
add
xchg
orl
ja
cmp
mov
mov
sub
shrl
loope
psrlq
and
ficoms
lea
imul
sbb
sub
rcrl
fisttpll
adc
adc
outsl
bound
dec
push
adc
jecxz
bound
cmp
xchg
xchg
mov
xchg
and
imul
mov
jg
mov
xchg
xor
js
mov
xchg
stc
and
out
imul
jb
mov
test
add
and
repnz
clc
mov
cmpsb
aad
push
addr16
fmull
and
inc
clc
mov
xchg
sub
dec
dec
xchg
adc
frstor
sahf
mov
dec
cmp
mov
je
jle
sbb
test
jge
push
pop
add
ss
ret
pop
pusha
call
and
imul
inc
and
push
adc
sub
stos
in
cmpsl
jge
lea
inc
xor
push
in
int
fistps
mov
jo
inc
andl
mov
sub
andb
sbb
mov
xor
push
or
push
imul
mov
stc
jnp
subb
jg
pop
push
sub
mov
outsl
rcrl
arpl
arpl
in
xor
xor
pushf
cmc
lcall
rclb
sub
pop
lret
mov
outsl
out
push
lahf
sub
rcr
cltd
pop
scas
insb
pushf
cwtl
dec
fisubl
sub
jno
add
lcall
and
fs
lds
loope
subl
negl
shlb
imul
dec
push
inc
jg
loope
scas
mov
mov
shufps
and
notl
addr16
jns
inc
mov
add
push
xchg
les
mov
stos
inc
mov
cmp
dec
mov
cmp
sub
cmp
adc
icebp
mov
mov
xchg
jb
mov
in
jp
fistpl
sahf
mov
push
nop
pusha
aam
gs
mov
adc
mov
or
je
test
cmp
cltd
jae
xchg
mov
scas
mov
lcall
shlb
sbb
mov
dec
popf
outsb
sbb
enter
or
sti
mov
shll
ja
xchg
xor
stos
subb
or
jmp
arpl
ret
xchg
and
dec
into
push
cmp
stc
dec
movsb
add
mov
mov
rorb
sub
insl
xchg
xchg
shlb
in
jmp
xchg
lahf
negb
dec
push
std
inc
jmp
mov
sahf
fdivl
int3
sti
dec
mov
push
inc
lods
xchg
add
lret
cli
dec
jmp
xchg
lcall
sbbl
std
pop
mov
xchg
rcrl
das
bound
mov
or
outsb
icebp
pop
mov
jl
add
xchg
pop
lods
sbb
jp
out
cmp
inc
mov
sub
popa
outsl
mov
push
cwtl
roll
imull
pop
pusha
jbe
or
loopne
scas
es
cltd
cwtl
daa
mov
negl
inc
sub
push
pusha
adc
pop
cmpsb
shlb
xchg
inc
push
and
arpl
in
push
jle
call
stc
or
insb
or
fs
mov
dec
jb
cli
xchg
xlat
or
shlb
mov
xor
dec
inc
adc
cmc
push
cs
pusha
out
cmpsl
rcl
cmp
and
or
aad
mov
insl
mov
and
lods
in
sti
mov
jge
in
push
jecxz
pop
adc
out
sub
outsl
push
mov
dec
stos
in
ss
dec
xor
cmp
inc
dec
xchg
test
loope
sub
inc
loope
gs
adc
and
inc
push
loope
xchg
cmp
inc
xor
inc
dec
lds
pop
notl
xchg
es
jecxz
je
stos
pusha
ja
insl
pop
jge
or
fs
sbb
sbb
ds
addl
cs
and
aam
pop
ss
sub
sub
js
adc
pop
aad
ss
inc
repz
pop
fdivp
push
and
pop
clc
fs
in
jl
mov
das
mov
add
repz
hlt
pop
dec
mov
xorb
repnz
cmpsb
xchg
add
in
xchg
out
imul
add
lods
sbb
add
outsl
in
fcomi
mov
decb
aam
push
inc
jo
xor
int3
sahf
sarb
dec
jle
ret
andnps
les
xchg
mov
jnp
xchg
ja
add
jno
movsb
rolb
roll
inc
adc
mov
mov
cli
sbbl
xchg
xlat
fldt
mov
adc
lods
pushf
bound
outsl
mov
test
adc
ds
mov
scas
jecxz
in
in
stc
stc
mov
lret
inc
fidivrl
sahf
and
aad
xlat
or
mov
jle
cmp
sub
push
ja
lock
insb
rcl
clc
ds
out
call
popf
ret
rol
stos
or
scas
jp
mov
call
sbb
mov
pop
scas
daa
and
mov
imul
ja
inc
into
cmp
adc
lods
jmp
jmp
out
adc
dec
sbbb
adc
xor
test
stos
gs
or
xchg
dec
xchg
dec
nop
shlb
pop
jl
mov
sub
sub
lcall
lcall
pop
jns
sbb
int
addb
dec
lret
dec
mov
sbb
ret
adc
push
cmc
adc
mov
mov
add
iret
pop
insb
push
mov
cwtl
test
jecxz
dec
pop
mov
lret
repnz
add
rol
jmp
inc
loope
and
xor
loop
mov
cmp
jbe
mov
push
sbb
mov
repnz
cltd
jno
sub
popa
sbb
mov
jnp
ret
movsl
nop
mov
mov
lcall
push
and
pop
test
loope
mov
adc
bound
pop
shrl
sub
ss
and
nop
adc
or
mov
inc
in
loopne
xchg
inc
push
insl
jle
dec
ja
jnp
repnz
loopne
pop
sbb
dec
dec
xchg
scas
jp
xor
pop
mov
inc
push
mov
xchg
jg
cltd
mov
inc
xchg
pop
je
mov
popf
mov
cmp
pop
adc
mov
jb
xor
jno
mov
mov
cmpsb
adc
dec
xor
repnz
mov
pop
mov
fisubs
cmp
ss
or
or
cltd
push
popa
lret
mov
call
mov
mov
imul
jmp
out
xchg
mov
xlat
jp
decl
arpl
cmpsb
jnp
mov
cmp
push
dec
mov
xchg
rcrb
sub
pusha
inc
mov
bound
sub
call
cmp
rclb
jno
lret
shlb
popa
shrl
sldt
daa
out
adc
cmc
in
adc
or
xchg
jp
cmp
imul
je
xor
jno
xor
jmp
into
stc
cmc
xchg
loopne
pop
sti
cmpsb
pop
xchg
xchg
xchg
nop
inc
adc
jb
mov
fsts
inc
jne
shl
inc
push
jb
dec
and
ss
pop
out
scas
mov
repz
push
pop
mov
push
jle
std
mov
pushf
sbbl
ret
sbb
push
and
push
xor
sti
aaa
mov
mov
push
mov
push
xor
cltd
cmp
js
xchg
jno
mov
pop
mov
jns
cmp
fs
int3
jmp
in
stos
shll
jle
push
cmp
imul
pop
adc
nop
inc
addr16
cmc
jmp
in
lock
mov
jno
les
cmpsb
imul
dec
sub
lahf
mov
cmpb
pusha
push
adc
mov
aad
push
sub
jg
xor
mov
lock
bound
mov
stos
xor
pop
xor
jno
dec
addl
jb
sub
mov
push
fucomip
nop
jge
sub
and
call
jo
ljmp
fst
fwait
js
mov
inc
cs
aad
cmc
mov
add
jmp
cmp
xchg
pushf
cmp
das
sub
lcall
fidivs
imul
inc
xchg
or
sbb
pusha
cmp
data16
arpl
cs
sub
icebp
mov
mov
imul
cltd
or
addl
insb
lock
xor
inc
dec
add
xchg
adc
dec
pop
js
rcrl
stc
sub
scas
cmp
shll
shll
shr
in
add
je
fs
cli
xchg
cwtl
test
nop
pop
dec
push
jb
inc
xchg
xchg
scas
sub
mov
jb
dec
in
in
xor
mov
div
push
mov
loop
push
adc
xor
leave
mov
mov
outsb
rcl
cmc
loope
ds
cmp
pop
test
jge
daa
xor
negl
sar
jl
lods
add
sub
pop
cmp
ss
movsb
mov
and
ret
aaa
xchg
es
outsb
in
pushf
and
jle
dec
aam
sbb
mov
dec
jno
mov
in
mov
mov
push
adc
roll
pop
loope
push
mov
jmp
mov
pop
adc
jno
clc
iret
loope
xchg
adc
inc
jae
pushf
dec
jb
cld
cmp
cmc
mov
repnz
mov
bound
test
bound
cmp
rep
jl
into
add
repz
jmp
fdiv
inc
fsqrt
or
cwtl
mov
enter
outsb
fistpl
data16
sbb
in
xchg
scas
jb
add
lods
xor
sbb
sbb
sbb
daa
les
adcb
scas
and
cli
pop
rolb
int
sbb
mov
lea
mov
push
movsb
adc
frstor
nop
cwtl
je
xchg
dec
loopne
aaa
pop
xchg
mov
cmc
jno
ljmp
xor
int
fcmovnu
dec
adc
pop
cli
ja
mov
imul
jg
adc
lods
jne
add
jmp
mov
or
lret
inc
and
jb
inc
pop
shll
std
sbb
btr
imul
lods
mov
sbb
xchg
and
cld
xchg
inc
cmp
lods
sti
pop
cld
pop
imul
sbb
das
xor
or
ds
outsl
pop
and
js
es
nop
jne
aaa
jge
or
add
pusha
andb
dec
das
rcll
xchg
cli
lahf
pushf
aaa
sahf
cmp
inc
scas
shl
cmc
jns
push
jne
push
xor
lods
push
out
sahf
sbb
sub
inc
or
cmp
mov
fisubrs
daa
xchg
lods
dec
jnp
dec
sarb
outsb
dec
jne
ljmp
rcll
cmp
lcall
xor
out
inc
lret
or
mov
or
test
scas
stos
aad
sbb
dec
scas
cmc
or
xchg
mov
cmp
icebp
or
inc
pusha
push
and
sbb
mov
add
in
cmpsl
sbb
jne
arpl
push
cmp
push
popa
mov
pusha
mov
jg
outsb
and
add
push
mulb
insb
and
dec
nop
repz
pushf
cmp
stc
push
addr16
inc
inc
inc
sbb
loop
cmp
negb
sub
push
push
divb
add
popl
popf
xchg
xchg
xchg
js
in
sub
popa
movsl
add
cmp
cmp
fdivrl
xchg
gs
inc
out
add
shrb
inc
cmc
ret
addl
and
mov
lods
mov
rorl
xor
ss
test
sub
xchg
or
add
add
pop
fimuls
jle
adc
decb
jle
mov
jne
pushf
cmp
xor
dec
sub
adc
aad
push
xlat
fistl
mov
test
adc
shll
pop
jmp
jle
test
push
xor
nop
in
test
xchg
xchg
push
xchg
xor
mov
dec
mov
fldcw
push
rorb
add
cmp
push
ljmp
pusha
sbb
mov
loope
sbb
xchg
pop
cmc
call
xor
mov
out
pop
out
mov
xorl
mov
rcrl
lods
sub
pop
mov
into
jmp
addb
inc
outsb
repz
mov
mov
mov
dec
mov
push
out
rolb
xor
sarl
and
xchg
aam
subb
or
adc
sti
adc
arpl
pop
int3
shrl
jnp
bound
cmc
jbe
push
sbb
pushf
xchg
orl
jo
sbb
adc
ds
sub
mov
rolb
shlb
insb
stc
mov
subb
jp
push
movsb
sub
pop
cmp
imul
inc
ds
lods
lods
mov
mov
out
outsl
cld
mov
add
jno
lods
loop
push
stos
sbb
js
mov
adc
cwtl
mov
jl
scas
jge
outsb
roll
sub
push
xlat
les
sbb
jbe
add
inc
les
leave
mov
push
mov
cmc
and
ds
push
adc
movsl
rorb
sbb
pop
jns
push
fld
add
inc
xchg
mov
dec
lock
mov
push
inc
push
fldenv
push
test
cmp
sahf
jb
jnp
inc
fwait
and
mov
mov
pop
or
sbb
das
xchg
or
cmp
sahf
outsl
pusha
xchg
inc
test
dec
fstpt
cmp
loopne
ds
mov
sbb
push
mov
jnp
add
xor
test
pop
scas
and
fcoms
dec
shlb
push
cld
mov
inc
mov
inc
push
or
push
lahf
shll
inc
xchg
sbb
cmp
inc
addl
add
fs
xchg
data16
pop
mov
clc
and
push
cmp
idivb
shrl
pop
cmp
addb
mov
test
pop
sub
jns
icebp
scas
jne
ds
lds
and
arpl
jp
cwtl
push
or
jne
scas
cmp
inc
arpl
inc
fs
and
jle
sub
push
hlt
xor
fsubs
dec
or
test
add
nopl
cmc
mov
ss
adc
mov
jge
pop
idivl
call
inc
adc
ja
loope
mov
sarb
jecxz
jecxz
fs
clc
xchg
add
add
leave
aad
jge
pushf
pop
pop
imull
insl
vpsubd
xchg
or
and
out
pusha
sub
incl
cmc
sub
inc
mov
rol
xchg
sbbb
pop
call
mov
andl
and
xorl
add
lret
aas
adc
xchg
sbb
repz
movsl
mov
movsb
lret
test
cmp
faddl
stos
mov
mov
jmp
jnp
aaa
mov
sarl
xchg
adc
mov
into
es
push
push
mov
je
inc
jae
or
test
mov
insb
pop
pop
mov
mov
jne
cli
jb
pop
test
fbstp
xor
mov
sbb
inc
mov
aam
mov
out
cmpsl
cltd
fbld
lods
sbb
cwtl
outsb
lcall
sub
or
xchg
xor
test
lret
add
adc
imul
ljmp
mov
enter
shrl
push
xchg
bound
sub
cmpsl
xlat
jp
or
nop
inc
ja
out
mov
and
leave
push
or
push
inc
adc
shlb
movl
and
aaa
movsl
loope
mov
cmp
mov
fdivrs
mov
or
fs
divl
lcall
aad
out
scas
cmp
and
jno
xchg
jp
je
pop
or
pop
mov
jl
mov
fldenv
out
fwait
push
repnz
mov
xor
xor
subps
orb
int3
cs
sub
ss
jae
lods
or
pop
pop
ja
pushf
push
push
jp
std
adc
push
jno
hlt
lock
pushf
jo
dec
xor
jmp
push
loope
pop
xchg
pop
hlt
jg
popa
jecxz
jl
xchg
into
inc
stos
jmp
mov
je
push
ret
push
sub
aas
cmp
xor
imul
jae
into
xlat
test
add
out
stc
cmp
movsl
xchg
jl
xchg
mov
cmpsl
and
rorb
int3
fistps
inc
cmp
jge
xchg
out
stos
pop
cltd
inc
into
les
addr16
lahf
sub
push
and
dec
cmp
sti
mov
insl
mov
icebp
fs
inc
loop
cmp
leave
cmp
push
out
cli
pop
and
sub
push
dec
cli
gs
push
test
adc
add
in
push
jg
hlt
add
mov
orb
pop
shrl
imul
lcall
imul
in
mov
push
stos
jae
pop
cmp
jb
or
or
shll
test
sub
fwait
adc
push
mov
adc
in
in
fsubrp
adc
ret
xchg
es
ret
adc
mov
enter
sbbl
jp
lret
jmp
fildl
out
je
push
cmc
mov
inc
mov
cltd
jb
lea
xchg
lret
lahf
fsts
mov
arpl
cmpsl
aas
pop
cmp
rolb
hlt
loopne
test
fwait
test
jo
outsl
test
lret
into
int3
and
xchg
hlt
cltd
push
mov
mov
jns
push
movsb
aas
pop
and
fxch
jg
sbb
push
jle
arpl
inc
cmpsl
nop
js
push
push
or
shrb
xchg
push
in
dec
je
and
loope
popf
popf
aam
lret
sub
xchg
fsqrt
test
popf
cmpsl
xor
fidivrs
frstor
sbb
cmpsl
sbb
dec
lcall
fidivrl
and
and
int
add
in
sub
out
and
sbb
push
sub
push
or
sbb
push
mov
sbb
in
inc
xchg
leave
mov
or
ret
push
mov
mov
xor
aaa
push
or
addb
cmp
lods
adc
enter
inc
es
cmpsl
push
lret
pop
xchg
shrl
dec
or
jmp
fs
cmpps
movsl
cs
js
mov
test
xchg
pop
lods
mov
cmc
inc
add
fildl
lock
and
push
inc
mov
dec
aas
addr16
and
mov
dec
int
sub
xchg
stos
or
data16
pushf
mov
sbb
push
xchg
push
dec
lods
sub
cld
daa
dec
jno
inc
pop
inc
sub
or
sbb
xchg
into
iret
inc
ds
int
clc
jg
xchg
mull
repnz
mov
in
ds
xchg
je
cmp
and
mov
mov
aas
push
insl
jl
es
aad
mov
decl
out
add
popf
mov
add
xchg
mov
in
add
push
in
and
mulb
pop
xchg
dec
push
lock
ret
shl
imul
pop
xchg
cli
push
pop
mov
jge
fidivrl
sub
sub
mov
xchg
fisubl
aam
scas
mov
or
jne
mov
loopne
mov
inc
xchg
pop
jmp
push
mov
pop
sub
dec
adc
jb
and
mov
mov
xlat
fsubrl
cld
sti
and
adc
rcll
pop
aam
stos
mov
cmp
sti
sahf
cld
mov
arpl
lcall
sub
xchg
adc
dec
imul
mov
lahf
pop
fstpt
adc
mov
shrb
mov
and
imulb
rcrl
data16
mov
pushf
test
pop
mov
orb
cmp
fidivrs
adc
shl
inc
push
mov
push
fwait
xchg
loope
sbb
aaa
sub
imul
mov
adc
repz
push
mov
insb
xchg
mov
pop
sti
mov
jl
fcmovne
ds
fwait
dec
xlat
xlat
insl
fists
adc
push
dec
testl
shrl
or
daa
lcall
xchg
push
stc
mov
repnz
jge
roll
ficompl
and
adc
mov
xor
lea
je
call
daa
test
xchg
cmc
jle
call
repz
dec
pop
pop
filds
popa
mov
cmp
and
pop
shll
adc
jg
ljmp
mov
push
push
sbb
icebp
mov
jg
bound
es
je
sahf
fildl
lds
cmc
lcall
mov
jbe
dec
sbb
adcl
and
rorb
aam
cmpsb
sbb
stos
jg
lret
das
push
sub
or
sub
push
push
shll
pop
lea
jmp
xlat
js
and
cwtl
jne
sti
cmp
push
les
dec
arpl
jmp
mov
test
mov
dec
out
arpl
xchg
fxch
xor
je
push
xchg
xor
fld
mov
lods
xchg
call
jae
xchg
mov
lods
push
cmp
mov
fcoml
rol
xchg
scas
daa
cwtl
loope
sbb
in
mov
sahf
hlt
pop
andl
xchg
jno
pop
jbe
cwtl
dec
mov
dec
sub
inc
bound
psubsb
pusha
cwtl
add
jns
add
inc
xor
je
add
lret
mov
dec
cmp
ds
in
sahf
fists
mov
ds
sbb
test
and
push
movsb
jae
jne
aaa
mov
xchg
dec
push
pop
adc
dec
mov
enter
jae
mov
bnd
push
ficomps
pop
push
gs
movsl
int3
adc
sbb
jecxz
andl
loop
popf
sbb
incl
push
dec
cld
inc
cld
mov
orl
call
pop
leave
sbb
jo
popa
ret
rolb
mov
pop
mov
int
pop
xchg
dec
bound
lahf
hlt
popf
push
fnsave
cmp
adc
rolb
pop
out
jbe
inc
mov
test
fmull
pop
xor
scas
mov
fists
sub
test
lcall
sbb
je
mov
xlat
jns
sbb
adc
pop
mov
push
fs
outsb
leave
lods
xchg
stos
mov
fiaddl
cmp
push
xchg
fwait
dec
ljmp
mov
fwait
dec
mov
sub
cli
imul
lds
out
cltd
and
bound
and
add
push
pop
mov
jo
pop
jae
sbb
test
lfs
sub
test
pop
int3
or
jne
xchg
fbstp
mov
jmp
lods
xlat
xchg
xlat
cltd
sbb
out
test
sbbl
push
std
mov
dec
out
rclb
cmp
andb
pop
lahf
sbb
mov
fwait
std
sbb
xchg
inc
pop
leave
jo
mov
lods
fbstp
mov
push
pop
sarl
inc
mov
xor
outsb
je
shlb
xchg
movsl
ret
int
xlat
leave
adc
loopne
push
andl
je
fucomp
inc
mov
adc
frstor
cmp
out
movsb
ss
daa
outsl
dec
rolb
push
push
xlat
ljmp
xor
inc
cld
cwtl
inc
ljmp
movsl
pop
mov
pop
repnz
out
mov
and
pop
gs
mov
pusha
mov
lods
ja
mov
dec
out
jns
sti
add
test
popa
into
aaa
int3
fldl
out
pop
mov
enter
ds
fdiv
adc
stc
xchg
popa
xor
mov
and
inc
mov
icebp
inc
lods
jno
inc
out
xchg
in
add
in
xchg
jl
int3
pop
js
std
push
push
ljmp
rcrl
xor
inc
in
dec
xchg
pop
pusha
sbb
ss
push
gs
arpl
ja
add
daa
jns
sti
pop
shll
lds
fscale
hlt
dec
hlt
jp
push
and
dec
sbb
jp
cmpsl
inc
andb
cs
scas
add
subb
movsb
out
mov
or
lds
xchg
dec
xchg
repz
js
mov
jo
push
cld
js
mov
mov
jo
cmpsb
pusha
out
call
les
adc
movsl
ds
test
sub
xor
pop
mov
pop
daa
in
push
mov
in
lcall
pop
loope
inc
dec
clc
jge
pop
xor
jp
push
jge
lds
es
dec
ja
or
push
xorb
mov
ljmp
push
or
inc
pop
std
push
test
mov
adc
nop
sbb
mov
xor
and
xor
fwait
cwtl
ret
push
inc
inc
add
add
fisubrs
mov
mov
outsl
xor
mov
sub
stc
sub
add
adc
add
stos
out
outsl
dec
inc
test
or
leave
cltd
out
sbb
fsubrp
fisubrs
jge
cmpsl
xor
add
scas
jge
aam
mov
out
push
sub
inc
or
je
fs
xor
jle
xchg
lcall
cmpsb
xchg
dec
cld
loop
mull
pop
mov
jmp
xor
enter
cmp
insb
mov
add
adc
fsubrs
jmp
sbb
push
les
repz
dec
jo
int
push
scas
pop
scas
lods
jp
add
sbb
lret
lret
cmc
mov
pop
push
mov
xor
andl
mov
paddusw
and
jl
jl
sbb
mov
popa
or
into
or
addr16
jb
sbb
adc
scas
pusha
into
mov
inc
mov
mov
negl
push
xchg
mov
or
in
lret
mov
pop
push
or
pop
enter
xor
mov
adc
les
shll
loop
sub
lcall
nop
jbe
xchg
je
mov
inc
xor
sub
mov
cmpsb
pop
mov
push
mov
jge
xor
imulb
popf
jmp
aam
jl
outsl
lcall
ds
add
mov
pop
ret
adc
insl
sbb
push
pop
imul
ficompl
xchg
and
out
outsl
push
sub
mov
xor
push
popa
daa
mov
fwait
adc
sbb
and
call
xor
lock
cli
xor
jl
sub
mov
rclb
loop
add
push
mov
ret
xchg
and
mov
jns
pop
imul
xor
ficompl
subb
and
and
jnp
cmpb
bnd
call
loope
jb
or
xchg
dec
imul
push
mov
cmp
bswap
adc
fldt
push
dec
popa
outsb
jo
fwait
mov
mov
movsb
jp
into
jp
fwait
jno
and
test
leave
xchg
cld
loopne
aas
out
ja
adc
insb
jmp
mov
test
push
add
mov
push
mov
mov
ret
out
sbb
ja
shll
inc
ret
jge
pop
rol
pop
push
dec
push
dec
xchg
decb
sahf
cli
fbld
out
shrb
mov
int
pop
cmp
daa
ds
sub
jnp
push
cmpb
test
mov
icebp
fstpt
loop
pop
jmp
rcrl
scas
pop
mov
mov
scas
dec
in
aad
popf
xchg
loopne
mov
pop
dec
inc
int3
sarl
sti
mov
mov
jb
jns
add
cwtl
cmpsl
sub
and
jmp
add
lea
fiadds
mov
jecxz
sub
call
mov
lret
adc
fcompl
in
and
adc
inc
mov
cmpsb
negl
jns
mov
cmp
ja
push
mov
dec
dec
fwait
nop
pop
ret
or
or
xor
lds
lock
lock
cmpsb
mov
inc
repnz
mov
aaa
mov
cld
adc
and
outsl
pop
jle
mov
cmpsl
cs
inc
push
cmp
loop
loopne
repz
dec
les
int3
leave
fsincos
repnz
pop
sub
add
add
jmp
push
mov
movsl
lods
push
xchg
sahf
test
mov
ret
jge
inc
leave
clc
add
push
push
mov
das
in
in
cmp
inc
shll
repz
enter
mov
and
jmp
popa
sbb
push
cli
adc
or
pop
lea
jnp
lods
mov
loope
dec
add
jl
movsb
sbb
sahf
dec
jno
int3
sbb
adc
notb
add
and
cmp
imul
sub
dec
jb
std
scas
jbe
loopne
insb
outsb
cmpsl
pushl
add
push
ret
cmc
movsb
mov
sbb
adc
imul
pop
inc
sbb
push
xchg
dec
test
sbb
mov
cmp
xchg
pop
push
cmpsl
hlt
jae
cwtl
ss
jp
cs
fisttpl
pop
dec
jp
push
sub
add
ja
cmp
cmc
stos
into
hlt
dec
out
xor
push
lods
jb
sbb
mov
pop
cs
int3
popa
cmp
ror
cmp
ja
add
pop
jecxz
jecxz
fs
bound
cld
and
cwtl
lahf
and
fdivp
cmp
and
or
stos
lahf
js
repz
mov
enter
xor
aas
mov
jb
dec
sbb
jb
sahf
lcall
jne
jge
notl
lods
mov
cmp
dec
in
cmc
add
jecxz
pop
shll
jle
cmp
pcmpeqd
and
cmp
mov
in
int3
movsb
jmp
insl
in
std
xchg
push
mul
sub
imul
mov
fwait
push
cmpsl
cld
push
pop
loope
pop
pop
les
pop
insl
pop
pop
popf
stc
clc
dec
imul
xchg
enter
or
testb
lcall
js
xchg
aam
mov
and
clc
data16
ficompl
sbb
mov
daa
add
and
mov
mov
ja
lock
add
daa
push
mov
std
or
pop
jb
test
sbb
pop
rol
sbb
cs
push
push
xor
mov
push
pop
jne
out
jo
cld
push
pop
dec
lret
pop
add
mov
and
int3
in
sti
or
js
add
xchg
iret
sbb
or
add
push
jns
lcall
call
mov
cmp
mov
cltd
enter
and
test
adc
mov
mov
sbb
jmp
jle
test
aaa
xchg
call
divl
int
je
cmp
lret
inc
pop
stos
movsb
sets
jb
jbe
mov
aas
rcl
lock
xchg
ret
out
or
sub
cmpsl
add
jg
jb
shlb
sbb
shrb
dec
xor
add
sbb
adc
adc
lahf
lods
roll
sarb
dec
imul
into
dec
iret
adc
push
out
nop
mov
adcb
and
shr
inc
imul
cli
add
or
xor
mov
notl
sub
inc
push
adc
loop
push
add
addb
in
shrb
rcrl
fdivp
xor
mov
pop
lea
and
push
pop
enter
repnz
xor
iret
enter
mov
stos
outsl
int
cmp
arpl
bound
cmpsb
and
and
pop
jg
mov
sub
stos
pop
adc
rcr
aam
in
incb
mov
js
lods
jns
int3
xchg
hlt
je
jmp
loope
push
js
lcall
xchg
mov
jb
data16
mov
sahf
push
cltd
fstpt
adc
cmp
lcall
jl
movsl
xchg
sbb
mov
stos
icebp
out
sahf
xor
f2xm1
movl
xchg
cmpsl
lcall
outsl
fmul
xlat
arpl
outsb
aas
pop
sub
xor
jno
and
imul
repnz
scas
xor
insl
xor
subl
mov
xchg
das
adc
push
dec
enter
mov
adc
pop
adcl
stos
ret
mov
ds
cli
dec
cmc
fisttps
or
nop
inc
xchg
sbb
cmpsl
adc
lods
push
cmpsb
cs
fyl2x
scas
mov
imul
inc
pop
and
stc
and
popf
sahf
mov
push
xchg
nop
psubd
test
add
xor
les
jle
lods
int3
jnp
out
rorl
test
js
push
mov
xchg
ja
cmp
and
add
mov
cmp
stos
sbb
shll
mov
lds
push
cwtl
adc
lods
insl
addl
fildl
out
jp
mov
push
out
inc
pop
dec
fadd
clc
fwait
lret
sbb
je
fwait
add
mov
ss
nop
xor
or
out
and
gs
sarb
mov
xchg
movsb
stos
outsl
loope
not
test
aaa
call
test
adc
pop
jne
mov
pop
fs
mov
cmp
xor
cli
mov
xor
mov
cmp
sbb
jbe
cli
in
jle
dec
mov
mov
pop
testl
insb
jecxz
xchg
xchg
insl
dec
xor
sub
xor
pop
scas
mov
repz
fistps
aaa
or
push
cmc
hlt
sub
xor
fldt
test
ljmp
ds
mov
or
loopne
mov
pop
addr16
pop
push
loopne
divb
leave
inc
clc
ja
testl
jg
jecxz
mov
mov
xor
mov
cmp
lods
jne
gs
out
popf
nop
dec
out
ja
push
leave
jl
cmp
popa
adc
bound
in
sub
add
in
lret
sbb
scas
push
shlb
push
or
push
stc
cmp
shr
adc
jmp
dec
shrl
mov
push
inc
mov
dec
mov
mov
lea
inc
add
mov
jb
jne
daa
je
xorl
xor
ficoml
inc
pushf
fistpl
jmp
hlt
cmp
push
lret
ss
pop
and
data16
push
xlat
repz
gs
sarl
fisubrs
mov
enter
and
push
cmpsl
movsl
lret
idivb
and
dec
add
pop
mov
fisttpl
int3
add
jne
sub
into
cmp
fdivrs
adc
out
mov
pusha
jno
mov
xor
pop
std
sub
fidivl
scas
in
lcall
xchg
movsb
push
leave
adc
pop
sub
lock
add
sbb
push
insl
cmp
mov
add
movsb
scas
push
jns
lahf
movsl
push
rol
adc
inc
aad
jne
loop
subb
cwtl
xor
aam
sbb
xorl
pop
or
mov
or
inc
add
xor
imul
out
lret
out
dec
or
inc
cmc
fmull
popa
cmpl
mov
stc
push
fcompl
mov
or
insb
mov
mov
aaa
jo
mov
adc
lcall
dec
adc
mulb
leave
rolb
push
jle
lea
lret
std
jns
inc
mov
aaa
add
out
lods
inc
dec
je
loopne
and
push
hlt
jnp
jle
fldl
xor
mov
sub
out
loop
sbb
addr16
cmp
mov
pop
pop
inc
lods
pusha
lods
pop
das
mov
cmc
int3
and
paddw
mov
out
stos
cmp
xor
out
shrl
sbb
mov
mov
add
sbb
or
mov
das
ret
mov
or
push
stos
pop
cmc
xor
inc
int3
aam
std
pop
dec
xchg
fsub
stos
ret
push
rcrl
sub
les
mov
and
in
mov
sub
repz
adc
data16
pop
mov
dec
and
mov
xor
rorb
arpl
mul
and
mov
and
int3
jge
push
vmovsd
enter
insl
push
arpl
scas
scas
sub
jb
clc
notb
outsb
xchg
push
rcll
or
mov
mov
adc
divb
sbb
mov
cli
xchg
cltd
mov
push
inc
mov
push
mov
xchg
inc
xor
out
jae
mov
mov
loope
scas
sbb
sub
jae
popa
aam
cmpb
cmc
push
sbb
mov
loopne
adcb
inc
pop
jae
sbb
mov
and
push
loope
add
pop
jge
stos
outsb
jo
pop
clc
fcmovb
xor
jecxz
scas
xor
das
fsubl
pop
mov
shll
pop
xor
inc
push
arpl
fsubl
testl
lahf
adc
xchg
in
or
dec
and
dec
jp
xchg
jne
add
rorl
mov
fsubs
xchg
lret
mov
testl
dec
popf
sahf
aad
imul
repz
push
ja
fwait
mov
mulb
mov
inc
cmp
mov
xchg
adc
jno
lods
dec
and
mov
or
xchg
in
push
cmp
pusha
iret
cmp
and
movsb
pop
and
cmp
mov
popf
xchg
push
sub
or
and
jae
mov
test
int3
jl
pop
mov
not
adc
icebp
rcrl
dec
arpl
push
call
das
xor
punpcklwd
mov
xchg
xchg
sbb
fisubs
jne
pushf
dec
enter
mov
pop
and
add
mov
mov
jle
iret
cs
pusha
adcw
xor
ret
testl
div
cmp
filds
aam
lds
movsl
mov
lret
scas
pop
and
test
fldl
add
not
pop
cmp
aad
fldt
pop
fimuls
mov
popa
mov
jo
lahf
fwait
or
mov
int
push
adc
jmp
ja
cmp
adc
mov
jno
or
inc
addr16
enter
cli
stos
jmp
sbb
inc
loope
aam
sbb
xchg
ljmp
jne
nop
mov
sub
ljmp
jo
cmpsb
gs
add
adc
int3
js
xchg
scas
mov
sbb
enter
mov
mov
mov
push
clc
clc
jmp
inc
xlat
fiaddl
movsl
xchg
subl
int
sub
adc
ljmp
mov
ficompl
jge
neg
jb
pop
xchg
loope
test
rorb
inc
mov
cmp
test
and
popa
fstpt
dec
add
dec
les
outsb
aad
test
fucom
push
aam
lcall
pop
fwait
adc
movsb
rep
int
loopne
fnsave
sbb
cli
or
dec
push
cld
in
ffree
jge
sti
mov
popa
or
rcll
subb
or
jp
lods
popf
das
push
cmp
add
int
test
loope
std
push
inc
imul
adc
sti
lods
cmpl
jl
push
aam
int3
sbb
in
movsb
mov
fbld
dec
mov
in
sub
mov
mov
adc
fisubrl
arpl
pop
xor
mov
sbb
mov
xchg
dec
ja
or
inc
xor
aas
gs
cmpsl
test
dec
ret
je
add
dec
inc
jnp
pop
imul
add
aaa
aaa
leave
ret
or
jle
lea
fwait
mov
imul
pop
xchg
mov
mov
mov
add
xchg
adc
mov
enter
shr
ret
pop
stc
sbb
fcomps
sahf
outsl
push
popf
dec
cmp
imul
jge
sbb
jmp
addl
insb
dec
popf
xchg
shrl
ss
lock
mov
rcrl
stos
mov
aam
pop
mov
out
divb
stos
rcll
pop
stos
push
xchg
xor
push
enter
push
cwtl
ja
jae
add
cmc
mov
cmpb
inc
sbb
movsb
jo
xor
das
mov
movsb
jns
pop
sub
mov
mov
les
xor
xor
xor
xchg
mov
push
mov
sbb
lcall
xor
ss
into
push
aam
sub
jns
sub
cmpsb
sti
mov
loop
scas
xor
inc
jmp
mov
shr
sbb
iret
loope
push
insl
sbb
dec
jnp
js
inc
dec
cs
sbbl
iret
or
sarl
ljmp
xor
sub
dec
out
sbb
movsb
push
mov
inc
and
test
jmp
dec
out
cli
stos
lods
and
enter
daa
add
leave
push
jge
and
pop
gs
pop
leave
movsl
popa
jno
lea
inc
imul
or
push
fnstcw
or
popa
in
mov
sahf
mov
ret
das
xchg
adc
insl
jp
xchg
inc
mov
xor
push
pinsrw
cmc
push
fs
repnz
stos
push
cli
out
mov
jae
push
icebp
cltd
sarl
xor
pop
push
lcall
jbe
add
jl
es
push
imul
jbe
notb
mov
jge
jb
imul
bnd
cld
scas
jl
arpl
sbb
add
in
dec
out
clc
pop
call
cmp
sub
into
popf
daa
pop
ljmp
push
add
loop
pop
push
lret
push
shl
repz
out
mov
mov
jb
push
pop
ss
lret
fwait
add
pop
push
nop
push
mulb
fptan
scas
mov
dec
xor
mov
sub
jns
inc
sbb
mov
add
push
mov
add
cltd
xchg
jo
mov
mov
popf
pop
dec
mov
ret
lcall
ficomps
bnd
cmp
fiaddl
ret
xor
sbb
jl
bound
mov
dec
adcb
pop
daa
sub
stos
sbb
jne
xchg
sahf
dec
fldl2e
mov
adc
shlb
cwtl
pop
xor
fs
inc
pushf
mov
pop
xchg
pop
pop
jp
sub
lret
push
mov
lret
fistl
xlat
fisttpll
dec
sub
es
push
movsl
js
lret
lods
mov
in
cli
push
shll
adc
sbb
clc
inc
loop
add
dec
rorl
xor
and
std
scas
jp
js
jecxz
fs
and
pop
movsb
repnz
sarb
mov
or
xchg
jae
xchg
sbb
imul
popf
cld
loopne
jo
test
ss
push
mov
pop
pop
or
pop
adc
mov
out
xchg
pop
cmc
daa
mov
push
decb
and
inc
ficomps
stc
adc
sbb
adc
frstor
cs
enter
mov
adc
pop
push
rcll
int
mov
push
in
dec
jle
add
jle
push
dec
shrb
out
inc
mov
adc
mov
xchg
shlb
cli
dec
je
sahf
mov
bnd
sbb
int3
cwtl
xchg
add
jnp
mov
jle
cmpsl
loop
pop
in
and
imul
xchg
sbb
jne
xlat
jns
test
mov
jae
outsb
pushf
mov
jge
add
icebp
cltd
mov
sbbb
cmpsl
aaa
or
mov
lret
fistps
ljmp
in
push
lea
aad
mov
sti
nop
movsl
and
ret
adcl
into
lcall
daa
daa
push
js
mov
add
mov
mov
adc
cli
or
testb
scas
mov
xor
or
insl
dec
mov
mov
jge
mov
push
rcll
sti
clc
sub
frstor
pushf
inc
mov
sbb
iret
pop
fisttps
pop
mulb
and
inc
aas
scas
pop
xor
pop
movsl
or
dec
adc
ljmp
je
popa
test
adc
or
mov
mov
movsl
stos
push
test
cld
in
nop
das
je
jae
sbb
imul
add
mov
mov
test
arpl
inc
add
cld
inc
pushf
sbb
or
inc
or
add
cmp
mov
pop
mov
insb
iret
les
arpl
sub
jns
fs
push
pop
pop
xchg
mov
rcrl
cltd
aas
ret
outsl
cmp
lods
sbb
imul
cmp
sahf
inc
jmp
aad
and
shrl
pop
cltd
movsl
sub
lods
add
aad
int
push
push
aad
pop
jb
or
insb
rorb
add
push
stc
aad
mov
pop
or
loop
sbb
loope
and
xor
and
dec
push
jb
cmpsl
jge
nop
xchg
cmp
pop
gs
dec
jbe
shll
xor
push
div
dec
icebp
outsl
jle
sbb
push
cli
jnp
std
sub
add
cli
xchg
inc
dec
hlt
jnp,pn
cmpsl
pop
jg
sbb
loopne
dec
arpl
dec
dec
push
inc
js
stos
pop
xor
negl
sub
in
sti
mov
pop
call
icebp
sbb
adc
aaa
fidivrl
jno
and
outsb
dec
mov
mov
sub
int
sub
sarb
hlt
xchg
bsr
in
add
imul
jb
test
jae
inc
in
pop
sub
into
test
ss
ret
mov
out
adc
xchg
in
inc
aad
std
in
lret
xor
dec
mov
and
xor
inc
push
cwtl
aam
xchg
lahf
sbb
out
mov
cs
sbb
dec
scas
test
cmp
cmp
pop
cs
jae
cld
push
sub
xor
lret
cmc
pop
mov
jmp
mov
imul
sarl
sbb
jge
mov
pop
and
cli
jp
cmpsb
shr
xchg
ret
cmpsb
scas
pop
push
sub
loopne
add
or
or
sub
addr16
mov
out
sahf
sbb
pop
dec
and
pop
inc
pop
shll
jecxz
xor
fs
or
mov
loop
in
and
xor
lods
inc
push
pop
jl
fnstsw
jg
pop
mov
cmp
fidivrs
aas
cmp
mov
pushw
mov
push
or
mov
cmpsb
pop
add
and
cmp
fidivrl
ret
or
xor
pop
push
sub
mov
and
call
enter
cmp
adc
movsb
dec
or
movsl
ljmp
pop
std
inc
fiadds
outsb
and
stos
dec
and
sbb
add
adc
andb
fdivr
outsl
mov
push
and
mov
iret
add
lret
pusha
mov
pop
mov
dec
push
lods
repz
pop
or
mov
mov
add
insb
dec
add
mov
cli
jns
xor
sbb
out
dec
mov
inc
and
dec
fstl
sahf
icebp
mov
sbb
rcrb
jb
pusha
cmp
inc
adc
je
fildl
mov
in
pusha
cmc
outsl
ret
testl
inc
jmp
arpl
xchg
pop
mov
mov
adc
xchg
sarb
mov
scas
push
and
inc
sti
ja
jbe
lret
jns
mov
lcall
addl
add
mov
or
bound
mov
gs
mov
or
nop
mov
mov
mov
lahf
rclb
sbb
cmp
int
xchg
int3
cmpsb
sbb
pop
outsl
xchg
xchg
into
cmpsl
iret
sub
aaa
test
pop
xchg
ret
sbb
sub
push
cld
cmp
sahf
pop
push
popa
add
data16
jns
xlat
sahf
push
enter
lret
sub
xchg
push
push
and
inc
rolb
insl
xor
cld
pop
lcall
fwait
cmpsl
mov
sbb
add
stc
dec
lods
push
sub
sub
pushw
lcall
sub
mov
jge
sti
pop
pop
mov
and
in
in
xchg
ficompl
leave
dec
mov
mov
test
scas
mov
data16
imul
mov
ret
scas
jne
clc
xchg
test
pop
push
cmp
jbe
clc
xchg
aas
mov
mov
mov
sub
cmp
cs
adc
push
inc
cltd
pusha
shlb
fsubr
mov
xlat
test
js
ss
popf
test
rcll
js
add
mov
add
mov
out
pop
mov
sub
pop
iret
fisttpll
xor
arpl
in
xchg
mov
jnp
add
sbb
dec
sub
mov
jmp
gs
dec
cmp
xchg
shrb
fs
add
sahf
xor
pop
cli
pop
mov
mov
and
lods
push
mov
test
insb
cmp
cmp
jae
sbb
sahf
adc
je
std
mov
lret
pop
rcrl
mov
popf
and
scas
dec
mov
dec
xchg
xor
pop
xor
cmpl
arpl
xlat
inc
inc
loop
or
sbb
mov
popf
aaa
cmp
xchg
xchg
repz
int
cmpl
or
sbb
push
dec
leave
push
mov
push
cltd
cmc
pop
je
aam
pop
sbb
in
lods
or
lds
loope
or
mov
addr16
sub
jecxz
pop
lods
aaa
push
push
or
pusha
cs
xchg
add
daa
fsubrp
out
jecxz
iret
mov
stos
push
orl
jle
rcrl
popa
insb
add
stc
shl
inc
cmc
xor
cmpsl
and
and
mov
or
fisubrl
pop
pop
push
rorl
or
sbb
aas
xchg
gs
pop
inc
mov
ss
and
and
mov
cmp
push
movsb
mov
popf
push
push
or
mov
dec
cvttps2pi
shll
xor
dec
stos
test
cmp
lods
and
push
mov
cmpsb
sub
addr16
jne
mov
lret
inc
je
out
inc
pop
stc
xchg
gs
fcomps
stos
xor
jecxz
or
ljmp
fadd
xchg
lock
mov
sub
cmp
xchg
push
push
pop
sbb
stos
dec
jmp
rcrl
mov
sub
mov
cmp
hlt
cmpsb
clc
lods
inc
or
ret
aaa
lock
cmc
inc
fwait
jmp
lock
leave
mov
push
test
push
xor
sti
lret
clc
sbb
dec
fs
and
cmp
imul
and
push
sbb
pop
test
mov
mov
v4fnmaddps
loop
nop
stos
pop
dec
test
push
sub
sub
fwait
dec
jp
aas
bound
xchg
dec
and
sub
mov
xchg
push
jne
pop
xchg
xchg
xor
xchg
xchg
cld
sbb
inc
dec
push
sahf
or
add
lahf
aad
push
inc
imul
mov
dec
push
lods
sub
add
mov
shlb
mov
imul
imul
add
dec
mov
jmp
repz
adc
stos
jo
imul
sub
adc
dec
and
cs
and
xchg
out
inc
mov
adc
push
int
cwtl
pushf
mov
add
cmpsl
std
jp
sti
imull
inc
out
sbb
cmp
cmp
push
negb
jnp
dec
adcb
jle
int3
sub
int3
sub
into
or
add
popf
lret
push
dec
call
shll
movzbl
lock
or
lahf
popa
push
mov
pop
adc
pop
jge
lea
int
jle
mov
aad
cs
jle
add
cmpsl
icebp
push
dec
xor
mov
sti
shlb
int3
mov
push
stc
sar
popf
add
adc
mov
mov
stos
sbb
loop
lds
sbb
pop
pop
es
fwait
and
push
jecxz
mov
cmp
out
arpl
inc
add
push
mov
ret
push
inc
daa
sar
shlb
bound
aas
fidivrs
sbb
sub
dec
iret
xlat
pop
and
cmp
adc
and
add
push
cmpsl
sahf
jecxz
lock
call
aaa
jle
cmpsl
sub
inc
dec
push
subl
or
mov
lea
dec
jge
adc
push
sub
mulb
adc
in
cmp
out
fnsave
sbb
aas
loopne
jp
dec
xchg
mov
std
adc
dec
adc
sub
nop
sbb
dec
bound
mov
jns
add
test
inc
fimull
mov
or
sub
jg
and
push
pop
mov
xor
movsl
fisubrl
data16
stc
mov
ja
ficompl
add
lcall
pushf
xlat
fsubl
adc
dec
in
push
add
testl
repz
push
xor
jmp
stc
sub
vpsubq
outsb
sub
cltd
imul
push
aaa
jmp
dec
mov
icebp
sub
test
test
dec
cli
stc
int3
mov
xor
mov
jle
rcl
jle
and
orb
dec
in
rcl
fs
jo
repnz
inc
sub
mov
in
jo
fucom
or
mov
lahf
dec
fcompp
in
xchg
mov
jmp
mov
les
lahf
cmp
and
jae
nop
and
mov
shr
fistps
dec
ljmp
mov
repnz
inc
mov
addr16
popa
xchg
jle
mov
sbb
mov
decl
inc
fwait
pop
push
mov
mov
mov
pop
popa
mov
sbb
mov
gs
adc
mov
shr
imul
movsl
adc
mov
mov
fstl
sub
test
mov
mov
call
fcoml
pusha
xor
sbb
pop
add
add
jge
repz
movsb
xchg
lcall
adc
pop
dec
lds
js
pop
cmp
es
add
jmp
les
add
test
andl
loope
fcoms
jmp
dec
scas
xchg
popf
cmp
xor
pop
les
cs
rol
addb
pushf
scas
mov
lahf
jl
and
pop
loopne
pusha
std
pop
pop
mov
imull
jns
dec
xchg
sbb
xchg
mov
scas
add
mov
add
adc
andl
xchg
insl
push
push
or
fists
push
aas
nop
mov
dec
ss
jns
mov
cmp
test
loop
add
ss
out
in
xchg
cmp
dec
hlt
enter
loopne
mov
xchg
adc
shlb
fidivrl
out
lret
sti
nop
shll
ja
fsts
popl
mov
push
imul
jp
cltd
push
aas
mov
add
rorb
xchg
mov
mov
lahf
dec
sub
jmp
adc
adcb
jle
add
insb
push
jbe
or
fcomp
out
sub
mov
fidivl
jle
fldt
pushf
sbb
xor
mov
mov
adc
or
jl
cmp
xchg
xchg
xchg
mov
mov
outsb
gs
fstpl
js
insl
push
mov
enter
inc
dec
neg
cs
pop
push
jle
outsl
adc
cmpsl
nop
arpl
pushf
dec
dec
mov
cmp
arpl
js
aad
jp
dec
jg
sbb
je
je
lea
jecxz
sbbl
mov
into
and
xor
scas
cmpsb
dec
mov
pop
mov
sbb
dec
push
ja
sub
enter
mov
mov
testl
xor
push
add
sub
out
sub
inc
cmp
jp
movsb
xor
or
call
or
inc
and
push
roll
mov
mov
inc
and
scas
lcall
cld
adc
mov
inc
sub
notb
pop
repnz
shlb
int
and
pop
mov
jne
je
repnz
scas
in
jmp
cmp
test
and
or
and
pop
add
fwait
push
pushf
pop
dec
fsubrs
cmp
mov
imul
dec
cmp
adc
xor
xchg
shl
int3
stc
dec
cmp
sub
xchg
mov
jnp
xchg
gs
jge
ljmp
add
add
jbe
aaa
mov
shl
fld
or
jg
es
mov
cmp
ja
cmpb
cmc
mov
and
add
test
jne
int
adc
insl
and
stos
dec
out
push
sbb
and
fwait
shr
enter
lods
dec
mov
das
out
ja
lret
jle
adc
fs
shlb
push
divl
jl
xchg
or
aad
sti
das
pop
lds
movsl
stc
adc
in
ljmp
pop
push
insb
inc
clc
or
xor
mov
out
mov
cld
inc
sub
mov
inc
scas
je
pushl
xor
addr16
scas
gs
xorl
stc
add
pop
test
je
je
lret
sbb
push
daa
call
jmp
loopne
mov
jbe
lea
xchg
les
cld
pmuludq
aad
adc
push
cmp
mov
pop
pop
push
scas
mov
sarl
inc
mov
push
pop
or
push
cmp
push
mov
popf
and
push
out
xorb
fisubrs
mov
xchg
sbb
dec
cli
popa
lahf
jl
out
rcr
xchg
call
and
jne
mov
jp
insb
out
js
and
sbbl
push
sbb
mov
stc
pop
push
loopne
inc
daa
inc
dec
call
push
std
test
xor
ja
or
cli
push
push
pop
iret
icebp
nop
mov
dec
loop
call
mov
xor
push
arpl
test
adc
imul
mov
xor
mov
cmp
jns
mov
je
flds
push
push
dec
fninit
insl
and
pushf
sub
out
dec
orl
or
adc
xlat
jnp
repnz
scas
or
int3
xlat
jb
insb
ljmp
inc
and
inc
testb
pushf
xor
jp
bound
sub
inc
fwait
or
mov
xchg
lds
lret
pop
push
mov
mov
xor
in
or
sub
loopne
neg
pushf
bnd
inc
ss
jmp
xchg
leave
scas
add
cs
in
push
lret
pop
mov
inc
xchg
sahf
arpl
or
insb
subl
mov
mov
pop
nop
jb
pop
loopne
hlt
mov
insb
movsb
push
mov
js
inc
int
inc
ss
or
push
adc
pop
push
nop
xor
mov
test
sbb
fldt
test
and
and
jb
adc
adc
cwtl
push
mov
jnp
jns
adc
sbb
scas
inc
dec
dec
in
cmp
jg
dec
push
push
adcl
mov
jae
dec
or
push
in
imul
jb
xor
push
and
xor
out
sbb
push
inc
loope
cmpsb
scas
out
xor
jmp
out
clc
cmpsl
inc
incb
xchg
sub
ret
cmpsb
lods
lea
fcompl
lods
imulb
cmc
mov
je
sub
stos
test
sbb
cmpsb
mov
sti
pop
outsb
mov
lcall
cmpsb
sbb
out
pop
int3
xor
sub
push
adc
sub
jb
shlb
ud2
jbe
jmp
int3
inc
push
in
pop
sub
sub
mov
inc
inc
jns
daa
in
stos
push
stos
mov
scas
ss
cmp
andb
fstpt
mov
call
jmp
and
push
mov
cmpb
shll
or
sbb
pop
lahf
or
push
jns
es
in
sub
mov
jae
gs
mov
jo
mulb
add
mov
mov
faddl
push
out
adc
mov
xchg
int
jne
inc
hlt
loope
sbb
out
and
dec
and
mov
popf
or
je
add
mov
cmpsl
cmp
add
je
push
sub
add
mov
bnd
sti
dec
lds
js
aas
test
mov
je
dec
das
xchg
mov
std
jmp
scas
insl
cmp
roll
dec
mov
rcrl
test
pop
jle
sti
insb
pushf
dec
sbb
sub
ljmp
into
shl
add
sbb
mov
and
aaa
enter
les
mov
pop
mov
in
fsubl
mov
imul
addr16
lcall
ret
or
sub
pop
or
insl
jg
sysexit
jne
push
pop
out
jp
xchg
fs
outsl
mov
ljmp
push
fisubrs
aad
icebp
mov
nop
pop
add
divl
jge
lret
jno
testb
mov
ret
and
cld
sub
lcall
prefetcht1
sti
das
out
nop
push
adc
mov
mov
xchg
rclb
sbb
pop
test
sub
jns
lock
mov
lods
in
jo
outsl
or
dec
xor
ret
or
popa
int
sbb
shlb
adc
jb
in
adc
adc
in
xor
push
inc
dec
pop
jns
add
pop
xor
jle
mov
hlt
cmpsb
pop
enter
or
das
das
cmp
jne
cs
nop
es
fmull
xor
test
setbe
clc
dec
add
into
rorl
adc
mov
out
dec
pop
movsb
xlat
outsl
pop
pop
sbb
testl
mov
add
stc
aad
mov
lods
pop
mov
icebp
mov
loop
enter
out
movsb
sub
shlb
adcl
inc
lock
inc
sarb
dec
add
push
shll
repnz
outsb
fisttpl
cli
and
jae
add
push
ror
out
jmp
fiadds
xchg
sub
push
stos
cltd
roll
sub
jge
bound
pop
cmpl
adc
xacquire
xchg
je
xchg
divb
lods
xchg
in
or
add
jo
cwtl
cltd
es
mov
fwait
roll
jge
pop
dec
and
lock
test
aaa
test
cmp
jg
insb
pop
push
lock
fmulp
sti
enter
insb
mov
sbbb
lahf
or
fnstenv
shll
icebp
mov
adc
cwtl
daa
and
cmp
aad
data16
lret
fwait
pop
mov
add
rorl
xchg
scas
cmp
mov
insl
add
pop
repz
xchg
jl
sbb
dec
aad
sub
int
or
lods
mov
cmp
sbb
sbb
mov
push
lea
push
xor
fwait
cltd
test
sub
mov
fildl
imul
mov
or
cmp
xor
testl
or
divl
repz
lea
dec
lcall
jecxz
addr16
inc
inc
mov
or
adc
jge
bound
or
push
or
movsb
lret
inc
mov
inc
sbb
in
cmpsb
lock
sarl
popa
or
orl
add
fiaddl
out
jnp
stos
jnp
aaa
add
lods
mov
mov
dec
and
dec
in
mov
and
push
fstl
outsb
or
sub
pop
outsl
pusha
mov
xor
xchg
sar
jae
ret
sbb
jo
mov
gs
test
mov
jle
adc
fs
enter
or
cmp
and
push
bound
mov
or
mov
dec
inc
push
loopne
pop
testl
pop
xlat
push
daa
shll
out
negb
call
adc
xor
int
mov
sbb
aam
mov
bound
mov
pusha
xor
push
adc
mov
cs
arpl
cmpsl
sbb
dec
inc
lods
scas
cli
mov
icebp
subb
mov
notl
ret
jg
movsb
xor
imull
das
popa
mov
mov
and
push
pop
mov
inc
or
mov
sub
testl
aam
push
idivb
xchg
ret
and
outsl
mov
xchg
jp
neg
dec
xchg
aam
outsb
sbb
adc
stos
popa
movsb
enter
ljmp
mov
dec
cmpsl
cmp
call
loopne
daa
push
dec
jnp
test
sbb
mov
adc
movsl
repnz
lcall
mov
cmpsl
movsb
adc
push
bound
dec
lock
das
cmp
sub
jns
daa
adc
adc
pushf
repnz
sbb
out
pop
dec
fs
ds
sbb
sub
lcall
pop
and
stos
add
hlt
jecxz
sub
mov
xor
sub
rcr
out
and
sahf
fsubp
popf
ja
jle
data16
lods
rol
pop
orb
into
push
clc
jle
mov
or
pop
mov
daa
mov
nop
aad
xorb
or
pop
mov
std
outsb
sahf
sub
mov
mov
adc
adc
leave
sub
dec
stos
scas
cs
xchg
mov
negb
pop
imulb
and
ret
xchg
pop
pop
adc
ret
push
push
movsl
sbb
loope
lret
je
in
push
mov
push
fisttps
lods
xor
sub
loope
xchg
stc
dec
add
subl
popf
cld
inc
fcoml
mov
in
pop
sub
orl
and
imul
loope
cmpsb
jmp
adc
xor
dec
pop
inc
inc
popa
imul
in
pop
dec
jns
mov
adc
cmp
jo
push
or
adc
xchg
scas
add
in
add
or
scas
sbb
mov
fildl
ljmp
clc
flds
dec
sub
sbb
adc
mov
fs
fdivrp
mov
inc
push
leave
jns
inc
sub
mov
out
fs
adc
fs
push
lret
lock
cmpsl
insb
lahf
push
xor
repnz
add
icebp
stc
xor
xchg
aaa
xor
pop
dec
mov
and
push
push
pop
aaa
cmp
inc
jnp
adc
jbe
xchg
mov
xor
jmp
add
enter
xor
es
leave
dec
adcl
mov
cmp
sub
cmp
cmp
xchg
in
repz
dec
scas
clc
ja
sbb
popa
or
sub
dec
sbb
in
mov
push
inc
aas
inc
sbb
inc
lret
aad
add
cmp
xchg
xchg
sbb
sub
sbb
rorl
sbb
adc
push
daa
xchg
fiadds
arpl
ljmp
insl
xor
rcll
cmc
scas
adc
sahf
divb
test
push
into
dec
and
inc
xor
pop
lahf
mov
pop
rorl
fwait
xchg
push
mov
xchg
int3
sbb
xchg
shl
je
mov
and
ja
jge
push
arpl
cltd
jecxz
push
pop
out
add
push
insl
xchg
lcall
insb
loope
jnp
pop
ds
call
inc
addr16
scas
std
adc
fistps
test
adcb
out
popf
in
inc
jno
call
push
sbb
imul
jo
imul
cmpsl
mov
into
sub
sub
lahf
sub
int
mov
cmpl
adc
adc
movsl
mov
addr16
gs
es
fisubrs
stc
cld
adc
add
and
push
push
cli
mov
js
cmp
sbb
xor
aas
push
repnz
sbb
sti
sbb
push
mov
mov
test
add
enter
xor
mov
rorb
inc
push
lret
out
insb
inc
loope
or
in
outsl
decb
aam
test
and
xor
and
and
mov
jbe
jne
inc
orl
pop
mov
lods
iret
dec
mov
jnp
jns
lret
das
outsl
inc
cmpl
push
imul
leave
cmp
adc
and
in
jns
ret
mov
daa
movsb
decb
cmp
xchg
cmp
push
or
adc
jns
adc
pop
sub
dec
push
fdivl
xor
in
or
mov
or
cmp
xchg
into
mov
mov
das
mov
ficompl
sub
popa
filds
out
cmpsl
mov
lcall
ss
mov
fldcw
or
or
adc
fidivs
jg
dec
imul
fists
js
xadd
dec
pop
jl
pop
inc
mov
add
adc
xor
xor
repz
push
repnz
push
mov
dec
xchg
jmp
insb
movl
pop
int
sub
loop
bound
scas
xor
fidivs
popa
mov
inc
mov
shll
sti
dec
pop
ljmp
fimull
mov
inc
xor
mov
sahf
fwait
mov
out
and
fwait
xor
and
add
mov
jo
in
inc
scas
jg
or
call
pop
orl
jge
movb
lods
push
popf
scas
add
inc
xor
lcall
or
mul
inc
mov
loope
adc
subl
movsl
ret
inc
pop
jbe
out
jg
sbb
out
and
jne
arpl
mov
cmp
pop
push
push
pop
cld
jle
es
stc
sbb
enter
add
sbb
cwtl
mov
cmp
je
fstp
mov
sub
jmp
xchg
jb
stos
aad
cwtl
mov
and
mov
ret
push
cmp
push
cmp
dec
adc
int3
mov
std
adc
lods
add
mov
jb
lahf
fisttpll
cmp
or
lds
inc
sub
ss
andl
add
jnp
xchg
call
cmp
shll
aas
cmp
jnp
pop
lds
in
adcl
out
dec
sub
push
cmc
jecxz
stos
mov
sub
mov
pop
adc
add
and
andl
out
and
adc
dec
repnz
lods
subb
mov
or
pop
fists
scas
lock
enter
xor
jnp
fwait
mov
in
pop
inc
and
jmp
addl
inc
pop
xchg
mov
cmpb
mov
jp
mov
repz
repz
ret
xchg
push
xchg
mov
push
xor
mov
ja
cld
dec
add
add
jne
and
inc
rcll
pop
pop
and
adc
scas
adcl
push
jo
iret
imul
fwait
int
popa
inc
sti
cmp
mov
fists
jp
lds
jecxz
out
fisttpll
jle
lret
test
mov
outsl
jb
loopne
fisubs
sbb
in
jg
cmc
out
or
lahf
mov
fists
mov
sub
jae
repz
sbb
add
pop
xchg
lret
sbb
mov
enter
or
mov
imul
sbb
dec
cmpsb
inc
arpl
push
push
push
rcl
mov
cli
mov
das
call
add
jle
fists
je
test
and
xchg
jp
pop
rcl
xchg
addr16
hlt
clc
arpl
adcl
jle
cmp
dec
movsb
aad
cmp
insb
inc
mov
sub
inc
orb
sub
inc
push
sbb
shlb
int
sbb
mov
dec
cmp
in
mov
xchg
xor
sub
divb
mov
cmpsb
daa
push
dec
cmpl
mov
fistpl
out
xchg
sub
insb
mov
lret
shlb
add
pop
bound
pop
popa
cmp
mov
icebp
pop
inc
mov
loopne
cmp
mov
jns
outsl
nop
enter
ret
iret
seto
out
mov
cmpsl
mov
xchg
push
mov
dec
adc
ret
leave
dec
mov
dec
test
mov
xorl
lea
mov
in
call
sub
je
mov
popf
scas
adc
xchg
outsl
int3
dec
cli
call
std
clc
jns,pn
loope
divl
stos
inc
pop
mov
int
je
inc
push
push
dec
push
fs
xor
call
mov
test
adc
stos
adc
andb
mov
push
rorl
inc
loop
adc
mov
mov
sub
dec
xorl
push
add
int
sbb
fwait
hlt
ljmp
push
pop
inc
or
mov
js
jge
pop
mov
jecxz
xor
out
in
test
int
push
push
ss
pop
jnp
sbb
pusha
mov
ficompl
stos
ds
mov
popf
push
inc
mov
ficoml
inc
mov
jl
cmc
in
aaa
test
pop
decb
fiaddl
push
aam
dec
sti
das
pop
xor
arpl
lret
sbb
cld
add
ds
sahf
fstps
dec
clc
mov
in
aaa
and
xor
mov
jno
pop
jmp
add
mov
jns
ret
push
clc
mov
ret
pusha
js
out
jle
in
mov
fs
frstor
insb
adc
lods
inc
push
cmp
lea
inc
lock
jg
mov
out
cmp
push
cltd
jge
xchg
mov
adc
test
add
sahf
pop
test
mov
fsubp
out
adc
sub
cmpsl
mov
test
mov
cmp
xchg
outsl
dec
mov
mov
orl
les
xor
sahf
cmpsl
jmp
out
and
lret
pushf
sbb
xor
jmp
test
fistpl
inc
movsl
jno
pop
pop
int3
imul
ja
push
pop
or
movsb
cltd
aam
call
lcall
pushf
fiadds
mov
iret
pop
aas
inc
jbe
push
mov
bswap
adc
mov
pop
and
inc
dec
addr16
jae
in
scas
push
dec
or
sbb
mov
mov
jbe
inc
sbb
sub
pop
notl
mov
cmc
pop
push
lea
dec
sysexit
pop
lock
dec
jmp
stos
dec
mov
inc
xchg
pop
sbb
jbe
iret
cmp
cmp
ret
int
cld
int3
leave
lcall
cld
daa
test
xchg
ljmp
scas
pop
jnp
fimuls
sbb
test
inc
adc
das
cs
or
movsb
iret
push
or
ss
jmp
stc
repnz
or
pop
adc
cmpsb
or
out
data16
pop
repz
dec
lret
jo
outsb
push
and
xchg
loop
sbb
sub
cmpsl
mov
push
push
repnz
pop
clc
mov
or
dec
imul
cmp
js
cld
dec
pop
xor
inc
out
cmp
jo
inc
sahf
sti
and
pushf
stos
adc
jmp
jg
lcall
push
fdivs
call
jp
mov
sbb
push
mov
xor
inc
sub
xor
jmp
lods
test
push
cmpsl
mov
xchg
movsb
aaa
jns
sbb
jb
lcall
or
fmull
adc
out
mov
jl
addr16
dec
movsl
aad
mov
leave
cwtl
jg
mov
out
addl
in
jge
bound
fmull
das
lods
test
jae
xor
test
cmp
cmp
or
movd
stos
and
jmp
mov
decb
push
xchg
scas
movsb
dec
fs
flds
add
mov
push
and
cli
mov
in
filds
adc
addr16
jne
pop
rcrb
push
add
push
sub
loope
cmp
push
push
iret
inc
sbb
adc
push
mov
sbb
out
add
fisttpll
or
in
pop
add
jmp
sub
xchg
iret
xor
addr16
mov
dec
rolb
fisubrl
xor
adc
jle
popa
or
pop
int3
cmp
adc
fdivl
adc
add
sbb
lret
jmp
mov
pop
mov
pop
or
xchg
add
outsb
xor
cli
outsl
mov
aad
lahf
push
stos
add
add
mov
cmp
sub
mov
mov
loopne
es
nop
sti
adc
fbld
ss
jecxz
xor
cltd
cmc
cmp
fdivl
mov
cmp
insb
inc
sahf
and
cmp
data16
xchg
stc
pop
cld
into
jge
lea
xchg
rorb
fildll
sub
test
testb
out
stos
aam
lods
mov
jge
bound
dec
or
jl
scas
test
add
cwtl
add
mov
push
xchg
push
outsb
mov
roll
xor
cmp
adc
lcall
add
dec
inc
ja
dec
int
rcl
dec
stos
push
decl
jns
xchg
jnp
fisubrl
nop
mov
pop
ret
loop
cmp
mov
dec
adc
ljmp
scas
jmp
int
dec
push
rolb
call
lcall
arpl
into
test
in
mov
jle
outsb
rol
ret
movb
adc
xlat
aad
stos
mov
std
fcmovnu
pop
add
jbe
ffreep
mov
jmp
cld
lret
add
adc
mov
xchg
adc
es
mov
outsb
cltd
popa
sti
lret
fst
loope,pt
popf
stos
mov
xchg
xor
push
sti
adc
shrb
sahf
sbb
and
ja
roll
lds
mov
inc
hlt
mov
sar
imul
fisubl
pop
daa
ret
push
lahf
mov
dec
bound
scas
sahf
inc
jl
cmpsb
mov
push
inc
sub
xor
dec
rcr
mov
into
cld
mov
iret
test
jl
neg
adc
adc
aaa
into
frstor
xchg
dec
jae
mov
mov
jl
add
scas
sbb
mov
shll
in
mov
and
jbe
mov
sub
mov
lahf
sbb
pop
jns
daa
das
xchg
rcrb
push
test
pop
test
cld
insb
push
mov
xor
add
repz
push
jae
ret
inc
test
cmp
adc
sub
pop
adcl
stos
arpl
lods
hlt
loopne
sbb
mov
inc
lret
loope
jno
push
daa
pop
lcall
adc
cmp
leave
sahf
jmp
faddl
lcall
filds
addl
lods
cld
out
sbb
ret
push
jg,pt
rcrl
inc
xchg
sub
repnz
jle
imul
xor
int
shl
std
cmpsl
mov
mov
int
jbe
insl
push
jnp
int3
scas
pop
jl
leave
rorl
ja
loope
cmpl
cmp
mov
mov
xchg
inc
lcall
xor
jmp
fmull
sub
add
push
mov
fnsave
and
sbb
fwait
aas
imul
call
cmp
mov
sbbb
lcall
aas
addr16
pop
rcr
sbb
stc
scas
jmp
mov
dec
or
or
test
imul
jmp
jl
arpl
sbb
add
xor
dec
xchg
scas
decb
daa
mov
ret
insl
fsubrp
dec
xorl
push
jl
mull
xchg
rcrl
inc
inc
jge
movsl
push
out
test
ret
bswap
mov
adc
loope
loop
pushf
loope,pt
lods
ss
mov
outsb
repnz
scas
pop
sub
inc
xchg
xchg
lea
in
stc
rcr
or
jo
lahf
shll
or
or
loop
fisubl
fildll
add
shrb
add
les
insb
cmpsb
sbb
ljmp
xor
jp
test
cmpsb
mov
fwait
andl
or
icebp
add
inc
clc
cwtl
test
lds
test
dec
cmc
or
insl
mov
adc
int3
add
cmp
ds
stos
inc
push
push
jae
lods
jbe
std
dec
incb
fs
cli
sub
jl
js
stos
inc
push
or
sub
cmovge
mov
in
dec
iret
into
mov
ret
inc
insb
dec
test
xchg
stos
adc
jle
push
pop
xchg
cmp
jmp
std
imul
mov
sub
push
aas
push
sbb
pop
push
cmp
jg
mov
or
je
add
mov
mov
mov
stc
aas
scas
addr16
fstps
push
iret
jl
lahf
jge
out
in
xor
fistps
push
fstpl
test
lds
mov
push
inc
inc
out
mov
das
out
fldpi
aam
adc
xchg
mov
push
xor
popa
iret
push
lods
rcrl
dec
rol
jmp
inc
pop
lret
xchg
add
andl
or
adc
cwtl
cwtl
jmp
pop
scas
push
aad
lahf
push
test
stos
sbb
pop
lcall
mov
cmp
jbe
sub
xor
cmp
mov
mov
pop
pop
sbb
jno
cmpsl
sti
fucomp
or
push
out
divb
dec
in
xchg
pushf
jne
inc
out
ja
imulb
xacquire
jne
test
mov
icebp
sbb
cmp
adcl
jae
pop
cmp
out
mov
sbb
adc
adc
aam
mov
jmp
popa
incb
out
scas
jecxz
push
mov
cmp
popf
xchg
out
dec
movsl
aaa
mov
inc
dec
or
shl
mov
ret
sbb
icebp
jns
enter
scas
mov
imul
leave
and
outsb
cld
xchg
test
shll
enter
int
lods
mov
jge
aas
outsl
loope
sub
inc
jge
xor
fs
inc
push
cmp
xor
xlat
lods
and
or
jge
iret
cwtl
push
out
push
sbb
in
pop
in
cs
mov
testl
pop
rcrb
and
cmpsb
xor
repz
lods
int3
fsubs
pop
push
pushf
mov
sub
ss
mov
and
jb
mov
push
pop
std
jae
mov
pslld
aam
data16
mov
mov
lahf
mov
icebp
jae
test
dec
xor
fwait
lret
fistpll
and
cmp
ss
cwtl
add
cmp
jp
mov
shl
adc
stos
mov
mov
lret
cmp
dec
mov
mov
mov
out
jbe
push
mov
aas
hlt
rcr
aas
cld
jmp
loope
fldt
imul
gs
sbb
jae
daa
pop
ret
xor
xorb
and
push
pusha
or
adc
mov
and
sti
cld
cwtl
and
jno
add
or
aam
mov
cmp
in
cmpsb
iret
outsb
cmp
lods
mov
js
aad
push
fmuls
lods
imul
and
mov
iret
hlt
xor
sub
inc
adcb
mul
mov
jb
ficompl
imul
leave
int3
pop
int
outsl
dec
push
or
iret
and
pop
roll
push
jmp
pop
shll
sub
push
subl
stos
mov
push
add
push
outsb
aas
data16
xchg
dec
mov
xchg
test
xor
cmpsb
scas
cmp
and
inc
loope
icebp
xor
mov
test
testb
add
cld
call
dec
xor
pop
das
xchg
xchg
xchg
fadds
icebp
mov
in
cmp
cld
mov
inc
adc
mov
push
jle
icebp
loop
xchg
ds
pop
push
addr16
xchg
or
pusha
ja
push
jo
push
leave
cld
lcall
iret
and
stc
test
mov
cmp
fdivrp
mov
leave
mov
stos
int
fstps
add
lock
adc
add
in
xor
mov
xchg
in
xchg
push
shlb
movb
shrb
ret
jae
xchg
mov
fsubl
mov
pop
xor
in
add
mov
or
pop
cmp
pop
and
xor
jo
fwait
scas
in
xchg
popa
nop
cli
xor
gs
ret
and
daa
jg
inc
sarb
sub
js
jns
xor
repz
pop
jae,pt
in
cwtl
aad
xor
add
insb
adc
xchg
xchg
or
xchg
jg
and
lock
push
or
or
out
jo
pop
adc
push
outsb
cmp
out
dec
mov
leave
test
xchg
push
sarb
iret
movl
mov
iret
or
dec
xchg
push
fmulp
leave
xchg
cmpsb
in
ds
scas
jmp
inc
jno
movsb
sahf
dec
mov
loope
cmc
mov
mov
std
call
mov
mov
stos
in
cmp
pop
push
addl
repz
xor
jle
stos
jmp
pop
bound
pushf
fidivrs
pop
pop
jbe
es
lret
aam
push
test
out
cmc
sbb
add
orb
mov
dec
cmp
movsb
jns
sbb
popl
aam
arpl
movsl
mov
iret
ss
stos
inc
jmp
push
lods
ja
mov
adc
push
pop
out
incb
lock
mov
mov
mov
divl
arpl
ljmp
inc
stos
aaa
and
cld
cmpsl
nop
sub
sub
popa
dec
not
aaa
push
mov
pushf
std
addr16
mov
js
jle
jp
jne
pop
std
or
fildl
ret
jmp
mov
movsb
inc
movsl
dec
pushf
ror
jecxz
movsl
and
ss
into
jmp
mov
mov
xchg
add
inc
shlb
dec
hlt
movsb
sahf
aam
xor
adc
push
lods
imul
mov
sarb
into
mov
outsb
add
mov
or
or
mov
xchg
daa
xorb
rorl
fidivl
pop
mov
aam
inc
and
jb
aam
das
mov
or
stc
mov
out
push
adcb
pop
leave
mov
xlat
inc
outsb
dec
lea
add
dec
stc
push
add
lret
call
ds
xchg
pop
cwtl
xor
stos
cli
and
movsb
scas
lods
sbb
sub
push
push
inc
lahf
xchg
xchg
repz
pop
add
jecxz
pop
and
push
cmp
lahf
sbb
xor
je
ret
fsubrs
ds
pop
cmp
sub
push
xchg
je
rcrl
in
dec
loopne
xor
push
or
jg
xor
sbb
cmpl
cmp
cmc
jle
bound
fbstp
push
dec
jno
adc
loopne
enter
jecxz
aad
dec
out
int
sbb
test
dec
push
fcmovnbe
dec
xchg
test
sbb
or
sti
adc
xchg
les
adc
rolb
pop
dec
mov
pop
add
jge
add
add
jmp
jge
or
daa
cmp
fxam
xor
int
pop
rcrl
subb
mov
push
daa
sar
and
add
adc
paddw
mov
movsl
dec
add
push
adc
je
add
divl
fcmovnu
insl
add
push
je
and
das
rcl
xchg
dec
out
inc
xchg
imul
jmp
inc
push
fmull
les
aas
push
pop
sbb
sub
in
movsb
loope
mov
sub
test
xchg
addr16
mull
imul
lcall
data16
xchg
outsb
scas
cmovo
imul
divl
or
call
pop
fmull
rol
ss
inc
mov
shrb
in
mov
jg
mov
pop
xchg
jns
cld
addr16
and
adc
jp
mov
jmp
lret
shrb
andl
sub
cli
or
push
arpl
jp
xchg
pop
push
mov
sub
test
pop
movl
cmp
lret
xchg
adc
xorl
negb
mov
xlat
shrl
inc
mov
xchg
cmp
mov
adc
fldl2e
in
out
repnz
into
int3
xor
inc
jnp,pn
imul
inc
loope
ficompl
in
push
out
in
popf
aas
mov
fldpi
fbstp
and
sub
adc
mov
mov
call
jge
js
push
ja
cmp
cmp
dec
pusha
mov
mov
or
cwtl
test
mov
in
scas
jno
xchg
ret
sbb
mov
nop
pop
dec
nop
in
aaa
push
mov
negl
mov
push
cmpsb
lock
stos
jmp
arpl
pusha
mov
sub
fldt
inc
add
subl
ss
sbb
fstp
xor
and
imulb
xor
loop
cmpsl
gs
add
test
mov
shrl
or
aas
cmp
inc
jge
inc
push
jmp
scas
dec
dec
xorl
lahf
sub
lds
shrl
push
sub
pop
test
push
inc
pop
jl
mov
loope
mov
in
sbb
fidivrs
add
js
bswap
xor
inc
insl
add
out
imul
xor
jbe
adc
xchg
flds
xor
push
idivl
adc
or
dec
mov
push
sbb
push
mov
fbstp
sbb
pop
into
inc
addb
movsl
xor
push
rclb
xchg
sub
pusha
dec
adc
stc
sub
cmp
dec
push
and
xlat
call
and
in
mov
xor
aas
mov
cmp
cltd
cwtl
mov
test
push
rorl
out
insl
popa
and
mov
fwait
in
mov
xchg
mov
jne
loop
out
int
lahf
addr16
xchg
mov
pop
dec
test
ss
sub
sub
adc
push
fsts
mov
xchg
pop
in
push
pushf
fmull
mov
inc
bound
pop
cmpsl
adc
push
mov
push
jmp
bound
test
mov
mov
js
pop
stos
mov
inc
adc
sbb
cmpsb
sbb
xchg
pop
dec
dec
mov
inc
xchg
dec
jmp
mov
sub
shll
jmp
xchg
pop
ret
jns
lods
jp
xor
fildll
cwtl
filds
lds
adc
push
mov
scas
outsb
mov
xchg
std
nop
movsl
ds
xlat
adc
xor
sub
sub
mov
mov
jge
nop
xor
mov
xor
cld
outsl
mov
cmp
xchg
or
sbb
jmp
xor
outsl
push
das
pop
cmp
sbb
mov
fs
pop
jns
aam
outsb
jg
adc
mov
popa
push
pop
sahf
idivb
dec
repz
pop
bound
push
jne
pop
mov
cli
ret
xlat
aaa
rcl
cs
xor
inc
push
mov
addr16
jmp
push
or
movsl
adc
mov
cmc
mov
popa
inc
fwait
lret
pop
aam
mov
fcmovne
jnp
lahf
cmp
aaa
or
add
sub
dec
and
imul
push
les
cmp
inc
inc
mov
scas
ljmp
cmp
mov
jae
lods
pop
jo
in
pusha
jns
sarl
mov
dec
mov
xor
lods
adc
out
enter
jle,pn
mov
hlt
pop
pop
inc
movsb
shr
push
inc
mov
fisubl
int
pop
cmp
bound
leave
mov
inc
enter
pop
jecxz
push
ljmp
call
call
das
dec
xchg
cs
int
into
outsl
mov
push
sarb
dec
inc
imul
mov
lret
push
push
adc
mov
stos
loop
and
les
cltd
inc
out
jne
inc
scas
inc
aam
xlat
fisttps
pusha
outsl
sbbb
fstps
add
movsl
bound
cltd
push
clc
dec
mov
dec
xchg
mov
xchg
inc
cmp
push
mov
mov
and
adc
in
mov
sub
jno
cwtl
push
out
pop
inc
jnp
cmpsb
adc
test
iret
cmp
inc
fcompl
or
or
push
lret
push
and
cmpb
pop
fdivrs
jecxz
loop
loop
add
test
jnp
push
dec
inc
or
xor
xchg
cld
xchg
subb
xchg
test
cmc
xchg
aaa
movsl
xor
idiv
fs
lcall
xor
dec
sub
and
popa
subl
xor
outsl
add
and
lock
outsl
pop
ja
ret
mov
push
push
ss
cmp
inc
adc
adc
dec
dec
jmp
cmc
inc
dec
jl
dec
data16
and
or
dec
lods
test
jbe
imul
xlat
mov
fcomip
mov
inc
sbbb
fstl
addr16
das
adc
dec
jns
aam
add
out
test
jo
mov
jge
jle
ficompl
jecxz
and
lock
ss
std
mov
xchg
or
repnz
imul
fdivrl
xchg
cmp
cmpsl
stos
sbb
pusha
or
enter
lret
imul
push
fildll
lret
dec
dec
or
lods
cwtl
movsl
scas
mov
call
push
or
dec
mov
jns
pop
push
scas
or
ret
xor
xor
pop
out
cmp
add
or
inc
fwait
sub
jnp
xlat
jl
out
rcll
xor
pop
adc
and
dec
imul
aam
mov
jge
sub
shrb
icebp
cltd
or
mov
ficomps
enter
out
shrl
loope
sub
ja
or
jl
movsb
cmp
cmp
negl
loopne
ficomps
outsl
mov
and
out
aas
sti
sti
lret
push
mov
or
test
mull
mov
stos
xchg
in
lds
mov
jo
and
scas
in
or
rcll
jbe
pop
bound
or
pop
fcmovnbe
sti
cmpsl
sbb
loopne
int3
into
loop
and
lret
sbb
mov
out
add
imul
outsb
mov
test
lods
inc
int3
sahf
shrl
fsts
jmp
xor
mov
cs
dec
setae
mov
sti
mov
xor
sbb
call
cli
bswap
xor
push
mov
fbstp
xor
subb
pop
test
sub
sti
inc
inc
mov
sti
into
arpl
xchg
out
sub
lea
add
xchg
pusha
aad
mov
sbb
push
and
fs
jmp
jg
lret
mov
pushf
pop
mov
pop
push
pushf
and
cmp
mov
int
lods
test
aas
in
imul
sub
iret
sub
inc
out
jnp
popf
mov
mov
movsl
or
cli
jae
repz
lock
xchg
pop
push
cwtl
negl
int
out
sbb
dec
insb
pop
jbe
and
gs
cmc
fimuls
jecxz
vpsraw
aaa
xchg
ds
sbb
cmc
js
jb
loop
xchg
bound
push
jle
pop
adc
and
mov
dec
fcmovne
dec
mov
ret
sahf
lret
scas
jmp
mov
shl
dec
mov
loop
or
rcrb
add
mov
nop
xchg
push
xchg
and
rcll
pop
sahf
loope
cld
jge
adc
xor
mov
pushl
pop
inc
ss
out
leave
pop
or
test
dec
icebp
aam
call
aam
jns
jecxz
push
xchg
jbe
inc
mov
mov
xor
repnz
rcrl
xchg
lahf
mov
xchg
xor
or
push
fstpt
sbb
popa
mov
push
push
pop
xlat
sahf
rcr
repz
pop
ret
dec
xchg
arpl
repz
shrl
rclb
sbb
inc
adc
push
mov
sub
sahf
fs
stos
dec
mov
push
sbb
add
xor
xchg
nop
icebp
pushl
add
pop
xchg
ret
rorb
or
rol
pop
andl
mov
lods
and
jae
mov
lea
add
sbb
lcall
clc
sub
xor
and
test
in
xlat
frstor
add
pop
sti
jbe
mov
adcl
jmp
pop
sub
push
nop
xor
xchg
cwtl
shlb
jg
sub
fimuls
pop
call
pop
inc
mov
pop
cmp
test
and
jae
sub
cmp
sahf
in
cmp
xorb
int3
cmp
idiv
gs
or
push
aam
cmc
pop
fidivl
ja
push
mov
inc
int3
ds
jle
push
cmp
mov
push
jnp
out
out
mov
lea
push
mov
hlt
divb
aam
imul
dec
aam
mov
xchg
mov
scas
jp
sub
cmp
lret
and
stos
push
cmp
cmp
add
xor
ljmp
sbb
sub
mov
mov
paddusb
and
fcompl
outsb
add
sti
jle
push
push
shrl
outsl
xor
and
test
fldt
jecxz
push
icebp
imulb
xchg
push
sbb
mov
rclb
outsl
dec
clc
lret
xchg
scas
or
push
fsubrl
gs
jno
push
pop
cmc
inc
rcll
outsl
in
jo
loope
mov
test
in
jbe
jne
jmp
and
sub
lock
mov
mov
dec
mov
mov
fisttpl
out
stos
xrelease
out
inc
imul
lea
cld
out
pop
jo
xchg
pop
jo
adc
mov
add
mov
aas
mov
repnz
pop
imul
add
in
in
rcll
jmp
sub
lds
xchg
in
insb
inc
adc
add
arpl
in
inc
lods
inc
adc
inc
fwait
lahf
cmpl
rcrl
lock
mov
int3
roll
imul
rcr
fwait
or
clc
dec
loope
fs
lret
push
incb
mov
jnp
das
test
mov
test
pusha
or
into
or
add
xchg
repnz
mov
shll
push
inc
push
lcall
hlt
adc
in
add
dec
cmp
out
mov
jmp
test
lods
jmp
out
ds
scas
pop
xlat
mov
inc
sarl
push
popa
mov
out
cmp
outsb
addr16
dec
add
jg
sbb
or
dec
sub
push
jge
pop
or
pusha
cmpsl
out
jmp
mov
mov
or
iret
popa
cld
jecxz
cmp
cmp
xor
hlt
mov
outsb
cwtl
and
dec
or
lods
call
push
fldl
adc
daa
jbe
inc
jmp
fmuls
mov
or
lahf
xor
leave
mov
mov
hlt
sbb
sub
movsl
test
aaa
jecxz
shrl
iret
sub
xchg
es
jge
sarl
xor
mov
mov
inc
das
add
pop
testl
in
mov
mov
hlt
test
testl
or
repz
xor
and
js
xchg
mov
stos
dec
lcall
jo
jbe
adcb
je
mov
movsl
dec
pop
aas
mov
xchg
inc
std
int
lods
iret
scas
cmp
lahf
je
iret
xchg
aaa
ss
das
lret
xor
inc
push
push
ficoms
sti
mov
lock
jbe
fsts
out
test
sahf
jle
mov
pop
mov
adc
call
or
fucom
mov
test
mov
jecxz
mov
sti
mov
or
or
cs
sbb
rorb
fimuls
rolb
fs
lahf
rol
aaa
clc
xchg
out
icebp
mov
pop
repnz
sub
and
xchg
pop
cmp
insl
hlt
pop
xorl
lds
sbb
mov
sub
pop
inc
inc
cmp
sbb
xchg
or
fcmovnu
stc
negl
leave
pop
mov
xor
mov
inc
pop
xor
or
mov
mov
inc
ljmp
gs
nop
and
lret
mov
les
aaa
jmp
mov
xor
daa
dec
and
lea
cmp
mov
outsb
pop
or
inc
icebp
das
into
cmp
lock
scas
xor
pop
pop
es
inc
jl
roll
push
mov
jmp
sub
inc
mov
add
pop
loopne
iret
mov
mov
fs
outsl
xlat
imul
js
mov
movsb
insb
nop
fwait
lock
xchg
gs
and
cmc
inc
and
outsb
pusha
add
data16
inc
ja
add
dec
add
push
pop
jmp
or
cmp
lea
fiadds
adc
in
pop
scas
inc
cmc
or
mov
cmp
push
rorb
into
daa
mov
repnz
test
adc
pop
mov
aad
pop
jmp
jo
and
dec
add
jne
roll
xchg
scas
ss
enter
mov
push
jge
add
or
stos
mov
mov
push
insl
and
mov
clc
pop
jmp
or
pop
or
jae
inc
les
scas
int
cld
pop
subl
push
rclb
mov
add
fxtract
ljmp
lcall
adc
add
lods
rcll
imul
xor
sbb
movsl
and
mov
into
in
inc
sub
fistl
dec
mov
fcmovnbe
sub
jle
loopne
pushf
pop
or
scas
outsl
sbb
add
stc
push
push
xchg
push
jnp
mov
mov
push
je
add
mov
sub
dec
sbb
in
xchg
and
sub
ja
jno
cwtl
add
fs
scas
cmpsl
sbb
xchg
mov
sti
mov
xchg
scas
or
and
test
out
sbb
addb
mov
dec
sbb
sbb
stos
dec
dec
mov
stos
dec
nop
pop
ds
std
les
jae
orb
outsb
and
fldenv
lahf
je
js
dec
test
inc
mov
dec
ret
mov
mov
lock
jo
cli
test
movsl
je
test
and
xchg
dec
xor
loopne
pop
ds
xorl
bound
lcall
push
inc
mov
adc
lcall
sub
cmp
or
pop
ljmp
aaa
mov
sbb
or
mov
xchg
sub
inc
adc
pop
leave
adc
mov
xchg
mov
adc
jb
xor
mov
inc
out
inc
out
fbld
insb
pop
jae
in
dec
test
adc
pusha
or
push
sub
mov
push
sub
stos
mov
in
das
cmc
subl
dec
pop
pop
fdivs
addr16
dec
idivl
push
bound
and
das
cmp
iret
fwait
inc
repnz
test
psrlw
movups
test
int3
dec
mov
das
mov
add
pop
stos
inc
daa
push
adc
iret
sbb
cld
xor
pop
mov
test
jns
cmp
inc
adc
cmp
mov
das
dec
and
rorl
subl
cmp
pop
add
sbb
xor
mov
or
xchg
mov
pusha
xchg
add
int
outsb
mov
fmul
xor
cvtdq2ps
je
bound
pop
cs
or
xor
cwtl
and
inc
insl
pop
fwait
inc
xor
pop
or
call
ljmp
stos
push
xlat
jb
mov
mov
sbb
xchg
in
addr16
fs
sub
mov
push
mov
sbb
das
mov
dec
jae
adc
or
and
mov
jmp
pop
loope
push
sbb
push
ret
add
icebp
jnp
inc
cmpsl
sub
jae
aaa
andl
cmp
rol
adc
shll
scas
and
push
cmpsb
call
sbb
shll
cmp
and
sbb
push
inc
xchg
lcall
mov
add
sbb
test
out
test
cmpsb
movsb
fisubrs
sub
call
idivl
dec
mov
aaa
sub
adc
enter
ss
das
sbb
and
or
add
iret
lock
dec
sbb
xor
xor
dec
out
pushf
sbb
xlat
inc
outsb
inc
mov
or
aam
fcomip
fucompp
push
test
orl
ficoml
shlb
adc
std
jns
sbb
test
push
adc
push
jle
ja
shlb
inc
sti
mov
imul
loope
jne
test
and
sub
cmpsl
xchg
sbb
pop
sbb
mov
bound
out
sbb
push
jp
shll
sub
inc
loopne
mov
cmp
mov
ss
mov
in
push
mov
pop
adc
xchg
xchg
out
sub
and
xchg
mov
xchg
test
pop
or
rcrb
cltd
xchg
inc
test
int
adc
aad
add
xchg
sbb
in
filds
or
jae
mov
mov
mov
jecxz
jl
mov
add
mov
insl
add
jmp
scas
jo
jg
aaa
xchg
dec
xchg
pop
sbb
push
lahf
xor
mov
dec
cwtl
pop
cmp
sbb
inc
cs
cmp
cwtl
cmpsb
jbe
mov
cmp
jmp
dec
mov
dec
cli
outsl
clc
insb
das
push
iret
rcrb
jge
test
fwait
test
int
xor
sbb
push
jno,pn
dec
inc
adc
cmpsb
popf
pop
cmc
je
call
popa
aas
rcll
ss
arpl
mov
inc
and
xadd
xlat
fnstenv
jne
adc
jle
mov
dec
adc
xor
inc
nop
lcall
lods
xchg
adc
into
test
xor
out
loope
mov
and
cli
inc
xor
cmpsl
pop
rcrl
and
and
lods
xor
mov
sbb
mov
mov
lds
pusha
sar
inc
mov
and
jo
mov
jecxz
cwtl
dec
mov
mov
aaa
push
sub
xor
sbb
xchg
imul
lds
lea
cltd
pop
add
add
pop
jecxz
jo
jns
stos
jae
xchg
loop
inc
repz
scas
fidivs
push
push
cmp
rolb
adc
test
incl
add
mov
stc
sub
cs
je
and
fnsave
gs
cli
rcll
cwtl
push
subl
inc
in
mov
rol
in
cltd
jp
push
shll
jp
push
dec
xchg
fucom
addr16
clc
and
loopne
gs
adc
and
sbb
mov
add
and
inc
in
int3
xchg
push
idiv
ljmp
in
mov
fnsave
dec
push
pop
popa
mov
mov
out
jl
cmp
mov
xor
mov
fimuls
push
fimuls
in
int
mov
lds
xor
imul
test
fildll
adc
sbb
js
and
mov
or
inc
and
rol
andb
pop
xlat
outsb
jb
icebp
rolb
sbb
shr
mov
fcomip
push
xor
pop
divb
xchg
in
mov
out
cmpsb
pop
scas
in
inc
pop
outsl
inc
call
test
fisttpl
mov
pushf
adc
pop
xchg
dec
and
push
fs
pop
jmp
push
in
test
or
fbstp
xchg
xchg
add
faddp
lea
adc
add
iret
in
mov
adc
xor
cwtl
cmp
sbb
aam
pop
ds
mov
sbb
ja
xchg
inc
clc
arpl
lea
pop
fisubrs
icebp
jo
cmpb
dec
inc
andb
and
push
out
push
xchg
inc
pop
lock
fistpll
pop
test
ret
mov
stc
dec
sub
std
jno
lds
in
daa
fsub
insl
iret
mov
fwait
cmpsb
inc
adc
cld
icebp
repnz
stos
sub
push
add
xchg
mov
mov
cmp
pop
and
repz
ss
repz
cmp
push
lret
mov
sarb
adcl
mov
sbb
sub
cmp
ret
shrl
mov
mov
sub
js
mov
call
jg
sub
inc
xchg
cmc
adc
jecxz
mov
push
icebp
cmpl
push
rclb
dec
int
cwtl
cld
push
ljmp
das
vpavgw
sbb
cmp
cmp
cmp
pop
pop
stc
jmp
or
jno
dec
dec
movsb
xchg
loope
mov
gs
addr16
pop
lahf
insb
mov
scas
push
ret
imul
cmc
lods
ja
inc
out
ja
outsl
jg
or
add
in
push
mov
jl
mov
jg
loopne
fdivs
xor
ss
roll
jae
push
adc
jno
add
int
movsb
pop
fldt
ds
das
js
pop
stc
enter
add
push
cmpsb
jo
pop
push
mov
pop
sub
push
ret
daa
sub
mov
adcl
pop
xchg
inc
jne
pusha
dec
ds
dec
idiv
std
je
and
add
shrl
testl
clc
add
xchg
jns
mov
pop
daa
into
leave
lahf
ret
std
mov
dec
in
jns
mov
push
cs
xor
jae
nop
cld
lahf
stos
inc
je
jbe
xchg
push
add
dec
das
mov
mov
leave
and
cmp
xor
imul
enter
mov
push
das
lea
pop
mov
in
jp
push
push
pop
int3
leave
fcomip
pop
shrl
into
popf
jle
sub
fisttpll
dec
cmc
inc
jns
pushf
inc
cmp
call
cmc
mov
jp
add
pusha
out
idivb
add
or
mov
jno
das
rorb
jb
sub
add
jmp
and
fdivp
push
movsb
imul
stos
clc
ds
add
sbb
push
jge
xchg
push
addb
divl
inc
adc
push
fadds
es
stos
cmp
or
rcr
or
loopne
push
outsb
ljmp
add
mov
outsl
dec
and
pop
cmp
stc
das
pop
jmp
or
fsubr
xor
mov
mov
call
cmp
hlt
int3
negl
push
pop
ja
mov
repnz
mov
inc
or
fucomi
fidivl
or
nop
mov
mov
pop
subb
mov
testl
arpl
pop
or
mov
mov
pop
inc
fnstcw
jle
mov
and
cmp
xchg
mov
repz
xchg
ja
xchg
xor
push
out
xor
adc
xchg
incl
out
inc
lcall
dec
loope
shld
sbb
out
popf
nop
sar
pop
lcall
pop
mov
shlb
lret
sbb
jmp
sbb
imul
shll
or
mov
adc
leave
movsb
push
jo
decb
leave
push
inc
mov
loope
fmuls
sbb
sub
test
cmp
mov
xchg
push
imul
imul
jmp
insl
or
inc
pop
push
ret
clc
popa
ja
stos
and
add
iret
mov
jbe
ss
mov
int3
add
not
and
jmp
addr16
popf
push
push
test
or
stos
cmpl
test
stc
xlat
or
push
test
jns
out
fs
scas
push
jle
aad
aaa
push
roll
sbb
mov
sbb
hlt
xchg
addb
or
nop
mov
imul
in
hlt
mov
gs
clc
cmp
in
outsl
jb
xor
into
js
out
outsl
std
xor
fdivr
inc
adc
movsl
xor
repnz
loope
lcall
pop
pushf
imul
lret
lret
inc
mov
dec
out
lcall
sbb
sub
ljmp
iret
es
and
pop
popf
fadds
and
movsb
aam
cli
or
lea
and
jo
cmc
lret
in
mov
shrl
push
sub
loop
cmp
or
mov
jle
cmc
mov
push
movsb
scas
sub
insb
or
nop
add
inc
testl
pop
fs
cmpsl
xchg
push
xor
mov
rolb
jnp
mov
and
xlat
add
mov
mov
stos
rclb
inc
mov
pop
sub
sbb
push
roll
push
insb
hlt
jg
inc
out
jmp
sub
ret
data16
les
daa
dec
int
xor
adc
iret
and
scas
push
js
xor
xor
stos
subb
int3
adc
ljmp
dec
pop
stos
inc
incb
or
push
scas
in
in
insl
mov
jmp
xchg
cmp
loope
repnz
adc
hlt
xor
or
cmp
xchg
in
pop
sarb
test
ljmp
xchg
jo
xor
stc
sbb
shl
mov
es
add
inc
int
mov
aaa
movsb
sbb
jae
push
inc
sbb
sub
rcrb
cmc
and
mov
ret
lods
sub
std
sbb
mov
pop
repnz
pusha
lock
shlb
add
mov
movsb
xchg
inc
fstpt
lcall
andl
lods
sbb
pop
or
scas
jecxz
sub
inc
lret
clc
xlat
repnz
sub
je
cmp
mov
cmp
mov
inc
mov
xchg
adc
push
repz
fadds
pop
out
jl
xor
mov
cmpsb
in
iret
aam
call
inc
insb
and
pop
dec
stc
adcl
or
or
pusha
xchg
dec
inc
push
sub
or
jecxz
dec
mov
mov
dec
push
fwait
add
movsl
inc
les
sub
pop
inc
iret
in
mov
xchg
test
cmpsl
cli
lret
lret
or
addl
pop
adc
xor
dec
jnp
insb
sarl
mov
xchg
cld
ret
imul
fbstp
sub
cmp
mov
imul
and
das
sbb
test
repnz
dec
stc
inc
xchg
dec
adc
imulb
inc
fstpl
popa
std
dec
roll
repz
add
inc
and
std
ljmp
push
mov
sbb
clc
push
cmp
popf
jecxz
aad
mov
int
push
test
dec
sbb
int3
jo
paddd
cmp
cvtpi2ps
jg
dec
xchg
sti
out
sub
lds
aam
je
cmp
or
fiadds
popf
je
xchg
sbbb
xchg
pop
call
in
mov
push
cmpsl
jmp
sbb
icebp
ret
shlb
push
lock
mov
ret
inc
data16
inc
pop
inc
push
pop
mov
xchg
dec
jne
push
je
in
scas
into
xchg
pop
jecxz
inc
dec
lods
nop
mov
lea
pop
xlat
cmp
les
ffreep
aas
ds
fistpl
dec
ja
pop
push
sarl
dec
lock
jg
sub
adc
jecxz
and
pop
dec
int3
dec
mov
pop
sbb
andb
out
sbbl
inc
push
adc
test
addl
ret
add
sub
ficompl
mov
push
push
push
push
mov
inc
jae
sbb
mov
mov
test
ret
shrl
test
pop
or
and
and
test
xor
xorl
movsb
int
jae
jl
jo
mov
or
test
xor
xorl
sub
cmp
loope
sub
jno
in
and
hlt
inc
insl
cli
dec
push
push
sbb
movsl
and
imul
add
xchg
sbb
push
cld
sahf
mov
mov
dec
movl
mov
jecxz
rorb
sti
mov
imul
sub
loop
scas
incb
scas
out
cmp
cmp
lods
scas
cltd
inc
loopne
add
fwait
ljmp
test
push
adc
pop
sub
lahf
jg
out
xor
test
jge
lret
or
rorb
xchg
in
inc
sub
dec
outsb
push
outsb
mov
inc
out
jns
xor
inc
stos
push
leave
popf
add
sub
jae
inc
xchg
into
outsb
fwait
jmp
lcall
lret
outsb
pop
test
mov
cwtl
jb
jg
repz
pop
sbb
jg
imul
in
mov
call
movb
imul
aas
movsb
shld
insb
cmp
std
sti
jle
or
adc
dec
or
fisttpll
pop
fdivrs
lea
push
fiaddl
lods
das
loopne
rcll
add
test
and
push
out
adc
insb
push
bound
lea
fcoms
scas
sub
and
push
cmpsb
mov
mov
or
pushf
mov
shl
test
sahf
fnsave
loop
lock
loopne
hlt
or
sub
rolb
mov
std
jb
cwtl
les
aam
pop
jmp
push
int
mov
clc
cmp
xor
sub
or
push
xor
loopne
push
adc
cltd
adc
add
je
loop
mov
xor
add
les
jno
or
flds
xchg
sbb
mov
inc
cwtl
subl
aas
push
out
mov
xor
js
mov
fs
mov
icebp
lea
jp
or
add
add
loop
cli
cs
lcall
inc
lea
pop
test
movsb
add
mov
stos
push
inc
stos
aam
mov
and
lods
mov
push
test
xchg
xchg
lods
xlat
out
pop
xor
stos
mov
sarb
add
imul
dec
xor
xchg
or
movsb
sti
ficompl
andb
out
fimuls
das
push
std
lahf
push
inc
inc
stos
aas
jecxz
into
pop
dec
xchg
mov
fiaddl
je
mov
adc
mov
fs
gs
or
cld
mov
cwtl
add
imul
inc
cmp
ror
mov
or
flds
lock
scas
sub
sub
inc
add
xor
stos
mov
inc
adcb
push
inc
stc
cmpl
fsubs
or
pop
rolb
fisttps
bound
aam
sbb
push
fistl
mov
ljmp
and
or
pusha
inc
in
aam
inc
in
popf
scas
std
jecxz
adc
rol
jle
cmpsl
loopne
ret
and
mov
popf
lret
xchg
push
inc
push
ljmp
mov
jmp
jl
adc
iret
sbb
fbstp
add
add
xchg
orb
mov
sti
mov
insb
pop
sub
mov
cmp
and
and
cltd
dec
xchg
dec
pusha
and
popa
orl
push
nop
lods
dec
nop
fs
mov
outsb
test
je
xchg
inc
outsl
lret
mov
mov
cmp
sbb
dec
mov
std
pop
push
iret
pop
shll
rcrl
sti
pop
stos
jg,pn
bound
iret
subb
loope
push
fmuls
sbb
sbb
test
insb
addr16
adc
rolb
and
out
in
loopne
scas
push
pop
in
fbld
pop
lahf
or
jbe
repz
pusha
sub
insb
lea
in
pushf
jnp
xor
stos
lock
lods
shlb
ljmp
je
fadd
sahf
xchg
pop
aas
outsl
or
mov
sub
inc
mov
into
bound
pop
push
mov
popa
xor
shrb
stos
in
subl
pop
icebp
cs
adc
xchg
outsl
mov
dec
negb
mov
cmpsb
add
push
add
push
mov
sti
subb
add
fidivl
enter
jle
push
push
sbb
mov
jb
cmpsb
into
mov
mov
adc
sarb
out
loope
sub
adc
inc
jns
pop
xorl
or
mul
ret
ljmp
mov
dec
dec
loope
jb
lahf
inc
mov
and
lahf
bound
or
cli
pop
test
jns
idiv
adc
lcall
dec
sti
sub
out
xchg
xchg
sub
xchg
clc
shll
ss
pop
test
mov
in
ret
and
fstl
int3
adc
push
mov
cmp
div
xchg
shrl
adc
fnop
pop
mov
pop
aam
daa
mov
inc
je
cld
sub
or
and
fldcw
loope
fistpll
adc
sub
out
add
jbe
and
dec
int3
mov
xchg
adc
mov
inc
inc
push
cmp
push
pandn
into
mov
mov
sbb
jnp
outsl
jl
dec
cmp
aam
sbb
loope
mov
sub
js
xor
stc
outsl
jne
int3
jp
js
test
jo
or
cmp
dec
mov
movb
push
dec
cld
stc
mov
inc
fcoml
rcrl
js
stos
ret
cmp
push
cmp
pop
divl
cmp
fimull
outsb
fwait
cld
pop
xchg
loope
rcl
jae
loopne
aas
fcoms
movsb
pusha
pusha
push
aam
fldenv
cli
clc
jmp
mov
mov
mull
mov
mov
adc
mov
cmc
les
sbb
cmpsb
stos
sbb
shr
out
flds
repz
inc
sbb
mov
add
jmp
iret
add
movsl
inc
jge
les
add
cmp
pop
mov
daa
fwait
addr16
mov
dec
imul
pop
or
lret
fsubrl
sub
out
es
xchg
ret
outsl
imul
jmp
mov
hlt
jnp
out
daa
sti
dec
mov
in
mov
fcompl
imul
les
mov
sub
xlat
mov
leave
bound
push
out
mov
cwtl
or
scas
jge
mov
adcl
test
jno
mov
xchg
jge
jbe
arpl
adc
sbb
idivl
and
out
or
stos
xchg
xor
mov
dec
jge
test
popf
clc
shrl
in
xor
pop
cs
push
mov
inc
rcrb
mov
inc
jnp
aam
jbe
dec
das
iret
ficomps
cltd
lods
push
sbb
adc
and
xchg
xor
das
fdivr
movsb
cmp
dec
cmp
push
add
ljmp
jo
sbb
push
les
int
dec
in
pop
sub
mov
inc
jns
sbb
in
sub
pop
cwtl
mov
icebp
leave
lock
xchg
lcall
outsl
jbe
aaa
push
mov
inc
pop
cmp
push
das
mov
repnz
push
push
lods
cmp
das
lods
ret
push
pusha
jp
jno
lahf
xor
lds
nop
add
jg
and
insb
jne
pop
mov
jg
aam
out
in
aam
repz
sbb
mov
lea
adc
adc
push
js
add
insb
sbb
fldenv
inc
mov
push
inc
mov
jp
pop
stos
sub
sti
mov
adc
push
mov
mov
pop
mov
pop
xchg
movsl
arpl
inc
pushf
ja
and
movsl
lret
xchg
jnp
cltd
in
sbb
cs
or
js
lods
pop
mov
xchg
dec
rolb
leave
andl
insb
aaa
xlat
add
call
std
jnp
fwait
sbbl
rcr
aad
sbb
jle
jne
pop
jne
sbb
divb
xor
int
dec
dec
out
mov
sbb
in
es
cmp
lea
mov
ss
mov
xor
movsb
dec
mov
mov
fistl
aas
xchg
iret
call
dec
rorl
sti
imul
iret
les
mov
fidivrl
adc
cmp
xchg
and
int3
sbb
xlat
dec
loopne
das
mov
addr16
out
leave
jmp
xor
filds
aaa
and
ds
jl
xchg
in
inc
pop
in
cmp
mov
xor
ja
and
lods
pop
and
push
fucompp
dec
dec
ret
test
fistps
lea
push
push
adc
movsl
or
and
cmp
bound
jp
xor
cmpsb
das
je
mov
xor
inc
push
bound
mov
shll
nop
aam
pop
xor
mov
test
test
cmpsb
sbb
pop
lods
scas
imulb
int
std
movb
pop
adc
cmp
inc
enter
cli
or
jp
inc
mov
and
xchg
out
mov
and
test
jbe,pn
cli
push
mulb
xchg
and
mulb
adcl
pop
cs
arpl
in
pop
loopne
xor
test
jg
mov
jle
dec
ss
rcrl
aas
and
add
enter
enterw
insl
dec
adc
scas
mov
push
xchg
jg
mov
dec
push
pop
adc
inc
or
mov
sub
int3
aaa
imul
dec
mov
outsb
loop
jne
pop
test
and
arpl
jmp
mov
or
lods
cmp
xchg
pop
dec
sub
and
sbb
pop
lahf
bound
js
xchg
test
inc
and
mov
ljmp
dec
test
int3
clc
stos
dec
mov
dec
cli
negb
bound
push
dec
jbe
jbe
xor
fistl
ja
lods
jmp
ss
fwait
jge
fsub
cmc
cmc
fsubr
outsb
out
fisubrl
dec
nop
xchg
cmp
pop
mov
mov
rclb
shl
jno
adc
into
stos
js
pushf
mov
repz
clc
insl
or
clc
stos
iret
movsl
lcall
xchg
pop
lea
dec
add
aas
add
dec
pop
sbb
divb
jne
xchg
icebp
or
orb
sbb
lcall
push
pop
jle
out
cld
push
xchg
adc
cmp
xchg
sarl
das
adc
stos
ds
call
dec
sub
xor
testl
mov
adc
nop
fcoms
fs
xchg
or
ret
mov
add
push
lret
adc
leave
daa
lcall
dec
xlat
mov
ds
addr16
cmp
or
add
stos
xorl
push
shll
add
mov
add
sub
fistps
xor
adc
lea
insl
ret
push
cltd
dec
sub
push
lahf
insb
or
mov
mov
xlat
and
add
fsincos
out
pop
add
adc
lods
stos
and
dec
fimuls
jb
lds
sub
mov
inc
or
ds
mov
out
xor
jp
jle
sysret
fildl
fimull
pusha
bound
repz
icebp
int
adc
sub
mov
cmp
adc
int3
adc
jge
push
xorb
mov
adc
mov
inc
fidivl
add
adc
sbb
testl
insb
js
dec
rolb
icebp
jle
fs
xor
cltd
out
sbb
movsb
shrb
sti
mov
sub
pop
gs
push
subb
push
jl
fwait
mov
out
push
clc
or
popf
stos
xor
mov
jmp
fsubrl
mov
jle
insl
cmp
in
outsl
or
repnz
icebp
adc
mov
paddusw
jne
and
push
lds
adc
in
mov
sbb
sub
subl
jo
nop
xor
leave
mov
jecxz
add
mov
cmc
adc
lods
mov
notl
fucom
xchg
or
lret
mov
adcb
xchg
inc
pusha
dec
mov
add
add
sarb
loop
mov
inc
gs
pop
or
mov
mov
int
ljmp
xchg
scas
lock
xchg
inc
xlat
loopne
cmp
icebp
and
call
mov
dec
sbb
fcoml
mov
pop
rcr
sbb
mov
neg
add
jl
push
mov
lods
dec
pusha
adc
repz
rcll
jp
movb
jmp
aam
dec
xor
jle
jmp
int3
leave
loope
or
add
sub
mov
test
aas
fwait
ljmp
push
push
jae
or
push
push
or
std
test
mov
loope
lock
lods
cli
pop
xlat
ljmp
js
push
mov
xor
ret
mov
loop,pt
inc
ret
rcll
jp
pop
ret
mov
jne
popf
mov
jg
mov
into
jbe
pop
lds
cwtl
test
loopne
pop
lea
xor
sahf
movsl
in
roll
es
loop
test
mov
jge
lds
test
inc
sar
ja
arpl
mov
lret
push
popf
mov
sbb
sbbl
push
push
push
jnp
cmp
pop
push
mov
sbb
dec
mov
mov
mov
mov
and
xchg
xchg
aaa
dec
aam
divb
xlat
pushf
sub
pusha
dec
ds
mov
insb
negl
cmc
xchg
pop
mov
adc
jp
mov
or
ljmp
inc
or
je
addr16
imul
add
call
xchg
push
jne
addr16
push
xchg
jp
pushf
xor
or
jne
nop
addl
xchg
or
adc
fwait
xchg
int
jo
movsb
xlat
jo
jno
stos
or
cs
aad
sbb
shl
push
repnz
data16
jne
cmp
jns
jnp
mov
mov
cld
push
bound
dec
dec
xor
inc
mov
lahf
pop
das
mov
lret
xchg
loop
pop
mov
in
std
pop
dec
das
push
adc
add
shl
mov
mov
data16
rclb
fsubs
mov
pop
jge
and
lcall
insl
ret
xlat
popf
mov
daa
sub
in
out
mov
test
mov
push
and
roll
sbb
sti
test
and
xor
fbld
movsb
fildll
pop
clc
pop
lahf
ljmp
shlb
adc
fsub
fstps
in
out
cmp
je
mov
andnps
and
sbb
adc
push
sbb
push
jge
mov
jne
stos
lods
push
adc
stos
and
enter
imulb
xchg
adc
cmp
out
push
pop
lret
test
pop
sbb
int3
cmp
stc
lods
push
jp
xchg
mov
test
fstl
pop
shl
pop
mov
scas
xor
cld
pop
imul
xor
jmp
imul
jno
std
js
xchg
push
je
mov
cmpsb
sbb
add
mov
in
das
inc
push
stc
cmp
fstps
pop
pop
std
dec
movhps
inc
nop
mov
subb
shrb
lcall
loope
add
mov
leave
mov
loopne
in
test
xlat
dec
repz
or
cmp
adc
out
jnp
sub
fabs
icebp
out
adc
cmp
jecxz
pop
mov
xor
aas
popw
idivl
dec
stos
ret
pop
pop
mov
lret
mov
call
mov
out
pop
xor
pop
inc
xorl
les
test
push
jae
pop
xlat
sti
xlat
xor
xchg
jle
lock
sar
scas
sub
push
imulb
push
mov
inc
xchg
arpl
mov
mov
mov
decl
push
mov
leave
jle
or
testb
mov
cwtl
cs
xor
pop
or
and
sub
inc
mov
ss
lods
sub
mov
adc
aad
push
jge
loope
andb
hlt
and
cmp
mov
mov
xchg
pop
lds
xchg
mov
setnp
mov
loop
jb
xor
sub
mov
mov
jo
call
xlat
or
jb
js
setae
inc
adc
frstpm(287
popa
add
and
mov
inc
pop
inc
add
pop
les
and
dec
or
clc
leave
in
or
leave
mov
testb
push
insb
pop
rcrb
mov
add
jle
and
mov
test
xchg
outsb
iret
clc
icebp
mov
jns
ljmp
sti
fldl
int3
jge
pop
ljmp
mov
cmp
xor
out
push
fldl
into
das
dec
sub
jb
loop
std
in
std
sahf
test
push
or
setge
cltd
inc
jns
jno
push
xor
shlb
and
lcall
idivb
mov
cmp
cmpsb
and
xchg
popa
xor
dec
cmc
repz
and
hlt
xor
adc
pop
and
cli
or
out
pop
vpacksswb
stos
shrl
mov
leave
pop
jg
mov
dec
out
cmpsb
insl
mov
pop
mov
ret
sarb
jle
stc
ljmp
inc
nop
inc
pop
imul
fwait
sub
lds
xchg
bound
arpl
daa
in
andl
xor
mov
mov
push
dec
jge
mov
leave
jg
loope
or
pop
cwtl
je
enter
xchg
fwait
mov
ljmp
stos
xor
pusha
pop
aad
pop
dec
add
bound
sbb
jb
lods
in
jmp
xchg
adc
fdivrs
stos
xor
leave
inc
lret
dec
out
dec
mov
mov
arpl
xchg
hlt
add
icebp
rorl
pop
push
in
dec
imull
lods
cmc
push
dec
and
pusha
mov
sbb
jb
iret
xorl
sbb
pop
stc
fbld
push
xchg
push
xlat
jmp
push
cmp
mov
int
dec
loop
sub
xor
pop
dec
push
pop
or
xchg
sub
lahf
add
mov
fucomi
lret
sbb
insb
xchg
loopne,pt
cmc
ja
hlt
xchg
cli
pusha
mov
in
cli
scas
push
repnz
imul
inc
xor
sbb
push
out
mov
hlt
movsl
jbe
cmpb
xor
bound
mov
add
mov
lock
jp
lods
lds
lcall
jge
nop
aam
mov
ds
xchg
stos
push
inc
lcall
mov
jb
jns
pop
out
or
aaa
sbb
adc
scas
inc
gs
or
mov
cwtl
lea
pop
sub
ror
mov
arpl
push
lods
push
adcb
inc
inc
sbb
jne
test
xchg
add
es
mov
push
sbb
test
pop
pop
hlt
mov
lods
jbe
das
lock
cltd
jge
es
sbb
adc
mov
mov
sub
or
xchg
sub
push
daa
dec
push
cld
mov
sbb
mov
or
cli
mov
pop
sarl
ret
fimuls
je
pop
xchg
mov
xor
clc
dec
popf
sbb
xor
pusha
sbbb
sarb
mov
push
and
push
aaa
stc
mov
ss
mov
push
movsb
xchg
inc
enter
jle
xchg
nop
pop
mov
cli
jle
push
popl
sbb
mov
andl
imul
xor
rorb
aas
jecxz
mov
rcrl
mov
pop
sti
xor
push
mov
inc
dec
mov
jl
inc
imul
jae
xor
add
repnz
mov
sti
or
arpl
lea
mov
xor
push
sbb
cmp
sbb
xchg
adc
mov
aaa
mov
inc
shrb
xchg
divl
cmp
xor
xchg
push
pop
cmp
add
dec
das
xchg
lods
sbb
and
loope
loope
mov
xchg
testl
mov
pop
cmp
push
stos
movsb
jns
sti
jbe
dec
jae
daa
shlb
mov
pop
popa
in
xchg
imul
xchg
repz
pop
jmp
gs
xchg
mov
fldenv
add
fdivrs
jae
dec
icebp
lock
cmpsb
dec
fs
pushf
jg
xchg
sub
jno
xchg
lods
add
aaa
dec
or
out
jns
pop
xor
sbb
mov
fistpll
push
out
mov
pop
ret
sbb
jmp
dec
cmpsl
addr16
andb
rclb
mov
xchg
inc
dec
test
adc
sub
stc
pusha
push
and
jns
jecxz
jbe
or
fwait
mov
sahf
pop
mov
push
iret
inc
es
aaa
movsl
stos
xor
and
inc
pop
test
mov
arpl
adc
daa
bnd
into
insb
or
outsl
jno
daa
sti
push
adc
mov
fisttpl
pop
orl
pop
repz
je
cmp
jae
mov
sbb
pop
xor
mov
mov
push
subb
push
add
call
push
std
jmp
scas
push
push
movsb
jne
ds
sub
jns
hlt
mov
adc
fwait
jge
decl
lahf
pushf
fimull
cld
push
cmp
mov
sub
fldt
sahf
pusha
xchg
loope
or
jp
mov
movlps
xor
repnz
mov
mov
in
pop
test
pop
out
xor
and
sbb
sub
mov
xchg
nop
xor
mov
enter
mov
int
mov
shl
mov
dec
clc
in
fcmovne
mov
xchg
std
adc
and
mov
sub
add
cld
xlat
pop
sbb
mov
or
pop
or
dec
jae
movsl
inc
sbb
dec
xchg
ret
mov
xchg
cmc
aam
jecxz
push
and
shrb
cmc
add
mov
xchg
divl
cmp
or
jmp
inc
jno
mov
inc
push
mov
in
lahf
xor
ret
mov
lock
lods
movsl
jp
and
sti
clc
cmp
xor
shlb
mov
add
xchg
add
sbb
hlt
cmp
jo
push
push
cmp
int
jno
pop
mov
fs
outsl
inc
xchg
inc
iret
out
xor
xorl
js
inc
outsb
loope
dec
push
popa
and
xor
fiadds
xor
imul
dec
jg
mov
sbb
pop
fnstenv
fwait
sbb
jecxz
std
and
das
xchg
inc
sahf
push
int
xor
addr16
xor
mov
xor
jae
sub
inc
xchg
jge
adc
or
mov
jmp
push
nop
and
jmp
test
adc
fldl
arpl
mov
xchg
lock
pop
dec
inc
data16
xor
sahf
mov
clc
xchg
je
leave
in
xor
push
sbbl
in
xchg
es
xchg
or
test
movsl
stc
daa
lods
sbb
inc
mov
movsb
sbb
stc
fisubrl
jbe
jno
and
loopne
and
in
mov
lret
mov
xor
je
cmpsl
mov
dec
jno
das
leave
lcall
lea
jbe
jge
psrlq
xor
cwtl
sub
iret
mov
adc
scas
dec
add
sub
fcoml
daa
les
inc
and
sbb
popa
aam
repz
bound
inc
push
imul
sub
addl
cmp
stc
cmp
push
mov
xchg
xor
pop
rcl
popa
pusha
push
pop
push
stc
popa
es
push
sub
lods
pop
push
ja
mov
add
sub
sbb
mov
push
add
adc
push
nop
lock
lods
sub
aaa
cli
and
negl
xchg
ror
aad
jnp
add
push
ds
arpl
in
jne
ret
mov
adc
inc
add
in
pop
lock
clc
mov
push
ss
xchg
outsl
int3
dec
or
push
mov
cld
cmpsb
lcall
test
gs
jo
popf
add
cmp
ficompl
mov
dec
adc
pusha
pop
stos
adc
adc
xchg
mov
stos
test
iret
sarb
outsl
dec
add
loopne
push
adc
and
ds
jecxz
bound
xor
push
lock
jle
fcoml
pop
dec
sub
lret
pop
and
and
push
xchg
cs
jns
dec
mov
sbb
add
jle
ja
frstor
mov
dec
mov
xchg
or
nop
cmp
dec
sub
je
adc
sbb
je
loop
shr
jle
test
push
lds
inc
mov
fsubrp
mov
data16
xor
std
stc
add
cmp
inc
cmp
mov
mov
mov
incb
adc
pop
js
jae
xchg
movsb
xchg
notl
es
imul
ficoms
or
or
inc
pop
rolb
push
roll
cltd
pushf
aad
es
stos
sbb
xor
jo,pn
cltd
pop
dec
imul
aad
lcall
inc
sub
out
test
daa
out
inc
in
and
mov
xchg
dec
cwtl
jl
std
xor
jmp
mov
ss
push
or
stos
mov
xor
int
pop
cli
mov
or
clc
shrb
cmp
pop
add
clc
in
nop
adc
fdivl
cmp
jl
mov
iret
pop
out
pop
inc
aas
inc
stos
bound
sub
fdivrs
mov
jno
sbb
incl
push
shlb
dec
jmp
insb
test
add
xor
mov
inc
xor
mov
xor
xchg
gs
xchg
pop
aas
dec
xor
push
xor
enter
loop
cmp
sbb
daa
cltd
mov
in
cmp
xchg
rolb
cltd
shlb
inc
xor
inc
out
pop
xor
or
mov
mov
lcall
scas
std
test
push
repz
data16
mov
jp
pop
add
xchg
inc
jno
daa
icebp
mov
push
xor
sahf
mov
jle
arpl
dec
popa
jbe
push
pusha
inc
pop
add
inc
ret
mov
mov
cs
leave
cwtl
and
inc
fsubs
mov
lods
xchg
cltd
mov
sbb
lcall
lahf
int
sbb
add
xchg
movb
and
cmp
es
fisubs
mov
push
push
mov
sbb
call
mov
subl
pop
sub
pop
add
jno
adc
cmpsl
pop
js
stos
sub
test
pushl
js
push
ret
aas
lret
insb
pop
and
call
rcll
icebp
outsl
popf
in
int
loop
xor
mov
mov
add
bound
icebp
sahf
mov
dec
mov
lahf
sbb
loope
lock
mov
loop
jns
cmc
cmp
add
arpl
inc
in
arpl
mov
jle
arpl
cmpsb
mov
sbb
add
mov
inc
sub
push
dec
mov
out
ds
inc
pop
inc
rcrb
int
inc
and
arpl
inc
adc
out
shrb
jmp
mov
jb
inc
or
movsb
cmpsl
mov
sbb
test
cmp
lret
pop
mov
and
in
pop
push
inc
jmp
popf
cmpsb
cmpsl
ror
mov
imul
nop
stc
cmp
je
pop
into
daa
lock
lahf
push
push
lret
shll
add
mov
scas
jmp
stos
push
arpl
mov
test
add
push
mov
push
jb
push
cmpsb
jne
out
xchg
shlb
out
orl
add
jo
leave
rcrl
and
pusha
add
aaa
cwtl
mov
sahf
inc
lock
add
imul
or
cmc
push
adc
jge
setno
pop
sbb
pusha
push
xchg
test
or
push
push
sbb
dec
leave
mov
hlt
call
cmp
test
mov
std
xchg
call
loope
ds
insl
imul
jge
mov
lcall
es
or
xchg
loope
and
ret
daa
incb
dec
jb
mov
gs
and
popa
push
cltd
or
sub
mov
mov
push
mov
or
subb
inc
in
mov
rcl
jl
pop
pop
ret
mov
imull
pop
ret
dec
pop
outsb
bound
popa
aaa
arpl
movsl
stos
ljmp
push
xor
insb
sub
popa
lods
dec
jmp
push
mov
inc
add
jo
popf
bound
daa
out
jmp
lea
je
adc
mov
fildl
test
ds
imul
rep
xchg
or
out
jge
mov
cmp
jno
sbb
out
sbb
shll
mov
push
jae
sub
inc
insb
sbb
mov
mov
dec
psubusb
mov
aam
jae
outsb
mov
ss
gs
inc
icebp
push
adc
jne
adc
cld
sbb
loop
push
lret
xlat
das
ret
xor
fisttps
hlt
sbb
adc
fs
idivl
jnp
xchg
iret
fnstsw
insb
mov
mov
movsl
pop
cld
arpl
js
inc
in
in
leave
stos
pusha
pop
rcrb
lock
pop
inc
adc
pushl
sub
jne
mov
mov
mov
sub
mov
je
test
lods
out
adc
int
loopne
lcall
sub
adc
ret
gs
out
jge
repnz
gs
push
in
sub
push
add
cmp
fstl
push
fwait
mov
ror
aaa
or
out
sahf
jmp
sub
mov
fs
cwtl
push
and
pop
std
ds
jecxz
add
insb
pop
or
ds
or
xlat
lods
int
add
rclb
jb
push
xor
xchg
test
int3
cmpsb
iret
test
sbb
mov
and
dec
jbe
mov
jmp
inc
and
lods
pop
into
push
adc
je
mov
ljmp
xchg
mov
pop
sub
ss
sub
lret
das
xchg
mov
xor
pop
test
pop
shrb
mov
shll
shll
mov
pop
sub
xchg
xor
cmp
cmpsb
pop
and
incb
mov
mov
fwait
data16
mov
scas
xchg
ja
mov
mov
add
stc
xor
jp
sub
test
fldcw
jo
xchg
pusha
rorb
push
subl
or
mov
iret
mov
mov
mov
ss
mov
add
sbb
loope
les
dec
ja
pop
das
cli
int
loope
or
cmp
jmp
push
scas
testb
aaa
inc
out
ja
lahf
pop
pop
psubq
mov
xorl
js
adc
adc
shll
movsl
repnz
call
inc
sbb
sbb
adc
clc
xchg
jp
mov
out
ret
push
repz
adc
sub
std
xchg
lock
push
pop
mov
sahf
adc
inc
inc
enter
nop
add
addl
cltd
aam
add
mov
xchg
inc
mov
jo
mov
ret
adc
add
pop
insb
sub
mov
arpl
loopne
jg
pop
lcall
pop
cli
icebp
out
fisubl
adc
inc
test
jmp
mov
js
add
mov
cmp
cmovle
jge
cmp
mov
int3
aam
xor
rolb
inc
push
cmpsb
sub
ja
movsb
xchg
sahf
sub
dec
xor
test
out
and
xor
adc
arpl
lods
push
test
stos
mov
sarl
into
mov
jmp
mov
push
or
cmp
inc
adc
mov
adc
dec
jns
test
js
in
out
jge
testb
cmp
push
lea
mov
mov
rorb
repz
fs
mov
pop
int
adc
mov
icebp
cld
and
idiv
scas
pop
sbb
loopne
mov
xor
sub
aam
repnz
enter
loope
mov
outsl
push
xchg
xor
std
cmp
test
outsl
mov
sbb
push
cwtl
rcrb
orl
adc
movsb
in
pop
outsb
out
add
jmp
sti
ret
sbb
dec
cmc
ret
inc
jae
movsb
das
out
arpl
aam
xor
fsubs
cmp
cmpsb
aaa
cmc
gs
xchg
fcomps
lock
xchg
fadd
pop
stos
leave
pop
test
popa
into
inc
xchg
xchg
hlt
add
fnstenv
imul
pop
mov
sahf
into
pop
push
ljmp
mov
xchg
jo
sbb
out
roll
sbb
inc
lahf
sti
cmp
xchg
jge
ret
push
imul
mov
lret
insb
in
pop
sub
xchg
int3
cs
orb
jp
add
sbb
cwtl
movsl
ds
dec
jnp
jmp
rcrb
sti
test
subb
sub
and
inc
test
pop
dec
test
and
inc
mov
cs
cmpsl
push
ds
jecxz
test
inc
ffree
and
push
xorl
dec
push
out
rcrl
outsb
mov
pop
sub
mov
cmc
shll
or
dec
insl
movsb
loop
loop
pushf
or
mov
addr16
out
test
daa
push
or
xlat
pop
cmp
sahf
fadds
sti
sbb
sub
pop
bnd
add
outsb
movsb
pop
int3
jg
add
lock
cmc
mov
mov
or
icebp
adc
data16
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
int3
insb
stos
jo
nop
loop
insl
fwait
divb
int3
stc
mov
lods
lret
in
dec
dec
xchg
imul
outsl
ja
stos
push
dec
bound
sbb
adc
sub
jae
cmpsl
mov
mov
jp
jg
pop
shl
mov
mov
roll
dec
repz
sarb
stos
lcall
xor
inc
out
adc
repz
push
or
push
loope
jae
lods
adc
push
jnp
jl
cmp
test
lahf
pop
add
push
iret
or
ret
fistpll
dec
xor
xor
inc
push
bound
aad
ret
inc
mov
mov
mov
iret
cs
inc
dec
aas
pop
cs
jge
pop
fcmovnb
pop
js
cmp
test
fidivs
fisttpll
cmp
inc
data16
sbb
jmp
dec
pushf
outsb
inc
sub
cmp
popa
jne
in
hlt
sub
lcall
xor
jo
jb
and
cli
cmp
fwait
pop
sarb
lods
test
sbb
lret
aas
dec
and
sub
int3
bound
jo
mov
mov
in
dec
pop
stos
popa
int
mov
adc
loope
xor
ljmp
and
addr16
cmp
imul
mov
pop
stos
inc
dec
lods
pop
mov
and
arpl
iret
dec
movsb
inc
rcr
xchg
jo
add
sti
adc
xor
or
in
xchg
rol
clc
push
pop
stc
xchg
movsb
dec
mov
lock
das
repnz
dec
sbb
or
sub
subb
cmp
call
pop
in
imul
cltd
mov
xor
andl
call
mov
arpl
dec
stc
or
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
