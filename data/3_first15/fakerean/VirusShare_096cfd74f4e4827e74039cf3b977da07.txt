sbb
add
mov
dec
pop
fcoms
loopne
xchg
mov
imul
enter
mov
or
stos
mov
dec
pusha
pusha
pop
adc
mov
add
rcr
stos
lcall
loope
ss
add
and
mov
mov
pop
inc
mov
call
arpl
test
leave
inc
lock
add
call
inc
dec
in
xchg
fadds
mov
int
cmpsl
push
repz
icebp
push
fstpt
inc
pop
into
movsl
mov
pop
shlb
xorb
shl
sub
scas
adc
sub
or
mov
mov
icebp
or
push
and
xchg
bound
lds
ds
loope
or
xchg
stc
shl
inc
adc
cmpsl
test
dec
mov
and
jnp
xor
ficomps
xchg
movsl
sub
dec
inc
mov
mov
addr16
arpl
cwtl
aaa
jo
dec
inc
dec
pop
mov
loope
fistpll
xlat
imul
test
jl
push
xor
lcall
enter
pop
mov
mov
add
push
inc
ret
cmp
dec
jp
mov
jno
lret
adc
push
outsb
xrelease
xor
loope
lcall
insl
dec
xor
leave
cld
mov
cs
sarb
pop
push
xchg
cmpl
mov
push
jb
aaa
jb
inc
ret
mov
shll
mov
shll
dec
outsl
les
dec
push
data16
mov
xchg
sbb
aam
push
mov
bound
adc
inc
push
cltd
jge
xchg
and
cmpsb
mov
jp
mov
and
insb
sub
xchg
sahf
movsl
test
push
xchg
and
jnp
sti
ret
add
scas
inc
pop
sub
adc
mov
add
rcll
push
push
aad
stos
call
adc
sbb
and
push
fsubrs
lods
mov
out
movsb
fs
mov
addl
ficoms
test
rcrb
icebp
pcmpeqd
addr16
cmp
adc
cld
mov
pop
popa
ror
dec
mov
pop
sarb
les
lock
clc
pop
mov
mov
pushf
pop
cmp
xchg
and
pop
sahf
rcll
aas
and
add
js
fmul
into
fs
inc
out
pop
mov
mov
cmp
sahf
sub
pop
jne
aad
mov
xor
test
mov
stos
insl
arpl
iret
frstor
daa
mov
mov
mov
adc
pop
inc
cwtl
mov
jl
mov
xlat
incb
pextrw
nop
jmp
jmp
and
sbb
jp
lea
addl
subb
scas
ds
mov
out
test
jae
xchg
pop
cmp
add
pop
inc
dec
adc
pop
ljmp
mov
and
push
fwait
push
jmp
pop
inc
inc
jns
sub
dec
sar
xchg
sbb
int
pusha
inc
add
push
fucom
int
stos
lea
dec
das
lcall
loop
subb
mov
das
push
sti
mov
in
push
xchg
repz
mov
ret
rclb
pavgw
or
in
je
stc
ja
stc
dec
addr16
xchg
sub
or
push
pop
push
cmpb
icebp
xchg
imul
inc
sarb
int3
out
pop
mov
dec
sbb
and
sbb
bound
push
add
inc
adc
inc
cld
loope
les
cli
push
aam
or
sub
mov
pop
addr16
repz
add
sub
lods
mov
push
andps
out
imul
cmp
cs
daa
xabort
call
jb
push
fisttpl
and
mov
xor
mov
mov
not
sahf
pop
loop
mov
xchg
insb
inc
jbe
push
pop
sub
xor
adc
mov
mov
loope
xor
ret
fcompl
sbb
mov
push
out
div
push
hlt
xor
data16
jb
xchg
sbb
lahf
xchg
xchg
stos
dec
dec
jmp
aam
mov
fsubrs
test
dec
subb
xor
in
jl
dec
repnz
push
cmc
mov
loopne
sbb
or
dec
push
pop
enter
jbe
out
test
jbe
scas
aad
cmp
or
fisttps
jge
fisubl
icebp
clc
xchg
pusha
push
cmp
mov
icebp
testb
push
jle
dec
loop
loopne
loope
xor
and
out
jmp
pop
jge
pop
or
setns
ds
sbb
mov
push
and
movsb
pop
ds
sbb
jne
sbb
stos
pop
test
mov
and
dec
out
push
mov
cmpsl
mov
adc
adc
sarb
mov
sub
arpl
outsl
xor
out
stc
aam
jb
and
sub
ds
and
jo
sbb
sbb
pusha
add
mov
add
cltd
ret
movsb
mov
loop
jbe
call
rclb
sub
or
in
das
push
leave
push
insl
sbb
ja
push
fists
xor
inc
daa
jbe
leave
mov
loope
popl
roll
mov
pusha
cltd
fs
cltd
ret
push
insb
xchg
push
repnz
sub
push
inc
xor
stos
shlb
cmp
push
jge
inc
scas
sub
fisttpll
cmp
mov
fwait
or
push
xchg
sahf
cmp
jle
pop
sub
jge
jmp
push
jl
test
imul
mov
sbb
sub
jge
imul
adc
push
outsb
cmp
inc
loop
pop
inc
pop
inc
add
arpl
sti
sub
xchg
js
xor
or
mov
xchg
dec
dec
and
enter
ss
lock
out
icebp
bound
dec
les
inc
push
in
push
in
mov
or
lods
sub
pushf
jmp
push
stos
int3
push
stc
aaa
cld
scas
pop
fdivrp
fwait
sbb
imul
scas
jp
jecxz
push
mov
pop
sub
dec
sub
shll
call
inc
daa
lds
sahf
lods
pop
pop
and
jne
pop
mov
int
aas
pop
popf
lea
and
cmpb
ja
fcmovbe
jl
imul
aad
mov
outsb
lret
inc
xor
cmp
in
lret
mov
or
or
adc
movsl
std
ja
rorl
sub
lret
sbb
mov
lahf
mov
cmp
mov
sbbb
cmpsl
cmpsl
ret
cli
push
and
pushl
repnz
test
ss
pop
ret
inc
jecxz
jmp
jbe
sbb
jno
adc
insl
jnp
xor
dec
cmpsb
jge
add
sub
hlt
add
setle
xchg
movsb
inc
in
mov
test
dec
dec
addl
mov
aas
aad
sbb
gs
sub
dec
pushf
xor
enter
mov
dec
lock
xchg
in
inc
lds
sub
xor
aam
jo
aaa
inc
and
test
xor
aad
js
mov
jne
xlat
out
loopne
xchg
xchg
les
aam
xchg
lock
aad
dec
stc
out
pop
or
sub
push
jae
mov
and
adc
in
pop
mov
std
int
adc
imull
push
and
out
shrb
dec
lcall
cmp
mov
int3
test
shl
aaa
dec
inc
sub
cmc
or
gs
sbb
out
push
push
out
imul
push
sub
or
push
sahf
dec
movsl
iret
subl
mov
xlat
or
addl
xor
sub
sbb
into
int
mov
inc
mov
xchg
add
inc
cwtl
inc
push
fsubrs
jbe
mov
and
add
pop
fcoml
out
scas
push
or
pushf
test
adc
pushf
push
jae
pop
push
jge
mov
sahf
add
adc
adc
mov
and
insl
push
fdivs
mov
pop
jmp
pusha
dec
fwait
mov
mov
idivb
sbb
insb
sub
mov
dec
dec
mov
out
push
xlat
push
dec
cmc
push
stos
inc
mov
push
mov
imul
inc
mov
inc
shlb
or
mov
subl
daa
testl
das
xchg
ljmp
stc
jmp
xchg
loope
dec
lock
mov
fs
in
or
repnz
sub
jo
fisttps
test
add
test
pop
jae
jl
hlt
and
shr
pushf
icebp
mov
sub
jmp
enter
cmp
cld
push
cli
outsl
scas
adc
jp
xor
jl,pn
adc
lea
iret
sub
push
sbb
cli
sti
inc
in
adc
jge
jle
dec
jecxz
cmpb
sub
cmpsb
clc
add
cmp
mov
pop
inc
jecxz
aaa
jne
mov
fs
jge
mov
movsb
loopne
dec
sub
cmp
clc
les
icebp
les
pop
pop
dec
ficomps
orl
pop
ja
pusha
lret
mov
addr16
std
and
shrb
cmp
je
and
call
scas
fucom
cmpsb
cmp
or
lock
test
fmull
jne
sub
xchg
sti
or
mov
and
and
call
mov
addl
ja
cmpsl
pushf
cmp
das
hlt
std
jge
fdiv
shl
fwait
lcall
aaa
psllw
xchg
and
mov
pop
mov
mov
aas
xchg
cltd
inc
nop
mov
jp
push
mov
in
jecxz
stc
insb
int3
lods
stos
fs
cmp
iret
cmp
or
cld
push
inc
xor
int
sbb
jl
push
jne
js
std
adc
mov
ljmp
sub
push
ljmp
out
sbb
xlat
adc
jp
popa
xchg
xchg
outsb
fldt
adc
lea
xor
icebp
inc
adc
pop
scas
loopne
mov
jb
lds
fidivl
xchg
incl
out
and
bound
data16
std
scas
cwtl
shl
gs
add
enter
movsl
pushf
dec
mov
ret
cwtl
int3
in
pushf
push
pop
push
or
leave
and
div
sbb
rep
rclb
dec
repz
pop
int3
pop
cli
sbb
lea
dec
fdivrl
rcll
jge
jg
out
lock
or
mov
arpl
xchg
xchg
cmpsb
out
xchg
into
mov
push
insb
push
xchg
insl
mov
push
bound
mov
mov
jae
push
pop
pop
jae
imul
adc
inc
lock
sbb
cmpsb
push
lret
leave
int
add
fwait
cmp
call
xlat
jmp
mov
and
mov
sub
adc
inc
enter
fwait
xor
movsb
imul
xor
xor
push
test
inc
and
ds
sub
pop
or
mov
loope
dec
xchg
sbb
pop
xor
pop
shlb
int3
xlat
jbe
jo
fists
imul
mov
in
lea
push
rolb
pop
and
rorb
addb
fistps
and
inc
movsb
pop
sbb
scas
cli
fildl
and
mov
outsl
or
push
das
jnp
ret
js
gs
addr16
leave
jmp
lret
xor
jmp
je
pop
dec
mov
add
pusha
mov
mov
fs
in
lcall
pop
cli
inc
and
jb
or
xlat
addl
pop
mov
sarb
mov
repnz
orb
mov
fsubrs
call
push
hlt
stos
cs
sub
filds
fnstsw
fs
sbb
pop
pop
shlb
sbb
cs
adc
jl
xchg
dec
mov
mov
fs
pusha
xor
jb
fwait
push
das
rol
rclb
pop
dec
xchg
lods
fwait
ret
xorb
mov
cs
adc
dec
lret
sbb
test
adc
outsl
rorl
mov
sti
lods
mov
jg
rcr
icebp
fdivs
fdivp
cltd
pop
sarb
aad
sub
jg
test
lcall
inc
sub
mov
es
and
xchg
insb
dec
stos
pop
aaa
scas
inc
out
cmp
xchg
mov
test
out
enter
xchg
aam
jb
test
test
mov
push
xchg
fcmovnu
xor
ficompl
xchg
cmp
push
fildl
adc
leave
shll
call
arpl
dec
push
pop
divl
xor
enter
in
into
mov
fcmovbe
push
sarl
mov
scas
or
lret
pop
not
cmpsl
out
xchg
cmpsl
add
push
adc
push
testl
add
xor
jnp
lret
sbb
bound
mov
add
jns
subb
add
sbb
imul
mov
rorl
fs
outsl
cmpsl
imul
inc
mov
movsb
cmp
fwait
outsb
movsb
mov
mov
daa
test
push
das
in
push
mov
xor
xchg
mov
mov
loopne
pop
pop
out
lcall
push
mov
push
xchg
psubusb
outsl
sub
xchg
xor
out
push
testl
mov
repnz
xlat
test
fisubrs
xchg
xchg
push
lret
mov
stos
loopne
mov
add
xchg
ljmp
ja
dec
clc
sbb
jl
inc
inc
mov
call
iret
xchg
pop
movsb
add
cmp
iret
adc
fmuls
movl
or
test
ja
fimull
ds
mov
jbe
mov
pushf
adc
inc
lods
repz
bnd
je
xorb
mov
cmp
test
shl
or
ljmp
jbe
lcall
xor
mov
push
ss
rclb
fcompl
and
fildl
lea
jno
adcl
add
aaa
in
lods
das
imulb
imul
daa
ljmp
stc
sub
loop
sbb
stc
xorb
test
xor
rorb
mov
imul
dec
add
mov
cwtl
out
pop
ds
inc
fimuls
loop
cmp
stos
jmp
jbe
add
loop
repz
in
ljmp
sbb
dec
frstor
lcall
lods
pop
je
dec
popf
dec
mov
pop
stc
xchg
sbb
cmp
popa
insb
cwtl
fistpll
addr16
add
js
sbb
jnp
mov
cmp
inc
jg
mov
push
fdivs
sbb
adc
sub
je
pop
jmp
add
add
cs
aas
mov
sub
idivl
pop
fldt
clc
mov
inc
scas
rol
push
test
enter
mov
pop
sbb
jae
int
dec
dec
dec
push
les
jno
mov
dec
gs
or
out
arpl
push
orb
ljmp
jb
test
cld
stc
nop
dec
jo
sahf
scas
ret
add
add
sbb
push
out
mov
cmpsl
sbbw
adc
pop
jbe
adc
add
sub
mov
push
lahf
dec
adc
mov
cmp
sti
frstor
add
sbb
rcrb
stos
sbb
sbb
and
or
adc
xchg
or
and
out
leave
mov
mov
je
push
xchg
test
push
xor
inc
mov
scas
or
adcb
inc
push
out
xchg
fsubs
xchg
arpl
mov
ljmp
inc
xchg
insb
jbe
orb
and
and
mov
lahf
push
xor
enter
xchg
add
dec
pop
es
dec
mov
cmp
add
or
adc
push
pop
jnp
or
add
loope
data16
addr16
insl
aas
loopne
push
push
add
push
popf
pop
andb
enter
mov
inc
ds
gs
push
pop
mull
in
mov
push
mov
push
add
clc
dec
add
cmp
outsb
shl
inc
popa
test
inc
pop
outsl
cmp
lea
adc
imul
fstl
pop
pop
xchg
mov
push
mov
sub
push
lcall
idivl
jae
mov
mov
dec
adc
or
stos
ss
lock
shlb
adc
sbb
rorb
sti
int3
sub
pop
ja
mov
pop
std
lret
adc
add
mov
sbb
stc
std
test
pop
fisubrl
pop
ret
sub
fs
mov
sbb
leave
lock
cmp
jbe
cbtw
ss
push
rep
mov
pop
pop
and
jnp
fsubs
fsts
xchg
bound
in
fwait
ret
jo
xchg
mov
cwtl
lods
sti
dec
push
mov
cmp
jno
xchg
sub
bound
out
shlb
cltd
jo
inc
pop
push
adc
outsb
and
adc
cmpb
mov
xor
lock
je
fdivrl
aad
and
ljmp
push
frstor
mov
mov
cli
repz
or
scas
inc
sub
hlt
les
xorb
sbb
cbtw
mov
pushf
ljmp
jp
leave
cmp
jnp
icebp
xchg
and
cli
movsb
fmuls
mov
nop
xorl
jmp
sub
dec
call
cmpsb
scas
mov
daa
or
lret
adc
push
mov
inc
out
sub
ficompl
inc
aas
mov
jmp
lret
adc
mov
fdivp
test
jno
add
jne
call
pop
test
mov
add
jb
sahf
cmpsb
sub
or
xlat
fadd
stos
cmc
dec
repz
push
jbe
xor
fimull
jns
xchg
dec
mov
pop
pop
adc
jge
pop
jg
pop
mov
fdivr
jmp
inc
loop
mov
insl
xor
syscall
cmp
xchg
mov
pop
out
jae
cmp
test
xchg
mov
daa
dec
mov
mov
gs
sub
daa
dec
cmp
aam
mov
int
or
subb
and
mov
xor
fnsave
popf
addr16
mov
dec
repnz
jmp
and
jne
sbb
lret
xchg
pop
mov
into
pop
out
gs
or
ret
movsb
adc
into
sbb
sub
movsb
jmp
mov
jg
and
inc
mov
sbb
imul
ljmp
or
negb
stos
or
mov
sub
lret
xchg
xor
mov
ljmp
in
filds
in
cwtl
paddusw
jl
roll
sahf
xor
mov
shrb
jnp
sbb
ss
mov
clc
push
lods
dec
xchg
lds
mov
or
mov
jo
loopne
adc
xchg
loopne
jle
pop
pop
mov
bound
mov
js
stos
jg
ret
test
lea
mov
cmp
out
out
jnp
dec
xor
jmp
jp
daa
es
jle
mov
loop
mov
xchg
out
sub
lcall
imul
addr16
pop
lock
addl
cltd
jle
and
loop
pop
adc
fwait
sbbl
add
out
xor
mov
lcall
dec
clc
dec
imul
cs
mov
mov
sbb
fstpt
les
cld
sub
test
insb
cmp
cltd
call
push
xor
in
nop
mov
sub
jge
rclb
mov
and
mov
repz
idivb
bound
jg
cltd
mov
pop
jbe
mul
or
jecxz
mov
push
and
xchg
addl
ret
sbb
mov
xor
jmp
and
add
popa
addr16
rcll
fmul
xchg
aas
ds
std
xorl
arpl
lock
imul
bsr
mov
enter
jl
inc
pushw
call
mov
xchg
dec
add
sbb
add
sarl
add
pop
inc
not
out
jae
dec
inc
arpl
ja
mov
pusha
mov
repz
xchg
xchg
jb
call
shrl
xchg
and
cmp
inc
cmp
lcall
dec
cwtl
xchg
mov
daa
pop
stc
movsb
or
jge
inc
cwtl
jecxz
cwtl
adc
cwtl
and
mov
in
xchg
lcall
mov
jns
or
dec
movsb
xchg
jo
sti
call
cmpsb
and
ds
stos
in
incl
lret
cltd
loop
inc
push
push
in
mov
repnz
ljmp
push
jo
cltd
fadds
mov
jg
and
sub
xor
mov
ret
mov
test
lea
dec
test
mov
dec
sub
jle
inc
mov
pop
and
pop
lds
cmp
ret
xor
int
mov
cmp
or
xor
out
add
pop
jg
add
test
cmp
adc
adc
imul
add
icebp
push
daa
pop
xchg
movsl
cmpb
mov
clc
je
pop
cmc
jg
rcll
pusha
lods
arpl
push
or
mov
icebp
push
mov
push
push
and
and
dec
sbb
or
dec
clc
fcmovnb
aas
or
loop
add
scas
arpl
inc
pop
lret
mov
ficompl
sbb
xchg
fisttpl
inc
scas
fdivs
lock
pushf
lods
mov
stos
mov
inc
imul
push
xor
movsb
stc
shll
sbb
dec
leave
mov
jle
in
imul
fisubrs
or
add
xor
push
out
je
sub
add
mov
xor
mov
subb
sub
test
in
mov
fdivrs
add
sub
in
push
imul
add
mov
das
mov
leave
push
xlat
cmp
push
lock
lock
test
stos
sbb
push
mov
fwait
es
and
mov
jmp
jo
movb
jmp
and
mov
loop
add
cmpsl
lods
cmp
jne
ficompl
jb
and
aas
cmp
add
int3
and
fdivs
pop
push
xor
adc
and
adc
lret
ret
adc
in
out
sahf
in
loopne
stos
in
outsb
or
inc
fst
loop
pushl
repz
mov
mov
dec
sub
cmp
sarb
roll
je
movb
lret
lods
rolb
dec
movsl
xor
or
and
fcompl
sub
sarl
xlat
fisubs
in
mov
add
xchg
std
and
aam
pop
add
cwtl
dec
sub
pop
int
mov
cmp
aam
les
inc
aad
mov
pop
in
cmp
scas
test
popf
xor
jg
fdivrs
sub
frstor
mov
in
loope
inc
in
mov
arpl
scas
call
loopne
mov
mov
xchg
mov
les
loopne
rclb
cltd
jns
lret
xlat
test
fsubp
add
ss
ja
das
stos
cmpsb
xor
mov
xor
dec
ficomps
les
mov
cmp
ret
xor
xchg
aas
sub
fs
push
je
out
lods
mov
xadd
or
lods
adc
sub
adc
aad
mov
xor
xchg
inc
push
push
jbe
outsb
mov
sub
xor
push
rorb
jo
mov
dec
pop
ret
aam
movsl
mov
xchg
ret
cmp
sarb
hlt
push
repz
mov
and
jmp
pop
rolb
or
mov
cmp
test
inc
dec
mov
out
mov
aaa
pavgb
in
cltd
add
push
or
push
in
mov
jge
negb
sbb
loopne
pusha
ljmp
mov
adc
leave
adc
cmp
and
mov
adc
mov
xchg
dec
inc
and
outsb
mov
pop
fistpll
inc
aad
cli
or
dec
iret
mov
hlt
outsb
fsub
push
icebp
fdivs
add
sub
popf
jle
dec
lss
cmc
dec
push
in
mov
push
mov
lahf
lahf
movsb
int
mov
rclb
mov
mov
fdivl
in
mov
loope
icebp
xchg
and
out
push
data16
dec
mov
cli
adc
imul
clc
push
enter
addr16
sbb
push
mov
dec
arpl
add
xchg
mov
mov
mov
imul
push
stos
cmp
hlt
jg
or
pop
xchg
lret
add
or
push
fs
jo
sahf
and
je
jae
out
and
imul
or
adc
sub
inc
int3
push
in
sub
out
aad
std
push
clc
adc
jnp
aaa
cmpsl
fidivrl
adc
xchg
jge
cs
stc
push
inc
xchg
and
in
flds
mov
cmp
es
mov
adc
jecxz
sbb
in
sub
sbbb
xchg
push
sahf
sti
je
mov
cmpsb
rorb
ret
add
add
xchg
cmpsl
ret
fidivrl
lock
pop
popa
sub
cmpsb
lcall
lcall
lods
cld
jns
xlat
push
jns
inc
mov
cmpb
sbb
and
jbe
iret
test
std
sbb
lds
fisttps
idiv
testl
dec
nop
mov
shrb
fsubs
faddp
cmpsl
xor
loop
push
push
adcl
cmc
sub
fnstenv
mov
and
sti
mov
addr16
test
mov
xchg
insl
push
stos
pop
popf
aaa
adc
inc
hlt
push
fwait
dec
jle
out
xchg
and
out
in
lret
xchg
scas
addb
xchg
std
cmp
jl
dec
xor
pop
mov
nop
inc
rdtsc
pushf
jmp
out
xorb
mov
fadd
jbe
mov
pop
jg
leave
fisttpl
es
sbb
repnz
push
movsl
pop
mov
push
mov
cmp
stos
or
sbb
jb
sbbb
sbbb
popf
clc
mov
imul
stc
xor
pop
adc
popf
movsb
pushf
loope
or
jbe
mov
jbe
or
cmpsb
arpl
icebp
add
xor
sbb
les
hlt
dec
add
pop
mov
jg
and
xor
xchg
fwait
stos
push
inc
add
add
adc
jne
xchg
rcl
mov
test
mov
adc
push
call
in
xlat
mov
push
nop
pop
adc
lret
add
mov
test
lods
popa
das
jp
adc
dec
rcll
mov
xchg
fisubrs
sub
roll
movsl
repnz
ret
lcall
dec
aaa
sub
insl
lret
sarb
dec
movsb
mov
mov
test
lcall
dec
jbe
dec
inc
jge
mov
mov
mov
lcall
add
stc
jl
mov
xor
pop
rcrb
sbb
and
test
aam
clc
pop
ja
enter
data16
cmp
loopne
dec
and
pop
mov
sbb
ljmp
js
mov
pcmpgtd
adc
mov
xchg
xor
gs
cmp
or
sub
lods
push
sbb
data16
fildll
and
sub
add
mov
test
cmp
mov
mov
int3
push
rcl
arpl
sub
dec
in
xchg
movsl
adc
xadd
mov
mov
orl
xchg
adc
rol
inc
ss
dec
add
cmp
xchg
or
ljmp
sbb
or
into
mov
mov
arpl
popa
cmpsb
out
mov
nop
mov
loope
mov
or
movsl
or
imul
into
sub
repnz
lds
push
sub
cmp
xor
loope,pt
outsl
xchg
fmuls
in
cs
fildll
xchg
pusha
pop
pop
addb
ljmp
movsb
xchg
and
fsubl
in
xchg
mov
lret
mov
jae
sarb
sub
mov
clc
stos
out
subb
inc
jbe
ret
fistpl
or
cmp
cld
push
mov
popa
jno
es
cmpl
cmpsb
xor
jbe
adc
mov
int
lret
mov
mov
sub
leave
aaa
cmp
sub
dec
aad
xor
dec
mov
pop
adc
xchg
repz
pop
jb
mov
into
loope
dec
push
xchg
push
lods
loopne
push
lods
adc
mov
movb
xor
imul
or
fidivrl
pop
mov
push
es
mov
mov
leave
xor
out
mov
inc
test
idivb
cmp
jae
pop
pop
xchg
dec
push
test
pop
hlt
out
push
or
jbe
sub
mov
jb
adcb
stos
je
dec
gs
aad
sti
test
js
das
mov
pmullw
sbb
fwait
sti
push
or
add
adc
mov
sub
cmpsl
dec
scas
lret
xor
icebp
mov
iret
mov
adc
cltd
jne
lds
xor
sbb
jne
dec
mov
outsl
das
dec
pushf
pusha
mov
jp
idivl
xchg
cmpsb
jne
xchg
sbb
inc
sarl
roll
aaa
sbb
fs
addr16
inc
mov
movsb
shlb
xlat
jnp
sbbl
gs
dec
jb
rolb
sub
ret
inc
test
clc
aaa
imul
stc
sbb
test
scas
stc
repnz
dec
scas
aam
loopne
stos
negl
les
and
ret
push
loope
inc
add
push
fnsave
dec
pop
xchg
pop
lret
mov
js
es
pusha
nop
insl
les
jge
hlt
jno
outsl
lods
aaa
xchg
lods
jecxz
rcrl
lock
mov
roll
outsl
es
adc
adc
fwait
mov
cld
pop
movsb
jmp
adc
repz
mov
sbb
jecxz
rep
aaa
sbb
cli
imul
mov
add
aaa
push
in
jbe
mov
mov
xchg
pop
insl
negb
data16
in
pop
cmp
mov
fisubrl
adc
and
mov
xlat
push
outsl
mov
push
adc
and
out
lods
ljmp
mov
mov
scas
dec
aas
or
por
mov
jmp
add
mov
lret
jmp
out
pop
inc
shrl
bound
jns
or
xchg
xchg
imul
or
adc
call
add
dec
push
daa
mov
mov
add
rcrl
adc
sbb
repnz
mov
jge
jb
int
jb
clc
inc
mov
stos
testl
enter
lahf
dec
mov
icebp
jno
add
imul
jns
adc
inc
xchg
mov
out
mov
jb
sbb
xchg
ja
cmp
push
mov
inc
cltd
popf
sbb
mov
pop
out
pop
push
divl
xor
or
daa
sub
out
xchg
push
xor
repnz
mov
xchg
scas
les
mov
mov
and
pop
in
jle
pop
outsl
mov
mov
mov
sbb
nop
jmp
push
mov
shlb
xchg
js
sahf
in
push
dec
fisttpl
inc
pusha
outsl
add
outsl
mov
xor
or
sbb
cwtl
mov
pop
lcall
lods
negb
test
or
mov
popf
cmpsb
fwait
push
xor
or
jp
mov
mov
fcmovu
jns
pop
hlt
and
ds
lds
adc
jmp
add
std
and
and
push
dec
push
sub
lret
lea
cmpsb
fstps
ds
push
popa
iret
stc
or
sbb
cmpsb
push
enter
mov
addl
clc
ret
inc
out
pushf
sub
sub
ja
xor
fmull
pop
fcmovnb
sub
sub
cltd
or
stos
xor
cmp
dec
mov
and
mov
sbb
adc
and
inc
test
ret
stc
mov
mov
push
inc
data16
mov
push
call
push
call
test
mov
sbb
mov
aaa
xor
daa
les
pop
mov
xor
fstl
adc
jnp
nop
shll
sbb
mov
sbb
lods
outsb
mov
aam
add
int
mov
add
flds
rol
ja
test
mov
xlat
or
sahf
in
loopne
adc
std
mov
rcll
sbb
sub
sahf
and
outsb
mov
mov
inc
inc
icebp
push
and
sbb
ljmp
inc
iret
cwtl
cmc
pop
jbe
jp
in
fadd
push
xchg
sbb
jmp
add
push
jmp
or
lcall
test
lahf
testl
pop
lea
cmp
and
pop
pop
mov
jns
lea
loop
repnz
fwait
mov
ret
mov
xlat
xor
sub
mov
enter
mov
mov
outsb
stos
test
pusha
mov
push
sbb
xor
mov
scas
pop
xchg
dec
jge
xchg
sub
lcall
inc
jo
in
push
add
fstpt
mov
nop
add
sbb
sti
mov
mov
cs
push
out
idiv
and
sub
jno
rcll
jno
mov
stos
aam
cwtl
adc
lods
add
and
cwtl
xchg
mov
jo
aad
mov
jmp
and
popa
out
js
rol
cwtl
inc
shll
add
push
sbb
adc
nop
dec
icebp
popa
stc
jmp
and
pop
jecxz
cmp
cmp
arpl
ret
push
lcall
sbb
push
xor
daa
mov
pushl
scas
push
fs
packuswb
das
mov
or
dec
jl
aad
nop
das
out
into
inc
pop
add
jne
mov
pop
lcall
rorl
mov
adc
lret
cwtl
subl
adc
jmp
sub
dec
pusha
and
std
scas
mov
jo
sub
out
cwtl
mov
mov
adc
pop
int
ss
mov
fs
out
and
dec
fstl
loopne
dec
in
cmpb
mov
test
dec
xchg
pop
jl
repnz
aas
fs
pop
push
stos
jbe
sbb
insl
dec
xchg
cmpsb
sub
sub
mov
and
cmp
mulb
push
adc
imul
fidivl
imul
cmc
jge
movsb
jns
mov
or
xchg
stc
aaa
pop
mov
stc
mov
or
mov
add
and
cmp
mov
inc
in
cmp
iret
jae
mov
stos
dec
xchg
adc
fsts
test
dec
int
dec
cmp
pop
sub
dec
stos
adc
pop
mov
mov
jg
xchg
jge
mov
jae
cltd
sub
iret
rcrb
xlat
adc
aaa
inc
out
dec
push
cmp
pop
lahf
pop
jp
push
leave
adc
shr
out
and
push
aaa
stos
inc
stos
sub
inc
xchg
adc
roll
testl
repz
dec
xchg
inc
mov
ds
or
sbb
mov
mov
add
cmp
push
in
jmp
push
mov
adc
cld
sub
stc
xor
xchg
mov
xor
rorl
in
xor
fildll
imul
jo
in
pop
test
cvtpi2ps
push
cmp
out
int
sub
xchg
dec
push
jmp
fcmovnu
lds
add
adc
xchg
addl
mov
add
inc
out
pop
test
pop
mov
into
jo
and
repz
loop
cmp
adc
xor
out
outsl
cmpsl
pusha
movsl
ljmp
push
cld
les
stos
addb
cs
xlat
mov
pop
pop
add
aad
xlat
jg
daa
xor
cmp
ret
jecxz
add
popf
cli
mov
leave
jmp
pop
mov
mov
xor
or
outsl
aas
sti
pushf
cmp
ficoms
and
push
aam
sub
xorl
js
sahf
rorb
pop
shrb
xor
mov
pop
push
in
ret
push
insb
push
jo
sub
cld
lret
test
mov
hlt
out
mov
enter
pop
rorl
enter
push
test
aam
shrb
sub
inc
jp
aas
incb
pop
sbb
jg
xchg
mov
cli
adc
jp
std
test
mov
js
cmp
test
mov
adc
testl
ficompl
mov
bound
imul
fdivs
call
xchg
mov
scas
lcall
add
sbb
mov
xor
je
or
adc
icebp
lret
scas
lds
scas
adc
cld
sti
sub
or
sbb
into
lock
fwait
pop
mov
and
mov
and
xchg
sub
outsl
ss
ss
lret
daa
lret
mov
stos
xchg
adc
dec
xor
pop
mov
js
cltd
outsb
cmpsl
mov
cmp
shrl
jae
test
push
rcll
fdiv
subb
add
jmp
and
test
inc
pop
xchg
push
adc
mov
pop
and
ljmp
les
mov
out
insb
imul
xor
mov
pop
loope
push
jle
jle
dec
sbb
lret
sub
add
int3
xchg
daa
cltd
lret
test
ja
pop
sbb
and
sbb
jnp
cltd
movsl
cmpsl
xor
cmp
jle
push
sub
dec
sbb
mov
cmp
push
mov
adc
cmpsb
fstpl
fcoml
ss
adc
xor
xor
mov
imul
mov
or
cltd
mov
dec
shl
push
adc
test
adc
mov
das
shr
pop
std
mov
add
scas
dec
sbb
add
sub
rorl
subb
loopne
aam
out
or
and
dec
into
scas
out
push
in
in
ret
xor
mov
mull
ds
push
mov
mov
push
sbb
repnz
pop
test
cmp
pusha
out
aad
repz
into
xor
inc
lds
aas
daa
call
arpl
lock
insb
push
out
add
imul
int
push
dec
add
jo
adc
mov
out
push
dec
aaa
in
rdpmc
outsl
and
and
test
add
sbb
cld
test
xor
pop
xor
add
push
fidivrs
adc
test
shlb
clc
mov
dec
gs
daa
rorl
pop
jns
es
sbb
sub
or
sbb
ret
dec
inc
add
dec
jg
rolb
or
mov
push
int
shl
push
cld
jecxz
jge
inc
nop
sti
jmp
inc
clc
jnp
and
mov
in
cmpsb
mov
and
cmp
cmp
jno
inc
jecxz
mov
repz
in
das
lods
pop
popf
and
sub
ret
and
lods
cmp
dec
mov
dec
mov
addl
sahf
loop
das
push
jle
movsb
pop
inc
jb
cwtl
call
jecxz
mov
add
and
mov
loopne
cmc
adcl
hlt
aad
sbb
push
push
xor
dec
out
mov
jmp
sub
les
add
mov
cmp
lret
and
sbb
in
push
data16
dec
cli
pop
dec
xor
popa
les
mov
mov
jo
js
mov
lds
movsl
pop
inc
mov
daa
pop
addl
dec
hlt
cmpsl
in
aas
sbb
xchg
dec
inc
mov
repnz
int
cs
jb
lret
lods
call
push
into
pop
cld
sbb
mov
in
sbb
xchg
lea
or
mov
cmpsl
fistps
pop
cmp
mov
loop
pop
cli
loope
les
sbb
cs
dec
or
add
cmpsb
stos
push
out
cmc
xor
jb
adc
int
leave
jo
inc
in
loop
mov
test
sub
sti
mov
and
push
cs
cmp
jmp
clc
mov
test
nop
insl
add
push
test
pusha
cmp
jg
daa
xor
push
in
stos
or
ret
jecxz
shll
sbb
cli
loop
jo
fnstsw
pop
dec
movsb
add
mov
add
cmp
or
mov
sbb
pop
in
jle
lcall
lahf
adc
ljmp
mov
inc
cli
inc
dec
mov
cmp
nop
mov
ljmp
into
sub
adcl
sbb
push
daa
repz
fisubl
or
and
xchg
jbe
orl
cs
fcoms
push
call
sub
xor
add
das
ds
xchg
sub
mov
add
mov
dec
mov
push
lock
mov
or
lcall
cs
mov
daa
jmp
jl
xor
ret
ret
cs
out
loope
jmp
lods
popl
adc
in
in
nop
xchg
lods
pop
insl
mov
les
call
cmp
outsl
sub
adc
fists
ja
lods
inc
add
or
stos
lods
add
out
lea
inc
in
xchg
xor
mov
xchg
call
add
aad
subb
rcl
insl
cmc
je
enter
sub
into
lock
js
fiadds
imul
ljmp
out
data16
jle
fs
ss
cld
pop
mov
arpl
lds
shrb
xlat
xchg
enter
mov
mov
adc
les
inc
jmp
jns
lcall
dec
inc
adc
test
sub
pop
stos
xchg
in
adc
sub
dec
jb
xchg
add
enter
dec
hlt
add
mov
jp
aad
xchg
and
xor
pop
cmp
or
xor
das
in
xchg
bound
push
mov
sbb
push
adc
cmp
xor
movsl
sti
or
lds
xor
mov
dec
test
or
enter
mov
or
or
arpl
sbb
daa
ret
mov
and
jbe
pop
inc
leave
pextrw
xchg
xor
mov
mov
aas
pop
pop
out
jbe
idivb
aaa
inc
inc
out
pop
test
cmp
jae
mov
sbb
imul
sbb
cwtl
cltd
out
leave
adc
test
or
iret
jne
or
test
mov
push
sub
mov
addr16
mov
pop
push
pop
adc
hlt
stos
sub
clc
movsl
ja
out
pushf
mov
stos
xor
and
lods
add
mov
jecxz
lods
mov
pop
std
cmp
xchg
jns
out
mov
clc
ret
sbb
fs
fcoml
inc
dec
das
aaa
das
xchg
lds
fsubp
in
jmp
mov
scas
push
scas
or
mov
aas
add
popf
imul
cld
or
call
push
mov
fiaddl
ret
andb
pop
add
add
into
test
push
mov
es
lods
add
push
rcl
out
ljmp
iret
fucom
rorl
inc
test
xchg
out
push
pop
and
mov
push
les
mov
insb
adc
sub
push
arpl
add
push
mov
fmulp
fstl
mov
inc
cmp
mov
movsb
hlt
mov
sub
xchg
subb
pop
aaa
mov
inc
jo
mov
cs
faddl
lock
xor
push
icebp
push
mov
je
out
adc
repnz
in
add
idivl
mov
fisubrs
test
pop
jle
mov
pop
or
xor
pop
out
inc
or
pop
xchg
mov
pop
mov
cmpsl
subl
nop
stos
cmpsb
jecxz
push
mov
or
sub
push
adc
popa
xchg
sub
pushf
xor
rcrb
hlt
xor
sarl
out
test
sbb
cmp
mov
int
leave
ror
pop
xchg
mov
sub
loopne
cmpsb
pop
and
popf
test
pop
and
mov
rorb
loope
loop
mov
push
andb
mov
outsb
out
repz
dec
in
int
leave
inc
mov
sti
and
cmp
jbe
inc
stos
lock
es
sbb
out
inc
cmp
out
or
in
xchg
sub
cmpsl
pop
repnz
lret
sub
repnz
jp
adc
scas
sbb
pop
shrl
push
pop
cmc
subps
mov
pop
pop
sub
ret
mov
push
inc
xor
sbb
xchg
xchg
and
cmp
cmp
and
inc
sti
jle
mov
mov
into
or
icebp
push
jmp
arpl
adc
stos
xor
ljmp
mov
push
dec
mov
enter
push
outsl
mov
loop
out
jl
xor
xor
out
pusha
cltd
std
jne
leave
lods
add
test
pop
xchg
into
in
adc
clc
inc
mov
shr
xchg
inc
adc
dec
addb
mov
or
pop
xor
sbb
mov
aad
int3
in
call
xchg
or
mov
bound
lea
inc
cwtl
sar
sarl
pop
lock
xchg
inc
inc
sub
faddl
and
clc
scas
hlt
cmp
pop
sarb
xchg
jp
mov
pop
bound
lods
cmp
subb
inc
loop
call
cmp
xchg
adc
aam
divl
lahf
insb
add
out
in
cmp
xchg
jmp
int
inc
orl
push
leave
push
ljmp
xchg
xor
cmpsb
xchg
stos
push
and
or
xor
lahf
or
int3
mov
lods
inc
cmp
jns
call
sbb
imul
mov
mov
mov
mov
mov
stc
mov
mov
mov
cmpsb
testb
pop
fwait
cmpsb
movsb
jg
pop
sub
mov
arpl
or
or
je
inc
mov
sub
jecxz
push
pop
pop
sub
lret
sub
sub
daa
es
loop
inc
adc
or
mov
mov
arpl
xchg
fisubrs
sbb
aaa
inc
nop
and
mov
push
notb
mov
adc
push
ljmp
cwtl
sub
lcall
or
out
movsb
adc
in
ret
dec
push
sbb
inc
mov
or
cwtl
cmp
cmpsb
fs
cmp
ficompl
scas
into
mov
scas
test
in
xchg
push
aaa
sbb
cmpsb
in
mov
inc
out
jnp
jg
pop
and
mov
sbb
or
stc
aas
or
fisttpl
pop
stc
arpl
arpl
sbb
pop
and
cli
lock
jl
cmpsl
lcall
loop
adc
icebp
xchg
jne
adc
clc
jne
add
jg
test
xor
and
rclb
xchg
push
imul
lods
mov
inc
and
test
fwait
push
mov
adc
pop
sub
lods
cltd
mov
dec
mov
cmp
push
mov
data16
xchg
sub
cmp
mov
pop
fildl
sub
mov
xchg
xchg
popf
lock
ss
jecxz
lahf
cmp
mov
aam
cmpsb
data16
xor
pop
adc
je
insb
xchg
mov
sti
ja
adc
inc
push
out
shlb
mov
dec
sbb
add
cmpsb
repnz
aaa
pop
push
cmp
js
xchg
add
dec
mov
lcall
or
and
lock
pop
inc
push
js
mov
inc
cmpsl
int
inc
shlb
jge
in
push
cli
cmp
inc
stc
jecxz
pop
das
lods
inc
xchg
xchg
inc
push
popf
sti
fstl
cmp
and
dec
clc
dec
and
sbb
ljmp
mov
hlt
pushf
jle
ljmp
jbe
and
and
aad
sarl
or
fisttpl
adc
stos
popl
and
imull
repz
insl
cmp
dec
xor
dec
xchg
fstps
enter
dec
mov
rorl
pop
insb
sbb
push
lods
push
push
add
punpckhwd
dec
pop
fistl
not
mov
mov
cmpsl
jecxz
fucomip
pop
pop
fcmovnu
pop
leave
inc
pop
sub
fwait
loope
insl
test
mov
lret
scas
inc
ret
xchg
inc
lds
lds
aaa
xor
add
mov
mov
cmp
xchg
out
lods
cmc
push
out
fidivrs
loopne
push
frstor
icebp
cmp
xchg
mov
jmp
xchg
lock
sub
sbb
mov
sub
and
push
sbb
pop
inc
shlb
pusha
repz
dec
ljmp
das
push
les
adcl
mov
sbb
hlt
js
fidivrl
push
xchg
scas
cmp
dec
imul
popf
lcall
push
cmpsb
incb
scas
test
shr
cmpsl
or
lods
or
fwait
and
cmp
sbb
ret
xlat
pop
inc
xchg
cmpsl
jl
xchg
fwait
cmp
adc
insl
push
stc
cmpsb
jns
or
push
popa
sbb
push
inc
jl
out
inc
dec
call
dec
sub
pop
rcll
dec
jbe
ss
mov
movsl
int3
sub
scas
leave
repnz
push
lods
cld
into
shr
test
mov
rolb
jno
sahf
insb
adc
pop
inc
cli
cmp
aad
push
test
and
out
nop
leave
nop
sbb
dec
popl
mov
icebp
push
xchg
lods
jns
ret
fiaddl
mov
call
insl
pusha
fldl
shl
lret
mov
shlb
sbb
test
push
mov
hlt
xchg
into
dec
inc
in
stos
out
dec
push
push
mov
inc
enter
aad
mov
out
sub
loopne
dec
clc
lods
inc
outsb
rorl
fwait
repnz
test
push
and
jb
adc
nop
lret
sbb
data16
repnz
and
in
add
cmp
lock
mov
cmc
sbb
lock
inc
sbb
ljmp
es
test
testb
add
lret
addr16
repnz
pop
xor
or
lret
or
jno
sub
cld
push
gs
rclb
lea
test
mov
push
xchg
and
js
dec
addr16
lds
ficoml
or
jnp
xor
int3
and
jmp
cmp
push
fsubs
inc
mov
test
mov
test
mov
sub
stc
sub
aaa
inc
sub
or
jp
cli
pop
push
dec
add
fdivs
test
cmp
ffree
xor
cld
cmc
sarl
std
sarl
loopne
xchg
push
repnz
and
ja
cmpsb
adc
sub
or
xchg
inc
lahf
xor
xchg
pop
stc
es
stos
aam
xlat
or
mov
push
push
push
fisttpll
cltd
lods
mov
iret
jmp
mov
nop
pop
scas
sub
jo
loope
jns
jae
jp
and
jnp
sbb
mov
push
push
inc
add
add
mov
mov
xor
xchg
or
push
pop
in
aad
cwtl
jbe
pusha
loope
xchg
dec
adc
cmp
cltd
adc
xchg
cs
mov
imul
and
dec
imul
cmp
cmp
add
shlb
cmc
pop
jae
popa
jge
iret
shlb
dec
in
dec
cmpsb
push
jmp
imulb
out
mov
imull
sti
xlat
je
ja
imulb
out
pop
iret
mov
push
test
out
adc
sbb
sbb
cmpsl
xorl
or
dec
pop
cmp
push
or
cmp
lock
mov
wrmsr
add
push
test
sub
pop
popf
ds
lret
adc
shlb
stos
jmp
xor
pop
mov
mov
pop
xchg
cmp
rcrl
mov
mov
cmp
and
or
pop
jl
inc
push
lahf
sub
jp
cld
jnp
loope
add
inc
fsubrs
mov
jne
js
jecxz
mov
loopne
cmp
scas
pop
movsb
push
das
xchg
cmp
mov
rclb
push
jne
push
or
cmpsl
jp
test
dec
jbe
sbb
aas
cs
or
dec
rcl
in
test
movswl
cmc
cmpsl
iret
jge
or
push
loop
and
jle
rcll
adc
mov
cmpsb
xor
add
inc
ds
movsb
mov
mov
pop
jle
cmp
stc
js
add
mov
or
daa
mov
arpl
xor
xchg
lahf
outsl
cld
sbb
rorl
dec
lahf
aad
outsb
cmp
mov
popf
mov
sub
lea
js
xor
xor
loope
mov
xchg
sub
hlt
sub
loope
stos
inc
xlat
sub
cmpsl
aaa
das
in
imul
or
or
cld
das
popf
cmc
outsl
push
mov
mov
int
jle
orl
pushf
inc
fadd
push
mov
mov
mov
mov
or
shll
mov
or
adc
adc
loop
jl
and
cli
in
test
xor
xchg
insl
cmp
lods
lcall
xchg
add
xor
cmpsl
int
mov
inc
xchg
cmp
add
jmp
jnp
xchg
xchg
popl
add
xchg
addr16
sbb
push
fcomp
pop
push
mov
xchg
popa
lahf
les
insb
jbe
leave
mov
xor
stos
aam
mov
pop
int
sub
adc
lret
or
mov
or
arpl
and
xchg
jne
pop
add
int3
adc
data16
out
je
xchg
je
daa
push
fidivs
inc
leave
cmpsb
jae
or
popa
cmp
int
in
out
clc
fld
and
mov
inc
lods
mov
or
mov
dec
xor
or
loopne
daa
dec
fcomp
push
inc
ss
call
or
loope
add
jg
lods
sub
jno
jo
xor
mov
rclb
mov
mov
sbb
addb
sub
pushf
jp
stos
icebp
xlat
fimull
and
mov
xchg
mov
lahf
sahf
dec
add
or
and
mov
mov
arpl
xchg
leave
push
test
xor
fs
pop
and
rolb
or
daa
xlat
sub
inc
dec
jg,pn
jl
imul
sbb
cmp
notl
les
pop
adc
test
dec
mov
imul
pop
mov
mov
mov
test
or
ret
jle
mov
cmpsl
loopne
ret
imul
sbb
movsb
rclb
loopne
xor
pusha
addr16
lock
push
cli
adc
sbb
repnz
dec
notl
push
jecxz
mul
out
sub
and
js
jp
mov
mov
movl
add
sahf
add
xchg
rorl
stos
pop
add
test
dec
in
xor
outsl
imul
xor
imul
imul
push
arpl
push
sarl
icebp
loopne
loopne
loope
mov
or
pop
mov
movsb
cwtl
das
arpl
jl
stos
pusha
mov
in
mov
subb
mov
xor
inc
mov
ja
mov
cmpsl
int3
nop
push
les
pop
dec
xor
fwait
repz
movsb
outsb
outsb
sbb
mov
mov
push
jne
mull
cmc
jg
lcall
mov
xor
cs
or
sub
ljmp
push
mov
mov
test
popf
jecxz
jmp
dec
repz
dec
and
mov
ja
sub
pop
aas
add
sub
xchg
xchg
mov
sub
cmpsb
rorb
sbb
adc
adc
shlb
mov
push
imul
or
mov
jecxz
lahf
xchg
test
cmpsb
cmp
inc
and
test
jp
lods
pop
shll
stos
rol
or
adcb
sub
lods
js
idiv
sbbl
mov
cmp
sahf
in
sbb
add
pop
divb
test
sub
aad
pop
cmpsb
lahf
in
xchg
dec
pop
leave
push
lret
pusha
push
mov
mov
dec
out
mov
inc
mov
dec
scas
sub
das
lock
cmp
mov
sub
mov
sub
lea
push
xlat
sbb
arpl
dec
ficompl
ja
jp
shll
ds
fwait
lret
fstpl
push
xchg
mov
aam
jmp
imul
pushf
pop
adc
jl
mulb
dec
iret
in
pushf
iret
test
fistps
sbb
cmpb
and
inc
push
or
sub
movsl
jno
cmp
dec
scas
les
and
out
lcall
cli
and
xchg
xor
cmp
add
push
pop
inc
push
jg
js
push
xor
scas
adc
decb
xchg
out
into
or
pop
sbb
mov
sbb
cmp
addr16
fldcw
andb
push
jcxz
lods
xor
scas
cmp
inc
frstor
adc
addl
xchg
data16
push
cmpsl
hlt
mov
shll
xchg
dec
testb
inc
mov
arpl
or
test
cltd
insl
es
inc
addl
push
dec
shll
mov
pop
jo
sub
out
xor
outsb
inc
cmpsl
out
jle
and
mov
pop
xchg
rep
mov
cmpsl
divl
and
addl
inc
push
ficoml
jnp
pop
stc
imul
jp
mov
and
dec
cmp
addl
jg
je
dec
xchg
incl
jg
and
and
pop
shl
daa
mov
mov
push
pop
mov
dec
lcall
mov
xchg
add
add
xchg
cwtl
add
jge
cmp
fndisi(8087
cwtl
jmp
daa
rcrb
cmp
adc
add
cmpb
mov
pop
js
fistpll
int
call
fimuls
dec
cmp
add
cmp
lahf
cmp
mov
xchg
es
movsl
stc
lret
mov
or
sti
iret
mov
pushf
fs
xor
das
add
adc
fbstp
inc
aad
xor
ret
jge
jecxz
pop
mov
cmp
dec
mov
push
push
sti
mov
jns
and
xor
fcmovne
das
sbb
lock
push
sub
mov
lret
out
int3
loope
fs
outsl
out
and
pop
sbb
sub
inc
push
rorl
imul
popl
jecxz
inc
inc
and
xor
fmuls
divb
inc
into
cld
mov
mov
sub
mov
cld
pop
rcll
mov
jmp
orb
push
add
in
inc
mov
or
roll
mov
dec
or
pop
pushf
int3
jnp
in
mov
cwtl
insl
xor
mov
fcompl
push
xor
push
sbb
shll
or
lahf
xchg
mov
jno
out
add
xor
xorl
adc
jecxz
scas
cmpsb
pop
push
sub
addr16
jg
mov
mov
out
insb
fwait
inc
xor
fwait
push
add
jge
cmc
mul
lret
jb
xor
mov
out
insb
push
and
mov
dec
or
and
cmp
xchg
pushl
scas
inc
sbb
or
jno,pt
inc
test
movsb
sub
mov
outsl
dec
cmpsl
jno
mov
das
cmp
mov
mov
testl
inc
in
aas
mov
loop
ret
repz
insb
or
push
js
mov
daa
inc
sub
lea
stos
call
negb
filds
inc
or
mov
stos
outsl
mov
pop
imul
adc
insl
incl
cmpsl
or
push
imul
mov
jge
loop
push
into
push
das
push
sbb
stos
test
xchg
sbbl
xlat
inc
stc
jnp
jbe
push
inc
or
add
repz
rcr
jge
cmp
cmpsb
lods
dec
arpl
stc
dec
jg
or
es
cld
xlat
pop
cltd
xchg
pusha
cmp
je
movsb
or
mov
cmp
dec
sahf
scas
out
mov
add
jmp
mov
mov
and
mov
inc
popa
data16
adc
dec
out
add
xchg
adc
sahf
lret
or
daa
lcall
add
mov
es
xchg
sti
cmp
movsl
jmp
xor
cs
movsl
dec
add
jne
xchg
jp
mov
pop
cmp
mov
in
jl
mov
mov
mov
adc
dec
push
add
sbb
out
jnp
pop
push
mov
adc
das
in
pop
inc
fldl2t
idivl
adcb
mov
ror
scas
aas
fimull
ret
lret
push
jmp
inc
push
jle
mov
fsubs
dec
pop
sub
aaa
xchg
add
adc
ret
loope
inc
rcrl
jne
in
in
mov
or
sbbb
pop
mov
lea
lods
and
popa
es
data16
jne
enter
cmpsl
dec
and
mov
cmp
repz
xchg
add
jl
cli
dec
cmpl
push
pop
adc
jns
cwtl
pop
lds
sbb
movsb
out
icebp
fwait
in
stc
js
add
popa
adc
mov
mov
loopne
int
push
fs
inc
adc
ret
adc
movsl
pop
push
cmp
xchg
mov
sti
nop
icebp
pop
xchg
mov
ds
into
lds
cwtl
bound
loopne
outsb
and
cmpsl
ss
or
pop
into
daa
outsl
cltd
mov
mov
lock
std
ja
into
mov
jg
cmc
loope
js
pop
cmpb
mov
sub
ss
mov
popa
test
fnsave
and
sti
push
cvtpi2ps
sub
ret
mov
mov
inc
add
lods
push
inc
cli
pop
mov
dec
push
mov
cmpsb
push
cmp
aad
int
lcall
test
incl
and
mov
jg
push
or
icebp
or
outsb
pop
mov
and
mov
jno
leave
out
sub
mov
mov
pop
adc
xor
test
pop
mov
xor
xor
sbb
gs
push
shll
ret
xchg
or
adc
mov
icebp
jl
mov
adc
les
mov
pop
mov
lahf
imul
xor
ror
loope
xor
imull
cmpsl
inc
les
add
xor
les
sbb
pop
mov
fstl
add
inc
mov
pop
add
outsb
repz
inc
pop
pop
mov
adc
pop
mov
jmp
sahf
pop
jne
xchg
add
cltd
inc
xchg
add
iret
or
xlat
test
in
aam
sti
sub
sahf
sbb
pushf
fstp
or
inc
pusha
jae
jmp
push
fcmovu
push
xor
je
add
dec
xlat
dec
mov
or
stc
stc
mov
jbe
mov
clc
mov
int
aaa
or
ja
fimull
jmp
scas
imul
iret
inc
pop
xor
mov
popf
xor
pminub
ss
dec
mov
pop
push
sbb
jae
loop
cmp
das
stos
sbb
and
sbb
add
stos
lods
std
or
or
stos
sub
fs
fmuls
in
lods
or
and
mov
or
or
ljmp
add
cmpsb
jo
mov
addr16
cmc
ret
aaa
dec
out
in
int
ret
rorl
enter
in
cltd
sbb
inc
fadds
or
aam
add
movsb
cld
xchg
int3
dec
add
mov
adc
xorb
sub
test
xor
call
mov
push
mov
sub
clc
jo
sub
fbld
sub
lea
stos
mov
push
ja
aaa
imul
jo
orl
or
push
add
incb
cmpsb
sbb
outsb
push
xorl
test
lods
fwait
in
mov
in
inc
int
mov
jle
movsl
outsb
cs
push
adc
pop
dec
ja
mov
fdivr
pop
ret
push
loope
fcom
lods
xlat
leave
ss
add
jge
mov
mov
pushf
jae
dec
or
adc
movsl
dec
lret
lret
pop
lock
leave
xchg
add
adc
jb
shrb
pop
mov
into
push
mov
jns
xchg
dec
je
scas
bound
jmp
add
out
jne
cmp
xchg
dec
and
movsl
mov
cmp
pop
adc
lods
pop
xchg
push
or
pop
sbb
bswap
adc
das
mov
mov
and
jbe,pt
nop
add
sti
dec
lret
movsl
add
divb
add
das
int
enter
mov
into
mov
dec
rcll
mov
rclb
sbb
adc
fadds
popa
sbb
xor
loop
lret
jl
scas
add
lods
push
cmp
mov
ret
sti
mov
dec
in
mov
push
jle
jns
and
push
pop
shr
sub
lret
lds
insb
std
sub
js
sar
mov
and
stos
fidivrs
cmp
fwait
aam
aas
out
jecxz
push
push
fnsave
clc
dec
mov
add
or
lds
cmc
jne
and
insl
inc
iret
aas
loop
push
xor
leave
mov
push
aad
jge
ljmp
lret
loopne
pop
push
adc
jge
jle
mov
mov
cmc
jno
cmp
xor
mov
repz
pop
leave
mov
into
jns
clc
mov
jl
jns
or
popa
jnp
aas
in
inc
pop
arpl
jg
sub
lock
add
in
add
xchg
popa
test
enter
out
sub
inc
loopne
pop
ficoms
push
iret
ret
or
dec
jmp
jb,pn
shrl
xor
sub
jnp
shl
aas
cmp
rcr
mov
adc
inc
cli
pop
jo
data16
inc
pop
into
mov
loope
je
or
lock
xchg
pop
mov
pop
fbld
fwait
dec
xchg
je
outsl
shlb
mov
test
pop
mov
ret
xor
cmpsb
cwtl
push
sbb
dec
or
ljmp
stos
aad
lcall
mov
sbb
mov
cmp
or
push
xchg
and
pop
xor
jns
leave
stos
lea
rcr
cli
rorl
mov
fwait
inc
mov
inc
sarl
movsb
shrl
mov
in
call
or
xor
out
mov
fwait
pop
push
icebp
or
outsb
mov
and
pop
aas
cld
xor
push
aam
fwait
ret
cs
inc
out
enter
mov
cmpsb
lods
lods
sbb
bound
xchg
les
std
push
loope
decl
insl
cli
lock
jns
cmpsl
sahf
mov
jp
push
mov
cs
data16
cmpsb
imul
push
inc
adc
les
lahf
clc
rcrb
cwtl
or
xchg
sub
mov
cltd
jmp
scas
mov
stos
jge
fildll
add
push
insb
pop
sbb
imul
ret
int
jecxz
aaa
pop
cmpb
or
inc
sbb
cltd
scas
jnp
stc
repnz
pushl
fyl2x
dec
subl
test
xchg
mov
inc
lret
sbb
push
rcl
imul
fs
out
mov
sbb
push
lret
push
clc
out
mov
and
lods
sbb
push
pusha
jne
int
and
jg
xor
fisttpll
sbb
add
insl
inc
in
sbb
bound
jmp
push
stos
dec
xchg
loop
mov
lahf
mov
inc
mov
and
scas
pop
or
or
lahf
xchg
mov
dec
cmp
xor
test
sbb
push
xchg
adc
xchg
lods
mov
adc
rorb
out
push
test
neg
rcrl
or
sub
sbb
bound
push
pop
mov
dec
ror
jmp
aam
xor
in
imul
push
and
jb
pop
push
test
cmc
hlt
cmpb
cmpsl
mov
lret
pop
icebp
xor
cli
adc
mov
jecxz
xchg
sbb
enter
ficoms
inc
push
push
cmc
nop
loop
lock
cmpsb
imul
pop
into
jecxz
dec
mov
pushf
xlat
xor
aaa
rclw
pop
pop
into
iret
cltd
or
xchg
das
psrad
mov
dec
jne
mov
and
enter
test
pop
sbb
or
mov
jmp
scas
dec
mov
pusha
cld
and
dec
add
or
lods
mov
pop
dec
lret
popa
xchg
fsubs
andl
sub
mov
push
into
pop
jb
cmpsb
sbb
out
mov
inc
mov
jns
lods
inc
mov
les
xchg
push
dec
lods
cmp
sbb
fimuls
adc
add
or
test
int3
xor
stc
mov
dec
out
xor
add
xchg
hlt
fs
or
dec
pop
mov
pop
mov
and
movsb
rclb
mov
adc
lcall
sub
mov
loop
inc
push
rcrl
cwtl
inc
or
cltd
sub
addr16
fcmovnbe
inc
push
sahf
ret
cmpl
aas
jns
cmp
mov
loop
jp
sbb
xchg
outsl
pop
jo
fiadds
jl
mov
sbb
sahf
jns
and
mov
or
mov
aaa
jb
mov
out
bnd
cmp
add
mov
rcl
jae
lcall
out
ret
loope
inc
sub
cli
xchg
clc
in
ja
pop
stos
fdivs
test
pop
insl
ds
icebp
test
icebp
andl
mov
outsl
test
fcoms
dec
fadd
xchg
sbb
xchg
mov
lret
dec
sbb
jl
sub
int3
fisubl
push
adc
or
test
pop
insb
push
idiv
fisubrs
xchg
daa
repz
adc
lea
push
sbb
inc
fldl
push
cmp
mov
mov
dec
mov
adc
mov
xor
dec
add
in
mov
cmp
int
enter
shlb
mov
popf
push
fsubs
dec
xchg
inc
aad
lret
sbb
lock
adc
fbld
mov
cwtl
jae
fwait
push
test
lock
les
out
test
mov
or
aaa
dec
xchg
xchg
sub
aaa
aas
xor
sbbl
aas
lfs
arpl
ja
jbe
or
xor
stos
add
dec
insl
dec
fcompl
dec
push
xor
sbb
jmp
insl
push
push
xor
rcll
cmp
mov
pop
fldenv
loope
std
adc
out
stc
inc
mov
test
push
xchg
push
inc
shll
cmp
inc
loopne
cmpsl
data16
inc
inc
adc
fstpt
jae
push
cmp
mull
ss
inc
popa
je
or
mov
jne
in
jne
mov
pop
dec
shrb
in
sahf
add
pop
sbb
xlat
ss
inc
aam
mov
lock
dec
js
js
rol
add
inc
incl
inc
push
lret
ret
pop
xor
add
push
fidivs
mov
mov
mov
xor
outsb
xchg
lock
mov
fwait
xchg
mov
fwait
xor
ret
lahf
pop
aas
xchg
orl
sbb
mov
fld
outsl
inc
ljmp
push
mov
push
add
sub
mov
incl
mov
in
pop
lret
insl
fnstcw
call
cmp
test
xlat
jns
lcall
mov
test
insl
fnstsw
push
cltd
mov
rclb
aad
jmp
stc
das
fstpl
mov
rcrb
call
rorb
lock
lds
push
and
repz
leave
scas
jp
icebp
mov
call
cmp
mov
lcall
out
cltd
lret
cmpsb
cmp
xorl
adc
pop
shr
rcll
stos
lcall
clc
mov
dec
jnp
fisubrs
data16
add
call
dec
adc
repz
fnsave
pop
fadds
enter
sub
add
pop
xchg
pop
psrld
mov
shufps
mov
aam
dec
je
ss
test
test
pop
and
jge
outsl
mov
xor
mov
inc
cmpl
cmpsl
movsl
xor
inc
push
and
shr
mov
inc
or
aas
inc
ja
insl
hlt
mov
lea
add
mov
icebp
enter
sti
insl
pop
fisubrs
maxps
pushf
ret
addr16
mov
xor
jbe
inc
xorl
gs
adc
xlat
ss
movsl
iret
or
sub
sbb
pusha
mov
adc
lret
stc
je
xchg
pop
cmp
push
dec
daa
sbb
out
cmp
outsl
fists
repnz
arpl
lds
and
mov
ret
xlat
gs
daa
push
jb
pop
xchg
pushf
repnz
andl
jmp
jmp
mov
pop
int3
popf
repz
sub
dec
cmp
divl
inc
sti
lahf
mov
cs
jo
ret
sarl
dec
aam
in
and
aam
sahf
mov
xor
pop
imul
xor
xor
push
add
dec
jns
jnp
stc
stos
sub
xchg
xlat
int3
mov
pushl
out
xchg
out
inc
fistps
popf
cltd
add
adc
mov
pop
pop
inc
xchg
inc
gs
leave
out
int
jp
push
out
aaa
xchg
mov
jmp
shrl
and
mov
dec
mov
mov
inc
push
pop
adc
aam
inc
test
gs
es
into
jo,pn
xor
add
sbb
daa
push
stos
sbb
sti
push
lahf
jl
das
cmpsb
popa
jb
cmp
cld
out
loope
mov
xor
cmp
lret
arpl
cmp
repz
inc
js
sbb
ds
ds
push
addb
je
mov
mov
gs
lret
fisubs
fists
mov
lret
mov
push
idivb
lea
sarb
dec
fnstsw
jp
or
mov
add
mov
mov
pop
test
dec
push
icebp
cmp
mov
gs
xchg
inc
sub
daa
or
xor
xor
jmp
mov
shrb
cmp
test
inc
xchg
mov
cwtl
pop
bound
not
push
add
pop
add
fcompl
ljmp
test
clc
sbb
sbb
inc
notl
mov
scas
pusha
daa
mov
xchg
in
mov
roll
sbb
sub
pop
push
cli
fsubrs
mov
inc
lds
jg
loopne
aaa
or
cmp
mov
in
negb
fnstenv
dec
lcall
or
test
cmpsl
add
dec
push
xorb
mov
ret
rclb
mov
mov
ljmp
xchg
pop
mov
sbb
outsb
cmc
cmpsb
int
mov
jns
inc
data16
std
fwait
pop
mov
mov
roll
sub
ret
xor
jne
sub
std
cld
popa
push
out
rclb
xchg
mov
ffreep
sbb
add
jno
fsubrp
out
mov
mov
test
mov
clc
mov
lcall
push
mov
mov
outsb
loopne
iret
call
inc
das
rcll
cli
aaa
mov
xor
pop
jmp
add
enter
pop
repz
and
add
lahf
cmc
inc
inc
lods
push
out
or
aad
mov
lods
jae
jecxz
gs
sub
sbb
jb
inc
repnz
xchg
jecxz
mov
adc
movsl
lret
repnz
pop
add
push
mov
shrl
fwait
in
into
push
lret
pop
and
lods
sbb
fs
popa
jle
push
or
pop
inc
jno
lea
mov
lock
int
ret
xchg
jmp
popa
daa
jmp
sbb
jp
dec
jnp
push
mov
outsl
mov
cmc
sets
sub
cmp
push
cltd
mov
mov
rorl
mov
cwtl
sub
aaa
fwait
pop
sub
pop
inc
pop
xchg
ficompl
mov
andb
fcompl
push
jecxz
movb
adc
mov
sub
or
shlb
rcrb
or
push
repz
in
das
mov
test
mov
test
nop
lods
jae
js,pn
imulb
pop
or
mov
dec
repz
mov
cli
sahf
or
pop
dec
inc
arpl
imul
xor
jns
fs
ljmp
sub
sub
or
fnstsw
and
pop
leave
clc
sub
mov
js
fs
hlt
or
mov
jp
inc
std
inc
jnp
add
int3
jmp
out
push
mov
aas
or
mov
adc
inc
test
or
and
mov
loopne
fstpl
fdivrl
ret
out
and
cmp
and
sub
mov
jae
pop
fsts
xchg
sbb
arpl
lods
repz
and
jo
scas
stc
popf
add
cld
and
inc
xor
mov
push
clc
xchg
in
sarl
stos
outsl
lock
push
mov
pop
jge
ja
mov
mov
call
or
gs
xchg
push
stc
out
push
pop
mov
mov
cli
test
xor
into
or
jg
jbe
xchg
out
addl
insl
inc
mov
lret
outsl
rorb
ja
nop
data16
ror
sbb
mov
mov
addr16
dec
xchg
inc
jg
dec
nop
mov
inc
scas
ficomps
jmp
and
pop
jmp
mov
lock
xchg
pop
fdivl
and
sub
pop
sbb
cmp
outsb
fwait
dec
cltd
xor
mov
ljmp
inc
dec
fadds
push
xor
pop
jo
insb
dec
jge
xchg
sbb
jne
mov
fstpl
and
mov
xchg
push
notb
adc
xchg
pop
movq
add
or
sub
repnz
sub
mov
mov
stc
add
xchg
shll
jo
xchg
xchg
jns
push
stos
push
jge
rcr
jmp
stos
cltd
mov
pop
movsl
cmp
push
aam
fwait
gs
sbb
movsb
push
lds
add
mov
or
jb
lock
dec
push
ficoms
mov
out
insb
outsb
test
add
cmp
pushf
jmp
test
xchg
repnz
cs
ja
repz
adc
xchg
pop
adc
jmp
shl
fists
xor
push
pop
adc
push
xor
pop
push
daa
jne
mov
rorl
rcrl
jg
push
ret
xor
xor
inc
mov
test
cltd
xor
pop
jge
fidivrs
dec
jo
or
sub
aam
xor
xor
stos
dec
xchg
dec
adc
lcall
or
insl
dec
das
jge
popa
mov
jmp
fnstenv
or
je
xorl
aad
mov
flds
inc
push
fcoms
xlat
mov
outsl
jne
jns
sahf
mov
xchg
jmp
xchg
shl
fimuls
les
push
scas
sahf
and
outsb
hlt
pop
ficomps
icebp
mov
cs
cmpb
and
xchg
xchg
test
loope
or
call
sbb
pusha
popf
ss
repz
test
pop
sahf
xchg
aam
mov
cwtl
xchg
jb
jmp
xchg
cmp
dec
es
cmp
adc
les
mov
sub
add
lret
mov
or
mov
xor
mov
jns
dec
or
mov
xchg
pop
inc
cmp
sbb
rorl
in
and
or
sbb
pop
xchg
jge
inc
lds
scas
jmp
push
sub
mov
dec
dec
into
mov
push
testl
and
das
sahf
cmpsb
lcall
iret
and
lods
xchg
mov
mov
imul
repz
cmc
mov
rcl
aaa
xor
adc
mov
enter
dec
pop
fs
ret
or
and
iret
in
add
push
lahf
pop
rcrb
xor
jge
inc
jae
add
mov
ret
js
mov
call
sub
pushl
jnp
shll
cmpsl
xchg
add
test
int3
shrb
sbb
test
fadds
ljmp
mov
add
iret
cltd
inc
mov
rcll
stos
jne
orb
enter
adc
mov
mov
aad
popl
fsubs
and
dec
out
sahf
aad
out
mov
push
mov
add
cmp
mov
push
jns
xor
orl
insl
lock
js
or
movsl
shr
jecxz
sbb
sbb
in
lcall
mov
lcall
pop
inc
sbb
stos
jno
xor
loop
adc
popa
test
into
cltd
iret
orb
pop
scas
les
mov
in
sub
inc
cmpsb
mov
xchg
jle
jmp
lds
mov
mov
push
fwait
inc
mov
ljmp
lds
loop
mov
pop
push
ja
dec
in
lret
inc
in
pop
mov
jo
repz
add
jmp
mov
xchg
push
and
orl
add
xor
cmpsb
xchg
jecxz
aaa
jbe
or
mov
outsl
repz
mov
pop
mov
pushw
pop
dec
pushf
call
aam
ret
fildll
and
sbb
test
shrb
jp
mov
mov
xor
add
outsl
xor
inc
or
fs
sar
cmp
dec
es
dec
dec
add
out
inc
jns
xchg
in
mov
jb
push
pop
push
push
ds
subl
sbb
cmpl
fmulp
jecxz
adcb
aas
ss
cmpsl
add
test
cmp
lcall
pop
adc
xor
iret
mov
rclb
arpl
roll
pop
mov
push
es
fsubrl
adc
mov
das
test
xor
repnz
fildll
test
adc
push
lret
jo
out
dec
mov
scas
lods
into
out
or
out
inc
mov
dec
mov
adc
adc
and
rcll
lds
mov
push
inc
fadds
inc
mov
sub
sarb
gs
lds
jge
lret
repz
stos
add
bound
scas
inc
sbbl
mov
sub
mov
or
jmp
pop
sub
or
push
popf
pushf
test
fcomp
mov
mov
mov
out
testl
in
pushf
cmp
aaa
xchg
adc
dec
mov
daa
cs
mov
mov
add
jne
test
out
pop
and
add
sbb
pop
negb
adc
jne
sub
pop
adc
iret
fs
cmp
mov
das
push
jge
mov
enter
sti
push
js
mov
dec
push
fdiv
jb
stc
shrl
mov
js
mov
je
fs
bound
cli
jns
or
mov
xchg
cmpb
jge
lods
lock
call
mov
fbld
xchg
jno
mov
dec
push
filds
xor
orl
pop
inc
fs
nop
lds
cli
movsb
pop
add
mov
lahf
xor
lods
arpl
and
popa
test
mov
pushl
add
mov
mov
fld
push
sub
cli
push
cmp
push
addr16
xchg
jle
mov
add
lock
push
rorb
rol
or
cmp
dec
mov
repz
xlat
cld
mov
sti
testb
sbb
xor
clc
or
jne
xor
mov
mov
add
jp
inc
lods
pushf
mov
jns
push
pop
fists
enter
out
inc
insl
and
sbb
mov
sbb
jmp
cmp
dec
popf
dec
inc
xchg
in
sub
punpckhbw
xchg
jbe
push
dec
je
jns
lcall
inc
dec
or
scas
fucomi
adc
cwtl
add
hlt
frstor
mov
inc
mov
sbb
xor
inc
or
cmp
push
pushf
call
jae
adc
add
fsqrt
pusha
dec
inc
jg
cmp
jl
cmp
movsb
push
sub
push
and
xchg
mov
mov
and
shrb
popa
mov
cmc
dec
rcrl
sti
inc
xchg
and
jno
inc
sbb
adc
xchg
enter
insl
clc
push
movnti
push
xchg
xorb
hlt
loop
pop
add
push
cmc
pop
ficoms
dec
fldcw
cmp
ja
and
cs
ja
out
call
jg
cmc
sbb
xor
aaa
or
loope
scas
jmp
xchg
xchg
adc
or
push
xchg
fildll
or
push
data16
mov
int
cld
pushl
mov
jmp
xor
xchg
mov
sahf
imul
ds
push
incl
leave
sbb
pusha
insl
mov
imul
mov
mov
and
add
jmp
jg
xchg
icebp
jne
dec
sbb
dec
pop
cmp
cvtdq2ps
and
inc
jge
sub
pop
clc
fstpl
cmp
mov
repnz
and
and
test
xchg
mov
inc
decl
enter
add
out
sbb
push
xchg
lahf
rclb
icebp
sub
fcmovnb
dec
inc
sub
out
mov
fmulp
std
mov
and
bswap
stos
leave
icebp
push
jl
sahf
sbb
leave
iret
out
mov
cmp
xor
div
dec
js
aaa
scas
lret
pop
ret
in
mov
push
packssdw
jle
pop
js
into
xchg
ret
loope
mov
dec
fucom
push
pusha
or
adc
mov
xchg
mov
cmp
lahf
push
sbb
pop
test
pop
add
aaa
arpl
ret
sti
clc
pusha
int
dec
imul
and
stos
fists
dec
mov
jne
shrb
mov
clc
enter
daa
vmread
stos
jl
insl
sarb
mov
xchg
out
enter
jg
mov
enter
xchg
adc
mov
mov
ret
pusha
fsts
push
and
mov
push
lods
std
jae
pop
cmpsb
push
pop
std
imul
loop
cmp
movsl
jo
enter
xchg
dec
dec
je
testl
cmp
in
lock
rclb
fists
xchg
jbe
add
pop
and
enter
mov
push
aad
lret
add
mov
shrb
inc
sbb
popf
les
pop
aaa
ljmp
xor
adcl
mov
jae
popf
bound
cmpsb
mov
cmp
xor
out
in
mov
cmpsb
aas
fbld
ret
push
outsl
mov
fildll
and
add
sbb
push
and
sahf
outsb
mov
or
stc
xchg
sbb
pop
fbld
int3
adc
xor
bound
and
jae
xchg
lret
jmp
mov
add
jp
leave
xchg
ss
ret
xor
mov
nop
insb
inc
add
cmpsl
adc
addr16
cmp
and
adc
sub
test
push
out
orl
jno
xchg
scas
sub
jl
ret
dec
cmp
push
mov
push
int
test
cmp
seto
mov
jge
pop
ljmp
xchg
push
mov
sbb
cltd
mov
mov
fildl
add
ss
and
movsb
les
mov
test
pop
scas
dec
cmp
aas
or
pop
cmc
in
aam
divb
fcoms
pop
pusha
loope
push
lret
decb
sar
imull
cmp
or
xchg
fwait
cwtl
movsb
insb
xchg
xor
mov
imul
xor
data16
subb
je
rcrl
scas
ja
fsubrl
rol
xchg
mov
cmp
movsl
fs
aad
movsl
fiaddl
dec
and
push
popa
cld
test
dec
and
aaa
jge
nop
mov
insl
adc
cmpsl
mov
adc
cmpl
xchg
leave
sbb
xchg
shl
fwait
and
pop
sbb
mov
sbb
xchg
adc
out
stos
sub
inc
sbb
inc
inc
push
rolb
popl
jg
out
sbb
sub
xor
inc
in
mov
jle
mov
pop
pop
nop
mov
mov
jl
lods
and
sahf
adc
sbb
xchg
in
mov
das
cld
cmpsl
and
inc
lods
cld
fisttpll
fiaddl
mov
push
and
les
dec
repz
aaa
fwait
pop
xor
sbb
mov
push
enter
add
sub
shld
mov
aaa
cmp
mov
sti
xchg
ret
cli
mov
mov
lret
lcall
mov
sub
add
jp
push
ss
adc
inc
mov
popa
push
lods
mov
incb
mov
mov
add
outsl
pop
inc
mov
mov
aad
ret
pop
insl
out
and
into
adc
pop
aam
mov
and
xlat
xchg
pop
popa
adc
jb
dec
pop
jge
in
or
dec
test
dec
and
lahf
adc
push
daa
adc
jno
fadds
icebp
xchg
and
add
xor
popl
jno
ja
int
mov
sti
xor
dec
inc
xchg
dec
test
lds
mov
fsubr
mov
xor
xchg
jl
cltd
dec
mov
xchg
or
stos
push
jno
fcompl
dec
pop
sub
iret
sub
mov
pop
push
into
pop
or
mov
lret
test
mov
scas
jmp
pop
mul
jp
push
sbb
aad
dec
jbe
jns
and
jo
test
test
add
rep
add
jae
daa
cmp
dec
mov
cld
fadds
in
icebp
jmp
jecxz
enter
fistpl
rorb
clc
push
xchg
out
decb
insl
push
iret
stos
jge
xchg
dec
sub
stos
inc
xchg
add
jbe
lods
sbb
loopne
inc
mov
in
call
mov
popf
pop
ljmp
fcomip
and
shl
out
and
mov
imul
movsl
lret
fimuls
int3
adc
cmpsb
mov
mov
fwait
clc
push
sbb
ss
movsb
insb
cmp
pop
lret
fs
fs
stos
push
or
xchg
aas
cltd
shlb
outsb
jp
insb
jae
hlt
movsb
int3
xchg
or
and
add
add
inc
xor
lcall
mov
mov
pop
mov
lods
or
or
ffreep
daa
pop
fdivs
subb
sti
aaa
ja
in
pushl
inc
jg
mov
loop
jmp
fstl
fstpt
das
cmp
jae
xchg
movsb
push
addr16
stos
dec
cmpsl
aaa
in
mov
out
and
jecxz
lret
loopne
jnp
js
mov
push
fstps
pusha
into
lea
fimull
fnsave
cmp
mov
ljmp
icebp
xchg
and
stc
outsl
mov
push
fnstcw
mov
mov
push
xor
sbb
insb
test
scas
es
xlat
adc
xchg
daa
pop
dec
lea
mov
fistl
pop
or
and
mov
xchg
cmc
test
add
cmp
lcall
mov
sbb
mov
into
push
lds
push
xchg
cltd
loop
or
movsl
ret
das
jl
js
mov
in
icebp
rol
icebp
xor
push
rolb
dec
cmpsb
cmp
and
jg
inc
fld
popf
push
jbe
or
icebp
insl
sub
js
jge
aas
adc
add
iret
push
dec
in
mov
jg
cmc
movsl
pop
mov
stc
aaa
sub
and
ja
inc
or
filds
lcall
repz
rolb
jg
outsl
cmpsl
out
dec
inc
dec
push
movsb
popa
sbb
js
jb
adc
cmpl
insl
xlat
push
jb
sub
dec
push
out
inc
jecxz
mov
pushf
add
xchg
jp
xor
cmpsb
in
gs
jno
and
rcrb
mulps
mov
adc
shlb
pop
call
cltd
xor
shl
sub
add
rclb
add
jle
mov
jmp
xor
mov
ja
rorl
mov
imul
mov
mov
daa
into
jl
jno
jle
sub
lret
adc
fldenv
outsb
outsl
xchg
push
jne
test
jns
ret
jb
pop
add
out
push
xchg
daa
shll
leave
pop
fisttpll
nop
xchg
pop
fwait
dec
aam
out
fs
sub
xor
dec
mov
cli
xchg
movsb
in
inc
sub
push
fnsave
les
add
jbe
mov
push
cmp
imul
and
ficoml
loopne
sub
fs
sub
pop
mov
sub
lea
jne
aas
jle
ret
cmp
jp
pusha
dec
sub
cltd
mov
or
sub
xchg
pop
gs
sub
cli
aad
lods
xchg
mov
sub
stos
cmp
and
imul
jl
je
jo
cmp
xchg
jno
mov
push
sbb
orb
fcoms
mov
pop
fidivrl
leave
xor
add
std
sarl
jmp
or
sub
sbb
loopne
std
mov
mov
adc
mov
fisubl
sbb
jne
js
sub
movsl
push
bound
jecxz
out
mov
cmp
cmovp
adc
out
xor
fldl
mov
sub
jns
sbb
xchg
push
stos
jp
add
lods
jecxz
push
pop
lods
pop
mov
mov
xor
scas
add
xchg
sub
fwait
xor
ficompl
xorl
cli
pop
add
jp
cmp
mov
les
sbb
scas
xchg
xor
inc
push
mov
bound
cmp
xor
mov
jnp
push
arpl
int3
and
pop
xchg
sub
add
mov
mov
lds
xchg
mov
das
adc
outsb
imul
shll
adc
insb
add
aam
jb
stos
jae
js
outsb
xchg
inc
test
lods
pop
lods
sbb
dec
fld
xchg
cmp
push
pop
push
mov
adc
hlt
aas
dec
scas
push
aaa
lods
mov
and
pop
js
mov
mov
xchg
pop
popf
cmp
pop
sbb
push
in
push
adc
leave
mov
mov
in
into
xchg
sbb
jo
loope
adcb
int
jge
stos
pop
dec
iret
loopne
loop
sub
stos
inc
mov
pop
push
ret
sub
or
jae
cmc
test
jno
inc
lret
pushf
aaa
es
ss
outsb
sbb
push
enter
test
cmpl
jle
test
jae
dec
test
scas
call
fistl
iret
xadd
loopne
arpl
cld
imul
in
outsb
sbb
mov
incl
popf
lret
test
add
xlat
xchg
int
decl
cmpsb
shll
add
std
inc
and
sbb
mov
movsb
sahf
lods
addr16
imul
test
cmp
clc
scas
ljmp
dec
loopne
cmp
daa
ret
mov
outsb
adc
mov
mov
cmpsb
mov
daa
xchg
and
rcrl
or
je
cmpsl
frstor
stc
js
xor
jae
adc
or
scas
add
add
ret
xchg
xchg
fs
pop
faddl
jl
pop
pushf
arpl
sub
cmp
jp
jmp
fsub
fisubrl
sarb
rcll
ret
lods
jge
daa
andl
shlb
in
imul
jno
xchg
shr
loopne
daa
outsb
clc
cmp
push
inc
xor
int3
and
cmpsl
and
jo
cmp
adc
pop
or
mov
jb
mov
movsb
mov
lods
mov
mov
out
jmp
into
mov
popa
mov
fcmovu
cmp
adc
je
or
call
mov
and
jp
push
dec
scas
dec
dec
fwait
add
adc
jp
addb
jae
push
ss
dec
pop
ret
leave
xchg
imul
fucomp
daa
loopne
mov
decl
push
rorl
jnp
hlt
sbb
shl
or
mov
add
stos
pop
xor
lock
movl
dec
movsb
rolb
push
ret
movsl
jae
and
and
rcrl
jg
daa
pusha
dec
dec
fs
jmp
scas
dec
pop
cwtl
test
in
stos
shll
cmp
and
clc
sub
inc
clc
insl
mov
pusha
xor
mov
inc
test
test
into
mov
or
mov
jae
clc
xlat
xor
mov
out
add
push
xor
mov
adc
push
ss
lcall
enter
hlt
add
daa
das
shr
dec
negb
inc
scas
addl
dec
sub
jge
ret
pop
and
cmp
addr16
outsl
xor
jp
mov
movsb
inc
and
cltd
or
aas
in
and
dec
popa
lods
pop
adc
bound
pop
push
mov
daa
orl
sub
jmp
gs
cmc
xlat
movsb
in
push
loope
mov
xlat
stc
loope
sub
pop
sbb
test
mov
int
pop
popf
lock
push
xchg
mov
push
pop
cmp
cmc
std
int3
jg
loop
dec
repnz
je
mov
pop
faddp
je
and
shl
push
sub
inc
pop
aas
xchg
add
stc
push
push
pop
xchg
inc
loop
and
faddp
xchg
sbb
pop
lret
xchg
cld
pop
test
loop
mov
repnz
in
daa
jns
into
xchg
fxch
daa
xchg
in
mov
fdivs
sbb
aad
dec
pushf
cwtl
mov
xchg
fisubrl
add
pop
and
jle
scas
mov
cmpsb
inc
sub
movsb
ljmp
mov
das
in
popf
or
sub
xor
xor
mov
mov
mov
shr
and
aas
fstl
rol
jb
nop
cli
xchg
jno
aad
push
jg
mov
inc
test
xchg
ss
pop
xlat
jae
out
sbb
inc
pop
push
adc
pushl
movsl
lret
sbb
sbb
jb
js
or
push
xlat
nop
pusha
jno
push
xchg
out
shr
xchg
pop
sub
pop
mov
or
mov
jno
or
push
shrl
cltd
push
mov
mov
inc
gs
jne
xor
xchg
addb
fistpll
ficoml
daa
jg
pop
fsqrt
addl
pop
repnz
xor
lret
and
aas
jge
inc
mov
adc
dec
cmpsl
scas
mov
movsl
jnp
mov
iret
fisttps
imul
sbbl
into
push
jp
jp
in
jmp
and
repz
xchg
sub
xor
fsubr
inc
mov
aad
jae
fists
and
shlb
push
iret
sti
inc
fs
das
lods
push
out
dec
and
inc
inc
push
dec
fs
out
pop
push
loope
cmp
lds
imul
and
lock
test
push
dec
mov
lret
movsl
pop
sub
push
jge
xchg
imul
xor
test
sub
ret
sti
inc
pop
inc
sub
add
fcmovnbe
mov
and
ret
pop
jb
pop
push
leave
xchg
cmp
popf
pop
mov
pop
stc
js
mov
loopne
jle
arpl
ffree
in
rclb
mov
or
mov
inc
pop
xor
jmp
adc
sub
inc
mov
fisubrl
pop
jbe
mov
movsl
int3
pop
dec
mul
ret
sbb
push
loopne
ljmp
mov
jae
jmp
pop
mov
in
les
cmc
leave
addb
into
dec
inc
jno
jmp
icebp
inc
cmp
lret
and
lods
in
test
push
bound
xchg
xchg
dec
mov
cmpsl
sahf
jge
mov
in
paddusw
pop
xchg
lahf
push
jp
mov
jmp
lret
dec
cli
cwtl
jne
pop
das
dec
cmp
or
mov
clc
mov
xor
push
clc
adc
jmp
icebp
mov
aad
pop
cmpsl
aas
movsb
out
les
inc
cmc
mov
dec
push
xlat
push
mov
nop
and
mov
adc
or
test
jae
pop
pop
xor
sbb
xchg
shlb
jmp
repnz
pop
imul
pop
std
fs
xchg
pop
lds
push
std
mov
ljmp
and
lret
mov
out
idivl
jo
xchg
or
les
out
out
nop
jo
sub
jp
data16
lock
mov
cmp
jg
nop
ds
sbb
sbbl
sti
push
rcrb
leave
pop
adc
nop
mov
loope
jne
cmpsl
in
inc
push
mov
insl
mov
and
cmp
cs
lret
push
dec
mov
int
popf
aaa
pop
mov
add
mov
xor
xchg
push
jne
out
outsb
and
jge
mov
loop
shll
mov
mov
xchg
lea
mov
jo
mov
aam
cmpsb
add
lock
jno
sarb
pop
arpl
pop
jns
mov
push
sahf
cmpsl
femms
adc
imul
mov
cmp
adcb
loope
sub
bound
in
test
jne
arpl
xchg
pop
sbb
pushf
jns
push
xor
loopne
je
ret
lcall
or
das
add
xor
xchg
inc
nop
fdivrl
xchg
cld
int3
and
data16
jle
sar
lds
inc
inc
aam
aad
push
stos
xchg
in
sbb
dec
scas
xor
pop
stos
fisttpl
and
divb
dec
int
push
insb
in
movsb
inc
sub
jle
pop
jno
dec
adc
jb
mov
fistpl
sub
xor
daa
cmp
aad
js
add
inc
xorb
enter
aas
cli
es
fcomi
in
xor
adc
fcoms
sbb
negl
icebp
je
fcmovnbe
scas
push
fwait
int
fisubrl
ljmp
xor
gs
movsl
out
or
subb
inc
test
pop
into
pop
das
cmp
mov
ljmp
test
repnz
mov
sarb
in
inc
out
loope
shll
int3
rorb
testb
pop
dec
andl
jne
xchg
lock
enter
addr16
imul
pop
add
jmp
popa
push
mov
cmp
add
sarl
cmp
adc
xor
dec
and
jmp
daa
lcall
orb
sbb
mov
mov
ret
xchg
push
call
mov
lock
test
cld
mov
fs
push
jecxz
pushf
fnstcw
jbe
mov
bnd
sub
movsb
add
xor
shr
sahf
inc
or
adc
mov
pop
jp
xchg
loope
cmp
push
adc
xchg
and
fldcw
inc
sahf
xor
xor
pop
mov
outsb
dec
fs
lcall
mov
dec
inc
jl
jp
sahf
pop
rol
sub
cmp
adc
iret
repz
scas
je
or
pop
jno
or
cmp
call
or
fdivrl
push
data16
cmc
sti
movsl
cmp
paddq
xchg
enter
adcl
jns
int3
adc
fidivs
add
rcrl
fwait
or
dec
add
jg
cmp
in
outsl
and
sahf
xchg
call
dec
cltd
xchg
pushf
inc
fists
fsubl
out
data16
cmp
mov
push
pop
loopne
aas
popa
je
sahf
aam
loopne
cmp
pop
sub
xchg
xchg
dec
mov
in
imul
jle
negb
mov
out
scas
or
mov
fbstp
je
out
push
std
bound
cmp
leave
push
mov
dec
mov
adc
cmc
stos
stos
inc
pop
pop
mov
cmc
push
lds
cs
adc
rcr
cltd
pop
dec
xor
cmp
push
jl
rorb
push
mov
shlb
adc
shl
maxps
xchg
ficoms
out
jbe
ss
inc
xchg
mov
enter
ja
xlat
repnz
sbb
and
rorb
addr16
pop
dec
test
cs
inc
mov
lret
adc
out
outsl
fisttpll
inc
inc
leave
adc
and
xchg
push
std
fsubs
and
jg
dec
add
jne
xchg
pop
adc
xor
bound
outsb
or
or
xor
aad
xchg
pop
mov
shld
hlt
fildl
jecxz
add
push
add
ficomps
rol
lds
scas
loopne
rorl
popf
scas
sahf
test
mov
mov
aad
shrl
mov
jae
imul
imul
lea
mov
xor
iret
cmp
jno
jmp
clc
mov
pop
ret
arpl
or
or
inc
mov
fadds
cs
pop
add
and
in
sbb
sbb
push
in
lods
fistps
xchg
cmpsl
lock
mov
rcrl
sub
pop
xor
xor
sbb
cmp
mov
sub
push
das
xchg
push
inc
decb
or
stc
and
push
or
or
test
scas
nopl
sub
mov
loopne
jecxz
xor
mov
rorl
scas
push
push
sub
mov
pushf
or
lods
mov
mov
jg
fidivl
jae
subb
aas
outsl
or
fistl
subb
ss
mov
rorl
mov
cmpsl
or
xor
outsb
icebp
popa
lods
and
ljmp
mov
cltd
ss
xor
lret
in
or
adc
and
xchg
pop
lds
ds
loope
movsl
loopne
push
data16
mov
lea
fstpl
mov
jns
jge
test
sbbl
int3
sub
dec
popf
lret
arpl
sub
testb
cmp
jo
loopne
rcll
push
shlb
and
ljmp
sbb
jne
jae
jg
dec
shrl
addb
inc
jg
daa
mov
ljmp
or
xchg
cmpl
in
fbld
push
cmp
iret
pop
xchg
lock
push
xchg
fisubrl
nop
xlat
and
inc
lahf
cmpsb
leave
daa
jge
pop
mov
aaa
aas
repz
dec
cmpsb
adc
movsl
pop
cs
sar
lcall
fmull
jecxz
dec
fsubrl
fdivp
pop
into
mov
hlt
jmp
xchg
notb
or
rcrl
andb
xchg
rolb
imull
push
xchg
dec
mov
ss
mov
xor
mov
add
pushl
icebp
mov
cmpsl
xchg
jb
add
test
fs
loop
sub
xor
push
mov
dec
aad
push
push
mov
in
push
jle
mov
aas
negl
push
cmp
popf
dec
jns
cmpsb
push
push
sbb
mov
inc
in
int3
jo
mov
xor
sub
out
mov
scas
add
int
adc
icebp
pop
scas
repz
push
out
dec
mov
cmpsb
mov
xchg
add
pop
cmp
xor
insl
pop
mov
or
adc
xlat
and
sbb
pop
and
add
or
xor
insb
cmp
movb
cmp
scas
or
aas
inc
sub
aam
sti
mov
adc
jge
dec
xchg
sbb
int3
mov
mov
adc
stos
fcomps
out
ss
out
imul
aas
insb
mov
jns
je
fcomp
sbb
and
cmp
pop
scas
ljmp
push
mov
mov
pop
jae
sbb
inc
adc
cmp
loope
ljmp
imul
ja
daa
xchg
pop
or
push
cmp
adc
ss
cmp
mov
and
cmp
pop
loopne
adc
adc
cmp
lds
pop
sub
aad
icebp
cltd
cli
cs
js
out
sub
sarb
popf
add
flds
sbb
nop
xor
fldl
push
ret
mov
mov
aaa
aad
push
scas
jnp
lcall
fimuls
imul
mov
iret
xrelease
and
xchg
jne
mov
jbe
or
in
jo
cltd
sbb
xor
test
dec
aad
insl
push
fcomp
out
add
xor
insb
xchg
push
test
insb
add
cs
out
aas
inc
xchg
cmp
push
jno
mov
push
push
stos
std
mov
sbbb
iret
mov
jns
pushf
or
jbe
test
jbe
mov
adc
or
jb
mov
push
sbb
cmp
cmp
inc
add
cmc
loope
sub
xor
iret
iret
xchg
lods
jbe
fwait
aad
or
and
push
pop
ljmp
xor
insl
out
push
daa
push
fisubrl
sbb
sub
pop
dec
call
adc
test
and
fidivrl
jp
mov
insl
dec
mov
add
sub
cmp
aaa
imul
cltd
jnp
or
mov
adc
fisubrl
fimuls
bound
push
inc
or
cmp
jp
les
fs
ret
pop
xchg
dec
xor
fisttpll
gs
push
jge
rcrl
cmp
jp
sahf
sbbl
sbb
mov
or
aam
cmpsb
out
jo
es
jne
inc
fwait
dec
sbb
pop
add
lahf
mov
mull
xchg
push
subl
pop
push
xor
dec
jmp
es
and
insl
sti
or
pop
test
test
fisttpll
mov
stos
clc
push
xchg
pop
cmp
jno
ret
push
mov
aam
clc
ds
loope
mov
pop
imul
daa
aas
cmpsl
lahf
xchg
mov
orl
cmp
add
ds
or
pop
mov
mov
or
fistpl
fstl
and
pop
call
imull
cmc
or
test
add
test
lea
pop
jle
cmp
insb
mov
xchg
addr16
sarb
jp
jne
das
or
inc
or
inc
mov
xchg
ss
mov
sbb
sub
icebp
or
cmp
jle
mov
jno
in
orb
test
or
imul
test
pop
aad
xchg
jge
mov
test
xchg
orl
mov
sbb
jmp
pop
fistl
mov
loop
add
cmc
add
mov
jge
pop
jne
cmc
pushf
jg
xor
xchg
xlat
or
mov
add
les
aaa
into
and
lret
cmp
lea
inc
sbb
insb
mov
iret
ret
arpl
nop
sub
cmp
outsb
outsb
sbb
outsb
xchg
mov
jp,pt
xchg
loopne
mov
cwtl
rcrb
push
cmpsl
cmp
popf
cmp
push
xor
pop
dec
mov
imul
ret
je
sub
out
inc
in
mov
mov
insb
mov
inc
out
pop
sbb
or
mov
fsubrs
mov
or
mov
mov
sbb
ret
xchg
cld
lods
dec
ds
dec
mov
xlat
adc
adc
pop
sbb
mov
adc
fsubrl
dec
cmp
movsb
mov
out
jg
mov
pop
xchg
xchg
xchg
sub
jns
nop
fmuls
shlb
fnstenv
scas
rorb
fstps
fwait
pop
shlb
inc
inc
and
inc
or
and
sub
mov
lods
jb
rcrl
jne
pop
icebp
inc
cmp
xchg
sbb
cwtl
mov
adc
ret
mov
mov
call
mov
enter
test
sub
out
mov
arpl
stos
lret
dec
jg
xchg
mov
pop
or
push
jecxz
push
fisubl
subl
pop
in
mov
xor
fwait
daa
das
ja
mov
xchg
testb
jbe
mov
mov
cld
jns
mov
testl
add
ja
mov
nop
arpl
jae
out
mov
mov
sub
mov
xchg
push
mov
ljmp
xor
movsl
sbb
fsubrp
xchg
int3
dec
hlt
cmpsb
sub
roll
adc
pop
orl
xchg
int3
imul
sub
lock
jecxz
mov
inc
push
cmc
fs
sub
jmp
pushl
dec
call
pop
dec
addl
test
push
or
stos
mov
jo
adc
cld
or
cmp
sbb
adc
mov
xlat
es
jne
mov
cmp
sbb
shlb
aad
pop
jge
pop
imul
popa
pop
adc
mov
sub
ljmp
repz
adc
rorb
out
nop
testl
ret
inc
loopne
jg
cmp
or
sbb
sbb
cmp
add
and
dec
lret
sbbl
test
cwtl
sub
fistl
and
mov
xchg
loope
lods
jns
xor
sub
cld
filds
aad
cwtl
jnp
ret
inc
xchg
mov
and
jmp
dec
mov
lea
xor
jle
ret
mov
test
lods
mov
sub
and
jl
pop
xor
add
loope
xlat
jle
xchg
ljmp
xlat
inc
lret
lods
or
ja
and
arpl
pop
mov
enter
dec
jne
cwtl
shl
fcomip
bound
lcall
jmp
push
stc
or
aaa
jge
mov
int
in
pop
pop
outsl
dec
repz
leave
in
stos
jne
je
mov
cmp
jp
test
mov
push
or
mov
int
fildl
sahf
rorl
mov
arpl
cmpsb
lret
or
fwait
in
adc
outsb
lods
pop
les
push
gs
or
movl
pop
sbb
test
lret
enter
movsl
xchg
decl
push
lock
mov
xchg
out
into
test
mov
and
dec
fcomip
cld
clc
sub
pop
pop
mov
add
shl
and
sar
rorl
cmpsb
push
mov
and
mov
mul
test
xor
imull
adc
addr16
xor
jg
stc
inc
cmpsl
mov
pop
adc
push
lock
pop
cmp
pop
aaa
xchg
mov
ss
or
push
fcompl
daa
and
inc
nop
mov
test
insl
lods
cmp
iret
ds
push
test
pop
mov
xchg
add
lret
pop
dec
cmp
adc
icebp
push
bound
lret
ljmp
mov
fchs
cwtl
enter
shrb
adc
mov
sub
cld
mov
lret
and
in
cmp
inc
or
cmp
out
aaa
sub
scas
mov
sahf
mov
out
aas
mov
xlat
call
out
inc
sbb
dec
sub
cltd
cmp
aas
gs
mov
icebp
lret
sbb
push
xor
adc
push
cmp
inc
jl
adc
add
es
popl
push
dec
int3
xchg
jl
aam
dec
sub
inc
daa
xor
xchg
inc
inc
ds
sub
ds
mov
or
pusha
sub
jmp
jb
mov
dec
shll
mov
add
fdivl
loop
int3
jl
xor
cltd
push
mov
mov
pcmpgtd
push
push
mov
sahf
sub
or
mov
cmpsb
xor
lods
loope
out
jbe
cmp
cld
out
adc
loope
loop
shrl
les
cli
js
enter
ficoms
mov
sbb
inc
imul
data16
adc
pop
inc
pop
pop
jecxz
roll
inc
cmpsl
jns
adc
or
and
mov
mov
xchg
lods
push
sbb
push
jbe
out
xchg
push
xchg
ret
and
fcomps
add
pop
jne
and
test
int3
cli
out
adcb
mov
out
cs
mov
pop
mov
jecxz
test
jne
xor
clc
mov
sub
fwait
adc
mov
inc
xchg
mov
or
scas
lods
int
and
pop
adc
aas
aam
push
push
loopne
xchg
mov
out
push
pop
lea
rol
movhps
dec
sti
pop
sbb
jno
adc
ss
dec
repz
xor
aas
outsl
stos
inc
jp
and
jb
jbe
les
into
out
pop
sub
ds
push
pop
sbb
in
xlat
or
add
insb
popf
notl
fs
std
ss
daa
mov
mov
out
xchg
lods
out
fwait
or
sbbl
dec
stc
popl
xchg
out
dec
xchg
pop
leave
incb
push
fisubrs
sti
inc
cmp
mov
popa
enter
imul
fucomip
xchg
inc
jbe
jno
push
dec
sub
add
adc
aam
aaa
aam
pop
dec
and
in
dec
inc
outsb
push
imul
mov
ret
dec
enter
push
in
and
in
ja
inc
cs
inc
push
outsl
push
pop
pop
push
test
jmp
push
int3
mov
insb
xchg
inc
jmp
push
into
pop
cmpsb
jne
sbb
mov
outsb
sub
pop
aad
int
fmull
or
and
cmp
lds
jb
hlt
in
push
cmc
test
or
fwait
js
sub
nop
cwtl
mov
mov
cltd
cmpsl
lods
incl
imul
cmpsb
std
into
sahf
lea
sbb
sti
jle
sub
in
jo
jmp
lret
scas
aad
inc
or
jo
jbe
loop,pn
clc
mov
cld
jg
fcomps
pop
pop
mov
push
gs
call
mov
inc
int
lcall
jns
mov
pop
adc
dec
movsb
xor
xchg
fmull
cmp
mov
fwait
addr16
add
gs
iret
testl
push
inc
jbe
add
loop
fistps
pop
lret
xchg
out
dec
test
scas
icebp
out
xlat
fistpll
or
jge
push
lods
inc
push
jae
push
inc
pop
mov
lcall
adc
sub
dec
push
cwtl
fwait
xchg
fstl
aad
inc
popf
pop
pop
mov
into
test
xor
mov
xchg
jmp
jp
xor
ds
pop
lret
dec
lods
add
movsb
dec
fists
push
adcb
mov
decl
imul
enter
mov
or
xchg
xchg
cmp
adc
sub
das
stos
dec
adc
dec
jg
or
xchg
pop
fcom
jp
push
std
jle
and
sarb
in
mov
add
sub
cmp
sti
aad
mov
sub
add
das
int3
inc
jno
cmp
jnp
rcl
aaa
jno
lods
inc
push
mov
out
pushl
sahf
popf
and
dec
sbb
pop
aas
subl
iret
hlt
subl
fsubl
in
inc
inc
pop
js
ret
insb
xchg
or
mov
repz
jno
roll
inc
dec
repz
aaa
sbb
outsl
cmp
or
mull
push
es
cmpl
andl
add
xor
loopne
test
outsl
push
sub
shl
mov
mov
test
inc
test
and
xchg
jae
push
aad
outsb
into
insb
mov
movsb
arpl
mov
pop
popf
lock
adcl
cmp
jae
push
cmpsl
testb
xlat
jecxz
cmp
jbe
movsb
test
xlat
sub
xchg
and
gs
pushf
adc
or
call
pusha
cwtl
inc
cmp
inc
mov
jp
cmp
sti
or
lret
xchg
test
jne
mov
orl
lds
mov
inc
ss
js
ds
cmp
shlb
fcoms
jle
adc
cwtl
fbld
inc
inc
xchg
mov
mov
inc
mov
nop
mov
int3
popa
js
outsb
insl
mov
arpl
cmp
jecxz
fists
int
bound
cmp
xor
lahf
icebp
push
jl
cmc
mov
movsb
mov
repnz
imul
or
loopne
xorb
fcmovu
push
jnp
cld
and
push
sub
les
dec
ret
mov
mov
push
stc
out
mov
sub
in
or
inc
sub
mov
mov
pop
xor
push
push
or
out
outsl
les
pop
jae
mov
in
icebp
mov
cli
sbb
setp
adc
cwtl
push
iret
daa
sar
sub
xor
pop
xor
push
push
jns
or
popa
jno
and
test
push
scas
repz
mov
cs
fsubl
je
mov
hlt
fldl
jecxz
or
cltd
jl
movsb
inc
sbb
icebp
and
jb
pop
insb
push
loope
ss
pop
xchg
mov
cwtl
int3
sbb
cmp
loop
jne
lahf
pop
pop
pop
loope
dec
andb
nop
pop
dec
fldcw
rorb
cs
xorb
loopne
mov
pop
inc
mov
mov
hlt
mov
repz
sbb
je
fmuls
jbe
adc
mov
sbb
or
mov
adc
sub
xor
movsl
jge
mov
inc
sbb
jle
clc
xchg
push
and
xchg
out
mov
call
jge
insb
int3
sub
xor
adc
aam
in
fimull
mov
pop
sub
cmpsl
jnp
mov
xor
add
jmp
sub
ficoml
pop
ss
sbb
xchg
mov
push
sub
jecxz
lcall
pusha
fisubrs
jns
lods
mov
jmp
mov
dec
add
cmp
xchg
pop
pop
or
shr
sub
lahf
test
jo
or
push
imul
out
loopne
cmp
pop
add
adc
out
adc
jmp
xchg
and
sbb
orb
xchg
daa
fsubr
out
mov
scas
and
sbb
gs
xlat
fdivs
lahf
push
or
jg
mov
add
popa
rcl
mov
popl
mov
fs
mov
out
push
pop
dec
and
aaa
out
int
outsb
sbb
test
mov
inc
stos
xchg
pop
lret
dec
add
dec
xchg
insb
cvtdq2ps
or
insb
sbbb
mov
les
dec
stos
inc
fs
hlt
movsl
inc
push
ds
push
sub
movsb
test
lcall
jbe
adc
add
call
rcll
imul
dec
sbb
ret
adc
adc
xchg
xchg
test
outsb
dec
xor
mov
mov
cli
sbb
out
adc
mov
xor
outsl
mov
nop
adc
pusha
xchg
notb
push
sub
add
icebp
adc
in
adc
push
cmp
jb
pop
fs
cmpsl
pop
or
out
xchg
je
pop
mov
aad
sub
push
bound
mov
mov
loope
movsl
inc
push
sti
bound
ljmp
xchg
or
xchg
sub
pop
js
cwtl
push
cmp
lret
pop
out
jbe
mov
fcomip
aad
or
xor
jne
mov
jno
xor
mov
int3
loopne
jecxz
mov
pop
push
imul
jg
sub
sti
push
jp
xor
jns
add
outsb
mov
mov
loop
xchg
push
pop
shll
retw
test
adc
mulb
mov
mov
inc
mov
ss
jle
or
push
popf
data16
pop
jno
pop
rclb
xchg
push
xor
cld
or
jbe
aaa
xchg
test
dec
jbe
or
lock
sbb
testl
push
fistl
and
cwtl
pop
divb
push
movl
or
cmpsb
adc
pop
inc
mov
mov
insl
daa
rorb
push
lock
aas
cmp
jg
popf
call
push
xchg
xorl
les
popf
jb
sub
ljmp
sub
lea
pop
jp
sbb
mov
push
sahf
addb
xchg
inc
stc
pop
pushf
pop
mov
mov
mov
jmp
ret
outsl
inc
mov
and
dec
cs
negb
sbb
imul
mov
imul
cmp
push
dec
out
cwtl
pop
jg
mov
mov
pop
or
push
sbb
pop
test
cmp
mov
in
xchg
xor
dec
push
xor
jmp
jbe
aad
pusha
lods
movsl
imul
pop
call
xchg
test
cmp
mov
xchg
int3
mov
xchg
je
jl,pn
sub
or
mov
jmp
lret
imul
add
stos
lret
or
popa
mov
mov
dec
hlt
dec
pop
xor
cwtl
and
jg
xor
pop
sbbl
xchg
cmp
je
xor
and
loope
jecxz
jle
lret
scas
popf
mov
insb
scas
push
and
cmp
mov
mov
idivb
lds
pop
inc
fsubl
push
mov
scas
or
dec
imul
sti
fiadds
mov
and
ficompl
jae
add
inc
or
sahf
filds
mov
loopne
cmpsb
adc
push
icebp
idivl
mov
add
mov
xchg
fwait
mov
and
push
and
mov
jge
hlt
pop
cmpsl
clc
add
mov
pop
loope
add
scas
popf
sub
xchg
mov
or
pand
or
lret
push
mov
push
push
inc
gs
cmp
out
mov
jle
lods
test
xor
mov
or
jbe
push
mov
and
rcrb
in
mov
push
mov
xchg
fdivr
sub
outsb
mov
ret
test
mov
mov
das
out
das
outsl
fiadds
andb
ror
lods
adc
or
push
inc
gs
dec
decb
sbb
add
mov
scas
aam
fwait
sbb
faddl
insb
dec
shlb
stos
movsb
lcall
and
test
lds
inc
pop
adc
inc
xchg
jle
fdivrs
addr16
inc
testb
pop
mov
sub
cwtl
ret
dec
je
mov
out
or
iret
mov
movsl
sub
dec
repnz
int
enter
xchg
daa
pop
mov
mov
pop
es
shll
mov
xchg
push
xchg
or
push
sub
xchg
xchg
jbe
test
mov
out
inc
repz
int3
xor
xor
movsb
and
movsl
popf
adc
loope
stos
cld
gs
repz
pusha
in
or
xor
jg
pop
mov
lcall
pusha
cs
sbb
cmp
push
and
scas
pushw
stos
ret
das
mov
cmc
in
pusha
jno
pop
push
into
cmp
movsb
mov
call
or
sbb
shll
jnp
ljmp
jle
out
lahf
out
out
and
mov
add
hlt
lret
ret
pop
mov
sbb
cli
xor
fdivrs
aad
pushf
xchg
dec
mov
inc
cli
in
adc
xor
shll
cmpsl
xor
vpslld
popf
popf
nop
pop
popa
push
xchg
fstpt
fldenv
das
icebp
push
aas
cmpsb
inc
gs
out
cmc
adc
stos
loope
push
sub
mov
mov
inc
jno
fcompl
adc
aas
test
mov
mov
mov
add
jmp
add
and
outsb
push
bound
mov
rolb
add
mov
add
cmp
popa
adc
mov
dec
add
ja
iret
ljmp
lret
jno
inc
jo
jle
pop
dec
xlat
jbe
mov
bound
sarb
call
sbbl
cmp
pushf
sbb
inc
pop
mov
mov
add
repz
mov
lds
push
shrb
fwait
mov
sbb
das
adc
jo
movsl
pop
xchg
xor
mov
sarl
stos
icebp
add
ficompl
scas
add
fwait
mov
mov
sub
jo
jbe
jns
xor
xchg
les
adc
pop
test
ret
std
sub
or
sub
out
cmpsl
inc
mov
push
std
ds
sub
push
and
add
arpl
xchg
in
dec
imul
mov
rcr
mov
testb
ljmp
xchg
push
dec
and
ret
call
xchg
mov
jb
int
jbe
adc
test
movsb
jnp
ss
sub
aaa
das
loop
std
out
jl
cld
lods
push
in
cwtl
mov
fcmovnu
insl
add
dec
ja
mul
cltd
sbb
shlb
decl
push
sbb
push
jge
scas
push
push
in
pop
push
lahf
clc
in
xor
insb
mov
cmp
cmpsb
lcall
xor
xchg
dec
out
lds
out
cwtl
jecxz
jmp
lea
insl
sub
pop
push
stos
sahf
push
ss
divb
ret
subl
mov
mov
repnz
xlat
jmp
psrad
mov
cmp
dec
lods
mov
or
xchg
mov
xchg
pop
sub
push
imul
jnp
mov
push
ja
sbb
nop
fsubp
and
outsb
push
movsb
inc
clc
stc
stos
sbb
flds
push
lret
xchg
push
pushf
decb
outsl
mov
cwtl
push
inc
in
movsb
adc
inc
cltd
push
popf
pop
ret
lcall
cmp
mov
icebp
loopne
xchg
fstpl
sbb
popa
fdivr
jns
or
xor
cs
mov
pop
mov
out
jo
inc
das
movsb
setbe
push
add
repz
mov
loopne
push
test
add
xor
xchg
das
decl
pop
nop
dec
mov
pop
cwtl
in
inc
sub
xor
mov
lcall
dec
or
stos
icebp
aas
inc
inc
pop
std
lds
adc
stos
ficoms
push
push
mov
jbe
sbb
lret
or
in
jns
and
pop
fisttpl
xchg
outsb
jp
adc
je
mov
mov
aaa
xchg
push
lods
adc
psrlw
and
xlat
sti
mov
lret
sbb
jns
sub
sub
adc
insl
and
stos
push
sub
push
cltd
jns
jns
mov
xchg
sub
outsb
insb
int
test
and
mov
pop
ja
cmp
dec
bound
stos
out
mov
fwait
je
in
mov
out
pop
enter
repz
lea
sbb
cltd
mov
lret
or
mov
adc
add
jno
stc
xchg
test
xor
jmp
pop
xor
adc
lcall
push
cli
sbbl
sbb
fstl
mov
xorl
sub
movsl
into
xor
pop
mov
mov
sbb
push
ds
js
xor
cmp
into
insb
inc
adc
lds
outsb
bound
dec
mov
negb
sub
jl
outsb
add
sub
push
enter
inc
mov
add
xchg
pusha
leave
fdivp
test
push
jmp
movsb
hlt
sbb
rclb
pop
xor
jae
or
repnz
xchg
dec
xchg
fdivrs
lret
and
ds
loop
push
shlb
xchg
in
mov
stos
mov
push
push
xor
loopne
aad
cs
les
lds
mov
sbb
mov
data16
aam
ja
or
lods
pop
xchg
and
sti
push
jmp
orl
lcall
mov
jbe
filds
xchg
pop
add
in
add
inc
jns
mov
xchg
or
dec
out
xchg
test
push
mov
sbb
cs
adc
js
movsl
in
xchg
sbb
das
mov
lahf
pop
mov
cld
adc
repz
xchg
aaa
in
mov
stos
out
adc
inc
dec
jecxz
push
and
xchg
cwtl
lock
inc
sub
lods
dec
xor
mov
jecxz
xchg
xorb
mov
test
cmp
and
mov
cmc
out
and
in
mov
xchg
mov
sub
add
mov
mov
cs
mov
sub
ret
mov
nop
icebp
mov
repz
mov
add
push
or
jp
adc
cs
cmpsb
dec
inc
push
xchg
idivl
in
dec
mov
xor
and
mov
lock
xor
mov
mov
mov
jge
and
sti
mov
jecxz
mov
movsl
fldt
jb
pusha
int
adc
mov
aas
fimuls
adc
imul
nop
and
mov
jmp
push
scas
inc
pop
adc
mov
jle
popf
sub
out
mov
icebp
jbe
loopne
cmpsl
fisubs
loopne
not
dec
ret
and
mull
int3
push
mov
movsl
pop
push
pop
stos
aad
xchg
mov
daa
mov
xchg
mov
sbb
ret
adc
int3
xor
aam
pop
adc
pop
sbb
xchg
jne
ret
lret
mov
jno
sub
cmp
cmpsb
test
int
rorb
frstor
pop
bound
or
sbb
mov
mov
std
add
popa
notl
and
jl
push
mov
add
aam
dec
lret
aam
push
inc
int3
mov
rcrl
repz
xlat
push
lock
mov
ret
ja
pop
xor
lahf
int
int
mov
popf
ret
and
xchg
add
test
movsl
dec
mov
ja
push
test
jp
cmp
pop
xchg
sbb
adc
mov
jp
daa
jns
mov
lds
push
ds
mov
mov
mulb
cmp
cld
jp
xor
push
xor
in
test
pop
cltd
sbb
pop
push
xlat
ljmp
shrb
cmp
fiaddl
popf
in
cld
ret
les
jbe
lcall
jbe
jecxz
mov
mov
stos
add
inc
outsl
emms
pushf
pop
or
cmpsl
shrl
popa
xor
mov
sarl
pop
jle
dec
pop
repnz
les
push
or
out
ret
pop
hlt
jl
cmp
jle
adc
cmp
xchg
and
inc
pop
rcll
mov
lcall
shrl
aad
sar
scas
scas
das
aad
or
ljmp
loope
lret
mov
aaa
pop
inc
add
pop
and
hlt
pop
notl
out
das
out
fdivl
push
and
daa
adc
rcl
bswap
jnp
jge
into
add
outsb
fmuls
out
les
pop
cmpsb
mov
jecxz
movsb
je
lret
orl
xchg
outsb
ja
je
clc
ljmp
mov
pop
ljmp
bound
cmpsb
stos
jb
mov
mov
mov
push
lahf
mov
xchg
cmc
aad
pop
out
add
xchg
add
xchg
push
xchg
xchg
pusha
add
lock
add
imul
sbb
les
add
in
pop
mulb
push
int
cli
mov
add
ds
mov
and
out
and
mov
adc
jp
pop
jo
int3
mov
mov
add
adc
dec
stos
mov
lock
jecxz
frstor
xor
daa
sahf
icebp
pop
sbb
repnz
iret
rorb
fistpll
cmp
mov
push
dec
outsb
in
pop
cmp
subl
mov
hlt
push
xor
fcmovbe
shlb
inc
push
and
mov
scas
shl
cmp
mov
shl
cmp
and
sti
pushf
lods
and
shrb
call
je
insb
pop
fisubs
xlat
popf
rorb
add
imul
pop
clc
push
out
stc
add
out
lahf
push
stc
cmp
shll
call
dec
push
lahf
mov
ljmp
push
xor
cmp
sbb
jle
data16
mov
or
pop
or
xor
jnp
xor
xor
cmp
fbstp
push
and
pop
mov
jle
or
fbstp
popf
dec
hlt
xchg
imulb
imul
in
aas
imul
adc
sub
xor
pop
out
cmpsb
xchg
jle
sub
jl
pminsw
lock
and
xchg
rolb
out
loop
cmp
xchg
data16
aad
mov
lcall
int3
pusha
push
cmc
or
push
push
lret
sbb
pop
jmp
int
in
dec
push
imull
add
or
dec
adc
int3
xchg
dec
into
insl
repz
pop
test
and
aam
push
mov
mov
jne
add
pop
or
inc
std
test
data16
inc
xor
mov
sbb
dec
dec
inc
scas
xchg
outsl
ja
fsubrs
or
cld
mov
hlt
fldcw
testl
rcrl
mov
movsl
lock
jmp
scas
xor
cs
adc
jp
outsl
fnstenv
mov
and
sub
out
pop
ja
xchg
mov
inc
in
sbb
hlt
lea
rcrl
imul
xchg
lods
ja
cltd
xchg
cwtl
jl
push
mov
dec
orl
mov
xchg
mov
fisttpll
sbb
adc
nop
int3
lcall
cwtl
gs
mov
inc
xor
repnz
push
ret
and
addr16
and
stc
cwtl
sbb
adc
push
push
mov
lea
sub
push
mov
inc
sub
imul
jbe
cltd
cmp
aaa
je
out
in
mov
mov
mov
dec
sbb
cmp
xchg
mov
jg
aas
xchg
add
aas
adc
sub
fcom
pop
xchg
popf
mov
lock
sbb
xor
adc
jne
inc
xor
pop
pop
int
inc
into
cmp
jmp
adc
cmc
cmpsb
mov
jecxz
mov
push
jle
pop
aaa
mov
or
inc
fdivrl
xor
fstpl
pop
sti
mov
sub
mov
and
out
int
jno
push
dec
cli
loope
cmp
cmp
ja
incb
outsl
iret
pop
movsb
sbb
mov
pop
sbb
push
shufps
movsl
add
pop
fldpi
stos
mov
iret
nop
pushf
adc
and
sub
add
faddp
mov
push
pop
in
sub
pop
dec
mov
sbb
mov
mov
nop
mov
sti
push
jae
add
in
loope
add
repz
fiaddl
int3
add
dec
sub
mov
fucomip
lock
push
mov
daa
jl
rcpps
lret
push
in
inc
pop
out
shrl
aas
sub
xor
xor
xchg
jmp
ja
rorl
pusha
push
cmp
push
add
rolb
adc
cld
cs
es
mov
cmp
lods
jge
rcrb
aaa
scas
in
lahf
xor
sbb
fxch
test
ljmp
cmova
inc
mov
add
or
xor
cmp
sub
push
lods
lea
pop
lods
sbb
neg
sbb
movsl
add
or
ljmp
outsl
adcl
mov
pop
jns
lds
mov
movsl
in
mov
popf
in
mov
or
sub
or
push
jae
mov
imul
dec
mov
es
cmp
jge
orb
jns
or
stos
repz
sub
cmp
stos
iret
sbb
addr16
inc
outsl
cmpsb
pop
fildll
mov
jae
add
pop
stos
pop
xor
jge
pushf
push
push
into
dec
js
mov
fucomp
lea
js
sbb
mov
ja
loope
call
shl
cmp
xor
andl
mov
repnz
lahf
shlb
mov
incb
adc
xor
stos
sbb
lcall
hlt
xlat
add
dec
inc
cmpsb
out
mov
ljmp
dec
aad
xchg
xor
jbe
js
push
lea
pop
xchg
and
inc
hlt
imul
es
push
frstor
add
loopne
lret
and
repz
mov
cmpsb
out
xchg
das
adc
sbb
stc
sbb
or
mov
xchg
loopne
push
sub
xchg
aam
cs
adc
xchg
jge
hlt
jns
into
and
imul
xor
lods
inc
push
cld
in
sbb
lods
push
xchg
sbb
in
aam
rcrb
lcall
adc
and
xchg
sub
pop
sarb
xchg
call
mov
pop
popa
fadds
enter
fsubrl
push
inc
data16
xchg
leave
jmp
gs
jne
push
cli
loop
into
dec
ja
and
xchg
mov
xorl
cmp
mov
cmp
dec
stos
scas
or
insl
mov
mov
int3
mov
enter
push
jns
movsl
mov
cs
push
pop
arpl
int
and
out
jmp
and
mov
mov
mov
xor
sub
adc
in
movsb
repz
int
sub
std
dec
test
xchg
icebp
jl
add
jmp
mov
jge
cltd
dec
push
xlat
xor
gs
gs
test
pop
mov
sbb
insb
mov
mov
inc
mov
inc
push
fstpl
mov
inc
enter
repz
mov
mov
les
stos
xchg
ja
loopne
and
aad
adc
imul
mov
push
and
mov
rcrl
or
mov
adc
xchg
xor
mov
mov
roll
or
pop
out
xor
xor
add
cltd
ret
pop
ja
xchg
inc
push
iret
lret
cli
fcomp
hlt
inc
data16
arpl
inc
cmp
jo
adc
pop
lret
pop
dec
dec
xlat
popf
aad
cwtl
fidivs
in
ja
dec
loope
scas
xchg
ja
imul
int3
fidivrs
dec
out
leave
in
or
pop
lea
fsubl
pop
dec
push
adc
out
push
into
fbld
cmc
fstps
sbb
jge
mov
jmp
jo
push
pop
or
xchg
fwait
lahf
test
mov
in
stc
inc
cmpsl
punpckhdq
inc
shr
inc
pop
mov
in
xchg
imul
jbe
mov
jp
inc
lock
cmp
ja
cmp
pop
sbb
and
icebp
lret
cld
ja
push
in
into
fisubl
iret
dec
mov
or
aas
inc
xlat
ret
add
shrb
inc
insb
inc
jecxz
xchg
pop
sub
mov
ret
or
inc
pop
push
fwait
data16
shll
out
push
mov
dec
loope
dec
div
adc
cwtl
dec
cli
lret
dec
cmpxchg
arpl
or
dec
xor
hlt
and
es
xor
cmp
mov
call
mov
push
sahf
adc
pop
movsl
mov
or
call
jne
inc
mov
mov
fdivs
fnstcw
cltd
loopne
add
push
mov
lret
mov
jb
repz
cwtl
iret
sarl
xor
add
adc
jle
fbld
cmp
jne
shll
mov
in
or
lcall
out
pop
push
lock
jbe
stos
fildl
sbb
sub
mov
jns
or
push
fcompl
nop
in
push
cmpsb
lock
sbb
stos
jmp
xor
jbe
pop
rcll
mov
out
shll
and
or
push
aas
fistpl
push
mov
pop
jmp
push
arpl
jge
pop
fnstenv
in
pop
repz
pop
lret
adc
icebp
div
ja
outsl
add
scas
and
push
add
sahf
stos
pop
push
jp
test
push
cmp
ret
pusha
push
xchg
mov
andb
sarb
rclb
mov
cmp
xchg
dec
out
push
xchg
cmc
enter
jmp
push
int
inc
sub
cmp
lock
insl
inc
jbe
dec
repz
mov
mov
out
mov
cmp
loop
jo
and
insl
jg
popf
jnp
and
mov
cmp
pop
push
pop
inc
mov
cmp
dec
add
xchg
lret
xor
fsubrs
fwait
cmp
xchg
mov
int3
adc
jno
mov
iret
fcmovb
pop
iret
sbb
mov
adc
add
stos
hlt
jns
mov
mov
dec
popf
sahf
push
out
xchg
xchg
pop
push
call
or
outsl
insb
sarb
lret
jp
mov
in
jae
call
mov
ficoml
dec
sbb
cmp
mov
add
pop
adc
jecxz
fsubs
daa
or
mov
pop
fisttpl
adc
jb
ss
data16
jo
cmp
mov
push
in
mov
push
lret
jle
stc
mov
adc
ror
lahf
int3
dec
pop
lods
lds
stos
outsl
bound
lds
jns
fbstp
pop
insb
adc
push
js
loopne
mov
icebp
mov
or
outsl
je
fsts
sbbb
ljmp
cwtl
sahf
dec
int3
insl
or
pop
subl
in
sti
add
cwtl
int
insl
test
pop
cmpsl
popf
hlt
xor
data16
jo
and
push
stos
je
scas
out
test
mov
pop
jle
xchg
push
dec
mov
js
hlt
lods
sbb
jae
out
rcrb
inc
and
inc
or
mov
iret
xchg
mov
loopne
push
stos
fmull
push
ja
mov
das
sbb
jo
fs
ja
jl
mov
xor
adc
xor
pop
sti
call
jle
ljmp
cmp
int
mov
call
adc
divb
adc
cmpsl
js
pop
xor
mov
xchg
ds
mov
or
inc
lret
push
pop
mov
leave
cli
das
ds
xorl
mov
xor
sti
cmp
push
adc
das
lods
push
xchg
cmc
mov
jns
outsl
mov
pop
pop
jmp
fstps
dec
push
adc
jb
dec
pop
jp
xchg
shl
loope
cmp
mov
movsl
or
xor
arpl
and
add
pop
loop
jbe
icebp
roll
scas
mov
inc
xchg
mov
aas
mov
adc
and
mov
in
mov
movsb
jne
mul
pop
or
jg
jo
push
je
in
in
movsb
test
sub
outsl
addr16
ss
sub
pusha
and
xchg
loop
inc
mov
sbb
int
pop
dec
xor
iret
pushf
jae
push
rclb
aad
dec
xchg
jns
leave
pop
jne
test
enter
jbe
xor
sub
xchg
pop
in
xchg
shl
out
outsb
ficompl
cmpsl
sub
stc
dec
jmp
pop
or
inc
dec
push
mov
push
push
outsl
fmull
mov
push
fnstcw
and
out
loopne
jbe
mov
int3
lods
sub
test
cmpsl
sahf
stos
or
and
inc
cs
mov
xor
jno
sbb
nop
push
movsl
jnp
icebp
cld
test
sbb
xchg
xlat
das
insb
or
adc
mov
scas
dec
mov
cmp
and
stos
dec
test
or
fsubr
push
sbb
jo
leave
mov
ret
mov
pop
xchg
leave
pop
outsl
lods
out
mov
mov
jge
fnstcw
push
xchg
xchg
adc
decl
mov
stos
jge
fsts
push
sub
xchg
adcb
loopne
or
addb
scas
add
push
ret
sti
jmp
xchg
add
pop
divb
addl
mov
xor
jnp
mov
je
add
mov
stos
fstps
rolb
sub
loop
mov
sbb
jne
mov
out
pop
inc
les
rcl
bound
iret
in
or
xor
lock
mov
adc
sbb
pop
fldenv
sbb
scas
loope
movsb
xchg
pop
cltd
mov
xchg
mov
sbb
inc
and
shlb
inc
xchg
jb
mov
cmp
mov
pop
scas
jo
stc
mov
movsb
pushf
xlat
sub
nop
lock
dec
cmp
push
je
test
movsb
idivb
int3
js
fwait
cli
xor
aad
xchg
mov
and
sbb
xchg
arpl
push
lret
pop
pop
cld
sarb
xchg
and
iret
push
xchg
out
cmpb
dec
fmull
popa
stc
int3
cmp
sbb
lock
dec
add
jmp
cli
push
cli
repz
jle
test
mov
sub
clc
in
cmpsl
lret
add
andl
mov
leave
mov
je
mov
mov
or
ja
shl
adc
sarl
jnp
xchg
xchg
int3
cmpsb
cld
push
nop
jo
in
jl
dec
call
adc
jecxz
fidivs
mov
dec
rcl
aad
or
adc
push
es
hlt
lds
push
daa
dec
bound
adc
shrl
insb
jmp
or
dec
jmp
adc
add
popf
cmc
outsl
mov
lahf
or
mov
insl
loop
mov
xlat
mov
jns
push
sti
sbb
out
push
subl
data16
addb
outsl
jbe
lahf
adc
push
and
dec
leave
push
cltd
xor
push
out
addl
ss
les
sbbl
xor
aas
rolb
xchg
mulb
xchg
pop
xchg
shll
jnp
push
mov
mov
lcall
inc
pop
dec
rolb
cmp
push
or
mov
mov
fucomip
sbb
mov
sti
lea
xchg
mov
out
xor
outsl
push
imul
xchg
and
aad
mov
add
and
in
add
add
adc
or
sub
jle
insl
cmc
dec
fwait
cmpsb
add
shll
jns
dec
out
mov
shrl
lea
jno
mov
js
stos
test
pop
mov
add
xchg
jp
push
push
fbstp
fcmovnu
dec
sahf
jo
int3
cmpsb
in
mov
mov
add
xor
pop
inc
or
out
arpl
mov
ss
adc
insb
pop
outsl
in
cwtl
es
mov
jg
add
pop
pop
les
sbb
cmp
shr
les
enter
mov
into
add
aad
insl
cwtl
test
xor
cld
mov
inc
mov
add
sbb
inc
test
xlat
test
lds
fsts
fs
daa
subb
outsl
mov
mov
mov
clc
ljmp
and
in
or
sub
cwtl
sbb
shll
xchg
imul
add
pop
stc
or
in
icebp
jmp
add
xor
pusha
xor
addr16
imul
leave
cmp
in
fsub
sbb
sub
andl
bnd
lea
imul
ficoml
hlt
lcall
call
xchg
ret
iret
lret
pop
test
push
xchg
leave
loope
cltd
mov
mov
and
xchg
sub
add
loope
mov
mov
push
xchg
and
push
in
jg
xlat
cmpsb
divl
push
negb
stos
add
xor
adcl
addr16
movsl
mov
nop
mov
movsl
or
xchg
jp
add
mov
cltd
adc
cld
sar
sbb
cli
inc
divb
dec
jmp
imul
and
inc
jb
cltd
or
repnz
pop
cmp
imul
inc
movsl
cmp
popf
adc
fsubr
mov
fadd
addl
pushl
repnz
cli
jbe
out
lea
mov
sti
int
mov
iret
sub
icebp
call
loopne
mov
adc
jbe
ficoms
sti
sub
mov
iret
mov
push
ljmp
mov
push
int3
xchg
ljmp
xchg
add
and
std
fiaddl
jmp
fs
ja
mov
repnz
imul
lds
out
rcrl
jb
adc
int3
dec
mov
nop
push
test
xchg
push
and
push
and
cmpsb
test
out
jnp
mov
xlat
movb
lea
sti
sarl
mov
add
xchg
xchg
shr
mov
andb
push
mov
lds
mov
sahf
cli
xor
xchg
inc
mov
aad
adc
je
jnp
push
mov
and
inc
push
js
xchg
outsb
dec
add
mov
inc
and
outsl
push
js
in
add
inc
push
int3
ja
or
sub
cmpsb
in
pop
cmp
and
push
xor
call
loop
dec
or
pop
std
inc
fs
in
sarl
fs
cmc
jbe
out
xchg
out
mov
movsl
dec
or
add
test
xchg
ret
push
mov
clc
lret
add
push
stos
lahf
pop
inc
stos
xchg
lock
xchg
xor
sti
inc
mov
stos
xchg
not
out
cmp
out
cwtl
aaa
jno
push
std
jle
shl
ja
inc
daa
adc
xor
fmull
cmpl
sbb
push
jle
or
sti
and
test
push
xor
sub
mov
ja
ficoms
cli
sub
fnstenv
fs
stc
in
rclb
push
xchg
mov
xchg
test
inc
sti
ret
add
add
fcomps
xor
lcall
lea
and
push
push
addl
mov
and
push
test
dec
pop
int3
ljmp
add
out
dec
adc
cld
push
push
mov
push
cmp
int
idivl
dec
mov
adc
mov
rorb
mov
loop
xchg
xchg
lods
xor
ss
fneni(8087
test
xlat
add
gs
jg
sti
icebp
lock
adc
xchg
data16
ljmp
movsb
jecxz
decl
jbe
test
jno
inc
repz
xchg
mov
mov
ret
ss
ss
repz
stc
aam
pop
loope
mov
loopne
aad
xchg
push
test
push
mov
xchg
mov
mov
adc
mov
jb
lea
outsl
mul
dec
mov
xchg
ljmp
ja
or
and
bound
sub
scas
addr16
or
cmpl
mov
xchg
and
jnp
pop
andl
xor
adc
mov
test
jl
sbb
sti
mov
lea
fstl
movsb
jmp
cld
dec
movsb
or
std
scas
shrl
mov
js
aaa
mov
or
cmp
cmp
leave
sbb
xchg
int3
lea
xor
pop
jp
add
iret
cmpsb
lcall
mov
mov
sub
pop
mov
gs
jg
xor
cs
xchg
call
dec
mov
cld
adc
mov
mov
xlat
cmp
outsl
orl
xchg
or
pop
out
mov
xchg
shl
popa
xor
jno
mov
cmc
mov
psubw
inc
int
js
jno
stos
mov
pop
test
push
sub
mov
xchg
stos
xchg
ds
add
shll
mov
shrb
mov
mov
int
pusha
xor
xchg
push
dec
add
jmp
mov
sarb
movsb
cmp
xor
adc
bound
jecxz
sub
pop
sbb
test
mov
loop
adc
mov
outsl
aad
pushf
shll
and
mov
xchg
shrl
dec
xchg
jbe
xor
cmp
pop
lret
xor
mov
xor
insl
mov
popl
adc
mov
lods
popf
and
push
add
test
mov
sub
xchg
mov
ds
mov
nop
jne
mov
push
jnp
pop
test
inc
in
cwtl
sbb
rcll
test
shrl
xor
imul
mov
or
push
cmp
repz
ret
ret
push
fiaddl
jl
clc
push
ret
jns
adc
push
gs
mov
mov
push
int3
in
jb
orb
pop
fwait
sub
int3
xchg
aam
mov
call
test
sbbl
out
cmp
xchg
xorl
fdivrl
les
out
cld
mov
stos
test
mov
jge
ds
ficoml
outsl
shlb
lods
jbe
aad
std
adc
mov
dec
nop
push
aam
xchg
call
or
fst
inc
xchg
mov
sbb
xor
pusha
fistps
outsl
outsb
ret
ljmp
add
mov
jns
lds
mov
cmp
add
mov
cmp
lcall
int
mov
jl
jl
mov
out
fldt
push
sub
arpl
xor
shl
out
mov
add
inc
cmp
jp
shlb
cld
arpl
sahf
into
cwtl
fcom
and
outsl
mov
jmp
sub
cmpsl
mov
fsubrp
dec
std
bound
ret
cmpb
mov
xchg
lret
lock
nop
add
mov
mov
scas
mov
sbb
ja
mov
inc
push
or
inc
cmp
sbb
push
sbb
mov
push
fistps
mov
jmp
cmpsl
mov
ja
mov
stos
pop
add
sbb
xor
xor
pop
and
ljmp
inc
pop
sub
sub
mov
sub
aas
test
add
dec
pop
cmpsb
fsts
enter
insl
mov
popf
mov
sbb
jecxz
pusha
ret
adc
mov
shl
xor
imul
fdivrl
addr16
mov
dec
iret
push
mov
movsl
cmc
jmp
repz
in
out
cld
int3
lret
lret
call
xchg
dec
push
test
popa
inc
xchg
fldenv
fcmovnb
mov
sar
mov
in
fldt
out
or
push
sub
mov
rolb
loopne
cmpb
outsl
sbb
mov
or
mov
cmc
mov
or
jmp
xchg
sbb
jge,pt
jl
xchg
push
insl
cwtl
pop
loopne
lods
data16
in
imull
ret
dec
lock
cmc
mov
fwait
jne
int3
jge
jp
mov
mov
aaa
cli
push
pop
pop
xor
inc
adc
add
out
xchg
andb
cs
sub
dec
jmp
and
inc
sub
sub
dec
inc
pop
fsts
clc
testl
addb
repnz
cmp
xlat
sarb
shlb
out
mov
and
sbb
pop
adc
xorb
dec
filds
xchg
xor
ja
push
stos
mov
test
mov
fs
test
dec
js
addl
imul
es
xlat
repnz
fs
sub
pop
je
jnp
jb
pop
cmp
adc
cmp
push
inc
cmpsb
mov
outsb
xor
out
mov
pop
pusha
xchg
sbb
pop
out
adc
and
xchg
adc
mov
cmpsb
ljmp
inc
loopne
in
pop
mov
cs
loop
adc
push
xchg
xor
adc
adc
popf
jl
jns
mov
loope
pop
lock
xchg
out
inc
sbb
popf
stc
xor
pop
xor
fs
sub
out
mov
sti
loope
pop
test
sub
cmp
jge
out
and
mov
lods
mov
xchg
pusha
mov
xchg
aaa
and
lds
out
mov
insl
fnstcw
fidivrs
loop
loope
ret
sbb
addr16
mov
dec
into
xchg
int3
imulb
inc
scas
pop
push
dec
mov
fbld
xor
repnz
ret
mov
shll
xor
stos
inc
ss
or
jno
out
cs
fmulp
push
inc
mov
adc
addr16
xchg
xor
pop
rorb
lret
and
or
inc
push
pushf
cwtl
jbe
shrl
iret
ffree
lret
inc
jl
cmp
arpl
imul
jnp
fcmovnbe
scas
sbb
jge
push
lcall
mov
push
add
pop
test
ja
push
pop
sar
ljmp
inc
jns
repz
and
jg
out
js
mov
fiadds
push
sbb
leave
in
push
pushf
into
lods
pop
int
or
sti
push
lods
les
mov
cli
adc
mov
clc
stos
mov
inc
imul
xor
cmp
and
sub
sarl
movsb
sbb
xchg
in
std
cld
stc
or
std
and
bound
add
imul
pop
add
mov
lahf
leave
mov
xchg
fimuls
das
mov
push
test
and
push
xor
xlat
xchg
add
in
push
cli
rol
mov
or
adcl
pusha
add
inc
dec
push
iret
or
imul
das
stc
or
sub
inc
adc
jp
repz
pushf
ja
es
lea
jnp
dec
inc
js
push
std
pop
popa
lret
data16
lret
adc
aad
test
mov
mov
and
outsl
sbb
out
out
pop
rolb
push
test
orl
and
lret
pop
pop
ficoml
das
push
pusha
jns
and
into
inc
adc
inc
inc
cmp
nop
dec
lahf
stos
cmp
leave
test
pop
daa
jp
test
imul
jns
inc
test
sbb
inc
in
mov
pusha
xchg
jmp
mov
push
mov
std
adc
dec
lahf
push
jb
cmc
jp
jno
sub
dec
push
jp
fmul
out
push
roll
out
xor
push
pushf
xor
dec
aas
lds
mov
inc
mov
into
cli
and
insb
push
mov
ret
lahf
ja
sbb
mov
fildll
or
ds
adc
fisubrl
das
push
dec
push
shl
mov
jb
add
test
das
popa
fstpl
ljmp
xchg
out
pop
daa
movsb
sub
mov
dec
pop
adc
add
push
mov
jne
or
or
cltd
popl
ss
xlat
popa
add
push
outsb
add
outsb
lcall
popl
mov
mov
les
iret
xchg
dec
mov
aad
jno
jne
and
clc
mov
add
ljmp
pop
xchg
jp
inc
xchg
mov
push
push
sub
loope
insb
or
push
movsb
popf
mov
scas
jno
repz
rcl
jp
leave
les
test
fstpt
shl
icebp
lock
push
testb
or
sub
mov
fists
sub
dec
aas
xchg
test
imul
fsubs
pop
mov
les
stos
and
pop
loopne
ret
fcompl
rcll
idivl
das
and
jge
in
pop
mov
jge
pop
add
ds
push
iret
sub
jge
adc
data16
imul
fldenv
and
or
sbb
add
xchg
mov
addr16
xchg
daa
pusha
add
mov
incl
sub
aaa
and
push
mov
sbbl
mov
insb
stos
dec
push
cwtl
dec
inc
cmc
dec
mov
xchg
ror
push
push
push
xchg
sub
addr16
sbb
das
lret
mov
cwtl
mov
das
cmc
out
adc
jo
pop
dec
inc
jb
mov
mov
pop
inc
mov
jo
out
sub
stc
push
jmp
inc
into
mov
pop
outsl
imul
icebp
movsl
cld
ss
call
xchg
int
jno
das
rcr
mov
fisttpl
lods
daa
sub
shr
jnp
cmpps
xchg
or
xchg
xor
xchg
es
insb
gs
sbb
sub
sub
insb
jge
sbb
pop
cld
fmull
sub
jns
orl
fbld
xchg
clc
aaa
cltd
jg
or
cld
jbe
hlt
pop
lea
aas
cmpsl
jno
mov
sub
jl
lahf
lret
shl
xor
adc
mov
in
lahf
push
test
pop
fwait
sbb
dec
push
push
das
push
test
xor
insb
xor
dec
sub
inc
je
xchg
xor
pop
and
ja
mov
rcrl
repnz
mov
jne
adc
mov
mov
jmp
mov
arpl
sub
int3
aaa
fwait
and
add
xor
cwtl
dec
cltd
shrb
push
pushf
push
sbb
pop
pop
sub
rcll
out
xor
sbb
and
xchg
sbb
mov
dec
imul
jbe
mov
mov
dec
movsb
shll
mov
sbb
aad
or
and
pop
add
xor
push
andl
pop
adc
jbe
sbb
shrb
adc
mov
dec
pop
adc
rcrb
ja
inc
and
popa
xchg
cld
mov
xor
std
out
pop
aam
lahf
sub
rorb
mov
int
mov
add
sbb
push
dec
out
ret
add
imul
repz
aam
jl
mov
aas
xchg
aad
lods
jbe
xor
jbe
jmp
push
inc
inc
xor
movsb
inc
sub
push
fildll
fmull
ss
xor
xchg
mov
fisttps
jle
push
imul
xchg
int
daa
dec
in
test
sbb
stc
dec
test
fiadds
es
fldt
dec
cmp
ret
push
aam
push
push
stos
adcb
cld
push
imul
pop
enter
xchg
ret
pop
jnp
add
xor
inc
mov
jmp
add
rorb
sti
adc
jl
xchg
cld
adc
or
push
gs
jbe
lds
mov
pop
lcall
ret
lcall
lcall
rolb
int
mov
inc
shll
xchg
push
pop
xlat
sbb
mov
call
add
ret
cmp
js
xchg
mov
gs
lret
loop
inc
xchg
rcl
dec
popw
jne
mov
iret
je
stc
push
push
div
dec
imul
and
stc
xlat
add
mov
in
jp
cmp
mov
pop
loopne
sti
mov
and
mov
push
dec
xor
arpl
dec
bound
jnp
cs
or
enter
jp
shr
popf
bound
dec
cmp
inc
sub
ret
push
mov
cmp
and
mov
aam
movsl
test
push
loop
stos
xchg
xor
sbb
lret
pop
in
add
xlat
adc
add
stos
jl
cltd
and
mov
repnz
pop
ja
adcl
sbb
inc
dec
sahf
add
and
dec
out
lds
and
lahf
add
mov
push
dec
fsubp
dec
imul
mov
mov
lods
pop
adc
ja
aaa
inc
insb
mov
imul
and
add
mov
call
js
or
test
cli
jle
xchg
jno
icebp
seto
push
repnz
mov
mov
pop
add
jbe
lods
push
arpl
push
outsl
ss
sbb
mov
cmpsb
cltd
jns
movb
inc
pop
ljmp
rclb
push
ss
lods
outsb
push
xchg
jp
lods
arpl
jge
stos
call
fcompl
xor
out
dec
mov
fidivrl
cmpsl
sub
test
lret
rcl
cmp
int
insl
loop
inc
sub
outsl
iret
sub
pop
loop
or
lock
lods
jb
mov
mov
adc
aas
mov
inc
mov
shl
out
aaa
mov
adc
pop
and
lock
jle
push
in
les
leave
dec
xchg
inc
mov
insb
leave
adcb
test
jbe
cmc
sub
mov
cmpsl
cmp
stos
mov
cli
fcoms
or
shlb
rorl
inc
mov
ficompl
xchg
mov
mov
repz
lret
sbb
or
xchg
xchg
push
xchg
jp
dec
xor
ret
add
outsb
add
jb
repnz
xor
jg
cld
imull
inc
mov
adc
das
and
stos
rcll
icebp
pop
stos
mov
test
xchg
fsub
add
mov
cmpsb
xchg
mov
and
outsb
push
dec
mov
aad
subb
test
fisttpll
imul
das
mov
sbb
mov
mov
ret
test
enter
xchg
repnz
xorb
test
out
cmp
xor
jo
push
das
fs
shl
leave
jle
push
jne
ljmp
push
push
cli
in
stos
mov
xor
lret
outsl
rorb
xchg
inc
dec
fs
sahf
sbb
push
sbb
and
loopne
shrb
pusha
scas
push
jge
imul
xor
pusha
push
xorb
addr16
add
je
adc
outsb
jno
js
loop
adc
mov
mov
lods
dec
imul
sbbb
fwait
dec
into
into
and
push
loope
push
stc
lret
cmovno
outsl
and
icebp
insl
aas
xlat
add
notb
es
stos
movsl
out
lcall
inc
jae
or
out
pop
cmp
cli
sbb
rsqrtps
stos
cmp
lea
cs
sbb
push
jns
scas
scas
andb
stos
push
inc
fcmovb
cmp
test
xor
mov
outsl
ficoml
movsb
xor
mov
test
scas
lret
cmp
ficoml
xlat
adcb
repnz
leave
stc
pop
das
cmpsl
dec
loope
call
sub
sub
sbb
into
pop
jb
pushf
fisubrl
sbbb
add
adc
fstpt
stos
push
and
out
xchg
andl
jo
repnz
sbb
int3
insl
cmp
pop
lret
xor
pop
pop
aaa
xchg
xor
outsl
imul
clc
out
cmp
add
dec
and
pop
mov
push
mov
xchg
add
pop
xchg
jbe
fcomps
movsl
cmp
or
jne
cmp
lods
mov
cltd
int
dec
stos
xchg
inc
xchg
xchg
jae
mov
push
test
xlat
sahf
xchg
jnp
aas
mov
imul
arpl
cli
sub
add
push
pop
jl
cmp
lret
bound
aad
scas
imul
cmp
outsl
xchg
xor
rolb
lret
xor
jge
inc
mov
push
xor
xchg
xchg
add
sbb
repz
mov
add
divb
add
mov
mov
push
inc
icebp
into
lret
add
dec
iret
leave
xor
pop
mov
push
push
fsubrl
lcall
cli
daa
or
mov
daa
xchg
scas
sub
pop
adc
xor
adcb
cmp
pop
push
push
push
aad
push
in
jo
mov
into
or
mov
mov
fisubl
mov
pop
out
dec
loopne
cmc
ljmp
inc
ret
pop
popa
aad
pop
or
sar
xchg
sbb
pop
sub
aam
loopne
push
push
std
mov
fistpl
push
cltd
jnp
loopne
pop
andl
aad
jecxz
outsl
loopne
daa
js
mov
jns
sahf
push
mov
push
mov
add
mov
and
bound
scas
hlt
adc
sbb
push
cmp
push
into
stos
xchg
dec
inc
fisubl
test
jmp
jg
in
mov
iret
adcb
jg
adc
out
insb
lret
in
inc
inc
mov
cmp
data16
mov
gs
pop
inc
jp
jno
dec
jns
ja
jno
jge
rorb
in
ds
jne
jno
cmpsb
inc
outsl
inc
ret
xchg
cmc
lret
int
or
or
nop
push
data16
or
rol
popa
arpl
xchg
fnstsw
int
and
cmp
mov
jb
cmp
xchg
imul
mov
cmc
lcall
movsl
fistps
test
fists
mov
loope
cli
mov
adc
jmp
adc
int3
mov
fwait
cli
jle
les
clc
cltd
mov
xor
repnz
or
xchg
cs
sbb
mov
int
xor
bnd
mov
hlt
cmp
stc
push
imul
repnz
mov
out
xchg
pop
adc
pop
sbbb
test
ljmp
iret
arpl
test
test
push
and
lea
pop
outsl
aad
fdivr
xorb
and
shll
mov
sbb
jb
jae
push
cltd
pushf
or
inc
das
out
mov
mov
leave
in
shlb
mov
incb
out
inc
xchg
inc
inc
mov
lods
inc
adc
lock
dec
aad
mov
mov
fcomps
jno
and
inc
leave
cmpsl
std
pop
xor
add
cmpsl
out
cmp
iret
xchg
inc
xor
mov
inc
pop
pop
xchg
dec
jl
pop
dec
ficompl
xorb
lods
mov
pop
dec
xchg
sbb
and
inc
mov
int
scas
and
ret
mov
fwait
jne
popf
mov
mov
lea
pop
dec
js
inc
xchg
adc
xlat
clc
or
adc
lahf
and
aam
aaa
mov
leave
xchg
bswap
mov
mov
fdivrs
orl
jns
xor
add
push
hlt
outsb
xor
daa
fbld
push
insl
push
daa
gs
sub
sub
adc
xor
jno
inc
movsl
ja
jg
mov
mov
out
push
xchg
imul
adc
adc
cmc
in
push
out
out
xchg
mov
pop
fldl
inc
mov
sarl
clc
mov
push
or
cli
int
or
cmpsl
add
mov
mov
sub
xchg
outsl
adc
mov
test
movsb
in
jnp
jge
ss
mov
js
push
mov
insb
test
or
rcl
push
test
and
jne
push
mov
aas
or
mov
jge
jl
rol
dec
push
xor
cs
or
mov
xor
mov
dec
mov
pop
mov
sub
rclb
jmp
cmp
notb
adc
sar
cmp
mov
or
jl
insl
out
mov
xchg
das
dec
or
mov
mov
cmp
sub
or
inc
push
loope
and
push
js
pop
push
jae
shll
cmpsb
data16
sbb
add
sahf
shll
jb
sarb
out
cmp
add
push
cmp
arpl
jb
sub
mov
loop
cld
xor
jmp
and
xor
aaa
lret
add
out
mov
add
inc
lret
dec
je
lods
loope
and
ljmp
mov
in
push
rcrb
aas
xor
push
dec
in
jns
in
cmpsb
mov
mov
in
fcomip
add
loop
shlb
push
icebp
int3
cltd
xchg
inc
mov
jmp
pop
cmp
leave
xchg
rcl
mov
add
loop
inc
mov
mov
stos
das
push
sahf
cmc
mov
push
loopne
test
int
les
sub
mov
inc
mov
iret
xchg
out
cmp
aam
scas
filds
sbb
lcall
dec
icebp
jmp
fsub
es
inc
push
mov
ret
fsubrl
mov
mov
cmp
cmp
rcrl
je
into
lods
fcmovu
xor
in
and
push
insl
cmpl
push
inc
mov
jge
idivb
adcl
lods
push
lret
xchg
mov
fcomps
xor
push
data16
lret
push
movsl
adc
js
inc
out
xchg
ficomps
or
jne
mov
scas
pusha
or
and
xchg
or
adc
mov
adc
push
lods
adc
es
fnstenv
and
loop
adcl
pushf
jo
inc
cli
fimull
jne
lods
in
xor
cmpsb
sbb
pushf
jl
leave
popa
rcl
mov
outsb
adc
cmp
push
mov
rorl
leave
movsb
ja
pop
imulb
test
sbb
jno
add
mov
mov
sarb
ficompl
push
cmp
ret
xchg
clc
sbb
push
scas
push
stc
mov
sub
mov
and
push
imul
les
xchg
lods
fsubs
adc
xor
adc
sbb
lock
pusha
xor
je
subl
aas
push
cmp
sub
mov
pop
jmp
lods
or
pop
stos
lea
xor
add
sub
and
pop
mov
lret
sub
ss
test
mov
sbb
xchg
pushf
push
push
add
cltd
jnp
loope
mov
adc
fs
inc
jnp
mov
xchg
test
rorb
pop
faddp
push
pop
ret
xorb
clc
test
sbb
inc
jnp
pop
fisubl
out
mov
fistpl
mov
fstpt
mov
cmp
test
sbb
subl
cmpsb
rcr
dec
iret
pop
push
flds
and
jge
inc
scas
push
push
mov
aas
stc
add
in
xor
mov
push
jp
mov
stc
std
movl
in
xchg
pop
pop
push
pop
cmp
fnsave
ljmp
mov
pop
arpl
fidivl
repnz
test
les
inc
ret
mov
roll
fbld
jecxz
push
jecxz
rcrl
outsl
cmp
xchg
mov
mov
mov
inc
push
and
loop
cmp
mov
jg
jmp
sahf
adc
mov
fnsave
pop
stos
dec
pop
stc
ror
jns
lahf
stos
add
adc
cmp
stos
add
xchg
loopne
adc
repnz
jecxz
dec
push
lea
cmp
mov
adc
sub
dec
inc
aaa
lret
mov
scas
xor
cmpsb
push
scas
and
enter
lret
sub
loope
sub
out
adc
push
or
cmp
sbb
push
and
and
scas
xchg
sub
push
pushf
daa
test
in
fwait
xchg
out
push
inc
push
testl
xchg
pop
cmpb
push
loopne
dec
xor
dec
cmpsb
fwait
stos
xor
popa
sub
or
movsl
adc
insb
mov
lret
adc
enter
cmp
push
pop
repnz
xor
jmp
dec
jle
and
aas
pop
in
lock
mov
cwtl
mov
pop
mov
lea
addl
add
mov
inc
flds
dec
or
xor
jns
lock
aaa
sarl
test
push
push
or
xchg
and
adc
xchg
stos
cmp
int3
sub
add
daa
in
ficompl
push
in
iret
inc
lods
add
fs
test
aam
js
arpl
cwtl
test
and
sub
mov
out
dec
adc
shrb
mov
inc
mov
push
xchg
lock
pop
xor
cltd
mov
sahf
dec
imul
sbb
movsb
popf
icebp
in
mov
jns
lcall
xchg
enter
cmp
mov
add
and
mov
mov
add
xchg
xchg
out
pushf
test
xchg
mov
lcall
pushf
out
cmpsb
lret
adc
gs
push
fidivl
xchg
imul
cli
push
fwait
imul
xchg
jne
jg
mov
movsl
sbb
xor
pop
xchg
inc
jae
push
mov
in
icebp
push
psrld
jp
sub
clc
inc
xor
insl
dec
insl
mov
das
out
ljmp
dec
push
and
andl
loope
mov
push
and
xlat
fs
daa
inc
sbb
out
scas
arpl
sub
push
pop
cwtl
movsb
fdivrp
mov
addr16
mov
ret
xchg
repz
rcll
jae
mov
dec
loopne
inc
int3
lds
sub
imul
mov
in
scas
clc
pop
xor
sub
test
jnp
out
sub
fldenv
add
les
lods
mov
jo
xchg
push
test
jb
gs
inc
aaa
hlt
cli
jle
mov
add
push
mov
xor
jno
xor
imul
push
pop
cs
inc
pop
dec
daa
add
add
push
cmp
cmp
es
dec
nop
and
cmpsb
sbb
push
inc
cld
das
xor
inc
add
mov
sahf
stc
lods
dec
movsl
push
cltd
jecxz
adc
lods
ljmp
lcall
ds
xor
orb
xchg
adc
jp
jbe
ret
fcom
sub
mov
xor
mov
jae
out
scas
out
add
cltd
out
inc
push
dec
pop
ds
pop
xor
jo
cmp
sub
sahf
mov
sti
ja
and
mov
gs
outsl
add
sub
ljmp
sbb
fnstsw
ds
add
loope
jns
mov
lds
jae
or
sub
dec
dec
mov
xchg
ljmp
mov
data16
fs
adc
sub
dec
xchg
and
scas
dec
dec
xchg
cs
sbb
orl
pop
stc
stc
dec
xchg
jecxz
cmp
ljmp
push
in
dec
dec
xchg
fisubrs
movsl
sbb
push
ds
pop
jmp
cmp
and
idivl
and
lahf
mov
inc
out
cwtl
or
loopne
lcall
push
mov
adc
aas
in
jae
fldcw
movsl
andb
sbb
push
inc
enter
cs
fidivrl
xor
adc
sbb
arpl
sub
lds
jmp
aas
adc
in
mov
out
pop
pushf
pop
stos
mov
xchg
in
mov
movsl
xchg
add
push
jne
cmpl
imull
adc
mov
inc
jle
jmp
and
arpl
loope
pop
shr
and
pusha
test
test
repnz
push
mov
fisttpll
jno
dec
iret
xchg
push
adc
jb
or
or
xor
inc
or
add
add
or
sbb
sub
cmp
jno
aas
lret
outsb
ret
cmpsl
push
ss
dec
dec
popa
jo
lock
loope
inc
jge
push
repnz
xor
test
sbb
xchg
cmc
pushf
ljmp
jge
es
inc
and
jno
jb
adc
dec
push
rorl
insb
loopne
mov
dec
fidivrl
ds
scas
jp
mov
dec
adcb
cmp
outsb
cmp
add
push
fldl
jecxz
push
push
cmc
stc
jg
mov
jmp
inc
push
push
and
push
cld
shr
adc
jae
add
push
sti
dec
fadd
mov
xchg
das
xor
out
jne
aad
leave
out
mov
fldenv
fldlg2
xchg
lock
cmp
mov
xchg
ret
mov
dec
icebp
aas
fs
ficompl
cmc
push
fsubl
scas
cld
mov
push
mov
add
popa
jl
rcll
and
inc
int
imul
and
movsl
dec
xor
dec
lret
jae
rclb
pushf
in
add
nopl
rorl
mov
dec
arpl
jb
or
lcall
xchg
xor
in
shlb
pop
movsl
fists
lcall
and
sbb
or
jne
inc
xlat
sti
cmp
sbb
and
dec
bound
add
push
pop
div
mov
movsl
xchg
mov
sub
loope
gs
mov
aam
leave
aam
dec
sbb
xchg
rclb
lods
and
out
div
inc
arpl
sti
jg
and
xor
jno
jns
andl
mov
pushf
jns
pop
and
rsqrtps
mov
sub
call
adc
fs
pushf
inc
sub
pop
cmp
or
mov
cmpsb
mov
sub
addr16
fistpl
fisubrl
movsl
mov
imul
mov
xchg
push
jmp
movsb
jl
mov
daa
nop
mov
jo
arpl
std
xchg
cmpsl
xchg
inc
sub
fstpl
fs
mov
sbb
clc
push
sub
jmp
dec
pop
lods
adc
and
mov
or
jmp
enter
call
add
outsb
mov
mov
mov
leave
mov
and
add
aad
mov
lahf
std
fdivl
pop
loop
pop
push
pop
mov
pusha
mov
or
lds
pop
lcall
push
sub
or
ret
xchg
cmp
push
add
je
movb
ds
outsl
inc
rcll
push
and
iret
or
push
xchg
pop
pop
mov
dec
mov
iret
sub
cwtl
rorb
xchg
mov
lahf
cmp
and
into
jno
pop
lahf
inc
xlat
mov
fiaddl
shl
sbb
sbbl
lret
xor
lods
or
sbb
fadds
mov
push
repz
mov
xchg
in
mov
insb
mov
sar
mov
cmp
dec
or
mov
inc
out
mov
xchg
jg
push
ljmp
inc
dec
adc
iret
jne,pt
mov
dec
mov
add
push
adc
cmp
cmpsb
sbb
loopne
mov
hlt
xchg
dec
outsl
jmp
fidivl
dec
enter
mov
bound
mov
into
pop
or
movsl
dec
jae
push
fcomps
int3
push
stos
or
mov
sbb
push
arpl
clc
push
jnp
fmull
popa
mov
mulb
jmp
fwait
ret
mov
jmp
aaa
jp
dec
sbb
and
pushl
jge
shl
jnp
add
dec
test
aaa
arpl
adc
xchg
xor
push
xchg
pop
sbb
hlt
pop
jl
pop
lret
ljmp
arpl
jg
mov
into
mov
jne
test
mov
xchg
int3
xor
xchg
enter
xor
cmpl
mov
ret
xchg
push
cld
sti
jge
stc
int3
popa
pop
sbb
movsb
dec
fdivrs
testb
xor
fcomps
test
loope
mov
jne
cmp
fwait
es
into
loopne
dec
sub
sar
and
or
mov
and
mov
adcb
jnp
inc
sbb
sub
test
sahf
jno
mov
and
rcr
push
lret
fldenv
shll
int
xchg
dec
mul
sub
shrb
mov
nop
filds
cli
inc
or
push
imul
stos
xlat
mov
aad
sbb
xchg
mov
movsb
inc
ret
fs
popf
shll
lret
pop
loopne
test
repnz
shrb
into
sub
push
mov
jne
leave
popf
in
sbb
adc
insb
test
add
fs
push
push
outsb
dec
mov
bswap
hlt
jne
sbb
daa
outsb
push
and
sbb
push
out
inc
aaa
sbb
movsb
enter
xlat
adc
mov
adc
out
and
mov
mov
aaa
lret
lods
push
in
out
or
aad
cs
int
popf
loope,pn
cmp
xchg
jl
dec
push
test
or
fisubl
pop
addr16
or
sub
stc
cwtl
sbb
xor
clc
stos
add
xchg
stos
test
scas
cmc
mov
mov
add
ret
sub
js
adc
jmp
outsb
imul
jno
jns
adc
ljmp
and
data16
std
cltd
mov
repnz
push
sbb
pop
inc
js
sbb
lret
adc
inc
jecxz
pusha
imul
and
cwtl
jle
enter
lea
xlat
sub
or
lret
imul
xorb
mov
ljmp
cmp
ja
xor
jp
int3
gs
sub
xor
inc
out
mov
xchg
cmpsb
pop
pushf
outsl
push
clc
sub
test
les
jmp
insb
je
pop
lea
adc
sub
fwait
les
out
enter
outsb
test
push
test
jb
add
ds
out
cmpsb
mov
mov
or
stos
lds
pop
sub
out
adc
pop
jle
in
out
pop
scas
inc
and
add
jp
call
mov
and
popa
push
jns
and
and
pop
xchg
js
lds
sahf
mov
stos
xchg
or
int3
pushf
or
addr16
jae
lods
jecxz
pusha
sub
lods
dec
outsb
addr16
or
and
cmp
mov
fisttps
cwtl
lret
stos
repnz
and
ret
jo
sahf
push
sbb
jl
nop
in
fxam
mov
xchg
ja
loop
or
fsubl
jae
mov
gs
sbb
scas
pop
push
mov
movsb
xchg
int3
xlat
jp
mov
out
inc
cmp
imul
out
clc
loopne
mov
sub
je
mov
sub
push
or
lds
jl
dec
push
inc
mov
cmpl
cmp
push
insb
test
insl
popf
and
imulb
cmp
jge
pop
loope
lahf
andl
and
fimull
and
in
stos
dec
psrad
mov
fcom
push
xchg
mov
repz
jo
adc
dec
gs
les
data16
sbb
pop
lret
xchg
jp
xchg
in
dec
ffreep
into
inc
push
xor
sbb
dec
cltd
jne
fisubs
fisubl
jle,pn
pop
sub
sbb
sub
cltd
dec
sbb
pop
lret
orb
mov
pop
add
push
or
mov
test
mov
lret
cs
icebp
ror
fiaddl
int3
xchg
insl
sub
stc
outsl
mov
pop
dec
cli
mov
and
adc
xchg
out
mov
stos
in
xor
and
je
sub
or
out
xchg
and
xchg
and
adc
pop
push
sbb
aad
xchg
pop
push
data16
and
pop
enter
lret
fwait
xor
imul
add
or
orl
sti
sbb
sbb
fiaddl
stos
jmp
xchg
xchg
inc
cmc
jecxz
mov
lods
bound
mov
adc
add
jno
xchg
pop
cmp
stos
cwtl
cmp
fwait
clc
pop
xor
jbe
adc
sub
ret
xchg
scas
aam
jmp
cmpsb
int
dec
out
je
icebp
hlt
mov
jge
fistps
dec
out
push
jae
mov
xlat
std
pop
fwait
bound
icebp
lcall
les
xchg
out
outsb
xchg
dec
imul
sbb
out
or
adc
sub
in
negl
loopne
jae
pop
loopne
test
jno
ja
lock
mov
fst
movsl
add
xchg
sbb
dec
add
pop
or
xchg
int
inc
aaa
mov
pop
jno
dec
inc
sub
mov
sarb
cmpsl
loope
cmp
push
out
fs
sub
aaa
add
stc
inc
and
add
add
dec
cmpsb
in
pop
ja
lret
add
adc
icebp
js
pop
andl
clc
decl
or
sbb
popf
or
lods
mov
ja
data16
sbb
pop
xchg
jle
in
mov
push
test
fisttpll
jecxz
rolb
mov
sarl
mov
sti
and
fists
sbb
xchg
pop
test
push
fstl
mov
inc
clc
lcall
xor
fucomi
adc
push
fsubrl
cmp
movsb
into
push
lret
dec
sub
sub
xadd
fcoms
xchg
or
mov
shl
xchg
add
pop
xchg
pop
enter
fimuls
fidivs
cmpsb
pop
and
notb
jecxz
dec
push
pop
std
int
test
out
pop
jg
sbb
pop
pushf
jp
js
pusha
mov
jge
jb
mov
push
cmp
pop
movl
frstor
cmpl
lahf
push
inc
in
inc
mov
loopne
mov
push
orb
sbb
std
cmpsl
pop
test
mov
sti
add
mov
pop
outsl
or
repz
cmp
add
test
adcl
mov
cmp
pop
adc
jno
ficoml
and
pop
add
add
sub
add
in
and
inc
scas
sbb
sbb
push
and
jmp
jne
mov
loop
fwait
pop
popw
mov
dec
mov
lock
sti
arpl
ds
inc
push
fs
lcall
pop
push
fs
adc
dec
je
negb
daa
fdivrl
xchg
out
das
divb
daa
mov
imul
push
scas
sahf
pop
or
mov
pop
ljmp
xor
jbe
cmpsl
in
and
call
fnsave
rorb
bnd
jecxz
and
sub
popa
dec
test
mov
hlt
jns
sub
fildll
jmp
mov
xchg
mov
cmp
pushf
pop
push
mov
data16
mov
es
inc
xor
hlt
sbb
mov
xor
and
xchg
es
dec
pop
repz
scas
or
inc
adc
and
pop
and
das
inc
xchg
shll
test
inc
dec
mov
sub
fbld
cbtw
pusha
sbb
mov
in
mov
lcall
cs
cmp
test
jp
mov
mov
in
cmp
push
push
or
leave
jno
xor
data16
push
cli
popf
mov
and
xchg
mov
cmp
xchg
into
rolb
mov
movsb
mov
les
loope
fs
xor
sub
xor
mov
and
jbe
mov
inc
sub
dec
js
outsb
and
testl
jecxz
or
dec
shll
sub
pusha
stos
lods
sbb
xchg
test
shlb
pop
mov
push
je
sarb
shll
ljmp
mov
adc
insb
outsb
mov
push
add
js
mov
mov
and
or
andl
dec
lds
pop
and
jge
popf
mov
incb
leave
in
add
mov
lea
jl
mov
jae
daa
cmp
test
aad
or
movsl
dec
lock
outsb
ret
js
pop
sub
ss
fsubrs
cmp
xorb
jb
pop
sub
test
divb
std
addb
mov
psrlq
mov
xor
mov
popa
pop
or
mov
stos
fidivrs
in
mov
dec
sbb
sub
imul
xor
fwait
in
ja
cmpsb
dec
popf
xchg
imul
jmp
xor
sti
fstl
push
sub
mov
xchg
fildll
and
shrb
popa
xlat
jle
xor
dec
int
mov
int3
addb
cmpsl
clc
shrl
mov
cwtl
imul
int3
jp
pushf
push
lahf
push
cmp
cmpsl
or
dec
pop
test
out
addr16
lea
lret
adc
push
enter
xchg
inc
flds
fistps
pop
cmpsl
mulb
pop
and
ja
mov
push
push
pop
jno
or
jno
in
shlb
xchg
mov
addr16
fimuls
dec
xor
icebp
iret
xchg
sub
addb
xchg
pop
dec
dec
lret
sub
pusha
mov
inc
in
fisubrs
das
popf
sub
test
pop
mov
pop
repnz
cmpsb
sahf
dec
mov
push
dec
xchg
lahf
cmpsl
jnp
dec
pop
in
xchg
fbstp
das
xlat
mov
xor
lds
test
test
cmc
add
jae,pn
lcall
leave
lods
cmp
mov
movsl
popf
jns
add
mov
xchg
mov
xor
enter
cmp
jne
mov
shlb
aam
rcll
add
mov
mov
es
stc
pop
insl
push
aas
in
xor
dec
push
xchg
xchg
sub
lret
mov
stos
jno
test
and
dec
or
in
jge
or
pop
mov
pop
rolb
dec
and
mov
xor
stos
out
adc
lret
scas
aad
cmpsb
repnz
mov
and
ret
pop
or
cmp
ja
rclb
jp
jp
scas
test
popa
add
clc
je
ljmp
inc
adc
mov
sahf
aad
pop
push
loopne
ret
cmp
sti
pusha
pusha
mov
dec
shlb
push
bound
loope
cld
cs
rcrb
dec
nop
in
mov
orl
aaa
mov
lahf
into
mov
ljmp
push
lret
imul
add
loope
movb
pop
sbb
test
out
inc
xor
subl
sahf
dec
mov
js
out
loop
dec
lods
jne
adc
sbb
xchg
out
rep
pusha
int3
aam
inc
lds
cmc
gs
fstpl
pop
adc
imul
std
stc
dec
jg
repnz
movsb
sub
ret
lret
pop
push
mov
hlt
ljmp
cld
mov
add
xchg
fdivrs
icebp
adc
in
add
lds
push
xchg
cmc
add
jae
push
dec
and
mov
pop
mov
push
dec
dec
add
jl
cmp
mov
cs
stos
sub
cmp
cld
leave
jb
outsb
faddp
sub
xor
cmp
inc
movsb
pop
pop
inc
aaa
mov
aaa
sub
dec
jecxz
adc
popa
and
into
insb
or
pop
pusha
cmpsb
mov
pop
outsl
lods
iret
fwait
pop
xchg
adc
cmpb
div
cltd
es
ja
pop
xor
mov
fwait
or
bound
insb
lock
jle
pop
in
lock
ja
insl
or
pop
fcomps
clc
pop
scas
mov
push
mov
movsb
xchg
push
sbb
cmpsl
scas
mov
pop
mov
icebp
pop
xor
push
pop
hlt
in
cltd
loopne
repnz
sti
in
xchg
lods
push
mov
cmp
popf
bound
adc
push
cmp
outsl
iret
testb
xchg
mov
in
outsl
pop
mov
roll
mov
jae
mov
mov
adc
fisttpl
and
mov
mov
xchg
ds
lret
mov
iret
xor
pop
aam
ljmp
loop
rep
xor
and
mov
push
jmp
xchg
je
cmpsb
cld
xor
in
outsb
test
mov
inc
jp
mov
xchg
insb
pop
lret
jnp
and
jecxz
cmp
outsb
loope
insb
and
or
mov
into
repnz
rol
jge
mov
xchg
pop
lret
scas
sbb
xchg
out
dec
repz
and
dec
or
push
xchg
stos
sub
mov
sub
xchg
mov
adcb
stc
xor
push
sti
ret
jl
int
pop
jno
inc
int3
add
mov
xchg
cmpsb
bound
cmp
adc
ror
or
mov
jecxz
out
subl
mov
push
dec
lret
mov
hlt
xchg
adc
fs
jae
adc
iret
mov
mov
je
lea
bound
mov
xor
inc
insl
xchg
jb
pop
call
fsubl
and
aad
scas
pop
adc
in
cmpsb
clc
jmp
out
lret
popf
cmp
out
ret
push
inc
es
pop
jge
stos
and
cmp
or
mov
clc
mov
mov
dec
or
jmp
and
lea
mov
cmp
lahf
mov
adc
insb
pop
fsubr
aad
inc
insl
inc
cmp
out
mov
fs
mov
xchg
inc
xor
int3
add
cmp
mov
call
lods
hlt
and
ja
rolb
rcll
sub
push
mov
aaa
sub
mov
cld
or
mov
repnz
dec
push
inc
insl
adc
hlt
jns
scas
ds
test
insl
mov
insl
pop
cli
xor
jg
out
cltd
pop
repnz
cmpsb
fistpll
push
ja
mov
adc
outsb
add
lds
push
push
adc
dec
jg
fwait
insl
mov
xor
adc
mov
xchg
arpl
jl
or
pop
inc
add
es
loope
in
xlat
fdivrs
xor
push
jle
in
push
and
imul
lret
mov
mov
xlat
imul
out
cmp
mov
movzbl
outsb
xor
movsb
push
out
mov
subb
clc
fldenv
mov
xchg
les
lcall
ja
lcall
jno
or
mov
dec
outsl
jo
adc
arpl
data16
xchg
into
insb
hlt
scas
pop
loop
jl
ss
mov
scas
xor
stos
cmp
outsb
mov
inc
sub
or
test
pop
or
stos
and
not
jge
shrb
dec
lods
cmpl
ss
mov
test
js
lock
jp
fnstsw
sbb
nop
loop
fs
scas
insb
mov
jbe
push
les
rcrb
push
or
adc
dec
adc
and
insb
jnp
out
test
pop
out
dec
xchg
pop
scas
jle
mulb
lret
cmc
jbe
sub
dec
or
sbb
sbb
push
loop
adc
pop
divb
cs
add
pushf
adc
stc
cltd
out
lret
subl
xchg
loop
or
stc
jnp
adc
or
adc
xor
inc
xchg
mov
pop
push
mov
add
xor
jg
sbb
push
cmp
std
decb
subb
sbb
fmuls
lea
loope
jmp
into
arpl
out
je
push
ret
fstpt
fisubl
clc
jl
jae
js
mov
xchg
ljmp
out
cmp
movsl
xchg
or
jle
cltd
hlt
scas
out
xchg
inc
jo
ljmp
inc
dec
fidivrs
jo
outsb
add
and
sbb
hlt
lcall
cmp
pop
sbb
mov
pop
orb
into
or
adc
inc
cwtl
or
lods
aam
insb
sbb
dec
mov
aas
or
mov
imul
out
bound
cmp
fstl
cmp
mov
stos
xchg
cmc
cmpsb
mov
jecxz
fmuls
out
ss
dec
das
icebp
outsb
inc
cmc
push
cmp
adc
inc
arpl
cld
mov
hlt
inc
outsl
add
loop
les
add
cli
fidivrs
stc
out
jbe
repz
lea
cmpb
sub
pop
in
sbb
jo
or
dec
adc
lock
xchg
ret
stos
mov
push
aas
push
scas
cmp
mov
xchg
orl
push
fisubrs
cld
xchg
testl
lahf
cs
aaa
notl
fistpl
stc
idiv
push
mov
jmp
shlb
std
inc
mov
lea
aas
xor
mov
xchg
cmpsb
rclb
mov
fldl2e
loope
and
pop
addr16
or
pop
jbe
insl
push
test
mov
inc
sti
pop
mull
cmp
mov
sbb
es
bound
sub
dec
adc
push
jge
xor
mov
js
xor
mov
sbb
pusha
js
repz
xchg
mov
sbb
jno
cmpsl
addr16
inc
pop
xor
xchg
gs
mov
inc
pop
cmpl
mov
ljmp
insl
sub
sahf
pop
sbb
orl
add
jl
sti
std
sbb
lar
push
pop
stos
fiadds
ljmp
jle
fs
jne
outsb
jbe
jbe
sub
jge
mov
sarl
insb
dec
out
xor
clc
call
fisubs
adc
sub
push
inc
stos
shl
push
js
cmp
push
mov
xchg
std
sbbl
adc
xor
cmp
negb
xchg
je
xchg
insl
mov
in
mov
mov
ficoms
inc
mov
jb
sbbb
out
loopne
push
mov
inc
or
into
ret
jae
fildl
mov
les
cmp
divb
lret
jnp
jnp
xchg
adc
mov
push
addr16
cmc
dec
inc
push
negl
dec
add
iret
sub
push
rolb
mov
sub
sbb
or
sahf
jbe
stc
xchg
out
ljmp
dec
loope
test
push
inc
les
xchg
cs
xchg
mov
lds
push
jne
imul
sub
xchg
or
sub
lcall
jecxz
imul
inc
lds
push
icebp
or
jae
ja
mov
pop
mov
test
cltd
jns
ds
fidivrs
lret
lods
mov
jmp
pop
adc
jne
or
lretw
mov
push
adc
jnp
jb
and
lret
loope
adc
pop
mov
popf
ja
cmp
or
adc
fs
sahf
jge
xchg
push
lcall
xchg
shlb
dec
jmp
sbb
fcmovb
mov
dec
scas
out
sub
mov
pop
ljmp
jg
arpl
jns
push
out
outsb
mov
mov
in
lcall
sbb
or
data16
dec
aas
jnp
out
push
cltd
inc
iret
push
mov
and
neg
outsb
in
or
jo
jns
loopne
adc
shr
and
mov
icebp
fdivl
int
xorb
cmp
mov
out
addr16
aam
lods
cmp
stos
mov
jl
xchg
sub
mov
and
mov
outsl
std
lods
sub
sub
notl
adc
mov
cmp
pop
jb
sahf
add
jge
aaa
mov
popf
inc
pop
test
jmp
ljmp
sahf
loope
sbb
in
or
lahf
jmp
idivb
ss
or
mov
and
jle
cmp
push
loope
xchg
dec
jb
mov
sti
fldt
sub
ja
fnstenv
mov
push
out
rcl
mov
xchg
inc
insl
cmpsb
data16
enter
adc
lret
cwtl
popa
push
addr16
loop
jns
shll
add
loop
xchg
arpl
pop
pushf
lock
sub
test
mov
pushf
data16
inc
xchg
aad
jb
out
sub
sub
call
dec
cmp
pop
jg
stos
sbb
push
iret
push
jo
popa
dec
mov
orl
xchg
pop
jnp
ret
lcall
sti
imul
jg
addr16
add
out
ficompl
add
mov
daa
ret
cmp
mov
rcll
cli
stc
push
and
mov
inc
lcall
arpl
jns
adc
mov
je
cmp
mov
repz
enter
or
jle
cmp
pop
aad
fs
xchg
push
in
add
cmp
int
dec
xchg
inc
in
jg
dec
jno
or
xchg
jl
pusha
inc
orb
pusha
push
js
shlb
int
mov
incb
xor
xchg
fdivl
popa
xor
pop
push
popf
test
insb
shlb
lea
int
repnz
jne
jl
adcb
mov
arpl
cmc
call
out
jecxz
frstor
jmp
lcall
sar
add
adc
push
adc
xlat
cli
jbe
jo
cmp
jbe
and
dec
xchg
fdivp
repnz
shll
outsl
add
fs
fsubrs
jecxz
dec
push
pop
xlat
xchg
ret
repz
jns
cmp
jmp
cmp
jne
or
add
mov
push
test
pop
addr16
dec
push
xor
pusha
adc
mov
lret
mul
add
cmp
inc
arpl
pop
out
lock
scas
sti
shl
jp
and
loop
inc
adc
cmpsb
loope
shll
rol
pop
dec
lahf
jo
outsl
push
pop
xor
cli
xchg
out
push
jge
sub
cmpsl
inc
pushf
js
xchg
loope
js
movsl
test
fisubrs
popa
sbb
call
cmpsb
dec
cmpl
std
sbb
inc
ljmp
test
push
mov
jge
jne
xchg
out
cmp
int
popa
cmp
popf
jge
push
lock
scas
push
test
dec
sbb
iret
xchg
or
pushf
dec
jg
fisubl
xchg
push
inc
mov
cmp
imul
lea
sub
and
jle
lock
imul
fstps
das
movb
mov
repnz
pop
adc
xchg
jp
pop
test
imul
stos
lahf
int3
incb
lods
fcoml
repnz
stos
ja
mov
cld
mov
test
mov
xor
inc
push
mov
mov
xchg
or
rolb
loopne
scas
or
sub
add
xlat
or
xor
cmpsl
addb
dec
out
rcrb
clc
and
jb
in
ret
hlt
fsubp
push
jo
add
xchg
xor
mov
adc
imul
adc
sub
adc
scas
mov
enter
iret
add
mov
mov
sbb
inc
roll
or
shrb
insl
popa
popa
imul
jl
jmp
dec
mov
fld1
cmp
jo
fucomip
outsb
push
push
pop
lods
xor
lds
loop
jmp
xchg
shl
jbe
fdivrl
pop
jns
cmp
xor
dec
mov
mov
leave
xor
adc
repnz
leave
insb
mov
push
dec
xchg
hlt
adc
xchg
mov
dec
sub
pop
or
jbe
pop
push
inc
inc
mov
jg
xor
popf
cmpsb
ja
loop
int
mov
dec
pop
pop
cmp
mov
sub
das
push
cmp
loope
sub
inc
xor
fsubr
sbb
add
cmp
mov
outsl
xchg
sbb
sub
aam
cmp
add
sbb
cld
int
andb
addl
sbb
sub
lret
lret
xorl
add
mov
inc
pop
jmp
mov
jb
mov
dec
call
or
mov
jge
pop
clc
xchg
lods
sar
add
mov
out
inc
mov
add
mov
fsubp
inc
faddl
push
dec
call
cmpsb
sub
push
sar
movsl
mov
pop
dec
and
inc
push
sbb
mov
or
add
shl
inc
push
xlat
or
out
orb
test
mov
xor
outsb
loope
mov
call
sub
adc
andl
fimull
sub
int
sub
pop
rcrl
in
push
in
jecxz
sti
mov
dec
cmp
nop
jl
adc
pop
insl
es
and
ja
mov
lret
loop
and
rcl
insl
rorb
cmp
daa
lahf
inc
jp
add
outsb
insb
orb
or
dec
insl
fs
mov
notl
nop
into
shlb
mov
push
stos
mov
add
cmpl
xor
mov
push
stos
lret
gs
scas
adc
cmp
jno
daa
push
cli
lea
andl
add
rolb
inc
or
cmc
adc
cmp
outsl
shlb
adc
mov
xor
ret
add
fsts
cld
ds
dec
movsb
xchg
out
push
sub
xlat
jbe
xchg
sub
xor
stos
push
pop
fidivrl
sbb
ret
sub
shl
jo
cmp
jmp
adc
adc
ja
ljmp
out
cwtl
pushf
xor
inc
mov
std
push
sub
mov
and
jle
dec
jno
xor
mov
sahf
fildl
jl
imul
int3
mov
mov
mov
jb
pop
inc
sti
mov
mov
movsl
cmpsb
lods
hlt
dec
xlat
adc
popa
mov
xchg
mov
or
and
sub
mov
inc
mov
iret
dec
or
sarl
std
mov
mov
icebp
stos
std
pusha
popf
outsl
xchg
sub
mov
outsb
lret
loopne
cs
iret
test
mov
pop
stos
add
mov
sub
inc
mov
stos
dec
in
mov
pusha
arpl
iret
fcomps
push
push
int3
mov
push
ss
xchg
push
lahf
ds
ret
and
jne
movsb
ljmp
int
pop
mov
test
cmp
in
enter
insl
test
jp
mov
push
xchg
icebp
movsl
fnstcw
sbb
pop
subb
or
sub
cmp
repnz
xchg
in
fimull
add
lds
or
sbb
jmp
lock
test
add
pop
xor
sub
add
jo
sub
xlat
cld
mov
cwtl
push
pushl
lds
pop
int3
jp
xchg
sarl
push
and
je
xor
push
int3
shlb
push
inc
out
shll
mov
sbb
sub
jne
call
js
sub
repz
sahf
pop
push
fstpt
icebp
mov
test
call
test
cli
aad
pop
xchg
jnp
mov
jge
scas
mov
shlb
mov
imul
negb
daa
imul
sbb
ljmp
xor
xchg
sub
or
outsb
aad
xlat
push
push
xor
xor
inc
lahf
pop
xlat
xchg
sub
xor
jg
dec
pushf
cmp
dec
jl
jge
js
rcrb
push
adc
ds
popl
arpl
jnp
repz
call
jae
fs
xchg
add
enter
push
and
test
jg
push
cmpsb
cld
sbb
outsb
mov
movsl
fs
out
cld
inc
mov
jmp
sbb
xor
and
push
into
test
inc
xchg
pop
shll
sahf
cmp
std
xor
inc
int3
mov
leave
fcoml
xor
adc
out
ja
aaa
imul
jns
mov
cmp
inc
fs
mov
pushf
push
out
bound
push
add
xor
mov
mov
sti
lret
sahf
insl
xor
pop
imul
out
mov
les
ret
mov
dec
mul
inc
inc
leave
pop
shlb
clc
and
loope
cs
lahf
loopne
rcrl
dec
mov
das
jmp
stos
push
movsb
push
push
int3
fdivrl
ret
lahf
lcall
xlat
rolb
repnz
pop
ficompl
add
fistps
cltd
iret
mov
outsb
rcrl
jg
add
insb
mov
xchg
aad
push
cmp
cmp
insb
push
pushf
pop
leave
out
sub
ds
xor
mov
pop
mov
cmp
adc
cmp
in
adc
push
popf
xor
out
and
ss
lahf
mov
hlt
push
daa
pop
xchg
enter
in
gs
xor
rorb
pop
sub
or
xchg
mov
adcl
shr
bound
pop
int
adc
daa
jo,pn
ss
rolb
in
insb
ja
lret
inc
in
into
cmc
xchg
mov
mov
insb
mov
in
cltd
subb
mov
pop
out
gs
sub
out
fwait
mov
mov
sbb
cs
cmpsl
out
in
mov
xor
sahf
pushf
ja
in
and
call
and
xor
cltd
stc
aaa
mov
dec
outsl
pusha
mov
aad
movsb
and
or
add
stc
outsl
xor
test
mov
daa
ret
and
aaa
cli
push
and
dec
jo
cmpb
stos
mov
sub
call
or
xchg
test
pop
in
jns
sbb
nop
xchg
aam
jle
cmp
and
dec
dec
and
int
call
push
stos
xor
pop
out
je
push
and
jns
mov
je
aam
sbb
stc
sub
inc
mov
xor
mov
out
popl
add
std
daa
hlt
cmpb
add
add
cltd
adc
cltd
xor
cmp
push
mov
cmp
fwait
mov
mov
in
addb
sbb
fs
outsb
push
add
and
popa
mov
shrl
pinsrw
sbb
adc
and
xorl
sbb
imul
rcrl
fimuls
jns
je
aad
scas
xor
js
mov
and
in
xor
lea
lahf
mov
mov
iret
jmp
push
subl
or
jb
into
sar
fisubs
clc
mov
int
ss
cmpsb
add
dec
lret
or
popf
sub
mov
inc
int3
stos
scas
das
push
or
mov
pop
mov
setb
pushl
ret
daa
jmp
mov
mov
or
or
lods
or
jmp
popf
sub
sub
js
inc
adcl
inc
jecxz
dec
fimuls
pusha
lods
push
xchg
inc
aaa
cmp
scas
and
test
sub
test
shl
addw
cmpsl
stos
push
iret
in
aaa
push
roll
fcmove
xlat
inc
imul
pusha
cmc
mov
pop
sbb
shr
dec
flds
push
jle
fnstcw
jecxz
sar
outsb
add
mov
movups
mov
adc
jmp
xchg
and
add
mov
push
cld
arpl
add
dec
mov
cmp
fiaddl
pop
subb
xchg
stc
insb
or
add
aaa
rcll
out
aaa
jnp
pop
jbe
test
cwtl
jle
push
and
lahf
sbb
sbb
pushf
mov
sbb
sahf
fidivl
push
adc
push
scas
clc
pop
orb
aad
sub
or
add
pop
and
pop
stc
mov
les
push
mov
xlat
pop
subl
sbb
xor
ljmp
les
xor
xchg
stc
jg
pop
jl
mov
push
sub
aad
stos
or
mov
sbb
popa
shrb
xchg
int
mov
pop
fcoml
aas
mov
jl
add
push
mov
or
mov
push
loope
sbb
mov
pop
int3
nop
mov
mov
jnp
icebp
pop
fwait
mov
add
hlt
sub
and
lds
movb
mov
fcmove
add
mov
ss
iret
mov
inc
aad
xchg
push
insl
or
rcl
pop
nop
and
stc
lcall
in
mov
iret
add
je
leave
cmp
cli
dec
movsb
nop
lock
arpl
ret
mov
fnstcw
lds
mov
pop
dec
lahf
and
pop
xor
inc
mov
adcb
xor
sahf
or
dec
pop
ja
iret
push
mov
ret
insb
pusha
push
pop
int
imul
or
mov
adc
hlt
cs
mov
ds
cmpsb
xchg
mov
sahf
sub
sbb
ss
jmp
shrl
call
lock
and
scas
rcll
dec
int
xchg
cli
stos
mov
rorl
cmp
mov
mov
mov
or
xchg
xchg
mov
lods
daa
orb
icebp
add
lahf
dec
sub
lods
fmull
push
mov
int3
jb
mov
mov
sub
cmpsl
sbb
and
or
mov
in
push
push
fcmovbe
jg
lcall
cmp
out
xchg
sub
adc
mov
cmp
cwtl
jmp
xchg
bndstx
xchg
adc
dec
inc
in
cmp
inc
jno
psllq
in
shrl
pop
fcoms
cld
xor
and
lret
stos
gs
fldenv
push
adc
or
ret
popf
mov
outsl
aad
fists
movsb
push
push
sub
xchg
test
out
sbb
mov
loopne
subl
jmp
or
div
outsl
xor
jg
stos
fstpl
fnsave
pop
aad
test
lock
leave
mov
cmpsl
sbb
inc
xchg
aam
stos
leave
insb
insl
lahf
shl
jae
out
shll
pop
adc
adcb
nop
xor
jecxz
add
mov
sbb
sub
sub
fcoms
push
jecxz
or
and
lcall
je
rcrb
pop
inc
pop
inc
lds
mov
inc
dec
dec
outsb
fsubp
scas
scas
cltd
cmp
cmp
pop
mov
adc
popa
pushf
imul
push
imul
inc
jbe
mov
dec
or
insl
nop
pop
pusha
cli
subl
sbb
xchg
insl
es
jbe
subl
jae
mov
stos
addr16
cmpsl
jbe
pop
leave
lcall
mov
popa
mov
push
jb
jg
cmp
out
test
jns
gs
pop
push
sbb
cmp
fists
mov
pop
xor
test
jg
jnp
out
enter
mov
adc
ss
fldl
push
pop
sbb
or
loop
repz
icebp
call
lcall
mov
out
mov
mov
xchg
push
fstpt
jbe
test
push
mov
sbb
shl
jmp
lods
or
pop
mov
inc
jg
xchg
test
pop
iret
mov
xor
xchg
ret
adc
popf
pop
stos
inc
or
inc
mov
cmpxchg
aam
cld
addr16
add
test
enter
sti
or
mov
push
mov
xchg
jne
mov
lcall
xchg
mov
dec
xor
push
pop
rcll
fnsave
sarl
cwtl
adc
push
push
insl
shrl
xchg
test
xor
bound
test
dec
cmpb
xor
mov
or
push
stos
out
adc
jno
and
mov
into
push
movsl
int
sbb
sbb
mov
pushl
xor
add
adc
ja
jle
not
mov
or
mov
xor
repz
xchg
ds
iret
add
scas
jno
shrb
cmp
jmp
jno
out
dec
outsl
test
adc
lcall
add
mov
roll
ret
ficomps
xor
aad
inc
jge
scas
jge
fdivr
ljmp
inc
outsl
mov
loope
out
pop
jns
pop
repz
sbb
pop
mov
sub
xor
mov
inc
cli
or
and
mov
clc
das
xor
mov
cld
sbb
mov
out
jbe
fsubrl
push
scas
popf
cmpl
mov
cmp
cmp
scas
push
push
pop
mov
and
pop
push
dec
add
pop
push
jge
inc
or
mov
cmp
shll
imull
inc
jmp
jp
cmc
popa
dec
push
ss
mov
cmp
push
cmpsl
shr
fildl
ljmpw
add
or
cs
enter
sub
aaa
mov
int3
mov
mov
cmp
std
popa
pop
popa
cmp
and
inc
dec
sub
sbb
ljmp
xchg
fldt
insb
pushl
std
dec
and
jne
dec
push
call
jmp
mov
pop
cli
popf
rol
fwait
pusha
ss
pop
xor
jecxz
in
iret
add
pop
test
stos
cmp
pop
clc
xlat
cmpsl
add
dec
mov
arpl
sub
mov
nop
adc
imul
or
lea
cmp
push
sbb
pop
add
jns
xchg
mov
shrl
inc
in
add
lods
sub
daa
pop
push
cwtl
xchg
popf
sub
dec
loop
outsb
aad
pop
mov
sbb
popf
inc
pop
lahf
add
and
adc
dec
cmp
and
es
das
imul
cmpsb
push
push
inc
sbb
loop
pop
lahf
cmc
push
mov
xor
cmpsb
pushf
xor
jg
aam
push
cmp
mov
movsb
rolb
cmp
ret
cs
or
push
js
jns
je
insb
xor
mov
hlt
pop
adc
jecxz
cmpsb
xchg
sub
lret
mov
inc
sarb
or
inc
dec
cli
inc
cld
das
insl
mov
ret
pop
int
in
and
add
cmpb
xor
lcall
xor
dec
mov
add
inc
xchg
jle
add
repnz
push
nop
lea
test
ljmp
das
mov
jns
sub
ret
mov
mov
xchg
test
lret
aas
popf
dec
jg
mov
daa
test
sbb
dec
and
push
dec
call
pop
int3
jb
dec
push
add
scas
fldz
ficompl
xchg
jmp
mov
rcrb
mov
jb
in
jb
or
scas
fstl
cmp
mov
jecxz
cmpsl
dec
jae
dec
dec
fs
fdivl
mov
mov
jle
jne
jmp
inc
daa
mov
sbb
cli
jmp
and
js
pop
lret
fcoml
pop
pusha
xchg
inc
jmp
and
push
out
sub
add
and
pop
ret
jnp
pop
popl
nop
sub
mov
fdivs
js
adc
repz
lock
and
stos
cmpsb
pusha
xor
pop
sbb
imul
inc
dec
sub
fstl
movsb
lahf
mov
add
and
lock
fxch
jl
mov
sbb
adcl
pop
xchg
lods
ja
mov
fcmovne
xchg
data16
ljmp
rorl
and
pop
pop
pushf
mov
jp
push
fsts
and
mov
inc
sahf
push
push
jl
sbb
repz
mov
xchg
imul
push
xchg
xor
arpl
or
mov
cmpsl
leave
mov
push
xor
js
push
movsl
je
xlat
inc
cs
sub
in
js,pn
lds
test
fstl
mov
jne
cmp
bnd
sub
in
jl
stc
mov
mov
add
enter
lret
push
stos
test
imul
arpl
xchg
pusha
jbe
imul
push
fmull
stos
icebp
xchg
pop
pop
add
sti
inc
add
aaa
xor
daa
pusha
xchg
cmp
jne
xchg
imul
or
scas
mov
push
mov
frstor
outsb
xor
mov
test
out
sbb
sub
daa
imul
iret
not
ffree
ljmp
ret
in
pushf
xchg
sub
sub
dec
popa
sbb
data16
xchg
jbe
jnp
scas
add
mov
lahf
call
sub
mov
lods
incb
adcb
insb
decl
mov
clc
push
mov
and
and
jo
jl
stos
jg
movsl
dec
fcoml
std
or
ljmp
lcall
imul
add
cmp
sbb
jae
shlb
jp
xchg
add
lea
insl
leave
es
sbb
cltd
test
pop
inc
fisubs
sbbl
jle
xchg
out
inc
xor
push
pushw
aas
inc
push
xchg
lahf
xlat
jge
push
mov
cs
pop
sub
popf
imul
mov
pop
dec
sbb
xchg
movsb
sbb
out
fsubr
mov
push
mov
shll
push
inc
loop
sbb
mov
sub
mov
imul
sub
xchg
xlat
repnz
mov
xor
push
flds
push
and
jno
push
sarl
scas
or
subb
test
add
ror
hlt
mov
mov
jmp
dec
dec
shr
ljmp
cmpsb
rcrb
mov
pushf
lret
into
push
mov
ret
lea
out
or
mov
jp
mov
movsl
cmpsb
into
xchg
decl
imul
addb
mov
lret
imul
cli
jp
dec
mov
movsl
hlt
push
inc
in
xchg
sbb
xchg
push
add
mov
adc
sbb
aad
lock
in
jmp
sub
imul
popa
mov
ret
cmp
jle
ja
and
mov
push
in
sbb
imul
add
push
jbe
cli
mov
orb
call
bound
mov
jg
scas
sub
sbb
add
aad
jg
mov
adc
scas
sbb
psubusw
insb
addr16
push
pusha
sbb
mov
fsubrp
in
push
movsb
in
aas
adc
adc
ret
cltd
pop
pop
shll
mov
fidivrl
jl
inc
lea
lds
mov
andl
movsl
test
jmp
push
jg
loopne
and
sti
sbb
cmp
add
js
repz
mov
pop
pop
jmp
cmova
sbb
push
sub
mov
push
fcmovne
mov
mov
mov
mov
xchg
scas
idiv
shrl
push
idivb
loope
mov
movsl
out
and
dec
dec
mov
dec
sub
push
pop
push
sbb
inc
cmp
ds
in
or
jl
or
sbbb
push
jge
add
xchg
testb
das
ljmp
sub
jns
xchg
outsb
push
jb
fbstp
pop
adc
mov
push
xorl
dec
jp
gs
and
push
inc
push
out
aam
mov
and
test
test
jg
push
push
lea
adc
add
stos
fwait
jle
rcpps
xor
lods
mov
fs
dec
or
lahf
and
loope
aaa
in
push
aam
mov
insl
inc
decl
push
jnp
or
stos
mov
and
pop
mov
mov
cwtl
sti
adc
pop
cwtl
das
hlt
shrl
add
push
xchg
stc
mov
jge
ss
test
xor
mov
jae
jo
xchg
cmp
movsb
xor
push
mov
es
xchg
pop
xchg
jno
cwtl
xchg
jl
and
jge
cmpsb
xchg
push
iret
push
sahf
add
shlb
enter
sub
outsl
mov
push
outsb
adc
add
mov
sub
rorl
call
sbbl
pop
out
lea
das
sub
cmp
mov
or
fxch
cltd
xchg
xchg
push
cltd
adc
bound
and
sbb
loopne
fdivrp
lea
cmpb
jbe
clc
cli
divb
cld
inc
xchg
cli
push
sub
std
fnstcw
lock
testl
sub
push
fidivl
jae
bound
push
insl
int3
mov
cmc
sub
pop
das
aam
lret
mov
insb
in
jle
adc
scas
sahf
cmc
mov
nop
mov
ficoms
xor
test
cmc
mov
adc
jb
dec
leave
daa
sahf
shrb
lcall
cmp
out
mov
repnz
cld
in
std
gs
test
xor
fistpll
jg
adc
cmp
mov
mov
roll
imul
bound
xor
push
jl
xor
sti
arpl
sub
jl
mov
sub
popf
dec
push
loope
movsl
push
lret
iret
imul
ss
cmp
mov
sti
sub
jae
pop
push
gs
adc
gs
mov
ret
out
test
mov
pop
mov
cltd
inc
cld
push
xchg
push
inc
jle
mov
repz
xchg
sbb
and
dec
and
jns
fidivs
inc
jb
add
jp
nop
mov
inc
push
out
mov
shl
dec
push
ret
cwtl
xchg
mov
ret
les
add
adc
out
clc
jp
cmp
push
clc
fisubrl
push
lods
movsl
cmc
js
inc
and
aaa
inc
arpl
aaa
out
push
mov
add
shrl
add
add
dec
jecxz
lea
ds
stc
jle
adc
out
adc
imul
mov
dec
lods
daa
push
and
inc
cmp
or
out
dec
out
lret
pop
cmc
sbb
rcrl
out
pop
popf
fidivs
out
mov
test
setns
pop
ja
jp
icebp
mov
sahf
cmp
xchg
cmp
aam
lcall
adc
call
sbb
or
mov
fiaddl
or
stc
leave
fs
lea
lcall
lret
ficoms
add
cmpb
ja
mov
imul
or
ja
in
xor
xchg
inc
lret
dec
mov
push
mov
andb
stos
ss
imul
cmp
inc
sbb
xor
stc
xorb
inc
sub
ljmp
mov
xchg
xchg
shrb
add
mov
jae
outsl
add
ljmp
cmp
cmp
sbb
add
fdivrs
jnp
adc
in
mov
jae
fs
or
sub
inc
rcr
test
clc
mov
jmp
test
mov
cs
add
cld
imul
cmp
rcll
inc
cmpsb
in
jnp
lods
ret
ljmp
mull
xchg
fdivrp
sbb
pop
in
pop
in
mov
mov
leave
iret
dec
jnp
scas
imul
or
out
mov
add
jle
test
jb
jg
xchg
mov
sbb
mov
nop
xor
inc
or
imul
pop
xor
loope
es
push
xor
rcl
insl
xor
mov
mov
imul
xchg
xor
ret
cmpsb
cmp
into
pop
or
mov
sti
mov
test
mov
imul
lock
adc
shlb
cli
add
sub
cwtl
mov
aaa
xchg
aaa
add
xlat
movsl
popf
push
mov
das
icebp
push
addr16
gs
in
adc
sbb
std
add
cmp
sti
cmp
mov
icebp
cld
cli
fbstp
lock
cmp
repnz
cwtl
iret
sbb
jge
mov
icebp
inc
scas
das
pop
jg
into
dec
xor
cmp
ja
pop
mov
add
or
or
xchg
lods
and
sahf
or
cwtl
cmp
and
jbe
xor
andb
mov
enter
inc
pop
movsb
popf
ja
fwait
xchg
repz
icebp
fwait
jle
xchg
inc
xor
lret
je
push
mov
push
outsb
out
daa
pop
mov
push
loope
cltd
pop
rcr
fcoms
add
push
arpl
popf
xchg
cmp
inc
js
fisttps
in
mov
fstpt
mov
xor
sahf
xor
mov
aaa
add
dec
cmpsb
hlt
aaa
stc
rcr
add
add
fmulp
xor
pop
add
mov
push
mov
push
not
adc
mov
fdivr
mov
xor
arpl
jle
imul
inc
pop
xor
pop
push
dec
add
mov
jnp
or
pop
frstor
icebp
add
mov
push
out
pop
or
movswl
inc
and
xor
test
fisttpl
lock
iret
pop
pushf
iret
movsl
xor
cmp
push
jp
aaa
fdivrs
cmp
or
and
stos
pop
popa
push
pop
jo
dec
ret
je
jne
out
pop
out
jmp
in
push
icebp
mov
push
ds
mov
loopne
adc
aam
in
mov
lcall
pop
xor
dec
mov
inc
inc
rdtsc
pop
add
jmp
das
aas
xor
xchg
dec
ret
fsubr
add
jo
subb
stos
in
dec
arpl
or
lods
xchg
cmpsb
mov
pushf
and
dec
fsubp
pop
adc
jo
icebp
arpl
cmp
pop
out
or
cltd
cmpl
add
and
sub
pop
aam
mov
jl
movb
xchg
and
decl
jno
dec
gs
xchg
fidivrs
or
mov
push
sti
mov
push
pop
mov
pop
inc
cmp
pop
test
aam
pop
xor
pop
sbb
push
test
fld
cli
mov
lcall
ror
test
jno
sbb
rcl
add
mov
call
repnz
pop
fs
xrelease
repz
pop
sbb
das
iret
movsb
add
sub
jns
fwait
call
in
mov
imul
or
and
inc
imul
stc
lahf
inc
sub
aaa
ljmp
out
mov
and
decl
mov
jge
jecxz
cmpsb
nop
dec
movsb
and
rcl
jnp
shufps
xchg
mov
subl
aad
mov
clc
test
cmc
sti
cmp
xor
jae
pop
sub
addr16
aad
push
popa
andb
mov
imul
sub
jnp
nop
aad
adc
cli
sbb
out
add
sbbb
push
rol
mov
mov
test
icebp
int
or
mov
adc
adc
out
sahf
dec
push
int
pop
mov
cld
sbbw
out
push
fwait
loopne
fdivr
shlb
mul
mov
fs
inc
pop
stos
inc
mov
cmpsb
popf
xchg
lea
add
sbb
sbb
orb
adc
lea
rorl
cs
lock
neg
xchg
adc
push
dec
js
cli
faddp
adc
push
out
scas
je
std
sub
test
adc
mov
imul
pop
mov
xor
pop
pop
xchg
out
mov
sbb
aaa
jnp
cmc
xchg
fldt
decl
andl
and
rorb
jp
lahf
xchg
sbb
aad
aaa
add
dec
adc
stos
dec
inc
push
mov
ret
inc
addr16
aam
inc
adc
adc
adc
or
fsub
and
ret
sti
mov
inc
add
add
inc
mov
js
popf
lcall
test
in
sub
test
popf
mov
inc
out
inc
xor
or
mov
addr16
shlb
jnp
popa
repnz
cmp
pop
out
mov
dec
mov
sbb
scas
mov
pop
sub
aam
cmp
daa
add
test
ret
sbb
addb
jb
cs
pushf
subl
dec
dec
cmp
pop
sbb
ds
daa
stos
dec
and
dec
push
and
shrb
scas
adc
das
push
add
mov
lcall
pop
xchg
xor
cmpsl
out
mov
mov
push
inc
std
aad
lahf
nop
cli
mov
xor
push
sub
outsb
std
test
or
fs
and
fisttpl
add
icebp
pop
ds
mov
pop
cltd
test
addb
sub
dec
push
sub
repz
mov
xorl
int
ret
in
push
xlat
pop
in
add
xor
jbe
lret
popf
jae
into
xchg
mov
xchg
test
cmpb
pop
mov
into
xor
std
cwtl
inc
pop
xchg
inc
movsb
dec
pop
lods
dec
push
fstpt
pop
rcl
push
mov
lcall
icebp
push
scas
jge
sub
mov
push
test
pop
cmp
mov
mov
and
aas
scas
lcall
jg
stc
sub
adc
jmp
or
adc
imul
jae
push
mov
mov
lahf
or
les
dec
iret
xchg
inc
or
in
leave
mov
repz
xor
dec
leave
or
dec
xchg
stos
and
lcall
pop
lcall
dec
xchg
dec
rorb
pop
add
cld
sub
or
popf
test
arpl
sahf
mov
xchg
inc
adc
adc
inc
lahf
cmp
lcall
nop
jo
ret
aam
cmp
push
inc
pop
shl
push
sub
sti
cmpsl
xchg
push
push
lret
fbld
and
mov
aas
xor
cmpsb
mov
div
xor
out
mov
dec
test
int3
sti
sarl
iret
lret
loopne
xchg
mov
mov
out
out
popf
push
mov
cltd
sbb
adc
arpl
push
fnstenv
jb
adc
mov
jge
cli
mov
rcrb
add
pusha
inc
js
jno
ja
in
je
pusha
movsl
sbb
or
jne
cwtl
jbe
lock
orl
adc
cmp
jle
ret
lcall
aas
aaa
push
push
mov
sti
dec
js
or
add
mov
loopne
cmpsl
jns
mov
stc
ret
cmpsl
push
lock
adc
mov
dec
lret
sub
sub
pop
and
insl
leave
push
xor
lods
push
enter
mov
mov
mov
adc
mov
nop
sub
jle
lea
xor
ficomps
push
push
hlt
pushf
sbb
enter
or
stos
mov
adc
xchg
or
dec
pop
inc
jnp
add
bound
idivb
repnz
or
cs
pop
xor
es
pop
lea
loopne
jo
push
push
mov
jmp
aas
pavgb
or
inc
inc
mov
and
call
push
and
gs
add
xchg
dec
es
movsl
push
cmp
loop
in
pop
jg
mov
sub
sub
lods
pop
and
xor
sbb
cmpsb
mov
xchg
xlat
xchg
jle
push
lea
mov
lcall
mov
in
gs
scas
mov
xor
stc
pop
sti
insl
or
mov
test
imulb
jo
outsl
push
dec
add
pop
cmpsl
fs
adc
fsubrp
adc
adc
in
int3
xor
and
pop
clc
adc
and
out
sbbb
inc
iret
push
inc
cmp
ret
shll
aam
add
pop
mov
ja
ret
pop
push
sti
shrb
push
inc
insl
shrl
pop
mov
pop
pop
shlb
outsl
sub
push
cmc
inc
pop
andb
mov
adc
push
mov
dec
cmpsb
push
push
dec
les
test
cmpsl
push
andb
data16
data16
in
frstor
movsb
push
inc
shrb
mov
sub
cmp
xchg
mov
mov
jle
sub
adc
sbb
insb
add
mov
inc
mov
fdivrp
xchg
mov
mov
mov
leave
mov
sub
test
decl
enter
xor
lahf
jle
filds
loop,pn
movsb
pop
push
arpl
mov
fistl
add
lock
cmc
sbbl
mov
and
aaa
xchg
and
imul
andl
sbb
insb
mov
movsb
jns
jb
stc
inc
subl
jecxz
mov
jne
mov
sbb
stos
inc
test
jle
pop
ror
lock
mov
lds
mov
dec
ret
dec
mov
push
sub
inc
clc
cmp
enter
insb
sub
sahf
mov
pusha
sahf
or
fsubs
jmp
stos
loopne
cmp
xor
cmp
fcompl
dec
sbb
push
scas
in
mov
jno
mov
or
mov
mov
jbe
arpl
push
std
push
icebp
aad
and
mov
xor
adc
pushf
pop
xchg
call
sbb
dec
dec
dec
jge
push
das
mov
mov
xlat
repz
xchg
or
es
mov
nop
mov
dec
lret
jnp
jbe
pop
and
inc
pop
and
in
sub
sub
jmp
fs
fwait
gs
stc
jbe
mov
sub
xor
mov
pop
frstor
mov
popa
cwtl
add
mov
cmp
mov
pop
adc
pop
test
insb
in
or
jecxz
loop
insl
jns
pop
jecxz
inc
out
or
nop
aam
pop
orl
in
negb
xchg
scas
xor
xorl
inc
mov
push
inc
xchg
leave
jne
push
pop
sub
je
cmpsb
cmp
es
cs
test
outsl
jae
mov
test
int3
lea
cli
or
mov
repz
or
add
sub
dec
orb
xchg
dec
sarl
sub
jno
loopne
mov
ja
aaa
test
fdivp
stos
out
sub
or
lcall
test
loope
mov
jg
mov
aam
lea
dec
xor
xchg
mov
dec
push
jge
and
mov
add
jb
xchg
dec
mov
rorb
in
pushl
movsl
jbe
lods
out
xchg
jnp,pt
mov
sti
cmp
add
dec
lret
add
jl
stos
ret
lods
int
out
lods
test
cmp
sbb
sbb
and
fisubl
aaa
mov
ds
cmp
ja
mov
sahf
pop
pushl
aas
push
add
daa
lea
movb
pop
leave
sub
addr16
push
sbb
ss
faddl
push
ljmp
jl
and
scas
xchg
adc
add
xor
adc
cmp
pop
mov
xor
movsl
adc
push
mov
stc
mov
adc
xor
fistps
dec
cs
outsl
jp
xor
in
push
dec
pop
mov
pop
lock
xor
ds
or
adc
and
cmp
mov
add
dec
insb
fimuls
rcrl
add
add
mov
data16
push
cli
inc
or
push
xchg
cltd
andb
rol
xor
ds
ret
sub
cmpsb
cltd
notl
sbb
lcall
mov
push
adc
into
jecxz
fnsave
add
jle
sub
mov
dec
jg
outsb
test
int
xchg
repz
mov
imul
mov
mov
cmp
dec
repz
jb
push
les
pop
stos
sbb
xchg
stos
in
push
jmp
bound
and
das
inc
adc
xor
shll
mov
imull
xchg
aas
inc
in
mov
out
cwtl
xchg
shrl
aad
jb
dec
push
lods
outsb
nop
dec
fsub
movsb
mov
mov
lds
cmp
inc
inc
mov
mov
or
cld
pushl
ret
mov
adcl
dec
imul
fwait
sbb
rol
lds
rcll
cmp
das
ret
popa
push
mov
into
pop
test
loope
mov
sub
lret
sub
hlt
int3
js
push
andb
mov
pop
loope
repnz
dec
mov
lret
out
jge
sub
pop
scas
icebp
xor
movsl
shll
outsl
jne
dec
stc
ret
or
ljmp
push
loope
inc
mov
sti
mov
sbb
jmp
fiadds
sbb
xchg
mov
test
das
imul
xchg
lods
stc
lods
insl
mov
sbb
std
data16
movsb
cmp
push
push
cld
xlat
sub
and
push
or
sub
out
std
addr16
jnp
jnp
jae
push
jecxz
cmc
mov
pop
mov
xor
mulb
lea
loope
popf
mov
in
scas
push
mul
adc
mov
or
lcall
pop
xchg
inc
xchg
test
jnp
sub
pop
fsubrp
movsb
lods
cs
in
in
push
rolb
dec
imul
dec
lcall
test
adc
call
aaa
insl
dec
pop
ds
rep
mov
xor
inc
psllq
xchg
mov
popf
xchg
jp
jns
leave
jae
shl
mov
fisubrs
sub
mov
stos
inc
fs
ret
or
ss
pop
dec
pop
data16
push
cmp
sub
lds
clts
jmp
loopne
add
cmp
out
iret
scas
mov
xchg
xchg
jae
test
add
sbb
push
add
sahf
test
rcrb
cmpsl
jo
mov
fsubr
add
decb
xchg
jbe
mov
add
popa
adc
push
ljmp
xor
movsb
rolb
test
mov
iret
paddsb
jbe
dec
cmp
cmpsb
pop
sbb
cmp
xchg
insl
pop
out
mov
xor
rcrl
push
cmpsl
dec
popa
bound
out
in
sub
sub
mov
push
test
pop
pop
sahf
mov
add
pop
stos
aaa
dec
inc
sbb
fstps
xlat
call
push
iret
cmp
mov
sub
ja
out
lea
cmp
jp
inc
fdivr
pop
or
into
add
fistl
in
ret
jo
sbb
or
bnd
into
jle
pop
pop
andl
add
mov
adc
inc
js
dec
bound
mov
xchg
xchg
repnz
fldl
jbe
add
dec
mov
orps
mull
mov
xchg
dec
pop
mov
fs
fucomi
loope
scas
or
into
mov
xchg
stos
jb
add
xchg
inc
adc
insb
inc
test
shl
loope
loopne
jo
mov
jbe
lret
rolb
and
and
inc
jp
sbb
idivl
loope
in
pop
pushf
sbb
or
mov
in
and
xchg
pop
cmp
lods
popl
inc
stos
or
xor
mov
push
push
das
or
inc
lea
iret
out
push
mov
outsb
sub
add
ret
xchg
sub
cltd
pop
or
mov
cmpsl
dec
jle
movsb
test
or
add
sub
add
jg
xorl
inc
scas
add
mov
sub
repnz
xchg
stos
mov
cltd
lret
dec
jae
hlt
mov
lahf
repnz
push
sub
out
add
and
out
aam
mov
add
adc
mov
push
add
into
out
movsl
add
push
jmp
cmp
test
sti
jnp
mov
xorb
int3
mov
sbb
xchg
sbb
mov
add
push
movsl
cmp
out
xlat
inc
jb
inc
jae
xchg
out
mov
cmp
adc
xor
mov
aas
push
scas
mov
sbb
or
push
pop
push
push
and
sti
sbb
pusha
pop
call
incb
sarb
push
movsl
and
push
mov
dec
lods
out
inc
ss
mov
push
inc
pop
jp
jmp
ljmp
cld
add
out
or
jle
push
int
out
lods
lret
bound
ds
je
jp
fildl
or
fsts
pop
sub
xor
push
mov
sbbb
pop
mov
jecxz
jnp
std
inc
push
clc
faddp
cmp
aad
xor
mov
add
push
leave
pusha
aam
std
popf
jle
mov
adc
pusha
push
lods
cltd
sub
add
push
mov
jb
cmp
outsl
int
cld
pop
lcall
cmpsb
mov
pushf
in
int
mov
push
clc
or
xchg
pop
push
mov
dec
idivb
fisttpll
adc
dec
outsl
jge
jae
into
int3
mov
mov
push
push
sub
mov
lret
iret
stc
xor
mov
inc
mov
cmp
jmp
jb
inc
cmp
sub
cmc
loop
and
iret
jo
stos
stos
mov
lods
movsb
sbb
cmp
mov
iret
jg
movsl
pop
mov
repz
scas
pop
js
jg
mov
mov
iret
and
jae
ficomps
in
add
int3
je
int3
push
lahf
lds
outsb
mov
in
jae
pop
dec
jmp
push
inc
mov
lock
cmpsl
push
or
pop
ss
xchg
subb
repz
aas
mov
mov
jg
cmp
fs
sahf
pusha
out
sbb
push
mov
out
push
push
iret
xchg
xchg
add
clc
prefetch
rcrl
sbb
fsubrl
aam
and
nop
in
bound
cmp
int3
mov
imul
add
mov
fisttpll
rcrl
and
jns
rcrb
dec
mov
pop
mov
add
cmp
aad
in
add
imul
shll
add
mov
mov
movsb
incb
loop
add
jno
or
pop
xor
mov
movsb
scas
mov
pop
mov
jecxz
pop
movl
add
sub
or
leave
repnz
cmp
hlt
fs
and
push
pushf
lret
xor
sbb
sbbl
mov
pop
xchg
movsb
lock
insl
adc
and
repz
dec
push
movsb
push
movsl
loopne
adc
dec
out
jno
fst
sbb
adc
xrelease
adc
std
cmp
int
mov
sub
or
push
arpl
cmc
mov
sbb
and
rorl
mov
dec
andb
fs
out
je
sub
fistpll
jp
lods
test
faddp
cmpb
push
bound
das
imul
aaa
sbb
cmp
rcll
imul
cmpsl
in
and
mov
inc
dec
mov
and
repz
inc
scas
cltd
int
mov
sahf
add
es
rcrl
jbe
inc
mov
adc
lock
sahf
push
jb
and
icebp
aam
sub
scas
pop
sbb
inc
dec
sub
cli
push
and
adc
jbe
and
aam
adc
cmp
in
aad
and
push
into
sub
jg
cmp
sub
or
stos
cmpl
int
in
call
mov
shll
adc
jmp
cmp
arpl
movsb
lahf
sub
cmc
mov
jo
xchg
ret
rol
scas
fdiv
lahf
cltd
outsb
xor
jmp
pop
push
rcl
icebp
xchg
push
mov
adc
cmp
daa
enter
test
aam
addr16
dec
cmpsb
fadd
adc
popf
leave
xchg
adc
mov
andl
sub
je
test
lret
add
sub
adc
pop
lds
std
cmp
ljmp
in
lods
adc
jbe
sub
icebp
enter
sub
ds
movsl
outsl
mov
fwait
jp
testl
sbb
clc
mov
mov
push
dec
cmpb
xchg
push
dec
adc
es
or
pop
js
push
out
push
ja
cmp
xchg
adc
mov
cmc
mov
pusha
xchg
aaa
push
add
test
mul
pop
in
inc
lock
adcb
sbb
dec
mov
out
addr16
inc
out
xchg
cmc
or
fadds
jge
pop
and
push
shll
add
pop
dec
adc
outsl
mov
into
hlt
mov
int
pop
push
dec
pusha
xor
lret
js
dec
arpl
and
jns
gs
test
xor
lahf
jb
sbb
leave
movsl
addb
inc
mov
pop
pop
xchg
imul
stos
mov
dec
add
stos
ret
xchg
imul
data16
pop
insl
inc
mov
in
imul
mov
pop
or
mov
or
push
or
sti
pushf
decb
pop
sbb
cmp
ljmp
pusha
mov
mov
das
jns
in
out
xor
push
test
push
bnd
pop
bound
movsl
inc
leave
xor
pop
ljmp
mov
int
pop
mov
pushf
loope
pop
push
pushf
cmp
fdivrs
cmp
sub
pop
add
aas
ja
test
mov
es
mov
out
rol
xor
cmpsl
mov
sbb
cmpsb
inc
push
xchg
xor
push
fsubs
adc
insb
sbb
xchg
push
xchg
ret
repz
scas
or
push
jae
jle
addr16
cmp
and
sub
xchg
and
popa
xchg
adc
mov
pop
xchg
xor
xlat
stos
jge
xchg
lea
jae
xchg
add
mov
pop
fisttps
hlt
xchg
ja
iret
test
nop
es
push
out
jae
and
int
pop
cld
roll
pop
add
mov
iretw
xor
mov
xchg
fs
cwtl
incl
mov
adc
jb
test
xchg
pop
in
push
rclb
pop
sahf
repnz
pop
sbb
mov
sbb
and
stc
mov
mov
push
jp
cmc
push
in
leave
out
lods
pushl
sub
xor
arpl
mov
cld
xchg
insb
fdivrs
push
lret
cmp
sub
xor
jmp
or
rep
ljmp
lock
add
adc
rcrl
xor
in
mov
sub
add
adc
mov
test
mov
test
jbe
xor
std
daa
jecxz
mov
pop
and
push
dec
icebp
push
push
shll
mov
mov
in
xchg
arpl
or
add
movsl
mov
dec
or
nop
andl
sub
mov
inc
outsl
add
es
lret
mov
aad
xchg
mov
cmp
inc
jo
cmp
std
idivb
push
mov
aad
dec
cmpsl
out
ljmp
loopne
test
sbb
inc
int
adcb
es
mov
or
cmp
dec
cmpsb
add
fcompl
fdivs
xchg
push
jno
test
mov
push
pop
loop
pop
and
adc
pop
jb
scas
inc
and
push
shlb
les
fldl
sbb
and
leave
out
mov
cmp
jno
inc
mov
jnp
sbb
data16
push
js
les
popa
es
pop
aam
pop
cmpsl
ljmp
dec
cltd
xchg
andl
ljmp
fdivs
mov
test
push
dec
xchg
stc
hlt
jmp
inc
ljmp
cmp
movsl
sub
ret
or
inc
dec
inc
loope
xchg
cmp
inc
shl
mov
mov
ret
int3
imul
mov
bound
nop
jle
out
loopne
adc
lods
leave
nop
mov
push
ss
mov
out
int
mov
aad
and
inc
adc
cmp
int3
lret
add
call
imul
pop
mov
adc
cltd
mov
movsl
in
into
sub
inc
inc
and
lea
xchg
jmp
mov
mov
mov
add
mov
insl
mov
mov
shrl
add
add
arpl
push
stos
inc
or
stos
loopne
ret
lcall
jecxz
and
out
or
mov
leave
xchg
mov
sub
int3
arpl
lock
xor
aas
sub
pop
mov
jl
cmc
int
adc
in
add
sbb
add
daa
jae
push
sub
pop
add
inc
imul
fldt
pop
js
mov
mov
stos
mov
fmuls
sti
sarl
cmpsb
dec
shr
sahf
or
gs
test
in
ret
subl
out
je
std
stc
fnstenv
lcall
xlat
int3
jmp
in
loop
dec
clc
bound
mov
out
push
push
pop
cmp
add
jb
bnd
dec
adc
mull
push
xor
repnz
call
cmp
mov
ficoml
mov
out
out
sub
ret
xor
lret
xor
pop
clc
dec
xchg
mov
adc
fbld
sub
inc
out
daa
imull
cmp
andl
movsl
mov
sahf
dec
inc
jae
nop
add
xor
xchg
cmp
outsl
sar
push
cmc
dec
pop
lret
mov
loopne
push
fldenv
dec
xchg
xor
sub
mov
out
unpckhps
sub
imul
in
pop
mov
jle
mov
jns
or
test
test
sbb
je
mov
cltd
outsl
pop
lret
add
push
in
lock
jno
mov
call
lahf
in
cmpsl
testl
cmpsl
and
jl
xchg
aad
or
ret
sub
cli
movsb
test
mov
subl
cmc
stos
out
stc
das
dec
xchg
lods
in
leave
jp
mov
mov
pop
push
xor
mov
test
pop
pop
add
mov
decl
xor
repnz
xchg
outsb
frstor
inc
popf
or
cltd
inc
or
roll
call
loope
fs
push
rcrb
iret
arpl
mov
loopne
lret
xchg
adcb
inc
xor
sub
inc
mov
add
inc
pop
lock
mov
bound
mov
jno
mov
frstor
or
mov
cli
xchg
mov
mov
xor
hlt
popf
xchg
adc
mov
xchg
or
xchg
sub
add
xchg
dec
inc
mov
fs
scas
dec
add
fbstp
in
fwait
push
shlb
addr16
rcl
ret
ret
aam
mov
sbb
subps
sub
test
lcall
push
call
lock
mov
mov
repz
pop
shll
stos
mov
dec
push
xchg
movsl
das
pop
pop
push
and
inc
pop
std
add
mov
hlt
adc
xor
xchg
pushf
fs
mov
and
lods
inc
rcrb
adc
add
xchg
sbb
cmp
sbb
es
mov
cmp
and
popl
jbe
pusha
shll
test
insl
and
cmpsl
xor
pop
adc
movsb
out
notl
fisubrl
sub
pop
adc
sbb
jg
outsl
jecxz
stos
lds
lods
leave
popf
ret
sar
xchg
cwtl
or
adc
out
and
mov
mov
ja
imul
dec
sbb
jecxz
mov
xchg
xchg
mov
rcr
pop
jecxz
popl
or
mov
xchg
push
sti
push
in
data16
ret
cmp
mov
loope
loope
push
lock
ljmp
xorb
std
dec
mov
cmp
xchg
in
adc
icebp
ficoml
push
and
imul
mov
sub
jns
mov
ret
loope
adc
stc
aas
mov
dec
test
ja
add
push
xor
and
loop
popf
mov
add
jl
iret
jae
mov
add
push
cli
addl
stc
sub
test
imul
dec
fnstcw
cwtl
ja
sbb
imul
aam
inc
jns
in
push
sbb
mov
sub
lret
fs
push
je
xlat
lcall
enter
out
pop
jl
out
pop
loop
sub
push
adc
icebp
jmp
enter
repz
add
fisttpll
xor
movsb
fxch
int
and
cmp
push
cli
daa
cmpsl
ja
pop
sub
cmp
popf
stos
xor
andl
js
sub
or
cmpsb
ds
mov
out
fistpl
add
pop
lret
loop
push
and
in
or
or
inc
cmp
sub
jae
outsb
or
adc
sbb
sub
cmc
test
repz
outsl
mov
pop
out
mov
jmp
mov
inc
das
cmc
mov
cltd
test
lcall
cmp
jmp
or
imul
les
rolb
dec
jecxz
sbb
add
mov
sbb
pusha
mov
cmpsb
daa
mov
mov
loope
nop
int
lock
pop
or
les
dec
test
ret
ja
lahf
enter
in
icebp
es
dec
aas
xchg
movl
aam
sub
jb
cmpl
leave
and
pop
les
dec
mov
nop
enter
mov
lods
cmpb
jg
jns
add
outsb
outsl
push
cmc
xor
adc
pop
xchg
ret
add
pop
sahf
in
push
and
sbb
pop
inc
outsb
pusha
jne
mov
js
ja
jmp
push
mov
push
mov
pop
das
in
mov
rcll
jne
inc
ret
fdivs
sbb
test
jnp
jb
mov
jle
outsl
mov
jb
xchg
cld
js
nop
pop
icebp
pushf
out
pop
nop
shll
out
or
aaa
jecxz
lret
xchg
lods
enter
ds
imul
xor
xor
inc
pop
iret
xchg
jns
pop
es
sahf
aad
sbb
or
xchg
jmp
lods
inc
dec
js
sti
test
jne
push
adc
pushf
push
popf
push
mov
outsb
xor
jge
mov
popf
stos
adc
sbb
push
dec
mov
cmp
popf
and
dec
lret
push
mov
ss
outsb
sbb
test
aaa
jmp
testb
cmp
test
cld
aad
addr16
popa
push
je
cli
cmp
cmp
mov
jno
mov
mov
push
sub
mov
xchg
xchg
ds
roll
dec
in
jb
dec
orl
in
sbb
xchg
cld
loop
sub
je
mov
bnd
adc
scas
test
pop
push
sub
or
mov
sub
sbb
inc
or
int3
dec
loope
push
mov
repz
sahf
ljmp
sub
movsb
lods
mov
ja
arpl
insl
cli
sub
pop
popf
and
int
mov
pop
int3
xchg
sub
xorb
int
imul
outsl
call
insl
bound
cmpsb
mov
movb
stos
xchg
jb
icebp
xor
out
adc
xorl
adcl
out
stc
mov
popf
cld
stc
inc
ja
xchg
mov
mov
sbb
lock
lods
jae
push
in
mov
mov
inc
dec
imul
xchg
mov
ret
loopne
sbbl
sbb
xor
xor
jno
popf
mov
add
xchg
nop
sahf
push
rolb
cs
sbb
lcall
aas
pop
std
hlt
fnstcw
push
test
repnz
pop
dec
test
ret
sub
jmp
test
addr16
add
jge
sbb
negb
mov
mov
imul
jge
int
sub
sbb
daa
outsl
add
sbb
imul
inc
push
pop
xchg
imul
adc
jp
push
out
jle
sub
jnp
ja
jmp
pop
pop
dec
bound
and
mov
in
mov
ss
add
mov
loopne
cmp
movsl
rclb
mov
cld
arpl
repnz
jbe
ja
push
fisubs
cmp
sarl
out
inc
sub
rcll
inc
clc
jb
pop
jo
shlb
sahf
dec
mov
sub
bound
in
and
shlb
cmp
imul
outsl
repnz
cwtl
mov
and
xchg
pop
lret
xor
sti
inc
mov
gs
test
pop
mov
sbb
lods
pop
hlt
in
dec
mov
ret
push
push
loop
cmpsb
mov
and
push
rclb
and
push
jge
leave
or
cwtl
xor
mov
push
sbb
sahf
movsl
daa
aaa
shll
movsl
in
dec
imul
pop
or
ljmp
pop
inc
mov
mov
test
xchg
add
push
cli
xchg
pop
inc
cli
dec
cmpl
xchg
add
inc
push
sub
call
insb
mov
xor
sbb
dec
xor
xor
cmpl
cmp
jbe
sbb
lock
data16
jle
jl
lods
lods
imul
xor
jle
sahf
sbb
cwtl
mov
call
nop
es
outsl
mov
ret
hlt
fldl
stc
fsubl
jp
sbb
mov
scas
dec
or
push
data16
hlt
loope
cli
shrb
jmp
cmpsl
into
shll
mov
sti
test
push
jns
mov
out
mov
add
dec
into
add
sarl
or
sbb
mov
push
xor
scas
fwait
jne
inc
js
aam
adc
lahf
ret
repz
and
adc
outsb
cmpsl
pop
push
xor
dec
repnz
push
and
sub
fcompl
jb
jl
mov
push
out
rcrb
xor
inc
xchg
xor
in
mov
in
push
mov
sub
cltd
sub
sbb
pusha
loope
icebp
cmp
cld
sahf
xor
xchg
xchg
xchg
jns
loopne
add
repnz
pop
jecxz
ror
inc
mov
cmp
iret
test
mov
push
in
ljmp
and
cltd
data16
cmp
loope
aam
cmp
ja
insl
mov
or
sub
out
push
add
xlat
repnz
ficoms
jne
cli
xor
jp
pop
clc
inc
xor
inc
icebp
and
loop
push
mov
imul
mov
fistps
xor
sarl
mov
cld
nop
subl
cwtl
mov
popf
loopne
mov
cld
mov
xchg
out
add
and
inc
nop
sub
mov
test
pop
jns
or
mov
mov
mov
je
inc
inc
rorl
loop
inc
test
jbe
mov
inc
repnz
xor
mov
adc
xchg
jg
pop
outsb
fsts
xchg
jb
imul
fsts
mov
sbb
push
in
shrl
pushf
js
insl
aad
mov
jl
fdivrl
ljmp
push
ficoml
hlt
stos
push
cli
sub
mov
inc
int
lahf
ja
pop
sti
aam
cmp
sarb
cmpsl
jne
lods
outsb
div
xor
je
mov
outsb
cmp
jecxz
jno
jne
push
fldcw
nop
adc
stc
jno
push
and
clc
cwtl
or
dec
mov
dec
iret
cmc
repnz
xchg
xor
loope
das
aas
pop
fmuls
dec
xchg
cmp
jns
inc
xchg
pop
lea
in
push
mov
jl
ret
add
test
jge
sar
fdivr
mov
jg
aam
loopne
nop
test
sbb
and
xor
inc
shlb
mov
aad
imul
sbb
inc
sub
les
inc
repnz
sub
jg
adc
sbb
insb
jae
pusha
clc
fistps
insl
and
push
mov
test
movsl
dec
test
sub
pop
adc
cmp
aad
js
inc
or
lods
xchg
cmp
pop
jle
mov
sbb
stc
push
lcall
outsb
mov
mov
jle
out
mov
popf
lds
sbb
jecxz
push
and
scas
mov
aaa
mov
mov
dec
dec
je
stc
gs
ja
lret
dec
adc
cmpsl
pop
push
jmp
and
xchg
cmp
mov
rcr
ds
jecxz
xchg
cmp
stc
in
lret
mov
jb
stc
and
fcmovb
push
stc
or
sarl
xor
in
or
dec
imul
ret
imul
loope
fiaddl
popf
test
out
inc
inc
and
mov
aad
push
mov
cs
aas
imul
frstor
aad
enter
std
cmp
mov
inc
data16
lods
xchg
addl
addr16
and
insl
cmpsl
bound
add
pop
fnstenv
push
sahf
sub
and
in
and
push
pop
repnz
clc
jbe
aaa
les
insl
jne
sub
cmpl
jg
lret
inc
nop
insb
jge
inc
inc
rcr
mov
cmp
jne
push
sbb
jl
lahf
aaa
push
push
jecxz
push
push
xchg
insl
mov
mov
adc
shrl
mov
push
ja
jnp
add
in
out
pusha
rorb
les
jmp
in
pop
mov
fstps
dec
incb
add
dec
push
mov
xchg
aas
lea
int3
aad
bound
mov
mov
sub
lret
hlt
push
pop
fs
push
sbb
data16
rcrl
stc
mov
insb
pop
lock
daa
sahf
std
fwait
xor
insb
outsb
dec
iret
cmp
fst
in
ret
mov
jnp
and
xor
clc
push
gs
mov
inc
push
out
jl
das
outsb
pop
jle
mov
push
fldenv
movsb
cli
lret
leave
cld
fdivs
cmp
inc
js
arpl
or
in
int
push
scas
in
dec
arpl
push
inc
enter
mov
lds
push
das
rcrb
mov
and
xor
js
nop
dec
mov
sbb
mov
push
fcompl
ja
insl
lret
lods
inc
fsubrs
mov
cld
fcomps
xchg
sub
push
sbb
jle
sti
es
cmpsb
jns
dec
jmp
subl
xor
iret
push
stc
jae
rcr
mov
fs
scas
adc
pop
fs
rclb
and
dec
pop
test
shll
push
xchg
cmp
orb
lret
inc
inc
test
pop
or
inc
test
xchg
test
jl
out
enter
call
roll
mov
or
movsl
dec
jb
sbb
fcoms
pop
cs
adc
mov
imul
mov
test
btc
inc
aad
enter
dec
bnd
xchg
les
inc
mov
mov
add
push
in
mov
sub
in
push
mov
adc
aaa
adcw
stc
push
out
popa
sar
sub
out
dec
sub
das
mov
fidivrl
pop
out
jle
mov
push
sbb
mov
in
inc
or
sub
loopne
out
cli
or
xchg
mov
imul
hlt
dec
push
movsb
pop
ljmp
xchg
xor
lock
inc
sbb
pop
mov
inc
push
or
in
mov
sub
ja
loop
leave
repz
or
sahf
xchg
popa
in
and
mov
adc
sub
dec
fdivs
cld
cwtl
mov
lock
lock
pop
ffree
mov
icebp
xchg
sub
sub
fwait
pop
xlat
add
mov
mov
pusha
lahf
sbb
dec
in
sub
outsb
hlt
ja
mov
cwtl
lock
mov
xor
jns
or
mov
sub
or
inc
cwtl
xchg
rorb
xlat
and
aas
dec
jns
sub
add
mov
aas
mov
cwtl
pop
jno
mov
aam
sub
ss
std
jo
out
sub
dec
movsb
rcrb
mov
dec
dec
sub
mov
jg
inc
jmp
rcr
mov
mov
dec
mov
fcmovnu
push
jmp
int
add
mov
and
nop
and
sub
nop
jb
fistl
or
mov
dec
outsb
add
imul
add
push
add
in
adc
dec
push
adc
add
cmpsl
pop
push
shlb
jo
andb
das
sub
lret
xorb
mov
test
sar
inc
xchg
cld
mov
jl
cs
div
adc
in
mov
adc
ss
jl
xor
pop
mov
cmp
inc
clc
xchg
testl
or
notl
addr16
rclb
mov
fidivrl
fcomps
or
xchg
lcall
mov
pop
pop
sub
lds
sub
jg
int3
shll
cmp
add
cmp
jg
cmpsb
and
jge
sti
jb
inc
cltd
xor
xchg
or
cmp
jle
sbb
out
push
aam
push
mov
ret
push
outsb
jno
xor
stos
or
lods
mov
sbb
rcrb
cmp
icebp
sbb
add
jns
rcrl
fisubrl
mov
lods
and
lret
dec
push
cmp
mov
out
pop
lods
out
mov
enter
cmp
jns
mov
cmp
jno
push
push
jb
sbb
dec
lret
pop
push
and
repz
adc
xor
out
mov
in
xchg
scas
jne
ret
sub
fs
jp
and
add
gs
loope
les
sti
rcrb
inc
sbb
inc
mov
arpl
pop
and
lahf
mov
adc
xchg
mov
xchg
adc
mov
nop
lahf
jle
in
mov
and
add
hlt
push
mov
lock
or
adc
jle
scas
cmp
sbb
mov
jb
rolb
dec
int
shlb
fadds
adc
push
xor
mov
add
lods
gs
fbld
jns
in
sti
xor
rcrb
jl
jno
imul
fwait
pushl
xor
sbb
int3
push
pop
or
pushf
pop
or
mov
mov
out
addr16
cmp
inc
cltd
test
mov
es
cmc
mov
push
push
lret
popf
adc
rcrl
mov
ds
clc
dec
push
sub
jmp
mov
aad
ret
loop
adcb
aam
xchg
mov
jle
mov
fs
test
xchg
bound
push
ret
pop
cmp
push
cli
pusha
into
sbb
adc
fldlg2
sub
xchg
lea
roll
int
pop
push
cltd
or
inc
mov
cli
mov
push
lret
sbb
cmpsl
sar
jae
inc
add
pop
and
lods
xchg
mov
ljmp
adc
jecxz
and
fidivl
inc
int
jl
es
sbb
push
mov
insl
jle
arpl
daa
mov
insb
inc
fstp
sbb
fwait
lret
xchg
out
inc
pop
pop
jecxz
loop
push
test
movsl
lods
mov
sub
adc
jne
in
lock
fcom
dec
dec
inc
shlb
dec
movsb
arpl
fdiv
xchg
mov
add
adc
into
pop
lods
in
or
aaa
inc
das
es
mov
ljmp
daa
add
cmp
cmpsl
cwtl
pop
push
cwtl
dec
inc
shl
xor
adc
out
daa
rcr
jns
imul
pop
push
jno
test
and
mov
mov
push
lods
arpl
or
daa
add
dec
sbb
mov
movsb
mov
cmpsl
lds
mov
gs
jle
inc
xchg
lods
mov
cs
mov
jle
mov
fildl
xchg
enter
add
popa
lahf
jae
inc
sbb
lahf
and
lods
jbe
push
dec
sbb
push
sbb
repnz
int
pop
lods
sbb
and
add
mov
jmp
jmp
jl
mov
lock
mov
scas
sbb
sub
stos
push
push
daa
lret
popa
out
jge
test
add
fnstsw
and
push
shlb
scas
roll
or
outsl
fadds
out
sub
xchg
int3
ss
test
ss
push
negb
and
rcll
out
add
cmp
fwait
cmp
mov
xchg
sub
jge
idivl
pop
mov
out
pop
or
in
adc
adcb
cmp
dec
sti
inc
pop
push
ds
sbb
ss
lods
enter
nop
mov
xlat
lahf
sbb
sub
aaa
adc
mov
or
movsb
sbb
leave
rcr
fcoml
js
daa
fcompl
andl
lret
mov
jo
xchg
arpl
jp
mov
xor
pop
pop
and
imul
or
sub
xor
mov
ds
ja
mov
mov
out
pusha
mov
cmp
cmp
dec
sbb
cmpsb
sbbb
jl
cmp
push
rcrl
and
sbb
xlat
addb
imulb
iret
mov
in
adc
jl
jge
adc
icebp
shll
shrl
adcb
inc
jns
add
mov
pop
mov
xlat
int
ds
push
imulb
scas
adcl
mov
push
loop
push
push
jbe
push
pop
mov
pop
and
cmp
jmp
inc
lods
mov
cmp
iret
cmc
out
lret
and
cmpb
fistpll
xchg
mov
pop
add
pop
adc
test
lea
xlat
mov
dec
sub
out
jnp
mov
lahf
mov
cmp
mov
stos
leave
xchg
insl
rcr
jmp
mov
push
ret
cli
xchg
sub
jb
jae
adc
xchg
mov
xlat
orl
call
mov
jo
rorl
sub
jne
push
xlat
fistpll
push
lcall
mov
enter
inc
jle
pop
inc
sub
out
mov
stos
mov
aaa
mov
rcr
xor
into
loopne
xor
push
cmp
cmc
insb
and
mov
loopew
cs
mov
sbb
push
fldl
jle
mov
mov
lods
scas
mov
mov
mov
js
test
xchg
sbb
or
in
out
popa
pop
fsubrp
imul
sbb
or
aas
in
mov
push
sub
scas
lods
popf
loope
jecxz
add
js
insb
dec
in
sahf
dec
stos
mov
and
aas
in
enter
daa
xor
lock
add
notl
xchg
mov
js
mov
inc
adc
jl
scas
push
jle
lods
xor
xchg
std
mov
add
xchg
and
or
mov
mov
test
int
fwait
cld
ret
test
cli
hlt
mov
pop
pushf
sbb
mov
jae
pop
adcb
stos
insl
kmovw
and
in
mov
into
cltd
fsubr
jl
sub
out
xchg
in
stc
mov
mov
xchg
xchg
sbb
jno
xor
push
push
adc
fstl
adc
cli
jo
mov
int
icebp
lea
js
clc
jb
push
arpl
iret
xchg
push
add
mov
test
les
fs
popf
mov
xor
adcl
mov
rep
add
mov
frstor
sbb
out
push
or
dec
cwtl
rorb
push
push
and
xchg
loop
mov
rcr
push
pop
cli
cs
add
push
sti
mov
stos
fldl
mov
pop
mov
add
int
mov
adcl
sub
scas
mov
mov
mov
mov
sbb
sub
push
sub
xchg
lock
push
xchg
imul
test
test
clc
xchg
jmp
cmpsl
ja
jb
xchg
popa
adc
xorb
popa
iret
jmp
xor
jecxz
sar
sub
cmp
inc
repnz
or
stos
sub
daa
ja
mov
or
jle
sub
or
jle
mov
imull
xchg
ss
add
pusha
shrb
mov
call
mov
cmp
imul
sbb
jae
jl
jae
sbb
movsl
sar
mov
ffreep
bound
lret
mov
stos
adc
jnp
push
sub
je
call
xor
jo
sbb
mov
dec
stos
jle
sbb
or
subl
cwtl
mov
jp
dec
ret
sbb
inc
loope
adc
lds
jno
cmp
xchg
and
lcall
and
or
dec
add
push
jl
jmp
test
lods
stos
xchg
clc
xchg
repnz
fimull
mov
adc
mov
cld
sub
xchg
fnsave
mov
test
push
cmpsl
leave
inc
jp
loope
jp
lcall
cmp
xor
adc
adc
cbtw
and
jbe
movsl
push
push
sub
je
sahf
out
lea
adcl
or
fisttpll
repz
icebp
adc
pop
aam
dec
sarb
and
sahf
lea
lea
out
in
rcrl
in
sbb
dec
rolb
stc
rorl
or
insl
and
push
lahf
inc
and
ljmp
sbb
jo
scas
repnz
dec
add
xor
jl
adc
mov
xchg
fwait
mov
imul
out
icebp
fs
in
mov
pusha
jg
or
push
xor
add
sub
je
jnp
arpl
loope
ljmp
test
mov
lahf
das
xchg
push
decb
xchg
jle
sbb
push
ffree
mov
dec
push
or
or
sbb
enter
lods
stc
or
add
pop
loope
push
add
adc
fadd
jne
pop
pop
push
and
stos
jno
add
dec
lea
or
js
push
out
or
add
cmpsb
lods
sahf
xchg
iret
cltd
decl
lds
sub
ja
leave
or
jbe
pusha
cmp
adc
mov
flds
pop
dec
in
xor
and
jl
xchg
jo
jno
inc
inc
into
sbb
imul
cld
popf
test
sarb
xor
jo
cmpsl
xchg
mov
dec
test
int3
fcomi
or
outsl
jl
xchg
xor
das
std
mov
push
aas
insl
lods
jne
cmp
push
xchg
jp
and
vucomiss
sbb
push
push
push
cmc
sub
scas
push
in
pop
mov
jg
inc
xbegin
lods
fcmovnbe
and
dec
xor
jecxz
push
mov
dec
movsb
stos
stos
and
out
xor
into
popa
and
xchg
mov
cld
xchg
cltd
sub
repnz
sbb
lods
xchg
popa
push
mov
xchg
mul
cmp
pop
rcrb
outsl
jbe
sub
cmp
fstl
mov
inc
loop
cmp
adc
mov
mov
imul
xlat
push
subl
mov
test
clc
mov
notb
pop
xchg
and
cli
popf
push
hlt
inc
dec
xchg
out
push
sbb
or
std
jno
arpl
lret
sbb
dec
hlt
inc
jp
in
js
push
sub
add
sti
into
adc
jge
pushf
enter
cmc
enter
ret
scas
mov
push
nop
lea
sti
and
cld
ficoms
or
test
jg
jb
outsb
adc
pop
jl
call
fbstp
jne
cmpsb
loope
lods
aas
stc
mov
mov
push
push
lods
lods
fxtract
popf
mov
pusha
js
dec
jecxz
add
sub
hlt
je
mov
aad
inc
movl
or
push
add
mov
cmpsb
scas
inc
inc
pop
jb
clc
push
or
loopne
out
ja
fisubrs
adc
jb
or
ret
aad
shll
dec
cmc
cmp
fchs
pop
movsl
lock
in
cmpsb
outsl
lahf
inc
mov
jle
in
or
enter
adc
scas
xlat
outsb
mov
cli
test
cmp
xor
xchg
add
aaa
mov
testl
mov
jne
movsl
sbb
add
cmc
cld
testb
dec
insb
mov
push
cmpb
imul
movsl
in
popa
mov
ret
jbe
call
subb
ret
and
cmp
and
xchg
jecxz
fs
out
mov
lds
push
cli
sbb
sbb
jge
ljmp
jmp
fnsave
dec
or
out
adc
cmp
fldcw
mov
fsubl
or
dec
sub
in
lock
add
add
out
cltd
mov
cmpsb
dec
and
fdiv
and
outsl
sbb
jno
mov
lcall
cmpsb
shlb
mov
inc
leave
sub
stc
gs
test
xchg
inc
or
sarl
cmp
inc
mov
mov
mov
pushf
xchg
shlb
ljmp
push
adc
fistl
mov
es
pusha
ljmp
cmc
xchg
mov
pop
xchg
fldt
adcl
mull
or
ja
hlt
out
or
pop
ret
imul
push
iret
les
lock
xchg
xchg
int3
jne
mov
rclb
push
dec
and
test
sbb
and
add
ljmp
inc
bound
xlat
or
add
sbb
sbb
and
mov
les
das
xor
ret
nop
sbb
std
aaa
fcompp
push
jne
outsl
mov
cmp
mov
or
pop
push
push
addr16
movsl
xchg
jne
arpl
mov
leave
add
icebp
jnp
test
cwtl
mov
jp
out
mov
inc
dec
jmp
mov
add
rcrl
lret
test
aaa
mov
stos
call
jl
enter
sti
xor
ljmp
push
scas
divb
or
fwait
cs
ficoml
push
fisttps
enter
jbe
xor
popa
dec
jecxz
shl
and
pop
xlat
mov
shlb
xor
cmp
loope
push
insl
in
stos
jo
lahf
imul
xor
mov
sbb
add
into
jo
std
sar
inc
mov
cmp
repz
push
out
add
jecxz
push
sbb
popa
lahf
in
xchg
jno
fnstenv
sbb
jmp
lcall
jbe
pusha
push
lock
arpl
fcoml
jge
scas
sahf
shll
cwtl
pop
cwtl
push
jno
les
fldt
movntps
cmp
mov
xchg
stos
xchg
shl
cmc
imul
xchg
je
adc
adc
mov
outsb
push
push
jge
popa
adc
cmpsb
mov
cld
inc
std
loopne
fisttpl
push
lods
adc
lods
xor
cmovg
arpl
sti
pop
cmc
loop
mov
xchg
lea
jmp
xor
pushf
jae
addr16
mov
adc
mov
push
icebp
and
push
cld
mov
call
test
sbb
mov
jle
fwait
mov
xor
popf
out
push
daa
not
in
xchg
jmp
das
vfixupimmps
scas
mov
xchg
xor
out
mov
jle
popf
cwtl
cltd
cs
mov
nop
jbe
mov
fs
mov
adc
dec
in
fwait
adc
lods
sbb
sub
inc
cltd
inc
mov
jb
lods
popf
push
xchg
jmp
bound
or
jnp
adc
xchg
push
pop
shrb
jge
test
mov
jo
out
add
sbb
pop
sbbb
adcb
xchg
sbb
neg
loopne
pop
stos
dec
xor
call
mov
insb
adc
push
push
cmp
lret
insb
pushf
inc
cmpsl
pop
test
mov
or
jo
xchg
adc
jns
pop
jb
sahf
push
adc
sub
sbb
sbb
cmpsl
and
popa
aaa
aas
pop
hlt
lret
hlt
jge
movsl
lock
pop
pushf
out
test
arpl
inc
popa
mov
jnp
mov
clc
mov
add
sahf
pusha
sbb
popa
mov
lods
jp
rolb
dec
cs
lods
scas
push
jmp
mov
nop
pop
and
mov
push
les
push
gs
adc
scas
pop
add
xchg
add
mov
add
add
pop
movsl
mov
xor
sub
sub
jmp
xchg
shlb
mov
dec
push
xchg
pop
xchg
out
lcall
fnsave
mov
bound
ljmp
ja
jg
inc
xor
loopne
ds
lea
outsl
sbb
fs
cli
pop
lahf
dec
add
push
mov
cmpxchg
cmpsl
mov
and
mov
mov
mov
mov
pop
popa
scas
aaa
outsl
mov
mov
jp
inc
sub
std
pop
xor
hlt
dec
test
mov
sub
movb
xor
cli
imul
mov
mov
lea
pop
icebp
and
aam
nop
das
lds
mov
xor
repnz
mov
dec
or
mov
or
sbb
cwtl
pushf
pop
mov
loop
inc
stos
inc
mov
push
add
jl
and
ja
jb
jne
aad
sbbb
shl
push
mov
mov
mov
daa
mov
add
lret
jecxz
push
cmp
jge
add
cmp
call
cs
sub
adc
dec
mov
mov
xor
dec
lock
aam
or
or
mov
jp
sub
insl
xchg
mov
push
dec
push
mov
in
or
sub
mov
sbb
aas
cmpsb
aas
or
mov
jb
stc
icebp
or
xor
xor
jl
pop
call
xor
andb
mov
push
test
inc
cmp
xor
out
mov
iret
mov
mov
xor
jl
xchg
sbbb
pop
insb
cmpsl
xchg
or
mov
and
adc
fisubs
mov
ljmp
push
inc
push
adc
mov
jge
cmp
shr
adc
jns
test
sahf
fisttpl
es
out
pop
insb
scas
xor
fsubrp
cwtl
adc
jg
jno
jns
mov
sub
jno
mov
pop
xchg
ds
jmp
aam
cmc
cmp
and
dec
mov
push
lea
sub
inc
jg
cmp
inc
pop
xor
test
mov
sti
push
ja
stos
xor
dec
inc
cmp
mov
mov
cld
add
in
and
sbb
mov
faddl
cltd
fld
adc
ja
and
cmp
sti
lock
pop
sti
sarb
pop
outsl
dec
mov
test
cmp
incl
lahf
mov
mov
add
arpl
sbbb
icebp
xchg
ja
insb
sbb
jne
xorl
in
test
imul
aam
outsl
push
or
mov
sti
adc
push
in
fists
mov
cmp
cmpb
add
lret
dec
sbb
pop
test
andb
and
ja
inc
addr16
ja
xor
xchg
mov
pop
inc
ljmp
js
sarl
adc
mov
shl
ja
mov
push
mov
xchg
in
dec
roll
xchg
mov
clc
fs
jle
bound
mov
mov
mov
jae
aad
push
or
sbb
mov
push
dec
mov
sbb
lahf
mov
fcomip
inc
fldcw
mov
cmpsl
mov
xor
mov
gs
lahf
arpl
xchg
cmpsl
scas
out
cmc
dec
pop
arpl
mov
cmc
or
js
imul
loope
in
jbe
jb
mov
pop
jg
inc
sbb
adc
ret
mov
sub
and
xlat
push
popf
pop
repnz
cmp
xchg
testb
out
aad
mov
les
add
int
and
je
inc
je
inc
popa
in
pusha
jno
or
xchg
orb
daa
ret
xchg
mov
cwtl
xchg
sub
fldenvs
jb
out
or
xchg
fnstenv
jno
jne
cmp
and
in
or
shlb
adc
in
sub
cmpsb
sub
fimuls
push
std
adc
push
mov
pop
outsb
mov
call
pop
pop
addb
mov
xchg
cmpb
xchg
cwtl
sbb
sbb
push
shrb
inc
mov
ljmp
ds
adc
cmp
jns
dec
push
xchg
ret
in
xchg
push
loopne
pop
dec
es
xchg
shlb
xchg
stos
mov
cmp
cmpsb
xor
ret
sbb
jo
int
cmp
xchg
mov
lahf
shl
cwtl
addr16
cli
in
fcoml
mov
scas
jecxz
dec
out
jae
adc
and
aas
adc
jl
jge
add
lea
int
aam
xchg
loop,pn
mov
add
mov
sub
out
dec
sub
int
xor
cmp
and
es
and
sti
popa
and
jmp
les
or
loope
xchg
rorl
aad
into
dec
jle
popa
stos
mov
int
cmp
dec
and
test
sub
adc
ljmp
inc
loopne
ret
lcall
icebp
mov
sub
xor
add
out
mov
addr16
push
cmp
xchg
xchg
dec
and
call
cmpl
fwait
cmp
adc
lahf
xor
das
sbb
fcoml
popa
es
filds
mov
xchg
and
ret
mov
ret
loopne
xlat
jo
jmp
push
jecxz
pop
pop
ficoms
push
mov
gs
dec
ja
or
mov
shl
mov
mov
xor
xchg
hlt
ret
punpcklbw
icebp
lret
cld
mov
mov
inc
adc
dec
arpl
sub
add
cmp
out
stos
dec
idivl
add
enter
mov
cs
stc
jo
ss
cltd
stos
icebp
push
sub
lret
lahf
lcall
push
pop
or
jmp
es
sub
gs
push
push
movsb
push
in
roll
enter
sti
daa
loope
adc
ljmp
push
icebp
fs
dec
test
repnz
imul
test
pop
cmp
pop
sbb
mov
sub
dec
ljmp
test
shl
inc
fdivp
mov
cltd
rclb
sub
or
repnz
shlb
sub
cmp
xchg
mov
dec
hlt
mov
enter
mov
jmp
fdivl
addr16
in
xchg
dec
ljmp
sbb
push
fs
or
jp
imul
pop
es
mov
icebp
movsb
xchg
xor
test
xchg
xchg
dec
add
js
aas
ljmp
xchg
inc
or
dec
mov
add
adc
xchg
xchg
clc
xlat
ljmp
push
sub
jb
int
icebp
cmp
in
nop
lret
inc
dec
mov
cs
xchg
inc
add
fnstcw
sub
jb
mov
iret
outsb
es
xor
xor
xchg
loope
xchg
rorb
dec
cmpsl
push
mov
out
lret
xchg
sbb
mov
mov
idiv
test
sbb
cltd
mov
mov
sbb
or
cmp
dec
xor
inc
rolb
repnz
sub
jl
stos
push
jecxz
sub
xchg
xor
mov
aaa
fsubrs
xor
and
push
mov
cmp
gs
test
idivl
inc
mov
imul
test
jno
mov
xchg
and
push
pop
test
pusha
cli
bound
dec
inc
cmc
cli
ljmp
cs
lea
or
add
add
xor
jb
push
dec
push
add
jne
andl
add
adc
in
repnz
imul
test
push
fwait
mov
test
dec
inc
push
fdivs
push
sarb
or
leave
cld
mov
int
pop
sbb
push
cmp
xchg
lcall
add
add
push
inc
xor
test
stos
loopne
imulb
pop
shrl
or
mov
scas
push
outsl
jmp
int3
dec
pop
push
push
lahf
loopne
xor
roll
jae
pusha
mov
mov
std
cs
or
cmp
jg
push
into
negl
fimull
inc
js
push
or
testl
add
jle
ror
and
pop
jb
add
mov
rorl
mov
xchg
cmp
out
sbb
inc
imul
or
adc
cmp
repz
push
repz
mov
mov
arpl
cli
in
and
xchg
jne
pusha
lock
fcmovnbe
inc
lods
sub
push
cmova
dec
jnp
push
inc
imul
addr16
jl
inc
cmp
loop
mov
xor
mov
aam
xchg
dec
fidivrl
xlat
jge
add
push
adc
je
add
jb
dec
mov
pop
int
mov
mov
repz
inc
xchg
adc
jb
jo
repnz
fisubrl
jge
clc
push
sub
adc
lret
pop
lea
setno
enter
insl
pop
sti
pop
loopne
movsl
sub
int
loopne
mov
fwait
jge
test
ret
js
out
cmp
aaa
daa
call
mov
test
mov
xchg
mov
fsubp
mov
lcall
dec
mov
add
push
jecxz
sub
insb
es
adc
adc
sbb
cmp
pop
add
add
dec
fiadds
xlat
lcall
ss
jb
gs
pop
push
jmp
nop
mov
loopne
inc
push
sub
pmaxub
test
popf
cmp
cmc
scas
divl
sbb
aaa
imul
sahf
add
stc
push
mov
inc
test
rcrb
jl
lcall
scas
rcll
sti
repnz
dec
out
push
shll
push
dec
out
mov
dec
or
in
dec
ret
aam
std
add
sub
or
push
ja
pop
sub
sub
outsb
sbb
xor
push
inc
dec
inc
sbb
pop
pop
jp
ret
stos
and
sub
dec
addr16
in
mov
mov
cmp
popf
outsb
mov
jmp
pop
stos
sub
and
stc
in
and
jmp
jns
xchg
int
icebp
mov
pop
sub
loop
add
push
mov
in
lahf
lods
push
dec
pop
and
fsub
ljmp
jo
in
push
and
inc
icebp
ja
arpl
into
inc
dec
push
inc
mov
dec
ret
or
out
dec
icebp
leave
das
mov
cmp
mov
sub
adc
lock
mov
cltd
ret
stos
jns
jg
inc
jle
sti
xor
sub
xchg
imulb
mov
jbe,pn
or
cmp
sahf
jmp
push
mov
gs
xchg
mov
call
cmc
add
arpl
je
js
stc
cld
mov
mov
popa
add
jmp
add
daa
out
sub
dec
out
adc
pop
xchg
add
es
stc
sbb
push
test
jle
mov
shrl
jg
mov
lcall
adc
mov
aaa
sti
jle
mov
mov
insb
aas
mov
adc
dec
cmp
lods
sarb
jb
daa
inc
es
fwait
sub
inc
fcomip
mov
or
lcall
xchg
in
adc
mov
and
jp
pop
mov
movb
add
sub
xor
test
and
adc
adcl
pop
test
pop
sbb
not
aad
cmp
call
jmp
pop
imul
aas
test
orl
and
pusha
stos
decl
dec
lods
sahf
ret
xchg
gs
test
cwtl
cltd
sbb
ljmp
xor
pop
add
cmp
out
dec
ja
sbb
inc
sub
dec
mov
cmp
sub
dec
mov
fwait
outsb
mov
loop
outsl
jg
dec
sti
sub
xchg
mov
lret
andb
xor
and
push
sahf
push
fucom
pop
inc
add
stos
daa
dec
sbb
popf
test
gs
aas
insl
sub
cmp
ljmp
sbb
in
pop
in
mulb
cli
adc
test
sub
outsl
or
popf
fcmovb
mov
enter
lahf
xor
or
pop
aam
sbb
enter
ss
adc
push
rol
mov
push
sub
sbb
fwait
pushl
pop
int3
imul
loope
adc
jb
or
es
push
cmp
mov
inc
mov
out
jg
lcall
or
rclb
adc
xor
inc
jnp
fnstenv
cmp
cli
aam
leave
push
fdivp
inc
cmp
mov
inc
aaa
in
pop
cli
sbb
sub
nop
jno
fdivrs
pop
fldt
cmp
imul
lods
xchg
outsb
add
pusha
ret
sti
addr16
or
dec
into
cld
push
movsb
lods
sbb
dec
lock
inc
andb
or
and
ljmp
movsl
loope
in
fsubs
popl
mov
mov
xor
ret
out
scas
rcrb
in
test
sbbl
cmp
scas
sbb
xchg
mov
jb
bound
insl
and
enter
sub
hlt
arpl
jecxz
xor
testb
sub
orl
arpl
addl
mov
inc
test
cmp
hlt
and
rorb
repz
fisubrl
ret
push
and
mov
stos
popa
mov
pop
or
lret
jbe
fldl
push
imul
jbe
leave
pusha
cmc
imul
lret
cli
in
xchg
in
mov
jnp
mov
dec
popf
hlt
int3
push
hlt
rorl
push
aaa
roll
testl
xor
mov
sbb
pop
aam
push
push
xlat
ss
inc
stos
cltd
leave
jae
call
dec
add
cmp
and
mov
outsl
dec
mov
popa
jbe
inc
push
ss
pop
pop
int
aad
mov
cld
xchg
int
mov
or
push
dec
adc
jno
push
and
outsl
sub
jno
add
fildll
xor
adc
mov
push
pushf
pop
inc
popf
fldenv
sahf
dec
adc
fldt
push
dec
out
outsb
outsl
outsl
sbb
aam
sar
std
cmp
lcall
addr16
pop
insb
push
es
jae
addr16
daa
add
in
cli
sbb
test
test
insb
mov
jg
out
sbb
mov
xchg
xor
mov
adc
xor
in
push
push
cmpsl
das
loope
movsb
ds
jbe
pop
xor
int
rolb
pop
mov
scas
adc
push
ds
xchg
lahf
cltd
loopne
rclb
test
dec
mov
xchg
sahf
leave
bound
pop
out
sbb
pop
icebp
ret
loopne
push
cmp
mov
daa
sahf
jge
insb
out
daa
popa
or
sti
xchg
out
adc
shrl
xor
jp
inc
mov
mov
inc
mov
popa
leave
mov
lret
dec
imul
repnz
jo
pop
push
ja
push
idivb
lea
fidivrl
enter
rcrb
add
mov
xor
inc
xor
and
fistpl
test
into
fistps
mov
jmp
xor
mov
lcall
cs
jnp
fbstp
in
mov
rolb
mov
jnp
lcall
and
xor
test
out
push
adc
testb
sub
cmp
scas
pop
push
ret
mov
cmp
test
mov
std
mov
pop
sbb
xchg
scas
insl
mov
or
gs
loop
stos
ja
repz
push
cmp
and
push
push
dec
fldl
ret
in
test
imulb
jge
pusha
test
sarb
mov
push
cmp
popf
pusha
adc
add
or
dec
enter
pop
cmp
mov
add
add
mov
testb
popf
jne
or
sub
jne
xor
imul
test
mov
inc
stos
inc
mov
xor
or
jecxz
icebp
xor
pop
pusha
outsl
dec
push
add
dec
scas
sub
daa
mov
xchg
sub
add
dec
out
rol
fiadds
jbe
push
add
pop
xchg
pop
aam
fstps
and
sti
jae
je
stos
and
or
or
mov
repnz
pop
or
pop
ljmp
mov
imul
push
mov
dec
sbb
xor
movsl
into
cmc
iret
js
std
inc
lea
push
loope
add
push
jg,pt
add
sub
ss
adc
lods
mov
and
xchg
pusha
inc
add
in
aad
popf
mov
pop
xchg
mov
das
sbb
cs
cld
sbb
lock
mov
dec
xchg
iret
lcall
sub
repnz
and
dec
outsl
sbb
or
aad
or
xlat
ja
or
mov
inc
mov
pop
mulb
outsb
int
mov
push
in
add
inc
fwait
aam
xor
mov
mov
lds
leave
shrl
je
mov
js
and
jecxz
shrb
xor
inc
inc
imul
jmp
imul
add
es
sub
push
dec
pop
aaa
sub
daa
mov
cmp
and
lahf
mov
pusha
inc
insb
aaa
ja
dec
out
add
stos
jl
into
leave
rcll
popf
addb
enter
aad
test
cmpsl
xor
push
movsb
outsb
cmpsl
mov
loop
cmp
push
aaa
shrl
pop
inc
push
jbe
sub
add
lods
and
test
pusha
mov
mov
cld
cmpsb
pop
addb
cld
jbe
mov
loopne
mov
xchg
jl
std
push
pusha
scas
lret
pop
mov
cmpsl
add
mov
arpl
mov
push
out
lret
jecxz
mov
fcmovnu
nop
mov
or
fwait
stos
pop
lret
call
mov
sbb
push
mov
cmpl
sbb
xchg
movsb
jmp
insl
test
lret
arpl
xor
inc
pop
stos
repnz
mov
and
in
lcall
stos
xor
push
push
stos
jb
fwait
or
mov
cmpsl
mov
fstl
gs
aam
jle
mov
xor
test
out
and
aaa
sbb
pop
fcoml
jne
pop
cmp
inc
popf
movsl
push
or
leave
outsb
mov
pushf
cmc
test
or
cltd
lret
in
rcrb
push
jbe
cmpsl
sub
pop
push
jo
sbb
shrb
out
sub
lds
xchg
sub
xor
ret
inc
xchg
leave
cli
addr16
imul
and
movsb
jmp
or
call
or
mov
cwtl
repz
cwtl
or
sbb
in
test
sbb
mov
push
push
mov
in
stos
into
iret
faddp
mov
outsl
xchg
ficomps
dec
adc
sbbb
dec
xor
cs
and
mov
aaa
cmp
out
scas
push
test
sub
dec
jge
cmpb
insb
insb
dec
cmc
repz
xlat
and
sub
dec
sar
sahf
icebp
pop
xor
jmp
sarl
fnstenv
dec
jae
push
pop
and
arpl
data16
adc
adc
jbe
outsl
sahf
loope
out
lret
repnz
push
ret
fs
xor
lds
inc
out
push
cmc
jbe
push
xlat
insb
mov
adc
pop
mov
sub
nop
dec
ss
and
push
lret
mov
cmp
movsl
outsw
lea
or
js
jmp
cmp
adc
xchg
andl
arpl
jmp
pop
add
push
pop
loope
js
mov
mov
repz
xchg
dec
cld
push
fisttps
popa
addb
push
sti
test
xchg
movsb
dec
xlat
jns
cwtl
inc
fildll
push
rcrl
fdivs
or
sbb
pop
icebp
xor
lret
sub
mov
and
pop
jle
adc
sti
out
sub
std
scas
testb
xchg
lock
imul
xor
mov
mov
jmp
mov
dec
mov
loope
leave
in
or
push
or
sub
das
push
inc
dec
repz
call
fwait
std
addr16
sbb
mulb
in
or
push
xrelease
and
mov
or
loopne
or
xchg
insl
popa
ljmp
or
or
mov
cs
sarl
rcll
out
adc
jb
inc
xor
adc
scas
sbbl
fs
jb
iret
call
mov
jo
jmp
mull
cld
stos
mov
inc
aam
push
mov
lcall
jge
cmp
add
cld
pop
mov
xorb
inc
sub
imul
out
stc
icebp
in
fs
xor
fwait
mov
out
pop
sbb
iret
dec
jp
lahf
arpl
inc
pop
out
test
jmp
mov
jnp
daa
xchg
sbb
mov
mov
cli
loop
mov
jge
hlt
mov
push
and
arpl
dec
xchg
lahf
mov
mov
inc
into
int3
fsubrl
adc
push
mov
test
js
mov
sbb
jnp
outsl
xchg
test
dec
aas
xor
ljmp
je
adc
push
adc
lret
negl
or
cmp
sbb
adc
test
or
dec
fistps
mov
xor
aas
mov
jno
shll
sub
dec
sub
cmc
mov
cli
cli
jbe
ficompl
push
lahf
jg
push
mov
xor
rorb
iret
cs
jge
mov
push
mov
fiadds
in
stos
add
shlb
sbb
pop
stos
enter
out
adcb
adc
aad
cmc
sub
pop
xor
jno
pop
popf
aas
add
je
insb
or
jp
ljmp
jnp
pop
push
add
scas
popa
outsl
fdivrs
daa
add
pop
sti
repnz
adc
movsb
aas
outsb
mov
scas
cmp
cmpl
mov
pop
jecxz
shl
stos
test
sub
popf
jne
jb
or
pop
ja
push
je
ficoml
out
jne
movsl
ljmp
cmp
pushf
divb
insb
je
or
imul
inc
pop
jno
sbb
outsl
or
outsl
add
data16
xor
adc
adc
mov
jg
fwait
push
push
cmp
jg
sub
sub
popf
dec
insl
mov
mov
leave
out
xchg
push
xchg
push
xor
xchg
ja
xchg
jecxz
cmpsl
xchg
jge
sbb
loopne
inc
add
cmove
pop
inc
pop
scas
in
push
lods
mov
aad
mov
mov
push
outsw
ficompl
movsb
scas
add
cmp
push
out
out
out
xchg
sbb
ss
ja
sti
cltd
inc
fwait
jge
stos
divl
jp
inc
aad
shl
aaa
into
icebp
xor
iret
dec
in
xor
and
xchg
stc
and
xchg
fimuls
mov
cmc
xchg
test
lret
sarl
cmpsl
mov
sub
adc
adc
mov
add
andl
or
out
dec
fidivs
js
or
pop
clc
aas
leave
fs
mov
sbb
test
xor
push
xchg
xchg
sti
fst
xlat
push
inc
sbb
mov
insl
sbb
stos
mov
frstor
lret
leave
aad
sub
test
push
insl
lods
mov
xor
test
imul
cli
int3
and
xchg
je
mov
jmp
dec
enter
mov
fsubrs
ret
sbb
adcb
ficompl
ss
jmp
es
shll
pusha
and
jae
lods
cmpsl
or
idivl
add
out
fisubrl
pop
loop
xor
shrl
mov
std
mov
add
add
fiaddl
pusha
cmp
sbb
test
ficompl
fmull
push
dec
mov
sbb
sub
and
and
lods
enter
add
jle
adc
cmp
jge
pusha
adc
adc
mov
lret
das
outsb
xchg
es
negb
in
aaa
cmove
dec
fsts
dec
xor
pop
adcl
mov
push
shrl
mov
out
pop
sbb
jl
cmpsl
adc
push
shll
sub
jns
jb
pop
inc
test
mov
jb
out
mov
cld
sub
pop
dec
sub
in
jge
push
xchg
test
mov
filds
cli
jge
ds
sbb
cli
repnz
adc
sub
cmp
test
push
stos
into
bound
add
sub
jle
mov
sbb
xor
fistps
add
xchg
das
sahf
mov
or
int
cmp
es
ss
mov
adc
sub
pop
add
pop
push
out
cs
add
sub
movsb
mov
add
pop
ret
mov
xlat
pop
test
xchg
mov
mov
inc
aas
sbb
fwait
dec
out
test
ret
xor
rorl
push
and
lcall
loop
ja
ret
jl
inc
mov
dec
es
in
lds
test
push
push
into
fwait
xchg
inc
mov
cli
ret
and
mov
out
stc
test
cmp
lds
mov
es
pop
ja
sbb
fistpll
mov
mov
out
out
mov
xchg
bound
int3
xchg
push
inc
mov
aaa
test
js
pop
cmpsl
mov
push
inc
cld
xor
cs
mov
stos
push
into
sbb
cmpsl
pushl
arpl
lods
push
pop
gs
negb
sub
add
rorb
cmpl
mov
push
movb
ret
cld
popf
arpl
mov
mov
ljmp
jbe
fimuls
cwtl
cmp
pusha
mov
lds
out
icebp
das
int
or
push
jle
movsb
or
adcb
cmp
fcomip
bnd
push
cmc
test
scas
lods
iret
push
mov
int3
loop
out
inc
inc
rcrl
cmpl
roll
fistps
cmp
daa
or
popa
paddb
xor
xchg
and
std
stos
clc
push
xchg
jmp
fldl
jmp
iret
stc
xchg
pop
inc
mov
fistl
jne
sub
fisubrl
pop
inc
adc
xor
cmp
jge
in
sti
xor
ret
push
movb
push
pop
mov
sbb
pop
mov
clc
rolb
cli
xchg
mov
dec
gs
nop
repz
loope
push
push
sarl
les
test
pop
sahf
sahf
xchg
repnz
mov
lcall
lcall
mov
popa
mov
movsl
push
sti
data16
cmc
mov
movsb
fdivs
or
nop
lea
mov
adc
inc
mov
imul
mov
pop
xor
test
fisubrl
push
cmp
int3
cmc
push
push
xchg
test
lods
lds
cwtl
adc
fisubrl
adc
jne
mov
repz
lea
loop
popl
jae
fidivl
arpl
and
xchg
call
fisttpl
bound
xchg
sbb
jmp
xchg
mov
or
cmp
bound
jle
inc
arpl
inc
mov
arpl
cmp
xor
cmp
test
sbb
rcrb
sub
inc
in
mov
pop
ficoms
inc
addb
and
test
in
jno
ficoml
push
mov
or
fsubrl
std
pop
data16
mov
sahf
mov
lods
sub
aaa
dec
pop
mov
cli
xor
add
movsl
bound
xor
imulb
int3
nop
and
sahf
dec
xchg
rorb
shll
mov
sbb
clc
repnz
mov
in
fs
mov
push
daa
je
push
sub
sarb
mov
lret
xor
outsl
dec
fldcw
mov
push
and
insb
cwtl
out
push
inc
pop
add
or
mov
fucomi
pop
jno
add
outsl
mov
repz
lds
add
and
adc
push
test
ss
cmp
aas
push
out
xor
cmpl
pop
pop
add
cmp
dec
xor
cli
mov
mov
lret
sbb
loope
sub
dec
mov
push
loope
xchg
hlt
pop
test
xorb
lods
adc
xor
fstps
push
mov
adc
mov
sbb
mov
iret
rorb
jns
xlat
sti
mov
pop
mov
into
aaa
adc
mov
das
xor
cmp
adc
cmpl
mov
aad
fistps
scas
popa
fld
mov
inc
shrb
jo
jbe
or
xorl
push
pop
lcall
xchg
pushf
push
and
aam
dec
mov
mov
add
cli
cmp
fimuls
mov
fcmovbe
push
jbe
sbb
pushf
testb
in
or
cmpsl
xor
call
das
mov
mov
pusha
inc
popf
xchg
inc
shrb
cmpsl
sbb
xchg
movsb
fs
mov
cld
stos
mov
mov
pop
cli
push
mov
fmuls
push
cmc
and
inc
cli
arpl
push
xchg
mov
jg
pop
lret
mov
fmuls
int
inc
cmpsl
in
mov
push
push
lea
sub
push
cmp
jg
shll
and
and
pop
jmp
and
add
punpcklbw
xchg
pop
cmp
bound
sub
dec
dec
stc
lods
sbb
add
push
add
mov
cltd
mov
test
push
sbb
push
inc
pop
xor
jp
movsl
inc
sbb
mov
cmpsb
stc
into
scas
ja
lock
mov
mov
mov
sbb
inc
jge
test
adcl
or
mov
jecxz
adc
cltd
fwait
imul
pop
aad
repz
adc
sbb
dec
call
push
jo
mov
es
mov
push
inc
popa
fwait
jbe
data16
notl
int3
xchg
jbe
testl
mov
and
dec
xchg
mov
jg
ss
scas
int3
xor
add
push
fistl
mov
sbb
mov
insl
xorb
je
shrb
jnp
out
cli
scas
movsb
sahf
sub
ljmp
out
loopne
fdiv
adc
cmp
add
lods
out
flds
test
mov
push
adc
jmp
xchg
ss
fs
call
pop
loopne
pop
jae
cltd
jne
test
mov
mov
push
xor
fwait
nop
sar
loopne
sarl
pop
push
mov
cmpsb
ljmp
and
scas
sub
mov
or
cmc
lahf
sub
xor
lcall
or
test
pusha
lret
sub
mov
je
push
jae
jb
sti
and
loope
adc
pop
adc
repz
inc
in
aas
pop
mov
mov
xor
inc
pop
loop
mov
push
and
adc
nop
add
xchg
mov
mov
leave
enter
test
leave
bound
imul
mov
insb
adc
dec
and
jne
mov
inc
sub
test
xchg
repnz
add
pop
cwtl
rcrb
mov
fists
dec
inc
ds
cmc
shlb
rcll
cli
call
jg
imul
iret
jp
rcrl
xor
xlat
repz
add
shlb
sub
inc
xor
jne
xor
test
lock
loop
mov
inc
add
loopne
in
lea
sub
fstp
mov
xor
add
fimull
pop
fwait
sti
mov
mov
mov
xor
in
bswap
cmp
std
jecxz
das
arpl
push
jl
jle
mov
mov
sub
popf
imulb
ja
test
aad
xor
sub
push
shrl
push
cmp
aam
ss
xchg
repz
push
int
xchg
es
sub
mov
sarl
jns
cmp
clc
pop
imul
cmp
ret
add
in
aas
lret
sbb
pop
or
icebp
pop
enter
outsb
pusha
jo
js
cmp
add
xchg
sub
adc
push
add
inc
rcrl
and
xlat
jbe
sbb
test
jle
fmul
les
jmp
fnstenv
enter
pop
inc
bound
inc
xchg
inc
add
ds
push
pop
pop
inc
int
movsb
lcall
xchg
sahf
bound
xchg
inc
mov
jnp
repz
xor
mov
lret
dec
mov
sub
daa
sbb
jne
cld
test
subb
pop
sub
in
xchg
sbb
lret
mov
adc
in
xchg
ja
incl
jge
adc
imul
mov
add
popa
fnstcw
or
xchg
or
or
push
cmc
adc
adc
inc
ja
aas
jp
cmp
jle
fs
push
adc
mov
jnp
mov
je
xor
fdivs
and
rclb
les
xchg
repz
imull
cmpsl
and
xchg
jmp
stos
fs
dec
cmc
adc
xor
xor
pop
pop
mov
aad
insl
cs
insl
int
sub
mov
iret
jp
clc
cmp
cmc
mov
lahf
push
lret
xorl
scas
cmpsl
jecxz
aam
data16
jecxz
inc
out
aad
or
je
jg
lret
jo
inc
call
or
popf
js
sub
ret
ljmp
cltd
ret
repnz
pop
jle
dec
add
or
or
inc
call
pop
push
add
sti
sub
les
cmpl
mov
xor
loop
mov
iret
or
xor
cmp
lock
pop
iret
dec
aaa
rcrb
inc
adc
sar
mov
jno
xor
jb
loope
aad
outsl
popa
addl
or
pushf
mov
inc
inc
mov
cmp
mov
sbb
cmp
sysexit
mov
mov
mov
and
popf
jl
ja
fcoms
in
push
inc
scas
fldt
or
add
dec
cmp
mov
mov
mov
fisttpll
add
pop
cmpsl
mul
xchg
lock
bound
pop
sbb
cltd
sub
xor
shlb
xor
mov
push
scas
fstps
lret
les
lret
imul
scas
cli
dec
call
and
jae
dec
int3
imul
lahf
pop
cmp
out
add
test
scas
xor
out
clc
push
jl
mov
bnd
int
sub
jl
and
rcl
das
jae
sbb
inc
sub
and
leave
sub
sub
jnp
pop
aam
xlat
xor
adc
out
push
inc
mov
iret
dec
negb
jb
aad
lods
pop
loopne
mov
add
adc
mov
jl
pop
pop
jecxz
xchg
xor
cmp
movsl
fs
in
cmpsl
or
stos
sti
and
cmp
rcrl
dec
jbe
aam
test
cli
lret
rcrb
addl
out
adc
loope
lods
nop
ljmp
sub
iret
cmp
inc
or
jnp
cmc
inc
xchg
and
jg
xorl
loop
hlt
imul
idivl
lock
sbb
and
jb
repz
jae
push
add
mov
dec
fisubrs
and
fdivl
sub
ljmp
test
rclb
lret
in
sbb
mov
bound
add
ret
sbb
push
es
dec
jnp
orb
pop
dec
daa
sbb
pop
out
push
mov
out
inc
mov
and
sub
leave
xchg
dec
movsl
stos
das
push
add
pop
out
iret
mov
xor
dec
mov
xor
jb
out
pop
pop
xchg
mov
push
xchg
pop
cmc
cmp
mov
test
xor
sti
mov
mov
test
pop
repz
cmp
mov
dec
inc
ret
dec
mov
inc
mov
pop
icebp
xchg
test
ret
dec
xor
fsubrl
imul
test
fiadds
hlt
cmp
dec
loop
jg
shr
inc
out
out
cmp
sbb
aas
push
dec
in
inc
or
stos
mov
push
fildll
mov
xchg
aad
mov
repz
xor
dec
dec
test
sub
push
repnz
leave
pop
stos
and
dec
aam
mov
xor
mov
pushf
notb
insb
fsub
shl
push
jne
or
cmp
inc
cmpsl
mov
cmp
add
iret
lods
popl
test
lret
clc
push
roll
adc
push
jmp
test
std
in
movsl
cmc
test
sub
inc
xchg
mov
dec
pop
lock
js
push
sbb
mov
jecxz
test
mov
imulb
push
add
js
and
pusha
int
add
sub
bound
popa
xchg
pushf
mov
inc
lahf
mov
out
test
addr16
lcall
add
aaa
aad
cmp
xchg
js
test
iret
es
jp
pop
sbb
jl
sar
mov
mov
fdivrs
xor
push
and
fs
mov
fimuls
dec
adc
aaa
notl
aaa
jnp
cwtl
xchg
sbb
imul
lock
aad
in
int
cmp
sub
popf
inc
imul
jb
xor
cmc
cwtl
out
pop
addr16
pop
andb
movsl
jle
lahf
arpl
add
lret
out
addr16
adc
mov
stos
fs
xor
lods
fcmovnb
enter
xor
add
insb
adc
cld
mov
nop
outsl
adc
jge
pop
mov
xchg
sub
shrl
push
jmp
push
adc
mov
movsb
outsb
xlat
pushf
add
enter
in
outsb
push
xchg
xorl
test
mov
aaa
rorb
inc
push
mov
adc
jge
pop
orb
jne
shrb
mov
imul
jle
std
inc
stc
repz
sub
or
adc
bound
ljmp
mov
mov
push
push
cli
add
test
mov
add
push
stc
ret
ja
rclb
out
add
sbb
or
push
inc
dec
pop
xchg
sbb
stmxcsr
xor
add
pop
rcll
cmc
mov
ret
push
mov
xchg
lcall
jae
inc
pop
xchg
and
xchg
sti
in
lds
shl
out
je
or
lahf
xchg
mov
dec
push
or
adc
jbe
pmaxsw
mov
shr
dec
pop
jbe
push
cmp
xchg
sbb
jns
push
popl
pop
push
fcoml
ljmp
mov
popl
push
inc
js
gs
divl
push
pushf
in
jmp
xor
in
xor
loopne
insl
mov
mov
fdiv
mov
sub
mov
stc
add
jg
outsb
jmp
call
ja
pushf
in
out
jbe
dec
sub
sub
and
sub
out
in
outsb
mov
cmp
push
rolb
lret
cli
das
lods
je
mov
xor
mov
pop
sbb
cmp
mov
dec
es
push
scas
pop
sahf
adc
sahf
sahf
out
or
iret
fwait
pop
fmuls
int3
jmp
adc
adc
cli
xchg
push
sbb
rcrb
pop
testl
fisubrl
sbb
sbb
and
stc
dec
mov
push
xchg
mov
dec
fld1
pop
and
jns
cmp
mov
mov
jp
pusha
movsb
inc
sbb
jg
ja
data16
imul
stc
test
lcall
cmpsl
xor
push
lret
dec
daa
lods
xchg
jp
gs
jge
and
push
push
pop
orl
das
je
push
sbb
testl
and
repz
or
data16
jp
pop
lea
mov
int3
addb
je
cmp
lea
mov
mov
repnz
dec
cwtl
xchg
jecxz
add
ret
lahf
push
repz
mov
xchg
js
daa
push
inc
push
dec
clc
test
lret
dec
aaa
mov
lret
add
push
xlat
iret
lea
loop
mov
xor
or
shr
js
frstor
cmovae
adc
scas
inc
inc
xchg
pop
cli
mov
into
sbb
mov
adc
mov
shll
ds
arpl
rorb
popa
lds
ljmp
unpckhps
dec
sbb
out
je
addr16
fcoml
adc
xchg
mov
jp
fmull
fwait
leave
xor
leave
push
andb
xchg
dec
sub
sub
in
pop
loopne
mov
adc
cmp
sub
cmp
xchg
cmpsb
mov
dec
mov
mov
fsubrl
and
les
push
xor
rcrb
mov
jmp
mov
int3
jg
lods
mov
dec
jbe
lods
push
pop
xchg
and
or
fs
dec
and
dec
enter
mov
jno
and
loopne
mov
dec
loop
or
xchg
std
adc
and
jbe
leave
push
ret
cmpsb
mov
mov
sbb
dec
sbb
test
cli
dec
aaa
lds
adc
dec
adc
ficoms
and
in
mov
ja
rolb
push
gs
cltd
and
xor
push
ljmp
pop
push
lock
test
pop
and
mov
lods
sbb
or
dec
rol
sub
sub
xchg
lahf
mov
or
loopne
ret
pusha
lcall
repnz
mov
xor
jo
xor
inc
mov
repnz
or
rcrl
mov
testb
push
xor
sbb
sub
inc
call
iret
scas
or
sub
or
loop
cmp
mov
mov
loope
cmpsl
out
sub
scas
mov
mov
out
scas
jbe
push
cmc
jecxz
xor
test
mov
fildll
push
mov
cmpsl
aaa
aad
inc
jmp
jae
lea
stos
aam
test
cltd
mov
push
adcb
sbb
out
or
dec
std
pop
inc
sbb
pushf
sbb
out
add
enter
push
iret
insb
hlt
or
push
fmuls
jne
sti
in
rorl
adc
cmpsb
outsl
fcoml
dec
cmp
cmp
jnp
pop
adc
movsl
shrl
and
mov
stc
lods
divl
fdivrs
pop
push
sub
pop
mov
arpl
xchg
cmp
lret
aaa
push
jmp
stos
js
or
cmc
jecxz
xchg
fwait
cltd
ret
sub
stc
sbb
sarl
adc
mov
adcl
cmp
call
test
in
push
inc
xchg
sbb
in
das
mov
inc
in
rorl
into
xor
jl
frstor
js
das
sbb
mov
movsl
mov
and
decb
fld
mov
dec
frstor
inc
xchg
mov
lahf
enter
jne
xchg
adc
push
mov
push
dec
inc
fldenv
cmp
in
sub
lock
pop
js
push
sbb
lods
pop
cmp
pop
sti
pop
xchg
add
adc
jne
fst
ss
outsb
push
jmp
loopne
repnz
cmp
pop
or
subb
mov
insl
out
fiadds
out
dec
scas
into
out
test
adc
jmp
dec
rol
sub
ja
popa
ss
cltd
add
outsb
dec
rcl
sbb
rcl
mov
cmp
pusha
bound
pop
adc
ss
imul
fdivl
and
into
pop
jne
loopne
movsl
xor
mov
and
or
sbb
je
movsl
popa
inc
adc
mov
popa
aaa
cmp
cmp
pop
push
mov
jge
ret
cmp
test
orl
push
jp
add
mov
imul
ret
push
inc
outsb
adc
int
das
and
add
and
aas
fistps
arpl
mov
flds
out
enter
or
pushf
or
movsl
jae
xchg
jae
xor
scas
pop
mov
andl
dec
mov
xchg
fisubrs
push
imul
flds
xchg
mov
pop
push
mov
mov
add
mov
hlt
xchg
jecxz
outsl
or
push
dec
mov
mov
icebp
mov
insl
mov
or
pop
repnz
inc
cmp
mov
mov
out
imul
add
loop
int3
fwait
and
cmp
pop
dec
insb
rcrb
and
or
test
inc
add
imul
xchg
jnp
imull
div
sbb
jbe
jecxz
or
jmp
into
test
add
icebp
mov
push
fs
cmp
insl
rolb
stc
xchg
addr16
sbb
lret
and
or
ror
in
push
xchg
rcr
pop
popa
sbbl
cmp
mov
pop
in
clc
fbstp
inc
jno
xor
popa
mov
pop
into
out
ret
repz
sbb
mov
movsl
or
lahf
into
aam
or
repnz
frstor
mov
pop
inc
xor
out
notl
pop
in
leave
xchg
sbb
jg
mov
mov
out
je
ret
outsb
or
dec
or
stc
ret
test
aas
cmpsb
sbb
mov
lods
dec
cmpsb
push
pop
and
dec
pop
sub
stc
inc
imul
adc
adc
sbb
push
js
out
cmp
jno
adc
push
ljmp
jl
jae
cs
insb
inc
aad
std
xchg
cmp
daa
inc
imul
in
movsb
jo
xchg
decb
push
adc
loop
inc
lods
add
cmp
adc
or
xchg
outsb
lcall
and
daa
test
rorb
inc
fisubs
stos
push
repnz
and
and
mov
mov
jo
test
fildll
mov
pop
call
mov
and
inc
aad
cmpb
or
in
xor
gs
dec
dec
clc
push
test
popa
mov
repnz
loopne
sub
mov
or
arpl
and
push
and
jmp
pushf
cwtl
pop
aam
rcrl
inc
pop
and
and
jmp
push
sub
mov
sbb
jl
mov
icebp
mov
jne
jbe
mov
mov
test
push
and
rcrl
je
add
outsl
push
movsb
or
dec
jge
cmpsb
out
test
das
lea
out
scas
movl
bound
stc
add
pop
adc
daa
mov
xchg
inc
out
push
jle
ja
sbb
mov
int
adc
mov
mov
shl
mov
inc
push
jae
push
insl
pop
add
pop
add
ret
mov
loope
outsb
shrl
jno
jne
push
loop
push
dec
sub
sbb
test
nop
jnp
pusha
int3
int3
adc
jge
add
cmp
stos
inc
jno
adc
gs
imul
or
rep
int3
push
int
mov
lods
add
ret
add
xchg
sahf
ja
xchg
repnz
nop
je
fwait
fs
mov
xor
test
repnz
adc
xor
sub
pop
push
pop
xor
xor
addr16
jmp
pusha
cwtl
pushf
add
sarb
cmp
repnz
outsl
pop
ror
jae
fistpl
test
outsb
es
loop
push
xchg
mov
push
push
lods
push
lcall
int
mov
cmp
clc
sub
in
and
sti
mov
xor
repnz
push
dec
stos
rclb
mov
cld
mov
daa
or
subl
sbb
dec
in
hlt
mov
mov
pop
leave
push
imul
sub
cli
test
jecxz
mov
pop
out
ret
lods
cmp
ret
rcr
jnp
rolb
mov
imul
mov
dec
add
push
lods
jge
push
xchg
or
pop
sub
test
xor
jb
sub
mov
inc
push
cmp
jae
daa
aad
or
pushf
lds
sub
sub
out
jl
sub
cld
inc
nop
jnp
and
dec
sbb
inc
adc
push
sbbb
push
lret
aad
call
cld
fdivr
cli
add
rcll
mov
fidivrs
test
sub
dec
sub
loop
jp
repnz
icebp
fisttps
xchg
pop
push
lods
pop
into
mov
dec
add
mov
ficomps
cld
dec
pushf
nop
sub
push
or
hlt
add
test
pop
pop
insb
loop
mov
cmp
out
cmpsl
repz
add
pop
scas
mov
fldl
xchg
addb
mov
cmc
out
push
xchg
jp
jnp
cltd
notl
cmp
test
add
imul
les
xchg
aaa
out
cmp
sti
hlt
push
fs
test
sub
pop
fnsave
push
dec
sar
mov
jbe
push
leave
loope
leave
inc
in
ja
mov
lods
mov
and
insb
and
cmp
push
add
orb
test
inc
fwait
ret
and
divl
stc
xlat
or
mov
leave
cwtl
pop
xlat
out
push
or
inc
cmpsb
cltd
cmp
jnp
enter
add
push
or
lahf
jbe
pusha
popa
inc
subps
sub
jne
pop
mov
ss
sub
js,pn
jno
add
cmp
das
mov
pop
nop
xchg
xor
push
mov
repz
mull
mov
jns
nop
inc
cmpsl
sbb
lret
jmp
stos
push
das
mov
sbb
inc
lods
cmp
dec
es
add
pop
shlb
daa
dec
or
insb
ret
cmp
inc
outsl
je
xor
mov
jo
int3
or
jl
test
icebp
inc
int
jns
dec
pop
sub
jg
pop
add
jle
inc
sub
test
adc
test
adc
loop
lods
jnp
mov
lret
fsts
xor
in
dec
inc
call
and
imul
or
jae
out
into
lret
push
adc
loope
lods
sbb
scas
cmc
push
mov
sub
data16
mov
sub
rcll
mov
jp
daa
push
pop
push
mov
xchg
shlb
mov
jo
popf
xchg
inc
sbb
mov
lret
ret
mov
mov
xor
mov
sub
adc
cld
cmp
repnz
xchg
inc
pop
scas
mov
push
jecxz
int3
pop
in
push
in
dec
jns
jg
adc
mov
jns
sub
sub
scas
xchg
std
lret
mov
divb
test
out
addb
enter
scas
std
lods
push
inc
adc
push
ljmp
push
and
stos
mov
xlat
fisttpll
fidivs
dec
add
cli
loopne
pop
dec
loope
or
jmp
in
and
dec
sub
lea
ret
pop
subl
mov
mov
cltd
push
stos
add
jne
jecxz
lds
pop
shl
adc
clc
xor
fdivrl
or
pop
es
sub
xchg
push
mov
sahf
add
jl
rorb
call
push
shrb
add
addr16
dec
mov
bnd
pop
clc
xchg
aaa
call
in
push
test
mov
std
mov
ljmp
ja
dec
add
mov
js
aaa
adc
movsl
imul
std
rcrl
push
enter
and
xor
cld
cmp
lahf
adc
mov
mov
jae
sub
movsl
adc
inc
mov
and
insb
mov
jb
fmul
mov
jle
mov
push
cmp
pop
cmp
inc
cmc
push
cld
movsb
rclb
jl
mov
mov
mov
pushf
jo
call
push
inc
mov
pop
inc
repnz
mov
gs
movsb
fldenv
mov
xchg
xlat
inc
test
in
loope
scas
jmp
mov
add
mov
fstl
ljmp
jne
inc
adc
shll
xchg
cmove
clc
test
in
mov
es
push
mov
fcmovnb
push
js
jbe
lcall
pop
cmp
and
aam
lock
repz
sbb
cwtl
push
inc
cmp
mov
lcall
pop
aam
sbb
movsl
jge
pop
mov
adcl
add
lods
jmp
in
sbb
fcmovnbe
fsubl
in
inc
push
sbb
dec
mov
xchg
push
jle
stc
loopne
dec
aad
cmp
and
bound
movsb
out
fisubs
loope
test
inc
cltd
aad
jp
andl
pop
inc
movsl
mov
inc
jne,pn
ficomps
into
mov
jmp
sarb
aad
xchg
jle
mov
pushf
test
add
cmpsl
bound
out
mov
jecxz
popa
sbbb
aaa
sub
mov
dec
pop
mov
push
je
test
add
mov
outsb
lea
add
pop
mov
mov
mov
mov
mov
ret
sbb
aas
imul
insl
imul
popf
outsl
out
pop
fsubrs
add
add
jge
fimuls
cmp
push
fdivrs
das
mov
cmp
and
inc
inc
push
mov
in
jmp
jmp
test
lret
sarb
push
or
pop
clc
mov
leave
xchg
loope
xchg
jns
lahf
pop
stos
in
lahf
or
and
cmp
dec
imul
sbb
jge
lret
pop
lahf
xchg
xchg
or
in
dec
test
inc
cwtl
movl
std
pop
or
jmp
in
pop
mov
or
mov
dec
xor
xchg
add
out
adc
mov
dec
cmpsb
inc
insb
lcall
push
adc
icebp
jae
test
int3
in
or
test
decl
and
jp
and
imul
addr16
lret
inc
lods
pop
dec
aas
or
inc
es
les
lock
jg
or
xchg
fcoms
cs
pop
std
in
add
stc
inc
mov
xor
jmp
mov
jecxz
and
cmp
enter
pop
and
out
jecxz
dec
cmp
hlt
dec
dec
cmp
jbe
outsb
jmp
dec
dec
push
fisubs
shl
popa
iret
pop
or
inc
dec
gs
mov
mov
addr16
xchg
cmpsl
and
js
or
lret
stos
in
pop
xchg
lea
sbb
pusha
fldenv
ja
jno
add
push
std
shlb
jo
test
cltd
daa
pop
adc
mov
dec
pop
sub
mov
pop
add
mov
outsl
jnp
iret
lcall
aas
xchg
popf
cli
stos
dec
out
iret
push
shlb
fs
shrl
push
lret
shlb
int
mov
push
lods
int3
dec
lds
add
add
dec
cmova
fimull
jne
frstor
repnz
fwait
pop
rorl
xor
imul
sbb
ds
inc
fistpll
aam
or
mov
jl
into
xchg
xchg
push
pusha
mov
jge
pop
inc
mov
dec
mov
xchg
and
arpl
and
mov
cmp
or
leave
mov
ret
xor
rcrl
push
stos
js
nop
leave
jle
rorb
fwait
in
js
flds
fdivs
and
dec
ficomps
mov
push
scas
or
push
notb
sub
xlat
or
sar
push
mov
fdivl
dec
mov
test
mov
xchg
mov
pop
cs
jnp
pop
push
add
mov
inc
out
cmp
leave
idiv
mov
inc
xor
addr16
xor
fsts
jbe
jg
cmp
pusha
sub
push
testb
sti
jecxz
push
fiadds
xorl
je
ss
mov
imul
sbbl
fldcw
dec
push
adc
mov
int3
hlt
sahf
fstl
enter
jecxz
mov
data16
ret
and
in
fimuls
mov
mov
mov
and
das
sbb
imul
xor
cmp
mov
test
push
pop
test
clc
mov
inc
movsl
cs
sub
dec
push
lret
loope
xchg
cmp
inc
jno
fs
imul
addb
mov
add
cmp
sbb
movsl
fldl
mov
mov
aad
add
insl
jb
scas
mov
divl
gs
or
cltd
mov
out
dec
push
hlt
sub
push
and
mov
test
jo
inc
jb
sbb
frstor
jge
repnz
and
je
imul
mov
pop
add
rcll
stos
add
sarl
mov
pop
lret
add
imul
jle
int3
sbb
ss
and
hlt
das
mov
pop
xchg
incb
out
cmp
popw
jmp
jne
sbb
mov
ret
subb
cltd
dec
adc
fmuls
jo
inc
arpl
xchg
daa
mov
cld
push
test
mov
imul
cmp
in
testb
pop
adc
fs
lahf
xor
dec
jae
dec
dec
mov
lcall
add
addr16
pop
mov
and
out
test
lcall
mov
scas
ficomps
inc
add
cmp
mov
in
insb
divl
hlt
inc
inc
jp
sbb
repnz
sub
sarb
pop
divb
or
push
lea
ds
jmp
adc
mov
outsl
push
sbbb
push
jbe
outsb
mov
addr16
xchg
add
mov
jo
jp
out
jbe
std
std
xor
popf
imull
mov
pop
lea
push
xchg
push
jae
dec
and
icebp
mov
adc
sbb
jb
lea
sbbb
and
mov
sbb
das
pop
mov
fmul
stc
int
mulb
dec
lret
fld
bound
pop
movsl
push
add
mov
inc
inc
movsl
int
mov
sub
in
movsb
cmp
pop
add
pop
shrb
fisubrl
xchg
inc
repz
jbe
mov
mov
sub
mov
lea
repz
xor
pop
aam
cs
daa
push
push
mov
dec
sub
xchg
mov
inc
clc
sbb
ss
cmc
xchg
repnz
mov
push
or
lods
mov
push
andb
add
push
pop
cltd
add
push
mov
jl
jecxz
push
push
popa
and
dec
pop
fidivrl
mov
mov
loop
mov
mov
or
and
fs
mov
xchg
sub
test
iret
insl
notl
mov
sub
mov
shll
add
sbb
sbb
mov
pop
mov
bound
je
in
arpl
pop
inc
pop
fstps
pop
sbb
iret
addr16
test
lock
cmpsb
pop
in
es
cmp
inc
mov
addr16
insl
sub
clc
pop
jae
and
cmp
push
inc
adc
ljmp
call
fs
mov
cmp
cli
adc
test
sub
or
mov
xchg
aad
roll
and
test
addr16
jae
mov
cmp
sub
inc
cmp
push
sub
jns
js
adc
popf
dec
imul
adc
hlt
and
shrl
or
adc
or
es
mov
jl
les
call
or
or
push
aad
sub
and
jno
sahf
hlt
cmp
cs
sbb
cmp
or
sbb
fildll
shl
or
ret
pop
insl
mov
popa
jne
mov
push
sub
xchg
fcmovb
push
and
xchg
sar
jle
dec
mov
mov
or
scas
inc
jb
jns
and
jb
jbe
xor
mov
popf
fistl
push
adc
iret
or
filds
std
test
jle
fistpll
stc
mov
pop
cmpsl
cmp
lcall
sub
test
xlat
scas
pop
das
inc
inc
mov
test
dec
cld
mov
jnp
fimull
popa
mov
and
adc
into
add
stos
pop
jno
jns
mov
ss
or
or
cmp
mov
addr16
scas
ja
jb
cmp
xor
aaa
jmp
xor
notb
mov
sub
add
sub
inc
push
and
in
inc
xchg
dec
fs
jecxz
add
sub
push
imull
insb
cmp
rorb
xchg
cmp
adc
into
fdivrp
lea
jo
xchg
adc
push
sti
push
xor
mov
test
mov
jae
push
sbb
xor
loope
push
mov
loope
out
add
in
int3
mov
push
sbb
pop
lods
jp
push
add
mov
mov
mov
and
inc
loope
mov
push
pop
dec
pop
add
mov
and
mov
mov
fisubs
daa
jns
jg
xchg
and
movsl
fnstsw
dec
or
jge
sbb
das
lea
ss
xchg
mov
int3
add
sbb
adc
adc
clc
cltd
movsl
adc
mov
sbb
jmp
xchg
adc
lock
test
mov
xchg
popa
xor
repnz
dec
rclb
add
xchg
aam
sub
sub
es
and
cmpsl
out
mov
or
std
stos
loop
stos
and
loop
adc
mov
sti
es
jo
cmc
test
xchg
adc
push
mov
xchg
jns
fdivl
jnp
mov
sbb
cld
lcall
pop
and
iret
mov
fsub
std
pop
imul
jbe
jge
push
jmp
add
jge
and
movsl
aaa
dec
ljmp
sti
cmp
jge
mov
xor
fnstenv
or
adc
xor
dec
jle
pop
insb
ljmp
ret
pop
in
vsqrtps
jo
mov
lcall
mov
cmp
fsubl
push
push
ret
push
inc
roll
ljmp
cs
mov
sahf
dec
push
addr16
rep
pop
and
imul
hlt
xchg
mov
pop
insb
daa
in
ljmp
mov
push
jns
in
lret
or
movsl
adc
mov
lock
mov
adc
xchg
dec
dec
pop
cmpsb
pop
fisttps
adc
outsl
test
fcmove
mov
out
scas
lods
mov
sbb
js
push
lods
push
fwait
pop
aad
cwtl
inc
lods
insl
cmp
push
inc
xor
pop
ret
push
jecxz
or
mov
bound
sub
cli
mov
out
ret
mov
stos
mov
les
push
mov
dec
push
adc
inc
fiadds
loopne
daa
ficomps
repnz
mov
aas
subl
bound
xor
xor
repz
dec
fimull
out
and
fcmovnb
lret
xor
jo
mov
fcmovnu
cli
divb
or
out
nop
inc
roll
cmc
dec
push
test
loopne
rclb
popa
dec
mov
jmp
out
cmp
jno
mov
inc
inc
xor
into
jp
jmp
xorl
test
jecxz
icebp
mov
idivl
mov
or
and
popf
xor
xor
mov
pop
xor
stc
and
adc
fdivr
cltd
imul
push
xchg
sbb
in
jb
or
xchg
dec
mov
sub
cmpsb
lret
rcrb
mov
inc
arpl
lock
sbb
mov
xor
es
push
clc
andl
pop
movsb
ret
mov
add
inc
pop
movsl
inc
fiadds
push
insl
add
test
dec
inc
xchg
ds
sub
aad
lahf
popf
dec
push
and
rsqrtps
cmpb
cmc
pop
sub
xchg
addr16
sub
das
popl
and
mov
notb
repz
and
outsl
scas
xchg
iret
and
mov
cmp
xchg
loopne
xor
xchg
pop
lahf
repnz
inc
ja
mov
pushf
shrl
loopne
into
mov
popf
xchg
jmp
ja
out
adc
adc
test
shrl
sbb
pop
test
sub
inc
loope
ret
pop
xchg
mov
int
and
loope
mov
jp
cmpsb
aaa
mov
dec
and
orb
aad
movaps
mov
shl
ret
in
out
cmp
lock
or
cmpsl
jl
xorb
lahf
dec
lock
mov
pop
lcall
stc
mov
pop
sbbb
ret
inc
test
inc
adc
cmpsb
inc
jb
lret
add
or
pushf
xor
mov
xor
clc
push
jmp
push
push
mov
jb
sub
jne
aad
aas
insl
das
out
xor
sahf
std
scas
push
nop
adc
inc
mov
outsb
test
cli
dec
pop
pop
fsubp
mov
ljmp
out
cs
xchg
negl
pop
mov
xchg
fisubrl
xchg
sub
arpl
cmp
jmp
pop
sahf
fwait
push
mov
pop
fstpt
cmpsl
adc
scas
cmp
sar
jmp
data16
push
cmp
shlb
fisubrl
sahf
cmpsb
outsb
adc
or
pushf
das
and
or
xchg
fnstsw
fdivrl
jecxz
jbe
movsl
ror
ret
jl
lea
pop
xor
mov
insb
adc
nop
jl
xchg
cmpsb
and
cld
dec
xor
orb
mov
and
cmp
dec
or
fstl
pop
add
jo
jmp
stos
dec
sub
cmc
loop
popf
add
mov
out
int3
inc
pop
mov
pop
jmp
adc
les
bound
adc
push
enter
mov
sbb
xlat
cmp
enter
jge
addr16
repnz
mov
inc
pop
lock
cld
dec
fildll
dec
push
aas
addb
in
cwtl
je
jb
fiaddl
xchg
mov
loop
inc
into
loope
fidivrl
inc
sub
xchg
xchg
test
and
mov
dec
cmpsl
xor
stos
out
pop
imul
mov
mov
mov
roll
notl
mov
dec
dec
lea
xchg
xchg
inc
push
stc
lock
aad
xor
mov
sub
bound
dec
push
or
fs
lahf
rclb
aam
mov
ljmp
cmp
push
fimull
sbb
test
lret
int3
andb
xchg
les
shlb
xchg
fnstsw
insb
ret
cli
icebp
push
pop
pop
dec
adc
popf
repnz
jmp
int
or
das
cwtl
add
inc
out
cli
and
in
push
rcll
cwtl
les
jmp
scas
dec
loope
inc
stos
jnp
lret
call
xchg
push
cmpl
dec
out
or
mov
jge
ljmp
hlt
mov
jmp
push
stos
push
rorl
mov
sub
daa
rcrl
pop
add
mov
push
mov
push
or
sbb
mov
lea
insl
inc
push
xorl
insb
add
xchg
std
push
xchg
xchg
loop
dec
rolb
fnsave
mov
push
dec
xor
jmp
mov
mov
xchg
lods
icebp
dec
pusha
test
bound
dec
add
aas
push
xor
jb
fprem
xor
js
xlat
cmpsb
ficompl
sbb
xor
into
hlt
push
adcb
add
xlat
test
and
mov
jb
mov
nop
sbb
lea
nop
jae
pop
or
pop
xchg
sarl
mov
dec
jns
mov
push
jecxz
ret
xor
dec
outsb
lret
push
dec
adc
rcrb
inc
popa
and
daa
sbb
arpl
imul
push
mov
mov
imul
jg
movups
int3
mov
jge
sbb
sbb
lock
dec
shrb
div
mov
push
repnz
je,pn
dec
insl
adc
or
push
shll
test
cs
push
scas
dec
lea
pop
push
xchg
sti
dec
rcrb
fistpl
push
dec
pop
inc
xor
repnz
pop
mov
xor
mov
sbb
nop
mov
inc
push
mov
test
fstpt
lds
int
mov
movsb
stos
sub
dec
test
fbstp
and
icebp
out
mov
mov
fwait
cmpb
mov
mov
mov
into
mov
jae
inc
mov
dec
pushf
push
icebp
mov
jg
stos
ds
mov
in
mov
mov
xchg
xchg
in
popa
jbe
mov
clc
cmp
arpl
xchg
and
ret
inc
ret
cmpsb
and
pop
mov
adc
arpl
inc
inc
xor
stos
aam
xorb
jo
pop
cmc
cli
add
mov
jge
adc
dec
ret
es
inc
xchg
imul
push
lods
pop
add
dec
je
or
pop
lock
cmp
or
js
cli
imul
or
jle
push
sub
add
xlat
cmp
imul
insb
sub
out
mov
fistps
and
jmp
cmp
out
sbb
xchg
xor
fwait
inc
mov
and
mov
je
incb
sbb
repnz
or
mov
leave
jle
or
and
pop
cmp
push
imul
xorb
sbb
cmp
fisubs
iret
setne
pop
dec
xlat
shll
nop
je
lods
xchg
push
arpl
xchg
stc
push
push
cmpsl
jge
xorl
mov
repnz
adc
sub
sbb
idiv
xchg
add
fimull
cmc
loop
stos
test
jmp
dec
adc
push
adc
pop
sub
arpl
and
push
xor
dec
adc
pop
in
cmp
mov
mov
fisttps
out
pop
sub
das
jbe
sub
pop
mov
cmp
add
icebp
push
mov
cmp
lock
or
sub
inc
ja
imul
xlat
orl
cmp
fisubl
adc
test
imul
sbb
cwtl
xor
cmp
les
lahf
mov
xchg
gs
cmp
dec
addl
mov
loope
sbb
inc
adc
inc
stos
jns
inc
fs
and
jae
or
out
fsts
mov
push
add
shlb
mov
push
add
sbbb
lcall
shr
into
xchg
pop
lretw
roll
mov
icebp
cmpsl
cltd
aad
test
inc
icebp
sub
stos
dec
out
mov
das
sbb
push
out
subb
imul
or
enter
ja
mov
sbbb
xor
cmpl
popa
shlb
lret
popf
mov
lock
fcoms
add
bound
mov
sub
mov
mov
mov
adc
shlb
mov
int3
mov
xor
lcall
cli
mov
xchg
fnstcw
jo
mov
add
jo
iret
je
mov
mov
sbb
xchg
sub
outsl
add
popa
mov
or
decl
clc
loope
mov
imul
mov
les
sbb
mov
jae
push
push
in
inc
jl
sbb
lock
push
mov
fwait
push
mov
aas
add
adc
adc
mov
mov
push
cmc
test
cmc
xchg
pushl
repz
outsb
iret
filds
add
jg
mov
fcoml
sub
add
popa
dec
mov
mov
ficompl
adc
cmp
rcl
mov
mov
mov
fstpt
out
test
pop
inc
pop
dec
dec
sbb
icebp
repnz
mov
mov
into
mov
jno
push
inc
int
xchg
lahf
les
outsl
inc
add
leave
mov
pop
mov
pushf
push
push
pop
insl
mov
sbb
call
jae
fwait
imul
cli
xchg
out
lret
cmp
jo
sbb
inc
stos
stos
mov
pop
lret
xor
call
mov
int
loop
push
loop
shll
sub
inc
xor
into
in
loop
mov
inc
cmp
fld
movsb
jle
lcall
push
jecxz
and
or
dec
pop
mov
dec
sbb
push
mov
insb
pop
leave
jno
mov
fstpl
stos
cli
xlat
mov
xchg
add
sbb
jb
inc
loopne
insl
cmp
ret
or
adcl
popa
aas
push
adc
mov
loopne
add
aad
push
or
and
pop
setb
and
popa
notb
sub
fbld
ret
rcl
arpl
sbb
lds
inc
push
testb
cmp
sahf
cmp
jp
pop
jg
mov
inc
push
lds
mov
mov
loopne
js
jno
into
rclb
inc
ror
dec
and
sbb
push
xor
sbb
push
sub
ds
mov
out
pusha
mov
mov
into
sbb
dec
or
sbb
jnp
sti
pushf
outsl
insl
mov
xchg
xor
fldenv
out
lahf
push
loop
stos
cli
cmpsb
or
rorl
adc
xor
pushf
mov
xchg
std
in
ret
mov
sbbw
mov
sub
xchg
arpl
xor
icebp
jo
push
adc
mov
pushf
mov
mov
cli
pop
nop
aaa
sub
and
cmp
lods
rclb
icebp
add
fwait
push
scas
cld
aam
pop
test
cmp
repz
mov
pop
cmp
fimuls
fildl
xchg
arpl
push
cld
and
fisubrs
mov
std
idivl
add
xlat
sub
js
ljmp
dec
add
test
mov
xor
xchg
ret
subb
sbb
and
mov
aam
cmp
xchg
test
xor
aas
mov
inc
stos
xchg
movsb
xchg
cmp
add
in
sbbl
add
push
cwtl
adcl
outsl
ficomps
out
rcll
dec
adc
sub
and
test
out
out
nop
flds
push
icebp
dec
pop
pop
cmp
fcomps
sbb
mov
inc
sbb
ret
imul
dec
push
lahf
pop
inc
roll
aam
inc
insb
sub
dec
adc
divb
adc
xchg
cmp
jp
jl
inc
popf
xor
fs
mov
repnz
out
mov
pop
mov
scas
mov
xor
and
push
cltd
cmpsb
mov
jbe
outsb
mov
xor
xchg
mov
xor
add
rcrb
mov
push
and
mov
inc
inc
jp
rcl
dec
jb
mov
insb
outsl
sbb
or
inc
or
and
sub
xchg
andb
and
dec
push
ss
in
mov
cli
cmpsl
mov
xor
push
mov
mov
cwtl
les
fcmovb
inc
clc
or
sahf
mov
fiadds
sbb
cmp
js
fisubrs
mov
mov
push
pmulhuw
gs
push
cli
scas
push
popa
jne
inc
add
cmp
ret
mov
cs
addr16
mov
add
inc
fsubl
jl
or
xor
lcall
inc
fmuls
adc
scas
and
cs
shrb
xchg
mov
in
mov
mov
mov
sub
outsb
push
fidivrs
fwait
imul
and
inc
pop
cmpl
mov
mov
ljmp
mov
es
mov
sarb
loop
sbb
jle
scas
pop
gs
xor
out
push
xchg
fcoms
push
je
or
ss
xchg
insb
xchg
and
ds
xchg
jp
bound
and
fimull
out
jns
pop
cs
jmp
cwtl
xchg
clc
xchg
mov
and
loope
mov
cmpsb
xor
cltd
cmc
pop
lock
into
push
cmp
sbb
push
cwtl
xchg
mov
fwait
push
dec
jl
outsl
xchg
jg
scas
insb
and
pop
andb
outsb
adc
test
push
sti
mov
sub
mov
out
rcrb
mov
pop
mov
pop
out
mov
sbb
jp
mull
ret
push
xor
or
sub
loop
jbe
icebp
xchg
stos
adc
testb
into
and
adc
icebp
pop
mov
mov
insb
sub
dec
push
fidivrl
js
mov
pop
outsl
sbb
ljmp
cmp
push
icebp
mov
ficoml
xor
nop
lock
cmpsb
cmp
mov
cmp
or
out
in
aam
test
push
xchg
cmc
std
jne
cli
sub
xorl
repnz
idivb
dec
fmulp
popa
rclb
lods
in
jbe
addl
imul
stos
pop
xor
dec
movsl
fimull
out
insb
inc
adc
lods
xchg
mov
aas
adc
add
push
out
cmc
and
into
setns
mov
cwtl
push
imul
aad
mov
xchg
xlat
xlat
insl
jge
push
stos
notb
lock
dec
or
pop
mov
lea
xchg
enter
out
xor
bound
jl
mov
into
or
imul
addl
pop
fisubl
sub
pop
ja
lods
or
fdivrl
mov
psubusw
mov
lods
push
mov
xor
cld
popf
dec
orl
add
out
sub
sar
adc
or
push
test
push
popa
in
lods
and
movsb
negb
cli
xchg
hlt
or
sbb
xor
sbb
das
jmp
xchg
icebp
icebp
add
dec
jmp
add
jl
mov
inc
gs
movsl
inc
dec
mov
aas
jae
cmp
dec
and
fs
popa
test
mov
jb
mov
mov
pushf
test
xchg
clc
xor
dec
cltd
cmpsl
arpl
jo
xchg
jb
pop
test
les
xchg
mov
jl
xchg
outsb
jnp
les
jmp
pusha
cltd
adc
inc
mov
test
jmp
inc
cmp
int3
sbb
xor
or
mov
mov
fbld
fiaddl
sbb
int
mov
in
loop
inc
sahf
call
sbbl
push
movsl
cld
in
mov
hlt
dec
popf
inc
add
ficoml
sub
imul
cwtl
lods
add
scas
lods
test
hlt
mov
jbe
xorb
data16
cmp
pop
mov
mov
fwait
add
sub
je
cmpsb
jmp
sbb
je
cmpsl
das
add
mov
or
mov
cmp
imul
out
stos
cmc
pop
icebp
and
into
cmpsl
jns
or
sub
mov
fwait
and
shll
mov
std
mov
test
in
jne
pushf
xor
enter
fucomi
arpl
arpl
push
jecxz
add
daa
xchg
adcb
out
inc
shlb
daa
mov
xchg
into
ljmp
lock
dec
push
lea
jl
fldcw
into
sbb
xlat
xor
lods
mov
outsl
popf
inc
xor
filds
and
mov
mov
dec
adc
jle
cli
aaa
or
mov
addl
cmp
jmp
jnp
fadds
mov
dec
call
add
daa
dec
nop
sub
and
mov
jbe
xchg
aas
jns
sbb
jb
sahf
lahf
imul
add
sbb
ret
xor
adc
out
push
sbb
sbb
js
inc
repnz
int3
xchg
ret
and
push
lods
addr16
mov
lock
xlat
shll
test
mov
cmp
xor
nop
xchg
push
or
mov
or
sbb
cld
idivl
ja
inc
sti
cli
minps
int
inc
push
cmp
inc
mov
cs
inc
add
in
or
and
int
mov
call
pop
cmpsl
es
mov
sbb
test
pop
mov
mov
jmp
mov
lock
and
xchg
mov
fisttps
lret
cli
dec
outsl
adc
in
jmp
mov
ffree
xor
mov
shr
repz
movsb
and
inc
loopne
xor
insl
mov
add
mov
outsb
push
push
es
jne
pop
push
fidivrs
and
push
push
fidivl
inc
xor
or
dec
xchg
add
rol
fmulp
mov
pop
xor
push
dec
dec
mov
and
xchg
mov
sub
sub
mov
dec
je
dec
sar
jg
mov
xchg
cs
imul
std
out
movsb
fwait
mov
test
leave
push
sub
push
gs
enter
push
sbb
sti
mull
sub
mov
mov
je
add
and
adc
add
lods
sub
loope
mov
push
pusha
jnp
jne
aam
or
mov
adc
testl
sti
xor
nop
cmp
das
pop
out
adc
xchg
mov
cmp
jno
pop
inc
mov
dec
mov
addb
mov
mov
orb
in
jo
frstor
adc
sub
enter
cmpsb
pop
jns
pop
cmp
cltd
mov
stc
push
jbe
test
and
jo
sbb
out
stos
add
sub
push
push
xchg
mov
sbb
mov
fsubrl
sub
in
arpl
mov
cmc
jmp
vminss
mov
adc
outsl
jnp
mov
int
je
sub
mov
push
inc
xchg
lret
mov
loop
shlb
jl
jg
gs
and
jge
fimull
cld
inc
pop
arpl
popa
bound
divb
add
jge
and
out
pop
daa
xor
frstor
and
xor
fidivrl
inc
xor
mov
add
les
xchg
push
adc
push
or
aaa
bound
and
in
and
cmp
jbe
test
mov
notb
out
lock
fidivl
loope
mov
push
inc
dec
dec
sti
outsl
inc
fstpl
in
inc
sub
int3
and
mov
adc
mov
test
jmp
sub
pop
test
jae
jmp
sbb
arpl
jnp
pusha
mov
lret
mov
xchg
mov
push
mov
dec
sub
push
jb
roll
aad
popl
mov
mov
outsb
ret
jo
out
fmull
movsl
dec
mov
test
mov
dec
adc
jg
adc
mov
shlb
and
jns
fcomps
popa
push
pop
or
sub
cmpsl
sahf
jnp
jecxz
rcrl
lock
fnstsw
ja
jl
clc
rcll
loope
sub
stos
or
sahf
cld
out
pop
and
lret
inc
cltd
lret
dec
mov
mov
sbb
out
cltd
dec
dec
sub
negl
jne
arpl
jns
bound
lret
xchg
add
xor
push
push
cmpsl
push
sub
jb
fldcw
test
push
xchg
cmpsb
ret
cmp
inc
mov
xor
sbbl
mov
mov
stc
xlat
test
leave
arpl
enter
adc
rcrb
movsl
mov
clc
cmp
movsl
ja
out
mov
outsl
into
scas
stc
testb
jp
cmpsl
add
mov
scas
push
shlb
pop
dec
lcall
adc
or
dec
and
test
mov
les
ja
lods
hlt
in
int3
cmpsl
daa
xchg
lods
or
jp
sbbb
js
jg
ss
into
ret
ds
push
dec
sub
test
sub
addr16
imul
shl
cmp
popa
or
test
xchg
pop
jmp
push
std
addr16
or
fwait
mov
imul
cmpsl
cmp
mov
stos
mov
sub
jle
push
pop
lcall
test
push
scas
int3
push
repnz
or
repz
push
push
dec
inc
jb
jmp
xchg
xchg
stos
push
push
inc
jl
lcall
movsl
dec
movsl
idivl
xchg
sub
rcrb
push
and
or
outsl
imul
inc
cmp
fimull
lds
in
cli
sub
in
dec
imul
hlt
mov
inc
jno
cmpsb
lcall
loop
push
movsl
filds
or
cli
or
jge
and
inc
sbb
mov
sbb
mov
xchg
cltd
test
adc
lods
mov
mov
lods
ficoms
addr16
lcall
pusha
out
mov
vpminub
jp
adc
xor
fnstenv
xchg
jg
dec
inc
ret
inc
push
pop
pop
push
pop
mov
jbe
mov
repz
dec
in
movsb
mov
jno
js
fldl
xchg
jg
xor
pusha
adc
jl
and
sub
mov
jne
fcmovu
iret
pusha
push
aaa
push
fmull
loope
lds
out
lahf
lock
mov
and
jl
inc
call
es
xchg
scas
push
out
push
scas
inc
dec
cmpsb
std
loop
call
and
pop
and
mov
inc
nop
jae
jmp
add
ljmp
add
loope
push
dec
rorb
jle
mov
test
mov
dec
cmp
or
add
fldenv
cmpsl
jmp
vucomisd
mov
cmpl
imul
addr16
in
jecxz
or
icebp
adc
fdivrs
pop
lds
pusha
out
imul
and
test
int
inc
out
fs
adc
fld
aaa
fiaddl
lret
cmp
cmp
ljmp
cmp
in
imul
jl
mov
mov
sub
divl
cmp
loop
ret
sub
add
hlt
clc
jo
jno
pop
push
scas
movsb
xchg
stc
loope
dec
das
daa
sub
aas
test
int
xchg
dec
cmp
rol
mov
lods
in
loope
pop
je
adc
mov
or
pop
pop
cli
sbb
popf
sub
mov
xchg
mov
fnstcw
pop
stos
xor
push
xor
cli
lea
sbb
iret
fnstsw
sub
jl
pop
lea
cwtl
push
inc
jo
pop
stos
xor
mov
fs
xchg
cmpsl
push
xor
arpl
scas
cmp
insb
js
repz
scas
cmp
test
sbb
jge
adc
pop
and
andb
xchg
xchg
roll
jp
imulb
push
lcall
push
xor
xchg
lret
aad
xor
xchg
jns
ljmp
adc
or
add
inc
and
sbb
jns
repz
sub
push
mov
pushf
sbb
pop
repz
ret
dec
adc
inc
mov
jmp
imul
jns
das
pop
inc
sbb
ret
imul
mov
dec
or
push
inc
int3
pop
popa
decl
adc
dec
add
push
mov
pop
add
or
in
jl
test
scas
ret
jecxz
sbb
inc
sbb
call
and
arpl
pop
and
scas
mov
lret
testb
and
mov
inc
mov
in
sub
bound
mov
sbb
cmp
xchg
add
popa
or
mov
push
sub
in
jl
dec
or
xchg
jne
mov
mov
cmp
dec
jbe
aas
pop
push
loopne
jnp
cli
dec
lret
mov
ss
add
inc
add
adc
sbb
pop
mov
sti
mov
adc
int3
push
addr16
pop
sahf
bound
xor
fucom
scas
push
xor
mov
and
sub
pop
mov
jns
push
mov
push
loopne
sbb
push
insb
stos
or
mov
pop
aad
pop
push
xor
in
pop
jp
inc
mov
xchg
push
lahf
push
xchg
jge
imul
mov
dec
clc
ja
jae
dec
or
mov
push
loop
sbb
movsl
xchg
xchg
inc
cli
adc
dec
rorb
ror
fildl
push
fidivl
and
xor
aas
mov
or
sbb
fmuls
rcrb
and
push
xchg
mov
ficomps
xchg
mov
mov
mov
cmp
adc
inc
cmp
aad
ret
arpl
ja
push
les
pop
xor
dec
mov
out
sbb
stc
mov
popf
sbb
add
int3
dec
enter
fisubrs
aaa
imul
xchg
test
adc
adc
push
dec
pop
cwtl
sbb
pop
jg
jecxz
or
icebp
scas
idivl
cmp
pop
outsb
test
cwtl
mov
cmp
mov
push
in
scas
sbb
dec
fs
inc
in
jnp
mov
mov
dec
adc
fwait
dec
mov
lds
fucomip
mov
jae
scas
ss
or
pop
stos
fs
call
or
lods
cs
cmc
not
mov
sbb
ret
jns
pop
push
pop
xchg
fmuls
and
sbb
xlat
dec
or
pop
out
cmpb
lret
pop
fmuls
std
je
cmp
pop
les
cmp
adc
repz
jnp
xor
or
mov
pop
cmpsb
ja
ret
sbb
xchg
xchg
add
or
call
cmp
push
mov
xor
out
and
shrl
cmp
jg
mov
push
mov
stc
mov
adc
jge
subl
cmp
push
adc
fcoms
xchg
sub
cmp
sbb
pop
loope
push
mov
jle
and
fists
mov
aam
rolb
jmp
pop
lret
mov
pop
lcall
iret
sub
or
mov
into
lea
cmpsl
inc
imul
jmp
mov
dec
sbb
lret
adc
or
mov
add
sub
fnstenv
ret
adc
mov
imul
fisubrs
jnp
mov
mov
adc
mov
lock
push
leave
and
xchg
inc
dec
push
es
pop
mov
inc
lods
dec
movzbl
cli
lahf
ss
pop
jmp
jle
insl
or
cmp
or
imul
ss
icebp
out
push
clc
or
decb
push
mov
mov
jnp
leave
fsub
mov
movsl
xchg
mov
mov
xorb
push
mov
adc
stc
xor
imul
ja
ja
jnp
jle
cmp
pop
xor
out
in
lcall
lock
inc
lcall
adc
dec
cld
push
in
xor
and
bound
fdivl
mov
lock
mov
stc
clc
mov
loopne
setnp
aam
std
mov
fnsave
mov
mov
fadd
fisttpll
fwait
divl
sbb
sbb
clc
sbb
test
outsb
test
push
fiaddl
push
add
cmpb
gs
pop
jp
orl
aad
mov
fnstenv
push
xor
mov
negl
popa
pop
jp
and
and
adc
rcl
lcall
sbb
test
clc
fildll
mov
dec
inc
mov
and
cld
insb
pusha
lock
mov
icebp
int3
into
mov
dec
lea
push
imul
sub
push
cmp
jno
dec
aam
push
repz
insl
and
xchg
in
adc
popf
inc
dec
out
cli
sbb
ret
addr16
mov
sub
addr16
repnz
imul
imul
xlat
jge
bound
xor
lcall
mov
mov
add
mov
aaa
fcompl
inc
popl
mov
mov
int
add
xlat
rorb
jb
inc
inc
sub
dec
jg
push
in
in
xchg
adc
xchg
adc
gs
xchg
pop
pavgb
fsubl
aas
shrb
call
or
mov
jns
push
xor
repz
sub
mov
mov
add
pusha
call
mov
in
pusha
enter
imul
insb
or
jno
pop
aad
mov
dec
loopne
fcmovnb
in
cmpsl
ret
mov
mov
jb
xchg
in
shll
add
hlt
push
cs
and
sub
fsub
or
add
das
mov
jl
cli
mov
pop
test
lret
lret
adc
inc
mov
ret
ljmp
test
cmc
sub
movsb
leave
shl
mov
stos
jmp
test
jle
and
mov
mov
mov
or
sub
add
aad
xor
insb
lds
int
popa
int
dec
aaa
jge
nop
sub
ret
mov
inc
push
out
in
adc
inc
popf
jae
dec
out
inc
lea
push
andl
lods
jg
dec
aam
lcall
mov
and
sbb
push
pop
mov
cld
repz
mov
in
cli
jle
and
cmp
jo
mov
mov
js
fimuls
fmuls
lea
dec
sbb
mov
cmc
mov
jge
mov
jo
clc
dec
add
imul
cmp
lods
hlt
insl
pop
aad
mov
mov
mov
fsts
bound
add
push
ljmp
cmp
add
xchg
xchg
mov
xor
cmpsl
out
ljmp
test
lret
or
inc
push
rolb
ret
test
ret
xor
roll
cwtl
rcrb
mov
push
mov
xchg
add
rolb
dec
sbb
pop
repz
test
pop
and
jmp
pushf
idivl
aaa
sub
xor
fmull
xchg
or
push
lret
inc
popa
adc
lcall
out
andb
xchg
daa
pop
cmpsb
inc
rorb
dec
outsl
jl
scas
mulb
pushf
mov
push
mov
mov
sub
addb
xchg
sbb
lret
icebp
xlat
cmp
int
lahf
shll
daa
je
xchg
out
shrl
jmp
stos
lcall
lods
arpl
jns
fdivs
inc
adc
jb
js
imul
js
outsb
push
into
push
popf
nop
jne
pop
les
dec
imul
or
lods
add
rolb
ja
push
cmpsb
mov
xorb
dec
sbb
in
xchg
loope
insl
mov
aam
lahf
cwtl
sar
and
cmp
mov
jne
pop
into
mov
mov
and
xlat
inc
push
xor
jno
daa
and
xchg
outsl
out
dec
daa
loope
xor
insl
rcr
cmp
sahf
or
inc
cmp
cmp
sub
sarl
into
daa
int
cs
std
lret
mov
fwait
stos
add
stos
mul
pop
ds
xor
rorb
mov
sbb
jno
add
mov
das
push
mov
imul
push
ds
inc
iret
outsb
add
imul
js
mov
sbb
or
out
cmp
and
xorl
fisubl
lcall
cmpsl
dec
ret
mov
arpl
dec
call
lcall
inc
aad
push
sub
lcall
jbe
pushf
fwait
or
push
dec
or
fs
int
clc
push
sbb
daa
frstor
push
xor
jecxz
mov
scas
insl
nop
mov
gs
test
adc
neg
out
add
inc
subl
enter
insl
xchg
jns
jle
jmp
das
cmpsb
and
pop
rol
inc
test
je
xchg
jno
mov
ja
loope
shr
cmpsb
mov
xlat
sbb
add
pop
adc
imul
je
dec
mov
xchg
fcom
les
pmullw
lahf
pop
push
test
add
mov
ljmp
jo
push
and
push
cmp
sbb
or
loope
push
xchg
lahf
lds
lahf
cmp
and
into
in
icebp
idiv
sbb
out
inc
mov
dec
pusha
xchg
std
ljmp
sahf
out
add
adc
gs
pop
fiaddl
ss
xchg
in
push
push
fwait
cmp
scas
jns
pop
mov
adc
bound
jmp
mov
or
jae
adc
aas
in
aam
jno
insl
mov
xchg
arpl
or
stos
fsubs
mov
dec
sbb
xor
rclb
pop
pushf
and
mov
lods
cmp
pop
push
roll
dec
jno
mov
add
push
and
add
cli
adc
out
inc
insb
dec
jno
xchg
inc
and
andb
cmp
pop
leave
dec
je
mov
push
in
adc
mov
addr16
cmp
cs
cmpsl
int3
popa
arpl
xor
sub
jp
add
add
out
pop
add
xchg
je
lret
mov
leave
call
jge
repnz
mov
inc
cmp
lret
add
imul
aad
jg
mov
fmul
stc
cmp
inc
push
decl
data16
fists
ds
jnp
push
test
pop
jg
cs
mov
xor
jns
cmp
sti
lret
mov
cs
call
jecxz
jl
jb
mov
or
fdivs
out
fisubs
and
sahf
clc
test
inc
sbb
lds
xchg
xchg
pop
lretw
daa
es
addr16
xlat
shll
or
dec
pop
xchg
jne
arpl
out
pop
xchg
insl
xor
jp
pop
das
lds
popf
mov
faddl
aas
mov
je
xor
mov
and
mov
dec
inc
xor
pop
arpl
stc
ss
xlat
movsb
div
fbld
push
push
call
sahf
mov
insb
xlat
mov
syscall
fsubr
cmp
and
call
scas
xor
popa
test
dec
jo
add
mov
mov
mov
pop
ljmp
dec
fdivrl
xor
loop
mov
popa
jl
jns
jg
ss
mov
fstpl
arpl
push
bnd
push
add
adc
testb
sbb
sub
lea
idivb
dec
adc
movsw
sbb
dec
mov
jnp
mov
lret
iret
rorb
loop
pop
repz
daa
out
pop
inc
movsl
mov
xchg
ror
mov
or
sbb
pushf
mov
cmp
or
jmp
pop
or
xchg
stos
mov
mov
shll
mov
test
sbbl
dec
inc
scas
sarb
mov
mov
xchg
fnsave
jecxz
mov
dec
jno
popf
roll
mov
imul
ljmp
bnd
cwtl
call
outsl
dec
and
inc
pop
pause
sbb
pop
out
shlb
inc
xor
addr16
into
mov
dec
push
mov
and
in
ja
int
mov
xchg
mov
nop
aaa
jl
ret
imul
cmp
xchg
mov
jle
lcall
mov
jae
push
aam
stc
cmpsb
xor
lods
mov
lods
cmp
push
push
or
insb
in
mov
mov
daa
lock
sub
mov
fisubrs
adc
cmc
iret
std
scas
loope
fdivr
cltd
dec
push
loopne
aad
jnp
adcb
xor
aas
push
dec
push
nop
sub
daa
mov
push
xchg
nop
inc
scas
pusha
aam
imul
mov
cmp
adc
dec
mov
data16
lods
sbb
sbb
lret
cmp
out
or
mov
mov
cmp
adc
push
cmp
leave
repnz
aaa
jp
lret
enter
push
dec
lcall
das
movsb
mov
jl
out
dec
sbb
clc
ds
or
pop
or
mov
arpl
inc
sbb
xchg
sub
mov
iret
xlat
adc
inc
xchg
push
push
jbe
mov
jbe
add
fstl
jl
and
ds
imul
inc
sbb
mov
jbe
outsb
push
loope
pop
jns
sub
fstp
inc
cs
repz
or
sar
xor
stos
loope
mov
pushf
mov
inc
mov
dec
push
into
jb
fldenv
pop
imul
das
fistpll
in
dec
xchg
imull
dec
mov
adc
cli
mov
xchg
fwait
in
mov
jmp
cmpsb
pop
adc
ret
pusha
inc
jns
dec
in
loope
pop
sarb
add
cmpsb
dec
inc
sub
mov
add
ret
fstpl
lods
pop
notb
in
out
icebp
or
dec
fadds
ret
lods
push
orl
mov
divl
and
mov
int
aaa
pop
xchg
xlat
lods
in
fwait
mov
sub
cli
inc
fmulp
loopne
sub
or
adc
insl
dec
and
daa
andl
fdiv
ja
jg
cmpsl
std
jg
jp
mul
rcrl
call
or
lods
mov
cmp
cs
mov
stos
cld
outsl
adc
cld
and
adc
test
inc
fnsave
or
scas
dec
push
clc
ret
aas
inc
fcomps
xlat
mov
xor
and
cmpsb
sub
cmpsb
and
sub
fistl
cli
dec
les
sbb
dec
push
ret
cmp
clc
mov
std
in
inc
dec
add
push
cli
dec
les
fwait
dec
xlat
xchg
pop
jo
push
gs
int
stc
ret
xchg
cmpsl
mov
test
dec
daa
aas
arpl
jl
lcall
movsl
popf
or
cmp
xor
pop
arpl
jns
test
mov
push
push
mov
mov
add
mov
fwait
xchg
fldl
add
mov
sarb
and
mov
repnz
gs
loopne
xchg
icebp
adc
mov
sbb
mov
test
sub
fucomip
loope
adc
dec
test
imul
dec
fisubrl
mov
arpl
dec
fidivrs
lods
fs
jb
pop
mov
rcrl
adc
push
sub
fldl
stc
iret
jge
cmp
xchg
sub
dec
add
ja
xchg
push
xchg
ss
lcall
outsb
lods
inc
jecxz
lahf
push
cli
inc
and
xchg
xor
pop
clc
out
xor
jb
sbb
out
mov
lds
xorl
inc
out
ret
lret
scas
cld
mov
lahf
mov
mov
fdiv
adc
pop
cmp
mov
into
jbe
mov
fcmovnbe
addr16
leave
movsb
mov
mov
mov
mov
jecxz
test
dec
aad
dec
mov
push
or
jmp
movsb
add
out
lods
addr16
pop
popf
inc
cmp
gs
insb
ss
add
stos
movsb
es
cli
pop
push
and
int
push
dec
mov
mov
out
xor
sbb
mov
xchg
jmp
outsl
shrl
fstl
dec
jge
js
dec
shll
out
outsb
sahf
push
or
pop
bound
jne
mov
ljmp
iret
push
rorb
mov
and
inc
leave
push
test
movsb
push
or
push
daa
mov
outsl
or
test
mov
cmp
inc
push
fnstcw
in
inc
movsl
sub
mov
dec
push
orb
ret
pop
fbstp
pusha
and
mov
rcr
push
dec
dec
cltd
mov
dec
xor
jge
stos
pop
push
loope
cs
das
sub
pop
je
adc
mov
fwait
push
nop
call
and
fdiv
addr16
jmp
popw
ret
int
inc
inc
ret
lcall
and
mov
mov
fsubs
cwtl
xor
mov
scas
adc
repnz
mov
ret
sbb
or
and
xchg
xor
mov
popf
adc
fwait
xchg
outsl
lea
mov
ljmp
push
negl
jecxz
scas
out
fisttpll
push
dec
xor
push
push
dec
sbb
pop
cmpsl
cmp
xor
and
dec
fisubrs
aad
addl
loope
aas
xchg
xchg
rorl
dec
xor
stc
in
xor
cmpsl
push
and
and
cmpsl
movsl
cmp
xchg
mov
add
repz
daa
sub
xor
adc
add
adc
sbb
ja
add
movsl
pop
sbb
int
jbe
lahf
xchg
pop
push
test
movsl
loopne
add
inc
dec
mov
add
int
outsb
aaa
shlb
mov
aaa
les
push
test
xlat
subl
testl
in
test
stc
mov
xlat
add
loope
scas
andb
test
aas
xchg
stos
lahf
jp
fsubrs
or
test
fnsave
inc
imul
stos
bound
and
scas
mov
or
leave
aad
push
inc
sub
jge
or
loop
data16
dec
ss
call
xor
cwtl
xchg
andl
inc
sub
cld
and
pusha
shlb
mov
pushf
movsl
mov
xchg
out
dec
fcmove
mov
in
jne
subb
cltd
incb
rorb
popf
and
and
popa
insl
filds
push
lods
sti
cmp
mov
mov
jmp
lods
jp
mov
sub
prefetcht1
fcom
ret
int
xor
shr
pop
xchg
leave
mov
and
and
cld
jecxz
sbb
loop
mov
test
sbb
lods
xchg
cmp
rcll
clc
outsl
ljmp
mov
das
loope
xchg
div
jb
pop
or
inc
and
out
lds
jo
lods
leave
push
and
jo
in
mov
stos
mov
pop
or
add
pop
xchg
fidivs
ret
xor
jmp
inc
int3
das
mov
inc
add
popa
imul
or
data16
ret
outsb
je
pop
jmp
mov
jg
hlt
jecxz
clc
arpl
scas
jnp
rcrb
fimull
addl
into
jg
push
or
pop
mov
pop
inc
xchg
adc
std
adc
jne
insl
test
jo
cmp
stc
in
inc
sbb
jbe
cmp
jecxz
and
rclb
mov
outsl
lods
fwait
test
inc
hlt
adc
pushf
aaa
dec
and
push
add
and
xchg
pop
mov
pop
or
std
or
ja
mov
roll
lea
sub
popa
pop
add
mov
jnp
add
add
enter
cmp
adc
imul
dec
fimuls
les
lock
fsubl
in
jp
inc
out
pop
imul
stos
xchg
incl
sub
arpl
addb
mov
mov
dec
push
mov
jno
fxch
out
cld
andb
notl
jns
pushf
mov
mov
push
mov
sti
cli
fistpll
fs
cmpsb
mov
cmc
xchg
jmp
arpl
push
enter
arpl
add
dec
iret
pop
mov
push
dec
add
fwait
shrb
jbe
sti
pop
sub
mov
jne
es
cwtl
push
xor
nop
pop
ja
in
inc
arpl
xchg
loop
cmpsb
cmpsb
cmpsl
sbb
mov
mov
xchg
mov
lea
cmpsb
stos
daa
cli
push
cmpsb
fwait
pop
pop
pusha
sbb
lret
lock
xor
fcompl
jns
pop
mov
repz
xchg
or
cmp
imul
jo
push
mov
inc
test
addr16
js
mov
dec
loope
data16
cmp
jne
sbb
lock
pop
lods
test
or
xor
add
hlt
push
orb
fwait
and
les
insb
pop
negb
push
ja
pop
sbb
sarb
mov
pushf
adc
inc
mov
rcl
mulb
cmpl
add
movsb
fsubs
testb
scas
push
repnz
orb
add
testb
loope
cmp
jo
sub
imul
sub
lock
or
sahf
inc
daa
sbb
nop
sbb
cmp
add
xor
jb
adc
call
popf
cmp
stc
cld
div
fcom
iret
jne
mov
mov
lcall
pop
mov
inc
push
mov
inc
movsb
inc
push
xchg
test
and
stos
and
mov
sarw
cwtl
js
sub
dec
cmp
jmp
pop
in
push
out
sub
mov
sbb
pop
mull
and
inc
loop
shll
adc
dec
cmp
test
outsl
add
pop
mov
or
outsb
das
mov
ss
and
fistl
pop
fcoml
mov
xchg
ret
dec
inc
rorb
mov
sub
jp
daa
jmp
ror
jg
cmp
cwtl
int
mov
int3
lods
lret
jecxz
mov
iret
push
cmp
push
or
mov
mov
and
xchg
nop
es
or
jp
test
pop
out
aaa
sbbl
inc
jmp
int
sub
pop
pop
sub
mov
add
mov
js
shlb
scas
adc
jnp
rcrb
push
divl
sub
xchg
mov
lret
and
jg
subl
dec
cwtl
aad
xor
push
or
int3
mov
push
sub
incb
sub
test
dec
xchg
sub
xlat
adc
es
leave
mov
pop
jge
inc
clc
add
push
repnz
insb
push
aas
dec
lahf
pop
or
rcrl
pop
xchg
nop
mov
scas
and
ljmp
push
mov
lock
int3
call
jl
ficoms
xchg
in
fstl
inc
push
cwtl
jbe
lods
jl,pn
adc
sub
mov
lock
je
test
ss
adc
sbb
das
cwtl
stc
fs
mov
in
adc
mov
push
js
jle
std
xor
leave
xchg
lock
sbb
jae
es
add
sarb
jmp
mov
fcoml
or
fisubrs
mov
dec
mov
jno
pop
or
push
mov
sub
loop
mov
loop
mov
dec
int3
cltd
pop
loop
xor
mov
mov
cs
sub
pop
jge
xchg
fimuls
cmp
dec
data16
pop
jmp
sub
cwtl
xor
cmpsb
xchg
sub
xchg
pop
or
pop
in
int3
inc
js
into
xlat
xchg
mov
ret
or
lret
add
and
clc
mov
push
mov
jecxz
leave
push
lahf
mov
xor
mov
hlt
sarl
shrb
nop
xchg
push
jno
mov
lock
fcmovu
daa
imul
pusha
mov
les
in
ret
movsb
jle
stc
ja
pop
rcr
ret
in
shr
add
es
xlat
push
and
int
mov
cwtl
sbb
jg
dec
cwtl
push
shl
push
push
fadds
jae
mov
adc
or
sub
aas
mov
push
or
adc
aad
mov
daa
test
imul
and
and
ja
xchg
xor
in
add
xor
ljmp
jmp
fucomip
pop
icebp
mov
cmp
dec
sbb
jnp
sbb
pop
xchg
push
test
mov
sbb
dec
cmc
cmp
mov
iret
ror
push
jge
fxch
mov
ds
leave
sub
add
ja
es
dec
mov
in
frstor
jo
std
cmp
test
add
in
es
into
sub
test
xchg
inc
mov
pop
aad
ljmp
out
mov
cmc
jl
mov
inc
lcall
imul
pop
pushf
add
push
jb
push
cs
adc
xchg
push
cmp
inc
push
or
test
leave
xor
aas
test
pop
ss
xchg
sti
fwait
pop
xchg
dec
jle,pn
jns
push
das
cltd
cmp
cmp
mov
mov
add
sti
xchg
popf
loop
in
sub
and
pushf
sbb
or
ret
fimuls
cmp
imul
mov
dec
sahf
sbb
repnz
aas
lods
sbb
or
push
pop
pushf
sbb
in
icebp
pop
iret
fdivp
mov
fistpll
insb
push
pop
rclb
pop
les
js
push
pushf
inc
xchg
mov
scas
call
das
ja
stc
mov
js
pop
xchg
mov
loope
lea
sub
xlat
xchg
mov
pop
push
jp
ret
cs
mov
shl
in
cmpsl
push
pop
in
outsb
js
lea
fildll
and
pop
adc
lcall
loop
in
icebp
es
pop
add
inc
mov
andb
sbb
lret
call
rclb
out
cwtl
mov
fmulp
clc
repnz
inc
incb
xchg
or
pop
stos
sbb
frstor
and
sbb
iret
cmp
mov
negb
and
or
mov
out
idiv
ds
xor
mov
decl
cmc
jb
dec
mov
enter
cs
push
rorb
leave
inc
cli
insb
jmp
je
shl
lahf
jbe
shlb
or
mov
sbb
add
pop
adc
and
dec
shlb
in
hlt
push
out
bound
jmp
mov
sbb
mov
stc
ljmp
data16
cltd
test
mov
out
repz
aam
repnz
push
jmp
fnsave
jno
jecxz
pop
jle
cmp
std
iret
pop
sbb
push
jo
test
and
arpl
inc
clc
inc
leave
dec
cmpl
pop
scas
pop
mov
es
ja
dec
sbb
aaa
pushf
push
dec
cld
dec
aad
sbb
mov
inc
sub
jo
add
jmp
aaa
mov
lock
loopne
sbb
clc
ljmp
cmp
jle
pop
xor
int3
js
dec
cmc
pop
js
mov
test
scas
xlat
mov
jle
adc
or
sub
dec
pop
cmp
js
cmp
daa
or
in
push
cmp
mov
cmpsb
push
test
stos
mov
xor
lahf
xor
cld
inc
aam
das
push
sbb
cmp
and
imul
leave
adc
xchg
sub
mov
mov
arpl
int
int3
adc
mov
les
ret
mov
pop
out
andl
adc
mov
js,pn
shll
lret
int
repnz
pop
iret
sub
push
push
sbb
mov
sahf
mov
add
lea
test
xchg
jne
mov
shl
mov
push
popa
nop
ret
in
jno
hlt
pop
mov
add
xchg
pop
rolb
out
cvtps2pd
out
xchg
pop
add
ja
fsts
lods
out
test
pop
pop
ss
lret
or
scas
ja
push
adc
sbb
lret
xchg
repnz
pop
jl
xchg
es
dec
adc
jo
sub
mov
in
jge
xor
push
or
xchg
or
popa
xor
inc
adc
xchg
loope
in
mov
pop
test
pop
dec
push
leave
or
pop
test
icebp
or
or
mov
sbb
push
rol
inc
mov
mov
ss
adc
adc
addr16
repz
out
das
dec
das
inc
sbb
lock
adc
xchg
imul
jns
or
mov
or
adc
mov
sub
out
ror
mov
daa
xor
loopne
mov
sbb
icebp
repnz
stc
in
test
sbb
aam
xchg
out
or
cmc
xchg
sub
dec
add
arpl
fcoms
xor
das
sbbl
sub
jg
and
pop
mov
cmovg
xor
adc
loope
nop
cmc
add
adc
or
clc
mov
add
in
int
test
fnop
pop
cwtl
add
inc
aaa
popa
push
ret
lcall
push
push
rclb
daa
inc
xchg
ficoms
in
adc
in
lods
icebp
mull
sub
and
sbb
mov
mov
xor
repz
xor
notl
jg
pop
xor
push
jl
mov
cmpsl
scas
add
out
xchg
dec
in
iret
popf
or
adc
ds
xlat
mov
push
lea
push
js
cmp
adc
repnz
mov
int
cmp
or
js
insl
lods
mov
lret
jnp
insl
mov
cmp
loop
fcomps
mov
call
pop
test
add
iret
mov
ss
shll
mov
movsl
sahf
add
lcall
pop
pop
es
cmc
test
pushw
jae
ja
popf
mov
jg
ds
jge
jbe
dec
xchg
fisubs
ds
jo
jg
hlt
adc
dec
sub
decb
stc
aam
jnp
icebp
int
mov
xchg
mov
xor
lahf
push
or
fildll
sti
rcl
gs
fidivl
inc
das
insl
ljmp
xor
lahf
paddd
inc
mov
popf
adc
addb
sbb
add
xchg
lret
repz
mov
rolb
dec
lcall
cmp
push
push
movsl
cmpsb
push
mov
repnz
aad
xchg
push
xlat
shl
test
mov
and
pop
aas
pop
xor
gs
fsubrl
jnp
mov
sar
pop
pop
jg
scas
clc
mov
arpl
lds
add
or
sub
test
incl
mov
aaa
ret
lcall
mov
insb
cmpsl
ret
xchg
xchg
inc
mov
push
cld
inc
fists
xor
or
ja
lahf
adc
and
cmp
push
push
out
xor
out
js
mov
lahf
lds
mov
add
push
add
scas
cmc
insb
or
sbb
xchg
repz
cld
hlt
aam
dec
pop
adc
cmc
shlb
mov
fdivrl
adc
lods
movl
into
adc
je
js
pop
jnp
mov
push
jne
mov
popa
icebp
jecxz
leave
mov
xchg
fstl
inc
fldenv
gs
xor
pop
mov
inc
push
cmpsb
cmp
jge
aam
push
loope
call
ret
adc
andl
pop
scas
sti
test
test
loope
loop
stos
jno
or
pop
icebp
shlb
xchg
mov
movsb
pop
mov
mov
xchg
xchg
aam
ds
dec
je
inc
adc
test
and
adc
jge
jne
sub
in
sbbb
ja
sbb
fcmovnbe
or
divl
xlat
cltd
gs
js
cmp
mov
je
sub
aas
or
loopne
sti
cli
lret
push
mov
cmp
sbb
jp
fstps
lcall
sub
sub
cli
mov
sub
or
cs
dec
xor
test
sahf
pushf
movsb
lods
cmp
add
add
jl
push
dec
cmp
dec
hlt
sub
jb
test
sbb
loop
gs
daa
push
adc
push
iret
insb
jnp
mov
cltd
pop
add
insb
xchg
and
add
jne
out
push
jne
call
pop
sbb
jecxz
inc
cli
xor
mov
fldt
std
mov
clc
sbb
loope
test
mov
cld
mov
cs
aaa
or
sub
push
mov
lret
dec
cmp
orb
ds
fldenv
jo
je
xchg
rcr
dec
fidivl
push
or
mov
and
mov
push
mov
stc
sub
jge
inc
fdivr
mov
jg
lcall
sahf
neg
icebp
add
xchg
or
and
outsb
dec
jl
xchg
imul
lods
movsb
sbb
loop
mov
push
repnz
xor
xor
ficoml
jmp
jnp
sub
xchg
sbb
lds
pop
and
adc
fadds
cwtl
jae
push
xchg
adcl
xchg
jl
inc
mov
repnz
jmp
fldenv
divb
loope
stos
cmp
stc
cmp
adc
shl
mov
sub
push
sbb
aas
xlat
inc
sbb
dec
adc
cmp
adc
inc
pop
or
mov
insb
xchg
sub
fucomi
fwait
jo
xor
rcll
pop
cmp
cltd
cmpsl
in
pop
in
mov
mov
mov
mov
rcrb
inc
aaa
scas
cvtdq2ps
xchg
hlt
push
and
cmp
mov
out
push
mov
push
cs
ja
or
mov
movsb
pop
jno
out
jnp
mov
pop
sub
pop
lea
rcrb
push
rcrl
dec
or
adc
loopne
sub
in
sti
js
pop
dec
ret
into
xchg
xchg
sti
lea
jns
jg
into
sub
imul
negb
adc
imul
cs
outsb
pextrw
testb
daa
lret
popf
aaa
mov
and
lahf
cmp
sub
insb
movsl
sbbb
or
lods
mov
inc
sti
out
in
jne
subb
fisttps
xchg
into
xor
repz
mov
mov
popa
test
je
mov
mov
sbb
ret
sub
cltd
roll
inc
inc
out
mov
repz
adc
aaa
cltd
push
xor
mov
cmpsl
jle
andb
roll
and
aas
in
xlat
mov
icebp
add
cmp
mov
enter
and
mov
jl
xor
sbb
jg
arpl
cmc
jnp
mov
insl
sbb
mov
sub
cmc
cwtl
push
cmp
filds
dec
inc
sub
xchg
inc
sahf
in
rorl
and
loop
lds
cwtl
rol
or
and
or
outsl
cmp
test
mov
mov
aam
inc
mov
inc
mov
cmpsl
xor
jle
scas
push
xchg
cmp
mov
adcl
std
or
push
ljmp
or
mov
cli
aaa
jmp
in
mov
aas
mov
cmp
sub
mov
mov
ret
jb
mov
fs
sub
into
stos
int
fnstsw
sbb
lcall
jae
inc
out
sti
popf
stos
testb
movsb
mov
shl
push
idivb
jmp
divl
mov
clc
js
pop
push
ljmp
inc
mov
andl
xor
out
push
testb
outsb
jns
lods
outsb
in
test
or
insb
lods
lret
inc
mov
or
bound
pop
divl
mov
aaa
in
icebp
sbb
or
cs
ficompl
pop
loopne
and
fnstsw
cs
inc
pop
je
xor
dec
ja
sbb
xchg
mov
stc
ljmp
jp
inc
cs
cld
jne
pop
daa
xor
pop
push
sbb
xor
pop
lea
xchg
mov
push
out
loope
mov
mov
cmp
das
inc
lea
stos
add
mov
mov
pusha
dec
push
loop
push
loopne
andb
icebp
filds
aam
cmp
fsub
adc
jbe
pusha
adc
out
cmp
ss
mov
pop
test
cld
sub
jne
and
fs
add
es
pop
dec
pusha
xor
mov
ret
xchg
out
xor
push
shll
shl
fisttps
mov
jg
sbb
loope
fiaddl
mov
cmp
out
aam
adc
adc
pop
std
fldlg2
loope
cmc
cmp
mov
push
fs
xchg
and
dec
rcr
push
daa
jno
lds
imul
in
add
and
popf
or
ficomps
out
sub
cmp
js
jl
outsl
in
push
out
mov
inc
les
sbb
movsl
jne
push
xor
mov
sbb
push
xchg
add
scas
imul
push
pop
out
clc
jo
sbb
mov
jl
lods
pop
push
jns
mov
bound
pusha
adc
mov
movsb
cmpsl
jmp
gs
ret
sbb
fsubrs
lds
jo
jmp
mov
inc
jecxz
mov
inc
idivb
aam
movsb
jmp
sbb
adc
cwtl
sub
stos
mov
dec
pop
cmpsl
sarb
mov
jg
cmpsb
dec
rcrb
or
fs
mov
cld
mov
cmp
inc
and
mov
add
or
imul
inc
cmp
push
lods
pop
and
adc
mov
or
mov
xchg
xchg
fst
add
in
mov
inc
sub
loop
cmp
dec
xor
hlt
add
mov
jmp
ret
lret
mov
inc
fcompl
or
cwtl
nop
xchg
ret
pop
or
pop
xchg
inc
push
ss
xchg
adc
into
jne
int3
test
leave
insl
je
xchg
imul
or
push
pop
sar
or
adc
sbbb
and
dec
sub
pusha
or
lea
jmp
inc
add
notl
push
fists
mov
lcall
and
sbb
in
and
js
jg
outsl
mov
add
data16
lea
rol
mov
ljmp
test
mull
pop
cmp
pop
lds
scas
cmp
es
lods
mov
lcall
cmp
xor
xchg
inc
filds
jmp
and
pusha
ret
pop
bound
mov
int
cs
jl
adc
push
fsubl
sbb
int3
inc
sub
fidivs
inc
shlb
movsb
ss
or
fsin
loopne
pop
mov
or
in
jle
jb
in
std
mov
fistps
jp
repnz
int3
push
jns
outsl
and
fwait
movb
shrb
mov
fdivrl
outsl
sub
leave
rclb
cltd
sub
mov
decb
mov
mov
jmp
xchg
fbld
das
pop
jnp
sahf
jecxz
dec
jbe,pn
imul
sbb
jnp
in
int
sbb
mov
dec
sub
push
add
xchg
call
loope
mov
and
mov
jno
jl
push
sti
mov
cmp
sbb
sbb
xchg
pusha
push
xchg
mov
sbb
dec
aas
pusha
fdiv
je
mov
dec
and
pop
ret
push
inc
dec
pop
pop
mov
std
jns
xchg
fcmovne
jecxz
jecxz
popa
mov
xor
cmpsl
sub
pop
mov
out
add
scas
adc
push
mov
fists
sub
pop
test
mov
pushf
push
pop
std
push
stos
adc
inc
scas
aad
pop
cmc
xchg
push
loopne
mov
sti
aam
adc
pop
movsb
sbb
and
and
mov
iret
fsubs
pop
push
lret
inc
add
pusha
pushf
mov
bound
mov
testb
and
pop
add
ja
ljmp
mov
and
addr16
cmpsb
in
xor
mov
jo
in
inc
or
pop
push
xlat
stos
movsl
lods
xchg
repnz
pop
out
jecxz
lods
lea
loop
dec
or
add
adc
mov
outsb
mov
ja
sbbl
aad
pop
jne
dec
sub
inc
flds
jg
add
je
rolb
jp
sbb
add
test
lods
shr
add
stos
pop
insl
or
loopne
andl
mov
fldcw
mov
jmp
es
sbb
push
sub
adc
mov
rcl
mov
pop
cmp
mov
ljmp
and
pop
xchg
pop
loopne
mov
jmp
sbb
aad
sahf
ss
dec
xor
call
cmp
push
xor
mov
mov
sbb
jle
pop
and
mov
stos
in
aam
xchg
clc
sub
pop
sub
in
scas
loope
push
hlt
and
add
mov
repz
jbe
inc
push
jo
insl
dec
test
ss
push
pop
rcrl
mov
in
sub
dec
mov
mulb
cmp
or
imul
xchg
repnz
mov
push
mov
mov
mov
pop
inc
scas
aas
cltd
movsb
and
loope
je
mov
scas
or
jg
xor
fimuls
add
shll
or
jbe
sub
rorl
lea
sub
bound
xchg
mov
cs
adc
inc
and
insl
add
fnstenv
imul
psrld
cmpsb
in
out
mov
aas
add
dec
cmp
les
pushf
mov
fwait
push
imul
dec
les
iret
cmpsl
pop
sbb
test
push
out
sub
cli
lods
mov
and
pop
cmp
sbb
mov
xor
cwtl
and
push
mov
fdivr
int3
xchg
lret
sbb
fcompl
ret
or
pusha
ds
push
das
in
loope
push
movups
push
cwtl
sbb
adc
dec
and
loop
and
adc
lea
add
or
fistps
je
fwait
nop
out
lcall
rcll
cs
pushf
cmp
jo
push
out
xor
adc
pop
lock
dec
jge
and
imul
imul
loopne
or
cmp
and
xchg
xor
sub
enter
pop
lcall
sbb
adcl
xchg
mov
cmpsb
jl
jmp
call
adc
inc
sti
insb
out
popa
popa
shll
loopne
sub
ret
mov
jmp
inc
pusha
dec
aam
shrl
push
jmp
pop
jmp
insb
push
push
std
mov
inc
fisubl
ficomps
push
fwait
std
adc
call
lea
or
out
or
inc
je
daa
xchg
inc
and
push
or
dec
fadds
rorb
mov
sub
adc
cwtl
mov
cmovae
mov
popf
jne
cmp
es
or
add
ss
cltd
xor
ret
scas
mov
jg
mov
or
mov
jge
lea
adc
or
in
flds
lea
jne
loopne
arpl
imul
mov
pop
xor
fstpt
in
fidivrs
clc
mov
icebp
inc
lret
jp
cmc
test
fists
fsubrl
das
mov
idivl
inc
inc
push
jge
insl
and
sbb
fcmovnu
jb
or
mov
inc
fwait
nop
sti
sub
mov
xchg
fistpl
ffreep
test
xchg
lret
idivb
outsl
int
ficoml
jbe
call
adc
add
fcomps
pop
jb
jge
pop
push
add
pop
xor
cli
sub
in
push
jp
lret
cmp
in
add
jle
cvtpi2ps
je
jae
rorl
and
int3
in
or
cmpb
les
inc
lods
scas
inc
shlb
mov
divl
clc
jp
or
cld
add
pop
addr16
lret
aad
mov
dec
cmc
dec
and
enter
mov
call
or
dec
scas
fdivrl
xchg
mov
inc
mov
pop
push
push
movsb
sub
mov
jns
cmp
pop
push
sub
mov
cmpl
inc
negl
pop
xchg
fcom
mov
int3
jl
ret
out
lea
cmp
ljmp
das
xor
push
cmp
dec
mov
xorl
out
xchg
jns
adc
icebp
rclb
push
in
cmpsl
shlb
cs
xchg
dec
push
inc
aad
sub
pop
je
sub
add
movsb
cmpsb
xchg
sahf
lret
inc
leave
test
push
xorb
imul
and
push
lret
mov
repz
mov
fmul
int
push
repz
pop
dec
cmp
adc
test
adc
cmpsl
cmp
xor
clc
shr
push
xor
jae
lahf
push
push
movsl
add
das
lods
xor
sbb
cs
test
insb
lods
fidivrs
mov
xor
push
outsl
mov
or
cs
bound
dec
flds
mov
cmpsb
sub
ds
xchg
push
sbb
adc
sbb
inc
jno
mov
sahf
test
movsl
fwait
test
add
inc
mov
outsl
jae
std
repz
icebp
testb
jo
sbb
hlt
gs
ret
sub
das
push
xorl
and
fimuls
push
and
lods
stos
jo
push
add
pushf
popa
push
lea
mov
es
sbb
push
ret
add
sub
xchg
xor
out
mov
in
jbe
pop
sti
adc
lret
cmp
inc
inc
xor
mov
arpl
pop
addb
ret
fisubrl
xor
fdivrs
and
and
xchg
dec
push
adc
jo
lods
stos
push
jg
test
jecxz
mov
ror
rcl
stos
xor
mov
xchg
inc
lods
pusha
aam
sahf
jmp
xor
movsb
shl
or
or
or
lret
cmpl
xchg
cmp
insl
lea
imul
cmpsb
int
xor
lea
or
int3
cli
test
mov
sub
xor
repz
pop
rcll
in
push
or
xor
hlt
test
mov
xchg
enter
jno
loop
fnstcw
mov
fdivl
data16
sub
scas
icebp
in
out
push
mov
mov
or
jne
aaa
call
lds
jecxz
xor
or
jl
imul
mulb
daa
lret
mov
xor
push
xor
stos
mov
mov
add
or
ja
jno
in
jmp
sbb
repz
push
xor
xchg
inc
jnp
loopne
sub
nop
addr16
adc
mov
fnstcw
js
dec
stc
call
aad
idivb
cli
cmpsl
cmp
jge
sub
fwait
dec
add
insb
shrl
push
les
cmpsb
cmpsl
fcoms
inc
cmp
and
inc
jno
push
jns
orb
pop
push
icebp
iret
mov
mov
jp
rol
outsl
pop
xor
fmull
cs
mov
and
fchs
std
cmp
pop
dec
orl
jbe
clc
xchg
aas
lods
and
push
ja
and
xor
mov
adc
mov
jb
jle
inc
das
insl
xchg
xchg
cmc
sti
adc
minps
pop
les
popf
ljmp
jnp
jnp
popa
and
xor
jae
lahf
js
repnz
ja
inc
icebp
and
mov
jnp
int
adc
lods
les
jle
push
sti
or
dec
sti
pop
cmc
sbb
adc
out
repz
fistpll
repnz
add
or
mov
cli
rorb
or
js
adc
lods
js
mov
rolb
lock
push
sahf
sbbb
mov
fistpl
out
mov
pusha
movsb
cltd
dec
dec
lret
xor
aam
outsb
das
rcrl
xchg
icebp
adc
shlb
cmpsl
and
lcall
clc
sbb
mov
in
es
loopne
push
mov
cltd
cmp
ucomiss
sbb
arpl
jnp
andb
imull
add
mov
pop
jle
in
sub
cmpsb
push
sbb
loopne
movsb
testl
add
lds
sti
sub
mov
or
stc
jmp
push
push
xor
dec
dec
push
stc
push
cld
mov
cs
stc
cli
or
stc
push
stos
add
out
push
les
test
xor
jg
mov
ss
inc
pop
sti
xor
dec
mov
adc
dec
pop
sub
push
sti
pop
inc
arpl
push
push
push
test
jne
lahf
xor
or
or
pop
lret
inc
popa
or
movnti
dec
outsb
cmp
sub
and
dec
mov
idivl
ret
addr16
cmpsb
push
mov
mov
xlat
repnz
cmpsl
arpl
jmp
dec
or
mov
pop
arpl
jge
or
mov
dec
mov
inc
pop
jmp
cmc
inc
jmp
jno
jnp
jg
aas
ljmp
outsl
and
or
or
aad
and
add
icebp
test
and
lret
notl
aad
add
xlat
cmpsl
jns
cld
fdiv
loope
mov
mov
inc
jns
fwait
outsb
mov
imul
fwait
pop
rorl
or
les
fs
dec
jle
rcrb
mov
adc
xlat
test
xor
rorl
xchg
arpl
fbstp
cmc
cmpsl
mov
mov
dec
mov
xor
test
lock
sub
cmp
aad
jg
dec
or
scas
lods
pop
pop
ror
test
sbb
je
dec
inc
inc
xchg
xor
xor
mov
subl
add
inc
push
fdivs
mov
and
sub
aam
insb
xchg
enter
or
mov
scas
pop
aaa
loopne
repz
add
or
scas
data16
lea
mov
xchg
out
or
cltd
mov
ss
mov
clc
cltd
test
ljmp
xchg
xchg
jb
mov
inc
sub
lahf
rol
xchg
cmp
fwait
pop
xchg
inc
add
adc
fstpl
mov
hlt
addl
daa
cltd
push
pop
dec
sbb
mov
mov
jns
je
sbb
xchg
and
call
popa
pop
aam
adc
adc
jno
fs
ficoms
ror
sbb
mov
sbbb
lds
mov
fnstenv
testb
or
push
out
addb
fwait
mov
jecxz
dec
sbb
mov
mov
jo
out
and
push
fdivp
add
push
sbb
jl
imul
xor
push
xchg
mov
into
lret
pop
rol
leave
xchg
add
sub
aam
icebp
iret
mov
push
inc
ret
aam
sub
mov
mov
fdivl
scas
pop
mov
fidivl
cwtl
ja
jbe
jp
cs
inc
int3
movsl
fdivr
movsb
sahf
enter
push
sahf
ljmp
mov
and
adc
rcrb
xchg
sbb
jp
adc
mov
xchg
lock
shl
arpl
mov
into
pop
sub
mov
jne
jge
xor
jmp
push
push
cli
fsts
cltd
lods
pusha
shrb
add
call
fs
and
out
push
lods
dec
in
push
ret
hlt
add
jl
dec
inc
mov
lret
lahf
ret
ss
or
test
mov
das
sub
fwait
adc
sbb
out
dec
sub
enter
jge
cmpsl
pop
xchg
sub
mov
lret
sub
xchg
cmp
add
test
lods
loop
jne
lods
bound
imul
cmpsb
les
lret
pop
cmc
jo
in
aaa
xchg
jge
dec
xchg
das
jae
push
das
pop
popa
out
xchg
dec
sarb
mov
or
sbb
cld
gs
arpl
cmp
loop
in
fcoml
push
push
fstps
xlat
shlb
jb
xchg
dec
pop
mov
idiv
dec
xor
xchg
daa
int
xchg
xchg
idivb
arpl
hlt
cli
cmpsl
imulb
popa
dec
fidivrs
data16
jge
adc
cmp
cmpsl
mov
test
mov
sub
xlat
add
add
xchg
dec
sbb
xchg
outsl
xor
mov
addl
mov
ja
iret
mov
lcall
inc
pop
mul
mov
aad
sub
adc
sbb
jb
xor
dec
or
movl
in
test
outsb
call
js
push
or
mov
hlt
imul
fisubl
push
jl
cmp
lods
mov
pusha
ljmp
pop
imul
push
inc
mov
clc
mov
push
pop
push
sbb
jmp
jne
pop
pop
fisubs
cmp
mov
scas
jmp
mov
cmpsb
and
xor
mov
pop
or
mov
inc
inc
jb
test
rorb
mov
popa
adc
add
fnsave
mov
rorb
xchg
ljmp
xor
adc
jge
fucomp
addb
push
cmp
pop
sub
shll
adc
adc
and
aaa
mov
and
insl
and
gs
enter
sub
push
jns
out
and
aam
push
popa
mov
mov
cli
and
pop
jnp
dec
imul
xchg
shlb
sbb
and
inc
or
nop
ja
js
pop
test
mov
or
push
imul
jecxz
push
adc
mov
jg
push
mov
lock
dec
dec
xor
push
in
stos
mov
sbb
add
cmp
xchg
sub
ret
out
xor
jne
pop
add
iret
xor
inc
push
lock
mov
bound
sarl
out
dec
jae
xlat
xchg
fisttpl
add
and
frstor
pop
lret
shll
out
scas
std
shlb
mov
adc
cmp
lcall
js
sbb
xchg
pusha
cmp
push
inc
xor
sti
and
in
push
leave
in
xor
or
lods
and
repz
mov
push
imul
in
je
and
xchg
in
cs
jg
addr16
xor
push
xchg
push
dec
adc
adc
sar
xchg
loopew
cmc
and
xor
jnp
imul
loop
aas
fmulp
sbb
xchg
ds
stos
push
adc
mul
rorl
cmpsb
mov
fcompp
daa
pop
adcb
cld
std
jae
out
cmp
jb
out
mov
call
and
lock
dec
test
stc
fadds
cmpsl
cmpsb
test
into
and
sbb
jno
ss
scas
mov
fsub
pop
pop
hlt
mov
adcl
mov
inc
adc
cli
rcll
push
fucomip
sub
lods
test
lea
fisubs
test
test
aaa
xor
leave
inc
adc
and
pop
push
adc
add
lds
aam
dec
popa
sbb
inc
inc
shll
sbb
adc
cmc
push
mov
inc
inc
push
and
mov
sahf
and
push
rclb
fcomip
iret
stc
jno
inc
mov
movsb
inc
mov
mov
mov
mov
push
pushw
cmp
xor
sbb
dec
push
sbb
pop
xchg
mov
fisubl
scas
jle
sub
loop
mov
mov
fsqrt
inc
ljmp
scas
sbb
mov
fucomi
psubsb
push
fcmovnbe
vcmpps
outsl
rorb
dec
xchg
add
cwtl
sahf
cld
mov
xor
xchg
jne
jp
sub
out
and
in
add
orb
dec
mov
pop
add
ja
and
xor
shlb
cmp
add
xor
xor
bts
or
cmpsl
xchg
aad
mov
sbb
lea
jns
xchg
jo
outsl
push
ljmp
lcall
and
xor
neg
das
and
push
aas
pop
sbb
mov
push
dec
and
mov
out
test
mov
addb
add
daa
cli
xchg
test
jnp
lret
pop
test
in
jns
add
into
lret
fdiv
xor
jecxz
popa
jmp
push
inc
mov
clc
push
push
xchg
dec
movsb
jno
subl
sbb
ja
jnp
jp
adc
cs
lret
test
leave
mov
pop
js
lods
mov
lds
inc
popf
addb
adc
mov
adc
or
repz
inc
out
cmpsl
jo
jmp
in
fnstcw
cs
inc
inc
inc
out
daa
cmp
add
pop
and
xchg
cli
sbb
js
xor
iret
aaa
xor
xchg
mov
sahf
loope
mov
jb
push
dec
stos
div
ds
mov
rorb
mov
hlt
lcall
scas
jge
pop
jge
in
test
outsb
xchg
fsubrl
inc
jbe
rorb
fs
adc
or
push
mov
shll
enter
in
dec
xchg
mov
cmp
lods
inc
and
int
sbb
lock
aaa
cli
movsb
scas
push
jge
add
imul
add
out
pusha
jnp
int3
adc
sub
mov
loop
pusha
add
mov
adc
lcall
lods
push
bnd
dec
jl
pop
pop
dec
and
mov
mov
push
popf
jl
ljmp
das
ret
push
mov
lcall
pusha
jnp
mov
loop
sub
push
push
inc
inc
cli
cwtl
lret
in
gs
int3
sub
out
testb
loopne
xchg
mov
les
in
jo
fs
push
xlat
pop
out
filds
out
and
adc
adc
mov
dec
xor
leave
imul
sahf
xchg
mov
and
sti
xchg
lahf
xchg
pop
lods
ja
adc
cwtl
fistps
adc
or
insl
pop
leave
mov
cwtl
jns
mov
mov
test
dec
hlt
xor
stc
xchg
test
pushf
or
imul
in
adc
inc
xchg
push
cmp
lock
filds
insb
stos
popf
lods
push
out
pop
push
lret
cmpsb
repnz
jl
jmp
sbb
or
jnp
cwtl
js
imul
mov
jg
dec
mov
out
mov
rclb
pop
test
jle
pop
sbb
lea
dec
xchg
or
lcall
ret
je
inc
aas
push
rorb
nop
ret
test
push
xchg
arpl
sub
jle
stc
jl
push
mov
lds
pop
or
xchg
sub
into
push
fsubr
mov
iret
es
xlat
or
or
mov
jne
mov
push
sbb
push
jp
lds
push
or
idivb
push
sub
call
adc
out
stos
xor
arpl
outsb
pop
adc
leave
in
rolb
movsl
addl
lds
push
push
adc
rclb
in
xor
or
adc
push
adcl
nop
movsb
mov
fadd
ret
adc
dec
pop
cmp
arpl
enter
arpl
cld
shl
inc
xlat
fadd
outsl
fcomip
fwait
insb
ss
repz
pop
fdivl
sti
inc
sub
std
add
push
mov
mov
adc
sub
cmp
fwait
mov
test
int
in
in
jns
addl
jno
idiv
jnp
sbb
sti
lret
test
dec
cmp
and
jo
popf
ficomps
out
mov
mov
dec
jbe
push
ficoml
sbb
mov
dec
cmp
jg
clc
orl
pop
lods
repz
loopne
mov
test
or
xor
aam
test
push
dec
aas
dec
mov
sub
jno
insl
js
adc
js
fdiv
mov
dec
xor
imul
mov
fldenv
jp
lcall
dec
xchg
sbb
cmp
xchg
or
sub
pop
jo
daa
cmpsb
or
cld
inc
and
rclb
xor
pop
nop
pop
aam
mov
clc
xor
inc
jo
push
xor
test
jge
outsb
js
pop
push
mov
movsl
cmp
adc
jae
jbe
mov
fisubrl
pop
push
adc
xlat
mov
fists
das
mov
stos
jo
test
adc
lods
adc
insb
xor
mov
aas
leave
jno
push
sub
mov
cmp
fisttpl
push
bound
outsl
pextrw
dec
fs
ss
shl
sbb
adc
jnp
inc
aam
cwtl
loop
push
into
dec
movsl
pop
mov
sbb
xlat
lret
test
push
inc
pop
sahf
imul
out
jb
mov
pushf
out
inc
add
nop
cltd
popf
or
xor
xor
lods
adc
push
repnz
dec
mov
dec
dec
imul
or
mov
lds
xchg
push
pop
pop
mov
inc
les
aam
or
lahf
ljmp
push
cltd
ds
pusha
adc
inc
and
test
idivl
sub
push
jle
cmpsb
call
push
and
int
int
out
cmpsb
jo
mov
xor
xor
outsb
in
lret
xor
in
test
gs
sbb
or
stos
jmp
adc
jbe
jno
xlat
stc
loopne
cmpsl
imul
and
adc
arpl
xchg
cwtl
mov
push
mov
fidivrl
clc
loopne
xlat
sbb
stc
int
enter
in
mov
pop
js
adc
pop
int3
insb
dec
nop
pushf
add
jne
jae
nop
daa
jp
cmpb
rclb
inc
rcr
clc
test
mov
and
dec
fwait
neg
push
xchg
inc
pop
push
fldenv
clc
mov
pop
mov
or
dec
insl
daa
push
mov
and
push
popf
mov
std
nop
ret
pop
push
rcr
jnp
and
test
f2xm1
rcrb
mov
inc
cld
arpl
scas
push
pop
xorl
mov
jnp
mov
sbb
sub
in
lret
push
jnp
adc
inc
aam
xchg
ret
shr
push
xchg
inc
add
push
loop
enter
mov
fwait
cmp
lock
test
pop
subl
mov
jmp
sbb
rcl
mov
dec
mov
push
inc
jp
and
sbb
xor
ret
or
sub
mov
add
lea
in
xchg
xlat
lret
cmp
push
rol
pop
aaa
add
shll
cmp
popf
sub
mov
lret
les
xor
mov
testl
adc
jnp
and
add
movsl
dec
imul
inc
push
mov
test
popf
cmp
xchg
dec
lret
inc
dec
or
add
xchg
aaa
inc
in
rorb
sub
mov
movsl
jnp
pop
add
adc
jb
jp
cwtl
iret
inc
loop
lods
cwtl
divb
mov
push
mov
imul
int3
dec
and
outsb
call
push
pop
pop
imul
lods
call
cmp
das
push
int
sbb
mov
push
test
mov
and
inc
fidivl
cmp
xchg
insb
jle
mov
js
cmpsl
lock
stc
test
mov
mov
mov
lock
maskmovq
notl
imul
mov
push
dec
pop
inc
sub
in
push
aaa
insl
inc
xor
push
or
sbb
test
fucomp
pusha
xchg
aad
mov
mov
out
sub
push
icebp
insl
add
mov
cmpsl
imull
jg
cli
aaa
iret
fildl
ss
clc
sbb
and
loopne
loop
jnp
mov
push
jecxz
cmp
mov
stos
push
out
jns
pusha
xchg
adc
pop
push
xchg
dec
mov
mov
dec
pop
lea
and
in
outsb
xchg
push
pop
test
movsl
mov
out
mov
mov
cmp
notl
and
push
insb
inc
jle
push
sub
call
scas
adc
xchg
xchg
mov
sub
insl
jb
fsubl
je
mov
aas
push
leave
pop
pop
mov
dec
jae
sbb
int
outsl
pusha
rclb
pop
pushf
test
imul
jae
loope
and
cli
xchg
pop
cmp
push
mov
push
fs
mov
rcl
push
into
and
outsb
dec
pop
xlat
outsl
leave
data16
test
cs
fidivl
jno
cmp
imul
lea
sub
xchg
pop
lods
movsb
shl
sub
nop
sub
adc
inc
mov
dec
lcall
sbb
add
sahf
gs
jp
cmpsb
cmc
shll
sub
xchg
cmp
and
in
sbb
aad
cmp
and
xor
frstor
and
fucomp
or
daa
sbb
lcall
fcmovbe
xchg
and
rolb
xor
mov
jmp
adc
stc
out
push
scas
add
and
and
lret
addb
push
xor
jle
ret
cmp
in
xor
addb
movsb
cld
jnp
push
rolb
sti
push
daa
lahf
adc
pop
jns
push
pextrw
mov
sbb
xchg
in
cmpsb
add
or
js
stos
scas
stos
nop
push
sub
js
popf
fmull
adc
test
pop
pop
add
leave
mov
scas
sbb
xor
push
sub
sbb
mov
inc
jns
push
cmp
add
xchg
add
leave
les
cltd
rolb
cmpsl
hlt
mov
push
test
gs
in
insl
loop
inc
inc
mov
and
aam
or
cli
cs
aam
cmp
sbb
push
fidivl
rorb
mov
cs
iret
jge
and
out
jecxz
daa
mov
xor
mov
loope
push
mov
mov
frstor
dec
in
cmp
je
mov
les
loopne
sbb
ss
sub
jmp
add
jge
mov
cltd
std
std
loopne
pop
push
push
sub
ficoms
ja
fsubrl
jb
add
jecxz
push
shlb
cmp
mov
jmp
mov
mov
nop
pop
push
jo
adc
mov
jno
adc
roll
lcall
lahf
jb
pop
enter
dec
leave
lock
stos
das
mov
in
dec
inc
pushf
push
mov
es
sti
sbb
out
sub
lret
jg
cmp
pminub
jno
lahf
push
xchg
jnp
loop
and
push
jbe
fs
into
gs
adc
dec
lods
adc
jno
nop
jl
in
mov
xor
repz
icebp
push
loope
mov
dec
fdivp
lods
and
or
and
jae
aas
and
fisubrl
ljmp
cmc
out
sbb
pop
sub
sbb
jge
jge
cmc
lods
test
sbb
and
movsl
jmp
or
mov
sub
into
mov
adc
aad
or
fwait
ss
inc
dec
add
adc
icebp
cltd
sbb
daa
mov
rclb
inc
push
fwait
sub
jg
mov
pop
fwait
out
sahf
inc
pop
mov
arpl
int
push
lods
pop
sbbb
push
test
cmpsb
xchg
aam
lret
sub
or
stc
ret
xor
pusha
xor
mov
lcall
lea
lea
repnz
mov
cmp
movsl
cltd
adc
dec
cld
sbb
movsb
mov
insl
pop
jae
xchg
inc
cltd
sbb
mov
lret
adc
lods
push
out
pop
inc
in
jg
pop
inc
jb
dec
movsl
shlb
xor
ret
mov
mov
mov
inc
fstpt
xor
push
push
xor
mov
arpl
mov
jp
ss
pop
mov
cltd
inc
or
cmpsb
pop
in
pop
aaa
or
add
fstpt
cmp
mov
dec
and
sbb
xor
jp
lods
std
repz
lcallw
mov
outsb
jno
add
push
xchg
ljmp
in
mov
jle
test
push
shll
shrl
or
or
cmc
lahf
fcompl
sbb
ret
out
xchg
iret
in
inc
and
jecxz
dec
lahf
mov
mov
dec
lret
cmp
xorb
inc
ret
and
mov
xor
testl
pop
dec
dec
cmp
pop
testl
std
loopne
dec
lret
push
scas
adc
out
or
rclb
repnz
sub
in
shll
movsl
mov
xacquire
mov
aam
sub
pop
cmp
cmp
cs
lahf
es
inc
pop
shlb
adc
cmp
sub
jno
mov
loope
aas
mov
and
data16
negl
adc
out
cmpsb
jmp
pop
out
inc
xchg
popf
mov
xchg
rolb
test
in
bound
int3
jne
cmp
scas
loop
jbe
cmp
mov
cld
xorl
dec
xchg
mov
das
xchg
jecxz
out
shrb
bound
in
insl
xchg
mov
movsl
fcmove
lcall
dec
add
xchg
andb
in
inc
mov
cli
jge
out
cmp
sbb
cmp
inc
jne
sub
bnd
push
outsl
push
inc
imul
sub
fwait
nop
fdivrs
add
mov
cmpsb
and
cmp
fisubrl
mov
leave
xor
add
lock
jns
loopne
mov
mov
lea
test
dec
das
js
xchg
cmp
add
pop
mov
cmp
fcomp
xor
shlb
fistpl
mov
jo
pop
mov
mov
in
mov
pop
xor
rcrb
fistpl
cld
mov
out
xor
jle
insb
mov
mov
shr
shrb
jno
push
test
adc
jnp
mov
mov
xlat
xor
insb
cmp
decb
or
xor
sbb
ja
or
mov
pusha
clc
int
mov
test
mov
divb
stos
and
ds
in
data16
jp
loop
pop
xor
mov
add
or
out
mov
mov
out
arpl
pop
and
in
mov
fdivrs
int3
mov
xor
or
xchg
pop
xchg
jbe
mov
push
push
popf
addb
mov
fisubl
jne
fldt
insb
aas
add
ret
and
mov
adc
test
inc
daa
pop
out
or
jle
inc
scas
fwait
jns
dec
ljmp
rcll
mov
push
sub
fistps
cld
or
rclb
movsb
xchg
dec
movsb
jnp
mov
push
dec
dec
pop
in
repnz
jle
imul
in
rorl
out
mov
add
cmc
cli
mov
cmpsl
mov
out
adc
shll
jmp
mov
xor
daa
or
fwait
pop
inc
mov
jb
in
test
insb
or
lock
outsb
jns
inc
jne
cs
sub
call
rcll
ljmp
stos
inc
rclb
je
sub
mov
mov
pop
or
pop
scas
flds
fstpl
xor
xchg
xchg
dec
icebp
push
pop
mov
inc
outsb
adcl
ja
repnz
push
pop
lods
nop
pop
in
outsb
pop
enter
loop
cli
dec
enter
pop
or
imul
sub
cltd
scas
stc
add
rorb
in
imul
icebp
inc
or
addr16
and
jae
mov
andl
jle
mov
mov
add
jne
aad
pushf
je
jmp
mov
mov
scas
add
adc
aad
fisubrs
int3
jno
xchg
add
jns
repz
lcall
pop
xlat
jle
pop
enter
cli
push
jns
jo
imul
cmpsl
imul
add
mov
mov
add
cmp
jnp
imul
pop
push
jp
pop
jmp
fcoml
sub
jecxz
arpl
fbld
push
subl
fincstp
shll
out
sub
sbb
das
mov
push
push
push
notl
mov
sbb
add
out
sub
lret
clc
xor
sub
mov
jbe
out
xor
or
jnp
ret
lret
cmp
sub
pushl
inc
xor
movsb
mov
lods
jno
sarb
sbb
inc
pop
js
dec
push
sbb
scas
iret
dec
lea
and
pop
orl
loope
sbb
cmc
pop
adc
pop
repz
sbb
dec
xchg
ds
lods
aam
iret
int3
in
inc
pusha
lcall
fisubrs
clc
aad
dec
pop
divb
enter
repz
cmp
xchg
xorl
rcr
mov
shrb
aaa
sbb
ret
pop
xor
ret
pop
loope
clc
scas
stos
pop
sbb
out
arpl
xor
dec
pop
lret
cmp
mov
inc
or
imul
mov
sub
xchg
mov
fdivrs
jns
shrl
orb
loop
loopne
sbb
or
jb
inc
ljmp
ficoml
xchg
cmp
aaa
das
mov
push
mov
push
leave
add
mov
sub
sbb
lret
leave
add
lds
adc
jp
cld
mov
aad
lea
repnz
cmpsl
test
sbb
aas
adc
push
shlb
xchg
ficompl
pop
mov
inc
sahf
cs
int
outsl
jnp
xchg
shrl
xor
out
aas
push
pop
dec
push
pop
mov
orl
add
pop
test
inc
sbb
arpl
inc
dec
or
jbe
lds
mov
jnp
fiaddl
cli
mov
ja
int3
cmp
adc
js
xor
jno
mov
adcb
inc
sbb
mov
push
inc
pop
insb
lods
cmpsb
cltd
rcll
push
and
pop
jb
dec
mov
sub
xor
cmp
mov
xlat
ss
in
jnp
and
mov
dec
movsb
lcall
sarl
jbe
dec
dec
cmc
cmp
cmp
rol
rclb
lahf
icebp
adc
xchg
dec
jp
cmp
jne
pop
xor
inc
and
push
jecxz
sbb
mov
movsl
andb
inc
inc
mov
jle
in
mov
out
popf
mov
adc
xchg
lret
push
popf
and
ffreep
mov
push
ret
jbe
addl
and
gs
stos
cld
push
inc
adc
jnp
jecxz
stc
sbb
fwait
movsl
lods
sub
dec
js
cmp
ss
push
mov
cmp
dec
fnsave
dec
jp
inc
push
sbb
outsb
aaa
out
and
mov
imul
aad
test
xchg
lret
ret
xor
add
aad
ja
dec
popa
popa
lahf
jmp
test
insb
insl
repnz
mov
ffreep
and
jnp
or
jns
mov
std
cmp
cmpsl
dec
pop
pop
in
xchg
scas
and
insl
push
loop
dec
jl
sarb
jp
mov
pop
fimull
inc
mov
movsl
inc
pop
add
pop
cmp
push
dec
sarl
dec
jae
lcall
repz
mov
adc
and
pop
cmp
xchg
adc
add
cmp
inc
mov
cmp
or
push
push
shlb
add
adc
andl
mov
pushf
jns
mov
and
jae
mov
add
sbb
jge
push
ret
xchg
mov
add
dec
outsl
loopne
jo
loopne
add
es
adc
sub
aad
ret
or
imul
fwait
pop
jg
scas
imul
xchg
pop
sub
dec
mov
imul
rcrb
jno
jae
movsb
inc
das
out
stos
xchg
insl
clc
mov
shrd
std
sbb
and
scas
scas
xchg
cmpsb
sbb
jmp
ss
pop
sub
fistps
xor
mov
xchg
shl
imul
pop
cmc
mov
inc
push
pop
je
stc
or
xor
rcpps
aaa
xchg
into
dec
loop
push
sbb
xorl
pop
mov
xor
mov
aas
inc
ljmp
or
fistps
adc
in
scas
fsubl
adc
sbb
jne
lret
out
pushf
test
pop
test
loop
mov
xor
pop
clc
roll
cld
cmc
cmovne
scas
aad
xchg
sub
stos
push
xchg
or
sub
daa
push
pop
and
ja
mov
sub
push
xchg
inc
shll
fcoml
cmp
cli
bswap
mov
mov
dec
jg
addr16
push
out
daa
sbb
pop
hlt
lea
loopne
add
xchg
add
dec
and
imul
xchg
outsb
leave
adc
mov
mov
mov
lea
and
or
pop
stos
mov
xchg
xorl
outsb
andw
fidivl
mov
inc
out
nop
cmp
fldl
push
movsl
loope
cmpsb
icebp
mov
jno
add
lret
pop
push
adc
cs
faddp
pusha
cwtl
jo
std
dec
jecxz
add
xor
mov
inc
clc
xchg
ljmp
lret
mov
sbb
cmp
pop
std
les
lret
push
mov
xchg
adc
mov
add
inc
test
xor
mov
mov
pop
cwtl
cld
cld
mov
in
cmp
sub
cmc
shlb
pop
inc
dec
cmpsb
inc
ja
or
mov
mov
test
mov
mov
cltd
test
in
mov
in
lods
in
orb
mov
mov
lds
rcll
in
outsb
mov
sbb
mov
sub
gs
mov
inc
les
dec
sub
mov
inc
arpl
stc
call
and
inc
mov
test
pop
out
sarb
cwtl
pushf
ficoms
or
les
loop
rcrl
push
pop
aas
dec
xor
addb
cltd
cs
mov
or
leave
or
jmp
sbb
out
push
mov
pop
cltd
jns
movsb
aaa
cmp
sbb
push
neg
mov
test
iret
lds
xor
out
jmp
sub
pop
sti
xchg
rolb
cmp
pushf
pop
or
dec
loop
inc
shrb
ficompl
ret
push
cmpsb
out
std
dec
or
xor
rep
xor
mov
movsb
jb
xor
ljmp
adc
mov
add
push
or
mov
js
sti
xor
aad
xchg
inc
hlt
in
aad
sub
cmp
inc
clc
jge
fisttpll
add
idivl
mov
xor
inc
dec
fxam
and
xchg
xchg
adc
jmp
nop
inc
sbb
add
test
rcll
jbe
repz
mov
enter
daa
pop
stos
push
xor
sbb
mov
gs
data16
aaa
nop
shll
and
pop
cmpsb
loope
jno
push
inc
sbb
test
cmpsb
xor
ficoms
mov
or
mov
pop
add
adc
jne
mov
popf
jge
adc
repnz
shlb
lea
mov
cli
push
xchg
pop
sahf
rcll
aas
mov
out
xchg
inc
fwait
bound
pop
icebp
clc
leave
enter
push
movsb
jge
pushf
in
jno
xchg
imul
add
hlt
pop
push
icebp
lcall
out
xor
dec
pop
add
int
xchg
mov
jo
pop
ljmp
and
bound
ret
loopne
rcr
test
nop
add
sub
pop
mov
push
xchg
subl
cmc
adc
jae
in
adcb
bsf
enter
adc
into
mov
rcll
fstpl
mov
cmpsl
stc
xor
pop
mov
aas
push
cmp
repz
push
xchg
and
incb
adc
dec
xchg
shrb
push
repnz
sub
pop
push
cmp
cli
out
clc
pop
push
mov
pop
aaa
ret
incl
je
jecxz
pop
shlb
dec
cli
xchg
out
and
fwait
rorb
mov
out
enter
inc
pusha
rcr
inc
test
adc
jmp
scas
sub
scas
scas
sti
jecxz
out
ret
pop
mov
rclb
das
or
dec
in
fcompl
xorb
or
or
aas
mov
xchg
ror
sbb
loope
mov
or
std
pusha
add
hlt
mov
dec
packssdw
cmp
jae
mov
or
xchg
icebp
fbld
loop
gs
sbb
sbb
je
jle
cmp
add
aas
push
push
xchg
je
cs
add
or
adc
lcall
jmp
scas
cmp
push
mov
movsb
rep
mov
aad
cmp
pop
jne
sub
cmp
std
loope
lea
stos
lods
gs
add
in
sbbb
xchg
gs
push
inc
and
popf
ja
js
aaa
pop
out
or
inc
mov
lock
ds
and
dec
int
cmpsl
mov
xchg
inc
add
aad
into
insl
fnstcw
inc
rorl
insb
and
push
mov
or
jne
mov
xor
test
lods
das
sbb
loopne
inc
xchg
aas
insb
push
cmc
sahf
sbbb
jo
pop
mov
mulb
adc
sub
pop
out
xor
xchg
push
into
cmp
and
xor
icebp
push
mov
movsb
mov
jp
aas
dec
out
test
sbb
jmp
arpl
pop
push
shrb
test
adc
insl
xor
add
in
inc
mov
fsubrl
lock
or
mov
lahf
aad
xor
lahf
aad
cltd
mov
sahf
pop
sub
jno
sbb
dec
into
push
mov
ficoms
or
aad
icebp
sub
btr
mov
imul
cmpsl
push
mov
fldt
in
aad
cmp
push
mov
and
ret
add
in
pop
cmp
insb
aad
push
loope
out
adc
int
push
push
mov
mov
add
fisubrl
in
adc
imul
ret
inc
ror
fisttpll
test
mov
adc
xchg
test
pop
sbb
daa
in
push
or
cmp
mov
jbe
mov
mov
jl
scas
notl
lods
xchg
xchg
mov
dec
or
ret
and
cmp
mov
push
cmpsl
sub
data16
movsb
push
in
cmp
xlat
pop
mov
lret
dec
aam
addb
test
movsb
ss
in
cmp
add
add
pop
stc
mov
ljmp
loope
hlt
and
aaa
xor
push
inc
lret
cld
pop
push
mov
mov
inc
add
shr
inc
inc
add
adc
mov
in
data16
xchg
fwait
mov
dec
push
mov
dec
push
mov
push
mov
push
cs
pusha
cltd
stc
adc
mov
mov
stos
dec
popa
push
mov
sub
outsb
add
sbb
testl
pop
pop
jae
in
scas
lock
add
fdivrs
sub
bound
test
out
inc
sub
sub
das
jb
in
test
push
push
sbb
push
xchg
mov
mov
fdiv
add
sub
sbb
in
cltd
jae
and
push
arpl
add
dec
bound
mov
sub
cmp
stc
push
je
hlt
jae
cmpb
ret
ret
xchg
out
mov
mov
jbe
dec
into
xchg
leave
subps
inc
lea
sbb
mov
jno
cld
and
push
call
cmp
cmp
jge
imul
arpl
pop
cmp
movb
movsb
dec
jno
aas
dec
rorb
iret
adc
cmpsb
push
cmp
pop
sub
leave
cmpsb
mov
cmpsl
cmpsl
addb
aas
imul
loope
outsb
outsl
fsubr
roll
popa
cmp
sti
add
popa
mov
pop
and
adc
or
mov
fwait
sbb
dec
cwtl
stos
les
jp
je
jo
cmp
mov
push
jg
cltd
notb
jne
icebp
les
sub
inc
xchg
lret
xor
ret
or
movsb
mov
ret
cmp
test
lret
inc
data16
out
push
mov
sub
adc
xor
popf
pop
fchs
fwait
les
cltd
fwait
pop
out
cwtl
mov
pop
mov
push
xchg
call
outsl
xchg
insl
jae
xchg
imul
xchg
pushl
loope
outsb
insl
push
xchg
mov
ror
les
gs
lods
mov
push
xor
jns
cmp
into
dec
push
dec
arpl
push
mov
jae
sbb
mov
adc
fildl
push
jns
rclb
xchg
sbb
mov
and
push
pop
and
fisttpll
dec
cli
xchg
sbb
stos
mov
fldt
lret
aad
outsb
pop
mull
cmp
inc
dec
mov
mov
iret
daa
inc
clc
mov
bound
inc
jmp
inc
mov
test
fcmove
and
sub
add
mov
jnp
xchg
cs
es
cmpsl
shl
rol
loope
mov
dec
dec
jecxz
cli
shl
cmp
or
jl
push
div
mov
jbe
enter
andb
add
adc
sahf
mov
fs
out
or
xchg
xchg
mov
insl
mov
pushf
and
cli
and
cmp
loopne
rorl
repz
adc
cmp
cmp
fbstp
jg
cmp
aas
xchg
outsb
mov
lds
subb
xor
es
dec
mov
cmp
xor
inc
cwtl
jecxz
sub
inc
xor
mov
movb
loop
push
ss
in
or
sarb
in
dec
and
les
test
sahf
dec
mov
sahf
cld
dec
fdivrs
dec
sbb
stos
cmc
fidivrs
das
leave
aam
stos
adc
cmp
adc
fstpt
out
test
ror
pop
jae
inc
fildl
xchg
mov
sub
ss
dec
push
add
xlat
movl
sti
fsub
inc
shrb
out
or
mov
repz
xchg
and
fdivrl
in
xchg
rcrl
lods
push
cltd
scas
ret
pop
mov
out
test
mov
roll
cmp
jge
clc
push
mov
push
inc
fdivp
jmp
adc
or
jns
je
dec
sub
sub
sub
dec
imull
push
push
inc
push
and
or
push
pop
je
test
sub
and
sbb
aad
mov
stos
adc
push
inc
fcmovb
aad
loopne
into
mov
dec
dec
dec
ja
stos
idivb
inc
pushw
mov
or
jno
je
mov
or
mov
sbb
cmc
insb
inc
or
push
sarb
mov
dec
mov
inc
push
xchg
push
mov
push
lds
icebp
add
out
arpl
fldcw
jns
insl
mov
movsb
mov
test
lcall
inc
lea
add
push
pop
scas
xchg
sub
gs
cmp
mov
inc
sarl
jo
fsubl
push
mov
xor
cmpsb
aas
or
and
stos
xchg
sub
and
gs
jecxz
jl
outsb
test
loope
lcall
popa
sbb
scas
ss
pop
mov
mov
in
leave
sarb
rcrl
add
cmp
or
clc
jg
pop
or
mov
pop
fdivr
je
int
and
hlt
push
fs
jmp
mov
das
pop
aam
icebp
dec
cmc
cmp
popa
fs
cwtl
repnz
xchg
negb
lods
xchg
jnp
out
mov
lahf
fidivs
fisttps
or
adc
mov
push
xchg
adc
mov
push
xchg
sub
add
sbb
xor
aas
fdivr
pop
push
int
xlat
add
test
pop
and
lret
jecxz
jne
call
xchg
fistpll
data16
lahf
and
and
pop
mov
sbbb
mov
mov
adcl
xor
jo
sbb
inc
push
xor
cmp
push
and
and
movsl
cmc
fdivrs
push
mov
or
iret
out
pop
nop
push
in
movsl
clc
scas
nop
adc
addr16
int
xchg
out
adc
cmp
shll
cmp
pop
adc
add
fidivrs
cmpsb
cmp
and
jl
dec
nop
lods
je
ss
mov
clc
fimull
jnp
adc
ret
sbb
testl
and
lret
mov
jle
scas
mov
outsl
add
insb
in
test
nop
out
mov
das
mov
icebp
lock
mov
add
push
jns
add
pushf
mov
mov
dec
std
push
and
rcrl
or
cmp
pop
stos
pop
dec
testb
into
ss
movsb
clc
loop
xor
lock
mov
or
mov
ficompl
scas
scas
fwait
sub
iret
dec
pop
dec
adc
mov
xchg
dec
inc
add
imul
lret
pop
mov
and
loopne
mov
xor
jmp
and
pop
inc
sub
pop
sbb
idiv
iret
in
xchg
cwtl
fldl
and
insb
fadd
hlt
jmp
xor
inc
dec
insb
ficomps
xchg
lret
ret
jb
and
mov
inc
enter
mov
movsb
cmp
dec
sahf
dec
xchg
int3
and
xchg
mov
push
mov
shl
xchg
cs
jns
lods
loope
addl
and
lods
scas
pop
mov
push
lods
loopne
cs
inc
dec
add
enter
out
push
push
in
repnz
ret
repz
rcr
mov
or
xchg
dec
pusha
out
fwait
int
inc
loop
jp
jmp
mov
cmp
out
xor
cmp
pop
inc
rorl
movsb
push
adc
mov
inc
xor
inc
jb,pt
lds
pop
leave
nop
dec
scas
pop
in
add
sbb
fsts
mov
shl
fidivs
xchg
xor
js
xor
or
sub
insl
pop
aam
inc
or
inc
pop
push
test
adc
ss
insb
mov
sarb
and
repz
les
enter
mov
ds
and
mov
movsb
movsl
es
lds
hlt
aas
push
mov
gs
jo
push
push
cmp
into
jg
jae
out
push
sub
jle
andl
ret
xchg
mov
push
pushf
shr
outsl
dec
dec
or
sbb
jo
jl
bound
sarl
sbb
xor
dec
insb
adcb
loop
icebp
sub
repnz
gs
out
test
jb
popf
icebp
ds
int3
xor
ret
mov
js,pt
shr
cvtdq2ps
and
insb
xor
cmp
arpl
pop
data16
sub
outsb
mov
shrl
cmc
out
fsubs
lcall
pop
and
adc
ss
in
sub
jns
sbb
mov
pop
jo
outsb
inc
rclb
test
or
in
shrl
orb
inc
in
pushf
or
mov
gs
mov
mov
lahf
push
aam
cmpsl
mov
pop
insl
cmp
fmull
or
lret
sub
sbb
cmc
pop
mull
jno
mov
jle
cmp
xchg
dec
jb
fiadds
push
fcomip
fs
or
icebp
lcall
jmp
in
dec
dec
mov
fs
rolb
mov
lea
mov
sbb
icebp
add
mov
xor
cld
cld
popa
jbe
loop
sub
fsubrs
imul
dec
hlt
adc
mov
mov
mov
xchg
call
fiaddl
insl
idiv
fcoms
aad
xor
rclb
adc
fs
imul
pop
dec
jne
push
cmp
ja
inc
lock
cmpsl
sub
or
jnp
xor
xor
mov
and
push
mov
iret
inc
mov
fstpl
sbb
popa
movsl
dec
xchg
test
movsb
movsb
orb
xor
outsb
iret
test
roll
push
addr16
xchg
xor
inc
jae
and
call
inc
outsl
dec
xchg
xchg
sbb
popa
imul
adcb
jns
dec
dec
or
mov
pop
lock
leave
adc
sub
mov
dec
lcall
enter
scas
and
call
jo
nop
push
adc
dec
mov
insl
adc
pop
outsl
and
xchg
sahf
xorb
pusha
aas
pop
insb
sbb
aaa
mov
cmpsb
int
push
fidivrs
cmpsb
insb
incb
jae
mov
mov
hlt
sti
jno
jmp
cs
sti
push
mov
or
notl
pop
push
in
js
fidivl
es
pusha
and
mov
sti
loopne
add
loop
mov
inc
add
xor
push
fldenv
cltd
inc
fidivrl
jp
adc
decb
mov
mov
jmp
cmp
cwtl
dec
test
cs
mov
dec
imul
das
sti
jnp
int3
pop
stos
push
call
arpl
adc
hlt
sbb
fistps
and
dec
sub
mov
movsl
cs
sbb
jmp
xchg
loopne
rcrb
push
add
adc
aaa
and
jp
call
push
pusha
inc
cmpsb
xchg
clc
mov
into
arpl
out
jmp
and
hlt
mov
or
jne
imul
jg
jmp
pop
daa
or
lods
shlb
xor
and
mov
pop
fsts
sbb
fildll
fld
mov
jno
mov
cmp
jecxz
add
and
rorl
cld
scas
call
xor
clc
das
fld
lods
repnz
and
sti
jne
push
in
ss
adc
adcb
icebp
es
cmp
std
out
mov
adc
dec
push
cmc
adc
add
test
cmp
inc
fisubrl
mov
stos
jne
fmul
jl
xchg
loopne
inc
movsl
fstps
mov
pop
in
inc
push
push
call
pop
negb
pop
adc
scas
push
clc
or
nop
out
cmpsb
mov
or
and
sub
aad
inc
test
sbb
xor
outsb
push
test
out
mov
pop
repz
insb
jns
repnz
xchg
cmc
test
ds
stc
and
xlat
stos
push
in
jg
mov
fwait
and
jmp
xor
pop
inc
xchg
xlat
pushf
jmp
scas
test
enter
mov
out
xchg
insb
loopne
push
inc
sub
and
stos
ds
and
in
mov
adc
fsubs
jmp
cmpsb
push
cld
dec
dec
mov
push
pop
mov
rorl
add
jg
cld
mov
pop
insb
mov
mov
insb
xchg
adc
std
push
sub
add
aaa
inc
lret
pusha
lods
rcl
jnp
jmp
int
xlat
dec
fs
or
mov
push
inc
outsl
test
cwtl
in
cmp
test
push
mov
repnz
cmpsb
sub
or
xchg
aas
cmp
or
lock
xchg
mov
adc
cmp
cmp
call
or
pop
in
push
xor
decl
sub
pushf
idiv
test
pop
call
xchg
fsubrs
int
jle
xchg
and
mov
mov
fidivl
mov
negb
mov
addl
es
pusha
sub
vpaddsw
mov
inc
imul
xorl
into
cmp
adc
movsl
push
adc
lret
push
adcb
cmp
xchg
aaa
pop
jp
xchg
out
fdivl
xor
pop
dec
adc
mov
adc
dec
fisubl
sub
jb
push
sbb
jmp
in
pop
loopne
cld
ds
dec
sbb
mov
out
cmp
rorb
adc
cmc
scas
lock
jmp
rol
insl
bound
mov
and
jmp
sahf
mov
cs
push
shld
in
lahf
add
out
in
sub
mov
xor
jns
mov
inc
cltd
lods
cmpsb
adc
adc
pop
jg
sbb
pop
repnz
push
cmp
xchg
cmp
push
jle
push
cmpsb
xlat
cmc
pop
test
jg
mov
xchg
cmc
xchg
das
push
cmpsb
cmpl
push
push
insl
test
jae
insl
inc
out
mov
mov
lods
xor
pop
call
sub
sub
or
in
jmp
lcall
lret
outsl
orl
xchg
inc
dec
leave
lahf
jl
in
or
jmp
fwait
aas
out
das
lods
jno
mov
bound
stos
xchg
cmp
push
mov
incl
sbb
jo
and
xor
mov
arpl
cmp
mov
in
loope
push
cmc
addr16
xorb
lds
pop
pop
std
lock
xchg
cmp
aam
pop
stc
test
hlt
lods
mov
jb
bound
shrl
mov
push
mov
push
mov
jp
shll
jae
cmp
xor
outsb
cltd
outsb
pop
das
add
sub
in
mov
adc
dec
push
sub
mov
mov
add
cli
push
push
test
mov
cmp
in
sub
js
mov
dec
repz
dec
push
mov
jg
mov
nop
dec
push
mov
inc
sub
sbb
int
cmp
out
jo
inc
xchg
xchg
lods
mov
movsb
imulb
add
jnp
jns
lods
push
out
fidivs
shll
ret
lea
jmp
mov
push
fists
jnp
fcom
fdivrp
sub
cmp
outsb
loopne
and
arpl
or
xchg
pop
ds
and
mov
jp
or
lea
xorb
arpl
xchg
sbb
cmp
xor
jbe
jno
pop
fsubrl
add
out
movsb
or
arpl
or
sahf
add
stos
out
cli
sub
outsb
sahf
cmpsl
lahf
mov
call
add
mov
cmpsl
jle
iret
out
mov
mov
cmp
xchg
sbb
fimuls
shl
lods
cmpsl
and
loop
and
idivb
dec
mov
rol
ljmp
inc
xchg
dec
arpl
pop
sbb
sbb
popa
jnp
insl
ret
mov
es
and
sbb
lds
adc
mov
dec
ds
jno
sub
scas
rcll
dec
dec
dec
lahf
js
sub
inc
cmpsb
jmp
cmp
mov
ljmp
loopne
jnp
test
pusha
sar
xchg
or
fists
shll
std
dec
fstp
aam
sub
iret
push
mov
mov
imul
inc
pop
cld
or
outsb
inc
sbb
sub
call
stc
sbb
xchg
les
cld
mov
ja
lahf
cmpb
imul
sub
xor
dec
sub
inc
dec
ret
push
imul
ds
js
cwtl
xorl
cltd
dec
in
cmp
fcomip
loop
sbb
pop
shlb
xorb
xor
sbb
faddl
sbb
adcb
push
add
and
or
pushf
adc
or
movsb
das
test
inc
pop
shl
adc
xlat
add
jp
inc
jle
ret
sub
pop
rclb
das
insb
mov
mov
test
imul
loopne
jne
pop
inc
in
inc
mov
outsb
in
pop
jge
push
cld
add
hlt
cmp
mov
movsl
lret
add
stos
arpl
inc
int
cmpsl
push
jmpw
stc
jp
insl
sbb
movsl
dec
adc
xchg
into
add
shr
mov
stos
xor
inc
mov
repz
cmpsl
push
jge
dec
sub
adc
dec
movsb
pop
shrl
mov
lahf
mov
and
xor
jmp
cmpb
sbb
test
inc
divb
pop
aas
in
dec
and
xchg
xchg
incb
cmp
xchg
movsl
mov
cmpsl
cli
cld
bound
jmp
xor
or
addr16
shrl
jno
mov
xchg
out
jle
in
push
mov
push
mov
sti
add
push
cs
pop
jno
dec
aad
lret
xchg
inc
push
jl
adc
movsb
ljmp
cmpb
mov
dec
add
mov
pusha
fisttps
lock
jmp
pop
lock
gs
js
push
dec
cmp
xchg
inc
inc
rcll
mov
das
pop
fmul
enter
loop
mov
jb
ret
pop
inc
cmp
pop
loope
sbbb
clc
mov
fiadds
xchg
daa
mov
lahf
cld
mov
outsl
xchg
icebp
cmc
inc
in
inc
arpl
in
repz
ret
adc
adc
cmp
es
adc
movsl
pop
popf
and
xor
push
inc
cmc
scas
xchg
sbb
push
jge
dec
es
pusha
mov
test
mov
pop
lods
sbb
mulb
testl
xchg
add
fmull
std
inc
mov
add
pminub
sahf
into
lret
ds
lcall
xchg
cmpsl
das
lcall
faddl
add
or
jne
push
add
dec
add
and
clc
js
push
pop
test
push
enter
cltd
cmc
mov
cli
cmp
mov
cmp
or
je
les
mov
je
add
iret
add
xor
daa
fildll
xchg
jge
push
lret
fistpl
mov
sti
dec
cwtl
in
sbb
cmp
subb
dec
shlb
fildll
outsb
shlb
jbe
cmpsb
jae
mov
lods
mov
sub
xchg
or
in
cwtl
addr16
jnp
cmp
lahf
dec
jno
xchg
in
xchg
pop
les
addr16
xor
popa
mov
pop
out
and
repnz
sub
pop
lds
xchg
mov
dec
test
mov
repz
jp
cs
sbb
or
xor
mov
xorl
inc
xor
push
fsubp
and
add
stos
sar
jno
cmc
add
pop
test
adc
outsl
nop
xchg
scas
cmc
jbe
sbb
lcall
pop
jns
sbb
stc
sbb
hlt
sub
out
jmp
cld
mov
push
ja
mov
shll
insl
hlt
ja
and
jle
xor
mov
insb
out
fmuls
cmpsb
push
bound
jb
daa
inc
jae
or
stos
enter
movsl
je
aaa
fisubrs
fmuls
sbb
shlb
push
cld
popf
mov
loope
enter
call
test
mov
and
sub
mov
cmp
mov
btc
sbb
mov
add
inc
xchg
imul
mov
push
cltd
sar
mov
int3
mov
lret
add
mov
mov
insb
push
xchg
dec
dec
in
push
sub
stc
mov
pop
in
pop
or
call
adc
dec
aas
ja
or
pop
insl
cmpsb
and
jl
cmp
out
subl
test
push
pop
aam
scas
enter
and
pop
stc
mov
fbstp
sub
mov
into
int3
pusha
lea
and
and
mov
adc
mov
xor
dec
stos
xchg
daa
xor
insb
push
mov
in
adc
mov
aad
mov
bound
and
stos
and
and
div
mov
fnsave
cmp
cmpsb
xor
stos
pop
push
in
stos
push
inc
movsb
out
fstps
push
add
mov
sbb
rclb
xor
pop
push
mov
mov
or
popa
inc
outsl
outsl
test
xor
sub
mov
insl
js
cltd
aas
int
sub
cmp
int
out
adc
andl
inc
das
aad
mov
pop
cltd
out
dec
and
mov
out
pop
xor
inc
mov
insb
sbb
xchg
sub
sbb
xchg
inc
push
daa
ds
xchg
in
ret
push
mov
popf
jno
xchg
cs
out
dec
test
xchg
ds
xor
add
in
mov
mov
pushf
das
xchg
mov
jle
and
ss
add
dec
jo
jnp
pop
popf
jg
and
clc
pop
push
fisubrl
sbb
lock
ds
sub
cmp
dec
in
sub
into
push
add
mov
and
mov
add
lret
insl
insb
mov
dec
adc
insl
movsl
nop
ljmp
sub
das
mov
sbb
mov
jmp
subl
frstor
adcl
fwait
in
pop
mov
sub
jno
dec
push
jnp
lods
mov
nop
pop
setnp
xor
cld
jno
movsb
push
fld
fbstp
pop
arpl
sbb
push
xchg
jae
mov
sti
mov
push
lods
mov
pop
adc
xor
mov
adc
mov
in
fbstp
stos
andb
or
sbb
xor
push
pop
lea
pop
xchg
xchg
mov
cmp
push
mov
adc
out
and
into
push
cmpsl
inc
jle
adc
dec
fdivp
jge
xchg
jg
jae
outsb
sbb
mov
dec
jmp
mov
inc
into
popf
mov
push
mov
repnz
gs
sarb
jge
and
data16
sub
or
mov
cld
push
xchg
shrb
in
loop
cmp
fnstenv
test
inc
sbb
mov
adc
mov
js
sbb
repnz
lods
sbb
test
adc
push
leave
std
jecxz
outsb
jne
mov
mov
popa
movsb
mov
loopne
call
jne
imul
mov
in
fs
xlat
inc
cwtl
imul
pop
mov
mov
outsb
xchg
test
not
arpl
mov
lds
push
mov
fsubrl
loop
push
rorb
mov
rcrb
inc
sbb
out
jbe
jmp
cmpsl
pop
repnz
inc
xchg
push
mov
push
lea
push
adc
and
shlb
cmp
jne
mov
lahf
daa
dec
lods
call
and
addr16
ret
sub
bound
push
orb
push
cmp
xchg
mov
imul
or
arpl
push
push
adc
dec
mov
outsl
gs
unpcklps
ss
fidivrs
pop
cmpsb
and
mov
xchg
ret
fidivs
shl
aaa
xchg
xchg
add
jns
or
inc
jb
or
je
and
mov
push
lods
mov
stos
cltd
lea
clc
addr16
xlat
sub
scas
je
lock
fimull
inc
cmpsl
xchg
adc
lods
ds
sub
sbb
sbb
mov
andb
fiaddl
xor
lret
data16
mov
xchg
mov
loop
andb
sub
mov
pop
fwait
daa
cmp
outsl
je
sub
dec
in
mov
xchg
sbb
jge
addb
mov
mov
loopne
dec
adc
cmpsl
jns
mov
stc
inc
pop
jno
or
mov
xchg
xchg
pop
sbb
mov
jp
fisttpl
xchg
xchg
push
jnp
clc
in
bound
leave
cwtl
fadds
jp
sbb
xchg
cmp
je
xchg
testb
out
or
inc
fiaddl
pusha
xor
out
pop
mov
not
jne
in
sbb
push
insb
push
popf
push
fistpll
fs
push
das
js
mov
leave
cmp
subl
push
mov
jo
iret
xor
jl
mov
inc
out
and
test
cmp
adc
sahf
mov
jecxz
sub
call
in
sub
jmp
sub
mov
push
add
nop
enter
icebp
icebp
stc
stos
leave
jle
mov
test
mov
sbb
mov
xor
in
ja
jnp
xor
insb
add
subps
ljmp
sbb
stc
jg
aas
jl
xlat
sub
jg
cmovno
and
push
inc
lret
pop
inc
lea
das
mov
iret
adc
int3
lret
imul
daa
lds
popa
insb
jo
mov
jns
in
inc
and
sub
lds
ja
dec
imul
insl
leave
rclb
mov
push
xor
xchg
jno
scas
cwtl
cld
mov
pop
das
xorb
clc
andl
test
mov
mov
and
fwait
add
mov
lds
aaa
shr
pop
mov
push
dec
test
push
mov
shlb
cmc
jmp
outsl
or
and
cmp
adc
clc
shll
lcall
cmp
inc
cmp
jecxz
xor
mov
inc
in
mov
daa
into
jp
int3
xchg
popa
aam
je
rcrb
mov
xchg
dec
or
inc
ret
hlt
fists
xlat
outsl
pop
pop
jbe
add
mov
jb
inc
push
xor
mov
xchg
sub
scas
sub
mov
and
in
lret
imul
jno
loope
rolb
leave
dec
jle
adc
sub
xchg
cmp
jne
or
movsl
outsl
in
jmp
in
aaa
and
inc
ds
and
imulb
mov
or
mov
ds
or
ss
mov
sbb
cmp
sub
mov
clc
pop
xor
fldcw
cmp
repnz
scas
mov
lret
ja
xchg
fimuls
and
jo
mov
lret
xor
xor
push
jp
leave
pop
test
mov
mov
sub
push
push
jae
push
jge
pop
push
into
jmp
lcall
shlb
cld
lret
ret
loop
xor
into
jl
jo
scas
sbb
fwait
push
stc
pop
jg
push
xchg
pushf
sub
pop
jno
mov
xor
dec
dec
hlt
stos
sbb
rcrl
and
bound
lods
pop
sub
add
jnp
sub
dec
je
cmpsb
push
fcoml
pusha
mov
jns
das
pop
sub
aad
mov
fldcw
jno
pop
dec
fcoms
loopne
push
fucomi
or
ret
pop
clc
movsl
pop
lcall
std
pop
xchg
sub
loop
out
hlt
std
fwait
cmc
in
push
xor
or
xchg
bound
jae
xchg
sbb
and
jbe
rorl
xorb
cmpsl
dec
int3
leave
ss
sub
repz
pushw
movsb
jg
sub
mov
leave
add
test
notb
js
fs
fmul
add
inc
or
in
repnz
clc
and
test
sub
mov
sbb
fcmovnb
inc
cmc
loopne
jp
int3
lock
sub
mulb
jmp
inc
mov
in
sti
mov
sahf
aam
or
sub
sub
lret
das
stc
xchg
aaa
xlat
cmpsl
lods
lret
sbb
pop
cmc
mov
cmp
leave
outsb
or
je
sahf
in
mov
cltd
add
cwtl
jne
lock
pusha
das
fs
inc
dec
push
xor
sbb
pop
imull
mov
pop
daa
pusha
hlt
adc
stos
jno
movl
pop
jbe
pop
out
in
mov
push
std
scas
dec
inc
inc
ss
loope
in
cs
into
inc
pop
sbb
jno
xor
mov
xor
imul
inc
and
aaa
jbe
test
jmp
add
or
or
fs
jl
outsl
mulb
xchg
movb
ljmp
jge
xchg
mov
out
ret
repnz
cmc
and
cmpsl
call
push
jg
lods
idiv
rcrb
add
adc
add
cld
adcl
ss
fucomp
ja
lods
inc
jbe
enter
add
int3
gs
push
xchg
xor
add
loop
mov
pop
adc
sbb
cmp
jno
pop
fimull
sub
mov
inc
dec
test
ss
push
cmp
in
loopne
test
sbb
mov
adc
add
mov
outsb
xor
mov
push
mov
dec
std
sub
push
popf
push
sbb
inc
and
sub
punpcklbw
jmp
call
ret
add
add
xchg
lods
clc
pop
mov
inc
fs
lret
repz
mov
push
add
mov
loopne
adc
imul
mov
in
mov
pop
filds
out
adc
aas
cmpsb
jecxz
popw
pop
mov
andb
cmpsb
dec
inc
cwtl
lock
ds
sbb
in
lret
ret
loop
xor
aam
xchg
jo
mov
mov
in
add
or
jae
gs
cmpl
inc
dec
sub
xor
mov
jbe
xchg
pop
inc
push
hlt
arpl
scas
sbb
mov
sub
adc
repnz
lods
imul
enter
mov
test
push
cmpsl
inc
mov
sub
pop
inc
lret
idivb
aad
repnz
negb
jns
les
jl
sbb
repnz
jg
mov
arpl
test
xlat
lock
inc
sbb
mov
pmulhuw
lea
jl
ds
out
add
das
adcb
outsl
lock
std
jno
pop
jl
dec
mov
repz
inc
add
jmp
cmpsl
aam
divb
packssdw
movsb
mov
xlat
fimuls
dec
mov
and
roll
dec
out
fwait
cwtl
cmp
or
push
sbb
lods
sahf
inc
dec
nop
mov
xchg
out
mov
xchg
jb
xor
push
pusha
inc
mov
aaa
pop
ljmp
ja
rcr
sbb
dec
or
inc
loopne
rcll
test
pop
mov
enter
ret
insl
in
stos
pop
xchg
cmp
push
dec
call
shr
aaa
pop
lds
pop
push
fists
or
aas
add
jmp
jmp
cmp
inc
inc
in
je
sub
cmc
pop
push
and
or
adc
mov
or
xor
ret
andl
es
jmp
lods
cld
test
shr
or
loopne
cmp
pop
and
aaa
adc
xchg
adc
loope
sbb
dec
cmp
ja
nop
fmulp
bound
lcall
push
int3
cmc
in
push
jo
ljmp
in
cmp
mov
aam
nop
push
push
scas
scas
dec
aas
sti
push
cmp
stos
mov
in
mov
loop
or
xchg
sbb
enter
mov
cmp
add
add
add
sbb
adc
and
jl
jle
fiaddl
push
movsl
add
ljmp
xor
adc
data16
mov
cmp
sti
adc
fdiv
sbb
adc
mov
lea
loop
sti
sbb
nop
andb
js
cmc
push
lcall
sbb
scas
dec
pop
jecxz
mov
cmp
movsb
lret
push
jmp
pop
ljmp
push
icebp
mov
gs
mov
into
or
int
cs
adc
mov
dec
mul
outsb
mov
int
add
xor
adc
addr16
lahf
out
movsl
and
dec
sub
das
loopne
sbb
outsl
mov
lods
gs
xchg
leave
into
mov
push
mov
adc
push
lods
movsb
xchg
daa
outsl
cmpb
mov
xchg
cmc
jb
dec
xchg
cs
outsl
push
daa
out
out
pop
push
mov
fildll
push
push
add
sbb
adc
test
aad
imul
and
push
pop
inc
aam
xor
fnstsw
out
pop
jmp
scas
add
jno
ss
clc
push
stos
out
pop
xchg
jns
inc
push
pushl
mov
mov
inc
es
popf
je
dec
scas
int
scas
jecxz
mov
mov
xor
cmpsl
int
aam
sbb
mov
in
mov
mov
lods
inc
idivl
cmp
mov
and
cli
pushf
loop
inc
cld
push
push
pop
jg
sar
gs
mov
xchg
adc
cmpsl
addb
rclb
ljmp
pop
fsubs
and
push
icebp
aad
mov
push
lcall
adc
insb
dec
mov
pop
xchg
out
sbb
adc
aad
xor
pop
jnp
data16
in
arpl
scas
jae
ss
mov
leave
arpl
xchg
insl
lret
fucomp
push
push
xor
test
les
jmp
out
sbbb
scas
mov
cmp
jns
xchg
or
cmp
xchg
aad
aas
test
sarl
add
jno
push
jecxz
testb
fstps
xor
sbb
xchg
icebp
mov
inc
cmp
mov
jg
xchg
inc
test
jo
add
cmp
lea
es
in
scas
mov
mov
add
sahf
push
sbb
or
inc
es
int
mov
icebp
mov
in
dec
test
mov
sbb
pop
pushf
add
mov
and
push
adc
inc
inc
imul
fbld
in
cmp
cmp
mov
inc
and
mov
out
cs
or
insl
dec
jp
fsubr
out
mov
fs
ss
push
icebp
stos
fisttpl
sbb
cmp
imull
sbb
xor
shll
ret
xor
xor
mov
push
or
les
pop
dec
ljmp
mov
cmpsl
xchg
jle
xchg
mov
or
push
add
xchg
mov
add
outsl
inc
xor
sbb
pop
cmp
jne
inc
aas
call
clc
out
daa
adc
movsl
gs
xor
popa
sbbl
test
dec
dec
shl
test
jmp
mov
outsb
leave
out
or
addr16
popa
movsl
lret
sub
cmp
jns
xor
in
bound
sbb
int
sub
adc
inc
das
ficoml
sub
xchg
ss
aaa
sub
pop
push
xchg
mov
dec
fwait
mov
mov
adcl
push
daa
fdivs
dec
jns
enter
push
add
adc
movsb
inc
testb
jno
or
xor
add
sbb
stos
daa
sahf
jl
push
mov
ljmp
nop
mov
sbb
aas
les
cmp
dec
out
dec
add
ja
rep
in
popa
sarb
cmp
testb
cmpsl
into
rorb
test
jno
push
cmovbe
adc
lods
rcll
pushf
shl
fiaddl
push
jne
mov
out
test
in
stc
mov
sub
mov
in
push
aam
out
cli
push
ljmp
cld
xchg
rorb
push
push
std
mov
mov
ss
rcl
clc
dec
jno
popa
aas
in
xlat
stos
outsl
jo
mov
push
xchg
je
inc
lret
ja
into
push
in
and
ja
dec
ficompl
lahf
test
mov
mov
leave
outsl
xor
ja
xchg
sbb
pushf
pop
mov
sub
mov
int
mov
cmp
pusha
in
cmp
adc
dec
cmc
enter
lods
fisubs
pop
pop
xchg
enter
aas
shl
lret
add
fcoms
cmpsl
mov
sub
lret
pop
xchg
inc
jae
lahf
ret
pushf
mov
xor
mov
push
xchg
cmp
jl
xor
movsl
inc
int
xor
jb
movsl
addl
pop
and
fwait
mov
push
jecxz
out
or
mov
push
mov
in
jb
cmp
shll
sub
jo
cmpsb
std
scas
add
xchg
dec
inc
popa
push
push
pushf
xchg
orb
add
outsl
aas
roll
mov
pushf
jne
aam
in
movsb
stos
popa
in
insl
fisubl
loope
movsl
inc
sub
movsb
shrb
mov
sbb
hlt
jmp
mov
test
and
cmp
sbb
pop
into
jp
pop
inc
mov
test
repz
pop
mov
inc
mov
sbb
adc
in
pop
out
hlt
cmpsb
cmpsl
xchg
push
stos
fwait
inc
movsb
inc
dec
jg
inc
pop
fmul
cmp
lods
or
icebp
pop
add
es
daa
pop
mov
repz
adc
adc
lret
cmp
pop
sub
cmpsl
push
or
stos
lcall
nop
ror
aaa
popf
jl
cmovp
and
rcrb
xchg
test
mov
jbe
dec
and
adc
mov
in
in
sub
mov
andl
inc
sbbb
mov
sbb
push
inc
cmc
mov
movsl
push
out
sub
adc
jns
jno
sub
lahf
pop
call
shll
mov
int
jae
and
insb
fstps
mov
push
xor
jl
push
stos
inc
add
outsl
mov
stos
sbb
jge
notl
jl
lret
xor
xor
enter
xor
and
pusha
mov
cli
hlt
mov
fwait
lods
movsl
sahf
adc
repnz
sbb
fisttps
fmuls
and
pop
lret
sub
sub
out
jl
push
popf
inc
push
in
add
mov
add
call
xor
mov
pusha
jp
inc
pop
xchg
xchg
jl
cmpsl
sbb
hlt
dec
or
repnz
cmc
fcompl
mov
lahf
ds
test
inc
fwait
cld
std
mov
sbb
inc
stc
test
sbb
out
mov
and
inc
aas
cmp
sbb
stc
xchg
mov
jp
pop
xor
and
ja
xchg
ss
cmp
sbb
sub
mov
inc
loopne
repz
ljmp
add
sub
aad
repz
jmp
icebp
sahf
mov
cmp
xor
lods
aaa
jle
jmp
push
imul
outsl
push
cwtl
fs
fsub
mov
mov
xor
or
jno
addb
mov
push
fcmovbe
andb
cmp
cmp
loope
jnp
cs
pop
or
mov
push
out
cli
ficomps
call
mov
call
pop
add
push
les
lea
mov
nop
ret
lret
fidivs
push
xor
cmp
mov
mov
inc
mov
push
jne
jns
push
aas
dec
loope
roll
ffreep
xchg
repz
sub
ds
mov
xor
mov
ffreep
mov
or
hlt
mov
out
mov
dec
cmpsb
fisttpll
in
dec
fldcw
stc
fwait
pop
popa
mov
aam
pop
fwait
xor
les
and
clc
adc
jecxz
cli
mov
call
aas
into
push
out
jne
into
loopne
dec
rorl
add
subb
adc
hlt
lock
jne
mov
nop
pop
mov
push
les
xorb
jle
stc
ret
movswl
adc
iret
jge
xlat
call
lods
inc
inc
and
mov
inc
and
inc
imul
mov
arpl
std
pop
movsl
mov
inc
mov
jl
cmpsl
je
iret
mov
rcrl
inc
cmp
pop
and
aam
mov
rorb
nop
inc
arpl
repnz
inc
mov
fsubrl
aas
sbb
aam
addr16
mov
es
divb
xor
push
test
loope
inc
xchg
fmuls
stos
mov
sbb
jmp
mov
pop
arpl
out
or
mull
mov
in
fldcw
test
aas
mov
fnstcw
cmp
cmpsl
pop
adc
adc
add
add
fcoms
out
movsb
mov
daa
lock
pop
dec
or
pop
insl
cld
das
sahf
movsb
push
scas
loopne
pop
mov
and
mov
and
and
xchg
jbe
pusha
arpl
xchg
sbb
push
movsb
mov
fldt
jb
addr16
subb
xchg
mov
rorb
iret
cmp
mov
mov
mov
cmp
xchg
pop
and
jb
add
fistps
ret
out
mov
addr16
les
inc
jne
or
shlb
dec
xchg
pop
push
dec
fst
repz
repnz
test
sbb
jmp
push
push
stc
test
xchg
into
sbb
sbb
or
mov
lret
repz
fsubs
push
fdivl
mov
or
in
mov
dec
pop
jle
pop
int3
push
dec
mov
mov
sbb
mov
jae
cmp
or
lods
add
xchg
ret
aad
push
push
jge
std
cmc
cmp
fwait
or
jl
inc
pop
sub
in
repnz
pop
push
jmp
pop
aad
jns
fcmovb
inc
pop
aad
sbb
mov
xchg
insb
pop
sbb
push
add
push
push
int3
adc
sbb
jnp
aad
and
ret
mov
xchg
cwtl
mov
inc
xor
das
iret
xorl
push
pop
test
call
inc
imul
and
pusha
cmp
aam
dec
arpl
cmc
jmp
push
out
je
sbb
fisttps
cmp
out
mov
mov
pop
adc
mov
jbe
pop
nop
dec
cmp
sbb
insl
mov
loop
cmp
pop
mov
or
lret
inc
dec
cmc
xlat
mov
dec
dec
pop
adc
ja
fisttps
xor
pop
inc
xchg
push
xor
shll
push
add
and
push
repz
imul
repnz
add
inc
or
jmp
outsl
lds
mov
out
cmp
in
rolb
sbb
jle
ljmp
jne
jge
outsl
mov
loopne
ror
cmp
popa
xlat
jb
loop
dec
test
ljmp
sbb
dec
fcom
cmp
mov
cmp
fwait
popa
pop
xor
sti
mov
inc
adc
xor
std
ss
adc
dec
sub
lock
lcall
das
jns
addr16
inc
hlt
sbbb
rolb
std
push
jnp
fcoms
inc
cmp
icebp
and
dec
add
dec
mov
fnstsw
xor
pop
lock
push
dec
cmp
pop
out
adc
cmpsl
repz
pop
dec
sbb
mov
aam
mov
pop
mov
roll
lret
mov
fbld
aaa
ret
insb
mov
aam
push
fidivl
add
loop
mov
ficompl
test
cmpb
in
cmpsl
sbb
and
stos
mov
jb
jp
jo
fs
inc
sub
rolb
pop
pop
fs
sub
push
aaa
mov
push
out
bound
dec
dec
popl
aas
pop
mov
add
lret
cmp
insb
dec
jg
test
xor
jno
and
lahf
shrl
imul
aad
ret
sahf
movsb
in
cmp
mov
inc
push
fsts
lds
mov
test
adc
lcall
cs
xchg
mov
and
mov
pop
xchg
lcall
or
popa
sub
jne
sarl
pop
les
push
rcrb
dec
int
sbb
pop
jecxz
add
mov
arpl
imul
ficoms
add
mov
pusha
ja
dec
enter
and
pop
jnp
xchg
sub
fdivrl
out
popf
pop
cmp
pop
out
aad
mov
fists
push
enter
das
xor
or
fstpt
addl
xchg
loope
mov
mov
pop
pop
pushf
push
pop
sarb
add
inc
rcl
iret
jno
xchg
pop
xchg
shll
out
jo
adc
pusha
jnp
push
leavew
pop
inc
or
movsb
adc
add
sbb
mov
xor
call
popa
dec
pushf
add
fs
jecxz
dec
jle
mov
sahf
shll
test
in
dec
fst
cmp
arpl
pop
movsb
inc
mov
dec
ljmp
mov
mov
ret
mov
xchg
push
xchg
out
jbe
pop
or
outsb
adc
out
fdivp
scas
jae
cmp
les
dec
pop
jl
jge
and
cmp
xchg
test
adc
push
inc
in
push
mov
stos
idivl
iret
jmp
cmpsl
cmpsb
cmp
push
cwtl
push
xchg
xor
orl
jnp
mov
push
js
mov
lods
inc
xchg
dec
aam
push
mov
xchg
adc
pop
inc
mov
scas
xor
pop
inc
roll
aam
mov
mov
cmp
push
pop
popa
call
cmp
shll
pop
push
in
mov
lret
ss
push
jb
sbb
mov
push
fisubs
aam
cmp
push
daa
clc
js
out
subl
mull
dec
xchg
pop
mov
jb
out
ret
push
pop
sbb
sub
adc
es
aaa
sub
test
outsb
mov
in
mov
mov
hlt
cmp
or
movsb
sti
sahf
cli
aad
jl
mov
ret
rcrl
mov
push
shl
xchg
pushf
stc
mov
pop
xchg
pop
fstps
sarl
fnstenv
fincstp
data16
xor
ljmp
cmp
adc
fbld
xor
nopl
xor
dec
mov
mov
hlt
mov
imul
mov
push
ja
mov
mov
shlb
mov
and
cwtl
in
addb
es
popf
mov
fnstcw
jmp
xchg
mov
mov
jl
stc
mov
mov
clc
ljmp
repz
les
fnstcw
int3
and
adc
xchg
int3
jne
jg
jmp
ret
and
ficompl
stc
or
jmp
loopne
inc
or
je
cltd
flds
cmc
mov
or
je
xor
mov
dec
adc
sbb
push
jmp
sbb
out
gs
ficomps
mov
test
loopne
bound
xchg
lods
sbb
dec
test
popa
cli
fists
push
fists
xor
lds
loope
or
dec
dec
dec
inc
jge
mov
ss
ret
rcr
outsb
stos
dec
add
cmp
or
sbb
add
insl
inc
xchg
mov
in
mov
fwait
push
jne,pt
lahf
jnp
jns
insl
stos
mov
aaa
adc
lcall
adcb
fistps
in
push
inc
mov
mov
mov
stos
out
jb
in
and
inc
xor
scas
push
xor
xchg
inc
aaa
sbb
mov
insl
xor
bswap
cs
sbb
int
fs
xchg
or
pop
in
push
sti
addr16
call
loopne
lods
fs
or
ja
addr16
push
jbe
xchg
nop
or
aaa
repnz
mov
push
cltd
sti
out
test
int3
shld
icebp
sbb
sbb
cmpsb
cli
sub
je
jbe
xchg
mov
jg
sbb
dec
decl
outsb
jge
mov
sub
decl
mov
into
adc
inc
lds
ror
jle
out
mov
add
add
push
pop
data16
mov
in
mov
cs
mov
movsb
in
aad
popf
loopne
and
sbb
xlat
xor
imul
rcl
inc
shrl
nop
xor
jae
sbbl
xor
adc
push
add
xor
xchg
sbb
les
pop
adc
push
into
int
rorb
cltd
sbb
jmp
ljmp
imul
jg
repz
cmpsl
hlt
mov
outsl
daa
cmpl
adc
adc
in
sbb
mov
adc
movlps
sti
jno
lods
cmp
testl
and
push
inc
mov
mov
adc
jp
xor
lret
mov
std
idivb
rclb
jae
sbb
ds
pop
pop
setne
sub
daa
push
cmpsl
or
je
inc
or
ds
mov
mov
std
jmp
pop
insb
in
jb
fwait
rsm
into
inc
fdivl
adc
fistl
loope
es
xchg
leave
xchg
in
xor
and
cld
and
int
inc
aas
icebp
aaa
fiadds
in
mov
xchg
dec
lock
lods
xor
mov
pop
enter
nop
pop
sub
and
js
pusha
fs
dec
out
jb
mov
repnz
cmp
fwait
and
jmp
xchg
not
inc
pop
mov
fisubl
jne
xchg
push
mov
hlt
mov
lock
mov
jnp
and
xor
sbb
xchg
or
scas
rcll
cltd
bound
pop
insl
adc
fsubl
mov
inc
xlat
inc
daa
mov
cmc
and
dec
pop
idivb
xchg
mov
xor
aad
mov
cmpsl
mov
push
adcb
aaa
ret
xchg
cli
xchg
js
arpl
adc
bound
fbstp
jo
scas
pop
pop
jl
sub
shlb
arpl
mov
std
jg
mov
or
xor
mov
dec
jns
adc
mov
sub
push
push
mov
mov
ret
jno
fs
xchg
push
cltd
daa
mov
xor
icebp
pop
repz
stos
sbb
call
aaa
jge
mov
mov
xor
das
sub
fs
cmp
insb
adc
imulb
call
xchg
sbb
mov
sti
mov
shrb
pop
adc
jmp
call
fisttpll
pop
adcl
rcrl
and
movsb
pushf
pop
dec
mov
inc
inc
sahf
mov
jae
xchg
inc
cld
pusha
push
mov
push
mov
addl
inc
inc
in
sahf
pop
leave
je
cmp
sarb
mov
faddp
ffree
push
sar
jo
pop
in
ret
jmp
sub
inc
lret
cmpsl
add
and
inc
jle
jne
mov
push
xchg
insl
aam
sub
insb
sbb
decl
sub
in
imul
dec
inc
push
das
jns
push
sahf
pop
or
push
bound
push
xor
out
inc
xor
popa
and
push
mov
iret
lret
jns
and
add
dec
pop
inc
jle
dec
sbb
jae
mov
xor
xchg
push
test
lds
inc
pop
int
jbe
movl
pop
stos
loopne
sbb
sub
push
xchg
push
lret
and
inc
or
or
sbb
pop
popf
sbb
fnsave
mov
mov
cmp
in
sbb
outsb
in
insl
xchg
add
push
shlb
filds
repnz
outsl
push
ja
aaa
xor
outsb
mov
mov
jnp
out
push
jl
dec
pop
into
ret
cs
mov
or
icebp
mov
or
add
add
cld
fs
shrl
inc
inc
mov
out
paddd
sbb
push
mov
xchg
sbb
inc
jnp
add
adc
dec
sti
lods
jno
pusha
mov
push
push
out
and
mov
loopne
outsb
call
insb
popf
test
adc
insb
test
in
je
pop
pop
mov
pop
jns
ss
ljmp
inc
or
sbb
fs
insl
jns
cmp
add
push
sbb
test
xor
out
and
dec
push
inc
push
add
jne
add
xor
jmp
or
aad
jg
add
mov
adc
jp
mov
and
leave
mov
daa
mov
xlat
and
outsl
cwtl
sub
daa
and
nop
push
aas
add
into
push
out
or
loopne
push
sahf
mov
mulb
mov
xor
jge
shlb
das
int3
xor
rorb
das
outsb
push
push
dec
lock
dec
xchg
fwait
stos
ret
push
out
imul
leave
sbbl
popa
add
repnz
add
shll
ss
push
jge
xor
loopne
arpl
sub
insl
cmp
iret
jo
in
into
mov
or
aas
push
bound
mov
mov
push
dec
out
push
aad
xchg
data16
cmp
mov
sub
or
mov
lahf
push
mov
xor
rcrb
stos
add
mov
adc
sbb
push
mov
lret
jae
imul
sbb
in
add
mov
push
push
xlat
push
cmp
stc
scas
das
push
dec
js
arpl
sbb
fistps
jns
aad
pop
push
out
sub
pusha
pop
cmp
cmp
fwait
sub
dec
pop
movsl
ffree
pop
push
int
das
push
stos
and
sub
xrelease
cmc
lret
xchg
jne
cmp
add
push
or
or
sbbb
adc
loopne
mov
xchg
cmp
and
cmp
dec
ja
sub
sub
shl
jmp
or
mov
and
dec
inc
in
sub
gs
in
lock
lret
insl
insb
mov
cmc
xchg
imul
xor
pushl
jg
jmp
aaa
pusha
rol
rorl
sbb
scas
popa
sbb
push
mov
push
mov
outsb
add
cld
pop
push
and
and
push
cltd
mov
repz
xor
imul
jbe
pop
imul
ret
in
and
xor
sbb
fsts
lcall
cs
and
mov
xchg
xchg
xchg
dec
mov
aaa
lahf
inc
inc
mov
push
hlt
enter
jne
movsl
mov
sbb
push
insl
inc
scas
movsl
cmp
into
sub
arpl
push
icebp
push
jmp
adc
out
imul
lea
inc
shr
imul
cmpsb
sub
adc
mov
cmp
mov
and
jmp
sbb
xchg
les
es
insb
mov
outsb
cs
ja
repz
fadds
addr16
mov
stos
aas
xchg
xor
xor
adc
or
ret
dec
test
inc
subl
xchg
cmp
mov
inc
xor
pop
cld
std
inc
xor
cmpsl
sbb
push
leave
cmpsb
jo
cli
sub
arpl
mov
adc
xor
addr16
xchg
dec
and
cmpb
or
scas
repz
scas
and
xchg
aad
sub
aad
dec
insl
idivb
sar
sarl
jae
add
pop
mov
inc
pop
jno
rorb
adc
sub
scas
xor
cmpsb
jmp
dec
cmp
push
mov
mov
xchg
ds
sbb
xchg
out
xor
paddusb
and
nop
outsl
xlat
mov
lcall
mov
cmp
lock
xor
push
sub
mov
dec
mov
test
loop
cltd
xchg
ja
enter
scas
mov
aas
in
push
bnd
add
jg
sahf
fwait
js,pn
mov
loope
mov
into
je
cmpsl
add
imul
xchg
inc
enter
and
mov
clc
jnp
mov
negl
add
xchg
lock
jge
cmpsb
into
test
lcall
cvtpi2ps
dec
or
notb
cmpsb
loope
imull
rcr
push
mov
cmc
dec
cltd
cmc
xor
dec
inc
test
add
daa
inc
insb
out
pop
lods
adc
ficompl
sub
mov
lret
movsb
and
pusha
lods
lock
fisttps
mov
js
std
dec
xchg
repnz
fistl
dec
mov
add
rcl
cmc
movsb
cltd
jnp
pop
sbb
stos
xor
or
adc
dec
jp
dec
mov
xor
sbb
adcb
mov
jl
jmp
and
int
dec
std
adc
sbb
xor
mov
mov
repnz
fwait
xlat
cmc
add
imul
lahf
jae
shlb
movsb
aad
push
mov
or
int3
loopne
jmp
sbb
add
subl
pop
roll
cmp
add
scas
dec
and
inc
loopne
js
femms
adc
dec
sub
ds
cmpsl
mov
and
sbb
sub
daa
lret
mov
mov
cwtl
adc
add
mov
aam
int3
jnp
pop
imul
mov
fwait
cmp
or
lahf
jmp
shll
fcom
mov
jo
or
cmpsl
ret
inc
hlt
sbb
jns
inc
mov
mov
fsub
lods
cwtl
and
dec
mov
subb
stc
cltd
cld
jbe
lcall
sub
into
fs
subl
sbb
and
and
fisubl
adc
nop
mov
cmp
lock
sbb
out
sbbb
or
pop
shr
dec
outsb
cmpsb
cmp
add
out
cld
je
into
or
les
imul
jb
repz
sub
push
stc
and
xchg
enter
cmp
ret
jno
call
cs
imul
add
sub
push
popa
jp
les
and
sub
pop
or
loopne
lcall
cmp
mov
mov
sbb
push
push
push
cli
int
call
mov
push
jnp
or
jo
mov
test
mov
lods
ds
xor
dec
xor
out
popa
xorl
push
cmp
jmp
or
jg
fsubs
adc
out
inc
aaa
outsb
jge
outsb
inc
mov
in
mov
pop
inc
rdmsr
lds
mov
aam
dec
lret
fmull
insb
mov
inc
lock
mov
hlt
cmp
fisttpll
push
push
int
cltd
jne
cltd
cmc
icebp
mov
ucomiss
add
repnz
cmovne
rol
cmp
pop
push
outsl
inc
dec
mov
xchg
inc
test
add
pushf
sbb
loope
dec
xor
mov
lds
mov
mov
lret
xchg
mov
mov
addl
push
std
lods
pop
push
add
nop
xchg
fstps
int3
push
mov
pop
add
outsl
fisubrl
inc
push
or
mov
xchg
jecxz
out
fsub
repnz
mov
xchg
push
and
mov
lea
dec
aam
psllq
or
bound
pusha
jg
gs
loop
mov
pop
xchg
test
add
pushf
es
dec
pushf
mov
idivb
mov
cmp
pop
subb
lsl
fs
push
ss
ds
pand
bound
jmp
loopne
add
jnp
es
ss
std
inc
cmc
adc
xor
out
rol
inc
xlat
push
xorl
add
lods
xchg
roll
or
mov
out
outsl
imul
insb
lds
jecxz
pop
and
adc
adc
repnz
pop
ficoms
fmul
sbbl
outsl
stos
rol
jp
add
mov
cmp
hlt
orb
pop
shrl
in
ljmp
jge
xchg
jb
leave
push
mov
mov
adcl
outsl
or
sub
out
mov
lret
or
mov
and
push
xor
inc
ljmp
xchg
inc
ljmp
es
sbb
cmp
pcmpeqd
outsl
cmpsb
push
inc
out
das
mov
push
jp
fistpl
in
adc
adc
popa
rcll
sbb
cltd
lds
loopne
lock
mov
pop
out
and
and
inc
xchg
test
aaa
pop
je
mov
sub
leave
adc
insl
or
cmp
sbb
ja
rcrb
or
shlb
cmp
xchg
pushf
test
in
pop
fcomi
push
lds
mov
push
mov
cld
push
je
arpl
mov
sbb
jb
pop
in
push
mov
sbb
ja
sbb
sbb
sub
sub
shrb
mov
aam
imul
jl
push
mov
loope
jmp
mov
in
fwait
popa
and
or
ljmp
mov
imul
fs
push
jmp
pop
jbe
ret
fimull
push
mov
sahf
cmpsl
and
mov
cmpsl
dec
lret
and
and
cvtdq2ps
es
jecxz
mov
inc
test
add
xor
mov
inc
add
daa
sti
int3
and
sub
daa
adc
mov
dec
xor
xor
jo
push
mov
loop
aam
sub
filds
mov
jno
insl
imul
dec
xor
mov
into
test
xchg
div
cmp
xrelease
clc
xor
xchg
adc
mov
sti
jnp
push
cmp
negl
mov
mov
pop
in
aas
jne
lods
sbb
mov
aad
insl
mov
pop
mov
outsb
push
push
add
shl
out
test
push
adc
imul
stc
add
inc
xor
popf
inc
lea
jecxz
mov
lods
hlt
push
andb
mov
pop
pop
jae
xchg
shrl
adc
rcrl
or
gs
push
mov
pop
xchg
xor
add
inc
pop
loop
xor
add
add
int3
push
and
push
jmp
inc
mov
jno
imul
movsb
xchg
ds
xor
fisubrl
dec
mov
divl
pop
cmp
aad
mov
dec
and
sub
aas
adc
sarl
nop
andl
test
outsb
ljmp
pusha
mov
lahf
inc
jg
xchg
repnz
push
pushf
or
jle
out
leave
sub
roll
cmp
gs
fldl2t
bound
iret
rclb
dec
ret
pusha
out
xchg
repz
pusha
cmpsl
jp
shrb
push
imul
jne
leave
sub
mov
repz
cmpsl
test
dec
sub
rolb
or
fcomps
mov
sbb
mov
pop
testl
or
mov
add
sbb
aaa
sub
sbbl
test
rcll
andl
nop
das
push
mov
pop
push
add
push
ds
inc
out
bound
cmp
xchg
je
jle
leave
mov
fmul
cmp
sahf
outsl
fists
pushf
add
popa
xchg
arpl
mov
add
xchg
jg
arpl
pop
mov
xlat
inc
push
xchg
mov
adc
inc
dec
mov
jb
aam
cli
and
push
or
loope
cmpsb
fcomps
roll
push
leave
movsl
mov
fiaddl
hlt
fldenv
xchg
addr16
cmp
shll
xlat
cmc
jecxz
sbbb
ret
adc
popf
insb
cmc
cmp
sub
loop
lahf
bnd
mov
jle
mov
xchg
outsb
xchg
jns
mov
push
add
cmp
sbb
dec
shl
cmpsb
scas
scas
mov
xor
inc
mov
out
loopne
repz
leave
jnp
xchg
fisubrs
and
jns
repz
movsb
lea
jl
outsb
pusha
aam
xchg
fsubp
into
lock
pushf
mov
jb
pop
movsl
test
jne
mov
mov
ffree
jb
mov
js
and
hlt
lods
hlt
xchg
pop
popa
sub
xchg
push
pusha
enter
and
cmpb
and
push
mov
in
lds
adc
pop
adc
xchg
inc
adc
movsl
jns
insl
add
inc
xchg
jbe
movsl
jge
subb
es
mov
inc
movb
ret
sbb
call
jmp
call
mov
pop
mov
cmp
jge
fs
dec
test
pop
adc
add
jns
test
push
jge
or
xor
popa
fisttps
inc
mov
imul
or
ljmp
mov
pop
and
ljmp
sbb
ljmp
adc
push
cmpsb
jae
xor
test
std
sar
int3
pop
xchg
mov
pushf
rolb
inc
movsl
vunpcklps
inc
lcall
stos
cmp
int
mov
fmulp
loope
fdivrs
jae
sti
push
pop
divl
xchg
push
fdivs
push
popf
or
mov
sti
or
bound
mov
sub
push
adc
mov
out
cli
pop
jg
pop
outsl
sbb
stos
andb
leave
andl
mov
loop
jno
xor
je
cmp
movsl
adc
or
xchg
subb
into
inc
sub
popf
xchg
imul
add
cs
xchg
fs
imul
lret
dec
mov
bound
sbb
push
pop
inc
pop
jmp
call
add
imull
mov
pushf
mov
push
fsts
fmul
rcll
test
imul
scas
mov
dec
sub
mov
jge
ja
mov
mov
sub
jmp
cmc
xchg
pop
das
pop
inc
lods
xor
nop
aaa
out
push
inc
mov
iret
cwtl
dec
movsb
lret
xor
aad
sub
jbe
rclb
sub
test
dec
mov
mov
push
outsl
mov
push
jae
cmp
pop
mov
fidivl
mov
addr16
or
mov
and
push
xchg
push
enter
xor
mov
popf
clc
in
jbe
cmpsb
imul
or
cmp
pop
inc
mov
mov
out
jecxz
loop
lds
cwtl
loop
dec
and
je
shll
hlt
scas
test
mov
jecxz
xorb
pop
jo
sub
mov
js
loop
adc
rorb
cmp
xchg
dec
pop
jbe
xchg
lods
or
or
cmp
mov
xchg
push
or
push
mov
pop
jle
push
cli
add
insb
and
movsb
icebp
xor
cmp
inc
adc
in
jecxz
jmp
mov
aas
jl
jae
xchg
lret
fcoms
or
jne
mov
pop
lcall
dec
jns
add
cmp
dec
sbb
mov
mov
std
mov
clc
cmp
mov
xchg
stos
mov
popa
jle
xchg
mov
mov
loopne
xlat
push
pop
inc
jae
pop
jb
inc
das
int
imul
shl
sbb
frstor
xor
jge
ja
push
insb
ss
mov
sub
push
loopne
sub
adc
lds
lret
clc
loopne
sub
mov
pusha
push
cmc
outsb
into
fbld
pop
pop
adc
mov
jle
dec
jbe
and
cmp
sub
mov
test
cmp
sti
inc
mov
test
xor
lods
les
xor
pop
mov
or
add
xchg
in
testb
popf
jne
push
and
dec
pop
push
outsb
aas
push
testl
xor
fistl
cmp
cld
pop
pop
dec
or
xor
sbb
add
and
call
xlat
xor
ljmp
das
xor
cli
movsl
scas
xorl
inc
out
inc
pop
cmp
pop
outsl
mov
ja
jge
idivb
push
push
xchg
or
mov
push
inc
arpl
dec
adc
push
and
sub
jmp
adc
or
jl
sub
aaa
dec
loopne
rorb
mov
int3
add
mov
dec
fidivrl
pop
mov
xchg
pusha
leave
inc
dec
push
fcmovu
in
jnp
stc
adc
leave
movsb
mov
pushf
mov
add
cmp
push
or
lds
dec
int3
cmp
mov
dec
push
bound
lahf
pop
out
jl
in
clc
push
xchg
sub
enter
test
dec
adc
mov
sbb
dec
sbb
xchg
mov
mov
or
or
cmpsb
mov
or
xchg
arpl
dec
jl
or
std
xor
je
lods
xor
xor
in
xchg
imul
mov
push
mov
adcl
popl
insb
jl
inc
bound
imul
popf
std
imul
jae
sub
add
shl
jb
fwait
push
cmc
lds
and
jle
sub
lret
mov
adcb
jo
in
addr16
dec
pop
testb
jge
mov
dec
into
sub
mov
sbb
dec
inc
mov
jl
mov
imul
cmpsl
daa
lret
mov
adcl
ret
test
int3
in
ja
lock
shll
pop
iret
cmc
in
test
movsb
adc
sahf
cmp
push
inc
xchg
dec
sahf
test
dec
shlb
arpl
adc
scas
sub
das
test
pusha
es
adc
loopne
jns
sbb
faddp
fisubrl
pop
fiaddl
jp
mov
pop
adc
mov
sbb
jecxz
mov
xchg
shl
dec
loop
bound
imul
aam
or
inc
cltd
add
cmc
int3
jbe
cmpl
repnz
mov
add
xchg
sar
stos
sub
aam
cmp
enter
pop
mov
dec
or
fistps
inc
cltd
sbb
mov
rclb
in
and
xor
iret
or
or
cmp
into
lea
adc
aam
dec
inc
idivl
js
pop
push
inc
shrl
scas
test
push
inc
push
adc
clc
cmpsl
lcall
lds
jns
pusha
loopne
mov
mov
sbbl
aaa
dec
pop
aaa
subb
adc
lods
add
mov
or
ret
adc
and
daa
test
test
sbb
xchg
adc
shll
jnp
dec
dec
dec
stos
arpl
jno
xchg
loope
test
xlat
cmp
mov
iret
out
loope
std
mov
xor
push
pop
divl
nop
addr16
call
push
ss
call
push
out
fcomps
popa
sbb
mov
inc
inc
es
into
mov
fucomip
dec
dec
fistl
mov
fmuls
sbb
push
les
not
xlat
or
jb
pop
and
popf
sahf
sub
fimull
dec
daa
test
jns
jg
xor
and
and
cltd
push
pop
xchg
pop
aad
inc
insl
fwait
push
push
cld
movsl
ss
fwait
mov
sbb
inc
pop
pop
xor
mov
negb
dec
insl
mov
sub
adc
jecxz
push
jno
cmpsl
icebp
in
and
test
fistpl
or
xchg
sbb
mov
cmpb
cmp
das
push
push
cli
push
sub
adc
and
pushf
iret
outsl
adc
lret
inc
mov
sub
lods
mov
test
rolb
and
lock
and
pushf
out
scas
ret
loop
sbb
pop
mov
push
and
xchg
arpl
jns
mov
not
add
cmc
dec
jge
sti
pop
or
out
jecxz
push
or
mov
or
insl
loope
adc
mov
dec
stc
jns
push
or
mov
out
or
repnz
or
jl
and
iret
and
fdivl
jae
popf
data16
lods
mov
sub
mov
sub
xor
cmp
adc
outsb
cmp
stc
sbb
jge
push
lret
mov
push
ja
mov
xor
std
mov
jecxz
pop
and
int3
jl
inc
jge
fisttpll
rcl
push
dec
pop
rclb
repz
mov
je
mov
addr16
in
out
or
jp
push
adc
adc
stos
sbb
daa
cmp
std
out
lods
and
xor
xor
into
add
idivl
test
cltd
cmp
cmp
jb
out
xchg
fwait
rolb
mov
fisttpl
stos
inc
daa
fdivrs
arpl
adc
mov
hlt
in
bound
xor
ja
add
or
lret
std
pop
rorb
inc
cmp
mov
lahf
pusha
xor
sbb
or
mov
xor
out
dec
sbb
inc
loop
xor
aaa
inc
jb
push
mov
ja
jg
ljmp
popa
mov
addr16
test
xor
dec
adc
xor
leave
xchg
add
paddq
js
inc
mov
out
xchg
pop
notrack
roll
jle
imul
outsb
daa
out
dec
pop
push
add
adc
cmp
psubsb
cmc
cmp
inc
cmc
test
add
push
dec
icebp
xor
decb
jmp
sbb
jns
lds
jp
fdiv
in
cmp
inc
xor
int
test
jae
and
xchg
mov
dec
jne
leave
jmp
test
push
aad
cmp
sbb
fmul
add
pop
pop
jle
xor
fwait
movsb
or
jno
jp
and
adc
lds
cld
mov
jecxz
inc
in
ljmp
sbb
fistl
add
loopne
sahf
and
test
repnz
jl
pop
inc
fists
inc
int
inc
in
jb
lahf
xchg
pop
dec
pop
mov
lods
dec
push
imul
daa
arpl
mov
xchg
dec
and
mull
imul
les
mov
pop
addl
jns
outsb
loop
lret
mov
test
cmp
testl
jg
dec
in
popa
ret
inc
lcall
xchg
je
jge
jp
and
lock
sub
sub
and
fsubp
add
cmp
pop
mov
sub
cmp
in
movsb
jno
test
scas
sub
cmp
and
mov
sbb
jne
sub
mov
or
adc
sysret
js
push
pop
jle
add
adc
fbstp
pop
cs
dec
out
cwtl
push
jb
lret
dec
mov
mov
sbb
push
jecxz
call
cmp
inc
mov
repz
int3
call
sbb
mov
push
sbb
sahf
iret
push
pop
inc
cmp
test
or
leave
mov
es
mov
xor
aad
dec
jmp
dec
and
sahf
or
icebp
cltd
stc
out
push
mov
inc
shl
rorl
inc
push
jns
mov
faddl
xor
inc
lret
ja
adc
jne,pt
js
rcrb
inc
das
das
sbb
pop
mov
cmc
mov
cmp
jmp
inc
shlb
add
jbe
pushf
push
xchg
jmp
lret
dec
call
aas
hlt
jbe
jo
jb
mov
das
cli
mov
lret
fdiv
decb
out
movsb
fidivs
mov
out
and
scas
es
push
cmp
sti
mov
add
mov
adc
je
ret
mov
inc
add
mov
push
fwait
jbe
cwtl
call
push
cmpsb
arpl
xchg
add
inc
cmp
cmpsb
xor
jbe
pusha
sub
mov
pop
sbb
cmp
adc
jns
pop
cmc
outsb
cmc
cmp
push
xor
or
repnz
out
nop
aas
cmpsl
ss
outsl
xchg
pop
fyl2xp1
push
popf
stos
cmp
call
icebp
adc
pushf
push
icebp
cmpsl
iret
test
insl
pushf
mov
xor
jb
xlat
stos
cld
inc
sbb
jmp
ja
fcmovnu
test
pop
xchg
pop
prefetch
lcall
divl
shl
pop
push
call
inc
ficoms
int3
outsb
out
fiadds
push
popa
xorl
xor
scas
lds
repnz
adc
push
test
lcall
xchg
jmp
movsb
clc
scas
mov
mov
mov
lret
add
add
testb
and
ret
mov
das
shlb
push
push
lods
movsl
test
arpl
pop
iret
xchg
lret
jne
dec
lds
dec
and
int
inc
cmp
out
loop
xorl
add
jae
add
lock
inc
cmpsb
xor
push
ljmp
popf
call
jo
xchg
dec
xchg
jmp
insl
sub
daa
leave
imul
mov
sub
inc
dec
mov
lds
xchg
sbb
popa
mov
sbb
sahf
dec
aaa
cmp
mov
ds
pop
add
inc
iret
jmp
dec
sub
jo
add
das
ljmp
sti
push
jmp
fsubl
fsubl
jmp
ss
in
cli
mov
push
scas
dec
mov
pop
jns
mov
imul
iret
jmp
push
rcrb
inc
push
popa
pusha
test
outsl
push
inc
jmp
leave
push
push
call
jg
mov
imul
cld
movsb
data16
push
leave
sub
xchg
xor
sbb
cltd
push
jge
pop
pusha
cmp
in
test
add
nop
push
push
or
bnd
daa
add
xor
es
adc
push
cs
inc
cmp
unpckhps
sbb
inc
push
sbb
dec
das
adc
mov
cmp
or
cmp
and
test
push
daa
jae
cmp
nop
mov
fldl
mov
and
rorl
in
loopne
test
dec
sbb
add
add
es
cwtl
ret
mov
and
pop
fwait
sub
pop
sub
loop
or
lock
fcmovnbe
mov
in
mov
das
and
xor
xor
jne
mov
sbb
xor
xor
in
movsb
xchg
imul
push
insl
ret
in
je
les
js
inc
or
movsb
sub
pop
std
test
cmc
cmp
dec
xchg
ret
lods
pop
inc
jmp
inc
int3
or
mov
mov
lcall
push
lret
cmp
and
xorb
xchg
inc
nop
clc
mov
iret
dec
insb
icebp
cltd
jo
sbb
bound
aas
imul
cmp
out
xor
sbb
push
outsl
sbb
xor
loope
jg
lds
pop
add
fidivs
mov
jae
mov
mov
adc
in
push
or
cmp
adcb
inc
dec
je
add
lods
mov
mov
in
lret
dec
lods
xorb
dec
sub
andb
jnp
mov
mov
sarb
arpl
inc
dec
add
test
pop
push
cli
add
cmp
sbb
in
mov
aam
out
lahf
pop
inc
fadds
mov
sti
adc
fwait
out
jnp
fisttpl
mov
add
or
popa
test
and
adc
jae
xchg
cmpsb
xchg
push
mov
xchg
shrb
cld
mov
xchg
pop
jne
imul
int
aam
lock
mov
add
sti
stos
insb
dec
ffreep
adc
pushf
dec
mov
push
add
jmp
insb
inc
repnz
int3
inc
inc
or
sti
or
xchg
xor
cltd
mov
and
dec
jge
repnz
dec
rorb
ljmp
mulb
adc
dec
inc
cld
jb
std
std
shrl
inc
adc
and
aaa
jle
pop
ret
and
push
jmp
sub
cwtl
test
shll
cmovb
jge
mov
test
mov
sbbb
xchg
or
pop
push
push
loop
mov
and
negl
test
dec
xchg
jmp
and
int
lret
jnp
stos
sahf
clc
mov
add
rclb
jmp
add
mov
push
arpl
inc
xchg
mov
fcomps
adc
cmc
xchg
push
xor
jae
adc
cmp
mov
in
lahf
sub
movsl
inc
dec
add
adc
adcb
leave
mov
loope
mov
repz
outsb
and
inc
icebp
mov
and
gs
nop
out
cltd
pop
cwtl
in
cmp
push
pop
sbb
les
sbb
jp
movsb
stos
cmp
cwtl
cmp
xor
xchg
jp
mov
mov
lock
sub
mov
cmp
mov
subb
dec
in
movsl
inc
rclb
mov
bound
insl
mov
mov
hlt
jmp
pop
out
popf
mov
xchg
stos
scas
shlb
and
sti
outsl
xchg
shl
out
pop
dec
jae
rcl
pop
jmp
dec
jae
pop
mov
fs
inc
fistpl
ljmp
sub
int
cmp
cmp
nop
and
loopne
pop
mov
pop
add
movsb
outsb
cli
sub
lds
insb
add
and
add
push
in
xor
mov
ss
pop
loop
dec
nop
ret
pop
leave
or
aad
jae
jmp
test
fdivs
xchg
jb
inc
xor
sti
lods
or
mov
or
dec
pop
sub
stos
hlt
cmp
adc
lock
dec
pusha
push
add
sub
imul
adc
pop
mov
es
xchg
mov
clc
pop
jp
push
lahf
xchg
xlat
mov
nop
mov
rcll
stos
push
mov
dec
orb
scas
sbb
pop
jmp
addr16
pop
lods
pushf
std
push
mov
mov
dec
lret
fistps
and
fwait
lods
enter
testb
push
xchg
mov
mov
pop
test
sub
push
push
stos
push
leave
cld
pop
les
js
xchg
jbe
jl
stos
pop
push
jne
sbb
clc
roll
das
stos
ja
push
pop
sbbb
sbb
imul
repnz
cli
push
jp
leave
imul
fisttps
and
cmc
loope
xchg
test
lret
cmp
rorb
lcall
adc
movsb
push
lods
cmpsl
pop
adc
scas
inc
mov
test
jle
divl
xor
fbld
lds
inc
pop
dec
imul
rclb
push
and
das
jne
pusha
pop
xor
imul
dec
pop
mov
orb
sahf
jne
nop
mov
adc
icebp
or
xlat
adc
xor
psllw
mov
and
sbb
pop
pop
push
xor
push
mov
inc
mov
out
mov
and
fcompl
aas
dec
push
into
aad
mov
mov
test
push
call
jmp
xor
jl
jg
or
mov
pop
insb
ljmp
lret
or
adc
and
orb
inc
inc
push
call
rol
cs
jecxz
shr
aam
out
bound
addr16
push
nop
roll
xchg
into
lahf
jno
test
jns
cmc
and
ret
xor
xorb
es
jae
xchg
outsl
add
xchg
mov
pop
and
xor
and
fsubl
pop
and
pop
or
sub
sub
xor
es
je
jg
xor
mov
cmp
mov
push
xlat
iret
inc
mov
push
mov
and
fcompl
push
dec
add
jecxz
test
sbb
mov
sub
test
cmp
orl
dec
xchg
xchg
outsb
jge
and
cmp
daa
mov
ljmp
xor
sbb
hlt
add
mov
inc
test
pop
sbb
xchg
rolb
scas
nop
scas
mov
arpl
pop
mov
addr16
cmc
pop
test
call
int
int
jle
cli
dec
out
ret
iret
nop
cmpsl
scas
pop
daa
and
and
test
mov
daa
lahf
add
pusha
xor
out
sub
pop
dec
or
hlt
push
inc
xchg
movsl
mov
stos
das
hlt
data16
xor
ret
dec
cltd
sbb
and
fbstp
fisttps
push
fdivr
push
shlb
pop
or
ret
mov
movsl
fldt
sub
adc
sbb
je
jmp
jae
fwait
fs
inc
aad
out
shr
xchg
test
push
fs
or
jbe
adc
mull
jge
or
jne
dec
pushf
imul
mov
cmp
mov
fdivrl
mov
bound
xchg
xlat
adc
test
sti
repnz
pusha
push
mov
inc
stos
xorl
insb
xchg
mov
inc
jno
inc
dec
mov
leave
psubq
cmpsl
nop
call
cmp
pop
scas
sub
dec
mov
jmp
push
roll
je
in
mov
icebp
int3
sub
insb
sbb
push
ljmp
shl
iret
repnz
add
mov
inc
sbb
xor
xchg
lret
decb
pop
add
data16
jg
mov
shl
sahf
aam
repnz
stos
sbb
out
and
ret
lods
fistps
imul
mov
loop
dec
rclb
mov
jbe
ja
test
ret
shll
into
pop
loope
hlt
xchg
push
popa
dec
std
iret
repnz
mov
iret
mov
rorb
xchg
leavew
jbe
jg
or
roll
xor
mov
int
pusha
gs
or
fs
mov
dec
push
add
ja
adc
daa
sbb
neg
je
inc
cwtl
frstor
js
mov
out
sbb
les
xchg
out
push
xor
scas
adc
shl
jae
loope
jmp
aaa
adc
gs
sub
notb
inc
imul
mov
jo
jl
lea
xchg
mov
cld
add
out
pop
lret
xor
push
ja
outsb
leave
pushf
vzeroupper
xchg
and
addr16
insl
mov
ds
fisttpl
inc
inc
int
xor
rcrl
scas
mov
dec
mov
cmpsb
das
mov
pop
loop
push
stos
stos
js
xchg
pop
lock
data16
cmp
pop
leave
inc
fimuls
sbb
jle
xchg
sub
popa
dec
shll
sbb
std
dec
push
adc
mov
sbb
xchg
push
addr16
push
adc
int3
jecxz
cmpsl
lret
loopne
aaa
jno
jae
mov
jnp
mov
inc
pop
fs
push
push
imul
fstl
je
scas
pop
cwtl
daa
jg
pop
sbb
push
ds
pop
mov
jle
mov
mov
mov
xor
or
sbb
je
sar
es
pop
call
fsubs
popa
pop
stos
mov
inc
imul
inc
sub
cmpsb
dec
movsb
aam
cs
in
js
adcl
sbb
mov
jo
mov
jns
dec
sahf
pop
popf
xor
stos
test
mov
adc
jecxz
int3
sbb
ret
loope,pt
stc
jg
inc
xchg
lret
leave
inc
and
mov
jbe
fstpt
rcrb
in
arpl
rolb
ds
push
mov
test
movsl
out
imul
pop
insb
pushf
nop
outsb
jge
cld
jecxz
iret
cmp
clc
int3
adcl
push
jg
rcll
outsb
rorl
sub
sbb
mov
xor
in
test
imul
lea
es
cmp
and
cmc
insl
in
cmp
popl
xchg
test
scas
inc
stos
mov
stos
cmp
mov
fwait
push
jp
cmpsl
pop
insl
pop
pop
mov
fs
pop
add
imul
data16
xchg
out
scas
mov
ja
push
xor
jle
xchg
xchg
inc
push
xchg
cmp
add
out
pop
stos
sbb
mov
push
hlt
jb
mov
mov
cltd
ror
fidivs
adc
fmuls
jecxz
cmp
add
jbe
call
add
repz
mov
les
inc
push
jne
divl
and
or
add
shrl
xchg
inc
ds
mov
sub
in
aad
xor
mov
scas
mov
adc
xchg
cmp
in
cwtl
mov
xchg
mov
icebp
scas
dec
ret
movsl
mov
mov
cmc
cmp
mov
rol
cmp
shrl
icebp
inc
loope
mov
imul
xchg
outsl
mov
int
popf
push
jbe
pop
std
lds
sub
mov
jg
sbb
add
lret
mov
mov
jmp
xchg
pop
lret
in
cltd
addb
out
xor
in
lcall
adc
or
and
stc
mov
ficomps
pushf
push
pop
shrl
imul
scas
pop
andl
data16
push
mov
adc
or
cld
mov
data16
xchg
rcrl
xlat
sub
jo
fwait
into
ret
add
adc
movb
popa
inc
lret
sbb
fdivs
sub
imul
mov
data16
mov
inc
jnp
arpl
add
fcmovu
nop
std
scas
cli
mov
frstor
inc
int3
negb
and
sub
push
or
push
dec
inc
shl
pop
push
and
repz
mov
jnp
stos
jbe
sub
fsts
push
shl
pop
sub
cmc
fucomip
popf
pop
test
push
in
dec
inc
cwtl
xlat
outsb
loop
jmp
repz
mov
adc
mov
or
in
jo
push
xor
inc
sub
jno
outsb
ljmp
inc
icebp
std
mov
test
pop
mov
push
int3
js
lret
mov
inc
sbb
test
sbb
mov
loope
aas
mov
mov
mov
ljmp
rep
add
div
sbb
lods
mov
mov
xchg
popa
mov
sti
lods
fimull
push
scas
sar
xlat
ficoml
enter
aam
ljmp
add
dec
push
pop
and
cmp
pop
mov
pushf
sarl
inc
and
dec
lock
pop
push
ja
xchg
or
sbb
dec
pop
addl
mov
push
fs
push
insl
pop
fstl
dec
cmc
int
fs
imul
cmp
fs
outsl
int
pop
xchg
mov
faddp
mov
in
mov
mov
stc
fidivs
lcall
pushl
xor
das
dec
sbb
js
push
cs
cmp
repnz
testl
xor
sbb
lods
decb
std
cwtl
jnp
das
cmp
xchg
adcl
fs
outsl
pop
jl
jle
in
icebp
pusha
lods
aam
data16
enter
lcall
jg
mov
les
mov
or
and
mov
fsubr
jl
movsl
rcr
sub
rorb
xor
pop
or
dec
mov
xchg
icebp
mov
jl
xchg
test
mov
pop
orl
xlat
mov
mov
es
push
movsb
jl
inc
sbb
push
adc
xchg
in
aas
push
clc
pop
test
dec
pop
cmpsb
sub
xor
das
jle
clc
in
pop
mov
cmpsb
movsb
and
jbe
mov
sti
mov
ss
loopne
jo
push
inc
test
xor
mov
fdivrl
pop
jne
out
das
xchg
in
fidivrl
dec
movsb
dec
or
movb
mov
sbb
pop
xor
insb
mov
outsb
enter
mov
lods
sbb
or
mov
push
mov
jb
pop
xchg
repz
rcr
ja
inc
subl
or
dec
jp
cmpsb
dec
sbb
and
jne
sbb
jge
in
add
mov
sub
adc
lahf
pushf
movb
rcrl
data16
hlt
cmp
stos
add
jp
in
and
icebp
ret
loopne
xchg
mov
push
pushl
adc
xchg
rcrb
adc
mov
cltd
mov
pop
or
icebp
or
out
inc
in
cmpsb
xor
icebp
out
xlat
sahf
sbb
xor
add
xor
pop
push
push
jae
in
mov
cmp
sahf
push
push
push
xchg
sub
sar
lret
cmc
std
pop
pop
in
xor
jmp
mov
mov
movsl
cmp
dec
movsb
mov
push
cmp
sbb
xor
popa
cld
daa
mov
cltd
int3
outsb
mov
pop
push
dec
test
lahf
xor
xchg
sbb
arpl
in
fdivrs
jne
cltd
jnp
sub
mov
lds
imul
popf
leave
fdivs
in
adc
push
cmp
lret
andb
pop
jmp
rclb
xor
dec
test
mov
adcb
cltd
add
mov
out
mov
in
setb
xor
mov
jmp
das
xchg
subb
das
imul
cmc
addr16
xchg
add
mov
sbb
and
clc
adc
mov
sub
insl
add
popa
movsb
or
dec
mov
mov
push
rcrb
add
call
mov
xor
mov
mov
data16
pop
aaa
sub
pop
inc
sti
xor
inc
lods
dec
outsl
jo
sbb
inc
fidivrs
inc
cli
dec
scas
incb
int
ret
jmp
xor
push
jns
adc
adc
push
dec
mov
xchg
rorl
add
inc
test
cmp
push
mov
pushf
lcall
call
cmc
frstor
outsl
test
or
jle
sbb
addr16
adc
push
lahf
or
jp
lcall
xchg
jmp
dec
jnp,pt
incb
jge
push
in
stos
mov
sarl
lods
icebp
sbb
fwait
popa
js
loope
lods
jp
aas
add
fstl
mov
std
mulb
lods
pop
xchg
jmp
xor
dec
jg
inc
pop
loop
sar
in
jbe
and
mov
lods
jge
pop
sub
outsb
roll
ret
daa
js
jne
mov
pushf
pop
test
xchg
pop
aas
fidivs
jl
xor
adc
mov
adc
dec
in
lcall
adc
sub
inc
scas
dec
adc
push
sbb
int3
ret
mov
mov
in
jle
mov
push
pop
push
test
push
fidivs
mov
dec
test
mov
inc
push
dec
mov
xor
aad
mov
mov
sub
mov
cmpsb
xor
aad
mov
ja
pop
mov
out
and
dec
fcom
jbe
pusha
adc
cmp
movsl
pop
and
pop
mov
jle
add
in
sbb
dec
add
push
cmp
or
cs
xchg
ret
inc
cmp
jb
or
jp
sub
out
mov
xor
pusha
mov
popa
jbe
popa
xor
scas
movsb
iret
mov
mov
imul
inc
loopne
adc
ljmp
sub
pop
dec
lods
ret
xchg
js
push
dec
ljmp
loope
cmp
test
outsb
inc
ljmp
std
int
push
inc
insb
das
or
popa
jo
addb
push
push
addr16
aad
stc
inc
push
sahf
lds
cmp
daa
repnz
lea
jg
jp
ja
xchg
nop
adc
and
xchg
push
cs
push
adc
cltd
mov
pop
cmp
cli
mov
insl
jl
fcomps
jl
pop
jo
or
hlt
push
jl
pop
out
or
sbb
lcall
jb
lods
lods
cltd
lret
jne
jecxz
xchg
and
lods
scas
fwait
dec
pop
les
mov
mov
ret
xchg
pop
inc
popf
lretw
js
add
mov
lods
pop
pop
sbb
push
push
outsl
out
or
inc
pop
lods
dec
stc
sbb
pusha
or
lods
into
sbb
mov
mov
cmp
jns
imul
cmc
jns
fisubrl
pushf
icebp
cmp
sub
mov
pop
aam
jnp
sbb
push
insl
xchg
jae
das
daa
push
test
mov
and
mov
jb
sbb
push
jbe
popa
jmp
mov
xchg
or
push
test
insl
dec
inc
mov
push
rcll
rcll
jp
jmp
aas
aas
push
xchg
insl
or
mov
mov
jb
push
sbb
mov
hlt
gs
out
fst
imul
scas
adc
outsl
jns
aaa
jbe
jbe
and
or
cmp
and
push
adc
cli
add
jl
jne
cmc
sbb
imul
stc
mov
mov
mov
xchg
pop
sbb
lock
push
mov
jae
lahf
mov
dec
cmp
out
mov
add
les
dec
daa
addr16
arpl
call
into
movups
into
roll
and
xlat
mov
mov
insl
add
add
xchg
imull
scas
inc
and
mov
inc
lret
mov
test
cmp
and
subl
popa
cmp
pop
movsl
mov
inc
outsb
and
shrb
inc
xor
prefetcht0
arpl
push
jno
jae
hlt
lds
adc
xor
ret
sbbl
inc
xchg
in
xchg
jg
add
cmc
roll
xchg
test
cmp
jle
cmpsb
xor
lds
mov
cmp
pop
xchg
xchg
mov
movsb
shl
push
and
loope
ja
mov
mov
xor
mov
xchg
inc
push
and
lds
stos
inc
lcall
push
fcoml
mov
arpl
mov
ljmp
fs
call
stos
rorl
mov
sub
mov
aad
jmp
sbb
xchg
xchg
or
ja
insl
popa
push
xchg
mov
mov
mov
push
push
scas
pop
sbb
sub
mov
in
repnz
pusha
mov
loope
dec
push
mov
cmp
pop
insb
jl
stos
dec
popa
insb
test
or
mov
push
repz
push
scas
call
xchg
jge
cmc
jae
test
sarb
std
cmp
add
scas
in
adc
imul
sub
daa
lods
fwait
inc
pop
in
jb
ss
sbb
mov
dec
fldpi
loop
ret
jle
int3
mov
lcall
into
mov
and
ret
add
aas
shll
icebp
mov
jl
push
adc
add
push
out
movd
popf
jge
jg
jo
or
test
aaa
fidivrs
shll
in
frstor
test
sub
push
fistl
push
out
xchg
fwait
push
xchg
call
push
daa
iret
add
test
addl
add
pop
pop
mov
sub
das
cwtl
fucomi
sbb
cmp
es
xrelease
test
sub
xchg
ss
cld
jo
pop
jmp
notl
and
pop
mov
sbb
mov
and
fcmovnbe
xchg
cmp
or
jp
faddl
jnp
pop
bound
outsb
dec
mov
sub
pushf
in
mov
out
jne
mov
call
jbe
movsl
daa
or
pop
pop
daa
outsb
imul
cmp
or
push
je
movsb
mov
jg
scas
adcl
out
or
and
push
add
fcoms
fisubl
cltd
cmp
cmp
add
fidivrs
push
mov
fists
xor
jl
arpl
push
rorl
xlat
jb
fsts
mov
popf
sub
push
popf
in
dec
test
loopne
adc
mov
xchg
inc
mov
test
and
lock
lds
jnp
int3
push
mov
mov
movsb
fs
cmp
sti
aaa
mov
sbbb
nop
rclb
fs
xor
dec
inc
push
and
out
in
es
hlt
sub
push
xor
stos
push
ja
xchg
lret
in
pop
cs
dec
or
test
and
sub
cmpsb
aad
int
movsb
xchg
push
test
xchg
cltd
mov
fdivrl
rorl
jp
cs
stc
cwtl
pop
enter
cmp
inc
mov
xor
xchg
pop
fbstp
adc
xor
int3
jb
ljmp
bound
rcl
je
or
inc
jb
dec
in
test
sbb
jp
fbld
pusha
push
xchg
mov
jae
mov
inc
cmp
outsb
xchg
movsb
jns
sbb
or
test
adc
jnp
ret
add
sub
sti
and
test
pop
adc
ja
ja
stos
nop
pop
test
gs
fisttpll
jae
popa
and
int
mov
js
add
mov
ss
lock
xorl
outsl
mov
outsb
aas
cwtl
jns
cld
sub
sub
mov
ret
iret
dec
pop
mov
and
inc
sbb
outsl
rolb
jle
int3
xor
inc
push
ret
xchg
jmp
mov
xchg
dec
ficomps
int
push
push
xchg
scas
and
cld
sbb
push
mov
iret
sub
dec
sbb
inc
bound
fisttpl
mov
jne
cmpl
dec
sbb
cmp
sbb
jbe
insb
add
mov
cli
rcr
jne
xor
test
mov
das
pushf
cmpsb
jge
add
and
and
xchg
adc
dec
adc
mov
shlb
test
inc
testl
jb
xor
inc
prefetch
rorl
pop
xchg
sarb
adcl
popa
mov
cmc
je
push
mov
cltd
cmpsb
imul
aad
and
pop
sub
clc
and
mov
negl
inc
test
lods
xor
or
lea
mov
dec
mov
mov
int3
mov
jecxz
lods
sbb
shl
aaa
sbb
pop
mov
xchg
dec
sub
push
rcrb
mul
dec
jnp
cs
repz
insl
cmp
inc
test
sbb
data16
inc
mov
mov
mov
pop
mov
aad
fsubrl
xorb
and
data16
test
imul
fisubrl
incl
aad
cmp
cwtl
add
popa
adc
mov
push
inc
xchg
outsl
push
stos
inc
cwtl
adc
adc
cltd
xchg
popf
lods
fistpl
xchg
mov
sub
sub
out
sbb
cld
aam
stos
xchg
adc
mov
or
xchg
repz
push
cmpsl
sub
test
outsb
jge
jmp
test
pusha
pop
rcll
jecxz
mov
pop
mov
out
das
push
and
mov
adcl
mov
xor
lods
fisttpl
dec
sub
and
rep
and
dec
pusha
loope
dec
jo
mov
ss
ja
fs
dec
pop
out
mov
pop
orb
mov
rclb
pusha
add
in
mov
loope
add
and
stos
adc
mov
jg
das
sahf
adc
les
jecxz
ljmp
push
mov
mov
cmp
sub
pop
mov
xchg
cmp
mov
xchg
xlat
fcmove
cmpsl
pop
das
fisubs
mov
cs
mov
xchg
loope
insl
mov
aam
dec
shl
add
xchg
stos
pop
notb
mov
aaa
inc
sahf
adc
jb
push
sub
adc
in
in
jge
popa
call
in
lds
addl
push
iret
call
adc
cltd
fdivl
xchg
pushf
cld
cmc
cmp
cmp
adc
xchg
jp
out
inc
and
test
dec
nopl
divb
mov
sahf
pop
pushf
or
cmp
scas
scas
add
adc
shrl
xor
in
xor
imul
arpl
insl
mov
adc
call
inc
test
sbb
jp
jae
jbe
lret
xchg
and
pop
aas
sub
jno
shll
stos
aas
dec
mov
stos
clc
pushf
adc
popa
insl
jp
push
pop
ds
push
or
pop
test
inc
mov
dec
add
jp
out
cmp
push
push
lcall
int
or
adc
or
mov
add
push
rclb
iret
rcrb
std
bound
xor
xlat
inc
jb
sbb
out
add
fistpl
dec
cmp
inc
sub
pop
mov
icebp
jmp
xor
pop
rclb
xchg
insb
push
scas
scas
push
sub
mov
adc
fwait
lea
xchg
es
and
insl
insl
pop
cmp
shl
dec
popa
cmp
out
or
push
and
bound
mov
or
jp
outsl
cwtl
or
roll
push
mov
pop
mov
cmp
sub
sub
and
xchg
rcll
cli
and
or
xchg
loope
mov
rol
rorl
subb
jp
mov
outsb
stos
in
dec
rol
call
mov
sbb
mov
dec
mov
pushf
mov
lea
jecxz
cmp
cmpsl
pusha
push
cmc
xchg
inc
insl
aas
mov
fwait
pop
jns
lahf
gs
lods
mov
out
add
mov
fsubrl
mov
jmp
ljmp
dec
or
addr16
jecxz
pop
mov
mov
adc
shl
es
inc
jle
inc
add
lds
sahf
mov
or
sub
cmp
fs
xorl
mov
mov
dec
rcr
adc
repz
push
xchg
jno
jl
inc
dec
nop
jmp
sbb
xor
dec
sub
cmpb
sbb
mov
xchg
jne
xchg
adc
sbb
outsl
xchg
rcr
sbb
mov
jae
ds
xchg
inc
pop
dec
test
popf
loopne
lahf
xchg
mov
dec
push
shl
int3
cltd
test
xchg
push
cmpsb
cli
dec
jecxz
mov
out
arpl
ret
sbb
daa
and
inc
std
mov
dec
pop
or
and
subb
xor
push
mov
pop
dec
ss
loop
test
cmpsb
shlb
adc
hlt
pop
add
pop
and
daa
imul
or
adc
stos
pop
add
mov
xor
adc
lods
sub
sarb
cld
es
add
pop
mov
ja
mov
jne
cmpsb
mov
pop
mov
insl
jl
cmp
jmp
add
pop
jmp
add
test
jmp
lahf
stc
or
cltd
ljmp
mov
adc
dec
adc
call
sbb
sbb
xor
push
xchg
push
and
pushf
fidivs
and
jmp
jmp
adc
adc
pop
dec
dec
jmp
frstor
lea
dec
in
cwtl
jae
inc
data16
xor
jae
pop
or
shld
stos
dec
jae
adc
std
dec
mov
mov
push
inc
inc
mov
mov
cltd
outsb
dec
push
sti
jmp
pop
mov
adc
ljmp
adc
and
dec
push
test
sbb
imul
mov
mov
inc
lods
adc
sub
lods
dec
jbe
pop
scas
inc
cmp
shll
int
test
push
outsb
xchg
or
loop
shll
das
or
and
lahf
dec
sbb
mov
and
jnp
jle
pop
clc
dec
insb
cmp
xchg
mov
jne
sub
push
les
mov
lds
test
adc
cwtl
dec
or
xchg
dec
hlt
mov
mov
push
inc
mov
fisubl
loopne
inc
push
dec
push
mov
repnz
jp
enter
cltd
sub
pop
dec
add
push
ja
stc
dec
pop
ret
lock
mull
push
mov
repz
inc
sub
add
jg
dec
xor
enter
stos
test
out
sbb
or
dec
lret
sbb
or
cmp
ds
out
mov
scas
xlat
sbb
cld
push
mov
xchg
idivb
bound
cli
push
jg
cwtl
xor
mov
sub
das
push
sbb
sbb
mov
cltd
stc
mov
mov
push
sti
inc
mov
movsl
inc
pushf
jb
mov
push
or
aas
ljmp
mov
xchg
xor
leave
leave
and
cs
pop
es
or
jge
sub
out
les
mov
outsl
sub
jecxz
out
add
or
fisttpll
nop
mov
mov
in
rol
test
je
adc
and
xor
mov
in
in
mov
mov
cmpsl
ret
sbb
les
data16
mov
pop
fmull
push
jp
les
add
push
aam
adc
mov
lods
movsl
dec
fcomi
add
fistpll
cltd
lahf
clc
lods
aaa
scas
fsts
outsb
mov
imul
cs
insl
cli
call
sti
cmc
test
stc
test
js
pop
mov
stc
scas
push
adc
pop
cmpsb
mov
repz
cmp
adc
jns
cmc
push
mov
add
and
jb
ficompl
add
pop
scas
inc
add
fnstsw
xor
pop
mov
nop
inc
mov
xchg
inc
pop
or
inc
dec
aas
sbb
xchg
orb
pop
lret
imul
push
mov
xchg
std
cli
fbld
ja
pusha
lds
incb
jmp
mov
repnz
cwtl
mov
sarb
adcl
cmpb
idivb
sub
inc
andl
stos
jle
imul
xlat
leave
push
add
cmpsl
arpl
jno
in
repz
adc
aas
mov
pop
xor
add
jl
sbb
cld
or
push
sbb
jne
repz
insb
popf
push
bound
in
jae
mov
addl
es
into
hlt
xor
fwait
idiv
cmpsb
bound
hlt
dec
mov
sbb
xchg
lcall
mov
cmpsl
push
fucomip
push
out
mov
les
jne
fcmovnbe
mov
mov
mov
inc
ljmp
sub
lahf
push
inc
mov
dec
cmp
out
cmp
mov
ss
jbe
mov
in
ss
cmp
cmc
cli
xchg
add
fs
push
or
pop
and
andl
sub
aas
insb
test
shrl
xchg
and
sub
gs
push
mov
cmc
rclb
push
lret
jno
lea
fwait
mov
cmp
dec
notb
xchg
fisubrl
push
lret
dec
jmp
jb
cmpsl
add
cmp
cmpsb
in
push
outsb
pop
imul
xchg
add
sbb
xchg
stos
and
pop
dec
pop
shrl
push
mov
sub
leave
stos
push
jns
das
fisubs
pop
dec
xchg
jae
cmpsl
xlat
movsb
gs
fdivp
out
jl
cmp
ret
scas
in
jmp
dec
sub
int3
adc
push
aas
outsb
out
les
cli
mov
lea
lcall
jmp
pop
dec
xor
bound
mov
loope
js
mov
mov
xchg
lahf
adc
movsl
cmp
scas
pop
pop
xchg
or
mov
and
sar
push
push
mov
sbb
or
cwtl
xchg
dec
fistps
push
stc
movsl
pop
mov
jle
call
lock
mov
jo
mov
std
in
popa
xchg
jl
inc
jmp
sub
ds
or
lcall
in
ja
pop
sub
enter
mov
mov
or
mov
mov
or
jb
lea
mov
je
jmp
push
mov
add
pop
sub
xlat
xchg
mov
movsl
add
sub
aad
or
stos
mov
inc
xor
cld
push
mov
sub
jmp
cld
cs
sub
jbe
out
adc
outsb
rorl
rcr
aam
int
pop
cld
mov
leave
adc
jo
lds
loop
ret
mov
jnp
pop
in
dec
movsl
add
imul
xchg
add
mov
es
jae
add
cmp
inc
lret
xor
sbb
and
jae
inc
xchg
dec
mov
pop
sbb
mov
cmp
pop
mov
andb
cld
into
cmpsl
int3
dec
cmp
loop
push
jge
pop
push
divl
out
xchg
add
push
mov
sbb
jae
jb
cli
push
hlt
fimuls
test
add
aaa
mov
cwtl
out
sbb
mov
mov
sub
das
call
cmp
dec
push
scas
mov
jg
aam
loop
arpl
xlat
loop
fwait
dec
shl
mov
lret
ja
lcall
repz
or
and
outsb
popl
movsl
lock
lods
fucomi
mov
cmpsl
sbb
push
xchg
xchg
adc
mov
xor
enter
bound
test
scas
sar
aaa
jae
mov
add
jge
enter
in
sub
mov
imul
mov
addr16
add
loope,pt
sbb
mov
repnz
and
in
xchg
push
into
jp
sub
fcomp
fildll
aaa
rclb
jne
mov
mov
xor
pop
andb
bound
popf
loope
push
or
mov
inc
popw
imul
push
lock
mov
pop
je
inc
inc
fstps
test
pop
int3
imul
xor
into
jge
mov
pusha
loopne
or
and
stos
cmpsl
xchg
inc
dec
sti
jbe
xchg
push
adc
xchg
pop
adc
dec
dec
rolb
xchg
ss
push
imul
cs
fwait
xor
adc
pop
push
lret
dec
fisttps
or
pop
imull
lea
int3
aaa
rcl
bnd
mov
outsl
lea
rcrl
xchg
int
xchg
fimuls
mov
lcall
je
sbb
push
shl
mov
jp
inc
xor
adc
xor
lret
mov
popf
or
in
xlat
or
scas
xchg
mov
stos
pop
xchg
out
mov
add
jne
aad
and
out
std
out
mov
and
push
and
fwait
or
aam
rclb
mov
loopne
pop
push
pusha
add
pop
pop
icebp
not
fwait
push
inc
xchg
icebp
xchg
or
xor
cmp
sub
xor
leave
or
dec
add
enter
mov
nop
lcall
out
arpl
cmp
addb
stos
adc
lods
negb
lea
jmp
and
or
and
push
jl
inc
mov
test
inc
inc
xorb
xchg
test
pusha
out
xchg
test
mov
adc
je
addl
xchg
mov
lret
mov
mov
pop
lods
andl
sarb
or
icebp
or
pop
push
pusha
ret
clc
rcll
mov
fadds
aas
xchg
inc
insl
pop
adc
push
dec
test
mov
mov
popa
mov
jb
inc
jg
mov
xor
mov
push
dec
ljmp
or
stos
mov
out
mov
inc
jo
cli
mov
aaa
push
xor
and
fnstenv
loopne
push
pop
mov
sub
jb
out
mov
stos
pushf
vaddpd
leave
add
lcall
sbb
orb
ret
outsl
mov
cmp
inc
stos
mov
das
outsl
call
mov
lcall
fdivp
dec
aad
repnz
xchg
mov
lds
xchg
popf
ljmp
cmc
js
pushf
pop
dec
pop
fcmovnbe
pushf
pusha
xchg
jp
std
out
dec
out
and
cmpxchg
test
dec
fstl
cmc
jnp
int
loope
jmp
fstl
inc
iret
movsl
push
dec
xchg
xchg
loop
std
movsl
adc
jne
push
sbb
popf
dec
cmp
icebp
sub
in
sub
pop
xor
dec
and
sub
adc
adc
jbe
mov
popf
lds
popf
call
lea
mov
jle
lock
cmpsl
xchg
adc
fcomip
outsb
inc
and
xor
pop
pop
or
lea
mov
insl
push
imul
jp
mov
add
add
xor
push
add
sahf
leave
mov
cmp
add
lds
fsub
mov
add
pop
cmpsl
xchg
stos
dec
fiaddl
xor
stos
mov
cmp
jmp
push
testl
test
jbe
jl
inc
ss
jnp
es
stos
push
aam
repz
sub
lahf
pop
push
and
push
fwait
bnd
imul
ljmp
loopne
out
mov
add
inc
pop
inc
fisttps
loop
loopne
cmpsl
aam
push
lret
aas
mov
test
push
xchg
push
fwait
or
push
gs
mov
push
dec
jae
jno
mov
inc
xchg
test
in
push
das
xchg
adc
jg
jp
lret
out
lods
arpl
sbb
andl
sahf
das
cmpsb
fbld
fwait
adc
cwtl
cmp
push
pop
cmp
lcall
mov
pop
andps
insl
and
lret
ret
call
loope
jp
leave
iret
jecxz
jno
syscall
adc
ret
jmp
ret
add
in
aad
inc
push
fisubrs
add
cmpsb
ficomps
in
dec
cwtl
imul
vsubps
in
xchg
pop
setne
inc
testl
aam
aad
push
es
cmp
insl
cmc
pop
cmp
sub
xor
cmpsb
jb
sbbb
les
sub
add
aas
jg
fcoms
push
les
les
sub
addl
sbb
cld
inc
popa
ficomps
js
sahf
or
das
js
sti
mov
jo
cmp
loop
sub
shl
mov
dec
out
sar
xor
add
pop
fadds
pushf
push
adc
sub
adc
addr16
xchg
roll
clc
jo
leave
cld
mov
pop
mov
lea
idivb
mov
loope
mov
and
sub
push
inc
inc
stos
mov
sub
insb
test
mov
pushf
ljmp
pushf
iret
outsb
adc
push
imul
cli
insl
lcall
sub
in
rorb
sbb
jno
adc
imul
xor
xor
std
aas
les
jae
call
sbb
lret
mov
mov
insl
pop
mov
and
clc
add
jbe
lret
aas
insl
sbb
inc
lahf
gs
into
or
fwait
and
jae
mov
rcl
mov
cmp
inc
and
into
xchg
ss
cld
jns
addl
icebp
stc
incl
cmp
add
dec
mov
lret
cmovno
aaa
push
out
popa
fcoml
insl
sbb
mov
outsl
dec
mov
daa
add
cmp
cmc
clc
adc
jb
mov
fldl
stos
outsl
sbb
push
lds
iret
mov
push
scas
sbb
dec
repz
aam
aam
pusha
sub
sub
mov
push
shlb
push
adc
cmp
aaa
mov
push
jle
dec
xor
and
rcll
xor
lcall
jmp
out
xor
jge
cmc
aam
xor
stos
xchg
xchg
and
cmp
push
mov
out
mov
xor
dec
or
or
sti
loopne
xchg
loope
dec
push
add
jb
cltd
dec
mov
mov
or
mov
xchg
adc
movsl
call
cld
inc
mov
arpl
cmp
cmp
mov
mov
inc
das
test
in
mov
jnp
mov
dec
sbb
shlb
fisttps
out
stc
repnz
sub
leave
and
xchg
ret
xor
mov
std
cmp
push
push
dec
inc
fnstenv
push
mov
push
add
cwtl
aam
movsl
jae
pop
insb
dec
loopne
pop
fidivrs
stc
das
hlt
jae
in
push
std
sub
es
int3
iret
mov
cld
xchg
fidivrl
add
push
sbb
sbb
xor
mov
or
dec
xchg
jbe
inc
mov
popl
nop
jae
jne
mov
dec
xchg
cmp
jb
add
xchg
and
loope
push
jle
adc
bound
xor
pop
mov
aaa
andl
test
xchg
movsb
mov
xor
xchg
sbb
inc
inc
sbb
or
loopne
clc
pop
add
inc
xchg
fisubs
push
mov
or
test
fisttps
sbb
xlat
push
or
mov
xor
aam
cmpsl
xlat
out
or
insl
les
or
jmp
sub
xchg
cmc
pop
adc
ret
out
and
sub
call
lcall
testl
jp
xchg
ljmp
jne
adc
dec
cmp
mov
idiv
cwtl
loop
jae
sbb
je
loop
adc
jp
int
mov
lea
loop
mov
lahf
xchg
cmpsl
jno
xchg
call
lds
add
imull
or
pop
cmp
mov
out
xlat
dec
lcall
icebp
adc
jne
outsb
jo
inc
lret
mov
xor
insb
loop
fsubl
lret
sub
imulb
out
int3
or
sbb
mov
jno
cmpsb
jno
inc
adc
hlt
dec
dec
out
int3
mov
xchg
jnp
fs
mov
xchg
out
jl
mov
sbb
xor
add
xchg
int
xlat
and
xor
gs
mov
fadd
xor
stos
cmp
xchg
add
jge
pushf
ret
cmc
loope
pushf
testb
inc
aam
sbb
repz
adc
ficoms
pop
stos
outsb
jmp
call
and
in
xor
ljmp
xor
in
sti
lock
out
cltd
sbb
mov
mov
sahf
dec
imul
xchg
out
or
mov
dec
shll
outsl
jle
dec
iret
cmc
mov
inc
dec
je
jno
mov
cmpsb
popf
xchg
xchg
mov
jmp
fnstcw
mov
mov
scas
stc
dec
and
cli
sbb
adc
orl
push
icebp
cmp
inc
fwait
or
jmp
out
sub
js
out
loopne
aaa
mov
add
or
shrb
leave
movsl
lock
arpl
xor
mov
mov
xchg
sub
fsts
cmc
pop
mov
dec
mov
add
jg
mov
pop
call
xor
pop
cmp
orb
sbb
xor
fnstsw
mov
shl
sub
divb
and
sub
mov
jns
ret
imull
add
jg
cmpb
mov
add
aas
xchg
aaa
xchg
pop
movsb
mov
repnz
lea
or
push
cltd
cmpsb
leave
sub
in
cmp
inc
mov
adc
stc
mov
push
pop
or
mov
cwtl
lahf
sbb
cltd
add
push
in
gs
xor
xor
pushf
xchg
pusha
hlt
add
jb
jp
test
inc
icebp
dec
xlat
mov
mov
push
mov
fistps
sbbl
sahf
sub
cmp
inc
add
and
mov
jo
btc
popa
pop
mov
jg
sub
repnz
jbe
mov
test
jmp
xlat
mov
insl
fwait
icebp
or
in
or
es
inc
mov
push
rcrb
scas
call
and
dec
push
mov
ljmp
aad
dec
pop
and
addr16
aam
jb
std
gs
lds
jno
mov
pop
add
mov
push
mov
mov
enter
jo
repz
and
jle
in
adc
out
hlt
inc
or
fs
xor
in
and
or
or
mull
lret
test
jno
inc
jge
jnp
pushf
aam
ret
jp
pop
jg
jge
and
push
stos
popf
mov
pop
sbb
mov
pop
mov
sub
jbe
fisttpl
xor
mov
cmp
inc
popa
push
testb
lods
inc
in
sbb
xchg
dec
icebp
mov
xchg
jo
in
mov
loope
aas
fstl
xor
sahf
out
inc
xor
jg
xchg
push
xor
outsb
lret
scas
sahf
push
addl
push
push
jecxz
std
jb
or
insb
ljmp
ljmp
push
cwtl
ss
mov
sub
sub
cltd
lock
nop
inc
pop
xor
incl
lcall
push
jne
aaa
pop
cmp
sbb
push
sub
inc
sub
xchg
xor
jne
cmp
ffree
add
cmc
fwait
inc
shll
in
leave
adc
adc
xchg
in
pop
pop
cmc
pop
xchg
stos
xchg
jmp
hlt
mov
sub
jmp
iret
sub
jg
mov
bound
cmpsl
sub
add
or
inc
lcall
cltd
cmp
mov
push
push
dec
fldl
call
out
fisttpll
pop
scas
push
mov
or
ret
or
dec
mov
adc
outsb
adc
jb
pop
add
cltd
cmc
adc
xor
dec
inc
cmp
int
push
pop
push
inc
adc
jg
lahf
add
xchg
add
push
test
aaa
addb
pusha
jnp
jbe
fsubs
lahf
pop
mov
dec
jns
imul
pushf
inc
imull
inc
or
jae
sub
sbb
iret
aam
daa
mov
loope
push
imul
test
sbb
jge
add
call
test
cmp
lds
sub
pusha
xor
gs
insl
out
sar
xchg
nop
cmp
and
lods
cmp
mov
xchg
xchg
enter
add
js
adc
stos
xor
sub
jne
loopne
idivw
mov
cmp
jno
add
repnz
mov
mov
mov
mul
mov
lods
dec
lock
mov
js
std
xchg
sub
pop
xorl
loopne
leave
fildl
xchg
ret
push
lea
addl
adc
nop
jge
and
adc
sbb
lock
mov
jp
ret
jmp
sub
shl
pop
sarl
test
cmp
push
sub
push
mov
jno
stos
aam
adc
xchg
cmpsb
pop
fbld
enter
mov
sub
mov
sub
push
adc
sbb
inc
ja
mov
ss
xor
add
jge
inc
xlat
xorb
inc
sub
cli
loopne
pop
cmp
mov
jge
inc
jle
mov
dec
in
sub
add
mov
and
mov
inc
pop
outsl
pop
stc
sub
test
popf
mov
lock
adc
xchg
dec
stos
adc
div
mov
movb
arpl
mov
neg
pop
cs
bound
shll
negl
out
movsb
dec
icebp
fisttpll
in
mov
xchg
cwtl
fwait
sub
call
dec
mov
addr16
jo
daa
mov
lahf
and
push
adc
jecxz
and
push
pop
xchg
xor
sbb
inc
push
lea
les
and
jno
cmp
rcl
sti
xchg
ljmp
ds
mov
popf
sbb
mov
into
mov
aam
loopne
repnz
and
iret
xorb
inc
sahf
dec
sbb
js
cmp
fildll
loopne
rcrb
mov
fs
ss
movsl
lcall
xchg
mov
xlat
sub
xorl
jb
pop
gs
cmp
push
and
test
outsl
dec
add
sbb
inc
adc
in
enter
xchg
inc
adc
sub
push
sub
out
or
mov
mov
inc
punpckhdq
mov
pusha
nop
dec
dec
pushf
fstl
aad
cmpb
and
jnp
push
adc
lcall
sbb
and
pop
sbb
fadds
jmp
xor
out
jmp
nop
and
add
iret
decb
inc
mov
insb
jae
std
xor
adc
adcl
cmp
movsl
mov
repz
out
sub
mov
xor
mov
dec
subl
mov
add
jae
lods
std
popf
fs
sbb
cmc
jbe
add
dec
or
xchg
sti
stos
out
sbb
rol
andl
in
push
addr16
test
ljmp
nop
pop
lds
inc
sub
mov
sub
jle
adc
cs
rcpps
mov
xchg
shrl
adc
bound
push
jne
push
arpl
jmp
lea
or
repz
neg
lods
xor
xor
jle
mov
out
out
sub
arpl
xor
add
mov
hlt
outsb
lock
and
fs
cmpsb
cmp
or
mov
mov
pusha
imul
nop
in
stc
push
arpl
sbb
add
xchg
insb
inc
rclb
sarb
int
in
in
mov
insb
into
adc
icebp
xchg
test
aam
lock
into
inc
sbb
mov
aaa
sub
dec
push
pop
ds
jle
inc
movb
movsl
test
mov
int3
inc
sbb
aas
jge
mov
cli
popa
sub
das
lods
jp
jno
inc
jl
popf
mov
pop
loop
test
xchg
cwtl
fcoms
cmp
mov
lds
outsl
jle
mov
test
rclb
mov
jmp
cld
jne
mov
pop
pop
sti
bound
jle
xor
loope
pop
mov
add
jmp
mov
imulb
cltd
mov
out
shll
push
xchg
inc
jne
sbb
pop
mov
rcrl
lods
aad
hlt
stc
mov
and
aad
lock
push
popf
faddl
ds
mov
mov
or
fldenv
push
fs
add
mov
lret
push
jmp
std
out
inc
icebp
das
jl
mov
or
iret
adc
repz
xor
std
dec
mov
arpl
sbb
scas
or
mov
in
jne
pop
outsb
cmp
sub
jns
push
int
daa
mov
insb
outsl
xor
cmc
test
cmp
xchg
mov
cmp
add
pop
push
dec
xor
sbb
subl
dec
cmp
lock
out
test
ret
mov
jae
aas
daa
loopne
aaa
shll
aam
jge
fcmovnb
out
imul
jge
jg
sbb
lea
mov
rcll
imul
and
sub
cmp
sbb
jmp
es
ljmp
mov
xor
popa
push
loop
popa
xlat
aam
sub
mov
neg
lods
leave
sarl
cs
idivb
xchg
fwait
sbb
in
add
jge
add
aam
faddl
push
in
adc
call
jne
xor
sub
push
inc
test
add
insb
test
icebp
ljmp
push
outsl
cld
cmpsb
stc
nop
aas
les
out
loope
push
cltd
fcoms
lods
mov
rcrl
imul
sub
mov
sub
cmpsl
dec
lods
add
dec
and
fnstcw
sbb
inc
cld
dec
lds
xor
jno
pop
xor
icebp
test
movl
cmp
pop
repz
mov
lds
sub
mov
fidivrl
pop
std
stos
push
ret
pop
aaa
popa
sti
inc
and
outsl
arpl
lods
lret
xor
arpl
mov
pop
jp
jmp
mov
jnp
jbe
inc
lock
jno
int3
cli
xchg
cli
jb
dec
pop
stc
pop
xor
std
into
and
push
aas
jno
or
mov
and
cmpsl
test
js
test
cs
sub
cwtl
and
aas
cmc
pop
mov
jnp
enter
adc
pop
xor
add
and
lods
pop
push
sbb
lahf
aas
xchg
pextrw
insb
mov
popa
hlt
insb
push
out
and
addl
and
jbe
sbb
push
inc
std
inc
jo
push
aas
sar
stc
call
pop
cwtl
dec
dec
xchg
dec
ret
enter
sub
out
pop
jle
jne
add
imul
cmpsb
xchg
xchg
pop
mov
test
mov
into
gs
outsb
popf
call
pop
ror
addps
shl
sbb
mov
mov
out
xchg
les
mov
test
jne
imul
add
ret
jne
mov
jbe
sbb
push
mov
outsb
sub
push
xchg
jno
pop
sbb
repnz
daa
jnp
adc
jle
sub
in
add
sbb
movsb
or
rolb
cltd
das
lods
dec
jne
or
out
int
jmp
insb
in
sbbl
fildl
cs
or
xchg
sbb
mov
hlt
int3
add
jo
xor
outsb
xchg
in
mov
sub
jge
sub
bound
dec
mov
mov
repz
xchg
adc
mov
or
fsts
xchg
lea
sbb
xor
ss
js
shl
nop
ret
repnz
rcrl
pop
iret
ret
pushf
test
push
xorl
lods
inc
mov
lcall
cmp
in
ficoml
mov
xchg
add
lcall
lcall
xchg
adcb
fidivrs
adc
outsb
lret
in
insl
loop
and
scas
cmpsb
add
jp
jl
mov
gs
cmp
cmp
fistps
je
lods
aas
push
test
sub
insb
mov
mov
out
fdivrl
adc
movsb
call
rep
xchg
out
sahf
sbb
jne
out
mov
pop
mov
out
sbb
pop
idiv
jp
movb
inc
popf
test
xchg
aaa
rclb
push
lods
mov
daa
lea
dec
lcall
out
imulb
mov
loop
out
mov
add
enter
cmp
fcmovne
fs
push
adc
mov
setnp
ffree
addr16
pop
sti
ret
scas
enter
or
pop
in
xor
inc
inc
mov
add
push
adc
cmp
mov
mov
cmp
adc
fldl
pusha
or
ss
stos
xchg
insl
or
cmc
push
and
pop
ds
test
and
lock
rcll
call
and
stc
cmp
and
es
adc
outsb
mov
xorl
jns,pt
aas
mov
lea
jp
out
and
cmp
scas
add
fs
mov
fldl
pop
pop
mov
mov
inc
xor
mov
cmp
sub
bound
dec
add
je
push
call
imulb
mov
pop
cmp
sbbl
loopne
sarl
jle
in
cmp
inc
dec
ret
and
jnp
ljmp
or
imulb
into
xlat
sbb
xchg
xor
mov
mov
pop
pop
insl
stos
cmp
test
jbe
popa
movswl
bound
es
ret
out
pusha
push
gs
push
pop
dec
fisttpl
mov
xchg
xchg
adc
cmpsb
jge
jb
xchg
cmp
ficoml
mov
mov
mov
popf
insb
adc
add
inc
mov
aad
ffree
xor
adc
fyl2xp1
jno
xor
sbb
push
enter
mov
cs
shrb
mov
ja
jp
fimuls
es
fidivs
rcrl
push
xor
mov
mov
arpl
jnp
adc
movsl
lret
and
add
push
movsb
andb
pop
inc
mov
mov
out
daa
sbb
push
pushf
add
sub
les
pop
cmp
scas
dec
add
daa
ss
in
jb
out
adc
es
pop
cmp
pop
xchg
lock
cmp
xchg
pop
fidivs
jmp
sbb
push
out
mov
mov
push
out
mov
adc
sbb
inc
dec
and
mov
jns
mov
cmp
jecxz
loope
ss
mov
xor
adc
filds
add
cmp
mov
pop
pop
mov
xor
call
or
mov
icebp
lret
jne
shrl
pop
js
mov
dec
xlat
daa
jnp
adc
aaa
dec
xchg
inc
andb
and
push
xor
in
adc
adc
lret
in
shlb
cmp
push
adc
pop
or
lcall
andl
std
sbb
pushf
push
jge
inc
fisubl
push
sub
jmp
adc
mov
sbb
dec
std
das
inc
jmp
sbb
outsl
add
cmp
ficoms
and
leave
mov
xchg
jbe
lret
xor
xor
int3
mov
and
imul
rolb
lret
imul
stos
push
sub
mov
sbb
push
or
jle
call
es
and
dec
mov
jecxz
mov
dec
imul
out
cmpsl
inc
inc
inc
sbb
shrb
push
add
jbe
cmp
sub
out
jo
xchg
hlt
movsl
inc
dec
std
test
shll
cwtl
fidivrl
push
hlt
jb
mov
ss
dec
pop
xchg
shrb
mov
add
shlb
mov
dec
cmp
adc
or
sbb
test
push
lahf
stc
daa
out
outsl
lahf
mov
sbb
inc
leave
mov
xor
iret
popf
add
es
pop
xchg
lods
and
fidivs
mov
insl
fiadds
push
or
inc
sbb
push
mull
push
out
pushf
daa
jmp
shr
mov
or
cld
mov
stos
push
out
cmpsb
dec
movsb
cmpsl
sbbl
scas
xor
inc
mov
push
mov
loop
int3
adc
cmp
leave
jne
and
insb
mov
or
add
pop
in
or
inc
jae
cld
xor
mov
jbe
push
in
stos
and
out
movsl
jge
mov
cld
lcall
sbb
jge
test
xor
dec
xlat
arpl
fs
xchg
ja
in
idivl
ret
push
js
clc
jb
sub
dec
loopne
inc
ja
push
jmp
rolb
loopne
pop
dec
dec
add
jecxz
ret
out
and
nop
sbb
cmp
std
mov
xor
xchg
jnp
ret
xchg
repnz
push
jno
imul
les
xchg
mov
cmpsb
dec
leave
in
sbb
ss
mov
iret
pop
jg
or
cmc
mov
add
mov
lahf
repnz
repnz
fdivrs
pushf
icebp
pop
xor
push
mov
jae
es
or
adc
lret
inc
cmp
inc
cmp
xor
add
lods
jl
ret
loope
lret
mov
repnz
add
rorl
xor
cld
sarb
cmp
mov
std
xor
out
pusha
lods
adc
or
cmpb
adc
mov
cmpsl
loopne
cmp
sbb
ret
push
lods
or
xchg
mov
mov
clc
es
ret
aam
rclb
push
jns
pop
lret
popl
fdivr
popa
or
arpl
add
xor
pop
pop
inc
pop
int
xchg
pushf
jg
stos
xor
aad
add
sub
notb
mov
cmpsl
addr16
adc
ret
pop
push
lods
aam
jnp
arpl
and
js
and
jnp
xchg
cmp
dec
xchg
jbe
mov
gs
aaa
cli
sbb
pop
mov
mov
mov
or
hlt
repz
pop
icebp
ret
iret
out
push
mov
mov
lret
mov
dec
std
inc
lahf
in
or
mov
in
mov
ja
pushf
mov
cmp
xchg
push
pop
mov
mov
jo
mov
or
fstl
push
loopne
arpl
xchg
shl
mov
dec
pusha
add
divl
mov
or
cs
pop
enter
push
push
fsubrl
jae
cmp
or
sub
repz
cwtl
es
cltd
dec
mov
loopne
jecxz
or
dec
pop
cmc
insl
cmp
into
jg
daa
enter
subl
ljmp
sbb
mov
loop
jmp
test
pop
fmuls
fcomps
cmp
mov
xor
fisttps
jb
add
out
nop
loope
and
pop
int3
and
pop
xchg
shll
xchg
sbb
ljmp
adc
or
or
sbb
inc
fisubrs
pop
cwtl
scas
sbb
cmpsl
iret
add
lock
jle
push
outsl
cmp
inc
jge
xor
inc
in
out
leave
popf
insl
and
sbb
and
mov
adc
adcb
stc
add
cmp
clc
or
cmp
shll
and
inc
lret
pop
mov
pop
out
inc
xor
mov
xchg
pop
hlt
insb
std
aad
xor
inc
push
pop
mull
repnz
or
sbbl
push
scas
dec
ja
push
sbb
pushf
mov
popf
cltd
arpl
sub
and
std
shlb
pop
fdivrs
out
fldln2
mov
or
shll
xor
scas
test
dec
inc
in
es
mov
sbb
lret
xor
fnclex
push
inc
pop
bound
testl
add
jno
xchg
dec
test
loop
not
sub
xchg
adc
test
pusha
push
movsb
cld
or
aaa
add
movsb
and
or
loop
or
dec
out
rcr
sbb
das
push
sbb
leave
clc
adc
lcall
inc
ds
je
jmp
fs
mov
xor
call
rcrb
stos
and
call
mov
sub
test
push
jns
mov
cmpsl
sub
out
dec
call
cwtl
imul
jmp
ret
cmpsl
addr16
xor
aas
push
dec
adc
ficoms
popf
ja
mov
adc
mov
imul
shrb
cld
js
mov
and
xchg
push
inc
inc
sahf
xor
and
cmp
imul
shll
mov
push
xor
xchg
pushf
cltd
mov
sub
sub
push
sub
pop
or
lods
sbb
hlt
mov
lods
xor
mov
outsl
or
cmpsb
test
cmc
push
clc
outsl
cmp
adc
lods
ds
enter
mov
dec
and
push
jbe
mov
test
xchg
push
das
cmp
filds
ret
lea
into
inc
push
inc
jo
fldt
dec
jnp
cmc
xchg
js
test
xor
pusha
outsb
push
out
push
aaa
int3
ss
cmc
push
in
xor
jmp
enter
scas
mov
gs
and
push
int
btr
insl
pushf
and
int
filds
jecxz
push
movl
inc
je
cmp
cmp
pop
ret
cli
adc
sub
int
jmp
adc
movsb
enter
outsl
inc
push
adc
das
adc
popa
jbe
leave
insb
inc
insb
xor
jmp
lods
pop
stc
pop
int
fildll
push
dec
fldt
jbe
mov
adc
fstpl
enter
mov
lds
testb
xor
cmp
mov
add
pop
push
fwait
testb
test
xor
and
xlat
mov
sub
push
xor
dec
stos
jg
leave
or
mov
inc
mov
and
in
jbe
xor
sbb
iret
push
jb
add
and
push
dec
icebp
mov
jo
stos
xchg
sub
mov
movl
mov
notb
sub
xor
aam
decb
out
adc
fcoms
bnd
sub
mov
xchg
xlat
jecxz
rorl
add
int3
mov
pop
outsb
cli
fs
scas
sbb
sbb
aad
sbb
xchg
xchg
mov
xor
insl
inc
jae
sbb
out
inc
mov
xchg
das
js
inc
lea
add
aam
inc
xor
pop
cld
in
mov
in
adc
inc
lods
sbb
loopne
insl
adc
jg
or
push
fldt
int3
cmp
sbb
in
cmp
popf
lea
push
cld
adc
clc
cli
movsb
ja
push
pop
pop
xchg
bound
mov
xchg
mov
lcall
mov
adc
cmp
sbb
fidivs
pusha
fisubrs
add
dec
stos
jge,pt
lods
sti
push
mov
mov
push
push
xchg
pop
lret
mov
mov
xchg
xchg
jge
movsl
cmp
pop
xchg
je
int
lea
lock
je
cmp
je
arpl
call
iret
mov
ds
sub
out
mov
or
insb
add
cmp
orb
pcmpgtd
mov
cmpsl
xchg
mov
inc
mov
push
or
outsb
jno
insl
ret
aad
adc
inc
nop
sub
pop
pop
adc
mov
icebp
sub
mull
cltd
xlat
xor
jnp
stos
in
shlb
cld
sbb
sbb
xchg
inc
rcr
cmpsl
sbb
pop
out
iret
fnstenv
les
std
adc
xchg
into
dec
aad
aam
adc
xchg
adc
daa
mov
movsb
sbb
lds
addl
jle
repz
push
sub
dec
in
push
fcomip
jmp
xchg
nop
repz
aam
insl
lea
and
fcmovnbe
test
imul
push
cltd
mov
cmc
push
mov
and
rcr
xchg
and
push
mov
mov
mov
inc
das
pop
imul
loope
subb
dec
cmp
jb
aad
dec
inc
xchg
in
inc
pop
adc
dec
sbb
sub
cltd
mov
push
pusha
push
icebp
ja
insl
fldcw
xchg
pop
ja
ffree
sub
icebp
dec
daa
sub
scas
dec
int3
cmp
shr
xor
js
cltd
dec
mov
add
adc
adc
cs
fstpl
mov
sbb
mov
movsb
aaa
push
ja
cld
adc
fs
movsl
mov
ss
cmp
jl
testb
aad
xchg
push
mov
or
mov
pop
mov
pop
test
movsl
push
inc
into
jnp
sbb
and
orb
ja
pop
sbb
jg
cmp
xchg
in
rolb
leave
mov
jge
cld
sbb
in
mov
out
xchg
adc
xchg
pop
fistl
adc
sbbb
lret
adc
icebp
cmp
shl
out
ret
in
push
xorl
decl
and
cmpsl
pop
dec
scas
nop
and
test
pop
loop
pop
out
mov
ret
dec
test
adc
filds
sub
or
lock
addr16
sub
jl
xor
adc
pop
fs
inc
pop
out
mov
mov
lods
adc
rclb
bound
in
pushf
addr16
sub
test
shll
les
sbb
dec
repnz
ja
xor
jae
test
and
xlat
icebp
insb
loop
cltd
pusha
popf
push
out
cwtl
push
mov
cld
push
inc
and
and
sub
je
fidivrl
mov
fldl
xor
dec
pop
pop
imul
test
addb
ror
fcomps
dec
cmpsl
mov
dec
js
call
cmp
mov
add
and
push
loope
mov
or
inc
sbb
xor
cmpl
sub
dec
in
mov
out
std
rolb
das
mov
pop
mulb
out
int
mov
ds
or
sbb
mov
sbb
or
ret
mov
in
int3
cwtl
pusha
std
fistpl
pop
jb
jne
adc
push
stos
ss
and
xchg
aaa
mov
ror
and
andl
gs
jg
jl
incl
sbb
pusha
xor
fwait
inc
pushf
push
pop
lods
lods
pop
lods
xchg
jecxz
sbb
and
mov
ss
insb
xor
mov
xor
aas
push
rcll
loop
sbb
mov
outsb
pop
mov
lret
pusha
in
movsb
mov
test
sub
jne
and
ljmp
jno
xchg
test
fsubl
xchg
insl
xlat
pop
push
xorl
inc
sbb
push
jmp
xbegin
push
cmpsb
or
cmpb
mov
int3
cmc
inc
bound
lods
dec
call
test
mov
jmp
adc
cltd
addr16
aam
xor
push
ret
cmc
mov
fstpl
sub
gs
pop
fstpl
mov
lea
ljmp
es
sub
in
das
or
adc
iret
test
or
xchg
add
test
fbstp
dec
fs
fdivrs
dec
pop
cmp
test
cs
sbb
and
fiaddl
push
push
jnp
ret
and
filds
ljmp
sub
cltd
xor
adc
sbbb
test
in
test
testb
push
fsubl
dec
lahf
pushf
cmpsl
lahf
loopne
add
pushf
xor
jns
out
lahf
xchg
mov
fiaddl
aaa
dec
fptan
inc
mov
fsts
pop
addr16
xor
aaa
ret
leave
shrb
mov
pop
popa
mov
cmp
fistpll
sub
inc
in
in
pop
pop
mov
pop
sti
int3
rolb
rolb
mov
push
pusha
sub
test
xchg
jae
movl
xchg
mov
jmp
sub
pop
loope
mov
or
imul
pop
xlat
or
fldt
lods
sub
sub
add
loope
adc
dec
or
hlt
loope
mov
cli
repz
and
xor
lret
js
pop
cmpsb
inc
nop
ret
mov
fidivrs
ds
lds
cs
out
adc
pop
loope
cmp
je
stc
aam
inc
mov
ds
mov
in
mov
fidivrs
test
ret
call
pop
mov
bound
xchg
out
mov
xchg
in
repz
sub
dec
sbb
mov
pushf
outsb
pop
pop
lgs
add
fstpt
dec
test
sbbl
xchg
cmp
mov
mov
fs
pop
pop
hlt
rcr
arpl
shl
hlt
aaa
xorb
outsl
hlt
sbb
adc
sbb
popf
insl
and
mov
pop
daa
xchg
cmp
fistpl
sbb
in
bound
add
ds
ss
add
xchg
ljmp
fs
xchg
mov
push
fidivrs
cmpsl
lock
xchg
out
mov
mov
lods
dec
push
add
mov
lret
test
dec
xor
movsb
adc
es
nop
incb
and
int
or
xchg
cmp
inc
sub
push
mov
dec
fsubr
dec
jp
xor
dec
mov
jge
push
cmp
mov
adc
pop
je
dec
daa
rorb
sarb
add
pop
mov
lea
and
inc
push
test
daa
icebp
inc
test
sbb
fiadds
inc
jle
pop
or
out
pop
in
gs
xlat
rclb
jg
cmp
push
fmuls
sbb
or
es
cs
add
popf
and
imul
decl
mov
cltd
clc
sti
add
dec
mov
pusha
adc
sbb
add
mov
in
das
leave
mov
stos
stc
inc
jns
negb
push
xor
or
jle
cmovnp
sbb
pusha
pop
dec
sti
cmp
mov
push
mov
in
lods
fisubrs
in
test
inc
js
mov
xchg
es
mov
icebp
cmp
xchg
movsl
xor
push
or
pushf
adc
mov
jp
in
inc
ret
or
inc
and
mov
fcmovnb
push
call
andb
mov
repz
inc
fisttpll
pop
lock
mov
aad
pop
jbe
sbb
notl
sub
mov
push
stos
rcll
fcmovb
adc
xchg
pop
jb
xchg
add
jnp
xor
add
aas
out
mov
push
scas
sahf
or
popf
inc
push
push
sub
insl
jo
lret
stc
jp
cmp
mov
popa
out
sbb
out
fisttpll
dec
out
outsb
out
aas
icebp
imul
cli
jmp
pusha
sub
add
insl
xchg
ds
mov
push
pop
stos
mov
pop
rolb
mov
push
or
mov
sbb
cld
scas
outsl
cmp
shl
int3
imul
pop
mov
sarb
and
sub
jle
add
loope
imul
or
lcall
jmp
test
ljmp
scas
addb
daa
in
fwait
sub
push
lret
inc
ds
lods
mov
cmpsb
int
arpl
xchg
cmp
add
dec
jb
mov
mov
dec
test
int
ss
shlb
pop
out
mov
jb
sbb
cld
adc
data16
ss
mov
ljmp
mov
stc
sbb
addl
adc
data16
jle
jmp
out
aas
inc
cmpsb
leave
and
pop
mulb
int
sti
xlat
std
and
adc
out
pop
pop
ja
xchg
sub
and
push
pop
imul
pop
test
fbld
out
jno
test
adc
pushl
or
mov
lret
sbb
iret
mov
dec
mov
sbb
faddp
popf
iret
push
and
inc
call
out
mov
push
arpl
jmp
mov
xor
out
pop
insl
xchg
cmc
pop
ret
or
jl
xchg
pop
or
mov
xchg
jae
stos
dec
adc
pop
les
adc
test
pusha
aaa
xor
adc
lahf
neg
push
xorl
cmc
dec
inc
jns
mov
push
push
xchg
xlat
adc
mov
pop
xor
mov
pop
inc
stc
mov
jno
outsl
bound
flds
pusha
gs
out
out
dec
mov
shlb
push
movsb
iret
and
add
sbbl
outsl
pop
and
in
bound
push
mov
in
outsl
movsl
int3
push
out
adc
icebp
pop
jbe
push
sbb
cli
pop
aad
inc
mov
movsb
push
orl
stos
in
adc
mov
movsb
int3
or
jns
movsl
push
ja
cmp
dec
lahf
jae
fldt
lock
jl
mov
cmp
je
das
test
mov
stc
mov
sbb
or
or
xchg
cli
jle
dec
xor
fwait
mov
pop
sahf
inc
sub
fstps
sbb
and
jle
insl
cmp
mov
js
enter
or
clc
xchg
fwait
add
repz
xchg
fidivs
ss
in
fistpl
lock
sub
pop
mov
cmp
mov
mov
lret
pop
mov
sbb
sub
sbb
fistpl
xchg
les
push
and
into
jne
xor
jge
and
gs
enter
xorb
aas
lret
cld
add
pusha
scas
dec
or
mov
jns
jg
cwtl
xor
pop
lock
shll
fwait
in
xor
add
adc
dec
pop
dec
or
lock
in
lods
pop
test
neg
mov
dec
gs
pop
dec
cli
lcall
loope
sub
popa
mov
push
imul
arpl
sbb
jo
nop
popa
pop
push
orl
mov
mov
aad
inc
sub
fcmovnbe
pop
mov
rcll
mov
repz
mov
flds
sub
or
xchg
into
push
mov
push
mov
ficomps
sahf
sti
pop
inc
cmp
sahf
cmp
dec
aaa
test
cmp
inc
or
jne
arpl
out
dec
inc
mov
add
ss
test
ret
scas
dec
imul
push
test
in
mov
sbb
adcl
sub
pop
pop
aas
add
ret
adc
cmp
add
in
xchg
sti
mov
pop
popfw
inc
inc
mov
out
push
les
mov
jmp
pmaddwd
add
jne
push
cwtl
pushf
stos
sarb
and
push
xchg
or
sarb
ss
mov
lret
cmp
mov
jo
cmc
loopne
push
mov
fwait
jnp
jmp
ret
inc
sub
pop
sbb
subb
cmpsl
push
pop
jp
movsl
dec
jmp
ret
aad
dec
test
cmc
jle
lea
test
sub
iret
fsubl
movsl
inc
xor
sbb
add
bnd
or
shl
lret
fwait
mov
rcl
mov
insb
mov
je
and
xchg
cli
pop
test
xchg
sbb
ds
loop
fadds
mov
out
pop
leave
repz
lods
dec
push
mov
sbb
into
and
ror
aas
cs
xor
int
cmp
lock
mov
out
clc
in
xchg
mov
ret
mov
add
and
cmp
sbb
sub
add
lret
repnz
test
pop
faddl
or
clc
cmpsb
dec
and
pop
fcmovu
clc
mov
aam
or
aad
jp
ljmpw
mov
cmpsb
inc
das
out
dec
shlb
pop
push
pop
inc
subb
sbb
aam
stos
pop
fs
pop
sbb
sub
test
jmp
lcall
push
cmc
lret
idivl
adc
add
inc
fcmove
push
rcrb
rcrb
add
mov
aam
mov
mov
test
lcall
dec
pop
outsl
cmp
push
inc
cmp
arpl
or
mov
push
push
sbb
movl
add
lea
cmp
scas
jne
xchg
xchg
cmp
imul
stc
out
out
in
xchg
popf
sbb
insb
cmp
daa
and
inc
pop
jle
sub
decb
dec
inc
iret
jo
xor
fisubs
mov
test
test
mov
pop
cmp
fldenv
fisttps
dec
sbb
fsubrp
sub
je
bound
or
addr16
mov
call
mov
mov
test
les
js
stos
andl
pushf
test
add
fisttpl
xchg
lcall
jg
sbb
movsl
push
out
inc
and
dec
push
xor
shlb
arpl
xchg
mov
mov
push
aas
xchg
sbb
mov
arpl
xchg
lahf
pop
dec
pop
stc
scas
or
fisubl
xor
xor
out
movsl
lahf
mov
in
gs
push
mov
scas
push
mov
jmp
popa
ret
add
sub
xchg
adc
adc
mov
xchg
movsb
dec
int
outsl
add
mov
int3
adcl
jno
adc
loopne
mov
sub
insb
cld
mov
hlt
data16
push
cmp
movb
pop
inc
adc
in
cmp
pop
xor
scas
inc
sub
cld
lret
mov
cmp
and
outsb
test
inc
jo
sbbb
cld
ds
ss
cmp
and
lods
ret
cld
enter
imul
dec
mov
icebp
enter
outsl
add
mov
or
inc
pop
or
ds
add
push
adc
jg
dec
sbb
es
fs
daa
mov
sti
das
mov
add
popf
jmp
mov
pop
jge
cli
xcrypt-cbc
cmpsl
push
mov
sub
mov
cltd
pop
dec
ja
pop
xchg
std
jne
icebp
push
loopne
mov
fbld
push
fcomp
sub
jg
sbb
lret
cmpsb
repnz
mov
icebp
mov
stos
pop
and
and
loopne
fucomi
cmp
mov
enter
push
xor
scas
js
aam
js
fldl
mov
sbbl
scas
adc
lcall
repz
push
sub
jb
cmc
or
adc
clc
sahf
aaa
and
push
mov
add
mov
and
add
lret
cmp
xor
aam
int
ja
push
ret
cmpl
xchg
push
mov
and
adc
pushf
out
mov
cmp
inc
pop
jmp
or
in
gs
test
jno
sbb
inc
fcoml
into
aaa
push
jmp
mov
jl
sti
xor
dec
dec
shrl
sub
jge
cmpsb
adc
pop
out
inc
sbb
cli
sbb
push
movl
repnz
sbb
data16
cmp
xorl
sbb
pop
adc
lahf
inc
mov
adc
enter
sub
arpl
repnz
push
pop
cmp
stos
rorl
xchg
mov
repnz
inc
jb
mov
jb
daa
aas
adc
arpl
leave
stos
div
cs
sub
nop
mov
inc
addl
lds
mov
fdivrl
leave
sub
pop
popf
pop
jge
imul
inc
and
cmpsb
inc
out
cmp
insl
xor
pop
inc
push
jnp
xchg
sub
cmpsb
repnz
in
sub
pop
icebp
bound
sbb
fisttpll
push
push
jo
shrb
in
sbb
test
incl
xchg
and
add
clc
sbb
push
xor
jae
filds
adc
xlat
fldl
mov
or
jge
jge
hlt
mov
add
add
loop
adc
push
js
imul
insl
ss
mov
in
addr16
dec
pushf
pop
pushf
movsb
pop
adcl
sub
adc
sub
test
js
mov
repz
lret
iret
pop
xchg
dec
iret
xor
and
mov
mov
ficompl
fcoml
aas
hlt
rcll
and
addr16
orb
idiv
lods
sbb
dec
in
scas
repnz
loope
out
xchg
push
iret
pop
ss
sahf
enter
rorb
iret
cmpsl
mov
and
xchg
imulb
pop
mov
dec
cmp
sbb
pop
int
in
sbb
sub
mov
mov
mov
ret
mov
jl
loop
fs
notb
xor
xchg
add
loope
clc
xchg
es
push
push
push
imul
ret
push
adc
add
mov
mov
sub
inc
add
mov
rolb
jne
sbb
call
sbb
repz
sub
xlat
sub
mov
xchg
nop
popf
int3
lods
imul
and
push
jg
mov
sub
adc
je
xchg
xor
jbe
mov
pop
push
sbb
cmp
out
arpl
push
shll
repz
movsl
test
or
sbb
mov
lea
sahf
adc
test
imull
inc
sub
add
adc
jp
fcomi
addl
aad
push
push
pop
imul
mov
mov
cltd
das
xor
cmp
cmp
outsl
mul
dec
call
pop
and
call
add
pushf
adc
fs
sbb
test
pop
call
sub
and
mov
xchg
test
cmpsl
sbb
mov
push
adc
sbb
mov
pop
inc
in
in
es
mov
leave
ss
xchg
push
inc
mov
ret
in
mov
icebp
jnp
roll
xor
jne
or
pop
clc
pop
js
xor
ja
lock
jg
xlat
fadd
xor
cmp
sbb
cmpsb
dec
lea
adcl
cli
leave
roll
jne
sub
orb
lret
mov
stos
pusha
adc
out
mov
or
ljmp
xchg
fstps
int
dec
nop
xchg
je
mov
xor
push
repnz
jmp
arpl
jmp
mov
dec
inc
mov
into
mov
jge
fcmovnu
add
je
das
and
jecxz
stc
mov
aaa
dec
xchg
or
ret
xor
orl
fadds
sti
lods
leave
jp
pusha
cld
loopw
inc
xlat
jmp
movsb
push
adc
sbbl
pop
clc
fsubl
into
fsubrs
sub
stos
cwtl
lds
sbb
and
xchg
lock
inc
daa
pop
push
inc
lahf
js
sub
subl
pop
jl
lods
cmpsb
outsl
leave
in
dec
std
cld
pop
xchg
mov
push
adc
xor
test
sub
lcall
pusha
inc
mov
loope
ret
movsb
add
add
mov
into
dec
pop
push
inc
add
jae
pop
mov
xchg
fadd
shl
sbb
jnp
mov
imul
cltd
cmpsl
pop
lods
xchg
sub
dec
scas
test
mov
xchg
jne
add
mov
clc
sbb
ret
aaa
dec
dec
push
and
pop
push
push
add
lds
data16
jle
mov
dec
out
jne
mov
mov
roll
fnstsw
lcall
jg
push
repnz
mov
movw
push
xchg
mov
sbb
jl
enter
test
inc
in
inc
insb
test
pop
les
test
dec
push
xchg
loopne
ja
pop
adc
push
pop
nop
xor
jp
push
cmpsb
clc
xchg
xor
cmc
jecxz
xchg
ljmp
imul
mov
and
addr16
mov
cmp
add
mov
push
adc
fwait
push
ret
push
or
mov
hlt
popf
mov
xchg
sbb
mov
jg
ds
lcall
jle
or
cmp
decb
dec
mov
retw
xor
xchg
mov
cltd
cmp
neg
aas
repnz
daa
mov
lds
cltd
mov
or
xor
mov
push
insb
ja
jno
cmp
jmp
iret
mov
icebp
scas
lea
push
pop
jnp
das
hlt
push
push
pop
mov
adc
mov
dec
push
dec
sub
lcall
dec
jp
dec
xchg
cltd
lock
sub
in
jns
jg
test
pop
xchg
sub
jge
es
mov
or
add
sub
int
and
xchg
and
mov
mov
pop
mov
movsl
cmp
out
dec
sbb
cmp
cmp
mov
lcall
sub
cwtl
xor
inc
xchg
sti
out
fstps
test
jne
mov
aaa
int
gs
add
arpl
add
scas
push
sub
inc
lods
fdivl
or
jl
test
pop
jmp
xchg
pop
pop
jno
push
iret
cwtl
xchg
into
pop
loopne
pop
add
std
sub
loopne
sub
clc
loopne
xchg
xchg
or
mov
in
add
aaa
sub
data16
cmp
rolb
sahf
stos
xor
rol
adc
stos
pop
jle
pop
sub
ficompl
pusha
inc
push
shl
fwait
loop
jns
xchg
popf
insl
xor
xor
insb
xlat
sbbb
inc
push
mov
enter
mov
fdivrl
enter
jae
push
sbb
fucomp
dec
cmpsl
fwait
sahf
and
xchg
pop
mov
cmp
outsb
stos
out
gs
and
cs
push
sarl
add
xchg
mov
rclb
mov
in
pop
stc
mov
add
push
mov
or
sbb
cwtl
int
xor
jae
sbb
je
inc
popa
repz
or
outsb
fcomi
insb
std
jle
mov
pop
add
pop
pop
sbb
lock
and
xchg
daa
and
lods
inc
sub
sbb
sahf
repnz
mov
sub
subl
mov
mov
mov
loop
pusha
xor
mov
nop
inc
insl
in
bound
inc
push
mov
xchg
mov
and
jl
pop
xor
sub
pop
ret
cwtl
xchg
lock
pop
push
jl
push
cmp
inc
out
aam
push
aas
inc
paddsw
mov
out
into
enter
mov
and
movl
lds
shlb
jo
nop
jne
pop
test
pop
push
into
jp
mov
aas
in
lods
mov
or
xlat
outsb
push
int
rorb
pushf
dec
jbe
scas
aas
popa
and
rcrb
rorb
xor
dec
and
je
cmp
xor
inc
adc
cmpl
xor
ss
xlat
push
jmp
push
je
lds
jbe
out
mov
aaa
xor
push
jge
sahf
mov
test
ja
sub
je
mov
mov
dec
cmp
jbe
inc
push
or
add
lcall
mov
out
adc
pop
sarl
jge
inc
loopne
or
jnp
leave
idivb
dec
xor
aad
mov
pushf
sbb
push
push
xor
cmpsl
and
and
repnz
es
jp
nop
cmp
test
repnz
outsb
add
icebp
mov
push
inc
ret
add
sbb
addr16
loop
pop
xorb
cmp
aam
dec
popa
or
inc
loope
stos
inc
mov
insb
ljmp
push
add
pop
test
sub
push
cmp
ja
int
and
cmpsl
sar
movsb
subb
js
and
into
sub
ds
lds
xchg
clc
jg
insl
sbb
sbb
leave
xchg
mov
adc
mov
dec
jge
push
dec
aas
or
and
out
jb
inc
mov
stc
in
cmpsb
mov
outsl
stc
add
loop
adc
hlt
mov
js
xchg
std
sbb
cvtps2pi
xor
jmp
out
push
xchg
mov
nop
jmp
mov
jg
in
popa
outsl
fdivs
cmpsl
or
mov
dec
enter
aaa
xchg
hlt
inc
stos
sbb
dec
push
mov
andb
sahf
sub
lock
popf
sbb
push
push
ja
mov
inc
inc
xchg
stos
cld
pop
dec
lret
and
jg
sbb
lock
js
jo
dec
pushf
sub
fdiv
inc
int
push
dec
popf
das
pushf
je
pop
stos
xlat
pushf
cmp
call
movsb
pop
jnp
test
push
jmp
data16
inc
test
movsl
mov
dec
cltd
or
mov
in
in
inc
mov
mov
stos
mov
dec
cmc
rep
and
js
xor
enterw
mov
xchg
push
lods
out
stos
push
paddd
stc
frstor
pop
inc
adc
mov
leave
mov
shrb
pop
int3
dec
jmp
fsts
fs
jecxz
cmpsb
sbb
leave
sbb
data16
inc
aas
mov
aas
inc
mov
xlat
test
sub
jnp
or
dec
in
stos
sbb
sbb
jg
int
add
mov
sbb
cmpsb
mov
js
dec
add
loope
mov
add
mov
scas
inc
push
loope
cwtl
xor
adc
sub
mov
xor
ds
lret
fdivs
push
inc
dec
aaa
loop
inc
push
stos
imul
stc
sahf
test
or
lret
nop
aad
in
jmp
jb
ds
daa
in
test
testl
push
sub
add
add
and
stc
cmp
xchg
stos
movsl
xchg
mov
dec
inc
test
in
or
push
in
call
stc
cli
sbbb
inc
push
add
jle
mov
jl
pop
jp
inc
mov
fwait
ja
xchg
sti
sti
insl
lds
imul
lods
mov
mov
lods
ds
lock
mov
rcr
sbb
loopne
xor
xor
addr16
gs
fisttps
mov
jns,pn
in
mov
jecxz
rcll
in
pop
jns
jmp
xchg
aad
enter
shrl
jne
sbb
test
jp
sarb
xchg
mov
addl
jp
rolb
cmp
test
mov
push
lods
sub
push
das
dec
jb
fdivrs
ret
fs
mov
inc
lods
mov
ret
repz
enter
shrb
cmp
mov
push
add
les
sbb
pop
cltd
add
add
rcl
imul
popa
ret
adc
cmp
lea
sahf
xor
in
pop
mov
ljmp
inc
sub
cmpsl
lods
call
test
mov
xacquire
adc
dec
jmp
fistpl
cmp
fs
test
or
sahf
ret
leave
testb
insl
lods
cmp
sbb
lcall
rcrl
insl
je
mov
sbb
js
push
testb
xchg
mov
cmpsl
imul
insl
lahf
enter
pushl
push
sbb
sub
fyl2xp1
jmp
xchg
jb
jns
mov
adc
and
sbb
lds
xchg
pop
xor
mov
es
rcl
gs
adc
pop
enter
scas
mov
mov
add
adc
xor
inc
xlat
pop
push
imul
adc
and
xchg
lods
fnstenv
lock
sub
int3
jle
es
push
in
sub
xor
cld
lcall
aam
jnp
cmp
push
or
adc
sbb
roll
ljmp
xorl
sub
negl
dec
mov
adc
dec
pop
sarl
in
add
push
je
push
pop
xlat
sub
hlt
cmp
inc
dec
orb
cmpsl
push
jae
fwait
jns
neg
popa
ficompl
cmpsb
shlb
xchg
push
jb
imul
bound
mov
lahf
adc
sti
push
xor
mov
out
stos
outsl
icebp
in
or
sbb
jle
cmpsb
or
out
adc
push
cmp
aaa
dec
gs
pop
xchg
pushf
rorl
sti
pop
insl
cmpsl
jb
cmpb
add
aad
xor
aam
cwtl
mov
mov
icebp
fmuls
gs
mov
sbb
loop
roll
lods
sbb
xchg
add
jmp
popf
insl
mov
mov
sub
add
dec
mull
jmp
out
jno
jle
je
dec
mov
insl
aad
xchg
xchg
pop
fsubrp
pop
xor
rcll
rclb
sbb
jo
rcrl
push
xchg
and
ljmp
loope
lea
add
lea
repnz
mov
stos
push
and
in
sub
into
mov
lret
mov
jp
dec
shrl
mov
pop
es
dec
jmp
pushf
inc
xor
cli
fcoms
inc
push
sbb
dec
xor
jb
xlat
insl
pop
adc
fldenv
sub
fbstp
sbb
das
ret
mov
mov
sub
pop
and
sbbl
shlb
mov
dec
or
and
inc
push
cltd
and
testl
jg
sahf
subl
addb
push
xchg
shll
xor
or
shl
inc
mov
sbb
cli
test
dec
push
sbb
arpl
push
stos
inc
aad
pop
xlat
xchg
pop
mov
push
test
mov
sbb
cld
xchg
lods
ret
mov
push
pop
mov
mov
pushf
out
rcl
test
push
mov
mov
sbb
cmp
cmp
push
mov
das
pop
jecxz
sbb
pushf
aad
and
jo
ja
adc
sbb
xchg
les
lds
movb
in
pop
inc
out
fisubs
inc
jne
rorl
push
and
mov
cmp
or
lcall
cld
in
out
sub
lcall
dec
jle
nop
dec
jle
mov
mov
outsl
add
mov
in
scas
mov
mov
in
inc
aaa
pop
std
arpl
mov
or
push
jbe
mov
stos
cmp
shlb
fiaddl
out
fs
loopne
sub
cmp
or
outsl
sub
push
cmp
pop
das
sbb
push
sub
ror
jge
repz
and
mov
cs
cwtl
fsubr
push
mov
mov
test
add
sub
push
adc
repz
popa
nop
cmpl
enter
fninit
sub
insb
popa
sahf
or
mov
pop
mov
leave
movsb
mov
and
fnstenv
int3
loopne
insb
mov
cmp
not
gs
stc
jl
hlt
lahf
ret
pop
adc
sbb
addb
in
addb
int
add
sbb
sbb
adc
shl
and
and
scas
out
and
mov
dec
sub
add
dec
jge
xchg
jecxz
sub
insb
mov
or
testl
mov
push
dec
and
enter
out
sub
mov
pushf
push
push
jp
cltd
mov
cli
push
ret
into
dec
inc
and
cmp
mov
cwtl
ds
mov
inc
sarl
mov
enter
repnz
and
pop
pop
jno
xor
lea
and
repnz
jne
aas
ds
xor
pop
lods
sbb
mov
shrl
call
pop
dec
jne
in
cmp
stc
mov
push
imul
out
or
iret
sti
xor
cmp
cmp
cmp
add
mov
inc
sti
icebp
dec
xor
les
add
push
adc
jbe
iret
sahf
loop
xchg
ficompl
sub
ljmp
leave
sub
jb
push
stos
ljmp
fldcw
fisubrs
jmp
ljmp
divb
jbe
rorb
inc
xor
insl
sbb
or
dec
scas
cmc
cltd
outsb
sbb
mov
sub
jl
jnp
inc
cli
adc
sahf
xchg
cmpsl
ret
cltd
in
add
pop
inc
insl
out
imul
adc
shlb
arpl
shll
cmp
jp
adc
dec
mov
dec
lea
mov
sbb
sub
in
inc
push
mov
pop
jae
jno
dec
pop
push
add
shlb
dec
mov
in
mov
push
lods
insl
ds
and
dec
cs
ficoml
out
jl
xchg
ljmp
cli
int3
inc
cwtl
mov
and
xchg
filds
pop
pop
test
dec
adc
fldcw
cmp
test
out
jmp
push
sub
cmc
leave
das
fs
test
push
dec
and
ja
loopne
or
cmp
decl
iret
les
leave
sub
stos
xor
xchg
cltd
and
stos
lahf
ds
test
fwait
pop
and
lds
add
xor
sub
adc
fprem1
and
orl
sbb
bound
inc
inc
push
xchg
xor
fisttpll
push
dec
xchg
sbb
xor
lods
inc
adc
cli
setle
int3
jno
xchg
popa
test
fs
jmp
mov
mov
mov
loopne
add
xchg
push
push
pop
xchg
in
daa
jne
jo
fcomps
and
lds
xor
mov
into
ja
enter
mov
mov
fsubr
imul
inc
jl
xor
ret
adc
test
out
aas
xor
popa
outsb
test
pop
aad
pusha
rolb
inc
lret
push
pop
push
and
rolb
insb
mov
sahf
jo
sub
sub
fsubs
pop
mov
jno
mov
and
fwait
into
ss
repnz
pop
mov
sbb
mov
cmpsb
or
decl
scas
movsl
scas
jmp
jp
fcmovu
sbb
jo
or
push
addr16
push
mov
ret
fisttps
decl
dec
bound
inc
mov
mov
movl
or
roll
pop
mov
out
fsubrl
dec
add
repz
xchg
js
pop
in
adc
add
negb
push
push
cmpsl
into
cwtl
loopne
sub
jmp
aam
je
ja
push
repz
sbb
pop
dec
xor
out
lret
jmp
dec
mov
outsl
sbb
jae
ret
and
cwtl
push
mov
inc
pop
pop
fidivrl
xchg
loopw
iret
in
aam
icebp
xchg
push
ret
pushl
jns
jae
xchg
cmp
and
push
sbb
push
loope
xchg
test
decb
sbb
xchg
sub
int
insl
push
enter
arpl
xor
jl
sub
call
push
subb
pop
lods
xor
popa
and
out
es
cmpsl
xchg
mov
lret
pop
inc
push
addr16
sub
daa
jo
sbb
aad
jo
lods
jle
mov
sub
mov
daa
sahf
pop
and
notb
pop
push
jmp
adc
jno
or
jg
xlat
lcall
dec
sahf
rcl
mov
es
adc
in
or
cmpsl
cli
out
adc
push
lcall
push
stos
fidivrs
repnz
test
ja
into
shrl
pop
mov
flds
test
pop
fwait
and
fwait
fs
xor
cmp
in
je
cmp
sub
adc
sbb
mov
xchg
notb
ret
mov
repz
out
adc
cmp
fsubrl
jo
cltd
cltd
push
xor
push
pop
pcmpgtd
mov
inc
loop
mov
sub
push
shrl
or
out
inc
inc
add
test
loop
pop
jb
and
sub
jo
push
mov
data16
xor
add
aas
js
inc
inc
rorb
test
and
ds
cmp
outsb
adc
xor
out
popa
int3
adc
cmp
les
xor
pop
push
rcrb
pusha
mov
cwtl
push
jb
inc
rolb
dec
ret
push
stc
in
cmp
adc
cmp
mov
aam
movsl
inc
cmpsl
mov
je
sti
loopne
mov
pop
xor
cld
dec
push
test
pop
mov
mov
jmp
movsl
jp
xchg
rep
or
mov
jnp
mov
xor
sbb
outsl
xor
nop
adc
arpl
and
test
jo
fisttps
mov
test
rcrb
mov
int
jb
scas
divl
and
js
clc
mov
sarb
jmp
mov
push
cli
sub
dec
jg
push
mov
mov
jecxz
adc
insb
sub
in
pop
mov
in
test
jle,pt
jne
adc
movsl
mov
jns
fcoms
cmpsl
xor
popf
fwait
movsl
out
inc
shl
push
push
mov
sbb
mov
mov
lahf
aad
std
jge
dec
sub
add
or
dec
cmpsb
adc
sub
repnz
in
mov
outsl
rolb
xor
and
aam
daa
pushf
cmp
adc
add
rcll
push
push
pop
lcall
ds
or
enter
xor
adc
mov
jg
testb
int
lahf
inc
sbb
test
mov
fucomi
add
xor
fistps
adc
fcmovnb
cmc
mov
xchg
sub
popf
inc
adc
mov
lock
idiv
aas
mov
je
jmp
jl
out
and
xor
int3
xlat
push
cwtl
cmp
dec
out
pusha
lock
or
and
cmp
xlat
ror
or
push
lret
mov
adc
dec
arpl
push
in
xor
sbb
lods
sub
jle
outsb
mov
mov
pop
cld
sub
mov
ljmp
xchg
add
mov
nop
aas
arpl
sbb
pusha
js
adcb
adc
and
leave
bound
add
xchg
aas
test
dec
mov
xor
ljmp
mov
xor
scas
stos
les
and
mov
lods
jle
mov
lds
add
js
cmc
sahf
ret
addr16
fistl
mov
lret
dec
aad
mov
into
jp
lods
push
shr
movsl
mov
es
cmp
adc
insl
aas
aam
aam
mov
movsb
movsl
pop
pop
cmp
jns
and
outsb
sub
sub
shrl
push
in
pop
xor
push
ds
dec
ljmp
or
in
push
push
sub
cmp
es
fisubl
test
xchg
lds
inc
cli
push
jo
pusha
inc
jns
lcall
loopne
lret
ss
aaa
xchg
mov
mov
insl
int3
adcl
filds
sub
mov
lods
mov
pop
aas
sbb
add
push
add
movsb
sub
push
xchg
mov
or
movsb
push
rcrb
push
xchg
lods
sbb
cmpsb
push
mov
sub
in
fisubrs
outsl
rolb
mov
jb
popa
xchg
sbb
call
fldcw
push
push
fiaddl
xor
out
das
jbe
and
divb
punpckldq
fucomip
and
jp
aas
rol
mov
adc
add
lods
jns
xchg
or
aam
ds
pop
xor
xchg
cmp
das
or
jae
push
mov
test
mov
dec
cmp
sub
dec
sub
mov
adc
lea
jns
sbb
aas
out
std
leave
int
fdivl
sbb
mov
sahf
rcll
cmp
out
jp
inc
jmp
push
xchg
test
mov
fsubrs
bound
mov
xor
mov
mov
aaa
faddl
jle
shll
hlt
in
cmp
imul
addr16
sti
push
add
aas
aas
jmp
into
cld
xchg
inc
xchg
dec
jg
cld
pushl
add
inc
push
into
sub
andb
hlt
pop
lret
add
test
xor
adc
mov
jnp
arpl
cltd
pop
or
and
fcmovu
mov
mov
movsl
mov
lahf
pop
mov
shrl
cltd
mov
repz
pop
bswap
mov
adc
movb
inc
leave
test
imull
je
adc
jecxz
lock
dec
push
scas
lahf
push
in
mov
cmpsb
lret
aas
mov
popfw
pmulhuw
sbb
aam
jns
lahf
mov
stc
fmul
and
idiv
mov
cmpsb
out
dec
rolb
aaa
push
movsb
enter
pop
mov
pop
or
repz
dec
les
cmp
aas
sbb
sub
xor
popf
sahf
sbb
push
cs
nop
dec
fimull
test
in
or
outsl
push
cmp
mov
cmp
mov
loopne
push
mov
xor
mov
mov
scas
xor
movsl
and
mov
mov
pop
inc
jp
cmpsl
jo
or
dec
mov
jmp
movl
into
in
jae
dec
stc
jbe
scas
xlat
ror
dec
std
xchg
shl
push
pop
cmp
lea
mov
jb
shrl
cmp
xor
mov
ja
sahf
adc
mov
mov
icebp
test
add
pop
ret
test
or
cld
mov
and
in
sub
out
mov
fsubl
stc
inc
icebp
repz
jmp
faddl
enter
ret
cmp
xor
cltd
mov
clc
jns
pusha
mov
je
neg
xchg
in
adc
or
pop
inc
xor
aas
add
pop
xor
adcl
in
mov
mov
les
mov
loope
jecxz
pop
and
fsubl
sbb
mov
inc
pop
fldcw
orl
jae
fisubl
mov
sbb
out
loopw
jbe
loop
push
pop
mov
fwait
jbe
lret
push
aam
push
xor
mov
mov
lahf
cmp
jl
add
mov
aam
pop
cltd
inc
cmpb
cmp
je
sbb
sbb
fstpl
mov
jae
mov
ds
out
dec
sbb
pop
mov
mov
xor
jo
popf
inc
lds
jg
call
sarl
mov
push
add
mov
mov
lahf
sahf
cmpsl
dec
in
push
cmpsb
mov
or
in
pop
push
ja
cltd
jbe
and
cmp
adc
push
mov
sub
or
mov
lock
out
lea
jo
mov
fnstenv
mov
ret
pop
subb
popa
lock
add
shrb
inc
pop
sub
jp
xchg
jbe
addl
push
fwait
lcall
pop
pusha
fsubrs
sbb
ret
push
pop
fwait
rcrl
int3
mov
aas
cmc
ds
or
jmp
stc
arpl
subb
xchg
int3
or
sbb
insb
cmc
and
sbb
sub
hlt
inc
les
inc
out
and
and
stc
int
in
sub
mov
sub
daa
mov
test
ljmp
scas
adc
mov
int3
int3
out
popf
loop
int3
jle
mov
cmp
sub
inc
sbb
fs
add
scas
inc
jecxz
xchg
mov
movsb
mov
in
in
stos
out
je
pusha
cmp
hlt
dec
and
insb
fistl
scas
xor
popf
jae
dec
jg
out
aas
push
jbe
inc
xchg
pop
adc
sub
push
iret
mov
test
and
xor
mov
nop
and
push
mov
loope
inc
pop
sbbb
adc
cmp
fldln2
add
int
push
icebp
dec
shl
jb
dec
or
sbb
insl
repz
idivl
xchg
jo
inc
pop
mov
testb
cltd
insb
testb
inc
test
imulb
jnp
shl
mov
out
adc
push
in
into
fsubl
mov
fbstp
pop
jno
and
shll
icebp
sub
pop
scas
aam
inc
fadds
dec
sbb
push
pop
lcall
mov
mov
inc
aas
aam
fwait
push
stos
dec
mov
sub
cmpb
mov
insl
test
add
pop
ljmp
fnsave
push
push
pop
popa
sub
daa
int3
mov
inc
jmp
cmp
inc
push
pushf
inc
mov
jns
add
adc
test
mov
lret
push
fldenv
dec
mov
movsb
imul
cli
push
xchg
mov
aas
mov
jg
mov
mov
movsb
xchg
sahf
mov
sahf
mov
leave
push
pop
fdivl
inc
je
push
mov
xor
ret
push
sub
aaa
add
les
fstpl
cmpsb
outsb
aam
lcall
mov
gs
imul
pusha
gs
mov
push
pushf
push
mov
popa
aas
inc
hlt
mov
lret
push
jge
mov
pop
call
jmp
inc
mov
jle
js
adc
lcall
and
aad
push
jnp
mov
test
push
fisubrs
sbb
push
rcll
ljmp
std
stos
movsl
cmpsb
enter
jg
xor
bound
sar
test
cmpsb
xor
scas
jecxz
xor
jg
cmpb
xchg
cmpsl
push
xchg
data16
test
in
adc
lcall
adc
insl
sti
jecxz
adc
pop
adc
icebp
add
push
push
fisubl
in
xchg
adc
shll
int3
pop
lods
repz
lods
imull
pop
test
push
mov
outsb
ds
aad
pop
ljmp
and
int3
test
jae
xchg
and
mov
cld
fistpll
xlat
cmp
pusha
adc
jae
push
cwtl
xor
nop
gs
mov
push
scas
dec
and
and
lret
push
xor
out
push
jl
lret
lcall
xchg
cli
pusha
adc
mov
fdivrl
lahf
lock
andl
out
fisubl
push
dec
push
mov
test
adc
add
test
add
cltd
fisttpl
in
push
or
hlt
pop
push
in
or
lcall
dec
sub
push
call
mov
js
or
pushf
push
fucomi
adc
fwait
mov
and
inc
jl
dec
push
and
fs
fs
xchg
jl
and
xchg
sbbb
sub
xlat
mov
xchg
pop
or
mov
aam
or
aam
loope
addb
jo
cmp
sub
movsl
outsb
adc
lock
insb
inc
stos
fwait
cmp
xor
ds
cmpsl
adc
fwait
push
cmp
sbbl
ss
int3
aad
fbstp
xlat
sar
mov
dec
sub
cltd
aam
cmp
sbb
and
adc
jl
mov
push
jo
dec
loope
xor
loope
or
cmp
cld
pushf
inc
sub
ss
cs
inc
xchg
cwtl
or
jo
inc
roll
outsb
fimuls
lods
loop
ds
xchg
push
sbb
dec
stos
into
stc
ret
or
and
jg
mov
xor
rcr
or
or
sti
sbb
jmp
mov
in
and
hlt
or
xchg
push
aaa
push
out
call
andl
jle
mov
popa
test
cmp
shl
fwait
and
jnp
xchg
cwtl
lss
shlb
mov
xor
into
fnstenv
push
mov
pop
mov
and
out
scas
lret
adc
clc
stc
or
lret
lret
pop
and
add
test
aas
cmpsb
mov
fistl
pop
cmp
jle
hlt
js
cmp
pop
and
xlat
dec
mov
subl
xchg
adc
adc
inc
pop
jmp
cld
in
jmp
xor
mov
add
cmp
pop
repz
lea
lret
pop
and
es
cmp
jbe
xchg
jb
aad
xlat
loopne
lcall
jae
sub
dec
cmp
sub
mov
in
cmp
jbe
adc
pop
test
add
and
jo
push
and
pop
int3
jo
outsb
xchg
xor
jecxz
jl
xor
jne
in
aaa
mov
jl
aad
mov
pop
imul
pop
mov
mov
fdivr
cmp
xchg
and
add
sbb
sub
iret
jmp
mov
dec
cmc
cltd
fistpl
fcomi
add
leave
sub
adc
inc
add
ds
in
push
outsb
mov
outsl
scas
push
xor
adc
or
mov
popf
imul
cmp
inc
or
stc
xlat
es
push
inc
push
add
movsb
mov
jb
shrl
inc
inc
call
sahf
jb
mov
xor
xchg
fwait
idivl
sbb
std
call
fadd
push
movsl
aam
sti
mov
cld
fisubrs
pop
int
cmpl
lret
xchg
sub
jns
jecxz
test
imul
rcll
aas
or
dec
popf
adc
lds
sub
dec
sbb
jns
xchg
sub
sub
std
adc
loopne
and
inc
inc
xor
outsl
lret
sub
push
pop
rclb
lret
dec
and
add
test
ss
orb
and
xor
mov
push
push
mov
insb
push
jmp
pshufw
jo,pn
sti
add
sbb
ret
leave
adc
orb
ss
adc
cmp
or
mov
jp
push
xchg
sahf
jge
loope
xchg
cs
fldl
add
xor
outsb
jo
aad
dec
out
mov
add
cmp
jge
mov
inc
adc
and
inc
jmp
push
int3
jmp
push
mov
xchg
repz
scas
faddp
fmull
jnp
cmpsb
cmpsl
inc
test
dec
loopne
pop
loope
dec
xchg
lret
popf
movl
inc
push
mov
xchg
inc
inc
sarb
xor
pop
orb
jp
push
out
daa
fwait
sbb
fmuls
or
andl
xchg
pop
mov
loop
adc
xor
cmp
push
push
sahf
xchg
scas
xor
das
sbbl
out
out
int
mov
xchg
data16
jecxz
xor
and
lret
and
sbb
insl
fwait
cmp
jmp
call
jb
and
test
adc
inc
ret
cmpsb
sti
jge
or
xor
mov
iret
mov
dec
fs
mov
rol
pop
iret
xor
ret
popa
out
insl
insb
dec
sub
roll
sbb
sbb
movsb
pop
fmuls
pop
mov
cmp
xchg
jecxz
pop
lret
imul
and
and
dec
ficompl
iret
push
test
jg
pop
imul
bnd
push
xchg
mov
imul
adc
mov
cld
pushf
push
and
aas
push
inc
ds
jmp
rcll
sbb
fldl
xor
and
in
cmp
je
push
cmpsb
lods
mov
xor
out
arpl
mov
cli
adc
repz
cmp
aaa
movsl
subl
sbb
push
sub
dec
dec
pop
cmp
pop
or
pop
push
xchg
inc
loopne
inc
jbe
stos
movsb
add
cmp
sub
mov
outsl
push
fsubrp
adc
xor
cmpl
jnp
aaa
pop
pusha
push
adc
push
mov
outsl
lods
icebp
dec
xor
inc
inc
sbb
lret
sub
mov
fs
leave
ja
mov
lods
jnp
mov
insl
pushf
arpl
jmp
mov
dec
dec
cmp
test
push
ljmp
fnsave
mov
xabort
sub
test
inc
jnp
outsl
pusha
xchg
aaa
xor
lea
sarb
out
jecxz
int3
push
push
push
jb
push
je
xor
push
outsl
fnsave
repz
inc
iret
mov
or
decl
fiadds
inc
sbb
enter
xor
shll
adc
mov
sub
xchg
aas
inc
jno
mov
pop
sub
pusha
or
aas
inc
rcrl
xor
imul
stc
mov
test
push
orb
fmuls
pushf
and
mov
loop
pop
popf
dec
daa
cli
movsl
or
data16
adc
mov
xor
cmpl
popf
ds
sbb
enter
push
pop
adcl
adc
mov
cmp
scas
inc
add
inc
and
mov
mov
out
or
psubd
popa
test
int3
lret
fwait
inc
mov
or
push
das
inc
sbbl
mov
push
jne
cmc
jecxz
ljmp
mov
push
hlt
loop
mov
sbb
cmp
sbb
push
xor
fs
sub
pusha
mov
and
xor
or
sarl
cs
enter
mov
movsb
into
push
aam
adc
and
fucom
fcomps
loope
aam
mov
popa
lahf
gs
in
push
pop
mov
inc
pop
add
dec
int3
mov
xor
pop
and
jle
mov
jl
xor
addr16
in
test
loop
movsl
jmp
pop
stos
clc
sbb
mov
or
fsub
test
xchg
push
mov
pop
int
lods
inc
push
xchg
test
cmp
mov
popf
xchg
adc
jb
lret
ficoms
mov
mov
les
fldt
sbb
mov
sbb
jo
or
xlat
movsl
xor
xchg
xlat
loopne
loopne
sub
sub
cmp
ss
mov
inc
cmp
cli
cmp
mov
movsl
push
inc
add
inc
sti
in
test
adc
repz
cmc
jl
jg
mov
jecxz
jne
mov
std
xchg
ret
push
incl
xor
mov
push
lea
mov
dec
mov
movb
xor
xor
xor
lahf
inc
mov
mov
ljmp
push
mov
add
dec
mov
sbb
mov
dec
roll
pop
nop
arpl
push
loopne
fstpt
mov
shrb
cmp
inc
pop
inc
dec
push
or
dec
mov
fsubrp
cmc
leave
jbe
mov
test
push
icebp
jno
and
cmp
xor
jecxz
lods
xorl
jns
jns
popf
aad
stc
xchg
xor
xor
and
xchg
adc
test
mov
jp
and
call
pusha
sub
bnd
test
adc
icebp
sub
sub
sbb
dec
out
imul
sbb
repz
push
pop
in
cmp
icebp
cmp
cltd
dec
add
xchg
fstp
divl
xlat
adc
mov
int
mov
in
sahf
in
or
mov
dec
sub
ljmp
ljmp
outsl
xor
inc
and
pop
adc
ljmp
bound
dec
mov
mov
pusha
jle
pop
and
dec
enter
into
scas
pop
xchg
jmp
loope
aad
jns
cmpl
lret
fs
add
xchg
stos
inc
repnz
scas
xor
outsl
and
mov
sarl
jg
lret
mov
cli
push
dec
repz
inc
and
bound
mov
xchg
jp
test
hlt
sub
jmp
stos
inc
mov
mov
jmp
arpl
dec
outsb
push
sbb
fldl
adc
out
add
inc
add
loopne
jge
sbb
sbb
mov
adc
adc
pop
js
pop
movsl
pop
loope
outsb
lods
jbe
cmpl
add
jae
mov
add
dec
push
mov
fstps
addl
pop
std
lock
cmpsb
addl
adc
adc
push
cli
movsb
pop
ja
pop
jecxz
mov
inc
in
mov
dec
inc
xlat
push
cmovb
mov
xchg
stc
pop
repz
ret
jp
dec
push
xlat
pop
fwait
mov
add
outsl
push
or
push
repnz
mov
mov
bound
mov
mov
jp
ret
insb
loopne
stos
jecxz
add
ficoms
lahf
lock
dec
add
mov
in
sub
stc
sub
fs
ret
lock
setp
or
mov
mov
or
sti
gs
notl
mov
pop
cmpsl
xor
or
xor
lods
in
aam
sbb
mov
int3
dec
imul
push
int3
dec
test
flds
std
inc
stos
insl
jbe
gs
es
xor
adc
sbb
mov
sahf
dec
mov
adc
pop
inc
pop
faddl
je
leave
jecxz
fidivs
addr16
push
add
clc
push
push
arpl
xchg
push
shlb
xor
sbb
bound
xchg
mov
pop
mov
pop
dec
insl
xchg
jne
lods
push
and
negl
cld
dec
out
push
mov
mov
mov
arpl
in
aaa
movsb
dec
dec
stos
movsb
sub
mov
ja
push
inc
push
dec
xor
or
push
insl
xlat
mov
clc
mov
rolb
and
push
ret
inc
icebp
xchg
and
iret
pop
jo
inc
jbe
f2xm1
lahf
in
xor
sbb
add
adc
mov
pop
jle
cmp
aam
sub
lret
gs
mov
pop
mov
sub
push
adc
loop
and
push
push
loopne
cltd
jbe
xor
repnz
repz
daa
popa
outsb
loopne
test
cmp
int
jbe
pop
xlat
cmp
rcrb
imul
dec
nop
fstl
pop
pop
adc
inc
int3
pop
jnp
in
or
mov
and
lods
jl
bound
mov
push
xor
arpl
or
jmp
xlat
scas
popf
inc
pop
xchg
push
inc
ss
xchg
jge
ret
xchg
dec
bound
test
and
pop
inc
adc
mov
or
mov
dec
sbb
adc
bound
xbegin
test
cli
lahf
mov
xchg
mov
push
cld
xchg
xchg
xorb
adc
stos
and
or
scas
jbe
jbe
push
daa
sbb
popa
scas
xorl
cmp
lcall
rep
loop
dec
cmp
mov
jb
test
add
daa
mov
pop
sub
call
adc
and
lahf
cmpsb
mov
shll
leave
and
sub
mov
shl
jnp
jns
sub
push
jecxz
push
inc
xchg
sbb
ss
or
fsave
lcall
andl
inc
xchg
lret
push
jmp
jno
push
imul
sub
cmp
lds
adc
mov
call
or
loope
xchg
shl
jmp
mov
test
popf
jle
add
fistps
subl
push
sarb
cmpsl
push
stos
jmp
mov
mov
add
imul
mov
mov
popf
clc
mov
mov
gs
jne
xlat
push
mov
dec
scas
push
dec
sbb
jg
push
rcll
mov
les
je
and
sbb
and
add
and
rol
sub
xorb
mov
ret
add
pop
dec
in
data16
iret
fs
xor
sbb
mov
add
push
cmp
adc
add
sbb
lock
jne
loopne
mov
movsb
push
inc
in
or
mov
in
mov
frstor
add
mov
jnp
stos
xor
outsb
insb
push
ljmp
outsb
andb
pop
daa
adc
ja
mov
fdivrs
mov
sti
mov
lock
inc
jo
sbb
mov
sbb
cmp
loop
aaa
icebp
mov
bound
imul
jmp
push
aam
lods
cltd
jne
mov
mov
or
int
dec
insb
sbb
stos
dec
fs
or
clc
push
enter
sub
notl
dec
insl
outsl
and
lahf
inc
shrb
mov
adc
cmp
shr
or
dec
rcr
xchg
outsl
jle
mov
clc
xchg
mov
test
adc
dec
jb
push
pop
jecxz
jae
or
mov
rcrl
repz
or
dec
dec
inc
pop
std
dec
and
sbb
mulb
or
jmp
jmp
lret
push
jg
lods
pop
aaa
outsl
popf
loopne
std
ds
iret
sub
mov
cmpb
push
jmp
repnz
mov
daa
call
leave
ret
loopne
jl
jge
mov
cmp
shr
xor
xchg
adc
and
inc
or
cmp
lds
stos
sbb
ljmp
pop
lock
adc
pop
adc
push
mov
push
lods
xor
loopne
pop
cwtl
mov
scas
inc
push
pop
dec
mov
dec
push
sbb
dec
js
shll
lea
jmp
xor
jmp
pop
insb
les
in
lahf
adc
sub
xchg
test
cltd
sub
xlat
iret
in
into
inc
arpl
xchg
sarb
es
mov
decb
js
getsec
dec
stc
repnz
mov
outsb
movsl
out
pop
pushf
lods
iret
cmp
pushf
inc
ljmp
push
add
push
ss
fdivs
std
popf
shl
je
rolb
dec
sahf
or
adc
xchg
xchg
jmp
sbb
mov
imul
mov
xchg
jno
or
lods
pop
push
mov
cltd
repnz
and
jp
ljmp
fistps
mov
ljmp
in
out
in
cld
or
jl
out
jmp
fdiv
xchg
cmp
aad
xor
pusha
cwtl
nop
js
ret
outsl
and
jae
push
ss
std
mov
dec
mov
ret
mov
pop
mov
daa
jne
pop
mov
mov
mov
fiaddl
ss
into
jmp
pop
arpl
loop
jne
push
bound
cmp
imul
add
xchg
jl
out
pop
xchg
dec
scas
dec
pop
lahf
cld
testl
pop
mov
push
hlt
scas
cs
cmp
fsubrs
popa
xor
and
ret
scas
xchg
outsl
xor
sbb
pop
pop
cmp
dec
cmp
sub
sarb
mov
mov
jnp
mov
pop
jge
test
add
sbb
jmp
jbe
pop
js
sbb
sbb
insb
add
in
add
repz
push
movsl
out
aas
xchg
sbb
mov
outsl
cmp
orb
int3
test
popa
inc
sbb
cmc
shll
and
add
and
lahf
xor
cmp
dec
inc
mov
sub
xchg
fldcw
cmpsl
push
imul
xor
fdivl
mov
jb
ret
push
adc
int3
fcoml
sub
out
mov
jp
popa
mov
aam
es
shr
xor
mov
xchg
bound
bnd
push
rorb
bound
ja
dec
popf
mov
add
loopne
out
cltd
pop
iret
xchg
nop
shrb
inc
sbb
in
lock
sub
and
lea
shlb
push
push
das
out
into
fs
and
push
insl
xchg
xchg
xchg
push
push
mov
or
and
dec
out
pop
add
mov
cmp
jl
std
and
lret
rcll
mov
fimull
je
ret
add
pop
jmp
out
cmp
es
fcomps
insb
bound
inc
insb
jae
push
sbb
pop
push
adc
pushf
pop
mov
mov
push
fiaddl
outsb
push
sbb
mov
cmp
mov
outsb
aad
xor
fwait
addr16
adc
fld
mov
mov
mov
stc
leave
out
stos
adc
outsb
pop
dec
xor
stos
dec
jl
xchg
outsb
imul
add
decb
das
cmovne
popa
sub
popf
hlt
popf
data16
aad
stc
cmp
pop
lds
jge
push
add
pusha
xchg
subl
push
es
ror
adc
pop
dec
outsl
xor
jge
xchg
mov
scas
mov
cmp
lahf
mov
jne
imul
aad
pop
lds
mov
mov
sbb
add
jno
scas
dec
adcb
leave
add
sub
ret
iret
sbb
mov
cmpsl
lods
jne
in
xlat
nop
sub
pusha
fnstenv
cmpsl
sub
repz
push
and
mov
jae
incb
addb
mov
sub
sahf
out
add
fsubr
stos
dec
sbb
into
push
xor
or
xchg
dec
ret
xchg
cwtl
repnz
add
lock
mov
sub
shl
xlat
xchg
push
iret
scas
push
ja
sub
push
sub
enter
dec
mov
into
test
mov
jmp
xchg
gs
std
ret
mov
shl
ficompl
mov
cmp
jb
sub
mov
bnd
call
or
cmp
add
jno
cmp
test
sarb
xor
xor
mov
es
cmp
imul
push
shll
fdivrp
cmp
test
stos
movsl
loopne
adc
call
iret
sbb
mov
and
jmp
ja
notl
cmp
popa
adc
in
lcall
mov
dec
jb
negl
jb
sub
insl
sbb
push
test
movb
rorb
ficomps
ret
lods
ljmp
sti
xchg
fdivs
adc
pop
pusha
jb
js
stos
test
aas
insl
cmpsb
inc
add
xor
jp
xor
inc
out
inc
dec
sbb
loopne
add
sti
xchg
xor
in
setne
leave
or
mov
cmp
and
mov
mov
add
mov
jmp
aam
inc
xorb
inc
mov
gs
popf
ss
mov
aam
pushw
or
jmp
psllw
and
popl
add
pop
gs
and
jbe
adc
inc
int
mov
mov
adc
add
stos
cmp
add
xlat
inc
repz
and
ficoml
pop
imul
xchg
mov
mov
xlat
cli
lods
dec
stos
push
and
cli
gs
xor
and
mov
cld
jp
jno
xor
cwtl
pop
xchg
inc
pop
outsl
pushf
lea
jo
pop
rorb
adc
out
lret
sub
push
xorb
ja
fnstsw
and
subl
scas
add
cmpsb
lret
mov
aas
dec
push
in
lcall
lea
inc
stc
mov
les
test
mov
jo
push
sti
daa
clc
jg
add
stos
inc
push
test
cmpsb
sbb
mov
int3
ss
gs
insl
mov
decl
shlb
jg
mov
movsl
ret
inc
ss
pop
test
mov
sbb
inc
pusha
xor
sbb
mov
add
loopne
inc
cmc
jmp
lret
cmp
enter
jge
inc
in
aam
fidivrs
movsb
push
add
xor
inc
repnz
mov
dec
xchg
repz
idiv
rcr
fimull
loopne
iret
repz
lods
push
icebp
filds
scas
aas
cmp
stos
aaa
notl
or
adc
pop
sbbl
ss
mov
inc
int
xchg
cmp
roll
adc
sub
sahf
jge
out
out
mov
mov
adc
jge
int
fwait
je
imul
test
mov
xchg
mov
mov
jbe
mov
in
repz
push
out
repnz
cli
xchg
enter
scas
mov
es
or
mov
test
cmc
cwtl
pop
pop
jecxz
xchg
ljmp
or
sti
or
stos
dec
mov
push
jnp
xchg
mov
stc
shr
jb
sti
addr16
ss
nop
jbe
ret
pusha
imul
call
xchg
pop
daa
mov
or
out
pusha
imul
dec
mov
mov
lods
pop
adc
gs
cld
pop
mov
iret
ljmp
mov
dec
sub
jno
pop
cmp
call
mov
adc
pop
sbb
out
cs
lret
jle
inc
test
out
sbb
pusha
sbb
and
call
dec
push
bound
add
or
dec
or
xor
jne
insl
push
fisttpl
or
mov
into
sub
push
fs
enter
ljmp
push
stc
aaa
and
fs
pop
mov
jge
stc
add
xor
xchg
pop
popf
mov
xchg
ds
sar
data16
enter
mov
outsl
out
sbb
push
push
inc
mov
lock
in
jo
cmp
push
dec
inc
cmp
adc
cmp
lret
inc
aas
lret
push
cltd
cwtl
sbb
fwait
sub
int
daa
fistpl
test
hlt
movsl
pop
mov
in
pop
popa
xchg
lcall
jg
pusha
inc
sbb
add
sbb
jmp
mov
jns
jne
jle
stc
and
lods
sbb
jb
mov
aas
aaa
adc
dec
pop
mov
and
lcall
cmc
cmpsl
dec
push
int
cmp
sti
call
mov
lds
fsubl
xor
ret
dec
add
jb
sbb
xchg
dec
mov
sbb
add
out
les
es
mov
sar
outsl
xorl
decl
iret
mov
pushf
push
sub
leave
in
mov
mov
in
xor
mov
insl
rcrl
icebp
push
rol
pop
jb
rep
mov
jecxz
les
outsb
inc
push
mov
adc
xchg
in
out
jns
shll
lret
jle
sahf
je
pop
add
xor
fcomi
sbb
mov
imul
rclb
xchg
push
mov
pop
or
in
sahf
add
add
xor
rolb
subb
ds
xchg
int
push
lcall
insl
jecxz
ljmp
jp
pop
je
ret
sar
leave
pop
test
test
inc
sub
std
fs
rolb
add
outsl
push
aad
mov
pop
mov
imul
push
in
addr16
lea
sbb
mov
sub
mull
js
inc
stos
sarl
cld
mov
pop
mov
cltd
popf
jg
fists
repnz
je
and
inc
cmp
mov
outsl
jge
xchg
push
cmpsl
aad
frstor
or
sub
adc
xchg
add
cli
fstpl
pushf
fisttps
hlt
mov
dec
or
popf
jmp
pop
mov
inc
jp
fmul
mov
sahf
dec
jae
idivb
clc
dec
inc
push
loope
add
sbb
lods
es
and
in
mov
xorl
jno
hlt
pushf
ja
add
addr16
or
jl
cmp
movsl
inc
mov
inc
das
jo
and
out
ljmp
jg
rclb
push
push
mov
cmc
sub
dec
aas
xchg
leave
rorl
sar
cs
sub
pusha
push
ja
ljmp
call
push
jnp
jge
xorb
mov
dec
mov
cs
sbb
cmp
pop
add
jecxz
scas
cmpsb
call
ja
xor
call
jnp
andb
lods
adc
fs
lret
lods
leave
lahf
and
in
adc
jne
xor
mov
mov
jge
test
icebp
loope
cmp
inc
jbe
jmp
or
push
adc
loope
divb
pop
xor
in
and
shl
mov
sahf
imul
ljmp
cmpsb
jo
stos
hlt
int
sbb
in
mov
sbb
lock
lahf
ljmp
or
outsb
mov
pop
inc
sub
pushf
sbb
mov
in
addr16
xchg
fsubs
movb
ss
push
mov
push
lea
and
aaa
mov
mov
mov
cmc
pop
fisubrs
sub
dec
xchg
jno
sub
lods
hlt
adc
int
jae
dec
std
cli
push
cmpb
push
push
fistpll
ficoml
sbb
cmpsb
aas
aam
ja
dec
mov
popf
mov
out
push
enter
mov
mov
lock
rorb
xchg
sbb
leave
pop
dec
imul
aas
sahf
pop
add
ret
scas
mov
xor
sbb
inc
sbb
lahf
jno
cltd
in
ljmp
fsub
jg
adc
push
fcoml
ds
daa
mov
lret
mov
ljmp
pop
mov
mov
enter
pop
and
mov
mov
xchg
dec
das
or
cmp
jnp
push
hlt
jge
mov
push
and
fidivs
mov
movsl
idivb
pop
in
ud1
dec
xchg
clc
test
xor
mov
lahf
or
fsubp
dec
jo
aad
sub
lods
movsb
cmp
rcrl
jae
jmp
out
jne
fnstenv
jno
out
ljmp
sahf
not
clc
ja
push
aaa
movsb
or
mov
iret
push
rol
lds
xchg
testl
shl
xlat
dec
jo
lea
fiadds
dec
jecxz
jmp
pop
test
popf
and
in
pop
and
mov
dec
subb
mov
test
shrb
in
add
xchg
or
int3
dec
clc
lcall
sbb
pop
xor
repz
cmpsl
std
jo
aaa
andl
inc
ret
cmpsb
jb
inc
mov
outsl
push
imul
into
mov
jbe
insl
sbb
rol
leave
sbb
into
inc
xorb
lods
addr16
mov
enter
cwtl
gs
out
out
push
cs
ss
andl
andb
scas
dec
aad
subb
jecxz
lods
in
sub
nop
in
scas
ss
stos
or
pushf
pop
imul
and
push
out
xorl
scas
mov
loop
pop
lret
bnd
aad
dec
sub
popf
inc
inc
pushf
out
and
fmull
xchg
cmpsb
loopne
jg
pop
leave
push
pop
enter
sub
push
dec
fs
xor
push
dec
and
loope
cmp
cmp
push
fmuls
data16
daa
fwait
adc
sbb
sbb
in
xor
out
js
adc
stos
cmp
or
mov
bound
and
shr
sti
iret
mov
rorb
adcl
push
out
xchg
mov
insl
call
enter
jb
pop
push
stos
je
sahf
fists
rorb
pop
in
mov
jmp
xor
push
or
loop
out
or
popf
push
xchg
shlb
adc
arpl
sbb
not
xor
xor
inc
cld
add
mov
adcl
lret
push
mov
mov
das
sub
arpl
das
ret
test
roll
xlat
inc
sbbl
adc
mov
nop
xchg
mov
mov
call
pop
xor
push
mov
inc
jns
push
leave
imul
fcmovnu
rcrl
push
loop
out
sub
cs
test
dec
loopne
mov
aas
lods
cmpl
enter
rcrb
xor
incb
pop
sub
xchg
imul
test
stc
inc
pop
jno
aaa
cwtl
dec
test
mov
iret
jl
xor
push
sub
pop
push
dec
inc
push
and
cwtl
data16
pop
punpckldq
scas
jb
rcrb
pop
sub
test
cmpsl
push
mov
outsl
sub
push
sub
or
rclb
enter
lods
loopne
fsubr
jae
into
jecxz
ja
mov
aam
push
xchg
stos
xchg
push
mov
adc
ficompl
jb
jae
data16
std
shrl
lock
cmp
test
sub
and
jge
icebp
jne
or
pop
rcrl
inc
cmp
pusha
popa
vmaxpd
push
xchg
sbb
dec
inc
inc
add
mov
mov
out
in
adcl
inc
mov
pop
inc
test
adc
xor
push
lods
add
push
ja
xchg
or
gs
ds
leave
lahf
or
push
pop
xor
jl
jle
add
faddl
and
ljmp
into
std
scas
sub
cli
sub
fdivrp
lods
clc
xor
arpl
rclb
js
test
std
xchg
xchg
add
lods
outsb
pop
add
push
data16
pop
cmp
out
mov
ljmp
cs
xor
or
stos
cmpsl
lock
push
lcall
loop
ss
aas
bound
inc
dec
cmp
pop
pop
icebp
idivl
add
in
fcomip
popa
mov
in
jae
cmp
nop
mov
adc
or
or
bound
enter
add
xchg
sub
jl
aas
jno
test
es
push
daa
mov
arpl
push
test
pop
test
xor
cld
mov
mov
fisubrs
daa
outsb
cmp
sbb
jne
test
mov
adc
push
bswap
mov
icebp
sub
fsubl
in
lods
bnd
xlat
popa
js
je
movsb
and
cmp
cwtl
fstps
insb
outsb
or
call
xchg
jbe
and
movsl
jnp
and
call
test
inc
out
ret
cli
jne
cmp
lret
xor
mov
lcall
add
dec
iret
out
movsb
sbbl
in
rorb
xor
mulb
add
faddl
andl
mov
cmp
lods
loope
inc
mov
ds
cmp
out
fisubrs
out
mov
mov
mov
adc
outsb
ja
or
push
jbe
cmpsl
pushf
push
push
pop
adcl
cmp
or
iret
pop
repz
mov
aad
imul
ret
cmpb
and
add
loopne
outsl
mov
push
mov
mov
fadds
xlat
daa
fwait
inc
mov
loop
mov
xchg
mov
jl
je
ret
cmp
sub
push
or
mov
lea
nop
dec
jbe
bound
inc
or
decl
aas
in
lock
add
std
sub
pop
std
jb
ds
adc
fwait
or
rcll
repz
iret
dec
pop
pop
nop
fwait
sbb
and
xor
lahf
mov
ror
mov
and
sub
fiadds
out
ljmp
shl
iret
int3
popf
pop
ds
je
cmp
and
idivl
sub
incl
mov
stc
sbb
aad
mov
out
mov
xchg
push
popa
mov
dec
cs
fimull
dec
or
fwait
push
mov
loope
inc
mov
mov
ss
mov
call
jb
ss
push
pop
je
lcall
les
clc
pop
insl
adc
addr16
fcmovnbe
xor
adc
and
pop
shll
cld
fistpll
iret
inc
inc
jnp
cmpsb
lock
or
aam
sbb
cmp
pop
fistps
cltd
mov
or
xchg
insb
les
ficomps
sbb
sti
fiadds
cwtl
lret
mov
scas
mov
lock
sbb
xchg
xchg
fmull
fwait
cmp
adc
hlt
cmp
jl
and
stos
lret
add
sarl
call
aam
dec
sub
loopne
mov
subb
push
inc
shrb
flds
out
out
adc
fidivs
repnz
dec
ljmp
andl
xchg
mov
iret
ret
ljmp
lock
push
inc
and
cmc
add
sub
mov
inc
mov
stos
ret
pop
test
aad
jne
xchg
ljmp
imulb
scas
faddl
cmp
sbb
inc
stos
add
push
cltd
lret
pop
out
mov
dec
cld
or
xchg
cmp
divl
cmp
adc
mov
push
icebp
pop
mov
mov
cli
mov
rolb
push
fistps
jge
inc
push
mov
mov
pop
clc
or
mov
ss
cmp
jle
mov
andb
daa
xlat
sub
iret
xor
popa
movb
cli
adc
int3
mov
aaa
adc
mov
jle
mov
mov
jp
sbb
add
jo
icebp
addr16
push
dec
movsl
movsl
pop
pop
pop
xchg
ss
enter
popf
or
imul
sti
push
xorb
cmp
cmp
stc
pusha
ja
mov
cmpl
cmp
loopne
stc
inc
mov
or
divl
pop
mov
ret
hlt
rcrb
xor
xchg
es
cltd
pop
mov
dec
jno
cmp
cmp
adc
scas
aam
dec
inc
jo
mov
cmp
aas
jp
push
push
nop
inc
lret
idivb
fsubp
ret
fildl
nop
inc
enter
jns
mov
adc
lcall
sbb
pop
out
cli
cmpsl
dec
push
cli
jge
aam
jo
mov
inc
dec
fcmovnu
mov
jbe
insl
xchg
xor
mov
mov
add
je
repz
scas
dec
mov
mov
aas
add
push
and
push
sub
sub
jmp
pop
xchg
test
mov
add
or
in
pop
or
jg
mov
dec
cmpsl
xor
mov
pop
mov
int
mov
sbb
dec
icebp
jge
push
mov
sarl
mov
jo
test
pop
filds
push
lea
ret
cmp
adc
popf
iret
aad
mov
inc
arpl
push
mov
aam
xlat
cwtl
loopne
cld
lock
ljmp
push
or
cmp
cmpsb
sbb
adc
mov
adc
dec
fisubl
movsl
les
aad
mov
adcb
jmp
fcoml
lds
stos
inc
cmp
inc
lret
adcl
add
iret
mov
mov
fimull
mov
xchg
jge
push
mov
outsl
sub
out
ror
mov
dec
xchg
jle
aad
mov
inc
div
inc
lods
std
inc
cmp
leave
jecxz
div
mov
in
sbb
push
fs
jge
dec
cltd
push
repnz
push
sbb
jb
jns
cmp
xor
and
mov
fiadds
mov
or
mov
inc
xor
pop
ret
ja
cmpsb
mov
lods
xlat
mov
fmuls
pop
mov
jecxz
cmc
rclb
aam
repz
mov
in
cmp
fwait
sahf
lods
adc
test
call
mov
lcall
add
jnp
jmp
sub
xchg
and
mov
mov
loop
lret
mov
fildll
jl
jnp
mov
ret
inc
pop
into
mov
popf
nop
addb
xchg
call
in
sbb
out
mov
jecxz
xchg
pop
stos
xchg
fisttpll
mov
inc
push
hlt
cmp
pop
pushf
sub
mov
mov
cs
sarl
repnz
sbb
lcall
int
cltd
dec
jae
jns
sbb
lret
push
jl
out
mov
dec
jl
mov
sub
mov
imul
add
sub
mov
adc
das
and
push
stos
xchg
movsl
lods
fisttps
pop
sbb
pop
xor
jle
xchg
mov
imul
or
mov
into
jae
jnp
mov
or
jg
out
nop
out
pusha
sarb
repnz
shl
adc
add
shlb
sbb
cmpb
movsb
jp
repz
adc
cmp
fwait
push
dec
pushf
push
add
jecxz
push
or
push
ret
shl
pop
cmp
xor
orl
fcoml
mov
shrb
test
or
add
push
xchg
mov
or
js
jecxz
hlt
xchg
adc
int
fistps
dec
xchg
mov
mov
cld
mov
inc
pop
mov
mov
jne
jp
push
xchg
test
mov
inc
add
dec
pushf
sbb
fbstp
adc
sub
mov
pop
push
cmp
clc
or
ss
loopne
mov
popf
iret
mov
adcb
xor
popf
xchg
add
adc
xchg
sub
lret
aas
sbb
std
cmc
sub
jge
sub
push
and
push
add
cmc
int3
sahf
cli
int
or
or
and
mov
mov
fs
jae
rcrl
gs
mov
xchg
cmp
push
rcll
inc
fwait
cmpsb
xchg
cli
iret
fwait
sti
es
push
cli
test
scas
pop
adc
add
rcll
lahf
push
xchg
jnp
clc
sbb
cmp
jo
fstps
rdmsr
mov
add
pushf
test
aaa
fcmovb
lahf
sub
inc
or
bound
pushf
stc
das
out
loope
push
icebp
xchg
add
sub
push
mov
repz
add
enter
push
mov
into
push
loope
push
add
out
adc
adc
clc
xchg
mov
lcall
idivb
mov
and
xor
push
ret
push
aaa
mov
adc
in
xchg
testl
stos
outsl
je
scas
adc
xchg
dec
dec
sub
jo
sbb
idivb
test
mul
bound
mov
sbb
aam
xor
into
xor
pop
sbb
dec
push
push
fstps
stos
and
inc
mov
pop
jae
pop
call
bound
pop
sub
xor
outsl
or
mov
and
test
and
negb
add
das
rcl
dec
pop
push
jne
call
fwait
push
push
add
cmpsb
test
sbb
mov
and
ror
sbb
imul
dec
je
test
push
inc
fiadds
mov
aaa
mov
data16
push
add
test
xor
pop
inc
idiv
popa
mov
xor
lea
scas
cltd
pop
test
stc
pushl
int3
aaa
je
sbb
into
and
cmp
pop
test
add
js
jp
add
int3
clc
insl
imul
enter
xor
bound
inc
inc
sbb
mov
push
lock
push
sbb
adc
and
sbb
jl
cmp
iret
lock
out
mov
push
lds
xchg
mov
dec
aad
nop
push
cmpsb
pop
rolb
jne
lods
inc
inc
call
fcmovnu
cmp
dec
xchg
lock
or
xchg
pop
imul
fsubl
cmp
cmp
aas
fmuls
call
pusha
cmc
adc
out
add
sti
cmp
int
cs
xor
add
cli
gs
push
or
scas
es
pop
and
bound
shlb
pop
sahf
fdivl
loop
or
jle
jno
mov
jb
mov
imul
add
pusha
add
pop
and
xchg
jo
adc
sbb
addr16
sub
adc
pop
add
cltd
dec
add
lds
xchg
dec
aas
and
mov
in
xor
lds
js
repnz
push
sti
add
xchg
lret
in
repz
in
fiadds
mov
cmpsl
xchg
shlb
movsl
das
mov
cld
or
mov
inc
mov
xchg
xor
mov
in
in
mov
sub
inc
sbb
dec
xchg
jge
adc
outsl
mov
jle
lds
or
out
pusha
jbe
cmpsl
jle
pop
add
add
pop
call
test
or
je
addr16
xor
xchg
out
leave
fistpl
xchg
inc
ficompl
shl
test
in
mov
ficompl
jo
sbb
incb
outsl
fidivrl
mov
jb
push
mov
pop
push
std
inc
push
or
adc
xchg
xchg
and
aas
pop
adc
lea
inc
xchg
cmpl
mov
or
or
fmuls
push
test
mov
dec
cmp
jbe
or
jl
popa
fwait
ljmp
call
mov
lods
movsl
ret
cmp
fidivl
adc
push
shrl
inc
incb
sbbb
xor
jecxz
push
aas
jo
sbb
mov
mov
pop
dec
push
mov
push
adc
adc
xchg
stos
imul
in
std
push
and
scas
or
push
sub
leave
rcrb
mov
sahf
pusha
jne
stos
jle
les
orb
loopne
add
mov
mov
add
out
cmp
addr16
jns
ja
dec
inc
jnp
xchg
cmpsb
mov
ficoms
gs
lock
pop
nop
mov
or
pop
xlat
test
jne
rcll
push
loope
lret
jo
int
outsl
das
mov
and
sahf
mov
mov
xchg
in
loope
sub
sub
push
and
xchg
test
xor
push
adc
and
mov
and
pusha
gs
mov
sbb
push
insl
adc
fnstsw
push
mov
adc
fs
iret
mov
or
out
jns
adc
mov
fdivr
mov
adc
xchg
and
dec
movsb
sbb
jle
pop
push
push
aas
mov
dec
icebp
xchg
mov
dec
in
movsb
mov
sahf
lock
xor
fldcw
pop
sbb
es
loopne
add
out
out
aas
xlat
jle
mov
pop
inc
xchg
mov
push
dec
sbb
aas
inc
aad
fistpl
inc
add
cmpsb
popa
xchg
cmc
lock
push
insl
rcll
arpl
dec
jne
pop
dec
out
and
inc
mov
cmp
xchg
lea
rcl
movsl
pop
adc
mov
xchg
push
push
hlt
xchg
test
clc
pop
fnstsw
insl
js
pop
vpmacswd
sahf
cmp
sub
sub
loop
test
push
dec
test
movsb
add
mov
mov
xchg
cmp
cmp
push
sub
imul
push
jge
sbb
ror
add
adc
pop
mov
stos
xor
xchg
sbb
mov
xchg
mov
addl
add
dec
jl
sahf
pop
outsl
jg
out
and
pop
xchg
sahf
jge
inc
push
scas
outsb
pop
out
aad
pop
out
cs
xor
stc
cltd
test
dec
filds
mov
fidivrs
jnp
daa
testb
popf
mov
jne
repnz
in
insl
xor
ds
mov
and
imull
sbb
sbb
imul
mov
imul
ds
mov
call
pop
pop
or
test
dec
push
fdiv
mov
add
sbb
or
jne
ds
out
inc
jg
cmp
fstl
push
xchg
add
cmp
loopne
mov
lods
rorb
sbb
call
pop
cmc
xor
adc
add
icebp
jmp
fsubrs
jle
push
jbe
inc
inc
enter
out
mov
mov
pop
jns
int3
dec
sbb
nop
das
sbb
mov
push
or
ljmp
in
xlat
mov
pushf
sbb
mov
cmpb
fistpl
xor
cmpsb
sbb
sbb
in
cmp
dec
jecxz
mov
in
les
data16
enter
xchg
sub
arpl
mov
mov
fcoml
jno
jg
lret
xlat
pusha
add
lcall
jle
and
addr16
lods
sahf
jmp
pop
or
push
nop
mov
sbb
popa
lock
out
daa
push
pop
andb
pop
cmp
pop
add
ret
sub
sbb
subl
cli
shll
pop
int
or
into
repz
addr16
xchg
cmpsl
in
mov
sbb
xchg
scas
mov
or
lods
stos
push
add
mov
pop
sarl
fisubrs
push
movsl
stc
mov
sub
shrb
repnz
sub
xchg
fidivs
in
and
cmp
sub
pop
and
push
and
push
xchg
add
push
frstor
pop
xchg
adc
test
sahf
fiadds
dec
mov
sahf
or
lds
scas
repz
or
out
rcrl
cmp
pop
lods
scas
adc
icebp
inc
mov
test
cmpsl
sti
inc
adc
lods
fs
lds
mov
stc
adcb
add
scas
add
fidivl
lcall
xchg
pop
movsl
mov
pusha
push
mov
xor
cmpsb
jno
lock
or
add
shrl
push
jbe
cmpsl
pop
dec
jg
les
daa
cmp
add
js
lock
sbb
fmull
movsb
aaa
adcb
dec
loope
add
push
stos
xor
iret
das
sub
and
mov
pop
les
sub
movsb
add
push
int3
push
jg
add
mov
pop
xchg
sahf
jno
jl
mov
addl
addb
rcll
sbb
inc
leave
lea
adc
enter
push
hlt
xchg
arpl
and
sub
mov
sbb
lahf
xchg
inc
xorb
cs
push
scas
mov
cs
es
cld
mov
popf
int
mov
jne
push
ret
sbb
push
imulb
enter
inc
jle
mov
aam
fsub
adc
pop
xchg
push
xor
loop
sbb
mov
mov
subb
xor
outsl
fcomps
and
into
and
roll
pushf
fwait
pop
inc
cmp
adc
pop
std
pop
inc
test
nop
lcall
rolb
arpl
bound
pushl
add
sbb
and
loope
gs
fwait
push
adc
lock
and
jge
scas
inc
lcall
mov
push
adc
and
push
stos
test
push
jg
data16
cwtl
jp
cmpsb
inc
movb
or
out
adc
pop
sbb
sub
mov
stos
push
movsb
addr16
sub
sub
jno
jecxz
mov
movsl
rolb
cmp
repz
cmp
int3
ss
leave
daa
mov
je
arpl
lahf
push
or
cli
cmpsb
adc
push
cld
or
cmp
scas
or
out
or
in
lods
jp
push
sub
notb
pushf
xchg
and
std
jne
xchg
push
xchg
jecxz
inc
pop
adc
in
jb
add
cld
out
pop
aam
jle
sub
add
test
xor
cmovns
adc
mov
rolb
not
jno
xor
xchg
pop
insl
stos
and
cli
aam
push
lods
cmp
movb
shlb
scas
ficoml
jmp
mov
sbb
loope
aas
repz
cmp
pushf
inc
sub
out
fs
stc
jle
mov
imul
int
ret
xchg
leave
gs
cld
fildl
mov
adc
pop
inc
pop
insb
ja
or
ljmp
sarl
rcll
adc
mov
xor
adc
test
pop
jae
sub
inc
dec
or
jbe
frstor
sub
leave
push
es
je
repnz
lret
insb
pop
daa
dec
arpl
xchg
ja
scas
movsb
ret
ret
out
and
ret
sarb
mov
push
xchg
xchg
mov
cld
addr16
sub
decb
subl
mov
sub
or
in
cmp
mov
push
adc
sub
xchg
jnp
inc
xor
mov
imul
sub
push
lods
and
or
push
les
out
pop
pop
ljmp
adc
icebp
adc
adc
stos
outsb
mov
mov
mov
adc
xor
dec
sbb
or
and
loope
in
sbb
test
xchg
push
movsl
sub
call
lea
cmp
dec
rep
inc
lret
popf
stos
mov
ret
lea
fildl
adc
sbb
xor
lret
jnp
add
popf
xlat
or
cmc
mov
jbe
jg
jecxz
lret
dec
dec
ljmp
fistpl
and
lea
add
fsubrs
xchg
call
aam
outsb
xor
in
fisubl
adc
pop
dec
inc
xchg
cli
cmpsl
sar
push
out
ljmp
inc
call
jmp
xchg
in
hlt
mov
testb
pushf
sahf
sub
shll
mov
pop
pop
jno
hlt
push
or
pusha
test
sahf
pop
cmpsl
aas
cli
out
jns
jle
inc
testb
jmp
xor
in
or
sarb
inc
test
addr16
adc
ds
dec
imul
mov
leave
movsl
pop
outsb
xchg
fsubrl
dec
jmp
xlat
insb
or
fwait
sub
insl
push
and
cmp
mov
loope
jns
mov
lods
test
jl
andl
outsb
or
pop
xchg
lahf
inc
and
lods
nop
push
mov
push
aas
movsl
add
daa
push
xchg
js
testb
or
or
jmp
pop
scas
mov
or
aas
out
test
pop
lods
push
mov
jge
or
lods
xor
rolb
cltd
stos
js
xor
inc
jno
fs
shll
sti
push
mov
inc
test
pop
hlt
aam
cld
outsl
sub
dec
pop
lcall
jl
xchg
mov
outsb
iret
dec
in
lods
add
push
sahf
stos
adcl
imul
icebp
xor
iret
push
sub
mov
xlat
in
lret
dec
call
pusha
jecxz
pop
fnsave
sbb
sbb
out
or
sbb
push
cmp
add
fnstsw
jg
daa
cmc
fsubrl
lds
adc
push
or
clc
repnz
sbb
ljmp
fwait
ret
ljmp
mov
cmpsb
dec
push
inc
xchg
call
pushl
fdivrs
lods
insb
dec
dec
loopne
dec
cld
sbb
scas
xor
push
pop
push
jb
outsl
insl
or
push
jbe
popf
pop
movsb
hlt
stc
nop
sti
dec
mov
xor
out
mov
into
cmp
pusha
adc
sub
mov
push
cld
ret
test
add
adc
xor
adc
xchg
ret
or
mov
xchg
mov
adc
inc
push
sbb
mov
addl
pop
pop
cs
mov
and
cmpsb
add
adc
inc
mov
or
dec
mov
mov
push
ret
rcrl
cmp
push
movb
lods
sub
je
nop
icebp
shlb
scas
sub
or
int
sub
sbb
inc
mov
subl
dec
bound
loope
imul
jg
daa
int
mov
mov
fimuls
inc
xor
roll
loop
and
dec
push
pusha
out
clc
jb
clc
mov
add
shrl
fmuls
adc
or
sub
or
in
xchg
mov
cmc
xchg
stos
push
sbb
mov
and
test
movsl
hlt
jns
inc
nop
jl
out
mov
js
jmp
lea
imul
jmp
and
mov
adc
add
fsubrs
xchg
clc
add
jns,pn
jmp
out
adc
stos
jmp
xchg
pop
shlb
rolb
jge
cmp
mov
push
jecxz
sbb
cmc
imul
fmul
cs
xor
sbb
imul
adc
adc
loop
lods
into
cmpsb
popf
mov
cmp
sub
lret
repnz
sbb
pusha
ja
dec
in
or
jo
es
xchg
aam
daa
jne
xchg
dec
and
aas
jp
notb
cwtl
arpl
fldt
not
dec
or
sbbb
repz
lahf
sbbb
call
dec
test
push
dec
aaa
xchg
fdiv
or
into
fcomps
and
xchg
push
xor
cmpsb
mov
jmp
adc
xor
cmpsl
jle
faddl
dec
out
outsb
cvtps2pd
cmpsl
jecxz
lahf
shll
cmpsb
mov
aas
mov
clc
adc
insb
mov
xchg
mov
xchg
or
scas
sub
jg
outsb
inc
pop
dec
push
inc
out
sar
mov
div
xchg
pop
roll
mov
sub
adc
dec
lea
dec
icebp
mov
xchg
dec
cmp
cs
push
ja
sahf
ss
in
cmp
ja
insb
sar
out
adc
mov
inc
add
push
add
push
arpl
push
shlb
or
jl
or
sub
pop
test
arpl
and
pop
hlt
jo
pusha
pop
in
cltd
dec
adc
aad
mov
popa
push
push
mov
push
cmpsb
ret
mov
mov
sarl
sub
ret
dec
test
mov
sti
inc
pop
orb
xor
movsb
cwtl
jns
je
std
fwait
xor
jno
and
mov
sbb
loope
push
mov
addr16
sbb
mov
jl
mov
sbbb
push
daa
push
pop
sbb
icebp
add
lret
jo
jno
push
and
mov
sbb
lret
add
sub
pop
out
cmp
clc
movsb
addr16
push
mov
mov
jae
pushf
loop
add
pop
cmp
je
and
adcl
or
stos
mov
das
mov
or
daa
add
inc
mov
lahf
fisttps
inc
sbb
int3
sub
sub
dec
out
inc
mov
inc
adc
dec
xchg
lods
cwtl
xchg
aaa
lahf
mov
in
ret
lods
addr16
std
imul
mov
es
rcrl
mov
pop
mov
lret
xchg
push
and
sub
lret
lds
push
je
xor
stc
dec
leave
dec
lea
mov
push
xor
xchg
xlat
pop
in
pop
push
inc
add
xor
lods
xor
repnz
jmp
lret
les
adcb
jns
imul
ds
jecxz
fistpl
and
or
adc
ret
pshufw
ret
push
jecxz
das
aas
aam
jle
mov
xchg
aas
mov
lods
outsb
outsb
adc
lea
fildl
out
adc
std
je
ret
aad
fldt
fisttpll
cli
ret
sub
cmpl
dec
jg
lods
outsl
xor
xlat
inc
pusha
cmp
test
push
leave
in
pop
jg
pusha
and
scas
mov
inc
sub
repnz
rorb
xchg
scas
jbe
out
mov
xchg
push
pop
je
fwait
push
pop
and
repnz
xchg
pop
repnz
stos
mov
stos
pop
popf
sub
jmp
mov
vmread
outsb
call
pop
loope
sarb
mov
stc
nop
repnz
enter
mov
pop
int
cmp
pushf
cmp
ret
outsl
subb
or
sbb
outsl
imul
stc
fimull
mov
loopne
push
sub
pop
pop
dec
fdivrl
movl
adcb
aaa
js
or
test
aad
outsl
push
aaa
out
fs
pop
lock
adc
jne
mov
je
cmp
popa
lcall
shll
daa
push
push
mov
and
jl
mov
inc
jle
xchg
int
add
add
cmpsl
or
ds
fldl
lds
pushf
mov
pop
mov
push
lret
mov
and
out
mov
shl
sbb
sahf
outsl
inc
adc
cmp
jle
ret
mov
rcrb
adc
les
sti
adc
out
popa
inc
cli
pop
ror
sbb
or
int3
mov
xor
dec
sbb
mov
data16
xrelease
inc
push
int
iret
jmp
sub
scas
sub
movsl
cmp
das
inc
sbb
mov
sub
xchg
cli
test
jmp
cld
xor
out
xor
repnz
stc
mov
cwtl
js
ljmp
and
xchg
push
rorl
sbb
aas
pop
xchg
loop
adc
push
shr
jnp
imul
push
std
pavgw
pop
lods
fbstp
mov
cltd
mov
sub
xchg
dec
stos
ljmp
pop
and
fmull
ja
mov
jle
loope
jecxz
outsb
push
and
inc
cmp
insl
mov
es
cmp
add
push
add
out
mov
cmpsl
int
add
mov
or
dec
sbb
adc
lret
mov
mov
pop
movl
xchg
cmpl
sub
faddl
lods
neg
xchg
hlt
adc
test
xchg
jmp
pop
mov
sub
mov
out
mov
fwait
pop
gs
data16
inc
push
lret
adc
push
int
jae
iret
mov
aad
lar
mov
xchg
enter
xor
mov
push
inc
mov
and
aas
jnp
mov
jl
and
mov
cwtl
shll
xor
mov
jbe
pop
into
inc
fwait
aad
lcall
mov
sub
out
cmp
mov
fs
js
sub
jmp
dec
pop
sbb
mov
jnp
sbb
jmp
inc
iret
daa
add
mov
imul
pop
pushf
movsl
sub
mov
cmc
mov
out
js
mov
xor
mov
out
lods
ror
leave
jp
inc
cwtl
lret
jge
adc
xlat
fistpll
in
sbb
fwait
xorl
add
mov
ss
xor
fidivl
call
xchg
dec
fists
lcall
mov
mov
mov
enter
mov
xor
out
and
lock
pop
aas
outsl
push
xor
pop
bound
mov
cmp
jns
pushf
insb
fmull
sbb
je
in
daa
out
ds
jge
jmp
arpl
inc
adc
mov
adc
outsb
fiaddl
fwait
insb
cwtl
push
dec
cld
xchg
les
outsb
shrl
xchg
sahf
mov
mov
out
aad
test
mov
pushf
xorl
js
xchg
popf
mov
movsb
mov
jne
fnsave
ffreep
and
and
cs
insb
not
mov
mov
mov
add
popf
push
or
xor
in
mov
pop
xchg
rcrl
mov
adc
or
jo
and
lahf
repnz
jp
jno
push
or
lret
data16
ljmp
jg
enter
adc
fmull
fwait
std
rclb
bound
shll
sub
adc
in
das
bnd
pusha
pop
call
add
call
aad
pop
popf
push
pop
xor
xor
aam
out
into
mov
mov
xor
pop
adc
sub
xchg
pop
cmp
je
adc
das
clc
inc
test
inc
push
xlat
mov
sub
leave
sahf
pop
dec
add
cmp
push
pushf
cltd
or
in
js
lock
dec
cwtl
mov
pop
cmp
divb
sbb
jno
lret
pop
sti
cmpsb
pop
or
push
mov
test
loope
in
fldcw
pmulhw
clc
add
jo
jmp
dec
push
lret
outsl
orl
ds
int3
jns
lods
imul
movsb
dec
cmp
adc
icebp
out
int3
mov
imul
in
scas
push
xchg
out
cmp
add
dec
fldl
jle
push
daa
in
pop
sbb
pop
hlt
popa
xor
or
xchg
push
sbb
jns
divl
jg
or
es
les
cmpsb
mov
cmpsl
mov
xor
pushf
mov
jns
adc
inc
xor
xchg
pop
jo
adc
mov
cli
mov
std
inc
add
pop
jne
push
stc
ja
pop
adcb
pop
pop
jge
std
mov
jne
xor
fcmovb
stos
fldt
inc
in
fcoml
cmpsb
shlb
stos
and
jl
sbb
cltd
push
sbb
jns
dec
push
xor
mov
mov
jge
jns
push
inc
cmpsb
push
pop
mov
mov
fcoms
shlb
sbb
adc
fstl
mov
mov
dec
call
gs
ror
cwtl
outsl
push
cltd
jmp
cld
mov
fs
jns
sbb
imul
or
fistpl
push
int3
mov
lods
andl
js
cmp
sahf
loopne
enter
stos
jns
pop
xchg
jne
mov
test
test
call
mov
lret
loope
jle
popa
shl
ds
pop
mov
in
or
insb
fistpl
lret
ds
mov
adc
sbb
jmp
pop
sbbb
jge
inc
sub
pushf
imul
das
add
ljmp
loopne
fisttpll
out
and
sbb
lods
inc
cmpb
test
popf
inc
or
rorb
aas
push
fcompl
leave
cmp
push
jecxz
sub
dec
pop
or
fldt
mov
mov
shll
jge
in
sbb
dec
test
jnp
jmp
mov
cmp
xlat
cmp
adc
rolb
leave
push
fidivrs
jg
cmp
mov
mov
cmp
in
adc
pop
cmc
xor
sti
aaa
add
xchg
xchg
sbb
push
sti
fcomps
ss
cmp
stos
ficomps
decl
add
stc
sarl
xchg
add
fsubs
sbb
aam
rcll
fistpll
icebp
neg
sub
fisubs
jmp
nop
xchg
dec
in
out
jo
ss
xchg
mov
rcll
nop
cmp
rep
push
or
ficoms
sbb
add
pop
arpl
in
xchg
adc
mov
mov
test
les
jae
jne
stos
adc
ljmpw
push
ljmp
test
imul
cli
and
jg
in
xor
lock
nop
lahf
mov
outsb
rolb
jns
addb
daa
scas
test
ret
subb
inc
stos
dec
imul
cmpsb
leave
loopne
and
int
sub
lods
ret
and
out
fs
fdivl
arpl
pusha
fldenv
push
pop
pop
lret
inc
loopne
mov
sbb
arpl
jecxz
push
jne
xor
xchg
iret
adc
cs
add
add
sahf
outsb
lea
pop
mov
pop
adc
outsl
add
sti
xor
sbb
jp
mov
sbb
mov
adc
es
jns
test
popa
xchg
jl
rolb
insl
test
cmp
fs
mov
shll
mov
pusha
test
pop
adc
mov
push
mov
popf
inc
pop
test
dec
test
movsl
lods
xorl
jp
ja
jmp
paddsw
and
adc
mov
push
xor
icebp
xor
enter
daa
rorl
popa
lods
lods
inc
jmp
xchg
mov
push
ss
xchg
jno
push
xchg
push
fsubl
mov
or
sub
mov
add
movsb
fcmovbe
push
lods
cmp
sti
xor
hlt
push
cmp
ret
fisubl
xchg
sbb
cmp
roll
test
jb
jl
sbb
xchg
jbe
mov
jne
movsl
xchg
cmpsl
jg
and
icebp
fcompl
rcll
int3
fidivrl
into
push
in
xchg
js
jb
les
popa
cmp
enter
fstps
iret
xor
inc
xchg
inc
xchg
or
es
jg
jp
sub
jmp
inc
cmp
xchg
pop
inc
inc
aam
fmulp
orl
dec
pop
loop
jno
push
jg
lock
dec
jno
notl
pop
pushf
subb
rolb
push
push
movsl
movsl
lahf
icebp
sbb
add
mov
push
fsubs
adc
mov
repnz
mov
dec
cmp
into
pusha
invd
jb
aaa
ret
fwait
add
lds
shrl
pop
out
mov
add
xor
adc
inc
adc
xchg
ret
jge
dec
pop
ret
sub
xchg
and
xchg
sbb
hlt
push
jo
addr16
outsl
and
rorb
les
out
std
push
xchg
dec
mov
and
dec
mov
cwtl
or
pop
out
jp
push
int
mov
jl
data16
inc
inc
sub
imul
sbb
lods
add
fistps
and
insb
or
out
jbe
inc
jbe
push
sbb
cmc
push
sbb
jle
loopne
inc
test
in
cli
xor
pop
add
xchg
mov
scas
in
fs
pop
mov
xchg
ss
cltd
push
add
dec
cmc
popf
jbe
push
add
push
outsb
dec
and
mov
mov
repnz
pop
fcmovb
cld
mov
inc
leave
push
jg
and
or
dec
adc
cltd
dec
out
fwait
add
jae
pop
mov
ja
es
fs
imul
cltd
in
js
leave
lcall
fimull
outsl
push
ljmp
jno
aaa
push
cs
lea
sarb
and
in
cmp
dec
mov
jg
ja
xchg
shll
mov
pop
add
insb
mov
push
jg
inc
inc
ret
test
filds
adc
xor
outsb
xor
xchg
jecxz
and
mov
xchg
or
xchg
jo
adc
lret
cwtl
push
adc
andb
out
adc
repnz
popf
cmp
dec
in
pop
push
out
mov
adc
cmc
dec
faddp
adcl
cld
fnstcw
push
push
push
mov
sbb
repz
cmp
adc
pop
fildl
fisubs
mov
aas
pop
cmp
adc
lds
lds
in
pusha
jle
or
mov
shlb
movsb
xchg
cmp
out
sub
jg
lcall
mov
ficompl
adc
add
adc
mov
push
in
pop
fldenv
mov
cmpsl
cmpb
loope
xchg
xchg
or
adc
sbb
in
mov
jge
scas
jmp
in
cmc
pop
aad
mov
out
testl
or
shll
addr16
add
xor
mov
inc
out
idivb
pop
leave
mov
mov
iret
ds
xchg
or
scas
sti
xlat
jmp
dec
jo
mov
jp
dec
mov
rolb
jg
fadd
movsb
shl
ss
xchg
add
push
insb
sub
hlt
stos
fcmovb
bound
addr16
and
push
outsb
cmp
jg
mov
and
test
pop
push
adc
jle
jp
lods
push
mov
jl
lahf
mov
jbe
pop
mov
adc
push
popa
adc
aad
pop
shll
push
cmp
adc
fstl
xor
shlb
roll
cmp
and
add
mov
mov
movsb
cs
mov
sbb
sub
xor
lds
add
inc
fcmovu
stos
fs
mov
cmpsb
mov
enter
mov
repnz
jmp
xchg
push
sbb
subb
xchg
js
lock
lds
in
fmul
sub
pusha
fsub
mov
jb
sbb
mov
std
xor
loope
sbb
loopne
scas
jmp
out
addl
addr16
inc
sub
fisubs
xor
out
pusha
fimull
test
movsl
mov
stc
push
or
dec
popa
insl
mov
shrb
ja
push
insl
int
imul
call
and
cmp
sub
das
cmpsl
ljmp
aam
lcall
loop
fadds
or
lds
pop
and
loopne
repz
lcall
cltd
or
ds
in
push
dec
cmp
repz
mov
int
shrb
pop
pushf
mov
pop
or
and
movsl
inc
popf
xchg
inc
repz
xor
aam
lret
cmp
aaa
movsb
pop
in
sub
fnsave
xlat
sub
aam
mov
ds
arpl
cmp
pusha
test
sti
sti
cld
dec
test
stc
int
or
or
mov
sbb
rcr
and
ja
je
xchg
add
push
sbb
jno
cld
mov
xchg
sti
in
xchg
imul
clc
jnp
out
out
xor
cmp
test
mov
movsw
aam
pop
repz
dec
push
add
stos
mov
add
iret
sti
xor
sub
mov
int3
push
nop
add
lcall
xchg
mov
jl
jne
js
pop
xor
dec
lds
into
test
int3
int
out
aaa
mov
test
ret
nop
cs
cmp
mov
outsb
testb
clc
dec
rcll
mov
orl
mov
ja
lock
pusha
std
fidivl
movsb
lock
sub
or
cmc
pop
test
push
xor
mov
arpl
sbb
mov
jp,pt
sbb
jge
push
or
fldt
add
mov
js
adc
jg
add
cmpsb
sbb
pop
xor
repz
adcb
arpl
xor
out
out
test
mov
or
cmpsl
rcrb
mov
out
out
or
cmp
or
js
cmpsb
mov
shll
scas
lds
or
imul
lods
icebp
adc
xchg
mov
lret
stos
loopne
mov
mov
js
lret
xor
mov
fcompl
cld
pop
out
js
outsl
lock
or
push
mov
or
xchg
add
cmp
mov
lds
fiaddl
sbb
sub
repz
mov
push
pushf
xor
in
pop
and
or
cld
xlat
pop
mov
pop
pop
andl
lock
divl
popf
mov
ret
inc
inc
repnz
popf
sarl
mov
push
jo
stc
xchg
dec
in
mov
adc
lods
lods
dec
test
int3
push
ja
lret
insb
pop
and
cmp
daa
in
add
add
sti
jmp
inc
icebp
clc
push
aam
mov
xor
jbe
or
nop
push
pop
xchg
ret
mov
sub
mov
cmp
sbb
fwait
jbe
int3
mov
rorb
inc
cli
ror
lahf
pop
mov
shrb
hlt
push
mov
fldt
fwait
scas
jp
cltd
mov
push
or
adc
cmpl
xor
sbbb
aad
pop
daa
aas
cs
jae
mov
test
xorb
xchg
push
push
les
les
sub
adc
jne
pop
stos
jnp
out
daa
stos
xor
pop
mov
push
xchg
push
and
popa
cmp
add
fcoms
ljmp
push
inc
inc
std
pusha
mov
jl
sti
fwait
into
repz
sub
jae
push
mov
or
aaa
jns
push
mov
jo
hlt
icebp
or
pop
addr16
jnp
sub
aaa
test
popa
into
repnz
push
jl
and
mov
cld
cmp
xor
cmp
dec
cmpb
roll
pop
dec
pop
mov
or
mov
mov
mov
adc
or
inc
leave
ljmp
gs
fstl
xor
pop
icebp
pushf
lret
sbb
pop
cmp
xor
mov
out
into
out
iret
cmp
pop
inc
xor
mov
cmpsb
push
mov
mov
pmaddwd
mov
mov
popa
sbb
jae
sbbl
push
and
out
push
mov
popf
dec
pop
mov
pushf
dec
test
das
mov
add
xor
add
int3
cmp
pop
inc
cmpsl
call
sbb
dec
adc
les
fidivrl
cmp
ret
cmp
out
sbb
or
mov
outsb
stos
inc
dec
clc
movsl
push
xchg
jle
std
in
leave
or
or
and
pop
cltd
addr16
out
adc
adc
in
into
pop
jg
jae
popf
push
pop
mov
inc
icebp
idivl
outsl
mov
outsb
call
or
pop
inc
icebp
fstpl
iret
mov
push
xchg
shrl
es
popa
push
call
dec
mov
jb
inc
orl
push
push
push
or
cld
hlt
xrelease
or
mov
in
xchg
jnp
jle
add
jns
jno
mov
movsl
lahf
je
mov
icebp
mov
xchg
xchg
mulb
in
sbb
cld
jne
mov
push
cmp
dec
sbbl
mov
out
mov
push
iret
add
fistpll
lcall
and
cmp
rcll
or
test
gs
in
and
push
xchg
push
js
sub
icebp
adc
sub
push
and
cmc
adc
sub
mov
fmuls
inc
das
rcr
pop
mov
out
xor
scas
jge
out
je
cwtl
cld
or
jae
pop
and
addr16
and
fiaddl
bound
and
adc
or
cmpsb
adc
xchg
xchg
ja
cmc
push
fcoms
call
mov
dec
lds
sar
xchg
pop
gs
test
aaa
lret
dec
das
inc
ljmp
lcall
mov
cmp
add
rcl
pop
in
xor
cmpsb
mov
mov
call
test
decl
mov
xor
pop
or
jl
lahf
mov
mov
sbb
push
in
mov
cltd
inc
insl
dec
icebp
and
aaa
mov
push
inc
mov
jg
je
pop
or
cmp
stc
push
sbb
push
les
repz
je
mov
xchg
sarl
mov
jl
and
xor
cwtl
jg
mov
dec
jae
xor
mov
repz
or
xchg
cmpsl
sub
orl
push
push
xlat
fstpt
or
and
lds
inc
lret
sbb
mov
adc
mov
or
dec
jmp
cltd
fcomps
sub
leave
and
mov
xchg
pop
mov
mov
mov
mov
adc
xor
scas
jp
inc
sahf
addl
shrl
imul
ficoml
and
push
outsb
mov
mov
es
shlb
mov
cmc
push
or
cmpsl
dec
fwait
push
xlat
cmpl
leave
je
jno
jbe
lea
add
lock
lock
stos
fildll
and
loop
repnz
jle
pop
jg
loope
cmp
inc
xor
shll
pop
outsb
mov
in
mov
add
add
inc
ret
sbb
mov
cmp
cs
shlb
jae
mov
jl
leave
xchg
popf
xor
or
push
scas
mov
add
pop
or
in
test
and
in
out
test
sub
dec
xchg
adc
mov
mov
in
mov
loope
stos
fsubr
cmc
sbb
loope
call
mov
pop
sub
incl
push
divl
lods
push
adc
mov
sub
mov
mov
je
cmp
push
or
jne
cmp
int
lock
inc
outsb
inc
push
cmpb
and
mov
addl
sub
mov
pop
mov
pop
adc
jne
jg
jae
jle
mov
test
jno
mov
pop
and
ret
in
lcall
inc
rorl
sub
or
dec
outsb
aas
int3
icebp
arpl
aas
test
pop
cmpsb
sbb
in
sbb
xchg
and
fnstenv
daa
or
pop
mov
adcl
push
cld
loope
out
jmp
push
clc
jecxz
imul
sub
sarb
sub
xchg
aad
inc
ficompl
ds
inc
mov
jge
mov
inc
hlt
cmp
arpl
lods
sbb
test
xor
add
ss
mov
push
and
sub
les
add
jg
mov
dec
jle
and
dec
movsb
test
ss
cltd
popf
mov
sbb
cld
or
lret
cmp
icebp
jmp
fisttpl
les
xchg
stos
add
fiadds
mov
fmulp
sub
adc
iret
dec
add
mov
dec
push
or
fldt
aad
pop
stos
pushf
sbb
add
ret
xor
inc
movsl
sbb
and
add
out
fs
xor
and
pusha
lret
notl
cmp
cmpsb
lret
inc
sub
and
loop
inc
and
pop
mov
push
jle
xor
push
adc
adc
jge
rcrb
mov
pop
pop
mov
mov
sbb
icebp
push
fldenv
mov
mov
stos
push
jae
sub
test
and
sbb
inc
test
mov
sbb
call
insb
xor
add
loop
dec
jge
xchg
imulb
or
cmp
mov
or
and
or
jns
insb
pusha
arpl
dec
iret
shl
sub
dec
pop
fs
push
mov
stos
fidivs
jns
push
fimuls
pushf
cmp
repnz
add
pop
js
ret
add
pop
popa
xorb
push
jmp
stc
rcll
jecxz
pop
leave
cmpsb
scas
lret
jmp
outsb
dec
xor
scas
and
adc
xor
data16
adc
loopne
flds
xchg
pusha
pop
pop
mov
push
pop
or
or
add
shrb
out
bound
iret
sahf
pusha
mov
xor
ss
dec
aam
jmp
jle
sbbb
int3
jne
pusha
fnstcw
sbb
cmpxchg
push
pextrw
sbb
or
sub
int
lahf
adc
mov
daa
and
aaa
js
popf
jbe
je
pop
jae
data16
repnz
push
mov
cmp
ds
bound
mov
fwait
adc
sub
add
inc
sbb
sti
jg
sar
lcall
push
aam
lock
jg
and
iret
jae
inc
aas
adc
jmp
ljmp
dec
push
rcll
mov
cmpb
sub
inc
pop
stos
ficoms
dec
hlt
dec
je
push
das
fcomps
mov
mov
sti
arpl
inc
add
inc
xorb
jne
out
rol
mov
imul
cld
out
inc
enter
in
sub
pop
stc
fisttpl
push
js
mov
and
sub
fisubrl
enter
pop
testb
loopw
lds
sti
push
jb
pop
loope
add
push
xchg
pop
stc
sub
in
push
or
add
mov
mov
adc
mov
push
nop
inc
sarb
dec
push
lcall
dec
lods
mov
xchg
push
jo
sbb
out
mov
add
xchg
sub
popf
cld
mov
repz
popf
or
mov
mov
pop
arpl
fstp
sets
mov
xor
leave
pop
xchg
push
mov
adcl
out
mov
xor
xchg
sub
inc
jnp
cld
adc
xor
scas
jno
cmp
test
cltd
data16
mov
jl
divb
add
cmpsb
jl
xchg
and
mov
jmp
cwtl
repnz
pop
sahf
outsb
push
add
mov
pop
ret
xchg
imul
in
pop
outsb
jecxz
jge
jl
mov
int3
aas
xchg
pop
adc
and
mov
ficoms
inc
jne
pop
jbe
fst
in
lods
loope
movsl
jmp
adc
dec
xor
mov
dec
call
sahf
cmp
test
adc
ficoml
push
sub
arpl
int3
cmovp
out
mov
pop
xchg
test
lahf
add
sub
inc
enter
jo
lcall
inc
test
xor
and
mov
mov
add
mov
in
ljmp
adc
fs
xorb
mov
ja
insb
xchg
in
stos
pop
add
fs
sub
mov
dec
call
roll
xchg
leave
repz
hlt
sbb
or
aaa
add
negb
adcb
scas
jnp
mov
xchg
jae
push
mov
popa
xor
pop
pop
dec
jne
inc
fimuls
and
mov
jae
mov
jmp
cwtl
sbb
imul
add
pop
and
pushf
mov
xor
out
outsl
jnp
xor
adc
xchg
arpl
test
push
inc
fsts
mov
mov
jle
and
jp
inc
push
mov
and
sub
dec
fnstcw
popf
ja
or
sbb
mov
jmp
fcomps
xor
mov
shll
ja
fwait
bound
gs
cmpsl
je
jne
jmp
mov
cwtl
add
jno
in
insb
push
ror
xor
mov
outsl
sbb
inc
dec
push
add
sub
pusha
inc
mov
das
pop
jns
xchg
sub
rcrb
addr16
adc
das
sub
mov
enter
std
jmp
loopne
mov
pop
xlat
push
aas
sbb
push
outsb
mov
xchg
dec
mov
out
inc
nop
rcrb
jno
mov
add
jmp
cmp
lds
int
mov
add
inc
mov
sbb
and
into
flds
test
jno,pt
jno
outsl
push
mov
xchg
push
rcll
or
mov
sahf
mov
mov
cmc
je
dec
fsubs
jmp
cmpsl
and
mov
sahf
stos
test
jecxz
xchg
inc
xchg
jns
mov
das
pop
clc
clc
negl
sub
lret
inc
js
mov
dec
xor
les
sbb
inc
xor
and
lcall
insb
jl
shrb
mov
lock
lods
adc
loope
push
mov
cmpsb
lods
shll
in
repz
pushf
decb
xor
dec
sub
cltd
add
hlt
test
mov
lahf
push
aad
push
add
nop
enter
or
mov
aam
push
xlat
aas
mov
mov
or
std
mov
dec
inc
sar
mov
cmc
xor
mov
nop
and
xchg
mov
out
ss
mov
arpl
cmpsl
jo
add
fs
nop
test
sub
sub
mov
xor
outsl
sbb
inc
push
repz
adc
jmp
js
jns
lahf
cmp
cmp
ficomps
mov
jns
std
loopne
mov
fidivrl
cltd
ret
gs
pop
inc
mov
out
mov
push
jbe
push
push
mov
xchg
cli
insb
push
fsts
xor
lahf
pushf
outsl
lea
std
icebp
adc
cmp
push
mull
adc
sbb
jno
adc
jp
cmp
sub
mov
cmpsb
mov
dec
adc
loope
stos
xor
stos
sbb
push
xor
mov
cmp
mov
sbb
inc
fldenv
sub
mov
loope
das
andb
ds
mov
pop
push
xchg
flds
test
push
in
inc
sti
and
rcrb
ss
mov
inc
cmp
dec
out
jmp
inc
cs
pop
popa
push
xchg
mov
adc
fsubrs
pop
aas
into
mov
push
lcall
bound
cltd
mov
push
mov
outsb
inc
fs
hlt
std
scas
pop
imul
or
jns
leave
sub
lret
sub
jb
fiaddl
addr16
aad
cmpsb
xor
xor
insb
scas
lret
andl
stc
add
sbb
pushf
xorb
push
int3
lea
push
rcr
cmpb
fcompl
loopne
cmp
cmc
mov
cmp
lret
mulb
in
jne
add
in
test
cltd
mov
adc
pop
push
out
xchg
or
dec
sbbb
sub
dec
sti
dec
imul
pop
pop
movsb
ret
adc
stos
rcl
insb
outsl
add
popa
or
push
or
pop
loope
jge
cli
sbb
jle
xor
xor
or
sbb
inc
adc
test
iret
adc
adc
pop
cmp
mov
sbb
pop
fwait
in
aad
mov
mov
jbe
mov
cwtl
adc
pop
and
in
test
arpl
lods
cmp
or
test
or
mov
and
divb
sub
jnp
inc
cmc
inc
jecxz
iret
insl
push
mov
mov
adc
mov
call
jnp
ljmp
stos
int3
imul
es
push
sub
ret
adc
rcl
inc
cmovae
inc
jne
insl
hlt
out
and
jecxz
pop
insl
iret
cmc
sbbb
ds
adc
adc
test
jns
insl
xchg
scas
or
sbb
ss
add
pop
es
mov
inc
mov
inc
dec
mov
int
xchg
push
cmpsb
xor
and
inc
loop
dec
or
jns
or
int3
adc
dec
pop
lea
pushf
push
jp
inc
xchg
xchg
xchg
mov
mov
lret
out
call
xchg
ret
pop
inc
inc
int3
mov
dec
pop
imul
mov
mov
push
jno
nop
push
fsub
loopne
and
push
pop
loopne
iret
push
sub
and
push
push
adc
xor
mov
or
leave
lds
movb
sahf
mov
add
lret
out
ljmp
aas
sbb
lret
jbe
xchg
mov
movsb
xorl
jmp
sbbl
mov
push
fldt
cwtl
push
js
mov
mov
mov
inc
or
clc
jb
fwait
ret
adc
mov
or
push
xchg
mov
jo,pn
outsb
lcall
push
cmp
sbb
arpl
dec
push
add
in
test
fs
jne
ret
add
jecxz
cmp
ljmp
repz
mov
imul
adc
pop
or
leave
notl
push
xacquire
cmc
mov
inc
adc
mov
mov
cld
out
mov
icebp
stc
outsb
mov
pop
in
cmpb
js
push
inc
scas
ljmp
ficoml
jecxz
test
inc
sbb
sub
pop
js
mov
fsubrl
jne
push
enter
movb
mov
xchg
mov
das
xchg
cli
sub
inc
xor
mov
adc
xchg
nop
pop
lea
pop
or
mov
mov
push
daa
fldt
adc
cltd
mov
js
xlat
sub
cli
mov
dec
xor
or
mov
sbbl
mov
mov
mov
cmp
sar
neg
sub
in
outsb
or
cld
cmp
scas
hlt
add
or
out
movsb
pop
loope
mov
cld
rcl
dec
mov
mov
push
mov
xchg
clc
cs
jg
rcrb
push
pop
inc
sub
insl
push
inc
jl
mov
insl
cli
jbe
fcompl
push
fnstenv
rclb
push
xchg
sahf
in
pop
enter
xchg
adc
sti
jb
jl
dec
jl,pt
shll
jnp
mov
mov
andb
jb
cwtl
jno
scas
arpl
aad
or
sbb
cltd
mov
cmp
lods
pop
push
adc
pop
jne
jl
cld
or
xchg
loope
ljmp
imul
add
rcr
pop
cld
xorl
jbe
jno
ds
jbe
mov
shr
mov
mov
jmp
cmp
in
jle
mov
lahf
adc
xor
clc
ja
mov
sub
call
jo
jmp
jmp
clc
hlt
inc
xor
mov
sbb
sbb
mov
push
sti
out
movsb
xor
xchg
xchg
mov
aad
dec
orb
xor
sbb
lds
sub
mov
and
xlat
adc
aam
jae
lahf
inc
loope
imul
push
ret
ret
jecxz
cmpsl
or
or
jo
push
sbb
mov
mov
out
push
aas
xor
aam
sub
pop
push
xchg
xor
cmpsl
pop
push
sub
in
push
mov
push
sahf
mov
push
cmp
pop
scas
add
dec
push
pop
aaa
pop
or
sbb
into
xchg
outsl
jne
cmp
fdivs
into
daa
jl,pt
mov
ja
negb
mov
dec
les
mov
shl
movsb
sahf
imul
sbb
dec
out
push
cmpsl
or
mov
pop
ret
mov
out
mov
stc
add
pop
pusha
mov
sbb
clc
ja
jns
fs
jle
xchg
xor
shrl
shl
ljmp
adc
mov
out
xchg
or
push
fdiv
adc
sub
lods
xor
mov
sbbl
out
es
lcall
mov
imull
ljmp
cli
setbe
push
rcrb
rcll
sarl
xchg
es
xlat
repnz
pop
inc
mov
jnp
xchg
inc
sbb
lock
inc
jns
nop
imul
das
mov
dec
pop
mov
add
sub
xchg
mov
jmp
in
or
sarl
mov
sub
inc
and
andl
sahf
cmpsb
dec
bound
pushf
les
rcrl
int
xor
ror
cli
pop
jp
and
addl
jle
sub
xor
jl
mov
pushl
les
push
test
mov
leave
push
jle
addr16
nop
cmpsl
sbb
mov
mov
mov
add
lods
insl
mov
sahf
outsb
popa
insl
hlt
loopne
push
sub
xchg
in
mov
jmp
mov
xor
sti
dec
cmp
inc
xchg
push
ds
sbbl
and
imul
mulb
test
mov
inc
inc
into
fsubrp
xchg
mov
mov
lea
rolb
int
arpl
lods
xchg
and
int3
in
inc
insl
pop
push
addr16
fwait
xchg
test
jge
and
dec
loope
repnz
adc
adc
ficoml
xchg
cmpsl
sub
adcl
mov
mov
daa
mov
jmp
and
into
and
dec
mov
pop
pop
outsl
test
sarl
jg
popf
jp
shll
jb
jns
dec
xchg
jns
clc
and
cmp
andl
mov
fnstsw
cmp
aaa
dec
jno
in
rorb
test
out
mov
lahf
xchg
in
repz
add
xchg
add
outsl
inc
mov
cmp
loop
sub
push
dec
push
mov
scas
subl
frstor
sub
sub
or
sti
adc
inc
mov
adcl
lret
add
jne
mov
std
movsb
mov
push
imul
sub
jae
push
and
mov
pop
and
push
mov
pop
and
push
and
xchg
dec
sbb
mov
pop
ds
das
add
inc
sti
incb
clc
or
pusha
rcrb
push
faddl
pop
sti
and
dec
xchg
jmp
mov
shll
arpl
push
mov
loop
add
and
add
js
test
inc
sbb
xchg
add
adc
jnp
js
pushf
push
mov
jl
aam
push
and
movsl
adc
jmp
and
push
pop
inc
jns
popf
inc
jp
mov
imul
push
push
fld
sbb
imul
test
jp
and
call
out
inc
fimull
arpl
rorl
dec
mov
pop
cli
or
arpl
ds
mov
rcrb
sub
xchg
je
xor
xchg
loope
std
jno
scas
inc
xchg
loopne
insl
jo
pop
mov
cld
xchg
sti
cs
fdivl
stos
mov
push
xchg
adc
push
mov
int
inc
imul
addl
sub
cmpsl
and
lds
add
pushf
sub
out
fmulp
mov
pop
in
cmp
sub
pop
lret
outsb
add
stos
int
into
dec
lods
mov
mov
out
in
ja
insb
loopne
cmp
xor
adc
jle
mov
mov
pop
fwait
inc
push
sub
pop
adc
sti
fistpll
cmpsb
cmc
outsb
sub
adc
inc
clc
jp
in
jecxz
pop
xor
mov
popa
shlb
push
test
sti
out
push
cld
sub
pop
fadds
sbbl
add
push
xchg
jne
cmp
xor
mov
xchg
mov
ja
clc
inc
movsl
inc
xor
jp
xchg
dec
xchg
ss
enter
aad
stc
mov
mov
ret
pop
fidivs
hlt
rorl
nop
clc
lods
std
movb
add
pusha
xchg
frstor
xchg
daa
cmc
arpl
or
lea
lds
sub
ss
push
push
jbe
push
mov
push
ja
lock
mov
pushf
sbbb
icebp
sbb
fstpt
xor
lods
mov
imul
xchg
mov
adc
mov
sbbl
xor
shl
or
ljmp
repz
insl
dec
insb
push
sub
or
hlt
pop
pop
add
movsl
out
push
movsb
xchg
hlt
xchg
jns
xor
fldl
cmpsl
test
cmp
movsl
sarl
cltd
jnp
mov
dec
in
mov
shrl
mov
in
test
push
mov
mov
xor
xchg
mov
mov
xchg
jmp
xor
leave
adc
jns
addr16
sub
insl
outsb
jecxz
pop
call
aaa
pop
cmp
or
stos
rcl
xor
fimull
xor
mov
adc
aam
dec
shll
inc
aam
rcl
addl
mul
mov
inc
jae
push
clc
mov
lret
and
jae
dec
and
mov
jmp
pushl
dec
mov
fstpl
xchg
mov
xchg
and
test
xchg
inc
lds
add
into
out
in
add
xchg
pop
jmp
push
repnz
mov
scas
xchg
dec
sbb
pushw
push
sub
mov
cli
sbb
xor
and
lret
cmpsl
xor
inc
mov
push
bound
imul
inc
xchg
push
outsl
sbb
dec
gs
jmp
mov
cmp
aam
cwtl
scas
jle
cmp
pusha
dec
int3
les
or
push
dec
mov
cmpl
xor
pop
add
sbb
lret
mov
gs
stos
lea
push
jge
sub
es
sbb
out
jbe
repnz
iret
clc
lahf
aad
pop
aam
push
aas
loope
push
mov
push
in
sbb
adc
push
in
cli
insl
push
scas
clc
pop
sub
outsb
xlat
mov
adc
mov
inc
scas
jge
jmp
movsb
sub
pop
adc
add
fldcw
in
andl
iret
and
into
push
imul
test
adc
and
gs
inc
inc
ret
es
sub
lcall
notb
fldl2e
or
cmpsb
sub
inc
inc
in
rcll
cmp
push
ja
push
es
and
add
and
lcall
push
fcoml
movsl
jne
add
frstor
pop
out
daa
push
jl
popa
aas
jo
or
xchg
ret
push
and
shlb
cmp
hlt
ds
mov
jae
mov
add
nop
jne
sbb
fnstenv
test
movsl
out
pop
pop
add
shlb
mov
leave
ficomps
insb
out
mov
sbb
aad
xchg
xor
sbb
xor
aam
ret
cltd
push
adcb
push
xchg
sbb
push
jge
adc
movsl
es
std
loop
mov
lret
lret
mov
cmpsl
or
and
js
or
ljmp
mov
fidivrl
pop
mov
loope
sub
jle
cmpsb
xchg
in
xchg
push
out
xor
dec
add
lods
push
xlat
movsl
push
leave
lods
repnz
outsb
mov
lods
and
outsl
mov
push
test
jle
xor
cmp
addl
xchg
xchg
inc
and
out
sub
sub
add
jnp
notl
incl
add
inc
popl
mov
xchg
out
lret
cmp
into
cmp
lds
insb
out
adc
lock
sbb
cmp
mov
cld
add
sbb
fisubrs
pop
mov
xchg
inc
push
in
sub
push
rclb
xor
xor
push
dec
jae
mov
mov
add
sub
sahf
cmc
push
test
jb
cmpl
lcall
xorl
sub
test
in
adc
stc
xchg
loope
fstp
insl
inc
inc
jno
ret
fdivrs
dec
jle
mov
xor
fdivrl
sbb
cld
xchg
pop
popa
cmp
test
jmp
push
test
mov
and
les
out
jae
aam
clc
mov
aad
out
fisttps
shrb
test
int
cld
int
clc
sbb
paddusw
movl
xchg
ja
rcll
stos
and
in
jbe
jno
xchg
adcb
test
mov
test
mov
inc
aam
loopne
imul
sub
xchg
cmpsb
out
test
pusha
movsb
mov
cmp
sub
jns
jne
push
loopne
enter
cld
or
pushw
or
cmp
add
cmpb
pop
mov
inc
loop
adc
stos
push
sarl
mov
cli
cmpsb
sbb
cmpsb
lea
in
dec
scas
stos
push
lods
std
push
cmc
rorb
or
xchg
mov
ljmp
arpl
push
mov
xchg
cmpsb
mov
pop
test
add
xchg
adc
dec
sbb
out
scas
sbbb
mov
inc
loopne
cmc
ja
cs
movsb
add
pop
push
pop
mov
aas
dec
cmpl
in
sarl
mov
add
xor
sbbb
mov
loope
sub
jno
leave
psubusb
in
cmpsb
mov
or
and
inc
fstpt
aas
cwtl
xchg
test
iret
sbb
cwtl
push
clc
push
std
daa
or
or
cmp
sub
sbb
mulb
int
add
dec
aam
scas
push
shll
andl
mov
inc
daa
mov
lcall
loopne
or
cmpsb
mov
mov
fldenv
add
aas
aaa
adc
aad
rorl
pop
int3
inc
ret
repz
hlt
enter
mov
lock
pop
push
fs
mov
and
or
rcr
std
dec
mov
pop
adc
ror
inc
sbb
and
nop
fcomps
subb
xchg
dec
jp
daa
mov
jmp
sub
hlt
pop
fisubs
cltd
jle
mov
aad
mov
int3
mov
cmp
jne
jns
jl
xchg
dec
sub
inc
stos
movsl
pop
insl
or
lret
notl
out
sbb
cltd
sbb
inc
nop
andl
lahf
das
outsl
mov
sbb
insw
int3
ja
fmuls
cmp
jmp
add
inc
out
out
mov
add
inc
cltd
leave
fdivr
push
bound
inc
sub
jge
leave
pop
jbe
mov
test
iretw
inc
add
sub
data16
mov
out
imul
in
sbb
decl
fneni(8087
imull
jns
push
icebp
leave
cmp
push
sbb
jno
jmp
xor
movsb
mov
mov
repnz
es
pushf
les
jg
jo
fisubs
inc
das
and
imul
pop
xchg
inc
jb
or
in
inc
hlt
dec
mov
data16
adcl
xor
inc
aas
xor
test
adc
dec
popa
cmp
sub
loope
into
xor
iret
in
and
cmp
adc
cmp
jne
imul
add
sub
repnz
mov
test
rorl
data16
mov
sbb
into
push
popf
scas
or
shlb
and
dec
loopne
cltd
mov
popf
jecxz
or
loop
arpl
or
jo
lahf
je
into
adc
fs
cmp
pop
aaa
ret
xchg
dec
mov
xchg
adc
and
xchg
mov
mov
push
mov
xlat
ret
xor
and
cwtl
add
mov
or
push
mov
repz
push
mov
and
mov
sub
cmp
inc
lahf
nop
adcl
cmpsl
shl
rcrl
sti
fisubl
mov
enter
push
pop
movsl
xor
imul
fmull
add
dec
aaa
idivl
pop
test
cmp
mov
mov
ds
stos
lret
testl
test
xor
or
adc
mov
xor
orl
inc
aaa
fsubs
dec
push
pop
pushf
lock
out
xor
daa
fcomps
fs
xchg
addl
jnp
or
gs
daa
xchg
mov
jmp
pop
jae
xor
lret
jb
jl
pop
jbe
aam
test
mov
cmp
and
pop
in
shr
xor
nop
std
hlt
adcl
call
mov
xchg
inc
movsl
xlat
sbbb
loop
jmpw
add
inc
fs
sub
jae
movsb
mov
lds
rcl
jb
aas
les
in
imul
mov
je
loop
int3
dec
xchg
mov
rcrb
jae
addr16
jno
aas
and
pusha
inc
xor
push
sbb
aas
pop
jp
jae
inc
arpl
xchg
stc
addr16
pop
pop
mov
jb
fwait
sub
ret
orb
jae
adc
aas
int3
enter
sahf
cmpsl
cmp
xlat
mov
cmp
out
mov
sub
adc
xchg
jmp
pushf
sbb
push
loopne
cmp
test
sbb
xorb
pop
xor
inc
lcall
repnz
imul
xor
xor
loop
push
ffree
ljmp
xlat
pusha
xor
adc
mov
insl
icebp
mov
nop
in
enter
jg
lea
outsb
cmp
out
cmp
mov
sub
repz
nop
dec
and
ret
out
inc
cmp
nop
jg
les
xor
xor
repnz
sub
bound
imul
add
mov
stos
es
into
xor
add
scas
dec
and
inc
fidivrl
sbb
shl
inc
xor
cmp
inc
popf
leave
repz
xor
in
call
sahf
sbb
jmp
aad
pop
pop
inc
and
and
jge
xlat
pop
cmp
pop
dec
nop
add
rclb
cmc
movsl
mov
insl
lret
sub
jne
adc
inc
lock
pop
mov
mov
adc
xchg
jb
adc
test
pop
shlb
dec
jp
clc
sahf
jno
mov
aam
jbe
push
jo
xchg
jg
shll
mov
dec
mov
lds
mov
jle
imul
push
xorl
int3
sbb
dec
xor
mov
mov
xor
xchg
ja
mov
jns
dec
fwait
sbb
xor
sub
inc
stos
out
pop
mov
xchg
mov
mov
push
lahf
aam
or
shrb
sub
ret
push
add
mov
push
cld
xchg
dec
enter
lahf
mov
outsb
and
pop
mov
mov
push
lret
adc
push
outsb
xor
mov
jbe
sbb
imul
push
cmpl
push
jne
je
into
inc
xchg
sarl
fwait
or
cmp
mov
inc
and
outsl
push
cmp
xlat
mov
or
pusha
clc
repz
insl
fildll
inc
jne
add
aaa
mov
dec
cmpsw
xor
push
es
daa
pop
mov
pop
sbb
clc
leave
inc
int3
or
cli
sub
xchg
or
lret
pop
lods
inc
lods
and
sub
faddp
ljmp
loope
and
mov
sbb
or
movsb
sbb
mov
int3
jg
or
lahf
adc
lea
sub
jbe
bound
push
or
loop
mov
loopne
sbb
and
shl
movsb
cmp
loop
dec
std
inc
dec
popf
mov
and
and
leave
imul
int3
xor
sub
sbbb
out
mov
adcl
xor
test
mov
cs
xor
cmc
sbb
lods
pop
sub
loopne
fmul
cwtl
in
das
mov
xchg
dec
repnz
mov
push
add
popf
sti
inc
bound
pusha
gs
add
data16
jo
popf
mov
pop
fmul
fsubs
mov
mov
test
and
ds
in
mov
lcall
add
mov
lret
scas
rorl
jb
repnz
scas
sub
ret
enter
sbb
arpl
cmpsl
mov
rcll
mov
lcall
mov
or
jae
movb
mov
xor
dec
or
aas
aam
lods
lret
push
jge
in
ret
ret
sbb
mov
jg
stc
icebp
and
jp
push
enter
push
pushf
mov
cmp
xor
or
sub
repz
xor
push
idivl
adc
sbb
out
inc
in
xor
xlat
daa
vcvtps2pd
test
fisubs
pop
int3
sub
js
mov
sub
cld
jne
mov
aad
int3
sub
sub
jns
ror
mov
lahf
and
pusha
push
add
mov
nop
sti
addr16
mov
mov
mov
cmpsb
mov
xor
pusha
out
push
ret
xchg
lods
lret
mov
addr16
lea
movsb
divl
in
sbb
push
dec
shll
add
or
push
orl
in
loop
aaa
inc
ret
and
ret
ja
mov
dec
push
or
test
data16
cmp
adc
test
aad
sahf
mov
cld
test
rcll
jno
in
icebp
lock
and
scas
sti
stc
cltd
lock
jecxz
aas
mov
mov
sbb
idiv
pop
mov
lret
es
mov
or
jecxz
sbb
mov
jb
mov
call
pop
out
inc
js
fsubs
sub
lea
lret
scas
and
addr16
push
sbb
mov
adc
and
imul
push
jnp
xchg
stos
jmp
sbb
mov
xchg
dec
and
imul
jp
js
std
xchg
fwait
push
lods
in
movb
jns
pop
sbb
add
ds
and
leave
sub
push
xchg
cwtl
fucomp
pop
dec
dec
xor
and
mov
arpl
es
push
mov
das
loop
mov
sarl
decl
out
cmpb
int3
popf
xor
into
and
adc
addr16
xlat
pop
and
rorb
xchg
mov
mov
xorb
or
jmp
push
sbb
mov
mov
push
fldcw
lock
std
int
gs
xchg
push
lods
mov
inc
cmpsl
movsb
mov
call
pop
mov
int
xchg
in
fidivrl
mov
addr16
add
loope
popf
lds
test
out
movl
mov
dec
dec
pop
lods
pop
mov
push
sub
sub
fsubr
jl
lret
sbb
pusha
add
imul
iret
and
cmc
mov
inc
mov
ror
xchg
mov
and
addr16
mov
lods
lret
inc
in
icebp
gs
push
shlb
or
cld
jb
mov
xchg
inc
pop
lods
add
dec
leave
in
and
dec
scas
pop
test
movb
roll
shlb
dec
fmulp
jno
inc
outsb
xor
jmp
mov
mov
mov
inc
jne
and
cwtl
cs
xchg
jno
jno
in
aam
adc
mov
fstps
xor
ja
push
pop
add
jnp
out
popf
icebp
addr16
leave
fists
test
adc
jmp
push
xchg
std
dec
add
mov
push
cli
or
fstps
and
out
add
mov
mov
xchg
mov
jns
fstpl
mov
icebp
xor
in
cmc
or
mov
repnz
push
jne
add
dec
sbb
leave
ss
sub
mov
ffree
mov
aas
shrb
push
aad
arpl
sub
dec
fndisi(8087
gs
dec
call
mov
xchg
jae
rcll
cmp
adc
mov
fstl
and
pop
push
test
sub
pushf
mov
jp
stc
add
into
mov
leave
pop
imul
inc
xor
sbb
sub
pop
in
inc
mov
je
arpl
decl
outsb
cs
mov
fwait
mov
popf
test
ret
sbb
jns
mov
cmp
clc
sbb
dec
xchg
into
lea
js
xchg
cmpsb
stc
xchg
pop
enter
cmpsl
pop
sub
mov
dec
mov
gs
jecxz
sarb
mov
scas
std
cmp
mov
negb
clc
adc
ss
in
aam
cwtl
cmp
push
je
int3
jnp
dec
mov
mov
xor
dec
ret
jo
les
into
std
adc
xchg
dec
outsb
fstps
rcl
push
cmp
xlat
and
ljmp
ja
add
ja
mov
scas
adc
inc
cmp
mov
rcr
push
mov
or
cs
dec
lahf
or
fisttps
adc
push
in
jmp
es
mov
outsl
xlat
jno
test
into
or
lea
and
sbb
stos
lret
fxch
mov
sbb
mov
add
mov
add
mov
lea
in
mov
ja
or
dec
leave
pop
mov
xchg
fiaddl
push
dec
subb
dec
pop
xor
fcoml
arpl
cmp
fisubs
dec
inc
addr16
jmp
repnz
push
mov
push
and
fdiv
mov
xlat
xchg
addb
mov
je
mov
cmpsb
sbb
mov
mov
or
add
xchg
mov
dec
pop
jb
xor
negl
sbb
push
std
imul
push
sub
dec
sbb
cmp
data16
push
jge
out
sbb
and
pop
push
stos
xor
jge
push
sub
outsw
push
xchg
loopne
push
dec
mul
push
daa
xchg
mov
cld
push
cmp
cmp
adc
sbb
out
jmp
pushf
flds
inc
fdivl
inc
mov
mov
mov
mov
aaa
mov
pop
xchg
sbbb
dec
cmp
int3
push
dec
clc
pop
roll
inc
jnp
fmul
jne
inc
int
es
jmp
and
mov
js
adc
jne
jb
mov
pop
push
push
pop
stos
xchg
xor
in
mov
loopne
mov
js
pop
test
pop
lahf
dec
cltd
sahf
fadds
mov
out
xchg
fsubl
out
pop
cltd
adc
in
and
lods
mov
mov
cmpsb
sbb
or
fimuls
xchg
popa
test
test
and
mov
inc
inc
inc
pop
nop
pop
xchg
sahf
xchg
mov
pop
mov
xchg
mov
jge
popf
div
xchg
stos
into
icebp
fildll
in
inc
mov
jmp
cmpsb
adc
pop
pop
sub
sub
ja
mov
push
lea
mov
stc
and
jp
push
in
sbb
push
cmc
add
std
popa
or
out
xchg
or
inc
cmc
and
in
in
mov
sub
call
loop
jno
mov
push
bound
insb
mov
in
xchg
push
push
dec
inc
mov
int
xchg
jo
insl
lret
enter
ja
inc
xchg
js
das
in
push
sbb
stc
loop
sbb
cmp
add
test
ss
das
adc
testb
scas
lods
mov
call
xchg
dec
adc
leave
jp
and
jecxz
sahf
fcoml
mov
mov
out
push
jne
pop
hlt
mov
dec
push
push
js
test
dec
push
das
or
inc
xlat
jns
mov
lret
movsbl
jle
xor
insb
pop
push
out
push
aam
add
loope
lahf
enter
dec
cwtl
push
ds
icebp
cld
add
sub
cmp
stos
dec
roll
mov
int3
rorl
hlt
subb
cmp
adc
jg
pop
imul
arpl
fcomi
mov
inc
xchg
pop
inc
andl
mov
add
jnp
fimuls
jnp
dec
nop
adcb
mov
push
pop
jno
pop
repz
mov
dec
leave
gs
fisubrl
xchg
or
dec
lret
mov
sbb
mov
sbb
mov
in
popf
jbe
dec
pusha
pop
cwtl
stos
jnp
mov
fists
inc
mov
inc
sub
mov
add
fmul
add
lret
cli
jae
jmp
imul
dec
add
cmp
pop
dec
aad
insb
mov
es
shll
pop
mov
insl
mov
fstp
lods
inc
imul
lea
out
jb
popa
jmp
xor
stos
xchg
fmull
insl
jle
mov
or
xchg
icebp
cmp
pop
repnz
pusha
ficoms
imul
jns
std
and
rorb
ja
or
and
mov
stos
lret
fiadds
xlat
pop
inc
icebp
push
fistpll
mov
jmp
insb
inc
or
pop
push
stc
enter
push
arpl
addl
out
js
xchg
out
cmp
in
jp
cmp
pop
pop
xchg
xor
adc
xlat
xchg
push
add
outsb
scas
mov
pop
or
imul
push
and
outsb
adc
scas
cld
xor
inc
add
outsl
shlb
ss
fbstp
repz
shl
mov
ss
outsl
add
shlb
test
in
adc
push
into
cs
sbb
xor
je
bound
inc
jmp
add
mov
loop
mov
xchg
int3
xor
cmc
mov
sub
inc
test
dec
jb
in
aam
dec
aas
add
push
push
xor
adc
ror
cmpsb
mov
hlt
pusha
inc
mov
inc
adc
dec
repz
int3
xchg
mov
cmp
das
clc
scas
fwait
push
inc
jnp,pn
pop
jmp
rcll
mov
call
inc
push
outsl
or
aas
jne
pop
jb
or
jnp
cmp
repz
iret
mov
stc
push
cmp
sbb
and
pop
out
pop
sub
sub
mov
rcr
int
cmpsl
push
test
push
fcmovb
in
lcall
sub
pop
cmp
int3
rclb
repz
out
mov
loope
sub
lds
call
lods
lds
clc
or
lods
lcall
mov
add
jg
mov
adcb
cmp
andl
ror
sahf
fistps
and
xchg
insb
int3
notb
orl
sbb
loope
sub
sbb
sub
mov
dec
pop
enter
push
add
and
mov
in
sbb
in
sti
push
mov
ja
cmc
fnstenv
loope
cmp
jmp
je
cmp
xorl
inc
fstpl
add
out
loope
mov
in
fs
aad
push
stc
sbb
mov
jge
mov
dec
jle
pop
cli
dec
leave
repz
popa
icebp
in
push
inc
outsw
push
cmc
xchg
enter
sbbb
cwtl
sub
xor
inc
cwtl
fcmovnbe
mov
aad
jecxz
inc
add
cwtl
paddusw
pop
scas
shlb
dec
jb
es
and
add
ret
sbb
jbe
and
push
sbb
std
xlat
mov
sahf
add
cld
rorb
inc
pop
push
xor
mov
xor
pusha
icebp
jmp
outsb
xchg
xchg
and
jb
lea
dec
sub
and
fwait
sbb
sahf
jne
mov
inc
jne
or
mov
je
flds
shrl
das
movsb
sbb
dec
inc
cmc
dec
pop
add
das
movsl
xor
sub
mov
jne
dec
es
inc
imul
test
xlat
xchg
into
sub
xchg
lahf
push
cltd
fsubp
enter
fisubrl
out
test
insl
repz
add
dec
and
stos
sbb
ljmp
or
sbb
xchg
and
add
sbb
testl
push
pop
cmp
aad
adc
adc
jge
sub
jnp
lcall
mov
mov
sub
push
pop
shll
dec
add
into
sub
push
or
shll
test
iret
xor
and
adc
push
xchg
das
or
stos
dec
int
sti
or
push
dec
xchg
xor
cmp
inc
daa
and
add
dec
in
pop
test
mov
or
jbe
jne
cmpsb
and
lcall
fwait
lahf
cmp
mov
jp
loopne
lods
ficoms
pop
insb
aas
dec
push
inc
sbb
pop
stc
inc
dec
addr16
std
repnz
int
add
daa
fnstenv
fdivrl
lods
and
test
fistl
lods
sarl
fbstp
or
out
push
jne
pop
add
xchg
popf
rcl
cmp
and
stc
testl
pusha
daa
mov
fisttpll
in
aam
negl
jmp
mov
xchg
data16
or
jae
sbb
cwtl
xorl
scas
stc
sbb
cmpsl
cmpsl
xchg
push
inc
call
addr16
pop
out
aas
push
cmp
pop
and
dec
sub
out
mov
jge
xchg
es
sbb
cmpsl
cmp
push
daa
ficomps
adc
aas
lcall
push
or
bound
inc
or
adc
mov
hlt
shrb
clc
xor
adc
std
movsb
and
out
nop
adc
mov
mov
sub
pushf
push
popf
cmp
cmc
lea
mov
push
sbb
in
test
int
push
clc
mov
mov
and
ss
push
dec
or
ficoms
es
or
outsl
shrl
mov
and
push
push
rclb
inc
sub
inc
pop
xorl
xor
xchg
xchg
sbb
sbb
or
loopne
imul
jmp
mov
push
imul
mov
xchg
add
test
mov
adc
int3
push
pop
xor
lret
shll
insl
stos
sub
sarb
lcall
inc
movsl
jle
leave
scas
test
data16
xchg
ret
repnz
stos
pop
fbstp
pop
pop
outsl
scas
je
mov
mov
pop
stos
orb
and
jns
mov
xor
ret
mov
jbe
scas
xchg
cmc
lret
xchg
mov
adc
push
and
stc
mov
cli
stos
fidivl
pop
enter
jmp
jno
roll
imul
sbb
shrb
sub
or
cli
pop
sbb
fcmovbe
pop
adc
sbb
mov
lods
jo
hlt
pop
out
setae
jg
mov
jge
mov
xorl
int3
mov
lret
jo
daa
imul
nop
popa
out
mulb
pop
outsl
mov
add
out
dec
push
and
push
rclb
cmp
xor
add
mov
push
inc
enter
leave
cmp
adc
mov
pop
mov
jb
mov
cmp
jmp
lods
jle
sub
shlb
dec
adc
mov
and
and
mov
mov
in
enter
and
dec
cmp
bound
inc
lods
inc
push
stc
xchg
jge
lods
loopne
fidivrs
sbb
jno
iret
pop
popf
xor
jmp
imul
mov
sub
shll
sahf
filds
xchg
lcall
idiv
bound
mov
and
xor
ficompl
mov
jne
pop
std
int
out
lret
cli
dec
movsb
je
sbb
fimull
push
cmp
xchg
fcmovne
lods
xchg
je
push
push
mov
fsubr
cmpsb
or
bound
push
mov
push
inc
sbb
int3
mov
cltd
cld
mov
test
jle
adc
and
jmp
stc
jb
xchg
push
jge
cmp
xchg
enter
arpl
data16
dec
rcrl
sti
pop
mov
hlt
mov
test
and
jns
mov
mov
inc
pop
cmp
stc
add
clc
push
push
je
addl
jecxz
xchg
xor
subb
xchg
mov
xchg
orb
push
jno
mov
sarb
push
sub
pop
rorl
ss
outsl
or
hlt
add
mov
sub
lcall
xchg
push
js
dec
jge
fmull
mov
dec
lret
pop
sbb
mov
sub
test
mov
negb
sti
rcr
inc
lret
idivl
outsb
lahf
lahf
addr16
jnp
jmp
rdmsr
in
out
out
jne
das
ss
mov
test
add
rol
ja
sbb
in
icebp
mov
add
push
inc
xchg
inc
sbb
imul
add
cwtl
daa
xor
jns
mov
dec
shll
insl
adc
inc
xchg
mov
xor
leave
cltd
push
ret
and
adc
xor
sti
loop
push
pop
gs
xchg
addr16
sub
add
add
shll
add
addb
out
mov
gs
push
push
push
inc
popf
mov
ss
push
lock
movsl
mov
les
in
cs
and
cmpsb
sub
lret
mov
push
or
mov
cld
jp
inc
xchg
add
mov
sbbl
fistps
mov
in
pop
and
scas
lahf
roll
scas
inc
mov
pusha
mov
aaa
pop
push
dec
stos
je
adc
rorb
adcb
push
add
outsb
push
cmp
pop
sub
mov
sub
mov
mov
lea
in
mov
pop
ret
push
imul
decl
add
test
mov
fcomp
mov
out
mov
jg
cmc
movsb
aas
pushf
addr16
push
bound
jg
aad
call
clc
vunpckhps
cmp
loope
mov
out
xor
mov
popw
adc
mov
arpl
ss
jb
push
lahf
mov
sbb
outsl
cli
xchg
sub
mov
dec
jg
int
jl
xor
sub
cmp
mov
or
mov
jns
inc
cmpsb
idivb
sbb
cmpsb
in
das
inc
clc
dec
fildll
fmulp
xchg
gs
mov
or
xchg
shll
dec
jo
sbb
loope
jb
cwtl
ja
out
int3
setp
pop
scas
ljmp
or
or
xlat
mov
dec
outsb
push
dec
add
dec
test
fnsave
push
ljmp
jno
nop
mov
scas
ficompl
add
lahf
fstps
mov
int3
xor
gs
mov
add
inc
mov
push
aam
das
xor
xchg
push
inc
adc
lahf
xlat
outsl
mov
out
fucomi
mov
mov
shr
in
pop
cmpsl
test
mov
ret
jne
sbb
mov
sub
iret
loopne
mov
and
out
lret
push
mov
pushf
add
lea
outsb
mov
ss
add
loope
call
movsl
in
jns
sbb
jb
pop
cltd
inc
inc
in
mov
sbb
pop
push
std
mov
mov
mov
aas
xor
inc
enter
test
push
icebp
mov
std
jp
sub
inc
popf
mov
push
ss
mov
dec
pop
shlb
ljmp
out
mov
sub
ss
add
inc
xchg
andb
jae
int
xchg
fwait
pop
jge
out
add
and
inc
in
repz
push
lret
dec
aad
cmp
xchg
mov
xchg
or
inc
push
dec
cmpb
push
mov
daa
cmp
fwait
cld
dec
fcom
jmp
xor
add
push
inc
xchg
pop
cld
xor
cltd
jae
adc
xchg
xchg
cmpsl
push
inc
fnsave
xchg
ficomps
push
out
in
cmp
push
pushl
stos
push
sbbl
lods
fcmovnb
lock
push
ss
mov
push
lret
pop
add
jno
mov
sub
add
leave
mov
mov
and
mov
mov
insb
add
inc
pop
or
sbbb
in
jae
fcmovne
sbb
mov
mov
xchg
aad
xchg
xor
fcoml
out
mov
pop
cmp
jb
nop
lock
ret
sahf
popa
mov
jb
insb
jne
dec
test
stos
xor
repnz
jbe
inc
popf
pusha
pop
jnp
add
into
and
sub
cltd
stc
scas
lods
xadd
shl
jne
neg
stos
cmpsb
xor
sbb
inc
pop
mov
sub
daa
xor
inc
xor
cmp
mov
inc
cmpsb
sbb
pop
push
xchg
ret
push
dec
mov
xchg
stos
xchg
cli
jo
dec
cmp
sub
push
fldl
cmpsb
pusha
addb
mov
cmp
jecxz
fwait
mov
jecxz
mov
std
sub
lret
aam
gs
stc
ja
stos
jecxz
insb
idivl
cwtl
mov
fsubs
pop
jge
popl
repnz
gs
shrb
lret
pop
ja
out
popa
or
inc
cmp
sbb
push
push
in
in
outsb
push
mov
jbe
mov
jp
mov
or
lcall
insl
ss
lret
jmp
sbb
jl
push
cmp
sub
lods
loope
xchg
mov
cmp
jae
xchg
sub
pusha
push
add
inc
insl
pop
jp
push
out
jno
shl
aas
push
das
jnp
bound
adc
sub
add
sarl
xchg
imul
cmc
rcrl
mov
popf
inc
ljmp
fs
out
scas
aam
xchg
stc
aam
cmp
lcall
push
push
je
in
pop
int
mov
sbb
mov
sub
pop
scas
je
adc
ja
insl
mov
inc
faddl
dec
mov
cmp
add
xor
das
xor
outsb
ret
int3
call
jns
arpl
pop
pop
fcompl
mov
cmp
ljmp
sbb
test
test
jg
xchg
outsb
mov
sti
rclb
adc
pop
push
pop
adc
dec
cld
dec
add
pop
mov
movsl
push
xor
mulb
push
xor
xchg
lret
rorb
out
pop
sub
iret
fsubl
dec
movsl
sub
dec
outsl
icebp
or
push
imul
imul
fdivrl
dec
mov
jne
fwait
das
jp
fwait
cmp
insl
loop
xor
inc
adc
jge
mov
hlt
aam
xor
test
pop
outsl
cmp
mov
notl
xor
in
mov
scas
dec
xchg
shrl
mov
daa
sbb
dec
sahf
pop
pop
pushf
xchg
cmpsb
mov
jbe
xorb
mov
sub
outsl
sub
cmpsb
dec
jge
dec
mov
pop
mov
mov
fnstcw
dec
xor
and
out
inc
pop
aaa
data16
int3
mov
fdivrs
bound
scas
mov
mov
lret
inc
ss
int
dec
push
lock
inc
lock
dec
cmp
rorl
xchg
jne
aad
cli
xchg
or
mov
ja
imul
dec
imul
or
into
movsb
sti
mov
push
jnp
rclb
xchg
pop
les
in
jecxz
jmp
mov
dec
sbb
ljmp
jl
in
mov
sub
loopne
rcr
call
int
andb
sub
mov
pop
push
xchg
in
popa
mov
loope
fidivl
into
decb
adc
xchg
xor
sbb
dec
nop
lcall
scas
loop
repnz
adc
push
in
jnp
mov
test
shrb
sbb
push
jg
pop
mov
jecxz
adcl
push
jge
or
lds
cwtl
xchg
inc
dec
add
or
out
mov
xor
push
orb
sbb
xor
xchg
dec
xor
in
inc
push
out
inc
stos
or
hlt
lods
ljmp
and
or
cmc
leave
jg
cmp
sti
icebp
imul
loopne
inc
cmc
pop
je
jl
ficompl
aas
rorb
dec
loop
scas
xchg
push
sbb
add
pop
cmpb
js
xor
xchg
cwtl
jbe
imul
cmp
cmp
ss
and
ss
pop
mov
jp
jnp
mov
test
lea
adc
ljmp
xchg
enter
fsubl
and
std
ret
inc
pop
xlat
inc
lahf
push
jg
and
push
add
popa
jns
xor
test
mov
insl
addr16
and
jns
enter
in
or
jge
push
js
dec
orl
aad
mov
rolb
jbe
popf
sub
jb
iret
lea
mov
ds
and
clc
jbe
jnp
icebp
fbstp
je
outsl
sbb
cltd
popf
test
ljmp
mov
fildl
and
mov
iret
sbb
xor
dec
test
pop
gs
add
cmp
mov
add
lret
xor
sbb
outsb
pop
mov
push
mov
push
dec
movl
jmp
loopne
stc
push
orb
mov
std
jg
mov
inc
test
in
das
xor
dec
or
sub
mov
adc
push
inc
adc
mov
ljmp
pop
adc
jge
dec
pop
int
stos
mov
mov
sti
and
sub
pop
xchg
lahf
push
jg
ficoml
cld
lahf
les
jb
into
sub
adc
je
stos
or
pop
rcrl
jle
mov
sbb
or
lahf
xchg
subb
int
cmpsl
outsb
imul
out
insb
arpl
mov
mov
dec
adc
inc
jae
es
out
ret
pushf
mov
add
shlb
pushf
xchg
enter
mov
cmp
int
leave
add
mov
xor
pop
or
xor
fbstp
jb
imul
pop
push
xchg
popa
or
xor
mov
inc
xchg
outsb
ds
and
hlt
dec
lcall
cvttps2pi
cmp
push
sub
mov
mov
dec
shrb
or
add
loop
lods
ss
add
xor
fisttpl
ss
cmp
rcrb
jo
aas
orl
add
inc
nop
mov
das
les
or
in
mov
push
nop
iret
stos
test
aad
mov
xchg
sbb
ljmp
das
or
mov
add
inc
das
ss
movsb
lds
sarb
scas
rol
inc
add
push
cmpsb
adc
cld
call
jge
mov
xchg
adc
or
cld
dec
sbb
and
inc
mov
inc
pop
mov
lret
add
stos
ror
jle
loopne
dec
leave
pop
or
movsl
mov
xlat
sbb
add
fstpl
xchg
mov
pushf
mulb
into
mov
cmp
inc
push
les
mov
stc
mov
and
stc
les
xchg
lahf
sbb
inc
ljmp
inc
jo
xchg
and
mov
sbb
xchg
add
inc
sbb
rcrb
jmp
not
jl
mov
gs
mov
cwtl
cwtl
lret
cwtl
in
mov
pusha
dec
push
lods
cmpsl
out
stc
xchg
lea
shl
ret
jp
xchg
dec
mov
sbb
add
cmp
jnp
loop
bnd
mov
iret
les
xchg
cmpsb
or
mov
cmp
cli
mov
ljmp
je
cmpsl
fiaddl
push
adc
outsb
xchg
fwait
aad
adc
rolb
or
or
fwait
xor
fnstsw
jne
pushf
push
js
mov
es
pop
fnsave
clc
roll
je
inc
int3
add
or
sti
pop
mov
lods
test
repnz
cmp
jno
ret
es
cmp
testl
sahf
sbb
pop
sahf
mov
sbb
cmc
push
jle
mov
je
decb
mov
jo
ficoms
sbb
fs
jb
sbb
cmpsl
mov
insb
stc
push
les
xor
jnp
imul
test
or
add
mov
and
testl
or
fadds
mov
pushf
and
sub
loope
fbstp
and
and
fadds
outsl
push
inc
out
sbb
add
lret
rcrb
cmp
hlt
andl
imulb
adc
and
scas
test
push
add
or
inc
adc
jns
dec
add
adc
mov
les
jne
movsb
pusha
sar
in
inc
std
clc
xchg
fnstsw
pop
adc
push
test
cmpsl
jp
jo
or
adc
dec
or
popa
push
inc
gs
inc
mov
pop
adc
leave
andb
xchg
out
push
imul
adc
mov
das
mov
clc
mov
into
out
add
popf
or
mov
outsb
sahf
adc
adc
xchg
adc
pop
push
sbb
cmpsb
scas
inc
sbb
cmp
in
mov
cli
pop
movsl
sub
mov
and
mov
out
aad
push
add
cmp
out
test
xchg
js
mov
and
sub
popf
xchg
or
pop
sub
mov
sahf
mov
pop
adc
lret
lret
popl
test
lahf
adc
movsl
jp
int
mov
add
xchg
mov
fs
jae
mov
lea
cmp
add
lock
shlb
cmp
inc
aad
fwait
add
jnp
das
arpl
out
loopne
jmp
cli
sub
pop
lahf
mov
js
or
addb
push
or
mov
xor
jp
xor
jg
cmpb
pop
leave
mov
fdivrl
xor
sub
scas
data16
sbb
pop
outsl
adcb
test
xorb
pop
add
repz
push
sub
andl
cmp
scas
dec
call
inc
repz
push
and
filds
aas
mov
jno
sub
pop
xchg
xchg
adc
popa
adc
jmp
add
loopne
add
mov
inc
sbb
out
jnp
in
adcb
xlat
cmpsb
or
cmpsb
mov
ja
cmpl
mov
push
repz
imul
stos
jge
or
pop
xor
outsl
mov
add
jle
xlat
push
sub
lock
sahf
stc
xchg
int3
add
aaa
lds
sub
cmp
xor
scas
repz
inc
test
sbb
cmpsl
pop
adc
pop
outsl
repnz
test
mov
rclb
out
and
jecxz
ficomps
lods
xchg
lret
add
mov
and
xor
and
sbb
stos
stos
add
or
inc
cld
push
sub
popa
dec
xchg
add
lea
movsb
imul
dec
and
hlt
and
mov
or
js
sarl
inc
mull
xchg
cli
mov
stos
cld
mov
ja
add
adc
pop
pop
daa
inc
popf
push
out
add
daa
aad
pop
stos
in
enter
hlt
pusha
and
ret
push
ret
idivl
stc
push
sbb
sub
sbb
test
jmp
popf
mov
mov
mov
xchg
movsl
jmp
cmp
jo
pop
or
cwtl
xor
mov
push
imul
cmp
movsl
pop
lahf
clc
lcall
mov
mov
out
mov
sbb
or
xor
flds
and
std
aas
xchg
outsl
or
stos
pushf
push
out
xchg
adc
addr16
sub
cltd
in
or
and
mov
push
int3
mov
or
cmp
xor
jne
lods
sub
xor
cmp
push
sbb
popa
into
popf
inc
test
push
cmp
lock
mov
mov
jl
aam
xchg
mov
or
xchg
les
sbb
aam
mov
int3
fadd
sti
call
mov
setnp
loopne
movsb
mov
cmc
sub
std
and
jge
shrl
pop
mov
enter
push
out
push
rcl
sbb
lahf
mov
push
push
scas
enter
push
and
jne
je
or
and
addr16
hlt
xor
push
mov
inc
xor
mov
int
sbb
loope
cltd
insb
xchg
inc
mov
sahf
sbb
jns
add
adc
stos
gs
mov
arpl
inc
test
sti
aaa
outsl
ljmp
xchg
adc
test
aam
dec
pop
mov
xchg
adc
pop
adcl
std
add
mov
or
jge
in
js
enter
pusha
xor
scas
sbb
test
in
fsubrl
iret
pushf
pop
or
mov
loopne
fwait
inc
jnp
outsl
aam
inc
hlt
sahf
pop
mov
loopne
and
add
addr16
mulb
fwait
std
fisubrs
scas
push
pop
popf
jo
in
sub
fistpll
or
imulb
jo
std
in
cmc
sbb
add
jp
movd
sahf
movl
sbb
icebp
and
mov
mov
cli
dec
lods
inc
call
stos
sub
mul
fmull
cwtl
sub
mulb
out
int
bound
jg
cmp
pop
push
cs
out
cmp
cli
imul
and
aam
sbb
xchg
rcr
xchg
jg,pn
xor
pop
or
add
mov
and
sti
mov
and
push
shrl
in
and
fs
sarb
daa
and
cmc
xor
jp
mov
or
sbb
daa
dec
jmp
mov
gs
jno
stos
sub
mov
pop
pop
jmp
ds
mov
into
ret
in
push
lock
xor
aas
out
aaa
mov
dec
pop
sbbl
aam
cs
ds
cld
repz
cwtl
pop
test
ds
movsl
clc
call
xor
jnp
add
mov
fwait
out
in
ret
and
jmp
icebp
sbb
jne
loopne
xor
xlat
mov
repz
shrl
cmp
adc
push
imul
popa
lods
and
cs
dec
xor
inc
hlt
fwait
jb
pusha
cltd
imul
add
sbb
xor
movsl
stc
ss
mov
pop
pop
add
and
sub
cmp
pop
dec
adc
sub
and
jmp
push
enter
or
out
add
jp
pop
inc
push
inc
mov
sahf
cmp
adc
pop
addr16
cld
aad
mov
out
mov
in
push
mov
inc
cwtl
test
int3
bound
test
jg
daa
sti
xchg
nop
push
cmp
jle
sbb
popf
mov
xchg
lss
nop
popf
push
daa
insl
popf
fcomps
push
or
repnz
pop
push
sbb
cmp
dec
jbe
adc
roll
cmc
pop
stc
mov
enter
leave
cmc
inc
adc
fdivrp
and
imul
daa
paddb
jbe
popf
jg
xchg
addb
ss
push
repnz
imul
fisttpll
push
dec
mov
divb
mov
cmpsb
sub
jae
es
stos
dec
sub
outsb
dec
aaa
mov
mov
decb
fucomi
les
fcmovne
out
mov
push
cmc
mov
stc
mov
or
xchg
xchg
loope
hlt
pop
mov
mulb
or
push
push
jbe
cmp
mov
push
sub
movsb
jmp
mov
aaa
sbb
in
shrl
jns
dec
std
xlat
dec
pushf
xor
xor
mov
pusha
in
push
iret
cmc
inc
lcall
cmpsb
inc
fistpll
ljmp
push
lret
mov
lods
pushf
icebp
sbb
in
xor
out
adc
mov
sbb
xchg
sbb
iret
and
pop
adc
push
or
push
stc
iret
jb
jns
cmpb
and
sub
dec
add
mov
mov
clc
test
pop
jne
daa
cmp
xchg
xchg
out
nop
pop
pushf
mov
xor
add
xor
jecxz
test
mov
xor
gs
jecxz
and
addr16
add
decl
mov
jbe
cmc
mov
repz
pop
hlt
loope
movsb
fimuls
sbb
jne
lods
mov
stc
mov
aad
fimuls
out
test
xchg
lods
stos
xlat
call
mov
or
decl
into
gs
mov
repnz
jmp
jle
mov
sub
lahf
fwait
bound
add
xlat
faddl
jnp
sbb
mov
out
sub
lcall
aad
shll
mov
pop
mov
call
es
stos
xlat
or
xchg
insl
pop
mov
test
in
xchg
inc
xchg
test
mov
outsl
fstl
shrb
aas
rcr
stos
inc
xchg
add
dec
add
lods
fimuls
roll
es
loopne
les
cmpsl
flds
adc
adc
xorl
fadds
jns
popf
xchg
or
daa
outsl
add
add
mov
xchg
xchg
cmpl
aas
mov
imul
call
enter
mov
sarb
mov
insl
daa
xor
and
ljmp
add
daa
sti
ss
lcall
sahf
cwtl
xor
repnz
cmp
cli
sbb
mov
or
lahf
sti
mov
daa
pop
inc
or
cmpsb
xchg
sbb
jne
sbb
xchg
scas
cs
cwtl
aam
jle
mov
outsb
outsl
add
xor
add
inc
and
sbb
mov
outsl
jno
push
and
mov
call
mov
ret
cmc
nop
xchg
icebp
aas
enter
xchg
les
in
idiv
std
jmp
pxor
cmp
pop
cmpsl
mov
jbe
push
sub
mov
hlt
inc
clc
push
testb
xor
cmp
scas
int
cmp
int
cmp
idivb
lea
add
or
jne
std
fdivrl
mov
lea
add
pop
lea
adc
cmc
imul
jae
scas
ja
sbb
lret
fdivrs
push
fldcw
sahf
jecxz
lret
lea
cmp
lds
mov
jle
or
sub
xor
push
cmc
insl
vfrczsd
imul
shll
xchg
xchg
jle
loop
mov
dec
pusha
jp
dec
pop
popa
jp
mov
loope
notl
nop
xor
push
mov
dec
lret
xchg
icebp
pop
or
pop
fwait
pop
test
or
fmull
popa
mov
in
and
mov
push
test
mov
add
mov
call
lret
cli
sbb
out
mov
mov
mov
jge
sub
sub
popa
inc
aaa
xor
dec
pop
ret
jl
jmp
mov
jns
cmpsl
adc
xchg
leave
xchg
shll
test
notl
shll
sbb
push
mov
mov
gs
pop
test
dec
out
inc
push
jo
jmp
dec
push
sub
adc
dec
movsb
xchg
xor
xchg
test
adc
push
jae
or
inc
aad
cltd
and
sbb
rclb
push
outsl
adc
push
inc
stos
pusha
mov
mov
incl
mov
and
aas
je
mov
cltd
insl
inc
andl
cwtl
jno
cmp
jmp
jns
mov
or
xor
cwtl
sub
aad
xor
je
cmp
nop
vsqrtpd
dec
inc
xor
je
sti
fldcw
lods
sbb
xor
sbb
push
jg
sbb
cmc
jnp
mov
stos
pop
jae
mov
test
push
cmpsb
xor
mov
adc
fisubrs
jl
jge
mov
inc
pop
pop
add
add
scas
inc
data16
cs
sbb
adc
sti
push
adc
scas
cmove
mov
xchg
pop
stos
aam
xchg
xor
push
sub
sub
scas
jg
push
into
pop
sub
lret
jp
sub
lock
mov
mov
mov
cltd
cmp
addr16
or
loope
jo
rorl
mov
xor
sbb
push
jo
lcall
sar
inc
mov
loop
lods
shrb
stc
movsb
mov
sbb
test
sti
lahf
outsl
xor
fistl
je
mov
pushf
lcall
rorb
cmpsb
sub
out
cmp
enter
in
andps
push
inc
aam
loop
xchg
push
test
xor
jecxz
ficoms
xchg
xor
lock
adc
imul
sarb
sbb
fs
test
loope
push
mov
and
pop
sti
mov
cld
mov
and
fcompl
or
in
jmp
adc
push
pop
js
sub
dec
mov
insl
in
andb
mov
cmc
icebp
dec
mov
jnp
jle
hlt
hlt
popl
insb
stos
aas
push
sub
mov
mov
dec
in
sti
xchg
mov
add
push
into
jbe,pt
dec
fstps
mov
out
arpl
sahf
cmp
mov
xchg
sahf
dec
fidivrs
movb
orl
clc
mov
mov
push
add
inc
cmp
decb
mov
ret
pushf
pop
xor
fisttpl
mov
out
cs
add
scas
icebp
sbb
test
push
test
adc
add
push
les
jns
add
dec
pop
shll
stc
fcmovb
xorb
fmull
out
dec
sbbb
das
cmp
mov
add
dec
xchg
int
cwtl
sub
xor
shr
and
mov
pop
dec
adc
push
sub
ret
neg
outsb
int
ljmp
sbb
nop
icebp
mov
cmp
push
movsb
mov
lret
adc
pop
mov
mov
ljmp
mov
cmp
cmp
mov
or
rcl
scas
mov
clc
and
stos
cmpsb
popf
dec
bnd
negb
fwait
adc
add
test
xchg
jnp
pop
add
pop
inc
movsb
cs
adc
pusha
lcall
and
adc
in
cmp
gs
aas
cwtl
inc
jae
fisttpll
in
imulb
adc
dec
mov
inc
jge
add
outsb
sub
add
stos
js
mov
add
push
add
fiadds
or
insb
cmp
jl
pop
push
fdivr
cs
adc
cmpsl
hlt
scas
fstl
mov
push
pusha
mov
pop
jge
int
sarl
lret
movsl
leave
cmp
leave
push
movsb
imul
movsb
push
iret
cmp
mov
popf
imul
dec
rclb
or
or
and
adc
xor
push
bound
pop
sub
ljmp
sbb
int
es
inc
imull
or
push
repz
mov
mov
leave
mov
and
xor
pop
aad
add
push
adc
cs
mov
loop
movsl
cmpsb
outsl
imul
mov
shlb
xor
loope
nop
jbe
int
mov
add
push
mov
jp
cmp
xor
cmpsl
cmp
xchg
xor
jl
bound
sbb
gs
jmp
jecxz
inc
nop
push
mov
sbb
ds
pop
cwtl
fwait
xchg
addb
or
jae
adc
stos
mov
fs
insl
mov
ds
in
pop
ds
mov
mov
jp
sbb
jp
push
xchg
cmpsb
dec
cmpsb
mov
jl
pop
jmp
je
or
lods
inc
pop
mov
push
shrl
jg
aad
test
dec
xor
in
pusha
cltd
pop
jo
shll
sub
sbb
rcll
dec
xchg
mov
mov
arpl
imul
mov
lret
mov
cld
xchg
daa
popa
daa
add
cmp
js
sti
push
xchg
data16
push
out
hlt
sub
xchg
inc
pop
in
push
shlb
and
mov
sub
insl
insb
xchg
cltd
daa
pusha
push
addb
negb
leave
roll
mov
lods
mov
rolb
jns
pop
out
push
fistpll
out
sub
insb
push
dec
fs
pop
mov
add
icebp
xor
jmp
pop
lcall
loop
inc
pop
rcl
xchg
cmp
rolb
fdivs
dec
in
jmp
jnp
mov
ret
addr16
fiadds
jae
rcrl
daa
push
fistps
adc
and
xchg
incb
pop
stos
jge
loope
lock
dec
cmp
scas
fldt
les
ja
std
in
pop
jl
ss
incb
xor
mov
arpl
push
cmp
jmp
jbe
mov
or
add
clc
in
int
mov
out
adc
int
xor
loopne
aas
in
cmp
pusha
add
xchg
dec
bound
inc
and
xor
into
fcoml
xlat
and
std
jnp
dec
adc
mov
add
cs
out
ror
sbb
arpl
rorb
gs
fisubrs
cmpsl
or
addl
shl
sub
lods
inc
jle
jmp
mov
dec
push
iret
mov
cmc
dec
imul
xor
sub
mov
mov
cmpsb
add
pop
stos
or
xchg
sub
xorb
lret
shrl
and
mov
or
push
cmp
push
addr16
pop
rorb
mov
xor
or
push
dec
rorb
dec
jge
ds
pop
dec
imul
sub
mov
mov
jge
lock
ds
aam
cmpsb
loop
insl
leave
mov
xchg
and
xchg
xlat
clc
popf
loope
inc
ljmp
sub
and
das
adc
or
int3
movsb
pushf
addr16
inc
adc
jecxz
adc
dec
mov
xchg
mov
cld
jle
test
mov
gs
ss
shll
arpl
cmp
shrl
mov
dec
rcrl
xor
int3
cli
test
push
mov
fsubrs
cmp
jnp
out
jmp
mov
fildl
fildl
pop
mov
xchg
push
clc
xor
cmp
jae
pop
sub
sub
cmp
cld
xchg
xchg
test
inc
ja
adc
cwtl
hlt
mov
shll
sub
adc
cmp
std
outsb
mov
movsb
inc
push
jno
pop
dec
insl
adc
icebp
dec
call
inc
mov
adc
push
movsl
dec
cmp
mov
aam
push
adc
add
test
mov
fistps
std
mov
or
xchg
jb
xor
push
mov
push
mov
arpl
add
cmpl
out
push
mov
xor
insb
mov
jae
leave
movsl
les
mov
gs
adc
gs
enter
outsl
outsb
das
cmp
fwait
jp
aad
scas
lcall
pop
cmpsl
push
xchg
sbb
stc
adc
loope
sub
shrb
xchg
push
push
mov
daa
cmp
notb
or
test
sub
mov
cwtl
stos
sbb
cmp
or
lahf
in
sub
fldt
lods
enter
mov
mov
outsb
icebp
xchg
js
inc
insl
mov
mov
xor
fnsave
xor
fwait
push
out
jl
in
fcomp
mov
clc
lret
ss
cltd
jge
cmp
fs
icebp
push
and
push
mov
push
push
fstp
in
mov
andb
add
xchg
or
dec
out
loopne
mov
pop
fs
cmp
pop
orps
lods
into
mov
sbb
les
adcl
mov
out
out
cltd
push
adc
insb
pop
enter
in
popw
ror
jle
imul
xchg
adc
mov
es
stc
enter
jb
pop
push
jae
mov
xor
es
sti
and
mov
push
pop
cmpsb
xor
sbb
adc
jecxz
sbb
cmp
add
push
xor
push
in
scas
ljmp
xchg
cmp
stos
push
push
cmp
mov
arpl
in
pop
inc
call
xor
scas
mov
pop
popf
sub
dec
adc
or
enter
js
cli
fs
pop
mov
out
push
jae
inc
ficomps
mov
arpl
push
pop
cmpxchg
lahf
jecxz
iret
push
cmpsb
sub
aas
fists
in
scas
add
outsl
mov
mov
popa
sub
mov
scas
dec
pop
xchg
iret
sbb
jo
frstor
sbb
jnp
iret
clc
bound
insl
lret
in
push
mov
mov
and
iret
clc
cwtl
dec
repnz
fdivrl
pop
cmp
bound
fxch
mov
outsb
ds
dec
rcrb
xchg
adc
pop
insb
int3
loopne
adc
mov
ljmp
shlb
jl
push
jbe
mov
dec
in
cmp
lret
insl
idivb
xorl
fwait
inc
lods
pop
push
out
push
xor
mov
add
scas
ljmp
sbb
mov
jge
gs
push
sub
mov
icebp
lcall
cmpsb
popa
xchg
stc
arpl
fdivs
sub
sub
dec
gs
imull
jno
push
xor
jg
mov
mov
and
fwait
add
sar
sub
filds
sbb
sbb
and
mov
pop
cmc
jns
out
adcb
cmpsl
and
stc
shrl
or
fs
movsb
test
gs
push
movsb
jb
lret
rcl
ret
pop
ds
mov
pop
pop
pop
roll
ss
and
scas
out
test
dec
add
into
jg
pop
xlat
cltd
call
dec
jo
cmp
mov
add
jb
adc
cli
pop
cmp
jns
je
shll
sbb
outsb
jno
add
push
or
pop
and
add
mov
outsb
mov
into
add
int3
push
shlb
ret
data16
popa
arpl
test
add
jae
shlb
in
arpl
das
pop
adc
mov
aad
push
andl
sub
mov
daa
imul
dec
cmc
je
or
cli
roll
dec
ss
mov
jg
cs
cmp
xlat
fidivs
ljmp
outsb
lahf
mov
mov
dec
sbb
cmpsb
fdivrs
leave
add
std
lcall
push
aad
js
lock
pop
inc
add
cld
mov
mov
out
fstps
mov
mov
xlat
adc
xchg
and
jb
and
enter
decb
fcomps
movsl
mov
aad
cli
mov
cmp
mov
and
jge
outsl
and
mov
cld
jp
pop
or
sbb
and
sahf
fcmovnu
fistps
out
ds
mov
daa
adc
fmull
jns
add
mov
test
adc
lods
adc
or
out
sub
mov
lahf
xchg
lds
jns
add
mov
sub
test
fwait
xchg
lods
jmp
in
test
lock
rcrl
push
lahf
outsb
ss
icebp
push
mov
sbb
xor
mov
movsl
gs
xchg
mov
jns
adc
or
mov
lods
push
sub
sti
pop
dec
mov
adc
mov
sub
jae
out
mov
out
add
es
and
mov
rol
jge
xchg
add
sbb
loope
mov
mov
inc
in
push
repz
push
out
pop
imul
jmp
push
in
jae
inc
fmul
lahf
xor
cwtl
fwait
data16
mov
pop
sbb
push
stos
mov
clc
dec
shrb
rorl
fcmovb
outsl
mov
sahf
js
xor
bound
enter
cli
jae
mov
and
lds
ds
push
mov
jp
jl
mov
adc
arpl
xchg
xchg
in
mov
jo
add
fadd
mov
xchg
fldl
test
sub
out
addr16
ficoml
loopne
push
mov
out
out
lret
out
cmc
mov
cmp
bound
xchg
sub
push
ret
adc
test
dec
bsr
or
push
sub
pop
aad
test
inc
rclb
mov
push
cli
jg
repz
jg
aaa
mov
leave
jecxz
push
mov
popf
mov
sbb
add
outsb
shll
lcall
sub
and
jne
pop
inc
push
pop
jg
pop
and
cmpsl
xor
lahf
dec
sbb
or
adc
sub
js
jae
cs
jo
leave
fldcw
daa
push
shrb
mov
stc
mov
jns
sbb
das
ret
shr
or
pop
xchg
adc
daa
pop
pop
pop
xor
cltd
out
or
or
inc
fldt
inc
pop
lock
mov
insb
addr16
iret
xchg
mov
jg
or
into
movsl
or
addr16
pop
dec
daa
lods
jbe
xchg
cld
sbb
adc
js
out
ret
in
jge
les
mov
xchg
sahf
jno
add
dec
andb
lods
sbb
cld
iret
lods
pop
arpl
xor
cmpsb
pushf
pop
inc
arpl
mov
shlb
adc
pop
cmp
adc
push
add
cmp
pop
xchg
rolb
mov
sbb
fcompl
mov
xor
push
pop
mov
pusha
rcrb
dec
sbb
adc
fistpl
call
pusha
hlt
push
lret
scas
cmp
cwtl
or
adc
pop
leave
jle
mov
sub
add
ljmp
fucom
and
rolb
push
fisttpl
push
lret
sarl
inc
adcb
or
mov
push
imull
sbb
xchg
pop
test
mov
int3
mov
xchg
inc
in
push
sbb
pusha
iret
or
jno
push
imul
repnz
es
pusha
pop
mov
in
add
inc
sbb
sub
sbb
sarb
insb
jne
mov
sub
pop
movsl
fildl
xchg
cmp
cmpb
pop
adc
dec
ss
data16
push
insb
adc
lcall
rorl
sub
mov
into
and
movsl
pop
push
mov
insl
int
lds
push
addr16
test
or
and
adc
push
stos
push
xlat
mov
dec
jge
aaa
cmp
cld
aad
addl
jne
mov
std
jno
or
push
jbe
out
cmp
push
push
sbb
je
cmpsl
jne
fs
ret
insb
ds
out
clc
pop
es
mov
jb
jle
push
xor
int3
push
fdivs
push
pushf
adc
push
repnz
xor
out
push
cmp
fs
mov
js
rcrl
add
xchg
pop
dec
cmc
inc
je
test
push
adc
fistl
mov
sub
jo
adc
fdivr
lods
out
popa
scas
mov
xor
mov
leave
enter
sar
adc
inc
sarb
pop
pushf
mov
cmp
sbbl
mov
mov
inc
mov
leave
aas
sub
inc
mov
add
xchg
rcl
sbb
test
shlb
icebp
xchg
ret
sbb
popf
ss
sbb
das
cli
leave
imul
repz
movsl
stos
mov
js
mov
scas
loop
movsb
cmc
sbb
leave
jo
pop
cmp
xchg
sub
or
sbb
jb
xchg
adc
dec
mov
push
jle
pop
clc
in
lea
dec
pop
cmc
cmp
push
dec
into
inc
mov
pop
aas
cwtl
daa
jmp
test
dec
mov
inc
sub
lods
js
popa
data16
push
ret
xchg
shr
test
popf
out
push
cmp
int3
pop
sub
mov
mov
aam
and
mov
gs
add
xlat
xchg
js
scas
stos
hlt
outsl
adc
or
mov
jg
movsb
add
rorl
push
cmp
fcoms
jl
sbbl
fcomi
cwtl
pop
shl
addr16
scas
in
push
aad
addb
in
repnz
pusha
jmp
xchg
adc
scas
sbb
and
pop
or
aad
rcr
xchg
mov
jns
mov
jecxz
rcl
and
ljmp
mov
mov
mov
ja
out
mov
sbb
add
or
popf
int3
lret
test
mov
or
mulb
pop
je
xor
add
mov
dec
rorl
cmp
cs
addr16
sub
adc
fwait
dec
jmp
aaa
xchg
aad
xchg
pusha
das
fcoml
inc
mov
loopne
pop
in
loop
fimuls
lret
in
add
push
subb
xor
sbb
mov
xor
scas
xchg
flds
mov
in
fldenv
pusha
jnp
pop
or
push
shll
push
cmp
dec
mov
dec
push
pop
xor
adc
imul
sbb
hlt
dec
ss
mov
and
cs
scas
pop
fistps
cmpsl
rcrl
jns
and
mov
mov
insb
push
xchg
roll
mov
fldcw
adc
jbe
xchg
lock
clc
cs
jae
xchg
sbb
sbb
push
repnz
ljmp
test
and
gs
aad
sti
div
jno
jae
dec
mov
cli
jle
xchg
fwait
cli
and
int3
addr16
lock
cwtl
imul
insl
push
add
dec
and
pop
push
sbb
and
movsb
ret
push
mov
loope
xor
dec
sub
das
shll
adc
push
mov
lds
js
scas
lods
popf
mov
pusha
cli
fcompl
adc
js
sarl
adcl
push
xor
out
jb
fimull
test
and
jno
ret
decl
mov
insl
fisubs
adc
jl
cltd
jae
test
and
das
shlb
fwait
addb
sbb
cli
or
cwtl
lock
push
jnp
pop
jecxz
fwait
xor
leave
pop
dec
mov
scas
push
xchg
sbb
mov
sarl
stos
mov
inc
roll
mov
push
lret
sahf
leave
ljmp
push
sbb
sub
sbb
js
fstl
inc
dec
test
adc
mov
js
loop
jne
inc
mov
push
jns
test
push
arpl
pop
jmp
ret
push
jge
lods
jns
daa
xchg
pushf
scas
jmp
rolb
push
push
sub
in
or
push
sbb
js
pop
mov
lods
lods
cmp
sbb
inc
cmp
dec
lret
mov
popw
xor
add
cmp
fists
sbbl
mov
push
jp
test
xchg
sub
arpl
inc
sahf
mov
rorl
in
jnp
xor
mov
pop
ja
cmp
into
xchg
fsubrs
and
pusha
negb
sarl
in
inc
mov
js
sub
dec
enter
push
mov
jae
or
inc
repz
adc
sbb
rol
sub
xor
cmpsb
push
stos
mov
pop
sbb
cmp
dec
add
sub
mov
icebp
mov
pop
push
push
push
xchg
iret
cld
mov
and
lea
arpl
pop
mulb
fcmovnbe
mov
dec
les
xchg
adc
mov
pushf
and
jmp
xlat
xchg
lret
inc
fwait
ds
cmp
cmp
mov
lods
fwait
pop
in
and
dec
dec
cmp
and
or
inc
popa
int
test
xor
mov
jne
aas
dec
stos
test
les
and
push
insl
xchg
pop
mov
arpl
and
lock
adc
jle
divl
negl
outsl
xor
or
cmp
xor
stos
out
jae
cmpsb
sub
pop
arpl
sarl
nop
cld
pop
lea
or
dec
lods
mov
out
push
pusha
xor
pop
xor
xchg
insb
pop
xor
sbb
stos
roll
sbb
jae
cpuid
lahf
or
cltd
cltd
rorb
lea
sbb
or
inc
and
push
pop
pop
add
test
aad
lock
iret
call
in
pop
adc
ret
mov
or
inc
lret
sbb
outsl
push
xrelease
pop
push
shll
cld
push
push
and
pushf
ret
lods
jle
cmp
out
xchg
push
sbb
or
pop
cmp
push
cld
rorl
pop
jae
xchg
cmp
jno
sbb
pop
push
mov
in
mov
in
xor
adc
push
push
pop
push
test
push
cmp
cmp
sbb
les
dec
push
out
in
ds
cmp
ret
es
xor
mov
ss
ret
test
lods
mov
mov
or
adc
adc
shlb
push
insb
out
or
and
fwait
in
mov
ret
clc
sbbl
jae
mov
push
sahf
xchg
push
jmp
out
xorb
nop
jl
jno
enter
jb
lods
test
dec
leave
push
add
into
xchg
sbb
mov
xchg
inc
mov
add
push
jmp
or
aad
or
test
mov
aaa
push
push
pop
sbb
fidivrs
lret
daa
mov
xchg
mov
mov
sbb
sar
mov
popa
mov
jb
cmpsb
mov
cmpsl
mov
subl
aaa
cmpsb
push
movsl
mov
popa
hlt
mov
fcoml
je
inc
sub
mov
lods
jmp
inc
pushf
stc
fucomp
mov
icebp
add
jae
ret
jns
pushf
push
hlt
in
or
inc
mov
out
add
add
popa
aad
adc
adc
lea
pop
dec
sbb
subb
xor
ds
xor
cmp
pop
jmp
mov
mov
mov
ror
cmp
or
popa
add
push
icebp
cmc
lock
inc
mov
bound
push
addr16
adc
push
sub
adc
pop
mov
xchg
nop
xchg
sbb
sbb
and
add
imul
repnz
jnp
ret
pop
ret
lret
cmpsl
jmp
ret
xchg
roll
cmpsl
dec
cmp
jno
into
outsb
cmp
push
push
sbb
adc
dec
repnz
mov
push
nop
mov
push
adc
or
testl
imul
sbb
mov
js
cld
pop
cwtl
fcmovnb
data16
jecxz
stc
leave
stos
xlat
faddl
jb
repnz
out
sub
mov
mov
or
repz
int
pop
lea
xor
js
addr16
test
or
pop
mov
mov
mov
sbb
scas
push
mov
mov
test
mov
nop
out
sub
cmp
ret
or
in
rcr
mov
jmp
xlat
mov
daa
and
int3
aas
data16
and
repz
aas
ss
mov
xor
mov
fimull
ret
sbb
or
inc
sub
jns
std
sbb
xor
sub
mov
shlb
push
icebp
lahf
push
jle
shl
fwait
push
adc
adc
push
fs
cmp
enter
or
dec
fwait
cmpsb
cmpsb
mov
nop
out
mov
pushf
out
out
cwtl
repnz
sub
xor
test
or
inc
inc
sahf
add
xchg
adc
std
clc
mov
in
cmp
call
sbb
jne
ret
lret
dec
jmp
rolb
mov
cli
adc
cmp
pusha
jmp
jo
mov
or
pop
pop
nop
mov
pusha
fs
inc
push
add
sub
test
xor
sbb
cltd
pop
repz
in
xchg
mov
stos
fdivl
push
and
iret
adc
insl
cmp
nop
sarb
orb
mov
and
sbb
xchg
pusha
mov
stc
add
pop
mov
jle
pusha
xchg
insl
in
mov
adc
call
rcrb
or
testb
and
insb
or
test
mov
mov
push
mov
xor
adc
mov
jg
movsb
or
adc
outsb
cltd
xor
push
std
cwtl
stc
cs
push
pop
loope
jl
push
enter
dec
xchg
dec
inc
sbb
lods
jle
sub
aaa
jnp
inc
imul
or
and
add
fistpl
test
or
and
outsb
lret
mov
fsts
clc
cwtl
push
xchg
cmp
fldl
mov
std
call
mov
jo
arpl
out
push
loopne
testl
test
pop
mov
sub
inc
outsb
xchg
mov
push
stc
les
das
xorb
shrb
loopne
dec
cmpsb
sbb
es
mov
aas
enter
mov
movsl
push
aas
jmp
cmpsl
xchg
std
and
inc
or
mov
gs
sbb
sbb
cmc
xor
add
hlt
cmp
fwait
sarl
xor
jecxz
add
stos
cs
and
andb
idivb
and
mov
jns
test
js
jmp
adc
sbb
mov
add
xchg
test
mov
inc
fisttps
push
xchg
sub
add
lret
or
movsb
jmp
cmp
nop
arpl
hlt
pushf
sahf
pop
inc
sub
fcmovnu
insb
repnz
add
mov
filds
pop
xlat
sub
mov
push
pop
stos
aad
mov
xor
or
cmp
pop
jne
out
popa
jl
fisubrl
mov
sahf
gs
or
sahf
add
gs
mov
dec
ljmp
lcall
xchg
pop
les
add
bound
lods
lds
pop
rcr
scas
add
pop
aas
lods
cli
push
inc
jmp
loopne
push
sub
lock
push
scas
mov
xchg
out
mov
lds
cmp
and
push
push
push
xchg
aam
call
push
loope
stc
data16
iret
pop
dec
lods
shrl
scas
add
pop
scas
add
inc
iret
xor
test
iret
clc
mov
sbb
aaa
orb
xchg
jns
add
stc
dec
lods
mov
or
mov
jo
adc
mov
rcr
movsl
mov
mov
shl
in
mul
and
sub
push
das
lret
rcrb
pop
add
lods
inc
mov
jmp
rorl
pusha
ret
pop
stc
mov
pusha
xor
mov
inc
push
xchg
and
lret
cmpsb
mov
cmpsb
test
push
subl
and
out
lods
std
in
push
push
das
mov
xor
push
arpl
mov
adcl
cmp
pop
icebp
shlb
insb
ljmp
data16
in
dec
ljmp
push
fs
xchg
dec
call
mov
xor
cmpsl
push
repnz
lods
ss
xor
mov
push
push
ret
and
test
icebp
sub
icebp
ja
or
xchg
xchg
loopne
outsl
sbb
jbe
stos
mov
call
lcall
push
push
pop
jae
jecxz
pop
filds
mov
jecxz
shr
and
lret
ds
cwtl
adc
or
or
int3
fs
mov
mov
mov
mov
jl
mov
pop
out
cmp
jo
in
pop
nop
add
loope
push
sub
popf
ja
insl
jmp
daa
push
repnz
cmpsl
adc
dec
jne
aad
xor
test
sahf
sbb
movsb
ja
inc
rcll
jge
mov
ss
xchg
cmpl
imul
cwtl
inc
and
ljmp
jmp
adc
movsl
mov
fs
xor
sbb
int
mov
xor
cmpsl
add
out
stc
je,pn
aas
ret
add
sub
and
push
rorl
mov
aaa
daa
xor
outsb
add
add
imul
cmp
pop
adc
cmp
cmovne
fs
or
dec
inc
idivb
inc
add
nop
mov
or
imul
sbb
es
jne
hlt
fcoml
aas
cltd
fisubrl
rolb
xlat
int3
fisttpll
shll
into
imul
sub
pop
into
cld
cmp
cs
sti
inc
cmp
jns
insb
les
push
inc
sub
out
pusha
dec
lds
jge
lcall
pop
into
pop
enter
rcrb
xchg
fs
and
jbe
push
sarl
and
repz
inc
incb
enter
push
push
daa
fimull
rorl
cwtl
cmpsb
addb
out
xchg
movl
bound
dec
nop
jbe
orb
push
shlb
fsts
stos
xor
xor
out
inc
dec
cmc
sub
adc
or
cmc
js
cmp
test
leave
dec
xlat
pop
xchg
int
push
iret
in
fimuls
push
sbb
cs
push
out
leave
test
enter
notb
pop
cmp
cmp
gs
je
push
adc
and
push
pushf
xlat
mov
test
cmp
adc
test
imul
mov
add
aam
daa
int3
insl
push
loope
fdivrs
popa
mov
rorb
jbe
add
pop
add
or
sub
xor
jae
sub
xlat
lcall
scas
fiadds
pusha
out
and
mov
rcll
ds
adc
jmp
push
jbe
pop
sub
cmc
dec
pcmpeqd
and
sub
imul
ret
imul
aaa
js
lds
mov
mov
insl
sar
jp
call
aam
mov
mov
aas
jmp
gs
sbb
inc
stc
cmp
jnp
mov
mov
and
mov
decb
adc
jg
ficoms
xchg
add
cmpl
add
insl
shrb
jae
add
cli
enter
lock
xchg
adc
jnp
push
adc
das
sbbl
mov
mov
lret
jge
sub
add
jmp
icebp
insl
ficompl
xor
out
inc
test
push
mov
aaa
push
push
cmpsl
inc
jno
jecxz
cmp
push
dec
pop
xor
dec
stos
mov
and
rcll
jnp
push
mov
incb
std
clc
lahf
lret
fdiv
jge
xor
js
mov
adc
nop
adc
sub
pop
push
int3
mov
sbbb
out
rcll
shll
inc
xlat
jecxz
lret
adc
pop
xchg
dec
cmpsb
lock
shl
mov
pmullw
dec
dec
aad
pop
jecxz
sbb
mov
fdivrs
negl
cmp
aam
dec
and
cmp
nop
xchg
jmp
scas
mov
dec
lea
cmp
xchg
inc
cmc
jecxz
mov
inc
mov
push
dec
add
iret
push
xchg
stc
sub
in
cld
in
cli
int
mov
lret
mov
or
out
cli
jl
xor
test
sbb
lcall
xor
mov
movsl
mov
jecxz
xchg
pop
out
mov
imul
and
dec
rorb
jl
jne
out
jle
jge
add
mov
lods
pop
clc
clc
inc
and
je
xorb
inc
and
dec
cs
and
out
icebp
std
ljmp
and
jmp
and
stos
outsb
sbb
lods
jns
lahf
jecxz
test
push
out
lret
addr16
mov
pop
loopne
pop
or
mov
popf
lahf
jae
jg
int
ret
jnp
add
lea
jg
adc
xor
ja
xchg
push
and
arpl
repz
xor
aam
xor
jne
add
imul
cmp
xchg
lds
leave
add
dec
inc
test
je
or
and
jae
xchg
sbb
mov
jne
mov
inc
fiadds
cmp
cmpsl
pop
inc
lods
sti
scas
jnp
sbb
jp
call
mov
sbb
lods
aaa
in
or
lods
stos
test
add
stc
imul
cmpb
pop
mov
dec
add
or
pop
sub
out
cmpsl
out
in
pop
jne
inc
imul
pushf
jno
ret
pop
jbe
test
push
or
je
jnp
cmpsl
mov
call
sbb
incw
xor
add
sub
adc
and
ss
test
xlat
sub
inc
jae
sub
cmp
and
es
adc
arpl
call
jge
add
and
lahf
cmp
scas
dec
jmp
mov
test
cwtl
jecxz
sub
dec
adc
jnp
and
and
aam
sahf
or
sbb
dec
mov
mov
lds
pop
jecxz
sub
jmp
stos
iret
scas
mov
in
sar
fildl
icebp
pop
jne
popf
test
push
sub
jno
sbb
or
cmpl
scas
jge
ds
rorb
cmpsb
push
outsb
daa
jg
dec
jnp
jge
or
sarl
xchg
push
scas
fdivl
sub
rcrl
mov
js
ss
mov
fiadds
fs
pushf
mov
sbb
nop
inc
cmp
xor
icebp
bound
sahf
inc
in
pop
pop
mov
fwait
icebp
testl
cmp
jbe
jae
sub
int
push
lods
ja
pop
add
mov
js
loopne
pop
test
xchg
movsl
addr16
xchg
movsb
xlat
push
lret
lahf
sarb
pop
pop
cs
mov
in
jae
push
mov
pcmpgtd
xchg
cmp
enter
or
xchg
pop
ljmp
std
cmp
incl
pop
data16
mov
aam
xchg
inc
dec
test
sub
pop
mov
inc
adc
int3
ret
popa
cli
jb
mul
fs
mov
dec
sub
movsl
fidivs
stc
cmp
xor
ds
sub
lea
jg
and
imul
sub
mov
lret
out
push
popa
pop
js
jp
loopne
out
lods
sub
dec
mov
lds
lods
popa
int3
xchg
ficoml
mov
aam
mov
xlat
pop
gs
mov
add
adc
push
mov
insb
sbb
cmp
mov
add
addr16
pusha
add
nop
pop
pop
jae
icebp
sbb
imul
leave
mov
jns
mov
pop
xor
add
test
and
iret
push
and
ljmp
in
push
out
rorb
pusha
xor
fdivs
push
outsb
std
adc
lds
push
or
imul
in
mov
or
pushw
xchg
pushf
divl
inc
int
rolb
pop
in
or
xor
sub
popf
cmpb
int3
mov
aaa
ficomps
movsb
js
test
mov
mov
push
movsl
in
mov
xchg
aas
inc
cld
aas
cmp
orb
lods
sbb
push
fs
sub
mov
loopne
lea
xchg
push
xchg
dec
cmc
ficompl
cwtl
add
repnz
push
ja
jbe
aas
das
les
shrl
aaa
cmpsb
rol
loope
pop
adc
mov
xor
cmp
and
mov
popa
ja
cmp
dec
or
dec
jecxz
scas
and
push
xchg
sahf
push
test
arpl
in
imul
mov
aam
movsl
pop
ja
jl
cmpsb
sbb
push
mov
jne
int3
inc
push
hlt
inc
mov
loope
xor
rclb
lock
imul
push
arpl
ret
mov
prefetchnta
mov
push
push
clc
pop
xchg
pop
inc
adc
lret
mov
and
lods
xchg
push
aas
push
das
sbb
pop
jmp
push
sub
cmp
jae
mov
sahf
ljmp
cmpsb
fs
push
or
cmp
loop
and
movsl
out
aam
or
xchg
iret
jl
insb
xchg
push
mov
or
sbb
or
int
xor
mov
cmp
lock
cmp
shr
ss
lods
inc
ja
mov
adcb
mov
jle
insb
add
pusha
repz
xor
push
and
sbb
ds
sbb
adc
rep
jo
mov
inc
aad
sbb
movsl
jne
mov
mov
or
sub
push
or
dec
adc
fwait
pop
scas
hlt
jp
pop
add
out
mov
rcr
xchg
and
adc
jecxz
stc
jns
popa
lock
xchg
lock
mov
inc
adc
lods
or
ret
fcmovbe
mov
pushf
popf
mov
popa
inc
sbb
popa
shr
in
sub
les
insl
hlt
jb
sub
or
adc
mov
ret
fwait
outsl
xor
push
dec
imul
jp
fldl
push
shlb
outsl
mov
imul
in
or
dec
pop
xor
jbe
insl
pop
push
cli
out
mov
sti
xor
jno
dec
fisttps
xchg
mov
cmp
mov
mov
fstps
sti
scas
stos
mov
adc
outsb
setg
cmp
negl
int
push
sbb
shrb
add
daa
movsl
xchg
dec
les
aaa
aad
mov
adc
sbb
inc
pop
lds
add
sub
fnstsw
test
test
fwait
mov
lods
push
sbb
or
mov
lock
and
into
idiv
xor
imul
jecxz
rcll
xchg
loopne
scas
mov
pop
cmp
jnp
push
add
xorl
daa
cltd
push
fdecstp
fidivs
push
aaa
xor
inc
clc
sub
mov
mov
cmp
sub
dec
adc
push
test
adc
imul
icebp
daa
push
in
ljmp
pop
addr16
sub
cmp
inc
hlt
and
test
ds
push
add
shl
ja
sub
pusha
ficoms
pop
inc
dec
pop
call
and
ret
call
jb
xchg
movsb
push
je
testb
aad
mov
or
cmp
fwait
dec
pop
ret
mov
dec
pop
cmp
add
push
lods
movsb
jbe
je
aas
adc
in
add
push
sbb
add
repz
daa
pop
xor
or
outsb
insl
lock
sbb
fwait
js
mov
rorb
mov
push
mov
sub
dec
aam
pop
fidivrs
dec
insl
fimull
sub
sarb
mov
cmp
jecxz
mov
sbb
dec
cltd
mov
scas
ja
push
ja
push
pop
jle
cmovb
repnz
gs
scas
mov
iret
sbb
call
pop
fcompl
sbb
ljmp
repz
jno
into
lods
push
mov
mov
and
jne
ds
sub
arpl
js
pop
inc
mov
mov
cli
mov
xlat
outsb
loope
das
js
cmpsl
sarb
pop
int
test
inc
loop
jg
sbb
stos
xor
mov
popa
in
int3
cmc
mov
fmuls
mov
psubw
scas
jo
fldenv
xor
ftst
cmp
fucomi
pop
sbb
jbe
imul
test
mov
xchg
push
das
popl
xlat
jnp
xor
xor
decl
clc
test
push
shr
jg
and
outsl
dec
hlt
xor
dec
ss
mov
xchg
vminss
adc
sub
fxch
pop
imul
pop
cwtl
imul
vmovmskps
popf
dec
movsl
mov
add
repnz
scas
les
pushw
loopne
orb
dec
stos
cmpsl
or
fwait
xchg
xchg
jbe
dec
dec
loopne
mov
mov
sub
jae
and
mov
mull
xor
aas
lds
fs
clc
loop
jmp
iret
add
je
es
sub
push
arpl
xchg
test
lret
and
adcb
pop
jle
adc
ret
outsl
inc
and
mov
enter
pop
popa
inc
push
xor
mov
sub
nop
mov
xchg
dec
push
movsb
in
and
push
call
mov
icebp
pop
mov
ficoml
push
les
push
push
arpl
fwait
stc
out
jge
aaa
dec
jnp
sti
jnp
mov
pop
xchg
push
push
mov
mul
mov
jmp
xchg
mov
and
int3
lcall
inc
out
jmp
adc
roll
inc
push
inc
repz
xor
push
in
mov
adc
xor
cmp
sub
mov
outsb
jnp
int3
dec
loopne
dec
rcrl
shll
push
test
pop
or
mov
je
dec
dec
shlb
repnz
cmp
movsl
pmulhw
adc
rolb
loopne
add
cmp
push
inc
in
sub
jnp
fmul
adc
movsb
cltd
sar
pop
xor
in
inc
or
mov
push
rcl
ja
popaw
xor
dec
jge
test
sub
into
pop
xchg
sti
sub
rcll
cmpsb
aas
dec
jp
pop
xor
mov
enter
mov
lock
cmp
push
cwtl
adc
push
dec
adc
mov
lods
push
lods
and
pop
xor
sbb
sbb
out
jae
std
in
cmp
cmp
repz
pushf
fidivrl
js,pn
out
repnz
icebp
imul
pop
shrl
arpl
fs
cmp
lock
loopne
outsl
test
or
sub
cld
sti
shl
lea
arpl
sub
push
mov
dec
fnsave
repz
cmpsb
jmp
adc
movsb
jbe
cs
cld
jae
lods
add
cmpxchg
sbb
jmp
lahf
inc
mov
cmp
pushf
push
aam
lods
mov
arpl
iret
es
in
xchg
pop
jl
mov
rorb
mov
mov
gs
adc
push
or
enter
aas
add
loope
cli
sbb
enter
jg
mov
jb
pop
sub
inc
adc
sarl
sub
sub
push
rorl
scas
iret
sub
inc
add
mov
test
rorl
sub
jge
in
sahf
aas
mov
cltd
cwtl
in
cltd
les
loopne
insl
push
or
sbbb
or
jno
stos
inc
mov
dec
sub
xchg
and
pop
adc
sbb
fildll
std
dec
dec
inc
ret
or
xor
les
inc
ljmp
out
sub
xchg
mov
mov
shlb
cmp
jbe
push
shll
fsubl
pop
insl
ds
fstpt
test
gs
sbb
dec
jp
ja
or
push
add
mov
mov
mov
jo
mov
xchg
cmpsl
in
sahf
fisttpll
mov
movsl
lea
fistpll
dec
dec
xchg
gs
stos
rclb
sub
cmp
jl
in
xlat
push
aam
ret
in
daa
stc
popf
repz
pop
or
and
lahf
sbb
aaa
aam
sub
sbb
cmc
test
subl
xor
cltd
xchg
stc
inc
popa
in
sti
adc
out
repnz
cmpsb
scas
pop
lods
clc
mov
cli
faddl
mov
xchg
jle
push
cwtl
push
test
push
bound
adc
sub
aad
in
mov
fimuls
mov
je
fdivl
mov
clc
cmp
fwait
pop
jle
je
mov
xlat
mov
xchg
das
mov
iretw
mov
xchg
dec
inc
push
mov
xchg
mov
in
addr16
std
jmp
sti
test
lahf
sub
ficoml
fisttpl
std
pusha
xchg
push
pop
xor
inc
sarb
pop
sub
lret
pop
les
add
inc
sbb
dec
clc
sub
sub
inc
loopne
outsb
frstor
rorb
je
push
rol
xchg
push
xorb
xor
jo
arpl
icebp
imul
lret
add
mov
jbe
stos
adc
inc
cmc
fnsave
pop
ds
add
std
push
mov
add
and
xchg
xor
scas
cmpl
loopne
lea
subl
scas
push
adc
outsl
icebp
mov
mov
sbb
int
sbb
lods
mov
xchg
test
add
pop
mov
rcrl
insb
push
nop
or
lahf
in
mov
push
hlt
cld
dec
cmp
and
jl
mov
pop
ljmp
cmpsb
xchg
cmp
out
repnz
movsl
cltd
mov
scas
xor
adc
pop
mov
mov
divb
sahf
mov
and
jge
sub
popf
inc
pushf
pop
sahf
clc
dec
andb
inc
jno
xor
inc
sbb
adc
out
fistpll
insl
add
fwait
mov
fldenv
leave
jp
jle
mov
lock
imull
movsb
cmp
call
dec
aas
int3
nop
push
loope
sbb
movsl
movl
mov
or
mov
pop
dec
lret
xchg
and
xchg
fwait
add
xor
dec
xlat
xor
divl
outsl
scas
sbb
ficoml
gs
jecxz
mov
mov
mov
daa
jecxz
testl
mov
push
jmp
xchg
xchg
addr16
fs
sarl
sub
movsb
sbb
sub
loopne
mov
or
sbb
test
popa
lcall
bound
push
cmp
cmp
clc
xchg
clc
int
push
adc
jl
andb
lret
push
orl
push
in
add
xchg
bound
jne
sub
or
cmp
mov
push
loope
loope
fldcw
or
cld
jl
inc
insl
aas
xorl
roll
jmp
xchg
pushf
add
mov
cmp
leave
test
cmp
dec
das
jmp
daa
rorb
jns
sti
aas
loop
adc
sub
enter
push
add
xorb
shl
inc
fs
push
and
stos
jnp
enter
loope
std
les
decl
mov
push
add
xchg
dec
test
mov
mov
fnsave
lods
push
pusha
aad
std
pop
cmpb
adc
mov
imul
push
imul
push
mov
outsl
push
movsl
jecxz
repnz
mov
data16
out
stos
inc
push
or
inc
sub
push
mov
sahf
or
fnstcw
jmp
pop
mov
hlt
inc
mov
rcl
or
hlt
lods
pop
mov
cmp
and
sbb
xor
outsl
sub
loope
call
jecxz
jne
in
mov
test
push
jno
shlb
add
sti
lds
lahf
xor
in
sbb
stos
jle
repz
and
mov
or
jecxz
push
aaa
cli
push
xchg
adc
mov
xorl
mov
and
push
pushf
scas
adc
mov
inc
cli
std
mov
ss
push
movsl
sbb
mov
jnp
test
subl
pushl
pushfw
sub
insl
mov
stos
mov
dec
int3
rorl
jb
gs
cmc
mov
pop
jo
sub
jns
jnp
int
nop
or
out
xchg
jecxz
push
xchg
adcb
adc
cmc
xor
mov
std
fnstenv
add
dec
mov
lods
push
loopne
aas
sbb
sti
pop
xor
stos
pop
mov
dec
xchg
mov
in
andl
fnstenv
adc
jmp
cld
push
jl
rorl
push
inc
loope
aam
ljmp
leave
into
cmpl
mov
inc
sbb
in
movsb
jne
data16
pusha
pusha
xchg
add
sbb
aas
xchg
cmp
mov
dec
loopne
mov
xchg
insb
and
xchg
mov
inc
dec
sub
leave
push
lds
mov
or
push
test
loop
movsl
push
and
rcr
sbb
nop
sbb
sub
arpl
push
daa
aad
cmpb
rorl
movb
cwtl
mov
leave
dec
pop
or
adc
jbe
xchg
xorl
mov
mov
and
add
jle
mov
sbb
call
sub
sub
lock
fldenv
cmc
push
sub
test
mov
nop
in
jae
cmp
mov
in
rorb
dec
xor
lods
xor
inc
jno
xor
fimuls
pop
sahf
clc
lretw
xchg
daa
adc
pusha
dec
test
je
loopne
mov
cmc
or
lahf
in
rdmsr
imul
mov
leave
push
adc
sbb
int
idivl
insl
xchg
rcl
add
adc
popf
mov
mov
jp
or
rorl
pop
push
test
lea
dec
shrl
mov
js
push
jno
bound
sbb
push
nop
xchg
jecxz
orl
addr16
sub
mov
jg
and
lea
jb
test
xchg
loopne
pushl
sarb
aam
push
pushf
call
hlt
xor
xor
jns
jmp
xor
jp
ds
dec
rol
dec
rep
test
cmpsb
xor
add
fs
fstpt
or
fidivl
imul
or
out
aad
mov
push
out
scas
mov
nop
sbb
pop
insl
mov
cltd
sbb
pop
or
cmp
loope
pop
bound
filds
dec
aas
popf
es
lock
insl
lds
testb
or
in
inc
push
mov
iret
or
ror
adc
shll
mov
mov
shll
out
shr
lret
or
sbb
add
scas
pop
jnp
inc
pop
jb
inc
mov
shll
lret
inc
icebp
scas
rcl
sub
data16
mov
pushf
ret
cmp
mov
and
push
enter
inc
adc
jb
cmp
sub
xlat
add
callw
push
aaa
adc
pop
push
xor
in
dec
xchg
sub
inc
fidivrl
add
daa
mov
lret
fidivl
cli
stc
int
out
out
xchg
mov
cmc
sub
mov
movsb
js
pop
adc
xor
cltd
out
in
mov
mov
clc
dec
pop
aas
out
push
or
pop
dec
scas
or
jo
xchg
jge
leave
xlat
cwtl
dec
lret
out
imul
mov
inc
jmp
fwait
negl
fldt
pop
nop
cmpsl
xchg
jnp
lcall
std
xchg
or
scas
outsl
cmp
nop
fistps
push
je
pop
jae
std
stos
lret
movsl
ja
and
mov
iret
mov
popl
jl
adc
mul
ret
in
dec
lds
jno
push
add
into
loope
mov
into
loope
push
push
push
cmp
add
or
pop
aad
std
add
rcrb
sub
cli
ljmp
mov
and
scas
pop
mov
loop
int3
sbb
mov
push
jno
aam
cltd
shll
out
lcall
ja
outsb
sub
out
jns
pop
fiadds
mov
push
fistpll
imul
rorl
inc
test
ret
inc
push
mov
mov
inc
adc
push
adc
test
mov
scas
adc
inc
imul
sbb
add
dec
fsubp
int3
and
pop
add
fisttps
adc
mov
jno
scas
cmp
mov
pop
dec
mov
pop
xchg
push
fdivrl
sbb
jg
les
clc
ficoms
pop
jno
stos
stos
mov
test
ljmp
and
adc
lods
pop
mov
out
mov
pop
insl
mov
cltd
cli
inc
stos
loop
xor
in
or
add
in
mov
xchg
aaa
sbb
outsb
sbb
enter
mov
cmp
xchg
clc
sar
cs
test
xchg
mov
sbb
push
pop
or
testl
mov
xor
stos
or
mov
sbb
pop
fwait
push
mov
sub
sbb
out
mov
call
ds
adc
push
dec
popa
shrb
in
lahf
and
adc
xchg
mov
cltd
cmp
popf
xchg
fcom
inc
test
pop
mov
add
pop
and
xor
mov
mov
or
push
movsl
mov
xchg
testl
push
loopne
push
clc
inc
xor
xchg
xchg
mov
daa
das
je
ret
jno
stos
mov
imull
sarb
lods
insl
mov
pushfw
out
in
sarb
cwtl
sub
mov
mov
test
jecxz
lret
sbb
jg
jp
stc
je
iret
and
push
outsb
nop
jb
gs
or
xchg
or
adc
fwait
or
imul
push
sti
rorl
or
mov
lods
mov
inc
push
insl
mulps
inc
cmpsb
in
stos
bound
jnp
outsl
shlb
xchg
loopne
mov
mov
out
push
lock
shll
fs
or
dec
fbld
rcl
mov
add
dec
insl
and
xchg
movsb
ret
pop
push
test
jl
or
movsb
xchg
sahf
mov
pop
mov
cmp
cmp
add
test
pusha
lret
mov
insl
mov
shlb
mov
push
test
jmp
inc
sub
sub
xchg
fstp
jo
adc
movb
xor
pop
inc
sarb
in
pop
push
or
rolb
adc
xchg
in
mov
or
xor
and
mov
ficoml
iret
in
xor
jmp
lar
jecxz
pop
push
dec
popf
mov
push
mov
cmpsl
arpl
xchg
xchg
pop
imul
lret
inc
lahf
mov
cli
out
mov
cmpsb
jmp
outsl
imul
lods
adc
xor
xor
in
or
xchg
mov
xchg
pop
jecxz
out
int
xlat
push
inc
jmp
mov
cmp
adc
outsl
pop
cld
adc
fisubrs
movsl
or
daa
mov
nop
loopne
dec
hlt
mov
cmp
in
int3
jne
or
pushf
ja
inc
adc
movsb
mov
mov
int3
imul
adc
aad
xor
icebp
cmp
daa
je
pop
testb
jae
pushf
test
mov
rcll
xor
push
lea
aaa
test
lods
xor
iret
mov
pop
or
mov
inc
jmp
lahf
xorb
repz
add
xchg
mov
test
mov
mov
dec
sti
outsl
xor
sbb
hlt
setno
insl
mov
cmpsl
inc
pop
out
sbb
xchg
push
and
fsubl
push
jno
pop
xchg
sub
daa
das
call
pop
int3
les
dec
sub
add
xor
loop
mov
mov
leave
adcb
ja
ljmp
or
cmpsl
and
imul
insl
pop
pop
xchg
std
jl
sahf
movsb
iret
dec
lea
les
int3
popa
aaa
inc
jno
mov
repz
lock
cwtl
fbld
push
popa
jo
inc
shll
mov
inc
clc
out
xlat
ret
cmp
cmp
out
adc
xchg
push
push
pop
xor
clc
xchg
cmp
mov
cli
loope
paddusw
pusha
sar
das
mov
mov
or
es
xchg
dec
cwtl
ljmp
xor
and
xor
dec
sbb
inc
iret
popa
movsb
or
push
stc
orl
mov
fwait
ret
ljmp
dec
mov
ds
jbe
lods
das
and
loope
xor
cmpsl
xor
push
xor
stc
divl
mov
mov
mov
xchg
push
loope
or
insb
pop
mov
ja
andb
mov
sbb
push
fcompl
fisubl
push
xor
mov
jg
cld
out
ficoml
jg
lods
gs
cmp
in
cmp
movsb
xchg
adcb
mov
dec
mov
scas
std
add
mov
xchg
xor
and
int3
sbb
loop
out
mov
sub
lods
add
popf
lret
pop
pop
sbb
enter
bound
fwait
imul
ret
jecxz
cltd
or
imul
lret
aad
pop
clc
push
cmp
sub
sbbl
add
ret
mov
js
pop
pop
movsb
sub
fnstenv
adc
adc
movsl
inc
divb
loope
sbb
idivb
jns
imul
jno
rorl
push
outsb
fistl
add
je
jg
daa
outsl
cvtpi2ps
int
andb
and
cmp
scas
dec
scas
sbb
sub
or
mov
sub
divl
jp
pusha
and
adc
xchg
jl
sub
mov
jge,pt
or
mov
test
idivl
push
imul
xchg
shlb
lods
cltd
and
xchg
sbb
mov
push
mov
pop
mov
mov
icebp
xor
xchg
mov
movsb
mov
in
pop
and
repnz
push
push
shrb
daa
bound
push
mov
call
cvtdq2ps
shlb
outsl
sbb
data16
jo
mov
mov
pushf
pop
daa
cmc
mov
outsl
sahf
daa
stos
fsub
inc
mov
std
cmp
scas
les
xchg
mov
adc
mov
xchg
add
loopne
push
fst
dec
push
hlt
push
test
dec
lds
sahf
and
imul
js
dec
mov
xor
push
and
sahf
add
enter
push
sub
pop
test
adc
pop
cld
in
mov
sbb
cli
sbb
jno
push
inc
in
jne
sahf
xchg
xchg
or
dec
xchg
mov
lock
jmp
lods
icebp
cld
ljmp
push
hlt
ss
sbb
mov
push
in
sbbl
mov
leave
popa
cwtl
cmp
adc
ret
mov
sub
inc
and
pop
mov
shrb
fnstenv
sub
repnz
into
cli
inc
jnp
sbb
cmc
or
les
push
rol
and
gs
xlat
pushl
inc
lea
xor
jno
xlat
test
test
js
or
sarb
dec
cs
mov
add
sbb
adc
inc
push
loop
mov
enter
cmc
int3
inc
cltd
dec
enter
sub
movsb
pop
xchg
cmp
popf
int
imul
add
pop
pop
insb
aas
push
loope
xor
push
mov
dec
aas
inc
push
lahf
mov
js
xchg
je
rcrb
aas
jmp
mov
mov
add
insb
adc
lock
add
jecxz
and
je
insb
pop
repnz
push
xor
inc
lret
adc
repnz
fs
fcmovu
leave
mov
scas
sti
sub
leave
es
mov
vpshlw
arpl
jne
call
push
push
ja
pop
das
sub
and
pop
outsb
jmp
enter
push
es
cmpsb
or
pop
jecxz,pt
pushf
orb
xchg
cwtl
ret
inc
jae
cwtl
mov
test
lea
jae
inc
aam
sbb
lcall
repnz
push
je
aaa
lock
pop
push
push
mov
iret
cmp
dec
fstp
dec
xchg
dec
test
cli
and
fnstcw
and
ror
stos
cmc
loope
cmp
fdivrs
loop
pop
daa
pop
dec
push
aad
dec
inc
ljmp
les
stos
orb
aas
mov
sbb
outsl
jecxz
jmp
idivl
das
je
adc
jnp
mov
xchg
out
dec
dec
pop
ficomps
xor
gs
cs
dec
cli
push
mov
xchg
dec
or
aad
or
sbb
add
mov
push
addr16
fucomp
push
mov
pop
pop
xchg
je
movb
pop
mov
mov
out
rolb
pop
mov
mov
insl
pop
insb
xor
mov
outsl
call
cmp
stos
out
adc
addl
cmpl
lret
or
cmp
popf
stos
inc
leave
out
push
mov
shrl
jg
cs
cmp
js
sbb
aas
dec
es
movsb
sbb
inc
out
sub
movsb
repz
mov
xchg
mov
sbb
adc
push
ds
inc
or
mov
cli
pop
ret
mov
mov
push
movsb
loope
add
or
pushf
dec
mov
inc
fildl
adc
out
pop
subl
sbb
fxch
jle
scas
pop
lret
repnz
insl
and
jb
mov
jl
movsb
dec
jp
xchg
xor
call
sbbl
in
push
inc
aas
pop
xor
pop
loopne
push
cmp
std
adc
sub
or
jb
es
les
cltd
je
push
ret
cmc
lods
out
movsl
enter
and
stos
in
cmp
in
sbb
cmpb
iret
or
hlt
dec
jmp
imul
sub
mov
bound
push
mov
cmp
push
xchg
jo
nop
inc
mov
stos
pop
out
or
adc
jb
test
xor
cmp
or
dec
cmp
add
sub
adc
pop
addr16
in
inc
sbb
push
leave
dec
pop
cli
jl
mov
mov
popa
push
mov
adc
and
test
hlt
mov
or
and
mov
push
in
call
in
imul
rclb
or
mov
jne
movsb
call
sub
imul
push
mov
cmp
or
mov
xor
sbb
jb
push
inc
icebp
xchg
push
int3
div
sub
inc
mov
into
cmc
insb
out
test
js
inc
gs
orl
xchg
push
sbb
inc
push
jp
jno
clc
outsl
pop
repnz
jg
enter
add
mov
push
testb
rolb
inc
pushf
loope
roll
push
pop
add
inc
cmp
stos
and
sbb
fists
adc
cld
mov
lret
pop
hlt
loopne
or
push
lods
adc
fwait
xchg
xchg
pop
and
movsb
pop
xchg
jle
movsb
mov
imul
mov
jne
les
cmpsl
or
fsts
fcmovb
push
mov
aaa
test
mov
addl
lods
out
lods
xchg
ljmp
lds
inc
jno
push
jbe
sbb
jo
add
sbbl
mov
pop
mov
push
sub
jo
push
imull
gs
je
in
or
incb
jp
push
stos
jp
push
mov
cmp
mov
cwtl
cmpsl
mov
push
dec
lret
dec
into
lahf
jae
out
xor
adc
loop
mov
outsl
jp
and
jle
ja
jb
and
addb
cmp
nop
in
lods
cmp
data16
add
inc
aam
mov
sbb
lods
xchg
sbb
jno
cmc
rep
insb
je
rcrb
mov
xor
dec
cmp
rorb
movsb
xor
scas
dec
adc
push
dec
pop
mov
mov
cmp
or
mov
xchg
push
mov
push
into
sti
mov
lods
setp
leave
rorb
icebp
cs
cwtl
cmc
mov
mov
adc
fwait
mov
and
arpl
fwait
stos
ret
iret
jle
xor
sti
in
push
fs
sub
in
loopne
les
adc
sbb
pop
imulb
adc
xorb
cli
mov
push
into
shl
and
stos
ja
xchg
pushl
roll
mov
stc
or
lcall
jo
push
and
mov
add
dec
mov
and
mov
inc
js
xchg
out
mov
sti
out
sar
jge
clc
mov
stc
out
imul
lea
pop
xor
mov
jnp
push
mov
sbb
mov
outsl
adc
push
inc
xchg
jl
es
loop
daa
jp
sahf
std
fisttpl
fiaddl
jmp
mov
loop
mov
sbb
mov
cmp
hlt
popf
jl
pop
clc
dec
rcr
push
jmp
ljmp
mov
dec
mov
xor
mov
loope
inc
pop
cmpb
pusha
loop
sbb
push
in
cmp
leave
cmp
idiv
xor
push
fldt
movsb
in
xor
outsl
rcl
out
dec
iret
cltd
and
movl
insb
cmp
dec
push
jo
add
icebp
pop
pop
icebp
jbe
sbb
imul
xor
xchg
in
sbb
jno
add
imul
ja
fmull
dec
jmp
xor
fiaddl
popf
inc
mov
jecxz
mov
inc
adc
aaa
cmp
test
daa
int
fwait
es
in
fwait
mov
mov
movsl
dec
fs
bnd
cltd
cltd
leave
jge
js
mov
xchg
test
pop
sbb
mov
in
aam
sub
stc
push
mov
out
or
cmpsb
add
test
push
insb
jo
loope
and
out
mov
sub
xchg
add
fisttpl
dec
fiaddl
xchg
sub
jge
lret
jne
cmpsl
push
mov
pusha
sbb
jmp
jmp
add
hlt
rorl
cmp
cmpsb
dec
mov
mov
lock
mov
xchg
ljmp
add
ret
jae
fs
jo
cmc
cmpsl
fs
or
scas
das
out
or
in
jno
cld
jg
mov
sub
lock
cmp
jns
in
filds
adc
mov
sub
pop
fcmovnb
pop
mov
lahf
fldl
shrl
or
cmc
lea
int3
gs
cmp
add
jns
pop
or
adc
sub
adc
or
loope
mov
xor
jp
dec
rcl
cmp
ret
inc
cmp
pop
jl
mov
cmp
push
jle
cmp
incb
repnz
cmpsl
rol
sbb
add
cli
repz
popa
test
jae
pushf
mov
pop
mov
jo
pop
jmp
adc
and
call
js
inc
mov
lret
push
and
je
cmp
add
lods
cmpsb
rorb
and
xor
xlat
mov
imul
adc
add
xchg
mov
aas
cwtl
rol
mov
int
mov
mov
jno
mov
mov
push
mov
shlb
mov
mov
dec
adc
loop
dec
scas
mov
and
and
pop
out
add
std
xor
cmp
cmp
imull
in
sub
pop
dec
sbb
mov
push
jle
loop,pn
jns
inc
push
ja
cmc
dec
inc
xor
add
dec
jle
test
add
jmp
push
insb
repnz
arpl
aas
cs
mov
out
cmp
nop
popf
cmp
js
xchg
sub
int
arpl
pop
lahf
add
outsb
mov
jp
js
iret
or
paddq
movsl
jb
xor
notb
sub
pusha
mov
mov
jne
sub
cli
inc
xchg
shll
and
addr16
dec
push
test
orb
rcr
jecxz
cli
mov
adc
dec
add
gs
and
sbbb
push
test
pop
and
call
test
cmc
psubd
xor
or
add
sbb
jno
cmovg
ret
test
addl
pop
jne
and
pop
call
ret
rcrb
ja
mov
mov
jbe
sar
cmp
std
inc
daa
inc
jle
jl
push
mov
push
int
sbb
cld
jae
rcll
inc
and
xchg
xchg
mov
das
cmpsb
aaa
movsl
push
xchg
mov
push
jle
xchg
lods
pop
sub
mov
je
push
jmp
dec
out
push
out
aaa
lds
cltd
sbb
sbb
mov
fisttpl
mov
cmpsb
xchg
ret
xor
mov
mov
movsl
mov
je
xor
cld
adc
lods
test
orb
fisubl
pop
les
xchg
mov
jecxz
outsl
mov
sub
adc
fs
add
sti
sub
xchg
int3
out
bound
cwtl
rorb
dec
mov
sub
sub
lock
dec
subps
sarl
pusha
leave
jg
push
dec
cwtl
add
add
jge
fisubs
leave
imul
pop
push
cltd
push
jp
add
repnz
jmp
xchg
int3
rcr
mov
pusha
les
rcr
sbb
xchg
or
sbb
sub
inc
sub
adc
jmp
or
xor
mov
mov
aaa
sarl
es
jne
push
mov
into
cli
lahf
and
dec
lea
mov
pop
mov
push
movsl
rorl
jno
push
add
jl
lods
mov
xchg
popl
dec
imul
movsl
repnz
lret
push
mov
sub
push
add
xchg
ds
mov
push
std
push
pop
or
enter
mov
lods
mov
mov
jl
inc
hlt
or
popa
jno
xchg
sub
fsubs
or
or
jne
fsubrs
push
in
fisttpll
je
inc
test
jg
outsl
jne
mov
push
idiv
xlat
dec
aaa
roll
stc
orps
scas
cmpsb
xchg
push
inc
cmp
pop
mov
push
or
rcrl
mov
add
adc
or
mov
adc
jge
fs
popl
xor
xchg
loope
mov
icebp
test
cmpsb
mov
mov
aad
into
es
mov
andb
xlat
push
dec
lcall
push
push
sub
push
sbb
xchg
ret
mov
sbb
dec
xor
pop
pop
int
les
mov
aam
push
cmpsb
rcrl
xor
mov
dec
cmp
popf
test
push
insl
cmp
dec
sbb
insl
add
mov
jno
mov
hlt
lods
and
cld
mov
push
push
dec
stc
icebp
incb
fcoms
cmp
sub
xlat
xchg
loopne
fisubs
or
js
mov
clc
fcoml
rolb
cmp
sbb
loope
cs
sub
push
repz
dec
jae
int3
lods
dec
popa
jbe
or
cli
aaa
lock
xadd
sbb
dec
fisttps
pop
dec
jmp
mov
inc
mov
imul
mov
push
leave
push
sbb
dec
adc
xor
sbb
inc
insb
test
in
and
adc
lds
cmp
jns
xor
aam
mov
aaa
xorl
jecxz
or
xor
test
mov
mov
vmovdqa
outsb
and
lea
add
cli
jg
lods
into
mov
rol
inc
into
loop
jae
shrb
pop
scas
push
sahf
xchg
bound
fs
cmpsl
pop
push
mov
fucom
sbb
mov
dec
test
clc
adcl
fcompl
pop
lahf
repnz
cmp
add
push
iret
cli
fwait
arpl
sbb
push
mov
mov
cmpsl
inc
lea
test
fisubl
xlat
sbb
mov
or
lds
test
sbb
rcrl
movb
push
loop
push
sbb
xor
in
dec
mov
jge
xor
sar
popa
jmp
mov
pop
xchg
pop
xchg
out
sub
sbb
cmp
sub
dec
and
std
iret
sbb
lock
lds
cmpsb
cwtl
les
sub
inc
lea
in
std
lods
pop
inc
pop
or
cs
enter
into
fcom
mov
push
adc
lea
xchg
jp
ret
mov
data16
pop
popf
jl
lock
dec
push
jge
xchg
mov
pop
fsubrs
jae
cwtl
cli
sti
cmpb
test
sti
outsl
jge
arpl
cmpsb
or
mov
cmpsl
clc
jg
movlps
xor
pop
sbb
xor
adc
call
sbb
xor
aas
int
test
push
pop
push
and
xchg
jg
sbb
loop
dec
xchg
mov
mov
leave
fistpll
pop
jno
pop
cmpl
mov
hlt
sbb
rcl
jbe
ja
addr16
ljmp
jno
or
fsubr
xchg
add
cmp
mov
jb
das
jnp
jge
adc
into
push
sub
sub
sahf
mov
pop
sbb
mov
shlb
lret
shr
cmc
ja
shll
xchg
mull
imul
or
cmp
cmp
gs
pop
cmp
adc
scas
jmp
jl
xchg
mov
hlt
sbb
ror
loopne
cmp
rcrl
sub
fisttpll
ret
cld
pop
jle
xor
pop
sbb
inc
jns
cli
xchg
sub
sub
or
fs
scas
cmpsl
lret
cld
add
ficomps
repz
cli
sahf
inc
ficoms
pop
jge
and
daa
into
mov
add
and
push
fildll
roll
jnp
cwtl
pusha
das
xchg
daa
xlat
lret
dec
stc
lea
and
imul
xor
mov
push
dec
cmp
pop
in
rcl
divl
push
dec
adc
pop
and
push
add
add
adc
enter
jbe
and
enter
addb
mov
sbb
pop
inc
cmp
mov
jl,pt
pop
fidivs
jns
pop
cmpsb
out
adc
jbe
xor
xor
pop
popa
push
and
fsubrs
test
mov
mov
or
mov
or
pop
pop
add
nop
ficoms
xchg
inc
bound
loope
push
repnz
add
jno
repnz
jb
or
mov
div
push
mov
xor
jmp
stos
dec
pop
push
jne
lret
shlb
mov
sub
sbbb
and
iret
arpl
sub
cmp
test
xor
call
cmp
lock
mov
xor
mov
gs
pushf
mov
add
mov
fcoms
jge
movzbl
adcb
push
add
gs
pusha
loope
fwait
outsb
cld
push
std
mov
sub
jae
and
lock
js
ljmp
dec
fs
push
mov
test
popa
and
dec
pop
sub
aad
lock
xchg
mov
push
and
pop
fwait
jns
or
jle
std
push
adc
clc
mov
and
push
xor
jns
inc
jl
or
sbb
cltd
inc
jl
jmp
sbb
push
fidivrs
lcall
fmul
jmp
mov
sbb
mov
mov
scas
push
je
dec
js
cmpsb
mov
push
jecxz
int
jp
iret
sub
xor
popa
pop
rcl
fstpt
clc
movsb
int3
movsl
cltd
in
inc
cmp
jbe
mov
and
bound
dec
dec
xchg
and
iret
mov
fistps
jnp
and
or
pop
jp
outsb
dec
out
shll
lea
add
sub
xchg
shlb
and
bnd
mov
mov
inc
dec
jns
pop
dec
clc
cmpsb
inc
sbb
scas
aad
das
in
int3
jge
push
pop
push
clc
mov
add
in
push
enter
mov
mov
dec
insl
pusha
push
mov
ret
mov
fisubrl
jge
xchg
adcb
mov
out
test
add
sbb
ljmp
mov
pushf
sar
mov
adc
out
shll
addr16
jle
outsl
push
xchg
sub
mov
int3
sahf
stos
lret
inc
push
ljmp
dec
aam
mov
rcll
inc
push
divl
shlb
cmp
cmp
cmp
or
adc
adc
mov
mov
inc
pop
and
jecxz
or
loop
ja
fimuls
cmpsl
dec
cmp
or
loope
hlt
push
xchg
push
pop
jno
mov
mov
ss
add
pop
enter
dec
popa
ds
dec
cs
pop
addr16
test
out
loop
mov
pop
cmc
fidivs
mov
clc
setb
sub
jge
test
mov
pop
mov
lock
xor
sub
sbb
cmp
lea
mov
adc
inc
stos
mov
ret
mov
fisubrl
clc
xchg
cmpl
sub
loopne
jle
ljmp
sbb
xchg
cmpsl
inc
xor
mov
sub
test
push
pop
pop
out
in
adc
cltd
pop
lahf
push
jae
mov
mov
jl
sahf
lret
mov
xor
rcrb
mulb
or
cmpsl
dec
insb
xchg
fld
out
ja
decl
jno
jnp
lahf
add
mov
inc
rcrl
test
fucomi
mov
fimuls
sbb
aad
mov
pop
push
out
dec
xchg
dec
movsl
je
ret
jl
pop
aad
mov
fldenv
xchg
repz
das
daa
out
sbb
stos
pop
mov
lahf
scas
aas
mov
cmp
adc
jnp
inc
adc
sti
jmp
fwait
xchg
das
xchg
mov
das
lds
rorl
insl
and
cmp
out
add
inc
xchg
dec
lahf
repnz
fiadds
into
test
pop
xchg
adc
cmpsl
cmp
and
inc
or
jb
xchg
fdivrp
sti
mov
out
into
mov
inc
stos
icebp
push
xor
aam
or
fisubrs
mov
test
shrl
imull
imul
xor
outsl
jmp
orb
out
add
jno
iret
lds
inc
add
outsb
stos
sub
or
sbb
and
test
dec
adc
clc
pop
mov
push
pushf
and
cmp
movsl
popf
mov
std
cmp
popf
fidivs
stos
enter
mov
push
xchg
aam
sbb
pop
xor
out
pop
data16
xchg
jo
sbb
mov
or
les
inc
dec
xchg
enter
dec
jmp
inc
fcomi
sete
cmp
rcll
xchg
push
sbb
dec
ss
outsb
push
dec
imul
sbb
daa
add
stos
dec
pop
sbb
dec
dec
mov
mov
subb
add
xor
decb
sbb
cwtl
jne
sarb
in
adc
and
ljmp
sbb
das
lods
addb
je
dec
sub
xor
fldl
data16
hlt
and
sub
lret
or
es
mov
jb,pn
je
adc
fmuls
addr16
outsl
ja
add
add
xchg
xor
add
mov
mov
fidivl
inc
pop
jbe
pusha
xlat
ja
xchg
or
rcrl
adc
mov
jmp
jmp
outsb
xor
mov
aaa
out
mov
mov
and
popf
movsb
mov
add
mov
sti
mov
pmulhuw
leave
fidivrs
jno
mov
push
adc
sbbl
mov
mov
outsl
shlb
mov
aad
xor
jp
jae
dec
xchg
fs
scas
xchg
inc
jb
mov
sub
aas
dec
mov
out
bnd
sub
repz
xchg
fs
cmp
scas
and
mov
xor
mov
mov
fdivr
jmp
in
imul
xchg
out
inc
adc
add
pop
push
xchg
adc
outsl
int
mov
pop
fdivp
mov
iret
insb
cmpsl
inc
jno
cmp
stc
jns
lock
xchg
sbb
rcrb
xor
pusha
and
jbe
mov
mov
rcll
push
push
dec
mov
sub
dec
sbb
jmp
in
popa
xor
ljmp
pop
dec
nop
mov
sbb
sub
rcrb
mov
les
je
lret
pop
stos
add
std
lock
inc
leave
sub
inc
jbe
outsl
inc
pop
jle
roll
jmp
mov
sbb
icebp
fstps
test
pop
divb
jle
dec
fs
mull
inc
lcall
negl
js
push
xor
lahf
add
mov
jmp
pop
js
testb
mov
sbb
ret
sub
mov
and
out
sub
lcall
xchg
addl
popf
mov
sub
daa
inc
mov
outsl
repnz
push
ss
push
outsb
stos
jg
ljmp
pusha
fidivrs
dec
push
fwait
sbb
adc
mov
jae
mov
push
xor
push
testb
push
loopne
popa
mov
addr16
push
shr
cmp
dec
jae
push
hlt
jecxz
jle
movsl
das
rcr
cmc
mov
cwtl
mov
pusha
push
lods
shl
push
adc
lcall
das
ja
or
pop
cmpsb
stos
pop
stos
mov
lock
jmp
leave
mov
sahf
jecxz
and
fcmovnbe
xchg
or
jne
dec
jecxz
push
aas
pushf
adc
aaa
call
stos
add
rorb
or
sbbl
inc
mov
cmp
inc
mov
insl
xor
sti
push
push
sub
stos
fsub
pop
pop
jne
and
xlat
jmp
movsb
aaa
push
or
sarl
adc
mov
cmp
popf
leave
ret
push
add
add
test
repz
orl
pop
or
repnz
mov
mov
or
fidivs
data16
scas
sbb
sub
in
xor
test
fldenv
and
mov
lods
in
xchg
inc
sub
push
addr16
test
mov
xor
push
movsl
loope
ja
mov
xchg
add
and
loopne
xor
mov
ds
mov
jp
add
xchg
fildl
and
into
loopne
mov
dec
jl
add
pop
jecxz
bnd
addr16
jnp
sbb
xor
fcomps
fstp
push
lea
aam
mov
pop
pop
stos
lahf
pop
xchg
test
ret
mov
lea
cmp
in
stos
jg
ret
sbb
lahf
in
data16
mov
iret
mov
add
aaa
sbb
sahf
xchg
jmp
shll
pop
push
inc
lcall
mov
loopne
adc
clc
subl
and
hlt
pop
lods
push
cmc
pop
xchg
ljmp
mov
xor
imul
mov
push
push
xlat
add
dec
push
insb
sbb
das
sub
imul
mov
add
mov
sbbb
cmpsb
sub
fcoml
call
adc
mov
cmp
mov
sub
gs
add
lock
mov
mov
jne
inc
xlat
imul
mov
lods
cmpb
sub
sub
pushf
mov
bound
mov
pop
push
jle
scas
popa
and
addr16
das
faddl
leave
cmp
and
in
jg
cmpsl
xor
push
out
xor
and
cmp
xchg
dec
pop
bound
js
xchg
pop
aaa
push
dec
fcoml
ss
stc
mov
lds
adc
push
sbb
push
negl
pop
or
in
lcall
les
add
arpl
test
dec
cwtl
das
xor
pop
unpckhps
xchg
jge
push
sub
ret
test
mov
cld
jl
xchg
pop
jge
in
decb
leave
popa
jo
xlat
pop
aam
push
sbb
sti
pop
sbb
jg
sub
test
push
fistps
push
pushf
mov
jmp
insl
imul
sbb
inc
jno
in
pop
shrl
pop
dec
lock
xchg
ret
andb
push
scas
data16
sbb
sbb
push
add
jbe
mulb
pop
stos
or
xchg
cmp
or
jmp
aad
mov
arpl
or
or
adc
and
adc
out
mov
rolb
mov
test
out
mov
scas
aam
jne
xchg
adc
xchg
nop
repz
push
nop
out
ljmp
test
fwait
cld
xchg
mov
jnp
enter
cs
fbld
xor
adc
and
in
idivb
leave
jo
loopne
cmp
daa
in
pop
push
pop
lret
dec
cmpsl
ja
rcr
flds
inc
imul
popf
xchg
cmp
insb
mov
aad
das
inc
sbb
pop
sarl
inc
mov
enter
inc
mov
adc
daa
daa
xchg
out
sbbb
push
icebp
hlt
ss
movsb
xchg
cmpsl
rorb
inc
pmulhuw
std
js
frndint
gs
or
inc
mov
jb
outsb
inc
sti
in
fs
lret
fstps
cltd
sub
jne
andb
int
inc
icebp
mov
stos
adc
cmp
jmp
pop
dec
repnz
mov
dec
add
popf
push
cltd
data16
int3
mov
push
data16
aam
enter
add
mov
cmp
push
outsl
jnp
adc
cmp
xchg
popa
aaa
jecxz
mov
ss
add
push
shlb
sbb
jg
test
test
daa
in
xchg
scas
pop
dec
maskmovq
imull
mov
and
inc
xor
dec
mov
fimull
pop
inc
pop
rcrl
xchg
add
cmp
pop
leave
je
sbb
xor
nop
sarl
mov
push
or
repz
dec
loope
mov
mov
or
imul
nop
data16
push
addr16
dec
rcrb
xor
shrl
andl
xor
adc
jle
and
jmp
cs
sub
and
add
fidivl
jno
repz
and
ret
shrd
sbb
pop
mov
push
jb
mov
mov
xor
jl
and
and
sti
jae
mov
sub
enter
adc
loop
shlb
push
add
dec
mov
sub
xchg
in
jmp
jnp
or
mov
push
push
mov
imul
push
mov
loop
pop
xor
pop
es
sub
fidivrl
jns
es
mov
cmp
lock
daa
sbb
sahf
ret
xchg
test
je
mov
es
pop
xchg
inc
leave
push
clc
mov
jns
nop
jae
pop
lds
dec
into
push
jmp
es
dec
ret
mov
dec
cmpl
inc
dec
orl
repnz
lret
xlat
stos
cmp
clc
sbb
cmpsl
nop
cmc
inc
lahf
out
into
fsubs
sub
lret
adc
clc
mov
xchg
lcall
jb
push
cmc
iret
mov
movsb
and
pop
enter
or
and
add
jecxz
js
xchg
cmp
je
stc
jne
push
and
adc
cmp
add
sub
sbb
or
gs
sahf
sub
cmp
shll
cmp
stc
push
leave
popa
scas
pop
xchg
rcl
xor
aas
pop
cmc
daa
mov
and
adc
loope
add
inc
lret
sarl
mov
clc
jle
cmp
fsubp
scas
out
inc
jecxz
cld
cmp
pop
mov
std
int
fldcw
xorb
inc
leave
cmp
inc
mov
or
xchg
mov
pop
inc
cmp
shl
into
mov
mov
adc
cmp
jno
cs
loopne
pop
lret
jbe
fildll
lock
shll
dec
adc
mov
xchg
popa
mov
cmp
insl
in
cmpsl
push
xlat
push
ret
cmc
xor
int
sub
cmc
repz
and
cmp
jge
lods
jl
dec
mov
xchg
xlat
jns
add
aam
jl
inc
dec
pop
lds
lcall
aam
shrb
test
cmp
cmp
inc
leave
push
sarl
mov
cli
pop
ss
shlb
clc
xchg
dec
rcll
inc
popf
pop
movsb
orb
lret
push
cmp
pop
incb
pop
lods
dec
das
or
dec
mov
stc
mov
loopne
insb
jle
out
jecxz
mov
faddl
or
push
sbb
std
nop
int3
cmpsb
lods
jmp
or
and
pop
xor
xchg
push
push
xchg
arpl
fcmovnbe
pop
pop
push
inc
sbb
jo
adc
cltd
pop
int3
imul
xor
das
pop
call
jg
pop
out
adc
shrl
sbb
dec
push
imul
inc
lds
jge
jl
test
add
icebp
testl
cmp
out
add
or
and
sbb
dec
aas
xchg
cltd
subl
push
sbb
mov
in
inc
cmp
aam
movsb
es
les
push
stc
stos
pop
cmp
shlb
mov
test
sbb
je
repz
push
loop
jnp
fdivl
xchg
les
aad
adc
push
in
dec
call
sbb
call
int
sub
dec
xchg
stc
and
into
std
and
mov
sti
xor
je
lods
sbb
push
jno
cltd
call
or
sbb
xlat
and
cmp
jp
imul
fs
fldenv
insb
jne
daa
loopne
and
int
enter
adc
xor
and
repz
pop
xchg
imul
lods
cmp
imul
ja
arpl
sbbl
jp
jno
jno
sbb
lcall
int3
cmpsl
mov
jae
dec
sti
pusha
shlb
scas
mov
out
push
popa
dec
mov
cli
rcr
jnp
lds
in
dec
dec
sarl
lock
jnp
push
adc
insl
jl
imul
cmc
pop
and
lock
add
sar
int
jle
push
mov
pop
test
push
ds
dec
mov
xchg
addl
in
test
movsb
clc
adc
in
test
push
push
push
and
adc
xchg
hlt
scas
addr16
push
xchg
sarl
pop
and
addl
stos
push
pop
out
rorl
in
aaa
lahf
orl
jae
sbb
push
test
jmp
lods
popa
pop
call
push
pop
push
mov
mul
nop
hlt
jb
jne
std
mov
shll
enter
lods
fdivrl
in
lret
enter
ja
fbstp
push
ret
testl
out
shlb
jno
insl
pop
jbe
fwait
jle
fwait
push
sahf
das
out
or
cs
add
push
mov
nop
adc
or
or
jge
or
push
sti
out
pop
les
push
mov
fildl
jo
std
stc
pop
inc
mull
test
out
shrl
xchg
sar
imulb
je
ss
fwait
xor
cmpsb
xlat
out
cmc
popf
icebp
cs
push
rcr
sbb
push
pop
icebp
push
sahf
arpl
popf
lret
nop
jbe
pop
in
or
xor
test
or
dec
mov
add
and
xor
jl
pop
mov
xor
or
cmovge
and
ret
mov
cltd
cmp
pusha
aas
insl
xor
outsl
out
cmp
and
sub
cmp
pop
push
fimuls
pop
mov
or
call
gs
inc
daa
xlat
cs
push
sub
ljmp
add
ret
jo
mov
out
lcall
lahf
hlt
fisttpll
pop
add
insl
in
sahf
sbb
int3
leave
lods
adc
shl
jp
les
out
test
jmp
pop
es
pop
fs
jecxz
lds
dec
mov
adc
inc
test
jnp
mov
xchg
mov
data16
into
orb
mov
and
gs
dec
bound
stc
jmp
shl
arpl
adc
bound
pop
xchg
mov
mov
repnz
cs
mov
jae
sbb
or
jmp
dec
xchg
mov
daa
cld
mov
aaa
movsl
roll
sbb
xlat
or
adc
cmp
out
cmp
mov
int
jb
mov
jmp
addr16
es
jb
inc
mov
into
int3
pop
push
ficoml
cmpsl
lods
dec
dec
mov
aaa
inc
and
and
dec
mov
mov
sub
test
jnp
enter
and
ds
xchg
sbb
sub
or
out
dec
jbe
sub
pushf
mov
in
xchg
scas
out
or
rcll
cmp
inc
movsb
pop
std
sub
push
mov
pop
in
push
test
movl
jecxz
jle
and
mov
int3
cli
jne
add
sbb
fs
push
inc
clc
push
jae
xchg
insb
les
cmp
scas
ret
das
shrl
xorl
repz
fwait
sarb
fistl
stos
out
jmp
lret
enter
mov
inc
repnz
xchg
cmp
loopne
xchg
mov
push
aas
outsb
sub
js
pop
ss
mov
or
daa
icebp
xchg
xchg
insl
gs
loop
imul
cmpsl
xchg
push
jb
in
lods
or
fcom
xchg
push
add
cli
cmpsb
icebp
bound
pop
aad
adc
pop
repz
ss
ret
cmp
std
fldl
out
repnz
andb
pop
inc
xor
add
mov
sub
mov
fbstp
out
lds
dec
add
adc
insl
adc
push
pop
sbb
adcl
popa
dec
movsl
jmp
outsl
hlt
movb
cmp
or
add
stos
cmpsl
std
and
clc
pop
push
pop
in
sub
rcll
scas
mov
in
mov
xorl
fwait
xor
mov
iret
adc
sti
xchg
stos
mov
daa
xchg
sub
sbb
xor
inc
rcr
in
jl
jecxz
push
sub
push
jno
mov
int3
mov
out
mov
mulps
xchg
sub
lret
mov
sbb
fcmovnb
and
sub
xor
or
xor
ja
jge
jmp
test
add
mov
cmpl
je
mov
xor
div
enter
sahf
out
adc
fistpll
sahf
sbb
cmp
xchg
cmp
dec
xchg
mov
xchg
ljmp
nop
or
fidivrl
decl
lods
adcl
cmpsl
push
mov
cmp
ss
lcall
mov
xchg
pop
mov
dec
add
xchg
fcoms
loope
and
into
std
sbb
lcall
mov
xchg
mov
outsb
cwtl
xchg
inc
push
xor
sub
cli
andb
jge
cmp
mov
push
cmp
jno
pusha
push
add
and
daa
pslld
xor
or
xchg
leave
into
ds
inc
bound
xor
mov
cmp
xchg
cmpl
cmp
nop
add
pop
dec
loope
or
lcall
test
xchg
xchg
adc
jmp
push
mov
bound
pop
cmpsl
mov
cmc
popa
data16
mov
jmp
xchg
jmp
test
rcrl
xchg
lea
adc
fisubrs
push
pop
pop
lea
jl
or
jno
shl
cmp
insl
mov
adc
cmp
rcrl
jp
or
aaa
sbb
stos
stos
xor
lods
inc
jnp
pusha
lret
dec
jl
mov
into
pop
andl
loopne
movsl
add
fsubrl
call
hlt
xchg
sbb
popf
mov
mov
mov
sbb
popa
in
sub
jmp
loopne
xchg
inc
xor
inc
xorb
inc
inc
je
inc
jecxz
cmp
pop
int3
jge
mulps
in
mov
mov
cmp
inc
add
out
mov
sti
out
cmp
or
push
mov
jns
jnp
movups
pop
cmp
aaa
mov
lock
push
cwtl
fnsave
in
enter
popf
test
mov
xchg
sub
in
outsl
push
arpl
imul
cltd
cmpl
leave
or
repz
mov
loope
xchg
pop
mov
aam
js
and
mov
lret
push
jl
aaa
inc
mov
repz
popa
mov
ret
dec
jbe
stos
in
imull
das
test
dec
sub
repz
in
in
push
cmp
or
xor
push
inc
aad
and
faddl
xchg
ret
nop
test
insb
xchg
or
mov
dec
or
jns
nop
pop
mov
movsb
adc
andb
dec
mov
in
pop
xlat
jmp
std
in
and
ja
rclb
in
adc
adc
mov
adc
aad
testb
icebp
lret
testb
push
repz
inc
lods
xlat
cld
call
idivb
js
arpl
jb
jnp
fnstenv
aam
clc
insl
ficoml
pop
jg
aad
and
mulb
loopne
stc
cmp
jb
fisubl
xchg
push
fs
cwtl
movsb
mov
test
xor
mov
aam
cltd
push
fnstcw
test
ret
mov
enter
mov
jae
add
aad
inc
pop
inc
push
aaa
pop
fwait
in
push
cmovno
push
lds
je
out
push
loop
je
mov
push
fdivs
in
dec
sti
push
out
insb
jge
int3
sbb
sub
insl
rorb
and
out
mov
sti
test
xlat
ljmp
lcall
inc
lcall
orb
lods
xchg
xor
scas
inc
in
sub
pop
sbb
fwait
adc
mulb
xchg
mov
cmp
orl
push
enter
cld
mov
ficompl
xchg
push
and
popf
jnp
test
in
hlt
repnz
movsb
xchg
fldt
lods
pop
inc
mov
xchg
test
jecxz
cmc
ret
enter
out
into
repz
lock
xchg
pop
jnp
leave
movsb
add
sbb
jge
addr16
inc
pop
pop
out
jl
sub
sub
maxps
xchg
shlb
xor
mull
pop
inc
out
inc
cwtl
pop
int
es
add
inc
std
pop
daa
in
push
pop
cmpsb
mov
jns
adc
fidivl
hlt
add
sub
dec
fcoml
adc
jmp
jg
pop
mov
mov
jmp
sbb
ret
jl
xlat
jne
fwait
addr16
jb,pt
cs
jle
cld
insl
or
shll
add
push
and
je
mov
mov
das
lcall
push
cltd
jmp
mov
ficoml
or
dec
add
aaa
xchg
pop
movsl
addl
test
jle
jbe
and
mov
das
int
adc
xor
idivl
cltd
mov
fwait
sub
incb
imul
sbb
and
lcall
lret
mov
lock
div
lods
cmp
cltd
clc
push
dec
add
jl
or
push
sub
fwait
inc
add
lds
push
iret
dec
xchg
subb
push
mov
lods
sbb
jnp
mov
pop
jae
push
fidivrs
sbb
dec
mov
lret
jne
push
orb
ss
out
aaa
pop
cmpsl
cli
test
add
hlt
mov
ja
xchg
mov
mov
icebp
aam
jno
mov
out
rcll
sarb
xchg
push
sbb
outsb
xchg
lock
imul
es
ret
xor
popf
mov
mov
pop
add
add
pushf
jle
push
stc
mov
js
pop
jno
mov
jp
mov
or
stos
daa
cmc
sub
repnz
shll
cmp
jge
pop
mov
sbb
jnp
push
adc
pop
icebp
lret
enter
les
sbbl
mov
xchg
inc
mov
shr
stos
inc
jge
xchg
add
and
rolb
xchg
push
packssdw
push
xor
add
push
mov
fidivrs
rolb
in
jmp
mov
xchg
js
lcall
push
adc
adc
mull
mov
mov
and
inc
add
sbb
iret
mov
shrb
jns
repz
mov
mov
outsb
mov
add
jnp
xor
push
add
aas
cmp
aad
cmp
xor
adc
iret
mov
xchg
sbb
push
xor
sub
fstps
cwtl
mov
iret
mov
mov
out
xchg
test
push
adc
mov
in
or
pop
xchg
fsubr
cmp
pop
daa
rcll
fstpl
jp
adc
cs
shlb
mov
cld
test
push
and
fisubrl
out
clc
out
and
fsub
sub
les
lahf
mov
push
mov
mov
pop
pop
cmp
xor
fstps
xor
or
dec
mov
and
sub
decb
movsb
inc
or
push
data16
pop
add
popf
jbe
or
sahf
mov
hlt
push
xchg
cmc
shll
jnp
mov
sti
push
stc
vpcomtrueuw
dec
loope
lcall
jae
out
testl
cwtl
xor
test
lea
jmp
lret
sti
lods
pop
adc
mov
insl
rorl
xor
add
sbb
add
shll
mov
mov
inc
adc
adc
sbb
bts
cli
or
mov
pop
jp
aaa
scas
xor
jl
and
mov
imul
pop
addb
stc
inc
xchg
sar
sarb
ret
and
dec
or
ret
test
cmc
fsubs
lret
sub
out
das
adc
lret
bound
push
stos
sbb
inc
stc
pop
lock
cmp
sub
arpl
cmp
adc
sbb
cmp
cmpsl
mov
jns
push
jl
lret
mov
imul
xor
push
lock
mov
mov
push
rcrb
ss
mov
adc
fmulp
call
cmpsl
mov
xlat
push
iret
in
xor
or
xor
and
or
movsl
mov
daa
mov
adc
into
in
cmc
xor
push
call
sbb
fcmovnu
mov
stos
mov
divl
lea
in
adc
jne
test
insb
mov
adc
jno
push
xchg
enter
pop
lahf
in
inc
out
xor
or
daa
dec
jmp
mull
daa
das
rcrl
shl
sub
and
mov
into
lods
scas
and
xchg
jg
xor
sbb
xchg
js
and
mov
and
hlt
test
rorl
add
cwtl
ret
adc
pusha
jl
mov
cli
or
dec
push
adc
sahf
pop
lds
into
je
and
in
ror
sbb
add
cmc
mov
in
jnp
mov
add
pop
lds
xchg
or
pop
mov
mov
ljmp
int
es
ror
movsl
pop
sub
and
test
sti
or
pop
outsl
mov
sbb
pusha
cmp
mull
fisttpl
dec
push
popa
leave
xlat
jecxz
add
rsm
pop
loope
xor
xchg
dec
cs
std
stos
add
ret
xchg
rorb
or
les
sub
xlat
xchg
dec
stos
fimull
in
mov
imul
lea
test
xor
fistpll
lret
or
cmpsl
sbb
call
add
icebp
cmp
inc
inc
xchg
sahf
or
lret
lods
test
fwait
cmpsl
std
test
mov
aas
jae
push
gs
pop
pop
cld
pusha
es
add
icebp
pop
mov
lahf
shlb
pop
mov
lret
fdivrs
add
inc
mov
out
out
std
movsb
sbb
mov
inc
out
fwait
push
fistps
jmp
aas
mov
pop
test
cmpsl
pushf
cli
xlat
xchg
test
movb
push
jno
push
and
pop
lods
jmp
mov
out
xchg
inc
adc
scas
mov
scas
call
pop
lret
cltd
syscall
movsb
jo
out
into
mov
cmp
bound
pop
sbb
imull
add
aaa
or
scas
movsb
jb
or
bound
popf
sub
ja
pushf
cmp
xchg
addr16
cltd
test
mov
int
fildll
pushf
mov
jne
jmp
inc
adcl
stos
jl
xor
xor
leave
mov
bound
cld
sbb
sub
adc
dec
call
sbb
adc
inc
ficomps
push
inc
sub
test
mov
mov
jae
inc
xchg
adcb
in
push
add
daa
int3
addr16
cld
cmpl
xchg
and
in
mov
movsl
xor
jl
push
xor
lret
pcmpgtd
inc
repz
mov
ret
mov
xchg
mov
fmul
add
movsl
jno
sarb
call
xor
xor
in
sub
clc
nop
sahf
lret
insb
push
or
and
icebp
flds
dec
in
push
cmpsl
arpl
push
in
pusha
fstp
push
fs
push
xchg
or
mov
outsb
mov
pop
xlat
mov
test
in
stos
addr16
pop
jmp
movsl
loop
or
popa
outsb
popa
inc
scas
adc
es
cld
sub
push
cmpsb
sub
leave
sar
test
dec
sbb
xor
inc
fucomp
pop
jmp
jns
stos
push
add
adc
jno
lods
add
xchg
pushf
aam
enter
mov
jb
les
cltd
push
jns
pop
arpl
or
pop
or
roll
gs
add
inc
ja
ret
scas
pushf
data16
loope
loop
cmpsl
push
stos
fldenv
pusha
fs
xchg
cwtl
inc
xor
test
repz
rcrb
stos
ret
xor
data16
hlt
pop
mov
push
rcr
idivb
mov
cltd
cmc
ss
mov
ja
out
insb
jge
int
or
arpl
add
repz
lock
push
mov
fisttpll
mov
test
xchg
dec
and
sbb
jl
imul
pop
mov
sub
int
int3
jno
cmpsl
push
adc
jg
mov
sahf
daa
xorl
je
test
mov
lds
dec
shrl
orl
stos
push
sub
es
jmp
mov
pop
push
pushf
xchg
shll
loope
mov
mov
loopne
insb
add
lea
and
icebp
addr16
outsl
int
iret
mov
stos
xchg
imul
dec
sbb
jb
pop
adc
cmpsl
stc
xor
das
in
outsb
adc
in
mov
push
arpl
mov
xchg
pop
cld
xchg
faddl
add
and
in
add
xor
pmaddwd
pop
fs
mov
mov
fdivp
jno
mov
push
dec
sbb
bound
inc
sahf
test
loop
mov
das
or
in
and
lret
mov
or
pop
nop
sbb
inc
call
cltd
mov
insb
repz
mov
rcrl
aaa
pop
or
xchg
test
decl
neg
enter
jmp
mov
test
insl
ja
xlat
insl
add
push
or
sbb
not
fnstcw
mov
test
mov
jge
repz
je
aas
negl
in
push
dec
cmp
nop
sahf
decb
push
in
push
das
out
jmp
out
mov
push
dec
mov
adc
mov
ds
mov
sbb
or
out
addl
and
das
fidivrs
dec
dec
cmpb
loop
cmp
xchg
inc
pop
adc
cmp
aad
sbb
ret
adc
jno
jnp
and
sub
aam
mov
xlat
je
push
or
gs
aad
sub
dec
rclb
sahf
xor
inc
cwtl
mov
out
mov
rcrb
pop
or
cmp
push
or
push
mov
lret
inc
subl
mov
adc
push
add
pop
lock
nop
cmp
pop
nop
jnp
push
jp
int3
jmp
lahf
mov
int3
sbb
aam
push
lret
ljmp
nop
adc
das
lret
jbe
in
jae
mov
push
mov
or
aam
leave
cwtl
test
aaa
xchg
test
inc
inc
jne
int3
xor
xor
push
jb
sub
in
cmp
leave
stos
loopne
jno
inc
push
fwait
loope
imul
or
mov
adc
mov
pop
sbb
ljmp
movsb
lahf
add
xchg
inc
xlat
adc
shrb
mov
lock
cs
fs
sbb
or
mov
push
lea
inc
int
repnz
aaa
cs
loope
icebp
or
and
jbe
mov
arpl
lahf
push
fcoml
inc
or
inc
inc
jae
jp
shrl
pop
sub
aaa
xchg
ret
aad
clc
jnp
inc
adc
push
and
or
movsl
xor
mov
dec
push
inc
mov
and
dec
jo
cmpsb
pusha
loop
push
add
mov
pop
inc
cmp
pop
inc
or
mov
push
sub
xchg
nop
xor
mov
mov
or
push
or
outsb
lret
jge
aad
scas
push
pop
sbb
aas
dec
pop
outsb
jge
mov
fdivs
sar
and
pop
iret
mov
push
cmc
leave
xor
push
xor
rcr
inc
inc
mov
adc
rcll
and
andb
int3
jbe
loopne
mov
pop
and
jo
sub
pop
xchg
arpl
loop
sbb
or
in
fcompl
pop
adc
in
adc
jns
in
mov
test
lock
pop
mov
iret
test
movsb
mov
inc
inc
xchg
jle
and
xchg
xchg
add
outsb
xor
lds
pop
xchg
xor
cmpsb
add
popf
scas
aam
out
push
movsl
adc
xchg
inc
add
lea
sahf
iret
stos
xlat
scas
jne
xchg
xor
cmp
xor
pop
clc
mov
cli
subl
cmpsb
cmc
mov
mov
cmp
xchg
test
push
out
mov
bound
psrlw
flds
fcomp
xchg
lds
jo
fcmovb
mov
cwtl
mov
sbb
int3
popf
pop
lret
xor
mov
insl
xchg
stos
adc
mov
dec
cli
lods
cltd
es
xor
fcomps
xchg
sahf
and
dec
pop
xor
mov
lea
aas
aam
mov
cmc
cltd
and
xlat
add
loope
mov
mov
fs
fistps
pop
adc
mov
adcb
jp
adcb
repnz
sbb
push
pop
xor
cmp
sbb
inc
mov
mov
cmc
aam
shr
push
lret
in
int
lret
dec
rclb
inc
sahf
jecxz
adc
scas
pop
test
aaa
inc
mov
inc
add
cmc
xlat
adc
mov
pusha
jo
sarb
inc
cmpsl
in
jg
hlt
adcl
addr16
push
mov
pop
popf
hlt
mov
out
jmp
jno
cmp
and
rcr
mov
mov
out
lcall
mov
and
sub
xor
cmp
xor
inc
movsl
jge
repz
dec
popf
hlt
clc
jge
lea
lock
push
js
clc
or
and
dec
push
mov
push
adc
push
in
pop
xor
mov
pop
or
ljmp
cwtl
aad
sub
fsubrs
lock
in
ret
pop
popf
fsts
rorb
mov
fdivr
cmpsl
sti
and
xor
push
bound
sbb
mov
mov
fwait
ss
jg
popa
dec
inc
jne
lods
lcall
sbb
and
int
in
push
and
push
and
and
mov
orb
out
dec
adcl
pop
mov
cs
push
xchg
bsf
in
int3
and
int
push
inc
das
mov
and
pushf
enter
insb
mov
mov
out
jno
cmp
stos
pushf
ds
fsubr
out
pop
jo
fstl
mov
sub
lret
outsl
outsb
pop
fidivrs
aad
xor
fdiv
out
int3
popa
call
mov
dec
inc
pop
scas
jo
icebp
pop
cmp
sbb
popf
sar
push
push
push
scas
lods
addr16
cmpsl
or
mov
push
or
sub
adc
xor
ss
pop
test
sbb
and
push
mov
pop
daa
out
test
insb
and
or
outsl
fmul
mov
divl
pop
out
por
mov
mov
push
out
call
mov
or
outsl
test
sbb
xlat
or
cmp
fmuls
cltd
mov
nop
sahf
lds
push
mov
jmp
cmc
cs
dec
adc
mov
xchg
pop
xor
out
cs
fcoml
gs
int3
in
incb
mov
or
and
inc
push
push
mov
jns
or
add
mov
stc
jo
sub
rcrl
or
and
es
into
xchg
pop
push
loopne
out
repnz
stos
mov
test
xor
adc
out
inc
dec
test
insb
mov
mov
sbb
loope
call
mov
nop
inc
insl
mov
sbb
shlb
ss
std
or
dec
stos
lcall
aad
pop
sub
and
adc
ret
add
fsubl
gs
imul
cli
sub
rcrb
aam
xor
ficomps
aam
xchg
sub
test
fcmovb
int3
cwtl
xor
cmp
jne
xchg
fldcw
mov
int
rcrb
cmp
fisubs
adcl
icebp
xchg
or
sti
jns
fsubr
dec
sti
mov
jnp
gs
xchg
jle
jp
push
mov
cmpsb
pushf
adc
ja
add
call
lahf
rorb
and
leave
les
jmp
aas
adc
es
cltd
aam
push
fidivrs
test
push
push
push
lcall
mov
out
mov
xor
mov
clc
clc
das
aaa
mov
cmp
mov
inc
or
stos
xor
and
jg
shlb
push
and
lock
aad
dec
xchg
jl
lahf
inc
aam
cli
lock
popa
xor
pop
leave
add
jne
in
out
xor
sarb
mov
add
scas
mov
enter
mov
testl
dec
and
sub
cmp
inc
inc
jne
jmp
mov
jp
sbb
mov
icebp
repnz
inc
testb
push
movsl
jmp
dec
jbe
lahf
or
mov
mov
mov
pop
notl
lcall
test
xor
ljmp
mov
jl
insl
mov
ficomps
test
les
mov
mov
shll
xchg
in
ja
add
adc
jmp
lahf
push
sahf
jnp
pusha
sbb
adc
in
pop
sahf
jns
pushf
aas
dec
inc
push
ret
push
fisubs
int3
cmpb
sti
pop
cmp
inc
push
sub
mov
or
outsb
sub
in
mov
adc
cmpsb
movb
add
xchg
je
aaa
rorl
outsb
adc
fstpt
or
ds
or
or
in
cmp
xor
out
in
in
sub
stc
lcall
push
adc
mov
pop
popf
mov
push
or
mov
pushf
pop
dec
pop
lret
xchg
push
and
fcoms
jmp
imul
pop
lea
fldcw
cmp
cli
ja
movsl
mov
ficoml
cmp
cmc
into
in
mov
mov
loopne
lds
lahf
mov
push
and
add
add
cmp
loope
and
idivb
or
out
pop
cmpsl
lods
cmp
rcll
stc
and
push
sub
pop
mov
and
lcall
aad
xor
gs
sub
sbb
test
das
adc
cmp
dec
movsl
test
test
xor
lea
sbb
pop
jns
pop
adc
sub
insl
pusha
ja
mov
inc
sub
mov
cmp
xchg
jge
test
xor
xor
add
icebp
xchg
insb
sbb
and
add
mov
test
sub
pop
ja
xlat
jmp
lds
rsm
push
in
rcrb
mov
jne
shr
or
shrb
cltd
icebp
fisubrl
or
or
in
jg
stos
outsb
cmpsl
mov
pop
push
mov
mov
das
shlb
lds
xchg
out
sbb
daa
loope
stos
mov
shlb
pushf
dec
jo
sahf
mov
xlat
jne
imul
mov
push
push
js
test
fsubl
test
and
xor
and
jecxz
call
push
cmp
sarl
cmc
xchg
jae
stc
xchg
into
xchg
sahf
data16
mov
pusha
aaa
pop
push
mov
pop
shll
sub
or
or
mov
pop
pop
insb
inc
das
stos
aas
xchg
push
addr16
push
inc
or
fmull
inc
push
xlat
jae
popf
movsl
mov
jno
lret
cs
in
sahf
out
or
and
and
iret
shl
cmp
hlt
or
lods
aam
jg
xchg
test
lret
jbe
cmpsl
xlat
movsb
test
rcrl
cmc
lods
or
sbb
test
and
nop
mov
sbb
pop
cmpsl
arpl
jmp
push
pop
das
dec
xor
add
sbb
add
sbb
and
imul
cwtl
dec
hlt
xor
and
push
jbe
enter
imul
bound
js
in
or
repnz
xlat
lcall
dec
jns
jmp
loop
add
mov
cwtl
jae
push
fistps
mov
mov
inc
cmpsb
or
scas
push
dec
insl
pop
dec
daa
nop
shr
ficomps
xor
sub
repz
int3
movsl
and
sub
repnz
lock
xchg
push
and
and
out
jo
sbb
stc
inc
mov
mov
std
cmp
xchg
popf
mov
test
add
stos
ret
mov
repz
or
and
xchg
inc
lahf
test
pop
add
std
ljmp
insb
cltd
or
fs
out
mov
mov
dec
sbb
sbb
popa
stos
adc
xor
into
mov
nop
lcall
push
add
ja
and
dec
push
imul
fimuls
std
out
out
cltd
jge
test
jae
and
xchg
sahf
or
or
mov
mov
push
push
jecxz
jnp
scas
xchg
das
jbe
iret
fwait
jo
lret
sub
xor
or
pop
dec
sti
rorb
or
mov
addr16
xchg
in
sbb
test
pop
inc
add
jmp
std
xchg
es
sbb
js
pop
push
out
mov
pop
aad
jno
mov
add
ja
lock
inc
and
imulb
mov
dec
mov
mov
test
mov
testb
push
lds
movsb
lock
aaa
add
or
ret
lea
mov
dec
cwtl
sbb
cwtl
mov
inc
push
add
subb
sbb
sbb
mov
mov
movsb
js
push
mov
xchg
xchg
sbb
push
fs
mov
lods
loope
or
sub
cmp
mov
jle
rcl
or
xchg
insl
xor
bound
mov
add
loope
xchg
or
adc
mov
rcll
mov
sbb
repz
lret
xchg
rcr
push
bound
xchg
xor
xor
ja
subb
pop
pop
and
pop
inc
and
dec
imulb
cld
mov
vpshufhw
movb
add
mov
int
push
loopne
push
pop
callw
aam
out
popl
pop
cmp
sbb
jmp
lds
push
inc
mov
mov
lea
add
or
les
add
jl
mov
cmp
lret
stc
pushf
ret
pop
popa
fists
pop
pop
cmp
xor
scas
inc
xchg
and
pop
add
jp
sbbb
pop
jecxz
nop
fsts
pop
cmpsb
hlt
lahf
xchg
pushf
mov
mov
dec
sbb
inc
movsl
inc
ret
inc
push
or
mov
add
sbb
cmp
mov
aad
adc
lahf
sbbl
or
dec
rcrb
insl
lahf
addr16
test
mov
or
clc
sbb
add
dec
mov
xchg
sub
mov
fistpll
xchg
adc
push
adc
xchg
insl
mov
fwait
sub
pop
adc
mov
xor
test
and
cmp
xchg
fnstcw
ficoms
and
jge
and
lea
xchg
push
repnz
outsb
xchg
shlb
mov
or
and
jge
sub
pop
sbb
cmp
shl
mov
dec
or
pop
fistl
in
lcall
or
insl
sub
add
ljmp
pop
ret
repz
jle
jl
xor
jo
add
out
lds
cmp
mov
daa
ret
mov
test
cmpsb
adc
stos
jle
xor
sarl
and
repnz
xorl
out
and
xchg
xor
adcl
inc
das
aaa
pop
dec
std
mov
dec
and
mov
push
mov
push
scas
lahf
inc
or
imul
loopne
cmp
mov
and
shl
int3
adc
repz
lds
mov
and
xor
popf
in
pop
pop
or
sbb
in
sahf
cmp
jnp
xchg
sub
xlat
inc
addr16
and
jns
or
mov
inc
stc
mov
xorl
cmp
or
jnp
xchg
sub
adc
jp
pop
jmp
xchg
arpl
mov
dec
shr
iret
lods
jge
sarl
fs
xchg
lret
loope
inc
popf
in
and
inc
adc
gs
lock
imul
adc
fsubrs
mov
popf
xor
xchg
daa
inc
mov
jmp
add
jne
push
int
jae
jecxz
stos
xor
mov
jns
mov
sbb
daa
flds
push
sbb
xchg
out
and
subl
lahf
xor
jg
cmp
cmp
dec
dec
ret
add
push
adc
pushf
mov
mov
sub
shrb
cmp
lret
sbb
xchg
call
js
dec
fistpl
jecxz
aaa
mov
inc
cmp
push
lret
mov
xchg
cmpsl
lods
data16
dec
test
xlat
notb
inc
add
push
adc
xor
je
pushf
loop
or
stc
cwtl
imul
movsl
les
mov
cs
std
adc
mov
inc
push
test
je,pt
pop
lods
jg
in
sbb
rcll
mov
cmpps
cmc
and
divl
ss
mov
inc
bound
ret
jle
outsb
and
jns
pop
scas
daa
out
sbb
shrl
or
xor
mov
mov
sub
jns
aam
mov
sbb
sub
fistl
nop
addr16
psubusw
adc
stc
les
lea
rcrb
ljmp
shrb
push
and
pop
cmp
cmpsb
push
scas
loope
shll
shll
or
push
and
sub
xor
aas
push
pop
push
inc
and
dec
out
mov
xchg
mov
mov
dec
sbb
ret
fidivs
rorl
cmp
xchg
cmp
or
and
mov
cmpsb
push
das
repz
mov
fs
sbb
and
xchg
enter
sub
fidivs
stc
adc
cmc
pop
mov
push
outsl
adc
scas
add
repz
cmpsl
dec
cmp
leave
es
insl
xor
je
lods
mov
xor
scas
mov
xor
test
xchg
adc
in
inc
sub
popl
insl
addr16
add
test
or
mov
dec
dec
adc
out
lds
jb
into
enter
mov
pusha
xchg
push
xor
add
mov
mov
and
xchg
push
push
add
adc
add
aad
or
cmpsb
sbb
loopne
or
lds
mov
or
push
int3
pushf
mov
ljmp
stos
push
mull
xchg
mov
popa
ss
cmpsl
jmp
mov
push
cmp
cmp
aaa
jle
cmp
scas
imul
lcall
pop
sar
loop
insb
scas
jecxz
cli
pop
push
mov
lods
mov
nop
inc
mov
lods
xor
pop
add
aad
inc
mov
imul
test
insl
sbb
sbb
stos
rorl
or
out
push
loop
rcll
xor
pop
stc
shrb
inc
xor
pop
mov
or
jb
cmp
dec
xor
fildll
pushf
mov
fwait
sbb
xchg
xchg
outsb
sbb
adc
jecxz
xor
fwait
pop
jne
push
mov
outsb
lahf
inc
push
out
sub
adc
rorb
sub
push
sbb
inc
into
dec
arpl
rol
sbb
repz
cmp
pop
es
pop
pop
mov
xchg
jae
lahf
sub
fsubs
xor
loop
push
mov
ret
jp
sbb
dec
add
xchg
mov
pop
add
mov
sub
push
lret
fwait
mov
fdivl
or
adc
xchg
fchs
jg
mov
mov
mov
fbld
das
bound
push
adc
fcmovnu
pop
pop
sbb
out
aas
nop
das
imul
push
mov
mov
int
into
dec
fdivs
dec
add
outsl
inc
mov
pop
jnp
jg
mov
mov
popf
add
pop
dec
mov
out
jge
icebp
jle
popf
lret
stc
ss
inc
sbb
push
out
and
mov
dec
or
movsl
add
sbb
ds
aaa
addl
ja
out
adc
xchg
jns
lods
sbb
imul
xor
mov
add
add
ffreep
push
xchg
in
add
rorb
inc
and
in
inc
and
cmc
and
cs
into
sbb
cmp
xor
stos
xor
or
cli
daa
rcrl
xor
clc
popa
cwtl
mov
stos
add
sbb
inc
xor
stos
mov
ret
pop
mov
enter
mov
pop
mov
mov
xchg
mov
fs
sub
popa
faddl
cmp
cmpsl
inc
leave
fptan
fdivl
leave
jge
jecxz
punpckldq
add
popf
jecxz
jle
cltd
icebp
lods
xchg
sbb
lret
mov
in
add
and
jae
xchg
enter
stos
push
inc
stos
lret
pop
fisttpl
mov
cmp
add
lcall
imull
xchg
xlat
shll
stc
and
xchg
adc
stc
or
adc
push
popf
cmpsb
in
dec
jmp
and
dec
adc
xchg
insl
sti
bound
jo
adc
fstl
lods
sahf
outsl
jnp
sbb
xchg
dec
cld
add
je
je
mov
and
sub
mov
cltd
sub
jg
jae
sub
outsb
and
pusha
sbb
rcll
jecxz
cli
fidivl
leave
dec
cli
ja
jne
sbb
cmp
jg
std
xor
out
in
and
sbb
jmp
mov
inc
shll
mov
sbb
lcall
int
mov
and
mov
clc
stos
push
mov
out
negb
mov
mov
xchg
dec
adc
cltd
stos
cmp
mov
insl
ret
inc
jl
ret
pop
sub
push
cmp
imul
call
rcl
and
mov
fsts
lods
movsb
int
add
jmp
test
fsubrl
push
jmp
mov
cmp
fsubr
inc
pop
loope
gs
test
sbb
cltd
lahf
ljmp
inc
xor
dec
inc
mov
mov
jb
push
imul
and
sbb
jecxz
out
pop
and
jbe
or
lret
lods
cmp
mov
jmp
je
icebp
cmpsl
negb
jbe
cmpsb
imul
enter
mov
add
sub
push
adc
pop
pop
pop
jno
jmp
sbb
push
sbb
dec
add
int
scas
mov
inc
lret
arpl
xorl
loopne
js
movsb
mov
and
push
xchg
mov
out
call
les
ss
roll
lret
jns
outsl
orl
das
cwtl
call
bnd
dec
cmp
fidivs
push
or
mov
sbb
push
cmp
out
negl
jp
sub
jg
push
inc
negl
aaa
sub
loopne
push
decb
bound
lahf
mov
ret
pop
les
sub
push
das
aas
rorb
jae
out
mov
xchg
int3
je
shll
mov
mov
popl
xor
clc
aaa
call
xorl
mov
aam
inc
shl
jp
push
sbb
xchg
xor
pop
jo
mov
and
out
sub
cmc
sub
ret
inc
dec
inc
inc
cmp
add
daa
xchg
cmp
sbb
push
jnp
push
xorl
sti
pop
jmp
mov
int
xlat
sbb
pop
push
jne
cmp
shll
sbbb
test
cmpsb
and
pusha
or
adc
xor
mov
adc
rolb
xchg
xchg
les
popf
inc
aas
test
mov
movsb
or
mov
and
sub
xchg
fadds
popf
rclb
mov
dec
xchg
add
loopne
ss
mov
jbe
add
std
pop
cmpsl
pushf
sbb
sub
add
xchg
xor
stos
rcl
inc
je
xlat
adc
xor
and
in
aaa
cmp
and
sbb
mov
stos
mull
ds
pop
test
jne
jo
arpl
stc
adc
scas
pushf
mov
xchg
stc
jmp
shlb
mov
popa
shrl
pop
mov
inc
push
pusha
iret
dec
out
outsb
pop
adc
jns
mov
rcrb
imul
pop
jmp
in
jae
xchg
inc
adcb
cmp
xchg
out
je
or
fcmovb
xorl
sti
popf
lods
adc
shrb
cmpsl
add
inc
aad
dec
inc
js
and
add
inc
sahf
rorl
jb
add
incl
outsb
nop
mov
scas
fadds
bound
xchg
mov
popf
cmpsl
push
fdivl
insl
ret
push
adc
xor
push
cmp
mov
or
push
mov
cltd
jne
sbb
adc
mov
push
mov
mov
arpl
add
xchg
mov
ficompl
lock
movsb
or
and
mov
sub
pop
ror
xor
sbb
ret
add
and
imul
outsb
and
push
addb
loope
daa
pushf
outsb
ret
loop
fadd
rclb
mov
jbe
xchg
add
dec
xchg
out
cmp
dec
inc
inc
jno
pop
outsl
xor
call
clc
rcrl
fcmovne
lcall
mov
cmp
jnp
adc
sub
xchg
cmpsl
xchg
bound
or
jbe
push
fnsave
add
dec
sbb
fidivrl
mov
sub
insl
adcb
dec
jg
bound
cmpsl
pop
outsb
adc
add
and
inc
stc
push
cli
add
pop
adc
mull
add
push
sub
orl
mov
xchg
daa
or
aaa
imul
push
data16
sbb
push
subl
or
popf
pop
ljmp
jl
lods
jge
cwtl
push
jne
out
rcll
mov
idiv
add
jo
stos
mov
xchg
call
arpl
test
imul
popa
xchg
pop
mov
stos
pop
mov
aad
push
imul
add
repnz
fnstsw
mov
push
mov
addl
dec
call
add
test
mov
mov
jo
add
inc
scas
outsb
sbb
adc
fwait
pop
cmp
outsl
cmp
clc
dec
mov
sbb
mov
jge
ja
push
xor
or
loopne
sbb
in
popa
js
push
and
push
xchg
ds
pop
loopne
loope
movsl
pop
pop
jge
mov
pusha
pop
push
push
pop
mov
or
testl
and
rorl
hlt
push
test
sarb
lret
or
mov
jo
int3
sub
and
mov
js
scas
dec
mov
or
mov
aad
jnp
rcrb
adc
fwait
push
cmp
sahf
insb
stos
test
pop
daa
cli
sub
fisttpll
jmp
lahf
in
outsl
xor
mov
test
push
out
adc
fcoml
xchg
and
jge
data16
adc
cmp
and
mov
jmp
sbbb
fneni(8087
outsl
lret
adc
xchg
stc
lds
insb
sub
lret
sbb
pop
xchg
scas
cmp
xchg
fsubrp
sub
mov
cmp
pop
testb
mov
frstor
mov
sub
adc
xchg
inc
jecxz
push
mov
mov
mov
xchg
mov
jge
pop
gs
add
push
mov
and
cmp
pop
aas
jge
xor
outsb
jne
repz
fs
dec
and
sbb
in
loop
or
das
cwtl
add
inc
mov
add
dec
cmc
push
lret
cmp
cmpsl
movsb
pop
pop
aam
xchg
lret
cltd
push
cmpl
adc
sarl
adc
insl
flds
cmc
fcomps
hlt
sarb
mov
push
cmp
dec
and
sahf
add
iret
mov
jmp
int3
xchg
and
pop
loop
sbb
cwtl
sub
arpl
add
stos
out
aad
mov
loop
icebp
js
popa
fmull
fimull
jbe
cmpsb
nop
movsb
fcmovnbe
je
jne
cmp
cmp
test
mov
adc
mov
mov
das
push
stc
add
mov
sti
aam
imul
not
daa
xor
jno
adc
outsl
cmp
scas
mov
pop
popa
and
movsl
lret
out
or
mov
gs
aas
out
lahf
add
ret
jne
cmpsb
push
xor
sub
sub
loopne
inc
push
js
jge
cmp
stos
test
and
into
iret
inc
jecxz
sarl
or
mov
pop
xor
xor
insb
sbb
clc
fmulp
xor
mov
push
dec
dec
insl
js
loopne
inc
lret
jmp
pop
xchg
jnp
inc
mov
call
mov
ret
mov
cld
out
push
arpl
daa
ds
or
mov
ret
clc
cmp
dec
stos
aas
movsl
out
xchg
loope
dec
push
aad
xchg
cltd
and
sub
adc
jno
test
sub
add
pop
data16
pop
pop
imul
daa
jbe
add
pop
mov
popa
mov
lret
xchg
inc
fdivrp
jg
addr16
hlt
cwtl
nop
jg
jmp
movsl
dec
in
and
mov
add
sbb
cmp
cmpsl
data16
add
dec
les
inc
push
pop
pushf
addb
fnstsw
inc
mov
add
sbb
add
push
lahf
mov
lret
sub
cwtl
enter
popa
int3
mov
cmp
sbb
jns
xlat
push
and
push
pop
push
data16
ret
push
ja
jbe
dec
or
out
pop
mov
xor
or
and
dec
mov
and
std
push
and
mov
sti
adc
iret
push
jae
fmul
stc
push
inc
jge
movsb
mov
add
add
jb
mov
inc
mov
out
lret
add
push
scas
call
or
lret
mov
divl
and
adc
xchg
inc
test
mov
imul
les
adc
outsb
xchg
push
cmpsl
icebp
dec
call
push
jle
loope
jmp
testl
loop
cmp
outsl
dec
mov
sbb
mov
mov
jge
mov
sbb
xchg
icebp
adc
leave
dec
mov
out
int
aam
cmpsb
adc
xor
daa
in
or
sub
lret
push
cmc
cmp
sub
call
ss
push
jbe
push
shl
jbe
int
add
int3
mov
mov
bound
arpl
les
out
test
mov
testl
fimuls
movsb
in
cmc
stos
jge
cmp
in
cs
ss
pop
mov
jmp
mov
sub
jecxz
and
popf
mov
jno
cmp
out
sbb
jl
sub
cmc
mov
and
sti
sbb
in
mov
mov
fsubl
arpl
outsb
nop
push
jo
je
or
sbb
mov
mov
add
aaa
mov
xchg
jb
push
push
inc
xchg
fdivr
inc
insb
repz
addr16
inc
pop
dec
cmpsb
adc
cmpsl
cmpsb
jp
scas
push
popa
shlb
add
xor
insl
cli
jns
ds
nop
add
xor
cmp
adc
inc
ret
xchg
shl
adc
or
mov
aad
loopne
sahf
int
aam
jl
lahf
jno
scas
cld
stos
xor
daa
jle
gs
jl
or
incb
fwait
and
dec
clc
push
adc
into
cmp
imul
cmp
pop
inc
orb
ret
gs
ret
xchg
test
mov
nop
and
popa
sbb
test
fs
adc
jbe
adc
pop
cs
lds
fldt
push
jnp
ja
push
or
lahf
mov
dec
jle
icebp
lcall
aaa
mov
xor
fsubrs
mov
jb
push
mov
jle
mov
mov
subb
dec
fnstsw
cmp
pop
xlat
push
stc
jl
pop
fistpl
adc
xlat
add
push
jb
pop
mov
mov
xor
cmp
dec
jmp
loop
dec
ss
mov
mov
cmp
rolb
xor
adc
arpl
adc
scas
fidivrl
loope
fimull
cs
push
inc
int
jmp
repz
repnz
movsl
ret
rcrl
lock
aaa
push
aad
and
pop
adc
inc
pusha
push
repz
mov
pop
xchg
sbb
notl
or
xchg
mov
pop
mov
iret
push
cmpsb
mov
jg
aaa
pop
push
xor
or
std
xchg
aaa
jmp
dec
out
xchg
nop
jmp
hlt
mov
shlb
lcall
cmp
xchg
lret
insl
cli
lahf
push
sbb
mov
je
je
adc
ja
or
sub
cld
stos
gs
or
sti
mov
out
lock
adc
inc
mov
fwait
aad
xchg
add
sub
mov
sub
testl
xchg
adc
and
push
push
lea
push
push
shrl
outsl
dec
sbb
add
aaa
dec
pop
lods
pop
or
addr16
mov
loopne
mov
inc
push
cld
adc
fwait
loop
ljmp
imul
push
imul
cmp
add
loop
jne
stos
cwtl
inc
popa
inc
roll
xchg
negl
mov
cmc
and
fldl
lods
xchg
mov
mov
pop
adc
add
mov
mov
jbe
inc
idivl
mov
fs
mov
xchg
pop
mov
fwait
push
andl
and
xchg
mov
adc
gs
mov
mov
inc
mov
push
pop
or
out
vphaddudq
sbb
lods
je
cmp
sub
out
arpl
les
mov
lret
xor
jmp
xchg
push
cld
fisttps
fsubrl
fmul
mov
es
mov
dec
bound
popf
xchg
lock
mov
lds
push
lods
ret
scas
push
dec
cltd
xor
ret
xor
sub
sti
inc
andl
xchg
insb
inc
jns
inc
sub
inc
xchg
mov
ja
call
lahf
jno
mov
stos
sub
cmc
cmp
mov
das
dec
xchg
mov
mov
xchg
int
and
lret
daa
shrb
aad
out
loope
add
outsb
lods
push
sbb
dec
testb
lock
scas
xchg
jle
bound
mov
inc
inc
add
mov
push
sbb
push
lcall
or
mov
pop
mov
push
loopne
inc
fisubs
pop
int
ret
das
imul
loop
mov
push
pop
jl
push
inc
call
jl
stos
loope
outsb
adc
fld
out
mov
shll
ror
insl
stos
mov
inc
dec
and
fdivs
shl
lds
jmp
pop
or
mov
mov
push
dec
add
ficompl
or
jbe
stos
xchg
jae
push
cmp
insl
int3
cmc
jae
lea
mov
fidivrl
iret
mov
clc
or
scas
in
lock
xchg
das
jne
adc
movsl
aad
aaa
adc
enter
loope
je
ss
popf
lds
test
mull
sub
aaa
push
dec
pop
mov
sbb
lods
mov
popa
clc
mov
pop
lret
jge
ficomps
sub
movsb
lock
pop
lret
das
jl
lcall
mov
mul
das
dec
iret
mov
sarb
jno
inc
pop
sbb
or
insl
push
and
mov
dec
xchg
into
clc
dec
inc
fadd
jecxz
xchg
arpl
push
repnz
stc
mov
mov
aad
mov
mov
mov
and
sub
dec
mov
loope
mov
shlb
xor
sbb
fldenv
insl
flds
scas
std
adc
pop
ds
and
lea
mov
xchg
cwtl
fstl
pop
out
stos
pop
jmp
adc
es
mov
jmp
xchg
xchg
pop
cmp
cltd
call
add
pop
sub
pop
ret
pusha
xchg
mulb
int
lcall
cld
or
cmc
insl
mov
shr
xor
in
push
jge
cli
xor
cmp
data16
cmp
loopne
adc
push
jo
movsl
les
out
xchg
sbb
arpl
adc
adc
xchg
stos
adc
sarl
jo
sub
mov
cs
jne
add
dec
sbb
push
mov
fnstsw
bnd
mov
sub
or
out
rcr
aas
add
adc
in
push
or
pushf
mov
adc
loope
fadds
in
adc
sub
mov
lods
fistl
lods
aam
xchg
push
ret
mov
add
testb
lret
pop
fdivrl
dec
jb
icebp
call
nop
mov
inc
fiaddl
mov
mov
outsb
pop
add
mov
loope
dec
cmpsl
add
mov
or
and
gs
mov
mov
mov
ret
cmp
jmp
add
in
sbb
outsb
aad
jae
add
into
dec
std
pushf
inc
les
and
add
fwait
in
testb
popf
lret
and
mov
and
pop
xor
mov
imul
cwtl
adc
and
std
or
pop
insb
stc
mov
mov
jmp
and
jecxz
fwait
jge
xor
fimull
or
addr16
loopne
outsl
ret
xchg
enter
les
sub
sti
xor
repnz
or
icebp
cld
ds
out
inc
cld
xor
jle
mov
sbb
data16
out
adc
in
into
mov
jmp
dec
xor
mov
jg
dec
insl
mov
mov
push
or
test
and
pop
inc
sub
xchg
and
cmpsl
mov
pop
int3
call
das
pop
adc
mov
jg
ret
insb
push
mov
xchg
mov
int
dec
popf
stos
jp
sbb
xchg
mov
mov
cmp
push
movsl
stos
lcall
mov
mov
sub
pusha
mov
sub
pop
and
out
inc
lahf
sbb
cltd
sbb
pop
and
std
scas
mov
add
mov
xor
add
cmp
out
mov
std
cmp
pushf
inc
pop
push
dec
popl
les
inc
out
jmp
cmp
add
addl
in
popa
dec
push
repz
aad
push
xor
xor
lods
xor
and
push
push
in
adc
ja
jns
mov
adc
sbbb
push
adc
imul
nop
jae
loope
cmp
mov
aam
push
scas
decl
adc
mov
clc
pop
sbb
mov
push
xlat
mov
js
and
xchg
xchg
or
sbb
test
repnz
shl
inc
icebp
ds
and
or
mov
in
repz
adc
adc
xor
sub
lods
or
pop
shr
sti
fstpl
stos
xchg
out
out
outsb
jmp
data16
mov
add
or
test
inc
push
push
xor
repnz
pop
mov
aam
and
pop
jg
stc
cltd
push
cld
sbb
insb
adc
pop
mov
jae
popf
sub
xor
sbb
shl
mov
orl
or
loopne
scas
and
leave
jge
pushf
mov
push
mov
ja
int3
jo
shl
into
sahf
daa
aad
cltd
pop
sbb
mov
sbb
push
in
test
dec
and
adcb
daa
movsb
jp
imul
sarb
add
or
sahf
popf
or
imul
jne
push
dec
data16
std
fwait
xchg
std
subb
outsl
or
ret
or
repnz
into
pop
movsl
lea
sti
loop
dec
mov
pop
das
xchg
sub
inc
mov
std
mov
aam
mov
outsl
mov
jecxz
mov
xchg
pop
cltd
sbb
clc
lret
pop
add
xor
sub
fistl
out
scas
push
cmp
mov
pop
push
dec
fidivrl
mov
sub
rcrl
dec
push
xchg
nop
adc
jmp
push
xchg
or
in
mov
push
test
rol
add
xor
inc
or
or
outsb
xor
add
mov
sbb
insb
push
push
mov
call
testb
cmp
rol
xor
into
add
pop
leave
pop
and
daa
push
add
inc
movsl
loope
mov
xchg
jecxz
cmpsb
iret
insl
push
in
xor
pop
xchg
add
negb
test
cmp
mov
sar
loopne
ljmp
daa
push
add
mov
inc
outsb
cmp
mov
int3
out
sbb
fisttpll
shlb
mov
and
movsl
clc
mov
xchg
lret
idivb
pushf
sbb
ja
iret
pop
in
aas
imul
dec
andb
out
inc
fistl
adc
out
mov
fisubl
movsl
ds
sub
dec
push
jecxz
mov
push
add
outsb
inc
je
call
inc
mov
add
jg
aaa
mov
xchg
lods
frstor
xor
imul
push
out
imul
or
ds
xchg
inc
ret
dec
sub
mov
mov
cli
scas
fabs
sarl
pop
or
add
cmc
and
or
addr16
or
adc
lods
aad
push
or
push
into
in
xchg
push
xor
sbb
ljmp
ret
mov
mov
add
out
shr
jbe
cld
sti
fcomps
movsb
mov
jl
mov
push
dec
or
sub
mov
hlt
mov
dec
adc
push
mov
xchg
es
idiv
test
divb
mov
sub
rorl
pushf
test
sbb
js
pop
outsl
pop
addr16
cmp
lret
subl
es
mov
add
ja
sub
pop
add
push
xor
daa
push
cltd
mov
lods
cmp
xlat
xor
push
lds
sbb
push
mov
cltd
pop
loopne
mov
mov
movups
fcomps
popa
ret
imul
pusha
sub
shl
mov
mov
movsl
push
pusha
mov
mul
idivl
sbb
inc
adc
ret
shrb
stos
inc
or
xchg
pop
shlb
mov
sbb
sbb
add
filds
insl
mov
int
out
or
stos
shlb
fiadds
sbb
ret
push
or
inc
ds
aam
bound
lcall
xor
ja
or
xchg
dec
cmp
lcall
xlat
andb
out
es
fdivl
das
sbb
adc
or
inc
ds
cmc
mov
jl
fldcw
stos
in
push
scas
push
inc
lea
mov
inc
in
dec
push
xorl
dec
lret
push
cmpxchg
in
arpl
xchg
sbb
dec
sbb
sbb
imul
addr16
sub
into
scas
jge
jb
out
push
push
mov
bound
addb
test
cs
test
xchg
imul
mov
pop
mov
je
cli
push
cltd
stc
push
xchg
movsb
stos
jbe
mov
repz
xchg
jbe
mov
sub
mov
jmp
bound
data16
sbb
adc
inc
leave
subb
jg
sti
sahf
call
lret
iret
addr16
jp
and
cld
popf
in
fwait
sbb
or
mov
pushf
call
jno
jg
jecxz
sub
or
stos
aam
shll
xchg
movsb
fstpt
jl
cld
xchg
sbb
shlb
inc
inc
jl
in
mov
jge
mov
jle
xor
nop
fistps
je
xchg
lahf
cmpsb
xor
xchg
lods
ja
pop
lock
out
loopne
dec
inc
or
je
jno
repnz
lret
sti
xchg
rcr
jle
out
mov
mov
pop
lods
fisttpl
out
dec
popf
int
ficoml
sbb
iret
push
cwtl
mov
dec
aas
xor
cmpsb
jno
push
sub
mov
dec
in
movsb
dec
out
pop
fsubl
inc
jb
loope
and
mov
add
add
rcr
and
dec
xchg
dec
in
add
or
dec
js
orb
cltd
daa
sarl
adc
xchg
cld
out
repz
sub
inc
lds
jle
or
aad
icebp
leave
leave
xor
popf
out
stos
add
loope
cmc
cwtl
push
adc
lock
pop
jmp
mov
mov
and
je
icebp
and
add
fst
fwait
into
sub
inc
movsl
in
xchg
dec
insl
jle
lds
jns
test
decl
leave
cmpps
data16
pushf
pop
shl
testl
xor
adc
adc
pusha
sbb
adc
mov
aam
inc
mov
sbbl
mov
mov
xor
fst
shl
rolb
aad
outsl
dec
shlb
mov
inc
mov
dec
sbb
adc
out
lcall
or
fisubs
adc
cmp
iret
js
dec
sbb
jnp
cld
push
cmp
pop
push
shlb
ja
adc
lds
pop
jb
sbb
or
jg
sbb
repz
add
out
jmp
ljmp
or
test
cmp
mov
dec
lds
data16
mov
adc
and
in
je
push
out
sbb
loopne
mov
push
xorb
cmp
cmp
pop
je
jle
dec
insl
mov
jns
inc
cmp
ljmp
int
stos
jo
iret
cmp
pusha
pop
sub
xchg
pop
mov
xor
cmp
xor
mov
adc
scas
cmc
mov
in
and
sbb
ja
push
cmc
sub
aad
cmp
add
xor
rclb
lock
inc
mov
adc
mov
lods
sbb
mov
cli
xor
push
xchg
sbb
adcb
mov
sub
pop
add
idivl
shlb
mov
ret
test
add
jge
pop
jb
daa
pop
push
rcrl
push
mov
mov
add
loope
jp
and
cld
test
push
lahf
push
sub
jae
pop
lcall
inc
mov
adc
adcl
jge
lods
xchg
add
add
sbb
lea
std
or
loop
shlb
mov
sub
ror
pop
inc
or
push
dec
cmp
shlb
mov
mov
mov
xor
movsl
cmp
mov
mov
pusha
inc
fdivr
push
mov
adc
push
jb
sti
adc
mov
jnp
cmp
sbbb
or
jg
mov
inc
cmp
test
sub
cmp
push
fists
mov
jecxz
jle
scas
imul
mov
shrl
fists
xor
es
push
imul
popf
hlt
fwait
ljmp
outsb
inc
sbb
pop
mov
inc
sbb
jl
divl
jns
fucomp
les
mov
dec
mov
aad
pop
frstor
nop
insb
xor
fmull
dec
push
push
sub
fmull
xor
gs
test
rolb
daa
cmp
push
cltd
leave
rcrb
mov
aad
push
push
fnsave
xor
ret
testb
xchg
ficoml
rclb
sub
add
out
fldt
jno
push
roll
repnz
push
jae
enter
mov
outsb
push
push
xor
mov
mov
lcall
mov
mov
jg
xchg
mov
mov
inc
outsb
mov
push
mov
inc
sbb
outsb
sbb
pop
fisttpll
xor
push
cmp
outsb
inc
xchg
les
cmp
idivl
shll
mov
xlat
inc
dec
xor
movsl
or
stos
sbb
rcrl
inc
push
lret
gs
push
lret
push
mov
xchg
lock
ss
das
mov
in
and
fiaddl
fsubp
insb
loop
dec
cwtl
mov
push
cmpsl
loope
rcrb
dec
fimuls
clc
pop
sti
test
shlb
and
add
push
push
add
cs
shll
xchg
xor
ja
mov
adc
inc
xor
mov
mov
dec
jecxz
insb
jno
push
je
push
fcmove
iret
jns
cli
or
cld
incb
popa
enter
inc
cmp
push
loop
lods
aaa
bound
xchg
test
dec
jmp
out
loopne
ds
loopne
pop
jne
pop
iret
loopne
in
into
fwait
xchg
add
jb
sbb
callw
sub
lea
xchg
rcrl
sti
xchg
sbb
sub
fnsave
stc
andb
sbb
push
in
sbb
and
mov
jle
std
cltd
jno
mov
in
pop
and
xchg
aas
mov
das
xchg
test
inc
shrb
mov
cmp
cmp
lahf
dec
out
cmp
jbe
push
sbb
pop
lret
out
fwait
int
xchg
xchg
inc
xchg
insb
pop
mov
clc
imul
lds
xchg
and
add
sbb
mov
in
and
mov
aad
shrb
cmpsl
lret
in
inc
dec
adc
jge
cmpsl
test
adc
loop
negl
xor
sub
sub
shrb
push
cmc
xchg
cmp
push
dec
ret
xchg
jle
mov
sahf
sbb
cmpsl
fsubs
int3
xor
dec
mov
jns
mov
lea
rcrl
out
mov
mov
call
lret
dec
gs
push
xor
inc
or
inc
popa
push
shlb
int
cltd
sbb
test
xchg
enter
in
daa
lds
scas
inc
ja
sti
and
fldcw
je
insl
push
outsb
loope
outsl
fcomps
cmc
pusha
jl
pop
adc
mov
jmp
and
loope
test
xor
in
mov
sbb
movsl
xchg
bound
mov
sub
mov
sbb
fidivs
xchg
in
pop
jge
enter
das
loopne
and
sub
and
inc
sub
mov
divb
or
xchg
pushf
pop
mov
or
dec
push
jns
shlb
inc
adc
jno
lahf
repnz
cmp
fisttps
gs
leave
or
or
stc
push
inc
xchg
xlat
loope
lods
pop
xor
icebp
shl
int
repnz
mov
std
loopne
and
test
je
push
insb
bound
fwait
push
jp
mov
cltd
shrb
jl
sbb
and
int3
das
pop
jp
imul
roll
inc
mov
movsl
cmp
lahf
pop
fmul
stc
push
push
sub
aad
shl
mov
jae
sbb
mov
mov
inc
sub
lods
push
jecxz
ds
or
neg
push
mov
mov
or
bnd
sub
pop
rolb
cmp
push
hlt
pop
adc
mov
or
add
test
sbb
cmp
les
inc
push
popf
xor
rorl
rcrl
insl
adc
out
or
adc
loope
test
dec
and
add
lea
outsl
les
cmc
hlt
xchg
mov
ret
mov
pop
int
adc
orl
cmpsl
movl
es
movsl
push
mov
sti
adc
xor
jb
jge
jne
bound
mov
int3
sarb
je
xor
pop
js
sub
stos
push
adc
enter
add
pop
and
jmp
cld
sub
jo
mov
add
jl
dec
mov
add
cmp
mov
mov
and
sbb
dec
inc
jnp
mov
ret
sub
enter
jg
and
out
shll
pop
out
cmp
xor
push
popa
mov
rcr
sub
push
ljmp
sub
inc
push
xchg
xchg
insb
xchg
pop
rorl
adc
addr16
sbb
cmp
insb
sub
test
les
mov
mov
icebp
adcl
scas
movsl
icebp
lea
shll
xor
cld
inc
imul
pandn
dec
adc
mov
mov
adc
pop
xchg
pop
das
xlat
xlat
xor
mov
leave
cmc
mov
push
add
pop
mov
dec
mov
fsubrs
in
divb
sub
lret
jmp
sbb
pop
lods
je
lahf
mov
sbb
xchg
xor
adc
cwtl
jae
mov
sub
lcall
out
sbb
mov
jns
mov
cmp
stc
jne
stos
push
js
or
xrelease
xchg
cli
xchg
cli
push
mov
cmp
sbb
test
xlat
mov
sarl
sbb
sub
daa
inc
or
or
inc
adc
mov
mov
rcll
clc
and
or
xorb
imul
ret
gs
loopne
fcomps
inc
out
xchg
xchg
sub
adc
pop
pop
mov
xchg
cli
inc
push
imul
add
xchg
xor
sub
out
jae
xchg
mov
mov
or
stc
mov
jecxz
ds
cmpsb
mov
pop
rcl
rcl
pop
mov
jae
int3
mov
lock
jbe
aaa
ficoml
jg
ss
notl
ds
js
jecxz
jb
push
adc
cmp
pushf
lock
fsub
sbb
mov
jecxz
pusha
or
push
inc
lret
test
loop
push
or
xor
sbb
mov
mov
xor
cmpsb
cwtl
sbb
push
jl
scas
push
sub
fists
xor
or
cmp
ds
xchg
add
jmp
je
lcall
add
xchg
lea
dec
pop
mov
fcoms
pusha
jno
std
sub
xor
subl
adc
push
mov
stc
xchg
aas
js
subb
or
loope
sbbl
data16
repnz
mov
mov
aad
and
xchg
push
jp
insb
xor
aam
movsl
inc
xchg
test
pop
iret
sub
out
mov
lret
insl
jge
or
push
push
inc
imul
dec
dec
mov
scas
ljmp
faddp
into
xor
jecxz
push
mov
les
lods
xchg
lock
jns
ja
testb
mov
mov
andl
cmc
shlb
inc
popf
lcall
or
fists
and
jo
pop
xchg
inc
mov
mov
mov
and
enter
insb
cmc
test
xor
push
orb
cmp
dec
xlat
or
cmpl
jmp
popf
sti
xchg
adc
nop
in
pop
mov
imul
sbb
loop
xor
rcll
push
cmp
shll
inc
insb
and
push
inc
repnz
or
stos
and
xchg
lret
iret
push
and
xchg
rcrb
cmp
aas
push
icebp
aad
jg
js
int3
rcll
dec
test
loope
loopne
shl
std
mov
lcall
sahf
xor
inc
call
xlat
mov
add
dec
mov
pop
in
ss
sti
pop
xor
adc
dec
test
cmp
mov
or
and
movsl
jo
cmpsb
ja
ret
lods
or
lahf
cmpl
jo
sbb
or
test
in
mov
daa
shll
jp
ljmp
flds
pop
inc
sbb
xchg
lods
arpl
pop
cmpsb
lcall
sbb
jo
lcall
jle
add
or
mov
mov
and
push
test
aaa
sbb
shrb
stc
xor
xchg
in
flds
sbb
sti
adc
xor
sbb
cwtl
xchg
cmpsl
jge
clc
fisttps
or
fcomp
jbe
fucomp
push
add
inc
lods
mov
leave
xchg
add
test
mov
add
mov
xor
mov
repnz
dec
push
dec
popf
cmc
or
xor
add
cwtl
xchg
das
int3
xchg
in
pushf
neg
ds
pushf
insb
fisubl
lahf
sysenter
sub
loopne
lods
das
sub
ja
push
repz
je
jno
mov
fucomi
gs
push
in
and
push
fbstp
or
dec
int3
jge
push
sub
xchg
pushf
sbb
push
aas
xchg
sar
adc
cmp
xor
jno
lods
test
mov
test
adc
mov
sub
jmp
sti
addr16
pop
mov
test
cmpsb
mov
and
mov
jmp
cltd
pop
mov
mov
orb
dec
sub
notb
or
fsubrp
dec
jae
sbb
fisubrl
insb
test
and
arpl
push
inc
sub
mov
push
push
outsb
cmp
notb
jl
and
sbbb
mov
nop
into
pop
loop
cld
popf
into
in
enter
cs
mov
xor
test
mov
sbb
add
push
movsb
movsb
cmpsb
mov
push
xchg
adc
jle
mov
xchg
xchg
dec
adc
pop
loopne
cld
popf
adc
repnz
lea
jge
lods
jns
xor
outsl
sbb
pop
xchg
cmpl
push
aas
jne
sbb
and
mov
sub
icebp
and
cs
mov
dec
cmpsl
adcl
lock
out
lahf
inc
fdivp
fsubs
sbb
or
packuswb
xchg
ja
hlt
or
xlat
popf
xchg
dec
inc
sahf
stos
push
or
sub
js
notb
push
xchg
sub
mov
sub
mov
jl
inc
and
sub
iret
adc
sub
cmp
mov
inc
push
leave
imul
imul
lahf
sub
out
addr16
mov
stc
add
sbb
pop
xor
pop
xor
adc
lret
push
fwait
je
stc
inc
inc
push
cmp
stos
or
mov
cld
jl
popa
lods
and
push
fbstp
into
jle
adc
jmp
lret
lahf
jmp
mov
dec
ret
xor
testl
sbb
das
sbb
jmp
stos
mov
fmull
add
xor
stc
stc
ret
pop
mov
dec
or
dec
aam
mov
pop
and
cld
xchg
push
xor
push
sub
add
fs
mov
mov
dec
xchg
outsb
gs
pop
jmp
cmp
push
sti
xchg
cmpl
xchg
test
lahf
shll
jmp
mov
pop
jg
xchg
imull
sti
mov
inc
and
aad
fisubrs
test
xor
rclb
adc
popa
lods
fimull
lods
dec
cmp
in
mov
lea
scas
dec
dec
and
leave
sbb
dec
xor
in
cs
mov
fstpt
nop
pushf
pop
inc
lds
clc
dec
sub
adc
cmc
jmp
loop
ret
aas
arpl
xchg
jmp
cli
js
scas
adc
leave
sbb
push
jno
jle
xor
outsl
popf
addb
mov
cmp
lcall
adc
test
adc
xchg
mov
clc
das
rcl
stos
mov
cli
pop
ja
aam
cltd
or
lea
push
fmuls
jns
cltd
or
add
add
shr
cltd
xor
jge
jge
mov
push
icebp
jo
mov
or
push
sub
enter
jbe
aam
inc
sbbb
ret
jno
push
fidivrs
lods
insl
mov
jmp
pcmpeqd
mov
mov
out
iret
xor
fwait
movsb
test
dec
add
mov
sbb
pop
lcall
pop
out
in
mov
adc
mov
test
loope
int
movnti
pusha
and
pop
orb
rorb
adc
les
ret
dec
outsb
jno
jecxz
fmull
push
and
dec
das
repnz
fildll
or
mov
cmp
fimuls
das
fsubrp
pop
adc
mov
mov
in
loope
sub
out
push
mov
mov
adc
cmpsb
xlat
or
je
dec
adc
shrb
inc
mov
or
mov
sub
mov
in
jnp
jmp
push
sub
and
push
jns
and
sub
cmp
sub
pop
or
jo
insl
loope
lods
and
mov
outsl
and
pop
adc
lods
movsl
xchg
mov
lods
loop
ds
andb
push
nop
jecxz
movsl
adc
enter
bound
push
rcr
xlat
dec
jge
loope
scas
shll
push
test
out
shl
sahf
cltd
push
inc
sub
sub
aam
iret
shrb
inc
xor
data16
lea
sahf
adcl
jb
pop
jno
mov
cmp
out
pop
pusha
sbb
jp
sub
imul
in
andb
loope
pop
les
mov
xor
push
push
jge
jp
nopl
add
out
and
js
mov
jg
ror
cli
or
ret
xchg
lods
jb
inc
add
call
bound
fcoms
out
data16
push
push
xchg
mov
push
mov
ss
jae
stos
aam
xor
xchg
pop
clc
nop
pop
dec
sbb
out
fs
xor
xchg
cmp
stc
xchg
or
mov
sub
ret
pop
or
out
cltd
imul
add
sub
jnp
mov
repz
hlt
aam
push
mov
sahf
dec
jb
xor
mov
out
sbb
pop
jp
or
mov
push
inc
mov
neg
jb
setb
enter
cs
mov
and
push
insl
lock
addr16
popf
push
aad
outsb
scas
testb
ljmp
mov
pop
jnp
sbb
mov
mov
std
jbe
popf
imul
mov
addl
sbb
mov
rcl
ret
adcl
test
pmulhw
hlt
adc
imul
mov
jmp
xor
add
push
sti
enter
add
add
cmpsl
jmp
mov
and
in
pop
push
sete
mov
icebp
aas
fnstsw
pop
mov
stos
loopne
add
xorl
inc
insl
xor
mov
rcr
jns
push
imul
xlat
ja
fnstsw
cmp
sub
push
cmpsl
aad
mov
addr16
jp
pusha
aad
jnp
aaa
loop
stos
mov
stc
cmp
jmp
out
and
mov
rorl
jmp
shlb
mov
shl
int3
cld
jns
dec
lret
fwait
push
in
jp
mov
fmul
sbb
pusha
xor
loop
push
adcb
push
lds
fists
jo
pop
call
lahf
les
and
inc
mov
lea
inc
pop
std
int3
mov
pop
add
xchg
rcr
mov
inc
push
movq
dec
test
mov
icebp
mov
fsubs
pop
mov
js
int3
push
or
mov
lret
cs
gs
addl
shrl
inc
inc
pop
xor
into
add
mov
push
ret
sbb
das
repz
int3
cs
outsb
popa
sbb
push
jb
cmpsb
out
leave
mov
adc
bound
cmc
cmp
xchg
xor
and
test
inc
xor
lods
jo
mov
jmp
sub
pop
push
in
mov
cs
add
gs
int3
data16
add
jl
mov
fisttps
push
mov
fcos
xchg
mov
cld
nop
cltd
mov
ret
iret
pop
scas
and
push
push
dec
xor
jp
repnz
loopne
fstpt
rolb
jno
ja
xchg
inc
lods
sti
xchg
fidivrs
test
pop
mov
andl
inc
cmp
lods
cmp
stc
push
inc
dec
push
cld
shll
xor
mov
mov
pop
mov
dec
out
or
dec
bound
or
xlat
push
push
enter
cmp
inc
jmp
pop
xor
xor
insl
or
sub
add
and
lcall
pop
rol
incl
cmp
pop
pop
or
sbb
mov
bound
adc
xor
das
xchg
push
popf
xor
lret
sbb
sbb
dec
xor
pop
adc
push
movsb
sbb
hlt
dec
jb
iret
add
js
pop
pop
mov
xor
and
mov
test
mov
pop
pop
and
repnz
pop
addb
fstl
xchg
and
add
dec
xchg
jecxz
sbb
leave
lret
shll
es
int3
out
out
jle
insb
lds
mov
mov
jbe
xchg
inc
and
sbb
xchg
sub
ret
pop
es
mov
in
mov
cmpsl
pushf
ljmp
fisubrl
in
loop
jno
lock
jg
and
jg
jae
adc
mov
push
ret
pinsrw
enter
in
lea
or
push
test
aam
enter
imul
dec
bound
cmpsl
jecxz
ret
jns
and
push
add
or
mov
in
xor
aas
cmp
jo
in
fsubs
ja
push
fcompl
push
and
sub
lock
test
jecxz
pusha
xchg
or
cs
jecxz
xchg
insl
les
xor
mov
addl
enter
jle
lods
ds
fwait
dec
mov
mov
pop
adc
dec
push
cmpsl
je
or
jnp
loop
outsb
jae
pop
mov
popa
push
xor
dec
inc
mov
aam
jge
or
jo
xchg
ficomps
daa
je
inc
sub
pop
pop
cmp
loopne
add
adc
jecxz
mov
mov
lods
add
test
aas
push
cmc
cmpl
push
subb
jae
cmp
and
add
adc
xor
jnp
cmpsl
test
sbb
inc
jb
adc
aaa
jle
dec
pusha
cmpsl
jge
jne
pop
pop
out
mov
ret
mov
inc
jle
cmpsb
in
fnstsw
cld
and
shrb
dec
imul
add
sub
and
jl
jns
mov
mov
lods
xchg
rolb
inc
xlat
test
ljmp
lcall
sbb
mov
jle
in
jb
faddl
jmp
cs
mov
imul
push
or
mov
loop
cltd
int
mov
inc
imul
mov
ffree
dec
pop
or
es
in
stos
std
push
adc
mov
fs
in
ja
jg
pop
dec
mov
sbb
sbb
rorb
cld
and
mov
mov
inc
mov
push
ljmp
inc
into
int3
dec
xor
aaa
adc
fs
mov
xor
into
fdivrl
les
bound
popa
repz
js
in
aad
cli
pop
je
jne
popa
lahf
xchg
inc
shlb
insb
inc
jl
out
lret
es
cmp
or
mov
sub
lcall
rolb
jmp
inc
push
loop
xchg
cli
adc
pop
push
cs
call
push
push
imul
js
or
test
xorl
outsl
xor
pop
xchg
xor
lahf
pop
es
rcr
enter
and
addr16
pop
or
mov
pop
imul
fs
divl
mov
mov
mov
jg
push
push
or
std
adc
leave
repz
cmp
outsl
push
arpl
jnp
repnz
in
lods
dec
scas
pusha
shll
out
fcomp
sahf
or
cld
addb
adc
in
testb
push
mov
cmp
or
popf
setnp
xchg
cs
mov
repnz
xor
mov
mov
jp
xchg
sbb
in
fs
aas
dec
loopne
cmp
jnp
sub
pop
jae
jp
dec
sub
negl
xor
and
cmp
push
push
fists
sub
scas
fs
pop
stos
cmp
add
mov
ss
sub
jne
testl
popa
imul
inc
xor
jp
popf
mov
xor
je
enter
adc
idivl
das
pop
daa
scas
popf
xchg
dec
pusha
dec
mov
adc
inc
cltd
rcrb
adc
mov
insb
push
inc
cmpsl
and
sbb
add
or
stos
sbb
daa
sbb
flds
iret
into
mov
movsl
sbb
es
aad
sarl
adc
fucomi
xor
pminub
xor
test
push
inc
jae
fwait
and
inc
jbe
ds
fcom
outsb
mov
jb
arpl
mov
movswl
xor
insb
pop
outsb
sbb
ret
dec
inc
jl
cs
or
sti
dec
mov
test
mov
sub
add
ds
fldl
sbb
pusha
enter
stos
out
stos
jp
jbe
cmpsb
xor
aad
mov
xchg
mov
std
cmpsl
mov
aad
mov
lahf
aad
sahf
mov
mov
hlt
sbb
cli
mov
jl
or
mov
or
aas
cli
pusha
daa
pop
jo
push
cmpsl
cmp
inc
cmc
inc
inc
push
stos
xchg
mov
fdivrs
cmp
arpl
jns
nop
in
adcl
rolb
cmp
loop
lds
cmp
jl
xchg
daa
mov
ljmp
xlat
ret
leave
hlt
and
push
dec
call
sub
icebp
clc
mov
repnz
or
iret
repnz
xor
mov
xor
dec
push
stc
stc
div
js
and
xor
stc
icebp
negb
or
cli
push
loopne
push
call
adc
or
push
shl
repnz
lea
insb
scas
out
sbb
adcb
loope
inc
in
imul
js
or
inc
cmp
push
or
les
add
adc
sub
adc
movsb
push
aas
jo
test
cmpsb
pop
xor
mov
adc
add
lods
xchg
mov
inc
movsl
sbb
adc
out
test
add
xchg
mov
push
loopne
xchg
loopne
lea
inc
shl
cli
cmpsb
insl
add
pop
cmp
or
movsl
mov
outsb
mov
jno
inc
mov
pushf
cmp
loop
outsb
mov
jp
sbb
add
sbb
shl
lcall
jno
xor
int
dec
lcall
cmpsl
pop
sar
stos
xchg
adc
jmp
lods
dec
cmpsl
adc
or
add
xabort
xor
pop
loop
mov
andb
cs
imul
jp
cmpsb
dec
mov
movsb
mov
divb
rolb
sub
test
test
pop
jbe
stos
sub
xlat
aad
std
mov
jnp
daa
adc
push
adc
jns
sub
fxch
lds
loope
adc
lcall
mov
push
shll
xchg
xchg
dec
cmp
int3
in
jp
movsb
sub
xor
shr
das
sbb
lret
fs
adc
cmp
add
fstpl
rcrl
xor
mov
int3
shll
lock
mov
sahf
sub
and
sbb
not
dec
sti
jae
xchg
pop
out
call
ja
mov
lods
jle
cmp
inc
jecxz
dec
or
insl
jle
sti
decb
outsb
ret
test
mov
ds
and
xor
cmp
pushf
lret
addr16
pop
dec
cmc
stc
lahf
push
mov
pop
inc
xor
mov
mov
fwait
sbb
pop
js
mov
pop
fwait
repz
pop
ja
imul
nop
lret
inc
dec
test
in
dec
stc
dec
add
add
lods
xor
in
jnp
jmp
mov
orl
and
or
xchg
inc
xchg
jnp
leave
int
popa
jnp
pop
shll
test
ja
sub
data16
cmp
test
test
rol
inc
mov
jp
inc
sub
push
clc
test
cmpsb
or
pop
push
cld
pushf
pop
int3
aaa
imul
outsb
mov
cmpsb
xlat
pop
push
xor
jle
call
lods
pop
ret
cmp
pop
jge
or
out
cld
fistps
add
fdivs
cmp
cltd
push
cmpsl
pop
sub
ljmp
mov
mov
mov
arpl
pop
test
add
inc
arpl
int3
mov
mov
clc
loopne
adc
mov
xchg
aas
negb
aaa
nop
lods
jns
ss
cwtl
ret
pusha
add
popa
mov
fldl
popf
xchg
repz
loop
sahf
adc
add
stc
ret
mov
xor
pop
nop
jl
gs
mov
roll
push
fisttps
outsl
jle
int3
pop
lds
fisubrl
cs
in
aad
movsb
cs
shrl
mov
inc
jbe
stc
dec
pop
mov
sub
ljmp
mov
ss
sbb
subl
lock
stos
xchg
lahf
nop
psubusb
push
mov
push
pushf
data16
testl
pusha
adc
fisttpl
flds
hlt
call
adc
adc
pushf
mov
in
jg
mov
push
jp
push
in
test
xor
cmp
out
cvttps2pi
add
xchg
jle
nop
pop
xlat
popf
ljmp
cmpsb
jns
inc
ss
insb
mov
into
sub
push
in
mov
add
neg
or
xor
lods
pop
xchg
jne
xchg
fidivs
icebp
mov
out
shlb
lret
xor
imul
dec
mov
lods
jbe
arpl
pop
and
in
lods
xchg
pusha
mov
insb
jne
out
dec
pusha
es
push
js
adc
pop
mov
cmpsb
push
clc
push
push
push
jno
dec
fsubp
stos
jmp
inc
test
lcall
out
xchg
xchg
mov
lods
in
lds
xor
in
or
dec
xchg
xchg
xor
sbb
sub
cld
and
cmp
and
cmc
xor
pop
pop
inc
ret
mov
lahf
pop
outsb
and
ljmp
adc
xchg
std
jb
jae
sarl
repz
leave
out
andl
jge
enter
jp,pn
jae
cmpsl
pushf
xchg
sub
bound
cmp
bound
dec
sbb
mov
push
xor
in
fisubs
cmp
fstpl
js
cmp
test
add
jbe
sti
sbb
fdivrl
xchg
push
sahf
lcall
loope
jnp
out
cltd
movsl
cwtl
sti
repz
mov
jle
addr16
jb
inc
pop
sub
mov
lea
cld
subl
sub
pushf
push
adc
jnp
idiv
cmc
repnz
xor
mov
std
in
and
andl
in
cli
fiadds
outsb
int3
mov
aaa
lahf
std
xor
pop
xchg
cmp
lods
imul
dec
shlb
mov
jp
or
popf
outsl
dec
rol
inc
js
es
jb
cmovnp
stc
lret
jg
outsb
xor
sbb
jmp
push
sti
andb
lret
mov
sbb
lods
mov
pop
cmp
jg
xchg
lods
ss
mov
push
add
push
out
push
pop
sahf
movsl
push
cmc
push
add
dec
or
add
sbb
mov
push
push
mov
xor
ds
hlt
movsb
fnstcw
faddl
lods
cltd
cmp
dec
push
and
and
dec
pusha
cs
iret
xchg
es
roll
inc
pop
dec
es
mov
negl
xchg
sub
cmpsb
pop
push
iret
imul
sbb
and
test
cltd
leave
sarb
xor
xor
mov
mov
mov
out
xchg
cmp
mov
test
xlat
xorl
ffree
jae
cmp
andb
sbb
test
jge
push
fs
dec
mov
movsb
push
add
inc
movsb
xchg
js
push
xlat
in
add
lods
jmp
sub
fsubs
inc
je
or
adc
sub
xchg
jmp
leave
jmp
adc
int3
sbb
es
dec
stos
add
adc
leave
scas
shl
inc
mov
push
inc
scas
mov
and
pop
and
ret
add
sbb
rcr
jg
dec
sbbl
dec
lcall
lret
push
jmp
popa
adc
js
jns
xchg
push
and
outsl
dec
fstpl
dec
les
leave
gs
jecxz
xchg
loope
loopne
loopne
inc
push
jmp
iret
or
adc
mov
sub
into
cli
call
jle
and
aaa
mov
or
aas
jo
test
and
fsubrl
jo
jecxz
nop
add
loopne
xchg
mov
mov
mov
or
cs
sbb
adc
add
aam
loopne
ss
mov
loop
ljmp
mov
mov
adc
divl
pop
divb
add
xchg
adc
push
jb
adc
sti
mov
fs
test
movq
dec
xchg
or
cmp
push
aaa
clc
dec
outsb
xor
or
imulb
xor
push
enter
mov
aaa
hlt
adc
les
lock
in
xor
faddp
pop
sub
iret
mov
fcmove
scas
cmp
push
into
test
test
adc
es
xchg
adc
dec
pop
int
movsl
xor
fwait
scas
adcl
or
pop
dec
xor
sub
mov
push
and
popf
fnsave
mov
aas
repnz
jp
or
lcall
pop
ret
lods
xchg
mov
decl
fbstp
xor
ret
pop
xchg
pop
dec
sbb
clc
xchg
dec
scas
leave
jp
test
xchg
dec
out
outsb
inc
push
sbbl
push
mov
scas
popf
es
lea
in
cmc
inc
sub
dec
fsts
aas
dec
negb
mov
mov
std
cmpsb
ret
movsb
push
cli
mov
or
nop
fcoms
or
sub
adc
mov
rolb
jmp
in
fwait
rorl
scas
add
rorl
ret
pop
push
add
fistpll
out
lds
out
js
call
pop
adc
ret
es
mov
or
rcrl
mov
sub
call
mov
jne
jecxz
mov
cmp
pop
and
into
xor
adc
pop
rolb
aas
addr16
out
mov
and
das
jo
cmp
int
movsb
jle
lds
lods
jne
pusha
jmp
or
mov
cmp
mov
and
cwtl
leave
pop
xor
sbb
imul
mov
gs
or
pop
and
dec
mov
xchg
ret
fidivrl
idiv
test
lds
mov
mov
std
mov
xor
sub
fbld
adc
hlt
xchg
lret
adc
shll
sub
lods
pop
sahf
lds
cltd
adc
xor
add
out
adc
mov
testb
scas
pop
ds
push
mulb
imul
lcall
roll
xchg
rclb
adc
cli
cmp
fnstenv
into
repnz
cmc
xchg
call
gs
insl
mov
adc
adc
mov
push
adc
dec
and
cld
icebp
jp
sbb
test
cmp
int
push
rorb
cmpsb
xchg
sub
hlt
out
popa
shrl
imul
cmp
mov
dec
pop
cmpsb
and
repz
xchg
mov
daa
sub
xchg
fucomi
dec
lock
jecxz
icebp
scas
push
mov
pop
jmp
icebp
mov
push
jmp
gs
xchg
mov
lock
jge
push
or
jae
sbbl
xor
pop
xchg
push
jge
jp
mov
ljmp
mov
int
inc
xor
int
int
insl
andb
fisubrs
cmp
xor
mov
sahf
pop
and
or
in
inc
aam
pop
dec
sub
cwtl
incb
int
cmpsl
xor
ss
js
fstpt
sbb
jno
add
push
mov
mov
push
xor
xchg
ljmp
cmpsb
add
scas
pop
es
cmpsb
mov
cmpsb
jge
mov
out
divl
fdivl
int3
les
pop
lds
stos
das
xchg
xchg
pusha
sub
inc
mov
or
orl
sub
out
cli
shr
mov
je
fdivr
ss
in
lods
dec
mov
sbb
jnp
lahf
fsubp
xchg
cmpsl
popf
fbstp
mov
das
xchg
fs
and
hlt
jp
adc
xor
add
add
jmp
addr16
lcall
ret
pop
lret
ds
add
loope
repz
lcall
js
or
movsl
fmul
or
mov
mov
scas
lods
cmpb
xor
jae
cmp
call
movsl
mov
in
sbbb
ljmp
out
jno
jl
push
mov
pop
popf
sbb
dec
cwtl
imul
cmp
pop
cltd
in
pushf
pop
loopne
fmul
out
movsb
insl
mov
pop
pop
ljmp
xchg
mov
test
outsl
mov
icebp
scas
xor
popf
cmp
jp
mov
xchg
dec
lcall
in
xor
cmp
scas
mov
aas
xor
or
fiadds
stos
add
out
repz
pop
mov
rclb
cmpl
inc
add
lret
into
sbb
bsr
mov
test
in
data16
add
xchg
repnz
sti
fdivrs
xchg
mov
xor
es
or
cld
lods
adc
jb
xchg
mov
mov
cmp
jbe
and
std
xlat
push
mov
cs
out
sbb
push
mov
je
jne
jecxz
out
idivb
xor
in
mov
inc
jno
pop
sbb
sarb
out
mov
inc
cmp
pop
mov
xchg
out
ljmp
imul
gs
xchg
jle
loope
cmp
push
sarb
xor
data16
sbb
cmc
decb
cwtl
arpl
std
popf
and
sbb
in
push
mov
xor
cmp
popf
decb
inc
cmp
mov
sbb
iret
mov
lret
mov
test
add
mulb
jg
shlb
or
mov
pop
out
xor
cmp
sbb
popf
jae
andb
loopne
lea
test
mov
hlt
cmp
cmpsl
adc
or
popf
jno
ffree
mov
addb
push
das
pop
ljmp
xchg
xchg
js
inc
aas
jmp
sarb
daa
adc
in
inc
and
aaa
arpl
mov
scas
mov
inc
mov
mov
dec
js
lret
fldt
loope
pop
jne
jb
imul
inc
filds
mov
push
clc
in
in
jp
pop
fcmovb
xchg
add
sti
adc
repz
ret
jmpw
idivl
mov
jmp
mov
out
mov
lea
dec
fs
leave
lds
aam
lcall
aad
mov
pop
dec
movsb
pop
loop
fs
mov
daa
lret
je
pop
lret
shll
int
lds
cmp
iret
aad
mov
mov
push
imul
movsb
daa
clc
leave
pop
repz
jo
in
insl
sbb
mov
jno
jecxz
gs
adcb
mov
sbb
in
jg
or
cwtd
pop
cli
leave
jns
fistpll
mov
xlat
push
not
xor
sbb
adc
call
jno
and
add
lret
jmp
movsb
movsb
sub
jns
test
jmp
mov
and
add
imul
ss
cwtl
mov
inc
push
iret
mov
fwait
add
or
sub
mov
sbb
bound
xchg
pop
fdivrs
rcll
lret
add
sub
data16
scas
aam
loope
sbb
fbstp
iret
push
stos
lret
cmovnp
and
push
clc
dec
mov
push
add
mov
inc
jns
mov
inc
push
stos
mov
adc
or
out
sub
mov
daa
and
out
aas
adc
out
leave
xor
repnz
xor
add
mov
rorl
cmpsl
push
mov
pop
cltd
pop
in
ds
pop
or
divb
and
push
jb
adcb
das
insl
xor
push
push
jo
imull
test
dec
rolb
in
and
jne
pop
pop
loop
and
or
push
mov
mov
inc
in
sub
xor
gs
mov
inc
leave
cmp
xor
jns
div
leave
stos
es
mov
ja
mov
mov
xchg
xchg
bsf
popf
dec
sub
adc
mov
out
push
xchg
sub
insl
idivl
mull
add
cmpsb
sub
imul
out
push
xchg
xor
pop
sub
pop
or
mov
inc
mov
or
repnz
mov
shl
or
xor
ret
pop
xchg
xchg
cmp
pop
ss
mov
pop
negl
mov
stc
or
xorb
fsubrl
movsl
lahf
mov
into
aaa
or
fnstenv
jmp
aaa
or
mov
push
flds
ss
xor
pop
cmp
fnstsw
arpl
mov
adc
and
lret
repnz
push
jo
jp
pop
add
rclb
push
lahf
das
test
dec
jle
jl
mov
sarb
sbb
lods
lds
push
push
rcrl
cmp
mov
pop
in
xchg
or
mull
jmp
mov
or
and
jecxz
add
mov
mov
push
aam
push
sub
xor
jo
push
fwait
xchg
push
fistpl
sub
mov
mov
cmp
lods
cmc
imul
mov
inc
inc
shll
mov
fs
and
bound
add
imul
dec
push
cmp
lock
in
xor
in
das
adc
loope
pushf
push
icebp
addb
add
sbb
inc
or
insl
dec
cmc
mov
outsl
test
add
ljmp
stos
repz
xor
test
mov
test
pop
add
ret
decb
cld
mov
inc
cmp
and
inc
and
or
aas
push
fstpl
cmp
lock
popa
and
adc
lret
stos
mov
pusha
ret
add
cld
adc
jne
pop
outsl
popa
mov
push
aaa
dec
sub
dec
xchg
mov
pop
dec
sahf
call
pop
les
xchg
cmpl
mov
dec
scas
adc
ret
push
jae
cmc
decl
ret
aad
dec
mov
jp
arpl
cmp
mov
int3
mov
push
or
push
lods
push
adc
sahf
mov
cmpsb
mov
sub
add
pop
pop
int3
add
and
pop
ja
sbb
insl
lods
cmp
push
ja
cltd
sbb
imul
dec
ss
jmp
imul
cmp
repnz
sbb
test
in
xor
cmpsl
fldl
ja
rcl
adc
and
add
inc
or
pop
scas
mov
push
mov
xor
js
xchg
nop
adc
les
mov
push
dec
idivb
addl
sti
cmc
sbb
rcrl
pop
call
jne
iret
into
insb
dec
sub
sub
xor
add
scas
xchg
cmp
or
out
aaa
cmp
lods
ret
mov
mov
cmp
push
int3
xor
loopne
cs
icebp
loop
fistl
dec
imulb
jbe
mov
add
popa
mov
nop
sbb
lcall
xor
pop
fsubrp
adc
pop
jno
mov
movsb
jns
inc
mov
ret
loopne
pop
mov
gs
imull
push
push
ja
or
movsb
xchg
adc
movl
lods
fadds
out
cmp
xor
push
jmp
ret
jg
enter
in
xor
fwait
push
push
sbb
imul
mov
dec
pop
mov
es
mov
sub
enter
test
jle
arpl
push
adc
inc
fnstenv
mov
adc
mov
je
mov
repnz
test
sbb
daa
dec
jecxz
inc
in
enter
xchg
lds
xchg
and
dec
dec
mov
cmpsl
adc
out
dec
outsl
mov
mov
jbe
fmuls
rorb
add
in
cltd
jp
or
mov
jg
cmc
mov
xchg
jno
add
or
int3
loopne
push
cld
cmp
aam
icebp
and
mov
jb
pushf
out
push
mov
inc
cmp
mov
jmp
dec
inc
lret
into
dec
pop
cmpsb
rcrl
adc
out
fistps
imul
data16
push
icebp
cmpsb
inc
jmp
sub
stos
test
sahf
aaa
call
mov
icebp
lahf
pop
cmp
jns
fadds
xlat
push
xchg
jbe
cmp
xchg
sub
neg
xchg
enter
dec
and
insl
fs
shlb
dec
daa
inc
fisttpll
sbb
mov
clc
std
lock
icebp
pop
cwtl
ljmp
jno
shlb
jae
dec
cmp
jge
push
pop
sarl
fstps
jl
fdivl
adc
mov
inc
fmuls
lea
and
jnp
mov
outsl
ror
push
in
pop
cld
xchg
and
xchg
adc
fwait
cmpsl
psubw
xchg
out
xchg
mov
pop
enter
sbb
pop
insl
pop
adc
int
jne
push
jo
negb
mov
aaa
cmp
mov
sub
mov
setne
pop
testl
iret
push
pop
xchg
xchg
add
test
out
add
iret
add
arpl
mov
or
push
fwait
daa
int3
aaa
ss
daa
cs
dec
cld
mov
out
call
arpl
inc
add
lods
mov
mov
sub
push
xor
lret
pop
sar
fsubr
push
addb
in
in
sbb
sbb
pushl
push
lret
fmuls
jae
mov
test
fisubl
psubb
and
iret
out
cwtl
stos
arpl
and
mov
jl
jno
push
test
lcall
daa
jl
sub
addr16
push
push
add
dec
xchg
insl
lods
popa
xchg
inc
mov
push
xchg
xchg
sub
xor
in
mov
mov
xor
lock
lods
push
cmpsl
cli
iret
or
sub
push
lds
xchg
xor
mov
xchg
ret
outsl
xchg
das
movsb
jae
stc
sbbb
mov
stc
cmc
loop
sub
mov
inc
jle
dec
xor
popf
lods
jl
push
scas
pushf
cmpsl
push
jecxz
or
sub
cwtl
xchg
or
sub
mov
mov
inc
les
xchg
lods
jle
stc
xor
add
sbb
pop
ja
int3
pushf
xchg
inc
out
mov
pop
out
or
push
popa
xor
data16
add
add
cmp
stc
imul
sbb
xchg
mov
outsb
cmpsb
loop
incb
sub
cmp
cmp
test
ljmp
adc
push
shll
jg
in
dec
test
xor
dec
imul
xchg
inc
inc
gs
out
lret
js
push
lahf
pop
add
enter
mov
add
addr16
cmp
mov
shlb
icebp
pop
add
mov
cmp
mov
clc
mov
sbb
push
inc
int
add
addl
and
scas
addr16
pushf
out
call
fsubrl
xor
pop
fisttpll
aaa
xchg
jne
sub
rcr
fldt
int
inc
imul
ljmp
mov
pop
popa
push
cld
outsb
call
fprem
es
jne,pt
lret
mov
xchg
insl
fisubs
xor
fsubrs
sub
fcomps
add
inc
push
mov
hlt
in
pop
adc
stc
mov
and
and
ror
push
dec
push
scas
sbbb
jg
mov
imul
cmp
push
cmp
pop
push
xchg
test
int
inc
imul
and
bswap
mov
add
sarb
imul
nop
mov
sub
lahf
loop
push
mov
mov
clc
fwait
lahf
and
xchg
into
in
inc
xchg
mov
mov
pushf
rol
jno
and
pusha
bound
shll
repz
in
xor
or
xor
loope
arpl
or
fimull
int3
pop
jns
cs
enter
mov
ret
insl
inc
jmp
pop
cmc
sarb
insb
lret
push
lock
insl
push
sbb
movsl
mov
jp
and
aad
pop
inc
aas
lret
or
lret
lock
inc
dec
scas
insb
mov
mov
cmp
cmp
inc
nop
mov
in
test
test
cltd
lock
cltd
or
bound
in
or
add
inc
or
cltd
sahf
into
fdiv
sbbl
cmp
push
hlt
es
je
xchg
shll
dec
xor
mov
xchg
push
add
dec
jmp
jae
pop
fnstcw
xchg
mov
jnp
fwait
ja
sbb
push
add
loopne
xor
popf
xchg
mov
rcrb
dec
add
add
adc
inc
shll
sbb
dec
pop
add
mov
es
lahf
inc
sahf
cwtl
lods
dec
sub
cmp
aam
jle
xor
sbb
movsb
lods
movsb
sbb
int
test
stc
pop
or
dec
outsl
mov
sub
sub
mov
jnp
add
sbb
not
insl
xor
add
fwait
iret
scas
test
pop
dec
jbe
jecxz
cs
aad
inc
scas
mov
icebp
dec
sbb
fs
mov
inc
cltd
iret
cmp
adc
push
es
mov
push
sbb
mov
into
mov
adcl
mov
mov
sbb
iret
sbb
ret
sbb
std
push
mov
pop
bound
push
mov
xchg
adc
dec
sub
xor
jnp
imul
mov
push
xchg
add
jp
sahf
sbb
mov
iret
popf
popf
and
xor
xchg
js
jmp
cmp
inc
pusha
adc
cmp
jl
xor
cmp
cmp
in
sbb
push
leave
rcrb
xchg
pop
iret
mov
mov
and
mov
add
sarl
add
ljmp
push
aam
hlt
jnp
fsubl
or
push
xor
and
stc
adc
leave
int
cmp
pop
lcall
test
or
mov
scas
pop
in
pop
cmpsb
xchg
incl
push
jne
jecxz
in
das
int3
pop
js
jp
mov
scas
mov
cmpsb
jae
cmp
adc
cmc
loopne
or
aas
mov
mov
outsb
outsl
int3
xlat
mov
ja
jecxz
movsb
movb
xor
sbb
jns
sub
mov
jbe
xchg
sbb
fucom
adc
sub
or
popf
jp
mov
dec
pop
mov
mov
stos
push
dec
imul
je
and
inc
mov
enter
pop
mov
jg
cmp
xor
adc
sub
add
xchg
sub
popf
mov
fs
stos
ficomps
jne
pop
mov
adc
dec
cmpsb
icebp
sub
repnz
es
and
lahf
add
in
fdivs
fsubrs
adc
dec
out
loop
pusha
movl
push
incb
xchg
adc
mov
xchg
push
outsb
pop
sbb
clc
mov
js
leave
lods
xchg
dec
int3
sbb
jns
mov
mov
nop
jge
std
addr16
imul
cmp
mov
int
pop
mov
pop
outsb
push
shll
leave
jbe
int
jecxz
add
fimuls
add
sbb
insl
adc
imul
mov
pop
test
sbb
test
and
mov
mov
imul
shll
push
adc
sbb
je
std
test
stos
les
rcl
lock
je
push
and
inc
cltd
arpl
cmpsb
test
dec
inc
psrlq
negb
or
test
sbb
imul
movsl
out
mov
xchg
mov
pusha
fldenv
jl
insl
push
xlat
scas
push
js
testl
adc
add
pop
test
xchg
adc
imul
push
jae
test
jmp
xchg
sbb
push
inc
and
shll
xor
sbb
sbb
fldl
aas
in
shrb
xor
insl
mov
shlb
dec
mov
fisttpl
stos
shl
sbb
xchg
inc
movsb
pop
push
arpl
out
xchg
popf
xchg
bound
cmp
loop
arpl
pop
fwait
loope
std
mov
cmp
sub
xorb
lods
inc
jp
xchg
mov
fimuls
fcmovne
mov
sahf
lea
pusha
rcrb
cmp
and
push
jmp
test
add
dec
stc
scas
movsb
dec
mov
mov
pop
dec
mov
sub
jg
adc
mov
mov
and
addr16
and
dec
sarl
ds
mov
pop
stos
mov
sar
mov
mov
inc
aas
test
int3
loop
mov
neg
push
jmp
pop
and
ja
lret
cld
xchg
mov
repnz
lret
xorb
xor
testl
loopne
fxch
loop
pushf
push
cwtl
pop
push
mov
mov
rorl
cmpsl
jno
push
cmp
or
cmc
insl
mov
sbb
idivl
jno
rorb
fwait
mov
stos
mov
iret
in
rorl
xchg
lret
sbb
test
das
push
or
gs
jbe
jnp
add
sub
stc
cmp
and
pmullw
stos
lahf
andl
ret
in
fcompl
pushf
scas
sub
push
cmp
loop
push
mov
leave
insb
scas
ljmp
sbb
xchg
repnz
pop
ljmp
mov
jmp
enter
mov
inc
repz
or
lcall
pop
inc
adc
cmp
mov
or
lock
pop
lods
sub
loope
pushf
push
xchg
outsl
std
dec
stos
cld
inc
shrb
inc
lahf
cmp
mov
pop
mov
popf
add
call
insb
push
leave
xchg
pop
cmp
sbb
add
lret
dec
mov
cmpl
lret
sub
inc
cli
nop
or
out
push
rcr
mov
mov
aaa
xchg
call
inc
out
cmc
fidivs
cmp
jns
mov
stos
fs
insl
jne
dec
push
inc
jmp
ret
pop
orps
sbb
push
inc
inc
test
shrl
dec
jno
jae
cmc
add
orb
test
cs
fiadds
push
cmp
idiv
decb
inc
jo
jns
out
pop
imul
push
leave
xlat
jae
icebp
mov
fs
ss
xchg
fs
jmp
push
sahf
jne
icebp
sub
xor
hlt
xor
xlat
jmp
insl
xchg
inc
add
pop
jno
pop
insb
mov
mov
lock
insl
out
popf
push
or
fdivs
mov
dec
push
sub
cmpsl
lret
inc
lock
xchg
lds
jp
xlat
mov
mov
sbb
hlt
push
or
or
cmpsb
arpl
jle
jbe
pop
lds
aas
inc
and
loopne
sbb
in
mov
dec
xor
jle
movsl
int
xor
sbb
mov
pop
insb
pop
mov
pop
sbb
push
inc
xchg
fnstsw
cwtl
pusha
mov
in
in
out
jnp
insb
mov
jae
mov
push
adc
xchg
mov
sahf
push
mov
orb
call
insb
clc
vphaddbw
xor
ficompl
cltd
popa
pop
sbb
in
icebp
dec
pop
dec
xor
fiaddl
ds
es
lock
sbb
pop
call
inc
nop
repnz
cli
daa
sahf
push
aam
stos
aaa
loop
test
add
mov
popf
dec
into
fs
xchg
enter
lds
fsts
xchg
xor
mov
sub
inc
jae
push
xor
fbstp
int3
dec
pop
les
imul
push
jmp
cwtl
sbb
popa
aaa
push
mov
add
jp
cmp
sahf
mov
sub
mov
mov
add
lret
testl
imul
repnz
and
daa
repnz
ljmp
cmp
xchg
out
pop
movsb
mov
push
fistpll
test
mov
push
lock
pop
outsl
test
xor
lock
mov
popf
fs
aaa
or
jne
adc
adc
scas
mov
leave
movsl
stos
les
xor
pushf
enter
and
adc
das
or
mov
movsl
addr16
xchg
fmuls
add
outsb
fwait
sub
clc
inc
lahf
nop
push
inc
sub
jmp
add
inc
test
ret
cmp
out
mov
ret
es
cmpsl
inc
cmc
xchg
std
mov
add
jecxz
jo
xor
scas
ret
cmp
insl
lret
mov
push
addb
xchg
adc
mov
or
lea
push
sub
pop
mov
jl
jp
or
cmp
repz
mov
cmp
sbb
mov
pop
insb
inc
into
imul
repz
xor
mov
sub
sbb
and
xchg
pop
jae
and
fwait
repnz
fldt
cmpl
push
dec
jbe
cs
push
add
xchg
xchg
pusha
leave
test
loope
test
out
out
hlt
jne
mov
je
gs
in
cli
aad
mul
icebp
aad
jo
imul
sbb
inc
adc
xchg
rclb
xchg
sarl
jg
cmp
je
fstps
setns
add
testl
in
adcl
xchg
in
xor
decl
ficomps
push
lahf
mov
mov
push
repz
dec
testl
xor
aaa
cmc
jns
pop
and
jbe
dec
inc
std
popf
pop
inc
ljmp
or
orb
in
adc
test
cmp
lahf
add
sbb
js
mov
push
dec
loop
cs
es
sbb
cli
add
sub
jle
mul
add
aas
cmpsl
cli
sahf
out
jns
insb
mov
mov
jo
jnp
push
and
test
cmp
sbb
int
add
jne
insb
loope
xchg
mov
xchg
pop
mov
pop
call
sbb
fwait
xor
out
inc
scas
xchg
jnp
add
outsb
shlb
sbb
xchg
das
adc
sub
xchg
pushf
inc
addr16
pop
cmp
ljmp
inc
jecxz
inc
ja
lcall
xor
shrb
cmc
sub
pop
lea
pushf
push
out
loop
fcompl
fwait
push
or
inc
incl
mov
jbe
dec
mov
fdivrp
sub
loope
lods
dec
arpl
xor
xor
nop
cltd
xchg
jge
cs
out
clc
xor
into
repz
dec
not
mov
push
popf
orb
std
ret
push
cwtl
in
add
inc
cmp
push
and
adc
test
mov
add
leave
mov
adc
das
jae
leave
ret
inc
rorb
mov
leave
mov
insb
pop
fsubl
jp
jmp
cs
movsb
and
mov
xor
mov
dec
cmp
insb
fiaddl
sub
mov
ljmp
or
sahf
rcrl
lds
cmp
popa
mov
stc
imul
es
cmp
test
mov
pop
sti
out
jle
and
and
int
push
mov
pop
mov
loop
xlat
lds
xchg
into
mov
sbb
inc
cmc
shll
loopne
mov
and
or
mov
cs
adc
fs
inc
movsl
pop
adc
lcall
cld
push
cmpsl
rclb
nop
push
push
rolb
push
sub
cwtl
sbb
jae
mov
sub
fs
jb
test
and
mov
mov
dec
fs
in
shr
xchg
std
dec
inc
repz
lcall
dec
cmc
rcl
ja
dec
sbb
jp
jbe
pop
pop
pop
mov
aas
lcall
lahf
pop
jmp
sbb
mov
dec
xchg
xchg
mov
push
ficoms
test
in
icebp
cmp
pop
push
push
lcall
mov
adc
lock
les
ss
shll
repz
mull
jmp
pop
adc
mov
shl
out
sub
jnp
scas
pop
jmp
iret
mov
dec
xlat
clc
popf
das
dec
or
pop
stos
fucomip
cmpsb
cmp
mov
pop
cmp
dec
sbb
outsb
shrl
call
rcl
or
lahf
jmp
insb
mov
push
pop
leave
andb
dec
lods
xor
icebp
enter
pop
mov
scas
lea
test
pop
gs
lock
jecxz
fisttps
push
int
daa
jb
pushf
pusha
sub
push
dec
je
lea
add
mov
ja
icebp
xor
loop
sbb
sub
sbb
shlb
mov
jae
repnz
sbb
in
scas
mov
xchg
sub
cmp
incl
in
pop
xlat
xchg
in
cs
ret
lock
or
arpl
stc
loop
pushf
dec
in
mov
inc
ret
cmp
test
mov
fcom
and
add
xchg
xorb
out
jecxz
dec
and
add
lea
fistpl
and
in
jo
cli
mov
jae
movsb
rcll
jno
aad
jmp
xchg
test
push
xor
sub
mov
sbb
sub
cmp
sub
adcl
lcall
xchg
xlat
ljmp
roll
jne
in
fwait
inc
push
es
jo
sub
cwtl
jo
test
cmp
movl
sub
test
lods
fildl
inc
xchg
add
cs
xchg
icebp
dec
inc
test
xor
cmp
push
adc
mov
cld
sub
enter
sub
es
or
mov
adc
mov
mov
push
xor
repz
sub
push
rcrb
loopne
inc
imul
in
insb
cmc
pop
pop
mov
test
shrb
mov
movsl
xchg
xchg
xchg
lea
dec
xchg
cmovo
adc
fnstenv
fidivs
sub
or
push
add
jl
icebp
leave
pop
xor
rcrb
iret
lcall
mov
lahf
fistps
out
and
jp
int3
and
inc
or
test
stc
mov
sub
je
cmc
sbb
xor
lea
bound
data16
adc
mov
jmp
xlat
out
mov
push
jg
daa
pop
sub
pop
loop
insl
xchg
jnp
mov
testb
imul
mov
add
out
pop
mov
jns
mov
ljmp
jo
mov
xor
push
mov
push
pop
or
xchg
push
cld
sub
sbb
mov
cmp
lods
xor
aam
push
adc
ret
test
ja
jmp
fwait
adc
xchg
lret
jnp
addb
in
sub
pushl
pop
fwait
pusha
lahf
pop
and
lock
push
mov
je
dec
test
mov
es
cs
in
cmc
adc
pop
push
andb
pop
test
aaa
sarl
xor
jmp
outsb
dec
gs
sbb
je
ret
push
mov
xor
daa
popf
lods
jae
or
dec
cld
shl
repz
outsb
dec
lods
xchg
orb
imul
test
push
or
lcall
aam
mov
xor
dec
insb
mov
pop
mov
fdivl
mov
mov
neg
jns
pop
push
cmp
mov
add
or
in
ret
push
loop
xchg
test
or
and
cmc
sub
leave
xor
xor
repz
out
ss
mov
cmp
xchg
jnp
jne
jp
pusha
mov
into
and
cmpsb
push
mov
repz
xor
shl
clc
cmp
dec
pop
lahf
stos
mov
cmc
pop
add
sarl
lods
cs
inc
and
gs
xchg
iret
aad
shll
sbb
mov
pop
notb
pop
sub
bound
pop
loopne
inc
mov
push
xor
std
sbb
push
call
jmp
test
mov
movsb
pop
and
ljmp
flds
push
shrl
lahf
and
dec
decb
in
insb
cs
je
lock
pop
jnp
rcrl
mov
jl
lret
out
mov
sub
ret
mov
xchg
jno
sti
cmpsl
std
xlat
pop
ss
lret
xor
shl
pop
push
push
push
mov
ror
inc
repz
loopne
jp
scas
mov
mov
pop
sbb
ret
pop
mov
lods
nop
and
xchg
mov
adcb
push
rolb
ss
mov
sbb
test
cmpl
lahf
jno
mov
mov
adc
ljmp
mov
mov
les
or
xchg
push
int
pop
lds
adc
xor
test
aad
rorb
push
and
pop
pusha
add
or
sahf
fcomp
mov
push
mov
outsb
loope
jge
jle
lock
lcall
push
addr16
imul
mov
sub
xor
mov
ss
test
mov
or
mov
bound
xor
add
fidivrl
clc
stos
setb
cmpsl
ss
mov
pop
pushf
jnp
cmp
test
cmp
mov
roll
adc
mov
and
push
movsb
jno
pop
std
mov
sub
jb
fisubl
pop
and
pop
dec
or
push
ss
int3
aas
into
orb
out
cmp
lret
movsl
ljmp
ss
aas
mov
mov
jae
lods
bound
xchg
outsl
mov
adc
dec
ret
or
inc
pop
sub
pop
sbb
ret
iret
clc
outsl
sahf
lods
and
rcrb
and
or
aam
mov
pop
push
pusha
xchg
ret
lahf
push
sarl
mov
xor
mov
shrl
rclb
movsb
scas
inc
cmp
xlat
and
sbb
pop
push
xor
xchg
xchg
mov
push
rorb
or
lret
in
pushf
test
mov
arpl
gs
jne
ror
push
cs
xlat
pop
dec
fwait
xchg
sbbb
xchg
sub
sbb
inc
les
outsl
fwait
sub
xchg
xchg
mov
movsl
cmp
out
and
cmp
mov
call
shl
clc
push
int3
mov
mov
outsl
jmp
loop
ds
fmul
arpl
push
xchg
push
add
fistps
icebp
loop
mov
dec
xlat
ret
push
in
sub
push
js
pop
out
cmp
lods
icebp
divl
ja
jb
push
xor
iret
xor
fwait
xchg
xor
test
imul
sub
aas
lock
jg
pop
das
repnz
mov
cli
and
enter
fwait
jl
stc
mov
push
adc
out
xor
xlat
mov
bound
cltd
mov
mov
fcoml
xchg
mov
mov
lret
lods
das
gs
cwtl
push
pop
xchg
mov
popa
dec
jp
dec
mov
rorb
pop
mov
xchg
js
cld
inc
or
lahf
push
sbb
int3
jns,pt
jne
push
sarb
xchg
adc
sti
xor
sbb
cwtl
push
inc
ror
lret
dec
iret
in
pop
and
push
push
scas
pop
lods
xor
push
fcomps
cmp
aas
sbb
add
sbb
pop
stc
cmpb
mov
imul
fisubrs
jg
loope
add
fcomps
push
and
push
test
lea
mov
pushf
sar
lahf
pop
fisttps
out
mov
push
mov
icebp
shlb
xor
shr
pushf
mov
xor
nop
cmp
aaa
and
adc
iret
dec
jle
adc
arpl
cmpl
ja
pop
sahf
insb
jg
push
outsl
cld
mov
pop
mov
dec
outsb
in
push
xchg
sub
xchg
jg
adc
add
mov
rorl
lret
mov
repz
enter
stc
nop
lcall
xor
std
and
fimull
or
xchg
sbb
sbb
sub
sti
mov
adc
loopne
pop
sahf
and
bnd
xchg
in
cmpsb
push
jbe
addr16
mov
test
scas
in
adc
cltd
cmp
add
int3
push
aas
faddl
ds
hlt
sti
fcomip
clc
and
or
push
fsts
movsb
and
cmpsl
jae
shl
xor
loop
cmc
movsl
pushf
sbb
xor
pop
scas
mov
jge
mov
sbb
xchg
mov
inc
cs
push
mov
pop
xor
cmp
sbb
test
shlb
xchg
out
add
inc
ja
pop
inc
jnp
dec
icebp
pop
js
mov
pop
xlat
xchg
lcall
inc
lret
pop
and
mov
leave
roll
loop
fdivl
lea
aad
addr16
test
dec
cs
or
fdivrl
or
mov
out
cld
jae
mov
add
cmp
ss
sti
cmc
xor
adc
lock
mov
mov
cmpl
adc
mov
mov
and
jmp
andl
pop
pop
popa
fwait
inc
aas
cmc
lahf
inc
mov
imul
test
outsl
and
jmp
pop
shlb
xlat
and
inc
gs
push
mov
mov
jnp
into
mov
jno
adc
mov
rcll
fs
fldl
fimull
sbb
and
push
outsb
xchg
xchg
fcoml
insb
pop
sub
pop
push
lods
outsl
xor
je
xor
test
pusha
out
fists
fiadds
pop
fwait
mov
loope
or
lds
stos
nop
cmp
arpl
ret
mov
sbb
push
cmp
leave
jmp
push
into
inc
cmp
nop
xchg
pop
sbb
and
ja
jns
or
or
sub
push
es
xor
jmp
push
adcb
or
xchg
xchg
iret
das
movsl
mov
lret
bound
mov
loopew
pop
sbb
decb
sub
inc
movsb
movsb
out
adc
cmp
jae
mov
jecxz
ja
push
add
xchg
and
rorl
mov
jmp
addr16
cmc
imul
dec
mov
out
fs
sub
jl
add
push
xchg
lods
into
mov
sub
and
out
cs
pop
leave
push
inc
scas
jl
sub
and
push
cltd
std
cmp
fcoml
ja
jns
mov
pop
mov
jmp
adc
arpl
in
dec
jg
std
scas
mov
or
cs
ret
jnp
lahf
sub
aas
insl
push
mov
fst
pop
outsl
jp
mov
arpl
dec
into
aas
fidivrs
sub
adc
sbb
cmp
cmpsb
out
insl
mov
push
into
xchg
repnz
or
dec
xlat
xchg
je
cmpsb
jle
mov
jg
jmp
mov
jbe
fwait
cmc
sbb
sub
movsl
sub
pop
jo
jb
xchg
sub
dec
lds
out
jge
iret
adc
into
pop
add
xchg
adc
sbb
imul
jp
cli
push
sbbb
aad
sarb
popf
jns
in
into
push
add
mov
cmpsl
pop
enter
int
inc
out
mov
cmp
sbb
clc
xchg
out
lds
cmpsl
out
pop
or
sub
cmp
sar
lods
fcoml
cmp
fistpll
arpl
in
mov
pop
xor
aad
js
mov
pop
repnz
inc
lcall
pop
in
jne
imul
mov
push
inc
push
sbb
push
dec
gs
fs
or
lods
adc
adc
pop
and
hlt
fstp
arpl
fistpl
mov
movsl
lcall
xchg
pop
mov
in
xchg
push
aas
dec
jge
stos
adc
xor
sbb
xchg
adc
inc
cmp
in
jmp
bound
rorl
sub
mov
jge
test
pusha
inc
xlat
inc
jbe
int
mov
xor
cs
inc
popa
xchg
dec
stos
popa
mov
nop
adc
jmp
xor
dec
sub
lock
mov
add
mov
adc
mov
gs
loope
imull
or
clc
sub
sbb
and
mov
lret
leave
stos
out
pop
cmc
and
push
sbb
mov
test
cli
xchg
xlat
int
aaa
jnp
in
hlt
pop
cmpsb
rolb
push
es
inc
out
arpl
jp
js
adcl
and
test
inc
and
sbb
lods
std
push
push
stc
subl
cmp
sub
mov
dec
into
mov
sub
mov
fiaddl
lods
sbb
xor
sub
ds
mov
add
jbe
sbb
adcb
mov
aaa
add
mov
push
mov
shll
adc
mov
icebp
xchg
pop
adc
inc
lods
sbb
rolb
jecxz
in
inc
pop
lcall
push
fiadds
aaa
out
frstor
popa
xorps
jmp
aas
inc
sub
loope
stos
mov
sub
pop
fiaddl
jb
mov
js
idiv
out
push
in
sub
lods
mov
data16
lods
push
pop
les
mov
or
xchg
cmp
repz
cmp
stc
out
jne
std
mov
push
fld
push
mov
jmp
xchg
shrb
push
imul
push
cmpsw
packssdw
in
lret
test
sbb
or
or
loope
mov
pop
mov
xor
mov
aam
jle
lods
xchg
dec
cmpsb
and
outsb
jp
cwtl
popf
xor
outsl
out
push
call
push
pop
mov
push
loop
psrlq
enter
and
mov
push
fldcw
cmp
adc
mov
loopne
xchg
jo
and
out
xor
and
sbb
adc
pop
roll
fiaddl
ds
test
xchg
jp
leave
or
xchg
jno
in
mov
xor
fstps
fwait
iret
xorl
sub
inc
push
sar
daa
mov
jl
cmp
imul
cmp
repz
sti
loop
lcall
js
stc
out
xor
or
fiadds
mov
ret
push
jl
and
pushf
shlb
sbb
mov
out
cld
push
sub
mov
sbb
test
pop
jmp
data16
movsl
enter
inc
dec
cmp
scas
aad
pop
push
repnz
adc
ss
in
pop
out
rcr
jecxz
rcrl
cmpb
adc
xchg
adc
cli
xor
aas
lock
dec
fistpll
adc
scas
xchg
sub
fildl
sbb
dec
call
in
mov
jmp
inc
add
ds
xchg
jg
jg
adc
shrb
insl
sub
dec
jnp
cwtl
add
pop
xchg
out
ss
push
movsb
pushf
jmp
out
dec
repnz
sub
inc
into
ja
mov
and
push
xor
push
lea
add
subb
pop
xchg
jge
insl
xchg
mov
xchg
mov
dec
mov
ret
xor
sub
mov
jge
sbb
cmpsb
sti
pushf
aam
scas
rol
call
mov
std
xor
fstpt
dec
int3
popf
adc
cmp
inc
lahf
cmp
sbb
gs
cmp
mov
ret
or
add
mov
mov
insl
cmp
cltd
out
stos
les
mov
dec
xchg
int3
call
or
mov
add
sub
shl
dec
lret
cmc
shr
orb
icebp
adc
and
into
cmp
int
adc
xchg
das
mov
mov
inc
mov
jge
cli
adc
adc
push
lods
mov
jmp
rol
in
mov
call
sbb
movsl
dec
addr16
in
decl
adc
je
jge
or
dec
fldt
add
je
dec
sti
mov
mov
mov
int3
mov
mov
mov
pushf
ret
aas
xor
lcall
shlb
mov
sahf
inc
mov
mov
adc
mull
mov
mov
or
pusha
out
icebp
sti
iret
loope
scas
add
push
mov
and
mov
lret
lret
dec
inc
jl
adc
call
dec
test
mov
xchg
test
lret
add
rcrl
dec
fildl
cmpsb
push
test
dec
push
inc
jne
jle
adc
xchg
mov
ret
mov
cmp
jo
mov
push
mov
push
movl
outsl
mov
inc
and
daa
push
sbb
jae
out
lcall
ds
push
jns
inc
loopne
mov
jp
es
sti
cmc
ficompl
js
mulb
sti
xchg
mov
icebp
add
and
mov
and
int3
sbb
push
cli
hlt
clc
pop
adc
ret
and
pop
dec
lret
dec
ret
jg
push
testl
ficompl
mov
out
jmp
pop
inc
sahf
pushf
cmp
pop
push
fbstp
cmpsl
push
cmp
sub
rolb
into
cmp
pop
mov
xchg
adc
std
sarb
aam
pushf
lcall
int
adc
arpl
jle
fimuls
sbb
mov
inc
sti
push
lahf
fs
pop
leave
jp
and
pop
imul
pop
pop
jmp
push
pop
dec
js
movzwl
jne
lods
adc
std
test
loope
ficompl
mov
mov
mov
mov
dec
imul
gs
or
lcall
fistpl
outsb
mov
sarl
aas
outsl
aaa
cmp
ja
push
fcmovne
fcomps
fs
sbb
loope
jbe
push
mov
addr16
cmpsl
sub
xchg
daa
adc
insl
mov
add
mov
jnp
loope
shr
jno
ljmp
addl
das
icebp
push
popf
add
hlt
add
dec
jmp
push
xchg
add
out
loope
cld
insl
mov
mov
out
rcll
movsb
jle
fiaddl
test
push
or
mov
in
aas
jl
mov
std
pop
fstps
stos
popa
fidivrs
or
pop
mov
mov
stc
aad
xor
push
dec
xchg
nop
mov
cmpl
test
aam
adc
cmpsb
xchg
or
idivl
add
push
shlb
mov
xlat
faddp
les
into
pop
pop
inc
sbb
fidivs
jmp
jecxz
mov
mov
sub
dec
jno
test
pop
lds
xchg
outsb
aas
cmc
int3
or
ja
pop
push
xor
sub
xor
mov
into
mov
jne
bnd
fs
push
pop
add
enter
jnp
ss
rcl
js
xor
sti
push
adc
push
testl
sbb
daa
rcrb
push
pop
movsl
pop
dec
int3
adc
in
fcompl
xlat
jp
nop
in
adc
in
js
fldl2e
sbb
bound
dec
mov
xor
add
sub
scas
inc
data16
out
pop
out
stos
mov
jbe
mov
lds
mov
mov
divl
and
test
out
add
jmp
dec
inc
fldenv
enter
fnstsw
fidivrs
pusha
lret
test
fisubrs
cli
sbb
insb
bound
into
iret
adc
cmp
add
xchg
adc
pop
fs
cli
aad
fcoml
cmp
scas
fistpl
mov
stos
pusha
and
sbb
cmpb
out
xor
cmp
push
xlat
dec
mov
aad
lahf
popa
inc
jg
stc
xor
fadds
mov
push
movsb
push
fildll
push
ljmp
pop
pop
mov
sbb
sahf
cltd
jmp
divl
mov
cmp
addr16
enter
mov
enter
adc
mov
scas
mov
push
es
jecxz
xorl
mov
hlt
adc
aas
xchg
fistpll
inc
loopne
cmp
cmp
jecxz
mov
pop
mov
or
sbb
add
or
push
push
cld
cmp
scas
jle
mov
pusha
fnstenv
mov
lret
scas
sbb
mov
dec
gs
jle
cmpsb
inc
pop
inc
xchg
sub
push
lea
jg
std
xchg
jmp
movsl
sub
jge
pop
pop
test
test
leave
jb
mov
inc
jo
sbb
jae
mov
mov
enter
mov
fldenv
mov
in
dec
imul
les
push
mov
adc
scas
dec
adc
pop
mov
out
in
pop
outsl
sbb
and
xchg
and
iret
int3
cmpsb
jae
xchg
rol
adc
jae
xor
jge
imul
xor
dec
or
ficoml
adc
xor
ja
and
sbb
add
aam
in
lcall
mov
jns
adc
std
xchg
in
xchg
sub
or
mov
or
mov
loopne
lods
fisttps
outsb
or
ja
mov
cld
adc
pop
or
sub
adc
js
stos
inc
pop
jl
ficompl
dec
mov
mov
popf
pop
int3
and
pop
jns
dec
jae
call
jmp
insl
mov
mov
aas
and
mov
adc
hlt
inc
stc
push
dec
and
insl
push
mov
add
inc
into
mov
cmpsb
push
xor
fcomps
add
adc
repz
gs
inc
sbbl
cli
in
adcl
into
add
or
stos
dec
stos
fcoml
scas
add
push
mov
mov
sbb
inc
cmp
or
push
xor
cltd
add
inc
leave
pop
js
rolb
nop
mov
fisubl
and
pop
mov
pop
call
int3
rcrb
rcrb
out
cmc
cmp
shlb
lods
sub
mov
sti
xchg
test
xchg
fs
inc
sub
sti
push
stc
sub
push
or
loop
lret
jge
test
pop
add
push
test
adc
cltd
mov
jns
sub
cmp
xor
mov
andl
or
orb
ds
add
xchg
sti
mov
lods
sbbl
add
mov
pop
rcrl
add
ljmp
sub
dec
je
in
dec
cmp
arpl
dec
std
or
int3
sub
sub
add
jns
jp
jecxz
pushl
repz
repz
out
xor
inc
add
pop
mov
jle
dec
push
xchg
lea
jmp
xchg
cmp
sarb
iret
fptan
inc
hlt
xorl
je
inc
sub
add
lea
mov
mov
adc
sahf
xchg
fmuls
xchg
dec
xchg
mov
cmp
lea
and
adc
push
jecxz
pop
jne
push
movsb
bound
push
movsl
push
pop
lds
jns
daa
lock
xchg
inc
insl
sahf
jl
dec
fnstenv
bound
sub
das
out
mov
mov
inc
mov
jbe
loopnew
xchg
push
push
sub
outsl
bound
or
out
daa
jnp
cmp
pop
xchg
dec
xchg
loopne
adc
jns
dec
subb
fbld
push
inc
test
scas
inc
ret
negl
stos
and
movsl
popf
ja
lea
sub
hlt
xchg
pop
cmc
sub
add
mov
jnp
test
cmp
nop
mov
adc
and
adc
rorl
jecxz
inc
adc
cwtl
pop
shll
sbb
jbe
pop
lret
inc
jmp
enter
mov
lock
andw
mov
test
setge
faddl
pop
xor
pop
loopne
cltd
xor
ret
cmp
hlt
loope
cmp
inc
xchg
frstor
jecxz
in
adc
ret
xchg
adc
out
ss
mov
jecxz
cltd
mov
in
mov
mov
push
arpl
stos
and
push
xchg
movsb
xor
divb
or
and
mov
les
stos
sub
je
mov
jns
movsb
outsl
lret
loopne
aas
push
divl
test
cltd
jecxz
lods
push
pop
add
or
jmp
push
and
and
cmp
xor
push
push
ljmp
shll
sbb
repz
sbb
xlat
pop
fstps
cmpb
scas
jne
mov
jae
in
mov
test
mov
mov
mov
rclb
inc
and
clc
dec
cmc
inc
lret
ds
mov
xor
pop
xchg
les
sbb
cmp
push
adc
xchg
insl
pop
add
inc
out
mov
sub
fistps
jmp
sbb
negb
add
outsl
loope
pop
fmuls
push
push
xchg
shll
mov
pushf
lea
in
sub
pop
mov
push
add
nop
inc
je
movsb
rcrl
pop
mov
adc
repz
cmc
adc
testb
adc
push
jb
int
mov
pusha
pop
out
ljmp
push
jmp
insl
mov
xorb
and
xchg
jo
mov
and
sbb
ss
leave
sbb
pusha
push
xor
and
jle
xor
inc
add
lcall
imul
lcall
arpl
dec
movl
add
cmp
mov
sub
jg
arpl
imul
pop
push
xchg
jge
ret
xlat
aaa
icebp
andl
lea
pop
insl
mov
ret
lcall
push
out
addl
into
ljmp
das
mov
mov
inc
fsubrs
jns
movsl
fdiv
lret
sub
jle
arpl
int3
rclb
lret
and
jns
lock
xchg
push
push
int
mov
sub
fisttpl
outsb
push
mov
into
xchg
mov
pusha
dec
bound
pop
in
imul
mov
jp
shrb
nop
popf
hlt
int3
out
mov
or
xor
cmp
insb
mov
jl
pop
xchg
cli
mov
sahf
movsl
ss
pop
or
xchg
xor
neg
xchg
hlt
pop
dec
call
cmpsl
inc
fldenv
mov
pop
jp
test
push
imull
push
leave
push
je
cld
cmp
mov
jecxz
add
push
loope
mov
pop
sbb
lds
xchg
push
xchg
mov
xchg
aad
test
add
dec
xchg
cli
cwtl
push
lahf
adc
ljmp
rol
imul
sbb
jle
adc
fisttpl
out
popa
pop
or
sbb
mov
loop
dec
mov
sahf
fcomps
and
xchg
test
xor
mov
ret
mov
fdivrs
add
fists
clc
stos
xor
lods
pop
xchg
inc
stc
lahf
xor
retw
adc
jle
pop
xor
insb
mov
mov
mul
cmp
loop
sub
out
adc
pop
notl
ret
jl
xchg
push
adc
xchg
sbb
inc
push
sbb
bound
inc
pop
adc
repz
jns
jle
jmp
and
dec
hlt
fwait
xor
lock
or
test
xor
push
inc
frstpm(287
pop
xchg
mov
aas
stos
out
and
dec
sbb
stc
and
cwtl
dec
ljmp
inc
jns
xor
mull
inc
sbb
nop
sarl
dec
in
sbb
add
and
cmp
pop
mov
test
adcl
lret
mov
or
push
aas
aas
je
call
adc
adc
inc
fisubrs
rcrl
push
push
out
push
sbb
cmp
stos
fsub
add
or
or
mov
mov
mov
jo
pop
ljmp
xor
dec
push
ret
mov
mov
inc
dec
push
jns
divb
sbb
cmp
mov
and
xor
adc
stos
ljmp
pop
xchg
inc
data16
pop
jno
loopne
and
push
cmp
andb
add
sub
or
or
sub
inc
repz
xchg
cmovp
daa
adcb
dec
push
out
rcll
and
in
enter
out
lock
lds
rolb
test
cmpsb
stos
add
dec
mov
xor
or
and
or
in
in
loope
js
mov
pop
sub
rcrb
jg
test
lcall
aaa
lahf
inc
sti
sbb
popa
sub
rclb
xchg
xchg
sbb
cmpsl
cltd
mov
push
ljmp
in
jmp
push
adc
mov
out
jne
and
xor
push
jl
pop
add
jge
xor
lret
stc
test
or
cmp
mov
out
mov
fisttps
sti
sbb
mov
mov
aaa
inc
cmp
jge
loope
ds
andb
push
push
ss
cltd
and
jg
in
pop
je
std
daa
pop
ljmp
cli
imul
out
cmp
test
inc
ss
dec
mov
fisttpl
test
sbb
das
push
ja
cli
inc
stc
mov
mov
sub
loope
or
lcall
lock
in
psrlw
sarl
jmp
xchg
fiadds
sub
inc
sub
sbb
pop
dec
rcl
leave
cmp
mov
idivb
sub
mov
pop
or
adc
sub
push
or
push
subl
out
mov
rcrb
lcall
mov
arpl
pop
sub
mov
in
imul
das
imul
ret
sbb
scas
mov
into
scas
hlt
sbb
mov
inc
mov
mov
mov
pop
cmp
fsubs
mov
or
outsl
adc
dec
pushf
cmp
cltd
pop
jge
adc
mov
movsl
fsubrl
out
orb
arpl
lods
movsb
mov
ja
mov
in
inc
sbb
in
mov
out
and
mov
add
pop
xlat
repz
push
pop
xor
divl
js
or
cmp
pop
pop
popa
aad
pop
pop
testl
test
rcrb
mov
cmc
out
mov
aaa
push
mov
jp
xchg
testl
sbb
jnp
push
sbb
jp
mov
insb
in
inc
sbb
popf
shrb
pop
inc
push
dec
pop
lea
mov
and
popf
movsb
mov
mov
addr16
sub
rcrb
add
in
leave
pop
mov
cmp
and
mov
pop
cmp
cmp
es
cvtps2pd
cwtl
movl
lahf
dec
xchg
stos
mov
sub
dec
or
mov
test
adc
in
mov
or
movsb
lret
sub
mov
pop
in
sar
aas
test
jmp
jae
rorb
jle
das
xchg
pusha
pop
mov
mov
sbbl
lahf
out
push
es
test
icebp
push
dec
jecxz
or
gs
jle
clc
and
dec
mov
push
sbb
sahf
inc
pop
or
shrb
rcrl
adc
test
push
push
xlat
and
daa
xchg
push
cs
pop
xor
jnp
inc
push
cmp
jmp
test
or
jae
lret
or
mov
pop
movsb
cmc
inc
push
lods
es
pop
cmp
jle
sub
mov
test
adc
push
aas
test
call
push
scas
lahf
cmpsb
push
aas
jnp
cwtl
scas
scas
loope
sbb
mov
repz
das
push
add
and
js
push
push
fists
adc
mov
xchg
insl
xor
pop
ficoms
mov
cmp
sbb
dec
mov
push
mov
flds
jno
push
out
dec
test
pavgb
inc
mov
movsl
fcompl
mov
sbb
add
into
or
xor
mov
mov
orl
cmp
sub
and
lea
in
add
xor
push
shlb
or
loop
fwait
push
sbb
lret
jbe
fwait
cltd
inc
arpl
std
aam
movsl
jmp
call
stos
inc
pop
add
jne
or
mov
push
sbb
cmp
sub
fsts
add
jmp
inc
leave
call
add
or
fcom
or
lret
lcall
push
and
incl
mov
add
ret
xchg
mov
and
scas
fsubrs
inc
int3
mov
mov
lods
repz
add
pop
nop
mov
add
push
and
add
xlat
test
dec
rcr
cmpb
lods
adc
xchg
sbb
ss
movsb
hlt
mov
cld
rolb
or
add
lods
in
movsl
cmpsb
inc
inc
add
xchg
cmpsl
push
jb
push
fdiv
insl
incb
mov
cli
das
nop
aad
cmp
jo
xor
fidivl
ss
jge
push
mov
pop
and
inc
mov
mov
inc
pop
inc
dec
lds
mov
sub
push
lods
leave
mov
xor
shlb
xor
mov
int3
stc
dec
int3
inc
mov
inc
or
mov
pop
jns
or
mov
popa
cmpsl
out
add
in
cmp
dec
stos
stos
and
mov
arpl
mov
call
leave
mov
sbb
imul
andnps
pusha
pushf
cmpsl
add
sahf
cmc
ljmp
sahf
mov
add
movb
mov
cmc
add
add
mov
xor
mov
aaa
sub
test
sbb
cmc
push
dec
pop
mov
xor
clc
xchg
sbb
xor
inc
lcall
prefetchnta
fisttpll
rcr
mov
xor
cmovne
mov
cmpsl
insl
test
fnsave
ss
in
sti
push
scas
xor
daa
adc
pop
mov
inc
notl
xlat
stc
xchg
jnp
xchg
mov
test
loope
pop
pop
popf
mov
dec
ret
ja
fistpll
xchg
cmpsb
in
popf
pop
lar
and
sbb
mov
sub
lcall
push
cli
mov
jge
inc
lretw
shll
jle
sub
add
movsb
lock
push
lcall
add
test
mov
in
imul
aaa
jl
insb
out
cmp
push
std
push
sbb
inc
xor
and
and
xchg
push
out
enter
dec
in
clc
in
out
push
or
in
xor
inc
pop
enter
dec
jnp
or
out
pushf
jne
in
mov
or
stc
loope
pop
sti
cmp
xchg
in
in
jl
mov
gs
les
jl
mov
movsl
push
sub
push
lret
dec
inc
aas
ret
mov
jecxz
mov
xchg
fs
push
lea
mov
xlat
movsl
xchg
pusha
adc
cmp
sbb
insb
cs
mov
xchg
cmpsl
jns
rorl
add
rcrl
mov
jne
adc
mov
xchg
out
xchg
cmp
sarb
adc
pop
lret
and
sbb
cs
mov
dec
push
or
sub
sub
jecxz
call
std
cmc
mov
dec
lcall
out
push
rorb
xor
lret
mov
repz
adc
shlb
cmp
pop
cmp
or
in
js
int
aas
and
jmp
jae
fisttpll
xor
fistpl
xchg
add
loop
mov
js
movsl
inc
dec
scas
outsb
inc
inc
adc
mov
leave
cltd
sbb
xchg
mov
dec
inc
scas
ss
cmp
xchg
les
jecxz
or
sub
push
stos
cmpsl
insb
pop
pop
sbb
push
inc
or
xor
punpckldq
fnstsw
ja
out
add
jbe
es
push
call
bnd
lods
xchg
aam
dec
lahf
enter
mov
stc
xor
fldt
push
inc
fstpt
sbb
xor
cmp
dec
cmp
mov
dec
lahf
xor
clc
sub
ja
iret
loop
xchg
test
addr16
mov
mov
out
dec
mov
push
pop
add
pop
push
in
xchg
movsl
mov
adc
jge
dec
hlt
lock
fmul
leave
push
es
sti
mov
addr16
xorl
sbb
xor
pop
mov
mov
out
pop
dec
sub
jmp
mov
cs
push
lock
imul
or
xor
and
push
cwtl
xchg
dec
and
fsubrs
add
and
fdivl
sub
pushf
das
jp
fdivrl
mov
push
fldt
idiv
test
xchg
stos
dec
push
sub
adcb
test
in
rcr
fidivl
and
aam
mov
jns
je
jno
xchg
sub
xchg
mov
xor
lret
mov
std
sbb
lcall
test
jb
ss
xchg
add
mov
sub
fsubrp
cmp
push
mov
or
jbe
adc
or
inc
push
mov
loopne
mov
in
jle
and
out
add
andl
xor
inc
push
jl
jl
xor
mov
jnp
push
movl
dec
cltd
pop
and
pop
ds
test
repz
or
xor
push
iret
call
daa
xor
cwtl
loop
push
sbb
nop
xchg
sub
fildll
cs
ljmp
mov
mov
push
push
jl
sti
sub
and
mov
sahf
cs
mov
aaa
stc
out
lcall
lods
xchg
inc
mov
pop
mov
iret
push
cmp
jno
jne
dec
push
and
fistpl
rcl
insb
inc
notl
popa
mov
xor
pop
xchg
aas
lds
xchg
mov
lret
lods
push
cmp
inc
sub
sbb
mov
sbb
xchg
pop
repnz
mov
pop
adc
imul
lret
mov
pop
mov
in
pusha
or
clc
mov
ds
adc
dec
jg
inc
mov
or
scas
mov
mov
mov
stos
mov
mov
adc
outsl
push
into
mov
ss
lods
rcrl
push
cmp
pop
jno
mov
imul
daa
sar
inc
out
jle
mov
test
pop
jecxz
ret
fmull
push
mov
or
jmp
lods
je
push
fsubrp
movsl
fs
cli
ljmp
in
bt
push
cld
push
in
sbb
adc
imul
inc
xor
je
cltd
clc
xchg
ret
mov
pop
mov
in
adc
iret
and
divl
fs
lret
std
fsubs
inc
loop
ja
cmp
mov
sub
cmp
mov
fwait
xor
push
push
in
dec
aaa
lahf
cltd
pop
divb
and
dec
mov
je
dec
lea
loope
mov
stos
out
mov
push
jne
fistpl
or
sub
pop
mov
mov
push
add
lcall
out
ds
insb
ficoml
out
fs
inc
jecxz
push
movsb
mov
aad
lods
insb
adc
add
out
insl
neg
mull
ljmp
js
loopne
ret
ja
fwait
mov
pushf
dec
pushf
adc
push
pop
push
into
ljmp
mov
in
push
fisubs
std
mov
mov
xchg
jg
pop
ljmp
in
shlb
xchg
lret
and
sub
es
mov
pop
lcall
dec
mov
sbb
ljmp
push
mov
add
xor
repnz
stos
mov
mov
loop
push
out
xor
test
testb
mov
mov
sbb
cmp
dec
iret
or
repz
cld
fbld
pushf
sbbb
jg
cltd
xchg
pop
sub
call
mov
shll
sti
iret
shll
pop
xchg
push
movsl
mov
orb
fsubs
xchg
inc
cli
inc
adc
mov
pop
mov
mov
jbe
cmc
inc
mov
inc
and
icebp
mov
push
add
pop
aaa
test
pop
mov
call
icebp
lcall
inc
push
jp
sbb
sub
jecxz
pop
jg
cli
adc
arpl
outsl
lret
sbb
test
and
addr16
fcmovbe
testb
push
cs
in
xor
add
push
adc
push
sbb
rorb
pop
cmp
inc
in
xchg
enter
inc
xorl
jo
jbe
inc
call
cmp
adc
xchg
inc
neg
jo
fsts
cmp
sbb
push
sub
shrl
scas
pop
xchg
inc
dec
pop
mov
dec
fsts
sbb
lock
cs
xorl
cmp
lcall
mov
shlb
push
fisubl
in
jecxz
sbb
lcall
fsub
dec
nop
push
test
xor
mov
jns
fldenv
mov
ffree
mov
jbe
mov
outsb
ja
xchg
sub
inc
not
jnp
les
cmp
aaa
movsl
dec
jae
push
leave
sub
mull
or
xor
sbb
fs
xchg
rcll
fdivrl
jg
push
mov
sub
xchg
mov
bound
xor
mov
data16
jbe
sti
lret
mov
outsl
into
sbb
out
push
repnz
or
rorb
mov
xor
enter
adc
mov
nop
stc
test
pop
std
std
dec
xchg
ljmp
xchg
in
scas
adc
inc
rol
cmp
add
sub
jo
ss
pop
add
xchg
mov
fdivl
inc
aaa
jmp
sahf
fldl
insl
push
clc
test
cmp
in
adc
xchg
psraw
sub
cmp
sbb
jmp
mov
sbb
call
inc
pop
andl
cmp
repz
mov
jg
cltd
jmp
icebp
mov
xchg
test
imul
daa
and
xor
lea
sub
enter
jg
push
aaa
ret
jb
xchg
jecxz
jne
sbb
sub
outsl
cmpsb
pop
mov
sbb
mov
popf
xchg
pop
jo
popl
dec
and
cmc
jl
lds
int
push
clc
outsb
daa
and
out
dec
lds
and
movsb
mov
mov
adc
in
addb
repz
dec
sbb
fbld
pop
cmp
roll
mov
push
pop
dec
and
movsl
mov
pop
pop
mov
pop
fcomp
inc
repz
xchg
pop
jmp
dec
out
xor
imul
jns
cs
addr16
add
out
ret
lret
lea
pop
loope
sti
lret
push
add
dec
repz
sub
xchg
add
rorl
lret
jp
scas
aam
inc
fwait
les
push
mov
decb
mov
into
fcoms
mov
insl
xorl
aad
xor
pop
dec
lret
cli
test
cmp
inc
jae
xor
int
xor
dec
cmp
or
sbb
mov
inc
mov
aaa
sbb
dec
dec
add
lahf
mov
out
dec
cs
inc
ret
sbb
nop
outsb
jb
adc
dec
mov
loopne
popa
pop
hlt
sbb
je
mov
addl
mov
push
push
data16
pop
push
lret
xchg
call
scas
jne
push
aam
jb
pusha
into
aaa
pop
dec
out
or
arpl
jge
fsubrs
orb
inc
cmp
stos
cmp
das
popf
adc
int3
data16
or
je
mov
movsl
mov
mov
stos
dec
mov
popa
data16
imul
into
push
or
orl
pop
es
and
decl
or
xchg
call
sahf
cs
inc
clc
cld
mov
loope
or
sub
cmp
aam
push
xchg
popf
push
jmp
fwait
xor
shr
lret
mov
out
mov
out
in
adcl
mov
gs
movsl
push
test
out
inc
nop
ficompl
pop
pop
cmp
mov
xchg
push
daa
adc
scas
popa
jnp
and
insb
cmp
add
adc
scas
or
loope
adcl
mov
mov
or
aam
scas
sbb
pop
sub
xlat
movsb
mov
adc
in
mov
xchg
sbb
rorb
pop
adc
cwtl
stc
dec
mov
adc
decb
xor
xchg
pop
xor
rcrl
adc
mov
mov
and
lods
xchg
mov
shll
jns
cmpsb
add
cmp
lock
adc
cmpsb
xlat
lcall
pop
sub
fstpl
push
xchg
cmp
lahf
mov
sbb
xor
push
ds
jge
sbb
ds
push
mov
adc
arpl
dec
js
mov
dec
ds
dec
jmp
call
aas
mov
push
leave
fcmovnu
xchg
popa
js
test
jb
out
push
nop
mov
lcall
or
fistl
stos
pop
add
xchg
cmc
jge
nop
mov
push
movsl
sbb
movsl
movsb
xchg
loopne
jl
enter
pop
les
lods
sahf
mov
out
mov
dec
mov
cmpsl
imul
mov
dec
ret
ret
jmp
repnz
lods
cmp
add
inc
and
mov
push
pop
rcl
xor
outsl
mov
iret
inc
jae
cmp
jnp
and
sub
sbb
sub
scas
out
sub
or
inc
or
inc
icebp
leave
test
aam
inc
adc
xor
lods
push
jno
pop
or
repnz
pusha
sub
jge
popa
in
xchg
jb
js,pt
xorb
out
sbb
or
ror
lret
fimuls
sbb
inc
data16
daa
dec
pop
adc
mov
shrb
jae
adc
push
sti
cmp
sub
jno
xchg
int
xor
mov
or
cmp
repz
push
inc
mov
push
jno
cmpsb
jbe
std
sbb
mov
addl
es
xor
sub
jbe
pop
mov
xor
test
test
jae
ret
lds
adc
aad
frstor
mov
mov
mov
mov
and
sbb
rcll
cwtl
and
divb
ret
adc
lret
outsl
lret
addr16
arpl
lock
lea
ss
mov
mov
imul
inc
pop
xchg
sbb
lret
push
pushf
mov
addb
swapgs
sbb
movsb
sbb
mov
dec
outsb
sub
xor
stc
xor
mov
pop
aas
dec
inc
mov
fwait
cmp
fst
dec
fdivrs
das
push
data16
cmp
mov
mov
pushf
loopne
aas
out
ret
das
fsub
jnp
xchg
movsb
nop
jmp
ds
jnp
xor
inc
scas
add
sub
push
daa
out
sbb
add
xor
jmp
cmpsb
out
daa
stos
dec
clc
outsl
andl
push
xor
fs
and
push
cmp
sub
in
jmp
lcall
fs
sbbl
mov
sub
inc
pop
out
out
xorb
or
or
adc
hlt
addr16
push
xor
pop
cs
sub
in
xchg
int3
mov
outsb
ss
in
lea
outsb
and
pop
push
sub
cmp
push
ja
inc
icebp
mov
mov
cmp
lods
movsl
repnz
dec
xchg
cmpsl
xor
or
ja
fsubs
popa
and
rolb
test
loope
sub
sbb
ja
stc
ljmp
pop
lcall
shl
mov
fldcw
aam
ss
dec
xchg
pop
xor
mov
pop
and
pop
jmp
call
in
sbb
jecxz
cmc
xor
inc
subl
xchg
push
sarl
xchg
test
push
mov
xchg
in
jge
repnz
scas
cmp
popl
mov
add
xchg
xchg
addr16
divl
aaa
pop
out
jle
aam
shr
lret
movsl
xor
cmp
ja
add
clc
int
pop
pop
mov
clc
popf
push
repnz
lahf
cmpsl
inc
negb
rorb
sahf
dec
mov
repz
or
cmpb
xchg
add
cwtl
jmp
or
call
in
jne
pop
pop
addl
pusha
jmp
mov
outsb
and
gs
jnp
daa
roll
mov
and
mov
xlat
or
je
xlat
sub
iret
popf
pop
loop
dec
cmp
loope
add
stos
movb
sbb
iret
lret
gs
sbb
js
loope
inc
jp
pop
pop
add
pop
pop
fs
mov
push
mov
hlt
outsl
add
jg
test
cs
xchg
int
xchg
rcrb
ret
push
hlt
outsb
int
sbb
scas
sub
data16
aaa
push
inc
cmp
fcom
push
aaa
lods
or
in
lret
loope
gs
cld
popf
mov
rol
scas
pop
mov
mov
test
jae
shll
add
pushf
add
fwait
jmp
lods
push
jl
sar
push
sbbl
inc
sub
xchg
ljmp
lret
and
iret
xlat
mov
lahf
es
stos
insb
mov
xor
idivl
adc
mov
mov
ljmp
or
cltd
sti
mov
loopne
xchg
lods
and
push
push
jg
outsb
xor
add
xchg
xchg
je
ud2
popa
adc
cwtl
push
mov
jae
dec
and
ljmp
shll
jne
das
cmp
cmp
ljmp
cmpsb
dec
mov
jle
add
mov
hlt
mov
mov
bound
bound
das
rorb
enter
lcall
sub
xchg
inc
push
mov
xlat
jmp
xchg
bound
out
jmp
lods
std
add
mov
jmp
push
xchg
inc
lcall
or
push
mov
imul
mov
pusha
movsl
mov
mov
pop
push
imul
clc
pop
lods
movsl
mov
sub
leave
loop
pop
mov
call
imul
mov
clc
pusha
imul
mov
mov
cmp
pop
insl
lea
in
test
fdivp
fwait
lock
js
bound
insb
jecxz
shrb
popa
adc
sbb
and
xchg
addl
addr16
movsl
xchg
xchg
mov
dec
loope
pop
lret
push
test
or
adc
mov
fdivrs
adc
jg
mov
sbb
xchg
xchg
hlt
loopne
cmp
push
add
adc
mov
test
scas
cmp
aad
push
and
adc
cmp
pop
jl
jg
adc
xchg
xchg
in
out
mov
sarb
mov
int
jp
ds
loopne
cmp
add
mov
dec
insl
jno
sbb
pop
xor
imulb
imull
jge
in
popa
test
notb
xchg
jecxz
sub
sbb
outsb
int3
inc
popf
xchg
out
xor
or
mov
mov
mov
pop
and
cmpsb
aas
dec
jae
inc
mov
mov
mov
addb
out
inc
xor
dec
fidivrs
sub
dec
insl
outsl
and
push
test
stos
lods
jle
xor
ss
pop
jbe
cld
fs
fdivr
adc
xchg
jns
xchg
test
aad
mov
insb
shlb
pop
fldcw
pusha
and
fucom
repz
jmp
cmp
or
lret
inc
cmpsb
incb
add
sbb
movsb
inc
xor
sbb
cld
add
mov
arpl
jle
rcll
cltd
and
int3
lret
iret
mov
aas
pop
dec
mov
xor
je
scas
mov
out
fcompl
jae
jns
test
sbb
loopne
cli
push
adc
sub
jb
push
add
xchg
ffree
leave
pop
or
pop
pop
lds
mov
lcall
loope
cmp
sbb
push
jae
in
mov
cltd
mov
insb
enter
dec
ljmp
add
push
xchg
xor
sub
lock
into
enter
cmpsl
sbb
adc
pop
outsl
pop
cli
sub
sub
push
inc
mov
insl
jl
int
lea
ljmp
dec
je
jnp
cmpsb
hlt
push
mov
cmc
jnp
fcompp
test
jb
pop
mov
ds
stos
mov
lods
ss
xchg
mov
mov
mov
push
xchg
cmp
lods
ret
ja
lods
fstps
js
je
in
adc
call
fwait
mov
daa
in
imul
inc
lcall
push
nop
aad
sub
lods
mov
mov
push
in
test
xor
pop
pushf
sub
ret
nop
inc
aas
cmpsb
ret
in
jmp
or
shlb
inc
enter
test
push
sti
dec
outsl
push
xchg
mov
dec
sbb
addr16
mov
test
hlt
les
std
pop
sbb
gs
inc
dec
jo
mov
push
cmp
lret
xor
popf
add
imul
add
sahf
and
or
mov
xor
imul
mov
insb
aas
push
mov
scas
and
dec
mov
bnd
out
mov
pusha
push
test
cltd
inc
and
mov
mov
ret
jle
test
xor
aam
push
mov
hlt
shr
sub
push
daa
cmp
add
loope
movsl
rclb
or
repnz
or
cmp
cld
sbb
les
and
test
mov
into
push
lock
or
and
das
aam
jns
mov
sbbl
jne
adc
cmp
mov
sbb
add
mov
sbb
add
cmpsl
jno
mov
mov
ljmp
push
jg
fsubs
aad
sbb
or
push
pop
xchg
sarl
or
cmpsb
movsb
sub
xor
mov
inc
dec
cld
or
std
jg
rolb
and
loopne
pop
ret
bswap
sbb
xchg
fs
add
xchg
popa
jmp
fistpll
loope
pop
mov
xlat
jne
sbb
in
xchg
jge
adc
pop
pop
xor
orb
push
lods
fistps
repnz
lods
sbb
add
jnp
push
sti
fimull
out
xchg
shl
dec
test
in
lret
pop
repnz
daa
pusha
rclb
dec
lea
sub
mov
mov
rorl
insl
in
out
mov
xchg
out
cmp
jae
fdivl
add
into
pushl
jecxz
mov
cltd
add
mov
cwtl
dec
and
lods
lret
sub
xchg
xchg
inc
scas
xor
bndldx
scas
inc
push
stos
sbb
push
push
scas
pusha
cmp
push
adc
jo
std
dec
xchg
enter
aam
push
int3
push
adc
int
xchg
and
xchg
jae
inc
xor
jp
cmp
shr
mov
sti
xor
mov
jle
mov
js
lds
pop
lret
ret
xchg
mov
fildl
and
int3
pop
mov
test
cs
add
movsl
pop
jecxz
cmp
outsb
lods
add
add
shrl
out
push
daa
lret
inc
push
aam
mov
sti
jmp
xor
push
add
testl
dec
rcrl
and
xchg
lods
lods
fimull
pop
insl
cmp
popa
xchg
sub
shlb
pop
add
or
pop
aad
jnp
or
or
xchg
les
in
sbb
gs
ljmp
mov
outsl
sub
inc
cmpb
notl
into
sbb
idivb
dec
sub
rcll
pop
and
or
out
mov
sbbl
lret
xchg
iret
std
add
lahf
mov
sub
fnstsw
cwtl
lea
int3
imul
jbe
arpl
jnp
mov
adc
cmp
pop
push
and
and
imulb
loopne
pop
pop
jle
mov
dec
imul
movsl
ficompl
rcrl
pop
fs
xchg
adc
or
addr16
add
or
cmpsb
fwait
clc
push
lcall
out
mov
das
imul
movsl
iret
rcrb
sti
push
lcall
mov
mov
add
or
xchg
sbb
ja
sbb
push
xchg
imul
les
push
cmp
dec
scas
sbb
jl
repnz
loop
roll
loopne
out
clc
mov
jecxz
mov
jp
add
loop
fldl
aas
adc
inc
pop
lock
mov
mov
loop
je
jne
pop
add
add
lods
pop
jnp
push
rorl
data16
call
dec
jle
in
adc
push
xchg
mov
andb
pop
cmp
push
imul
add
dec
insl
insl
insl
mov
mull
into
xor
leave
mov
in
add
pop
test
mov
or
xchg
sub
add
lcall
and
push
daa
pop
lock
pop
or
mov
dec
add
jecxz
inc
fwait
add
push
movsl
xlat
aaa
scas
lret
sbb
add
das
inc
xor
daa
jno
mov
mov
push
mov
adc
cmp
cwtl
pop
cs
stos
rcll
xchg
outsb
adc
aaa
ljmp
xchg
out
ret
or
cmp
push
mov
lock
dec
adc
cmp
rorb
xor
mov
out
inc
or
push
mov
pushl
loope
push
fnstcw
mov
add
xor
fbstp
leave
xor
add
xor
jecxz
cmp
out
leave
sbb
xchg
repz
adc
aaa
ror
out
jne
jo
and
mov
hlt
fwait
inc
mov
fcmovu
sbb
call
pop
mov
and
fidivs
inc
fwait
stos
decl
les
mov
cmpsb
sub
loop
inc
jle
adc
mov
or
jecxz
ljmp
or
xor
or
in
stos
jno
or
lds
mov
xchg
add
mov
cmp
adc
pop
int3
data16
scas
js
mov
add
sbb
push
mov
sub
bound
xchg
out
popf
int
sbb
sbb
hlt
dec
xchg
leave
mov
out
mov
js
dec
cmpsl
das
mov
fsubs
jmp
xchg
shlb
sub
lret
mov
lods
xchg
int3
nop
inc
push
adcb
int3
das
and
push
insl
xor
adc
stc
popf
inc
add
cmp
jbe
ret
or
loopew
push
xlat
jge
idiv
push
pop
jle
fistl
jb
mov
divb
rorl
dec
movsb
pop
movsb
add
xor
negl
mov
movsl
fisttps
fiaddl
pushl
dec
lods
push
frstor
push
fidivl
or
test
xchg
sub
mov
aad
icebp
aaa
jecxz
and
mov
cmc
fcom
imul
cmp
fwait
push
push
repnz
adc
outsl
cmpsb
scas
pushf
push
jmp
mov
add
or
jg
push
popf
fsubl
mov
ret
adc
fcmovnb
xchg
and
in
or
cs
test
mov
out
xor
insb
pop
mov
adc
mov
je
fucomip
push
lods
cmc
test
dec
sub
xchg
ds
sub
outsb
cmpb
jecxz
pushf
aaa
push
gs
decl
movsb
cmpsl
jne
vandps
stc
es
and
jbe
xchg
jmp
stc
mov
iret
sbb
in
nop
out
push
push
add
mov
cld
cmpsl
out
popa
loope
jp
lret
push
pop
test
pop
in
adc
sbb
cmpsb
test
rcrb
ret
sub
pusha
inc
jnp
push
adc
loop
movsl
mov
mov
rcrb
inc
cmp
loop
jecxz
loop
loopne
repnz
test
scas
inc
mov
fs
in
bound
lea
data16
pop
mov
or
push
inc
jecxz
cld
cltd
insl
inc
fs
jbe
add
rcrl
mov
push
jae
addb
inc
jge
mov
mov
push
adc
popf
jl
in
sbb
mov
cmpsb
or
jo
arpl
stc
push
inc
add
xchg
push
push
gs
push
lods
outsb
outsb
dec
adc
pusha
lahf
mov
mull
xchg
es
int3
sbb
movsb
inc
orb
inc
mov
and
mov
or
mov
dec
jle
sar
test
cmp
xchg
xchg
or
je
xor
xor
dec
int3
push
mov
mov
push
mov
dec
xchg
mov
ds
mov
das
sbb
ror
mov
mull
jl
or
andl
dec
sub
popf
push
aad
cmp
or
bound
addr16
int
popa
inc
insb
push
test
or
iretw
int3
hlt
adc
cmp
sbb
sti
pop
pop
fistps
inc
mov
jae
movsb
cmp
pop
jae
int
negl
xchg
iret
xor
lahf
enter
in
idiv
cltd
mov
cld
inc
mov
push
dec
push
sbb
sbb
stos
test
inc
dec
xor
push
les
stos
cltd
jl
sub
inc
stos
adc
or
sarb
lret
ljmp
push
mov
fistl
insb
mov
leave
mov
add
popa
adc
jns
push
nop
in
xchg
push
mov
in
jae
cmp
cmpsb
jge
pop
pushw
fldcw
std
sti
es
mov
pop
loop
sbb
outsb
lods
icebp
sahf
jp
cmc
les
into
dec
xchg
mov
mov
fwait
jae
stc
dec
jmp
rcl
mov
inc
test
psrlq
or
xlat
in
pop
lds
cmp
adc
testb
mov
jae
bound
add
shrb
cmp
stc
and
mov
shlb
xchg
jnp
mov
dec
enter
pop
jp
pop
push
fisttpl
sti
xor
jp
push
jge
adc
sbb
fnsave
subl
rcrl
adc
inc
push
pop
jle
inc
push
loope
fstpl
fldt
jg
dec
jbe
pop
jbe
jge
cmovb
jge
dec
sahf
add
pop
ja
gs
pop
pop
dec
ret
xchg
out
loop
mov
adc
inc
int
mov
push
xchg
inc
jo
fnstcw
push
les
mov
inc
xor
pusha
pop
xchg
cmp
jge
stos
mov
mov
pop
and
sbb
popa
xor
sti
or
mov
or
cmpsl
lahf
cmp
xchg
mov
ret
sbb
push
xchg
dec
jge
add
jae
ret
jmp
and
add
dec
in
cmp
pop
fistpll
mov
test
and
xchg
cmp
fildll
mull
iret
add
lock
fs
xor
or
cwtl
or
pusha
gs
and
jns
xchg
dec
daa
sub
js
repz
test
sub
int3
jl
cmp
fidivs
pop
adc
imul
cmpsb
ret
jge
shlb
sub
stc
dec
imul
mov
leave
push
or
mov
jno
imul
int3
in
test
or
lds
in
mov
mov
lcall
stos
ficomps
roll
lods
mov
js
jge
dec
adc
leave
sbb
pop
sbb
hlt
repz
mov
mov
lea
pop
pop
sub
pop
push
cltd
push
aaa
add
xchg
push
dec
pop
clc
push
sbb
xor
les
stc
icebp
and
dec
in
jmp
fldcw
adc
imul
pop
js
mov
pop
jns
jnp
pop
dec
iret
cmp
cmpsl
or
sub
lock
ret
dec
es
mov
outsb
jmp
sbb
jg
imul
out
cmp
test
scas
xor
fmuls
jno
jo
sarl
mov
add
es
or
cmp
pop
and
lret
iret
cld
filds
add
mov
es
ror
orb
faddp
movsl
out
out
cs
mov
aad
jne
out
adcl
idivl
jns
div
xchg
push
into
lods
cmpsb
in
fwait
out
and
scas
xor
mov
mov
pop
addr16
or
test
jl
mov
or
xorl
cwtl
arpl
call
pop
inc
imul
ljmp
mov
or
dec
xchg
jnp
xchg
mov
lock
ljmp
or
aam
cli
cwtl
push
andb
mov
out
aad
aas
in
xor
insl
mov
fidivrs
mov
inc
jge
xchg
jbe
outsl
imull
addr16
mov
pop
adc
cs
pop
shlb
adc
push
inc
fldenv
jg
das
sahf
loope
or
div
lcall
inc
lahf
push
cmp
cwtl
push
add
dec
pop
push
out
aaa
push
pop
sarl
in
out
mov
sarl
or
or
pusha
data16
js
inc
pop
pop
add
pop
repnz
enter
mov
addr16
sbb
stos
aam
push
push
sub
inc
ret
shrl
ffreep
daa
xchg
sbb
mov
pop
mov
and
lcall
loope
jl
xor
xchg
pop
jecxz
pop
pop
pop
outsb
jae
xchg
pop
adc
ljmp
pop
fwait
addl
das
rcrb
repz
lods
cmpsl
add
jbe
dec
mov
jne
imul
sbb
mov
cmpsl
ret
push
cli
push
push
mov
pop
sub
jg
dec
mov
dec
movsl
sbb
and
add
rolb
in
js
adc
inc
inc
pop
clc
loop
leave
pop
in
fwait
int3
or
fisttps
aas
sar
mov
push
test
and
test
add
add
jbe
mov
dec
inc
inc
std
dec
dec
add
arpl
xor
xor
adc
bound
outsb
xlat
inc
pop
lods
xchg
cmp
xor
fbld
push
lods
in
pop
mov
jp
xchg
fistps
add
lock
xchg
outsb
movsl
dec
add
scas
out
jmp
sub
xchg
shlb
jno
ror
ds
pop
pop
rcll
into
js
jle
jmp
sub
xor
stos
imul
setg
mov
sahf
data16
or
sub
jmp
xchg
add
mov
pop
inc
ja
dec
push
mov
out
add
jl
and
inc
lcall
pop
pop
repz
std
hlt
loope
insl
pushf
push
icebp
xor
and
lds
daa
daa
in
lcall
shll
sub
ffreep
sbb
or
stos
cmpsb
xchg
xor
xor
dec
scas
ljmp
clc
xor
jmp
mov
inc
jnp
cmp
jp
es
xor
shlb
adcb
push
xchg
sahf
imul
rclb
mov
xor
jle
inc
fs
xchg
push
out
fs
xor
xor
movsl
adcb
les
fsubr
mov
xor
sub
jb
ds
push
sahf
sub
stc
push
push
cltd
mov
sarl
push
ljmp
dec
les
push
xorl
test
lcall
sub
dec
out
inc
imul
xchg
in
dec
and
push
pusha
mov
cli
push
and
mov
ss
inc
xor
scas
jbe
cmp
pusha
in
movsb
ja
jecxz
cmp
rcll
rcrl
mov
rcr
mov
test
inc
mov
shll
mov
push
fdivl
xchg
lods
sahf
or
fsubs
jle
jbe
cltd
mov
xor
test
pop
fwait
lret
lock
push
mov
add
lret
inc
je
add
jo
xor
and
inc
js
mov
les
repnz
or
xchg
pop
sbb
xchg
loopne
aas
pusha
shr
add
pushf
or
lods
pop
mov
xor
negl
push
je
fcomi
loopne
jecxz
das
mov
adc
leave
and
aaa
pop
js
push
out
fsubrs
cmp
loopne
sbb
dec
jge
fsubl
in
int
rcrl
cltd
dec
push
and
icebp
mov
dec
or
push
clc
call
gs
orb
push
test
out
dec
mov
push
xor
jnp
movsb
cmp
mov
pop
mov
lock
out
ret
bswap
xchg
fildll
mov
sbbb
fdivl
call
es
popf
xchg
pop
divb
add
mov
repnz
js
mov
jb
test
lret
push
popf
inc
sbb
inc
fmull
lock
ja
mov
jne
mov
call
pop
xchg
fwait
sbbb
std
fstpt
cli
lret
push
int3
xchg
fwait
lea
xchg
jno
pop
cmp
cmpsb
ret
imull
mov
or
je
cwtl
mov
shlb
or
scas
in
loopne
movsl
mov
or
xchg
das
je
xchg
lea
mov
mov
jne
sbb
xchg
pop
jbe
pop
push
imul
mov
cmp
in
into
jne
in
ret
xor
movsb
pusha
cmp
add
icebp
shufps
add
clc
inc
lret
jecxz
xchg
push
out
dec
dec
aam
mov
iret
pushf
add
jmp
jecxz
into
aaa
shlb
pop
mov
push
pop
pop
dec
in
push
sub
dec
adc
insl
mov
fucomi
jae
popa
jl
pop
xlat
lods
mov
mov
aam
or
sub
test
push
movsb
xchg
xor
mov
mov
ss
out
scas
sub
dec
adc
mov
fsubl
popa
jmp
dec
sub
cmc
jecxz
mov
push
sub
mov
add
push
mov
cld
out
pop
sbb
cs
add
fcompl
mov
in
movsl
mov
lds
fs
mov
outsb
data16
iret
jp
push
test
jmp
xchg
mov
adc
lods
test
movsb
xchg
jecxz
das
sbb
sub
mov
test
sbb
flds
mov
mov
push
les
sarl
jo
inc
mov
mov
shll
nop
sbbb
xchg
inc
lcall
enter
add
sahf
xchg
loopne
pop
sub
scas
jecxz
cli
es
ret
int
mov
inc
jne
int
sbb
mov
mov
fisubl
jae
dec
cmp
dec
clc
inc
or
int3
loopne
int3
test
pusha
mulb
cmp
in
testl
add
insl
xor
mov
dec
mov
jg
mov
aas
push
movb
push
xchg
ljmp
rol
js
xchg
sbb
jnp
xor
xlat
dec
lret
ljmp
xchg
movsb
mov
mov
add
dec
cmp
orl
jecxz
pop
mov
loop
or
jp
cmp
and
or
arpl
in
cmpsl
scas
mov
icebp
call
imul
dec
sub
popa
jb
inc
add
daa
fsubrs
pushf
shll
iret
loop
push
test
int3
push
dec
sbb
bound
jl
std
sub
dec
cmp
cmp
and
adc
movb
bound
jnp
lcall
arpl
and
roll
mov
inc
and
dec
rcll
rorl
pop
stos
test
jmp
test
inc
outsl
mov
jbe
inc
xchg
in
std
and
sbbl
lea
popf
outsl
cmp
lds
cmp
popa
jmp
push
fs
sarb
inc
aas
repz
movsb
sub
push
inc
int3
popa
or
add
dec
pushf
mov
xchg
fbstp
mov
push
pop
and
imul
stos
ret
outsl
in
mov
inc
sub
cmpsl
push
scas
sti
fmull
mov
sub
ret
nop
mov
jg
rcr
ret
aas
int
inc
jb
fnsave
pop
out
idivb
lcall
pop
adc
mov
fists
scas
add
sbb
push
jge
jle
aas
jg
jp
jnp
mov
push
pop
fsubs
jae
in
fmulp
or
sbb
dec
test
mov
rcll
lea
outsb
out
mov
sub
lods
ja
imul
movsl
push
inc
rol
arpl
inc
push
aaa
mov
cwtl
ja
pop
jae
fsts
pop
dec
js
or
and
mov
subb
ljmp
sub
inc
loopne
and
lret
xchg
mov
test
mov
jno
add
or
mov
mov
sti
or
stos
popa
sub
pop
xlat
out
pop
adc
mulb
cmp
adc
mov
push
push
lahf
inc
notl
or
push
adc
jae
jl
xchg
push
jge
ror
repnz
lea
pop
movsb
adc
popa
and
push
sahf
cmp
push
inc
fstpl
xor
stos
das
and
insl
push
sub
push
pushf
sbb
jmp
aas
sbb
and
push
pop
sbb
adc
sbb
mov
sbb
push
jge
fmuls
int
cltd
dec
fwait
sub
sahf
sysenter
dec
rcll
sahf
push
push
mov
pop
enter
push
fmulp
fidivl
inc
fwait
stos
push
sub
decb
adc
mov
mov
shr
sub
push
lcall
shrb
arpl
call
sbb
in
mov
jbe
push
pop
or
imul
jmp
xchg
push
adc
lock
inc
inc
repz
sahf
ss
sbb
mov
add
inc
enter
mov
cmp
sahf
rorl
cmpb
mov
nop
in
imul
mov
leave
dec
pop
push
shlb
lret
stos
test
push
add
insl
add
push
mov
push
pop
std
sbb
rorb
es
arpl
push
push
addb
iret
jae
ljmp
sbb
fsts
scas
cltd
pop
in
mov
in
pop
jnp
repz
out
popf
in
cli
and
fldt
xchg
and
and
mov
test
repz
cmp
pop
mov
jno
lea
add
push
mov
and
cmp
repnz
je
pop
mov
hlt
mov
mov
mov
lds
pop
das
cmpsl
lcall
fldl
loop
sub
pop
mov
testb
inc
test
mov
sub
xchg
jp
pop
push
clc
cmpsb
call
pop
and
add
loope
cld
dec
movsl
inc
repz
mov
outsb
mov
cld
nop
enter
icebp
mov
jne
jns
aas
xor
ret
mov
clc
subl
cmpb
mov
outsl
mov
sub
ja
jle
sbb
test
xchg
push
mov
movsl
ds
iret
ljmp
jns
mov
pop
out
jge
insl
dec
je
ds
xchg
out
clc
xchg
stos
cmpsb
pop
movb
lock
mov
test
mov
jle
fsts
adc
enter
imul
xchg
push
outsl
out
mov
nop
lds
xchg
cs
cmpsb
cmp
adc
mov
imul
insl
js
test
dec
call
inc
push
rcrl
xchg
pusha
xchg
aaa
in
sub
dec
push
cmp
adc
jnp
add
ret
and
repz
cmpl
shlb
push
andl
inc
lds
iret
outsb
ja
arpl
push
fwait
or
dec
jae
daa
mov
pop
or
or
lods
adc
lea
xor
and
or
or
xchg
add
or
mov
ja
jl
lds
or
out
fstl
xor
ja
fs
push
fcoms
cmp
jae
add
cmc
inc
insb
scas
mov
dec
sub
xchg
repz
cmc
int
insl
push
mov
divb
pop
cld
mov
out
pop
sub
sbb
inc
repnz
jge
mov
popa
imul
enter
sbb
shll
sub
clc
bnd
pop
jp
fs
xchg
jnp
mov
movsb
pop
xchg
jg
scas
arpl
push
push
jae
lret
push
out
aaa
loopne
cs
sub
rcrb
cltd
outsb
mov
fdivrp
jge
bound
lret
cwtl
mov
add
lret
imul
test
aam
pop
xlat
mov
outsb
sub
mov
jae
repz
fstl
or
xor
cs
inc
inc
fdecstp
fidivrl
jae
test
adc
ss
cmpsb
popa
sub
shlb
pop
xor
rorl
lcall
nop
sbb
in
sub
stc
imul
jge
cmc
inc
addr16
mov
dec
fnsave
mov
mov
add
and
xchg
sbb
jle
dec
inc
movsl
or
pusha
popf
jmp
andl
xor
push
bound
xchg
jnp
pop
sub
loop
cmp
inc
inc
mov
xchg
jne
add
mov
sarl
sub
mov
mov
adc
dec
shll
pop
das
outsb
fs
iret
inc
aas
or
push
outsb
not
or
mov
icebp
fdivl
pop
sbb
mov
xor
mov
mov
sbb
test
cmpsb
shrl
jns
data16
daa
call
shl
push
cmp
xchg
and
mov
andl
jbe
sbb
push
sub
jae
test
lcall
xor
scas
lods
dec
pop
or
pop
mov
inc
cld
sbb
and
cmp
aam
xor
adc
pop
push
push
test
popa
adc
jecxz
loop
push
dec
adc
jns
scas
mov
add
stc
xchg
fstpl
pusha
mov
popf
jecxz
rcrb
int3
sti
fcoms
mov
mov
mov
or
mov
jmp
clc
xor
lret
es
dec
dec
mov
sub
and
mov
adc
inc
cmp
push
int
jmp
js
xor
jp
xchg
mov
cmpb
jbe
or
mov
out
sub
aaa
mov
mov
repz
xchg
adc
fimull
push
pop
dec
add
mov
sub
jb
rcl
adc
ja
ret
mov
imul
jp
mov
jmp
sub
or
jb
or
movsl
iret
sbb
jb
xor
lds
stc
jg
mov
aas
aaa
jl
inc
adc
mov
and
mov
pop
pop
enter
enter
mov
or
sub
xchg
fbstp
in
ficoml
paddsw
movsl
addr16
and
shl
in
in
fcmovu
jg
out
pop
adc
lds
addl
pop
aad
jbe
fdivp
xor
mov
sahf
int
inc
inc
push
fdivrl
push
fstpl
dec
jmp
adcb
mov
mov
call
aaa
mov
xchg
mov
clc
dec
sarl
cmp
fwait
insb
cmpsb
enter
push
dec
or
mov
or
std
pop
in
int
loopne
test
push
xor
push
and
insl
shrl
add
jb
lahf
rcll
mov
sti
dec
mov
mov
jcxz
mov
xor
imul
push
outsl
movsb
mov
daa
imul
sarl
aaa
cmpsb
ror
cmc
mov
mov
or
push
adc
pop
inc
outsl
adc
fwait
push
mov
dec
fbld
or
mov
add
ret
loop
lock
push
adc
jp
or
mov
sub
inc
adc
mov
out
adc
jle
cmp
in
incl
jg
xor
add
cmpsl
jmp
add
lahf
out
cmp
dec
fisttpll
mov
push
imul
in
faddl
aas
sti
fldenv
mov
ja
adc
mov
jge
sbb
js
inc
in
push
bound
cmpsl
movsl
in
cmc
jle
lcall
jb
inc
jo
mov
jne
sub
push
inc
mov
out
pop
mov
jae
xchg
insl
add
mov
outsb
ja
stos
cs
lcall
mov
cmp
cmc
pop
mov
sbbb
mov
mov
fidivs
sti
mov
bound
ffreep
les
pop
push
jns
loope
push
sbb
push
dec
add
aas
xchg
adc
cmp
repz
and
push
xor
inc
popl
mov
int
movsl
pop
dec
mov
xchg
int3
xchg
add
xor
push
not
mov
add
cltd
xorb
push
fbstp
js
lret
xor
add
xchg
xchg
jns
xchg
add
andb
out
pusha
ss
cmp
out
inc
mov
aaa
inc
mov
cmp
add
repz
dec
shrl
mov
daa
mov
jns
pusha
and
test
push
jl
xchg
xor
jno
sub
popa
stos
inc
addb
out
stos
sub
out
das
or
xchg
clc
or
cli
shlb
sub
pop
call
push
movsl
mov
fldenv
sub
xor
lret
sbb
xchg
inc
pop
shll
push
lds
lods
into
sbb
or
mov
push
add
aam
or
dec
xor
popf
or
sbb
leave
cmp
cmp
aam
in
push
sbb
push
iret
jbe
int
inc
addr16
rolb
aad
sahf
inc
into
jns
jno
dec
stc
in
dec
push
aam
shll
aam
cwtl
jmp
sbbl
mov
sti
adc
test
mov
mov
mov
bound
int3
jbe
mov
push
test
insb
adc
dec
sbb
push
and
or
idivl
mov
scas
adc
add
mov
cltd
les
fistl
xlat
ret
cs
mov
loop
das
out
iret
xlat
jae
pop
sbb
xchg
add
mov
dec
stos
push
test
std
sub
xor
mov
mov
cmp
insb
sti
push
sbb
cmpsb
cli
xchg
test
fwait
int
mov
push
or
arpl
inc
lds
xchg
mov
inc
rol
test
repnz
dec
jmp
ljmp
inc
or
xor
shl
jns
push
leave
fs
std
jmp
outsb
dec
push
mov
lock
sbb
daa
rol
jge
adc
add
icebp
adc
lret
loop
daa
dec
lret
andb
pop
les
cmpsb
sti
add
lcall
into
sbb
and
aad
push
inc
pop
jb
inc
in
mov
and
push
push
sarb
mov
jle
inc
or
and
adc
cmpsb
test
cld
push
push
lcall
mov
xchg
hlt
data16
sub
xchg
xor
dec
repnz
sbb
scas
fimuls
fnsave
inc
and
pop
scas
cmpsb
pop
loopne
or
insb
add
repnz
pop
movb
nop
push
int3
and
std
out
cmp
push
ljmp
xchg
mov
dec
bound
inc
rcll
mov
mov
xor
mov
mov
in
and
imul
cmp
mov
dec
jecxz
leave
in
push
mov
or
and
mov
pop
and
add
xchg
subl
and
push
shlb
xchg
dec
dec
pop
loope
adc
cld
jg
into
xchg
pop
clc
pop
ja
shlb
test
movsb
and
dec
addr16
stos
shll
jo
dec
xchg
pop
pusha
xor
push
inc
shlb
loop
sub
aas
inc
xorl
inc
fldenv
dec
inc
add
adc
xorb
sub
mov
xchg
rcrl
sub
adc
clc
lock
cld
adc
cld
es
out
ljmp
cmp
cli
pop
sub
mov
in
clc
out
or
movsl
pop
ret
inc
xor
ret
jno
int
inc
fadds
mov
jns
mov
dec
imulb
hlt
pop
aam
pop
insb
and
into
push
mov
loope
jle
adc
aas
inc
rorl
mov
sub
movsb
arpl
in
xlat
add
in
push
jmp
add
dec
or
mov
sbb
mov
lock
or
out
fistpll
or
lahf
fnstsw
nop
mov
mov
dec
aas
cmp
daa
stos
ret
ss
mov
stos
outsl
lret
pop
mov
aad
push
out
mov
xor
test
inc
in
pop
ret
push
inc
cmc
sub
mov
mov
add
push
pmulhw
sbb
fidivrl
push
xor
les
bound
shlb
pop
push
pushf
jne,pt
test
insl
jns
sbb
pop
cs
sbb
sub
jecxz
adc
push
and
les
pop
ret
fucom
dec
pop
dec
test
loope
sub
sub
cmp
jns
add
in
insb
and
dec
cltd
add
into
rol
loope
xchg
repnz
add
xor
push
iret
fmull
sti
jmp
test
shl
mov
xchg
push
push
inc
xchg
inc
xchg
xor
sub
xor
fcomp
mov
ss
push
je
sub
dec
add
decb
dec
pop
and
ss
add
ljmp
popa
bound
inc
push
jp
xchg
enter
mov
sbb
or
mov
rcr
cs
testl
xchg
add
in
inc
xchg
divl
jecxz
sahf
les
aam
mov
outsb
enter
lea
and
divl
dec
dec
sti
dec
lods
xor
cmp
pop
jg
mov
and
push
movsl
lret
jns
jg
mov
fwait
imul
push
mov
or
mov
test
cmp
dec
movsb
dec
loopne
mov
ret
shl
loop
stos
das
cli
je
pop
ljmp
dec
pop
sub
into
jbe
lret
adc
inc
cmp
je
jmp
aam
and
mov
pop
imul
outsb
jne
inc
les
cmp
push
mov
xchg
xchg
add
lret
sub
popa
repnz
cmpsl
mov
sbb
fimull
fcmovu
lock
pop
movsl
sbb
roll
push
addr16
sub
mov
inc
ljmp
fbstp
nop
xchg
out
xchg
in
jo
or
sbb
jno
mov
aas
jg
mov
lods
or
fstps
mov
dec
ret
sbb
jmp
xor
mov
push
cli
enter
aaa
jnp
dec
sarb
sub
xor
cmp
sub
mov
add
jmp
lcall
adc
fbld
jmp
in
das
pop
out
mov
sbb
and
push
call
adc
push
mov
insb
jle,pt
mulb
xor
sub
testb
stc
pop
dec
sbb
cltd
mov
push
in
stos
sbb
push
js
pop
pop
insb
or
lods
cmp
mov
outsl
xor
pop
pusha
dec
sbb
imul
pusha
into
cs
xchg
sbb
jmp
in
test
push
pop
sbb
fiadds
inc
or
bnd
bound
xor
xor
test
and
stc
lahf
xor
std
add
xor
xchg
jge
movsb
andl
xchg
negl
cmp
cwtl
int
and
pop
cmp
mov
dec
sub
mov
lock
orl
fwait
loopne
sti
inc
es
fstp
jno
inc
push
cmc
pusha
call
leave
jnp
mov
mov
mov
xlat
sub
lret
adc
movsb
push
mov
add
stc
aaa
mov
int3
add
pop
pop
push
sbbl
xor
rolb
mov
stos
or
ror
adc
les
or
and
mov
stos
xchg
scas
mov
pop
into
lcall
rorb
push
out
dec
push
push
push
jno
inc
movsl
pop
xchg
pop
mov
xchg
jp
cmpsb
subl
lahf
es
mov
dec
sub
int3
mov
adc
cmp
frstor
pusha
pushl
xor
mov
mov
ja
mov
xchg
repz
pop
mov
push
xlat
shll
mov
rorl
pop
data16
call
dec
xlat
popf
fnstcw
xchg
mov
or
xchg
in
sti
out
pop
es
push
cmp
jge
inc
push
xor
push
add
aad
setae
shlb
and
imull
lret
mov
mov
bound
push
pop
fnstcw
pop
int3
mov
xor
push
xchg
inc
ds
test
and
xlat
jb
aas
xor
stc
sub
adc
or
rorb
add
scas
jle
popf
inc
mov
xor
addr16
pop
ret
mov
cs
pop
xchg
sub
adc
mov
outsb
jns
mov
mov
movsl
lret
lret
xor
jmp
loope
xchg
jne
gs
xor
add
insl
mov
or
fadd
push
inc
scas
arpl
int
bound
dec
mov
sbb
in
repz
icebp
xor
adc
mov
orb
mov
out
stos
gs
mov
adc
mov
in
addr16
inc
jbe
mov
adc
push
imul
insb
fs
mov
jbe
xor
pop
ja
aaa
mov
inc
cmp
call
stos
cmp
mov
push
cmp
mov
xchg
test
call
sub
xlat
cld
mov
add
fcoml
aad
data16
bound
call
fstp
mov
add
mov
imul
xchg
test
inc
jl
lds
mov
xor
push
cli
fdiv
or
aaa
inc
ljmp
faddp
inc
out
xor
sahf
sbb
or
dec
clc
mov
adc
dec
loopne
cltd
scas
dec
dec
inc
dec
repz
pop
mov
mov
pop
dec
sub
xchg
xchg
fwait
and
add
repnz
into
dec
in
movsl
add
sub
clc
cmp
push
rorb
dec
add
in
jae
outsb
pop
add
jno
lret
dec
aas
adc
pop
pop
push
jg
test
sub
mov
or
cmp
push
mov
bound
inc
inc
mov
push
mov
loop
inc
xchg
dec
loop
jbe
addr16
xor
outsb
fwait
scas
scas
add
mov
lcall
enter
rcll
stc
scas
pop
jle
lcall
mov
mov
jg
inc
les
jecxz
aaa
scas
sbb
bound
mov
mov
cmp
cmpsb
lods
add
dec
inc
push
mov
ss
mov
in
mov
repnz
xor
icebp
rorl
std
xor
cmp
iret
lret
push
fmull
add
lods
mov
lret
push
dec
push
sti
dec
xchg
sbb
dec
add
jnp
pop
adc
loopne
repz
loope
xor
sub
push
gs
add
aaa
mov
mov
dec
int3
or
sbb
out
aaa
into
push
insl
lods
mov
mov
xchg
aaa
sbb
divb
push
pop
mov
ja
push
mov
leave
lods
cmp
mov
ljmp
enter
mov
jns
test
and
push
notl
mov
aas
call
sbb
sub
subl
fstps
fdiv
pop
je
and
lds
add
test
pop
inc
andb
jp
ljmp
add
sbb
mov
neg
lret
mov
mov
pop
jne
mov
test
or
inc
push
cwtl
mov
stc
pop
inc
push
mov
out
dec
decb
adc
or
or
js
mov
push
outsb
pop
cmp
not
out
ja
aaa
addr16
movsl
idivl
sti
add
push
inc
cld
sub
sbb
push
adc
lea
mov
sti
mov
mov
lods
push
movsb
fsubp
pop
push
mov
in
mov
jp
lcall
or
and
sub
sahf
mov
gs
mov
imul
push
push
in
dec
shl
orb
xchg
xchg
es
xchg
es
cli
ljmp
call
fwait
pop
fistps
in
jno
cmpsl
outsl
mov
dec
iret
or
xchg
popf
outsb
and
int
les
fstpl
pop
fcoml
inc
sarb
es
loop
sbb
jmp
sub
cwtl
sbb
push
cmp
inc
mov
shll
sub
scas
sbb
xchg
das
sub
je
sbb
mov
xchg
lods
jecxz
mov
adc
lea
test
mov
adc
fwait
andl
mov
and
cmpsb
lock
push
lods
xor
andl
repnz
fsubrs
out
fisttpl
xlat
push
adc
fisttpl
and
sub
and
wbinvd
repz
stc
lret
int3
test
and
lcall
add
iret
in
in
mov
mov
or
add
push
or
dec
mov
stc
lock
add
push
shrb
pusha
sti
add
xchg
lret
shrl
int3
mov
sub
pop
xor
xchg
addr16
call
sbb
scas
mov
sbb
xchg
call
pop
inc
les
mov
stos
insl
in
sub
outsb
out
mov
dec
popf
dec
fidivrl
and
aad
sarl
loope
call
gs
cmp
mov
xchg
cmp
popa
mov
call
pop
inc
aad
dec
xor
cmpsl
andb
aam
inc
xchg
in
dec
mov
dec
out
pop
into
mov
mov
mov
mov
mov
mov
pop
push
cmpsb
sub
js
sub
insb
pop
ss
and
movsl
xor
push
adc
xor
fs
jle
icebp
stc
ja
popa
pop
pop
lds
lea
lret
pop
pop
jge
shl
dec
sub
scas
cltd
mov
outsb
icebp
popa
mov
repnz
push
je
sbb
mov
mov
shll
fnsave
push
bound
les
test
mov
pop
idivl
and
inc
fisttpl
jp
mov
mov
enter
or
divb
imul
fidivrs
mov
fidivl
test
push
aam
jmp
or
cltd
dec
fcoml
cmp
and
jno
dec
gs
mov
push
cmpsl
mov
imul
xchg
or
ljmp
sbb
test
pusha
ret
dec
xchg
je
sti
mov
and
push
mov
pop
lods
push
cmpsb
pop
jecxz
scas
mov
std
cld
push
pop
sub
rclb
movsb
lahf
std
mov
andl
jl
clc
push
adc
mov
cmp
mov
xor
dec
and
ds
cltd
inc
imul
sahf
hlt
dec
stos
in
mov
rorl
scas
mov
and
and
jecxz
mov
test
adc
rcrb
scas
outsl
push
repz
scas
xchg
mov
sub
pop
inc
dec
sub
shll
mov
into
jg
sbb
inc
dec
add
xor
out
dec
adc
iret
clc
mov
call
or
clc
int
lock
fdivrp
inc
xchg
xchg
add
jle
lea
lcall
int
enter
lea
dec
loope
je
jnp
ja
loop
xor
sbb
mov
std
outsb
popa
loopne
xchg
mov
jo
cmp
fwait
lahf
push
mov
sbb
fdivp
test
push
jo
sub
idivb
mov
into
fdivrl
adc
sub
push
je
push
lret
cs
xchg
mov
or
neg
push
dec
mov
sub
pop
mov
sub
push
and
mov
xchg
and
push
sub
or
dec
or
out
or
dec
xor
movsb
add
test
pop
and
inc
adc
sbb
mov
inc
sahf
mov
lods
ss
mov
into
insb
cmp
mov
xchg
imul
je
inc
pop
cld
ret
fsubrl
fwait
mov
adc
cmc
jbe
int3
mov
jns
jne
ljmp
xor
sbb
pop
fbstp
jne
cltd
dec
bound
popf
sbbb
mov
push
and
mov
shll
cltd
jmp
nop
in
hlt
cwtl
fisttpl
test
mov
movsb
roll
xchg
mov
jne
ss
pop
push
mov
sub
jno
scas
pop
inc
cltd
fnstcw
adc
orb
data16
test
orl
lcall
inc
pop
jmp
loope
dec
adc
fnstsw
xor
sbb
mov
inc
jbe
push
ja
gs
loopne
inc
ss
mov
fnstsw
mov
in
mov
xchg
ja
sbb
repz
fs
fstl
imul
pop
lea
xor
loop
adc
or
sbb
inc
aam
mov
call
mov
out
sub
cli
mov
ja
out
and
pushf
int
fisubrs
or
movsb
and
and
pushf
fwait
sub
mov
lahf
cwtl
inc
popa
outsb
test
lock
pop
push
fcmovb
jmp
push
rolb
or
stc
lcall
or
sub
lfs
cmpl
cld
aam
adc
movsl
dec
cmp
sub
dec
mov
adc
add
arpl
out
mov
mov
mov
lret
adc
aam
repnz
push
out
xchg
xchg
sub
adc
popa
movsl
cmp
xor
out
or
inc
imul
pushf
sti
mov
mov
jmp
or
dec
or
push
xor
insl
lods
addr16
jp
outsb
mov
pop
xchg
icebp
or
xor
add
fchs
push
xor
lahf
and
insb
sbb
cmpb
inc
adc
add
ds
test
mov
lret
mov
les
in
pusha
out
adc
addr16
dec
scas
nop
lret
lcall
adc
cld
aaa
sbb
inc
cwtl
lods
fsts
std
inc
adc
mov
and
addb
jb
mov
sbb
pop
xor
mov
jmp
in
lock
xor
push
popa
sub
inc
pop
dec
jo
test
stos
mov
inc
dec
fs
repz
mov
cmp
roll
xchg
xchg
jnp
mov
pop
push
push
dec
xor
aas
sub
sbb
or
in
stos
daa
jne
xchg
jno
adc
xor
nop
xchg
movsl
lahf
mov
fcompl
cmpsb
and
xchg
inc
mov
sub
lods
jne
aad
lahf
shl
fisubrs
or
push
mov
repnz
inc
pushf
in
sub
out
add
arpl
or
lahf
test
pop
pop
in
fidivrs
outsl
pop
push
add
xchg
mov
cmp
movsl
outsl
inc
lds
or
mov
add
addr16
mov
xchg
push
and
sbb
leave
cmp
xchg
loopne
sbb
in
jae
and
scas
andl
mov
popf
sbbl
mov
xchg
movsb
xchg
push
sarb
sbb
sbb
xchg
aad
sub
xor
inc
dec
push
inc
adc
mov
sbb
ret
push
sahf
movsl
popa
sub
stos
popa
test
daa
push
popf
test
and
and
xchg
fdivl
hlt
pop
adc
add
sahf
pop
adc
incb
inc
mov
adc
xor
xor
test
aas
scas
fwait
aam
xchg
leave
mov
in
mov
jg
jne
inc
or
sub
cli
aam
clc
pop
fs
ret
and
xchg
xlat
and
add
mov
inc
aam
lea
imul
cld
inc
jg
repnz
je
mov
lret
mov
imul
enter
sbb
in
dec
and
cvtdq2ps
scas
adc
sub
adc
cltd
ss
cwtl
cltd
repnz
mov
sub
push
stos
subl
xchg
lods
pop
pop
lea
ret
jge
adc
lds
in
add
int
pop
dec
cmc
inc
mov
clc
inc
lods
imul
sbb
out
mov
jl
sub
lds
dec
out
and
xchg
xor
xchg
es
pop
and
push
repz
setg
sbb
cmc
inc
xchg
int3
lcall
sahf
mov
xor
lret
pop
xor
mov
jmp
and
imul
sub
aaa
std
nop
add
movsl
ficompl
loop
pushf
popa
aad
ljmp
inc
das
test
push
push
cwtl
or
adc
fidivl
daa
and
xchg
incw
push
fsubl
jne
or
mov
das
or
push
loopne
xchg
ret
mov
pusha
stc
int3
and
std
scas
xlat
test
lahf
jl
xor
push
jle
sub
sahf
sub
dec
jns
fwait
inc
adc
mov
dec
aaa
xor
jbe
push
mov
shll
movsb
mov
jae
aas
es
rorl
adcl
push
pop
lds
sti
fwait
mov
jae
ljmp
xor
sbbl
sub
jl
dec
outsl
insl
icebp
lahf
movsl
out
aaa
mov
in
pop
inc
cmpsl
sti
aad
aaa
push
or
std
hlt
das
cltd
add
int3
dec
fwait
xchg
icebp
out
pop
mov
or
incb
pop
xchg
mov
adc
add
fcompl
mov
gs
ja
add
jge
sarb
xlat
xchg
mov
int
mov
lds
push
stos
xchg
dec
int
push
mov
pop
push
in
dec
xor
cmp
inc
cld
sti
out
es
jo
lcall
mov
in
enter
inc
xchg
cli
fisubs
pop
mov
cwtl
or
sub
lret
out
xchg
adc
jnp
push
arpl
xchg
rolb
xlat
push
mov
popa
mov
add
dec
mov
or
outsl
cmpl
xorb
xchg
pop
mov
das
xchg
push
mov
js
arpl
pop
popa
pop
test
cwtl
add
xor
push
xor
sub
sbb
pop
das
dec
add
xor
repz
pop
and
arpl
push
cltd
mov
mov
clc
scas
loopne,pt
sbb
mov
push
aas
mov
imul
iret
mov
repz
pop
inc
push
out
js
into
gs
cmp
rcll
shrl
and
sub
aas
sub
pop
je
sarl
push
int3
fisttpll
push
mov
outsb
sub
daa
add
mov
cli
inc
mov
jecxz
sbb
push
cmpsl
xchg
stos
in
xchg
pop
xchg
mov
addl
sub
dec
inc
ss
mov
push
sub
mov
adc
adc
dec
inc
lahf
ret
mov
cmp
addr16
add
lcall
or
loopne
dec
fisubrl
or
int3
mov
leave
nop
and
sbb
test
ja
push
ljmp
fs
fcmovnu
add
inc
sbb
mov
xchg
mov
mov
mov
xchg
fcoml
mov
sub
divl
out
stos
mulb
inc
out
mov
das
call
push
pop
in
xchg
xor
dec
sti
mov
jno
lods
cmp
xor
loopne
cmp
pusha
lods
std
mov
ds
xchg
push
push
mov
xor
outsl
push
jns
pop
xor
mov
outsb
xchg
and
sbb
adc
scas
push
jne
ss
jns
or
shlb
pop
push
outsb
cmp
ficoms
pop
test
and
in
push
lods
xchg
movups
xchg
aam
xlat
push
mov
sub
add
lea
or
cld
scas
loopne
out
ret
pop
cltd
les
push
sub
xor
loope
out
dec
lahf
mov
push
cmp
dec
cmc
pop
add
mov
jecxz
leave
enter
xor
push
xchg
bound
jae
push
lret
mov
sub
fnstsw
fidivrs
mov
adc
stc
sbb
fdivr
cmp
dec
mov
loop
jl
test
sub
repz
mov
and
arpl
nop
and
arpl
or
or
lret
sbb
loope
in
aam
fiaddl
fdivrl
je
int
in
pop
ror
lahf
adc
push
rcrb
jmp
push
popf
mov
js
pop
adc
jo
aam
lods
decl
add
lret
addr16
pushf
jnp
sbb
mov
cltd
adc
pop
xor
mov
sbb
inc
add
pop
cmc
jl
daa
xchg
jp
es
ret
jl
fs
dec
cmp
out
mov
mov
js
xchg
mov
sbb
fnsave
sbb
xchg
cmp
pop
incl
jp
leave
popf
mov
out
hlt
std
jp
mov
mov
xchg
adc
inc
cltd
es
jb
or
push
and
mov
dec
add
enter
loopw
lret
mov
cmp
test
shrl
xchg
fcmovnbe
xchg
jae
cld
inc
ret
loop
cmp
jnp
add
and
xchg
call
cmp
out
icebp
xchg
cwtl
rorl
dec
rcr
stos
xchg
mov
stc
sbb
mov
sub
out
inc
and
add
jae
test
xchg
mov
and
cs
push
pop
in
fdivrp
mov
adc
or
pop
lahf
push
xchg
add
xor
fsin
jne
mov
push
pop
inc
cmp
mov
mov
sbb
aas
or
and
mov
inc
ss
push
push
das
inc
std
pop
rcll
jl
pop
or
xor
pop
push
orl
xor
sub
mov
loope
jmp
lret
rorl
imul
iret
imul
arpl
loope
ret
in
outsb
outsl
xor
stos
jmp
xchg
in
int3
push
jns
addb
xor
adc
ljmp
in
jge
hlt
insl
int
nop
cmpsl
fidivl
mov
fsincos
mulb
push
mov
sub
pop
bound
pop
mov
fimuls
jecxz
inc
jo
pop
adc
or
sbb
mov
es
sub
or
push
cmp
sub
daa
mov
xchg
and
sti
and
or
mov
mov
les
mov
mov
pop
cmpsb
lea
outsl
pop
push
xorb
stos
imul
insl
jne
mov
cld
repnz
sub
stos
jl
sub
stos
sub
dec
es
dec
pop
leave
mov
arpl
gs
cmp
in
mov
hlt
sbb
xor
lret
sub
or
mov
cli
negl
push
xchg
test
cmpsb
adc
jecxz
jbe
mov
xchg
ds
addr16
test
insl
jmp
sub
fidivl
lds
sub
xchg
xor
mov
insb
sbb
mov
je
xchg
xchg
mov
sub
cmp
xchg
cmp
cmpsl
rorl
aaa
lret
or
sbbl
jge
mov
pushf
divl
in
fsubrl
nop
loopne
dec
pop
int3
adc
cmp
cs
int
stos
adc
cmp
fildll
fcompl
jo
adc
lret
pop
mov
pop
mov
int
shrb
iret
out
cmp
and
sahf
ret
je
jge
in
add
mov
jno
and
push
out
inc
mov
add
loopne
mov
pop
daa
das
xor
rcr
addr16
mov
out
icebp
vmovhps
leave
or
jge
stos
inc
xor
add
aaa
and
xor
call
cmc
int
jecxz
fldlg2
dec
das
lahf
push
lods
fnstcw
clc
jno
dec
inc
add
fwait
cmpsb
sti
xchg
jle
xchg
add
sub
rcrl
into
sbb
or
or
inc
mov
xor
repnz
ja
mov
stos
scas
mov
cmp
arpl
adc
sbb
aad
push
inc
into
in
jecxz
xchg
mov
adc
pop
push
movsb
cmp
jb
mov
cli
xchg
sbb
jg
pusha
jmp
sbb
dec
aaa
mulb
cmpsb
and
hlt
sbb
and
fs
loopne
push
bound
setns
dec
test
jne
stc
adc
mov
cwtl
sub
dec
subb
dec
adc
rcrl
jbe
sahf
stos
push
and
in
shrb
and
test
pop
mov
dec
fistl
loopne
inc
bound
ljmp
dec
or
cmp
push
push
int3
mov
out
sbb
jnp
jp
fdivrp
idivb
jns
sbb
popa
lods
pop
repnz
lods
mov
jp
inc
out
mov
sbb
or
inc
add
int3
fists
dec
cwtl
xchg
and
imul
jno
out
icebp
fiaddl
test
mov
dec
notb
stos
addr16
cli
and
mov
outsl
jb
fldcw
or
iret
and
ss
xlat
int
jae
sub
lods
roll
fs
pop
mov
push
push
sarb
sti
push
shll
adc
cmp
adc
add
mov
jmp
mov
dec
adc
ja
adc
xchg
adc
fldenv
out
inc
sahf
into
sarl
jmp
jne
fadd
inc
inc
outsb
adc
shll
fsubp
mov
xor
out
mov
adc
jb,pn
mov
pusha
fildll
xchg
fmuls
jb
fstp
fdivrp
jl
in
jecxz
inc
jl
movsl
sbb
fsubrs
jno
incl
add
call
mov
loop
pop
mov
fnstsw
mov
jecxz
jb
xor
fcmovnu
sahf
pop
xor
jbe
jbe
sbb
ja
dec
aas
xor
push
jno
fs
xor
imul
xchg
fst
cmpsb
or
and
loop
sub
adc
mov
sbb
pop
pop
in
mov
xor
fiaddl
int3
pop
cs
pop
imull
or
ljmp
cwtl
and
jo
ds
mov
aas
shrl
mov
inc
push
and
sbb
sbb
lods
clc
mov
movsb
jmp
test
scas
cmp
cltd
insl
jle
insb
jg
aaa
ja
xorl
pop
pop
cmc
pop
mov
stos
out
mov
jno
dec
sbb
jge
ja
ffreep
mov
mov
jb
mov
and
or
loop
xchg
imul
push
lahf
sbb
loope
push
data16
xor
fisubl
ficomps
cmpsl
hlt
gs
fs
push
popa
push
test
imul
out
int3
cwtl
shl
xchg
jle
dec
or
cmpsl
popf
movsl
push
sbb
testl
into
shl
mov
mov
stc
bound
cli
add
cmp
push
xchg
les
gs
jl
jmp
cmp
mov
inc
cmp
data16
ret
inc
jge
jle
call
into
jae
dec
inc
adc
jl
and
inc
call
frstor
aad
arpl
cmp
jnp
jmp
in
push
mov
cmp
test
mov
pop
insl
imul
inc
pop
std
fs
xor
push
pop
ret
cmp
mov
sbb
add
stos
aad
mov
scas
mov
stc
sbb
and
jp
imul
jecxz
pavgb
pop
test
in
repnz
lds
icebp
add
popl
movsb
scas
mov
push
arpl
jge
inc
push
xchg
xchg
pushl
sbb
ljmp
push
and
xchg
imul
push
mov
pop
mov
mov
mov
push
xchg
aas
push
xchg
test
aam
mov
cmp
pop
sbb
sbb
out
iret
inc
imul
sub
es
add
jg
mov
pavgw
cs
pop
scas
push
mov
fs
mov
scas
pop
test
mov
cltd
pop
sub
lds
cmp
jne
dec
ja
mov
mov
inc
shll
mov
loope
fld
ror
stos
sbb
std
add
add
fadd
cli
xchg
add
inc
ljmp
cltd
cmp
xchg
xchg
cmp
push
sti
push
mov
xor
mov
mov
rcrb
cmp
ja
inc
popf
mov
mov
out
or
imul
nop
xchg
icebp
dec
xchg
lret
inc
jle
and
adc
jb
mov
inc
or
adc
ja
out
add
std
lcall
mov
pop
push
mov
or
push
inc
sbb
sub
cmp
add
in
sub
subb
cmpsl
xchg
cmp
negb
cmc
scas
pop
jb
cmp
dec
lret
in
mov
xchg
ljmp
shrl
sbb
bound
cltd
inc
aam
or
jb
sbb
push
test
cs
fisubrs
mov
dec
pusha
add
mov
das
mov
push
adc
mov
pop
jmp
int3
pop
enter
sub
jo
shll
pop
push
sbb
cmp
hlt
mov
push
push
push
ss
jo
cmpsl
mov
ret
dec
mov
adc
imul
sub
sub
loop
int
adc
mov
repnz
mov
loopne
sbb
push
repz
jo
mov
cmpsl
lods
inc
les
mov
add
rolb
lahf
sbb
jp
dec
xchg
and
sarb
cmc
inc
mov
gs
mov
pop
shrl
mov
add
cmpsl
sbb
in
mov
dec
pop
in
cwtl
inc
cmpsb
pop
pop
inc
mov
in
scas
movd
ret
sbb
sbb
js
push
add
push
fwait
push
cmp
jp
je
sbb
test
mov
sbb
cmp
scas
stos
pop
and
negb
cmp
mov
addr16
sbbb
pop
xabort
push
fdivrs
lahf
xchg
jmp
add
sbb
and
into
in
dec
std
pushf
push
sbb
sbb
mov
and
jnp
fs
mov
lods
sbb
in
pop
mov
and
int
and
inc
fdivl
add
aaa
fiadds
xchg
sbb
cmp
imul
ljmp
daa
mov
bound
inc
mov
mov
fabs
lret
movsl
rcr
shr
xchg
fs
inc
into
popa
cwtl
jo
sahf
out
cli
and
mov
push
xchg
fldcw
movsbl
ds
adc
lock
hlt
mov
fidivrl
call
sub
stc
cmpsl
pop
rorb
mov
enter
pop
add
and
or
pushf
pop
stos
add
cmp
jns
jns
xchg
xchg
push
add
dec
sbb
push
cmp
pop
pop
icebp
pop
stc
into
mov
test
jne
call
cmp
push
sbb
xchg
mov
mov
stos
andb
jmp
mov
or
sub
fnstsw
dec
mov
lahf
add
mov
in
push
xchg
xor
jb
imul
loope
fcoms
inc
sub
push
inc
fisubs
adc
push
sbb
sub
out
mov
stos
jo
push
stc
scas
xchg
bound
icebp
jbe
or
xorl
xchg
pusha
cwtl
test
pop
leave
pushf
or
push
add
ss
push
clc
call
stc
xchg
into
je
mov
xchg
push
mov
nop
rorb
fistps
inc
xorb
xor
fldenv
pop
fs
test
iret
fs
jp
lds
jp
cwtl
scas
inc
push
xor
jmp
pop
dec
cmpsb
or
rorl
mov
inc
lret
inc
daa
icebp
in
xchg
and
mov
lret
push
cmp
sbb
call
in
es
out
xchg
mov
sub
imul
xchg
mov
fisttps
divb
cld
or
movsl
adc
dec
jge
mov
mov
movb
mov
insl
lds
dec
fwait
clc
repz
ds
je
cmc
or
insb
cmp
xchg
movsb
lcall
into
addl
aaa
hlt
mov
enter
push
cmp
mov
or
inc
cmp
and
aad
rcll
jns
mov
test
fidivs
push
dec
in
adc
add
lods
arpl
jns
repz
sub
inc
xor
out
shlb
mov
sti
push
scas
hlt
sbb
inc
sub
clc
nop
popf
shlb
xor
frstor
sti
rcrb
mov
stc
sbb
shrb
lret
addr16
cmp
xrelease
jb
mov
and
adc
sub
pop
push
jno
inc
fstpt
xlat
xor
mov
sti
cmp
sub
cli
pop
pop
pop
cmp
fs
aad
xchg
sub
push
in
sbb
int3
xor
insb
aad
fisubrs
cmc
push
dec
or
jmp
nop
inc
test
out
les
mov
or
pop
jnp
mov
push
pushf
in
push
es
push
js
in
mov
add
jo
sbb
inc
lock
adc
dec
mov
ljmp
push
sub
call
pushl
jbe
repz
mov
push
dec
int
imul
scas
aad
mov
repnz
repnz
cli
inc
jg
cmp
push
add
dec
sub
adc
push
or
stos
lea
inc
stos
mov
popf
in
jb
cmp
sbb
mov
xchg
jecxz
movsl
stc
mov
out
ljmp
cli
inc
adc
jo
inc
mov
repnz
in
cltd
repz
cmpsl
jns
imul
mov
xchg
popa
enter
js
pop
int3
dec
movsb
dec
cmp
push
shll
dec
leave
nop
dec
mov
fildll
xor
loope
fsubr
xor
andl
add
jae
enter
mov
push
test
or
insb
insl
pushf
dec
dec
cmc
xchg
dec
cmp
jecxz
loope
adc
xchg
cmpl
addl
cmp
movsl
jmp
fnstenv
ss
stos
jmp
cmpsl
outsl
into
cmpsb
mov
lock
lods
aam
dec
ret
pop
test
mov
and
or
lock
pop
pop
call
inc
dec
sub
in
repz
sbb
rcrl
mov
jbe
rolb
dec
push
sub
int3
aad
mov
and
orb
dec
sbb
sub
xor
aaa
mov
or
dec
and
lret
mov
imul
add
in
call
jp
out
and
mov
subl
addb
pop
mov
stos
gs
mov
das
and
addb
imul
cs
shlb
test
dec
mov
movsl
testl
xorb
decl
mov
out
out
pop
inc
mov
push
sbb
repz
orl
push
add
xchg
popa
sub
push
inc
icebp
or
or
imul
inc
int
je
inc
sbb
aaa
test
pop
mov
scas
mov
idiv
loopne
xchg
or
or
adc
push
mov
adc
les
mul
fwait
mov
xor
push
mov
addr16
inc
lret
out
out
adc
inc
nop
shll
sub
push
ret
repz
mov
push
in
imul
ds
sbb
adc
fidivs
das
loope
mov
das
sbb
xchg
cld
add
ret
ds
stos
push
nop
leave
movsl
jbe
in
pop
pop
xchg
mov
and
dec
xor
push
dec
push
pop
leave
mov
incl
cmp
sbb
cs
cmp
or
inc
jo
jle
test
sub
adcb
inc
cld
iret
out
insl
fmull
addr16
pop
sub
push
push
scas
mov
inc
ss
xlat
mov
sub
cli
push
pop
into
add
mov
sub
dec
cmp
push
xchg
adc
in
xlat
mov
lret
iret
int3
lock
jbe
scas
enter
jg
add
loope
adc
add
jns
xchg
or
mov
and
int
adc
movsb
ret
cmp
call
mov
cmp
scas
es
gs
or
adc
mov
xchg
push
adc
cmp
cwtl
shll
pop
shll
sbb
xor
les
or
lods
clc
jg
test
xor
and
std
fidivrl
pop
je
out
mov
jns
push
inc
hlt
mov
xchg
pop
mov
mov
test
mov
xor
sub
mov
xchg
ret
out
in
rcr
mov
mov
in
imul
push
imul
adc
mov
mov
push
sbb
pop
pop
mov
out
mov
addr16
pop
int
xchg
leave
and
sub
push
popf
sar
sub
test
jo
jnp
push
mov
fcoml
push
cmc
iret
bound
sbb
xchg
mov
cmpsb
aam
mov
adc
mov
pop
sbb
dec
xchg
call
push
lods
dec
rolb
nop
push
aad
aaa
outsb
pop
mov
cmp
mov
jecxz
jbe
pop
xor
pushf
xorb
icebp
sarl
xchg
and
mov
test
or
dec
adc
pop
popf
dec
mov
div
orl
pop
mov
jo
js
mov
sbb
mov
icebp
pushf
mov
loopne
ret
xor
test
push
popf
sub
popa
das
mov
shlb
dec
fildl
mov
leave
or
mov
xchg
dec
data16
lcall
inc
cltd
lods
jnp
mov
ss
stos
scas
cmp
pop
test
mov
adc
gs
xor
adc
lods
push
mov
movsl
nop
gs
jecxz
or
popa
jmp
in
inc
add
jmp
int
out
xor
daa
xchg
xchg
lahf
daa
ds
lcall
xchg
cmp
adc
mov
jmp
dec
jecxz
mov
mov
mov
adc
pop
lret
sub
mov
and
xor
cmp
arpl
leave
xchg
sbb
in
mov
popf
out
and
mov
insb
or
jle
mov
add
addr16
sub
mov
dec
xorb
mov
insb
out
pop
mul
cmp
push
mov
stos
incb
xor
mov
mov
inc
imul
mov
jnp
arpl
adcl
int3
movsl
loop
in
and
push
dec
dec
sub
dec
stos
fistpll
mov
pop
pop
loopne
cli
cltd
movsb
ficompl
pop
push
jne
mov
dec
push
jo
dec
call
mov
lret
aaa
inc
adc
mov
ljmp
jae
scas
dec
mov
pop
cltd
daa
mov
imul
cmp
pop
pop
idivb
xchg
xchg
mov
mov
movsb
hlt
popl
and
jp
and
fiadds
xor
xor
imul
in
pop
es
loopne
push
xor
dec
xchg
cmp
sub
pop
cmp
cltd
fcompl
mov
mov
dec
test
clc
xor
push
mov
cmp
test
popf
aaa
aam
adc
out
mov
adc
fisubrl
pop
pop
adc
shrl
mov
sbb
arpl
fistps
ror
insb
jno
mov
icebp
pop
mov
mov
adc
sbb
mov
outsl
imul
nop
scas
sbb
or
mov
mov
mov
ficompl
push
fcom
testl
cs
stc
push
and
cmp
loop
pushf
dec
popa
pop
and
ljmp
lret
add
mov
pop
pop
cmp
jle
aaa
dec
xor
aas
mov
dec
leave
ljmp
cld
mov
pop
fnstenv
repnz
mov
notl
rorl
daa
and
ret
push
xchg
push
mov
mov
test
mov
scas
lea
xor
jns
test
cmp
mov
xorb
dec
jns
or
ljmp
xchg
mov
stos
gs
pop
pop
fcomps
or
aaa
push
jnp
inc
icebp
cld
mov
mov
fs
cld
test
aaa
popf
pop
sub
sbb
in
jmp
aas
fcmovne
or
sub
cmp
popa
push
push
mov
test
or
cmc
sarb
xchg
jmp
cltd
xchg
add
fistl
ret
leave
iret
gs
scas
pop
xchg
call
shlb
jae
stc
out
mov
mov
int3
adc
mov
shll
jbe
sub
mov
mov
out
fldl
xchg
daa
dec
imul
fcmovnbe
mov
cmp
dec
xchg
enter
fsts
notb
mov
imul
addl
jbe,pt
or
in
xor
divb
sub
inc
lcall
fldcw
ja
mov
and
sarb
orb
or
and
push
test
and
cmp
mov
inc
addb
mov
sbb
jmp
mov
mov
out
cli
pop
scas
js
imul
sub
decb
push
stos
mov
or
outsb
and
call
daa
jmp
shlb
push
insb
pop
adc
mov
scas
mov
loopne
pop
lahf
les
loopne
adc
lret
or
inc
icebp
cld
insl
inc
sbb
lea
inc
div
idivl
sbb
int3
subb
enter
cmp
inc
in
xchg
mov
int
inc
repz
mov
and
lret
and
je
inc
inc
ss
fcmovnb
fiaddl
xchg
pop
mov
mov
dec
push
pusha
sbb
iret
das
mov
test
xor
rcr
fxch
mov
jmp
inc
push
stos
xor
adc
lret
xchg
and
and
mov
inc
movsl
cmp
adc
lret
pop
xchg
sbb
scas
add
jbe
or
faddl
je
jmp
add
add
punpcklbw
out
daa
dec
aam
divl
into
cmp
sbb
cli
push
sub
fisubrs
inc
shll
popa
xchg
mov
das
inc
fimuls
or
add
adc
add
jnp
in
clc
orb
jbe
out
adc
adc
push
aas
shl
xchg
or
fbld
lods
cltd
xchg
mov
stos
inc
cmp
outsl
cmp
pop
adc
pop
mov
push
fimuls
js
sub
sarb
push
inc
mov
iret
xchg
push
pop
mov
ret
movsb
imul
mov
leave
jns
jmp
pop
adc
mov
iret
jge
sbb
xchg
jne
jle
lret
xchg
lds
push
enter
clc
in
pop
inc
arpl
into
dec
outsb
andb
and
add
rcrb
out
jns
insl
pusha
dec
mov
or
adc
sbbl
out
stos
mov
mov
call
push
adc
negb
sub
push
add
mov
and
jmp
aam
outsb
je
sub
jp
jnp
std
in
mov
sub
xchg
orl
jp
inc
iret
dec
aad
int
jns
insb
inc
sbb
scas
adc
mov
push
dec
pop
movsl
out
iret
cmp
je
sbb
xlat
and
push
sbb
adc
pop
pop
mov
jne
ljmp
js
pop
mov
fwait
faddl
mov
rorb
mov
pop
icebp
xchg
cli
or
popf
ret
mov
mov
jg
stos
pop
jge
mov
mov
popa
aad
mov
push
add
cmc
adc
int
andb
lds
movsb
call
mov
cmpsl
mov
sbb
add
pop
dec
xor
sbb
aad
sti
add
mov
sbb
fwait
add
jecxz
popa
or
mov
fstpt
pop
sbbl
sub
lret
push
lods
ja
pushf
andl
jge
pop
rcrb
out
pop
clc
mov
add
pop
sbb
insl
inc
loope
sarl
push
ret
adc
adc
add
rorl
push
sub
je
je
loopne
addb
jno
push
mov
xor
sbb
jge
sub
stc
fucomi
jne
sub
pop
fidivrl
push
rcrb
outsb
push
pop
adc
mov
dec
daa
imul
adc
sub
pop
ds
je
sub
push
psubusb
fs
shl
pop
outsl
je
scas
lea
jo
movsl
inc
insl
notl
pop
and
movsl
insl
or
dec
cmpsl
mov
pop
movsb
or
push
jae
shl
sbb
mov
mov
enter
dec
int3
add
aam
jg
sub
mov
je
je
dec
inc
inc
popa
adc
pop
out
das
sub
mov
ja
cmp
push
push
cmp
inc
xlat
ds
out
popf
loope
sub
shrb
mov
xchg
test
scas
mov
xor
push
in
subl
or
pop
adc
jae
pop
out
int3
mulps
aaa
mov
xor
sbb
outsb
dec
enter
mov
hlt
mul
or
push
push
inc
ds
inc
mov
dec
pop
dec
mov
dec
push
jl
cwtl
pop
cld
nop
fstpl
bound
inc
adc
das
flds
xlat
adc
int3
xor
enter
push
and
add
and
gs
add
mov
mov
mov
outsl
out
adc
add
movsb
mov
mov
mov
adc
cmp
pop
inc
fsubr
add
inc
mov
orl
pop
shll
neg
out
mov
xor
sub
xchg
dec
pmaddwd
mov
xchg
repnz
addr16
gs
pop
test
cli
jp
push
enter
mov
sub
push
fs
adc
xor
jae
shrl
xor
push
add
paddw
sub
scas
les
jnp
or
mov
cmpb
dec
stos
push
aad
fidivrl
insb
cmp
dec
mov
mulb
cli
loope
loope
xchg
mov
rclb
dec
ret
add
push
dec
mov
mov
insl
mov
test
xchg
stc
mov
popa
loope
ret
adc
dec
enter
mov
mov
jge
add
je
daa
pop
lods
sbb
sub
push
adc
jge
movsb
cmp
scas
pop
lock
sub
jns
jnp
sbb
xchg
aam
push
dec
loop
ficompl
mov
fimuls
add
sbb
cli
in
out
dec
fs
xor
push
jecxz
out
add
cmc
xchg
out
lds
aad
dec
stos
pop
lods
cs
pop
and
pushf
adc
adc
sub
xchg
sbb
add
test
lock
adc
add
ret
and
pop
enter
fidivs
fidivrs
mov
mov
cmp
push
dec
mov
ret
pop
shl
mov
std
xor
repnz
orb
pop
lahf
and
jns
scas
dec
aas
dec
add
add
imul
sahf
xchg
xchg
cmpsb
test
in
xor
sbb
and
sbb
mov
ljmp
pop
jbe
xor
test
cmpsl
or
aam
xchg
fwait
xchg
data16
les
popa
mov
mov
xor
sub
ja
mov
loop
jp
inc
cmp
xchg
ficomps
or
push
popa
arpl
cli
add
je
out
pop
clc
add
stos
stos
pop
mov
adc
fistpl
xchg
les
clc
lret
test
mov
dec
adc
sbb
adc
jecxz
loop
sbb
pop
popf
jmp
sbb
shll
mov
jnp
in
mov
mov
ds
mov
imul
or
push
dec
ret
fidivrl
loopne
sub
push
push
push
les
xor
sub
push
enter
jecxz
inc
mov
in
mulb
inc
out
inc
mov
movsl
jne
loop
sub
lret
add
push
cmp
push
jno
pop
add
or
inc
popf
leave
push
adc
jg
xchg
jno
sub
hlt
pop
inc
xchg
pop
pop
push
pop
xchg
add
adc
iret
ficompl
and
sbb
pop
cs
xchg
push
aam
xchg
out
fsub
and
sub
or
idivl
mov
cmp
notl
inc
int3
lcall
dec
enter
push
push
sbbb
cld
pushw
add
sti
push
idivl
cmp
push
filds
ds
mov
jge
cltd
sub
push
fmul
adcl
push
into
mov
and
gs
lcall
add
mov
or
sarl
inc
dec
lds
in
in
and
sub
mov
push
fstp
fiaddl
idivl
mov
cmp
pop
adc
movsb
in
xchg
push
mov
loop
scas
adc
xchg
push
je
sub
mov
testl
dec
ja
fldenv
push
push
xchg
flds
icebp
adc
pop
cmpsb
push
ljmp
adc
mov
inc
or
in
enter
mov
adcl
mov
paddsw
jae
rorb
xor
fists
repz
ret
decl
lea
out
pop
jno
loope
add
enter
cmc
lret
mov
and
jns
sub
push
outsl
cmp
mov
adc
test
and
add
cmp
int
push
xor
push
cli
mov
or
ss
data16
pop
es
out
sbb
xchg
pop
sti
add
pop
and
mov
cli
and
repz
push
xor
xchg
nop
lahf
outsb
jp
mov
repnz
cwtl
stos
negb
out
sbbl
je
ss
std
dec
jmp
outsl
scas
jle
pusha
or
movsl
lret
pop
ljmp
sub
movb
aad
dec
jno
cmp
xor
push
or
fcoml
bswap
sbb
xchg
pop
sub
jne
js
out
inc
imul
adc
adc
cmc
insl
in
mov
stos
mov
les
xor
test
sahf
mov
subl
insl
call
sbb
ss
mov
or
mov
xchg
adc
inc
nop
loope
dec
pop
sbb
add
fcom
push
hlt
test
cmp
adc
daa
inc
push
xchg
mov
scas
sub
push
push
cmp
addr16
pop
pushf
ret
lcall
ja
dec
mov
sahf
mov
xor
lcall
into
push
mov
js
cld
repnz
hlt
in
jae
in
push
or
xchg
xchg
push
mov
add
mov
sbb
mov
cmp
shll
aam
stc
adc
mov
aaa
nop
repnz
and
mov
push
mov
repz
scas
lret
es
xorb
fisubl
and
rclb
mov
out
pop
jns
mov
sub
sub
push
mov
xchg
lds
scas
fsts
jnp
push
sbb
shrl
iret
mov
shll
dec
aad
jb
repz
mov
fisttps
cmp
cmpsb
adc
push
cmp
fists
je
dec
dec
mov
imul
mov
pop
test
dec
lods
fadds
lods
movsl
add
and
mov
mov
add
cltd
cwtl
enter
mov
add
psubsb
mov
xchg
mov
mov
gs
adc
push
cmp
sub
and
ds
dec
mov
xor
mov
xchg
jb
jae
lret
mov
js
xlat
out
fbstp
mov
mov
jo
xchg
pop
ljmp
mov
dec
popa
mov
inc
xchg
mov
fcmovb
cli
cltd
inc
mov
mov
arpl
mov
xchg
aam
insl
insl
test
int
pop
jecxz
push
xor
jae
into
adc
test
fwait
inc
adc
test
hlt
jns
ret
lock
loope
add
pushf
stos
or
in
sub
adc
and
std
sti
pop
add
dec
call
pop
out
xlat
cmp
pop
sub
aas
push
scas
sar
mov
mov
clc
popl
mov
pop
sub
sub
push
pop
ss
hlt
push
and
jns
add
add
stos
push
test
push
jno
mov
cmp
dec
pop
jns
dec
cmp
adc
stc
adc
xchg
add
dec
insl
sub
cmp
mov
push
or
mov
stos
imul
and
mov
roll
mov
in
test
xor
mov
imul
sub
xor
out
mov
jge
mov
test
in
outsl
je
fmuls
mov
push
jge
repz
data16
call
xchg
jge
sbb
add
aas
fs
test
adc
pop
cmc
insl
in
and
inc
adc
mov
cmp
fisubs
pop
out
xchg
and
bound
ljmp
push
gs
cli
das
add
in
addr16
cmp
ljmp
sbb
mov
sbb
jne
xor
mov
call
mov
mov
outsl
cld
pop
lods
adcl
add
insb
js
mov
nop
fwait
lds
dec
jne
cmp
or
xorl
adc
xchg
mov
out
sahf
insl
mov
cld
or
imul
lds
push
shrl
xchg
inc
shl
cwtl
into
cmp
cmp
in
mov
xchg
fmull
push
cltd
ja
push
push
fildl
adc
cmp
mov
dec
xchg
cld
pop
pop
subb
shrb
enter
sub
daa
inc
xorl
lods
and
ljmp
push
stc
xchg
out
add
cmp
int3
dec
sbb
imul
neg
mov
fistps
movsb
push
mov
jecxz
lahf
fldl
sub
and
shl
popf
inc
aad
sbb
ljmp
mov
shrb
in
fwait
mov
aaa
dec
pop
xchg
test
dec
dec
fstpt
in
test
xor
adc
leave
push
mov
iret
sbb
scas
mov
fcompl
fisubrl
mov
pushf
adc
inc
in
ja
xchg
lods
adc
test
insb
xchg
imul
movsb
push
mov
in
cmc
jae
add
sbbb
xchg
sub
dec
ret
jle
ret
aas
xchg
out
lds
ds
test
loop
ret
mov
js
xchg
mov
push
into
fadd
aam
mov
cwtl
enter
rorl
xor
xor
mov
stos
adc
adc
lret
or
mov
mov
mulb
add
push
out
shl
aad
ss
mov
jnp
lahf
adc
jae
aam
test
std
sub
in
cmp
push
xchg
sbb
adc
inc
fbld
or
cld
push
jnp
push
ficoms
jl
jmp
icebp
inc
shrl
sti
pop
pop
in
dec
sbbl
mov
cmp
inc
ja
push
scas
sbb
xchg
cld
xor
sbb
test
andl
hlt
into
lock
sub
cmp
inc
mov
fwait
and
ret
push
bound
es
sbb
dec
mov
insb
or
inc
mov
mov
lods
xchg
or
cmpsb
cltd
jo
xchg
cmpsl
jnp
sub
jno
in
cwtl
inc
mov
aam
xor
outsl
or
cmp
and
push
popa
mov
cmp
imul
push
fstps
bound
jno
lods
loopne
lods
jo
cmp
mov
inc
and
incl
jmp
fs
test
outsb
sarb
dec
cmp
test
adc
inc
movsb
mov
fdivrl
xchg
das
ja
mov
sbb
mov
lret
idivb
cli
mov
movsl
ljmp
push
mov
das
ret
lds
inc
add
movsl
lock
and
inc
je
jl
pop
pop
fs
dec
adc
inc
movsb
adc
rclb
jne
outsb
mov
cmp
dec
xchg
lea
fldl
shlb
xor
out
pop
enter
push
xor
data16
nop
iret
lds
lock
call
lahf
dec
andb
es
xor
cmpsb
js
jae
jbe
int3
sahf
mov
sub
ret
ja
mov
mov
mov
out
roll
ljmp
mov
call
dec
shrl
rcll
shl
add
pop
jo
je
push
dec
neg
push
nop
jmp
in
sahf
addr16
je
rol
xchg
popf
mov
jmp
imul
fdivp
xchg
mov
sbb
insl
popa
xchg
clc
push
stos
jmp
add
lret
jnp
inc
push
int3
in
and
xchg
push
in
in
cmpsl
push
test
mov
popf
clc
lret
cltd
adc
inc
inc
pop
jo
xor
cmp
mov
scas
or
or
or
xlat
ret
xor
cmp
pop
cmp
sub
insl
gs
adc
inc
xchg
outsl
add
or
cmp
iret
mov
inc
jl
xchg
lret
sub
je
js
loopne
test
icebp
and
testl
lcall
cli
fmuls
jecxz
adc
pop
fisubrl
xor
and
mov
pop
out
inc
out
and
push
adcb
in
sbb
stc
mov
movsb
mov
jp
iret
adc
xor
mov
das
jo
in
mov
mov
or
cltd
adc
adc
add
loop
incb
xlat
push
call
xor
repnz
cmp
jnp
mov
sbbb
outsl
test
push
addr16
jecxz
out
push
in
mov
inc
ja
cli
mov
sbb
stos
pop
dec
lahf
into
or
mov
jl
inc
mov
pop
repnz
push
ljmp
sarl
lret
push
ja
out
push
stos
xchg
mov
mov
repnz
cmp
cmp
mov
in
lahf
ret
aad
jno
leave
mov
mov
sbb
pop
loop
jns
xchg
int
cld
lock
cmp
jmp
jb
push
loopne
pminub
mov
lea
xor
in
push
mov
inc
inc
arpl
lods
hlt
sbb
loopne
xchg
adc
mov
jle
aaa
dec
pop
and
or
idivl
aad
lahf
lds
xchg
out
sub
xchg
je
movsl
or
insl
pushf
insb
jge
sbb
sub
in
out
sub
in
mov
pushf
in
push
sbb
jns
xlat
jae
jle
mov
inc
sub
fists
jb
pop
pusha
jne
ret
movsb
in
repz
jnp
push
lret
jge
jb
mov
lock
add
mov
in
insl
cmp
data16
mov
adc
inc
hlt
push
lods
inc
outsb
ret
bound
pop
fucomip
pusha
pop
add
xchg
pushf
lahf
jbe
sub
pop
dec
pop
pop
insb
outsb
or
or
arpl
lret
jp
movsl
lea
inc
pop
dec
addr16
jb
or
fcoml
sub
lock
inc
jbe
or
mov
mov
xor
xor
xor
cmp
jle
push
pop
sbb
subb
test
dec
int3
pop
push
and
and
cmp
rcr
iret
arpl
test
ret
jbe
clc
mov
enter
pusha
cmpsb
add
sbbb
inc
xchg
mov
adc
pop
push
cltd
cmpsl
push
mov
and
mov
push
mov
or
xchg
dec
pop
xor
repz
jbe
sub
insb
jo
xchg
ret
in
bswap
fwait
sub
rcrl
or
mov
cmpsb
dec
daa
out
outsl
fists
lret
or
adc
jae
in
mov
pop
fists
sub
insl
push
arpl
push
std
jecxz
arpl
rolb
jp
fidivl
mov
aaa
fisubrs
and
inc
or
ss
ret
pop
cmp
push
fs
es
pop
aam
xor
jb
in
lock
addr16
xchg
sub
out
imul
fldcw
into
pop
push
cmp
adc
cli
js
lods
int3
jno
lret
mov
sti
mov
divb
daa
xor
jo
stc
sub
mov
push
pusha
arpl
popa
lea
fs
mov
iret
xchg
inc
mov
movsb
add
mov
das
mov
test
ljmp
test
pusha
sbb
sahf
xchg
pusha
popa
ljmp
in
repnz
or
lea
pop
nop
out
jne
add
pop
ljmp
aad
ret
dec
hlt
subb
ret
fcomp
je
jge
mov
into
xor
sub
inc
inc
daa
cmp
dec
inc
sbb
push
or
aad
adc
fwait
adc
xchg
sub
sub
rcl
clc
clc
dec
scas
mov
scas
andb
xchg
outsl
lahf
push
mov
dec
jecxz
inc
dec
mov
gs
lock
mov
jne
add
sbb
je
scas
jmp
add
pop
adc
mov
push
pop
loop
addr16
loop
jae
xchg
test
pop
and
mov
cmp
xchg
jno
xchg
sub
push
jp
mov
inc
sbb
pop
icebp
lret
push
dec
fisubrl
popf
cld
shll
jnp
popa
popa
sahf
xchg
push
jmp
and
adc
cmpsb
jg
and
push
js
cmp
xchg
pop
cwtl
adc
scas
mov
stos
mov
pop
sub
in
xor
iret
hlt
movsl
and
xor
aad
fstl
imul
cmp
nop
daa
cmp
push
pop
push
cmpsb
dec
sub
in
aaa
loop
sbb
loop
out
cmc
ret
pop
push
sahf
ljmp
mov
mov
mov
sti
xor
outsl
je
push
cmpsl
cmpsl
xchg
pop
scas
mov
bound
sub
mov
inc
push
outsl
mov
stc
rcll
test
mov
mov
in
rcrb
dec
and
add
test
imul
inc
cmpsb
test
icebp
fdivs
outsb
mov
ret
cmp
rcrl
and
push
fiadds
fnstenv
rol
xchg
mov
dec
cwtl
fnstcw
addr16
dec
clc
push
mov
sahf
sub
movsl
into
push
mul
push
mov
pushf
pop
dec
test
xor
jno
lds
push
mov
mov
test
sbbl
lret
mov
jnp
and
jmp
jp
rorb
push
cli
push
test
cmc
scas
insb
clc
or
scas
add
cmp
cmpsb
fwait
pop
push
mov
push
sub
push
dec
lcall
cmp
mov
mov
pop
and
inc
and
jae
jge
inc
ja
nop
inc
out
ficoms
movsb
pop
lds
sub
inc
sbb
dec
aas
mov
push
cld
push
mov
sub
and
fwait
pop
mov
or
jno
lret
fmull
adc
mov
lcall
push
mov
pop
repnz
sbb
addr16
cli
adcl
iret
cmp
movsl
imul
out
add
or
xor
iret
popf
sub
movsb
rcl
out
std
or
and
sub
sti
roll
mov
aaa
jmp
pop
dec
pop
fsubrs
push
lahf
imul
add
cmpsb
enter
and
fnstenv
or
add
loop
push
popa
and
mov
sbb
jp
pop
dec
fnsave
shl
fildll
jmp
xchg
mov
stos
lahf
jmp
add
push
clc
pop
mov
jl
fdivrl
fldl
or
clc
xor
scas
testb
cmp
inc
mov
xor
pop
mov
clc
push
xlat
cmp
mov
scas
fsub
std
popf
gs
fwait
jg
hlt
push
out
inc
aad
jmp
pop
je
xor
mov
in
lret
jmp
shll
mov
repz
les
inc
in
sahf
out
inc
lahf
mov
inc
repz
fildll
test
mov
in
push
and
sti
adc
add
mov
and
cmpsl
outsb
out
add
mov
fwait
adc
rcr
pop
or
mov
arpl
andb
push
icebp
rorb
lcall
cs
movlhps
mov
pop
mov
movsb
mov
adc
hlt
aad
jns
pop
cltd
clc
mov
jae
xchg
aad
xor
in
icebp
xor
push
mov
rolb
mov
dec
test
push
sahf
adc
sbb
inc
sbb
push
xchg
inc
lea
or
lcall
mov
aaa
xchg
jp
mov
repz
sub
cmp
inc
xchg
aas
icebp
mov
cmp
or
pop
hlt
enter
js
scas
loopne
jnp
xchg
mov
cmp
inc
pop
and
pushf
cmp
add
add
inc
jo
mov
scas
lods
out
fimull
inc
push
or
pop
adc
push
or
add
mov
sbb
push
add
and
pop
mov
sub
push
dec
sti
sub
ljmp
jl
cmp
dec
clc
mov
cmp
pusha
outsb
test
loopne
pop
sub
cwtl
das
jg
dec
insb
popf
inc
adc
pop
xchg
sbb
jne,pt
sarb
mov
inc
pushf
lcall
cmp
icebp
mov
mov
pop
pop
xchg
dec
xor
adc
xor
stc
iret
or
mov
lcall
mov
mov
lock
sub
data16
je
bound
jp
aad
mov
push
xor
es
push
aad
and
addr16
mov
fsubp
out
fsubl
mov
sub
sbb
fldt
adc
sub
pop
and
fdivl
inc
add
jbe
pop
add
adc
call
dec
nop
xchg
cmp
pop
cmpsb
mov
fsubp
mov
insl
xchg
pop
jle
xchg
xchg
push
xor
repz
daa
test
jle
mov
imulb
sarb
aad
scas
mov
sub
inc
jge
mov
xchg
gs
shrl
sysenter
jp
dec
inc
jbe
jne
xchg
stos
shlb
jg
mov
and
in
rdmsr
add
sbb
pushf
pop
test
daa
jmp
adc
adc
in
outsb
repnz
scas
lods
sbb
adc
mov
movsb
mov
int
inc
mov
dec
dec
pop
cmp
mov
add
adc
xchg
loop
stos
mov
pop
std
inc
mov
in
sbb
add
inc
mov
stos
into
push
push
in
inc
rol
loope
xor
xlat
dec
pop
adc
addr16
mov
fcomps
bswap
push
loopne
bound
or
je,pn
pop
leave
rorb
sbb
in
sub
jecxz
leave
gs
lret
xchg
adc
in
fnstcw
pop
lds
pop
scas
and
push
mov
and
inc
test
clc
inc
rorl
or
imul
add
cltd
fistl
jbe
inc
fbld
dec
outsb
shrl
das
popf
shr
pop
push
pop
jae
in
or
xor
test
inc
sti
pop
pop
cmp
cmpsb
xchg
test
adc
xchg
lea
adc
and
cltd
out
cmpsb
dec
adc
xchg
lret
lea
adcb
test
fsub
fildll
sbb
cmc
xchg
inc
mov
cmp
mov
mov
adc
add
mov
push
dec
jns
or
adc
mov
loopne
popf
into
adc
cmp
xchg
jl
mov
dec
mov
xor
mov
pop
test
mov
xor
scas
iret
in
hlt
mov
cwtl
or
push
mov
bound
repz
cmp
incb
and
or
dec
or
xchg
scas
adcl
arpl
inc
adc
and
popa
cmp
adc
mov
cmpsl
scas
dec
jno
xchg
adc
adc
and
pop
outsl
xor
jg
cld
or
inc
pop
outsb
sub
rol
ja
jae
and
xlat
rcrl
sbb
push
adc
sub
sub
shrb
movsb
and
dec
out
into
cmpsl
test
adc
test
divl
stos
mov
frstor
gs
jb
cli
or
xor
inc
push
scas
mov
xor
inc
or
data16
push
into
or
push
movsb
push
push
mov
ljmp
in
cli
sti
dec
fmul
mov
and
sub
movb
dec
pop
pop
dec
sbb
xchg
aaa
sub
lea
leave
fmull
mov
mov
push
mov
adcl
lds
pusha
mov
add
sbb
insb
jne
mov
inc
sub
and
or
repnz
dec
lock
jb
jb
bound
iret
in
add
sbb
fcomps
ss
xor
inc
or
lcall
dec
xchg
sub
cmp
jns
daa
insl
adc
imull
jg
or
repnz
pop
repz
icebp
sbb
clc
or
es
cmp
xchg
cmp
sbb
jae
iret
sbbl
mov
inc
inc
dec
fwait
sub
push
loop
scas
notl
arpl
xchg
adc
mov
xchg
sbb
xor
les
movsl
andb
sub
cmpsw
jl
pop
push
inc
adc
stos
xchg
push
je
outsb
in
or
bound
sbb
incl
pushf
enter
iret
mov
lock
mov
or
loop
sub
clc
data16
jl
or
shl
aad
shll
fwait
and
je
fdivrs
jg
inc
in
xchg
pop
daa
and
cmp
cmp
mov
inc
lret
ficomps
push
jbe
adc
push
enter
jbe
sub
fs
sub
cmp
dec
jmp
push
outsb
jb
popf
inc
out
jns
sub
pop
movsl
adc
daa
dec
mov
mov
pushf
add
je
in
xchg
into
movlps
std
ret
fwait
int3
loope
pandn
push
sbb
aam
push
js
add
arpl
adcb
fmuls
sbb
adc
loopne
cli
sub
pop
pop
enter
inc
in
lcall
push
js
push
xchg
out
jns
gs
fildll
mov
pop
adc
lds
dec
and
and
xchg
out
iret
cmp
rcll
subb
pop
push
loop
data16
pop
enter
testl
push
movsb
xchg
aas
outsb
fildll
int3
adc
hlt
popf
cld
add
pop
mov
daa
pop
mov
jnp
sub
js
inc
es
cmp
sbbb
insl
cmc
push
xchg
enter
fstps
out
outsb
inc
das
shll
scas
faddl
scas
dec
inc
ficoms
xor
fnstenv
xchg
sub
push
sub
push
sub
test
gs
or
pop
fs
xchg
push
clc
int3
xor
and
xchg
push
imul
push
or
out
mov
mov
subl
xor
push
sub
cwtl
xchg
add
out
xor
jge
jne
or
sub
inc
lret
or
pop
int
lock
sahf
mov
inc
aas
stos
ja
dec
das
jbe
aas
jl
adc
sub
movsl
cmc
cmc
mov
jne
push
adc
vsqrtpd
sub
add
push
ljmp
cmp
jl
test
dec
lcall
std
repnz
push
xor
add
jno
xor
loopne
mov
iret
dec
int3
lock
enter
and
sbb
loopne
std
push
dec
add
dec
les
sbb
nop
rorl
pop
lea
shlb
jno
sbb
dec
inc
shlb
in
push
arpl
and
jne
ret
pop
pop
sub
outsl
es
jge
xchg
push
shr
or
jnp
es
ja
ret
hlt
imul
jecxz
jg
push
adcl
xchg
sub
mov
push
pop
mov
jne
jb
jo
mov
js
xor
xchg
mov
cwtl
aas
xchg
nop
and
mov
movl
decb
sub
into
sbb
pop
repz
adc
sbb
scas
jae
es
iret
xchg
or
pop
add
push
cmp
ljmp
push
cmpsb
add
hlt
and
ficomps
push
and
insl
sbb
sub
jmp
dec
xchg
push
clc
std
test
push
cwtl
sbb
sub
pop
mov
mov
sbb
and
icebp
mov
int3
pop
mov
fsubl
cmp
leave
jmp
loope
es
imul
mov
cmpsl
popf
xor
xchg
mov
xor
cmp
shl
leave
loopne
and
mov
inc
pop
stos
inc
jo
mov
pop
pop
mov
mov
push
mov
test
lock
stos
shrl
mov
lret
jp
mov
test
repnz
push
into
pop
cmpsl
pop
or
and
lock
pop
aad
jae
jae
insb
into
loope
nop
adc
pop
xchg
ss
adc
stos
out
pop
mov
dec
mov
jle
ds
jge
mov
cmpsb
out
les
jl
cmp
adc
fcomi
pop
xor
jg
mov
mov
in
test
imul
jg
jae
inc
jle
lods
and
jae
jg
nop
cld
cmpsb
jmp
jp
mov
and
lret
das
cmp
sahf
mov
or
inc
outsl
and
xchg
repnz
and
imul
and
xchg
add
fists
xor
sbb
sub
mov
gs
xor
sub
enter
mov
mov
fucomp
cmc
test
frstor
addr16
jo
push
mov
pop
scas
cmc
sti
xchg
popa
mov
add
in
adc
not
hlt
add
pop
cmc
lods
add
mov
mov
pop
or
arpl
test
sbb
lea
out
pop
mov
mov
mov
inc
out
xchg
loopne
dec
mov
shrl
ret
xchg
insb
push
xor
test
mov
pusha
pop
xchg
pop
loopne
and
rcl
subb
test
push
loopne
cmc
shrb
pop
in
incb
ret
imulb
into
loop
xchg
js
jbe
mov
dec
lret
shlb
push
cs
ss
stc
cmpl
xor
lret
inc
jl
aad
xchg
sbb
xor
inc
cmp
jle
mov
ret
insb
sti
jnp
cld
pop
dec
cmp
fdivrs
das
push
lret
into
fucomip
gs
jl
sub
push
outsb
sub
leave
cltd
and
sbb
inc
enter
movsl
shlb
mov
mov
cmp
fdiv
in
sub
cmp
lret
sbb
dec
push
cs
cs
out
sub
sbb
jl
inc
push
shl
hlt
subb
pop
add
xchg
xchg
lcall
cltd
add
aaa
push
lcall
mov
fldcw
adc
xchg
dec
or
or
fsubrl
stos
mov
stos
es
in
in
adc
fwait
nopl
mov
fimull
cs
lock
add
lcall
xor
and
stos
int3
sub
enter
xchg
hlt
cmp
in
inc
das
lret
insb
push
movsl
inc
push
cmc
sbb
aaa
jbe
xlat
ret
or
and
push
rol
jecxz
dec
sti
insl
cmp
xor
notb
stos
mov
lods
aam
or
and
repz
dec
xor
push
stc
pop
fdivrs
pop
out
mov
pop
mov
mov
cli
enter
pop
sbb
sbb
in
insb
xchg
xchg
jp
sub
daa
push
lds
das
sti
xor
pop
sub
add
movsb
popf
or
xchg
out
stos
int
in
xor
xorb
xor
sub
mov
inc
xor
mov
test
xchg
add
loope
loope
mov
shrl
stos
jl
stos
mov
xchg
pop
or
adc
int
les
shlb
mov
mov
in
cmc
stos
outsb
mov
dec
push
sahf
mov
lea
mov
dec
outsb
adc
mov
inc
icebp
push
jp
shrl
lret
xor
daa
mov
add
pop
xchg
mov
cmpsl
movsl
adc
pop
mov
sahf
jo
outsb
negb
and
mov
or
mov
cld
sub
mov
xlat
dec
pusha
hlt
or
sub
cmp
int3
cwtl
stos
inc
jbe
dec
xchg
out
arpl
out
in
stc
cld
xor
cmp
cmp
test
out
aaa
cmpsl
popf
dec
push
cmp
lret
ja
mov
bound
iret
movsl
aas
stos
mov
or
mov
mov
test
xor
and
pop
cld
add
scas
xor
lcall
addr16
testb
ret
iret
inc
mov
and
js
int3
and
jmp
inc
outsb
lahf
sub
ss
sbb
testb
jl
jmp
fiaddl
arpl
lret
mov
cmp
in
fcomi
sbb
cli
lods
js
in
sub
dec
adc
mov
xchg
add
push
push
add
cmp
mov
call
jmp
aas
push
or
aas
cmp
dec
dec
ss
inc
icebp
subb
outsb
lea
movq
rorb
sub
mov
punpckhbw
cmp
mov
fisubrl
ja
movb
mov
je
shrb
lahf
sahf
cs
pop
int3
mov
out
shl
jl
push
ds
gs
nop
inc
sysret
in
popa
aas
fldcw
cltd
test
fstps
ljmp
pop
pusha
lahf
daa
arpl
mov
js
in
dec
adc
xchg
and
mov
mov
dec
sbb
mov
mov
sbb
test
in
cmp
mov
into
push
cmp
orb
cli
pop
leave
nop
cwtl
xor
xchg
out
mov
int
imulb
pop
xlat
test
arpl
mov
and
mov
cld
in
add
int
push
and
xchg
sar
sub
jmpw
pop
mov
xchg
fnstcw
push
lea
sbb
adc
xchg
cltd
jne
test
add
and
sbb
cs
inc
or
inc
mov
inc
stos
fnstenv
incb
mov
dec
imul
pop
out
mov
mov
or
sbb
sub
subl
jno
inc
jle
out
outsl
push
add
bnd
outsl
jl
inc
mov
xchg
cmpl
pushl
jnp
jno
sub
mov
les
pop
imul
inc
je
pusha
or
pop
push
xorb
in
push
in
mov
popf
pop
sbb
mov
inc
add
inc
bound
sub
adc
and
mov
insb
push
outsb
cltd
shll
test
or
push
mov
out
pop
cmpsl
add
sub
sbb
push
addr16
adc
mov
adc
jge
sbb
loopne
xlat
sub
flds
xor
loopne
int
lods
lret
add
dec
push
inc
add
lcall
push
jo
xchg
ss
push
sti
pop
loopne
adc
xor
andb
or
jmp
sub
cmp
xchg
out
and
int
cmp
xorb
movsl
sub
movsb
inc
add
jmp
mov
fmull
pop
inc
xor
aam
or
push
inc
xorb
pop
mov
mov
jmp
mov
dec
push
xchg
push
inc
in
fistpll
arpl
cld
xor
int
sahf
and
push
std
jbe
mov
in
mov
jecxz
hlt
mov
mov
pop
lahf
ficompl
in
push
dec
xor
shlb
xchg
inc
fisubrl
frstor
inc
push
sub
enter
inc
dec
pusha
xorl
pushf
xchg
fldl
cmpsb
jb
aas
mov
push
push
in
pop
sti
arpl
test
mov
lods
fsubp
or
mov
jle
test
out
fsubrl
jecxz
loope
jno
dec
pop
add
xor
daa
sar
sbb
push
test
xor
pop
fadds
jb
aaa
xchg
or
ss
js
dec
xchg
daa
shlb
push
stos
inc
test
jge
sub
ret
sbb
enter
lahf
icebp
mov
popf
dec
into
andb
jno
out
and
mov
cmp
sbb
ja
movsl
imul
add
incb
lock
clc
add
repz
fcmovb
mov
jno
scas
pop
outsl
lock
hlt
ret
pop
dec
lods
adc
xorl
cmc
das
xlat
mov
cmpsb
aaa
mov
into
bound
loopne
or
mov
push
cmpsb
jge
ds
shll
insb
pop
jmp
ret
in
and
push
sbb
dec
subb
pop
das
lods
out
rol
xor
mov
xchg
subl
sub
jb
mov
out
jecxz
pop
inc
fs
pop
in
dec
jno
out
sub
mov
repz
movsl
cmp
push
cmc
pop
sbb
add
es
mov
xchg
out
movsl
andb
xor
jecxz
xchg
sub
push
mov
mov
sub
inc
mov
pop
rcrb
movsl
adc
icebp
add
mov
mov
icebp
popa
cmp
mov
jo
rcll
nop
or
mov
popf
stos
push
push
mov
mov
mov
fsubs
adc
pslld
test
ss
pop
mov
mov
movsb
push
mov
pop
sub
lret
dec
loop
jo
dec
add
or
dec
jb
mov
popa
xchg
lahf
stos
xchg
shlb
sarb
dec
imul
push
roll
into
jnp
or
cmp
imul
test
in
mov
pop
jne
movsb
cmpl
hlt
jo
out
pushf
setl
ja
push
mov
cmpsb
stos
cmp
jbe
push
dec
mov
insl
in
cmc
in
xor
and
push
sahf
loope
xchg
bound
scas
jo
adc
or
insb
push
mov
mov
out
sbb
lods
stc
xchg
movsb
jl
xor
fwait
cmp
inc
pop
or
cmpsb
out
call
add
adc
sub
lock
sahf
pop
jno
js
nop
cs
testl
movsb
xor
xor
sub
adc
aas
jle
push
mov
add
gs
lret
xlat
push
jp
adcl
push
adc
popa
jg
insl
fs
pop
dec
imul
flds
cltd
rcrl
cmp
sub
add
mov
mov
fwait
movsb
dec
cmp
lds
mov
in
xor
frstor
mov
mov
pop
cmpsb
cmc
fidivs
mov
mov
jle
lock
addr16
push
sub
and
aam
inc
mov
rcl
sahf
aaa
test
sub
call
shr
push
push
mov
mov
mov
jle
std
rcrb
adc
sbb
jnp
mov
lahf
add
stos
ss
roll
xlat
nop
or
stos
dec
inc
pop
cmc
test
fists
push
mov
cwtl
pop
and
pop
xor
lret
lea
or
push
or
cmp
inc
pop
mov
and
cmpsb
fbstp
sbb
lcall
cmp
and
jnp
or
and
mov
dec
out
adc
inc
dec
in
mov
ds
mov
sub
push
dec
fmull
imul
loopne
dec
mov
push
pop
fldenv
jo
cmpsb
fldt
stos
pushf
ret
enter
test
sbb
arpl
cltd
inc
sbb
xor
push
out
popa
aas
mov
sub
mov
xchg
push
stos
fs
insb
mov
xchg
sbb
mov
push
and
xor
pop
outsb
xor
das
mov
ds
sbb
sub
adc
cltd
pop
aam
add
cmp
sbb
ja
imul
add
dec
lret
loop
adc
pop
jb
pop
das
or
ret
adc
push
xchg
sub
pslld
gs
mov
jl
mov
xchg
adc
jbe
xchg
daa
mov
fmul
lock
sub
push
adc
xchg
jb
fists
mov
leave
mov
cmpsl
cs
xchg
dec
dec
subb
push
pusha
cmp
arpl
mov
loope
jbe
jecxz
sub
xlat
xchg
lock
bound
lock
mov
ret
sbb
out
data16
dec
iret
sti
add
mov
add
test
mov
test
cmpsl
adc
add
mov
cltd
add
xchg
xchg
xchg
xorl
dec
xorl
cmpl
or
mov
adc
jle
pop
pop
dec
fwait
xchg
cmpsb
jle
mov
pop
xchg
lret
fldcw
pusha
orb
lret
mov
xchg
fldl
pop
xor
pop
jbe
jge
mov
pop
in
dec
jo
cmc
mov
repnz
xchg
aaa
cld
repz
jmp
fidivrs
leave
imul
xor
ror
rcll
push
or
mov
fs
bound
fists
inc
mov
aam
cmp
add
sbb
mov
das
sbb
add
adc
pop
nop
mov
lret
push
mov
xchg
cmp
pop
sbb
cmp
push
fwait
movsb
sbb
into
or
aaa
rcll
mov
out
xor
mov
jg
mov
inc
fcoms
stos
mov
push
add
jl
xor
mov
pop
push
sub
leave
into
sbb
dec
aaa
adc
aam
in
dec
sbb
nop
add
push
cmp
cmp
inc
cmp
out
mov
dec
xor
ret
add
nop
cmp
outsb
aam
loopne
ss
outsl
dec
lea
cld
xor
arpl
ffreep
mov
or
fdecstp
imul
sub
bound
and
into
sub
push
fwait
ss
sbb
xchg
fimull
and
xchg
sbb
in
adc
xchg
dec
or
sub
add
icebp
cltd
xchg
jno
mov
rolb
pop
xor
mov
lods
push
inc
mov
repz
pop
bound
mov
cmpsb
xorb
sbb
cmp
ja
movsb
jae
cmpsl
dec
pop
push
sbb
lock
outsl
and
and
ss
popf
test
dec
mov
jnp
hlt
and
leave
rcrb
fstp
inc
mov
xchg
dec
je
stos
test
out
in
push
fdivs
sahf
pop
popa
push
aaa
imul
jge
mov
and
mov
cmpsb
or
xchg
hlt
jmp
ds
and
cmp
inc
dec
sti
adc
je
lds
add
jns
or
int
jg
cs
stos
or
mov
stos
adc
stos
stc
cli
in
add
jo
xorb
movb
jnp
jmp
add
xor
lcall
dec
add
xor
adc
aam
cmpsl
aad
or
nop
xlat
push
pop
mov
clc
lds
jmp
add
pop
jb
xor
ja
js
mov
lret
or
mov
xchg
fidivrs
mov
out
lds
and
pop
es
outsb
and
add
and
lcall
lods
sub
lock
mov
dec
dec
pop
test
lods
cmc
jns
insb
jp
xchg
hlt
mov
add
pop
push
loopne
xor
cli
loope
jae
stc
gs
outsl
cmpsl
jecxz
jno
stos
jb
adc
cwtl
loop
jp
mov
adc
pop
stos
test
jno
nop
mov
leave
orl
mov
cmp
jl
inc
xchg
mov
movsl
pop
repnz
popa
inc
mov
or
xor
stc
mov
icebp
out
sub
jl
in
xchg
pop
cltd
sub
pop
xchg
adc
js
adc
mov
loopne
in
sub
jecxz
push
inc
out
jg
inc
inc
arpl
std
ret
es
into
sub
xchg
fadds
add
loop
in
push
and
sub
adc
xor
daa
int3
mov
sub
push
lock
xchg
mov
in
jo,pt
arpl
mov
into
dec
sbb
fisttpl
pop
cltd
adc
push
cmp
mov
mov
adc
popa
das
icebp
mov
test
dec
mov
pop
int
mov
repz
repz
inc
and
test
notl
mov
mov
pop
adc
pop
in
cmp
mov
mov
pop
mov
stos
xchg
adc
xchg
outsb
xchg
mov
icebp
in
mov
scas
mov
or
xchg
popa
insl
loop
adc
mov
in
sub
insl
adc
cmp
cmp
cmp
aas
enter
mov
jg
lods
mov
pushl
cli
fs
out
fistpl
adc
sub
int3
popf
ss
lret
cmovle
sbb
ss
testl
test
inc
jns
jns
popa
lret
sub
mov
inc
adc
pusha
and
xor
mov
jno
push
mov
adc
rcrb
aas
mov
repz
andb
adc
or
xlat
imul
sub
mov
xor
inc
mov
push
xor
adc
jnp
testb
push
in
mov
repz
popa
sbb
or
hlt
insb
inc
or
outsl
mov
repnz
mov
outsb
pop
mov
cwtl
jecxz
scas
shll
dec
mov
cld
sub
movsl
loop
or
test
pop
scas
mov
add
push
add
push
dec
jecxz
push
mov
imul
jmp
pop
lods
xchg
les
pop
jns
mov
dec
push
xor
mov
adc
outsb
xor
mov
lods
push
xor
cmpb
dec
push
push
xchg
cli
ret
out
or
xlat
jg
inc
jle
data16
jb
mov
repz
mov
and
data16
in
xor
mov
adc
aas
lahf
mov
mov
in
je
adc
nop
stos
push
mov
movsb
jae
cmp
ljmp
inc
cmp
push
mov
test
pop
aas
test
fnstenv
cmp
loop
in
cmp
mov
jno
mov
daa
push
mov
imul
icebp
notb
lahf
or
push
sub
ret
push
mov
or
jg
es
and
mov
iret
dec
pop
cld
fdiv
inc
mov
sti
xchg
icebp
ret
cld
mov
movsb
insl
flds
das
jge
mov
xor
pop
add
rcr
hlt
lea
mov
mov
mov
and
data16
inc
cli
mov
in
adc
mov
sub
ret
ds
rcrb
fwait
out
fwait
mov
aad
lds
stos
addr16
int
or
inc
bound
or
outsl
fisttps
push
daa
fnstenv
rorb
inc
push
scas
add
scas
out
nop
adc
add
sbb
sbbb
mov
stos
sub
lds
std
mov
outsb
push
lods
or
aam
pop
push
cmp
or
push
sub
or
dec
fucomip
addr16
aam
cltd
ja
sbb
push
cmp
inc
leave
and
enter
inc
andb
add
pushf
insb
push
shll
mov
xor
nop
pop
xor
sub
sahf
lods
test
push
lea
adc
xchg
outsl
and
iret
test
inc
insb
adcl
cmp
out
pop
jl
cli
xchg
arpl
ficoms
lea
mov
add
cltd
movsl
out
pop
out
dec
shrl
mov
loope
dec
fbstp
sub
bound
mov
insl
scas
stc
movsb
jns
xchg
push
jb
pop
inc
pop
mov
dec
cmc
pusha
fldl
mov
push
cmp
int
movsl
xchg
icebp
and
std
adc
push
mov
je
fs
lock
and
push
inc
push
mov
dec
dec
jp
xor
fisubrl
leave
xor
sbbb
aas
lods
adc
neg
push
subb
lods
dec
imul
in
xchg
xchg
loop
jo
mov
lret
pop
arpl
cs
fdiv
pop
push
in
or
pop
jmp
cmp
loope
mov
sbb
sbb
cmp
sub
pop
mov
dec
pop
sbb
dec
es
jae
or
or
pop
sarb
cmp
std
decb
movsb
in
stos
movaps
aaa
pop
das
test
fs
cmp
xchg
adc
jge
and
mov
stc
jge
mov
or
jnp
push
adc
dec
push
addr16
mov
mov
in
mov
adc
leave
xchg
mov
ret
or
cmp
outsb
mov
pop
outsl
adc
rclb
es
lahf
add
mov
sbb
jo
sub
fstps
or
mov
or
pop
pop
dec
cmp
fcmovu
push
xchg
pop
push
push
or
xor
push
jns
cli
clc
mov
loopne
dec
cmp
xor
or
loopne
pusha
popl
inc
imul
mov
loop
leave
push
mov
stos
push
dec
cmp
nop
and
jge
pop
push
sti
scas
divb
mov
loopne
mov
xchg
or
sbb
in
dec
mov
sahf
jecxz
mov
push
add
mov
cmp
mov
xor
mov
popa
iret
mov
fldl
aam
call
stos
xor
pop
mov
stos
ret
add
dec
loope
popf
pop
add
popf
in
cmc
lock
push
repz
inc
pop
push
dec
imul
stc
popf
cli
jbe
sub
adc
mov
jmp
push
into
daa
dec
adc
ret
popa
cmp
das
pusha
out
inc
stc
das
stc
pop
jmp
ficoml
xor
mov
mov
test
nop
adcl
loope
jp
pop
mov
pop
add
outsl
fldl
xchg
iret
movsl
jge
loop
inc
push
mov
mov
shlb
mov
cltd
ss
jmp
cld
mov
push
scas
cmpsb
sbb
or
jae
in
push
cli
shr
rcr
pop
pop
pop
lahf
clc
jno
pop
mov
test
stos
fiaddl
xchg
lds
mov
mov
sbb
mov
add
cmp
aad
mov
inc
repnz
push
or
lds
cmp
cmc
push
lods
pushf
push
aaa
dec
js
cmp
in
mov
mov
shll
gs
cltd
out
mov
jmp
pcmpgtb
imul
jns
xchg
dec
scas
subb
shr
out
inc
push
and
cmp
mov
pop
movsb
or
imul
lea
mov
mov
sbb
add
lret
and
punpckhwd
into
add
mov
or
mov
add
mov
loope
pop
inc
fs
sti
scas
push
push
aam
mov
mov
ficoms
mov
inc
and
dec
lock
leave
mov
mov
mov
cld
sbb
pop
sahf
ret
dec
cmp
ret
sti
xchg
push
test
nop
adc
mov
xchg
imul
rorb
sbbb
pop
outsl
xchg
int3
addl
pop
cmpsb
xor
inc
cmp
pop
jp
js
insl
lret
pop
jle
xor
cmp
dec
pop
dec
mov
lock
pop
loope
loopne
jne
xor
ffreep
cltd
aam
xor
scas
enter
ret
in
das
xlat
fs
je
cld
cli
jnp
mov
cmp
sub
dec
scas
enter
xor
arpl
dec
lret
xor
cld
nop
mov
rcrb
out
scas
jb
mov
adcl
insb
cmp
sub
mov
mov
fdivrs
test
loope
bound
jns
jmp
dec
test
lret
cmp
mov
bound
push
pop
mov
pop
je
adc
rcl
mov
cmpsl
pop
pop
dec
mov
out
cmp
dec
cli
out
sbb
jp
adc
pop
push
ja
test
daa
fcoms
dec
xor
movsb
faddl
dec
js
pusha
inc
mov
push
sub
hlt
mov
inc
push
cld
fsubrs
push
cmc
add
adc
jmp
clc
fnsave
mov
shll
lods
notl
push
pop
push
faddp
je
xchg
mov
insb
sbb
hlt
addl
data16
ds
cwtl
push
jo
sub
cmpsb
mov
mov
xor
mov
std
jno
mov
mov
in
push
xchg
mov
xor
test
leave
jg
xchg
test
pop
jb
cwtl
sub
or
cmp
cmp
lods
sbbl
inc
adc
add
dec
js
cmp
mov
fcompl
enter
sahf
pop
sub
ljmp
shl
fcmove
in
pop
mov
jo
xchg
mov
pop
and
popa
xchg
lods
sbb
mov
lgs
lods
push
rcrl
add
aad
sub
test
and
sub
pop
xor
cmpsl
outsb
mull
cmp
inc
imul
imul
test
rclb
inc
adc
out
lcall
adc
jne
push
sbb
pop
and
pusha
mov
and
mov
notb
cmc
repz
mov
and
xor
int
jmp
pop
ret
dec
mov
test
mul
rcpps
cmc
mov
inc
pusha
aaa
fwait
add
in
mov
orl
adc
test
imul
ljmp
lods
bound
inc
iret
shll
lds
aaa
pop
pushf
add
aam
pop
mov
push
push
jno
lods
sub
push
cmpsb
lret
and
orb
add
fadds
cmovns
mov
mov
or
xor
add
testb
mov
jae
mov
sub
mov
subb
dec
cmpsl
mov
adc
cltd
xor
into
inc
rclb
insb
in
mov
jno
sbb
push
mov
scas
aad
push
pushl
adcl
js
jmp
stos
lods
daa
mov
ja
shll
aaa
out
lds
inc
stc
inc
mov
lock
ljmp
int3
or
call
stos
sub
fcmovnu
lods
add
and
mov
mov
push
cld
xchg
push
fstpl
aad
test
mov
data16
cmc
enter
imulb
insb
fwait
xlat
push
idivb
mov
pop
test
cmp
push
cmp
stos
pop
sub
mov
rcll
adc
push
popf
xchg
sbb
mov
sub
xor
inc
sub
loop
mov
dec
mov
popf
sub
xor
cmp
sub
pop
mov
adc
mov
in
inc
bound
inc
stos
mov
fcomps
push
aad
mov
pop
sti
ss
jno
aaa
mov
xor
aad
loope
dec
dec
dec
xlat
jbe
mov
dec
adc
lahf
rcl
push
bound
ljmp
and
mov
xor
outsb
dec
mov
adc
scas
jns
mov
xchg
mov
jl
mov
in
loop
push
gs
rcl
xor
and
add
xchg
mov
and
jmp
pusha
push
icebp
mov
cld
in
mov
int
pop
sbb
call
into
aam
dec
adc
mov
in
or
dec
cmpsb
xchg
out
popf
mov
test
mov
fisubrl
cs
lods
adc
repnz
orb
jle
cli
mov
popa
je
sbb
inc
or
mov
scas
imul
jbe
xchg
pop
and
enter
inc
insb
cmp
mov
jecxz
lods
push
imul
gs
jle
popl
jo
inc
int3
aad
mov
mov
adc
jecxz
xchg
aas
add
mov
xchg
mov
adc
push
repz
popf
arpl
jns
dec
and
xor
pop
or
cltd
mov
insl
push
mov
mov
xlat
cmp
or
jmp
pushf
lcall
clc
xchg
lea
fcompl
mov
pop
popa
cmp
insb
xor
rcl
sbb
cmp
mov
push
call
rcrl
push
frstpm(287
push
dec
xchg
xchg
mov
mov
jo
cmp
fstps
mov
gs
aas
cmp
orb
imul
cmp
sahf
mov
idivb
popf
in
adc
das
icebp
cmpsb
into
jmp
pop
and
mov
cld
push
xchg
jp,pn
pop
icebp
test
push
add
mov
sub
cmp
cmp
sarl
push
loope
ja
jg
imul
and
dec
sub
fcmovnbe
sub
mov
cmp
xchg
add
cwtl
cmp
fs
xlat
orl
enter
jmp
or
add
imul
pop
daa
add
test
jge
cmpsl
outsl
inc
and
push
jge
mov
add
pop
lret
clc
xchg
jb
or
sbb
mov
inc
pop
loope
popa
jg
sub
jns
pop
in
mov
and
pusha
xor
mov
sbb
daa
test
out
xor
shlb
aam
mov
pop
mov
fwait
xlat
int
jne
icebp
std
inc
push
test
mov
sbb
popf
leave
shl
sub
adc
sbb
cmp
push
cmpsb
adc
lock
jge
idivl
jo
mov
fwait
pop
cmpsb
mov
push
sbb
jne
mov
push
stc
icebp
mov
mov
cltd
or
or
pop
cmp
pop
pop
rolb
idivb
inc
xor
jge
jbe
das
in
mov
adc
arpl
and
stos
idivl
iret
popa
push
cwtl
and
and
push
pop
xor
pop
pusha
cwtl
inc
cmp
sbb
add
cltd
data16
xchg
and
ds
in
xchg
inc
out
lea
aad
add
dec
dec
pop
inc
insb
inc
cld
and
or
xor
inc
fisttpll
sub
leave
inc
cwtl
cmp
rcrb
hlt
testb
pop
add
xchg
test
or
jne
push
fwait
cmp
mov
pop
cld
in
pop
dec
call
pop
pop
xor
test
icebp
orb
clc
shrl
icebp
push
adc
jg
dec
mov
mov
jne
sub
test
xor
popf
sub
add
adc
inc
lods
rcl
aaa
jecxz
scas
dec
pop
cmpl
xchg
and
xchg
mov
add
jno
cmc
push
pop
add
loopne
pop
into
pop
mov
sub
add
push
scas
mov
xchg
pextrw
adc
insl
cmpb
loop
fsubrl
dec
sbbb
sbb
nop
lret
ret
stc
jbe
ret
in
xchg
jg
and
pop
cmp
movsl
icebp
fdivs
sbb
or
jl
adc
dec
repnz
push
pop
push
inc
pop
mov
rcl
stc
add
popf
or
test
cmp
jl
or
int3
loope
add
mov
andb
cli
pop
ss
pop
sub
insl
push
out
out
pop
into
mov
shl
test
and
lcall
xor
cmp
cld
pop
push
jl
or
xchg
fs
push
cmp
inc
ret
sti
icebp
ja
adcb
sbb
cmp
jle
ds
clc
xchg
scas
pop
pop
add
push
jno
movsb
fwait
inc
out
xchg
xchg
or
jnp
xchg
jl
mov
dec
idivl
test
lret
mov
mov
add
dec
outsl
ffree
enter
xor
lds
sbb
sbb
push
inc
dec
and
sahf
nop
xorl
movsb
jmp
cmpsb
shll
push
cmpsb
mov
adc
adc
pmullw
cmp
cmp
sbb
push
out
push
push
xchg
lds
mov
aam
negl
adc
roll
inc
mov
mov
call
clc
pop
rorl
dec
fadds
sbb
xchg
outsl
imul
and
xor
repnz
iret
lret
adc
xchg
data16
xor
sti
sahf
push
sbb
inc
cmp
mov
or
movsl
icebp
mov
mov
out
push
dec
and
add
test
pop
mov
or
cs
jo
sub
out
lea
lods
mov
and
push
sbb
push
lods
push
cmpsl
xchg
add
jge
pop
ror
movl
jo
adc
mov
add
out
mov
and
scas
cmp
lahf
cmp
out
sub
cld
dec
mov
ljmp
pop
push
test
in
iret
les
mov
fiaddl
insl
outsl
push
mov
int
sub
inc
jae
movsl
stos
mov
xadd
lcall
and
sarl
pop
xchg
loope
fildl
push
push
sbb
clc
adc
sub
pop
sahf
test
mov
lds
jbe
nop
jns
jae
adc
notb
mov
sub
xor
sub
mov
fistl
xor
mov
push
mov
int
ret
mov
movsbl
cmp
xchg
lock
cmpsl
mov
fldt
and
leave
out
cld
mov
mov
sbb
repnz
popa
cli
dec
pusha
ret
xchg
xchg
bound
sbb
in
cmp
dec
push
sbb
dec
jbe
out
rol
daa
cwtl
sub
in
test
cmp
repnz
add
xor
xor
hlt
loop
xchg
inc
push
int3
mov
arpl
int
stos
adc
lods
jmp
and
sti
push
mov
orb
xchg
push
mov
sub
std
adc
stos
mov
xchg
xorb
in
pop
fildl
es
pop
loop
movsl
in
hlt
xchg
into
dec
pop
pushf
mov
mov
pushf
dec
sbb
ret
mov
fnsave
fsubl
or
int3
popf
out
dec
in
loop
sub
push
test
adc
or
int
aas
out
or
mov
and
inc
loop
jl
daa
jmp
cmpb
lods
sub
pop
popa
in
push
arpl
mov
inc
fsubrl
scas
pop
mov
pushf
sbb
jmp
ss
aaa
ret
sbb
mov
sbb
mov
movsl
dec
add
dec
loope
cmp
fbstp
shrb
and
orb
sbb
das
mov
fwait
clc
pop
aam
je
icebp
lret
leave
adc
pop
std
add
aam
lcall
inc
cmpl
jae
fcompl
push
les
xchg
hlt
int3
inc
fiaddl
cmp
movsl
idiv
rol
add
ds
jmp
jl
and
dec
inc
out
insl
lods
ljmp
dec
mov
dec
jl
mov
ror
dec
sub
in
repnz
xchg
mov
mov
sbb
jne
and
ljmp
bound
std
cmp
adcb
sbb
push
sub
scas
loopne
data16
push
pop
push
add
add
dec
mov
push
push
push
pop
in
test
xlat
imul
lret
loop
jae
dec
dec
push
mov
xor
inc
arpl
pop
cmp
jae
mov
xchg
shr
pop
cmp
push
jmp
mov
divl
sbb
sti
jbe
pop
mov
xchg
jne
jl
movsl
movsb
call
mov
movsb
add
sbb
scas
mov
push
test
inc
fistps
mov
clc
dec
xor
popa
adc
scas
add
sub
xchg
sbb
les
inc
pop
pop
sub
daa
es
xor
lcall
sbb
call
dec
les
sub
fistpll
aas
stos
mov
or
addr16
push
mov
adc
or
shrb
sahf
cmpsl
pop
lcall
jne
je
test
gs
or
loop
out
lret
mov
les
xchg
mov
out
jbe
neg
pushf
xor
jge
add
in
xchg
dec
mov
cltd
negb
push
sar
nop
enter
clc
aam
mov
std
lret
xor
dec
mull
fimuls
stos
dec
ja
add
jge
or
repz
mov
lret
int3
jae
jecxz
push
lds
mov
movsl
inc
pusha
cs
xorb
and
dec
lahf
mov
jbe
ss
outsl
test
push
push
dec
mov
std
out
pop
repnz
out
push
lods
sti
xor
dec
push
pushf
and
enter
es
add
push
pop
mov
out
mov
arpl
xchg
jg
bound
dec
cmp
in
lods
or
cmp
rcrb
lcall
xchg
jbe
cmpb
or
jecxz
inc
mov
sbb
fidivs
cltd
add
aam
mov
test
sti
js
mov
xchg
lcall
pop
sub
cli
inc
cwtl
jle
jo
xchg
les
clc
adc
sbb
adc
outsb
mov
addb
es
jbe
push
in
sbb
jnp
mov
int
push
loopne
gs
aas
push
les
loope
sub
popa
rol
das
cmp
xchg
stos
push
mov
xchg
setno
out
pop
popa
lock
movsb
jge
loopne
add
add
xchg
js
mov
inc
iret
dec
stos
or
and
push
mov
clc
in
mov
jns
inc
insb
imul
pop
movsb
nop
mov
mov
inc
push
lods
insl
ret
sub
pop
cli
int3
lret
test
dec
insl
enter
aas
arpl
push
into
or
int
xor
adc
popa
test
and
jae
push
aas
mov
and
in
pop
xchg
mov
stos
movsl
dec
daa
rep
into
cmp
mov
in
cmp
jge
jecxz
daa
andb
rorb
sbb
pop
jbe
push
loope
xchg
lods
test
aaa
fs
mov
pop
cmpsb
ds
inc
or
es
js
pop
and
inc
xlat
lea
mov
jo
xorl
gs
scas
movsb
jne
in
insl
mov
sti
in
xor
int3
mov
fcmovne
and
cmc
loope
add
outsb
mov
loope
andps
cmc
push
ffreep
jnp
jmp
mov
or
and
inc
das
cmc
adc
out
das
xor
rolb
enter
cmpsl
scas
pop
fs
jmp
cmp
out
pop
mov
ljmp
repz
and
inc
shr
jbe,pn
iret
cmp
sub
mov
popa
loopne
pop
mov
lret
test
add
mov
mov
xchg
movl
lds
test
repnz
rorl
mov
in
in
inc
out
push
js
dec
insb
dec
hlt
or
ror
in
pop
pop
sbb
sbb
mov
jno
inc
lods
dec
aad
jmp
rcrb
pusha
repnz
call
ss
mov
pop
sar
mov
pop
icebp
xor
adc
push
add
xor
pop
dec
sbb
notb
pusha
jbe
adc
inc
mov
add
out
lods
gs
ja
cld
jnp
xor
add
mov
lds
xchg
mov
addl
sti
pop
push
incl
jo
mov
mov
dec
adc
xchg
cwtl
lock
shll
cld
pop
mov
fsubrl
sub
sub
push
mov
out
nop
leave
insb
idivb
jo
add
cltd
cs
jge
sti
aad
or
in
sub
mov
rcll
daa
cltd
rcll
sahf
jbe
jg
repz
negb
sbb
in
dec
pop
mov
rcll
fisubl
mov
push
jp
push
mov
das
jns
or
in
adc
scas
xchg
jge
push
arpl
cltd
mov
fwait
pop
call
shll
mov
and
mov
push
insb
lret
mov
clc
dec
mov
pop
imul
mov
iret
fdivr
pushf
push
into
jp
inc
mulb
push
mov
mov
jl
xor
mov
jmp
pop
inc
xchg
ds
sbb
das
mov
pop
ret
lock
mov
pop
dec
hlt
ds
xor
dec
inc
imul
dec
clc
mov
and
xor
mov
sub
or
mov
xor
push
dec
jge
inc
addr16
aad
pop
xor
in
add
movsl
add
mov
rcrb
push
ds
sub
xorb
and
dec
ja
js
pop
dec
fcompl
dec
xchg
inc
rorb
mov
das
testb
inc
sahf
xor
mov
test
mov
les
mov
inc
ds
imul
fdivl
fwait
sub
nop
jle
jne
cltd
sub
or
and
rcrl
dec
inc
sbb
dec
adcb
inc
lds
jecxz
popa
fbld
out
sub
dec
cli
roll
fisubrs
mov
mov
jnp
repnz
adc
shr
das
or
imul
xchg
rclb
xchg
stc
xchg
call
fbstp
sbb
adc
stos
sub
lea
mov
popa
xchg
jns
outsl
pop
lods
lods
sbb
fwait
shlb
jne
ds
xchg
xor
xchg
xchg
xor
push
jecxz
sbb
mov
shlb
repz
jbe
loop
gs
stos
or
enter
push
les
and
cmp
das
mov
xchg
stos
mov
inc
sbbl
inc
aam
pop
lods
jge
cs
rcl
jb
pop
lahf
fnstsw
cli
or
add
lcall
das
mov
aad
mov
addr16
ret
jnp
lods
add
mov
sub
jl
fstl
and
popa
ret
dec
push
push
push
popf
sbb
in
dec
movsb
xchg
pop
arpl
or
inc
pushf
gs
in
mov
inc
and
mov
outsl
xchg
sbb
iret
and
mov
pop
mov
sbb
adc
leave
cwtl
flds
and
xchg
cmp
repz
jmp
xor
les
and
pop
call
sub
ret
insl
dec
lahf
mov
shlb
int3
mov
testl
inc
mov
in
xlat
mov
psrlw
mov
adc
mov
xchg
mov
mov
xor
lods
out
cmp
stos
shll
jl
orl
movnti
adc
add
shll
pusha
push
aas
imul
loop
xchg
adc
mov
xlat
cmp
cli
xchg
in
mov
adc
xlat
scas
and
dec
push
mov
fwait
add
shlb
sqrtps
mov
fs
pop
sbb
outsb
dec
out
addl
adc
xchg
in
jp
lock
call
sti
loope
xorb
in
inc
cmp
mov
sar
ds
sub
mov
xchg
ret
int
outsb
push
or
lods
ss
jg
mov
lret
inc
insb
sbb
mov
cmp
ret
inc
sbb
mov
jmp
out
add
cmp
inc
int
push
and
imul
imul
inc
xchg
fidivs
xchg
shlb
jno
int3
jge
jb
sub
insl
pop
mov
mov
jae
jb
xor
push
mov
lock
xchg
aad
leave
fwait
hlt
mov
in
lods
xor
xchg
stos
in
and
mov
aas
jb
bound
int
out
mov
shll
inc
pop
jp
fdivs
pop
push
daa
xchg
push
inc
je
jo
inc
dec
sbb
xor
cmp
test
ss
mov
lcall
nop
sbb
mov
arpl
push
in
mov
movsb
pop
dec
rorb
cld
pop
or
cmp
arpl
shll
scas
jge
push
js
mov
scas
shr
clc
repz
sub
sbb
je,pn
inc
outsb
iret
ss
out
cmpsl
sub
push
inc
call
jns
leave
je
push
bound
sbb
pop
mov
mov
inc
rcrl
dec
sub
push
repnz
lock
int3
in
outsl
sub
je
in
push
jnp
scas
adcl
hlt
jae
sub
ds
in
outsl
sub
fistpl
insl
dec
aad
daa
pop
pop
iret
ja
push
adc
jle
xchg
cmp
add
arpl
or
dec
rcr
std
and
xorl
adc
mov
imulb
inc
cmp
mov
popa
ljmp
add
enter
or
pusha
jge
test
cmp
or
add
and
cli
inc
iret
andb
or
adc
in
cltd
inc
xor
hlt
int
sub
hlt
iret
insl
push
xchg
pop
adc
mov
lods
movsl
jmp
fs
mov
imul
push
mov
fdivl
mov
jmp
es
out
inc
push
popf
insb
sbb
sbb
sbb
ds
bound
stc
nop
xchg
push
adc
nop
push
repz
fxch
cmc
into
clc
mov
fistpl
mov
out
push
lcall
sti
xchg
jmp
sub
cmc
setne
mov
xor
push
cmp
aam
push
push
xchg
sub
mov
cli
fldt
dec
jp
xchg
xchg
xor
pop
mov
push
cmp
leave
ret
pop
sbb
enter
adc
loope,pn
fwait
xchg
cmpsb
sub
dec
sbb
jg
pop
or
data16
or
push
sub
push
fldenv
pop
xor
in
cmpb
test
sub
dec
and
adc
sbb
push
mov
or
cmp
sub
fidivl
fldln2
mov
pop
push
loopne
dec
imul
fsubl
mov
mov
sub
mov
dec
cmp
mov
mov
loope
push
and
mov
xchg
xchg
outsb
outsl
add
sarl
popf
or
push
xchg
push
sar
gs
mov
scas
jmp
sbb
bound
in
test
scas
test
or
fmuls
arpl
pushf
pop
movsb
aad
fisttpl
sub
aam
dec
jg
fmull
mov
jl
stc
xor
inc
cmpsb
scas
cmp
imul
and
adc
mov
fs
dec
testl
cmp
jbe
push
pop
cmp
scas
xor
pop
sbb
adc
sarl
xchg
pop
and
bound
mov
addr16
inc
aam
or
pop
fdivs
scas
mov
imulb
inc
jmp
pop
mov
pusha
mov
fidivl
jle
push
fs
rcrl
and
pop
jb
mov
pop
sbb
add
addr16
xchg
sahf
push
inc
movsb
push
in
push
push
xor
cmpsb
adc
mov
fmuls
and
mov
inc
test
add
mov
je
pop
mov
mov
std
inc
sbb
inc
in
call
pop
jge
out
add
jle
pop
xor
pushf
xchg
gs
ds
mov
sub
mov
sbbb
sbb
cmp
inc
fmuls
add
sti
out
lcall
es
pop
stc
roll
mov
jg
xchg
je
lahf
icebp
out
cmp
aaa
call
xchg
cs
sahf
mov
fists
test
sub
xchg
sbb
mov
les
sbb
clc
add
ret
adc
fsubrs
rolb
adc
xchg
jl
pop
xchg
bound
outsb
or
xchg
pushl
jns
test
xchg
mov
mov
xchg
or
btr
sahf
aaa
mov
insl
outsb
iret
jecxz
adcb
call
mov
add
loope
dec
or
adc
mov
std
into
pop
or
hlt
lods
mov
andl
test
xchg
mov
test
test
movsl
ret
xchg
sar
adc
fiadds
clc
test
hlt
out
or
xchg
push
subb
rep
aam
stos
pop
jno
mov
imull
pop
loope
and
leave
loopne
push
sub
sub
out
adc
jl
mov
push
lods
fwait
out
movsb
or
push
shr
or
lea
inc
mov
shll
jle
push
inc
jl
scas
test
into
movsl
push
and
mov
rcr
out
xchg
fs
cmpb
mov
ficoml
fnstcw
loop
and
or
sbb
xor
pop
dec
test
adc
mov
dec
lret
add
dec
subl
cmpsb
movsl
mov
loope
dec
xchg
int3
fstpt
or
lahf
cmp
repz
mov
jnp
and
aam
sahf
stos
shll
movsb
push
xchg
mov
mov
stc
pop
mov
pop
dec
in
mov
jge
pushf
loope
movsl
in
sub
sub
xor
add
fnsave
jge
incl
lods
push
xchg
mov
es
mov
fcomps
jp
push
jp
imul
and
movsb
test
shll
mov
out
or
lds
js
adc
jmp
mov
repnz
mov
cs
loope
imul
rclb
sub
mov
mov
shrl
add
js
mov
rcrl
jp
cltd
fld
push
pop
loop
nop
push
cmp
mov
xor
jg
xchg
dec
add
xchg
ret
enter
rolb
rcrb
pop
rcll
in
sub
fcompl
mov
jo
push
int
and
int3
xor
rcll
into
xor
ss
std
pop
mov
lea
mov
out
mov
stc
dec
mov
cld
outsb
mov
cmc
sbb
sub
stos
add
aad
dec
fidivrs
loopne
cld
mov
jae
pop
pop
jb
cmp
xor
jge
das
or
push
jno
pop
ja
push
push
adc
xor
test
pop
lret
outsb
push
nop
push
xlat
mov
mov
loope
jecxz
sti
lods
jg
test
lcall
js
cmp
and
loopne
pop
fwait
lock
ss
mov
test
test
fisubl
pop
rorb
cmp
push
in
push
xchg
mov
adc
mov
inc
rcl
ret
adc
mov
xchg
loop
sub
clc
popa
sar
xor
int3
call
lea
xor
fistl
pushf
in
fwait
outsl
ja
mov
dec
xchg
popf
subl
fwait
sub
add
xlat
std
pop
push
push
push
xchg
movb
xchg
cmp
pop
xchg
mov
lahf
out
and
pop
stc
test
push
and
cmp
mov
int3
mov
cltd
push
sub
push
xor
ret
inc
rorl
test
jb
sub
popf
jb
enter
cmc
mov
scas
dec
outsb
dec
push
inc
xor
sub
idiv
aas
stc
push
fwait
xor
mov
and
in
cld
xchg
outsb
push
mov
push
xchg
fwait
jbe
sbb
in
and
sbb
mov
sub
inc
jo
dec
mov
clc
mov
in
lahf
into
push
jmp
add
pop
mov
stc
push
jno
rorb
xchg
pop
andb
xchg
cwtl
out
bound
out
xchg
xchg
movsl
push
inc
call
lahf
out
pop
pop
pop
bound
mov
and
mov
xchg
rorb
imul
add
ds
fsubs
aas
or
es
out
mov
loopne
insb
sub
mov
cltd
mov
out
insb
mov
or
clc
pop
les
jb
jb
mov
or
and
sub
cmp
cmp
dec
xchg
mov
lret
cmp
in
push
adcb
out
enter
movl
aas
mov
out
pop
mov
dec
das
dec
ljmp
cmp
es
mov
or
data16
pop
or
mulb
push
ljmp
imul
std
aad
push
mov
into
cmp
aam
inc
add
movsl
xor
jne
cli
decb
lahf
push
cld
stos
sbb
leave
sub
mov
push
sbb
mov
push
pop
repz
sub
add
leave
iret
insb
jge
mov
pusha
js
aad
push
sti
shr
ret
adc
cmp
out
mov
xchg
sub
xor
mov
add
jp
stos
mov
loope
loop
adc
add
jno
loope
xchg
push
lcall
aaa
xlat
or
jno
or
lea
out
mov
shll
or
daa
testl
and
and
push
lods
insl
cmc
inc
cmpl
int3
je
fwait
lcall
pushf
loopne
jnp
jns
xor
xchg
sub
popa
out
test
mov
mov
mov
and
js
xchg
mov
sub
arpl
add
mov
xor
addr16
xchg
nop
in
cmp
insl
dec
push
and
and
push
arpl
sbb
cmp
or
fmull
cmp
ds
jbe
int3
pop
dec
fcmovbe
js
lahf
cmp
and
cmp
scas
jno
push
dec
std
loop
ret
and
popf
adc
xor
adc
clc
jo
cmp
into
push
fnstcw
sub
sub
nop
xchg
test
testb
faddl
lcall
and
add
xchg
jecxz
or
aam
dec
pop
adc
add
test
enter
xchg
stc
test
fimull
cltd
int
aad
test
xor
xchg
and
loope
cmp
jmp
cmc
out
inc
arpl
xchg
ljmp
jnp
insl
movb
sub
inc
xor
xchg
add
je
fwait
push
stos
pop
adc
fisubrs
lds
mov
dec
daa
outsb
rorb
sarl
out
sub
inc
and
dec
test
inc
adc
pop
std
jbe
xchg
pop
dec
addl
outsl
sub
push
shl
add
mov
mov
setne
arpl
test
xor
mov
imul
jno
ret
rclb
xor
mov
mov
xor
fidivl
sub
push
or
push
jle
push
push
pop
mov
lret
inc
lahf
push
pop
imul
mov
rcrb
xor
or
jg
ret
sti
inc
xchg
jno
or
idiv
dec
push
add
pop
daa
clc
sahf
cmpb
or
jmp
mov
std
popf
push
out
orb
in
enter
packsswb
jbe
add
cmp
jo
cwtl
stos
insb
daa
pop
insl
push
es
arpl
sub
sbb
mov
mov
xchg
adc
push
xchg
inc
xchg
push
xchg
popf
das
jno
push
mov
xor
inc
mov
cwtl
lfs
andl
pop
and
push
pop
push
jne
std
add
out
loope
or
and
sahf
push
pop
dec
stos
mov
lcall
leave
ljmp
jle
jae
inc
rolb
mov
sub
jl
jo
test
popa
pop
test
pop
sarb
fstpl
shrl
mov
jnp
jp
dec
in
out
xchg
adc
and
popa
nop
mov
jmp
inc
push
gs
icebp
fidivrs
lret
push
and
fstl
mov
test
pop
out
aam
mov
incl
push
and
pop
push
jno
and
mov
xchg
aam
leave
push
addb
dec
out
sub
and
mov
cmp
cmpsb
or
pop
xchg
dec
repz
push
cli
icebp
or
push
shrl
sbb
subb
jnp
mov
and
jg
push
mov
fimull
mov
and
lcall
sub
adc
sbb
cmpsb
jns
mov
mov
hlt
push
test
or
insl
daa
loopne
rcl
cmp
hlt
out
fstps
popa
and
push
cwtl
aas
inc
adc
out
sub
out
lods
mov
push
cmp
pop
pop
mov
mov
add
fstl
mov
mov
adc
fdivrl
sarl
pop
sbb
pop
pop
xchg
loop
out
xchg
test
inc
and
gs
xlat
ja
out
call
jbe
mov
push
xlat
out
stc
xchg
xor
pop
out
push
mov
fists
les
mov
mov
xor
fnstenv
sbbl
es
cs
pop
xor
int3
adcl
cmp
push
jns
out
xchg
lock
sub
cmpsl
xor
or
clc
jns
lcall
popf
and
pop
fidivrs
in
fdivrs
cmpsb
dec
adc
push
in
sub
pop
filds
sub
roll
jbe
adc
in
int
hlt
push
mov
subl
inc
xchg
xchg
mov
push
jl
cmp
sahf
pusha
mov
lcall
in
and
dec
adc
mov
jg
mov
xchg
and
jecxz
dec
mov
pop
outsb
mov
fwait
nop
out
sub
xor
dec
sbb
rcrl
or
fnsave
sub
jo
lea
jns
jo
clc
clc
cmc
push
out
imul
pop
xor
int
adc
movups
jp
sbb
js
add
mov
jecxz
and
jns
mov
push
mov
cmp
movsl
sbb
sbb
lret
mov
cmp
lods
aas
insb
fcoms
push
jp
test
notl
jns
outsb
adc
arpl
enter
or
cmp
sbb
sarb
ljmp
into
lret
test
popf
push
xor
test
lods
push
addr16
pusha
jge
into
add
shll
jmp
mov
call
rcl
mov
fs
insl
mov
mov
cmp
call
or
test
cmpsl
and
cmp
icebp
rorl
shll
dec
loop
lods
lods
shrl
insl
pop
in
ja
jne
inc
adc
jae
and
sub
int3
in
in
in
xor
cmp
lock
mov
in
lret
hlt
jns
fs
stos
in
cli
mov
and
movsl
inc
push
jecxz
cmp
insb
in
mov
or
push
pop
ljmp
repnz
popa
xchg
jb
inc
adc
fdivl
stos
and
aam
cltd
push
xlat
pop
loop
je
dec
rorb
xchg
int3
out
add
or
xlat
and
test
adc
fdivr
cmp
icebp
nop
mov
lods
gs
pop
xor
mov
jmp
sti
cmpsl
xchg
popf
sub
cld
inc
pop
push
inc
stc
movsl
mov
push
xchg
popa
cmc
shll
nop
inc
xor
sbb
jecxz
and
hlt
jmp
jmp
repnz
xor
mov
jecxz
call
inc
jno,pn
mov
sarb
fcmovne
xor
mov
and
jge
push
cmp
mov
int
xchg
sub
rorl
lahf
jo
inc
inc
sbb
xor
mov
mov
cld
clc
pushf
xlat
out
jno
into
pusha
aam
iret
fwait
rcl
clc
jg
inc
outsl
das
or
pushf
clc
rclb
or
std
dec
sub
cwtl
adc
pop
pop
push
stos
leave
ja
imull
test
dec
jp
cmp
cs
mov
es
les
and
mov
cmp
hlt
add
cmp
fldenv
jnp
cld
aaa
or
xchg
sbb
mov
mov
adc
add
add
mov
shlb
add
push
sub
adc
xor
outsb
and
mov
loop
aaa
out
test
test
or
sub
dec
negl
dec
mov
add
adc
aam
push
mov
pop
mov
inc
mov
mov
add
jp
ficoms
or
add
subb
mov
shl
rolb
data16
out
test
push
iret
sbb
out
data16
fidivs
pop
movsl
movsl
xchg
xor
aam
cmp
pop
gs
dec
jmp
enter
pop
push
loopne
scas
pusha
adc
xchg
mov
out
lds
shll
mov
add
jl
sub
sub
test
sahf
adc
or
mov
pushf
das
adc
lea
movsl
data16
push
out
sbb
and
xchg
js
scas
push
cld
popf
mov
mov
mov
jmp
bswap
nop
in
or
mov
sub
int
fbstp
test
mov
fwait
dec
xor
movsl
daa
les
inc
loop
ljmp
add
call
int3
insl
iret
cmp
mov
pop
in
lods
or
hlt
xor
push
fs
dec
insl
xchg
pop
add
and
mov
test
fwait
xor
mov
data16
pop
jb
push
in
cs
arpl
fs
add
mov
mov
sub
stos
cmc
push
push
sbb
ljmp
adc
mov
gs
jg
push
push
adc
pop
pop
inc
fs
outsb
cs
sub
add
cmpsl
sbb
sti
adc
movsb
cmp
das
jl
in
cwtl
sub
aaa
and
ljmp
ret
popa
adc
popf
mov
shrl
pop
in
push
cmpsb
cld
pop
push
lock
jns
iret
fldcw
sub
mov
cmp
arpl
cwtl
pop
sub
adc
mov
call
xchg
cld
daa
sub
jl
or
dec
test
xorb
cmc
cld
pop
roll
jg
dec
jl
out
scas
sahf
cmp
out
dec
add
cmp
mov
enter
rorb
ljmp
or
jnp
test
sub
sbb
mov
jne
jle
mov
cmpsl
loope
icebp
add
das
push
shl
xor
std
lret
pushf
and
data16
movsl
jnp
lret
lods
subb
inc
sbb
mov
inc
pop
or
inc
lahf
out
mov
push
or
dec
pop
push
aas
mov
push
cld
push
dec
and
cs
mov
pop
mov
in
add
add
std
movsb
es
push
xchg
or
aaa
adc
fildl
pop
mov
inc
or
inc
mov
push
dec
arpl
mov
pop
stos
jle
add
dec
mov
in
xor
out
test
and
sbb
divb
aaa
mov
outsl
mov
test
sbb
andl
inc
dec
rcll
mov
adc
mov
push
fimull
sarl
adc
mov
inc
movsb
mov
fs
loopne
adcb
push
test
push
test
adc
inc
mov
mov
data16
inc
jae
sbb
jno
mov
ds
test
and
stos
xor
mov
add
scas
sti
filds
rorb
fmul
adc
in
pusha
cwtl
out
push
pushf
cli
xor
mov
jp
loopne
call
outsl
and
testb
jb
xor
ds
jmp
test
addr16
mov
xchg
aad
xor
push
adc
sub
ret
adc
scas
jo
push
repz
xchg
test
xor
xor
xor
insl
pushf
sahf
xchg
test
shr
cli
daa
bound
mov
xor
jne
lods
mov
jae
xchg
fsubl
jne
xor
dec
jbe
dec
xchg
fidivrl
out
lds
rolb
inc
clc
sbb
movnti
test
aad
testl
pop
xchg
inc
sub
or
out
test
push
loop
loopne
repz
scas
push
pop
test
pop
and
mov
mov
xor
in
in
shll
popf
push
xchg
sub
scas
fs
sbb
mov
push
mov
mov
lret
sti
adc
dec
mov
jg
js
xchg
dec
sbb
lds
jne
xor
iret
aam
sbb
movsb
push
dec
pop
stc
jo
mov
sub
sbb
movsl
sub
popa
inc
jb
add
mov
xor
shrd
aad
scas
mov
cmpsb
cmc
enter
or
fs
add
xor
fisubrs
mov
dec
jae
push
es
sbb
push
loope
add
adc
push
jecxz
ficompl
cli
mov
add
adc
fdivl
jb
mov
pop
mov
std
dec
jne
cmp
aaa
jmp
inc
mov
and
dec
mov
loope
inc
cmpsl
jo
insl
mov
int
xlat
std
pop
xor
jne
test
aas
int
mov
mov
bound
jne
int3
rclb
xor
outsl
bound
xchg
dec
mov
sub
fstpl
dec
cmp
repnz
cltd
lret
fcmovnb
fstpt
mov
rep
jne
mov
add
lret
ds
mov
pop
cmp
enter
call
cmc
xor
bound
iret
cltd
out
push
sub
js
lock
loope
fstpt
sbb
arpl
pop
push
xchg
push
int3
xchg
inc
mov
sub
jne
mov
dec
push
lock
call
push
fcomp
sbb
in
mov
in
xchg
push
adc
in
lods
sub
pop
movsl
mov
scas
daa
xor
mov
sub
push
loop
outsb
xlat
out
ret
icebp
out
pushf
fcoml
movsb
jns
mov
mov
inc
les
sbb
in
mov
bound
xchg
and
pusha
adc
dec
mov
lds
outsb
jno
jnp
add
mov
mov
outsb
pop
xchg
inc
add
sbbl
sbb
and
cmp
pop
pop
mov
adc
pushf
test
adc
shll
dec
hlt
es
addr16
jl
dec
mov
scas
xchg
xchg
dec
out
gs
shll
mov
arpl
test
in
adc
movsb
gs
aaa
scas
mov
repz
insb
icebp
mov
je
dec
mov
cmc
mov
push
add
or
stos
es
pusha
cmpb
das
mov
sbb
push
or
or
inc
andb
xchg
pop
popf
popf
movsl
and
xor
lods
ljmp
xor
xchg
pusha
sub
dec
push
lds
or
pop
inc
shr
subb
imul
repnz
adc
mov
dec
adc
loopne
xor
jle
sarb
sub
aas
les
rcll
movsb
roll
sub
movsb
jbe
adc
cmp
push
stc
sbbl
enter
inc
dec
aaa
mov
xor
dec
sbb
xchg
xchg
stos
fsubrs
fisubs
or
inc
stc
or
call
leave
lret
add
lea
cmp
pop
sub
or
inc
push
add
xor
adc
idiv
cld
cmp
cli
cmp
rcl
ret
sbb
mov
stos
jns
adc
push
mov
xchg
fcomi
pop
pop
and
ret
cli
imul
pop
inc
xor
xor
lods
sbb
mov
mov
pop
mov
mov
sti
bound
sahf
xchg
call
outsl
test
jb
dec
mov
xchg
push
sbbl
and
int3
stos
mov
pop
outsl
insl
mov
add
jbe
daa
rcrl
jmp
cmp
imul
pop
jbe
in
add
push
in
sbb
push
addr16
sbb
insb
loop
idiv
inc
out
mov
xchg
rcl
cld
lods
push
in
mov
aaa
inc
int
out
mov
or
subl
in
in
mov
sbb
leave
inc
xchg
jg
cmp
lea
lret
js
cmpb
adc
leave
or
ffreep
aad
in
lds
xor
xor
cs
lcall
push
mov
mov
mov
push
test
add
je
mov
shlb
cmp
fnstsw
sub
loopne
dec
mov
and
and
mov
push
mov
pusha
and
or
lcall
mov
mov
cmpsl
push
jmp
cs
sub
sub
enter
and
lea
mov
popa
jbe
cmpl
mov
stos
outsb
movsb
data16
xor
ja
out
hlt
js
mov
rol
fwait
xchg
daa
in
adc
or
fimull
or
test
out
sbbb
push
xchg
adc
mov
xchg
std
sub
xchg
push
and
and
inc
nop
fildll
leave
mov
gs
cmp
xchg
mov
cmp
inc
jnp
mov
mov
xor
outsl
scas
push
inc
jnp
dec
or
lcall
mov
fildl
jb
ss
scas
xchg
lods
inc
lds
sbb
and
push
jns
in
or
test
jne
in
popa
push
ret
inc
jo
rcll
jecxz
or
adcl
jp
inc
nop
fnclex
cmp
jle
xchg
ljmp
cmp
sbb
and
out
xor
daa
sbb
cmpb
sub
jae
mov
scas
jo
add
xchg
mov
cmpsb
imull
adc
inc
mov
bound
mov
insl
rcrl
adc
pop
jbe
and
or
cmp
dec
inc
cmp
js
inc
mov
add
out
scas
push
sahf
insb
popf
imul
faddl
push
xlat
jle
xchg
sarb
or
jae
xchg
js
subb
fistl
adc
es
push
out
cltd
fadd
jmp
cmp
adc
les
pusha
mov
int
loope
mov
jmp
mov
stos
dec
push
xor
add
out
popf
sarl
jb
push
sbb
pop
jae
inc
stos
inc
sahf
subb
pop
mov
shrb
add
cmc
xor
pop
xlat
pop
push
jecxz
add
push
pop
mov
xor
pop
adc
sbb
scas
ficomps
adcl
mov
imul
aas
jae
push
icebp
xchg
pusha
enter
push
adc
mov
mov
mov
or
scas
in
cmp
mov
add
jns
fistps
cmp
mov
jns
fldpi
sbb
sub
popf
push
lcall
or
rol
push
loop
lds
imul
fwait
stos
clc
mov
mov
ljmp
fmull
jmp
and
fwait
add
push
sub
and
mov
jb
xchg
jle
jmp
jno
dec
in
mov
push
jae
gs
adc
add
jg
stc
mov
cltd
lret
adc
inc
or
xor
js
adc
pusha
mov
lret
stc
sbb
and
addr16
mov
and
stc
cmp
xchg
test
jnp
loope
cld
data16
dec
cs
add
mov
mov
es
inc
sbb
int
clc
jne
add
cmp
cmp
xor
popa
mov
mov
dec
pop
fdivrs
popf
adc
mov
cmp
jge
pusha
cmp
test
push
inc
mov
lds
scas
das
arpl
outsl
cmp
roll
vmread
mov
popa
int
push
cmp
cmp
bound
inc
test
xor
mov
lret
loopne
insl
push
and
push
adc
dec
jne
adc
cmp
pop
mov
ret
mov
xor
inc
adc
in
imul
jae
ss
insl
daa
fistpll
ret
inc
insl
subb
dec
lods
and
adc
fisubrl
lock
movsl
mov
cmp
sub
cmp
xchg
cli
inc
push
push
test
xlat
jecxz
mov
xchg
lea
pusha
ja
jnp
inc
or
int
fs
mov
or
rolb
cmp
pop
fs
in
cmp
aas
bound
ljmp
leave
fs
xchg
sub
pop
loope
dec
sarl
data16
std
push
out
movsb
sbb
icebp
testb
jae
jb
in
mov
movsb
insl
and
addr16
enter
xor
sub
test
cmp
icebp
lods
rcr
push
mov
pop
mov
sub
dec
and
popf
aad
dec
push
out
sub
add
test
lods
pop
scas
or
mov
subl
push
adc
lret
ss
lea
xor
sub
ret
push
pop
and
mov
icebp
mov
cmc
lret
xchg
jno
or
sub
out
repz
mov
jmp
outsl
gs
add
outsb
mov
mov
mov
or
or
pop
pmaxub
std
jo
jae
clc
pop
pop
xlat
fsubl
inc
popf
sbb
mov
and
mov
insb
lcall
mov
fcomip
and
rolb
scas
inc
aad
sti
jb
cmp
sub
scas
xor
mov
fdivr
or
jle
incl
cmp
jae
xlat
sub
xor
xchg
jmp
imul
add
jl
add
fadds
ds
add
dec
stos
dec
faddl
ret
or
cwtl
lret
sub
mov
insb
clc
roll
xor
mov
sub
xor
add
pop
roll
ljmp
lock
mov
repz
int
pop
imul
xchg
and
outsl
in
mov
inc
add
insb
es
arpl
add
fidivs
dec
out
jns
mov
aaa
jo
cmpl
sub
mov
sbb
dec
pushf
test
bound
fistpll
adc
mov
mov
loop
iret
xlat
push
xor
xor
sub
mov
xor
adc
or
push
push
in
pop
pop
pusha
jl
add
mov
stos
and
ljmp
mov
orb
int3
or
jno
cmc
fcompl
dec
addl
cmp
jo
sbb
adc
inc
insl
mov
frstor
xchg
call
lret
arpl
dec
inc
repnz
je
arpl
dec
pop
pop
addr16
or
aad
mov
rclb
adc
inc
loopne
loope
mov
fbld
loop
out
push
sti
repz
call
gs
into
mov
sbb
mov
mov
lret
jne
cmp
push
notl
into
sbb
testl
shlb
lea
fadds
test
js
pop
jg
clc
fsubl
mov
mov
sarl
aad
jecxz
fisubs
push
lods
pop
jl
and
adc
pop
xor
jmp
mov
mov
mov
sbb
xchg
mov
mov
pop
mov
inc
pop
sbb
bound
lcall
push
inc
je
xor
das
sbb
cmp
jnp
jg
and
sub
dec
jo
ret
xor
cmp
mov
cmp
push
lock
clc
call
fmuls
add
sub
dec
cmc
sti
stos
add
rcl
cli
and
lods
dec
inc
and
mov
in
mov
cmpsb
cli
xchg
jnp
jo
jno
mov
cmp
fists
add
cmp
rclb
cli
fstps
mov
out
cmovns
aas
push
cmp
pop
jmp
sbb
andl
or
addl
cmp
imul
or
sbb
aaa
push
adc
scas
xor
stc
shlb
xchg
or
lods
inc
leave
insb
into
xor
popa
mov
fnsave
daa
mov
xchg
xchg
loopne
enter
or
xor
add
pushf
pop
adc
adc
and
int3
xchg
mov
xor
dec
push
or
outsb
mov
imul
jb
add
mov
push
adc
mov
xchg
xor
shrb
imul
jno
in
fwait
int
in
les
iret
dec
mov
lea
add
pushf
fiadds
sub
dec
in
iret
aam
cmp
cmp
inc
loop
add
mov
cld
lods
push
lods
in
subl
out
xor
mov
loop
cmc
stc
ret
or
pop
mov
add
nop
xlat
cmp
fisttpll
les
jg
sub
jle
adc
idiv
addl
orb
mov
fnstcw
jae
xor
scas
orl
imul
mov
mov
hlt
mov
push
jbe
xor
cwtl
popf
cmp
imul
inc
test
das
aad
mov
gs
out
cmp
and
jmp
test
pusha
shlb
test
sbb
adc
mov
cltd
pop
or
fistps
jge
pusha
pushf
jge
sbb
adc
test
or
call
add
cltd
mov
negl
pop
es
and
cmc
rorb
or
call
xlat
call
in
inc
sub
ss
insb
jg
outsl
mov
pushf
pop
pop
mov
inc
jmp
sbb
imull
js
int3
dec
and
mov
outsb
push
add
mov
cli
int
xchg
mov
in
outsb
push
dec
mov
repnz
and
or
into
mov
out
stos
sub
fists
jbe
and
or
pushl
outsb
jmp
outsb
addl
sub
mov
enter
jbe
mov
cmp
leave
sbb
dec
clc
aad
and
and
pop
int
jl
insb
and
lret
xchg
push
adc
icebp
ja
push
xchg
lahf
jb
mov
or
aas
pop
adc
rol
inc
cmp
xchg
or
sub
loop
inc
shlb
pushf
mov
jge
jno
aaa
ja
sbb
mov
adc
test
aaa
jns
jae
bound
fmull
out
mov
leave
fcmovne
cmp
mov
pop
les
and
push
mov
push
dec
pop
mov
or
cwtl
repz
lret
testl
xchg
cwtl
aad
xor
mov
jo
lahf
dec
cmovb
mov
fcompl
popa
sbb
sbb
cld
adc
cmp
sbb
pop
test
aas
mov
jmp
jmp
incb
mov
pop
rorl
xor
cmc
adc
xor
daa
mov
push
hlt
and
add
add
test
stos
pop
cs
sbb
sahf
rcrl
loopne
push
out
sar
lods
rcr
or
jo
xor
jo
or
inc
mov
cmp
lret
in
pop
popf
hlt
aam
push
sti
add
or
mov
iret
jg
xor
add
sbb
mul
nop
pop
push
sbbb
xchg
jo
lahf
loop
je
xchg
popl
dec
xchg
cmpsb
adc
add
ficompl
lods
mov
jp
jle
sbb
mov
xor
push
xchg
pop
ret
mov
fidivl
popa
mov
addr16
dec
sbb
mov
jp
or
jnp
sti
jmp
xchg
xor
xchg
lods
hlt
pop
mov
cmp
adc
sahf
pop
das
ret
adc
icebp
out
fs
pop
cmpsl
xchg
sub
mov
or
mov
iret
test
in
adc
mov
jecxz
icebp
jbe
fcomps
and
out
jae
mov
mov
xchg
jp
stos
test
jo
push
jae
mov
xor
jg
jmp
loopne
ja
call
xchg
sbb
sub
xor
imul
jo
jle
sub
sbb
das
mov
pop
test
jne
add
jp
lods
push
notb
rorb
and
aas
sbb
mov
xchg
cltd
pop
xchg
test
push
loope
xchg
push
adc
inc
int
js
repnz
pop
cmpsb
jno
dec
ja
push
ja
fs
mov
cmp
movb
or
push
and
imul
jns
int3
and
or
cmp
sarl
sti
xchg
dec
insb
mov
dec
lock
rolb
into
push
aad
mov
movsl
push
popf
or
pop
aam
sbb
mov
inc
mov
add
paddb
jge
cmpsl
outsl
bound
inc
push
leave
mov
enter
sbb
stc
cmp
push
aas
and
cmpsl
push
int
stc
pusha
dec
sarb
insl
add
sbb
sbbl
lods
push
cmc
fistl
xchg
sahf
data16
inc
dec
subb
cwtl
and
inc
xor
cwtl
jg
jmp
mov
test
loope
xchg
bound
or
sahf
cs
mov
mov
fnclex
dec
movsb
and
loopne
int3
in
mov
inc
jle
nop
dec
pop
sub
je
ret
or
push
xor
cmpsb
dec
inc
test
imul
es
outsb
es
arpl
mov
mov
push
movsb
loope
int3
push
or
push
jl
out
test
xchg
fcmovnbe
jnp
cmc
sbb
ret
js
in
leave
mov
les
push
xchg
or
xor
jne
mov
nop
cmc
adc
xorl
testb
jecxz
flds
lods
dec
and
inc
push
shl
ret
outsb
and
inc
cmp
adc
jae
inc
adc
xor
lods
fldenv
mov
ret
aam
cmp
cmc
mov
mov
xchg
xchg
je
inc
and
stos
inc
inc
les
filds
aaa
mov
les
mov
into
out
pop
dec
sub
xlat
bound
ds
mov
daa
popf
in
hlt
shlb
rcr
push
push
adc
ret
xchg
cmc
xchg
shr
int
xchg
and
sub
and
adc
mov
aam
sarl
scas
mov
movsl
neg
xchg
pop
sub
inc
in
dec
pusha
xor
scas
in
jg
test
std
cltd
cmp
ss
sar
ljmp
loopne
sub
add
and
add
incb
mov
clc
fcoml
add
add
fucom
cmp
and
data16
mov
xchg
insl
add
jne
jecxz
std
xchg
sbb
test
sub
mov
xor
addr16
cmp
sub
lret
ds
mov
push
pop
pop
mov
mov
int
ret
pop
sub
push
ja
hlt
stc
fwait
ds
loope
call
cli
jmp
push
pop
insb
and
in
add
stos
pop
sub
jbe
or
sbb
ret
adc
mov
lods
cmp
std
mov
mov
xchg
push
in
or
lret
in
imul
sub
jp
popf
mov
pop
outsl
jg
inc
adc
dec
jae
pop
push
inc
inc
bndstx
fisubrs
lret
xor
test
inc
cmp
cmp
and
je
imul
in
pop
inc
push
mov
cmp
idivb
das
pop
shr
into
pop
and
ret
lret
mov
jb
in
inc
jle
fdivr
into
dec
or
mov
mov
out
pop
inc
and
add
orl
lds
in
std
adc
pop
add
js
leave
ljmp
pop
loope
push
jecxz
or
mov
ret
fld
enter
fldenv
pop
js
jecxz
jbe
lahf
jmp
aad
sar
push
int
notl
mov
pusha
imul
xchg
sub
add
sbb
and
ret
adc
push
sub
jmp
jmp
cmp
mov
nop
dec
or
ficoml
sub
leave
cmp
int
mov
sti
mov
jg
lcall
and
sahf
enter
in
aad
xchg
mov
xor
jl
mov
push
hlt
hlt
add
mov
rcl
inc
outsb
insl
dec
or
fisttps
aaa
aaa
stos
push
push
sti
mov
push
inc
shl
inc
adc
push
sti
in
insb
or
clc
sbb
jnp
mov
ja
mov
or
cmp
cmpsl
sub
jne
pop
or
shlb
push
les
mulw
sbb
mov
cmp
fildll
inc
cltd
mov
dec
lret
or
lods
mov
and
or
and
lret
lcall
fidivrl
lea
inc
test
mov
lahf
jo
fadds
sbb
sbb
rorb
pop
xor
in
xchg
ret
sub
inc
jnp
adc
mov
cmp
mov
lea
lock
jnp
das
das
xor
pop
sti
pusha
imul
stos
cmp
sbb
mov
outsl
sbb
pop
push
mov
xor
or
mov
or
ret
dec
insl
out
leave
mov
mov
mov
call
out
inc
addb
lods
addl
or
push
and
lret
mov
cmpb
cs
mov
call
test
mov
xchg
mov
pop
jnp
cmp
mov
xchg
jne
cmp
cmpsl
inc
or
rcll
mov
test
test
inc
push
js
lcall
and
pop
insl
sub
xor
add
xchg
shll
xor
outsb
repz
lcall
inc
sbb
xor
mov
cmpsl
push
inc
jp
mov
js
xchg
icebp
mov
cmp
stos
rcrl
cmp
out
lods
jnp
sbb
and
xchg
mov
push
outsb
xor
fs
mov
subl
cmpsl
enter
cmp
insb
cmp
gs
js
add
or
cmp
xor
xor
adc
and
pcmpeqw
aam
xchg
xchg
pop
fdiv
and
inc
xchg
sbb
rol
mov
and
mov
xor
aas
inc
cmpsb
jl
addr16
xor
lods
inc
movsl
dec
out
stc
or
data16
repnz
cmp
nop
inc
mov
mov
out
push
dec
lret
inc
mov
call
lcall
jg
test
sbb
jnp
mov
andb
and
test
incb
or
xchg
fwait
shrb
mov
lret
ret
sbb
inc
popa
or
mov
inc
jns
mov
sbb
add
xchg
mov
aas
and
or
mov
negl
mov
lods
mov
cwtl
test
adc
icebp
and
mov
mov
clc
and
sbb
jbe
testb
mov
movsl
jb
pop
insb
cmp
mov
cltd
and
out
mov
dec
add
mov
clc
xchg
lret
sbb
push
popf
ljmp
lret
xor
cmc
cmp
das
mov
and
out
inc
dec
push
pop
clc
jo
out
jge
dec
mov
rorb
xor
push
pop
loopne
mov
mov
mov
mov
stc
push
push
hlt
or
jl
inc
dec
ja
into
and
dec
fdivrl
xchg
out
outsb
les
sbb
cwtl
xchg
lcall
and
leave
lods
sub
or
cwtl
and
in
dec
sarl
stc
push
js
cmp
push
mov
test
dec
sub
add
ja
push
mov
lcall
fst
cmp
dec
sbb
cmp
push
fs
movsl
mov
mov
mov
jbe
and
aad
xchg
adc
movsl
stos
rolb
sub
sub
pop
mov
rorb
fistps
faddl
cltd
aam
arpl
in
fnstenv
adc
enter
xchg
loop
cmpb
loop
in
inc
nop
add
cmp
ds
fwait
enter
test
jmp
mov
stos
push
inc
scas
fdivrs
jns
or
mov
rcrl
xchg
jecxz
ret
push
and
out
popf
mov
mov
or
pusha
insl
dec
loop
out
in
pop
leave
scas
sbb
int
or
imul
add
jae
sub
mov
imul
sub
mov
jb
mov
insb
sahf
jo
lahf
incl
aad
adc
or
xchg
jae
sub
sbb
jae
insl
sub
push
sbb
xchg
outsb
jmp
cmp
sub
scas
jecxz
push
rclb
xchg
fstpl
jnp
jg
idiv
xchg
call
inc
adc
dec
cmp
jmp
and
aaa
xlat
adc
in
rol
jge
cmp
cwtl
inc
cmp
dec
andnps
jae
outsl
and
sahf
enter
jp
push
cltd
cmp
dec
mov
dec
xor
push
inc
xchg
mov
hlt
mov
sahf
pop
and
or
in
cmp
sbb
cmpsl
shl
or
sbb
rcl
push
es
not
cmp
outsb
mov
stos
mov
insl
loopne
xchg
mov
sub
addr16
test
ret
or
je
add
ret
push
lds
adc
in
repnz
into
rcll
mov
aaa
pop
cld
xchg
scas
mov
xor
subl
into
mov
pop
int
mov
ds
dec
lock
inc
push
dec
inc
daa
ljmp
push
arpl
jge
dec
mov
scas
stos
pop
int
dec
sub
or
or
cmp
xor
movsb
or
xchg
mov
stos
fisttpl
mov
sbb
push
aad
sub
sub
mov
in
movsl
in
sahf
jo
loope
scas
movsl
nop
mov
arpl
jnp
mov
pop
shrb
inc
lock
mov
cmpsl
xchg
pop
out
sarb
gs
ficoml
sub
mov
out
and
and
xchg
movsb
xchg
insl
outsb
xlat
lods
fwait
jge
mov
fstpl
imul
scas
fstl
sbb
jle
sub
popf
testb
add
xchg
push
pop
insb
dec
pushf
imul
popa
movsl
addb
cs
push
mov
loopne
jmp
adc
cmp
xor
cmp
std
sub
std
cmpsb
test
movsb
data16
pop
xchg
mov
or
sbb
sti
add
pop
xchg
mov
jmp
fiaddl
cmp
jmp
pop
pop
imul
inc
or
mov
xor
lods
ja
pop
pop
push
adc
iret
fsts
outsl
nop
push
sub
sar
pop
jne
test
mov
clc
pop
adc
lahf
xchg
lret
stc
mov
or
fcmovnbe
lret
mov
rcll
lods
mov
jecxz
call
cmp
jl
xor
shl
fimuls
add
xchg
and
sti
mov
or
xlat
push
push
out
mov
cmp
int3
enter
push
mov
mov
and
sub
pop
loop
loopne
mov
mov
pop
xor
push
scas
push
cwtl
push
and
jp
rclb
and
pop
cmp
idivl
movsb
out
iret
or
mov
push
test
adc
mov
mov
aaa
fnsave
mov
sbb
inc
into
lcall
and
sub
cmpsl
xchg
push
ds
xor
xchg
ret
repz
and
addl
push
lret
fildl
mov
lock
and
add
adcb
outsl
out
and
mov
imul
xor
cmpsl
add
popf
inc
imul
lret
loop
dec
mov
mov
cmp
jo
jl
test
mov
imul
and
push
nop
mov
faddl
ret
mov
repnz
lahf
cmp
orl
adc
inc
sub
into
xchg
repz
push
cmp
rcr
sbb
inc
int3
adc
jge
hlt
mov
adc
lock
frstor
es
or
mov
loopne
icebp
mov
scas
jbe
insl
daa
leave
push
les
pop
add
pop
lret
and
pop
repz
jmp
xor
pop
xchg
lods
mov
push
icebp
push
lock
test
negl
test
stc
dec
in
lds
cmp
adc
ja
and
sti
pop
dec
inc
fbstp
mov
or
sbb
rcll
and
les
mov
dec
ss
mov
push
xchg
dec
mov
pop
ds
push
fwait
mov
dec
popf
inc
mov
fidivrl
inc
movsl
inc
xor
cmp
inc
jmp
cmp
pop
mov
stc
cmp
add
repnz
sub
rorl
pop
push
imul
imulb
mov
inc
loop
cmpsb
xor
sbb
push
mov
jbe
fcomi
pushf
adc
adc
cwtl
inc
inc
pop
cmpb
cmpsb
and
or
inc
cld
test
in
ret
loop
ret
sbb
sbb
push
out
hlt
mov
andl
pop
mov
xor
test
push
jp
cmc
push
sbb
gs
or
mov
loopne
call
mov
daa
cmp
insl
insb
and
mov
lahf
sti
add
out
jge
loope
out
enter
mov
out
xor
add
jbe
sub
mov
scas
cmp
les
dec
stos
in
sti
xchg
pause
and
movsb
cmpsb
xor
xlat
fcom
cmp
cmpsb
lods
sub
jae
outsl
pop
cmp
mov
imull
xchg
aas
fdivrs
jns
fildll
scas
imul
mov
xchg
or
js
repnz
cmpsb
ljmp
je
cmp
cmp
add
sub
xor
imul
and
decb
sbb
dec
iret
jbe
into
cmc
mov
push
mov
mov
int3
push
lret
sub
mov
sarb
mov
aaa
outsl
fsubrp
cld
push
enter
cwtl
sti
jmp
push
aas
jns
xor
aas
data16
jo
mov
jp
mov
lcall
lret
repz
rolb
mov
sti
es
int3
xchg
and
and
rorl
mov
je
shl
push
fwait
clc
push
iret
js
ror
jb
adcl
inc
pop
sbb
mov
clc
in
inc
xchg
add
and
or
test
rcrb
pushf
hlt
ret
xor
clc
mov
cld
adc
jae
xor
xor
add
pop
out
and
fdivs
cmpb
les
add
cmp
in
and
pusha
sarl
xor
stos
jmp
mov
sbb
faddp
sahf
dec
insl
adc
jbe
out
xchg
push
cmp
mov
mov
cmpb
clc
jl
imul
fucomip
ret
jno
adc
inc
lcall
frstor
mov
imul
out
ss
mov
jns
sbb
ret
sub
push
int3
cli
add
clc
mov
sar
add
xchg
dec
aad
dec
push
push
fcmovne
jp
sbb
lods
in
ss
nop
adcb
cld
sbb
ret
sarb
in
xor
sbb
push
cwtl
aam
mov
popf
js
add
push
out
jmp
xor
dec
insl
add
inc
daa
fidivl
and
es
stos
mov
mov
divb
xor
pop
ss
inc
push
sbbl
fstl
icebp
mov
push
arpl
push
cmpsb
push
mov
das
sahf
pop
das
jp
add
repz
push
aam
adc
pusha
test
pop
and
sub
and
cli
jae
mov
sbb
pop
lahf
push
aas
cmpsb
aam
inc
add
push
add
mov
loope
daa
dec
xor
into
nop
popf
jno
pop
mov
ds
or
imul
hlt
mov
inc
loope
cmpsl
ds
lret
int
jo
mov
mov
mov
mov
fwait
loope
jnp
xor
mov
imul
push
sub
mov
jne
add
push
in
dec
xchg
sbb
test
sbbb
mov
fadd
xor
lret
xor
xchg
icebp
popf
lods
pop
mov
popf
pop
fcoml
cmp
fildl
iret
inc
mov
pop
dec
cmp
cs
daa
mov
cmpsb
pushf
adc
jl
das
mov
or
bound
mov
ljmp
sbb
lahf
aad
sti
and
and
nop
cmp
adc
das
sbb
ret
daa
adc
adc
in
ja
ficomps
inc
fwait
push
xor
cmp
adc
insb
dec
aam
jno
call
lret
mov
cltd
test
push
cmpsb
dec
loop
stos
or
int
sub
sahf
lret
inc
fsts
add
popa
leave
fcomp
jmp
call
pop
xchg
dec
fs
popa
repz
and
int
das
mov
xchg
and
pusha
mov
mov
popa
es
sarl
fiadds
imul
add
push
imul
mov
scas
or
add
movsl
mov
sti
lds
push
inc
into
outsb
jl
loopne
mov
in
inc
movsl
daa
adc
add
xchg
mov
idiv
loopne
out
inc
inc
xor
cmp
sbbl
and
fsub
test
popa
ds
shlb
xchg
lahf
fcmovbe
mov
inc
fildll
inc
stc
roll
jb
dec
xor
inc
inc
or
xchg
loope
mov
pop
imul
xor
lods
add
mov
or
int
mov
push
stos
aas
mov
mov
cmp
cmpsb
cmpb
rcrb
push
inc
xor
imull
pop
or
sahf
adcb
mov
fidivl
mov
out
fwait
add
sub
dec
add
hlt
jg
xchg
outsb
fisttps
movsb
cli
push
adc
mov
fiadds
push
sbb
addr16
loopne
stos
inc
push
int
sbb
sbb
jns,pt
mov
cmpsl
add
cld
push
sub
inc
pop
addr16
repz
fnstenv
lret
iret
fnclex
in
jno
mov
push
iret
mov
fnsave
fwait
lret
pushl
pushf
fs
jp
insl
pushw
mov
or
xor
cs
cmp
cli
sahf
inc
in
sub
dec
mov
je
test
mov
jb
sbb
stc
mov
in
and
add
rcll
adc
pop
jp
repz
loope
push
push
sub
push
jbe
xchg
addr16
lds
dec
sbb
xor
call
cmp
movsb
arpl
inc
cli
xchg
loop
mov
das
push
std
ret
pop
inc
imul
sbb
movsb
stos
sti
inc
test
rep
xor
dec
push
sub
in
jge
xor
std
hlt
pop
loopne
adc
aam
inc
or
adc
loope
popf
fmul
popa
mov
xchg
sub
mov
movsb
hlt
xchg
clc
cmpsb
enter
sti
inc
cmp
push
dec
inc
cmp
inc
jl
push
sub
clc
fcomp
into
xor
clc
imul
test
xor
daa
adc
in
xchg
aam
fcmove
pop
dec
push
gs
fs
scas
push
xchg
inc
in
mov
dec
pop
cmp
inc
sub
and
jno
js
mov
repnz
not
in
xor
outsb
jmp
xchg
lods
sbb
divl
fldt
insb
mov
fwait
pushf
loope
shl
js
pusha
popf
fsubrs
jo
lea
and
inc
xchg
outsb
and
js
sbb
pop
push
mov
lea
jp
mov
adc
mov
shrb
imul
in
mov
pop
xlat
jg
scas
lea
pop
xchg
adcb
hlt
je
cs
mov
mov
jle
or
js
xchg
jg
jge
aam
out
mov
adc
xchg
lods
inc
fisubrs
dec
pop
iret
scas
mov
adc
sub
add
inc
pop
push
mov
mov
int3
enter
xchg
sub
push
push
xlat
pop
loopne
push
in
jmp
add
out
inc
xor
mov
xchg
pusha
mov
sbb
mov
movsl
shlb
hlt
mov
decb
mov
or
dec
cld
sub
icebp
mov
mov
dec
inc
or
xor
xchg
into
int
stos
adc
pop
jno
add
outsb
mov
or
add
subl
cmpsl
out
fsubl
test
ret
cmp
push
mov
lock
xchg
cmp
lcall
out
enter
push
jle
push
gs
cs
xchg
shrl
int
imul
addr16
icebp
lcall
mov
loope
sarl
test
arpl
in
andb
out
or
iret
adc
mov
dec
mov
push
enter
xchg
push
out
std
cmp
pop
sub
into
scas
pop
mov
sub
push
icebp
scas
jle
inc
mov
xchg
or
std
push
aaa
inc
movsl
mov
jg
mov
cld
xor
icebp
xchg
or
add
rcll
mov
xor
pop
add
xor
ret
push
dec
shrl
xchg
push
daa
jp
fwait
dec
dec
idiv
rcll
insl
rolb
push
ljmp
loope
pop
pusha
mov
out
gs
cmovne
mov
push
push
daa
pusha
cmpsb
orl
dec
ret
test
xchg
xor
cwtl
jg
jmp
ljmp
adc
mov
bound
sub
mov
shr
xchg
jbe
mov
inc
pop
mov
repz
adc
ljmp
gs
pushf
cmp
rcr
dec
xchg
out
insb
loop
sub
pop
dec
sbb
ja
xchg
xor
dec
js
fstpt
divl
or
add
mov
xor
pop
sub
pop
jcxz
jle
fucomp
ret
aas
dec
xchg
jecxz
outsl
lahf
call
pop
in
scas
mov
pop
add
cmp
pop
rcl
in
movsl
in
imulb
jnp
daa
inc
hlt
pop
pop
lret
cmp
stos
adc
xchg
mov
adc
inc
fsubrl
push
cltd
ret
jb
js
mov
push
in
sbb
dec
xor
aam
loopne
push
es
pop
push
and
jg
sbb
mov
add
inc
or
sbb
inc
mov
inc
xchg
mov
pop
mov
mov
jl
fcompl
and
mov
sbb
xchg
rcrb
pop
or
sbb
mov
add
fs
dec
lcall
ret
inc
and
push
and
add
xchg
stos
xchg
fnstcw
call
mov
popa
ret
jle
push
aaa
xchg
imul
pop
fwait
test
and
cmp
movsl
mov
out
mov
mov
push
mov
and
imul
push
das
clc
push
or
pop
sbb
nop
hlt
imul
shrl
add
mov
lret
xchg
sub
jns
and
clc
mov
push
into
in
xor
add
dec
inc
or
xor
pop
push
sbb
lahf
jge
or
pop
add
stos
xchg
sub
sbb
pop
lds
adcb
loope
loop
lcall
nop
rorb
sahf
inc
lods
imul
mov
sahf
daa
jno
cmp
or
mov
push
xchg
call
ficompl
loop
mov
nop
pop
std
mov
sahf
sbb
push
insl
mov
push
testb
subps
repz
decl
or
mov
addb
mulb
int
ja
push
mov
lea
mov
out
fisubl
testb
lahf
inc
adc
mov
das
adcl
shll
outsb
push
inc
mov
add
ss
cmp
pop
fists
push
mov
inc
out
or
ret
cmpsb
push
jecxz
loopne
push
in
rorb
push
sub
xchg
inc
and
push
es
dec
pop
fidivl
imul
cmp
test
inc
jle
sbb
cmp
out
fwait
jl
adc
dec
mov
sub
out
mov
dec
inc
and
sbb
adc
inc
pop
dec
xchg
imul
pop
imul
inc
jb
clc
repnz
test
xchg
movsb
outsb
push
jp
xchg
lcall
sbb
rcrb
rorl
pop
daa
cs
xlat
stc
test
jl
repnz
mov
mov
jle
xor
lock
or
fdivp
dec
out
mov
fistpl
xchg
ror
fisttpll
xor
pop
fldenv
aam
aam
fnstsw
mov
xchg
sbb
push
push
mov
and
jne
and
xchg
jne
rcr
sub
out
arpl
fcmovnb
mov
xchg
sub
ds
xlat
gs
mov
jb
push
xchg
into
fwait
movsl
mov
mov
fsts
dec
out
arpl
push
lahf
adc
sbb
mov
aas
out
pop
jns
xor
fwait
cmp
test
daa
faddp
lds
xor
in
xchg
or
adcb
mov
adc
push
lock
outsb
out
xchg
xchg
test
addr16
fs
mov
pop
shll
scas
sub
or
ljmp
or
outsb
push
mov
movsl
mov
xchg
int
out
or
push
pop
push
lods
xchg
inc
push
scas
idiv
jae
sub
jnp
jae
cmpsb
xor
sti
dec
sbb
cmp
cmp
xor
mov
orb
fstl
inc
pop
adc
cmp
xor
out
sbb
popa
in
mov
mov
aad
sti
dec
mov
mov
push
repnz
or
cmp
fucomi
xchg
push
testb
pop
in
sbbb
push
lahf
es
shlb
mov
sti
into
jge
or
in
pop
testb
roll
mov
jg
ficoms
push
and
imul
or
orl
push
in
add
mov
fnsave
sahf
pushf
hlt
outsb
iret
xchg
jge
pop
mov
lock
mov
lds
in
inc
dec
mov
mov
rcll
xchg
aad
add
inc
mov
addl
or
lods
scas
or
dec
pop
sbb
fdivrp
pop
sbb
cmp
test
jo
in
loope
popf
pusha
fs
mov
lods
ds
xor
xchg
das
xor
and
mov
xchg
pop
mov
mov
jecxz
imul
sub
inc
ja
fcmove
mov
test
push
jae
inc
adc
andb
mov
movsl
xchg
enter
test
push
mov
mov
and
es
and
data16
xorb
scas
dec
je
lea
enter
or
xor
and
iret
ljmp
push
inc
fldl
mov
movsl
je
mov
mov
xor
xchg
inc
or
mov
adc
out
push
sar
mov
fcomip
int
outsb
mov
insb
aas
push
popf
sbb
popf
sub
sbb
ds
js
cmpsb
xchg
lds
lcall
outsb
mov
sbb
lods
leave
decb
add
cmpsb
mov
push
dec
sbb
push
enter
jae
sbb
jecxz
push
mov
push
sbb
xchg
dec
xchg
jo
jne
jno
pop
mov
cmp
mov
xor
cmc
fsubrs
lret
shrb
pop
jno
xchg
xchg
enter
pop
mov
test
aas
push
pop
aas
lret
cltd
add
fisubs
int
es
mov
aas
fwait
ds
cld
sub
ljmp
aad
jno
pusha
das
popf
sbb
mov
xchg
jb
ja
adc
mov
in
bound
push
inc
in
inc
push
lret
leave
clc
push
add
lahf
inc
mov
push
push
jns
inc
fnstcw
je
jo
cltd
xor
es
xchg
xchg
and
call
lock
and
add
les
lret
dec
fstpt
cmpsb
fsubr
xchg
mov
push
mov
gs
cbtw
jne,pn
jg
mov
push
cs
shl
cmp
push
xor
loop
mov
popa
mov
push
pop
in
or
push
mov
cltd
lds
cmpsl
out
sbb
push
jno
mov
sub
ja
sbb
rep
dec
ficoml
xorl
add
push
jbe
out
inc
mov
in
add
jb
sbb
cltd
mov
hlt
fildll
and
push
mov
inc
xor
int3
inc
cwtl
scas
insl
outsl
sti
fisubrl
fcoml
xor
dec
cmp
fld1
mov
mov
xor
mov
pop
mov
mov
ja
pop
and
jge
sbb
enter
push
dec
sub
test
jne
daa
shll
stos
cld
jge
ljmp
leave
into
or
enter
dec
lds
xchg
rorl
popa
fisubl
stos
xor
clc
sub
int3
sbb
push
mov
cmc
loope
inc
enter
push
outsl
lahf
inc
gs
xchg
and
cmp
dec
test
jns
dec
mov
mov
out
xchg
pop
lods
dec
leave
push
sub
pushf
aad
out
add
sbb
mov
add
scas
xchg
fadds
and
pop
jl
clc
dec
mov
popa
loop
mov
inc
sbb
scas
xchg
mov
popa
cmc
jno
pusha
sbb
mov
fldenv
xor
dec
mov
xchg
jne
inc
add
std
fxch
cmp
rolb
or
ss
add
nop
mov
aad
cmc
loopne
push
pop
mov
jb
xor
pop
push
lods
js
jo
xchg
cmp
or
cmpsl
lods
mov
push
rclb
arpl
sub
cmp
pop
pushf
jg
shrl
and
test
nop
inc
mov
scas
mov
jp
das
stc
push
xor
jge
mov
push
xor
add
iret
mov
pop
xorl
lds
mov
xchg
cmp
dec
test
leave
cli
mov
jbe
lods
out
jmp
rclb
cmpsl
jecxz
outsl
mov
outsl
sub
jno
mov
mov
test
inc
adc
sub
pop
icebp
loop
inc
lret
push
push
mov
adc
in
and
dec
shl
loope
sub
fdivs
icebp
jmp
ret
cmp
adc
je,pn
shr
jo
sbb
cld
insl
in
mov
xor
sbb
sub
cli
add
cli
or
push
mov
push
pusha
es
dec
inc
fcoml
jae
mulb
ljmp
mov
jbe
xchg
add
pmuludq
mov
testl
xlat
sub
add
negl
add
jno
xchg
xchg
dec
shr
mov
bound
inc
rol
pushf
sti
push
aam
cli
cmpsb
push
leave
ja
inc
add
sub
mov
sub
dec
mov
lret
and
add
imul
push
mov
test
inc
lret
pop
fwait
cmpsl
jne
js
mov
incb
mov
adc
lods
int
jmp
inc
xor
push
pop
push
mov
push
fwait
jecxz
mov
or
or
sbb
in
jo
lods
es
movsl
mov
push
xor
xor
mov
imul
mov
orb
test
stos
ljmp
adc
cmpsl
aaa
fdivr
fwait
lea
or
adc
mov
add
dec
pop
lock
push
idivb
push
jb
imul
nop
imul
out
inc
cli
arpl
js
inc
rcrb
inc
stos
leave
movsb
jl
icebp
popa
adc
jp
test
ficomps
mov
xchg
ds
mov
mov
cmp
scas
out
rcl
test
xchg
add
jbe
push
ficoml
subl
push
insl
orb
add
inc
push
sbb
in
cmpl
sbb
push
mov
and
pop
mov
out
jp
mov
cltd
mov
fbld
les
imul
jae
add
ret
pop
add
xchg
ret
pop
iret
lods
loope
js
xor
outsl
inc
sub
inc
lahf
jb
imul
test
out
scas
push
cmc
mov
xchg
repnz
inc
push
mov
lods
push
cmpsb
and
mov
or
addr16
adc
xchg
push
push
cmp
outsb
xor
xor
fisubl
and
push
out
rcr
push
bound
mov
ljmp
mov
jp
out
into
iret
push
sbb
loop
lea
mov
fdivs
int3
mov
lcall
cmp
sbb
inc
mov
stos
jmp
xchg
jg
jge
shr
in
adc
mov
lahf
aas
xor
mov
push
adc
mov
loopne
sbb
ret
jnp
nop
cmp
adc
ljmp
call
data16
pop
add
cltd
jl
jae
ror
imul
jg
cld
sub
test
or
imul
xor
pop
add
mov
iret
push
push
call
jo
icebp
rol
jb
and
pop
into
mov
dec
stc
or
mov
mov
adc
xchg
xchg
sahf
inc
loop
adc
and
sub
xlat
and
insl
mov
xchg
call
push
cltd
mov
popf
adc
jno
xorb
and
dec
insl
xor
aas
rorl
iret
enter
out
push
jecxz
xor
sbb
add
stos
leave
es
mov
outsb
scas
pushf
lds
pop
push
jo
stc
xchg
test
mov
jno
dec
shl
mov
stos
xchg
xrelease
adc
sub
jns
sbb
arpl
xchg
aas
mov
inc
or
inc
lea
stos
sahf
push
enter
addr16
and
test
dec
mov
jmp
pop
cmp
into
inc
mov
fs
fwait
mov
aaa
out
jns
xor
aas
hlt
enter
mov
pop
push
and
jnp
xor
dec
mov
pop
adc
call
xchg
or
push
dec
shrb
les
push
imul
and
pop
mov
nop
or
mov
jns
imul
inc
sbb
nop
xlat
mov
ljmp
pop
lds
nop
push
cmp
das
inc
sbb
pop
jae
pop
shll
dec
andb
dec
fwait
cmpsl
mov
jmp
fs
into
dec
dec
jb
inc
xchg
movsl
sub
sbb
test
mov
add
and
bound
or
push
mov
lcall
xor
daa
pop
jbe
loop
inc
movsb
das
daa
sbb
into
push
mov
lahf
leave
sbb
sbbl
mov
adc
cmpsb
mov
out
cmpb
stos
sar
pop
sub
or
loope
js
push
outsl
adc
outsb
mov
push
leave
adc
mov
add
cmpsb
jb
int
idiv
fimuls
js
jbe
clc
mov
mov
xor
mov
and
mov
jmp
test
jno
xlat
dec
jecxz
repz
ret
int
dec
jecxz
inc
fcmovnb
add
add
ds
movsl
iret
sub
lcall
adc
xor
xchg
inc
lock
pop
lea
dec
xor
aas
sub
push
pop
jle
mov
mov
sub
mov
ret
xchg
and
mov
int
into
dec
in
xchg
lods
sub
xchg
test
adc
sbbl
xchg
adc
fidivs
push
xor
pushf
inc
in
lock
mov
js
push
repnz
adc
shlb
dec
jp
cmpsb
movl
pop
cwtl
inc
inc
sti
pop
stc
comiss
les
xchg
mov
arpl
mov
cltd
sbb
adc
fwait
jge,pt
adc
movb
jae
mov
shlb
std
jl
xchg
je
fcos
inc
xchg
pushf
int3
inc
mov
adc
je
jno
adc
add
sbb
shrb
cmc
aam
and
gs
adc
stos
and
leave
test
or
or
imul
jno
mov
or
js
cmp
sub
push
xchg
adc
inc
sub
xor
cmpsb
xor
xchg
test
fcompl
mov
sbb
push
ret
pop
fcompl
xchg
xor
lock
mov
xor
iret
mov
pop
mov
or
fs
ja
loopne
into
std
ja
cld
and
lret
in
jbe
sub
push
mov
xor
pop
mov
sbb
popf
xor
jp
jle
sbb
push
aam
and
ja
sbb
jecxz
cmp
out
loope
imul
loopne
pop
in
lods
and
stos
push
adcl
sub
cs
inc
mov
shrb
loope
cmpsl
inc
or
loop
out
xchg
out
or
iret
push
mov
sbb
mov
test
pop
iret
adc
mov
inc
lods
mov
testb
outsl
loope
mov
in
outsb
mov
xchg
sbb
push
jno
jae
mov
mov
dec
xchg
inc
jg
shll
icebp
dec
push
add
repz
ret
fcmovnb
pop
mov
fisubl
xor
push
int3
ficoms
xor
push
out
lods
xorb
mov
sti
xchg
cmp
xor
inc
jb
pop
fcoms
push
and
push
pop
jge
adc
mov
or
jbe
incb
push
imul
arpl
adc
addb
popa
sti
pop
xor
push
or
clc
xchg
jne
mov
inc
mov
fdivp
push
shlb
in
or
or
cwtl
or
and
mov
pop
int
pop
and
gs
mov
dec
cmp
sbb
jne
pop
in
ficomps
xlat
jb
ffreep
loop
xchg
imulb
mov
dec
cmp
sbb
fiadds
cs
jbe
cmpsl
ret
mov
cltd
pop
add
mov
xor
mov
add
dec
in
into
lods
mov
popa
jb
push
mov
and
lahf
mov
stos
mov
cmpsb
adc
pop
outsb
lea
xchg
jae
stos
cwtl
lcall
hlt
aad
pop
mov
fs
fwait
sub
sbb
sbb
lock
into
fs
mov
mov
fidivrl
pop
sub
decb
loopne
into
scas
pop
out
imul
das
xchg
or
orb
stc
fstl
jp
sub
xchg
jae
push
dec
sub
cltd
adc
push
pop
dec
lea
imull
or
and
mov
cmpsl
hlt
sub
mov
pop
sahf
idivb
daa
sbb
cmpsl
fucomip
into
cmp
dec
adc
lahf
sub
rolb
pop
push
adc
test
test
and
test
in
xor
mov
and
mov
les
loopne
push
mov
bound
push
stc
out
inc
dec
in
clc
testl
inc
pop
int3
cmp
mov
add
cmpsl
mov
inc
mov
andb
iret
sub
repnz
fimull
ret
test
ret
adc
dec
push
push
jp
lods
sti
cwtl
dec
push
push
adc
inc
push
xchg
frstor
mov
movsb
test
dec
jb
cmp
insl
arpl
cmp
cwtl
enter
jne
jnp
xchg
adc
push
add
in
rcr
or
repz
xchg
fbstp
mov
pop
jl
shlb
aas
ljmp
lret
xchg
in
mov
jmp
scas
mov
add
in
je
call
push
mov
cmc
loope
dec
in
and
add
xchg
sub
addr16
subb
inc
out
mov
aam
pop
mov
movsl
pop
cltd
jge
mov
adc
push
in
and
add
addr16
in
adc
inc
insl
sar
push
mov
mov
sbb
mov
or
call
adc
mov
insl
or
xchg
fmuls
iret
testb
icebp
ret
shr
xchg
pop
mov
iret
push
out
jg
jmp
xor
dec
mov
adc
xchg
lds
inc
js
icebp
pop
fdivr
mov
mov
mov
inc
adc
jo
int
subl
pop
or
stos
neg
repz
jns
fs
mov
or
sarb
stc
push
dec
clc
cmc
pop
and
adc
test
ret
lret
sti
pop
mov
xchg
sub
fstpl
outsb
inc
fidivrs
xlat
insb
cmp
add
inc
pop
fiaddl
dec
je
in
jb
and
cmp
data16
sub
stos
repz
ds
jecxz
push
inc
popf
popa
dec
push
in
in
and
aam
test
in
sbb
ret
aas
pop
loope
ret
ss
loopne
fwait
xor
or
sub
sbb
popa
mov
gs
or
cmp
fistpl
mov
adc
out
xchg
incb
test
test
and
lods
loopne
push
into
mov
pop
aas
sub
push
ljmp
outsl
imul
push
jne
sti
movsb
mov
mov
sbb
add
jp
pop
dec
xchg
cmc
xor
xchg
fld
mov
add
lahf
jl
pop
pop
inc
inc
and
notb
dec
fnstenv
xchg
testb
xchg
and
shrb
jnp
inc
mov
inc
cmp
mov
loope
mov
push
ljmp
enter
jo
mov
adcl
cmp
mov
lcall
adcb
fs
mov
xchg
repnz
push
push
rorb
pop
lcall
xchg
into
in
movsl
mov
andb
scas
sbb
cmp
push
loopne
pop
cmp
out
test
and
pop
aaa
ja
jno
ret
sbb
mov
sbb
fstpt
data16
jge
xchg
and
xor
cli
jp
pop
aam
enter
sbb
mov
fisubl
pop
add
sahf
sbb
jg
repz
outsb
or
gs
idivb
mov
daa
jae
inc
popf
sub
add
ja
lcall
xor
repnz
push
icebp
adc
lret
sti
mov
aam
push
int3
jmp
repnz
clc
js
mov
push
jp
ja
stc
vsubps
adc
push
mov
movsb
mov
outsb
jmp
dec
xor
repz
sbb
xchg
ss
test
mov
sub
inc
out
subb
aas
inc
inc
mov
push
shrl
outsl
cmpsb
mov
cld
ktestb
pop
rcr
in
mov
hlt
lret
mov
ret
sbb
cs
shrl
out
loopne
or
inc
cmp
fbstp
or
iret
arpl
jmp
pushf
add
mov
jg
jb
or
sahf
les
into
ret
inc
push
and
push
sbb
nop
sub
and
push
push
push
aas
das
mov
or
rorl
imul
outsl
push
test
sub
shll
dec
jecxz
insl
clc
add
les
das
mov
lcall
mull
xchg
int
mov
jg
out
inc
sbb
cwtl
mov
nop
add
adc
inc
je
xchg
mov
lcall
lret
fidivs
mov
add
sub
add
and
jg
adc
jp
xor
jmp
jne
push
jnp
ficoms
add
insb
rcll
in
mov
and
lahf
mov
xor
cmpl
add
int3
lds
dec
xchg
fimuls
adc
inc
ret
mov
push
xor
xchg
shlb
inc
shll
and
lahf
sbb
outsb
pop
sbb
mov
loop
xchg
jl
mov
aad
mov
cmp
mov
pop
pop
adc
lock
add
in
cmp
repnz
cmp
rcll
mov
jne
adc
pop
mov
imul
rclb
jns
rorb
or
retw
cmp
insb
and
mov
gs
scas
das
mov
cmp
fnstsw
add
jmp
dec
mov
cltd
mov
adc
adc
pop
lret
fucomi
xor
mov
push
scas
popa
scas
in
pop
mov
test
push
dec
insl
and
ret
jg
mov
into
jbe
xchg
ret
call
fwait
add
repnz
add
mov
idiv
push
dec
pop
subb
paddusw
data16
repz
mov
inc
dec
pusha
nop
idivb
inc
mov
fwait
bound
ja
and
imul
lret
xor
aas
pusha
cwtl
pop
inc
aaa
popf
in
pop
cmpsl
mov
iret
sub
pushf
sub
add
out
in
cwtl
or
orb
mov
enter
lahf
or
rcrl
mov
dec
lahf
movsb
cmpsb
cmp
ret
mov
jp
sub
mov
sub
ss
outsb
xchg
mov
xchg
cs
adc
xor
and
rorl
repnz
mov
test
dec
push
aas
push
push
inc
mov
mov
sub
out
jp
int3
mov
lret
mov
add
xchg
jp,pn
mov
push
cmp
inc
in
and
inc
dec
and
mov
mov
inc
sbb
xchg
fstpl
jne
mov
je
pop
jb
pop
lcall
pop
test
je
mov
cmp
fs
jle
daa
mov
cmc
in
and
les
daa
ja
add
mov
pop
lahf
aam
loopne
jg
out
scas
das
ss
les
arpl
push
lea
mov
loopne
pushf
insl
mov
lahf
jmp
out
daa
mov
push
pop
push
daa
pushf
jo
dec
cld
mov
xchg
rclb
mov
fwait
dec
lock
mov
jbe
dec
pop
mov
mov
adc
mov
cmp
adc
les
push
mov
xchg
add
sub
shlb
imul
adc
pop
das
shrl
mov
and
xchg
mov
adc
add
les
lahf
aad
jae
mov
adc
cmp
push
mov
or
xor
test
rorl
fs
mov
xor
or
and
mov
xchg
aaa
mov
jne
arpl
mov
lret
mov
lret
aam
rorb
shrl
jne
cmp
pop
ljmp
rcll
aam
jbe
lock
lret
outsl
subb
jns
mov
sbb
mov
adc
test
jg
dec
cmp
dec
mov
xor
pop
cmp
xor
icebp
cmp
push
jecxz
sbb
ja
pop
aam
jo
rcrb
xchg
clc
or
jge
inc
dec
add
imul
dec
ret
push
jnp
or
xchg
adc
xchg
dec
stc
pop
pop
mov
dec
bound
test
push
scas
xchg
dec
mov
fcmovnb
add
dec
push
cmp
fcoms
jg
mov
loope
cmc
cli
xchg
adc
sbb
mov
insb
xor
sti
test
popf
sbb
cmp
dec
or
mov
and
popf
fistpl
aaa
add
into
sbb
in
jl
cmpb
stc
sti
inc
fimuls
pop
jnp
push
push
repz
xchg
pushl
dec
jne
mov
mov
sub
je
ds
mov
mov
add
pop
xchg
pop
cmpsl
test
int3
add
cmp
pop
or
test
idivl
mov
mov
push
orl
and
lds
cmpsl
out
les
fcmovbe
and
pusha
sahf
cmp
lock
mov
out
mov
mov
sub
loop
and
lcall
xor
mov
jae
rcl
lret
call
ljmp
les
int
iret
in
pop
jne
xchg
sbb
int3
cmp
aad
loopne
jmp
clc
mov
pop
push
adc
mov
jnp
inc
insb
and
int3
jle
pop
test
test
mov
out
pop
jle
je
jge
push
imul
pop
jmp
jno
lret
in
add
scas
stc
cwtl
add
imul
sbb
pop
mov
test
inc
and
push
and
push
add
sub
xor
inc
dec
jae
into
loope
sbbl
cli
jg
rol
or
pop
pop
mov
push
mov
xor
iret
test
shl
in
adc
xchg
mov
enter
movsl
sub
data16
xchg
mov
mov
or
fiadds
xor
inc
pop
xor
push
pushf
mov
pop
xchg
out
add
push
push
mov
lods
sbb
ficoml
xor
pop
pop
pop
imul
mov
sahf
mov
loop
xchg
cwtl
xchg
and
icebp
or
xor
sarb
test
push
sahf
xor
push
out
movsb
inc
aaa
lret
dec
cmp
and
or
aam
push
mov
lea
adc
mov
cmp
sbb
jmp
lea
in
adc
movsb
jmp
fdivrl
idivb
sbb
add
pop
sbb
pop
adc
lea
sub
jo
sub
cmp
adc
js
mov
sub
test
inc
test
rolb
cmpsl
int
xlat
jbe
jl
jns
jnp
jno
stos
xchg
dec
xorb
sub
testl
jb
ljmp
pop
loop
mov
fdivrl
or
iret
sub
gs
aaa
or
cld
inc
and
push
push
shrl
jle
dec
sahf
shlb
mov
lds
adc
or
cs
push
fs
mov
fs
and
in
mov
dec
mov
rcl
nop
lock
cmp
add
orb
xchg
inc
add
lahf
movsb
adc
xorb
mov
lock
nop
or
lock
mov
sbb
ds
mov
test
pop
into
movsb
pop
inc
sbb
sub
mov
and
stos
xor
xorl
xor
or
lcall
sbb
loop
sbb
fwait
jno
xor
pop
mov
cwtl
int
das
adc
pop
mov
mov
adc
jl
or
dec
fwait
loopne
or
fwait
cmpsl
enter
cmp
and
add
js
mov
insl
popl
mov
mov
popf
call
push
and
leave
out
pop
pop
inc
push
or
xchg
test
call
outsl
ljmp
bound
adc
mov
fdivrs
add
inc
dec
jnp
xor
jns
push
push
inc
xor
out
jbe
mov
sbb
call
lret
xor
movsb
loope
sub
out
flds
mov
aad
jnp
push
cli
cli
jb
mov
mov
fmull
mov
or
push
sub
insl
inc
adc
addb
push
dec
js
sbb
insb
pop
adc
inc
mov
movsl
sub
cmp
mov
rolb
sub
xchg
or
enter
mov
mov
hlt
mov
add
xchg
fcomi
cmp
xorb
aaa
shll
push
movsl
push
xchg
je
lock
cmpsb
lcall
scas
xchg
gs
jecxz
add
push
jnp
add
into
and
aam
mov
ret
or
push
int3
fldcw
stos
fisubl
cmpsl
test
and
dec
orb
adc
outsb
add
lds
sub
mov
push
add
sbb
cwtl
mov
mov
out
or
repnz
xchg
test
pushf
dec
pop
dec
int
add
fcoms
jl
cmp
das
pop
xor
ret
fstl
js
jge
pusha
xchg
xlat
mov
das
jmp
pop
add
mov
cltd
leave
dec
mov
int
add
outsb
mov
lret
push
std
mov
pop
cmp
pop
rorb
jmp
xchg
xor
xchg
jmp
sbb
xchg
cmp
fistps
lds
lahf
push
dec
mov
sub
repz
ret
or
pushf
inc
mov
adc
hlt
addr16
outsl
out
mov
popa
jmp
mov
lock
les
scas
insb
mov
sub
shll
sub
mov
and
dec
add
xchg
int3
sbbb
jmp
or
je
insl
mov
out
mov
jmp
cmp
jo
push
xchg
ds
dec
ja
jbe
mov
stos
xchg
stc
cmp
xchg
sbbl
jmp
add
leave
inc
xlat
pop
dec
pop
xchg
cltd
int3
pop
movsb
gs
loope
cmpsb
test
adc
leave
xchg
pushf
cmpsb
pop
xor
jecxz
jp
fscale
cld
mov
cld
adc
adc
icebp
push
lahf
cwtl
test
ss
pusha
add
in
aaa
idivb
bound
mov
pop
mov
cli
leave
scas
lahf
pushf
cmp
cmpsb
sbb
mov
jl
fimull
int3
mov
xchg
pop
sub
aas
push
lds
mov
sub
cs
jnp
or
mov
loopne
add
cmpsb
pop
push
xor
inc
sbb
push
jns
and
mov
ret
mov
repnz
cld
pop
push
xor
mov
pop
lcall
jne
push
mov
push
fisubs
fs
ljmp
lahf
repz
fs
inc
mov
sub
and
cwtl
adc
pushf
jns
mov
test
dec
mov
dec
lock
imul
dec
lods
cmp
mov
es
xor
insl
movsl
mov
push
int
test
dec
add
fsubs
mov
cmp
enter
inc
loope
bound
or
pop
jge
mov
rorl
jne
cmpsb
sub
xchg
mov
dec
jecxz
and
popf
cmp
stos
rolb
mov
sbb
mov
mov
or
sahf
jno
mov
xchg
jb
pop
mov
sub
xor
in
sbb
fadd
imul
fcoml
sbb
outsl
fwait
dec
jmp
nop
add
push
xchg
fisubl
mov
das
or
fwait
jge
sub
add
daa
into
ja
inc
and
pop
jecxz
inc
out
sbb
ret
cli
dec
and
stos
mov
cli
ja
repnz
mov
dec
fs
in
popa
sbb
jp
sbb
dec
movsl
cmpsb
hlt
call
bound
lahf
flds
jecxz
sbb
dec
insb
in
bound
xor
dec
xorl
mov
mov
mov
jb
scas
ljmp
mov
and
aam
mov
insb
jmp
aad
nop
adc
adc
mov
sub
movsb
jns
cmp
aas
lock
push
mov
enter
insb
mov
movsl
cmp
dec
scas
sub
mov
sbb
pop
jbe
outsb
inc
movsb
fimull
test
add
jmp
or
inc
fld
cmp
fimuls
add
pop
push
ficoml
in
xlat
lret
aaa
cltd
lcall
repz
cmp
add
cltd
aam
mov
push
gs
decl
test
adc
jns
std
fwait
imul
ds
xor
clc
jns
les
mov
stos
stos
in
pop
cmpsl
mov
xchg
std
test
test
cmc
repnz
mov
xchg
jmp
int
push
rclb
out
fisttpl
shr
data16
sub
xchg
out
or
adcl
sub
pop
push
sahf
and
or
push
jbe
mov
imul
mov
sbb
test
jg
sbb
sub
cwtl
lret
push
ret
shlb
das
xchg
or
mov
dec
mov
cmp
pop
cmpsb
sarb
sahf
inc
fld
dec
insl
sub
dec
ret
or
dec
jle
iret
les
ret
cmpl
mov
cmp
inc
mov
push
clc
stc
jno
ret
cmp
xor
fdivs
xor
scas
mov
jbe
loope
adc
enter
push
pop
hlt
repnz
inc
into
mov
ja
and
cmc
add
test
fsub
lret
lahf
out
test
xchg
adc
sub
data16
cld
sbb
add
xchg
clc
pop
mov
mov
cmovge
ja
push
jb
ds
or
pop
push
jecxz
shll
test
ljmp
inc
inc
pop
jo
jae
push
cmp
in
scas
pop
jno
js
or
cmp
jl
dec
xor
repz
je
test
push
pop
xor
shlb
jg
in
pop
mov
mov
dec
sbb
inc
add
into
jae
lods
mov
notb
imul
jecxz
das
enter
dec
inc
jb
cli
push
enter
mov
cmp
test
ud2
push
or
cmc
addr16
cs
add
mov
test
dec
inc
xchg
sub
fildll
outsl
mov
push
sbb
dec
push
js
inc
in
sub
popf
xchg
pop
cmp
cmpsl
insl
pop
cmc
inc
and
adc
mov
cmp
pop
xor
add
xchg
call
mov
rcrb
sub
clc
js
ret
orl
jo
cmpb
mov
inc
xchg
icebp
inc
xchg
jo
scas
movsb
into
icebp
mov
mov
dec
jmp
js
jo
or
fwait
call
xchg
lret
movsb
into
out
in
sbb
adc
cmp
cmp
pop
push
mov
fsubrs
push
divb
jnp
sarl
shrl
jae
shlb
pusha
dec
xor
lods
push
bnd
mov
add
jecxz
in
cld
je
lds
js
mov
stc
ss
push
xor
xlat
inc
lods
adc
ds
push
cmpsl
mov
mov
fldenv
add
inc
mov
cmp
cmp
push
arpl
gs
push
sbbb
pop
cmpsl
sub
fdiv
mov
negl
cmp
mov
xchg
mov
int3
test
add
pop
ljmp
push
xchg
mov
stos
pop
aas
inc
stos
fs
inc
jb
pop
xor
test
mov
inc
inc
aad
mov
out
mov
and
dec
jl
xchg
cli
notb
jbe
or
jbe
add
xchg
lret
inc
add
push
fistps
pop
out
movsl
mov
pop
and
outsb
xchg
xorb
int3
lods
or
and
cmp
cli
pop
mov
fcmovu
xor
cmpsb
xchg
push
scas
mov
mov
les
inc
pop
jge,pn
scas
sub
daa
sub
mov
shll
jae
inc
adc
stos
lret
dec
inc
test
lret
xchg
inc
inc
or
adcl
into
mov
adc
aas
pop
inc
and
stos
outsb
adc
mov
fsub
or
pop
push
pop
jmp
out
mov
lahf
fdivs
fs
dec
and
loop
pop
push
push
sar
jno
fnstcw
pop
movsb
mov
lret
sbb
fnstenv
scas
lret
push
dec
jmp
inc
sbb
jle
out
addb
jecxz
repz
mov
es
jne
mov
dec
pop
icebp
mov
je
pop
dec
add
mov
jo
inc
rorb
aam
cmpsl
push
cmpl
and
mov
mov
cmp
pushf
icebp
xchg
inc
adc
aaa
out
into
pop
popa
cmp
inc
xor
inc
push
icebp
cmp
loop
inc
imul
les
aad
cltd
leave
cwtl
pop
lods
pop
cmp
jmp
ljmp
subl
std
mov
and
jns
pop
cmp
in
sahf
add
int3
xor
adc
ja
fwait
sub
or
or
int3
movsl
xor
fsubr
dec
mov
push
xchg
imul
rcll
xor
pop
movsl
js
cwtl
adcb
mov
movsb
nop
int
fdivl
test
insb
mov
cld
in
test
cmp
hlt
or
mov
in
sbb
out
push
fistps
lret
hlt
stc
cs
imul
inc
push
cwtl
mov
cmp
pop
inc
mov
xchg
mov
imul
jecxz
shrb
jne
bnd
sub
push
repnz
or
sub
push
push
pop
sbb
sub
and
icebp
imul
icebp
cmpl
std
orb
outsb
sahf
sub
test
and
dec
repnz
cs
mov
lret
cmpl
in
inc
fnstsw
adc
lea
fs
pop
or
push
jbe
popf
inc
jo
shll
mov
scas
sahf
xchg
inc
out
pop
incl
pusha
push
cmc
mov
sbb
sub
mov
dec
ficompl
loope
push
lds
outsl
icebp
shrb
loopne
jmp
jnp
popf
push
jmp
dec
fldl
test
mov
test
adc
mov
and
fwait
mov
fucomip
out
lcall
sti
dec
mull
xchg
fdiv
ret
lock
gs
out
push
sets
in
mov
adc
mov
jge
lcall
mov
scas
rcrl
ds
jmp
lahf
stos
sbb
out
repz
sub
mov
xorl
out
ds
dec
jg
push
push
out
mov
fsubrl
scas
push
adc
xchg
outsl
loope
xor
je
sub
cld
mov
xor
ss
int
mov
xor
jecxz
shrl
ret
sbb
cmp
jno
and
sub
out
jns
pop
cmpsl
scas
stos
lcall
mov
decl
mov
sbb
lcall
push
lret
mov
pop
mull
mov
mov
fidivs
sbb
inc
lahf
lcall
mov
pop
push
and
mov
outsb
and
mov
xchg
ret
push
jno
cli
mov
or
and
dec
mov
xchg
popa
inc
int
gs
add
imul
cmp
xchg
mov
ret
sti
sbb
rol
ds
fwait
cmp
sti
mov
adc
dec
lds
arpl
mov
jb
sahf
shll
push
int
push
ret
push
mov
rcr
push
xor
inc
adc
je
inc
cmp
fnstcw
jecxz
jbe
das
mov
jmp
push
imul
add
adc
sbb
push
mov
add
fldcw
mov
gs
fsubrl
cmp
aad
jb
mov
les
jmp
cmp
pop
imul
imulb
lds
lret
jge
addr16
push
loopne
xchg
mov
sahf
scas
dec
xor
or
iret
xor
xor
pop
push
jmp
outsb
and
adc
shll
mov
jbe
cs
jns
pop
xor
fdivr
jge
cmp
pusha
mov
mov
iret
add
mov
xor
cli
addr16
imul
push
and
negb
jno
mov
push
mov
aas
test
sbb
push
pcmpeqw
enter
mov
push
imul
cmpsb
movsb
push
test
imulb
movsb
cmp
xchg
inc
adc
mov
inc
inc
pop
or
hlt
add
inc
sub
repz
out
jecxz
add
cmc
jae
add
sbb
hlt
mov
adc
mulb
push
push
aam
adc
dec
dec
xchg
xor
rep
ss
push
out
fsubrs
adc
insb
cwtl
xchg
sub
loop
sbb
imul
enter
mov
cmc
xor
and
lea
scas
mov
push
das
jmp
mov
cmc
jg
scas
bound
jae
inc
into
test
dec
or
int3
repz
pop
adc
cmc
sub
stos
out
jp
dec
push
insb
mov
nop
lahf
in
cmc
push
xchg
sbb
sbb
dec
pop
scas
lret
scas
pop
lret
jle
inc
outsb
cmp
cmp
mov
cld
subl
sbb
cltd
cld
clc
dec
cmp
sbb
sub
test
lock
mov
push
in
sbb
arpl
jns
and
or
cmp
imul
mov
mov
repz
fstl
sbb
loopne
bound
jns
mov
sti
mov
clc
adc
rcr
mov
xor
gs
inc
aas
or
leave
adc
pop
hlt
repz
xor
adc
into
inc
add
decb
fs
jb
mov
sbb
xchg
ret
mov
fadds
pop
imul
sbb
add
or
aad
arpl
fisubs
mov
imull
dec
daa
leave
stc
sbb
add
cmpsl
cli
shrb
or
push
outsl
xor
fstps
jle
inc
xchg
dec
addb
inc
pop
jmp
scas
jle
xor
mov
pop
and
sbb
dec
out
mov
insb
pop
push
cld
add
fs
insl
pushl
sub
jne
push
je
int3
and
and
mulb
sub
sbb
and
or
int3
dec
shl
dec
daa
mov
sbb
sti
aam
out
mov
add
stc
lea
jge
mov
mov
cmp
je
insl
mov
dec
ret
jecxz
inc
mov
fstpl
rolb
adc
shrl
lock
inc
lret
inc
inc
stc
and
out
test
dec
loop
lahf
lahf
fistl
mov
cwtl
sti
scas
das
and
nop
dec
out
arpl
sbb
pop
sbb
mov
pop
hlt
mov
and
mov
ja
sub
jmp
cmpsb
lahf
cmp
cmp
pop
imulb
mov
aas
mov
nop
mov
cltd
xor
fcoms
push
adc
je
inc
arpl
fistpl
out
into
push
test
outsl
inc
mov
jmp
or
and
repz
pop
pop
js
pop
in
addr16
stos
test
dec
fstpt
xchg
cmpsb
or
jo
mov
dec
test
xchg
cmp
push
scas
cmp
cmp
int
mov
sbb
adc
mov
arpl
sub
dec
es
push
testb
mov
ja
mov
sbb
push
das
push
popa
lahf
mov
out
xor
mov
mov
pop
das
rol
cmpsl
jbe
ss
stos
sub
mov
cmpb
and
push
xchg
push
or
dec
clc
push
mov
sbb
push
inc
out
inc
sbb
insb
mov
inc
pusha
sub
mov
lret
mov
js
and
insb
xor
mov
inc
js
int3
call
hlt
ficoms
push
add
mov
shlb
je
push
mov
jae
add
inc
stos
scas
inc
js
in
mov
out
imul
xchg
frstor
mov
push
inc
push
insb
ret
pop
mov
cmpb
inc
xor
lds
incb
jo
scas
mull
or
push
xchg
mov
add
mov
dec
inc
iret
xchg
xchg
shlb
adc
pop
adc
adc
loop
imul
sti
mov
xor
enter
and
fisttpl
fiaddl
mov
stc
insb
push
shlb
lods
pop
icebp
jp
pop
movsb
pop
dec
shlb
sbb
push
xchg
xchg
mov
pop
mov
iret
scas
in
and
imul
or
push
lock
inc
pop
push
push
sarl
adc
jle
rcll
je
pop
adc
cmpsb
mov
mov
mov
push
shrl
gs
mov
movl
xchg
adc
popf
pop
mov
sub
ss
push
call
int
movsl
pop
ret
push
sbb
daa
test
inc
cmp
xchg
push
lods
cmp
nop
mov
xchg
ljmp
pop
push
cltd
xor
rcl
fst
or
mov
leave
mov
sub
aas
fcompl
in
adc
push
mov
or
push
or
pop
add
pop
aad
mov
addr16
or
popa
mov
cmc
sbb
int
add
out
fs
push
add
lods
je
gs
inc
mov
and
stos
xor
dec
aad
xchg
cmp
xchg
mov
sub
cmp
insl
inc
pop
mov
jnp
jb
push
std
mov
shlb
jle
xor
lret
xor
inc
sbb
dec
inc
test
jne
je
lcall
mov
aad
pushf
int3
loop
std
push
inc
xchg
test
mov
mov
mov
sti
sub
mul
push
and
xchg
cmpsb
lds
cmp
xchg
orb
cmpsl
cmp
pop
call
push
shrl
daa
cltd
inc
push
pop
lcall
sbb
xlat
jmp
xorb
stos
out
mov
sbb
push
mov
cs
xor
lods
push
lods
hlt
adc
and
iret
scas
or
inc
scas
cmpsl
push
adc
pop
xor
add
xchg
lods
gs
es
movsb
dec
rcr
dec
inc
xchg
sub
xchg
fnstenv
aad
add
cmp
test
sti
push
mov
jl
cltd
jne
pop
enter
adc
outsl
mov
pop
fidivrl
imul
mov
add
adc
out
adc
leave
jns
sbb
push
pushf
push
mov
jl
lock
xor
das
xchg
ja
or
loope
shll
je
idivl
lods
jns
das
mov
orb
sbb
mov
imul
dec
arpl
rcll
or
or
pop
dec
imul
pop
aad
jns
mov
cmc
adc
add
add
loop
pop
or
xor
xor
xlat
xor
mov
fcompl
fimuls
pop
mov
pushf
cmpsb
addr16
enter
jecxz
je
cmpsl
inc
arpl
adc
xchg
aaa
fistps
fcmove
jbe
insl
arpl
and
sub
xor
push
aam
aas
mov
ljmp
jno
out
mov
dec
cmp
push
cmp
sbb
push
fisubrs
inc
lea
push
inc
add
outsb
adc
xchg
shll
mov
fiadds
and
jns
push
jmp
pop
fs
cwtl
lock
aam
outsl
jg
sbb
xor
push
cs
mov
mov
pop
mov
adcb
int
pop
sbb
push
fstl
cmp
and
in
adc
loopne
movzwl
enter
cmp
lcall
aad
stos
inc
lods
xor
add
mov
notl
out
mov
push
xchg
movsb
inc
mov
lock
outsb
lret
or
lock
pop
or
cmp
jns
imul
mov
aam
sub
push
movsl
aas
cmp
loop
imul
aaa
lcall
ljmp
sbbb
jge
fcmovbe
enter
arpl
xor
push
mov
push
adc
mov
mov
xchg
push
test
adc
dec
mov
jns
insl
orl
lcall
mov
cmc
sub
fcoml
xchg
add
lods
push
jp
daa
push
or
movsl
cmpsl
and
xor
aam
cli
dec
mov
enter
std
jle
or
jl
dec
jmp
push
aas
shr
inc
mov
mov
jmp
scas
in
mov
inc
ja
mov
mov
xor
push
test
rorl
fcoms
into
push
mov
lods
and
adc
and
cmp
aaa
ds
cmp
mov
lea
ffree
cwtl
popa
mov
jp
pusha
sub
xor
push
pushf
lahf
shrl
scas
jmp
pop
or
idivl
inc
pop
movsb
mov
xchg
ljmp
repz
lret
les
outsl
inc
dec
das
inc
inc
push
es
mov
sar
push
adc
aas
ljmp
les
jecxz
stos
aaa
jbe
and
or
and
adc
hlt
cld
jge
adc
lods
pop
lock
xchg
cmp
inc
mov
push
lock
cld
hlt
scas
gs
imul
xchg
xor
das
xchg
call
fiaddl
mov
pop
xor
int
add
push
out
in
scas
stc
dec
iret
xor
in
aaa
mov
push
sbb
xchg
push
mov
add
pop
sub
mov
insl
lods
test
xor
aad
sti
mov
pop
dec
nop
sub
xchg
pop
aad
jp
test
sub
bound
rclb
int
inc
data16
repnz
rolb
fnstsw
mov
push
call
pop
fsubp
cmp
mov
mov
xorl
push
lret
out
ljmp
jle
adc
nop
clc
fisubrs
sbb
xor
inc
subl
insl
pop
xlat
ja
xchg
es
xchg
in
lcall
mov
arpl
dec
sets
cmp
out
iret
movsl
pusha
pop
out
sbb
lods
xor
in
push
imul
cmpsl
inc
sub
cmp
sbb
or
sbb
pushl
das
cmpsl
cmpsb
cs
push
inc
aad
ss
sbb
shlb
stos
ja
jge
cli
lods
insl
xor
inc
mov
fisttpl
icebp
seto
pop
popa
std
jb
mov
add
sub
jne
pop
xchg
popa
fwait
and
stos
imul
imul
outsb
mov
aam
lret
pop
out
test
test
and
adc
cld
xor
adc
mov
xchg
repz
dec
cmpsl
inc
pop
cmpsl
mov
das
data16
stos
dec
mov
popl
add
and
int3
pop
push
js
cmp
fists
iret
dec
mov
scas
or
pop
cmpsb
sbb
lea
mov
cmp
dec
out
cld
repz
lahf
fsubrs
inc
sbb
negl
shll
rcrl
fcomps
int3
loopne
sbb
pop
jmp
jle
mov
jne
lahf
xor
push
xor
sub
pop
dec
scas
popf
inc
mov
xchg
mov
imul
imul
xor
mov
inc
cmp
popa
sbb
push
add
or
bound
or
outsb
jecxz
inc
in
out
leave
mov
push
jle
ficoms
inc
mov
jge
jno
into
mov
into
outsb
lea
scas
std
fcmovb
cmp
pop
mov
scas
cmp
pop
add
dec
adc
push
loopne
stos
aad
lea
mov
test
pop
jno
leave
push
adc
out
out
mov
and
xchg
push
dec
mov
out
xchg
jo
fwait
out
in
or
xor
sbb
cmc
or
pop
pop
inc
jl
push
pop
orb
iret
dec
iret
mov
std
jns
mov
clc
xor
rcll
push
shrb
in
in
sar
fdivs
push
out
jge
stc
ljmp
or
leave
pop
scas
lret
adc
cli
mull
pop
fcomps
mov
cmpsl
jb
cli
into
pop
cmc
dec
dec
jg
adc
mov
repz
imul
ret
clc
cltd
jecxz
addb
lret
and
lods
out
jl
jne
repz
lods
push
fld
bound
push
pop
cmp
fs
pushf
mov
and
test
es
je
sahf
mov
pushf
adc
sarl
cmp
adc
test
test
add
pusha
cli
dec
js
cmp
lods
mov
fiadds
pusha
ret
je
lods
cmp
loope
pop
scas
fcoms
ret
fnstenv
mov
cli
bound
xlat
dec
adc
movsl
nop
imul
sub
sub
out
cld
insb
repz
test
push
add
xor
dec
sub
fs
mov
mov
xchg
xlat
pusha
out
sub
adc
adc
inc
add
enter
mov
movsb
add
enter
loope
cld
cmp
popa
ljmp
jge
repz
sbb
ret
push
and
xchg
nop
shl
idiv
leave
pop
sub
nop
fimull
cmc
mov
movsl
lahf
xorb
mov
mov
inc
and
fildll
ljmp
dec
es
push
in
int
loopne
shrl
xorb
mov
xor
pop
fldcw
mov
adc
cmp
inc
cltd
sbb
lcall
addr16
xchg
pop
fcom
add
sub
fdivr
inc
mov
lods
mov
hlt
cli
or
je
enter
shlb
enter
jge
sub
and
xchg
jmp
cmpsb
push
data16
add
ret
pop
and
push
inc
enter
cltd
imul
jnp
dec
imul
pop
push
sbb
add
ret
pushf
cld
or
mov
fucompp
xchg
mov
cmpsb
mov
enter
cmp
cli
jge
inc
adc
loop
push
fiaddl
in
loope
or
out
mov
scas
push
ljmp
ja
add
add
add
clc
rcll
leave
xchg
nop
adc
mov
xor
mov
cmpsl
lds
xor
fiaddl
push
fldcw
notl
lcall
bound
arpl
dec
pop
stos
nop
dec
mov
or
sti
lods
jg
inc
out
jno
dec
sub
sarl
mov
lds
xor
sub
repz
ja
aad
sub
movsl
imul
je
jecxz
outsb
mov
cmp
push
push
loopnew
jne
dec
cwtl
ja
hlt
inc
xchg
xchg
sbb
mov
and
xor
xchg
mov
iret
rcrb
sbb
lret
xor
mov
pop
outsb
jae
mov
add
test
lds
test
xor
mov
inc
push
fists
imul
or
or
je
faddl
push
or
xchg
xchg
outsl
mov
mov
mov
mov
out
pushf
pop
data16
dec
in
add
xchg
push
imul
mov
pop
lods
daa
imul
adc
aaa
or
sub
int
mov
lret
rol
cmp
dec
push
movsb
lret
pushf
nop
in
ficomps
xor
jmp
dec
into
inc
add
mov
decb
rcll
cmp
cltd
inc
push
and
imul
jg
fadd
fwait
out
xor
sbbl
pop
or
mov
xchg
bound
lock
xchg
fld
ret
stos
popf
xchg
idivl
pop
out
mov
shlb
cmpsl
sub
sbbl
cmp
ja
fistl
dec
pop
push
aad
push
inc
aas
xor
inc
lods
dec
shl
hlt
cs
dec
sbb
mov
mov
sub
inc
lods
shlb
loop
cld
sbb
jge
xchg
inc
dec
mov
inc
int3
test
imul
adcb
lds
jg
xlat
sbb
add
bound
jl
fwait
cli
rclb
and
pop
fcomp
adc
aam
fs
lods
sub
fadds
clc
mov
enter
sub
push
aaa
xchg
std
mov
dec
fistpll
jno
jbe
ja
xor
into
adc
adc
pop
aad
mov
out
test
mov
aad
jbe
ret
xor
and
sub
fists
jne
scas
mov
xor
pushf
inc
pop
mov
or
repnz
daa
int
mov
scas
ds
aad
jb
idivb
aad
fisubl
xor
jecxz
sub
pusha
ret
or
scas
sub
jb
gs
and
fidivl
xchg
fidivl
inc
sbb
xchg
mov
loope
xor
adc
loope
sbb
adc
xchg
push
or
lahf
imul
pusha
sub
daa
mov
out
add
inc
add
push
out
xchg
int3
or
negl
xor
shll
jp
dec
pop
clc
jmp
add
jl
stos
int3
mov
adc
pop
daa
mov
add
mov
shlb
arpl
pmaxsw
cmp
nop
mov
mov
pop
dec
pop
shr
xor
repnz
and
cmp
pop
mov
sar
stos
dec
and
inc
adc
push
mov
bound
daa
pop
push
mov
cmp
rcrb
mov
mov
and
dec
fisttpl
xchg
mov
pop
sbb
push
nop
in
push
and
push
int3
jg
sbb
xchg
mov
decb
adc
gs
aas
mov
aam
fsubp
fsubrl
adcb
inc
cwtd
add
ja
push
mov
cmp
or
jne
cs
mov
ja
in
mov
les
inc
push
inc
ja
mov
adc
jno
inc
pop
sub
mov
jl
mov
adc
push
pand
xchg
loopne
jne
push
daa
popf
xor
fimuls
or
mov
and
icebp
faddp
pop
jg
stc
jb
xlat
out
aaa
in
fwait
imul
je
mov
xor
sbb
mov
scas
mov
or
jne
ja
and
cwtl
pop
jge
out
mov
lret
add
mov
fst
iret
sub
sbbb
fidivl
dec
je
mov
or
dec
or
mov
mov
mov
inc
push
rorb
push
jl
std
lret
arpl
mov
mov
inc
lret
inc
push
adc
popf
xchg
outsl
cmp
xor
rep
movsl
xor
sbb
xor
add
gs
popf
mov
das
push
sahf
mov
push
fsubrp
lcall
push
push
jae
and
and
adc
adc
add
add
sub
outsb
add
ret
insb
add
in
pop
rcl
lret
mov
add
mov
jmp
dec
lock
and
dec
scas
aas
inc
dec
int3
mov
mov
sahf
push
popl
add
dec
jo
ja
imul
push
out
adc
movsb
mov
xchg
dec
fwait
lret
and
add
and
ds
nop
sbb
jae
int3
fldcw
test
loop
push
ljmp
inc
je
sub
cmpsl
push
and
lods
push
fmuls
lock
test
adc
lret
jb
test
inc
dec
insl
sub
test
adcb
and
cwtl
xchg
sub
gs
push
aas
xor
fstpl
pop
pushl
in
adc
shr
dec
test
or
add
push
repnz
dec
xchg
popa
pusha
xor
mov
lahf
fsubrs
adc
mov
adc
dec
jecxz
mov
les
cmpsl
mov
ss
or
sub
push
jnp
xchg
push
dec
dec
mov
cld
pusha
sahf
cld
push
sub
sub
lret
mov
push
shl
mov
je
testb
aas
loopne
lds
xor
mulb
aaa
rclb
push
xchg
insl
xchg
enter
out
hlt
push
cwtl
jge
popa
xchg
xchg
dec
repnz
inc
pop
sub
ret
mov
cld
mov
jnp
add
pop
pop
or
in
fsub
mov
lret
add
pop
fisttpll
mov
pop
and
inc
inc
dec
cld
sub
jo
or
cmpsl
notl
sbb
xor
test
shll
xor
push
sbb
pop
mov
xor
xchg
jmp
mov
jae
xchg
loop
fcmovbe
xchg
fsubrs
je
push
imul
xlat
xor
add
mov
ficompl
push
je
add
movl
xchg
or
xor
aam
jle
lods
aam
jp
jb
cltd
repz
pop
rorl
xchg
or
call
stc
les
mov
sahf
push
pop
or
in
imul
neg
xchg
test
mov
jle
lret
arpl
sbb
iret
xchg
dec
roll
mov
or
mov
push
sahf
jae
ss
inc
adc
lcall
jl
jecxz
mov
add
repnz
sub
and
pop
xchg
jne
push
movsl
orl
movsl
dec
jb
adc
andl
hlt
aas
sbbl
adc
dec
flds
in
cmp
push
jbe
subb
imul
cmpb
dec
adc
or
push
shrb
rcrb
sub
push
lahf
inc
sub
ljmp
inc
mov
push
sub
pop
rcrb
jmp
xchg
pop
mov
scas
roll
mov
std
pop
cmp
in
sbb
subb
shr
push
push
ljmp
cmc
rcrl
or
jle
popa
fstpt
pop
nop
mov
test
fists
mov
shrb
sti
add
nop
aam
cmp
mov
jle
shl
nop
das
repz
nop
int3
movsb
iret
mov
dec
lcall
jno
ss
ja
adc
and
inc
adc
pop
add
ds
test
cmpsl
mov
stos
cld
shll
fwait
xor
mov
lret
fdivrs
movsb
ret
mov
loop
stos
cmp
inc
sub
mov
arpl
mov
shl
gs
fs
hlt
pop
aas
add
push
mov
inc
loop
lods
add
push
or
ret
int3
test
movsb
and
push
pop
mov
test
ja
movsb
arpl
pop
ljmp
idivb
jnp
jb
and
fdivrl
xor
xor
push
mov
fmuls
in
push
dec
fisubs
scas
lds
mov
pop
sub
add
xlat
pop
paddsw
sbb
lds
or
push
fucomp
xor
les
nop
fcompl
or
mov
cmpsl
fcoms
xchg
dec
mov
loope
gs
data16
cmp
adc
push
jecxz
pop
addr16
mov
mov
fdivrp
push
shll
adc
scas
insb
sub
dec
or
inc
jg
mov
mulb
sub
cmpsb
and
call
and
inc
jp
fmul
lea
push
imulb
sub
pop
dec
lahf
lock
aas
dec
xchg
popa
fwait
inc
inc
shll
lods
fimull
xor
sbb
push
enter
es
xor
das
jo
xchg
bound
jae
gs
lods
pop
scas
mov
cmpsb
pop
adc
repz
cmp
fwait
and
faddp
adc
add
mov
js
les
cmp
xor
xlat
into
roll
fimuls
or
cmpsb
xchg
push
jbe
test
sub
fnstsw
fldcw
jne
pusha
jge
and
cmp
push
in
arpl
sar
adc
test
xchg
jns
imul
iret
stc
adc
mov
addr16
dec
loope
icebp
add
xchg
sbb
add
inc
out
insb
xor
pop
jnp
push
ret
dec
mov
xlat
mulb
mov
pop
inc
sub
jno
in
in
mov
mov
test
cltd
inc
sbb
shl
fnstenv
or
cltd
xor
adc
lds
add
push
pop
clc
mov
sbb
cwtl
pop
int3
xchg
pop
loopne
lea
arpl
je
sbb
and
lret
iret
xchg
dec
cmc
popf
push
xlat
push
bound
lods
sub
aam
jnp
dec
jns
jb
sub
test
mov
dec
jae
mov
cmp
sbb
mov
rcrl
pop
or
inc
sbb
xor
sbb
fcmovnu
xchg
call
inc
cmp
outsb
inc
push
cld
mov
repnz
add
add
add
aad
or
mov
jmp
sti
test
dec
shrl
cmp
push
push
push
test
movsl
inc
xor
cmpsl
data16
lea
filds
dec
mov
adc
mov
or
add
das
jne
enter
test
cmp
dec
add
xor
push
xchg
mulb
push
fdiv
aad
shll
dec
vpsubb
xlat
mov
leave
xlat
popa
sbb
add
in
push
cmp
dec
mov
lea
xchg
pop
sahf
sbb
cmp
leave
cmpl
adc
insl
push
imul
push
loopne
iret
pop
xchg
ficoms
into
mov
shrb
loop
jne
aaa
lcall
lret
sbb
ffree
imul
es
hlt
cmp
sub
and
daa
mov
push
jmp
les
ss
shrb
pop
mov
sub
daa
push
call
rorb
inc
mov
adc
jae
icebp
xchg
inc
aas
enter
iret
xor
push
aaa
mov
arpl
inc
test
jle
imul
enter
inc
lds
lds
xor
jmp
pusha
aad
out
pop
scas
rclb
gs
fdivrp
and
sbb
pushf
mov
arpl
lock
ss
and
xchg
aam
fisubrs
mov
jl
psubq
adc
sbb
mov
loope
push
cwtl
enter
pop
add
rclw
or
cmp
dec
int3
jo
add
or
arpl
inc
rol
scas
sti
sbb
xlat
movsb
icebp
fwait
push
out
cmp
es
cmc
cmp
jnp
inc
jbe
nop
aad
or
aam
jne
mov
sub
inc
ds
jne,pt
out
cmp
add
sub
loopne
enter
loopne
sub
addr16
push
lret
outsb
and
adc
jge
mov
jnp
ds
jb
and
inc
inc
fs
and
cmp
xor
lods
mov
cli
mov
mull
loope
int3
cmpsl
insb
xor
dec
add
mov
push
pop
inc
jle
bound
mov
mov
mov
fistpl
test
icebp
lret
mov
sbb
arpl
jo
daa
xchg
mov
ja
adc
cmp
test
push
push
cmp
cmp
or
jle
and
movsb
mov
ret
pop
and
xchg
std
mov
mov
mov
in
pushf
sub
sbb
sbb
fwait
pop
sub
sub
inc
cmp
mov
jmp
cwtl
pusha
lods
fidivrl
pusha
add
mov
adc
int3
sub
stos
outsl
xchg
jno,pt
cmp
jg
lock
in
popf
sbb
scas
insl
cmp
loopne
in
lock
in
rcrb
outsb
cmpsb
xor
leave
test
pop
jmp
imul
addr16
cli
push
sub
push
xchg
inc
jae
adc
push
test
push
nop
aam
pop
jno
cmp
xor
pop
pop
cmc
in
jo
xchg
rcrb
cmp
imul
imul
js
rolb
ret
dec
push
mov
lods
cmp
es
scas
call
mov
je
loopne
cmpsl
popf
mov
out
faddl
imul
inc
scas
lcall
stos
enter
hlt
daa
negl
aam
leave
sub
aas
flds
mov
push
shrl
adc
jg
cltd
jecxz
adc
ds
or
test
fiadds
xor
and
inc
pop
mov
sub
rolb
fnstenv
sbb
ljmp
add
mov
add
or
cmp
push
push
xor
jb
stos
mov
mov
push
jle
fcomps
jns
popf
dec
sub
jne
stc
mov
inc
push
pop
push
sbb
and
and
scas
cmp
mov
push
sbb
cmp
test
js
aam
mov
mov
pop
sub
lahf
lods
mov
xor
cli
imul
js
in
dec
adc
adc
mov
sti
in
cmc
repnz
out
into
mov
mov
mov
mov
call
into
ss
cmp
mov
test
lea
mov
push
pusha
mov
inc
popf
xlat
mov
cmp
lock
push
xor
or
push
xlat
in
xchg
jg
xchg
shl
pop
ds
sbb
and
add
inc
pop
test
rcrb
mov
in
mov
and
call
arpl
into
sbb
and
or
pop
push
lcall
aas
mov
scas
xchg
adc
int3
jle
fisubl
mul
cmp
adc
sti
hlt
sub
popa
and
adc
xchg
inc
iret
outsl
xchg
add
mov
lret
std
in
mov
pop
insl
imul
js
cmp
out
adc
dec
cmp
cwtl
adc
mov
jecxz,pn
and
adc
repz
pop
ds
xchg
pop
sub
or
xlat
add
jae
jp
jp
stos
add
aam
sbb
sti
pop
sti
es
ss
out
addb
bswap
in
bound
orl
insl
out
mov
mov
push
outsl
cwtl
mov
sub
outsb
out
dec
cmp
std
repz
sub
pop
push
sub
push
in
jge
fistpll
test
lods
insl
push
mul
dec
mov
pop
pop
out
in
dec
sbb
inc
mov
adc
rclb
sub
or
inc
push
adc
loope
jp
push
and
mov
popf
mov
jae
aaa
xor
mov
fcmove
in
mov
push
adc
enter
cmp
aaa
loope
cmp
lock
in
pop
lea
popa
xchg
loopne
jbe
jne
adc
xchg
lods
popf
mov
test
lods
mov
jge
push
call
push
sbb
fs
nop
imul
or
xchg
std
push
rclb
cmp
les
sub
xor
daa
xor
or
sbb
rcr
push
jo
inc
ss
adc
sbb
push
sahf
push
pushf
aas
cltd
mov
pushf
cltd
pop
push
jge
leave
cmpsl
xchg
mov
sub
inc
xlat
scas
mov
repz
push
xorb
sub
xchg
ja
sbb
mov
xor
into
dec
sbb
and
ljmp
pop
xchg
sarl
mov
cmp
or
icebp
je
mov
jle
les
dec
adc
aam
inc
in
mov
mov
gs
cltd
adc
xor
add
insl
dec
out
ficompl
fdivl
sbbl
repz
push
push
adc
push
add
push
mov
mov
jnp
xor
ret
push
adc
fldt
stos
adc
mov
add
test
hlt
mov
mov
push
push
push
mov
in
cs
inc
lock
cmp
mov
repz
xchg
das
dec
stc
adc
movsl
jnp
cmp
aaa
pop
icebp
push
dec
pop
lods
imul
cmp
out
fisubl
mov
repnz
lods
xor
outsl
push
or
fidivrs
mov
adc
jo
pop
shlb
and
les
popa
mov
mov
sbb
sbb
rorb
daa
ljmp
aas
lds
adc
sbb
pop
xchg
mov
push
push
jg
cmc
xchg
sub
add
mov
imulb
addb
lret
xor
stc
sub
pop
ss
pop
in
insb
xchg
jnp
inc
lcall
cwtl
cmp
outsb
fsubl
cmp
jbe
es
in
push
inc
lahf
mull
jae
cmp
pop
sbb
xor
sbb
call
add
gs
leave
mov
or
jnp
ficompl
popa
fwait
push
mov
ss
cmp
clc
jns
scas
xor
fucomip
sbb
jno
loope
jae
mov
xor
jnp
adc
mov
enter
or
test
adc
data16
jle
andl
mov
fstps
cli
inc
shrb
cmp
or
cmp
sub
inc
inc
cmp
js
fs
mov
mov
lcall
addr16
xor
and
call
push
negl
loopne
inc
mov
dec
gs
sbbb
cmp
rolb
sbb
ret
sbb
adc
ja
mov
js
cmp
repz
icebp
leave
xor
sbb
js
mov
pop
sbb
sbbl
cmp
or
xchg
lock
xchg
cltd
add
or
shll
outsb
scas
jae
sub
clc
pop
inc
out
pop
fwait
inc
push
insb
rcll
int
lcall
hlt
lods
imul
lds
in
fisttpl
mov
and
xchg
shrb
stos
pavgb
fcomi
xor
jg
icebp
pop
mov
aas
incb
icebp
pop
pop
test
xchg
sub
rol
iret
xchg
in
push
pop
lahf
sbb
cmp
pop
sbb
pop
test
mov
mov
or
xlat
ret
icebp
mov
stos
mov
cmp
or
adc
gs
insb
out
stos
loopne
scas
rorb
in
and
adc
xchg
pop
mov
push
xor
and
ret
test
sbb
subl
test
push
xchg
jle
mov
dec
sub
repz
or
in
adc
leave
lds
mov
rclb
outsb
pop
mov
cmc
aam
pushf
jno
push
jge
or
add
mov
test
cmpsb
dec
js
mov
repnz
neg
mov
push
dec
scas
pop
sub
cli
mov
jno
pop
xchg
push
xor
push
inc
cs
popf
push
jbe
rep
push
scas
jg
or
in
iret
jl
pop
cmp
rsqrtps
sub
outsb
pushf
repz
lahf
imull
shl
push
adc
movsb
ds
aad
je
cltd
mulb
or
sbb
xor
mov
je
in
ret
cmp
sub
mov
mov
rclb
shr
and
enter
clc
xchg
cli
cwtl
popa
or
mov
mov
test
and
sub
aas
in
pop
adc
rcll
mov
jbe
xchg
or
mov
lea
or
dec
imul
sub
dec
scas
test
push
cmpsb
icebp
mov
add
fmuls
xchg
clc
ret
adcb
pop
jae
xchg
inc
xor
sbb
push
mov
ret
enter
loope
and
jbe
adc
insl
div
jmp
cmp
hlt
cli
repz
rcr
add
je
xlat
xor
nop
jb
push
ftst
mov
test
xchg
push
in
inc
js
jge
data16
js
cltd
jle
mov
sub
rcrb
sbb
pushf
fadds
xorl
popa
rcrl
sbb
popf
cli
std
jmp
test
std
and
mov
and
mov
aaa
daa
cmp
jg
mov
out
or
mov
aad
mov
mov
cld
pop
das
out
adc
xchg
xchg
xchg
loop
jnp
fistpll
mov
das
out
loop
adc
cmp
aam
push
dec
outsb
mov
push
inc
xor
pop
out
or
lea
bound
mov
inc
enter
push
or
adc
adc
xlat
jno
add
call
sub
out
and
dec
not
pop
xchg
or
cmp
cmp
jge
das
mov
sbb
pop
addr16
pop
cmp
andb
xchg
mov
push
dec
adc
pop
jl
adc
sub
les
aad
push
dec
loopne
xchg
adc
loopne
int3
jbe
stc
pop
js
movsb
or
iret
aas
out
lods
aas
rorl
xchg
shll
and
outsb
sbb
fwait
mov
hlt
gs
dec
jae
rcll
adc
cmp
lock
sbb
add
jne
jl
pushl
dec
adc
xchg
jle
jb
insl
pop
jbe
or
push
fistl
std
in
into
mov
fistpll
aam
cli
pop
mov
inc
inc
ss
adc
mov
popf
rclb
int
int
jg
push
sub
push
push
sub
popa
scas
pop
pop
jge
push
xchg
fnstsw
push
mov
addr16
dec
and
in
ljmp
or
push
das
push
lock
lret
jo
scas
add
jnp
in
mov
enter
lret
pop
dec
inc
mov
mov
jecxz
jnp
enter
loopne
aas
push
sti
pop
lock
jg
xor
in
out
sarb
cmp
in
jno
ss
aad
pop
and
mov
ret
jl
test
xchg
push
inc
sub
movsw
int3
cmp
inc
and
or
inc
adc
daa
in
mov
rcl
xor
pop
add
data16
rcrl
iret
mull
pop
jl
or
jnp
inc
in
sarl
ret
mov
push
xor
fidivrs
lcall
fists
sbb
mov
cmpsl
aaa
xchg
ss
bound
adc
inc
ja
mov
jg
dec
hlt
add
pop
mov
mov
mov
or
fldt
push
test
add
dec
jnp
bound
sbbl
dec
sub
cli
lea
jne
cmpsb
push
out
push
mov
cmp
mull
xor
dec
cmp
add
mov
and
imul
stos
sbb
jg
stc
insl
aad
pop
movl
rcrl
jecxz
mov
fstl
mov
addr16
sub
jne
arpl
int3
bound
pop
or
ret
mov
sub
int
cwtl
outsl
sarl
sbb
pushf
sub
mov
nop
movsl
popa
push
sbb
loopne
and
push
out
mov
ret
dec
gs
es
push
pop
daa
pop
jns
mov
es
mov
sub
dec
and
add
and
lds
pop
sbb
ss
lahf
jne
notl
or
cmc
sbb
pop
and
jg
sub
mov
test
lahf
pop
or
repnz
mov
jne
dec
sub
xchg
imul
pop
pop
dec
cltd
sub
push
xchg
iret
push
jg
jl
or
pusha
pop
xchg
mov
ljmp
lret
mov
add
inc
and
mov
sti
xchg
loope
jle
cmpb
mov
adc
ret
pop
ret
icebp
divl
adc
ret
mov
push
pop
ja
lods
sbb
test
mov
repz
push
mov
add
lret
ret
scas
loop
push
pop
mov
out
sbb
inc
jg
icebp
aam
fisttpl
or
ss
push
inc
popf
adc
jmp
cs
jge
add
inc
adc
sub
adc
aas
pushf
sbb
mov
cmp
hlt
in
sbb
imul
pop
data16
je
mov
insb
loope
ret
scas
lea
push
ret
lea
inc
jns
jb
fbstp
sti
and
sbb
sub
mov
sbb
mov
fs
or
test
jo
adc
sbb
or
je
xchg
xchg
jbe
dec
jne
xlat
imul
lret
lcall
mov
popf
imul
sahf
cmp
adc
lds
leave
or
imulb
out
xlat
cmpsb
cmpsb
xchg
outsl
inc
and
cmp
push
pop
adc
aad
hlt
arpl
pop
hlt
cs
fmul
push
inc
std
aaa
test
data16
mov
imul
iret
inc
dec
les
out
pop
add
mov
lock
fstpl
lret
das
sbb
sarl
jb
add
adc
push
xchg
into
sub
inc
aas
lock
add
xchg
push
sahf
cmpsb
push
out
jl
xchg
sbb
push
jae
jne
lods
mov
lcall
xor
cmpb
mov
fldenv
ja
pop
add
dec
lods
aaa
jne
stc
pop
adc
mov
popf
add
jl
mov
shrl
loopne
sbb
sub
xchg
ss
mov
xchg
popa
jge
mov
xlat
jp
sbb
push
or
jge
pop
mov
es
and
aaa
cwtl
dec
loope
fwait
cmp
insl
push
jle
xchg
xor
loop
leave
add
pop
aas
lock
sub
incb
sub
in
aaa
jne
push
aam
jns
jnp
jecxz
dec
imul
cmp
adc
mov
movsb
inc
mov
mov
out
add
idivb
xchg
push
decl
aam
cmc
lods
sub
outsl
int
pop
mov
loopne
pop
xor
addr16
fildl
and
push
rorl
push
push
push
add
negb
notl
xorl
sub
inc
mov
loop
ds
mov
cmpsb
jne
xchg
int3
push
jbe
lods
xor
pop
dec
and
or
fcoml
mov
mov
xchg
inc
pop
ja
jge
inc
add
sub
and
and
loopne
lods
push
ficoml
rcrb
popa
sbb
pop
mov
mov
nop
cmp
jp
test
lods
hlt
push
shll
push
clc
mov
push
pop
aaa
scas
cmc
neg
lods
xchg
mov
mov
sbb
push
test
pop
lods
xor
aas
dec
dec
mov
inc
inc
xchg
fistpl
imul
popa
ret
inc
ss
push
xchg
inc
inc
xor
sub
pop
pop
mov
or
ss
std
xchg
adcb
and
push
sbb
jecxz
mov
cmp
push
mov
aam
mov
pop
cli
dec
aad
nop
arpl
push
decl
mov
out
or
adc
or
push
cltd
push
or
and
bound
das
or
fbstp
mov
fsubrs
push
cwtl
cmp
icebp
dec
or
mov
fwait
mov
mov
adc
ds
cmpsl
ss
push
cld
cwtl
xchg
add
xor
stos
inc
dec
and
je
push
cwtl
push
pop
push
fdivs
adc
sub
and
fildll
loop
xchg
adc
shrb
popa
hlt
add
jae
out
fs
sbb
movsb
mov
push
ljmp
jg
movsb
pop
lret
inc
scas
and
cli
mov
pop
jp
xor
imul
mov
dec
daa
jl
push
fistl
add
addr16
ret
pop
pop
xchg
pushf
cld
sub
ss
mov
adc
mov
clc
and
pop
ss
fdivrl
pusha
inc
lea
shll
xchg
dec
jg
pop
add
mov
push
cmp
mov
insl
vpcmpeqd
and
add
es
fwait
dec
mov
iret
cwtl
add
pop
adc
cld
xor
dec
sbb
lods
xor
jne
lcall
jmp
in
stos
cmp
and
aas
scas
jmp
xchg
xor
aam
mov
pop
ds
cwtl
fsubrp
je
mov
out
pop
movsl
scas
mov
ss
arpl
jns
mov
mov
cmpsl
xor
cmpsl
push
pop
dec
dec
mov
outsl
sub
stc
mov
and
push
rclb
shlb
xchg
data16
xor
mov
cmp
les
mov
dec
lahf
std
xchg
or
pop
outsl
test
mov
push
fld
into
fwait
cwtl
les
out
and
jbe
jae
add
inc
jo
and
sbb
stos
adc
and
jns
nop
daa
push
pop
dec
inc
clc
xchg
adc
mov
stc
enter
fxch
pop
xor
repz
clc
mov
xchg
jmp
je
in
dec
mov
and
xor
cmp
shl
scas
jnp
xor
loopne
push
insl
lock
push
in
scas
adc
ljmp
out
call
in
xchg
enter
test
test
int
fimuls
mov
mov
cmp
je
bound
cmp
add
jl
dec
dec
xor
insb
mov
push
mov
fiadds
aaa
mov
cmp
repnz
je
mov
adc
test
sub
ja
and
lds
dec
int3
add
jns
cltd
and
xor
ret
decb
adc
clc
inc
xor
std
or
pop
or
add
push
ss
push
push
sub
mov
add
lret
cmc
ret
cmp
xchg
inc
mov
lock
push
cmp
dec
fstpt
pop
jno
mov
cwtl
ret
sub
wrmsr
pop
jb
repnz
fcmovnb
insl
xor
scas
push
adc
imulb
shrb
loope
lods
mov
mov
lret
int
icebp
adc
xchg
mov
adc
call
jecxz
scas
hlt
aad
in
jae
xchg
int
stos
sti
gs
sub
cmp
sub
and
inc
mov
xchg
mov
loop
jl
imul
dec
xchg
std
jo
pop
mov
mov
mov
lret
or
cli
lret
daa
fwait
je
aas
push
aas
cmpsb
dec
outsb
aam
loop
mov
xchg
cmp
stos
bound
add
push
fbstp
popf
and
sbb
pop
addr16
mov
lock
mov
push
rcrl
imul
jns
mov
ret
cli
hlt
mov
jno
pop
add
popl
stos
cmpsl
int3
aaa
mov
scas
in
repz
jmp
ljmp
mov
shl
je
xchg
loop
lods
sub
lret
repnz
insl
dec
pop
jecxz
inc
nop
mov
xchg
stos
xchg
inc
sub
pmulhuw
jno
js
pop
mov
mov
insl
repz
adc
pop
aam
mov
lods
popf
adc
aam
pop
aam
sahf
je
lds
inc
ret
cmp
add
sub
repz
imul
shlb
jl
xchg
pop
adc
mov
sbb
push
xor
test
cmpsl
mov
mov
fwait
add
insl
adc
add
mov
pop
dec
xor
xchg
and
xchg
lahf
nop
inc
xchg
sub
clc
inc
es
cwtl
xchg
or
add
lcall
mov
fnstsw
std
sti
das
repnz
inc
mov
insl
hlt
jle
rcll
outsb
add
sub
xlat
insb
xchg
pusha
sub
fstpl
pop
pop
sub
xchg
mov
dec
cmp
lret
xor
push
push
aam
push
in
fisubl
pop
add
rclb
in
xchg
lret
pusha
adc
or
dec
cmp
lahf
push
and
xchg
dec
jg
mov
bound
push
cmp
jg
leave
scas
pop
or
inc
jg
jle
xor
mov
cltd
bndldx
cmp
push
dec
push
incl
imul
push
sbb
mov
test
adc
or
je
xlat
aas
dec
repz
pop
cwtl
dec
loope
subl
dec
mov
add
adc
mov
mov
movsl
ss
je
out
add
cmp
ljmp
add
mov
mov
cmp
inc
std
xchg
jbe
inc
mov
jns
mov
inc
sar
mov
loop
imul
imul
pop
loop
push
push
fcomi
loope
outsl
push
add
daa
and
ja
sbb
out
add
mov
jno
in
mov
push
in
jmp
shlb
mov
repnz
aam
mov
jo
inc
test
or
pop
cwtl
sub
sub
add
inc
xchg
pop
ljmp
push
adc
xor
pop
div
jnp
test
push
test
pop
pop
nop
jnp
pop
nop
dec
xchg
jecxz
mov
call
sbb
mov
jae
lds
dec
mov
popa
cld
arpl
popf
ljmp
test
or
ljmp
jnp
loope
or
sbb
pusha
jmp
iret
mov
icebp
cmp
and
or
call
mov
outsb
loope
xchg
jle
pushf
lret
mov
or
repz
jbe
cmovne
sub
inc
sbb
add
sahf
and
sub
addl
push
mov
testb
loopne
cmp
dec
lret
adc
or
push
or
aas
fbld
je
in
ss
mov
inc
mov
jo
popf
lea
outsl
dec
and
pop
insl
and
loope
insl
adcl
dec
add
and
lret
cmp
je
fcoms
aas
imul
push
sub
in
jns
icebp
lcall
mov
mov
loop
jecxz
decb
pop
ja
out
ret
lods
adc
sbb
pop
in
cli
iret
sarb
push
mov
push
pop
sbb
pop
aas
cs
pop
dec
leave
lahf
leave
test
push
inc
movsl
inc
push
jmp
pop
out
ja
dec
pop
cltd
push
inc
pushl
inc
push
inc
xor
iret
scas
cltd
inc
mov
jnp
xchg
gs
push
imul
add
cmpsb
cld
jns
ljmp
fimull
rcr
jns
sub
adc
sbb
aas
mov
fidivl
push
jne
cld
adcl
repz
push
daa
xchg
inc
fdivrp
xor
inc
pop
loop
xchg
jmp
mov
fs
sbb
mov
cli
inc
xchg
mov
test
mov
sub
mov
dec
sbb
xchg
shrl
push
jbe
sbb
call
push
sbb
push
add
iret
arpl
lret
sub
mov
dec
mov
jmp
cmpb
and
stos
cwtl
fsubrs
fidivs
push
mov
shlb
mov
insb
adc
cmp
pxor
xchg
xchg
xchg
sub
out
pushf
dec
call
add
shll
out
ret
jne
mov
fldcw
imul
cmc
xchg
je
roll
jl
push
and
sbb
cs
jg
dec
sub
sbb
jle
push
mov
scas
jl
stos
mov
inc
clc
call
outsb
xchg
sub
sub
cmp
insl
out
stos
mov
popa
mov
mov
mov
and
shl
aam
sbbb
repnz
xor
xlat
test
inc
popa
sub
cmp
push
es
push
cmp
shll
out
sti
loopne
repnz
mov
xlat
adc
test
sarb
pop
clc
dec
call
jg
les
fdivrp
mov
jnp
lret
lret
enter
mov
addl
es
test
sub
pop
add
sub
or
sub
sub
insl
std
xchg
into
cmp
adc
cwtl
sub
push
imul
dec
repz
out
shrb
sub
repnz
jecxz
and
mov
arpl
leave
popf
push
push
xor
dec
pop
push
fists
push
and
mov
test
out
and
out
pop
fcoms
bound
and
mov
cmovns
mov
clc
fisubl
out
jge
pop
pop
jae
xor
jns
enter
xorb
mov
mov
sti
fwait
cld
pop
das
mov
inc
sbb
fadd
inc
jae
ret
sbb
mov
ds
pop
cld
or
test
ret
cwtl
and
xor
pop
loope
movsb
jb
push
mov
jp
sub
fs
cmp
out
aas
loopne
dec
cmp
lret
pop
inc
das
add
notb
mov
les
movsb
or
xchg
je
ljmp
mov
lea
ret
mov
pushf
sbb
stc
push
arpl
dec
std
pop
inc
aam
stc
push
sbb
xchg
repnz
ss
stc
lret
push
inc
lret
cmpsb
out
mov
sbb
dec
and
adc
ja
arpl
xchg
in
dec
push
cmp
loope
into
fsubp
push
loop
out
mov
out
adc
pop
or
pop
xchg
lahf
mov
xor
mov
call
and
popf
aam
cmp
cmp
push
push
leave
cld
enter
out
mov
adc
inc
in
add
pop
movl
jg
push
filds
push
xchg
xor
dec
out
add
out
dec
rcl
jp
mov
mov
cmpsl
clc
stos
mov
jge
sub
fimull
fxch
test
mov
and
test
and
xchg
sbb
imul
nop
mov
xlat
das
cmp
rcr
add
loopne
cmp
jmp
xchg
lret
stos
push
insb
jg
cmp
iret
xorl
lret
cmp
rcr
pop
popa
mov
sub
mov
and
std
sbb
out
negb
stos
mov
outsb
or
addr16
pop
push
cmpsb
adc
ss
dec
push
mov
sbb
sbb
in
mov
add
cmp
jmp
leave
adcb
xchg
dec
jge
inc
gs
js
sbb
jl
jo
push
ret
xchg
jge
mov
mov
fmulp
loop
ljmp
and
out
push
push
sub
sbb
push
addr16
lds
sbb
sub
repz
cmp
xchg
lods
sbb
fcomps
adc
jg
mov
add
cmp
or
cwtl
pop
pop
int
cmp
ret
inc
ja
enter
cltd
adc
and
insb
add
jge
xor
jae
sub
mov
mov
insl
hlt
jae
ror
lods
ds
mov
notl
inc
mov
and
sub
xor
lds
xchg
mov
inc
mov
lahf
mov
jo
push
mov
sti
cltd
dec
js
fidivrs
repnz
jne
xchg
popa
dec
out
xor
or
push
fistps
mov
mov
push
or
fldl
orb
adc
stc
xor
sbb
dec
sbb
xor
jg
pop
push
push
pop
inc
cmpsb
xchg
jno
jmp
data16
out
in
packsswb
push
jns
lds
out
xor
ret
mov
jo
cltd
pusha
pop
test
pop
les
pop
adc
pop
fsts
sub
mov
push
or
inc
adcb
fucomip
push
sbb
cmp
ljmp
add
pop
adc
mov
loop
out
xchg
sbb
xor
or
scas
adc
repnz
add
mov
test
sub
scas
repz
adc
cmpsb
pop
rol
shll
xchg
lock
shll
lods
jae
sahf
mov
enter
or
dec
std
pushf
jno
push
adc
cmp
hlt
fnstsw
rcrb
test
push
enter
icebp
or
xchg
testb
push
int3
adc
push
int3
dec
lea
jp
cltd
out
push
popf
and
xor
fisubl
in
enter
int
mov
hlt
pop
adc
inc
mov
push
jmp
outsb
push
imul
imul
repz
push
sbb
out
push
sub
sub
out
dec
inc
xor
cld
out
test
push
test
arpl
xor
xor
pop
sti
lret
imul
dec
jg
push
mov
out
push
push
mov
aad
xchg
lret
adc
mov
out
movsl
arpl
inc
fs
push
jno
rcrl
popf
lock
mov
pop
mov
mov
pop
out
xchg
push
xchg
or
fs
icebp
enter
int3
sbb
imul
daa
inc
addr16
cmp
mov
ja
rcl
fldpi
in
xchg
xchg
mov
in
add
es
push
cld
mov
xor
inc
inc
pusha
pop
jb
jecxz
jmp
dec
inc
shl
pop
jno
cmp
cmp
jge
mov
fbstp
in
rorl
in
sbb
mov
sahf
hlt
sub
sahf
push
divl
jle
sti
andl
jno
ja
mov
add
lods
xchg
cld
sbb
test
pusha
ret
rcrb
xchg
fmull
ljmp
mov
jmp
pop
xchg
pop
ja
pop
push
mov
in
ja
aaa
cmpsl
mov
push
shlb
jo
add
adc
sbb
fucomi
add
xlat
hlt
cmpsl
cmp
aam
cmc
rcll
out
roll
and
dec
push
add
cmc
es
or
sbb
push
jge
repz
testl
clc
cmpl
and
cltd
imul
jno
gs
jae
lds
call
xchg
scas
push
rcrl
jmp
sbb
or
add
jns
lret
out
push
add
imul
loope
pop
xchg
loopne
push
out
mov
shrl
jp
imul
mov
jns
outsb
xchg
out
sub
pop
xor
push
mov
push
iret
imul
popa
fldt
push
jb
xchg
jmp
xor
xchg
test
outsl
mov
cmp
dec
xchg
sbbl
mov
lret
pop
mov
xor
inc
inc
push
mov
and
das
add
test
decb
jecxz
jg
push
jo
push
mov
jns
sbb
lret
sbb
sub
sbb
outsl
inc
insl
cmpsb
or
xchg
sub
sub
jne
sub
add
cmp
add
lret
push
iret
and
pop
andb
cmp
cmpsb
adc
sub
shll
loop
xchg
outsb
imul
jnp
dec
pop
dec
ja
ljmp
pop
out
mov
scas
mov
hlt
js
push
adc
inc
xchg
outsb
dec
enter
mov
and
jno
popa
in
and
pop
scas
lret
xchg
outsl
push
iret
lahf
pop
leave
fistpll
ja
mov
mov
push
mov
jns
call
inc
xchg
mov
xchg
scas
in
or
rclb
or
inc
stc
pop
or
or
push
sbb
in
imul
in
and
sbb
ds
imul
push
inc
jns
imul
sbb
movl
insb
and
and
xor
xor
or
push
dec
aaa
leave
mov
aad
mov
mov
rcrb
adc
mov
popf
dec
imul
loopne
or
mov
movsb
lret
add
sub
lods
movsb
add
dec
push
loope
jns
adc
les
stos
shll
scas
in
or
add
cmpsb
mov
fsubrs
sbb
rclb
jbe
leave
mov
mov
add
mov
push
mov
nop
push
push
mov
mov
pop
hlt
mov
ret
jp
dec
subl
dec
mov
nop
dec
std
jae
xchg
sub
movsb
push
lret
add
mov
movsl
pop
xor
ficomps
cli
cmp
insb
fsubs
std
jno
cmp
lahf
cmpsb
test
jp
pusha
jno
sub
mov
mov
das
rcll
icebp
jecxz
out
popf
xchg
cwtl
shl
ret
pop
jmp
add
aaa
jecxz
mov
push
adc
in
incb
cmp
push
clc
and
rolb
ljmp
xor
and
enter
push
ret
xor
jl
mov
dec
sub
gs
cmp
rcll
fld
inc
pop
inc
aaa
aam
in
inc
aam
xchg
push
enter
out
cltd
dec
pop
mov
fldcw
mov
mov
je
and
dec
add
icebp
add
inc
cmp
iret
les
sbb
mov
aaa
leave
lods
push
jb
xchg
push
pop
mov
lds
faddl
sbb
mov
adc
les
jns
jmp
fcoms
clc
in
cmc
sbb
mov
adc
dec
xor
sub
mov
mov
or
jo
incl
or
push
out
push
or
sbb
bound
jg
xor
shrl
fidivrl
sub
std
pop
lret
add
es
les
test
or
jmp
push
test
repz
shrb
sbb
sub
int
or
sarb
jmp
sarb
sub
jnp
jo
stc
testl
jne
iret
adc
ret
inc
aaa
lret
sub
repnz
fwait
rol
jnp
data16
mov
xor
push
jbe
lcall
jmp
ljmp
popf
inc
lret
in
mov
loopne
xor
shlb
jno
daa
ret
insb
pop
jge
cmc
arpl
inc
fnstcw
inc
pushf
dec
xlat
cltd
cmpsb
imul
lcall
mov
mov
or
mulb
cmpsb
sub
sub
in
aad
pop
lcall
pop
testl
mov
xlat
push
xchg
cmp
shrl
or
jecxz
and
andb
or
and
and
jecxz
repnz
xchg
test
shll
repz
fstpt
sahf
faddp
dec
xor
jnp
xchg
test
scas
and
repz
cld
cwtl
dec
jo
add
mov
mov
cli
xchg
sbb
loope
in
fcmove
movsb
loop
out
mov
imul
test
fnstsw
lock
adc
adc
mov
xchg
scas
inc
mov
cld
xor
sub
nop
fcom
gs
jbe
int
inc
add
cmpb
or
jge
sti
pop
xor
push
ficoml
popa
adc
lea
mov
pushf
outsl
ret
push
add
sub
fcmovu
test
inc
mov
scas
add
mov
cmc
test
add
sahf
lds
sbb
popa
je
jge
pop
push
ds
add
pop
outsl
das
mov
hlt
xor
pop
movsb
mov
cs
xor
shll
cmpsb
sub
gs
out
mov
push
fbstp
jl
lods
and
jbe
nop
orl
stos
sub
mov
push
cli
inc
pop
or
push
jg
mov
or
lds
xor
mov
adc
xchg
popa
test
pop
adcl
pusha
jmp
jl
inc
aas
mov
mov
mov
fidivrs
dec
mov
pop
movsb
pushf
sub
cs
test
lcall
clc
push
push
int
nop
stc
dec
sarb
ja
mov
sub
testl
push
stos
or
popa
mov
int
outsl
fstpt
sub
cmpsl
popf
sahf
out
mov
mov
loope
push
mov
out
subw
ss
ret
stos
addb
cmp
pop
pop
inc
add
inc
xchg
pop
jge
mov
aam
cmp
daa
pop
loopne
or
fdivp
pop
popa
ds
jp
pushf
dec
sub
xorl
adc
inc
out
sbb
jae
mov
cmc
jo
fnsave
pop
dec
aas
xlat
imul
fucom
jb
fistps
push
sub
dec
shll
or
inc
enter
jp
xchg
out
std
push
aam
mov
pop
in
mov
aaa
arpl
movsb
jo
insl
fcom
std
mov
sahf
dec
mov
push
mov
ret
sbb
xor
push
jnp
ror
xchg
fwait
xor
rolb
aaa
sub
inc
cli
lcall
cmp
addb
mov
mov
push
cltd
xchg
out
std
dec
sub
stos
push
mov
sahf
push
call
inc
adc
js
lea
sti
or
add
inc
loope
xor
jb
or
test
or
sbb
pop
push
div
cmc
gs
jnp
sbbl
out
pop
cmpsb
das
cmp
call
inc
fildl
jae
cwtl
mov
fwait
aad
popf
lahf
ds
jae
pop
movsb
pop
pop
cmp
sahf
addb
push
sub
mov
in
lcall
cmp
sbb
jno
rcr
push
jmp
dec
pusha
mov
out
push
mov
xor
cmp
test
adc
pop
mov
mov
mov
cmpl
adc
cs
and
roll
push
dec
and
pusha
mov
sub
and
dec
push
pop
xchg
call
mov
push
pop
aad
and
or
stos
jns
nop
neg
shr
inc
mov
inc
push
hlt
insl
sbb
insb
mov
xchg
test
cmp
leave
inc
adc
pop
mov
repz
fwait
sti
add
fidivl
mov
mov
outsb
jg
stos
xchg
ds
xchg
daa
sub
push
xchg
arpl
adc
adc
rclb
dec
bound
mov
fdivs
mov
inc
lock
xorb
orl
mov
cmp
xor
push
xchg
inc
cmp
add
ja
dec
mov
sbb
xor
hlt
movsl
and
xor
dec
and
or
ljmp
jae
repnz
dec
mov
xchg
daa
lret
inc
jo
cmp
mov
addl
pop
mov
mov
lea
dec
test
pop
jle
mov
dec
mov
test
dec
outsb
cli
jne
jg
adc
fcoml
js
push
fsubl
bound
dec
xchg
jge
push
and
adc
lods
or
adc
jmp
es
mov
and
hlt
pop
xor
cltd
andl
sarl
out
push
cmp
je
ret
mov
aaa
movsb
jns
pop
mov
mov
jno
addr16
dec
inc
add
add
lods
or
jecxz
mov
dec
pop
inc
mov
ja
loope
xor
xor
inc
jecxz
xor
ja
nop
pop
or
inc
test
into
out
inc
mov
xor
inc
inc
inc
bound
fists
vcvttpd2dqy
loop
push
leave
stos
dec
mov
inc
es
stos
in
mov
loope
mov
inc
jns
lea
jae
and
lea
pop
insb
dec
in
gs
dec
cwtl
shr
mov
push
pop
add
dec
sub
sub
mov
xlat
insl
mov
movsl
add
and
js
outsb
push
xchg
arpl
jecxz
mov
xchg
fwait
pop
xor
shrb
mov
fwait
xor
fildll
mov
aam
stos
inc
mov
and
sub
rcll
adc
gs
fsubrs
stc
imul
fmulp
ss
sub
daa
mov
jbe
mov
rcll
stc
mov
loop
sub
push
cmpsl
adc
jbe
fmull
je,pt
fiadds
popa
daa
and
movsl
in
mov
dec
out
fisubrs
mov
pop
imul
loop
les
mov
jns
or
jae
outsl
mov
mov
xchg
sub
stos
or
lds
adc
xor
push
out
mov
in
out
out
jae
inc
in
xchg
or
and
into
mov
ss
std
mov
dec
sahf
mov
cmpsb
out
cld
xchg
dec
test
lcall
mov
dec
jns
and
dec
inc
jae
stos
mov
mov
mov
inc
addl
pop
xchg
mov
inc
in
fdivrp
nop
mov
push
push
dec
stos
push
fisttpll
cmp
cmp
mov
fstl
pop
pop
mov
sti
dec
movsb
inc
mov
sub
sbb
in
cmp
pushl
jmp
dec
dec
xchg
cmp
jle
push
adc
outsl
push
stos
and
push
xchg
mov
ja
sbb
xor
pop
push
loop
adc
push
jne
cltd
leave
addr16
jp
xor
xor
pop
mov
hlt
clc
mov
lea
push
add
in
fidivrl
mov
mov
adc
or
addb
lods
daa
adcl
jmp
outsb
sti
fstpl
aam
mov
dec
adc
lahf
dec
or
push
fadds
clc
sahf
sub
cs
jnp
scas
adc
push
jmp
fwait
xchg
push
mov
loopne
test
sub
lds
aaa
test
pop
leave
outsb
dec
lods
test
and
or
jbe
lcall
fimull
sub
test
ds
daa
xchg
sub
lret
adc
or
mov
or
rep
jl
or
adc
jl
mov
push
mov
imul
push
fdivl
ret
lret
sub
pop
std
ja
pop
jbe
cmp
pop
pop
jae
clc
adc
cmc
dec
rolb
stc
add
cmp
fs
add
insl
push
xchg
cmp
jl
xchg
adc
shll
lcall
cmpl
or
xchg
or
and
sbb
call
mov
add
push
inc
dec
mov
jb
pop
je
inc
out
jbe
jecxz
mov
stos
loopne
cmpsb
loopne
jnp
cmp
imul
pop
pop
ret
dec
or
ss
inc
in
sbb
aas
and
call
mov
roll
int3
adcl
push
jmp
outsl
or
out
inc
and
rorb
jg
mov
and
mov
lret
ja
out
add
std
pop
sub
outsb
jbe
xor
test
push
mov
fdivrl
fidivrl
aad
add
aas
add
stc
mov
adc
sbb
daa
xchg
lahf
push
repnz
xchg
outsl
add
lahf
ror
ficompl
stos
push
and
pop
xchg
lods
jno
rorb
xor
cmc
cmp
popf
jp
push
mov
sub
jle
sti
cmc
std
pop
movsl
loopne
dec
repz
addr16
movl
daa
lock
mov
cmp
jo
sbb
addl
jno
call
sbb
xor
lahf
lock
mov
outsl
popf
mov
sbb
sbb
sti
pop
xor
orl
xchg
cmpsl
mov
adc
cmp
lods
inc
push
inc
roll
jo
pop
ja
addb
into
mov
stos
add
cwtl
rep
cld
in
jo
mov
js
adc
cmpsl
dec
mov
lds
xor
lret
sbb
stos
add
push
loop
add
fldpi
lahf
out
repz
add
push
es
gs
adc
fs
loope
mov
inc
jmp
or
outsl
adc
jbe
fsubrp
scas
test
loopne
movsl
adc
jno
push
fstl
adc
push
fbld
divl
ret
pop
inc
or
push
and
lret
scas
sub
pop
push
iret
dec
cmp
addr16
sahf
pop
inc
mov
adc
push
xchg
sets
jns
cmp
add
fcoml
xor
in
mov
lahf
adc
ljmp
cs
rol
gs
pop
mov
xchg
mov
cld
cltd
push
movsb
lahf
cmpsl
mov
mov
mov
jo
push
cmp
add
pop
setg
and
repz
fnstcw
aas
out
dec
out
xor
xchg
jg
pushf
push
cld
fidivrs
mov
xor
lds
int3
push
push
jbe
jo
xchg
sarl
dec
cmpsl
sbb
out
xchg
dec
xchg
adc
push
sti
dec
and
add
pop
movl
ror
cmp
aaa
or
mov
out
ror
sbb
xor
cmpsl
jbe
and
xchg
mov
ja
push
lods
rcr
mov
mov
cmpsl
fstps
add
pop
mov
adc
ret
call
pop
nop
stos
into
out
dec
lods
adc
add
dec
dec
out
pop
enter
and
cmpsl
enter
mov
in
pop
add
cmpb
insl
out
mov
mov
in
mov
aaa
ljmp
iret
sahf
leave
hlt
xor
arpl
repnz
outsl
call
jns
pop
lret
pop
inc
mov
add
push
jno
or
iret
push
lcall
mov
lock
add
in
xchg
call
adcb
lds
sub
and
in
sbbl
pop
idivb
ficompl
xchg
stos
push
and
jo
or
call
inc
or
or
sti
lock
push
dec
sbb
xchg
pop
sub
push
pop
in
or
mov
cmp
mov
or
dec
adc
in
arpl
adc
push
sarb
fistl
dec
bnd
jg
bound
mov
aad
or
and
scas
clc
mov
out
dec
idiv
adc
push
pop
jo
mov
push
gs
daa
test
add
data16
and
not
and
push
or
ja
enter
scas
xlat
xchg
ljmp
insl
mov
add
js,pt
jl
out
je
mov
add
sbb
outsl
popf
jno
mov
mov
push
or
insl
mov
insb
in
xchg
ss
aad
js
xchg
pushf
aad
or
ljmp
push
lcall
xor
rorl
or
jnp
bswap
adc
arpl
movsl
push
bound
repz
or
mov
adcl
rcrl
rorl
pop
or
sub
pop
and
mov
out
aad
push
shll
shll
mov
mov
into
add
stc
dec
push
dec
inc
setg
lea
cmp
fadd
add
add
mov
fwait
cmpsl
lods
imul
pop
cmp
or
and
dec
pop
pop
sub
pop
xor
or
bound
add
enter
shlb
pop
arpl
mov
push
shlb
std
lcall
sbb
roll
inc
push
inc
dec
pop
jb
jno
and
inc
stos
insb
mov
dec
rcll
inc
repnz
lock
loopne
pop
rorl
ja
push
dec
dec
test
pop
inc
ja
rcrb
cmp
dec
jne
mov
ds
and
sarl
pop
repz
xlat
iret
inc
es
jecxz
pop
adc
mov
testl
orb
or
jb
mov
adc
sbb
and
jl
lcall
not
mov
and
add
aas
int
or
rcrl
add
cmp
out
lock
jb
cmp
dec
pop
test
ret
mov
xchg
mov
jno
jge
dec
scas
add
inc
stos
inc
sahf
repz
mov
andb
out
loopne
dec
int
pop
sub
mov
jns
jne
out
mov
mov
inc
popf
cmpsl
push
or
nop
psraw
mov
and
pop
stc
mov
stos
jmp
roll
imul
imul
pop
aam
push
mov
fmull
pop
adc
not
mov
outsl
add
xchg
mov
jb
ds
jle
test
rcr
cmp
insb
mov
add
mov
addr16
dec
ja
sub
insl
out
aad
out
inc
mov
fisubrl
aaa
sub
dec
push
push
inc
in
xor
shrl
pop
aam
jo
shrb
xchg
scas
data16
sbb
lods
and
shrl
pop
cli
xor
mov
jg
pop
pop
or
fisubrl
iret
dec
inc
xor
sbbl
out
popa
sbb
ret
rclb
iret
insl
jne
dec
into
sbb
mov
sbb
repnz
mov
cltd
or
and
pop
out
jg
adc
fldt
xchg
ret
cltd
test
push
add
test
in
test
sarb
scas
sahf
clc
xor
scas
aad
lods
mov
mov
dec
dec
test
and
ljmp
ss
cmp
popa
scas
cmpsb
lret
aaa
imul
or
push
stos
xlat
and
pop
xor
mov
aas
xchg
ljmp
dec
sbb
and
lods
lea
dec
pop
push
insb
mov
or
sub
out
sbb
add
into
and
mov
mov
lods
add
test
sbb
xor
lock
sbb
xchg
aad
lea
iret
in
jbe
jg
in
cmc
sbb
shrb
cmp
data16
flds
mov
xchg
insl
add
lret
cli
out
dec
mov
jge
add
inc
mov
mull
bound
or
xchg
cmp
nop
enter
scas
mov
dec
and
das
or
jmp
pop
xor
inc
jl
fcom
pop
push
dec
sbb
insb
sbb
and
cmp
mov
sub
jmp
push
mov
inc
push
test
rolb
icebp
in
dec
fwait
jbe
cwtl
push
lahf
xchg
jnp
ds
test
cmp
loop
push
add
pop
sbb
inc
mov
jmp
shll
push
mov
jae
stos
pop
xor
call
mov
pop
dec
cmc
jecxz
jae
mov
pushf
pop
imul
inc
push
scas
movsb
mov
xchg
xor
sub
mov
pop
fidivrs
adc
jne
add
mov
jmp
cmpsl
sarl
popw
movsb
inc
sub
push
data16
sbb
and
mov
pop
clc
inc
mov
mov
std
out
jl
pushf
in
jns
mov
clc
add
add
push
sub
push
add
insb
popf
fcoms
imul
inc
xor
adc
cs
cmp
add
inc
fld
and
sub
dec
imul
dec
ljmp
fcoml
xor
cli
mov
mov
outsb
push
rcrb
xorb
lods
push
leave
mov
scas
and
popf
or
loop
xchg
pushf
mov
ja
pop
lret
or
nop
test
add
std
jl
sub
and
mov
scas
sbb
out
mov
sub
jmp
push
je
aas
sarl
push
insb
icebp
push
lock
and
ljmp
decb
out
sub
and
jl
add
in
cmpsb
push
iret
and
hlt
xchg
into
mov
xor
sub
mov
out
fmul
arpl
dec
imul
mov
mov
notl
pop
xlat
insb
incl
movsl
test
sub
enter
mov
xchg
fistpll
sbb
cwtl
test
push
popa
or
lahf
andb
int3
and
dec
aas
xor
jne
in
sbb
sbb
mov
ret
cmp
imul
push
nop
fnstsw
mov
inc
lods
cli
icebp
pop
shll
insl
mov
out
mov
cmp
cmpsl
sbb
lahf
pop
pop
pop
jns
pushf
pop
outsl
scas
movsb
popf
aam
jo
punpckhdq
sbb
jecxz
and
dec
mov
push
addl
add
dec
xor
scas
daa
xlat
or
sub
jp
das
aas
adc
jmp
lret
rorl
fisttpll
adc
insb
enter
repnz
cmp
call
js
int3
or
in
or
imul
inc
mov
mov
ret
loopne
add
adc
mov
in
push
push
loop
push
testl
inc
xor
sbb
pop
mov
xchg
adc
lock
das
push
dec
icebp
inc
mov
adc
sub
movsb
add
push
pop
xchg
sti
adc
mov
stos
cmp
xchg
sbb
cmpsl
cwtl
xor
int
or
or
ljmp
dec
cmc
test
pop
neg
push
test
mov
sbb
add
jae
cmc
dec
fimull
fildl
lret
movsb
lods
dec
inc
pushf
jmp
imul
inc
sbb
fisubrs
sub
dec
in
push
movsb
repnz
sti
push
xchg
add
in
rolb
fwait
jmp
frstor
inc
dec
cmp
push
sbb
sbb
jl
pop
sub
xor
and
cmp
cmp
xor
xchg
mov
test
pop
sbbb
xchg
js
shll
push
add
out
or
lret
lahf
mov
xchg
pop
movsb
dec
ret
dec
pop
fmull
jne
insb
xor
mov
lret
cli
push
addr16
mov
inc
jmp
call
cmp
jecxz
in
push
mov
sti
lret
pop
inc
decb
pop
sub
jae
out
aam
mov
xorl
aad
pop
sub
adcl
mov
rorb
std
xchg
rclb
mov
sbb
mov
ret
dec
inc
out
stc
add
mov
aam
jo
push
or
mov
jp
out
pushf
xchg
push
les
or
shlb
aam
and
sbb
fsts
sbb
pop
leave
xchg
sbb
rorb
adc
orl
test
cltd
mov
sub
aam
xorb
rcl
mov
sbb
subl
mov
inc
shr
hlt
xor
push
out
out
pop
repnz
ret
es
pop
pop
mov
subl
outsb
cmp
and
sbb
je
and
sbb
cmc
pop
and
adc
cmp
popf
lret
inc
sub
stos
js
movsb
push
and
xor
ret
ret
popl
jecxz
sbb
rclb
lods
jmp
pop
mov
and
sub
push
mov
xor
sbb
fucomip
jg
pop
setb
add
and
sbbb
mov
mov
xchg
pop
pop
add
scas
cmp
cmp
jl
icebp
aad
and
xor
div
push
fistpl
mov
xchg
hlt
add
push
iret
mov
rcll
jb
lea
into
lret
add
push
negl
xor
fldenv
xor
repnz
mov
mov
cmpb
iret
insl
nop
add
popa
cmp
fdivrs
cmp
testl
mov
mov
cmp
xchg
inc
ror
lret
stos
hlt
testb
in
lcall
xchg
mov
or
fisubl
rolb
and
fcomip
popf
in
lcall
arpl
std
cmc
jo
aas
lahf
mov
je
adc
pop
adc
xchg
and
rcr
xchg
scas
out
data16
addr16
jae
outsl
and
inc
nop
scas
xchg
hlt
add
dec
pop
shlb
outsb
insl
js
and
mov
mov
adc
pop
xchg
lahf
adc
mov
sbb
cmp
xchg
scas
outsl
jge
ret
movb
fldl
pop
fsubs
xor
test
push
outsl
lcall
repnz
lahf
add
int3
mov
fsubrl
cltd
ficompl
mov
jbe
mov
aam
or
cmpsl
cmc
cmpb
mov
or
push
inc
stos
xchg
mov
adcl
mov
ljmp
daa
orl
cmp
add
add
mov
cwtl
ljmp
in
cltd
sub
subb
inc
dec
cmp
sarl
mov
sub
outsl
mov
xchg
and
mov
mov
push
push
cmp
js
dec
stos
add
std
fwait
addr16
dec
pop
orb
stc
test
sbb
shlb
mov
jge
push
out
negl
mov
test
mov
int
jne
cltd
mov
mov
popf
mov
loope
stos
push
es
and
jmp
stos
jae
and
fldenv
cmp
jge
mov
ds
xchg
inc
insb
ficompl
push
ret
cmc
daa
mov
outsb
jecxz
ret
ss
mov
ret
or
loopne,pn
repnz
fmul
fdivrs
add
scas
fsubrl
add
cmpsl
sti
hlt
xlat
sti
addr16
aam
push
imul
enter
mov
ds
pop
xchg
mov
add
ret
inc
call
push
sub
sahf
fildll
stos
jns
clc
jge
cmp
es
repz
gs
push
push
in
mov
fcmovnu
inc
xor
movsb
arpl
mov
jge
dec
lds
add
insl
pop
fs
pop
xor
mov
cmp
int
daa
test
jg
popl
and
imul
pusha
insb
stos
jb
sub
and
aas
lcall
insb
ss
jno
punpckhbw
mov
out
push
ja
insl
adc
aad
cmpsb
cmc
inc
sub
das
dec
popf
ds
sub
or
pushf
dec
inc
out
das
and
js
dec
push
test
data16
inc
jo
mov
int
aaa
stos
lcall
mov
xchg
adc
ficoms
and
iret
std
and
inc
sbb
cmp
mov
adc
imul
jne
loopne
sbb
ret
movsl
out
ja
or
stos
pop
popf
mov
mov
pop
cmpsb
jnp
test
insb
sub
jo
pop
push
inc
inc
loopne
and
pop
aam
sub
test
rorl
in
dec
ret
adc
cs
xor
or
mov
fcomi
xor
mov
mov
mov
lcall
das
push
sbbb
mov
inc
add
aad
xchg
mov
jae
cld
adc
popf
pop
or
outsb
adc
xor
mov
cld
push
mov
or
sbb
mov
mov
mov
std
into
mov
or
enter
push
lahf
jae
add
stos
push
push
xor
imul
jnp
xor
mov
fldt
cmp
cli
mov
and
sahf
test
xchg
cmpsl
jae
insb
in
jecxz
inc
xor
pop
sub
sbb
dec
or
mov
loope
js
enter
andb
and
dec
out
insl
xchg
mov
mov
cmp
sbb
inc
sbb
xor
sti
xchg
scas
iret
mov
popa
repz
pushf
mov
roll
adc
arpl
mov
mov
out
jno
or
jp
call
dec
ss
lcall
scas
push
popf
adc
cmc
mov
call
mov
clc
mov
push
fistps
sahf
icebp
push
scas
fstpt
fisubl
dec
adc
insb
push
inc
mov
add
or
push
and
data16
fisubs
xor
and
pop
jg
sub
ret
bound
sub
test
mov
std
lds
lret
dec
sub
dec
inc
pop
rcrl
inc
jp
das
loop
inc
cli
addr16
daa
jbe
sub
cmp
inc
mov
push
lock
pop
mov
pcmpeqd
jbe
dec
rolb
ret
cmp
adc
cmpsb
loopne
dec
xor
mov
push
es
je
mov
cmp
dec
shll
pop
jns
push
jl
ja
push
cmp
dec
xchg
mov
sbb
ja
dec
inc
sub
dec
js
ret
sarl
xor
xchg
leave
jg
imul
sti
dec
nop
pop
dec
nop
orl
es
dec
popf
xchg
push
push
cwtl
and
fs
adc
in
xor
pop
jmp
lea
out
movsl
stos
sub
mov
mov
and
rcll
jb
mov
lret
sub
inc
inc
inc
push
pop
inc
iretw
and
inc
push
ljmp
add
lods
adc
sbb
fcmovu
mov
jae
mov
mov
push
pop
pop
xchg
and
lahf
subb
lods
sbb
add
and
xchg
push
sti
adc
push
push
jns
mov
push
push
mov
push
sbb
repz
lahf
dec
adc
popa
or
rcrb
sub
mov
pop
add
sbb
mov
sub
dec
test
rcll
dec
ror
pop
push
gs
in
fwait
cmpsl
mov
cwtl
sbb
mov
cmp
dec
lret
mov
xorl
loopne
mov
push
push
in
xor
or
mov
ds
and
imul
shrb
sbbb
inc
push
movsb
sahf
test
dec
out
mov
pop
sub
daa
fucomp
xchg
ja
lret
rcrl
idiv
cmp
divl
clc
inc
mov
mov
sub
scas
outsl
ret
aam
mov
jp
xor
int3
and
js
mov
test
mov
pop
and
dec
enter
sub
aaa
xor
pop
outsl
mov
pop
inc
shlb
jp
call
lock
insb
push
in
cli
push
lods
mov
repnz
addr16
pop
int3
add
cld
jle
cwtl
movl
jns
das
dec
addr16
pop
sbb
inc
pop
mov
fdivrs
test
or
push
mov
xchg
xchg
test
pop
mov
xor
inc
stos
sub
xor
shll
mov
aaa
into
in
push
inc
xlat
mov
fmull
xor
mov
outsb
cmp
pop
fsubrl
roll
repnz
inc
insl
pushf
push
mov
and
mov
or
outsl
shlb
jae
xlat
sub
imul
imul
scas
inc
pushf
cmp
test
push
sub
push
ja
fwait
jmp
pop
test
mov
pushf
mov
out
pop
sahf
je
xlat
sbb
xlat
mov
jno
lds
std
lock
or
pop
xchg
adc
std
mov
popa
outsl
sbb
pop
stc
scas
stos
sbb
sub
sbb
les
into
out
sbb
cmp
dec
insl
movsl
ds
fnstcw
add
popf
push
pop
popf
lds
sahf
push
sub
notl
mov
pusha
xlat
shlb
cwtl
inc
leave
adc
xchg
adc
sub
sbb
lds
dec
enter
loope
lret
mov
out
sub
mov
rcl
in
stos
ja
mov
ss
sbb
js
push
cmpsb
test
call
adcb
or
stos
adc
mov
nop
pop
mov
sbb
out
mov
jnp
sti
test
sarb
cmp
mov
inc
add
mov
clc
xchg
fisttps
and
mov
or
fidivs
out
out
inc
imul
inc
mov
sbb
dec
pop
in
xchg
les
les
adc
and
mov
cmp
jge
into
jnp
mov
pusha
rcrl
pop
repz
aam
das
icebp
fs
cwtl
mov
sbb
add
xor
xor
dec
add
out
sbbb
cltd
xchg
pop
mov
cmp
hlt
adc
loopne
and
or
data16
mov
popa
inc
pushf
and
fisubl
loop
mov
add
bound
jno
cld
ds
add
fwait
inc
sub
jg
roll
je
cmp
outsl
push
add
xchg
cwtl
push
out
aad
loopne
inc
sub
jmp
xchg
cmpsl
cli
mov
sbb
jns
cld
out
negl
sub
xchg
in
xchg
inc
add
push
out
add
ss
xor
std
pop
in
or
lock
ljmp
xchg
xor
jbe
fidivs
imul
je
xchg
or
jbe
sub
rcrl
and
scas
mov
push
jo
xchg
pop
push
xor
aas
jo
cmpsb
inc
add
lret
inc
sarb
fldt
xor
filds
ds
mov
adc
sbb
int3
push
mov
test
aam
and
jge
sbb
outsb
loopne
sbb
jl
and
aas
jb
cltd
clc
call
add
add
mov
movb
in
or
sbb
mov
popf
lock
cltd
fstpt
mov
js
or
popl
and
rorb
aaa
lods
in
push
dec
fidivs
push
fs
shll
scas
cmp
mov
ja
rcrb
fdivr
push
adc
in
test
push
mov
cmp
xchg
addb
jl
push
jb
sbbl
mov
adc
mov
enter
pop
mov
sbb
sub
mov
cmp
inc
lods
movsb
gs
repz
xchg
jmp
cmc
insl
pop
clc
push
pop
test
jno
jns
in
xor
clc
cld
push
inc
adc
in
push
xchg
je
and
pop
sahf
bound
leave
lret
cmp
movsb
push
repnz
xor
incl
or
sbb
ja
into
cli
jb
xor
out
hlt
pop
push
and
sub
jmp
cmpsl
or
sub
jmp
cmpsb
sbb
jne
lcall
sahf
mov
aad
adc
stos
add
in
ljmp
jne
mov
cmp
cmp
inc
dec
out
testb
ljmp
sbb
stos
sbb
jns
rcrb
pop
fsubrl
cmpb
jl
cmpsl
mov
cmpsb
jg
nop
xor
loopne
inc
loope
out
sbb
add
push
xorl
sbb
out
repz
xor
dec
push
out
jl
daa
xor
fisubl
out
mov
push
push
and
inc
pop
inc
dec
mov
cmp
shrl
leave
frstor
xor
xor
jns
push
ret
imul
insl
ret
sbb
cmp
add
mov
out
jae
cmpsl
or
sub
mov
repz
or
and
add
mov
jo
mov
cmp
add
xor
cmp
mov
push
dec
add
cmc
aas
sbb
and
rorl
jae
or
std
fs
inc
xor
cli
stos
seto
push
cmp
pop
pushf
jle
pop
and
popf
push
fldl
clc
or
into
decl
mov
out
iret
ret
jo
dec
shrb
stos
jge
loope
dec
rcll
or
shr
adc
xchg
xchg
xchg
ret
aaa
test
push
and
jne
rolb
movsl
pop
dec
out
fistl
pop
filds
rorb
jb
out
jle
adc
leave
lods
lret
incb
mov
ret
push
inc
jb
repnz
mov
aad
push
test
mov
lret
inc
loopne
fisubl
movsb
sbb
inc
pop
and
ficompl
fnstcw
jp
push
inc
in
jno
pop
pop
xchg
incl
xchg
addr16
and
icebp
jnp
xor
enter
hlt
mov
push
scas
aas
or
movsb
pop
cmpsl
mov
hlt
mov
cmp
push
push
jp
xchg
js
jb
pop
jae
nop
idiv
out
mov
orb
call
pop
rcll
add
pop
lahf
into
js
pop
mov
int3
dec
push
stos
push
xchg
into
and
dec
lock
repnz
mov
in
sub
adc
add
leave
aam
push
rol
sbb
and
in
jmp
test
es
incb
sbb
dec
sbb
test
xchg
fsubrs
ljmp
test
xor
out
xchg
dec
fdivrl
inc
leave
push
push
xchg
call
lcall
jbe
cmp
sub
inc
aaa
bound
les
mov
test
loop
mov
mov
mov
adc
in
inc
repnz
mov
in
or
aaa
int
loop
aas
add
jg
cs
out
dec
roll
sub
mov
mov
std
scas
pop
add
adc
lock
dec
fs
cmpsl
cltd
fimuls
push
and
and
xor
cmpsb
inc
mov
movsb
mov
lods
testl
mov
mov
decb
lock
sahf
loop
in
cmc
in
loop
inc
sub
rol
inc
sbb
adc
pop
dec
xchg
xlat
sub
or
and
dec
mov
jg
mov
call
fiaddl
gs
ja
inc
pop
mov
jp
aad
jecxz
imul
call
es
leave
pop
push
adc
push
xchg
out
sub
jecxz
nop
push
fwait
arpl
inc
sbb
fnsave
es
mov
test
mov
jge
lret
push
pop
fcmovnbe
and
adc
out
cltd
pushf
ret
leave
insl
adc
or
repz
mov
and
xor
fwait
mov
mov
mov
in
dec
rol
push
mov
pop
sahf
xor
data16
mov
and
pop
mov
loop
push
mov
sbb
mov
inc
popa
mov
sbb
insl
mov
aaa
push
aam
add
sahf
div
xchg
pop
pop
xor
stos
xor
dec
ljmp
call
add
and
and
sub
mov
scas
daa
ljmp
imul
jle
xor
add
or
dec
insb
psraw
andb
lret
dec
xchg
mov
add
sar
fimuls
call
pop
xor
inc
mov
mov
cld
inc
sbb
out
add
sub
mov
and
mov
mov
dec
jp
xchg
or
dec
inc
mov
mov
jl
push
pop
fdiv
mov
stos
add
push
lods
loop
cli
aaa
pop
testb
clc
sarl
push
enter
stos
jl
mov
call
push
push
mov
adc
lods
cmpl
rcll
lods
stc
pop
sbb
ljmp
pushf
nop
repz
sub
mov
mov
icebp
xlat
push
mov
movsl
shl
jne
test
fcmove
xchg
loopne
mov
mov
push
stc
cmp
mov
ljmp
adc
dec
mov
lods
inc
leave
cs
mov
mov
mov
dec
clc
stos
xchg
imul
push
sbb
outsl
cltd
xor
std
cli
cmp
andl
sbb
and
add
mov
xchg
jnp
push
mov
loop
or
sub
pop
adc
lock
inc
pop
shrl
lds
call
mov
pop
rolb
xlat
gs
ss
movsb
jne
jp
add
dec
test
push
test
adc
repz
out
jle
jns
scas
dec
aam
pop
or
cmc
repnz
xchg
das
fdivl
cmp
js
imul
pop
test
mov
loopne
repnz
aas
out
js
pop
adc
pusha
dec
inc
loopne
cmp
xlat
and
jg
mov
popf
sbb
sub
add
aas
add
andb
or
shrw
testb
je
mov
sarl
jns
mov
cs
in
repnz
lahf
call
jecxz
test
dec
push
xor
xor
popf
xor
lods
and
and
ret
fisubrl
insl
mov
sbb
or
call
inc
cmp
mov
test
frstor
sbb
mov
xchg
adc
adc
enter
push
imul
dec
and
push
jbe
fwait
repnz
stos
and
iret
andb
fs
jge
or
xchg
sbb
mov
and
sbb
lahf
outsb
push
repz
mov
out
adc
pop
adc
pop
mov
fdivl
adc
mov
test
mov
mov
insb
lods
inc
cs
push
cld
mov
dec
leave
xor
and
mov
loope
out
sti
sub
icebp
fs
nop
popa
push
push
and
xchg
scas
pop
daa
xchg
jns
subl
cltd
jecxz
push
fbstp
xchg
push
or
mov
pop
mov
mov
out
push
sti
lea
mov
test
push
dec
mov
inc
lret
in
or
add
xchg
inc
dec
dec
test
cmp
arpl
and
lea
shrb
sbb
push
sub
push
push
mov
out
inc
jge
fwait
fs
and
loope
mov
inc
mov
les
scas
jnp
push
xchg
xchg
inc
out
fsubrs
cwtl
xchg
out
sub
imul
mov
fst
jge
mov
scas
xchg
fs
test
and
adc
xchg
cmp
test
jmp
cwtl
into
inc
sub
push
dec
push
xchg
sub
or
test
lods
jle
and
mull
mov
fwait
mov
std
fidivs
ljmp
jmp
jno
sub
shl
adc
aam
push
ret
pushf
pop
daa
iret
xor
fsubl
sbb
mov
dec
pop
jle
push
fst
push
jnp
lock
or
push
jecxz
mov
lods
pop
stos
jnp
push
fisttpl
lcall
dec
push
mov
cmp
cld
sbb
jmp
pop
and
sub
arpl
mov
lds
cwtl
xor
mull
rolb
lods
xor
bound
jg
popf
fildl
lods
popa
pop
and
ret
repz
push
cmp
scas
or
out
sub
aad
mov
lahf
sti
lea
out
dec
xchg
lea
inc
xlat
sbb
sbb
aaa
sub
fcmovnu
push
adc
xor
ss
sbb
movsl
in
into
jmp
je
xchg
addr16
jl
xor
push
push
mov
xor
bound
inc
pop
lcall
int
sub
enter
push
les
cmpsl
cltd
sahf
int
cmp
fistpl
lcall
jne
ja
out
xor
scas
pop
outsb
aam
sti
lods
iret
mov
jns
cmp
and
lcall
int3
xlat
shrl
bound
pop
scas
cmp
add
mov
out
out
popa
push
je
into
decl
mov
inc
or
js
mov
std
xor
dec
repnz
fidivs
cmp
adc
aaa
lret
lods
pop
out
pop
orl
adc
push
movsl
pop
dec
cli
int
ja
js
jnp
movsl
adcl
mov
add
xor
bound
es
adc
fdivp
jmp
push
sub
or
mov
and
adc
es
dec
mov
nopl
jge
dec
icebp
push
sbb
loopne
jae
pop
xor
push
call
xor
enter
mov
sbbl
testl
sub
cmp
xor
clc
hlt
adc
xor
aaa
in
sub
enter
or
fstpl
push
jo
inc
inc
or
mov
push
dec
xlat
sbb
push
jle
xchg
movsl
sub
xchg
pop
mov
test
pop
ret
mov
adc
or
mov
icebp
dec
sbb
stc
mov
lods
ret
loopne
dec
and
rorl
fcoml
mov
jp
and
pushf
sbb
dec
cmp
mov
sbb
push
mov
lds
inc
cli
xchg
push
push
fbstp
out
fimuls
sbb
outsb
or
pushf
ja
adc
adc
es
test
sbb
xchg
push
pop
lock
sub
lahf
sbb
jne
xchg
add
movb
jne
lods
imul
lret
shll
fmuls
movsl
push
cltd
andb
push
sub
xchg
push
fwait
xchg
aam
inc
sti
fcoml
xor
gs
pop
int3
clc
adc
xchg
enter
sbbb
aaa
and
xchg
xchg
pop
stos
test
mov
pop
aaa
sub
rclb
or
add
dec
es
filds
xorb
mov
mov
call
jo
mov
ja
inc
hlt
rol
add
sti
pop
pop
dec
or
fwait
in
shll
dec
loope
loop
jl
mov
lcall
xchg
ret
lahf
ret
push
pop
cmp
aas
dec
xchg
imul
je
mov
xor
pop
dec
jb
add
push
push
orl
push
ja
cmp
mov
in
push
lods
iret
neg
nop
aam
pusha
outsb
jle
cltd
xor
dec
movb
cmp
xchg
fs
mov
jae
xchg
inc
mov
mov
add
roll
jae
sub
adc
xor
xorl
dec
mov
fwait
mov
mov
push
add
rol
sub
push
xor
adc
adc
xchg
mov
in
inc
dec
xlat
jns
mov
addr16
cmp
pop
movd
mov
mov
push
pop
and
mov
nop
stos
sbb
adc
lea
add
fbstp
fdivp
bound
inc
push
inc
sub
jb
jo
inc
mov
jbe
in
add
jns
sbb
popf
inc
add
rcrl
mov
scas
shlb
in
lea
push
add
jno
jo
or
aad
jmp
pop
inc
popa
fadds
lock
shl
mov
xchg
or
lcall
add
pop
xchg
mov
nop
idiv
lock
mov
push
jb
lret
add
dec
outsb
mov
rcrb
push
xchg
mov
ret
jbe
push
outsb
push
xlat
sub
push
andl
rclb
lret
push
fwait
push
arpl
jo
pop
loopne
mov
es
cwtl
and
insl
mov
mov
rclb
cwtl
cmp
jmp
data16
mov
push
and
icebp
addl
sbb
sub
out
push
leave
mov
pop
mov
or
loopne
mov
pop
push
cmp
aad
pop
mov
or
jae
sub
pop
inc
dec
and
orb
negb
loope
mov
push
ljmp
inc
fimuls
dec
jp
pop
mov
or
add
xor
mov
fidivrs
mov
pop
xor
cvtps2pd
jg
pop
sub
in
pushf
xlat
cli
rcrl
scas
mov
or
loope
xor
inc
xchg
int3
flds
inc
cmp
mov
pop
inc
jae
xchg
jp
mov
jne
dec
push
or
mov
xchg
in
fistl
inc
push
push
roll
jns
add
jl
xor
sete
div
or
out
testb
and
mov
dec
mov
ljmp
jae
mov
ss
mov
rorb
cmp
bound
addr16
nop
and
mov
stos
dec
jmp
movsb
mov
data16
or
adcl
sbb
fldenv
rcr
cmp
aas
xor
sbb
subl
rcrb
xchg
push
nop
or
scas
pop
ret
fstl
mov
push
in
test
mov
jnp
or
adc
push
fidivl
and
rcrb
lock
sbb
shrb
mov
pop
xor
pop
js
and
imul
das
sub
cmp
sti
mov
mov
jno
pop
loopne
mov
dec
test
jmp
pop
cmp
jbe
pop
hlt
clc
lret
xor
inc
aas
pusha
rcrl
xlat
push
push
and
jno
sub
xor
std
jl
lret
lods
mov
jecxz
rolb
push
sbb
sub
fisttps
ljmp
rol
sti
cs
arpl
in
xchg
rorb
int3
out
stc
jae
mov
inc
jge
testb
or
sub
xchg
fdivs
sub
gs
dec
push
cmp
xor
xor
jno
jo
mov
pop
mov
aaa
push
jno
loop
add
clc
lods
fildl
int3
pop
xchg
jne
xor
dec
ret
out
mov
rorl
sahf
mov
cltd
mov
in
mov
bound
ret
cmp
into
adc
or
fidivrl
into
inc
xchg
xchg
mov
lods
adcl
fsubrs
shr
ret
pop
dec
lods
into
inc
mov
pop
repz
divl
in
adc
and
das
dec
pushf
sub
out
add
or
xchg
pop
jb
pop
jecxz
cli
imul
sub
test
in
mov
mov
mov
jo
xchg
shrl
push
inc
xor
push
fs
arpl
xor
xchg
jp
ds
add
dec
lcall
jle
rclb
jge
imul
rcll
stos
popa
pop
ljmp
push
hlt
data16
loop
cli
mov
in
cmp
pop
dec
aas
shl
mov
cs
dec
xor
dec
or
mov
mov
adc
data16
call
xor
cs
and
out
push
mov
jae
int
ds
adc
pop
test
push
outsl
add
push
pushf
and
in
pusha
sbb
fistpl
dec
in
mov
xchg
cld
movsl
xchg
fs
popf
shlw
cmp
xor
lods
lods
popa
or
aaa
cmp
insl
movsl
pop
cmp
sbb
jne
push
sub
icebp
sbb
sahf
mov
test
test
jmp
fadd
fcmove
mov
call
mov
imul
mov
jp
xchg
mov
xchg
js
or
jae
fisttpll
jae
mov
lret
ret
aas
push
rorb
ret
adc
dec
add
js
and
push
inc
insl
xchg
dec
mov
stc
mov
mov
and
jno
jbe
xchg
in
lret
lahf
push
cmp
iret
out
insb
lock
adc
jmp
sbb
and
sub
cmpsb
jns
mov
outsl
pop
push
jo
ret
imul
aam
jns
or
f2xm1
or
cmpsb
pushf
shll
inc
out
and
push
adc
into
sub
stc
testl
jne
iret
in
mov
add
addr16
shrl
xor
mov
inc
adc
mov
pusha
cmp
inc
or
adc
mov
call
mov
out
sub
test
and
or
ja
sub
mov
sub
cmp
and
cmp
pop
push
fmul
xlat
and
and
cmpsl
or
cwtl
cs
mov
and
push
sar
add
pop
and
adc
push
jge
in
xchg
xor
mov
mov
mov
xor
xchg
jl
cmpsb
pop
cli
call
adc
sahf
and
pop
jle
push
cmpsb
pushl
cli
mov
decl
aad
adc
jne
out
jb
cmp
adc
dec
inc
inc
jne
xchg
pop
loope
mov
fwait
andb
mov
jns
mov
sbb
push
insl
inc
xlat
insb
pop
mov
xchg
test
and
or
sub
out
jb
or
pushf
or
mov
inc
pushf
and
ljmp
mov
into
or
shrl
push
in
repz
pop
mov
sahf
mov
and
mov
ret
mov
hlt
inc
addr16
sbb
mov
xchg
out
cld
sbb
and
cltd
test
jnp
bound
cmpsl
mov
inc
movsb
ss
or
ds
adc
dec
or
insb
ret
sbb
and
sbb
scas
js
rclb
sahf
sub
pop
aam
and
in
aaa
cmpsb
adc
xchg
sbb
ret
repz
cmp
fldcw
outsl
push
dec
mov
test
hlt
dec
clc
lea
sub
jp
xor
into
orb
sarb
push
push
or
push
cmp
sahf
imul
repnz
inc
push
lods
xor
sbb
imul
out
ja
inc
adc
cwtl
aaa
scas
jmp
call
mov
cmp
push
mov
mov
enter
aas
popf
call
lahf
mov
ja
push
pop
inc
mov
mov
stos
lahf
les
jne
jp
not
in
pop
cmpsb
negl
addb
sti
xchg
imul
ds
mov
and
jge
jae
inc
or
aad
xchg
jl
xor
pop
sub
shll
jge
cwtl
aas
xchg
pop
outsl
ja
jge
mov
out
pop
lods
pop
mov
mov
xchg
lcall
push
mov
inc
dec
and
push
stos
insl
jl
dec
ds
test
mov
scas
scas
leave
inc
aad
cmpsb
pop
mov
idivb
lahf
push
fmull
add
pushf
sub
mov
cmp
pop
mov
dec
push
test
lods
leave
lret
jno
pusha
pop
mov
std
fdivrp
fcoms
add
inc
loop
mov
stc
cmp
cmp
dec
push
sub
in
mov
xchg
and
xor
lea
pop
stos
mov
das
adc
xchg
arpl
jae
cmpsb
shlb
and
push
jns
call
out
mov
icebp
and
iret
adcl
mov
cwtl
daa
sub
mov
mov
cmp
fs
stos
jp
fistpll
jecxz
fstpl
and
pop
shll
out
dec
pushf
sub
push
movsl
mov
sbb
mov
mov
icebp
push
cwtl
ss
mov
jle
movsl
jae
push
mov
dec
test
or
cmc
loope
and
sub
ret
mov
jg
push
or
dec
ret
mov
sbb
and
in
ds
movsb
aad
push
push
mov
call
int
mov
fs
inc
dec
sar
dec
pop
mov
out
lea
mov
xchg
mov
lret
sub
jb
cwtl
mov
fs
push
test
mov
xorb
int
sub
jne
addr16
ss
fcompl
mov
sbb
mov
int3
cwtl
pushf
dec
jnp
int3
int
sbb
movsl
jg
jge
mov
call
cs
sbb
xor
notb
pop
sub
iret
out
les
mov
jecxz
lret
outsb
pop
inc
dec
imul
and
lock
push
dec
xchg
gs
and
mov
mov
fnstenv
imul
fimull
push
je
out
xlat
out
into
mov
push
ret
aad
fistps
dec
filds
dec
xchg
gs
scas
pop
sbb
out
adc
nop
lods
xchg
xor
jecxz
mov
wbinvd
xor
je
jecxz
ret
mov
aad
call
sbb
lea
jns
pop
cmp
mov
and
mov
notl
and
lods
mov
bound
sub
xor
and
rcl
or
sub
inc
and
cmpsl
out
mov
insl
mov
mov
je
aas
std
call
incb
jmp
mov
add
adc
push
inc
xchg
dec
call
inc
in
mov
sub
push
adc
outsl
xor
in
dec
xchg
out
jo
mov
into
jae
inc
pop
jbe
loopne
mov
push
mov
cmp
movsl
test
mov
jl
add
and
push
jmp
xor
lea
sbb
ret
and
or
inc
pop
arpl
fs
in
mov
mov
jmp
mov
rolb
js
and
cmpsb
ljmp
lret
fsubrs
pop
xor
inc
aam
das
add
jb
mov
jle
cltd
xchg
mov
adc
dec
mov
adc
mov
inc
lcall
stos
fidivrs
jns
inc
mov
or
repnz
imul
pop
in
fnop
out
shl
test
ja
sbb
test
loop
mov
lea
or
out
into
fstpt
xchg
or
jbe
adc
outsl
xchg
addr16
jle
cmp
xchg
push
std
xchg
mov
push
sbb
and
pop
lcall
inc
stos
mov
out
repz
pop
xchg
popa
add
mov
cli
std
push
mov
push
out
mov
stc
test
sahf
pushf
pop
shll
scas
inc
test
or
call
adc
mov
or
mov
imul
mov
scas
sbb
push
inc
mov
push
fs
dec
sahf
add
loopne
ja
add
jb
stos
add
js
mov
aas
es
es
pop
pop
dec
out
push
repz
push
dec
call
add
push
cmpsb
add
orb
lock
sbb
call
mov
xchg
gs
mov
or
xchg
fisubs
test
rorb
xchg
loop
jnp
ljmp
test
out
int
xchg
cvttps2pi
inc
sub
daa
fmulp
xor
call
add
push
mov
xor
adc
push
les
cmp
push
push
popf
or
imul
push
xchg
mov
sbb
cmp
fbld
sub
out
pop
and
shl
xchg
sub
js
cmp
dec
adcl
cmp
adc
bound
shl
push
outsb
inc
aam
mov
cmc
mov
mov
or
jecxz
jns
sbb
test
mov
pusha
in
das
jl
loopne
xor
jnp
or
jne
xor
push
add
mov
jmp
mov
mov
push
adc
xor
es
inc
mov
xchg
push
push
or
rcll
aad
icebp
mov
adc
mov
push
mov
ljmp
inc
dec
mov
cwtl
pop
sbb
jo
repnz
push
sahf
fwait
xchg
mov
add
mov
in
arpl
nop
cltd
jmp
xchg
or
out
sbb
push
int3
aas
pop
das
xor
shll
jbe
xor
xchg
jno
outsb
stos
sahf
cmp
jecxz
leave
lea
pusha
stos
shrl
pop
lea
lea
mov
mov
ret
enter
in
xchg
arpl
outsb
ljmp
pop
mov
dec
inc
push
jno
sbb
orl
mov
lds
popa
pop
out
es
mov
daa
pushf
xchg
loope
adc
popa
dec
jmp
shlb
xchg
dec
shl
mov
std
dec
call
xlat
inc
pop
out
mov
out
xor
cmp
ret
fnstenv
pop
aaa
inc
push
in
fyl2xp1
out
mov
jecxz
dec
cwtl
push
sub
mov
es
inc
sbb
stc
lahf
test
inc
jae
dec
sub
xor
gs
pushl
fistps
loopne
out
add
je
add
lahf
lret
mov
jl
cmp
sbb
mov
lret
jle
cli
in
mov
ret
add
sbb
test
cs
xor
sub
icebp
loop
lods
mov
xchg
xor
inc
adc
mov
les
cmpsb
mov
sub
inc
mov
cmp
add
loope
dec
mov
jg
shll
pop
add
lcall
fstpl
in
pop
sti
push
rcr
dec
push
cmp
or
lea
iret
cmpb
cmp
pusha
test
xor
in
lret
or
shll
cmp
lea
xchg
and
mov
dec
push
lahf
inc
mov
jb
scas
dec
cmp
ret
out
jo
out
xlat
adc
fists
adc
fimull
cmp
jge
jle
ret
dec
mov
dec
pop
call
mov
mov
stos
filds
test
hlt
aas
dec
les
je
xor
mov
iret
pop
sbb
out
jns
test
data16
jmp
or
stos
fistpl
add
hlt
xchg
jge
test
inc
mov
pop
xor
cmp
mov
popf
dec
imul
xchg
scas
pop
insb
mov
test
mov
imul
fdivrs
lcall
dec
cmp
ljmp
cmc
jg
jp
xchg
xor
mov
int
fcoml
add
xchg
stc
ljmp
cs
push
add
dec
xchg
insb
scas
std
push
pop
adc
cltd
pop
push
add
xchg
sbb
test
roll
loopne
adc
arpl
adc
mov
js
xchg
xorb
lds
je
push
arpl
lahf
clc
mov
sbb
insb
scas
fs
popf
sbb
cld
das
pop
mov
data16
push
popa
inc
jb
mov
dec
loop
xchg
sub
or
sbb
xor
std
add
imul
in
fistps
push
pop
test
movsl
clc
ja
sbb
adc
outsb
jno
adc
mov
push
lret
inc
xor
add
repnz
cmp
cmp
insl
js
sbb
cmpl
dec
cmp
bnd
enter
jne
jmp
mov
add
stos
outsl
mov
das
fmuls
sub
fists
push
ss
out
xor
jp
push
or
push
jns
jnp
lcall
jns
cmp
imul
push
mov
mov
mov
movsb
repnz
mov
addr16
nopl
repz
or
stos
insl
fwait
jl
jmp
add
push
cwtl
jbe
or
fldt
fs
std
insb
cmp
adc
cmpsl
sub
mov
cmp
push
shrb
push
pop
xor
or
repz
fistps
cmp
push
jle
clc
test
jb
jmp
mov
or
push
scas
mov
daa
lcall
fs
sbb
inc
jl
mov
cmpsb
pop
in
pop
jns
dec
push
xchg
and
hlt
and
xor
je
jl
dec
cmp
mov
pminub
xchg
dec
mov
jbe
cmpsb
out
push
cmc
int3
xor
push
sbb
jno
xchg
push
dec
cli
ss
pop
pop
dec
pop
sbb
incl
loopne,pn
dec
je
xor
inc
adc
adc
add
add
cmpsl
test
inc
stos
inc
icebp
rclb
in
sub
xor
subl
pushf
sbb
jne
mov
dec
xchg
sub
jle
pop
fs
xchg
xchg
mov
scas
mov
inc
nop
out
sbb
aam
jmp
cmpsb
cmpl
jno
stc
pop
xchg
inc
pop
cmc
mov
rcl
ss
sahf
xor
sub
paddsb
in
add
ja
enter
push
je,pt
adc
stc
push
addl
inc
je
jl
in
notb
ljmp
dec
out
stc
stos
push
je
leave
mov
inc
lds
rcll
adc
sti
mov
mov
loop
mov
sub
test
in
xor
xchg
std
and
dec
adc
iret
cmp
cli
xchg
mov
ror
pop
daa
test
adc
in
inc
cmp
mov
sub
add
dec
adc
push
push
jp
out
mov
push
inc
push
xchg
stos
stos
push
lahf
dec
clc
jns
cmp
cwtl
lcall
and
inc
adc
jns
pop
xor
arpl
cs
ds
mov
loop
pop
pusha
cs
adc
xchg
inc
add
xor
enter
jp
mov
cmp
cld
dec
jmp
xor
dec
cmp
cltd
or
and
xchg
inc
nop
add
ret
in
sub
sub
mov
sahf
std
clc
lods
or
mov
jecxz
pop
add
call
push
mov
hlt
cmp
mov
rclb
int3
or
fiaddl
adc
mov
ds
ficompl
or
lock
pop
cmpsl
bound
mov
mulb
xchg
fbstp
stc
fists
jl
dec
cmp
and
inc
jns
mov
test
jg
dec
lds
or
cmp
and
xchg
push
or
jl
js
in
or
jae
popa
adc
mov
xchg
loope
xchg
xor
movsl
inc
popa
mov
ds
lods
jbe
inc
mov
lahf
push
stos
loopne
or
leave
or
and
mov
cwtl
inc
cs
pop
sti
sub
push
pusha
push
cmc
pop
dec
outsl
bound
cmp
pop
sarb
or
push
mov
jle
and
pushf
lods
icebp
ret
in
inc
outsl
push
jo
enter
mov
sahf
loope
cltd
lea
and
jle
outsb
shr
test
ljmp
adc
xchg
mov
push
xchg
call
cli
xchg
lods
cwtl
push
stc
push
mov
mov
push
or
inc
mov
cmp
add
rcll
mov
clc
loop
lahf
call
jo
insb
das
scas
dec
adc
and
int
loop
call
pop
scas
push
imul
popf
out
stc
lret
xor
jbe
arpl
mov
dec
mov
pop
iret
loopne
xchg
into
test
ljmp
nop
mov
cmp
hlt
mov
inc
mov
ffree
aam
adc
icebp
mov
adc
xchg
stos
test
int3
frstor
mov
ljmp
outsl
dec
dec
cmpsl
imulw
out
repz
rorb
cmp
js
add
mov
mov
cmc
push
movsl
fldenv
outsb
imul
bound
rorb
and
ficoms
xchg
pop
inc
lock
unpcklps
lcall
sub
subb
clc
hlt
lahf
std
cmp
push
sbb
les
jbe
mov
dec
outsl
xchg
jp
jmp
ljmp
imul
jecxz
mov
popa
sub
std
scas
push
add
imul
dec
fnstenv
jge
in
pop
test
or
fwait
jb
movsl
xchg
mov
mov
push
add
out
out
lret
sbb
test
aad
xlat
loope
nop
sub
lahf
and
outsb
sbb
lds
mov
xor
jp
in
inc
stos
movsb
les
cmp
aam
nop
or
scas
lods
lods
repnz
pushf
jnp
imull
dec
loop
das
or
fbld
and
mov
mulb
sti
out
and
mov
movsl
xchg
dec
inc
pop
repz
movsl
pop
mov
daa
xor
test
movsl
or
inc
cmp
lret
nop
jae
adc
jno
adc
jge
lcall
inc
sti
ljmp
aas
mov
and
sahf
jmp
fdivr
ds
xchg
push
inc
cwtl
sbb
adc
xchg
mov
jb
les
pop
push
jp
mov
scas
pushf
jmp
mov
arpl
outsl
pop
add
adc
add
rcrl
fnstcw
fdivrs
cmpsl
mov
and
les
push
sub
add
sti
and
push
ret
push
icebp
xchg
jge
mov
adc
pusha
mov
aam
jmp
mov
out
mov
xchg
mov
aaa
mov
add
out
movsb
pop
dec
lahf
xor
shlb
pop
leave
ds
push
inc
inc
mov
imul
mov
int3
sub
push
xor
adc
push
push
filds
cmpb
xor
popa
mov
mov
pop
mov
push
sub
loop
hlt
outsb
pushf
fwait
pop
pop
cmc
rcll
ss
push
or
inc
adc
es
xchg
inc
push
jns
mul
lret
pop
cmpsl
push
loop
jno
sbb
push
jecxz
nop
in
mov
dec
daa
or
lods
dec
jns
into
insl
mov
out
xchg
mov
mov
xor
or
fsub
inc
pop
mov
sub
xor
test
add
stos
shll
in
push
aad
lds
aad
adc
rolb
xor
adc
out
jnp
xor
dec
pop
fisttpll
xchg
aam
fadds
mov
inc
jmp
mov
mov
fsubrp
xor
jl
imul
popa
loope
popa
sbb
sti
rorb
push
mov
sbb
pop
leave
ds
das
je
pop
add
add
repnz
pop
inc
insb
push
xor
daa
in
push
sahf
out
jl
ja
push
sub
in
adc
add
dec
dec
adc
shll
jbe
mov
push
icebp
add
daa
lahf
adc
mov
inc
rol
shrb
adc
testl
add
push
jle
scas
xchg
in
and
inc
mov
jnp
leave
and
outsl
fwait
xor
pop
cmpl
jg
xlat
aam
adc
lret
ret
lcall
jbe
push
in
test
mov
push
std
nop
pushf
add
scas
lahf
mov
pop
dec
inc
xchg
cmp
inc
sub
sbb
pop
add
popf
xchg
dec
mov
and
fisubs
xor
cltd
push
iret
movsl
mov
aas
add
cmpsl
rorl
icebp
jge
in
into
adc
imul
in
push
push
adc
sbb
adc
pop
dec
jp
loop
lcall
pop
pop
lahf
xor
out
pop
xlat
cmpsl
movsb
inc
cmp
stc
pop
xor
dec
fiadds
mov
mov
mov
icebp
push
mov
xor
insl
jbe
repnz
jno
and
inc
mov
hlt
out
mov
int
loope
cmpsl
inc
out
pop
and
jne
cmp
inc
pop
pop
je
pop
mov
loope
ret
xchg
dec
test
pop
daa
fcomps
xor
push
jb
and
int3
xchg
testb
fsubrs
mov
js
push
cmp
das
dec
mov
sbb
inc
or
mov
sub
mov
push
mov
add
ret
inc
fisttps
test
xchg
mov
push
cmpsb
mov
adc
cwtl
sub
pop
mov
mov
dec
jge
jg
push
adc
out
mov
leave
repnz
mov
dec
xor
mov
fs
cli
imul
fdivl
inc
mov
sub
push
add
mov
enter
ds
push
cmp
sti
sar
lahf
pop
push
es
js
sbb
out
loope
fs
add
mov
lds
std
out
and
sar
mov
sbb
addr16
clc
stos
xor
push
push
mov
rcll
ret
popf
mov
xchg
xor
orl
sub
mov
lock
add
pop
inc
cmp
mov
movsb
in
and
mov
push
push
sbb
outsb
movsb
mov
rorl
sub
jecxz
loop
sbb
push
imul
cmpsl
test
cmpsb
mov
scas
fimuls
int3
add
xchg
mov
mov
xchg
imulb
sbb
repz
push
push
into
inc
pop
jle
out
inc
jo
xorl
mov
adc
repnz
fcom
pushf
popl
rcl
xor
in
mov
lret
inc
sbb
sti
aaa
sub
jae
cmp
ja
mov
cmp
rclb
mov
sbb
test
pop
cwtl
add
and
lcall
jno
inc
stc
ret
jl
pop
pop
lods
shlb
stos
adc
bound
inc
leave
and
add
jle
sti
mov
sbb
int3
fisubrs
enter
lds
pop
pop
mov
lods
es
cs
es
sahf
mov
fnsave
lock
es
xor
daa
and
xor
das
mov
jg
pop
insl
push
add
mov
add
fcoms
ffree
out
cld
pop
aam
mov
jle
mov
cmpl
mov
mov
out
xor
clc
movb
sahf
test
je
push
pop
mov
sub
pushf
jmp
xchg
gs
mov
mov
or
fidivrs
sbb
pop
call
popl
mov
mov
fsubp
in
int
rclb
ret
adc
aam
ret
push
push
adc
into
lods
push
xchg
jno
mov
inc
stos
push
or
roll
sbb
repz
rclb
push
cmp
ret
test
add
jne
jb
dec
adc
std
dec
cmp
loopne
arpl
or
push
cmp
divb
sbb
fwait
stos
adc
mov
sub
nop
push
mov
insl
dec
pushf
xchg
aaa
test
bnd
or
lods
pop
out
pushl
bnd
push
ret
mov
cmp
int
imul
lea
cmp
or
inc
jge
dec
into
in
leave
idivl
in
xor
imul
mov
imul
sbb
rcrb
push
xchg
jp
sub
addl
popf
mov
push
push
push
or
mull
inc
jp
call
iret
add
mov
icebp
mov
rclb
xor
and
or
or
jecxz
mov
cmp
daa
out
inc
push
jecxz
cld
in
sbb
mov
adc
rol
scas
loope
xor
pop
stc
ss
enter
sub
cmp
pop
xchg
test
or
inc
enter
fldenv
mov
in
xorl
mov
loopne
mov
loop
jl
sahf
movsb
add
xor
pushf
jl
cmp
popf
push
nop
push
jne
dec
adc
aad
lcall
pop
push
fstl
xor
and
jge
mov
add
hlt
inc
imul
add
ja
jns
daa
adc
mov
jns
xchg
push
stos
push
dec
lock
mov
popf
push
dec
dec
lahf
test
mov
xchg
cmp
daa
cmc
sti
in
inc
out
cmpsb
sub
mov
inc
jb
cld
jne
loope
or
outsl
mov
cli
shlb
cltd
cli
sbb
adc
mov
std
cmp
fbld
jge
das
jo
mov
dec
and
addr16
outsb
or
call
subl
pop
pop
pop
push
cmp
push
cmc
and
jg
cld
jne
sub
add
mov
inc
push
ja
inc
mov
out
and
flds
mov
stc
fists
repz
jnp
dec
mov
jns
test
jl
movsl
sub
adc
push
repnz
nop
icebp
out
cmp
aam
sti
jp
mov
and
les
push
jmp
mov
in
and
push
test
sub
call
xor
and
enter
sbb
inc
xchg
fistl
shlb
sbb
int
test
cmpsb
ss
pop
adc
fwait
jle
or
dec
lret
adc
cld
mov
mov
sbb
aas
add
or
cmp
lcall
jmp
sub
das
cwtl
lahf
das
test
clc
cmpsl
stos
or
repnz
sub
mov
imul
popf
mov
xchg
mov
in
and
addb
shrl
cmpsb
and
in
or
sub
mov
push
jle
mov
and
pop
mov
adc
repz
dec
cmp
mov
adc
jmp
gs
stos
stos
in
dec
mov
ss
es
jg
inc
inc
leave
sbb
dec
in
scas
pop
cld
negb
pop
or
xlat
fisttps
mul
mov
loop
jmp
mov
sahf
push
nop
or
neg
xor
in
ret
xchg
aam
pusha
mov
mov
or
aaa
lret
popf
push
bound
push
inc
or
cmp
arpl
or
pop
fistpll
ret
sub
dec
sub
jl
std
push
popa
loop
adc
in
ror
sarl
dec
sub
aam
pop
xchg
mov
pop
shlb
mov
sub
jge
arpl
in
mov
push
incb
cmovne
aaa
adcl
mov
mov
stos
nop
rcrb
mov
xor
stos
dec
mov
arpl
call
jbe
fisttpll
xor
mov
inc
cltd
sub
lods
std
sub
sub
pop
dec
and
or
scas
inc
xor
outsl
enter
xor
xlat
dec
in
or
jnp
mov
inc
lret
push
popa
mov
dec
andps
pop
xor
clc
pop
inc
and
imul
test
mov
pop
or
mov
and
jecxz
scas
jb
push
push
jge
xchg
sub
lods
push
sti
hlt
xlat
ret
ret
pop
mov
mov
fucomp
mov
and
add
cltd
hlt
mov
adc
inc
push
divb
pop
test
cmp
test
inc
jno
movsb
add
xchg
fldenv
push
sbbb
or
fimull
mov
and
mov
roll
rcrb
lahf
jnp
cmp
and
sahf
sbb
mov
mov
or
pop
or
pop
mov
or
mov
lahf
lcall
mov
inc
sbb
jbe,pt
cmp
jb
jns
jnp
stos
fidivrs
adc
mov
out
adc
inc
xchg
adc
das
cwtl
mov
test
leave
adc
mov
sub
ds
out
pop
push
imul
icebp
pop
jmp
orb
clc
cmp
imul
movsb
mov
sbb
jns
push
ret
fildl
sbb
rcrl
cli
js
sti
mov
pop
out
insl
in
sub
shll
mov
or
lock
je
dec
ja
fnsave
mov
js
fstp
mov
fnstenv
push
pop
int
fiaddl
mov
xchg
add
pop
adc
mov
jo
enter
mov
inc
arpl
cwtl
jb
xor
orl
dec
jecxz
push
xchg
inc
test
inc
jns
jge
insl
sub
int
sub
inc
jp
clc
cmc
shlb
xchg
dec
daa
movsl
dec
lock
jnp
xchg
subb
dec
xor
sbbl
hlt
or
cltd
repnz
movsb
mov
stos
add
or
or
and
shl
cmp
ret
mov
mov
sub
ret
adc
jg
mov
jg
and
dec
ds
sub
mov
ss
in
and
xor
mov
xchg
jae
adc
dec
loop
loope
in
dec
jne
cmpsb
push
add
stos
into
sub
mov
or
loop
sub
lea
movsl
mov
mov
movsl
or
or
mov
and
jl
pop
aas
jmp
mov
mov
and
mov
insb
mov
cmp
call
nop
or
dec
jle
mov
cmp
clc
sub
push
fcmove
xchg
inc
add
arpl
sbb
cmp
pop
push
push
incl
lret
stc
xchg
sbb
into
pop
in
sub
mov
xchg
jg
pop
or
ljmp
jge
adc
push
sarl
lcall
pop
push
jle
outsl
loop
shlb
xchg
fwait
jmp
mov
inc
ret
lods
das
pushf
jae
sbb
pop
pusha
loop
sbb
pop
jnp
dec
int
adc
repz
out
scas
iret
ret
pop
lods
int
push
push
pop
mov
xchg
dec
lock
shlb
rclb
cmpsl
mov
testl
std
and
push
ljmp
push
inc
sub
push
lahf
mov
bound
or
pop
sub
cmpsl
mov
push
jcxz
insb
popa
out
jne
pop
shll
inc
and
repz
adc
loope
ja
stos
xor
out
outsl
cmpl
daa
add
jl
or
pop
mov
ror
add
xchg
btc
aaa
lret
lds
in
je
ja
fadds
in
mov
xchg
rorl
int
and
sbb
in
out
mov
cwtl
lods
or
cmpsb
icebp
and
mov
das
faddl
and
popa
arpl
sub
decl
xchg
mov
cmp
imul
aaa
xchg
aaa
sub
leave
dec
mov
cmp
ret
ret
dec
leave
arpl
scas
pop
rolb
cmpsb
xor
xchg
int3
jmp
sub
in
lret
mov
lar
cwtl
scas
mov
xchg
rcrl
mov
jns
lahf
push
pushl
std
roll
nop
stos
mov
in
call
sarl
lahf
and
fwait
push
and
dec
jmp
mov
ret
and
loopne
mov
stc
movsl
ficompl
xchg
cmp
repnz
or
shlb
in
loop
imul
xchg
cwtl
xor
cld
ret
jmp
lods
push
lahf
hlt
add
jnp
mov
sbb
les
leave
ret
xor
inc
jne
repnz
movsl
push
scas
cmp
lods
push
push
adc
dec
ret
push
sahf
leave
mov
mov
xor
int
inc
dec
nop
push
mov
pop
adc
jp
mov
es
pushf
lock
mov
outsl
xchg
add
std
ja
pop
add
xchg
pop
push
data16
xchg
repnz
xchg
adc
test
test
inc
in
in
outsl
and
dec
cmc
in
outsl
repnz
or
movb
and
cmp
pop
sbb
dec
cld
mov
or
shrl
loope
push
enter
out
cmp
dec
out
out
call
lods
sbb
pop
and
insl
out
xor
mov
pop
jns
xor
int
or
sub
sub
inc
sbbl
xchg
fwait
lahf
or
jae
lret
cmp
xor
push
roll
xchg
push
inc
outsl
inc
loop
inc
mov
inc
std
jnp
pushf
cwtl
nop
dec
stc
pop
xchg
out
pop
mov
sahf
dec
testl
leave
imul
fidivrl
stos
sarb
scas
lcall
mov
jo
fmulp
adc
pop
sub
mov
popf
jbe,pn
out
ret
test
repz
and
jmp
pop
mov
xchg
mov
sub
jno
mov
aad
and
push
cmp
xor
mov
stos
sbbb
mov
call
sbb
std
loope
inc
dec
lds
in
jg
or
mov
inc
add
xchg
add
ss
jo
cwtl
xchg
lea
or
jecxz
adc
jnp
mov
lea
popa
pushl
cmp
cltd
sub
rorb
push
jae
push
cltd
sbb
jb
inc
pop
and
add
sbb
test
repnz
gs
pop
std
out
or
sbb
pushf
inc
das
cli
mov
jle
hlt
push
push
xchg
inc
iret
ljmp
leave
adc
stos
jecxz
in
subl
jnp
sub
sub
sti
out
or
mov
std
pop
or
loope
xor
ds
mulb
xchg
xor
fwait
mov
in
test
jmp
scas
jno
jae
mov
and
sarl
inc
sub
push
cmp
std
enter
adc
insl
cmp
aam
cmp
adc
std
addr16
mov
add
test
push
push
aam
pop
loop
in
pusha
roll
and
data16
push
rol
scas
imul
mov
push
pushf
cmp
shll
mov
imul
movb
jns
cmp
mov
xchg
and
cmp
hlt
mov
repz
mov
add
mov
mov
pop
insb
sub
dec
sbb
cltd
pop
cmpb
jecxz
pop
popf
mov
push
pop
mov
lods
iret
jnp,pt
dec
mov
repnz
fcompl
xorb
out
cmp
mov
mov
out
xchg
mov
stos
mov
sbb
jl
icebp
int
or
out
jo
mov
mov
fisttps
sub
test
add
sbb
mov
pop
jae
js
push
pop
or
divb
cmpsl
fstp
out
sub
mov
pushf
movsb
ret
sub
xchg
dec
in
aam
fwait
std
addr16
pop
and
rcl
in
out
add
push
xor
xchg
mov
dec
inc
cmp
mov
popf
xchg
scas
pop
inc
or
mov
pop
in
or
in
inc
mov
jo
sti
clc
movsl
outsl
insb
test
lret
pusha
daa
and
sarb
test
fdivrp
js
rcll
aas
inc
js
test
test
xor
je
jne
add
jmp
mov
jge
test
or
gs
mulb
sbb
push
call
pop
outsl
cwtl
jle
fnstsw
sahf
add
jb
jge
adc
scas
ds
cs
out
add
add
es
fsubrs
xchg
test
leave
fidivrs
mov
popl
and
mov
cmc
adc
rcr
loop
pop
mov
fsubs
pop
insb
dec
fcoml
pop
push
shlb
or
dec
je
xor
outsl
xchg
xchg
sub
lcall
clc
pushf
push
sahf
icebp
movsl
mov
cmpsb
xchg
pop
pop
jns
sbb
dec
inc
daa
sub
hlt
rcr
insb
divb
stos
fsubl
imul
outsl
fisubl
cmp
xor
scas
adc
mov
stc
cmp
mov
adc
add
ds
mov
and
je
push
inc
pushf
sub
cmp
pushl
cmpsb
cld
pop
out
mov
sub
loop
cwtl
xchg
push
mov
cmp
mov
mov
mov
xchg
add
push
cltd
mov
xor
xchg
fmull
and
mulb
outsl
mov
test
cmp
fidivl
add
adc
int
add
andps
sub
xchg
sbb
and
loop
sbb
dec
out
ljmp
mov
insl
aad
rcll
fdivr
push
lahf
insl
xchg
loope
and
sbb
inc
movsb
cli
mov
pop
icebp
out
test
int
push
and
mov
add
int3
or
pop
xlat
jo
sahf
jge
lcall
lret
or
mov
jne
fxch
sti
sbb
jns
inc
subb
in
rorl
jge
scas
imul
xchg
js
adc
adc
rcll
mov
into
sub
adc
lock
xchg
mov
inc
out
pop
cmp
sub
fbld
dec
jl
sahf
mov
jl
ds
into
gs
dec
mov
adc
or
pop
jecxz
cmp
sub
lret
adc
pop
std
xchg
jle
int
rclb
lods
inc
popa
shlb
test
imul
add
pop
xor
pop
movsb
and
xor
scas
jo
jo
sbb
and
movsb
adc
ljmp
dec
inc
jecxz
in
lahf
out
mov
movsl
jb
jb
outsb
cmpl
cmpsl
mov
pop
mov
pop
sub
and
repnz
cltd
pop
shrl
pop
insl
cmp
xchg
xor
mov
sub
std
insl
pop
ljmp
pop
js
mov
das
orb
push
push
fst
push
push
mov
fwait
push
push
sub
cs
jmp
movsb
and
mov
mov
in
leave
xchg
sbb
ret
notb
sbbb
iret
popf
movb
sti
mov
popf
add
shrb
and
xorb
cmp
pop
push
leave
jp
jne
lea
rclb
dec
and
inc
adc
ds
imul
and
mov
adc
ret
mov
push
sti
shrl
jo
or
jns
xchg
cltd
sub
mov
xchg
ret
addr16
mov
sbb
clc
xor
add
imul
repz
and
push
negl
inc
cmpsb
dec
popa
out
push
jne
loop
pop
xchg
mov
xchg
cmp
push
mov
imul
lcall
repz
popf
lds
pop
xchg
iret
jns
cmpsb
insb
push
mov
adc
test
cmc
popf
xchg
adc
in
sarl
das
bound
push
jnp
sahf
pop
gs
sub
inc
daa
or
jp
push
add
mov
pop
bound
mov
fcoml
adc
mov
sub
aaa
lcall
icebp
fcompl
mov
jae
add
jp
sahf
sbb
hlt
mov
fildl
and
jno
mov
out
jg
xor
xchg
aam
scas
sarl
pop
pop
out
xor
adc
jae
mov
out
notb
cmpsl
out
adc
pop
xor
mov
adc
imul
jns
mov
mov
stos
imul
insl
mov
mov
arpl
cmp
mov
je
pop
sub
sbb
mov
orl
mov
iret
add
mov
mov
scas
inc
test
mov
inc
sub
mov
sarl
lea
dec
std
insl
dec
or
sahf
inc
ja
mov
push
xor
stos
loop
scas
pop
push
cmp
insl
adc
and
sbb
into
xor
pop
add
std
aam
mov
out
jp
popf
cmp
inc
popf
push
repz
inc
mov
jge
rorb
jbe
mov
adc
ljmp
xchg
add
cmp
stc
xor
xchg
ljmp
adc
mov
imul
adc
pop
inc
lret
or
jg
shr
dec
pop
jecxz
dec
dec
cwtl
push
adc
xor
in
inc
test
data16
int
test
sub
movsb
in
test
es
xchg
sbb
pop
aam
xchg
mov
lds
xor
dec
hlt
dec
cmp
std
mov
mov
fsubs
and
ficoml
enter
mov
push
add
pushf
sub
and
mov
fsubs
fwait
xor
fstpt
lret
and
out
cmpsb
push
mov
cs
add
mov
sub
push
loop
call
popa
dec
scas
dec
dec
stc
sbb
xor
push
movsl
cmp
or
scas
insb
sub
lods
inc
sub
fwait
or
sti
shlb
dec
xor
fs
push
fimuls
dec
xor
xchg
pop
or
fisubrs
or
pushf
push
and
ret
fwait
gs
adc
cld
mov
xor
mov
sbb
jle
fs
mov
sbb
lds
inc
fisttpl
pop
pop
daa
lds
ljmp
cmpsl
andl
out
mov
sub
nop
inc
aaa
out
pop
xchg
enter
or
ja
jecxz
movsb
outsl
mov
mov
je
daa
dec
pop
rcl
jno
pop
cmpsl
and
mov
jmp
add
adc
and
push
jbe
push
std
add
add
int
mov
sbb
bound
lock
pop
fs
clc
test
jno
loopne
mov
push
fmuls
pop
rolb
adc
sbbb
push
adc
sub
les
in
dec
add
jb
cmp
or
cltd
jo
inc
sub
adc
fsubr
jl
cmpsb
inc
xchg
addb
jle
hlt
hlt
or
stc
loopne
add
inc
cmc
or
xor
adc
clc
js
pop
jae
and
jge
xor
fcomps
mov
dec
mov
lret
negb
icebp
or
repnz
jmp
lock
lea
xor
xchg
push
adc
pop
xchg
inc
fstl
out
cmovnp
idivl
sti
mov
mov
mov
sbb
sbb
fisubl
ljmp
lret
int
jns
test
pushf
fimull
jecxz
adc
ret
test
lcall
jns
push
jmp
vmwrite
lahf
sbbl
and
scas
mov
lret
mov
in
dec
fiadds
add
das
jbe
xchg
hlt
cmpsb
int
outsl
lcall
sbb
cmp
nop
and
or
sbb
mov
cs
das
cmp
scas
mov
sub
popa
pop
add
jmp
aam
mov
adc
xor
jo
fistl
push
inc
sbb
fnstsw
popf
add
jnp
loop
lret
orl
push
inc
outsl
push
cvtps2pi
cmp
xchg
pop
cmp
mov
sahf
bound
rep
test
pop
mov
mov
xorb
xor
in
fcoms
sbb
jnp
ret
int3
in
and
mov
or
ds
jmp
lods
dec
pop
or
mov
push
push
pop
sarl
sti
adc
mov
int3
cmpsl
stos
sbb
movsb
pop
push
xor
mov
jno
mov
rcrb
scas
subb
mov
popa
jl
popf
fldt
cltd
add
ret
aas
mov
mov
mov
es
movsl
xchg
aaa
mov
adc
lock
dec
mov
or
dec
pop
and
int
jno
mov
adc
cmp
out
inc
mov
pop
mov
test
cmpb
mov
pop
adc
lods
sti
mov
pop
je
pusha
out
dec
cli
adc
push
bound
iret
push
js
push
mov
jae
sti
nop
in
or
or
inc
arpl
inc
ss
mov
fsubrl
fisubrs
in
fistpl
cs
and
xchg
dec
xlat
pop
push
mov
cwtl
xlat
in
xchg
sahf
xchg
mov
push
push
jecxz
cli
pop
into
pushf
sub
xor
shlb
pop
push
pop
jg
xor
add
push
push
sub
insb
ret
mov
inc
sbb
insb
cmpl
movsl
insb
rorl
inc
dec
add
fwait
lcall
mov
push
fildl
add
sbb
mov
jnp
jmp
fldl2e
lods
cwtl
rcrb
mov
sbb
rorb
pushf
mov
adc
int3
mov
popf
jns
pop
jns
mov
fimuls
pop
inc
out
daa
insb
inc
testl
iret
lahf
cmp
iret
sbb
nop
xor
push
push
xchg
movsb
jge
jecxz
cld
int3
jl
in
stos
push
sbb
cmp
jno
mov
insl
lahf
push
push
jo
pop
jmp
negl
idiv
out
cmpsb
mov
jns
addr16
nop
mov
adc
cmc
and
and
mov
jmp
cmpsb
sbb
mov
addr16
dec
pushf
movl
mov
cs
cmp
outsb
cltd
loope
sbb
nop
clc
and
dec
repz
bound
and
aas
wrmsr
pop
rol
ret
add
loop
cmc
sub
enter
les
icebp
xor
aaa
or
and
scas
mov
jle
push
loope
ljmp
mov
stos
sbb
cmp
cs
lret
push
jmp
inc
cmp
fs
mov
sbb
cwtl
mov
scas
sbb
cs
sub
sbb
adcl
sub
push
into
aas
jne
xchg
gs
sti
adc
mov
fnstenv
lock
mov
out
jnp
daa
adc
dec
movsl
arpl
sbb
inc
icebp
jnp
or
jle
ss
or
jnp
jnp
mov
sub
idivb
mov
outsb
mov
mov
bound
jb
and
imul
cmp
cmp
sti
out
inc
test
fstl
popf
rcll
adc
inc
add
mov
ds
divb
stc
iret
mov
scas
inc
cli
sbb
orl
sub
push
int
xchg
and
ja
pushf
sub
sbb
mov
jmp
sbb
leave
mov
pop
aad
pusha
in
jnp
js
jge
mov
fldcw
mov
mov
hlt
and
xchg
jbe
sub
add
push
sub
fldt
test
and
int3
and
addb
insl
lahf
or
xchg
jecxz
pop
mov
iret
inc
dec
subb
loopne
mov
daa
and
fisubs
popf
cmc
xor
jb
leave
fwait
pop
lods
nop
lds
mov
dec
es
cmp
dec
sar
aas
cmp
cmpsl
faddl
mov
jno
filds
test
fisttps
jmp
cld
sbb
rcr
jmp
cmp
lahf
fmull
add
loop
xchg
jmp
enter
lea
mov
loope
inc
aas
sarl
xchg
out
cmc
xchg
pop
in
mov
pop
jg
lret
push
jne
xchg
rolb
adcb
pop
adc
adc
stc
scas
push
mov
imul
cltd
loope
int
dec
fmull
pop
sub
adc
fsub
mov
mov
mov
jae
xchg
loopne
fnstsw
cmp
jns
icebp
dec
mov
jns
cli
pop
es
jb
pop
bound
idivb
outsl
inc
xchg
push
mov
aam
xor
inc
push
gs
jmp
nop
dec
and
cmp
xchg
xchg
push
mov
sbb
dec
cmpsl
xchg
push
pop
push
sbb
sub
lock
jno
push
inc
out
andb
enter
loope
jno
sbb
or
mov
mov
sti
and
cmp
nop
dec
xchg
shll
mov
enter
fdivr
arpl
out
cld
mov
outsb
div
icebp
sahf
in
cwtl
add
mov
fcompl
dec
std
mov
out
pop
outsb
jb
push
jb
mov
gs
stc
das
cmc
cwtl
pop
adc
leave
jmp
ja
fwait
dec
dec
push
mov
pop
push
xor
andl
std
mov
jbe
and
or
hlt
cmp
dec
lea
jle
movsb
loop
fldl
ja
xlat
mov
pop
ds
sti
jecxz
xchg
repz
iret
cld
cli
rorb
pop
dec
decb
dec
inc
sbb
jmp
pop
inc
adc
dec
mov
cmp
sahf
movsb
jno
pop
dec
adc
add
or
xor
cli
mov
push
adc
cmp
or
bound
pop
jp
pop
lcall
push
std
mov
sbb
enter
sbb
push
sbb
sahf
adc
mov
movl
pop
pop
stos
outsl
sbb
in
sahf
pop
sub
pop
cli
push
outsl
jae
adc
xor
scas
enter
xor
imul
jl
xor
test
or
je
add
mov
test
insl
jle
xchg
sbb
int
sbb
and
lds
xchg
sbb
addr16
add
mov
jge
mov
imul
mov
inc
notb
fwait
and
outsb
pop
jbe
add
or
lds
jno
inc
dec
mov
cmp
push
test
orl
jo
rclb
push
inc
ss
dec
or
daa
insl
andb
adc
icebp
xchg
jbe
mov
test
nop
dec
mov
xchg
mov
clc
notb
rorl
test
jmp
test
cmp
sti
or
rcl
jl
jb
inc
mov
xchg
mov
fdivl
or
add
pop
xor
dec
xor
bound
outsl
push
pop
hlt
jne
pop
pop
lods
daa
mov
sub
aaa
push
lea
dec
cmpsl
mov
out
adc
mov
xor
test
dec
pop
adc
jle
shlb
ja
mov
bnd
pop
add
les
xchg
jnp
lahf
dec
pushf
cld
adcl
iret
push
imul
aas
inc
in
sbb
jb
dec
jg
jmp
mov
and
push
xchg
fsubl
das
aad
mov
movsb
cs
mov
inc
cmp
mov
je
jb
movsb
iret
maskmovq
mov
sarl
lods
xchg
fstps
jmp
fsub
push
mov
insb
push
cs
div
imul
lods
push
in
cmp
inc
ret
rcrl
pop
push
mov
lret
pop
xor
ljmp
stos
mov
fstpt
sbb
stos
mov
xor
scas
mov
int
iret
mov
mov
or
mov
dec
int3
cmp
daa
mov
arpl
int3
pop
cli
enter
jnp
shl
rcrb
pop
jecxz
ret
sub
sbbb
in
movsl
mov
sbb
fndisi(8087
xor
popf
pop
lods
repnz
and
push
mov
std
int3
fmuls
fsts
sahf
lods
out
jo
pop
cwtl
iret
mov
negl
push
sarl
pushf
mov
and
fwait
andl
dec
push
std
fmuls
sub
movsl
lds
fbld
push
subl
aam
add
je
jle
xor
hlt
adc
sbb
or
push
lea
jo
sbb
stc
andl
add
xchg
xor
scas
jbe
add
call
lods
mov
movsb
loope
test
mov
jp
orb
sbb
pusha
pop
jp
fidivrl
mov
outsb
dec
cmp
adc
jo
pop
push
mov
sub
xchg
dec
pop
cmp
ret
sbb
add
incl
push
cmp
jg
inc
push
out
out
mov
lahf
xchg
dec
mov
adc
mov
xchg
fwait
cwtl
in
or
fsubrp
stos
mov
subl
sbb
and
fmul
lods
push
push
xchg
adc
push
ret
mov
push
pop
test
into
in
stos
jne
jns
imul
shl
adc
add
pop
jnp
and
mov
dec
repz
add
add
pop
in
icebp
or
mov
push
adcl
push
push
nop
inc
aaa
loope
inc
mov
mov
push
rcll
push
out
jne,pn
enter
insb
jnp
repnz
sub
push
fdivl
das
push
inc
cmc
mov
adc
outsb
insl
fidivrs
add
adc
lahf
repz
and
or
imul
jmp
or
mov
inc
add
mov
hlt
hlt
jbe
mov
add
loopne
xor
jmp
cmp
mov
mov
mov
jns
testb
add
xchg
mov
push
dec
fcmove
cld
push
lret
mov
adc
sti
push
rolb
sti
push
or
sbb
andb
push
mov
out
lods
ss
in
mov
movsl
lods
adc
pop
sub
sub
lea
sub
fimull
int3
and
pop
stc
movsb
jae
sbb
mov
dec
fsubs
mov
add
lods
fcompl
mov
lcall
mov
sahf
mov
add
dec
push
sub
cmp
or
cmp
jp
insb
add
divl
cmp
std
fstpl
fwait
jne
push
int
aam
cmp
ljmp
push
aam
xor
xchg
xchg
sub
iret
cmp
jo
push
sbb
inc
js
lret
mov
xor
mov
mov
xor
mov
cmp
cmovno
lods
sub
nop
jecxz
in
jbe
leave
sbb
pusha
subl
mov
das
pop
arpl
dec
xchg
inc
sbb
jmp
dec
and
inc
adc
fisttps
fcomip
cli
add
imul
aaa
dec
and
rcll
push
adc
pop
dec
hlt
lods
pop
inc
cmpsb
push
icebp
fdivrl
rcl
out
dec
and
addr16
dec
adc
movsb
jle
leave
lea
push
nop
push
mov
and
imul
xchg
ljmp
gs
cmpsl
cmp
push
pushf
add
jo
stos
sub
in
sbb
das
add
sbb
shlb
xor
inc
pop
rcll
stc
add
mov
inc
test
jno
add
push
fs
bound
cwtl
sub
out
pop
js
and
loop
shll
jno
jno
mov
cmp
loope
jnp
sub
das
repnz
add
leave
cmc
lret
sbb
mov
push
add
stos
pop
jecxz
jo
dec
insb
call
lock
shlb
and
mov
imull
sbb
cmp
lods
std
jo
shlb
lods
cwtl
das
xor
mov
and
paddusb
inc
gs
inc
mov
push
iret
add
cmpb
sbb
jmp
sub
hlt
loop
insb
xor
dec
sahf
xchg
leave
sbb
aaa
clc
add
xor
sub
push
inc
adc
push
mov
out
adc
or
test
out
cs
out
rorl
pop
clc
stc
pop
cwtl
dec
xor
loopne
add
push
cld
lahf
pusha
test
nop
mov
cwtl
stos
popf
dec
adc
mov
rcr
data16
jne
pmaxsw
push
movsb
or
fiaddl
sub
test
mov
xor
mov
sbb
ljmp
pushf
loop
outsl
xor
sbb
icebp
adc
add
xchg
mov
mov
lea
inc
cmp
cmp
mov
lock
fwait
adc
js
fs
cmp
sub
xor
jg
mov
repnz
out
jno
dec
lods
xchg
jmp
xchg
sub
lahf
pop
je
mov
mov
dec
push
rclb
aas
cmp
cmpsl
lret
cs
test
lahf
jno
rcll
mov
mov
inc
pop
push
pop
mov
popf
rolb
jge
outsl
or
psubw
test
cli
pushf
jp
sub
jecxz
imul
push
stos
ret
pop
imul
mov
out
lock
mov
sbb
jae
lret
mov
dec
xchg
jns
imul
dec
jmp
lfs
mov
sub
and
aaa
pop
mov
dec
rorl
cmpsl
cwtl
inc
enter
test
repnz
adc
inc
cmp
int
popa
cmp
loope
sbb
push
mov
in
sbb
jmp
cmp
inc
test
clc
imul
cmpsb
mov
mov
orb
adc
out
inc
mov
into
je
push
sub
orb
push
sbbl
adc
inc
sub
stos
and
fwait
cmp
xchg
push
pop
push
jns
sub
aas
and
negl
and
fists
mov
psubd
sub
sarb
mov
cmp
test
clc
xchg
gs
notl
mov
loope
sbb
xchg
movsb
lahf
jae
inc
mov
int3
mov
rorl
mov
cwtl
cmp
sahf
mov
lods
out
fmull
mov
xor
xor
pop
pop
test
lods
call
mov
test
sub
xchg
gs
xor
mov
jp
push
jo
xchg
cmp
inc
ficoml
xor
outsb
std
jg
cmpsb
jne
enter
cmc
repnz
iret
pop
push
pop
push
push
jmp
int3
sbb
mov
pop
movsb
out
xchg
dec
insb
lret
popf
aad
shlb
test
outsb
insl
and
je
mov
push
in
or
fldt
je
or
popa
xlat
stos
scas
xchg
je
faddl
clc
pushf
xchg
lahf
sub
cmpsb
or
sbb
push
cmpsb
and
bound
pop
int3
lret
dec
adc
adc
inc
clc
mov
sbb
lea
fdivp
dec
jmp
mov
adc
mov
push
shrl
adc
xchg
or
insl
in
xchg
add
xchg
dec
mov
add
push
and
in
icebp
ret
xor
xchg
in
cmp
out
mov
fmuls
or
cs
stos
jae
std
lds
pop
mov
lret
inc
and
push
pusha
loope
cmp
xlat
sbb
rorl
dec
imul
xchg
xor
mov
rcll
lcall
cwtl
xor
push
inc
lret
jl
aas
cmpsb
push
and
or
pop
rorb
and
mov
out
loope
lret
xchg
jbe
xchg
hlt
ss
out
subl
inc
mov
aad
sub
loop
sbb
cmp
shlb
dec
dec
mov
add
xor
mov
lahf
shl
mov
leave
jns
ret
push
dec
sbb
dec
pop
xor
loop
mov
xlat
shll
cmpsb
sbb
sub
jno
or
movsl
and
push
lret
mov
lcall
lret
inc
pop
or
sbb
lcall
out
sub
dec
les
pop
test
enter
into
push
dec
fcoms
push
movsl
std
xor
sub
daa
movsl
jle
mov
add
cmpsl
ret
ss
out
or
inc
xchg
ds
xor
in
aad
and
and
push
mov
mov
or
jno
mov
pushf
cmp
pop
std
push
scas
jmp
cmpsb
mov
jno
cwtl
movsb
xor
push
in
outsb
push
jle
mov
gs
jl
test
xlat
testb
imul
sub
lock
popa
mov
cltd
jae
or
call
or
pop
movsb
icebp
aas
test
add
gs
cli
es
bnd
cld
xorb
jb
scas
mov
data16
lods
fldl
mov
cmp
inc
sbb
xchg
fsts
clc
dec
roll
cmpl
lcall
pop
xor
enter
cmc
xor
js
pop
leave
xchg
jge
es
mov
arpl
inc
xchg
xchg
sub
lea
xchg
or
push
jle
and
mov
divb
pop
mov
inc
aas
inc
xchg
gs
in
iret
pop
in
mov
leave
pop
insb
dec
movsl
mov
nop
adc
xchg
xchg
imul
fdivl
les
sbbb
dec
inc
div
push
popf
sbb
filds
xor
fwait
icebp
inc
int3
shrb
jne
mov
pop
clc
fldenv
lock
dec
mov
mov
jno
movsb
mov
mov
ret
mov
jne
nop
cmp
xchg
cmp
pushf
arpl
lds
push
in
xlat
clc
mov
mov
push
push
and
sub
js
add
mov
movsb
add
mov
mov
cmp
xchg
cli
adc
add
pop
xor
dec
and
into
xchg
inc
dec
testl
fnstenv
clc
pusha
idivb
les
mov
xchg
mov
or
push
fnstenv
push
out
pop
xor
adc
push
adc
mov
fcomip
mov
imul
incl
inc
sub
out
push
cmpsb
jle
or
mov
mov
sub
xor
arpl
cmp
fisttpll
cmp
mov
int3
inc
pop
sbb
lock
ds
adc
cmpsb
jg
push
pop
scas
sbb
stos
inc
or
mov
ds
push
movsl
mov
aam
dec
cmpsb
bnd
pop
gs
fs
push
fnstenv
cmp
push
xor
xor
ss
je
mov
sti
sub
popf
mov
jmp
int3
adc
and
push
xor
ss
push
mov
xchg
push
mov
push
jne
mov
xchg
mov
arpl
mov
jbe
push
sub
or
mov
repz
cs
out
test
mov
in
adc
pop
add
dec
jle
outsl
movsl
add
dec
sub
addr16
push
mov
das
inc
ja
std
test
add
xor
test
xlat
xchg
cmpsl
dec
cwtl
stos
xor
mov
xchg
pop
popf
cmp
and
test
test
clc
inc
mov
das
dec
imul
jno
inc
fnstsw
fidivl
adc
stc
inc
sar
adc
shll
fs
or
dec
push
mov
adc
mov
xchg
loop
xchg
inc
mov
xchg
jb
sub
leave
jl
mov
stos
lcall
or
dec
lar
repnz
aaa
out
outsl
subb
mov
fistpll
and
lods
shlb
jle
jg
jl
mov
jecxz
fbstp
lods
sub
push
xor
add
lahf
rcrl
cld
add
test
sub
add
xchg
mov
js
pop
in
lock
fisttpl
mov
popf
mov
cmp
mov
xchg
in
push
mov
xor
xchg
jmp
inc
imul
inc
cmpsl
cmp
jge
and
mov
sub
lds
test
das
sbb
cltd
xor
pop
cmp
xchg
inc
mov
js
mov
loopne
sbb
mov
in
cmp
in
orl
dec
rclb
je
add
out
inc
sahf
mov
dec
pop
sbb
pop
je
and
addr16
add
mov
inc
cltd
adc
movl
inc
je
adc
adc
sbb
push
scas
xchg
iret
in
hlt
insb
fwait
test
pusha
xchg
adc
sbb
push
sbb
pop
hlt
adc
in
jae
mov
push
outsb
add
pop
in
add
cmp
jnp
jp
pop
dec
inc
fidivrs
sbb
jg
cmp
adc
mov
dec
inc
outsb
scas
pop
inc
add
fists
mov
cltd
mov
mov
addb
inc
or
xchg
or
ret
lods
orb
push
push
fwait
stos
adc
data16
xor
cmpsb
mov
adc
sarl
fisubl
outsl
adc
ja
out
jnp
and
je
xchg
bswap
cwtl
jg
dec
push
inc
xor
jnp
fisubl
sti
fistpll
pushf
cmpsl
cmp
xchg
push
add
fisubs
lcall
sbb
add
jno
push
add
dec
gs
lea
call
sub
add
mov
dec
mov
cld
dec
mov
hlt
testb
dec
stos
inc
push
movb
pusha
push
adc
pop
or
test
cmp
iret
cli
xchg
and
in
ficoml
es
sahf
hlt
inc
cmp
jbe
inc
sub
std
add
push
mov
imulb
mov
adc
sahf
pop
test
jmp
call
xor
mov
outsl
mov
jmp
fisttps
add
mov
in
mov
subl
out
repz
std
loop
cs
sbbb
nop
sub
es
out
pop
xchg
clc
in
jb
divb
test
fiadds
pop
outsb
mov
cmpsl
mov
dec
sbb
cld
fwait
push
mul
lret
xor
and
pop
inc
cmp
mov
fimull
int
ret
xor
ja
inc
mov
flds
stc
jne
test
jae
xchg
pop
jp
xchg
outsl
in
pop
ja
into
rorb
sub
in
mov
add
mov
jmp
adc
mov
inc
cmpsl
inc
mov
in
daa
cli
or
sbb
roll
xchg
pusha
lods
cmp
and
repnz
aaa
mov
mov
seto
pop
gs
mov
inc
sbb
scas
fsubrs
roll
imul
jne
jmp
test
dec
xchg
nop
or
out
clc
fwait
lea
mov
aas
daa
mov
out
mov
mov
ds
pusha
stc
scas
movsb
xor
sbb
iret
aas
push
jle
xchg
cmc
mov
lret
cltd
jno
lods
lahf
inc
jl
mov
testl
add
cmp
jmp
mov
and
repz
jne
xchg
or
leave
pop
out
addr16
repz
hlt
mov
movsl
cmpsb
jp
dec
stc
and
out
mov
repnz
adc
xor
mov
nop
lahf
scas
test
xor
push
insb
jno
xchg
xchg
adcb
mov
aad
hlt
mov
je
jg
sahf
cmp
lock
or
ror
add
jecxz
rorl
pop
daa
test
mov
mov
aaa
push
into
scas
inc
ja
pop
adc
add
or
jne
in
and
and
add
aas
mov
jns
or
shl
hlt
pop
leave
push
inc
xchg
int
ret
in
icebp
rorb
push
and
nop
aas
mov
shlb
dec
out
inc
shll
cld
dec
bound
mov
into
mov
push
jne
pop
mov
push
mov
cmc
div
test
and
push
push
jmp
sbb
out
fwait
in
nop
mov
scas
cltd
test
adc
lahf
mov
inc
loop
in
push
pop
lock
idivl
xlat
xor
xchg
ret
adc
fistpll
pop
xchg
dec
mov
push
jo
cmp
and
mov
neg
aas
cmp
fcoml
das
outsl
push
add
xchg
push
jno
dec
mov
cmp
rcrl
jmp
inc
inc
lret
mov
ss
lret
cmp
adc
stos
fs
enter
adc
repnz
pop
xlat
sbb
xor
jge
cmp
xlat
dec
in
xor
push
ret
ret
sbb
aam
aas
xor
out
inc
pop
xchg
arpl
add
push
imul
inc
popl
pop
subl
fadds
xchg
pop
addr16
and
and
mov
pop
jl
or
mov
or
xorl
lahf
pop
ss
mov
lock
dec
les
repz
imull
out
mov
inc
testl
adc
insl
cmp
ficoms
outsl
and
aaa
loope
das
sub
pop
sbb
int3
sbb
lret
pop
pop
ja
shrb
dec
xchg
arpl
pop
bound
push
out
or
jns
outsl
insl
cmp
lea
push
adc
movsl
adc
std
xchg
dec
aas
fs
les
icebp
sbb
int3
cmp
cltd
add
sub
jne
add
jmp
lods
lahf
and
rorb
mov
jp
adc
mull
outsl
mov
rolb
int
int3
mov
rcll
mov
jle
cmc
cltd
mov
inc
setnp
inc
mov
insl
adc
mov
test
push
mov
stc
dec
call
pop
fsub
cwtl
mov
push
pop
xor
js
sahf
pop
dec
xchg
push
lods
je
int3
mov
xor
pop
jns
xchg
dec
pop
xor
sti
pop
dec
je
jl
mov
push
ss
mov
jne
xchg
addl
aam
or
add
cmc
scas
or
xchg
mov
into
in
ret
je
fs
lcall
adc
stc
outsb
xchg
xor
jl
mov
dec
imul
data16
or
lods
push
lcall
cmp
lock
stos
rol
daa
sub
int
int3
sbb
push
mov
popa
jmp
shr
in
mov
ffree
imul
mov
arpl
repz
push
stc
jmp
aaa
jbe
add
or
sbb
xchg
lods
data16
mov
mov
ja
jmp
into
insb
jmp
push
mov
xor
mov
sub
or
mov
test
imul
popf
test
adc
addr16
into
fists
mov
lret
or
jae
scas
xor
test
rorl
pop
insl
sahf
push
imul
lods
mov
movsb
js
popf
dec
fs
daa
mov
outsb
mov
and
xor
mov
test
sbb
pop
popf
fcoms
xor
lahf
xchg
sub
push
mov
push
or
xchg
sub
or
xchg
mov
fists
cmp
sbb
std
fsubl
fnsave
loope
mov
sti
out
jecxz
mov
xor
outsl
dec
mov
testb
loope
pop
jp
mov
pop
pop
in
ljmp
loope
divb
push
mov
mov
das
mov
icebp
popa
cmc
mov
push
jl
mov
push
ja
pop
or
daa
scas
pop
fnstcw
das
jae
addr16
inc
adc
sti
dec
std
cmp
sbb
push
sti
mov
rcll
push
popf
cmc
mov
mov
outsb
pop
sbb
cmp
pushf
pop
push
add
out
xchg
push
push
push
enter
movsb
cmpl
mov
jae
stc
jecxz
cmp
or
jbe
pop
test
mov
xchg
scas
outsl
push
mov
and
repnz
push
mov
sahf
sbb
jne
dec
sahf
xor
fisubrs
ds
add
lea
lret
insb
shll
mov
ds
mov
icebp
pop
add
push
outsl
bound
xchg
add
scas
push
mov
addr16
xchg
lods
mov
sub
pop
les
mov
jecxz
jbe
jno
cmp
clc
rcll
popf
xchg
pusha
movsb
into
dec
pop
or
std
cmp
js
stos
mov
ds
and
fcoml
jge
cli
idiv
out
lods
leave
dec
push
lahf
push
push
inc
sbb
fimull
mov
mov
and
add
sbb
ss
dec
lret
lahf
push
cmp
pop
dec
sub
xlat
adc
mov
adc
cmp
jbe
addb
jp
pop
arpl
out
mov
mov
inc
jg
leave
cmp
ret
mov
mov
adc
jne
repz
jge
js
mov
mov
inc
push
sub
shll
cmp
ja
ljmp
testl
mov
lret
ljmp
orb
mov
shrb
inc
cmp
push
outsb
jl
ja
ret
adc
cmp
in
jmp
in
inc
mov
cmp
lcall
aas
pushl
stos
sbb
or
xchg
lock
fadds
pusha
loope
cmp
mov
pushf
xor
inc
ret
push
and
fwait
pop
testl
popf
lret
sbb
pop
push
loope
lods
dec
dec
inc
fistl
push
faddl
sbb
inc
movsb
ja
fmull
cmpsb
aam
fcmovnbe
jge
sbb
cmpsb
daa
and
test
push
ljmp
mov
inc
pop
jns
pushf
mov
dec
pop
lcall
mov
push
inc
ljmp
inc
pop
xor
push
popa
out
scas
out
cmpsb
dec
bound
jae
aas
in
fsub
dec
sbb
xor
xor
std
and
inc
rcl
jecxz
and
inc
push
je
mov
sub
cmp
sub
push
inc
movsl
mov
push
dec
int
fnstsw
mov
out
mov
push
out
cmp
sub
mov
pop
ret
adc
cmp
jle
decl
ret
das
aas
lahf
sub
shrb
xchg
dec
push
dec
cs
shrb
jl
adc
testb
xchg
xchg
mov
scas
xor
icebp
cli
jg
js
pop
ja
sbb
jne
add
pusha
xor
and
mov
rorb
icebp
adc
lret
xlat
ss
inc
addb
and
ss
scas
and
out
aaa
clc
lahf
adc
sarb
xor
pop
xor
cmp
jge
add
ret
sahf
xor
out
les
push
mov
nop
movsl
inc
pop
clc
mov
je
dec
lds
int3
mov
or
out
shll
in
push
pushf
daa
repnz
test
add
jg
shr
sbb
pop
xor
stos
stos
mov
xchg
fnstcw
js
fdivrl
lret
es
ret
adc
sbb
push
mov
mov
stc
jne
inc
loope
or
iret
jne
stos
push
jbe
inc
jnp
lds
xbegin
push
int
mov
aad
xchg
bound
into
aas
push
dec
stc
dec
pop
nop
popf
mov
sbb
std
add
and
push
stc
fdivrl
fwait
mov
pop
sbb
pop
add
mov
pop
dec
inc
pushf
or
mov
lcall
adc
cli
repnz
xchg
pop
push
inc
leave
fdivr
pushf
dec
push
ljmp
outsl
jmp
mov
xchg
and
push
lret
mov
xor
pusha
push
addr16
push
adc
jge
adc
sub
fdivl
das
adc
cmp
add
jb
and
scas
jp
sbb
pop
ja
movsl
clc
sub
sbb
cs
inc
roll
xor
clc
mov
add
lret
int
cmc
or
push
insb
xor
lock
xchg
and
adc
sub
xor
xorl
cmp
pushf
testb
popf
mov
iret
test
cmc
test
sub
dec
bound
fsubrl
arpl
push
adc
stos
aaa
push
mov
mov
dec
cmp
inc
sbb
adc
push
arpl
mov
push
sub
ds
and
add
fldt
jo
ja
push
jl
pop
movsb
sti
mov
stos
inc
mov
cmp
ret
ror
add
ror
mov
test
ds
cli
pop
inc
aad
jbe
loopne
lods
add
lret
dec
mov
in
dec
stos
jae
push
jge
into
adc
inc
fsubrs
scas
xor
xor
push
jle
mov
lds
mov
movsb
outsb
or
jmp
mov
enter
rclb
sub
cmp
in
xchg
push
mov
iret
rorb
jae
ds
jo
stos
cmp
cltd
cmpb
dec
pop
pop
sbb
xchg
jge
jb
icebp
xchg
repnz
call
mov
sub
xchg
call
mov
mov
pop
jge
sbb
fnstenv
xor
and
mov
jg
adc
mov
jo
nop
adc
adc
test
mov
pop
pop
fidivrl
mov
cmp
int3
sbb
xchg
scas
cmp
int3
mov
dec
add
pop
mov
inc
in
mov
mov
sti
sub
les
rol
pop
fistpll
cmp
mov
push
dec
xor
lock
add
cmp
cmp
fisubrl
clc
testl
clc
pop
in
aad
es
xor
mov
inc
outsb
cmp
cltd
sub
mov
fldenv
or
int3
cmp
jno,pn
sbb
sub
sub
clc
lret
cli
inc
pop
lcall
scas
push
sahf
out
lods
mov
fistl
jge
jmp
or
test
nop
xchg
xchg
push
std
daa
mov
sub
orb
inc
xchg
xor
addr16
out
ljmp
jp
cmpsb
shll
fwait
xchg
sub
push
pushf
into
outsb
iret
inc
movsl
jns
movsl
push
jecxz
xchg
adc
and
and
or
sti
mov
int
loop
sub
std
pop
scas
inc
jmp
scas
sbb
lret
testb
fsubrl
aad
rorl
ss
jo
cmpsb
pop
testb
jo
xor
rorl
hlt
sub
push
pop
cmp
aaa
jnp
shl
cmp
mov
stos
sub
stos
les
sarl
dec
mov
mov
sub
mov
es
mov
sbb
addr16
in
repz
push
jl
test
jns,pn
or
cwtl
sub
adc
mov
loop
into
inc
mov
adc
add
pop
fs
cmpsl
je
or
inc
pop
mov
sbb
test
add
lods
adc
ret
fwait
rcrl
arpl
out
inc
lret
dec
iret
test
lahf
xchg
out
js
lea
fwait
iret
cld
sahf
xchg
xchg
xchg
pusha
icebp
shll
push
adc
into
push
lahf
imul
push
jbe
stc
adc
cli
rorb
push
mov
pop
repnz
jmp
push
jns
in
ret
or
and
ja
loop
dec
add
iret
xchg
dec
mov
pop
mov
add
add
out
jge
shll
cwtl
gs
cmp
das
sub
push
sbb
repnz
gs
sti
mov
das
je
stos
or
pushf
push
shll
popf
jmp
cli
into
jp
shrb
push
pop
std
cmp
in
pop
push
ret
inc
pop
test
push
cmp
push
in
sbb
lret
sub
push
xchg
mov
add
cmc
dec
sub
push
and
cmp
ljmp
add
int
cmpsl
xchg
aas
out
push
bnd
imul
jmp
je
es
sub
and
xor
scas
push
pop
jmp
xchg
ja
mov
dec
fs
mov
jmp
out
xchg
or
pushf
stos
mov
add
push
push
fisubl
lahf
les
pop
dec
test
dec
loopne
push
or
cmp
inc
sub
xchg
xor
dec
outsb
mov
sbb
ret
scas
xchg
pop
push
add
mov
cmc
xor
frstor
rol
dec
and
inc
and
inc
dec
and
les
cmp
cmp
mov
in
ds
push
mov
cmp
xlat
mov
aaa
popa
call
pop
cmc
lret
mov
inc
rorl
cmp
push
in
sub
adc
lcall
adc
fidivrl
mov
cltd
pop
ret
adc
shll
imul
jb
mov
jno
std
cs
push
mov
or
sarb
inc
mov
imul
rcl
lret
sti
add
dec
pop
sbb
cltd
dec
inc
mov
inc
data16
push
call
and
or
std
repnz
popf
test
pushf
pop
cmpsl
or
lods
pop
popa
cmp
ds
orb
hlt
mov
sub
imul
jb
dec
and
sub
mov
xchg
mov
test
je
dec
movsl
js
int
sbb
mov
pop
dec
push
scas
add
mov
mov
cltd
lret
cmc
push
int
dec
inc
push
into
aad
gs
mov
fsubrl
insb
xor
aad
jno
lcall
lcall
or
xchg
add
fwait
rcll
fs
xchg
repnz
int
pop
sarb
jg
sbb
adc
incb
fdivrl
xchg
out
xchg
sbb
lcall
dec
push
xchg
dec
call
or
sti
popa
push
js
dec
and
jmp
fildl
lret
sbb
into
mov
dec
sbb
shrb
in
ret
ss
repz
sub
and
in
pop
and
adc
or
sbb
inc
add
test
clc
clc
or
lret
stos
mov
lret
nop
scas
shrl
movsl
pop
hlt
adc
mov
xor
push
mov
sbb
pop
hlt
pop
imul
repnz
ficoms
scas
sub
push
fisttpll
lea
sbb
insl
std
hlt
jge
mov
negb
jns
jecxz
enter
in
sub
or
xorb
jbe
rclb
stc
or
test
out
add
inc
dec
dec
jecxz
data16
sti
mov
sarb
pop
ret
aaa
mov
or
sarl
popa
ljmp
lds
nop
jmp
mov
and
int3
mov
jmp
and
jle
pop
es
xlat
int3
mov
add
in
sbb
fcomp
jnp
sub
cmp
jnp
jge
adc
jne
pop
dec
push
add
out
add
sub
orps
and
les
xlat
arpl
shl
xchg
jo
mov
or
adc
adc
mov
out
les
lret
inc
xlat
add
and
fwait
jbe
sub
and
mov
es
dec
int
pop
sub
inc
ljmp
inc
mov
jnp
pop
ds
ret
push
sbb
scas
je
cmp
ljmp
dec
mov
jb
adcl
sbb
es
scas
jbe
movsb
xor
es
push
xchg
pop
fisubrs
lret
test
out
and
notb
int3
iret
dec
lea
adc
dec
push
dec
mull
inc
and
out
rcrb
cmpsl
adc
lods
push
outsl
lret
fldl
mov
or
outsl
lock
mov
insl
xor
sarb
mov
xchg
ret
insb
stc
add
fcoms
in
jecxz
mov
or
push
and
stos
mov
lret
push
sub
push
add
sub
jno
pop
add
das
mov
pop
pusha
mov
dec
ret
cmpl
jge
sbb
jl
ja
inc
movsl
jge
dec
push
mov
ja
das
sbb
rolb
adc
mov
sbb
push
into
dec
fnstenv
js
sub
inc
mov
jecxz
dec
test
movsl
push
jae
dec
lret
adc
adc
mov
fstpl
mov
gs
lahf
mov
push
aad
mov
sub
mov
push
pop
inc
shll
dec
cld
push
push
insl
rclb
cmpb
leave
or
sbb
jo
mov
enter
pop
cmp
std
mov
lods
jmp
pop
mov
xor
outsb
mov
int
ficomps
call
mov
leave
mov
in
dec
repz
mov
cli
aas
loop
call
inc
push
fsubrs
jne
pop
or
in
mov
xor
mov
inc
outsl
mov
xor
out
je
mov
rcr
cld
mov
jmp
push
lcall
aaa
mov
cmc
or
mov
fsts
push
cmp
pop
pusha
pop
mov
lods
pop
jg
push
stos
sbb
mov
sbb
mov
sub
daa
ljmp
lods
xlat
cmp
cmp
xor
push
jp
leave
aad
scas
sbb
bound
std
sub
inc
leave
mov
ljmp
jns
and
aam
mov
sbb
mov
adc
pop
lcall
pushf
cmpsb
ret
cmp
mov
and
mov
push
xor
jne
int3
popa
ret
xchg
lods
mov
jb
jg
popf
sbb
cmp
and
mov
ja
inc
lds
push
out
mov
sbb
sbb
daa
add
xchg
iret
xor
js
push
hlt
test
push
lahf
sbb
cmp
inc
mov
xchg
jo
insl
xor
lock
gs
jp
int3
xchg
cwtl
lods
mov
ss
pop
xor
int
push
mov
lahf
ljmp
jle
mov
xchg
jbe
mov
sub
rolb
add
mov
add
sbb
pop
stos
lahf
ja
aaa
test
call
lods
mov
xor
dec
rcr
mov
sbb
cmp
mov
in
jns
xchg
das
mov
adc
inc
out
mov
xchg
add
inc
test
mov
shlb
into
ret
addl
les
testb
les
xor
xchg
sbb
imul
xchg
nop
repnz
test
sti
and
mov
movsl
push
movsb
fwait
inc
cli
out
and
int3
mov
std
sbb
das
je
adc
push
pop
jnp
ds
cmc
je
jnp
ret
fdivrs
lock
adc
adc
lret
cmp
mov
add
or
test
add
fs
cli
and
sti
mov
mov
mov
in
jge
cmp
inc
fistps
movsb
mov
sub
jae
gs
mov
mov
cli
inc
add
jae
mov
adc
mov
fidivs
jne
pop
xchg
fisttpll
psrld
outsl
sahf
sarl
iret
popa
pop
mov
insb
xor
decl
pop
mov
das
pusha
xchg
add
fwait
mov
loope
add
lahf
sub
enter
push
xor
sub
xchg
mov
dec
push
adc
mov
xchg
jne
cmc
jns
adc
mov
inc
xchg
jg
sub
pop
imul
std
ds
cld
push
push
jo
fsub
insl
out
mov
jb
mov
xchg
lock
aam
mov
clc
adc
add
ljmp
pop
add
sub
jb
push
jge
inc
xor
xor
repnz
push
cmp
jo
call
sti
popf
sbb
insl
adc
push
cmpsb
jl
repnz
xchg
daa
aam
loopne
sub
inc
test
dec
loop
push
sub
push
push
push
mov
jne
loop
div
fdivr
subb
push
cld
xor
add
add
push
sbb
pusha
cmp
dec
daa
fcmove
sub
mov
pop
leave
pop
inc
movsb
adc
jns
cmpsl
mov
or
lea
clc
dec
repnz
mov
cmovne
pop
dec
mov
mov
mov
fildl
cmp
adc
lcall
mov
lahf
sub
jne
mov
xchg
xchg
stc
push
mov
pop
cwtl
push
fs
xchg
sub
aas
push
cmpsl
cmp
xchg
jp
push
jg
pop
mov
push
xor
scas
xor
jne
adc
dec
sahf
cwtl
jge
dec
icebp
dec
out
sahf
push
and
cld
or
aas
ret
ss
xchg
mov
mov
add
test
inc
fdivrs
pushf
fabs
jo
sub
stc
mov
mov
add
sub
mov
push
mov
fisubs
or
push
test
lahf
dec
mov
sbb
test
adc
imulb
aam
adc
mov
inc
in
mov
loop
ja
int
inc
pop
xor
cmpsb
xchg
cmc
dec
dec
push
pop
repz
mul
xchg
pop
xchg
je
addl
cld
add
mov
imul
repnz
jg
call
fwait
repz
cwtl
int3
xchg
fwait
adc
mov
xor
lods
inc
repz
dec
jg
out
and
movsb
and
out
les
xlat
pop
mov
repz
pop
pop
push
das
sarl
jl
imul
fdivl
ret
lock
jecxz
sbb
pushf
dec
adc
inc
xor
mov
sub
adc
and
out
lea
mov
jp
xchg
das
jns
loop
mov
sbb
test
mov
outsb
or
xor
mov
push
xor
in
dec
cmp
rclb
sbb
and
jns
adc
push
sub
das
sbb
mov
pop
pop
fadds
cmp
adc
add
jns
outsb
xchg
xchg
pop
jno
dec
push
adc
pop
adc
mov
xor
mov
clc
sbb
paddsw
test
mov
or
add
clc
hlt
sbb
fidivrs
adc
inc
xor
sub
xor
mov
sbb
cmp
ja
in
aad
sbb
xchg
arpl
fldenvs
int
inc
shrl
jle
sbb
orb
jo
iret
fsubrs
insb
hlt
pop
pop
or
cmp
sub
lods
mov
dec
dec
nop
scas
sub
stos
or
rcr
jmp
inc
icebp
fs
mov
mov
pop
pop
dec
or
push
fdivrs
hlt
add
inc
xor
cmp
push
ror
jo
dec
std
lret
adc
aas
mov
mov
add
mov
mov
push
repnz
inc
test
xchg
mov
adc
decb
out
add
xor
dec
push
stos
push
cltd
mov
jo
aaa
cmc
inc
mov
mov
cli
jae
sbb
lret
xchg
jno
or
jnp
dec
in
lret
mov
ficomps
push
or
ss
sar
xor
push
out
fs
mov
into
andl
in
sarl
jb
push
out
push
or
xchg
orb
test
xchg
aaa
cmp
dec
in
sbb
cs
add
pop
sahf
mov
aad
shrl
frstpm(287
dec
enter
out
sub
cmpsl
xor
sub
outsl
xor
lds
andl
je
sbb
mov
rorb
jno
rorb
sub
rcrl
and
arpl
cwtl
mov
sbb
dec
pop
inc
xlat
cltd
test
lock
push
or
ja
inc
xchg
aas
lods
or
pusha
pop
jle
mov
les
leave
inc
jnp
sahf
cmp
js
xchg
sub
cmp
cmp
inc
ja
adc
enter
and
mov
sub
lods
pop
xchg
movsb
mov
sarb
jmp
ds
test
jge
pop
mov
rcrb
sbb
in
adcb
mov
xchg
clc
cmpsb
fsubs
pop
aad
mov
xchg
dec
popa
and
add
xchg
mov
dec
stos
imul
mov
mov
movsb
lea
shll
imul
stos
mov
and
into
scas
jg
out
xlat
test
mov
pop
test
cmp
mov
sub
pop
in
leave
imul
pop
cmp
sbb
pop
loopne
push
vmovntpd
xchg
mov
scas
xor
adc
pop
int3
in
mov
xor
push
sarl
in
mov
xchg
lock
shl
movsb
rcrb
daa
mov
shll
pop
fldenv
sarb
into
aaa
pop
test
out
mov
outsb
fwait
xlat
aam
fwait
lock
inc
dec
pavgb
out
fldcw
and
pop
loopne
dec
mov
mov
gs
lea
push
arpl
shrb
stc
mov
std
adc
push
xor
xchg
inc
cwtl
fs
pop
stos
push
sub
mov
push
add
xor
mov
pop
sbb
in
add
mov
leave
jl
xlat
push
js
frstor
cmc
inc
dec
jge
fmuls
ret
sub
push
cmp
popf
dec
aam
xor
divb
pop
cmp
push
mov
push
and
ret
outsb
or
stos
sbb
lock
cmp
pop
sub
aaa
in
pop
or
pop
xchg
in
xor
jo
ss
jl
xchg
mov
imul
pop
push
and
cwtl
jle
xor
roll
cmp
inc
and
jb
sbb
adc
jmp
xchg
inc
add
add
cltd
jle
xchg
jge
cmp
adc
movsl
sahf
movsb
cmp
mov
xchg
shlb
popf
dec
push
inc
xor
cltd
mov
js
out
dec
jns
repnz
in
fidivrl
adc
sbb
cmp
jns
dec
mov
mov
pop
jno
call
sub
negb
and
stos
inc
jecxz
mov
roll
mov
xorl
jae
stos
shll
out
mov
test
push
sub
int3
stc
popa
test
aaa
inc
jmp
jl
int3
sub
and
in
fmuls
mov
icebp
cmp
xor
sbb
bnd
test
fstps
adc
imul
pushl
lds
int
imul
hlt
outsb
add
add
addl
in
mov
mov
and
mov
mov
mov
inc
sbb
mov
lret
mov
mov
push
fwait
in
mov
add
rorl
mov
pusha
push
hlt
or
ss
adc
cs
lret
jp
pop
movsl
test
jl
out
loope
adc
push
jp
xchg
je
add
mov
sub
lret
and
cmpsl
push
inc
xorl
or
xlat
ret
addr16
mov
push
inc
icebp
imul
or
cmpsb
xchg
sbb
ret
cmpsl
push
mov
or
cli
lcall
inc
mov
jecxz
incb
rol
inc
push
push
xor
jbe
mov
dec
sub
pop
xor
shl
mov
lods
jne
pop
sarb
jo
rclb
rcrl
leave
in
lea
mov
cmp
inc
lret
iret
xchg
and
fdivs
mov
push
idiv
mov
mov
mov
roll
jne
out
push
add
sub
inc
or
xchg
cmpsb
push
mov
mov
mov
sub
inc
mov
imul
push
push
pop
or
loopne
xchg
sbb
sub
cmp
xchg
out
mov
dec
std
pop
add
stc
dec
jns
es
jmp
gs
jno
dec
mov
pop
push
inc
jb
mov
enter
sbb
bound
call
mov
push
cmpsl
stc
popl
test
shlb
rcr
hlt
int
pushf
inc
cmp
push
out
std
js
loope
jp
popf
test
pop
jecxz
and
and
outsb
sarl
out
lcall
dec
dec
jge
ss
xchg
add
pop
ss
ficoms
insb
dec
cmp
es
sub
stos
ds
movsb
stc
movsl
inc
pop
arpl
xchg
dec
sahf
mov
out
pushf
in
mov
ss
sub
lcall
xor
pushf
fdiv
shll
and
mov
mov
mov
jbe
fdivrl
cmp
leave
cmp
cltd
dec
gs
rolb
inc
fs
inc
mov
jbe
icebp
push
cmp
jg
sub
xchg
shrl
jecxz
mov
pop
adc
orb
mov
insl
pop
std
leave
xor
and
mov
lcall
dec
shrl
inc
cmpsl
and
addl
lret
in
popa
and
mov
or
xchg
loope
sub
nop
cmp
pop
addr16
hlt
and
das
jae
adc
pop
xor
push
or
mov
and
and
sbb
je
outsl
popf
mov
das
pop
idiv
dec
das
push
xchg
pop
or
ret
mov
insb
faddl
xchg
fucomi
inc
adc
sub
pop
lods
push
movsb
sahf
dec
gs
mov
stos
jne
mov
out
adc
stc
ss
aam
popa
xchg
cmp
sbb
push
addb
pop
cmc
jecxz
cltd
adc
aaa
test
mov
into
sbb
xchg
insl
out
push
jmp
daa
cmp
adc
mov
add
int3
fwait
int3
push
mov
cmpsb
mov
fs
imul
push
mov
mov
scas
cmpsb
icebp
imul
dec
fidivl
push
xor
jmp
rol
sub
arpl
movsb
xor
fistpll
addr16
mov
in
and
mov
into
mov
inc
ficompl
ljmp
mov
mov
xor
in
mov
sub
jp
int
insl
test
mov
xor
and
cli
mov
in
hlt
cmp
popf
xchg
aam
and
lods
xor
mov
repnz
xchg
stos
push
mov
pop
mov
jae
es
aad
repnz
in
daa
inc
sbb
orb
lods
stos
mov
fisubrs
imul
shl
stos
insb
push
pop
sbb
les
add
xchg
cltd
cmp
movsb
sbbl
sbb
adc
inc
push
lock
out
pushf
pop
jno
lret
cmpsl
inc
xchg
ss
xchg
lcall
cwtl
push
repnz
pminsw
mov
push
shll
sbb
test
sub
imul
sbb
mov
cli
insb
mov
mov
bound
ret
pop
sbb
mov
fiadds
pop
imul
rclb
fmuls
and
mov
js
adc
dec
out
xor
mov
je
mov
ret
jp
lret
bound
jmp
adc
cli
or
mov
lret
xchg
idiv
mov
shlb
mov
push
fdivr
cmpsl
sti
ds
mov
lahf
adc
ljmp
mov
imul
movb
out
test
ds
lret
imulb
mov
fwait
insb
lea
stc
jae
mov
lret
fmull
xchg
push
imul
or
in
inc
fisubl
inc
sbb
adc
sub
cmc
popa
cli
pop
into
data16
popa
lcall
sahf
push
sbb
lret
push
cmp
or
popa
jno
sbbl
mov
adc
loopne
pop
pop
in
mov
in
mov
pop
xor
lds
mov
repnz
shll
push
ret
dec
pop
dec
add
pop
pop
cld
inc
push
call
out
mov
rcrl
push
sbb
ss
pop
push
ss
or
jbe
lods
lahf
mov
pop
adcl
out
fistps
xchg
inc
dec
addr16
outsl
aam
loop
pop
cs
cli
nop
std
aas
fnsave
out
out
fisttpl
pop
out
mov
pop
cmc
in
and
sarb
andl
sahf
sub
inc
mov
sti
mov
pop
js
lahf
mov
mov
das
popf
cs
xchg
cmp
and
xchg
stc
pop
enter
stos
xchg
sahf
cld
jg
mov
std
jnp
lods
mov
in
pop
jl
mov
andl
lods
shll
xchg
xchg
shll
dec
icebp
push
or
pop
adc
call
mov
sbb
push
cmpsl
xchg
jge
in
xchg
jb
adc
pop
cmp
cwtl
mov
and
dec
mov
cmpsb
mov
mov
mov
int3
aas
sarb
add
andl
push
sbb
dec
enter
ret
cmpsb
xchg
push
imul
add
sbb
ja
jmp
mov
rcrb
dec
stc
inc
dec
sbb
fsubrs
pop
out
push
push
sahf
mov
add
cmp
cmp
inc
or
lods
hlt
mov
rcr
inc
mov
std
aad
xchg
inc
jne
push
jo
xchg
or
adc
sahf
jno
adc
sub
loopne
mov
scas
nop
into
movsl
mov
inc
loopne
sub
arpl
xchg
fbld
or
xchg
mov
shr
repnz
sbb
jmp
repnz
sbb
mov
popa
sub
inc
jno
inc
cmp
and
cmp
lds
test
lea
cmc
sbb
cmpsl
aam
or
dec
repz
and
push
decl
xor
ljmp
sub
push
jne
dec
jle
test
cmpsb
cmc
ret
and
lahf
mov
inc
rcrb
add
in
mov
cmp
push
or
mov
fsubrs
es
lahf
lahf
xchg
xchg
aaa
and
mov
xchg
in
repz
add
pop
outsb
jo
stos
ja
add
ret
cli
andl
sub
sub
cmc
int3
mov
cmp
xor
jl
jo
mov
ret
push
mov
mov
pop
inc
xchg
fwait
push
and
mov
or
cmpsb
sub
pushf
sbb
xchg
adc
mov
inc
stos
data16
incb
mov
sbb
jb
lret
lahf
gs
insl
sub
jp
push
mov
ret
add
xchg
push
xchg
loope
push
iret
idivb
mov
test
sub
and
out
mov
or
cmp
mov
pushf
repz
cmpsl
stos
pop
add
ljmp
cmpsb
and
shrl
jmp
push
and
lcall
jno
sbb
ds
testb
xchg
mov
inc
push
push
push
jle
arpl
aad
sbb
mov
loop
mov
aas
add
sub
dec
lret
fbld
fcoml
iret
dec
lock
loope
sbb
aam
sbb
ret
jne
and
aas
js
pop
push
xor
lods
repz
push
sahf
test
pop
aam
call
push
or
mov
inc
mov
cld
mov
push
cmp
cwtl
mov
mov
pop
and
xchg
pop
es
pop
adc
cmp
mov
mov
mov
in
add
lea
icebp
cwtl
and
xor
jp
fs
out
test
jmp
cmpb
cld
mov
xor
dec
test
pop
ss
ret
and
into
mov
mov
cmp
mov
inc
pop
in
sub
mov
sahf
xchg
aaa
pop
lds
adc
mulb
xor
sbb
inc
push
jbe
dec
mov
data16
fs
gs
mov
xor
je
data16
jle
int
push
fcmovbe
ss
pusha
imul
cwtl
stos
icebp
or
jg
xchg
jmp
imul
enter
sub
cmp
cmpsl
pop
dec
lcall
and
mov
xor
mov
push
xor
mov
sub
xor
xor
xchg
popa
fcomi
repnz
xor
mov
dec
and
rorb
xorb
push
pop
scas
inc
mov
popf
das
into
mov
iret
mov
adc
cmp
lret
jl
inc
push
jmp
lret
gs
ret
fstps
addr16
adc
dec
nop
test
xchg
dec
sahf
cmp
rcrl
fs
scas
subl
cmc
xor
jbe
out
fcomip
fldenv
lds
data16
jmp
or
orb
scas
dec
orl
mov
jmp
rorb
sbb
inc
sbb
imul
mov
ret
sub
hlt
sub
or
dec
mov
or
push
mov
dec
insb
cmp
cmp
jmp
xor
push
xor
jmp
rclb
mov
pop
and
repnz
mov
rep
pop
in
push
dec
mov
mov
xchg
call
rcrb
repz
fcmovb
cmp
out
aam
mov
insl
arpl
jecxz
aaa
lahf
pushf
xor
mov
incb
movsl
insb
adc
test
stos
fistps
rorb
dec
sbb
fsubs
in
sbb
xchg
dec
out
ret
cmp
inc
test
add
inc
jmp
inc
and
stc
out
mov
lds
or
outsb
mov
mov
lcall
xchg
jno
pop
inc
pop
dec
call
mov
adc
xorb
jne
jle
cmp
cmp
cmp
ret
mov
enter
in
in
in
enter
xor
mov
scas
mov
sub
push
rolb
xor
xchg
ss
mov
insl
add
cmp
pop
jl
rclb
ret
push
sbb
push
lret
dec
adcl
in
jno
cmp
addl
imul
adc
sbb
xchg
faddl
jp
xchg
add
adc
mov
stos
data16
or
and
rclb
fdivp
push
and
dec
dec
idiv
subl
sbb
push
sahf
sahf
pop
inc
xchg
and
lcall
push
cmpsb
js
push
fcompl
push
inc
mov
daa
into
dec
or
insb
mov
jl
test
nop
xchg
pop
and
xor
rcrb
fstpl
in
popf
scas
and
mov
mov
push
cmp
aas
iret
push
sbb
hlt
pop
iret
insl
lret
xor
mov
test
sub
int
scas
nop
ret
mov
insb
imul
mov
aas
sub
mov
sti
mov
mov
fnstsw
xchg
iret
insl
outsb
or
xchg
mov
int
push
mov
mov
pop
jg
repnz
fwait
sub
fidivrl
int
sub
insb
inc
movsl
push
push
xor
clc
xchg
push
mov
cmc
xor
xchg
push
pop
sub
xor
in
jecxz
sbbb
mov
cmp
xor
mov
jo
movsl
negb
lods
cmp
inc
repnz
cmp
inc
pop
or
call
jb
outsl
lahf
jno
popa
dec
clc
or
sub
movb
les
ret
movsl
sub
adc
mov
addr16
cli
ret
stos
sub
add
lock
addr16
inc
add
int
ficompl
cmc
push
sub
xchg
ss
imul
fnstenv
imul
push
mov
jno
sbb
out
cmpsb
or
or
inc
xor
add
cmovno
xchg
or
add
popf
fnstsw
pop
dec
pushf
lret
insb
jns
jecxz
sahf
popa
cmpsb
cld
inc
mov
mov
cmc
mov
mov
bound
sbb
ret
push
mov
shll
pop
out
jno
mov
insl
xchg
int3
leave
or
xchg
jae
adc
adc
add
mov
cli
in
test
mov
loope
shlb
jbe
or
jne
xchg
cmp
ret
sbbl
adc
pusha
cmc
inc
shrb
xchg
adc
pop
ficompl
pop
aad
mov
ret
cmp
in
pop
cltd
jne
les
inc
jbe
fs
movaps
movsb
mov
sub
mov
loop
push
cmp
jecxz
scas
mov
add
and
jecxz
shll
les
sbb
sub
sti
es
push
iret
cmp
xchg
out
adc
cli
loop
or
aam
test
jo
cs
lahf
jb
dec
sub
inc
or
cmp
or
mov
cmp
mov
sbb
and
mov
sbb
pop
aam
negl
mov
sti
cmp
dec
xor
jle
inc
scas
test
ret
insb
outsb
pop
mov
add
adc
xlat
mov
cmp
cld
ret
lds
fdivrl
add
inc
lock
andl
ss
dec
push
inc
aas
sub
jle
test
xlat
xor
mov
mov
repnz
sahf
loope
cltd
pop
push
loop
cltd
and
stos
dec
jp
aad
mov
mov
cmp
ljmp
mov
mov
out
cld
shl
xchg
mov
sbb
lods
pop
xorb
mov
aam
loopne
dec
jge
dec
mov
cmp
bound
cwtl
push
mov
mov
std
ja
mov
out
mov
stc
push
mov
ret
pop
and
rcll
cld
in
imul
inc
rcrl
xchg
xor
lods
mov
jb
mov
stc
shl
xchg
push
cmp
push
bound
sub
loope
jnp
xorb
mov
movsb
test
adc
mov
jo
out
clc
mov
dec
test
sub
inc
sub
hlt
ret
loop
repnz
jp
pusha
pop
jno
xchg
sti
pop
adc
mov
std
insl
and
sbb
push
pushf
daa
jno
hlt
push
push
mov
xor
or
adc
test
dec
ds
std
pop
xor
fs
sbb
ljmp
std
stos
pop
jg
inc
gs
enter
sub
shll
jae
js
push
dec
mov
mov
ret
outsl
cld
cmp
imulb
das
fdivs
cmp
fs
jo
sub
or
loopne
cld
fdiv
outsl
xchg
rcrl
pop
inc
inc
or
gs
push
mov
jmp
jecxz
sbb
andl
and
clc
mov
pop
aaa
xchg
mov
mov
mov
push
add
enter
push
insb
mov
notb
cmp
jae
cmp
xor
xchg
sbb
fisubl
adc
push
cmpsl
dec
xor
inc
pop
add
into
sub
loopne
fsubl
nop
pop
mov
out
xor
stc
push
enter
inc
adcl
xchg
cmp
daa
lret
cmp
mov
push
les
lahf
iret
pushf
nop
inc
icebp
stc
in
mov
mov
xchg
addb
xchg
addl
lods
push
xor
xor
rcl
and
inc
mov
mov
mov
rclb
in
repz
mov
xor
dec
push
lret
jecxz
stos
js
insl
das
mov
add
push
mov
or
in
ljmp
jnp
je
in
lret
mov
test
rcrl
xor
push
call
mov
mov
xchg
ret
adc
xorb
and
add
jne
frstor
in
pop
add
js
cmpsb
sbb
stos
pop
mov
mov
or
add
hlt
push
mov
jbe
jbe
cmp
adc
fs
adc
jno
inc
xchg
sbb
mov
lock
jns
inc
xchg
cmpsl
jae
call
pop
repz
fdivrl
jo
ret
mov
es
mov
cs
sbb
enter
test
es
mov
xorl
jo,pt
icebp
movb
sub
and
ds
and
inc
xchg
sbb
xchg
insb
addr16
jo
cmc
and
dec
or
adc
or
ja
outsb
jno
icebp
mov
or
sub
adc
jne
fwait
setle
lds
sbb
mov
jnp
insl
shll
loop
sub
fists
mov
lds
pop
xor
push
cltd
dec
adc
fs
dec
pop
lds
pop
ret
push
test
nop
push
inc
or
pushf
mov
mov
inc
repz
mov
mov
rol
les
inc
lahf
xchg
mov
cmc
jle
notl
adc
mov
test
push
in
movsl
fstp
mov
in
imul
les
insb
dec
fiaddl
push
pop
leave
ret
shlb
je
repz
cmpsb
lret
repz
arpl
sbb
clc
jb
mov
add
mov
loopne
pop
add
jno
push
lcall
shrb
daa
jl
lret
ficomps
push
sbb
push
bound
stos
rcrl
ljmp
divl
jns
mov
stos
dec
out
and
pop
imul
daa
pop
add
fsubs
inc
fistps
pop
jae
or
dec
addr16
mov
dec
inc
add
aam
std
add
or
cmp
ret
les
or
adc
sub
cmpsb
and
jle
mov
sar
jmp
in
mov
es
jb
mov
push
push
lret
inc
mov
mov
mov
fs
ja
xor
inc
popf
mov
push
or
push
pop
cli
aas
sti
fcmove
sub
inc
fisttpll
sbb
mov
sbb
popa
xchg
and
jge
xchg
mov
mov
xlat
loope
dec
imul
pop
mov
jae
xchg
lcall
jmp
test
xchg
int
xchg
inc
xchg
push
sbb
fsts
jne
std
mov
scas
pop
or
lock
mov
mov
cwtl
sub
adc
pop
icebp
sbb
cmp
mov
hlt
out
mov
mov
fldcw
push
mov
mov
inc
outsl
rcr
mov
push
loope
sahf
and
loop
jnp
inc
and
in
or
jno
add
push
mov
lods
ret
mov
adc
pop
xchg
pop
scas
mov
movsb
int3
mov
dec
shrb
inc
mov
icebp
or
xor
in
or
mov
outsl
push
mov
jg
xchg
dec
dec
mov
dec
lret
add
iret
cmpsb
and
enter
ja
lds
adc
jp
dec
insl
fsubrl
je
shlb
dec
test
icebp
aas
rcr
jb
das
das
fldt
jne
and
int3
xchg
repnz
jns
data16
xchg
jnp
push
mov
leave
cli
call
ljmp
fldcw
push
cmpsb
adc
jl
test
in
iret
flds
mov
je
xor
lahf
cwtl
xchg
xchg
les
and
xchg
pusha
and
adc
xor
ss
sbb
xor
sub
and
xor
jo
cmpsb
dec
inc
sub
jle
sub
push
mov
xchg
pop
mov
decb
or
sub
int
sbb
inc
ficoms
fistps
push
cmp
mov
sbbl
int
rol
cmp
xchg
mov
outsl
in
ret
xor
xor
out
fnstsw
mov
jnp
dec
mov
sbb
lahf
inc
rcrb
repz
popf
push
xchg
push
rcrb
sub
lds
mov
in
aaa
xor
inc
xchg
push
jecxz
test
mov
fidivrs
cld
mov
cmp
pop
stos
mov
push
xlat
or
push
cmp
sbb
jp
nop
xchg
xchg
and
pushf
jns
iret
inc
sub
sbb
out
adc
xor
sahf
xor
sbb
into
mov
in
leave
bnd
cld
ret
mov
lods
iret
lock
jge
cmpsb
lds
dec
inc
or
mov
xor
cltd
addr16
pop
fsubs
mov
dec
test
lock
leave
in
mov
bound
sti
ss
out
cmp
adc
dec
xchg
cli
fs
jp
mov
pop
mov
add
push
dec
std
and
mov
dec
pop
jmp
jne
testl
sbb
das
andb
inc
sub
add
push
adc
gs
cld
cld
in
mov
icebp
or
jnp
sub
testl
ficoml
push
adc
in
cmpsl
pusha
clc
out
push
xor
outsb
lahf
data16
fwait
fwait
jmp
xlat
and
scas
jecxz
add
jecxz
mov
adc
es
movsb
ljmpw
and
cmp
test
lods
mov
cmpsl
negl
movl
test
cltd
dec
xor
in
sub
lahf
daa
sub
ds
aaa
popa
adc
add
rorl
pop
pusha
dec
ret
mov
mov
pop
das
bound
outsb
mov
test
dec
xchg
mov
clc
lods
sub
push
shll
inc
adc
dec
cli
cmp
sub
lcall
sbb
std
mov
cmpsl
fcoml
xchg
fldt
push
cmp
sbb
inc
fdivrs
in
ljmp
cmp
arpl
addb
dec
pusha
jmp
sbb
push
xchg
lds
push
stos
dec
bnd
and
mov
cmp
jbe
lods
mov
xchg
lds
pop
pop
mov
cs
ss
int
xor
mov
jae
test
mov
jmp
addl
mov
pop
gs
mov
mov
psubsb
stc
stos
fnstsw
out
pusha
out
and
inc
mov
jg
lcall
shll
sbb
push
push
jmp
shr
push
cmp
or
inc
jb
sbb
adc
pop
sbbl
push
add
pop
pop
push
inc
cwtl
adc
jg
jge
mov
dec
jno
push
pop
mov
stos
jbe
fists
cmp
ret
push
dec
ja
notl
cmpsb
movsl
test
cmp
repnz
das
dec
lcall
js
xor
fistpl
loope
ljmp
leave
shrb
mov
dec
add
les
jp
std
leave
loopne
ds
pop
das
cmp
xchg
jg
sub
or
xor
sub
pop
jg
sarl
mov
cli
sbb
xor
xchg
dec
jae
das
cmpb
and
dec
push
add
jns
in
das
jo
and
xor
pop
mov
fidivl
in
sbb
push
call
cs
add
into
rolb
into
negl
push
push
push
xor
in
hlt
add
lock
sub
pop
fidivs
lock
jle
addr16
push
jo
dec
cmp
daa
cmp
add
push
add
movsl
jg
mov
xor
mov
sbb
dec
mov
inc
dec
gs
sbb
iret
into
pop
outsb
std
or
int
arpl
pop
std
push
inc
lret
push
xor
jge
dec
fnstcw
lods
cltd
push
inc
aaa
scas
xor
push
mov
insl
cmp
lahf
jae
push
in
lahf
adc
pusha
adc
adc
outsb
loopne
fs
xor
jae
or
dec
and
rorl
idivl
aaa
outsl
lds
rcl
das
int3
pop
push
xor
xchg
dec
or
xchg
sti
idiv
test
hlt
xchg
adc
pop
mov
aam
cwtl
and
lahf
xchg
pop
mov
cmpsl
in
mov
dec
jo
push
pop
repnz
pop
add
cmp
sbb
stos
outsl
outsl
sti
mov
int3
jecxz
mov
fwait
scas
popf
lods
mov
mov
pop
icebp
enter
fnstcw
jb
adc
pop
sahf
add
pop
inc
cld
pop
push
in
repnz
fnstsw
fwait
nop
out
cmpsl
dec
sub
sbb
stos
push
inc
loop
mov
imul
call
sub
jecxz
or
push
mov
pop
inc
sbb
or
sub
mov
dec
aad
inc
mov
adc
std
and
jmp
cld
imul
adc
adc
lds
sbbl
daa
or
notl
inc
adc
aam
dec
mov
cltd
add
push
sub
daa
sub
leave
nop
and
stos
leave
clc
pop
pop
scas
test
pop
shl
loope
adc
xchg
sbb
or
lret
xor
int
sbb
or
lods
call
add
sbb
mov
cmp
adc
sub
xor
mov
push
cli
mov
fs
and
dec
sub
mov
push
mov
jp
dec
int3
aam
xchg
xor
shl
in
adc
mov
das
das
cmp
cmp
pop
cmp
mov
xor
add
int3
pusha
dec
jns
data16
iret
jmp
adc
into
ss
ret
faddl
stos
push
pop
aaa
dec
lret
push
or
test
das
sahf
and
xor
mov
icebp
cwtl
xor
cmp
loope
ss
adc
fcomp
loop
dec
inc
push
sbb
jnp
sti
lahf
pop
cmpsb
push
and
adc
lods
mov
inc
xchg
cld
mov
jno
jge
insb
dec
mov
jne
sbb
je
mov
add
jge
pushf
clc
push
ss
or
std
adc
jne
in
push
mov
mov
cmp
dec
rolb
mov
mov
sub
xor
std
repnz
pop
jbe
lods
add
xchg
adcb
jo
xchg
hlt
mov
sub
in
add
into
test
mov
mov
addr16
mov
nop
dec
push
jl
sub
movsb
cmc
movsb
cs
add
sub
inc
int3
shr
fmull
pop
lock
adc
imul
jl
aaa
push
and
in
dec
stos
outsl
dec
push
pop
or
pop
jle
dec
xchg
cli
mov
nop
sub
inc
aam
and
push
jecxz
xchg
adc
mov
mov
or
popf
mul
nopl
fldenv
movb
out
push
mov
and
push
xor
xchg
xchg
sbb
mov
mov
loop
fsubl
ljmp
sbb
paddb
arpl
aam
or
sahf
rcl
sbb
mov
or
push
add
mov
mov
std
ficompl
movsl
xchg
dec
push
dec
in
xor
adc
xchg
mov
mov
fists
mov
pop
mov
mov
mov
ljmp
xchg
stos
das
push
push
popa
pop
es
stos
int3
ret
pop
arpl
test
xchg
stc
mov
sbbl
mov
mov
in
aad
push
outsl
sbb
bound
dec
divb
icebp
and
movsl
mov
inc
mov
sbb
cmc
adc
sub
out
xchg
iret
push
imulb
jmp
loope
mov
clc
push
mov
jmp
sub
in
fcoml
mov
icebp
cmc
cmc
jbe
aas
or
cld
stc
pop
in
adc
jae
inc
cltd
cmpsb
xchg
sti
jle
shll
inc
dec
mov
cmp
lock
lahf
fstps
repnz
xor
push
popf
ljmp
mov
ret
pop
orl
inc
or
lea
enter
xor
mov
mov
movsb
je
rcrb
lds
in
fwait
mov
or
notl
lcall
jnp
fbstp
push
out
add
adc
je
fldl
clc
fcmovu
and
lods
movsb
push
xchg
out
sbb
xor
and
push
js
and
sbb
jno
and
xacquire
push
test
adc
sub
lcall
scas
movsl
lds
push
stos
es
call
lods
leave
ss
sub
or
pop
mov
push
scas
out
sub
lods
lock
in
pop
into
push
int3
popa
out
pop
push
sbb
xor
inc
add
add
sub
ljmp
push
adc
pushf
push
lret
in
fs
adcb
pusha
xchg
sub
add
je
insb
loop
pop
jmp
inc
jge
mov
xor
pop
pop
dec
mov
or
or
cmp
outsb
cwtl
addr16
fldl
enter
xchg
popf
in
sahf
and
loope,pn
pop
mov
out
loope
mov
fistpl
in
sahf
and
stos
arpl
xchg
daa
inc
mov
loopne
mov
jb
bound
add
fstps
adc
pop
push
in
mov
fiaddl
pusha
enter
ret
test
mov
and
adc
add
or
inc
ficoml
xlat
mov
jl
adc
cmp
aam
adc
xchg
adc
jbe
aad
jnp
lods
xor
pop
mov
ret
les
xchg
mov
in
dec
cmp
jbe
and
and
jb
aad
pop
and
in
pop
mov
ljmp
xchg
jge
or
sti
cmpsb
loop
push
lret
pusha
or
jno
sbb
and
cmp
ljmp
arpl
movsl
mov
lahf
mov
aam
jle
clc
stos
rorl
xor
cwtl
pop
cmpsl
push
pop
sub
pop
cmpsl
push
pop
aam
cli
jb
pop
test
dec
rorl
out
xchg
adc
xchg
push
dec
addr16
mov
notb
push
add
sbb
icebp
int3
pop
sti
dec
xorb
dec
mov
sub
aad
xor
pop
and
sbb
fsubl
rcll
jmp
xchg
mov
cmp
jo
loop
cmp
jnp
mov
push
mov
mov
mov
test
jns
xchg
add
dec
test
inc
icebp
imul
cmp
jne
sti
push
jp
pop
inc
ljmp
mov
sbb
andb
mov
sbb
stos
in
rorl
dec
lea
ja
and
test
mov
int3
push
arpl
pop
fisubl
sahf
add
pushf
pop
scas
adc
sub
push
jo
sahf
mov
mov
inc
mov
push
sbb
add
adc
imulb
add
faddp
stos
mov
popf
fistpll
bound
pop
dec
pop
cltd
clc
and
mov
pop
rorb
adc
add
jbe
scas
pop
adc
mov
out
mov
jecxz
fildl
sbb
sub
mov
loope
push
and
mov
sahf
push
inc
fs
ret
decl
inc
mov
lds
cmp
into
and
xchg
mov
sar
mov
mov
aas
int3
rcll
inc
add
pop
push
fdiv
xor
imul
and
imul
sbb
add
das
cmpsl
and
sub
out
lahf
mov
arpl
adc
push
mov
and
test
bound
mov
lret
stos
jae
sub
adc
je
mov
jnp
adcb
pop
sub
pushf
adc
sbb
sbb
roll
punpckldq
cli
stc
stc
jecxz
rcrl
mov
mov
repnz
mov
fisubrl
or
enter
in
jp
test
mov
into
and
int3
std
daa
ja
xlat
push
rclb
or
decb
cld
sbb
std
adc
mov
jmp
jge
adc
push
sub
test
pop
add
stos
scas
mov
or
ds
ds
sbb
mov
aas
add
xchg
out
push
mov
shrl
fcom
dec
mov
inc
xchg
add
lret
les
lret
cmp
incb
jmp
int3
fsubl
andb
inc
sub
shr
sub
xor
pop
fwait
dec
enter
mov
xor
push
add
leave
aas
imull
mov
jns
andb
es
pop
jecxz
out
xchg
mov
push
es
push
fisubrl
mov
insl
jo
push
pop
jmp
lret
outsl
jmp
js
pop
sbb
ljmp
dec
std
xchg
loope
push
nop
out
es
rcrl
icebp
xchg
xchg
adc
outsl
inc
daa
scas
jno
add
std
lcall
jl
std
stos
repz
jbe
dec
testl
inc
in
cmp
push
xor
rol
xlat
stos
das
jg
cmpsl
cmpsb
mov
lea
xor
or
cltd
sahf
scas
fbstp
mov
call
movsl
loope
add
or
test
xchg
pop
out
mov
iret
fildl
mov
in
movsb
mov
stos
stos
push
in
mov
fldcw
adc
xchg
sub
pop
mov
push
neg
mov
outsb
ret
shrb
jecxz
inc
ja
sub
push
xchg
sub
shrl
movsl
nop
js
fwait
daa
mov
cmpsl
ja
fcomip
ja
xchg
pop
mov
mov
dec
cmp
mov
je
xor
push
fldt
in
xor
mov
pop
fmuls
mov
pop
adc
test
sti
or
add
add
shll
out
fimuls
repz
je
push
xchg
push
sub
mov
std
and
fiaddl
outsl
sub
xlat
inc
mov
aas
add
or
jle
enter
daa
or
push
imul
in
iret
cmp
mov
pop
xor
into
mov
dec
loope
sub
jbe
addr16
idivb
insl
sub
dec
aaa
insl
pop
dec
xchg
cmpb
into
daa
loopne
pusha
jg
inc
sub
adc
test
push
stos
cmp
or
add
push
imul
in
sbb
dec
and
clc
filds
dec
cmp
jmp
out
sti
xchg
dec
int
sahf
xor
ret
push
xchg
xorb
dec
pop
sar
mov
pop
and
pop
pop
shl
cld
dec
ja
xlat
aad
lret
lcall
push
rcrl
je
ljmp
mov
jbe
mov
inc
lret
xchg
sub
std
adc
aas
and
adc
mov
cmp
subb
fisubs
jmp
add
fstpt
mov
xor
daa
xchg
bnd
and
cmc
push
xor
adc
scas
adc
or
lock
std
ss
adc
movsl
in
call
mov
pop
or
push
nop
scas
jp
adc
jp
fwait
xchg
inc
mov
stos
mov
cmc
data16
xchg
sbb
sub
jg
sbb
or
mov
cli
xor
inc
adc
xor
lock
clc
shll
cmp
pop
vpsllq
xor
movsl
insl
and
loope
adc
mov
or
inc
mov
scas
cli
mov
sbb
cld
adc
fs
xor
or
popf
mov
incb
jmp
jo
test
shrw
push
dec
push
pop
sahf
adc
pop
dec
mov
ds
push
sbb
ja
sub
dec
rcrb
pop
xchg
xor
loopne
enter
lea
clc
mov
mov
inc
sub
fmul
xchg
or
jl
fisttpll
mov
mov
lods
out
leave
mov
out
ss
ljmp
jge
lcall
pop
sbb
fsts
pop
sbb
xor
mov
aad
jne
sarl
or
lea
dec
push
nop
lds
incb
hlt
in
xor
jecxz
popf
sub
jp
shll
les
popa
pop
dec
pop
pop
mov
mov
adc
push
scas
xor
and
mov
push
dec
jno
cmp
cmp
sarl
test
mov
xor
push
adc
cmp
repnz
jnp
xor
mov
cs
jp
or
pop
mov
lock
icebp
and
lods
test
cmp
lcall
imul
jo
in
es
mov
adc
incb
fwait
out
mov
mov
push
dec
cmp
and
ja
lret
test
lret
sub
aam
out
fwait
mov
push
dec
insl
jl
xchg
test
inc
mul
daa
enter
insb
sub
inc
jb
iret
mov
inc
mov
test
pop
adc
jo
je
xchg
and
mov
pop
test
movsb
call
jno
pop
cltd
jns
das
adc
sbb
sub
fnsave
pusha
aaa
cmc
cltd
addr16
push
and
popf
jp
jne
push
adc
cs
xor
outsl
shll
sub
push
jns
push
fimuls
lock
shl
shl
mov
xchg
sbb
fidivrs
jmp
mov
ja
adc
cld
push
pop
aad
sub
xor
sbb
sbb
pop
loop
in
push
jl
hlt
fs
dec
push
inc
ficoms
sbb
xchg
mov
pop
pop
mov
dec
ret
jb
lods
and
pop
push
cmp
mov
push
out
in
lcall
mov
in
push
pop
and
outsb
ljmp
jne
and
xchg
sbb
cs
subb
pop
div
pop
inc
xchg
loope
aaa
in
adc
jns
mov
inc
mov
adc
aam
push
pop
cli
and
cmp
out
xchg
dec
jg
xlat
push
jmp
dec
pop
fcom
sub
sahf
lock
cwtl
sahf
mov
or
les
or
rcll
and
and
add
push
mov
xor
cmp
lcall
cmpsb
aas
movl
hlt
loope
mov
pop
gs
jae
push
pusha
iret
loopne
mov
push
jno
xorl
gs
sub
pop
jmp
fsts
cltd
sub
decb
push
push
cmp
stos
xchg
dec
pop
imul
pop
sub
adc
mov
xchg
cs
andl
clc
inc
nop
cmc
inc
sub
add
and
lds
or
lods
sub
popa
repnz
xchg
or
aam
clc
repnz
lcall
mulb
sub
sbb
fimull
cmpl
idivb
sub
ds
mov
jno
xor
arpl
jb
xchg
cmpsb
push
test
and
rcll
stos
push
inc
add
mov
idivb
sub
cs
jno
pop
mov
dec
adc
aad
sub
movsl
adc
add
push
adc
pop
mov
outsb
adc
out
mov
bt
andnps
scas
into
inc
cmp
into
int3
mov
and
push
push
lods
sbbb
and
xchg
ret
pop
or
mov
mov
push
loopne
int3
or
pop
push
xor
clc
insl
int3
mov
ss
int3
cmp
lret
imul
lea
mov
adc
test
add
icebp
or
loopne
dec
das
pop
divl
ret
ja
stos
inc
idivb
ds
daa
and
lcall
push
outsl
jecxz
jbe
mov
cmp
sbb
mov
mov
aaa
incl
in
hlt
adc
mov
push
in
out
or
clc
fwait
add
pop
jns
loope
fcomip
adc
test
add
or
mov
dec
inc
add
inc
addl
test
ljmp
test
out
cmp
add
pop
cmp
push
fisttps
stos
push
cs
cld
push
or
lods
sub
mov
inc
scas
addl
aas
dec
lret
daa
ljmp
jge
or
mov
insb
sbb
jo
and
call
inc
pusha
pop
mov
jo
push
outsb
outsl
in
aam
dec
daa
mov
mov
jne
repz
dec
stos
imul
clc
and
push
aam
push
mov
cwtl
in
push
outsl
shll
stos
bound
mov
sarb
repnz
loope
out
and
aam
scas
lahf
fwait
adc
xchg
test
add
adc
test
jns
loope
cmpl
pop
loopne
push
xor
cmp
pop
cmpsb
mov
jmp
cmp
out
shlb
inc
outsb
xchg
rcll
out
repz
test
sbbb
fildll
or
subb
mov
icebp
int
inc
lcall
xchg
jp
xor
xchg
xchg
mov
fists
in
and
sbb
mov
xchg
cli
popa
js
and
or
mov
push
add
js
adc
and
inc
push
xor
add
stos
mov
jb
lcall
or
test
inc
jae
pop
cmpxchg
data16
mov
faddp
ljmp
cwtl
mov
mov
test
jl
cltd
and
push
hlt
shll
in
leave
or
sbb
dec
lods
fsubrs
jb
scas
fcomi
push
inc
pop
in
testb
xchg
je
sti
stos
mov
xchg
insb
pop
scas
imul
push
shll
shrl
or
or
jge
pusha
pop
sbb
xor
lahf
inc
dec
call
int3
sbb
movsl
outsb
scas
xor
jae
stos
sahf
mov
xor
or
cwtl
and
imul
xchg
push
sub
mov
and
jae
adc
out
mov
pop
jo
jecxz
stc
cmp
roll
mov
add
xchg
and
jb
or
mov
dec
push
test
xor
nop
sub
xor
push
incb
lret
pushw
shrl
jle
mov
mov
sbb
push
sub
push
push
int3
fsubrp
pop
enter
mov
mov
cmp
lret
adc
and
ljmp
inc
xrelease
test
out
add
test
fdivrl
sub
fstl
jg
lret
outsb
and
ds
xchg
cmp
cwtl
add
mov
or
pop
jo
loope
das
xlat
pop
sub
mov
or
icebp
sbb
push
roll
rcrb
xor
push
pop
repnz
aas
pop
scas
icebp
or
xchg
test
pop
outsb
mov
push
clc
xchg
ret
stos
das
outsl
test
push
movsb
pop
sub
xchg
pushf
in
divl
xchg
popf
inc
sub
mov
shll
lea
out
out
icebp
leave
jg
mov
fidivl
mov
les
jo
cwtl
xchg
jns
adc
lret
shrd
and
lahf
sbb
mov
push
xchg
mov
in
pop
shlb
in
mov
xor
cli
jne
pop
loopne
xchg
adc
cmp
imul
sbb
and
jg
stos
jecxz
xchg
arpl
cmp
out
jns
pushl
shlb
jae
pop
jno
pop
cwtl
in
lods
repz
dec
movsl
subl
stc
push
and
or
adc
add
jbe
ja
movsb
xchg
cmpsb
insl
xchg
cmpsb
jns
addr16
repz
push
ficompl
test
arpl
push
in
jge
pop
test
cmp
inc
dec
dec
div
cmp
dec
sbb
or
push
outsb
xchg
hlt
jge
push
int3
std
pusha
shll
test
outsl
scas
test
movsb
scas
sbb
add
add
shr
inc
push
adc
and
cmpsl
add
or
daa
movsb
incl
or
xchg
and
xchg
dec
out
dec
nop
jmp
xor
sahf
hlt
inc
cs
jmp
adc
push
shrl
out
mov
lods
lock
mov
mov
xchg
mov
sub
xor
test
mov
ja
mov
dec
nop
adc
cmp
gs
jne
sub
pop
sbb
sbb
outsl
inc
fdivrl
cmp
sarb
xchg
and
cmp
jmp
add
mov
subl
aas
dec
outsl
lcall
arpl
pushf
ret
cmovbe
adc
pop
arpl
or
enter
push
in
pop
shlb
mov
or
fildl
lret
fs
scas
imul
xor
push
ds
std
pop
cmp
jmp
cmp
icebp
addr16
xor
xor
or
mov
es
mov
mov
fcomps
mov
pop
gs
and
cmp
add
and
adc
fisubs
mov
xchg
and
and
call
push
mov
test
jg
mov
int3
dec
jmp
mov
and
je
iret
mov
xor
mov
les
pop
in
xchg
addl
ljmp
xchg
mov
pop
dec
mov
pop
xchg
jae
inc
fnsave
fst
ret
dec
adc
or
inc
pop
or
xchg
sub
and
fstpt
cmpsl
outsb
call
inc
sub
in
jbe
adc
aam
or
xor
aaa
scas
scas
insl
loop
push
push
pop
insl
loope
test
adc
mov
sub
add
jb
inc
repz
pop
test
push
cmp
inc
adc
outsl
aaa
not
fstps
lret
dec
xchg
in
sti
sub
push
xchg
aad
mov
xadd
divb
jg
js
scas
jle
sub
das
ror
popa
xor
add
pop
mov
test
push
loope
mov
ret
sbb
fcomp
dec
clc
xchg
dec
sti
dec
arpl
test
xor
or
mov
pop
insb
mov
repnz
fs
sub
or
ret
add
pop
shlb
and
mov
rcrw
insb
push
sbb
out
mov
sbb
mov
cmp
stos
adc
roll
xor
mov
dec
xchg
sbb
out
out
test
js
inc
inc
xor
fiadds
addr16
sbb
sub
pop
mov
sub
dec
lods
outsb
mov
fisttpl
imull
repz
popl
sti
dec
inc
cmp
test
push
test
jb
jge
enter
rcrl
pop
dec
lods
inc
imul
add
xor
out
roll
imul
cmp
popa
push
mov
lahf
add
mov
xchg
jg
push
fadds
cs
insb
es
mov
mov
cli
ja
push
fsubp
es
leave
scas
and
cmp
cmp
je
mov
inc
pop
bound
xchg
and
rcll
pop
imulb
push
lock
out
ljmp
and
pop
jmp
xchg
dec
les
push
test
sahf
and
cwtl
and
dec
cltd
je
sbb
pusha
in
mov
addr16
and
xlat
pop
das
mov
repnz
loope
imul
stc
dec
pop
sub
sbb
mov
lods
loope
adc
sub
adc
mov
push
add
mov
mov
data16
das
fdivrl
andb
jbe
aad
ss
jne
add
cwtl
push
jmp
add
out
repz
push
pop
jg
sbb
sub
das
pop
xchg
mov
xorb
xor
fs
stos
je
ss
dec
mov
sbb
repz
dec
pop
jnp
xchg
mov
xor
mov
leave
aaa
mov
fsubrl
mov
mov
sub
out
testl
std
imul
addr16
aam
inc
mov
jbe
push
in
les
xor
adc
and
in
and
mov
xchg
outsb
pop
clc
je
out
cmp
inc
ljmp
cmp
data16
pop
pop
push
fisubl
in
insl
push
sbb
in
jp
mov
loop
pop
movsb
in
shl
push
sbb
pop
push
imul
mov
das
lds
adc
negb
and
mov
leave
mov
repz
mov
pop
and
jne
mul
jae
add
pushf
filds
lds
cmp
mov
mov
push
add
dec
in
popf
iret
cwtl
push
dec
dec
in
push
adc
push
int
pop
pop
adcb
mov
test
add
pop
divb
imul
and
mov
lahf
sbb
cmp
push
pop
xchg
mov
cmc
push
sub
int
scas
lods
and
mov
gs
imul
bound
add
cmpsl
adc
into
addl
add
jns
dec
or
cmc
dec
aas
mov
jns
andl
inc
int
gs
and
bswap
sub
loope
movsb
shrl
sbbl
or
les
jns
sbb
xchg
iret
inc
cmpsl
mov
sub
jmp
pop
jge
rcrb
cwtl
mov
repnz
xchg
sahf
pop
jg
inc
push
sub
imul
in
sahf
aad
push
push
inc
out
sbb
std
push
mov
inc
dec
push
pop
insb
adc
es
sub
in
ficomps
pushf
cmc
pop
js
push
movq
sub
loope
movsb
daa
dec
adc
frstor
add
xlat
pop
cmp
icebp
fwait
push
int3
sub
insb
sbb
lods
xchg
negb
and
and
mov
iret
mov
lds
jle
dec
popf
sub
call
add
dec
in
adc
sub
idiv
jmp
rcr
sbb
mov
mov
xor
and
pop
inc
lahf
nop
pusha
add
imul
ljmp
leave
ret
add
cwtl
scas
call
ficoml
pop
stos
and
xchg
les
cmp
sub
sub
loopne
mov
adc
mov
inc
cmp
and
std
cltd
jae
cmpsb
lea
dec
xor
push
cmp
aas
in
stos
mov
or
cli
jmp
lcall
in
dec
jns
dec
jmp
cmp
lcall
inc
sahf
mov
jmp
push
data16
shll
insb
daa
into
or
shlb
xor
cmp
mov
add
test
loope
gs
out
stos
ljmp
mov
imul
pop
sahf
pop
ljmp
sbb
xchg
pop
stos
sub
test
or
ja
arpl
shrl
jle
pop
out
lods
jne
outsb
lods
push
or
insl
addl
sub
mov
dec
sbb
add
daa
sti
lock
lret
sahf
jne
mov
int3
arpl
rclb
movsl
int3
fdiv
jp
js
xchg
cli
cld
xor
mov
repz
pop
repz
and
shl
rorb
not
jne
rcrb
ja
add
adc
sub
xchg
mov
jge
and
sbb
imul
aaa
call
push
ret
repz
paddusw
lds
cmp
sub
ljmp
adc
inc
sbb
popf
mov
stos
clc
jecxz
popf
jno
sbb
fldl
xor
xor
into
jnp
es
sbb
out
repz
cmp
out
mov
xor
stos
pop
mov
mov
xor
fidivs
stc
call
pop
or
inc
sbb
jle
dec
mov
inc
les
sub
or
clc
xchg
or
and
outsb
aad
loopne
and
push
data16
push
mov
ljmp
packssdw
cmp
ljmp
leave
xchg
xor
lock
pop
add
std
adc
ljmp
lahf
mov
outsl
decl
adc
xchg
xor
addr16
cmpsl
movsb
aam
adc
loope
test
roll
mov
push
ja
lret
and
xlat
mov
jne
push
sub
lods
ds
int3
das
mov
rclb
jmp
es
or
fisttps
sub
out
ds
dec
nop
push
push
int
inc
aam
cmpl
lcall
jae
mov
es
jo
in
pop
jl
rorb
js
mov
xor
insb
sbb
xor
sub
repz
sti
fs
mov
or
loop
add
xor
sarb
mov
hlt
mov
xor
ret
xorb
add
ret
les
subb
add
aaa
jmp
add
stos
inc
sahf
sbb
repz
leave
ret
xor
movhps
dec
cld
adc
or
sbb
pop
sti
push
cwtl
test
pop
sbb
and
pop
stos
xlat
xlat
mov
cmp
addr16
pop
in
sub
loop
imul
inc
lea
in
icebp
sbb
dec
pop
inc
or
push
mov
into
adc
in
jbe
fwait
ja
or
and
arpl
call
testb
xchg
pop
adc
or
jnp
movl
jle
dec
pop
xor
pop
jbe
fwait
push
inc
ds
mov
mov
xor
fcmovnbe
dec
cmc
mov
mov
data16
out
jnp
xchg
in
and
arpl
lret
test
fwait
incb
cmp
lds
and
cmpsb
push
leave
xchg
jp
arpl
sbb
xchg
dec
and
lret
pushf
arpl
mov
mov
cmp
xchg
adc
std
enter
xchg
dec
or
mov
lods
data16
fs
sbb
dec
and
or
add
xor
outsb
dec
jae
cwtl
mov
addb
cmp
xchg
lods
sub
enter
inc
xchg
fs
xchg
aad
add
push
insl
mov
jb
out
inc
ret
into
mov
mov
xchg
ret
xchg
add
pop
fldcw
push
add
push
sbb
push
gs
adc
sarl
out
push
sahf
aaa
xor
pop
lret
movsl
xor
lea
lcall
pop
add
mov
push
pushf
xchg
aam
clc
daa
push
cmc
cmp
inc
xlat
mov
out
jns
scas
stc
test
fwait
dec
movsl
xchg
fs
pushf
pop
add
push
daa
adc
pop
push
loop
mov
adc
jmp
push
or
dec
gs
jmp
test
push
shlb
mov
inc
pop
sub
xchg
jbe
push
jle
pusha
lea
movsl
cmp
out
movsl
ljmp
mov
test
shlb
inc
js
inc
loopne
sbb
push
mov
lret
inc
cmp
fcomps
dec
or
hlt
fisubrl
cmpsl
jmp
adc
aaa
iret
mov
in
imul
sbb
test
adc
fwait
sub
out
test
movsl
fildll
push
mov
dec
sbb
push
jbe
mov
ror
pop
test
jno
xor
pop
sbb
mov
dec
lock
xor
js
pop
sbb
adc
or
scas
sarl
cltd
stos
test
inc
stos
add
int3
jmp
leave
test
jge
jmp
mov
out
dec
mov
jle
pusha
add
out
jns
in
lods
mov
loopne
es
pop
dec
rcrb
push
shrl
mov
dec
pop
sahf
lods
ss
call
fistps
inc
cli
nop
add
stos
mov
std
fwait
xor
fstpl
sub
pop
inc
adc
lret
inc
test
or
xchg
sbb
pushf
cltd
adc
pop
dec
sub
fistl
shlb
sbb
inc
roll
push
push
sub
pop
pusha
jge
xchg
sub
or
push
aas
dec
xlat
push
sub
int
imul
pop
mov
push
pop
aas
cs
or
in
pop
scas
push
inc
jns
xchg
int3
aas
outsb
or
outsb
or
xor
out
sub
mov
mov
popa
je
rol
jecxz
dec
inc
inc
jle
xchg
repz
mov
add
add
sbb
test
iret
cmp
mov
sbb
sbb
push
scas
orb
push
lahf
xor
test
into
xchg
jns
popf
mov
jb
sub
xor
push
mov
mov
fnstsw
mov
in
inc
adc
int
pop
and
jo
sbb
imul
xchg
ds
pop
inc
rcrl
mov
or
outsb
mov
pop
adc
icebp
lods
xchg
mov
adc
jb
pop
mov
lcall
xor
bound
xlat
and
pusha
loopne
mov
aas
mov
orb
rclb
dec
dec
jl
sub
adc
cs
push
mov
xchg
mov
jmp
rcl
pop
mov
xor
xor
xchg
xchg
mov
mov
lret
mov
ss
call
divl
in
xchg
jns
mov
scas
inc
mov
xor
insb
mov
and
mov
cltd
dec
pop
xorl
mov
and
lcall
fstpl
xlat
cmp
jae
dec
out
call
test
xchg
mov
gs
aad
xor
jns
adc
mov
imul
sti
mov
ja
jp
xor
fstpt
adc
jnp
out
jo
xchg
lock
and
movsb
ret
lcall
aas
pop
sub
out
movsl
and
lahf
ret
inc
in
xor
pop
ljmp
loope
test
rcpps
mulb
sbb
jmp
mov
add
mov
jnp
jecxz
lret
dec
sub
cmp
mov
dec
out
fistps
sub
pop
mov
out
cli
js
mov
sarl
xchg
or
loop
cmp
xor
test
sti
mov
add
xor
aas
stos
jo
dec
add
in
and
lret
daa
mov
cli
adc
cmp
loopne
or
cmp
adc
adc
jnp
mov
js
jmp
xchg
test
les
sub
icebp
test
sbb
xchg
sub
mov
les
and
adc
cmp
das
scas
jg
xchg
in
jecxz
lcall
xchg
lock
mov
inc
jge
aam
je
dec
aas
aaa
xchg
pop
sbb
out
xlat
mov
loope
adc
pop
lds
mov
pop
xchg
and
fldenv
arpl
clc
push
int
pop
outsl
mov
sbb
sbb
out
xchg
jg
dec
and
scas
inc
jp
and
lcall
sub
test
cmp
sbb
add
stos
dec
add
negb
mov
cmp
sti
pushf
inc
mov
push
js
dec
sub
lret
jno
mov
aad
enter
test
test
in
jbe
cmp
push
int
sbb
cmc
dec
mov
sub
negl
xchg
inc
jns
repnz
pop
mov
mov
jo
jae
fs
xchg
add
pop
lret
fadds
add
dec
loope
cmp
add
jle
mov
mov
sbb
rcrb
cmp
jmp
jne
in
std
push
icebp
fcmovu
mov
icebp
mov
iret
dec
lea
push
mov
lods
xchg
sbb
ret
sbb
push
jns
cmpsb
les
loop
mov
sbb
lods
fs
jp
sbb
leave
mov
int
ljmp
aas
mov
jmp
hlt
popa
pop
std
xlat
jmp
or
in
sub
lods
sar
addr16
xchg
aas
scas
sbb
jb
loop
data16
or
into
and
sbb
test
adcb
or
mov
push
pop
sbb
mov
mov
out
fisttps
mov
sbb
clc
dec
jl
xchg
cmpsb
push
pop
rep
aas
jge
fisttps
mov
lcall
shrb
aam
jp
cli
dec
stos
xchg
jge
repnz
gs
xorl
sub
popa
in
stos
dec
out
mov
mov
loope
loope
jge
imull
xchg
inc
adc
loope
jmp
loop,pt
adc
sti
jb
repz
cwtl
add
xchg
mov
inc
mov
sub
push
sbb
or
jne
xor
mov
pop
nop
scas
mov
sub
or
mov
xchg
mov
xorl
xchg
cmp
sbbl
jecxz
push
lcall
gs
jbe
xlat
xor
and
inc
pop
mov
sub
testl
xchg
ret
sarb
xchg
push
cmp
hlt
and
lahf
xor
push
fsubr
jno
dec
add
xor
pop
sbb
int3
or
jae
xchg
loope
sub
test
mov
ljmp
test
pop
cs
pop
mov
xchg
mov
jbe
testb
pop
adc
fiaddl
add
xchg
xor
mov
xchg
cltd
push
lods
jle
and
rcrl
adc
testl
std
scas
movsl
mov
stos
out
dec
stc
ret
mov
dec
outsl
ret
sbb
push
sub
mov
subl
sub
dec
adc
lret
out
fcomp
imul
js
inc
scas
iret
xor
push
lea
cmp
mov
lea
mov
adc
outsb
int
mov
lret
push
sbb
jge
stos
fistps
xchg
push
fstpl
into
aam
push
decl
lods
fisttpl
fnstcw
fisttps
or
add
fmulp
fidivrs
adc
mov
sbb
add
lods
lret
ja
gs
iret
fsubs
insl
fbld
and
decb
movsb
mov
sbb
aam
push
and
sbb
xchg
ds
std
sbb
xor
dec
push
ret
jmp
add
pop
xchg
and
and
in
ja
pop
mov
sbb
lahf
gs
jmp
pop
sbb
sbb
lods
dec
dec
je
cs
push
cmp
adc
idivl
or
adc
push
sbb
mov
je
sbb
hlt
sbb
jle
sbb
outsl
les
cmp
jg
shrl
lahf
and
mov
mov
and
cmp
or
adc
sub
fstpt
cmc
outsb
scas
add
pop
inc
jnp
or
fwait
push
mov
mov
mov
scas
jecxz
out
mov
imul
test
xchg
jo
jns
inc
insl
jo
loop
icebp
aaa
jo
lcall
in
sahf
cmpsl
mov
jmp
sti
outsb
enter
jp
fisttps
cmp
test
sbb
mov
mov
xor
pop
lret
in
clc
jl
scas
imul
in
mov
in
stos
stc
xor
bound
bound
and
aam
xlat
sahf
mov
mov
comiss
xlat
fistpl
mov
mov
xchg
push
cli
fiadds
adc
xchg
lods
outsb
test
loope
ja
stos
mov
popf
test
xor
add
fwait
test
mov
lea
aaa
cmp
mov
sub
sbb
rorl
cmp
cmp
fsubrs
out
subb
xchg
sub
mov
orl
insb
in
xchg
fldt
iret
jne
dec
popa
mov
sub
jb
inc
mov
jb
js
mov
pushf
mov
mov
imul
inc
or
mov
sbb
int
mov
fstpt
cld
lods
leave
adc
popf
insl
loopne
repz
flds
push
add
sub
mov
mov
xchg
lret
into
stos
xchg
jae
jge
fists
adc
push
leave
int3
rcrl
sti
jns
shl
ret
loopne
loop
mov
andl
lret
adc
mov
xor
jno
fsubp
leave
jmp
inc
mov
hlt
inc
leave
loop
data16
or
sbb
xchg
push
add
jae
xor
fnstenv
jne
int
es
mov
out
shl
and
cmp
sub
scas
dec
pop
insl
sub
jb
repz
mov
leave
imul
lea
mov
mov
jp
and
cmp
inc
cmp
mov
cmp
push
fidivs
inc
mov
push
adc
mov
xor
lock
cmpsb
jo
mov
adc
bound
mov
sub
iret
and
lahf
movb
test
xor
iret
and
cmp
in
push
mov
subb
nop
int
inc
out
mov
mov
leave
push
xchg
xchg
sbb
jp
icebp
clc
lods
loopne
mov
shlb
jno
mov
pusha
ds
js
cmp
mov
repz
movsl
mov
inc
psllq
mov
mov
push
mov
iret
adc
sti
loopne
mov
or
outsl
and
fwait
loope
inc
push
xorl
push
or
ret
cmp
push
stos
pop
mov
dec
test
xor
gs
cwtl
mov
and
jbe
cmc
mov
xlat
and
sbb
nop
aaa
mov
mov
jle
in
and
shll
xor
lock
or
jb
lahf
pop
sbb
mov
mov
sarb
roll
out
push
mov
cld
pop
add
pop
push
pop
mov
fwait
jl
popa
xor
inc
and
cmp
sbb
sub
mov
pop
cmp
repnz
pop
sbb
jle
mov
loope
xor
sub
cmp
aas
loope
dec
subb
into
lods
scas
mov
sbb
lock
inc
jno
out
loop
cld
mov
push
out
fcompl
mov
fcomps
mov
adcl
add
pop
stc
cmpb
subl
lods
push
cmp
pop
pop
test
into
das
pop
xor
jns
sub
loop
pop
out
test
xor
aam
inc
sti
mov
jb
ror
xchg
cmpsb
inc
loopne
daa
jmp
xchg
lods
or
loop
jmp
cld
roll
lock
or
jge
ret
mov
pop
ljmp
cli
out
dec
sub
loop
sub
dec
adcl
mov
push
inc
lods
and
movsb
loope
inc
sub
and
cwtl
mov
insl
add
jno
aas
mov
andb
outsb
mov
push
mov
jo
dec
xchg
mov
jg
call
enter
push
fadds
push
pop
arpl
sub
xchg
clc
xor
or
out
lock
les
mov
xor
xchg
push
shlb
stos
js
fsubrs
imul
mov
mov
mov
mov
dec
cmpsl
cwtl
js
nop
aam
loop
test
call
push
mov
mov
fisttpl
in
mov
jno
xor
push
inc
and
jg
repz
es
shrl
sub
mov
or
jnp
and
int3
sahf
mov
or
fisttps
jg
mov
xchg
mov
mov
fcom
pop
outsb
ds
loopne
xor
notl
addr16
repnz
adc
hlt
jl
pop
mov
aas
push
xchg
cmpsb
shrb
fstps
arpl
cmp
pushl
test
incb
in
popa
pusha
add
gs
adc
ljmp
nop
das
inc
fistpll
adc
and
dec
adc
ret
jnp
xor
mov
leave
aas
test
and
mov
notl
adc
cld
and
lret
and
mov
pop
test
sub
aas
dec
jnp
cltd
mov
das
jb
push
call
addb
add
iret
dec
stos
jne
jo
mov
pusha
push
xchg
enter
mov
ljmp
xchg
xchg
and
rcrl
popa
cmc
test
js
sub
add
jo
pusha
dec
jl
cli
jg
mov
pop
adc
loop
push
mov
lea
mov
push
add
pop
mov
cmp
in
jecxz
repnz
out
and
int3
scas
adc
pop
outsl
loope
cli
jle
push
xor
add
aam
mov
jb
cmc
ficompl
sarl
mov
cld
mov
cmp
jb
inc
jae
ljmp
loop
xchg
outsb
xlat
dec
insl
xor
loope
scas
iret
xchg
dec
jnp
scas
lret
cmp
push
and
enter
fnsave
mov
std
inc
mov
xchg
add
mov
push
jne
xchg
cmp
cmpsb
adc
in
loopne
or
pmulhuw
sbb
lds
push
pop
popf
sbb
sub
cmp
das
add
sbb
sub
fistps
fwait
pop
lods
pushf
pusha
or
test
push
shlb
sbb
test
mov
add
mov
mov
test
xor
cmpsb
and
and
aaa
adc
push
mov
or
outsb
jge
rcrl
imul
sub
jecxz
jno
mov
pop
repnz
ret
dec
dec
jg
nop
lret
leave
push
and
dec
scas
mov
and
xchg
hlt
repz
loop
jnp
xchg
mov
out
jecxz
out
outsl
xchg
sub
inc
jne
sti
xor
push
dec
icebp
pop
adc
sub
mov
call
or
std
lds
mov
xchg
clc
mov
and
jecxz
mov
push
add
jnp
dec
loope
mov
mov
iret
pop
orb
xchg
mov
xchg
push
dec
stos
das
mov
pop
fcomps
sbb
div
ret
push
push
and
test
and
jbe
cmpsb
pushf
cmp
jge
jnp
pop
sub
xchg
cmpsl
stc
cwtl
mov
lea
xor
ret
es
jge
mov
mov
jb
int3
xor
sub
push
pop
lahf
in
adc
inc
sbb
gs
cmpsb
es
call
in
jle
enter
xchg
pushw
stos
mov
cli
movsb
outsl
mov
lods
aam
inc
add
flds
pop
cmpsb
aad
push
inc
out
inc
jb
add
stos
xchg
inc
cwtl
flds
mov
inc
jne
scas
sbb
test
jns
mov
and
adc
sub
sub
jno
cmp
lcall
mov
imul
mov
ret
inc
stos
add
push
rcrb
cmp
push
adc
dec
lea
dec
gs
ja
cmp
pop
cmp
xchg
flds
jb
mov
incl
and
fcoml
notl
xor
addr16
sar
inc
std
sub
mul
daa
jae
sbb
xor
xor
xchg
nop
cld
xlat
sub
push
das
out
jne
aad
pop
pop
jbe
mov
idiv
imul
decb
mov
xchg
mov
or
pop
xchg
cld
inc
and
mov
data16
sbb
hlt
and
lea
stc
push
mov
mov
gs
cmp
mov
cmpb
xchg
movsl
cwtl
out
enter
loope
fdivrl
or
jmp
icebp
mov
cmp
cwtl
inc
popl
push
jg
std
inc
movsb
je
pop
test
pop
mov
leave
adc
fbstp
xchg
sub
mov
lods
fwait
push
outsb
shll
je
jno
psrlq
mov
or
movsb
mov
push
jns
stc
fstl
das
jle
ret
enter
test
sbb
insb
sti
mov
sbb
movsl
fcmove
pop
aad
xor
jge
mov
mov
jmp
mov
mov
mov
scas
add
dec
xchg
xchg
movsl
mov
jb
and
lods
clc
in
push
sbb
fwait
out
mov
jmp
notl
jne
and
ss
sbb
fnstenv
fisttpll
loop
push
bswap
testb
mov
cmc
dec
mov
push
cmpsl
pop
xchg
sub
cmp
push
mov
mov
ret
decb
mov
fwait
jns
repz
adc
addr16
jae
sub
sub
push
cltd
into
push
ror
loope
ror
imul
mov
xchg
xchg
add
jb
test
scas
sub
mov
cli
je
xor
mov
jbe
cld
shrb
movsb
pop
dec
js
scas
push
mov
leave
shrb
adc
or
std
aam
pusha
xlat
push
xchg
jns
ss
cld
dec
sub
push
push
inc
adc
pop
pushf
lcall
dec
nop
sbb
add
ret
lcall
push
ds
xchg
imul
js
je
push
push
dec
loope
push
jecxz
lea
push
and
xchg
dec
fdivl
mov
nop
icebp
mov
test
xor
test
cld
stos
imul
pop
xor
jmp
jle
aad
loop
xchg
lds
enter
sbb
jbe
sbb
pop
jp
pop
ret
pop
inc
adc
clc
xor
sti
fistpl
jmp
jae
cmpsb
push
push
push
dec
andb
arpl
add
js
push
aad
jnp
test
mov
int
push
hlt
in
into
imull
dec
mov
inc
sbb
jl
fsubrp
and
xor
sbb
mov
insb
mov
cmp
jle
cmpl
cmp
pushf
jne
out
loope
jbe
dec
sbb
cmpsl
nop
pushf
call
mov
icebp
xor
stos
mov
mov
sahf
test
popf
sub
imul
rorb
mov
jo
xchg
scas
inc
xchg
push
leave
clc
mov
pop
push
or
inc
shrb
cmp
mov
out
jge
call
inc
and
mov
mov
mov
ret
pop
sti
fs
add
adc
pop
int3
cmp
fcoml
stc
pop
cmpsb
add
fldl
outsb
aaa
repz
adc
movsl
and
add
push
dec
dec
sahf
aaa
adc
inc
mov
push
jnp
mov
fldcw
fldcw
jbe
rcrb
test
andb
aad
data16
add
fstl
mov
and
cmpsl
jae
fcoml
mov
jnp
inc
fcmovnu
mov
sbb
dec
in
lods
adc
in
int3
mov
pop
jmp
xchg
aaa
imul
sub
cmpsb
ja,pt
je
addr16
xor
aas
xchg
mov
or
mov
into
or
or
mov
inc
in
scas
jecxz
mov
lods
nop
sub
aam
dec
add
adc
jne
jmp
aad
mov
scas
mov
sub
filds
or
rclb
mov
add
iretw
cmpsb
sahf
or
push
insl
ret
dec
mov
imul
loope
hlt
xchg
mov
adc
loopne
popl
inc
sbb
mov
jge
sbb
inc
add
out
dec
cs
xorb
ret
push
or
jmp
push
imul
lahf
shl
jmp
pushf
and
mov
and
push
mov
adc
pop
or
repnz
shl
mov
dec
ljmp
fwait
std
jge
jg
pop
popa
mov
cmp
imul
out
push
cli
push
imul
je
jge
mov
or
pop
mov
out
pop
fmuls
pop
or
popa
mov
cmc
cmp
lahf
lea
push
jno
inc
lcall
jle
hlt
jge
cli
scas
dec
cld
mov
les
push
mov
pop
and
push
push
out
inc
cld
sub
sbb
mov
imul
push
xchg
and
sub
stos
sbb
sahf
mov
xor
or
out
aaa
xchg
or
in
jbe
fmull
push
xrelease
out
inc
mov
mov
mov
cmpsl
fdivrl
test
push
push
int
orb
ss
pop
xchg
das
sbb
xchg
pop
xchg
testb
neg
inc
inc
rcrl
sbb
adc
jmp
and
cltd
push
and
xchg
cs
popf
inc
insl
lcall
jo
cltd
stc
sub
pusha
std
dec
hlt
mov
cmp
in
je
pop
sti
xor
xchg
mov
adc
add
jecxz
aad
js
mov
xchg
inc
mov
mov
push
rcr
mov
cmpsb
xchg
jp
in
xchg
js
jge
jge
adc
stos
rorl
into
out
mov
in
dec
and
push
mov
mov
inc
mov
add
push
lds
aam
insl
shrl
mov
int
push
sbb
roll
adc
je
ss
mov
add
mov
xor
lds
aas
xor
pop
inc
cltd
push
xor
adc
jg
mov
js
imul
cs
inc
fwait
out
or
dec
push
push
arpl
xchg
xchg
push
lcall
inc
ljmp
mov
add
sahf
imul
repnz
xchg
or
mov
jmp
mov
inc
fs
sub
pop
xor
ret
xchg
pushl
sbb
cmp
out
xor
mov
insl
push
popf
mov
test
icebp
cmpsb
sbb
loop
xlat
mov
sbb
dec
into
cmp
lods
das
lock
rcll
repnz
xchg
rcll
aaa
push
mov
xchg
push
xor
or
cmpb
fistps
jae
sub
or
aam
loopne
jmp
andb
lahf
lods
jne
mov
mov
push
push
repnz
push
ret
stos
sub
repnz
dec
mov
xchg
mov
leave
xlat
or
mov
push
jno
dec
cmp
mov
cmpsb
popa
out
mov
insb
lret
mov
sbb
dec
cmp
dec
loopne
loopne
ljmp
scas
mov
mov
adc
sub
lea
push
pushf
and
xchg
fbstp
leave
cmc
pop
paddd
sub
ss
hlt
mull
mov
jbe
xor
enter
decb
dec
pop
xchg
pop
sub
outsl
insb
lret
lret
fidivrl
test
push
mov
sub
or
pop
or
push
jbe
inc
and
shll
movsb
cwtl
lret
mov
pop
pushf
pop
sbb
pop
cmp
mov
cmpsb
insb
outsl
cs
xor
fucomi
mov
out
jae
dec
cmp
addb
movsl
inc
fwait
push
or
xor
cmc
inc
mov
subl
and
fcmovnu
cmp
iret
jle
sahf
aam
mov
negb
mov
push
out
mov
cmpsb
sbb
dec
pop
movsb
repnz
call
xchg
std
jl
shlb
mov
cmp
or
and
int3
push
inc
or
jmp
sbb
jl
fildll
in
xor
in
cmp
inc
sub
cmpl
and
pop
mov
lods
or
jmp
into
pop
cli
fstpt
int
xchg
in
daa
fcoms
lock
pop
mov
xor
out
fs
ljmp
pop
xchg
movsb
out
sti
pop
adc
aas
xlat
es
leave
mov
or
xchg
stos
mov
inc
mov
xchg
daa
ds
or
mov
mov
cs
xor
adc
inc
dec
fs
mov
mov
push
fldenv
jl
mov
sbb
push
das
aas
call
pusha
cmp
or
icebp
bound
pop
in
rcll
hlt
hlt
sti
pusha
dec
ret
lcall
in
into
jg
push
adc
insl
add
in
sub
lods
add
push
pop
nop
pop
jns
dec
inc
fcoml
mov
xchg
jne
jno
cltd
cld
sbb
push
adc
jmp
push
jge
clc
xchg
dec
dec
cmp
push
push
jne
pop
pop
rorb
mov
adc
xchg
sti
std
dec
mov
jg
cld
lcall
sbb
scas
shlb
andl
sbb
adc
pushf
and
incl
lcall
or
movsl
push
xor
cli
std
mov
and
js
hlt
fistpll
add
mov
test
and
adcl
add
sahf
inc
nop
imul
iret
mov
fildll
cmpsb
dec
subb
ja
in
js
cmp
xchg
subl
cmp
repz
inc
jg
push
out
inc
fdivrs
dec
add
xor
push
and
stos
fs
xorl
ljmp
push
mov
sti
cltd
mov
in
jl
jle
lcall
cmc
fists
inc
imul
jnp
push
pop
lods
and
pushf
cmp
or
mov
or
mov
push
in
and
movsb
cmp
sahf
xchg
mov
push
fisubrs
xchg
lcall
stos
fadd
int
mov
fwait
lods
lcall
arpl
cmp
dec
adc
push
in
test
and
popa
and
fldcw
pop
repz
add
sbbl
lret
test
shlb
push
or
pop
ja
jno
add
imul
and
outsb
push
ret
mov
xor
jbe
test
repnz
rol
cltd
dec
push
into
jnp
xor
cwtl
stc
jmp
pop
ret
aam
lds
notb
shr
and
cmpsw
push
mov
inc
aas
imul
inc
divl
cld
pop
xchg
sbb
mov
test
add
cltd
mov
or
lock
and
call
das
xchg
rcrb
pop
out
das
sbb
xor
testb
pop
mov
scas
push
push
ds
mul
jmp
sub
aad
shrb
fsubs
lods
adcl
rcll
pushf
mov
pop
xchg
pusha
inc
mov
xlat
movsl
inc
sub
xor
test
imul
test
inc
pop
test
js
movl
sub
shlb
jmp
pop
loop
mov
test
cs
pop
xchg
in
mov
adc
rcrb
jnp
aaa
xor
and
and
xchg
popl
dec
jecxz
push
or
inc
dec
jae
fldl
inc
ja
arpl
data16
iret
cs
or
out
movsl
movsb
cld
lret
inc
xor
dec
mov
inc
ljmp
push
lahf
dec
cmp
pop
sbb
dec
stos
sbb
gs
inc
fisttpl
les
test
mov
xor
push
sbbb
mov
xor
enter
fwait
pop
jo
clc
sahf
or
and
add
fistps
icebp
adcl
xlat
insl
scas
push
ret
fistpl
dec
xchg
adc
jno
bound
or
jl
push
sbbl
sub
out
adc
dec
sbb
jo
sbb
imul
mov
les
push
out
das
inc
adc
and
sbb
inc
and
pusha
add
xor
xchg
mov
mov
pop
adc
aad
int3
mov
arpl
in
push
jbe
in
ds
lcall
loope
ret
sbb
ja
cmp
gs
das
jecxz
dec
push
jl
ljmp
mov
mov
fs
loop
xchg
xlat
or
push
cmpsb
add
add
ds
sub
repnz
and
cmc
jo
push
je
aas
jl
jae
and
mov
out
insl
sub
sbb
movsb
cmpsl
and
mov
aad
and
lcall
fwait
decb
jae
ds
dec
ljmp
and
in
dec
push
in
adcl
popa
stc
insl
cmp
lahf
rolb
icebp
mov
icebp
ja
jge
iret
adc
push
fdivs
inc
dec
dec
fnstsw
leave
lods
in
push
xchg
mov
test
imul
leave
enter
mov
clc
xchg
in
dec
data16
mov
inc
cmp
xor
out
stos
pop
in
dec
sti
arpl
aam
xchg
loope
jns
mov
pop
dec
decl
push
out
sbb
aas
sahf
dec
enter
ljmp
mov
mov
stc
stos
testb
add
int3
mov
lods
ja
inc
andl
std
in
cmp
je
mov
mov
jb
loope
out
pop
leave
jno
xor
jp
add
inc
cwtl
push
jns
arpl
lret
fs
sub
nop
fcmovne
xchg
sub
mov
push
jne
shl
outsb
sub
and
push
lcall
aas
insl
scas
push
loop
stos
ljmp
sbb
addb
cmc
jne
jecxz
lds
rolb
sbb
movsb
mov
mov
aad
les
rcr
dec
inc
mov
mov
jae
jo
mov
ds
inc
dec
mov
xor
es
lcall
fdivl
xlat
xor
mov
jge
repnz
iret
inc
xchg
repz
rorl
inc
sub
fs
orl
or
mov
lcall
jp
adc
xor
je
dec
bound
push
outsb
inc
pop
insl
pop
push
pop
cmp
inc
dec
loope
add
mov
out
and
mov
es
out
rcr
cmp
dec
loope
test
jl
fbld
or
test
dec
subl
gs
adc
lds
repnz
xor
lret
rclb
test
fmul
les
xchg
mov
js
inc
insl
es
test
ds
mov
lock
sbb
and
xchg
xchg
jecxz
mov
inc
mov
inc
js
cltd
movb
data16
xchg
aad
mov
and
adc
das
sub
into
inc
dec
xor
cmp
loope
xor
and
mov
bswap
mov
adc
cli
imul
mov
test
or
int
popa
push
lock
cmp
fists
hlt
out
out
jg
sub
jne,pt
adc
mov
in
movsb
mov
adc
mov
scas
xchg
push
push
jb
xchg
adc
sbbb
push
orb
or
xchg
nop
cmp
xor
sub
scas
aaa
add
in
jp
stc
xchg
xchg
adc
add
cmp
mov
xorl
mov
jecxz
fiadds
push
adc
add
mov
and
out
jmp
xchg
jno
dec
cmc
mov
das
push
xchg
jno
mov
imul
mov
cmp
sub
sub
and
jp
push
xor
fmull
rol
test
jo
pop
pushf
mov
stos
imul
dec
andl
pop
cltd
jl
mov
scas
mov
mov
js
test
xor
cmp
jp
int3
or
cmpsb
or
jb
mov
cmp
and
push
xor
sub
sbbb
xchg
adc
sbb
iret
pop
pop
stos
lods
cmp
push
clc
divb
xor
daa
in
roll
into
dec
es
sub
sar
testb
jns
pushf
add
cs
xchg
notb
in
mov
xor
mov
cmpsb
cmp
mul
dec
in
push
inc
jnp
insb
outsb
xchg
jb
and
xchg
stos
mov
lock
idivb
or
xchg
iret
add
mov
incb
fcoms
jnp
ds
xor
mov
push
mov
sub
mov
xor
cmp
std
lock
aam
and
ss
ret
inc
incb
cmp
and
xor
fists
dec
fnstcw
cwtl
cmpsb
inc
sub
mov
push
sti
rorb
xor
int3
insl
ljmp
sbb
insl
push
ficomps
cmp
sahf
jo
popf
jb
aaa
aaa
and
sub
in
jge
inc
pop
dec
fadds
scas
sarb
repnz
aas
jns
cld
lret
sub
mov
pop
cmpsl
lock
fstpt
xlat
stc
xchg
aam
push
repz
lret
pop
push
cmp
imul
cmc
stos
sub
loope
jno
add
fmuls
mov
sbb
pop
shll
xor
push
into
mov
inc
scas
popf
mov
jae
ret
lods
sub
push
mov
cli
out
add
stos
jbe
xchg
gs
int3
jecxz
std
ds
push
xchg
xchg
ucomiss
dec
imul
push
subl
xchg
mov
out
rcr
into
and
sub
adc
or
in
sbbb
stos
inc
jecxz
in
sub
dec
mov
aam
lret
cmp
adc
sub
cli
hlt
mov
pop
or
scas
gs
aas
jl
inc
mov
or
or
mov
shlb
and
movsb
mov
or
frstor
test
hlt
or
inc
ret
jnp
fincstp
rcrl
xchg
push
ret
fcoml
pop
iret
popa
xchg
fwait
or
mov
mov
outsb
mov
pusha
pushf
aas
mov
je
mov
movsl
fnstcw
mov
xchg
sahf
mov
lret
pop
ds
ja
int3
jnp
in
sub
shll
leave
sbb
xor
jne
fadds
adc
int3
sub
xchg
shll
xchg
out
sbb
sti
out
dec
add
or
out
dec
jmp
movsl
lret
push
cmp
xchg
push
sbb
push
aaa
xor
or
push
jnp
mov
xchg
aad
cmpsl
mov
aas
repnz
xor
dec
dec
popa
out
mov
adc
inc
jo
daa
cs
inc
xor
ss
cwtl
or
sbb
hlt
outsb
pop
xchg
push
nop
cld
loope
cmp
pop
call
mov
fmull
cmp
xor
bound
and
dec
mov
xchg
pop
dec
aas
sbb
cmpl
arpl
popa
dec
shrb
xchg
xchg
fwait
cmpsb
les
lea
adc
shll
cmp
js
aaa
loop
jp
pusha
scas
jne
dec
int3
xchg
cli
mov
cwtl
adc
mov
movsb
lcall
pop
fldt
push
fildl
jnp
loope
lcall
xor
xchg
aas
icebp
out
lcall
test
mov
insb
call
loop
mov
sahf
testl
xchg
or
fisubs
sti
daa
add
mov
in
inc
jae
dec
push
mov
cltd
sahf
push
jb
test
push
fistpll
scas
jbe
mov
test
sub
gs
push
xor
jg
js
pcmpeqb
mov
fisubl
shl
call
aaa
push
inc
pop
xchg
cwtl
or
dec
out
xchg
jae
lahf
adc
jno
imulb
push
arpl
das
sub
jne
cmp
out
mov
in
push
mov
addr16
push
sti
mov
xor
adc
fidivrl
mov
ds
lahf
cmp
mov
out
push
pop
jnp
push
cmc
cmp
inc
push
mov
repnz
clc
notl
cmp
lahf
test
mov
cmp
call
jle
pop
popa
imul
orb
fcoml
stc
iret
add
fucomip
lods
pop
push
xchg
dec
rcl
shl
sub
test
or
lods
xorl
test
mov
lret
sarb
jp
aam
out
xor
inc
ljmp
jge
mov
xchg
call
add
divl
mov
cmp
jecxz
addl
idiv
pop
jmp
mov
lock
call
push
cmp
mov
imul
xchg
pop
mov
sub
ja
cmp
inc
or
test
push
or
daa
stos
insl
mov
xchg
cmp
or
ds
add
cmp
dec
lock
out
out
jns
sub
movsl
cmpsl
dec
rorb
adc
stc
stc
stos
sbb
insl
push
jae
jne
cmp
shlb
push
pushl
popf
mov
leave
pushl
lods
insl
mov
add
inc
leave
add
mov
popf
mov
int
sbb
ret
mov
cmp
pop
jmp
mov
leave
jno
push
push
aas
xchg
pop
mov
push
gs
inc
sub
cmp
out
ljmp
inc
test
les
dec
rcrl
out
repnz
push
daa
lds
sub
mov
nop
imulb
pop
mov
daa
movsb
jbe
xor
or
inc
shr
xchg
pop
or
xor
sbb
mov
sbb
icebp
sbb
push
scas
push
into
xchg
je
jb
mov
lods
mov
rcrb
sub
lock
inc
pop
mov
lret
sbb
xchg
out
scas
lahf
jo
xlat
sub
pusha
adc
es
lods
test
add
push
fstpl
cmp
dec
xor
mov
int
rorb
fidivrs
loope
fdivl
inc
out
repnz
pop
adc
je
pop
mov
push
and
les
cmp
pop
mov
fiaddl
dec
push
xchg
jge
shlb
sahf
stos
popf
push
jge
cmc
movb
adc
lock
imul
xlat
xchg
addr16
push
xchg
jge
repnz
mov
pop
rolb
cmpsl
movsl
test
cwtl
and
shlb
mov
lds
push
or
inc
pop
dec
xor
fwait
int
lahf
mov
pop
cmc
xchg
imul
sbb
mov
popa
cltd
inc
push
add
lea
outsb
aas
and
push
adc
push
push
xor
jbe
in
adc
xor
pcmpeqd
or
out
fdivl
repnz
xchg
into
ljmp
fistps
add
negb
fmull
push
and
test
xor
cmp
jnp
daa
lea
ss
in
xor
add
sub
inc
icebp
mov
test
xchg
test
xchg
push
xchg
xchg
mov
aas
dec
push
add
jl
cli
jne
sub
sbb
cld
cmp
pop
xchg
xchg
lds
lods
mov
push
mov
scas
nop
in
mov
push
inc
les
mov
daa
lods
mov
loop
aaa
or
mov
inc
pushl
pop
out
mov
popa
arpl
test
xchg
mov
subl
scas
test
pop
dec
xchg
cli
scas
stc
push
jle
inc
popf
aaa
or
arpl
mov
mov
jno
add
push
mov
dec
xor
xor
push
test
adc
enter
xlat
and
sahf
imul
mov
in
mov
into
dec
int
lcall
and
mov
mov
and
sbb
push
fidivl
fwait
push
fidivl
pop
cs
loopne
and
jb
push
mov
adc
mov
inc
repz
mov
adc
xor
js
or
es
leave
fdivs
pushf
jne
es
mov
stc
or
mov
movsl
xchg
mov
cwtl
mov
sub
pop
cmp
je
das
mov
mov
nop
add
sub
jp
jb
push
and
sbb
adc
shlb
jge
arpl
rol
and
or
out
hlt
push
and
sbb
jo
aam
lods
sbb
xor
add
testb
mov
mov
aaa
jmp
fnstsw
mov
dec
pop
jne
dec
ret
sub
icebp
jmp
js
in
adc
es
sub
stos
dec
aam
leave
xchg
mov
into
mov
rolb
mov
inc
xlat
and
out
inc
dec
aam
loop
jne
dec
out
sarb
das
and
jge
ss
mov
and
mov
dec
add
pop
loopne
nop
mov
testb
push
sbb
fnstsw
dec
mov
xor
jp
cmp
frstor
xchg
fisttpl
cmp
push
pop
mov
lcall
test
mov
fdivr
pushf
dec
or
fnsave
lods
ds
int3
cmp
into
cli
aad
stos
xchg
js
pop
bound
in
jp
imul
ret
push
cmp
scas
pop
sarb
jbe
cs
and
push
cwtl
dec
rol
gs
cs
in
and
inc
inc
mov
ret
and
lock
aaa
jg
or
subl
xor
out
mov
hlt
push
push
mov
push
ret
xor
pop
adc
and
sti
and
outsb
cli
pop
inc
mov
and
fimull
insl
jmp
sub
mulb
xchg
xchg
dec
sub
cmp
adc
out
inc
test
add
mov
popa
dec
stos
sub
repnz
les
addr16
cmc
cs
push
sub
pusha
das
mov
dec
out
sbb
pop
pop
gs
xchg
push
std
lds
mov
das
lcall
and
jb
cmpsb
fdivs
pop
sub
lcall
fbld
push
dec
add
xor
neg
cltd
sbb
sub
mov
and
and
jns
insb
shrb
cmc
or
popf
ja
cmpsb
imul
mov
push
jle
cmp
ja
movsl
mov
dec
jmp
add
sbb
jo
test
insb
adc
push
scas
dec
xor
clc
fcmovu
and
in
in
xlat
or
ret
add
bound
inc
cmp
in
scas
or
push
call
lea
hlt
and
loope
mov
stos
xchg
sbb
out
sti
jno
mov
jb
fsubl
sbb
in
mov
mov
cwtl
jae
mov
pop
notb
ljmp
mov
xchg
scas
lcall
xchg
pop
inc
inc
and
mov
pop
loop
pop
frstor
loope
and
fidivrl
jecxz
push
enter
inc
mov
xor
push
sbb
mov
outsl
or
popf
adc
out
mov
jne
sub
dec
push
and
fdivrs
repnz
ss
push
xor
stc
call
xor
pusha
out
sbb
pusha
call
mov
dec
leave
mov
stos
dec
loope
add
mov
sahf
ficoml
and
xlat
xor
lcall
stos
dec
cli
ja
loope
out
cmp
add
icebp
fninit
push
out
lods
fdivrl
mov
xchg
sub
push
xchg
in
aam
pop
cs
and
fwait
shlb
and
aam
imul
and
mov
stos
adc
mov
mov
xchg
cmp
dec
lahf
outsl
add
fldenv
jo
and
lds
sub
inc
or
cmc
in
test
xchg
mov
rep
dec
popa
jae
pop
pop
xor
inc
or
mov
popf
subl
imul
test
or
push
outsb
push
dec
orl
negl
mov
dec
or
inc
rcrb
push
inc
lods
cmp
into
lahf
movsl
sub
mov
aaa
ljmp
cmpsl
add
adc
in
pop
repz
leave
es
adc
lods
jge
mov
sbb
je
cmpl
mov
pop
xor
insl
loop
imul
int3
popf
fimull
sub
mov
sbb
cmp
adc
xor
sbb
mov
xlat
stos
mov
sub
mov
or
outsb
cld
jns
lret
and
inc
inc
adc
subl
dec
jle
mov
cmp
cs
xor
movsb
out
mov
adc
sub
es
xchg
rclb
jb
jmp
xchg
adc
dec
mov
ds
filds
cs
inc
xor
sbbl
stos
in
jo
mov
popf
sahf
jle
bound
scas
jne
xchg
and
int
xchg
mov
daa
rclb
imul
mov
pop
in
xor
xchg
mov
mov
mov
add
add
jb
jle
mov
pushf
push
addb
out
xchg
arpl
js
loopne
mov
inc
repz
leave
push
jmp
push
lret
xchg
or
outsb
and
das
or
leave
mov
push
hlt
mov
xor
xchg
cmc
mov
pop
xchg
push
sbb
jge
push
mov
mov
xchg
test
leave
leave
pop
add
insl
es
imul
sarl
icebp
mov
insb
sub
movsl
xchg
adc
fstpl
inc
jmp
out
in
and
jl
loope
lret
and
mov
push
jbe
filds
cmp
dec
jg
es
mov
mov
mov
sub
mov
push
inc
xor
jns
sub
stc
lret
and
cmc
adc
adcl
pop
imul
sub
xchg
xchg
lock
pusha
fs
rcl
lret
out
add
out
cmp
aam
pop
movsl
push
lea
push
jge
lods
push
cmp
in
dec
push
daa
mov
pop
out
mov
ds
into
xchg
data16
mov
lock
push
xor
jecxz
xchg
insb
xchg
sub
mov
andl
add
cltd
xchg
add
arpl
cs
mov
mov
mov
daa
and
xlat
rorl
jnp
testl
inc
jno
xchg
aad
jmp
decl
clc
pop
jl
cmpsl
cld
nop
adc
addr16
xchg
xchg
loope
pop
ficompl
mov
in
push
add
or
outsl
mov
ljmp
les
ds
sub
out
nop
push
rorl
or
mov
cmpsl
jmp
xchg
jg
adc
call
sbb
dec
fdivrs
outsb
notl
jg
xor
repnz
push
loope
push
cmpsl
push
adc
or
loopne
cmp
flds
jnp
pop
repnz
or
sbb
add
jecxz
adc
pushf
sbb
scas
jno
jl
mov
sarb
jg
push
std
jbe
inc
dec
fcomi
daa
cs
and
iret
cmp
mov
xor
repnz
sahf
adc
xchg
stc
cmp
or
push
mov
bound
pop
add
and
iret
mov
fwait
mov
dec
imul
add
repz
and
and
xorb
or
mov
fsubrs
xor
xchg
or
push
mov
push
movsl
aaa
dec
sbb
test
jne
mov
adc
inc
adc
mov
sbb
inc
sahf
mov
fwait
push
roll
adc
lock
subl
adc
cmpsl
mov
push
push
cltd
pop
or
add
stc
scas
xchg
jb
jbe
mov
in
es
xchg
pop
jle
aam
inc
rolb
test
inc
adc
gs
mov
xchg
or
cli
outsl
aam
clc
jmp
test
ja
movsb
lcall
jg
and
bound
push
loope
xlat
das
rcll
mov
sub
stc
adc
ss
insl
fdivrs
ret
mov
ret
je
arpl
push
or
loop
scas
add
mov
push
cmc
jge
imul
cmp
call
add
add
xchg
out
repnz
push
pop
out
lods
aad
fwait
mov
ret
jecxz
add
push
dec
test
lods
shl
pop
jnp
and
out
into
ret
xchg
pop
jmp
clc
js
in
push
xchg
je
inc
fldcw
add
fs
jl
sbb
pop
push
loop
lcall
bound
test
mov
pop
icebp
sub
rolb
or
cs
mov
aam
hlt
lods
jg
mov
sbb
add
or
or
sbb
and
es
jge
aam
shlb
dec
push
jl
imul
sub
fldl
xchg
sbbl
mov
cmpl
dec
sub
xor
lds
cmp
cwtl
ds
cli
in
pop
dec
fadds
sub
cmpsl
mov
out
inc
mov
or
adc
mov
shlb
jge
fnstcw
dec
test
xchg
push
mov
scas
test
pop
js
or
lahf
push
mov
and
out
jp
jne
and
inc
jb
pop
sbb
add
pop
and
mov
jnp
cltd
fucomi
and
or
pop
cmp
or
lea
dec
movsl
mov
aad
dec
inc
xchg
aaa
jge
gs
mov
out
xchg
pop
imul
js
or
push
addr16
inc
mov
xchg
scas
mov
add
cmp
loope
push
stos
mov
push
je
mov
ret
in
and
daa
pop
std
inc
jae
lods
pop
data16
xor
pop
jno
movsb
pop
popl
addr16
pop
and
jge
cmp
jns
out
lret
xchg
inc
scas
outsl
mov
sbb
jle
mov
mov
enter
push
sbb
xchg
cwtl
mov
hlt
and
add
sbb
adc
pop
xchg
push
push
out
dec
or
call
test
repnz
mov
inc
nopl
mov
sbb
pop
inc
fcmove
std
adc
inc
imul
test
push
xchg
lret
xchg
nop
cmp
in
fbstp
repz
adc
icebp
add
adc
jp
mov
sbb
pusha
mov
push
push
push
dec
mov
pusha
jmp
std
pop
insb
dec
cmp
push
idiv
fsubs
out
and
inc
pop
arpl
mov
shll
imul
ljmp
mov
in
jbe
sub
out
lods
daa
cmp
mov
cltd
xor
jnp
inc
nop
out
push
sub
sahf
clc
cmp
xchg
scas
in
int
sub
jmp
pop
add
sub
push
mull
adc
jecxz
wbinvd
dec
test
imul
aad
mov
push
sbbb
mov
pop
dec
scas
and
stc
push
daa
stc
jns
or
inc
push
sbb
aaa
scas
sub
cmpsl
dec
out
mov
pop
mov
or
mov
movsb
mov
mov
mov
out
outsl
call
sbb
jl
rcrb
and
icebp
inc
dec
out
jge
sub
jae
xor
pushf
ficompl
add
sub
mov
inc
xor
pop
cwtl
or
pushf
js
jno
dec
mov
insb
xor
inc
adc
sub
push
sbb
cwtl
adcl
adc
xchg
cmp
inc
fwait
xchg
mov
ja
lcall
jae
mov
es
adc
cld
ss
loopne
pop
scas
or
rcll
pop
in
pushf
shufps
popf
ficomps
fwait
mov
mov
movsl
not
pop
mov
in
sar
insl
movsb
sbb
imul
fdivs
in
ret
fdivr
popa
popf
mov
push
arpl
daa
or
jmp
xlat
mov
mov
sbb
cld
push
js
pop
adc
outsb
adc
iret
mov
inc
sub
mov
pop
shlb
inc
ja
xchg
mov
aas
stos
dec
stc
fwait
cli
dec
jl
hlt
xchg
int
mov
ret
mov
fs
aam
cmp
aam
and
inc
or
dec
leave
cmp
syscall
jbe
xchg
repnz
mov
pop
push
mov
shufps
or
mov
mov
lock
pusha
aaa
ja
mov
inc
inc
jne
adc
mov
js
scas
xorl
movsl
popf
sub
insl
fcomi
pop
addr16
inc
cmp
outsb
inc
mov
movsl
mov
cs
rcrl
push
xor
ret
and
int3
or
pop
sahf
fdivrl
mov
cmp
push
or
push
fisubs
dec
lret
emms
repnz
addr16
jmp
pop
in
popf
je
push
pop
jne
mov
fldcw
mulb
fwait
ret
xchg
std
arpl
movsb
inc
mov
addr16
pusha
ss
rcll
mov
sbbl
mov
xlat
shrl
aam
hlt
jle
in
adc
insb
clc
lds
lcall
aam
sub
dec
push
xchg
push
cmp
or
mov
push
lods
outsb
es
hlt
sub
aam
leave
or
xor
xchg
adc
push
sub
jp
sub
int
inc
scas
and
popf
mov
push
add
xor
sub
sub
mov
cmpb
mov
xchg
mov
sub
push
mul
inc
push
sub
or
xorl
iret
lods
add
addb
push
int3
clc
cld
out
loope
aam
and
xchg
pop
into
and
ret
sbb
cmp
jno
mov
addr16
mov
jnp
and
insb
cmc
jb
fmul
lods
std
js
popf
cwtl
popf
das
xor
imull
repnz
inc
jno
enter
dec
jl
repz
imul
out
test
lods
sub
loopne
xchg
jbe
pop
js
dec
add
and
arpl
bnd
push
fsts
jbe
and
mov
mov
int
imul
mov
hlt
and
mov
xchg
rol
nop
mov
lret
scas
mov
pop
outsl
jge
mov
jne
fimull
fsubrl
lods
and
jne
ret
cmpsl
int3
aad
dec
iret
sub
imul
and
cmp
lods
nop
pushf
ds
add
mov
dec
aaa
push
insl
xchg
lock
rcr
cmpb
cmp
sbb
aaa
sti
loop
pop
sbb
add
or
movsl
gs
cmpsb
out
mov
fsubr
insl
fstl
aaa
push
subl
in
out
testb
jmp
ret
in
sbb
loop
dec
fstpt
mov
or
mov
gs
in
std
push
dec
rcrl
lds
dec
mov
mov
daa
and
pop
out
dec
div
jg
jno
or
dec
xchg
scas
clc
enter
outsl
sti
jecxz
dec
adc
push
lcall
arpl
enter
ss
add
cmp
sub
mov
ja
lahf
adc
fcoms
cltd
loope
in
shlb
xor
cmp
push
xchg
pop
fildl
das
stc
mov
and
lea
mov
cmc
dec
es
adc
dec
xchg
int3
mov
pusha
fcoms
mov
lock
in
xchg
cwtl
popf
dec
and
jb
inc
cmp
pushf
and
sub
or
pop
and
movsl
or
pusha
enter
dec
lock
fmuls
pop
xorb
xor
sub
call
daa
add
sub
js
cmp
stos
mov
fadds
cs
xchg
arpl
pop
sti
lcall
popa
ret
push
aad
aas
ret
cmpsl
leave
lds
stos
or
popf
add
testb
sahf
ljmp
jbe
hlt
fs
sub
idivb
sub
sub
testb
sti
jl
sbb
pop
bound
xchg
test
popf
rcll
or
enter
call
insl
mov
xchg
movsb
cmp
fstps
push
adc
sahf
pusha
aad
daa
pop
icebp
loopne
dec
adc
mov
into
rcrb
lods
push
pop
flds
sti
mov
and
xlat
xor
pushf
cmp
jns
out
sbb
xor
cmp
mov
andl
push
ret
popa
add
dec
mov
adcb
das
push
int3
mov
or
enter
into
stos
xor
dec
mov
mulb
and
addr16
std
cmpl
add
sbb
mov
push
fs
jg
inc
mov
mov
fisubs
mov
adc
push
sub
bound
outsl
push
gs
adc
test
inc
jp
in
pop
outsl
fs
and
cmp
icebp
pop
xor
mov
jns
sub
loopne
lcall
cmp
mov
mov
test
xorl
mov
pop
mov
and
sbb
xchg
and
sub
daa
sbb
in
es
mov
xlat
out
data16
frstor
xchg
sbb
cmc
sbb
mov
cmp
xchg
push
xor
sahf
aad
nop
rorl
pushf
lahf
lahf
and
cmp
fisubl
mov
dec
mov
sbb
psllq
lods
dec
addl
xchg
xchg
jmp
mov
outsb
inc
out
ljmp
mov
jbe
xor
xchg
push
push
bound
repnz
inc
push
fistpl
add
shll
dec
adc
hlt
dec
mov
aaa
mov
test
mov
jns
fistl
or
int
jmp
mov
in
movsb
mov
lods
mov
mov
add
loope
clc
nop
lock
mov
popa
jg
mov
sbb
enter
mov
jae
aam
mov
jg
inc
sbb
hlt
repz
pop
cmc
out
inc
dec
jae
stos
stos
dec
add
jmp
xor
pop
or
in
mov
mov
push
sbb
jne
push
mov
pop
ss
xchg
cmp
jb
jo
jle
call
mov
jnp
push
xchg
push
andl
push
pop
loope
lds
or
addb
and
dec
mov
in
sar
sbb
pop
ret
xchg
shrl
jb
pop
pop
dec
movsb
mov
dec
jmp
mov
pop
and
sbb
and
fisttps
ficomps
das
ror
push
pop
mov
jecxz
in
lock
mov
cs
mov
xchg
or
cmp
rcr
and
dec
arpl
data16
or
mov
and
cli
imul
in
jmp
or
push
push
push
cmovo
mov
aaa
sbb
mov
cld
in
xchg
pop
add
lea
sub
cli
dec
int3
cwtl
movsb
inc
mov
push
xchg
mov
or
sub
adc
cltd
xor
in
pop
or
push
test
mov
aaa
data16
add
and
lods
pop
push
sub
lret
or
ret
cmp
data16
push
or
inc
popa
mov
or
add
cmpsb
stc
sbb
ret
mov
and
xchg
mov
pushf
jae
aam
aad
push
das
fsubr
and
mov
imul
add
push
pop
jnp
aam
lea
aaa
cmp
mov
mov
dec
stc
lock
addr16
outsb
outsl
or
add
cltd
data16
movsb
lret
nop
pusha
test
and
mov
pop
pop
nop
cld
sbb
mov
push
sub
insb
mov
push
das
jne
ja
jb
iret
aad
inc
jnp
sbb
xchg
divl
fucomi
mov
sbbl
pop
clc
xchg
push
or
test
mov
in
push
mov
je
scas
xchg
outsb
mov
pop
push
mov
int
dec
jecxz
movsb
ja
lods
mov
stos
inc
xor
xchg
shrb
jg
xor
xor
xor
xchg
mov
xor
dec
je
jmp
pop
and
adc
mov
popf
jecxz
dec
sbb
dec
cli
mov
mov
mov
dec
add
xor
xchg
sub
adc
xlat
mov
pop
jb
inc
test
ja
mov
sbb
cld
xor
outsb
mov
lock
lcall
cli
dec
jg
stos
imul
xor
xor
mov
jl
ljmp
fsubl
cmp
fstpl
faddl
push
dec
or
jecxz
jo
int
mov
test
or
xor
sbbb
add
or
jb
mov
ret
lret
push
stc
adc
repz
mov
sbb
sbb
clc
push
push
adc
jg
fcomps
pop
add
mov
loopne
stc
push
mov
insb
xchg
out
mov
sbbb
pop
dec
ret
addr16
inc
push
mov
adc
mov
in
sahf
stos
mov
or
je
dec
or
cmp
cs
push
mov
inc
lock
fmull
xor
aas
xchg
mov
adc
xor
mov
arpl
push
cmpsl
repnz
mov
cmp
daa
inc
jb
repnz
test
adc
enter
xor
cmp
lcall
xchg
push
sub
sbb
adc
test
push
testb
cs
movsl
mov
jl
adc
mov
add
dec
fwait
hlt
pop
inc
js
and
cwtl
mov
cmpsl
insb
leave
ret
out
std
mov
add
add
je
xor
std
leave
es
jg
rcrl
pop
dec
scas
out
jmp
call
dec
xchg
and
and
loop
cmpsl
aas
js
xchg
cmp
sbb
test
push
inc
jbe
clc
xor
mov
aas
mov
add
mov
in
xor
std
repz
js
jmp
clc
stc
cmpsb
pop
sbb
int3
sbb
adc
addr16
mov
test
sbb
js
jmp
test
mov
or
popf
ja
lret
and
popa
push
xor
pop
lods
inc
roll
push
mov
inc
xchg
cmp
push
outsb
jnp
pushw
dec
jno
addr16
inc
push
addb
decl
jl
arpl
or
xor
loopnew
in
hlt
ret
cwtl
enter
push
out
mov
cltd
hlt
push
cltd
and
scas
xor
stos
jle
pop
mov
or
jb
dec
shrl
cmp
imul
sbb
fcmove
sbb
cmp
xor
push
jo
mov
xchg
pop
popf
sti
xor
xchg
xchg
adc
xchg
jae
and
les
sub
push
rclb
bound
jge
sbb
pusha
iret
icebp
mov
add
adcl
scas
push
mov
mov
incb
fwait
ret
gs
mov
dec
pushf
insb
dec
pop
insb
push
sbb
jo
jae
cmp
ja
add
xor
xor
jb
fcmovbe
push
jae
mov
sahf
push
adc
pop
cmp
push
aas
shlb
pop
in
or
dec
add
push
roll
sbb
test
jae
pop
mov
test
daa
test
or
xchg
mov
push
sbb
data16
jl
add
mov
xchg
cmpsl
pop
adc
int3
push
shlb
add
mov
roll
xchg
mov
and
cltd
cld
cwtl
lock
enter
pop
in
sbb
in
add
ret
insb
mov
rorb
orb
movsl
call
out
and
lods
cmpsl
loopne
aaa
outsb
sbb
scas
int3
push
xor
outsb
dec
out
cmp
fidivl
jmp
jae
cmp
sahf
popa
leave
daa
inc
jae
int3
cmp
inc
and
xor
scas
jno
icebp
pop
fwait
repnz
cltd
fwait
ljmp
or
adc
aaa
sub
shll
mov
popa
sub
aas
insl
cmp
repnz
int
nop
push
inc
dec
mov
xchg
inc
mov
std
test
mov
mov
pop
mov
pop
mov
jae
sub
pop
sti
cmpsl
add
ret
inc
jo
dec
dec
pop
pop
or
loop
adc
xlat
inc
mov
divl
inc
mov
das
cltd
incb
fistl
inc
dec
mov
jp
aaa
xor
push
mov
movsb
xchg
jge
push
int3
inc
dec
cli
mov
ljmp
int3
fsubrl
pop
incl
mov
add
jnp
dec
xor
mov
int3
or
jg
dec
outsb
pop
ljmp
mov
je
test
inc
mov
int
test
mov
rorb
or
sahf
cmpsl
cmp
pop
inc
cmp
dec
xchg
nop
xchg
inc
loope
mov
pop
mov
mov
xlat
test
mov
jns
xchg
jge
mov
cmp
fcmovb
loop
mov
pop
push
stos
pop
inc
les
cmp
leave
ss
xchg
inc
ret
movsl
mov
out
lods
inc
mov
movsb
sbb
mov
adc
sbbb
cmp
xor
cltd
push
push
lds
sbb
ret
cmp
add
push
adc
out
testb
xlat
inc
das
scas
push
popf
jnp
mov
mov
dec
and
loop
jg
dec
mov
cmc
dec
fidivl
xchg
xchg
mov
adc
sub
jne
cmp
fs
loope
fildl
jnp
jecxz
sahf
pop
popf
or
out
mov
and
mov
cmp
iret
add
jae
in
test
xor
dec
ret
fbld
data16
sbb
or
sub
arpl
lahf
fiaddl
xchg
int3
xchg
jg
js
shl
adc
push
out
dec
xor
test
push
add
mov
int3
lcall
fadds
mov
ja
add
cmpps
enter
fnstcw
and
push
outsl
jl
scas
xchg
sbb
dec
sub
outsl
jle
aam
inc
lret
or
or
fs
lds
or
mov
cli
xchg
cmp
fstl
fs
fmuls
sbbb
sbb
xchg
mov
or
and
out
cmp
xchg
sub
mov
jnp
shrl
dec
test
cmpsb
insb
cmpsl
fs
or
mov
or
sub
call
loopne
dec
iret
js
push
inc
adc
push
pushf
mov
xchg
pop
adc
mov
clc
mov
mov
lahf
lods
mov
mov
fnstenv
les
mov
stos
push
fdivl
int
mov
test
cmp
cld
mov
adc
xchg
sbb
dec
out
mov
lret
jae
jmp
fcompl
outsb
dec
push
scas
sub
cmc
ret
cmp
add
mov
push
repnz
pop
sub
fs
pushl
test
in
mov
iret
test
dec
stos
imul
mov
jmp
and
inc
out
jl
push
nop
dec
cli
loope
pop
lock
arpl
cld
mov
adc
dec
or
arpl
jl
mov
int3
xchg
sahf
ss
cmp
cs
sub
les
fstpl
xorl
adc
push
inc
add
cmp
jae
or
mov
mov
push
push
pop
js
inc
xor
loope
je
sbb
stos
push
jnp
fwait
insl
dec
testb
stc
cmp
sub
movsl
pop
xchg
mov
pop
mov
jg
lcall
mov
fs
stc
mov
stos
xchg
sbb
int3
aas
cmc
loope
cmpb
cmp
bnd
pop
fistl
popa
xchg
jl
add
xchg
dec
notl
fs
daa
xchg
call
inc
hlt
movsb
fldenv
bound
fcomp
inc
pop
dec
call
sub
and
and
repnz
inc
dec
xor
dec
push
xchg
add
add
mov
pop
test
add
mov
and
mov
arpl
ja
push
jle
mov
imul
popa
pop
mov
inc
pop
xlat
xorb
ja
xchg
cmp
cltd
mov
fldl
cltd
mov
mov
pop
ss
mov
sub
popf
dec
dec
jecxz
cwtl
sbb
pop
fsts
sub
and
lds
aad
push
mov
mov
stos
ja
pop
lret
iret
fistl
sahf
out
fistps
mov
xchg
mov
dec
push
push
enter
ss
sbb
js
cmp
in
adc
in
mov
cld
mov
xchg
pop
cwtl
stos
jp
sub
or
xchg
lds
lods
rcrl
xor
stos
xor
push
mov
stos
sub
sub
pop
sbb
in
sub
hlt
and
adc
push
pop
lret
das
popa
jl
iret
add
outsl
push
mov
mov
insl
inc
jp
ljmp
loopne
cmp
jle
pop
pop
and
ds
out
movsb
jge
arpl
pop
outsb
jbe
pop
sub
sbb
jp
cmp
or
fwait
jl
lcall
push
mov
data16
or
adc
mov
dec
sahf
fcomps
cwtl
or
sahf
out
test
mov
xor
mov
repnz
pushf
push
inc
lock
or
cld
mov
cmp
arpl
nop
inc
add
jle
test
pop
nop
hlt
push
ret
jnp
mov
mov
subl
movsb
dec
fwait
add
int3
and
jns
pop
jecxz
cmp
sub
inc
stos
sub
mov
mov
clc
xchg
mov
lea
add
sahf
mov
xchg
mov
test
sarb
mov
nop
out
inc
lods
sub
add
jmp
repz
sub
push
lods
jo
mov
cld
push
cmp
stos
jae
mov
push
scas
loop
mov
jle
pop
adcl
mov
ss
mov
loop
xor
add
and
movsl
pop
pusha
pop
add
pop
sti
in
movl
cltd
faddl
dec
adc
shrb
pop
into
dec
mov
add
or
jg
jmp
jb
xchg
inc
pop
lds
inc
push
jge
cmp
testb
inc
or
jmp
out
and
mov
mov
mov
imul
lods
or
push
pop
dec
inc
sbb
push
outsl
xchg
mov
scas
gs
aaa
push
mov
mov
xor
daa
xor
rorb
jno
xorb
jnp
pop
dec
std
jle
push
js
lods
sbb
add
shr
pusha
mov
jno
lods
mov
jmp
push
popa
pusha
add
cli
out
mov
sti
aad
outsb
nop
xor
movsl
cmp
push
adc
std
int3
mov
pop
add
jge
inc
or
pop
enter
mov
loop
adc
mov
cmpsl
lahf
pop
call
loope
sub
movsb
xchg
pop
cmp
mov
iret
pop
and
or
sbb
dec
sti
sub
sbb
mov
jge
fimuls
fnstsw
and
push
xchg
and
rcl
repnz
mov
std
lret
repz
xor
and
imul
xor
mov
arpl
mov
jno
cmp
pusha
lock
mov
push
lods
jl
sti
das
fwait
adc
cmp
mov
push
mov
enter
sub
pop
xchg
lds
inc
popl
inc
fisubrs
mov
sub
sti
les
push
pop
add
leave
add
xchg
shrl
call
decl
pusha
sub
pop
pop
mov
daa
mov
lea
test
clc
enter
pop
xor
adc
cmpsb
jp
nop
or
ffreep
sub
enter
mov
pop
inc
cltd
and
daa
int3
cld
xchg
jmp
jp
lods
mov
jbe
inc
clc
sbb
jae
add
outsl
imul
in
cmpl
jne
mov
fxtract
and
int
jge
cmp
andb
mov
mov
test
lds
hlt
inc
hlt
and
cmp
sub
inc
jg
adcb
loop
mov
inc
mov
test
insl
fnsave
outsl
cltd
lea
in
sbb
adc
mov
leave
dec
xchg
imul
loope
mov
pop
sarb
mov
dec
xchg
add
jns
and
mov
outsl
mov
inc
push
les
pusha
inc
pop
movsl
inc
cmpsl
push
inc
sbb
test
ja
dec
cmp
sub
lock
xchg
jnp
cs
je
adc
out
shl
lret
push
xchg
xchg
aam
and
inc
adc
fimuls
movsb
push
or
fldlg2
ss
mov
add
push
adc
in
jae
adcb
xchg
fbld
mov
fdivs
test
std
lahf
loope
roll
cmp
data16
inc
and
add
rcll
push
xchg
mov
pop
mov
faddl
pop
push
xor
sbb
mov
cmp
mov
sub
in
in
mov
sub
scas
fimull
sub
xchg
stc
cs
gs
push
adc
pop
sbb
popf
ud1
gs
jecxz
xor
push
sub
mov
cmp
push
loopne
add
fcomps
sbb
addb
push
int
and
ret
aam
fildll
jmp
push
inc
lods
adc
push
nop
je
mov
push
scas
out
adc
ds
ds
movsb
mov
add
xchg
or
iret
cmp
outsb
mov
iret
sti
pop
je,pn
ja
stos
push
cmpsb
jp
in
pop
pusha
xor
arpl
sbb
enter
ljmp
adc
pusha
push
pop
jmp
cmp
and
jp
hlt
mov
int3
sub
mov
add
out
jecxz
jecxz
xor
inc
xchg
mov
mov
sub
jle
pop
and
jge
ja
test
push
lock
xchg
addr16
mov
cmp
push
add
addl
pop
xor
mov
inc
lret
mov
cli
scas
push
iret
out
mov
pop
hlt
cmp
das
or
jle
xchg
std
mov
loope
into
add
push
cltd
mov
out
cli
sarb
shlb
mov
push
addb
pop
pop
sahf
and
rcrb
inc
jmp
aad
and
push
cmpsl
cmp
xor
lods
mov
out
pushl
cmp
adc
lcall
mov
xchg
lret
xor
imul
je
mov
jae
sbb
cmp
inc
fstpt
push
mov
mov
inc
mov
xchg
hlt
inc
fists
mov
cmpsb
dec
faddl
in
lods
repnz
jb
cmp
adc
push
outsl
loop
push
adc
fdivs
dec
repnz
lea
pushf
ret
and
mov
cwtl
push
out
cmp
dec
mov
int3
mov
mov
data16
sub
mov
lcall
int3
cmp
push
sub
or
in
je
jl
jo
cmpsl
dec
test
fcmovu
mov
jne
stc
ja
jnp
push
lods
ret
nop
mov
add
movsl
fisubl
dec
lret
std
sbb
leave
push
mov
xchg
imul
int
dec
repnz
cltd
movsb
push
mov
push
movsb
push
subl
mov
sbb
inc
cld
xchg
out
mov
and
pop
shlb
adc
mov
scas
stos
cmpsl
add
add
cli
movsl
icebp
ljmp
mov
outsb
inc
out
mov
aas
cld
or
jl
imul
out
sub
stc
sbb
mov
inc
out
rcrl
xor
int
sub
test
lock
out
and
mov
imul
pop
int
dec
and
or
pop
out
jl
push
popa
xchg
cmpsb
notb
or
fsubr
mov
cmpsb
imul
xor
mov
movsl
pop
stos
popa
push
mov
call
pop
xor
inc
repz
je
sbb
aam
cmp
lds
xor
cmp
cld
test
mov
es
jg
lods
stos
pop
dec
cmp
and
dec
out
lcall
imul
cmp
jno
popa
dec
jne
popa
mov
mov
aaa
outsl
push
hlt
xchg
inc
cmp
aaa
mov
ljmp
stc
jbe
scas
in
push
pop
inc
fwait
mov
jmp
imul
inc
mov
and
pop
sbb
xchg
dec
push
sbb
je
fsubp
jmp
ret
mov
movb
imul
pop
lea
mov
in
adc
stc
adc
cmp
mov
fistpl
int3
in
add
add
mov
scas
push
aam
aas
arpl
push
je
mov
sarl
ret
push
inc
lret
add
jg
and
xor
roll
and
jge
repz
mov
mov
fs
xchg
sub
dec
outsl
mov
mov
aas
int
loopne
or
push
rolb
inc
push
fdivl
std
gs
pop
clc
movsl
cmp
hlt
iret
dec
push
lret
mov
lret
aaa
iret
test
cmpsb
test
dec
aas
gs
popf
cmp
inc
add
js
xchg
mov
bnd
add
mov
in
dec
lret
in
dec
lahf
mov
or
and
add
push
lods
or
dec
test
fldenv
xchg
pop
mov
sti
push
rcr
jmp
dec
ljmp
scas
jne
adc
xor
ss
adc
movsl
pop
punpcklwd
and
sub
mov
push
sbb
push
fwait
jbe
or
mov
js
bound
cmpsb
sbb
xor
xchg
jno
or
nop
in
aaa
call
ss
pop
mov
mov
shlb
lahf
test
push
and
inc
inc
mov
insl
push
lea
notl
xchg
jge
xchg
pop
popa
gs
pop
ss
bound
pop
mov
xor
test
push
dec
or
inc
cmp
adc
push
mov
imul
mov
add
xchg
repz
dec
mov
inc
adc
mov
and
inc
roll
rorb
mov
insl
adc
and
dec
sbb
push
stos
xchg
mov
std
pop
pop
and
das
rcrb
jmp
js
or
js
or
push
icebp
test
psllq
out
or
jmp
es
mov
fisubrl
ret
or
out
mov
inc
aad
inc
sbb
loop
xor
sbb
push
lods
daa
lods
xchg
push
sbb
outsb
jns
jge
xchg
and
jg
loop
sub
push
popf
xchg
lret
sub
jb
cmp
lcall
xor
lods
imul
test
or
ds
lds
stc
push
out
aas
mov
aas
adc
out
repz
mov
mov
adc
js
pop
sbb
jmp
ret
rcrl
sbb
sbb
xor
loopne
insb
clc
rcrl
jmp
ret
fdiv
int3
ss
fucom
out
out
or
lret
ffree
push
ljmp
je
dec
push
es
jno
inc
xor
mov
mov
in
mov
dec
int
sbb
loop
lcall
pop
sbb
shlb
push
add
pop
sahf
or
adc
sub
or
xor
or
mov
pop
or
xor
mov
in
xchg
and
lcall
mov
pop
add
mov
jge
filds
xchg
lods
fimull
mov
xor
into
sbb
dec
cwtl
test
mov
daa
sub
stos
test
stos
fidivrl
stc
inc
inc
jge
adc
inc
sub
xchg
mov
aaa
mov
xchg
add
jg
mov
mov
push
mov
pop
inc
mov
xchg
or
fstl
xchg
dec
cs
stos
xor
mov
popa
lret
fdivp
aad
stos
mov
mov
stc
cmc
mov
mov
in
and
ljmp
sub
fistpl
jl
scas
mov
clc
nop
push
mov
popf
shlb
add
daa
jl
cmp
mov
ret
dec
xlat
adc
into
sub
jecxz
xor
dec
aam
jle
pop
sbb
test
jmp
and
pop
sub
pop
lods
push
je
or
pop
jg
outsb
loopne
rol
jbe
xor
out
pop
or
push
xchg
adc
and
cmc
lds
je
or
aaa
mov
hlt
fs
mov
jl
call
push
jmp
das
aaa
jp
sub
push
xchg
ss
insl
push
movsl
mov
outsl
xor
stos
pop
and
jge
insb
xchg
cmc
sub
lret
outsb
je
je
pop
push
inc
sub
adc
pop
jmp
push
jp
daa
xor
es
movsl
test
cmp
xor
xor
xor
lock
call
outsb
mov
cltd
xor
dec
and
pop
mov
inc
sar
add
add
ds
xchg
int3
xchg
push
lea
xor
sbb
sub
out
mov
push
mov
cmpsb
mov
jns
jle
in
in
out
arpl
in
adc
sbb
fldl2t
adc
mov
or
cmpsb
cmpsb
add
ss
cmp
cmp
pop
call
cmp
and
inc
mov
dec
fimull
push
popf
inc
stos
push
pop
push
xor
and
xor
cmc
daa
jne
xchg
int3
andl
jbe
adc
clc
aas
addb
cmp
shlb
sarl
icebp
xchg
cmp
push
imul
inc
call
push
rolb
imul
cmp
xlat
jp
and
ret
out
incb
cwtl
sbb
push
je
lock
push
imul
or
inc
insb
aad
fs
xor
inc
jmp
movsb
lcall
adc
add
les
push
mov
scas
mov
mov
push
sub
sub
jl,pn
sti
push
jg
cmp
xor
xlat
mov
cmpsl
std
int
sbb
add
int
add
adc
mov
jecxz
cpuid
insb
adc
lods
dec
sbb
xchg
negl
push
mov
xor
loope
jbe
pop
sbb
insb
int3
not
in
orb
jbe
adc
insb
hlt
jle
sub
rclb
clc
idiv
cmp
adc
pushf
enter
push
mov
adc
stos
push
dec
inc
sbb
add
mov
into
sub
sub
shrl
push
js
pusha
sub
cld
mov
inc
mov
jl
mov
jl
addr16
repnz
cltd
neg
mov
sti
or
mov
aad
cmp
test
sub
leave
push
push
xor
sbb
cmp
jge
xor
iret
pushf
pop
sub
mov
dec
push
adc
push
jb
xor
pop
in
pop
or
ret
push
sahf
pop
loope
jae
movsl
pop
into
inc
push
xchg
mov
mov
sbb
add
cwtl
mov
mov
fcoms
add
mov
mov
push
imul
push
inc
cmc
mov
mov
mov
and
jecxz
mov
pop
mov
and
lahf
rorl
popf
mov
push
jecxz
sub
iret
sbb
sbb
mov
inc
push
call
bound
adc
lcall
sub
in
into
nop
je
lahf
int3
xlat
lcall
dec
push
out
xchg
xchg
stos
adc
xchg
int3
movsb
je
xchg
scas
icebp
bound
dec
stos
ja
push
jge
bound
popf
lods
xor
dec
push
ja
and
out
cmp
adc
cmpsl
das
movsb
xor
mov
ss
fcmovnu
idivl
imul
jo
mov
cmpsl
mov
hlt
mov
mov
jbe
loope
dec
mov
fdivrl
mov
sub
scas
inc
xchg
mov
add
add
mov
add
sbb
xlat
stc
jae
jg
outsl
lret
cmp
incl
lock
inc
in
hlt
fidivrl
dec
stos
or
mov
push
or
aaa
mov
xor
int3
aam
mov
iret
pop
nop
vpunpckldq
xor
call
add
lods
orl
mov
imul
es
or
jo
fucomi
mov
jno
pop
scas
fcomp
outsb
imulb
xor
dec
mov
aas
jmp
dec
mov
add
sbb
leave
outsb
jb
sahf
aam
push
dec
mov
mov
ljmp
imul
lods
lods
fs
inc
stos
push
dec
ss
jg
aam
adc
cltd
arpl
out
or
cmp
cmp
lock
pop
rcll
jno
testb
jge
gs
flds
iret
rcrb
mov
stos
pop
out
mov
sbb
cltd
jle
cmc
cmp
enter
jl
sbb
adc
cltd
rcll
pusha
cmp
push
xor
jno
test
das
insb
clc
fwait
bound
aam
push
insl
adc
xchg
outsb
cmp
dec
imul
cmp
in
sub
iret
sbb
add
add
test
xchg
lret
add
dec
filds
data16
daa
mov
test
sub
jbe
or
into
mov
or
lods
or
sti
lahf
and
scas
insl
jb
aam
jmp
push
push
pop
cmpb
push
push
aaa
push
xor
or
cmp
jbe
add
add
sub
fnstsw
adc
push
sbb
push
imul
fwait
mov
stos
pusha
mov
inc
push
out
jge
leave
mov
cmpsl
das
in
adc
xchg
ret
imul
rclb
inc
negl
notb
xor
addr16
and
add
scas
fdivrl
sub
lods
push
lahf
cmp
jmp
add
mov
loopne
outsb
push
aas
addr16
xchg
adc
push
cmp
jp
aaa
or
inc
test
cmp
mov
insl
cmp
cmp
sbb
push
cs
testb
ds
loop
xor
inc
xchg
mov
or
jb
sub
cwtl
shll
jns
lahf
pop
adcl
or
jnp
lahf
or
add
stc
pop
mov
cltd
std
nop
fstpl
dec
lretw
fwait
xchg
fstpt
cmpsb
mov
fmul
lds
and
lds
fldcw
jl
out
das
inc
stos
lcall
mov
cmp
sub
cli
aaa
sbb
mov
dec
sarb
inc
mov
or
mov
or
ljmp
jge
add
fisubl
leave
faddp
pop
push
xchg
les
mov
mov
scas
dec
imul
push
arpl
mov
sarl
cmpsb
push
ret
lahf
loop
pop
and
pop
xor
jge
push
sbb
push
mov
add
mov
ja
push
je
movsl
pushf
divb
pushf
fisubrl
inc
sbb
lods
push
mov
ficoms
sub
add
rcrl
push
sub
xor
in
pop
dec
sub
addr16
pop
insb
adc
les
cmp
pop
pop
cmpsb
mov
fdivr
inc
ds
fcomi
movsb
xor
push
jg
pop
cmp
lret
cmc
into
cmpsb
jmp
out
inc
jg
mov
add
push
insl
out
stc
sbb
lahf
cmp
jl,pn
cwtl
mov
in
sub
insl
inc
push
int
loop
enter
jbe
jb
movsl
sub
add
cmpsl
pop
dec
fs
cld
xchg
mov
sahf
nop
mov
jge
sub
adc
jp
adc
flds
hlt
ret
sub
jmp
call
fbstp
add
rcll
mov
retw
push
sbb
mov
and
inc
mov
mov
jge
cmp
mov
add
iret
loop
int3
or
jne
xchg
std
sub
lcall
or
mov
mov
in
fdivrs
loopne
sbb
pop
shlb
pushf
int
xor
mov
adc
push
ror
push
repz
cwtl
jmp
loopne
jecxz
jno
into
dec
jg
jecxz
lahf
jno,pn
cmp
pop
lea
mov
popf
push
push
lods
test
add
mov
adc
stc
xchg
in
ret
and
mov
sbbb
pop
ljmpw
sahf
jp
sbb
imul
or
ja
jno
in
xor
je
sbb
lret
mov
cmp
inc
jbe,pn
mov
push
sbb
cwtl
das
pop
sahf
aas
xchg
imul
negl
sbbl
imulb
sbb
loop
test
fs
into
lods
mov
mov
pop
jecxz
sub
ficomps
and
int
inc
add
test
or
push
insl
shlb
xor
mov
cld
pop
sbb
adc
adc
rcll
out
dec
mov
push
or
cli
sub
push
adc
addb
in
xor
adc
aaa
jbe
data16
inc
mov
ss
jbe
cmpl
leave
mov
cmp
sbbb
cmpsl
inc
jle
icebp
add
mov
pop
hlt
jg
daa
add
and
fistpl
mov
cmp
cmp
insl
xchg
ss
int
sbb
cs
xchg
or
loop
jge
inc
fmulp
pop
push
add
test
enter
push
cmp
les
sbb
lret
faddl
lea
data16
sbb
sti
das
push
test
movsl
test
push
ds
call
rclb
cmp
rcll
or
jle
xor
mov
mov
push
inc
dec
push
cmp
iret
xchg
loopne
jg
pop
adc
icebp
insb
sahf
lret
loop
pop
loopne
test
jne,pn
repz
sub
or
mov
or
in
xor
jecxz
pusha
fnstcw
bound
adc
push
ret
out
fnstenv
add
dec
std
insl
cmp
sub
mov
or
mov
sbb
rclb
andb
cmpsl
test
out
mov
fisubrl
sarl
mov
mov
mov
sahf
sbb
mov
jecxz
jmp
aam
push
jo
divl
inc
lods
inc
and
aas
outsb
xor
push
dec
lcall
xor
pop
xor
add
ds
inc
pop
dec
orl
or
pushf
and
inc
xchg
mov
int3
movsl
sbb
outsl
dec
divb
cmc
lock
lock
mov
add
sub
inc
fucomip
add
dec
mov
inc
negl
decb
out
sub
inc
imul
or
sbb
cmp
out
pop
or
mov
mov
scas
mov
xchg
push
push
movsl
xchg
dec
jnp
bound
adc
jmp
cmpsl
mov
jo
dec
cmpsl
lds
bound
or
or
dec
and
in
adc
ret
in
jb
jge
inc
mov
pop
mov
xchg
out
in
inc
popa
xchg
scas
mov
test
jnp
and
xchg
loope
adc
add
lea
cs
sbb
adc
mov
jmp
rorb
movl
push
addr16
mov
jne
push
icebp
jo
inc
jno
add
cmp
add
movsb
mov
jae
cmp
sub
imul
icebp
mov
mov
sti
ja
xor
cmp
lods
hlt
sub
inc
jmp
jl
mov
mov
lea
jnp
inc
mov
in
test
and
imul
ror
aas
inc
jbe
sbb
push
push
fadds
mov
jo
xchg
pop
js
mov
dec
data16
enter
repz
les
fwait
mov
movsb
add
mov
pop
ljmp
and
fsub
stc
sub
arpl
mov
out
xor
shll
add
add
out
ret
xor
loope
mov
lahf
in
js
subb
cmp
add
xchg
push
lock
cltd
jmp
out
mov
mov
xor
pop
mov
stos
pop
stos
std
shrl
cs
jb
enter
in
shrl
and
and
cmpsb
insl
stos
scas
test
xchg
dec
fiaddl
xchg
leave
es
ja
pop
mov
xlat
inc
cmpl
mov
imul
into
lret
pop
clc
mov
mov
lock
xchg
scas
imul
ja
shlb
pushl
clc
sbb
mov
sub
inc
rol
gs
and
sbb
push
xlat
dec
and
pop
and
aaa
pop
jl
sub
out
dec
push
sbb
fsubrp
imull
cmc
pusha
enter
lret
out
push
jnp
jge
out
mov
mov
stos
ds
push
mov
andl
push
es
cmp
ds
jnp
xchg
icebp
mov
mov
or
xor
push
scas
ret
subb
in
mov
pop
mov
jle
sti
dec
stc
cmpsl
xchg
jp
sub
fs
and
outsb
leave
push
ds
sbb
inc
and
jg
mov
pop
xchg
pop
enter
xor
push
fsts
mov
or
mov
xchg
sbb
mov
in
nop
push
cvttps2pi
cmp
test
lods
mov
outsb
icebp
loop
das
pop
out
mov
daa
xchg
xchg
inc
imul
cwtl
lret
orb
rorl
and
mov
mul
cmp
mov
or
mov
inc
jle
mov
adc
jg
sbb
movl
push
inc
cs
adc
mov
adc
xchg
test
jne
cmc
cwtl
decl
mov
test
dec
roll
inc
outsl
inc
and
sub
adc
and
cltd
aas
clts
cld
xchg
daa
dec
xchg
fwait
in
imul
mov
ljmp
ja
pop
mov
out
rclb
sti
ss
out
int3
bnd
ret
pushf
cld
dec
out
lret
adc
and
in
sub
lock
aam
inc
add
lcall
mov
loopne
test
stos
pop
fstps
jb
mov
lahf
ret
hlt
adc
repz
imul
adc
add
push
dec
mov
sbb
add
cmp
push
roll
pop
aad
std
inc
sahf
pushl
icebp
push
inc
xor
mov
cmp
movsl
dec
inc
push
xor
ds
pop
dec
cmpsl
and
adc
add
mov
bound
rorb
xchg
or
in
jae
mov
push
push
jmp
xchg
jl
sbb
push
hlt
ret
popf
mov
jae
push
pop
xchg
and
mov
ja
push
mov
pop
lahf
les
push
push
shlb
push
in
int
add
arpl
mov
mov
dec
iret
test
pop
cmp
adc
cmp
xor
pop
mov
sub
repnz
enter
or
pop
push
test
addr16
pop
and
in
jle
sub
aam
push
mov
jb
ljmp
sti
call
setno
or
and
inc
jb
xchg
dec
mov
ja
stos
xchg
sbb
imul
xchg
cmp
int
mov
add
push
mov
add
enter
lods
movsb
mov
xor
lcall
mov
xchg
mov
sahf
jns
push
ljmp
stos
or
clc
movsb
stc
sub
repz
pop
into
or
sti
jp
sub
test
lret
pushf
test
xor
adc
fadds
shll
mov
cs
cs
cwtl
mov
add
push
mov
sub
ja
mov
les
or
les
jno
inc
pop
dec
inc
insb
mov
sbb
jne
push
fbld
push
pushf
lods
mov
xor
mov
mov
es
stos
mov
in
sub
iret
fldenv
mov
mov
fldt
and
ja
and
stos
xor
add
sbb
cmc
add
or
loop
adc
out
les
add
leave
rcrb
imul
xchg
xor
mov
adc
add
or
mov
or
pop
cld
addb
mov
jmp
mov
add
lcall
sbb
or
inc
cmp
neg
jg
push
test
js
stos
fwait
inc
lahf
cmp
mov
jae
orb
xor
cmp
sarl
dec
test
xlat
push
out
cmpsb
and
subl
mov
in
out
mov
and
int3
push
loop
sbb
adcl
sub
popa
xchg
mov
inc
jmp
jle
mov
int3
push
and
jbe
in
sarb
push
add
mov
pop
loop,pn
int3
ret
mov
inc
push
jne
push
test
ja
add
adcl
push
jmp
push
adc
xchg
push
movsb
jmp
xchg
mov
rcl
mov
ficomps
fdivrl
mov
xor
sti
in
decb
cmpsb
xchg
adc
daa
pushf
dec
out
jmp
repnz
movsl
ret
cmp
fs
cmc
mov
cmp
pop
cmp
cs
rcrl
or
call
push
jmp
lahf
add
push
rcll
mov
adc
push
adc
mov
addl
sbb
rolb
int3
jb
insl
lods
pop
test
sbb
stos
mov
jl
mov
dec
movl
testb
pop
decl
mov
xor
test
imul
cmp
insb
jmp
xor
es
cmpsb
xchg
outsl
mov
mov
inc
out
push
stos
mov
push
arpl
xor
fsubs
xor
mov
xor
stos
push
pushf
adc
and
repz
jg
dec
dec
mov
or
fdivrl
or
in
pop
xor
cmp
sub
std
fwait
rcrb
iret
and
sbb
mov
inc
inc
pop
cld
jl
jp
shl
stc
pop
xchg
ficomps
inc
imul
mov
push
push
or
xor
lahf
cmp
add
fwait
and
or
ja
or
aaa
mov
jp
imul
add
ret
repnz
lods
aam
hlt
jmp
pop
ret
jb
aad
and
mov
pop
mov
or
mov
int
outsb
ljmp
add
or
and
loope
xchg
into
rorb
loop
sti
mov
cmpl
and
fdivrp
cmp
fstps
ja
jo
rcrl
lcall
cmc
int
jne
js
fimuls
cmp
cmp
jne
test
jno
mov
fcompl
xchg
push
pusha
mov
fs
or
add
stos
jg
xor
mul
arpl
ss
es
ds
mov
aas
in
dec
or
sub
pop
call
jo
mov
mov
xor
out
mov
bswap
mov
cld
push
test
data16
cmpsl
sub
xchg
xor
adc
adc
cmp
inc
xchg
mov
rorb
mov
aam
test
cli
pop
inc
in
je
decb
in
mov
jmp
int
in
sub
jns
jle
xchg
ljmp
and
aas
adc
inc
sub
inc
stos
sub
loop
test
sub
fcmovnb
pop
pusha
pop
int
dec
and
jp
mov
xor
jbe
fisubl
mov
clc
leave
sbb
sbb
jns
mov
mov
pop
push
insl
daa
mov
and
test
cmp
stc
push
xchg
mov
in
inc
push
mov
nop
add
cmpsl
add
nop
pop
daa
inc
nop
fucomi
dec
add
sub
jmp
in
push
adc
adc
ffreep
pop
mov
or
and
stos
fisttps
push
stc
pop
orl
add
mov
ds
and
push
dec
xchg
sub
pop
movsl
lahf
jnp
test
cmp
inc
ret
pop
inc
xor
xchg
iret
sbb
mov
mull
xor
cld
xor
loopne
js
inc
mov
xor
dec
xchg
mov
cmp
lds
pop
movsl
mov
rclb
jae
aas
fisttps
enter
loop
inc
jl
outsb
dec
inc
cmp
sarl
pop
sbb
outsb
stos
mov
dec
inc
push
lret
cmp
repnz
lret
insb
aam
pop
inc
inc
int
inc
aad
popa
or
fiadds
rolb
insl
imul
icebp
int
repnz
mov
ljmp
rclb
je
nop
aam
mov
gs
in
fidivrl
in
je
sub
sarb
sbb
out
es
mov
int3
outsl
push
xchg
fstps
jecxz
xlat
jnp
rolb
sti
xchg
je
nop
addl
and
push
push
sbb
addl
xor
gs
adc
out
clc
out
push
push
xchg
or
scas
mov
int3
ds
js
lcall
push
add
xor
and
je
xchg
adc
out
addr16
test
or
mov
mov
xchg
xchg
cmpsb
gs
push
sbb
sbb
bound
pop
insl
dec
mov
cwtl
mov
fistps
xor
mov
insl
cmpsb
lea
jbe
push
leave
sti
in
repnz
in
adc
push
out
add
ss
jg
mov
inc
pop
call
es
push
shll
ret
lods
adc
pop
xchg
cmpsb
iret
rolb
stc
xchg
lret
adc
dec
fmull
pusha
or
daa
out
jb
push
arpl
shl
stos
test
ds
sub
sbb
ds
dec
xchg
std
fwait
fs
imul
rol
add
cmpsl
imul
cs
push
lcall
rclb
aam
sbb
jl
jge
adc
mov
das
pop
jns
movsb
ljmp
pushf
push
push
test
sub
shlb
insb
pop
pushf
les
pop
cli
out
movsb
shlb
dec
lock
pop
jmp
dec
in
xchg
push
rcrb
mov
mov
scas
mov
push
push
mov
popf
inc
les
aas
out
push
lret
push
out
mov
in
mov
sbb
mov
icebp
mov
xchg
int
ret
push
in
or
or
popf
mov
stc
pusha
jno
or
jbe
rcrl
call
xorl
push
pop
stos
lret
data16
ja
adc
clc
dec
adc
das
sarb
mov
subb
sbb
push
mov
cmp
inc
and
xor
lret
adc
pop
sub
mov
dec
cmc
dec
mov
sub
pop
mov
xchg
loopne
fcomps
pop
add
es
sub
xlat
and
pop
mov
roll
mov
dec
aaa
mov
xor
xlat
test
fidivl
repz
out
jle
inc
inc
lahf
mov
std
sub
divb
into
mov
ja
es
in
dec
test
pop
arpl
inc
xchg
pop
mov
insb
add
fcomp
divl
out
fs
pop
pop
je
scas
divb
imul
xor
or
movsl
aad
or
pop
daa
inc
xchg
pop
fildll
inc
stos
lret
lret
sub
push
pusha
jle
adc
dec
sub
mov
mov
adc
enter
ss
pop
xorb
pop
data16
test
or
mov
mov
in
mov
out
mov
or
and
mov
mov
push
clc
leave
pop
movsb
fsubr
test
jae
arpl
push
fsts
push
adc
push
fdivr
push
fisubrs
ffree
imul
inc
out
ret
xlat
fcomi
cmp
and
pop
ja
add
jle
fstpt
push
divb
call
popa
cmp
ret
cwtl
push
sbb
ljmp
movsb
pop
fsts
rol
aas
and
call
shr
fadd
es
and
divb
ret
scas
insb
cmp
aam
inc
pop
push
aaa
popf
pop
repnz
pop
and
test
push
cmp
inc
das
mov
xlat
inc
fwait
imul
icebp
inc
fwait
pop
inc
add
cmp
jmp
loop
xchg
or
cltd
sub
xchg
or
loopne
add
jnp
ret
jne
and
negl
cmpb
xchg
cmp
imull
ds
stc
fistpll
sahf
imul
adc
and
divl
jns
add
dec
imulb
ret
movsb
cltd
or
xchg
xchg
sbb
sbb
sub
daa
test
ljmp
in
arpl
xorb
bound
sbb
pop
xor
imul
inc
mov
pop
inc
push
je
push
add
mov
adc
cli
push
stos
or
stc
mov
xor
jo,pt
es
stos
mov
xchg
mov
incl
adc
std
mov
popf
pop
push
popa
xor
cli
jnp
sbb
dec
fdiv
flds
cmp
addr16
push
jl
pop
loope
xor
cmp
stos
or
or
sbb
xor
or
jb
arpl
push
cmc
ret
adc
sbb
sbb
cld
scas
int
repnz
outsb
add
cmpsl
sbb
xchg
sub
mov
insl
push
mov
test
dec
mov
pop
test
mov
in
or
sahf
and
adc
pop
fwait
es
xlat
js
add
cmc
pop
cld
xchg
fs
enter
jecxz
je
fnsave
enter
cmc
mov
push
add
das
mov
test
dec
es
les
cld
jnp
pop
sub
or
mov
int3
movsl
inc
pop
lods
das
int
aas
pop
inc
jbe
jmp
andl
adc
mov
lret
outsb
inc
mov
ds
aas
popa
add
pop
mov
aam
xor
push
dec
dec
xor
or
gs
jno
gs
xor
pop
jno
mov
rorb
mov
mov
test
repz
popa
xchg
dec
mov
insl
mov
jbe
push
adc
jmp
mov
leave
bound
mov
mov
orl
xor
add
sub
sub
ret
sbb
pop
mov
sbb
inc
scas
add
jns
add
cmp
jnp
and
mov
inc
movsl
addr16
mov
scas
arpl
repnz
add
cmp
fdivr
adc
mov
insb
sbb
mov
into
push
pop
hlt
clc
leave
sub
pop
or
xor
aas
mov
xlat
inc
xor
inc
mov
pop
ror
and
cmpl
sbb
xor
mov
and
push
cmp
cmp
add
les
out
jns
lret
cltd
xchg
shlb
mov
fst
cld
popf
addr16
inc
into
add
dec
ret
ja
sbb
shlb
xchg
into
mov
push
divb
repz
outsl
in
ret
movsb
pop
cltd
repnz
negb
dec
sub
addr16
jns
dec
rorl
test
movsb
inc
movsb
fadds
sbb
adc
cmpsb
xor
test
push
jne
imul
sbb
and
push
xlat
lcall
sbb
and
and
fcoms
call
cmova
pop
adc
mov
aaa
pop
xchg
sbb
fsubp
push
fildl
aad
lock
and
popa
sbb
cmp
adc
jns
test
aam
pop
nop
mov
push
jl
or
push
dec
sbb
outsl
aad
cmp
push
cmp
repnz
xchg
pop
xor
arpl
icebp
push
test
xor
lret
mov
out
imull
dec
jecxz
jns
jo
cmpsl
lock
sub
gs
data16
loope
jge
mov
fwait
jmp
mov
cmp
push
sahf
push
popf
sbb
cmp
daa
bound
mov
addr16
add
dec
jo
pop
push
in
mov
pop
jge
mov
or
mov
xor
pop
sar
popl
push
aaa
cmc
inc
in
movsb
outsl
push
sub
cld
dec
pop
mov
xor
fidivl
test
scas
sub
aad
jg
aaa
mov
or
and
lods
mov
fiadds
stos
sub
mov
pop
popf
rol
mov
cmp
sahf
xchg
mov
push
cmp
inc
sti
adc
cmp
es
popl
inc
sbb
insl
adc
decl
sub
std
icebp
dec
in
in
sbb
sbb
pusha
push
or
imul
pop
jae
push
lds
sub
xor
jg
cmpsl
jmp
jae
jb
inc
pop
fstpt
xor
call
add
mov
out
xchg
rcl
mov
stos
movmskps
or
xchg
ret
jge
push
incl
call
cwtl
aad
mov
push
xor
mov
mov
iret
xchg
or
dec
in
xor
add
cmp
jp
stos
das
lea
xlat
int
push
jecxz
dec
lcall
lock
push
cld
mov
jno
jae
lock
test
pop
xor
push
sbb
cmpsl
mov
nop
adc
popf
ret
mov
sub
push
neg
sub
mov
adc
mov
xlat
dec
fists
cli
std
stos
movsb
jl
lods
cmc
dec
adc
xchg
loop
mov
sbb
cli
mov
xchg
and
sbb
pop
ljmp
out
test
inc
pop
insl
loop
call
push
stos
jecxz
int
pop
adc
xchg
jne
aas
pop
jnp
mov
xchg
call
cmp
mov
jnp
mov
add
cmpsl
push
ret
mov
xchg
out
stos
jle
sub
shrl
jae
rcrb
lods
bound
or
test
call
mov
out
fsubs
cli
js
inc
mov
jge
mov
lcall
fstp
mov
ret
lock
xor
and
mov
pop
shlb
scas
mov
or
imul
push
cld
jne
mov
cmpb
fidivrs
xor
lods
in
lret
push
daa
pop
push
enter
adc
jo
aad
cmp
or
pop
je
out
add
sub
inc
mov
int
loope
xchg
loop
mov
lea
pop
pop
inc
test
inc
adc
loopne
es
mov
lods
out
dec
xchg
adc
adc
push
shr
into
dec
aam
lcall
lret
call
mov
sub
cltd
das
mov
sbbb
or
cli
pop
fsubrl
pop
add
pop
lea
dec
out
fdivs
lahf
hlt
sub
fidivrl
inc
jbe
jb
jbe
sub
sbb
cmp
dec
lret
sub
sub
jp
outsb
movsl
inc
shlb
sbb
idivb
aam
cmp
ss
xchg
clc
mov
inc
cwtl
xchg
roll
jmp
mov
sub
push
arpl
test
push
xorl
add
add
add
sbb
outsb
mov
mov
je
add
push
jmp
out
mov
add
add
sahf
or
adc
and
adc
inc
dec
outsl
push
fs
adc
and
sbb
mov
adcl
push
and
mov
mov
rcrb
lods
jae
fisubrs
and
loop
push
or
aam
rclb
test
je
call
push
aad
jecxz
mov
retw
leave
ret
js
adc
jnp
xchg
adc
imul
dec
dec
mov
xor
and
inc
loopne
add
push
jbe
incl
jne
pop
js
pop
jae
bound
mov
push
dec
xchg
addr16
decl
xor
ja,pt
das
cmpsl
inc
sbb
xchg
bnd
dec
sub
shll
mov
insl
aaa
adc
jb
mov
gs
xor
push
adc
movsl
mov
outsl
pop
inc
aas
add
popf
bound
dec
or
imul
dec
or
out
lahf
cmc
repz
pushf
movsl
sbb
inc
fsubrs
jo
push
fisttpll
or
sarl
jp
lds
imul
mov
dec
inc
incl
xchg
out
pop
and
scas
mov
aad
sbb
push
mov
push
ds
cmp
jne
lahf
lahf
out
pop
dec
jecxz
add
jae
inc
hlt
jae
mov
add
movsb
outsb
lds
inc
imul
negl
mov
sahf
xlat
andb
jl
push
add
dec
fidivs
dec
jecxz
clc
lret
sbb
push
ret
jmp
mov
movsl
and
arpl
pop
mov
inc
cmp
pop
jno
xchg
out
adc
push
mov
fsubs
fs
test
loop
xor
adc
push
jle
jbe
mov
inc
int
cmp
mov
push
movsb
pop
jmp
les
jae
mov
pop
mov
mov
aam
sub
jecxz
mov
lock
addr16
rep
adc
and
lock
sahf
inc
call
and
xchg
mov
daa
inc
sbb
fcomps
lret
inc
pop
std
sbb
aad
cmp
push
or
sbb
popa
je
cmp
xchg
xchg
jmp
jb
push
xchg
inc
ljmp
fcomps
test
mov
loopne
sbb
and
fbstp
adc
add
imul
insl
stos
xor
jmp
scas
dec
stos
mov
jmp
call
test
mov
jg
cmpsb
sbb
pop
lods
or
fadds
mov
push
mov
and
scas
fcomp
mov
mov
imul
jbe
xlat
add
enter
mov
or
aad
sub
nop
push
stos
add
xchg
filds
and
icebp
int3
enter
push
outsb
add
sti
sbb
xchg
test
xchg
jmp
or
cwtl
int
jb
mov
es
mov
mov
add
shrb
jg
mov
std
or
mov
je
cmp
adc
sarb
mov
insl
push
aaa
outsl
pop
sarl
leave
shlb
ds
into
xlat
fbld
jno
push
movsb
pop
inc
ret
jb
cmp
andl
mov
sbb
inc
push
cwtl
shrl
cmp
pop
xchg
push
loop
imul
mov
dec
popl
daa
std
xor
xorl
fwait
ret
sub
iret
cmp
loope
adc
loop
sub
adc
je
sbb
mov
pop
fs
add
into
imul
stos
scas
adcb
lods
iret
daa
lds
mov
lods
jecxz
cmp
xchg
sbb
sbb
ficoms
shll
jae
xchg
cmpb
push
cld
or
ds
imul
mov
out
lret
dec
mov
ret
mov
push
push
add
xchg
insl
pop
xor
lds
lret
sbb
call
inc
test
push
shlb
fdivrl
add
lret
js
xor
lcall
jbe
pushf
in
ret
cmp
test
add
leave
xor
int3
daa
or
inc
and
dec
mov
out
std
scas
pop
clc
xchg
popl
xor
cwtl
rorb
adc
movsb
sub
fcmovne
xchg
pusha
fwait
mov
sub
cmp
sub
movsl
leave
inc
test
cmp
jge
mov
pop
and
cmp
out
orb
xor
push
pop
dec
movsl
icebp
mov
sub
lds
mov
mov
sahf
jmp
test
xor
push
pop
daa
inc
sbb
sbb
mov
loopne
xor
or
fnstenv
out
dec
pop
and
fdivl
cmp
or
push
out
mov
lock
adc
aas
ret
ja
popf
xlat
dec
jp
into
je
mov
jbe
sar
rolb
nop
cmc
push
pop
push
mov
cli
lock
enter
fcmovne
lahf
mov
mov
je
pop
xor
hlt
repnz
bnd
js
scas
jb
fidivrl
xchg
divl
dec
cmc
lea
pop
cmpsb
inc
add
mov
mov
aas
xor
fisttpl
xchg
mov
mov
js
jne
rolb
ret
test
lret
jge
pop
dec
xor
test
insb
daa
mov
push
or
jns
push
fwait
or
ds
and
jl
push
xchg
dec
jbe
pop
mulb
mov
fmuls
shr
push
mov
dec
fidivl
pop
inc
xlat
add
lods
cld
xchg
fsub
jl
mov
popf
mov
mov
ret
adc
push
dec
jle
lods
insl
int3
mov
pop
pop
jmp
pop
fstpt
aas
pop
push
xor
pop
subl
cmp
jno
cmc
repnz
in
punpckldq
mov
xorb
out
inc
mov
and
sbb
mov
outsl
xor
pop
test
lret
rolb
mov
std
mov
daa
int3
movsb
dec
clc
les
stc
mov
std
clc
test
mov
int3
inc
imul
movsl
fmull
outsl
cmc
imul
xlat
mov
mov
jo
pop
xchg
add
sub
stos
bound
push
inc
bound
mov
jl
fcmovb
sbb
and
ss
sub
push
and
jg
cli
sahf
hlt
daa
fdivrl
outsb
and
jecxz
repnz
pop
mov
scas
push
roll
xlat
aaa
jl
sub
jl
in
cmp
ss
mov
lods
adcl
adcl
mov
jo
mov
add
bound
cs
and
setns
in
or
popa
in
in
hlt
popf
lods
scas
cmpl
push
out
inc
xchg
cmpsl
inc
loopne
dec
push
xorb
fcom
mov
dec
mov
es
jne
int3
lods
adc
mov
mov
pushf
add
loope
mov
push
test
pop
jnp
pop
loop
mov
cmp
nop
cmp
leave
push
mov
and
call
xchg
cmp
test
inc
mov
subb
and
pop
adc
shll
lock
sub
lods
adc
xor
iret
fs
or
pop
sbb
sbbl
pop
mov
pop
mov
jmp
dec
push
scas
rcrb
lahf
and
stc
pop
test
jmp
insb
inc
daa
cmp
mov
faddl
xor
mov
mov
imul
add
jno
pop
mov
xlat
outsl
or
fdiv
ja
jmp
dec
fnsave
fadd
aaa
dec
push
mov
shll
and
mov
mov
mov
enter
mov
hlt
jb
bound
pop
fisubrl
insl
xchg
sub
mov
add
jle
in
xchg
into
movsb
movsb
pop
aas
test
push
loop
pop
mov
ss
and
call
jp
sub
xchg
loope
mov
enter
cmp
jno
shlb
sbb
imul
pop
cli
jne
pop
sub
dec
loope
mov
cmc
mov
jp
pushf
and
xchg
sub
jbe
push
fwait
inc
addr16
cltd
daa
repz
arpl
loope
roll
cmpsb
adc
or
rorl
cmp
dec
cmp
mov
ja
adc
jg
es
fcoms
mov
lcall
jns
subb
push
xor
repz
ss
cmpb
mov
sbb
add
inc
dec
pop
std
add
sub
cli
and
push
cmp
jno
in
or
and
nop
decl
dec
sub
cmpb
sub
add
das
mov
sub
rdpmc
in
arpl
movl
dec
push
in
jnp
cmpsl
negb
xchg
iret
outsb
loope
lods
adc
fcmovbe
dec
push
fbld
gs
mov
cld
mov
repnz
cmp
push
jne
mov
sub
and
xchg
rcll
lods
in
flds
mov
setl
fadd
cltd
cmp
jp
pop
push
imulb
pop
adc
xor
adc
std
out
fstpt
pusha
loope
hlt
fldcw
add
pop
fnop
ror
fsubrs
push
lcall
loopne
mov
cwtl
loopne
jmp
mov
jnp
push
test
je
gs
mov
jno
mov
and
and
sub
push
loop
mov
lods
dec
fbld
js
leave
out
in
xlat
orl
mov
push
icebp
xor
pop
scas
sub
sbb
stos
adcb
test
fwait
xor
ljmp
xlat
scas
rcll
jecxz
xor
pop
push
push
aam
dec
out
jno
xor
inc
mov
adc
inc
mov
cmp
test
stos
push
mov
add
or
adc
mov
mov
or
cmpl
lahf
cltd
mov
mov
push
sbb
hlt
fwait
mov
in
cmp
dec
and
xchg
lods
in
sbb
jno
dec
cmpsl
and
outsb
loopne
sub
test
outsb
out
lods
out
cli
fs
adc
shrl
inc
jl
inc
daa
stos
test
fcomp
xor
enter
lahf
hlt
sbb
xor
jnp
addr16
or
push
aam
sbbl
jl
lret
imul
inc
into
lds
and
jg
or
jl
ficoms
xchg
rcrl
inc
orl
pop
ljmp
nop
dec
jno,pn
jns
sub
ljmp
pop
lods
imul
xchg
or
cmc
xchg
sub
or
fistpll
jo
pop
xchg
jo
ret
inc
in
shl
push
insl
in
jb
cmp
mov
or
jecxz
mov
jb
movsb
enter
jp
es
pop
add
cli
lods
ffree
bound
mov
or
jnp
inc
sahf
lret
in
push
mov
mov
dec
push
jno
je
subb
les
push
mov
ds
pop
sbb
xchg
pusha
fisubs
inc
mov
sub
sarl
fisttpl
push
pushf
fwait
fs
fsubrs
mov
cmp
adc
mov
outsl
inc
cmp
jg
ret
int3
pop
pop
fdivrl
insb
xchg
jg
xor
push
cmp
or
pusha
adc
idivl
sub
sbb
mov
jp
mov
addb
push
daa
str
movsl
push
cmp
ds
add
outsb
dec
fs
dec
mov
in
in
imul
bound
add
fmul
test
cmc
mov
and
and
mov
jl
mov
adc
scas
mov
or
mov
sbb
pop
add
fnstcw
test
and
xchg
into
sbb
adc
push
mov
in
jo
bound
mov
repz
mov
in
xchg
dec
push
and
mov
push
addr16
inc
iret
cmc
or
aaa
bound
xlat
ret
pmuludq
jg
sub
int3
mov
mov
mov
jno
iret
xchg
mov
movsl
fstpt
inc
add
dec
mov
les
aaa
jae
pop
loop
push
xor
mov
fcomp
mov
and
dec
xchg
arpl
out
nop
sbb
sub
adc
and
xchg
mov
adc
xchg
cmp
xor
das
xor
loopne
icebp
pop
inc
fdivs
inc
push
jp
mov
into
or
adc
mov
test
mov
lea
mov
xor
sub
ljmp
rclb
test
andl
popa
pop
bt
in
shll
out
test
inc
and
das
imul
aaa
ja
xchg
xor
mov
mov
pop
fs
sbb
push
iret
jp
imul
mov
mov
mov
pop
jne
cmp
xor
xchg
std
aas
outsb
add
ret
movzwl
push
sbb
cmp
or
and
clc
outsl
ret
cli
lcall
lods
fcmovnb
mulb
mov
push
xchg
loopne
lods
test
clc
cli
push
arpl
enter
pop
jp
cmp
sub
popa
repnz
das
dec
cmp
arpl
dec
sbb
adc
mov
or
and
movsl
push
out
cmpsb
test
add
gs
stos
jmp
cmp
jecxz
push
dec
jb
pop
push
mov
fs
add
in
push
push
inc
adc
push
jno
jecxz
lods
bound
xchg
shr
xlat
popf
fstpl
push
out
cmp
lea
rcl
mov
int
and
nopl
or
add
dec
dec
in
stc
jl
enter
adc
and
imul
arpl
sbb
leave
xchg
xchg
mov
cmc
cmp
shr
iret
mov
sbb
xchg
imul
jmp
dec
pop
adc
pop
inc
lods
pop
jo
mov
sbb
mov
inc
shlb
fwait
xchg
push
cltd
push
pushf
jg
mov
push
sbb
icebp
xor
pop
repz
push
int3
xor
mov
in
xchg
add
and
lock
das
adc
xor
inc
aas
lods
or
mov
mov
jp
out
repz
out
mov
or
jl
cwtl
sarl
mov
sbb
pop
inc
in
or
pop
fwait
test
cli
add
fpatan
pop
rorb
sti
pop
out
sbb
push
in
test
mov
cmp
inc
rol
xchg
scas
gs
dec
arpl
push
dec
pop
dec
dec
inc
mov
imul
ja
sbb
cmp
xor
es
lods
dec
push
xor
adc
push
add
mov
insl
inc
mov
inc
js
or
dec
cmp
lods
imul
in
bound
stos
sbb
inc
and
out
xchg
pushf
pop
imul
movsb
push
aad
test
or
xor
pop
nop
pop
xchg
aam
sbb
arpl
test
aad
decb
pop
inc
jo
mov
fsubp
pop
js
adc
test
jno
jae
cmc
sub
ret
jno
mov
push
xor
mov
pop
jne
or
cli
in
sub
pop
stos
inc
or
mov
enter
jb
dec
pop
mov
ds
loope
iret
testl
pop
cwtl
not
fwait
push
loopne
pop
xor
outsb
out
sbb
sbb
adc
xchg
add
or
ficoml
nop
decb
lock
mov
pop
inc
mul
test
jnp
fldenv
out
push
xchg
and
xchg
xchg
inc
mov
jns
out
sarl
pop
adc
cmp
xchg
cwtl
lret
pop
pop
imul
test
or
sbb
sbb
mov
fs
xor
pusha
sbb
jb
in
mov
inc
daa
jo
push
jnp
mov
add
sbb
lea
daa
cs
out
repnz
int
aad
dec
repz
jp
xchg
sarl
xchg
and
and
or
stc
sub
xchg
ss
dec
es
bound
std
pop
mov
pop
jnp
movsl
xor
mov
mov
cs
dec
pop
fisttpll
in
cltd
mov
in
push
sbbl
js
or
pop
pushf
shrb
rorl
lods
dec
cmp
scas
leave
xchg
sub
andnps
and
mov
pop
xor
push
dec
mov
call
lcall
sub
sbb
cwtl
xlat
and
xor
and
xchg
je
xor
and
hlt
mov
pop
rol
repz
aam
clc
xchg
mov
xor
in
lret
in
xchg
mov
nop
shlb
cmp
jae
lret
or
inc
sarl
repnz
jp
arpl
mov
inc
pop
jmp
aam
sbb
ret
cmpsl
enter
aam
add
fimull
inc
sbb
xor
xchg
xchg
cli
aad
nop
test
sub
popa
daa
ret
and
jge
xlat
shr
pop
push
les
divb
push
sti
mov
and
addb
insb
es
cltd
jbe
pop
sub
adc
jne
or
cmpsl
mov
loop
sub
adc
or
pop
xor
jp
and
mov
cli
xchg
mov
divb
clc
sub
inc
adc
push
fwait
out
aam
je
fxtract
push
and
xchg
lock
addr16
aad
scas
cmpsb
lock
pop
cmp
xlat
test
das
jbe
xor
dec
fdivr
ret
outsl
into
cwtl
adc
js
movsl
scas
mov
xlat
mov
cmp
int
pop
rolb
pop
mov
push
sarb
call
int
into
fwait
aad
aam
push
xchg
or
pushf
mov
jle
jmp
and
mov
add
inc
jmp
test
hlt
inc
pop
inc
pusha
loopne
fs
jnp
sub
mov
fwait
out
sbb
jg
pop
cmp
fidivs
je
enter
adc
cmp
sub
fldenv
call
jns
insl
lret
sti
sar
add
or
call
nop
outsb
mov
je
pop
leave
xchg
jle
and
mov
ljmp
mov
push
pushf
enter
mov
lahf
jns
mov
adc
scas
jp
mov
sbb
cmpsb
setae
outsl
adc
sub
test
adc
sub
xchg
add
jo
sub
pop
and
imul
les
cmc
jnp
mov
inc
mov
mov
scas
pop
mov
mov
ds
lods
fbstp
ret
inc
xchg
call
leave
cli
adc
icebp
add
hlt
push
push
arpl
sub
xchg
inc
pmullw
mov
cmp
adc
pop
mov
scas
das
adc
mov
jb
xchg
mov
lea
xor
in
or
push
fucom
scas
and
mov
push
rorl
cs
test
pop
jno
jle
mull
inc
xor
xor
ret
rcl
push
jg
jp
xchg
sbb
jno
add
mov
mov
pop
cmpb
cmp
ja
ret
int
sahf
jecxz
mov
xchg
sub
dec
push
add
mov
sbbb
orb
lahf
jnp
mov
dec
push
dec
add
dec
mov
cli
xchg
les
arpl
jnp
fwait
bound
in
into
lahf
sub
fldcw
leave
repz
imulb
push
cmp
fwait
cmp
xor
xchg
movsb
arpl
pop
fmuls
inc
fcoml
daa
or
mov
addr16
outsb
ret
outsl
in
je
push
mov
xchg
inc
stos
mov
and
xor
push
pop
or
mov
add
subb
imul
dec
jno
in
mov
lret
adc
pusha
pop
js
outsl
dec
push
out
std
add
fdivr
fs
xchg
cmpsl
jecxz
clc
and
xor
imul
pusha
push
xor
fmul
lcall
mov
pop
xchg
adc
mov
lahf
adc
or
inc
int3
push
dec
or
mov
negb
pop
int3
xor
jl
mov
cwtl
dec
cld
push
in
stc
xchg
cmp
arpl
cmc
jge
cmp
dec
aad
outsl
push
filds
mov
nop
push
cmp
mov
cmp
popa
push
inc
or
mov
push
or
ja
adc
stos
fsubrs
mov
jl
out
push
iret
sub
cmp
mov
cmp
mov
inc
leave
sub
mov
fldcw
in
enter
xchg
lcall
loopne
add
push
arpl
mov
je
cmc
inc
xor
stc
dec
lock
push
add
cli
adc
sbb
pop
gs
ds
cmpsl
jne
cmp
pop
cld
or
mov
xchg
or
jbe
xchg
push
xchg
jno
out
fstpt
push
scas
clc
lods
dec
mov
push
mov
repnz
pop
inc
stos
lods
js
push
xor
lret
fwait
shrl
into
call
and
sub
lar
pusha
inc
call
and
test
lret
adcb
inc
ljmp
pop
xchg
adc
and
ret
push
jle
add
xor
inc
enter
pop
push
pushw
addb
xor
jne
xor
xor
jmp
mov
loop
bound
jmp
into
movsl
je
mov
sbb
andb
and
fmul
stc
in
mov
or
cmp
imul
in
mov
pop
mov
or
adc
mov
cmp
sahf
or
mov
sbb
jno
test
cli
sub
ljmp
ret
flds
mov
hlt
add
sbb
int3
gs
aam
mov
insl
adc
inc
mov
cmpsl
das
leave
fs
fldenv
arpl
insl
popa
xor
mov
jne
sub
lods
out
mov
je
imul
push
mov
std
xorb
insb
ret
das
sti
xchg
les
pushf
jns
cmpsl
jg
xor
popf
inc
xchg
test
ds
scas
xchg
pop
xor
mov
sbb
add
inc
in
cmp
add
and
mov
pop
aam
mov
inc
divb
add
adc
xchg
inc
in
pop
xor
mov
cmp
inc
in
mov
in
dec
sub
pop
cmpsb
sbb
lock
mov
fildll
cmp
push
loopne
jo
fcoms
testb
push
fbstp
fcmovb
shr
daa
sbb
push
andl
sub
jne
xchg
cmp
lea
test
push
and
insb
test
cwtl
out
mov
data16
add
cli
or
mov
outsl
inc
mov
xor
and
sbb
and
bound
adc
aad
icebp
lock
or
out
aas
pop
in
das
add
movb
push
jge
push
adc
aas
mov
cmp
pusha
mov
insl
xchg
sub
pop
popa
dec
sub
mov
xchg
rclb
stos
sub
pop
pop
aaa
inc
push
test
stc
movsb
fmul
push
push
js
mov
in
inc
lahf
call
jnp
cmp
aam
add
shrb
xor
pop
dec
or
loope
lahf
psrad
push
dec
hlt
insb
lock
ss
inc
jno
jne
push
push
js
out
std
stos
lcall
pop
xchg
incb
rorb
jnp
or
pop
mov
pop
sahf
lods
xchg
push
fcoms
out
in
stc
shrb
mov
lods
shrl
push
push
fdivs
shll
arpl
xchg
mov
leave
or
je
into
shl
sub
jne
adc
fldln2
xchg
test
aaa
js
cmc
das
inc
movsb
test
or
dec
je
fucomip
pop
subb
jbe
sarb
inc
mov
fldt
int3
test
ja
lret
inc
lds
insb
pusha
pop
dec
inc
xor
pop
mov
out
xor
sarl
jbe
fldt
inc
inc
push
sub
movsb
jns
popa
add
lea
jmp
lret
and
cmpb
sbb
es
aaa
push
pop
dec
scas
insl
cs
imul
adc
xor
js
pop
mov
mov
mov
les
test
scas
lds
sub
ja
test
mov
cltd
or
test
mov
fnstcw
cmpsb
dec
rclb
adc
cmp
movsb
mov
arpl
mov
or
pop
adc
mov
pushf
sub
fsubrp
jbe
sub
jle
shr
fisubrl
add
and
test
xchg
xor
jle
lods
push
inc
sbb
cmp
adc
xchg
mov
fbstp
sar
mov
and
cmp
push
iret
mov
and
aam
mov
sub
mov
or
dec
dec
push
or
test
or
jg
inc
lds
stos
scas
ja
push
dec
lret
or
pop
mov
pop
test
add
out
xchg
and
xchg
jnp
push
push
sub
out
adc
nop
ffree
jb
sbb
cmp
dec
test
stc
sbb
jns
lds
xchg
sbb
nop
jp
iret
inc
daa
cmp
add
pop
test
test
push
adc
jne
or
or
mov
clc
push
ljmp
xchg
ds
cli
cmp
mov
insb
cli
loop
or
jbe
aas
and
adc
inc
push
or
jo
and
ret
pusha
xchg
ret
push
mov
popa
fisubrs
dec
pop
fdivl
mov
in
ljmp
sarb
sbb
push
or
icebp
mov
hlt
pop
mov
popf
pop
and
pop
loope
xorb
jbe
pop
out
xchg
fiadds
test
push
inc
cmp
xor
mov
jnp
mov
or
sarl
adc
testl
fs
push
xor
shl
sbb
pop
pop
sti
sahf
and
pusha
repz
mov
and
pusha
add
sbb
stos
orb
push
mov
mov
dec
pop
movd
aam
inc
jg
lods
sub
jno
les
popf
pop
xchg
test
icebp
call
cmp
lcall
inc
clc
movsl
inc
ljmp
mov
push
dec
iret
test
xlat
fimull
xchg
lcall
or
adc
sahf
mov
adc
fdivrs
lret
pop
push
negl
mov
push
not
and
and
cmp
or
loope
popa
xlat
test
shl
or
mov
repnz
mov
xlat
jo
lods
or
je
pusha
or
icebp
sti
ret
daa
ja
mov
inc
cmp
mov
iret
icebp
ljmp
xchg
je
out
push
cmpl
mov
cmp
scas
mov
mov
xchg
mov
cmp
je
enter
repnz
mov
push
pop
test
mov
or
shrb
fnsave
cmp
lcall
out
rcll
or
cmpsl
sub
cmp
pop
fdivrl
xor
pop
fdivr
js
and
or
loop
leave
arpl
jle
mov
xchg
xor
pop
push
ja
test
outsb
cmp
and
out
rcrb
test
and
int
std
in
mov
xor
test
stos
pop
addb
aad
jmp
lahf
mov
call
popf
inc
out
sub
dec
jo
or
fsubrp
lret
sub
insb
test
jns
dec
outsb
repz
adc
mov
fistl
mov
mov
aad
cmp
dec
mov
add
idivb
dec
ret
imul
add
sbb
cmp
test
dec
mov
movsb
adc
es
mov
outsl
dec
pop
je
sti
mov
mov
cmp
scas
arpl
push
and
lds
inc
leave
addr16
cs
dec
cltd
daa
dec
rolb
shl
aad
sbb
mov
test
sub
add
push
dec
xor
enter
push
add
lahf
fistpll
xor
add
out
int
mov
xor
jno
mov
jae
jmp
daa
mov
popf
add
in
lods
xor
fnsave
loop
xchg
mov
mov
inc
push
cmp
loop
mov
xchg
rorl
push
add
jne
or
sbb
sub
dec
fwait
aad
ret
in
xor
bound
push
icebp
out
ljmp
lods
jne
adcl
cmpsb
fs
jno
aaa
and
scas
and
pop
and
push
icebp
cltd
adc
add
dec
jae
pop
push
sbb
cs
gs
adc
std
xchg
pop
icebp
xchg
sub
test
outsl
mov
enter
add
xlat
push
add
adc
mov
adc
shlb
ljmp
rorb
call
int3
and
movsb
push
and
ljmp
push
and
fisubs
call
xor
out
stos
cmp
gs
into
and
dec
mov
pop
imulb
cmp
mov
sarl
mov
call
repnz
add
cld
xor
add
xor
mov
imul
rolb
loop
push
int3
fwait
int3
addr16
jmp
mov
mov
movsb
add
cmp
push
sub
daa
sti
stos
dec
adc
pop
jae
jb
gs
leave
aaa
lods
inc
pop
pop
int
outsb
cmp
add
xor
loope
out
mov
cmpsb
jne
mov
mov
ret
inc
add
insb
cmp
xor
fimull
sbb
lods
mov
aaa
ljmp
std
dec
inc
adc
push
push
mov
out
jle
cmp
pushf
loop
pushf
pop
push
sbb
out
mov
jl
mov
mov
leave
add
sub
sub
adc
test
pop
js
movsb
push
fwait
pushf
test
jle
jecxz
or
imull
push
sahf
pop
in
cmpsb
inc
push
sbb
jp
in
nop
fsubl
add
fisubl
cmpsb
adc
ret
imul
cmp
push
popa
pop
mov
push
push
fstpt
stos
jmp
xchg
repnz
std
loop
pusha
pushf
dec
das
pop
das
cmp
das
xchg
mov
lea
mov
ds
push
notl
imul
ljmp
sub
mov
sahf
jne
sub
mov
cmpsl
cltd
xor
adc
insb
push
sub
arpl
sbb
push
out
cmp
jnp
xchg
loope
enter
cmp
push
clc
mov
lret
inc
xor
fwait
dec
fmul
or
xchg
pop
ss
es
popf
es
outsb
and
out
jbe
and
add
xor
inc
sub
out
cld
movsl
dec
push
cmp
jge
pop
adc
pop
in
mov
movsb
sarl
call
inc
pusha
xchg
xchg
mov
sbb
cmp
cli
xor
cmpsl
scas
movaps
jb
dec
iret
addb
mov
test
call
or
into
jae
clc
cmp
dec
in
xor
inc
fs
add
sti
mov
adc
inc
int3
ret
sbb
subb
ljmp
out
mov
jg
movsl
push
sub
pop
push
stos
sbb
stos
push
xchg
jecxz
in
or
dec
in
stos
fmul
pop
sub
jo
outsb
and
push
imul
xchg
pop
aaa
movsl
jge
std
push
push
lahf
popa
mov
inc
or
xor
or
test
mov
inc
cmpsb
cld
push
popf
sub
inc
fcoml
lcall
aaa
mov
lods
mov
jg
icebp
in
xchg
in
ret
add
filds
dec
inc
xchg
lea
inc
adc
sbb
xlat
dec
mov
pop
js
pusha
fisubrl
mov
cli
mov
sbb
dec
sbb
repz
add
jb
dec
adc
sub
xor
cmp
cmpsl
jecxz
lahf
mov
imul
xchg
sub
call
dec
jl
ret
add
cmp
push
cli
mov
and
orl
bound
cmpsl
or
cwtl
dec
and
cmp
popl
xlat
push
adc
xor
mov
cs
mov
fsubs
add
pop
mov
adc
cs
lret
out
xchg
pop
mov
xor
mov
in
insb
and
mov
ret
and
xlat
push
inc
shll
lock
xor
out
dec
and
int3
jl
pop
xor
ss
adc
cmp
adc
mov
test
incl
sbbb
dec
cmp
jecxz
out
pop
ljmp
jecxz
bound
sub
adc
sbb
roll
ja
mov
loope
iret
call
roll
repnz
push
lret
xor
inc
inc
push
insl
cmpsl
fs
ljmp
ffreep
aam
and
push
movb
movsb
aas
mov
mov
push
push
push
mov
icebp
push
jl
jns
or
insb
scas
pop
mov
push
in
jbe
in
int3
shrl
and
jo
test
adc
mov
loope
test
out
lcall
rorb
bnd
fistl
dec
enter
inc
inc
les
mov
sub
arpl
dec
jge
pop
gs
cmp
ret
clc
and
mov
mov
test
stc
and
ret
cmp
mov
jae
mov
jb
in
dec
sub
sbb
jl
mov
mov
gs
xor
insb
cmp
adc
and
fldz
dec
stos
inc
in
leave
xor
xchg
dec
into
movsl
mov
cmc
mov
adc
or
gs
daa
sub
add
mov
imul
fwait
adc
jno
mov
inc
sbb
push
repnz
arpl
xchg
pop
or
sbb
test
addl
push
push
int3
xchg
adc
pop
pop
in
sub
add
pop
inc
sub
stos
test
sub
stos
div
flds
sbb
jg
enter
xchg
push
add
push
pop
dec
enter
ljmp
stos
jno
repz
adc
xor
inc
and
cmpb
jle
sub
and
loop
fdivl
ret
jg
adc
dec
sub
ljmp
icebp
sbb
nop
adc
pop
movsl
in
add
and
cmpsb
mov
inc
cmp
adc
lds
out
cltd
xchg
outsb
cmp
stc
rolb
jns
mov
xor
mov
scas
shl
push
loope
sub
loope
push
push
sbb
inc
hlt
pop
mov
pop
cmp
jae
out
enter
pop
jne
lock
hlt
sub
subl
xchg
ss
stos
rcrl
pop
movsl
push
jg
lea
out
dec
test
mov
adc
mov
je
frstor
mov
and
jnp
cmc
test
ss
lods
jnp
mov
xchg
out
pop
add
xchg
dec
andl
sub
pop
jne
jae
pop
or
sbb
dec
ds
mov
pop
or
into
ds
and
loop
pop
shrb
inc
sub
and
cmp
inc
lret
fnstcw
lcall
xor
enter
mov
bnd
mov
cmp
jno
xor
cmpsl
sbb
inc
sbb
xchg
and
xor
decb
or
pop
jns
les
dec
addl
xchg
xchg
cvtps2pd
ss
xchg
test
test
ljmp
aad
xlat
les
inc
aam
rcrb
stos
subb
ret
es
icebp
cmp
inc
les
xchg
outsb
pop
mov
push
jle
add
mov
pop
fwait
das
jo
pop
xor
repnz
pusha
icebp
and
mov
shrb
sbb
jl
pop
adc
jle
cld
mov
or
inc
inc
push
add
and
cmp
mov
test
filds
cwtl
cmp
dec
aaa
adc
sub
xchg
out
lret
jns
or
fcomp
aam
popa
mov
cwtl
pop
insl
mov
inc
xorb
lret
das
andb
or
imull
push
outsb
mov
in
rorb
mov
outsl
or
sub
pushf
inc
inc
ret
rol
cltd
add
lahf
jl
scas
sbb
andb
aas
pop
ja
push
jle
iret
cmpsl
mov
cmp
aas
rcll
test
mov
aaa
dec
lret
in
mov
imul
gs
adc
cli
xor
pop
jg
lds
sbb
mov
in
aad
push
mov
mov
pop
adc
inc
add
les
pop
cli
out
scas
or
jne
add
mov
dec
leave
jge
xchg
imul
sarb
mov
mov
arpl
push
dec
add
fnstsw
out
and
imul
int3
inc
inc
lret
stc
pop
xor
adc
xchg
sbb
imul
hlt
lret
xchg
mov
jnp
mov
sbb
out
repnz
fdivr
loopne
and
push
inc
stc
sub
and
xchg
xchg
jbe
ja
cltd
idiv
aad
insl
outsl
es
add
dec
jae
testb
xor
adc
les
lret
add
xchg
jnp
and
and
andb
xchg
les
mov
lret
push
dec
jl
push
cld
jb
cs
cwtl
pop
lea
icebp
repnz
push
xor
push
adc
mov
pop
and
incl
adc
hlt
cmp
mov
inc
setae
test
aas
int3
cmc
out
mov
mov
insl
sub
sbb
js
push
adc
inc
mov
repnz
pushf
xchg
or
test
stos
mov
cmc
out
mov
xchg
inc
mov
add
cmc
xchg
xchg
out
sub
sub
mov
mov
arpl
sbb
xchg
inc
xor
jnp
cli
mov
movsl
or
jae
int
mov
jg
into
inc
lret
mov
sub
cwtl
in
mov
out
adc
inc
shl
mov
add
gs
xchg
cmp
andb
arpl
pop
or
push
arpl
pop
arpl
push
push
inc
insl
ja
mov
loopne
inc
mov
mov
sbb
push
sub
pushl
xor
cmpsb
xor
jmp
in
push
jg
xchg
fsubs
or
xchg
jnp
dec
add
sbb
repz
jecxz
in
cmp
adc
mov
jl
popf
inc
das
test
cltd
push
gs
mov
in
pop
jle
jmp
sub
imul
je
fwait
jbe
pop
shlb
stos
or
test
fwait
enter
imulb
in
mov
push
mov
out
pusha
sti
jp
add
mov
mov
shl
dec
fwait
cmp
fstpl
xchg
adc
and
xchg
aas
push
sbb
test
outsl
loope
je
pushf
idiv
mov
ret
movsl
xchg
push
push
or
test
push
jno
lock
mov
pop
loop
jnp
pop
in
mov
xchg
jns
fildll
stos
cltd
leave
vmovdqa
push
lcall
pop
int
movsl
notl
jge
sbb
add
test
cmp
loopne
addr16
out
xchg
test
int3
insl
ficomps
icebp
jge
bound
xchg
cmp
sbb
cmp
jmp
loop
mov
pop
xor
outsl
cmp
testb
lods
inc
mov
dec
daa
and
add
stc
jo
sbb
mov
cwtl
mov
xchg
scas
enter
and
adc
sub
add
mov
xlat
pop
cld
out
dec
inc
xchg
add
dec
adc
cmp
icebp
mov
lret
jmp
mov
pop
scas
lret
sub
hlt
sub
aad
fcmovu
repz
and
and
xchg
lods
adc
jns
pusha
xor
jge
jge
loopne
jo
cmp
lock
xchg
jb
xchg
stos
inc
mov
stos
out
je
mov
cs
jg
jg
leave
addr16
adc
jge
pop
cs
sub
cmp
rclb
xchg
sahf
mov
mov
loop
cmp
ficomps
not
inc
push
inc
jnp
les
divl
push
out
loope
xor
pop
jecxz
xor
xor
add
mov
xor
subb
adc
adc
adc
fbld
jo
push
mov
lret
inc
insb
push
rcrb
je
push
mov
xchg
scas
inc
jg
out
inc
sub
mov
and
je
lods
jg
mov
push
mov
popl
add
repnz
lret
jo
repnz
cld
xor
orb
push
icebp
in
fidivl
fisubrl
mov
fdivrl
rcl
push
push
inc
pop
inc
sti
jae
pop
push
in
mov
dec
lods
jnp
das
add
pop
les
mov
adc
mov
addr16
mov
mov
pop
call
scas
es
int3
cltd
fisubs
jmp
les
test
inc
ret
adc
test
push
aad
cmpsb
adc
mov
push
lock
jle
lret
cmp
jns
mov
xlat
enter
jbe
xor
gs
std
imul
sahf
cwtl
mov
adc
int3
jecxz
test
mov
in
sbb
stos
stc
enter
push
sbb
lods
add
sbb
scas
leave
xor
inc
inc
lret
cmpsl
test
int3
les
dec
sbb
xor
pop
movd
stos
push
xor
shlb
cmpsb
mov
pop
fists
stos
or
sub
jno
movsb
xchg
in
sbb
cmp
rcll
negl
pop
cltd
dec
inc
push
jb
xor
cld
cld
data16
or
icebp
inc
test
loop
add
dec
or
addr16
movsb
sub
dec
jle
js
andb
fiadds
mov
das
push
negb
lods
andl
xor
enter
push
movsb
inc
aad
xor
stos
mov
adc
sub
and
xchg
pushf
mov
or
ret
shrl
pop
cli
fs
push
shrl
hlt
shrb
lret
adc
push
mov
push
out
stos
dec
push
xchg
adc
and
std
xchg
inc
mov
sbb
or
sbb
adc
dec
pop
mov
jle
cltd
sbb
ret
test
cmp
aas
imul
mov
push
push
repz
pop
pop
fiadds
mov
out
add
adc
mov
insl
jnp
jg
lahf
jno
dec
mov
pop
adc
jle
inc
int3
mov
push
pop
lock
adc
jmp
jl
inc
sub
fadd
into
not
or
mov
int
xchg
aad
sbb
cs
mov
test
loope
inc
aam
std
jecxz
xchg
sub
or
xchg
dec
pop
imul
shll
adc
js
lock
popf
lds
test
jo
js
jle
mov
aad
out
xorb
rolb
cmp
mov
inc
pushf
xchg
aad
cmpsb
pusha
jle
mov
lret
aas
jmp
repnz
push
ret
jo
xchg
lret
push
xchg
cmp
xchg
sahf
push
fidivl
fdivs
test
lret
daa
ret
push
sahf
pop
push
fildll
idiv
jne
shll
add
adc
mov
sub
sbb
es
inc
lret
imull
enter
pushl
xchg
xlat
add
icebp
cmp
test
bound
out
testb
or
into
lods
or
mov
imul
pop
or
out
mov
pop
in
stos
jnp
or
jnp
in
inc
inc
cs
jmp
pushl
fs
test
jnp
fldenv
ljmp
sarb
std
out
push
xchg
sub
imul
mov
pop
xsaveopt
cmp
mov
xchg
xor
cmp
int
sbb
xlat
cwtl
push
inc
cltd
roll
fnsave
mov
js
hlt
push
push
into
js
aas
adc
mov
fisttpl
test
xchg
stos
bound
ficompl
decb
pop
call
popa
xor
sub
cmpsl
imul
adc
xor
bound
out
sbb
xor
push
inc
mov
shrb
je
out
movsl
inc
push
test
or
fldz
mov
out
sti
sbb
not
push
in
inc
dec
xorb
jge
out
lahf
cmpl
and
stos
xchg
jl
sti
ds
mov
cmp
pop
adc
lahf
mov
fcmovne
mov
dec
sub
std
xor
sbb
std
mov
lds
movsb
pusha
cmp
sbb
jae
repz
push
push
jno
push
push
mov
mov
aas
enter
arpl
add
enter
daa
pushf
hlt
add
in
add
pop
inc
and
jmp
rol
push
adc
lret
repnz
push
repnz
jmp
jns
fcomip
ja
xchg
testl
mov
leave
push
andb
int3
outsb
lcall
sbb
sbb
dec
cwtl
lcall
rclb
dec
push
loope
popf
mov
mov
adc
in
adc
inc
adc
cmp
pop
enter
cwtl
scas
fimuls
adc
outsb
cs
pusha
or
imulb
mov
mov
popf
and
stos
add
mov
movsl
lcall
push
std
nop
sub
adc
jmp
xchg
out
out
jecxz
sahf
add
sub
xor
and
leave
inc
inc
loope
push
mov
lods
push
push
nop
je
push
dec
lods
in
popf
mov
call
jl
lcall
iret
push
gs
repnz
add
jmp
inc
jno
lock
jmp
cmpsb
cmp
adc
sbb
cli
rcrl
insb
and
rclb
sbb
idivb
xchg
jne
daa
jge
cmp
mov
lock
push
sub
lret
je
and
cmpsl
xchg
cmpsb
mov
addl
addl
int3
movsb
addr16
sbb
xchg
and
mov
inc
arpl
or
insb
push
push
add
je
fucomi
pushl
push
push
mov
sti
pop
push
jb
dec
fsubs
orb
pop
mov
mov
xchg
dec
jecxz
cmp
popa
lret
in
cmp
loope
dec
push
loopne
dec
shlb
inc
dec
jns
add
add
and
xchg
cmp
xor
popa
mov
mov
ja
lods
add
cmpl
leave
hlt
sbb
xchg
inc
and
or
mov
movsl
scas
inc
outsb
and
mov
dec
add
push
add
cmp
mov
xor
addb
js
mov
jo
sub
pop
sbb
adc
inc
shrd
push
stos
add
nop
xor
mov
cmp
js
repnz
insl
dec
or
fldt
je
push
cltd
cli
add
fiaddl
xchg
pop
inc
sbb
mov
jp
sti
mulps
or
adc
addr16
ja
jle
add
jb
pop
jne
pop
xchg
scas
pop
rorl
sbb
and
xor
push
in
add
add
push
mov
dec
fdivl
xor
mov
ret
out
inc
mov
subl
jle
sub
cmp
popf
stos
orl
pusha
mov
aam
jmp
leave
jmp
sahf
std
inc
cmp
or
adc
jp
xchg
push
push
adc
jg
and
cmp
inc
xor
inc
int3
xchg
daa
push
in
imull
cwtl
and
lret
dec
loop
jnp
aaa
into
xor
sub
movsl
dec
fidivs
mov
or
test
repnz
mov
push
sbb
stos
add
sbb
cmp
loop,pt
int3
fs
sub
mov
addl
push
mov
movsb
movsl
mul
jl
xchg
or
and
push
or
adc
loope
out
and
fsubs
mov
daa
ficomps
xchg
testl
adc
mov
leave
movsl
mov
jp
xlat
jo
ficomps
jnp
mov
xor
aas
into
outsb
cmc
xor
sahf
andb
pop
pop
sbb
sub
popf
and
in
inc
mov
push
call
ja
add
mov
lret
dec
scas
js
pop
imul
inc
lock
inc
iret
adc
or
pop
and
cmp
arpl
dec
mov
push
subl
arpl
pop
leave
push
in
jle
add
dec
shrl
cmpsl
dec
adc
aas
or
decl
ljmp
dec
mov
cmp
fcoml
fidivrl
dec
inc
xor
cmp
es
jnp
inc
inc
enter
push
outsb
pop
cs
ljmp
lods
mov
rolb
pop
lock
in
mov
inc
ljmp
xor
popa
pop
sub
push
pop
sbb
ror
sahf
cmpb
push
arpl
cs
pop
sti
gs
enter
fisubs
xchg
imul
mov
cmp
ret
jns
or
dec
jno
push
daa
lods
mov
xchg
lahf
scas
dec
movsl
sahf
lret
lock
inc
push
enter
iret
movsb
cmp
xor
push
inc
int3
and
or
pop
test
pop
es
jno
lods
inc
mov
idiv
mov
pop
repz
mov
jns
xchg
sub
repz
mov
push
std
loop
mov
roll
mov
or
testb
mov
popf
dec
aam
test
mov
leave
test
mov
jmp
dec
jp
shll
nop
mov
mov
adc
hlt
leave
lea
push
sbb
in
push
frstor
add
cmpsl
mov
jl
xchg
inc
pop
and
jg
hlt
in
js
nop
mov
out
mov
enter
inc
jae
imul
bound
pop
pcmpgtd
mov
in
leave
jle
push
test
dec
xor
inc
iret
add
in
in
cmp
in
jb
insb
sbb
repz
jg
int
test
addr16
mov
or
movsl
int3
loop
cltd
jbe
test
imul
inc
add
popa
mov
sarb
dec
push
cli
push
pop
repnz
mov
mov
adc
adc
into
mov
int3
dec
daa
sti
mov
and
popf
jmp
movsb
inc
les
cmp
addr16
insl
xchg
xor
andl
pusha
push
addl
into
jno
jbe
cmp
popa
lods
movsl
sbb
pop
cmp
and
insl
int3
mov
cmp
push
and
int3
scas
outsl
mov
mov
push
lret
cmp
jp
pushw
sbb
lods
pusha
ja
pushf
icebp
lret
or
sbb
and
loop
adc
ret
fisttpl
xlat
xor
cmp
xchg
dec
out
fsub
jnp,pt
jecxz
pop
ljmp
push
loope
ja
paddusb
call
sbb
notl
cwtl
shll
pop
pop
mov
addr16
pop
sbb
mov
je
inc
and
lods
mov
aas
mov
sub
into
xchg
xchg
mov
dec
adc
push
outsb
jg
sbb
es
aas
cmp
imul
ret
pop
cmpsb
xchg
dec
popa
push
aam
cmc
cli
sub
jne
and
mov
lea
and
xor
dec
inc
or
cli
mov
xchg
jge
bound
inc
popa
cwtl
ljmp
jl
push
xor
lds
popf
mov
imul
cmp
scas
dec
shl
rolb
ret
loope
cwtl
sbb
ret
repz
and
adc
mov
dec
js
mov
xlat
jecxz
mov
mov
hlt
and
fnstcw
test
cs
stc
shll
ficoml
loop
lret
fnstsw
ds
mov
hlt
outsb
shr
inc
es
inc
in
push
and
push
insl
push
cmpsb
lods
mov
hlt
fwait
push
mov
sub
pop
pop
dec
into
push
mov
jns
in
je
inc
loopne
ds
pop
mov
cmp
mov
cmp
fs
jg
jp
in
jno
sbb
lahf
movsl
mov
inc
push
loope
sbb
sbb
inc
in
xcrypt-ecb
cmpsl
insb
and
mov
divb
repz
push
in
dec
fwait
aad
mov
push
leave
test
cltd
xchg
pop
pop
xor
fidivs
jbe
add
out
call
es
lock
enter
int3
sbb
movsb
sti
jg
cmp
lret
nop
test
xor
lods
stos
in
lods
cmp
or
mov
mov
lahf
addl
mov
jae
inc
mov
repz
cltd
cs
xchg
movsl
sub
movsl
test
out
je
xor
sbbl
pusha
sarb
data16
inc
enter
in
pusha
cmpsb
ror
xchg
popa
test
pop
rorb
or
ret
je
xor
inc
fildll
xchg
adc
ljmp
pusha
call
mov
sbb
test
adc
imul
cltd
jl
out
add
cltd
fistpll
cwtl
icebp
cli
jmp
jae
inc
mov
and
xor
or
push
bsr
and
fwait
mov
mov
pop
sbb
cmp
rolb
popa
mov
add
add
dec
bound
lock
cmp
mov
aas
jae
inc
ss
jns
scas
test
dec
fdivrs
pop
inc
ja
sbb
gs
add
adc
or
inc
push
and
cs
push
sub
xor
mov
mov
xchg
pop
shl
lock
and
lods
or
xlat
sbb
push
push
in
shrb
mov
out
and
sarl
and
movsl
lret
xor
adc
xchg
sahf
mov
sti
push
sub
mov
mov
enter
mov
push
cs
imul
push
cs
xchg
and
js
or
or
in
mov
xlat
out
aad
in
imul
mov
lea
daa
sub
popa
dec
fsubl
adc
add
xchg
out
pop
jl
in
jg
push
push
daa
aaa
push
pusha
cmp
jg
mov
in
push
movsl
inc
xchg
or
jecxz
cmpsl
lcall
pop
cmp
daa
fwait
mov
jns
sbb
mov
and
sub
fisttpll
nop
repz
xchg
cmc
jno
fbstp
repz
mov
sub
fwait
cli
push
add
dec
mov
jae
inc
dec
mov
and
hlt
pop
in
inc
mov
icebp
ja
hlt
repnz
jo
mov
int3
jnp
loop
jbe
jl
push
rcl
dec
adc
insl
add
sbb
sub
add
xchg
dec
mov
cmp
mov
sbbb
lahf
inc
push
nop
test
mov
repnz
mov
aam
mov
mov
sbb
mov
movsb
adc
pop
sub
push
or
fstps
jmp
push
add
xchg
jmp
adc
scas
add
test
jo
adc
mov
adc
or
xor
sbb
scas
inc
sub
adc
inc
or
ret
push
fbstp
jae
mov
pop
out
pop
cmp
lea
pop
out
or
jbe
in
adc
je
or
dec
mov
subb
or
aas
cli
and
ja
mov
ljmp
mov
popa
in
leave
xlat
faddl
jg
mov
push
mov
push
sbb
test
pop
in
jg
jg
and
inc
sub
xor
jecxz
shll
test
testl
call
inc
push
sub
lods
pusha
das
pushf
xchg
repz
leave
mov
orb
pop
test
stos
pop
sbb
pushf
aas
clc
arpl
cli
mov
jmp
sarl
push
or
or
fcomps
neg
pop
push
jmp
sub
and
pop
out
shll
mov
imul
sub
pushf
xchg
icebp
push
pushf
fmul
pop
lahf
push
nop
pop
mov
sub
testl
dec
pushf
jge
lods
xchg
xchg
rcrl
inc
or
jecxz
loop
imul
icebp
insb
mov
mov
fpatan
push
inc
xchg
fwait
inc
rcrb
jne
or
and
cli
arpl
jge
jae
mov
data16
push
movsl
dec
pop
lcall
outsb
lock
push
jne
mov
sbb
bound
push
call
xlat
lret
loopne
xchg
shll
xchg
jmp
and
fnstcw
scas
cmp
test
lret
mov
outsb
mull
inc
inc
test
inc
cmp
xorb
mov
nop
pusha
dec
test
in
jnp
into
arpl
stos
mov
pop
dec
icebp
test
dec
out
sub
push
sbb
popa
sbb
dec
faddl
sub
add
cmp
je
test
subl
xchg
je
and
sbb
rorl
daa
je
mov
or
jge
mov
in
ds
xlat
pop
icebp
jb
ss
rcrb
xchg
imul
xor
popf
sub
fstpt
popf
or
dec
mov
add
jecxz
push
in
or
mov
mov
out
les
rorl
xchg
or
push
repz
push
sbb
lea
dec
jp
daa
pop
int
mov
dec
stos
jp
mov
les
lock
cmp
push
shl
jno
add
cmp
or
notl
outsl
ljmp
out
mov
repnz
jle
mov
mov
mov
push
xor
push
or
push
stos
adc
xlat
inc
inc
popf
sbb
rcrl
les
jle
lods
xor
xor
mov
adcl
xchg
call
push
fistps
jne
dec
loopne
stc
add
nop
xchg
push
xchg
push
imul
fmull
lock
add
ss
push
inc
dec
movsl
dec
int
xchg
push
test
enter
jo
roll
lods
and
xor
adc
xor
ret
mov
dec
mov
jno
push
jo
fstps
lds
in
dec
stos
mov
and
into
xor
pop
sbb
jl
cmpsb
push
adc
cs
repnz
dec
push
or
mov
adc
and
bound
jae
sbb
dec
pop
jne
arpl
mov
addr16
idivl
pop
adcl
xor
test
push
loop
dec
push
inc
das
out
repnz
data16
stos
and
xlat
xchg
and
pop
mov
sbb
test
cmp
inc
jno
sbb
jle
xor
jp
ret
scas
sbbl
ret
or
in
inc
mov
lea
loope
push
data16
or
fisubrs
lds
movsb
inc
xor
fidivrl
push
mov
and
mov
pop
push
fmull
mov
orl
aas
jge
addr16
xchg
mov
cltd
flds
pop
and
stc
xchg
stos
push
mov
rcll
cmpsb
mov
test
scas
in
mov
fmuls
inc
scas
test
sub
test
pop
pop
sbb
mov
xchg
addr16
mov
jnp
jl
sti
sahf
movsb
mov
push
mov
inc
sbb
xor
jnp
sub
js
ss
cs
mov
dec
divb
cmpsb
and
xor
sbb
stos
push
mov
inc
jmp
pop
pop
xchg
pop
adc
xor
scas
mov
out
sahf
jge
scas
inc
ljmp
daa
dec
ds
mov
stos
xor
popa
xor
jnp
inc
test
pop
sub
fiadds
fldt
lret
mov
mov
rcrl
loopne
jge
sahf
sbb
inc
inc
push
mov
or
or
push
pop
xor
out
mov
pop
aad
mov
inc
cmp
pop
pop
push
and
aaa
test
std
or
shrl
loope
mov
jo
shll
in
aaa
add
data16
das
int3
setae
aad
mov
fwait
bound
push
pcmpgtd
out
int
jp
sub
jno
jns
jne
adc
mov
insb
cli
out
or
cmpsb
jecxz
cltd
std
push
shl
jbe
mov
cmp
enter
adc
add
sub
loopne
shll
sbb
jmp
inc
pop
sbb
ljmp
outsl
hlt
mov
pop
xchg
aaa
mov
jp
and
push
adc
or
jno
je
testl
push
test
pop
fisttps
cmpsl
xor
and
add
dec
jae
sub
cmp
jnp
jl
cwtl
stc
push
add
leave
pop
sub
jo
stos
test
mov
xor
dec
lock
xor
sahf
popa
shlb
push
xor
iret
cmp
mov
mov
push
int3
xlat
add
inc
call
sbb
xchg
mov
mov
mov
popf
push
cs
inc
out
push
adc
fmul
in
pop
pop
insl
les
scas
das
lods
pop
test
sub
xor
mov
mov
or
cli
mov
mov
jge
mov
popf
icebp
imul
mov
and
add
jg
jg
fstl
xchg
es
das
cmp
lods
xor
inc
fdivrs
fldcw
add
mov
cmpsb
imull
rorl
mov
dec
iret
repnz
lock
push
pop
out
or
mov
out
adc
or
push
xor
das
jnp
imul
cmc
dec
insb
rdmsr
pop
imul
out
cmp
xchg
and
mov
ja
je
jge
xchg
mov
je
mov
mov
data16
cmp
dec
and
aam
pop
push
xchg
inc
mov
dec
and
cmp
lret
push
cs
inc
adc
jp
roll
dec
sub
fcomps
cmc
mulb
mov
pop
into
mov
mov
push
jnp
sbb
mov
scas
push
cmp
adcl
xchg
mov
inc
dec
xchg
xor
push
adc
jbe
dec
popa
or
and
adc
out
rcrl
inc
adc
repz
lods
inc
xlat
lret
in
cs
int3
lods
push
icebp
pusha
dec
stos
mov
or
les
bound
aad
push
xchg
movsb
pop
adc
adc
adc
pop
add
icebp
int3
xchg
insb
in
cmp
inc
mov
pop
cmp
adc
xchg
icebp
cmpb
push
adc
clc
xchg
insb
mov
jnp
repnz
adc
push
inc
inc
adc
cmp
jge
out
jl
xchg
idiv
ljmp
movsl
push
pop
mov
push
inc
mov
in
cmp
mov
xor
adc
das
out
pop
xor
jae
xor
sbb
push
stos
jnp
lods
test
cmpsb
push
mov
push
jecxz
mov
insl
push
mov
dec
aam
mov
daa
gs
lahf
dec
es
icebp
cld
nop
sub
test
roll
and
xchg
xchg
mov
fneni(8087
std
in
push
or
scas
or
fisttpll
in
xor
rcll
hlt
and
ljmp
xor
test
push
pusha
mov
xor
cwtl
btr
sbb
test
dec
xchg
ljmp
jae
xor
movsb
push
push
fsts
mov
test
int3
sbb
insl
push
sbb
mov
lods
mov
sub
pusha
dec
or
or
rcl
push
iret
mov
mov
xchg
pushf
inc
int3
or
cmp
je
sub
pop
jns
int3
inc
inc
in
pop
or
xchg
rcrb
and
pushf
ficoms
ret
mov
adc
adc
outsl
test
in
popa
scas
lods
insb
adc
mov
xor
ret
out
jbe
shll
popa
add
xor
sub
mov
adc
jmp
enter
shrl
js
mov
in
adc
outsb
sbb
dec
icebp
pop
sarb
sti
mov
fwait
mov
mov
sub
dec
mov
aam
adc
inc
push
inc
pop
roll
outsb
inc
lods
lcall
addr16
arpl
xlat
inc
das
movsl
push
jne
lock
lock
imul
sub
add
or
sbb
or
gs
push
jnp
adc
sub
popa
mov
ljmp
repz
inc
dec
xchg
sub
jecxz
mov
mov
adc
gs
int
imul
cmp
outsl
gs
xor
pop
pushf
push
dec
lahf
lcall
jns
or
repnz
lods
call
pop
call
mov
adc
iret
and
jl
pop
and
pusha
shll
icebp
movaps
popf
sarb
in
pop
push
rorb
adc
fsubrs
test
sar
repz
testl
sbb
cmp
add
push
sbb
mov
shr
aas
or
xor
push
cld
dec
aaa
fnstsw
pop
or
and
pop
frndint
push
aad
gs
or
xchg
mov
xor
or
cs
aaa
mov
movsl
fnstsw
orl
cmp
fdivr
pop
add
push
stos
push
inc
shll
icebp
dec
fwait
and
pop
mov
jmp
test
pop
jl
mov
stos
leave
clc
aam
popf
inc
lret
leave
mov
imul
xor
jno
push
fbld
add
sti
jae
push
into
rol
push
aam
mov
mov
and
push
cmpsb
int
mov
sbb
xor
aaa
dec
push
jle
enter
cmpb
pop
pop
pop
std
or
mov
imul
add
add
inc
sbbb
inc
mov
dec
add
add
mov
jle
push
lds
clc
fldl
mov
iret
sub
xchg
clc
divl
pusha
mov
push
adc
mul
leave
js
cwtl
test
sti
notb
or
test
jbe
loopne
inc
mov
xor
rorl
pop
lds
jmp
ja
jo
jecxz
sbb
or
mov
xor
out
in
test
mov
mov
mov
and
in
lods
call
dec
or
xor
in
jne
or
and
lods
inc
push
adc
jo
sbb
lahf
test
in
notl
sub
js
out
push
repnz
loopne
ret
or
or
jbe
inc
shrb
clc
pushf
jns
push
daa
xlat
add
push
add
fsubl
jae
jb
mov
and
mov
cmpsb
test
push
xchg
leave
push
ja
mov
dec
je
and
outsl
dec
loopne
fists
push
cmp
mov
mov
mov
jmp
xchg
outsb
outsl
jg
scas
shl
lods
inc
sahf
fsubr
stos
stc
negl
or
push
sahf
sbb
cmp
mov
int
cmpsl
aad
push
and
pop
xor
test
sbb
not
push
movsl
mov
jge
mov
je
aas
cmpsb
scas
mov
xchg
ror
sbbl
xchg
lock
rorl
lret
js
popa
pop
sub
jmp
mov
je
add
xor
or
mov
inc
cmp
pop
mov
push
pop
andb
aam
loop
lea
in
enter
jns
das
test
in
jl
cmc
and
mov
xchg
mov
mov
sbb
or
iret
sub
sbb
jp
xchg
xchg
jl
ficomps
mov
cmp
movsl
ja
mov
xor
je
jnp
push
push
pop
scas
inc
push
mov
sbb
rcr
daa
decb
cmp
cmp
jae
dec
outsl
pop
cmp
push
jle
test
mov
mov
in
outsb
add
mov
imul
sahf
push
sti
mov
and
stc
les
lcall
scas
dec
fiadds
je
orl
pop
xchg
fnsave
dec
lret
lret
and
int
cmpsl
cs
jp
test
mov
push
shll
lock
icebp
add
add
and
push
xor
push
xchg
inc
stc
in
es
mov
lods
ret
pop
movsl
inc
xchg
adc
in
jbe
inc
cmp
mov
lret
sbb
xchg
push
jae
or
rcr
and
es
ja
sub
fiaddl
push
mov
sub
ret
outsl
xchg
sub
mov
test
pop
sub
adc
hlt
and
sti
dec
addr16
clc
sub
aas
push
inc
jecxz
jae
outsb
jl
xrelease
jae
outsb
inc
pop
leave
jge
daa
xchg
push
addr16
idiv
lods
xlat
lahf
sbb
fisttpl
mov
sub
in
mov
call
xchg
jecxz
push
mov
inc
in
ljmp
aam
sub
cmp
std
lcall
sub
addb
daa
mov
imul
push
pop
cwtl
mov
pop
push
jecxz
xor
or
dec
cmpsl
fnstcw
sub
jbe
les
sti
add
test
movsb
inc
dec
sub
call
dec
mov
sbb
mov
inc
fistps
mov
or
add
push
faddl
sahf
mov
cmpsb
push
test
loope
jae
hlt
add
popa
jmp
mov
dec
fs
jl
inc
dec
cli
cmp
mov
lcall
mov
push
leave
add
push
and
cmp
cld
cs
outsl
imul
negl
int
dec
cmc
out
movsl
frstor
stos
out
push
fildl
push
mov
lods
in
xor
out
add
dec
adc
pop
bound
fidivrl
add
cmp
dec
jne
cs
sbb
dec
cmp
jecxz
daa
gs
push
xor
lret
outsl
sbb
loopne
dec
data16
mov
jmp
in
pushf
dec
add
sarl
repz
dec
in
jne
sub
xor
inc
pop
loopne
dec
sbb
fstpt
mov
cmc
pop
rorl
pop
popa
jmp
inc
sahf
shll
or
jo
mov
stos
xchg
imul
int3
dec
mov
in
ret
loope
aas
jnp
sub
xor
jno
or
xchg
rcrb
insb
mov
imul
mov
jo
test
aad
lods
loope
ljmp
xchg
in
adc
mov
jmp
jecxz
mov
adcl
cmp
mov
xchg
fcoml
dec
and
pop
push
push
and
mov
push
and
jo
mov
int3
push
jp
jecxz
fsubs
fldcw
xlat
mov
cmp
inc
push
mov
imul
dec
inc
movsb
in
mov
dec
push
mul
jbe
lahf
or
sbb
shll
jp
fmull
imul
stc
jl
leave
xchg
mov
loopne
sub
orl
ja
xorb
adc
fstl
imul
mov
ret
mov
mov
push
add
pop
movsb
pop
mov
jnp
loopne
jmp
cs
pop
lret
ds
mov
sub
adc
pusha
dec
lods
out
xchg
jmp
dec
je
jg
repz
int
add
and
pop
ds
add
std
sbb
mov
or
or
pop
or
loop
lock
jecxz
xchg
mov
cs
jl
shr
xor
jge
inc
lahf
pop
fsubl
cmp
jle
pop
mulb
cmpsb
xchg
or
arpl
sub
sar
dec
pop
or
in
out
fwait
pop
xor
imul
hlt
gs
ljmp
lods
jae
call
lret
lahf
aad
push
xchg
and
das
mov
dec
jp,pn
push
sbb
or
dec
dec
push
or
addr16
loope
add
sub
push
dec
dec
sub
test
mov
cmp
mov
xchg
cmp
jo
jae
ss
lods
stos
nop
cmp
xchg
je
aaa
add
pop
sbb
lret
imul
ja
mov
rcll
insl
fwait
adc
push
roll
xor
stos
cmp
arpl
lods
stos
cmpsb
inc
dec
aam
repz
stos
lods
cmp
cmc
mov
push
or
mov
inc
cmp
ja
test
sbb
add
pop
je
sbbb
mov
jecxz
gs
rcll
call
into
loopne
sbb
outsl
sub
xchg
lds
inc
out
or
dec
or
and
xor
pop
pushf
imul
fildl
test
jb
xor
pop
fwait
insb
dec
test
dec
mov
pop
lret
pop
imul
cld
and
pop
add
repz
adc
xchg
pop
cmc
gs
pop
xchg
mov
xchg
cmp
mov
xor
mov
inc
push
in
loop
clc
push
fiaddl
sub
sub
repz
mov
push
and
jne
fisttpll
loopne
inc
shr
and
mov
dec
test
add
repnz
jae
and
in
negl
mov
das
xlat
call
cmc
mulb
jno
repz
repz
jmp
or
rorl
adc
xchg
add
xlat
mov
stos
int
sarb
mov
push
inc
jg
hlt
inc
mov
fdivp
or
sahf
xchg
mov
push
out
push
dec
xchg
xor
mov
inc
mov
sbb
rcrl
xchg
sbb
in
add
jle
repnz
outsb
popf
pop
cld
add
sbb
das
rcr
or
jmp
movsl
int
test
std
fisttps
push
ss
movsb
pop
jp
out
mov
mov
js
loope
ret
and
cmc
sub
mov
add
or
subb
pop
jmp
int3
test
sti
lods
xor
cmpl
xor
leave
repnz
fidivrs
hlt
out
xchg
mov
add
inc
pushf
int3
inc
jmp
into
lret
dec
hlt
in
add
cmpsb
push
dec
sub
aas
rcrl
jae
pushf
mov
in
nop
stc
sub
out
sbb
pop
dec
clc
dec
cltd
movsl
aam
inc
push
mov
mov
sti
outsl
aad
cld
mov
outsb
add
push
xlat
xchg
hlt
xchg
sub
loop
and
push
add
jb
int
scas
fsubs
add
adc
test
inc
roll
adc
inc
shr
and
pusha
dec
mov
push
push
xor
pop
lea
lods
cmp
or
and
push
scas
pop
dec
loope
lcall
and
js
das
stc
inc
cmpsb
ds
mov
add
lods
testl
jo
pop
imul
jge
ret
cltd
in
jl
out
mov
cltd
pop
push
xor
pop
fsubs
sub
adc
inc
cmp
gs
loope
mov
xchg
fsubr
xlat
aam
fucom
sbb
mov
push
push
lahf
xor
pop
fwait
jbe
daa
fisubrs
sub
cmpsl
inc
stos
push
mov
fwait
loope
jl
sarl
add
rorl
in
add
pop
mov
shl
add
leave
push
xchg
in
cmc
jbe
sub
jae
pop
push
and
and
mov
roll
adc
lret
add
sbb
dec
rcl
xlat
pop
testl
jns
popf
stos
fnclex
xchg
and
lods
loop
lret
out
dec
sbb
pop
in
popf
lock
mov
push
jns
and
into
addl
lea
lea
jbe
inc
sbb
sub
pop
lret
insb
adc
in
pop
dec
mov
xor
mov
xchg
jnp
call
sub
lea
sarl
or
mov
popl
mov
sbb
xchg
test
xor
mov
js
lock
jl
and
jp
cmpsb
mov
mov
ret
cs
stos
push
vpshaw
scas
dec
bound
loopne
jns
push
mov
cmp
pop
cmp
sbb
imul
dec
test
fcoms
lahf
jno
inc
xchg
lahf
sbb
or
sub
outsl
push
or
ljmp
inc
shr
mov
cmp
lock
mov
subl
pop
or
aad
and
sbb
loop
stos
inc
mov
add
es
or
cmpsb
mov
cmp
scas
cld
cmpsl
popf
push
pusha
jne
sti
test
cmpsb
adc
xor
cmc
insb
xchg
decl
sbb
out
push
cmp
out
stos
add
mov
xchg
repnz
stos
xchg
adc
xchg
sub
push
test
jge
jle
mov
add
cltd
je
fcomip
imul
add
dec
dec
inc
ljmp
or
cmp
cs
push
loope
mov
dec
or
dec
mov
mov
test
xchg
mov
loope
xchg
xor
inc
mov
jge
fsubr
jle
dec
imul
adc
test
pop
loope
or
mov
xchg
gs
add
mov
cli
cld
into
xor
jno
rdpmc
std
lcall
in
in
cmc
pop
std
or
add
mov
test
mov
popf
test
hlt
mov
jle
jmp
rcll
add
bound
shrb
mov
lcall
jecxz
mov
into
cmpsl
adc
inc
dec
and
js
outsb
sub
xchg
dec
fistl
or
insb
add
mov
sarl
outsb
icebp
add
out
leave
repz
cld
add
inc
adc
add
inc
and
lods
out
mov
es
imul
stc
push
add
out
jns
or
das
imul
repz
jnp
in
lea
rclb
push
push
xchg
lahf
or
push
cld
mov
movsl
and
popa
mov
movsb
stos
shll
outsb
pop
cmc
in
lods
ja
sbb
subl
and
popf
jns
bound
inc
inc
jns
xchg
or
les
pop
adc
add
shrb
pop
mov
pop
mov
in
cld
lds
mov
in
adc
adc
loope
lds
rcpps
jmp
fucomip
adc
je
xchg
cmp
repz
pop
sbb
and
cltd
push
push
aad
jbe
in
call
mov
adc
add
in
pop
cmp
mov
scas
jns
jo
ss
movsl
dec
shrl
cmp
fwait
adc
push
ret
inc
push
mov
pushf
loop
mov
or
sbb
leave
mov
fnsave
mov
stos
fsubs
and
addb
or
add
loop
sbbb
or
in
rcll
incb
pop
jae
leave
mov
mov
in
test
pop
cmp
and
test
fidivrs
andl
jle
sbb
popf
inc
push
pop
scas
and
les
push
xor
mov
notb
stos
dec
mov
bndldx
xchg
add
and
adc
push
push
inc
outsb
mov
sub
rol
dec
xchg
pop
cld
sarl
notb
ret
das
and
dec
mov
jae
mov
sub
fs
pop
mov
push
push
sbb
inc
mov
mov
push
movsb
stos
cmp
ficoml
aam
loop
fwait
mov
adc
rol
sbb
mov
sbbb
fnstcw
jae
mov
test
inc
addr16
cmp
lods
fsubrs
push
cmp
std
repz
or
xchg
test
mov
js
mov
in
pusha
ret
xor
inc
push
cmpb
test
lock
mov
lcall
es
fdivl
pop
adc
stc
in
push
and
ljmp
cwtl
cmp
mov
xchg
adc
pop
push
mov
push
sub
xchg
insl
shl
outsb
inc
stos
xchg
push
lods
call
or
pop
call
mov
std
jno
mov
call
pop
add
lcall
adc
pushf
inc
lret
stc
xchg
aam
adcb
mov
inc
adc
inc
ficomps
popf
out
cmp
dec
rcrb
mov
jecxz
cs
cmpb
ret
cmp
mov
pop
es
cld
push
cmc
divb
je
push
mov
insl
adc
add
sub
xor
sbb
pop
xorb
mov
daa
push
shrb
imul
repz
cmp
scas
dec
mov
fs
aad
scas
in
pop
jne
adc
into
enter
ja
push
sbb
mov
idivl
and
pop
adc
jae
mov
mov
cmpb
inc
scas
scas
out
adc
adcb
mov
shll
cwtl
divl
sbb
sti
shrl
push
adc
adc
mov
daa
bound
mov
sti
movsb
and
inc
cmpsl
pop
and
push
jmp
xor
js
stos
insb
pop
sbb
mov
inc
shrb
mov
inc
mov
cmp
or
jbe
in
fstpt
sub
out
xchg
popf
jmp
cli
aaa
mov
mov
mov
fistl
adc
sub
mov
lds
push
test
stos
mov
pushf
push
push
imul
insl
xor
inc
push
lods
dec
or
add
sarl
jmp
addl
sti
mov
sar
cmp
jb
mov
inc
add
xor
out
mov
add
por
xor
add
cs
fdivrl
adc
cmp
pusha
clc
cmp
add
mov
pusha
mov
jle
sbb
push
sub
and
cmp
pop
pop
add
mov
test
sbb
lods
pop
fcoml
scas
bswap
lahf
scas
mov
sbb
icebp
daa
das
adc
xchg
mov
popa
fwait
aam
sbbb
movsb
adc
jecxz
jne
mov
cmp
test
add
aaa
or
sub
xorb
jmp
jg
mov
push
outsl
loop
xor
out
mov
negb
mov
sbbl
adc
cltd
call
pop
repz
dec
jge
pushf
jnp
out
popf
mov
and
inc
sbb
xchg
data16
and
mov
ret
inc
mov
scas
or
mov
xor
outsb
cmp
inc
ds
hlt
adc
shrl
mov
repnz
in
mov
mov
inc
pop
enter
scas
into
mov
ljmp
inc
adc
add
cmpsb
jmp
jl
push
aas
mov
cmp
in
jmp
jp
jp
and
insb
into
das
repnz
scas
into
mov
pop
call
fcmovbe
dec
or
cltd
cmpsl
enter
outsb
js
lock
inc
cli
stc
pop
push
test
and
stos
pop
mov
in
pushf
jecxz
jbe
ret
stc
push
gs
inc
sub
insl
sub
add
cmp
jb
mov
dec
insb
mov
aad
std
dec
negb
xchg
notl
pop
mov
xor
push
lret
aam
ja
std
into
ljmp
and
xlat
xchg
adc
rolb
gs
icebp
add
stos
lcall
scas
bound
lods
lret
or
js
mov
subl
mov
inc
lods
in
mov
rcrb
rcr
sbb
clc
inc
mov
aaa
mov
or
cs
adc
or
imul
lahf
push
lcall
ja
cmc
sbb
lods
in
xor
mov
and
ret
pop
pop
fdivs
cmp
int
inc
sahf
aas
aas
add
pop
xor
out
std
daa
fcmovne
cltd
sub
push
mov
xchg
decb
jge
inc
stc
push
bound
and
sahf
adc
mov
ja
dec
movsb
push
push
pusha
mov
enter
or
add
add
inc
pushf
fnstsw
or
and
js
out
loope
fcoms
lahf
shll
inc
push
jge
cmp
add
gs
push
push
pop
jo
sbb
frstor
jmp
subl
dec
xchg
aas
jns
pop
xchg
mov
push
fidivrs
ja
addb
pop
enter
in
bnd
mov
push
nop
in
nop
pop
outsb
pop
push
dec
cmp
sarb
aas
lret
sbb
inc
fnstcw
push
add
mov
and
shll
into
int
mov
push
mov
das
jo
mov
sbb
sbb
in
stc
push
mov
cld
ds
cmp
inc
sbb
inc
lods
in
dec
and
fdivl
loopne
fisubl
fldcw
int
in
lods
fisubs
cmp
jbe
add
fidivs
adc
stos
and
push
outsl
jg
mov
cmp
ljmp
mov
movsl
sub
sbb
xlat
cmp
ja
push
adc
mov
xchg
and
pop
pop
pop
sub
sbb
mov
dec
ljmp
push
pop
roll
add
pop
shll
push
pop
aam
sub
stc
mov
mov
cld
insl
sahf
and
xor
int
mov
jno
dec
mov
cmp
lods
sbb
out
sub
movl
xchg
cmp
xchg
dec
divb
sbb
inc
lods
iret
imul
sahf
fdivrl
cmp
int3
in
imul
cmp
insb
mov
jp
fs
arpl
sub
pop
mov
enter
xor
idiv
jo
inc
inc
mov
jnp
dec
std
push
rcrl
icebp
mov
shrb
cmp
fiadds
push
and
push
test
mov
daa
int
pop
adc
aaa
xchg
and
mul
xor
hlt
in
xchg
xor
push
dec
arpl
leave
mov
data16
mov
daa
cmp
sbb
mov
jmp
adc
sbb
mov
test
add
mov
pop
dec
dec
sti
sub
push
xchg
cmpsl
dec
dec
rorl
arpl
pop
adc
fucomp
repnz
lds
gs
pop
mov
roll
fcoms
fistpl
out
insl
jg
fiadds
pop
sub
jnp
clc
movsb
pop
sub
sbb
pop
mov
and
mov
fisubl
hlt
out
adc
fmulp
in
pusha
in
cltd
into
xchg
das
std
lret
pusha
adc
sub
out
mov
sti
add
fwait
xchg
mov
loop
fistl
jp
sarb
out
mov
push
mov
hlt
pop
sti
inc
outsl
push
dec
or
leave
xor
movsb
bound
call
sub
push
or
std
pop
sbb
clc
cmp
repz
pop
adc
xor
das
sbb
mov
cmp
test
nop
loop
mov
lods
inc
mov
mov
mov
stos
sbb
adc
ret
mov
stc
push
lahf
cltd
cmp
xchg
repnz
sbb
sub
cs
dec
xor
or
cmpl
inc
or
xchg
sbb
fsubs
or
outsl
fstp
mov
jge
pop
xor
jmp
dec
lock
loope
jno
jae
pop
call
dec
pop
inc
xchg
lock
jecxz
xchg
pop
pushf
xor
sub
cmp
lret
ret
mov
or
int
cld
mov
pop
xchg
xchg
int
or
lea
inc
hlt
fwait
cmc
xchg
pshufw
adc
and
add
clc
sub
mov
and
jns
jg
jb
jo
adc
mov
sti
mov
mov
in
mov
jns
sub
sub
cmp
sub
inc
mov
push
mov
mov
divb
cmpsl
into
push
inc
mov
add
cmp
push
sub
subl
fwait
std
adc
pop
enter
addl
jle
repz
or
shlb
jge
rcrb
mov
mov
fadd
xchg
cmp
or
xchg
addl
andb
repz
es
or
sar
lret
xlat
mov
sti
adc
sarl
loopew
pop
push
mov
inc
sub
loope
push
mov
pop
bnd
push
jno
lods
cwtl
mov
adc
repnz
xchg
or
inc
mov
mov
mov
dec
sbb
mov
xor
xchg
add
out
pusha
add
adc
les
mov
xlat
mov
mov
popa
nop
mov
negl
mov
sarb
pop
pop
jb
repz
fisttpll
fistpl
es
arpl
dec
mov
jl
adc
outsb
cld
jno
call
push
dec
mov
test
cmp
add
rolb
lret
mov
mov
jae
push
clc
cmp
jg
rorb
fidivl
mov
dec
and
jns
and
test
and
repnz
or
mov
xlat
loop
mov
mov
push
xor
push
sub
add
scas
jns
fs
loop,pn
mov
xchg
push
iret
in
fcomi
pop
int
or
mov
inc
in
rorl
add
pushl
mov
cmp
mov
mov
mov
scas
bound
jns
adc
jbe
sbb
inc
sub
mov
ds
mov
fdiv
cld
data16
mov
jmp
ret
adc
cltd
mov
dec
jns
insb
ss
push
mov
lock
adc
adcl
sbb
bound
sbb
push
cld
pop
xchg
lods
out
mov
dec
cmp
inc
mov
rolb
pop
add
adc
aam
adc
xchg
jp
push
sbb
mov
mov
ljmp
add
mov
xchg
push
inc
lock
dec
sbb
push
mov
inc
scas
or
cmp
push
lds
push
repz
call
inc
add
sbb
xchg
xor
sti
cmp
repz
rolb
cmp
dec
xchg
pop
push
or
sarb
das
sub
gs
fisubrs
add
mov
imul
sahf
inc
cmp
lea
push
aaa
stc
adc
sub
rorb
test
aam
mov
das
cmp
cmc
push
incb
popf
in
push
sbb
into
lods
ficoml
cmp
pop
dec
mov
inc
test
test
mov
in
cmp
stos
in
inc
roll
adc
lods
mov
xor
dec
or
and
icebp
adcb
cmp
ret
xchg
pop
dec
inc
jg
mov
fbstp
cs
movsl
test
pop
add
push
xor
jg
inc
jmp
popa
sbb
mov
add
in
in
fmul
iret
add
ret
xchg
inc
dec
sub
stc
cltd
push
jno
push
push
mov
inc
je
pop
cmp
jae
pop
fs
dec
out
out
bound
rcl
sub
push
adc
divl
stos
insl
xchg
rcll
xchg
inc
cmp
ss
aad
lods
dec
in
or
leave
xchg
add
add
ret
xchg
jb
int3
mov
loopne
add
inc
shl
add
int3
inc
call
es
and
xchg
in
lock
sti
out
enter
inc
inc
sar
and
f2xm1
insl
mov
mov
dec
mov
sbb
hlt
lcall
sbb
adc
adc
and
pop
push
repz
lcall
add
mov
loopne
and
or
fisubrl
pop
add
aas
sbb
jecxz
pop
and
dec
cmpsl
mov
add
in
mov
sbb
cmp
mov
jecxz
mov
mov
aad
imul
mov
sbb
clc
arpl
outsb
movsl
xlat
pop
subl
adc
jae
aas
and
xchg
leave
fs
push
sub
mov
pop
add
inc
xchg
push
sub
std
mov
lret
or
mov
imul
add
cmpsb
dec
flds
mov
out
sbbb
cmc
sbb
sub
sub
imul
jl
jb
inc
jns
push
add
movsl
and
test
jg
fldenv
mov
pushl
sar
jg
ja
mov
les
sub
push
je
sbb
adc
test
cmpsb
and
xor
push
hlt
sub
outsb
fiaddl
pop
mov
jle
sbb
and
shl
xor
xchg
inc
jl
xchg
jl
inc
lret
inc
cltd
pushf
fsubs
loop
adc
inc
insb
cmp
out
fcomi
or
jmp
lcall
andl
sub
push
in
sub
lcall
pop
rcl
dec
sub
shrb
icebp
fwait
scas
xlat
addr16
add
out
in
mov
push
jae
adc
outsb
inc
push
rcll
pushf
into
adc
or
and
add
push
cmp
shll
insl
or
pop
das
jle
jecxz
shl
iret
mov
repz
push
xchg
or
inc
sahf
or
jno
jp
jmp
std
sbb
lods
mov
and
add
aas
ja
out
xor
cmp
loop
jle
or
sub
stos
inc
jl
jns
movsl
fistps
ss
xchg
mov
xchg
cld
daa
push
dec
lret
fcmovnbe
in
mov
movsb
shrl
fwait
mov
xor
or
inc
test
insb
xor
jns
lea
mov
pop
lods
add
orl
js
out
jp
and
popf
lods
and
int
sti
out
jge
jne
inc
and
mov
orl
add
movsl
fildl
mov
test
cmpsb
mov
xchg
dec
sub
xlat
and
pop
mov
jecxz
out
and
xchg
mov
xchg
into
pop
inc
mov
dec
jg
bound
addr16
cmp
cli
xor
js
and
nop
push
lods
shrb
movsl
push
pushf
out
mov
jb
pop
cmpsb
repnz
das
mov
pop
mov
jmp
insl
hlt
and
and
stos
outsb
mov
movsb
test
hlt
out
inc
inc
arpl
fldcw
sti
iret
fstl
loop
gs
arpl
push
mov
outsl
mov
push
xor
dec
jae
pop
jne
jbe
stos
or
insb
or
fiadds
xchg
pop
and
fisubs
in
mov
push
add
in
lahf
cmp
jns
lcall
or
jbe
sub
cmp
icebp
popa
mov
cmp
mov
push
icebp
xchg
in
sub
push
mov
or
shll
out
mov
lds
mov
insb
and
mov
and
push
dec
in
out
mov
or
pop
dec
shl
mov
ja
jnp
jno
push
xor
pusha
mov
or
stc
enter
xorb
iret
or
fisttps
inc
shr
xchg
inc
cmp
cmpsl
xor
bound
inc
xorl
push
movsl
outsl
out
pop
push
lcall
mov
xor
xchg
dec
dec
adc
and
loop
test
inc
iret
iret
add
or
sbb
lret
icebp
inc
or
adc
mov
inc
jmp
in
and
jle
mov
mov
repz
ret
xchg
xchg
das
lea
lods
call
ds
inc
adcl
mov
cld
pop
sbb
or
stos
fisubl
xor
xchg
test
pinsrw
inc
das
leave
mov
imul
and
leave
faddp
xchg
and
sbb
add
xor
push
test
xchg
lahf
or
push
push
pop
scas
aam
jge
cli
xchg
in
mov
loop
clc
mov
push
les
ja
cmp
aad
dec
cmpb
vmovdqu
pop
mov
push
jmp
xchg
jno
insl
jg
mov
dec
jbe
into
pop
push
jbe
fs
mov
inc
sti
or
and
test
xchg
mov
jbe
in
add
or
movsl
leave
lcall
jno
or
shr
sub
and
mov
mov
mov
mov
pop
jecxz
loopne
clc
dec
inc
into
outsl
sbb
scas
fldl
cld
adc
or
cltd
dec
cmp
add
mov
xor
aam
jp
fmull
data16
mov
mov
pop
mov
repnz
xor
cmpsb
cmpsb
test
xor
and
push
push
inc
dec
pop
and
inc
cli
and
lcall
iret
push
xor
imul
stc
inc
mov
sbb
jnp
push
and
ljmp
cld
cli
xchg
pusha
mov
jg
xchg
out
das
lret
rclb
inc
xchg
xor
dec
in
or
mov
jno
pop
mov
outsb
ret
mov
push
stos
inc
push
sub
pop
cmpsb
inc
scas
lcall
lret
or
jae
out
sarl
int3
popf
jge
inc
mov
in
jp
test
mov
in
fsubrl
adc
lods
or
xchg
jns
mov
sub
imul
or
sbb
pop
lahf
pop
pop
add
add
lahf
addr16
push
into
popa
call
sub
pop
pop
pop
rolb
mov
pop
sbb
out
or
cmpb
loopne
jnp
mov
cmp
xchg
push
lock
ja
rcrl
das
aaa
je
mov
in
inc
adc
dec
cmpsb
mov
sub
out
jge
js
sub
daa
add
sbb
jmp
xor
dec
aas
movsb
loope
stos
xor
and
add
pop
dec
dec
adc
sbb
fmul
mov
jp
mov
dec
dec
push
inc
jmp
push
mov
xlat
ret
loopne
adc
ret
or
int
mov
mov
dec
mov
hlt
sub
push
rclb
pop
mov
cmp
sahf
movl
mov
ret
xchg
insb
dec
fs
test
and
add
and
lods
inc
pop
insl
jmp
out
sub
pop
inc
inc
xchg
push
lods
ja
pushf
mov
add
cmc
jg
dec
aaa
dec
sub
push
adc
xor
dec
inc
inc
jo
sub
addl
inc
popf
aas
fbld
push
inc
jp
xor
fisubrs
in
adc
jae
pop
mov
ljmp
sub
jo
lods
or
iret
ret
xchg
sbb
cmp
cmovp
pop
inc
sbb
sbb
inc
push
stc
pop
and
sub
lahf
rol
xor
test
repz
loope
xor
push
out
inc
jmp
dec
test
jmp
movsb
notb
lahf
or
push
cmpsb
outsl
int
lea
outsb
ss
enter
pop
mov
sbb
push
pusha
frstor
cltd
and
fimuls
inc
in
add
add
jmp
inc
arpl
and
sub
push
push
int
cmc
fldt
mov
in
mov
mov
in
push
push
push
or
outsb
jmp
xlat
mov
push
shrb
push
sbb
lahf
arpl
orl
cmp
repnz
pop
cmp
pop
jmp
adc
add
fmul
cltd
popf
sahf
scas
call
sbb
sbb
xor
std
jb
aad
notb
push
pop
dec
mov
sbbb
lret
shll
leave
pop
jl
repnz
sarb
sub
mov
lods
popa
mov
ret
xchg
and
or
mov
outsb
fstl
pop
data16
sub
add
cmp
mov
mov
xchg
dec
and
sahf
push
popf
mov
lock
cmp
lock
push
and
roll
icebp
cmp
mov
and
xchg
inc
popf
leave
sub
cli
and
jno
pop
in
or
mov
and
div
fistps
push
icebp
push
pop
int
enter
add
insl
in
sbb
add
push
and
add
dec
inc
mov
push
les
aas
arpl
fistpll
sbb
movsl
ja
xchg
rorl
cmp
rcrb
hlt
dec
dec
into
ja
test
jge
add
sbb
mov
or
lcall
iret
repnz
xlat
pushf
int3
test
ljmp
add
std
fiaddl
aam
jmp
and
repnz
int3
jne
jno
js
popa
xor
mov
mov
mov
pop
daa
nop
push
out
mov
jns
pop
push
adc
ljmp
lret
push
hlt
rcrb
outsl
sub
mov
xchg
xchg
mov
inc
ret
sbb
js
popf
mov
mov
test
sub
adc
scas
test
repz
mov
push
cwtl
sub
shrb
out
mov
repz
scas
jo
jp
sub
and
test
push
aaa
lahf
sbb
outsb
sarb
xchg
pop
rolb
mov
push
test
dec
into
adc
sub
scas
jo
cmp
xlat
or
pop
xchg
adc
aam
into
pop
jg
adc
add
ficoml
mov
mov
pop
fwait
pop
or
fadd
dec
movb
xor
jno
in
push
lret
inc
les
scas
mov
sub
jge
test
rcr
rcrb
mov
mov
xor
pop
jb
jb
pop
int3
mov
mov
xchg
loopne
add
xor
inc
out
mov
pushf
push
in
lcall
lahf
stos
and
xchg
inc
or
sbb
and
add
sbb
fisubl
pop
fs
xchg
into
aad
loop
mov
pop
orl
mov
shrl
and
jmp
cmpsb
push
sub
xlat
jnp
mov
xor
pop
jnp
mov
out
xor
in
mov
pop
mov
cmp
cmp
and
ret
mov
mov
push
or
idivl
dec
cmp
jno
xor
xor
pop
arpl
aam
fbld
jge
xchg
cmp
arpl
pop
ja
aas
imul
push
or
inc
negb
xchg
push
scas
cli
push
add
mov
xlat
xor
insb
mov
aas
hlt
xchg
cmp
movsl
cmp
and
xchg
cmp
dec
popl
mov
mov
and
dec
cli
xchg
pop
ss
push
sbb
push
push
jmp
out
test
mov
add
adc
sub
push
andb
sbb
pushf
push
sahf
cmc
test
cmpsl
sti
lods
or
ds
inc
fcmove
sbb
and
cmp
xchg
dec
dec
mov
rolb
jo
mov
push
mov
daa
clc
ret
test
fbstp
fldt
les
lods
add
xchg
loopne
rcrl
sti
or
adc
sbb
inc
mov
and
jae
mov
sbb
imul
adc
push
xor
add
xor
adc
pop
orl
sbb
jle
cmp
push
das
jns
dec
push
ret
repz
cmpsb
cltd
jle
or
out
repnz
and
or
ret
ljmp
push
pop
push
mov
jmp
out
cmpsb
fadd
add
ds
push
daa
iret
xchg
xchg
inc
and
xor
vmovntdq
sub
cmp
insb
clc
arpl
push
cmp
pop
out
outsl
inc
loope
cmpsb
jne
push
imul
cs
mov
lahf
xchg
push
or
cmp
mov
pop
mov
jle
sbb
add
xor
mov
fdivl
out
cmp
cmp
int
pop
fistpll
mov
xchg
jno
testb
das
repz
enter
mov
push
inc
sub
sub
cmp
pop
pop
pop
cmp
ret
decl
cmpsb
insb
lds
mov
pushf
cs
jbe
dec
push
pop
jo
xchg
ds
xchg
aad
sub
fisubs
mov
movsb
or
roll
test
js
jne
sub
jp
bound
testl
mov
inc
xor
shll
orl
es
pop
lfs
pop
or
mov
aad
adc
mov
xor
loopne
xor
mov
nop
cltd
int3
scas
lock
jne
test
sbb
mov
popa
ficompl
pusha
push
in
or
enter
push
leave
inc
jns
sbb
outsl
nop
mov
jg
cmc
je
xchg
popa
mov
lds
dec
jecxz
into
arpl
dec
xchg
inc
cmp
jb
testb
call
dec
mov
sahf
jbe
cmp
add
mov
daa
xor
je
add
pop
jle
jnp
inc
test
int3
leave
je
out
and
pop
cli
sub
jl
xchg
pop
cwtl
pusha
pop
sub
in
xchg
aas
xchg
add
mov
inc
push
pop
mov
sbbl
cmc
mov
push
sti
jg
cwtl
repz
or
push
jns
enter
sbb
js
int
push
shlb
cmp
fcmovnbe
and
pushf
jl
dec
push
in
cmpsl
jbe
movsb
xchg
add
dec
imul
rorl
lods
mov
dec
jb
test
rorl
nop
lea
ja
sbb
lret
cltd
adc
in
mov
outsb
iret
leave
fnstsw
dec
dec
ss
jo
cmp
arpl
jae
clc
mov
push
test
push
cmc
jge
xchg
stc
or
clc
lock
cmp
imul
loopne
test
jl
sub
pop
shrb
mov
sbb
jp
fisttpl
imul
fimull
fcompl
sub
aas
imul
or
mov
inc
jge
sub
jno
loope
lds
cmp
int
sbb
imul
outsb
push
enter
mov
sti
push
movsb
popf
mov
mov
fnstsw
mov
addr16
xor
sub
outsl
ret
scas
hlt
xor
punpckhdq
popf
jno
push
jge
bound
mov
cmpl
jae
push
cmp
or
test
xchg
pop
cs
jbe
xor
pop
lods
out
cmp
clc
xor
mov
xor
std
sub
int3
lea
stos
cmp
xchg
cmp
sarb
stos
ficomps
dec
adc
inc
dec
lahf
cmp
pop
aad
dec
inc
imul
test
xchg
mov
add
repnz
or
xchg
outsl
in
xor
lret
mov
inc
push
xor
int
hlt
and
cmp
scas
adc
xor
flds
add
enter
icebp
int
test
jmp
out
in
ret
gs
mov
mov
pop
mov
mov
and
jae,pt
and
push
rcl
push
xor
rclb
or
adc
sub
jmp
sti
mov
rolb
xor
mov
repz
jmp
pop
xor
sub
sbb
sub
cmp
int
adc
adc
cmp
add
push
sbb
cmc
xor
mov
mov
fisttps
fimuls
arpl
mov
pop
adcl
and
test
add
fsubl
dec
jne
mov
lea
adc
jne
loopne
fstps
andb
rcrb
mov
sbb
clc
data16
in
cmp
inc
aam
sub
stos
icebp
dec
add
enter
ja
push
sbbl
mov
mov
mov
pop
dec
les
dec
adc
insl
mov
das
sbb
mov
adc
jnp
cmp
sub
dec
adc
and
es
hlt
cs
int
or
xor
or
test
inc
aam
insl
cmc
and
subl
push
clc
jnp
je
loope
mov
add
loopne
jecxz
das
fcmovu
test
in
outsb
xchg
xchg
adc
lcall
mov
shll
fldcw
sub
xchg
sbb
push
push
aad
push
cmc
test
pop
cmpsb
adc
outsb
mov
jl
xor
cmpsb
mov
or
cmp
fsub
push
arpl
cs
std
cs
or
fidivrl
push
sbb
std
pop
or
add
pop
cmp
pop
and
flds
sub
test
jmp
test
xor
jb
pcmpeqw
fimuls
loopne
sbb
pop
lods
xchg
xor
ds
rol
mov
imul
cmpsl
sub
sbb
xchg
fadds
sti
orl
ret
pop
aas
test
inc
dec
ret
xor
inc
cmp
push
push
add
sub
pop
subb
mov
int3
mov
sbb
out
repnz
stc
fdivrs
push
clc
gs
push
xchg
pop
mov
push
cmp
aas
xor
in
repnz
push
xor
loopne
xor
sub
arpl
lea
push
jbe
sub
cmpsl
clc
xor
pop
out
stc
fisubrs
outsb
jo
inc
sar
imul
and
cmpsb
rcl
adcl
ljmp
mov
xchg
mov
mov
rclb
cld
stos
ja
sub
out
adc
pop
and
and
or
mov
jle
jge
mov
fcoms
pop
incb
xchg
imul
pop
stc
shr
sbb
cmp
jbe
pop
movsl
in
and
in
ja
xor
into
pop
adc
mov
cmp
fisubrs
movsb
dec
jno
xchg
arpl
divb
mov
adc
or
push
lahf
jge
lock
jg
or
shl
sti
js
sub
test
dec
in
xor
and
insl
roll
jmp
enter
pop
in
jle
push
or
add
xchg
cmpsb
cmc
or
and
mov
fs
or
loop
dec
lock
jg
cmp
pop
mov
or
cld
addr16
mov
jb
adc
cmp
mov
jae
ja
cli
adc
in
mov
cwtl
push
sbb
add
popf
and
pop
sub
test
notl
scas
out
into
adc
sub
jno
orb
mov
push
or
sub
push
insl
mov
shr
dec
scas
jmp
sarb
push
push
jmp
add
cmp
adc
les
cltd
xchg
mov
jne
les
iret
and
orl
js
xlat
push
ja
pusha
shl
or
fcomps
xchg
jecxz
jo
pop
sub
ja
xchg
popa
into
or
and
cmp
add
add
rorb
lcall
lods
dec
xchg
aas
inc
pop
in
jne
pushf
test
mov
sti
pop
adc
xor
fnstenv
adc
mov
cli
jmp
xor
adc
push
fisttpl
xchg
and
dec
dec
add
das
or
cmp
enter
jb
ljmp
xchg
dec
or
mov
loope
lret
mov
or
cwtl
out
popa
rclb
add
popa
ljmp
cld
cmp
sbb
add
popf
loope
inc
lods
push
fcomip
sarb
aam
popf
jbe
iret
daa
out
leave
cltd
mov
xchg
inc
aas
add
fdivl
addr16
mov
add
daa
xchg
xor
jnp
rolb
fsubs
sti
inc
dec
push
pop
push
fsub
ret
jb
dec
pop
repnz
imul
xchg
mov
jl
mov
mov
cmp
pop
pop
rol
negl
ret
sbb
aam
cmp
gs
imul
xchg
lahf
lret
mov
xchg
stos
add
in
pop
inc
in
cmp
mov
pusha
inc
mov
mov
xchg
pop
sbb
mov
mov
and
pusha
jb
push
mov
xchg
pop
popf
mov
push
sub
in
inc
pushf
das
pop
imul
or
jmp
popf
insl
sti
test
ljmp
jns
cmpsl
clc
inc
or
outsl
fistpl
xor
jge,pn
shlb
insb
jmp
or
insb
loopne
out
mov
or
lcall
scas
fldcw
mov
sbb
push
daa
in
in
das
icebp
loop
loop
int
jns
mov
dec
sbb
cmc
mov
lret
and
and
push
es
das
repnz
pop
mov
out
jns
aad
pop
sti
sub
dec
push
js
or
inc
add
cmp
lods
jne
mov
and
lock
xor
mov
and
imull
ljmp
in
sarl
adc
push
inc
lds
cmpsl
dec
roll
ss
xor
in
ret
lds
mov
adcb
push
lahf
bound
cmp
sbb
xor
lahf
loop
lret
cmp
add
inc
pop
cmp
fs
scas
fnstcw
gs
xchg
sahf
pop
out
dec
imul
imul
aaa
dec
dec
cmpsl
stos
fwait
mov
int
popa
or
scas
dec
cli
adc
dec
inc
add
pushw
jecxz
fwait
jae
into
inc
push
sub
inc
cmp
mov
in
mov
out
push
dec
mov
sbb
cmp
ljmp
and
or
sub
sbb
nop
mov
sti
mov
sub
not
sbb
mov
cs
fildll
ret
mov
jae
add
xchg
inc
cmp
cltd
fwait
and
push
mov
mov
korw
xchg
out
inc
out
xor
loope
mov
ljmp
xlat
inc
dec
cwtl
cmp
inc
xchg
inc
sbb
adc
into
pop
sbb
cmp
adc
aaa
jmp
xchg
movsl
sbb
jnp
fdiv
xchg
popf
mov
sbb
pop
jmp
push
stc
rol
pop
movsb
push
dec
test
data16
in
xor
pop
shrl
inc
lret
nop
insb
lret
adc
in
and
or
sub
xor
inc
pop
xchg
loope,pn
mov
mov
and
xchg
addb
mov
jle
outsl
mov
push
fcmovne
adc
xchg
jo
jmp
sub
inc
cld
dec
adc
jno
shll
add
adc
jge
dec
add
out
jns
push
mov
int
dec
movsb
mov
pop
rclb
arpl
test
cmp
movsb
dec
xchg
pop
lea
sub
sti
or
add
mov
mov
mov
jne
insl
fcmovnu
je
movsl
shll
xchg
or
and
xor
jg
out
add
jb
loop
pop
cltd
or
js
add
xor
pop
sub
mov
xor
pop
xor
ret
stos
sub
leave
add
aas
sub
mov
or
push
dec
je
mov
add
cltd
stc
in
testb
jp
mov
int3
scas
pushf
mov
push
cmpl
sbb
out
cmpsl
cmp
adc
and
rcll
mov
aam
clc
jle
dec
sbb
cs
inc
inc
mov
rorb
movl
mov
inc
push
pop
sbb
push
cmp
stc
call
lock
cltd
pop
out
lea
js
xchg
xor
cmp
sarl
aas
xchg
jnp
jecxz
pop
mov
dec
aam
jp
pushf
int
in
mov
dec
pop
pop
addr16
sahf
pushf
scas
in
xor
jge
stc
xor
xor
or
push
mov
pop
push
add
std
adcl
adc
mov
fsubp
repz
jnp
add
jmp
popa
imul
cltd
pop
cmp
inc
das
jp
lret
scas
mov
mov
pop
xchg
out
xor
cmp
and
sbb
in
adc
iret
or
mov
cmp
shl
pop
or
mov
dec
cmp
and
push
pop
adc
das
roll
xchg
dec
pop
sbb
imul
in
fldt
mov
out
adc
fnstsw
int
jbe
mov
iret
push
ds
xchg
imul
mov
in
jl
mov
insl
mov
jge
arpl
cmc
inc
or
inc
xchg
adc
xlat
in
add
test
mov
xor
outsl
mov
data16
pop
and
xchg
sub
pop
mov
je
insb
pushf
icebp
and
mov
or
aam
xor
xor
add
cli
adc
arpl
ret
repz
sti
lcall
and
in
sahf
push
clc
or
mov
jle
dec
xchg
lods
aas
lea
out
test
fld
vandnps
ret
ljmp
in
adc
mov
negb
jg
and
and
xchg
cs
fistl
aam
in
or
es
clc
xchg
fadd
cs
shlb
popf
outsl
xchg
mov
cmova
cmp
mov
repz
mov
xchg
fsubrl
inc
xor
xor
je
insb
hlt
inc
dec
push
dec
adc
mov
data16
movsl
add
jle
mov
mov
xor
pushf
lods
lret
fcom
aam
push
push
fdiv
aad
push
jg
lcall
ljmp
inc
int
int
sbb
es
push
push
jae
sub
or
in
jae
jno
cmp
cmp
lods
xlat
ljmp
fcomps
adc
xchg
inc
mov
loopne
add
pop
add
xor
sub
sub
insb
jecxz
mov
inc
popf
je
jmp
int3
mov
xor
test
dec
jno
out
or
adcb
pop
push
lds
lods
lods
daa
sbb
xor
fmulp
stos
subl
jne
push
mov
and
js
pop
adc
add
mov
dec
and
pop
shlb
je
int3
adc
test
lods
mov
fistps
mov
inc
enter
subb
inc
sbb
push
jo
add
iret
mov
aaa
xlat
cli
xchg
push
pop
jns
outsb
cltd
mov
lods
icebp
mov
imul
xor
mov
xlat
xchg
mov
xchg
add
push
push
movsl
loope
out
mov
fstps
jnp
mov
xlat
inc
sub
fcmovnbe
sbb
cs
jne
dec
sub
pop
mov
mov
lds
push
movsl
xchg
dec
call
sub
sub
popf
daa
mov
cmp
jb
cwtl
mov
pop
fbld
aaa
in
mov
jae
xchg
bound
and
pop
inc
push
mov
or
test
xchg
ja
mov
fiadds
inc
aam
dec
pop
rol
fxch
sub
cmpsl
mov
and
lds
mov
push
test
popl
loop
out
jae
xchg
mov
idivb
outsl
mov
push
int
es
dec
jmp
xchg
and
aad
ljmp
pop
inc
test
ja
inc
popa
push
adc
test
out
iret
pop
jl
sarb
adc
popa
and
xchg
push
sbb
jle
mov
stos
mov
sbb
and
out
outsb
push
mov
arpl
mov
mov
jl
popf
jno
lea
lret
stc
adcb
out
es
dec
add
jle
out
and
rcll
stos
ljmp
push
lahf
pop
aaa
lea
jae
pop
arpl
movsb
xor
aas
push
das
andb
dec
push
ss
ficompl
push
std
xlat
cvtdq2ps
sbb
gs
cs
mov
ds
ljmp
inc
mov
dec
movsb
cltd
dec
xlat
jl
rcl
push
sbb
xchg
out
or
mov
pop
mov
std
pop
xchg
add
lods
sbb
roll
mov
add
mov
cmp
dec
or
push
out
jge
outsb
sub
cmpb
mov
je
sti
mov
scas
lock
or
shl
lds
cmp
les
push
xor
xor
lret
nop
subl
dec
lret
add
pop
adc
ret
scas
outsl
pop
std
sub
or
lds
shr
jb
pop
inc
jae
cmp
jg
pop
jg
ljmp
sbb
inc
mov
stos
pop
cltd
ss
pop
adc
enter
scas
sub
mov
icebp
mov
pop
loopne
inc
jbe
add
ret
mov
sbb
mov
mov
fdivrs
rcl
xchg
pusha
inc
aaa
fwait
sarb
out
and
fisubrs
jecxz
xchg
aaa
out
sub
push
in
mov
mov
repz
pop
push
or
popa
jnp
call
scas
enter
loop
subb
push
mov
jno
jle
inc
push
lods
leave
or
fs
pop
add
cwtl
adc
out
ret
movb
mov
inc
dec
adc
dec
test
icebp
and
fs
jmp
shr
lcall
shrb
jns
pop
fsubr
xbegin
jg
inc
lds
lahf
sub
dec
loope
pop
cmp
pop
fs
cmp
xchg
test
loope
mov
push
aad
jmp
pop
cld
nop
cmp
jmp
rorl
fwait
lods
sbb
inc
mov
and
or
subl
jae
pop
test
mov
mov
jns
cmp
ret
sbb
lods
andl
test
cwtl
sarl
sbb
inc
fs
fbld
xchg
lcall
sbbb
mov
mov
xor
mov
mov
ds
std
xchg
xor
sbb
hlt
ret
push
rorl
cmp
orb
sub
push
xor
pop
aad
insb
jge
and
movb
jmp
cmpl
into
mov
push
insb
adc
fsubrl
xchg
mov
lea
adc
xchg
inc
subb
ror
or
lock
dec
pop
lods
lods
lret
jno
inc
daa
pop
psrld
and
mov
or
bound
xor
mov
sbb
loope
sbb
fneni(8087
aaa
jmp
scas
mov
and
ret
and
mov
addb
mov
es
mov
xchg
fs
iret
fnstenv
frstor
lcall
bound
mov
lock
push
dec
cmp
dec
or
ja
xor
lds
ud1
outsl
jmp
out
mov
outsl
in
jnp
sti
pop
fstpl
fmuls
xor
out
xchg
ja
cmp
test
jne
mov
xchg
push
lret
cmp
sbb
xchg
push
jg
fsubrl
mov
push
and
adc
pop
aaa
lods
jmp
lret
sbb
test
push
mov
aam
gs
loope
dec
aaa
xchg
xchg
xchg
mov
and
dec
dec
ret
inc
push
lea
imul
iret
lret
loope
out
fldenv
pop
mov
push
lret
cli
push
rclb
or
xchg
and
popf
das
add
sbb
sub
insb
xchg
push
stos
stc
dec
sub
outsb
cli
mov
or
push
andb
jmp
imul
and
mov
lods
pop
adcl
mov
inc
cmp
sbb
pop
fs
cmp
add
inc
popf
imul
mov
enter
pop
js
nop
or
jmp
notl
pop
ds
cmp
adc
jb
mov
fidivrs
les
ja
sub
pop
push
movsl
icebp
and
mov
jne
hlt
xlat
cmpsb
sahf
inc
xor
pop
pop
sub
cltd
sbb
push
xchg
outsb
aam
jg
push
pop
jle
and
inc
movsb
addr16
mov
xchg
pop
popa
enter
enter
ja
pop
sub
fdivs
cltd
mov
mov
sub
sub
dec
dec
adc
pop
adc
jnp
fbstp
aam
cli
pushf
sub
div
jnp
pusha
add
mov
in
mov
leave
and
dec
sub
pop
push
push
mov
jle
jl
xchg
mov
dec
jge
lahf
cltd
and
adc
push
shlb
jle
lret
js
mov
cmp
and
inc
sbb
sbb
push
add
sub
out
mov
push
sbb
or
or
in
in
imul
test
or
imul
stos
jg,pt
dec
xchg
dec
push
mov
jne
ret
dec
mov
scas
inc
mov
mov
loop
jb
pop
sarb
lcall
or
sti
xchg
pop
fmull
dec
mov
xchg
push
jb
add
sbb
out
jmp
push
aam
push
pop
fld
xchg
adc
cmp
push
jns,pt
sub
and
stc
scas
cld
fisubrl
movsl
jg
sub
out
jnp
add
xor
inc
push
mov
sbb
ja
mov
pushf
jmp
fistps
cmp
cmp
test
cmp
imul
fs
jb
fsubp
jns
pushl
pop
pop
jle
nop
pop
and
pop
loope
pop
and
push
inc
jb
loope
jo
test
pop
adc
pop
test
push
jmp
mov
adc
add
sub
mov
push
dec
cltd
pop
sub
sub
pop
repz
shlb
cmp
cmp
pop
aaa
xor
mov
ret
loope
cmpsl
inc
push
mov
idivl
inc
outsb
mov
xchg
pop
ljmp
mov
jae
and
mov
imul
jg
mov
cmp
stos
ret
in
lock
and
add
loopne
aam
cmpsl
and
out
dec
and
in
add
ss
push
push
jnp
dec
test
sahf
fldenv
xchg
daa
insb
mov
rorl
sbb
ljmp
jp
gs
jg
jecxz
xchg
push
out
push
stos
push
gs
jg
lock
fcom
pop
data16
cli
std
arpl
jnp
repnz
mov
adc
xor
sub
dec
mov
push
inc
xchg
mov
cmc
adc
push
push
fsubs
stc
push
xor
movsb
pop
cmp
test
dec
mov
pusha
jo
cmpsl
mov
sub
popa
mov
jns
xchg
dec
push
cltd
sbb
inc
mov
xchg
xchg
mov
push
lock
mov
mov
js
sub
arpl
pop
test
dec
call
rclb
sub
sub
outsl
or
jmp
test
into
popf
test
cmpsb
xor
mov
fldl2t
mov
cld
sbb
pop
mov
and
addr16
mov
and
test
xor
push
stos
mov
in
xor
or
call
fs
jns
in
push
jo
ret
cltd
fnstenv
mov
lret
adc
in
mov
fidivl
mov
notb
jmp
loope
les
arpl
stc
in
fstps
pop
stos
fdivl
push
cs
cltd
mov
scas
ljmp
adc
dec
xor
das
sub
sub
insl
add
call
xor
push
aaa
es
jb
pushf
mov
or
testb
push
add
sub
test
mov
sub
fsubl
call
je
pushf
mov
dec
push
addl
xchg
in
movsb
cmp
or
fidivrs
addr16
or
aaa
or
push
dec
adc
shr
or
pusha
jno
sbb
push
pop
pop
and
adc
test
ljmp
jae
out
xor
push
adc
out
adc
mov
mov
xchg
cld
mov
jmp
adc
add
mov
and
call
rcrb
jns
add
mov
pop
out
dec
jbe
pop
mov
pusha
out
icebp
push
jge
in
pusha
mov
pop
xor
shll
inc
imul
mov
mov
negb
outsb
mov
fsts
test
lods
pop
outsl
lret
fwait
jno
jns
ret
cld
das
cmp
insb
adc
fcmovne
roll
pushf
fstps
xchg
das
pop
test
cmpsl
mov
xlat
push
mov
fldenv
push
xchg
add
lea
cmp
mov
add
gs
jae
lods
lods
jno
sub
mov
ljmp
push
test
dec
into
pop
mov
push
or
enter
push
cltd
cwtl
xchg
push
das
cmpsl
cwtl
dec
add
ret
and
sti
and
mov
mov
pop
adc
pop
and
das
aam
adc
enter
loope
and
lock
pop
mov
fnstsw
sbb
cmc
sbb
xor
lret
mov
popa
test
xor
sbb
pop
push
sbb
dec
popf
aaa
or
stc
sub
test
adc
cmpsl
pop
pusha
cmp
mov
ret
ja
int3
mov
sub
rcl
notl
aam
jns
add
insl
iret
xchg
into
ljmp
ret
movsl
lock
xor
dec
imul
les
dec
and
mov
loope
mov
and
sub
stos
into
mov
lahf
xlat
test
sti
and
or
jp
adc
out
das
into
xlat
pusha
cmp
xor
push
mov
aad
pop
mov
hlt
push
iret
push
into
xchg
out
insb
xorb
fs
xor
or
ja
mov
inc
pop
repz
cmp
das
fiaddl
pop
pop
test
ret
adc
pop
dec
stos
and
xchg
clc
ret
ja
test
and
inc
mov
cltd
call
mov
rclb
mov
xor
jo
jo
mov
sub
lcall
xlat
jge
cmc
jno
pusha
shrb
cmp
jo
fdivr
lods
jp
cmc
out
sub
jp
and
sbb
inc
sbb
mov
push
ja
cmpsb
inc
xlat
pop
inc
mov
and
sub
test
cwtl
stos
into
cmpsb
outsl
sbb
or
jmp
mov
aam
test
or
daa
ss
mov
cmpsb
push
jg
mov
xchg
jg
stc
pop
rclb
imul
xor
cwtl
mov
fcmovb
stos
pop
stc
pop
lds
out
movsl
mov
ja
or
mov
int
xor
dec
stos
dec
cli
cmp
pop
push
xlat
mov
outsl
pop
xor
mov
push
jo
pop
adc
xchg
xor
clc
inc
dec
xchg
adc
mov
hlt
es
das
xor
push
mov
mov
jmp
mov
test
and
jg
push
out
nopl
push
loope
leave
xchg
inc
xchg
das
mov
cwtl
mov
xor
push
sub
and
stc
pop
dec
sbb
lahf
pop
sbb
adc
lret
push
sbb
push
cmp
movl
aad
inc
pop
ja
adc
mov
je
dec
sub
sbb
in
xchg
leave
popf
and
add
lea
push
add
push
pop
mov
inc
enter
cmp
push
lea
lods
gs
in
sub
sub
lock
loopne
pop
sbbb
inc
int3
enter
mov
inc
jae
add
xchg
jg
lea
outsb
sub
mov
pop
cs
andb
into
pop
loope
and
mov
or
sbb
outsl
fimuls
mov
outsl
mov
mov
jbe
cs
out
rcll
neg
push
xchg
inc
mov
clc
in
cli
popa
fildl
cli
in
pop
mov
aas
add
or
dec
lods
rcll
lahf
mov
pop
mov
test
cmp
es
xchg
xchg
or
repnz
jbe
popa
scas
ficompl
insl
sbb
std
push
cs
loope
lods
stc
push
mov
dec
inc
jo
add
and
dec
jg
insl
out
mov
mov
out
fwait
cmp
cmpsl
inc
aam
lds
add
repnz
or
xor
scas
jecxz
pop
std
shlb
dec
rcll
mov
xchg
xchg
sbb
aas
sbb
cwtl
add
inc
and
pop
sbb
mov
mov
xor
sbb
jp
mov
mov
popf
pop
push
cmp
add
adc
push
das
xchg
mov
pop
frstor
push
sbbl
sbb
cli
fwait
jno
loop
xor
fstl
out
cwtl
test
mov
cmpsb
cmc
repnz
test
and
mov
iret
mov
std
mov
adc
xchg
enter
loope
xchg
les
fsubrs
push
mov
cld
int
ss
jo
rol
stos
cs
cmp
je
xchg
outsb
ljmp
cwtl
je
cmp
lea
or
xor
inc
nop
sbb
mov
lret
xor
sub
dec
adc
lahf
or
ret
jbe
fidivrl
icebp
mov
mov
mov
adc
push
hlt
jp
pop
inc
xchg
mov
dec
outsl
push
lcall
fnsave
sub
xchg
mov
std
mov
daa
jecxz
xchg
mov
imul
add
lods
xchg
cmpsl
add
pop
adc
adc
jbe
xchg
test
cmp
fsts
jle
mov
inc
push
pop
insb
lods
push
faddl
data16
cmp
and
lock
mov
add
and
es
jno
mov
in
pop
and
dec
pop
fnstenv
das
jg
and
and
xchg
xorb
cltd
dec
out
or
faddl
pop
sbb
jnp
bound
or
int3
xchg
inc
cld
ret
leave
cmp
add
xlat
cmpb
iret
ja
dec
push
lds
jo
shll
outsb
out
ja
xor
or
jge
dec
dec
addb
arpl
lods
push
repz
pop
shr
cmpsb
mov
mov
cmp
inc
push
xor
jp
fbstp
xchg
dec
sti
aad
cli
or
mov
mov
mov
sub
jae
and
dec
stos
icebp
mov
sbb
outsl
pusha
mov
xchg
insb
pop
lock
sahf
int
xorl
mov
out
jg
xor
fs
push
jo
sti
shll
sti
cmpsl
dec
xchg
outsl
sbb
hlt
pop
sbb
mov
mov
mov
ja
push
xor
sbb
dec
das
jmp
add
jbe
mov
push
push
jo
sti
inc
xor
inc
hlt
sub
jbe
cmp
test
and
push
stos
jbe
out
cmp
cld
pop
pop
cmp
pop
adc
mov
inc
test
ljmp
jae
push
push
movsb
ficompl
mov
lret
inc
sti
out
cmpsl
pop
sti
mov
stos
sbbl
add
es
dec
add
mov
jns
das
aas
and
mov
sbbb
lret
ficoml
call
lret
pop
rcl
lock
inc
and
hlt
test
sti
cmp
inc
loopne
pushf
add
sub
and
and
lret
push
xor
mov
test
jo
pop
mov
inc
shl
xchg
repz
add
mov
add
and
xchg
data16
xor
aaa
rorb
cltd
add
add
push
lea
pop
stc
jb
mov
jns
mov
pop
push
dec
xchg
aaa
fidivs
sbb
sub
sbb
sbb
int
pop
sbb
dec
insb
cmp
sbb
ret
add
inc
rcrb
push
ud1
xor
push
ret
fwait
mov
pop
and
idiv
cwtl
inc
mov
adc
pop
call
push
sub
sbb
std
and
in
sub
ljmp
xchg
sbb
push
out
lret
mov
ret
stos
xchg
mov
xor
cmp
fsubrs
pop
adc
pop
xchg
sbb
add
sti
iret
adc
idivb
mov
mov
mov
pop
inc
test
dec
mov
jg
xchg
mov
xchg
or
or
jno
mov
andb
sbb
mov
adc
repz
icebp
sub
push
jle
push
sbb
mov
xlat
stos
push
and
cmp
and
xchg
adc
orl
jge
call
dec
fnsave
pop
push
jae
cmpsl
mov
xor
cmpsb
mov
int
xor
push
shrb
xorb
pop
out
push
ss
aad
xchg
dec
jmp
jae
aad
pop
gs
xchg
js
test
add
pop
inc
xchg
lcall
and
mov
inc
lods
dec
mov
aaa
imul
cmp
xchg
jns
lahf
jp
mov
icebp
mov
daa
cmpsb
repz
stos
inc
rol
mov
jmp
sbb
stc
test
cmpsb
adc
test
fimull
out
xchg
sti
push
testb
pop
inc
adc
dec
mov
push
loop
push
rcl
daa
pop
xchg
adc
push
lcall
sub
insb
test
pop
shrb
xor
dec
sbb
inc
jl,pt
out
and
add
pop
or
mov
cmpb
jne
hlt
xor
std
add
leave
mov
adc
insl
testb
sub
and
pop
mov
adc
fldt
aaa
sub
push
pop
test
mov
test
fdivrp
stos
divl
mov
aad
test
sbb
inc
mov
addr16
jecxz
data16
arpl
aad
sub
adc
add
in
pop
popa
fstl
aaa
ret
fs
scas
inc
lret
push
rolb
jae
sysenter
lock
aaa
jb
aas
xchg
xchg
dec
fdivs
pusha
add
cmp
negb
das
adc
scas
xor
int3
lret
dec
movb
mov
pop
sbbl
mov
cmp
dec
jle
jp
xchg
pop
lahf
mov
lahf
and
jno
enter
mov
stc
lock
add
pop
int3
js
test
mov
push
sub
gs
mov
shll
xchg
dec
sbb
int
jo
cld
into
sbb
inc
pop
in
jb
pop
test
rorl
fcomip
dec
push
inc
push
cld
lods
bound
push
and
ret
mov
jno
ds
sub
repnz
mov
imul
inc
mov
dec
lcall
movsl
or
push
stos
popf
leave
mov
add
cli
shll
jno
xchg
fldenv
inc
sbb
pushf
xchg
imul
pop
adc
jl
adc
outsb
xchg
adc
push
cmp
mov
ret
fs
mov
pushl
stos
sahf
fdivrs
lods
ds
add
dec
lret
xlat
and
and
stc
cli
sbb
sub
in
imul
ja
fdivr
js
jne
mov
jle
add
inc
leave
lods
out
pop
push
sahf
pop
insl
sub
and
into
xchg
xchg
xor
icebp
loope
pop
or
gs
aam
and
add
dec
pop
and
lods
or
sbb
or
jo
rcrl
jo
shlb
mov
enterw
outsl
sub
lock
rclb
sub
sbb
push
in
fcmovu
pop
incl
or
decl
out
xchg
inc
loop
fs
pop
insb
add
movsb
movsl
aas
add
ds
lods
cmp
lods
movsb
lahf
ret
lods
and
mov
and
in
cli
add
xchg
inc
mov
jg
lds
mov
jge
pop
adc
and
adc
and
push
into
iret
and
jp
cs
push
out
popa
dec
dec
out
xchg
xchg
push
xlat
orl
in
xchg
and
jle
mov
sub
jno
or
sbb
jl
les
notl
insb
outsl
sbb
aad
lcall
pop
shl
fnstcw
cs
movsl
mov
cmp
add
or
int
lahf
xor
outsl
addr16
add
nop
mov
mov
ret
xor
fbstp
aad
mov
mov
adc
xchg
stc
pusha
push
loopne
jecxz
and
stc
jp
lock
test
lds
xor
insb
pop
dec
mov
xchg
xor
mov
sti
adc
sbb
mov
jg
int
xchg
movsb
adc
mov
out
lret
inc
xchg
int
pop
pop
push
leave
dec
inc
mov
push
xchg
mov
mov
jne
insl
out
int
dec
imul
cltd
and
xorl
je
std
adc
push
lods
aad
pop
push
push
xor
imul
jbe
jecxz
adc
and
lock
movsb
icebp
shlb
xchg
xor
addl
mov
or
dec
mov
dec
test
inc
jno
hlt
cltd
xor
cld
lcall
ss
mov
push
mov
imul
js
jg
add
push
ret
out
lret
mov
jecxz
imul
sub
bound
cmpxchg
xchg
mov
or
pop
je
lds
mov
lret
mov
add
xchg
xor
cmp
lds
or
or
fnstcw
sbb
jne
sub
sub
fsubr
push
jmp
sahf
jno
jl
pop
pop
dec
cli
inc
xchg
inc
push
or
mov
jae
fs
cmp
stos
pop
outsl
pushf
dec
sub
fldt
push
pop
mov
pop
push
icebp
pusha
out
xchg
dec
gs
movsb
repz
int
cmc
push
or
hlt
shrb
in
mov
cmp
pop
enter
out
mov
xchg
mov
in
add
sbb
into
xor
or
add
std
cmpsb
lods
adc
pusha
bound
int
xor
mov
andl
mov
push
push
jg
fimuls
xor
push
mov
jmp
cmp
jg
jl
clc
pop
imulb
mov
stc
negb
test
sbb
add
sbb
mov
cmp
cmp
mov
scas
shll
in
popf
loopne
loop
movsl
pop
sbb
adc
les
ret
xchg
mov
shlb
and
aam
adc
inc
sbb
cmp
and
fs
mov
daa
call
ds
pop
fwait
jecxz
pusha
jl
shlb
adc
pop
into
mov
sbb
mov
mov
sub
ja
dec
repnz
jmp
adc
pusha
lods
stos
mov
jae
adc
mov
xchg
mov
jle
sbb
rep
jo
sub
jl
jns
cmp
insb
and
rorb
ret
ds
cmpsl
sbb
xchg
xlat
pop
cmp
fisttps
lcall
mov
xor
cwtl
sub
jmp
rcr
lods
pop
pop
ret
fldenv
push
and
sbb
sub
test
jmp
cli
adc
xchg
lret
adc
dec
popa
sub
xchg
outsl
push
xchg
add
insb
push
pushf
mov
aas
inc
push
int
mov
ds
xchg
mov
pop
imul
jne
ljmp
imul
mov
test
jbe
jae
mov
push
bound
cmp
add
pushf
dec
data16
fwait
sbb
and
pop
mov
mov
sub
sbbb
cmpsl
push
push
xor
xor
dec
cmpsl
and
cs
fwait
std
xchg
jns
scas
leave
lds
ret
gs
sub
enter
and
adc
pop
pop
fmull
xlat
cltd
inc
mov
xchg
sub
fwait
iret
adc
jmp
lock
pop
cmp
ljmp
lahf
mov
nop
fwait
push
bound
xor
das
push
pop
push
aad
sub
mov
mov
xlat
test
scas
stc
dec
loopne
loopne
insl
jge
ja
insl
out
or
in
rcl
in
and
sti
or
pop
add
mov
fbstp
int3
str
es
or
loopne
out
pop
imul
pop
icebp
mov
or
les
cmc
add
ds
ljmp
iret
lods
in
inc
and
enter
cmc
addb
jo
dec
enter
lods
inc
push
repnz
iret
out
mov
adc
ja
lret
in
mov
dec
push
cmp
nop
popf
xor
mov
enter
imul
lret
imul
pop
jne
pop
out
push
ss
xor
stos
sbb
pop
dec
lock
adc
push
cld
dec
cmp
inc
lahf
imull
roll
cmp
jmp
push
leave
hlt
adcb
or
and
fwait
out
sbb
imul
imul
insl
repnz
int
pop
int
adc
xchg
inc
add
mov
inc
push
mov
mov
cmpb
mov
and
or
loope
inc
dec
mov
loope
xlat
enter
or
push
movsb
das
mov
xor
xchg
sub
lock
cmp
fmull
cmc
inc
lods
aam
inc
jnp
pop
mov
int3
nop
fcompl
cmp
jo
sbb
inc
pop
fistps
dec
inc
std
enter
mov
lock
push
sti
enter
rorb
ljmp
mov
repz
push
mov
sbb
ds
xchg
mov
test
pusha
test
push
cmc
psllq
sbb
in
mov
cltd
fisubs
mov
lods
mov
mov
dec
in
loopne
add
incb
pop
push
lock
imul
into
inc
ds
mov
hlt
popa
popf
push
enter
int3
sbb
cmp
cmpsl
mov
mov
stos
sub
mov
or
cmp
xor
jge
jnp
leave
pop
iret
xchg
mov
mov
push
cmc
add
xchg
xchg
scas
push
mov
or
and
mov
xor
dec
pop
mov
ret
imul
addr16
adc
jecxz
mov
xor
mov
mov
shrl
dec
popf
or
jle
dec
mov
pop
bswap
rcll
adcl
xor
xchg
nop
sbb
xor
repnz
pop
fwait
hlt
mov
push
sbb
and
test
jg
inc
xlat
jnp
sub
or
bound
jns
lock
fwait
inc
das
out
inc
xor
ret
imul
jns
mov
dec
out
pop
jmp
jns
xchg
inc
jl
or
cmp
pop
lods
push
mov
insb
js
pop
jnp
cmp
mov
mov
adc
lret
pushf
xchg
sbb
fucom
jge,pn
sbb
loop
int
je
xchg
fsubp
mov
cli
sbb
orl
and
aaa
jae
pop
mov
mov
mov
jbe
ljmp
dec
popf
fldl
cmp
aaa
ret
test
push
int
jae
xor
aad
lret
push
fimull
or
jno
lods
or
scas
and
inc
into
call
inc
aad
icebp
mov
cmp
jmp
and
cmc
fwait
in
aad
sbb
test
and
dec
mov
push
outsb
fs
mov
rclb
mov
es
xor
in
pop
lock
je
inc
fiadds
push
arpl
adc
lahf
add
jo
adc
pop
ss
sbb
jmp
lods
call
dec
decl
lock
dec
iret
mov
gs
sahf
or
jno
clc
jg
xor
cmp
sti
mov
cwtl
inc
add
mov
mov
mov
mov
in
and
cld
cmp
pop
sub
pop
cwtl
xor
in
aam
sub
xorb
or
cmp
mov
pop
js
jb
sub
mov
data16
jne
mov
dec
sub
loopne
popf
dec
jle
jg
or
mov
pop
jns
and
pop
jp
popf
int3
dec
mov
or
inc
hlt
and
add
int3
and
in
in
clc
mov
fdivrl
loope
inc
mov
divl
pop
es
pop
int
mov
and
xchg
in
lods
lods
mov
push
sub
imul
xchg
jae
dec
push
lcall
insb
jle
or
push
inc
iret
ja
jge
or
sub
push
mov
loop
jo
negb
outsl
sbbb
decb
mov
repnz
jge
fcoml
clc
data16
cmp
out
lods
mov
inc
xor
repnz
ljmp
loopne
and
mov
in
fwait
lahf
test
outsl
or
mov
in
ficomps
pop
lods
pop
pop
mov
mov
scas
mov
scas
loop
dec
and
xchg
or
je
xchg
rcrl
bound
inc
out
fisubrl
imul
repnz
cs
push
test
lret
lea
cmc
add
out
out
frstor
mov
out
mov
iret
iret
pop
sahf
movsl
push
scas
movsb
dec
inc
and
mov
lahf
xchg
push
dec
fmull
pop
xchg
in
and
xor
sub
xchg
pop
or
jle
cwtl
dec
test
call
sub
cmpsb
xlat
add
into
call
repnz
dec
es
mov
and
or
pop
or
jbe
dec
fldenv
mov
add
mov
push
jno
les
and
push
jo
mov
loope
hlt
ret
cmp
and
adc
dec
mov
mov
mov
lds
sub
mov
push
mov
shll
xchg
dec
mov
adc
call
push
adc
and
xchg
mov
daa
push
cli
jmp
xchg
mov
jae
add
shll
ja
or
mov
cmp
push
push
mov
scas
adc
out
add
ret
sub
pop
sbb
and
lods
mov
jo
ficoms
fwait
mov
std
outsl
inc
pop
cs
pop
mov
pop
inc
ja
and
or
add
jno
cmpsl
push
cld
mov
in
dec
adcl
lea
enter
mov
loope
jecxz
inc
fdivs
add
mov
sbb
sub
fwait
mov
or
shl
sub
std
sbb
fsub
fadds
sub
imul
repz
adc
jmp
push
inc
xchg
cmpsl
or
repz
cmp
shlb
sub
pop
fwait
arpl
mov
push
nop
test
sbb
push
fmull
inc
daa
mov
pushf
or
mov
dec
aam
es
lock
enter
rcrl
ljmp
rol
pop
sub
stc
movsb
decl
pop
aas
lret
mov
popa
paddb
sti
sbb
fistpll
insb
push
out
rcl
push
mov
addr16
mov
push
mov
ja
add
ret
pop
cmp
rcl
scas
xchg
mov
mov
mov
in
fwait
loopne
xchg
cmpb
inc
jg
cmpsl
xchg
mov
add
int
dec
mov
xlat
inc
xor
shlb
push
call
and
mov
cwtl
adc
sub
cmp
xchg
and
sbbl
sub
fimull
mov
scas
sbb
in
fdivs
fldcw
mov
xor
adc
jo
sbb
adc
pusha
jg
and
iret
lods
push
inc
lea
pusha
sub
mov
jbe
addb
xchg
test
dec
and
aam
cmp
bound
cli
mov
std
stc
mov
mov
jle
test
sbb
cld
aam
jmp
repz
cli
jne
jno
cmpsl
adc
daa
mov
push
loopne
inc
rol
movsb
jae
jbe
xor
aaa
cld
adc
pop
lret
pushf
call
rorb
push
fwait
ss
lea
sub
xchg
pop
cmp
or
sub
push
cli
loope
cmp
loope
add
sarl
imul
movsb
ds
push
adc
cmp
jg
inc
xchg
fnstenv
pop
jnp
lds
pop
mov
sbb
out
sub
mov
insl
xchg
xor
cmpsb
dec
pop
pop
mov
std
cmp
add
out
cmp
push
scas
push
nop
ret
mov
inc
in
daa
data16
rcrb
cwtl
mov
inc
xor
inc
repz
pop
sbb
dec
xchg
lods
sti
inc
es
stos
inc
mov
mov
push
inc
push
adc
aaa
aam
mov
and
add
ror
xchg
sar
xchg
xor
pop
inc
xor
incb
jo
pop
push
and
sbb
ret
pmaddwd
nop
mov
fildll
rclb
mov
dec
dec
cltd
or
fwait
lret
clc
cmc
call
sbb
pushf
popa
push
pop
dec
pop
lds
ljmp
pop
repnz
dec
ja
ss
test
add
cmp
repz
loopne
popa
mov
mov
movsb
push
aam
fisubl
cmpb
scas
push
mov
rcrl
sub
dec
scas
sbb
inc
mov
daa
test
mov
les
xor
mov
lcall
xor
pop
and
jb
pusha
or
xor
cmp
pop
mov
aad
xchg
inc
aas
jns
lock
repnz
ljmp
lods
aas
xchg
mov
int
xchg
popf
jno
jnp
jmp
mov
fwait
stos
mov
insb
cs
loop
inc
and
mov
pop
inc
fwait
test
xchg
fisttps
negl
ss
lds
mov
ret
out
int
dec
rorb
mov
mov
inc
lock
arpl
and
and
jo
push
jne
scas
loopne
hlt
fdivrl
out
mov
ss
insb
fwait
xor
and
mull
or
jb
mov
lods
inc
jg
mov
push
les
stos
add
sub
xchg
and
xchg
fsubrl
negl
cmp
push
sbb
mov
pop
outsb
ja
out
hlt
mov
mov
aaa
mov
dec
fsubrl
int3
lret
addb
xor
mov
aam
cwtl
push
je
add
inc
jle
aaa
aad
ds
dec
cs
mov
fdivrs
inc
fcoms
sbb
jns
and
lock
imulb
dec
add
xor
cltd
and
add
pop
hlt
mov
cmpb
dec
in
mov
inc
jp
xchg
ja
jo
jge
cmp
cld
enter
and
mov
lock
inc
insb
push
xor
cmp
xchg
in
xchg
and
pop
push
and
imul
jl
mov
xchg
dec
lret
mov
jge
and
push
mov
pop
out
ficoml
dec
inc
jge
mov
mov
mov
daa
mov
jnp
dec
mov
sti
cltd
call
cld
dec
sub
cmpsb
xchg
sub
pop
adcb
push
jg
lret
test
sahf
pusha
js
push
loope
test
imul
and
xchg
sub
add
mov
aas
cmpb
adc
mov
hlt
loopne
adc
dec
inc
and
repz
les
xor
or
jg
pushf
hlt
xchg
push
loop
test
insb
bound
test
jecxz
test
pop
mov
pop
mov
inc
popf
mov
pop
out
pop
inc
insb
pop
inc
dec
repz
imulb
inc
sbb
mov
jae
mov
jo
and
lds
je
sbb
cmp
test
mov
roll
lds
mov
push
addr16
xor
rcll
or
scas
or
mov
xchg
f2xm1
cmpsl
out
popaw
inc
or
cmc
insl
mov
push
movsl
dec
mov
pop
sbb
dec
sub
addb
inc
arpl
bound
adc
incb
push
sub
sub
mov
xor
pop
fisttpl
fcompl
cmpsl
aas
inc
std
pushf
dec
fcomps
les
xchg
lea
xor
jmp
in
in
arpl
mov
mov
push
adc
mov
stc
dec
jle
adc
sbb
cwtl
push
nop
dec
cmc
in
cmp
mov
loop
mov
pusha
jl
inc
xchg
roll
pop
les
out
cmc
cmp
fs
adc
dec
insl
sar
mov
or
cmc
push
sub
push
push
adc
outsl
scas
insl
push
fwait
in
in
fdivp
int
add
out
cmp
ss
mov
outsl
rcrl
stc
or
pop
pop
iret
sub
scas
movsb
sarb
pusha
dec
negl
mov
add
jecxz
pop
scas
in
stc
arpl
in
cmp
lods
loopne
popf
jae
inc
mov
mov
arpl
loopne
popl
lret
icebp
xor
add
fimuls
mov
push
add
pusha
into
inc
push
inc
adc
jle
mov
mov
ret
mov
adc
lret
jl
mov
fs
in
fimuls
pop
xchg
sbb
push
xor
push
dec
push
pusha
jg
mov
push
insl
cmp
test
push
imulb
gs
int3
jmp
or
and
xchg
in
dec
mov
je
dec
lret
icebp
push
enter
add
add
mov
sti
mov
adc
incb
mov
das
aas
loop
adc
jb
push
stos
add
cmc
clc
xor
xlat
or
scas
into
jbe
dec
inc
jecxz
insl
pop
xor
insl
dec
mov
and
movsl
dec
sub
mov
dec
xchg
mov
dec
adc
sbb
cltd
jo
loop
aaa
xchg
icebp
dec
shll
loope
dec
jg
adc
outsl
in
dec
mov
push
stc
xchg
inc
inc
scas
std
adc
sahf
xor
inc
insl
lea
inc
push
pusha
dec
mov
mov
fistpll
pop
push
mov
push
bound
mov
xchg
out
fcmovnbe
inc
pop
in
mov
lods
push
jmp
xchg
lahf
xor
pop
movsl
pusha
add
mov
or
mov
int3
sbb
xchg
hlt
fiaddl
sbb
add
outsl
mov
jno
jbe
xchg
sbb
lds
stc
sbb
dec
movl
sub
movsl
add
fisttps
fists
cli
cli
push
notb
and
push
add
fs
sahf
xor
inc
mov
loop
ds
in
std
enter
dec
andb
mov
hlt
mov
inc
xlat
add
mov
mov
xor
mov
sahf
push
push
xor
roll
dec
ljmp
cwtl
and
in
leave
mov
xor
cmpb
mov
cmp
paddusb
ss
xchg
movsb
movsl
mov
test
mov
push
aam
dec
adc
repnz
fisubrl
fidivrs
jl
lods
loopne
add
scas
int
cli
into
stos
stc
les
flds
mov
xchg
pushf
dec
test
pushf
add
sbb
repz
push
dec
push
lret
dec
lahf
scas
dec
adc
out
mov
js
and
ror
xor
sub
mov
arpl
sahf
orb
xchg
inc
fistps
xchg
aaa
stc
push
in
xchg
inc
xchg
push
js
jmp
mov
nop
loop
dec
and
frstpm(287
jl
sub
repz
mov
push
and
xor
and
push
loop
pop
jp
push
outsb
mov
mov
xor
inc
push
mov
js
sahf
out
or
adc
jbe
fdivrp
je
or
popf
jae
lret
lret
sub
negl
sub
and
adcb
ds
jp
jecxz
xchg
stos
sarb
push
into
push
mov
lret
enter
mov
mov
int3
inc
xchg
sub
sub
dec
jae
loopne
jecxz
xchg
insl
add
adc
flds
jnp
jo
aam
aas
mov
std
incb
adc
xor
movsb
sti
jb
inc
lahf
mov
movsb
mov
sbb
int
mov
lea
lret
dec
enter
idivb
push
mov
pop
mov
xor
pop
movl
jp
push
sbb
out
cmpsb
in
pop
jns
imul
pop
dec
fdivrp
mov
fwait
aaa
idivl
lret
sahf
mov
jge
arpl
sub
cmp
mov
mov
or
sbb
or
sahf
jmp
mov
mov
mov
andl
sbb
lahf
sub
ret
cmc
lcall
movsb
addr16
add
ucomiss
fsubrp
fldln2
jns
dec
xor
shr
mov
mov
sbb
repz
out
inc
mov
mov
into
mov
sub
add
xor
imull
add
fdivs
mov
xchg
aaa
or
lds
pop
adc
pop
or
inc
mov
mov
scas
xchg
xchg
sbb
push
aas
jge
dec
sti
mov
mov
imull
sbb
lods
pop
sbb
sub
rcrl
stos
mov
fidivl
lods
or
test
mov
mov
and
and
jl
aas
mov
cmp
ds
loop
pop
pop
es
clc
pop
and
and
cs
inc
es
test
xor
std
sub
frstor
out
push
loopne
loope
testl
dec
jae
and
cmpsl
std
cld
sbbl
pusha
pushf
cmova
mov
and
nop
xchg
insl
scas
fs
lods
jg
fstpl
pop
andl
push
pop
xchg
adc
push
cmpl
mov
rorb
mov
cmp
data16
cmp
out
cmp
aaa
xor
push
mov
inc
insb
out
out
mov
iret
movsb
test
cmp
sub
les
fisubs
lcall
ja
xchg
jl
pop
dec
jmp
cltd
shr
es
fs
xor
xor
or
add
xor
xchg
inc
mov
or
in
mov
push
mov
lock
xchg
cmp
adc
add
adc
xlat
dec
ret
outsb
jmp
mov
clc
mov
dec
lahf
sbb
pop
push
push
pop
mov
repz
pop
mov
pop
jg
push
mov
or
fdivrl
in
inc
xor
push
ss
aaa
dec
jae
addr16
mov
repnz
jge
les
fsubrp
ret
adc
add
push
mov
and
or
xchg
xchg
in
hlt
aaa
fistps
in
dec
into
push
jb
inc
aas
mov
repz
cltd
aad
push
add
xchg
inc
mov
fisttpl
dec
pushf
mov
sti
jnp
mov
outsb
inc
test
inc
shl
xor
aas
iret
sar
jmp
lcall
jle
fcoml
pop
jl
inc
sbb
dec
cmp
add
and
lret
daa
adc
cmpsl
lods
sub
repz
mov
daa
inc
sub
xchg
outsb
sahf
adc
imull
jge
and
jbe
ljmp
fs
ljmp
mov
cmp
jno
xchg
out
pop
lds
xchg
mov
clc
inc
subb
push
pop
mov
movsb
sub
xchg
arpl
mov
or
and
jnp
test
sub
aas
mov
popf
fwait
js
xor
add
shrl
pop
fistps
fcompl
clc
inc
cmp
sub
sbb
arpl
and
jecxz
into
into
les
xchg
dec
stos
das
pop
cmc
stc
imul
cld
sbb
jae
cmp
stos
and
aad
sarl
int
sbb
shlb
cmp
cmc
je
pop
inc
push
imul
loope
mov
in
inc
inc
jecxz
and
adc
insb
mov
arpl
insl
out
push
push
lahf
ljmp
dec
adc
sub
xchg
mov
pop
xchg
and
push
push
mov
push
mov
or
mov
adc
mov
lock
shrb
imul
pop
into
xchg
movsb
cltd
sbb
push
pushf
sahf
pop
fs
mov
cmovl
out
je
xor
fidivrs
cld
push
adc
add
adc
lods
into
shll
inc
shlb
mov
sbb
out
mov
mov
mov
mov
lea
ss
jmp
push
push
inc
es
sbb
sub
adc
stc
imul
inc
mov
and
sub
push
mov
fcmovu
repnz
les
daa
dec
in
inc
sub
mov
and
push
jns
jno
iret
jo
push
push
ss
sub
push
loope
or
mov
xchg
inc
inc
mov
xchg
mov
sbb
adc
jle
nop
mov
addb
xchg
cmp
pop
fidivl
cli
ret
cmp
scas
jnp
and
xchg
stc
xchg
sub
xchg
dec
lret
idivb
cmp
test
mov
jp
imulb
popf
inc
adc
add
mov
mov
pop
das
andl
adc
ds
xchg
adc
clc
outsl
add
inc
pop
or
xor
into
jae
shlb
pop
adc
call
repz
pop
add
movsl
push
pop
rcll
xchg
imul
jp
loop
ss
loopne
jmp
cli
mov
loope
lock
in
arpl
xchg
sarl
cmpsb
or
jg
adc
jmp
sbb
data16
or
mov
mov
add
scas
dec
jl
popf
iret
inc
push
add
inc
rcll
stc
fucomi
xlat
push
push
insl
sub
and
fstpt
mov
add
addr16
xchg
cmp
and
or
test
popa
mov
push
insl
stos
stc
pop
or
aam
sbb
jmp
inc
mov
lds
enter
add
leave
jmp
stc
lods
pop
repz
jbe
test
dec
cs
push
cmpl
sub
dec
test
or
push
punpcklwd
andl
lcall
sub
scas
add
xchg
call
jl
imul
loopne
out
cltd
loopne
popf
test
repnz
roll
ret
jb
cmpsb
push
push
push
in
les
mov
dec
fwait
push
sub
mov
gs
in
sbb
es
cmp
xor
pop
addl
jnp
shll
shl
std
and
je
jge
pop
pusha
lock
jne
pop
in
adc
je
or
or
fimull
leave
push
lret
adc
lea
test
add
int
add
aad
pusha
lea
sahf
and
add
dec
sbb
mov
pop
push
mov
fucomi
scas
inc
outsb
ret
pop
movsl
outsb
adc
jl
push
sub
add
xchg
mov
mov
mov
inc
pop
push
mov
insb
gs
mov
dec
push
jmp
push
jnp
loope
out
mov
mov
dec
add
mov
sti
inc
lahf
pop
inc
jl
leave
and
push
pop
mov
pop
cld
xorl
lahf
stos
ss
sub
and
mov
push
movsl
pop
push
sbb
shlb
sub
pop
mov
adc
mov
loope
pop
loop
pop
outsb
cld
jno
ja
jle
dec
sbbl
mov
adc
lods
cmc
or
dec
xor
jno
jle
repz
mov
mov
in
and
xlat
mov
xor
push
clc
dec
xchg
jp
movsb
nop
jmp
out
xor
repz
xchg
or
orl
cltd
les
fadds
std
sbb
cmp
ja
sbb
mov
dec
inc
rcr
test
xchg
or
mov
push
fldcw
stos
clc
in
movsl
cli
add
xchg
repz
insb
pop
ja
push
outsl
mov
cmp
xchg
add
mov
lahf
add
dec
shll
sahf
lretw
sahf
mov
push
sbb
daa
or
xor
lcall
bound
xor
jbe
jnp
stc
add
dec
or
in
movsb
pcmpeqd
inc
push
outsl
mov
push
jo
sub
in
fwait
dec
inc
out
incl
loope
fdivrs
xchg
sub
in
pop
and
push
enter
xorb
push
jge
hlt
or
cmpsl
mov
fcmovnu
ja
fcos
mov
les
fdivs
mov
xor
jg
int
test
test
jno
mov
pop
xlat
mov
jnp
add
lahf
sahf
hlt
rol
jo
adc
cmpsb
orl
mov
push
aad
mov
jnp
fwait
xor
out
lahf
mov
xor
test
movsb
ljmp
mov
xchg
mov
xchg
mov
add
dec
add
cmp
adc
jl
adc
fimull
cmp
inc
mov
and
fwait
je
inc
xchg
dec
out
mov
aas
and
mov
cmc
xor
mov
lock
insb
insb
push
sub
xchg
pop
sbb
pop
jg
test
test
mov
push
movsl
push
sbbl
cmp
xor
mov
insl
pop
outsl
xchg
popa
xchg
cmp
rcr
gs
cli
daa
mov
inc
mov
adcl
jmp
pop
stos
or
mov
push
call
cmc
sbb
push
mov
clc
lahf
insb
call
mov
mov
sub
jnp
in
mov
jno
or
cmp
and
xchg
lahf
cwtl
popf
mov
test
aas
xchg
lea
fistl
sahf
jnp
mov
fistpl
loope
addr16
shrl
adc
jmp
enter
mov
lods
fistps
int3
mov
dec
clc
scas
fsubrl
jge
test
inc
test
add
pushf
mov
fbstp
rdmsr
lcall
push
pusha
adc
dec
lock
imul
fcmovnbe
xchg
call
repnz
xchg
pop
jbe
test
nop
cmp
and
arpl
dec
xor
in
je
jnp
xchg
mov
push
sbb
and
xchg
sti
add
aam
sub
xor
mov
insb
mov
les
lret
es
sbb
pop
inc
pop
xor
push
dec
dec
mov
imul
xchg
jnp
outsl
pop
xor
mov
mov
mov
mov
add
add
hlt
sub
sub
inc
aaa
dec
dec
xchg
mov
addr16
xchg
xorb
stos
cmp
das
xor
ret
rclb
jmp
dec
sahf
js
xor
data16
js
pop
je
adc
push
data16
add
pop
pop
movsl
push
push
js
ret
mov
xchg
xor
test
pop
push
cld
int
mov
adc
sbb
xlat
movsb
adc
xor
mov
mov
push
mov
pop
scas
mov
sbb
scas
sti
sbb
jbe
jp
pop
push
mov
adc
cmpsl
mov
lods
fsub
lret
sub
scas
xchg
popf
out
dec
xchg
jno
shlb
mov
jmp
lods
loopne
jne
inc
ljmp
repz
sub
sahf
lock
push
sarl
imul
xor
cmpsl
imulb
xchg
rcrb
push
int3
adc
loopne
pop
xchg
notb
jmp
out
loope
xchg
xchg
jno
mov
outsl
and
jbe
jecxz
mov
addr16
push
add
and
push
subl
int3
rcl
sbb
lods
pop
nop
add
aas
shrb
sbb
cmpsl
xchg
and
inc
mov
and
pop
dec
jp
xchg
call
mov
xchg
lahf
out
aam
inc
repnz
lods
aas
jne
adc
mov
mov
iret
xchg
sub
and
movsl
test
jo
adc
xchg
mov
test
ds
cmp
fcompl
mov
dec
cwtl
stos
andl
push
jo
ss
sti
mov
outsl
out
xlat
dec
fists
lcall
and
xor
xchg
push
pop
popf
call
pop
pop
xchg
push
cmc
loope
jge
dec
fisubs
ret
icebp
cmp
mov
into
inc
cli
xchg
jne
dec
push
xchg
xchg
pop
sbb
push
and
mov
ds
je
js
add
test
and
sub
and
xor
imul
in
adc
inc
xchg
jns
cmp
fldcw
neg
jmp
jbe
pop
pop
and
notb
jne
and
pushf
imul
add
adc
and
and
xchg
adc
mull
jg
scas
adc
imul
xor
js
js
rcrb
adc
ret
std
xor
shrl
inc
test
in
sub
dec
dec
jl
mov
inc
das
jecxz
pop
nop
push
icebp
xor
loopne
das
push
jno
aas
in
jo
data16
sub
cmc
dec
mov
shll
inc
fsubrs
inc
aaa
loope
cmp
ret
jno
cltd
vmulsd
out
lds
or
cmp
xor
call
cltd
cmpsb
or
push
in
out
push
das
pop
loopne
cmp
and
sub
cld
push
loopne
gs
jmp
mov
scas
cmc
push
mov
clc
neg
gs
int3
ret
sub
cmp
mov
lret
test
addr16
clc
in
mov
mov
es
out
sarl
dec
mov
add
loopne
sub
rdmsr
adc
mov
dec
lret
js
pusha
in
scas
loopne
xor
test
fnstenv
lcall
sub
lds
das
clc
push
xchg
xchg
sbb
adc
shrb
or
pop
imul
push
loopne
rol
roll
mov
test
dec
and
popf
call
js
cmp
cltd
sbb
addr16
gs
or
mov
mov
mov
mov
loopne
xchg
stos
mov
xchg
cmpsb
lea
mov
xchg
aaa
ret
repnz
dec
rcl
and
bswap
insb
sbb
adc
repnz
mov
in
into
cs
repz
xor
sbb
xchg
sbb
adc
adc
in
jo
in
mov
bound
das
movsb
imul
sub
add
test
dec
ds
xbegin
mov
pushf
das
push
test
scas
imul
icebp
popf
and
cmp
mov
shlb
adc
lea
iret
shrb
mov
xor
fcmovbe
push
sub
aad
shl
cmp
inc
dec
and
cmpb
out
xorb
mov
outsb
outsb
aas
cmp
hlt
inc
cmp
call
addb
dec
xlat
fisubs
stc
fmuls
mov
aam
leave
cs
pushf
cmp
sub
fwait
sbb
ljmp
cmpsb
test
addr16
clts
cmp
in
das
adc
push
mov
inc
fldl
in
dec
jae
jmp
or
add
sub
arpl
in
out
ja
or
xor
pop
mov
pop
xchg
lcall
bnd
bound
repz
out
incb
mov
fdivrs
aad
dec
mov
jmp
pop
mov
add
sbb
call
inc
fimuls
inc
xor
add
pop
pop
or
dec
or
mov
push
add
imul
data16
stos
and
and
jae
ds
push
dec
cmp
iret
sbb
pushf
mov
lock
test
mov
xchg
scas
dec
gs
xchg
and
jecxz
repz
mov
idivb
cmc
xchg
mov
xchg
out
mov
sub
cmp
test
jo
cmp
subl
xchg
scas
sub
imul
add
jns
xchg
ret
out
jb
mov
aas
imulb
test
pop
mov
xor
loope
popf
add
or
pop
jno
movb
fnstsw
xchg
cmp
inc
or
testb
xchg
cmp
pop
dec
addb
jp
pop
and
jge
xchg
jg
or
pop
mov
push
lds
xor
adc
adc
mov
js
lea
jne
seto
sbb
jb
mov
inc
ret
fldt
cwtl
xor
stos
adc
push
mov
adc
lret
mov
stos
call
pushf
inc
clc
pop
mov
test
push
ret
mov
nop
jb
ret
lret
pop
aaa
jns
inc
add
in
mov
or
clc
xor
dec
fimull
cmp
cmp
sub
in
shll
mov
idivw
mov
push
inc
and
leave
pop
test
push
xor
fnstenv
jg
dec
jo
push
mov
testb
or
stos
mov
sbb
and
inc
mov
and
sub
subl
mov
fistps
nop
pushf
jp
push
sbb
mov
bound
mov
xchg
mov
mov
sub
mov
fs
sub
adc
cwtl
push
jne
fldl
cmp
inc
lahf
and
movsl
mov
inc
mov
dec
mov
sti
xor
sub
sub
inc
adc
jg
out
fcmovb
outsb
loop
push
cmp
aas
lsl
jge
and
xchg
es
pop
mov
mov
or
into
jns
adc
out
dec
dec
jle
fcomps
dec
leave
or
or
pop
int3
nop
out
dec
call
push
inc
mov
mov
inc
daa
push
jmp
xor
push
sbb
mov
out
jb
rorl
nop
mov
mov
fildll
loopne
sbb
fsubrl
push
jmp
pop
fcomps
xchg
sbb
cmpsl
stos
cltd
cli
xchg
xchg
inc
fcmovu
sbb
cltd
xor
stc
stc
pop
inc
add
mov
jbe
xchg
mov
ds
scas
fsubrs
les
pop
data16
pop
nop
mov
ljmp
int
xchg
fmull
sbb
lock
pop
sarb
sbb
push
xchg
mov
fimuls
add
cmp
adc
and
daa
daa
sbb
xor
add
ret
push
dec
xchg
imul
notb
push
push
pusha
rcr
popa
stc
dec
mov
mov
add
or
es
int
pop
div
jb
jmp
out
xor
mov
pop
pop
stos
sub
mov
test
dec
cmp
jl
sbbl
movl
xor
js
pop
cmpsb
add
sub
mov
add
mov
push
mov
sub
xlat
push
inc
sbb
test
inc
sub
xor
lea
sub
and
in
mov
sub
mov
xor
sub
or
fadd
aas
dec
fcoms
inc
sbb
adc
xor
cmc
add
xorl
sti
push
add
push
push
xor
cmp
in
jecxz
fwait
jge
dec
xchg
add
mov
or
loop
sub
cmpxchg
or
xchg
sub
stc
push
sti
lret
pop
nop
pop
daa
mov
add
lret
dec
mov
call
stos
fisttpl
cmpsl
je
mov
jmp
xor
faddl
ja
mov
push
xor
fs
push
loopne
popf
mov
jno
sub
mov
jbe
iret
test
sbb
xchg
jle
cltd
lret
sub
mov
pusha
xchg
push
pop
mov
sub
movsl
mov
fisubs
mov
push
leave
and
fs
stc
mov
stos
fldcw
movsb
insl
xchg
mov
pop
sub
mov
cwtl
cmp
xorl
xchg
adc
cmp
jns
fwait
jl
les
subb
iret
lahf
rorl
int
cmp
loopne
push
and
push
pusha
cltd
xorb
dec
xor
insl
stos
repnz
mov
subb
outsb
or
scas
inc
mov
inc
pushf
rclb
jo
shll
xchg
and
adc
sub
push
in
mov
int
loope
mov
icebp
lcall
mov
ja
adc
jg
push
mov
pop
fnstcw
inc
call
pop
rorl
std
mov
jae
lcall
or
js
cwtl
loope
mov
xchg
mov
int3
jae
xchg
int3
fdivl
dec
xor
pop
insb
daa
adc
fdivrl
mov
in
push
daa
xchg
xorl
inc
fwait
adc
sar
stos
scas
jno
mov
add
jbe
jne
pop
fistl
testb
cmp
leave
fwait
and
jo
in
cmp
sub
lcall
mov
daa
or
mov
pop
adc
shl
cmp
leave
sub
fsts
dec
cmp
sbb
sub
mov
loope
dec
jnp
arpl
ljmp
ljmp
fdivrl
fmul
stos
jge
xchg
stc
subb
rcrb
into
jle
fcmovb
cli
sub
in
std
in
sti
aam
scas
sti
call
cmpsl
paddq
into
bswap
pop
xor
add
aam
mov
dec
imul
js
loop
xchg
addr16
mov
aaa
jns
cwtl
xchg
fwait
outsl
js
pop
stos
xor
imul
arpl
inc
insl
cmpsl
push
mov
and
lahf
inc
cmpsl
jo
aaa
xchg
xlat
mov
xchg
dec
xchg
outsb
mov
push
xlat
xchg
add
xor
scas
jnp
subl
sbb
xchg
mov
dec
push
push
imul
xchg
mov
or
dec
cltd
cs
jle
xchg
lahf
dec
adc
mov
pop
mov
rclb
aaa
pop
sub
rclb
or
or
xor
inc
ss
push
ficoml
mov
sahf
cmpsb
push
in
mov
insb
jne
insb
test
pop
and
and
std
int
dec
mov
int
inc
mov
lcall
out
add
jmp
pop
aam
lods
jl
add
lock
aas
mov
mov
pusha
add
lcall
pop
ret
insl
or
jmp
jbe
jmp
popa
xor
jbe,pn
mov
arpl
in
cwtl
sar
fdivrl
sbb
jo
jmp
xor
std
mov
call
mov
insl
sahf
xlat
inc
cmp
inc
shrl
lods
sbb
sbb
insl
cwtl
jns
aaa
popa
pop
add
addr16
dec
adc
jecxz
pop
jb
and
ss
dec
mov
test
mov
repnz
rcl
cmc
call
adc
mov
cmp
xchg
and
imul
fistpl
gs
jl
dec
fsubs
mov
push
stos
int
adc
loop
clc
ret
leave
pop
push
cmp
ds
mov
mov
repz
test
dec
std
inc
or
loop
ja
adc
fildl
push
repnz
or
aaa
sbb
push
sbb
adc
mov
stos
call
aad
popa
mov
jle
mov
push
pop
mov
fwait
out
and
jnp
xchg
ja
test
xchg
testb
push
cmc
mov
daa
mov
repz
stc
loop
push
enter
fwait
jno
push
sub
test
movsl
cwtl
cmp
adc
mov
in
ret
sub
mov
movsb
stos
shl
ret
les
cs
jmp
arpl
rcr
xor
inc
dec
and
inc
mov
rol
scas
enter
cmp
adc
push
adc
mov
bound
cld
mov
cmc
inc
outsl
movl
js
add
add
pop
jp
bnd
mov
cli
mov
notb
leave
jnp
jge
ret
mov
jnp
das
adc
inc
dec
imul
push
fisttps
mov
push
sub
or
or
stos
stos
lahf
xchg
cmp
cmp
je
rolb
jno
div
stc
mov
jle
lods
add
jnp
jb
push
inc
in
mov
loopne
cltd
gs
lods
dec
in
mov
jmp
aam
idivb
es
sbb
adc
push
mov
xor
hlt
fiadds
mov
ljmp
cmp
xchg
nop
aas
sbb
or
dec
mov
int3
lret
clc
push
add
or
cmp
dec
jae
pop
push
ss
jno
cmp
mov
or
cli
in
stos
test
aad
sbb
mov
and
inc
push
xlat
jbe
pop
add
mov
and
repnz
inc
cmp
push
fcompl
into
cmp
pop
mov
mov
je
imul
xor
in
jl
or
xchg
add
movsl
and
stc
pop
mov
js
shlb
xor
mov
or
icebp
or
into
ret
push
jecxz
xor
and
arpl
mov
lock
lea
hlt
popa
movsl
out
lret
sbbl
lods
cltd
pop
and
out
xchg
cs
popf
aas
push
sbb
mov
aam
in
push
frstor
sub
add
in
inc
pop
mov
les
dec
test
rclb
cmp
xchg
iret
in
cmp
xorl
add
mov
dec
stc
pop
test
jg
jnp
pop
xchg
icebp
or
dec
push
jnp
ds
push
js
inc
or
push
mov
pop
adc
pop
mov
mov
cld
inc
add
aad
test
mov
jle
dec
popf
and
es
gs
pop
fmuls
inc
pop
jle
jmp
scas
inc
imul
sahf
jnp
test
xor
sahf
pushf
lcall
decb
xchg
lds
fs
cmp
loop
sub
roll
dec
cmc
jns
out
sub
xchg
sub
inc
leave
out
jb
mov
sbb
inc
dec
push
jno
ret
cmp
fdivrp
mov
aam
idivl
sbb
fsubrp
mov
sbb
jl
cmp
push
cmc
dec
shlb
mov
cli
in
sub
or
mov
push
inc
clc
aam
in
jns,pn
inc
aad
dec
rcrb
cmp
hlt
mov
dec
ficomps
cmp
xor
into
pop
push
lea
mov
jle
inc
aad
sbb
jge
fwait
mov
filds
mov
int
daa
adc
mov
mov
cmp
clc
in
std
or
lret
and
sbb
icebp
lods
repz
xor
or
adc
cmp
shrb
push
sbbb
cmpsl
sub
movsl
cmp
repz
dec
cmp
mov
push
shl
roll
mov
cltd
test
cmp
push
mov
popa
pop
sbb
push
xor
icebp
cmp
inc
pop
jle
stc
adc
cmpsb
push
and
mov
enter
and
push
daa
mov
cwtl
outsb
mov
stos
pop
insb
or
mov
stos
loop
imul
nop
mov
dec
gs
stos
xor
pop
jne
lea
subb
icebp
add
es
bound
aas
rcrl
movsb
mov
ljmp
cmpsl
sub
mov
jns
sub
stos
lea
ret
clc
jae
cltd
pop
mov
xchg
xor
inc
fwait
cmpsb
jg
mov
cmpsl
mov
aam
dec
push
jns
pop
ja
xlat
dec
outsb
add
and
loopne
jnp
jmp
inc
icebp
mov
int3
rol
cmp
push
fisubrs
pusha
jo
mov
jle
scas
push
bound
rorl
or
insb
nop
icebp
dec
mov
fsubrs
mov
push
push
sub
xchg
pusha
icebp
sbbb
out
dec
mov
loop
std
inc
sahf
inc
mov
jge
xchg
insl
call
pop
les
or
rcll
xlat
mov
loopne
iret
gs
ret
xor
enter
cli
mov
pop
xor
pop
repz
into
dec
jle
cmp
xor
cwtl
mov
imul
push
lods
repnz
mov
imul
bound
add
push
or
push
cli
adc
pop
cmpsl
ret
inc
adc
inc
jnp
cwtl
es
mov
daa
shl
repz
out
dec
loopne
push
enter
push
ds
mov
adc
mov
iret
push
fdivrl
sbb
cmpsb
dec
pop
mov
call
xor
movsb
nop
fidivs
add
movsl
push
push
lods
repnz
pop
add
pop
sub
clc
sub
jns
stos
cmp
stos
cmp
iret
xor
rol
loop
mov
push
movsb
gs
or
fwait
xchg
jo
xchg
ss
outsl
stos
sti
jp
clc
rcll
sbb
adc
mov
data16
mov
jmp
jg
adc
xchg
test
mov
sub
ret
or
leave
push
loopne
aaa
add
data16
mov
cwtl
mov
rcll
dec
push
mov
movsb
fidivs
mov
adc
loopne
and
mov
add
sbb
aad
outsl
add
insl
mov
or
mov
call
outsl
idiv
cmpsb
and
mov
das
test
or
jl
pop
js
adc
lret
aas
insl
xor
mov
xchg
dec
loope
shrl
xchg
mov
jne
sti
int3
inc
xor
dec
inc
ffree
or
jnp
test
clc
cmp
stos
or
and
addr16
mov
or
inc
fdivrs
mov
es
addl
inc
mov
in
stos
add
cmp
out
push
shll
xlat
pop
and
imul
loop
pop
pop
ja
loope
inc
adc
pop
lret
jp
int3
inc
pop
sarl
jle
aas
mov
jnp
mov
ljmp
out
cs
mov
pop
cmp
inc
xchg
fstps
lods
shl
xor
sbb
cmp
jbe
push
xlat
inc
jb
jne
je
ds
lea
andb
push
outsl
push
in
adc
cmp
outsl
repz
add
mov
xchg
xchg
jecxz
mov
movsb
fs
insl
push
loope
xlat
jl
loopne
sbb
mov
or
imul
inc
subb
cltd
loop
pop
mov
pop
aas
mov
cmp
xor
push
sbb
add
dec
ja
hlt
adc
add
cmc
jnp
xchg
stos
or
lods
in
mov
inc
or
test
andb
and
xchg
mov
cld
mov
aas
pushf
jmp
int3
or
cli
mov
and
ret
rcr
lea
or
ret
dec
and
dec
ret
jb
mov
push
shlb
and
loopne
in
xchg
adc
leave
daa
cmp
leave
inc
add
xor
push
lret
add
mov
push
rcll
jns
cltd
push
mov
out
stc
dec
js
rcrb
enter
dec
int
in
enter
fnop
sbb
mov
mov
inc
dec
aam
mov
jle
push
cmp
imul
push
addr16
cmp
addr16
rcrb
repnz
into
fcoml
dec
mov
dec
and
push
ret
mov
xor
cmpsl
addb
inc
adc
and
fld
scas
adc
adc
loopne
arpl
push
add
jg
push
xor
in
icebp
pop
or
jl
add
and
mov
jb
pop
jle
inc
adc
pop
add
sub
jbe
xor
dec
cmc
ret
mov
xchg
loope
aas
enter
push
fsubrl
sbb
adc
sti
fisttpll
movsl
outsb
xchg
iret
ds
xor
pushf
mov
aam
adc
sub
popa
imul
mov
movsb
lds
je
jmp
push
pushl
jmp
pop
mov
sub
scas
dec
int3
popa
jl
and
mov
loopne
sbb
sub
loop
pop
inc
fdivr
sbb
repz
push
fdivs
inc
or
push
jge
mov
jae
xlat
std
test
es
aas
popa
bswap
jns
fsts
mov
and
lcall
ret
sub
imul
adc
int
int3
push
mov
add
jg
pushf
mov
loopne
call
add
pop
xchg
ret
jno
pop
jg
clc
in
jae
push
jb
cmp
and
inc
lret
or
mov
mov
jae
dec
aad
mov
jo
dec
jle
adc
mov
adc
mov
cmp
cmpsl
xchg
push
insb
pop
stos
insb
push
test
ss
and
imul
sub
cmp
std
sti
mov
loop
mov
fists
aas
divl
add
dec
cmp
lahf
daa
ret
inc
adc
cmc
mov
pop
inc
movsl
data16
repz
xchg
stos
mov
dec
not
dec
jbe
cmp
push
fsubrl
push
arpl
ds
sub
shr
push
cli
xchg
sub
cmp
pushf
fistps
dec
xchg
stc
dec
adc
and
aaa
jo
jl
mov
xor
mov
scas
lret
or
psubsw
mov
mov
mov
and
inc
and
cltd
jnp
lods
mov
gs
ljmp
jb
or
in
divb
xchg
jne
adc
repz
pop
pop
adc
test
sbb
mov
popa
pop
icebp
jg
repz
cwtl
and
loopne
mov
xchg
ret
cwtl
pop
inc
mov
inc
push
inc
sub
fnstcw
add
les
dec
adc
mov
dec
dec
sbb
inc
sarb
mov
xor
pop
sbb
ljmp
push
dec
ret
and
jge
xchg
push
outsb
rorl
sub
mov
push
stos
daa
fstl
cmp
mov
pop
adc
enter
outsb
mov
pop
cltd
out
jns
rcrl
or
jne
mov
mov
mov
jl
movsb
jp
clc
push
out
stos
adc
xor
int
test
mov
adc
ja
lock
xchg
mov
inc
bound
or
mov
enter
xor
adc
adc
push
mov
cwtl
int3
cmpsb
mov
sahf
lahf
mov
int3
enter
jnp
scas
jae
mov
dec
clc
movsb
stc
pop
jmp
movsb
lds
inc
push
std
jge
lods
xor
xchg
rcrb
iret
dec
enter
xchg
divb
je
out
jl
jb
lock
fisttpll
or
imul
or
xlat
mov
mov
push
inc
mov
fbstp
bound
cwtl
jns
lcall
xor
push
sbb
int
or
mov
push
imul
jno
jecxz
and
xor
jb
jo
les
jb
int3
lods
mov
insb
and
insl
aaa
test
pop
push
inc
incb
mov
test
sub
mov
add
sbb
sbb
andb
xchg
and
cmpsl
roll
cmp
int3
mov
mov
pusha
xchg
xchg
inc
dec
loopne
xor
sbb
in
lds
insl
push
xchg
add
inc
push
pop
xchg
mov
sbb
jmp
popw
mov
sarl
xor
loop
aas
inc
movsb
pop
mov
push
in
add
bound
pop
mov
cltd
or
int3
sbb
jbe
stos
cmp
sbb
out
nop
int3
inc
pop
outsl
mov
pop
push
mov
mov
sar
fwait
add
in
out
mov
jp
test
iret
cmp
sub
mov
lret
js
cltd
mov
mov
mov
ljmp
adc
pop
orl
dec
adc
add
stc
pop
js
outsl
shr
cmp
lahf
aad
jge
divb
fisubs
iret
xor
pop
xor
sbb
jecxz
orb
cmp
push
imul
sbb
pop
or
fistl
scas
push
xchg
mov
movups
xchg
in
jle
aaa
add
xchg
or
popa
aam
enter
lcall
subl
push
pop
push
cmp
inc
dec
pusha
data16
push
insb
pop
inc
out
mov
int
arpl
pop
js
bound
out
jp
jb
add
jecxz
insl
lcall
push
dec
pop
push
xchg
or
pop
xchg
xor
sub
or
pop
daa
adc
inc
mov
frstor
or
pop
popf
xor
gs
popf
fadd
push
mov
int3
xchg
adc
adc
xchg
adc
outsb
imul
stos
cmp
mov
sub
insl
fucomp
inc
cmpsb
cmp
movntps
sahf
mov
sbb
scas
pop
fisubl
pop
js
outsb
jo
sub
adc
in
sub
jp
ja
sbb
and
fs
or
add
fldcw
sahf
add
sub
add
xchg
adc
mov
push
in
xchg
mov
xlat
push
imul
adc
pop
icebp
movsb
and
insl
es
dec
or
dec
sub
ljmp
das
and
loope
loopne
fsub
jo
lock
push
out
xchg
fsubrs
adc
mov
jo,pt
push
nop
xchg
insb
in
fstl
dec
dec
lcall
sbb
mov
inc
loope
dec
cmpb
pop
push
xor
mov
aas
je
cmp
stos
push
ret
neg
pop
and
ja
fidivl
shl
or
xchg
icebp
and
dec
mov
jge
add
push
pop
and
or
lds
stos
push
push
mov
jb
int
lret
subb
dec
jbe
jg
and
push
inc
and
pop
fsubs
mov
pop
sbb
dec
mov
fsubrl
in
imul
mov
and
outsl
into
mov
inc
cmp
mov
enter
enter
xchg
notb
dec
dec
int
and
push
dec
push
jnp
mulb
or
imul
insl
or
clc
xchg
pop
pop
cld
iret
cmpsl
xchg
rcll
std
mov
add
and
adc
xchg
add
je
out
pop
jg
out
mov
imul
fucom
mov
pop
cmc
loop
sbb
cld
dec
mov
pop
sub
inc
xchg
in
addr16
pushf
dec
push
pop
jle
or
xchg
xchg
call
xchg
movsb
loope
subb
aaa
push
add
add
lcall
les
cmpsl
sub
into
jb
outsb
nop
das
jnp
shll
ja
cmc
sub
icebp
mov
and
addb
push
adc
lret
fcompl
xor
xchg
bound
test
cmp
popa
inc
mov
lea
mov
cmp
jb
mov
and
pushl
bnd
and
out
sub
fistl
movsb
add
mov
ja
push
fucomi
add
lret
mov
mov
outsb
dec
inc
sbb
jno
pusha
scas
stc
dec
call
jbe
xor
inc
inc
inc
push
and
mov
imul
xchg
adc
fistps
popf
aas
sub
lret
jl
fadds
jne
and
mov
cmp
sahf
dec
add
sub
scas
imul
push
pop
xchg
mov
call
ror
and
in
xchg
mov
inc
lock
fcomps
les
pop
shll
sub
cwtl
add
stc
iret
or
in
ljmp
or
stos
mov
adc
pop
xchg
jg
pop
dec
cmp
mov
jp
push
gs
fistl
cwtl
leave
pop
mov
adc
fs
ficoml
mov
or
xor
mov
or
stc
sub
add
fcom
aas
repnz
jne
jne
cmp
xchg
dec
dec
shll
sbb
adc
in
mov
inc
ret
fs
push
or
xchg
insb
xchg
mov
jno
ljmp
popl
cmp
nop
pop
cltd
ret
sahf
imul
jmp
faddp
add
hlt
push
or
xchg
mov
ss
fsubrs
adcb
xchg
mov
add
mov
nop
in
dec
mov
xchg
mov
add
xor
movl
repz
sbb
push
pop
call
push
pop
sub
insb
jbe
xchg
sahf
insl
and
jne
xor
pop
cmp
pop
mov
sub
lret
inc
adc
pop
xchg
stc
shrl
jb
push
cld
pop
stos
xchg
outsb
cmpsb
std
scas
clc
pmulhuw
out
stos
and
or
inc
jle
sub
sbbl
enter
xchg
mov
jp
xchg
test
xor
dec
daa
mov
divb
jmp
pop
rcl
inc
mov
jmp
leave
enter
rcl
jp
enter
cmp
sub
cmp
xchg
xor
sub
ljmp
pop
pop
cmp
mov
xchg
fsubl
pop
dec
cltd
add
fimuls
jmp
add
sub
xor
fsubrl
dec
lods
ret
jne
and
fcmovnbe
insl
in
enter
jno
fldcw
enter
mov
cli
push
pop
ficomps
pop
lret
sub
pop
pushf
and
lcall
insl
xor
push
mov
jmp
or
pop
jae
arpl
push
loop
test
fwait
enter
pop
push
cltd
xchg
mov
dec
and
mov
insb
jge
mov
xor
roll
mov
jno
fnstsw
pop
aad
inc
fdivrl
mov
pop
pop
cmp
nop
pop
jne
icebp
adc
pop
cmp
cmpsl
add
jl
scas
or
pop
sti
js
push
pop
movb
sbb
in
mov
lods
out
jno
fistpll
inc
iret
jo
js
xchg
pop
rcrl
fcmovnb
push
push
and
addr16
popf
cmp
jae
adc
cli
cmc
arpl
insl
orl
inc
in
jle
outsb
adc
insb
test
xor
sbb
mov
xlat
or
out
xor
jo
dec
iret
adc
inc
lret
out
mov
pop
and
xlat
pushf
shl
push
and
loop
idivb
add
es
fadd
in
jnp
movsb
dec
dec
dec
xchg
out
pop
test
fcomps
popa
mov
fistpl
jne
mov
out
sbb
mov
mov
ja
loopne
cmpsl
inc
stos
imul
inc
push
test
fwait
jns
add
xor
adc
jo
call
jmp
mov
mov
adc
push
jle,pt
mov
jno
aaa
mov
adc
pop
aaa
sub
cmpsl
sub
test
hlt
test
pop
xchg
aam
mov
jnp
int
clc
adc
outsl
cmp
out
mov
pop
pop
or
sbb
sahf
das
negb
or
aad
lcall
popa
cmp
xchg
sbb
hlt
divb
add
adc
clc
xchg
xchg
ljmp
and
aam
cmp
push
nop
xor
int3
fists
leave
or
xor
lret
lahf
xchg
cmp
sub
imul
sub
mov
ret
jle
pushf
add
sub
insl
clc
lcall
push
into
xchg
pop
mov
dec
int3
cmp
xor
outsl
sub
mov
cwtl
and
xor
xchg
in
adcl
or
jbe
sub
adc
inc
and
into
fdiv
adc
cmpsl
jg
xchg
lret
mov
cmc
test
mov
cmp
cli
rcrb
lods
sub
cmp
inc
mov
mov
and
push
rclb
add
aad
movb
adc
pop
gs
loopw
decl
push
test
test
fidivs
push
sbb
ja
hlt
pop
cmc
mov
jl
imul
mov
lds
cmpsb
aas
fs
or
adc
push
cmpsl
clc
sbb
inc
cmp
pop
in
or
pop
cmp
fistpl
outsl
repz
or
pop
inc
xchg
shlb
jnp
mull
mov
xor
add
mov
adc
push
ret
pop
jo
push
lahf
inc
push
lea
test
loopne
sti
and
or
icebp
inc
fdivs
ds
pop
pop
jmp
int3
fldenv
pop
sbbb
adc
fistps
nop
jmp
mov
push
rolb
xlat
pusha
xchg
lods
dec
inc
js
cmp
lods
add
or
mov
lock
adc
sarl
mov
shlb
push
mov
in
outsl
addb
fists
dec
repz
dec
clc
pop
sarl
sub
jno
lock
mov
xor
arpl
inc
negb
inc
sbb
mov
add
jge
and
and
pop
cmp
adc
ret
sbb
gs
or
rcrl
and
std
push
mov
pop
jnp
mov
pop
test
add
pusha
xlat
sbb
push
ds
leave
jne
mov
mov
dec
and
sbb
jb
dec
or
pop
mulb
and
mov
xor
inc
rorl
xor
iret
pop
or
test
mov
sub
out
xor
adc
outsb
cmp
inc
push
in
loopne
mov
xchg
inc
xchg
mov
sbb
imul
add
ss
lahf
popf
mov
add
int
or
out
jl
mov
pop
push
pop
inc
ja
xchg
addl
test
les
sub
adc
or
out
push
lret
or
shl
pop
rcl
pop
sbb
sbb
dec
stc
lock
xchg
jle
shll
int3
out
inc
in
cmp
stos
lahf
add
and
lahf
push
push
sbb
or
es
les
arpl
outsb
push
jb
push
stc
jle
adc
inc
sub
jg
adc
loopne
or
out
or
adc
hlt
push
mov
ss
jecxz
shll
pop
out
xor
xchg
in
push
sub
cmp
std
mov
in
add
faddp
pushf
fsts
adc
dec
ja
jbe
test
jmp
ja
sbb
cltd
xor
add
sub
jo
hlt
insb
sbb
push
add
ss
push
push
lock
pop
int3
and
dec
subb
ficompl
xor
mov
jo
dec
add
inc
popf
jb
test
or
push
add
xor
xor
pop
test
lret
mov
ja
mov
je
mov
add
enter
cmp
mov
inc
add
jbe
jge
loope
adc
jmp
mov
or
pop
or
jo
sbb
rcrb
dec
push
insb
ret
mov
es
dec
add
iret
dec
sub
mov
jp
out
sub
add
inc
lock
sub
push
lods
ret
jmp
stos
inc
fwait
pop
pop
test
mov
shll
xor
addl
adc
push
jecxz
daa
sbb
out
add
out
push
adc
xor
repz
xor
mov
pushf
and
pop
cwtl
in
push
mov
mov
or
pop
dec
xor
mov
fcom
loop
sub
mov
or
sbb
test
dec
dec
mov
and
ficoml
jle
sbb
out
jnp
xlat
pop
sub
jmp
cmp
inc
fists
dec
lret
loopne
clc
mov
imul
sbb
xchg
push
push
push
insl
xor
adc
shl
or
stos
loope
push
sti
pop
loopne
adc
in
scas
fcoml
adc
iret
icebp
dec
add
cmpsb
lret
xor
aam
mov
dec
in
push
sbb
add
and
cmp
movsb
pop
cmc
ret
push
sbb
ja
dec
mov
rolb
jo
xor
popa
cmpsb
sbb
mov
xchg
dec
add
inc
cmp
dec
enter
lcall
adc
mov
test
pop
in
lds
dec
sahf
lods
notl
cmp
out
pop
jmp
lock
aam
sub
repnz
cmp
and
xchg
leave
add
dec
pop
sub
dec
mov
lcall
push
dec
cli
xchg
out
push
scas
add
pop
add
pop
int3
rorb
jo
mov
daa
test
add
push
sbb
shll
mov
divb
in
in
cwtl
addr16
mov
push
cmc
xorl
or
mov
out
push
repnz
test
push
cmc
push
xchg
pop
sbb
mov
pop
into
pop
fldt
fisubl
cli
dec
cmc
je
cmpsl
sub
in
add
icebp
xor
mov
movsl
fwait
pop
sbb
into
and
mov
movsb
jbe
sbb
movsb
mov
jg
fwait
rorl
sahf
fimull
pop
mov
push
into
aaa
sbb
jge
idivl
popf
popa
or
incl
int3
lcall
jl
jl
mov
je
je
xchg
push
mov
cmp
pop
jge
sub
popf
lea
fstp
pusha
lods
cwtl
inc
lds
mov
out
ja
push
icebp
test
scas
lahf
addr16
hlt
sbb
sub
cwtl
clc
sahf
stos
push
ss
loopne
icebp
leave
and
jl
in
mov
mov
sub
jecxz
dec
push
cmp
push
shl
fldcw
mov
xchg
loop
sbb
pushf
mov
mov
and
out
cmc
sbb
push
divl
or
lock
mov
mov
pop
push
jecxz
push
or
mov
pop
adc
es
lods
outsl
mov
sbb
movsl
into
sbb
andb
aam
shlb
rcr
mov
pusha
inc
mov
rcll
push
shrl
shr
mov
dec
daa
notb
jp
jl
leave
es
lahf
pop
enter
mov
jb
push
fisttps
push
sahf
xchg
adc
fidivrl
lret
js
fidivs
dec
mov
int3
adc
add
inc
pop
lret
xor
mov
cmp
jge
ret
jmp
push
inc
xchg
dec
popf
daa
movsl
mov
inc
in
popf
or
sbb
ret
push
in
sub
push
repz
int3
mov
xchg
xchg
out
stc
ret
mov
aam
xchg
jle
dec
movl
mov
add
push
out
mov
jg
aam
pop
fcomp
int
iret
push
hlt
adc
das
cmp
imul
leave
pushf
sahf
movsl
jbe
leave
jo
pop
sub
cmpl
aad
lret
sub
loope
jp
testb
in
adc
in
cwtl
jnp
in
jae
xor
and
add
outsb
movsl
pop
lcall
pop
mov
popf
repnz
leave
mov
mov
cmp
add
dec
push
xor
in
insb
mov
lds
loopne
psrld
push
loop
lock
xchg
add
cmp
mov
cmp
jle
or
mov
push
mov
in
ficoml
popa
xor
ds
inc
in
enter
fs
xchg
scas
push
pop
out
adc
mov
sbb
push
jge
nop
inc
mov
movsl
push
test
shr
popa
push
pop
lret
shlb
fsubrl
jecxz
ret
in
fisubs
mov
dec
mov
add
cmp
shll
mov
shrl
cltd
pop
dec
out
and
sbb
ret
mov
stos
jne
jne
adc
cli
lret
mov
jae
test
dec
cmpsb
xor
push
test
enter
inc
pop
sub
sub
addl
pop
jecxz
ja
sti
popa
out
sbb
cli
or
mov
push
pop
or
fistps
pop
fldenv
in
cmp
inc
pop
adc
xlat
jmp
or
push
cmpsb
adc
mov
cmp
jge
out
stos
pop
xlat
fdivrl
cmc
outsl
jecxz
rcrl
mov
aam
ja
add
pop
cwtl
loop
lea
call
xchg
daa
or
imul
jge
lret
stos
pop
add
test
push
lds
and
push
push
xchg
pop
sub
push
lods
sti
mov
inc
mov
add
xchg
or
mov
jno
sbb
mov
dec
jnp
mov
inc
mov
popf
sub
faddl
test
cmp
adc
sub
sbb
and
jno
mov
push
rcll
jp
dec
lock
je
mov
mov
std
mov
xchg
adc
outsl
push
pusha
mov
mov
mov
lods
ja
sbb
lea
out
aam
loope
pop
imulb
push
ret
out
mov
arpl
repnz
xchg
loope
outsb
add
inc
sub
push
cmpsb
dec
je
inc
test
in
xchg
subb
notl
arpl
mov
outsb
das
test
sar
test
pcmpeqd
adc
shufps
mov
lea
add
inc
std
cltd
lods
outsl
fcom
mov
xchg
pop
mov
je
fists
jg
lea
pushf
push
andb
push
inc
xchg
ss
rolb
in
cmp
xor
pop
arpl
aam
loop
jg
scas
ret
add
jecxz
repnz
xchg
bound
pop
mov
push
lcall
mov
add
in
test
js
add
stos
stos
sbb
cmc
dec
orb
out
nop
gs
push
sbb
gs
ja
call
aaa
mov
add
add
into
movsb
icebp
pop
std
and
adc
pushf
mov
das
cmp
clc
dec
dec
sub
adc
inc
cmp
pop
cwtl
sub
inc
in
add
mov
dec
int
test
shl
ja
inc
lahf
je
xchg
or
dec
push
inc
jp
nop
test
inc
inc
out
pusha
sub
rclb
pop
cmpsl
imul
mov
cmp
mov
fisttpl
mov
popa
dec
bound
rolb
sbb
sbb
sbb
xchg
test
jns
xor
shl
mull
xor
push
les
lea
add
int
xlat
mov
sbb
mov
mov
sbb
cmpsl
sub
cmp
jmp
dec
insb
xor
stc
or
jp
enter
scas
push
adc
sub
jns
inc
mov
push
sbb
rclb
sub
imul
and
and
add
out
sbb
mov
das
iret
jno
addr16
in
fidivrl
lret
loope
mov
mov
arpl
jbe
popa
mulb
adc
jmp
add
hlt
adc
sbb
loop
xor
test
push
adc
or
outsl
call
bound
mov
sbb
cmp
fst
outsb
ss
sub
out
jae
rolb
add
mov
sub
pop
orb
movsb
int
adc
sub
inc
clc
in
ljmp
mulb
and
pop
or
mov
xchg
add
std
sub
push
jbe
stc
xchg
sbb
cmc
rclb
cmc
cmp
sbb
rcrb
data16
or
ret
cmc
xchg
cmp
xchg
jmp
mov
jbe
pop
je
inc
cmpsb
loopne
dec
repz
mov
pop
mov
sub
mov
xchg
js
xor
push
jg
mov
pushf
test
fnstenv
sub
jnp
subb
enter
insl
stos
jp
mov
shll
push
sbb
clc
sub
lret
ss
insl
int
and
and
frstor
mov
insl
inc
fmuls
lods
cwtl
repnz
pusha
cmp
ja
leave
nop
test
jg
mov
stc
cmp
loope
adc
pop
jbe
jp
ds
in
addl
jnp
xchg
mov
pushf
inc
mov
sbb
test
scas
popf
stos
stos
insl
cwtl
jae
insb
or
jmp
jg
iret
rclb
add
ret
insb
les
xchg
pop
std
mov
add
push
cmpl
or
dec
sub
pop
aaa
jmp
shrl
lahf
pop
push
xor
adc
pop
les
lahf
jle
xchg
cld
push
das
call
lea
shl
popa
int
cmpsb
std
mov
push
test
int3
out
out
mov
shlb
int3
mov
std
mov
cmpsl
test
mov
incl
sarl
pop
adc
pop
outsb
movsb
or
pop
imul
lret
loopne
mov
paddusw
in
or
sbb
cmpsl
adc
xchg
jnp
or
inc
sbbl
xchg
add
push
bound
out
leave
sub
dec
ljmp
repz
lcall
add
js
scas
mov
dec
push
mov
cli
sbb
xor
fildl
sbb
and
outsb
aas
push
cld
shrl
xor
ret
roll
fstpl
mov
mov
mov
sahf
int
clc
pop
jge
cmp
xchg
les
mov
insl
fisubs
mov
mov
adc
sahf
lahf
ror
fstpl
hlt
hlt
shrb
mov
dec
pop
xchg
inc
inc
sbb
sahf
fstpl
xchg
das
aad
push
or
adc
mov
and
jo
sub
add
ds
mov
xor
pop
fistps
jecxz
in
nop
jae
pop
add
sub
jne
mov
movsl
iret
pop
in
or
xchg
ss
and
loopne
dec
aas
fs
das
mov
push
stos
push
in
sahf
sbb
dec
ds
into
push
aad
mov
sbb
jae
int3
pop
fdivs
test
rcll
stos
lods
and
leave
jns
adc
ja
push
dec
cmpsl
mov
iret
adc
jl
out
lcall
int3
xor
lods
int
pop
lret
add
int3
push
fucomp
ljmp
jle
xor
leave
clc
or
icebp
pusha
mov
lahf
cmpsb
sbb
test
insl
jne
cmp
arpl
dec
test
arpl
aad
inc
sti
in
fucomip
mov
inc
mov
in
movsb
dec
das
loopne
lock
stos
mov
and
lds
ret
mov
sbb
test
and
xor
and
push
loope
rclb
push
into
mov
int3
mov
or
divb
or
mov
imul
push
dec
cmp
adc
add
andl
pusha
push
gs
ret
or
pop
mov
imul
in
mov
ret
and
inc
test
shlb
arpl
jns
into
mov
mov
loopne
pop
orl
aad
mov
push
mov
xchg
xchg
mov
aaa
cmp
outsb
dec
xchg
jb
dec
popa
movl
jle
fucomi
aad
lock
negl
adc
pop
lcall
addl
out
jl
shrl
imul
mov
cmp
pop
cmpsb
dec
mov
mov
inc
cli
jmp
pop
jno,pn
pop
mov
inc
stos
cmp
xor
sub
outsl
sub
arpl
push
push
adc
mov
jle
xchg
ds
pop
data16
sub
sub
call
cmp
dec
xchg
popa
scas
leave
push
js
out
fnsave
dec
add
outsl
push
push
pop
jecxz
insl
pop
mov
push
scas
lret
out
ret
push
iret
mov
into
cltd
es
insb
jle
xchg
xor
mov
xor
loope
mov
out
call
insl
add
xor
cmp
mov
cmp
shrl
sub
in
fwait
dec
mov
enter
cmp
pop
jp
lods
aad
jb
adc
movsb
fisubs
and
mov
test
mov
scas
cmp
pusha
fstps
push
mov
push
addl
add
inc
add
gs
ds
movb
orl
mov
outsl
pop
mov
mov
std
dec
flds
jp
mov
sbbb
js
dec
gs
dec
inc
aad
sbb
mov
mov
movsl
scas
movl
das
fsubl
xlat
lahf
cmp
in
mov
mov
popf
loope
jle
sub
jp,pt
popf
dec
mov
jg
lock
js
pop
jbe
nop
pop
push
sub
stos
push
dec
mov
dec
xor
push
pop
xchg
daa
dec
sti
cmp
aam
iret
mov
xor
mov
and
pop
pop
inc
inc
je
leave
and
inc
sbb
cltd
xorb
je
sti
js
sbb
mov
stos
xlat
lret
lea
jp
inc
out
orb
push
mov
fisttps
arpl
adc
xchg
xchg
in
cmpsb
inc
sbb
mov
leave
cli
or
fldenv
jno
popf
iret
movl
mov
push
push
mov
mov
add
mov
push
fwait
xchg
pop
js
fiaddl
xorb
sbb
subl
pusha
push
mov
jmp
and
xlat
xlat
imul
ja
inc
adc
dec
cmpsb
lret
lcall
popf
test
testl
filds
xor
test
lret
dec
sbbl
push
or
adc
lcall
aas
mov
fwait
jp
fldenv
or
pop
jnp
repnz
xchg
xlat
out
mov
adc
test
pusha
adc
cld
xor
in
dec
jns
push
xchg
dec
inc
stc
or
out
insl
xorb
push
mov
sahf
sbb
sub
mov
outsb
sbb
push
push
jns
stos
pop
pop
mov
jb
in
mov
sub
push
pop
push
popf
xlat
lcall
pop
push
push
sub
mov
enter
leave
mov
jbe
lret
ret
mov
inc
ja
pop
xchg
sbb
dec
out
cmp
cwtl
outsb
mov
jmp
in
jns
jle
sbb
testl
lret
cmp
lds
mov
sbb
jae
mov
jge
out
sbb
dec
push
mov
pop
mov
bound
mov
inc
cmp
pop
mov
cwtl
lods
pop
dec
std
adc
jo
fwait
and
push
mov
or
dec
add
push
mov
add
and
inc
sub
inc
and
and
out
lea
add
int
adc
lret
sbb
repz
xchg
inc
jns
sbb
pop
mov
out
mov
lods
push
xorb
xchg
rol
popf
in
cmpsb
movsb
testl
jecxz
jecxz
pop
fistps
int3
repnz
loope
loope
jmp
inc
dec
push
and
xorl
sti
sbb
xor
or
lahf
xor
movl
mov
push
dec
push
ret
sar
popa
insb
ss
int3
fnstcw
js
es
mov
xor
outsl
pop
jmp
cmp
and
daa
fstpt
sbb
mov
sarb
fidivs
xor
mov
stc
mov
js
mov
leave
cmp
je
dec
les
je
mov
push
pop
and
mov
dec
xor
mov
andl
ds
add
xchg
arpl
movsb
mov
sub
mov
rcr
xchg
rol
or
stos
adc
xchg
repz
xor
dec
dec
idiv
jae
jb
inc
test
adc
inc
dec
movsb
nop
pop
cmp
ss
cmp
fwait
jp
pop
cmp
bound
lods
or
cmp
dec
movsb
jae
pop
add
push
adc
stos
mov
and
mov
shrl
popl
inc
mov
pusha
dec
xor
aaa
movsl
push
les
xchg
out
jno
dec
sub
cmp
mov
out
inc
push
mov
inc
ja
aaa
ds
lea
gs
jo
pop
inc
sbb
xor
inc
cmp
aam
mov
inc
push
adc
push
mov
mov
lds
sub
mov
or
push
daa
sub
mov
sbb
pop
sbbb
mov
push
cmc
fcoms
outsb
mov
or
xchg
cmp
add
ljmp
xchg
dec
mov
inc
stos
xchg
filds
gs
repz
xor
bound
rcrb
into
jl
gs
fidivrl
lret
mov
pop
mov
ret
subb
add
xchg
test
les
inc
adc
add
push
xor
pop
mov
iret
imul
dec
dec
xchg
ss
fstpl
cmc
scas
pop
mov
enter
bound
sbb
ret
jns
insb
gs
pop
lods
fwait
pop
pop
enter
cld
mov
lods
lods
xlat
ret
inc
ret
movl
bound
mov
into
push
xchg
and
cld
jp
mov
jbe
clc
stos
mov
daa
mov
ss
lahf
jo
in
sbbl
ljmp
and
popa
in
cmp
jae
lret
sub
mov
push
je
icebp
inc
out
cmp
mov
add
jns
or
sub
xchg
inc
test
stc
push
jne
lds
fs
inc
cmp
or
outsb
movsl
inc
in
inc
mov
cmp
mov
xchg
sbb
xchg
je
push
dec
jle
movsl
fldenv
int3
imul
loopne
sub
inc
cmp
or
xor
cmc
sub
ljmp
dec
xor
inc
sbb
push
lahf
dec
out
and
jle
popf
mov
addr16
stos
out
cmc
adc
sub
jge
xchg
pusha
fdivrs
inc
out
into
fldt
mov
fldt
bound
shll
aam
push
dec
iret
lret
ret
add
add
push
stos
push
adcb
stos
dec
cmp
test
cmp
sub
inc
push
xchg
filds
cwtl
mov
loope
xchg
ret
shlb
mov
cli
cld
mov
in
xchg
lret
test
push
or
cmp
jne
loopne
mov
mov
xor
arpl
pop
add
xor
lods
sub
sbb
adc
sub
int3
mov
inc
lret
and
dec
test
lock
xor
sub
inc
push
pop
icebp
mov
inc
dec
or
shrl
call
scas
push
cs
in
jl
xchg
xchg
push
in
daa
pop
out
sti
leave
sub
sbb
jb
aam
mov
mov
ret
inc
sub
mov
es
adc
mov
jnp
aam
sbb
ds
dec
sub
daa
xchg
daa
int
xchg
dec
pop
je
out
rcll
fidivrs
lds
jne
dec
push
or
xchg
gs
int3
add
jbe
or
mov
push
xor
lcall
lods
jne
sbb
stos
rcll
or
aam
cmp
les
jb
xchg
rcll
mov
mov
or
and
mov
jo
sub
cltd
mov
repz
adc
inc
mov
inc
imul
addr16
js
sub
pop
cmpsl
mov
mov
fs
add
test
call
ret
out
cmp
out
pushf
mov
lea
dec
shll
popf
lret
cmp
aaa
clc
cld
lret
subb
mov
movsl
inc
js
dec
lahf
int3
ds
call
pop
mov
fwait
gs
or
outsb
jno
in
lret
je
cmc
repz
test
insb
and
hlt
insb
nop
clc
mov
jl
ret
ljmp
inc
or
rclb
fsubl
cld
add
mov
sbb
mov
or
daa
sbb
into
pop
popa
sub
bound
jg
xchg
test
and
scas
push
jo
lret
inc
addl
test
sub
js
daa
movsb
movsl
sbb
xorb
adc
mov
mov
jnp
pop
mov
mov
adc
pop
pop
outsb
test
sub
pop
add
or
adc
adc
or
mov
out
stos
cmp
xor
outsb
pop
pop
orb
rorb
inc
push
loop
dec
and
mov
adc
lods
test
into
push
test
and
cs
add
mov
add
add
aas
mov
or
push
mov
fs
mov
cmove
sti
push
fisttps
inc
push
cmpsb
adc
mov
jo
aad
jne
sbb
pop
enter
push
xlat
xchg
imulb
iret
pop
mov
push
lcall
mov
and
dec
ret
mov
iret
inc
fiadds
outsl
xor
pop
inc
cmp
rcrb
push
loope
stos
cs
xchg
xchg
add
or
push
sub
js
in
dec
and
test
inc
pop
sub
rcll
lea
test
sbb
cs
jb
pop
add
rorl
dec
shrl
push
cld
pop
mov
mov
push
adc
pop
leave
arpl
mov
inc
pop
lea
cmp
and
jp
and
ja
outsl
std
call
inc
pop
out
lcall
mov
fstps
icebp
flds
add
lds
sub
push
add
dec
stos
bound
xor
jns
push
lea
movsl
lcall
aam
mov
push
mov
jno
out
mov
pop
in
repz
int3
xchg
fisubrl
loope
dec
and
in
in
in
test
add
and
je
push
pop
daa
jo
ja
inc
sub
test
pop
jl
add
loope
outsl
jnp
xchg
out
mov
out
mov
jle
dec
xchg
jge
mov
mov
data16
insl
inc
add
test
test
ja
aas
in
call
xchg
xchg
hlt
mov
mov
and
hlt
aam
cmp
push
movsl
pushf
lret
push
loope
xchg
push
pushf
adc
out
or
out
cmpsl
arpl
jle
jnp
ljmp
loopne
sub
movsb
rcrl
xor
ja
xor
xor
es
stc
mov
imulb
jne
push
pop
and
inc
movsl
jmp
adc
mov
adc
inc
out
sub
iret
jbe
mov
add
fs
mov
push
pusha
pop
imul
rcl
mov
adc
clc
mov
pop
dec
jbe
testl
popa
mov
rcl
fcompl
push
ljmp
jnp
inc
push
inc
pop
addb
add
adc
and
divl
dec
mov
dec
cmp
or
mov
push
push
mov
pusha
fistpl
inc
mov
push
nop
rcl
pop
leave
cmpsl
imul
add
test
jo
gs
pop
das
das
jo
ficompl
cli
das
loop
out
dec
mov
mov
subl
imul
jne
sarb
or
and
jb
lea
lret
xor
dec
mov
ror
jle
mov
int3
sbb
lret
sahf
js
loopne
lcall
cmp
ja
and
dec
cli
rclb
out
dec
addl
jns
mov
push
xor
out
push
loop
add
les
adcb
fidivrs
push
shr
test
mov
mov
adc
xor
outsb
out
cmp
push
clc
sbb
or
fcomi
push
out
pop
cwtl
imul
fs
shrb
mov
or
orb
sahf
jns
movsb
repnz
outsb
cmpsl
lret
popa
jp
aas
sbb
call
bound
fdiv
sbb
loopne
and
leave
xchg
mov
mov
pop
popf
pop
jl
icebp
push
lods
shlb
sub
inc
inc
addr16
sbb
std
arpl
jge
in
inc
lock
xchg
jb
fnstenv
jno
sub
js
xchg
subl
mov
and
popa
dec
mov
mov
and
div
fldenv
cmpsb
dec
sub
sarl
jns
inc
add
dec
mov
mov
repnz
movsb
clc
aaa
or
dec
arpl
adc
jns
imul
addr16
jnp
mov
into
xchg
sub
mov
push
mov
xchg
into
xlat
ficoms
pop
fsub
ss
mov
rcrb
jecxz
pop
push
pop
stos
ret
test
xchg
jl
adc
cwtl
adc
inc
mov
inc
cs
mov
popf
gs
jecxz
and
iret
imul
in
movsb
daa
mov
push
aas
shll
adc
stc
sub
dec
push
or
mov
or
rcrb
jnp
aas
sahf
cmpsl
stos
push
mov
shl
cs
roll
pop
int3
inc
gs
daa
das
insl
sbb
cli
int
push
mov
cmp
jg
daa
repnz
mov
sbb
lfs
fcomi
and
and
insl
inc
push
loop
ja
repnz
mov
pop
push
incb
enter
dec
subl
ret
icebp
sub
jmp
mov
aam
sub
rcr
pop
enter
fsubl
lret
leave
test
pop
stos
les
xchg
aam
arpl
jge
cmp
ljmp
loopne
fstpt
mov
inc
push
xchg
push
dec
inc
and
push
sbb
lods
cs
lret
stc
adc
jecxz
push
push
shr
pop
sti
and
daa
jno
addl
inc
push
xor
jne
aad
adc
test
adc
sub
xchg
xor
nop
xor
push
fmul
push
in
push
lods
pop
ret
fbstp
add
sub
cmpsl
jbe
loop
test
cmpsl
in
popa
mov
mov
pop
push
sub
add
inc
push
jp
lret
jns
adc
push
mov
es
and
addl
orl
testl
fcoml
enter
scas
pop
stc
js
movsl
into
adc
cmc
jmp
add
or
push
sbb
push
pop
xlat
sahf
cmc
mov
inc
mov
lret
cmpsl
icebp
in
mov
xlat
inc
mov
inc
out
aad
lds
arpl
outsb
pop
hlt
outsl
inc
xor
in
cmp
add
cs
push
loope
hlt
js
and
sbb
aam
inc
sbbl
mov
nop
or
mov
ret
mov
xchg
or
hlt
ss
sub
xchg
add
sti
insl
push
fisubrl
in
popa
icebp
rcl
xchg
ljmp
pop
mov
imulb
mov
repz
inc
and
popf
fwait
jno
mov
lock
cli
jbe
xchg
aaa
inc
push
cmp
lret
imul
dec
rorb
aas
lret
jmp
mov
mov
xchg
xor
mov
in
push
add
push
cli
add
mov
sbb
add
or
jb
hlt
js
loop
call
insl
lcall
movsb
cwtl
in
cmp
clc
lea
mov
sub
lahf
rol
in
sbbl
xchg
push
pop
lret
lret
pop
pop
stc
loope
std
iret
dec
insb
jmp
jmp
mov
xor
out
ljmp
jmp
test
push
ror
into
lea
add
mov
and
mov
rorl
push
fstpt
loop,pt
sbb
repnz
popa
jno
sahf
mov
jne
nop
mov
mov
aas
shl
pushf
add
adc
scas
xchg
cld
gs
fsub
inc
sahf
push
sbb
ljmp
lret
daa
sub
pop
fwait
lret
jnp
add
adc
loop
std
ds
jp
loopne
push
add
cs
add
jns
sbb
pop
ficoml
inc
mov
ss
jbe
fmul
test
or
sub
mov
loop
add
or
cltd
add
jmp
inc
sbb
dec
jecxz
pusha
paddb
ret
std
les
push
dec
push
in
js
jl
dec
imul
movsb
adc
fs
jecxz
jp
xor
add
sub
mov
and
jecxz
iret
cmp
cmpsl
call
push
pop
push
or
popf
inc
sarb
rorb
jge
push
mov
jnp
add
adc
bound
lock
dec
insl
mov
fucomp
outsl
xchg
cli
or
cwtl
pop
dec
inc
in
fstps
fdivrl
fcomp
pop
sub
adc
mov
gs
inc
movsb
shl
lret
jle
or
lock
dec
cmp
jg
pop
and
mov
insl
mov
push
lock
cld
fwait
dec
push
and
dec
adc
jbe
add
dec
push
bound
insb
jb
aaa
jne
adc
xor
mov
inc
fdivp
mov
icebp
test
mov
xlat
push
and
cs
js
push
sti
jae
xchg
inc
jnp
fidivl
faddl
pop
add
fadds
fidivs
icebp
psubusb
mov
sbb
mov
std
imul
shrl
call
movsb
mov
push
clc
stos
lret
loop
cmp
xor
imul
xchg
push
insl
test
sub
adc
jmp
dec
mov
cmp
repnz
add
sub
jmp
jle
out
lcall
mov
cld
cmp
imul
mov
cmp
sub
xlat
mov
call
lock
jp
in
outsl
push
jl
push
push
cltd
xchg
das
sbb
rclb
popa
std
ficoms
out
stc
add
ror
jbe,pt
push
hlt
notb
sti
push
mov
shl
xchg
sbb
insb
scas
repz
mov
xchg
inc
insl
add
xchg
outsl
add
mov
xchg
fwait
out
mov
pop
std
scas
ret
dec
xor
inc
inc
mov
testl
xchg
in
ret
mov
in
movsb
outsb
sub
pop
out
rorb
rep
jne
inc
push
ret
jne
adc
mov
push
addr16
orl
jle
mov
jmp
sub
nop
sub
lret
mov
sub
mov
lret
add
insl
inc
jae
movsl
inc
adc
jmp
pop
fsubrp
mov
pushf
adc
enter
imulb
fwait
pop
mov
aam
dec
push
inc
pop
jp
sbb
in
or
stc
jp
dec
xchg
out
sarb
or
fnstenv
pop
pop
pushf
and
pop
sbb
ret
jns
aaa
je
inc
lret
jl
add
movsb
movsl
cld
sti
pop
xchg
mov
flds
fadds
repnz
fwait
push
data16
sbb
dec
icebp
push
and
pushf
cmc
add
or
mov
pop
incl
shll
mov
sbb
adc
mov
dec
push
lahf
push
and
mov
fscale
and
je
popf
subl
add
cltd
pusha
into
mov
aas
xor
cltd
rolb
push
cwtl
mov
sub
or
pop
dec
scas
and
push
mov
mov
imul
mov
mov
pushf
or
call
jne
rorl
add
lret
out
mov
fisttpl
rcrb
mov
push
out
shll
inc
stos
jp
jle
fcomp
pop
mov
xor
cmp
js
xchg
sbb
imul
push
jp
xor
add
pop
cli
gs
outsl
pop
out
sbb
sbb
jb
pop
mov
fsubs
cmp
lret
gs
stos
test
xchg
xchg
imul
sub
or
in
icebp
cs
out
inc
lods
outsb
jae
dec
pop
hlt
sbb
loope
push
test
jb
adc
mov
outsb
std
clc
mov
mov
lret
dec
xor
adc
jmp
mov
mov
mov
inc
xchg
mov
push
push
mov
jbe
les
dec
cli
repnz
push
sub
jne
ret
xchg
in
mov
nop
lock
and
in
jle
cmp
mov
dec
cld
xchg
leave
out
mov
and
mov
adc
pop
sub
cmp
dec
sbb
inc
push
loope
or
mov
out
add
shrb
jne
inc
or
xchg
xor
dec
mov
loope
call
lahf
inc
loop
aas
stos
and
in
inc
sub
xor
into
or
imul
xchg
adc
push
data16
xchg
stos
xchg
out
shlb
fdivrs
movsl
rcrl
sub
jmp
mov
jmp
shlb
cltd
xchg
aaa
daa
pop
or
test
dec
mov
jne
addr16
sub
and
mov
jmp
dec
test
mov
mov
nop
movsb
dec
lahf
out
inc
insl
pop
shlb
mov
sub
push
arpl
daa
jbe
insl
jnp
push
ss
fbstp
or
mov
cltd
test
sbb
fmull
xchg
test
dec
and
stos
ja
mov
cmp
xchg
xchg
and
xchg
clc
push
xchg
push
sub
mov
sbb
gs
mov
pop
sti
fstp
mov
adc
pop
push
imul
std
in
int
and
loopne
cmp
and
xchg
pop
out
ret
and
sbb
inc
rorb
repz
aaa
push
lods
hlt
mov
in
insl
cmpsb
xchg
xchg
or
jne
aad
push
mov
mov
pusha
push
js
cmpsb
and
dec
adc
dec
call
push
add
pop
out
dec
jns
fwait
scas
push
addr16
cwtl
fimull
test
adc
mov
pop
js
xchg
sbb
lret
jno
xor
lret
scas
adc
or
xor
xor
sub
imul
mov
daa
fsts
sbb
cmp
nop
push
iret
cmp
not
jp
scas
jl
push
push
iret
pop
jle
movl
stc
rorl
add
fxch
cmp
outsb
jmp
mov
mov
adc
dec
adc
gs
mov
roll
jp
jae
push
stos
push
lea
add
scas
pop
daa
out
test
sarl
dec
sbb
cmovle
hlt
ret
insb
pop
fisttpll
pushf
xchg
fwait
mov
inc
sub
push
push
cmc
fistpl
es
fs
loopne
mov
jb
jb
pop
daa
mov
lcall
xchg
fmuls
aam
js
scas
mov
repnz
cwtl
scas
insb
hlt
push
dec
cmp
push
add
in
and
fldl
int3
adc
es
pop
jecxz
and
mov
xchg
jg
imull
pop
inc
mov
call
adc
or
scas
rcll
sbb
in
jp
in
pop
mov
push
out
out
int
or
push
mov
rolb
cmpsl
fwait
sbb
repnz
jmp
cmp
jnp
xchg
sub
mov
dec
sbb
int3
leave
inc
jnp
lds
cmp
sbb
xchg
xchg
and
mov
loope
dec
xor
out
enter
lds
jl
les
mov
pop
dec
mov
outsl
mov
mov
pop
loop
sbb
repnz
push
fs
cmc
jb
add
mov
push
mov
push
xchg
cmp
pop
test
push
rorl
fpatan
test
push
xor
and
cs
stos
pop
in
dec
aad
ljmp
pop
add
cld
dec
in
in
filds
loopne
scas
movl
pop
nop
in
inc
sub
dec
jecxz
mov
adc
repz
dec
jb
jno
loopne
push
test
hlt
js
jno
adc
and
lods
lea
pop
movsb
or
and
sub
cltd
xchg
ret
dec
mov
lds
adc
icebp
aam
dec
addr16
cmc
cmp
jecxz
push
cmp
lds
in
sub
aam
or
add
mov
imul
pop
inc
out
and
into
add
mov
xor
sub
add
jle
imul
mov
mov
stos
pop
fs
popf
push
stos
push
xchg
and
test
sbb
sbb
aad
mov
xchg
inc
mov
jae
xchg
xchg
sti
loop
push
dec
je
ja
insb
test
xor
mov
scas
cs
ret
add
cmp
mov
pop
cmp
adc
inc
xor
adc
mov
incl
mov
sbb
incl
dec
adc
xor
pop
test
add
and
and
je
push
jp
stc
mov
xor
imul
xor
jnp
lds
cmc
dec
jo
or
shl
popl
push
push
lea
push
jl
inc
jb
popa
pop
xchg
dec
inc
adc
and
arpl
hlt
aas
sub
cmp
sub
jae
mov
nop
pop
push
test
in
adc
and
push
cmp
lods
dec
sbb
sbb
mov
mov
or
les
daa
aam
pop
loope
pusha
cmp
sbb
jle
sbb
add
mov
test
pusha
and
push
imul
insb
pop
icebp
jmp
cmp
push
rorb
add
mov
cmpsb
inc
jbe
aad
xor
mov
dec
add
bound
jne
roll
lcall
fdivs
test
and
cmc
add
pop
push
or
cmp
mov
out
int
cmp
roll
cmpsl
xor
dec
daa
les
popa
jo
or
mov
push
sti
popf
mov
sahf
pop
xchg
add
popf
outsl
ret
xchg
sub
sbb
ja
pop
dec
sub
push
hlt
push
sub
xchg
push
sub
out
or
jae
lret
bnd
or
imul
adc
or
cmpsl
cmpsl
jmp
pop
sbb
shll
int3
xlat
xchg
in
xchg
rcll
in
push
rclb
jne
stos
sub
test
cmp
leave
inc
sti
cld
mov
out
or
inc
cwtl
std
push
cld
push
mov
xorl
lods
js
lods
aam
scas
jg
jp
enter
push
mov
js
into
mul
sbb
push
cmp
xchg
adc
jns
fimuls
dec
mov
lret
adc
lcall
pop
pusha
mov
push
push
addr16
or
lahf
test
fdivrs
and
inc
add
rorl
rcrl
sbb
add
push
bound
jno
in
pop
outsl
xor
xor
mov
data16
adcl
cmpsb
addb
mov
outsb
sub
xchg
push
dec
stc
push
mov
add
pop
in
add
outsb
xor
adc
out
pusha
mov
shll
fdivrs
or
sti
negl
pop
jg
loope
fdivl
pop
lret
cmp
imul
mov
pop
push
dec
xchg
dec
lcall
xor
lcall
push
sbb
jg
add
cmpsb
or
insl
test
insl
mov
ret
jno
in
out
cli
stc
dec
dec
arpl
cmp
fldcw
test
gs
pop
push
mov
hlt
pop
sti
in
cli
cmpsb
mov
nop
push
jl
mov
sub
mov
mov
popf
inc
cmpsb
out
inc
iret
fiaddl
lods
lock
push
jae
cmp
out
pop
inc
jns
xchg
adc
rcrb
cmpsb
sub
mov
jle
sub
adc
nop
and
shlb
dec
mov
xchg
mov
aad
cmp
push
xchg
mov
cld
testl
xchg
add
loopne
loop
cmp
call
cld
and
and
mov
clc
nop
cwtl
mov
lods
subl
jp
inc
lahf
sub
clc
in
jmp
movsl
cmp
nop
mov
sub
int3
ds
movsl
mov
fs
iret
test
es
das
aaa
cs
add
imulb
xor
xchg
mull
xor
jb
mov
mov
cmp
hlt
int
das
dec
sbb
cwtl
scas
jp
inc
push
test
add
rorl
sar
popf
or
cmp
mulb
lcall
push
dec
mov
cmp
mov
adc
pusha
arpl
push
pushf
or
rorl
pushw
add
movsb
lcall
adc
dec
pop
dec
daa
jmp
add
and
xchg
scas
sbb
in
adc
icebp
mov
jae
xchg
das
jge
cld
leave
jp
pop
jecxz
test
aam
xchg
mov
cmp
scas
std
push
in
jp
movb
jg
pusha
sbbl
test
dec
add
stos
div
sbb
call
test
adc
mov
dec
xor
jmp
adc
xlat
mov
xchg
sbb
fldl
cs
xchg
adc
enter
sub
add
sub
or
mov
bound
mov
push
xchg
mov
xchg
fst
push
push
outsb
cmp
inc
in
add
bound
jmp
lods
cli
inc
mov
jmp
push
hlt
fbld
mov
pop
push
ret
pop
dec
mov
xchg
adc
gs
push
outsl
lret
jg
mov
ficompl
lcall
push
mov
mov
lahf
jae
pop
push
and
out
pop
out
iret
test
call
shlb
icebp
pop
sbbl
xor
loopne
test
imul
sub
push
je
insb
and
fdiv
movsl
icebp
stc
icebp
js
push
fstpl
fsubl
shl
sahf
xchg
addb
fildll
dec
cmpsb
xchg
mov
lods
dec
xor
aas
stc
push
aad
pop
cmp
pop
cmp
cld
jecxz
mov
out
rclb
or
mov
dec
adc
push
pop
cmpsl
and
fwait
cmp
push
mov
aam
pop
sub
mov
hlt
orb
bound
or
fdivs
push
and
pop
and
lds
mov
pop
sti
dec
mov
or
jle
int3
mov
sub
int3
popa
jg
adc
sbb
clc
das
pop
aas
lea
or
rolb
faddl
inc
dec
fs
add
sub
fwait
addb
outsl
mov
inc
ja
inc
je
sbb
je
daa
aam
enter
jge
cmp
mov
mulb
ljmp
repnz
sarb
pop
pop
das
pop
mov
push
or
push
orl
popa
pusha
and
loop
lods
loope
adc
push
adc
and
inc
shrl
mov
sbb
pop
fsubrl
sub
cmp
repz
jae
push
data16
push
stc
out
int3
jae
jle
cmc
jl
cmp
inc
fcomps
imul
cmp
outsb
rolb
jl
jne
ljmp
mov
enter
es
scas
xchg
adc
jmp
les
inc
add
stos
jg
movsl
dec
mov
out
mov
inc
dec
in
cwtl
or
xchg
test
sub
jle
mov
jmp
fs
push
sbb
mov
sub
pop
pushf
push
pop
jne
push
jo
push
fdivrl
pop
sbb
pop
xchg
sbb
dec
adc
or
jmp
lea
sub
arpl
flds
sbb
sub
idiv
dec
add
leave
pop
mov
lret
repz
jle
aad
pop
cmp
repz
or
clc
into
mov
jbe
mov
mov
or
mov
std
in
push
fisubs
add
add
stos
ja
xchg
jl
rcrb
mov
out
gs
push
aaa
mov
inc
stc
aam
inc
stos
stos
ret
nop
pop
pop
inc
add
test
sub
jne
fbstp
into
xchg
sub
pop
lret
mov
mov
int
insb
add
jae
shll
lahf
mov
jg
cs
jp
inc
add
mov
jnp
pop
imul
and
dec
sub
lds
mov
jp
cmp
xchg
sbb
xchg
push
push
fstl
test
or
std
aad
fdivr
mov
test
loopne
and
lds
xor
sbb
dec
and
hlt
sbb
push
cmp
sti
aam
push
and
cmpsb
aaa
subl
lret
adc
int
in
pop
ja
push
fisubl
sarl
and
xchg
add
xor
js
shll
xor
test
insl
sbb
lret
in
inc
xchg
scas
push
dec
movq
jo
out
mov
arpl
xchg
scas
pop
insb
xor
or
cmp
je
ss
aaa
lahf
out
xor
dec
sbb
push
addr16
lds
or
es
icebp
lock
les
or
add
push
es
xor
out
xchg
into
test
mov
lea
lret
dec
les
scas
fisttps
sbb
dec
fcmove
fiaddl
fdivrs
sbb
dec
cmp
aas
sahf
outsl
add
add
lods
mov
push
outsb
jae
jne
call
int3
fsubl
mov
dec
cld
outsb
enter
out
or
or
fadd
pop
pop
dec
jae
xchg
mov
or
or
and
into
aaa
cld
lods
inc
inc
mov
mov
cwtl
test
mov
mov
bound
dec
in
pop
push
mov
pop
sbb
adcl
jp
dec
or
enter
clc
loopne
xchg
xlat
mov
dec
dec
adc
jg
sub
inc
popf
and
mov
xchg
aad
iret
adc
cmp
aaa
lea
jno
adc
mov
sbb
cmpsl
dec
jg
das
ret
enter
cmp
test
mov
xlat
stc
cmp
jg
loopne
data16
ret
arpl
fcompl
pop
es
stos
movsb
xchg
insl
inc
lea
shrl
shlb
mov
and
insl
xchg
sub
stos
mov
cld
adc
addr16
jno
sub
jno
inc
idivb
xchg
push
mov
enter
fnsave
rcrl
mov
mov
mov
push
pextrw
and
adc
adc
dec
cmpsl
test
sub
push
cmp
rcll
xor
jmp
sbb
cmp
and
ss
xlat
je
imul
push
movsl
jge
mov
cmp
and
shll
out
xor
jl
cld
shl
mov
mov
shrl
mov
mov
pop
xchg
xchg
lds
cli
pop
int
push
push
rcl
out
sahf
movsb
dec
mov
in
mov
mov
xchg
icebp
cmp
pop
xchg
push
addl
sbb
inc
test
jecxz
pop
cs
popa
xchg
push
lret
dec
sub
sub
fnstenv
mov
fistpl
mov
xor
sub
cmp
in
std
mov
push
adc
das
mov
popa
push
popa
inc
dec
mov
ret
cmp
cmp
push
cltd
mov
fcompl
adc
sti
cmp
xchg
xchg
mov
cld
ret
rorl
inc
and
xchg
stc
push
add
pop
sbb
mov
adc
pop
shl
push
mov
cmp
push
clc
lods
pop
mov
out
pusha
call
dec
add
push
inc
outsl
dec
test
jb
subb
xlat
idivl
jne
jne
hlt
ja
sbb
adc
adc
push
mov
dec
cmp
in
mov
add
dec
and
xor
inc
and
push
sub
jbe
leave
sbb
int
shrl
jno
mov
aas
gs
je
adc
lods
out
inc
inc
ljmp
inc
insb
or
int
inc
fimuls
dec
fnstenv
add
lea
adc
outsb
in
push
xor
add
sbb
jle
insl
rcrb
mov
pop
inc
adc
iret
mov
lahf
out
ss
dec
ljmp
cmp
sbb
push
bound
sbb
sbb
cmpsl
pusha
cwtl
or
rorb
sbb
dec
loop
push
in
sti
shll
jo
mov
inc
bound
loop
lahf
inc
nop
cmpsl
mov
or
stos
dec
and
or
mov
jp
mov
sahf
jmp
aas
ret
stos
dec
dec
and
in
push
repz
shrl
and
jle
and
push
icebp
clc
pushf
push
cld
mov
testl
xchg
cmpsb
pop
lret
pop
adc
arpl
repnz
pop
mov
std
pusha
cwtl
lcall
add
scas
mov
or
push
mov
andb
stos
sub
test
enter
xor
jmp
jo
xchg
add
pop
push
movsl
std
mov
adc
mov
inc
xchg
cmp
stos
lret
add
ficompl
popf
jne
mov
pushf
xchg
or
cli
mov
mov
pop
sub
fucomip
add
ja
fbld
scas
or
jg
sub
dec
call
mov
or
jno
in
stos
jecxz
mov
call
adc
adc
icebp
push
neg
fwait
mov
mov
lahf
adc
inc
fldl
call
hlt
and
test
in
inc
stc
daa
mov
fs
lret
test
xchg
mov
xor
cmpsb
arpl
pop
js
mov
add
into
jg
imul
dec
daa
sub
mov
lods
inc
mov
imul
aas
xlat
pop
loopne
and
push
cld
lret
ret
mov
jmp
ficoms
or
jae
aad
xchg
and
mov
nop
dec
inc
sahf
in
mov
data16
and
inc
mov
lods
dec
inc
mov
pop
mov
jg
jne
fisubl
leave
add
add
loope
adc
test
ret
mov
lret
leave
push
fistpll
add
pop
jb
and
mov
and
push
add
out
cmp
rclb
or
hlt
in
inc
mov
and
fiaddl
je
cmpsl
and
jbe
outsb
imul
lods
std
push
loop
adc
and
xchg
sbbb
insl
inc
or
imul
loope
inc
sbb
cwtl
jle
push
iret
xor
lret
cmp
xchg
dec
pop
mov
int
dec
add
cmpsl
cmpsb
mov
mov
jge
lds
fneni(8087
arpl
lahf
aaa
sub
mov
into
jp
lcall
jecxz
push
xlat
inc
aas
cmp
or
stos
cmpsb
outsl
sub
test
pop
sarb
sbb
insl
xor
or
or
mov
push
sbb
push
aam
sub
jmp
in
out
cmp
mov
or
test
add
pop
or
push
mov
adc
pusha
shlb
pop
arpl
inc
inc
addr16
mov
lcall
jp
mov
push
pushf
cwtl
cmpsb
dec
sti
repz
cld
pop
lods
push
jno
xchg
stc
pushf
xchg
das
outsb
jbe
loopne
push
or
addb
loopne
push
arpl
fmull
decb
ror
fnsave
and
add
out
leave
fiaddl
mov
std
xchg
lcall
ret
aad
push
lea
fcomps
mov
cmpsl
js
in
shrl
inc
mov
xchg
inc
cld
subl
arpl
cmpl
rolb
sbb
xchg
test
xlat
movsl
rclb
and
mov
scas
shll
push
mov
adc
inc
mov
adc
fcmovnu
loopne
dec
pop
scas
push
out
cmpsl
xchg
dec
jo
xorl
mov
fcmove
dec
mov
push
aam
inc
shlb
pop
in
or
xor
mov
sub
mov
gs
sub
pop
add
pop
sub
cmp
das
add
mov
mov
xchg
push
xor
fldenv
inc
scas
xor
xlat
and
and
xchg
sbb
dec
and
outsb
cmp
add
add
rcll
ret
pusha
unpcklps
adc
leave
mov
and
push
orb
lcall
jg
mov
mov
das
ljmp
aad
xchg
cltd
fbstp
push
pop
icebp
dec
ja
push
push
cmc
inc
imul
adcl
clc
mov
xor
dec
mov
out
push
mov
mov
mov
add
cmpsb
pop
dec
icebp
add
add
test
xchg
push
insb
sbb
xchg
and
imul
jle
mov
jmp
push
xchg
xchg
push
insb
imul
arpl
or
jo
pusha
xor
fistpll
pop
xchg
push
ror
ja
das
jmp
add
aam
ret
cs
jns
rorl
andb
push
pop
leave
add
inc
fiaddl
sub
fnstsw
jnp
inc
pop
or
mov
and
mov
sub
bt
lock
stos
push
movsl
shlb
mov
push
shrl
loopne
scas
aas
adc
and
xor
scas
add
outsb
mov
add
and
mov
jge
nop
iret
add
inc
sub
cmp
and
push
mov
pop
cmc
sbb
enter
dec
pop
xor
test
push
imul
jge
xlat
aad
dec
rcrb
div
and
nop
cmp
cld
xchg
jg
mov
push
jbe
mov
jecxz
les
inc
and
fisubs
lods
dec
sbb
repz
dec
call
xchg
pop
mov
mov
and
ret
ret
outsb
sbb
inc
pop
sub
stos
dec
adc
or
adc
push
cmpsl
enter
mov
scas
adc
lahf
fwait
push
stc
les
inc
inc
rdmsr
pop
sbb
int
clc
xchg
inc
cltd
repnz
add
sub
push
sub
jo
pop
shrd
lds
lods
es
adc
mov
outsb
sub
aam
pusha
aaa
outsl
and
int3
and
loop
xor
jb
fstps
xor
pop
adcl
scas
mov
mov
or
loope
test
and
jecxz
cmpsb
cmp
pop
ss
add
decb
cmp
test
sbbb
jmp
push
adc
nop
aad
pusha
xchg
aaa
adc
xchg
outsl
cmpsl
cmp
xchg
icebp
and
xor
clc
cmp
dec
add
or
mov
cmp
rolb
imul
sbb
data16
inc
fsts
sbb
test
filds
sbb
dec
sbb
cmp
jge
adc
les
adc
leave
stos
lahf
adc
mov
insl
push
in
jge
and
cli
ffreep
ljmp
aas
mov
dec
insb
sbb
sub
xchg
dec
bound
or
ret
fistpl
lahf
imul
stos
subb
xchg
inc
jo
insb
mov
pop
xor
sti
pop
xchg
inc
sqrtps
push
xchg
jns
dec
fidivrl
aad
pop
inc
scas
leave
jno
int
das
add
out
jmp
lods
jb
call
adc
mov
daa
cmp
add
lock
imul
lods
jmp
push
mov
sub
insb
filds
jecxz
xor
cs
cmp
sbbb
aad
shll
add
xchg
inc
pop
ja
call
cld
mov
jns
mov
xchg
inc
cwtl
sti
imul
xchg
pushf
adc
jnp
sub
insb
xor
repnz
and
mov
aam
cltd
negl
jg
imul
jbe
loop
jmp
daa
push
ret
xchg
cmp
mov
jne
or
outsb
movsl
push
data16
xchg
inc
pop
xor
pop
outsb
mov
and
stos
ds
mov
cld
mov
aam
mov
pop
sub
lock
lock
test
or
pop
pop
xor
pop
ret
sahf
xchg
xor
sbb
inc
stos
gs
sbb
xor
repz
iret
adc
ljmp
inc
sbb
pop
pop
repz
xchg
imul
jne
aad
imul
aam
loop
enter
xor
aad
int3
push
pop
outsb
push
sub
imul
cmp
mov
insl
loope
xlat
jae
xchg
xchg
mov
cmp
push
movsb
mov
test
bound
push
rcr
push
mov
out
fstl
movsl
cmpsb
fidivl
inc
push
fs
insb
push
fmull
mov
push
aad
add
mov
out
push
std
mov
pop
out
data16
out
rclb
add
shrl
or
out
aas
es
pop
jle
es
sub
jecxz
mov
sbb
xlat
or
inc
mov
gs
and
mov
mov
jo
test
xchg
dec
fisttpll
fidivrl
add
pop
aaa
shrb
pop
mov
pop
outsb
fcmovb
mov
inc
cmpsb
popf
fcoms
in
push
fs
stos
test
lret
mov
add
aas
add
fcom
jne
push
mov
fiaddl
mov
loopne
mov
add
xchg
sbb
xchg
shl
pop
cld
dec
mov
xchg
stc
xchg
shrb
cmp
sti
pop
push
paddd
dec
in
test
lahf
cli
out
and
dec
outsl
push
mov
cwtl
dec
sbb
adc
push
pop
popf
pop
jnp
mov
test
mov
or
jae
nop
pop
cwtl
ret
mov
jge
lea
dec
js
xchg
lcall
int
fs
out
mov
inc
and
xchg
fnstenv
pop
lock
lret
inc
out
cmpsb
dec
das
cmp
adc
nop
or
loop
lods
pushf
shld
sub
jge
or
xor
mov
jbe
add
icebp
movsl
out
cmpsl
jae
pop
mov
sub
scas
mov
lds
dec
inc
jmp
ds
pop
mov
add
and
add
jne
lods
mov
dec
xlat
add
dec
jge
call
mov
mov
fisubrl
scas
cmp
xchg
push
jmp
insl
popa
repz
iret
fisttps
cmp
jne
mov
jnp
addr16
mov
das
test
add
push
into
cmpsl
lret
cmp
insl
ljmp
pop
jle
fs
xor
outsl
jbe
xchg
in
push
add
push
leave
loop
adc
inc
mov
mov
lcall
mov
add
pop
aam
outsb
lds
push
out
fisttps
or
sub
sbb
adcl
dec
mov
and
jae
loop
push
scas
ss
daa
xchg
xchg
mov
mov
pop
jb
xor
push
pop
shrb
mov
bound
ds
sarl
popf
add
stos
dec
clc
push
push
out
xchg
mov
jmp
jp
xchg
push
hlt
cltd
outsl
xchg
xchg
xchg
pop
in
lods
adc
cs
jle
dec
sbb
fst
push
pop
inc
jg
mov
inc
fildl
stos
movsl
adc
jmp
shrl
fcomps
inc
lahf
dec
iret
out
pop
mov
movsl
mov
mov
jg
sub
mov
push
or
nop
ljmp
es
hlt
xchg
pusha
test
nop
sub
fstl
std
imul
mov
mov
adc
and
push
icebp
mov
pop
sbb
mov
jl
addr16
add
ret
stos
stc
negl
mov
mov
xor
push
sbb
and
jno
push
clc
and
arpl
rol
sti
orl
es
pop
insl
pop
cltd
jecxz
aas
faddl
stos
push
or
outsl
xor
push
test
or
loop
jo
xchg
mov
xchg
lock
sub
push
and
test
arpl
loopne
das
xor
fstps
xchg
lock
jo
cmp
pusha
add
pop
mov
orl
lds
mov
test
imul
or
sbb
je
pop
popa
inc
pop
ret
out
push
notl
popa
sbb
call
push
push
and
pop
sub
xlat
or
mov
or
or
xchg
xchg
mov
xlat
xlat
mov
push
aad
fdivrl
lcall
push
dec
mov
rorl
movb
and
or
mov
push
adc
mov
fstp
xor
push
lock
or
into
pop
jns
sar
add
arpl
xchg
aaa
cs
test
inc
rcll
lcall
xchg
dec
stos
mov
mov
xchg
into
pop
sbb
insl
cmc
jle
rol
stos
mov
testl
xor
adc
jp
test
xor
outsl
cmp
fisubs
pop
sbb
cvtdq2ps
test
sub
call
cmpsl
fistps
push
jge
mov
push
ja
xor
pop
push
mov
outsb
adc
dec
mull
xchg
movsb
pusha
jmp
in
xchg
shrb
loope
mov
fsincos
pusha
dec
in
pop
fisubrs
int
mov
lock
ss
pop
loopne
jp
repz
and
mov
cli
xor
ljmp
fwait
cmp
test
fcomi
aaa
pop
jge
and
mov
sub
push
imul
cld
rcrb
push
mov
mov
imul
xchg
iret
jo
pop
adc
lcall
jbe
inc
fmulp
shrb
enter
pop
cwtl
subb
daa
notb
jmp
jl
imul
pop
xor
int
pop
push
xchg
mov
mov
movsl
mov
dec
push
dec
push
jle
lods
cmp
into
adc
cs
mov
lcall
shll
add
imul
movsl
mov
xor
inc
scas
jmp
lods
test
jmp
xor
lea
js
sbb
adc
lods
inc
mov
push
or
loope
and
add
mov
int
mov
or
dec
push
lds
mov
jbe
sub
sub
scas
xor
mov
out
xchg
mov
and
push
outsl
mov
ja
imul
js
out
xchg
mov
xchg
and
int3
mov
mov
xor
push
popa
and
cmp
sbb
mov
int
std
jmp
aam
mov
dec
xlat
stos
les
push
out
mov
stc
fldcw
sub
dec
xor
aam
into
cmp
pop
sti
sti
addr16
inc
and
lahf
adc
cmpsl
push
stos
mov
insb
sbb
jnp
movsl
es
dec
xchg
es
mov
cmp
mov
test
or
out
das
outsl
fwait
add
jecxz
fistpl
dec
pop
leave
jle
rcrl
mov
mov
test
mov
jb
mov
mov
or
fwait
fs
mov
inc
dec
outsb
mov
enter
push
clc
dec
loopne
pop
xchg
pop
mov
pcmpgtd
sbb
scas
fcomp
lock
push
or
mov
sbb
push
out
lahf
jg
repz
in
adc
adc
cmc
addl
mov
mov
add
jne
and
rcrb
test
dec
fldl
push
popf
mov
push
and
jp
fidivl
fmull
mov
and
pop
sub
jbe
and
repnz
imul
xorl
cs
push
pop
adc
push
adc
fwait
and
loopne
xchg
js
push
sahf
roll
ficoms
mov
jno
adc
shrb
xchg
mov
shlb
in
lods
insl
sti
mov
pop
jecxz
cs
dec
mov
cmp
not
scas
testb
jbe
jnp
pop
xor
sbb
xor
and
fs
loopne
enter
je
fadds
push
sbb
das
jle
mov
mov
xlat
mov
pop
leave
cmp
andl
push
movsb
xchg
movsb
add
xchg
dec
add
inc
and
int
stc
mov
adc
jbe
jne
pop
insl
xor
fnstcw
push
xchg
push
add
loop
rolb
inc
sub
pusha
dec
push
push
push
mov
aam
or
test
dec
js
mov
mov
and
mov
shlb
addr16
xchg
push
rcrl
mov
loope
loopne
stc
push
stc
xor
push
rcrb
mov
xchg
adc
xor
pop
imul
xor
or
rcll
test
iret
fisubrs
push
or
push
sbb
scas
inc
loope
inc
xchg
add
pop
outsl
pop
adc
loope
and
int
pop
adc
mov
jmp
pop
arpl
lock
inc
daa
inc
imul
and
mov
dec
std
push
test
cs
aam
cld
xchg
out
sbb
mov
aas
inc
lods
fs
in
or
pop
and
mov
mov
rcrl
and
mov
mulb
pop
loope
dec
movsb
sbb
pop
cmp
pop
mov
mov
cmp
out
sub
pushf
shlb
adc
fs
loope
in
outsl
xor
cwtl
sbb
lcall
xor
sub
vmovddup
pop
data16
mov
or
pop
aad
fcmovu
adc
mov
int3
lds
inc
or
aas
xchg
lcall
sbb
in
rorl
cmpsl
out
mov
push
nop
push
push
push
loop
test
pop
mov
lret
shrb
stc
or
mov
inc
js
mov
sbb
jl
push
adc
jmp
lds
movsb
cli
mov
data16
adc
jbe
lahf
pushf
out
xchg
fdivr
pop
aas
push
aaa
ljmp
xor
lds
dec
jbe
aam
mov
jne
scas
test
lea
lcall
stos
test
jmp
gs
inc
xchg
stos
pushf
pop
xchg
push
pop
ljmp
in
cld
push
push
add
jl
mov
loope
ljmp
gs
scas
lret
dec
mov
and
mov
adc
daa
jno
cltd
lods
mov
push
xor
imulb
pop
push
out
dec
cmc
sbbl
lds
out
lcall
rcll
mov
sbb
dec
test
mov
scas
mov
stos
push
mov
mov
push
iret
loop
mov
and
roll
sub
xchg
mov
add
jns
in
xchg
jmp
leave
es
push
mov
sbb
out
jg
mov
in
jno
xor
push
or
push
add
out
cmp
pop
or
test
es
or
mov
mov
ret
jb
stc
insb
push
lea
ljmp
cmc
mov
aas
push
cltd
mov
cmp
cmpsb
mov
stos
pop
data16
outsb
jmp
ljmp
pop
ljmp
and
pop
sahf
cmp
push
dec
and
fmuls
and
sbb
mov
cld
mov
add
lock
jecxz
hlt
or
jl
lret
psubw
in
mov
movsl
pop
inc
cmpsl
or
or
scas
add
and
mov
pushf
fcomps
add
xor
push
stos
or
jle
fbstp
in
push
les
cmp
mov
lds
roll
fstpt
clc
stos
push
out
push
sub
in
decb
push
sbb
cmc
clc
loope
mov
jmp
loope
arpl
xchg
xchg
and
add
cmp
cltd
adc
pop
inc
test
out
mov
or
enter
add
adc
scas
mov
cmp
leave
push
mov
cmp
rorl
popf
and
nop
add
xor
je
cli
lods
fdivs
in
push
punpcklbw
js
fstl
sahf
push
or
nop
shrb
out
inc
shl
mov
push
sahf
push
xchg
int
popa
fsubrs
ret
inc
fldl
mov
sahf
fidivrs
sub
out
enter
or
sbb
test
stos
sbb
lea
imul
or
pop
pop
outsl
movsb
and
es
cmpsb
mov
dec
inc
loop
pop
stos
pop
mov
inc
ret
in
out
add
cmp
rcrl
fdivl
mov
mov
jge
jne
loope
mov
mov
insb
xor
add
jl
cmp
pop
jle
loop
mov
xor
fldt
cmp
and
xchg
lea
mov
nop
jae
lock
ds
les
jle
frstor
push
lret
push
jp
aad
mov
cld
scas
in
scas
loope
mov
mov
push
push
push
pop
xor
cmpsl
je
xor
pop
mov
sahf
shl
inc
or
fistpll
fisubs
addr16
push
jnp
mov
orl
jae
mov
test
pop
aad
jg
fadds
jmp
test
mov
cmp
aas
pop
out
into
inc
dec
lods
cwtl
incl
test
xchg
mov
or
test
pop
insl
in
jle
imul
fs
das
mov
add
dec
pop
call
mov
lods
mov
jecxz
jl
pop
inc
push
test
les
fwait
std
push
and
sub
lods
aas
push
or
out
rorl
cmp
xor
cmp
repnz
xlat
sub
xchg
push
xchg
push
mov
in
pusha
sbb
fistpll
mov
test
loope
cmp
imul
pop
mov
fisubrs
ret
addb
mov
push
movsl
fs
push
fbstp
mov
push
xorl
pop
cmc
cld
aam
cmp
cmp
lcall
cwtl
cmp
inc
jge
daa
cmp
adc
and
xchg
leave
out
mov
stc
xor
add
movsb
popf
pop
insb
xchg
dec
aas
xchg
mull
push
roll
pop
xchg
cmp
inc
pop
inc
std
pop
inc
aad
lea
pop
repz
in
xor
xchg
push
adc
out
out
mov
cmp
push
push
xchg
push
addr16
fstp
sub
insb
fstl
fisttps
stos
adc
les
and
jl
inc
pop
xor
sub
das
filds
mov
jbe
int3
mov
inc
dec
jmp
iret
inc
lds
cltd
dec
je
into
push
push
leave
or
fucom
jg
push
sbbb
xlat
inc
pop
mov
sar
outsb
mov
dec
nop
xchg
lcall
call
scas
inc
push
pop
out
sbb
lcall
rolb
stos
xor
jb
mov
daa
sub
sti
cltd
mov
jne
lods
inc
dec
or
scas
mov
mov
ret
icebp
add
in
or
xchg
mov
push
xlat
jmp
in
mov
in
jmp
pop
jns
int3
repnz
test
repnz
call
push
cmp
sub
pop
popa
call
xor
dec
xor
ret
cmp
pop
adc
inc
pop
ror
scas
inc
insl
add
sub
push
jns
scas
and
sub
popf
mov
fwait
and
ljmp
push
lock
xchg
pop
mov
xchg
sti
mov
mov
push
cmp
mov
push
mov
sbb
adc
out
add
jbe
sub
add
xchg
je
in
adc
push
cmpsl
jbe
loop
aad
fists
lods
sahf
clc
mov
scas
mov
adc
jle
xchg
int
cmpsb
rcrl
pop
mov
push
loope
stos
rorb
clc
shrl
xorl
xor
add
sbb
push
mov
cwtl
dec
call
cli
push
hlt
cltd
jge
sub
pop
repnz
test
pop
jno
sbb
pop
dec
int3
fwait
mov
ja
or
sbb
enter
sub
lds
cmp
mov
test
add
popf
adcl
fimull
sub
mov
jno
jne
dec
and
sub
fmull
push
jb
imul
insl
sub
mov
cmpb
add
adc
mov
inc
push
add
dec
xor
xchg
jg
or
popa
addr16
push
into
cmp
repz
adc
ljmp
cmpsb
xor
and
jmp
daa
jg
fmull
and
jg
faddl
test
test
out
jo
and
and
dec
out
and
xor
cs
cmpb
insb
pop
int
arpl
xchg
leave
and
and
addr16
add
test
jle
fdivrl
sets
push
sub
aas
mov
movsl
stos
iret
repz
inc
jns
sbb
xchg
ficomps
mov
mov
lret
into
out
andl
adc
pusha
jmp
add
sub
cmpsb
gs
push
or
shrl
add
inc
lods
hlt
and
pusha
hlt
aas
sub
or
sbb
out
sub
lcall
push
addr16
xlat
mov
fistps
lcall
movsl
adc
mov
les
cli
bound
cs
in
mov
imul
mov
iret
jecxz
stos
jbe
push
repz
pop
aaa
hlt
pop
pop
mov
xor
fnstsw
adc
adc
mov
loop
les
xchg
les
jge
inc
das
lea
pop
ret
sbb
scas
test
sbbl
inc
or
shll
pop
push
out
dec
push
cmp
and
gs
fsts
repnz
inc
lods
jg
adc
mov
lret
push
fisubrs
lods
push
mov
push
mov
movsl
mov
ret
loope
es
ret
adc
ret
insl
xchg
icebp
das
sarl
movsl
dec
in
insl
pop
adc
pop
mov
sub
fbstp
test
lods
stos
jnp
sti
ljmp
jmp
push
aam
inc
mulb
sbb
sarb
loope
jecxz
sub
jecxz
scas
arpl
push
orb
add
mov
and
mov
or
nopl
mov
ss
add
xchg
addr16
mov
fwait
popf
repz
rolb
test
xor
mov
movsl
push
movsb
hlt
pop
xchg
addl
fimuls
xchg
xchg
jae
mov
adc
xchg
addr16
or
cmp
loope
mov
cmp
dec
add
xchg
jg
cmp
pop
jne
clc
fists
cmpsl
dec
pushf
push
add
add
mov
sub
lahf
subb
test
sahf
fidivrl
addr16
jne
jmp
stc
loopne
jp
mov
mov
div
rolb
mov
mov
scas
jle
push
mov
addb
ficoms
push
inc
xchg
clc
xchg
lret
aam
xor
cmpsl
xchg
repnz
mov
mov
shll
jbe
test
je
adc
dec
mov
test
xchg
jno
repz
push
cmpsl
cmpsb
aaa
stos
adc
mov
jle
pushf
xchg
pop
add
mov
test
adc
push
and
push
and
call
out
call
mov
clc
pop
insl
xor
aad
add
je
mov
jns
mov
pop
xchg
mov
sbb
test
push
jns
sbb
jns
push
sti
imul
add
mov
push
xor
shrb
inc
add
movsb
push
into
cld
out
repnz
insb
dec
fildl
in
push
ret
sub
sub
xlat
cmp
xchg
or
mov
in
out
cwtl
mov
pusha
cwtl
push
into
sbb
cmp
pusha
out
mov
aam
push
addr16
sub
vsubps
ret
int
loop
dec
sub
and
imul
lahf
test
mov
enter
mulb
fisttps
inc
imul
mov
lahf
add
outsb
and
test
fstpl
aaa
sahf
cmp
rcrl
inc
sbb
test
lock
addr16
dec
int
mov
ja
push
out
dec
add
daa
and
jl
xchg
push
rcl
inc
mov
lahf
xlat
mov
mov
xor
mov
movsb
lret
aaa
push
lods
pop
lret
js
ljmp
les
and
lods
sbb
cli
pop
lods
jle
outsb
notl
mov
dec
out
jmp
out
int
pop
jge
stos
xor
popf
mov
test
pop
mov
dec
add
jbe
les
lods
loope
jne
sbb
lahf
stc
cs
inc
sbb
pop
out
sahf
inc
cvtpi2ps
mov
incb
aaa
push
mov
push
fiaddl
adc
xchg
add
sbb
lods
imull
popf
add
mov
mov
xlat
pop
sbb
or
mov
add
popf
lahf
es
and
adc
addl
sti
mov
mov
mov
lahf
or
in
mov
mov
xchg
and
mov
and
push
sbb
pusha
mov
movsb
cmp
adc
roll
jns
sub
iret
mov
mov
mov
xchg
int
jb
aad
scas
sub
cmpb
and
jbe
cmc
dec
cli
add
sbb
mov
inc
fsts
jns
lods
mov
and
and
push
sbb
out
mov
mov
data16
fisttps
sbb
fdivp
or
mov
add
or
xchg
mov
enter
jne
cltd
insb
cli
loope
psubw
loopne
xlat
push
fdivp
xchg
scas
in
movsl
cmpsl
lods
int
xor
xchg
out
mov
sarb
es
add
popa
inc
jmp
mov
jl
push
js
push
iret
push
sbb
jne
fcompl
popf
fcmovnbe
sub
fstpt
push
dec
xchg
popl
out
js
das
imul
jp
push
cltd
xchg
bound
adc
pop
into
ret
gs
sbb
mov
mov
pusha
mov
imul
xchg
ficompl
mov
movsl
gs
pop
or
shlb
out
mov
std
mov
mov
shll
cmpsl
cltd
cmpsb
mov
push
push
mov
push
pop
dec
ret
out
xor
enter
addb
popa
in
lcall
jl
sbb
repz
dec
adc
ficompl
in
aam
std
stos
test
xor
cmp
mov
insl
xchg
jno
xchg
lods
jne
jnp
dec
cltd
xlat
or
cmpsl
roll
nop
cmpb
fsubrp
adc
cwtl
push
inc
pop
cmp
adc
jne
filds
pop
lea
dec
jns
loop
push
sbb
jnp
loopne
mov
mov
or
mov
xchg
ret
addr16
jns
sbb
mov
data16
addr16
cs
sbb
mov
jmp
xchg
pusha
dec
jle
mov
insb
pusha
movsb
add
or
mov
mov
inc
outsb
sbb
inc
stos
xor
xor
dec
insl
sub
sbb
adc
enter
int3
cmp
jecxz
xchg
sbb
shll
in
pop
in
xlat
push
sbb
out
cmp
ljmp
enter
adc
sub
js
loopne
ja
adc
test
adc
outsl
add
mov
sub
dec
pop
jno
stc
and
xchg
inc
cmp
adc
pop
fadd
lods
scas
and
scas
popf
repnz
push
insl
fsubs
mov
xchg
add
mov
pop
call
xor
jmp
mov
scas
dec
mov
mov
test
pusha
dec
in
xchg
mov
movsb
mov
xchg
mov
sahf
dec
push
xor
cmp
add
inc
push
fs
add
xchg
or
dec
fistl
fidivrl
orl
cmp
sbb
push
mov
inc
sub
fdivs
insb
adc
cli
lret
loope
insl
das
lcall
sbb
sub
push
push
outsl
mov
inc
out
cs
xchg
fidivrs
sbbl
mov
leave
cmp
or
aas
or
out
xor
or
sbb
decb
daa
fisubl
ss
cmp
pop
add
in
lods
pusha
sbb
popl
imul
xchg
insl
mov
xor
push
push
nop
movsb
sarl
sub
fsubs
es
push
faddl
std
scas
add
sti
jnp
fsubrs
inc
pop
bnd
sbb
cmp
cmc
sahf
pop
enter
mov
sbb
mov
xor
push
clts
lock
adc
mov
xor
bnd
loop
cmpsb
mov
cvtpd2ps
repz
in
gs
rcrb
mov
in
das
stos
scas
addl
cmc
cltd
jmp
adc
push
lret
add
lcall
sbb
test
out
push
ss
sub
fidivl
hlt
lahf
mov
lock
xor
pop
add
daa
xor
sub
loope
cs
mov
sub
mov
orl
adc
mov
sub
ficoms
cli
stos
imull
flds
inc
cmpb
test
divb
inc
pusha
mov
in
add
filds
into
mov
inc
xor
aaa
fdivl
mov
pop
push
push
sbb
mov
adc
pop
aas
jmp
gs
add
mov
out
and
faddl
xlat
mov
mov
lods
into
adc
mov
jmp
push
out
dec
andb
in
adc
scas
inc
rolb
dec
cmp
xor
pusha
sbb
test
cwtl
or
outsb
sbbb
pop
outsb
mov
leave
lret
outsl
inc
push
add
rolb
sub
inc
inc
lret
out
inc
jmp
cltd
dec
cmpsb
jmp
lcall
sub
add
mov
push
outsb
sahf
popa
xchg
or
add
inc
push
adc
mov
jmp
or
jp
fsubs
out
ljmp
jge
vmovhlps
movsl
cmp
pusha
dec
inc
lcall
ja
lcall
jle
mov
pop
lret
ret
lahf
add
sar
sbb
in
fidivl
sarb
aas
xchg
rorb
inc
xchg
ja
lods
xchg
mov
test
insl
inc
xor
adc
dec
and
clc
cmp
and
adc
sti
popa
movsl
cmp
mov
lret
mov
pushf
test
lahf
and
scas
cmpsb
cmpsb
stc
jge
popa
icebp
cmpsb
into
jle
movl
mov
stc
mov
repz
popa
orl
adc
jns
aad
in
add
xor
movsl
jno
sahf
mov
or
dec
cltd
ja
dec
imul
or
dec
add
cmp
inc
mov
push
push
daa
es
jmp
xor
cltd
jmp
out
jnp
fwait
bound
jg
je
mov
rorb
loopne
push
adcl
mov
movsb
loope
scas
test
push
outsl
push
mov
cmp
clc
adc
addr16
jbe
scas
dec
data16
mov
vmovntps
gs
push
mov
jmp
inc
xor
cmp
es
mov
xchg
mov
add
mov
inc
add
lock
mov
jno
mov
mov
push
imul
movsb
jae
adc
or
js
fcomps
xlat
in
add
pop
data16
inc
dec
push
mov
idivl
push
jnp
mov
imul
ret
mov
addr16
shlb
mov
mov
mov
push
hlt
loope
cmc
mov
loopne
sub
std
add
test
les
lock
mov
adc
test
push
mov
into
xchg
xlat
int
adc
and
add
ret
mov
ss
xor
cmpsb
dec
fcomi
add
fs
dec
lds
sub
and
je
mov
clc
out
gs
adc
fistl
cs
mov
jno
insb
sbb
fwait
mov
iret
inc
push
js
or
or
hlt
sahf
xor
mov
in
insl
repz
test
rolb
xlat
sti
xchg
pop
test
inc
icebp
inc
pop
push
aaa
das
insl
iret
loope
jns
cmp
sub
stos
adc
mov
rorb
sbb
push
mov
cmp
imul
sti
push
loop
test
adc
orb
aad
cs
cmpsb
shll
mov
dec
mov
clc
push
cld
push
jg
sbbl
notl
xchg
mov
out
enter
jge
js
fsubs
loope
jle
into
pop
xlat
or
xchg
lods
xor
cmp
dec
mov
out
prefetchw
aas
mov
out
jp
loopne
or
clc
mov
rorb
jge
push
push
orb
pop
inc
cmc
inc
mov
out
add
lahf
xchg
and
mov
lcall
sbb
mov
out
lods
in
jl
mov
nop
aam
out
sahf
pop
int
lea
roll
and
aaa
mov
into
arpl
fmull
out
imul
pop
sti
push
popf
enter
mov
pusha
jle
inc
and
push
inc
lcall
shlb
sbb
mov
mov
ds
push
out
mov
jmp
movsl
daa
mov
in
call
pop
negb
outsb
movsl
dec
std
aas
cmp
dec
pop
mov
pop
lret
dec
and
imul
ret
jmp
cmp
dec
push
mov
dec
cmp
das
fldcw
movsb
lret
mov
out
dec
xor
mov
int
dec
jmp
mov
lods
pop
jnp
jnp
test
adc
dec
mov
shll
les
dec
mov
dec
insb
mov
je
push
jne
mov
in
movsb
imulb
icebp
fwait
dec
ret
cmp
mov
and
stc
out
pop
shl
std
rcrb
outsl
lods
arpl
jne
fisubl
mov
shl
fisubrl
push
or
cmc
mov
hlt
repz
xchg
lods
lods
pop
lea
inc
loope
sarb
xlat
xor
inc
jecxz
mov
sbb
outsb
faddl
addr16
adc
inc
pusha
ja
stc
loop
lea
mov
lock
into
or
mov
pusha
sbb
jns
adc
sbb
or
xor
add
cmp
xchg
pop
dec
jne
adc
call
stos
or
daa
call
ds
call
cmp
jne
leave
leave
data16
xor
loope
cmp
nop
jno
adc
fnstsw
cmpsl
adc
imul
loop
jp
sti
imulb
lods
adc
ret
xchg
test
cmp
arpl
test
sub
in
mov
clc
das
inc
jae
sbb
xchg
mov
push
repnz
ss
in
xchg
mov
pop
dec
out
in
sti
mov
and
jnp
sub
push
ss
push
add
fsubrl
leave
sbb
sti
popa
xchg
jmp
movsb
adc
pushf
adc
jne
jge
adc
push
mov
sub
dec
dec
jo
and
jne
movl
fidivrs
loope
xor
stc
push
fsubs
cmc
cmp
das
push
fld1
or
mov
sti
test
jb
adc
xchg
insb
xchg
call
loopne
imul
dec
shr
mov
in
inc
dec
dec
inc
push
movsb
cmc
push
pushf
mov
inc
in
push
sbb
in
jo
add
mov
shll
hlt
xchg
sbbl
push
cmp
les
call
mov
push
arpl
int
jg
push
mov
and
out
cmp
dec
fstl
sub
fistpll
in
mov
push
or
js
push
mov
shl
add
xor
mov
popa
mov
pushf
repz
cmp
int3
loopne
loopne
cltd
ret
arpl
lock
ficoml
clc
dec
dec
add
xchg
xchg
les
sbb
in
mov
cwtl
enter
insb
lock
test
xor
mov
aas
pushf
pop
out
cmpsl
xchg
cwtl
repz
popf
sub
lret
les
shl
adc
mov
movsb
hlt
sahf
and
add
xor
jnp
mov
rcrb
stos
inc
sahf
xchg
std
dec
movb
xchg
mov
xor
pop
jecxz
popa
sarl
xor
daa
pop
cmp
fstl
cmp
inc
and
jne
sbb
mov
out
bound
popa
idiv
ret
push
call
and
repz
or
mov
lahf
lods
lretw
add
in
iret
xchg
in
shr
ficoms
repz
ljmp
and
xchg
scas
cmp
adc
push
test
cmp
mov
xlat
sbb
cmp
jmp
daa
inc
add
add
xchg
out
fisttps
xchg
pop
mov
pop
cltd
sbb
add
in
pop
cmc
lahf
mov
insl
ja
test
mov
ljmp
test
out
scas
inc
dec
leave
push
xor
mov
mov
dec
les
and
mov
cmp
frndint
nop
or
mov
mov
mov
lods
pop
sahf
test
mov
xor
jo
fnsave
pop
jb
mov
lret
popa
neg
add
jb
jecxz
adc
in
rclb
pusha
cmp
mov
adc
fisubl
lcall
pop
pushf
or
je
mov
out
push
aad
std
into
xor
push
jmp
push
sbb
data16
arpl
add
scas
mov
sahf
lods
jge
adc
jg
adc
jns
pusha
popa
mov
pop
pop
lret
inc
cmp
mov
xchg
xchg
jge
test
mov
lods
xlat
addb
adc
mov
jbe
mov
shl
inc
lods
jno
pop
rclb
leave
push
mov
xchg
sbb
fsubrl
inc
daa
dec
lds
out
sub
xchg
popa
sti
xor
jns
adc
cli
faddl
mov
dec
and
jmp
mov
dec
nop
push
lock
decb
adc
cwtl
inc
sbb
aam
mov
jae
loop
xchg
call
dec
sti
push
mov
shlb
mov
subl
lret
pop
or
cmp
lea
inc
sqrtps
cltd
mov
xchg
and
jno
mov
dec
mov
je
push
mov
int3
or
push
xlat
xchg
xchg
subb
js
pusha
movb
aam
jp
stos
cmp
sarb
sbb
mov
pop
mov
xor
aad
cmpsb
xor
aam
adc
dec
mov
andb
mov
incl
jb
mov
jge
and
mov
cltd
dec
ret
int3
js
stos
lods
xchg
adc
push
out
rorl
jp
out
xor
mov
xchg
or
imul
jnp
jecxz
cmp
or
pop
lahf
stos
das
stos
mov
dec
lock
mov
mov
outsl
les
loopne
lret
push
fnstsw
pop
sbb
mov
xchg
sbb
xchg
dec
out
imul
adc
fmul
cmp
mov
out
mull
fnstcw
call
mov
mov
movb
jmp
pop
jae
sbb
mov
cmc
loop
movsl
mov
jb
or
xchg
loopne
imul
std
add
les
push
cltd
enter
jmp
idivl
push
nop
or
inc
sbb
addb
jnp
dec
jg,pt
cmc
fs
cmc
movsb
cs
nop
addb
mov
fsubp
xlat
sbb
push
out
jmp
sub
jmp
les
cmpsb
pop
lds
add
daa
ss
pop
xor
xchg
cmp
lods
fstp
cmpsb
or
and
or
iret
test
je
pop
insl
rorb
out
aam
push
push
addl
test
mov
dec
fldcw
and
adc
or
jp
or
push
inc
sub
aam
or
int
and
mov
dec
jnp
rcll
js
stos
push
test
stos
sbb
mov
dec
push
shr
pop
sbb
sub
iret
out
fistl
mov
jmp
pop
xor
cmp
lret
xor
or
test
mov
hlt
outsb
cmpsl
dec
pop
int3
or
xchg
aaa
ficoml
daa
test
adc
int3
add
inc
lcall
mov
mov
mov
mov
push
std
and
scas
std
mov
jae
sbb
jmp
test
pop
es
add
jae
add
ss
and
mov
out
pop
lods
adc
aaa
mov
inc
outsb
cmpl
and
xlat
addr16
pop
ljmp
fildl
insl
and
xlat
adc
xor
gs
lock
int
sub
add
xor
inc
jle
stos
adc
dec
std
push
or
xchg
push
jmp
mov
push
mov
test
or
sub
jp
dec
loope
fdivrs
mov
sbb
sub
mov
pop
test
push
movsl
and
push
call
and
push
nop
jno
or
pusha
jne
pusha
mov
or
notb
sbb
mov
aam
mov
pop
cli
stc
dec
pop
es
inc
mov
mov
shlb
jp
ja
call
xchg
jge
xchg
test
ret
mov
cmp
loope
jmp
jae
arpl
xor
mov
and
sub
clc
lds
pop
mov
pushf
xchg
jle
stc
divb
repnz
mov
add
inc
leave
inc
adc
mov
dec
cltd
sbb
push
jle
mov
outsl
push
rclb
leave
and
into
and
adc
sbb
inc
adc
nop
cmp
rorb
movsl
or
dec
xchg
je
into
adc
icebp
shrb
mov
pop
loope
sbb
sbb
inc
or
dec
int3
outsb
aam
cmpsb
inc
mov
pop
cmp
ret
jl
out
daa
and
ds
icebp
xor
pop
fisttpl
adc
in
aas
mov
xchg
inc
daa
and
shr
sbb
mov
les
inc
mov
icebp
push
mov
jb
dec
xchg
rcr
idivb
popl
or
dec
imul
cld
xchg
pop
mov
jns
mov
ja
flds
mov
or
sub
in
scas
xor
ss
clc
push
mov
or
out
pop
pop
cwtl
jae
cmp
ffreep
jno
add
dec
mov
insl
clc
loope
xor
and
and
dec
lahf
mov
mov
leave
add
popf
sub
test
mov
xlat
pop
mov
lea
ffree
cmc
in
out
in
pop
subb
out
xchg
leave
iret
pop
inc
cmp
in
lods
sbb
jnp
pop
mov
pop
loop
push
lods
inc
dec
lahf
push
das
aad
push
sub
call
pop
jmp
out
imul
cmp
jbe
push
jle
test
cs
movsl
out
or
mov
add
mov
sub
jno
sbb
jp
rcll
and
test
dec
pop
adc
dec
sub
push
sbb
testl
lods
mov
fnstcw
scas
add
xor
or
aaa
cmpsb
test
sbb
enter
scas
stos
and
aad
push
sar
cmpsb
jecxz
fs
or
inc
daa
shrl
jmp
push
jmp
jno
sbbb
insb
ret
xchg
push
stos
mov
fidivrl
cmc
mov
xchg
fdivrl
iret
cmp
xor
leave
xchg
ret
push
jnp
lea
or
sti
leave
inc
fldt
fs
cmpsl
jo
mov
and
das
mulb
pusha
sbb
into
iret
pusha
fucomip
xchg
add
and
xor
sahf
sub
out
jb
leave
mov
jo
jmp
hlt
pop
out
lods
cs
lods
loopne
hlt
push
insb
sub
mov
jl
inc
loopne
pop
xor
or
push
mov
jg
sbb
sbb
fdivs
neg
dec
adc
loope
adc
mov
sub
in
sbb
sbb
and
pop
xlat
fmul
ja
leave
xor
pusha
jl
clc
test
lret
popf
lods
pop
or
adc
dec
dec
cmp
jecxz
xorl
popf
lods
imul
mov
daa
pop
pop
cmp
or
out
pop
dec
leave
jnp
pop
pop
ss
pop
enter
jl
in
add
fcom
icebp
sbb
add
or
movsl
xor
loope
jno
inc
mov
and
or
xchg
in
sub
sbb
mov
adc
mov
pop
jmp
dec
sub
sbb
mov
mov
adc
push
out
jnp
popf
arpl
lret
notl
mov
lahf
fs
std
push
mov
jecxz
aad
clc
pop
adc
out
xor
pop
xchg
mov
int
std
pop
dec
into
add
mov
xchg
push
outsb
lahf
sub
push
lds
in
test
les
jns
dec
mov
std
or
test
mov
cld
cwtl
sub
fmull
jle
js
ss
push
jp
xlat
leave
push
dec
stos
sub
mov
xchg
push
int
and
mov
push
mov
js
mov
fidivs
push
test
or
test
xchg
mov
mulb
arpl
into
fldl
xchg
fwait
mov
mov
mov
cmpsb
in
mov
dec
mov
sub
mov
mov
rcrb
jp
inc
cmp
pop
sbb
xchg
sbb
gs
adc
pop
jl
aad
scas
fistpll
mov
and
push
xor
mov
xor
loop
adc
aam
fisubrl
pop
aaa
jae
aam
mov
mov
cmp
in
into
mov
rcrb
lods
stos
sub
hlt
jp
mov
ret
psllw
and
outsl
push
xor
ret
jae
fcompl
dec
lock
lods
pop
cmp
push
cmp
cbtw
adc
mov
cli
push
pushf
and
sub
dec
faddl
addl
jbe
insl
pop
sbb
cld
dec
cmc
mov
jle
xlat
jp
add
sub
lahf
and
mov
cmp
push
outsb
je
cmp
and
xchg
xlat
xchg
cli
andb
out
add
push
out
sub
pop
xor
out
push
or
imul
push
xlat
fstps
stos
lret
pmulhuw
sbbb
popf
mov
xchg
imul
data16
mov
ja
lods
cmp
decl
dec
popf
mov
in
iret
mov
loopne
cli
cmp
mov
les
inc
add
pop
add
call
rcl
mov
test
push
and
rclb
cmp
xor
and
mov
outsl
shrb
mov
dec
popf
jo
xchg
cli
fdivrp
jge
repz
dec
adc
or
jo
hlt
hlt
out
repnz
mov
lret
stos
dec
pop
pop
adc
test
fmul
subl
sbbl
pop
test
sub
dec
mov
popw
leave
xor
inc
negl
pop
test
pop
repnz
movsb
inc
out
pop
iret
in
pop
and
xchg
ret
cwtl
inc
ss
int3
mov
das
jno
data16
lods
dec
sub
xchg
sbb
pop
sub
enter
push
daa
xchg
cmp
call
xchg
aas
dec
push
push
sti
jnp
leave
test
dec
dec
scas
shl
push
shll
aam
mov
xchg
pop
rcll
and
ljmp
cs
xchg
sti
pop
xchg
jge
stc
or
push
arpl
bound
rcrl
push
jge
insl
cmovns
inc
leave
or
sub
clc
les
xchg
dec
loope
cmp
mov
push
cld
enter
into
mov
xchg
jnp
pop
sbb
sub
jbe
pop
xor
ss
aad
inc
cwtl
push
inc
dec
jl
loope
cs
arpl
xchg
in
stos
mov
js
sbb
mov
mov
pushf
push
push
fstpl
add
cmp
dec
int
sub
ja
shrl
inc
cmc
push
adc
add
imul
cmp
mov
dec
into
dec
dec
and
cmpsl
outsl
fisttpl
mov
jg
out
push
addb
adc
sub
out
sub
enter
or
stos
pop
fnstcw
adc
lcall
jge
xchg
lds
movsb
sub
in
cltd
mov
rcl
xor
into
in
mov
lea
xchg
cmp
or
rcll
mov
or
and
xchg
push
cs
jmp
outsl
repnz
fnsave
jl
das
or
xor
rcrb
jo
cmp
and
scas
sub
jecxz
jnp
push
mov
bound
push
outsl
inc
sbb
and
push
call
mov
xchg
int3
push
ret
inc
js
cmc
dec
mov
cli
jns
xchg
xchg
xchg
push
and
sub
out
and
ret
das
inc
push
arpl
pop
ret
jbe
jmp
pop
add
xchg
lods
movb
and
out
repnz
mov
cwtl
jno
mov
or
jl
sbb
pop
out
push
inc
lret
in
inc
mov
int3
pusha
nop
leave
pop
or
cmp
mov
lret
xor
popf
out
dec
popf
mov
cmp
shrl
xlat
pop
mov
push
ret
loopne
jne
insl
mov
mov
dec
mov
jns
sbb
mov
mov
in
jp
int3
hlt
das
aam
lcall
pop
mov
je
jg
or
cmp
mov
jo
jb
mov
fwait
jae
push
fistpll
pop
dec
cmp
pop
and
inc
popa
insl
mov
jb
outsl
xchg
jae
les
inc
push
jns
sahf
pop
jl
sbb
aad
inc
cld
ret
cwtl
imul
sbb
xor
stos
cli
sarl
gs
jmp
or
and
lods
leave
pop
stos
inc
pop
jle
subb
add
lds
mov
dec
fstpt
adc
sbb
std
mov
inc
ljmp
nop
sbb
jmp
adc
dec
jecxz
push
and
inc
push
hlt
inc
jecxz
rcrb
fdivr
pop
cmpsl
pushf
cmc
enter
or
cs
or
lock
orl
xor
out
fwait
addr16
and
fwait
pop
push
jmp
jmp
dec
mov
cmp
push
cmpsl
lea
jecxz
repz
testl
jl
int3
int
std
cmpsl
xor
aad
pop
data16
pop
movsl
das
fstpl
add
fwait
push
sub
les
lret
mov
jno
lods
test
jbe
push
addl
fdivs
dec
push
push
mov
mov
fildll
bound
popa
jmp
jge
xchg
out
adc
in
leave
jp
in
push
sbb
xchg
stc
add
cmpsl
sub
jns
add
sbb
in
pop
or
cli
xor
dec
mov
ror
fiadds
imul
bnd
lods
clc
mov
adc
jge
les
js
stc
add
and
fs
cmp
xor
je
inc
test
call
ss
hlt
push
fcoml
cmp
icebp
test
and
loope
ret
fildl
mov
stc
add
mov
jle
test
mov
je
in
add
sub
xchg
mov
notl
add
add
push
imul
stos
in
xchg
push
or
jmp
pop
mov
gs
emms
inc
mov
dec
xorl
mov
sub
add
mov
lds
subl
jg
gs
mov
sbbb
dec
and
dec
pop
sub
shll
mov
push
fstps
xchg
scas
pop
test
cld
mov
dec
sbb
mov
cwtl
pop
shll
add
mov
pop
lcall
decb
xchg
fs
xchg
lahf
xchg
enter
xor
sub
dec
bound
mov
xchg
mov
loopne
jge
sahf
mov
inc
test
movsl
outsb
or
dec
jno
fimuls
lret
fs
cmp
mov
add
mov
ss
sti
xlat
mov
popf
loopne
jge
aad
cmp
mov
loopne
inc
sub
push
adc
movsl
or
out
mull
jb
inc
mov
stc
fists
cmp
xor
iret
pop
loopne
push
sbb
inc
icebp
imulb
iret
jecxz
jno
push
jmp
push
dec
ja
int
jbe
icebp
pop
sbb
es
fiaddl
insl
xlat
loopne
fs
cmp
cmp
mov
mov
mov
adc
push
in
mov
lret
dec
sub
push
movsl
inc
in
aaa
mov
ja
das
jns
cmp
sbb
xor
adc
pusha
sub
cmp
insl
jnp
pop
add
mov
negb
xor
jno
or
popa
movsl
aaa
out
stos
ja
adc
fldcw
sbb
dec
ja
jno
pushl
jle
push
cmp
jnp
sub
push
xchg
inc
data16
pop
xchg
and
es
out
add
push
add
inc
mov
jg
cmp
pop
cmp
rclb
inc
lock
mov
mov
push
scas
mov
les
dec
insl
dec
repz
or
or
shll
jmp
dec
and
mov
stc
sub
cmp
dec
popf
popf
sarb
test
nop
test
mov
test
lahf
shrl
pop
pop
add
cmc
aad
mov
jge
push
lods
cmp
imul
adcb
aas
cmp
enter
dec
mov
enter
dec
mov
rorb
test
addb
std
mov
ds
adc
xor
mov
push
add
add
hlt
mov
mov
lods
push
test
pop
cmp
pop
jge
ret
xor
int3
dec
loope
pop
push
mov
outsl
jge
xorb
xchg
aam
sbb
mov
outsl
insl
inc
out
pop
xchg
insb
cli
or
stos
dec
or
jbe
or
pop
cmp
sub
lds
data16
cs
pop
mov
mov
lds
sbb
lret
repz
xchg
test
out
jl
cwtl
xchg
jp
pop
sahf
loope
inc
or
push
dec
dec
nop
jle
inc
sbb
popa
and
je
inc
mov
cwtl
push
outsl
aam
sbb
xor
out
sub
mov
ret
sub
ja
xor
sbb
cmpsl
fistl
mov
push
jb
sbb
popf
mov
cmc
adc
test
inc
jae
popf
xchg
pop
jge
loope
jnp
ljmp
pop
jmp
fs
cmp
mov
jl
lcall
mov
scas
stos
dec
cltd
xchg
outsb
xchg
dec
adcl
rcrb
push
dec
inc
dec
cmpsb
sub
sbb
stc
add
ret
shrb
inc
push
cmpsl
div
pop
xchg
enter
out
jb
sti
sbb
test
out
addr16
and
stos
pushf
push
dec
adcb
sub
pushf
sti
pop
jge
lret
lahf
ret
daa
mov
fs
sbb
pop
mov
fistpll
test
cld
and
fnsave
movsb
add
fsubrp
scas
mov
aam
xchg
into
shll
bswap
jp
xor
fcmovnb
dec
stos
movl
push
jb
int
sub
das
or
inc
mov
push
aaa
imulb
mov
xchg
cmc
jg
cmpsb
jmp
in
xchg
outsl
xor
nop
xchg
sbb
cwtl
ret
aaa
mov
dec
lock
loopne
adc
leave
mov
test
insl
adcl
xchg
fwait
dec
aad
xor
pop
shr
cmpsl
pop
stos
xor
lcall
xor
test
add
fldcw
fildll
cmpsb
fs
test
out
push
shll
stos
lcall
push
fistpll
test
insl
pop
push
in
mov
out
addr16
imul
mov
cmp
push
inc
mov
xor
sbb
addr16
dec
test
xor
int3
inc
icebp
ror
daa
mov
jnp
loopne
mov
jge
aad
push
sbb
push
pushf
insl
fnstenv
lock
aaa
lods
adc
shrl
push
pop
popf
inc
and
scas
rorb
xchg
mov
mov
xchg
popa
push
mov
push
ret
mov
les
dec
cmp
dec
mov
popw
or
mov
hlt
aas
sti
jbe
mov
adc
jmp
sti
or
pushf
mov
or
sahf
xor
jp
inc
xchg
in
lods
inc
adc
jnp
pushf
clc
dec
pushf
int3
dec
jp
jg
andl
ja
jbe
pop
cmpsl
push
ret
stos
add
mov
sarl
popa
out
ret
popa
lock
xchg
lret
sub
pop
sahf
out
sub
js
sub
test
mov
cltd
xchg
mov
outsl
incl
lds
cmpsb
popa
and
jg
rcll
and
inc
stos
or
mov
xor
cwtl
cmp
clc
in
dec
xor
inc
push
movsl
ret
cmpsb
dec
loop
fdivr
ss
inc
test
out
jo
sbb
adc
dec
mov
mov
sahf
push
lea
mov
ss
adc
adc
mov
jge
jae
loop
pop
orl
iret
imul
xor
in
iret
dec
bound
subl
inc
aam
inc
ror
ret
or
dec
ljmp
sbb
cwtl
push
fwait
jecxz
xor
push
adc
jne
mov
sbb
mov
xor
into
dec
cmp
sahf
mov
inc
mov
mov
xchg
mov
inc
add
jns
xchg
inc
lea
iret
das
clc
shll
jne
movsb
and
jae
sbb
adc
nop
ret
jmp
pop
int3
pusha
and
xor
inc
bnd
fimuls
enter
loopne
sub
jp
lret
stos
out
xorb
inc
xchg
or
inc
dec
mov
jmp
sarb
adc
int
cmc
push
data16
push
mov
pushf
pop
test
xor
ljmp
dec
adc
jb
ret
ljmp
pushf
dec
xor
add
mov
imul
sbb
repz
cmp
fwait
nop
mov
xchg
in
cmp
pushl
xor
inc
ja
mov
dec
sbb
sub
sub
hlt
hlt
lahf
lahf
in
mov
sahf
daa
add
cmp
roll
cltd
sub
hlt
sbb
adc
fst
push
mov
cmp
ljmp
aam
or
push
jmp
jnp
mov
mov
ret
pusha
xor
and
or
push
push
cs
mov
int3
pop
out
add
imul
inc
xor
or
jnp
mov
lods
xor
adc
fcoml
cs
lcall
sbb
mov
fidivrs
pop
add
int3
and
or
jne
xchg
mov
dec
pop
jbe
repnz
fisttpl
jae
push
andb
or
push
xor
cld
fldcw
scas
sbb
xor
sub
xchg
sub
mov
jb
aas
push
jnp
dec
aaa
in
clc
xchg
lcall
roll
cmc
and
fildl
sbb
ret
and
cs
and
mov
aaa
sbbl
mov
int3
vaddsubps
push
dec
inc
aad
jae
stc
xor
inc
or
push
add
mov
and
push
outsb
aas
mov
pop
xchg
addb
stos
adc
add
fistl
subb
cmp
jno
dec
xor
movsb
scas
cwtl
jg
out
jb
mov
clc
xchg
jp
xchg
insb
push
out
dec
xchg
pop
jb
ret
ja
bound
adc
cmp
mov
pop
int3
sub
sub
popf
in
popf
jmp
popf
push
es
xor
mov
rcll
lret
inc
shlb
fdivrl
ja
movsl
add
in
dec
push
hlt
out
push
or
xor
pop
jmp
lods
cmpsb
lret
fstps
ror
sar
test
dec
xchg
std
neg
popa
mov
lahf
add
xchg
cmp
lds
xlat
jmp
lea
sub
cmp
sbb
out
xor
scas
lcall
push
outsl
mov
or
es
iret
popa
push
out
or
data16
xor
test
test
in
cmpsl
gs
lahf
repz
xor
mov
dec
hlt
dec
sahf
cmp
push
sbb
push
push
lods
adc
into
cmc
mov
pop
xor
in
mov
arpl
mov
xchg
sbb
scas
or
inc
mov
push
add
sbb
loope
in
xchg
out
mov
adc
icebp
inc
ljmp
call
movsl
lock
cmp
sbb
cs
inc
ja
jecxz
mov
jo
inc
ret
sub
les
aam
int3
adc
sub
push
jo
sti
push
fadds
mov
scas
scas
gs
mov
jecxz
movsl
pop
and
test
sbb
pop
xor
xor
mov
cmp
jmp
xchg
lret
mov
lock
jg
cli
xor
test
xchg
push
repz
imulb
add
cmp
lret
push
mov
add
and
das
lods
and
cmp
sub
int3
sahf
or
pop
cmp
in
push
jmp
inc
rorl
jge
clc
or
es
and
jp
or
int3
lcall
lock
mov
lods
das
xchg
adc
add
and
pop
pop
cli
sbb
mov
push
outsl
xor
aaa
int
or
mov
jne
inc
mov
cmp
daa
fmull
sub
pop
dec
shlb
jp
test
arpl
rorl
jg
xor
and
insl
mov
mov
repnz
data16
sbb
dec
fiadds
adc
cmp
mov
outsb
mov
inc
in
xor
iret
pop
mov
sub
mov
jg
sti
xor
loope
stc
stos
cmp
data16
pop
fldenv
push
fnstenv
jle
push
inc
addr16
fldz
mov
and
out
sbb
imul
jmp
sbb
inc
cld
rcrl
loop
imul
add
outsl
arpl
xor
jmp
jmp
or
or
push
sub
adc
in
xor
mov
in
shrl
and
add
shll
mov
movsb
sub
and
or
add
adc
out
std
sahf
sub
mov
push
jbe
aad
xor
insb
mov
xchg
aaa
adc
faddl
mov
sub
xor
stos
sub
xor
jmp
negl
and
ljmp
mov
imul
mov
xchg
dec
sbb
lock
dec
lcall
cmc
xchg
xor
outsl
mov
inc
jge
mov
and
cmp
lret
daa
sbb
jns
xlat
sub
dec
ret
dec
lcall
push
das
xchg
inc
es
adc
bound
sti
cmp
mov
inc
jg
aam
call
xchg
push
mov
mov
pusha
mov
rol
fmull
add
mov
sbb
les
in
sbb
push
add
shl
xchg
dec
pushf
mov
sub
mov
cmp
test
or
dec
mov
insl
adc
and
ljmp
sti
mov
fs
lret
sahf
dec
pop
mov
push
loop
addl
jno
sbb
add
mov
fldcw
ds
push
aad
add
push
or
xlat
aaa
and
gs
dec
testl
into
xchg
scas
in
jecxz
or
adc
int3
xchg
and
cmp
rcl
aad
lcall
scas
sbb
aaa
js
aad
jmp
stos
sub
xchg
addr16
aaa
jns
mov
mov
inc
negb
inc
popa
sub
out
arpl
xchg
add
sub
pop
repnz
imul
ja
mov
mov
sub
jbe
cmc
leave
or
mov
sbb
adc
std
imull
icebp
lcall
orb
aad
fwait
adcb
xor
aaa
fildl
movsb
mov
cli
es
hlt
mov
mov
iret
sub
inc
cmpsb
add
dec
sbbl
adc
xlat
xlat
stc
scas
cltd
mov
je
stc
xor
aad
dec
adc
dec
mov
cmc
nop
cwtl
adc
movsb
adc
mov
and
clc
leave
jmp
mov
mov
adcl
daa
int
jo
cwtl
and
mov
and
popa
addb
adc
mov
mov
add
fwait
adc
add
sub
imul
adc
rcl
lret
rclb
lret
pop
xor
push
shl
imul
xchg
push
addr16
cmp
pop
pop
cli
mov
adc
into
cmp
idiv
fisubrs
adc
push
movsb
arpl
sti
and
and
xor
pop
jnp
and
jmp
xor
iret
cmp
out
pop
out
repnz
mov
xor
sub
cmp
sbb
stos
xchg
and
mov
loopne
pushf
mov
push
adc
mov
int
xor
pop
dec
push
add
cmc
pop
cld
es
pop
or
sub
dec
mov
jp
xchg
sbb
jg
testl
pop
mov
aaa
cmp
mov
ss
pusha
sahf
adc
aam
into
fdivr
int
jne
mov
mov
in
push
push
add
sub
jb
test
xchg
push
jecxz
shll
xor
test
dec
call
inc
fistpl
call
gs
popa
lcall
jp
loopne
sti
fildll
sbb
loop
push
adc
cmp
dec
mov
data16
ror
jns
cmp
lods
or
test
push
hlt
cld
jo
push
mov
add
ljmp
mov
cwtl
flds
inc
sbb
jae
mov
or
ja
jbe
and
xchg
das
push
test
inc
push
stos
lds
insb
push
aaa
sbb
std
cmp
clc
insb
mov
xchg
aaa
and
lret
enter
mov
sub
xlat
push
xchg
sub
aad
ret
aaa
bound
dec
xlat
pop
sbb
dec
in
sbb
dec
scas
xchg
sbb
cmc
inc
inc
xlat
sbbl
dec
add
add
data16
xchg
push
aam
push
mov
jo
xor
aad
int
ljmp
popa
out
jmp
cmp
popf
dec
sub
push
iret
in
nop
adc
mov
xor
std
lods
mov
in
or
sbb
pop
mull
lret
subb
jbe
jne
xchg
insb
hlt
int3
add
and
test
hlt
mov
shr
mov
push
jae
loope
pop
mov
in
mov
lcall
or
or
sbb
xor
add
pop
jp
sar
ja
cmp
in
call
lds
leave
shlb
xchg
adc
repnz
rorb
add
aam
fmull
aas
push
jl
cmp
bnd
lods
imul
out
icebp
je
pushl
pop
xor
pop
sub
hlt
and
je
sub
out
outsb
or
loop
mov
cmpb
in
and
xchg
mov
int3
sub
mov
js
adc
rcll
rcl
das
push
hlt
repz
and
jmp
mov
ret
mov
push
and
ror
and
in
pop
mov
and
es
jl
xchg
cmp
jno
inc
sub
pop
push
je
faddl
lcall
mov
sub
aam
pop
cmp
aad
sub
rorl
out
jg
pop
lcall
add
pop
loopne
test
or
pop
push
test
sub
adc
rclb
push
divl
inc
sti
rorb
dec
xor
xchg
push
mov
xlat
imul
arpl
xorl
or
push
xor
in
jne
sub
out
xchg
ja
nop
sbb
sub
mov
cmpsb
fidivs
shl
icebp
adcl
out
mov
jae
push
mov
rcll
push
or
ss
mov
sbb
cmp
pop
loope
lods
aaa
fisubl
stos
pushf
fistl
inc
push
cli
sub
ds
stos
xor
add
mov
loopne
dec
xor
or
js
mov
mov
clc
subl
pop
sbb
in
xor
xchg
inc
hlt
push
lods
xlat
pop
xor
pop
push
and
in
rcrb
push
xchg
push
mov
cmp
daa
sar
sub
test
cmc
adc
sub
popf
or
or
ds
mov
sub
cld
rorl
xor
xchg
loope
je
roll
xchg
dec
mov
stos
fmuls
lret
cmp
ljmp
jp
cmp
cmp
repnz
cmp
lahf
mov
addr16
call
mov
xchg
sub
loop
in
mov
fcoml
push
add
aam
fldenv
push
insl
adc
sbbl
ficoml
popf
mov
iret
jnp
add
mov
out
lret
in
jbe
mov
in
xlat
and
pop
mov
pop
xor
filds
xor
fbld
lods
lea
ja
xor
popl
bt
xor
dec
mov
js
adc
inc
ret
push
or
jae
repnz
cmp
push
pop
sub
outsl
ljmp
xlat
mov
std
adc
xlat
jo
movsl
inc
pop
mov
adc
cli
mov
jae
call
push
pcmpgtb
sub
jl
jmp
fcoms
xchg
test
movsl
shlb
repnz
in
clc
mov
jp
leave
mov
jmp
push
rorb
rorl
sub
mov
pop
dec
and
add
sti
cmp
lock
pop
xor
inc
inc
push
ja
clc
xor
mov
add
notl
xchg
xchg
jae
dec
scas
pop
leave
xchg
or
cmp
mov
xor
sbb
mov
pop
dec
xchg
jecxz
fwait
fucomp
push
fs
fdivrs
push
inc
iret
xchg
mov
icebp
mov
shlb
inc
cmc
add
push
lahf
out
xor
leave
shrl
add
ret
scas
mov
fwait
inc
fcmovnbe
sbb
jmp
jge,pt
cmpsl
popa
mov
mov
lahf
fidivl
jbe
imull
xor
ficompl
ss
and
adc
jecxz
pop
out
push
aaa
ret
mov
sub
sbb
cmp
jg
iret
or
aam
pop
fisubrl
mov
cs
cli
xlat
inc
inc
pop
lea
push
and
push
fwait
adc
jb
push
adc
xor
or
xor
jmp
mov
jecxz
mov
stc
mov
mov
cmp
xchg
roll
sbb
jg
lock
std
pop
repnz
sub
lods
movsb
inc
daa
outsb
shlb
mov
stc
add
add
xor
pop
pop
jne
inc
xchg
jmp
enter
push
jmp
out
pop
fwait
aas
ljmp
pop
sub
filds
push
dec
lds
test
fcmovnb
cmp
cmp
or
inc
daa
andl
cwtl
adc
add
pusha
lds
mov
imul
nop
mov
mov
pop
or
mov
pop
mov
insb
int
mov
mov
or
enter
std
cmpsb
cltd
cmp
lret
add
mov
dec
rcl
xchg
bsr
cmp
mov
adc
ficoml
inc
jbe
neg
aas
push
jge
xchg
xchg
stos
mov
aas
ljmp
jmp
pop
cmpsb
movsl
cmp
std
leave
xchg
inc
movsl
das
daa
mov
iret
xchg
jl
jecxz
fidivs
or
jge
xor
pop
mov
or
xchg
push
cmp
mov
outsb
lods
or
jecxz
xor
pop
add
test
push
dec
popa
lds
jns
repz
cwtl
inc
add
push
movsb
pop
mov
xchg
sbb
int
push
pop
es
gs
xchg
es
lea
inc
lahf
mov
add
test
xlat
fsubs
loop
out
pop
clc
les
arpl
jo
data16
pop
add
cltd
push
push
in
push
xlat
pop
andl
adc
jns
mov
push
jecxz
mul
dec
jle
push
xchg
inc
rolb
fnsave
jecxz
dec
jmp
movsl
gs
dec
sub
lret
cmpsl
les
mov
adc
call
xchg
movsb
fwait
inc
jno
jb
std
popf
cmp
adc
data16
iret
cmpsl
cmc
mov
test
mov
or
lcall
rolb
dec
std
inc
dec
bound
movsb
inc
int
adc
shrb
sub
aad
inc
mov
arpl
loope
fisttpl
fldcw
inc
and
mov
xchg
push
jns
loop
shlb
add
sbb
lds
lret
loope
xchg
loope
add
fisttpl
enter
outsl
push
jge
xchg
imul
add
inc
push
add
cmp
mov
xor
fwait
dec
pop
pop
inc
or
cvtps2pd
subb
push
ds
dec
lea
pop
jge
in
xor
mov
cltd
addb
cmp
aaa
xchg
adc
divl
fadds
test
lahf
pop
pop
sbb
ljmp
or
lea
std
push
aad
jg
xchg
or
sti
xchg
push
testl
fs
stc
or
dec
push
rolb
mov
fists
clc
lret
mov
xor
lcall
enter
lea
or
cmp
dec
xchg
ja
mov
push
stos
push
and
mov
addr16
fs
sub
push
cltd
mov
jae
jne
mov
push
fidivrl
call
sub
push
adc
mov
mov
adc
gs
out
pop
sbb
addr16
loope
or
xor
icebp
adc
and
mov
in
in
insl
push
in
sbb
fiaddl
jle
shlb
jo
push
ret
sbb
cmp
lea
gs
xchg
dec
aam
negl
popf
sub
pop
mov
rcr
stos
ja
ljmp
out
repnz
mov
inc
xor
push
lret
popa
fbld
out
lods
stos
mov
ljmp
out
jmp
mov
scas
test
leave
push
mov
data16
mov
mov
inc
mov
mov
mov
xchg
jg
lea
inc
sbb
lea
xor
dec
push
out
mov
addr16
dec
add
sub
sbb
xchg
test
push
test
sbb
mov
lret
dec
outsb
pusha
in
mov
outsb
sbb
inc
jb
push
xor
mov
pop
test
cmp
shl
andb
mov
cmc
sub
cmp
mov
push
mov
in
push
test
lea
insl
loop
jp
aad
mov
out
faddl
mov
popf
xor
sti
sub
sbb
or
sbb
ljmp
push
jp
and
aad
jl
xchg
cmp
dec
push
jl
mov
addr16
outsb
rcrl
or
cmc
xor
scas
ja
aas
sbb
inc
movsl
push
inc
push
jo
aad
or
lahf
or
pop
lret
cwtl
jns
incl
jmp
xlat
cmp
jg
mov
into
dec
pop
xor
jnp
movzbl
sub
aad
push
movsb
jnp
ds
xlat
movsl
pop
push
test
cli
rcl
cmpsl
and
jbe
imul
add
mov
and
enter
pushl
subl
fwait
xor
dec
cmpsl
out
jle
aas
scas
inc
ja
les
cmp
mov
or
xor
or
sub
pop
mov
push
xchg
shr
and
jnp
mov
xchg
dec
clc
lahf
rolb
push
add
add
notl
iret
xchg
dec
lret
sarb
js
dec
stos
setl
ja
loopne
jmp
in
sub
das
sbb
orb
mov
clc
imul
pop
lods
sub
jg
push
xchg
dec
int3
dec
insl
out
int3
xchg
ficompl
std
jae
pop
insl
pop
sbbl
jb
mov
push
mov
add
data16
lods
inc
adc
mov
in
inc
cmp
adc
xor
ljmp
and
aam
std
inc
push
mov
loopne
mov
pop
sti
xor
repz
ljmp
fwait
sub
xor
stos
jbe
fs
hlt
jne
ja
fs
in
repnz
sbbb
inc
dec
pop
sahf
or
pop
cmp
jecxz
fstpt
lcall
mov
negl
mov
pop
loop
push
and
xor
inc
mov
adc
sub
xlat
cld
jmp
rep
cmc
pop
lock
mov
mov
and
xchg
in
dec
mov
inc
daa
xchg
sub
xchg
js
insl
jle
sbb
fnstcw
enter
push
cmc
outsl
inc
imul
pop
inc
mov
pop
sbb
push
or
push
mov
stos
push
stos
push
icebp
scas
test
inc
loopne
mov
mov
jne
sub
push
mov
mov
insl
add
or
lea
add
mov
leave
mov
pop
or
xor
cs
push
jmp
in
insb
inc
add
dec
ljmp
inc
ror
add
xor
rorb
cld
lret
xor
or
add
clc
add
lret
mov
cmp
add
jle
mov
cmp
cmp
jbe
push
adc
dec
pop
mov
test
mov
je
or
loopne
cmp
mov
in
int
cmp
icebp
sbb
ds
fisubl
adc
jecxz
and
mov
push
std
inc
out
and
mov
sbb
jle
jmp
andb
xchg
mov
aaa
xchg
cmc
insl
adc
jbe
rclb
enter
pop
and
jae
int3
jno
jno
dec
stc
add
push
mov
lret
into
imulb
push
movsl
cmc
jg
cli
cwtl
dec
movsb
cmp
xor
inc
inc
fldt
arpl
cli
mov
sbb
movsb
mov
pop
movsl
int3
jecxz
fwait
mov
push
mov
setl
in
bound
fs
adc
pop
adc
push
jg
xlat
jl
ret
inc
pop
js
shll
daa
xor
jne
aas
cmp
cld
push
adc
add
dec
int
test
adc
lds
ret
ja
sbb
mov
inc
scas
test
insl
das
and
xchg
inc
xchg
fs
shll
loopne
movsl
and
clc
aas
mov
mov
cmpxchg
and
push
addr16
aam
hlt
inc
sbb
daa
sbb
pop
sbb
push
sub
stos
cmp
inc
nop
add
lcall
sub
push
xor
insb
sti
cmp
neg
fidivrs
sahf
sub
jns
scas
xor
push
add
cmp
lea
pop
fisubs
aaa
lds
aas
xchg
push
mov
ret
ljmp
inc
ret
cmp
cld
ret
test
mov
sub
stos
push
cld
addr16
mov
mov
jae
shl
push
mov
inc
cmp
lret
sub
inc
xor
mov
cli
repz
jo
loop
xchg
inc
push
enter
test
repz
cltd
or
jge
sub
push
push
mov
sbb
out
pop
mov
push
cmp
push
sbb
or
lea
insb
ss
nop
lods
jne
dec
enter
xor
mov
sbb
dec
push
mov
mov
loopne
inc
fsubrl
push
adc
xchg
sub
inc
cmp
out
ljmp
sub
and
ret
add
leave
in
xchg
push
sub
xor
mov
pop
jle
popf
dec
sub
popa
xor
imul
and
sub
loope
out
fstps
or
ds
add
and
jno
cli
js
daa
mov
push
repnz
xor
es
hlt
or
mov
das
orl
outsb
loop
cmpsb
fldenv
jmp
aas
xchg
mov
arpl
clc
and
and
aad
dec
xchg
push
cmp
outsl
out
int
or
mov
ljmp
int
xchg
jae
pop
insl
popf
int
xor
pop
cli
sub
adc
jle
ret
ja
insl
dec
sub
inc
stos
lea
sbb
adc
mov
pop
pop
fldcw
vmovntpd
jo
lods
aas
movsl
inc
outsl
mov
andl
lds
cmp
insb
xor
stos
mov
and
pop
std
fxam
push
inc
sbb
xor
leave
sub
mov
jg
movsb
sub
stos
vpmaxsw
mov
push
pop
roll
xchg
stos
icebp
std
sbb
lret
xchg
xchg
xor
inc
imul
dec
js
fisubrs
shl
or
ret
lcall
insb
pop
rcrl
in
adc
mov
and
pop
shl
pop
enter
iret
lahf
xor
dec
push
push
xor
fidivs
sbbb
stc
mov
fnstenv
out
bound
adc
in
fnstcw
gs
push
negb
and
xor
adc
sarb
lock
ficoms
pop
repnz
mov
sar
addl
mov
lret
fiadds
std
adc
dec
mov
mov
or
xor
mov
mov
rolb
sub
lods
popw
cwtl
stos
pop
mov
fcmovb
mov
fbld
addr16
loopne
push
mov
jne
hlt
mov
xchg
xchg
xor
push
stos
xchg
lret
xlat
mov
xor
sbb
fwait
les
cltd
lcall
imul
je
ja
xorb
cmp
pop
pop
xchg
dec
jg
lock
jmp
pop
mov
dec
mov
push
cmp
pop
mov
stc
fsubl
call
insl
lds
mov
adc
lret
mov
mov
pop
outsb
mov
cltd
jp
inc
pop
sub
movsb
out
lea
rol
scas
fimull
cmc
dec
inc
cmp
push
jg
push
pop
sub
lods
ss
push
xlat
jge
shll
pop
xchg
pushf
out
cmp
or
adc
cmp
in
into
movsb
dec
popa
repz
cltd
or
push
pushf
fidivrl
pusha
fmuls
rorl
scas
fnstcw
test
cli
fs
mov
cli
call
pop
xor
add
pop
or
or
jecxz
xchg
outsl
push
cmp
mov
mov
xchg
sub
inc
rcr
rorl
test
pop
or
jbe
or
xor
pop
xchg
ja
int
test
and
repz
lods
add
pop
nop
cltd
xchg
jmp
popa
add
sbb
pop
xlat
negb
jp
xchg
xor
leave
and
xchg
jns
add
push
adc
out
adcl
xchg
xor
jg
enter
fiaddl
mov
or
cmpl
dec
sub
ds
into
add
into
sbb
in
mov
loop
sbb
mov
loope
push
out
out
lea
mov
jge
or
xor
and
in
dec
jp
dec
add
out
push
xor
cmc
cmp
inc
sub
add
mov
lret
out
sub
inc
and
repz
shll
add
xchg
push
daa
addr16
jno
in
and
out
insb
loope
cmp
inc
cmp
fldenv
scas
int3
sbb
push
rolb
pop
mov
pop
xor
test
cwtl
jmp
rorb
push
mov
sbb
xchg
cld
outsb
mov
and
mov
sarb
movsb
add
fsubr
daa
fldl
mov
mov
xor
xchg
xchg
out
xchg
inc
dec
loop
xchg
mov
mov
adc
test
xchg
and
xchg
adc
aaa
push
jns
ljmp
into
into
adc
xor
push
mov
enter
push
ret
xchg
lods
daa
idiv
jno
xor
jo
cmpsb
dec
push
jmp
inc
test
pop
mov
loope
jle
sbb
or
sbb
cmp
out
shlb
jo
sub
leave
jle
int
loope
dec
adc
mov
pushf
or
adc
call
and
iret
inc
sti
sarl
aad
add
cmp
and
ret
repnz
or
mov
jl
hlt
fdivr
add
movsb
cld
mov
fisubl
add
and
jo
mov
pop
fwait
add
xchg
out
dec
push
sbb
jmp
mov
addb
addr16
cwtl
ljmp
sbb
negb
mov
sub
inc
cwtl
sbb
sarb
cltd
ret
and
jo
test
fwait
cmpsb
insb
push
loop
cmp
pop
or
mov
add
test
mov
nop
aam
mov
pop
ret
aam
push
lcall
scas
xchg
mov
push
testb
mov
js
xchg
xchg
shlb
xchg
sub
pop
or
rclb
jns
testl
lcall
ss
dec
mov
sbb
test
cmpsl
pusha
push
shlb
imul
mov
pusha
pop
int
es
aad
push
test
jbe
outsl
jbe
arpl
rorl
popf
jbe
loope
dec
inc
lcall
call
push
fs
loope
shlb
jmp
inc
inc
adc
enter
sub
mov
pop
iret
stos
pop
mov
out
push
jl
out
xchg
sbbb
push
das
clc
out
sbb
jge
push
add
jbe
neg
inc
daa
cmp
aam
and
sbb
jge
popf
in
xchg
push
add
test
aam
movsl
sti
push
aaa
add
pusha
pop
push
enter
fadds
adc
aad
int
test
shlb
daa
inc
xlat
jl
or
push
arpl
ret
fsubrp
fsubl
pop
and
cmp
xor
inc
pop
or
xlat
imull
outsl
sub
cli
and
shll
pop
popa
fwait
cmp
fcomp
incl
sarl
loope
xchg
outsl
femms
inc
xor
xor
pop
cmpsl
shlb
js
pop
mov
jo
dec
mov
int
pop
es
cmp
mov
adc
and
sbb
xor
jg
mov
jecxz
cmpsl
or
jge
xchg
cmp
addr16
cwtl
aam
dec
data16
mov
and
pop
push
lods
jp
inc
in
or
jne
les
int
push
movsl
xchg
mov
push
push
mov
shll
push
add
lahf
adc
fstpl
pop
ja
fimuls
adc
push
repnz
push
and
in
dec
mov
out
dec
cmc
jle
xchg
mov
sub
mov
rcl
cmp
cmpsb
xor
rcrb
aam
sbb
jge
add
stos
jle
out
xor
mov
gs
scas
add
movb
movsl
jnp
lods
mov
in
test
out
and
ret
xchg
xlat
push
loope
xchg
push
push
inc
mov
iret
inc
xchg
cmp
mov
dec
mov
rclb
ficompl
xlat
xchg
xor
jne
cmp
sbb
sub
cmp
dec
ret
lds
push
clc
mov
ret
loop
fnstcw
jl
insl
mov
mov
jne
sbb
xchg
push
and
je
pop
add
repz
test
test
popf
pop
add
cmp
mov
call
repz
faddp
lret
xchg
pusha
lds
mov
and
adc
or
sbb
lahf
rorl
inc
mov
mov
scas
xor
adc
dec
in
and
in
cmp
popa
pushf
movsl
pop
mov
movsl
add
lahf
xchg
fisubs
mov
xor
clc
or
sub
lock
pop
div
adc
inc
mov
scas
sub
xchg
sbb
push
loopne
and
divb
rcrb
mov
int3
sub
jo
lds
lods
cs
loope
out
mov
popf
mov
pop
insb
pushf
or
mov
and
mov
sub
cs
rcr
adc
mov
adc
imul
js
xor
orb
xchg
movsb
mov
pushf
xchg
add
mulb
xor
lods
outsl
cs
mov
jne
leave
cmp
and
and
in
fdivrs
xor
arpl
xchg
rolb
js
sbb
push
sti
icebp
lods
or
cld
int
push
push
dec
xchg
das
pop
lds
addl
mov
pusha
and
mov
mov
pop
jmp
pop
cmp
jge
lea
addr16
cmp
ds
push
insl
call
fisubrl
aam
sahf
fistpll
aam
incb
and
sub
rolb
mov
mov
iret
icebp
fs
push
clc
mov
scas
in
mov
push
sub
pop
jbe
pop
lret
pop
mov
mov
insb
push
fs
loopne
out
aam
insl
and
rcrl
into
popa
loope
xchg
outsl
in
shrb
pop
xor
push
jae
shlb
pop
and
test
mov
pop
sub
addr16
lret
or
cs
es
aaa
sub
iret
call
push
lret
jmp
movsb
enter
std
inc
sub
repz
sub
jge
loope
test
in
push
pusha
and
mov
enter
sub
or
and
aas
xchg
les
movsb
aad
shrb
test
cld
mov
add
aaa
cltd
fisubl
mov
ds
push
mov
test
cwtl
addr16
xchg
mov
ret
mov
sub
imul
frstor
cli
ss
nop
pop
xchg
in
lods
insl
push
outsb
fs
cltd
fldt
lods
je
push
out
ljmp
xor
mov
inc
repnz
pop
aad
lahf
call
add
dec
xchg
mov
jecxz
adc
aam
lcall
mov
add
mov
iret
mov
jecxz
test
loope
test
fwait
pushf
mov
mov
and
push
mov
jmp
mov
fisubrs
jnp
jp
sub
into
mov
in
mov
pop
xchg
pushf
lret
mov
stos
lods
xchg
mov
mov
adc
mov
lret
and
mov
xchg
mull
cmp
push
pop
icebp
xorl
scas
aad
jno
cltd
popa
inc
dec
das
dec
xchg
insl
rol
dec
add
jo
jge
cwtl
xor
orb
repz
pushf
rol
ret
and
adcl
xchg
nop
mov
cmp
xchg
mov
pop
scas
sbb
mov
cld
sbb
xor
jmp
mov
mov
imul
insl
pop
inc
shlb
cmp
imul
jmp
push
dec
push
dec
add
ret
andb
cmp
sti
lods
int
das
out
test
gs
adc
das
addr16
ss
pop
xchg
lahf
sbb
aad
aad
popa
testb
rcr
cmp
mov
repz
pop
push
sbb
mov
jmp
cwtl
test
cmpsb
pushf
jo
lret
push
xchg
mov
lock
push
xor
fstps
adc
fucom
movsl
cmp
dec
mov
dec
std
cwtl
mov
cli
push
es
in
push
sub
inc
xor
in
or
lret
daa
sbb
icebp
out
pushf
xchg
stos
or
subps
insb
pop
repz
adc
mov
loop
es
mov
jge
sub
cmp
fmul
jle
cmp
mov
jg
loop
mov
adcb
in
xor
mov
fldcw
dec
cmp
in
xchg
movsb
mov
mov
iret
js
push
ja
xchg
nop
testb
enter
sub
scas
imul
lret
sub
popa
sbb
frstor
inc
aad
xchg
cli
jo
xchg
lcall
push
jne
lock
ja
nop
pop
xchg
xor
clc
jbe
and
lods
pop
cmpsb
pop
loopne
push
pusha
into
cmp
sbb
cwtl
test
paddusb
fsubrl
mov
lock
rorb
jge
ds
pop
jb
dec
or
fdivr
cmp
and
orb
sub
cmpsl
pop
std
sbb
jne
cli
in
es
in
push
adc
dec
adcb
cltd
mov
mov
or
inc
dec
add
dec
mov
mov
sub
in
insl
fcmovbe
jge
mov
cltd
hlt
dec
sarl
xor
insl
jae
sub
or
fnstcw
xlat
xlat
sbb
cmpb
outsl
xchg
xor
sti
cmpsl
xor
mov
pop
xor
or
xchg
sbb
dec
sub
in
pop
sub
je
lods
inc
hlt
cmpsl
inc
js
mov
pusha
inc
inc
fisttpl
mov
jno
out
cwtl
js
out
mov
dec
sub
insl
das
cmp
dec
cmp
cmp
mov
mov
sti
cwtl
xchg
dec
mov
add
imul
pop
insb
jecxz
insl
pop
sbb
inc
mov
das
and
aas
sub
in
add
iret
jmp
inc
imul
test
out
out
mov
fs
lods
stos
cwtl
push
leave
or
xlat
dec
mov
and
pushf
sbb
xlat
lahf
push
mov
std
pop
jp
clc
loop
cmpsl
cltd
je
xor
mov
int3
xchg
ja
sbb
adcb
cli
mov
aad
inc
js
std
jle
int
jle
into
adc
jp
cmp
jae
cmpsb
or
cmpsb
icebp
xor
sbb
lds
shll
lss
xchg
mov
call
add
in
sahf
xchg
or
jle
clc
xor
xor
mov
push
lods
shlb
icebp
rcr
sub
cmc
loop
push
jns
loopne,pn
pop
push
jmp
mov
pop
sahf
add
or
fldz
popa
ja
pop
mov
ja
aam
mov
jns
fsubl
repnz
dec
subb
lods
or
int3
mov
sahf
shll
les
mov
mov
mov
sbb
push
dec
ss
and
mov
inc
adc
xor
cmc
lret
sahf
sarl
inc
xchg
jl
sbbl
imulb
xor
lods
aas
xchg
fistps
mov
lods
mov
mov
lds
icebp
stos
hlt
test
mov
push
sbb
loopne
dec
xchg
xchg
dec
das
dec
adc
or
push
sbb
push
pop
pop
mov
arpl
pop
mov
sbb
dec
sarb
dec
cld
mov
mov
jno
call
ret
mov
xlat
cmp
cmc
aaa
pushf
in
adc
mov
jg
subl
or
push
out
mov
lret
fpatan
and
fisubs
push
jg
lds
jae
sahf
rcr
lahf
adc
xor
in
xchg
ficoml
mov
dec
repnz
push
ficompl
jp
mov
clc
cwtl
test
out
scas
cmp
pop
roll
xor
and
jae
and
add
mov
and
cmpsb
mov
add
lods
inc
inc
jmp
jg
mov
enter
adcb
into
adc
js
mov
jle
cltd
mov
icebp
cld
mov
dec
dec
arpl
mov
mov
loope
loopne
dec
and
adc
mov
xor
pop
cltd
shl
mov
bnd
popa
pop
jmp
stos
adc
xor
cs
jb
popf
jae
leave
mov
cmp
cmp
push
int
les
leave
scas
mov
fdivs
scas
sahf
ljmp
mov
dec
sub
cmp
inc
sub
sub
xchg
jg
stos
pop
shrb
jo
or
hlt
add
fbstp
mov
not
push
xor
sub
cld
inc
jge
push
inc
ja
push
adc
pop
push
sbb
popf
add
sub
idivl
jl
pop
into
cmp
inc
or
xchg
pop
call
mov
fisttps
mov
int
test
jbe
pushfw
jg
inc
insb
pop
mov
xchg
pop
jb
fwait
lods
jae
mov
lods
jge
call
inc
mov
cmp
pushf
sbb
pusha
jb
cmp
pop
sub
arpl
lea
insb
popa
cmp
sbb
mov
rclb
fimuls
shrl
clc
nopl
pop
push
dec
xor
xchg
adc
rcr
mov
xor
or
call
mov
outsl
or
stos
push
es
jmp
mov
cltd
daa
xor
and
out
out
sub
cmp
adc
das
xlat
mov
cmpsb
pushf
jno
and
pop
push
bnd
sbb
add
jo
pop
sub
test
ja
mov
fcoms
mov
aam
sub
add
mov
sbb
jecxz
lock
xchg
pop
cmp
js
icebp
sub
mov
lret
xchg
mov
xchg
bound
iret
and
cld
sub
das
cmc
cmc
add
fs
pusha
pop
xchg
xlat
add
pop
dec
aas
xor
out
xchg
fisubl
loopne
stos
and
in
hlt
and
aas
hlt
das
or
sbbb
sbb
and
repz
inc
xor
scas
inc
shrl
adcb
inc
jmp
dec
sbb
add
jecxz
xor
movsb
lds
loope
push
je
pop
cmpl
ljmp
mov
je
or
test
andl
data16
lcall
sbb
lret
inc
add
imul
lds
lahf
jge
mov
mov
dec
add
popf
rclb
sti
in
mov
shrl
sub
fistpll
push
add
mov
or
sub
lods
enter
fwait
or
inc
add
pop
adc
xchg
and
arpl
cs
arpl
pop
push
dec
jnp
shl
jecxz
shl
je
sar
insl
fistpll
lds
lret
or
or
lret
push
mov
setge
popa
add
call
sub
push
adc
out
hlt
jecxz
push
mov
les
enter
adc
inc
fs
mov
sub
pop
add
xor
out
addb
leave
jns
insb
pop
aaa
ljmp
mov
mov
rcl
inc
leave
jp
aas
push
mov
popf
mov
sub
mov
cmc
ffree
and
in
xor
inc
cmp
cmpsl
cmp
mov
or
mov
faddl
jecxz
mov
cmpsb
xchg
pop
mov
hlt
jl
inc
subb
lret
iret
ja
cmpsl
mov
jg
dec
xchg
mov
lret
sub
cmpsl
in
dec
dec
jl
dec
mov
out
movsl
notb
loopne
adc
mov
mov
in
mov
xor
sub
fmul
jo
mov
sbb
loope
push
jg
add
fisttpl
or
in
out
xchg
sbb
jg
sub
mov
andb
es
aam
push
mov
aas
aam
xor
stc
call
xlat
xchg
imul
or
aaa
in
mov
fsubl
stc
inc
pminub
mov
or
repz
aam
shlb
stc
dec
les
bound
faddl
mov
movsb
int
lahf
sbb
sbb
cld
ret
jae
lret
fsubl
push
mov
push
cld
push
stos
mov
enter
lods
into
mov
push
fisttps
add
push
push
or
xor
xchg
add
mov
and
mov
jae
cmp
mov
xlat
call
outsb
movsb
mov
cmp
fisubrs
jmp
dec
fisttpll
leave
sbb
pop
repz
push
outsb
loop
xchg
mov
mov
pop
rorb
push
daa
in
jns
adc
or
paddb
lds
int
push
dec
sub
cmpsl
pop
fsubl
sub
and
pop
xor
rolb
adc
repnz
pusha
por
xor
sbb
cmc
movsb
out
imul
jge
mov
outsb
stos
in
or
pop
and
adc
loop
push
test
pop
gs
enter
outsl
inc
adc
les
inc
push
sub
repz
nop
lret
in
outsb
mov
negb
outsl
bound
ret
adc
adc
mov
xor
ss
add
adc
xor
imul
mov
jg
xchg
xchg
fistl
cmp
fisubl
inc
pop
mov
scas
lods
cmp
clc
or
ss
fs
incb
pop
add
out
adc
rol
test
adc
in
jp
inc
into
add
cmpsl
ret
pop
rorb
pop
mov
add
call
lea
into
dec
xchg
fbstp
aas
cltd
cmp
xchg
lahf
dec
test
idiv
jo
mov
cmp
dec
fcomps
bound
loope
hlt
mov
jne
mov
stos
aam
outsl
les
js
stos
and
pusha
test
or
or
ret
xor
je
adcb
push
lock
addb
outsl
test
out
fcom
and
aas
shlb
cmpsb
sub
or
jno
popa
jp
clc
imul
cmp
cltd
jno
sbb
ja
pop
ljmp
push
hlt
repnz
cld
lea
aas
xchg
loop
dec
addr16
insb
pop
inc
mov
negl
popl
push
ficoml
sbb
ss
sbb
pop
cmp
imul
popa
call
cs
gs
jnp
mov
testl
mov
or
sbb
jnp
loope
xor
out
push
cli
daa
jae
xlat
cmp
jmp
loopne
je
iret
fwait
pop
in
lea
test
xchg
mov
or
not
iret
inc
pop
inc
adc
push
aas
outsb
cmpsl
iret
add
cmp
inc
or
xchg
dec
test
add
lea
fadds
test
adc
cmovle
ss
shrb
shrl
xchg
jp
cmp
jmp
pop
dec
lods
adc
hlt
mov
mov
cmp
dec
in
sub
insl
push
xchg
lcall
ror
pop
stos
lahf
rorb
addr16
pop
inc
pop
mov
aas
mov
lds
sbb
fidivs
lds
or
pop
pop
mov
jb
push
xchg
mov
xor
push
sub
rorl
lock
add
clc
out
std
push
cmp
push
and
jb
jle
cli
call
out
dec
mov
mov
push
aas
fidivrs
jno
lea
add
aas
loop
sarb
dec
inc
mov
mov
int3
repnz
sbb
aas
pop
add
sbb
push
and
mov
inc
jae
cmc
sub
iret
lock
movsb
sub
imul
adc
mov
cmp
pop
cs
lea
test
or
nop
dec
fcoms
ljmp
addr16
add
sub
cmpb
sbb
popf
mov
sbb
cmp
dec
movsb
stos
fldcw
out
jno
mov
jmp
cmpl
int3
xchg
dec
or
repnz
js
aam
mov
add
cmp
flds
imul
dec
jnp
mov
into
mov
insw
cs
or
or
aad
mov
pop
arpl
loopne
pop
sub
nop
xor
pop
xchg
cmp
js
or
aaa
sbb
adc
ret
fsubl
jle
adc
pop
in
xchg
lret
push
inc
dec
inc
cmpsb
sbb
cmpsl
sahf
cli
mov
xchg
fcomi
aas
divb
sbb
ret
push
mov
inc
imul
xlat
lcall
mov
test
and
pop
adc
ja
and
movsb
mov
sub
in
daa
fs
sbb
clc
sub
stos
mov
or
int3
cld
shl
cmp
shrl
cmp
cmc
cli
dec
sub
or
xchg
mov
inc
icebp
pop
xchg
pusha
sbbl
cwtl
popf
pop
dec
movsb
xchg
test
dec
rorl
push
leave
pop
mov
gs
sub
icebp
fistpl
test
cmpsb
dec
es
sbb
pusha
out
dec
fcoml
cmp
in
jns
sub
mov
mov
lcall
jl
fmuls
out
pusha
lea
cmpsb
add
lock
fildll
ror
cmp
mov
dec
xchg
in
sahf
mov
mov
jne
test
sahf
cld
pop
incw
jecxz
push
inc
inc
and
gs
cmpsb
int
adc
mov
xor
test
inc
jmp
xchg
xchg
push
sarl
or
enterw
movsl
xchg
mov
clc
mov
sti
mov
out
pop
popf
add
xchg
insl
jne
xchg
into
pushf
cmp
std
ret
push
scas
mov
xchg
jo
push
loope
and
xor
sahf
cmp
shll
loope
subb
mov
cld
mov
mov
cmp
out
adc
fsubl
cli
and
push
test
outsb
fisttps
rclb
xchg
mov
out
mov
xlat
ds
mov
inc
adc
out
jp
xchg
movsb
cltd
nop
rclb
mov
push
ret
mov
enter
out
xchg
and
xchg
popf
mov
inc
jae
cmp
or
fistpl
ja
sbb
push
imul
stos
cmp
dec
fdivl
mov
ret
fisubrs
lret
loopne
nop
adc
sbb
mov
iret
sub
icebp
push
std
int3
lock
js
popa
mov
and
mov
daa
insb
and
cmc
pop
sbb
pop
push
fdivrl
adc
or
mov
mov
fldenv
pop
mov
mov
xor
push
push
in
jnp
shlw
pop
in
and
fstps
scas
loop
pop
jne
mov
sub
and
sub
pop
push
mov
iret
divb
or
insl
add
add
pop
inc
sub
sbb
pop
pushf
sub
adc
dec
sub
lds
lahf
mov
cmp
jbe
mov
in
inc
roll
int3
fwait
xchg
hlt
aaa
jae
pop
arpl
mov
nop
push
xchg
sub
add
aaa
int
sbb
in
lock
rolb
push
add
and
fmull
popf
dec
xchg
push
faddl
mov
pop
xchg
loope
and
mov
xor
ds
popf
adc
pushf
jmp
mull
test
xor
imul
cmp
xchg
icebp
nop
les
test
inc
enter
lods
jmp
pmuludq
add
std
imul
dec
jl
mov
jbe
lahf
jae
cmp
cs
inc
mov
inc
xchg
aad
call
mov
inc
jnp
stos
jae
callw
cmp
xchg
fwait
pop
sbb
push
hlt
mov
lock
aad
iret
push
jge
mov
aaa
xorl
scas
scas
cmpsb
dec
ljmp
dec
jl
mov
in
sub
jns
cmpsb
incb
daa
jp
in
pop
inc
call
lret
mov
lods
push
jle
pop
fwait
testl
add
mov
test
mov
lds
mov
cmp
js
dec
inc
cmp
xchg
mov
dec
jno
mov
sbb
xchg
pop
cmpsl
popa
mov
adc
call
popf
mov
cmp
daa
mov
or
jecxz
cmc
stos
rclb
lock
outsl
xchg
stc
pop
imul
and
jne
jae
movl
jl
add
xlat
js
pop
inc
mov
in
inc
pop
push
mov
in
push
jo
test
test
pop
subl
mov
xor
and
mov
sbb
test
mov
insb
pop
cmpb
dec
into
and
push
mov
clc
pop
cli
cld
jno
icebp
mov
mov
add
lret
dec
aam
xor
mov
stos
mov
inc
mov
xchg
ss
fs
add
and
lock
adc
fistpl
inc
rcrl
in
push
dec
out
inc
sbb
cltd
cmp
cmp
jl
out
dec
pop
adc
adc
mov
addr16
test
rcrb
aam
xchg
xchg
sub
adc
cli
repz
mov
push
xor
cmpsl
xor
sbb
std
mov
out
lcall
mov
negb
repz
mov
dec
lods
push
and
mov
das
dec
mov
jno
das
mov
lock
xlat
shrb
imul
lods
in
sub
lahf
leave
ja
dec
xlat
call
mov
cs
mov
incb
mov
sahf
and
and
jecxz
xor
or
inc
mov
push
dec
mov
iret
addr16
adc
ljmp
inc
jg
and
push
and
inc
dec
xor
movsl
lret
clc
fadds
in
test
xchg
fisttpll
les
add
jge
push
ljmp
inc
fiaddl
adc
pop
xchg
ficomps
ror
scas
lea
inc
cmp
push
test
movsl
addb
xchg
mov
mov
mov
adc
add
sbb
jecxz
imul
jnp
ret
outsb
or
lret
mov
rclb
jae
push
mov
jno
xchg
test
dec
ret
pop
or
stc
movsl
in
mov
sbb
push
pop
inc
and
aam
stos
enter
lret
enter
pop
push
xlat
pop
sub
sub
in
out
mov
pusha
push
repz
insb
adc
xchg
sub
movsl
sbb
pop
mov
aam
ds
mov
dec
mov
cmp
pushl
cmp
popf
sub
sti
stos
leave
mov
leave
push
lcall
sbb
jmp
or
or
fidivrs
jecxz
xor
xor
inc
inc
repnz
or
repnz
fsub
xor
push
mov
dec
push
push
sub
idiv
xor
mov
insb
lock
jns
ja
or
adc
jbe
sub
orl
push
add
lret
insl
ljmp
adc
ja
adc
jns
and
inc
push
sbbl
cmp
jno
adc
cltd
ja
jecxz
xchg
cs
push
dec
sub
fistpll
fsubrs
mov
add
lret
iret
loope
adc
xor
xchg
jmp
mov
dec
push
inc
scas
xchg
stos
sub
push
mov
cmp
cmp
fnstsw
mov
les
pop
sbb
xor
adc
movsb
cmp
fbld
add
push
out
mov
insb
push
push
xchg
stos
fimuls
cmpsl
sub
shll
jb
push
mov
push
cmp
xchg
pop
loope
lahf
sub
pop
jae
xchg
mov
mov
mov
push
and
or
rcrl
dec
jns
cmp
and
sub
push
gs
stos
mov
ljmp
mov
jno
dec
mov
ss
or
lahf
lret
xchg
push
repz
adc
into
test
pop
xchg
jo
mov
push
push
push
scas
loop
xchg
mov
mov
push
mov
xchg
sbbl
ss
jmp
fs
pop
jp
pop
clc
pop
adcb
xor
push
pop
mov
cmpsl
clc
shrl
pop
lea
adc
xor
jnp
into
loop
std
sahf
push
ds
jb
inc
outsb
sub
dec
bound
inc
adc
add
jmp
sub
aad
sahf
imul
inc
xchg
in
xor
dec
jp
dec
dec
mov
icebp
jle
arpl
xchg
in
mov
cmc
popa
fdiv
ret
int
into
and
cmp
mov
pop
push
lret
mov
mov
xchg
out
inc
shlb
mov
jp
movb
xchg
mov
mov
push
xor
adc
flds
pop
xchg
xchg
xchg
insl
movsb
movsb
out
inc
fidivs
and
lret
push
div
dec
jg
getsec
les
lea
ds
push
pop
pop
sub
icebp
insb
jecxz
outsb
adc
jge
cltd
int3
stc
sbb
dec
popa
ljmp
sub
inc
add
leave
shlb
stos
jmp
out
icebp
jp
xchg
dec
sub
inc
xor
movsl
and
and
sbb
jne
sbb
and
push
je
subl
pop
mov
or
je
inc
gs
mov
in
mov
cld
pop
shrl
jge
fidivl
out
les
repnz
xchg
xchg
sbb
push
pop
mov
adc
daa
inc
mov
das
or
pop
push
jmp
inc
inc
pusha
stos
nop
cmp
jbe
jb
js
mov
sbb
pop
add
lods
sbb
mov
and
cmp
or
push
push
mov
jmp
lods
mov
and
aas
cmp
inc
faddl
mov
sahf
sbb
adcl
xor
or
lods
inc
nop
outsb
repnz
dec
mov
pop
fiaddl
xlat
sbb
sbbb
xchg
imul
jg
push
xor
cmp
leave
cmpsl
pushf
sbb
push
xlat
les
xchg
push
ss
or
push
leave
sbb
jns
pop
jecxz
lret
cmpsb
clc
cmp
xchg
data16
hlt
cs
aam
mov
xchg
or
test
out
aam
dec
sti
mov
jns
jle
adc
or
mov
mov
mov
jmp
fcoms
in
sub
stc
sub
stos
jl
mov
push
sbb
mov
stos
jmp
cld
cmp
xorl
sub
adc
cmp
clc
fcmovnbe
aam
in
pusha
pop
leave
lods
mov
mov
aad
lret
mov
pusha
pop
mov
mov
jl
nop
lahf
std
scas
xor
xor
mov
ss
cmp
clc
in
mov
es
add
mov
push
les
lret
ficomps
shll
daa
add
inc
leave
sbb
sub
js
xor
cmp
ret
pop
adc
js
scas
incl
and
adc
cli
xlat
sub
or
dec
fcoms
insb
push
jge
fbstp
push
or
mov
fstpl
pop
xchg
or
mov
cmp
sbb
test
hlt
jg
rorb
inc
pop
test
sarb
scas
adc
stos
xor
out
pop
into
mov
sbb
pop
add
pop
xlat
outsb
add
leave
sbb
inc
sbb
pop
jl
negb
sbb
insb
inc
mov
xchg
pop
iret
dec
sbb
daa
mov
test
out
data16
inc
ja
adcb
mov
xchg
inc
mov
pop
jno
xchg
push
push
push
jg
xchg
pop
push
aad
addr16
aaa
adc
push
sub
pop
mov
dec
lods
cli
pushf
sbb
fstpt
imul
or
test
sub
adcl
cwtl
sbb
and
test
outsl
cwtl
jno
in
test
rcrb
pop
xor
mov
push
inc
in
aas
stos
dec
xchg
clc
sti
cmp
inc
arpl
out
in
jge
jnp
push
lds
fistpl
gs
inc
fdivs
js
lods
add
idivb
fadd
dec
negb
stos
mov
push
popa
push
push
mov
xor
scas
push
push
pop
or
int3
push
push
mov
fisttpl
jbe
pop
dec
xor
test
movsb
inc
inc
test
pop
lock
pop
sub
inc
sbb
mov
ja
xor
xchg
sbb
sub
adc
inc
xor
and
lret
repz
add
jo
popa
lds
into
xchg
enter
mov
inc
out
push
shrl
xchg
repz
mov
or
ds
loopne
iret
inc
pop
fwait
mov
and
aas
pusha
pop
jb
inc
and
or
aas
push
aaa
cltd
sahf
inc
sub
jae
dec
data16
and
hlt
fwait
dec
push
mov
ja
lcall
je
or
insl
iret
push
push
int
in
adcb
jle
mov
mov
dec
gs
leave
adc
mov
mov
test
or
out
push
neg
xor
pop
xor
ficoms
in
jbe
pop
push
clc
xor
imul
or
push
mov
mov
push
push
lret
in
out
pusha
aaa
icebp
jle
xchg
imul
mov
cwtl
mov
movb
xor
fsubl
mov
xor
sar
mov
add
shrl
fiadds
push
fists
loope
cltd
enter
and
xor
mov
add
pusha
iret
rorb
loope
adc
dec
push
shl
sub
pop
std
divl
push
popa
stc
mov
inc
jae
in
xchg
fwait
adc
in
mov
divb
pusha
imul
cmp
cmc
mov
not
xor
xlat
jno
or
pushf
stos
iret
mov
and
lds
out
push
test
pusha
aam
inc
outsb
gs
ret
pop
push
pop
imul
test
pop
lahf
outsb
mov
ljmp
push
adcb
fisubl
pop
cwtl
pushf
cmp
mov
outsl
lret
loope
push
ret
xor
dec
push
ja
cltd
loope
push
icebp
js
adc
push
icebp
mov
push
fidivrl
pop
fstpl
cmp
sbb
mov
rol
inc
insl
fisubrl
adc
and
dec
bound
nop
outsl
fsub
xor
lea
nop
mov
jmp
test
js
call
xchg
xor
ss
loope
pop
mov
movsb
jecxz
xchg
loop
sbb
jg
or
lods
sahf
sti
jne
sbb
leave
or
loop
pusha
pusha
mov
push
sbb
sub
std
jns
cld
xchg
popf
mov
arpl
mov
or
or
xor
mov
fidivrl
insb
xor
sbbb
popf
jecxz
loope
or
add
adc
rolb
cmc
add
das
or
inc
lock
xor
insb
andb
scas
jl
sbb
cltd
jge
outsb
call
js
dec
arpl
je
add
sbb
jne
aas
inc
loopne
cmpsb
ss
cmp
adc
cltd
out
pop
out
push
jl
data16
sub
sti
cltd
icebp
xchg
xchg
sub
fnstsw
pusha
add
es
sarb
mov
push
fnsave
lods
xor
dec
mov
adc
xchg
leave
pop
add
sub
aad
mov
ret
and
cltd
neg
imul
add
loope
dec
or
aam
xchg
sahf
xchg
out
sub
dec
jecxz
sub
jmp
out
xchg
sub
dec
fadds
mov
jne
inc
lahf
push
int3
cmp
and
pop
iret
fstps
imul
leave
inc
push
dec
out
cmp
pop
push
xor
xor
pop
dec
push
popf
loop
enter
or
xlat
mov
pop
test
and
repnz
lcall
insl
pop
aas
xchg
sub
inc
push
mov
mov
scas
arpl
ret
add
dec
jle
int
dec
test
icebp
loope
repnz
call
or
clc
xchg
orl
mov
xor
test
hlt
sti
xchg
mov
aas
jne
fdivrs
xchg
insb
jle
cmp
mov
fucomip
cltd
out
pop
iret
insl
jmp
in
pop
test
dec
ljmp
jno
dec
xor
pop
push
stos
lahf
lods
sub
cmpsb
lods
pop
cmp
dec
mov
dec
add
push
ret
adc
icebp
arpl
out
mov
lea
cli
rcrb
pusha
xchg
rorl
xor
fld
dec
push
scas
dec
das
push
test
jbe
mov
shlb
or
sbb
dec
pusha
es
mov
jp
outsb
cmp
jle
sbb
adc
cltd
xchg
imul
pop
test
cmc
popa
loope
pop
sbb
into
push
and
mov
pop
mov
das
mov
mov
adc
add
ret
mov
sahf
sub
xchg
rcl
sub
lahf
test
repz
adc
jbe
mul
sbb
sbb
cmpl
out
das
lods
mov
dec
enter
xor
mov
repnz
sub
jb
jne
fsts
out
ror
jns
and
push
mov
repnz
pop
cltd
pop
and
inc
aaa
ljmp
xorl
push
xor
jl
fst
add
jl
mov
cmc
popa
clc
in
jno
test
jbe
mov
mov
sub
pop
dec
std
cmp
push
xchg
mov
shlb
repnz
mov
and
xchg
ss
data16
ja
fwait
lret
rcl
pop
clc
ds
mov
inc
flds
jns
push
imul
pop
aad
stos
mov
lahf
sub
or
inc
mov
js
clc
jnp
adc
inc
xorl
adc
cmp
shll
adc
idiv
jne
and
pop
test
push
out
push
in
mov
das
pop
mov
pushf
inc
fxsave
in
andl
xchg
or
xchg
mov
xchg
popa
es
daa
sub
inc
push
inc
cld
movsl
xor
jmp
cmpsb
pop
xchg
or
hlt
std
imul
jle
stos
add
mov
jp
movsl
test
insl
imul
and
in
or
pop
mov
push
inc
jp
xlat
cmp
or
in
pop
fcompl
jnp
sahf
jae
inc
ljmp
in
fcoms
fs
aas
stos
add
add
popf
sbb
jp
inc
cltd
sub
das
adc
sarb
mov
xor
sar
dec
dec
in
jecxz
addb
pop
or
idiv
push
xor
push
adc
insb
daa
dec
sbb
pop
xor
xlat
add
insl
or
test
mov
xor
adc
xor
fsts
cltd
jmp
fwait
inc
jmp
and
fdivrl
xchg
push
dec
adc
push
jmp
push
push
jns
dec
cmp
pop
cmp
push
pop
daa
and
nop
pop
sub
fcmovnb
popf
xchg
ret
pushf
jnp
mov
int3
push
in
popa
mov
bound
cwtl
test
mov
mov
lcall
int
jns
xlat
cld
or
cmp
outsl
mov
mov
aaa
adc
ds
jg
in
jle
movsb
mov
sarl
fdivl
movsl
sbb
lds
jne
mov
xchg
js
sbb
push
xchg
leave
imul
mov
jnp
and
sub
push
mov
pop
xchg
das
xor
inc
or
pop
in
add
stc
sbbb
cmp
out
out
xchg
xchg
call
dec
sti
imul
push
rcrb
dec
mov
fadds
push
adc
or
mov
int
js
ds
testl
movsb
mov
scas
lret
jae
addr16
orb
jb
jl
mov
bound
loope
icebp
mov
fists
add
cs
in
inc
push
lods
aaa
mov
sub
pop
sub
insb
out
sbb
scas
cli
mov
outsl
mov
mov
jns
mov
xor
movsl
cmp
pop
das
mov
mov
push
aaa
jg
jle
ror
fcmovbe
pop
pop
cld
mov
stc
cmp
mov
ror
je
imul
sub
mov
in
push
mov
xchg
xorb
pop
in
fists
push
or
cmc
push
cmp
imul
loope
adc
cwtl
cmp
push
inc
call
mov
ljmp
push
ljmp
or
and
push
in
push
sti
push
out
stc
das
mov
out
and
push
xchg
outsl
es
in
pop
test
or
shlb
ljmp
dec
int3
jecxz
shrb
sub
pop
add
jb
negl
fwait
inc
aam
add
mov
pop
jo
sub
scas
mov
std
sarl
add
or
add
sub
push
xchg
pop
lcall
leave
xchg
pop
out
xchg
loop
mov
inc
inc
inc
sbb
fadds
jmp
popf
jge
add
cmpsb
push
popf
add
test
movsl
push
scas
sti
in
xchg
enter
in
stc
imull
fst
adc
mov
mov
adc
orl
clc
fsubrs
dec
xor
inc
push
lret
lods
das
lret
push
mov
mov
hlt
testl
sub
mov
sarl
inc
pop
aad
shr
push
mov
je
dec
mov
or
or
xlat
pusha
xchg
pusha
mov
xor
xchg
add
push
fmull
or
out
fisubl
dec
test
rorl
cmpb
mov
out
fucom
mov
inc
push
and
jb
imul
out
or
stc
jl
mov
cmp
lea
push
cli
mov
or
sbb
jns
lret
shll
lods
nop
insb
xlat
or
sub
repz
mov
adc
mov
inc
dec
sub
fidivs
scas
mov
cmpsl
or
incl
push
je
movsl
loope
dec
push
adc
mov
pop
inc
fs
jne
add
je
sti
divl
and
inc
add
xchg
or
fisubrl
ss
cmp
mov
dec
mov
divb
cli
or
scas
jne
test
lret
daa
mov
xchg
fisubl
fcompl
jmp
dec
jg
gs
es
insl
lret
and
mov
jns
lret
les
fisubrl
sti
sti
sbb
sarl
jno
or
jnp
jns
shr
leave
popf
sbb
std
adcl
ljmp
dec
aad
and
jl
push
jmp
out
ud0
mov
mov
push
push
mov
enter
je
pop
push
mov
cmp
lea
aad
push
ror
jle
daa
xor
loop
inc
sbb
in
mov
mov
test
add
inc
cmpsl
pushf
push
movsl
addr16
sti
lock
mov
dec
pop
mov
andb
pop
faddl
mov
jp
sahf
cmpsl
dec
loope
cmp
sti
rcrl
jnp
mov
lock
or
stos
inc
jnp
inc
fdivl
add
xchg
mov
jecxz
in
insl
rcr
inc
push
ds
push
cmp
jp
in
lock
cwtl
call
iret
iret
cli
inc
mov
out
mov
sub
mov
jl
mov
jbe
stos
lcall
sbb
js
pop
ficompl
out
xchg
stos
lock
sub
push
mov
xchg
mov
mov
iret
ss
cltd
inc
xchg
push
jl
stc
mov
mov
popf
ss
cwtl
cld
cmp
sub
xchg
push
push
imul
mov
stos
or
pop
push
cmpsl
insl
pop
pop
popl
sub
dec
fidivs
enter
sbb
add
cmp
mov
ja
rep
add
pusha
mov
fcmovbe
mov
into
je
adc
es
rorb
call
inc
loop
test
test
jo
push
cmpsl
push
mov
adc
push
dec
push
mov
arpl
jl
jge
push
scas
test
inc
add
outsl
movsl
ds
add
or
fsubs
hlt
xchg
scas
ja
and
test
dec
mov
psubsb
jno
stos
push
call
iret
adc
fld
test
scas
cmp
inc
xchg
fnstenv
sub
mov
cmc
jno
inc
call
xchg
mov
mov
mov
xchg
pop
jno
outsl
pusha
xlat
pop
rcrb
hlt
jmp
and
cmpsb
xlat
rorb
insb
cmpsb
sbb
mov
jae
inc
js
push
ret
aad
pop
lds
jle
jo
aad
sub
push
mov
mov
or
add
repz
aas
mov
mov
leave
xchg
test
ss
add
jae
push
inc
aaa
adc
and
xchg
stos
dec
inc
and
fcomps
push
loop
popa
and
fiadds
lcall
lods
jbe
add
cwtl
popf
sub
add
out
movsl
inc
or
mov
and
or
mov
mov
mov
mov
lea
cmpsl
test
xlat
cmp
mov
inc
push
xor
mov
sti
pop
cmp
fxch
jmp
std
insb
cmp
daa
js
dec
add
xchg
jp
xor
aad
push
xlat
and
icebp
loope
fld
out
mov
es
pop
into
inc
adc
and
fstpl
cmp
pop
inc
in
xor
cmp
mov
test
shll
int
xchg
push
shlb
das
lea
test
push
aad
push
push
cmpsb
mov
fsubrp
jp
xchg
repz
lcall
movsl
test
dec
and
test
lret
daa
mov
dec
jecxz
data16
adc
ja
push
dec
pop
adc
pop
adc
jge
push
lahf
sahf
adc
mov
daa
rorb
mov
xor
jge
jl
std
jnp
rcll
pop
pusha
pop
inc
mov
and
ss
cld
pop
lret
sti
push
mov
push
xchg
mov
ljmp
in
lret
adc
dec
or
addb
iret
push
and
fwait
push
jmp
in
sbb
testl
add
std
test
mov
mov
ljmp
inc
jle
outsb
mov
mov
jae
ja
daa
add
dec
sbb
test
jge
in
adc
cli
inc
push
mov
ret
mov
or
in
pop
inc
or
fimuls
mulb
popa
jp
lds
push
jmp
add
scas
aas
xchg
cmp
inc
ljmp
or
jae
pop
add
mov
xchg
jmp
push
pop
sbb
dec
pop
mov
xchg
xlat
movsb
xlat
xchg
sub
cmp
xchg
xchg
sub
call
cmpsl
xchg
mov
rclb
movsl
mov
push
xor
ss
pop
call
insl
mov
orb
dec
cs
jno
inc
push
and
out
push
or
outsb
pushf
aas
nop
mov
mov
push
xor
loop
and
not
or
mov
fs
or
in
pusha
test
hlt
test
inc
outsb
ret
xor
xchg
xchg
fisttps
or
mov
enter
push
fadd
and
int
sti
or
dec
mov
xchg
outsl
mov
xchg
fbld
xor
into
fnstcw
xchg
fcmovu
and
cltd
sbb
enter
add
mov
scas
cmp
cwtl
sub
pop
xor
fsubs
jns
or
out
ds
sub
fistpl
dec
add
jmp
push
daa
das
js
arpl
push
xor
scas
outsb
sbb
loope
mov
movsl
repnz
push
test
inc
adc
mov
adc
inc
xorb
scas
mov
xor
aas
mov
mov
xchg
mov
xchg
cmpsl
hlt
pop
test
stos
xchg
movsl
ja
cmc
adc
loop
rclb
mov
test
jno
sbb
lahf
xor
je
mov
shrl
jecxz
incb
jno
aaa
jmp
lea
cmp
xor
aam
fidivrs
addr16
pop
out
push
cmp
mov
jl
les
dec
push
cwtl
mov
sub
pop
jmp
imul
jnp
mov
scas
lea
dec
int
xchg
iret
in
xchg
stos
cmp
push
les
insb
inc
int
mov
add
xor
rep
sub
xorl
jl
pop
pop
push
or
sub
push
sub
cmp
test
add
dec
cmp
push
push
cmp
mov
cmc
push
pop
cmp
jl
mov
and
pop
andb
lods
pop
fdivrl
sahf
mov
fwait
adc
imul
nop
xchg
data16
adc
add
pusha
call
add
rcr
and
push
ljmp
test
fadd
lcall
cmpsb
sub
xchg
dec
or
mov
imul
jo
sbb
imul
popa
repz
dec
push
popa
cltd
push
add
xchg
sub
int
sbb
rorl
add
shr
and
and
mov
sub
jle
fistl
out
aam
push
cmp
rolb
int3
jo
mov
lea
scas
test
xchg
dec
cmp
xlat
add
stc
add
fisubrl
xor
les
cwtl
mov
jmp
lret
sub
xor
sahf
sub
mov
repz
or
insb
add
sub
push
mov
pop
sub
lods
in
and
sub
or
pop
sub
pop
clc
sub
xchg
in
in
inc
sub
enter
mov
rcll
test
inc
push
sbb
enter
mov
jae
rcl
mov
int
in
cmpl
lods
mov
pop
loope
int3
ret
shl
xchg
sub
adc
sbb
gs
and
push
ss
repnz
add
cwtl
andl
in
inc
sub
xor
js
loopne
or
gs
push
push
push
ret
cli
and
pop
mov
hlt
dec
inc
fisttps
lcall
lcall
push
push
aad
mov
aaa
sbb
dec
mov
mov
add
aam
ret
jge
lret
jne
sbb
out
aad
leave
popa
jge
push
fists
and
pop
mov
cmp
sub
cld
and
addr16
test
inc
imul
or
idivb
into
mov
sub
mov
cmp
lea
mov
sub
mov
enter
mov
out
push
in
shl
sbb
inc
sub
rol
pop
jle
movsb
and
lcall
mov
mov
jle
fmuls
popa
mov
in
pusha
push
xor
aad
sti
sbb
add
psubsb
sub
sbb
outsb
popf
or
xchg
pusha
aaa
notb
imul
xchg
shll
cltd
cwtl
dec
ficomps
push
sbb
push
push
int
in
mov
adc
stos
fsub
es
divl
icebp
cwtl
loop
out
xlat
lods
jg
cmp
iret
scas
repz
roll
jae
sahf
pop
fisubrs
test
jno
loopne
repz
adc
pusha
in
sbb
subb
and
imul
sbb
cwtl
lea
and
sbb
adc
push
mov
or
mov
movsl
adc
shrl
std
xor
push
imul
lea
iret
add
popa
or
inc
std
adc
in
xchg
arpl
push
and
add
enter
shll
outsl
or
dec
xchg
mov
mov
mov
stos
stc
stos
jl
pop
icebp
outsl
pop
es
add
loopne
iret
dec
int
pop
sbb
test
push
adc
out
arpl
lods
sbb
sub
mov
lock
mov
adc
add
jecxz
mov
loopne
xchg
aad
scas
push
adc
push
jp
iret
mov
pop
enter
inc
std
stc
nop
arpl
sbb
sub
jb
or
xor
add
stos
sbb
ffree
adc
psubq
jle
test
jge
fldcw
leave
maxps
sbb
lods
rcrb
shr
mov
scas
or
and
adc
add
or
scas
inc
and
and
mov
stc
push
sub
xchg
adc
outsl
mov
push
or
addb
push
xchg
xor
das
or
repnz
mov
dec
adc
lods
mov
sbb
in
jle
and
jae
sub
adc
and
test
push
idiv
add
mov
push
xchg
and
jnp
clc
loopne
ret
insl
mov
mov
jbe
aad
add
repz
pop
fsts
in
push
jle
bound
adc
hlt
mov
aaa
arpl
push
ja
jle
xchg
xorb
fs
mov
int3
jle
sub
bound
jae
shll
ljmp
push
in
xor
aaa
into
arpl
shll
fistpll
mov
das
daa
sub
fiadds
in
imul
xor
adc
and
add
adc
jo
nop
or
jns
jle
test
das
pop
xchg
orl
and
out
pop
sahf
out
insl
imul
int
xchg
addr16
lods
and
daa
fimull
lahf
test
fs
cmp
or
les
out
fidivrl
or
pop
fdivrl
mov
jecxz
loopne
jae
add
jnp
cmp
int
fcmove
jns
jmp
mov
mov
adc
iret
into
test
inc
sti
mov
daa
and
inc
mov
dec
scas
push
hlt
andb
and
in
lds
xor
inc
hlt
xchg
test
inc
xchg
enter
mov
ljmp
subb
sbb
or
push
cmp
out
pushf
clc
mov
mulb
int
dec
rcrb
call
sahf
sbb
push
arpl
dec
mov
ficomps
jl
mov
push
nop
push
mov
and
fisubl
adc
je
xchg
js
and
loopne
dec
add
mov
xor
je,pt
mov
in
mov
dec
inc
push
jmp
lods
jns
int
mov
add
pop
mov
inc
aaa
fcoms
movsl
jmp
test
jne
fwait
push
iret
adc
push
out
push
repnz
dec
add
into
mov
ror
add
adc
loope
daa
mov
or
loopne
sbb
jecxz
jl
jge
aam
xchg
jecxz
and
push
daa
dec
test
dec
push
jle
mov
mov
mov
sti
mov
mov
push
loop
cld
gs
xchg
xor
stos
lret
and
cmp
les
jg
pop
je
inc
sahf
xchg
or
int3
stc
repnz
aaa
fisttps
adcb
inc
iret
in
xor
cmp
sub
mov
out
jbe
and
mov
pusha
dec
aas
mov
inc
incl
pop
mov
lods
in
lea
dec
repz
xor
jg
inc
inc
push
movl
mov
aas
leave
fnstsw
lds
and
fs
or
out
aas
ret
sahf
inc
jg
push
pushf
scas
cmp
addl
lods
inc
cs
lds
pop
stos
aad
out
push
aad
out
mov
dec
mov
fidivrs
pop
and
inc
mov
rorb
stos
dec
jae
stos
inc
add
sub
jp
or
sbb
mov
push
andb
je
aas
sbb
add
add
sbb
push
in
add
or
and
adc
or
int3
push
add
pushfw
in
lret
arpl
or
push
movsb
popa
jp
adc
pop
add
ljmp
pop
sub
out
lds
jecxz
cmp
or
push
neg
cs
lcall
jle
enter
test
push
out
and
into
mov
cli
ss
xchg
repz
jp
movsb
mov
pop
add
push
jg
mov
daa
push
sub
sbb
jo
sbb
into
shlb
jle
pop
push
decb
push
xchg
xor
cmp
test
add
lods
push
xor
jne
ljmp
adc
jge
dec
je
sub
fldcw
inc
pop
pop
pop
dec
push
arpl
adc
das
jb
inc
pop
sub
adc
dec
dec
lahf
sub
outsl
jae
add
pop
cmp
jbe
pop
xchg
stos
mov
jl
cmp
icebp
cmc
xor
push
jbe
fisubrs
xchg
pop
adc
mov
enter
nop
push
sub
out
mov
xchg
pusha
data16
mov
fst
sub
mov
pop
pop
movsl
mov
jo
push
shrb
mov
arpl
mov
push
cmp
add
repnz
and
mov
shlb
lea
fidivrl
xorb
lret
out
jp
mov
xor
insb
in
enter
push
mov
mov
fwait
adc
mov
mov
mov
repnz
ds
dec
frstor
stos
sub
cli
lret
mov
incl
mov
fstps
or
lock
and
mov
pushf
sbb
xchg
into
push
out
pop
icebp
mov
dec
fdivl
push
push
stos
xchg
mov
cld
add
hlt
push
cmp
xchg
sub
repz
lds
ror
cmp
leave
es
enter
icebp
repz
push
repz
sbb
sbb
inc
arpl
lcall
jge
xor
ret
cmp
mov
sub
lcall
bound
mov
ficomps
pop
jns
dec
in
push
cld
rcrb
and
xor
pop
mov
push
sub
xchg
mov
inc
jno
push
cwtl
aas
sbb
loopne
mov
xchg
lea
fsubrs
rcr
add
mov
cld
add
adc
js
inc
dec
or
xchg
adc
aas
sbb
xor
inc
pop
rcl
mov
insb
dec
ret
xchg
out
xor
cli
xchg
fnsave
outsl
scas
inc
divb
test
test
cltd
stos
pop
inc
roll
mov
fldl
sub
dec
into
into
mov
jbe
fcomip
pop
sub
add
in
andl
call
lret
xor
dec
hlt
jmp
aaa
es
mov
push
cmp
stos
je
sub
aas
call
in
adc
insw
cmp
pop
jle
lods
jle
sub
out
mov
testb
pop
lss
sti
rcll
push
nop
outsl
fmuls
rclb
inc
das
xchg
iret
mov
sbb
aas
out
and
icebp
popa
sti
sbb
int
inc
test
push
sbb
push
in
push
ljmp
subb
mov
pop
xchg
pop
addl
xchg
lahf
push
out
dec
arpl
enter
clc
fdiv
pushf
dec
call
rol
into
arpl
stos
data16
and
notb
movsl
cmp
push
nop
dec
jp
add
push
cwtl
ja
ss
addr16
nop
repnz
orb
ljmp
sbb
mov
mov
jns
jl
ja
push
cmp
adc
mov
xor
mov
test
inc
fbld
push
xchg
fwait
fs
mov
bound
dec
sbb
and
movsb
mov
xchg
fs
out
in
pop
xchg
movsl
ss
iret
adc
outsl
pop
mov
pop
stc
lods
fldl
or
fidivrs
movsb
and
out
add
bound
inc
mov
mov
sbb
push
and
mov
push
loop
sub
xchg
push
mov
fcmovu
loop
bound
outsb
xchg
pop
add
out
push
push
shlb
mov
jne
sub
mov
adc
adc
insl
sti
pusha
jl
mov
mov
sbb
mov
jmp
fsincos
ret
shlb
cs
mov
xchg
xor
scas
in
loop
in
adc
or
pshufw
leave
pop
cltd
ja
scas
xchg
lret
push
int
fldt
and
mov
mov
xor
and
and
lds
in
adc
fucomi
adc
dec
js
dec
out
fbstp
xchg
dec
xlat
rclb
daa
jae
xor
andl
pop
add
mov
add
shlb
mov
mov
dec
inc
mov
adc
int3
sarl
jae
mov
movsl
jmp
stos
and
ja
sbb
xor
outsb
push
sub
cmp
bound
decb
outsb
push
imul
or
and
mov
fsubl
push
sub
sbb
inc
cmp
lret
ljmp
data16
adc
decl
mov
fidivl
ds
push
les
adc
mov
ficompl
cwtl
mov
xchg
imul
mov
adc
lret
lret
fidivs
push
mov
pop
cmpb
es
adc
adc
das
add
jne
jg
lods
cli
xor
xchg
jns
fdivs
bound
xlat
cmp
add
data16
xor
sbb
pusha
push
stc
std
fiaddl
stos
fdivl
out
mov
push
pop
call
push
adc
mov
sbb
sbb
into
mov
or
pop
and
jo
imul
adcl
push
xlat
fistps
mov
mov
out
loope
test
sahf
stc
pop
mov
push
shrl
aaa
push
fwait
xchg
jnp
je
out
test
push
push
das
ja
pop
movsl
jnp
add
popf
cmpb
je
jp
mov
or
sub
aas
gs
adc
xchg
movsb
pushf
test
icebp
jae
or
adc
dec
and
adc
idivl
ljmp
je
stos
sti
add
cmp
loope
cmp
add
lret
pop
std
jl
sarb
les
inc
dec
and
push
repnz
pushf
add
inc
ret
aam
adc
adc
mov
sbb
jl
rcl
inc
ja
int3
ds
inc
ret
push
insl
xor
into
mov
outsb
pop
mov
jns
push
or
sub
adc
mov
lds
or
les
movsl
pop
mov
cmp
test
lahf
and
cmp
mov
jne
jns
pop
pop
adc
sbb
inc
lds
and
xor
inc
jmp
xchg
imul
xor
pusha
mov
aad
in
pop
add
dec
push
fs
mov
jp
cmp
cmp
xchg
pop
sub
inc
inc
cmc
dec
mov
mov
aas
push
mov
dec
ja
in
sub
inc
xchg
mov
xchg
jecxz
sbb
aad
rclb
mov
push
inc
mov
loop
dec
sub
mov
add
cmp
jnp
mov
insl
dec
cmp
mov
test
scas
sbb
gs
xor
mov
dec
pushf
cmp
test
add
mov
jl
into
sahf
push
push
dec
dec
dec
repz
inc
imul
stc
cmpsl
ss
cltd
pop
sub
cmp
pop
pop
fwait
pop
sub
ljmp
scas
sti
sbb
push
pop
in
dec
gs
sbb
or
orb
in
dec
sbb
lds
inc
cmc
fcomi
jp
dec
lock
lds
test
call
test
or
dec
add
mov
incb
js
push
dec
cli
leave
adc
jnp
leave
das
sub
adc
pushf
mov
mov
jb
and
insb
xlat
bnd
pushf
cld
mov
stos
shlb
fcompl
mov
sbb
xor
push
jb
insl
mov
lock
fbstp
or
push
out
rol
daa
add
xchg
es
ljmp
mov
imul
mov
sbb
mov
inc
lea
orl
in
nop
out
pop
dec
and
test
mov
repz
outsl
mov
sbb
pop
jl
stos
out
js
scas
fisubl
pop
and
out
movsl
add
call
addr16
rcll
or
jmp
lret
mov
test
xor
ljmp
cmp
fstps
mov
push
ds
shrb
mov
insl
inc
cmp
fdivrp
lahf
push
mov
sarl
adcb
cmpsl
bound
rolb
sbb
mov
push
inc
pusha
and
sub
stc
inc
clc
je
sbb
mov
jp
mov
adc
bound
sub
sub
lret
out
add
inc
cmpsb
mov
les
cmp
inc
and
mov
pop
lock
push
ljmp
cmp
xor
adc
loope
int
sahf
sub
xchg
mov
xor
and
cltd
sub
mov
sbb
sbb
mov
decb
pusha
dec
data16
cli
idiv
fistl
daa
fisttpll
shl
addl
out
pop
shll
inc
icebp
cmp
ja
and
aaa
in
sub
js
bound
cmpsl
jmp
jg
lcall
jle
cmp
mov
push
shl
ljmp
inc
xchg
pop
pop
sbb
nop
cmp
loope
inc
in
xchg
in
test
mov
and
mov
push
mov
add
xchg
jge
mov
pop
xchg
dec
sbb
push
cwtl
push
sub
in
mov
adc
es
xchg
mov
dec
cmp
inc
jne
lods
icebp
or
push
inc
stos
movsb
push
fstpt
dec
data16
mov
push
dec
xchg
and
mov
sbb
lahf
std
xor
xchg
rorl
lret
mov
xchg
xchg
jge
mov
lahf
add
ja
orl
in
daa
add
push
mov
into
test
add
sarl
inc
push
les
jecxz
xchg
add
lds
sar
call
jp
lret
inc
and
mov
leave
stc
test
xor
dec
mov
notl
hlt
mov
aad
jp
pusha
test
out
ret
leave
push
mov
push
mov
inc
mov
sahf
jne
lock
insb
sub
and
pop
push
or
mov
jns
shll
adc
jmp
dec
fcmovnbe
inc
mov
xor
shll
nop
test
inc
pop
sbb
lock
xchg
jecxz
mov
push
repz
lret
out
inc
enter
mov
push
bound
mov
and
fisttpl
repnz
push
js
dec
sub
das
pop
adc
xor
jge
ss
jge
cmp
or
js
out
fiadds
add
cmpsb
rcrl
mov
adc
sbb
mov
cmp
in
aad
neg
xor
add
ret
in
mov
cmp
add
xor
icebp
popa
fnsave
add
push
sub
add
push
scas
or
sub
daa
adc
xor
pop
icebp
emms
adc
xchg
ja
dec
movb
xor
push
test
jmp
dec
xor
outsb
out
mov
and
call
jge
mov
cmp
jle
lock
mov
sub
shll
fwait
push
icebp
sbb
shlb
movsl
sub
and
test
outsl
mov
mov
ret
inc
cmpsb
xor
cmpsb
cwtl
jge
sub
inc
xchg
ret
pop
inc
mov
inc
ljmp
jae
es
daa
xlat
idivb
adc
int
push
pop
lds
std
fiadds
cmp
test
jo
jno
cwtl
je
xchg
sbb
fadds
nop
pop
pop
cmp
jmp
jmp
call
gs
popf
adc
dec
and
ret
fndisi(8087
imul
and
mov
ror
adc
aaa
or
adc
mov
mov
dec
adc
and
and
xor
loop
int3
mov
inc
sbb
out
jecxz
lock
mov
cmp
adcl
and
or
adc
loop
adc
sbbb
das
sbb
or
xor
inc
inc
mov
add
clc
scas
xor
les
test
pop
testb
lods
fidivs
inc
jge
stos
fisubrl
cmp
scas
sub
dec
ds
jp
insl
mov
andb
jno
loopne
inc
mov
or
lahf
outsb
shr
adc
and
pop
mov
lahf
pushf
test
in
clc
cwtl
jns
sub
pop
sub
pop
xchg
hlt
cltd
sbb
xchg
test
lahf
rcr
cmc
inc
pop
fisubrl
jl
cmp
lea
jmp
mov
dec
cli
push
sar
popa
push
mov
idivl
inc
in
stos
sbb
clc
dec
sbb
dec
test
lahf
jb
data16
mov
lret
testb
inc
and
push
mov
push
cmp
inc
pop
addr16
inc
mov
lods
dec
cli
cld
mov
rclb
jns
mov
nop
mov
jmp
int3
adc
xor
jecxz
sub
sub
adc
mov
xchg
jg
rclb
push
gs
out
out
scas
sarl
jo
mov
pusha
add
push
dec
push
xor
or
fwait
add
jbe
iret
mov
mov
sbb
adc
daa
push
inc
in
pop
cmpsb
ss
fstl
sub
fwait
mov
les
add
mov
pusha
sbb
xchg
pop
fs
pop
outsb
out
sub
sub
stc
popa
int3
fisubrs
ret
ljmp
mov
cmp
sbb
loopne
mov
sti
stc
shr
ljmp
jbe
dec
jle
xchg
jecxz
in
pop
cmc
leave
mov
mov
sub
addl
dec
sbb
lahf
adc
lret
add
lcall
mov
dec
mov
push
cmp
test
cs
aam
cld
ret
dec
adc
mov
pop
cmp
sub
sahf
in
xlat
mov
int3
dec
push
mov
aaa
test
push
int3
mov
mov
std
jne
mov
aam
adc
aad
mov
cmp
fidivrl
mov
jmp
jle
pop
inc
mov
stc
mov
xchg
hlt
sarb
popf
or
test
movsb
add
mov
xchg
sub
ljmp
inc
testl
movb
outsl
enter
xchg
mov
rcll
mov
lcall
jl
movl
xchg
xor
sahf
sub
jbe
inc
bnd
in
lcall
lcall
sbb
shrl
jbe
mov
lods
in
shll
out
jne
mov
das
push
insl
adc
popa
mov
dec
lret
push
daa
call
add
std
or
fldt
push
iret
popf
mov
stos
loop
adc
add
movsb
addb
aad
outsb
lcall
push
and
imul
mov
movsb
mov
call
push
inc
movsb
rcrb
dec
jb
push
lock
ja
inc
inc
imul
sub
shlb
adc
jno
inc
dec
ja
pop
gs
movsb
xchg
and
dec
add
arpl
lcall
daa
jge
and
fwait
or
test
loope
pop
fistl
stc
and
inc
outsb
and
cmp
stc
enter
int3
sbb
fs
cmp
je
xchg
dec
adc
inc
pop
stc
flds
cld
insl
test
in
stc
inc
fdiv
hlt
leave
push
pop
cmp
ljmp
pop
dec
xchg
out
push
dec
fistps
lret
lds
xchg
or
mov
adc
xor
icebp
and
push
sbb
inc
xchg
rcll
stos
addb
pop
out
into
lret
xchg
mov
sahf
das
clc
pop
pop
xchg
ss
jb
adc
test
mov
jecxz
jb
pop
popa
aam
repz
mov
cs
aas
lock
imul
outsl
das
add
shl
sbb
dec
mov
jne
movsb
jmp
test
and
push
in
rcll
push
fimuls
idiv
mov
dec
insb
push
push
xorl
insb
daa
or
sbb
aam
js
andb
and
testl
xchg
push
adc
test
adc
test
icebp
cmp
ljmp
add
pushf
cli
jmp
sbb
xchg
add
push
movb
leave
repnz
rcll
les
sub
test
cmp
dec
or
add
xchg
mov
out
out
dec
repnz
enter
or
and
mov
shrl
arpl
pop
jle
inc
testl
xor
jle
cmc
vpshufhw
sub
popf
fstps
jmp
push
adc
cltd
test
outsl
mov
loope
lret
sbb
xchg
xchg
or
pop
sbb
lret
sub
adc
mov
cmp
sti
push
mov
ret
push
mov
loop
mov
xorb
and
jmp
in
inc
mov
pop
jo
add
xor
and
or
mov
aad
inc
sbb
lret
pop
fcmovne
adc
out
sbb
jae
inc
push
sbb
mov
pusha
fistl
mov
cltd
aaa
pop
aam
mov
xchg
movsb
and
inc
mov
mov
fbstp
pushf
jae
rol
sbb
mov
lcall
mov
shll
sbb
dec
shlb
and
xor
es
or
jecxz
pop
pusha
out
das
push
add
adc
push
cs
cld
mov
cmp
adc
test
vxorps
stc
pop
insb
repz
pop
cmp
sbb
fidivl
dec
push
mov
inc
sbb
cmp
push
inc
xor
mov
jl
inc
popf
mov
test
in
fimuls
ljmp
push
cmpsl
out
sahf
add
das
daa
aas
in
mov
das
xor
loop
shrb
outsl
mov
rclb
sbb
hlt
inc
sbb
push
cmc
xchg
iret
adc
dec
outsl
sbb
inc
leave
test
adcb
aaa
aas
shlb
arpl
xchg
cltd
clc
outsl
xor
jecxz
movsb
ss
dec
pop
cltd
ds
ret
pop
inc
roll
jae
std
lahf
daa
das
xor
mov
push
cmpsl
adc
adc
inc
or
mov
shll
lods
xlat
mov
stos
mov
jecxz
push
outsl
mov
xlat
hlt
mov
mov
les
icebp
pusha
hlt
or
cmp
ficoml
dec
cwtl
pop
cltd
or
jmp
cmp
xchg
cmp
add
dec
cmp
imul
and
cltd
adc
inc
dec
push
inc
sbb
sbb
cli
mov
mov
add
andl
mov
jno
shl
mov
cmpsl
push
scas
stos
stc
jo
ds
pop
add
adc
lahf
inc
into
jb
lock
dec
lods
orb
xlat
cltd
cltd
insl
dec
test
mov
cmc
mov
pop
hlt
sub
xchg
push
sbb
pop
adc
fisubrl
in
jns
sbb
enter
pusha
je
insl
mov
pop
aam
call
cs
mov
dec
cmp
aaa
test
sub
cmpsl
lock
movsl
push
add
sbb
mov
fmuls
lret
jmp
add
xchg
adc
jb
mov
jbe
add
xor
inc
add
xchg
xchg
xor
cwtl
shlb
cmpb
ret
hlt
sarl
mov
imul
sub
stc
jno
inc
dec
stos
jle
filds
jle
std
sbb
ss
pop
andl
cmp
mov
out
pop
pop
int3
cli
loope
mov
sbb
mov
rcll
inc
jne
jo
push
movsl
add
or
cmp
lahf
sub
lahf
int3
xlat
xor
add
and
sbb
push
or
daa
sub
inc
cmp
pop
leave
cmp
stos
pop
sub
pavgb
std
sahf
xor
in
mov
xchg
mov
mov
jle
lcall
in
sarl
push
push
xorl
dec
sbb
xor
int
or
xchg
ja
and
cld
mov
cmp
fists
xchg
sbb
fimull
mov
jmp
sub
std
jmp
pop
pusha
loopne
xchg
add
cli
xor
out
out
pop
dec
jno
into
ret
pop
pop
push
xchg
pop
pop
push
add
mov
or
jb
aam
cli
sbb
jl
cltd
cmp
dec
push
cwtl
in
aaa
fdivs
add
leave
sbb
fildl
and
push
mov
das
mov
dec
call
add
sti
cmp
mov
push
dec
mov
lea
jnp
adc
mov
cmp
out
test
in
xor
push
mov
add
push
insl
imul
push
xor
xchg
gs
xchg
roll
lret
fcmove
inc
es
clc
sarl
inc
daa
popa
pusha
rcll
pop
xchg
fs
sub
lods
add
adc
sbb
add
mov
and
jg
mov
mov
pop
cmp
cld
push
sub
push
jecxz
mov
mov
dec
lcall
daa
aam
and
loop
and
xchg
fisubl
insb
push
iret
dec
xor
insb
sbb
popa
int
pop
add
mov
movsb
int
inc
gs
mov
sti
xchg
mov
lock
scas
in
cld
sti
xchg
push
and
loope
sub
mov
mov
mov
xchg
clc
sbb
dec
mov
shlb
sub
mov
adc
cmp
aam
loope
push
and
push
jae
sahf
out
es
xchg
mov
stos
mov
outsl
adc
pop
hlt
inc
add
insl
xchg
dec
or
jbe
inc
dec
rcrl
mov
popf
mov
loop
lock
cli
cld
cld
mov
add
pop
and
push
ret
cmp
imul
mov
jo
push
cmpsl
das
jbe
cld
dec
sbb
cld
fdivrs
xor
nopw
lock
dec
icebp
and
jno
sbb
ret
cmp
fcmovnbe
mov
sbb
aad
cmc
test
fwait
lret
mov
add
adc
mov
sbb
mov
push
fsubrl
rcrl
push
push
insb
inc
xchg
mov
and
push
scas
inc
and
in
hlt
sar
xchg
dec
or
out
push
jns
fcoms
int3
inc
fsubs
ret
or
cld
inc
jge
inc
imul
leave
mov
cmpsl
in
mov
dec
out
add
cld
clc
pushf
jo
testb
sub
jl
fcoms
pushf
lret
or
xchg
sahf
add
push
dec
iret
and
add
cld
pop
lods
adc
int3
cld
pop
mov
aas
jno
idiv
into
and
ret
mov
adc
in
mov
xor
mov
adcb
sub
mov
addr16
and
lds
or
push
mov
lret
repz
in
mov
sti
out
add
sub
or
lods
mov
push
sarb
sbb
outsb
mov
lret
ljmp
test
imull
pushf
lret
sarb
icebp
loope
test
inc
mov
fildl
ror
lods
andl
sbb
sub
icebp
xor
enter
inc
data16
lds
and
lcall
insb
cli
xchg
ret
dec
rclb
movsl
pop
xchg
insb
sarb
pop
cli
mov
add
lahf
mov
push
movsl
mov
xchg
and
push
stos
push
add
adc
lods
imulb
mov
xchg
movsl
xchg
jns
adc
aam
xchg
shrl
ja
mov
fs
gs
inc
bound
ret
xchg
xchg
xchg
data16
hlt
xchg
aad
dec
imul
dec
xchg
divl
xchg
das
cltd
push
mov
xchg
adc
loopne
mov
cld
inc
xor
pop
sbbl
dec
shrl
jne
cld
mov
push
push
or
inc
add
xor
adc
fimuls
pop
popf
sahf
xchg
ss
add
push
jb
jle
push
lcall
pop
cmp
mov
cs
jp
cmp
fs
pop
or
lahf
scas
mov
pushf
fsub
in
add
xchg
cmc
cmpsb
test
xchg
lcall
sbb
sub
adc
mov
sbb
cmp
xor
pop
dec
add
jg
jne
mov
adc
lock
cmp
jl
xchg
mov
mov
ljmp
adc
imul
leave
xor
mov
insl
mov
mov
push
add
sbb
ret
inc
dec
xor
popa
add
ja
cmp
push
push
cld
inc
orb
bound
fnstsw
aam
mov
push
push
fsts
or
cmc
mov
mov
sbb
fidivs
push
pop
fwait
dec
dec
repz
xor
shrl
cltd
mov
out
jns
dec
mov
iret
aaa
or
push
jne
bound
popa
testl
lahf
pusha
inc
popa
stos
cli
cmp
andl
sar
andl
rclb
nop
sbb
ja
push
cmp
into
je
and
sub
idivl
jbe
loope
popf
jecxz
lret
imul
push
and
lock
xchg
jne
hlt
out
stc
lcall
ret
push
adc
mov
mov
cmp
fcompl
scas
xor
adc
xchg
loope
jno
ret
xchg
add
jmp
push
push
xor
out
jecxz
xor
cs
je
mov
cmpsl
xchg
imul
scas
cld
jmp
jnp
addl
popf
stos
data16
pop
insl
xor
xlat
repnz
inc
mov
jb
xlat
and
mov
push
fucomip
je
or
mov
outsb
fnsetpm(287
loopne
mov
aad
or
fists
loopne
inc
sub
pushf
outsl
sbb
mov
sahf
stos
lahf
stc
lret
push
mov
cwtd
mov
jo
fisubrl
enter
cmc
inc
adc
or
rolb
lret
cwtl
sub
jecxz
and
and
dec
jmp
shll
cmp
out
inc
adc
idivl
xchg
push
xor
jbe
jne
int3
test
fs
int
dec
or
jns
fbld
sbb
add
sub
cmp
pop
lahf
outsl
inc
icebp
cltd
jnp
xor
push
xor
cmp
mov
push
sub
ljmp
add
in
adc
mov
add
inc
lea
inc
pop
test
mov
ret
push
vpperm
jecxz
pop
push
aad
les
shr
data16
lea
jne
sbb
or
popf
jns
or
les
pop
repz
push
push
push
or
shrb
dec
inc
addr16
mov
mov
mov
lahf
jbe
push
aas
xchg
aas
cwtl
insb
mov
fstpl
and
bound
out
repnz
jae
jno
out
add
sub
mov
outsb
xor
push
mov
rcrl
daa
mov
xchg
push
arpl
xchg
and
mov
pop
xchg
sub
adc
outsb
inc
sbb
int
ret
aad
cmp
int3
les
das
test
sub
sub
std
sarl
adc
arpl
dec
dec
loope
push
dec
mov
or
data16
int
fisubl
cli
jmp
pop
xchg
sbb
push
push
push
outsl
mov
cltd
mov
aad
aas
addr16
xlat
shrl
jmp
orl
mov
mov
xchg
cmpsb
jmp
popf
jle
test
les
xchg
loope
shr
into
dec
leave
mov
ljmp
add
les
adc
insb
mov
lock
xor
stos
stos
sub
lcall
stos
mov
xchg
add
aas
arpl
std
aas
pusha
in
in
push
mov
add
insl
sbb
mov
cmp
fld
stos
xchg
jg
cltd
sbb
cs
cmpsb
jbe
jb
push
push
mov
mov
or
loope
sub
stos
sub
dec
cltd
mov
dec
scas
out
push
mov
pop
sub
into
or
out
sbb
and
jecxz
es
and
dec
xchg
aam
pop
push
or
fists
mov
or
cli
pop
stc
cmp
xor
mov
dec
leave
push
and
fsubl
lods
bound
inc
lock
iret
ljmp
xlat
mov
js
inc
lods
sarl
testb
lret
inc
mov
mov
testb
mov
insl
cmpb
xchg
push
inc
and
in
add
fs
andl
xchg
mov
rolb
inc
dec
iret
rcll
xchg
outsl
insl
mov
shlb
xchg
push
mov
mov
insl
leave
xor
sub
and
std
cld
mov
xor
cmp
test
mov
push
ret
or
mov
lcall
dec
in
imul
cmp
or
stos
in
adc
cmp
dec
popf
ret
pop
mov
mov
es
lahf
in
or
cmp
cltd
add
inc
in
ss
xor
lcall
xchg
mov
incl
mov
sbb
leave
lods
test
sahf
sub
inc
or
lahf
sbb
push
cmc
aad
outsb
inc
lret
outsb
sbb
push
mov
punpcklbw
flds
mov
rorb
jmp
test
nop
leave
mov
pop
jg
iret
push
out
xchg
dec
adc
mov
cli
in
sub
mov
int
mov
sahf
icebp
inc
mov
daa
push
lcall
scas
mov
arpl
cmp
cmp
movsb
mov
cmp
adc
mov
dec
andb
add
lds
xor
es
out
inc
out
mov
call
inc
or
xor
push
push
rclb
mov
push
repnz
jo
pop
shlb
aad
cmpsl
jg
adc
sbb
sub
fbstp
add
dec
inc
dec
jb
loope
pushf
js
les
test
mov
out
into
in
xchg
push
aam
cld
mov
pop
dec
adc
mov
int3
mov
jecxz
dec
into
cwtl
pop
or
jbe
stos
jns
fsts
fists
mov
dec
sub
push
test
pusha
popa
lea
adc
fldenv
subb
in
sub
rorl
pushf
notb
cmp
out
cwtl
arpl
movsb
mov
stos
push
mov
gs
xchg
jmp
inc
xlat
jb
lahf
ljmp
and
lahf
xchg
cs
filds
cmp
cmp
movsl
push
lods
call
sbb
mov
xor
inc
push
sub
push
jp
shrl
mov
push
dec
int
std
pop
push
jl
push
fldt
je
pop
cld
in
pop
pop
out
push
adc
mov
add
out
inc
jns
lods
cli
cltd
sbb
fdiv
sub
pushf
fsubr
pop
inc
es
pop
inc
mov
sbb
fnstcw
sbb
mov
xor
mov
jecxz
fldenv
cli
cmc
sub
jnp
mov
ljmp
pusha
jl
add
sub
icebp
jle
adc
add
cmpl
cmpsl
and
repz
mov
pop
add
cltd
xchg
shll
add
stc
test
add
imul
int
bound
in
sarl
or
pop
sub
insl
adc
jge
rcrl
sub
xchg
addr16
sub
xchg
adc
mov
ds
leave
pop
sub
or
dec
pop
jecxz
inc
sbb
out
arpl
cmpsb
in
mov
dec
or
lahf
xlat
mov
or
test
inc
jp
cs
je
lcall
lahf
outsl
sbb
rorl
mov
pushf
cs
mov
push
or
addl
outsb
in
xchg
fildll
xchg
and
xchg
int
mov
arpl
outsb
mov
aas
out
push
cmp
mov
mov
jle
cmpsb
outsl
push
outsb
jle
aad
in
cmp
mov
shrb
fs
mov
movsl
lock
test
xchg
data16
mov
pop
xor
xchg
mov
negl
das
xor
in
inc
testb
and
scas
xchg
mov
arpl
fwait
outsl
add
loopne
arpl
xor
jle
call
mul
bound
adc
xchg
bound
add
jecxz
int3
cld
adc
and
rcr
jmp
movsl
incl
iret
scas
or
cmc
jb
dec
xchg
gs
test
sub
push
mov
push
push
pushf
and
sub
in
inc
sub
sbb
movsl
xor
dec
imul
in
lock
ret
fbld
fimull
jg
loop
sbb
jmp
jp
and
aas
sub
inc
pop
out
xchg
push
cmp
and
sub
sub
mov
ficoms
push
pop
mov
xor
icebp
lea
pop
cmc
inc
pusha
dec
pushf
push
js
xor
sti
mov
xchg
rorb
insb
push
lock
sub
add
test
add
int
loop
enter
dec
gs
shl
aam
cwtl
cmpsl
mov
xchg
inc
in
movsl
jge
push
adc
add
cmp
int3
jp
incl
lcall
lods
mov
negw
clc
stos
adc
sub
ss
xchg
pushw
test
or
lahf
or
xorb
mov
sbb
cmp
std
adc
jns
xchg
cmp
and
or
popa
daa
sub
scas
inc
adc
push
addr16
and
clc
xchg
or
aaa
jle
divl
jmp
and
dec
xchg
xchg
imul
outsl
mov
arpl
sbb
imul
cmp
sub
push
addl
repz
jmp
jbe
es
adc
inc
mov
fadds
gs
pop
fistl
dec
push
pop
dec
stc
inc
add
enter
loopne
mov
pop
cmpsb
pop
fdivp
adc
out
push
add
jl
pop
lock
hlt
sbb
lds
fsubl
cmp
inc
sub
insb
call
push
cli
lret
ja
dec
aad
js
in
sar
mov
jns
sahf
jns
push
mov
fisttps
inc
adc
pop
insb
mov
cmp
cmp
mov
daa
mov
jge
fwait
inc
and
push
sahf
pop
adc
test
xchg
xchg
xlat
test
mov
loop
int3
mull
pop
mov
adc
inc
xchg
pop
ffreep
or
call
aam
lods
test
mov
rcrb
imul
add
subl
or
add
sub
icebp
les
into
les
lret
fcoms
fimull
inc
stc
push
repz
or
inc
jnp
xor
xchg
pop
push
lcall
cmp
nop
and
test
dec
mov
inc
add
or
in
push
lock
rcr
lea
mov
jae
pushf
jp
adc
and
mov
push
rorb
aad
je
sarb
ret
hlt
inc
dec
push
mov
mov
xchg
jne
lods
mov
sub
rorb
jg
sbb
add
test
jnp
sbb
push
shlb
rcll
xor
daa
pop
adc
add
inc
es
bound
sub
add
mov
loop
or
enter
ss
scas
push
mov
jl
repz
aas
lods
fstl
and
pop
adc
xchg
popa
stc
gs
jmp
sbb
lods
outsb
xchg
cmpsl
cmp
push
adc
stos
call
stc
pop
fsubrl
js
pop
push
ret
cmp
stos
xchg
mov
jbe
inc
aaa
mov
and
xrelease
popa
cmp
cmc
mov
adc
jecxz
and
orb
test
dec
lods
lds
dec
in
adc
jp
cmp
adc
lods
push
cmpsb
mov
decl
mov
and
or
sub
mov
or
sub
lret
cmpl
jne
loope
dec
lock
ror
imul
add
fs
rcrb
and
insl
sbb
repnz
pop
dec
dec
hlt
jl
cli
clc
test
sbb
sbb
mov
negb
push
xchg
cwtl
stos
popa
add
aas
jp
xchg
fmull
dec
mov
lods
or
sbb
fmuls
push
mov
mov
daa
out
outsl
add
out
mov
push
cmpsl
pop
mov
jb
test
ds
pop
lcall
idiv
fstp
push
jbe
test
sub
lods
mov
xchg
add
push
and
cld
aas
orb
or
idiv
pop
jno
sbb
iret
adc
jg
insb
xlat
addr16
and
add
lcall
jbe
es
nop
fwait
jo
inc
loopne
push
pop
jo
jge
in
movsl
dec
aam
push
fwait
mov
adc
pop
sbb
jb
mov
xchg
call
repnz
adc
pop
inc
dec
pop
inc
loopne
data16
sbb
les
pushf
into
push
mov
shrb
adc
fldz
inc
fisttpll
aam
or
nop
push
xlat
mov
repnz
xchg
dec
mov
dec
insb
pop
xchg
lret
dec
mov
mov
fidivrl
dec
loopne
repnz
inc
inc
cld
lds
or
ret
insb
mov
mov
notb
lret
lret
adc
iret
out
mov
mov
jb
jbe
in
insl
loopne
out
push
subb
mov
and
lds
sub
mov
jg
sbb
push
ret
outsb
mov
leave
in
pop
jge
shll
jae
push
cmp
mov
pop
jle
push
gs
ret
testb
mov
es
pop
xorb
les
mov
in
lahf
mov
xchg
and
sub
pushf
stc
sbb
or
testb
in
jg
fsts
adc
aad
or
mov
test
mov
sub
fistl
test
sbb
call
add
popa
pop
int
cmp
push
and
push
jecxz
xor
adc
jae
leave
call
popf
xchg
pop
push
int
cmp
into
cmp
in
lods
push
xor
rcll
ret
test
sub
pop
add
lods
lret
pop
dec
lahf
jno
cmpsb
jne
pushf
in
scas
sbb
cs
lock
mov
cmpl
push
or
imul
and
adc
push
xchg
fdivrl
sub
test
push
lret
cmp
cmp
inc
push
out
dec
ljmp
sbb
mov
sti
call
or
lds
adc
push
xchg
xchg
scas
cmpsb
mov
mov
aaa
loop
push
mov
xchg
jne
push
cwtl
add
and
sbb
mov
int
shl
daa
xchg
and
cmp
or
es
inc
call
mov
jge
adc
mov
xor
jg
and
mov
dec
or
mov
or
pop
imul
push
fnsave
decl
nop
dec
loopne
jo
sarl
aam
icebp
fucom
or
mov
aas
inc
xor
or
mov
pop
push
outsl
push
jne
or
mov
cmp
es
and
xor
and
dec
mov
and
xchg
in
or
test
loop
mov
test
hlt
out
jecxz
rcr
mov
ljmp
loope
pop
mov
sbb
shll
ds
pop
sub
rolb
xor
xchg
pop
inc
jmp
sub
xor
jle
pop
and
repz
aam
mov
nop
lahf
mov
out
pop
andb
pop
sarb
mov
fimull
pop
xchg
dec
movsb
and
push
loope
mov
push
mov
insl
je
mov
mov
and
ficompl
dec
aad
push
inc
gs
jno
test
lahf
fs
loopne
iret
fisubl
call
xchg
dec
and
mov
test
lods
movsb
js
mov
and
cmpsb
ja
add
and
dec
mov
xor
cltd
push
stos
pushf
xrelease
mov
mov
cld
xchg
and
xor
popf
call
pushf
inc
push
ret
pusha
nop
cmp
mov
pop
movsb
mov
dec
test
popa
mov
adc
cwtl
cmpsb
movb
jo
sub
rcrl
jno
or
popl
nop
fiadds
adc
int3
mov
mov
inc
cs
jbe
aaa
mov
pop
lods
xlat
jno
out
lock
and
mov
sti
outsb
adc
ss
cmp
adcl
dec
xor
and
jle
push
cmp
cmc
xchg
sub
scas
inc
cltd
addb
sub
jno
mov
daa
scas
addl
or
cli
push
iret
scas
xchg
sub
pop
out
xchg
inc
or
sbb
outsl
sub
lods
push
jnp
lcall
fs
repz
mov
and
xchg
aaa
jno
xchg
inc
push
jge
inc
in
sahf
xchg
push
std
inc
repnz
push
pop
sbb
jg
adc
pop
xor
or
aas
lret
mov
sbb
mov
push
push
sub
aas
ret
mov
adc
ret
add
test
and
mov
nop
ss
jnp
test
xchg
jmp
mov
sbb
fmull
imulb
mov
cwtl
mov
lds
dec
sbb
or
mov
pop
jl
decl
fidivrs
insb
loop
mov
jnp
push
fistpll
push
in
fmuls
pop
sub
push
xor
mov
jnp
xchg
add
mov
mov
xor
data16
mov
clc
inc
fdivrl
shl
loopne
dec
jno
cld
popa
aas
in
xchg
adc
inc
inc
adc
push
mov
sbb
cli
xchg
sbb
adc
mov
leave
out
into
test
push
insl
popa
fcoml
ret
shrl
or
cmc
shlb
pop
ss
xchg
loop
pop
stos
lret
xchg
mov
xor
insl
jp
cld
dec
rcll
xchg
or
outsb
pop
cli
pushf
jb
dec
jl
out
or
ret
fucomip
fildll
mov
pop
push
aam
test
popa
add
icebp
stc
push
cmc
jl
push
pop
xorl
xchg
mov
sahf
insb
jmp
scas
pushf
jbe
xchg
inc
sub
shll
hlt
clc
cmp
adc
cmp
xchg
ficoml
sbbl
repz
es
mov
push
and
xchg
aam
sbb
arpl
into
xchg
outsl
cmp
aaa
mov
jb
pop
insb
cwtl
test
adc
push
inc
adc
aad
push
inc
adc
das
fcomps
fisttps
sbb
repz
or
mov
scas
dec
stc
movsl
ljmp
sbb
or
mov
add
iret
mov
jg
addr16
nop
xchg
jmp
pop
push
int3
orb
mov
test
or
sbb
jl
std
imul
mov
insl
outsl
push
daa
leave
dec
or
gs
inc
mov
pop
xor
mov
pop
movsl
icebp
nop
arpl
sti
jo
mov
jb
mov
xchg
inc
pop
push
mov
jnp
push
mov
jno
sub
mov
aam
jl
cmpsb
mov
in
mov
shll
push
divl
push
sub
or
js
dec
pop
pushf
jo
pushf
mov
and
int
sbb
or
cmpl
cmp
sub
loope
push
cmp
sub
shrl
push
and
mov
push
call
popf
xchg
imul
test
and
jle
xor
loop
leave
pop
loope
cmc
pop
je
jg
and
and
aad
xor
das
mov
test
ret
andl
jbe
dec
cmpsl
ja
xlat
dec
loop
jno
imul
arpl
mov
nop
push
sub
dec
mov
in
pushf
iret
jle
xchg
or
pushf
pop
xchg
rcl
dec
cmp
fwait
jb
nop
and
gs
inc
sbb
repnz
sbb
and
std
mov
mov
cli
or
pop
fsincos
fcomps
mov
xchg
mov
in
jbe
jno
fdivs
std
adc
dec
sub
inc
xor
arpl
add
push
int3
shrl
inc
andl
cmp
cmp
pop
outsb
jbe
jb
cmc
jge
ret
or
ja
std
mov
inc
push
mov
xor
ljmp
add
lods
daa
xchg
fldt
fsubp
dec
xchg
aad
mov
sahf
dec
orl
xor
or
mov
sahf
data16
mov
stc
scas
xor
or
mov
les
pop
lahf
test
movsb
stos
sti
lods
jae
insl
xlat
mov
lcall
daa
aas
fdivp
mulw
cmc
movsb
xchg
es
and
shlb
adcl
repz
ficomps
addl
fimuls
sarb
cltd
cmp
lahf
out
icebp
jle
mov
ljmp
push
push
fstps
jl
mov
ljmp
rcl
cli
pop
adc
outsb
xchg
dec
or
mov
cmp
xchg
stos
movsl
jecxz
test
inc
repz
dec
scas
add
inc
cmp
or
sub
rcl
cltd
enter
int3
movsb
jl
rorb
pop
mov
or
or
push
popa
jg
ret
fs
rcl
flds
mov
scas
test
lahf
push
mov
and
push
test
mov
mov
mov
push
stc
xchg
jbe
jno
cmc
addr16
ret
adc
mov
in
and
test
jbe
add
lea
out
mov
int
cmp
add
xchg
movaps
ss
out
in
pop
pusha
ljmp
cld
nop
pop
mov
push
rclb
loopne
sub
inc
push
xchg
negb
sahf
mov
or
or
ret
or
inc
mov
xchg
repnz
and
add
xor
lcall
iret
inc
shlb
push
fwait
sbb
ds
shrb
pusha
pop
cwtl
lea
jo
push
add
inc
sub
scas
mov
int
add
push
inc
or
das
data16
or
inc
insb
mov
stc
sbb
inc
dec
pop
xchg
in
adc
aas
sbb
ret
lret
into
fs
imul
dec
adc
sbb
cmp
pop
add
sbbb
dec
mov
push
jno,pn
es
fwait
xor
sub
dec
dec
loope
adcb
lds
cmpsl
push
adc
cmpsb
pop
into
pop
xchg
ds
aam
fisttps
add
cs
data16
cwtl
mov
fldl
dec
mov
xor
mov
dec
sub
mov
mov
cli
adc
mov
popf
push
and
adc
loopne
fstpl
cmp
popf
jl
xor
push
mov
jle
pop
test
pop
xchg
xlat
pop
ret
cmp
xor
sbb
lds
ss
loopne
ja
jae
fwait
stc
out
test
cmc
pop
arpl
in
icebp
popf
lcall
push
push
iret
pop
shll
dec
subb
inc
hlt
test
pop
sub
and
inc
cmp
out
dec
or
scas
lret
cmp
push
out
fldl
outsb
add
push
jb
mov
out
out
out
xor
fwait
test
and
shrb
insb
push
imul
gs
pop
sub
pop
sub
pop
mov
mov
daa
lds
ficomps
in
dec
sub
loopne
jno
sbb
xchg
cmp
dec
test
xor
or
add
or
xchg
dec
adc
inc
inc
call
mov
jge
or
cmp
jecxz
mov
pop
cmc
out
sbb
sahf
or
push
jnp
ret
pop
and
sbb
push
jbe
pop
mov
mov
pop
cmpl
dec
add
xor
jle
cmp
cmpsb
add
and
ss
lds
je
xor
in
sub
sub
fldcw
dec
stos
shl
fadds
dec
cmpsb
or
add
stos
jge
arpl
outsb
jnp
mov
cmpsb
dec
lds
sbb
es
push
jmp
loope
cmp
es
shrb
cltd
test
xchg
xor
and
mov
xlat
fidivrs
dec
aam
cli
mov
ffreep
ficoms
in
adc
pop
clc
sub
and
mov
lahf
dec
xchg
inc
clc
jae
inc
jnp
into
sub
cs
rclb
xchg
add
imul
in
call
lock
pushf
sbb
popa
push
mov
add
pusha
dec
xor
data16
cmp
xchg
pop
push
cld
jl
adc
mov
js
ret
or
lret
inc
fdivl
sub
xchg
inc
xor
dec
jns
push
pop
xor
loope
xorb
add
cmp
outsb
cli
lret
and
jge
jne
repz
in
xchg
les
sub
jl
add
jae
mov
push
xchg
xchg
xchg
and
xchg
sub
int
stos
mov
mov
in
loope
add
pop
cs
in
shrb
mov
ljmp
ss
sahf
push
push
je
outsb
js
call
dec
mov
cmp
jmp
scas
jo
ret
daa
or
fidivrl
adc
or
mov
in
push
iret
cmp
jns
mov
jg
clc
sub
iret
cld
cmp
mov
rcll
ljmp
xor
pop
test
icebp
in
pop
mov
inc
ja
push
insb
repz
nop
xchg
fld1
mov
adc
and
mov
es
decb
leave
sti
ret
jns
inc
xor
shll
mov
add
shrb
mov
shrb
pop
or
mov
dec
popl
movsb
or
fcmovb
fdivl
ljmp
pushf
pop
sub
pop
fcomps
and
pop
add
lret
sub
ja
je
sub
pop
lods
mov
out
loope
xor
fstpl
sub
dec
pop
imul
pushf
cli
arpl
jbe
or
out
cltd
mov
xchg
mov
lock
fldl
outsb
xchg
js
ljmp
xor
addb
mov
out
push
pop
test
inc
dec
and
push
fisubs
add
xchg
or
cwtl
pop
test
sbb
mov
xchg
xchg
xchg
stos
mov
mov
es
pusha
hlt
add
xor
rolb
aad
std
mov
faddp
syscall
mov
fstl
cmp
test
and
add
scas
jbe
xchg
inc
in
test
cltd
or
hlt
jne
insb
aaa
add
mov
lcall
add
pop
cwtl
cmpsl
insl
sub
mov
jb
jle
push
repz
lods
fwait
nop
sahf
pushf
cld
add
inc
loopne
jnp
add
int3
incb
dec
sub
out
aam
sub
mov
stos
xchg
sbb
insl
mov
fsub
dec
pop
cltd
cwtl
pop
cmp
in
fstpl
in
sbb
inc
dec
push
mov
or
jmp
fmul
loopne
fwait
cltd
fxch
xor
add
pop
xchg
les
in
xor
sub
ret
jmp
mov
sub
sub
mov
xor
or
mov
jmp
dec
xor
sti
inc
int
adc
aam
lea
adc
sbb
pop
lods
push
rorl
orl
xchg
std
xor
adc
icebp
jg
dec
push
into
cwtl
icebp
add
jl
mov
push
pop
outsl
idivb
adc
push
mov
arpl
lods
jp
lcall
jns
aad
adc
mov
jmp
movsb
mov
jb
out
sahf
movsb
lods
adc
add
jmp
lods
sub
xor
fisubrl
in
mov
orb
cmpsb
test
fsubrp
iret
fisubrl
xor
or
dec
mov
jecxz
push
test
pop
insl
dec
add
fadds
movsb
clc
loopne
mov
insl
cmpsl
cs
jae
sub
imul
jnp
xor
test
stos
into
push
add
in
inc
pop
mov
push
jmp
cld
mov
push
mov
inc
aas
jge
jge
lock
scas
inc
mov
lock
rorb
and
add
stos
mov
ljmp
out
jo
xchg
pop
sbb
repnz
jge
push
add
je
shll
jno
loopne
sbb
or
std
aaa
sub
cmp
lea
out
into
inc
lret
std
push
pop
jb
sbb
xchg
stos
cmp
push
xor
mov
adc
dec
je
imul
xlat
lea
cmc
clc
xor
lcall
fs
mov
movsb
in
movsl
jle
jecxz
leave
inc
jne
sbb
add
in
in
popa
adc
cmp
cmp
jns
loope
dec
mov
inc
mov
inc
sbb
dec
mov
push
imul
xor
in
xlat
test
and
in
aam
mov
push
test
lods
std
inc
mov
sbb
cmc
mov
mov
dec
cmp
nop
sub
popa
cs
stos
xchg
fcmovu
and
int
negl
lods
cmp
pop
sub
popl
fldcw
outsl
divb
sub
push
dec
pop
ja
aas
and
adc
movnti
popw
add
or
xchg
cli
xor
imul
or
mov
adc
shll
out
mov
imul
dec
lods
imul
pop
rolb
divl
pushf
test
sub
add
add
jne
push
verr
sbb
mov
imul
out
sub
sbb
sbb
cmpsb
mov
idivl
sbb
cmpsl
dec
outsb
adcl
xlat
test
jb
pop
loopne
cs
rcrl
imul
pop
psrlw
sar
sahf
daa
in
push
popa
sub
enter
pop
lahf
stc
xor
jg
fdivrs
xor
js
cmp
and
jne
sub
pop
arpl
sbb
xor
repnz
inc
xchg
icebp
pop
loop
sub
push
clc
addb
inc
push
jo
in
xor
rorb
rcrl
xchg
add
stc
ret
stc
lcall
in
dec
js
ljmp
mov
mov
stc
push
movsb
sub
imul
sub
cwtl
neg
mov
cli
fwait
add
ss
outsl
mov
jmp
push
test
add
jg
fsubrl
pop
mov
adc
add
xchg
inc
dec
or
mov
push
fnsave
pop
lea
inc
hlt
adcl
fisttps
jb,pt
jns
adc
add
pop
mov
sbb
inc
in
mov
sub
push
ret
shll
dec
add
mov
fistl
cmpsl
jnp
jp
inc
adc
loope
iret
adc
pop
xchg
push
clc
cmp
cmp
inc
add
test
xchg
lret
in
and
dec
fs
bound
xchg
ret
cltd
pop
pop
add
dec
movsb
imul
sbb
shll
mov
out
mov
jg
cld
cmp
jnp
xor
out
lcall
and
pop
cmpsb
sbb
add
enter
ja
sbb
cltd
add
sarb
pop
lods
insl
jo
iret
push
sti
xor
nop
or
mov
das
cmpsl
pop
add
jne
daa
push
ds
divb
rcrb
movsl
addr16
popa
add
mov
fisubl
mov
add
pop
fimuls
pop
sarl
arpl
add
mov
mov
sar
ret
sbb
out
add
dec
fcoms
sub
inc
sub
sub
and
sbb
add
out
xchg
dec
push
aam
xchg
add
aad
movsl
repnz
ret
cli
or
fidivs
push
call
aad
fcoms
rcrl
jb
sub
xor
adc
and
mov
cmc
fstl
xchg
mov
repz
adc
mov
jno
shl
push
out
leave
rorl
lret
mov
imul
pop
stos
add
cld
cmp
repz
xchg
mov
cld
pushfw
ret
fistl
push
dec
dec
inc
inc
roll
sub
mov
into
mov
outsb
fstps
call
inc
xor
lahf
jmp
or
mov
xchg
das
cmp
add
insl
sub
cmp
bound
repnz
inc
add
inc
push
jns
subb
aad
mov
push
adc
jno
mov
ds
daa
arpl
xchg
mov
ljmp
jae
xchg
xor
mov
pop
or
mov
iret
jge
sub
pop
xlat
mov
pop
lar
inc
pop
dec
in
hlt
mov
cs
add
push
adc
inc
xor
sbb
lcall
rcrb
nop
decb
push
cmp
lds
mov
stos
loopne
int3
aaa
jg
lods
fsubs
cwtl
test
insl
fisubrs
sbb
add
pop
adc
pop
into
sub
or
ljmp
adcb
jbe
push
cli
dec
rcl
add
dec
jl
mov
push
jo
push
into
ja
and
outsb
out
lret
pop
pop
mov
repnz
sbb
mov
pop
adc
adc
jp
inc
adc
lock
fistps
imul
icebp
dec
nop
jae
sub
xor
push
push
cltd
jae
loopne
rorb
mov
arpl
lock
inc
cmc
lret
sub
int
je
mov
mov
mov
or
ljmp
push
gs
sbb
insb
jb
fs
inc
dec
mov
add
mov
ljmp
mov
mov
or
lret
and
jne
sub
cwtl
mov
adc
test
mov
imul
movsl
lret
repnz
pop
sahf
daa
push
enter
stos
mov
insb
lret
out
push
mov
or
xor
add
pop
sbb
pop
dec
pop
cld
pop
inc
pop
loope
jmp
lods
sbb
fwait
xchg
xlat
push
pop
les
or
xor
xchg
lret
push
push
push
cltd
mov
ja
mull
jge
xlat
sbb
cmp
lcall
cmpsb
cwtl
push
decb
loop
mov
add
sub
jp
and
pop
cmp
mov
sub
jmp
xchg
pushf
cs
incb
mov
jge
testb
pushf
rcrl
lret
add
insl
sub
clc
pop
sub
fistpll
fxch
pop
daa
push
sti
push
pop
aam
sub
scas
cmp
mov
lcall
mov
xchg
scas
cmp
adc
negb
sub
or
jno
xchg
pushf
inc
add
inc
mov
push
pop
enter
mov
inc
aam
xor
xchg
lds
fmull
jns
pop
in
std
dec
cmp
and
sarb
cmp
ljmp
cs
inc
sbb
push
adcb
cmp
and
cmpsl
inc
add
jle
xchg
imul
jp
dec
das
fs
imul
push
aaa
mov
cmc
ljmp
pop
mov
frstor
push
mov
push
in
push
cmp
lret
int
xchg
lcall
jbe
hlt
js
test
sti
cmp
jecxz
mov
sahf
sbb
outsl
in
scas
das
cmp
addr16
cmp
adcl
jl
push
dec
push
popl
out
sub
pop
xchg
fisubrs
xchg
mov
add
in
xchg
push
cmp
inc
lret
sbb
add
dec
inc
sahf
fmul
int
test
fdivl
inc
cltd
pop
fnstcw
pop
sub
cmpl
pop
adc
pop
mov
sarl
enter
movsb
aas
cld
loopne
cmpb
jle
arpl
add
mov
push
lret
in
int3
in
xchg
idivl
jns
and
ss
ss
cmpsb
dec
mov
ret
sub
push
xchg
xor
add
lahf
mov
fs
enter
mov
ret
inc
cmc
out
xchg
ret
dec
pop
sbbb
fwait
pushf
enter
sbb
dec
pop
jnp
mov
mov
shrl
bound
and
cmp
xor
call
fnstenv
cmp
push
xor
orb
sub
mov
popf
fsubrp
lret
loope
ja
jp
cmp
cltd
movsb
mov
jp
ja
or
xchg
sbb
mov
inc
paddd
push
mov
adc
xchg
cltd
in
ljmp
mov
or
jg
mov
or
std
cmp
aad
push
out
notl
pop
mov
jg
aam
mov
push
imul
mov
movsb
les
pushf
xchg
or
sub
mov
pop
mov
mov
cmp
dec
scas
mov
dec
and
xchg
test
dec
jecxz
lar
je
dec
add
push
push
inc
popf
test
stos
ret
mov
dec
sbb
push
jl
jo
lahf
adc
or
pop
aas
dec
movsl
fnop
iret
incl
cmpsl
add
and
lcall
out
pop
and
xorb
mov
sti
adc
jno
dec
push
push
shrl
and
leave
repnz
sub
ret
adc
incb
sbb
jne
loop
xorb
push
test
mov
push
pop
leave
add
sbb
mov
fwait
xchg
xchg
sbbb
dec
adc
cmp
mov
and
add
orb
data16
outsb
sahf
in
test
pusha
jne
test
sub
and
ja
insl
cmpb
inc
fcoms
or
inc
cli
cmpb
inc
test
push
mov
jb
cmpsl
cs
cmp
sbb
sub
sub
xlat
icebp
pop
jb
movsl
mov
es
xlat
dec
cltd
cmp
jge
xchg
adc
in
xor
hlt
iret
popf
add
cmp
xchg
shll
pop
fadd
add
pop
and
fdivrp
test
cmp
es
insl
push
jecxz
and
add
insl
rolb
rorb
sub
loopne
imul
pop
inc
test
insb
jecxz
cld
jno
add
cli
loop
sbb
movl
pop
ds
mov
xchg
and
cld
mov
sub
add
lods
mov
es
xor
cld
xchg
cmpsl
or
or
or
aam
sub
adc
adc
daa
icebp
ja
jl
pop
pusha
adc
lds
cltd
mov
loop
arpl
jle
mov
jnp
add
into
pop
pop
jb
fistl
idivl
repz
mov
sub
int3
jne
shrl
push
stos
pushf
dec
xorb
aaa
dec
cltd
in
andb
pop
dec
hlt
jne
in
inc
pop
scas
paddsb
rcl
sub
sahf
fisubs
ret
pop
leave
inc
sbb
pop
test
push
jl
sbb
clc
fidivl
mov
mov
mov
imul
push
movsb
add
adc
and
xor
jp
int
push
mov
pusha
jb
pop
das
mov
mov
push
xchg
sqrtps
loope
cmp
movsl
inc
push
and
pushl
push
js
and
xchg
add
scas
pop
mov
mov
cmpsl
popa
int3
or
mov
hlt
dec
fldt
rorb
lahf
mov
aam
mov
xchg
jmp
stc
rolb
adc
les
sub
xchg
sbb
pop
jbe
call
stos
and
mov
mov
test
jbe
pop
dec
add
cmpsl
into
push
fadds
mov
out
xchg
cmpsb
xchg
pop
mov
loop
stos
rclb
lret
mov
sub
fmul
loope
fcompl
and
dec
bound
dec
dec
psubusw
push
es
mov
sbb
movsl
jo
sub
arpl
cwtl
dec
jnp
outsb
loop,pn
iret
mov
jae
test
int
je
xchg
cltd
icebp
or
adc
in
mov
xchg
in
out
loopne
mov
mov
xor
adcb
add
dec
jecxz
ljmp
leave
ret
push
sbb
imul
pop
push
pop
call
not
or
mov
push
ss
lcall
iret
clc
mov
filds
jnp
xorl
xchg
out
cmp
push
mov
jmp
mov
mov
sbb
jns
dec
mov
mov
jb
shlb
inc
adc
add
push
pop
test
js
fistpl
sbb
mov
xchg
cli
test
mov
dec
mov
lods
mov
fabs
or
push
das
lcall
inc
mov
popa
or
out
cmp
xchg
mov
mov
cs
push
sbb
movsl
xchg
mov
xchg
lock
xchg
push
jge
lea
or
add
rorl
fdiv
ret
jg
notb
ja
push
cwtl
jecxz
sub
aas
fcoms
gs
rcl
nop
mov
mov
repz
fmul
ds
daa
or
sti
push
jecxz
mov
pop
nop
in
out
adc
sub
lods
sub
imul
pop
mov
in
inc
aas
fbld
adc
insb
dec
xchg
and
repnz
adc
pop
adc
push
movsl
or
pop
or
inc
pop
sbb
xor
sahf
xor
adc
nop
roll
sub
push
mov
test
or
xor
sbb
fs
daa
divl
test
dec
sar
ja
inc
mov
cli
xchg
jb
jno
mov
dec
insl
sbb
adc
push
insl
imul
jns
mov
xor
out
push
pop
inc
sub
push
and
and
push
jae
cmp
cmpsb
leave
ret
aas
cmpsb
push
push
in
xor
sub
or
sub
adcl
fwait
ret
aas
adc
push
outsb
imul
addl
jg
clc
in
sbb
mov
sub
sub
jnp
ljmp
cmp
test
loop
cmp
pop
adc
cmp
scas
imul
dec
sti
mov
mov
call
sub
adc
push
and
insb
cmp
pop
add
mov
inc
popf
ljmp
sub
stc
pop
es
leave
std
push
xlat
cmp
scas
mov
sbb
les
or
and
enter
imul
fildl
cmc
movsb
jg
sar
inc
inc
add
push
xchg
inc
inc
inc
push
daa
or
aad
loopne
mov
popa
push
add
lods
xor
sub
or
mov
ja
mov
pushf
in
andb
push
cltd
pop
scas
scas
sbb
mov
push
mov
push
dec
popf
or
aam
gs
jmp
adc
leave
mov
test
inc
mov
push
aas
sarb
sub
jl
test
fdivr
jecxz
mov
inc
xchg
lret
mov
pop
mov
jge
cs
scas
cmp
xor
fbstp
fidivl
and
cltd
mov
mov
sub
daa
push
sbb
dec
daa
inc
outsb
jp,pn
xlat
or
adcb
leave
scas
xchg
popf
dec
aas
jge
ror
push
sti
xchg
fstpt
out
loop
or
scas
lods
bnd
cltd
std
push
test
xchg
hlt
in
cmp
pop
addb
inc
decb
ret
arpl
mov
jb
loop
sub
add
inc
ds
cmc
or
scas
push
cmp
sub
fs
cmp
cmp
sbb
in
mov
leave
jnp
orb
nop
clc
test
cmp
in
adc
push
sbb
into
imul
mov
sbb
dec
mov
bound
rorb
add
outsl
inc
scas
stos
adc
adc
add
adc
aaa
out
insl
fcompl
xchg
xchg
sub
xor
js
inc
int
stos
mov
push
and
js
fwait
shll
jl
mov
pushf
bound
adcb
sub
xchg
shlb
ss
lock
out
mov
or
outsl
inc
cwtl
fisubl
negl
loope
scas
cmpsl
clc
outsl
push
dec
ficoml
adc
push
and
andb
adc
or
push
xlat
push
insl
out
rcrb
and
xchg
inc
lea
div
lea
cli
movb
sbb
aad
lods
or
or
jp
add
mov
mov
or
jecxz
mov
ja
inc
and
cmpsb
pusha
test
test
rolb
and
sbb
movsl
inc
popa
mov
cmp
ljmp
mov
add
fninit
cmc
push
xchg
xor
mov
dec
or
mov
mov
sub
jno
popa
sub
mov
and
push
rcrb
ficomps
mov
fistl
adc
push
pop
rorb
or
sub
rorb
lcall
dec
xchg
shlb
push
jae
out
jbe
mov
cld
lods
dec
les
cmp
pop
inc
imul
lods
sub
add
sbb
push
push
incl
sub
test
xor
neg
cs
lahf
outsb
sub
leave
in
fistps
in
vpcmpgtw
test
iret
aaa
sbb
push
adc
pop
mov
mov
and
pop
mov
sub
je
add
add
sbb
cmp
aas
bound
out
dec
pop
nop
int
jbe
pop
les
push
ds
and
mov
dec
push
stos
bound
or
das
and
xor
inc
std
sub
mov
xchg
je
sbb
xchg
int
ja
adc
sub
adc
mov
cmpsl
and
pop
cmpsb
inc
jle
dec
je
mov
icebp
leave
test
shrb
jge
test
lea
popa
push
cs
add
push
jmp
idivl
cmpsl
adc
clc
mov
ret
push
mov
jmp
xchg
cli
jb
lret
or
mov
int
pop
scas
ret
pop
call
inc
pop
leave
mov
ficoms
add
cltd
push
fucom
sbb
mov
sub
sbb
out
mov
inc
mov
push
int
neg
shlb
adc
add
mov
push
xor
cmp
xchg
sub
xor
xor
aam
jmp
in
sub
clc
test
jnp
mov
sbb
jmp
dec
arpl
cld
sub
gs
add
mov
lcall
jns
jnp
out
cld
lcall
push
lcall
aam
push
jnp
daa
movsb
jnp
xor
or
mov
mov
lret
or
jb
add
or
and
sub
xchg
shlb
and
jle
repnz
mov
adc
mov
cmpsb
movsb
shlb
xchg
movsl
cmp
mov
loopne
mov
adc
stc
adcl
dec
sub
lock
mov
cmp
je
adc
out
xor
and
movsb
in
pop
test
repnz
or
add
pop
hlt
sbb
sbb
arpl
and
dec
stos
mov
out
xchg
sbb
mov
rorb
dec
mov
cmp
cmp
add
xor
and
mov
pop
pop
pop
fcompl
scas
sub
pop
xchg
jb
and
scas
test
add
js
scas
pop
ficoms
movsl
hlt
scas
leave
jle
cmp
add
cmp
comiss
add
jg
jmp
lea
add
rcll
aad
in
sub
popa
add
add
popf
push
jge
rolb
push
fmull
dec
xor
xchg
inc
pop
gs
pop
mov
mov
xchg
loope
push
adc
jp
push
jp
out
mov
cmp
pushfw
daa
xchg
stc
inc
cmp
inc
mov
sbb
and
lcall
mov
inc
adc
mov
push
mov
mov
add
ret
mov
sahf
inc
mov
lret
jg
add
out
loope
rorl
lods
loopne
decb
inc
test
fldenv
movsb
je
or
insl
rclb
add
int
jmp
aad
xor
roll
mov
cs
scas
mov
mov
mov
fldl
push
lods
fdivp
pop
bound
xchg
mov
adc
shrb
dec
stos
sub
in
lock
popa
icebp
add
xchg
sub
rorb
fisttps
inc
mov
mov
pop
cmpsl
or
xchg
sub
push
shrb
lock
ljmp
scas
scas
adcb
or
jge
inc
out
out
lret
in
mov
stos
or
cltd
adc
es
imul
lcall
call
jecxz
in
addr16
pop
test
sbbb
ret
popf
cmpb
and
adc
cmp
xchg
xchg
sub
sbb
xor
add
aaa
lret
pop
dec
pop
sbbl
cs
int
cmp
push
and
cmpsb
aas
test
sahf
scas
pop
loop
mov
stc
sub
pusha
std
nop
ljmp
dec
imul
fildll
loope
add
adc
dec
xchg
dec
mov
mov
loopne
imul
sub
fdivrs
cmpsb
sub
hlt
lret
fistl
clc
add
dec
imul
aad
sub
add
stc
cmp
repnz
mov
js
sbb
mov
push
pop
lea
ss
push
cwtl
xchg
xchg
mov
cwtl
ret
pop
lds
mov
add
jmp
or
push
js
jle
jp
ss
adc
std
inc
out
or
xchg
dec
fists
jno
hlt
fstl
push
pop
movsb
das
dec
cld
lods
lcall
jns
test
or
push
mov
and
dec
mov
bound
or
xchg
cmpsb
loope
xchg
ljmp
add
popf
adc
arpl
sbb
aaa
inc
fistl
dec
scas
nop
jp
jecxz
mov
lods
je
ljmp
mov
ljmp
sbb
xor
xor
movsb
cld
js
pop
dec
movsl
adcl
cmpl
and
xor
adc
pushf
in
jns
cli
sub
in
lret
aad
jno
pop
xor
cmp
andb
notl
ja
sbb
loope
cwtl
and
inc
push
mov
xor
inc
int
pop
repz
lock
aaa
mov
or
push
sahf
shrl
test
push
outsl
xorl
mov
cmpsl
lea
sub
outsb
cmc
cmp
outsl
mov
out
dec
or
popa
adc
jbe
cmp
sub
addr16
leave
cmp
or
xlat
stc
stc
jae
std
dec
inc
call
test
imul
xor
jp
pusha
mov
adcb
dec
or
bound
sub
in
repz
and
das
xchg
int3
mov
jb
mov
cld
jne
fdivrs
xchg
gs
clc
inc
lods
xchg
into
cmp
or
jo
and
adc
or
sbb
aaa
mov
cmp
jl
pop
imul
call
std
inc
in
jg
pop
fwait
stos
add
add
popf
mov
rcll
dec
inc
mulb
loopne
pop
out
stos
jecxz
mov
js
dec
fs
add
jge
aam
std
and
lods
shlb
test
adc
xchg
mov
push
or
pop
xor
inc
pop
in
shrb
xor
roll
pop
dec
xchg
les
lods
sbb
stc
sbb
fcmovnb
cmp
sub
imul
inc
addl
flds
rcl
repz
loopne
mov
pushf
and
xor
stc
jnp
sub
jb
in
xor
xchg
push
pop
dec
inc
daa
xchg
inc
imul
fwait
pop
aas
mov
or
repz
jg
out
js
sahf
push
mov
adc
xchg
lret
sbb
test
jbe
pop
gs
andl
adc
push
xchg
les
out
cltd
mov
dec
imul
dec
mov
gs
sub
jg
sub
xchg
jbe
je
xor
stos
sahf
mov
push
cltd
int
cld
add
add
mov
mov
and
outsb
mov
test
call
or
cmpsl
setno
add
out
fwait
adc
push
cmp
pop
outsb
pop
sbbb
xchg
dec
pop
jp
mov
rolb
inc
bound
clc
mov
outsl
mov
xchg
outsl
and
dec
lret
iret
rcrl
movb
mov
sbb
mov
shlb
daa
jl
jnp
xlat
lcall
jns
pop
loop
negl
push
imul
and
std
jmp
mov
test
xchg
mov
addr16
int3
mov
sbb
shlb
inc
test
sahf
bound
mov
clc
ret
mov
mov
cli
hlt
adc
and
inc
fs
in
inc
imul
mov
loop
shrl
jg
inc
push
mov
and
popa
push
mov
or
jl
add
xchg
addl
data16
loop
les
sbb
jb
ljmp
test
lock
cmp
dec
xchg
scas
cmp
sarb
and
lcall
push
xchg
inc
loopne
xchg
pusha
je
div
outsl
je
outsl
sub
ja
mov
nop
inc
popa
mov
pop
mov
add
fcomip
je
out
mov
notl
jmp
incb
imul
cmp
fstl
xchg
es
jmp
gs
jp
sub
jno
divb
mov
and
mov
sub
test
shrb
xchg
outsb
xor
insl
and
add
aaa
jmp
sub
bound
movl
cmp
inc
inc
das
js
sub
mov
mov
repnz
jns
pop
sbb
loope
push
xor
ret
into
and
sahf
int3
lock
lods
fidivs
fs
mov
cmp
lahf
inc
inc
xor
bound
out
cwtl
mov
stos
fisttpll
or
xlat
jno
pop
shl
xchg
sbb
cmp
mov
add
jbe
rorl
mov
xchg
lret
mov
stc
loopne,pn
adc
jle
sbb
mov
daa
stos
jbe
xchg
test
or
lret
jb
xor
pushf
repnz
mov
imul
enter
push
clc
inc
fistpll
scas
cmp
pop
cmp
add
pop
add
xchg
je
mov
sarl
iret
inc
cmp
sub
lea
inc
fistl
jl
cltd
jns
outsb
jmp
adc
fcomps
andb
fsubl
shr
xchg
cmpsb
mov
popa
insl
sbb
scas
mov
pop
movsl
sub
clc
mov
faddp
xchg
push
xchg
sbb
add
adc
sub
pop
adc
aaa
push
push
testl
cs
ficoml
repnz
xor
dec
jae
dec
sub
fcoms
jmp
add
jnp
test
subl
scas
test
add
movsb
cld
inc
jle
in
gs
mov
lea
or
sub
sarb
idivl
mov
in
inc
push
sub
aaa
cmp
push
adc
mov
leave
or
mov
xchg
scas
stos
mov
pop
scas
add
xor
xchg
int3
push
mov
test
sub
mov
cmpsb
push
or
movntq
out
iret
pusha
pop
inc
push
mov
sbbb
pop
push
ret
js
add
xor
leave
push
mov
lahf
ljmp
push
fistpll
outsl
jne
push
and
or
pop
sbb
cmc
push
daa
pop
jbe
cmp
xor
push
rorb
ret
inc
sti
call
jae
mov
sub
fldl
cmc
pop
mov
add
sahf
pushf
jnp
mov
and
xor
call
test
lods
push
sarl
pop
add
and
push
subl
mov
daa
lret
out
cwtl
mov
popa
test
push
push
jecxz
test
std
mov
jnp
cmp
pop
enter
sbb
ret
add
adc
popf
aad
inc
or
arpl
ljmp
aad
insb
sbb
and
mov
std
bound
adc
test
pusha
mov
inc
sub
adc
or
icebp
push
pop
sbb
inc
mov
mov
lret
fs
int3
add
cmp
pop
int3
ljmp
lret
aam
daa
mov
and
pop
sub
shrl
fcoms
pop
scas
pop
push
mov
lods
cmpsl
mov
cld
aad
enter
fisttpl
pop
dec
aas
pop
mov
xor
fbstp
sub
or
stos
and
inc
pop
dec
dec
mov
dec
inc
popa
outsb
cli
jl
jb
lahf
nop
xor
push
sbb
cli
leave
xchg
dec
jg
sbb
loopne
cltd
xchg
adc
es
loopne
lahf
in
push
js
ds
fdivrs
sti
rolb
mov
rcl
fcmovbe
xchg
out
out
jbe
mov
push
sbb
push
add
jp,pt
mov
add
pop
mov
mov
sub
imul
sbb
mov
repz
mov
rclb
out
cmpsl
imul
je
mov
pushf
fadds
jle
lock
clc
push
cltd
jge
jecxz
mov
imul
or
subb
cmp
nop
xchg
push
vmptrst
lods
mov
add
sbb
movsl
add
test
sti
ret
add
inc
cmp
sub
dec
mov
loope
into
or
mov
dec
dec
fldenv
icebp
js
inc
int
dec
mov
push
push
cmpsl
xorl
inc
stos
out
add
pusha
mov
filds
mov
adcb
and
orl
pop
out
fdivrl
cmp
sub
sbb
fisubrl
stos
inc
ds
jns
aaa
icebp
sbb
ja
in
clc
and
cwtl
insl
push
mov
dec
cmp
dec
aaa
push
cmp
pop
pop
outsb
xorb
into
and
inc
aad
mov
pop
pop
dec
pop
adc
xchg
out
mov
insb
adc
fsubrs
mov
lods
sub
pop
mov
xlat
xor
mov
mov
jl
mov
scas
dec
adc
jle
cmpsb
out
pop
xchg
ss
push
adc
adc
dec
xor
jae
popa
mov
pop
pop
add
rorb
lods
lock
bsf
aam
insb
mov
mov
and
test
sub
mov
mov
imull
imul
stc
mov
mov
xchg
or
xchg
add
xor
sbb
cwtl
mov
push
shrl
lcall
mov
xchg
jo
xor
jno
call
test
testb
push
loop
push
sub
sbb
fprem
dec
inc
andb
adcb
xchg
ss
orl
psubusw
sahf
mov
mov
jge
or
lahf
cmp
inc
movsb
fstps
inc
sbb
adc
push
fnstcw
ficompl
divb
or
notl
push
in
idivl
inc
inc
inc
dec
stos
outsb
xor
jl
xor
pop
call
cwtl
jmp
mov
std
fisttps
push
sub
xchg
xchg
mov
cmp
into
adc
ljmp
pushf
rorl
mov
pop
mov
imul
jmp
jle
cmp
jae
jg
mov
xchg
add
push
inc
dec
sbb
ja
fdivs
cmp
jge
adc
cmp
push
xor
or
sub
sub
add
mov
inc
movl
pop
adc
mov
lcall
dec
js
push
xchg
nop
xchg
add
jmp
subl
jp
mov
or
adc
cld
ret
dec
sbb
mov
xor
test
cmpsl
pop
sbb
or
mov
jl
push
imul
out
out
xor
or
lods
movsl
xchg
out
push
jne
pop
fnstcw
mov
lahf
cwtl
dec
push
jbe
stc
rcrb
lds
icebp
push
inc
cmp
cmp
lods
jecxz
adc
mov
rol
adc
and
add
insb
xor
mov
iret
or
push
in
or
push
jp
sbb
dec
mov
movsb
lock
or
and
push
dec
cs
jmp
or
add
icebp
pop
ret
mov
out
lahf
lret
pop
mov
mov
je
sub
hlt
pop
outsb
fstl
movsl
cmpsl
mov
xchg
xchg
cwtl
xchg
js
fadd
popa
pop
sahf
cltd
pop
mov
xchg
inc
lods
mov
ja
dec
cmp
roll
imul
dec
mov
mov
and
std
shr
rolb
lods
and
in
sbb
ret
fwait
rcrb
mov
in
xchg
test
iret
out
outsb
popf
xchg
bound
cmp
add
loopne
test
xchg
notb
repnz
mov
pop
int
push
sarb
pushf
insl
inc
in
insl
jp
mov
cmp
xchg
sub
or
lcall
xchg
cs
mov
ret
mov
push
pop
dec
and
ss
jo
push
xchg
and
call
ss
push
test
jno
mov
xchg
mov
vpcmpeqd
xchg
fisttpl
mov
jno
jecxz
repz
xchg
jecxz
sarl
fwait
mov
mov
cmp
lods
es
pop
ret
inc
sbb
sar
jmp
out
jno
cmp
stos
dec
inc
rolb
fwait
imul
xor
sar
xor
adc
cld
xor
dec
rcrb
cltd
dec
arpl
imul
loope
insl
push
test
mov
notb
xor
push
add
cs
mov
ss
sbb
sbb
sbb
push
cmpsl
push
cltd
out
divb
lock
sub
imul
cld
dec
jg
jo
jl
jne
push
sbb
and
xchg
test
and
enter
push
add
sub
dec
addb
jmp
in
stos
ljmp
jmp
lret
mov
into
pop
xchg
lret
sub
ret
stc
cltd
xchg
fadds
fstps
stc
pushf
popf
sahf
pop
pop
xchg
ss
scas
loop
lds
loopne
addr16
dec
pop
push
xchg
dec
mov
ret
sahf
mov
inc
test
mov
cmp
rcrb
and
fstpl
pop
pop
jo
ror
xchg
jb
mov
test
adc
jmp
insb
es
lret
cmovl
or
pop
outsl
aad
subb
and
adc
mov
loop
fcoml
lcall
mov
daa
insl
ja
out
pop
dec
mov
je
mov
jo
push
andb
outsl
xchg
xchg
ljmp
mov
ss
and
dec
jecxz
insb
push
mov
mov
xor
sub
pop
dec
sahf
jp,pt
add
fs
or
push
and
add
mov
jle
fs
sbb
lea
aam
or
loop
dec
jge
add
shrb
fidivs
pop
sbb
jno
xchg
xchg
or
jg
gs
fcomps
and
das
adc
in
push
out
es
xlat
pop
std
stc
out
mov
cmpsb
fldcw
loop
dec
xor
xor
mov
and
test
in
mov
nop
into
mov
hlt
sbb
inc
movsl
dec
cmp
sub
sbb
or
mov
popf
and
cld
push
mov
scas
iret
mov
and
mov
mov
push
repz
nop
jns
xor
lea
mov
jmp
stos
es
jge
inc
add
shlb
inc
xor
popf
or
push
test
mov
rorb
fwait
dec
xchg
orb
imul
jo
shrb
xchg
push
mov
xchg
sbb
cmp
xor
andb
and
push
jp
lcall
aas
sub
fs
test
lock
adc
imul
popf
orb
rcll
call
push
out
cmp
jge
cmp
dec
cmp
cli
add
leave
test
cmpb
adc
pop
outsb
lahf
mov
cmpsl
jmp
dec
inc
and
test
sub
cmp
pop
dec
int3
jg
in
add
repz
call
sarl
add
mov
int
repz
push
loope
aad
insl
push
ds
in
jae
je
cmp
js
aam
scas
cmp
aas
std
xchg
add
mov
out
mov
fs
aas
sub
xlat
inc
cmp
or
push
out
cmp
in
sahf
shrb
iret
adc
hlt
fstpl
add
cmp
out
xchg
mov
adc
lret
int
push
cmpsl
jecxz
sbb
xor
cmp
lea
and
inc
into
push
repnz
push
xchg
and
xchg
add
pop
mov
int3
cmc
ficoml
cmp
mov
jns
fidivl
dec
mov
adc
mov
lods
in
mov
aaa
ljmp
sbb
lock
fists
inc
frstors
rcrl
imul
mov
xor
mov
imul
sbb
dec
repz
mov
push
adc
pusha
xchg
mov
icebp
sti
call
lret
jl
out
adc
fdivl
aam
xlat
inc
jmp
dec
pop
cmp
mov
cmc
cmc
mov
hlt
fiadds
iret
sti
xor
sarl
mov
add
nop
mov
dec
leave
insb
pop
mull
cmp
and
xor
pop
outsb
jbe
push
pop
jmp
into
jmp
mov
dec
addr16
fucomp
das
cwtl
mov
jne
xor
out
pop
cmpsb
push
bound
loope
jno
shr
ret
mov
les
inc
xor
mov
xchg
mov
jl
xor
popa
dec
sub
call
fs
sbbb
inc
and
and
jnp
cmp
mov
mov
jmp
fisttpll
mov
dec
sub
movsb
adc
or
push
jb
cmp
mov
pop
lods
and
loope
and
add
or
jecxz
mov
cmp
divb
inc
sbbb
fsubrs
sbb
xorb
out
pop
js
daa
sbb
lahf
mov
push
ja
lods
dec
scas
lock
enter
xor
mov
outsb
shlb
or
lret
inc
mov
sbb
jnp
inc
mov
jb
vmovsd
dec
cmp
inc
xchg
xorl
int
ds
adc
subl
sar
jg
xor
mov
inc
pushf
push
sub
out
clc
icebp
cmp
adc
or
sub
push
pusha
arpl
and
scas
in
pop
inc
push
repnz
push
cld
push
mov
add
xor
shl
enter
mov
mov
pop
rolb
mov
lahf
mov
cwtl
add
lds
loop
pop
adc
daa
ret
sahf
add
jne
inc
mov
and
mulb
pop
in
pop
pop
mov
dec
lods
fmuls
es
sub
mov
dec
leave
insl
and
mov
aaa
sbb
shl
sahf
lock
in
repnz
pop
dec
xchg
sti
mov
pop
cwtl
push
loope
mov
and
lea
fdivs
ja
cmp
out
xchg
sbb
dec
push
and
and
jl
inc
ret
and
addb
and
sub
ret
sub
lahf
loopne
cmpsl
or
ds
incb
repnz
add
addr16
mov
in
aaa
push
ret
adc
adc
call
iret
xor
and
aam
in
popa
adc
scas
lret
insl
in
cli
and
negb
call
and
inc
aam
mov
jle
daa
loopne
pop
jge
jge
sub
test
cmp
faddp
mov
test
pusha
dec
sub
bound
add
cmp
push
push
fidivrl
lock
push
andb
sbb
arpl
gs
lods
notb
xor
jge
and
sub
hlt
aas
fimuls
xchg
mov
jmp
ja
push
mov
cmp
push
das
xchg
jmp
addr16
rolb
inc
and
push
jbe
xchg
data16
dec
add
mov
dec
sub
or
mov
jae
xchg
sbb
bnd
xchg
adc
sbb
mulb
outsb
mov
ret
cmpb
pop
sbb
mov
inc
je
mov
push
dec
pop
pushw
nop
dec
inc
sbb
outsl
cli
mov
sti
aas
les
inc
addr16
push
lret
shl
dec
addb
cwtl
xor
jbe
rcrl
mov
ja
rcrb
in
dec
pop
lret
mov
js
sbb
and
mov
aas
xlat
dec
scas
out
mov
xchg
cli
lcall
push
cmpsl
mov
adc
inc
sbb
add
mov
cmp
shlb
cwtl
xchg
inc
adc
pop
fmull
jo
ja
out
stos
js
jns
sti
xchg
das
push
imul
mov
jle
fimuls
lods
lods
cmpsb
adc
sub
or
and
adc
mov
rorb
and
js
xchg
out
ljmp
aam
ja
dec
out
rol
pop
repz
fucomip
jae
loop
lock
add
ds
aas
fcompl
movsl
or
sub
pop
scas
or
mov
dec
loop
add
ret
roll
sbb
test
cmpsl
into
mov
rolb
jmp
fcomps
push
fwait
je
lret
or
loope
clc
or
xor
mov
aam
test
incl
popf
dec
das
movsb
sub
loopne
cltd
test
xlat
mov
push
dec
stc
ds
or
adc
sbb
loopne
insl
xor
mov
push
push
push
mov
jge
data16
out
mov
repz
rclb
sti
push
push
lock
cmp
lods
jns
mov
mov
jae
ds
lds
pop
xchg
pop
mov
xor
pop
xchg
lret
mov
aaa
lahf
jl
daa
pop
jnp
das
test
icebp
adc
sbb
xchg
fdivrs
jb
repnz
push
dec
je
cltd
scas
fldl
int
adc
push
aaa
mov
bound
xchg
lds
lea
jnp
scas
in
pop
mov
enter
sub
mov
jle
or
sub
and
jo
xchg
rcrl
cs
sub
int3
fwait
adc
scas
xchg
mov
icebp
fsubl
inc
stos
xlat
dec
insb
cmp
jbe
push
cmp
sahf
lret
pushf
sbb
jo
push
mov
jge
sbb
cmp
repnz
dec
mov
cmpsl
leave
stos
addr16
ret
cmp
hlt
add
lahf
fisttpl
loop
mov
scas
js
out
mov
sub
or
and
pop
push
lret
lds
mov
inc
fwait
inc
mov
and
mov
idivl
mov
enter
pop
ret
nop
in
out
jge
mov
push
arpl
addr16
pop
ja
xlat
mov
jecxz
int
pop
push
movsb
dec
rcr
mov
sbb
mov
mov
les
mov
scas
scas
and
mov
jle
std
jg
dec
or
inc
imul
sub
inc
add
xor
xchg
loope
out
scas
fstps
sub
add
outsb
cltd
xor
pop
adc
mov
inc
mov
lods
mov
gs
mov
cld
sub
push
out
xchg
xor
adc
adc
inc
addl
inc
mov
addb
xchg
stc
sbb
lcall
mov
xchg
push
jb
xchg
jle
and
xchg
lods
push
push
sbb
arpl
jg
mov
fcompl
outsl
pop
sub
subb
leave
jno
inc
in
jns
je
dec
int3
popf
movsb
adcl
inc
or
test
dec
xchg
sub
call
notb
mov
lods
adc
nop
mov
inc
pushf
fwait
aaa
push
jno
imul
push
pop
addr16
stos
push
mov
inc
jno
cltd
push
out
call
dec
jo
adc
mov
sarl
subb
pop
into
out
stos
inc
mov
clc
xor
inc
cmp
push
mov
js
add
aam
rcr
repnz
std
dec
sbb
cld
iret
pop
adc
inc
lret
aaa
shl
adc
xchg
aam
mov
push
in
lahf
call
pop
dec
iret
adc
mov
pushf
sbb
sub
xor
mov
mov
imul
xchg
inc
mov
push
mov
ror
test
aad
cltd
daa
out
fs
adc
mov
adc
pop
or
cs
lcall
divb
rcrl
cmp
shll
mov
push
jo
in
adc
or
mov
add
scas
jae
mov
push
in
jmp
add
sbb
inc
adc
cmpsb
or
or
dec
push
enter
mov
push
push
xor
jb
xchg
xchg
adc
pop
sub
cli
pop
shlb
lahf
push
jmp
jecxz
sub
mov
ljmp
or
js
aas
mov
stos
int
xor
mov
es
push
add
jp
clc
test
jmp
mov
xchg
sub
inc
or
lahf
sbb
and
bound
frstor
pop
sbb
adc
lods
push
cmp
add
lods
sahf
cmpsl
mov
test
xor
sub
inc
xchg
mov
dec
push
dec
jge
xchg
and
jl
mov
aad
cmpsb
mov
dec
cwtl
into
dec
sbb
in
xor
pop
test
or
jne
and
add
cld
sbb
fimuls
and
jle
adc
push
fiaddl
jo
cmp
pop
scas
xchg
dec
repz
sarl
adc
pop
jecxz
mov
ja
loope
add
push
mov
push
inc
pop
push
rclb
jle
mov
sti
push
pop
cld
sbb
add
jb
js
mov
mov
sbb
xlat
inc
push
loope
lret
add
mov
mov
lock
pop
aam
jge
push
dec
je
push
pop
imul
aad
test
lea
rcrl
movsb
jl
inc
movsl
xadd
shl
jne
loope
or
push
test
das
and
push
cmp
or
add
mov
jno
mov
mov
inc
push
push
add
cld
subps
mov
pop
or
iret
sbb
jno
insb
pop
and
mov
hlt
mov
int3
push
fildll
dec
xchg
mov
jo
or
adc
adc
add
or
pop
cmpsl
shl
movb
mov
push
adc
adcb
in
fs
rcr
mov
sarl
cmp
call
ss
dec
jo
mov
mov
and
aam
cmp
add
sbbl
je
mov
dec
pusha
pop
test
dec
dec
adcl
add
cmc
push
fisubs
aam
leave
sbb
fmul
mov
adc
aas
rorl
loopne
test
pop
das
mov
pop
sub
repz
xor
bound
mov
cmp
std
or
and
test
test
mov
mov
fstl
ret
pop
repnz
loop
or
fs
or
add
dec
orb
jae
or
lret
ret
icebp
cmpsb
mov
negb
mov
adc
mov
mov
lahf
leave
jl
mov
mov
fcmovnbe
loop
adc
push
push
add
fstpt
outsl
jge
rcl
insb
pop
fdivp
arpl
lds
mov
iret
xchg
adc
out
mov
xchg
mov
imul
adc
mov
fstpl
push
in
fsubs
inc
pop
shlb
shll
xorps
cltd
jns
movsl
cmp
bound
repnz
int
add
pusha
cmp
das
push
loop
rorb
push
push
sub
clc
dec
jge
dec
pop
sub
cld
lea
mov
mov
mulb
addr16
leave
add
xchg
cmp
popa
dec
fnsave
pop
xchg
lds
lea
outsb
ret
adc
adc
call
ret
aam
iret
lret
jae
cmp
dec
adc
in
shll
mov
mov
fs
mov
jns
popa
insl
out
mov
pop
cmp
jecxz
xchg
es
lret
xor
rcrl
cmp
les
cmc
rol
mov
insl
pop
sbb
ss
jmp
jne
ds
fldenv
jns
and
shlb
es
icebp
sbb
mov
and
cmc
jmp
lods
ljmp
movsb
insl
jne
xor
subps
and
or
aaa
or
xchg
inc
outsl
das
add
imul
jecxz
push
xchg
insb
rolb
call
popl
call
aaa
jo
fs
and
dec
pop
xor
repnz
add
sbb
mov
add
inc
test
mov
push
mov
mov
pop
mov
mov
in
mov
or
ret
jnp
mov
lret
mov
mov
push
or
mov
lcall
sbb
lea
mov
sub
cmc
repnz
ljmp
inc
inc
mov
cli
pop
movhps
jl
pop
inc
popf
pop
add
repnz
jo
lea
enter
addr16
bound
sub
mov
sbb
lret
jl
mov
xorb
out
pop
es
leave
xlat
jmp
add
stos
inc
push
mov
cmp
addb
lahf
dec
arpl
add
pop
pushaw
bnd
xchg
mov
jb
xor
pop
and
mov
sub
fucomip
xchg
notb
insb
or
xor
popa
mov
imul
mov
xor
aas
mov
push
jb
xor
and
mov
das
mov
andb
notb
pushw
pop
cmp
sub
push
pop
jge
stos
idivb
xchg
xorb
mov
jno
cwtl
notl
xchg
pop
fprem
imul
test
pop
xchg
add
divl
push
mov
sub
push
mov
dec
pop
fisttpll
sub
clc
or
loopne
rorb
mov
imull
add
mov
imul
daa
mov
mov
jmp
inc
insl
jns,pt
rcll
and
jno
push
fldenv
inc
sti
inc
or
int
lret
pop
add
test
ret
xchg
and
scas
add
push
mov
lock
mov
or
fs
push
add
lea
dec
scas
das
or
add
call
es
in
push
roll
js
cltd
or
or
mov
and
cld
dec
call
or
or
xchg
sub
cmp
lods
scas
daa
mov
push
jns
clc
je
dec
add
xchg
ss
movb
mov
sar
and
mov
mov
mov
adc
inc
cltd
test
mov
je
in
loopne
cmp
movsl
inc
pop
pop
add
out
ds
testl
jge
dec
aas
and
hlt
inc
mov
jno
jo
testl
pop
cmc
dec
cmp
repz
arpl
nop
subb
lahf
fwait
ss
jbe
sbb
cmp
mov
test
jo
insl
mov
sbb
cmp
xchg
push
adc
mov
sub
sub
add
inc
pop
push
in
lcall
mov
mov
sub
dec
dec
cmp
call
test
mov
inc
pop
call
ret
lret
mov
in
shl
in
cs
push
push
lret
mov
int
pop
lock
aad
stos
cmp
jge
rcrb
orb
mov
pop
mov
and
es
and
pop
mov
clc
sbb
pop
test
icebp
mov
pop
mov
aam
pop
sbb
jl
ret
and
mov
jl
mov
xor
mov
cmpsb
or
in
imul
shlb
pop
push
xchg
dec
sbb
lahf
push
jmp
sub
icebp
dec
mov
in
mov
adc
push
sub
pop
inc
lret
add
out
out
leave
lahf
pusha
bound
in
repz
dec
and
or
sub
aad
pop
je
jnp,pt
test
loopne
and
dec
lret
dec
sub
fidivs
insl
cwtl
repz
inc
insb
adc
push
and
fnstenv
adc
stos
xor
notb
sbb
cld
icebp
notl
mov
cmp
aaa
sbb
pop
int3
jle
je
ss
scas
stos
or
arpl
sti
sbb
jnp
xlat
pop
jge
lret
add
or
sarb
pop
orl
imul
shlb
les
out
and
ret
lds
inc
mov
mov
fstl
jns
faddl
sbb
xchg
xor
pushf
or
push
aaa
aam
adc
add
scas
push
scas
dec
lret
pop
or
mov
jb
and
addr16
mov
nop
lea
push
aaa
pop
das
lret
fsubr
mov
in
xchg
xorb
inc
mov
inc
mov
movsl
sbb
nop
inc
jbe
pop
mov
mov
mov
test
cli
das
pop
popl
cmp
ja
sarb
ja
push
les
mov
loop
fdivrs
or
shrl
aaa
xchg
push
scas
inc
adc
ss
dec
jg
test
pusha
scas
shl
and
fidivrl
xchg
sub
movsl
pop
adc
sbb
push
push
loop
repnz
mov
fnsave
sbb
jl
aam
out
pop
mov
cmp
lds
das
fstpl
lret
inc
popa
push
loop
dec
push
aas
push
adc
cltd
lcall
or
sti
xor
jnp
xchg
jg
and
cltd
loopne
rcl
push
jecxz
repz
mov
daa
cld
xor
pop
lds
fldt
mov
lret
das
pop
imul
inc
push
dec
add
or
mov
arpl
xor
jno
lock
icebp
sar
sub
sub
cld
insl
inc
push
or
sahf
mov
xchg
lret
aad
outsb
jg
or
in
scas
std
sti
fwait
sbb
insl
pop
jns
daa
inc
mov
inc
popl
int3
xchg
pop
cmp
mov
sub
aad
xchg
pop
repz
xchg
sub
imul
movsl
pop
je
mov
loopne
xor
xchg
add
ljmp
xchg
fs
sbb
and
cmp
mov
xchg
adc
add
push
addr16
sahf
inc
arpl
jle
jge
xchg
in
lock
imul
mov
pop
sahf
aas
ss
mov
mov
push
pop
out
sahf
pop
cmc
das
lea
lahf
add
mov
rclb
jnp
fwait
test
mov
sbb
mov
stos
lret
push
imul
int
fsubrs
mov
add
cmpsb
mov
mov
sbb
jecxz
sti
xchg
fwait
stc
repnz
lea
and
das
scas
fdivrs
pop
mov
xchg
fsubrp
pop
movl
jl
cli
repnz
xchg
jl
push
cltd
pop
jne
mov
ds
aam
mov
mov
sub
and
imulb
add
mov
push
stos
data16
fdivrp
push
aad
hlt
shrl
out
mov
fnstenv
and
test
imul
test
or
gs
icebp
dec
ret
adc
inc
nop
aas
push
aam
dec
js
movsb
sub
xorl
shl
jp
call
dec
cmpsl
frstor
rcrl
push
adc
movsl
mov
jmp
mov
nop
dec
dec
pop
out
out
outsl
lds
jge
je
iret
xor
sar
or
fwait
xor
xchg
jb
mov
cmpsb
mov
adc
test
mov
stos
fwait
lea
add
ljmp
jg
mov
mov
test
addl
decb
push
jg
inc
push
push
clc
aas
in
xor
mov
inc
cld
sbb
inc
das
push
int3
adc
mov
pop
mov
xchg
out
scas
dec
outsl
movl
pop
or
shll
rol
mov
repz
push
inc
xchg
add
js
lret
ljmp
sahf
fisttpl
jl
lahf
add
ljmp
es
cltd
mov
mov
push
fcoms
mov
push
or
or
dec
xchg
es
std
leave
lea
in
fwait
mov
in
mov
xchg
dec
and
movsl
and
pusha
push
mov
int
jnp
mov
aad
push
adc
bound
fcomi
and
push
andb
adcb
dec
rolb
loope
std
lcall
mov
andl
scas
test
and
popl
sahf
shlb
jmp
movsb
jp
jbe
cld
sbb
dec
push
jg
add
repz
cmp
ss
mov
cld
testb
pop
mov
adc
dec
clc
notb
push
fwait
call
mov
push
jne
cltd
xchg
outsl
xor
xor
je
push
xchg
push
sbbl
into
inc
pushf
ret
jbe
jl
cmp
in
xchg
enter
lahf
push
sahf
les
or
ljmp
popl
lret
and
popa
cs
ficomps
xchg
sbb
mov
fdivs
leave
je
sub
xchg
xor
mov
cwtl
fistps
test
jnp
cmpsb
push
and
jg
mov
loopne
and
inc
adc
jg
dec
sub
mov
adc
mov
sahf
cmp
test
nop
pop
inc
or
xor
jle
push
int3
movsl
sub
stc
mov
or
mov
lahf
push
jo
dec
push
fmull
adc
sub
cmp
xor
xchg
icebp
pop
call
xchg
jae
sub
stc
fnstsw
rcrl
outsb
cmpsb
cmp
shl
xchg
jnp
mul
shll
inc
test
repz
insl
pop
mov
mov
xor
inc
inc
fbld
test
or
push
sbb
jae
xchg
call
sub
dec
mov
mov
cmp
adc
int3
adc
lds
mov
outsl
stos
or
ret
frstor
call
int
out
sti
rdpmc
mov
pop
into
adc
js
xchg
int3
pop
and
cmpsb
cmpsb
xor
xor
pop
rorb
or
clc
sbb
dec
cmp
cli
das
and
mov
xchg
int
xchg
testl
add
out
inc
add
jo
notl
dec
pushf
insl
scas
jno
push
mov
and
clc
into
pop
cmp
add
dec
pop
test
inc
addr16
mov
or
int
mov
in
ret
mov
xor
dec
ljmp
mov
mov
fidivl
insb
dec
mov
orb
add
cmp
dec
lcall
pop
repnz
fimull
inc
cmc
outsl
xchg
cld
ja
dec
sub
lods
xor
jge
mov
xor
pop
divl
push
aam
jecxz
sarl
cmp
add
mov
xor
xor
cwtl
shrl
adc
fnstcw
push
loopne
cli
mov
in
ja
pop
lds
dec
mov
push
push
xchg
daa
pop
dec
mov
adc
pushaw
sub
pop
ljmp
jl
cmc
add
jle
xchg
jmp
jae
mov
sub
inc
in
scas
push
push
int
ss
jg
lcall
lahf
xor
pushf
pop
loopne
outsb
adc
push
pop
jmp
jmp
add
xor
loopne
push
adc
data16
and
outsb
and
ljmp
dec
push
mov
xchg
mov
pusha
sbb
das
aas
fcoms
fwait
pop
jne
dec
pop
lret
pop
mov
xchg
jge
popa
fisttpll
or
lods
mov
sub
xor
flds
call
fidivrl
dec
jecxz
adc
in
stos
mov
sbb
shlb
or
fs
iret
pop
rcrl
stos
mov
imul
mov
jno
outsb
inc
adc
dec
add
mov
pushl
sahf
aad
cmpsl
dec
or
push
inc
sbb
sahf
push
insb
dec
jl
aam
clc
cmp
xlat
fistps
or
in
mov
cmp
mull
adc
jnp
adc
ret
repz
add
or
shr
inc
adc
imul
stos
fidivl
sarb
cwtl
clc
das
mov
pop
lods
lea
out
addb
jne
loopne
add
outsb
mov
push
adc
into
in
adc
mov
mov
jns
adc
andl
aam
pushf
cld
pushf
push
push
and
cmp
sub
pop
daa
mov
mov
stos
inc
pop
xchg
mov
sbb
xor
xchg
push
mov
lea
outsb
mov
mov
shr
lea
and
adc
push
add
insl
hlt
cmp
loop
cwtl
arpl
mov
test
es
xchg
lret
movsl
lods
arpl
scas
and
and
fstps
push
dec
and
pop
movsb
dec
push
fisttps
in
cld
push
stc
fwait
mov
fmull
mov
loope
add
cmc
cmp
fbstp
ret
aaa
test
cwtl
push
jmp
jl
xchg
cmp
les
clc
psubsw
pop
push
jne
or
cmp
lods
icebp
mov
jp
leave
dec
and
mov
mov
inc
xchg
and
mov
mov
into
lds
dec
and
sbb
xor
mov
aaa
fs
lods
inc
sbb
in
or
jo
ds
sub
inc
lret
popa
sub
xchg
mov
test
arpl
dec
cmp
in
push
int3
add
hlt
or
insb
ret
pushf
pushl
or
test
mov
mov
scas
sbb
rorb
sub
fimull
mov
lret
adc
xchg
div
and
test
xor
sub
xchg
inc
mov
leave
add
iret
mov
movsl
sub
std
outsl
sbb
cmp
push
ja
mov
dec
stc
xor
push
jae
inc
xchg
pushf
sbb
or
sbb
in
jmp
pop
xor
testb
inc
orl
adc
fsubr
leave
pop
mov
es
shrl
jnp
and
push
lahf
inc
cmp
dec
cmp
cli
repz
and
push
and
sub
pop
cmc
out
push
cs
imulb
icebp
jbe
testl
insb
inc
lret
pop
add
and
jle
mov
mov
push
mov
xchg
scas
and
aam
xchg
or
in
or
es
cmp
int
sub
lods
pop
into
push
pushf
dec
xlat
inc
lds
xor
or
adc
push
data16
pushf
adc
stos
mov
add
dec
lahf
add
fwait
mov
cmp
test
aad
lahf
mov
out
inc
stos
push
jmp
cmp
popf
repz
push
loope
push
scas
cmp
test
lods
arpl
adc
arpl
es
test
mov
or
das
inc
and
sbb
sahf
popf
jno
xor
lock
add
adc
loopne
in
inc
repz
inc
push
ljmp
loope
or
lods
pop
and
dec
sub
fstl
cmpsb
dec
outsl
ss
mov
cmp
mov
mov
popa
sahf
mov
lock
addb
mov
mov
bound
mov
sahf
xor
sti
add
fwait
push
mov
scas
push
je
adc
lahf
cmp
rclb
lods
cmp
ret
push
fidivs
cltd
mov
ret
sti
lret
pop
lock
pushw
dec
lock
cld
mov
add
push
push
push
xor
stos
clc
shll
or
imul
jnp
fs
insb
pop
loop
push
mov
pop
jmp
in
lea
shl
mov
dec
xor
push
push
scas
insb
xchg
or
xor
mov
add
sbb
adc
ret
and
shl
sub
pusha
mov
xchg
pusha
mov
cwtl
in
push
repnz
mov
sarb
pop
fxtract
outsl
lret
xor
insl
jae
daa
mov
mov
in
cld
adc
mov
pop
iret
add
jge
mov
hlt
cs
cltd
pop
sbb
movsl
cmc
ss
clc
adc
ds
out
pop
sbb
inc
sub
scas
push
int3
lcall
add
or
fwait
ror
push
pop
xor
orl
ficoms
and
loopne
adc
inc
mov
stos
xchg
dec
inc
ret
jo
xchg
pop
jmp
mov
mov
hlt
jae
sbb
int3
or
rcl
cld
out
cmp
adc
leave
and
maxps
enter
fsts
das
xchg
dec
stos
inc
sub
pop
incl
iret
sbb
xchg
pop
jae
add
sub
bound
and
ja
sbb
adc
test
loopne
sub
rep
jge
xchg
jae
popf
or
sbb
outsb
lcall
xchg
test
push
loope
and
dec
dec
into
ret
sti
cmc
loope
test
or
sbb
dec
mov
mov
xchg
pushf
test
mov
aaa
mov
xor
movsb
cmp
sub
mov
or
jnp
popf
push
nop
rolb
pop
mov
out
out
add
pop
mov
cmp
fsub
nop
lret
std
push
loop
mov
test
jmp
test
push
arpl
bound
sub
lcall
xchg
cmp
sti
dec
mov
jb
icebp
adc
outsb
add
pop
in
cmp
or
outsl
mov
inc
mov
fisubrl
dec
test
ret
hlt
and
shr
and
fwait
push
sub
inc
and
lret
mov
fcomp
dec
fidivrs
movsl
sti
xchg
inc
inc
or
or
mov
je
cmp
sar
cwtl
cmp
cmp
cmpsl
xor
mov
add
repnz
jle
add
pop
push
or
mov
out
mov
movsl
insl
es
repz
push
bound
xor
notl
or
enter
daa
sub
repz
jp
sub
mov
stc
sbb
data16
cwtl
in
out
inc
arpl
andb
idiv
add
pop
mov
xchg
mov
add
pushf
dec
subb
sub
nop
mov
mov
mov
pop
shlb
mov
xchg
mov
aas
inc
loopne
in
rclw
adc
mov
adc
out
xchg
push
and
mov
mov
movsb
sub
sbb
pusha
imul
std
pop
or
sbb
jnp
outsb
pop
shll
pushl
in
pop
ret
xchg
fsubrl
test
stos
bound
subb
cmp
jo
mov
push
dec
hlt
pushf
cmc
mov
push
jo
js
push
popf
loopne
sub
adc
movsl
sub
lret
popf
divl
jb
bound
mov
inc
jns
lret
sub
inc
fstl
shl
sar
and
jle
je
jno
or
xlat
pop
adc
push
inc
xchg
xor
ja
imul
add
xor
xchg
pop
into
dec
cmp
daa
or
sub
cltd
add
aam
pop
jl
popf
mov
pop
jns
ljmp
dec
js
fstl
add
xchg
into
stc
mov
cmp
push
or
dec
mov
inc
pop
das
jmp
xchg
sub
xorb
xor
or
push
idivl
in
test
cmp
call
adc
sbb
add
int
mov
in
push
loop
jnp
ljmp
dec
sbb
jmp
xor
jno
mov
bound
out
push
mov
mov
daa
dec
dec
aaa
mov
push
mov
and
inc
out
loopne
push
mov
sub
shlb
in
pop
xor
add
sub
push
xchg
fnstsw
jmp
adc
mov
stos
std
or
adc
test
icebp
mov
inc
add
cmpb
adcb
imul
jle
or
push
lock
pop
cwtl
cmp
mov
inc
insl
sarb
mov
and
mov
prefetch
and
cmp
jp
ficomps
cltd
pop
icebp
dec
sub
lret
fwait
xchg
or
ss
lods
or
mov
and
push
dec
lcall
in
or
inc
sub
icebp
sbb
sbb
mov
sbb
jge
dec
xor
int
scas
mov
dec
xor
xchg
jmp
cs
sub
jb
aam
lret
test
aaa
fldt
jno
add
loope
ret
es
int
ret
icebp
mov
mov
jg
cmp
inc
mov
fs
xchg
adcb
mov
out
lret
or
xor
rcrb
incl
call
and
sub
mov
scas
shrb
lods
dec
jbe
adc
pop
cltd
xchg
adc
cld
mov
insl
or
jns
addr16
lcall
inc
fisttps
and
and
sbb
push
leave
sbb
shrl
sarb
mov
and
lret
xchg
push
loopne
addr16
ret
test
out
xor
outsl
dec
sub
adc
jle
adc
mov
fidivl
mov
in
ja
or
cltd
fsubs
ds
outsl
xlat
xchg
js
inc
or
dec
dec
mov
lret
xor
inc
adc
mov
hlt
jmp
iret
add
int
cmp
push
test
sub
adc
inc
pop
daa
idiv
sbb
dec
mov
adc
pop
pop
ja
or
dec
or
movsl
sub
adcb
sbb
ss
inc
sub
pop
mov
bound
pop
xor
mov
insl
mov
sbb
push
lds
sub
xchg
xchg
jmp
mov
mov
add
dec
push
xchg
loop
loopnew
insl
add
cmpsl
gs
icebp
and
fldl
or
pop
inc
mov
shll
lock
inc
fstp
jmp
jl
adc
inc
push
mov
push
hlt
add
mov
cmp
mov
xor
aaa
leave
pop
mov
add
inc
out
add
sbbl
xchg
mov
sub
fwait
sbb
add
loopne
pop
adc
movsb
sbb
xchg
fdivrs
repnz
mov
test
ljmp
dec
jl
cmp
scas
sbb
and
ret
mov
addr16
push
cmp
add
das
rorl
movups
lret
jp
xchg
xor
adc
sub
rclb
je
cmp
pop
inc
std
sbb
in
daa
push
pop
xchg
cmpsl
arpl
mov
outsb
test
mov
mov
mov
lods
xorl
pop
sti
fsubs
jnp
sub
fs
loopne
dec
cmp
into
mov
xchg
mov
jb
adc
test
adc
pop
and
lock
mov
push
pusha
sbb
data16
or
add
loop
mov
sbb
loope
sbb
imul
push
pop
adc
and
adc
decl
push
mov
hlt
inc
dec
fimuls
ret
clc
cli
cltd
or
jns
push
push
xor
and
fiaddl
ret
xchg
adc
lret
insl
imul
cmp
xchg
xchg
and
xchg
js
dec
add
xor
scas
xchg
xchg
in
or
push
adc
aas
clc
lea
push
aam
scas
mov
mov
inc
add
mov
das
jb
jp
repz
fwait
xor
in
push
dec
sbb
out
rclb
push
adc
rorl
cmp
or
rolb
mov
ds
cmpsb
push
lcall
add
xor
xor
pop
les
pop
mov
je
sar
inc
fisubrs
or
lock
cmpsb
jp
sbb
mov
shll
inc
pop
jp
es
xor
mov
in
jbe
cli
adc
aas
inc
jnp
adc
push
or
xchg
jge
ss
aas
push
xchg
jne
insb
jle
jge
sbb
loopne
push
push
setne
cmp
or
insl
add
adc
js
xor
xchg
adc
jle
or
xor
pop
mov
dec
and
fsubrl
movsl
mov
cld
fcmovnu
push
mov
dec
add
mov
jbe
add
lret
mov
pop
fisttps
aam
pusha
mov
test
push
pop
mov
mov
mov
dec
clc
jb
lcall
mov
fcomip
push
pop
adc
jns
pusha
mov
jmp
sub
mov
outsb
or
out
out
frstor
inc
xor
in
mov
mov
xchg
inc
pop
lret
adc
xchg
test
sub
lods
les
mov
xor
cmp
and
je
lods
lods
adc
pop
mov
lods
mov
nop
stc
icebp
add
in
fsubr
cwtl
das
mov
test
pop
jmp
xchg
pushf
dec
enter
imul
inc
data16
rclb
xchg
ds
into
xchg
push
sub
icebp
or
fists
ficomps
rorb
jne
mov
cmp
dec
inc
ret
mov
xchg
rcl
add
mov
fidivrl
xchg
and
cmpsb
cmp
dec
push
push
stos
ss
or
fs
push
inc
ret
sti
aad
dec
ret
pop
mov
inc
jmp
outsl
insb
fwait
pop
and
and
add
fwait
fwait
jmp
sub
js
cs
mov
adc
out
fnstsw
testb
rol
pop
xchg
mov
negb
int
lods
lahf
movsb
data16
pop
add
sbb
in
sbb
xor
adc
xor
xchg
into
sbb
cmpsl
adc
stc
shrb
and
mov
push
or
fadds
out
dec
mov
aad
adc
cwtl
cmp
jo
mov
scas
dec
jns
xor
lahf
dec
cmp
cld
and
mov
inc
in
sbb
lods
mov
sub
cmp
shrb
xchg
pushf
pushf
in
cld
imul
cmp
adc
pop
add
sbb
push
dec
cmp
int3
mov
ficomps
or
fimull
pop
adc
adc
xor
fisubrs
pusha
mov
in
or
mov
add
add
jge
cmp
and
fsub
int3
or
es
mov
sti
out
mov
sub
shl
int
xrelease
and
in
cwtl
xchg
mov
mov
mov
int3
cltd
sub
andb
xor
inc
inc
fistl
xchg
jmp
pop
mov
push
loopew
lds
mov
stc
push
test
lock
dec
push
dec
xchg
mov
outsb
push
data16
jnp
imul
pusha
add
pop
jb
push
jle
loope,pt
ret
dec
pop
jmp
and
and
inc
lock
xchg
out
dec
push
pop
mov
jno
outsb
mov
in
lods
xchg
push
iret
aas
cmpsl
mov
add
addr16
adc
inc
sub
jg
lds
xchg
inc
jb
ja
cmp
loopne
in
push
pop
ds
mov
fistpll
push
out
out
sub
sbb
aas
inc
nop
and
xor
push
push
push
rorl
int3
sbb
fadds
mov
push
sub
xor
inc
inc
mov
cmc
stc
mov
out
subb
sbb
dec
adc
aad
daa
xor
xor
dec
jle
das
xor
xchg
aam
mov
mov
in
mov
and
push
ret
cmp
mov
outsb
clc
les
mov
pop
scas
add
dec
add
leave
mov
push
ja
insl
adc
or
shll
mov
stos
jno
cmp
sbb
sub
jnp
std
movsl
sub
push
daa
in
inc
fwait
and
out
pop
dec
shlb
outsb
xor
es
mov
call
cmp
mul
stc
sub
sub
cmp
lods
adc
clc
movsb
scas
xor
outsb
dec
fsts
scas
aas
pop
pusha
out
xor
cmp
xchg
push
fninit
stos
daa
popf
fidivrl
sub
inc
adc
cli
push
cs
loope
addr16
pop
fstl
pop
into
lcall
unpcklps
in
repnz
adc
xchg
jmp
xchg
stos
pop
push
add
mov
push
jno
xor
dec
and
xor
inc
gs
mov
adc
add
idivb
mov
lods
xchg
dec
push
call
or
push
dec
pop
pop
ror
adc
pop
push
insl
stos
imulb
in
lds
dec
jge
inc
jae
mov
mov
adc
stos
inc
jge
add
inc
fstps
fstl
jg
nop
push
adc
sub
inc
pop
gs
push
aad
int
xchg
sub
in
arpl
cld
loopne
out
lret
dec
popa
push
stos
insb
mov
rcrl
movsl
scas
pop
xchg
dec
xchg
into
push
cmp
pop
push
cwtl
roll
mov
leave
adc
int3
fwait
sbbl
stc
jmp
cmc
lahf
imul
jle
ds
adc
and
adc
enter
pop
lock
shll
sub
adc
inc
jl
and
cmp
inc
ja
aam
cmp
fwait
cmp
sbb
or
testl
orb
mov
out
push
out
aaa
ror
xor
test
or
jmp
ja
outsb
enter
xor
inc
jge
clc
or
mov
rorb
mov
pop
das
loope
int3
pop
movb
jae
push
shrl
inc
lahf
hlt
in
rcl
jge
jecxz
icebp
ret
into
stc
cmc
pop
inc
repnz
dec
adc
mov
mov
iret
imul
xlat
addr16
scas
xchg
jecxz
in
sub
push
mov
cld
mov
and
insl
imul
enter
js
add
decb
pop
jmp
cmp
jae
jns
cli
lahf
sahf
sbb
dec
pop
test
pop
aas
adc
insl
andb
out
push
fmull
dec
arpl
aaa
xchg
push
inc
fcmovnu
mov
fwait
aaa
clc
sbb
rorl
or
sbbb
mov
hlt
testl
push
test
xchg
sub
cmp
leave
add
sub
adc
mov
out
scas
orb
ja
cwtl
in
clc
jp
xor
bound
mov
adc
jne
cmpsb
enter
pop
fildl
leave
mov
dec
cmp
in
mov
out
xchg
mov
sub
pop
out
daa
pop
movsb
cltd
pushf
dec
fcmovnbe
arpl
arpl
sbb
ret
dec
mov
ret
mov
cmc
ljmp
lods
fsubs
xchg
inc
cmp
push
sti
cltd
sbb
pop
into
jne
pop
lods
pushf
adc
xlat
mov
dec
adc
dec
movsb
outsl
mov
mov
inc
subb
daa
jle
mov
outsl
lret
and
lds
lret
ljmp
mov
add
movsl
sub
test
or
inc
dec
sub
xchg
fs
ret
push
js
popa
xchg
js
fnsave
adc
pop
iret
add
fs
enter
push
push
mov
adc
and
dec
inc
lock
testb
pop
adcb
loope
fs
dec
xchg
fadds
in
lods
xchg
or
aam
pop
jnp
add
xorl
mov
loope
adc
out
into
xchg
push
pop
jae
xchg
mov
lods
lea
jmp
jne
dec
cmp
cmp
fs
xor
popa
daa
xor
and
or
dec
orb
imul
sbb
ret
rclb
and
mov
sti
cmpsl
mov
inc
lods
aam
mov
std
fistps
jns
or
test
sub
jb
jns
je
add
lea
push
lods
cltd
sbb
jnp
ret
xor
lds
push
mov
cmp
sub
rcrb
rol
cs
inc
add
sti
jmp
test
pop
add
popa
dec
sub
aas
clc
and
std
dec
or
sub
testb
lret
psubusb
mov
pop
mov
cmp
mov
sbb
jmp
add
xchg
add
mov
adc
xor
xchg
es
bndldx
call
cltd
xor
sbb
pushf
xchg
xlat
movsb
cwtl
add
les
jbe
movsl
mov
lret
and
and
fidivrl
andl
add
xchg
push
arpl
pop
sub
jp
dec
push
dec
sahf
shll
xchg
pop
xor
add
mov
and
fstp
or
inc
fwait
pop
sarb
push
mov
sti
ja
push
push
jo
into
call
fidivrl
adc
lock
mov
mov
nop
jl
call
cmc
mov
mov
inc
enter
test
ja
inc
and
iret
mov
aad
mov
dec
jmp
xchg
pop
xorl
cmp
popa
imul
or
jne
jno
mov
push
lods
add
xor
pop
fldcw
mov
aam
dec
cwtl
clc
lds
sbb
dec
fimull
stc
enter
pushf
mov
mov
push
dec
imul
jne
pop
shl
stos
cmp
xchg
mov
and
mov
cmpsl
shr
xor
cwtl
fadds
add
cmp
in
cmp
jae
in
push
rep
and
repz
repz
in
dec
add
imul
cmp
sbb
push
pop
stc
lret
jae
mov
push
cmp
xchg
sbb
sbb
lret
stos
jl
add
xchg
js
pop
outsl
fildl
sbb
andb
sarb
cmp
icebp
dec
pop
cli
or
jo
enter
outsb
pop
adc
xchg
xor
pop
loop
sub
and
je
loopne
sbb
adc
or
mov
xor
mov
xchg
inc
out
xchg
test
cs
mov
and
xor
lock
ret
xor
pop
add
or
mov
jmp
insb
enter
andb
or
fwait
cmc
mov
dec
divb
nop
xchg
ret
jne
or
and
popf
or
and
inc
in
mov
push
jnp
pop
addr16
push
ja
mov
xor
cmpsl
mov
mov
jmp
push
sbb
shrl
mov
mov
xor
mov
dec
xor
imul
test
xchg
int
xor
sbb
mov
hlt
and
dec
mov
fwait
xchg
adc
xchg
jmp
jg
adc
iret
inc
stc
or
repz
cld
mov
in
gs
cltd
xchg
inc
add
out
dec
shrl
pop
jne
mov
popa
ljmp
divb
int
dec
mov
add
shl
cwtl
or
je
mov
popa
leave
cmp
jnp
mov
and
pop
fadds
cmpsl
pop
and
jne
scas
scas
sti
xchg
jmp
loopne
or
cmp
jbe
int
loopne
mov
pop
lea
es
pop
push
push
sahf
or
jnp
inc
stc
fstpt
jl
sbb
movsl
insl
icebp
mov
or
js
fucomi
inc
jp
pusha
and
add
or
mov
xor
out
or
mov
jno
arpl
lcall
xchg
jne
rcll
cmp
addl
xlat
mov
mov
loope
sbb
push
xchg
incl
jg
scas
jbe
mov
jns
rcl
pop
out
jl
dec
loop
xlat
push
and
test
movsb
sahf
loopne
mov
ret
fbstp
jge
dec
mov
add
loope
xor
nop
cli
mov
fisubl
jp
and
jmp
fcomip
xor
cmpsl
subb
cmpsl
pop
and
sbb
fdivr
cmc
out
ret
movsl
xchg
js
mov
push
mov
je
iret
leave
leave
xchg
jnp
cli
enter
rcrl
hlt
mov
or
divb
xchg
jmp
cmp
icebp
icebp
and
fadds
jl
xchg
fidivrl
or
cmp
push
shrl
and
mov
sbb
lods
roll
insl
das
mov
je
nop
pop
aam
mov
jmp
mov
cmp
test
inc
push
rclb
xor
ds
mov
cmp
or
in
mov
lea
and
and
pop
sbb
loope
xchg
leave
aam
inc
jo
loop
ss
xchg
adc
xchg
repz
jne
and
aam
jecxz
insl
les
mov
aaa
and
mov
mov
xchg
jmp
add
mov
js
and
stos
aas
sbb
jge
sbb
adcb
fsubrl
xchg
mov
aad
call
and
add
jecxz
inc
enter
pop
cmpsl
mov
ja
sbb
mov
xchg
sbb
adc
mov
sbb
xor
add
out
scas
sub
xor
int3
int
test
mov
push
jl
push
cmp
xchg
or
jmp
inc
sbb
xlat
mov
bnd
fsubrs
cmp
mov
stos
fs
aas
icebp
in
outsb
add
jns
dec
dec
add
divb
adc
add
ja
sbb
dec
insl
inc
std
mov
ret
test
xchg
adc
or
xor
int
or
test
dec
cmpsl
xchg
insl
push
sub
inc
mov
jns
sbbb
je
and
adc
push
xchg
js
or
push
mov
sub
js
popf
jmp
leave
lahf
std
imul
addr16
fimull
lcall
sti
outsb
aas
inc
cmp
and
lods
jae
insl
ss
icebp
adc
test
loope
or
and
vcmpss
mov
je
push
fs
outsl
dec
and
imul
mov
push
test
std
mov
push
mov
pop
lds
pop
cmp
dec
enter
lcall
ret
fnstsw
rcrb
fstpt
ss
xchg
mov
add
cmc
push
cmp
aas
mov
call
clc
jge
jge
dec
lret
mov
mov
dec
imulb
inc
orl
lahf
cmp
or
enter
or
xlat
cli
xor
push
test
ret
daa
sub
test
sahf
cltd
mov
test
mov
mov
in
and
lods
fwait
scas
movsb
xchg
lahf
inc
pushl
add
push
outsl
repz
sbb
mov
nop
loopne
push
sbb
test
in
movsl
popf
pop
lods
std
addr16
andl
sarb
fildll
ja
dec
add
aam
or
lret
rcrl
loopne
mov
cmc
cli
dec
or
loop
lahf
fwait
cmp
jg
rcl
pop
and
sbbl
push
jns
rcl
mov
mov
xor
hlt
mov
sub
addr16
test
imul
jns
jg
adc
and
notb
push
mov
cmp
sbb
gs
scas
ss
pop
jp
and
cmc
stos
rorb
fistpl
out
rcrb
lock
mov
adc
fwait
mov
xchg
pop
ret
jne
jno
scas
pop
and
cmp
pop
scas
xchg
daa
pop
mov
nop
or
cmp
out
jbe
cld
or
ds
aam
and
mov
fmulp
jle
loope
xor
jns
adc
jg
sbb
adc
outsb
ss
xchg
out
fsubrs
sub
lcall
test
test
mov
out
gs
stc
nop
pop
lahf
lahf
test
jno
loope
sbb
cmp
jae
gs
in
inc
pop
mov
leave
fisubrs
jecxz
mov
push
push
xlat
jne
sub
mov
out
mov
ja
dec
loope
pusha
js
sarl
push
ljmp
pop
imul
pop
lds
lds
jmp
cmp
inc
jnp
jmp
repz
pop
mov
test
mov
addl
and
xchg
aaa
xor
jb
movsb
and
xchg
popf
inc
pusha
xor
ret
inc
jge
xlat
cmpsb
sub
or
cmp
jmp
adc
pop
lret
loop
scas
or
stos
inc
mov
mov
xchg
mov
cmpsl
xchg
mov
jp
daa
shrb
int3
push
jae
add
pop
sbb
dec
ljmp
imul
add
dec
xor
sub
inc
pop
xchg
jg
jle
fs
mov
cmp
sbb
movsb
lods
outsl
sbb
inc
into
jnp
cmpsl
fsubl
xlat
repnz
adc
in
iret
jmp
inc
mov
xchg
popf
cltd
pop
jle
int3
add
mov
push
push
and
inc
fcmovu
gs
xchg
in
mov
mov
scas
add
loop
and
sbb
sbbl
jmp
jg
cld
cwtl
sbbb
push
popf
addr16
clc
cmovle
mov
push
pop
mov
pop
xchg
and
subb
fwait
mov
sub
xor
ja
dec
jge
jle
cmp
jns
jge
cmp
jp
popa
jl
jno
test
fdivs
insb
or
in
pop
sub
and
fstpt
dec
sahf
mov
push
addb
sub
mov
popf
gs
mov
hlt
in
sarb
mov
mov
cmp
inc
push
notb
add
or
inc
pop
popf
inc
ds
pop
push
lret
in
int
cli
or
pop
xchg
sbb
and
jp
in
pop
sbb
popa
stos
sub
in
scas
push
mov
fldcw
imul
jne
jmp
sub
test
push
orb
loopne
mov
stos
cmp
sarb
xchg
es
pop
clc
jecxz
out
mov
scas
stc
cmpsl
adc
stos
mov
scas
xor
or
xor
mov
leave
in
lcall
scas
pop
add
adc
les
lods
js
cltd
inc
xor
stc
cwtl
dec
sbb
test
push
mov
jb
ss
add
jne
cmp
insb
or
xchg
sub
imul
mov
dec
cmpsb
mov
and
dec
fcoml
push
gs
in
es
cltd
fs
inc
jns
sbb
and
jns
or
xchg
xor
movsl
mov
pop
insb
xchg
adcl
dec
adc
lock
nop
jnp
gs
dec
aas
test
loope
jnp
mov
jp
pop
aas
and
pop
lods
mov
xor
dec
das
ljmp
ret
mov
mov
mov
mov
xor
andb
movsl
push
call
mov
outsb
sub
je
nop
inc
rep
xchg
add
loopne
inc
pop
sub
mov
shrb
stos
jno
sbb
ret
daa
mov
arpl
fadd
es
mov
out
jmp
inc
jno
data16
aas
xchg
pop
xor
popa
subl
aam
ja
cmpsb
or
cmc
add
cmpl
inc
mov
mov
sub
dec
dec
pop
lea
dec
cmp
movzbl
iret
push
ja
out
leave
shll
adc
je
sar
pusha
fildll
lods
cmp
ja
lret
jle
xchg
data16
xchg
ret
bound
cli
std
mul
and
lock
mov
scas
gs
out
cli
push
int3
test
xor
adcb
aas
add
push
out
lods
or
or
mov
iret
leave
xchg
rcrb
push
in
test
fsubrl
mov
jns
dec
xchg
cmpsb
imul
cmpsl
sbb
inc
fs
add
stc
mov
adc
call
in
mov
sub
jns
cli
sbbl
lahf
dec
les
ret
sub
hlt
and
testb
pop
scas
mov
imull
sbb
rolb
inc
inc
push
das
lahf
cli
fidivl
push
shr
mov
dec
pop
inc
in
push
sub
push
jp
lods
dec
xchg
cmp
fadd
pop
push
push
fs
adc
imul
push
pop
or
lock
jae
stc
outsb
into
fsubrl
and
out
jo
mov
mov
lahf
lcall
dec
xor
mov
cmp
xchg
daa
xchg
les
data16
mov
xchg
dec
mov
jmp
mov
jno
lock
and
imull
cld
push
adc
aas
pushf
or
pop
test
out
jecxz
ja
mov
hlt
loop
jg
in
popf
dec
or
test
mov
notw
fst
pop
mov
stos
inc
out
xor
mov
mov
or
ss
lret
mov
lea
pop
xlat
test
in
xor
movsl
dec
push
mov
dec
js
xor
or
adc
ja
adc
and
cli
call
sub
ficoms
aas
cmpsb
add
mov
movsl
scas
mov
cmpsb
pop
cmp
shlb
push
stc
mov
or
fcom
jo
ficompl
adc
lea
in
hlt
lret
xchg
mov
sbb
xchg
lea
sbb
mov
arpl
jnp
jns
jo
add
shlb
sub
and
mov
cmpsl
cwtl
or
nop
lahf
iret
in
mov
xor
mov
mov
xchg
std
movsl
rcrb
mov
inc
dec
cli
mov
xchg
xor
and
test
sbb
or
test
cmp
pop
cmp
das
das
mov
xor
stos
aaa
pop
cmp
mov
sub
mov
popf
jecxz
sbb
pop
adc
movl
push
push
xchg
xor
and
sti
xchg
push
or
cmp
mov
out
repnz
and
mov
pop
les
inc
hlt
push
adc
sbb
xchg
aam
insb
shll
negb
fwait
mov
jge
lock
jge
enter
lcall
jbe
inc
aas
fbstp
ss
lods
mov
pushf
cs
jae
aas
lock
in
popa
sbb
dec
test
sbb
psubusw
enter
or
fs
fmull
pop
mov
xlat
jle
mov
pop
fs
orb
ds
mov
cld
and
in
push
add
aas
xor
int3
mov
shll
arpl
xchg
mov
mov
adc
or
inc
xlat
repnz
dec
and
xchg
dec
mov
jp
mov
cmpsb
mov
scas
inc
test
mov
lret
fildll
mov
jecxz
add
mov
or
push
fsubr
das
mov
lahf
adcb
inc
aas
mov
pop
sbb
push
add
jae
ds
mov
fstpl
faddl
in
cmp
sahf
sub
sahf
movsl
and
push
jb
and
xchg
push
in
adc
xchg
push
leave
lods
adc
push
imul
test
pop
jnp
loopne
push
popf
popa
sbb
fs
rcrl
testl
fdivrl
sarb
mov
mov
dec
test
repz
mov
and
inc
xchg
jmp
lock
or
adc
fisubl
mov
outsb
lahf
cmp
enter
fdivrs
jns
pop
adc
jge
movsl
or
sub
mov
test
sbb
enter
or
movsl
pop
loope
scas
aad
mov
push
sub
sbb
fistpl
push
jle
pop
sbb
leave
pop
leave
adc
ljmp
and
inc
sbb
and
rolb
pop
mov
push
inc
jb
insl
or
insl
jmp
cmp
push
cmc
js
or
xchg
imul
add
and
sahf
rcrb
ss
cwtl
int
js
push
pusha
incb
das
adc
jbe
cmc
mov
cmp
sti
xor
iret
addr16
je
adc
inc
add
lcall
lcall
and
adcb
dec
pusha
ljmp
movsl
movsl
shlb
xor
adc
pushf
add
test
gs
in
xor
mov
movsb
push
in
pop
in
data16
daa
hlt
sbbl
rcll
xor
in
push
pop
ror
sub
adc
mov
imul
fwait
lret
and
inc
pop
add
loop
ds
dec
add
int3
gs
aaa
out
pop
mov
push
pusha
test
lods
test
xchg
stos
xchg
push
add
out
leave
xchg
mov
sbb
leave
stc
push
xchg
sarb
cli
jae
push
pusha
adc
or
test
mov
jbe
xor
jb
cld
jb
stos
pusha
pop
fstpt
sahf
xorl
mov
cwtl
lcall
xchg
fmuls
jl
jno
mov
sbb
xchg
mov
xchg
pop
cli
inc
mov
in
lods
sbb
adc
and
lock
bound
bound
into
cmp
push
cmp
nop
adc
mov
add
mov
shrl
lahf
mov
cmpsl
jmp
pushf
mov
or
sbb
mov
push
push
mov
dec
lods
pop
inc
mov
les
je
push
je
clc
jecxz
jns
call
aaa
movsb
popa
cmp
pop
cwtl
sti
popa
mov
jge
cmp
orb
xchg
hlt
sub
sub
outsl
dec
lds
cmc
adc
and
das
fcoml
popa
out
push
lods
mov
push
fcompl
lret
mov
cmp
das
pop
jmp
mov
jmp
push
mov
lock
mov
fwait
cmp
xor
sbb
push
lock
idiv
dec
mov
lds
lock
adc
sarb
data16
mov
bound
jae
jmp
lods
cli
out
mov
mov
sbb
add
arpl
lods
fidivs
lret
je
mov
inc
outsl
outsb
sbb
pushf
test
addr16
ss
add
test
xlat
les
insl
fadd
add
je
scas
push
fsubp
add
jp
adc
cmpsl
lahf
xchg
test
andb
add
or
inc
mov
sub
or
mov
in
mov
mov
add
pusha
aam
pushf
sbb
ret
mov
adc
aaa
pop
mov
arpl
cmp
dec
push
xor
jbe
arpl
push
cmc
js
jecxz
sub
test
inc
and
inc
andb
shl
and
into
lods
fisubrl
mov
in
sbb
and
xor
mov
dec
mov
ret
stos
pop
pusha
movsb
gs
nop
jb
xchg
sub
es
sbb
popa
inc
out
push
adc
fnstsw
insb
lods
shrb
xchg
js
test
or
repz
hlt
aaa
scas
push
imul
jbe
insb
cli
stos
sbb
outsb
pop
call
pushf
pusha
in
scas
jecxz
mov
mov
test
adc
pop
inc
pop
movsb
pop
mov
push
cld
jns
mov
xchg
xchg
stos
xor
std
mov
fimull
push
ror
jmp
lret
and
popa
adc
adc
mov
jle
je
imul
stos
mov
fsubr
stos
sbb
leave
dec
shrl
inc
les
xchg
inc
loopne
fcomip
mov
jns
jge
ja,pt
shrb
adc
stos
dec
jp
xchg
jge
adc
loope
cmp
pop
call
shlb
or
hlt
test
in
sti
aas
cmp
lds
je
mov
je
insl
and
inc
mov
cs
imul
ss
pusha
in
movsb
into
jmp
pushf
pop
pop
aas
push
xor
or
loop
cltd
pushf
mov
fistpl
xor
mov
mov
das
dec
push
jge
mov
lea
fldcw
xor
mov
jmp
nop
mov
daa
int3
add
inc
cmovg
int3
int3
mov
dec
jo
inc
shlb
push
stos
xchg
out
adc
mov
loop
jnp
in
mov
stos
int
imul
rorb
jne
cmpsb
mov
push
xchg
or
xor
push
pop
idivb
push
lock
cmc
int3
add
in
pop
xchg
roll
pushf
sbb
push
add
xor
fwait
dec
cld
inc
popa
inc
insb
test
jp
inc
xor
sub
popa
sbb
push
in
enter
clc
add
cmpsl
popf
adc
popa
and
inc
jbe
clc
push
push
xlat
push
add
dec
sbb
push
inc
pop
inc
xchg
fstpt
mov
xchg
lret
and
xor
jg
paddb
add
add
push
pop
dec
jne
repnz
scas
dec
add
cmp
fsubrs
adc
popf
mov
js
into
sti
out
push
daa
subl
ljmp
jmp
jae
xor
aam
jp
mov
mov
jp
mov
cs
mov
xchg
cltd
dec
subl
or
fsincos
in
in
mov
sahf
mov
or
cmpsl
scas
test
into
lods
adc
inc
out
xor
mov
cli
loop
cs
push
push
mov
mov
hlt
and
fxch
aas
in
out
push
mov
mov
push
stos
inc
fs
int3
popf
fadd
pop
out
push
or
fistl
xchg
in
sbb
sub
push
sub
sbb
push
jb
and
cld
pop
jne
enter
aaa
sarb
push
fdivr
pop
adc
sub
xor
pop
fdivrs
imul
movsl
rol
mov
adc
or
insb
pop
push
clc
ret
je
xchg
in
add
sub
fs
int3
mov
xor
jle
aam
adc
jecxz
push
lcall
pop
xor
xor
xlat
inc
popa
pop
cmp
lods
sbb
cld
test
cltd
insb
scas
xchg
js
mov
addl
xor
add
ss
xchg
cmp
in
xor
icebp
scas
negl
shl
fwait
aam
xor
shl
lds
sub
fwait
sbb
adc
xchg
ret
fdivrs
cwtl
push
sti
cmp
dec
in
ficomps
hlt
xchg
mov
sbb
in
in
mov
mov
int
push
jg
and
xchg
in
lret
rep
xor
mov
fistps
pop
jmp
clc
dec
mov
sahf
lret
fcomps
and
gs
gs
mov
bound
inc
mov
jle
xor
fldenv
decl
cmp
cmp
jle
lds
in
in
sbb
arpl
xchg
stos
pcmpgtb
push
mov
mov
or
pop
movsb
xor
mov
les
mov
lods
adc
inc
mov
or
cmova
push
leave
xor
add
sbb
lcall
iret
lret
xchg
int3
xchg
jb
or
or
mov
sub
jo
inc
enter
jno
std
pop
mov
mov
iret
lds
stos
in
andb
nop
outsl
ret
es
fsubl
xchg
inc
cmp
xor
int3
xor
cmpsb
inc
stc
ja
add
sub
jge
ljmp
sbb
dec
cmp
cmp
sbb
stc
cld
les
mov
addr16
sarl
out
sub
repnz
fs
xor
lea
fnstcw
cmpsb
popf
jle
fstpl
inc
stc
cmp
dec
add
add
jmp
lea
sahf
mov
iret
andl
rcrl
lret
mov
mov
shrl
dec
or
repnz
mulb
cmc
les
in
add
fiaddl
adc
icebp
cmp
in
mov
pop
lret
mov
pop
pop
add
dec
sbb
sahf
inc
testl
mov
dec
addr16
xchg
xchg
out
ds
mov
out
dec
pop
push
sub
or
mov
addr16
push
xchg
fsubrl
stc
pop
jp
cmp
or
cmp
dec
mov
orl
and
popf
mov
xor
out
enter
jmp
mov
jl
pop
xor
lcall
jne
pop
mov
add
cmpsb
mov
cltd
sbb
mov
cmp
xchg
out
mov
sub
int
or
in
xchg
movsl
rolb
ss
lahf
fs
loope
or
xchg
mov
sbb
stos
and
jmp
fwait
mov
pusha
mov
das
js
cmp
xor
xchg
xchg
pop
cli
ljmp
mov
sti
repnz
mov
sbb
lcall
out
inc
pop
int
jmp
icebp
cld
xor
outsb
sbb
or
pop
xchg
stos
push
sbb
notl
enter
cmp
or
inc
loope
rorb
lds
pop
rorl
mov
push
mov
jp
rorl
dec
into
cmp
test
jge
jle
xor
mov
stos
test
jge
sub
sub
lds
stc
pop
test
incb
add
sbb
out
mov
cs
mov
lods
jnp
lock
addr16
loop
test
jb
imul
cs
jle
bound
inc
ljmp
lock
or
sbb
mov
xchg
mov
stos
std
cmpsb
fs
cwtl
mov
pop
dec
jns
cmp
jmp
stc
xor
out
fcmovbe
pop
mov
sbb
inc
xor
jg
out
mov
sub
shlb
sub
stc
loop
pop
xchg
dec
lea
clc
mov
inc
push
movsb
out
mov
and
cmpsl
addr16
fwait
inc
xchg
popf
addr16
sbb
push
mov
xchg
ret
jne
leave
mov
dec
sbb
jae
loopne
adc
dec
mov
sub
fs
add
insl
mov
xor
mov
test
pop
mov
mov
outsb
cltd
ja
mov
mov
and
pop
sbb
jnp
out
add
push
inc
adc
xchg
cmp
iret
js
orb
push
rcl
pop
adc
jmp
mov
and
xor
cmp
xchg
jl
arpl
sbb
insb
sbb
cli
sub
pminub
dec
inc
and
mov
mov
xchg
xchg
cmp
ljmp
leave
sbb
dec
or
aad
mov
push
dec
addr16
scas
push
mulb
pop
jle
add
cmpsb
mov
push
lods
jp
out
xor
addl
fldenv
loopne
or
gs
add
adc
aaa
push
adc
or
mov
add
hlt
int
cmp
in
xchg
mov
jne
movsl
shl
je
pop
orl
je
jne
popf
in
inc
mov
out
xor
or
sbb
xchg
xor
clc
mov
inc
out
fisttps
cltd
mov
mov
cmp
push
std
adc
aas
fdivr
mov
mov
push
lods
mov
jg
sub
sub
mov
mov
add
mov
std
mov
push
pop
push
add
add
mov
push
stos
mov
sarl
mov
or
xchg
push
lret
cmpb
lcall
test
mov
fdivrp
enter
mov
mov
adc
sub
shll
dec
ret
std
push
call
sub
aaa
cwtl
sbb
jle
mov
adcb
loope
dec
add
sahf
sahf
lahf
push
ljmp
jp
add
mov
icebp
pop
shrb
icebp
inc
in
jo
dec
sti
jg
rcl
fwait
dec
enter
or
in
lret
test
pop
cmovae
sbb
add
mov
push
fadds
out
adc
cmc
scas
cmp
jnp
ja
clc
aad
icebp
arpl
xchg
sbb
enter
lcall
jns
cmc
outsl
scas
adcl
dec
dec
mov
mov
add
mov
xorl
cmp
mov
daa
xorl
out
cmp
scas
push
push
and
mov
pop
clc
call
xor
add
inc
insl
lret
jnp
insb
dec
inc
mov
adc
adcb
push
iret
out
inc
popf
jmp
sti
loopne
jno
fs
popf
jmp
xchg
jo
lods
cmc
mov
dec
movsb
loopne
test
jmp
xor
adc
push
jmp
cmp
das
ret
mov
mov
inc
int3
xor
rcrl
or
mov
jl
mov
punpckhbw
adc
or
and
ds
ss
sub
mov
rcrl
out
mulb
shr
popa
push
xor
aaa
sbb
mov
mov
pop
mov
sbb
sub
cs
sbb
data16
xor
sbb
dec
ficoml
adc
xor
idivb
shlb
push
sahf
rcpps
fstpl
mov
and
fwait
xchg
xchg
xor
jnp
xchg
xor
cs
lds
dec
lock
lret
test
lds
fwait
ret
pop
mov
push
hlt
inc
lds
mov
xor
push
cmp
das
mov
dec
and
stos
repnz
pop
cltd
pusha
cmp
outsb
out
sbb
scas
mov
dec
cs
popf
lret
xchg
pop
lahf
xlat
push
mov
addr16
mov
fidivrs
mov
ds
mov
sub
jle
mov
bound
adc
lods
in
adc
fistl
dec
data16
sahf
xchg
jl
repnz
icebp
ffreep
insl
sbb
das
adc
cmp
jo
rep
iret
sbb
add
dec
mov
pop
dec
cltd
data16
lds
ds
mov
das
jmp
add
notb
inc
cltd
in
jg
aam
mov
push
shrb
int
in
dec
jmp
or
xchg
scas
testb
fisttps
sbb
cmpb
and
or
in
mov
xor
jg
bound
cld
rcrl
les
push
mov
mov
sub
dec
outsb
outsb
out
push
push
popl
test
jbe
faddl
les
inc
lock
mov
and
popa
mov
insl
aam
lcall
push
add
lock
sbb
mov
xor
loopne
and
cmp
xor
inc
xchg
push
mov
add
jne
imul
or
ret
fdivl
ret
jo
pop
xchg
neg
cmc
loopne
movsb
daa
pusha
jp
xchg
mov
xorb
mov
das
mov
out
xchg
ds
daa
stos
filds
jno
pop
mov
mov
adc
jle
xchg
push
iret
jecxz
push
ficompl
int
aas
adc
jns
sub
push
mov
cs
in
sub
into
adc
cltd
ret
repz
scas
scas
cmc
cmp
cld
cltd
call
insb
iret
out
fldcw
push
in
push
mov
bound
or
pop
jo
inc
mov
sbb
jmp
gs
cwtl
mov
ror
incl
or
add
nop
push
xor
cmp
call
lods
js
mov
ficoml
adc
or
dec
sbb
lods
cmp
sti
nop
inc
movsb
daa
popa
fnstsw
jg
cmp
lock
inc
sahf
in
sbb
mov
jnp
add
into
and
and
jmp
out
xchg
enter
stc
fwait
sbb
xor
out
mov
popf
mov
xchg
sahf
test
push
negl
add
and
mov
sub
dec
pop
and
push
repz
bound
pop
pop
shrb
and
inc
cmp
pusha
mov
mov
and
jne
fsubl
bndstx
add
scas
fmuls
movsl
pop
je
sub
push
imul
out
jbe
inc
xchg
xor
fwait
mov
sbb
pop
lods
fildll
dec
push
push
xchg
jo
cmpsl
mov
xor
int
cmp
test
push
push
xchg
testl
jmp
fldt
xchg
and
cmp
inc
jnp
xor
pushf
pop
mov
xor
dec
push
pop
jo
rcrl
cmpsb
insl
test
inc
sbb
fcmovbe
inc
adc
std
sbb
and
andl
addr16
xchg
and
ret
sub
nop
and
pushl
dec
orb
mov
insb
int
cmp
sub
adc
mov
aas
mov
loop
js
imul
orb
shll
adc
mov
sub
lods
push
add
aam
shlb
out
mov
and
mov
cs
movl
lret
rorl
sbb
ret
imul
xchg
push
jecxz
mov
sar
inc
into
mov
in
add
enter
mov
out
ret
ret
push
pop
ret
stos
sbb
and
repz
ljmp
fidivrs
xor
mov
cmp
jmp
add
inc
inc
setno
repz
cmp
xchg
sbb
add
scas
jne
sbb
jmp
pop
xor
inc
xchg
mov
inc
add
fadds
popf
rclb
repz
adcb
lcall
push
imul
jg
lret
jbe
inc
int
dec
loopne
and
adc
xchg
sbb
repz
dec
mov
xor
pop
mov
nop
movsl
and
int3
sbb
inc
adc
mov
and
adc
push
lock
mov
push
rcrl
sahf
mov
xor
cmpsl
sbb
je
cld
mov
pop
push
pusha
mov
lods
mov
sbb
cs
xchg
jb
sub
hlt
les
sbb
push
jne
leave
sbb
jmp
jnp
divl
ss
pop
mov
mov
jl
imul
push
push
push
hlt
fistl
dec
mov
push
sub
jne
bound
mov
mov
dec
mov
add
sbb
es
in
and
stos
sub
data16
lock
es
aam
filds
addl
jecxz
sbb
es
pop
jbe
xorb
mov
addr16
das
mov
gs
fnstcw
xor
fistpl
mov
sti
dec
subb
sub
mov
adc
jb
rep
mov
sbb
mov
xchg
xor
lods
popf
mov
dec
pop
jle
ret
subl
lcall
out
add
and
out
cmpsl
movsl
lods
rcrl
aaa
enter
push
cmpsb
xor
add
dec
jecxz
rorb
mov
dec
jg
in
in
jp
dec
ret
fucomi
rol
in
cmp
lcall
daa
notl
test
sub
aad
inc
jb
or
fsubl
and
push
pop
inc
cltd
jns
add
js
pop
sbbb
mov
outsb
shr
and
test
add
xor
cmovo
icebp
ss
sahf
cmp
mov
lahf
and
out
lret
xchg
shll
push
sub
pop
test
cmp
mov
cmpb
dec
clc
or
mov
pop
cmp
roll
add
mov
inc
fcompl
mov
scas
push
fists
dec
das
sbbl
arpl
outsb
sub
sub
mov
mov
cld
push
mov
insl
pop
push
pusha
scas
mov
and
mov
inc
add
or
shrb
dec
lods
decb
lods
cmp
xor
mov
or
sub
es
hlt
cmp
rorl
in
jne
popf
outsl
loop
push
pop
ja
cs
or
add
pusha
iret
jecxz
mov
icebp
stc
loop
mov
push
cmpsl
jns
cmp
div
mov
pop
mov
lock
push
and
cmp
aam
push
cmp
or
push
xor
xlat
dec
aad
jae
outsb
sbb
mov
xlat
lods
dec
xorb
or
xor
jbe
xchg
add
jne
pusha
lock
add
mov
imul
repz
das
jl
mov
movsl
jmp
push
cs
cli
inc
push
mov
orps
data16
fisubrs
jo
mov
ret
jle
mov
mov
pop
adc
int3
inc
and
leave
sub
xor
pop
and
add
mov
push
cmpsl
repnz
imul
shlb
adc
and
and
cmpsl
and
adc
or
js
xchg
adcb
fsubrp
mov
push
sbb
jecxz,pn
les
jo
int
jnp
dec
movsl
adc
pop
sahf
sub
mov
push
sbbb
dec
orb
lea
inc
pop
movb
sbbl
ja
xchg
fcomps
pop
jnp
cmc
jno
les
fistpll
mov
or
xchg
fisubl
repnz
fldenv
loop
sub
add
icebp
incb
gs
sbb
jmp
les
mov
outsb
pop
icebp
mov
jne
notb
imul
mov
inc
iret
test
cmpb
adc
aam
jbe
mov
or
jbe
rorl
cs
sub
in
cmc
fs
adc
in
clc
push
jb
ds
and
lea
icebp
pop
cmpsl
and
mov
cmp
mov
add
ljmp
test
sbb
jle
cmp
push
push
jbe
mov
pop
mov
jle
pop
mov
std
mov
pusha
inc
and
sbb
pop
adc
jb
stc
rcl
sub
mov
insl
mov
cmp
add
js
dec
lret
ret
int
mov
adc
mov
push
clc
in
pop
imull
adc
adc
cli
dec
mov
sub
getsec
xchg
inc
mov
sbb
ljmp
ret
pop
mov
cmovl
outsl
lds
cmc
sub
shlb
pushf
push
outsl
xor
sbb
cli
fdivp
push
out
sbb
push
jbe
sub
mov
mov
and
mov
stos
jb
jns
inc
sahf
mov
loop
sub
sub
xor
lods
xchg
lock
add
inc
ret
add
into
cmpsl
sbb
mov
stos
and
or
shl
aas
xor
int3
js
dec
jb
xchg
sub
mov
in
fwait
dec
fwait
inc
cmpsb
aam
mov
pushf
lock
pop
fsubrl
adc
mov
mov
into
mov
cltd
mov
adc
call
scas
or
push
push
add
xor
mov
in
call
mov
xchg
hlt
push
in
movsl
xchg
scas
int
mov
xor
sub
pop
out
stc
mov
add
cmp
rcll
loop
movsl
mov
cli
inc
and
rorb
xchg
int3
sub
lods
loope
outsb
cmpsb
ud1
jmp
mov
inc
mov
and
mov
xor
mov
loop
dec
int
pop
inc
mov
push
jmp
jmp
and
jle
pop
push
inc
std
pop
cld
scas
jns
aad
aad
or
cmp
mov
dec
sub
xor
or
loop
adc
in
pop
sub
ds
pop
mov
and
cmc
inc
lods
mov
add
imul
jmp
sub
xor
js
push
inc
cmpsb
or
push
dec
rcrb
or
add
test
imul
adc
xor
lahf
cwtl
add
repz
pop
lret
repz
loop
lahf
std
ljmp
mov
aas
add
cli
out
shll
add
lods
arpl
sahf
and
leave
leave
sub
sub
jnp
mov
push
fistps
cmp
lret
insb
dec
xchg
sti
cmc
cmp
push
xor
rorl
in
jno
loop
xchg
call
push
dec
or
sub
insl
sub
jae
mov
add
rclb
inc
sub
mov
xor
sbb
loope
push
clc
jnp
aad
in
dec
in
jnp
xor
rorb
pop
clc
lods
sbb
pop
rcll
mov
add
in
mov
nop
or
arpl
ljmp
les
push
lock
lcall
out
jge
int3
fsts
add
icebp
int
or
cld
enter
xchg
add
je
mov
pop
int3
frstor
es
cmpsl
icebp
into
mov
dec
lods
int3
add
xchg
sub
outsb
jmp
mov
jmp
movsl
aad
cmpsb
movsb
jg
call
mov
hlt
call
adc
and
sti
in
or
mov
dec
bound
mov
shll
or
mov
pop
sahf
xchg
fmull
inc
in
aaa
std
jmp
movsb
fmul
icebp
jp
sbbl
sub
dec
out
orl
outsl
pop
lret
cltd
xchg
mov
mov
xor
xor
sub
sub
adc
xchg
mov
jno
cmpsl
cs
aad
fsubl
mov
sub
lcall
mov
mov
or
movsb
and
xlat
jle
mov
pop
cmp
andl
sbb
roll
and
adc
lock
jp
or
pop
out
addr16
in
aam
cwtl
movsb
incl
xor
xchg
and
ljmp
out
setl
xchg
mov
xchg
or
jg
popa
push
jg
stos
dec
inc
xchg
mov
mov
ds
outsl
cmc
ret
lret
lods
xor
decl
idivb
sahf
lods
enter
mov
and
out
push
mov
or
fidivrs
scas
sbb
pop
insb
adc
repnz
cmp
pop
movsl
iret
push
sub
or
int
xchg
std
and
daa
rcr
jl
out
mov
in
cmp
cmpsl
sub
in
dec
adcb
add
xlat
stc
addl
hlt
fistpl
lock
mov
outsl
mov
cmp
je
push
xchg
cltd
push
jns
pop
push
les
movsl
mov
cmp
inc
pop
dec
adc
xchg
sub
xchg
stos
push
mov
cmc
cmpsl
fstl
xor
in
loop
push
rcl
and
pop
rcrb
shlb
bnd
dec
movsb
pop
dec
cmc
xor
dec
push
or
mov
xor
mov
mov
mov
pop
mov
mov
aam
fadds
jg
das
test
out
jmp
repnz
popf
pushf
in
fisubs
aas
and
jno
inc
mov
aam
jle
movsl
adc
mov
int
jno
mov
add
insl
cmp
mov
dec
sub
or
push
cmc
lahf
lds
shr
test
out
sbbl
in
jnp
jge
inc
dec
xchg
lock
adc
loopne
add
divb
clc
sti
xchg
mov
xor
xchg
stc
aaa
popa
or
insl
mov
cmpsb
jae
xchg
repnz
add
aaa
pop
adc
fiadds
cmp
mov
in
add
adc
sub
fildll
arpl
and
mov
filds
adc
enter
add
mov
scas
xchg
fildl
adcb
inc
dec
xchg
mov
cwtl
pop
fcoms
adc
mov
or
push
and
call
cmp
pop
int3
movsb
lods
adc
ljmp
adc
fildll
inc
in
das
daa
jb
dec
mov
and
sarl
shl
inc
cwtl
xor
lds
inc
xchg
mov
dec
add
cltd
es
mov
jge
ret
xlat
loop
mov
pushf
dec
popf
inc
xchg
sub
cmp
stos
mov
sub
mov
xchg
into
and
aaa
fimull
xor
push
in
dec
sub
cmc
jns
add
stos
xchg
sbb
mov
mov
enter
sub
inc
cld
mov
mull
insl
xchg
mov
xor
push
xor
fs
xchg
shlb
in
sahf
bnd
xor
jns
xor
mov
ja
loop
cltd
xchg
sub
jns
cs
adc
imul
pushl
pop
mov
xchg
push
das
inc
pop
push
cmp
lock
push
insb
jo
xchg
addr16
mov
shlb
lret
inc
sbb
jp
outsl
in
jg
imul
xorb
cmp
add
loop
iret
js
aam
loop
sub
or
in
inc
mov
sbb
and
scas
fucom
dec
sbb
in
sub
pop
push
cmpsb
movsl
mov
inc
les
call
pop
or
addr16
push
incb
push
repz
nop
in
dec
cmp
cmpsl
inc
adc
sbb
outsb
push
push
aaa
js
sbb
xchg
lods
and
loop
jmp
cli
pop
pop
jno
nop
movb
call
pop
push
inc
push
aaa
sub
in
sub
add
sarl
inc
push
ds
loope
xlat
mov
lahf
xchg
jb
rolb
leave
icebp
leave
lods
and
loopne,pt
test
add
adc
aad
lea
sub
dec
pop
or
lea
jb
push
cmp
js
stos
sub
leave
adc
pop
pop
jb
int3
add
xchg
xchg
cmpsl
popa
cmove
sbb
lods
loop
test
xor
jl
xor
jnp
ret
sti
pop
add
jp,pt
fcompl
mov
gs
xor
xchg
in
cld
or
cli
lahf
xor
movsl
ja
mov
imul
jge
rcll
in
scas
jmp
out
xor
xor
cmpsl
add
in
leave
lds
movsl
outsb
push
outsb
addb
ljmp
cwtl
mov
in
sbb
pop
adc
stc
push
daa
andl
mov
lahf
push
mov
sbb
xchg
je
daa
sbb
aaa
and
icebp
cs
ja
push
test
scas
cmp
fcmove
or
xchg
loope
lods
nop
hlt
mov
dec
inc
clc
ret
insl
push
mov
mov
ret
add
loop,pn
cmp
mov
inc
pop
cmp
out
inc
sahf
pop
loopne
mov
je
mov
jo
or
cmp
mov
stos
fnstcw
orl
popa
push
imul
xchg
fldt
das
pop
out
pop
dec
fisubs
gs
adc
imul
call
pushf
push
fisttpl
popa
in
and
adc
dec
push
popa
popf
or
mov
push
mov
mov
sbb
bound
pop
sti
xchg
mov
outsb
cld
daa
adc
stos
push
jo
stc
push
fbld
or
gs
shlb
inc
push
adc
dec
inc
pop
loope
push
cs
aas
test
xchg
xlat
cmc
mov
and
in
sub
mov
out
cmp
push
in
out
cmp
mov
mov
int
mov
inc
and
ss
cmp
push
ljmp
cltd
inc
in
in
shrl
xchg
fidivrs
cmp
adc
and
clc
pop
mov
clc
add
push
mov
test
rcl
mov
mov
dec
pop
lahf
in
aas
dec
mov
arpl
in
add
das
push
and
mov
pop
jae
inc
movd
andl
and
mov
and
gs
lahf
stos
cmp
movsb
sbb
add
jnp
mov
mov
roll
and
pusha
sub
mov
inc
or
repz
repz
mov
addb
sub
fildll
bound
or
xlat
inc
pop
cmp
ret
cmp
dec
mov
iret
lock
mov
loop
cmpsb
push
xchg
sbb
xor
stos
sbb
pop
sub
adc
xchg
adc
mov
dec
adcb
add
jmp
in
dec
mov
push
mov
mov
jecxz
jne
gs
cmp
and
add
jge
jne
rcrl
shlb
call
cmp
cmpsl
push
ljmp
in
adc
jl
mov
push
xor
dec
push
pop
add
out
ja
out
mov
inc
sbbl
mov
inc
ja
pop
psadbw
int
sbb
js,pn
push
stc
inc
hlt
test
mov
mov
pop
sbb
pusha
dec
ljmp
ds
dec
cli
sbb
orb
mov
or
jnp
pop
dec
mov
notl
add
jnp
mov
imul
imul
xchg
inc
movsb
je
loop
in
sub
aas
mov
add
push
push
and
mov
jmp
push
mov
xchg
into
out
adc
lret
ljmp
push
cmp
test
lock
xor
insl
imul
lock
hlt
pop
inc
ja
dec
stos
dec
dec
loop
rcll
lcall
jmp
dec
jge
lock
stos
mov
stos
sar
stos
fwait
lahf
push
test
jl
fimull
in
ret
repnz
inc
sub
rcll
pop
xchg
popf
push
loopne
pop
testb
sbb
mov
dec
cli
pop
sti
push
mov
repz
addr16
dec
sbb
pushf
mov
in
bound
ds
inc
sbbl
rol
out
andb
cmp
cmp
jno
xchg
pop
stos
pop
loop
xlat
aas
fidivl
xchg
mov
push
push
aas
inc
add
adc
pop
pop
mov
scas
push
arpl
mov
push
mov
adc
jbe
xchg
int3
inc
out
sbb
mov
jns
ret
dec
xor
pop
cmp
ljmp
fstpl
nop
imul
ljmp
es
je
mov
dec
or
das
ret
or
sarl
cmpsl
inc
mov
dec
push
dec
sub
lods
sti
xorb
loopne
xor
ljmp
shl
mov
cmpsl
aam
pop
sti
mov
push
jbe
call
xor
dec
sarb
or
int
pop
loop
pusha
test
mov
aad
or
mov
gs
jl
inc
test
cmp
fists
and
add
add
mull
movsl
cmc
mov
and
cmp
nop
cmc
movsl
sub
pop
adc
mov
ret
add
in
mov
xor
inc
xor
loop
push
add
or
push
pop
and
jmp
mov
bound
mov
push
or
pusha
movsb
ljmp
aad
or
pop
imul
mov
dec
adc
sub
subb
jae
jmp
mov
dec
roll
xchg
lock
sahf
xor
or
int3
insb
gs
es
adc
addb
dec
or
or
sbb
aaa
loopne
dec
pop
pop
mov
jns
aam
loope
in
or
push
mov
xchg
cmpsl
data16
add
pusha
mov
jl
push
sbb
repz
movsb
xor
in
xchg
dec
xchg
mov
cmp
btc
sub
xor
aad
pop
addr16
mov
popf
imul
xor
dec
ljmp
or
dec
mov
pop
shrl
fdivs
in
sar
mov
sub
and
push
mov
into
in
sub
xor
lret
hlt
and
movsl
cmp
adc
out
add
aaa
fnsave
aad
mov
cmp
cmp
mov
push
out
cmp
cs
jns
mov
xchg
sub
stc
js
push
sub
out
popf
push
jecxz
inc
jbe
aam
outsb
lods
testl
arpl
mov
adc
push
cwtl
repnz
adc
inc
xchg
pop
int
shrb
xchg
mov
cwtl
mov
lret
gs
test
jo
fnstcw
pop
adc
xchg
inc
aas
mov
add
or
or
stos
inc
mov
divb
jle
ret
addr16
stos
mov
popa
neg
jnp
pop
and
sbb
xor
sub
or
push
or
lea
out
out
sahf
jnp
aam
jle
addr16
aas
out
ja
lock
jp
xchg
icebp
movl
pop
aad
dec
negb
sub
fimuls
push
pop
outsb
repnz
mov
dec
es
mov
sbb
cmp
cs
sub
dec
cmp
into
pop
xor
lods
add
dec
loopne
lods
outsb
jle
stos
roll
fwait
xchg
xor
jbe
and
xchg
test
and
pop
sbb
bound
xchg
sarb
sbbl
ds
pop
xchg
cmpl
mov
fistl
sub
mov
lds
mov
xor
adc
aaa
fptan
sbb
dec
push
es
jnp
and
mov
mov
add
mov
cltd
imul
mov
cmp
cmp
lods
mov
mov
int3
add
jae,pt
and
add
dec
jb
push
mov
mov
movsb
dec
mov
xchg
loopne
fsubrs
into
cmp
cmp
leave
fldl
jbe
repz
out
jg
sbb
push
cld
loop
mov
ljmp
nop
push
mov
testb
popf
testl
and
pop
sub
shll
cld
mov
push
js
add
es
call
pop
sub
cmp
in
scas
dec
pop
mov
jecxz
jno
daa
mov
test
movsb
repnz
sbb
adc
mov
lea
push
shrl
cmp
pop
mov
dec
cmpb
cwtl
movsl
mov
xchg
nop
enter
push
push
dec
loopne
call
addr16
movsb
mov
cmp
inc
lods
std
push
sarl
imul
or
adc
and
rcll
and
test
jg
das
ljmp
cmpsl
filds
mov
mov
pop
imul
lret
mov
repnz
dec
push
mov
fstpt
loope
jmp
shlb
dec
sub
hlt
popa
xchg
or
jne
pop
add
jle
movsb
adc
and
cmp
shll
inc
dec
out
xor
and
stc
cmpsb
add
arpl
mov
mov
dec
pop
ficompl
mov
xor
jp
dec
mov
sbb
jb
mov
leave
adc
sbb
js
lcall
jle
push
dec
mov
jge
aad
push
mov
and
or
testb
jne
sti
mov
dec
and
js
jmp
dec
es
sub
mov
fwait
cmp
xor
adc
pop
aaa
mov
sbb
xchg
mov
mov
and
cmp
in
sub
xor
mov
cmp
es
int
leave
mov
jmp
lcall
out
mov
ljmp
mov
stos
movsl
leave
fldcw
and
rcrl
push
decl
lcall
dec
inc
mov
xchg
stc
jmp
cmpsl
cmpsl
mov
fdivs
jo
mov
int3
or
and
dec
adc
jbe
stos
push
addr16
movsl
cld
dec
je
or
cmpb
inc
push
ds
outsb
call
pop
jnp
jmp
mov
aas
movsb
xor
aam
and
das
mov
adc
sub
mull
jae
leave
fnsave
in
jge
repz
push
jns
lret
push
aas
divl
loop
imul
push
push
cmp
ja
test
jp
mov
ret
cmp
cmp
cltd
xchg
pop
enter
xor
sahf
jge
inc
cs
rclb
push
xchg
popa
loop
adc
sub
rorl
cld
pop
les
xchg
jb
cli
inc
add
shlb
and
push
repnz
aam
fdivl
stc
xchg
pop
sub
and
sbb
popa
imul
mov
pop
outsl
sbb
jmp
or
xchg
add
test
lock
or
das
sbb
jo
and
mov
lock
mov
push
loopne
mov
cmp
mov
jne
bound
mov
adc
mov
pop
pushf
shll
mov
fbld
sub
shrl
mov
cmovle
dec
and
dec
adc
push
add
lods
rorl
dec
pusha
int
jg
push
jae
dec
movsl
xchg
lds
mov
xor
mov
ds
mov
jnp
adc
inc
imul
xor
lret
dec
out
mov
cmp
mov
ljmp
test
loope
push
scas
lcall
dec
xor
xor
adc
rorl
out
pop
adc
lock
jmp
inc
inc
push
xlat
call
inc
xchg
mov
aad
mov
addr16
xchg
je
sub
mov
cmp
mov
mov
mov
jmp
jp
in
pop
xchg
mov
pop
bound
mov
loop
imul
popf
cmp
fisttps
inc
jne
dec
fs
mov
mov
popf
xchg
and
jecxz
mov
call
bound
data16
pusha
add
les
push
pop
inc
mov
jl
or
lcall
sbb
out
hlt
outsl
arpl
xchg
add
cmpsb
lea
jae
movsl
cld
shr
fistps
and
dec
dec
xchg
and
and
push
out
pop
jb
orl
icebp
pop
int
xchg
popa
std
jns
mov
sbb
fdivs
and
aad
sbb
hlt
lock
mov
loop
mov
or
sub
xchg
repz
sub
arpl
mov
movsb
or
pop
pusha
cmp
mov
cmp
adc
push
rcr
fmull
cwtl
sub
inc
and
mov
or
push
test
adc
nop
mov
je
sbb
pop
mov
fsubr
xorl
insb
or
popa
clc
outsb
test
push
stos
loope
jbe
ror
ret
ret
xor
pminub
xchg
push
aam
hlt
xorl
lcall
scas
cmpsb
cmpsl
mov
loop
xchg
fdivr
stos
test
sub
xchg
xchg
scas
and
outsb
cmp
popa
aas
fnstcw
loop
sbb
jle
scas
push
adc
icebp
das
pop
mov
lea
push
in
repz
mov
push
mov
imul
dec
push
loopne
bound
mov
mov
addr16
fwait
rcl
mov
add
jno
movd
cmp
std
adc
in
and
insl
pop
and
mov
push
mov
mov
or
xchg
cmp
jbe
cmp
dec
jo
push
jbe
movsl
pop
or
data16
sub
fcmovnu
loopne
stos
cmpsl
push
int
rolb
mov
jne
call
repz
xor
mov
mov
inc
cmpsb
mov
jbe
insb
sub
fbstp
adc
sbb
sub
push
les
jecxz
stos
movsl
ja
sbb
push
ja
es
pop
lcall
cmp
or
shll
rclb
stc
inc
or
inc
sbb
aam
shr
xchg
jbe
mov
popf
in
fmulp
mov
jp
dec
jo
cmpsl
push
mov
outsb
xchg
shrl
repnz
lcall
sub
add
inc
shlb
iret
cmc
jnp
or
push
popa
nop
or
pop
or
iret
mov
inc
cmp
push
outsb
jp
fdivrs
sarb
jb
int
add
and
in
cmp
adc
xchg
fsub
jb
push
stc
out
or
cs
or
jo
mov
rorb
negl
imul
push
fists
sbb
mov
or
sahf
xchg
xchg
push
lahf
es
xchg
or
addr16
orps
push
mov
xchg
mov
lock
jle
sahf
addr16
shll
mov
mov
ficoms
mov
dec
jge
sti
cmpsl
inc
inc
jp
clc
mov
dec
dec
push
mov
dec
mov
pop
stc
imul
jmp
sub
jle
in
xor
push
dec
lret
iret
out
lds
dec
leave
lcall
rclb
in
sub
in
jmp
and
mov
mov
rol
lret
xchg
das
dec
xchg
inc
xlat
lea
test
and
and
jmp
mov
loope
icebp
repz
xchg
ret
add
fildl
iret
movsl
mov
xchg
xchg
xchg
sti
loope
mov
fsubp
es
jmp
mov
pushf
sub
pop
idiv
push
fildll
fnstenv
push
pop
jecxz
inc
or
or
cs
inc
xchg
push
and
cmp
int
clc
repz
aad
or
pop
sub
insl
shll
sbb
fisubrs
mov
imull
push
dec
mov
xchg
adc
adcb
popa
in
inc
int3
fwait
xorb
pop
mov
es
xor
arpl
scas
xchg
dec
lods
out
mov
jno
mov
cli
lcall
call
xchg
ret
push
outsb
aam
inc
cmpsb
cmpsb
jp
rep
or
dec
repnz
inc
pop
in
mov
arpl
sub
loop
std
div
mov
insl
sarb
cmp
outsb
sub
mov
mov
mov
icebp
icebp
pop
inc
scas
xchg
stc
clc
outsl
dec
dec
cmpsl
adc
pusha
loope
push
loop
and
test
push
hlt
pop
imul
lret
repz
push
dec
int
mov
jb
inc
dec
clc
xchg
pusha
fstl
clc
cmpsl
movsl
mov
loop
xchg
scas
pop
je
mov
push
stos
pop
rcrl
jge
mov
cmp
lock
and
jo
insl
mov
cmp
inc
jmp
inc
insb
ljmp
subw
or
add
dec
sbb
nop
iret
push
sbb
orl
sti
jge
inc
in
popl
jecxz
scas
sub
mov
ljmp
in
popa
push
mov
in
xchg
add
mov
cmpsb
je
pop
sbb
mov
pop
gs
xor
xor
xchg
aad
or
fwait
popf
pop
jbe
adc
xor
mov
out
in
fwait
pushf
push
jecxz
push
push
push
fistpll
lock
pop
mov
ror
and
mov
or
or
clc
cmp
sub
mov
test
aaa
nop
aaa
lods
push
shll
dec
and
call
push
stos
cmp
xchg
cmp
cmc
cld
cwtl
fiadds
scas
or
stc
pop
fnstenv
in
mov
daa
sub
lret
cmp
hlt
lods
or
mov
xor
cmp
in
imull
outsb
outsb
les
icebp
or
cmpsl
push
jb
sarl
repnz
cmpsb
dec
es
xor
sbb
push
rorl
cmp
sub
test
scas
hlt
push
call
dec
xchg
jecxz
adc
cli
lret
nop
inc
jmp
xchg
cmc
inc
inc
je
shrb
ficoml
test
xlat
cltd
dec
sahf
push
cltd
cmc
les
sub
int3
sub
fwait
sbb
inc
stc
nop
mov
data16
fidivs
fsubrs
inc
jecxz
cmp
pop
lcall
clc
cmp
mov
jb
fimull
lods
lret
aas
push
enter
xor
out
in
mov
in
push
and
lcall
pop
in
out
jmp
addr16
xor
rcrl
and
jmp
inc
push
test
mov
nop
fs
leave
inc
and
inc
jae
cmp
pushw
and
inc
push
mov
aad
aam
mov
push
sub
jp
aas
mov
shll
pop
mov
daa
sub
mov
inc
stc
fcoml
fisubl
mov
fwait
and
xlat
mov
or
clc
xchg
les
flds
sbbl
int3
fidivrl
bound
outsl
mov
add
ss
cs
xlat
std
cmp
cmpsb
mov
shr
inc
xchg
iret
cmp
cwtl
mov
sbb
jecxz
in
hlt
dec
insb
repz
hlt
sar
lock
pop
xchg
adc
adc
jo
dec
xchg
test
shll
inc
bound
sbb
ljmp
jp
sub
outsb
cmp
das
jnp
aaa
rcl
xchg
stos
arpl
insb
and
push
loop
out
inc
inc
lret
pop
bound
mov
es
arpl
std
push
push
mov
inc
in
outsb
aas
jg
movsb
add
ucomiss
in
mov
enter
sti
int3
adc
loope
lahf
mov
cmp
cli
in
movsb
addr16
lods
leave
xchg
push
popf
insb
addr16
jo
scas
gs
daa
int3
and
nop
dec
inc
dec
mov
lcall
mov
push
ljmp
hlt
sub
push
in
out
push
and
mov
fnstenv
mov
push
push
scas
repnz
fldt
jno
lods
arpl
xor
fs
add
sahf
ret
aas
mov
aaa
frstor
mov
cmp
push
push
xchg
lahf
push
and
cmp
mov
inc
push
bound
cmp
int3
pusha
pop
cltd
dec
cmp
mov
out
arpl
jae
imulb
mov
pop
jo
adcl
lods
pop
popa
int
add
inc
sahf
in
rclb
mov
std
dec
mov
add
mov
jo
cmp
adc
outsb
int
jg
mov
loope
or
pop
iret
sub
stos
cld
decb
mov
jl
ds
xchg
shrb
pop
lock
mov
jp
add
call
xchg
ja
xor
pusha
pushf
pop
inc
into
cmp
pop
xchg
or
adc
mov
jne
inc
lret
sub
push
add
add
insl
xor
adc
lahf
into
test
adc
insb
jmp
push
cld
lock
sarb
mov
mov
add
sub
iret
push
movsb
fisttps
movl
sub
mov
jmp
subb
cmc
lds
dec
aad
mov
leave
sub
call
sbb
xor
jae
xor
in
dec
jne
dec
movsl
lret
popf
mov
cmpsb
ret
mov
xor
nop
nop
fadds
std
in
mov
aad
fs
out
lea
aas
pop
stos
lods
stc
imul
cmp
jp
jno
mov
push
inc
daa
mov
or
dec
insl
xchg
push
mov
lcall
xchg
arpl
sbb
loopne
mov
push
xchg
adc
gs
adc
mov
adc
test
les
int3
rorl
dec
adc
inc
sbb
fmuls
mov
movsb
test
pop
mov
scas
enter
mov
bnd
cwtl
sbb
decl
pop
mov
ss
aas
or
jg
aas
daa
adc
insl
mov
mov
inc
pop
mov
adc
and
mov
jb
out
fstps
xor
clc
arpl
pushl
std
jbe
cmpsb
add
add
adc
out
xor
xchg
pushf
addr16
cmpsb
push
fiaddl
cmp
mov
les
cmc
push
loopne
and
push
inc
int3
int
leave
xlat
lret
inc
push
ljmp
jp
add
int
adc
loopne
mov
mov
scas
adc
scas
hlt
or
stos
and
xchg
mov
dec
cmpl
fbstp
inc
andl
ret
and
sub
cltd
sub
pop
int3
negl
ret
in
fdivs
pop
sub
cmp
mov
jns
das
mov
mov
sahf
jl
sub
sbb
xor
xchg
les
mov
jb
ds
adc
push
outsb
negl
leave
mov
inc
loopne
test
mov
add
shrb
fnstenv
jmp
sbb
dec
js
pop
inc
test
xor
xor
mov
std
pop
push
outsl
outsl
dec
jae
dec
fwait
mov
ss
and
lret
mov
fiaddl
inc
xor
sbb
adc
repnz
mov
sub
loopne
test
sub
gs
pop
mov
add
pop
leave
adc
sti
or
insb
xor
lods
lahf
shlb
repz
dec
dec
sbb
push
inc
xchg
inc
arpl
cmp
imul
or
xchg
fwait
xchg
xlat
out
dec
fdivs
lret
cmp
mov
int
jg
xchg
shrl
loop
jmp
xchg
popa
jbe
push
and
shll
add
ja
dec
daa
pop
scas
aad
iret
pop
and
test
fisubrl
add
repnz
pop
mov
xchg
cmp
push
ret
je
inc
push
jae
mov
lahf
mov
xchg
pop
mov
negb
leave
movsb
or
cmp
call
and
fbstp
pop
clc
sbb
add
hlt
xlat
xor
sbb
cmovs
push
dec
fsubrp
loope
je
out
cs
push
sbb
adc
out
outsl
mov
xor
jmp
push
fstpl
fs
cmp
in
jg
xchg
inc
inc
ret
out
inc
mov
xor
andb
ret
movsb
adc
sbb
in
insb
es
out
into
push
fdivr
nop
mov
cmp
mov
aad
xchg
popf
imul
pusha
add
leave
test
stos
pop
imul
iret
cwtl
ljmp
mov
or
dec
lret
add
add
cmpsl
push
sub
sahf
int
mov
test
int3
out
insl
mov
jo
fldt
inc
rcrb
adc
shll
jae
mov
xor
fldz
cmp
or
fsubs
ss
mov
push
loopne
sub
or
dec
movsl
std
adcb
and
mov
sub
in
mov
cmp
or
test
lock
movsl
adc
mov
nop
outsl
dec
jmp
lea
hlt
cmp
adc
inc
cmp
or
pushaw
cld
xchg
fcomps
push
jne
flds
bound
pop
cwtl
push
orl
cmpsl
daa
jno
jnp
mov
gs
movsl
push
adc
movsb
test
fld
lret
fcompl
nop
mov
mov
push
addr16
mov
out
dec
or
sbb
mov
into
lret
adc
lds
cmp
jbe
test
scas
mov
sub
adc
aaa
mov
sub
sub
lcall
enter
aaa
or
dec
add
mov
pusha
sub
aas
pushf
es
icebp
jge
or
pop
mov
dec
aad
les
test
iret
and
pop
push
fldcw
in
lahf
daa
cmp
sbb
outsb
cwtl
cltd
cmp
sub
dec
or
jmp
sahf
mov
mov
in
ds
jb
ret
insl
mov
and
add
mov
lock
mov
jb
iret
mulb
sub
cmpsb
lahf
out
inc
adc
add
daa
out
ret
fldenv
mov
jne
cmpsl
xchg
sarl
sub
aaa
sbb
mov
add
cmp
into
sub
push
fistpl
inc
or
push
mov
pusha
add
lret
dec
lods
mov
cwtl
cmpsb
push
call
adc
ret
mov
cmp
push
sahf
pusha
ret
and
xchg
loop
hlt
loopne
mov
push
out
xchg
or
loopne
push
fcoms
mov
aam
ret
popa
loopne
xor
lahf
in
jne
jg
adc
jg
pushf
dec
aaa
les
add
ret
int3
data16
das
push
pop
jmp
push
inc
cli
mov
movsl
arpl
xor
xchg
mov
push
pushf
je
ja
lea
ja
add
push
inc
sbb
test
clc
dec
inc
push
lods
fadds
out
cmpsb
cmp
cmpsb
test
push
add
addr16
xor
sub
insb
pop
or
add
cwtl
imul
mov
sbb
adc
sub
adc
sub
dec
ja
jle
mov
mull
jae
shll
adc
push
mov
pop
dec
jmp
cmp
mov
pop
inc
aaa
mov
mov
jne
dec
mov
ljmp
lret
je
sub
cmp
xchg
sbb
mov
add
jne
sbb
flds
dec
movsl
cmpl
loopne
mov
outsl
data16
mov
insl
pop
repz
shlb
dec
icebp
ja
cli
scas
push
jns
mov
push
mov
and
inc
inc
pop
mov
pop
lods
outsb
out
xchg
xchg
mov
jbe
fisubrs
stos
mov
out
lods
shr
fsubrs
inc
pop
in
iret
mov
pushf
or
rol
out
out
daa
std
jns
jo
jg
sub
pop
add
inc
jle
das
pop
bound
pop
cmp
push
pop
pop
mov
jnp
jno
xchg
jle
ljmp
mov
cmp
scas
sbb
daa
pop
adc
push
cmp
xchg
dec
and
xor
movsl
sub
push
jb
push
sub
bound
test
or
loop
mov
cmp
addl
cmp
jb
pop
in
call
sar
sbb
dec
pusha
pop
movsl
ret
insb
mov
je
dec
loope
jne
movsl
shl
dec
ret
cmp
movsb
mov
stos
scas
cmpsl
aas
push
loopne
add
pop
mov
lcall
mov
mov
jbe
fwait
aam
dec
loope
int3
roll
sub
out
lock
in
lds
jae
sbb
cmp
sbb
andl
pusha
pop
cmp
cmc
xchg
test
and
gs
ret
mov
pop
xor
imul
sbb
cmp
roll
lahf
jo
loopne
xchg
in
mov
cmpsl
repz
pushf
sub
out
xor
sub
out
aas
adc
mov
iret
jno
mov
pop
fsts
mov
pop
adc
lods
push
lahf
arpl
cmpl
add
inc
xchg
mov
je
movsl
and
add
inc
cmp
inc
xchg
push
fsubl
je
sub
fs
pop
lods
mov
mov
jbe
jmp
inc
ret
sbb
rcrb
imul
test
scas
xchg
call
mov
mov
outsb
dec
push
lcall
call
mov
pop
adc
jo
stos
pop
push
imul
mov
sbb
leave
mov
jmp
pop
in
bnd
dec
jno
pop
sbb
mov
test
mov
fdivrs
pop
mov
ljmp
pop
addl
xchg
mov
sahf
jecxz
fidivrl
push
lods
mov
push
or
inc
mov
mov
outsb
inc
pop
or
jl
mov
push
test
frstor
ficomps
and
and
adc
jno
pop
add
push
inc
lcall
xchg
jl
push
add
dec
mov
leave
cmc
mov
mov
ss
push
sahf
add
aam
fsub
je
pusha
jg
movsl
ja
pusha
push
mov
and
push
mov
add
mov
negb
outsb
daa
fisttps
sbbl
iret
xor
out
or
mov
mov
adc
popf
sti
mov
ror
push
aad
sbb
sub
notl
and
iret
cmp
mov
and
sbb
push
movsb
sub
xchg
lret
xorl
cmpsl
sbb
lods
add
aad
stos
and
cwtl
sub
ss
jecxz
stc
jno
dec
mov
and
push
mov
clc
or
adc
lea
ret
fs
pop
les
pop
inc
clc
mov
dec
cmpsb
faddp
lock
xchg
xor
outsl
xor
rcr
int
jno
mov
mov
jo
ffreep
in
sbb
ss
in
sbb
movsl
ret
cmp
test
imul
inc
mov
rclb
push
sub
mov
cld
mov
push
lcall
cli
cmp
test
xchg
jae
add
xor
xchg
cltd
sbb
inc
xchg
pop
mov
xor
inc
lret
jbe
scas
dec
sbbb
adc
jle
jae
loopne
orl
and
mov
inc
repz
mov
add
mov
push
lods
pushf
mov
ret
clc
add
add
sbb
xor
fiadds
int
and
cs
lret
lods
daa
div
dec
dec
xor
outsb
mov
aaa
xorl
aas
push
ljmp
imul
push
mov
popf
enter
mov
inc
push
sbb
push
push
sbb
hlt
sub
and
add
pop
shll
mov
mov
ret
popf
push
push
out
loop
pop
cmc
xchg
add
adc
rclb
rcll
lods
or
add
or
mov
les
mov
and
loope
xchg
push
inc
test
mov
fwait
push
sbb
adc
and
test
and
mov
mov
popa
add
addr16
cltd
les
and
mov
ja
xor
jo
mov
mov
lds
test
jb
loopne
xorb
xlat
cmpsl
hlt
or
ja
std
xor
xchg
ljmp
idivl
fiaddl
inc
inc
xchg
add
stos
mov
inc
cwtl
or
xchg
shlb
repnz
mov
mov
sub
ficoml
and
andl
or
icebp
fsubs
cmp
setl
xchg
dec
repz
cmp
decb
jge
aad
inc
mov
jge
fsubp
fidivs
mov
bound
cmp
std
mov
shl
xlat
and
mov
and
aas
push
outsb
lret
sbb
adc
icebp
insb
push
or
repz
xchg
rcl
pop
mov
stos
sub
das
add
push
aas
push
adc
ljmp
icebp
add
mov
int
sahf
pop
jl
pop
les
mov
ja
push
aaa
cmpsb
imul
clts
xchg
xchg
movsb
adc
pop
adc
xlat
cmpl
inc
out
jbe
call
pop
ret
out
mov
icebp
and
pusha
pop
ljmp
xchg
leave
and
push
stos
jb
xchg
ror
pop
and
imul
stc
and
mov
xchg
ss
mov
imul
pop
cs
jb
push
jmp
sub
inc
leave
adc
pushf
sub
mov
movsl
mov
add
arpl
mov
pmaxsw
xchg
ss
dec
mov
out
rcll
jp
mov
push
push
andb
mov
mov
inc
sti
pop
insl
jo
sub
iret
jbe
push
into
push
iret
lea
insb
xor
sub
push
es
xor
pop
scas
jle
xchg
cli
outsl
push
mov
sti
xchg
push
xchg
testb
cltd
stc
scas
rolb
out
scas
jne
stos
add
aam
xchg
addb
insl
outsl
cld
adc
and
popf
fidivl
jl
cmp
fsubs
jle
xor
sub
dec
or
mov
sti
clc
addb
test
pop
mov
sti
push
std
jmp
add
push
jo
dec
bound
add
sub
adc
pushf
mov
cwtl
shll
hlt
enter
enter
shl
jle
lds
push
push
cltd
loope
pop
cli
pop
inc
xchg
sub
xor
insb
pop
pop
xor
dec
adc
mov
push
dec
test
sahf
xor
shl
in
adc
jbe
push
push
inc
mov
pop
xchg
in
sub
mov
mov
dec
shlb
cltd
shrl
lds
dec
aaa
aam
scas
push
ljmp
mov
push
sahf
sbbl
aaa
sahf
xor
das
xor
out
jp
pop
fs
cmpsl
pusha
jecxz
sbb
int3
and
shll
popf
fldz
imul
inc
out
test
insl
pop
mov
lods
mov
add
inc
push
mov
repz
aam
sahf
test
adcl
test
or
inc
testl
push
jb
pop
inc
js
jge
pop
jbe
mov
ss
scas
mov
mov
xor
bound
xor
aam
pop
hlt
xchg
mov
lret
adc
sbb
dec
or
jp
int3
shrb
aas
hlt
xchg
call
test
imul
out
or
in
ret
mov
xchg
xor
push
jg
movsb
or
jmp
xchg
xorl
or
pop
loopne
cmp
cmp
jnp
pop
cwtl
add
xchg
pop
sbb
dec
mov
xchg
outsb
nop
daa
xchg
test
push
out
mov
inc
dec
ljmp
fsubr
les
or
inc
cmc
fisubrs
sbbb
jns
rolb
in
cmc
jo
xor
mov
xchg
sbb
or
inc
push
ja
int
loop
fisubrl
push
push
jmp
outsl
xor
stc
xchg
cltd
scas
fistpl
mov
mov
cwtl
sub
mov
sahf
scas
addr16
sarb
xor
iret
into
sub
jno
xor
inc
lock
arpl
popa
iret
and
sbb
repnz
imul
pop
cmpsl
cmpsb
mulb
cltd
pop
repnz
outsb
rcr
enter
or
aaa
inc
test
fsts
and
ret
or
xor
push
cmp
or
test
les
imul
fadds
mov
mov
push
insl
inc
sub
jmp
mov
orb
mov
lahf
aas
xchg
ret
loop
pop
xor
int3
lods
imul
sub
cmp
movsb
sarl
mov
aas
mov
sub
arpl
or
outsb
xchg
es
mov
pop
cwtl
repz
in
aad
sahf
mov
and
xchg
sbb
xor
testl
mov
popf
jecxz
or
cs
rep
cli
sub
mov
stc
push
sbb
cmpsb
lcall
popa
rolb
pop
stos
icebp
out
pop
push
cmpsl
xchg
push
dec
sub
push
inc
fwait
mov
jo
cli
lea
sbb
dec
lret
cmp
loopne
jp
daa
into
loop
ss
push
out
insb
cmc
sub
push
pop
jne
lods
push
mov
sbbl
mov
aaa
in
mov
jne
add
jp
mov
and
xor
xchg
lods
fs
test
pop
dec
clc
sub
jbe
xor
aaa
sbb
cmp
mov
subb
or
jge
rorl
stc
adc
jp,pn
xor
jg
out
out
dec
lock
test
mov
add
pmaxub
push
pop
inc
dec
jno
rcrb
push
push
shlb
or
ret
push
cmpsl
lcall
xchg
cmpsb
mov
mov
stos
adc
cmc
incl
adc
movsl
xor
and
iret
ds
in
iret
or
leave
xchg
pop
push
mov
sub
repnz
shrl
outsb
hlt
push
repnz
ret
ljmp
data16
adc
mov
dec
clc
imul
sub
mov
enter
mov
out
cmpsb
push
jle
add
sbb
mov
or
add
rcrl
ss
ret
or
fcmovnu
add
pusha
xor
cmpsb
cmp
dec
cmpsb
pop
dec
stc
gs
jmp
pop
pop
mulb
fidivrs
loop
xchg
enter
cmc
pop
push
insb
and
and
aaa
fisubrl
push
inc
adc
stos
mov
xchg
lcall
jmp
xor
sub
outsb
xorl
add
lcall
or
or
mov
adc
cld
out
out
push
mov
in
out
enter
pop
cmpsl
lds
push
lods
and
dec
mov
pop
mov
hlt
xor
loope
aam
adc
jmp
jl
imul
sbb
cld
pushl
imul
adc
cmp
and
fldt
iret
fnstenv
lret
outsl
sub
sbb
xchg
inc
push
push
jo
dec
jmp
pop
jno
and
pop
push
xor
ss
sbb
mov
mov
rcrb
jge
jb
movzbl
xchg
mul
mov
repz
into
out
add
inc
adc
or
shrb
pushf
sub
jp
cmp
sti
pop
push
inc
and
testb
cmp
inc
add
pusha
jae
cmpsl
pop
int3
jp
dec
outsb
mov
mov
test
xchg
mov
jne
mov
and
aad
dec
push
dec
mov
mov
sarb
insl
mov
adcb
inc
in
mov
adc
dec
sti
out
lret
andb
test
mov
sahf
jecxz
push
fwait
test
ja
popl
jno
in
lods
imul
test
rcr
jae
push
jne
mov
jnp
mov
jae
jmp
stc
jg
mul
pop
xchg
jb
inc
mov
xor
jbe
sbbl
icebp
sbb
cmpsb
mov
inc
icebp
inc
xchg
frstor
jae
pop
mov
mov
push
notb
lock
in
add
xor
in
scas
or
mov
test
inc
mov
inc
aaa
inc
imul
das
ficomps
or
or
fsubrp
pop
call
jge
push
inc
xor
js
lds
sbb
xor
sarb
clc
mov
imulb
adc
push
add
mov
fs
jbe
dec
jg
mov
mov
push
movsl
movsl
sbb
pop
jns
leave
push
sub
mov
sub
xlat
cmpsl
loop
pop
jns
or
mov
mov
adc
in
mov
push
inc
imul
cmp
sub
mov
xchg
stc
sbb
stos
arpl
mov
push
outsl
adc
inc
rol
mov
fisubrs
stc
xor
sub
and
test
arpl
dec
mov
jp
sub
sbb
and
or
mov
outsl
jns
xlat
rcll
cli
call
setp
ss
fistpl
jp
clc
pop
sbb
shrl
fxch
test
sub
idiv
adc
xor
xchg
pop
mov
fisubrs
adc
nop
xlat
rorb
lahf
data16
or
adc
fcmovnu
sahf
mov
jp
ret
andl
ljmp
rclb
adc
adc
adc
sub
and
repz
adc
fdivl
fs
out
enter
je
hlt
cwtl
fdivrl
and
mov
inc
stos
sub
push
jmp
outsl
loope
dec
out
or
repz
push
inc
push
stos
sbb
fwait
sahf
fs
daa
add
sbb
es
push
push
jbe
sbb
adc
sbb
mov
inc
jo
arpl
adc
das
mov
fnstsw
xor
push
xlat
addb
or
jmp
or
lret
outsl
and
les
pusha
adc
inc
push
cmc
pop
mov
cmpsb
mov
ret
int
mov
inc
sub
mov
lcall
divps
mov
sar
jno
leave
subl
js
movsl
scas
inc
xchg
mov
pop
sti
pop
stos
or
ret
and
aad
cwtl
popf
cmp
in
aam
add
insl
add
insl
cmp
int
and
outsl
pop
into
inc
dec
push
fdivrp
push
out
fistl
push
xor
push
iret
mov
jge
rcl
js
push
push
jge
fnstcw
and
out
lcall
jo
inc
cld
inc
fiaddl
loopne
or
dec
out
or
sbb
mull
mov
adcb
in
es
cmp
cmpl
adc
cmpl
push
xchg
arpl
les
idivl
lods
or
add
aam
pop
inc
lcall
lcall
xor
sbb
xchg
pop
or
je
repz
or
dec
fists
stos
push
sti
jg
push
adc
negb
xchg
movsb
mov
mov
arpl
bound
inc
mov
inc
out
push
loop
sbb
and
iret
mov
out
ja
mov
cltd
add
das
mov
push
aam
and
mov
int
mov
cmc
adcb
scas
dec
ss
jge
cmpsb
pop
and
mov
dec
mov
test
push
enter
mov
cmp
rorl
div
dec
push
cld
mov
jno
push
jp
out
inc
das
lea
inc
and
stos
pop
fcompl
iret
dec
fstpt
enter
push
sahf
jne
dec
je
jno
mov
frstor
sbb
fcmovne
adc
mov
dec
xchg
mov
aaa
lds
subb
lcall
sbb
insl
out
ret
in
jl
aad
xchg
pushf
jle
mov
addb
fildll
int
movsl
pop
scas
jg
ret
mov
xchg
aaa
aas
aaa
cmpsb
out
push
sti
inc
xchg
gs
cmpsl
or
or
fsubrs
std
jns
in
mov
add
jns
sbb
in
mov
mov
mov
push
outsb
sub
rcrl
sahf
jno
shlb
in
roll
cltd
sbb
pop
out
das
mov
stos
push
cmp
xchg
jmp
dec
cltd
jge
mov
sub
mov
xchg
ja
adc
jge
pop
out
cmpsb
inc
stos
cmpsb
mov
pop
inc
pop
pop
adc
lahf
add
sti
ds
sub
mov
jg
pop
add
adc
push
lock
stos
xchg
push
push
les
js
fbld
out
fbld
aaa
adc
out
xor
ret
jmp
or
lea
jge
xchg
push
mov
call
push
mov
jne
or
mov
add
aad
cs
jmp
pop
and
sbb
fwait
dec
mov
lds
jo
push
push
pop
push
icebp
inc
cmpsl
subps
lcall
cmp
cmp
push
jge
xchg
roll
loop
fsubrl
mov
pushw
subl
inc
add
cs
mov
js
sbb
pop
push
lds
sub
stc
dec
jmp
sub
mov
gs
mov
or
aas
sub
adc
push
out
test
nop
sub
pop
xchg
add
fisttps
cmp
push
xor
push
xchg
les
pop
rolb
and
sbb
adc
test
push
add
pop
aam
jmp
sbb
cmp
push
inc
loope
sub
push
cmp
cmpsl
jbe
or
jns
xor
push
sub
pushf
ja
test
sbbb
mov
ja
test
xor
in
sub
test
pop
je
fcmovbe
fwait
jnp
xchg
xlat
push
arpl
pop
fisttps
lret
xor
and
and
inc
int3
xchg
and
add
cmp
int3
arpl
jne
pop
push
ljmp
jnp
jns
add
dec
dec
xor
lods
out
inc
mov
jb
mov
add
jp
loopne
mov
cltd
fsts
dec
cmc
cmc
das
mov
das
dec
mov
mov
fdivs
xchg
lahf
orl
fs
pop
jp
fiaddl
pop
dec
jno
outsb
xchg
scas
scas
rcl
sbb
jp
dec
testl
leave
imul
jno
movsl
jne
sbb
sub
mov
aas
cmpsb
das
jge
leave
adc
aam
xchg
aam
pop
dec
insl
int3
or
xorb
inc
adc
hlt
fiadds
adc
movsl
loopne
loop
dec
ss
icebp
sub
jecxz
out
lea
shl
sub
cld
inc
sbb
imul
add
xchg
dec
xor
ss
lods
sub
jl
xchg
ret
addr16
push
xor
sahf
mov
popa
sti
mov
movsb
js
sbb
push
mov
pop
pusha
iret
in
out
movsl
xchg
dec
lcall
sub
in
add
or
dec
mov
sub
fnstsw
push
loope
loop
inc
add
lock
arpl
int
pop
adc
mov
stc
xchg
mov
jmp
mov
pop
mov
dec
lahf
inc
pop
add
xchg
fcompl
cltd
xchg
je
mov
sub
cmc
ja
cmp
sub
inc
lahf
loop
xlat
adc
pop
push
mov
adc
pop
push
lods
fists
movsb
inc
fimull
mov
jb
stos
aad
xchg
pop
add
sti
outsl
and
push
data16
xlat
xlat
sbb
jnp
aad
es
mov
in
daa
inc
mov
sub
cld
orl
xchg
shrb
cmpsb
mov
in
mov
imul
and
std
cwtl
dec
sti
inc
loope
loope
dec
adc
jge
push
scas
mov
in
jmp
xor
ss
arpl
gs
inc
pusha
and
movsl
mov
and
pusha
cmpsl
fbld
mov
cwtl
mov
js
dec
add
test
icebp
xor
ss
pop
imul
inc
hlt
incl
dec
mov
jge
jmp
pop
dec
push
pushf
pop
adc
mov
xchg
fs
rclb
cmpl
jno
mov
loopne
jbe
or
xor
jbe
pop
dec
in
cmpsl
jno
dec
out
stc
mov
popf
gs
test
mov
mov
jecxz
test
sbb
pop
mov
jle
or
icebp
aaa
aam
in
cmp
or
loope
lock
jns
sub
lods
sub
or
fs
mov
jecxz
in
daa
aaa
xchg
pop
jl
sub
sbb
pop
adcb
fidivl
mov
pop
inc
jne
dec
adc
addb
adc
fmull
cwtl
je
or
inc
pop
and
lret
jecxz
jns
xchg
push
cmpsb
rolb
xchg
out
xchg
leave
hlt
rolb
and
scas
mov
mov
or
in
jge
lods
int3
lcall
mov
std
xchg
xchg
jecxz
cmpsl
or
xchg
fcmovb
sbb
push
xchg
push
mov
cltd
inc
jo
inc
mov
push
aam
mov
gs
jae
popa
lock
xchg
pop
sbb
dec
lret
scas
mov
icebp
loope
lock
movsl
ds
dec
pop
push
xchg
mov
arpl
dec
shl
flds
add
mov
mov
push
jmp
cltd
xchg
push
push
and
stos
push
das
mov
cmpsb
movsb
jmp
cli
ret
and
repz
outsl
std
rolb
ja
adc
test
xor
lds
sar
mov
divl
dec
loope
mov
xor
xchg
mov
shlb
mov
or
idivl
pop
dec
mov
add
xor
cld
int3
pop
or
jbe
pop
xor
push
mov
xchg
scas
in
dec
mov
sahf
lret
mov
dec
cmpsl
addr16
and
sub
xor
bound
and
aam
aad
xchg
or
cmc
mov
add
ret
sbb
sub
rcll
ret
mov
inc
lahf
ja
mov
xlat
int
sub
movsl
mov
ficomps
frstor
cmp
sub
mov
jno
and
cmp
jp
das
xchg
pusha
add
in
pusha
mov
jge
cmp
push
addps
inc
mov
hlt
jno
sbb
mov
jge
fs
jae
adc
mov
sbb
or
mov
cmp
sub
sub
pop
les
shrl
lods
leave
mov
inc
jg
fdivrs
jmp
addr16
mov
mov
cwtl
dec
mov
mov
mov
xchg
daa
pop
xchg
push
div
push
das
inc
push
and
push
cmp
push
add
cmp
jnp
lock
sahf
outsl
lret
mov
mov
sbb
mov
in
imulb
dec
push
repz
repnz
xchg
loopne
mov
ljmp
and
push
sub
add
adc
sbb
pusha
das
jle
and
addr16
fisubrl
xchg
imul
mov
add
ljmp
movsb
mov
xor
mov
add
lods
xchg
filds
cltd
jle
cmpsl
inc
and
imul
mov
int3
push
je
sbb
add
mov
ret
pop
test
xchg
mov
inc
lret
cltd
addr16
in
testl
loop
ds
pop
mov
aam
add
mov
ret
shl
daa
rorl
lds
xlat
dec
mov
outsl
add
pushf
lret
shlb
adc
xlat
push
xchg
jbe
out
and
cmp
xchg
adc
das
lret
jb
xchg
mov
lahf
bound
inc
cmp
inc
in
inc
out
lock
push
rcll
push
outsl
es
jns
inc
fisubs
cmc
ljmp
pusha
rcrb
mov
adc
lods
insb
jns
stos
std
xchg
add
xlat
pop
mov
mov
enter
lods
mov
cld
jge
xor
mov
cmp
dec
js
dec
push
dec
ja
test
inc
outsb
pusha
fnstsw
cmp
push
iret
pop
mov
daa
cltd
push
stos
push
clc
inc
fmull
sub
cmp
lahf
movsb
and
jne
jecxz
jecxz
mov
outsb
add
pop
js
enter
jno
xchg
and
movsb
jp
insl
pop
pop
in
popa
xchg
dec
adc
cld
push
out
call
pop
sub
daa
loopne
pusha
inc
and
and
rorb
icebp
mov
mov
cmpsb
inc
mov
shlb
mov
lock
fistl
fdivrl
and
ret
loope
dec
mov
xchg
lds
sub
push
out
push
inc
sub
dec
cs
lods
dec
pop
xor
mov
fadds
fldenv
subb
adc
pop
wrmsr
lock
adc
lds
nop
xchg
aas
pop
outsb
jbe
jo
adc
das
jle
push
adc
inc
mov
jmp
push
add
out
mov
mov
out
pusha
repz
pushf
fucompp
std
add
inc
add
xchg
movsl
sti
mov
mov
ret
outsl
mov
jbe
push
cltd
ds
mov
inc
cmp
fwait
or
dec
std
test
mov
lret
mov
mov
ja
cli
pop
pop
jg
cmpsl
jo
push
out
xchg
push
inc
push
pop
fmull
ja
bound
fmul
pop
aas
sarb
jb
push
jae
outsl
fimull
test
ja
repnz
mov
fidivl
push
imul
pop
aaa
daa
or
mov
loopne
cwtl
add
dec
cmc
xor
lods
xor
scas
push
icebp
js
gs
ljmp
add
mov
enter
push
xor
adcl
push
cmp
add
outsl
mov
mov
insb
fwait
lcall
adc
sbb
mov
pop
jg
push
call
cmpxchg
cmpsb
sahf
jno
adc
xor
xchg
mov
jl
mov
flds
std
jl
js
push
jmp
xlat
cmp
xor
xlat
adc
iret
mov
inc
subb
xor
js
inc
cld
mov
std
add
or
inc
lahf
cmp
bnd
inc
mov
stc
gs
es
dec
call
cs
iret
insl
loope
push
std
jge
in
and
mov
cmp
mov
mov
push
push
jo
stc
xchg
add
js
or
lret
mov
test
sahf
jl
out
loopne
mov
jp
lods
iret
dec
insb
sub
or
pop
or
dec
ss
movl
out
xor
movsl
cmp
fisttps
or
les
push
jo
lret
icebp
andb
in
cltd
add
inc
inc
arpl
cmp
dec
lcall
mov
gs
icebp
jo
inc
cs
adc
xor
in
mov
sbb
mov
ret
jge
sub
mov
xor
data16
xchg
or
jle
std
cmp
adc
dec
xchg
xor
mov
pop
xchg
js
pusha
daa
icebp
jl
cmp
push
lea
sub
bound
mov
cmp
sbb
jnp
push
in
xchg
in
xlat
xchg
mov
roll
sti
xor
outsb
outsl
roll
fsubs
inc
cwtl
nop
in
testb
mov
adc
sbbb
mov
pop
out
ljmp
mov
addb
stc
xor
pop
pop
je
jmp
popa
pop
xchg
stc
jle
mov
lcall
les
dec
fs
and
mov
movl
mov
mov
xor
add
nop
cmp
sbb
adc
aas
fwait
and
xchg
cmpsb
das
cwtl
test
incl
add
jnp
stos
es
cmpsb
xchg
adc
out
xchg
aaa
lea
inc
loop
shlb
mov
notb
leave
xor
sahf
push
pop
aam
rcrb
xor
mov
cmp
iret
dec
popa
out
daa
push
push
dec
enter
cmp
fbld
push
pop
jl
sub
pop
mov
hlt
inc
lods
in
jp
adc
pushf
mov
cmp
mov
aaa
adc
ds
ret
inc
mov
lcall
testl
cmp
cmpsb
lea
pop
in
pop
int
fucomip
push
lods
lds
stos
outsl
insl
jnp
dec
mov
aam
std
mov
mov
lods
xor
into
jp
add
fdivs
imul
out
js
mov
cmpsb
push
mov
xor
xor
mov
jno
sbb
out
ret
xchg
and
loopne
adc
mov
xchg
sti
pop
mov
dec
xlat
cmp
or
push
flds
push
mov
lret
jo
pop
int3
les
xchg
lds
xchg
lcall
xlat
test
pop
stos
sbb
jle
add
push
mov
sarl
pop
cmp
cmpl
sbbl
xchg
insl
xchg
jbe
mov
xor
pop
or
sbb
mov
xor
sub
sub
pusha
sti
push
outsl
cs
mov
int
lea
xchg
push
inc
ficomps
sbb
ret
out
mov
pusha
cwtl
stc
mov
pop
int3
xchg
sbb
into
ss
aas
jbe
mov
mov
jnp
or
enter
fnstenv
ret
push
ljmp
daa
mov
cmc
in
xor
mov
jg
or
aad
inc
jae
pushf
pop
dec
xor
mov
mov
jae
mov
mov
push
ds
add
cmp
mov
pop
addr16
mov
mov
test
lcall
fisubrs
xor
or
and
stc
push
lods
adc
loopne
pusha
mov
das
sbb
out
push
addb
ja
adc
cmpsb
test
jnp
test
lods
push
push
mov
dec
das
pop
mov
sub
jno
dec
hlt
inc
jb
mov
cmpsl
and
mov
imul
flds
jae
shll
mov
incb
lret
dec
inc
cs
sbb
int
cmp
add
fidivl
and
stos
rorl
fxch
outsb
mov
pop
cmp
iret
cmp
int3
aam
jge
jmp
push
jnp
cli
push
fbstp
mov
aad
pusha
jg
testl
lret
xadd
popa
jmp
shl
xor
popa
cmc
test
into
jg
mov
lret
inc
int
fmuls
loop
jecxz
and
sarl
test
ljmp
data16
pop
je
xor
loopne
mov
std
fs
mov
js
ds
sbb
jp
iret
ss
mov
sarl
lret
lret
jnp
xor
or
inc
inc
cmp
push
lods
add
jnp
sbb
test
adc
jae
mov
mov
testb
cmp
xor
push
adc
mov
lods
and
ljmp
add
out
push
pop
lods
int
xor
leave
jl
movsb
mov
ss
cmp
jns
gs
loop
lea
mov
mov
stos
enter
push
xchg
xlat
pusha
jge
pop
dec
push
adc
lcall
repnz
cmp
cmc
jbe
and
sahf
add
pop
data16
test
repz
jbe
sub
fldenv
dec
jle
xchg
xor
arpl
dec
jle
jno
ret
divl
or
lea
icebp
adc
and
cmp
aaa
gs
movsl
rorb
sub
mov
clc
mov
sbb
xchg
into
jmp
test
cs
imul
xor
insl
xor
xlat
insl
add
mov
fidivrl
cld
and
push
or
sbb
mov
and
push
add
inc
rcll
mov
bound
loopne
divl
xor
inc
cli
cli
mov
add
sti
orl
and
xchg
outsb
stos
pusha
and
imul
out
aad
add
mov
dec
sbbb
pop
sbb
or
mov
divl
pop
inc
insl
insl
lea
dec
out
insb
shll
iret
mov
cld
mov
xor
lds
fistl
jl
push
js
push
lds
mov
jb
cs
jo
ret
push
rcr
cmpsl
inc
or
jp
rolb
mov
inc
sub
filds
mov
xchg
orb
jg
movsb
lcall
ret
pop
jp
mov
pop
jnp
je
leave
add
fucom
loope
sbb
in
sahf
int3
mov
cmpsl
adc
xchg
mov
jge
add
mov
lret
gs
mov
lret
imul
add
jle
test
pop
cmp
cmpsl
xlat
mov
ret
and
jo
insl
rcl
jns
mov
sbb
aas
xchg
cmp
sarw
mov
clc
mov
arpl
push
fsubrl
xor
xchg
push
fadds
fisubl
and
dec
mov
mov
mov
adc
sti
lods
push
add
in
mov
jp
test
jbe
mov
mov
outsl
repz
out
mov
out
jle
mov
mov
cmc
ja
push
push
rolb
sub
call
popl
loop
xor
rorl
ja
add
add
cli
pop
pop
cmc
dec
jae
cmp
rcl
xor
inc
sub
push
int
and
jno
fldcw
inc
xor
scas
push
push
iret
jae
in
jp
int
rol
dec
gs
or
pop
lret
dec
cmp
loope
push
and
popa
data16
push
out
or
adcb
inc
pop
cs
pop
cmp
or
dec
jae
rcll
movsl
cs
pop
sbb
decb
test
mov
push
mov
icebp
sbb
pop
inc
xorl
dec
insb
popa
mov
xor
mov
into
hlt
cmpsl
int
mov
mov
subb
in
mov
mov
lea
std
in
add
movsl
faddl
subb
fisubrs
ds
xchg
orl
xor
clc
mov
mov
out
icebp
les
idivl
fistl
fstpt
in
mov
jge
fucom
pushf
jnp,pn
sarl
xchg
arpl
xchg
pop
fadds
call
mov
test
jno
jl
mov
outsb
sub
pop
movsl
pop
in
jle
add
dec
nop
xchg
or
in
sub
pushl
in
xchg
in
xchg
xchg
or
lcall
ds
addr16
ficomps
ja
lods
test
imul
outsl
jmp
mov
pop
mov
repz
add
dec
ficomps
mull
push
cwtl
es
pop
data16
xchg
cwtl
jge
jb
js
mov
xchg
imul
or
cld
pusha
pusha
cld
shll
cli
adc
movsb
iret
enter
xor
outsb
mov
fnstsw
dec
pop
les
mov
jno
jmp
js
int
bound
mov
int3
loop
and
inc
movsb
push
clc
aam
pop
dec
adc
fldenv
mov
pop
mov
push
insl
cwtl
fmuls
jnp
out
push
sbb
push
sub
imul
fwait
push
or
ficompl
sub
shlb
fcmovbe
add
lock
pop
call
cmpsb
jle
in
jb
and
inc
xor
icebp
jle
and
pop
sbb
pop
ss
fiadds
or
dec
xchg
mov
or
lds
add
xchg
sub
fildl
inc
push
mov
jg
aaa
loop
mov
sub
pusha
sub
jne
in
in
ljmp
and
addr16
pop
out
pop
mov
xchg
cwtl
inc
popa
jnp
test
add
movsl
mov
jno
imul
in
in
daa
mov
stc
inc
jp
xchg
test
push
pusha
xor
jp
push
cmp
stos
rorl
xchg
int3
jp
fcmovbe
and
cmc
or
rcrb
hlt
jl,pn
push
jne
cmp
xor
lds
sub
jmp
loop
xchg
mov
and
repnz
add
outsb
cmp
push
jo
inc
jg
cmp
cmpsl
add
adc
lret
xchg
cli
pop
jge
sub
ret
or
mov
push
dec
jne
adcl
and
nop
push
insb
rolb
sahf
xchg
push
imul
sub
inc
inc
xchg
sbb
pop
jmp
hlt
mov
sub
xor
pop
mov
imul
push
out
lret
cmc
jne
xchg
mov
sub
jb
cltd
add
push
sub
dec
fwait
push
adc
outsl
lret
pop
lods
lea
inc
lods
mov
fwait
push
cld
add
test
lahf
popa
xor
push
sbb
sahf
adcb
pop
push
jo
jecxz
lods
and
dec
mov
lahf
pop
ret
loope
xchg
mov
lcall
imul
pop
hlt
sahf
std
imul
ret
lods
pop
adc
repz
mov
jnp
sti
and
jmp
sbbl
clc
xchg
cmp
ficoms
mov
sub
mov
popl
fnsave
jbe
out
out
int3
jnp
in
xor
scas
shlb
insl
subb
push
and
mov
jno
enter
out
jl
xor
std
xor
lods
xchg
jl
insb
sub
cmp
pop
rorb
lret
and
stc
insl
fsubs
pop
adc
stos
fildll
xlat
pop
fistpll
hlt
mov
pushf
xor
jl
lea
imul
call
pop
mov
arpl
imul
xor
rolb
daa
push
out
call
pusha
popa
dec
inc
movsb
mulb
and
push
jo
in
push
sub
sub
adc
mov
scas
sbb
js
mov
idiv
aaa
pop
fwait
aaa
adcb
and
dec
sub
and
in
add
adc
imul
xor
pop
xchg
stos
jp
jp
xlat
scas
repz
sbbl
rcrl
adc
dec
pop
push
xor
je
mov
dec
sbb
outsb
cltd
daa
outsl
jle
pop
mov
scas
les
aaa
mov
test
jmp
xor
aad
pop
pop
jae
pop
fistpll
jge
jp
shl
iret
repnz
cmpsb
mov
stos
push
sbb
pop
xor
pop
inc
push
inc
pop
rcrb
or
sbb
lcall
fimull
push
push
icebp
sbbb
mov
movsl
stos
iret
addr16
xchg
inc
out
aad
lret
cs
hlt
dec
lahf
hlt
dec
loope
or
ret
out
test
ret
jp
cli
shrl
lea
mov
out
ja
mov
inc
push
ja
pop
js
ss
push
int
sarl
jo
mov
shlb
mov
inc
cmp
jmp
bound
sbb
mov
icebp
imul
ss
test
nop
ja
in
jmp
lahf
enter
sbb
dec
xor
pop
mov
sub
mov
mov
sahf
aam
and
jno
cmp
loop
ret
addr16
jg
cld
add
loop
mov
sub
cmp
adc
mov
sbb
lods
lock
cmpsb
xchg
icebp
ret
sub
lea
sbb
or
jp
int3
jmp
lock
loopne
dec
dec
leave
add
mov
dec
lods
rorb
dec
mov
movsl
push
add
arpl
inc
dec
loope
push
int3
dec
daa
ret
xor
pop
lcall
jl
movsl
lahf
xor
out
lahf
cmpl
es
aas
test
repz
in
int
mov
xchg
ret
lret
imull
lcall
fadd
lods
sbb
xchg
ss
adc
out
xor
cs
popa
xchg
and
or
mov
pop
enter
outsl
dec
sbb
nop
push
jae
shll
stc
cmpsl
in
les
fldt
xor
mov
bound
int3
jo
popf
mov
mov
mov
cmp
pop
jbe
inc
leave
push
inc
hlt
jae
pushf
cmp
dec
nop
lds
ss
xchg
dec
sahf
jp
adc
and
pop
stos
cmpsl
int
movsb
in
cmp
push
pop
cmp
lods
lods
stos
or
jo
jge
push
insb
cmp
push
iret
adc
push
mov
or
mov
mov
insl
sbb
shlb
shr
jae
jbe
sbb
sahf
pushf
inc
jbe,pn
xchg
xlat
push
cltd
or
cmp
mov
movsb
cwtl
lcall
mov
cmp
fwait
movsl
xor
mov
xor
sub
jmp
aam
or
xor
cmp
lahf
call
inc
sub
das
sub
pusha
cwtl
loope
xchg
or
aad
lret
rclb
adc
push
xchg
jecxz
push
add
mov
adc
aad
sub
aaa
fnsave
pop
push
lods
std
stc
mov
cmpl
cmp
lcall
loop
iret
addb
mov
sahf
rorl
jne,pn
je
arpl
inc
fbld
es
xor
xchg
jb
js
xchg
add
test
das
push
hlt
sahf
in
je
sub
int3
jns
adc
mov
fsubs
out
cmp
cmp
mov
dec
add
std
pop
lret
fwait
popa
xor
pop
pop
add
clc
cltd
bound
dec
mov
cmp
into
aaa
pop
leave
testl
imul
and
faddl
movsb
filds
jno
mov
inc
in
inc
xor
cmpb
mov
jo
fcmove
mov
scas
imul
jl
in
pop
ja,pt
lea
jo
dec
xchg
mov
rcrb
mov
and
ljmp
push
pop
inc
mov
xor
aaa
and
out
dec
mov
or
mov
decb
xchg
imul
adc
xor
sar
out
iretw
das
iret
leave
idiv
in
push
jo
nop
ss
cmc
dec
bound
fisubrl
mov
out
pop
ret
ja
push
or
jae
jo
shr
adc
movsl
push
mov
adc
pop
imul
icebp
and
sahf
outsb
mov
pop
mov
aad
dec
sti
pop
dec
push
out
ljmp
inc
adc
lods
mov
ljmp
push
add
mov
lcall
xor
adc
ss
xchg
clc
outsl
decl
repnz
bound
les
push
mov
adc
mov
cmp
jmp
adc
hlt
ss
ret
outsb
mov
xchg
inc
add
xchg
test
lds
mov
jecxz
pop
xor
loopne
xor
imul
mov
sub
jne
pop
aaa
lods
fbstp
adc
mov
dec
jbe
insb
adc
jnp
call
inc
cmpsb
jo
leave
xlat
mov
jne
add
out
cwtl
mov
xchg
popf
test
inc
out
xor
fbstp
inc
rorb
xor
lahf
stos
cmp
cmp
xchg
jmp
lds
repnz
rclb
sub
adc
and
ss
adc
mov
dec
jb
or
ficoml
jbe
xchg
shrl
or
push
movsb
lea
add
or
aad
and
pop
xor
push
hlt
mov
dec
fnsave
rcrb
fld
xlat
test
inc
aam
mov
mov
jmp
lock
and
xchg
scas
mov
push
jmp
aad
inc
sub
and
inc
fistpl
leave
cmp
int
cmpsl
repnz
clc
movsb
add
outsb
inc
push
pop
xchg
into
push
ljmp
cmp
mov
cmp
test
mov
dec
xchg
jae
mov
sbb
jp
pop
or
inc
call
mov
sbb
mov
insb
loopne,pn
movsb
jecxz
int
scas
je
shlb
jg
inc
ror
adc
sub
add
cmp
je
adc
iret
lods
sub
arpl
pop
mov
cli
push
scas
xor
xor
and
cmp
popa
or
sbb
nop
cld
fcmovnb
jg
dec
mov
loopne
popf
ds
cltd
push
fcompl
mov
dec
jns
inc
lret
aam
out
pop
jmp
sbb
cmc
idivb
cmc
inc
inc
es
data16
adc
shrb
outsl
cmp
fs
sahf
and
in
pop
cwtl
mov
stos
enter
adcb
and
nop
xor
addr16
leave
or
imul
or
sub
ljmp
sub
push
xorb
add
std
push
jnp
push
or
imul
aam
and
std
xchg
cmp
jecxz
jnp
xorb
dec
fs
ja
adc
cmp
xor
pop
push
push
inc
xlat
sub
je
fisubs
mov
jecxz
push
push
insb
sbb
mov
add
bound
cmp
sti
push
shll
sahf
out
or
testl
jb
xchg
xchg
inc
pop
insl
rcrb
mov
shlb
ljmp
in
leave
jno
dec
push
xchg
inc
and
xor
in
mov
loop
lock
xor
mov
and
out
jecxz
rcl
cmp
adc
imul
leave
shlb
xor
test
imul
mov
iret
xor
stc
popf
xchg
adc
imul
mov
pop
dec
jle
jp
push
mov
jbe
pop
xor
lcall
inc
jbe
lret
mov
ds
xchg
fwait
mov
mov
bound
add
sbb
mov
dec
fidivrs
call
xor
inc
sub
test
ljmp
fldcw
push
shrb
daa
inc
jne
sbb
mov
addr16
pop
sbb
lret
add
ret
movsb
aaa
cmpsl
sub
fwait
or
mov
adc
xchg
xchg
imul
add
cmp
mov
cmp
mov
je
cmp
cmp
fsubl
cli
clc
lock
out
mov
dec
fwait
inc
adc
sti
pop
leave
add
int
jmp
sbb
jp
push
mov
fnop
push
dec
and
mov
mov
sub
dec
lea
jmp
pop
ret
in
xchg
cmc
test
ds
addr16
mull
or
fldenv
dec
adc
or
mov
mov
jnp
dec
ret
and
icebp
xchg
cmpsb
pop
cli
imul
dec
cmp
lds
and
pop
xchg
fwait
das
cmp
lret
shrl
stos
nop
mov
fsubs
js
pushf
xchg
xchg
mov
lods
aad
mov
inc
jmp
or
jb
test
flds
and
test
lea
cmp
pop
sub
hlt
jbe
cltd
js
loopne
dec
add
push
sahf
sbb
test
test
adc
sbb
mov
inc
sbb
mov
adc
ficompl
dec
scas
test
fidivrs
lods
adc
pop
or
stc
adc
inc
jmp
repnz
push
sbb
cmp
mov
shrb
push
sbb
sub
sbb
stc
dec
push
jecxz
push
scas
rcl
jge
xchg
fidivl
loope
pop
push
jne
sbb
cltd
fs
sub
out
pop
std
out
call
popa
popf
bound
jns
sub
shl
imul
jmp
in
xchg
lea
push
sti
aam
or
fmulp
dec
inc
in
dec
addr16
or
push
xor
fs
and
roll
inc
mov
sub
cli
inc
std
push
mov
cmpsb
jmp
stos
arpl
inc
xor
pop
xchg
mov
movsl
mov
insb
mov
ss
jns
stos
dec
in
or
or
push
sub
sbb
adc
mov
push
xchg
jl
leave
pop
sar
mov
test
lods
addr16
fwait
pop
dec
and
shll
sbb
sbb
mov
roll
push
or
mov
and
inc
out
inc
ja
out
pop
cmp
push
imul
sub
xor
mov
jp
cltd
mov
jno
add
push
ja
es
in
pop
pop
pop
shrl
push
xor
in
mov
loop
cmp
subl
mov
cmpsb
push
js
mov
les
insl
sub
repnz
test
cwtl
push
cld
push
push
sahf
add
aaa
jns
inc
gs
out
push
cwtl
cmp
gs
xchg
fcom
xor
gs
clc
int3
aam
jb
adcl
testb
fstl
mov
or
mov
sarb
inc
cmp
jae
lea
push
mov
cli
adc
iret
sub
sahf
or
ljmp
imul
sbb
xchg
lods
mov
or
pushf
adc
clc
jo
test
or
add
dec
mov
repnz
shrb
pop
push
test
das
dec
test
xorl
mov
lcall
orl
cmc
test
inc
sbb
adc
lea
aaa
jnp
pop
mov
xor
pop
xor
mov
loopne
iret
aas
sub
and
icebp
sbb
push
xor
xlat
mov
adc
dec
jae
pop
cmp
mov
sbb
popf
and
push
decl
pop
jg
orl
test
xchg
popa
fwait
push
pop
fmuls
scas
stos
lods
ljmp
dec
sbb
add
addr16
or
mov
mov
sbb
xchg
mov
lret
adc
push
sbb
mov
fsubrl
in
push
mov
add
push
loope
in
jns
mov
leave
mov
in
cwtl
rcrl
push
inc
in
and
add
mov
fisubrs
xorl
les
jnp
fwait
lds
pop
fcoml
aaa
out
and
outsb
cmpsb
jp
push
je
sbb
int3
cmpl
sub
push
push
stos
inc
sub
add
fistpll
add
or
les
ret
int
pop
mov
add
sbb
out
adc
mov
xchg
out
cmp
dec
and
andl
pop
cmp
pop
mov
and
stos
xchg
ljmp
dec
add
xchg
dec
faddl
insb
fstp
pop
pop
xor
jl
jmp
out
adc
cmp
xor
sbb
rcrl
out
sub
rep
and
aas
jns
test
mov
mov
test
sahf
outsb
xchg
movsl
cmp
push
stc
sbb
outsl
popf
fnstcw
test
scas
out
fldenv
lock
mov
aad
cmp
push
fwait
jmp
and
enter
lods
cmp
loopne
ficomps
les
xor
mov
add
js
fcompl
cmc
je
jp
dec
ljmp
mov
push
push
divb
out
in
nop
dec
xor
sbb
jnp
aad
in
lock
jne
addr16
pop
jo
sub
out
adc
dec
test
rcll
pop
out
jo
inc
lret
cmp
xchg
out
insl
push
js
test
in
xchg
fcompl
test
int
sub
out
xchg
scas
in
inc
mov
sub
in
dec
movsl
cmp
sbb
sahf
xorl
or
shll
test
pushf
push
mov
xor
cmpsl
push
and
adc
push
mov
sbb
scas
or
xchg
ss
cwtl
fdivrl
mov
xchg
lcall
dec
out
xchg
mov
ds
rcl
out
sub
cli
clc
mov
stos
dec
pop
cmp
pop
rcrb
into
cmpsl
cmp
orl
shll
insb
dec
cmpsb
pop
push
xchg
jne
add
mov
xor
gs
mov
sbb
stos
leave
cmp
fwait
das
add
or
lcall
enter
push
mov
jecxz
push
leave
das
pushf
ss
push
jmp
jg
xchg
mov
lds
or
push
jecxz
xchg
jne
fadd
mov
xor
xchg
cwtl
test
mov
rorb
fldcw
xchg
lods
stos
jmp
inc
cmc
adc
xchg
filds
mov
pop
in
leave
xchg
jge
push
inc
sbb
sub
pusha
or
jecxz
and
jl
mov
add
out
mov
mov
sub
stos
xchg
das
hlt
sub
pusha
out
out
push
mov
loopne
dec
lea
lret
jle
leave
xor
xchg
adc
and
int3
dec
ds
addb
xchg
adc
clc
sub
fdivr
pop
out
out
mov
cwtl
lea
cmc
push
jl
xorl
and
dec
jmp
out
lock
push
jnp
sete
shrl
mov
push
mov
xchg
test
dec
add
sub
addr16
outsl
xor
adc
cli
cwtl
aam
subl
js
mov
mov
pop
push
mull
sub
out
sbb
sub
mov
movsl
mov
sbb
push
data16
lret
jmp
xchg
mov
mov
jle
stos
movsb
xor
stos
push
out
fimull
into
add
jg
scas
cmp
mov
sbb
or
mov
adc
sub
jb
das
or
push
icebp
cmpsl
push
sbb
cmp
stos
mov
les
jge
stos
mov
mov
cmp
adc
adc
fwait
mov
stc
xor
ja
sbb
mov
lds
xchg
sbb
push
mov
xchg
in
cmpsb
out
or
sub
fdivr
jae
dec
sarb
xor
push
jnp
jl
fsubrl
xor
pushf
ss
cmp
sbb
and
mov
push
jbe
scas
jbe
ljmp
adc
xor
mov
and
mov
cmpsb
adc
lods
mov
mov
shll
lret
psrlw
cmp
xchg
into
dec
fstl
jae
pop
xor
or
mov
jb
mov
or
cmp
mov
inc
add
mov
pop
cmp
pushf
sbb
sub
and
repnz
rolb
xchg
ja
xchg
shr
adcb
push
jo
and
pop
or
xor
test
mov
pop
scas
lahf
push
pushf
sarb
and
icebp
outsb
scas
sbbb
pop
jae
ror
fwait
or
in
loope
pop
clc
shll
xor
aam
mov
jmp
in
adc
ljmp
add
pop
jns
js
push
sbb
loope
repnz
cmp
lea
jle
push
xor
adc
mov
dec
xor
insb
scas
das
lea
lods
adc
iret
lods
xor
mov
fisttps
push
mov
add
xchg
std
sahf
mov
cmp
out
pop
stc
sbbl
inc
mov
ficompl
mov
scas
push
mov
push
mov
out
out
add
cmp
inc
pop
adc
popf
ja
and
loop
cmc
movsl
xchg
xchg
sub
mov
mov
xchg
add
jmp
pop
stc
lcall
pusha
jo
nop
imul
mov
or
sub
sbb
or
sub
movsl
out
ss
cli
out
lret
xchg
ja
sub
scas
jecxz
ret
aad
aas
rorb
sub
mov
xchg
leave
mov
mov
sub
ds
rclb
insb
push
icebp
push
cmc
jge
loop
stos
pop
sahf
push
add
cmp
addr16
pop
inc
jne
add
sub
cmp
ret
cmp
in
xchg
les
push
outsl
sbb
bound
and
push
xchg
mov
data16
pop
mov
aad
and
out
mov
mov
and
cmp
ror
cld
pop
nop
pop
sub
aad
adc
sub
dec
cmc
add
shll
inc
sub
pop
stos
dec
aaa
andb
outsb
inc
mov
call
dec
inc
xchg
adc
repz
jecxz
movsb
mov
daa
jbe
inc
xor
popf
lods
bound
ret
fs
loop
sbb
stos
sbb
cld
shll
push
repz
and
push
lea
jae
popa
shlb
mov
xor
cmc
pop
and
mov
pop
sub
or
orl
aaa
sbb
xor
mov
pop
pop
xor
mov
pop
mov
jmp
mov
hlt
or
pop
adc
mov
adc
mov
add
lods
or
in
inc
std
outsb
sub
mov
bound
lcall
add
lahf
jns
xchg
gs
sub
sub
jo
xchg
adc
cmc
cmc
and
imul
out
sub
lods
loope
push
and
jb
sbb
jnp
cmp
js
jmp
cltd
cmp
mov
aaa
ds
shlb
cmpsb
lds
lahf
pushl
lcall
dec
ja
mov
mov
sub
fildl
nop
xor
jl
push
dec
xor
pop
jno
jne
add
enter
push
clc
outsl
pop
mov
push
repnz
or
test
sub
cwtl
sbb
and
mov
lcall
and
in
mov
in
xor
jne
ret
push
fs
je
pop
das
cli
push
movsb
pop
daa
cli
sub
mov
xchg
mov
jmp
cmpsl
lret
pop
mov
test
sbb
mov
sub
cmp
jnp
pop
lret
data16
adc
mov
sar
add
enter
or
dec
push
rorl
sbb
push
fyl2x
push
aam
dec
mov
mov
movsl
test
xchg
cltd
jb
xchg
cmp
test
mov
sbb
mov
imul
inc
fdiv
jmp
movsl
test
movsl
and
sahf
and
jno
loope
pop
add
icebp
sahf
dec
xchg
fxch
fdivp
push
cli
leave
sub
das
ss
aad
dec
fucom
sahf
ja
insb
popf
clc
mov
push
pop
mov
and
sti
push
and
das
outsl
ret
dec
loop
loopne
cmp
jmp
push
and
cmpsb
arpl
jno
sub
and
sbb
shll
rcll
leave
not
dec
lret
and
adc
inc
sub
mov
pop
leave
or
rcll
out
je
hlt
pushf
int3
dec
and
cmp
mov
xorl
jns
out
mov
aas
repz
lock
pop
fsubl
add
loope
mov
pop
or
jmp
loopne
out
push
adc
mov
fwait
and
pushf
push
sub
stc
xor
filds
test
push
and
lds
push
addr16
pop
jo
arpl
out
pop
mov
mov
cmp
je
loop
or
jge
dec
pop
daa
mov
cwtl
jnp
push
pop
lods
aam
sbbb
or
ljmp
lret
push
mov
test
pop
xchg
data16
inc
fildl
aam
pop
sbb
pushf
xchg
dec
loop
fcoml
xchg
xor
ss
pop
out
pop
add
xchg
call
adc
xor
das
fs
xor
iret
mov
sub
push
add
inc
outsl
or
bound
aad
adc
or
or
inc
out
cltd
sub
xlat
push
das
mov
sub
mov
shll
adc
loope
xchg
jne
mov
nop
jmp
mov
fcmovnu
insb
aam
data16
cmp
test
mov
lea
xor
xor
push
xor
testb
xchg
nop
or
xchg
out
sub
int
xor
jno
mov
adcl
iret
int
cmp
mov
insl
lods
xchg
xchg
iret
ret
push
rcll
out
jbe
enter
arpl
sub
daa
cmp
push
push
iret
push
jmp
arpl
sub
out
leave
sub
lahf
fdivrs
mov
gs
std
in
xchg
mov
jg
mov
movsl
in
push
lods
adc
ret
mov
sbb
pop
jnp
mulb
loope
mull
hlt
lret
mov
pop
loopne
add
pop
cmpb
fwait
or
mov
ret
clc
aaa
sub
lcall
inc
ret
sbb
lods
mov
mov
addl
jae
rclb
mov
sbb
pop
out
ret
add
rcrb
inc
push
push
mov
add
test
gs
fildll
xchg
adc
cmp
cmpsb
mov
sti
outsl
cwtl
add
xchg
or
jecxz
push
pop
data16
xor
xchg
stos
sbb
clc
add
stos
sbb
pushf
dec
dec
cwtl
mov
xacquire
push
addb
in
inc
push
mov
stos
int
pop
dec
pavgb
lods
xchg
fdivrl
sbb
into
aam
fisttpl
jge
xchg
xchg
out
outsb
and
leave
xchg
daa
xchg
test
data16
and
les
jnp
insl
sub
gs
adcb
orb
leave
push
je
mov
and
arpl
mov
jno
jmp
dec
and
push
mov
add
dec
fstpt
dec
add
xchg
and
sbb
sub
cmp
out
roll
mov
xchg
pop
adc
jb
mov
push
xchg
pop
in
xor
xlat
fucomip
clc
and
fld
pop
mov
daa
jl
xlat
cwtl
test
dec
pop
and
jno
add
lock
aam
dec
shrl
ret
jecxz
int
lods
imul
cld
dec
es
orb
mov
xlat
fsubrp
test
scas
lods
adc
fimuls
out
cmp
fisubrl
jae
and
xor
cmc
and
xchg
add
mov
jns
clc
push
loope
adc
and
cli
mov
test
mov
not
scas
outsb
je
clc
push
gs
repz
xchg
add
outsb
repnz
movsb
or
sbb
out
mov
mov
sti
stc
mov
mov
fidivs
mov
adc
add
cmpsl
lret
imul
jnp
dec
daa
daa
iret
push
test
test
or
sahf
mov
push
mov
push
dec
mov
mov
cmc
pop
ss
ret
andb
outsb
loope
lcall
std
int3
test
add
mov
dec
cmp
jne
sbb
pop
lods
pop
ret
or
xchg
ss
jb
scas
adc
jns
aad
negb
push
jb
sub
stos
mov
inc
add
jge
dec
pop
add
shll
insb
push
loopnew
lock
gs
lret
ret
mov
bound
scas
jmp
fwait
rorb
xor
jmp
lds
push
popa
push
xchg
cltd
adc
dec
mov
cmp
inc
inc
imul
mov
inc
mov
xchg
fs
sub
adc
adc
add
inc
jbe
inc
pop
adc
sti
add
xchg
xchg
dec
dec
not
sub
mov
movb
pop
stc
popf
test
jno
mov
sbb
dec
adc
cltd
and
cmp
xchg
cltd
xchg
pop
rorb
or
ret
popf
dec
sub
jae
mov
in
negb
dec
addr16
fsubrs
mov
out
shll
mov
cmp
icebp
inc
ds
xchg
lahf
or
adc
jp
sbb
jge
cmp
jae
add
mov
out
add
leave
scas
imul
dec
cmp
mov
xchg
add
rorb
xchg
xor
mov
mov
or
loopne
push
adc
cmp
stc
repz
je
cli
xor
xchg
cmpsb
jg
and
test
lret
cmc
push
test
jp
fbstp
das
fisubs
push
shlb
push
pop
fs
movsl
or
pop
cmc
and
cmpsb
in
popa
xchg
imulb
xchg
call
dec
sbb
ds
sar
out
or
jnp
xor
mov
js
mov
test
lret
cwtl
fsubs
adc
je
dec
dec
or
push
addr16
sub
sub
testb
daa
xchg
cmp
ret
dec
dec
pop
cmp
adc
shll
mov
push
insl
test
mov
sbb
mov
and
and
fchs
pop
fdivrp
cmpsb
add
sbb
insb
fcoml
sarb
test
fstpt
out
push
lahf
push
adc
mov
decl
xchg
in
add
xorb
pop
cmp
ret
in
dec
popa
pop
decb
cmpsb
pop
pop
lods
shrl
cmpsl
enter
mov
mov
test
int3
sbb
mov
cmp
cmpsb
cmc
add
cli
xor
cmpsb
xor
add
ret
xchg
cli
dec
xchg
aaa
mov
add
cwtl
and
jg
hlt
inc
pop
push
xor
popf
cmp
adc
mov
hlt
mov
enter
mov
in
push
xor
add
mov
gs
inc
aaa
pop
pop
adc
js
xchg
jmp
and
iret
into
xor
mov
push
mov
dec
xchg
mull
ss
inc
mov
std
mov
mov
jg
or
ret
dec
mov
in
inc
mov
adc
lods
sbb
loope
stos
mov
xor
iret
lcall
dec
or
fdivrp
push
jae
mov
loope
xlat
iret
bound
enter
mov
cs
leave
fsubs
std
sub
int
pop
mov
or
shrl
dec
test
inc
mov
pushf
cmp
shr
add
adc
mov
inc
adc
fists
orb
aas
jb
mov
mov
lahf
and
daa
out
fst
jecxz
stos
inc
and
repnz
cwtl
nop
cmp
lods
pop
mov
movsl
clc
mov
jmp
inc
out
ret
pop
xor
imul
sbb
sbb
ljmp
lods
loope
loop
inc
add
push
loopne
lods
dec
cmc
out
mov
or
or
add
dec
cmpb
add
loop
inc
adc
or
shl
jecxz
or
xlat
adc
sub
mov
mov
addl
popa
dec
xor
mov
add
lds
lcall
in
leave
cmp
int
push
sub
cmpb
rorl
mov
adc
xchg
inc
mov
sbb
mov
xor
sbb
sbb
notb
cmp
cmp
mov
and
outsb
sub
lea
adcl
jbe
out
mov
ret
xlat
stos
inc
xchg
fists
jb
cmp
pop
pop
jg
int3
lcall
pop
xchg
popa
xor
pop
xchg
movsl
mov
jne
ljmp
push
orb
mov
push
loop
js
cld
mov
sbb
cltd
js
pop
test
xchg
mov
cli
and
ds
out
lds
sarb
xor
out
pop
xor
mov
flds
sahf
push
cld
pop
or
in
hlt
cmp
and
jg
and
adc
push
mov
cmpsl
jecxz
lods
or
cmpsb
repz
out
adc
adc
shll
mov
lcall
or
dec
fcmovb
xor
je
xor
mov
cmc
pop
push
in
lret
mov
mov
xlat
and
adc
cltd
inc
test
cmc
lods
mov
mov
push
into
fnstenv
sahf
not
dec
test
sub
test
adc
adc
pop
subb
pop
mov
in
fildll
scas
adc
cmp
and
jnp
xor
jne
rcrl
das
push
adc
sti
push
ficompl
add
lcall
sub
inc
aas
les
dec
mov
mov
push
std
push
nop
movsb
push
stos
push
xchg
fwait
jne
out
imul
inc
mov
mov
ljmp
dec
cli
adc
sub
push
and
mov
add
mov
fldz
add
cltd
add
aaa
sbb
and
jno
test
movsl
push
push
dec
jnp
adc
test
pop
lods
mov
cld
sbb
inc
lret
xor
adc
cmpsl
xor
mov
pop
add
push
mov
mov
push
jne
jg
cwtl
jb
xor
mov
hlt
push
fisttpll
cmpsb
xor
xchg
jbe
push
test
jnp
pusha
jnp
push
inc
insl
icebp
das
xchg
cmp
cs
lcall
sub
stos
enter
test
mov
push
adc
jne
ficoml
clc
repz
divb
pop
jae
out
jnp
out
and
movsl
ret
xchg
lcall
add
ret
dec
inc
mov
ljmp
aaa
xor
test
outsl
cmp
hlt
push
insb
std
leave
stos
cltd
mov
adc
pop
loopne
or
mov
and
stos
iret
pop
push
inc
push
pop
sbb
lods
loopne
imul
cmp
mov
sub
rorb
mov
out
push
subb
jecxz
cmc
repnz
call
cmp
inc
pop
sti
imul
imul
inc
mov
aam
mov
inc
std
sarb
jne
pushf
mov
push
dec
add
xchg
jge
xchg
cmpsb
insl
fbld
jle
sbb
out
inc
lock
sub
cmp
inc
nop
ret
cmpsl
jecxz
test
push
ret
or
push
mov
dec
xchg
mov
call
les
xchg
es
jne
movsb
aad
mov
jg
addr16
cmp
movsl
sbb
dec
idivl
jo
cmpl
mov
popa
pop
xchg
std
insl
imul
xor
cwtl
pusha
stos
mov
inc
inc
pop
push
pop
mov
add
sub
cwtl
xchg
or
dec
pop
inc
dec
and
push
sub
mov
mov
ljmp
aaa
pop
movsl
sbb
lcall
leave
pop
mov
sub
cmp
or
cmp
fsubrl
ds
jg
int
pop
cwtl
pop
scas
sbb
inc
cli
add
mov
mov
xor
test
xchg
and
cmp
xchg
push
jmp
sbb
dec
jns
iret
repnz
and
xor
push
lods
mov
jns
fldt
ret
push
lret
scas
xchg
mov
out
stos
mov
pop
into
adc
sbb
gs
mov
adc
mov
fsubr
xor
jae
and
js
hlt
ljmp
enter
or
mov
test
adc
jbe
fsubr
js
and
xchg
jg
mov
movsl
popl
js
int
stc
xor
sbb
pop
ss
mov
pop
sub
cld
int
add
outsl
pushf
addr16
out
dec
aam
sbb
push
and
clc
mov
cmp
loope
and
jbe
or
out
loope
push
lea
mov
mov
sbb
data16
cmp
adc
loop
fdivrl
bound
loope
repz
push
call
rcll
ljmp
js
sbb
test
cmp
notl
and
xor
lret
ljmp
outsb
push
jns
xor
imul
sub
xchg
push
lcall
pusha
pop
push
jbe
push
jl
iret
pushf
mov
dec
add
sub
pop
jo
inc
data16
mov
insl
clc
stc
pop
lods
cmc
lds
xchg
pop
faddl
pop
data16
xchg
and
push
lea
das
ss
add
loopne
call
fdivp
int3
jnp
rcrl
orl
dec
jecxz
ljmp
xchg
add
sbb
ljmp
scas
mov
mov
cmp
mov
pop
adc
lock
jmp
shl
lcall
jb
mov
adc
ss
jnp
jmp
loop
xor
enter
shrl
sub
in
mov
scas
sahf
iret
or
inc
cmp
and
data16
inc
add
stos
stc
push
jb
fmulp
push
add
mov
incl
stos
mov
jbe
cld
and
sbb
cmpsl
mov
int
and
jns
xor
add
testb
cltd
loope
push
xchg
scas
push
or
or
mov
clc
imul
inc
shl
nop
cmp
movsl
sub
or
leave
mov
xor
adc
xchg
aad
icebp
lahf
xor
loope
and
jns
andb
stc
pop
dec
int
jo
or
not
sub
mov
push
out
inc
movsb
cmp
xlat
mov
mov
mov
add
push
div
repnz
adc
sbb
dec
outsb
cmpsl
cmpsb
mov
ljmp
jbe
add
int3
movsb
scas
inc
ror
xor
shlb
scas
ljmp
jl
adc
cmp
outsb
xchg
pop
call
sub
loopne
xchg
xor
mov
popf
out
test
xor
out
add
mov
xchg
mov
mov
cmp
mov
aad
pop
pop
ljmp
sbb
cld
test
shl
cld
into
cli
cmp
bound
nop
sub
cwtl
pop
leave
sbb
or
dec
and
jno
pop
stc
dec
repz
cmpsb
mov
add
pop
inc
mov
push
cli
xchg
and
mov
push
lcall
les
ds
add
pop
ret
inc
decb
out
pushf
xchg
xor
lret
fldt
xor
popa
sbb
sbb
cli
xor
in
test
xchg
hlt
push
insb
cltd
push
mov
subl
xchg
mov
subb
mov
or
fstpl
aaa
sub
in
pop
pop
xlat
sub
arpl
mov
sub
or
dec
mov
scas
mov
xchg
xor
hlt
js
in
out
sbb
cld
test
jecxz
jmp
fwait
xlat
xchg
and
shll
jne
push
or
jg
dec
mov
mov
cmp
in
repnz
mov
xlat
lock
xchg
mov
cmp
cmp
cmp
sub
and
add
and
sbb
enter
xor
adcl
cmpsb
mov
dec
clc
cmc
xlat
outsl
mov
xor
ret
push
sbb
movb
pop
dec
cs
or
das
jmp
in
push
lret
add
mov
loopne
jno
and
jb
insb
lods
jle
es
sub
cmp
sbb
adc
xor
roll
ss
adc
ja
int3
lcall
fisubrl
mov
adc
lods
filds
inc
xor
mov
je
mov
jge
push
and
icebp
pop
sub
dec
aad
add
add
push
xor
sub
cwtl
mov
stos
mov
and
mov
out
shrb
fisubrl
and
push
or
scas
xor
in
frstor
shll
fdiv
lods
ret
data16
mov
mov
jle
dec
out
dec
sub
je
and
adc
push
fstps
and
add
sbb
xchg
pmaxsw
div
cltd
xor
add
sub
adc
icebp
xchg
lcall
push
inc
adc
sub
xchg
jnp
divl
hlt
push
pop
sahf
cwtl
test
daa
cmc
fnstsw
sbb
int3
inc
add
xchg
in
je
out
pop
scas
ss
pop
inc
fdivl
pop
xlat
pop
les
bound
push
cli
mov
mov
in
push
test
cltd
pop
adc
xor
scas
lcall
fcomp
push
faddl
inc
mov
scas
rcll
xchg
or
lahf
mov
jmp
orb
in
testl
lods
push
push
cs
loopne
sbb
jns
gs
imul
xchg
dec
lock
inc
lock
rcrl
or
icebp
xchg
clc
sub
int
aam
scas
xchg
stos
dec
icebp
cmc
cmc
inc
enter
pop
xchg
in
mov
test
inc
sub
add
or
add
jae,pt
pop
sub
inc
dec
xor
sbb
pop
std
scas
clc
ljmp
jo
insb
or
jmp
icebp
mov
fsub
xor
int
lods
mov
lea
pop
xchg
popf
push
push
stos
iret
aaa
lods
mov
sahf
jns
push
sub
adc
leave
mov
mov
sbb
inc
and
add
lahf
pop
in
xor
ret
mov
out
mov
stos
aam
ret
sub
cwtl
jmp
aas
dec
mov
and
lock
dec
adc
andb
mov
mov
pop
test
movsb
pushf
imul
sbb
not
push
sarl
mov
mov
lock
lea
add
or
inc
sbb
pop
leave
jecxz
mov
ret
push
ja
shlb
cmp
in
mov
lds
inc
ret
addr16
orb
jo
pop
fstps
test
imull
inc
popa
xor
sbb
sbb
jg
test
mov
jl
or
test
incl
xchg
xchg
xchg
fsubrl
loope,pt
popa
outsl
xchg
sbb
xorl
and
and
mov
pusha
push
push
iret
stos
adc
sbb
fidivs
mov
testb
jmp
lahf
inc
repnz
arpl
daa
xchg
ljmp
xor
xor
std
loop
inc
lcall
sti
test
ret
adcb
leave
insl
pushf
jbe
cmp
es
fsubl
mov
mov
jne
sbb
lret
icebp
mov
cmc
mov
and
js
pop
shlb
cmpsb
ljmp
neg
stos
int
inc
cmp
icebp
fwait
cmp
sarb
mov
push
or
lret
cmp
adc
testl
xchg
je
or
mov
cmp
bound
loope
int3
ljmp
lock
iret
lcall
jo
add
inc
stos
pusha
mov
fdivrl
sbb
cmp
inc
insb
xor
mov
jl
adc
pop
icebp
int
pop
push
sub
ret
or
lods
test
adc
or
das
je
jge
lcall
scas
dec
sbb
cmpsb
int3
in
and
xlat
daa
xor
xchg
loopne
adc
lcall
sub
push
insl
mov
lods
test
arpl
sub
aad
xchg
data16
cmc
rclb
shrl
jne
xchg
adc
je
lcall
rcll
inc
sub
and
stos
decb
daa
int3
rorb
aam
mov
outsb
leave
add
les
in
cmpsb
xchg
xchg
mov
push
insb
mov
stos
push
aad
sub
mov
jae
adc
inc
sbb
clc
xchg
and
sub
shrl
jmp
dec
adc
sub
insb
mov
cltd
push
test
cld
xchg
cmc
aas
in
mov
push
mov
insb
andb
pop
or
enter
aas
scas
fstl
imul
xchg
cmp
dec
xchg
cld
mov
fiadds
lods
inc
andl
pop
js
pop
jmp
bndstx
sub
inc
adc
movsb
inc
cmpsb
pop
sub
outsb
mov
mov
call
push
pop
mov
rol
hlt
jnp
sbb
mov
sbb
pop
popf
testl
sub
cltd
pop
cmp
xchg
mov
fsubl
cmpsl
mov
js
mov
mov
test
popa
loop
stos
push
psubq
jb
mov
mov
sbb
fsubrs
mov
cli
jno
or
popf
cmpsb
aaa
cwtl
and
inc
pop
xchg
jno,pn
add
mov
jecxz
in
rcr
sahf
mov
addr16
cmp
push
sbb
dec
arpl
out
pop
leave
rcrl
sar
int
shll
jecxz
jae
push
outsl
xor
xchg
push
cltd
ret
adc
mov
fcom
lock
icebp
dec
jb
pop
les
cltd
or
xor
push
aaa
pop
std
jb
jno
mov
insb
int3
decb
mov
stc
inc
xor
cmp
lcall
push
pop
mov
and
aaa
jg
popa
jbe
cld
cmpxchg
rcl
push
lret
and
idivl
sub
loop
jmp
insb
xor
mov
cmp
aas
cmp
dec
fnstcw
mov
enter
or
call
sbb
jg
jle
es
xchg
orb
pop
sub
add
inc
js
fstpl
loopne
xchg
sbb
mov
cmp
mov
mov
sbb
adc
adc
add
fstpt
add
cmp
out
xchg
movsb
leave
sbb
iret
lea
push
xchg
push
out
movsl
cmovs
inc
outsb
lcall
fistps
and
adc
mov
int3
push
sbb
jns
pop
mov
icebp
jecxz
adc
push
mov
lcall
sub
xchg
les
dec
stos
inc
lcall
pop
inc
xchg
test
in
arpl
xchg
out
push
mov
mov
xlat
das
hlt
fdivrs
xlat
sbb
push
xor
lret
loope
xlat
xchg
push
popf
push
or
lcall
inc
sbbl
daa
insb
xlat
lret
das
insb
xchg
aaa
xchg
and
pushf
daa
pop
mov
add
mov
dec
notl
add
rorl
aad
bound
push
mov
sub
sub
sbb
mov
stos
pop
jnp
and
lock
mov
jecxz
ss
mov
in
loopne
repnz
int
xchg
arpl
pop
jle
push
jae
xchg
movsb
mov
shr
mov
mov
addb
mov
adcb
inc
cmp
jno
mov
movsl
fisttpll
mov
xchg
test
add
mov
mov
rcr
lahf
rcr
or
pop
std
shll
push
cmc
push
ret
pop
inc
inc
inc
fadds
pop
push
pushf
push
adc
push
mov
fwait
jns
cmp
pop
dec
sbb
sub
cmp
adc
mov
sti
iret
lock
mov
push
dec
inc
ret
mov
mov
cld
daa
lcall
jo
fwait
xchg
pop
dec
loopne
mov
nop
mov
cmpsb
jne
push
in
dec
pop
fnstcw
mov
xor
jmp
fcmovnbe
mov
js
or
add
icebp
xchg
inc
insl
mov
cltd
push
push
or
pop
insb
in
data16
mov
movsb
adc
push
movsb
add
mov
aaa
jmp
arpl
test
cmp
xchg
movsb
adc
push
add
into
xchg
mov
cmp
mov
lret
fwait
mov
ret
and
je
mov
test
inc
push
popw
repz
cmp
xchg
jl
lods
dec
jge
into
pop
push
and
rcrb
mov
sub
lea
cli
ljmp
movsl
or
imul
xlat
cs
push
inc
add
icebp
xlat
rorb
xor
push
mov
out
push
sub
daa
pop
push
jne
xor
xchg
xlat
insb
dec
dec
jmp
fstpl
mov
sub
dec
rorl
and
lods
jmp
inc
push
sub
mov
fmul
pop
scas
inc
popf
adc
std
iret
mov
popf
add
jmp
and
hlt
sub
fisttpll
mov
mov
insb
mov
xor
scas
add
notb
mov
test
fldt
xor
je
in
repnz
dec
jle
adc
sub
loope
sbb
popa
or
mov
cmp
movsl
int
test
out
fbstp
cmpsl
jae
das
lcall
add
roll
or
and
mov
or
push
ror
xchg
push
mov
popf
cmp
xchg
cmpsl
mov
mov
jg
inc
adc
pop
mov
pop
mov
fistl
mov
lea
outsb
mov
ljmp
xchg
ss
cwtl
sbb
dec
out
rolb
daa
and
out
aas
call
fildll
shll
cmp
and
bound
mov
mov
add
aaa
push
push
xor
cwtl
ss
or
fldcw
xor
movsb
sbb
mov
jp
cwtl
shrl
xchg
js
pop
inc
stos
jae
rcr
pop
fadd
pop
xlat
test
mov
icebp
jb
push
loopne
jae
mov
andb
fisttps
fistpl
test
inc
xor
add
push
jae
outsl
dec
and
jl
shlb
jecxz
mov
cmp
aas
popa
push
pop
or
xchg
lods
ss
xor
clc
int
sub
adc
imul
cmp
dec
cmp
aad
jle
fisubrs
lods
cwtl
ficoms
dec
leave
push
ljmp
push
ljmp
add
push
mov
mov
push
lods
cli
out
aam
jg
push
pop
adc
aad
shlb
aas
int3
daa
push
cmp
arpl
push
pop
xchg
push
aam
test
adc
lods
xchg
adc
ret
add
nop
inc
stc
and
jmp
xchg
mov
mov
pop
mov
mov
sahf
xchg
jbe
push
dec
mov
cmp
ds
or
lret
xor
sti
aad
int3
xchg
and
dec
sub
pop
ds
nop
and
lret
jge
gs
fadd
cmc
xchg
push
mov
ss
loopne
out
cltd
inc
mov
xor
add
mov
aaa
in
lods
sahf
cmp
mov
dec
nop
stc
add
cmpsb
push
dec
sbb
ds
xchg
add
lret
xchg
stos
jg
push
add
inc
sahf
mov
adc
pop
cld
mov
sub
xchg
xor
rolb
xchg
fidivrl
addr16
push
in
pop
loop
into
jmp
outsb
frstor
testl
stos
push
push
popf
mov
jge
xchg
add
je
pop
mov
gs
sar
cmp
fsubrl
test
add
rcl
jl
or
sub
xor
xchg
repnz
push
ja
shrb
sahf
jns
mov
add
adc
adc
test
sbb
cmp
push
fsubl
cwtl
int
inc
add
cmp
and
ss
rclb
lret
lret
dec
mov
movsl
int3
push
cltd
outsl
imul
sbb
data16
xchg
adc
rcrl
pop
ljmp
mov
ss
jecxz
mov
insl
mov
mov
jmp
jbe
cmp
int3
sbb
std
loopne
rolb
stos
fdivs
adc
es
loop
mov
cmp
inc
adc
mov
outsb
daa
jecxz
cli
mov
inc
jae
movsl
inc
fcoml
pop
sbb
shll
jge
mov
pushf
xchg
lds
inc
add
movsb
jg
mov
push
in
int3
not
dec
pushf
adc
adc
cld
lods
push
xchg
notb
icebp
loope
lahf
subl
push
mov
inc
cmpsl
rol
fbstp
xchg
push
ss
daa
sbb
loopne
dec
sbb
sbb
clc
lock
mov
dec
adc
ds
add
aas
adc
enter
insb
jae
xor
jmp
sbb
sub
popf
push
pop
outsb
push
and
test
adc
inc
push
test
shrl
test
add
sarb
mov
xchg
push
mov
jno
ret
int
insb
popa
sub
call
mov
roll
dec
faddl
negl
test
pop
test
hlt
dec
add
pop
dec
pop
rclb
dec
addr16
sub
gs
pop
out
xchg
mov
mov
pop
dec
dec
and
inc
sbb
push
inc
out
xor
or
sti
inc
pop
shll
imul
pop
outsb
fidivrs
ds
cmc
in
cmp
mov
sahf
and
inc
addr16
add
ljmp
int3
data16
add
popf
jecxz
jecxz
mov
cmpsl
jmp
bound
sbb
stc
xchg
mov
xchg
dec
test
xlat
lahf
jl
test
cli
pop
jg
dec
jecxz
hlt
aaa
mov
mov
sbb
into
push
daa
mov
xchg
xor
fadds
notl
test
cmp
pushf
dec
call
mov
sahf
jg
out
push
js
popa
mov
jbe
jbe
mov
sub
and
mov
enter
std
nop
pop
in
repnz
dec
dec
cmc
dec
and
jle
sub
push
sub
lret
xchg
ret
fidivs
in
add
cld
jmp
sub
out
arpl
cmpsb
cmp
jecxz
out
stos
js
adc
addr16
call
xor
xchg
pop
roll
aad
call
les
leave
dec
pop
lods
sub
xor
popf
punpckhbw
out
lahf
hlt
push
leave
jo
enter
adc
xchg
xor
dec
mov
scas
insl
aam
cld
dec
arpl
pop
mov
sub
dec
add
xor
mov
pop
out
hlt
outsb
xchg
jl
je
mov
sbb
mov
jne
and
xor
pop
inc
leave
std
cltd
je
pop
or
insb
mov
pop
mov
lods
insl
push
push
inc
cltd
imul
test
imul
pop
movsb
sub
sbbb
std
insb
xor
xor
lock
xor
jnp
cltd
add
mov
daa
mov
or
repz
jmp
aas
cmp
hlt
or
arpl
cmp
sbb
add
or
cmp
into
xor
xor
jg
adc
sbb
push
push
xlat
aaa
not
out
scas
ret
mov
cmc
mov
outsl
push
push
sub
adc
les
aas
lret
mov
cld
es
mov
loope
mov
add
sbb
sub
daa
testl
or
sbb
fcomps
cmp
mov
in
aam
push
cmp
ffree
xor
rcrl
mov
or
sbb
or
ret
mov
mov
scas
repz
mov
ss
int
gs
cltd
daa
ret
pop
scas
pushf
jbe
loope
and
cld
inc
sbb
in
daa
push
fs
jge
jne
mov
outsl
xchg
pop
test
insb
xchg
gs
aad
and
gs
sahf
and
out
xor
imul
cmpsb
fucomi
cmp
push
shll
int
xchg
mov
pop
mov
push
jl
and
loop
xchg
or
outsb
nop
dec
test
lahf
dec
xchg
fwait
shrb
rcl
mov
sti
ret
adc
dec
or
lcall
adc
sahf
add
insl
jg
sub
sub
push
cmc
sbbl
mov
pop
jmp
mov
je
pop
rcl
int
or
pop
push
fwait
add
pop
in
or
jns
jecxz
pop
cmpsl
xchg
mov
mov
sub
loope
das
mov
xchg
jo
cltd
mov
or
sahf
imul
mov
imul
lcall
pop
out
push
sub
or
push
nop
addr16
mov
adc
and
cmc
int3
cltd
sbb
inc
das
or
sub
cmp
ret
lods
adc
andb
test
cmp
xchg
jne
es
mov
ret
mov
sub
xor
mov
js
gs
sbb
cli
addr16
mov
outsl
push
in
xor
loope
or
mov
mov
pop
repz
mov
pop
mov
dec
aam
xchg
push
leave
dec
std
or
pop
movsl
mov
cmp
xchg
pop
mov
sbb
jo
pop
andb
insl
call
xor
pop
sub
xchg
xchg
dec
jmp
cmp
lret
sub
pop
test
push
mov
cmp
xor
pop
inc
add
adc
push
fisttpll
cli
cmpsl
cmc
imul
lods
fistpll
lahf
imul
xchg
cwtl
mov
scas
dec
lea
jo
mov
or
jnp
sub
pop
lds
loop
mov
mov
leave
cmp
mov
scas
dec
inc
or
mov
push
xor
jecxz
insb
out
ret
out
inc
adc
or
pop
jg
add
push
xor
leave
xchg
shl
pushf
data16
icebp
and
sub
mov
aam
or
scas
gs
test
data16
pop
sarb
addr16
out
dec
clc
fsub
clc
or
mov
inc
and
fcompl
arpl
ficoml
pop
pop
addr16
cmp
cmp
add
add
inc
xor
mov
enter
cmp
add
push
inc
push
mov
stos
cld
jl
push
loop
inc
fcoml
mov
movsl
pop
sbb
stos
into
dec
in
jne
ss
rcll
test
loope
xchg
popf
nop
pause
loope
mov
movsl
in
xlat
mov
cmc
mov
fcoms
shl
shr
dec
mov
js
sbb
xchg
aaa
inc
mov
pusha
inc
mov
shr
push
outsl
lcall
push
cmpl
frstor
stos
pop
jne
and
les
push
dec
rcll
cmp
xchg
sahf
mov
add
call
xchg
movsl
mov
pop
sbb
jmp
in
arpl
arpl
fs
mov
pop
cmpsb
dec
and
inc
ja
jno
pop
sbb
adc
jno
sub
movntq
clc
push
rol
xchg
mov
aaa
push
xchg
add
cmp
push
test
data16
xchg
ret
mov
adc
adc
ret
inc
mov
or
movsl
xchg
adc
test
inc
dec
push
mov
dec
lahf
loope
in
sbb
lret
inc
inc
shrl
inc
adc
into
cmp
jns
mov
ffree
dec
shl
std
push
dec
enter
cmp
jl
ror
sub
jno
jle
inc
xchg
loop
xlat
jmp
xor
getsec
or
clc
aaa
mov
xor
push
cwtl
mov
repnz
push
pop
pop
dec
xchg
out
scas
mov
bswap
cmp
cmp
in
mov
lock
lods
mov
out
test
mov
and
xchg
jp
loopne
lods
push
inc
xchg
ja
insl
std
or
inc
or
mov
add
sarl
addr16
xlat
data16
jp
or
idivb
jo
inc
pop
mov
mov
sub
jecxz
movb
popa
pop
sti
and
mov
movsb
pop
or
mov
dec
and
lods
push
rcr
imul
int3
stos
jmp
add
push
dec
icebp
mov
movsl
outsl
jo
repnz
scas
mov
sub
add
sarb
cmp
dec
sbb
loop
dec
mov
std
mov
push
dec
mov
lock
add
pop
jnp
dec
into
mov
xor
lret
test
cmp
pop
ja
scas
cmc
js
xchg
mov
dec
dec
push
cs
lcall
inc
sbb
scas
mov
fists
xchg
mov
xor
negb
sub
enter
cmpsl
mov
test
call
adc
aam
sti
or
and
leave
into
mov
test
in
neg
push
pop
das
inc
push
mov
out
mov
aad
aam
scas
dec
imul
sub
frstor
andb
push
cmp
popa
je
cmp
in
mov
inc
mov
fnstcw
jle
pop
js
cmpsl
or
das
test
data16
cltd
xlat
pop
idiv
xor
or
sbb
movsl
dec
pusha
in
jae
int3
jl
and
test
xor
push
shrb
push
mov
or
dec
rcrl
and
nop
aam
imul
jo
cmpb
adc
xor
ds
imul
mov
xor
frstor
dec
xchg
mov
mov
out
out
inc
mov
mov
sbb
lahf
stos
xor
mov
add
adc
fmull
lea
lods
add
or
sahf
scas
push
cwtl
outsl
mov
fisttps
pop
ljmp
cmpb
cs
test
fdivrl
loop
jmp
loope
xchg
jl
cmp
lcall
mov
sbb
outsl
xchg
push
jne
bound
adc
jle
xchg
and
sub
sub
push
insb
aad
pop
rcl
js
clc
call
mov
movsb
icebp
cmp
cmc
arpl
cmpl
adc
or
sbb
stos
bound
test
jae
add
mov
xchg
mov
inc
mov
xor
ficoml
or
jge
mov
dec
pusha
inc
stos
sarb
jo
cli
out
clc
int
fucomip
sbb
jecxz
pushf
xchg
dec
cmp
mov
pop
rorl
or
rcrl
xor
lret
dec
scas
mov
mov
mov
sub
call
ss
pop
fs
mov
push
pop
loope
lret
xor
sti
jns
mov
inc
fwait
cmp
mov
movsb
and
pop
jae
insb
add
xor
jge
cmp
stc
fs
or
xchg
xchg
movsl
lret
mov
ljmp
mov
mov
push
jns
shl
icebp
mov
hlt
push
sahf
inc
push
popf
cs
adc
push
cs
mov
decl
mov
sub
pop
les
lret
rolb
xchg
int
mov
xchg
lahf
lahf
xchg
xchg
jbe
mov
xlat
jae
push
neg
mov
aaa
cmp
lret
sahf
inc
mov
add
cwtl
in
hlt
test
inc
xor
mov
pop
or
cmp
test
mov
sub
xchg
fdivr
mov
ljmp
pop
fwait
aad
aad
dec
rcrl
xchg
push
xchg
loopne
push
cmp
cmpsl
lret
xor
pop
or
out
repz
xorb
testl
cmp
lret
aam
subb
ss
pop
push
loop
add
and
lahf
ficoms
aad
outsl
inc
pushf
xor
push
mov
add
push
mov
iret
icebp
es
dec
cmp
cmpsl
push
add
xor
mov
or
pop
rcll
outsl
insl
lcall
movsb
pop
popa
fdivrs
dec
or
add
adc
add
xor
xchg
es
adc
mov
test
mov
push
mov
adc
mov
and
test
movsl
push
mov
dec
jbe
xchg
push
jno
clc
pop
call
mov
mov
lcall
inc
pusha
jns
fidivl
iret
dec
cs
out
fldt
or
dec
stos
mov
mov
aad
jb
data16
adc
icebp
xor
sub
push
insb
push
fidivl
or
dec
jl
call
xor
ljmp
xor
add
je
pop
in
cmp
rolb
clc
orl
lahf
dec
imul
lock
sti
movsb
adc
mov
pop
mov
out
aaa
jne
adc
xchg
incb
jp
mov
adc
testb
call
mov
mov
push
jmp
lods
pop
sub
pop
mov
jmp
sub
push
and
jle
cmpl
mov
repz
pop
pop
cmp
test
xchg
out
mov
sub
pop
mov
pusha
popf
jp
mov
pop
sub
int
inc
jae
pop
mov
and
outsb
add
and
cmp
cs
stos
pop
jno
es
inc
sti
cs
jecxz
jmp
mov
popa
in
insb
push
jns
dec
jge
movsb
mov
movsl
out
push
movsb
addr16
lcall
adc
fiadds
xchg
pop
inc
add
lret
lock
sbb
in
mov
adc
pop
cwtl
fadds
mov
inc
xor
in
xchg
rorl
pop
imul
jmp
push
jp
sub
xchg
push
cmp
icebp
mov
xchg
pop
inc
xchg
lods
adc
popf
jge
orl
insl
push
arpl
mov
in
fdivr
adc
aas
subl
sbb
lods
add
or
pusha
mov
xor
dec
sub
push
mov
cmp
xor
dec
data16
repz
mov
iret
sub
mov
shl
push
in
and
gs
movsl
imul
shll
xlat
aaa
popa
int
mov
daa
jmp
or
test
jno
mov
cmp
out
mov
jmp
je
iret
out
das
std
iret
dec
jmp
movsl
mov
lahf
mov
and
cmp
sub
fisttpll
loop
jns
xchg
jbe
lea
push
dec
fldpi
inc
adc
int
outsl
xchg
negl
add
cltd
mov
pop
imul
adc
data16
mov
lea
adcl
movsl
push
jg
test
or
mov
scas
imul
outsl
cmp
push
aaa
insl
cmp
cmp
mov
pop
and
ret
push
cmp
movsl
jnp
fidivrl
lahf
and
and
inc
cwtl
jecxz
in
ds
ret
mov
pop
mov
sub
adc
fucom
jmp
repnz
sbb
dec
xlat
mov
cmp
cmp
jno
or
mov
xorl
mov
lret
aaa
xor
inc
fwait
inc
decl
outsl
mov
test
mov
mov
arpl
mov
jnp
mov
out
movsl
xor
inc
inc
fnstcw
push
shrl
jne
push
cmp
popf
in
jb
outsl
sbbb
and
mov
mov
dec
adc
sbb
jne
inc
les
out
ds
adc
popa
push
and
clc
scas
push
dec
loopne
sub
fsts
arpl
sahf
imul
sub
ficoml
push
mov
negb
inc
inc
enter
mov
xchg
aam
outsl
inc
clc
inc
js
cwtl
dec
pop
adc
mov
or
dec
xor
adc
cmp
dec
enter
pop
jmp
fwait
ja
mov
sbb
cmp
inc
jl
test
or
pop
adc
data16
pop
decb
push
ret
in
add
dec
cmp
jae
iret
sbb
ds
shrl
mov
mov
mov
call
lds
mov
and
mov
xchg
mov
mov
or
sahf
andb
push
je
mov
xchg
or
lahf
push
cmpsl
lea
push
dec
mov
jecxz
stos
in
addr16
xchg
xor
dec
cmp
movsl
cld
je
add
push
jno
mov
lret
out
call
fstpl
pop
mov
or
mov
xchg
stc
jle
mov
push
dec
xlat
push
mov
test
in
jne
mov
mov
cmc
sbb
setne
push
in
call
xchg
notb
in
outsb
xchg
add
ljmp
inc
out
mov
and
push
or
xchg
fmull
ds
mov
sbb
lcall
mov
shll
pusha
pop
dec
push
hlt
jb
pusha
pushf
xor
xchg
data16
jmp
mov
cmp
out
rcll
or
and
push
sbb
std
sbb
jns
xchg
stc
lahf
rorl
das
push
jmp
mov
addb
pop
mov
inc
in
daa
jne
cvtpi2ps
es
insl
pop
filds
imul
fnstenv
sub
xor
sub
sbb
pop
pop
and
mov
jne
pushf
or
adc
mov
and
xor
inc
out
scas
cwtl
enter
cld
call
lods
mov
bound
adc
fs
test
or
lea
mov
dec
int3
lea
clc
outsb
in
mov
aas
ja
push
add
test
ffreep
push
jb
js
pop
xchg
mov
push
jo
sub
addr16
lret
rorb
cmpsb
push
fsts
aaa
inc
rorl
mov
mov
cmp
and
aas
mov
icebp
pop
jae
jno
stc
loop
arpl
imul
jbe
jns
push
jecxz
fnsave
add
loop
sbb
or
jb
mov
jae
and
adc
cmp
aas
stos
and
je
xchg
push
push
cmpsb
lret
pop
pop
sbb
lahf
or
out
push
push
ficompl
daa
push
imul
cltd
popa
notb
jge
popf
xchg
mov
aaa
fs
rorl
insb
nop
cltd
cmpsl
push
or
push
xchg
stos
push
icebp
push
in
xlat
pusha
mov
inc
mov
xor
xchg
push
mov
test
mov
out
or
adc
xchg
add
mov
mov
sub
jmp
mov
into
sub
jo
cmp
dec
inc
mov
test
lcall
jns
scas
movsl
dec
dec
dec
jp
jg
popa
jbe
ffreep
pop
push
pop
lahf
mov
add
push
push
fstpl
pop
inc
es
or
mulb
mov
ds
addr16
out
lock
mov
push
inc
mov
push
sbb
loopne
roll
mov
lret
lock
adcl
mov
push
dec
mov
cmp
ljmp
mov
loopne
mov
jae
in
inc
pop
sbb
in
dec
in
xchg
mulb
mov
daa
add
mov
adc
xchg
lods
sti
jne
pop
or
jecxz
out
sub
jge
lcall
pop
fs
loopne
call
pop
jg
and
sub
adc
adc
inc
xchg
and
mov
ss
jl
fs
mov
mov
dec
add
roll
sbb
jae
imul
outsb
sub
movsl
inc
xchg
cwtl
xlat
aam
jbe
inc
enter
out
lea
roll
fistps
push
dec
jno
roll
mov
jb
xor
jne
cwtl
shlb
int3
xchg
movsl
sti
push
push
mov
mov
xor
mov
andl
inc
and
lds
xorb
dec
nop
bound
imul
repz
ret
or
cli
mov
loope
pop
xor
mov
clc
jnp
sti
mov
faddl
mov
sub
mov
ss
in
fldcw
popf
push
dec
fwait
outsl
dec
or
xchg
andb
push
subb
rol
jge
fildl
pop
rcrl
movsb
and
mov
mov
leave
push
xchg
sub
imul
inc
cs
aas
pushw
mov
jp
js
in
xchg
xchg
xor
lods
out
sub
jbe
jge
daa
data16
mov
imul
fcmovnu
in
stos
inc
stos
xor
xchg
fstpl
aaa
inc
ret
mov
aas
lods
lods
mov
testl
jecxz
sti
mov
es
mov
les
sti
pushl
fmul
lcall
or
icebp
hlt
lret
sub
pop
scas
imul
mov
pop
inc
ja
jne
clc
fdiv
fpatan
aam
shlb
fs
leave
je
jl
outsb
mov
ja
xchg
ljmp
push
sub
mov
repz
and
cmpsl
imulb
test
xchg
mov
pop
jg
out
out
nop
icebp
ss
icebp
add
roll
xor
push
adc
test
push
jge
stc
js
xor
push
jmp
jae
pop
jecxz
jb
sub
xor
gs
cmp
inc
cmp
xor
dec
das
xchg
inc
scas
push
pusha
jb
or
cmpsl
mov
or
sub
sbb
cmp
push
mov
imul
movsb
lret
pusha
jbe
mov
sub
hlt
and
lret
ja
sbb
sub
fsubrs
sub
and
dec
repz
fyl2x
addr16
test
imul
test
inc
lods
mov
sub
xor
arpl
mov
loope
jbe
and
aaa
jbe
fdivs
shll
cmp
and
addr16
jp
xchg
push
es
pop
inc
insb
shll
add
jmp
ljmp
lcall
es
push
xorb
icebp
xchg
dec
inc
popa
insb
push
inc
or
clc
mov
pop
mov
mov
aam
movsb
dec
dec
outsb
jmp
rcr
xor
cld
in
fdivl
jmp
mov
dec
pop
or
sub
jbe
in
lods
loope
jno
push
mov
pusha
scas
fcmovu
lcall
sbb
or
daa
out
pop
and
mov
push
mov
fcomps
cmpsl
shlb
add
lret
les
xchg
sbb
cmpsb
xchg
jp
lahf
add
cmpl
mov
test
jp
add
bnd
xor
push
aam
pop
out
push
mov
sbb
cltd
inc
outsb
insl
jne
inc
jnp
mov
pop
mov
in
xor
adc
jmp
fs
or
shl
pusha
imul
add
outsl
jae
outsb
sbb
push
mov
mov
cwtl
mov
adc
pop
mov
clc
ja
ret
inc
jbe
jnp
mov
test
mov
pop
sub
cmp
xchg
rolb
xchg
je
and
xchg
dec
fmul
in
push
pushf
shll
xlat
adcl
in
dec
push
and
push
nop
adc
dec
push
into
jle
test
sarb
xchg
cmpsb
push
pop
mov
adc
jo
cmp
out
dec
sub
testl
and
scas
mov
jp
call
scas
mov
jmp
mov
fsts
loope
imul
lcall
popl
jmp
xchg
xchg
dec
pop
push
xchg
fs
mov
push
loop
mov
shll
xchg
mov
add
imull
aaa
jbe
pop
aam
or
dec
out
idivb
fcom
stos
cmpsl
and
xor
mov
push
adc
pop
mov
int3
icebp
addr16
mov
push
in
ret
fcompl
or
inc
dec
or
add
push
mov
mov
jno
push
mov
pop
or
push
sbb
enter
and
das
push
and
pop
int
cli
scas
inc
inc
icebp
mov
jecxz
and
push
fstl
sbb
out
int
das
inc
imul
adcl
push
fcomps
adc
or
xchg
inc
mov
cmp
fmull
movsl
jnp
pop
in
mov
or
adc
popa
mov
imul
dec
mov
cwtl
jbe
add
scas
push
popf
jge
push
sub
jae
mov
outsl
jmp
adc
int3
pop
add
xor
mov
scas
cwtl
pop
mov
in
movsb
jne
add
daa
mov
icebp
stc
xor
add
jne
pop
adc
clc
imul
sub
add
pop
addr16
xor
mov
inc
mov
xor
push
pop
push
mov
dec
mov
ljmp
xlat
shll
out
and
std
pop
ljmp
lahf
cld
lds
aas
adc
cmpsl
ss
fsub
sub
mov
fwait
jg
and
push
mov
sbb
cmpsb
sub
arpl
rcrb
imul
into
lock
push
pusha
cld
ja
sbb
and
cmp
jo
dec
loopne
add
or
cmp
rol
aaa
subb
pushf
mov
inc
mov
dec
stos
and
mov
sti
add
adc
adc
sbb
in
icebp
push
sahf
xor
lret
loope
dec
inc
test
pop
orl
popf
xchg
inc
xchg
addr16
insb
repz
mov
inc
or
cmp
pushf
imul
ss
xchg
in
mov
pop
sbbl
fwait
lods
insb
insb
push
rcr
aad
mov
mov
push
sbb
nop
mov
mov
xchg
push
imul
jae
jno
push
xchg
mov
adc
jo
cmpb
cwtl
insb
movsb
jbe
popf
pop
xor
jae
mov
and
sbb
adc
rcrb
lret
repz
adc
xchg
enter
ljmp
lock
lahf
imul
fiadds
inc
aaa
fcompl
pop
jle
mov
das
lods
pop
dec
add
jns,pt
mov
std
and
push
fldenv
sbb
and
data16
mov
cmp
inc
mov
rorl
jne
add
xor
xor
lods
adc
das
dec
or
imul
movsl
ret
aad
aam
xlat
add
pop
mov
into
icebp
scas
out
xor
test
xchg
mov
inc
cmpb
cmp
sar
push
adc
cmp
or
mov
cmc
sahf
adc
outsl
xor
adc
add
push
pop
cld
sub
cmp
xchg
jae
out
and
or
int3
fs
vpsubusw
mov
mov
call
movsl
mov
in
sbb
shlb
lods
cld
and
adc
mov
pusha
sub
fwait
arpl
push
jg
in
fbld
mov
push
call
cltd
rcrb
mov
xor
std
iret
pushf
std
mov
cli
aam
xor
dec
ret
ss
daa
mov
mov
mov
mov
out
inc
pop
fbld
mov
ss
add
mov
or
mov
test
fwait
pop
adc
dec
scas
sbb
imul
dec
mov
idivb
sub
mov
pop
pop
xchg
xor
imul
add
jnp
lret
sub
push
insb
jge
inc
mov
mov
or
and
out
ljmp
test
mov
mov
adc
imul
xchg
adcb
cld
jp
push
xchg
ja
cmpsl
or
scas
mov
lahf
inc
or
adc
sub
pop
sbb
xor
popl
sub
fwait
cmpsl
xor
push
mov
sub
jmp
cld
inc
cmp
daa
aas
notb
arpl
int
cltd
cmp
jne
mov
push
xchg
lds
loopne
loop
ret
xor
loopne
lret
testl
cmovnp
fisttps
imul
and
lea
mov
shlb
test
sbb
js
add
sub
faddl
and
addb
sub
lds
pop
push
jo
aas
sbb
sbb
cltd
sbb
mov
stos
stos
mov
dec
jns
push
pusha
mov
call
lcall
and
loopne
lret
test
or
sub
in
mov
daa
fmulp
cs
jmp
xor
jg
addr16
xchg
jmp
insb
clc
mov
into
iret
pop
add
xchg
cmp
out
inc
sahf
pop
aas
imulb
pop
mov
sbb
mov
jns
ljmp
in
push
dec
dec
lcall
lret
push
test
inc
pop
aas
cmp
pop
or
mov
pushf
aad
pop
stc
xor
outsb
aam
mov
fsts
sbb
clc
fnstcw
test
dec
loopne
aad
jns
lret
cmp
xor
pop
inc
call
aam
dec
out
dec
mov
les
push
xor
add
std
add
sub
ret
mov
arpl
lcall
movsb
push
arpl
xor
outsl
outsb
mov
lret
ss
je
fstl
les
mov
or
adc
test
mov
sbb
xorl
add
ss
sub
sub
aas
and
out
mov
lods
xchg
dec
sbb
das
cmp
test
add
add
int
lcall
inc
sub
fbld
enter
xor
and
out
inc
or
shl
enter
paddw
push
xchg
inc
jg
loopne
stc
xchg
daa
mov
inc
xchg
mov
sbb
cmp
jne
loop
setle
inc
popf
and
subb
cmpb
fistpll
fwait
and
mov
shll
fstpl
iret
insb
icebp
in
movsb
cmc
cmp
popf
icebp
add
dec
mov
outsl
stos
sub
and
jmp
pusha
clc
adc
in
sbb
stos
add
mov
clc
aas
jbe
iret
jne
out
add
sub
loopne
xchg
ret
or
cltd
adcb
xorb
fs
pop
cmp
push
mov
divps
pop
xor
divb
flds
and
jns
nop
cli
jbe
jle
pushf
jae
subb
jmp
int3
adc
lock
add
imul
pop
jns
pop
dec
rcrb
stc
dec
jge
sub
je
inc
push
xor
popf
cwtl
fs
xor
in
xchg
push
lds
add
xchg
xor
les
pop
ljmp
dec
outsl
int3
sub
jns
ss
lret
mov
std
loope
stos
pop
and
sbb
lods
xor
or
or
movsb
pop
mov
add
and
push
pop
repz
in
jb
popa
and
movsb
mov
fs
dec
test
lret
inc
repz
rorl
test
mov
daa
lret
xchg
cs
xor
mov
mov
mov
push
andb
pop
mov
jae
sbb
jmp
outsb
dec
mov
das
inc
push
jbe
test
outsl
enter
dec
fs
arpl
cwtl
test
sbb
xor
mov
leave
and
daa
in
outsb
clc
pop
hlt
aad
repz
jg
ja
fwait
or
nop
movsl
loop
adc
mov
les
sbb
sti
in
scas
sub
call
jae
pop
imull
inc
dec
pushf
flds
mov
fchs
pop
fmull
push
xchg
jmp
pop
mov
arpl
std
sub
ficompl
xor
xchg
mov
xor
push
sub
es
ret
out
in
orl
xchg
aam
sbbb
mov
and
add
xchg
dec
icebp
fwait
popa
and
cli
dec
scas
xor
sti
xor
or
icebp
adc
jnp
clc
fdivs
arpl
int3
stos
test
jecxz
cmp
cmp
mov
sub
pop
adc
lret
gs
outsb
xchg
mov
pusha
lock
pop
pop
jnp
popf
or
adc
pushf
loope
dec
sub
dec
scas
jb
jae
aam
pop
inc
mov
loop
movsl
pop
inc
inc
loop
mov
lds
jns
jmp
xor
cs
xor
arpl
loop
pop
mov
adc
sbb
jg
lcall
out
shr
dec
pushf
add
adc
xor
repnz
jge
aas
out
fwait
scas
sub
mov
inc
shl
in
dec
lock
mov
leave
add
pop
iret
movsl
push
xchg
mov
jb
outsb
pop
mov
xchg
adc
add
xchg
or
adc
add
lret
pop
mov
dec
cmpsb
xchg
addl
mov
stos
loop
cmc
mov
pop
outsb
adc
xor
aam
fldcw
loopne
fldenv
in
adc
jb
imull
ja
aam
pop
lods
insb
jle
or
imul
adc
repnz
push
mov
rcrl
stos
loop
scas
mov
mov
fwait
stos
add
xchg
neg
rcrl
les
and
cwtl
pop
push
pop
pop
out
mov
pop
mov
inc
push
add
aam
adcl
cmp
iret
xor
or
push
in
sub
xchg
mov
orb
add
cmp
xchg
add
mov
jns
add
xorl
sbb
out
and
or
mov
push
mov
ret
cmpsl
jle
pusha
jae
push
jo
inc
xor
xchg
aaa
and
lahf
xor
sti
adcb
ljmp
sub
loope
clc
sbb
xchg
and
adc
cmpsl
sub
out
cld
mov
jg
lahf
mov
test
insl
loopne
jo
loopne
aad
loopne
cmpsb
and
lahf
push
adc
sub
adc
cmpsl
lods
roll
push
fmul
mov
add
mov
fcmovbe
push
dec
cld
push
and
sbb
push
and
addr16
or
ret
enter
aas
stc
aad
in
xchg
mov
xlat
sbb
xor
mov
mov
cmp
sbb
push
adc
mov
mov
imul
andl
xlat
push
mov
xor
mov
pop
cwtl
lret
pop
mov
popa
fistpll
xchg
dec
pop
push
cmpsl
sub
pop
ret
testl
or
sub
mov
jae
rorl
ss
ret
mov
js
mov
and
pop
mov
mov
sub
xchg
inc
cmpl
sbb
dec
push
pop
das
fs
cld
mov
insb
jo
push
sahf
pop
ds
adc
pop
stc
xlat
inc
test
jg
pop
xchg
in
loope
cmpsb
lods
into
inc
das
gs
xlat
add
jo
push
push
fidivs
mov
imul
or
clc
decb
xor
cmpsb
mov
test
push
mov
mov
mov
jle
mov
data16
repz
and
jnp
filds
push
sub
jle
or
aam
mov
adc
fimull
sub
cld
push
mov
mov
xrelease
cwtl
cmp
repz
inc
pop
jnp
add
shl
aad
or
pop
cmpsb
inc
push
jae
sub
mov
pop
enter
inc
jno
mov
lods
jmp
aas
jge
jb
sbb
xor
mov
xchg
imull
ror
dec
pop
mov
pop
mov
icebp
test
into
push
popf
mov
mov
dec
daa
push
clc
inc
lods
dec
mov
mov
mov
dec
and
imul
or
andl
xor
gs
cwtl
int3
pop
in
mov
mov
mov
adc
stos
mov
lods
out
xchg
js
dec
jp
xchg
es
push
mov
or
push
scas
and
bound
subb
or
jno
in
test
mov
dec
push
pop
fs
jb
inc
nop
lea
sbb
xchg
adc
fnsave
jns
push
mov
insb
or
shr
or
sub
in
xor
pop
cmpsb
fsts
jae
fiadds
test
loope
movsl
mov
inc
cli
movsl
mov
push
pop
xor
cld
imull
je
in
out
cmp
inc
enter
dec
in
jle
cmp
xchg
cmpsl
cmp
js
cmp
es
sar
cmpl
lcall
jo
fidivrs
xor
or
pop
xchg
sbb
pusha
cmpsb
inc
lds
mov
xchg
fisttpll
sbb
dec
push
pop
cmp
and
ja
adc
xor
add
pop
xchg
pop
rcll
fbstp
add
mov
je
add
out
mov
leave
in
pop
sbbb
and
lea
push
pop
push
fiaddl
ss
cmp
mov
clc
test
mov
or
fld
cmp
fwait
out
imul
or
das
xchg
push
add
lods
xlat
fildl
mov
je
and
jge
mov
in
mov
mov
add
mov
pushf
add
movsl
mov
mov
cmp
cmpsl
mov
push
aas
sbb
insl
jle
les
std
mov
xchg
add
out
insl
jbe
stos
int3
mov
xlat
addb
mov
fmuls
adc
dec
aad
shl
stos
repnz
out
mov
xor
addr16
mov
xor
and
jo
lret
out
cmp
mov
push
dec
shr
hlt
hlt
xchg
xor
stos
jg
cmp
repnz
lahf
mov
push
cmc
xor
je
cmp
jl
andb
test
dec
pop
repz
in
push
ds
xor
popf
scas
sub
jbe
int3
xlat
mov
icebp
push
inc
lcall
xor
push
int3
in
jnp
mov
xor
dec
pop
push
clc
imul
inc
dec
mov
mov
mov
xchg
in
cmp
mov
popf
std
shrl
shrb
mov
push
jo
cli
pushf
pop
fstps
les
cld
mov
sub
ds
add
or
lret
cmp
lods
dec
cmpsl
or
or
jg
xor
or
adc
xchg
push
mov
stos
cmp
pop
outsl
jb
cltd
or
xchg
push
sahf
jmp
lods
sbb
inc
mov
adc
mov
jb
into
out
xor
xor
into
ret
jmp
cmp
mov
mov
jns
popf
push
daa
fs
dec
in
je
icebp
stos
es
add
sub
or
movsb
cmp
jmp
push
jae
mov
das
test
mov
lret
pop
add
dec
push
lcall
test
mov
subl
shlb
and
adc
sar
out
mov
shll
and
sahf
xchg
stc
loop
mov
aas
rcl
fadds
and
inc
mov
inc
lahf
dec
pop
pushf
or
in
sbb
cltd
sarl
test
pusha
cmp
xor
add
add
mov
mov
mov
add
rol
dec
push
pop
out
popa
cmpsl
xor
dec
sub
sbb
insl
mov
mulb
or
out
pop
and
fnstsw
mov
sti
push
out
out
or
aad
repnz
or
dec
xlat
and
sbb
sub
mov
out
jle
cld
mov
das
cmpsb
mov
test
andl
clc
insl
insl
in
sub
sbb
outsb
fmuls
lock
stos
in
xchg
fsubl
in
add
scas
lret
testl
sbb
mov
xchg
sbb
les
mov
mov
jns
jmp
push
dec
jle
xor
fsubrl
ret
dec
loope
fidivrl
popa
push
in
in
pop
cmp
jbe
jmp
fwait
movsl
or
xchg
lods
pop
sub
cli
inc
mov
xchg
pop
std
out
push
adc
mov
xchg
shlb
push
cmp
orb
xchg
mov
addl
jle
fadds
pop
push
dec
outsl
push
sub
clc
mov
rorb
in
scas
sub
je
ja
fsubp
mov
jne
dec
xchg
xor
mov
xchg
push
aas
aam
or
filds
rolb
shll
inc
dec
pop
rcl
jg
jbe
ss
cmp
movsl
ja
push
xor
test
and
add
sbb
int
mov
rcr
fistpll
xor
pop
pop
push
xor
push
and
data16
mov
das
cld
mov
nop
enter
sbbl
lods
icebp
pop
inc
out
loop
shufps
call
jo
andb
loop
add
and
jb
mov
mov
daa
mov
aad
xchg
xlat
ss
jnp
fwait
and
push
cmc
fisubs
lcall
loope
mov
inc
xchg
adc
inc
inc
cmp
jg
fsubl
test
aad
inc
adc
mov
and
bts
mov
push
iret
aaa
push
sti
push
push
pop
xchg
in
push
cwtl
push
adc
dec
jo
and
xor
outsb
lret
mov
fistpll
movsb
jmp
xor
push
push
rorb
cld
fiadds
inc
ds
push
dec
fsubs
sub
insl
mov
add
pop
repz
fisubs
ds
aam
add
adc
stos
add
mov
imulb
btr
daa
outsb
cld
jns
adc
sbb
and
popf
push
loope
mov
cmp
andl
add
push
push
daa
call
popa
stos
add
imul
stc
ret
fildl
push
outsl
add
mov
daa
ss
xlat
jp
mov
aas
cmpsw
xchg
pop
cmp
sbb
or
imul
ret
push
lahf
das
sbb
inc
les
dec
sub
pop
ud2
dec
mov
pop
inc
iret
js
and
mov
cmc
in
and
push
add
xchg
jge
xor
xlat
adc
or
aaa
jmp
out
jno
or
dec
mov
mov
xor
pop
mov
cmpsb
insl
inc
into
imul
fsubrl
cmp
cltd
mov
pop
push
imull
hlt
mov
adc
repnz
xchg
or
cwtl
mov
popf
add
outsb
jg
dec
fisttpll
push
or
sbb
addr16
shll
and
inc
cld
fisttpll
xchg
fiadds
call
mov
clc
movsb
adc
mov
jl
push
and
in
cmp
mov
mov
sub
rcr
mov
jecxz
add
xor
insb
xlat
repnz
cmp
or
sahf
icebp
js
scas
push
sub
sub
push
mov
and
sbb
shll
pushf
sub
lock
pop
jge
push
out
aad
jb
mov
repnz
dec
pop
aad
adc
icebp
inc
fwait
aas
cmp
mov
arpl
adc
dec
push
pop
adcb
repnz
pusha
cmp
mov
adc
js
aas
mul
andl
mov
mov
mov
fisubrs
mov
stc
pop
lds
jmp
push
inc
mov
fadd
jmp
std
ljmp
mov
mov
pop
pusha
incl
xor
scas
mov
dec
adc
insb
mov
cmp
push
dec
stos
in
dec
sub
cmp
adc
xor
cmpsl
je
sbb
cmp
aad
scas
cs
mov
enter
lahf
test
incl
addr16
and
and
lea
dec
lret
push
lcall
adc
jns
and
sub
leave
mov
push
mov
lret
xor
pop
out
insb
xchg
pusha
or
mov
xchg
push
lret
outsl
fwait
or
adc
jmp
minps
push
adc
fmull
in
roll
mov
xor
shl
mov
fsubl
int3
shll
jge
inc
lcall
cli
insl
mov
out
sub
sti
in
push
lret
les
lea
shlb
in
xchg
xchg
leave
ja
in
push
out
mov
in
hlt
lds
xchg
nop
and
mov
shr
les
mov
test
cmc
cmc
push
jnp
out
sub
sbb
mov
lahf
cmp
mov
mov
popa
jmp
mov
pop
or
mov
sbb
mov
aas
je
pusha
cwtl
sub
sbbl
adc
lds
lock
dec
inc
mov
or
adc
stos
aaa
mov
mov
movsb
jo
fucomi
adcl
hlt
lock
aas
pop
push
push
adc
xor
and
lock
pop
les
jmp
mov
jbe
cmp
and
insl
and
or
or
xor
enter
aad
mov
scas
adc
das
ljmp
mov
cmc
cmovp
xor
bound
inc
dec
test
ja
out
call
add
fbstp
or
ljmp
mov
mov
call
xchg
mov
jg
sbb
dec
inc
xchg
cltd
enter
jnp
mov
inc
adc
mulb
xchg
inc
cwtl
cld
mov
xchg
pusha
sahf
xor
mov
lret
xorb
mov
daa
xchg
dec
daa
jp
pop
jno
cmpsl
lock
xor
mov
insb
dec
inc
je
imull
filds
dec
push
adc
outsl
pop
movsb
mov
and
enter
adc
lock
int3
jnp
dec
ret
pop
adc
js
push
ljmp
push
fiadds
in
cli
pop
div
imulb
sbb
xchg
cmpsl
std
sub
call
cmp
mov
or
jle
pop
test
sbb
ficoml
or
or
jne
arpl
daa
loope,pn
adc
xchg
stos
sarb
sbb
mov
mov
out
hlt
sti
inc
dec
ja
cmpsl
xor
fs
adc
or
adc
test
lea
or
int3
pop
fidivrs
imul
mov
cmp
ljmp
data16
inc
xor
mov
es
inc
loopne
xchg
sub
xchg
dec
push
scas
jge
stos
pop
mov
jmp
loopne
and
and
mov
mov
mov
in
ficomps
adc
inc
adc
fistpl
pop
or
and
das
test
sbb
loopne
pushf
cmp
xchg
mov
xor
mov
pop
ja
sbb
inc
adc
lods
pop
xchg
lret
push
and
outsl
mov
in
test
sub
push
insb
inc
ror
loop
fmuls
jge
dec
aas
dec
jmp
js
sub
xor
in
inc
ja
mov
icebp
xchg
negb
gs
mov
cmpsl
pop
cmovg
mov
mov
cld
sbb
jge
lcall
pop
sub
rolb
pop
push
loop
and
bndstx
nop
sbb
outsb
pop
jge
shlb
sub
or
adc
xchg
lret
outsl
jg
rolb
or
inc
jno
loopne
sub
and
mov
mov
xor
sahf
dec
bound
jge
push
loopne
or
frstor
in
jbe
scas
movb
out
jmp
jl
push
mov
jno
ja
lods
pop
jne
das
scas
lock
mov
or
add
and
sti
mov
je
pusha
outsb
pop
push
pop
stos
add
std
mov
and
fistpll
push
xor
dec
leave
imul
and
dec
ja
ror
loopne
fs
js
inc
icebp
test
ds
adc
scas
jo
aaa
adc
iret
fwait
cmc
pop
dec
dec
and
cmpsl
imul
cmp
cmp
out
inc
jecxz
pop
add
sub
and
lret
filds
add
lock
xor
xor
cltd
pop
jle
ret
push
pop
pop
insl
sti
xchg
scas
dec
ljmp
pusha
shlb
sub
xor
lret
add
shrb
lret
sbb
mov
subl
sub
jl
fisubrs
lods
sub
sub
dec
lahf
dec
fldenv
sub
dec
fisubs
leave
xor
cs
adc
cmpsb
cmpsl
xchg
mov
xor
dec
mov
sahf
jns
in
mov
sub
repz
mov
cmp
enter
and
in
addr16
bound
repz
sbb
test
pusha
mov
in
std
pop
mov
mov
xchg
rorb
fists
push
mov
jg
xor
mov
mov
lods
sub
jbe
loopne
nop
sub
imul
fldenv
test
inc
mov
xchg
ja
aam
sahf
test
cmp
cwtl
mov
dec
leave
ds
popa
in
pop
dec
xchg
shlb
mov
add
jmp
inc
les
or
dec
jp
lea
aas
jbe
cmpl
lcall
mov
lcall
test
push
jmp
sarl
push
call
sub
andl
pop
push
or
mov
push
push
aaa
test
pushf
pop
push
and
push
push
movsb
dec
jmp
push
scas
dec
inc
mov
pop
sub
hlt
mov
lea
insl
pop
frstor
mov
incl
aad
sarl
and
jmp
sub
imul
stc
adc
jo
add
adc
repnz
shrl
push
mov
imul
ja
add
mov
insb
add
xchg
sbb
add
fcom
xchg
cmp
iret
inc
bound
and
out
lds
nop
in
push
nop
inc
pop
adc
mov
and
mov
rorb
sbb
add
lahf
das
mov
or
add
hlt
aaa
pusha
inc
mov
ja
jle
xchg
pop
jns
xchg
push
jno
aam
repz
fwait
inc
out
pop
in
adc
cmpsb
sub
fimuls
scas
lods
mov
ds
dec
mov
push
gs
aad
pop
jbe
push
sahf
push
jbe
jns
pop
or
out
repz
sbb
adc
stos
pop
lods
mov
dec
imul
cs
and
push
xor
in
mov
sub
add
add
fistpll
sbb
jbe
fmul
fwait
add
lret
sahf
lods
sub
xchg
mov
mov
outsb
jb
or
push
loopne
out
xor
cmc
lds
frstor
gs
xor
adc
pop
les
les
ljmp
lds
xchg
cltd
mov
jge
lret
scas
xor
inc
cltd
cs
les
or
or
imul
sub
jle
pop
mov
push
mov
mov
out
xchg
mov
std
mov
mov
ss
mov
test
pop
fnsave
inc
insl
add
lods
jge
sub
or
arpl
cmp
mov
add
xor
ja
mov
pop
jbe
add
xchg
shll
lret
mov
fucomp
add
push
cmp
mov
call
sbb
push
shll
dec
xchg
insl
jmp
test
or
imulb
repz
pop
jg
push
lock
push
into
pop
push
jbe
movsl
int
push
mov
and
xor
mov
jnp
or
sub
scas
mov
ss
lock
push
arpl
bound
jb
out
std
jmp
mov
cmp
sub
cs
repz
in
or
or
sbb
testl
ret
rclb
push
stos
xchg
dec
out
into
jmp
ja
lods
int
adc
test
hlt
movsl
xor
rcrb
cld
sti
cmp
xchg
add
cld
mov
lret
loope
push
adc
pmaddwd
dec
inc
es
sbb
call
repz
xchg
movb
lahf
cmp
add
jmp
or
popa
inc
in
in
shld
out
inc
cmp
hlt
ret
push
orb
dec
dec
jle
or
sub
pusha
push
xor
or
add
in
loopne
out
and
icebp
jb
cmp
in
pop
loope
popf
fimull
pushf
lcall
addr16
fdivrp
mov
jl
leave
scas
or
cmpsl
cmp
lods
and
jnp
cltd
jae
cwtl
aad
imul
imul
inc
hlt
repz
insb
sbb
ret
add
std
jmp
fnstenv
and
mov
and
sar
jle
push
incb
scas
add
inc
sbb
fists
lcall
test
jne
cwtl
inc
lods
pop
mov
jmp
xor
jecxz
cld
dec
and
push
in
xchg
jmp
popf
ret
mov
int3
pop
push
push
xor
adc
fistpl
push
mov
push
mov
pop
push
scas
loope
ljmp
mov
mov
in
in
mov
stos
xor
pop
jb
ljmp
jo
add
shlb
popf
cwtl
lods
fstl
cli
lret
xlat
and
shll
popf
loop
sub
adcl
ficoml
jno
push
and
test
pop
lret
pop
fstl
mov
jno
pop
cmp
add
dec
je
popf
sub
jo
push
push
push
cmpb
adc
shll
cmp
sbb
xchg
or
ds
sbb
cwtl
xchg
jae
test
fcomps
shll
xlat
adc
test
jecxz
lea
cmp
ficoms
sbb
push
pop
adc
push
xchg
and
and
adc
cmp
inc
push
stos
mov
aad
sub
sub
mov
lods
jae
jo
into
lea
push
test
call
adc
arpl
dec
iret
jne
decb
stos
pop
ljmp
cmp
xor
jne
fidivrs
dec
dec
or
push
inc
sar
lret
push
sti
aad
xor
in
sbb
add
mov
movsb
icebp
dec
cmp
fistl
mov
bswap
mov
inc
out
cmpsl
imul
xor
add
pop
push
mov
sbb
xor
icebp
sbb
pop
fcoms
push
rcll
sub
jbe
xor
rclb
les
add
adc
mov
adc
stc
jns
cwtl
push
ljmp
test
imul
push
cmpsl
jl
and
movsl
into
shrb
pop
inc
pop
xor
stos
fs
aaa
xchg
sahf
push
stos
popa
incl
xlat
out
xchg
cmp
and
add
imul
aaa
pusha
insl
dec
aas
out
push
jns
add
imul
inc
inc
rol
add
scas
inc
jmp
and
stos
sbb
jno
jno
orb
mov
je
testl
movsb
adc
stc
movsl
mov
cmp
pusha
adc
mov
scas
mov
jno
push
lcall
insl
add
repnz
lret
xchg
fimull
jb
add
loopne
cmpsb
sub
notb
and
mov
cmp
pop
stos
xchg
je
adc
outsl
fcompl
out
call
push
dec
jb
xor
sbb
cmp
and
pop
push
mov
inc
leave
push
out
push
adc
lods
inc
clc
xor
enter
push
add
in
dec
xchg
pusha
mov
test
cmpsb
leave
adc
adcb
lods
mov
pusha
jge
ds
repz
aad
adc
cs
cmp
jl
iret
cld
adc
adc
push
lods
out
arpl
pop
push
movsb
aaa
jne
xor
or
xor
scas
daa
lcall
xor
mov
mov
cld
push
or
aad
insl
lret
jnp
hlt
adc
ds
ljmp
jmp
push
adc
in
nop
ficoms
pop
dec
bswap
aas
and
push
adc
xchg
test
mov
pop
ret
mov
int3
aas
ret
sub
inc
in
lods
inc
frstor
inc
int
lds
aam
jge
xchg
mov
bound
into
lds
cmp
add
cmp
popa
push
dec
or
push
inc
sahf
adc
test
xchg
xor
popw
scas
cmp
pop
jo
test
mov
loop
int3
ds
cmpsb
aad
mov
sbb
jle
daa
dec
mov
popf
dec
xchg
adc
pop
lret
movsl
adc
mov
mov
adc
jns
cmc
xchg
push
ret
cs
xchg
jmp
rorb
popa
push
mov
stos
and
push
movsb
inc
mov
mov
leave
das
loope
dec
pop
pushl
fstpt
mov
mov
ficoml
fnstcw
xlat
dec
icebp
mov
mov
xchg
shlb
cmp
sub
cmp
inc
inc
mov
mov
arpl
pop
xchg
js
mov
inc
push
pop
movsl
mov
xor
in
jp
shrb
xchg
jb
dec
cmp
push
int
mov
sbb
repz
mov
xor
andl
cmc
adc
adc
lret
inc
sub
xor
dec
sub
xchg
imul
sub
xor
lods
cltd
adc
movq
push
add
sbb
imul
bnd
adc
insb
mov
inc
xor
xchg
mov
xor
add
xchg
jmp
adc
sbb
and
ljmp
ret
push
stos
leave
xor
imull
pop
and
insb
push
add
movsb
arpl
test
mov
jns
mov
out
adc
sbbl
daa
fldcw
jo
pop
pop
dec
mov
dec
gs
sub
enter
mov
dec
adc
out
sti
aaa
mov
imul
mov
shrl
mov
dec
xrelease
loope
sbb
mov
mov
insl
clc
fidivrs
mov
and
scas
pushl
mov
jne
test
loope
in
out
push
lret
adc
loop
mov
xchg
mov
icebp
sti
cmp
sbbb
mov
sarl
pop
mov
or
xor
ss
mov
inc
call
mov
sbb
or
aas
jge
aaa
es
lods
mov
test
test
hlt
xor
dec
mov
aam
jno
loopne
pusha
std
push
clc
mov
xchg
fdivrs
mov
ljmp
popf
je
pop
add
pop
cld
lods
lock
repz
add
mov
xchg
pop
dec
push
add
out
fsubs
ljmp
inc
shll
mov
cmc
push
jo
and
testb
daa
sub
xor
mov
pusha
frstor
or
insb
xchg
mov
jne
pushl
ds
pop
xbegin
aas
iret
or
cltd
push
sahf
xor
push
lcall
sahf
jnp
icebp
jns
cmp
jno
andl
add
mov
lret
les
fisubrs
mov
or
mov
das
pop
movsb
popa
push
sar
inc
and
jmp
cmp
or
inc
cwtl
mov
in
bound
loop
xchg
xor
jp
jne
in
cmp
das
out
ret
filds
clc
push
xchg
jb
insl
daa
and
dec
outsl
push
mov
xor
decl
sahf
xchg
loope
jge
pop
out
adc
xorb
push
jae
dec
in
mov
mov
pop
mov
das
daa
pop
enter
cltd
lret
mov
jmp
loop
xor
xchg
es
jp
sbb
call
add
add
inc
pop
xor
xor
scas
movsl
rcl
fsubr
inc
iret
xchg
out
rolb
jp
inc
lea
xor
in
push
jmp
std
xchg
jns
add
adc
test
notb
pop
test
lds
nop
cmp
arpl
flds
stos
imul
repz
in
and
push
inc
fimuls
or
inc
fmulp
int
bound
xorl
jae
and
fisttpl
xchg
pusha
rol
lock
pop
stc
xchg
jl
rolb
pop
loop
aaa
and
rcr
lods
xlat
lds
inc
rorb
xor
xor
mov
aad
clc
xor
and
ds
jl
subl
cmp
sbb
mov
cltd
test
and
ror
js
adc
test
push
xchg
xor
test
out
out
sbb
jae
rorl
test
inc
outsb
int
mov
mov
mov
fsub
std
test
es
push
imul
mov
add
push
out
leave
enter
pusha
pop
add
sarb
jb
jns
fadds
cmp
sti
mov
loopne
test
sbb
inc
sbb
mov
cli
call
xor
cmc
inc
jp
divb
fistpl
cmpsl
xchg
popa
shlb
lock
xchg
jmp
int
aad
dec
sbb
fiadds
fnsetpm(287
mov
cld
mov
xor
adc
mov
call
xchg
jp
aaa
test
add
sub
imull
push
loop
mov
sub
aam
jno
add
addr16
mov
outsl
cwtl
jmp
mov
and
fsts
mov
mov
mov
inc
lock
dec
jne
cmp
fdivrl
ret
js
push
repz
push
sbb
cmpsl
out
je
or
xor
addr16
movsb
bound
push
xor
mov
addr16
push
mov
xor
in
push
mov
movsl
int
in
enter
fimull
lahf
jp
inc
jle
jle
add
add
lods
cmc
mov
pop
xor
jl
and
adc
jbe
inc
mull
mov
out
jo
cmpsl
pop
xchg
cmc
testl
insb
out
hlt
add
xchg
sti
inc
rclb
add
jecxz
adc
mov
mov
pop
mov
dec
aaa
cli
push
aaa
or
pop
loop
fildll
fnstsw
mov
mov
jmp
sbb
outsl
add
cltd
hlt
push
mov
push
mov
add
js
jecxz
mov
pop
subb
add
mov
lea
mov
adc
cmpsb
sub
aas
repnz
push
mov
imul
lahf
push
mov
loopne
xchg
pop
addr16
xchg
mov
sub
xorb
fdivl
cmc
xor
stos
push
rorl
mov
aam
sub
jo
sbb
dec
jb
xchg
repnz
mov
xchg
in
mov
push
jp
pop
out
mov
nop
xor
cmp
xor
mov
cmpsl
lret
stos
ret
push
xchg
push
cmp
inc
jnp
pop
mov
jecxz
out
pop
pop
int
cmp
push
out
or
lahf
ljmp
jg
out
cli
test
movsb
add
ret
and
pop
arpl
inc
adc
out
sbb
fwait
in
sub
in
mov
ret
les
fcompl
adc
mov
jecxz
lods
lods
stc
jp
jno
pop
sbb
js
scas
mov
and
fimull
cmpsl
sbb
jno
enter
pop
and
js
or
push
cmp
lcall
lds
sbb
iret
shlb
inc
lcall
js
jg
mov
imul
fmull
sbb
lret
mov
lock
cmpl
dec
repnz
mov
data16
sub
jno
stos
push
aad
mov
adc
mov
sub
daa
clc
and
ror
xchg
pusha
jno
sub
dec
dec
loope
jb
cwtl
dec
dec
jp
jb
pop
aam
cli
mov
push
jp
fs
outsb
pop
push
inc
sbb
aad
xor
mov
jnp
idivb
out
neg
lock
push
imul
push
sub
and
jne
push
scas
xchg
dec
fs
jp
adc
int
out
stos
test
cmp
pop
jo
xor
jge
aam
cmc
adcl
pop
test
imul
inc
jbe
in
mov
mov
jb
in
fcmovnbe
and
in
sbb
and
push
fs
push
inc
sub
add
popf
push
add
jle
xchg
mov
xor
nopl
ret
pop
roll
scas
std
shlb
mov
pop
dec
mov
filds
sub
add
pop
mov
fs
out
popf
test
inc
gs
adcb
scas
aaa
jle
sub
dec
pop
lock
int3
outsb
icebp
dec
call
mov
adc
adc
mov
mov
push
rcll
out
sub
cli
lds
cmc
add
add
out
out
add
out
sbb
sbb
xor
cmp
push
fcoml
push
stos
xor
ret
out
mov
daa
mov
scas
js
inc
lret
mov
or
cmpsb
xchg
push
jge
add
xor
pop
mov
cmp
aam
out
das
imul
in
jg
out
scas
jbe
scas
in
mov
mov
jbe
cmp
fdivrl
test
imull
jge
or
sbb
mov
mov
sub
jo
and
std
adc
jg
inc
or
jl
leave
pop
fcompl
inc
enter
or
add
das
lods
sahf
cwtl
jmp
sub
jl
loop
cmpsl
pop
add
outsb
sbb
pop
cs
jle
add
xchg
push
cmpsl
test
cmpsl
adc
jecxz
sbb
sti
adc
test
out
pop
inc
mov
ficompl
inc
mov
cmp
in
scas
cwtl
mov
sbb
adc
scas
sub
inc
in
jecxz
xchg
sub
rcll
dec
sbb
sbb
pop
sub
or
push
cmp
jecxz
scas
mov
std
sbb
lods
das
push
cltd
into
lea
in
push
fxch
sarl
add
rorl
ret
jl
aad
je
and
mov
mov
push
pusha
push
cmp
in
and
lods
sub
clc
mov
mov
mov
and
sub
or
imul
inc
jge
add
jno
fsubp
mov
sub
loop
or
shll
push
pop
addr16
push
pop
test
call
and
push
sbb
sub
mov
ljmp
jno
adc
das
dec
cli
hlt
fdivrl
push
scas
imul
dec
or
dec
lea
aam
pop
jl
inc
pop
fimull
mov
cmpsb
jecxz
or
lods
addr16
pushf
xor
inc
xor
jbe
mov
fsts
aam
cmc
pop
or
add
popf
faddl
pop
dec
scas
xchg
andl
enter
pop
sarl
jmp
addr16
aaa
jle
repz
sub
sub
ret
jp
and
mov
jb
scas
mov
scas
xchg
pushl
imul
pop
xor
out
decb
outsl
xchg
fldt
subl
stos
cmp
fdivrl
jp
sub
ficompl
shlb
dec
dec
cmpsb
ret
push
adc
cmp
test
shrb
mov
adc
mov
and
popa
inc
and
iret
mov
mov
movsb
adc
repz
jp
cmp
sahf
lret
lret
cmpsb
xor
mov
bndstx
mov
popa
mov
cmp
mov
enter
push
int3
pop
mov
fwait
sub
inc
mov
or
jle
mov
dec
shlb
inc
es
pop
pop
out
lret
leave
inc
iret
inc
ds
out
xor
jbe
dec
mov
push
fidivrl
adc
pushf
xchg
fwait
cwtl
inc
mov
outsb
mov
and
pop
testl
add
lcall
pusha
push
loopne
out
mov
add
movsb
mov
leave
outsl
xchg
mov
dec
fsubrl
sbb
incb
jp
std
cmp
fisubl
negb
je
lock
imul
inc
std
or
push
push
lret
out
je
push
jmp
pop
push
and
adc
cmpsb
sbb
inc
push
push
mov
ss
cmpsb
inc
leave
xchg
int3
clc
lret
dec
mov
pop
dec
nop
lret
mov
sub
imul
xor
out
fneni(8087
cmp
or
xchg
mov
jne
mov
cmpl
mov
stc
mov
out
jo
adc
dec
jns
ja
lret
lods
mov
push
xchg
ja
mov
sub
jge
movsl
je
adc
clc
mov
mov
sbb
xor
xchg
sub
cmp
jns
test
dec
push
mov
icebp
sarb
mov
xor
and
cli
push
popf
test
repz
fnsave
jno
adc
inc
jne
rorb
lock
lea
mov
or
push
adc
mov
icebp
in
sbb
dec
sbbl
stos
loope
xchg
not
jb
fiadds
or
cwtl
jmp
int3
aad
and
iret
inc
mov
daa
imul
stos
icebp
loope
fs
les
jle
insl
dec
pop
jns
loopne
cmp
cmp
fdivr
aad
orl
fsubrs
jle
jno
cmp
iret
add
or
out
pop
ljmp
out
cmp
cs
call
fdivs
mov
je
dec
push
pop
push
rcrb
dec
testl
adc
pop
cmp
add
sbb
inc
push
and
xorb
rcrl
clc
add
adc
lret
mov
adc
test
fcmovnu
aas
jecxz
push
sub
je
dec
mov
xchg
push
pop
push
mov
mov
fistps
cmp
push
adc
aas
inc
sub
sbb
lea
xor
idiv
pop
xchg
test
mov
xchg
aas
inc
cmp
xor
rorl
ja
and
faddp
lock
inc
sub
iret
push
ljmp
outsl
mov
fwait
add
inc
cmp
pop
les
lcall
xchg
mov
ret
std
mov
push
mov
outsb
push
add
in
cld
adc
mov
xchg
mov
out
jle
xor
lds
xor
inc
ja
pop
nop
decb
mov
fwait
mov
aas
cmp
std
mov
cltd
mov
pop
mov
cmp
sub
scas
outsl
lcall
cmp
push
sub
repnz
fdivr
scas
mov
cmpsl
scas
xchg
clc
inc
and
mov
movsw
inc
shrl
cmp
hlt
mov
loop
xchg
push
in
or
sbb
movsl
pusha
or
jg
adc
push
andl
mov
jg
inc
pop
ss
bound
or
mov
call
jle
fadds
dec
insl
jg
cmp
jno
pop
test
or
jge
test
mov
dec
ss
mov
push
pop
das
ja
inc
dec
je
and
popf
jae
adc
jb
das
incl
movsb
sub
notl
lahf
or
sbb
push
fwait
stos
push
jbe
add
cmp
leave
outsl
mov
add
jo
mov
cmc
push
mov
dec
icebp
jnp
pop
mov
pop
xchg
mov
std
jo
or
in
es
out
sahf
lock
mov
cmp
hlt
mov
push
iret
gs
jecxz
aam
push
imul
test
or
pushf
pop
inc
fildl
sub
mov
cmpsb
push
shrl
push
loop
jno
jnp
fnstsw
push
shlb
pop
push
das
pop
push
pop
fbld
fsubrl
sbb
sbb
pop
lea
pop
addb
insb
ljmp
aad
lock
rolb
hlt
hlt
in
mov
cmp
or
and
dec
push
idivb
sarl
mov
outsb
jnp
mov
xor
xchg
xor
repz
stos
pop
or
push
xor
cs
lds
mov
xchg
mov
pop
cli
clc
fsubp
mov
pop
jecxz
cmp
push
jl
out
mov
and
outsl
push
lret
dec
enter
inc
rcll
sbb
mov
repnz
mov
push
fsts
loop
in
jnp
shl
mov
hlt
xlat
cs
ja
fimuls
jmp
jnp
push
sub
adc
adc
int3
lahf
scas
sub
xorb
shll
shlb
cmp
enter
xor
dec
ret
inc
sbb
sbb
in
outsb
sub
out
loope
jg
sub
fwait
clc
mov
cmc
sahf
xlat
lret
test
cltd
fmul
xchg
add
sub
ficomps
cmp
out
out
cltd
dec
xchg
or
xchg
divb
out
mov
mov
xor
rcr
xorl
pop
imul
nop
jb
rclb
outsb
aas
xchg
insl
in
add
jge
ret
or
sbb
cmp
cld
adc
adcl
jl
xchg
add
pop
pop
push
add
sar
cmp
adc
or
jne
call
dec
test
sub
popf
lock
scas
cmp
data16
cmp
cli
push
mov
mov
shl
lret
and
xor
push
test
pop
xor
lahf
xchg
pop
sbb
mov
mov
mov
and
cli
jnp
stos
sarl
jecxz
cmp
hlt
jmp
cwtl
jge
test
mov
cmp
jle
dec
test
shl
les
jp
iret
ds
sub
scas
pushf
xchg
in
xor
out
fsub
add
fstpl
jb
pop
dec
xchg
test
inc
inc
mov
aad
fmul
ss
lock
xor
pop
mov
sbb
jp
cli
mov
in
pushf
adc
or
enter
pop
jbe
fucom
out
xlat
xchg
cld
out
shll
and
nop
test
inc
and
data16
mov
fmuls
arpl
xchg
xor
mov
fs
sti
adc
jne
das
pop
scas
dec
mov
pusha
js
sarb
cltd
mov
cmpl
xchg
xchg
xor
arpl
imul
in
rcr
or
lret
push
sub
sub
jl
cmp
pushf
mov
cli
or
jle
fstps
fidivs
sbb
popf
cli
sub
lock
sbb
sub
xchg
lds
in
pusha
mov
push
mov
lret
xor
sub
push
dec
repz
jns
loop
in
jbe
add
inc
sub
inc
enter
mov
mov
xor
incl
aaa
fisubrs
dec
mov
sub
das
es
daa
mov
out
sub
and
or
pusha
cwtl
cmp
and
dec
sub
sarb
cli
ss
pushl
adcb
sbb
cltd
es
dec
into
rorb
clc
push
add
sub
data16
mov
scas
mov
push
mov
stos
into
cmp
fldl
insl
rcl
insb
mov
cwtl
sub
popa
andl
ss
es
jns
cmpl
out
jne
pop
out
repz
push
xlat
xor
push
mov
sbb
xchg
inc
stos
jb
ret
xchg
push
hlt
jp
jb
mov
lahf
test
lahf
or
inc
push
subl
dec
inc
pushf
mov
insb
mov
add
jae
nop
mov
sub
ds
dec
xchg
lret
sub
push
mov
xchg
and
ror
fstl
dec
cmpsl
bound
mov
push
adc
outsl
dec
add
jno
add
das
adc
pop
out
inc
sbb
daa
sub
mov
je
das
enter
jbe
rorb
mov
adc
xchg
fisttpl
test
dec
xorl
dec
ds
push
into
jle
into
out
adc
adc
jo
pop
loope
cmp
das
push
lods
xor
add
jp
push
das
push
fdivs
es
push
outsl
or
pop
xorb
add
je
xor
popf
dec
lret
inc
sub
enter
int
repz
addr16
out
adc
bound
mov
pop
aam
in
sub
mov
xlat
ss
mov
insl
push
insb
addr16
push
mov
mov
aam
xchg
lods
jmp
stos
jecxz
mov
loop
clc
push
cli
in
in
dec
inc
xor
ret
out
imul
or
fsubs
test
dec
and
out
push
daa
lds
int
addr16
out
jge
dec
cmp
xchg
scas
mov
fdivl
inc
and
movsl
sbb
out
test
sbb
ja
xchg
out
ror
enter
and
sub
push
dec
negl
pop
sahf
mulb
dec
das
xchg
sub
inc
out
lret
sti
jp
add
lret
cmp
mov
pop
aas
push
sbb
mov
sti
outsl
js
pop
mov
cmc
lea
pop
aaa
mov
sub
movsl
es
inc
std
sbb
nop
outsb
jecxz
sbb
pop
xor
and
xchg
into
insl
sbb
cmp
push
ljmp
mov
and
mov
aaa
loop
xchg
mov
mov
jmp
imul
cli
pop
subb
lcall
mov
xor
sahf
dec
nop
push
insb
stos
test
xlat
lret
out
sub
sub
les
gs
or
mov
movb
lcall
sbb
aad
xor
dec
mov
xor
cmp
loope
jmp
xlat
std
cmp
and
addr16
dec
mulb
xor
mulb
dec
dec
dec
out
mov
inc
jp
lcall
xor
dec
pop
sub
dec
xchg
xchg
mov
out
in
loopne
rorl
xlat
movsb
xchg
fisubs
pop
ret
or
sub
loopne
or
inc
dec
into
jl
xchg
js
dec
mov
adc
cmp
jp
cmpsl
out
dec
cld
in
pop
add
shl
sbb
and
xor
sub
stos
mov
jno
stc
lea
scas
dec
xchg
ret
dec
lds
sub
jmp
cli
and
mov
loopne
mov
cmp
mov
jl
and
xchg
inc
jl
dec
jbe
jno
out
mov
adc
cld
xor
lock
jecxz
xchg
or
and
outsl
sub
mov
push
and
nop
push
pop
out
int
scas
jbe
xchg
loope
add
dec
inc
inc
cli
pusha
ss
jae
xor
inc
push
or
addr16
xchg
mov
dec
bound
and
andb
push
xchg
add
daa
dec
dec
in
arpl
sbb
rclb
out
cld
sbb
ffree
pop
dec
pop
adc
jns
aas
mov
jl
mov
cmp
adc
sti
fistl
es
cmp
jl
mov
cmp
mov
ds
push
push
xlat
adc
hlt
xor
aaa
andb
and
sub
pop
push
sti
shlb
pop
xchg
into
ss
mov
aas
lock
movsb
fcomp
test
mov
jmp
dec
jecxz
push
inc
ja
jl
int
das
jp
jne
and
cmpl
jae
out
mov
ret
push
lret
ret
adc
fmul
stos
loopne
lds
mov
inc
daa
addl
iret
imul
and
enter
popf
fildl
pop
or
enter
cmc
sbb
or
mov
arpl
stos
jb
dec
inc
fldcw
jns
inc
mov
push
and
dec
ret
adc
sub
cmpl
adc
jg
sbb
rcll
jo
insb
inc
jle
or
xor
mov
sub
pop
mov
sbb
xor
jge
jb
cmpsl
test
loope
push
stc
stos
inc
push
jecxz
in
loopne
pop
and
aaa
push
lcall
stc
clc
fucomi
and
lds
push
roll
pop
push
mov
lret
mov
ret
arpl
dec
das
jg
out
sahf
pop
pop
jmp
pop
and
mov
daa
inc
inc
adc
ret
sarl
lea
and
push
bound
int
inc
sti
cmc
push
jge
jb
adc
call
popf
in
jnp
xlat
push
stc
and
push
fbstp
rol
mov
cli
inc
pop
xchg
adc
adc
or
push
jecxz
incb
ficompl
sbb
sub
jo
in
dec
pushf
iret
mov
js
dec
sahf
xor
aas
jecxz
sbb
out
mov
lahf
dec
dec
mov
nop
cli
dec
push
shlb
sahf
pop
cltd
inc
js
cmp
call
cmc
mov
mov
jb
rclb
aam
jl
push
lods
inc
and
and
fs
push
jmp
mov
cmp
sub
xor
cmpsl
mov
cmp
mov
or
cmp
inc
sti
out
lock
rolb
xlat
outsb
fisttps
movsl
inc
mov
push
into
lcall
clc
arpl
scas
cmp
shll
pusha
test
mov
divb
xchg
movsl
dec
mov
jns
adc
mov
adc
inc
cmp
int
pop
call
jp
shlb
add
cmp
int3
adc
rclb
fs
push
pop
and
std
call
jle
jmp
jns
ljmp
jbe
ficoms
fidivs
push
mov
rcrb
int
and
mov
pop
mov
push
repnz
mov
lds
jp
and
lock
mov
ja
lahf
jo
ja
ja
inc
xor
add
les
js
push
ret
pop
jge
rcr
call
jno
xor
xchg
add
inc
mov
flds
xchg
adc
sub
ja
je
fcompl
test
nop
fiadds
cmp
push
cltd
shl
or
fnstenv
xchg
jmp
fwait
xchg
xlat
jbe
incb
lock
lock
lcall
jge
fistl
stc
movsl
int
add
jge
sar
fwait
mov
popf
sahf
push
fcomp
add
in
pop
jno
hlt
xor
xor
push
mov
loop
push
adc
xchg
sub
pusha
inc
sub
or
lods
inc
or
inc
push
fs
repz
or
adc
adc
into
sub
lock
imul
dec
sbb
cltd
test
test
add
fdivl
loope
jo
push
push
xchg
xor
rolb
jmp
divb
cli
mov
lahf
inc
imul
mov
or
ret
add
and
dec
inc
mov
pop
pusha
shll
sub
adc
adc
dec
jbe
leave
inc
inc
lcall
ficomps
imul
push
inc
test
push
js
rcl
inc
mov
dec
test
sub
dec
inc
jno
fldcw
iret
push
mov
pop
sub
inc
out
fsts
jecxz
xchg
imul
loope
mov
adcb
push
add
daa
in
ljmp
cmc
pop
mov
jmp
pop
xchg
rorl
decb
adc
pop
xlat
arpl
adc
popf
xor
jae
xchg
outsl
lock
pop
fdivl
pusha
pop
fcomps
ficoms
add
sbb
in
ljmp
jge
shl
stos
jg
int
stos
xchg
lods
mov
das
dec
aad
int
mov
lcall
les
inc
aaa
fs
pop
fnsave
fldl2e
loop
cli
mov
or
negb
jb
and
stc
xchg
xchg
jne
jns
test
into
dec
add
arpl
ficoms
call
jb
push
dec
loope
xor
or
call
stos
xor
mov
das
push
dec
mov
aad
fadds
xchg
mov
push
mov
add
jl
test
loope
xchg
lds
add
push
mov
in
test
pop
jmp
jg
lahf
filds
push
lds
jno
xchg
adc
cmp
sbb
mov
xchg
sub
icebp
xchg
scas
xor
imul
inc
add
ljmp
inc
xchg
adc
loope
mov
lock
pop
loope
outsl
pop
cmp
sub
pusha
testb
sub
outsl
idivl
addr16
mov
sahf
flds
jnp
dec
jp
popf
pop
inc
inc
fs
inc
test
or
xor
push
mov
mov
add
rcll
cs
clc
fcom
das
ret
push
ds
ror
jle
sarb
pushf
repz
inc
es
mov
jg
adc
stos
repnz
ja
mov
ljmp
iret
pop
fst
cmpsb
mov
rcrl
inc
fs
in
push
sti
jbe
jle
pop
mov
jge
and
pop
dec
inc
pop
lahf
dec
cmpsb
outsl
dec
add
xorl
sbb
sbb
ss
icebp
imul
mov
sahf
push
mov
or
dec
jmp
int
out
enter
pop
push
xor
popl
iret
dec
adc
fdivrl
sbb
push
cmp
and
dec
pop
stos
mov
add
ds
add
adc
fisubrs
gs
push
daa
aas
mov
push
dec
push
movd
pop
out
rcll
insb
cmp
in
jnp
jb
out
xchg
mov
dec
mov
push
jmp
xor
fldenv
mov
movsb
and
jp
push
insb
sbb
sbb
and
pop
daa
mov
lret
jl
cmp
and
jae
daa
clc
add
loope
add
dec
lcall
loop
stos
popl
ret
xor
gs
insb
cmp
sahf
add
xor
inc
xchg
fldt
jb
adc
xchg
lret
or
xchg
sub
xor
mov
mov
stos
pop
cmpsb
adc
dec
mov
loopne
xor
cmp
mov
push
dec
push
iret
test
adc
cmc
in
mov
lcall
add
jno
es
pop
mov
xor
jae
movsb
cmpsb
ja
jne
jns
sub
mov
popa
popa
and
add
jl
sub
push
inc
rol
push
xchg
aas
int3
fcomp
cs
aaa
outsb
ret
and
or
in
xchg
jle
insb
bswap
mov
xchg
loopne
scas
add
push
pop
push
nop
popf
insl
hlt
insl
insb
sbb
enter
xchg
jae
mov
inc
iret
in
and
jecxz
int
ja
jo
test
mov
xor
mov
cmp
pop
lret
test
in
ja
je,pt
popf
sub
mov
mov
daa
and
bound
test
add
bound
stos
popa
pop
sub
mov
dec
sbb
jmp
mov
jne
mov
sbb
pop
jae
and
jo
sub
ret
sbb
out
xchg
add
or
mov
stc
dec
sahf
movsb
pushf
mov
fincstp
scas
xchg
loopne
jne
notl
cmp
sub
lds
xor
jl
jo
fldl
outsb
xor
arpl
pop
clc
rcr
pushl
movsb
mov
adc
and
fadds
mov
scas
imul
hlt
xor
mov
insb
cmc
popa
pop
clc
lcall
pop
jnp
fiaddl
out
inc
outsl
insl
and
pushf
lock
cmp
jmp
bnd
mov
hlt
or
leave
xchg
int3
in
rcr
mulb
es
mov
xor
out
enter
push
xchg
add
bound
cwtl
in
in
out
xchg
ljmp
test
ss
leave
loop
je
jl
sub
int
leave
jle
jmp
test
cltd
mov
xor
ret
cmp
lret
push
repz
add
xor
mov
jecxz
out
dec
lret
jmp
dec
and
xchg
mov
outsl
out
or
jge
mov
stos
mov
lock
mov
push
mov
adc
jl
sub
push
inc
inc
sub
mov
into
nop
mov
and
pop
popa
cmp
cs
lods
dec
mov
sub
jmp
sahf
cmp
sbb
pop
sub
mov
ret
into
adc
ffree
in
adc
mov
cmpsl
push
sub
cmp
push
mov
sbb
or
adc
sub
cmpsl
adc
push
cmpsl
lahf
scas
cwtl
filds
nop
rcll
insl
mov
inc
shr
adc
lods
das
inc
sbb
mov
mov
ljmp
das
dec
adc
or
out
mov
loopne
fidivl
or
popf
mov
sbb
cltd
jg
push
sub
out
scas
push
movsb
sbb
mov
push
ja
ja
in
jae
mov
je
cmc
mov
icebp
loope
in
inc
mov
fwait
dec
push
int3
adcb
and
push
nop
xchg
push
leave
cs
repnz
imul
pop
pop
mov
adc
sub
mov
push
shl
cltd
loopne
negb
push
mov
jg
movsb
fisttpll
icebp
cmpsb
fsubl
dec
cltd
shrb
pop
lock
stos
iret
adc
inc
xor
xor
push
or
mov
pop
hlt
adc
lret
fistpl
inc
push
shrb
rcll
lcall
sub
sbb
int3
ret
cmc
mov
lcall
push
ss
pop
fiadds
popf
ficoms
rep
xlat
xor
pop
mov
loope
sti
mov
push
sarb
fistpl
stos
mov
lahf
popf
lahf
cmp
add
mov
cmpsl
loope
cmp
loope
mov
xchg
bound
jmp
adc
push
repz
jo
mov
mov
or
mov
loope
int
lock
popf
lahf
jle
cs
xchg
pop
loop
pop
fstps
ret
xchg
xchg
pop
sub
mov
rcr
aas
and
pop
sbb
mov
add
xchg
fwait
loope
shrb
xor
movsl
fwait
adc
inc
insl
ss
rorb
lcall
fwait
add
imul
das
cld
or
inc
dec
mov
div
cltd
imul
fdivs
sub
cli
daa
push
xorl
or
stc
dec
shlb
inc
pop
mov
shlw
fbstp
cmp
mov
pusha
idivl
cmp
int3
mov
lcall
movsl
push
outsl
mov
add
push
jp
paddsb
and
push
lods
mov
adc
les
test
in
lods
fwait
daa
mov
dec
push
shll
rcll
push
or
icebp
pop
inc
test
push
xor
push
adc
cli
rorl
push
dec
loopne
test
clc
inc
inc
fsts
scas
add
inc
pop
jbe
cmp
push
mov
or
lcall
or
xchg
lret
ss
sub
pop
xchg
stos
pop
cmpsb
out
add
jecxz
fbstp
xchg
pop
mov
adc
lds
and
test
sbb
pop
mov
fs
inc
jle
lds
dec
inc
insl
pushf
fsubs
inc
shlb
mov
shl
mov
mov
dec
jae
cmp
fldenv
jae
or
lret
pop
dec
lret
jnp
rorb
sarl
stos
rcrb
call
cltd
mov
cmp
xchg
push
xchg
dec
or
adc
loopne
out
mov
or
fwait
ret
xor
stc
mov
imul
lock
sub
mov
lahf
add
pop
mov
jge
pop
pop
inc
mov
rcrb
std
push
push
mov
pop
jmp
aad
movsl
cmc
xor
jb
frstor
adc
push
add
mov
push
ret
adc
lret
adc
in
inc
rcrl
xchg
cmp
cmp
cmp
jns
popf
xchg
jp
push
sbb
xchg
lret
in
jl
mov
insl
fcoms
dec
dec
popf
mov
or
jg
dec
std
xchg
ret
push
repz
cmp
inc
xchg
addr16
adc
mov
xchg
pop
icebp
adc
repnz
insb
xchg
shrb
loop
mov
mov
xchg
fldl
enter
pop
ficompl
pop
shrb
mov
lock
push
loope
and
pop
iret
aaa
jle
arpl
pop
xchg
loope
insl
popf
cld
and
aaa
enter
lret
lcall
mov
or
stc
mov
ljmp
out
sarl
jle
xchg
clc
test
xorl
loop
pop
movsl
mov
add
andnps
repnz
sub
pop
sub
mov
lods
xchg
iret
sub
jecxz
repz
push
push
cld
pop
cld
ficomps
pop
test
xchg
mov
test
movsl
js
push
cld
test
js
pusha
cmp
dec
fnstsw
push
dec
dec
cmp
nop
push
push
and
in
shlb
xchg
xor
add
mov
cmpsl
or
subb
xchg
lods
in
mov
mov
push
fwait
pop
mov
loopne
and
cmovs
jb
sub
jmp
enter
adcl
test
xchg
fcoms
cmp
scas
ja
test
addl
arpl
fbstp
stos
xlat
sub
xchg
ror
cmpl
sarl
sahf
jge
sti
in
mov
dec
dec
scas
fdivrs
lds
mull
push
jp
out
fidivrs
out
test
pop
pop
jno
xchg
shl
notl
xor
clc
ficoms
cld
dec
daa
jo
mov
or
sub
xchg
das
and
in
lock
mov
pop
jge
cmpsb
dec
imul
sub
mov
push
dec
lds
sub
sahf
repz
adc
jno
lret
mov
repz
sti
jge
mov
cmp
aad
xchg
hlt
add
shll
jbe
xchg
add
pop
pop
nop
in
inc
stos
sbb
andl
sti
test
xlat
repz
icebp
jle
or
out
iret
inc
in
sub
cmp
shrl
mov
stos
push
movsl
pop
push
pop
mov
aam
imul
xor
les
arpl
mov
push
xchg
in
mov
lahf
xchg
pop
cld
adc
pop
jp
xchg
inc
cmp
adc
mov
ljmp
repz
adc
xchg
fiadds
sbb
jb
jnp
jbe
push
or
mov
adc
or
js
mov
pop
cld
jbe
cmpsb
cmpl
and
jg
inc
scas
jecxz
or
xorps
inc
std
and
test
and
adc
xor
and
out
decl
out
xchg
jecxz
rolb
sbb
addb
sbb
ret
shrb
mov
jecxz
lahf
adc
or
loopne
loop
js
inc
mov
jb
pushf
xchg
fdivl
loop
cmc
mov
xor
jp
cmp
fistpl
dec
jo
icebp
jl
out
fimuls
test
pop
es
mov
push
in
test
xor
imul
adc
mov
punpcklwd
icebp
inc
shl
xchg
scas
frstor
out
inc
shrb
outsl
and
add
pop
cs
inc
das
xchg
mov
lahf
or
das
popf
push
mov
stos
leave
mov
fcomps
inc
and
daa
cmp
mov
cmp
pop
rcll
mov
int3
xchg
scas
mov
sbb
add
rcrb
dec
or
adc
adc
sub
or
dec
mov
repnz
stos
sbb
mov
outsb
push
dec
dec
fisttpl
loop
push
sub
mov
loop
out
sub
mov
popa
stos
dec
lahf
and
clc
or
ds
add
mov
das
pop
mov
and
dec
jg
pop
out
je
mov
push
mov
fs
test
rcl
outsl
mov
or
xchg
fwait
setno
popa
add
sub
ss
or
inc
mov
xor
shlb
sub
imul
test
adc
push
jnp
aas
cmpsb
sbb
shll
xlat
or
mov
in
out
cmp
scas
push
lret
push
les
adc
decb
lea
push
jbe
fs
xchg
dec
xchg
movzwl
jno
sbb
jmp
pop
mov
cmp
sbb
push
cwtl
and
fmulp
in
enter
sbbl
sub
les
out
arpl
stos
lcall
mov
movsl
inc
jp
jnp
aad
mov
mov
int
nop
cmpsl
adc
xchg
push
loope
mov
cwtl
mov
xchg
jg
jle
nop
movsl
jecxz
es
addr16
seta
ja
lods
jns
outsb
and
out
jl
xorb
scas
cmp
xchg
push
loope
or
loope
cmp
and
mov
xchg
shlb
lock
adc
cmp
addr16
mov
jne
enter
xor
sbb
and
test
lret
out
lcall
lea
movsl
ja
stc
sub
push
cmp
inc
mov
and
dec
jecxz
fnstsw
xchg
add
scas
pushf
dec
lock
push
xor
pop
mov
adc
test
adc
dec
in
out
leave
jle
je
rolb
cmp
imul
leave
mov
and
nop
dec
ja
and
push
cmp
sbb
xor
lods
mov
sub
and
cld
das
ret
dec
mov
leave
sub
mov
mov
repz
mov
aas
aas
in
add
and
rcrl
xor
scas
pop
mov
push
sub
mov
mov
jge
and
in
inc
ret
pop
sbb
add
dec
jmp
je
popa
or
sub
ret
stc
push
pushf
xlat
xchg
push
js
data16
dec
negl
popf
movsb
ret
scas
stos
inc
push
push
lods
push
fwait
xlat
pop
clc
cs
xchg
in
test
outsl
rclb
mov
aaa
in
int
mov
adc
or
lret
jl
jo
movsl
fisubs
xchg
shll
xor
dec
ljmp
xchg
dec
jmp
arpl
in
add
sub
and
mov
bound
mov
xor
push
in
mov
std
jp
cs
push
inc
and
mov
jne
dec
add
push
mov
mov
ljmp
cmc
sbb
testb
scas
stc
mov
dec
add
je
pop
jns
in
jp
mov
dec
cli
inc
in
notl
cmp
add
pop
xchg
fs
lds
xlat
mov
bound
pop
xchg
mov
mov
test
sbb
xchg
dec
xchg
mov
ret
repnz
in
in
es
mov
sbb
ficomps
repnz
dec
loopne
fisubrs
fdivl
adc
dec
xchg
sbb
cltd
aad
adc
cmp
ja
imul
jns
and
mov
das
push
int
or
incb
sub
pop
repnz
sub
jmp
subb
cmp
cli
ret
nop
add
xorl
add
xor
push
or
sub
pop
cmpsl
lahf
mov
add
adc
and
mov
test
cmpsl
int3
add
test
insl
push
or
jno
mov
and
imul
nop
movsl
inc
xor
or
xor
pop
jbe
lcall
pusha
jne
sbb
lock
push
mov
iret
pop
xor
cwtl
push
orl
in
fdivs
inc
pop
ss
rcrb
sbb
fldl
inc
inc
fs
adc
mov
cmc
ret
pop
sub
stc
add
mov
mov
cmp
xlat
negb
add
fistpl
add
push
jb
dec
or
ds
mov
mov
lret
test
subb
pop
call
pop
cmp
jbe
add
mov
pushf
ret
push
lock
hlt
mov
dec
jp
cld
xor
or
sbb
sub
mov
mov
in
mov
icebp
inc
hlt
mov
sbb
pop
mov
adc
insl
fstpl
int3
into
arpl
push
mov
push
notl
fists
stos
sub
xchg
dec
stos
imulb
inc
and
mov
into
in
movsb
adc
addr16
clc
popf
lock
in
jo
dec
adc
xchg
shrb
inc
pop
repz
jg
loope
movsb
lods
cs
cmpb
dec
cs
mov
xchg
or
sbb
out
jnp
mov
sub
push
outsb
adc
pusha
repnz
or
scas
dec
mov
jp
in
in
xchg
xchg
pushl
movsl
repnz
imul
push
mov
push
jne
jecxz
cmp
mov
insb
in
call
adc
xor
pop
push
cmc
outsb
sarl
jecxz
cwtl
add
rcl
jl
add
orl
iret
jl
test
mov
shrl
adcl
cltd
xchg
outsb
or
cmpsl
fstl
xorl
pushf
scas
sub
ret
clc
sub
sarl
enter
aaa
addl
inc
xchg
mov
cwtl
dec
cmc
ret
test
xor
int3
mov
adc
in
xor
loopne
mov
mov
insl
xchg
dec
mov
notb
jmp
popf
into
decl
mov
aas
insb
imul
setno
xor
je
out
fsubs
dec
add
arpl
xchg
cwtl
pop
rcrl
fcmovbe
mov
sub
shlb
inc
stos
pop
fbld
xchg
push
jbe
in
testb
jne
add
aaa
push
ret
sbb
jne
pop
or
jge
inc
fucomip
jl
pop
fs
lret
xchg
and
push
dec
inc
sub
jb
and
xchg
pop
adc
mov
mov
add
out
sub
ljmp
sub
pop
in
push
or
pop
outsl
cwtl
pop
jg
aam
mov
xorb
int
mov
sub
sbb
sbb
testb
add
mov
and
mov
inc
negl
xchg
cmp
push
scas
ljmp
dec
push
fisttpl
dec
ljmp
in
adc
xchg
loope
cmpsb
fs
iret
in
inc
scas
movq
push
stos
jmp
mov
cltd
inc
or
cmpsb
repz
inc
rep
dec
sub
out
adc
mov
mov
ror
xchg
mov
adc
lock
fistpll
arpl
jb
jg
jmp
negl
cmpsb
fisubs
fldcw
fadds
addr16
je
cwtl
inc
enter
out
sub
ljmp
mov
iret
js
sub
lcall
cmc
test
push
push
adc
cs
sub
adc
ja
sbb
xchg
and
jge
pushf
inc
pop
adc
xchg
jnp
popa
lods
std
pop
stos
jae
mov
xchg
dec
and
fcoms
enter
xor
xchg
xchg
mov
jmp
je
add
xor
xchg
or
fnstenv
ds
dec
xchg
xchg
fidivrs
fidivs
jp
xlat
test
jae
push
xor
push
out
cmpsl
hlt
rcrb
test
inc
das
pop
sub
xlat
inc
pop
pop
adc
and
in
adc
add
icebp
pop
cmp
enter
jnp
push
sub
pop
dec
pop
push
sub
into
movb
xor
push
rolb
fwait
in
mov
push
and
in
pop
adc
add
jge
test
xor
lds
and
adc
push
lcall
cs
fsub
shlb
and
es
adc
jl
ja
jae
cmp
out
dec
dec
xorb
fdivrs
jg
fists
add
pop
xchg
pusha
daa
pop
out
inc
sub
stos
inc
fnstcw
push
aam
xchg
lock
pop
xchg
lds
jl
jbe
xor
out
mov
into
push
clc
push
arpl
shrl
inc
out
and
jne
pop
fldt
mov
in
sub
gs
mov
mov
pop
mov
jmp
jg
jmp
xor
mov
sbb
adc
movl
notb
roll
lds
jge
inc
jle
inc
dec
push
or
xchg
pop
ret
int
add
cmp
jns
pop
lods
push
testl
fidivl
pop
or
aad
or
fimuls
ljmp
adc
sahf
fidivs
pop
faddl
xchg
mov
adc
mov
mov
sub
sbb
fnsave
xchg
std
dec
aas
mov
push
sub
xor
repz
aam
adc
lock
adc
mov
xchg
lcall
mov
inc
out
pop
xchg
repnz
pop
sahf
mov
xlat
sahf
dec
lret
or
adc
pop
jg
clc
enter
fnstenv
cmp
pop
and
repnz
lret
adc
scas
sub
subb
mov
push
fsubs
mov
cli
rcr
lea
mov
loope
pop
add
test
pusha
iret
mov
push
adc
add
mov
pop
jae,pt
dec
pop
in
xor
shll
jb
rorl
pop
movsb
out
lds
fsubs
outsl
or
icebp
xchg
or
xor
xchg
dec
out
dec
mov
mov
stos
jbe
les
call
cvtps2pi
test
testl
dec
mov
call
mov
mov
mov
icebp
mov
push
push
sbb
lahf
cmpsb
lock
mov
push
fnstenv
inc
mov
iret
xor
inc
mov
fwait
repnz
lret
rorl
rcr
nop
mov
jno
push
mov
xchg
mov
xor
leave
sti
test
mov
and
les
sbb
cmp
iret
inc
push
leave
ret
jge
mov
dec
fnsave
inc
mov
popf
add
out
fwait
mov
sbb
pop
rorl
and
cmp
cmc
or
mov
icebp
jbe
pop
inc
lock
scas
xchg
in
pop
mov
pop
sarl
push
mov
into
fsts
leave
inc
cmp
and
xchg
lods
dec
mov
test
dec
jnp
push
leave
pop
ds
loopne
sub
mov
sahf
jmp
jns
ss
aaa
mov
dec
and
jbe
sub
shr
mov
shlb
ret
lret
xor
ss
cmp
in
inc
gs
mov
push
icebp
sub
int
shrl
mov
sub
out
clc
ret
mov
jns
test
js
outsl
aas
lock
sub
sti
inc
pop
fistps
int
sub
push
pop
loope
sti
pusha
ret
popf
mov
loop
mov
push
mov
inc
loopne
sti
jnp
mov
test
xor
inc
jae
adc
roll
fadd
push
pop
pop
test
mulb
addr16
pop
mov
addr16
nop
fwait
pop
cli
repz
inc
jl
stc
push
hlt
sti
out
mov
dec
pop
dec
pop
leave
shl
cs
or
mov
or
cmp
not
dec
jg
sub
mov
xor
jl
cmc
or
push
icebp
push
popf
jnp
add
es
add
xor
in
mov
je
sub
sbb
lret
push
dec
movsb
sbb
mov
loopne
fstps
in
scas
ds
cli
lock
xor
push
mov
sbb
out
out
xchg
mov
pop
mov
ret
adc
loop
push
mov
movsb
adc
test
dec
push
jmp
mov
mov
jbe
mov
call
stc
xor
popa
inc
push
enter
in
out
mov
loop
or
mov
push
mov
jo
mov
adc
rorb
jl
xchg
push
aad
mov
js
and
int
and
sahf
cmp
ljmp
stos
sbb
call
jae
mov
jno
jge
movsb
push
push
xor
aas
sbb
cmp
mov
cld
cmp
lret
cmp
add
add
ret
in
adc
sbb
fwait
test
mov
mov
scas
xchg
stos
fidivrl
pushf
mov
mov
addr16
and
push
cmp
xor
addl
xchg
repnz
jg
mov
add
ret
xor
push
or
inc
push
cmpsb
dec
aaa
movsl
aaa
stos
addr16
stc
xor
push
dec
movsb
jne
jne
icebp
sbb
repnz
sarl
incl
or
pusha
add
test
popf
lods
fwait
jnp
insb
mov
push
cmpsb
addr16
decb
xor
rorl
fcmovbe
rcll
loopne
out
push
pop
mov
pushf
gs
aad
cmp
mov
jmp
xor
enter
xchg
lret
cltd
ss
addr16
xor
repnz
insb
xor
mov
pop
movsb
dec
ficoml
loop
enter
mov
add
push
xor
jb
fwait
push
adc
pop
mulb
lds
add
cmc
mov
inc
data16
imul
push
xorb
sbb
test
xorl
sarl
insl
xchg
test
and
and
scas
xchg
inc
cmp
jg
pop
sub
mov
mov
jmp
xchg
xor
stos
xchg
xchg
in
xchg
add
loope
lcall
jnp
cwtl
ficomps
push
movsb
inc
mov
sbb
pop
cmpsl
dec
mov
pop
shll
mov
shlb
shrl
push
or
addr16
lcall
pushaw
shll
and
xchg
bound
push
into
xchg
imul
mov
js
push
clc
adc
popf
fldl
sbb
cmpsl
mov
pop
mov
insl
xchg
push
ss
sbb
cmpsl
and
vpmovmskb
xchg
inc
testb
out
ja
jl
xor
rcrb
enter
jae
mov
mov
dec
popl
cmpsl
rcrl
and
mov
inc
mov
shll
stc
ret
mov
inc
cld
mov
xchg
pop
pop
movsb
or
call
or
mov
or
addr16
xor
pop
and
imul
cmp
cmpsl
jl
fcmovne
stos
cli
dec
mov
addb
push
adc
push
dec
aas
push
mov
popl
cli
cltd
movsl
call
daa
mov
inc
enter
frstor
movhps
test
jns
scas
dec
dec
int
bound
jb
pop
fcmovb
and
popa
push
jmp
arpl
outsb
cmp
es
stc
inc
mov
xor
cld
lea
int
sarl
pop
cmp
loopne
pop
stos
jnp
inc
xor
lods
cmp
cs
mov
filds
and
addr16
pminsw
cmp
and
incb
imul
scas
push
cmp
or
addr16
xchg
xlat
xchg
jmp
inc
inc
das
inc
push
ss
test
jg
sbb
xor
mov
jl
xor
mov
movsl
stos
cmpsb
push
pop
test
pop
test
add
mov
pop
loop
fidivrl
lea
cmp
xor
xor
xor
daa
leave
in
sub
mov
or
sahf
or
mov
or
popw
pop
mov
rcl
add
clc
mov
movsl
les
adc
ret
jle
sub
pop
lahf
jmp
push
cmp
ret
push
push
test
test
sbb
shl
daa
mov
imul
xchg
jecxz
movb
push
lds
insb
or
imul
push
popa
gs
fldcw
fists
es
or
scas
dec
jecxz
mov
mov
xor
pushf
sti
mov
daa
les
mov
jecxz
push
stc
dec
out
inc
jbe
icebp
jecxz
stos
aam
sub
adc
xchg
mov
fcmovb
jae
inc
inc
or
and
rolb
aaa
ja
es
aas
jb
or
test
fsin
jo
mov
stc
hlt
cmp
fimull
rol
push
lods
inc
imul
push
shrl
sti
xchg
hlt
cmpsl
arpl
sbb
or
pop
es
sti
out
test
or
pop
or
or
fstpl
jmp
jb
cmp
mov
mov
or
out
int3
cld
loop
es
call
cli
out
dec
sbb
dec
out
push
dec
movsl
mov
mov
mov
sub
test
adc
mov
movb
and
int
adc
dec
mov
incb
and
ror
aam
mov
push
data16
test
mov
mov
in
xor
insb
push
cwtl
movsl
loop
jne
jmp
dec
or
lcall
mov
mov
jecxz
xor
mov
xchg
adc
sub
add
pushf
and
out
cwtl
aas
fmulp
add
lret
out
mov
out
add
push
cmovne
mov
in
pop
sbb
inc
xchg
jge
inc
mov
out
outsb
es
fs
inc
fwait
push
sahf
ret
sar
movsl
pop
test
ds
jmp
mov
mov
jecxz
and
add
aas
xchg
testl
dec
sbb
aaa
int3
aaa
inc
sbb
mov
jp
fs
aas
mov
xor
into
movsb
fucomip
call
fbld
push
xor
mov
jae
loopne
mov
test
ss
xor
mov
or
in
jbe
or
pop
adcl
xchg
sub
or
mov
test
in
or
cltd
push
push
loope
hlt
xor
sbbl
mov
adc
push
popf
data16
push
dec
data16
sbb
cltd
xchg
pop
dec
xchg
mov
adc
popa
mov
jo
loop
inc
addr16
divl
and
dec
cmp
fstpl
adc
mov
pop
sbb
jge
test
jo
cmpsb
adc
pop
or
or
dec
jb
jae
rclb
scas
push
jae
rol
lods
cmp
orb
and
or
sub
push
outsl
es
xor
sub
mov
stos
push
cltd
data16
stc
sbb
xor
les
addb
cmpsb
aad
imul
mov
pushf
adc
pmaxsw
iret
pop
inc
gs
js
sub
ljmp
inc
cmpsb
mov
jo
push
xor
push
shl
jo
jae
cmp
dec
imul
sbb
xor
rolb
push
jae
xor
and
add
out
mov
call
pop
test
adc
jne
mov
pop
aad
sarl
inc
sbbb
inc
or
and
inc
inc
lods
jno
xchg
dec
add
cmc
inc
loopne
mov
aad
mov
sub
sbb
inc
or
cmp
out
sub
add
call
shr
add
movsl
dec
cmp
sbb
sti
fistps
dec
pop
pop
push
pop
movsl
or
arpl
pop
pop
stc
pop
nop
mov
fistpl
adc
fsubrs
test
rorb
sub
push
scas
js
mov
in
pop
pop
daa
lcall
adc
std
mov
xchg
or
jecxz
loope
into
and
cmp
lds
pushf
dec
in
add
repnz
popf
sbb
sbb
or
cmp
es
inc
mov
push
inc
lahf
xchg
xchg
mov
mov
imul
out
jne
test
mov
mov
and
lock
in
in
stos
adc
imul
fstpl
arpl
clc
add
fsubl
mov
mov
addr16
xchg
loop
outsl
mov
stos
sub
ja
lods
data16
push
sbb
mov
push
xchg
jmp
fwait
and
in
sti
sbb
gs
ret
mov
inc
mov
push
mov
xor
mov
jge
fs
add
das
enter
mov
mov
pop
xchg
sbbb
sahf
std
xor
ds
dec
mov
ret
push
in
xchg
xlat
inc
mov
cmpl
shll
and
sub
mov
adc
cltd
in
ja
aad
jbe,pt
shlb
test
in
shrl
inc
xchg
int
dec
xchg
scas
xchg
push
js
jbe
lret
lret
mov
daa
xor
mov
pop
mov
sbbb
aas
scas
loope
adc
outsl
dec
push
iret
stc
loop
jno
aas
sbb
andl
iret
jp
fabs
int3
jge
stos
adc
xor
mov
je
pop
push
bound
pop
cmpb
mov
push
arpl
stos
int3
pop
dec
lock
stos
loop
bound
pop
test
and
outsb
and
insb
jo
inc
test
fnsave
shrb
rcr
out
fimuls
mov
js
scas
mov
xor
dec
inc
adc
insl
add
ret
mov
in
add
or
mov
inc
data16
cmp
mov
mov
aam
cmp
call
aam
inc
inc
cmp
scas
aad
mov
scas
adc
mov
cltd
mov
sbbl
jnp
ss
mov
mov
xor
dec
pop
dec
sbb
dec
xchg
fimull
ret
in
scas
push
xor
cmp
fdivrl
jmp
jae
pusha
cmp
mov
jmp
test
jbe
mov
add
jbe
and
shlb
xchg
jb
pushf
shlb
and
cmp
cltd
data16
adc
loopne
xor
sbb
outsl
adc
pusha
ds
sub
in
lahf
cmp
mov
std
push
push
cmpsl
imul
dec
inc
push
aam
adc
lods
jo
mov
push
sbb
out
mov
add
cmp
cltd
push
mov
sbb
add
jae
pop
jl
pop
pop
mov
notl
add
mov
cmp
sbb
fnstenv
mov
mov
shrb
testb
sub
jg
push
fisubl
push
lcall
mov
sbb
in
sbb
cmp
aam
sbb
sbb
data16
mov
in
out
mov
decb
and
adc
or
pop
outsl
jae
stc
out
push
movsl
scas
aaa
jmp
lcall
shlb
fsts
bound
and
mov
pusha
xor
sbb
pusha
cmp
movsl
mov
ljmp
aaa
repnz
popf
subb
pop
pop
xor
mov
loopne
mov
in
adc
mov
sbb
nop
pop
mov
in
jmp
inc
and
imul
push
cmp
cld
das
psubusw
fwait
jns
in
int
xchg
repz
inc
xchg
sub
ja
and
adc
cmp
mov
hlt
ljmp
push
sub
lods
fstpt
adc
and
mov
insl
je
cwtl
ja
nop
or
jae
dec
das
ja
push
adc
mov
repz
arpl
out
clc
aad
jp
xchg
xchg
int3
les
and
jl
ja
testl
insb
mov
mov
push
loop
xor
inc
insb
sti
pop
xlat
mov
inc
jne
jns
adc
fwait
in
add
jno
mov
lods
mov
mov
movsb
or
sub
xchg
insl
leave
jmp
push
out
jnp
inc
cmp
add
decb
cmpb
repnz
loop
cwtl
loope
fdivrl
cmpsl
sub
pop
fisubrl
inc
jmp
dec
or
jp
imull
cltd
call
lret
inc
aad
add
jl
stos
push
inc
fs
pop
pop
adc
imul
cmp
jmp
mov
jae
addl
imul
int
lea
sub
out
ds
sbb
inc
jne
es
sub
mov
leave
sub
lea
jnp
dec
lods
xorb
nop
sbb
scas
mov
ret
adc
xchg
inc
lcall
adc
fsubs
dec
xor
pop
stc
jecxz
mov
adc
es
roll
call
enter
icebp
test
pop
jae
lcall
dec
incb
and
mov
movsb
pop
in
mov
inc
ds
out
dec
addb
dec
add
mov
mov
out
pushf
testl
pop
mov
aas
xor
fisubrl
push
fbstp
pop
jo
popf
mov
push
je
add
push
jne
int3
sbb
mov
mov
lock
xchg
inc
lods
pushf
fdivp
lcall
adc
fcoml
out
mov
push
enter
mov
arpl
sub
cmpsl
xchg
jp
mov
jne
push
sbb
sbb
mov
add
fildll
shrb
add
adc
xor
shrb
xor
sub
mov
add
sbb
movsb
fidivs
lret
enter
repz
mov
add
data16
mov
enter
sbb
mov
and
mov
inc
cmp
in
adc
xchg
leave
dec
mov
sbb
sbb
lds
xor
nop
out
jns
ja
lret
sahf
aas
ret
insb
fimuls
pop
aad
sbb
lds
dec
mov
lods
test
insl
jbe
subb
cmp
fists
adc
adc
push
jno
push
mov
jne
outsl
fistps
je
insl
xchg
jno
sbb
dec
loopne
xchg
fstpt
mov
lods
pusha
outsb
shll
sub
pop
jae
outsl
mov
mov
or
in
and
push
adc
aam
sahf
sub
mov
xchg
popa
jg
mov
imul
scas
or
test
xlat
orb
ja
ss
scas
sarb
mov
push
cmp
jns
cwtl
xchg
fiaddl
mov
or
dec
fcoml
stos
or
and
imul
imul
and
stos
mov
loop
incb
loope
addr16
jecxz
daa
sbb
and
test
xor
adcb
or
lret
dec
pop
adc
sub
mov
ficompl
cmp
push
nop
sarl
ficoml
imul
add
jge
mov
stc
sub
xor
dec
int
sub
inc
push
sub
or
fistl
adc
sub
or
mull
mov
and
mov
rclb
lea
in
call
jae
stos
sahf
aam
js
inc
pop
xor
test
mov
pop
mov
out
int3
mov
jl
xor
xchg
sub
js
repz
and
or
dec
pushf
mov
mov
xchg
sbb
push
out
out
add
ja
pushf
sti
addl
js
cmpsb
xor
out
frstor
mov
xor
fnstsw
push
push
xchg
xchg
in
jecxz
iret
cmp
sub
mov
push
sub
push
push
pop
xlat
stos
sub
or
repz
fidivrl
stc
adc
mulb
lret
repnz
pop
outsl
adc
mov
add
test
icebp
addr16
pusha
loopne
sbb
xlat
aam
in
stos
lock
popf
ds
rolb
dec
shll
test
dec
mov
nop
add
mov
xor
ja
inc
or
mov
mov
mov
sbb
int
cmp
mov
sub
repz
or
pop
xchg
jb
and
mov
rolb
cmp
xchg
or
test
and
jp
scas
je
push
mov
and
push
push
mov
xor
inc
mov
and
inc
stc
sub
icebp
imul
push
pop
push
xchg
fldenv
sbb
and
ja
push
fcoml
pop
adc
ja
scas
subb
add
leave
pop
ja
push
xlat
and
sub
add
pop
pop
sub
movsl
cmp
and
das
add
aad
out
shrl
cld
push
je
mov
push
imul
mov
loop
sahf
ja
xchg
ss
sti
inc
fdivl
sbb
mov
inc
jns
cs
push
mov
stos
mov
cs
sbb
arpl
fsubr
test
mov
int3
mov
sti
or
sub
mov
mov
aad
lock
pop
sahf
sub
pusha
lds
pushf
insb
insb
xchg
cmc
repnz
scas
or
dec
pop
xchg
mov
out
in
out
xchg
pusha
xchg
sbb
dec
icebp
lods
sbb
dec
push
pop
sbb
insl
lods
inc
movaps
jb
cmp
iret
ja
jne
jb
push
sub
push
dec
data16
push
outsb
jbe
lds
fstps
ja
dec
jecxz
pop
and
mov
cltd
jne
in
sbb
movsl
pop
cmp
adc
icebp
lcall
fisubs
jns
jno
jecxz
mov
jmp
lods
pop
push
jl
or
jmp
mov
sub
adc
or
mov
xrelease
aad
jmp
imul
and
pop
scas
or
cmp
clc
and
inc
pushl
pushf
nop
mov
enter
mov
fnsave
pmulhuw
xchg
mov
sub
js
bound
stc
sub
adc
or
sbb
cmp
cs
cwtd
jns
push
sbb
dec
adc
sahf
daa
cmpsl
push
mov
or
mov
sbb
aaa
shlb
jl
push
mov
les
mov
aam
dec
popf
sti
lea
xor
das
push
lret
push
mov
cmp
lds
mov
imul
mov
mov
cmpsb
sbb
mov
jo
into
cltd
cmpxchg
dec
aaa
andb
mov
xchg
loopne
xchg
dec
fsubs
les
cmpsb
aas
sub
or
in
ficomps
mov
mov
push
mov
insb
test
scas
std
sbb
shrl
sub
test
jbe
jne
pusha
jle
pop
mov
push
xchg
dec
push
stos
int3
mov
xor
xor
ja
in
in
fwait
aaa
mov
or
jmp
scas
hlt
xchg
push
pop
xor
nop
cmp
jp
adc
mov
cwtl
add
mov
add
aaa
movsl
pop
je
add
repz
sbb
dec
loop
int
sti
cmp
mov
adc
daa
int3
cmc
adc
loope
inc
pop
stos
xchg
mov
insl
std
jp
pop
cmp
je
add
mov
dec
and
sar
and
cmpsb
push
in
cmpsl
into
clc
lods
stos
jmp
mov
iret
xchg
push
mov
ficoml
xor
pop
add
xorl
lds
aaa
pop
outsb
in
pop
xlat
ret
jae
xor
ficoms
jb
jnp
cmp
lea
cmp
xlat
cli
mov
scas
repz
mov
test
mov
scas
sbb
mov
xor
jne
loope
data16
jnp
mov
shll
and
bound
push
test
lret
int3
lahf
in
xchg
dec
bswap
adc
xor
cmp
cmpsb
fistpll
pop
pop
pop
mov
or
inc
out
jbe
sbb
adc
and
loop
fs
popf
jae
pop
idivl
icebp
jg
and
cmpsb
fucomp
or
sbb
lods
cs
mov
aaa
out
ja
mov
xchg
sbb
xor
lret
cmp
xor
ds
loop
iret
push
in
and
insb
cmp
loopne
or
rclb
orb
addr16
mov
inc
pop
loop
sbb
mov
mov
ficomps
std
xchg
mov
sbb
pop
dec
xlat
mov
xchg
movsl
orb
sbb
add
cmpsb
and
adc
mov
popf
pop
or
push
cmpsl
xchg
inc
shl
and
and
sub
pop
jne
or
pop
push
out
inc
cwtl
rcrb
push
pop
push
aas
and
xor
cwtl
sub
and
gs
sarb
mov
stos
sbbl
das
jae
xchg
mov
pop
mov
inc
dec
mov
out
mov
or
call
rclb
xor
lock
sbb
xlat
jmp
push
scas
jle
cmpb
fwait
mov
pop
or
pop
idivb
add
out
mov
filds
mov
out
dec
or
pop
cmp
and
push
jno
jns
js
inc
imull
faddl
adc
pop
in
test
inc
out
nop
jge
sbb
notl
test
int
xchg
sarl
or
sbb
vphadduwd
outsl
scas
iret
cmpb
loopne
icebp
cmovb
sub
lea
test
pop
cs
outsb
rorb
test
add
scas
push
sbb
pop
jge
rolb
sbb
sbb
mov
and
in
jg
xor
popf
js
cmp
lea
inc
add
jne
sahf
jge
mov
mov
jp
pop
loopne
cmc
aad
cmp
inc
mov
inc
xchg
push
jle
pusha
aam
and
popa
mov
mov
popf
xor
pop
es
push
cmp
popa
xchg
les
scas
or
xor
and
in
in
outsl
ret
sbb
in
nop
mov
inc
dec
lods
mov
sbb
sbb
push
ds
mov
mov
stc
jg
add
cmp
xchg
xor
pop
lret
mov
cmp
clc
jmp
pop
push
and
mov
aaa
leave
popa
cld
int3
jbe
and
mov
xor
jo
cmpsb
test
add
in
xlat
push
cmovl
scas
lock
jbe
cmp
shrl
xor
test
jg
inc
into
cli
add
and
dec
icebp
push
add
xor
push
add
cmp
xchg
jae
mov
je
mov
mov
and
adc
sub
mov
js
mov
mov
and
push
adc
into
push
ss
inc
cs
mov
out
test
push
inc
xchg
sti
mov
rcl
stos
addl
fildl
ljmp
mov
into
ljmp
ret
mov
mov
lds
sbb
flds
rclb
cmc
enter
mov
test
sahf
fdivs
add
in
xor
mov
sub
addr16
ja
cld
hlt
int3
push
pushf
mov
out
adc
pusha
arpl
outsb
pop
cmp
fs
movsb
push
mov
fmull
xchg
adc
sub
out
adc
sub
pop
sub
mov
in
sbb
repnz
jae
in
rcll
mov
enter
fldt
sarl
rorl
ss
movl
or
pop
and
stos
lret
dec
sub
in
add
push
test
xor
adc
jne
sub
cmp
shl
cmpsl
rcrb
adc
or
sbb
les
aad
nop/reserved
adc
imul
mov
push
in
push
fwait
out
popa
pop
xchg
xor
lret
pop
inc
imul
ja
imul
lahf
or
or
test
jbe
dec
lds
subb
xor
and
add
testb
jo
add
nop
fs
add
adc
xor
or
or
xchg
inc
movsb
cmp
hlt
xchg
push
or
cmp
inc
jecxz
cmc
insb
adc
jbe
popa
jne
test
or
inc
out
or
jne
push
outsl
pop
ja
fldln2
fadds
fstpt
mov
mov
jno
and
mov
nop
mov
push
xchg
sbb
add
ss
add
cmpsl
inc
cli
inc
stos
insb
sub
ret
fucomip
xchg
mov
aam
into
dec
xchg
gs
inc
push
ss
je
or
push
xchg
jo
out
push
mov
add
iret
movsl
sbb
cmc
fs
mull
sub
xor
dec
and
rorl
scas
jl
mov
stos
xlat
movsb
push
js
inc
addr16
inc
in
add
mov
push
xchg
lock
pop
mov
lcall
cmp
das
or
xor
add
sti
ja
ret
sub
mov
nop
lahf
iret
test
rcr
push
pop
cltd
adc
movsl
js
repnz
cmc
sbb
pop
xor
int3
scas
pop
push
sub
addl
andl
mov
dec
mov
lret
add
dec
lcall
gs
mov
jge
cs
iret
clc
repnz
cmc
mov
insl
and
into
cs
mov
sbb
xchg
push
inc
and
xor
add
lock
movsl
enter
cs
lock
hlt
lods
ja
jl
ja
or
pop
shll
fs
mov
daa
imul
and
aaa
and
push
movsl
pop
sahf
or
sub
or
das
out
pop
int3
mov
adc
js
mov
fdivs
sti
clc
sub
push
test
lahf
push
mov
cmpsb
ret
cmp
sti
push
lods
cli
adc
jmp
mov
mov
adc
pop
repz
push
jbe
es
jl
fstl
loope
dec
push
data16
mov
popf
mov
jno
std
jnp
and
dec
lret
cs
clc
std
xchg
add
sti
movsl
mov
idiv
pop
inc
lods
insb
inc
sarl
jb
mov
push
lock
js
imul
ret
ret
xchg
dec
jge
jge
insl
xor
cmpsl
mov
sbb
insb
ds
lahf
push
cmp
push
inc
repz
sbb
jb
movsb
ds
lret
adc
xor
sbb
xor
stos
mov
test
sahf
bound
xor
xor
mov
gs
cmpsb
subl
jnp
push
jbe
xor
jbe
adc
bound
out
mov
or
data16
jo
lds
shl
xor
std
or
mov
push
cli
dec
cld
push
push
dec
int
mov
push
rcrl
push
push
movsl
add
outsl
push
rolb
mov
or
adc
fisubs
inc
sbb
xor
mov
bound
lea
inc
ret
inc
inc
lea
xor
jne
jge
lret
mov
iret
sbb
inc
and
xchg
jmp
fcoms
daa
sbb
mov
lea
fwait
cmpsb
cmc
sub
push
mov
addps
ret
jno
adc
and
daa
jne
in
daa
lock
and
xor
fmuls
pop
mov
sbb
in
jmp
lods
gs
add
into
shll
or
pop
fildll
insl
bound
cmp
mov
addr16
lret
push
mov
sub
xchg
cmp
test
jns
sti
movsl
test
add
roll
rcll
jecxz
pop
inc
ja
testl
arpl
push
xchg
mov
stos
or
mov
xchg
mov
jae
insl
mov
and
and
mov
mov
in
pusha
mov
mov
cmp
mov
xchg
or
dec
repnz
stc
cwtl
notb
stos
loopne
popf
xlat
subl
shlb
rorb
test
bound
rclb
cmp
cmpsl
push
mov
add
ss
and
insb
mov
js
mov
pop
pop
mov
cmp
xchg
jo
lret
mov
stos
testl
in
sbb
repnz
jmp
scas
xchg
pop
ss
jne
je
jmp
rcll
pop
push
dec
adc
in
inc
push
push
dec
cmc
dec
mov
arpl
push
and
and
adc
cld
jp
jae
mov
xchg
or
dec
js
insl
dec
rcrl
mov
cs
stos
sub
mov
shrl
pop
shrb
ret
and
and
imul
cmpsl
fcomps
xchg
push
movsb
daa
inc
repz
lock
and
add
push
pop
loopew
and
cli
leave
sub
or
enter
call
add
push
inc
stos
test
push
ljmp
sub
in
in
rcrb
in
mov
mov
notb
cmp
enter
add
mov
xor
fucomip
pop
sbb
cmpl
pop
mov
lock
test
cmp
mov
outsl
xchg
or
rcrl
mov
xchg
int3
int3
cmpsb
jp
mov
data16
fisttpl
jae
push
xor
sub
ja
fnstenv
jnp
sub
incl
mov
mov
leave
or
dec
mov
in
sbb
cmp
pop
pop
cmc
sti
fldt
push
in
sbb
roll
push
cmpl
xchg
push
dec
es
icebp
das
mov
cmpsl
mov
not
flds
inc
shr
cmp
in
enter
movsl
mov
sbb
lahf
hlt
cld
cs
cltd
push
xor
xchg
mov
cmpsb
shl
jl
mov
in
outsl
cmc
mov
mov
xor
imul
in
push
les
pop
jecxz
sub
jge
sub
pop
xchg
or
cltd
mov
aaa
and
xor
jb
call
adc
jne
add
jp
js
orb
test
hlt
test
imul
in
mov
in
jbe
in
outsb
bnd
push
jnp
fldcw
outsl
jbe
pushf
jae
lods
arpl
or
mov
push
popf
xor
ret
jae
mov
test
mov
dec
test
and
push
push
cwtl
dec
lea
lret
cli
or
int3
sbb
xor
test
dec
push
out
imul
iret
sbb
xchg
pushf
mov
int3
cld
lds
imul
sub
out
mov
pop
aad
adc
movsb
jmp
and
iret
mov
aam
xor
inc
dec
sub
ret
insl
dec
bound
enter
insb
sbb
add
cmp
into
lret
lds
data16
lods
dec
jmp
jmp
int
lea
ret
jo
dec
fucomi
push
out
pop
mov
mov
mov
in
mov
movsb
cmp
add
lret
xchg
orl
adc
cmp
inc
imull
inc
pop
xchg
andb
arpl
pusha
enter
roll
mov
pop
sub
or
jbe
in
syscall
adc
dec
sti
adc
pop
sub
xor
iret
rcll
inc
inc
pop
outsb
jg
repz
imul
jp
jbe
test
mov
push
sahf
xor
mov
sbb
mov
sub
adc
hlt
cmpb
cs
js
jbe
sub
push
cmp
jge
outsl
jns
xchg
sbb
push
dec
cmp
and
xchg
fs
inc
mov
repnz
scas
fidivrl
sahf
test
fadds
jl
adc
adcl
sete
inc
cli
dec
dec
lock
lock
dec
push
stos
push
std
mov
mov
mov
xchg
push
pop
in
inc
push
adc
xor
mov
dec
lcall
sbb
sti
xchg
enter
mov
dec
loop
xor
jmp
cmc
cmp
arpl
in
xchg
xchg
test
push
pop
ret
lret
ficoml
mov
jae
mov
push
call
sub
cmp
add
pop
and
inc
fxch
add
lcall
stos
pop
pushf
mov
iret
adc
js
mov
pop
neg
inc
mov
and
movsl
add
and
push
scas
rorb
push
mov
test
mov
jae
fimuls
inc
add
shl
fnstsw
pop
stos
imul
sbb
push
rorb
push
jge
jecxz
xchg
out
xchg
dec
jecxz
jp
sahf
and
pop
out
jne
inc
sub
lahf
cld
push
lahf
jl
loop
sahf
repnz
sbb
test
aad
dec
or
nop
fcoms
jl
adc
sti
fninit
push
int
cmc
fnstsw
add
icebp
rcr
inc
imul
push
addb
pop
cli
xchg
daa
and
test
cmpsl
adc
add
in
dec
popa
js
aaa
cmpsl
inc
and
lret
fadds
test
mov
out
push
cmpb
test
mov
sbb
aam
jecxz
xor
lock
adc
push
mov
femms
adcl
orl
insl
xorl
mov
les
fisubrl
cmpsl
in
pop
xor
sub
popa
mov
xor
cmp
jbe
add
cld
data16
js
in
pop
dec
dec
sbbb
dec
dec
xchg
dec
xchg
aam
sub
pop
mov
adc
arpl
push
loopne
mov
jmp
outsb
cmpsl
dec
push
jmp
adcl
push
mov
imul
jmp
sbb
push
xchg
mov
mov
inc
adc
mov
pop
xchg
pop
sbb
xchg
imul
sub
xchg
pop
push
enter
out
xorl
stos
mov
mov
pop
fwait
cmp
dec
pop
jno
cmpsl
in
inc
repz
popl
or
sbb
daa
mov
test
mov
add
mov
mov
cs
cwtl
sub
add
mov
xor
pop
pop
mov
push
pop
mov
js
cmpb
fs
cmp
hlt
jbe
lret
xlat
aad
mov
ss
fdivrs
ficomps
stos
jp
outsb
in
rorl
inc
or
pop
je
pushf
cmpl
out
rclb
sub
inc
out
inc
enter
loopne
loop
enter
push
repnz
mov
mov
xlat
jmp
jg
or
pop
inc
fdivs
and
insl
pop
mov
ficompl
dec
adc
pop
cmp
inc
imul
loope
mulb
movsl
push
test
stc
fsubs
repnz
dec
dec
shll
aam
sbb
jb
xor
aas
and
je
test
pop
push
or
adc
sti
adc
cmp
int
cs
mov
cmp
jne
loopne
and
hlt
xor
inc
fcompl
and
xchg
popf
xchg
push
push
xor
sbb
adc
mov
and
jp
insb
ja
int
in
cmp
inc
mov
adc
inc
bound
into
in
ss
ds
enter
and
call
scas
sub
inc
cltd
gs
or
add
pop
xor
icebp
rorb
lret
rol
push
mov
mov
sub
pop
out
or
jmp
adc
popf
mov
sub
xchg
mov
out
jmp
test
cli
andb
jb
pop
test
lds
push
xchg
and
xor
lods
int3
lret
sti
pusha
cld
out
adc
pop
cmp
dec
loope
mov
inc
inc
xor
sub
pop
xchg
add
push
jl
subb
mov
jle
out
xor
outsl
inc
xchg
dec
jns
cmp
or
cmp
mov
mov
push
jmp
pop
push
divb
bound
push
jmp
xor
fwait
lds
aaa
add
imul
jb
jg
dec
cmp
adc
std
adc
and
daa
push
xchg
out
mov
movsb
adc
rol
push
loop
sbb
push
xchg
mov
push
rorb
aam
fchs
cmp
in
in
je
cmpb
mov
sub
dec
and
aam
adc
dec
push
leave
jp
push
jne
cli
and
jge
popf
xor
sbb
je
jge
sti
loop
in
dec
or
mov
push
mov
jp
incl
sub
xor
mov
inc
add
in
pop
dec
leave
cmp
inc
or
iret
fists
pop
gs
dec
inc
dec
adc
add
inc
sbb
test
scas
mov
orl
mov
inc
jmp
mov
mov
add
mov
stc
mov
out
popf
mov
in
cltd
or
or
push
dec
fildl
fs
in
mov
xor
bnd
insb
push
das
xlat
popf
cmp
mov
test
gs
aad
pop
hlt
push
mov
push
cld
aaa
call
xchg
pushf
clc
mov
xchg
scas
adc
jmp
mov
mov
push
push
out
push
jne
xchg
sub
test
sub
xchg
mov
sub
adc
fsubr
mov
mov
pop
adc
pop
test
inc
push
push
and
and
dec
outsb
mov
push
xchg
or
push
mov
imul
jnp
xor
or
sbb
adc
and
cmp
fstp
insl
pusha
add
pusha
or
rcl
cmpl
lcall
shl
lock
jns
or
daa
mov
fsubs
int
cld
out
insb
mov
cmp
je
cmp
inc
cltd
das
push
xor
cmp
cmpsl
outsl
mov
pop
pusha
out
icebp
push
lods
out
jecxz
jne
jg
stos
or
lcall
cld
mov
lock
pop
pop
lock
fwait
pop
or
pop
fnop
aaa
xchg
mov
cmp
xor
fidivl
clc
insb
pushf
inc
test
scas
jl
push
dec
outsb
push
pushf
mov
fadds
in
sarl
dec
stc
cmp
and
sbb
sti
loope
sarb
mov
sbb
mov
adc
mull
cmp
fcomps
inc
cmpsb
fcmove
mov
into
sahf
test
in
pop
aad
xchg
mov
and
xchg
and
xchg
add
inc
adc
in
pop
add
das
sbb
loop
and
ret
push
aam
hlt
push
addr16
sub
scas
das
test
xchg
shll
mov
aaa
aas
dec
ss
pop
popf
sbb
iret
insl
cli
xchg
and
fidivrl
stos
sahf
int3
and
cmp
push
das
repz
xor
ja
in
sahf
out
enter
sub
mov
cmp
scas
leave
inc
jae
mov
sbb
stos
popa
sub
mov
push
mov
mov
lods
cwtl
mov
pop
cwtl
insb
jge
jnp
and
cld
stos
stos
repnz
jge
cmp
jnp
cmp
cmpsl
ffreep
inc
push
repz
pop
push
push
sub
insl
mov
jb
pop
in
add
mov
fwait
std
sbbl
fisubl
addr16
xor
lods
pop
lahf
jnp
inc
mov
hlt
xchg
dec
or
adc
lahf
mov
test
ret
inc
fstpl
arpl
nop
popa
out
adc
xor
mov
cli
mov
pop
push
sbb
outsb
and
add
test
rcr
and
fs
dec
pop
dec
mov
clc
cmpsl
outsb
xor
or
push
movsl
adc
hlt
inc
dec
js
sub
xor
icebp
std
std
sbb
push
out
mov
ja
pop
jg
xchg
jp
ljmp
imul
push
jbe
cmpl
ret
outsb
push
jbe
icebp
loopne
repnz
loopne
adc
repz
loope
add
and
sub
pop
sub
lahf
xor
lods
cwtl
shlb
jmp
push
mov
jmp
nop
xchg
xor
add
mov
cmp
and
xchg
xlat
stc
daa
push
adc
cwtl
fldenv
mov
mov
xlat
add
push
cmp
dec
xchg
cli
pop
sahf
outsb
test
out
mov
inc
sub
repnz
cmp
cmpsl
sbb
inc
loope
or
sub
xor
ficoms
push
mov
mov
mov
in
divl
rcr
or
push
mov
in
insb
mov
dec
push
inc
and
fdiv
jo
gs
dec
adc
push
inc
aam
add
mov
sarb
and
xchg
clc
xchg
jnp
outsl
push
dec
push
lock
pop
test
cmp
and
cmp
test
pop
lret
mov
adc
cmpsb
add
sbb
pop
dec
sub
ss
inc
xlat
jo
in
add
cmp
lahf
fcomps
movsb
inc
dec
movsb
ret
cmp
aas
mov
adc
shlb
cli
pushl
clc
mov
loopne
add
ficoms
rcrl
sub
fs
lcall
in
test
adc
push
movsb
or
xchg
push
jl
ret
and
aam
mov
out
sbb
mov
mov
pop
imul
jbe
dec
cmp
inc
pop
int3
out
or
add
and
inc
lcall
push
lcall
jecxz,pt
in
xchg
mov
jle
and
mov
dec
mov
cld
mov
cmp
mov
sub
jne
and
aam
adc
push
into
dec
sbb
cmp
xor
cmp
sar
jge
jp
jno
sbb
int
xchg
push
stos
sbbl
cmp
fs
add
gs
mov
lcall
into
xchg
add
pop
out
shl
pop
in
lcall
jmp
jmp
pushf
sbb
mov
push
ss
daa
xchg
clc
pop
iret
mov
cmp
movsl
bound
insb
in
cmp
xchg
pop
cmpsl
push
ljmp
rorl
outsl
push
stos
adc
or
sbb
insb
add
rcll
icebp
outsb
jg
sub
add
add
sub
aad
loope
adc
push
push
inc
lret
fsubrl
push
lea
mov
mov
jo
xchg
out
das
shr
push
imul
loope
repnz
imul
sarl
in
push
addl
xchg
iret
lods
out
movsb
mov
test
sahf
xor
dec
mov
jne
repnz
mov
in
jp
inc
lahf
repz
test
or
int3
push
fstl
mov
xor
dec
aam
xor
jbe
pop
sub
adc
push
lret
daa
aas
stc
xchg
jnp
stos
rorb
and
mov
inc
scas
sbb
and
mov
sbb
jns
push
popa
mov
fwait
iret
aaa
jnp
add
or
sub
arpl
addr16
or
inc
xlat
cld
cmp
loopne
sub
movb
fildll
jnp
inc
dec
push
push
cmp
pop
ljmp
lret
add
fiaddl
mov
adc
xchg
test
insl
inc
mov
push
rolb
in
addr16
cmp
jg
lods
jle
adc
jae
sub
fnstsw
jae
push
and
mov
and
loopne
adc
int
mov
es
or
push
ss
in
es
stos
jp
sbb
xchg
xor
loopne
hlt
add
in
mov
ja
sbb
mov
xor
idivl
das
mov
cmpsb
iret
lahf
outsb
xor
lea
orl
test
mov
mov
pop
inc
fidivrs
and
stos
mov
faddl
add
mov
mov
mov
and
dec
bound
jns
push
js
inc
adc
mov
push
or
jns
adc
mov
mov
pop
inc
xlat
jb
test
pop
xor
sbb
decl
es
push
out
push
mov
test
pop
nop
mov
xlat
or
push
in
iret
mov
sub
lcall
add
adc
and
push
sub
enter
push
cmp
clc
ss
out
and
mov
fsub
push
push
jecxz
jo
mov
xor
shll
and
je
mov
dec
pop
mov
cmp
pop
adc
or
add
jno
aam
pop
fisttpll
daa
cmpsl
xor
orb
cmp
outsb
sub
push
popa
pop
iret
dec
fs
sub
fadd
les
rcr
scas
outsl
in
and
cmp
adc
mov
loop
push
push
inc
cltd
lods
sub
mov
xor
lcall
inc
js
hlt
mov
sbb
jne
aam
lods
leave
jo
movsl
addb
fbld
sub
cs
shl
jg
or
inc
or
popf
in
xlat
sub
jmp
je
add
dec
scas
xchg
int
popa
add
out
inc
adc
addr16
mov
jne
jb
push
and
mov
jp
push
out
test
jb
xor
mov
insl
movsl
mov
or
punpckhdq
in
cwtl
sub
fdivrl
and
das
or
adc
imul
xchg
cmpl
or
pop
xor
sbb
jge
in
js
inc
fldl
out
int
lcall
cmpsb
movsb
xlat
cmp
fcmovb
cmp
test
aaa
arpl
aam
pop
jnp
fucomi
add
xor
fbstp
rolb
cmp
mov
sbb
int
mov
xor
push
sbb
lret
jle
pushf
mov
mov
test
push
mov
clc
mov
loopne
push
sbb
fidivrl
movaps
jbe
or
xchg
into
arpl
jl
popf
mov
gs
jno
pop
adc
ja
or
rol
fs
in
push
dec
xchg
movsl
cmp
fistpll
mov
fisttpl
cld
sub
testl
pop
aam
add
dec
lods
xchg
inc
or
sahf
xor
mov
ds
xlat
fcomi
xlat
add
xchg
sub
cs
inc
jmp
popf
ss
xchg
movsl
jg
nop
dec
pop
and
aam
ret
pop
shrl
lahf
inc
jns
loopne
pop
mov
dec
or
ficoms
cmpsb
sub
xchg
add
clc
test
loopne
mov
dec
or
cmp
cmp
and
and
mov
inc
stc
xor
pop
add
fstl
dec
xchg
add
cld
inc
je
or
test
jle
cmp
cwtl
out
mov
test
push
add
lea
mov
push
sbb
cltd
jecxz
push
add
int
out
repz
in
sub
pop
ljmp
js
jns
dec
and
sub
cmp
xchg
gs
cwtl
shll
mov
movsl
in
test
das
add
dec
movsl
jmp
loope
xchg
loope
addr16
out
push
test
cmp
scas
dec
push
sub
adc
int
jo
aam
inc
mov
repz
jg
fmull
inc
lret
sbb
sbb
jb
ret
jl
mov
mov
mov
jo
xor
cmpsb
sbb
push
inc
cmp
add
adcb
sub
sub
inc
cli
shld
sub
mov
mov
call
push
fldcw
scas
push
adcl
stc
fsubs
scas
cmpsb
push
leave
mov
xor
xlat
addl
mov
mov
jae
and
int
sbb
jp
pop
out
mov
mov
or
and
daa
es
out
je
mov
cmc
sub
jbe
jnp
cs
xchg
sbb
cltd
sti
out
mov
fistpl
jo
inc
inc
insl
popa
cmp
out
cli
ret
test
comisd
fs
leave
mov
dec
jne
push
and
cltd
rorl
pop
pusha
pop
jno
lret
pop
adc
adc
xchg
cmc
dec
mov
fists
inc
or
les
xor
in
aaa
out
jl
sahf
mov
lcall
imul
rorl
jo
insb
inc
push
xchg
push
stc
dec
movsl
xchg
xchg
cli
sarl
push
fstps
pop
push
push
sbb
xor
stos
sbb
sbb
aam
sub
add
cmpsb
outsb
shr
inc
and
adc
push
sub
cmp
sarl
ret
fwait
in
mov
out
rcrb
mov
jge
adc
shll
adc
push
sbb
cmp
adc
rorb
loope
pop
sub
dec
stos
mov
shrl
jno
xchg
fidivrs
js
dec
mov
ljmp
fcmovbe
jns
sbb
popl
xchg
cmpsl
fidivs
cmp
aad
ljmp
fdivl
daa
aad
cmp
fidivs
pop
xchg
aas
ret
and
mov
jae
pop
mov
inc
jmp
pop
mov
pusha
mov
lea
cmpsl
ret
mov
movsl
xchg
in
lahf
enter
lds
pop
dec
pop
sti
aam
inc
fstl
andl
cmpsl
or
or
das
sbb
mov
cmp
sbb
addr16
push
mov
lahf
ret
inc
test
cmpsb
xor
aas
push
popf
outsb
scas
es
iret
fiaddl
inc
adc
inc
mov
aas
add
leave
mov
mov
xchg
lcall
insb
je
das
push
ficompl
add
xor
mov
mov
cmp
in
loop
fstpt
sub
mov
subl
out
mov
fistpl
and
or
cmc
mov
sti
shrb
inc
js
and
rorb
iret
setno
adc
xchg
mov
adc
cmc
pop
add
aam
push
inc
loopne
jns
jns
ret
dec
scas
insl
inc
int3
push
mov
andl
cwtl
push
in
sbb
into
sbb
fdivr
stos
lret
mov
ja
sub
mov
and
inc
imul
cs
jae
mov
call
lcall
outsb
mov
popf
call
push
pop
es
mov
xor
push
jl
cmp
dec
mov
shl
flds
sbb
dec
repz
and
dec
dec
xchg
leave
sub
int3
xor
nop
test
and
in
sub
mov
xchg
faddp
mov
inc
cmpsb
push
sub
insb
dec
mov
fcoml
ljmp
in
pushf
push
cmp
imul
mov
pusha
shlb
cmp
cmp
xchg
jae
push
inc
add
imul
jmp
adc
mov
aam
mov
pop
test
push
lods
or
adc
movsb
dec
or
inc
or
rcrb
sbb
call
or
in
rclb
xchg
inc
shll
mov
sbb
iret
data16
hlt
imul
int3
aaa
popw
popa
mov
fistpl
dec
inc
xor
popf
filds
pop
jo
scas
movsb
decl
push
push
cmp
xchg
inc
out
sbb
shr
imul
mov
pop
push
movsl
and
pop
mov
sub
mov
negb
push
pop
test
and
pop
mov
popf
and
clc
or
jle
inc
lret
or
jnp
out
pop
and
push
add
repnz
or
mov
pop
inc
mov
inc
sbb
xchg
mov
outsl
movsl
pusha
rorb
push
cwtl
test
cld
popa
in
push
pop
lahf
aad
lods
pop
pop
add
cltd
cmp
pavgw
xchg
loop
sti
adc
jg
mov
or
in
sarl
ja
xor
dec
xchg
push
push
xor
pop
in
test
sahf
adcb
cmpb
adc
fucom
data16
mov
or
add
mov
scas
subl
test
add
xor
cmc
movsl
mov
daa
adc
insb
loope
in
pushf
mov
cmp
sub
imul
or
lods
pause
dec
xchg
jnp
inc
xchg
mov
pop
jne
pop
in
adc
ljmp
xchg
mov
fidivrs
and
xlat
cmp
jo
pop
push
sub
enter
data16
inc
and
das
push
xchg
adc
bound
rcrb
pop
pushf
mov
jne
mov
xorl
jnp
cmp
cwtl
stos
adc
test
mov
mov
cmpsl
loope
movsl
movsb
sbb
lret
hlt
rclb
fbld
loop
jmp
inc
push
pop
mov
xchg
leave
pop
add
inc
ja
cmp
dec
pop
mov
out
xchg
sbb
test
fsubs
andl
mov
push
imul
imulb
xlat
lahf
mov
and
jb
adc
imul
enter
rolb
arpl
js
and
sbbb
rolb
ljmp
push
cmpb
xor
jo
lods
pop
xchg
jns
in
jl
pushf
shlb
dec
dec
sbb
rcr
jge
lods
js
outsb
rcrl
push
push
dec
cmp
mov
arpl
ret
pop
xor
lods
inc
jge
xchg
pop
rcll
in
inc
lock
pop
pop
xor
into
lahf
call
out
mov
push
mov
jbe
inc
daa
les
cmp
cmpsb
addr16
sub
fld
cli
out
sbb
inc
cmpsl
inc
jge
xlat
cmc
iret
bound
js
in
xchg
pop
roll
adc
daa
movsb
jnp
jne
sbb
sti
jl
jbe
mov
stos
mov
pop
repnz
or
loope
cmp
adc
cmp
cld
fwait
dec
daa
scas
lods
test
sub
sub
leave
imulb
pop
push
cli
outsb
int3
insl
test
push
mov
jge
in
push
dec
and
cmp
movb
jge
cmp
negb
test
inc
mulb
stos
add
xchg
sarl
jbe
lods
cld
inc
test
fdiv
sti
and
and
out
outsb
fstl
stos
sub
lods
imul
xchg
adc
cmp
ret
stos
mov
mov
push
repz
mov
xchg
adc
xor
dec
ss
mov
xchg
mov
xor
mov
lret
xor
jne
idivl
lahf
int
inc
jae
insb
dec
adc
inc
and
push
movb
dec
xor
sbb
mov
nop
jo
clc
inc
mov
push
fistl
push
mov
sbb
pusha
shr
mov
in
xchg
loop
lret
cmp
xchg
xor
mov
call
enter
aaa
test
sub
inc
mov
inc
call
mov
inc
xor
imul
xchg
into
loopne
out
push
sub
in
out
in
sub
ret
xchg
xchg
pop
daa
mov
scas
lcall
adc
lea
sub
adc
mov
lods
sbb
hlt
mov
mov
jns
test
mov
jle
ss
mov
xor
ret
jge
fdivrs
push
icebp
adc
push
xchg
mov
fsubr
out
push
lods
in
mov
inc
pop
push
lock
jae
divb
insl
leave
pop
and
sub
into
inc
insl
icebp
push
int3
mov
dec
hlt
push
testb
mov
cmpb
outsb
fadds
fisubrs
shl
sbb
jg
lcall
daa
stc
sahf
jecxz
dec
loop
das
xchg
pop
iret
dec
dec
scas
sti
push
xchg
push
cmc
divb
push
dec
lods
movsl
or
cltd
xchg
enter
and
test
adc
pop
adcb
aad
fnstenv
aaa
sub
stos
or
jb
mov
cld
mov
es
pop
in
pop
xor
cmp
adc
pop
push
adc
lds
fs
or
sbb
add
out
leave
shll
jbe
inc
sbb
mov
fists
mov
imull
leave
xchg
push
aam
fcompl
push
lcall
rorb
mov
mov
or
push
mov
jl
fnstenv
jno
jp
inc
movl
fcompl
fs
sub
dec
orb
jne
xchg
loope
data16
cmpb
mov
push
lods
push
xchg
sbb
cmp
or
sbb
xchg
add
pop
mov
cwtl
shl
pop
push
push
popf
ljmp
mov
hlt
push
add
sbb
pop
stos
loopne
aam
aam
test
sbb
jne
mov
in
push
loopne
test
cmp
lods
shr
push
mov
sarl
mov
adc
subb
mov
adc
sbb
mov
mov
mov
cmp
xor
mov
or
xor
push
imull
aaa
fdivs
mov
adcb
daa
iret
or
leave
sub
ds
flds
fldt
loope
stc
clc
subl
adc
jne
cmpsb
pop
push
enter
mov
les
int
int3
jge
js
je
xchg
lret
lahf
and
or
add
ja
adc
fs
add
loop
shll
fs
loopne
int3
inc
cmpsl
push
leave
jb
popl
mov
xor
cmove
add
sbb
std
jecxz
push
ret
mov
xchg
inc
int
push
inc
inc
popa
mov
xor
lods
adc
jo
mov
or
es
movsl
adc
mov
imul
or
mov
lock
mov
aaa
leave
mov
pop
jnp
add
inc
shlb
lods
test
rclb
out
rol
mov
fmul
movsl
mov
fldl
movsl
js
pop
inc
ss
push
jl
sub
adc
sub
xchg
adc
cmp
lds
and
mov
lock
mov
test
mov
mov
daa
call
test
bound
loop
mov
jg
ja
jns
or
dec
push
mov
and
cmp
imul
mov
loop
test
pushf
adc
and
lea
cmp
pextrw
lea
pop
cmc
negl
jge
mov
xor
mov
shll
sbb
notl
dec
cmpsl
clc
push
xchg
push
js
cmp
dec
mov
jae
subb
mov
in
push
and
shr
mov
aad
lahf
dec
inc
adc
xchg
out
and
ds
ficoms
adc
sahf
icebp
lods
pushf
jle
mov
cmp
jle
cltd
sub
mov
mov
faddl
repnz
add
sbb
bound
push
and
xchg
xchg
nop
jecxz
fwait
lods
pop
cld
imul
and
lea
push
adc
repnz
inc
sbb
xchg
cmpsb
shrl
jmp
jg
js
cmpsb
fxch
jl
mov
and
fstpl
les
aad
adc
loope
int
data16
ror
cmpsb
getsec
std
jle
pop
cs
fistpl
je
mov
les
sarl
icebp
xchg
mov
add
hlt
dec
leave
andb
into
sbb
repz
int
push
xor
add
out
es
xor
push
adc
loop
pop
inc
jnp
cmpsb
mov
cmp
sub
dec
rcrb
dec
mov
scas
cmpsb
loopne
adc
mov
sbb
pop
mov
rcll
int
pop
xor
mov
iret
mov
jns,pn
add
int3
and
mov
dec
sbb
enter
adc
pusha
xor
sub
dec
adc
mov
aas
cmc
pop
imul
fnstcw
pop
bsf
mov
movsb
pop
aaa
cltd
sbb
sbb
sbb
adc
xor
pop
shll
and
mov
scas
sub
pop
inc
insl
leave
inc
std
pop
into
push
cmovg
cmp
jnp
push
mov
mov
cld
dec
rol
add
cmp
subb
adcl
dec
xchg
movsb
and
and
jge
jecxz
stos
sbb
or
inc
cmp
dec
jae
stc
mov
xlat
popa
nop
mov
sbb
cmpsl
add
mov
pop
xchg
cwtl
mov
pusha
cmp
daa
push
lds
xor
push
adc
fistps
ret
fs
jmp
scas
js
daa
ja
subps
xor
es
xchg
das
jnp
xchg
adc
lret
leave
jecxz
add
mov
bound
clc
mov
imul
adc
dec
inc
addl
cmp
rcll
ret
pushf
mov
cwtl
adc
insl
addb
fcoml
jle
and
fcompl
dec
sti
mov
xchg
jp
or
in
xor
fnsave
jl
dec
and
psrlw
stos
push
jb
mov
jmp
es
fnstcw
fsub
shll
repnz
andl
scas
lea
out
inc
or
shrl
mov
test
push
xchg
negl
or
cmpsb
repz
aas
mov
daa
mov
pop
mov
out
sar
pop
stc
testl
ror
std
jo
mov
dec
enter
mov
lds
js
mov
fsubs
out
pop
pop
add
loope
fs
jbe
les
mov
lds
aam
scas
jg
mov
and
arpl
xor
dec
dec
adc
mov
dec
test
sub
scas
lods
cmc
push
insb
push
shll
push
cltd
dec
mov
xchg
pop
shrb
pop
in
pop
inc
sub
mov
sbb
fldt
repz
test
pushw
jecxz
das
mov
test
and
daa
push
and
mov
mov
hlt
xor
add
hlt
pop
nop
lods
sub
flds
cmp
pop
out
push
inc
scas
mov
punpckhdq
pop
or
shll
ret
dec
ljmp
push
mov
push
lods
sbb
jbe
fisubs
shl
and
pop
jnp
scas
pop
push
lods
mov
lret
xor
je
mov
loope
dec
mov
lods
scas
add
add
pop
icebp
repz
jge
stos
fmulp
iret
jo
mov
dec
bound
pusha
cmpsl
adc
data16
push
mov
int
popf
sti
stos
push
pop
sub
sbb
adc
mov
jo
bound
out
out
std
or
cmc
pop
push
jecxz
dec
ficomps
popf
xor
scas
mov
hlt
arpl
inc
das
inc
cmp
add
stos
je
shlb
les
idivl
push
adc
outsb
pop
test
mov
cmp
stc
fwait
xor
insl
adc
popa
lock
sbb
arpl
pop
cmp
sti
enter
fwait
mov
pop
sarb
mov
pop
ret
jge
repz
mov
bound
push
mov
xchg
mov
add
gs
and
xchg
pop
mov
mov
mov
notb
sbb
popf
imul
imul
pop
mov
int
scas
rcrb
sbb
xchg
cmp
push
das
add
daa
adcl
cwtl
repnz
insb
scas
call
sti
jb
lods
adc
dec
add
pushf
aad
xor
jecxz
scas
jae
mov
int3
aas
cld
pop
in
xor
xlat
jno
into
jl
inc
test
outsb
xor
rcll
pop
cs
movsl
mov
sarb
les
dec
pop
jbe
push
icebp
xor
imul
pop
dec
adc
push
jb
mov
adc
dec
test
jo
jmp
shrb
xchg
icebp
addb
ss
pop
loope
movsb
imulb
mov
dec
add
mov
leave
loope
ret
xor
iret
cmpsb
loopne
xor
or
nop
inc
incb
push
add
lods
negl
das
maxps
xchg
test
jno
cltd
pop
sub
pop
enter
dec
pop
lods
fldt
pushf
leave
mov
shl
pop
loop
outsl
rcrb
mov
ret
cmpsb
dec
xchg
push
enter
movsb
dec
lret
push
into
imull
movsl
pop
and
insl
xchg
scas
std
pop
inc
repnz
ret
loopne
mov
cs
out
roll
negb
cmp
push
inc
fbstp
repnz
pop
ss
insb
add
into
dec
cmp
cmp
lret
and
xchg
add
mov
mov
and
xchg
es
and
or
data16
xor
push
jbe
mov
cli
call
mov
inc
jg
xor
xchg
rcrb
into
sti
lods
mov
push
push
and
xor
xor
enter
movsl
mov
arpl
pop
xchg
scas
das
and
xlat
cmp
xor
and
add
or
push
into
fcomps
xchg
push
cmc
das
jo
mov
mov
or
jno
push
mov
cmp
pop
adc
cs
xchg
jp
mov
addr16
push
cmpsb
movsb
jge
jb
xorl
mov
push
jno
lret
icebp
cmp
cli
pusha
cli
xchg
not
xor
add
rolb
insl
leave
fs
cmp
xor
and
popf
adcb
and
int
sarb
pop
movl
mov
jns
sahf
sbb
sbb
movsb
sbb
sbb
ficompl
sub
arpl
inc
test
push
mov
or
mov
push
dec
add
dec
movsl
lods
cli
into
sbb
sbb
popa
insb
sub
lcall
push
push
out
xchg
cmc
adc
lds
test
mov
mov
jg
repz
pop
mov
cmp
adc
loope
rorb
cmc
in
dec
fsubrl
mov
dec
inc
mov
sbb
int3
push
clc
out
jo
jecxz
pop
ja
iret
fwait
mov
sahf
mov
jns
jnp
imul
popf
loope
inc
pop
dec
push
fcoml
pop
movsb
add
in
subl
mov
lahf
mov
cmp
imul
dec
dec
mov
push
enter
out
adc
mov
add
mov
xchg
mov
repz
cmp
push
dec
jg
aaa
mov
cs
les
adc
jge
ja
cmp
pusha
in
mov
and
pop
cmp
in
out
cmpsl
lods
pop
jbe
shrb
in
movl
std
stc
pop
mov
or
jle
sub
sbb
push
lds
lret
cs
sbb
sbb
cmc
arpl
mov
scas
mov
popa
xchg
inc
imul
fdivl
pop
jge
sbb
js
es
xor
jo
xchg
stos
popl
arpl
nop
pop
mov
jnp
pop
dec
fcmovnb
ja
test
in
fsqrt
jno
mov
mov
lcall
xchg
sub
dec
aam
pop
lret
sbb
sbb
fisubs
negb
fnstcw
icebp
cmp
pop
fs
lds
divb
add
sbb
pop
icebp
xor
stos
and
pop
aam
movsl
or
push
pop
sbb
push
mov
add
repz
sbb
xchg
aad
sti
xchg
pusha
pop
push
lods
add
and
lods
push
enter
xchg
dec
lret
push
hlt
fildll
leave
inc
mov
imul
xor
mov
push
fs
shlb
stc
xchg
xor
lret
push
cmp
insl
mov
rep
mov
push
rep
xor
into
dec
fmull
inc
sub
mov
repz
adc
cmpsb
push
inc
add
imul
lods
push
jb
lret
inc
and
rcrb
addr16
lcall
xor
xor
or
push
scas
rcll
ljmp
pop
add
push
rorb
fsubs
out
sbb
stos
lea
cmc
dec
jmp
les
sahf
sti
mov
es
lret
leave
fildl
jl
inc
fs
sbb
push
push
mov
iret
and
cli
xor
or
add
stos
fnstsw
push
mov
dec
mov
dec
sub
xorb
mov
jecxz
sbb
push
jl
sub
shll
icebp
test
push
mov
popf
fisttpll
lods
xor
test
sar
mov
sub
xchg
loop
xchg
push
dec
mov
lea
xor
cltd
addb
mov
mov
aam
push
cmp
icebp
sbb
out
enter
stos
neg
push
in
xchg
lods
lret
lahf
hlt
sub
mov
push
mov
insl
pop
mov
rcll
xorl
xchg
int
daa
gs
jg
mov
movsb
mov
adc
jmp
jns
add
jns
ss
dec
sarl
jne
dec
bound
or
outsl
mov
xchg
clc
shlb
iret
lods
pop
pop
lods
pop
sti
adc
aam
sbb
sahf
mov
dec
in
xchg
push
or
call
inc
or
lock
outsb
movsb
out
lcall
pop
pop
fnstsw
jp
mov
call
and
xor
bound
xlat
aas
xchg
sbb
cmp
dec
cmp
cmpsl
dec
xchg
test
outsb
mov
sahf
mov
fsubrs
xchg
mov
jl
xor
sbb
les
jnp
mov
push
loop
adc
sub
dec
ljmp
mov
gs
in
scas
inc
loop
push
in
mov
push
xchg
xor
ficoms
xor
inc
lcall
or
shlb
dec
mov
rorb
popa
inc
call
shlb
jns
sub
gs
icebp
jbe
xchg
jbe
push
mov
jbe
or
repnz
sub
xchg
pop
xchg
out
out
dec
jo
xchg
or
in
out
and
jg
cld
cltd
or
jl
movsl
rcrl
nop
inc
mov
xor
mov
xorb
cmp
cmp
out
jg
rorb
popf
jae
push
mov
cmpsl
push
nop
fstp
push
jns
mov
mov
shrb
lahf
add
pop
or
js
sahf
or
jo
or
add
inc
jge
jle
test
or
or
xchg
mov
inc
cmp
and
mov
das
mov
outsl
int
mov
cld
mov
nop
dec
cld
aam
lret
dec
dec
std
lret
jg
test
inc
sbb
push
aam
add
mov
jmp
mov
pop
mov
cwtl
xchg
shlb
outsl
mov
fwait
dec
push
aas
adc
adc
or
loope
fs
jge
std
scas
pop
sub
roll
ds
lret
enter
sbb
fiadds
xchg
push
jle
rcll
push
pop
jo
xlat
fwait
xlat
nop
push
cmpsl
repnz
fnstcw
out
push
in
xchg
hlt
and
jg
movsl
pop
jmp
iret
xchg
cmp
adc
fsubrl
fldenv
imul
pop
cmp
mov
mov
repnz
xchg
das
in
rclb
add
mov
ds
repnz
mov
rcll
mov
dec
imul
rorb
iret
mov
cmp
xor
or
cli
or
pusha
fdivrl
and
cmp
pop
ja
push
xor
test
xchg
push
and
xchg
sti
pop
sbb
call
or
xor
dec
xor
popa
inc
mov
cmp
scas
ds
add
jne
pusha
dec
jns
mov
aad
pusha
pop
inc
call
fstl
xchg
pop
cmp
xchg
push
mov
repnz
out
shrl
dec
loop
lods
aam
iret
pop
arpl
out
outsl
pop
xchg
and
add
fsubrs
out
mov
nop
xor
outsl
dec
and
jg
test
push
dec
in
sbb
imulb
inc
mov
cmc
xchg
adc
cmpsl
cmp
adc
mov
adc
ret
popf
js
stc
scas
repnz
xor
imul
lret
add
sti
popa
shrl
out
mov
ficomps
mov
jb
add
loopne
mov
das
in
jmp
pop
sub
or
pop
cmc
in
rcrl
and
aas
cmp
sbb
jle
xchg
sub
sub
mov
mov
mov
imul
es
aas
sahf
ror
std
fdivl
adc
push
bound
insb
mov
sub
dec
pushl
cmp
call
add
mov
sbb
mov
and
jp
inc
mov
adc
shrl
dec
shlb
cmc
cmp
imul
jnp
inc
mov
push
adc
add
mov
mov
lods
aaa
jnp
xchg
orl
sbb
add
or
pop
cmp
mov
test
pop
sbb
mov
adc
ja
lcall
mov
add
popa
int3
adc
cmpsb
mov
add
xchg
cmpb
insb
daa
xchg
mov
addr16
and
stos
test
or
inc
cmp
cli
push
jns
ljmp
int
cltd
in
jmp
loope
xchg
ss
pop
push
in
and
xchg
insl
testl
sahf
lret
ret
jl
lret
mov
movsl
cmp
push
js
test
and
loopne
sbbb
daa
pushf
setno
outsb
xchg
sbb
cmp
ret
add
push
ret
aas
cwtl
fcoms
js
sahf
push
sub
arpl
push
sbb
jbe
test
mov
lds
adc
add
push
stc
pusha
fldenv
mov
pusha
and
push
fildl
or
js
leave
repz
mov
mov
test
loop
cli
adc
hlt
cs
mov
sahf
dec
push
xchg
mov
jl
sbb
pop
sti
ja
sub
push
jmp
nopl
push
dec
pop
loop
mov
sub
jnp
or
push
dec
ss
fistpl
mov
mov
std
ds
test
cmp
fmul
adc
mov
popf
daa
mov
ds
lret
cmp
xchg
test
adc
jae
jmp
sbb
int
sbb
jbe
push
pop
out
pop
sti
mov
ja
loopne
loopne
and
adc
cmp
mov
or
int
or
mov
xchg
push
aas
adc
xor
fnstenv
adc
add
inc
inc
ss
hlt
mov
dec
mov
mov
es
lock
dec
xchg
xlat
fildl
lret
jmp
mov
sti
or
push
shlb
imul
or
xor
fildl
xor
aas
outsb
or
mov
stc
fisttpll
aad
cmp
xlat
pop
scas
out
or
test
sbb
jecxz
adc
cs
adc
outsl
adc
or
mov
mov
aad
mov
xor
jp
mov
fwait
in
rcll
sar
pop
ret
jmp
push
cmpsb
jne
fnsave
sbb
fnstsw
xchg
aaa
add
fwait
std
in
adc
pop
sbb
iret
sbb
stos
sbb
das
lret
popa
jge
aas
push
leave
or
dec
push
sti
int3
bound
mov
xchg
popf
add
adc
ljmp
pushf
scas
mov
insl
scas
xchg
cs
nop
mov
and
rcr
mov
mov
call
dec
int
int3
mov
add
jae
inc
aam
pop
push
inc
inc
and
and
push
cmp
aas
mov
popa
imul
stc
pushf
mov
mov
and
inc
xchg
or
xlat
sbb
pop
xchg
in
in
cmp
jo
push
mov
mov
jle
jns
jmp
or
cmp
shrb
or
dec
ljmp
xor
fdivrs
leave
sbb
leave
sbb
lcall
sub
pop
sbb
sbb
adc
add
dec
rorl
adc
sbb
decl
jg
jno
jae
cltd
lock
scas
jmp
pop
xchg
shll
xor
mov
insb
hlt
mov
out
pop
icebp
arpl
push
push
daa
inc
push
inc
inc
mov
rol
lcall
repz
je
push
mov
adc
stc
cltd
sahf
addr16
jbe
mov
test
addb
or
insl
push
push
push
gs
jae
scas
sub
cs
sarl
xchg
pop
or
ljmp
sahf
jle
mov
movsl
fs
ret
das
xor
imul
lods
push
movsb
mov
adc
lret
shll
jl
mov
and
outsb
cmp
aas
pop
aad
dec
dec
in
loop
aaa
inc
mov
cld
out
pop
mov
xor
cmp
imul
shrb
das
mov
out
cmp
inc
loopne
mov
std
fimull
or
jno
dec
push
dec
mov
test
in
or
sub
adcl
cli
mov
cltd
mov
sub
mov
sub
cmpsl
leave
push
call
gs
dec
jle
aas
cld
xor
jno
fisubrs
mov
fstpt
out
jae
mov
push
add
std
test
stc
nop
inc
or
add
ds
jo
inc
mov
jae
and
mov
adc
outsb
ret
and
outsl
sbb
mov
cld
in
sbb
mov
and
dec
testl
mov
mov
nop
or
xchg
shl
cld
cmp
pop
xlat
jo
push
or
ljmp
sbb
les
mov
stos
push
pop
repnz
push
test
mov
icebp
or
rolb
dec
jo
leave
xor
aam
cmp
pop
xchg
cli
cltd
pusha
xlat
push
add
in
jmp
inc
dec
push
repz
jmp
lahf
push
xchg
iret
rcrb
repnz
mov
rcrb
pop
loope
test
adc
xor
cmp
out
jge
jae
imul
dec
push
sbb
gs
fstl
push
std
mov
insl
les
xor
ret
fxch
jno
pop
push
adc
jnp
add
and
sti
pop
cmc
push
or
inc
testb
and
jo
cltd
sahf
pop
or
repnz
or
sbb
loopne
inc
call
xchg
jae
fnstcw
fs
stos
and
lods
xor
shrl
in
xchg
mov
and
sub
cmp
and
adc
or
lret
movsb
mov
lcall
jne,pt
sbb
xchg
test
dec
rolb
nop
decl
adc
jnp
dec
rcr
pop
inc
inc
out
jmp
sbb
inc
adc
ret
stc
std
sbb
xor
and
clc
outsl
push
mov
fsubrs
mov
cli
data16
xchg
mov
gs
sub
stc
and
sub
push
pmullw
rorb
adc
xchg
fmull
mov
push
and
fs
pop
jg
mov
and
imul
cmp
insl
ljmp
arpl
lea
fcmovb
sbb
mov
scas
repz
mov
mov
push
gs
push
sub
shrb
fwait
sbb
jne
add
push
in
push
mov
push
fwait
popf
fisubrl
int3
add
inc
rorb
jne
movsl
push
push
fs
dec
adc
inc
sub
in
test
clc
stos
inc
xor
adcb
pop
repnz
lea
mov
jno
xchg
pop
pop
daa
jg
pop
insb
cmp
ret
sbbl
sbb
inc
loope
cmp
scas
test
xlat
inc
les
cmp
in
dec
add
push
mov
cmp
daa
sahf
mov
push
or
pop
jae
push
push
mov
in
cld
rol
dec
add
cmp
insb
je
dec
lret
je
out
mov
loop
loopne
cltd
xchg
sahf
mov
cmc
add
sti
les
sbb
ret
jg
push
xchg
jns
outsl
lods
pop
loop
jmp
dec
push
shll
sbb
xor
cmp
jg
and
mov
fnstcw
pop
mov
pushf
out
fwait
adc
xlat
repnz
enter
or
idivb
fsub
sti
loopne
insb
mov
icebp
mov
sub
dec
rcrb
jp
call
sub
test
out
arpl
stc
insl
sahf
insl
insb
jnp
inc
mov
pop
push
fwait
or
mov
mov
clc
mov
push
rcrl
addr16
jmp
cmp
add
and
fs
test
leave
les
and
fmulp
stc
and
cmp
fidivs
and
idivb
mov
sbb
and
dec
pop
ret
fbld
clc
jno
shlb
es
shlb
ds
test
pop
pop
call
adc
iret
out
xchg
inc
xchg
gs
leave
push
adc
push
jmp
inc
fcmovnb
mov
je
sub
jb
xchg
lret
cmp
jmp
push
rcl
xchg
fisubl
jmp
mov
jmp
push
icebp
or
addr16
dec
inc
roll
sub
aaa
cld
jg
bound
cmpsb
mov
fbstp
call
adc
and
adc
adc
jno
jmp
orl
lret
push
sub
pop
sahf
stos
cmpsb
xlat
lret
fcoml
mov
pop
pop
fwait
loope
sub
push
cmp
pop
cmp
addb
xor
out
test
mov
pop
loop
ljmp
push
test
jne,pn
sub
call
shrb
push
scas
movsb
dec
pop
cwtl
sbb
xchg
jp
mov
push
inc
ja
ss
jo
mov
nop
jne
or
andl
add
jb
xor
jmp
repz
or
cmp
sbb
out
lcall
aad
lahf
pop
cli
push
pop
lahf
sub
cwtl
jg
iret
adc
adc
xlat
call
les
cmp
lret
dec
xor
cwtl
mov
mov
dec
mov
cs
pop
sub
cltd
inc
loopne
jecxz
pop
mov
andb
les
mov
int
rorl
pop
out
adc
xor
push
mov
push
insb
and
mov
scas
cmp
loopne
sub
xor
add
and
xlat
repz
add
mov
add
push
shl
out
into
jno
cmp
lret
mov
test
rol
or
and
test
cltd
mov
faddl
sub
sbb
in
repz
sahf
xor
or
insl
mov
cmp
das
int3
cs
pop
out
fisubrl
push
test
xchg
rcl
ret
cmp
movsb
pop
add
mov
pop
cmp
xchg
lock
add
aam
sub
repnz
sbbb
xor
dec
add
xchg
inc
cli
add
mov
in
sub
mov
mov
mov
ds
ljmp
mov
sbb
sub
mov
add
inc
pop
nop
int
xor
mov
xchg
pop
gs
xchg
dec
cmc
out
mov
mov
lea
xchg
aas
lods
cs
pusha
push
mov
cmp
xor
adc
cld
clc
push
fisttpll
stos
jne
into
negl
hlt
shll
jl
fpatan
add
pop
lret
cli
pushf
pop
mov
cmp
cmp
scas
xchg
mov
ss
xor
jns
or
xchg
sbb
aaa
les
push
in
ret
or
clc
mov
leave
mov
adc
jmp
aaa
int3
fldenv
pop
inc
ret
jp
cmpsl
mov
inc
and
dec
xchg
test
xor
ret
add
jbe
adc
cld
xor
fistpll
xlat
push
xchg
aas
mov
leave
fisubs
jns
hlt
scas
notl
fxch
push
aas
pop
sbb
xorb
pop
sti
outsl
jg
pop
mov
cmc
xor
in
stc
mov
test
out
aaa
pop
imul
add
cmpsl
dec
cmpsb
shll
adc
cmp
mov
jmp
cmp
jbe
outsl
rorb
sbb
in
mov
jbe
int
leave
int3
stc
jle
mov
ffree
out
jmp
test
mov
lahf
push
dec
in
dec
lods
enter
mov
xor
lret
mov
inc
js
negb
stos
pop
adc
sub
nop
jmp
in
stc
lds
leave
test
lahf
cld
adc
aaa
hlt
fstpl
jo
sbb
movsl
outsb
leave
iret
fsubl
xchg
int3
cwtl
jl
inc
mov
mov
pop
cld
or
mov
adc
sub
jne
arpl
stos
sbb
out
or
ss
sub
dec
or
cmp
push
xchg
dec
or
inc
pop
sbb
sbb
mov
lcall
push
jnp
xchg
insl
push
sub
rcr
mov
pop
jge
gs
imulb
imul
cmp
repz
jmp
jmp
dec
decl
test
jb
insb
sub
dec
mov
pop
test
push
loopne
sbb
sbb
pop
mov
dec
out
shll
ss
push
mov
cmp
das
sub
cld
jb
ja
ret
xor
mov
dec
fucompp
pusha
dec
das
dec
or
sbb
outsb
mov
inc
das
stos
and
sub
mov
sbb
loop
mov
outsb
sub
pusha
sbb
cld
mov
cmc
lods
nop
mov
lock
inc
pop
xlat
xor
ret
xor
mov
jge
sbb
jo
scas
scas
jp
pushf
in
cmp
jbe
into
sub
insl
ja
push
int3
cmp
decb
in
sub
test
rcll
movsb
cmp
pop
iret
jns
cmpsl
mov
mov
xchg
sbb
jbe
fs
cmp
cmp
fstpl
pop
sbbl
push
stc
test
out
cmpsl
mov
stc
popf
cwtl
add
repz
enter
sbb
lcall
push
cmp
adc
add
loop
shlb
or
jno
mov
mov
cld
roll
xchg
les
jnp
loope
cmp
push
nop
das
jl
cltd
pop
ljmp
xchg
mov
pop
adc
js
mov
sti
cmp
mov
mov
xor
sbb
and
mov
add
push
mov
test
arpl
mov
icebp
mov
sbb
and
out
daa
and
push
jno
lods
int3
push
sbb
mov
in
sub
xor
jecxz
sbb
iret
cwtl
dec
rcll
xor
repnz
sub
xchg
mov
lock
sbb
inc
fdivrl
shrl
xchg
sub
gs
clc
push
lahf
jae
pop
lretw
push
in
outsl
faddl
xor
xchg
lcall
xor
or
mov
ds
lret
ja
mov
xchg
pop
jo
push
mov
dec
rorb
jmp
lret
je
push
orb
xor
cmp
bound
inc
dec
sbb
idiv
in
mov
sub
icebp
mov
frstor
sub
mov
gs
sub
out
cmp
cmp
pop
imul
xor
add
imul
mov
mov
mov
push
mov
shlb
sbb
pop
scas
repnz
dec
xchg
shl
push
pop
jns
dec
lcall
gs
xchg
push
mov
adc
enter
inc
jnp
sub
or
mov
sbb
mov
push
and
push
sub
push
mov
xor
and
ljmp
pop
pusha
dec
outsl
push
addr16
pusha
mov
clc
lods
and
dec
xchg
repnz
lcall
fisubs
cli
mov
loop
movsl
imulb
out
jne
fdivrl
sub
enter
fadds
mov
lods
loope
sbb
xchg
pop
push
in
fucom
cmp
mov
mov
mov
mov
jmp
inc
xchg
xchg
inc
push
mov
mov
test
movswl
and
fildl
cli
rcll
add
sub
mov
add
pop
mov
aas
jp
sub
xrelease
fistps
mov
mov
insb
sbb
aad
popa
scas
xchg
hlt
imul
ficomps
push
cmp
mov
int
add
pop
sbb
lods
dec
stc
jg
pop
dec
daa
sub
outsl
movsl
iret
push
sub
inc
cld
cwtl
int
data16
or
shr
cs
decb
cwtl
in
inc
cmp
dec
stos
call
adcl
vpunpckhbw
cmp
xchg
add
sub
hlt
adc
stc
fcomps
cmp
mov
je
add
cmp
leave
mov
pop
stos
adc
pop
mov
imulb
outsl
and
fwait
and
popf
outsb
pusha
and
inc
std
fistpll
lret
and
bnd
int
pop
outsb
ret
call
outsl
xchg
stos
lods
push
inc
cmp
pushf
adc
adc
stos
cmp
mov
hlt
es
push
xchg
aad
sahf
in
shlb
sarl
jns
stc
daa
inc
movsl
insb
decb
sbb
adc
fiaddl
mov
ljmp
mov
dec
or
push
das
mov
cmp
adc
xor
aas
dec
mov
sbb
lea
cwtl
shlb
jns
push
pop
pop
outsl
sbb
iret
pusha
sub
mov
adc
xchg
and
lahf
inc
sbb
popf
and
cs
pop
into
cmp
pop
pop
xor
and
adc
push
loope
mov
data16
aaa
cmpb
and
mov
int3
adcb
test
sub
xchg
push
push
rcll
xchg
rcrb
cs
dec
sbb
loop
popf
jmp
mov
jbe
pop
movsb
jno
adc
sub
int3
into
mov
cmp
frstor
fidivs
insl
test
push
in
clc
pop
enter
sub
push
inc
adc
push
pop
jnp
int3
sub
push
adc
mov
push
push
xchg
push
jmp
jns
push
out
cmc
pushf
arpl
adc
int
outsl
es
pop
loope
js
shl
xchg
aad
int3
sbb
pushf
imul
stos
fidivs
adc
add
mov
stos
stos
test
popa
es
cmp
outsl
and
cmp
push
stc
sub
mov
cmp
movsb
filds
add
fisubs
fmulp
or
push
rclb
stos
xchg
sub
sub
and
pop
mov
inc
mov
inc
jo
mov
pop
xchg
or
pushf
sub
rolb
xor
ds
hlt
lret
mov
cmp
dec
and
inc
jnp
dec
data16
int
mov
jne
xchg
sbb
adc
leave
push
mov
jp
and
mov
xchg
ja
out
bound
pop
lret
std
enter
iret
out
in
es
ror
daa
stos
aaa
sbb
andb
xor
cwtl
pop
leave
fistps
daa
out
sbb
icebp
push
pop
gs
push
lock
push
mov
addr16
mov
jns
ss
mov
mov
xor
ficoms
rorb
test
pop
ret
jl
mov
int3
inc
xor
cmpsb
roll
lock
out
cs
mov
pop
cmp
pop
mov
fadd
add
and
mov
rclb
mov
pop
xchg
mov
lahf
pop
lret
add
loop
lahf
push
ss
xchg
jmp
sub
dec
mov
jecxz
or
and
in
rolb
and
notb
imull
popf
andb
cmp
jae
daa
mov
int
or
pop
xchg
dec
sub
enter
call
inc
aam
pop
into
dec
rorb
mov
jmp
rcrb
shrl
add
movsb
gs
or
cmc
loop
ret
hlt
orl
push
mov
adc
orb
lret
filds
and
daa
jl
cmp
pop
adc
or
addr16
dec
nop
ja
xor
jle
adc
std
cmpsl
xchg
and
xor
stc
js
push
inc
xchg
push
inc
add
sub
mov
aas
lods
adc
xchg
in
jp
rolb
fisubrl
fisubl
dec
cmp
out
jecxz
adc
jmp
jno
jb
push
sahf
add
fstpl
cld
or
sub
inc
sub
cmp
mov
hlt
mov
and
mov
inc
adc
push
lods
sbb
xor
fnstenv
pop
or
pushf
mov
stos
add
cmc
pop
jp
xor
push
aas
enter
mov
sbb
orl
es
inc
push
jns
rcrl
testb
and
cmp
notl
push
sub
push
mov
jo
call
ljmp
xchg
jmp
in
popl
lret
mov
push
add
cwtl
test
loopne
lea
cmp
leave
int
xor
std
sahf
mov
cmpsl
add
test
adcb
mov
inc
mov
xor
data16
jge
and
jb
jns
mov
push
es
repz
mov
stc
push
iret
pop
aas
mov
pop
lret
aas
sbb
cwtl
jae
inc
xchg
xchg
xchg
and
stos
pop
xchg
fistl
mov
test
xchg
mov
das
icebp
ds
lds
sti
inc
icebp
addl
sbb
mov
out
inc
jbe
movsb
pop
mov
xor
in
inc
dec
mov
stos
mov
dec
adc
push
dec
dec
aaa
lgs
or
cmp
test
cltd
fdiv
lea
loope
hlt
lcall
insl
jmp
andb
mov
xchg
inc
cmp
jne
xor
mov
ljmp
std
lock
lcall
dec
cmp
mov
push
aad
mov
add
daa
dec
cmc
daa
inc
rolb
cwtl
out
and
push
out
pop
hlt
or
mov
inc
mov
mov
cmp
popf
push
pop
les
popa
fwait
sub
push
je
sbbb
mov
inc
mov
push
out
xchg
enter
cmp
xchg
cli
clc
or
cmp
inc
mov
mov
nop
dec
repnz
adc
cmc
mov
adc
pop
in
jne
jno
out
mov
out
adc
lahf
inc
popa
mov
mov
fwait
and
pop
jecxz
cmp
dec
mulb
mov
cmp
les
leave
cmpsb
int3
cltd
dec
les
dec
roll
lods
xchg
add
adc
fadds
je
xorb
mov
dec
or
mov
add
incb
inc
std
jp
gs
mov
pop
inc
mov
push
lret
sbb
pop
enter
pop
pop
or
mov
xchg
xchg
lcall
das
les
jne
adc
jecxz
fldl
cmp
outsb
jae
addr16
inc
and
xor
mov
shll
fwait
movb
iret
rolb
lock
ja
lea
jno
or
and
mov
xor
icebp
inc
ljmp
lret
fdivr
cs
fwait
mov
cmp
sub
mov
stos
lret
cltd
fisubrl
mov
cs
fs
cmp
ss
mov
and
or
or
xchg
mov
mov
jnp
push
fnstenv
repnz
fists
icebp
fucomip
xor
xor
in
xorb
shrl
jmp
aam
cs
and
les
fs
repz
cld
mov
fwait
iret
and
jle
sbb
aam
jb
mov
lret
push
push
inc
cmp
movsb
sbb
mov
push
pop
sbb
mov
movsb
cli
clc
pop
rorl
arpl
rcrb
movsl
xchg
mov
xlat
jp
inc
push
pop
or
mov
jo
negb
call
aas
xor
pushf
pop
jns
adcl
stc
mov
in
jmp
ret
int3
jl
rcrl
scas
cmp
pop
mov
insl
add
push
mov
mov
jno
movsb
cmpsb
orl
in
mov
test
lock
cwtl
in
add
bound
cmp
inc
and
repnz
scas
xor
lea
pop
lret
mov
sbb
cs
jno
pusha
fiaddl
hlt
cli
jmp
dec
cmp
mov
call
fcmovb
sbb
outsb
ljmp
xchg
and
shrb
xchg
call
aad
out
ljmp
and
out
je
divl
sbb
sub
cmp
cs
mov
or
sub
loopne
xchg
xor
pushl
lds
push
jmp
aas
jo
in
adc
cli
or
mov
adc
xlat
testb
mov
lods
insl
sbb
movsb
adc
dec
ds
cmp
pop
fmuls
mov
add
cltd
cmp
push
ret
bound
xor
test
dec
filds
gs
icebp
sbb
xor
jl
aas
push
lcall
lods
outsl
pop
ja
shlb
pusha
imul
iret
pusha
cmp
xor
fcmovnu
fstp
test
in
lods
pop
stos
out
fpatan
inc
jne
inc
test
push
scas
outsb
mov
add
adc
test
in
nop
aaa
das
out
js
decb
out
or
fidivrl
das
mov
xor
or
and
inc
fs
out
cmp
fwait
dec
sbb
jl
and
xchg
ficomps
rolb
std
nop
daa
adc
push
rorb
jne
stc
test
gs
pop
popf
or
subb
jns
pop
scas
les
add
fadd
sub
sbb
jb
adc
pop
add
pop
stos
sbb
mov
in
or
insb
pop
jecxz
push
mov
jnp
add
jmp
inc
sbb
inc
jns
inc
sub
loopne
ljmp
adc
cmp
stc
adc
push
mov
js
cwtl
push
jnp
pusha
loop
jb,pn
push
push
xchg
dec
lds
ret
fidivs
fs
std
mov
lahf
pop
mov
out
adc
loope
addr16
xor
int3
cmp
repz
aaa
shlb
push
mov
ret
not
ret
bound
ljmp
pop
fucomip
call
pop
dec
outsb
cld
inc
add
into
testl
push
add
dec
xor
pop
pushf
and
addb
shlb
dec
ja
cli
fildl
jno
push
or
push
fdivrs
outsl
inc
xchg
pop
cmp
movsb
xchg
dec
jl
aaa
jo
mov
pop
mov
jge
inc
scas
adcl
xorl
pop
ret
shll
lahf
loopne
das
jl
fs
inc
dec
jg
xchg
mov
repnz
ss
sbb
jle
jns
test
cmpsl
mov
jmp
pop
pop
push
cld
mov
mov
sbbl
or
rcll
pop
arpl
push
inc
cmp
xchg
stos
push
inc
rol
pushf
enter
sbb
adc
mov
dec
xchg
insb
sub
add
jl
out
xor
imul
fists
outsb
fadd
bound
and
out
or
xchg
inc
add
inc
jl
fcom
int3
xchg
pop
adc
pop
push
add
pop
jle
insb
cmpsl
in
cmpsb
mov
stos
jnp
pop
or
stc
in
mov
in
stos
pop
ja
sub
mov
nop
xor
and
fcomps
cmp
cli
out
push
mov
mov
clc
fmul
in
xchg
jae
dec
js
add
in
add
adc
mov
fcoms
or
add
pop
push
dec
ficompl
ret
orl
cmp
push
ret
les
sub
inc
xchg
stc
jnp
push
mov
xor
mov
mov
loop
jle
fsts
int3
mov
fldt
xor
mov
pop
rolb
or
mov
cmp
xchg
out
lcall
pop
ja
and
pop
loopne
pop
add
mov
cmpsb
repz
dec
fcmovb
ja
sub
and
in
push
insb
or
add
fbld
in
mov
pop
dec
fwait
mov
xchg
mov
mov
mov
push
out
pop
fdivl
xchg
js
movsb
or
sbb
ret
repnz
add
xor
mov
js
in
cmp
lret
imul
cli
loopne
int
cmp
pop
pushf
mov
xor
addr16
xchg
pop
mov
xchg
adc
push
test
mov
or
mov
scas
adc
pop
mov
dec
add
sub
and
sub
adc
cmp
jne
push
insl
mov
das
xchg
call
sub
add
jle
jge
popa
jne
ss
popa
sub
clc
push
sub
or
jb
mov
inc
adc
popa
sub
sub
xor
mov
loope
add
std
in
cmp
into
inc
inc
sbb
dec
out
jnp
jp
jnp
loope
in
push
repz
jl
shrl
dec
mov
push
lock
dec
push
ret
lea
jns
fiadds
jge
lock
dec
insl
xchg
cmp
and
mov
enter
scas
test
in
pop
lods
out
pop
loopne
in
movsl
outsl
fmull
aas
mov
ret
push
or
leave
std
les
or
fcompl
daa
or
adc
ljmp
mov
mov
test
ficomps
add
je
cmp
jo
xchg
cmp
lds
xchg
sbb
aam
in
jecxz
jne
jmp
fidivrs
leave
mov
sbb
dec
cmp
sbb
add
or
sbb
repnz
or
xor
pop
inc
adc
jo
jmp
loop
leave
adc
leave
imull
jmp
mov
ss
xor
xor
cmc
xor
int
cld
fadd
aam
and
movsb
or
aad
cld
pusha
ljmp
jmp
call
cmp
bound
daa
popf
fstpl
sbb
clc
repnz
add
fisttps
inc
dec
or
add
jmp
pop
adc
sbb
ja
fisubrl
mov
xchg
xlat
mov
lret
arpl
cmp
sti
outsl
loopne
stc
cmc
or
inc
adc
add
dec
push
add
add
dec
stos
aam
xchg
sti
mov
mov
mov
pop
pusha
mov
dec
xchg
stos
out
cmp
xchg
xchg
rorb
dec
sub
xchg
add
add
jmp
mov
insl
pop
mov
popa
push
shlb
xor
pushf
mov
jae
jbe
inc
mov
xchg
and
mov
push
sbb
xchg
out
push
es
aam
divl
or
xchg
ret
or
out
dec
cmp
in
loopne
jle
shl
es
mov
dec
jecxz
fisttpll
jne
rcrl
out
pusha
or
or
jne
xor
jno
jecxz
and
insl
fistl
xchg
subb
stos
aas
dec
loop
insb
repnz
mov
out
push
pop
push
popa
jmp
faddl
jmp
adc
xchg
or
inc
imul
jle
sub
test
insb
jg
ret
cltd
in
jmp
push
int
xor
add
lahf
in
int
nop
xor
xchg
inc
fcomps
mov
pop
sti
xchg
adc
fucomi
jg
dec
outsl
es
sbb
inc
xchg
in
mov
or
add
sbb
jmp
inc
or
pop
gs
push
movsb
fisttpll
inc
dec
xchg
or
imul
das
lods
add
or
mov
mov
repz
sub
sbb
lods
in
mov
fwait
test
mov
les
sti
add
push
nop
mov
dec
jbe
jnp
mov
cmc
mov
mov
out
inc
mov
jg
rol
pop
repnz
int
js
aam
push
mov
pop
dec
sti
cltd
in
mov
push
push
jne
adc
and
cmp
xlat
ljmp
mov
xchg
ret
xchg
in
mov
pop
scas
or
dec
push
sbb
inc
test
sti
and
push
lods
sub
or
dec
sbb
ret
mov
cmc
adc
mov
in
jp
inc
aad
daa
dec
clc
sahf
aam
fmuls
xchg
jecxz
jns
sbb
sti
mov
pop
xor
sbb
push
rolb
inc
pop
jne
adc
sub
mov
mov
mov
sub
pop
pop
pop
mov
dec
scas
fsubs
pop
mov
iret
fwait
sbb
es
dec
mov
fnsetpm(287
cld
outsb
es
lods
int3
or
sarb
shrb
inc
sbbl
in
mov
testb
testb
jle
outsl
lret
icebp
lods
dec
sbb
mov
addr16
sub
or
scas
cli
cmpl
mov
sub
or
jns
nop
fs
mov
std
enter
stos
or
leave
fcomps
stos
mov
fs
call
lcall
outsb
inc
xor
gs
js
mov
pop
add
int
mov
mov
addr16
lods
cmp
sub
sub
aad
addr16
push
dec
out
enter
mov
xor
jecxz
jbe
sbb
lds
pop
addr16
inc
or
cmp
lret
jg
nop
cltd
scas
mov
xchg
ja
or
or
lret
repnz
mov
jns
lret
mov
lcall
cmp
add
mov
mov
mov
sub
xchg
sbb
mov
popf
int
mov
dec
jle
push
in
mov
mov
mov
imull
in
loop
sub
iret
pop
push
sbb
mov
test
mov
adc
mov
jbe
in
into
or
adc
lods
jo
inc
jge
out
packuswb
sbb
mov
das
lret
jns
pop
jae
arpl
daa
push
movsb
mov
mov
mov
call
mov
clc
inc
pop
pop
pop
and
call
in
pop
dec
lret
test
or
jno
add
fistpl
cwtl
lock
inc
and
xchg
jge
test
adc
outsb
inc
push
xor
fs
mov
xor
jne
and
ljmp
testb
aam
in
push
sub
test
or
sahf
gs
xchg
scas
in
out
ret
mov
or
mov
inc
mov
or
int
shrb
pop
mov
jecxz
lcall
mov
dec
orl
in
xor
cmp
or
ficompl
test
icebp
sbb
shl
inc
sbb
xor
xchg
lea
jae
xor
push
push
lret
adc
jecxz
mov
icebp
inc
sbb
or
mov
xor
fsubrs
arpl
mov
iret
dec
lds
cmpsb
or
jl
mov
stos
inc
dec
inc
xchg
lods
int
mul
fwait
stos
mov
punpcklwd
test
mov
lds
inc
repnz
pusha
xor
repnz
cmpsb
push
in
xchg
inc
jo
adc
ficoms
cli
push
aam
in
orb
push
jno
pop
stos
mov
dec
je
inc
adc
or
pusha
sub
and
pop
popa
xchg
out
inc
jmp
dec
fiadds
jl
outsl
cmp
hlt
out
in
mov
sbb
mov
dec
jns
nop
fiadds
jae
aaa
ret
aaa
adc
in
jg
popa
push
into
shl
rolb
xchg
lcall
je
je
xor
inc
sub
adc
insl
jnp
imull
sbb
insl
aad
lods
xchg
pop
sbb
inc
mov
cmp
loop
test
sub
mov
xor
cltd
mov
aas
and
ljmp
roll
push
push
outsb
xchg
and
sub
cmc
mov
jno
cmp
dec
loop
int3
ret
or
xchg
jae
test
sbb
push
cmp
sub
or
lret
sbb
lods
jb
cmpsb
xchg
and
jo
mov
je
xchg
add
jg
lods
cmp
xor
mov
mov
pop
fadds
and
inc
mov
xor
pop
lods
hlt
bound
adc
aam
ret
insb
inc
cli
fistpll
mov
test
mov
mov
adc
das
inc
in
aam
and
call
sub
push
mov
sub
pop
sahf
and
push
jns
adc
iret
inc
imull
fildl
sub
sub
add
pop
in
sub
gs
aas
cmp
or
push
out
cltd
icebp
mov
dec
lcall
mov
pusha
pushf
mov
sbb
mov
int
jle
mov
jecxz
outsl
std
stos
insb
push
add
ret
pushf
jne
xor
sbb
sahf
mov
add
enter
sbb
jge
cmpsl
push
sub
jnp
out
add
lods
stos
push
aam
and
xchg
into
jo
test
dec
int3
icebp
sbb
loope
pop
pop
lret
loope
icebp
cmpsl
imul
ret
sub
shlb
and
cltd
jge
jae
icebp
data16
sar
add
addr16
fildll
mov
sub
ret
roll
dec
jnp
xchg
loop
stc
or
and
aam
jb
sbb
daa
push
inc
out
mov
jnp
and
mov
xor
or
ljmp
shrb
gs
sub
les
mov
inc
das
cs
pushf
add
fistpll
pop
sub
out
sbb
arpl
mov
lods
mov
ja
mov
mov
xchg
in
jns
lock
mov
add
jl
push
test
lcall
inc
or
cmp
outsl
mov
gs
mov
outsl
ss
ret
int3
adc
nop
orl
int3
leave
push
aam
je
or
fidivs
aam
mov
mov
bound
out
hlt
pushf
dec
push
lods
popf
jg
mov
mov
imul
xchg
jmp
mov
scas
rorl
gs
pop
add
mov
fldcw
mov
pop
icebp
sahf
dec
lds
mov
pop
pop
push
add
lods
inc
or
es
icebp
movsb
sti
jp
test
pop
outsl
add
pusha
jge
cmp
jne
xlat
sub
adc
faddl
fmul
mov
imul
aam
pop
jle
arpl
cmp
cmpsb
hlt
in
sub
add
cld
sahf
sbb
xchg
mov
jge
out
in
jmp
jmp
or
jo
jb,pt
mov
test
pop
add
inc
cs
push
movsb
scas
adc
push
cmp
xlat
clc
cmp
xchg
mov
push
cltd
pop
dec
int3
cmp
fistpll
adc
stos
std
imul
or
inc
popa
ljmp
ret
xor
xchg
cmpsb
pushf
cs
sbb
pop
xchg
es
jle
popf
leave
jg
pusha
push
jns
rdtsc
out
mov
mov
ss
pop
inc
pop
and
adc
sub
cltd
sbb
push
mov
sbb
pop
movsb
les
xchg
and
in
hlt
mov
inc
shr
loopne
nop
daa
push
sbb
mov
xor
mov
fwait
pop
ljmp
sbb
add
lahf
mov
popa
inc
roll
js
cmc
std
xchg
jp
and
jb
ret
inc
stos
jnp
adc
mov
divl
inc
cmp
sbbb
cmp
mov
mov
jnp
divl
shlb
xor
faddl
or
adc
movsb
push
fists
pop
cmp
xchg
mov
cltd
jge
push
lock
pop
mov
mov
stc
mov
pop
mov
scas
popf
repz
pop
push
and
push
aam
ljmp
test
repz
addl
data16
or
call
cmc
jb
mov
xchg
shlb
clc
stc
inc
push
cltd
es
adc
mov
pusha
xor
xchg
test
mov
adc
inc
call
rclb
fstpt
mov
mov
mov
clc
xchg
movsb
or
scas
xchg
fadd
leave
in
sti
ljmp
and
lcall
out
hlt
daa
and
adc
add
insl
movsb
cmc
sbb
jno
mov
adc
push
jne
xor
aad
mov
test
test
dec
int3
sbbb
xchg
pop
mov
shr
cmpsb
push
aas
lock
mov
adc
pop
push
aaa
mov
cmp
imul
push
xchg
pop
repnz
ficompl
icebp
aad
jno
fsubrl
or
mov
add
jecxz
int3
push
xchg
les
dec
pop
inc
mov
pop
cs
xchg
xchg
jb
leave
js
xor
jl
or
jne
mov
push
stos
aam
pop
or
mov
sbb
cmp
mov
mov
pop
hlt
sbb
mov
mov
pop
cmpsl
xor
in
mov
xorl
mov
imul
and
aaa
cwtl
movsl
testb
sub
ss
hlt
sbb
mov
fwait
pop
insl
imul
fldenv
mov
or
xor
and
daa
mov
xchg
clc
sti
or
pop
push
push
cmpsl
xchg
push
loop
fcom
dec
repz
cmpsl
add
mov
aaa
and
adc
cmpsl
inc
sub
xor
out
xorl
rcr
cmp
and
adc
adc
in
dec
or
mov
clc
inc
xor
inc
mov
dec
mov
clc
or
mov
call
xor
and
push
sub
sarb
mov
cwtl
je
repnz
cmp
lock
testl
jecxz
mul
orl
mov
std
js
out
paddw
jo
rcl
cli
jnp
fwait
xor
fs
inc
outsl
loop
lret
dec
nop
push
ret
sbb
jecxz
dec
popa
adc
mov
mov
push
in
pop
sbb
cmp
leave
cmpl
cmp
ret
sbbl
repnz
jecxz
stc
jl
in
enter
call
or
aas
lcall
gs
clc
xor
cmp
xor
sub
xor
popf
mov
push
mov
add
out
lret
xor
adc
mov
stos
cld
mov
es
scas
mov
mov
rolb
jb
ret
mov
fsubrp
mov
xchg
push
or
pushf
inc
adc
negl
dec
aam
pop
jno
pop
mov
pop
add
pop
dec
stc
and
mov
jle
sbb
mov
xchg
out
dec
and
dec
addr16
dec
xchg
ss
jnp
pop
or
or
mov
jg
sbb
repz
test
sbb
les
push
dec
jmp
in
xchg
in
xchg
sub
js
arpl
clc
cld
pop
inc
pop
mov
cwtl
shrl
and
setl
fbld
mov
xchg
xchg
xchg
enter
sar
xchg
lahf
cmp
sti
pop
or
mov
mov
or
out
jp
loopne
jle
popf
cld
stos
mov
xor
or
fsub
dec
cmc
pop
jne
mov
jns
jbe
push
mov
jne
jae
sahf
jle
in
fldz
pop
imul
outsl
mov
mov
das
dec
sub
out
dec
mov
and
push
loope
imull
cmpsl
fists
mov
test
sbb
iret
lret
aad
cmp
data16
cmp
push
or
jge
out
int
std
cmp
out
cmc
flds
in
adc
lods
and
mov
call
ret
sub
jg
or
push
fldcw
xor
dec
and
xor
mov
insl
sti
addb
repz
mov
incl
outsl
jo
sarb
pop
dec
fimull
aam
or
sarl
test
imul
ret
adcl
std
scas
or
out
jmp
daa
pop
repnz
adc
imul
jecxz
push
popf
cld
lret
add
mov
mov
inc
mov
ret
mov
es
xor
sahf
test
xchg
add
dec
mov
push
cmp
f2xm1
pop
add
sub
lods
icebp
scas
adc
repnz
add
push
adc
and
insl
fwait
subb
mov
jb
andb
sub
out
or
scas
out
jle
xchg
leave
xor
and
push
pop
aam
and
xor
bound
inc
in
push
inc
out
insb
scas
adc
and
sub
dec
sahf
and
sub
dec
fpatan
ljmp
mov
push
gs
add
outsl
push
or
push
inc
cmp
xchg
push
clc
mov
and
or
mov
and
mov
dec
inc
lret
lods
out
push
orb
rcrb
xchg
xor
sbb
mov
aas
mov
imul
xchg
pop
pop
out
or
mov
rorb
je
jle
mov
xchg
push
sub
or
cld
flds
cmpsl
out
jg
ret
xor
stos
notb
push
push
outsl
lea
and
cmp
cmp
or
push
pop
cvtdq2ps
xchg
xor
shr
mov
dec
and
inc
jae
xchg
popf
out
mov
xor
xchg
out
scas
sub
repz
ret
sub
pushf
mov
and
mov
ja
push
cmp
enter
popf
mov
or
inc
shrb
xor
adc
adc
pop
out
jl
jg
sbb
icebp
loopne
jns
into
fcomi
cltd
arpl
jne
sar
xor
jbe
popa
xchg
add
cmpsl
jg
xor
lock
imul
imul
lea
imul
jb
jnp
mov
jbe
lock
popf
inc
xchg
inc
out
mov
into
and
int
cmp
dec
sbb
adc
xor
into
mov
movsl
test
stos
rcrb
sti
cmc
dec
cmp
cmp
mov
inc
shrd
shr
cmp
pop
mov
aaa
fucomip
lea
cmpsl
lock
jg
cmp
fnstenv
or
divl
mov
cmpsb
pop
subl
mov
pop
jg
jle
cmp
push
inc
nop
add
dec
fisttps
cwtl
outsb
push
mov
and
cmp
and
add
sbb
mov
shl
gs
push
sbb
push
shrl
pop
fcmovne
mov
lret
jno
jae
cmp
mov
inc
jbe
adc
inc
sub
test
out
outsl
imulb
inc
inc
dec
or
hlt
scas
inc
idivl
mov
jno
sub
imul
es
sbb
add
cmpsl
fninit
xor
mov
loopne
pusha
inc
fstl
push
push
das
adc
aam
idivb
sbb
out
mov
dec
std
cli
sub
jp
pop
adc
je
lock
ret
out
xchg
scas
inc
leave
fnstsw
xchg
dec
and
call
incb
inc
fistpll
ret
sub
push
mov
cmp
ret
xor
xchg
jmp
loop
rcrl
andb
xchg
fnstenv
push
adc
mov
aam
movsb
adc
jl
push
push
add
mov
lret
xor
pop
mov
repz
xchg
add
or
adc
popf
pop
repz
adc
add
ds
fisttpl
push
stos
out
leave
mov
aam
xchg
sub
cli
push
rcrl
inc
add
lea
lock
popf
add
mov
or
cli
stos
xchg
imul
mov
cmp
cmp
adc
sbb
dec
mov
mov
sbb
clc
inc
mov
sbb
push
jp
mov
mov
adc
popa
jnp
rol
out
add
shl
sbb
cld
and
addr16
iret
imul
or
push
stc
decl
cmp
mov
or
repz
loopne
cltd
mov
outsl
mov
pushf
pop
inc
fdivs
imul
adc
cmc
push
cmp
in
mov
mov
cmp
scas
cmpsb
push
ficoms
and
rcll
dec
sbb
push
mov
test
shl
adc
clc
outsb
adc
in
loopne
lahf
adc
addl
mov
sub
push
inc
pop
sub
jmp
cmpsb
mov
repz
or
das
cwtl
cld
ss
into
das
cltd
fs
cmp
or
push
pop
sbb
fsts
and
insl
adc
fiadds
xchg
xor
cmp
ja
mov
inc
mov
push
ficoms
into
popa
sub
push
and
push
imul
arpl
mov
mov
loop
icebp
outsl
outsl
in
lock
xlat
inc
imul
lds
inc
jbe
adc
in
xchg
inc
dec
fidivrl
adc
orl
xchg
xchg
movsl
mov
cmpsb
inc
ja
add
adc
cmpsb
xchg
cmp
adc
inc
out
shll
popf
fucomip
adc
xchg
push
aam
sub
lds
pop
test
push
cmpsl
push
sub
and
cmpsl
mov
cmp
inc
icebp
mov
sub
lcall
inc
adc
sub
and
icebp
cltd
int3
out
movsb
dec
cwtl
dec
jmp
hlt
push
gs
dec
fxch
ja
aas
in
pusha
loopne
subb
les
lret
push
scas
push
in
aas
jmp
sub
push
jl
lds
fdivr
repnz
mov
dec
jmp
lods
push
rcr
aam
mov
fs
pop
xchg
js
sbb
mov
lods
arpl
adc
and
fs
sub
clc
adc
sub
or
dec
add
mov
aad
dec
sub
sub
sub
mov
movsb
add
adc
and
ss
and
call
pop
xchg
repz
jno,pt
pusha
incb
test
lods
addr16
push
movsl
lret
push
adc
loope
inc
jecxz
push
mull
xor
dec
dec
fcmovnb
sub
shll
adc
sub
mov
add
inc
stos
rcrb
repnz
dec
fwait
into
jo
aas
or
push
jbe
sbb
das
test
cmp
xchg
inc
cmp
repnz
push
mov
test
inc
dec
sar
mov
inc
mov
xlat
ds
and
adc
lods
loop
inc
dec
pop
ss
jns
js
and
es
mov
jae
mov
adc
push
hlt
out
stc
movsb
push
jge
jns
xor
jge
xor
jp
xchg
roll
fisttpl
rcrl
sbb
add
push
arpl
cld
sahf
pop
sbb
push
mov
imul
xor
scas
add
push
pushf
shrl
pop
cld
lock
push
fldl
sub
jecxz
dec
cmp
ljmp
add
adc
addl
rorb
and
movsl
mov
ja
test
icebp
jge
push
xchg
cmp
mov
add
sarl
sti
mov
push
ljmp
pop
cmpsb
dec
pop
mov
fadds
pusha
jno
pop
lret
push
xor
cmpsb
push
repnz
enter
daa
xchg
or
cmp
mov
aad
push
fwait
xchg
and
insb
and
sbb
and
loop
sbb
push
in
nop
js
out
jns
pop
pop
aad
xchg
sub
pushf
loopne
inc
or
or
or
xchg
fdiv
push
dec
or
in
insl
stos
sub
mov
xchg
and
movsb
fldenv
pop
cli
xor
sub
icebp
push
adc
icebp
mov
push
dec
mov
fadds
add
loop
out
or
imul
fsubrs
int3
cmpsb
cmp
bnd
mov
imul
mov
pop
add
in
ficomps
aas
sarl
popf
out
dec
mov
pushf
stos
cmp
mov
stc
aam
lret
ja
lahf
inc
dec
pop
sahf
and
cld
inc
and
mov
cmpb
test
inc
adc
cmp
or
mov
jle
dec
jns
lea
add
dec
ret
add
cmp
mov
repnz
push
dec
shll
outsb
push
add
sarb
mov
clc
mov
jle
jbe
dec
and
mov
xor
clc
aas
inc
jmp
cmp
push
mov
xchg
out
pop
cmp
push
cmpl
jo
pop
es
lcall
imul
inc
push
push
mov
inc
cmpb
mov
add
xor
push
push
and
push
fcomps
data16
push
dec
div
jno
adc
mov
jmp
pop
ds
pmullw
insb
mov
ss
in
loop
popf
xchg
out
addb
lcall
das
bound
wbinvd
ret
mov
lods
pop
imul
int
lcall
movsb
das
pop
mov
shll
pop
sbb
testb
imul
lahf
mov
jae
mov
push
cs
dec
outsb
in
fwait
cltd
xchg
aas
jnp
testb
and
lahf
fdivrl
xchg
pop
mov
mov
jnp
sub
stos
cltd
jnp
in
ficomps
and
lods
and
and
pushl
aad
mov
add
insl
addr16
inc
jg
inc
pop
xor
stos
and
sbb
jge
xchg
outsb
pushf
sar
jmp
xor
js
jb
pop
mov
sahf
fidivl
cmc
xor
aaa
mul
mov
repnz
inc
push
mov
mov
add
xchg
dec
movsb
push
jb
fsubl
and
jp
sahf
push
sbb
nop
int3
fstpt
xchg
mov
and
mov
pop
xor
in
sub
orb
cltd
xor
mov
imul
push
out
in
mov
rol
mov
push
shlb
lret
xor
fiadds
mov
push
lahf
insl
add
insb
adc
push
push
mov
push
jno
adc
mov
sbb
fldenv
or
into
sub
xchg
mov
inc
sub
mov
cmp
sbb
xchg
mov
xlat
jb
cmpl
xor
sbb
push
iret
mov
les
inc
xchg
stc
out
jne
minps
mov
xchg
sub
sub
ja
mov
dec
add
inc
cmp
and
mov
push
xchg
out
and
adc
repnz
sub
xchg
mov
shr
push
push
and
mov
repz
sub
fwait
mov
push
cmc
stos
insl
mov
cmpsl
xor
pop
je
mov
xor
pop
cmp
mov
movsl
xchg
mov
sbb
les
movsb
cmp
or
jo
dec
xchg
cmp
add
sub
fstl
adc
out
mov
push
adc
scas
pusha
scas
add
nop
xchg
pop
sbb
js
jb
insl
movl
adc
cmp
sub
pop
pop
add
add
dec
lcall
xchg
dec
movsb
nop
xchg
adc
mov
mov
lahf
inc
or
mov
popa
sub
add
dec
mov
add
sub
insl
ljmp
pop
bound
push
jecxz
pop
mov
push
add
pop
es
pop
mov
or
jne
in
cld
out
cmp
cmp
hlt
cmp
sub
mov
mov
je
fcomi
pop
lock
mov
int3
adcb
in
and
in
push
or
sub
and
out
fsubl
mov
in
push
jo
leave
mov
cld
or
rclb
mov
fsubs
das
in
cmp
fld
out
pop
aad
add
test
ljmp
cltd
in
xor
mov
fildl
xchg
xchg
inc
inc
jl
lods
aad
call
pop
xchg
and
lret
and
push
mov
insb
xor
or
inc
popa
mov
push
cmc
inc
sbb
ret
pop
int3
mov
scas
lock
movsl
xor
adc
outsb
outsb
push
jp
orl
pop
xor
lcall
ret
mov
mov
pop
xor
jbe
icebp
shll
cmp
xor
or
xchg
rcl
aad
test
rorl
jb
jne
aaa
mov
enter
push
mov
cmp
stc
ret
pop
pop
fidivl
xchg
repz
js
cmp
pop
loopne
xor
in
inc
hlt
inc
adc
notl
xchg
xor
fdivs
in
sub
dec
and
repnz
jl
dec
mov
fldt
in
and
movsb
pop
mov
pushf
fbld
js
lods
inc
aas
and
jno
in
ljmp
mov
pop
xchg
inc
je
pop
into
out
pop
dec
mov
or
mov
and
adc
dec
xor
rorb
pop
jo
mov
pop
leave
sbb
xor
adcb
push
mov
out
jne
jge
xor
xor
cs
cld
cmp
push
mov
inc
fmuls
sbb
out
mov
into
fs
sbb
xlat
cmpsb
push
jae
ja
movsl
das
aas
aad
dec
cltd
pop
cmc
push
xchg
stos
lret
adc
je
xchg
jns
ffreep
xor
insb
mov
mov
ret
pop
hlt
cmp
cmp
adc
xchg
pushf
inc
jg
mov
es
popa
push
movsb
lds
inc
stos
ficomps
and
dec
sbb
xchg
cltd
cmpsl
pop
imul
arpl
xchg
into
xchg
ss
loopne
hlt
add
sbbl
movsl
cld
out
dec
dec
and
dec
clc
sbb
and
jns
mov
dec
loope
xchg
test
mov
jo
push
dec
lea
adc
je
dec
jb
fisubrl
fsubs
dec
cltd
inc
mov
dec
xchg
cmp
push
into
lods
jo
xchg
icebp
inc
dec
xchg
xchg
je
xor
inc
cmpl
mov
scas
imul
or
lret
call
push
sub
jmp
gs
sbb
jmp
push
and
inc
xor
jae
cli
in
mov
outsl
jmp
jne
jne
mov
je
ds
adc
adc
pusha
stos
dec
sbb
cmp
fldenv
popf
rolb
lock
fisubs
test
and
jnp
sub
cwtl
cmpsb
inc
xor
and
aad
movsl
adc
cmpsb
in
cmp
cmp
sub
bound
out
scas
cmc
push
pusha
aad
jge
and
mov
xchg
add
lea
es
xchg
aaa
andb
sti
scas
lahf
sbb
sbb
jbe
push
lcall
xor
push
aam
xchg
mov
imul
scas
jns
scas
xor
ljmp
call
dec
dec
dec
scas
popa
jg
inc
stc
and
leave
jle
aaa
dec
in
sahf
shl
jp
je
js
fucomp
repnz
das
sub
popa
ret
xchg
outsb
or
rcll
pop
lret
and
inc
mov
sbb
mov
repz
mov
hlt
aam
xlat
add
ficompl
bound
pop
cli
push
lods
push
lret
aad
add
mov
inc
sti
ret
push
ret
mov
lds
inc
pushf
push
es
clc
jge
shr
sbb
imul
push
push
rorb
sub
bound
dec
lcall
gs
push
test
mov
inc
jg
loopne
fmull
je
sbb
test
ret
mov
jns
cld
repnz
xchg
adc
xor
enter
repz
sub
xor
fwait
call
pop
mov
cmpb
xor
pop
inc
mov
iret
sub
pop
pusha
jge
mov
movsb
dec
test
xor
or
test
lock
popa
push
aam
push
or
or
sbb
pop
push
sub
pop
pop
clc
inc
add
mov
push
loop
xchg
jne
inc
incl
lahf
pop
pop
les
xchg
iret
out
xchg
or
mov
mov
scas
rcrl
jle
lods
test
pop
dec
rcrl
popaw
push
pop
call
push
dec
and
in
adc
mov
scas
loopne
lods
in
cwtl
dec
xor
dec
and
out
fcmovbe
pop
jo
or
mov
shll
pop
mov
sub
pushf
in
fiadds
push
mov
jns
mov
adc
add
sti
jnp
inc
mov
cmp
jnp
int
jbe
and
bound
xchg
push
leave
fsubrl
clc
dec
pop
fadds
push
mov
jmp
jmp
je
in
lcall
test
outsl
adc
mov
xor
das
or
loopne
test
clc
mov
mov
jecxz
mov
data16
aaa
pop
xor
xor
cwtl
insl
inc
jmp
mov
subb
addl
pop
sbb
push
mov
pushf
pop
repz
mov
mov
leave
out
jmp
mov
aaa
and
shl
or
sub
out
sub
fwait
xor
pop
and
sar
into
inc
sarb
mov
in
mov
adc
test
mov
jge
inc
pop
mov
dec
xchg
rcrl
mov
hlt
cwtl
sub
pusha
inc
push
mov
cs
adc
js
and
sahf
lahf
mov
clc
imul
test
enter
nop
mov
xlat
mov
inc
iret
push
push
aas
test
inc
repz
push
repnz
sti
std
popf
adc
adc
nop
or
fnstcw
jle
mov
cwtl
push
or
repz
dec
cmpsl
sti
and
mov
leave
std
mov
pushl
clc
or
icebp
lret
inc
or
cltd
add
pusha
xor
xchg
cmp
xchg
jae
pop
loop
jbe
test
les
lods
test
xchg
or
xchg
or
lock
mov
cltd
push
cmpb
mov
lahf
in
imul
jo
notl
inc
mov
adc
fbstp
xchg
sbb
lret
xchg
cmp
aas
or
dec
inc
jmp
jae
nop
sti
movsl
sub
pop
jb
mov
shl
inc
es
enter
xchg
mov
jge
dec
shlb
lea
cmp
inc
sub
std
push
rolb
aad
mov
call
sbb
mov
jb
cmc
cmp
cmp
mov
adc
fucomp
mov
add
out
scas
roll
pop
fisubrl
sbb
cmc
outsb
dec
lret
ret
ja
fisubrl
fidivs
ja
les
cmp
inc
pop
int3
pop
add
xor
inc
xchg
lea
leave
inc
sahf
shrl
fs
js
loope
aas
cmp
popf
push
mov
ret
xchg
insb
data16
push
add
pop
sbb
mov
or
jg
sub
mov
push
fwait
stc
push
mov
stc
cld
mov
cmpsb
mov
push
mov
imul
sub
rcrl
mov
mov
or
sti
out
cmovno
pushf
rcrb
jmp
test
cmp
pop
push
repz
mov
les
mov
lea
cmp
test
stos
cmpsl
jne
or
mov
and
adc
pop
cwtl
out
mov
test
std
dec
loope
jmp
inc
pop
mov
mov
imul
aaa
inc
add
fcoms
out
andl
add
pusha
lods
ja
mov
mov
push
jae
pop
pop
lret
or
fldt
sub
mov
ficoml
arpl
push
pop
mov
iret
jae
xor
scas
mov
cmp
addr16
mov
push
lcall
pop
xchg
ss
jle
gs
movsb
push
push
mov
dec
loope
mov
cmpsl
insl
and
and
mov
jno
and
and
sbbb
push
out
xchg
push
ret
jne
mov
inc
leave
fwait
inc
scas
in
nop
or
cmc
xor
cmpsl
stos
das
xchg
pop
int3
xlat
push
xchg
pop
mov
mov
jle
mov
mov
out
insb
arpl
ss
test
lret
add
cltd
xchg
mov
pusha
mov
subb
popl
pop
mov
lcall
cli
rcrb
cmp
imul
add
in
pop
popa
push
adc
and
mov
ret
cli
imul
sub
stos
mov
std
ret
xchg
jno
xor
xchg
adc
js
inc
rolb
mov
test
push
cmp
scas
sahf
cs
add
pop
dec
dec
mov
add
das
pop
fadd
and
icebp
outsl
addb
mov
sub
push
aad
push
xor
and
adc
mov
fimull
movsb
mov
ja
adc
rcrb
lock
push
ror
call
lods
inc
cmp
xchg
orl
push
xchg
ss
dec
pop
and
aam
insl
sub
xlat
outsl
mov
mov
shrb
add
dec
xchg
ffreep
lods
pop
int3
push
sub
das
rorb
ja
jo
xor
mov
mov
adc
mov
xorl
xchg
ljmp
std
das
mov
stos
out
dec
mov
jmp
jge
cli
cld
in
addr16
into
or
adc
lods
ljmp
xchg
aas
push
fwait
lea
mov
jg
mov
add
test
fnstenv
pushaw
cltd
jle
xchg
fs
pop
mov
cmp
mov
mov
loope
jne
std
mov
pop
and
mov
fstl
pop
add
mov
rolb
mov
int3
or
fcompl
clc
xchg
imul
jmp
cmp
ret
sbb
leave
cli
mov
cmpsl
aad
test
test
xorb
fcompl
mov
cmp
mov
cmp
dec
stos
subb
lret
inc
jl
daa
dec
stos
inc
mov
pop
sbb
in
cmpsb
adc
jecxz
cld
clc
pushf
or
aaa
xlat
inc
cmp
lock
pop
les
mov
mov
xchg
push
es
test
add
xor
and
xchg
dec
mov
popf
and
or
sub
cmovge
jl
push
xchg
in
fnstsw
cmp
pop
imul
lods
mov
and
out
mov
stos
out
sub
insl
xor
sbb
push
in
psubusw
test
test
shl
push
or
ss
repz
gs
es
jae
mov
insl
pop
push
out
and
loopne,pn
dec
jle
mov
test
nop
inc
cmp
mov
notb
out
dec
cltd
mov
inc
sub
inc
fwait
pushf
and
lret
aaa
cmpsb
mov
mov
cmp
cmp
mov
jg
das
outsb
jbe
dec
sub
pop
push
sti
xchg
xor
data16
aaa
sti
lock
push
lret
outsl
sbb
xor
jl
in
loopne
add
push
testb
arpl
sub
lea
or
jbe
pop
adc
into
shufps
mov
xor
or
add
std
rorb
fadds
in
push
xchg
and
test
or
movsl
cmp
add
mov
cld
gs
lahf
mov
cmc
inc
int
iret
int3
xchg
ret
movsb
lret
fwait
dec
dec
outsb
lret
idiv
dec
fwait
push
int
das
xchg
data16
repz
gs
push
repnz
add
jmp
cwtl
pusha
pop
push
inc
mov
jbe
or
popf
ret
sbb
kxorw
repnz
test
out
jl
mov
mov
jmp
jmp
addr16
scas
test
inc
jecxz
fbstp
xchg
lahf
movsl
jne
bndldx
add
out
ds
into
cld
adc
jno
jae
xchg
push
push
fcomps
insb
pop
xchg
inc
fldl
lds
sbb
or
or
push
pop
add
stos
outsb
sub
add
scas
out
in
pop
cmp
imul
and
sub
in
pop
leave
sbb
movsb
mov
lcall
loop
jae
push
sbb
xchg
mov
mov
push
andl
or
push
jno
lock
imul
daa
aas
xor
pop
or
cld
adc
xor
jae
insb
add
xor
dec
or
sub
sbb
xchg
pop
les
sub
out
stos
or
mov
add
push
xchg
mov
fcmovnu
cmp
test
cmp
sbb
inc
andb
dec
and
pop
cmpsl
aad
cmc
lods
fcompl
xor
inc
or
cmp
sahf
jae
ss
mov
cld
lock
adc
rcr
pop
xchg
inc
and
dec
fnstcw
fldt
add
testl
dec
imul
pop
sahf
shlb
mov
es
jmp
cmp
outsl
ret
xchg
dec
ljmp
jnp
fstpt
add
icebp
mov
hlt
xchg
jle
sub
cmc
outsl
repz
or
push
fildll
in
repz
push
cmpsb
sahf
add
sbb
mov
sti
or
int
jle
mov
and
imulb
repz
stos
fsubrs
xor
fstpl
sahf
pop
sub
idivl
insl
sbb
int3
xchg
push
icebp
stos
mull
cld
fwait
dec
imul
imul
ds
pop
mov
cmp
into
jo
ja
mov
cmp
je
or
out
mov
mov
lds
or
sbb
cmp
pop
xchg
sbb
out
push
shll
or
cmpsl
cmp
or
mov
xlat
xchg
cmc
xor
xor
adcb
mov
notl
int3
fwait
mov
sbb
lock
test
lea
mov
mov
loop
repnz
xchg
mov
inc
imul
jne
push
je
cmp
ljmp
dec
stos
xchg
dec
clc
cmpsl
icebp
pusha
ret
rcr
test
mov
inc
or
inc
lea
xchg
pop
out
addr16
shrl
daa
popf
fwait
mov
bound
jbe
negb
movsl
pop
jp
nop
out
xchg
imull
andb
in
fbld
cs
and
cmpb
pop
mov
out
es
test
ja
xchg
pop
addr16
lods
jae
xchg
mov
mov
sbb
mov
addr16
push
mov
stos
rclb
mov
cmp
dec
cmp
decl
arpl
push
and
mov
cmp
aas
pop
dec
out
and
sub
imul
adc
loop
aas
stc
test
adc
leave
mov
insb
jne
sub
outsb
sbb
push
addr16
repz
out
lret
lock
xor
fiadds
sub
flds
popa
fnstenv
inc
sub
cmp
repz
inc
xlat
in
mov
cli
adcl
out
xchg
cs
call
cmp
dec
jg
push
jno
test
ja
add
fstps
jecxz
dec
push
movsb
inc
push
mov
pop
mov
repnz
xchg
call
mov
sub
jmp
into
push
lea
arpl
or
xchg
adc
jbe
insl
push
cmp
imul
sbb
clc
stos
push
mov
fucomi
fcomps
sarl
repnz
mov
adc
ljmp
dec
mov
adc
out
xchg
test
mov
push
mov
int
push
mov
lret
xor
sub
fists
dec
mov
dec
lock
cwtl
push
sbb
mov
jge
into
inc
mov
mov
jns
pop
xchg
pop
scas
push
call
out
mov
xor
dec
mov
cmc
mov
addb
mov
push
lds
lock
or
adc
jge
adc
fdivs
sbb
or
jle
fmul
cs
sub
fcompl
lahf
movsb
push
dec
gs
and
mov
push
dec
cmp
pop
pop
lcall
lret
mov
in
inc
aas
gs
jge
inc
cmp
mov
cmc
xor
pop
cmc
in
sbb
stc
testb
adc
int
jecxz
jb
decl
dec
pop
mov
dec
adc
into
in
pop
jge
call
mov
scas
push
cltd
jge
cmp
mov
push
rcr
loope
push
push
out
ljmp
add
in
and
sbb
add
bound
jl
pop
repnz
or
inc
ret
cmp
out
scas
xchg
dec
cmp
and
lret
stos
sbb
mov
mov
jb
dec
fcoml
outsb
aaa
mov
push
loopne
mov
call
scas
xor
out
imul
xor
in
orl
jle
add
pop
cli
jg
sub
xlat
jbe
jb
jmp
stos
dec
inc
push
xor
and
inc
mov
je
jo
add
das
push
xchg
loopne
lret
cmpsb
cld
sbb
vunpckhps
aam
sbb
fdivl
popa
cwtl
dec
mov
aaa
ret
xor
inc
add
inc
int3
outsb
cli
push
test
imul
inc
dec
outsl
add
adc
lea
dec
shrb
scas
and
call
ss
jecxz
hlt
arpl
cmp
xchg
jge
movsl
pop
pusha
dec
push
jns
mov
sti
inc
dec
int
or
mov
xor
dec
jns
push
insl
mov
pop
lods
lcall
sbb
mov
jmp
mov
mov
push
jo
stc
and
xchg
jge
aad
das
pop
dec
jmp
push
outsl
out
or
and
fwait
std
xchg
jge
lret
inc
dec
cmpsl
imul
arpl
adc
sbb
gs
sub
cs
cmpsb
stc
and
inc
jae
out
pop
hlt
xor
fildl
imul
es
mov
lahf
loopne
sbb
call
xchg
movsb
jns
sbb
fidivrs
inc
jl
sub
cmp
in
cmp
add
les
ror
add
jp
push
arpl
mov
jo
ret
sbb
sub
pop
mov
dec
test
or
lret
cwtl
loope
outsb
inc
jle
fs
xor
xor
mov
testl
pop
cmp
push
ljmp
dec
pop
push
into
sub
in
push
stc
add
or
push
test
xchg
ljmp
xor
addr16
and
jmp
pop
inc
lods
sub
dec
leave
notb
in
push
int
sahf
js
mov
cmp
xor
push
or
add
les
bndldx
insl
mov
fldl
imul
jecxz
inc
cli
add
jl
rclb
push
imul
arpl
ja
aaa
mov
in
cld
or
push
xor
xor
pushf
mov
pop
in
adc
sbb
push
sbb
icebp
mov
mull
sbb
sbb
inc
fwait
test
iret
push
lahf
pop
xchg
pop
cwtl
hlt
scas
mov
sub
jns
mov
test
ds
shl
inc
scas
add
das
or
cmpsb
inc
sarl
daa
sbb
xor
dec
cmc
push
or
filds
subl
inc
pop
mov
mov
xor
sbb
jmp
shrb
nop
or
add
insb
dec
adc
mov
bound
inc
and
cmp
test
dec
cwtl
xor
fdivrp
pop
rcrl
push
sub
clc
nop
outsl
jmp
daa
imul
aad
jecxz
scas
imul
das
fidivrl
test
pop
sbb
jne
pop
push
ss
fnsave
pop
ret
sub
adc
jne
imul
add
mov
dec
jmp
adc
fiadds
adc
dec
pop
shlb
xor
in
stos
mov
aad
jle
loopne
rcll
imul
mov
add
std
sbb
mov
xchg
or
and
xor
cmpsb
int3
inc
js
mov
push
in
lcall
sub
test
sti
sbb
gs
shl
out
jge
test
out
ret
imul
mov
mov
iret
push
cwtl
inc
inc
mov
into
adc
scas
jecxz
lods
mov
lods
dec
pop
insb
rol
rorl
movsl
dec
daa
or
xchg
test
out
lret
ss
std
jmp
addr16
insl
xor
inc
or
flds
mov
cmpsl
rorb
push
fisttps
xchg
pop
dec
xor
jno
imul
loopne
xchg
clc
testl
jne
cmp
push
mov
cmp
add
inc
sbb
sti
cmp
movsb
in
inc
xlat
xchg
cltd
push
jne
or
shrl
sub
mov
nop
fstps
jae
xor
pusha
pop
sub
or
xor
pushf
sub
mov
call
je
inc
in
leave
inc
xor
out
cmp
cwtl
pop
inc
push
jg
mov
adc
inc
jge
add
test
xchg
inc
int3
hlt
mov
xchg
bnd
cmp
adc
sbb
push
mov
loope
xchg
mov
fstl
cltd
xor
les
out
clc
in
mov
mov
and
shlb
xchg
jne
sub
fdiv
stc
negl
mov
lock
jg
and
push
in
xor
jge
jge
leave
or
lcall
mov
int3
xchg
notb
xchg
adc
and
test
fidivs
cmp
add
push
pop
ds
iret
dec
mov
push
sbb
stos
imul
jb
jge
pop
pop
hlt
jns
rolb
icebp
jbe
daa
mov
movsb
xchg
out
insl
xor
scas
dec
mov
push
push
sbb
mov
leave
or
fwait
mov
repz
scas
std
mov
popa
jns
fildll
in
cmc
mov
xor
addl
xchg
ljmp
xchg
mov
imul
fldt
and
rcll
sub
xchg
loope
imull
enter
sub
mov
xchg
cld
jbe
sahf
mov
jle
xchg
lods
sbb
mov
mov
cmc
std
aad
movsb
dec
addb
loope
enter
flds
mov
jno
push
jnp
jp
loopne
sbb
dec
or
or
aam
xchg
outsb
int3
stos
bsf
jg
cmp
insb
popf
xchg
pop
mov
enter
mov
push
lcall
mov
pop
cli
fstpt
cmpsl
inc
sbb
sti
sub
mov
cmp
std
jbe
and
int
add
andb
insb
ja
into
nop
mov
push
test
ret
mov
push
das
fildll
sarl
or
push
sub
pusha
addr16
out
sbb
xor
repnz
fwait
inc
cwtl
inc
push
jns
fstps
jp,pt
stos
cmc
push
lcall
lds
push
and
addr16
pushf
enter
mov
push
aas
test
xchg
pop
jecxz
mov
pop
pop
std
lcall
lret
and
push
loope
jae
aad
pop
fwait
les
cmp
gs
add
ss
stc
push
mov
push
and
xchg
daa
and
mov
sbb
ret
test
arpl
push
imull
hlt
movsb
inc
add
hlt
nop
fwait
iret
aaa
mov
or
sub
jecxz
mov
into
fcomps
push
lods
and
jg
pop
jno
mov
add
adc
mov
cmp
mov
cld
nop
fcmovbe
xor
inc
shlb
cmpsl
cmpsb
push
insb
out
adcb
outsl
pusha
fsubs
mov
out
push
dec
movsb
sahf
ret
aaa
push
sbb
cmc
mov
mov
jbe
mov
xchg
mov
rcrl
out
or
das
aaa
hlt
pop
pop
insb
lret
cmp
xor
mov
mov
pop
std
xor
adcb
adc
ficompl
sti
add
adc
fdivrl
xorl
add
pushf
hlt
jns
in
in
or
or
shlb
push
jne
adc
ret
shlb
imul
mov
jl
mov
pop
jmp
ret
xchg
pop
or
mov
adc
jg
leave
and
adcb
mov
cwtl
arpl
push
outsb
popa
icebp
mov
inc
hlt
leave
jg
and
mov
int
inc
popf
adc
iret
mov
jmp
sbb
movsb
daa
jmp
hlt
jb
pop
add
int
sbb
fistpll
lods
out
loop
xchg
cmpsb
push
adcl
aas
js
and
int3
mov
cmp
cmpb
or
xor
cmpsb
lock
daa
fldcw
aaa
inc
js
ret
push
xor
and
jbe
ret
pushf
inc
je
push
sbb
out
fmuls
push
test
jne
push
in
ss
shlb
and
jp
stos
pop
les
xchg
pop
andb
les
inc
jnp
jle
daa
es
push
mov
and
aad
inc
cmpsb
xor
test
jle
and
and
push
pop
sbb
out
lret
add
clc
sbb
xchg
enter
inc
imull
or
outsl
imul
jle
scas
fnstenv
repnz
loop
imul
gs
xor
outsl
ret
int3
arpl
in
cmp
push
jb
pushf
push
sub
add
cli
sub
rol
movsb
stos
daa
sar
shrb
xor
scas
push
rorl
stc
add
jns
fiaddl
sub
push
sub
es
mov
aaa
std
mov
iret
inc
test
movsl
push
das
dec
pop
cld
add
lods
sub
mov
mov
fs
pop
jno
push
daa
ficoms
mov
xor
adc
add
roll
or
cli
push
aas
sub
stos
dec
outsl
icebp
sti
jecxz
loop
sub
and
addr16
jmp
pop
add
pop
mov
rcr
add
repnz
mov
sbb
dec
sub
sahf
mov
lret
mov
cmp
pop
mov
leave
xchg
dec
or
lar
cmp
inc
add
test
dec
nop
lret
push
and
scas
or
inc
xorb
or
jecxz
dec
fiadds
mov
cmp
and
enter
inc
or
mov
pop
jo
movb
lock
lods
mov
jmp
jl
enter
inc
nop
aas
jg
lock
dec
mov
imul
mov
xchg
sarb
ret
cmpsb
dec
cmp
les
out
lret
in
add
loop
fisubrl
addl
fldt
les
cmc
push
sub
inc
inc
adc
leavew
push
iret
push
movsb
dec
sub
fs
fwait
lret
xlat
test
out
mov
push
fnstcw
das
or
cltd
and
shl
jg
mov
int
jno
cmc
mov
push
add
in
lds
add
shrl
xor
mov
cmc
push
cmp
mov
and
test
sbb
mov
notb
inc
sti
mov
insl
sub
dec
jae
dec
mov
pop
jbe
loope
fstl
out
push
mov
xchg
mov
aas
cmpb
sbb
daa
ds
push
push
shrl
lahf
roll
mov
mov
mov
jns
jle
mov
out
adc
cmp
push
push
xlat
xchg
mov
inc
adc
pop
cs
push
bound
sbb
xchg
shrl
mov
pop
mov
or
ljmp
xchg
mov
rorb
add
mov
xchg
inc
lret
dec
test
mov
fiadds
pop
push
scas
loop
mov
mov
sbb
pop
inc
test
jl
icebp
arpl
cmc
outsb
insl
xchg
iret
inc
push
adc
inc
cmp
dec
test
pop
stos
fld
test
fnsave
out
xchg
push
add
pop
mov
sbb
mov
addr16
shll
push
mov
outsl
adc
pop
push
jge
pop
cltd
sbb
pop
out
insl
cmpsb
test
movsb
add
or
sub
out
loope
jnp
adcl
in
push
das
pushf
pop
addr16
cs
jne
mov
adc
rolb
mov
aam
mov
pop
cwtl
xchg
lds
cmp
fdivrl
adc
iret
negb
inc
jl
adc
fistl
push
xor
push
mov
xchg
sub
lret
adc
pop
cmp
stc
xor
dec
movsb
jno
xor
hlt
cltd
sub
rcrl
push
iret
pop
imull
lods
in
outsb
push
pop
gs
mov
imul
push
mov
sbb
or
out
jp
add
or
scas
inc
push
lds
sarl
pop
fisubrs
mov
add
adc
push
and
pop
sbb
and
imul
stos
push
fisubrl
mov
cmpsb
xchg
data16
imul
rolb
jnp
add
repz
sbbl
ret
xor
xchg
push
cmpsl
cmc
push
dec
orl
dec
adc
push
out
int3
or
mov
cmp
cltd
push
outsl
mov
inc
mov
add
imul
in
jl
dec
and
test
mov
push
push
test
in
outsb
mov
scas
push
aas
jnp
xchg
movsb
ret
mov
adc
sbb
stos
fisubs
xlat
mov
push
push
sub
je
divb
pop
push
lret
push
add
mov
fidivl
dec
pusha
push
stc
in
fildll
lahf
std
adc
adc
das
cli
lods
mov
add
push
adc
shlb
adc
push
inc
cmp
jle
lea
orl
inc
mov
mov
inc
add
dec
movsl
sbb
adc
lcall
xor
mov
fidivrl
mov
sub
mov
das
mov
mov
icebp
mov
push
cmp
mov
fucomip
test
ficoms
mulb
xlat
or
and
pop
lret
hlt
push
ss
mov
out
pop
ficomps
imul
add
mov
jle
aaa
cli
aas
ds
push
daa
and
cmpsl
divl
rcrl
push
push
jp
into
xchg
add
aam
jae
xchg
imul
cs
cmpsb
or
or
jp
fsubs
add
push
movsb
push
loopne
xor
sub
fdivr
cmp
daa
call
repnz
dec
test
jb
mov
jns
inc
inc
das
xchg
inc
js
push
sub
adc
xchg
add
in
or
jp
cmp
imul
inc
pop
mov
cmpsl
mov
in
fwait
nop
pop
lods
xchg
or
xchg
insl
jns
push
aam
out
outsb
mov
xchg
out
mov
xchg
and
and
mov
mov
xchg
pop
clc
mov
call
pop
sub
and
adc
test
adc
clc
mov
adc
mov
mov
rcrb
pop
lret
mov
mov
lds
xchg
in
fists
in
inc
imul
jmp
xchg
add
adc
cmp
push
repz
sub
jg
fcmovbe
repz
movsl
mov
repz
test
data16
mov
cli
out
aad
mov
sar
xchg
mov
add
mov
dec
pop
aad
pop
nop
or
loopne
pop
test
mov
mov
push
int
lock
dec
xor
push
arpl
dec
pop
or
rorl
adc
dec
dec
jne
mov
mov
int3
fdivrs
in
push
enter
aad
cmpsl
add
push
sbbb
pushf
jp
xchg
or
jae
sbb
jle
cmp
shll
mov
loope
in
subl
push
lcall
mov
push
cli
sbb
and
push
int3
mov
rclb
insb
mov
dec
mov
cmp
and
inc
pushf
cmc
push
adc
arpl
fistpll
in
je
adc
pop
aad
adc
stos
inc
lods
mov
outsb
in
leave
adc
mov
aam
cs
out
mov
mov
test
aad
fdivrp
push
or
lock
sahf
pop
push
sbb
jno
fdivp
sahf
ss
lea
pop
push
lahf
or
lds
mov
and
scas
and
lods
jo
mov
out
outsl
push
hlt
sub
scas
loopne
cmc
xor
and
pop
iret
insl
shlb
test
pop
and
cmp
loopne
cmp
lret
cld
add
fistpll
pushf
xchg
sarb
int3
dec
inc
sub
lret
mov
jge
sbb
mov
xor
out
add
aaa
or
sbb
xchg
mov
testl
jns
call
stos
push
adc
mov
sub
stos
lods
aam
mov
jmp
sub
rorl
rcrl
mov
mov
scas
or
stos
mov
inc
and
sub
cmpb
or
sub
cmp
xchg
shr
lods
mov
test
aas
subb
fisubrs
fdivr
jmp
inc
leave
aad
clc
notb
dec
clc
mov
imul
lcall
test
loope
pushf
das
cmp
pop
les
xlat
shll
cwtl
jmp
push
add
xchg
pop
pop
inc
clc
or
sti
dec
cmp
xchg
ds
mov
pushf
xchg
push
orb
push
or
or
in
test
movsb
shrb
hlt
sub
cli
ffreep
adc
adc
scas
aas
pop
sub
ljmp
pop
mov
xchg
pop
fiaddl
pop
mov
push
jge
sbb
sbb
jae
pop
dec
or
ss
xor
adc
lcall
js
aas
fsubp
insl
insl
test
sahf
and
arpl
imul
andl
add
xchg
dec
push
dec
lds
or
xchg
and
or
lret
insb
popa
add
cmpsb
jmp
sbb
repz
ror
push
adc
movsb
outsl
and
test
cmp
push
rcll
into
sub
incb
insl
pop
xchg
adc
pushf
jnp,pt
lods
cmpsb
mov
mov
sbb
insb
jnp
fcompl
test
pushf
adc
inc
add
push
je
out
mov
cmpsl
mov
out
xchg
popl
mov
inc
call
xorb
or
stos
nop
dec
inc
scas
mov
insb
jmp
pop
in
mov
cmp
mull
xor
sub
inc
mov
sbb
sarb
jge
bound
int
je
xor
cmp
repnz
push
or
movd
dec
pop
push
lods
add
aaa
inc
iret
int3
cmp
jl
ror
aam
stc
dec
sti
dec
je
inc
jb
int
pop
cltd
cmpsb
mov
xchg
cmp
shlb
addr16
and
mov
stc
aas
stos
lods
shrb
stos
push
mov
rclb
xchg
or
or
gs
sarl
xor
shrl
inc
adc
or
cltd
inc
xor
fadds
add
or
test
dec
push
adc
mov
scas
int
dec
xchg
jp
jmp
and
and
adc
sub
loopne
fchs
mov
xor
mov
mov
adc
mov
push
sub
push
fsubl
test
rorl
shrl
xor
out
sbb
sub
inc
fs
and
add
sbb
add
pop
xor
cmc
mov
sahf
and
cmpsb
outsb
xchg
mov
in
popa
ret
fs
pop
add
out
inc
push
xchg
test
push
shlb
mov
mov
and
sub
push
xchg
cs
popf
xchg
jge
pushf
fmuls
pushf
sbb
fs
fldl
adc
push
push
imul
xlat
loope
mov
pop
outsb
lods
push
mov
sbb
add
mov
minps
out
dec
pop
push
shlb
lds
pushf
mov
lods
sub
xor
adc
inc
es
jb
xchg
ss
ja
sub
aad
mov
pop
jge
sahf
mov
scas
pop
addr16
hlt
pop
inc
dec
popf
mov
dec
or
add
push
fisubl
push
out
jo
fwait
aaa
mov
or
lcall
push
fxch
cmp
xchg
popf
jmp
idivl
cmp
imul
dec
cmpsb
imul
in
stc
mov
loop
pop
adc
and
cltd
mov
mov
decl
dec
ds
rcrl
icebp
pop
dec
adc
xchg
xchg
push
cmp
and
xor
mov
or
and
dec
jo
gs
test
fs
xchg
sahf
jb
pop
pop
push
subl
jbe
loop
std
mov
ds
fwait
xor
jl
jl
aad
xchg
faddp
addr16
xor
adc
mov
subb
int3
loope
in
pop
mov
or
dec
dec
loopne
mov
loopne
in
xchg
pop
test
cmp
es
pop
sysret
call
jne
cmpsl
divl
add
xchg
mov
push
pop
imul
and
pop
loope
notl
pop
inc
fcomps
lret
dec
fdivs
ret
mov
in
outsb
insb
or
outsl
daa
adc
mov
mov
pop
fdivrs
dec
push
mov
imul
mov
dec
test
adc
fdivs
xchg
stos
mov
je
hlt
je
sub
xchg
out
pop
adc
jmp
jns
sub
into
add
mov
cltd
ljmp
ret
cmc
aaa
mov
cmp
push
cli
mov
pop
push
insl
dec
cmpsb
xlat
inc
sahf
sub
xlat
mov
test
cmpsb
jp
psubb
mov
sub
lahf
mov
sub
sub
ja
rol
mov
lock
out
pop
mov
enter
pop
xor
sti
xchg
xchg
push
pop
int3
icebp
sub
sahf
jno
adc
cs
xlat
nop
and
repnz
xor
in
adc
cltd
dec
into
gs
cmpsb
lret
pop
mov
mov
xlat
jp
arpl
mov
iret
cmpl
cmp
inc
pop
testb
daa
sbbb
int
stc
gs
pusha
fdivl
mov
stc
pop
adc
pop
in
cmp
shl
cmc
inc
xchg
sti
repz
push
and
add
in
fnsave
xchg
ror
mov
mov
movsl
fs
mov
sbb
rcrb
out
cmpsl
enter
addb
inc
sti
mov
dec
xchg
ss
push
fnstenv
int3
push
dec
xor
lahf
add
xor
xor
or
roll
pushf
in
pop
out
push
jp
arpl
pusha
shll
mov
sub
das
shr
sub
xchg
popa
mov
popf
and
push
push
lods
xchg
inc
dec
sarl
add
add
daa
stc
jmp
xchg
add
ljmp
les
pop
jecxz
cltd
rcrl
out
push
push
or
xlat
cmp
xlat
mov
jg
in
and
gs
aaa
cmp
jne
adc
or
clc
fs
iret
fimuls
push
sahf
xchg
idivl
mov
loopne
mov
test
xchg
pop
in
mov
shll
pop
and
stos
and
lahf
mov
insb
in
xchg
cltd
dec
filds
rorb
das
inc
rcl
jae
jp
shl
dec
mov
out
ss
arpl
loop
pusha
pslld
or
xor
push
outsb
mov
outsb
xchg
push
xor
push
insl
push
addr16
test
mov
fldenv
xchg
push
sub
insl
jl
jg
dec
shrb
jmp
mov
xor
pop
mov
mov
clc
cmpl
inc
sarl
repnz
jp
sub
pusha
andl
mov
roll
jae
and
cmp
cmp
scas
arpl
sahf
std
les
mov
add
xchg
call
mov
inc
ds
or
popf
imul
mov
inc
dec
mov
in
sbb
sub
test
shl
adc
and
mov
outsb
insl
addr16
adc
pop
insb
mov
and
call
jae
popa
call
jge
inc
scas
jo
sub
xchg
shl
pop
add
mov
lahf
ret
sbb
movsl
mov
test
sbb
and
mov
addr16
mov
mov
jb
stos
cmp
ficomps
cs
shl
add
leave
mov
cltd
ja
jo
stos
out
adc
and
sbb
es
or
xchg
ret
dec
and
pop
sub
sbb
xchg
addr16
je
mov
xchg
lret
sub
or
xchg
lcall
or
ja
call
loopne
loopne
loopne
push
fistpll
xchg
icebp
mov
icebp
roll
jg
scas
daa
or
stc
mov
sbb
jb
cmp
stc
ljmp
popf
inc
out
fisubs
or
dec
sbb
movsl
lahf
loopne
jle
jg
sub
xorl
mov
loop
sar
inc
mov
in
cmp
dec
pop
pop
mov
test
xchg
xor
xor
sub
push
fimull
pop
out
ja
mov
fstpt
mov
into
test
loope
or
xchg
cmp
sbb
test
pop
inc
cs
repz
psubw
fidivrs
in
pusha
je
mov
lcall
jg
clc
mov
pop
shll
xchg
cs
outsl
mov
jo
fs
xchg
lds
mov
pusha
lds
in
in
cs
movsl
push
cs
clc
icebp
fisttpll
aam
sub
cltd
add
push
mov
addr16
repz
add
lock
sub
jno
addl
lret
xor
ror
pop
in
dec
dec
adc
insl
rcrb
mov
fld
jle
leave
aaa
js
test
xor
sub
sub
and
lods
inc
lcall
sub
push
push
xor
dec
in
cmpl
cs
sti
xor
icebp
push
pop
dec
lods
lahf
dec
cs
subb
aaa
mov
mov
dec
inc
fildll
ljmp
stos
mov
leave
stc
and
ja
mov
mov
cmpl
loop
cwtl
repz
push
iret
rolb
add
adc
aas
out
push
inc
lret
test
cmp
shll
sub
clc
push
dec
inc
jle
add
leave
out
pop
push
dec
test
das
arpl
les
out
xorl
push
mov
mov
pop
cld
call
mov
add
add
fidivl
dec
jl
gs
mov
sbb
sbb
mov
stos
inc
mov
jb
rorb
and
jmp
xchg
jns
xchg
mov
scas
jns
push
iret
mov
dec
xchg
mov
mov
cmp
xorl
xchg
loope
ss
imul
and
fwait
dec
or
sbb
in
inc
fdivl
je
xchg
test
loopne
into
lds
ret
dec
add
mov
inc
mov
mov
leave
jmp
ret
push
pushf
shll
dec
mov
sbb
cwtl
test
adc
int
sub
adc
jno
sub
sub
cmp
int
sub
filds
jl
stos
adc
mov
cld
movsb
xchg
cmp
jns
lock
pop
jle
daa
into
jge
pop
mov
pop
inc
dec
pop
xchg
orl
testl
idivl
pop
mov
cmpsl
xchg
shll
or
imul
push
or
xchg
adc
pusha
sub
repnz
fistl
or
push
pop
pop
push
fwait
pop
cmp
push
lret
mov
cli
jge
adc
adc
cltd
adc
sbb
mov
hlt
cmc
fistpll
repz
xchg
pop
jle
cmp
cmp
pop
pop
ficoms
loopne
pop
call
jp
imul
shrl
in
cmpb
mov
sbb
andl
shlb
lods
int
push
push
stc
loopne
lret
cmp
pop
test
push
lret
loope
jp
pop
data16
ds
mov
push
lahf
das
mov
sub
bound
scas
cmp
int
movsl
mov
xchg
pop
fnstcw
lock
aam
jb
mov
sbb
rcrl
jae
mov
jns
mov
roll
pop
and
jecxz
fdivrl
jmp
insl
jmp
inc
xchg
lret
stos
adc
popf
or
je
pop
sub
cld
push
push
inc
dec
fdivr
mov
cmpl
adc
mov
mov
xchg
push
je
icebp
pop
cmpsb
dec
sub
jp
mov
mov
ljmp
add
movsb
adc
cld
inc
jae
jp
in
ficoml
call
orl
cmp
xor
stc
imul
sub
ljmp
shlb
ficoml
inc
sub
lods
xchg
jo
push
cmpsb
addr16
repz
pop
xchg
pop
orl
xchg
stos
lods
lock
mov
pop
mov
xchg
daa
gs
cmpsl
jmp
push
jns
adc
ret
mov
loop
je
in
xchg
lahf
cmpsb
push
cmpsb
leave
jno
add
or
addr16
aad
cmpsl
es
mov
pand
stos
xchg
cli
sahf
add
aas
add
add
inc
jns
les
add
mov
add
or
xlat
cli
lret
pop
cmp
roll
jns
pushf
cmp
lods
popf
sbb
mov
fisttpll
sub
aam
lret
ds
sbb
mov
ficoml
ds
jo
out
pop
push
add
pop
icebp
xchg
ret
jecxz
sbb
stos
outsb
loope
insb
mov
jp
aad
cld
pop
xor
scas
aam
mov
cli
jge
in
ss
jl
sub
cmpsl
cmc
dec
sahf
rcrb
jg
pop
xchg
push
push
jbe
pop
xor
ret
push
add
divl
mov
out
jae
push
jns
push
imul
inc
inc
mov
mov
cmp
rclb
lcall
std
inc
cmpsl
sbb
add
das
mov
das
xchg
mov
inc
mov
add
lcall
dec
negl
mov
cmpsl
or
bound
adc
lds
mov
ja
jb
inc
push
jg
int
pop
lcall
jns
jl
sub
arpl
popa
movl
enter
mov
sbb
adc
or
pop
pop
mov
cltd
jle
popa
leave
xchg
rcrb
xchg
dec
push
sbb
push
jge
xlat
pop
out
fadds
faddl
jae
cs
scas
mov
or
cmp
std
ret
loope
pusha
out
push
jecxz
divl
enter
mov
test
js
subl
jl
cmp
pop
out
das
push
int3
call
and
je
std
scas
and
call
out
lods
daa
std
push
push
jb
adc
sub
adc
mov
push
cmp
xor
cld
jae
dec
add
xchg
pop
dec
loopne
push
add
dec
and
aaa
xchg
mov
icebp
and
fwait
jae
mov
dec
hlt
xor
and
arpl
dec
xor
mov
cltd
mov
adc
lea
sbb
mov
stos
negb
xor
and
xor
or
jo
mov
push
out
sub
js
fcomps
xchg
cld
fucomi
mov
and
sub
sub
mov
and
sbb
nop
lret
mov
in
mov
cmp
leave
test
fstpl
or
int3
jp
push
inc
addr16
jle
xor
lea
in
inc
lret
adc
pop
xchg
ret
sbb
xchg
jb
and
push
shrl
scas
mov
jnp
fisttps
mul
pop
inc
popf
mov
std
xlat
inc
test
imul
mov
dec
and
pop
shr
jl
mov
inc
imul
add
pop
scas
jle
pop
rcl
dec
test
aad
les
adc
fidivl
jle
xchg
shll
dec
mov
jo
mov
pop
lahf
push
jo
pop
xchg
pop
call
add
dec
mov
inc
jno
cmpsl
in
mov
lahf
cmp
adc
mov
add
mov
inc
adc
add
shll
outsl
dec
enter
jae
xor
jae
lods
fistps
imul
and
sub
sbb
cld
mov
aam
ficoms
add
sti
pop
pop
mov
adc
es
cmpsl
pop
and
std
enter
rolb
loope
jmp
std
repz
int3
xchg
les
in
mov
jmp
lds
loop
cmpsb
loopne
pop
fwait
movsb
outsl
dec
push
jnp
mov
and
push
cltd
pop
mov
jns
lret
sbb
in
addr16
mov
jns
or
lea
ret
pop
pushf
xlat
int
sub
sti
xchg
into
sub
lret
scas
push
add
ret
pop
int3
sbb
aas
inc
or
adc
add
push
mov
jl
insl
fwait
mov
dec
or
cmp
cltd
mov
sub
pop
dec
int
in
stos
pop
testb
test
lds
pop
jb
sub
cltd
daa
xchg
jge
fstpl
std
rolb
pop
pushf
data16
lahf
xchg
cmp
inc
cmp
push
mov
mov
xlat
cmp
lea
js
xchg
sbb
jl
test
mov
fsts
lods
mov
scas
xor
and
cmp
popa
sbb
mov
mov
cltd
cmp
iret
cmpsl
and
fucomp
stos
inc
add
adc
mov
pop
pop
fsubs
adc
sub
and
and
das
xchg
pop
mov
jle
xor
ds
xor
rcrb
aas
outsl
aad
das
aam
mov
jae
iret
cs
xor
mov
or
sbb
movsl
loope
inc
xchg
daa
roll
mov
jnp
lcall
in
adc
in
sub
scas
add
sub
xchg
cmp
and
and
test
xor
popa
icebp
inc
aad
inc
out
or
lods
fs
andl
and
outsl
push
nop
fwait
pop
pop
or
or
data16
add
add
xlat
mov
and
fucomi
push
cmp
in
push
mov
sub
add
shlb
jmp
push
fmuls
jle
xor
mov
outsb
pop
xchg
andb
aaa
insl
push
addr16
enter
repz
push
cmp
out
push
push
sti
mov
cmpsb
repz
js
je
or
movsl
ds
ret
fldcw
mov
pop
outsl
ljmp
push
fbld
push
or
push
inc
mov
dec
jmp
add
pop
and
cld
push
mov
fsub
inc
gs
cmpsl
mov
jno
xchg
test
sub
shlb
mov
or
les
mov
stos
inc
int
inc
adc
cld
push
rclb
call
mov
dec
jbe
mov
xor
sbb
scas
insl
fldcw
sbb
loope
pop
jno
xor
add
in
jmp
insb
inc
popf
jmp
pusha
ja
lds
jmp
nop
fidivrl
xchg
pop
jb
mov
add
sbb
mov
ret
cltd
fwait
out
aad
adc
ds
jno
icebp
inc
in
lock
pop
shrb
les
or
leave
icebp
sub
mov
sbb
xchg
lcall
in
adc
fsubrl
mov
test
insb
and
or
jl
adc
enter
call
pop
dec
ja
mov
gs
jns
or
movsb
pusha
xor
adc
and
adc
mov
mov
adc
jmp
pop
popa
call
xchg
pop
xchg
xchg
add
xchg
and
rol
negb
pop
pop
ret
ja
cmp
js
std
push
xlat
out
mov
stos
sub
mov
stos
int
orl
mov
stc
movsl
inc
mul
inc
add
outsb
bound
fcom
lods
pop
in
fucom
jp
sbb
or
push
and
aas
push
test
stos
add
dec
imul
sub
int3
out
stc
lods
shlb
cmp
jne
and
dec
push
push
dec
xlat
imul
ss
out
mov
lea
mov
mov
lret
test
sbb
add
cmpb
add
arpl
icebp
das
into
add
jmp
shlb
fs
push
jne
fisubl
pop
dec
sub
add
clc
cld
aas
lcall
icebp
pop
pop
sti
sbb
xchg
mov
adcb
xchg
mov
scas
pop
inc
outsb
jbe
inc
call
or
push
jmp
cmpsb
stos
call
xchg
xchg
fdivl
fdivs
inc
jle
inc
dec
std
mov
rol
shrl
ljmp
xchg
xor
insb
mov
or
pop
inc
jecxz
lret
or
and
ror
cwtl
sub
mov
cmp
pop
and
popf
adc
pop
test
cmp
scas
xor
aas
push
jg
outsb
jnp
repz
jmp
or
lds
mov
xor
mov
in
cmp
popf
mov
out
mov
mov
cmp
or
rcr
cwtl
mov
out
mov
sarb
push
sub
pop
fld
add
test
movsb
inc
aam
adc
add
push
test
sbb
inc
das
xchg
inc
addr16
push
and
jmp
mov
jl
lcall
test
icebp
pop
mov
dec
out
push
jecxz
sahf
aaa
stos
add
mov
arpl
fdivl
ljmp
lret
cwtl
dec
pop
data16
in
mov
dec
inc
lods
pop
inc
xchg
cmpl
push
mov
mov
push
inc
shl
hlt
lods
outsb
jmp
in
push
test
add
jmp
add
scas
sub
pop
rcrb
lret
xchg
mov
and
dec
dec
into
rclb
lds
xlat
cltd
add
cwtl
inc
xor
jb
shll
inc
and
xchg
scas
jbe
and
mov
xorb
or
in
cmp
je
adc
mulb
push
dec
or
leave
and
mov
and
fldcw
pop
pop
sbb
dec
or
adc
roll
rclb
cmp
leave
adc
ja
mov
movsl
int3
cmp
inc
inc
insl
lcall
or
jns
lcall
lods
arpl
je
cmpb
push
stos
movsb
mov
orl
inc
push
lcall
das
xchg
jg
or
sub
sub
in
mov
lds
xorb
jecxz
sbb
sub
aad
test
push
mov
imul
data16
xchg
lahf
fsts
jmp
scas
lock
mov
cli
orb
pop
aas
and
add
xchg
outsb
push
inc
into
stos
mov
lea
add
mov
dec
mov
imul
mov
xor
jp
mov
jg
imul
popf
and
cmp
pop
mov
and
imul
push
and
push
int3
cmp
jle
lcall
lds
repnz
out
sbb
mov
cmpsl
jnp
sbb
call
xlat
pop
pop
jae
jns
dec
into
repnz
push
stos
sbb
push
mov
cli
popa
mov
fidivs
in
stc
outsb
ret
xchg
shrb
jbe
arpl
mov
insb
in
je
dec
xchg
cltd
pop
xor
xor
jb
lret
outsb
movsb
insb
jge
cmp
or
icebp
negb
out
in
mov
lret
ret
mov
orl
nop
pop
xor
push
lds
push
pop
pop
out
aas
or
sbb
dec
mull
jae
call
push
lret
sbb
loope
fisubrs
and
xor
out
sub
outsl
aas
sub
out
add
pop
mov
lret
xor
arpl
mov
xchg
in
cmp
and
cmp
je
dec
inc
jno
inc
adc
test
inc
pushf
das
xlat
mulb
mov
test
mov
movsl
lods
andl
into
std
sub
fs
dec
pop
or
or
test
movsb
push
movsl
cwtl
sub
out
pop
inc
sbb
xor
insb
rol
xchg
inc
int3
sbb
sarb
dec
jge
ss
cld
ds
pop
or
arpl
adc
test
pop
lea
in
mov
mov
lods
test
fs
call
cmpsl
js
lea
movsl
lock
and
cmp
or
aam
mulb
call
jecxz
xchg
sub
mov
in
add
xor
lods
mov
mov
push
xchg
enter
dec
add
dec
nop
sbbl
sbb
int3
dec
dec
cmp
mov
out
cmc
into
xchg
dec
jb
dec
call
and
jnp
inc
out
mov
dec
dec
mov
mov
iret
loop
sub
test
dec
cli
bsf
js
xor
test
scas
push
xor
ja
push
in
lcall
xchg
icebp
clc
add
aad
outsb
dec
test
aas
call
adc
or
inc
fldenv
gs
jno
inc
dec
pop
mov
cmc
scas
outsb
fs
push
je
push
and
xchg
add
xor
filds
mov
jge
loope
insl
sub
mov
cli
out
call
mov
movsb
scas
mov
scas
xchg
pop
dec
sbb
std
xchg
push
rorb
push
inc
xlat
jae
xchg
sbb
add
mov
out
xchg
sub
test
xchg
mov
lods
cmp
mov
lret
adc
inc
ja
cmp
in
cwtl
xor
mov
popa
xchg
push
addr16
outsl
xchg
es
idivl
lea
inc
mov
cmc
test
xorps
jg
ret
add
leave
cli
ret
and
sbb
mov
notl
fwait
popf
and
movd
bound
adc
push
mov
push
inc
je
push
pop
sahf
adc
add
jecxz
sbb
gs
pushf
test
aas
inc
notb
xor
adc
and
inc
xchg
xchg
rorb
xchg
push
xchg
adc
add
cmp
jl
inc
cwtl
das
fdivs
xchg
push
clc
loope
pop
xchg
gs
jne
push
insb
jge
daa
adc
ja
pop
js
arpl
xor
sub
aas
jns
andl
or
jne
rclb
popa
cmp
pop
push
outsb
jb
and
jae
xor
push
jne
ljmp
push
jne
mov
adc
mov
xchg
mov
aam
push
pushf
mov
push
shl
lea
insb
out
push
dec
addl
xor
mov
jge
jb
and
jg
hlt
push
roll
inc
mov
in
push
out
push
mov
out
inc
dec
adc
adc
sub
push
inc
ret
cmp
imulb
out
fisubs
mov
and
js
jns
xchg
leave
out
imul
movsb
pop
jnp
xchg
jl
jge
adc
jne
sub
jle
dec
push
xchg
dec
inc
dec
int
inc
cs
add
mov
dec
test
sub
jne
pop
test
pop
push
cltd
mov
fists
and
push
out
push
fstps
out
test
cli
loop
rcrb
add
int3
pop
xchg
and
aaa
repz
adc
inc
test
cmpsb
mov
bound
cmp
stc
sbb
js
jg
scas
ss
mov
movsb
lock
std
bound
fildl
fbld
xchg
sbb
cmp
push
mov
ret
in
rclb
or
in
or
push
cmp
sbb
jnp
jno
repz
movsl
push
lret
adc
jbe
mov
mov
mov
iret
xchg
lcall
push
lret
adc
push
es
dec
js
mov
rcr
mov
mov
add
shl
xchg
mov
popf
cli
sarl
pop
sahf
mov
pop
js
movsl
sbb
jo
or
pop
and
insb
outsb
sbb
es
jo
jmp
lcall
sub
fwait
popf
xchg
test
mov
jmp
jmp
fisttpll
xchg
in
lcall
popa
nop
lret
inc
stos
lods
repz
fldcw
add
fs
cwtl
int3
xchg
xchg
in
xchg
aam
icebp
and
pusha
push
adc
repnz
es
xorl
pop
lret
adc
inc
sbb
sahf
repnz
push
fildl
xchg
lock
mov
in
xchg
into
es
orl
loopne
mov
fsubr
mov
xchg
sarb
popa
rclb
push
xchg
mov
mov
sbb
xor
arpl
mulb
xchg
les
inc
mov
push
lcall
inc
sbb
mov
xor
jbe
sub
cltd
xchg
filds
mov
jge
or
icebp
mov
lods
in
inc
fsts
add
adc
mov
add
nop
add
hlt
loope
sub
dec
scas
arpl
aam
rol
fsubrl
mov
push
add
xor
cmc
loope
inc
addr16
xchg
mov
popa
pop
mulb
lret
push
or
sbb
inc
cmp
xchg
sbb
call
ss
mov
lods
push
lahf
and
xchg
mov
rolb
test
or
icebp
mov
jbe
nop
into
addr16
outsl
ficoml
iret
sub
outsl
mov
mov
sub
jg
out
jp
adc
or
notb
iret
aas
and
jno
fs
dec
clc
push
scas
aaa
shr
sub
jmp
stos
pop
xor
sub
arpl
xchg
push
popa
sarl
ret
flds
test
adc
add
rcl
ficompl
bound
adc
ja
xchg
mov
mov
xchg
iret
cli
pop
xchg
incb
outsl
ja
iret
aad
or
cs
dec
icebp
cmpsb
or
inc
call
gs
inc
arpl
inc
or
fistpll
pusha
es
xchg
mov
jge
orl
test
cmp
iret
cltd
jbe
fwait
stos
mov
add
loop
jns
ss
jb
jp
mov
in
mov
in
stos
shrl
shrb
adc
fwait
cld
xor
in
pop
icebp
in
push
shrb
push
out
aaa
push
ds
pop
icebp
xor
mov
mov
lods
inc
mov
fwait
in
repz
int3
dec
nop
out
push
dec
ljmp
loop,pt
pop
jbe
push
lret
repnz
or
pop
repz
dec
dec
cmp
jge
cwtl
mov
cmc
insl
mov
in
xchg
mov
out
dec
js
bound
xchg
lahf
js
inc
xchg
and
adc
ljmp
mov
je
jmp
jmp
loop
fs
add
iret
sahf
dec
sbb
sarb
and
and
sub
lahf
cmc
je
cmpsb
dec
and
pop
jb
xchg
xchg
pop
push
mov
sub
mov
fucomi
insl
insb
jge
sbb
imul
stc
cmp
or
xor
cmp
mov
push
jp
fimuls
lods
mov
sub
mov
jno
xor
in
mov
movsb
fs
inc
push
cld
sub
mov
es
scas
dec
cmp
and
push
fs
dec
outsl
pushf
inc
js
jp
lods
jecxz
enter
pop
xchg
lds
jns
cmpsb
in
incl
pop
or
xchg
add
xor
lret
push
mov
ja
or
inc
negb
fcompl
add
movsl
sti
xchg
dec
cmp
ss
aam
xchg
jge
dec
std
and
out
lods
sub
pop
cmp
pop
push
lds
pop
lods
inc
je
jne
add
into
dec
imul
cmp
jns
int3
aad
sti
cmp
sub
mov
js
outsb
push
lahf
movsb
iret
cltd
pop
lods
aas
cli
cmc
aam
adc
and
in
loop
cli
sub
adc
dec
add
jo
xor
je
test
negb
xor
sbb
rolb
xor
shl
or
sbb
and
jp
fisttps
jo
cwtl
inc
fsubrl
mov
xchg
or
std
fcoms
xchg
into
jl
in
enter
and
and
je
and
lods
mov
in
xchg
adc
data16
dec
dec
jbe
mov
aam
out
pop
sti
test
iret
mov
movsb
xchg
fcmovu
xchg
ds
or
inc
fcomp
dec
push
in
sti
cltd
cli
aaa
stos
test
fldl
mov
xor
push
mov
hlt
es
adc
test
popf
xchg
and
sub
push
rcrl
xor
out
stos
mov
mov
ret
popa
jg
sbb
and
testl
pop
push
or
or
pop
rcl
test
pminub
add
out
leave
dec
mov
push
sti
das
int
push
ja
xor
cmp
daa
pop
dec
mov
mov
cld
loopne
out
pop
xchg
fstpl
xchg
les
je
clc
loop
leave
sbbl
inc
orb
fldt
ja
jle
inc
xchg
mov
xor
adc
jb
mov
xor
adc
push
lods
mov
das
add
sub
outsb
jl
fmuls
iret
daa
inc
lea
dec
sub
lahf
movsl
fldt
cwtl
or
mov
aaa
loop
paddq
divb
js
fwait
loope
xchg
test
jne
jmp
stos
add
mov
xchg
xor
mov
add
and
hlt
aad
loopne
add
xchg
enter
stos
scas
rolb
mov
popa
xchg
ds
insb
aas
push
shll
jl
cmp
fadds
pop
cli
xchg
addr16
pop
iret
mov
mov
and
mov
cmp
cli
xor
sbb
fdivrs
push
jg
in
push
pop
int3
mov
add
daa
adc
mov
jge
cmp
out
or
je
cmp
cmp
xor
jmp
movsb
jp
ret
mov
cmp
or
les
jle
adc
out
and
pop
and
jmp
xchg
jns
jge
jecxz
mov
mov
rcrb
dec
stos
dec
lret
and
negb
xor
inc
xor
push
cmp
xlat
fucomi
jle
fbld
jno
mov
add
call
addr16
sar
std
lahf
orl
sub
mov
add
cmp
inc
lds
bswap
ss
dec
iret
push
pop
mov
jle
cmp
push
and
enter
scas
loop
jbe
jnp
xor
push
and
xorb
jmp
cmpsl
lcall
lcall
fcoml
inc
push
xchg
or
cmc
pop
cmp
outsl
and
jnp
lock
icebp
mov
mov
lods
mov
gs
leave
popa
icebp
and
ds
sbbl
adc
mov
xor
lahf
xchg
and
dec
mov
aas
jp
jmp
jmp
outsl
lds
out
movsl
fisttpll
fwait
sbb
in
cmp
and
add
inc
adc
sbb
enter
lahf
pop
dec
push
cmp
xchg
xor
stos
je
sbb
lock
mov
xor
jge
loope
ljmp
mov
sbb
cmpl
mov
xchg
addr16
movsb
dec
test
push
in
xor
inc
push
sbb
and
popf
cmpsb
mov
xlat
jl
je
xlat
adc
sub
mov
lahf
inc
test
lcall
push
add
test
xchg
int3
lahf
inc
fidivrs
adc
sbb
insl
cmpsl
add
dec
xchg
push
inc
and
xor
pusha
jnp
mov
jle
stos
add
gs
mov
rolb
test
je
xor
loop
xchg
mov
add
xor
push
ret
or
aad
stos
push
arpl
ljmp
push
insb
jp
mov
inc
sub
xchg
mov
jecxz
enter
and
test
ret
push
and
lods
dec
loope
enter
jb
sub
addr16
mov
mov
icebp
jecxz
jl
xor
push
inc
jge
fdivs
mov
dec
std
popf
sti
cld
and
stos
push
push
jmp
push
xorl
jp
mov
lea
jmp
pop
repnz
xor
jp
dec
cli
xchg
js
cmp
scas
inc
mov
or
jmp
lods
pop
pusha
pusha
lret
mov
push
cld
in
out
bnd
adc
sub
ret
inc
cld
mov
jg
mov
ficoml
pop
push
add
es
xchg
arpl
inc
xlat
ficoms
add
movsl
sub
cmc
filds
lcall
push
imul
jle
aaa
flds
ljmp
mov
jnp
jle
push
jo
cwtl
out
cmp
xlat
aaa
or
fdivrs
dec
cmp
sub
repnz
into
cmp
in
out
jmp
push
lea
inc
ljmp
jecxz
rclb
xchg
or
mov
cmpsl
mov
das
or
jne
cmp
and
xchg
add
jo
loopne
fnstenv
int
data16
test
rcr
fadds
lcall
stc
pop
xchg
dec
push
dec
cwtl
mov
mov
xchg
mov
fwait
js
push
add
xlat
jbe
imul
mov
sub
out
or
sbb
popa
cmpsl
aam
and
pushf
inc
pop
or
add
cli
xchg
xchg
dec
sub
or
or
xlat
lea
mov
add
test
test
xchg
mov
or
or
push
mov
frstor
mov
push
mov
leave
mov
mov
popf
sbb
mov
xlat
sarb
inc
shlb
lock
xor
aas
addr16
out
insl
imul
dec
add
imul
add
icebp
add
call
out
and
lcall
fildl
sbb
jp
pop
cmpsb
push
sbb
icebp
outsb
push
andl
imul
xchg
mov
insb
inc
sub
mov
xor
xchg
jbe
arpl
dec
iret
pop
filds
mov
mov
lock
pop
jns
rcrb
push
les
test
jle
fnstenv
fwait
neg
stc
and
xchg
loope
pop
stos
pushf
ja
scas
xor
mov
out
negb
mov
dec
mov
jecxz
pop
push
enter
sbb
push
mov
dec
push
pop
scas
push
adc
or
sbb
cs
jae
inc
lods
mov
stos
inc
sub
xchg
or
xchg
jmp
push
or
imul
xor
xor
pop
or
pop
fucomp
int3
mov
dec
js
lds
xor
push
inc
jge
cmc
xor
lds
inc
data16
std
out
pop
xchg
sbb
sbb
shlb
sbb
repnz
pop
loope
stc
test
out
jae
jecxz
loop
mov
and
push
cmp
aad
adc
out
push
enter
pop
jne
sbb
leave
je
adc
and
xchg
aaa
mov
imul
mov
cmpsb
mov
push
repnz
fcmovnb
sub
rorl
pusha
stc
cmc
push
jno
mov
sti
xchg
cmpsb
and
inc
push
imul
pop
fs
or
xorb
xor
cmpsl
daa
dec
test
push
jne
cmp
push
or
pop
jno
pop
xor
ljmp
dec
inc
push
pop
cmp
jp
jecxz
cwtl
xchg
clc
outsb
adc
shlb
adc
sbb
lcall
dec
push
xchg
adc
push
aas
xor
ret
pop
dec
imul
add
mov
fwait
movsl
cwtl
test
mov
jecxz
xor
dec
stos
idivl
push
pop
jns
inc
and
cmp
mov
dec
scas
pop
jge
fisttpll
adc
js
data16
fwait
mov
imul
jns
sub
mov
das
add
nop
in
nop
in
pop
lock
int3
mov
add
xchg
mov
xchg
in
test
jb
add
cwtl
mov
mov
xor
mov
cmp
push
xchg
jo
std
xlat
inc
imul
icebp
lret
sbbl
mov
inc
or
pop
test
test
cmp
clc
pop
dec
ljmp
pop
imul
adc
xor
outsb
in
popf
mov
or
mov
inc
jp
aas
je
loope
addr16
or
mov
or
scas
dec
jo
sbb
mov
out
imul
and
mov
push
daa
or
popf
les
or
xor
jp
fcomi
or
fisttpl
fwait
inc
out
jbe
mov
pop
pop
jg
imul
ficoml
dec
mov
mov
fs
lock
imul
push
dec
add
cmp
test
inc
andb
outsl
mov
ret
pop
and
or
and
ja
test
jb
bound
jnp
cmp
popf
mov
cs
xchg
xsaveopt
in
jns
subb
cmc
cmp
arpl
movsb
inc
pop
or
xchg
gs
sub
les
mov
add
dec
ja
mov
lret
neg
xchg
imull
pop
xchg
das
pop
fisttpl
and
jmp
and
out
adc
ret
jns
mov
popa
cmp
negl
sbb
inc
jp
and
out
jne
dec
push
push
xchg
test
nop
je
mov
mov
daa
fcomps
cmpsl
and
das
sub
xor
sub
pop
rcrl
mov
cmc
sti
cmp
sub
aad
xlat
stos
push
fsubs
xlat
ret
adc
lret
pusha
ret
fwait
out
into
fcos
push
mov
xchg
loope
stos
dec
outsl
cmp
pop
mov
add
mov
and
mov
fstl
test
xor
andl
sub
das
sbb
pop
out
xor
inc
push
aad
shlb
add
inc
jbe
filds
pop
popa
adc
jl
aad
cmc
cltd
insb
jno
sub
or
cwtl
in
add
push
sub
or
sbb
pop
andl
xchg
mov
lret
fsubrp
mov
jmp
push
lret
fisttps
pop
jae
out
andl
xchg
enter
enter
dec
dec
ds
adc
lcall
inc
add
loope
add
fldt
xchg
mov
jp
mov
rcrl
add
jl
mov
pop
jge
dec
xchg
xor
scas
stc
cmpsl
mov
insb
lods
je
sbb
inc
xchg
imulb
xor
fldenv
mov
pop
stc
inc
inc
in
sti
add
lds
dec
xchg
mov
cmp
mov
mov
std
outsb
mov
mull
and
cmp
pop
xchg
or
xchg
jp
in
jae
mov
mov
lret
mov
mov
pop
gs
int
adc
and
ret
jae
or
leave
cli
mov
dec
push
test
xchg
scas
or
in
cmp
sbb
movsl
fsubrl
leave
sub
iret
js
mov
add
inc
jl
aam
stc
adc
sbb
or
jns
sub
sahf
ss
xchg
and
sar
pushf
cmp
movsl
sbb
sub
mov
mull
shlb
push
push
and
rcrb
xor
and
jnp
fmuls
imul
adc
cmp
insb
int
addb
mov
movsb
rorb
faddp
adc
pushf
repnz
les
pminsw
sub
jmp
xor
insl
les
inc
shll
adc
push
scas
or
icebp
aam
or
ss
xchg
pushf
movsb
dec
test
mov
shlb
test
repz
int3
add
add
push
xchg
out
scas
scas
mov
adc
mov
xlat
loopne
rorl
mov
dec
pop
ds
loopne
jg
inc
pop
or
pop
inc
in
mov
mov
jno
cltd
xor
imul
dec
push
sbb
add
push
and
mov
push
fists
in
adc
fs
out
sbb
scas
xchg
mov
pop
std
pop
in
lahf
and
jbe
xor
mov
ret
inc
or
test
inc
dec
adc
std
dec
push
int
sub
xlat
or
mov
mov
gs
lds
clc
sbb
jbe
std
xchg
mov
jg
inc
sbb
lock
fdivrl
jbe
and
pop
cmp
hlt
ds
pop
int
cs
out
stos
notb
pop
out
dec
add
mov
push
pop
testl
add
iret
inc
dec
daa
insb
test
mulb
xor
flds
and
xchg
and
jns
out
lret
sbb
js
jp
push
int
scas
dec
xchg
sub
outsb
push
or
inc
in
inc
in
mov
cwtl
or
fiadds
xor
sbb
and
push
and
pop
inc
mov
scas
ficoms
or
and
leave
xor
std
fistpll
pop
iret
fdivrs
mov
in
iret
sub
dec
popf
jae
dec
mov
aam
adcb
and
mov
sub
cmp
inc
iret
sub
decb
push
dec
lods
out
mov
or
mov
or
mov
insl
pop
testb
bound
cmpsb
iret
adc
inc
adc
scas
mov
add
xchg
fnstenv
cmp
sub
outsb
jo
push
add
xor
pusha
sub
inc
jbe
pop
cmp
cmpsb
test
mov
xchg
pop
in
scas
addr16
sbb
mov
jp
movsl
sub
add
pop
icebp
jle
cmc
cmpsb
dec
inc
sbb
xchg
adc
and
ljmp
icebp
pop
cmpsl
cmp
pushl
jbe
test
push
xlat
pushf
xor
xor
leave
pop
push
add
loope
rorb
inc
loopne,pn
and
or
fnstcw
fs
test
jge
mov
into
cmp
es
lahf
adc
loopne
push
mov
and
adc
sub
movsb
sbb
hlt
mov
and
jae
insl
int3
stos
mov
jg
jg
push
adc
fs
popa
nop
insb
and
fnsave
outsl
xlat
mov
xchg
jne
cmp
out
daa
dec
inc
in
xor
jge
rcrb
scas
inc
testb
stos
jnp
sbbb
lahf
imul
mov
inc
decl
stc
adc
insl
aad
daa
ret
mov
push
sub
push
addr16
pop
repz
inc
xchg
stos
cmpsb
mov
lods
loope
aad
stos
mov
cmp
fs
pop
ret
or
sub
cmc
mov
test
loop
test
sub
pop
or
jmp
mov
ds
and
test
push
adc
aad
jg
add
and
mov
xchg
mov
cmp
cs
jbe
clc
push
decb
divb
fnstcw
cmp
cmp
push
scas
icebp
mov
aas
ja
mov
pushf
in
inc
cwtl
aas
mov
loope
out
jb
add
sub
jg
pop
sub
add
jo
je
popa
insl
dec
fcmovnu
mov
push
pop
pop
mov
ja
or
jl
sbb
test
mov
xchg
pop
ds
pop
pop
nop
rol
ljmp
xchg
shll
push
or
mov
jge
sbb
sbb
insl
cmp
inc
popf
xchg
xchg
pop
repz
repz
adc
inc
sbb
or
shll
addl
pop
ficoml
nop
jb
mov
mull
imul
inc
and
sub
sti
mov
mov
xchg
jle
push
cli
and
jmp
in
dec
sar
loop
adc
stos
push
popf
les
adc
jg
and
sbb
pop
in
xchg
insb
fsubl
cmpsb
xchg
mov
psadbw
addr16
and
cmpsb
mov
and
insl
mov
and
out
dec
mov
faddp
daa
jnp
dec
fmull
mov
xor
push
pop
lock
lcall
mov
jb
sti
aad
sub
mov
or
lods
out
popa
inc
add
mov
pop
out
add
xor
bound
ds
push
popf
lock
push
lds
mov
fchs
and
and
aas
jmp
mov
xor
xor
push
lods
mov
ficoms
xchg
adc
push
cli
imul
scas
sbb
push
mov
xchg
mov
inc
cmpsl
mov
movsl
and
inc
ret
int3
jecxz
mov
or
ficompl
and
imul
stos
aas
jmp
leave
insb
jecxz
in
mov
inc
lea
and
arpl
jecxz
cmp
mov
outsl
icebp
cmp
lret
sti
outsl
lea
adc
push
push
or
adc
sbb
mov
sbb
push
and
bound
pop
in
fsubrl
jnp
inc
popa
cmc
addl
sbb
dec
incl
inc
scas
lock
cmpb
sahf
mulb
xor
mov
adc
inc
dec
repz
cwtl
ss
cld
or
cmp
mov
pop
or
ret
xlat
cmpsb
sbb
jns
int
int
sub
pop
mov
mov
pop
xor
inc
gs
in
or
dec
fildl
xor
push
ss
stos
jecxz
or
mov
out
and
ss
pop
push
movsl
jle
popa
rorl
mov
push
enter
push
adc
jns
loop
ljmp
jle
cmp
dec
addl
pop
sub
rclb
pusha
push
leave
pop
cmp
cmp
aad
ret
pop
lods
cmpl
sahf
in
jne
add
xchg
loopne
mov
mov
sti
jno
jecxz
lods
sub
testb
inc
js
xor
adc
call
data16
mov
fcompl
xchg
dec
gs
jl
lea
pushf
scas
aaa
mov
mov
sub
test
inc
sub
adc
mov
xor
mov
pop
imul
jle
icebp
mov
add
pop
loop
ds
pop
aaa
mov
lret
sub
sbb
dec
and
push
fsubr
mov
fidivl
lret
cmp
iret
cs
cli
jns
in
mov
dec
leave
jb
cmpsb
test
ret
push
sbb
enter
sbb
das
dec
cmp
sbb
xchg
push
inc
loopne
ja
lods
loop
std
mov
mov
jns
lret
movsb
shrl
cs
out
adc
jp
and
sub
xchg
jne
cwtl
xchg
shrl
insl
jno
push
mov
test
mov
push
pop
cmp
adc
decl
or
mov
push
dec
fisttps
inc
xor
jp
inc
sbb
cmp
cli
andb
sar
dec
imul
push
mov
ret
mov
or
xchg
loope
xor
pop
pop
and
sahf
ret
into
lods
ror
mov
inc
xor
ss
mov
jno
subb
scas
cltd
aas
xchg
jge
popa
dec
insl
mov
repnz
pop
mov
mov
fs
test
lock
xlat
add
ds
or
cwtl
pop
mov
aas
mov
popf
into
sti
sbb
test
rcr
scas
std
iret
bound
mov
pop
clc
push
jae
lds
scas
dec
push
imul
loope
push
pop
sub
aas
mov
sub
cmp
cmp
stos
mov
aad
fldt
mov
or
hlt
dec
xor
imul
mov
inc
in
push
or
mov
cmp
and
cmp
movsb
mov
add
ss
cwtl
aas
cltd
insb
xor
test
in
sub
rcl
pop
mov
out
sub
popl
imul
aad
es
std
fcoml
nop
shrb
test
lret
fidivs
cmp
ds
roll
sub
enter
xchg
lock
adc
ds
xchg
or
push
push
mov
mov
xorb
xchg
dec
aad
sub
inc
sti
jg
outsl
pop
ljmp
fwait
scas
movsl
sub
inc
or
sub
mov
or
enter
xor
enter
sti
cmp
sub
subl
ss
mov
gs
in
inc
cmp
jp
lea
out
in
pop
pop
or
jo,pn
fnstsw
mov
mov
aas
ljmp
das
scas
pop
push
and
sbb
jl
add
xchg
or
filds
cmpsl
or
or
push
sahf
das
xor
add
js
call
gs
pop
lods
xchg
pop
rol
xor
add
in
and
rclb
jecxz
iret
or
scas
lds
outsb
filds
ss
jb
test
xor
insb
out
push
cwtl
negl
pop
test
scas
cs
xchg
in
mov
jae
xchg
fldl
xchg
out
push
fcmovnb
add
lea
outsl
flds
and
pop
int3
lret
out
or
add
push
cmp
push
mov
pop
fcmovnu
repz
sbb
dec
and
jge
insb
lea
or
stos
scas
ja
pushf
fneni(8087
je
gs
fmull
lds
add
pushw
andb
aad
jae
sti
mov
mov
dec
stos
push
outsl
sub
inc
std
pop
das
popf
loope
ds
into
inc
sbb
js
in
mov
adc
cltd
ljmp
push
push
sub
adc
dec
rorb
inc
fsubs
inc
push
imul
sub
stos
arpl
pop
je
push
push
jle
dec
dec
loopne
pop
or
cmp
push
insb
insb
sarb
clc
decl
loope
faddl
lods
push
cmp
lret
push
adc
test
dec
cmp
push
dec
sbb
inc
repz
adc
inc
xor
lock
enter
adcb
dec
xorb
pop
rorl
cmp
mov
jbe
push
bound
cmp
les
mov
pop
ja
or
pushf
mov
imul
insl
adc
jle
ficoml
add
mov
push
gs
push
xor
outsb
mov
jge
sti
adc
fsubr
xor
adc
mov
pop
mov
repnz
dec
lret
movsb
mov
sbb
loopne
cmpl
dec
mov
mov
sti
mov
clc
push
pop
mov
cmp
idiv
or
xchg
lcall
cs
mulb
xor
pop
ss
ja
pop
std
adc
push
ror
les
insb
jns
aam
sub
fiaddl
andb
cmp
adc
push
addb
lods
testl
stc
sahf
push
push
inc
xor
pop
jge
mov
stos
div
sub
fcomps
pop
test
inc
push
add
push
xchg
fistps
cmc
dec
xchg
and
sti
jo
cmc
jp
stc
mov
jg
xorb
cli
mov
sahf
shrb
push
out
dec
xchg
fistps
addl
pop
jge
mov
iret
mov
dec
jae
mov
cli
aaa
loope
pushf
aad
imul
movsl
mov
mov
push
cmc
lret
in
sbb
out
mov
stc
jne
popa
out
mov
aas
mov
sahf
ret
mov
xor
bound
fucom
cli
ja
add
out
xchg
push
imul
jle
dec
push
shrb
push
outsl
mov
int
add
test
dec
mov
and
movsb
repz
xchg
rclb
dec
jmp
stos
repnz
inc
in
pop
shrl
mov
xlat
xor
popf
jo
mov
xor
mov
stos
repz
test
sbb
push
in
bnd
adc
in
stos
test
ret
jecxz
sub
sbb
mov
scas
pop
pop
xchg
int3
mov
call
movsb
paddq
pusha
not
inc
add
clc
sub
pop
dec
sbbb
ficomps
arpl
or
mov
addr16
mov
fildll
cmc
fisubl
out
dec
pushf
adc
push
cli
mov
pop
out
daa
enter
pushf
add
mov
pop
mov
not
mov
dec
clc
repnz
add
adc
aam
and
insb
sub
jns
push
mov
das
outsb
xchg
je
push
cld
mov
add
gs
imul
inc
jnp
mov
mov
xchg
gs
fildll
les
aaa
scas
shll
sub
jnp
scas
mov
pop
loopne
add
mov
dec
aas
mov
lods
hlt
adc
cmp
pop
xchg
cltd
cmpsl
out
mov
test
ds
test
jbe,pt
mov
add
mov
cld
jge
xchg
jae
sti
mov
fadds
lods
inc
xchg
popf
jo
xchg
fstp
cld
cmpl
jle
mov
stos
xchg
mov
dec
outsb
push
inc
test
fs
or
xchg
fmull
mov
pushf
mov
inc
mov
aaa
xchg
aas
aaa
or
sbb
in
push
mov
test
enter
mov
sub
xchg
cmp
int3
mov
jno
idiv
dec
lods
or
lock
in
cmp
lret
dec
mov
call
leave
mov
js
sbb
movl
jb
into
push
xchg
inc
dec
daa
cmp
test
mov
dec
imull
push
add
cmp
fiaddl
fstpl
mov
xor
mov
jmp
and
sub
adc
dec
inc
out
sbb
loop
jbe
mov
icebp
jge
leave
in
or
dec
repz
repz
jb
xchg
enter
cltd
mov
cmp
inc
iret
popf
mov
das
cmp
sub
push
xor
mov
mov
pop
rolb
faddp
adc
movsb
mov
sbb
outsl
and
andb
stos
stc
fsubp
cmp
adc
push
test
pop
jne
fcmovne
cmp
cltd
cwtl
scas
ret
push
jo
add
lods
dec
add
cli
mov
xor
lds
sarl
int3
in
jmp
mov
es
push
mov
nop
test
imul
push
xor
faddl
rcrb
test
subb
and
sbbl
pop
ds
dec
test
or
jno
mov
xor
test
mov
fsubl
incl
mov
xor
xor
push
stos
popa
out
frstor
xorl
mov
and
imul
push
ja
adc
mov
xchg
ja
and
sbb
mov
xchg
jb
clc
xchg
pusha
or
orl
ljmp
cmpsb
outsl
rcrl
iret
in
scas
lea
dec
xorb
cli
cmp
enter
out
in
inc
lods
aaa
add
repz
iret
insl
mov
xchg
punpcklbw
jge
aas
or
add
ljmp
dec
add
mov
lcall
push
xchg
add
popa
or
ss
int3
inc
inc
lods
pop
mov
cmp
fwait
pop
stos
mov
movsl
sbb
pop
ss
mov
into
inc
sarb
mov
in
dec
adc
pop
dec
push
jmp
push
xor
jns
and
fdivs
adc
and
push
jmp
gs
mov
loopne
mov
push
or
int
push
jo
mov
adc
mov
pop
or
mov
mov
mov
add
das
popa
pop
lret
test
jl
bound
icebp
fmul
add
cli
ret
stc
sub
adc
add
jnp
jg
sbb
iret
js
in
sub
ja
add
xor
xor
dec
add
pop
cli
xchg
cmp
pop
loope
fistps
addr16
and
fldcw
cmp
mov
adc
add
movsb
loopne
xor
xchg
xor
push
addb
add
cmp
hlt
int3
mov
jle
js
and
push
pop
mov
jne
lret
rorl
pop
movsl
leave
pop
fisttpl
les
xchg
iret
pushf
test
jbe
addr16
pop
les
outsl
fsubr
fwait
hlt
aam
out
mov
lods
and
popa
xlat
pop
mov
add
popaw
rorb
add
in
cmp
cltd
loope
cwtl
out
mov
cmp
cmp
dec
call
popl
aad
insl
ret
cmpsb
test
or
or
or
xchg
aaa
and
cmpsb
sahf
jae
mov
frstor
les
pop
in
xchg
xor
sbb
and
scas
or
shl
jno
or
mov
xor
and
outsl
outsb
mov
popa
push
mov
add
roll
cmp
stos
push
push
add
pcmpeqb
fs
icebp
pop
dec
out
aaa
inc
test
dec
or
stos
xlat
mov
and
sub
sbb
cmp
mov
ds
dec
movsb
sub
mov
xorb
inc
mov
sub
outsb
mov
cmp
loopne
lcall
arpl
pop
iret
aam
mov
jl
addr16
mov
and
cmp
mov
mov
outsb
inc
pop
scas
jne
repz
mov
fimull
je
pushf
movsl
and
cli
movsl
push
int3
inc
xchg
enter
es
jae
mov
test
jle
dec
pop
lock
xor
jno
sub
lds
popa
int
fadds
lret
imull
enter
sub
add
mov
cmp
pop
or
cmp
sbb
push
mov
sub
test
cmp
push
aaa
lret
pusha
jg
adc
mov
xchg
int3
and
push
xor
scas
js
sbb
lods
in
cwtl
xchg
xchg
out
push
sub
cmc
outsl
xorb
dec
fistl
lods
popa
mov
enter
mov
and
mov
in
arpl
sub
flds
adc
dec
or
cmp
rcl
adc
cmp
jnp
dec
ss
cwtl
mull
ror
lahf
mov
cmpsl
push
mov
aam
lock
adc
inc
aad
popa
shlb
xchg
test
sub
sub
lods
dec
add
mov
sarl
and
xor
bnd
aas
idiv
sbb
push
insb
sub
adc
dec
aam
in
push
fiaddl
stos
pop
out
jmp
mov
movsl
scas
out
movsl
xchg
jle
idivl
mov
int
les
shll
adc
lcall
aam
insb
cmp
std
shll
jae
xchg
lods
clc
push
mov
push
mov
pop
dec
dec
mov
bound
cmp
mov
ja
insl
repnz
iret
sahf
dec
adc
pop
test
push
xor
and
enter
dec
dec
and
into
pushl
jp
jno
mov
jp
fldt
test
cmp
and
clc
sub
std
in
es
test
in
push
push
int
mov
int3
mov
les
test
push
jno
loope
xchg
xor
dec
mov
cmpsb
and
mov
ljmp
test
shll
inc
leave
inc
cmp
bound
std
fdivp
xchg
into
loop
mov
insl
pop
call
stc
adc
mov
xchg
sbb
adc
adc
rol
out
sbb
xor
fabs
push
divb
adc
jmp
add
std
cmc
rorl
repz
sbb
gs
mull
sar
lret
dec
mov
cmp
sbb
stos
push
xchg
out
xor
xor
sbb
cmp
jo
xchg
ss
mov
mov
dec
jl
xor
cmc
out
int
jns
xchg
icebp
sbb
mov
sbb
jbe
notb
mov
fcmovbe
rcrl
repnz
push
mov
cmp
popa
fcom
loopne
ljmp
add
mov
or
sbb
mov
push
fsubrl
jnp
mov
mov
dec
xor
repnz
pushl
push
adc
aaa
and
push
bnd
pop
jo
shl
dec
jge
mov
bound
xor
insl
pop
enter
add
fistps
mov
dec
ss
jo
sbb
adc
xchg
icebp
shrl
jns
je
mov
les
fnstsw
call
lret
push
sbb
mov
inc
mov
sbb
jns
pusha
mov
arpl
pushf
into
jg
inc
imull
aam
pop
js
and
and
mov
cltd
leave
test
mov
rorl
call
add
js
pop
mov
outsl
mov
out
and
int3
mov
nop
test
int
imul
adc
int
jae
lahf
scas
cwtl
add
pusha
inc
das
adc
lret
mov
pop
cmp
movsl
frstor
jle
mov
mov
ljmp
aas
mov
and
int
and
jl,pn
test
into
push
dec
mov
bound
arpl
sbb
call
insl
or
mov
popf
push
sbb
sbb
sbb
cmpsl
sbb
insb
or
mov
std
pop
mov
jns
xchg
pop
xlat
push
push
nop
push
jg
dec
push
push
mov
adc
adc
arpl
pop
adc
xchg
cli
les
rcl
push
adc
cld
jb
lahf
sub
dec
xchg
xor
xchg
pushf
adc
gs
fdivr
push
std
mov
mov
jl
xchg
sbb
lods
in
mov
cltd
push
or
cltd
mov
sub
mov
jl
jbe
jns
clc
test
aam
rolb
pushf
call
sub
push
lahf
subl
dec
mov
mov
cs
mov
into
inc
ret
aas
popf
nop
add
pop
das
jno
and
aad
xchg
ret
lock
xchg
jae
imul
adc
xor
push
or
lcall
or
adc
std
into
rorb
aaa
pop
mov
xchg
pop
or
and
mov
ret
outsl
leave
das
pop
test
add
and
out
gs
xchg
icebp
xchg
mov
nop
xchg
adc
or
dec
mov
fs
push
outsl
push
xchg
sub
xchg
out
inc
stos
mov
adc
das
pop
mov
pop
loop
out
xchg
popf
cmp
xchg
pusha
fidivrs
pop
int3
pushf
jae
sub
ret
iret
iret
ljmp
mov
jl
mov
jecxz
das
inc
xor
out
flds
rolb
into
inc
addr16
mov
nop
jp
popa
stc
mov
rcrl
ss
mov
fidivl
or
jg
pop
dec
cli
xchg
sub
negl
cltd
js
jmp
mov
cmpsl
fldcw
fcompl
adc
lea
sahf
lcall
stos
push
xlat
push
in
out
nop
xchg
mov
setp
inc
mov
add
enter
and
dec
out
lret
outsl
inc
inc
xorl
leave
int
dec
rolb
lahf
arpl
icebp
stos
jo
lods
fsubr
mov
out
add
test
les
cmp
rclb
mov
outsl
xor
inc
popf
mov
aam
movsl
lcall
adc
dec
ss
mov
jmp
addr16
lcall
movsb
daa
push
jno
outsb
or
pop
aaa
xor
sub
stos
es
add
mov
roll
mov
and
xchg
add
nop
rcr
daa
inc
daa
jbe
adc
cmp
mov
pop
test
sub
inc
gs
xchg
sub
imul
add
sbb
in
loope
add
imul
push
fldt
xor
imul
push
sbb
push
aas
mov
add
movsb
loop
out
xchg
dec
jbe
test
xchg
sahf
push
lods
adc
jno
lods
stos
enter
orl
jno
sub
xchg
adc
lock
pop
pop
xor
or
out
ret
es
aad
xor
into
inc
inc
mov
shll
dec
aas
mov
xor
xchg
xchg
cmpb
adc
sub
or
jmp
lock
inc
xorps
jae
jns
std
mov
orb
xor
daa
and
pop
jae
mov
loopne
std
dec
lcall
adc
popf
movsb
cld
out
adc
lods
aam
std
xor
cwtl
and
push
mov
jge
test
cwtl
jecxz
mov
sub
test
test
mov
scas
mov
and
mov
jbe
add
je
out
stc
fwait
sub
je
jmp
mov
cmc
mov
mov
bound
stos
mov
sub
int
dec
shlb
repz
imul
es
scas
push
cltd
mov
repz
pop
mov
inc
addr16
iret
dec
cmp
lret
xchg
js
add
mov
cmp
stos
push
decl
jge
out
mov
or
push
jne
mov
lds
cld
enter
or
sub
push
rcrl
shrb
mov
adc
int
and
sub
aad
lcall
cmp
mov
mov
dec
ror
xchg
test
daa
out
imul
mov
das
jge
scas
push
rcrb
jle
aaa
sub
lahf
leave
aam
add
sub
push
in
cmp
mov
cwtl
cs
add
fisttpll
lock
jecxz
add
or
dec
xor
inc
movsb
xor
test
out
push
iret
pop
jbe
mov
pop
inc
xchg
ja
mov
scas
out
adc
mov
sub
mov
scas
add
mov
jl
mov
iret
xchg
hlt
dec
cmpsl
sbbl
sub
xor
jbe
jnp
clc
jae
add
mov
rolb
stos
or
push
jle
in
popa
std
call
sub
pop
lahf
pop
add
mov
and
cs
enter
or
cld
mov
cwtl
clc
or
jo
ljmp
loopne
jle
in
cld
sbb
xchg
push
xor
adc
loopne
int3
jl
or
sbbl
push
pop
push
hlt
enter
pop
mov
ret
cwtl
popf
jno
jno
stc
xor
mov
into
ja
aaa
scas
xor
rorb
sbb
jmp
popf
jecxz
mov
imul
out
mov
push
clc
pop
sub
stos
imul
out
loope
add
lcall
sarb
pop
pop
or
int3
mov
adc
and
jmp
jns
out
or
mov
movl
push
das
and
inc
add
cmp
xor
ss
ds
test
arpl
push
sbb
test
xor
mov
fidivrs
cmp
dec
cmp
test
mov
xor
clc
jne
jnp
fwait
sbb
xor
and
jnp
cs
sbb
daa
aas
adc
hlt
addb
sub
jle
popf
data16
lock
xor
adc
loop
mov
push
xchg
sub
fmuls
cmp
mov
inc
out
sahf
andb
inc
mov
mov
in
mov
shlb
mov
lods
jl
mov
jecxz
push
cmp
add
xchg
xor
fistpll
mov
pusha
orb
inc
cmp
ret
jmp
cmp
inc
sbb
cmpl
fisubrs
js
xlat
mov
sub
repz
call
mov
pop
xor
test
sbb
movsl
adcb
mov
or
and
fcomps
sbb
repz
mov
inc
push
xlat
push
std
jp
cmp
or
insl
ljmp
js
mov
dec
stos
test
inc
xor
pop
push
fcomps
pop
test
mov
and
sub
leave
in
test
cwtl
adc
xor
int
add
adc
insl
xchg
jo
adc
pushf
lret
mov
pop
lcall
dec
into
in
push
dec
loopne
out
fists
mov
sbb
movsb
cmc
sub
push
sub
xorb
gs
adc
xor
stos
push
scas
jmp
sbb
adc
dec
testb
or
in
out
cli
dec
mov
mov
in
ret
scas
jecxz
rolb
in
mov
fdiv
mov
xchg
sbb
xlat
daa
sbb
xchg
mov
sub
mov
dec
aas
jp
clc
in
fisubs
lock
adc
jb
or
mov
loope
push
pop
jecxz
mov
cltd
pusha
fistpl
cmp
arpl
jl
xchg
rcl
dec
jecxz
sub
push
adc
and
mov
js
push
js
push
aad
scas
es
add
scas
and
sbb
or
mov
and
cli
sub
and
jg
sub
sti
jmp
dec
imul
xchg
mov
in
mov
subl
push
fists
aas
test
push
decl
hlt
outsb
imul
out
inc
push
jmp
inc
xor
rorl
mov
fbld
push
mov
divb
dec
je
neg
mov
mov
lea
enter
jl
adc
ret
push
dec
rolb
jnp
rorl
push
fiaddl
xor
sbb
push
iret
pop
lds
push
addr16
ss
clc
xor
xchg
loopne
and
nop
into
scas
rcll
jmp
ds
aam
lcall
sti
mov
or
pushf
imul
sub
hlt
femms
jo
adc
push
jb
ss
jbe
icebp
insl
mov
mov
dec
xchg
ss
leave
and
add
cli
jle
sbb
adc
or
dec
fnstcw
push
push
call
mov
push
or
rcrl
dec
cmp
push
das
jo
fwait
sbb
mov
sarl
sub
or
or
pusha
xor
xchg
fcomps
test
outsl
test
decb
adc
jg
sahf
jae
int
ljmp
inc
cmovs
add
add
cmp
fwait
push
xor
rcll
xchg
icebp
int
jmp
sbb
mov
or
shl
mov
push
sub
es
test
push
or
fdivrl
repnz
cmc
mov
mov
popf
and
fwait
cmpsl
jae
in
mov
add
cmp
sub
jge
inc
loop
in
fnstsw
das
inc
dec
ret
repz
inc
mov
testb
scas
insl
mov
push
jae
gs
sbb
xchg
punpcklbw
jecxz
xor
sub
test
jo
pop
xlat
cli
xorb
outsl
xchg
fcmovne
xlat
xchg
or
pop
loope
push
pop
insl
int
adc
mov
or
dec
addr16
leave
cwtl
stos
pop
mov
inc
ret
cmp
rorl
mov
out
sbb
dec
push
loope
scas
add
push
aad
movsl
repz
pusha
push
pop
clc
or
push
cld
notl
adc
out
mov
aaa
sbb
jns,pt
jl
ss
xor
pop
addr16
test
jecxz
inc
nop
cmc
xchg
push
je
shl
xchg
in
inc
popa
add
divb
inc
dec
lods
push
mov
jg,pt
sub
lret
pop
into
mov
imul
mov
adc
repnz
stos
mov
mov
cmc
mov
sub
test
ficompl
lret
xchg
fcmovb
call
hlt
addb
test
mov
cmpsb
jno
xchg
inc
insl
fwait
inc
mov
test
hlt
sbb
mov
or
movzwl
push
jne
add
ret
add
jbe
and
cmpsl
sbb
rcrb
test
mov
pusha
iret
dec
jbe
or
imull
test
add
push
cmc
xchg
data16
lds
mov
inc
ds
push
lea
sbb
jmp
rorl
sub
push
aaa
or
mov
jo
lret
test
push
add
div
push
loop
iret
push
jmp
cmp
in
ds
mov
ljmp
mov
int
ja
popf
adc
leave
mov
sub
popa
addr16
sub
movsb
out
lods
je
out
push
add
lret
xor
fdivrl
xchg
push
test
jbe
bound
je
jecxz
nop
dec
popa
lcall
inc
cld
inc
push
sahf
lods
cmp
jnp
dec
dec
mov
adc
or
or
lcall
add
into
int3
sub
std
fisttpl
cmp
ret
xchg
popf
imul
aad
inc
dec
mov
lock
stc
mov
aaa
int3
pop
sub
cmp
adcb
mov
in
pop
xchg
push
ret
xor
mov
or
mov
xchg
inc
flds
jns
out
xorl
mov
lret
mov
add
xlat
inc
push
jnp
pushf
sbb
cmpsb
andb
add
lret
sbbl
stos
push
mov
or
mov
dec
and
je
sub
xchg
loope
sub
cmp
rorb
cli
push
mov
inc
jne
mov
outsb
mov
pop
test
stos
test
and
mov
lods
fs
add
jae
mov
jp
push
pop
lods
mov
sbb
jle
push
dec
sub
or
sub
cs
bnd
adc
pop
out
nop
xor
add
stos
and
mov
out
sbb
jo
and
cmp
jg
rorl
arpl
lods
or
adcl
sub
cli
aas
jge
add
pop
mov
push
rclb
push
loopne
ds
in
jmp
mov
dec
inc
js
cmp
incl
das
popa
fisttps
xor
cmp
mov
mov
ret
cs
cmp
lret
jl
xchg
cltd
push
repz
popf
jmp
fdivr
int
subb
mov
mov
iret
xchg
adc
mov
pop
or
adcb
adc
cmpb
mov
in
cmp
ljmp
cmp
sub
lret
stc
outsb
mov
ljmp
xchg
xor
repnz
fisubrs
jl
cmp
sbb
add
in
insb
dec
ljmp
aam
ds
sbb
sbb
mov
lds
push
loop
or
fcoml
push
jns
push
das
or
push
xor
repz
ret
push
mov
ljmp
stos
jl
fneni(8087
sub
fdivrs
lods
or
and
fmuls
addr16
inc
jp
lcall
cli
mov
cmpsl
and
cwtl
sbb
test
xchg
fdivs
mov
lret
dec
sti
inc
lds
push
loopne
int
jb
stos
mov
mov
mov
int
sbb
jge
pushf
ljmp
lret
jns
stos
test
xor
xchg
cmp
mov
push
in
xchg
and
mov
clc
and
fwait
out
xor
xor
ja
push
lods
mov
mov
xchg
aam
inc
loopne
mov
xchg
xchg
cmpsb
xchg
icebp
and
loop
ficomps
dec
xor
push
loope
mov
cmp
push
xchg
int
mov
or
push
inc
out
rolb
jmp
add
cmpb
sti
xor
push
xor
call
scas
xchg
mov
xor
stc
lret
leave
pop
in
jp
mov
push
push
pop
jg
and
imulb
leave
push
loope
lock
inc
push
add
jbe
add
xchg
mov
and
pop
xor
insl
inc
mov
xchg
mov
in
mov
adc
xchg
lock
int3
pop
cwtl
fsubrs
xchg
inc
mov
mov
imul
or
xor
adc
or
popf
lahf
sub
adc
fstpl
inc
aam
or
cmp
mov
xlat
pop
fldt
cld
push
mov
out
and
or
mov
mov
sbb
repz
xor
xchg
test
cli
shlb
ljmp
add
mov
rcll
test
loop
pusha
std
into
or
sbb
push
xor
orl
lret
fnsetpm(287
out
shl
popa
mov
pop
push
jge,pt
lock
add
sub
adc
xchg
jmp
add
nop
cmp
testl
or
fcomp
and
push
push
js
cmp
xchg
ficoms
adc
fsubs
ljmp
lcall
xchg
pop
dec
adc
jp
out
push
lea
into
pop
addr16
mov
push
je
pop
inc
dec
pop
jecxz
out
cmpsl
push
ret
jecxz
jae
xor
cs
pop
out
xchg
cmp
in
xchg
push
enter
sub
arpl
sub
lret
aaa
lahf
mov
xor
mov
cmp
mov
or
jb
push
jp
push
push
sti
mov
or
cmp
xchg
xor
jne
ret
stos
cmc
inc
cmp
xlat
push
push
scas
lods
in
repz
je
hlt
addr16
mul
jecxz
jmp
push
pushf
add
push
aam
mov
and
in
cmp
dec
or
pop
cmp
mov
or
add
xchg
push
sub
in
mov
jnp
pusha
jae
bound
lahf
adc
xor
cmp
out
cmpsl
dec
mov
push
hlt
subl
enter
sarb
xchg
sub
lea
lret
test
mov
das
mov
arpl
into
add
ds
jnp
fstps
out
call
add
imul
test
cmc
lods
js
ljmp
lods
imul
pop
repnz
mov
mov
xor
xor
xchg
sbb
aad
and
adc
lock
popf
fdivrs
out
pusha
sub
arpl
in
inc
mov
add
pop
aaa
adc
daa
mov
test
imul
loopne
mov
mov
loope
or
adc
cld
lock
xor
sbb
andb
xor
leave
test
lcall
sti
push
push
lahf
fistl
mov
sub
daa
inc
pop
inc
fadd
cmp
fcomps
out
add
repnz
das
pop
stos
sti
dec
aaa
sub
mov
dec
pop
dec
and
std
out
imul
nop
jg
fstps
and
mov
pop
dec
xlat
add
push
and
repnz
loope
inc
jnp
scas
icebp
jne
add
mov
in
lahf
mov
inc
mov
push
mov
lods
push
mov
mov
cs
sbb
cli
mov
cld
and
ss
rorl
lods
pop
int
mov
int3
cli
jne
out
xor
sbb
lods
dec
roll
repnz
fucomi
flds
xchg
clc
adc
mov
lods
scas
jle
adc
ret
fwait
push
add
mov
pop
xchg
pop
dec
ror
inc
ds
jecxz
arpl
rcr
fsubp
cwtl
xor
rcrl
mov
aaa
lret
push
jp
inc
icebp
dec
mov
dec
imulb
mov
and
sub
inc
xchg
mov
and
dec
adcl
sub
jne
rcll
lds
ror
outsb
lcall
shll
xorl
dec
sbb
ja
fsts
jg
dec
imul
push
dec
iret
inc
leave
lea
jns
loop
jmp
addr16
cmp
test
jnp
lods
ljmp
imul
movsb
xchg
mov
shlb
pop
sub
lds
jns
pop
or
xor
ja
dec
jmp
repz
mov
pop
popa
and
cmp
mov
shrb
shl
loop
loop
xchg
xor
pop
ror
roll
sub
dec
testb
repnz
push
cltd
sahf
imul
fisttpll
movntq
pop
subb
test
push
xor
push
mov
adc
sti
sbb
lret
test
fdivr
loop
mov
mov
gs
push
mov
lods
or
ljmp
or
addr16
pop
add
imul
movsl
sub
aaa
lods
scas
shrb
jb
pop
inc
mov
insl
xor
fsub
test
mov
movsl
inc
pop
pop
mov
shlb
fcomp
stos
ret
lahf
cmp
lret
rorl
stos
add
ljmp
or
and
aad
fstpl
rep
jle
add
jns
inc
in
mov
rcr
push
or
push
or
and
or
jmp
stos
stos
add
jge
stc
mov
imul
pop
les
out
leave
ds
push
xorb
and
ret
ss
inc
sbb
out
repnz
jp
in
idivb
mov
dec
lcall
ljmp
jle
fisubl
mov
jnp
add
cmp
mov
dec
cwtl
mov
cmpsb
test
scas
subb
test
mov
negl
aaa
mov
frstor
push
push
orb
cmpsl
adc
shlb
and
pop
jbe
ss
les
lahf
lret
lahf
loope
pop
inc
or
pop
fwait
mov
push
mov
popf
clc
clc
gs
xchg
shll
push
push
cmp
ds
pop
sbb
hlt
je
push
pop
in
fwait
dec
ret
data16
aad
jno
js
adc
sbb
js
push
pusha
outsb
fwait
arpl
mov
add
les
mov
jns
imul
jle
lret
mov
sbb
les
mov
fisttpll
cmp
push
xorl
sbb
sahf
cmp
add
pop
xor
xor
daa
dec
and
daa
jbe,pt
xchg
test
lods
stos
sub
cld
mov
or
mov
sub
mov
aaa
add
and
dec
dec
fldl
sbb
test
push
push
in
test
jno
iret
dec
cli
or
xor
mov
cmp
sbb
or
wrmsr
shrl
in
cmp
movl
mov
stos
mov
mov
mov
and
xor
inc
push
push
sub
xchg
sti
mov
dec
pop
cmpl
clc
jp
shl
negl
cmp
popf
add
jmp
inc
imul
insl
xchg
movsl
adc
or
push
and
sbbb
jb
clc
sbb
aam
jle
rcrb
or
and
inc
mov
ds
cmp
clc
xlat
add
push
bound
sarb
or
addl
inc
adc
and
fs
jo
push
inc
sahf
loopne
xchg
pop
pop
je
cmpsb
fcompl
mov
test
or
xchg
jnp
std
cmp
inc
xorl
lock
sti
cmpsl
jp
fists
push
or
mov
mov
jle
lret
loope
pop
stos
lock
fisttps
or
js
dec
xor
sub
loope
scas
xor
xchg
xor
or
dec
adc
dec
cli
mov
inc
mov
and
inc
sbb
cmp
jo
stc
stos
sbb
mov
push
pop
leave
cmp
scas
jle
inc
lcall
or
dec
pop
in
inc
push
pop
or
push
dec
std
push
movsb
inc
shrb
and
shl
mov
jb
ss
dec
addr16
pop
jg
mov
lds
test
pop
mov
stos
cmpsl
out
std
popf
in
xchg
jp
add
mov
fsubl
ret
fisubs
cmp
pusha
push
push
inc
pop
xor
pusha
movl
jge
and
incl
popw
and
shll
scas
mov
lcall
or
lods
je
stc
outsl
ja
scas
or
ds
pop
or
sarb
cmp
test
jno
or
xorb
adc
popa
pop
add
andb
mov
cmc
dec
mov
dec
sub
lahf
sub
lea
hlt
lret
push
nop
pop
fisubrs
cmp
add
int
cmpsb
add
pop
dec
push
stc
mov
lea
aas
jns
loopne
push
adc
or
movsb
or
fistpll
mov
mov
lret
pop
in
stos
and
sub
rolb
mov
ljmp
xor
cwtd
push
cmp
lret
push
add
ret
pop
push
or
sbb
push
dec
push
mov
xor
ffree
scas
mov
adc
xchg
xor
pop
jmp
xor
hlt
inc
add
xlat
ret
and
push
sub
fstpt
jl
or
cmp
pop
inc
xlat
fbstp
pop
popa
mov
fwait
sub
daa
xor
push
jbe
add
mov
or
mov
sub
popf
jno
adc
test
out
add
mov
sahf
call
inc
xor
pop
inc
pop
out
das
dec
pop
mov
subl
mov
dec
cmp
or
push
mov
cmc
scas
aas
fucom
adc
pop
pop
mov
into
dec
push
movsl
test
xor
sarl
fildl
cld
movsl
xchg
inc
sbb
ja
lret
ds
push
sti
sub
clc
out
loope
mov
repz
lea
mov
inc
pop
mov
xchg
pushf
pop
mov
mov
adc
push
std
push
xor
orb
inc
ds
setne
add
idiv
cmp
dec
mov
mov
mov
add
orl
scas
xor
push
loopne
pop
pop
dec
cli
or
pusha
xchg
inc
int3
or
jns
add
rclb
push
lcall
mov
mov
test
fstl
scas
loop
jl
and
sbb
sbbl
out
icebp
jnp
in
add
pop
sti
insb
xchg
adc
out
inc
aas
cld
out
and
cmpsb
xchg
out
subb
mov
sarb
stos
shlb
mov
xchg
mov
lahf
mov
push
arpl
bound
mov
pop
stc
dec
mov
iret
mov
cmpsl
sbb
repnz
dec
and
lahf
ss
jge
cwtl
mov
mov
xlat
jno
pop
dec
jle
dec
ds
addb
rclb
bound
pop
jns
or
push
inc
jnp
stos
arpl
jb
in
arpl
pop
adc
push
out
or
int
jp
or
vpminsw
push
ret
dec
fidivs
push
jne
inc
jp
xorl
rcl
push
out
mov
pop
push
fcom
icebp
ja
fimuls
mov
mov
popa
mov
xor
add
fnstenv
in
xchg
lret
pop
fistps
cld
fs
fnstenv
inc
mov
loopne
push
imul
xchg
rcr
dec
out
arpl
ret
notl
xchg
fisttpl
outsl
aam
xor
and
cmp
xchg
xchg
adc
add
or
mov
cmp
push
xor
lret
sbb
je
mov
fs
test
mov
xlat
pop
mov
mov
pop
cltd
sti
dec
cmp
dec
icebp
xor
iret
mov
mov
fstps
pop
lock
jae
inc
sbb
sub
sbb
je
adc
dec
mov
inc
shl
mov
test
sbb
rolb
sub
jae
popl
sub
leave
add
shlb
mov
pop
jl
mov
or
pop
ret
in
iret
lods
jae
stos
adc
and
push
repz
pop
mov
adc
pop
xor
insb
push
hlt
inc
dec
push
or
xchg
aam
loop
mov
jbe
or
ja
testl
adc
test
push
out
fistpll
dec
adc
sub
pop
xchg
mov
push
or
cmp
sub
xorb
insb
mov
jecxz
push
popf
sbb
mov
movsl
mov
adc
pusha
insl
or
movsb
fcoms
cmpsl
pop
in
mov
and
xchg
sbb
push
cmp
push
stos
pushf
sahf
mov
or
fisttps
or
aad
jae
jecxz
sbb
xchg
or
enter
jmp
pop
add
adc
jg
push
pop
leave
cs
gs
jbe
enter
add
cmc
je
adc
mov
das
xor
jecxz
mov
push
push
popa
loope
sbb
daa
stos
imul
stos
ficoms
mov
sub
stos
xor
cwtl
pop
cmc
lahf
mov
lahf
pop
repz
mov
xchg
lcall
sub
sbb
mov
daa
lcall
test
sbb
add
hlt
jecxz
fsub
cmp
lods
dec
pop
es
push
add
xchg
sbb
pop
push
stc
jbe
jo
pop
fistpll
bound
pusha
and
pop
daa
js
push
ljmp
cmp
je
push
xor
and
les
aas
sbb
mov
jecxz
loopne
and
rcll
int
rcrl
popa
rclb
push
stc
sub
xchg
xchg
int
aam
xchg
xchg
call
mov
mov
and
push
cmpsb
loopne
fcmovu
ds
pop
xor
mov
jno
xchg
sbb
outsb
out
push
mov
ficoms
mov
clc
mov
mov
mov
pop
mov
or
mov
xchg
jg
sahf
mov
shl
ljmp
enter
or
add
repz
cmc
mov
fists
ret
or
mov
cli
add
out
push
test
dec
repnz
pop
cmpsb
pop
data16
insl
scas
cmpsl
cmp
leave
pop
js
cmp
stc
pop
mov
pop
hlt
icebp
adc
pushf
test
xchg
out
and
push
jg
and
sub
xor
mov
mov
push
pop
mov
xchg
rcr
insb
sbb
xor
std
jl
orb
sti
sbb
shll
popa
or
dec
ret
subb
adc
in
mov
mov
cmp
sbb
stc
and
std
xchg
jge
ds
jg
sub
cld
sbb
jae
mov
jae
sbb
or
jge
dec
mov
enter
xor
inc
push
xchg
pop
aad
pop
daa
out
xor
dec
or
imul
inc
arpl
jb
pop
sti
add
cmp
and
mov
outsb
mov
xchg
lods
xor
fwait
adc
jnp
jmp
mov
add
lods
mov
xor
out
imul
inc
pop
inc
add
adc
outsl
int
sbbl
mov
iret
mov
sti
sbb
into
add
pop
lahf
mov
sub
or
pushf
jmp
cmpsb
adc
stc
enter
xchg
jbe
aas
xchg
sbb
repnz
ret
dec
inc
mov
shrb
add
int
xor
imul
add
ljmp
fadds
gs
out
add
or
cmp
push
sbb
sbb
sub
pushf
inc
add
or
mov
iret
std
enter
push
jl
repnz
mov
dec
jbe
xor
push
add
cmpsb
cmpl
or
shrd
lods
xchg
lcall
and
iret
mov
imul
ret
mov
jb
aaa
stos
jb
daa
xchg
push
push
test
imul
loopne
scas
xor
sbb
test
popf
lcall
cmp
aad
jl
lods
sbb
mov
jl
jl
jb
movsb
aaa
sbb
out
push
cmp
and
dec
sub
loop
mov
rcrb
dec
mov
addl
jecxz
mov
sbb
lds
jae
and
adc
ja
inc
aam
leave
test
sbb
fcomi
shl
sbb
roll
lcall
movl
push
push
mull
movq
repnz
inc
inc
ror
shll
outsb
test
cs
pop
pop
inc
push
or
dec
std
adc
cmpsl
popf
xor
mov
mov
scas
cmp
lea
jle
push
xor
push
sbb
pop
scas
pop
pusha
push
test
pusha
dec
mov
movsb
movsb
insb
bound
jbe
ret
mov
xor
pop
xor
pusha
test
mov
sti
jb
dec
jle
inc
mov
lea
lahf
sub
pop
cmp
stos
and
hlt
lods
lahf
dec
out
int
xor
lahf
pop
ficoml
xor
in
and
fnsave
push
pop
aam
sub
insb
push
push
or
xchg
shll
shll
sar
cmp
lods
sbb
or
mov
scas
fldt
mov
int
jb
movsb
sahf
pusha
mov
adc
jmp
js
iret
or
xchg
rorl
cmp
cmp
cmpsb
adc
gs
inc
movsl
or
jo
cmc
out
rcrl
dec
or
cwtl
cld
mov
addb
dec
lds
dec
mov
test
and
pop
mov
add
pop
aam
sbb
xchg
ljmp
fldl
sahf
push
sbb
insb
popa
sub
clc
arpl
fistpll
push
test
notb
sbb
mov
test
adc
cmp
sub
call
add
cmpsb
shll
das
bound
mov
pop
push
dec
fs
out
pushf
sahf
data16
xor
lahf
or
and
imul
push
fwait
roll
inc
cmp
sti
call
sbb
popf
or
sbb
cltd
or
lahf
lcall
test
iret
mov
push
mov
les
cmpsb
enter
imul
or
sbb
pushf
out
orb
ret
stos
add
xchg
cmp
lea
or
cmp
outsb
scas
inc
cld
dec
ds
sbb
pusha
test
jle
mov
cmpl
popf
mov
pop
add
ljmp
sbb
push
and
sahf
sbb
and
mov
repz
push
cmpsb
adc
sub
aad
push
inc
scas
and
cmpsl
or
pop
nop
and
add
xor
cmpsl
dec
jg
fwait
pop
iret
ja
stc
stos
pop
popa
test
mov
mov
push
movsl
daa
mov
pop
mov
call
xor
test
pushf
int
repnz
pop
sti
add
xchg
lds
lods
cmpsl
add
cmp
jo
sbb
or
aad
inc
fistl
add
inc
fcomps
fistpll
inc
cli
push
aam
test
dec
sbb
and
rol
sub
ja
xlat
repz
pop
and
xchg
adc
cmp
jecxz
dec
cs
pop
xor
inc
xchg
enter
push
and
outsb
cs
popf
xchg
sahf
aad
mov
fldcw
test
xlat
sub
jae
dec
pop
loopne
psubd
sbbl
dec
cmp
adc
mov
clc
icebp
sub
push
dec
mov
andl
repz
push
or
inc
pusha
jl
flds
push
xchg
jp
sarb
jb
fimuls
sub
out
lea
cmp
jbe
jecxz
lock
push
les
inc
jl
xor
mov
inc
ja
jmp
pop
push
lahf
std
sbb
sub
or
push
cs
push
loop
in
nop
leave
pusha
shlb
aam
xchg
test
js
jnp
xchg
loop
lds
repnz
cmp
jns
jnp
mov
add
hlt
add
leave
loopne
adc
push
mov
mov
dec
sbb
push
jecxz
test
lahf
jg
shr
dec
cmc
xchg
adc
lret
lock
repnz
aad
inc
cs
sbb
cld
pushf
lret
add
cmpsb
jge
scas
push
mov
sbb
and
or
aam
pop
lock
mov
jle
mov
aas
stos
pusha
and
out
aaa
sbb
push
mov
sub
lcall
mov
lods
ljmp
mov
mov
push
loopne
cmp
cmp
mov
add
jae
inc
xchg
pop
in
hlt
out
push
mov
les
jecxz
mov
fsubl
jnp
into
test
cli
pop
pop
ds
adc
lahf
mov
dec
dec
jg
decb
dec
fsubs
jp
mov
lods
pop
pop
loope
shrb
jp
lods
push
test
shlb
pop
rclb
lock
mov
lret
mov
out
movl
jmp
cmpsb
jle
dec
sub
leave
sbb
dec
rolb
and
and
and
fnstenv
movsw
bndstx
jl
lret
fcmovb
add
mov
lods
nop
add
int
sbb
mov
push
xor
mov
lock
js
cltd
add
test
rol
adc
aas
add
gs
sbb
lret
inc
or
or
in
imul
adc
and
arpl
jnp
je
push
sub
add
xor
pop
decb
int
rcrl
lcall
into
fsub
iret
loope
out
cmp
or
rclb
popf
cmp
cmp
cmp
das
neg
adc
pop
out
mov
loopne
push
in
insb
add
in
xor
and
arpl
mov
sub
aaa
pop
std
jp
xchg
dec
insb
pushf
inc
mov
pushf
xor
cld
jg
jbe
dec
lcall
pop
or
push
push
xchg
mov
mov
je,pn
xchg
push
imul
or
insl
mov
outsl
sbb
inc
fisubrl
jp
cmpsl
int3
mov
lcall
inc
pop
add
pop
jmp
jne
leave
adc
mov
xor
clc
add
fcmovnbe
pop
jno
xchg
in
xor
mov
mov
out
dec
fdivs
pop
mov
fcmovnb
movsl
aam
or
pusha
push
jge
ficoms
shr
in
out
mov
jnp
popf
fcoms
jb
testb
add
outsb
add
or
call
cmp
and
fisttpl
mov
pop
sub
call
adc
mov
or
je
xor
or
jmp
push
sarb
mov
and
xor
xchg
sub
mov
imul
xchg
pop
mov
inc
psubusw
fstl
test
cmc
in
ret
mov
sub
jne
fcomp
addr16
insb
stos
pop
lahf
mov
rclb
xor
xchg
outsl
mov
das
or
xchg
sbbl
es
loopne
divb
inc
pop
js
mov
rcr
sarl
or
aam
and
mov
or
ret
add
mov
out
sbb
mov
gs
add
lahf
mov
adc
and
adc
aas
jmp
ja
xrelease
ss
sbb
daa
rcl
xchg
sti
outsl
scas
lcall
cmp
sub
xchg
cmp
mov
fdiv
les
lds
scas
cmp
fnstenv
fisttpll
add
lods
or
mov
inc
aam
call
pop
shlb
mov
in
mov
icebp
inc
push
movsl
and
inc
roll
cmc
sti
push
dec
lock
pushf
inc
lahf
pop
jb
ss
push
inc
dec
imull
xor
loope
cs
out
sbb
dec
jmp
adc
sbb
or
cmp
adc
xor
jecxz
xchg
aaa
xchg
hlt
fadds
dec
test
test
dec
mov
gs
xchg
femms
adc
xchg
cltd
loope
pop
xor
loopne
fisubs
xchg
imul
lock
ds
in
pop
mov
mov
dec
outsl
xchg
mov
jno
add
imul
sti
cvttps2pi
arpl
dec
jno
mov
es
std
xor
dec
jmp
movsb
xor
test
lret
loopne
pop
xor
mov
push
negb
ljmp
mov
xor
inc
cwtl
pop
pop
pop
jge
dec
mov
mov
aaa
in
jne
dec
dec
lcall
pop
cmp
push
int
mov
dec
dec
ret
lods
movl
shrl
sbb
and
jp
out
aaa
dec
mov
lahf
imul
cmp
inc
or
add
mov
sub
push
and
pop
gs
mov
add
dec
sub
out
nop
insb
xchg
sub
cmovbe
xor
out
test
mov
div
pop
fcmovnbe
ret
out
sub
js
mov
pop
xor
addb
inc
inc
je
popa
adc
sub
cmp
mov
sub
xchg
dec
mov
jo
iret
dec
les
push
cmc
pop
sub
rolb
mov
out
test
xor
xor
fcoms
ror
ss
mov
mov
in
push
addr16
jmp
lds
xorb
xchg
adc
call
jb
push
mov
popf
jp
cli
roll
xlat
jne
push
and
adc
call
pop
push
movsb
in
pop
mov
insb
sbb
mov
shlb
pop
shll
add
call
cmpsb
les
and
vmovsd
mov
jge
sbbb
es
cmc
idivl
addr16
ljmp
jb
mov
cmp
repz
inc
movb
pop
or
js
nop
pop
cmpsb
add
stos
sbb
push
test
pop
or
or
xchg
in
inc
mov
dec
pusha
daa
inc
jno
sarl
daa
mov
jl
dec
push
push
xor
add
pushf
hlt
adc
ret
pop
or
mov
clc
fisubrl
add
jge
stc
jae
cltd
lret
in
mov
pushf
in
in
xrelease
and
shrb
jno
loope
mov
xchg
aad
icebp
xchg
stos
mov
push
and
adcb
jbe
mov
or
inc
xchg
imul
pop
xor
test
aas
inc
sub
or
nop
mov
rcrb
insb
sub
push
int3
adc
xchg
cmp
sbb
insb
fnstcw
jmp
mov
in
loop
insl
imul
xor
inc
push
les
pop
mov
jbe
adc
rorl
fnstsw
push
test
mov
mov
xor
pop
dec
add
push
mov
lret
mov
pusha
xor
and
ret
pop
aaa
inc
repz
or
and
out
daa
mov
mov
add
std
lcall
dec
and
insb
xor
sub
inc
fcompl
and
or
xchg
insb
mov
clc
dec
fstp
into
mov
push
std
mov
mov
je
xchg
js
fsubs
movsb
push
jbe
mov
arpl
nop
fwait
cmc
push
test
push
jmp
xor
daa
adc
aad
lods
jge
loop
mov
insl
fsubrl
cmpsl
dec
push
sbb
fwait
fs
scas
jb
mov
movsl
and
push
loopne
or
fdivs
aam
mulb
outsl
inc
loopne
inc
stos
das
push
js
outsb
mov
adc
int
or
add
daa
push
or
xor
iret
aas
aam
in
mov
xchg
mov
cmp
std
or
cmp
shrl
aas
test
mov
mov
sbb
das
mov
jb
xchg
cld
sub
ljmp
or
mov
in
inc
sub
pop
mov
daa
addr16
popa
and
mov
dec
outsl
jp
inc
into
stos
inc
push
scas
xor
aaa
fmull
mov
add
and
in
inc
xor
imul
and
stos
push
lock
dec
or
lret
out
idiv
xor
push
push
repnz
enter
test
or
mov
cmp
mov
mov
push
jbe
sbb
adc
cli
xor
mov
and
jno
arpl
out
mov
sbb
aaa
add
loope
inc
add
xchg
movb
test
fxch
cmp
sti
test
stos
mov
lahf
ds
mov
test
mov
push
cmpsb
ds
or
outsl
stc
sub
ret
add
sub
clc
imul
mov
push
in
stc
sub
loop
fmul
mov
lcall
xchg
inc
adc
test
jbe
sahf
inc
imul
sub
add
ret
data16
jl
xchg
sub
sahf
pop
xchg
mov
shll
pop
lds
push
test
faddl
mov
and
movsb
mov
insb
inc
pop
lret
mov
adc
inc
cmp
cmp
imul
adc
loopw
enter
in
js
cmp
jnp
sbbb
xor
ret
insl
lret
sbb
pop
divl
cltd
mov
sub
mov
mov
push
cmp
jmp
andb
and
aad
dec
sub
xor
fidivl
hlt
jae
pusha
clc
or
dec
je
dec
rcll
insb
xchg
inc
jns
stos
inc
cvtps2pd
mov
ds
xor
or
pop
leave
fmul
movsl
jne
pop
mov
mov
leave
lea
imul
jmp
xchg
inc
sbb
sbb
adc
xor
mov
push
cmc
fsubrl
xor
add
nop
mov
negl
xor
xchg
std
adc
imul
fidivl
dec
dec
mov
xchg
rorl
mov
push
pop
fwait
jle
mov
jne
scas
rcl
mov
mov
pop
push
mov
xor
xchg
pop
add
std
dec
dec
push
push
loope
in
mov
jg
inc
les
popa
aad
mov
add
fnstcw
dec
out
pop
dec
nop
and
aas
or
xor
cmp
aam
mov
fidivrl
std
lods
sub
sub
xchg
mov
movsl
pop
push
jl
cmp
inc
xlat
mov
push
push
femms
mov
repz
sub
fidivs
xchg
stos
adc
mov
popa
loop
int
out
imul
inc
jo
sub
popf
shlb
pop
fdivrl
fdivs
xchg
mov
push
out
mov
out
inc
mov
xor
or
sbb
push
sub
push
or
cltd
mov
jp
mov
and
mov
fwait
cmc
pop
mov
pop
jl
mov
jno
mov
jno
sub
aad
inc
loope
mov
mov
or
sbb
and
hlt
add
int3
lret
and
inc
jge
xor
int3
add
dec
sti
sub
stc
jmp
sbb
iret
out
mov
loopne
out
pop
jne
mov
lods
pop
mov
mov
lea
sarl
mov
mov
cs
in
and
stc
inc
jl
jo
cli
jno
incl
mov
insb
jae
pushf
cmpsl
pop
out
sub
loop
inc
pushf
cld
fcmovb
imul
pop
sahf
fwait
lods
movsb
dec
add
sub
pop
repnz
cwtl
mov
aam
inc
insl
and
mov
ja
cmp
jmp
test
or
pop
cmp
mov
sbb
pop
mov
xor
repz
xchg
push
es
or
mov
push
in
aad
inc
dec
inc
aad
xchg
pop
scas
push
jno
in
fsubr
rcll
jl
cmp
call
pusha
xlat
das
pop
bound
les
push
adc
cld
xor
fsubl
loop
int
mov
adc
addr16
inc
xchg
repnz
in
pusha
lods
mov
pop
and
cmp
fdivl
call
inc
mov
out
lret
cmpsl
jmp
cli
je
sub
or
sub
push
and
nop
inc
add
loope
jl
adc
scas
dec
pushf
or
gs
in
cbtw
mov
pop
popa
pop
push
aaa
sub
add
aaa
xlat
xchg
aaa
sti
xchg
cmp
cmp
pop
mov
sahf
aam
mov
fstps
out
mov
mov
scas
add
mov
push
popa
fimuls
pushl
add
loopne
inc
cmc
cli
lret
mov
xchg
movsl
mov
cmp
stc
bound
mov
sti
gs
push
fnstenv
jmp
pushf
lret
mul
stos
jo
mov
insb
mov
push
icebp
ds
push
lods
out
mov
popa
daa
xchg
fcompl
push
jle
iret
out
ljmp
fmull
div
iret
cmp
es
cli
push
mov
repz
pop
inc
test
cmpsb
adc
enter
pop
sub
inc
push
stos
nop
or
push
in
push
outsb
mov
pop
popa
mov
call
inc
pop
and
ljmp
cmp
into
jae
inc
or
pop
stc
fisubrs
ds
cli
outsb
divb
stos
fcoms
rclb
push
xor
dec
in
mov
xchg
inc
ret
sti
add
lret
xchg
cltd
mov
xchg
setb
pop
sbb
jle
in
cwtl
fwait
add
insb
das
in
and
arpl
sbb
xchg
scas
mov
jno
adc
inc
jle
jno
sahf
inc
push
mov
and
stos
stc
push
mov
pop
jl
insb
mov
iret
ja
add
pop
xchg
xchg
mov
test
cmp
ficoms
cmp
mov
or
fs
mov
ret
aaa
xor
lods
add
subl
sbbl
daa
test
sbb
cmpl
outsb
xchg
cmp
inc
fadds
in
inc
pop
push
xorb
int3
mov
loope
sahf
jbe
jmp
xchg
and
push
sub
fimuls
pop
sbb
andl
sti
enter
arpl
mov
xor
aaa
std
fisttps
mov
ret
sbb
jns
push
cmp
stos
fdivrl
xchg
dec
inc
test
shrl
call
pop
and
mov
rolb
loopne
dec
in
andl
mov
fidivl
sbb
sub
dec
push
jge
jne
int3
out
fs
jmp
repnz
mov
push
dec
inc
mov
shl
mov
mov
inc
mov
jnp
xor
bound
out
aam
dec
mov
jp
cmpsl
out
sbb
shrl
sub
ret
push
xchg
mov
mov
xchg
jmp
jae
sub
cmp
loop
xor
orl
or
aas
sub
int
outsl
mov
imul
mov
pop
mov
push
js
dec
out
shll
jnp
push
jmp
mov
out
xchg
push
dec
outsl
mov
fnstsw
inc
in
push
xchg
push
sub
lods
jnp
jp
jg
fsubp
popf
inc
sbb
idivb
jecxz
cwtl
movsb
stos
or
or
and
cltd
mov
lods
dec
mov
lea
cmp
push
cmpsb
or
fs
xchg
push
mov
popa
xchg
push
and
adc
mov
movsb
adc
fdivrs
push
outsb
inc
mov
push
es
xor
sar
mov
inc
pop
mov
jae
mov
icebp
mov
xor
loop
sub
sbb
out
fst
repz
lcall
fldl
roll
clc
dec
les
pop
or
les
pop
push
and
cmp
push
daa
adc
or
daa
je
rclb
xchg
xor
out
xchg
mov
and
mov
pop
cli
dec
push
lcall
xor
movsb
shrb
lcall
mov
fneni(8087
imul
bound
jmp
sub
inc
xchg
daa
daa
add
aas
xor
pop
mov
push
mov
dec
ret
jp
cltd
mov
cmpsl
out
lea
cmc
xchg
mov
add
xchg
bound
push
fcompl
inc
add
jl
loopne
adc
jno
and
push
sbb
dec
mov
mov
ljmp
lods
and
or
push
repnz
popa
push
lods
push
and
gs
jb
arpl
loope
imul
adc
je
lock
and
and
enter
call
mov
cmpps
lods
xor
mov
popa
sub
xchg
push
ja
fdivs
out
pop
jae
mov
xor
push
mov
dec
fcompl
out
dec
mov
fisubl
fs
rorb
xchg
sbb
pop
or
and
pop
push
jl
adc
ret
mov
mov
pop
add
xor
ja
sub
mov
pop
leave
ds
mov
repnz
mov
or
push
sub
pop
popf
rcr
add
inc
dec
sub
cwtl
inc
jno
fs
and
mov
adc
into
pop
sub
dec
mov
push
jns
bndldx
cs
or
sub
adc
call
int
push
jg
aas
enter
jmp
aas
pop
jecxz
dec
lret
hlt
imul
ljmp
shl
lods
dec
movsb
repnz
jle
cld
loop
daa
push
dec
inc
sub
xchg
aas
jecxz
inc
cli
dec
sbb
push
cltd
and
loope
mov
cwtl
mov
nop
xor
ret
js
jl
data16
in
ja
jge
xor
inc
adc
decl
jge
push
pop
push
call
and
ljmp
xchg
mov
mov
mulb
ret
mov
rorb
dec
sbb
pop
fldt
mov
mov
mov
aaa
repnz
cmpsb
repnz
shlb
mov
rcrl
sub
fld1
or
mov
inc
xchg
inc
iret
outsl
mov
andl
mov
push
jle
mov
data16
mov
scas
fsubrl
inc
cmp
mov
mov
out
xchg
dec
inc
jne
lret
mov
cli
mov
out
inc
xor
in
or
repnz
fs
dec
sbb
add
jae
xchg
add
mov
cmpl
sbb
sbb
mov
arpl
cld
cmpsb
xor
ljmp
or
dec
push
lds
mov
cmp
mov
hlt
andl
jbe
movsl
xor
mov
aam
xchg
outsl
dec
lods
mov
xor
test
jle
push
lods
xor
push
repz
fnstenv
mov
sub
lret
lret
inc
cmc
add
xchg
adcl
mov
shlb
or
dec
aam
imul
mov
lock
lea
jo
call
addr16
subl
ret
pop
xchg
adc
inc
mov
adc
mov
xor
imul
andl
add
pop
sbb
sbb
mov
icebp
pop
pop
cmp
lret
fbstp
inc
xlat
pop
mov
std
jmp
into
roll
sbb
ret
call
addr16
inc
sub
bound
incl
out
lret
ljmp
mov
pop
ja
or
add
dec
jb
lcall
cwtl
insl
mov
sub
cmp
aas
loopne
push
subb
loopne
lea
add
inc
aad
cwtl
jmp
sbb
int
cmp
mov
push
mov
nopl
mov
jg
int
jno
ss
adc
cmc
aad
dec
into
jl
in
xor
inc
data16
gs
xor
insb
loopne
adc
jle
mov
divl
xor
push
inc
leave
xor
loop
cmp
or
sub
lcall
shll
aaa
and
push
in
xchg
js
lock
sahf
daa
loop
dec
push
dec
xchg
xchg
and
mov
dec
cmpps
and
lea
es
push
jg
and
push
inc
pop
xchg
jl
sub
cmp
xorl
inc
loopne
lcall
subl
ljmp
clc
pop
fs
testb
je
adc
test
push
sub
push
push
repz
outsl
stos
cli
pop
stos
xchg
gs
xor
lret
leave
inc
test
add
xor
insl
xchg
pop
mov
movl
and
cmp
push
mov
sub
ds
mov
add
and
out
popa
pop
and
pushf
cltd
add
rcrl
test
push
xlat
cmpsl
test
dec
xchg
add
pop
aad
xchg
lret
gs
and
int
jbe
inc
addr16
into
fs
fpatan
xchg
lea
dec
sbb
jg
and
insb
movsl
fmuls
inc
pop
cld
push
test
cmc
add
add
and
mov
jo
js
mov
nop
push
or
xor
jge
pop
sbb
je
popl
or
sahf
aaa
dec
push
mov
xchg
lret
lcall
scas
sub
mov
xchg
mov
jge
les
jbe
xchg
stc
push
lea
jns
mov
xchg
movsl
cmc
in
lret
dec
sbb
or
mov
mov
clc
cmpsl
jl
pop
xchg
pop
fadds
xor
cmpsl
adc
cmp
fs
jle
dec
lds
cld
out
sub
mov
mov
aaa
test
or
pop
add
mov
dec
lahf
mov
jg
out
test
jns
test
cli
dec
gs
std
jnp
mov
xor
lock
mov
scas
push
or
repnz
cmp
pop
icebp
pusha
and
and
cmpsl
rorb
pop
mov
sub
ror
xchg
mov
pop
fwait
negb
sbb
je
and
xchg
sub
stos
dec
stc
loop
inc
xchg
call
flds
sub
sub
aas
aas
andb
sub
push
daa
pop
movl
aam
lea
xor
aas
or
ficoml
fs
dec
mov
sub
test
bound
and
jge
adc
or
ret
aaa
mulb
dec
mov
push
cs
xchg
leave
or
aad
outsl
dec
dec
mov
xchg
ss
jnp
lds
pop
adc
push
dec
ja
push
es
push
mov
ret
push
lods
iret
and
pop
add
xor
movsl
pop
mov
sahf
jno
inc
xchg
jae
je
mov
addr16
xor
rcrl
adc
nopl
or
into
rorl
mov
dec
adc
and
cmp
das
out
or
stos
jecxz
insl
push
inc
mov
fst
jns
cmp
lods
int3
and
jecxz
les
xlat
dec
mov
xchg
mov
outsl
jns
addr16
addr16
insl
jmp
push
sbb
testl
mov
xchg
xchg
xor
lods
mov
idiv
sub
test
stos
xor
aad
cld
lret
scas
lret
dec
fwait
test
jle
inc
jle
adc
inc
push
call
lcall
and
test
mov
stos
dec
movl
repnz
adc
mov
test
xor
out
stos
add
decb
movsb
mov
pop
sarb
xchg
cltd
cmp
rcrb
dec
mov
cmpsb
das
gs
in
cmp
xor
xchg
mov
sub
xchg
in
sbb
aaa
mov
mov
mov
mov
loopne
insl
xor
cmp
in
mov
mov
sahf
and
cmc
fadds
pop
mov
cmc
scas
loop
mov
push
movb
sbb
or
lahf
pop
jmp
sub
mov
push
mov
lock
test
mov
mov
jae
cmp
xchg
mov
pop
roll
gs
shl
stc
into
jl
cltd
mov
fcom
ljmp
push
stos
dec
xchg
lods
dec
jmp
adc
and
push
add
icebp
movsb
jmp
iret
js
ret
subb
mov
push
pusha
add
nop
jecxz
add
push
js
mov
fwait
mov
sbb
xor
popa
es
stos
mov
icebp
dec
popa
stos
xchg
jmp
test
arpl
cmp
push
lret
push
inc
test
inc
add
das
rolb
into
ljmp
insl
jno
sub
sbb
mov
mov
mov
sub
jge
pop
cmp
loop
mov
jl
popf
mov
adc
cmpsl
pop
in
cmp
lcall
and
ret
sbb
mov
jl
mov
add
mov
mov
cwtl
cli
repnz
cmp
nop
xchg
movsb
loopne
dec
out
loopne
dec
lret
pop
aam
inc
or
ss
push
ss
xor
push
cmp
or
pop
lcall
inc
cmp
or
cmp
xchg
test
lret
pop
sub
dec
mov
iret
jae
lea
push
jnp
jle
sbb
sbb
fstps
notl
movsl
daa
mov
fldenv
test
push
cmpsl
lcall
push
scas
nop
dec
dec
cld
ljmp
mov
rcrl
jns
leave
pop
mov
mov
sub
dec
ss
mov
loopne
imul
cmp
sbb
or
xor
fsubr
outsl
and
xor
push
inc
fiaddl
xlat
jmp
xor
loope
xor
je
jecxz
jno
mov
data16
push
cli
adc
sbb
pop
je
sbb
mov
and
inc
scas
je
in
add
dec
pop
xor
mov
cmp
aam
mov
cs
pushf
inc
lock
jae
adc
mov
jnp
push
sbb
or
xchg
lock
jnp
iret
fbstp
sbb
in
jbe
pop
hlt
or
test
xchg
inc
fdivrl
mov
cmp
lea
mov
gs
ret
pushf
subb
pop
std
or
cli
mov
mov
sub
ret
xchg
roll
jecxz
incb
dec
aad
mov
sub
adc
or
mov
and
cltd
pop
mov
push
or
pop
adc
cmpsl
hlt
rep
mov
aad
pop
sbb
cmpsb
call
enter
dec
into
or
outsl
movsl
scas
adc
sbb
stos
mov
outsl
test
movsb
loopne
fists
mov
mov
pop
jns
push
call
call
ret
jb
sub
mov
push
jbe
lcall
mov
xorl
mov
push
pushf
pop
stos
gs
cs
jmp
test
xchg
fwait
insb
test
pop
jl
cmp
and
push
jb
lret
jl
push
or
inc
subl
dec
fdiv
jecxz
mov
jecxz
pop
sbb
outsl
ret
dec
jbe
movsl
aas
out
repnz
lds
into
test
jmp
rcrl
adc
shll
cmp
sub
call
mov
gs
lds
or
in
lcall
cmp
pushf
dec
jg
jo
js
je
jp
push
pop
lods
mov
adc
scas
mov
mov
cwtl
fwait
dec
cmp
fcomi
outsl
dec
or
hlt
mov
or
xorb
mov
icebp
mov
enter
subb
fs
in
cltd
xor
lea
push
dec
mov
addr16
arpl
fisttps
inc
add
popa
rcr
sarl
dec
xor
adc
pop
jge
inc
fwait
stc
xchg
addl
fcomp
lods
in
cmp
call
cld
imul
pop
mov
lahf
mov
rorl
cli
dec
test
xchg
jae
or
cmpsb
mov
mov
imul
xor
dec
lcall
int3
pop
or
cmpb
inc
cmp
mov
jle
sub
shrl
loope
adc
lret
inc
sbb
and
sbb
ljmp
in
scas
shlb
cld
cmpsb
popa
xchg
jae
adcb
or
popa
xor
jne
mov
xchg
shrl
mov
movsl
out
rclb
pushf
xchg
cmpsb
jl
add
xorb
sbb
stc
pop
mov
jecxz
sub
in
xchg
imul
pop
aad
test
dec
push
add
mov
inc
jge
cmp
mov
dec
ljmp
fdiv
jg
rcll
jmp
xchg
das
sub
inc
in
inc
and
pop
nop
lds
jmp
js
mov
xor
xor
fs
shrb
leave
idiv
ds
stc
pop
xchg
aaa
pop
cmp
insb
fmull
cmpsl
pop
xchg
jmp
int
inc
jecxz
leave
mov
movsl
mov
or
xor
and
or
mov
sbb
inc
xchg
push
sub
or
xchg
or
or
adc
cltd
jge
xchg
add
leave
xor
scas
mov
add
and
mov
out
int
cmp
nop
mov
dec
jae
movsl
xchg
jmp
and
or
mov
cld
je
fnstsw
dec
jb
iret
push
xchg
mov
icebp
sbb
xor
lock
push
xchg
xchg
cmp
shll
mov
movsb
push
lods
or
push
fs
sbb
cmp
aaa
pop
adc
xlat
pop
loope
pop
mov
aam
stos
outsl
inc
outsb
es
int3
test
stos
xor
add
mov
xchg
cli
and
mov
jne
movsb
cli
fidivs
loope
adc
add
mov
clc
movsl
fcoms
sarb
jne
pop
ficompl
cmc
loopne
inc
in
data16
jnp
imul
push
and
fwait
int3
sub
push
adc
movsb
fcoml
xchg
adc
cmp
mov
mov
jbe
loop
jae
xchg
stc
ss
xor
push
gs
movsl
jmp
cld
or
adcb
mov
pop
cmpsl
icebp
sub
mov
ja
clc
pushf
orb
bound
aad
sahf
mov
jl
decl
cmpsb
loopne
mov
mov
dec
insb
cmc
xorb
data16
pop
test
les
mov
cmp
out
xorl
sbb
in
mov
sbb
ja
push
andl
arpl
mov
mov
push
pop
mov
add
test
notb
test
out
inc
pop
dec
xchg
sbb
nop
xlat
pusha
xor
subb
shl
jl
test
repz
repz
orl
std
cmp
les
fcomp
jg
out
sbb
inc
shll
pop
cmp
sub
sbb
fldt
push
xor
add
push
cmc
imul
pop
jmp
xchg
pop
rcll
dec
mov
jno
and
sub
movsb
arpl
aas
test
mov
jl
push
mov
outsb
add
int
sub
or
pop
pop
js
fisttpll
popa
jle
aam
cs
fisubrs
fnstsw
jecxz
pop
cld
ret
xor
sbb
add
outsb
mov
testl
jle
scas
repnz
inc
dec
test
push
xor
stos
mov
cmp
orl
nop
pop
das
mov
and
jnp
push
jne
stc
xor
pop
out
jb
pop
test
nop
push
push
sbb
rcl
xchg
cld
rcrl
test
adc
clc
in
inc
adc
xor
subl
sahf
jg
movsb
mov
std
lret
jno
dec
sbbl
sahf
lock
xor
adc
dec
and
int
cli
sub
test
and
push
dec
add
inc
or
lods
adcl
xor
adc
clc
fdivrs
in
out
inc
pop
in
ffree
jno
repnz
fs
fistl
adcb
and
data16
add
stos
mov
lods
mov
stos
or
aad
mov
das
mov
xlat
incb
popa
mov
pop
out
fnsave
or
push
sbb
scas
pop
rcrb
cld
imulb
rcl
push
call
jp
inc
iret
into
push
cmpsl
push
push
adc
subl
mov
jns
pop
clc
movsl
cmpsl
sbb
push
aad
mov
xor
loopne
push
sti
clc
mulb
sub
xor
pop
in
scas
daa
pop
push
jae
test
lea
add
sti
xor
ret
push
sub
gs
xchg
in
pop
mov
jge
ja
stos
lret
jecxz
and
dec
dec
mov
inc
dec
mov
shlb
ret
stos
cld
shl
pop
test
xlat
mov
testb
je
push
es
filds
lods
aaa
or
cli
adc
std
out
sbb
rcrb
out
sbb
std
stc
lret
aam
fs
sbb
pop
adc
jnp
out
and
shl
pop
int
popf
orb
cli
jecxz
and
or
call
sub
jno
cld
ret
into
out
data16
out
mov
mov
cmp
mul
sti
into
mov
mov
mov
out
mov
or
movsb
xlat
mov
int
shrl
gs
mov
mov
mov
or
dec
daa
xor
outsb
lods
cs
jns
cmpb
aad
adc
cmp
stc
inc
jo
sarb
addr16
mov
pop
cmp
jbe
stos
jnp
add
mov
insb
outsb
sbb
nop
or
jns
mov
xchg
jns
cli
aad
adc
adc
mov
mov
pop
cmpsl
fistpl
outsl
adc
and
sbb
jmp
out
outsb
cmpsb
and
nop
jmp
out
lea
int
cmp
sbb
cmp
pop
pop
mov
pop
jmp
mov
fisubrs
test
mov
and
mov
and
xor
insb
mov
loop
fists
jle
jnp
pop
xor
fsubl
ja
movsl
or
jne
cmp
mov
cmpl
xchg
data16
add
sub
add
add
jns
push
sbb
loop
test
and
inc
push
scas
enter
push
pop
cli
inc
xchg
add
pop
mov
cmp
popa
add
scas
adc
movsl
and
mov
iret
inc
and
push
or
fidivrl
mov
shl
inc
jnp
lock
popf
or
sbb
mov
mov
mov
jl
push
jb
sbb
cli
ja
xor
sbb
push
lods
imul
mov
xor
jno
shlb
mov
iret
hlt
pop
test
adc
mov
mov
fs
loope
fwait
in
jae
cmp
aam
xchg
pushf
out
adc
pop
push
mov
mov
sub
jge
add
test
xor
hlt
rorl
mov
mov
add
leave
inc
out
loope
jne
xor
inc
push
inc
mov
in
data16
int3
push
test
xchg
cld
inc
mov
sub
fwait
loope
jp
mov
addr16
xchg
imul
cmpsb
stos
push
aaa
add
mov
test
jb
aam
mov
imul
into
pop
insb
cmp
push
std
inc
fists
cmpsb
sarl
mov
fnsave
xor
adc
mov
push
movsl
pop
mov
fidivl
mov
out
and
aam
xor
xchg
push
leave
push
xor
or
sbb
lahf
cmp
loop
adc
push
cmp
inc
mov
adc
pop
in
mov
and
in
nop
rcll
xchg
shll
lods
jg
pop
mov
pusha
into
sub
mov
out
push
and
mov
test
into
ds
cmp
int3
mov
cmp
imul
cmp
je
ficoms
stos
in
pusha
mov
lcall
cmp
or
cmc
mov
add
or
mov
es
aad
or
xor
jne
roll
dec
rcr
into
cmc
xchg
and
lahf
dec
call
push
mov
cwtl
mov
mov
daa
sbb
iret
jns
cmp
jp
xchg
aad
aam
daa
cltd
xchg
fwait
leave
push
mov
lods
mov
mov
dec
ss
icebp
add
push
stc
sahf
lock
cli
repnz
jb
test
sbb
repz
daa
fldcw
mov
rcll
xor
pop
stos
loop
scas
scas
mov
jae
mov
jp
mov
sbb
mov
push
push
ljmp
subb
mov
jle
xor
pop
mov
xchg
scas
push
jg
lcall
out
fildll
lds
daa
dec
xorl
mov
in
mov
push
scas
iret
mov
inc
in
setno
jle
scas
cmp
mov
jge
stc
shlb
mov
fdivrl
fld
pop
outsb
cmp
imul
inc
neg
sbb
lret
jge
insl
mov
incl
scas
insl
sahf
test
and
ljmp
dec
aaa
into
divl
push
adc
mov
cld
push
ja
rcrb
push
repz
mov
cmpsl
and
ja
jmp
lret
mov
int
lret
adc
in
clc
sub
daa
push
xchg
or
stos
popf
pushf
ret
aad
into
adc
jg
clc
sbb
dec
sbb
mov
xchg
sub
dec
mov
outsl
pop
ret
clc
sbb
testl
cmpsl
mov
lods
js
jo
test
cmp
xchg
adc
jge
xchg
std
sub
scas
mov
dec
push
or
int
add
test
push
mov
mov
sarl
push
outsl
add
fstps
pop
push
sar
inc
add
daa
dec
or
sub
das
mov
sahf
add
call
pop
jno
jo
repnz
fldt
cmpsb
sti
into
in
dec
pop
mov
or
cmp
push
clc
lcall
daa
loopne
test
or
push
test
in
inc
call
aas
push
andb
push
insb
stos
or
mov
or
dec
dec
ds
out
sti
cmp
sbb
push
hlt
or
loope
cmp
add
fidivs
pop
insb
adc
inc
jp
dec
ja
cmc
aam
cs
rclb
stc
add
ficoms
lahf
pop
xchg
push
outsl
pop
fmull
in
test
sti
icebp
jge
popf
mov
xchg
notl
mov
jns
jge
inc
cmc
push
lcall
mov
clc
dec
out
aaa
dec
sub
cmp
dec
inc
inc
popa
mov
pop
push
lock
es
fnstcw
xchg
aaa
lea
jae
scas
mov
push
hlt
add
mov
arpl
xor
push
popf
lret
jne
mov
dec
stos
mov
or
cmpsl
imul
adc
lds
add
adc
jno
daa
movb
inc
loopne
inc
rorl
mov
pop
mov
push
push
iret
mov
xchg
mov
fcoms
inc
xor
jns
popa
mov
dec
jo
test
fpatan
sub
jnp
xchg
ds
or
in
scas
add
xchg
inc
mov
push
icebp
add
dec
mov
decb
incb
insb
daa
lcall
xchg
mov
push
sbb
inc
push
lock
xchg
in
dec
scas
add
jle
inc
fsts
aam
xchg
sarl
pop
test
sbb
xor
insl
repz
outsl
xchg
call
adc
mov
jmp
ret
mov
lahf
sbb
sub
pop
sub
lds
cmp
je
repz
test
outsl
icebp
push
sub
nop
xchg
add
push
and
push
xchg
adc
jg
arpl
sahf
call
mov
or
mov
mov
add
jge
jo
push
icebp
mov
adc
rorb
adc
hlt
xor
dec
lock
daa
adc
loopne
in
mov
xchg
stc
pop
inc
cli
loop
and
in
push
sbb
rorl
jbe
imull
sahf
imul
adc
pop
out
dec
push
sbb
pop
sbb
insb
jg
xor
adc
cmpl
std
out
into
xchg
dec
jae
sub
cmp
jns
xrelease
jns
test
and
repz
mov
dec
mov
xchg
inc
fprem
andb
js
and
lds
sbb
icebp
addr16
inc
adc
bound
dec
adc
dec
push
mov
push
das
das
and
mov
inc
push
mov
pop
mov
xor
outsb
in
sub
mov
and
mov
andb
xchg
xor
rcrl
or
cltd
into
push
mov
mov
push
inc
sbb
mov
sub
push
sbb
in
leave
mov
stos
push
xor
mov
out
aas
xchg
adc
sbb
cmp
je
fimull
insl
scas
cbtw
or
mov
inc
cwtl
dec
test
ja
fstps
jp
sbb
lea
xchg
dec
jecxz
movsb
push
sub
fwait
dec
adcl
clc
or
jbe
jb
add
out
test
sub
dec
fwait
out
pushf
imul
sbb
xor
mov
push
cmp
pop
aad
mov
jp
enter
pop
pop
or
mov
cmp
cltd
push
sub
jne
fisubl
ljmp
std
fimull
mov
int3
ss
adc
movsl
stos
push
mov
xchg
stos
in
lods
fidivrs
ret
fldenv
push
inc
shlb
dec
adc
add
push
sbb
es
call
push
sbb
ror
movsb
and
arpl
mov
inc
mov
push
imul
enter
test
push
lods
daa
push
push
xchg
aaa
sarl
cmp
adc
fnstcw
and
ss
insb
or
xor
xchg
sbb
scas
adc
push
int3
outsb
sub
popaw
cmp
xchg
xchg
or
js
push
lea
das
shl
sbb
sbb
int
gs
xor
sbb
mov
jbe
jno
xchg
sbb
aas
orb
sbb
incb
mov
test
inc
dec
cmp
hlt
or
xchg
enter
mov
lods
or
push
or
jle
mov
add
arpl
inc
js
or
add
mov
push
aam
dec
stos
mov
pop
popa
shll
xor
adc
lret
adc
int3
in
jbe
jecxz
sub
out
or
outsb
push
mov
subl
push
js
jb
dec
xor
or
xchg
std
cltd
jmp
cmp
cmp
sbb
ja
xor
cld
sbb
pop
push
out
jl
lds
cmp
mov
cwtl
sbb
shr
out
repnz
xchg
fistpll
pop
lahf
fidivrl
jnp
push
push
xchg
xor
std
call
mov
push
out
mov
fdiv
add
cmp
mov
adcb
jnp
xchg
jp
out
xor
jg
mov
mov
das
lods
addb
les
jmp
mov
imul
enter
inc
fldcw
and
stos
je
lret
aaa
dec
push
movsl
rol
mov
dec
jle
hlt
leave
test
pop
pop
cmp
mov
push
test
and
and
fs
xor
sti
icebp
shlb
adc
stos
lcall
adc
push
jo
scas
or
xchg
dec
pop
mov
adc
dec
adc
adc
leave
aam
mov
cmpsb
xor
or
andb
add
into
insb
mov
xor
jge
jbe
jo
add
test
scas
mov
cmp
xor
jbe
pop
out
push
xor
cmp
test
loope
in
out
or
nop
or
inc
jle
jmp
mov
inc
fimuls
shlb
inc
jecxz
push
subb
jle
lods
lcall
sub
xchg
in
sub
inc
adc
mov
outsb
push
jae
js
pushf
das
mov
jae
jmp
in
add
pushf
fidivrl
repnz
scas
pop
jne
and
jno
je
and
mov
ljmp
mov
and
out
jp
int3
push
jmp
data16
scas
inc
cmp
cwtl
adc
jbe
aas
les
cmp
pop
mov
mov
or
scas
mov
lds
pop
lcall
add
xchg
in
mov
adcl
sbb
test
xor
pop
and
cmp
mov
in
scas
repnz
int
cli
fstp
jge
pop
inc
repz
pop
imul
testl
cmpsb
adc
clc
pop
rcll
jae
loope
push
aad
lcall
sahf
int3
push
cmp
pop
movsl
jbe
xor
leave
loope
ljmp
sub
pop
in
pushf
push
adc
mov
aad
mov
fisttpll
mov
xchg
cmp
fsubrl
mulb
dec
jmp
sub
xor
pop
dec
push
rcrb
call
std
push
imul
jns
popa
mov
into
mov
dec
mov
fsubp
popf
scas
out
mov
jns
cmpsb
insb
sub
push
sbb
mov
test
xchg
xchg
inc
push
and
jp
sub
xor
insl
inc
sub
or
mov
in
pop
cmpsl
lret
push
push
mov
push
adc
cmp
mov
fldcw
dec
inc
jns
cmp
and
arpl
sub
out
out
push
sub
aad
lods
nop
adc
repnz
mov
lahf
aad
pop
sbb
mov
cmp
xchg
push
fwait
xor
xchg
int3
icebp
push
jbe
jge
push
out
mov
add
pusha
inc
stos
push
mov
xor
lea
popf
mov
es
xor
sub
out
xchg
daa
ss
lea
gs
xchg
dec
sahf
mov
outsb
pop
icebp
jg
xor
in
stc
cld
call
mov
sub
out
dec
rorl
aaa
mov
je
jae
mov
fcmove
sub
roll
mov
mov
and
gs
loopne,pt
push
and
sbb
xor
cli
stos
mov
fcompl
loopne
ret
das
fwait
cmp
add
adc
addb
icebp
int
dec
mov
jo
mov
cmp
mov
adc
shrl
cmpb
and
int3
dec
ja
mov
push
insb
mov
push
movsl
lret
push
pusha
aaa
pop
cmp
push
jo
aam
aam
mov
lret
fstpt
ficompl
mov
lds
pop
popf
lcall
xchg
add
pusha
sbb
mov
adc
imul
das
aaa
fcompl
call
aam
adc
repnz
lret
and
dec
je
add
stc
jge
dec
in
test
sbb
subl
lock
and
mov
andb
cmp
cltd
pop
mov
jno
out
jecxz
mov
inc
out
loope
les
rclb
shlb
imul
push
cmp
gs
lret
dec
mov
mov
push
lahf
fs
in
ror
push
pop
in
push
ret
rolb
aas
sbb
or
adc
xchg
fildl
dec
test
repnz
test
out
ja
mov
push
mov
cmpsb
inc
mov
push
mov
dec
js
push
js
lods
out
jl
and
and
or
lods
mov
or
faddl
fcmovnbe
mov
cmp
out
and
mov
sub
lds
repz
sub
insl
dec
pop
dec
and
enter
icebp
subb
ret
je
pop
push
xchg
push
data16
scas
jae
dec
cmp
in
shlb
push
mov
push
sbb
sbb
mov
jns
mov
orb
jno
sub
adc
jne
cld
lcall
int3
sub
mov
cli
push
in
pusha
pop
push
mov
mov
jbe
shll
sub
cs
xchg
inc
sub
jecxz
xor
cltd
mov
addr16
adc
push
inc
push
add
shrl
dec
cmpsb
sahf
pop
ror
scas
dec
dec
ret
push
es
jl
out
shrl
and
cli
stos
sub
imul
out
dec
pop
or
arpl
lea
add
fdivl
stc
jl
fnstenv
fcoml
jl
mov
cltd
imul
mov
enter
mov
lcall
pop
aam
jns
lahf
cld
daa
mov
cmp
adc
jg
sub
and
shrb
ret
shrl
sub
mov
sub
cmpb
and
xlat
or
daa
mov
jne
cmp
inc
movsl
incb
lods
push
mov
mov
fstps
xchg
push
add
sti
add
sbb
mov
fwait
push
xchg
mov
aam
pop
sbb
cltd
mov
mov
xchg
and
fmull
nopl
inc
mov
arpl
mov
adc
iret
push
inc
cmp
sahf
iret
xchg
mov
icebp
or
jbe
repz
lcall
sub
fisubrl
hlt
and
xchg
loopne
in
movsb
lock
push
call
sbb
fsubl
mov
pop
lret
mov
jno
loopne
dec
dec
stos
lea
or
jg
sbbb
popa
sbb
push
xchg
jnp
inc
pop
sbb
add
sub
in
and
mov
flds
sub
lret
jnp
ret
dec
shr
or
push
xor
add
xor
dec
jmp
movsl
pushf
jecxz
inc
sub
jbe
cmp
pop
jge
lret
icebp
ljmp
test
cli
xchg
and
rcrb
pushf
mov
insb
rcll
jnp
dec
in
xchg
fmull
or
push
dec
es
push
outsl
les
inc
int3
push
lar
cmp
in
sti
negb
into
rcl
add
or
jge
setge
hlt
addr16
ds
sbb
mov
fistl
lods
das
cmp
xchg
loopne
xchg
popa
aad
pop
mov
es
lea
pop
mov
ljmp
mov
xchg
movsb
testb
insb
dec
xchg
out
notl
sub
imul
popf
ret
or
or
stc
mov
mov
and
stos
test
popl
popf
pop
nop
arpl
push
sbb
inc
fsts
push
push
dec
test
mov
nop
sub
mov
mov
fcmove
rclb
movsb
out
nop
stc
lds
fisubrl
iret
push
ret
js
push
adc
xchg
pop
cmpsb
in
mov
out
mov
out
mov
fdivrl
adc
mov
leave
add
int
insb
add
pop
inc
dec
int
pop
xchg
mov
jne
push
xchg
xadd
push
xor
subl
and
mov
insb
out
lahf
popa
subb
dec
pop
gs
mov
xor
jae
out
popf
pop
outsb
pop
cmp
mov
scas
inc
imul
pop
mov
addl
insl
lea
fwait
scas
imul
shrb
cld
sbb
test
mov
push
lahf
lock
rcl
mov
popa
mov
mov
sbbl
popf
push
adc
mov
test
aaa
negb
inc
sti
popf
out
and
outsb
dec
mov
pop
ss
pop
out
sbb
lcall
repnz
adc
xchg
pop
mov
popf
xor
test
aad
add
repz
mov
adc
sub
pop
leave
lock
in
and
out
lret
loope
repnz
jno
testb
outsb
jns
aaa
add
push
insl
xlat
jae
pop
adc
dec
sahf
rol
pushf
cld
jo
adc
add
lods
jb
cmp
or
fwait
and
mov
aad
xor
pop
mov
ret
add
push
pop
jecxz
call
out
insl
mov
imul
mov
fadds
ljmp
add
push
pop
data16
lret
addr16
sbb
mov
mov
mov
cmp
aam
mov
xchg
pop
cmovbe
push
cmp
stos
mov
jmp
jae
sbb
or
xlat
xchg
pusha
hlt
pop
mov
mov
cmp
xchg
das
mov
test
adcl
dec
push
and
js
fisubrl
test
xor
add
mov
jg
cmp
mov
outsb
inc
sar
pop
out
dec
sti
outsb
push
pop
xor
sti
mov
mov
and
sbb
shrb
xchg
dec
pop
sub
outsl
sbb
ror
mov
mov
jmp
sbbb
mov
lcall
push
add
adc
jno
push
pushf
dec
mov
fldcw
loop
insl
cmpsb
iret
mov
cld
xchg
xchg
push
mov
outsb
xorl
nop
sbb
or
arpl
int
mov
out
sub
sbb
mov
mov
pop
aam
neg
in
sub
dec
mov
sti
mov
cmpsb
dec
aam
nop
push
cmpsl
mov
push
mov
dec
mov
and
inc
add
cmp
and
fldcw
cltd
sbb
sar
pop
jnp
insl
sbbb
jb
aad
push
inc
add
int
push
xchg
cmp
pop
lds
roll
dec
in
mov
cwtl
daa
dec
jbe
mov
shll
push
faddl
sti
iret
test
leave
mov
pop
fsubl
push
mov
call
push
jbe
and
add
adcl
xorl
cs
pop
das
mov
sub
les
cmp
pusha
leave
testl
adc
mov
ror
fcmovnu
sbb
push
mov
or
dec
sbb
repnz
and
cltd
fisubrl
cmp
push
dec
sub
cmpsb
mov
dec
dec
add
cld
add
push
mov
jge
push
insl
int3
fistps
sub
in
cltd
adc
ror
mov
push
neg
cmp
stos
cld
vmovlps
jge
jns
adc
fnstcw
into
rclb
daa
out
arpl
adc
insl
dec
orb
in
loope
fs
stos
stos
outsb
and
fcomip
jecxz
outsl
cmp
xor
pop
xchg
push
jmp
repz
xchg
jmp
js
addr16
mov
cmp
pop
sbb
movsl
pop
lret
es
pop
dec
aad
mov
inc
testb
mov
inc
loop
pop
popl
mov
xor
pop
adc
inc
imul
mov
shll
ss
sub
inc
pop
icebp
xchg
mov
mov
enter
mov
sub
rcrl
ret
and
je
mov
scas
pusha
iret
lock
adc
loop
sti
fildll
jb
push
mov
sti
out
cmp
insl
sbb
push
lahf
adc
jbe
mov
jo
inc
inc
mov
or
mov
mov
push
and
mov
cli
cli
stos
frstor
push
lock
addr16
cmp
push
jmp
pop
scas
mov
sub
jno
or
pusha
out
pop
ret
sti
pop
add
aaa
fcomps
add
xor
or
rep
mov
in
out
jg
ljmp
adc
adcb
mov
pop
and
fistps
sbb
fs
add
cld
in
je
inc
dec
dec
sbb
sbb
cltd
fstps
loopne
mov
gs
cmp
int3
sub
dec
insb
mov
and
leave
sub
mov
mov
icebp
loopne
lret
in
in
es
mov
or
rorb
pop
xor
lret
lahf
xchg
aas
and
lds
jne
out
pmullw
scas
mov
scas
jb
rclb
xchg
into
scas
out
stc
jne
aaa
cmp
jmp
clc
cs
sbb
into
mov
sbb
out
arpl
push
fs
aad
mov
cli
dec
arpl
adc
out
jecxz
es
loope
mov
sub
xor
fadds
or
inc
push
mov
inc
movb
dec
push
jne
and
int3
mov
jg
and
inc
les
mov
mov
jl
mov
jmp
pop
xor
mov
sub
inc
hlt
shll
adc
imul
insb
cld
sbb
lcall
mov
jge
repz
sbb
xor
push
adc
sti
inc
or
mov
movsl
xchg
mov
les
mov
dec
jge
push
scas
jno
xchg
push
xchg
xchg
test
adc
pop
jae
pop
scas
push
xlat
je
movsl
add
stc
cmpsb
inc
cmp
dec
xchg
mov
cmp
push
push
xchg
sahf
inc
push
ljmp
push
loop
in
cli
push
xor
and
mov
int3
clc
clc
in
push
aad
sbb
xchg
jo
imul
aad
outsl
insl
int
insb
jne
push
scas
movsb
fsts
mov
stos
push
cmp
mov
mov
jne
mov
fnsave
cmp
loope
mov
std
cmpsl
adc
xorb
mov
sub
rcll
sti
loope
lock
bound
and
test
leave
xchg
imul
sbb
xchg
jmp
xchg
stos
ds
add
sbb
jg
sub
ljmp
fistl
clc
xchg
mov
lahf
cmp
sbb
cmp
clc
push
pop
or
movsb
mov
daa
ror
ret
xchg
mov
push
in
hlt
sbb
popf
sbb
out
mov
jg
test
sub
jnp
lock
sbb
mov
nop
adc
shl
sbb
xor
inc
vcvttsd2si
mull
mov
aas
es
xchg
and
in
mov
cltd
or
jle
and
sub
inc
fdivrp
sbb
gs
negl
pop
loope
and
mov
in
push
pop
fmul
fbstp
lods
xchg
mov
push
mov
pushw
add
mov
cs
es
sbb
das
cld
in
addl
mov
mov
mov
fwait
push
scas
lret
dec
loope
sti
dec
mov
xor
push
lahf
mov
loopne
outsw
xchg
sbb
fcoml
and
adc
pop
sbb
jmp
sbb
dec
mov
inc
push
cmpsb
lea
jnp
pop
popf
loope
movsb
pop
das
and
cmp
nop
ljmp
lods
fcmovnu
aad
sub
xchg
mov
js
out
push
mov
sub
ds
mov
mov
sti
and
sbb
adcb
aas
sti
insb
testb
pop
es
and
mov
sarl
push
pop
sbb
aas
pop
js
addr16
sub
repz
pop
ret
fstps
cs
cmpsl
mov
xchg
gs
fwait
sub
aad
imul
xchg
xchg
cltd
inc
rcl
lret
int
jmp
jnp
mov
sub
inc
jae
add
adc
xor
mov
vstmxcsr
mov
sub
cli
inc
jl
push
ds
jge
jno
inc
xchg
lcall
jge
push
hlt
and
inc
push
arpl
jne
into
loopne
cmp
push
stos
add
mov
addr16
in
roll
mov
pop
jge
ds
adc
dec
inc
sub
push
scas
push
and
jl
adcb
pop
ss
ljmp
clc
cmp
mov
push
mov
fcomp
xchg
xor
call
pop
lret
pop
stos
push
add
mov
and
call
and
out
add
add
rorb
int
aas
sbb
mov
nop
adc
leave
scas
mov
push
fisubrl
jnp
cmpsl
lret
mov
pusha
shl
icebp
push
mov
out
xchg
movsb
pusha
aam
cmp
cmp
add
dec
lock
sbb
stc
jne
dec
xchg
add
enter
inc
loop
jecxz
clc
es
fs
repnz
shll
mov
icebp
shll
mov
xchg
cs
pop
stos
fcomip
mov
out
fbstp
adc
push
jo
xchg
or
mov
xchg
pop
cmp
sub
push
or
movsl
test
xchg
and
movd
stos
aas
adc
sub
fldl
xor
jmp
rol
mov
lea
xchg
and
adc
mov
jns
sbb
outsb
sub
dec
movsl
mov
xchg
sub
adc
xor
mov
pop
in
xor
outsl
fxch
icebp
xor
dec
sub
mov
orb
mov
jo
pop
and
movsb
out
sbbl
xchg
outsl
xor
add
popf
stc
jle
sbb
pop
fcompp
inc
jmp
cmp
outsb
sub
test
sub
iret
xor
jnp
cmpsl
aad
jns
lock
sbb
sub
pop
lea
dec
mov
lret
add
in
dec
std
ss
dec
jnp
rolb
jl
pop
sbb
fmul
push
mov
jg
popf
cmpb
add
push
js
or
xchg
aam
ret
inc
add
idivl
popf
aas
jmp
fs
push
nop
sub
dec
jl
push
loopne
adc
mov
adc
lock
xor
and
pop
stc
mov
cmp
sbb
sub
pop
insb
nop
lods
pop
stc
push
sbb
fmull
out
or
add
mov
sub
sti
subb
push
packuswb
fnstcw
addb
adc
loop
xor
rcl
iret
push
std
inc
and
rcrb
push
push
adc
jmp
adc
xor
pop
jp
sbb
popf
adc
cltd
cmp
jb
std
sbb
inc
imul
or
dec
jae
mov
mov
mov
push
sbb
push
repz
pushf
imul
sbb
and
out
jb
fistps
or
pusha
cmp
std
adc
clc
mov
xchg
lahf
mov
add
insl
rclb
in
and
pop
mov
pushf
test
pusha
test
ret
jp
dec
cs
cmp
aaa
push
inc
popf
cmp
int
or
jbe
lock
gs
sub
xor
stos
scas
cli
in
scas
xor
xor
pop
stc
leave
movsl
pop
dec
sbb
filds
movsl
and
add
out
shrb
or
loope
testl
sub
dec
mov
jns
or
pusha
push
out
mov
ret
xor
divb
xchg
dec
or
in
push
xchg
imul
lds
xchg
gs
lcall
lret
xchg
mov
dec
pop
cli
xorw
jl
fwait
clc
incl
enter
movsb
adc
sti
jno
in
aaa
push
aas
ds
cmp
sub
fwait
in
loop
inc
cmpsb
sub
bound
movsb
ret
shll
subb
sbb
mov
mov
cmp
mov
cs
adc
dec
pop
nop
jmp
dec
leave
inc
push
mov
ret
shl
mov
psubusb
xor
into
test
mov
scas
mov
les
fidivl
lcall
imul
mov
push
mov
insb
mov
pushf
jl
dec
sub
or
stos
shlb
cmp
fwait
movsb
push
stos
iret
cmp
cmp
data16
xchg
loopne
notb
imul
jmp
xor
mov
fsubrl
mov
inc
dec
loopne
incb
add
sti
cwtl
adc
test
push
xchg
fcmove
movsb
lea
sar
xor
fsubrl
dec
mov
ret
jl
fwait
or
lret
pop
xor
lds
push
pandn
ret
push
xor
icebp
repnz
sub
ffree
fisubl
lahf
das
pop
sbb
inc
and
and
imull
dec
mov
inc
sbb
mov
add
push
xchg
movsb
outsb
push
push
shll
mov
idivl
addr16
jg
cli
sti
and
stos
cld
mov
movsb
stos
fnstsw
das
mov
inc
clc
adc
inc
mov
pop
ss
xchg
jae
ljmp
or
xorl
inc
cmp
jae
bswap
and
dec
jnp
sti
xlat
cs
ret
xor
out
pop
popf
ror
rcrb
incl
imull
lock
testb
enter
sbb
loope
inc
out
push
sbb
xor
aam
pushf
mov
sahf
arpl
push
incb
js
insb
jg
call
scas
cmp
call
add
pop
mov
ret
je
mov
add
test
inc
insl
sub
mov
sbb
push
push
cld
popa
stos
add
pop
sub
jp
insb
arpl
lods
mov
xor
arpl
sub
shrb
pop
imull
sub
rclb
je
out
xor
mov
aaa
adc
xchg
push
cmp
aaa
into
mov
jo
mov
aam
pop
push
sub
jmp
inc
ret
push
and
cmp
cmp
nop
push
addr16
out
xchg
jnp
pop
ljmp
lcall
or
ss
pop
in
lcall
add
xchg
call
stos
jb
push
jns
repnz
xchg
ds
xlat
sub
pop
sub
addr16
xrelease
push
test
sbb
adc
mov
inc
jae
pop
adc
mov
lds
add
insl
xor
and
pushf
push
xor
sub
adc
insl
loope
mov
and
or
adc
mov
jo
push
jo
out
test
repz
xchg
adc
xor
pop
pop
push
aaa
or
sub
imul
inc
mov
jno
sub
stos
sti
sbb
test
out
loopne
fs
xor
pop
pop
jno
cli
xor
jmp
xor
jl
int
or
mov
enter
lds
out
sbb
cmp
or
push
sti
dec
rcl
nop
cmp
jnp
repnz
stos
fimull
sbb
inc
push
mov
in
insl
cmpsb
and
push
lret
add
std
dec
push
into
and
xor
in
jb
inc
lds
add
jne
insb
cld
das
cltd
subl
cmp
pushf
lods
outsb
insl
mov
repnz
pop
in
mov
test
pop
daa
adc
in
mov
ljmp
inc
rcrb
bound
adc
dec
push
mov
mov
hlt
add
jl
mov
adc
stc
cmp
mov
and
cmp
jmp
sbb
lods
add
mov
mov
or
popf
insl
xchg
mov
leave
dec
add
cli
and
loop
push
jge
mov
cs
mov
in
hlt
xor
bound
outsb
test
mov
mov
sahf
div
mov
jb
jno,pt
sbb
add
imul
pop
out
lea
push
mov
inc
mull
rclb
mov
jecxz
incl
or
cmpb
cmp
mov
and
cmp
stc
je
test
pop
movsb
shl
leave
adc
fs
lds
std
jns
pop
jg
inc
xchg
or
push
nop
xchg
mov
push
out
sarb
test
jg
inc
dec
push
cmp
fiaddl
into
mov
lahf
faddl
negb
outsb
or
ss
or
les
jl
cmc
mov
mov
push
in
out
push
push
ja
adc
push
mov
jo
mov
dec
jo
cmp
mov
jns
add
loopne
addr16
aas
ss
pushf
push
push
push
in
test
pushf
dec
mov
lds
push
mov
add
cmp
test
xor
or
testl
movsb
sub
mov
mov
cli
fidivl
and
loop
lds
stos
push
cmpsl
mov
iret
in
xor
stos
push
inc
or
sti
das
mov
push
jbe
push
sub
jnp
in
dec
sbb
jno
lock
xchg
cmp
stos
mov
push
cmp
sub
sbb
and
ss
sahf
outsl
int3
hlt
lret
daa
ljmp
dec
mov
stos
jg
mov
jno
sarb
sub
in
sbb
jne
sub
iret
mull
call
imul
xchg
pop
and
xchg
shll
xchg
sub
add
outsl
sub
das
or
bound
inc
addl
cwtl
or
mov
adc
js
orb
out
es
js
movsb
adc
lods
push
fldenv
mov
insl
mov
mov
cmpsb
jmp
je
stos
bound
add
test
sbb
ret
xchg
es
or
and
dec
adc
mov
incl
sub
sub
aaa
inc
or
rorl
sub
sub
xchg
sub
and
cmp
and
arpl
sbb
and
jl
sahf
popf
iret
in
iret
ficomps
cmp
in
add
pop
mov
in
push
xor
sub
out
jle
xor
lds
push
jmp
and
push
addb
jo
popa
je
mov
jb
xor
sbb
inc
mov
mov
or
loope
rorb
lahf
jnp
and
sbb
mov
xchg
rcrl
int
nop
push
push
push
and
lds
outsb
stos
mov
cmpsb
insl
aad
dec
test
mov
dec
mov
fcoms
stc
cld
aaa
outsl
in
loopne
xchg
dec
enter
daa
ss
pop
cmp
popf
jg
int3
xchg
push
push
cmp
pop
sarl
mov
mov
movsl
in
pop
push
insb
scas
xchg
fsubrl
jmp
mov
or
dec
insb
fidivrl
or
push
cmp
lds
jnp
jecxz
or
test
push
jle
lret
sbb
test
xor
cmp
aad
clc
pop
test
push
fidivrl
in
pop
inc
fs
jg
xchg
adc
inc
and
mov
pop
push
push
mov
dec
and
repnz
sub
js
sbb
sbb
pop
cli
push
xlat
mov
push
jo
fists
and
lds
divl
mov
imul
js
fldenv
not
adc
dec
gs
insb
repz
sarl
leave
pop
xchg
lret
aad
cltd
cli
inc
out
mov
or
rclb
mov
sti
inc
loope
pushf
jmp
popa
jl
dec
lret
adc
insl
ret
test
xor
fwait
cmp
dec
jg
nop
pushf
inc
fcmovne
sbb
add
push
fisttps
jp
mov
jne
xchg
mov
out
loope
add
sbb
movsl
mov
inc
loop
mov
mov
inc
xchg
mov
jns
cli
push
neg
cld
clc
ss
ljmp
lcall
mov
jno
aad
lea
xchg
inc
test
cwtl
cli
ljmp
jecxz
mov
xor
xchg
push
adc
out
dec
nop
or
imul
addr16
dec
push
icebp
push
mov
push
pop
std
add
xchg
cmp
jbe
mov
test
mov
pop
icebp
mov
je
scas
adc
into
std
aam
scas
sahf
sti
pop
lahf
cmp
pop
sub
ret
aam
sub
adc
shrl
sti
cmp
cmp
adc
data16
shl
mov
cmpsb
popf
in
rclb
pop
je
mov
jp
scas
jle
add
xchg
loopne
outsl
fs
add
cmp
out
popf
adc
fildll
mov
cmpsb
push
divb
and
cmp
xchg
daa
lahf
inc
or
fbstp
out
popf
lret
test
push
xor
sub
cmp
mov
fs
adc
xchg
mov
adc
pop
les
mov
punpckhdq
cltd
sbb
jmp
mov
repz
lcall
jmp
pop
insl
mov
jge
mov
rorb
inc
sub
fwait
sub
push
fildl
pop
jns
sbb
sub
iret
jno
adc
out
mov
sub
push
or
lods
xor
shlb
ja
shl
dec
and
push
into
cmpsb
fs
mov
fimull
jbe
sbb
repz
int
mov
int3
sub
add
imul
sub
mov
movsb
xor
dec
xor
in
and
nop
ss
aam
je
lcall
mov
mov
aas
sub
scas
xor
pushf
mov
inc
ret
add
iret
call
add
and
dec
daa
mov
cli
push
mov
and
hlt
dec
sbb
push
xorl
dec
sbb
xchg
std
movsl
movsl
icebp
aaa
idivb
mov
dec
adc
sub
push
jnp
int
rclb
jne
mov
bound
push
dec
dec
imul
sub
into
inc
movsb
jae
scas
lods
test
mov
lds
lods
push
xor
mov
cwtd
pop
orl
sbb
addr16
hlt
call
rcll
sbb
mov
xchg
imul
mov
insl
push
das
pop
mov
push
mov
pop
pop
pop
xor
shrb
int
movsl
out
imul
jne
clc
call
mov
pop
and
mov
pop
xor
inc
pop
jmp
imul
xor
cmp
pop
rcrb
loope
jo
rcrb
pop
push
shr
jnp
dec
ret
sub
stos
iret
mul
in
in
insl
cmp
xor
stos
pop
repz
mov
bound
icebp
aas
call
xlat
insb
rol
xor
jle
push
mov
push
pusha
push
jae
in
jns
add
lock
xchg
push
mov
sbb
sti
jge
cmp
stos
lea
mov
cmpsb
fsts
ja
dec
inc
and
fistpl
and
jecxz
cmc
push
mov
ficompl
or
push
sarb
cwtl
adc
jmp
dec
lods
rcr
test
xchg
add
adc
dec
jne
cmc
inc
gs
xchg
jns
outsl
sub
das
jmp
mov
cmp
mov
lret
push
push
fildll
call
ror
cmc
outsl
std
stos
test
rcl
leave
test
fcomps
dec
adc
stc
ljmp
mov
or
lret
ret
shlb
or
int
popa
test
mov
mov
hlt
add
nop
push
aad
xor
cmc
cs
or
inc
inc
jbe
fidivrl
lods
sub
popf
xchg
bound
xchg
cmp
jl
mov
test
mov
dec
pop
shrb
mov
aaa
lock
pop
and
das
jmp
push
sbbb
sub
bound
test
sbb
fcoml
sbbb
xchg
sub
push
aad
sbb
adc
rcrl
cli
cs
cmc
imul
scas
dec
add
in
out
mov
xor
mov
subl
popa
int
or
in
fwait
aad
dec
movsl
lods
add
adcl
out
sub
adc
add
jmp
dec
pop
push
ss
mov
push
jp
aam
xchg
and
data16
xor
vpmacswd
push
pop
inc
andb
cwtl
inc
lock
and
imul
add
out
jecxz
sti
fwait
dec
sbb
jb
add
add
push
insl
mov
push
enter
ret
je
pop
das
pusha
sbb
adc
jns
adc
sbb
fldl
fs
push
pop
insl
dec
les
js
insl
push
mov
push
flds
outsb
ficomps
sti
lods
mov
shlb
mov
mov
inc
pop
insb
xchg
pop
cmpsl
fbstp
mov
jmp
cmp
clc
mov
pushl
adc
lods
fadds
mov
inc
in
xchg
mov
in
repnz
xor
jl
jmp
in
stos
xchg
push
sub
inc
imul
pop
cwtl
xor
and
xor
xor
push
pop
loop
inc
push
and
pop
mov
pop
adc
add
xchg
ja
add
jno
outsl
aam
fnstsw
or
jge
in
ds
mov
mov
fstl
movsl
aam
loope
dec
repz
xchg
pushf
fdivl
dec
push
scas
shlb
ss
inc
repz
test
adc
pop
hlt
add
orl
fildl
xlat
in
push
jmp
sub
hlt
aad
clc
and
pop
xor
mov
mov
add
mov
jno
push
mov
inc
mov
sub
jnp
arpl
mov
out
inc
in
shlb
mov
mov
adcb
mov
imul
xchg
jae
adc
aaa
mov
sub
mov
pusha
scas
lcall
cmp
and
gs
and
pushf
repnz
in
mov
inc
add
sbb
jne
js
fcmove
jae
or
jge
ds
dec
mov
sub
arpl
jne
xchg
into
xchg
ss
sti
push
mov
in
ss
mov
add
mov
out
dec
addr16
xchg
add
pop
push
jge
out
jae
push
pop
repnz
addr16
stos
lahf
adc
add
js
or
in
inc
mov
in
mov
and
pop
dec
stos
mov
lret
mov
or
subl
fimull
xor
jle
jmp
jecxz
and
repnz
lret
inc
push
sbb
hlt
int3
hlt
jmp
dec
ljmp
mov
ss
xorb
cmp
shll
into
mov
fs
pop
mov
mov
mov
cmpsl
incl
jns
and
mov
mov
loop
pop
sbb
dec
xchg
lcall
adc
mov
bswap
mov
sbb
mov
xchg
adc
add
in
mov
hlt
dec
jp
push
fs
cld
xchg
insl
jbe
cmpsb
jae
inc
orb
sub
clc
ret
push
into
mov
dec
sub
jb
pop
in
pop
dec
cmp
lret
cwtl
or
cs
aaa
xor
cmpsb
push
mov
mov
adc
push
sub
xor
inc
sbb
add
jbe
dec
rcll
inc
or
data16
jge
push
scas
lock
repz
sbb
test
add
or
pop
movsl
dec
ss
pop
sahf
mov
mov
repnz
sub
sbb
addr16
sarb
arpl
mov
ficomps
mov
push
jo
inc
stc
movsl
daa
pushf
sbb
jecxz
push
outsl
sbb
fiadds
xor
hlt
loop
mov
push
mov
mov
call
lods
sub
jae
fldl
pop
shll
add
icebp
out
pop
idivb
pop
rorb
out
pop
jae
mov
xor
addb
jle
gs
stos
testl
test
mov
pop
sub
add
cli
loopne
fcomip
mov
lds
inc
inc
gs
xchg
and
jnp
imul
jne
mov
enter
pop
mov
nop
mov
jl
jbe
div
rcrb
fmul
arpl
jae
fidivs
push
fcom
mov
xchg
leave
inc
addr16
xor
push
shlb
dec
pop
push
or
jecxz
inc
clc
enter
ljmp
je
lret
jbe
jecxz
jno
pop
call
cmpsb
test
loopne
call
fstpl
insl
jno
rorl
loop
sbb
push
lock
insb
jnp
push
mov
jns
inc
stos
out
lcall
mov
mov
imul
push
fisttpl
xchg
adc
cmc
incl
xlat
mov
aam
mov
les
cli
mov
xor
in
fisubrl
std
mov
inc
jne
stc
and
mov
andb
mov
and
fwait
lds
arpl
jno
sbbb
jbe
mov
push
sti
jns
jmp
inc
push
setge
pop
dec
in
shll
pop
push
fstpt
jns
jmp
cmc
lahf
lcall
pop
insb
or
lds
rol
test
push
dec
scas
and
sub
pop
test
jl
jmp
stos
xor
andb
push
lods
sbb
lock
mov
insb
push
std
push
dec
nop
iret
cmpsb
sub
cli
push
xchg
jmp
xor
je
jmp
adc
xchg
mov
sbb
pop
arpl
mov
out
mov
inc
sub
mov
sbb
fisttpl
push
popa
outsb
stc
xor
jno
shlb
push
xchg
in
std
in
adc
mov
push
push
pop
arpl
lcall
push
mov
aas
and
sub
dec
and
into
add
dec
jmp
or
adc
adc
adc
cwtl
jne
ljmp
outsl
inc
jne
jns
add
in
dec
mov
push
cmpb
orb
cmp
and
outsb
xor
pop
mov
cli
ss
sbb
es
jecxz
lcall
bound
push
into
shlb
jmp
imul
cmpb
rorb
mov
daa
add
cmp
mov
mov
xchg
jne
ljmp
pop
cmp
ja
inc
jb
cltd
mov
push
and
es
inc
nop
je
dec
lods
and
mov
lock
hlt
fdiv
xor
pop
xlat
add
dec
insb
xchg
into
pushf
sub
icebp
xchg
pop
xchg
rol
push
xlat
pop
in
pop
loop
mov
imul
or
mov
xor
inc
pop
ficomps
jbe
mov
outsl
sub
adc
fimull
out
pop
adc
mov
xor
push
frstor
imul
sbb
xchg
pop
mov
dec
sub
xor
sahf
enter
dec
rcll
inc
pop
lea
xchg
xchg
mov
sbb
nop
mov
sub
jge
shrb
sub
push
dec
dec
xlat
shlb
subl
das
insb
push
xchg
test
jg
int3
test
adc
cli
pop
out
and
popa
sub
out
cmp
xor
fnstenv
insb
mov
mov
push
shlb
and
push
jno
sbb
outsb
dec
push
and
iret
arpl
divb
mov
cmc
cmp
aaa
movsb
negb
ja
mov
int
jg
ret
in
movl
xchg
mov
gs
pop
outsl
pop
push
ja
jnp
sahf
int3
stc
jmp
mov
adc
jno
insl
cmp
fdivs
out
arpl
and
dec
push
xchg
stc
cmp
cmpsl
mov
pop
cmp
scas
mov
mov
mov
pop
mov
nop
mov
aas
pusha
xor
xchg
and
cmp
mov
icebp
inc
in
jno
sbb
jge
scas
push
push
or
ja
push
mov
sub
push
jo
dec
xchg
sub
out
aaa
mull
mov
loop
inc
sarb
adc
mov
movsl
scas
int3
gs
adc
add
pop
jae
imul
and
adc
and
loop
popf
mov
data16
divb
pop
ret
ja
aam
data16
mov
in
outsl
aad
cmp
lods
fwait
cmp
fiadds
test
xchg
ja
aas
push
jae
jl
das
push
into
jnp
pop
pop
leave
xchg
call
pop
and
lahf
xbegin
add
mov
or
bound
icebp
mov
dec
xchg
imul
dec
and
adc
mov
lcall
lock
and
mov
fisttps
xchg
inc
add
cwtl
sbb
ja
dec
aaa
sub
ljmp
data16
aas
adc
shlb
sbb
arpl
rclb
sbb
mov
ljmp
lds
lods
adc
or
jmp
and
iret
pop
adc
mov
mov
or
inc
pop
adc
fwait
jecxz
fs
leave
pusha
rol
mov
sub
mov
mov
mov
cld
fxtract
test
in
fidivrl
pushf
inc
and
push
shrb
ljmp
jge
cmpsb
hlt
out
push
pop
push
adc
mov
and
movsb
push
js
xchg
xchg
xchg
mov
jnp
jno
pop
outsb
aas
or
fimuls
mov
push
sbb
fimull
inc
push
stos
cmp
mov
mov
push
push
rcll
loop
loop
dec
subb
fs
cmp
test
mov
jg
int
and
push
pop
pop
xor
rcr
and
imul
pop
ja
add
lds
incl
pop
ljmp
daa
daa
scas
xlat
hlt
or
mov
lea
sub
sub
mov
pop
iret
sub
add
filds
jb
test
fs
and
pop
dec
mov
pop
pop
cmp
xchg
sbb
fisubs
mov
push
shl
ss
xor
mov
int3
dec
jmp
out
lods
add
fs
push
inc
jnp
sbb
add
sahf
ret
push
cmp
dec
adc
adc
jnp
mul
pushf
lea
jl
rclb
push
push
mov
mov
outsl
or
mov
cli
xchg
pop
or
pop
mov
pop
clc
jp
shrl
hlt
pop
into
jo
jns
jae
stos
sahf
fdivl
adc
adc
cmp
xor
xrelease
and
pop
in
lock
popf
push
loope
pop
and
dec
popa
sub
or
je
adc
jns
add
sbb
lods
lds
fidivs
outsl
imul
lea
jnp
shrb
sbb
xchg
test
das
inc
or
clc
in
pop
pop
sbb
mov
xor
shr
stos
sti
pop
rol
lock
fimuls
xchg
lds
add
lods
scas
mov
pop
cmc
ficompl
orl
xchg
sbb
and
mov
inc
xor
pop
adc
inc
movsb
aas
xchg
jns
scas
jecxz
push
jb
cmp
iret
test
pushf
push
ds
dec
mov
xchg
repz
nop
ror
dec
pop
shlb
test
movsl
dec
fisubl
scas
sub
jmp
mov
icebp
push
test
nop
call
es
xchg
inc
inc
mov
jmp
gs
std
cwtl
fsub
push
scas
sub
and
dec
dec
hlt
or
popl
adc
insb
xchg
jle
decl
xor
daa
ret
mov
pop
pop
mov
cmp
push
xchg
loopne
dec
cmp
fldcw
mov
push
sbb
push
push
stc
repnz
lock
loop
stos
cld
xchg
sbb
aaa
ja
xor
aaa
mov
sbb
xchg
in
xor
adc
rcll
mov
ds
sub
enter
call
or
jg
inc
mov
shr
dec
pop
into
gs
lea
enter
jmp
adc
jecxz
fistpl
sub
outsl
imul
aas
xchg
fwait
and
das
dec
cli
and
sbbl
xor
rcrl
rcl
mov
sub
dec
dec
pop
mov
lahf
lret
pop
cmc
or
cmp
cmp
pop
lahf
out
cli
mov
cmp
fiaddl
push
sub
fistpll
xor
pop
pop
push
cld
test
mov
lods
sbb
addr16
push
push
mov
cli
imul
or
cmp
mov
cli
jmp
pop
cld
xchg
inc
pop
mov
adc
cs
jnp
jae
sahf
sub
mov
cmp
aam
repz
sbb
xor
xor
jo
mov
push
pop
push
addr16
sbb
push
sub
adc
and
push
sbb
jp
insl
adc
aaa
clc
dec
fdivl
mov
push
inc
cmpsl
sbb
gs
mov
pop
cs
lods
xor
sub
cld
add
ret
cmp
cmp
arpl
add
fdivrs
or
adc
and
push
xor
mov
pop
add
dec
adc
mov
cs
lret
mov
pop
push
pop
popa
cmp
sahf
out
insb
and
pop
stc
fsubl
push
jno
sbb
pop
dec
and
xor
push
loopne
aas
sbb
xor
xor
dec
imul
js
mov
stc
out
sbb
clc
and
dec
jmp
and
ja
xchg
push
movsb
sub
add
bswap
jnp
sahf
jb
js
cmp
mov
xchg
test
mov
int3
or
sbb
mov
insl
adc
sbb
push
scas
rolb
or
jbe
ljmp
sub
stc
inc
and
mov
ret
pop
mov
jge
pop
arpl
mov
and
mov
mov
adc
cmp
ret
repnz
scas
cmc
jecxz
cmp
testb
jecxz
or
cltd
cmp
pop
fcomps
jb
push
dec
out
mov
dec
out
mov
cmpsl
pop
leave
mov
lcall
inc
dec
mov
shrb
rcl
ret
leave
cmpsl
sbb
add
lods
dec
or
inc
mov
add
movsl
rorl
xor
insl
pop
pop
cld
mov
mov
sub
jne
aas
sub
mov
adc
pop
sbb
jge
add
xchg
add
sub
dec
shr
mov
add
jne
into
scas
jge
xchg
xor
mov
fldcw
out
pop
pop
ljmp
fwait
xchg
push
pop
push
pop
dec
ds
cmp
in
jmp
pop
rcl
dec
cwtl
adc
sub
enter
fs
int
sbb
ja
jno
lods
and
lds
shr
mov
fstpl
or
aam
addr16
adc
pop
leave
fs
fldcw
jecxz
inc
adc
mov
push
in
aam
jns
and
out
pop
fcmovb
dec
xor
test
mov
ret
int
stos
sbb
mov
sub
cmp
mov
jbe
lods
and
cs
or
xchg
fnstcw
pop
and
enter
xchg
pop
pop
jnp
mov
aaa
popf
dec
jno
add
sahf
stos
idivl
bound
xchg
mov
gs
cld
jp
test
jnp
shl
push
xchg
cmpsl
add
popl
jns
cmp
out
cmc
and
lret
in
ret
inc
ret
adc
imul
mov
add
sbb
push
sub
xor
jne
or
push
sarl
clc
add
cs
xlat
ficompl
push
or
mov
mov
jl
hlt
cs
push
insb
pop
inc
ds
fsubrs
cmp
aaa
mov
cltd
outsb
xchg
mov
in
call
arpl
mov
xchg
push
fwait
xor
jp
lock
stos
leave
adc
sbbl
imul
loope
in
in
popl
cmpsb
shlb
xchg
sub
xchg
sbb
sub
out
pop
xor
es
pop
call
adc
jae
push
popf
pop
les
xor
push
xor
aad
mov
dec
and
leave
dec
push
ret
mov
cmp
jno
jl
jnp
les
lret
ret
lret
cmp
xchg
sub
repnz
dec
nop
mov
dec
inc
cmp
mov
push
jecxz
push
aas
jno
fsubl
mov
jae
nop
insb
jmp
imul
adc
subb
dec
in
cld
sub
add
and
xor
cmpsl
mov
add
fldenv
data16
hlt
or
push
push
cmp
outsl
push
xchg
bound
xchg
repz
lret
cmp
adc
or
in
cmp
pushf
add
mov
aad
mov
out
jae
sbb
rcr
add
jo
icebp
push
shrl
dec
fsubrl
inc
adc
add
adc
jns
sub
add
loop
push
xor
dec
sti
dec
test
xchg
lahf
cmp
roll
sub
inc
push
cmp
into
stos
fdiv
mov
inc
insl
adc
fbld
xchg
and
mov
addr16
push
add
repz
push
call
xchg
xor
je
ret
jl
jp
cmpsb
fidivrs
jo
inc
cmp
pop
addr16
andb
dec
aam
mov
std
xor
fs
mov
jmp
scas
adc
incl
gs
mov
push
push
out
loop
insb
loope
cmc
loope
repz
call
xor
xor
flds
add
jns
jbe
push
push
add
pusha
mov
test
inc
jg
data16
sub
pop
movsb
fwait
jecxz
adc
dec
cmp
jmp
mov
mov
ret
xchg
stc
ss
mov
push
jg
mov
mov
or
fmuls
lods
dec
repz
cmpsb
pop
out
std
hlt
fisttpll
test
xchg
jnp
test
icebp
adc
in
cmp
push
in
pop
fs
jp
jno
cmp
inc
mov
mov
push
je
inc
mov
xor
xchg
ds
ss
addr16
ffreep
adc
sbb
dec
ret
fwait
add
dec
pop
lock
in
xchg
in
push
cmpsl
lds
sub
sub
sbb
icebp
dec
in
mov
lock
sbb
jmp
push
insl
in
xor
push
xchg
lret
outsb
scas
les
sub
adc
xlat
mov
xchg
int
push
mov
adc
enter
mov
jecxz
fmull
sbb
mov
lret
jg
mov
sbb
inc
jne
push
jmp
lds
rorl
add
add
mov
les
mov
mov
ds
jb
inc
lea
or
xor
dec
adc
loop
inc
xchg
pop
pop
rcrb
int3
sub
mov
lret
ljmp
ficoml
sti
in
mov
push
mov
fdivrs
dec
sbb
xor
aad
inc
rorl
dec
mov
mov
mov
into
lods
jb
mov
pop
fadd
data16
lock
rcr
lahf
or
fwait
inc
stos
ret
sub
dec
stc
inc
add
das
enter
cmc
loop
and
test
int
pop
test
sbb
cmp
pop
outsl
fildll
jae
push
pop
pop
aam
leave
sub
and
nop
cmp
lock
push
f2xm1
mov
repnz
out
movsl
mov
sbb
inc
ja
rcrl
push
into
insb
jnp
adc
nop
push
in
mov
test
dec
and
call
sbb
cmpsb
pop
pop
mov
in
dec
mov
add
subb
movsl
sbb
add
mov
pop
bound
xor
and
out
and
sub
dec
and
lods
out
scas
es
cli
adc
jo
dec
loop
fbstp
mov
scas
loopne
aaa
push
or
insl
pop
aam
into
outsb
hlt
jnp
neg
test
clc
in
outsl
repz
and
adc
daa
pop
dec
add
sub
push
lret
test
xor
mov
adc
fimull
push
cli
movsl
cwtl
xchg
add
mov
mov
aad
jo
repz
insb
xchg
jns
push
ud2
aaa
push
inc
inc
adc
sbb
bswap
imul
push
insl
stc
cli
rorl
gs
repz
mov
mov
or
jecxz
ss
insb
test
fmuls
fiadds
fdivs
xlat
aad
or
xchg
mov
and
lret
aam
jae
sbbb
mov
adc
fiadds
cmp
int
adc
aam
mov
adc
leave
add
sarb
cmp
js
sub
and
cli
push
jmp
inc
jmp
outsl
arpl
jne
jge
add
inc
fistpll
test
scas
fstpl
sbb
mov
dec
lret
or
jno
icebp
in
adc
cmp
ret
and
lods
cmpsl
mov
insl
xlat
outsb
repnz
pop
outsl
jmp
sub
aad
mov
dec
jno
or
or
push
loop
aad
pop
movb
addb
cmp
fstps
adc
mov
fiaddl
mov
pop
movsb
fwait
cmp
lret
mov
ficoml
lahf
fcompl
add
mov
mov
repz
mov
adc
dec
arpl
pop
adc
mulb
fs
sbb
stos
pop
sarb
aas
lds
cli
lahf
cmp
fsub
gs
add
std
sbb
and
imul
inc
roll
mov
int3
mov
push
movsl
pop
mov
or
sub
xchg
mov
cwtl
test
bound
push
mov
xlat
mov
and
pop
jae
adc
lea
rorb
out
mov
pop
les
xchg
scas
mov
mov
pop
lahf
sub
mov
loope
pop
xlat
or
push
call
hlt
leave
adc
iret
or
xchg
popa
xor
sbb
int3
sub
addr16
stos
ss
fsubr
and
mov
inc
jae
mov
test
pop
dec
xchg
ret
xchg
add
cwtl
lods
mov
jb
mov
mov
pop
test
stc
dec
ret
stos
decl
les
jl
scas
adc
call
pushf
inc
cmpsb
fwait
gs
jge
clc
mov
fcomps
test
jb
cmc
jecxz
or
push
dec
jo
scas
pop
sub
jecxz
jg
sub
sbb
mov
cwtl
mov
cmpsl
push
fiadds
ljmp
pop
in
orl
popa
leave
jnp
jecxz
fcoms
lea
std
outsb
out
mov
and
shlb
sbb
in
sub
mov
lds
jg
fstps
js
imul
out
or
or
stc
sbb
scas
mov
enter
sub
cmp
outsb
aam
xchg
adc
lahf
icebp
sub
outsb
mov
push
or
imul
fsubrl
mov
ret
push
mov
out
sbb
std
jnp
sub
imul
mov
rcrb
subb
outsl
ss
cmpsb
aad
outsl
scas
add
leave
imul
das
sarb
aaa
shl
rorb
sbbb
jg
lds
mov
mov
sbb
in
arpl
and
dec
mov
pop
fs
push
std
int3
mov
sub
adc
and
xchg
mov
mov
outsl
jp
mov
jp
lods
adc
shrl
inc
loope
mov
pop
push
sti
cmp
sbb
out
popf
xchg
js
ret
aas
adc
insb
mov
pop
inc
mov
push
or
dec
sahf
and
sbb
fucomip
out
divl
dec
fdivrp
dec
cmp
mov
cmp
sub
push
ds
and
insb
jae
in
inc
cmp
sub
out
adc
mov
not
dec
dec
cld
outsb
add
test
push
outsb
mov
add
mov
mov
in
add
aad
cmp
pusha
enter
mov
mov
pop
add
in
imul
or
ss
mov
pop
mov
out
xchg
or
loop
andb
jno
out
enter
int3
xor
jno
lock
push
test
cmp
or
push
jnp
fsubs
adc
push
out
jo
test
clc
add
outsl
icebp
xor
inc
sub
cmpb
dec
adc
and
add
push
pop
fwait
aas
leave
in
jae
pop
jg
dec
addb
lods
mov
sti
sar
push
loop
addr16
out
dec
mov
int3
or
cmpsb
std
stos
add
das
mov
hlt
jns
mov
sub
mov
movsl
sub
test
lods
scas
mov
cmp
adcl
fsubl
sahf
test
ljmp
cwtl
mov
dec
es
lahf
mov
cmp
shlb
scas
sbb
pop
xchg
cld
jno
mov
xchg
adc
adc
sub
xor
shrb
jae
jae
fmulp
sub
pop
sbb
in
js
mov
xor
in
in
dec
sub
pop
xchg
scas
aam
je
mov
fwait
cmpsl
gs
mull
sbb
icebp
inc
sahf
imul
xlat
mov
fisubrs
stos
dec
decb
mov
cmp
test
lahf
ds
repnz
jle
testb
jo
xor
movsb
stos
xchg
repnz
mov
iret
inc
and
jg
push
push
js
xor
xchg
sub
arpl
std
dec
mov
stc
mov
fdivr
gs
inc
cld
or
xchg
jno
adc
xchg
hlt
push
test
cmpsl
dec
clc
dec
cvtpi2ps
xchg
jg
mov
mov
fisubs
sub
shll
repz
ds
sub
loope
movsb
scas
xchg
mov
int
mov
push
xchg
fisubrl
sbb
pop
cmp
inc
repnz
lds
push
test
mov
and
sti
adc
lahf
lret
out
push
push
aad
adc
out
das
aad
cmp
and
and
dec
jns
jp
addr16
pop
xor
push
pop
mov
jo
sub
imul
pop
repnz
test
nop
xor
hlt
sub
sbb
cmp
aaa
or
xor
push
pop
mov
bound
sbb
hlt
sub
fldcw
mov
lcall
nop
stos
mov
xchg
jns
push
not
jl
cltd
cli
cmp
sbb
rcrb
dec
insb
mov
dec
push
xor
inc
cmp
ss
jbe
and
add
or
mov
inc
stc
repz
cmpsl
arpl
ljmp
lods
inc
das
mov
lea
insl
lods
mov
hlt
xlat
jns
ret
cmp
mov
sub
into
ret
iret
leave
cmp
out
call
ss
mov
stos
lret
pop
lds
xchg
xlat
inc
pop
outsb
mov
push
je
dec
inc
fsubs
fisubs
stos
sbb
xchg
adc
test
fsubl
lds
xchg
xor
clc
sub
in
cld
in
out
clc
pop
rclb
adc
or
add
cs
jnp
jecxz
push
les
mov
mov
test
jno
push
jne
das
lret
or
jp
lods
mov
sub
outsl
fmuls
stos
out
lcall
lock
pop
adc
imul
cmp
out
das
sub
sbb
push
sub
popa
mov
xchg
xchg
mov
aad
dec
sub
jp
xor
lods
daa
add
mov
pop
or
addr16
inc
pop
inc
pop
dec
arpl
mov
pop
sar
xchg
xor
leave
out
aaa
mov
push
iret
jmp
in
or
mov
aad
insb
emms
call
in
add
pushf
and
loop
push
mov
fbld
cmp
lds
das
xchg
gs
pusha
push
testb
fcmovnbe
push
mov
stc
fisubs
push
out
adc
pop
sti
pop
push
adc
inc
or
jg
insl
icebp
shrb
add
dec
xchg
lret
out
inc
mov
xchg
roll
js
mov
aas
pop
in
cmp
sub
testb
cwtl
mov
inc
sti
sub
decb
xchg
divl
fs
test
mov
dec
mov
rcrl
jno
sub
inc
dec
mov
inc
or
repz
imul
adc
and
pop
adc
inc
mov
sbb
enter
inc
and
addr16
push
pusha
add
loope
aas
sub
dec
jp
add
and
inc
popf
js
mov
popf
sub
repnz
fimuls
inc
mov
push
mov
lcall
jmp
insb
in
addr16
mov
cwtl
into
jl
and
ret
cli
or
out
mov
aad
or
pop
popf
adc
stos
and
es
and
aad
inc
adc
ja
and
loopne
lret
pop
sbb
scas
test
add
mov
and
adc
in
mov
test
or
sarb
jl
in
ss
pop
and
mov
shrl
jle
pop
dec
adc
mov
pop
xor
cli
and
sbb
aas
addl
rol
aam
mov
into
ret
adc
sbb
add
inc
aad
dec
in
sbb
pop
pop
lea
xchg
xchg
adc
mov
push
jmp
push
dec
mov
loop
cmpl
daa
iret
ret
popa
push
lods
stos
js
and
xor
and
loop
adc
fisttps
hlt
insl
mov
lds
push
test
test
nop
ret
lock
jl
xchg
int3
outsl
ljmp
inc
iret
leave
sti
or
popa
xorb
add
and
imul
jl
add
into
cltd
loope
mov
shr
psubusw
in
xchg
cs
push
mov
sub
mov
xchg
icebp
mov
cli
and
mov
mov
rorb
cld
xchg
push
setl
add
mov
mov
and
nop
lret
aaa
dec
cmpsl
out
xor
add
shrb
mov
addr16
jg
inc
push
jmp
loopne
loope
cs
push
aas
bound
mov
jae
aad
push
mov
icebp
fidivs
cmc
mov
and
rorl
popf
iret
xchg
jg
mov
repz
mov
mov
mov
aas
mov
add
adc
push
sti
enter
movsl
popf
inc
rcr
ss
jecxz
popf
mov
mov
imul
push
mov
and
jne
dec
xor
out
add
nop
xchg
mov
cmpsb
repz
loope
inc
ja
rol
incl
in
sub
add
push
mov
jae
rcll
int3
sbb
jns
adcl
pop
mov
dec
sarl
inc
mov
in
dec
cld
unpckhps
pop
lock
lahf
dec
rol
xor
aam
out
flds
pop
addr16
and
pop
mov
insb
fsubrp
jle
cmp
xlat
mov
fcoms
fildl
mov
stos
cwtl
sub
faddp
iret
jg
std
sub
xor
jns
mov
mov
loope
int3
sbb
jge
daa
dec
sub
and
stos
aad
es
cmp
insl
fdivl
pop
jmp
pop
hlt
movl
or
imull
andl
push
test
imul
cmp
enter
and
mov
push
jecxz
pop
sbb
lock
mov
mul
mov
fldcw
and
daa
push
push
pop
imul
jno
mov
xchg
fsubrs
in
xchg
sub
push
sub
inc
xchg
and
inc
cwtl
mov
push
add
xor
add
sbbl
fisttpl
scas
aas
jge
mov
jl
mov
enter
xchg
ret
aas
mov
jo
ss
push
dec
xchg
jb
test
loopne
pushl
pop
sbb
ret
push
pusha
xchg
pop
fiadds
jge
dec
mov
js
push
pushf
xchg
jle
and
mov
das
ja
pop
mov
adc
xchg
cmp
sub
lea
js
hlt
ret
idivb
fldenv
leave
aas
xor
bound
cmp
pop
fnstenv
adc
add
addr16
mov
jo
inc
and
es
cmp
shl
sbb
mov
mov
dec
movsb
cmc
leave
pop
xor
xlat
pop
push
sbb
push
test
daa
daa
lret
out
cmpsb
mov
adc
add
fstl
push
in
sub
sub
jns
cmp
popa
subl
add
aaa
popa
push
shrb
lahf
push
int
or
sub
das
shl
sbb
inc
sub
sub
lds
decb
pop
scas
adc
mov
pmaxub
push
int
cmp
mov
pushl
imul
pop
outsb
imul
pop
add
adc
sub
inc
sbb
ja
ret
dec
insb
cmpsb
cmp
fwait
pop
rcll
jle
push
lock
notb
mov
lcall
in
int3
pop
push
push
and
test
adc
add
push
xor
sub
test
sub
loop
sbb
xchg
fldenv
inc
adc
cmp
mov
test
rorl
sti
xchg
add
sbbb
lods
jns
movsl
adc
ss
pop
subl
mov
mov
adc
jne
pop
sub
into
push
loope
lret
insl
loope
mov
cmpsl
sbb
sbb
mov
fistps
leave
push
jecxz
mov
mov
dec
push
push
xor
jb
out
stc
jecxz
out
and
pop
mov
and
sbb
mov
lea
sbb
adc
xor
add
inc
enter
sarl
add
sbb
movhlps
xchg
or
mov
push
add
cltd
cmp
les
popf
in
xchg
mov
outsl
cmp
lret
jns
fsincos
push
adc
jbe
dec
mov
loopne
xor
leave
xor
daa
add
inc
push
je
or
push
push
imul
lret
sub
mov
daa
repz
jg
or
xchg
xchg
add
jo
pushf
pop
dec
movzbl
sub
loop
inc
mov
aas
dec
aad
cmc
test
pop
cmp
cmpsl
cmpb
cld
nop
arpl
jmp
lds
inc
outsl
and
jecxz
cmpsb
push
incl
out
sbb
dec
cld
scas
imul
clc
cs
inc
mov
mov
lahf
xchg
jno
mov
mov
xchg
test
outsl
leave
into
fs
xchg
test
dec
and
lcall
fdivs
jns
popa
repz
adc
sbb
xchg
mov
aam
das
mov
sub
es
or
jle
jmp
ja
mov
cli
mov
xchg
mov
push
fisubs
stc
imul
and
adc
roll
push
push
decl
add
imul
loop
dec
rolb
inc
xorl
das
out
mov
mov
mov
xchg
das
inc
stc
jb
out
ds
enter
push
js
aad
repnz
xchg
push
push
sub
and
sbb
sub
outsb
pop
add
mov
push
xor
dec
xchg
push
inc
daa
dec
mov
fwait
or
mov
sbb
push
mov
push
add
push
icebp
out
js
insb
sub
icebp
sahf
jae
sbb
sub
pusha
adc
mov
cld
sbb
icebp
cmp
fcomps
push
enter
adc
inc
lods
mov
mov
cmp
mov
push
fcmovnu
xor
mov
aaa
sahf
fs
pop
pop
out
ljmp
mov
scas
pmaxsw
setbe
and
mov
inc
push
cmp
test
pop
jmp
out
stc
fnstcw
cli
sbb
cld
dec
rcrb
loopne
pop
sbb
mov
cmp
mov
xchg
pop
adc
popa
jnp
ja
ficoms
cltd
stos
jne
cmp
pushf
lods
cmp
pop
jb
int3
jne
ds
dec
and
sahf
nop
push
pop
sbb
pop
sbb
shl
cmpsl
xchg
mov
pop
xchg
aam
add
mov
aam
test
repz
cmp
std
dec
ja
adc
iret
mov
pop
lock
fs
mov
js
pop
sbb
fimull
inc
xor
inc
test
lods
mov
fsts
cld
or
iret
into
cmp
stos
daa
addr16
sahf
jb
lret
les
lret
rcll
inc
fs
fsubl
cmp
and
out
push
lcall
push
mov
das
inc
negl
sahf
mov
movsb
mov
xchg
mov
imull
push
and
leave
repnz
inc
pop
mov
iret
sbb
adc
in
mov
push
push
sbb
xor
fildl
clc
cmp
pop
jecxz
push
fwait
cltd
adc
or
inc
rorl
aas
push
ret
cmpsb
xor
idiv
mov
les
adc
or
loop
xorl
stc
pop
xlat
pop
push
cld
out
xchg
inc
ret
inc
shrd
pop
lcall
push
loope
insb
cmp
je
repz
jo
pop
pushf
sub
adc
mov
mov
dec
jns
mov
sbb
fmuls
mov
push
jae
sarl
mov
xchg
cs
jnp
cmc
enter
aaa
stos
mov
xor
or
jae
aas
cmc
in
sbb
and
inc
mov
fsubl
popf
dec
stc
and
int3
xchg
add
sbb
in
xor
mov
aas
xchg
pop
mov
jne
jns
mov
leave
lds
sti
sub
fnsetpm(287
dec
sub
sbb
and
in
lea
in
xchg
ja
push
shl
push
cmp
aad
sbb
dec
mov
addr16
bound
rolb
xchg
or
mov
add
dec
dec
lock
add
xor
sub
or
add
lock
mov
lahf
shlb
push
fldlg2
in
mov
pop
mov
fadds
push
loope
inc
jmp
or
dec
adc
cmp
dec
push
cmp
shll
cmc
xchg
std
lret
mov
jns
sub
imul
push
divl
fwait
dec
add
fcomi
outsl
mov
sbb
jecxz
leave
mov
divl
and
rcll
rol
in
cmp
std
stc
cmp
pop
push
or
lahf
rclb
pop
data16
shl
push
dec
testb
pop
cmp
push
inc
bound
xorb
test
and
pop
mov
faddl
ljmp
and
cmp
inc
push
cwtl
push
push
mov
loop
dec
js
or
inc
test
insl
icebp
push
cmp
andl
or
pop
lcall
sbb
xor
pop
repnz
and
test
nop
imul
mov
xchg
repz
xchg
add
stos
mov
in
and
and
test
sbb
gs
jns
sahf
insb
cmpsb
out
loopne
mov
jp
and
and
ja
xor
bound
pop
ljmp
xor
sahf
lds
call
dec
and
lret
xchg
stc
xor
adc
inc
mov
push
std
pop
jne
lret
push
lahf
inc
mov
sahf
pop
xchg
jnp
dec
jmp
xor
loope
dec
jp
rcll
imul
fcomp
popf
adcl
jle
jmp
mov
mov
sahf
and
enter
subl
scas
fs
repz
jg
data16
pop
fsubs
outsl
dec
jae
xor
jne
shl
mov
inc
adc
dec
push
push
adc
insl
jne
sub
add
sahf
mov
mov
add
scas
push
dec
push
jne
mov
pushf
push
push
mov
sbb
jne
sbb
push
and
sbb
xor
int
into
fldenv
out
cmp
or
xlat
cwtl
repnz
and
or
daa
add
mov
mov
xchg
movsl
lahf
inc
sbb
imul
mov
mov
xorb
cld
sub
sbb
xchg
add
loopne
mov
jns
imul
icebp
das
mov
sbb
xor
lret
cmpsb
sbb
ss
stc
aaa
movsb
mov
xchg
xchg
sub
xor
jbe
out
push
xchg
stos
loop
outsb
xchg
inc
orb
nop
frstor
jmp
mov
out
repnz
lret
loopne,pt
jl
sarb
push
mov
repz
inc
xchg
pop
test
setns
bound
jae
mov
jl
xchg
in
xchg
cmpsb
mov
outsb
push
adc
cmp
push
inc
sbb
push
popf
lods
mov
andb
test
sub
roll
inc
test
scas
push
mov
js
xor
sbb
push
fnstsw
test
adc
jae
in
shrl
mov
push
icebp
popf
cli
fdivs
inc
fdivs
cmp
add
mov
cmp
cmp
jb
xchg
cwtl
pop
push
gs
dec
leave
mov
cmp
add
push
nop
movsl
movsl
lock
cmp
inc
out
ret
dec
mov
scas
pop
mov
cli
xor
test
push
lods
or
lcall
je
sbb
mov
cmp
pop
mov
mov
movsl
pusha
loopne
mov
nopl
movsl
shlb
push
dec
xchg
cmpsl
xchg
mov
jl
cmp
dec
rcrl
push
mov
cmpl
or
lds
mov
jo
push
rorl
aam
push
bound
sub
addl
js
movsb
lea
leave
sti
push
push
inc
cmp
xor
jge
hlt
test
addr16
cmp
adc
add
into
movb
pop
dec
jle
and
push
mov
sbb
mov
push
fidivrl
sbbb
push
dec
ret
mov
fisubrs
imul
cmp
add
shll
mov
xor
inc
push
fneni(8087
inc
aaa
movsb
call
sbb
std
mov
mov
cmpsb
nop
xchg
and
addb
mov
or
xor
call
cmpsb
js
and
dec
push
fisubl
mov
mov
bound
stos
inc
inc
dec
rcll
stos
clc
inc
sub
jge
jnp
rcrl
data16
dec
sub
push
test
in
push
addb
or
mov
hlt
inc
scas
ja
pop
mov
mov
sbb
mov
decl
push
jmp
inc
call
movsl
sbb
mov
push
cmp
shll
push
scas
pop
xchg
enter
insl
xor
cmp
push
das
notb
mov
bound
sbb
xchg
ret
aad
fstpt
ljmp
push
rcr
cld
sbbb
push
jle
xchg
add
xor
jl
cltd
pop
gs
test
call
add
push
jb
or
aam
rorb
into
or
gs
iret
sub
xor
stos
push
out
jne
popa
xchg
jne
jo
dec
xchg
cmpsl
out
cmp
xor
fisttpll
mov
faddp
and
scas
adc
cmc
cli
xor
pushf
movsb
sub
xchg
cmp
test
lcall
rorl
push
call
add
frstor
sub
jae
jecxz
sbb
cmp
icebp
mov
inc
rcrb
insl
enter
xchg
sbb
xor
sub
daa
int3
mov
cwtl
sarl
loope
and
sub
pop
push
sbb
jnp
popa
cs
mov
enter
sub
or
fdivr
jl
push
pop
inc
sahf
insb
and
add
aaa
bound
and
add
cmp
shrl
sub
push
mov
dec
jbe
xchg
es
jle
sbb
inc
mov
adc
in
inc
push
jp
pop
push
out
mov
das
dec
je
cmp
mov
insl
loop
sahf
xchg
add
cmp
imul
scas
jmp
aas
jne
add
ret
stos
jg
sub
dec
cli
mov
sbb
testb
sbb
mov
popl
inc
ds
js
jns
xor
mov
mov
stc
fcoml
xchg
jg
ret
pusha
jle
aam
xchg
aad
and
push
popf
popa
call
leave
outsl
sbb
rorl
or
inc
adc
xchg
roll
pop
fisttps
add
adc
rol
adc
pop
pop
and
add
dec
leave
jo
out
dec
cmp
pop
insl
pop
mov
mov
rolb
outsl
or
xchg
and
push
jge
mov
shr
ljmp
cmp
icebp
mov
das
or
jb
clc
lods
pop
mov
jne
lock
mov
dec
jp
cmp
imul
and
mov
outsb
sub
je
adcl
xchg
outsb
ret
add
insb
cmp
mov
and
jg
testb
stos
jo
sub
mov
dec
mov
push
rolb
dec
or
dec
sub
cmp
jb
push
sqrtps
dec
ss
xor
fwait
jnp
roll
stos
add
mov
repz
jg
sub
clc
sbb
cld
cmpsl
fldcw
cmp
in
mov
mov
ds
sub
das
or
pop
shr
add
cmc
lret
scas
pusha
mov
stc
add
or
aam
inc
je
fdiv
jge
pop
rcrl
lods
inc
test
push
movsl
pop
and
loopne
addr16
cmp
inc
shrl
jle
in
sub
scas
ret
call
std
stos
lods
testb
sbbb
push
sbbl
push
pushf
cmpsb
scas
and
subb
mov
pop
or
fcmove
lcall
out
leave
or
dec
int
jae
xchg
mov
enter
std
add
xor
lcall
enter
jno
aad
imul
dec
jg
mov
aas
out
pop
fsub
stos
nop
cmp
adc
mov
pop
mov
add
popl
insb
and
mov
mov
in
data16
es
in
xchg
mov
imul
sbb
push
gs
and
popf
es
push
movsl
mov
ljmp
jle
andb
imulb
and
cwtl
dec
cmp
ds
xchg
stc
das
daa
loope
cmp
pushf
cmp
fisttpl
inc
jne
dec
stos
shlb
cmpsl
jg
in
mov
xchg
xor
ret
stos
sub
inc
mov
add
addr16
push
aaa
shll
in
jg
mov
shlb
pcmpgtb
cmpl
or
subb
sbb
test
cmp
shrl
xchg
aas
and
lahf
mov
xor
ret
imul
or
inc
xchg
push
add
call
addl
xor
into
mov
test
and
repnz
cli
fwait
mov
roll
pop
sbb
jmp
push
or
sbb
mov
xchg
mov
dec
pop
adc
bound
lahf
aas
sbb
xchg
loope
imul
push
push
int
inc
stc
jp
leave
into
mov
and
add
lds
insl
inc
jmp
and
adc
inc
mov
jae
adc
and
xlat
jae
icebp
sbb
sub
mov
and
inc
in
mov
sti
fistpl
push
mov
push
add
mov
xlat
mov
dec
imulb
rol
out
sub
adc
cld
mov
int3
mov
xlat
mov
fisubrl
mov
insb
in
mov
adc
sub
into
out
test
dec
int
cmpsb
jb
mov
sub
push
mov
dec
sub
shrb
aad
gs
insb
in
das
addr16
push
push
fs
shll
scas
push
push
add
push
dec
pop
xor
jb
and
aas
adc
out
jle
mov
mov
aad
sbb
nop
inc
cmpsb
inc
mov
out
imul
dec
sbb
test
mov
and
xor
mov
add
sbb
fcompl
fcmovnb
push
or
xor
scas
pop
stos
into
jno
fidivl
aaa
outsl
jg
push
out
imul
pop
jb
dec
incl
test
stc
repnz
mov
mov
add
mov
push
xchg
mov
mov
pop
call
movsl
dec
dec
push
adc
jae
mov
xchg
inc
push
mov
mov
repnz
and
push
loop
out
int
sti
mov
fwait
xlat
mov
data16
adc
mov
push
push
std
fcomps
imul
outsb
mov
aam
sub
mov
into
jo
in
leave
fs
jl
sahf
sub
pop
rcrl
into
and
mov
lret
pop
xchg
jmp
fbstp
jno
jne
jmp
fwait
xchg
fimuls
int
add
fs
push
dec
pop
dec
xor
stos
xchg
cwtl
insl
push
cmp
xchg
outsl
and
xchg
push
mov
xchg
out
js
mov
add
out
cmpsb
cmp
fwait
add
das
pop
jl
mov
dec
xchg
pop
ss
daa
call
dec
mov
cmp
or
cltd
mov
inc
leave
sti
mov
nop
stos
hlt
adc
sub
aas
xchg
sbb
push
mov
shr
fwait
in
cmp
and
jmp
push
stos
xor
fwait
mov
insl
push
push
dec
imull
fildl
push
orb
pop
xchg
cmpsb
jle
xchg
jle
and
and
fadds
test
repnz
cs
rolb
movsb
xchg
dec
xor
inc
jecxz
es
test
sarb
cmpsb
hlt
push
xchg
daa
sub
call
stos
xchg
push
pop
fisubrs
dec
imul
call
roll
cwtl
lcall
ljmp
xchg
pop
xchg
mov
xor
xchg
xchg
inc
jp
push
les
pop
adc
imul
or
add
mov
jge
popa
jns
stos
mov
and
notl
fmuls
xor
sub
sub
pop
mov
mov
and
inc
cld
or
loope
sarl
addb
in
push
pop
mov
mov
mov
pop
fwait
test
mov
pop
bnd
add
sbb
rorl
out
inc
dec
mov
inc
rcl
push
mov
sbb
sti
jge
pop
mov
inc
out
dec
pop
into
mov
pop
cld
xchg
test
shrb
pop
arpl
push
inc
repnz
and
into
int3
inc
jge
sub
js
gs
jmp
sbb
or
dec
stos
neg
push
jne
push
out
mov
es
push
cmpl
je
iret
mov
mov
mov
pop
sub
mov
aaa
jnp
sahf
bound
add
mov
les
jno
push
fwait
shl
cld
stos
mov
out
push
xchg
cli
icebp
movsl
in
lds
push
hlt
mov
scas
and
sbb
cltd
pop
pop
inc
xchg
scas
mov
fisubrs
ja
das
inc
insb
fcoml
xor
rcrb
add
jne
lcall
xchg
inc
jg
mov
shlb
rorb
jle
push
mov
scas
into
mov
push
adc
addr16
outsb
mov
shll
imul
int
or
push
mov
fisttpll
and
dec
xchg
imul
xchg
inc
fs
nop
cli
sub
add
sar
and
das
inc
lcall
push
mov
bound
push
aas
sub
or
and
arpl
je
push
bound
sub
mov
push
sub
andb
xchg
fistps
sub
pop
pop
leave
jb
lret
rcr
jnp
xor
loop
pop
and
mov
fstl
clc
inc
mov
add
xchg
mov
sub
mov
ljmp
addb
and
cmp
scas
push
daa
cmp
cmp
mov
mov
rcll
sbb
pop
les
repnz
jae
loopne
imul
hlt
arpl
movsb
cmp
ja
push
xchg
nop
xlat
pop
jge
ljmp
mov
pop
sbb
test
fistpl
pop
pusha
mov
xchg
loope
out
or
pop
inc
loopne
movsl
ret
inc
cmpsb
sbb
push
mov
les
dec
cmpsb
mov
cmp
push
incb
std
sub
mov
adcl
jns
lret
rcrb
stos
push
push
cmp
mov
iret
sahf
jbe
pop
lahf
xchg
sbb
mov
mov
nop
movsl
repz
dec
loope
or
fcmovnu
inc
push
test
mov
ret
aam
or
add
push
lock
and
mov
xor
cltd
cltd
jb
cmp
sub
mov
mov
in
push
filds
xchg
mov
and
daa
stos
repnz
int
add
sub
push
les
in
out
pop
movsl
pop
ffree
pop
in
inc
je
out
mov
pop
out
sub
mov
aas
in
and
lods
mov
sub
aam
or
cltd
repz
mov
lods
mov
jmp
mov
bnd
ljmp
cmpsb
mov
or
clc
push
fadd
hlt
adcl
sub
and
inc
pop
mov
xcrypt-ecb
cmpsl
bswap
or
mov
push
das
loopne
dec
lahf
jns
xchg
arpl
xor
loopne
frstor
arpl
adc
inc
inc
xlat
sub
add
insl
jl
xor
pop
mov
jnp
push
push
add
sbb
popa
and
pushf
xor
xchg
repz
inc
outsl
sbb
dec
xchg
pop
leave
clc
mov
push
inc
in
sbb
cmp
mov
adc
hlt
xor
push
mulb
rcr
mov
out
push
lea
and
dec
addr16
jg
pop
jns
fistpl
jo
call
ret
mov
adc
push
lret
arpl
jge
mov
and
mov
sbb
mov
mov
movsb
psubw
fiaddl
jle
insl
pop
lock
jnp
adc
mov
ja
add
mov
stc
xorl
movb
pushf
sub
sub
sub
mov
mov
jl
popf
dec
dec
add
or
jl
jbe
xchg
pop
jbe
dec
jnp
jns
lock
jl
or
scas
jp
jo
sub
push
js
jo
and
mov
sbb
pusha
test
jns
call
andb
in
pop
lods
scas
xor
repz
ret
or
lcall
je
pop
adcb
inc
nop
push
add
pop
in
out
stc
mov
or
xor
pop
pop
adc
insb
das
sub
aaa
sbb
push
push
adc
push
addr16
out
ret
cmp
ret
push
push
loopne
imull
xchg
shll
loope
les
rorl
clc
dec
lcall
ljmp
mov
shrl
xchg
sbbb
and
pop
mov
in
repnz
fmuls
dec
iret
pop
add
sub
lret
inc
fbld
or
aam
push
cmp
fldcw
loop
loope
cmp
push
and
push
or
mov
sbb
addr16
cltd
movsl
data16
ljmp
sbb
mov
dec
lods
shl
scas
stos
mov
lds
inc
popa
outsb
ljmp
or
jmp
rep
xor
test
pop
icebp
jb
imul
jns
fmulp
pop
pop
or
adc
lock
inc
ds
pusha
scas
arpl
les
push
mov
nop
sub
loop
dec
jo
push
xor
push
adc
xor
sbb
pop
mov
outsb
imul
mov
in
sbb
jno
enter
cmp
shlb
mov
or
pop
sbb
inc
aaa
movsb
and
or
xchg
lods
mov
or
movsb
jg
cli
jg
or
fucomip
or
arpl
aaa
fwait
mov
push
das
in
mov
jmp
ja,pn
mov
dec
jge
mov
les
pop
scas
sub
flds
jmp
adc
enter
xchg
js
stos
jge
pop
out
add
mov
sub
push
clc
mov
jb
imul
aaa
cmp
inc
inc
jns
in
mov
cs
lds
pop
loope
fiadds
and
int
xchg
dec
clc
sub
dec
es
out
aam
mov
lods
xchg
ljmp
test
pop
add
sbb
ret
in
rcrb
and
jmp
adc
inc
int3
subl
push
stc
iret
sbbl
jo
test
dec
fidivl
jb
push
clc
in
jmp
mov
cmc
in
stos
inc
loopne
and
pop
iret
inc
ljmp
sub
cmp
or
or
pminsw
mov
or
mov
sub
push
mov
xchg
xchg
jle
jp
push
inc
mov
push
fwait
test
mov
or
mov
jbe
outsl
adc
xchg
iret
faddp
lods
jg
push
je
push
daa
adc
out
aad
mov
fsubs
mov
inc
push
pop
push
xchg
push
fcmove
cwtl
add
mov
xchg
mov
sbb
mov
pushf
cmp
js
jo
mov
filds
outsl
inc
xchg
mov
cld
enter
cmpsb
fwait
add
mov
test
cmpsb
inc
lock
sbb
cld
mov
sbb
subb
scas
aas
and
cmpsl
imul
pushf
ja
mov
sbb
loope
call
mov
scas
pop
lcall
out
test
fisttps
notl
pop
nop
cmp
repz
mov
aaa
cmp
je
xchg
xor
jbe
sub
shlb
sbb
dec
and
imul
pusha
in
xchg
fmull
lret
sub
cld
add
int
sbb
mov
xor
fisubl
adc
push
inc
push
push
fs
mov
push
mov
dec
jl
mov
mov
mov
xor
aad
sbb
imul
sub
in
pop
shlb
in
subb
xor
aas
stos
push
mov
lret
cmpsl
cs
adc
mov
not
push
dec
sbb
pop
or
xor
cmp
into
out
nop
pop
jae
mov
xchg
xchg
je
sub
jge
jno
sbb
fistpll
out
repz
push
mov
movb
addl
in
add
test
jl
mov
std
clc
hlt
mov
mov
jp
mov
pop
jnp
int
push
xchg
dec
adc
aas
dec
push
and
sahf
mov
push
fldcw
cmc
clc
popa
rcrb
add
sub
leave
inc
pop
push
push
je
fldenv
clc
xor
dec
mov
sub
pop
sub
js
fsubl
mov
pop
cwtl
lea
dec
inc
out
jg
pop
int
cli
push
xchg
in
out
cmp
mov
push
push
xchg
inc
daa
jl
aam
jecxz
adc
xchg
in
mov
add
cmp
adc
mov
mov
ret
push
mov
fisubrl
sbb
add
mov
push
inc
cwtl
push
sbb
add
negb
in
jmp
outsl
and
cwtl
lods
sahf
in
xor
mov
daa
pop
sti
inc
xor
das
adc
fmuls
dec
cmc
sbb
scas
xchg
into
icebp
sbb
xchg
test
push
pushf
and
jnp
adcl
sbb
pop
out
or
inc
inc
mov
out
ret
pop
dec
fs
sbb
mov
lods
mov
insb
outsl
fs
sub
lea
repz
mov
pop
xlat
rcr
nop
incb
mov
adc
and
adc
inc
push
jnp
pop
mov
pop
outsb
pop
and
mov
arpl
aas
loop
xor
xchg
shrl
loopne
movsl
addr16
leave
out
cli
ljmp
xor
push
add
lds
imul
or
rcl
cs
cmp
jae
push
and
dec
mov
mov
popf
adc
or
jb
jge
repz
clc
inc
repz
test
movsb
adc
iret
fcoms
in
add
inc
gs
call
xlat
mov
xor
xchg
xor
loope
jle
ds
dec
xchg
lods
subl
cld
jb
sbb
mov
pusha
xor
cs
mov
mov
ljmp
fmuls
jecxz
mov
sti
insb
mov
or
test
sub
into
xor
sbb
lret
ret
pop
test
cmp
sti
jecxz
dec
ret
add
and
add
add
inc
int3
ficoms
adc
or
insl
mov
and
shlb
jne
and
inc
cmp
mov
mov
xchg
pop
push
cmp
pop
fsin
adc
jo
pop
adc
popf
aaa
cltd
and
add
loope
xorl
imul
stc
mov
mov
dec
sbbb
pushf
testl
out
pop
xchg
out
adc
dec
cmpb
rcll
loop
imul
inc
aas
xchg
jns
jge
or
xor
repnz
aaa
cmp
aaa
test
stos
push
out
inc
into
xchg
lret
mov
or
pop
pop
push
push
xchg
shlb
orb
loope
pop
fwait
jb
jb
xor
jne
enter
rcll
cmpl
lret
in
lock
in
leavew
mov
addr16
xor
adc
insb
add
fcomps
push
mov
push
xchg
add
pushf
jnp
jae
fcmovu
sbb
mov
push
sub
push
mov
outsb
loop
inc
jbe
test
bound
aas
xor
push
fstl
push
shrl
pop
sub
outsb
mov
insl
jae
push
loop
mov
fmuls
sbb
xchg
lock
movsl
movsb
xlat
fucomp
mov
cli
and
add
sarl
xchg
shl
pop
inc
ljmp
and
cmp
nop
rcrl
add
test
fdivl
js
lret
dec
cld
jle
or
jmp
cltd
ret
loope
pop
aaa
in
pop
movsl
dec
fidivrs
fnstsw
mov
lds
testl
clc
jp
jmp
rcr
adc
jge
popa
inc
add
sub
aam
and
adc
push
cs
cmpsl
mov
mov
dec
aas
adc
xchg
sbb
cmpsb
cmc
and
mov
fsubs
stc
dec
xor
je
mov
sbb
and
fs
push
mov
scas
jnp
push
loopne
test
inc
aam
orl
pop
movb
dec
pop
push
xchg
ljmp
outsb
and
dec
les
cmp
mov
hlt
push
xlat
jmp
insb
xlat
mov
stc
mov
ret
jb
popa
aaa
pop
das
cmp
fwait
mov
cld
inc
stos
stos
xchg
sub
in
jl
mov
adc
cmp
mov
rolb
push
rcrb
loopne
mov
jo
sbb
mov
rorb
stos
sub
jae
sub
imul
ficompl
or
movsl
inc
xor
pop
jb
popf
jp
xchg
xor
aad
xchg
xor
push
push
cld
arpl
inc
dec
and
or
xchg
mov
aaa
mov
int3
pop
insb
sub
aas
xor
xchg
int
push
aam
push
adc
jnp
add
cmp
in
xchg
loop
rorl
sbb
pop
mov
sbb
fwait
out
jns
nop
inc
aas
out
mov
repz
xor
push
cltd
mov
adc
call
sbb
mov
cmpb
sub
test
mov
mov
adc
add
es
lret
in
movsb
sbb
cmp
xchg
hlt
mov
inc
imul
add
fcmovbe
fldt
jne
clc
dec
sub
inc
clc
mov
add
dec
or
sub
jae
cmc
cwtl
inc
or
fstp
sbb
pop
int
and
test
pop
inc
sarl
dec
ficompl
adc
sub
xor
icebp
and
sub
pop
push
mov
mov
shrl
decl
in
mov
pop
std
test
xchg
and
aad
jg
bound
movsl
cli
pop
push
loop
mov
es
push
nop
mov
iret
nop
mov
xchg
pushf
cmp
data16
jae
mov
push
mov
rcll
jno
jg
mov
lods
cmp
les
cwtl
adc
orl
cmp
imul
gs
enter
shlb
inc
push
fs
sub
sbb
sbb
fisubrl
adc
push
std
inc
scas
jl
push
jne
mov
push
fs
subb
in
iret
or
jno
inc
sbb
push
push
xchg
lahf
mov
ret
leave
xchg
xor
in
jg
roll
and
lods
mov
clc
adc
ljmp
xchg
and
sbbl
adcl
add
in
jle
mov
xor
pop
mov
js
movb
or
insb
andb
jmp
lods
sub
inc
bound
iret
stc
outsb
in
cltd
fs
mov
pop
jmp
adc
testl
or
mov
lret
movsl
pop
xchg
into
dec
sub
lret
aam
imulb
mov
leave
aad
add
sub
cli
jecxz
push
fdivrl
movntps
sbb
push
mov
push
leave
dec
jge
dec
rclb
lods
jno
enter
mov
adc
jne
xor
ret
in
das
popa
lcall
xchg
sahf
mov
mov
sub
lret
ficompl
cmpsl
jp
int3
push
xchg
cli
jmp
lret
dec
shl
lods
mov
mov
adc
jb
mov
iret
pop
jmp
mov
imul
dec
ja
push
cmpsl
popf
adc
dec
stos
out
ds
incb
xchg
mov
ja
mov
loop
mov
jb
pushf
int
fstl
cmp
jmp
out
and
cmp
mov
mov
mov
ja
sbb
cmp
insb
ret
movsb
rcl
pop
cmp
mov
xchg
xchg
add
test
push
mov
insb
mov
test
dec
mov
mov
repnz
mov
mov
xchg
decb
sbb
out
adc
movsb
mov
lock
and
popf
xchg
and
stos
sub
add
mov
movsb
dec
sbb
jge
and
jno
add
mov
push
xor
test
mov
fcoms
cmp
mov
pop
jge
pop
cli
xchg
push
outsl
mov
stos
sar
movsb
xchg
fldenv
pop
stc
repnz
xchg
sub
push
icebp
js
imul
bound
push
xchg
fisubrl
push
mov
xchg
fisubl
ja
push
ret
push
push
movsl
sti
lods
mov
inc
jne
inc
call
adc
dec
add
test
call
dec
das
dec
adc
nop
adc
loopne
fdivrl
mov
pop
xchg
loop
ret
call
mov
mov
xor
fdivs
ds
and
push
sub
lea
mov
inc
mov
shr
loope
or
jae
mov
mov
sub
fs
or
iret
mov
jmp
or
arpl
icebp
lret
cwtd
insb
pusha
les
fidivrs
adc
mov
mov
jns
add
pop
mov
js
out
add
cltd
sbb
cmp
push
insl
notb
mov
pushf
xchg
xchg
fdivrs
decb
ret
pop
call
and
or
adc
jp
push
cmp
arpl
lret
sbb
push
arpl
inc
iret
repnz
mov
scas
lahf
cmp
jne
add
cmp
lret
jno
dec
mov
jno
lods
sub
shl
mov
aaa
aas
xchg
mov
xor
dec
xchg
pushf
inc
nop
adc
stos
adc
loope
int3
inc
pushf
imul
jl
insl
pop
mov
pushf
mov
push
in
fs
jns
jbe
pop
aad
jae
in
movsl
scas
insl
pop
movsl
sub
jae
mov
xchg
fisttps
lods
mov
push
in
jne
sub
fistpll
stos
std
jo
sar
jle
mov
shl
ljmp
jne
cmpsl
int
std
xor
sub
add
add
leave
push
sub
mov
push
cmp
rcl
ret
lods
xlat
rcll
rcll
daa
mov
sub
fs
mov
push
xorb
mov
jle
push
test
sub
stos
mov
std
dec
addr16
pop
shll
out
inc
aad
mov
push
xor
stos
or
js
adc
push
bound
inc
mov
push
fdivs
scas
in
fs
hlt
push
and
jmp
fists
adc
push
daa
xor
cmp
mov
imul
scas
je
sbb
lea
xor
movl
out
ss
xor
fs
nop
adc
insl
or
sbbb
or
int3
jb
loope
inc
xor
jle
pop
lahf
iret
sbb
adc
push
int
andl
dec
jnp
loopne
std
stos
sti
and
in
add
xor
popf
sbb
bound
xchg
js
hlt
in
sbb
cmpsl
scas
pop
and
adc
sub
inc
hlt
imul
rolb
stc
or
aaa
mov
cmp
sbbl
jbe
in
das
icebp
push
insb
daa
jb
xchg
sbb
add
sbb
push
mov
loope
dec
int3
sub
push
scas
fadds
and
jmp
push
pop
lods
test
aad
andl
xor
jnp
mov
sbb
push
add
inc
inc
cmpsb
xchg
mov
icebp
xchg
xor
jb
test
add
xor
lret
cmp
iret
rcrb
pop
fdivl
adc
insb
sbb
pop
mov
mov
data16
pushf
dec
dec
or
pop
mov
cmpsb
dec
mov
push
jae
enter
sahf
mov
sbb
in
mov
dec
cmpl
lcall
fs
jbe
jbe
sbb
repnz
sbb
lret
sarl
push
je
pop
cmpsb
mov
inc
stc
iret
cmc
push
lds
mov
ljmp
or
std
cmpsb
mov
sub
sbb
jb
pop
jg
dec
test
sbb
push
or
xchg
mov
pop
sbb
cmpsb
inc
and
sub
in
mov
pop
shrl
ret
aaa
cmp
outsb
jns
pop
mov
mov
ljmp
jle
jne
lret
sub
xor
inc
arpl
sub
cli
in
inc
mov
mov
and
jle
mov
adc
lahf
xchg
jle
loope
mov
jo
fists
pop
xor
jp
lods
andb
add
inc
cmp
adc
mov
cmp
stos
mov
mov
xor
sub
stc
mov
fisttps
ljmp
xchg
adc
add
jne
in
or
outsb
adc
mov
insb
sbb
inc
mov
int3
mov
subb
xlat
cld
rorb
mov
mov
mov
or
in
push
cmp
mov
lahf
addl
pop
mov
xor
fs
inc
xchg
movsl
jmp
and
arpl
int3
sbb
jge
lds
shl
pop
adc
inc
out
sbb
mov
cltd
orb
push
ret
sbb
icebp
arpl
aaa
pop
jmp
mov
mov
and
mulb
pop
cmp
mov
pop
sbbl
dec
xor
push
int3
mov
nop
cmp
mov
sub
fmull
xchg
fcmove
adc
movsb
mov
aaa
sbb
aam
cmp
stos
mov
ja
ljmp
dec
movsb
mov
sub
sbb
jmp
push
inc
dec
js
or
aam
clc
jge
mov
out
mov
loop
and
sbb
scas
arpl
jno
xchg
lret
fbstp
lret
rorl
and
hlt
int
std
sahf
bound
mov
or
in
sbb
loop
shll
out
pushf
ja
mov
xor
pusha
sti
cmpsb
mov
mov
lods
adcb
mov
push
test
xlat
push
mov
mov
lret
push
cltd
aam
sub
mov
or
inc
icebp
jbe
sbb
adc
xchg
add
popf
pop
mov
mov
push
pop
push
xor
xor
cmp
mov
mov
push
fidivl
jmp
and
mov
scas
and
sbb
inc
sub
sbb
ss
xlat
mov
lock
cmp
lahf
pop
add
push
sbb
add
ficoms
scas
addr16
int3
insb
cmp
sbb
jle
into
xchg
jmp
aas
es
jne
sub
push
rcr
loope
andl
sbb
adc
add
adc
test
js
xor
jecxz
adc
push
test
call
int3
dec
xchg
in
fisttpl
inc
dec
sub
out
lea
mov
fwait
and
or
xor
aad
adc
dec
inc
inc
mov
int3
adc
jg
push
jns
stos
mov
cmp
sbb
pop
enter
push
in
push
add
out
int
lret
div
mov
aas
push
jg
out
jnp
in
ret
cmp
pop
sub
cmp
loopne
jmp
das
addl
aam
xchg
fidivrs
xchg
jno
into
js
jb
mov
jecxz
fcom
aas
stc
shrl
xor
call
jmp
add
rorl
in
push
adc
rcrl
leave
sub
jbe
xor
dec
cmp
cmp
cltd
mov
repnz
adcb
cmp
out
cmp
mov
push
ret
inc
adc
rorl
mov
sub
jmp
ss
fdiv
pop
cmp
xor
ja
adc
fiaddl
jl
sbb
es
mov
push
pop
jne
ret
fbld
and
push
repnz
add
push
cmpsb
inc
test
push
mov
jo
pop
ss
and
std
add
scas
aas
jmp
dec
ret
out
inc
popa
push
push
adc
mov
push
pop
and
fdivl
xor
xchg
dec
cltd
das
xor
leave
lods
inc
das
shll
pop
inc
iret
inc
jns
inc
push
stc
adc
movsl
xor
stos
bound
pop
shrb
shlb
xor
into
mov
sti
filds
mov
inc
mov
movsl
arpl
lcall
lret
fs
cmp
or
cli
xor
shlb
into
ljmp
push
sbb
dec
jb
lcall
cwtl
js
add
mov
int3
xchg
dec
sahf
xchg
mov
movsb
pop
pop
lods
pop
push
dec
cmp
xor
pop
iret
jge
push
sub
xor
cmp
sti
jb
mov
and
icebp
and
insb
sbb
aas
dec
loope
mov
lcall
loopne
adc
flds
sbb
dec
inc
mov
push
lea
xchg
mov
jmp
lds
in
sbb
cli
int3
and
sub
inc
cmp
inc
adc
mov
push
jbe
adc
std
mov
test
outsl
loop
mov
mov
stc
or
dec
mov
rclb
cmp
sub
pop
iret
sub
es
aaa
xchg
iret
jmp
jge
add
push
mov
mov
dec
mov
popf
push
dec
sub
lea
lret
aad
lds
dec
xchg
push
inc
shlb
mov
test
mov
push
push
lcall
xchg
aad
fsubs
jl
cmp
lahf
ficoms
das
cmc
fs
sub
fs
inc
adc
mov
imul
mov
out
jo
xor
lret
shrb
pop
xchg
es
cld
jb
sarl
add
clc
push
jl
clc
fcompl
stos
cmp
jmp
leave
hlt
rorl
sbb
xor
jmp
cmpsb
fsts
je
aas
dec
or
mov
adc
jmp
cwtl
sbb
cmp
in
not
ret
mov
mov
dec
adc
adc
sub
dec
scas
dec
ret
loopne
out
mov
adc
loop
dec
inc
nop
ret
xor
mov
inc
xchg
repz
rclb
int
fwait
lods
dec
out
mov
ss
cs
jge
mov
adc
repnz
decl
int3
icebp
inc
cld
mov
ja
iret
adc
pop
das
lret
das
sarb
lock
push
mov
addl
imul
sub
repnz
mov
aad
fldenv
lds
je
push
shl
pushf
subb
lock
cmp
cld
mov
repz
or
das
mov
xor
xchg
insb
inc
pop
shll
and
fcomi
rclb
ret
sbb
fmull
mov
xor
repnz
outsb
push
movsl
addr16
add
mov
cld
mov
jg
cmpsb
dec
cmp
add
in
adc
jo
stos
or
daa
cmpsb
jmp
mov
loope
ja
cmp
je
mov
push
dec
cmp
shll
shr
outsb
inc
sub
push
lret
aad
shl
jl
push
mov
insb
jmp
call
lret
adc
jg
jns
pop
lods
inc
cmc
xchg
dec
xlat
test
decb
mov
je
xor
repnz
inc
aad
mov
movsl
push
and
add
and
repz
sbb
mov
loop
push
cmp
loop
stos
mov
sbb
jl
and
mov
adc
jno
pop
mov
fs
fstpl
aad
rorl
icebp
daa
jb
in
push
movsb
mov
loop
jbe
icebp
cmp
cmpsl
lret
scas
call
loopne
lds
mov
test
cmp
sub
andl
in
sarb
xchg
subb
cld
out
sub
add
mov
test
dec
xchg
dec
adc
shrl
aad
pop
mov
mov
ret
add
daa
lods
dec
cmp
push
leave
cmp
loope
push
pushf
add
insb
and
popf
jo
into
xor
mov
pop
js
inc
xchg
xchg
xchg
push
mov
loopne
aaa
jno
jp
fdivrs
push
repnz
les
cltd
sbb
fisubl
jmp
xchg
clc
std
sbb
lods
mov
repnz
dec
es
xor
lea
pop
cmp
insl
lcall
cmp
push
cmp
ljmp
cmc
fs
mov
inc
mov
leave
fcmovbe
mov
sbb
pop
add
iret
mov
pop
push
cltd
scas
jb
cmp
out
push
dec
pop
outsl
adc
loopne
xchg
daa
lret
xor
push
int
mov
outsl
mov
push
mov
out
fcompl
pop
rcrl
or
push
push
mov
mov
dec
shrb
sub
sahf
repz
add
or
rclb
movsb
out
xchg
mov
push
fiadds
jl
dec
out
xchg
outsb
inc
notb
sbb
int3
out
rcrb
inc
divl
in
pop
mov
hlt
jae
push
sbb
mov
mov
xor
out
movsl
test
sub
xchg
orl
xchg
std
fs
js
mov
out
xchg
andb
popa
sbb
jno
rclb
mov
inc
inc
mov
cmp
or
mov
popa
lock
loope
ror
push
iret
andl
out
insl
inc
mov
adc
cmp
push
sbb
dec
aad
stos
lds
jmp
fisttpl
add
cmpb
pop
stos
fisttps
aam
jmp
push
mov
pop
daa
fldenv
jp
repz
mov
cs
and
daa
or
arpl
inc
mov
cmpl
sub
mov
pop
push
ss
sbb
mov
lret
fstps
sub
sahf
js
in
outsb
mov
xor
shll
jno
js
mov
call
leave
dec
push
sbb
loope
add
jmp
pop
cmc
fldl
xchg
jecxz
xlat
xchg
mov
mov
leave
mov
dec
jns
jbe
push
daa
sbb
pop
shrl
adc
data16
test
stos
cltd
fcomps
lods
sbb
test
mov
nop
mov
mov
daa
inc
nop
xlat
xchg
push
pop
jecxz
imul
jecxz
sub
or
stc
fsubrs
jb
dec
cli
cmp
mov
or
ret
lcall
leave
mov
das
repz
shl
and
cli
cmp
mov
sub
inc
icebp
loopne
insl
mov
mov
mov
cmp
aas
and
aam
jnp
fidivrl
xchg
cmp
das
hlt
mov
cmp
pop
outsl
jno
lods
lahf
pop
ret
dec
lcall
add
dec
pop
dec
in
fbstp
sub
pop
inc
mov
outsb
js
jbe
sbb
push
xor
lret
nop
bound
call
test
xor
jecxz
in
cld
xlat
mov
add
stos
sbb
mov
mov
pop
out
fwait
xchg
jge
mov
adc
and
fsubrl
fisubrl
sbb
in
std
and
cltd
cltd
arpl
cmp
repz
push
adc
xchg
sub
ret
and
cltd
xchg
jp
mov
aas
cwtl
push
sbb
xor
push
mov
lret
sub
mov
stc
out
lret
scas
into
jbe
adc
push
ret
sbb
add
xchg
aam
scas
pop
popf
or
lods
lret
je
pop
nop
daa
jnp
ror
xchg
loope
test
aam
fwait
testl
mov
jle
mov
js
mov
cmpsl
loop
rcrl
rolb
jg
push
dec
mov
pop
popa
orl
icebp
ficompl
xchg
add
mov
test
add
add
gs
or
sub
loopne
shlb
mov
add
ss
ret
dec
dec
sbb
cltd
aas
cltd
scas
and
test
insl
leave
shrl
xchg
cwtl
push
fbld
push
xchg
sbb
ljmp
push
cmp
stos
adcl
mov
mov
popa
pop
push
dec
and
popa
inc
js
xchg
scas
lods
push
stos
push
das
test
cli
adc
push
int3
mov
inc
jnp
cmp
and
push
fwait
lret
rclb
sarl
inc
cld
aad
ja
shll
pop
ss
push
nop
dec
pop
rcr
dec
movsb
repz
xchg
mov
outsb
inc
jae
movsb
cmp
adc
inc
arpl
add
bnd
pushf
mov
cmp
pop
mov
int
mov
or
push
or
fisttpl
pushf
aas
cmp
pop
aaa
jo
xchg
mov
fistps
dec
in
ds
jecxz
dec
inc
jae
jge
lods
pop
dec
or
adc
xchg
arpl
das
es
pop
jmp
mov
call
jno
cld
out
cwtl
mov
gs
outsl
jp
xchg
and
push
mov
adc
mov
mov
xchg
gs
pop
test
sahf
dec
inc
push
cli
jmp
sbb
lcall
jge
mov
and
test
lods
push
jbe
and
jecxz
mov
xchg
pop
xor
xlat
mov
ja
sub
mov
jmp
mov
ret
cmp
jg
lahf
push
pop
repz
xchg
jo
out
movsb
sbb
sahf
jecxz
ljmp
test
ret
mov
and
push
sbb
sbb
fadds
dec
out
pop
lods
mov
lock
nop
mov
mov
lock
aaa
xchg
lea
test
notl
sbb
dec
adc
scas
mov
mov
mov
push
mov
movsl
jo
fnstcw
xchg
sbb
lods
incb
js
jns
out
repz
divl
lods
push
ret
pop
xchg
out
movsl
pop
or
pop
pop
scas
in
movl
push
jo
and
fs
add
pusha
leave
int
inc
inc
neg
xor
push
inc
or
test
lods
mov
push
xchg
mov
divb
or
jl
int3
adc
sub
in
inc
push
out
leave
fisubrl
sub
outsl
repnz
cltd
inc
cmp
jne
pop
fdivs
jp
popf
in
incl
xchg
adc
inc
popa
ljmp
mov
dec
sub
je
popf
pop
mov
leave
mov
add
fsubrs
pop
out
mov
dec
mov
aad
jge
loopne
mov
sti
ret
pop
mov
xorl
xchg
das
xor
lret
arpl
adc
adc
popf
ret
out
mov
pop
sbb
mov
adc
adc
mov
hlt
xor
int
xchg
fcmove
add
push
sahf
push
cs
fmuls
scas
dec
jp
add
fsubrs
iret
jge
mov
out
das
and
adc
add
je
mov
insl
xchg
jb
pop
ljmp
pop
movsl
sarb
sub
mov
int
inc
jne
mov
lcall
mov
test
mov
aad
and
js
mov
lret
mov
in
mov
sbb
add
inc
cwtl
in
and
nop
mov
iret
pop
pusha
add
jp
cmc
xor
nop
jecxz
cli
mov
in
mov
mov
jg
mov
imul
icebp
pop
add
ret
jae
push
movsb
inc
repnz
ljmp
pop
xchg
movsb
inc
push
lret
cltd
adc
push
lahf
dec
dec
ljmp
das
ds
loop
dec
sbb
dec
test
out
mov
jb
inc
cmp
aas
movsb
andl
ja
mov
pop
pop
jp
push
push
mov
popw
fcomps
mov
into
popf
sarb
push
fs
dec
arpl
mov
mov
sarb
jge
mov
sub
fsubrl
aad
mov
out
hlt
mov
mov
or
xor
movsb
push
test
nop
sub
js
and
fcomi
pop
inc
cmp
movsb
lea
pop
repz
or
add
mov
ss
mov
or
imul
push
aaa
add
fimull
cs
sti
rorl
pop
repnz
sub
hlt
or
test
sbb
dec
daa
fdivs
mov
pusha
pop
cmp
fwait
mov
xor
sub
jo
dec
lcall
xchg
add
add
lds
into
add
pop
push
push
not
xor
xor
add
cmp
mov
cmpsb
mov
sbb
aaa
pop
add
xchg
push
sub
cmp
aaa
jmp
pop
sbb
icebp
dec
push
shlb
lahf
or
std
and
leave
or
ss
pop
in
fidivl
rcr
outsl
add
mov
incl
aad
xor
add
das
push
in
call
sti
or
inc
fidivs
sbb
movsl
sbb
daa
sbb
inc
adc
sub
ret
stos
jb
inc
or
imul
mov
xor
aaa
stos
push
pop
add
sbb
loopne
or
call
out
scas
cmp
test
call
out
movaps
pop
add
dec
push
mov
cmp
popf
cmpsl
sbb
add
cmp
in
fsubrl
jl
daa
rorb
mov
mov
inc
cmp
mov
push
popa
test
push
icebp
mov
test
push
pop
loop
mov
inc
xchg
inc
je
push
push
dec
repz
xchg
fmuls
pusha
test
arpl
test
fimull
jp
jae
or
add
mov
and
adc
xchg
xchg
push
adc
mov
es
ljmp
mov
sbb
xchg
pop
pop
pop
mov
xchg
mov
add
push
sbb
dec
pushf
imul
adc
idiv
fstpl
push
pop
data16
jno
fdivl
xchg
adc
sub
and
pop
clc
lret
cld
jns
pop
loope
shl
sbb
mov
cmpsb
cmp
jmp
push
and
in
stos
pushf
lock
sarl
std
loop
sti
scas
pop
test
mov
and
adc
outsb
out
loopne
pop
and
daa
or
push
jbe
icebp
fwait
push
ret
loop
push
or
mov
cmpsb
mov
push
xor
xchg
mov
sub
mov
push
popf
fstps
divl
jmp
nop
aam
orb
jl
out
repnz
es
jmp
jl
loop
les
daa
add
mov
pop
push
inc
inc
popf
mov
xlat
inc
add
mov
cli
inc
dec
cwtl
icebp
cmc
sbb
cmp
cmc
jnp
xor
jne
xor
jmp
jne
pop
sub
push
and
in
loopne
negl
loop
clc
push
mov
cmp
mov
mov
lods
int3
mov
sbb
push
test
pop
das
test
cld
stc
cwtl
jnp
into
or
lahf
mov
rcll
push
or
pop
xchg
mov
mov
inc
dec
xchg
fstl
push
push
lahf
add
mov
ljmp
push
xor
jl
cmp
sbb
addr16
xor
adc
pop
adc
mov
cld
xlat
fwait
cmp
cwtl
pop
dec
push
mov
lock
lods
lcall
test
pop
mov
pop
adc
fsubs
cli
cmc
cmp
shll
rcrl
ss
or
sbb
pop
jmp
add
dec
add
pop
sbb
in
cmp
sub
popa
push
insb
popa
mov
sub
pop
ja
js
or
fmul
test
mov
adc
into
adc
jb
clc
fmuls
cwtl
jbe
outsb
aam
cmp
xchg
push
add
cmp
jle
xchg
das
xchg
pop
dec
mov
shl
jp
dec
je
inc
adc
ret
dec
mov
pop
lea
add
xchg
jp
jl
jl
adc
std
sub
iret
cli
sahf
and
xor
cmovo
xchg
cltd
ret
dec
sbb
jecxz
mov
pusha
cmc
pop
test
xor
push
push
addr16
filds
sub
sub
shlb
js
fucomi
xchg
cmp
cli
shll
in
in
push
movsl
or
ret
sbb
dec
mov
sub
push
cmp
hlt
jb
das
or
jecxz
xor
bound
daa
mov
xchg
repz
lods
pusha
dec
mov
dec
inc
adc
xchg
sti
stos
ja
addl
push
test
push
mov
and
xchg
cmpsl
push
xorl
hlt
fcmovnbe
adc
fcmovnu
inc
lret
pop
add
dec
shrb
fwait
leave
pop
lds
cltd
jo
mov
push
sbb
pop
push
sbb
in
pop
fs
mov
int
aas
hlt
xchg
jo
jge
daa
sbb
push
add
and
pop
cli
sbb
icebp
shll
int3
xor
rcr
insl
cmc
sti
pop
mul
repz
sti
mov
rcll
pop
cmc
mov
mov
adc
pop
mov
fists
lcall
rcll
pop
bound
pop
loopne
gs
test
cmpsb
push
jbe
jne
aas
mov
adc
into
jp
ja
mov
dec
cmp
push
cmp
pop
lock
push
mov
imul
repz
cltd
arpl
lods
jnp
int3
daa
sub
movsb
hlt
inc
xchg
inc
cs
fucomi
xchg
xchg
push
popa
loope
rcll
lock
stos
sub
xchg
insl
js
es
pop
test
sbb
sbb
pop
insl
xlat
in
or
jae
mov
cli
xor
sub
sbb
mov
pop
jecxz
inc
orl
imul
sbbl
test
xor
dec
mov
outsl
cmpsl
lods
fsubrp
outsl
rcrl
dec
xor
adc
lret
pop
lds
fidivs
jne
mov
sub
and
or
sbb
mov
mov
mov
adc
divl
iret
mov
mov
pop
rclb
push
popa
sub
sbbl
xchg
aas
int
outsb
or
xor
mov
insl
xchg
mov
es
push
xchg
ret
adc
leave
dec
or
mov
idivb
lods
xchg
add
rcrb
sub
std
inc
or
jo
xor
xchg
imul
and
mov
movb
jns
jo
cmp
cmc
popa
mov
lret
shrb
negb
or
sbbb
and
mov
xor
cmpsb
sti
jmp
push
cmp
lret
or
sub
mov
jae
push
test
notb
cli
sbb
sub
dec
out
jp
sbb
xchg
mov
mov
lods
pop
ret
or
xchg
in
push
into
add
sub
int
jne
fisubrl
mov
jo
cltd
insb
fistpll
rcrl
loop
lds
outsb
add
out
aas
dec
movsb
pushf
pop
jge
sub
insb
mov
enter
mov
dec
sahf
pop
arpl
xor
loopne
mov
scas
pusha
mov
mov
mov
dec
shlb
mov
jle
sbb
dec
sbb
push
lcall
sub
arpl
xchg
lret
inc
out
adc
xor
or
test
dec
sbb
dec
or
je
imul
out
test
outsl
popa
mov
sub
inc
mov
jg
sub
test
popa
jle
xchg
and
mov
mov
adc
loope
xchg
jae
mov
xchg
inc
dec
mov
pop
dec
dec
xor
sbb
xor
mov
push
fsubrs
dec
mov
inc
mov
mov
push
mov
dec
sub
loopne
mull
stos
fildl
add
adc
cs
or
xchg
mov
das
leave
in
in
sahf
outsb
pushf
dec
dec
xorl
sahf
xchg
push
pop
cltd
xchg
gs
inc
mov
fisttpl
outsb
cmpsb
out
cli
lahf
shlb
pop
add
lods
mov
dec
loop
add
cmp
and
dec
adc
fadds
mov
push
pop
cmpsb
sbb
fwait
xchg
sbb
cmp
sbb
mov
jg
xchg
int3
push
jg
cltd
mov
enter
cmpsl
pop
scas
movsb
test
pushf
dec
icebp
jno
cmp
mov
loope
inc
fsts
xchg
shll
insl
mov
pop
not
xchg
call
mov
sti
inc
adc
icebp
decl
xor
dec
fwait
divl
sub
std
xchg
lock
mov
xchg
mov
adc
push
xchg
mov
hlt
mov
ret
fwait
fs
aad
movsl
pushfw
or
mov
mov
mov
jmp
mov
xchg
xchg
add
xchg
dec
clc
jno
lods
stc
cs
cmp
xor
jmp
mov
idiv
pop
jg
xor
out
xchg
jp
nop
insb
pop
fidivrs
push
aam
out
jp
loop
adc
lods
cwtl
cwtl
push
lds
je
out
aam
cmp
fdiv
scas
adc
sbbb
loop
jg
movsb
out
call
and
scas
sbb
mov
mov
insb
cmp
outsb
call
mov
sbb
pushf
jecxz
movsl
and
arpl
dec
faddl
pop
mov
inc
mov
inc
xchg
sbb
add
cwtl
sbb
pusha
pusha
inc
lock
adc
scas
pop
iret
and
jb
jno
push
push
jp
xchg
nop
add
xchg
inc
or
push
pop
push
lcall
mov
cmp
sub
mov
and
fcmovnb
repnz
adc
or
cltd
cs
dec
stos
in
sbb
ret
in
cli
and
outsl
out
ret
dec
out
push
test
jbe
ljmp
std
popa
mov
mov
insl
mov
movsb
jmp
dec
jnp
pop
mov
in
rol
dec
xchg
test
and
scas
lea
shrl
xchg
cld
jecxz
xlat
fidivrs
in
mov
std
fistpll
jb
in
hlt
inc
cmc
inc
incl
pop
adc
out
push
outsb
int
pop
out
sbbl
cmpsb
les
js
stos
or
jmp
inc
mov
and
pop
pop
mov
lret
cli
jmp
dec
arpl
sub
lcall
add
insb
mov
js
ljmp
arpl
inc
cmc
shrl
imul
add
jae
sbb
mov
adc
xchg
mov
cmpsb
mov
jecxz
and
pop
xchg
stos
or
jmp
aad
ljmp
dec
mov
jecxz
scas
and
incb
or
jno
mov
in
repz
and
sbb
mov
imul
sbb
add
add
pop
mov
rcr
adc
scas
jo
cmp
pop
pop
push
mov
xchg
ss
cmp
pusha
add
mov
test
jbe
inc
ja
leave
ja
insb
inc
mov
pop
inc
mov
mov
pushf
pop
or
and
loope
or
fistl
jno
cmp
sub
xlat
aam
outsb
sub
cltd
fsub
mov
push
sub
mov
hlt
mov
push
outsl
mov
mov
in
jg
pop
mov
or
mov
lret
push
sahf
stos
out
add
lea
cmp
jecxz
idivb
and
mov
inc
xchg
fwait
inc
imul
adc
adc
adc
jl
or
xchg
stos
stc
jecxz
test
jo
inc
jno
clc
cmc
dec
adc
adc
or
das
scas
sub
xor
shll
inc
pop
add
add
jmp
insl
cli
xorb
aaa
xor
addb
outsb
adcb
xor
cmp
cmp
push
mov
std
sub
shl
jg
and
and
pop
add
rsm
data16
insb
sub
mov
addr16
insb
push
aad
sub
jmp
dec
xchg
jns
ljmp
fisttpll
pushf
jp
cmp
fistps
and
cmp
lock
outsb
xchg
pop
pop
mov
pop
into
data16
cmp
test
iret
mov
imul
sbb
sub
jae
test
rorb
pusha
xor
sbb
mov
test
xchg
rcl
push
sbb
clc
out
or
loop
mov
ret
and
hlt
cmpsb
xchg
inc
xchg
lock
cmp
cmp
fiaddl
xorl
inc
push
sbb
and
sti
lcall
out
sub
push
fcmovbe
inc
stc
js
out
jle
sbb
fisubrs
in
fidivrl
das
mov
mov
cmpsl
movsb
sub
rcrb
out
sbb
dec
xchg
cmp
and
mov
inc
mov
movsl
lock
ret
lahf
lret
imull
adc
mov
loop
add
mov
aam
mov
inc
xor
lock
aaa
loope
xchg
and
cmp
adc
dec
cld
mov
test
mov
out
movsb
rorl
cmpb
outsl
push
lret
in
jb
cmp
dec
cmpsb
in
xor
mov
out
popa
dec
stos
pop
repnz
or
pop
les
inc
bound
mov
cwtl
aaa
rorl
and
inc
pop
pop
dec
adc
dec
push
sub
movsl
adc
sbb
leave
and
cmovle
fstpl
mov
cs
dec
pop
sbb
movsb
sbb
imul
and
mov
xchg
or
jbe
fildll
ret
mov
fs
aas
add
cs
sarb
xchg
cmc
sub
xor
stos
sub
add
repnz
cmpsb
mov
test
insl
push
aad
adc
pop
mov
nop
jg
int
fwait
sub
adc
mov
mov
rcll
cmp
mov
mov
push
adc
iret
rcll
pop
xchg
mov
outsb
adc
adcl
push
or
add
shrb
jmp
cmp
lds
scas
inc
cmp
push
jge
jae
cmp
subl
mov
pop
pop
fisubl
mov
icebp
xchg
repnz
loop
xchg
sbb
lods
mov
outsb
pop
xchg
mov
mov
stos
jmp
xor
sub
shr
dec
or
and
pop
dec
fistpl
or
mov
pop
sbb
sub
pop
adc
ljmp
push
push
push
gs
aas
mov
in
xchg
and
fldl
sti
adcb
jne
push
mov
out
cmp
add
push
es
fisttps
sbb
jle
scas
std
or
adc
push
sbb
loope
adc
xor
push
sub
or
ret
push
test
cmpsb
int
cwtl
sbb
pop
je
repz
push
out
mov
adc
pop
adc
xchg
adc
sti
movups
test
jmp
or
scas
aas
pop
xor
ljmp
dec
and
arpl
adc
pusha
or
cmc
add
sub
push
cmpsb
xchg
adc
add
jns
andl
lock
sub
mov
in
add
cmpsl
pop
cmpsl
adc
jb
push
and
cli
dec
mov
movsb
mov
push
leave
movsl
repz
sbb
and
popa
pop
cltd
cs
ds
push
or
jne
jnp
push
dec
shlb
sbb
jmp
insb
inc
jnp
outsl
xchg
cwtl
repnz
je
sarb
and
cli
jl
mov
mov
popa
dec
ds
inc
cltd
gs
pop
insl
out
sti
cmp
pop
push
rorb
mov
repnz
sub
enter
popa
nop
aas
mov
pop
mov
xchg
mov
push
stos
popa
dec
push
add
jp
pop
add
push
out
lods
cltd
stos
insb
sbb
fs
lock
mov
pop
mov
lret
lcall
lods
lea
stc
xchg
mov
ret
push
outsl
pop
fcomps
sbb
adc
or
mov
jp
xchg
dec
or
add
scas
mov
dec
push
and
push
in
sahf
sti
and
arpl
xlat
xrelease
in
ret
xchg
or
into
dec
sti
fildl
pop
and
divb
lods
popf
mov
popa
push
hlt
repz
cmp
and
les
push
mov
inc
push
call
scas
lods
xchg
icebp
enter
shll
and
sbb
popa
pop
mov
lds
cmp
mov
mov
and
outsl
sti
int
arpl
je
pop
inc
ret
push
idiv
js
call
inc
and
sub
sbb
cltd
loop
arpl
jg
mov
enter
xchg
imul
pop
sti
or
sbb
dec
mov
in
or
rorl
in
mov
mov
pop
xorl
ja
cmp
or
jl
dec
mov
cmpsl
mov
rorl
inc
shrb
sbb
mov
loopne
inc
mov
mov
outsl
mov
sar
xchg
dec
mulb
push
hlt
pop
subl
lret
rcrl
scas
je
movsl
leave
push
lds
sbb
adc
nop
dec
xchg
out
jns
xor
dec
jb
inc
dec
mov
xchg
shrb
jmp
jl
and
mov
mov
sub
out
push
scas
rcl
fdivs
fwait
mov
test
test
cmc
cmc
mov
push
scas
xchg
hlt
jns
mov
dec
xchg
xchg
add
in
cmp
cmc
sbb
leave
dec
cmc
mov
or
push
subb
cmpsb
jecxz
ja
add
inc
subb
lea
bound
pop
or
dec
mov
push
fbstp
movsb
or
pop
in
fldcw
stc
les
rclb
mov
enter
add
cmp
push
insl
aad
xchg
ja
xorl
xchg
stc
pusha
je
xchg
and
and
jmp
push
adcl
shll
movsl
and
xchg
lret
lods
adc
lret
push
xchg
xchg
sbb
adc
pop
sub
sbb
or
mov
fcmovnu
xor
negb
inc
insb
adc
jmp
adc
loop
adc
or
mov
pop
stos
rol
bswap
dec
pop
call
xor
jg
ja
xchg
lods
nop
jno
out
xchg
stc
dec
mov
adc
pop
dec
vpor
movsl
mov
stc
pop
das
loop
push
fs
mov
mov
lahf
js
dec
test
xor
fwait
xchg
mov
fisttpl
movsb
mov
push
insb
xchg
imul
repnz
rorb
dec
lcall
jl
xchg
lahf
fiadds
ss
mov
pop
mov
jp
jns
jno
movsl
and
imul
jp
fcoms
js
icebp
insl
sub
xchg
mov
xchg
mov
xchg
add
shlb
movsl
lds
daa
test
jecxz
add
ja
in
out
into
xor
xor
icebp
dec
or
mov
pusha
stos
fcmovu
mov
or
setnp
sub
test
pop
pop
fistpll
int3
jmp
cmp
pop
iret
inc
jle
mov
aaa
mov
push
cmpsl
jmp
movsl
fldenv
ss
xor
loope
xor
sub
push
shll
pop
lods
add
mov
sbb
jb
loop
mov
lret
jecxz
pusha
gs
ljmp
inc
scas
dec
xor
push
loopne
ret
insb
aad
cmp
jo
push
dec
aaa
push
cli
shrb
pop
jg
pop
adc
sarl
fwait
sub
ljmp
lahf
mov
jl
shll
mov
imul
rol
cmp
imul
loope
leave
add
cmp
jae
mov
imul
and
mov
push
fisubrl
iret
jbe
imul
test
out
std
fstpt
aaa
lret
jae
jp
mov
lods
add
sbb
adc
sub
in
inc
das
pop
and
mov
xchg
insl
sbb
lods
sbb
sbbb
sub
leave
jge
stos
xor
pusha
std
xor
ds
or
stos
repnz
lcall
lods
lret
stos
dec
and
cmp
imul
sahf
cmp
jb
mov
cli
add
jo
aas
in
mov
xor
stos
mov
cmp
ret
mov
andl
pusha
xchg
mov
mov
icebp
or
scas
cmp
xchg
movsl
jne
notl
push
sbb
cwtl
popa
mov
or
std
call
shll
sti
js
repnz
pop
add
push
arpl
roll
js
jge
cli
es
cld
adc
push
inc
pop
outsl
push
adc
mov
rcl
mov
xlat
pop
imul
cmp
imul
and
adc
test
jecxz
arpl
test
stos
mov
xchg
or
rclb
orl
jmp
lds
dec
jp
orl
cli
outsl
push
xor
cmp
nop
push
imul
cwtl
lret
adc
dec
dec
cmp
push
ljmp
shrl
jmp
outsl
mov
gs
fwait
mov
adc
push
pushl
jl
fnstenv
cltd
jmp
cmp
fld
add
loopne
lea
push
sti
pop
or
outsb
mov
cmp
movsb
and
addr16
xchg
mov
rolb
sbb
mov
stos
daa
add
frndint
xchg
sahf
sbb
mov
or
push
push
in
cmpsb
xorl
lret
push
inc
push
repnz
dec
filds
jns
jns
stos
fisttpll
adc
mov
jnp
jbe
dec
bound
cltd
mov
and
pop
adc
scas
jl
dec
xchg
test
sbb
pop
push
xchg
lock
jl
xchg
insb
and
lcall
or
insb
mov
pushf
mov
filds
sub
decb
mov
sbb
fiadds
mov
pushf
imul
sbb
and
xchg
inc
icebp
mov
push
push
adc
stos
push
xchg
sub
sti
add
mov
addr16
or
stos
fsts
mov
repz
into
idivl
cmp
pop
xchg
mov
sub
sti
mov
jmp
cli
adc
or
cli
add
cld
cwtl
jns
add
out
mov
movl
cmp
mov
mov
loop
cmpsb
mov
xchg
dec
adc
sub
cmpsl
mov
popf
icebp
jbe
fdivrl
mov
cmp
sbb
xor
cmp
push
add
orl
hlt
call
aam
pop
cmc
mov
mov
data16
sbb
mov
scas
in
sbb
pop
sub
inc
mov
sub
cmpsl
insl
mov
iret
js
or
in
sub
jge
pop
int
mov
mov
cmpsl
fidivrs
shr
into
jbe
mov
js
inc
lds
outsb
cli
ja
xor
mov
stos
push
outsb
mov
pop
sbb
xchg
int3
xchg
pop
fnstsw
outsl
fs
gs
popa
xor
xorb
mov
and
in
pop
push
in
pop
idivl
add
sub
jecxz
cmc
out
cmp
sbb
bound
icebp
jns
jecxz
fdivrp
cmpsl
push
jns
xchg
adc
and
mov
cld
movsb
mov
mov
mov
andl
mov
cmp
adc
mov
stos
sub
sub
xor
xchg
mov
xchg
mov
pop
mov
cwtl
mov
nop
mov
lret
in
inc
daa
add
mov
xchg
clc
aas
movsl
cmc
sahf
mov
push
test
push
push
push
test
in
pop
cltd
adc
sub
cmp
push
jno
int3
push
push
jno
sti
imul
cmp
inc
push
in
mov
xor
in
cmp
xor
pop
add
pop
out
or
pop
jl
outsl
xchg
adc
and
mov
mov
inc
inc
cmpsl
loope
xchg
ljmp
jle
testl
cmc
or
pop
mov
jp
les
repz
lds
adc
xlat
cs
mov
loope
pushf
pop
inc
pop
in
rcrl
ret
outsl
jns
daa
aad
push
movsl
outsb
aaa
mov
popl
rdtsc
sub
push
jae
inc
mov
addr16
jae
icebp
lods
xchg
movsl
or
pushf
cli
adc
je
sbb
push
test
das
sub
fidivrl
repnz
sarb
xor
cmp
sbb
pusha
dec
or
sub
xor
insl
decb
sahf
lahf
sub
mov
bound
mov
sbb
ficoml
jb
cli
push
push
nop
adc
push
xor
popf
pushf
out
repnz
xchg
sub
clc
out
rolb
push
call
or
adc
bnd
sub
jb
popf
ja
int
lds
and
cmp
loop
and
adc
popf
pop
sbb
fstps
outsl
push
xchg
aad
hlt
fcmovnbe
mov
or
add
fnstsw
xor
push
cmp
cli
dec
int3
push
pop
jae
outsl
aas
xlat
push
xor
push
test
inc
lcall
sahf
jno
mov
adc
out
out
cli
loope
inc
dec
dec
lods
jno
sbb
xor
cmp
lds
xor
mov
aad
int
mov
and
sub
pusha
pop
test
mov
mov
fs
mov
or
mov
dec
test
mov
icebp
in
jmp
dec
xor
adc
push
sub
ret
adc
jge
jp
dec
mov
xor
push
fwait
loopne
xchg
cmp
fdivl
cmp
mov
daa
adc
movsl
sbb
mov
sti
imul
push
orb
adc
pop
jle
dec
repnz
jmp
outsb
lds
fsubrl
scas
ret
insl
into
xchg
lahf
cmp
dec
xchg
ja
movsl
pop
sarl
cmpsb
fwait
xchg
cmp
test
xor
mov
mov
stos
adc
gs
lcall
adc
test
mov
pop
movsl
cld
mov
dec
gs
mov
insb
popf
jl
cs
sub
cmp
jl
sar
jge
stos
nop
pop
add
cltd
addr16
movsb
test
and
and
mov
xchg
lahf
xchg
mov
mov
subl
mov
fnsave
push
cli
ljmp
jns
jbe
cmpsb
jg
pop
and
sbb
test
iret
filds
dec
test
cld
test
dec
mov
push
dec
shll
in
rol
fistl
enter
jnp
stos
xchg
insl
adc
push
out
cmp
xchg
add
adc
dec
push
mov
test
imul
es
fsubrs
mov
push
ret
mov
mov
ret
inc
imul
sub
int3
mulb
lcall
pop
jecxz
jae
into
push
cmp
adc
mov
push
sahf
or
mov
mov
inc
and
mov
mov
cmp
imul
and
cwtl
rorb
pop
mov
push
lcall
cwtl
nop
gs
out
andl
fcmovb
clc
adc
jl
in
mov
int3
popa
scas
ffreep
jmp
dec
lock
inc
jbe
and
sub
add
shlb
loopne
xor
test
sub
pushf
jns
stos
pop
pop
mov
pop
test
mov
sbb
and
or
cwtl
lods
dec
xchg
add
mov
jmp
addb
jle
cmp
mov
clc
cmc
test
sbb
aam
ftst
push
jno
push
and
jge
in
mov
sbb
xlat
adc
in
jnp
arpl
sbb
mov
xor
scas
fdivs
ljmp
push
scas
js
addb
jo
jg
loope
daa
add
add
imul
rolb
add
ficoms
push
add
addr16
in
mov
pop
inc
adc
inc
data16
cmc
inc
inc
mov
subl
nop
ljmp
int3
xlat
cli
das
dec
insl
loope
xchg
dec
lock
pop
pop
ja
xchg
out
inc
mov
cmpsl
movsb
cmpsl
sbb
or
push
andl
pop
das
sbb
call
cltd
mov
sbb
int
dec
out
push
icebp
jmp
stos
pop
dec
dec
lds
push
mov
lods
gs
test
pop
jns
repnz
sti
popf
test
pop
push
adc
pop
and
movsb
or
mov
adc
and
insl
jp
push
jb
enter
xchg
mov
aaa
mov
pop
stos
fnstcw
fdivl
adc
xchg
out
daa
add
inc
int3
add
call
mov
xchg
xor
imul
addr16
mov
test
test
gs
cmp
nop
test
mov
mov
adc
push
call
dec
pop
addb
int
xor
and
mov
fsubrp
xchg
hlt
icebp
fistpl
jle
nop
xlat
pop
aam
shrb
fldl
pop
sub
pop
xchg
or
xchg
decb
imul
cwtl
imul
jo
lahf
push
and
hlt
dec
mov
pop
pop
jo
sub
jmp
fiaddl
mov
lock
or
repz
add
aad
nop
mov
sub
scas
out
inc
aas
insb
enter
sbb
out
cmp
push
pop
insl
repnz
mov
and
sbb
fiaddl
fisttpl
mov
add
fs
and
lods
inc
cmc
cmpsb
cmp
push
mov
xchg
push
sub
jae
xchg
dec
popf
push
xchg
in
dec
sbb
jp
lock
out
out
add
mov
daa
push
dec
add
enter
lret
aad
ret
rol
in
sbb
mov
out
mov
pop
fmull
mov
jp
in
stc
or
rol
test
ffree
out
push
add
push
sub
sar
and
push
jo
es
push
dec
mov
test
gs
in
fyl2x
mov
popl
sbb
mov
xchg
data16
add
xchg
les
shl
call
cltd
ret
sbb
int
pop
ljmp
lret
jno
jo
mov
mov
mov
lcall
fs
sub
pop
add
movsl
faddl
sti
dec
fucomip
andb
out
lahf
dec
stc
jg
je
push
xchg
cmp
hlt
aam
xchg
lcall
push
pop
sbb
sub
hlt
lcall
pop
xchg
aas
das
push
leave
lret
mov
push
lret
mov
xchg
dec
lods
aam
je
lock
pop
jns
icebp
out
xchg
notb
xchg
loopne
pop
aas
inc
mov
dec
lods
jbe
jo
sub
fwait
or
xchg
fsubrl
pop
or
iret
mov
pop
jae
and
sub
daa
jo
sbb
or
adc
fbstp
andl
imul
and
adc
outsb
dec
jg
es
cmp
jb
add
sahf
out
add
sti
inc
out
mov
xor
call
cmp
dec
mov
or
inc
push
cmp
xchg
xchg
mov
lds
std
outsb
add
mov
push
sti
sbb
dec
push
pop
jo
mov
aaa
xchg
fs
lods
dec
into
and
and
or
xchg
xor
xchg
mov
push
or
aam
test
and
xor
jae
or
xchg
add
mov
iret
and
sbb
add
scas
or
jns
cmpsl
jbe
dec
pop
xorl
or
mov
push
xor
clc
dec
add
cmp
mov
pop
test
dec
or
pop
arpl
xchg
outsb
xor
popa
sti
sub
jp
pushf
in
cld
es
cmc
mov
cmp
inc
mov
dec
push
cmc
pop
int
push
sub
push
fcomps
clc
jmp
xchg
adc
mov
test
movsl
lret
sbb
repnz
xor
cmp
jl
push
pop
jae
sbb
push
pop
xor
mov
cmpsl
sbb
icebp
fstl
movsl
cs
push
xor
pop
add
xchg
data16
push
dec
xchg
adc
fcoms
inc
add
fiadds
push
cmp
shlb
shll
or
and
outsb
mov
cmp
dec
repnz
add
inc
fiaddl
sbb
das
mov
dec
xor
cld
xor
lds
dec
mov
sti
fcomps
inc
outsb
or
int3
cmp
test
xchg
dec
les
jns
push
lods
sbb
xchg
inc
stos
jb
xchg
test
inc
mov
pop
pushf
ja
mov
fwait
or
dec
inc
dec
xor
jbe
xor
mov
rolb
jp
mov
pop
sub
aaa
je
mov
xchg
jmp
scas
cld
and
fisttpl
xchg
mov
mov
rorl
pop
icebp
fimull
mov
and
mov
movsb
xor
add
jo
inc
leave
es
js
jne
daa
gs
test
hlt
dec
or
pop
inc
in
pop
push
les
xchg
fdivrs
adc
ror
pop
stos
les
jb
dec
data16
inc
das
scas
mov
dec
mov
xchg
scas
leave
push
inc
rcll
testb
dec
xchg
xchg
mov
insl
aad
mov
ja
inc
test
pop
mov
cmp
sbb
in
inc
sub
setp
sub
and
add
int3
cmc
mov
movsl
cltd
lea
divl
mov
out
and
inc
cli
roll
mov
sub
mov
repnz
mov
add
gs
inc
imul
dec
or
or
call
stos
iret
or
jne
dec
or
cmp
cmp
dec
stos
dec
cmp
pop
xor
stos
xchg
lret
mov
cmpsl
lahf
fidivrs
xor
xchg
test
lock
insb
adc
movsl
ljmp
loop
pop
in
mov
aam
jg
lods
adc
cmp
jo
pop
dec
faddl
cmpsl
mov
addr16
pop
loopne
dec
inc
push
cs
loopne
in
shlb
test
fmul
fwait
aas
sbb
adc
pop
mov
out
mov
xchg
add
popa
adc
mov
rcrl
xchg
fwait
lahf
mov
rclb
imul
fistl
and
addr16
push
and
add
mov
or
sahf
or
out
lahf
pop
jecxz
push
sbb
or
loop
mov
mov
das
sub
gs
in
insb
imul
mov
fisubs
lret
push
lret
and
shr
cld
bound
lea
dec
cmpsb
push
dec
and
xchg
repz
and
fdivrl
cmp
mulb
or
fisubs
sub
xor
out
loope
scas
into
or
test
jp
into
adc
cmp
inc
or
and
xor
jo
mov
cmovge
jae
out
add
mov
sub
or
and
mov
jnp
or
and
jg
jmp
push
shrl
rorl
dec
sub
out
dec
sahf
xchg
movsb
popl
or
pop
pop
jl
subb
pop
mov
push
jno
loope
jge
lods
sub
xor
in
popa
add
cli
inc
repnz
shlb
sbb
cmp
notb
arpl
ja
xchg
push
addr16
popf
add
sub
xor
xchg
mov
xchg
ss
rdpmc
mov
or
divl
push
jge
mov
cld
in
mov
ss
sbb
mov
jmp
aam
outsl
push
mov
mov
dec
or
pop
fcompl
inc
sbb
mov
imul
cmp
aad
and
imul
add
pusha
sub
add
cmp
dec
and
lock
pop
xchg
mov
out
dec
out
adc
sbb
test
cmp
int3
outsb
or
fwait
rdpmc
cmpsl
daa
cmp
aad
cmp
fwait
cmp
loop
fwait
dec
mov
data16
dec
or
mov
or
cmp
pusha
dec
fs
icebp
ja
mov
push
pushf
sbb
out
jle
adc
inc
add
addl
test
dec
test
pusha
pop
cmp
imul
mov
adc
inc
and
into
in
mov
insl
sti
icebp
fldenv
xchg
sub
add
call
int
repnz
inc
pop
jns
bound
fdivrp
jae
out
xchg
cmpsl
test
aad
sub
jnp
popl
mov
add
loope
sub
std
ret
out
fiadds
repnz
mov
push
imul
cwtl
cmp
mov
mov
cmp
jle
sbbl
inc
push
mov
setl
call
lret
xchg
fnstcw
jne
add
pop
and
adc
jne
xchg
lret
dec
inc
cltd
and
push
xchg
in
pop
pop
aad
jns
pusha
push
jg
insl
cli
sub
das
inc
sar
pop
or
push
xor
xchg
xchg
mov
notb
pop
pop
fisubrs
stc
mov
jno
scas
fsubl
mov
mov
out
idivl
or
pop
xchg
and
pop
jge
sbb
movsl
fs
cmp
push
or
loopne
in
cmp
and
mov
lret
dec
lods
test
lret
lods
jne
iret
call
inc
xchg
insb
lret
mov
dec
sbb
mov
xor
cmp
divb
cmpsl
mov
xor
outsl
dec
push
ret
sarb
pop
push
iret
sub
dec
mov
and
aaa
pop
adc
lahf
pushf
lock
cmp
pop
dec
xchg
lods
aaa
and
sbb
minps
imul
jp
rorl
and
lods
lcall
cmp
sbb
hlt
out
and
es
xchg
xorl
int
shll
fisubl
aaa
mov
cmp
cli
aam
xor
mov
mov
and
xchg
loope
aam
cmp
dec
jg
fldl
loope
scas
leave
rolw
lods
aam
jp
xchg
sbb
push
xchg
gs
push
aam
test
loopne
or
or
scas
test
and
loopne
pop
mov
leave
fsub
les
ds
inc
lds
test
nop
insb
adc
sub
jmp
ss
sar
outsb
pop
jno
sahf
pop
jo
sahf
mov
ja
xchg
fcmovu
sbb
mov
pop
imul
push
out
hlt
movsl
mov
sarl
add
loopne
mov
shl
mov
xchg
cmpsb
in
cmp
fildll
out
and
fcompl
aad
subb
sbbl
push
push
es
sub
stos
sbb
mov
rcll
jecxz
cli
pop
fsubr
pusha
xor
icebp
jecxz
fidivrl
aaa
add
scas
bound
ljmp
cmp
mov
jp
in
add
inc
loope
pop
xchg
movsb
pop
aad
push
mov
sbbb
inc
push
stos
jmp
hlt
out
sub
dec
mov
lods
fmulp
mov
mov
in
fwait
enter
fs
dec
enter
cmp
inc
outsb
jnp
mov
xor
xor
or
push
rclb
xchg
mov
and
sub
xchg
sahf
xchg
in
and
cli
add
jns
fisubl
mov
inc
dec
or
xchg
dec
sbb
jp
icebp
psrlq
roll
jecxz
aam
insb
mov
enter
or
sbb
push
mov
cmpsb
xor
dec
scas
fnstsw
mov
jle
and
mov
cli
insb
cmp
mov
xor
xor
adc
mov
xor
in
popf
push
xor
inc
mov
out
lahf
cmpsb
stc
push
movsb
cmp
mov
mov
ja
subb
insl
stos
xlat
and
out
into
inc
icebp
xchg
lock
jl
cs
cli
mov
xorb
xlat
mov
jge
fwait
pushf
or
or
jg
or
inc
cld
aaa
into
scas
out
adc
out
pushf
pop
sub
xchg
pop
mov
lret
xrelease
and
push
pushf
mov
adc
in
push
mov
lret
push
out
jl
jne
movsl
xchg
in
pop
inc
jp
sbb
scas
leave
rolb
jl
jge
push
dec
movsb
xchg
jg
or
or
mov
and
push
icebp
cmpsl
xor
or
loope
gs
mov
addr16
js
mov
mov
push
add
or
mov
mov
sbb
addr16
jo
out
fisttpl
sub
outsb
sti
mov
jo
push
mov
and
ficompl
cmc
sub
dec
cmpsb
ret
cmp
cmp
dec
lea
addr16
loop
loop
sbb
cmpsl
mov
loopne
hlt
rcr
test
nop
sbb
inc
pusha
inc
dec
stc
and
fcomps
and
fwait
add
cmpsl
pop
and
hlt
movsb
ds
inc
jbe
fs
sub
mov
loope
dec
scas
repz
lock
mov
stc
jno
sti
shrl
test
xchg
insl
jge
lcall
out
mov
xor
mov
cwtl
imul
mov
aam
ror
js
mov
mov
nop
scas
out
mov
addr16
addr16
jl
inc
addr16
dec
int
mov
mov
adcl
pushf
mov
xchg
inc
push
test
imul
insl
cmp
dec
pop
dec
sarb
jae
inc
enter
sbb
daa
icebp
cs
shll
clc
sub
xor
enter
shll
push
or
mov
int3
or
xchg
mov
outsl
in
dec
pop
mov
rorb
ds
adc
xor
push
jecxz
pop
pop
xor
mov
movsb
inc
adc
lcall
sub
push
mov
sahf
or
movb
xchg
xor
xchg
or
fisubl
xor
xchg
xor
mov
neg
loope
scas
dec
popa
or
add
mov
fsubrl
adc
aas
lods
add
test
adc
in
es
push
js
cmpsb
pusha
jbe
inc
sub
and
xlat
jne
xchg
dec
ffreep
int
sbb
scas
and
lea
xorb
out
out
aad
cmpsb
icebp
pop
pop
lcall
fwait
test
mov
jnp
mov
cltd
aas
nop
or
xchg
pop
mov
push
sub
xchg
and
test
arpl
or
fidivl
lods
scas
stc
jge
xchg
loop,pn
insl
xchg
mov
mov
adc
ja
aam
adc
loop
jmp
pop
je
jo
lea
sub
addb
popf
add
push
add
mov
push
arpl
popl
mov
sub
sbb
fwait
stc
pop
sbb
sub
pavgb
ljmp
call
fwait
jbe
cmp
das
sbb
mov
test
pop
mov
test
lahf
push
mov
inc
daa
add
ds
add
sub
pop
mov
jmp
jp
sti
adc
mov
mov
rcrb
xorb
xchg
dec
add
cmp
push
jb
pushf
and
mov
cli
jp
jp
ret
xor
lcall
fbstp
and
lret
or
sbbb
in
popa
scas
divb
jge
leave
jne
cmp
jo
sub
pushf
dec
leave
bound
xor
mov
adc
sub
loop
add
cld
inc
push
aaa
xor
insl
or
xor
lds
daa
dec
or
pop
test
dec
push
ret
cltd
out
iret
pop
sbb
or
adc
aaa
jnp
loop
or
xchg
imul
sbb
dec
mov
popa
xor
lret
outsl
rcrb
adc
lods
ficoml
xor
cmc
not
shrl
shrl
enter
fcomps
mov
movsb
in
inc
popf
pop
fidivl
orl
clts
fsubs
xchg
movsb
fs
lods
inc
adc
leave
inc
xchg
add
dec
je
pop
adc
push
mov
dec
in
push
sti
or
loop
add
pop
dec
mov
xor
jb
enter
or
inc
stos
xchg
cmc
push
jbe
dec
nop
cmp
call
iret
ret
divb
xchg
cwtl
pop
into
push
pcmpgtd
je
cs
sbb
popf
mov
xor
seto
xchg
aaa
push
sbb
aad
push
jns
push
xor
fwait
out
leave
xor
test
push
and
ffreep
and
arpl
push
dec
jne
xor
sub
test
mov
jl
mov
xchg
test
push
inc
stos
rorl
aam
mov
jo
pop
cmpsb
xor
xchg
mov
mov
out
add
out
fidivs
pushf
jo
shll
add
or
bound
push
popa
push
add
push
cmp
mov
sbb
jns
lock
nop
in
push
inc
sbb
mov
sti
movsb
or
and
sub
dec
lods
push
inc
mov
test
xchg
mov
cld
jno
test
ret
sbb
sti
popf
jbe
insb
andb
ds
fstps
clc
adc
cmp
fidivl
mov
out
cmp
int
mov
test
xor
bsr
imul
push
fsubrp
adcl
int3
mov
inc
jecxz
rcll
pop
adc
out
xor
in
pusha
icebp
lods
xchg
lahf
mov
pop
fnsave
dec
push
ja
adc
push
pop
xor
adc
ret
in
out
mov
push
pusha
xor
fwait
cmp
add
jae
xor
scas
adc
jnp
xor
mov
arpl
jp
rep
scas
imul
sarb
je
cli
in
or
sbb
cmc
add
cmp
pop
mov
and
mov
sbb
int3
inc
inc
outsb
push
sub
inc
das
jne
movsb
inc
es
adc
cmp
xchg
jo
adc
sbb
or
iret
adc
outsb
lods
cmp
testl
rcrb
out
mov
std
adc
sub
fs
data16
pop
cmp
inc
jp
jge
jno
add
aas
test
dec
mov
jb
stos
divl
dec
mov
jle
jb
loop
and
mov
mov
sbb
out
mov
mov
fwait
push
stos
pop
and
and
xchg
out
hlt
sub
adc
mov
mov
fdiv
hlt
daa
fidivrl
nop
mov
aas
adc
mov
stc
nop
outsl
je
das
sbb
jmp
mov
push
jo
pop
cmp
adc
aaa
xchg
popa
push
pop
popf
xorl
fcoms
inc
xchg
test
mov
xlat
out
pop
orl
mov
pop
jmp
push
fst
adc
movsb
dec
pop
add
test
xorl
in
lret
xchg
add
sub
inc
adc
cmp
and
add
iret
cmpsl
push
mov
lret
stos
mov
mov
fwait
jmp
cmp
stos
and
fisttpl
arpl
inc
cmc
sbbl
mov
push
pop
pop
mov
lret
dec
fiadds
leave
das
adc
sarl
cltd
arpl
stc
pop
repnz
popa
xchg
imul
fistps
fidivrs
pop
out
hlt
sbb
dec
popa
inc
inc
inc
or
imul
push
insb
dec
push
mov
fsubrl
popa
mov
pop
sbb
hlt
stos
cwtl
xchg
inc
mov
movsl
icebp
sbb
or
sub
mov
mov
sub
push
int
mov
or
in
mov
mov
jmp
inc
pop
cli
pop
js
in
dec
jnp
xchg
add
fcmovnbe
je
lock
imul
pop
inc
xchg
repz
pop
lret
arpl
pop
cld
insl
ret
push
pop
mov
mov
and
mov
pmaddwd
push
gs
inc
popa
cmp
xor
fildl
sbb
fimull
push
jno
out
and
int3
cld
cmp
lea
arpl
xchg
insb
xchg
sub
or
lock
popa
bound
ss
adc
lock
jno
out
call
pop
mov
loopne
xor
mov
mov
xor
pop
inc
sbb
insb
jno
rcrb
bnd
test
dec
xlat
or
or
sahf
test
jnp
jo
stos
clc
xor
xlat
ficoms
hlt
fwait
inc
pop
shl
fwait
inc
mov
sub
sub
xorb
rolb
sub
test
rcrb
ret
push
test
xor
out
movb
out
sub
outsl
inc
cmpsl
mov
mov
push
mov
cmpsb
inc
int3
pushf
icebp
ja
nop
and
dec
mov
imul
or
jp
inc
pop
enter
fildl
cs
mov
inc
sti
clc
or
mov
add
xor
fistpl
mov
es
getsec
lahf
and
mov
mov
push
cmp
stos
mov
mov
mov
jp
pop
ltr
mov
xor
cmp
std
cmp
shlb
pop
movsb
repz
mov
mov
lods
imul
push
movsl
add
push
pop
das
je
or
pop
pop
add
cmp
add
pop
mov
and
cmp
decb
sub
repz
mov
push
fisubl
ljmp
stc
inc
inc
test
jbe
and
jne
mov
mov
bound
out
jmp
jp
cmp
bound
jmp
or
mov
xchg
adc
pop
scas
mov
mov
in
fdivs
jle
adc
stos
lods
shll
sub
dec
data16
call
movsb
push
shrl
add
daa
fwait
pop
cmpsl
scas
bnd
cmp
jle
xor
dec
pop
xchg
scas
and
or
pop
push
jbe
stos
out
movsb
jmp
js
scas
inc
popf
and
and
je
push
xchg
jl
jge
push
jp
pop
cmp
movsl
pop
dec
add
cld
jmp
test
shll
sub
or
pop
or
imul
scas
orb
xor
cmc
fisubrl
xor
call
mov
subl
pop
adc
sub
fwait
push
ss
sbb
sbb
mov
jo
fstpt
xchg
addr16
xor
inc
out
lods
and
mov
xor
mov
xchg
hlt
xchg
pop
or
pop
stc
xchg
dec
test
mov
push
pusha
pop
add
je
jne
out
adc
clc
scas
or
leave
mov
jns
adcb
in
sub
sar
cmp
inc
pop
xchg
int
pushf
daa
cmp
sbb
mov
cmc
pop
lret
add
mov
dec
rcrl
jns
jmp
pop
mov
iret
push
dec
pop
cwtl
pop
cwtl
test
pushf
shrl
push
dec
pop
mov
ffree
jnp
cmp
pop
jae
daa
jns
lods
fidivrs
int
in
mov
shll
or
jnp
nop
sti
sub
push
ds
dec
add
dec
mov
sbb
daa
sub
mov
in
and
and
test
popa
jle
xlat
test
and
mov
and
sbb
inc
lods
adc
std
fiaddl
jns
fidivl
cmpsb
jns
sahf
ror
jb
movsl
mov
dec
out
lea
push
mov
dec
push
mov
mov
push
filds
or
adc
add
xchg
inc
dec
sar
jmp
cmp
lods
inc
mov
cmp
lea
pop
xor
stos
dec
pop
inc
xchg
xor
sbb
popf
jmp
ss
fistps
dec
add
fs
fwait
shl
mov
int
mov
movsb
or
adc
cmc
ret
sbb
pushf
loop
adc
inc
lds
fbld
leave
bound
jmp
xchg
subl
mov
push
lea
mov
add
cli
mov
cld
and
dec
movsb
test
cmp
mov
inc
inc
xrelease
daa
shll
das
int3
enter
rcrb
lods
pop
add
lcall
cld
not
loopne
add
fildll
stos
jno
xor
enter
sub
outsb
fstpl
xor
loop
lods
stos
or
cmp
mov
xor
sub
mov
imul
add
int3
mov
aas
roll
cs
lock
test
andb
icebp
push
sub
cltd
push
inc
xchg
pop
out
xorl
add
mov
push
mov
xchg
xchg
cmpsl
mov
jg
mov
pop
mov
lods
test
sarl
sub
mov
in
pop
fnsave
mov
lods
std
cltd
dec
mov
mov
stos
sti
jne
movb
ljmp
stc
nop
mov
idivl
lods
repz
jnp
jmp
sbb
aad
repnz
lods
mov
mov
sbb
mov
enter
push
mov
dec
pusha
loopne
insl
jp
sbb
or
pop
in
jnp
mov
pusha
push
cmp
shl
xchg
int
lock
test
jnp
adc
rclb
sub
pushf
mov
xchg
push
adc
cmp
iret
decb
inc
enter
shll
or
mov
pop
cmp
outsb
out
nop
stos
mov
pop
jp
cmpsb
xchg
loope
arpl
arpl
xlat
adc
push
jb
ss
popa
xchg
enter
stos
mov
je
cmp
mov
add
xchg
incl
and
enter
out
inc
sti
mov
or
mov
jb
mov
lods
mov
xchg
xchg
lods
xchg
out
cmp
cmp
push
pop
push
xorb
or
xchg
clc
in
mov
xchg
loopne
sub
jmp
das
cwtl
cmp
loope
mov
pop
ja
iret
push
mov
outsl
test
or
mov
test
shll
nop
jns
pop
mov
sbb
mov
inc
call
cmpsl
ficoml
movl
lock
cmp
push
xor
ret
fincstp
dec
cmp
cmp
shll
hlt
xlat
std
repz
mov
rcl
ljmp
dec
movsb
mov
notl
fstl
pop
xor
popa
lret
xchg
mov
or
inc
or
sub
movsl
fucomp
es
push
cli
mov
loop
add
jp
mov
test
daa
call
jae
lock
pop
clc
and
insl
call
fwait
adc
dec
jne
mov
mov
sbb
push
sarl
adc
roll
ja
sbb
cmp
pop
pop
jge
es
or
cmc
lahf
jne
call
xor
loopne
lods
pop
mov
rcrl
mov
mov
mov
enter
sub
and
repz
loopne
mov
jg
xor
pushf
fcmovbe
pop
mov
jl
test
dec
mov
xor
xor
push
jbe
jmp
jle
cmp
adc
cli
pop
fildl
in
fmul
pop
pop
data16
jp
push
leave
jo
cmpsb
sbb
xchg
dec
pop
cld
es
push
fisubrs
pop
or
push
lods
cmpsb
xchg
sahf
iret
cmp
pushf
jg
add
mov
inc
fidivrl
in
pop
in
cmc
jl
mov
fadd
call
lea
std
aam
sub
add
adc
jg
std
adc
es
add
pop
notb
dec
mov
or
mov
and
dec
dec
cli
fwait
pop
mov
and
roll
int
mov
dec
push
mov
cmpl
in
adc
adc
mov
dec
iret
stos
adc
jmp
add
pop
adcb
orb
sub
xchg
outsb
pop
in
pushf
or
xor
scas
stos
cmp
sub
movsb
and
or
and
jb
pop
arpl
xor
push
or
cmp
mov
orb
ds
mov
les
loopne
leave
cmp
mov
fisubl
mov
pop
xor
pop
and
dec
mov
call
xchg
lret
sbb
xchg
sub
jmp
push
pop
xchg
sbb
lret
sub
xor
cmp
mov
mov
mov
dec
test
rcrl
sbb
adc
mov
iret
and
icebp
lret
mov
push
mov
mov
pop
ja
movsl
mov
movsl
xchg
lahf
sub
dec
adc
outsb
loope
push
dec
add
and
mov
test
inc
mov
loope
les
ja
sti
iret
addb
das
loop
movsb
subl
idiv
add
repnz
mov
xchg
lods
add
mov
lds
stc
ljmp
xor
mov
and
xchg
jecxz
data16
repnz
leave
jae
popf
adc
enter
fists
jmp
out
jne
jle
or
jl
mov
xchg
add
cmovbe
pop
and
mov
xchg
mov
data16
cli
mov
and
add
shll
imul
xchg
sub
xchg
sarb
arpl
sarl
test
inc
fisttps
xchg
orl
icebp
xchg
andl
sahf
cltd
je
mov
outsb
test
ja
int3
cmpsb
int
mov
push
adcl
repnz
lcall
sbb
adc
out
test
xor
mov
cmc
pop
dec
repz
mov
pop
iret
scas
fnstenv
inc
stos
lahf
and
jae
mov
fimuls
push
lods
xchg
stc
jle
daa
dec
fbstp
adc
lock
or
negb
inc
mov
mov
repz
add
fcmovbe
dec
pop
aam
xlat
faddp
push
sahf
cwtl
dec
jg
repnz
fmull
adcb
sbb
scas
jp
stc
mov
je
ficompl
les
sub
mov
xchg
or
xorb
and
int
test
cwtl
push
test
into
imul
sub
sbb
inc
cmp
sub
sub
push
gs
mov
mov
inc
idivl
dec
rorl
xchg
inc
outsl
or
push
out
mov
xchg
jbe
call
es
data16
push
push
cmp
aas
cmp
dec
call
adc
jge
or
sub
clc
jns
int
ja
mov
arpl
lret
ror
mov
mov
adc
aad
dec
cmp
mov
lds
int
into
cmp
mov
jmp
push
jns
pop
loope
xchg
js
rolb
loop
mov
sbb
clc
enter
inc
mov
jae
inc
lods
jmp
jp
xor
sbb
xchg
jmp
shrb
xor
xchg
sub
jecxz
lcall
jmp
lock
insl
pop
popl
add
cwtl
or
jne
push
dec
repnz
addl
cmp
mov
add
lcall
ss
in
sub
xor
xchg
sub
mov
test
pop
in
inc
cld
jns
or
aas
es
xchg
out
sub
mov
adc
data16
cmp
mov
fcoml
daa
sbb
clc
aas
pushf
dec
fcoml
jg
lods
mov
cvtdq2ps
dec
sub
push
jae
mov
push
in
ss
cli
jmp
cwtl
and
push
in
cmp
scas
xor
shll
sub
xchg
pop
nop
insl
mov
cmpsb
push
sub
jp
rcl
sarl
sub
and
std
shrl
jbe
scas
scas
xlat
pop
and
pop
mov
or
cmc
sbb
fsubl
jge
cmp
movsb
pop
sub
adc
loop
in
les
repz
stos
jp
xchg
or
insb
pop
les
and
inc
repz
es
xor
je
je
jb
jp
nop
inc
stc
xchg
dec
xchg
push
and
jae
ss
icebp
ffree
imulb
jg,pn
dec
mov
rol
pop
xor
add
cwtl
push
dec
rcrb
and
sbb
lods
pop
push
push
mov
data16
jne
adc
fwait
enter
je
xchg
push
mov
dec
aam
inc
fsubr
jp
in
push
ror
jne
mov
cmp
or
loopne
incl
inc
mov
mov
add
push
sbb
push
mov
fbld
dec
mov
ficoms
jo
pusha
and
test
jbe
in
adc
ja
arpl
outsb
mov
pop
lods
fdivp
insb
stc
mov
push
push
xchg
dec
aaa
hlt
iret
frstor
jg
xor
rcll
cmpl
xor
inc
roll
mov
sbb
fldl
mov
push
mov
outsl
add
cmc
fadd
repz
adcb
ss
jge
cs
ret
and
cmp
add
divl
dec
pop
sarb
sbb
lsl
sarb
jns
or
sub
js
cli
clc
outsb
loop
dec
mov
enter
mov
jbe
lcall
out
xchg
fsubrs
cltd
sbb
daa
mov
jge
xor
push
jecxz
addl
leave
dec
rolb
sti
ret
mov
adc
outsb
cmp
insl
jae
mov
aam
adcl
dec
push
jecxz
and
add
pop
pop
stos
insl
es
add
push
mov
or
and
sub
mov
add
cwtl
cwtl
pop
incb
inc
ljmp
lcall
dec
cltd
inc
mov
inc
jp
cmp
mov
lods
mov
xor
lahf
jo
sub
cmp
dec
inc
cs
push
aas
xchg
push
repz
fisttps
sub
je
push
inc
bound
mov
cmp
add
outsb
cmp
pop
sub
mov
push
push
lcall
jle
jbe
aad
adc
cwtl
orl
sti
mov
or
jne
mov
insl
dec
mov
pop
mov
lock
clc
sbb
jo
pop
jmp
sub
xor
pushf
icebp
je
pusha
std
notb
lds
jmp
jmp
dec
lahf
cmp
xor
out
mov
fsts
aad
jg
cmp
ss
jmp
pop
mov
dec
mov
sbb
mov
cmp
lods
cli
push
hlt
push
mov
iret
lods
aam
pop
cmp
je
mov
rolb
mov
outsb
mov
and
pop
jge
stos
sub
call
sbbl
xchg
sub
add
clc
scas
add
imul
jnp
fldenv
jno
pop
dec
leave
add
dec
mov
adc
gs
and
int3
cmpsl
pop
gs
out
mov
or
daa
jg
mov
sub
mov
or
mov
mov
pop
push
scas
cmp
repz
pop
adc
or
movsb
dec
pop
aas
mov
mov
test
lret
push
lods
pop
into
lahf
adc
mov
hlt
lock
cmp
and
jmp
lret
shr
out
imul
cmp
pop
out
repz
push
xor
in
push
cmp
scas
shl
push
cmp
mov
out
sub
adcb
mov
jnp
push
clc
out
cmp
lods
and
jnp
loopne
xchg
sbb
mov
mov
scas
pop
inc
and
cmp
add
das
subb
outsl
out
or
mov
push
aas
xor
sarl
shlb
das
or
push
cmp
pop
jbe
cmp
test
sub
cltd
mov
cmp
jbe
popa
mov
hlt
cmc
cmpl
fildl
fsubl
mov
sti
mov
arpl
adc
fwait
cmp
out
inc
out
add
sub
mov
ret
mov
push
push
leave
ret
lock
mov
push
out
mov
int3
push
shl
ja
lock
xchg
enter
push
aam
ret
push
dec
cmp
push
sbb
pusha
loopne
push
mov
mov
add
outsl
fistpll
add
jmp
les
hlt
mov
icebp
add
in
xor
xor
ja
and
jmp
push
cmp
ret
xchg
dec
mov
in
fildll
cmp
cltd
clc
sbb
jl
popf
xchg
test
gs
mov
inc
int3
ret
mov
inc
and
jne
inc
insb
cwtl
sbb
and
sahf
xchg
sub
sub
in
adc
sbb
pop
pushf
in
lret
dec
sbb
mov
shlb
inc
push
mov
inc
pop
xchg
dec
shrl
push
push
xor
and
push
insl
sbb
and
jae
hlt
arpl
dec
loopne
adc
push
and
xchg
mov
dec
scas
cmp
mov
xchg
sub
adc
jnp
sahf
in
ret
mov
push
push
loop
inc
ror
push
pop
xchg
out
push
ds
lret
stos
movsb
mov
insb
jmp
pop
ja
push
stos
test
pop
and
mov
jl
xchg
xor
push
mov
mov
push
adc
popf
rep
mov
aad
test
cltd
pop
xlat
mov
popf
add
je
rorl
xchg
xchg
mov
pop
pusha
add
hlt
sub
insl
aam
sbb
rcrb
imul
test
enter
xor
out
sbb
ds
loope
shll
jge
push
test
js
test
push
inc
fxch
pop
and
sarl
les
cmp
cmpsb
ljmp
cltd
negl
lods
rolb
int
mov
pushf
mov
std
pop
std
inc
in
fists
jmp
xlat
or
fmul
stc
loope
pop
mov
push
popf
jg
push
and
decb
sub
loop
fmulp
mov
incl
xchg
xorb
push
ljmp
iret
and
pop
or
jns
nop
insb
les
xlat
pop
mov
into
adc
sub
push
jmp
mov
mov
jns
dec
dec
fidivrs
or
jmp
or
outsb
cltd
lret
xor
outsl
and
ljmp
sub
fwait
nop
movsl
push
stos
cmpsb
in
in
xchg
loop
lahf
inc
fcmovnb
sub
ret
dec
xor
lods
and
mov
mov
adc
daa
lock
and
stos
mov
xor
mulb
stc
jg
int3
dec
dec
popa
add
stc
add
adc
xchg
pop
sbb
jno
fldenv
dec
mov
inc
out
xor
test
xchg
cli
xchg
arpl
xor
mov
leave
inc
lcall
add
loop
inc
cmp
xor
xorb
cmp
and
test
mov
mov
push
movsb
mov
hlt
add
and
lret
mov
je
mov
ds
cli
lods
dec
adc
jno
cmc
lds
iret
sbb
js
sahf
int3
outsl
jb
and
xchg
cs
cmpsl
dec
sti
ffree
push
fsubrs
pop
out
sub
push
fstps
data16
sbb
lods
jecxz
addr16
jb
sbb
aaa
pop
sti
stos
fisubs
mov
pop
adc
mov
xchg
mov
inc
into
xchg
fistps
and
add
imul
loopne
cwtl
adc
ljmp
or
jae
insl
insb
cli
iret
scas
pop
mov
lret
loop
addr16
sahf
mov
fcompl
fwait
jg
jle
aad
mov
sub
mov
mov
mov
data16
into
adc
int
subb
inc
movsb
push
mov
and
fsubs
sub
push
scas
xor
ss
mov
jle
xchg
or
mov
clc
mov
in
js
rclb
fstpt
pop
ljmp
arpl
int3
and
insl
pop
or
add
clc
ljmp
and
push
jnp
ss
mov
out
and
push
sbb
fwait
cmp
pushf
xor
mov
cli
fistl
jne
push
jmp
jmp
ja
cmp
cmp
data16
data16
sbbb
aad
cmp
inc
clc
jp
loope
rorl
aam
cmc
ret
movsl
repnz
cmp
dec
sbb
fldenv
aam
xor
adc
push
adcb
stos
pop
mov
rorl
add
and
jns
mov
cmp
std
dec
mov
cwtl
lahf
call
sbb
sbb
xchg
shlb
int3
jb
ss
mov
adc
push
jns
lods
scas
shll
iret
push
insl
jns
xchg
iret
pop
inc
adc
pushf
or
lods
cmp
and
outsl
in
cmp
xchg
dec
lds
sub
jle
jnp
rol
insl
lcall
mov
xchg
and
out
jle
mov
cmp
clc
pop
mov
sbb
dec
iret
add
cmp
adcb
pop
imul
repnz
jns
xchg
inc
inc
lcall
mov
sbb
cmpsb
jecxz
mov
jnp
and
pop
bound
stos
mov
mov
xor
loop
add
iret
movsl
sub
into
sbb
ret
fcompl
out
jle
addl
sar
jg
push
std
mov
inc
pop
push
negb
ficoms
add
cmp
jmp
jo
sbb
pop
sbb
add
pop
movsb
loop
jne
je
pop
xor
inc
dec
fistps
inc
and
jmp
imul
add
pop
roll
ja
cmp
mov
push
movsb
shll
jmp
ljmp
out
push
sbbb
repz
cld
gs
xchg
jmp
and
dec
movlps
inc
sbb
mov
or
daa
add
fstps
jne
nop
sub
xchg
pop
test
frstor
in
cmp
inc
mov
cmp
push
mull
sbb
cmp
mov
popf
call
mov
clc
xchg
pop
out
add
dec
stc
gs
addb
fistpl
insl
sti
out
test
dec
and
lret
and
call
out
lods
adc
jecxz
xchg
and
aam
cmp
fldl
fs
iret
dec
dec
cwtl
outsb
add
lea
stc
jle
stc
in
mov
int3
in
dec
cmp
aam
arpl
movsb
imul
mov
sub
out
jge
jle
lea
sub
xor
adc
inc
jmp
aam
movsl
cmp
imul
pop
mov
xchg
cmp
mov
popf
jl
push
popa
jbe
lods
adc
or
sub
add
sbb
pop
scas
pop
cmpsl
loop
pushf
insl
sahf
xor
repz
and
xchg
adc
in
sbb
xchg
xchg
clc
and
mov
inc
lds
orl
pop
inc
daa
and
jbe
ja
and
in
dec
sar
popa
mov
adc
test
xchg
inc
xchg
dec
mov
jecxz
lea
cwtl
test
sub
cwtl
inc
mov
jmp
mov
das
bound
add
loope
xchg
pop
jns
xor
mov
dec
shlb
sbb
jmp
jp
jecxz
cmc
arpl
movsbl
mov
stos
xchg
hlt
dec
push
xor
pushf
ret
lods
arpl
add
xlat
push
push
xchg
imul
sbb
mov
outsb
iret
mov
jl
push
mov
shlb
xchg
outsl
or
adc
cmp
das
mov
imul
xchg
loope
xchg
or
pop
cmpsl
jp
xor
int3
out
inc
pop
adc
gs
sbb
in
cwtl
lds
aaa
inc
xchg
xor
popf
addb
mov
mov
xchg
lcall
fists
rolb
inc
pop
rclb
mov
test
lock
outsl
dec
dec
in
stos
in
mov
mov
adc
pop
ss
test
test
mov
iret
jno
and
add
adc
push
push
xor
imul
aad
test
rolb
pop
fstps
or
or
xchg
or
in
rorl
push
dec
mov
dec
filds
repz
inc
lods
mov
mov
out
popa
js
push
aas
sahf
nop
xor
sub
mov
lock
into
fsts
fisubrs
loopne
cmp
outsl
mov
and
push
mov
pop
stc
lds
imul
sub
lds
ja
sbb
pop
leave
dec
in
push
bound
movsl
repnz
mov
cmp
push
ret
hlt
cwtl
fmull
loopne
fs
fbld
add
sbb
sub
and
enter
lcall
xor
or
std
mov
pop
out
cmp
jbe
das
aad
mov
into
pop
in
cmpsl
push
inc
mov
and
sbbb
mov
and
push
adc
fldcw
imul
push
movsb
icebp
movsb
mov
cltd
sbb
pop
and
out
subl
jg
xor
cmp
xchg
mov
xor
inc
inc
ss
mov
push
xchg
jg
push
popl
out
or
stos
sbb
dec
adc
jnp
test
cltd
dec
add
js
inc
fs
sti
inc
jl
push
adc
lds
fimuls
in
pop
mov
pop
pushf
out
iret
lods
int3
or
push
jg
push
loope
ja
jmp
jge
xchg
lods
test
les
xchg
adc
mov
sub
pop
and
and
test
inc
movsb
mul
fsubs
xchg
subb
stos
arpl
dec
test
sarl
shlb
jnp
cmp
inc
pusha
jg
gs
in
cmc
dec
movsl
or
loopne
insb
lret
lods
add
stos
push
push
pop
mov
push
mov
cmpsw
xchg
call
jmp
andl
xchg
mov
movsl
lcall
adc
jle
xor
pop
mov
mov
or
aam
into
mov
loopne
sbb
call
out
push
shr
cmp
jns
push
pop
inc
or
mov
sahf
lea
or
inc
jg
int
and
mov
mov
jne
incl
jno
inc
adc
pop
pop
fwait
sub
xchg
shlb
inc
jae
fwait
dec
nop
fsubl
jmp
or
inc
outsl
cmp
mov
dec
lods
fwait
mov
xor
push
pop
dec
xchg
pop
cmp
lods
ficomps
inc
addr16
inc
jmp
xchg
mov
and
cmpsb
mov
pusha
stos
cmc
cmpsb
lret
subl
push
xorl
daa
inc
in
andb
lret
rolb
sub
lret
xchg
je
into
dec
push
cmp
insb
adc
mov
imul
pop
outsb
mov
shrb
loopne
jns
loopne
mov
gs
adc
loope
adc
or
iret
add
aad
jle
fcmovbe
fwait
jge
in
outsl
out
dec
jns
cmp
gs
jl
aad
xlat
cld
xlat
jp
insl
dec
mov
cmp
and
scas
mul
xchg
je
dec
xor
mov
mov
fidivrs
xor
mov
push
sti
ret
mov
push
je
adc
mov
cmp
and
ficoms
repnz
pop
push
testl
mov
imul
gs
ss
adc
cmpsb
xchg
sub
pushf
add
lods
stos
lock
xchg
fcompl
es
mov
subl
ret
jb
insb
adc
adc
mov
btc
sbb
mov
add
push
dec
xor
sbb
shll
mov
sbb
or
gs
sub
imul
jno
aam
testl
push
jbe
outsl
sbb
ja
fiadds
addr16
sbb
xchg
lcall
mov
outsb
pushf
insb
dec
pusha
xchg
push
dec
push
test
mov
fnsave
cmp
pushf
dec
xor
xor
ficoms
mov
lret
or
stos
movsl
push
bound
dec
sbbl
pusha
cmp
xchg
jb
jo
dec
mov
in
divb
sub
xor
fildll
mov
sbb
out
lahf
outsb
lahf
std
xor
mov
sub
mov
mov
add
orb
sbb
insb
mov
mov
incl
xor
ret
cs
add
sub
mov
movsb
in
add
cwtl
sbb
pusha
loopne
lcall
or
imul
or
jo
mov
add
test
decb
into
js
pop
jle
iret
clc
stos
loopne
pop
and
mov
es
mov
and
adc
ja
fdivs
push
mov
push
imul
fbstp
sub
fnstenv
adc
cmp
pop
xor
clc
jo
mov
pop
cld
inc
fcom
std
dec
das
sub
aam
jmp
mov
ljmp
aaa
sub
jge
imul
mov
faddp
in
jl
sbb
sti
push
push
inc
out
jmp
hlt
mov
lods
stc
or
shll
push
dec
cmp
inc
xchg
cmpsl
mov
sub
adc
and
movl
cmp
movsb
enter
jg
and
shr
or
ja
push
mov
aad
test
ja
xchg
int3
sub
mov
ja
lods
decb
aam
lret
sete
imul
les
mov
fwait
pop
subb
mov
filds
test
cli
mov
sti
mov
arpl
jno
sub
call
sbb
xor
pushf
ret
sbb
ror
sbb
ljmp
mov
mul
dec
insb
popf
mov
mov
mulb
jns
mov
mov
shrl
xor
jmp
mov
push
xchg
mov
pop
cmp
addr16
scas
out
cmp
jge
pop
nop
sub
pop
and
cmpsl
inc
fsubs
sti
mov
ljmp
and
daa
pop
std
repnz
wbinvd
xchg
es
xchg
sub
mov
cli
jle
or
shrb
pop
insb
call
sbb
adc
push
fmuls
fchs
dec
stos
sahf
adc
popf
enter
cmp
push
shrb
ds
sbb
inc
sti
cmp
xchg
add
mov
add
ror
es
pop
fs
ret
mov
and
lock
call
stc
pushf
bswap
and
adc
pop
dec
xor
jnp
subl
pop
notl
pop
add
hlt
push
and
dec
imul
popf
daa
inc
sarb
mov
incl
lret
subb
push
sbb
xchg
jne
mov
orb
cmp
cvtdq2ps
xchg
jge
rclb
cmp
les
xchg
pushf
xchg
xor
mov
mov
xorb
jl
shl
push
leave
shrl
adc
test
ret
jbe
outsl
xlat
or
arpl
or
inc
imul
inc
xchg
jp
loopne
adc
adc
or
adc
dec
fistpl
push
adc
push
mov
pop
mov
ss
sub
aas
ss
arpl
cmc
inc
mov
out
sub
mov
pop
add
and
cmp
xchg
mov
cmp
adc
sub
test
daa
mull
movsl
mov
mov
insl
sub
dec
pop
gs
lcall
mov
notl
cmp
dec
jg
jb
push
inc
and
popf
and
sbb
shrl
or
in
mov
cmc
pop
std
adc
in
mov
cli
lds
mov
outsb
dec
jno
mov
in
ffreep
loope
mov
mov
rolb
sahf
or
jge
push
pop
enter
nop
inc
ljmp
lahf
fisttpl
je
push
push
das
rclb
xor
pop
in
push
mov
ljmp
add
movsl
rcrb
aaa
lcall
jge
mov
nop
push
in
push
push
lret
sub
jb
ret
movsb
ret
insl
mov
push
add
cmpsb
jmp
xchg
mov
pop
mov
stos
add
das
mov
nop
inc
dec
loop
scas
xchg
fstl
cli
popf
popa
pushf
xor
mov
push
nop
loop
mov
sub
imul
and
pop
ja
pop
mov
sub
punpckhdq
bound
mov
int
lahf
pop
je
add
xchg
sbb
dec
es
in
out
mov
xchg
push
fidivl
fldl
out
orl
sbb
lahf
mov
fdiv
sub
sar
rorl
jb
mov
fnstsw
dec
xor
mov
pop
inc
rcrb
leave
cmc
xor
sbb
andl
add
stc
and
repz
xchg
jmp
ljmp
xchg
xor
mov
fsts
jns
xor
pop
es
das
mov
in
stos
cs
outsb
dec
cmc
and
xor
push
xchg
pop
push
inc
cltd
cmp
mov
out
jo
divb
data16
jle
ficompl
add
adc
or
inc
inc
mov
jmp
dec
rcrb
mov
pop
sahf
push
jg
inc
or
xchg
dec
fwait
dec
fcmovnbe
jbe
xor
pop
mov
pop
mov
xchg
push
lret
fdivrl
jnp
iret
or
xor
fucomi
cmp
dec
roll
mov
dec
adc
mov
pop
notl
leave
add
sti
cmpsb
xor
enter
lods
jl
test
insb
mov
cmp
adc
adc
dec
pop
sbb
adc
fidivrl
cltd
je
mov
mov
push
sbb
jbe
lret
jo
pop
fnstsw
jb
enter
add
daa
rcl
and
add
push
addr16
mov
ljmp
push
sub
fmul
pop
sub
mov
pushf
lods
jb
pop
jb
scas
sub
fisubl
and
popa
iret
flds
ljmp
pop
push
push
rcl
push
inc
sbb
and
lds
and
mov
sub
dec
imull
and
movsb
sbbl
out
add
lods
rcrb
int
mov
jns
add
sti
xchg
std
int3
stos
lahf
enter
mov
das
cmp
testl
push
sub
xor
or
jo
cwtl
xchg
jecxz
mov
mov
mov
cmpl
dec
rclb
push
xlat
add
cmp
movsb
push
mov
mov
jbe
lock
mov
push
mov
sti
sarb
sub
fists
clc
xchg
addl
loope
push
sub
push
std
push
push
mov
mov
in
xchg
scas
leave
inc
inc
dec
mov
push
ds
mov
addl
mov
lret
adc
xchg
movsl
xor
mov
mov
pusha
mov
sub
addr16
nop
or
shrl
movsb
je
fimuls
jno
stos
ret
pop
jg
bound
pop
shl
mov
mov
add
lcall
andb
rolb
scas
inc
decl
lods
sbb
pop
jne
pop
repnz
cmp
adc
add
outsb
pop
mov
dec
inc
insb
ds
cmp
jbe
adc
dec
test
pop
mov
pop
loope
shr
pushf
sahf
add
xchg
jne
inc
mov
pushf
lret
adcl
cli
aad
pop
dec
aaa
sbb
cltd
out
xchg
in
sbb
or
push
nop
dec
sub
addr16
push
into
push
scas
mov
lea
gs
jbe
sbb
sbb
dec
repz
test
test
mov
sbb
stos
ret
pop
js
jae
fisubrs
mov
out
jns
sub
inc
lret
adc
xchg
test
fwait
cmp
xchg
add
push
repnz
sbb
mov
orb
call
xchg
pop
cld
jecxz
sbb
in
xchg
dec
in
mov
negl
jecxz
ds
out
add
inc
test
mov
xchg
fnstenv
addb
xchg
mov
lar
cwtl
lcall
cmpsb
vpsubsw
pop
adc
stc
sbb
mov
pop
pop
test
fcomp
dec
out
and
mov
push
int3
jne
sbb
pop
jno
xchg
jae
hlt
push
aad
mov
and
pop
pop
xchg
popl
push
sub
adc
outsb
jae
xor
daa
jns
push
dec
sahf
push
jbe
mov
xchg
fsubrs
dec
jmp
aaa
fcomip
call
sub
or
arpl
xlat
and
and
push
xchg
ds
mov
int
aad
lahf
lret
mov
pusha
js
xchg
orb
sahf
lea
push
iret
aad
ljmp
mov
adc
inc
imul
in
fdivs
xor
and
in
movsl
push
pop
push
divps
pop
test
fnstenv
push
xor
add
ljmp
mov
jnp
pop
xchg
add
and
roll
mov
insb
push
stos
icebp
push
xorb
mov
adc
movsl
js
insl
test
movsl
les
insl
xchg
call
stc
aad
push
das
hlt
fnop
shll
into
pop
mov
repnz
dec
push
push
idivl
mov
pop
movsb
divl
cltd
scas
inc
push
mov
mov
shl
xor
fnstsw
cmp
int3
push
mov
subb
xor
inc
out
xor
xchg
arpl
sbbb
cmp
adc
in
int
sub
xchg
jmp
and
or
mov
lods
mov
inc
sti
push
insl
push
mov
add
pop
push
fwait
jns
mov
inc
cmc
lock
cmp
shlb
mov
pop
pop
fisttpll
mov
mov
jne
lods
insb
cmp
fwait
jecxz
xchg
sbb
xchg
cmpb
push
loop
std
es
xor
xor
inc
pusha
in
mov
or
repz
out
aad
push
stos
and
nop
jne
pusha
sahf
sub
scas
out
mov
xchg
jae
scas
and
mov
and
test
iret
ret
mov
and
pusha
sbb
mov
inc
pop
flds
cmpsb
push
test
ds
aaa
lret
xchg
pop
mov
pop
lock
or
lret
pusha
xorb
push
insb
movsb
addl
and
loope
and
add
pop
scas
cmp
int
sahf
ss
cmp
fs
adc
cmp
xor
adc
iret
or
hlt
adc
mov
push
or
sub
and
movsb
mov
adc
add
sahf
inc
add
out
in
jae
adc
sti
or
in
jb
push
mov
cmp
sahf
jno
jp
aad
push
mov
inc
mov
mov
xchg
arpl
push
cmp
test
sub
fnstsw
sub
test
jge
push
in
push
mov
dec
out
push
ja
dec
sub
mov
cmp
cmp
sub
cmp
pusha
cs
dec
aam
mov
ficoml
mov
insl
mov
jno
xchg
dec
mov
adc
push
out
push
insl
in
bound
test
incl
pop
lea
aad
and
aam
movsl
dec
xchg
or
dec
cmpsl
popa
cmp
jle
add
jecxz
dec
sarb
movsb
subb
es
mov
repnz
out
inc
dec
cmp
push
enter
add
pop
inc
cmp
imul
cmc
push
xchg
or
pop
jbe
xchg
push
pop
inc
out
lahf
jg
mov
fisubrl
inc
aam
repz
mov
sbb
jnp
sub
or
push
or
cmpsl
cmp
sbb
sbb
adc
jp
in
lahf
push
xor
adc
mov
mov
loop
dec
jp
stc
out
imul
mov
loope
insb
cli
add
sub
scas
add
inc
mov
nop
adc
cmp
dec
jge
mov
test
mov
dec
cwtl
xor
cwtl
mov
mov
inc
int3
mov
sbb
jo
adc
data16
add
repnz
pop
lret
stc
sub
nop
push
fiaddl
xchg
popa
xor
jmp
add
push
lret
adc
in
int3
and
jl
imul
fisttps
mov
push
sub
dec
xchg
sbb
js
xchg
nop
daa
adc
call
push
sub
mov
gs
mov
lds
mov
rcll
cmc
push
add
insb
cwtl
adc
dec
jo
stos
mov
rcl
cmpsb
cmp
sbb
scas
pop
cmp
cmpsl
or
lret
jecxz
dec
sbb
cmp
outsb
or
mov
pop
xchg
test
stos
rorl
xchg
dec
mov
out
mov
and
push
jle
dec
stc
mov
cmpsl
mov
ficomps
js
jl
ss
imul
pop
stos
push
in
arpl
jmp
jbe
rcll
dec
inc
sahf
aam
lcall
leave
rolb
stos
cltd
jmp
cltd
outsl
mov
das
or
mov
push
mov
cmpsl
roll
dec
mov
lcall
inc
lods
sub
inc
sbb
adc
shl
out
pop
fwait
jb
lcall
or
fsts
out
inc
sub
adc
or
jnp
sub
addr16
jecxz
in
orb
sub
cmp
mov
push
pop
insb
jg
scas
xchg
push
inc
xorb
in
int
mov
loopne
cltd
arpl
outsb
adc
lret
jae
mov
jge
shll
adc
mov
pop
movsl
push
loope
shlb
jae
mov
ja
sti
sub
add
cmc
sub
iret
or
insl
test
jo
push
dec
test
loopne
shl
and
adc
shr
in
lods
in
out
fwait
adc
shlb
out
xchg
mov
cld
movsl
insl
cwtl
mov
iret
in
xorb
push
lret
in
mov
addr16
in
sub
xchg
xor
lock
clc
jl
ret
loope
mov
imul
cmp
sub
sbb
dec
xchg
in
mov
out
mov
push
arpl
xchg
pop
gs
push
cmpsb
add
xchg
mov
ret
ljmp
mov
jno
cmpb
movsb
scas
sbb
mov
push
cmpsl
push
sub
xchg
fldt
jp
inc
fmull
cmc
jge
add
test
dec
test
mov
and
cwtl
inc
movsl
cmp
mov
lods
or
push
cmp
jno
std
inc
sbb
sbb
dec
fcomps
test
scas
sub
xchg
push
int3
add
lcall
dec
add
incl
adc
mov
or
sub
out
add
int3
mov
imul
add
or
cmpsb
mov
mov
pop
xor
push
xchg
xchg
mov
jmp
fstpt
in
xchg
xchg
mov
in
adc
sidtl
push
pop
pop
ret
je
or
arpl
data16
xchg
inc
popa
or
js
stc
cmp
in
lret
ja
cltd
lret
pop
mulb
fwait
xchg
popa
mov
pop
xor
pop
xchg
xchg
imul
and
subb
fidivs
aad
xchg
insb
ljmp
idiv
jg
xlat
jecxz
adc
lods
pop
jge
add
imulb
pop
in
data16
dec
adc
loopne
in
clc
cmp
xor
mov
mov
cwtl
aam
aad
mov
pop
lret
push
mov
fsubl
sbb
mov
fiaddl
into
dec
test
add
in
xchg
ret
cmp
xchg
dec
cmp
and
adcb
cmpsb
mov
ljmp
xor
loopne
lods
lds
mov
insl
pop
sub
mov
aad
xchg
movsb
push
rorl
push
int
jle
hlt
mov
test
push
mov
lods
cmc
mov
xchg
fwait
int
cwtl
adc
test
push
loope
xchg
pop
ds
filds
mov
sti
rolb
rclb
add
popa
mov
aas
mov
sub
iret
iret
add
cmpsl
popa
out
jno
mov
xor
xor
jg
call
mov
shlb
adc
mov
ret
testb
jbe
ret
dec
aad
push
adc
sbb
pop
nop
push
pop
pop
int
xlat
jge
sbb
fsubrs
stc
xor
xchg
stc
insb
xchg
xchg
pop
outsb
ret
ljmp
inc
jp
pop
es
cmp
les
jb
out
xchg
jns
popa
popf
mov
cmpsl
adc
jge
cmpb
pusha
test
jne
mov
out
mov
rcrl
daa
cmp
or
arpl
cmp
jns
stos
int
icebp
sub
xor
into
les
pop
mov
mov
adc
push
mov
hlt
jno
test
movsl
mov
lret
and
jns
push
test
push
in
movsl
jl
shrb
mov
lea
adc
pop
sarl
pop
mov
iret
adc
pop
roll
push
dec
lock
cmp
mov
mov
push
sub
movsl
addb
jae
sbb
movl
sub
mov
out
fnstcw
incl
scas
cs
fwait
dec
mov
and
mov
jmp
vaddps
sbb
xor
hlt
test
incl
mov
movsb
mov
adc
cmp
cmp
jnp
aaa
dec
aad
xchg
adc
pop
pop
xlat
dec
adc
push
cld
bound
xor
jno
jecxz
enter
imul
lock
mul
sub
push
insb
jnp
cmp
push
ja
inc
dec
dec
lahf
pop
ja
mov
mov
aas
stos
sbb
dec
push
xlat
lods
fld
dec
add
cwtl
pop
es
cmpb
nop
adc
jge
sbb
mul
out
xor
push
push
xor
inc
in
adc
and
rcr
sarb
aas
lret
cmp
mov
jnp
mov
jle
xchg
or
sahf
in
loope
pop
push
inc
mov
iret
xorb
aad
xor
mov
xchg
mov
mov
dec
pop
pop
fisubs
add
scas
nop
repnz
inc
mov
inc
cmp
popa
mov
std
xchg
jg
aad
and
mull
ljmp
xchg
and
das
arpl
cld
sahf
xchg
and
pushf
or
mov
addb
or
scas
das
dec
adc
int3
pop
xor
imul
in
add
push
jp
hlt
dec
in
sub
pop
jnp
shl
or
mov
idivb
cmp
ja
imul
cwtl
out
mov
les
in
in
xchg
sub
fdivl
or
clc
sarb
adc
push
add
mov
and
dec
pushl
sbb
pop
xchg
inc
jnp
cmpsb
or
xor
pop
inc
test
out
mov
lock
pushf
or
fnstenv
inc
mov
dec
insl
es
or
aas
mov
and
mov
push
sahf
movsl
jo
push
pusha
aas
mov
lahf
cmp
and
out
in
jo
adc
scas
sarl
in
sub
sub
jnp
scas
or
pop
cltd
fimuls
fiaddl
jle
jle
xorl
cmpl
jb
cld
daa
jmp
xchg
jge
rclb
pop
inc
add
in
push
lahf
pop
sub
mov
push
mov
int
imul
or
inc
popf
fcomip
jno
dec
sub
jecxz
mov
repnz
insl
movsb
jecxz
xchg
stos
inc
mov
inc
lahf
or
leave
xor
and
push
xchg
in
mov
mov
pushf
movsb
xor
mov
pushf
jns
dec
in
icebp
dec
mov
fistl
punpckhwd
jp
loop
inc
scas
dec
cs
cmp
xchg
push
sti
aam
cmp
ljmp
lock
scas
ja
rorl
sub
in
iret
je
sub
push
out
nop
call
outsb
push
push
sarl
pop
dec
pushf
mov
les
aam
jmp
pop
mov
roll
insb
bound
hlt
movsl
aaa
jb
jno
jle
daa
inc
jge
inc
test
mov
fisubrl
scas
adc
xor
or
inc
sbb
out
shrb
dec
test
stos
sub
dec
jbe
jnp
mov
out
leave
pop
add
scas
subl
mov
in
arpl
scas
scas
mov
rcl
pop
xlat
insl
jp
adc
jmp
mov
xor
inc
mov
lods
lods
or
iret
xor
pushf
sub
mov
bound
inc
test
adc
popa
jnp
mov
gs
mov
xor
cld
std
mov
and
jne
stc
sub
cmpsb
jp
mov
fisttpl
sahf
gs
mov
cltd
andb
daa
dec
fwait
xchg
mov
mov
mov
jl
jae
test
mov
ss
or
push
mov
xor
sbb
dec
das
jle
int
fsts
ret
sub
stos
xchg
push
xchg
test
fwait
in
cmp
arpl
roll
mov
xchg
or
and
fstpt
xor
fisubrl
mov
mov
stos
sub
out
sub
sub
in
xchg
jb
dec
stos
dec
fstpt
cltd
jle
sbb
dec
imul
loopne
insl
push
xchg
insb
ficompl
sub
inc
xrelease
insl
inc
or
and
aaa
aaa
xchg
push
xchg
mov
adc
les
cmp
rcl
les
mov
sbb
stos
out
jno
mov
dec
add
shr
enter
mov
mov
jno
mov
jle
hlt
popf
cwtl
inc
jns
or
xchg
ret
nop
and
test
std
gs
pop
loope
pop
adc
cmp
andl
and
jo
push
pop
pop
ret
add
push
clc
lea
test
xchg
cwtl
cltd
and
inc
ja
test
rcl
insb
push
lock
lds
inc
cs
jmp
jg
pop
mov
movsl
ficomps
xchg
outsl
aam
sub
jo
lods
xor
int
call
lock
sub
sbb
in
mov
hlt
pop
ret
jecxz
outsb
pusha
pop
addl
ljmp
mov
jmp
lahf
mov
pop
movsl
cltd
xchg
shlb
bound
cld
or
iret
fnstenv
inc
lods
sub
arpl
popf
inc
push
mov
out
inc
std
sbb
dec
mov
mov
mov
add
aaa
enter
adc
ret
xor
inc
int
sub
mov
jb
pop
xchg
sub
sbb
push
shl
into
ja
decb
aad
push
sub
or
sub
inc
pop
sub
sar
jb
and
in
lcall
rcll
subl
and
mov
push
push
sqrtps
cmp
xorb
push
sub
mov
std
repz
add
mov
push
jae
and
pop
sbb
out
imul
outsl
xchg
lea
jle
lock
lods
lahf
xchg
sahf
push
test
adc
mov
fildl
mov
mov
loopne
in
mov
fimuls
fdivrs
data16
repnz
push
push
shll
loopne
loopne
pop
dec
cmp
pop
xchg
fs
lcall
out
rclb
sub
sbb
cmp
and
mov
sbb
mov
mov
addb
adc
jmp
fisttps
mov
or
sub
sub
and
xor
and
mov
stc
addb
out
mov
sub
jns
fstps
aaa
mov
negl
iret
or
xor
push
and
dec
dec
xor
mov
ret
cmpsl
les
cmp
and
idivb
dec
and
adc
idivl
or
scas
xor
js
or
push
aam
push
lret
xchg
es
mov
jno
frstor
adc
xor
in
inc
shl
and
add
in
shl
xchg
iret
test
cmc
nop
mov
xchg
mov
inc
push
mov
add
xor
lcall
jecxz
sub
adc
jp
jo
aas
cmp
xor
out
inc
sarb
repz
out
xor
mov
cwtl
jp
dec
or
aam
cmp
jmp
sbb
fdivrl
data16
or
jns
add
dec
cmp
ljmp
cmc
mov
mov
push
out
int3
movsl
cs
test
lret
adc
pusha
stc
add
pop
push
mov
sbb
ds
jbe
sub
sbbb
test
mov
out
push
cmc
cmc
push
xchg
clc
ret
loop
scas
pusha
call
sub
les
dec
adc
popf
nop
call
sub
push
dec
cmp
cmp
pop
je
movsl
movsb
pop
cwtl
pushf
xchg
es
cmp
and
mov
scas
and
negl
leave
nop
cli
into
int
jg
add
push
into
mov
sbb
and
cmp
inc
test
push
mov
cwtl
fidivrl
add
dec
or
fcoml
push
push
mov
sub
jb
mov
mov
cwtl
jmp
fst
imul
adcl
sbb
xor
pop
call
dec
pop
xchg
dec
mov
jae
aaa
mov
sub
cld
icebp
in
lret
lahf
push
jmp
add
in
mov
addr16
enter
loope
mov
jmp
rorl
mov
loope
mov
jo
or
psubsw
iret
icebp
call
xor
dec
cmp
pop
ret
or
adc
jmp
test
jge
dec
into
push
inc
or
jl
mov
jnp
paddsw
repz
test
push
dec
andb
cmpsl
pop
push
mov
xchg
pop
adc
jbe
xchg
outsb
xchg
fbstp
sti
lock
adc
jmp
and
sbb
shll
pop
inc
out
push
sbb
fistps
cwtl
cltd
aas
mov
xchg
fsubrs
jbe
out
xor
js
push
sub
xchg
pop
loopne
cmp
mov
sub
mov
jmp
test
mov
cmp
nop
pop
pop
push
loopw,pt
and
cs
mov
repz
test
out
sbb
sub
roll
xchg
cmpsl
xchg
outsl
dec
dec
or
push
pop
addb
and
lcall
or
inc
pop
mov
inc
test
into
inc
out
jnp
cmp
inc
and
push
push
jae
stos
popa
mov
push
std
movb
jg
sub
popa
mov
jo
out
mov
aaa
xchg
or
add
jne
xchg
jg
testl
pop
or
cltd
sub
lock
dec
or
xor
xor
adc
add
cltd
lock
xor
push
and
mov
add
pop
mov
add
inc
lea
cld
mov
inc
test
pop
mov
sbb
and
cmp
ljmp
jmp
cmp
mul
inc
pop
psrlw
subl
rorb
imul
pop
icebp
mov
cld
lret
movsb
dec
inc
mov
push
stos
aad
mov
xchg
je
mov
ret
mov
cmp
mov
dec
or
movsl
mov
lods
int
add
fidivrl
xchg
push
stos
mov
add
sbb
xchg
xor
sub
addb
xchg
dec
jae
add
jne
aad
addr16
jecxz
inc
out
arpl
sar
add
jle
inc
push
je
add
adc
inc
fstpt
daa
inc
mov
sbb
pop
and
sub
mov
sub
jns
movsb
stos
cmp
mov
lret
push
popa
xor
jl
push
dec
mov
fxtract
inc
xor
sub
xchg
mov
loopne
push
sbb
dec
sbb
std
test
sub
sub
jle
sub
test
sar
mov
div
push
adc
clc
add
dec
xor
add
inc
jecxz
in
xchg
cmpsl
lock
or
jecxz
jge
or
fdivs
jbe
jl
cmc
test
push
xor
jb
jmp
stos
sub
jg
mov
dec
xchg
mov
hlt
cmp
adc
ljmp
fadds
push
cmp
fidivl
push
adc
jecxz
sub
sub
push
xchg
cmp
xchg
orl
push
xor
push
fcomp
dec
loopne
mov
mov
out
aad
mov
out
push
gs
mov
cli
sbb
push
std
jecxz
hlt
lcall
repz
pusha
jne
xor
leave
cld
call
add
and
sub
stos
outsl
adc
add
test
push
dec
cmp
cmc
jg
fld
aam
pop
aaa
dec
xchg
adc
sub
repz
or
or
or
mov
jle
cmc
stos
inc
push
popa
mov
xchg
ficompl
push
mov
jae
arpl
xchg
mov
test
testb
jp
dec
cmp
pop
mov
xor
push
fcoml
in
sbb
dec
or
scas
pusha
push
dec
push
popf
out
cmp
mov
pop
shrl
mov
sahf
pop
pop
mov
adc
dec
in
stc
jge
aas
push
mov
fdivl
add
lahf
jnp
dec
das
lds
jp
mov
outsl
lods
orl
cmp
jbe
mov
xchg
lock
inc
sti
pop
jns
fwait
mov
push
pop
test
icebp
sbb
in
xchg
mov
or
jg
or
mov
adc
idivb
aam
mov
or
std
aaa
inc
lahf
and
data16
cmp
jmp
hlt
sbb
jnp
jns
xor
and
cld
mov
das
ret
xlat
addl
fiaddl
jns
ljmp
je
pushf
shll
outsb
pop
outsl
jbe
add
stos
push
mov
das
cli
cs
xor
jb
cmp
mov
xor
push
ret
push
inc
push
stos
push
rcl
mov
neg
loop
mov
xchg
xchg
lds
push
dec
out
jns
pushf
dec
or
dec
pop
repnz
push
push
lcall
mov
es
leave
pop
ret
or
inc
outsb
xchg
sbb
push
adc
cvtpi2ps
into
jle
mov
dec
rcrb
jecxz
stos
js
hlt
hlt
leave
jle
cmp
push
in
jecxz
xchg
inc
adc
nop
jecxz
mov
dec
dec
ds
adc
inc
adc
insl
lcall
jno
jne
hlt
xchg
xchg
sti
add
sub
xchg
int3
mov
test
jg
ret
enter
or
cltd
mov
jae
mov
add
or
and
sti
pop
and
or
xchg
mov
enter
mov
sbb
jle
jns
xchg
dec
nop
mov
pop
jg
adc
rolb
aas
mov
jo
xchg
adc
dec
jp
or
push
jae
add
and
push
xor
loope
dec
xor
mov
mov
jl
movsb
jp
mov
je
xchg
hlt
inc
jb
arpl
rclb
add
xchg
leave
stos
in
dec
push
popf
clc
xlat
push
fcoms
mov
es
adc
repz
inc
out
pop
or
fidivl
in
push
sbb
call
fadds
pop
ret
push
xchg
sbb
xchg
in
sbb
jecxz
dec
jg
xor
cmp
push
or
std
mov
dec
iret
mov
and
sbb
mov
gs
sub
fs
imulb
sbb
bound
xchg
add
or
testl
jecxz
out
pop
inc
adc
sub
lds
das
jmp
cwtl
xor
std
nop
nop
shrl
mov
dec
pop
xchg
lods
pop
dec
outsb
roll
jae
flds
mov
dec
mov
adc
insb
and
push
imul
negb
push
lahf
movsl
movsb
lret
xchg
daa
xchg
loopne
int
mov
cmp
scas
sarb
mov
lock
jp
adc
pushw
push
push
dec
int
cmp
test
or
loop
imul
sub
dec
mov
mov
iret
jbe
add
adc
mov
aas
scas
bound
js
sarb
dec
dec
roll
ret
push
test
mov
mov
in
and
push
sub
lds
jb
jbe
cmp
fwait
lcall
outsb
add
pop
xor
lret
adc
je
push
cmpsb
fiaddl
leave
mov
or
mov
rcll
jo
jae
push
rol
mov
pop
ja
shll
lcall
lods
decl
cli
mov
push
push
iret
jg
int
icebp
sub
les
cmpsl
push
or
loope
inc
test
mov
mov
cmp
jae
inc
ror
cmp
lret
gs
jno
or
sub
push
sbb
enter
fstpt
mov
mov
add
je
movsb
popa
push
fiadds
add
jno,pt
fwait
jge
iret
mov
pop
nop
test
fidivl
arpl
adc
mov
inc
add
pop
mov
dec
pop
jge
add
push
xchg
int
sbb
pusha
lods
repnz
pop
sbb
inc
push
add
push
mov
mov
push
or
push
rorb
iret
jb
loop
or
push
movq
hlt
test
pop
jmp
add
lahf
pop
test
dec
push
mov
or
or
adc
xchg
pop
shrb
mov
stos
shlb
das
cmp
xchg
push
fdivrs
cmc
or
add
lods
sbb
cmpsl
mov
aas
imul
lret
std
push
mov
frstor
in
in
pop
test
rcrb
rcrl
icebp
or
cli
mov
sbb
cmp
push
repnz
push
stc
sub
pop
push
fstp
inc
out
jecxz
call
insb
sahf
xchg
das
out
pmaddwd
mov
in
sbb
scas
mov
popf
or
jbe
jg
lahf
pop
cwtl
out
arpl
mov
xchg
jno
mov
lods
aas
rclb
fwait
js
push
mov
mov
loope
hlt
mov
push
cmp
sbb
push
jge
ljmp
call
jge
push
add
hlt
push
lods
jo
mov
cmp
loopne
pop
dec
cmpsb
jl
pop
movsb
xor
in
shlb
sub
out
andb
lock
test
pop
movsl
adcb
cmp
adc
jge
addr16
imulb
push
inc
in
outsb
and
xchg
inc
jle
jnp
xchg
jle
ja
or
daa
and
ss
cmp
addr16
in
cmp
incl
out
inc
daa
sbb
mov
shrl
lods
cmp
shrb
hlt
sub
jg
adc
jecxz
adc
fidivrs
rcrb
push
inc
pop
jns
jnp
mov
aad
hlt
inc
pop
sub
aaa
jl
cmpsb
pop
pop
add
popa
dec
repnz
jmp
push
jne
lret
cmpsl
sbb
ret
int3
leave
gs
lret
sub
sbb
js
pop
sbb
xor
mov
mov
push
imulb
dec
inc
push
dec
mov
mov
pop
scas
sarb
dec
jl
xchg
out
mov
imul
pusha
and
cmp
dec
and
xor
dec
scas
idivl
pop
arpl
in
sbbl
fidivl
push
cli
jp
add
imul
ljmp
xor
add
jno
jne
cmpsb
clc
arpl
out
xor
fs
push
and
mov
gs
andnps
std
mov
andl
int3
and
push
daa
aad
cmp
fisubs
stos
test
subl
iret
das
or
cltd
inc
jmp
jae
pop
pop
xchg
mov
subl
and
sbb
dec
scas
push
jmp
pop
or
imul
xor
inc
in
popf
mov
insb
hlt
outsl
popf
aas
fs
pop
lea
xchg
dec
pop
cwtl
dec
sub
dec
jl
imul
jae
mov
outsb
idivl
or
test
mov
add
rolb
in
sub
add
lret
lcall
jbe
movsl
test
cmp
fstp
pop
push
add
lret
pushf
pop
mov
std
sub
mov
rsm
push
mov
cli
insb
mov
mov
clc
inc
adc
inc
adc
jmp
and
dec
pop
js
inc
cmp
repnz
mov
xor
push
repnz
inc
js
je
call
and
pop
stos
aaa
outsb
fstps
jg
push
dec
mov
xor
mov
outsb
sbb
mov
shll
fadds
aaa
ja
cltd
push
clc
sahf
fnstenv
in
adc
mov
pop
dec
push
inc
jmp
dec
jge
and
jl
inc
mov
push
jo
push
lahf
cs
xchg
or
out
push
cwtl
push
divl
int
xchg
inc
lahf
push
std
rorl
mov
and
push
mov
out
xchg
mov
in
out
shll
shl
mov
add
adc
sbb
dec
xor
enter
add
ljmp
fwait
xchg
hlt
faddl
stos
fistps
cli
fisttps
stos
mov
mov
add
xchg
push
jns
fs
stos
jo
inc
cmp
pop
lret
cmp
cld
pop
jp
aas
jmp
sub
cs
sub
mov
mov
fimull
jbe
push
mov
xchg
push
out
adc
cmp
les
stos
add
std
xchg
mov
nop
ficoms
pop
repz
push
cmc
dec
inc
mov
in
and
cmp
imul
add
into
cmp
push
dec
mov
push
or
int
mov
cwtl
je
mov
add
add
lret
lret
push
mov
nop
or
pop
jae
fistpl
mov
rcl
es
les
add
cli
or
not
push
lock
xchg
push
test
dec
mov
rcrl
sbb
xchg
or
jno
lret
mov
fsubr
push
das
nop
ficoml
mov
push
daa
pop
insb
dec
mov
push
pop
mov
loop
mull
mov
test
icebp
cmpsb
jne
imul
jge
icebp
gs
xchg
mov
inc
dec
stos
push
or
push
sbb
fwait
mov
dec
mov
cmp
test
movsl
jnp
mov
pop
loop
jb
loop
xor
loopnew
pop
lahf
cmp
jg
cmp
cmpsb
mov
mov
pusha
lods
add
es
out
int
pusha
push
pop
fcmovnbe
imul
or
outsb
dec
movsb
or
or
enter
or
pop
imul
scas
addr16
mov
shrb
inc
xchg
movsb
mov
mov
pop
data16
rorb
add
sti
push
je
hlt
mov
sbb
mov
cmp
or
rcrl
or
jecxz
daa
push
lods
in
mov
cmp
sbb
pop
imul
and
and
jp
fdivrl
push
ds
rclb
xor
into
ds
cmp
pmulhuw
enter
mov
int
testb
jno
gs
dec
cmp
xor
das
push
jmp
inc
or
and
xchg
and
lret
push
push
push
sti
orl
popf
pop
sbb
mov
ret
jno
aam
xchg
dec
push
xlat
add
int3
hlt
orb
fdivrs
add
test
sbb
jp
pop
mov
ja
xchg
lcall
cmp
cmp
cmp
adc
jge
and
outsb
cmp
mov
dec
cld
inc
jecxz
pop
sbbl
push
push
push
ljmp
lret
clc
mov
mov
les
lea
scas
xor
jmp
pop
fdivl
in
inc
cmp
int3
pop
cld
adc
adc
or
adc
js
outsl
fcmovu
dec
cmp
push
shlb
sub
or
cwtl
add
ret
out
rclb
xor
jbe
inc
xchg
xchg
rep
fisttpl
decb
dec
orb
push
ss
pusha
pop
or
push
mov
inc
lret
outsb
mov
dec
pushl
pop
adc
movsb
insl
sbb
mov
cmp
sub
fldcw
pop
icebp
idivl
test
pop
mov
shlb
stc
pop
cltd
xor
not
sahf
fildll
mov
js
adc
je
xor
pcmpgtd
sarb
mov
xlat
stc
pushf
das
hlt
notl
shr
sub
test
aad
outsw
dec
out
mov
inc
sti
in
pushf
fs
jmp
fs
imul
jne
dec
das
add
aam
clc
dec
fnstcw
lds
int
sub
aad
mov
and
xchg
lods
cli
xlat
mov
dec
mov
mov
data16
jmp
iret
ret
xor
xchg
xchg
arpl
loope
mov
xchg
or
cmp
insl
dec
hlt
mov
mov
cmpsl
cmc
scas
dec
lds
pop
cld
sbb
or
sbb
mov
or
adc
push
in
sub
cld
jne
jg
xchg
test
and
test
lds
movsb
out
cmpsb
pop
rol
jl
xor
enter
in
std
xchg
sarb
insl
int3
ficomps
imul
fmull
lret
outsl
mov
jbe
xchg
sbb
scas
jno
lahf
inc
pop
adc
xchg
lcall
mov
pop
cmp
test
insl
addr16
test
andl
push
push
adc
cld
add
pop
mov
xor
pop
pop
js
stos
xor
jbe
scas
xchg
lds
into
fistl
shr
icebp
adcl
inc
xchg
test
imulb
aad
cmp
shlb
push
jecxz
pop
jns
out
cltd
dec
sbb
outsb
jge
hlt
push
orb
inc
fucomip
xchg
push
dec
and
fstpl
and
push
mov
xlat
aam
dec
dec
loop
fldcw
lret
mov
mov
int
cld
mov
sub
mov
test
insl
clc
sahf
xchg
arpl
inc
mov
mov
xorb
lcall
add
xor
or
out
jecxz,pt
notl
dec
xor
jmp
dec
nop
and
inc
leave
jle
cmp
ret
inc
inc
adc
inc
lahf
mov
pop
ljmp
loope
pop
jp
outsl
xchg
ja
push
fwait
adc
ss
and
cmp
sbb
dec
std
scas
push
xchg
push
inc
jb
fstl
mov
pop
xor
push
insl
jmp
xor
or
sahf
adc
dec
xchg
nop
in
out
in
stos
pusha
mov
pop
nop
popf
arpl
inc
jne
inc
cmp
pusha
aam
dec
mov
fstpl
ret
add
cli
fs
sbb
lock
cs
rcr
add
mov
cmp
movsb
cmc
fisttpll
mov
outsl
jmp
mov
ds
adc
pop
push
sub
xchg
scas
loopne
nop
imul
push
loop
or
push
in
push
and
clc
adc
or
cmc
out
xchg
add
test
mov
clc
adc
shlb
add
fstpl
or
cli
push
sarl
mov
add
inc
dec
dec
aas
fmuls
pop
or
out
scas
sub
inc
fisttps
hlt
inc
out
pop
les
aaa
dec
adc
jb
fistpl
fwait
xchg
or
jge
sub
test
test
mov
lds
sbb
mov
icebp
inc
icebp
fsub
test
sbb
or
xchg
xchg
nop
mov
adc
js
pop
adc
mov
pop
sbb
fidivrs
sarb
push
sub
ret
sbb
fs
add
jns
rcrb
outsl
cwtl
jle
das
scas
outsb
daa
mov
inc
cmp
push
dec
push
xchg
xchg
psubsw
inc
stos
mov
mov
cmp
ja
mov
and
pop
xchg
mov
xacquire
dec
sarb
popa
xor
mov
sub
inc
cmp
addr16
inc
lods
add
push
mov
jae
jns
add
or
inc
imul
jno
jecxz
mov
gs
push
out
push
mull
xchg
push
or
jae
int
push
jbe
cmp
or
mov
pop
ret
jmp
push
sub
scas
pop
mov
pop
sub
push
pop
imul
test
add
jle
mov
cmp
imul
xor
outsb
orb
mov
scas
scas
and
xchg
adc
add
mov
xor
sub
inc
leave
hlt
sub
xor
adc
gs
sbbb
ret
aas
inc
pop
dec
divb
int3
scas
pushf
sbb
dec
sub
add
out
dec
insb
mov
dec
fnstsw
stos
fidivs
push
lcall
jmp
and
addb
fcompl
inc
mov
pop
jp
mov
mov
test
jb
cli
cmc
mov
lock
cmp
sbb
xchg
shll
inc
lret
cmc
sub
lret
jnp
xchg
add
mov
out
pop
pusha
jecxz
dec
arpl
mov
arpl
sub
sbbl
inc
repnz
loopne
jbe
arpl
xchg
repz
rcl
xchg
cli
cmp
bound
dec
and
mov
xlat
out
gs
out
loopne
cmpl
mov
jno
adc
add
pop
pop
xchg
xchg
dec
inc
sub
shll
mov
cmpsb
inc
jo
pop
fst
xorl
jb
adc
sahf
sahf
cmp
scas
sbb
in
mov
lds
mov
sub
jne
or
pop
fnstsw
mov
jne
xchg
leave
xchg
shlb
push
icebp
dec
mov
ret
inc
popa
lcall
xor
inc
pop
cmp
mov
sub
sub
cmpsb
jo
pop
and
adc
out
jo
into
stos
xchg
xchg
cmp
orb
divb
in
mov
dec
push
jmp
push
lods
das
adc
inc
xor
inc
lret
mov
cs
dec
jp
clc
in
bound
sub
imul
divb
leave
adc
cli
in
scas
dec
clc
pop
stos
dec
dec
mov
inc
dec
repnz
jp
inc
loop
in
mov
pop
xchg
test
in
push
arpl
sbb
sub
icebp
jecxz
lcall
scas
ja
cmpsb
hlt
xchg
mov
lds
mov
int
adc
cmp
movsb
inc
insl
xchg
cmp
mov
mov
in
pop
or
adc
lret
mov
sub
dec
ljmp
jnp
insb
mov
rcrl
mov
fistpl
es
in
dec
repnz
insb
cmp
push
sbb
jecxz
scas
push
adc
pop
lea
out
sbb
into
or
test
dec
in
nop
xchg
es
int3
add
adc
adc
mulb
leave
cwtl
out
push
daa
dec
and
ja
lret
and
xor
cmp
ja
mov
jae
aad
sar
jne
add
outsl
dec
xlat
cmc
cmp
sub
dec
pop
lret
pop
nop
fs
xorl
js
lret
dec
lea
push
add
rclb
bound
or
mov
sub
add
inc
push
cmp
cs
rclb
mov
push
in
xlat
adcb
movsb
xor
div
leave
push
cmp
mov
sbb
or
pop
mov
sub
lcall
sub
mov
clc
int3
mov
mov
sbb
pop
shrl
mov
adc
inc
pop
jns
negb
cmp
cmp
in
cmpsb
mov
hlt
cmpsb
pop
jg
xchg
jns
mov
ds
mov
lahf
xor
pop
mov
mov
ret
and
add
jo
addr16
jb
pop
push
sahf
push
cmp
dec
ljmp
pusha
mov
push
mov
sahf
xlat
rorl
cmpsl
ja
fistl
js
add
pusha
mov
std
lods
and
dec
or
add
inc
aad
mov
lds
xchg
in
ret
sub
dec
pop
dec
sub
rol
mov
push
xchg
loop
jl
into
cli
cwtl
mov
mov
mov
pusha
das
dec
jp
fstpl
sahf
jo
lods
cmp
test
jb
pop
addl
adc
xor
mov
loop
pop
mov
lret
in
sarb
outsl
pop
cli
loopne
pop
push
mov
push
mov
int
adc
popa
repz
loope
stos
mov
or
scas
cli
pop
nop
or
fs
xchg
mov
out
inc
icebp
rcl
mov
add
lahf
and
insl
and
pop
and
mov
mov
iret
out
mov
mov
mov
mov
rcl
sbb
sub
sbb
inc
mov
jnp
daa
popf
jg
jg
iret
push
setae
test
xchg
dec
mov
or
adc
out
enter
xor
testb
pop
stos
hlt
sub
test
fs
loope
adc
mov
lcall
pop
vpcmpeqw
adc
pop
and
lds
repz
jnp
add
cmp
or
lds
imul
or
dec
xor
das
jb
or
mov
fucompp
popf
add
mov
pop
sbb
dec
jp
and
xor
shrb
adc
popf
adc
add
mov
xchg
sub
fwait
subb
push
push
add
mov
jns
imul
cmp
cltd
jl
xor
cmp
notl
pop
jecxz
mov
inc
mov
pop
ret
icebp
lock
jbe
pop
js
scas
cmp
stc
mov
xorl
adcb
jmp
mov
jns
cmp
ja
xchg
sub
xchg
idivl
insb
rcrl
test
gs
push
cld
or
inc
in
hlt
xchg
sahf
loopne
cmpl
mov
or
mov
repz
cmp
or
mov
jo
cmp
adc
stos
push
bound
pop
push
jns
push
sbb
mov
push
pop
stc
jge
xor
in
fildll
cld
jbe
leave
jns
cs
pop
leave
dec
inc
push
push
adc
sti
mov
mov
inc
adc
jp
test
push
mov
push
ds
xor
push
jp
add
leave
mov
dec
stos
cmp
xchg
ja
leave
jmp
stos
xchg
fs
xor
scas
popa
cmpsb
mov
mov
cs
inc
dec
lods
scas
out
inc
aaa
mov
mov
inc
ret
rcll
cmp
mov
out
or
ljmp
mov
pop
add
xchg
andl
js
jne
mov
mov
cmp
jae
or
inc
dec
jg
sbb
or
insl
dec
call
ficompl
test
xchg
mov
sbb
mov
mov
sbb
mov
adc
sbb
outsl
gs
pop
cltd
mov
nop
cmp
jle
incl
mov
test
adc
or
in
push
dec
pushf
clc
push
lds
pop
jns
mov
lcall
push
push
jno
dec
leave
pop
and
je
cli
mov
add
push
inc
and
inc
addl
mov
shlb
shrb
sub
ja
mov
and
push
jecxz
aaa
xchg
and
xor
imul
test
repz
rorb
pop
lret
aaa
and
sub
cmp
xchg
movsb
sbb
lock
push
leave
lds
or
jecxz
icebp
mov
jmp
push
xchg
pushf
stos
aaa
mov
or
mov
mov
in
mov
sbb
pop
dec
lods
jb
cs
testb
jecxz
and
sbb
fcoml
mov
cli
mov
mov
mov
mov
ljmp
jg
push
adc
xchg
sbb
in
inc
out
sahf
jo
or
inc
cmc
sahf
xchg
sub
xlat
sub
or
cmpsb
xor
add
test
cli
jo
push
repz
sbb
mov
xlat
ffree
and
xchg
xchg
pop
jno
js
or
sub
push
adc
cli
cs
mov
inc
xchg
sub
mov
cwtl
fcoms
or
lret
xchg
push
mov
or
or
mov
ret
add
jae
push
sub
pop
aam
scas
clc
enter
sbb
inc
adc
cmp
cmp
mov
test
arpl
mov
lret
xchg
add
or
loop
sti
bound
sub
fdivrs
cld
mov
decb
jg
in
fiadds
aas
dec
pop
cmp
jb
cmp
popa
out
popa
pop
je
jne
add
mov
jge
xor
or
cs
aaa
jbe
mov
push
popl
cmp
mov
adc
shr
adc
lods
jb
frstor
adcb
xor
ret
xchg
lods
add
mov
push
add
jns
jle
push
notb
xor
ret
repnz
fmuls
mov
jmp
fidivrl
adc
mov
ret
add
adc
mov
inc
outsb
cmp
jbe
hlt
add
out
inc
test
lods
jae
mov
repz
xchg
inc
jecxz
subb
cltd
repnz
out
daa
in
add
mov
int
lahf
or
rcr
rcr
fstpt
mov
frstor
outsl
xchg
cmp
aas
inc
and
mov
in
insl
lcall
fsts
push
mov
cld
sbb
push
pop
add
cwtl
inc
rcrl
lcall
pop
movsl
add
dec
cmp
mov
int
jge
movsl
sbb
imul
cmp
pusha
mov
scas
int3
mov
dec
in
dec
or
aam
mov
push
add
repz
iret
outsb
outsb
jbe
cwtl
ds
lret
aas
xchg
pop
out
inc
fs
call
add
ud0
push
jl
pop
jbe
ret
xorl
pushf
jno
mov
xchg
iret
jle
je
push
stos
or
or
movsb
sbb
sar
movsl
jbe
popf
out
bnd
mov
mov
xchg
lcall
stos
add
inc
cmp
movl
fiadds
imul
mov
jbe
fdivs
fbld
or
pusha
xor
out
adcb
rolb
pushf
les
insl
add
ja,pn
insl
xchg
lods
cli
aaa
mov
jle
cmp
popf
cmp
cli
or
xor
stos
shlb
push
das
mov
cwtl
xchg
pop
sbb
mov
imull
adc
mov
mov
mov
iret
fs
leave
test
push
jb
mov
stos
mov
ljmp
shl
call
sbb
scas
cmpsl
xchg
sahf
sub
pop
or
and
scas
jns
jo
sarl
push
push
and
les
sbb
pop
out
sub
lret
shlb
xchg
or
jbe
jl
enter
fst
mov
int3
loopne
pop
cmpsl
or
cmovs
inc
push
mov
or
and
pop
sarl
movsl
pop
dec
daa
outsb
scas
jecxz
aam
lret
or
clc
pop
movsb
ret
enter
out
dec
test
dec
ss
iret
mov
mov
sahf
and
arpl
cs
inc
jle
mov
sbb
hlt
inc
xchg
lahf
push
jns
mov
or
out
xor
inc
xor
or
mov
fsqrt
shrb
push
lods
lea
xlat
mov
lcall
dec
jno
sbb
ret
jmp
cs
out
xor
aad
mov
pusha
iret
xor
mov
loopne
addr16
sub
xchg
mov
fdivrs
mov
insb
add
xchg
ljmp
cmovb
jg
ja,pt
adc
xor
jmp
fwait
mov
scas
lea
fnstcw
or
pop
mov
xlat
xor
fwait
xor
jg
movsl
test
js
leave
sub
inc
pop
or
ret
daa
aam
int
xchg
ljmp
xchg
jns
std
xorb
sbb
or
mov
test
and
jb
lret
cld
pop
pop
cmpsl
inc
dec
fbld
cmc
test
adc
xchg
stc
dec
jnp
pop
xor
mov
loopne
and
fldcw
lock
shll
dec
stc
inc
je
das
xchg
mov
ret
jecxz
mov
fidivrs
lds
jle
xchg
nop
mov
aam
mov
outsl
jecxz
pushf
es
mulb
ret
sti
sub
rol
loope
ficomps
or
dec
sbbb
movsb
call
testb
or
imulb
cld
stc
popf
jmp
cmp
dec
pop
push
mov
inc
roll
push
fdivrs
or
dec
xchg
sbb
mov
fmull
inc
jp
dec
sbb
push
pop
shr
add
add
lods
jns
fdivrl
xlat
int3
dec
mov
incl
mov
and
mov
mov
dec
sub
mov
dec
mov
aaa
pop
mov
mov
xchg
jno
outsl
mov
repz
outsl
mov
test
iret
shlb
push
aam
mov
dec
call
pop
mov
mov
call
addb
jo
iret
push
or
shll
add
cmpsb
mov
in
loopne
cltd
fdivr
or
mov
popf
shll
fcmovb
dec
fs
ficoml
mov
mov
jno
cmpsb
cmpsl
xchg
adc
lcall
lret
xor
mov
jle
sub
xor
and
jo
ljmp
loope
pop
and
push
stc
ret
icebp
fcomps
ss
in
adc
and
imul
jl
adc
mov
stos
mov
jg
movsl
push
jns
inc
xor
xor
imul
sahf
loop
sbb
je
int3
inc
test
dec
cmp
xor
cli
cmpsb
mov
leave
sbb
leave
sbb
jno
lea
mov
pop
cwtl
xor
cltd
mov
fwait
sub
pop
mov
pop
xchg
mov
aam
repz
subl
ret
sbb
jae
test
fsincos
push
cmp
mov
sti
addb
je
mov
arpl
int3
push
push
fwait
and
and
hlt
sarl
fsubp
stc
or
pop
popf
inc
xchg
shlb
sub
les
push
jae
mov
push
pop
and
arpl
sbb
fldt
and
xor
or
jne
ja
fldt
lret
xor
or
in
xor
dec
fwait
pop
inc
negb
push
add
loop
and
test
pop
mov
addps
xlat
sub
cmp
adc
push
xchg
mov
mov
sbb
popl
push
loopne
test
sbb
imul
inc
fmuls
in
js
cltd
dec
dec
stos
push
js
mov
je
mov
iret
inc
xorl
scas
sbb
pop
jnp
scas
inc
sbb
or
push
adc
and
xlat
les
leave
push
outsb
jno
mov
inc
inc
xchg
dec
nop
xor
pop
push
sbb
std
pop
outsl
in
and
rolb
sub
mov
cltd
jo
or
insl
add
adc
ja
cmp
or
or
aad
in
dec
mov
sbbb
fisubrs
data16
aas
andb
lods
jg
mov
out
lahf
loopne
xchg
or
and
or
mov
sti
mov
cwtl
nop
stos
outsb
cs
mov
cmp
fidivrs
cli
xchg
mov
in
inc
fdivrp
in
fisubs
and
jmp
push
xor
and
aam
ret
push
sbb
sub
and
stc
int3
std
jmp
dec
mov
das
inc
pop
enter
lret
mov
cmc
mov
pop
dec
outsl
jle
push
mov
bound
pop
mov
idivb
stos
xchg
xchg
lcall
jb
test
leave
cmpsl
inc
xor
stos
mov
inc
mov
mov
lcall
add
or
push
jns
add
or
or
iret
push
mov
add
lret
lock
roll
es
popf
stos
xchg
xchg
in
mov
aam
xchg
pop
push
test
or
scas
shll
ljmp
in
test
sub
pop
arpl
pop
cmp
loop
adc
data16
inc
ret
jne
test
pop
or
fstpl
cmp
stos
push
cmc
cld
stc
push
adc
fst
cli
inc
mov
xchg
push
mov
sbb
fisubrs
xor
jecxz
aam
cmpsl
insb
out
cmp
lock
mov
aaa
nop
push
add
pop
jge
notb
push
pop
sbb
add
les
sub
out
dec
or
test
mov
xor
sahf
fidivrs
mov
pop
loopne
pushl
pushf
jmp
sub
enter
iret
dec
dec
sahf
mov
into
xchg
in
shlb
loop
das
lcall
sarl
popf
es
andb
ret
push
push
dec
test
test
dec
fildl
dec
aad
sahf
mov
and
in
push
sbb
movsl
scas
mov
sbbb
loope
xchg
fiaddl
lahf
loopne
jl
add
jle
add
push
fdivl
add
rorl
push
or
out
sbb
push
popa
lods
pop
mov
fs
sub
jb
orb
aas
das
sub
push
movsb
cmp
lods
das
cmp
loop
shll
test
mov
movsl
lods
jecxz
ss
cmpsl
and
lock
or
xorl
scas
mov
cmc
out
loopne
add
inc
or
and
push
int
mov
dec
xor
pop
jb
mov
cmp
jo
fldt
cmp
mov
rolb
sub
int
mov
sub
sub
cli
int3
xor
sbb
into
cmp
fmulp
push
and
testl
test
cmpsb
dec
mov
dec
mov
mov
scas
testb
repnz
mov
cmc
xor
dec
repz
mov
dec
scas
lock
std
test
jno
dec
xor
pusha
mov
add
pop
ficoms
popa
sub
mov
mov
ret
in
les
mov
xor
aam
sbb
into
in
jo
int
cmp
insb
or
rcl
ds
shl
cs
je
iret
cli
mov
adc
push
fsubrl
pop
adc
cmp
mov
pusha
cld
hlt
lods
fiadds
sub
mov
jle
popa
je
inc
ds
loop
into
sahf
sbb
sbb
push
fstp
push
mov
clc
bound
cld
jl
pop
loopne
sbb
movsb
sahf
int
nop
loope
ljmp
push
imul
sub
cmp
push
jae
cmp
jp
and
into
jnp
data16
jmp
lahf
mov
stos
and
arpl
outsb
mov
popa
xchg
lret
nop
mov
mov
pop
push
mov
push
jbe
add
sahf
testb
dec
jp
cmc
or
addr16
mov
xor
movsl
call
sti
daa
clc
sbb
mov
aam
mov
adc
movsb
orb
dec
cmovns
in
outsl
clc
dec
pop
sub
inc
fnstsw
pop
xchg
fists
mov
iret
mov
out
pop
adc
rcrb
mov
cmp
inc
and
pop
outsl
loopne
push
rorb
loope
int3
loop
or
sub
mov
out
pusha
fmull
outsl
xchg
push
mov
inc
in
jge
and
lcall
nop
lret
int
call
roll
in
fisubrs
neg
pop
push
pop
bound
dec
sub
mov
cltd
add
cmp
mov
add
cld
lea
negl
jp
mov
and
negl
xchg
cmp
into
insb
jg
imul
mov
adc
lahf
insb
shll
push
jmp
sub
cmpl
sub
cltd
outsb
mov
push
out
les
mov
add
fildll
pop
fnstcw
bound
dec
xchg
xor
mov
pop
xchg
jne
imul
dec
xor
les
stc
ljmp
decl
imul
rcrb
xor
or
or
mov
pop
test
ficoml
mov
addr16
clc
mov
cmp
mov
movsl
pushf
pusha
mov
leave
jl
mov
mov
lods
sbb
setge
xchg
mov
aas
test
inc
pop
pushf
int3
dec
movsb
ret
inc
push
dec
fs
add
add
sub
imull
and
jecxz
or
data16
xchg
jns
jno
je
cmp
xor
pop
incl
mov
ja
sti
mov
in
cmp
jecxz
mov
aam
fbld
jb
adc
or
sbb
and
sub
mov
enter
inc
pop
add
mov
xchg
or
inc
sahf
dec
push
mov
out
stos
fnstcw
mov
out
shll
or
sahf
in
adc
in
es
jne
mov
add
push
pop
aam
push
bound
push
mov
xor
std
mov
mov
cwtl
daa
push
dec
adc
sbb
das
or
gs
sarl
cmp
cld
push
add
adc
pushf
inc
cli
cltd
mov
or
ficoms
roll
sub
lods
int
mov
jecxz
rorl
jp
mov
sti
push
enter
or
gs
adc
xchg
add
arpl
inc
cmp
inc
mov
call
sbb
out
mov
pop
cmp
mov
pop
out
mov
cmpsl
xor
mov
repz
fdivp
pop
pushf
stos
into
sub
imul
push
xor
and
lods
stc
mov
fwait
leave
ds
dec
mov
add
mov
adc
xchg
and
dec
xchg
pop
adc
int
dec
pop
es
scas
in
stos
xor
inc
xchg
cmpsb
sbb
shlb
pop
sub
mov
and
inc
mov
add
loop
adc
mov
and
lock
cmpsb
sbb
pushf
ds
cmp
mov
mov
repnz
outsb
iret
sarb
lock
mov
mov
and
jb
sbb
pop
stos
mov
insl
lds
hlt
mov
into
test
notl
mov
cmp
shll
je
pop
icebp
sbb
adc
pop
add
ja
dec
mov
iret
popf
stos
jo
adc
out
popa
int3
cmpl
popf
sti
or
popa
outsl
imul
movsb
mov
scas
lret
mov
mov
xlat
add
pushf
jmp
in
ret
repnz
push
push
push
ss
xchg
pop
or
and
cmpsl
cmpb
sub
xlat
jno
sub
jae
iret
and
out
sub
inc
xchg
xchg
inc
leave
cmpsb
loopne
imul
out
xor
push
hlt
scas
push
std
cs
into
or
cmpsb
mov
pop
mov
adc
bt
inc
mov
push
or
fdecstp
dec
mov
push
push
mov
mov
out
add
add
mov
test
stos
jo
sub
testl
lret
xlat
rcll
inc
movsb
xor
adc
icebp
lods
jb
sbb
sbb
jno
pop
lods
cmp
das
sub
rorb
mov
xchg
jne
sub
sbb
fs
loop
mov
push
dec
sub
roll
mov
xor
out
sbb
roll
out
ret
or
cli
add
jg
pop
xor
sbb
xchg
sub
adcl
idivb
push
lock
add
ret
lea
inc
in
cmpb
xchg
adc
stos
lahf
dec
lret
negb
jecxz
movsl
jge
es
into
sbb
je
or
icebp
pop
lahf
mov
mov
out
mov
or
jp
xor
push
mov
push
jl
jg
pop
mov
loopne
and
push
jmp
out
push
push
dec
cmp
sbb
repnz
sub
sub
fmuls
fnsave
cmp
jg
roll
inc
inc
cli
mov
ret
test
jle
std
in
imul
add
mov
xchg
shr
pop
and
mov
inc
mov
scas
test
pop
aad
icebp
pop
aad
negb
cld
insl
imul
lret
mov
xchg
lahf
cltd
imul
push
and
xor
pop
cwtl
je
ret
mov
mov
or
push
sub
jb
push
in
jb
inc
incb
stc
daa
xchg
stos
xchg
lods
jb
movsb
out
insl
jle
cmp
xor
into
iret
cmpsb
adcl
fmull
mov
mov
add
movsb
dec
pop
sbb
fcmovnbe
bound
dec
fadds
sbb
add
faddl
add
add
fdivs
jns
cli
out
xor
mov
pop
pop
pushf
xchg
in
lds
cmpsb
cmp
jae
leave
mov
sbb
insl
jecxz
cmp
mov
mov
mulb
negb
cltd
pcmpgtb
dec
mov
or
and
dec
shlb
mov
sbb
or
popa
or
es
int3
loop
inc
dec
push
cltd
jg
fwait
test
frndint
mov
cmp
xchg
dec
push
sub
data16
mov
enter
sahf
stos
xchg
xchg
jecxz
or
push
out
xor
dec
cmpsb
nop
sub
inc
sbb
add
jbe
mov
test
in
test
insb
fstpl
push
sbb
jne
scas
inc
mov
sbb
mov
sarb
hlt
inc
mov
sti
and
sub
pop
dec
or
into
sub
push
jmp
fldt
dec
repnz
add
push
mov
ret
iret
or
in
scas
outsb
xchg
or
aam
pop
sarl
jge
aam
adc
mov
enter
fwait
stc
outsb
push
xchg
aam
add
ret
stos
xor
mov
pop
imul
or
aad
jo
movsl
pop
lcall
int
add
mov
and
push
and
popa
pop
adc
pop
cmpsl
addr16
sub
jl
js
vshufps
sub
repnz
decb
das
mov
xor
pop
dec
mov
mov
jns
cmp
loopne
stc
incl
push
or
sbb
ret
xor
leave
sbb
andl
hlt
cmp
or
out
xor
outsb
aas
jo
repz
repz
sbb
das
xor
incl
push
cwtl
enter
imul
pushf
sar
lea
cmpsb
mov
mov
addr16
push
jmp
mov
add
cld
pop
pushf
lahf
lahf
jae
hlt
daa
and
mov
lcall
cmp
clc
jb
xchg
add
pop
inc
or
or
push
mov
notl
add
aad
sbb
xchg
dec
cltd
dec
unpcklps
popf
mov
test
push
arpl
push
mov
dec
iret
addl
sub
or
mov
sub
lods
in
mov
sub
mov
sbb
ss
add
push
pushf
js
lea
xchg
jge
pop
repz
and
loop,pt
xor
xchg
pop
sub
daa
push
mov
lahf
scas
jle
sub
hlt
std
push
sbb
mov
inc
jge
jns
movsl
sub
dec
mov
pop
shrl
sbbl
jg
sub
adc
in
jmp
and
cltd
sub
dec
daa
mov
push
inc
push
data16
imul
mov
pop
push
and
out
inc
fcomip
hlt
movsl
orb
rorb
loopne
xorb
out
and
in
push
inc
push
jb
fildl
jle
pop
xor
fucom
dec
xorl
jp
std
dec
lcall
sub
cmpsb
add
adc
jo
lods
fsub
push
mov
xchg
scas
sbb
pop
push
xchg
mov
enter
in
cltd
xor
cmpsl
add
xor
xchg
push
lahf
mov
hlt
cmpsb
bound
push
push
inc
xchg
repz
mov
push
popf
fwait
call
in
xchg
cltd
loop
dec
lods
in
enter
push
ljmp
or
cmpsb
push
jl
sbb
fwait
and
mov
pop
arpl
rorb
mov
xchg
push
imul
insl
push
push
xchg
fmuls
or
cmp
enter
enter
xor
inc
bts
mov
out
push
xchg
dec
cld
mov
lcall
cmp
dec
pop
dec
cmpsl
sub
idivl
cmc
adc
xchg
mov
movsl
les
cmp
cmpsb
lods
mov
iret
sub
lea
cmp
xor
sti
jbe
cmp
js
divb
xchg
cli
jecxz
in
inc
nop
cmp
jp
das
mov
inc
cwtl
aaa
mov
sub
push
cmp
mov
das
ret
outsl
loopne
jns
daa
bnd
ljmp
daa
xor
cmp
stos
cmp
mov
imul
add
ljmp
sbb
dec
or
sbb
add
cltd
pop
add
lret
fnsave
inc
aad
or
add
jnp
sbb
push
dec
inc
out
in
iret
aad
fsubrs
mov
std
xchg
push
roll
aad
and
and
enter
add
jns
mov
cmp
fcomps
vpsubb
repnz
pop
or
push
sbb
mull
jns
mov
pop
fsts
xchg
mov
call
push
shl
ror
and
dec
mov
sbb
cs
inc
movsb
pop
cmp
cmp
lea
aaa
mov
jmp
pop
jecxz
xchg
bound
or
into
mov
sub
push
push
push
pop
push
push
push
fmull
sub
mov
push
daa
dec
in
mov
enter
and
mov
pop
xchg
aas
lea
jbe
add
dec
push
jmp
xchg
xor
mov
sbb
dec
flds
cmpsl
iret
inc
mov
mov
lock
push
jns
lods
pop
or
pop
add
dec
pop
sar
jg
mov
addl
std
mov
jae
or
test
jge
ja
enter
xchg
mov
call
add
cmp
or
js
out
dec
and
insb
or
jmp
add
push
push
pop
pop
jno
mov
aad
or
cmp
in
mov
shrb
out
push
mov
sub
adc
sub
aam
xorl
pop
sub
pop
jmp
dec
icebp
add
adc
ficoml
pusha
movsl
cmp
push
bound
roll
fcoms
mov
pop
xchg
mov
push
xor
xchg
je,pn
in
or
rclb
call
or
fwait
mov
sub
xchg
int3
mov
inc
ljmp
sub
push
pop
test
data16
test
push
out
mov
roll
xchg
dec
mov
mov
and
mov
mov
inc
sub
out
insb
insb
xchg
in
cltd
repz
jmp
adc
loop
sub
mov
jae
ljmp
in
push
fwait
addr16
xchg
sbb
sbb
nop
popa
adc
std
mov
inc
testb
adc
stos
mov
imul
in
dec
jns
add
adc
push
jbe
pusha
xor
ret
in
out
call
fdivrl
sbb
push
sub
and
pusha
imul
iret
pop
xchg
add
fbstp
jg
push
leave
sbb
inc
test
scas
aaa
xor
adc
push
mov
clc
dec
fcompl
popa
repnz
mov
movsl
nop
bound
mov
mov
addr16
mov
adc
jmp
cli
repz
pop
cmp
pop
adc
idiv
movsb
in
imul
adc
pop
jne
mov
adc
out
icebp
sbb
filds
mov
shlb
push
xchg
in
sub
or
push
aad
xorb
pop
insl
push
lcall
dec
xorb
in
jae
sbb
lods
add
xor
movsl
xchg
xchg
fisttps
push
cmp
push
jecxz
setg
jns
or
adc
repz
mov
xchg
out
lds
or
cmp
fiaddl
dec
test
and
out
iret
adc
cmpb
jns
pop
dec
cltd
add
xor
popl
cmpsl
addr16
xchg
iret
out
dec
jne
rolb
cmpsb
push
mov
push
and
mov
icebp
add
adc
scas
mov
jmp
mov
mov
inc
and
pop
or
into
jo
jmp
test
insb
insl
pop
test
mov
scas
xchg
sbb
inc
adc
loop,pn
and
ljmp
insb
pop
outsb
jnp
push
cmp
pop
dec
pushf
mov
xchg
cmp
popf
scas
out
cmp
push
jecxz
inc
pop
cmc
cmp
adc
xor
mov
fs
inc
sub
dec
sbb
adc
sbb
scas
es
dec
dec
es
pop
stc
pop
cmp
iret
jns
arpl
or
imul
mov
pop
cmc
jbe
mov
sbb
mov
sub
and
dec
xchg
jnp
add
ds
or
stc
push
sti
add
push
sbb
push
sub
aas
fsubr
jae
mov
push
and
test
mov
adc
loope
xchg
xlat
or
in
aaa
loopne
test
mov
add
clc
mov
and
dec
mov
in
shrb
inc
rol
jbe
pusha
andb
sbb
dec
mov
dec
dec
jmp
or
cs
int
sarl
test
cmp
mov
out
ret
pop
push
sbb
insl
push
ss
pop
jmp
mov
adc
sarb
int3
subl
push
cmp
or
adcb
out
test
inc
mov
mov
aas
sub
jo
adc
cmp
pop
or
push
sbb
scas
mov
push
leave
xchg
inc
sub
push
inc
mov
js
dec
lret
or
add
jns
stc
outsb
enter
lret
xor
dec
adc
sub
mov
lret
and
xor
xorl
imul
nop
out
mov
push
ds
cmovne
dec
dec
aad
scas
ficoml
cmp
mov
int
icebp
cwtl
icebp
pop
rorb
data16
or
or
or
lea
dec
mov
pop
test
push
lock
out
xchg
xchg
push
repnz
mov
clc
and
rcr
pop
les
cmp
icebp
mov
jp
add
loopne
lret
loope
push
addl
aaa
insl
xchg
jle
loopne
dec
mov
out
mov
cwtl
clc
imul
aam
push
mov
mov
aad
xchg
jge
fsubp
mov
ss
lret
test
xchg
hlt
pop
push
fildll
inc
ljmp
sub
mov
dec
push
and
insl
mov
sub
sbb
pop
or
aaa
shlb
movsl
mov
inc
and
testb
push
iret
push
loopne
aas
fsubrs
sbb
fisubs
and
sub
pop
or
in
or
out
pushf
xchg
into
test
jl
mov
js
adc
mov
leave
fisttps
push
call
andb
ret
mov
jne
outsb
and
xchg
cmpsl
mov
aad
cmp
sbb
fisttpll
or
sub
ret
mov
movsl
fsubrp
ljmp
mov
stos
pop
repz
mull
lds
mov
cmc
ja
cli
sub
mov
insb
faddp
loope
adc
and
and
mov
xchg
adc
imul
mov
ss
rcll
push
or
mov
sbb
cmovae
dec
dec
in
cmp
imul
mov
mov
arpl
mov
xchg
mov
push
sti
mul
mov
inc
insl
dec
push
xchg
aad
mov
mov
ss
roll
call
mov
js
push
mov
insb
arpl
jbe
push
push
mov
aaa
sub
ret
sarl
xor
xchg
lds
int
push
pop
ss
cs
mov
outsl
popa
je
sar
mov
mov
sbb
mov
out
push
pusha
inc
sbb
rcrb
scas
mov
inc
fwait
iret
test
cld
push
mov
jmp
pop
and
sbb
mov
ret
xor
loopne
cmp
pushf
sbb
push
cltd
outsb
sub
push
cmp
aam
jg
jns
or
test
adc
lret
ret
fs
xchg
pop
mov
inc
mov
jle
int
sti
jg
pop
cmc
or
outsl
iret
push
cltd
jne
movsl
sub
mov
adc
sbb
jmp
insb
mov
jecxz
and
push
adc
xchg
out
mov
push
inc
loop
push
dec
mov
pop
push
out
push
imul
xchg
push
iret
add
push
pop
jl
arpl
orb
movsb
push
orl
loope
ss
test
inc
mov
sbb
push
pop
in
aad
gs
in
jns
shll
mov
mov
mov
jno
push
aam
push
fld
mov
cli
or
inc
imul
cltd
mov
cmp
or
mov
adc
mov
jmp
cmp
add
push
stos
into
jmp
or
jns
cmpsl
ja
xor
in
pop
movsb
jo
lret
add
push
fmul
and
dec
insl
scas
mov
xor
rol
adc
rorl
dec
push
sub
test
xlat
xchg
pop
pop
dec
repz
adc
dec
inc
pushw
mov
push
mov
subb
mov
mov
in
fwait
sbb
aad
lods
dec
pusha
nop
and
in
incb
mov
dec
cmp
xor
jge
hlt
pop
cmpsb
dec
hlt
pop
daa
and
xchg
testb
jnp
or
aam
adc
shll
outsb
pusha
dec
nop
movsl
xor
cmpl
mov
repz
idiv
add
jecxz,pt
pop
in
movsl
bound
cld
pop
sub
mov
push
add
xchg
xor
out
cs
out
test
lcall
or
ja
mov
aaa
out
mov
lcall
xor
mov
pushl
jnp
aam
mov
mov
in
pop
adc
fmuls
jae
inc
pop
dec
xchg
or
xchg
repz
pop
sti
lcall
xchg
popa
xlat
push
cmc
lret
pop
xlat
outsl
and
fcoml
inc
aaa
sbb
je
sbb
insl
ret
dec
pop
lahf
xor
test
loope
mov
test
or
idiv
cmpsl
out
jo
xchg
dec
dec
notl
loope
lret
dec
pushf
loope
in
pop
push
lock
fs
in
or
pop
jge
or
jmp
mov
mov
add
xor
lods
pop
push
sbb
shrl
jbe
cld
repnz
pop
or
out
mov
mov
add
dec
js
es
daa
ds
iret
cwtl
out
jmp
ja
pop
push
je
push
in
sbb
mov
xchg
adc
fsubl
or
or
jge
insl
and
pop
daa
hlt
mov
xor
mov
stos
and
dec
rorl
fidivrs
mov
add
lahf
stc
loope
inc
push
xlat
sbb
test
sub
cltd
stos
pop
fildl
push
hlt
sahf
addb
bnd
pop
push
out
fcoms
sar
push
jle
jl
sub
push
rep
aam
push
and
fucom
out
repnz
push
loope
jae
cmp
outsb
fsubrs
mul
inc
leave
jb
add
mov
ljmp
into
out
sub
xor
push
and
mov
sbbl
aad
lock
cmp
sahf
je
cmp
push
pushf
fstl
shll
ret
std
push
insb
dec
cmpsl
pop
mov
mov
mov
ljmp
add
ljmp
and
and
dec
ret
outsb
int3
add
dec
je
xor
sub
fldl
pop
push
rcrl
stos
add
scas
adc
or
jge
push
sbb
fisubs
pop
loop
cmp
cmp
mov
cmpsb
cmpxchg
dec
adc
add
clc
xchg
push
pop
lahf
out
mov
xchg
nop
and
pop
add
xchg
fsubs
inc
and
int
out
js
divl
std
pop
push
sbb
mov
outsl
mov
inc
pop
inc
jg
sub
rcrb
pop
pop
popa
jmp
xchg
sbb
mov
testl
loope
or
and
stos
dec
insb
bound
out
cmp
cld
test
sub
leave
stc
in
je
into
hlt
jno
cmp
bound
call
xchg
in
fstpl
and
mov
adc
dec
out
sub
ret
push
cwtl
in
push
in
shl
fidivl
shlb
add
or
icebp
mov
or
mov
xor
push
lods
mov
dec
test
aaa
sub
and
push
das
push
or
push
mov
mov
add
jp
pop
pop
jo
cmp
push
rolb
rcrl
xor
stc
push
adc
cwtl
mov
flds
cmpsb
xorl
jmp
sub
cmp
movsl
mov
cld
dec
dec
pop
sti
jns
pop
xor
dec
lahf
sbb
out
xchg
popf
movsl
out
pusha
ds
stc
inc
xchg
inc
clc
mov
in
jl
mov
out
jne
cltd
rcll
mov
fnstcw
mov
xchg
movsb
outsb
push
push
jnp
fcompl
jb
lock
dec
mov
sub
sub
popf
arpl
in
mov
ret
repz
or
pop
xchg
aas
pop
xchg
fldt
mov
inc
ss
mov
push
lods
add
xor
xor
mov
scas
adc
sbb
jp
in
mov
sti
ds
ljmp
movsb
fwait
jb
fdivs
aad
dec
pop
xor
aas
push
cmc
mov
jp
pop
mov
push
ret
cli
std
in
push
ljmp
inc
cmpsl
mov
push
lods
sub
sub
mov
jecxz
lods
test
aaa
push
xor
xor
and
or
lea
nop
stos
adc
push
jae
xchg
adc
xchg
jge
sub
jo
ret
sarl
xchg
pop
call
loope
jb
or
inc
jo
int3
jp
icebp
mov
into
xchg
and
xchg
dec
push
pop
call
out
pop
inc
push
sti
sub
ss
push
inc
xor
out
lock
mulb
rcrl
cmpl
adc
sub
pop
bound
dec
pusha
hlt
sub
mov
or
sbb
test
pusha
sub
mov
mov
sub
mov
push
popf
jb
in
xchg
imul
mov
push
scas
jmp
push
jmp
out
lret
imulb
sub
xlat
hlt
in
dec
cld
pop
mov
pop
cmp
mov
dec
mov
cli
insb
mov
popf
inc
and
hlt
xchg
or
jmp
test
movsb
mov
xchg
mov
xor
orb
cli
or
out
hlt
sub
sub
sub
mov
jecxz
test
in
ret
lods
xor
dec
outsb
pop
movsb
xchg
jl
pusha
xchg
or
push
pop
mov
xlat
cwtl
add
sbb
lret
jb
arpl
jbe
or
sub
mov
jae
rorl
scas
aad
pop
jle
push
sbb
inc
incb
sbb
push
aaa
mov
repnz
jb
pop
sub
pusha
fists
icebp
dec
push
xchg
in
dec
inc
push
imul
fstps
push
mov
jl
je
rcrl
xchg
fsubs
inc
or
sbb
sbb
test
xchg
cwtl
add
shl
lock
cmp
or
pusha
loope
dec
sbb
in
pop
mov
clc
mov
lods
xor
imull
inc
in
push
inc
dec
jmp
daa
dec
out
sti
movsb
lahf
push
gs
pop
pop
or
lret
mov
faddl
in
out
xchg
push
mov
xor
sbb
jno
xchg
scas
jbe
sub
sbb
rcrb
and
insb
sbb
sub
sbb
stos
mov
in
sub
divb
iret
or
inc
mov
dec
mov
sbb
mov
nop
mov
sbb
adc
cmp
dec
dec
mov
dec
inc
adc
insb
inc
inc
shll
in
sub
xchg
push
incl
sbb
repz
cmp
mov
fstps
popa
repnz
mov
inc
mov
repnz
out
insb
leave
loop
add
sti
nop
xchg
cmpsl
xorl
mov
jnp
bound
imul
add
aad
cmpsb
mov
inc
scas
jmp
pop
fcomip
js
shrl
jle
jae
scas
movsl
or
mov
jo
mov
add
dec
dec
cld
adcl
lcall
dec
dec
insl
push
repz
clc
or
popf
jnp
testb
mov
arpl
lcall
and
pop
or
mov
xlat
dec
mov
in
lret
testb
outsb
cs
gs
mov
mov
and
jo
push
repnz
fmull
xchg
sti
mov
cld
dec
cmp
mov
loope
movsb
shlb
xchg
dec
cmp
imul
adcl
sub
mov
jl
xor
lods
sbb
cli
xor
push
jne
out
fs
cwtl
stc
and
or
push
pop
fmull
mov
out
push
int
jae
or
and
test
cltd
mov
xchg
divl
add
add
mov
jae
dec
std
dec
inc
cmpsl
mov
iret
xor
push
leave
dec
or
mov
aam
lahf
notb
xchg
cs
mov
or
jge
mov
and
out
addr16
jae
push
xorl
adc
xchg
cmp
je
xchg
jg
jnp
hlt
xchg
pushf
push
xor
divb
inc
aad
and
mov
inc
test
pop
push
pop
adc
cld
das
mov
test
cmp
xchg
push
in
ljmp
movsb
insl
and
push
xor
jle
push
in
pop
xor
aad
dec
lods
fsubrs
nop
jle
cltd
mov
test
ja
mov
int3
aam
jo
inc
ficompl
mov
jle
push
pop
mov
popf
xor
fildll
cmp
lock
stos
fists
jg
aam
lods
lcall
jo
sbb
mov
adc
or
shll
cmc
bound
movsb
adc
pop
pop
dec
inc
sub
mov
ss
sarl
sbb
push
fchs
adcb
sbb
push
pop
bound
push
addr16
push
jae
out
std
cmp
loop
imul
int
mov
test
test
pop
push
mov
dec
aaa
addl
sub
adc
and
cmp
pop
imul
mov
sbb
add
mov
xchg
adc
repnz
cld
push
xchg
jno
mov
xor
andb
xchg
mov
dec
pop
pusha
xchg
dec
mov
cli
jl
jns
pop
scas
arpl
add
insl
push
mov
mov
pop
pusha
add
or
fistps
mov
test
sti
pop
xlat
sub
repnz
mov
add
add
std
daa
mov
adc
mov
jge
addb
push
xchg
filds
sbb
cwtl
pop
int
pushf
or
shl
mov
cmpl
lret
cmp
pop
jp
or
add
arpl
xchg
push
cs
and
fucomip
mov
insb
sub
push
ja
fwait
cmp
scas
insb
imul
call
mov
inc
aad
add
mov
sub
enter
idivl
jnp
ja
xor
mov
mov
stos
and
add
inc
add
dec
dec
push
sbb
shrb
popf
ds
sahf
dec
mov
jge
movsb
shll
sbb
cwtl
jb
testb
and
ds
mov
push
lret
cmpsl
inc
mov
push
loopne
inc
pusha
dec
fldl
enter
in
fistpll
cs
or
pusha
iret
ret
inc
call
pushf
fbld
sahf
in
mov
inc
out
jge
jmp
addr16
add
insl
sub
sysenter
push
data16
fs
imul
fs
fidivrs
cmpl
cmp
inc
and
pop
inc
and
mov
adc
mov
lret
cwtl
ret
je
mov
mov
lcall
push
jnp
fldl
jb
rcrl
xchg
lret
das
aam
repz
test
cmp
xchg
aaa
imul
or
cmp
mov
sub
leave
lret
add
int3
add
pop
cmc
inc
sbb
xlat
pushf
inc
lea
rcrb
cmp
or
push
ljmp
stc
cmp
fnstsw
rcrb
iret
shll
loop
push
sahf
mov
dec
cs
sbb
xchg
xor
inc
sbb
sub
sbb
lods
ljmp
pop
adc
xor
std
jl
std
sahf
loope
or
das
movsl
inc
add
aaa
mov
lret
inc
ret
into
mov
mov
jle
jbe
jge
adcb
xchg
lcall
sbb
shlb
xor
inc
adc
jg
fwait
aam
or
xchg
ljmp
shlb
arpl
std
fs
lret
stos
repz
sub
insb
adcb
xchg
jbe
stos
dec
xlat
shll
cwtl
cwtl
addr16
sub
scas
push
das
mov
jbe
out
rcrl
inc
xor
aam
mov
pop
or
lret
cld
inc
daa
roll
add
pop
and
int3
rcll
dec
adc
pop
inc
pop
sbb
xchg
gs
jge
mov
out
dec
popf
adc
in
pop
sti
dec
std
inc
shll
ds
jbe
xchg
add
add
xchg
icebp
repz
rcll
sub
mov
mov
sbb
je
out
clc
mov
aaa
or
push
lds
mov
mov
jmp
inc
inc
out
orb
sub
sbb
pop
or
inc
sub
popf
test
roll
pop
push
cmp
not
loope
dec
or
lock
insl
dec
pop
cmp
clc
bound
fcom
ds
adc
push
ja
sbb
dec
mov
mov
and
or
pop
repz
iret
and
setle
sub
xlat
mov
popa
jb
psrad
cld
into
push
hlt
leave
dec
stos
ds
fildl
push
sub
cmpb
pop
jmp
cmpsb
mov
push
jbe
dec
lret
cmpsl
jle
inc
add
push
movsl
int3
lcall
mov
mov
or
popa
sub
sbb
inc
push
inc
pushf
mov
out
iret
test
arpl
fstps
stos
add
mov
push
loop
pop
inc
add
pop
in
call
rcll
push
pop
cmpsl
clc
push
iret
mov
mov
cmp
xchg
mov
cwtl
idivb
ljmp
stos
cltd
ljmp
mov
dec
jmp
movsb
inc
lock
xor
lds
lcall
out
jns
popl
or
aas
cs
sub
mov
pushl
insl
and
hlt
xchg
loop
add
lret
test
addr16
and
shlb
dec
xor
push
je
mov
sahf
loopne
daa
cmp
add
push
xor
pop
scas
daa
cmp
xchg
lods
jg
xchg
mov
cmpl
stc
and
repz
fldenv
shr
xor
xlat
repnz
or
jb
popf
mov
sub
dec
push
push
sub
xor
inc
vmulpd
xor
pop
and
int
blcic
and
sbb
and
cmp
mov
addr16
or
cltd
mov
dec
sub
lcallw
cli
add
leave
or
in
ss
or
or
sbb
jno
xchg
roll
pop
sarl
and
pop
and
pop
mov
out
gs
out
dec
pop
insb
adc
in
lret
in
idivb
js
or
inc
pop
popa
insl
sub
inc
fdivrp
sarl
push
test
xlat
xchg
gs
cmp
or
scas
add
and
mov
imulb
imul
lcall
fidivl
cmp
ret
ds
sub
aad
std
push
dec
sbb
mov
lahf
loopne
ret
xchg
mov
cwtl
mov
idivl
stos
mov
jbe
or
jecxz
cmpsl
out
adc
mov
js
cs
fs
std
loope
jno
sbb
xchg
push
stos
out
add
das
pop
push
sar
jecxz
lahf
fldt
xchg
cld
lds
add
mov
pop
insb
inc
mov
and
and
dec
dec
je
push
ret
in
inc
add
imul
jbe
dec
xchg
push
push
movsl
fwait
lea
xchg
push
fbld
adc
inc
popf
lock
gs
fdivp
xorb
inc
dec
je
mov
mov
add
or
add
int
in
js
xchg
fs
dec
outsb
sarl
lcall
cmp
out
mov
mov
mov
xchg
push
jge
dec
or
scas
call
sbb
xor
int
movsb
jnp
loop
xor
pusha
pushf
loopne
mov
lds
cs
hlt
bound
rcrl
inc
mov
mov
repnz
loop
mov
testb
test
mov
or
fldl
sar
mov
ret
test
and
cs
les
and
mov
xor
fwait
int3
adc
mov
cli
or
cmp
insl
fsubp
adc
cld
les
or
pop
mov
mov
insl
and
in
arpl
sub
jp
jg
lea
jbe
xor
sti
div
stos
and
adc
xor
in
rcrl
mov
xor
jne
cld
sub
mov
add
arpl
mov
decb
mov
data16
sub
mov
pushf
bound
push
mov
test
sub
out
mov
lahf
xor
cmpsl
cltd
lret
jbe
push
pop
les
loope
inc
fdiv
inc
jo
jmp
sbb
cld
inc
je
movsl
leave
std
aaa
cmp
outsl
into
call
push
lret
xchg
cli
inc
popa
or
pop
das
int
xchg
and
insl
mov
mov
sbbl
mov
out
sbb
or
inc
rcll
jbe
cmp
das
cmpsl
dec
gs
pop
sub
cmp
xorb
cmp
daa
pop
imul
loop
and
ss
loope
xchg
add
jecxz
rol
das
pop
ss
pop
sbb
mov
mov
push
sbb
cmp
shll
lods
aam
mov
mov
fcmovbe
push
inc
jne
fldl
les
das
ror
or
bound
loop
xchg
and
push
inc
mov
sub
mov
stos
jae
orl
fwait
push
and
cld
push
les
sbb
dec
sti
sub
inc
xchg
push
sub
sub
adc
dec
xor
and
or
dec
iret
dec
push
fcomps
dec
mov
add
dec
mov
sub
cmp
stc
outsl
add
icebp
jno
adc
xchg
shll
jae
cmp
aaa
push
mov
out
shll
sbb
xchg
or
lods
fdivrl
jnp
or
cmc
sbb
lods
fimull
push
pop
aam
sub
push
mov
sub
lods
sbb
movsl
stos
pushf
add
jge
mov
pop
xchg
outsb
cmp
cmpl
in
jge
cltd
nop
push
add
and
inc
cmp
aaa
add
xor
push
pop
out
xchg
cmpsl
pop
or
test
xchg
ja
mov
xchg
ljmp
jg
cmp
pop
and
call
push
sti
dec
inc
pop
lret
push
sarb
in
mov
mov
rol
decl
push
cmpsl
mov
divl
sub
and
adc
test
lods
es
iret
sbb
loope
add
rcll
popa
je
push
daa
dec
data16
jns
sub
aad
pop
rcrl
bound
in
imul
addl
inc
dec
dec
cmpsb
mov
and
pop
cmp
dec
inc
jge
ror
xor
das
cld
test
jmp
lret
cwtl
cmpsb
stos
loopne
mov
pop
pop
test
gs
scas
and
andl
je
aas
mov
sub
dec
test
jmp
std
mov
aad
shlb
inc
mov
test
aam
dec
pop
clc
adc
jmp
jge
cmp
or
dec
aas
loop
mov
clc
lods
ss
jmp
pop
rorl
or
mov
mov
push
inc
sub
dec
test
pop
testl
idivl
mov
xchg
dec
shrl
adc
lahf
mov
aad
lret
das
lock
lahf
fsubl
mov
aad
ja
dec
adc
repnz
lcall
mov
sub
push
orb
push
pop
push
fnsave
lea
out
lea
addr16
pop
popa
or
ljmp
mov
mov
and
fidivs
mov
push
xor
xchg
sbb
xchg
fmull
adc
push
sahf
jbe
lea
cwtl
insb
inc
jecxz
mulb
inc
movsb
loop
cmpsl
add
sbb
mov
or
inc
cmpsl
imul
sub
pop
fstps
imul
cmpsb
adc
and
icebp
ret
movsl
movsb
sbb
mov
into
mov
cmc
dec
int3
add
imul
lock
mov
shlb
jbe
jno
inc
dec
gs
mov
stos
icebp
fsubr
clc
push
mov
arpl
cmc
pop
sbb
pop
insl
or
les
mov
xor
test
adc
xor
icebp
jne
subb
or
mov
fdivl
cld
mov
push
je
jo
sahf
xor
and
lcall
sub
xor
dec
aas
int
xchg
pop
inc
push
das
push
xor
add
push
jbe
adc
xor
popa
fs
adc
scas
add
adc
bound
fcompl
cmp
cld
inc
gs
fsubr
cmc
fucom
stos
dec
xchg
inc
mov
mov
popa
dec
mov
or
leave
andl
fsubrs
mov
xchg
jmp
push
or
ud1
mov
jge
cli
loope
ja
lock
inc
es
in
imul
or
not
dec
mov
add
push
or
push
add
inc
inc
jge
mov
ljmp
inc
in
les
inc
dec
cmp
cmpsl
cmp
loope
gs
push
popa
lds
push
das
xor
pop
cmpsb
dec
mov
dec
ja
dec
dec
movsl
cmp
mov
pop
fwait
stc
cmp
sub
aaa
cltd
enter
push
push
mov
sub
add
pop
leave
scas
js
push
mov
outsl
push
test
sbb
mov
jno
in
fnstsw
inc
stc
mov
stos
loope
orb
mov
push
test
jnp
mov
outsl
jmp
mov
mov
fimuls
imul
adc
pop
sub
xorl
cmp
inc
aam
dec
push
ror
cmpsl
sbb
imul
dec
popa
inc
sbb
cmpsl
out
nop
cltd
cwtl
xor
push
jns
adc
addr16
sub
jmp
inc
out
pop
aaa
repz
add
push
mov
xor
push
leave
lret
dec
sbb
lods
add
out
jp
add
in
cli
xlat
jo
outsb
fcompl
cld
fsubr
mov
xchg
popf
arpl
loopne
insl
cmp
repnz
lahf
adc
fs
and
shrl
fidivl
addr16
jns
pop
aad
bound
xchg
std
outsl
adc
lret
and
aam
jp
xor
movsl
int
jg
mov
pop
jle
dec
cmpsl
pop
outsb
pop
mov
mov
lods
sbb
mov
mov
inc
mov
insl
jne
add
pop
lds
enter
xchg
imul
sub
cmpsb
pop
and
sbb
out
popf
cmp
jmp
jne
and
testb
push
and
fs
jecxz
ret
jg
in
mov
pop
inc
add
out
lock
loopne
jmp
int
adc
insb
iret
adc
jge
jbe
and
int3
insb
addr16
stc
cmc
pusha
mov
mov
xor
add
mov
pop
dec
and
add
std
and
test
inc
popf
hlt
sub
addr16
in
insl
in
push
push
sub
shrb
or
inc
or
xchg
mov
jl
push
mov
mov
cmpsl
movsl
sbb
data16
inc
test
lcall
dec
in
xor
rcr
lahf
xlat
push
bound
pop
fiadds
mov
fwait
insl
sub
fmul
mov
mov
loopne
push
pop
icebp
ret
add
ja
arpl
nop
lds
or
or
jmp
sbb
ja
popf
add
mov
daa
lahf
add
or
out
popf
sub
xchg
enter
mov
jb
push
push
mov
mov
or
popf
cmp
add
fwait
jnp
or
inc
daa
adc
push
leave
loop
sbbl
testl
mov
sub
xor
mov
jne
cmpsl
lahf
stos
xor
fwait
or
xlat
fwait
pop
scas
movsl
std
loope
fisttpll
mov
inc
xchg
sahf
and
push
test
push
mov
push
lahf
clc
test
inc
push
jo
shl
fisubs
add
dec
dec
mov
sbbl
and
xor
mov
inc
jecxz
enter
sahf
test
xor
dec
jge
out
sbb
lock
mov
push
jge
lock
mov
cltd
inc
jmp
xchg
push
out
sahf
mov
mov
xchg
jp
dec
movb
push
icebp
iret
jb
mov
out
std
sti
daa
call
mov
mov
push
daa
xchg
out
cmpb
and
lret
xchg
ja
test
lret
mov
shlb
inc
inc
cmp
stos
sahf
pop
ljmp
sar
ja
mov
call
dec
xor
sub
push
inc
adc
or
cmpsl
insb
icebp
lock
fcompl
mov
jp
jb
or
iret
in
loope
push
lods
fists
movsb
cmpsl
stos
pushf
int3
pop
xchg
sub
sbb
jle
push
loopne
jne
pop
and
out
cltd
xchg
ja
mov
ds
dec
pop
dec
mov
inc
aas
out
jnp
add
insl
fnstenv
rolb
fwait
icebp
arpl
fcoml
fs
xchg
push
pushf
ret
icebp
je
ror
dec
push
push
sahf
mov
fwait
popf
test
fiaddl
in
bound
loope
and
xor
ss
faddl
xchg
sahf
xchg
mov
jbe
jb
mov
popf
jg
into
rorl
inc
add
dec
fs
add
inc
push
xchg
cli
sbb
lret
mov
cmp
cmp
int
je
ret
adc
jb
mov
mov
dec
add
icebp
xor
push
test
fwait
js
mov
lea
inc
enter
hlt
insl
sbb
sub
jmp
jle
add
sbb
and
mov
lds
mov
mov
pop
je
les
push
movsb
sub
cld
outsl
mov
inc
push
push
out
daa
jmp
jb
outsb
push
mov
xchg
xchg
cmp
dec
xchg
jle
push
test
xchg
popf
cmpsl
pop
jecxz
loop
mov
testl
xchg
inc
pushf
daa
xchg
fistpll
test
daa
mov
or
xchg
inc
add
loopne
push
les
ss
shrb
mov
pop
mov
in
jae
mov
fsubs
xor
gs
mov
sub
cwtl
mov
mov
fcom
cmp
jae
mov
sahf
in
emms
jns
stc
mov
dec
shll
cmpb
adc
push
negb
clc
mov
in
cld
in
sti
mov
cmp
test
cmp
repz
jge
xor
jb
jne
bound
aad
inc
fpatan
jp
clc
jle
fimuls
rclb
into
push
inc
jecxz
or
mov
push
repnz
cld
outsl
decl
outsb
jb
dec
xchg
pop
dec
xchg
mov
sub
add
mov
data16
jmp
lret
repz
icebp
jbe
imul
sub
fadd
cli
ss
out
sub
inc
sbb
cwtl
pop
mov
pop
sbb
push
out
lock
mov
cltd
mov
lock
mov
sub
movsb
mov
std
aad
dec
call
xchg
pop
addr16
mov
xor
fsubrp
push
mov
pop
mov
push
add
out
xchg
ja
sbb
mov
pop
sub
loope
or
sbb
popf
aas
xchg
std
sub
xchg
fsubrs
xor
inc
mov
mov
rcrl
or
subb
mov
push
mov
add
test
loopne
or
jns
pop
dec
xchg
mov
or
imul
mov
enter
xchg
dec
push
lcall
mov
jecxz
inc
mov
pusha
cli
fwait
dec
and
cmc
sub
mov
mov
inc
je
add
insb
inc
mov
bnd
dec
xchg
mov
loopne
fistpl
jns
subl
jno
push
ficoms
imul
jnp
daa
pop
imul
xorl
dec
mov
lock
int
push
mov
fwait
inc
pushf
loope
xchg
mov
data16
ja
mov
mov
out
outsb
ffreep
push
das
mov
mov
cltd
fnstcw
or
rolb
fisttpll
sbb
dec
push
xchg
popf
cmpsb
shl
pop
movsl
mov
push
outsb
ret
sub
xchg
outsl
out
mov
inc
fucom
mov
out
cli
cmc
cld
scas
aas
dec
jmp
mov
mov
scas
repz
aad
fs
mov
aas
lcall
mov
or
sbb
pushf
iret
fmull
add
or
in
push
pop
test
pop
and
or
data16
pop
cmc
jge
mov
sbb
mov
pminub
mov
mov
sub
pop
lret
lret
cld
push
mov
sub
mov
fists
leave
add
inc
in
fidivrl
inc
lock
imul
or
dec
jbe
in
push
add
jb
add
js
xor
and
lret
jl
lahf
scas
popa
ret
inc
push
mov
rcl
mov
aaa
dec
pop
mov
and
lock
inc
mov
cltd
cmpsb
sub
push
out
cwtl
or
movsl
dec
push
hlt
mov
nop
cld
mov
stc
mov
insb
fildll
ds
cmpsb
fldt
or
xor
mov
data16
push
pusha
ds
sbb
jle
shrl
insl
aam
mov
inc
movlps
test
iret
lea
sub
leave
or
push
mov
loop
xor
mov
push
lods
sub
inc
push
insb
cs
mov
add
pop
mov
stc
mov
divl
clc
push
push
popf
fdivs
mov
mov
xorb
jnp
jp
mov
fsubrp
xchg
or
mov
xor
jp
dec
data16
cmc
cld
imul
xchg
rorb
jge
pop
mov
loop
andb
add
add
and
and
ror
pop
scas
mov
cmpsl
mov
adc
ret
mov
rcrb
pop
adc
inc
push
pop
out
dec
jg
leave
inc
and
add
lret
loopne
xchg
arpl
mov
in
int
cmp
test
xor
rcl
and
mov
push
xchg
mov
cmp
xor
iret
pop
xorb
loopne
mov
inc
int
cld
cli
mov
fidivrs
adc
dec
jecxz
ret
pop
sub
and
imul
outsl
sub
sub
je
stos
cmpsl
in
mov
mov
cmc
sbb
fwait
and
pop
pop
rcll
out
mov
push
inc
pop
adc
jg
sub
icebp
push
imul
add
stos
and
xchg
bound
popa
aam
mov
push
pop
roll
or
mov
dec
add
test
out
or
push
sarb
sub
jg
mov
jns
mov
aad
nop
jb
dec
jno
lods
or
fs
gs
or
loopne
mov
cmp
repz
push
outsb
pop
fwait
mov
push
out
cmpl
insb
pop
add
mov
cs
lods
jno
add
cmp
pop
scas
cwtl
icebp
push
lret
daa
test
pop
lea
ret
cmpsb
ret
fstpl
repnz
out
pop
mov
and
ret
mov
inc
aaa
jns
xlat
das
cmp
test
or
arpl
js
stos
lahf
movl
or
adc
lea
scas
push
lahf
sahf
rorb
cmpsb
in
pop
hlt
dec
popf
data16
sbb
mov
jmp
lret
jl
push
xor
lahf
sub
fildl
sarl
xchg
mov
jmp
pop
in
add
add
data16
mov
loopew
in
mov
xchg
pop
inc
cmpsb
test
ds
inc
mov
dec
push
pop
add
clc
insb
bswap
test
sub
push
out
sub
cmpb
sub
pop
ss
jmp
dec
fcompl
iret
jge
arpl
sbb
dec
xchg
add
daa
fnstcw
push
out
aaa
jmp
cmp
bound
je
imul
sub
adc
test
sarl
xor
and
testb
jecxz
pop
ljmp
clc
in
jo
or
mov
cmc
mov
fidivl
cmp
push
jnp
mov
dec
adc
popf
cwtl
fldl
int
xchg
and
dec
rsqrtps
inc
dec
call
popf
lods
pop
xchg
cmp
xchg
inc
stos
xor
adc
inc
shrb
aad
and
lret
outsb
ja
lret
fldenv
ret
xor
xchg
sbb
aam
push
xor
or
imul
in
rcrb
fists
mov
gs
add
cli
aas
ds
sub
jb
lods
adc
inc
xor
rolb
stc
push
scas
jo
mov
ljmp
cli
jne
sub
fnstcw
imul
andb
adc
icebp
stc
mov
mov
js
call
push
xchg
mov
push
mov
mov
notl
roll
ret
je
cmpsb
addb
jb
in
rclb
imul
popf
jnp
aas
mov
mov
jg
loopne
pusha
mov
pop
sbb
pushf
jle
addr16
pop
test
add
test
and
dec
test
scas
test
mov
xchg
lock
ds
popf
xchg
mov
push
add
adcl
gs
movsb
lret
leave
into
test
lods
adc
sub
xchg
cld
push
add
mov
inc
jne
andw
ja
fcmovu
pop
addr16
xadd
jb
std
mov
aad
sbb
mov
aas
mov
pop
cltd
mov
cmpsl
jl
mov
mov
lret
or
cmp
inc
jl
adc
stos
popf
xor
dec
sbb
leave
jnp
mov
and
stos
push
xchg
adc
lahf
ja
add
cmpsb
fisubl
lcall
jmp
lret
test
sub
cs
xchg
stos
or
addb
sub
andl
and
js
add
lret
out
inc
sbb
jg
xchg
pop
jge
push
adc
xor
popf
and
mov
scas
mov
mov
leave
popf
ret
es
icebp
leave
sub
mov
sahf
push
push
jae
movsb
mov
ljmp
lret
testl
movsb
nop
sub
and
push
jg
mov
mov
push
lea
loop
in
xor
inc
stos
adc
lcall
leave
dec
and
pop
stos
enter
xlat
in
or
jo
nop
int
sub
and
sbb
mull
test
sub
cwtl
push
fidivl
dec
add
hlt
stc
shll
lret
aas
subl
sub
jns
popf
sbb
inc
pop
mov
aad
fildll
mov
cmp
mov
sbb
cltd
xor
into
sarl
and
adc
pop
xlat
daa
rorb
sub
mov
push
or
pop
mov
adc
jle
incl
das
add
add
in
mov
lea
push
push
cmp
adc
sub
out
cmp
pop
mov
lahf
repz
out
push
leave
mov
shrb
push
mov
cmpl
movsb
push
xchg
cmc
sub
out
les
jno
add
mov
adc
pop
dec
mov
push
mov
add
std
sbb
xchg
mov
mov
aas
fdivr
lds
xchg
int
push
add
xor
dec
lret
inc
xchg
add
out
sbb
aaa
xor
inc
outsl
loop
cltd
cltd
stc
add
jg
push
xorb
cmpsb
std
imul
mov
lea
fwait
jne
xorl
out
out
daa
mov
lahf
xchg
mov
mov
outsb
je
roll
shl
cmpb
xchg
jge
mov
iret
cwtl
lock
sub
hlt
xchg
mov
sahf
dec
mov
dec
testb
sbb
lock
cmp
inc
les
mov
push
ss
jae
lds
pusha
mov
pop
push
fisubrs
sub
or
fnstsw
lret
outsb
xor
jb
mov
addr16
pop
inc
sti
mov
clc
mov
mov
enter
mov
imul
dec
loopne
mov
gs
mov
fidivs
cmc
sbb
push
jne
lret
mov
sbb
les
dec
int3
mov
mov
mov
push
mov
sbb
jbe
jmp
and
enter
movsb
mov
xrelease
inc
pop
xchg
sbb
cmpsl
leave
stos
sahf
test
pop
ret
pusha
mov
add
dec
rep
fmulp
int
shll
lods
mov
insb
iret
subb
sbb
daa
xorl
or
pop
je
add
cmp
jg
dec
lahf
xor
jno
ror
fidivl
mov
sub
adcb
outsl
mov
push
call
lods
andb
dec
xorl
roll
in
pop
das
hlt
subb
xor
hlt
aaa
sub
mov
push
je
iret
jns
and
mov
or
mov
xchg
jmp
jl
inc
or
scas
lcall
pop
inc
shrb
test
ljmp
cmp
or
cmp
test
out
jmp
pop
divl
mov
aas
loopne
unpcklps
xor
fcmovu
xor
add
outsl
inc
inc
mov
imul
and
push
mov
gs
sbb
scas
xchg
push
mov
outsl
test
out
or
in
loop
push
loop
lcall
inc
mov
and
add
stc
and
xor
push
lret
cmpsl
aaa
js
sbb
repnz
cmp
pop
pop
int3
add
cmp
div
add
mov
dec
cmp
adc
cmpsb
xor
loop
or
jmp
fnstcw
test
jns
std
ja
jecxz
cmc
jp
push
inc
es
mov
or
push
iret
push
or
push
enter
in
cwtl
xchg
pop
mov
cmpsb
gs
mov
and
sbb
xor
dec
cmp
dec
lcall
cmpsl
ret
repz
dec
xchg
and
dec
lea
in
jle
lds
in
das
lcall
subl
mov
loope
sub
loopne
lods
mov
add
out
sarb
mov
nop
push
adc
sub
xor
or
cmp
xorb
adc
clc
mov
adc
jns
mov
mov
js
cltd
cmpsl
jnp,pn
xor
out
les
lods
rorl
shll
faddl
outsl
pop
add
mov
test
lods
arpl
pop
pop
fcoml
mov
addr16
aam
lods
mov
aaa
imul
fistpll
mov
xchg
das
aad
rolb
cmpsb
outsb
mov
xlat
dec
push
test
std
cmp
arpl
enter
pop
inc
sub
aad
and
mov
mov
jg
sbb
daa
add
xorb
int3
cmpsb
test
jmp
test
adc
add
pop
lret
sbb
dec
dec
or
mov
mov
cmp
mov
ds
arpl
cmp
ds
lea
stos
lock
hlt
fildll
negb
jb
pusha
mov
test
rorb
xchg
mov
add
jle
clc
or
sbb
shlb
or
sub
jae
sub
cli
test
xlat
cmp
in
xor
push
or
mov
xor
mov
lods
add
lcall
out
mov
sahf
fsubrl
dec
and
cmc
cmpsb
cltd
scas
mull
adc
jb
mov
inc
jnp
cmpsl
into
dec
jne
mov
mov
pop
sti
testb
cmp
imul
cmp
outsb
loope
push
jne
adc
inc
push
mov
test
cmc
fdivrs
bound
cs
stos
jbe
inc
mov
rol
movsb
fucom
or
mov
in
xchg
out
mov
inc
adc
sub
xlat
xchg
dec
inc
mov
mov
repnz
inc
xor
mov
jl
mov
sub
rep
add
or
adcb
fcompl
notl
xor
cltd
popa
and
cld
sub
maskmovq
notl
dec
fadds
enter
enter
xchg
dec
sbb
push
jge
cmp
outsb
xor
das
cmp
test
cmp
fcom
xchg
pop
leave
aas
test
fsub
push
lds
jno
pop
std
loope
lahf
jmp
pop
push
or
inc
mov
push
lock
add
out
mov
dec
clc
fiadds
and
or
sbb
jecxz
adc
arpl
add
aaa
mov
popl
mov
fcompl
cmc
sbb
nop
test
sarl
or
xor
pop
dec
mov
inc
sbb
jle
call
dec
test
out
push
push
clc
lods
or
xor
push
leave
repz
outsb
sub
adc
cltd
pop
loope
pusha
lods
test
mov
cmpsl
stos
mov
cld
xchg
dec
sahf
idivl
xchg
cmpsb
out
enter
xchg
mov
inc
inc
sbbb
jp
inc
xlat
xor
and
push
in
rorb
adc
ret
lcall
push
imul
data16
mov
shll
inc
mov
std
inc
clc
inc
mov
repz
into
sub
pop
stc
lods
sub
add
push
xor
mov
icebp
cmp
je
push
or
or
or
icebp
hlt
or
dec
cmp
scas
add
ret
mov
mov
sub
cltd
inc
pop
rolb
adc
aaa
xchg
cld
adc
or
mov
mov
pop
xor
xor
add
dec
clc
and
pushf
jnp
fistps
sub
sub
data16
bound
into
das
in
test
test
mov
stos
jle
es
mov
cmp
or
inc
addr16
pop
jge
in
ljmp
stos
jg
add
adc
outsl
outsl
ja
jmp
dec
andb
push
sbb
test
lret
jnp
in
push
mov
icebp
sahf
mov
addb
mov
popf
cmp
xchg
data16
shrb
inc
enter
fimull
or
xor
fbld
lock
push
gs
sbb
mov
cmp
and
cld
mov
push
xorl
lret
mov
mov
pop
loopne
das
sub
sub
fcompl
repnz
lret
cmp
cmp
cmpsb
sbb
sub
in
pop
stos
xor
leave
and
out
push
mov
cmp
rcl
jno
mov
aaa
out
lods
cld
out
xchg
insb
lods
adc
aas
add
jle
mov
insl
mov
outsb
mov
adc
xor
mov
inc
int
repz
jo
pop
popa
mov
xchg
sbb
cli
fisubs
cmp
pop
out
dec
in
push
fdivrl
stc
mov
push
enter
dec
stc
sub
out
xchg
sub
aad
jecxz
test
insb
pop
mov
cmp
lret
nop
xchg
push
fwait
lahf
sahf
xlat
mov
movsb
lds
xor
jne
loope
sbbb
adc
jnp
les
jecxz
stos
adc
or
repz
xchg
dec
in
lock
test
push
push
ja
hlt
rol
sti
sti
mov
cmc
imul
int
xchg
pop
in
test
shl
mov
xor
xchg
sahf
lods
je
cwtl
mov
das
fwait
rclb
mov
repnz
iret
sbb
shll
sbb
fstpt
fbld
cmp
in
xor
insl
adc
or
xchg
jl
mov
loop
mulb
add
and
push
repnz
push
mov
test
dec
xchg
rcrb
mov
sahf
add
loope
jae
scas
mov
mov
cmpsb
jl
mov
add
popa
sti
add
fsubp
mov
sbb
mov
test
jb
pop
pusha
rorl
js
gs
sub
jg
jle
sbb
imul
rcrb
sbb
sbb
push
fs
jne
in
mov
and
mov
jl
sbb
adc
jns
xor
dec
inc
addr16
mov
push
pop
cmpsl
ljmp
ret
mov
and
inc
repnz
xchg
lret
test
push
lahf
lcall
mov
stos
pop
nop
out
hlt
loopne
cmpsl
jmp
test
mov
pushf
inc
inc
fwait
mov
adc
les
xchg
and
jl
scas
mov
xchg
mov
adc
push
dec
inc
sbb
and
mov
dec
xchg
inc
and
mov
out
mov
stos
mov
movsb
mov
popf
xlat
pop
mov
repz
push
call
jl
or
mov
jmp
jns
dec
lds
pop
popa
iret
mov
push
jae
fisubl
dec
xor
push
scas
xchg
imull
push
cmc
push
add
add
adc
dec
outsl
and
mov
lds
gs
popa
test
ljmp
push
add
xor
or
jno
push
cmpl
insb
mov
or
push
insl
inc
mov
push
ds
pop
dec
loop
xchg
fsubrs
test
test
adc
mov
add
inc
ficoms
nop
push
outsl
lea
std
mov
jl
lea
shrb
xchg
clc
and
cmp
outsl
lods
inc
push
repnz
std
fistl
icebp
mov
mov
out
mov
xchg
repz
push
or
mov
add
adc
mov
mov
in
cmp
sahf
push
jo
mov
pop
inc
loope
fucomip
lock
icebp
jle
pop
outsl
and
dec
push
test
and
adc
ret
divl
jl
push
out
add
test
xor
mov
pushf
inc
and
jb
mov
push
arpl
gs
or
dec
stos
cmp
js
add
out
dec
cmpsb
lret
nop
pop
jo
aas
stos
ds
std
out
fs
pop
fldl
enter
ds
xor
xor
rolb
jge
insl
jg
jo
inc
int
ret
mov
push
xor
aad
std
xchg
pop
push
mov
jge
out
pop
das
pusha
out
inc
jns
sahf
mov
mov
movsl
xchg
pusha
mov
and
mov
mov
incb
cmc
dec
cli
inc
lea
pop
mov
xor
sub
dec
mov
aas
mov
sbb
mov
mov
pop
hlt
out
leave
das
xchg
jg
and
call
xchg
lods
cmpl
sub
in
and
cmp
dec
cmp
int3
cmp
mov
push
aas
sub
jle
mov
jns
mov
xor
repnz
test
push
mov
icebp
insl
xor
push
bound
inc
jmp
movsb
pushf
adc
xor
mov
xchg
mov
push
jb
inc
call
push
and
lret
leave
add
popa
mov
lea
or
out
cmp
lods
jmp
add
fdivl
sub
imul
test
adc
cltd
mov
rolb
fisttpll
push
cwtl
pop
idiv
inc
xchg
call
dec
jge
je
insb
mov
or
push
mov
pop
jbe
xor
xor
xlat
scas
popa
popa
xchg
cltd
clc
mov
mov
dec
addl
jmp
std
test
imul
mov
cmc
test
call
lahf
xchg
dec
xor
sbb
add
sbb
in
adc
clc
in
sub
loop
cmp
lds
xchg
jbe
fimull
push
pop
push
push
push
cmp
xchg
insl
pop
cmc
scas
xchg
test
pop
iret
loopne
dec
scas
loope
xorl
out
pushf
sbb
sub
sub
xchg
jle
sbb
dec
fwait
test
negl
push
and
hlt
scas
rorl
push
ret
push
mov
hlt
mov
call
test
aas
ret
xor
jnp
repnz
add
sahf
aam
cmc
jns
pop
mov
xor
cltd
push
xor
inc
call
jae
and
cmc
orb
jecxz
and
fadd
outsl
jp
dec
call
xor
sti
xchg
pop
in
push
pop
imul
stos
cwtl
adc
lcall
divb
xchg
push
test
aas
push
xor
xor
cmp
lret
cmpb
leave
and
shl
xor
sbbb
push
dec
mov
push
xchg
xchg
arpl
jmp
sbb
sbb
icebp
jae
jle
enter
sbb
int
mov
add
cld
out
push
stos
inc
add
test
test
dec
call
xor
push
lea
and
mov
arpl
sbb
hlt
stos
dec
mov
popa
xlat
ret
sbb
loopne
rclb
fxch
lret
ja
xchg
stc
stos
ds
cmp
mov
repnz
pop
cs
xor
iret
adc
mov
loopne
and
mov
xor
test
mov
sub
arpl
sqrtps
dec
iret
mov
xchg
int3
fwait
add
adc
mov
scas
cld
jle
pusha
mov
int
mov
mov
push
push
out
dec
outsb
jb
jb
inc
push
xor
sub
loope
cmpsb
je
testl
xchg
cmpb
sbb
mov
mov
addb
test
push
ror
bound
in
test
pop
in
mov
adc
mov
xchg
lahf
push
xchg
icebp
mov
outsl
or
sbb
fmull
pop
cmp
sbb
in
dec
ret
bound
cmp
xlat
out
sti
jnp
xor
stc
pop
int
data16
scas
dec
dec
loopne
xor
mov
inc
inc
nop
pusha
mov
inc
adc
or
inc
stos
and
xor
mov
stos
lcall
jle
out
inc
inc
cmp
sbb
aam
mov
cmpsb
lods
xchg
and
mov
jmp
sbb
and
sub
test
push
push
cli
ret
stos
jp
push
cs
lcall
movsl
fiaddl
mov
in
inc
or
sbb
mov
inc
sbb
pop
and
sub
inc
sbb
mov
sub
jle
cld
add
bndldx
or
pop
rcl
daa
rorl
push
dec
scas
push
lock
js
add
in
xor
dec
xchg
imul
mov
sbb
out
push
or
add
ss
mov
and
or
push
push
cli
lahf
push
adc
loope
int3
inc
popa
cld
push
push
dec
int3
out
dec
push
pop
pusha
xchg
dec
test
xchg
xchg
inc
dec
mul
dec
push
loop
xor
aaa
mov
push
xchg
fiadds
pop
mov
pop
mov
jge
in
add
pop
adc
push
addr16
ljmp
stos
cli
jp
faddl
push
or
data16
mov
shrl
jns
or
pop
and
lret
ja
mul
sbb
lret
dec
xchg
icebp
fistpl
xchg
xchg
out
push
dec
or
cli
hlt
xchg
js
sahf
stos
shl
movsb
dec
shl
inc
dec
mov
mov
dec
xchg
roll
jl
xchg
ret
adc
xchg
insl
fcomps
xor
jno
jo
data16
jno
mov
mov
add
lods
xchg
mov
movsb
push
pop
shlb
cmc
xchg
cmpsb
fadds
frstor
ds
nop
scas
add
sub
aam
insl
push
mov
test
fwait
cmc
mov
sbb
popf
cli
sarl
push
jmp
fdivrl
mov
ret
bound
insb
icebp
outsl
sbb
cld
mov
ds
mov
jle
repnz
adc
bound
push
xchg
neg
push
dec
es
mov
sahf
leave
aam
clc
pop
push
out
cmp
and
mov
sbb
fidivrs
mov
pop
out
enter
push
negl
add
imul
xor
ljmp
pop
test
adc
pop
xchg
and
icebp
out
lret
js
loop
outsl
cmp
add
rcll
sbb
sti
shll
pop
push
lock
aaa
push
cli
push
movsb
mov
jmp
das
outsb
aaa
stos
dec
imul
lea
adc
lcall
xor
aaa
das
lret
test
fsubrl
and
jg
jle
sub
sub
jbe
ljmp
xchg
imul
aaa
lock
push
add
mov
loope
call
push
orb
xor
mov
outsl
xorl
xlat
in
stos
mov
mov
sti
xchg
lret
outsl
fimuls
test
push
ret
pslld
sbb
fwait
movsb
mov
or
mov
pop
iret
cmpl
inc
fldt
lret
int
fwait
test
cmp
dec
mov
jg
mov
test
outsb
jg
pop
sub
mov
ret
push
sahf
or
jb
inc
cmpsl
frstor
call
add
daa
mov
movsb
jnp
xor
mov
mov
xor
xchg
mov
mov
lock
sbb
gs
into
cmp
add
mov
fsubs
jge
sbb
sub
pusha
bound
jae
scas
push
adc
or
pop
mov
pop
mov
fdivrl
call
mov
dec
push
loope
jne
neg
daa
lock
mov
dec
and
push
pop
dec
dec
xchg
fwait
mov
loope
ja
mov
pop
ret
mov
jo
add
nop
xchg
xor
in
ss
ret
out
in
mov
dec
dec
hlt
sub
jno
arpl
pop
jmp
cli
xchg
inc
mov
mov
jecxz
sub
aaa
lcall
jns
test
or
lods
scas
ret
inc
stc
mov
mov
jg
ds
fs
lock
js
push
pop
adc
inc
and
mov
mov
ja
push
cmp
stos
mov
shr
scas
sub
enter
add
adc
mov
sti
xchg
shrl
out
aas
mov
push
lret
cs
mov
test
rcll
jno
jmp
xor
stos
mov
or
pop
xchg
mov
adc
loop
sbb
pusha
nop
xchg
adc
pop
push
or
test
xchg
add
out
in
xor
mov
test
into
cli
mov
mov
push
shl
pop
cmp
popf
cmpsl
repz
in
xchg
lret
sbb
cwtl
les
push
aam
sbb
push
xor
add
out
psadbw
push
jecxz
imul
lret
sub
aas
adc
mov
cwtl
jno
popf
ret
out
enter
out
loopnew
add
jnp
fucomp
jp
mov
faddl
pop
or
out
push
je
xor
and
stos
cwtl
push
cmp
les
lret
mov
inc
push
neg
fstps
mov
push
out
movsb
inc
and
add
push
rdmsr
cmp
dec
pushf
pop
inc
and
dec
cmc
imul
or
lea
push
push
fnstcw
adc
and
mov
repz
pop
in
push
xchg
mov
cmp
int
mov
sbb
ret
jb
test
inc
pusha
jle
out
into
and
cmp
lods
cli
adc
jns
adc
inc
loop
rorb
push
inc
xchg
xor
push
dec
lret
xchg
xchg
enter
dec
stos
or
fstpt
mov
mov
jg
push
scas
add
daa
jb
xlat
and
dec
pop
jg
mov
popa
lods
inc
es
cmp
cmp
inc
loopne
das
sub
je
mov
pusha
and
test
dec
cmp
sbbl
fs
sub
scas
popl
push
jge
jmp
jns
pop
fdivr
push
or
mov
cmp
fiaddl
stc
leave
loope
mov
mov
pop
xor
sub
daa
pop
sub
xchg
sub
out
out
xor
movsl
sub
mov
outsl
bnd
or
pop
jmp
push
mov
or
jecxz
pop
push
mov
push
pusha
pop
xchg
imul
cs
scas
or
xor
add
shll
xchg
cli
cltd
cmp
ljmp
dec
add
in
cwtl
std
or
inc
mov
pop
lcall
out
repz
jno
sub
sub
inc
or
push
sub
jne
dec
and
mov
xor
js
imul
arpl
dec
pop
add
jge
mov
pop
je
push
xchg
xchg
ror
push
push
scas
xlat
in
in
cmp
sub
add
aad
push
popa
repnz
adc
xchg
fldcw
inc
addr16
dec
adc
jmp
lea
or
repnz
inc
cli
sub
adc
cs
fbstp
xor
shrb
sbb
dec
pop
mov
sub
mov
stos
mov
pop
adc
jno
stos
adcb
jg
inc
movsl
cld
cmp
jecxz
push
mov
repnz
test
enter
gs
ss
xor
pop
adc
pop
dec
xchg
mov
outsb
imul
int3
ret
xchg
ret
cmp
sbb
pop
ljmp
test
loop,pt
dec
lret
daa
and
ds
adc
or
xchg
xchg
mov
push
cmpsl
push
or
jl
inc
cwtl
inc
mov
std
and
xchg
jae
mov
inc
push
jl
mov
xor
das
or
mov
add
mov
in
jl
sub
data16
ds
sub
cmp
xor
hlt
imul
je
cmovle
pop
rcrb
loope
ja
in
test
sub
inc
xor
sar
test
jbe
movsl
mov
or
cmp
and
imul
clc
rcl
shlb
mov
insl
inc
divl
jmp
daa
jnp
cmp
add
test
pop
push
decb
dec
cmpsl
leave
repnz
pop
mov
arpl
loopne
dec
add
dec
dec
testl
out
fimuls
ljmp
cmp
rcrb
adc
sbb
mov
adc
lock
jbe
arpl
out
stc
jl
das
mov
lcall
sub
clc
pop
sub
fcomps
sub
imul
mov
pop
leave
pop
adc
shlb
xor
cmp
orl
in
xor
rcr
push
sub
sub
rorb
and
inc
ud0
sahf
xchg
adc
stos
daa
mov
repz
mov
add
dec
sbb
jmp
mov
out
jbe
push
cli
stc
arpl
test
jne
sahf
cwtl
into
lods
push
dec
mov
mov
cmpsl
xchg
cmc
leave
cmpsb
int3
sti
inc
push
in
int3
jg
or
das
test
inc
test
push
repz
mov
aam
cmc
cmp
fcmovb
and
jb
shrb
push
pop
mov
mov
shr
loope
pop
cmpsl
mov
movsl
push
mov
jno
inc
mov
inc
cmpsb
jecxz
shll
and
xor
arpl
sbb
xchg
repnz
add
lods
popa
push
mov
cmp
sub
lea
dec
test
popa
fidivl
pmullw
sbb
mov
cli
and
out
pop
stos
stc
and
xchg
push
js
jecxz
push
js
xchg
rcr
or
jmp
jp
scas
push
mov
lret
bound
lahf
mov
mov
jl
ret
jp
movsl
mov
pop
add
inc
push
cmpsl
mov
popf
and
dec
ja
mov
add
mov
fisubrl
dec
jne
repnz
int
shr
mov
cmc
ss
cmc
imul
mov
cmp
inc
mov
das
das
jg
lret
jno
mov
mov
adc
jge
test
popl
cmpl
ljmp
pop
in
mov
dec
jg
or
sub
add
mov
push
repnz
xchg
and
jo
inc
mov
mov
les
das
mov
xor
pop
ljmp
mov
dec
cmp
dec
out
das
subb
mov
stos
imul
push
lods
jle
pop
sahf
lock
jns
pop
in
stc
jns
mov
pop
inc
add
cmp
ljmp
je
movsb
lods
insb
in
sti
xor
inc
cmp
repnz
mov
aam
mov
insl
mov
push
dec
dec
sub
roll
push
cmpsl
xor
aam
hlt
test
enter
cmp
jno
dec
subl
jle
mov
in
sub
ljmp
lcall
rcrb
testl
cbtw
mov
lahf
xchg
push
aas
rorb
push
jnp
mov
and
mov
das
xchg
outsl
in
inc
mov
sub
andl
and
rolb
repz
out
adc
fcomp
mov
ss
mov
xor
sti
dec
pop
xchg
sub
minps
mul
inc
movsl
mov
fcomip
and
ret
or
xchg
mov
jae
sbb
dec
jp
hlt
mov
pushf
mov
mov
mov
sbb
mov
ljmp
xor
fwait
mov
xor
cld
xlat
out
icebp
mov
pop
jl
and
clc
insl
imul
in
outsl
ja
repnz
or
insl
or
js
pusha
mov
mov
test
outsb
xor
xchg
rcl
or
push
fdivrl
pop
cld
push
addr16
pushf
cmp
push
mov
test
rolb
mov
loope
mov
xorb
pop
stos
loop
sbb
mov
jnp
test
sub
and
movsb
inc
mov
in
insl
stos
xchg
daa
scas
adc
add
in
nop
sub
sub
and
enter
adc
sbb
cmpsb
mov
xchg
movsb
xchg
mov
pop
sbb
inc
xchg
add
imul
fisubl
push
outsl
cmp
cltd
sahf
xorb
and
mov
out
sbb
add
jp
mov
xor
lret
jle
std
rorb
pop
leave
lods
sbb
addr16
push
mov
push
imul
jge
neg
pop
mov
pop
pop
adcl
push
cwtl
popf
loop
lret
inc
sub
out
sub
ja
leave
mov
popa
fs
cmp
cmp
dec
test
xchg
insb
ret
xchg
cmp
aad
dec
and
and
mov
xchg
data16
inc
fdiv
push
out
repz
js
push
data16
xchg
test
call
scas
mov
xchg
mov
pop
push
xchg
jo
mov
mov
push
jl
test
das
sbbl
jp
adc
sub
arpl
cmp
stc
cs
bound
push
jge
xchg
push
in
sti
or
mov
adc
xchg
mov
lea
sbb
mov
popf
and
jnp
fwait
mov
cltd
lea
out
jmp
xchg
push
cld
inc
sbb
rcrl
popf
enter
fsubrp
pop
inc
adc
push
xor
nop
aaa
xchg
rorb
fdivrl
sbb
pop
shlb
push
sub
daa
push
sbb
cmc
push
adc
mov
and
fstl
loope
push
test
xchg
and
pop
add
mov
and
rcr
sub
mov
int
ljmp
adc
inc
loop
icebp
pop
or
sti
sbb
xor
mov
pop
nop
iret
pop
dec
push
jnp
and
arpl
enter
add
mov
sbb
scas
cmpsb
cmc
leave
cmp
xchg
imul
xor
sub
andl
scas
sub
dec
mov
jo
ds
out
mov
pop
pop
fidivrl
mov
mov
inc
pop
sarl
shrl
push
ret
xchg
orl
repz
std
test
scas
sarl
lahf
mov
inc
movsl
mov
dec
xchg
jecxz
dec
clc
loope
dec
les
push
dec
scas
mull
pop
sbb
das
jl
jo
sub
adc
mov
aas
ret
xor
pop
movsb
mov
xor
sbb
and
insl
sahf
test
sbb
test
jnp
mov
aad
dec
js
sarb
int3
xchg
sub
shll
xor
aam
xchg
add
into
adc
aaa
fimuls
xorl
push
push
fcomps
push
push
js
test
das
xor
iret
jle
sbb
das
pop
out
lcall
ja
lods
out
es
fisttpll
cmp
ret
adc
mov
xor
in
pop
push
xchg
pop
sbb
dec
imul
das
jnp
addr16
push
bound
and
cli
lods
sbb
mov
adc
ss
jo
fwait
leave
or
mov
adc
outsl
in
cli
gs
stos
fisubl
push
je
or
add
pusha
push
fwait
pop
jge
inc
shl
aad
inc
lret
iret
nop
scas
lods
movsb
xchg
dec
cmp
jmp
jmp
sub
or
inc
jbe
dec
cld
add
adc
push
int
and
cmpsl
mov
dec
or
pusha
stc
lea
fimull
cltd
cli
sbb
push
adc
xlat
popa
std
or
lods
or
arpl
pop
das
mov
mov
push
dec
mov
jb
je
mov
cli
int
pushf
adc
or
add
insb
jge
pop
fwait
mov
mov
stos
adc
data16
and
fsubrs
mov
or
pop
or
mov
pusha
insl
test
out
add
idivl
push
and
fcoms
cwtl
mov
jecxz
push
or
popf
out
or
push
mov
mov
inc
in
and
hlt
cmp
in
push
pop
push
mov
push
pop
fwait
push
mov
lods
insl
or
xor
cld
shll
dec
test
shr
push
or
ja
push
lret
shlb
cmp
cmc
scas
adc
xchg
jle
lods
je
nop
pop
cmpsb
in
push
mov
xor
lock
adc
stos
xor
xor
sahf
stos
rcr
jge
xor
add
jecxz
xlat
push
ret
mov
insl
mov
cmp
fstl
mov
scas
hlt
mov
fnsave
and
pop
push
fsubrs
fiadds
sub
dec
push
dec
mov
jl
lret
pop
insl
sub
imul
push
fsubl
insb
incb
jle
mov
inc
mov
in
cmpsb
xchg
pop
in
inc
mov
cltd
in
aam
or
outsl
mov
mov
shrl
ds
sbb
testl
xor
enter
jb
dec
jae
push
sbb
shl
rcrl
cwtl
ja
or
dec
pop
data16
jp
daa
mov
scas
pop
inc
xchg
sub
xchg
fisubs
loope
repz
out
frstor
aad
stos
adc
iret
sub
mov
scas
cmp
dec
xchg
stos
xor
aaa
out
mov
ret
cltd
cmc
and
fstpl
out
std
pusha
daa
mov
jne
imull
rcl
dec
es
xchg
xor
jge
cmp
in
add
mov
test
jmp
out
xor
xchg
ret
xchg
and
pushf
sbb
cmp
push
adc
out
movsb
add
sbb
jmp
sbb
rclb
ja
push
insl
icebp
inc
or
aas
pop
pop
es
mov
inc
cmp
arpl
mov
xor
lcall
imul
pop
xlat
out
pop
pop
lods
mov
out
jb
mov
adc
pop
push
mov
aas
test
fs
jle
mov
cli
or
imul
jp
mov
cmpsb
int3
clc
add
shll
je
push
js
aas
dec
pop
into
mov
bnd
out
or
aad
insb
cmp
or
pop
cmp
cmp
sahf
xor
sub
jmp
jb
xchg
cmp
sub
mov
in
nop
xchg
push
dec
and
pop
cmpsl
adc
mov
mov
subb
xchg
and
mov
xchg
adc
sbb
mov
mov
or
inc
pop
add
ljmp
repz
jns
and
daa
push
pushf
jecxz
sbb
idivb
jge
inc
out
xchg
mov
xlat
lods
xchg
cmpsl
cmp
inc
xor
push
or
popf
in
mov
mov
sbb
sahf
sti
sbb
inc
cmpsl
test
leave
jns
bound
pusha
mov
sub
sarb
dec
cmc
ja
fcoms
push
addb
pop
fcomi
or
in
or
fs
icebp
push
fdivr
sub
int
add
test
mov
inc
int
mov
mov
push
repz
xlat
mov
jmp
movsb
xor
out
fnstsw
xchg
fwait
out
vmovhps
in
nop
loop
lea
aam
mov
and
mov
jmp
dec
push
and
clc
ficomps
test
and
insb
sbb
push
cmc
sub
out
out
mov
into
adc
leave
adc
shrb
or
or
shl
insb
dec
add
or
inc
pop
rorl
movsl
addl
fsubs
xor
ja
pop
push
xchg
sub
lods
clc
adc
pop
je
addb
xlat
pusha
cmpsl
insb
enter
lret
inc
mov
sbb
pop
xor
shr
xor
add
xchg
scas
cltd
cmp
je,pn
hlt
sahf
cmpsl
aad
or
inc
lar
mov
enter
outsb
sub
cltd
fistps
ss
dec
mulb
jbe
fistl
push
aas
je
xor
sbb
mov
fnstsw
sub
cli
cwtl
xchg
gs
xor
arpl
push
clc
sarl
mov
mov
push
cmp
lea
push
sbb
in
les
and
pop
push
push
or
in
bound
dec
out
push
mov
test
xchg
mov
mov
cmpsb
xor
xchg
sub
icebp
mov
mov
xor
sub
jne
jecxz
aam
jae
jge
rcll
and
fdivl
dec
push
pop
sti
inc
insb
pusha
cltd
insb
xchg
sub
xchg
dec
and
xor
stos
fcomps
xor
rol
xchg
inc
push
sub
lret
addl
imul
jge
push
mov
ljmp
repnz
add
mov
loopne
pop
pop
xor
xchg
jo
xchg
outsl
pushf
orl
in
addr16
ret
imul
sub
xchg
fildll
xor
xor
mov
inc
dec
inc
jg
push
in
scas
add
adc
fdiv
push
cld
ds
adc
add
inc
pop
imul
imul
ljmp
test
ret
repz
cltd
icebp
inc
xchg
and
push
pop
popf
pop
nop
in
push
test
stos
jbe
jns
inc
push
out
push
lods
pop
out
jno
test
fcoml
jns
push
outsl
xchg
daa
mov
push
push
cmpsl
jl
lds
add
in
outsb
pop
insl
cltd
xor
xchg
cmp
movb
ret
jns
shlb
ss
movsb
or
push
adc
push
fidivrs
sub
sub
fdivrl
iret
roll
add
int
mov
cmp
leave
aam
ficoml
aam
xchg
push
or
add
adc
cmp
loop
mov
mov
adc
out
cmp
adc
cmp
sbb
xchg
mov
or
ja
fwait
data16
mulb
insl
and
cmp
adc
jne
hlt
test
sbb
ss
cmp
jle
in
pop
int3
es
data16
pop
mov
lret
or
outsb
sub
lds
xor
rcll
xchg
xchg
mov
xchg
xchg
ljmp
lretw
push
mov
sub
xor
push
sub
add
jge
pop
imul
adc
aas
and
cmpsb
sub
jle
cltd
popl
mov
mov
xchg
decb
xchg
repnz
xor
sbb
cli
jmp
and
jns
std
or
jnp
negb
stc
ret
mov
loope
or
popa
cld
addr16
int
mov
jne
and
fcoml
andl
pop
sub
popa
jmp
adc
cmp
add
add
cwtl
and
ficomps
movsl
add
inc
imul
and
jbe
or
fildll
inc
pop
ror
cmpsb
ret
popf
inc
mov
dec
adcl
shrl
or
or
out
inc
pop
inc
inc
lock
add
sbb
push
push
sbb
popa
sbb
xchg
pop
rcrb
loop
scas
aad
ret
mov
movsl
iret
jns
shl
pop
in
test
ds
inc
sbb
loop
movsb
enter
repz
aad
jb
or
jmp
popa
aas
xor
pop
fcomps
sbb
aas
insb
lret
cwtl
icebp
xchg
cmpsb
out
and
repnz
adcb
cmp
xor
movsl
jp
in
mov
sbb
shlb
hlt
pop
scas
repz
mov
fcomps
pop
push
in
pop
and
mov
aaa
aaa
push
loope
je
mov
roll
test
lahf
sbb
pop
dec
repz
jge
sub
test
call
repnz
xor
mov
cmp
and
cmp
mov
inc
mov
loope
inc
inc
out
daa
or
in
mov
pop
xor
jp
jne
pop
jne
shlb
pop
cmpsl
gs
arpl
inc
in
inc
cmpb
repz
adc
lahf
pushf
cmpsb
lods
jl
clc
loope
push
popa
in
cwtl
mov
mov
pushf
dec
addl
stos
jl
and
add
fsubrl
stc
push
insb
xor
push
fnstenv
fbstp
sbb
jmp
push
popa
push
pop
insl
hlt
add
push
or
sti
call
pop
aad
adc
xchg
into
rolb
pushf
adc
and
call
mov
push
push
mov
xor
xor
test
and
aas
mov
xchg
xchg
clc
ljmp
daa
mov
loopne
ja
stc
cmp
mov
jns
and
mov
dec
fldcw
push
shr
sub
nop
add
jne
dec
and
jl
jmp
pop
cmp
mov
lahf
iret
sbb
aaa
int
jbe
mov
fdivrl
jmp
in
and
je
push
mov
pop
lret
mov
push
xchg
xlat
mov
pop
bound
xor
rolb
lock
pop
lods
xor
sbb
insl
inc
cmpsb
adc
js
jmp
pop
push
out
mov
out
mov
ret
in
push
push
add
push
sub
push
jge
aas
mov
xor
fimull
hlt
jmp
sbb
jecxz
dec
fdivr
mov
jns
jle
lods
lock
lret
pop
cmc
xchg
cmp
fisttpll
dec
xchg
fldl
repz
jb
lods
jae
pushl
push
fstps
push
push
mov
loopne
adc
mov
sbbl
aad
push
in
mov
stos
mov
mov
or
in
push
imul
push
push
mov
mov
adc
jnp
pop
cmp
ja
adc
mov
std
jb
popf
adc
mov
add
mov
enter
mov
pusha
mov
test
mov
xchg
pop
test
jge
iret
stc
cmp
sub
xchg
cmp
add
iret
add
adc
inc
xor
mov
in
gs
jne
out
call
xor
cmp
push
sub
ds
jae
fldt
add
sub
cmpsb
jl
stos
fwait
xor
jge
incl
xchg
rclb
mov
pop
mov
mov
das
jne
fwait
in
mov
out
in
pushl
push
incb
jecxz
inc
jno
xor
xor
insl
enter
inc
sub
xor
xchg
mov
sub
addb
jb
inc
ljmp
cmp
imul
decl
popa
cmp
and
movsl
not
and
fsub
pop
je
int3
or
fwait
ja
movsb
dec
push
pushf
push
xorl
in
sbb
pop
stos
imul
mov
inc
int
arpl
add
in
sbb
inc
cmp
daa
sbb
fs
sub
mov
loope
adc
cmp
in
pop
dec
push
out
jp
pop
jp
or
adc
push
or
fdivl
jno
jmp
mov
fstpt
dec
pop
loope
rcll
cld
loopne
push
push
lcall
scas
mov
dec
in
cmpsb
dec
push
inc
push
lods
pop
cmpb
adc
and
and
xchg
mov
adc
jb
test
movsb
daa
push
cmp
cmp
adc
adc
mov
lock
xchg
stc
mov
lret
sbb
es
cmp
lret
push
jecxz
lea
sub
lret
or
lret
aam
in
adc
cmp
push
shll
insb
lahf
sahf
xchg
sub
nop
cmpsb
dec
inc
cmp
hlt
in
setne
mov
popf
inc
xchg
mov
lods
cli
sarb
xorb
cmp
imul
mov
mov
mov
jbe,pn
xor
jo
pop
outsl
ljmp
or
or
outsb
cmp
mov
lock
je
in
jle
dec
pop
lcall
dec
pop
jl
pop
xor
movsl
inc
push
mov
pop
repz
pop
loop
push
jnp
xchg
mov
inc
or
push
cmp
notl
mov
sub
popa
mov
xor
xlat
jbe
jne
pop
xchg
loop
mov
mov
movsb
push
push
sub
cmp
sub
xor
into
imul
stc
push
jb
in
push
jp
iret
mov
clc
popf
adc
sbb
mov
icebp
xchg
cmp
dec
adc
cltd
xor
mov
lods
js
push
imul
lods
std
xchg
aas
add
insb
cmpsl
pushfw
or
mov
add
mov
mov
inc
xlat
daa
add
xchg
nop
or
shll
rcll
bound
and
push
push
and
leave
leave
inc
lcall
jmp
in
lods
shl
jo,pt
js
div
sub
xchg
jo
mov
mov
lret
stc
add
sub
dec
dec
adc
dec
popf
imul
shrl
sub
outsl
ret
out
jmp
mov
inc
adc
pop
xchg
ret
mov
or
orl
jb
adc
jne
pushf
xchg
mov
dec
mov
and
call
adc
scas
xlat
icebp
sti
sub
mov
orb
jo
and
mov
lahf
adc
rclb
dec
mov
lock
push
pop
cltd
jecxz
xor
inc
cmovb
movsb
xchg
push
mov
add
stc
ljmp
mov
add
pop
cmp
adc
mov
icebp
movzbl
movsb
mov
mov
and
cmp
xchg
pusha
rolb
mov
outsl
ljmp
push
push
adc
ja
lock
loope
sbb
fwait
in
int3
push
add
sub
and
leave
fistl
xchg
pusha
dec
das
mov
aad
xor
sbb
jo
push
shll
jp
or
mov
sbb
adc
sub
cwtl
neg
add
lock
adc
mov
mov
pop
sbb
mov
push
xchg
mov
mov
cmp
cmp
out
test
leave
dec
sub
in
dec
xor
adc
xchg
add
push
fldl
jmp
imul
rolb
xor
inc
movsb
push
inc
lea
fidivrl
push
in
jmp
pop
cli
mov
push
push
jbe
lret
es
dec
lret
sub
fwait
jl
jge
push
cmp
popf
xchg
lea
sub
call
int3
aam
ja
jno
nopl
aaa
dec
addr16
cmp
in
push
xchg
sub
pop
gs
mov
dec
or
fs
stos
pop
loope
jmp
nop
out
or
mov
jno
pop
aaa
jge
divl
xchg
and
stos
xor
sti
xchg
mov
dec
sahf
lret
sub
mov
jbe
hlt
mov
subl
xor
mov
or
jnp
call
pop
pop
add
ss
xlat
sub
sbb
movl
mov
cmp
dec
test
push
mov
rorb
sub
cmp
lahf
scas
loopne
scas
xchg
fadd
lock
cmp
push
pusha
add
rcll
adc
xor
in
ja
pop
sub
mov
sbb
mov
or
push
sub
je
mov
mov
push
lcall
adc
mov
jmp
and
loop
fs
sub
jnp
push
inc
call
add
int3
mov
rcrl
clc
scas
xchg
icebp
test
cmp
add
xor
xor
mov
mov
popa
mov
jle
xor
scas
push
inc
jnp
fdivs
iret
stos
and
fistpl
jecxz
lcall
mov
mov
mov
dec
insb
adc
dec
jne
dec
cmp
add
mov
insb
inc
and
jns
cmc
mov
cmp
ja
jmp
incb
shrl
cmp
mov
out
out
imul
inc
insl
je
push
add
cmc
in
push
mov
push
push
add
mov
jno
push
dec
jg
cmp
ficoml
repnz
movsb
repnz
mov
pop
fwait
lock
cs
inc
setp
dec
mov
pop
add
outsl
adc
xor
sbb
add
pop
sbb
mov
popa
dec
add
mov
fwait
pop
lods
jns
in
cmpsb
cmp
adc
call
cmp
adc
or
imulb
sub
pop
cmp
dec
gs
xor
stos
cmovns
in
mov
jae
call
scas
repz
or
fistpll
int
add
adc
jmp
sbb
inc
aaa
test
and
xchg
mov
popf
lods
lahf
jbe
push
loop
clc
pop
jbe
mov
nop
fwait
mov
adc
add
outsl
ret
add
xchg
mov
mov
push
pop
push
mov
inc
xchg
rclb
orb
daa
jp
fistpl
mov
les
mov
cmp
add
xor
and
inc
ret
push
adc
xchg
bnd
sbb
cmp
lret
fidivrl
dec
fucom
sub
cmp
clc
pop
sub
je
dec
cmp
adc
addr16
jnp
mov
push
in
stos
inc
dec
test
cmp
inc
pop
xchg
repz
test
loopne
dec
sti
test
adc
loope
pop
xchg
in
xor
xchg
push
in
ja
arpl
add
push
test
hlt
adc
mov
add
adcl
repz
mov
xchg
sub
xchg
adcb
ss
mov
stos
or
or
leave
mov
mov
test
mov
add
adc
fwait
stos
or
jns
mov
push
lret
sbb
and
dec
mov
sbbl
jmp
cwtl
gs
lret
notb
jl
dec
iret
ds
cmp
sub
inc
fs
int3
in
ret
add
lret
ja
jns
rcl
add
iret
movl
movaps
add
movsl
add
push
or
push
lret
sahf
js
jmp
push
xor
xchg
xor
fwait
mov
lret
sbb
sub
or
push
push
lock
cmpsb
lds
idivl
int3
sbb
fldt
cwtl
mov
pop
lcall
cs
ljmp
pop
and
cld
pop
mov
mov
and
daa
jo
popa
push
loope
gs
aam
adcl
pusha
dec
jbe
movsl
xor
sbb
add
dec
pop
or
sahf
cltd
out
ret
sbb
sahf
mov
jg
lds
loope
mov
les
icebp
rep
call
pusha
les
fldlg2
sub
std
fstl
push
dec
sub
sti
push
jo
pop
aaa
sahf
cmp
sub
lock
inc
mov
shl
ror
std
orb
das
inc
fists
lcall
pop
hlt
into
mov
jmp
sarb
xor
stc
mov
mov
inc
lock
jl
mov
out
jg
roll
popa
call
test
or
mov
mov
mov
js
adc
dec
mov
outsb
jg
cli
dec
xor
stc
add
inc
out
add
cmc
jle
sub
adc
mov
or
aas
pop
add
outsb
cmp
imul
call
sub
insb
add
hlt
pop
cltd
test
fiadds
add
jl
mov
cvtps2pi
dec
mov
jo
adc
pop
mov
mov
int
pop
enter
std
add
daa
lods
stos
add
int3
test
es
inc
dec
xchg
jecxz
fstps
je
sarl
adc
shlb
xor
out
ds
adc
test
push
adc
test
fsubs
dec
push
xor
mov
inc
mov
ss
dec
lahf
push
int
fwait
cld
adc
ja
jns
fildl
jmp
outsb
dec
jo
jne
fwait
and
push
jmp
rorl
ja
xchg
pop
fsubrp
rorl
sub
out
in
sbb
xchg
inc
sbb
jecxz
cltd
mov
das
push
je
stos
adc
scas
inc
insb
movsl
push
loop
imul
cld
push
xchg
lea
mov
mov
xchg
cmpsl
sbb
iret
push
add
adc
adc
mov
test
sbb
mov
fs
jmp
cmp
inc
mov
jecxz
push
xor
shll
dec
das
test
dec
sbb
or
push
or
bound
mov
adc
mov
dec
adc
fs
push
imul
push
jge
or
stos
dec
cltd
rorl
jmp
xchg
aad
in
add
enter
inc
and
cwtl
enter
mov
out
adcb
jle
mov
pop
leave
add
cmp
jmp
outsb
xor
inc
jmp
fmull
mov
sbb
sbb
lods
sbbb
jecxz
jno
dec
mov
fsubrl
cmp
out
inc
out
inc
add
pop
cmpsb
or
aam
mov
aam
call
fs
mov
adc
subl
inc
lods
sti
and
fst
mov
nop
mov
jmp
pcmpgtd
xchg
divl
xor
cld
xlat
sbb
and
cmp
mov
adc
scas
aad
push
int
sub
inc
inc
fdivr
jge
sbb
dec
pop
push
pusha
aad
xchg
inc
lods
cs
ret
mov
fdivs
adc
adc
insb
imul
adc
lret
mov
push
sbb
xchg
ds
es
push
pop
jmp
mov
test
mov
sbb
adc
int
lea
mov
aad
xor
mov
ljmp
jb
daa
jmp
pop
jmp
pop
pop
pop
clc
dec
inc
lret
pop
mov
loop
sbb
adc
rcrb
mov
xorb
inc
cmp
push
jecxz
cli
sub
inc
sub
mov
lea
xchg
test
jecxz
pushf
inc
mov
mov
jb
mov
or
mov
pusha
stos
lret
hlt
fisttps
pop
mov
testb
jns
leave
push
push
mov
xor
xor
pushl
or
pop
js
inc
loop
pushf
testl
inc
sbb
push
dec
ja
out
dec
add
out
mov
fldcw
jno
pop
mov
mov
and
jae
imul
dec
pusha
sub
das
sub
jg
pop
test
jle
in
or
xchg
or
jae
shrl
je
lret
std
lahf
pop
dec
insb
fnstcw
and
iret
out
enter
pop
push
mov
sahf
mov
xor
out
in
orl
jmp
lcall
jl
out
jo
mov
cmp
dec
repnz
cwtl
adc
ja
das
ja
jge
mov
mov
ficompl
and
pusha
push
ss
popf
sbb
ret
cmpsb
aaa
sbb
addr16
sub
xchg
and
jecxz
fnstenv
je
cwtd
bound
das
rcrl
data16
scas
mov
iret
xchg
je
mov
mov
mov
mov
cmp
jecxz
jg
or
lock
mov
cmpsb
sub
incb
inc
and
lock
push
clc
or
push
cmp
pop
test
mov
mov
sub
ljmp
xchg
add
mov
xor
rcr
jge,pn
jno
test
in
scas
xor
imul
inc
in
sub
pop
dec
fsubs
ret
sbb
jmp
push
inc
cmpsb
sub
daa
lea
fisubl
adc
xchg
popa
jnp
adc
xchg
mov
mov
jno
fwait
sub
es
scas
pop
cmpsb
inc
test
pop
mov
xchg
loop
xchg
stos
int
inc
adc
mov
pushf
lret
dec
shrb
push
nop
sub
lret
push
repz
lcall
jbe
xchg
out
or
in
call
nop
ret
stos
cld
pushf
and
in
mov
add
mov
adc
xor
xchg
mov
lds
je
push
test
out
ss
es
adc
repz
mov
test
mov
ljmp
jne
xor
or
cmp
mov
outsl
pop
popa
imul
popa
jb
push
fadds
mov
in
fsubr
sbb
out
cmc
aad
aas
dec
lcall
out
xor
push
xchg
or
inc
xor
enter
adc
test
mov
out
xchg
in
push
mov
daa
into
jl
call
dec
popl
jmp
mov
imul
roll
ret
mov
incl
sbbl
jge
stos
sub
cmp
enter
push
dec
add
sbb
iret
movsb
mov
fistl
fnstcw
aad
jl
in
sub
cmp
xchg
sub
rorb
cmp
in
push
std
aad
add
mov
push
or
or
outsb
rcrl
insl
jmp
xchg
and
jne
inc
lea
push
push
cwtl
cld
fisubs
loope
lock
push
xchg
lret
jle
ficompl
jnp
cld
mov
xchg
cmp
jecxz
xchg
pusha
adc
outsl
into
aaa
loop
mov
push
cwtl
xchg
sbb
xchg
lds
fistl
loope
cli
sbb
ret
aam
mov
add
cs
mov
adc
sub
mov
mov
in
das
push
mov
sbb
daa
and
inc
inc
movsl
adc
cmp
mov
sub
xor
xchg
jno
iret
mov
outsb
pop
mov
popa
cmpsl
gs
fistps
les
mov
sub
loop
xchg
xchg
mov
mov
push
popf
pop
insb
iret
jge
pop
cmpsb
out
push
lea
das
inc
mov
nop
inc
add
in
sti
xchg
sbb
or
frstor
std
fistpl
loopne
ficoms
cmc
loopne
enter
enter
mov
push
push
sbb
jge
pushl
xchg
shr
icebp
jp
fstpt
xchg
and
pop
push
jp
push
dec
jnp
icebp
dec
dec
les
xor
sub
leave
fs
pop
in
push
mov
cmp
mov
add
jbe
xchg
pusha
mov
cmp
gs
jo
std
insl
sar
dec
stos
xchg
add
xor
imul
push
insl
sub
mov
jecxz
inc
imul
and
lock
sbb
mov
out
pop
pushf
out
cmp
add
xor
push
in
shl
ret
in
push
ja
or
mov
and
mov
in
dec
leave
lods
mov
jns
jecxz
cmp
pop
mov
mov
leave
inc
mov
inc
fcmovnu
lods
outsb
movsl
mov
aas
pop
and
jge
dec
stos
rorb
adcb
fcomps
push
mov
pop
xor
lret
in
scas
lret
movsb
cmp
push
call
push
js
mov
xor
clc
pop
inc
and
or
aam
push
popa
mov
gs
int3
sub
xor
iret
notl
loope
mov
ja
stc
xchg
jecxz
shl
pop
hlt
cs
int3
pop
out
aas
cltd
dec
fisttpll
add
mov
stos
les
sarb
xchg
add
iret
lret
ljmp
push
stos
negb
and
jl
sub
xlat
dec
mov
stos
dec
sti
add
lcall
sub
sbb
fcomps
pop
mov
cmc
lcall
outsl
clc
outsb
sbb
mov
add
fstpl
cmp
ss
int
xlat
xor
test
pop
outsl
xchg
mov
mov
xor
jp
ja
or
addb
mov
push
add
fs
inc
sahf
or
fmull
adc
rcr
push
push
sub
fcoms
mov
loopne
js
add
sub
movsl
lods
jmp
xchg
jae
add
pop
jnp
aam
int
inc
lcall
movsb
pop
push
and
and
mov
leave
les
sub
mov
jg
sahf
stc
add
xchg
mov
cltd
pop
xchg
adc
test
adc
test
xchg
jae
idivb
xchg
jecxz
jle
pop
mov
shl
mov
sub
dec
dec
xorl
mov
xlat
cmp
js
inc
out
jecxz
jmp
sub
lods
jp
inc
and
sahf
movsb
jecxz
dec
mov
movsl
push
data16
fnsave
cmp
in
jne
and
addr16
fs
push
sub
lods
cmp
cmp
jl
xor
mov
cmp
stos
pushw
movsl
and
lret
gs
call
add
xor
push
scas
pusha
rorb
and
add
jl
dec
cltd
mov
movzbl
ficompl
into
sub
lea
sub
mov
xlat
mov
sbb
int3
or
push
out
hlt
rorb
lret
and
daa
sub
mov
pop
mov
stc
pop
orb
daa
gs
test
inc
jne
and
pushf
daa
insl
jl
or
adc
cmc
push
fwait
insb
push
adc
push
mov
push
mov
sub
push
push
out
fildll
pop
mov
push
jl
test
aad
jle
outsb
jae
adc
sti
or
and
add
pop
popa
gs
mov
push
fcmovb
cmpsb
fnsave
ds
sub
mov
xchg
cmp
rclb
xchg
lea
push
into
dec
and
cmpb
pop
pusha
adcl
sbb
ja
mov
fisttpll
pop
test
add
stos
leave
push
fldcw
stc
or
mov
ja
jno
repz
leave
xchg
cmc
mov
shr
and
mov
arpl
jae
push
shrb
adc
dec
ja
into
cld
xchg
push
add
mov
repnz
pushf
fistpll
iret
pusha
mov
or
or
sbb
mov
xchg
jns
pop
sub
jo
enter
sub
inc
mov
push
mov
sbb
sub
inc
out
imul
push
fs
jmp
jmp
jo
sub
jb
xor
es
pushf
pop
jmp
adc
xor
cs
imul
mov
sub
cmp
fs
jbe
je
test
push
fisubl
cmp
movsl
jb
outsl
push
out
adc
mov
out
lahf
mov
sbb
test
adc
imul
or
lea
or
nop
jp
dec
add
aam
xchg
sub
lahf
xchg
cmc
xor
mov
outsb
jl
pop
jge
mov
pop
sub
inc
fwait
inc
int
xor
sub
pop
mov
jnp
fwait
inc
out
ss
in
add
jns
fistps
jge
push
cli
inc
xchg
push
aaa
adc
loope
fsubr
fdivl
sub
lock
fisttpll
jmp
jb
inc
int3
call
lret
das
push
inc
fstl
push
sbb
mov
jge
cmpsl
in
mov
pop
mov
pop
aaa
mov
xchg
cmpsl
push
popf
lock
pop
dec
cli
inc
sbb
cmpsl
xor
jl
and
cmp
std
fmull
mov
mov
jne
dec
mov
cmp
daa
sub
leave
les
mov
pop
daa
fs
call
mov
gs
jae
clc
inc
add
xor
call
add
mov
dec
outsl
aaa
and
outsl
mov
and
push
mov
mov
int3
and
mov
cmpsl
pop
ljmp
cmp
leave
cmp
jnp
add
neg
push
pop
mov
leave
hlt
mov
mov
sbb
insl
pusha
mov
insl
mov
sub
mov
inc
jmp
push
dec
lea
std
out
mov
fstp
adc
lods
inc
aad
icebp
call
fdivs
adc
pop
pop
in
imulb
push
ret
or
les
mov
sub
pop
mov
add
repz
jp
lods
sahf
imul
popf
lret
jmp
mov
movsb
cmp
arpl
and
mov
aad
repnz
mov
out
je
fcoml
sbb
jg
stos
jp
inc
cmpl
and
jp
jbe
fdivrl
sahf
add
jb
aas
sub
fincstp
pop
dec
idivb
or
ror
push
jecxz
movsl
icebp
filds
lods
test
sbb
shl
fimuls
mov
adc
movsl
call
repnz
imul
jno
test
xchg
cmp
mov
push
dec
push
add
mov
es
je
mov
in
inc
sub
aam
aaa
push
lret
push
out
repnz
pop
mov
push
jecxz
arpl
inc
sbb
cmp
mov
daa
icebp
adc
mov
and
dec
jae
inc
movsl
enter
inc
into
mov
or
test
inc
xlat
or
arpl
outsl
jl
sub
lds
fistps
xor
adc
call
jb
adc
add
xor
ret
jge
pop
aas
out
js
jbe
bound
ljmp
jecxz
jns
xor
push
rorb
pop
out
cwtl
cltd
push
lahf
inc
out
mov
push
dec
jge
popa
dec
lods
push
jb
adc
fbstp
data16
xchg
aad
pusha
push
pop
fisttps
mov
push
arpl
in
rol
int3
pushf
or
mov
ret
lds
adc
aam
inc
leave
std
mov
jnp
push
sbb
cmpl
fcoml
cli
je
or
push
push
cmpsb
add
dec
shld
int
cmpsl
sbb
and
xor
mov
aam
mov
pusha
sbb
jb
jp
cmp
pop
mov
in
aad
pop
js
push
dec
and
or
faddl
test
mov
add
imul
test
out
rol
fst
fmul
dec
outsl
mov
es
xchg
push
or
mov
xor
in
cld
add
fistps
inc
jg
dec
stos
sbb
scas
cmc
mov
cwtl
mov
push
adc
addl
mov
add
roll
add
sub
push
jae
and
lds
addr16
pop
sbb
repz
jae
bound
ret
gs
bound
cmp
jge
adc
data16
sub
into
sub
sbb
jae
std
xor
ret
sub
addr16
aas
xor
jbe
je
mov
mov
xchg
sub
cwtl
pop
es
cmp
mov
enter
imul
ret
decb
subb
push
pop
int3
jne
jno
jl
xor
pop
jbe
sti
andl
clc
addb
js
cmp
or
sub
cmp
lret
ja
sub
sub
pop
mov
mov
dec
movsb
hlt
orb
or
in
push
les
je
inc
iret
iret
shr
push
xchg
add
jp
in
enter
fisubrl
mov
push
cmp
ficompl
and
pop
scas
sahf
add
scas
pusha
mov
adc
fldenv
loop
daa
movsl
cmp
addr16
ret
xlat
mov
mov
cli
daa
xlat
pop
xor
out
adc
pop
jle
out
xchg
mov
je
inc
jb
adc
xor
or
aam
loop
stc
xchg
cmp
add
cmpsb
pop
mov
pop
addr16
les
xchg
les
cmp
jbe
mov
fldenv
sub
mov
inc
notb
sub
subb
jo
sub
mov
out
inc
dec
xchg
sub
jns
fwait
pop
popa
or
fldl2t
push
fwait
jbe
sub
mov
jg
test
loopne
mov
xchg
movb
out
jnp
xchg
dec
cld
lock
mov
dec
lock
add
into
mov
sbb
loopne
hlt
inc
insb
jmp
movsl
cld
fnstsw
enter
adc
in
sbb
roll
sub
cmpl
int3
fildll
stos
pop
mov
cmp
in
imul
notb
aad
icebp
mov
enter
mov
rcrb
jno
push
fsts
and
add
cmp
sub
xchg
call
mov
loop
add
out
mov
or
out
and
sbb
std
cld
dec
jecxz
loopne
mov
mov
stc
outsl
mov
jno
pop
xor
cmp
mov
mov
jle
xchg
nop
xchg
dec
loop
inc
pop
jne
xor
loop
data16
mov
ja
in
sub
mov
mov
push
push
push
sbb
scas
or
push
mov
xchg
pop
xchg
pop
roll
movsb
rorb
add
sti
mov
scas
mov
and
push
push
jae
repz
and
loope
adc
daa
push
push
add
sbb
lods
mov
xor
cmp
stc
cmpl
dec
or
jb
stos
adc
push
fs
pop
jg
and
faddp
mov
mov
data16
push
mov
pop
or
add
pop
adc
jb
jbe
cmc
stc
psubsb
je
test
test
cmpb
mov
push
jge
jp
hlt
test
xlat
jmp
dec
pushf
sbb
ss
scas
dec
mov
or
andl
sarb
ds
insl
dec
xchg
or
mov
inc
loopne
out
idivb
ljmp
aad
mov
inc
pop
repz
notl
stos
mov
xor
or
xor
inc
xchg
inc
mov
or
pop
adc
mov
inc
push
test
push
shll
cmp
test
test
xor
mov
sub
jl
push
faddp
mov
bound
rdmsr
mov
int3
daa
mov
ret
dec
adc
cmp
call
test
cmp
xchg
fdivs
mov
push
fisttpl
jbe
lds
inc
imul
or
mov
jae
push
fwait
xchg
or
mov
mov
lret
push
lods
addr16
test
mov
movsl
rorb
sbb
lds
shll
pop
mov
xor
or
stos
mov
imul
outsl
sahf
cmpsl
loop
inc
arpl
jnp
jmp
mov
adc
jb
jmp
lea
inc
inc
mov
cmp
lods
scas
push
adc
outsb
mov
mov
fs
inc
pop
iret
fs
xor
mov
cltd
cmp
les
mov
push
sbb
cmpsl
das
jae
cwtl
pop
mov
nop
push
js
mov
and
mov
mov
inc
icebp
pop
add
mov
popa
in
sub
jo
sbb
repz
aaa
sub
ss
mov
xor
xor
ret
pop
and
cmp
cmp
loope
adc
pop
mov
pop
sub
mov
aad
movsl
ret
pop
cmp
bound
xchg
xchg
sbb
xchg
movsl
inc
in
inc
or
in
fnsave
lret
dec
mov
lret
push
jne
cmp
sbb
and
jnp
mov
push
fwait
add
pop
jae
inc
fldcw
sahf
icebp
ficompl
call
push
pop
cmc
addr16
push
fidivs
xchg
inc
cmpsl
repz
ja
pop
cltd
loope
add
frstor
mov
sahf
lret
addb
das
sbb
test
ss
mov
iret
stc
pop
out
fistpll
cmp
mov
or
push
mov
mov
inc
data16
mov
and
movsl
iret
pop
mov
test
sbb
cmpsb
adc
or
in
xchg
or
push
ljmp
nop
sbb
fisttpll
fdivrs
push
shl
dec
cmp
std
sbb
or
push
daa
pop
add
pop
pop
xchg
dec
movl
scas
je
lret
mov
mov
lret
adcl
mov
lods
daa
cmpsb
jb
imul
mov
or
mov
mov
movsl
lahf
pusha
data16
xchg
add
jg
out
movsl
mov
inc
stos
aas
int3
es
cwtl
push
jg
clc
hlt
xchg
adc
xor
jb
jle
out
pusha
jmp
lods
cwtl
push
or
sbb
push
xchg
lods
mov
f2xm1
jg
dec
popa
aaa
test
sahf
push
incl
pop
sub
mov
rorb
pushf
xchg
dec
call
mov
imul
adc
mov
leave
push
mov
repz
pop
lret
sbb
in
sbb
xorl
in
pop
push
arpl
sub
andb
sub
sub
loopne
loope
lret
stos
mov
das
mov
xor
aas
testl
mov
loopne
mov
aas
lret
fidivrl
loopne
ljmp
shrb
add
fcompl
mov
popf
out
rol
cltd
rol
cli
mov
or
daa
popf
dec
pop
jmp
stos
mov
cmp
test
shll
mov
cld
stos
push
add
mov
outsl
and
and
lods
out
inc
pop
jle,pt
mov
add
repnz
dec
mov
xor
pop
dec
xchg
outsb
je
jb
repz
mov
aaa
inc
push
and
push
inc
lods
push
push
xchg
sbb
scas
pop
mov
lcall
sbb
scas
cld
push
lcall
imul
sahf
sbb
sahf
cmpsb
mull
mov
out
scas
jae
outsb
ja
cwtl
cmp
add
clc
shll
orb
scas
test
fs
adc
das
lar
mov
add
xor
subb
decb
movsl
mov
popa
jmp
fidivs
mov
pop
or
add
cmc
sub
xchg
mov
les
pop
adc
inc
mov
fwait
inc
out
push
out
inc
shll
xchg
movl
jb
ficoms
leave
adc
inc
mov
mov
xchg
mov
lret
cmpsl
fiaddl
push
mov
or
mov
xchg
cmpsl
arpl
sub
aam
dec
fdivrl
add
mov
out
es
outsb
dec
sub
imul
ficomps
mov
sub
push
inc
in
push
sarb
mov
mov
ljmp
pusha
adcl
dec
xchg
sbb
icebp
sbb
imul
outsl
sbb
ja
aaa
inc
out
stos
popa
daa
leave
pop
cmp
push
mov
dec
sub
mov
xchg
fistl
test
add
mov
in
xor
ret
xlat
daa
out
inc
nop
push
sub
int3
into
dec
popa
in
mov
test
add
add
mov
cltd
xchg
fcomi
fs
dec
shll
arpl
insl
xor
or
xchg
es
pop
xor
add
sub
adc
cmpsl
inc
repz
push
shlb
sub
das
mov
jg
fwait
lcall
fildll
xchg
jns
inc
icebp
outsl
test
test
mov
ficompl
popf
lret
push
fwait
mov
sub
sbb
fldcw
and
inc
push
ret
mov
lcall
sub
xor
insb
icebp
mov
mov
shlb
or
movsb
incl
les
mov
inc
sahf
jmp
ds
mov
push
cld
dec
mov
cli
xchg
inc
out
mov
stc
iret
std
sbb
mov
pop
or
nop
pusha
imul
xor
out
mov
push
inc
pop
dec
push
imul
out
mov
pop
push
je
cmc
mov
sub
rcr
repz
inc
mov
push
mov
outsb
rolb
subb
jno
flds
leave
sti
popf
jbe
orl
cmpsb
test
jnp
adc
imul
in
push
js
jp
out
dec
and
je
sub
lock
outsl
fnstenv
lods
dec
mov
push
add
xor
popa
aas
xor
fiaddl
adc
and
test
pop
fsubs
cmpsl
sti
xchg
xor
mov
clc
xor
mov
mov
mov
out
out
repz
je
pop
enter
call
pop
xor
jbe
in
sub
pop
jmp
jne
popf
ret
hlt
test
arpl
fs
rolb
mov
clc
push
adc
popa
sbb
mov
dec
or
cmpsl
jge
loope
cmpsb
inc
sub
push
leave
pop
xchg
test
stos
cmc
call
mov
mov
inc
push
fst
fcomps
cmp
dec
out
inc
cmpsb
mov
popf
dec
push
and
pop
sub
lret
cmp
or
mov
jecxz
shl
push
lea
dec
bswap
sarl
icebp
xrelease
js
push
nop
stos
stc
bound
daa
cmp
aad
xor
cmp
mov
push
mov
push
pop
pop
ret
or
sbb
cmp
movsl
push
daa
repz
aaa
stos
ljmp
sahf
data16
and
jge
sbb
sub
roll
fistpl
sub
js
sbb
xor
lcall
data16
or
and
inc
les
rclb
ds
mov
jno
jg
jl
mov
or
out
test
ss
arpl
mov
pop
add
arpl
jo
dec
adc
pusha
shl
pusha
push
xor
pushf
ret
xlat
and
sbb
pop
add
fdiv
outsb
rcl
mov
dec
sbb
sbb
loopne
out
lods
mov
fcompl
sti
movsb
lcall
mov
es
in
mov
add
dec
cmpsb
mov
daa
icebp
jge
fadd
sub
loop
xchg
mov
mov
popf
incl
mov
rorb
pop
sub
xor
pop
xor
shr
inc
sub
cmp
pop
cmc
fadd
mov
inc
cmp
jmp
push
pop
cmpl
scas
imul
mov
dec
imul
pop
push
test
mov
jne
mov
cmpsb
lds
rclb
or
cli
lahf
pop
push
nop
xor
mov
xor
add
lods
movsb
mov
idivl
lock
nop
and
mov
outsl
insb
fstps
imul
mov
cmp
es
in
sbb
xlat
cli
insl
es
jnp
aam
cmc
and
in
dec
or
pop
mov
mov
adc
pop
imul
dec
scas
xlat
sub
lret
inc
sbb
pushf
push
mov
inc
mov
mov
or
inc
cmpsb
stc
add
inc
shll
fs
mov
jg
insl
mov
enter
lret
mov
mov
jns
inc
clc
cmpsl
mov
cmp
fwait
xchg
das
and
fs
add
xchg
mov
out
mov
insl
mov
mov
jnp
rcll
and
fstpl
shl
shrb
cld
out
scas
ss
not
add
gs
mov
jae
sbb
scas
push
test
mov
jno
lea
lods
stc
xchg
nop
das
sub
fistps
xchg
mov
mov
out
hlt
and
pop
pop
pop
fcoms
mov
imul
mov
stos
sub
daa
or
pop
sbb
pop
mov
sti
or
mov
jle
std
adc
pop
xchg
jns
xor
dec
test
fisubrl
hlt
imul
scas
testl
or
in
adc
fldt
xor
test
adcb
jbe
xchg
leave
jns
stc
xchg
xor
or
lock
jge
test
enter
andnps
push
rol
jo
lods
nop
dec
fsqrt
mov
push
pop
push
repz
fsubs
xlat
sti
int3
push
or
push
add
dec
dec
push
test
push
es
in
test
mov
fisubl
pop
je
out
and
cli
lds
xlat
xchg
out
mov
loope
mov
pop
add
mov
cmc
dec
or
push
mull
or
popf
ffree
test
xchg
jmp
xor
xor
jno
negb
pop
pop
pop
push
div
fisubl
stos
sub
data16
cmpsb
pop
push
jnp
jno
inc
sbb
or
orl
imul
adc
and
xchg
in
test
pop
jg
arpl
dec
xor
cwtl
add
mov
ret
test
mov
mov
and
loop
xor
xchg
test
movsb
insb
lahf
fdivp
inc
or
jnp
xor
jecxz
inc
lods
repz
sub
pop
jns
cmp
bswap
iret
rolb
cmp
or
and
fiadds
ficompl
inc
idivl
or
push
mov
mov
xchg
xchg
roll
mov
pushf
pop
dec
fwait
jo
scas
xor
in
sub
les
xor
lods
dec
ret
or
jl
or
roll
mulb
aas
adc
iret
mov
test
lock
jbe
mov
push
push
cli
cmpsb
cli
or
lahf
jp
and
das
sub
movsl
shl
or
adc
mov
jns
je
inc
in
ja
iret
mov
gs
stos
jmp
fisttpl
push
lcall
stos
and
imul
push
mov
cmp
jg
data16
das
sbb
xor
mov
in
mov
mov
xchg
cltd
ja
aaa
repz
sbb
push
lret
inc
hlt
fisttpl
cmpl
imulb
xchg
adc
pop
inc
xchg
aas
adc
lret
xor
clc
lret
pop
popa
mov
jl
add
cwtl
out
sbbl
xchg
or
lahf
jmp
mov
test
xchg
adc
xor
fcoml
mov
nop
xor
arpl
les
push
pop
imul
in
inc
mov
ljmp
les
cmp
repnz
pop
and
mov
sarb
jl
out
in
daa
adc
out
divl
mov
jno
pop
pop
das
pop
fsubrs
cltd
mov
stc
sub
fcmove
out
repz
cmp
lret
fistpll
push
jns
sub
xor
xchg
adc
test
pop
enter
shr
inc
or
aas
push
jo
daa
mov
rorl
inc
pop
cmp
mov
adc
pop
or
cwtl
pop
cmp
and
cmp
inc
inc
jmp
push
inc
fwait
shll
ret
push
jmp
popf
lock
push
icebp
js
imul
dec
cmp
lcall
cltd
stos
enter
enter
jbe
js
mov
clc
inc
cld
bound
sbb
push
and
add
lfs
mov
push
faddl
cmp
cltd
mov
add
es
lock
pusha
ret
cmp
mov
sub
bswap
fdivl
ret
inc
sarb
dec
push
dec
mov
adc
push
inc
sbb
subl
out
sbb
push
cmp
aam
mov
fdivrs
repz
pop
fiadds
shl
sub
lcall
cltd
rclb
jmp
pop
cmp
ja
lea
jl
aas
fcmovnb
ret
mov
pop
dec
push
xchg
enter
insb
jno
mov
add
xor
bound
sahf
pop
push
icebp
andb
sbb
mov
xor
adc
hlt
es
inc
mov
adc
pop
test
and
sbb
sar
pop
rcl
sbb
xor
repz
mov
mov
test
jl
jbe
xchg
and
mov
ret
fwait
mov
and
out
inc
test
fwait
push
cmpsb
push
xor
push
push
jmp
outsl
sub
bound
and
add
sti
test
movsb
rol
or
adc
xchg
mov
test
and
jno
sub
push
repnz
rcr
pop
into
test
out
adc
add
sub
or
push
jg
mov
push
loope
pusha
adc
mov
mov
mov
sub
and
push
rcl
out
enter
loope
ret
jbe
mov
xor
mov
jne
mov
fadds
dec
and
pop
cmpsb
sub
ret
ljmp
adc
cwtl
xchg
shr
add
fwait
push
fcoms
vsqrtpd
mov
jno
rcll
inc
or
add
jg
aas
mov
jmp
mov
pop
jno
js
inc
aad
jnp
adc
fimull
dec
outsb
sub
mov
pop
jb
mov
ficompl
add
push
dec
clc
inc
mov
pop
cmp
and
out
stos
pop
shll
loop
pop
cmp
aaa
pop
sub
lock
push
mov
dec
stc
mov
aam
adcl
in
push
inc
push
lret
pop
test
stos
cli
mov
or
mov
jg
sub
mov
mov
das
mov
lret
mov
hlt
int
cld
aam
adc
test
xchg
cld
pop
pop
stc
hlt
push
pop
sub
mov
mov
mov
push
iret
sbb
in
into
in
jmp
cmp
and
xor
mov
adcb
mov
das
movsl
mov
push
mov
adc
lret
jbe
stos
push
mov
mov
jns
adc
outsb
mov
xchg
aaa
xlat
cmp
aaa
sub
pop
add
clc
pop
daa
in
push
pop
mov
cmp
sub
bound
or
pop
sub
stos
add
pop
pop
lcall
and
or
addr16
mov
pop
add
xchg
test
jns
mov
add
pop
mov
ljmp
gs
icebp
xchg
pextrw
in
fstpl
test
mov
bound
pop
iret
and
cmpsb
fsts
fistpl
push
popa
scas
push
leave
mov
xor
pop
rorb
mov
push
fcmovu
nop
jb
sbb
fimuls
mov
lcall
dec
and
ficompl
sbb
sub
cmp
xchg
xchg
jp
stos
in
es
repz
cmc
lea
sbb
mov
xor
or
lods
lahf
lret
mov
mov
cmp
push
shr
mov
xchg
fimuls
rcrb
inc
dec
pop
jp
addr16
mov
dec
cmp
inc
adc
rorb
and
in
mull
cmpsl
mov
sbb
dec
in
imul
pop
out
add
mov
pop
cld
xor
pop
sbb
cs
int
cmp
cltd
fimuls
addb
or
rcl
in
lods
in
mov
imul
pop
repnz
mov
repz
push
in
cmp
int
pusha
arpl
inc
pop
mov
mov
dec
inc
popa
mov
dec
repnz
push
shl
mov
cmpsb
cmpsb
jnp
ljmp
lds
mov
adc
pop
movb
scas
add
adc
cmpsl
ficomps
jnp
loope
sbb
or
popa
clc
inc
movsb
push
movq
in
jb
jg
stc
ret
daa
shlb
pop
pop
and
add
in
idivl
das
adcl
jne
adc
out
mov
pop
push
lret
inc
mov
mov
or
in
sbb
ret
mov
dec
insb
fadds
aad
sub
popa
pop
and
insl
inc
arpl
aaa
jle
stos
shlw
jns
mov
cmp
insl
imull
adc
sbb
cmp
out
dec
xor
test
lret
and
cmp
add
mov
insl
sbb
xchg
in
ret
fcomi
jne
sbb
repz
into
clc
pop
test
xor
jb
push
jno
pop
outsl
adc
out
jae
cmc
mov
movl
roll
and
insb
push
push
test
cli
leave
jl
nop
fs
push
mov
inc
cmp
in
adc
or
and
inc
xchg
cmovae
roll
inc
std
mov
pop
mov
flds
adc
push
insb
mov
mov
dec
xchg
mov
fucomi
or
mov
les
repnz
push
icebp
fsubrl
movsb
icebp
addl
mov
or
and
pop
popa
jl
addl
or
jae
pop
js
aaa
sbb
test
adc
inc
cmp
lret
xor
sub
cmp
inc
cmpsl
repnz
push
out
add
mov
xchg
mov
mov
jne
and
inc
in
pusha
loope
stos
mov
adc
mov
mov
das
add
mov
sbb
pop
lock
pop
insl
sahf
pusha
aad
mulb
adc
scas
call
xchg
mov
mov
nop
push
cmc
ret
aaa
add
sub
loope
ja
lea
insl
loope
pusha
outsl
std
pop
cmpsb
fcmovb
imul
dec
inc
cmpsl
adc
js
aad
clc
ficomps
fildl
adc
addr16
pop
push
sub
aaa
loop
push
inc
lea
pop
inc
sub
cmc
fidivs
stos
cld
nop
scas
fisubrs
xor
inc
cmp
int3
mov
ret
pop
or
mov
mov
fxch
mov
imul
adc
stc
xor
rcrl
jne
cmp
cmp
out
out
inc
cwtl
outsb
hlt
lahf
pop
xchg
sub
test
xchg
xor
test
jmp
hlt
mov
push
sarl
iret
cmpsb
les
jae
in
movd
pop
jmp
ret
shll
and
shll
jne
dec
imul
adc
sub
jns
lods
push
push
mov
mov
xchg
push
dec
lea
scas
out
in
ret
cwtl
add
in
popa
xor
mov
ret
faddl
sahf
jnp
adc
and
jmp
and
lock
dec
inc
sbb
xor
inc
cmp
lahf
cmp
push
inc
fnstenv
sbb
cli
dec
mov
jne
cmp
jle
push
lahf
aam
in
dec
jmp
leave
in
in
adc
stos
iret
enter
lods
shlb
cld
divl
pop
jg
push
jecxz
ret
push
xor
ss
lods
jb
fcomip
adc
out
add
pop
cltd
and
arpl
adc
push
insl
pushl
test
xor
mov
and
jns
addl
jae
int3
lahf
in
mov
cmpsl
push
andl
dec
push
mov
cltd
and
loopne
adc
inc
das
cld
cmp
fcoml
jns
dec
mov
cmp
js
ret
int3
aas
xor
aam
call
imul
lret
jmp
subl
xchg
adc
fld
cld
xor
dec
xchg
mov
pop
lcall
rcl
pop
sbb
fdivrl
jmp
pop
out
loopne
mov
fisttpll
shl
push
add
and
call
lea
jae
pminub
pusha
fiaddl
push
push
pop
xchg
outsb
xchg
in
add
jmp
cld
lcall
arpl
inc
or
mov
xor
ds
pop
adc
or
add
insl
lods
scas
aad
ja
mov
xchg
xor
xchg
test
or
aam
add
repnz
cltd
push
cltd
jns
in
fld
outsl
or
push
xchg
jns
or
mov
into
sbb
fcompl
inc
loope
out
stc
das
mov
adc
push
or
jb
ljmp
xchg
push
movsl
adc
dec
xchg
pop
cmp
mov
mov
fnsave
int3
xchg
xchg
inc
das
push
orl
ds
sub
inc
lds
sbb
or
pop
icebp
mov
pop
daa
ja
xchg
mov
xchg
subb
cmpsb
add
sbb
into
fidivrs
sti
cmc
in
jne
mov
inc
mov
mov
daa
imul
lds
inc
sarb
pop
xor
aam
adc
xchg
sahf
fcoml
outsb
aam
pop
mov
mov
ljmp
fstpt
xor
movsl
jmp
sub
pusha
out
or
shrb
nop
in
stos
ds
and
push
shlb
or
fbld
sbb
mov
xor
fcoml
loope
and
and
mov
mov
mov
dec
lahf
mov
orb
jl
shlb
ret
lods
pop
inc
pop
shrl
lahf
stos
cmpl
mov
lcall
sub
mov
xor
cmpsl
sti
lea
push
xor
cmp
loopne
mov
mov
mov
mov
push
inc
cmp
in
mov
test
lcall
inc
lds
nop
lds
mov
sti
jns
pop
cmpsl
nop
mov
mov
cs
xor
xchg
in
push
insb
rep
aam
mov
inc
sub
and
testb
xchg
xor
aaa
mov
pop
cli
dec
pushl
xor
lea
fwait
and
icebp
fsubs
fs
insl
lahf
pop
fsubrl
fiaddl
popf
sbb
aaa
adc
add
sbb
sti
mov
pop
adc
arpl
dec
and
aad
push
cld
jp
sahf
jg
pop
into
cld
mov
xor
mov
movsl
fwait
push
add
popa
jge
mov
scas
movsb
loopne
loopne
mov
rolb
lret
cmp
mov
movl
stos
ret
mov
cmp
add
jnp
in
or
adc
addr16
cmc
jbe
mov
xchg
outsb
xor
mov
xchg
shrb
scas
push
inc
aam
lock
fwait
mov
push
xchg
mov
addr16
mov
cmc
lcall
mov
jle
pusha
lds
mov
cmc
mov
icebp
cmp
mov
xchg
mov
sbb
aaa
sbb
and
xlat
xor
push
pop
add
sub
shl
rcrb
gs
mov
push
add
outsb
add
and
pop
or
add
sbb
inc
icebp
fxch
ret
xchg
xor
enter
iret
inc
or
pop
daa
out
adc
aas
ret
mov
mov
fcompl
aas
test
test
or
jmp
pop
data16
push
enter
pop
js
sub
iret
mov
out
add
mov
stos
in
sarb
sbb
mov
cmp
cltd
pusha
lahf
mov
dec
mov
fs
leave
push
std
iret
ja
lea
in
ss
ss
mov
and
pop
push
pop
pop
sahf
test
push
fsubrl
xchg
or
adc
xor
aaa
in
out
mulb
inc
pop
inc
cmp
inc
jp
dec
push
xchg
adc
xchg
sbb
scas
and
daa
and
and
stos
int3
or
mov
mov
sub
push
mov
invlpg
add
mov
lcall
push
packuswb
inc
int3
xchg
pop
jbe
daa
icebp
inc
or
push
scas
cmp
mov
pop
fwait
pop
cmp
ret
sti
sub
pusha
jp
les
push
xchg
icebp
jl
movsb
int
mov
lea
xor
imul
mov
lock
lock
xor
pop
dec
dec
sbb
iret
and
xchg
jb
inc
ror
mov
fidivrs
das
mov
add
pop
popf
jg
inc
pop
push
cmc
int
test
and
cmpsb
test
or
sub
or
rolb
fisttpl
add
shlb
pop
sbb
mov
shlb
gs
fwait
mov
lahf
inc
js
jp
dec
loope
fs
jge
or
es
jmp
pop
mov
cmp
mov
cmc
pop
scas
dec
int3
hlt
cli
arpl
cmp
jne
shlb
sub
mov
mov
scas
inc
jmp
cli
and
jge
clc
lods
int3
aam
xor
cli
das
pop
shlb
pavgw
push
mov
add
les
sub
int3
push
scas
cmp
subb
sub
xor
nop
sub
sbb
shll
out
mov
sbb
mov
xor
lret
cmp
inc
out
rcrl
jae
fisttpl
xor
cmp
inc
mov
cmpl
scas
mov
lds
imul
shlb
jmp
addb
jno
test
or
sub
es
adc
in
fimull
sub
fstpl
mov
bnd
sbb
outsb
dec
ljmp
push
pop
fmulp
jle
jae
scas
or
aaa
fsubrl
xor
sbb
inc
add
and
push
lret
in
xchg
loop
inc
ljmp
out
out
lock
in
mov
inc
lods
test
pop
testb
test
xlat
cmc
sbb
pop
and
shll
or
mov
sti
mov
sbbl
xchg
dec
into
out
xor
pop
movsl
adc
and
in
pop
dec
jg
scas
je
xor
int3
mov
icebp
les
lcall
sbb
je
push
sahf
icebp
cmp
loop
pushf
jbe
es
mov
and
cltd
add
sbb
sbb
int3
shlb
out
jbe
push
sub
aaa
mov
es
fisttpll
arpl
cmp
pop
adc
cmp
popa
mov
das
ret
iret
mov
movsl
mov
lret
test
adcb
inc
push
push
xlat
cmp
dec
in
pop
adc
jno
and
xor
sub
sbb
out
in
loopne
pop
add
stos
jne
flds
cmp
aaa
jmp
imul
out
in
adc
mov
incb
or
sar
inc
filds
pusha
jecxz
in
mov
scas
mov
ljmpw
jmp
push
ja
adc
add
mov
pushf
icebp
jns
xchg
cmpsb
hlt
test
mov
jle
fstp
cmc
dec
cmp
aam
jmp
out
cli
inc
rorb
sbb
pusha
xchg
or
stos
xor
push
push
test
jmp
sti
dec
inc
push
pand
into
xchg
xlat
jae
add
sub
xor
jbe
cmp
imul
into
add
int
pop
xorb
jecxz
fnsave
push
dec
pop
mov
ret
in
pop
cmpsb
std
sub
js
movsl
iret
fwait
dec
sbb
orb
in
jle
in
int
cmc
out
xor
sub
push
rorl
enter
mov
sub
sbb
clc
jg
aaa
mov
and
push
fcmovnb
mov
icebp
fstl
mov
jae
cltd
test
xor
ss
cmp
in
push
push
imul
repnz
dec
push
adc
dec
das
push
inc
jae
addr16
in
or
dec
or
push
cmpsb
mov
jne
dec
inc
out
jae
cmp
lcall
test
push
shr
mov
fucom
adc
push
jne
stos
jo
or
jb
cmpb
adc
fstl
and
inc
ret
inc
push
in
aaa
out
mov
sbb
adc
fstl
or
aam
or
shrb
xchg
jae
scas
imul
jg
inc
pop
cltd
fisubs
add
sarl
and
push
push
fs
xor
movsb
pop
pop
shll
push
push
repnz
or
xor
inc
sbb
ret
lcall
xchg
js
push
mov
xorl
inc
or
cli
fmul
outsb
jae
test
inc
mov
out
ja
push
stos
mov
scas
pop
jne
scas
bound
adc
test
dec
sarl
pop
sbb
lods
cmp
xchg
push
inc
sub
and
sbb
inc
shlb
lea
mov
rolb
push
cmp
push
xor
mov
subl
fiadds
push
inc
clc
sarb
cmp
sub
loopne
lahf
jb
xchg
loope
push
dec
call
insb
js
mov
pop
push
jge
nop
jp
in
outsl
es
addr16
push
push
lret
lret
mov
cmp
fbstp
cs
push
pop
dec
int3
jmp
loope
jp
dec
imul
in
and
ja
mov
push
sub
popf
sub
ss
mov
jmp
outsw
add
loope
mov
shrb
sbb
mov
nop
fstpl
xchg
mov
push
flds
jo
cmpsl
int
test
ffree
std
int
jbe
je
cmc
mulb
sub
shl
outsl
int3
add
ret
aad
leave
lahf
sbb
jge
aaa
call
loopne
popf
dec
push
adcb
push
push
stos
and
adc
xor
pop
pop
inc
jno
dec
sub
out
icebp
in
sbb
push
jle
or
mov
and
fstp
or
add
and
mov
nop
cwtl
inc
insb
xor
into
push
test
fidivrl
cmp
push
mov
adc
jns
fmuls
mov
out
bound
cmp
mov
xor
jb
and
mov
scas
sbb
and
push
dec
test
inc
xor
cmp
cmpsl
push
sub
sbb
mov
imul
cmp
or
dec
iret
aam
sarb
out
xor
push
adc
jo
jb
pop
pop
xor
popf
xor
ljmp
xchg
xor
movsl
mov
adc
sbb
out
and
cltd
outsb
dec
pop
cli
xorb
cmp
push
lret
push
mov
jne
add
mov
push
inc
in
ja
mov
test
sbb
push
inc
dec
movsb
dec
aam
cmp
in
bound
lret
dec
jmp
xchg
mov
test
icebp
or
jmp
test
mov
and
mov
neg
xor
sbb
adc
pop
inc
cmp
cmpsb
repz
cld
test
dec
sbb
in
jnp
dec
cmc
icebp
or
in
cmc
lahf
cmp
push
cmp
jns
outsl
shlb
outsl
cld
mov
and
mov
push
roll
push
fnstenv
daa
outsb
dec
cmp
dec
jno
pop
jecxz
es
jnp
cmp
push
ja
pushf
xchg
and
std
pop
mov
mov
cli
ja
pop
push
gs
fnsave
mov
mov
jmp
jmp
icebp
mov
bound
into
add
sbb
add
sub
sarb
mov
and
outsb
cli
mov
add
hlt
loope
mov
aas
rclb
jp
stos
shll
xor
mov
or
xchg
cwtl
sub
mov
jo
dec
xor
cmp
and
adc
stos
jns
add
iret
aaa
test
sbb
lret
mov
xchg
push
rorb
jns
and
sub
mov
add
inc
nop
inc
cmpsl
xor
les
sete
push
test
adc
adc
adc
jl
out
pop
mov
xchg
sbb
pop
movd
dec
stc
jb
cmp
das
mov
in
cmpsb
es
jmp
mov
adc
and
jmp
fidivrs
push
push
sub
nop
sarb
jno
xor
lods
sbb
mov
loop
leave
stc
inc
or
mov
mov
add
movsb
xchg
inc
xchg
inc
call
inc
repnz
xchg
lret
mov
std
int
es
and
nop
mov
xchg
inc
and
jns
inc
clc
fcomi
fcoms
imul
sti
hlt
aam
movsl
cwtl
addr16
pushl
lcall
or
arpl
std
cli
inc
in
repz
loopne
adc
adc
jecxz
scas
dec
jnp
mov
loop
and
pusha
xor
dec
aad
xchg
in
jge
cmc
movsb
pop
jo
pop
sub
sbb
jg
cmp
push
jb
inc
pusha
adc
fmuls
dec
clc
xchg
repnz
jno
jo
mov
sbb
jne
sbb
into
scas
sbb
xchg
jb
mov
daa
xchg
xchg
dec
out
nop
push
xor
mov
mov
xchg
adc
inc
ja
in
fistps
mov
or
sub
adc
push
jle
push
aas
inc
xor
aad
fsubl
mulb
fs
sub
fsubrl
cmp
test
sbb
test
add
add
imul
pop
fwait
arpl
xor
cld
jo
loope
pop
pop
cmp
jno
popa
push
cmpsb
pop
idivb
mov
bound
mov
pop
clc
adc
sbb
ret
jo
xor
loope
xchg
popa
dec
pop
lret
pop
sub
sbb
pushf
mov
mov
popf
in
push
pop
sbb
jae
popf
add
cmp
fisubrl
fnop
pop
pushf
idivb
jb
jg
cli
push
sbb
fcoml
leave
mov
jle,pn
ss
fwait
mov
les
or
dec
cmc
inc
mov
adc
rol
dec
mov
fdiv
jae
xor
xchg
ss
lods
cmp
pop
clc
sbb
fsubrs
and
mov
testl
cmc
jae
cmp
dec
rorl
and
popa
shrb
add
les
fldl
adc
sbb
mov
inc
test
mov
or
lret
dec
loope
lods
cmp
push
push
es
shll
inc
jne
lret
je
add
lret
xor
or
sti
mov
push
repnz
push
push
roll
mov
push
xchg
lcall
je
in
xchg
outsl
dec
xchg
jno
mov
mov
cmc
inc
movl
dec
cs
push
cld
lea
in
and
movsb
fsubs
add
jmp
enter
push
xchg
mov
leave
jle
out
loope
loopne
xor
xchg
out
sub
jmp
push
fcompl
xor
outsb
mov
mov
push
dec
or
cltd
out
push
jno
xchg
cwtl
js
push
jo
sbbl
pop
cwtl
adc
ljmp
sahf
jge
enter
icebp
adc
xlat
aaa
mov
sub
jg
xor
sub
and
cmpsl
loope
in
mov
shlb
mov
xor
or
mov
insl
popa
add
ljmp
adc
es
aam
xchg
cmp
xchg
or
lcall
xor
cmpsl
cmp
add
insl
insb
mov
dec
pop
add
add
xchg
ja
lahf
jnp
mov
repz
adc
mov
add
lahf
movsb
rcrb
test
jo
or
or
cwtl
fdivr
cld
dec
fdivl
icebp
dec
add
rcrb
iret
in
aam
sbb
xor
ja
mov
and
lods
icebp
jge
mov
push
cvttps2pi
mov
nop
stos
loopne
jl
fsubl
subb
mov
sub
inc
ffreep
pushf
xor
shl
mov
icebp
push
sbb
mov
fildll
mov
pop
sub
das
inc
xor
xchg
cli
push
jge
dec
xlat
test
int
addl
daa
rcr
pusha
mov
or
pop
stc
xchg
mov
xchg
jo
adc
jg
sarb
push
xchg
lret
mov
dec
ret
sub
dec
dec
inc
repz
pushf
insb
cmp
or
mov
adc
sbb
cli
and
mov
hlt
add
push
pop
sti
aad
add
icebp
fld
imul
ljmp
and
xlat
jae
bound
cmp
mov
or
lret
cmpsl
and
fcmovnbe
je
dec
mov
repz
xchg
scas
mov
xchg
lock
shlb
flds
push
pushf
sbb
lods
lock
xlat
lcall
dec
mov
jo
in
aaa
loopne
add
xorb
enter
icebp
inc
enter
repnz
filds
sbb
inc
pop
sahf
add
lcall
adc
adc
adc
mov
inc
rorl
cmpb
int
fsts
scas
in
pop
int3
cmp
push
and
jns
pop
mov
ljmp
xchg
lds
loope
pop
data16
out
pop
dec
jbe
test
sub
fcomi
push
iret
push
shl
mov
push
push
pop
or
mov
loopne
cmc
loopne
sbb
addl
or
repz
ljmp
shll
adc
sbb
mov
sbb
popa
add
test
adc
lahf
and
out
pop
jne
dec
mov
xchg
sbb
and
and
lahf
fwait
orb
lret
cmp
cltd
xchg
push
inc
pop
jecxz
rcll
rcr
dec
or
push
xor
popa
sti
hlt
dec
jl
stos
bound
mov
scas
dec
mov
push
pop
cmpsl
insl
push
jno
push
xchg
jp
icebp
inc
iret
loopne
dec
aad
insl
cmc
pop
enter
lods
outsb
ret
cs
lret
jb
sub
lock
pop
and
adc
or
test
sub
aaa
push
pop
cld
push
pop
pop
out
rcrl
xchg
push
std
lods
shr
push
push
xchg
pop
dec
movsl
and
mov
xor
dec
pop
insl
cmp
jns
sti
aam
btr
jmp
daa
push
sub
outsl
jns
lock
pop
ret
pusha
shlw
loopne
dec
mov
pop
and
sub
jbe
and
adc
mov
dec
xchg
mov
int
stc
cmp
mov
inc
add
mov
pusha
xor
cmp
jg
push
xor
das
xor
ds
mov
movsb
adc
pop
or
not
rclb
outsb
adc
fwait
shl
loopne
mov
push
std
je
adc
aaa
fidivrs
sahf
and
jnp
pop
cs
test
push
out
ljmp
jp
pop
adc
pop
add
ljmp
out
xchg
mov
xchg
into
lret
cmpsl
cmp
cmpsl
mov
mov
pop
icebp
dec
pop
scas
mov
mov
lods
add
jnp
out
data16
test
ja
jne
and
mov
push
lcall
add
jne
or
mov
cmp
js
inc
lods
lret
pop
js
mov
lret
std
lods
mov
into
les
xor
push
ljmp
divb
dec
mov
fistpll
sub
adc
js
mov
cmc
cmpsl
pop
jge
sub
fcom
call
daa
stos
cmpsl
test
pop
subb
dec
jl
mov
cltd
test
sub
adc
dec
inc
xchg
jp
cwtl
jo
sti
push
into
mov
loopne
shll
ss
lret
roll
jge
jle
cld
jp
cmpsb
mov
pop
mov
mov
pop
mov
jnp
jp
push
vcvttpd2dqy
call
icebp
and
push
std
test
jno
rol
rcl
inc
dec
inc
jnp
ja
imul
lahf
xchg
mov
pop
add
in
ror
lcall
push
jmp
xor
push
jl
xchg
js
sub
out
cmp
fcompl
in
outsb
mov
jge
in
and
fwait
out
sub
add
push
and
and
lock
xor
call
dec
scas
sub
ds
outsl
clc
sub
shrl
xor
loope
aam
push
dec
cmp
fmull
mov
jnp
popw
std
inc
jae
pop
gs
dec
ja
inc
xor
and
push
pop
mov
ficompl
sbb
mov
test
add
mov
push
ja
sbb
fimuls
cld
fiadds
movsb
sbb
pop
jecxz
test
xchg
push
mov
cs
out
inc
sub
daa
pushl
xor
outsb
pop
popf
fucomip
cmp
add
mov
bound
in
dec
pop
dec
mov
iret
js
fcoms
xchg
inc
and
mov
add
rclb
dec
es
mov
push
jmp
mov
jmp
sub
dec
push
into
jae
das
stos
xchg
jle
jl
mov
fldt
jbe
in
jmp
or
fisttpll
mov
xchg
jno
or
test
and
adc
cmp
dec
cmp
dec
sub
sarb
push
or
mov
test
jns
inc
das
repnz
mov
in
add
outsb
rorb
rolb
je
test
pop
mov
jnp
out
mov
int
push
ljmp
jo
cmc
loop
sbb
xor
shrb
pushf
pop
jge
cmp
loope
fs
test
inc
push
add
shll
lahf
ds
mov
pop
insl
adc
cli
cli
jp
shlb
mov
fsubr
jg
mov
pop
mov
push
jne
and
jp
push
adc
cmc
or
ror
xchg
add
push
mov
cmp
lea
in
jb
or
xlat
and
or
lock
sub
jge
int3
insl
fimull
lods
lock
push
push
mov
movsl
push
enter
lcall
mov
mov
dec
xor
xor
sub
adc
bound
shlb
aad
gs
dec
fisttpll
cld
add
stos
sub
sub
or
loope
cli
popl
mov
push
ljmp
pop
and
sub
pushf
xchg
fisubs
in
jecxz
mov
pusha
cmpsb
and
xor
cmp
stos
arpl
push
pop
sub
int3
dec
lret
dec
int
aam
imul
inc
push
jecxz
ljmp
mov
mov
dec
out
mov
in
sar
stc
fdivr
mov
pop
add
mov
push
js
inc
ret
testb
cli
xor
and
ljmp
dec
aad
mov
mov
in
les
shll
scas
lods
mov
inc
push
cli
ucomiss
nop
adc
imul
int3
xchg
add
adc
aaa
sub
jecxz
dec
aad
jecxz
sbb
sbb
mov
clc
sub
inc
inc
add
mull
mov
inc
mov
xchg
rcrl
fsub
xchg
in
in
pushf
mov
add
hlt
imul
cmp
popf
xchg
pop
push
outsb
xchg
sub
xor
adc
adcl
add
call
jmp
fwait
xor
in
mov
shl
sub
cli
fistpl
push
mov
call
lds
push
jo
push
sbb
mov
data16
lcall
adc
lret
mov
adcb
in
push
jg
jmp
mov
mov
fmuls
xchg
shrl
jae
jp
push
dec
and
hlt
loope
filds
inc
xor
pop
int
adc
pop
sub
fldl
mov
pop
cmp
add
mov
xchg
icebp
popf
adc
inc
into
push
jae
enter
pushf
mov
mov
xor
scas
xchg
and
push
xchg
sub
push
adc
dec
xchg
aad
stos
pop
packsswb
push
adc
sbb
iret
pop
xchg
fidivs
sbb
subl
fs
or
or
xchg
adc
out
je
rol
dec
fwait
mov
adc
les
fwait
mov
and
loop
leave
pop
sbb
xor
xchg
lahf
and
jge
adc
add
jecxz
mov
fbstp
or
test
and
xor
add
adc
movsl
mov
out
add
cmp
aas
or
sar
fistps
adc
mulb
dec
ljmp
xchg
mov
aam
add
inc
repz
das
push
scas
add
out
cmp
adc
mov
cmp
les
xor
nop
dec
fstl
int
inc
cmp
incl
fsubr
xchg
add
hlt
mov
filds
test
ret
sub
cmpsb
add
sbb
pop
cmpl
add
push
pusha
add
ss
int3
sahf
push
or
or
imull
pop
fidivl
push
dec
mov
inc
decl
add
sbbl
mov
sub
adc
test
pop
insl
mov
repz
popa
mov
out
int3
cld
in
int3
mov
imul
ljmp
pop
mov
xchg
dec
loopne
cmp
inc
push
pop
dec
call
mov
dec
imul
push
stc
xor
mov
mov
dec
gs
lahf
xlat
mov
pop
push
cmc
sbb
pop
enter
jp
mov
mov
push
popf
mov
cmp
sub
repz
iret
pop
xchg
mov
adc
out
xor
arpl
ret
or
rcr
inc
xchg
pusha
pop
adc
inc
data16
sub
add
sbb
jge
sbb
out
or
mov
cmp
mov
mov
scas
in
xchg
je
mov
mov
lret
mov
mov
les
add
sbb
push
fdivs
or
sub
jl
mov
int3
lcall
cli
or
or
push
loope
jno
rorb
xor
xor
add
pop
repnz
cmp
lcall
inc
aad
stos
mov
pop
adcl
popa
jo
stc
jno
jle
mov
pop
lock
mov
mov
adc
lds
jbe
leave
popf
sbb
cmpsb
movsb
fwait
mov
jmp
aad
push
ds
push
inc
arpl
insl
mov
imul
inc
or
repz
cmc
cmp
dec
pop
test
cmpsl
in
mov
xor
fisttpll
sbb
jnp
loop
popl
push
mov
add
leave
ret
jle
lcall
mov
dec
mov
outsl
add
mov
popf
push
call
jmp
adc
fiadds
pushf
cmpsl
stos
in
stc
jne
pop
test
cmp
in
mov
jg
test
test
stc
push
aam
imul
pop
lods
ficoml
outsb
mov
adc
lds
les
fsubs
pop
push
lcall
mov
outsl
aam
popa
rorl
mov
push
lods
shlb
fstpl
cmpsl
cltd
hlt
inc
xor
sbb
or
daa
into
bound
jg
adc
repnz
das
sbb
xchg
sarl
fwait
andb
cmp
xchg
mov
inc
es
sbb
sub
jbe
movntps
cmp
push
movsb
outsb
xchg
stos
mov
xchg
notl
sub
movsl
mov
or
and
dec
cmp
jp
adc
mov
rorl
add
and
scas
adc
dec
test
jp
subb
xchg
jge
xor
lock
xor
dec
inc
sbb
pop
dec
mov
test
fidivs
int3
mov
mov
xchg
scas
ja
xor
mov
mov
aaa
mov
jno
mov
mov
cmc
fwait
dec
jmp
push
sub
pushl
adc
push
lock
mov
pop
add
rcrl
iret
mov
jbe
jle
cmp
test
lahf
mov
mov
mov
xor
loope
mov
mov
in
dec
and
cli
mov
mov
dec
lret
inc
in
sahf
push
pop
les
and
imul
mov
and
inc
les
test
clc
xchg
jns
push
ret
cmp
aas
out
xchg
jge
int3
xchg
lea
xchg
add
lea
pop
and
and
lock
dec
ljmp
xchg
push
pop
repz
add
out
mov
sbb
leave
insl
fcmovb
imul
sbb
push
daa
cmp
mov
or
fidivs
xor
mov
sub
orb
inc
js
clc
pop
dec
add
std
add
mov
inc
mov
sbb
sahf
mov
dec
test
cmp
or
stos
es
stos
push
pop
xchg
pop
imul
inc
jnp
sbb
jg
subb
enter
popl
mov
pusha
xor
lret
xor
adc
sarb
rolb
sub
cmpsl
ss
adc
stos
pop
pop
pusha
mov
lret
push
sti
pop
cmp
cli
adc
xchg
jne
mov
in
xchg
and
mov
shll
pop
xor
cld
data16
rclb
ret
pop
xor
lret
lock
stos
and
lock
das
or
sbb
jb
dec
add
and
sti
fstpt
rcrb
sbb
dec
test
mov
stos
cmp
fwait
mov
enter
out
pop
push
sub
and
mov
xchg
and
cltd
mov
push
clc
xchg
sahf
les
mov
xorl
call
xchg
add
sub
or
lahf
out
add
mov
jb
fdiv
fidivrs
lock
lret
sub
mov
push
jne
mov
lcall
xchg
fmull
sub
adc
out
push
or
arpl
jbe
cmp
out
sti
cmp
mov
fadds
jb
cld
mov
sti
mov
notb
sub
in
gs
das
fs
jg
or
adc
not
outsb
pusha
test
mov
leave
push
jbe
insb
arpl
jns
movsb
ds
decb
add
cmpsb
sbb
aad
mov
sub
sub
or
int3
mov
insb
gs
sbb
xlat
daa
mov
sub
insb
pop
cmp
mov
adc
ds
call
dec
sti
and
sbb
ljmp
loope
pop
jmp
ja
and
adc
and
mov
jbe
int3
jp
jbe
lds
jae
int3
divb
dec
mov
mov
add
jbe
add
lods
movsl
rcll
cld
or
inc
in
int
movsb
pop
outsb
pop
mov
cs
pop
fs
repnz
das
jecxz
jp
inc
subl
and
lcall
test
bound
pop
jl
sbb
clc
sarl
loop
inc
cli
jg
rcll
into
xchg
jo
mov
sbb
push
pop
aas
xlat
icebp
sub
jb
cltd
cmp
lret
stos
test
out
push
or
jge
xor
sti
inc
xor
sub
rorb
fstp
adc
and
cld
in
enter
adc
icebp
sub
xor
mov
scas
jbe
jnp
pop
test
paddb
fwait
jae
popa
mov
cmp
inc
push
push
les
cld
jg
adc
lock
pop
mov
inc
cmc
loope
lods
or
lahf
andl
pop
in
mov
in
dec
sbb
push
dec
scas
leave
inc
bound
shrb
cwtl
stos
mov
add
add
ret
xchg
cmc
jnp
add
add
sbb
pushf
mov
xchg
adc
push
aas
pop
popa
lret
jecxz
sbb
dec
push
notb
mov
xchg
push
inc
jg
mov
xchg
out
fistpl
test
sub
or
leave
jmp
push
movsb
mov
xchg
and
sahf
mov
inc
jbe
jb
inc
push
js
mov
mov
add
dec
stos
adc
aaa
clc
shll
push
xchg
mov
iret
cmp
mov
jnp
fsubl
add
sbb
mov
ret
clc
push
out
je
fnstcw
into
dec
pop
push
push
addr16
dec
ljmp
ljmp
nop
into
stos
mov
mov
in
mov
rcll
repz
mov
int3
jns
decb
pop
and
cmp
shrl
xor
es
xor
ds
enter
inc
sub
mov
xor
xchg
outsb
loopne
call
flds
cmp
push
imul
jno
or
lds
add
test
mov
xchg
sbb
adc
pop
aaa
testl
sub
mov
and
adc
xor
outsb
out
das
dec
nop
and
xchg
ja
xor
jle
and
sbb
imul
sbb
inc
imul
inc
lahf
sub
lret
xor
leave
cld
xor
es
pop
xorb
mov
cltd
ficomps
fadd
hlt
mov
popf
mov
mov
test
jnp
cli
or
jg
adc
pop
shll
test
xor
cli
pop
outsb
adc
inc
in
push
fmull
and
out
xor
rcll
icebp
mov
mov
xchg
or
mov
mov
push
aas
cmp
mov
fldcw
in
arpl
fsubl
lret
mov
pusha
add
mov
xchg
mov
rcrb
les
or
lock
shll
aad
mov
outsb
pop
mov
in
pop
in
stos
test
shll
adc
push
test
lahf
cmp
addr16
and
sub
dec
dec
sub
sub
fs
xchg
inc
jecxz
rorb
rcr
pop
fldenv
cmc
idivl
jae
push
ja
pop
test
push
icebp
inc
popa
jmp
cmp
shlb
mov
loop
xchg
dec
mov
dec
add
pop
shrb
stc
inc
dec
subb
negl
push
dec
push
mov
fucomip
push
ja
and
mov
icebp
cltd
jbe
sbb
lcall
jle
jmp
mov
sub
addr16
ljmp
push
lret
imul
aam
loopne
les
lods
xchg
add
push
pop
jl
inc
dec
inc
sub
adc
push
bound
sub
push
pop
std
and
jbe
jle
mov
repnz
sub
mov
mov
jnp
mov
out
xchg
clc
xchg
mov
test
arpl
sub
mov
shll
jle
pop
dec
or
lret
mov
or
jl
addr16
int
cmp
add
aam
mov
in
cmpsl
roll
or
or
repnz
xor
decl
sub
sub
aaa
dec
test
add
faddl
in
mov
pop
mov
push
xchg
popa
enter
inc
loope
jge
lahf
cmpl
ret
push
ret
jb
xchg
fistps
mov
popa
xlat
fisubrl
imul
ds
add
mov
mov
pop
ja
jmp
cld
es
scas
mov
fstpt
mov
sub
int
dec
cmc
add
movsl
test
or
pop
inc
cmpb
jb
adc
push
sub
testl
cltd
popf
das
xor
test
ja
jp
push
std
inc
repnz
cmp
jne
or
loop
xchg
sub
aam
jae
in
sub
adc
int
sbb
dec
cmp
in
sub
cmp
sub
or
stos
jns
xor
fstps
push
fstps
jp
es
mov
push
pop
pop
xor
mov
or
notl
scas
loopne
xchg
push
nop
mov
inc
add
test
les
push
shl
scas
outsb
or
mov
sbb
addr16
push
cmp
pusha
pop
mov
sub
lea
sbb
aam
dec
dec
dec
pop
pop
loope
daa
jl
jns
in
adc
insl
and
inc
fnsave
xchg
push
stc
cmpsb
cmp
jle
sar
cmp
xchg
rcl
addr16
cld
pop
jecxz
test
adc
mov
cmc
xchg
inc
std
lods
ds
jae
push
xchg
sub
cmp
test
jp
xor
or
sti
sbb
push
jp
dec
sub
ds
mov
push
xor
inc
test
int3
or
cmc
scas
gs
jg
ja
xchg
out
mov
or
ret
inc
cmpsb
or
fnstenv
xchg
fstps
add
pop
jl
inc
cmp
orl
jns
jns
mov
xchg
sbb
push
jne
out
outsl
xchg
out
shr
sbb
popa
or
push
movsb
aas
scas
pop
mov
jbe
aas
jp
mov
mov
out
fidivs
add
and
or
sbb
insb
cmpsb
arpl
mov
aas
rcrb
sbbl
pop
lret
jno
std
xchg
adc
cmc
pop
inc
popf
sbb
jecxz
popf
insb
lret
jmp
bound
aas
jecxz
xor
inc
inc
push
pusha
mov
sbb
sbb
stos
mov
xchg
aaa
test
pop
push
and
movsl
lods
dec
cmpsb
jg
int3
popa
push
rolb
push
jmp
push
scas
fnstenv
dec
pop
xor
pop
mov
cmpsb
stos
add
imul
xor
test
jbe
pop
das
mov
in
ljmp
push
jbe
adc
or
inc
xor
sbb
in
test
sbb
lods
mov
in
cmp
js
fstp
cmp
adc
mov
ret
insb
lcall
stos
jmp
pop
hlt
cmp
adc
xchg
sti
lret
adcl
cmp
sbb
sbb
rolb
jl
cltd
cmp
xchg
and
shlb
pop
push
or
or
dec
les
inc
xchg
loope
xchg
push
xchg
stc
mov
xchg
and
push
pop
xchg
gs
xchg
movb
mov
xor
xor
mov
in
je
or
divl
je
jmp
icebp
ret
pop
hlt
into
mov
xchg
jl
sarb
ficoml
xchg
or
insb
and
pop
dec
js
or
mov
stc
pusha
pushf
int
pusha
jno
lock
mov
push
pop
and
jno
int3
iret
inc
pop
cmp
dec
mulb
mov
push
xchg
and
insb
push
mov
pop
mov
fldenv
fdivr
rorl
or
mov
les
pop
out
adc
jb
jmp
adc
fstpl
push
add
stc
nop
fildl
ret
jg
push
in
xchg
cmp
dec
rorl
fisubl
ds
mov
mov
call
insb
mov
dec
stc
mov
testb
adc
in
push
je
pop
lea
mov
and
add
xchg
insl
xor
inc
jl
mov
into
movsl
xchg
movsl
push
dec
inc
pop
push
or
out
decb
fdivrs
ret
repnz
or
adc
movsb
adc
sbb
aam
and
mov
pop
cld
jae
sbb
xor
xor
mov
xorb
arpl
imul
out
bound
jno
mov
fsubl
jne
lret
sub
stos
insb
cmp
dec
inc
pop
adc
pop
lret
daa
or
popa
mov
js
into
sub
popa
mov
out
xchg
pusha
xlat
rcl
and
mov
push
andps
int3
pop
test
pop
inc
divb
push
mov
pusha
or
sbb
cwtl
aam
pushf
push
cld
pop
lods
pop
cltd
mov
sahf
add
movsb
mov
jo
push
adc
sti
lret
xchg
test
adc
ds
mov
clc
jae
or
das
jns
jg
loopne
adc
mov
cli
ja
inc
or
sbb
or
xor
popf
mov
je
mov
lods
jnp
ret
add
inc
mov
call
imul
push
shl
dec
sub
xchg
xchg
dec
leave
mov
add
jecxz
arpl
lds
push
cwtl
inc
add
and
mov
in
add
hlt
std
jb
add
and
push
fsubl
inc
lods
mov
roll
mov
ja
insb
loopne
ds
push
mov
lret
pop
lds
cs
mov
xor
lods
xchg
nop
lret
scas
add
or
inc
lods
ds
aad
push
dec
incl
dec
xor
xor
xchg
cltd
inc
aam
arpl
add
xchg
divb
aaa
lret
insb
pop
xor
lret
push
sbb
sub
xor
cmc
dec
rorb
lea
jne
push
sub
pop
mov
xchg
cmp
jmp
sbb
pop
pop
jb
mov
push
mov
mov
repz
jle
mov
fistpll
mov
aas
insl
or
jg
and
add
pminsw
loopne
pop
inc
sarb
lahf
std
cmp
mov
out
fsub
mov
and
loop
in
or
jmp
or
movq
jno
xchg
fdivp
xchg
leave
inc
and
cltd
imul
jg
loope
mov
fmul
or
inc
jo
or
pop
fisttpll
mov
std
mov
hlt
int
dec
cs
adc
fwait
cwtl
or
leave
cltd
and
dec
xchg
xor
and
push
repnz
push
inc
icebp
jecxz
lock
mov
fwait
cmpsb
dec
jnp
jno,pn
int3
push
stc
mov
dec
cmpsl
mov
inc
sub
push
xor
stc
outsl
loop
fistpll
xor
mov
cwtl
sbbb
call
fildll
lret
fcmove
fucom
mov
hlt
cmp
pop
es
push
mov
hlt
loop
cmpsb
ret
cltd
inc
push
mov
je
testb
sbb
push
fldenv
mov
mov
sqrtps
imul
out
cmc
cmp
cmpsl
fwait
les
pop
movsb
dec
and
daa
push
cmp
jge
xchg
xchg
cs
push
loop
dec
mov
stos
push
xchg
mov
out
push
jg
mov
mov
rcll
cmpsl
add
into
daa
mov
aad
sbb
jp
jb
jge
or
lahf
jo
cmp
dec
dec
jne
mov
sbb
fcomi
aaa
imul
sbb
push
fnsave
dec
test
stos
mov
ljmp
push
sub
mov
clc
jmp
push
and
popa
imul
out
pop
sahf
mov
mov
hlt
call
stc
add
inc
xchg
inc
sbb
rcrb
and
lret
xchg
pop
daa
mov
shlb
arpl
loope
mov
xor
fwait
mov
loopne
push
mov
mov
add
push
ljmp
negb
scas
push
cld
fs
xchg
or
adc
push
data16
outsl
xchg
xor
and
out
lea
add
lock
and
test
xchg
pushf
les
sbbl
je
iret
add
jbe
dec
jmp
sti
arpl
or
jl
cmp
xchg
pop
jecxz
or
stos
stc
movsb
imul
hlt
add
add
jg
add
xchg
cmp
out
mov
mov
pop
lret
dec
or
movups
dec
scas
daa
popa
mov
and
adc
cwtl
movsb
adc
dec
adc
out
andl
faddl
sub
pop
scas
cmp
pop
andl
cmp
idivb
jae
test
cltd
xor
sub
out
into
adc
dec
pop
dec
les
int3
xlat
das
jle
pop
or
cmpl
pop
lock
pop
push
call
jno
test
inc
sbb
outsb
adc
jns
inc
sarl
jmp
mov
scas
fimuls
push
dec
fs
xchg
push
les
mov
js
icebp
ja
add
and
fidivl
or
sbb
fstpt
lds
push
adc
and
lcall
cmp
out
lock
movsl
xchg
jne
ret
ror
aas
out
ret
xor
pop
sbb
lock
jp
mov
mov
int
fsubl
push
stos
sbbb
in
outsl
sbb
addr16
leave
cmp
adc
dec
pop
inc
outsl
mov
addr16
ja
pop
or
icebp
mov
cld
pop
mov
dec
or
sahf
insl
dec
shrb
fwait
loop,pt
dec
cmp
and
dec
sahf
push
js
subb
in
and
sub
xor
roll
jno
inc
jne
sbb
out
push
cmp
jns
pusha
stc
adcl
mov
push
xchg
in
fwait
xor
push
gs
pop
incb
arpl
insl
cmc
or
hlt
dec
add
adc
sqrtps
cwtl
dec
scas
add
dec
jmp
inc
fimull
mov
push
push
push
rol
adc
lcall
out
fldl
mov
sbb
dec
les
out
leave
and
and
jnp
add
data16
fcmovu
jecxz
inc
jmp
and
xor
pop
stc
dec
push
or
loope
insb
jae
mov
loopne
cmpsl
lret
add
pop
mov
sbb
ret
daa
jne
push
bnd
adc
push
aad
cmp
jno
push
imul
mov
and
test
pop
push
pop
mov
sub
test
aam
lahf
or
imul
scas
mov
mov
add
and
lret
sub
mov
xchg
popf
fldenv
cmpsb
data16
jecxz
movsb
dec
leave
dec
dec
aaa
mov
lds
sbb
mov
arpl
mov
data16
xlat
mov
sar
mov
jno
xor
andl
xor
adc
add
ret
pop
ss
outsl
or
or
sbb
addr16
aad
sti
sub
or
movsb
addr16
inc
sbb
mov
jnp
jge
cmp
call
jo
pusha
jnp
push
inc
inc
jecxz
ja
xchg
iret
cmp
add
mov
ret
push
stos
fldcw
call
es
cwtl
xor
push
push
or
fisubs
leave
mov
inc
sub
lods
xor
out
incb
imul
or
in
inc
xchg
sbb
imul
in
cmc
mov
es
jnp
cli
inc
loope
movsb
ret
push
push
rorl
and
push
lea
lods
push
mov
movsb
and
fisubl
cmp
test
in
mov
and
mov
fs
rorb
sub
add
pop
pushf
es
mov
push
xchg
sti
xchg
ja
aam
je
test
out
icebp
cltd
or
pop
neg
adc
jge
mov
dec
sub
sbb
dec
lcall
scas
scas
clc
sub
and
sub
jbe
lods
pop
in
insb
jmp
sbb
inc
adc
adc
dec
idivl
je
cmp
mov
sbb
pop
xor
mov
push
data16
cmpsb
pop
mov
fs
adc
push
xchg
aas
std
push
inc
test
decl
stos
inc
jge
push
cmpl
xchg
sbb
movsl
adc
into
mov
push
fistpll
pop
or
inc
std
cmp
sub
filds
xchg
hlt
xor
jge
mov
insb
leave
mov
or
xlat
dec
daa
out
add
cmp
jnp
sbb
cld
push
add
test
jnp
pusha
lea
pop
push
jmp
xchg
fwait
add
mov
pop
ficomps
nop
ds
rcrl
insl
lea
mov
mov
je
xchg
mov
cmp
lret
lret
mov
jbe
adc
fmull
mov
sbb
movsb
pusha
popa
out
fxch
inc
mov
cmp
cmc
mov
mov
shll
sub
sbb
jecxz
jmp
cltd
cmp
es
add
ficoml
push
xchg
push
dec
mov
mov
in
ja
mov
fimuls
inc
in
pop
sbb
fsts
sub
addr16
jl
cli
dec
cmc
mov
imul
inc
dec
mov
adc
str
xchg
ss
outsl
push
daa
pusha
or
jae
jbe
iret
xchg
ret
addr16
mov
std
mov
outsl
xor
scas
mov
jns
test
stos
jb
jl
lds
mov
lcall
into
shll
leave
mov
mov
jg
out
ja
adc
push
shl
mov
mov
xor
arpl
nop
inc
cmp
pop
push
and
adc
jle
pop
jae
shr
andb
repnz
pop
pop
cmp
jne
clc
sbb
scas
ljmp
enter
add
ljmp
test
clc
and
mov
inc
lret
and
pop
ss
xchg
xchg
pop
aad
dec
push
outsb
or
loopne
mov
loopne
insl
push
cmp
out
aas
pop
lret
ljmp
jno
or
mov
mov
aam
dec
xor
jle
inc
adc
jmp
idivl
xchg
jno
mov
sar
sbb
adc
pop
repnz
xchg
stos
fs
jge
xor
push
push
sub
sub
arpl
aam
sub
push
xchg
mov
ret
lret
outsl
push
jmp
cwtl
mov
mov
cltd
lcall
test
std
sahf
insb
sbb
mov
movb
inc
jbe
or
dec
push
leave
cmpl
in
repnz
jge
mov
pop
scas
mov
mov
pop
add
jecxz
aad
lcall
adc
pop
pushf
inc
cmp
or
std
push
mov
xor
fcompl
sahf
test
and
data16
subb
cli
outsl
push
in
mov
fs
pop
mov
adc
roll
mov
aaa
pop
sub
sub
adc
pop
imul
and
add
dec
inc
pop
jno
fsqrt
pop
gs
in
mov
xchg
into
les
and
xlat
lods
lods
and
cmp
ret
xchg
mov
or
push
nop
mov
in
mov
sbb
dec
ret
es
lcall
mov
sub
mov
mov
lahf
mov
and
fiaddl
insb
les
add
test
sbb
jnp
sbb
mov
sbb
lcall
jmp
sbb
into
sti
or
daa
daa
push
in
repnz
and
xchg
sbbb
fisubrs
test
mov
push
addr16
shl
xor
es
push
mov
inc
mov
popf
inc
sbb
cli
add
mov
or
or
pop
es
fstpl
xchg
fiaddl
movsb
mov
int
push
cmp
pop
adc
xchg
ds
mov
fsubp
cwtl
int3
push
cld
in
aaa
sbb
mov
cmp
inc
inc
scas
and
add
pop
dec
sbb
pop
or
xor
in
push
mov
cmp
jge
in
inc
xchg
and
popa
inc
arpl
popa
mov
pop
stc
int3
or
lods
mov
sbb
or
mov
fcoml
push
xchg
das
lahf
shll
js
inc
mov
dec
call
pop
pop
pop
lcall
push
lret
repnz
adc
movl
mov
sbb
push
in
imul
loope
cli
pop
adc
jns
pop
mov
inc
in
or
fdiv
insl
mov
pop
mov
xor
shll
repz
and
shrb
mov
js
je
movsb
mov
adc
push
push
jmp
sub
adc
dec
push
icebp
addl
jb
and
mov
pop
or
push
pusha
ds
or
ds
push
dec
push
imul
stos
mov
or
mov
pushf
push
imul
push
adc
inc
lods
aad
jp
push
or
adc
push
sbb
insb
lea
xchg
out
cmp
adcb
pop
loop
pusha
and
sbb
adc
filds
shrb
scas
xchg
adc
mov
in
pop
add
mov
xlat
sbb
mov
mov
orl
add
aad
xor
jmp
aas
stos
mov
scas
xchg
shl
pusha
ret
je
sub
in
add
pop
dec
test
cltd
xor
out
xchg
mov
int3
xchg
sti
cmpsb
cmp
mov
push
xchg
mov
cs
xchg
xchg
in
sbb
ret
sub
xor
xor
push
push
push
pushf
arpl
fldenv
addr16
enter
repz
adc
xchg
add
add
cmp
loop
test
adc
fldl
dec
adc
in
inc
and
cli
adc
jno
cmp
in
lret
shrl
mov
or
divb
mov
mov
mov
lcall
das
push
cmpsl
stc
stc
cwtl
in
out
add
mov
jg
push
push
xchg
adc
mov
xchg
cs
enter
out
and
mov
imul
iret
out
mov
insb
jg
inc
adc
jle
into
bound
inc
cld
outsb
gs
adc
mull
jnp
das
out
inc
div
mov
icebp
xor
mov
xlat
jmp
jnp
in
xlat
mov
movsb
dec
mull
addr16
inc
and
hlt
nop
data16
dec
jmp
sbb
lock
aad
mov
xor
imul
adc
xchg
pop
aaa
clc
dec
lods
add
push
mov
cmp
jne
rorl
xchg
cmp
notb
out
dec
decb
push
nop
mov
pop
dec
cld
lods
adc
and
incl
cwtl
push
aam
pandn
mov
std
add
add
sub
adc
mov
mov
or
mov
enter
jg
popf
mov
sbb
test
mov
popf
sub
loope
jnp
sbb
rep
popf
xorb
sbb
out
mov
movsb
mov
and
jnp
mov
push
lock
mov
mov
pop
stos
and
sbb
cmc
push
inc
lcall
mov
mov
pop
ret
mov
mov
push
pushf
dec
fistpl
pusha
data16
or
hlt
push
lds
in
scas
jbe
imul
mov
pop
push
lock
and
icebp
jg
mov
pusha
lcall
mov
lock
lcall
or
jmp
push
sbb
inc
add
push
int
addl
outsl
sbbb
iret
inc
cmpsl
arpl
push
stos
cmp
xlat
pop
xchg
inc
daa
sahf
and
mov
repz
inc
test
popf
add
stos
loope
mov
mov
dec
outsb
in
xchg
jp
push
cmp
mov
add
bound
fsubrs
clc
mov
mov
mov
lds
aad
data16
pop
or
jae
scas
stos
cmp
cli
cmp
lahf
imul
cltd
in
jmp
cwtl
mov
mov
das
push
lds
and
clc
jns
mov
les
jae
adc
sub
or
and
cmc
movsb
adc
fistpll
test
lcall
lods
mov
lock
xor
cmpsb
shll
fmull
mov
mov
cmpsb
xor
mov
mov
mov
dec
es
popf
scas
nop
xchg
aam
cmc
sub
xorb
out
addb
ret
ret
lock
out
xchg
aad
pop
std
rclb
dec
mov
mull
repz
mov
jge
adc
and
imulb
adc
rcll
pop
int3
je
lret
in
xchg
push
pop
adc
sub
inc
jno
adc
rcl
pop
std
scas
mov
aas
pop
out
sub
ret
icebp
iret
sub
out
call
sti
ds
mov
jmp
xorb
aas
test
icebp
jns
dec
pop
mov
push
cmpsl
add
mov
outsb
nop
popf
mov
lcall
lds
add
mov
nop
or
fistpl
xchg
push
jge
dec
add
sub
push
aaa
les
movsb
je
lcall
xor
int3
insl
int3
jg
xchg
fidivl
jl
jbe
cmpsl
lock
adcl
mov
in
xchg
inc
call
lds
xor
pop
push
fisubl
jae
xor
lret
jae
xor
dec
inc
jmp
fdivrs
push
dec
sub
xor
push
push
or
jo
jno
xor
dec
outsb
shlb
loopne
jp
lods
loope
or
ds
cmp
fistl
stos
mov
add
rcll
nop
popf
xor
aas
imul
adc
fldenv
repz
and
cmc
lcall
dec
xchg
jne
sbb
jmp
loope
inc
outsl
cmpl
mov
lret
hlt
insb
test
sbb
mov
sarl
xor
loop
mov
fisttpl
xchg
jnp
subb
loop
addl
jae
add
add
sbb
stos
jge
dec
and
mulb
adcl
push
jecxz
mov
ret
mov
xor
dec
jns
ror
es
or
add
sub
aad
es
or
fisubrl
xchg
cwtl
xchg
mov
repnz
jne
sub
aad
or
bound
xlat
pop
push
mov
or
pop
mov
sub
dec
mov
shrl
jno
dec
xor
test
fneni(8087
cmp
ljmp
bound
mov
jo
fdivrl
jb
mov
scas
add
pushf
lds
mov
mov
out
inc
pop
addr16
enter
ss
lcall
ja
shl
repnz
std
sbb
jle
cltd
les
jnp
xor
aad
inc
cmpsl
dec
orb
xor
cs
mov
cwtl
mov
xchg
je
pop
add
ret
cmpsb
insl
loope
int3
and
jmp
mov
loopne
cltd
repz
jp
lods
xor
insb
jmp
mov
sbb
loope
ja
fistpl
stos
stos
fs
add
mov
add
mov
shlb
and
mov
dec
sub
aam
fidivrs
mov
xchg
lea
adc
adc
adc
lret
dec
add
int3
pop
addr16
mov
push
movsb
ror
jecxz
enter
mov
outsl
and
xchg
jg
stc
mov
pop
negb
decb
fs
test
arpl
xor
mov
inc
pop
loope
and
aaa
push
insb
repz
addl
les
fs
mull
mov
pop
jg
adc
hlt
mov
push
cmpsl
and
loop
pop
cmpsl
cmp
fdivr
sub
lods
cltd
out
add
or
sbb
repnz
movd
push
push
mov
mov
mov
push
subl
std
iret
or
add
sub
lahf
jl
push
outsl
es
test
lret
repz
pop
jne
sub
cmc
cli
jne
jnp
sub
add
pop
xchg
imul
call
push
mov
scas
hlt
sbb
and
add
xchg
das
fwait
or
sbb
mov
pusha
xchg
jbe
push
std
in
jo
in
dec
aam
imul
mov
and
rcrb
and
xlat
dec
test
mov
dec
mov
push
dec
nop
jmp
stos
xor
fcompl
jnp
xchg
jnp
fstpl
pushl
xchg
cmp
jnp
ss
inc
es
inc
ret
scas
cmp
das
pop
mov
std
les
je
stos
and
nop
roll
inc
mov
dec
movsl
hlt
les
push
or
scas
sub
or
mov
imul
jmp
cmp
cli
mov
inc
enter
loopne
jno
or
movzbl
push
inc
in
dec
les
in
ds
push
mov
mov
pop
call
jl
inc
lods
pop
ret
or
popf
mov
call
sub
rcll
adc
in
pop
es
fcomps
imul
sbb
mov
out
loop
add
add
push
js
das
pop
ret
repz
movsl
push
mov
fsts
je
and
loope
pop
lret
pusha
movsl
xor
dec
inc
ret
jae
inc
sub
enter
test
or
loop
xlat
loopne
jno
testb
inc
stos
and
mov
popa
sti
jne
loopne
test
and
push
adc
cmp
sbb
test
inc
add
sbb
popf
xchg
mov
not
in
test
lods
in
adc
roll
pusha
push
lret
mov
int3
test
adc
aam
adc
dec
cmp
jb
jle
out
dec
testb
mov
test
pop
out
inc
cmpsl
pop
arpl
mov
popa
es
or
add
xchg
addr16
inc
push
cmpsl
nop
pop
aaa
mov
add
dec
dec
push
roll
add
jl
insw
push
jns
into
mov
pop
cwtl
ja
cmpsb
push
rol
popa
xor
and
inc
out
les
xor
out
pop
push
push
cwtl
and
add
sub
in
cmp
orl
and
sarl
test
loopne
sub
push
mov
xchg
das
hlt
mov
jb
jl
stos
mov
out
xor
aad
ficompl
jmp
stos
jmp
push
in
std
push
pop
add
mov
adc
sahf
xchg
shlb
aam
das
jg
pop
test
mov
sub
insb
mov
icebp
cmp
ret
aad
inc
xor
stos
sbb
sbbl
pop
andb
cmpsl
inc
fsubl
lock
xchg
inc
jne
cwtl
jno
cmpl
or
sarb
dec
ficoms
sarb
push
pop
repnz
js
mov
ret
xchg
push
js
sub
in
mov
int3
mov
inc
lock
add
xor
leave
jb
jmp
lahf
orl
dec
pop
xlat
adc
inc
xchg
mov
xchg
cld
adc
cmpsl
stos
rol
pop
repnz
iret
mov
xchg
pop
lock
jns
mov
and
push
ficoms
shl
xchg
test
out
addb
push
pop
shrl
out
pop
pop
lret
aas
sti
outsb
adc
imul
ficompl
adc
inc
test
loopne
out
addr16
cmpl
loope
jge
aam
or
das
nop
mov
ss
mov
or
sbb
jle
aad
mov
sub
cld
imul
mov
dec
mov
iret
popa
shll
sub
sub
sbbl
aam
jnp
fisubrs
adc
inc
nop
mov
bound
mov
mov
daa
fisubs
sbb
stc
lcall
cli
sbb
pop
xlat
ja
add
jge
sub
mov
mov
in
ljmp
in
jae
sbb
ficompl
sahf
iret
jl
add
loopne
or
je
repnz
loopne
push
movsb
test
fwait
cmove
xchg
les
sub
lret
dec
aam
xchg
ja
xchg
dec
or
cmp
cld
pop
pushf
fnstcw
add
adc
xchg
or
xchg
mov
mov
loop
imul
and
lret
mov
scas
pop
or
jl
adc
adc
test
inc
lret
dec
sub
test
push
inc
icebp
dec
cs
adc
jg
jmp
jg,pt
push
arpl
movsb
or
mov
xorb
bound
pop
dec
and
mov
inc
and
push
adc
out
ds
mov
or
sarl
dec
sarb
mov
fucomip
sbb
adc
dec
and
insl
cmpsl
xlat
jmp
xor
or
cmp
pop
outsb
adc
xor
or
aam
jns
iret
pop
ficoml
lods
cmpsl
cmc
pushf
roll
into
in
int
cli
rcr
fisubs
add
pushf
lcall
aaa
loop
pop
mov
adc
xor
in
and
rorb
mov
sub
insl
mov
adc
pcmpeqd
sub
aaa
rcrb
xchg
xor
fistpl
ss
push
add
outsb
fsubs
ja
mov
lahf
iret
jne
sub
es
addr16
cwtl
test
aam
test
fcoms
icebp
add
push
push
inc
jae
and
jo
push
in
mov
dec
sahf
insl
push
jno
xor
pop
inc
cmp
ds
xor
sbb
mov
cmc
push
fmul
cli
sbb
arpl
aas
das
or
cs
sbb
pop
mov
orl
test
outsl
ret
insb
push
stos
mov
and
mov
out
and
mov
icebp
hlt
mov
xchg
incl
je
das
or
outsb
mov
fistl
push
xor
cmc
jb
mov
mov
xor
cmp
cmpsl
push
movsl
dec
ljmp
mov
fisubrl
popa
repz
and
cmp
scas
test
xor
xchg
mov
mov
insb
and
mov
cmp
jg
nop
mov
sbb
pop
fwait
stc
push
dec
daa
cmp
mov
aad
lock
mov
rolb
mov
adcb
mov
fsts
dec
incl
std
insb
iret
cmc
loope
sbb
repnz
mov
cmp
fs
mov
adc
push
iret
pop
int
jmp
ret
loop
xchg
aas
xor
lods
fistpl
push
shll
aaa
and
push
or
adc
loopne
cwtl
mov
sub
popa
jno
lods
push
inc
push
adc
jns
dec
shlb
mov
pop
rol
push
jne,pn
inc
mov
lret
cwtl
fxch
decl
adc
mov
into
pop
ret
pop
inc
hlt
cmc
dec
cmp
lret
add
ja
push
mov
mov
jb
jnp
jns
jbe
pushf
mov
fisttps
test
leave
mov
out
aaa
sub
mov
loop
mov
pop
jae
addr16
aad
pop
mov
pop
push
and
lea
dec
mov
or
push
push
movsb
pop
ret
loop
dec
in
popf
pop
je
shll
fildl
mov
add
pop
inc
sbb
sbbl
mov
mov
jge
sub
add
aam
pop
hlt
add
pop
sub
pop
in
imul
idivl
cwtl
dec
cmp
jmp
sbb
xor
inc
scas
mov
inc
call
mov
xchg
fisubs
mov
xchg
sbb
cmp
sti
dec
shrb
add
mov
lods
inc
xorb
das
jo
push
mov
je
repnz
xchg
pop
iret
clc
mov
fcmovnb
int
mov
xlat
xchg
leave
inc
mov
pushf
xor
sarb
out
mov
hlt
jp
dec
jne
or
test
inc
das
test
mov
push
and
mov
inc
and
jnp
in
xchg
loop
dec
stos
stos
add
push
sub
sub
mov
push
sarl
inc
jge
imul
loope
addl
shlb
cmc
call
or
cltd
ss
lds
imul
mov
js
pop
sub
sbbl
daa
push
xchg
cli
xchg
cmp
push
or
xchg
insb
xlat
sub
fmull
in
push
aaa
push
xchg
cwtl
mov
and
xchg
xchg
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
dec
mov
xchg
lret
or
lds
pop
push
insl
jmp
adc
jns
xchg
sub
divl
jecxz
lods
leave
adc
adc
inc
mov
cltd
inc
repnz
pop
loop
push
lds
dec
paddsw
mov
push
adc
sti
xor
cmc
mov
xchg
add
cmpsl
adc
push
push
rorl
and
out
xchg
dec
jb
fs
pop
mov
pop
pop
sub
repz
pop
xor
xor
into
pushf
lods
pop
mov
xor
std
cmp
dec
push
out
inc
or
push
or
subb
shll
add
push
in
and
rcrb
or
xlat
jecxz
das
and
push
mov
mov
lahf
add
ja
cmp
loope
jl
fwait
call
cli
push
cmpsb
into
add
xlat
ja
add
inc
scas
push
out
xchg
dec
sbb
sub
pop
mov
mov
cmp
icebp
and
mov
lsl
dec
lds
loopne
cmpsb
jg
andl
ss
in
call
in
aaa
repnz
dec
aad
daa
sbb
xor
outsl
nop
xchg
dec
jl
stos
shlb
notb
pop
loopne
in
sbb
pop
mov
jne
lcall
xorb
stos
mov
dec
lcall
mov
mov
jg
push
add
sbb
jo
popf
or
jno
xchg
stc
jle
lea
stc
pusha
idivl
xchg
or
mov
bound
mov
jmp
es
lahf
push
mov
sub
pusha
call
cmpsl
out
cld
mov
xchg
sbb
adcw
mov
mov
std
pop
pushf
cmp
imul
fdivl
mov
stos
js
inc
jl
lds
cmp
adc
cmc
cmpsl
inc
dec
mov
mov
cwtl
mov
aaa
fadds
pop
loop
iret
pop
pop
push
cld
lock
std
pushf
cmc
stos
push
mov
mov
inc
faddl
mov
add
inc
bound
push
add
repnz
out
mov
fiaddl
mov
int3
cmpsb
dec
and
pop
jg
leave
aaa
mov
rorl
lahf
int3
sbb
xor
mov
fiadds
test
cmp
fildl
pop
cmp
push
and
jmp
add
daa
das
and
dec
mov
cltd
es
ja
xor
jbe
test
cltd
inc
ja
pop
jno
out
es
mov
jo
jae
xor
repz
jmp
std
or
jl
mov
hlt
add
add
adc
shrb
push
fadd
pop
sarb
pop
mov
arpl
or
rcrb
repz
outsl
fsubrl
add
xchg
pop
lret
adc
add
pop
cltd
or
inc
adc
jne
test
and
cmp
scas
inc
js
and
adc
sub
mov
bound
mov
fidivrs
sub
iret
jp
push
and
ret
push
inc
push
pop
push
jg
push
xchg
orb
jp
ss
xchg
lds
pop
mov
loop
xchg
and
adc
mov
jnp
sbbl
mov
popf
adc
inc
lcall
fstps
mov
xchg
andb
adc
stos
enter
lahf
andl
daa
in
pop
jbe
fcomps
and
mov
sti
cltd
adc
inc
repnz
mov
and
out
and
mov
adc
outsb
sti
cmp
cmpb
jnp
pop
clc
mov
std
mov
mull
dec
dec
and
or
aaa
adc
das
in
fistpl
test
push
insl
ja
jmp
fdivl
or
test
cmp
psubw
ss
mov
pop
test
cmpsb
loopne
adc
mov
dec
add
subl
bound
ss
push
sub
popa
jl
push
jg
pop
in
adc
dec
fs
sarb
mov
arpl
shrl
or
stc
lcall
push
jle
stc
fbstp
jo
xchg
fildll
inc
dec
bound
sbb
mov
dec
xchg
add
mov
dec
lcall
sub
pusha
pop
xchg
jo
bound
imul
adc
add
push
loopne
fdivl
push
shrb
aam
lcall
jg
out
xorb
dec
jbe
pop
add
adc
fstl
adc
cs
mov
cmp
dec
mov
sbb
push
pushf
push
mov
sbb
jg
xlat
push
shll
add
in
or
test
mov
fdivr
lret
in
mov
xchg
cmpsb
sub
repnz
dec
cmp
les
xchg
sub
sbb
mov
sbb
aaa
push
mov
sbb
outsl
mov
dec
enter
test
mulb
ds
pop
cli
subb
xor
push
adc
out
push
mov
setbe
cmpsl
inc
or
gs
push
push
lcall
push
outsl
bound
jecxz
ret
in
push
stos
xchg
jb
xorl
imul
adc
sarl
out
sbb
pop
mov
jge
je
mov
mov
icebp
xor
mov
loopne
div
dec
sub
or
outsl
cltd
test
pusha
jne
addl
jbe
repz
insb
adc
push
cmp
pop
fs
in
adc
sub
ja
cltd
ret
push
cmp
pop
cmove
mov
inc
fcompl
je
push
movsl
stos
mov
add
cmc
repz
ja
repz
loop
add
cltd
cmp
cmpsb
ds
sti
outsl
imul
mov
pusha
hlt
push
dec
pop
lock
push
cli
pop
das
jnp
mov
popf
sbbl
xor
push
stos
add
dec
nop
cmp
inc
add
ljmp
in
dec
dec
jmp
in
jo
and
or
push
ljmp
dec
imul
lret
cmp
fnstenv
lret
not
test
dec
pushf
xchg
jae
inc
or
leave
sub
ss
mov
push
adc
xchg
bound
push
fbstp
and
movsb
inc
fnstenv
hlt
or
adc
add
insb
add
pushf
and
jno
push
fildll
fisubrl
cmpsb
outsl
mov
lock
mov
out
cmp
fprem1
and
clc
enter
mov
in
pop
cmpsl
dec
xchg
push
je
ror
aas
je
cli
popf
sbb
mov
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
