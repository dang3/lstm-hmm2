sbb
add
mov
sbb
push
sti
sahf
pop
push
and
push
shlb
mov
cld
lret
into
imul
daa
ret
test
sti
lock
loopne
cmpl
cmp
in
sub
insb
xor
fcomps
rcr
idiv
adc
lds
nop
or
ret
mov
xchg
xor
pop
cmpsb
sbb
sbb
sub
xor
mov
jmp
inc
flds
cli
cld
sub
mov
in
lock
les
insl
test
jp
pop
rcrl
cmp
inc
or
addl
mov
and
lods
xor
shl
daa
insl
ret
aam
fs
lods
stc
pop
push
sbb
les
inc
fldl
fdivrl
scas
movsl
and
out
or
cmp
xor
jl
stc
adc
xchg
mov
loope
ror
sub
and
aad
add
mov
inc
loop
sub
jno
adc
subb
xor
insb
rol
inc
mov
ss
dec
mov
mov
repz
push
adcl
pop
das
or
lods
xor
xchg
mov
fs
mulb
inc
sub
cwtl
push
inc
cwtl
jo
into
mov
bound
int3
inc
mov
add
scas
mov
leave
dec
outsb
enter
lods
cmpsb
sbb
loop
jmp
xor
repnz
lcall
enter
add
nop
insl
dec
dec
or
dec
jbe
in
xchg
mov
inc
mov
dec
jo
iret
pop
out
rclb
fldt
pushf
subl
in
sbb
outsb
mov
mov
sahf
gs
cmc
cltd
pop
out
add
pushf
mov
sub
rcl
xchg
cmp
mov
mov
bound
arpl
and
rcl
daa
mov
jb
ficoml
daa
push
jecxz
or
cmp
sbb
add
xchg
clc
sahf
in
push
add
js
xor
lea
call
or
mov
lock
decb
dec
and
out
mov
cmp
xchg
and
xchg
add
and
clc
rorb
andb
xchg
inc
xlat
scas
xchg
xor
inc
cmp
insb
rol
lret
in
xor
movsb
jnp
xchg
jno
in
mov
leave
mov
dec
cmp
scas
push
ja
add
enter
pop
clc
sahf
imul
adc
or
aaa
dec
mov
repnz
out
mov
inc
push
adc
push
out
push
jb
fisttps
loop
sub
daa
out
or
fcoms
cwtl
test
adc
shl
aam
dec
xor
mov
je
stos
mov
ficoml
and
int
push
xchg
insb
push
popa
pop
inc
dec
lock
cmpsb
dec
dec
imul
sbbl
mov
sub
cmp
and
add
aas
pop
and
in
inc
in
jnp
loop
jp
sti
sub
mov
sub
rcrb
out
pop
and
out
imul
dec
test
cmp
inc
mov
addr16
ret
fsubl
xchg
sbb
cmc
test
jecxz
jle
inc
cmp
leave
dec
fwait
sbb
pop
or
scas
mov
aad
cmpsl
cmp
sbb
dec
popf
dec
ret
filds
and
pop
adc
rcrl
xlat
imul
aaa
jg
jmp
fiadds
jne
inc
jnp
mov
xor
dec
vmread
and
fsubp
or
pop
adc
pop
jno
icebp
popa
mov
xor
jno
pop
sbb
or
pop
shlb
push
ret
movsb
and
addr16
cmpsb
mov
sub
dec
sub
push
lea
shlb
xchg
sahf
push
inc
cld
push
add
mov
push
jne
sub
andl
and
fwait
or
xchg
out
xchg
jno
pop
outsb
filds
jmp
ret
cmpsb
mov
inc
cld
pop
dec
aam
outsl
mov
pop
add
mov
movsl
cmp
aam
pushl
xor
rcrl
sbb
std
fstps
outsl
outsb
xchg
sbb
jae
icebp
sbb
jge
rcrl
lods
pop
mov
lea
inc
or
push
push
sub
lcall
ret
aam
in
loope
mov
out
jno
or
scas
push
int
push
xchg
and
xchg
repz
imul
sti
in
mov
or
imul
shll
in
scas
push
aas
cmp
shll
sub
popa
sti
das
xchg
xchg
in
ss
loopne
lods
lds
in
in
lahf
dec
sbb
outsb
xor
aas
push
das
add
std
push
aad
or
inc
pop
fistpll
cltd
sub
lret
dec
cwtl
add
into
cmp
cmc
call
pusha
rorl
and
je
arpl
test
dec
je
fcmovnu
aam
ss
xor
add
loopne
imul
testb
ja
add
xor
cwtl
and
cld
sbb
imulb
cmp
mov
inc
and
mov
jp
sub
sarb
xchg
jmp
add
xor
das
pop
sub
jl
out
rcrb
test
pop
mov
int3
sbb
imull
in
dec
dec
pusha
enter
push
dec
inc
insl
mov
add
xor
mov
inc
dec
popf
lahf
in
jnp
or
push
lock
gs
jb
mov
xchg
sub
mov
mov
cltd
push
in
add
xchg
call
cmp
outsb
cmp
push
call
scas
mov
jle
jbe
popa
icebp
hlt
mov
jo
mov
jno
idivb
ss
jle
cli
nop/reserved
xchg
xor
ljmp
daa
inc
adc
in
scas
sub
cld
out
mov
shrl
fisubrs
fidivrl
mov
in
and
or
pop
jmp
or
fwait
add
addb
xor
xchg
xlat
repnz
ds
int
insl
jae
scas
xchg
pop
xor
loopne
lret
dec
mov
inc
in
les
in
lock
cmpb
sub
mov
cmpsb
dec
lods
mov
mov
xchg
sbb
jle
and
dec
jb
push
mov
jge
es
xorl
lea
jecxz
dec
les
out
out
add
sub
push
push
and
jns
popa
pop
xor
pop
inc
gs
ljmp
dec
jecxz
sub
inc
sub
and
pop
pop
jg
xor
ret
daa
es
fimull
push
rcr
mov
adc
daa
je
pop
mov
pop
inc
jb
adc
aaa
js
inc
pop
add
sub
xlat
clc
push
das
arpl
int3
ret
loope
notb
fnstsw
pop
mul
push
movsb
lods
test
cwtl
test
push
arpl
jae
pop
mov
or
pop
nop
pand
notl
xchg
or
mov
lcall
sub
pop
mov
daa
scas
cmp
jmp
sbb
xchg
pop
addl
ljmp
jge
xor
out
xchg
push
mov
lods
ja
mov
lahf
add
movsl
nop
cld
cmpsl
call
sub
xchg
push
das
xor
xor
add
pushf
push
fmulp
pop
movsl
stc
adc
dec
and
mov
mov
dec
sti
mov
out
dec
call
mov
pop
jns
mov
dec
in
gs
jo
aam
mov
inc
inc
and
sub
xchg
and
push
daa
mov
mov
lret
push
xchg
or
in
jp
cmpsl
pop
mov
mov
xlat
mov
mov
loopne
lds
xchg
icebp
idivl
xchg
adc
ljmp
clc
or
cmp
jae
jns
jecxz
jno
or
aad
dec
hlt
xor
imul
sbb
push
cmp
dec
inc
out
outsb
cmc
and
testb
xlat
pop
jl
cmp
loopne
lods
adc
insl
sbb
out
or
adcl
sbb
and
test
adc
mov
fs
sbb
popf
push
inc
sub
mov
stos
mov
cmp
mov
push
push
nop
or
loopne
pop
add
cmp
lea
mov
cmp
shll
aam
inc
mov
sahf
push
ds
dec
jb
xor
add
in
xchg
mov
aaa
shlb
pusha
cwtl
in
aad
loope
scas
int3
xchg
and
push
arpl
flds
jne
pop
out
or
inc
clc
cmpb
cmp
mov
mov
loop
inc
adc
cmp
sub
jp
cltd
jb
and
dec
shlb
push
std
dec
in
push
test
sti
push
aad
xchg
fadd
das
jg
inc
push
mov
jne
push
sarl
xor
and
adc
js
jp
pop
jae
gs
jg
or
loope
pop
and
inc
mov
fwait
inc
xlat
dec
movsb
sub
dec
and
ljmp
sbb
mov
aaa
lds
lods
test
cmpsl
sbb
fdivr
adc
or
js
mull
adcl
dec
xchg
ret
sbb
arpl
push
xchg
stc
and
lea
das
adc
out
inc
inc
xchg
lea
jg
arpl
adc
inc
sub
pop
and
jbe
jp
mov
rorb
cmp
and
mov
inc
mov
popa
jne
jo
sub
dec
cmp
insl
push
shlb
je
rcrl
aaa
fcmovnu
add
push
lcall
addb
call
leave
cmp
xlat
sub
scas
xchg
mov
push
sub
push
lods
push
pop
aas
cmp
into
cmpsb
push
pop
aaa
xchg
scas
dec
mov
rcll
arpl
scas
sbb
cld
fiadds
add
jecxz
lcall
cmp
iret
inc
mov
xor
mov
push
sub
fwait
in
movsl
mov
orl
out
pop
scas
mov
pop
fisttps
insl
pusha
es
jns
jmp
dec
cmp
pop
js
add
nop
shl
stos
push
xor
sbb
or
sbb
fsubrl
dec
dec
cmpsl
addr16
add
xchg
cmpsl
add
pushf
push
jmp
and
das
sub
cltd
add
push
fcomps
or
mov
test
repz
jno
in
inc
inc
push
subb
mov
sti
into
lock
pop
jne
pop
jmp
sub
xchg
popa
adc
push
add
fcompl
xchg
in
xchg
adc
mov
adc
pop
sbb
add
dec
call
push
lds
adc
pushf
push
add
and
add
ds
outsb
jl
mov
lret
add
mov
movsb
push
clc
paddb
cmp
adc
cltd
cmp
imul
out
icebp
fxch
cmp
xlat
and
add
cmp
xchg
fcoml
xchg
cld
cwtl
mov
or
dec
sub
jecxz
push
jb
imul
and
or
and
idivl
adcl
cld
mov
enter
into
inc
jge
fsqrt
xor
inc
fwait
lds
push
inc
arpl
adc
xor
and
push
xchg
bnd
inc
sbb
inc
roll
or
rclb
adc
fidivrl
xor
ret
popa
mov
lds
push
lock
out
sbb
xchg
leave
mov
ja
nop
stos
pop
popa
sub
out
mov
nop
mov
mov
cltd
xchg
js
and
out
jns
mov
fucom
stos
out
adc
mov
lock
inc
cmp
fbld
push
cwtl
jg
out
xor
imull
arpl
in
xchg
ja
aad
and
stos
fiadds
das
or
sub
fs
stos
xchg
jbe
int3
ret
jae
sub
rclb
or
mov
imul
add
fdivrp
push
in
xchg
bts
or
jne
sbb
bound
mov
inc
pop
aaa
jle
pusha
insb
cs
adc
jae
cmpsl
mov
push
insl
inc
shrl
push
push
lds
imul
dec
push
lret
pushf
pop
sub
add
mov
dec
pop
push
push
aaa
push
outsl
or
cwtl
inc
or
shll
cld
fsts
jmp
jbe
push
sbb
insb
mov
ror
xchg
pop
add
xor
dec
data16
int3
sbbb
push
push
hlt
or
test
xchg
std
xor
lcall
into
sub
lahf
lret
mov
inc
fs
sbb
xchg
xchg
jle
cmc
fwait
divl
icebp
cs
and
stc
jmp
pop
dec
fildl
pop
or
out
movsb
jp
push
pushf
and
sahf
dec
or
aad
pop
in
pop
xor
jecxz
xor
das
popl
shlb
or
push
out
lcall
ss
pushf
and
cmp
cld
xchg
add
xlat
insl
xchg
xlat
out
mov
fcoms
lret
mov
jmp
mulb
jle
mov
stos
push
andb
cmp
decb
adc
je
jae
ficomps
push
jns
xor
sbb
push
pusha
lret
push
mov
mov
mov
lcall
jp
xchg
cmp
add
arpl
sbb
pushf
lret
mov
sub
stc
sbb
repz
je
sar
jmp
filds
fdivs
cwtl
cmp
and
test
mov
add
fcmovnb
push
fimull
and
fildll
xor
dec
mov
dec
sbbl
xchg
aaa
pop
insb
sti
insb
cmp
xlat
fisubl
inc
xor
es
testb
inc
bound
decb
xor
imul
push
daa
push
ljmp
cmp
or
xchg
or
or
repz
aad
push
xchg
jge
lock
ficoml
or
push
jne
pop
cmp
sbb
cmc
lods
adc
cmp
sub
add
arpl
and
add
and
or
enter
cmc
addl
enter
popf
add
xor
ss
ss
or
jo
lods
mov
adc
sub
in
cmpsl
nop
jmp
pop
push
test
dec
push
dec
scas
daa
out
push
ljmp
xor
add
mov
std
ljmp
mov
dec
repz
enter
mov
pop
mov
dec
add
xor
cmp
push
pop
add
lahf
inc
addr16
jb
add
and
push
xor
xchg
jl
xchg
mov
add
push
cld
cmpsb
mov
mov
enter
movsl
and
test
adc
call
cmpsb
lret
push
and
shrl
rcl
adc
dec
push
jnp
xor
leave
jg
sub
fiaddl
inc
pop
rep
dec
push
fs
mull
pop
cmpsb
mov
iret
repnz
std
mov
addb
mov
call
jmp
xor
daa
out
fstpt
lahf
fcmovnbe
lods
popf
movsl
aad
ja
cmpb
jp
mov
mov
lea
sub
pop
jnp
add
rcrl
xchg
push
mov
mov
loop
inc
int3
test
xchg
pop
mov
mov
lods
cmovle
push
test
cmp
test
cmp
sbb
imul
rorb
loope
jl
push
sub
scas
sbb
and
cltd
int
xchg
lods
sub
sbb
xchg
adc
testl
jge
xlat
cmp
stos
add
stc
add
cld
in
xchg
sub
lods
mov
int
inc
dec
sub
dec
mov
or
xchg
popa
ficompl
je
js
dec
bndldx
mov
or
mov
push
jle
mov
or
jnp
out
jns
mov
ja
xchg
scas
es
sub
cwtl
cmp
ljmp
cltd
dec
push
std
mov
in
add
push
jne
int
out
mov
push
sti
pop
ret
sbbb
mov
cmp
hlt
dec
sti
and
fimull
push
jnp
lods
subb
adcb
mov
imull
in
idivl
sti
jb
in
sarb
sbb
test
mov
xchg
or
or
add
int3
jae
mov
xor
xchg
inc
out
lea
daa
add
addl
js
and
lahf
dec
jmp
add
sbb
stos
iret
adc
add
mov
outsb
xchg
adc
mov
xor
cmp
std
cld
cmp
ds
xchg
add
pushf
ds
and
mov
fs
in
lahf
leave
gs
xor
lret
mov
dec
mov
push
xor
pop
aad
sbb
lods
push
inc
mov
jo
ds
inc
fsubrl
std
addr16
lret
jp
jbe
cld
push
insb
fisubrl
mov
arpl
mov
xchg
leave
jns
mov
loopne
pop
ja
xchg
popf
push
mov
imul
aas
stos
fiaddl
clc
sub
test
ret
jo
fcompl
mov
jl
jle
sub
mov
sbb
dec
test
cmp
mov
daa
fcmovnbe
push
mov
sbb
jge
ret
and
pusha
or
out
xor
push
push
cmpsl
sub
pop
popa
das
push
sub
fsubrs
inc
sub
rcr
notb
push
js
fists
lock
add
cmpsl
xchg
cs
push
gs
fcomp
sbb
scas
iret
xor
push
jmp
iret
enter
pop
mov
cmp
sub
or
popf
adc
adc
sbb
ss
ds
cmp
jbe
mov
jbe
in
xor
sub
cs
pop
jge
add
out
fldl
inc
and
jbe
jecxz
cmpb
test
in
dec
mov
outsl
jo
or
sub
fwait
push
sbb
or
xor
mov
addr16
jl
fistpl
jo
xor
mov
and
push
xor
pop
mov
into
jle
xor
push
mov
xorl
dec
movsl
fdivp
and
sub
hlt
das
test
call
loop
roll
outsb
jl
pop
push
cli
cmp
mov
inc
popf
pop
out
pop
jle
iret
lret
push
push
jne
into
ret
enter
nop
scas
ficoml
jmp
cmp
sahf
add
rcrb
adc
push
dec
shll
push
int3
mov
push
enter
es
dec
lcall
sbb
inc
xchg
adc
push
cmpsl
add
dec
mov
or
out
movsb
iret
sarl
sub
cwtl
add
mov
das
xlat
cmpsb
nop
jg
jns
cltd
cmovge
mov
decl
xor
aad
xor
ficoms
outsl
adc
jns
fisttps
fisttps
xor
clc
add
loopne
add
mov
pop
out
pop
add
in
out
faddp
sub
out
into
mov
notb
push
mov
shlb
in
scas
adc
mov
mov
outsb
cmp
mov
pop
add
cmpsb
inc
cmc
xchg
fidivs
sub
xchg
insl
popa
int3
cmp
data16
lret
adc
pushf
popa
add
mov
pop
ds
lods
add
mov
lea
push
scas
sbb
adc
mov
das
mov
sub
aas
push
lods
adc
out
mov
rcrb
xchg
aaa
adc
pop
rol
pop
fcomi
add
push
mov
dec
loope
es
cli
jg
jae
movsb
sub
xor
adc
cld
loope
inc
jecxz
fcmovu
mov
addr16
sbb
cmc
loop
les
in
test
scas
pop
adc
inc
outsb
icebp
xor
jns
shll
shlw
mov
inc
mov
std
mov
ret
xor
lahf
lcall
or
mov
fcoml
push
ljmp
or
call
test
inc
outsl
add
dec
dec
call
movsl
adc
push
nop
or
jnp
sbbl
in
lea
dec
add
xlat
addr16
mov
int3
es
or
imul
pop
pop
sti
dec
cs
inc
call
pop
push
adc
js
cs
lret
aad
insl
xchg
test
adcl
insb
push
cs
clc
dec
loop
and
xchg
dec
lods
add
cmc
je
pop
repnz
popf
lds
decl
ss
or
lods
je
adc
push
int3
inc
dec
xlat
jecxz
mov
push
mov
cmpsl
jne
int3
iret
lds
or
jne
mov
inc
ljmp
xchg
dec
xrelease
loope
dec
sub
push
lds
and
mov
sbb
mov
pushf
movsb
dec
stos
es
and
and
xor
jae
pop
mov
mov
repnz
jp
add
ds
shrl
rcrl
mov
lock
imulb
cld
push
xchg
jns
fiadds
and
clc
dec
lea
mov
test
pop
lret
sub
shlb
bound
mov
jle
scas
mov
scas
into
xchg
stos
push
cmp
jae
stos
dec
adc
push
sbb
push
pop
ss
jl
ss
lds
inc
addr16
andb
ljmp
lahf
pop
sbb
notb
pop
jge
pop
xor
cli
data16
and
adc
movsl
lds
xor
jmp
lea
jl
xor
sbb
or
mov
xchg
hlt
adc
or
mov
imul
jns
negl
ds
add
jo
cmp
xchg
xchg
add
adc
das
jne
jae
inc
push
insl
mulb
pushf
incb
in
mov
call
or
pop
or
cli
push
xor
ret
lds
push
std
in
xor
add
enter
lret
mov
xchg
mov
pop
leave
xor
mov
lods
sbb
add
das
addr16
jbe
imul
lods
in
jmp
or
cmp
mov
and
xchg
shll
or
jbe
popf
je
and
aad
mov
add
idivb
lcall
hlt
inc
xchg
xchg
dec
dec
test
aaa
xchg
xchg
arpl
cli
popf
dec
or
imul
fsubs
mov
rcrl
mov
mov
mov
dec
push
orb
sub
pop
addr16
dec
mov
incb
or
leave
lret
pop
fistpl
cmp
jb
jns
scas
and
jnp
mov
in
ljmp
sub
add
mov
mov
subb
into
mov
cwtl
or
cmpsb
out
iret
insl
push
stos
sbb
dec
adc
stc
push
mov
push
cmp
dec
xor
inc
testb
cli
cmc
in
out
mov
fwait
mov
adc
push
mov
scas
xor
aam
push
ret
adc
ljmp
aas
cmpl
pop
idivl
movsl
inc
adc
cmp
jo
pusha
out
and
or
icebp
js
pop
subb
push
test
cmp
sbb
js
push
iret
aas
dec
stc
jg
pop
cmp
push
and
nop
mov
add
cmpsl
push
test
negl
push
fsubl
jl
mov
sbb
arpl
mov
adc
jne
pop
stc
adc
xchg
cmp
sbb
xlat
nop
jecxz
and
enter
or
insb
in
fbstp
mov
lock
pushf
adc
mov
scas
mov
xor
push
sbb
sub
xchg
add
mov
add
and
and
pop
jb
ja
test
test
es
or
push
clc
pop
mov
dec
mov
push
sbb
xor
mov
jo
mov
xchg
sbb
xchg
jnp
bound
pop
mov
iret
daa
out
xor
xchg
xlat
xlat
cmpsb
in
push
xchg
jo
aam
inc
scas
outsb
loopne
stc
rcll
std
jo
pop
repnz
pop
fcmovnbe
mov
and
std
mov
in
adc
lret
cli
push
jge
and
xor
mov
push
enter
fcoml
mov
pop
mov
inc
in
adc
xchg
jge
cmp
dec
stc
ret
pop
mov
stos
mov
mov
sub
and
insl
cmp
popf
sub
cmp
je
aad
push
lretw
sbb
inc
outsl
push
push
pop
daa
pop
adcl
imul
pushf
sub
int
sbb
sub
or
loopne
mov
mov
push
rclb
jo
loop
xchg
std
jg
push
test
roll
adcb
inc
jl
push
pusha
and
pop
jbe
sbb
ljmp
inc
sub
push
mov
ljmp
jl
fcoms
mov
mov
cld
sbb
dec
pop
xchg
xor
push
movsb
lahf
adc
push
dec
sub
jb
subl
in
daa
mov
rcrb
pop
push
cmp
sub
in
jmp
iret
scas
mov
or
data16
adc
jne
movsl
aaa
adc
ret
push
andb
push
mov
rcl
pusha
lods
dec
push
mov
loope
test
adc
adc
push
cmp
cmc
cmp
dec
jno
in
lock
xor
push
mov
add
bound
fisubl
inc
je
dec
mov
shr
ja
mov
shll
xchg
in
push
fldt
fcomp
clc
sbb
cmpsl
mov
repnz
ja
dec
shll
cltd
jmp
push
and
in
cmovbe
and
call
popf
xchg
jne
mov
dec
or
sub
sub
push
xchg
out
aaa
loopne
lea
pop
repz
ret
inc
lds
out
mov
mov
xor
mov
mov
jmp
imul
xchg
pop
mov
mov
lock
or
inc
or
mov
movsl
xchg
inc
xor
repz
sbb
stos
mov
es
popa
in
mov
bound
mov
lcall
repz
leave
imul
jno
pop
sbb
add
sbb
sbbl
out
push
mov
jns
and
out
dec
repnz
adc
or
mov
mov
test
lea
test
jmp
fistl
cmp
das
mov
shll
gs
push
orb
mov
sbb
dec
aaa
add
loopne
dec
pop
xchg
sarb
mov
cmpsb
sar
cmp
lods
outsl
push
scas
xlat
lcall
cmpsl
lock
jle
mov
test
and
scas
loopne
mov
dec
and
out
dec
insl
test
in
mov
repz
dec
jns
dec
pusha
cltd
cmpb
sbb
dec
mov
mov
push
pop
ja
xchg
sub
mov
iret
popf
mov
xor
push
push
and
jle
inc
dec
and
out
adc
les
movsb
lock
shlb
jle
pop
test
add
adc
out
xlat
mov
ret
sti
and
enter
inc
mov
outsl
sbb
mov
xlat
jl
jo
sbb
into
cmpsb
sbb
xor
gs
cli
sbb
add
xor
sbb
sbb
fnstenv
inc
sarb
aad
or
pop
or
add
lret
jle
in
cwtl
mov
leave
sbb
inc
dec
cmp
mov
gs
pop
fcomp
and
test
lock
aas
std
xchg
mov
and
jp
xchg
insl
mov
and
mov
nop
jo
mov
mov
clc
dec
push
cs
pop
imul
pop
cld
pop
lea
xchg
and
popa
xlat
pop
sti
loop
and
jmp
div
adc
cmpsb
stc
mov
pop
jg
sub
int
add
lock
mov
dec
cmp
push
push
jecxz
add
lds
mov
addr16
mov
mov
ret
mov
xlat
clc
pop
out
fsts
sbb
fwait
mov
jecxz
ljmp
cmpsl
jbe
add
dec
xchg
xlat
les
mov
les
cmp
dec
cli
mov
out
mov
fdecstp
xchg
push
sub
xchg
dec
jge
push
pop
daa
dec
xor
jg
inc
push
add
int
fdivrs
and
cwtl
data16
xor
xchg
cmp
popf
push
out
and
mov
movsl
sbb
cwtl
pusha
test
xchg
or
ljmp
rorb
in
jl
outsl
mov
cwtl
insb
adcl
xor
pushf
cld
repz
inc
push
add
cmp
btr
cwtl
or
xor
out
sti
pop
pushf
push
aaa
addb
aas
mov
out
dec
popf
xor
mov
mov
mov
popf
add
mov
jae
fwait
ljmp
mov
test
fstpt
mov
or
or
enter
test
insb
sti
subb
mov
scas
mov
pop
insb
mov
jbe
xchg
and
out
cmp
cli
jns
movsb
shlb
cmpsb
rorl
xor
movsl
dec
fcoms
mov
hlt
add
cmc
pusha
pop
jns
es
push
sub
push
popf
enter
jge
xchg
imul
ljmp
xor
ds
addr16
xchg
fisubrs
pop
add
mov
jecxz
iret
mov
jecxz
test
imul
ljmp
inc
xchg
pop
cmpsb
movsb
inc
sub
jno
lcall
pminub
push
call
add
add
mov
and
inc
pop
jge
cld
in
sar
sbb
lret
xchg
xlat
mov
mov
mov
pop
and
pop
psrld
test
xchg
pop
lea
add
mov
imul
pop
sub
out
cld
scas
sbb
cs
mov
xor
dec
xchg
xchg
ja
insb
test
subb
sti
xor
cltd
testb
into
fldcw
jl
jge
fnsave
push
and
xchg
testl
int3
hlt
mov
mov
das
mov
outsb
inc
add
mov
and
push
ret
add
insb
ja
push
shll
rcl
push
mov
and
icebp
push
cltd
aad
mov
testl
adc
pop
mov
stos
pop
cmp
testb
jp
jae
sub
faddl
pop
sbb
xchg
lret
pop
mov
adc
clc
aad
fldcw
imul
out
sub
jns
ljmp
stos
insl
jnp
loope
popf
sub
insb
mov
mov
pop
mov
loop
bound
aaa
and
insb
cli
xor
das
iret
jg
mov
add
ret
dec
test
stos
addb
test
fs
aam
loopne
jb
sbb
nop
mov
ror
test
sub
and
pop
repz
mov
js
xchg
mov
clc
xor
sub
and
scas
in
xor
mov
in
iret
in
rolb
pop
sub
mov
outsl
xlat
les
pop
icebp
and
dec
in
loop
pop
add
adcl
push
and
pop
inc
and
xor
mov
jo
mov
lock
pop
adc
xchg
cmp
subb
xchg
incl
decl
dec
sbb
adc
cli
push
jae
popa
push
das
inc
div
mov
scas
stos
or
out
cwtl
cmp
push
inc
mov
pop
jle
mov
dec
inc
jge
shlb
jmp
push
push
aas
inc
jg
js
out
hlt
mov
dec
dec
sbb
in
jp
inc
inc
pop
cmp
fimuls
mov
out
pop
push
and
xchg
push
jmp
scas
pusha
and
cmp
orb
enter
ds
aaa
mov
dec
cmp
js
pop
pusha
adc
mov
pop
es
pop
pusha
cmp
ror
and
cld
or
or
cmp
sub
jecxz
mov
cmpl
daa
sti
aaa
xchg
dec
xor
adc
push
into
in
loope
dec
imul
aas
cmpsb
sub
stc
gs
xchg
out
adc
cltd
and
cmc
clc
mov
negl
inc
inc
in
sti
loopne
fmull
xor
sub
and
mov
or
lock
ss
insl
jne
std
add
sbb
push
das
fildll
pop
outsl
mov
cwtl
push
in
in
fldenv
js
push
mov
adc
dec
mov
scas
mov
out
lods
push
and
sub
mov
ficompl
lea
cmp
int3
into
jmp
testb
pop
rol
pop
jle
int
push
out
sar
mov
pushf
and
jae
fildl
dec
push
cmpsb
xor
mov
add
ja
out
cmp
sarb
loope
scas
ss
cwtl
loop
adcl
ss
rorb
imul
inc
leave
lret
or
mov
stc
mov
stc
in
out
sbb
scas
out
sarb
rcr
outsb
inc
mov
pusha
mov
pop
decb
insl
push
out
movsl
sahf
pop
xlat
add
xchg
or
cmpsl
out
xchg
mov
push
add
imul
mov
xchg
mov
pop
and
xor
movsl
inc
cwtl
jmp
push
sbb
add
jne
adc
dec
int
push
or
test
addl
jo
cltd
pop
xor
jae
inc
mov
and
clc
cmp
in
cmc
push
dec
jle
ret
rcrb
aad
inc
dec
scas
xchg
in
pop
aad
stos
ss
push
loope
pop
sub
mov
mov
stos
lds
jle
or
cmp
inc
mov
jbe
xchg
inc
nop
cs
cmp
xlat
mov
sbb
adc
gs
mov
scas
lret
cli
inc
fildl
add
mov
pop
out
rol
mov
cltd
pop
mov
sub
xchg
loop
jmp
sbbb
repz
sub
mov
jnp
cmpsl
negb
out
fisubs
repz
push
mov
in
jle
add
pop
mov
jecxz
mov
mov
mov
pop
mov
addr16
sbb
cmpsl
nop
fidivl
mov
mov
lea
add
pop
jl
leave
pop
gs
mov
sbb
mov
rorl
std
out
aaa
sbb
push
dec
mov
mov
add
int3
fs
out
repz
cld
sub
cmp
or
jnp
imul
xchg
mul
shl
xor
xor
xor
dec
lret
lods
jns
pop
sbbl
mov
ljmp
enter
testb
push
pop
sbbl
jl
pop
icebp
fcoml
fdivrl
push
jnp
pop
loop
daa
sbb
int3
jecxz
ljmp
arpl
mov
aad
inc
bound
inc
les
pop
outsb
jae
and
in
mov
stc
dec
push
add
dec
mov
jle
popa
icebp
repz
adc
iret
cmp
push
or
mov
clc
int3
mov
jmp
jns
cmp
add
sub
fildll
repnz
mov
jp
aam
adc
mov
add
js
mov
mov
jns
loope
in
mov
sub
sbb
ror
pop
std
cli
mov
mov
push
dec
inc
inc
jo
or
stc
ret
cld
mov
adc
stc
xor
sbb
jmp
test
sbb
cmp
call
mov
nop
addr16
pop
fdivrl
and
icebp
outsb
call
pusha
cmp
push
xlat
and
and
and
pop
cmp
push
add
inc
adc
cmp
mov
adc
xor
lret
cmp
test
stc
ss
mov
add
test
sbb
sbb
roll
jle
test
jns
xor
lahf
pop
filds
sub
lcall
sub
insb
jmp
cmp
push
test
rclb
cmp
inc
inc
dec
int
pop
mov
and
xor
inc
repz
mov
jmp
out
mov
xchg
fdivrs
sbb
shll
inc
sub
push
hlt
push
fucom
add
mov
cs
les
mov
or
mov
movsl
sahf
arpl
push
cmp
jmp
scas
sbb
jo
call
rsm
mov
nop
and
mov
ds
ss
pop
loope
test
cli
dec
outsl
mov
pop
xor
lods
scas
lods
or
iret
xchg
lahf
imul
mov
dec
adc
repnz
pop
rcll
mov
dec
cmpsl
xchg
or
mov
dec
movsb
testb
mov
mov
push
add
jmp
popf
sbb
dec
mov
jge
rcrb
xor
arpl
scas
out
popa
push
aam
pop
lds
and
pop
mov
pop
leave
repnz
inc
mov
cmp
mov
int3
pushf
and
mov
or
jne
mov
mov
add
push
insb
lret
mov
ljmp
pop
cmp
jg
mov
sub
inc
roll
mov
icebp
xchg
test
cmpsl
xchg
mov
pop
jne
imul
stos
mov
in
inc
sbb
mov
fistpll
jne
mov
cwtl
xor
sub
mov
outsb
popa
mov
dec
shlb
sbb
loopne
mov
inc
test
leave
outsl
fs
lret
inc
mov
sarl
pusha
enter
sub
add
sbb
mov
test
or
xchg
ret
les
leave
inc
jle
mov
pop
sub
push
loopew
inc
add
test
fnstcw
cmp
mov
out
mov
mov
pusha
sbb
pop
xchg
daa
cmc
jmp
pop
cmp
cmp
jne
sti
inc
ror
movsl
jns
push
or
lods
jo
dec
pop
fistl
inc
push
int3
negb
ds
push
fstpl
bound
mov
aas
cltd
dec
adc
dec
ja
lret
jle
clc
dec
adc
jl
xor
stos
sbb
sbb
xlat
popa
mov
lcall
mov
ds
jp
jno
and
bswap
sbb
sbb
push
sub
jp
xchg
les
pop
divb
add
adc
ljmp
pushf
cld
sti
inc
or
jae
movsl
test
xchg
inc
add
jno
push
inc
jbe
stos
jne
adc
pop
xchg
call
jl
mov
inc
ds
push
nop
xchg
xchg
cmpsl
sub
rolb
mov
flds
movsl
in
sbb
jmp
jl
or
mov
xor
je
rol
xor
cmc
jle
sub
sbb
or
inc
sub
js
xor
push
dec
mov
jg
push
sbb
fsubrs
andb
jo
xlat
pusha
subl
not
pop
sub
jmp
xor
pop
jmp
mov
jecxz
icebp
inc
sbb
or
nop
cli
inc
adc
lcall
push
dec
jg
lret
mulb
add
imul
sub
lahf
dec
mov
test
addb
dec
mov
jne
jge
lods
or
adc
push
xor
pop
mov
pop
mull
dec
mov
mov
mov
into
pop
xchg
push
popa
daa
sbb
lods
fsubl
sahf
mov
xlat
lds
add
adc
sbb
nop
lea
push
cmp
pop
dec
in
mov
mov
mov
test
cs
mov
outsl
xor
mov
inc
xor
bound
and
test
movsb
sbb
cmp
sbb
or
and
mov
shll
insb
fists
add
jb
cs
not
push
dec
and
dec
mull
push
fidivrl
dec
mov
sbb
jne
in
add
insb
fbstp
add
lods
sbb
push
mov
sbb
jbe
pusha
jnp
xchg
jbe
test
sub
sub
dec
jmp
stos
loopne
test
out
aam
movsb
aaa
mov
push
sbbl
hlt
out
mov
and
ljmp
jp
adc
iret
incb
int3
lcall
jl
xchg
adc
test
adc
aam
mov
lcall
clc
test
jae
cmp
cmpl
mov
lcall
aam
xor
push
lock
test
sarb
adc
xchg
sbb
incl
sti
cld
shr
jno
push
andb
cmpsl
sbb
int
leave
jb
add
and
xchg
push
cmp
ficompl
cmc
jns
adc
mov
sbb
cmp
xchg
xchg
insl
movl
add
mov
enter
js,pt
movsl
add
lods
dec
adc
xchg
and
xchg
jp
xor
mov
pop
mov
xchg
dec
pop
jl
xor
xchg
push
fwait
movsl
mull
adc
aad
cltd
xor
adc
dec
inc
rorl
or
pop
add
push
xchg
sti
jle
xor
push
cltd
pop
mov
jge
dec
mov
scas
cmp
sub
adc
mov
pop
xor
inc
ficomps
pop
cwtl
sbb
test
push
inc
mov
in
in
xchg
cmpsb
sti
dec
or
rorb
mov
sarl
inc
pop
das
jbe
sbbb
push
inc
mov
push
lea
adc
push
and
adc
jl
repnz
sbb
int3
lds
les
xchg
stos
ficoml
mov
ja
xchg
sahf
leave
fsts
mov
out
fs
inc
test
dec
add
and
pushf
movsb
test
je
cmp
enter
ljmp
cmc
adc
loop
mov
inc
outsb
dec
fdivl
dec
pop
js
lods
jle
les
repnz
mov
mov
push
jl
loopne
scas
add
into
out
or
and
lds
mov
pop
push
dec
fwait
mov
outsb
xor
mov
cmc
ss
std
cld
ljmp
cmpsl
push
jmp
or
push
dec
pushf
xchg
sbb
fldl
inc
inc
inc
push
cs
jns
mov
hlt
aam
int
mov
lret
push
push
push
jg
jnp
pop
push
cltd
std
adcb
mov
repnz
into
push
push
inc
inc
mov
xchg
and
mov
lock
in
outsb
mov
push
scas
loopne
data16
push
das
jae
push
jecxz
cmp
mov
lret
call
jbe
rcll
sarl
daa
pop
mov
inc
leave
and
lret
mov
mov
pop
pop
and
iret
out
dec
mov
mov
inc
push
mov
gs
mov
push
or
bnd
jg
shl
sub
cltd
mov
das
test
stos
and
and
or
rcll
sbb
xorb
mov
cmpsb
aaa
int3
shld
jae
lea
dec
hlt
adc
and
cmc
imul
mov
mov
fildl
loope
pop
cmp
mov
xchg
in
pop
fs
pushf
addr16
jns
push
lock
push
push
and
js
sti
notl
cs
xchg
imul
or
and
dec
movsb
cmp
push
ret
cmpsl
jo
cmpsb
mov
cmc
add
std
sbb
push
sub
xor
inc
dec
mov
push
test
sbb
push
aaa
cmp
mov
out
loope
mov
mov
sub
jp
rcrb
xchg
popa
xor
or
jp
adc
lea
mov
shr
mov
cmpsb
dec
push
iret
or
pop
test
jecxz
mov
or
orb
add
sbb
pop
lods
rcrb
jmp
dec
add
inc
imul
pop
int
pop
xlat
xchg
fsubs
fimull
add
int3
sbb
add
mov
jno
insb
andl
push
sub
cltd
inc
into
sbb
jae
call
push
testl
jmp
jns
pop
dec
outsb
and
sarb
test
jae
pop
frstor
lret
adc
js
cmpsl
lret
int3
ret
fwait
mov
and
in
lcall
push
aam
inc
xchg
sbb
shrl
sub
and
outsb
mov
outsl
mov
cmp
mov
xor
mov
andl
aas
push
mov
push
sarl
pop
and
rcl
mov
dec
nop
add
pop
mov
movsb
call
push
aam
mov
mov
loopne
fcompl
fidivs
stos
jg
or
sbb
xor
addr16
adc
les
xchg
jg
icebp
sarl
or
mov
fimuls
stos
jge
push
imul
dec
cmp
push
sbb
jns
popf
cmp
lods
add
enter
push
xor
or
ljmp
rclb
xor
cld
mov
jnp
in
je
mov
iret
stos
call
add
imul
in
inc
repnz
aam
dec
cmc
movzwl
xor
dec
mov
xor
cwtl
adc
inc
inc
cli
sub
jae
out
aam
and
mov
sarb
stos
mov
out
in
add
daa
adc
fstps
or
or
dec
jmp
mov
outsl
pop
fdivs
jb
pop
mov
rcrb
imul
lock
iret
jns
fs
loope
fldcw
cmp
pop
sub
pushf
dec
mov
pop
push
in
adc
rorl
or
ds
cmc
out
sub
paddd
scas
jae
mov
out
int
pop
jne
adc
mov
inc
daa
jnp
sbb
mov
inc
mov
mov
xchg
lds
fs
mov
stos
lahf
test
and
cs
mov
cmc
ds
sbb
movsl
in
cmp
push
ret
bound
frstor
pop
mov
out
jmp
clc
data16
adc
jae
mov
ret
or
adc
jns
lret
push
jo
test
jl
xchg
sahf
inc
movsl
sbb
int
rcll
sub
mov
mov
fs
jg
clc
xor
adc
sbb
sub
mov
fsts
and
push
xchg
jae
imul
fdivrs
add
dec
and
fld
ja
movsl
cli
inc
fsubrp
stos
out
call
add
cmp
jnp
test
inc
sbb
loope,pt
adc
lret
dec
xchg
add
inc
mov
movsb
push
jo
inc
cmpb
in
repz
add
fildll
inc
fisubrl
jl
pop
push
push
jmp
mov
scas
push
xchg
lcall
into
dec
orl
and
stos
cmp
test
loop
cs
sub
rclb
jp
lock
mov
cmpsb
mov
in
jae
or
in
cmp
fnsave
jmp
mov
popa
addr16
mov
mov
push
iret
or
sub
lock
data16
lcall
sbb
fidivl
loopne
icebp
dec
gs
lahf
xor
movsl
xchg
pop
push
push
aaa
inc
cmp
xor
or
ljmp
xlat
roll
mov
cmp
adc
mov
negb
xchg
movsl
sub
ret
jb
mov
aad
lret
dec
std
les
inc
mov
or
or
pop
stos
lret
xchg
repz
adc
inc
fmulp
mov
notb
ja
pop
insl
push
mov
out
push
mov
pop
inc
ficomps
scas
jb
aad
lret
cmc
ds
lea
fnstcw
inc
mov
incl
dec
jb
ljmp
std
movsl
imul
dec
sti
cltd
adc
shrb
loop
test
and
in
jo
loope
sub
sub
stos
mov
scas
insl
dec
push
dec
sti
xor
and
mov
push
add
leave
and
xlat
cli
sahf
pop
pop
cs
cmpsb
call
jmp
push
fadds
jecxz
pop
sub
je
nop
std
out
add
mov
ret
or
mov
mov
jnp
xor
fmuls
popf
jmp
std
xchg
mov
gs
fdivrs
dec
repz
loop
fsubl
out
push
pop
call
jg
pop
stos
shrb
idivl
fdivrp
lds
imul
dec
mov
data16
jno
test
call
inc
nop
daa
push
mov
xchg
push
fildl
enter
popa
lock
inc
popa
pop
or
jnp
rorb
jp
push
mov
xchg
xchg
aam
dec
mov
mov
mov
push
lahf
xchg
test
fs
fucomip
xchg
stc
lahf
movsb
add
or
pop
rcrl
mov
and
or
cmpsb
inc
xchg
subl
fst
add
dec
pop
mov
roll
or
out
pushf
into
xchg
sbb
mov
pcmpeqw
std
jo
sbb
mov
js
push
mov
fadds
inc
inc
addb
lods
dec
mov
out
and
jmp
inc
sub
jb
jmp
div
les
inc
shlb
lea
push
cmp
adc
cmc
and
mov
enter
in
sub
es
and
std
jle
hlt
dec
and
inc
popa
popa
mov
jno
jl
inc
call
and
cli
pop
sbb
test
lret
mov
das
xor
jmp
jmp
outsl
inc
ljmp
negl
mov
add
mov
cmp
dec
daa
sahf
pop
cwtl
aas
push
pop
adc
test
pop
xchg
push
in
adc
jge
xchg
mov
push
cmp
add
insl
lret
pop
movsb
dec
insl
mov
push
xor
mov
shrw
sahf
inc
dec
repnz
bound
ds
das
dec
or
push
js
inc
mov
cmpsb
xchg
and
and
pushf
ja
cmp
sbb
mov
mov
xchg
add
adc
mov
cmp
das
xchg
add
inc
not
push
ficomps
movb
in
cwtl
mov
inc
scas
push
xor
pop
out
cs
cmp
sbb
js
dec
cwtl
mov
push
dec
pop
imulb
aas
xor
fs
mov
jnp
jo
stc
push
call
pop
and
pop
imul
dec
test
test
cltd
xor
push
jnp
xor
cltd
jbe
xchg
inc
mov
int3
cmp
adc
jbe
cwtl
push
adc
in
call
repz
xor
mov
sub
or
xor
or
jl
mov
jne
mov
xchg
adc
movsb
mov
shlb
das
and
es
add
mov
mov
mov
adc
sub
add
adc
xchg
xor
ficompl
into
dec
sbb
divl
daa
and
iret
sub
jg
out
cmp
cltd
adc
push
scas
push
push
sbb
or
push
xchg
adc
sti
fdivs
cmc
enter
pop
mov
jg
xchg
pop
mov
stos
sub
jns
out
stos
jle
or
mov
mov
pushf
cmpsl
mov
push
and
mov
mov
or
pop
jbe
ret
icebp
jbe
cmpsb
push
js
add
lret
inc
push
adc
push
mov
sar
push
mov
aaa
shll
mov
or
mov
test
loope
mov
jp
mov
dec
jg
cmp
xor
mov
pop
fwait
mov
mov
sbb
aaa
loopne
cmp
mov
and
mov
inc
mov
or
or
mov
xchg
inc
xchg
xor
mov
push
xor
or
jp
mov
hlt
lcall
xlat
pop
xchg
out
push
adc
xlat
pop
push
push
ja
xor
push
jnp
mov
add
sub
idivl
ficoms
add
jp
mov
and
mov
cwtl
or
das
fldcw
mov
leave
mov
mov
ret
pop
shll
loopne
inc
fistps
mov
js
fcompl
testb
rclb
push
decl
into
cmp
push
jbe
test
lock
daa
pop
mov
aaa
repz
adc
shll
or
xor
ss
mov
insl
dec
pop
stos
arpl
xor
in
iret
mov
data16
sarl
sub
adc
push
cmp
add
imul
ror
mov
xor
insl
dec
into
xchg
sbb
jge
adc
xor
test
push
adc
stos
addr16
dec
add
jp
inc
vprotb
push
mov
icebp
dec
push
test
shll
imul
mov
push
mov
in
mov
addr16
push
mov
push
xor
mov
jne
dec
outsl
icebp
sub
arpl
lahf
push
adc
sbb
subb
pushf
fstpt
jg
xor
leave
sub
xor
dec
and
ret
pop
mov
xor
adc
push
mov
jl
imul
dec
fwait
pop
sub
inc
dec
mov
fcomip
and
and
mov
adc
lret
mov
sub
icebp
mov
pushf
icebp
lods
add
push
js
xchg
adc
test
dec
mov
imul
neg
aaa
lock
cmc
movsl
aam
push
loopew
push
pop
lret
cmp
mov
dec
repz
xchg
sarb
fldcw
nop
repz
ljmp
mov
lahf
mov
adc
stos
test
dec
jecxz
shlb
or
cmp
ficoms
fcoms
mov
dec
xchg
mov
add
in
mov
mov
mov
and
xchg
test
xchg
vaddsubpd
dec
movsl
add
fsubp
icebp
das
dec
je
dec
fs
jmp
dec
lods
xchg
fwait
sub
addr16
mov
les
mov
mov
jl
inc
scas
lahf
cmpsl
or
into
sbb
pop
stc
in
outsl
les
xorb
mov
pop
lahf
stc
hlt
push
jne
cltd
clc
xor
rorl
mov
sbb
repnz
sub
mov
dec
adc
mov
adc
xor
pusha
push
fiadds
inc
cmp
push
hlt
cs
js
addb
adc
push
icebp
mov
sub
test
xor
shll
cli
jo
mov
bound
ljmp
lods
cmp
pusha
inc
cmp
and
jge
das
push
sub
cmpsb
cmpsb
or
or
ret
fildl
jne
subl
inc
out
ret
vsubss
int
mov
fwait
xchg
pop
in
std
int
push
or
xchg
add
and
jp
inc
repnz
xchg
push
fimull
insb
jno
es
sub
insb
icebp
sbb
cmp
jnp
cs
push
das
cmp
add
test
test
js
sub
or
pop
mov
in
or
sub
mov
incl
adc
fxch
call
loop
cmp
daa
test
lock
fucomip
jbe
fcoml
ljmp
test
add
add
mov
or
fidivrs
mov
sbb
mov
fisubl
jae
mov
aaa
sahf
jbe
movsl
push
and
lahf
fwait
mov
mov
mov
arpl
push
mov
mov
cli
loope
jecxz
pop
arpl
cli
xor
daa
repz
mov
inc
dec
sbb
push
adc
pop
pop
adc
push
ljmp
fs
aam
cmp
pusha
arpl
or
sub
mov
lcall
sbb
adc
ds
mov
pop
fists
rorb
jmp
aad
pop
lods
outsb
fadd
cmc
xor
hlt
mov
das
pop
jecxz
cwtl
loope
pop
shr
pop
leave
ja
pop
mov
mov
push
shlb
fsubp
cmp
test
add
sbb
repz
jle
jle
cmp
add
add
or
mov
mov
dec
cmpsb
out
jmp
mov
addl
ss
xor
sbb
dec
mov
aad
inc
mov
mov
mov
lret
mov
sbb
or
mov
adc
faddl
and
and
sub
add
insl
jmp
test
repz
dec
data16
icebp
adc
out
sbb
xchg
stos
cmp
sub
dec
add
cltd
mov
and
xor
repnz
fildl
rcr
push
and
int
mov
dec
sub
outsw
pop
in
out
pop
jle
lret
jl
jle
sub
xchg
mov
xchg
cmp
int
sbb
xor
dec
popa
sub
sbb
into
bound
ljmp
lods
int3
mov
mov
movsl
mov
mov
adcb
bnd
dec
repz
mov
dec
xor
stc
stos
jl
cmp
cmp
fmuls
int3
adc
sub
or
jae
jae
adc
sub
xor
pop
adc
mov
cmpl
sahf
inc
sub
movsl
scas
addl
cmp
jbe
mov
sub
pop
xchg
inc
inc
movsl
xchg
dec
pop
fistpll
mov
or
aam
push
insb
mov
mov
dec
imul
mov
sub
out
pop
aad
xchg
div
mov
mov
sbb
push
test
push
push
cmpsb
fisttpll
pop
js
data16
push
add
insl
push
mov
sti
cmovle
fdivrl
dec
jo
cmpsl
mov
cs
test
cltd
xchg
xorl
push
mov
lret
mov
mov
pop
test
paddb
repz
and
push
aam
xchg
push
sahf
mov
sub
inc
scas
mov
dec
test
repz
sbb
andb
sahf
int3
inc
jb
lcall
mov
inc
cmc
dec
dec
std
movsb
inc
lods
je
mov
fwait
enter
xor
pop
inc
aam
mov
cmp
or
inc
repnz
mov
sahf
loope
and
cmp
mov
out
jne
cmp
push
loop
fwait
out
aas
jmp
adc
push
fdivrl
push
outsl
lock
and
aas
adc
mov
pushf
jns
mov
rol
mov
scas
ljmp
insl
cmp
push
negb
cmp
orl
popf
daa
popa
cmpsb
push
in
test
pushf
and
imul
inc
or
dec
filds
hlt
int3
outsl
fidivs
lret
xlat
dec
inc
dec
stos
imul
pop
adc
aam
xchg
pushf
out
fsubs
stos
push
xchg
inc
enter
mov
xlat
jne
jp
stos
stc
dec
jns
pop
shll
scas
or
mov
mov
out
and
imul
bound
gs
dec
cmp
mov
cmp
je
stos
add
cmp
xchg
movsl
jne
fstps
xor
or
aaa
popf
push
xor
push
dec
mov
and
jae
fiadds
dec
dec
inc
cltd
call
aad
mov
xchg
xor
mov
and
sbb
cmp
xchg
adc
mov
jns
mov
mov
ljmp
add
aam
outsb
subl
mov
popfw
sub
aas
mov
into
push
leave
xchg
mov
sbbl
pop
xor
add
xor
aam
mov
xor
mov
scas
das
jp
jns
icebp
add
aaa
lock
dec
mov
fwait
xor
dec
mov
sub
mov
and
les
imul
sbb
inc
sub
mov
or
int3
mov
push
rolb
pop
pop
in
sbb
sbb
int
lahf
mov
mov
xor
mov
push
cmp
call
sub
data16
adc
sub
pop
cli
jecxz
pusha
xchg
gs
dec
mov
pop
loop
mov
out
repnz
sarl
jle
shrl
mov
sub
mov
mov
mov
ljmp
icebp
lds
xor
divl
lahf
sub
sar
dec
mov
sahf
shr
arpl
stos
jno
outsl
ds
xchg
inc
iret
rcl
adc
iret
cwtl
sub
jecxz,pt
sarb
mov
lods
mov
jo
or
push
jl
sbbb
ret
aad
mov
dec
xlat
pop
xchg
or
inc
popf
mov
inc
jge
in
je
xchg
jno
jl
jmp
fidivrl
test
sti
xchg
and
std
mov
and
push
test
mov
test
fidivl
arpl
arpl
lcall
and
les
xor
ss
mov
pop
jle
mov
in
dec
iret
mov
icebp
cld
imul
push
push
loop
mov
jg
dec
sub
je
stos
enter
ds
mov
lahf
and
ret
in
and
dec
repnz
sbb
fs
lret
lea
inc
xchg
mov
mov
repnz
push
xchg
or
sub
sub
adc
fistl
push
flds
fwait
mov
xor
sbbb
add
rcrl
jg
pushf
mov
fimull
out
dec
int
and
cltd
mov
sahf
xchg
es
cmp
cmp
arpl
push
lcall
sbb
cwtl
cmp
sub
cwtd
pop
jbe
mov
popa
fldt
push
out
pop
test
xchg
lds
inc
xchg
repz
and
nop
in
in
pop
fstl
push
mov
sub
ret
dec
shll
jl
xchg
cmc
inc
sub
mov
cmp
lcall
cmpsb
sbb
data16
and
loop
lret
leave
imul
inc
and
aad
in
mov
pop
rclb
xor
xchg
pslld
sub
out
fldl
mov
jnp
pop
jnp
cmpsb
pop
xchg
test
mov
in
pop
xor
je
insb
rolb
test
cmp
pop
cmp
cwtl
ja
testb
mov
das
mov
jmp
mov
jnp
push
in
sub
jae
lahf
and
or
add
dec
dec
pop
push
push
lock
lea
mov
test
jae
sbb
inc
inc
dec
fldcw
pop
insb
loope
outsb
in
mov
mov
lods
fnstcw
sbb
add
dec
pop
popa
mov
mov
push
stos
shr
push
dec
xor
jecxz
pushf
push
fisubs
mov
lods
imul
popa
shlb
sbb
fcmovnbe
mov
pop
jae
repz
sub
cltd
mov
xchg
scas
in
cmp
loop
int
push
lret
into
jbe
mov
in
cmp
pop
jmp
scas
add
aad
xchg
add
movl
mov
mov
or
in
outsb
xchg
dec
xchg
xor
mov
add
lods
inc
or
cmp
outsb
jnp
dec
pop
push
cmp
cltd
cmpsb
imull
nop
pop
lret
test
jmp
out
jns
std
or
inc
dec
dec
adc
outsl
in
out
lret
xor
in
clc
add
shll
inc
sub
jg
and
cmpsl
ja
imul
xor
pop
pusha
sub
and
imul
pop
mov
jbe
imul
cwtl
aas
cld
outsl
mov
jno
xor
push
gs
popf
adc
fistl
ss
push
scas
movsl
pop
pushl
cmp
push
push
out
push
pop
popa
in
imul
lcall
outsb
dec
lds
or
sub
out
cmp
mov
pop
mov
adc
pop
xchg
hlt
loope
test
leave
mov
js
aad
push
stos
pop
xchg
clc
mov
icebp
test
loopne
jne
or
ja
jmp
arpl
imul
sub
ljmp
xchg
iret
jbe
leave
aaa
and
shl
mov
idivb
notl
test
inc
sbb
xor
xor
xchg
outsb
decb
loop
rcr
cmpsl
call
addr16
lods
mov
enter
jbe
ds
pusha
nop
cmc
clc
test
sbb
hlt
mov
testl
or
push
popa
add
fs
jbe
cltd
pop
popa
pop
sbb
fwait
jbe
inc
inc
imul
call
sub
xor
mov
xor
fsubs
in
xor
mov
ljmp
mov
sbb
mov
adc
outsl
sahf
shlb
adc
cmp
loope
sub
icebp
je
mov
pop
push
push
xchg
pop
mov
add
pop
sarb
and
xchg
xchg
ficoms
ljmp
pop
push
sbb
adc
sahf
repz
sub
shrb
mov
outsb
loopne
or
pop
mov
dec
cmp
testb
out
or
sbb
sbb
push
fadd
jno
mov
inc
hlt
aam
loop
in
mov
mov
mov
mov
add
jg
mov
in
das
sbb
daa
add
mov
lahf
pop
sbb
xchg
popa
push
mov
lahf
lcall
push
xchg
push
popf
jl
pop
loopne
jp
pop
dec
mov
rorl
xor
sarl
pop
push
inc
out
negl
xor
pop
adc
jmp
fmull
cwtl
adc
pop
dec
daa
sbb
aas
je
push
inc
shrd
scas
in
adcl
dec
in
jns
or
pop
pop
mov
and
inc
adc
lods
dec
xchg
xor
mov
add
divl
les
or
cmp
incb
stos
cmp
pop
hlt
sub
dec
or
insb
mov
mov
test
jge
xor
rclb
cmpb
stos
mov
mov
cmp
enter
mov
lahf
push
std
leave
loope
imul
inc
loope
repnz
test
addb
out
mov
xor
cmp
mov
stc
dec
scas
or
jg
cmpsl
mov
add
ja
mov
jp
mov
mov
lret
lea
dec
xor
loop
xchg
sub
jno
xchg
ret
or
popf
daa
and
adc
fmuls
xor
sub
not
add
jo
in
data16
jnp
adc
sub
add
xchg
jnp
imul
aaa
sbb
pushf
repz
mov
mov
jp
js
add
cmpsb
fwait
xor
mov
push
ja
lret
lahf
cmc
mov
push
cmpsb
in
lods
mov
popf
mov
stos
jecxz
push
in
mov
cmp
add
in
xor
xchg
fwait
and
lds
lea
cmp
sub
mov
loope
adc
pop
jae
xor
out
test
mov
sub
fimull
mov
jp
lods
cmpsb
popf
cmp
mov
jae
dec
imul
cmc
stc
add
cwtl
sbb
es
push
imul
lea
mov
jbe
loop
or
lea
or
push
xor
dec
out
cli
add
lcall
shlb
push
mov
jbe
int
push
push
pop
sub
loop
jo
add
pop
and
push
xor
sub
push
xorb
adc
and
xchg
aad
nop
ret
xchg
mov
popf
lret
insl
vmovdqu
in
mov
mov
mov
lds
inc
in
and
daa
into
ds
insl
data16
sbb
sub
jge
int3
dec
mov
cmp
addr16
xor
ds
inc
sbb
out
addr16
dec
xchg
xchg
inc
jbe
out
push
fidivl
adc
bound
push
rcr
jp
test
stos
push
aas
mov
sbb
paddusb
js
ljmp
inc
cmp
out
arpl
xchg
shl
les
fwait
mov
call
jno
loopne
xchg
ljmp
inc
out
enter
cld
cmp
and
pop
cltd
mov
mov
mov
pop
daa
or
fidivrs
xchg
pop
cld
js
pop
cld
push
or
mov
mov
aad
outsl
cld
mov
loop
adc
js
imul
in
out
test
or
ror
ljmp
xor
in
stos
adc
pop
movsl
les
cmp
cmc
std
rcl
jge
outsb
xchg
sub
mov
loop
int
hlt
insb
or
push
lods
outsb
addl
xchg
adc
divb
mov
push
xchg
jne
mov
push
fidivl
push
hlt
ljmp
jmp
mov
std
jno
fnstenv
inc
xor
popa
inc
mov
hlt
xchg
jbe
fstps
movsb
push
or
inc
mov
adc
or
sub
popf
pusha
mov
xchg
out
daa
and
sub
lret
in
xorb
xchg
add
bound
test
lods
mov
or
loop
or
dec
test
cmp
and
fdivs
push
mov
fisubs
xor
add
fwait
pop
sbb
dec
dec
add
outsb
and
and
cli
repnz
pushf
pop
xor
cwtl
cmp
cmp
jl
outsl
test
insb
dec
decb
lahf
int3
movsl
mov
push
das
cwtl
xor
insb
jo
test
mov
adc
mov
int
out
push
in
adc
add
repz
in
mov
lea
jnp
js
lods
hlt
sahf
push
jns
sub
sbb
cmpsl
pop
cwtl
in
mov
mov
clc
mov
decl
and
out
loopne
ret
sahf
rcrb
jae
gs
insb
xchg
mov
mov
or
dec
or
repnz
test
sahf
ljmp
jl
jns
jmp
je
inc
addr16
push
jae
xlat
ret
pop
adc
mov
notl
adc
fnstsw
push
ret
icebp
sub
and
and
popa
addr16
cs
push
jmp
repz
push
pop
lods
js
add
mov
or
insl
inc
push
in
fs
in
pushf
lea
rcll
or
xchg
rolb
push
je
or
aam
imul
sbb
mov
lcall
inc
movl
sbb
jno
mov
dec
jge
pop
js
mov
adc
cmpsb
cmpsb
xor
pop
and
js
repz
xchg
xchg
jge
es
sbb
xor
xor
div
addr16
jge
adc
loope
cld
adc
addb
icebp
xor
inc
sbb
cmp
adc
adc
int3
mov
add
les
call
out
sbb
fsts
dec
push
jg
addr16
sbb
stos
idiv
popf
cltd
adc
sahf
jmp
fld
mov
pop
rcrl
jb
subb
popa
lcall
mov
mov
mov
loope
rcr
push
fdivrs
out
scas
pop
xchg
xor
les
cmc
and
pop
in
push
push
sub
cld
mov
mov
loope
pop
mov
mov
clc
enter
jp
cli
ret
mov
add
sub
sbb
pop
adc
out
or
ds
mov
jne
movsl
jno
sti
nop
mov
es
add
stos
mov
jbe
mov
push
push
push
stos
and
sahf
das
inc
push
inc
scas
xor
fldt
movsl
ja
xor
in
xchg
and
sbb
push
cmpsl
mov
cmp
fistpl
jno
xchg
roll
pop
or
adc
pop
gs
fcoms
push
jno
aas
popf
enter
fmuls
daa
gs
mov
mov
mov
push
stc
das
push
cmpsb
incb
scas
es
mov
pop
mov
dec
adc
lcall
test
inc
lock
hlt
or
movb
jbe
jge
pop
imul
mov
in
popa
lret
jmp
je
jne
jbe
cmp
sar
push
out
sahf
leave
adc
add
cli
iret
and
sub
repnz
mov
das
aas
stc
pop
xchg
int
adc
daa
lahf
lret
dec
loop
insl
jle
inc
pop
pop
out
fcomps
imul
out
or
lea
clc
mov
pop
bound
mov
xlat
push
adc
repz
outsl
call
dec
xchg
dec
push
js
jmp
jno
ret
push
and
jmp
fcmovnu
adc
add
iret
pop
jg
sub
lods
mov
mov
test
icebp
pop
xor
cmp
lds
or
lcall
add
sub
fisttpl
cld
std
or
push
push
test
pop
in
xchg
sub
mov
cmpsl
inc
mov
push
cmp
adc
scas
test
mov
rol
fildl
ljmp
sub
pop
sub
adc
out
inc
ja
popf
insb
sub
int
lds
mov
sub
jmp
xor
inc
fbstp
add
popf
mov
mull
jo
sub
out
mov
call
std
sbb
test
inc
inc
pusha
cld
jno
jae
sarb
rolb
xchg
fs
jns
js
lret
shll
rcrl
sub
mov
call
jmp
pusha
xchg
fcomip
add
or
es
sbb
out
and
nop
scas
cmp
fsubrs
and
mov
adc
pop
daa
mov
mov
lods
out
jo
bound
inc
or
aad
jmp
mov
loope
fcoml
jge
mov
aaa
sbb
dec
lods
mov
inc
daa
jecxz
cld
fstpl
js
xlat
lock
dec
mulb
js
mov
mov
shlb
pop
mov
mov
outsl
arpl
cmp
in
mov
cld
fsubrs
cmp
lcall
lret
cmpsb
mov
mov
mov
push
js
sbb
sbb
aad
jo
in
int
jmp
and
mov
in
pop
push
mov
sub
xchg
cs
or
lds
adc
inc
idivl
xchg
in
sbb
stos
fchs
insb
or
mov
std
aam
mov
nop
in
aad
cmp
mov
stos
lock
sub
jecxz
mov
into
dec
dec
jae
push
cs
testl
cmp
xor
adc
and
sbb
jl
xchg
pusha
outsb
inc
sbb
inc
sub
adc
pop
adc
movsl
popa
push
insl
add
fwait
push
sahf
mov
xchg
in
dec
inc
cmp
fcmovu
insb
shrl
test
bound
aas
add
sub
mov
lods
in
flds
mov
dec
cwtl
stos
daa
roll
xor
add
test
scas
sub
fisubrl
ja
adc
sub
pop
fldl
cmpsb
pop
add
mov
outsl
xchg
jge
dec
or
xchg
hlt
sarb
cld
jmp
cltd
out
xchg
xchg
loope
inc
jmp
outsl
pop
mov
je
in
int
or
mov
cmp
add
sbb
arpl
mov
jmp
jb
jne
std
out
aaa
xchg
pop
pop
cmp
xchg
fs
sbb
dec
ret
loop
xor
incl
jl
mov
icebp
or
lea
inc
ja
pop
sahf
imul
push
shll
or
stos
xchg
mov
xchg
sbb
aam
aas
and
xchg
cmp
sar
mov
faddl
or
rcl
jp
mov
push
xchg
pop
xor
mov
insb
rcl
leave
mov
test
cld
cmp
jne
xchg
sub
fwait
mov
mov
push
ss
out
xchg
out
lods
andb
into
xchg
xchg
or
jbe
enter
xor
mov
push
dec
and
scas
je
imul
jle
xchg
or
mov
push
mov
dec
outsb
jl
inc
aam
xor
xchg
movsb
test
loopne
pop
mov
mov
xchg
rcrb
push
push
sbb
insl
iret
lea
lods
jno
gs
push
and
in
cvtpi2ps
test
insb
stos
xlat
push
bnd
pop
push
out
fwait
les
xchg
outsb
imul
inc
mov
jne
test
pop
xchg
fldt
mov
and
or
mov
push
or
addr16
ret
xchg
mov
xor
or
jb
dec
fs
inc
push
mov
adc
es
inc
aaa
pop
lea
hlt
out
mov
push
push
repz
mov
je
adc
xchg
sub
pop
pop
mov
pushf
es
leave
iret
pushf
pop
aaa
pop
mov
add
xchg
gs
inc
sbb
sahf
cltd
mov
out
adc
repnz
xor
call
lods
sub
pop
adc
and
ret
xchg
fbstp
sbb
jnp
mov
test
popf
sahf
push
and
movsl
jmp
push
adcl
loopne
cmp
mov
stc
loope
jg
inc
orl
das
push
pop
mov
fwait
int
loope
push
sbb
jae
or
mov
mov
dec
scas
jl
jmp
push
sbb
dec
mov
in
sub
scas
xchg
mov
mov
dec
mov
aas
sub
cmp
mov
pop
xchg
sbb
das
or
mov
and
or
xor
mov
mov
xor
inc
lock
addl
fmuls
das
loopne
add
jae
sahf
mov
aam
cs
mov
jbe
add
pop
inc
jecxz
push
xchg
gs
aaa
xchg
mov
out
push
xor
inc
push
or
mov
jns
aam
pop
jnp
int
pop
sub
inc
scas
std
or
xchg
jl
sti
movsl
jecxz
xchg
mov
ds
ds
mov
push
sub
pop
loope,pt
mov
mov
addr16
into
pop
popa
or
push
sbb
sub
cld
cmpsl
fstl
jns
jns
mov
outsb
or
arpl
lcall
and
repnz
mov
aas
xor
insb
mov
xor
pop
sub
gs
loopne
and
inc
xchg
jbe
push
shrl
scas
loop
mov
mov
mov
mov
mov
mov
aas
stos
in
test
clc
mov
pop
addr16
out
jno
out
lahf
jmp
xor
scas
sub
mov
xchg
or
pop
add
cmc
pop
sub
call
or
push
cmc
imul
mov
loop
cmp
mov
and
mov
stos
cmp
imul
cmp
fcmove
int3
lret
add
stc
fistpl
lock
or
push
cmp
data16
out
in
jmp
jecxz
shr
mov
jge
jns
andl
mov
mov
pop
xchg
mov
sarb
test
ss
dec
aad
fadds
orb
stc
push
insl
in
addb
std
lock
push
push
andl
insb
add
shll
add
cld
fcoms
push
sub
in
pop
jp
imul
mov
cmp
pushf
in
adcb
aad
pop
mov
cltd
iret
cld
shll
imul
ret
sarl
sti
mov
sub
push
sub
mov
aaa
aad
adc
leave
out
pop
loopne
or
mov
cmc
je
mov
ja
xchg
jbe
push
std
mov
es
jne
nop
cmp
test
ffree
xlat
stc
imul
push
xor
cli
lret
or
jb
jmp
gs
bound
push
out
in
in
shld
xchg
aam
and
jg
push
push
xchg
int
xorl
icebp
mov
aaa
ss
mov
adc
or
movb
or
xor
andb
out
add
jp
dec
insl
mov
int
frstor
xor
adc
push
popa
adc
ja
fcmovnb
or
push
and
fwait
xchg
andb
xchg
dec
jno
lock
imul
outsl
sarl
adc
lcall
mov
xchg
xchg
rcrl
leave
adc
xchg
pop
mov
cmp
push
pop
call
out
pop
adc
mov
dec
xchg
sbb
cltd
stos
data16
lret
aaa
pop
mov
jo
lods
cmp
ljmp
pusha
jmp
mov
test
adc
lret
popl
or
or
bound
pusha
cmc
sbb
outsl
sub
cld
subl
add
cmp
test
jle
sbb
mov
mov
cmpsl
jnp
fildl
out
jae
pop
push
cmp
jae
jle
cwtl
cmpsl
or
cmp
scas
inc
add
cmp
gs
mov
test
mov
js
lods
jmp
stos
imul
test
pop
rdpmc
mov
and
shlb
cs
gs
and
cs
push
addb
cmpsl
out
and
loop
jno
ds
pop
ror
cmp
inc
clc
mov
inc
ret
pushf
std
mov
and
filds
gs
add
jge
dec
and
cmp
pop
stos
cmpsb
enter
and
fwait
jae
add
repz
pop
and
jns
gs
inc
cmp
jne
shll
mov
inc
lret
loop
or
sbb
or
lret
dec
xor
lcall
pop
pop
inc
rcl
mov
push
mov
js
fidivrs
mov
mov
gs
mov
je
ds
cmp
mov
cmp
sbb
rol
daa
push
cmp
lock
jle
pop
aaa
xchg
xchg
shlb
sub
mov
cli
addr16
aad
push
mov
mov
jnp
pop
repz
xchg
stos
sbb
mov
adc
mov
fucompp
and
mov
or
fdivr
stos
mov
lock
jecxz
xor
pushf
leave
jns
xor
clc
negb
xor
pop
filds
js
lock
sbb
lods
mov
out
imulb
pop
jo
add
jb
imul
jns
mov
inc
mov
mov
dec
xchg
mov
ffree
cmp
or
insb
mov
or
out
adc
out
or
adc
cmp
dec
add
loope
xor
mov
cli
sub
push
sub
hlt
adc
je
push
jne
inc
cld
aam
push
std
lahf
mov
outsb
rolb
shlb
in
cltd
test
and
pop
push
xchg
mov
push
fadds
mov
nop
inc
hlt
shrb
out
out
cmp
mov
mov
add
and
lcall
insb
pshuflw
jle
ret
xchg
adc
dec
xchg
cmp
outsw
icebp
sub
sbb
mov
sub
inc
cmp
dec
cmpsl
jno
jp
xchg
and
jbe
and
call
jno
jo
jmp
sbb
push
jae
add
mov
sub
loop
test
xchg
shl
cmpsl
ret
andl
inc
sub
mov
sub
stc
aaa
pop
out
test
outsl
xchg
addr16
fimuls
fstpl
lcall
iret
jbe
mov
test
sbb
cmpsb
and
loopne
outsb
add
jnp
bound
mov
mov
jp
pop
sub
stos
dec
push
pop
nop
push
mov
insb
loope
scas
repnz
ljmp
xchg
cld
into
xchg
and
or
mov
xchg
mov
cmpsl
sub
insb
jb
pop
les
int3
xchg
cmpsb
xchg
cmpsb
ss
add
loope
cmpsb
xchg
and
xchg
test
mov
shll
sub
je
inc
cmp
cmc
movsb
das
enter
adc
cmp
pop
xchg
and
out
inc
sti
mov
cmpsl
call
outsl
push
ret
and
mov
cmp
psubq
xor
loope
xorb
daa
int
mov
sahf
mov
fstpl
popa
in
loop
out
iret
mov
mov
mov
dec
repz
or
aad
jl
or
add
cmp
pop
gs
in
pop
adc
loop
push
or
pop
loopne
push
test
jmp
inc
insb
xor
add
dec
xor
jg
aas
xor
scas
push
inc
push
and
jmp
inc
add
aad
add
cli
push
divb
scas
and
push
inc
ds
and
roll
enter
cwtl
fwait
enter
or
stos
mov
jo
cli
and
xor
xor
add
gs
shl
cmp
push
xor
pop
imul
lods
sub
xlat
test
pop
inc
aas
shrb
pop
mov
jecxz
loop
ds
out
xchg
dec
jmp
into
xchg
loopne
lds
xchg
addl
movsl
pop
sbb
fs
mov
sbb
dec
inc
jo
fldcw
xchg
fs
cmc
jo
clc
aaa
pop
dec
imul
mov
mov
ror
xchg
cmp
or
inc
cli
jl
out
decb
xchg
cmp
sbb
bound
ret
jge
nop
inc
mov
call
mov
insl
in
addr16
mov
movl
mov
push
adc
push
popf
adc
or
fnstcw
ljmp
dec
scas
movsb
mov
or
ret
subl
cmp
xor
pusha
jns
stc
or
pop
insl
and
dec
xchg
push
sahf
mov
in
xor
jo
jmp
in
les
push
pop
cmp
idivl
js
or
mov
aaa
mov
arpl
cmp
inc
call
adc
cltd
adc
add
dec
push
jg
adc
daa
call
dec
xchg
test
iret
xor
fimuls
xor
fnstsw
rolb
aad
pop
jp
sbb
jle
call
add
dec
jl
sahf
inc
dec
cmpsb
lods
leave
das
bound
repnz
aad
lret
push
adc
scas
test
jecxz
call
xlat
xlat
add
fldl
dec
fiaddl
add
popa
cld
or
insb
or
dec
adc
aaa
inc
add
dec
mov
and
faddp
rcl
stc
sti
ret
push
fincstp
shrl
daa
sub
and
add
sbb
mov
adc
sub
xlat
pop
xchg
enter
scas
fbstp
jae
int3
icebp
inc
repz
xchg
mov
or
xchg
addr16
push
rorb
and
das
adc
sub
fcmovb
ljmp
jbe
jge
in
xchg
popf
dec
push
sub
and
ljmp
inc
sbb
add
out
imul
push
ja
mov
out
in
mov
or
sti
les
cmp
and
mov
inc
xor
fnstcw
or
std
lahf
daa
dec
sbb
pushf
leave
lcall
fdivl
pop
sub
adc
shlb
lea
arpl
jae
inc
mov
out
imul
rorl
lock
and
mov
cmpsl
dec
call
mov
xchg
or
or
ljmp
enter
push
icebp
clc
pop
mov
or
sbb
andnps
pushw
adc
cltd
cmc
or
es
mov
aam
add
push
rorb
icebp
push
mov
mov
xchg
out
lret
iret
imul
dec
lea
sti
andps
cli
mov
fwait
je
test
lcall
add
out
ret
jmp
enter
loopne
or
add
gs
dec
aaa
mov
pop
adc
fstl
pop
pop
pop
aad
add
xchg
mov
mov
imull
mov
sbb
sbb
pop
inc
ja
xchg
int
inc
test
mov
push
push
shl
lods
test
jns
cmp
push
jg
and
popa
jecxz
add
jg
je
and
adc
push
pop
cmc
xor
cli
pop
ficoms
sbb
jg
out
xchg
outsb
push
sub
fcomi
pop
or
bound
test
ljmp
call
adc
push
or
dec
scas
jge
inc
cmp
fsubr
in
jmp
mov
pop
sub
push
stc
dec
mov
mov
pusha
or
insb
insl
pop
cmp
shl
mov
sbb
cwtl
sbb
bound
movsb
bound
in
and
dec
sbb
and
jp
push
lret
mov
push
rclb
jae
pop
push
rcrb
pop
cmp
lock
jg
pop
repnz
cltd
popw
inc
cmp
or
inc
jnp
add
mov
jbe
and
jo
insb
repnz
inc
pop
jge
jmp
mov
add
jb
xchg
push
shlb
add
mov
xchg
cs
xor
cmp
in
dec
xor
out
push
dec
and
pop
test
push
mov
mov
sub
test
fcmovb
mov
out
loope
xlat
fisubrs
inc
repnz
std
aaa
xchg
bound
rcrl
mov
mov
dec
jg
xor
stc
stos
cmpsb
fidivrl
pop
xor
stos
loopne
mov
dec
sbb
sbb
cltd
jmp
mov
mov
cmpsl
roll
daa
cli
xor
adc
repz
pushf
and
dec
or
and
adc
andw
jle
inc
lret
frstor
jge
mov
or
rol
mov
push
in
pop
pop
mov
lods
inc
jecxz
pop
jmp
add
xchg
cmpl
arpl
jb
xor
or
mov
xor
push
daa
pop
lea
aam
js
fucom
push
rolb
sahf
pop
dec
ljmp
push
sub
ds
iret
rcrl
es
sub
mov
pop
mov
and
push
lahf
shr
cltd
pop
imull
or
push
jmp
lea
ret
idiv
movsl
ss
adc
fstl
push
fdiv
xchg
xchg
pop
pop
pop
arpl
cmp
fisubrs
add
movsl
or
xchg
pop
mov
ret
clc
call
inc
dec
adc
dec
imul
sbb
cmp
aas
push
testl
imul
hlt
jb
and
xchg
cmp
xchg
pusha
loope
dec
mov
xlat
es
pop
clc
cmp
mov
cld
fbld
in
outsl
lods
scas
lods
into
add
insl
enter
psubsb
loope
testl
xor
loopne
fcmovb
push
push
mov
add
out
add
push
fidivl
scas
mov
sub
inc
roll
clc
test
mov
fstl
cmpsl
sbb
int
push
pop
inc
in
outsb
jp
popf
sub
dec
stc
mov
and
jge
cltd
mov
xor
aaa
and
ds
or
adc
es
xor
shrb
xor
push
fmuls
nop
jmp
dec
mov
xchg
movsl
iret
jbe
or
mov
jg
jecxz
push
std
cltd
pop
lock
xchg
jmp
out
ds
popa
mov
xchg
sbb
xor
stos
movsl
cmp
ljmp
outsl
mov
out
int
test
adcl
mov
mov
jns
dec
pop
in
scas
jle
add
sub
pop
xchg
mov
out
and
adc
or
inc
xorl
inc
mov
fnstcw
fs
fwait
jnp
pusha
jg
sub
xchg
mov
adc
adc
es
push
push
sbb
rcll
sub
adc
sbb
adcb
inc
aaa
hlt
cmp
push
push
aaa
add
mov
pop
lods
call
cltd
test
sub
adc
and
push
pop
and
out
mov
sbb
push
add
push
adc
inc
sub
in
icebp
fstpl
loopne
adc
jp
jnp
data16
rorb
jne
xchg
mov
pop
push
out
das
add
repz
dec
mov
xchg
jmp
movsb
fcompl
imul
inc
mov
mov
lock
mov
icebp
out
add
lahf
push
mov
mov
add
mov
outsl
iret
sahf
pop
mov
pop
fs
mov
sbb
inc
pop
pushf
cli
mov
mov
frstor
adcl
negb
movsb
xchg
sbb
imul
dec
xor
jae
das
mov
jge
xchg
xor
call
push
dec
pop
mov
test
cwtl
test
repnz
or
or
mov
inc
lcall
fsubp
or
sahf
or
repnz
out
inc
cmp
leave
jnp
repz
out
mov
faddp
int3
push
xchg
mov
das
sub
pop
xchg
mov
dec
ss
outsb
test
cld
sbb
push
jmp
insl
sbb
nop
jae
inc
test
jmp
stos
repnz
cltd
inc
and
int
ret
push
cmc
pop
test
scas
jns
jmp
pop
push
not
mov
stos
mov
arpl
movsb
sbb
sbb
fisttpl
cli
ss
push
mov
push
xchg
mov
pop
push
pop
outsb
sahf
ja
inc
pop
pop
or
pop
xorb
or
or
and
jnp
xor
sarl
mov
mov
gs
les
dec
rcll
jo
imul
sbbl
stos
mov
xchg
jmp
testb
out
cmp
add
xor
test
call
mov
and
out
push
and
pop
cmp
es
lahf
lods
jle
jmp
cwtl
into
enter
xchg
xchg
pop
dec
loopne
lock
sbb
lcall
out
jl
dec
popf
mov
lahf
subl
pusha
iret
sbb
int
mov
push
add
jbe
sbb
fldenv
pop
mov
enter
lret
imul
andl
movsl
daa
and
sub
dec
inc
jp
bound
sbb
or
or
xor
mov
xcrypt-cfb
cmpsl
mov
shrl
cmc
repnz
inc
aaa
aas
sbb
lret
push
push
cld
adc
push
xchg
es
ljmp
or
cmp
dec
jbe
iret
pop
xor
aas
imul
call
xchg
pop
ljmp
cmp
aam
int3
test
mov
int
in
inc
outsb
inc
arpl
fidivl
es
mov
xchg
dec
mov
pop
inc
int3
adc
push
popf
pop
or
in
mov
push
cmpsl
fildll
jge
cmp
clc
test
xchg
int3
jp
jg
das
sti
packuswb
and
sub
xor
add
mov
ds
dec
pop
loop
mov
cmp
in
int
mov
andb
push
rorl
cmp
enter
aad
imul
jmp
movsl
mov
inc
xchg
sbb
push
sub
or
jns
aaa
mov
or
cmp
test
push
das
add
xchg
and
mov
iret
push
sbb
xor
mov
push
add
xor
mov
ss
movb
hlt
sbb
push
or
or
push
lahf
out
xor
lret
push
pop
mov
sbb
mov
mov
repz
push
int
lock
jg
fmull
stc
jno
fsts
inc
iret
mov
bound
mov
mov
pop
sub
and
and
icebp
mov
xor
pusha
push
push
add
mov
rolb
mov
rcr
add
or
out
dec
inc
mov
lds
adc
jle
fcomps
jo
out
sbb
es
aam
add
lock
push
adc
pop
adc
test
popf
inc
repnz
jecxz
pop
loopne
aas
push
jge
or
int
jp
je
push
mov
roll
sub
jmp
in
enter
test
xor
mull
and
repnz
xchg
mulb
fadds
mov
sbb
rorl
call
mull
cmp
jbe
mov
repz
and
into
lea
outsl
sbb
jg
shll
leave
xchg
push
sahf
inc
cmp
cmp
loope
sbb
jb
xchg
add
or
push
adc
mov
movb
icebp
pop
out
int3
sbb
gs
insl
loope
iret
inc
in
xor
loopne
bound
push
in
cmp
roll
sub
xchg
cwtl
xchg
xchg
data16
push
mov
or
xchg
cmp
sahf
cmp
add
and
or
xor
jo
pop
xor
sbb
inc
inc
or
lods
enter
movsb
scas
mov
sub
push
test
push
push
or
push
ss
mov
testl
jle
jge
in
pop
or
mov
sbbb
les
sbb
jl
shrb
rcrl
sbb
repnz
xchg
push
and
addr16
sbb
cmp
loopne
sub
popa
jae
jnp
lds
dec
sbbb
xor
mov
roll
insl
mov
insl
mov
push
movl
xchg
inc
mov
sti
fcmovnu
adcb
lock
lcall
mov
jmp
sbb
inc
insb
jl
mov
push
shlb
out
outsb
nop
sub
pushf
adcb
inc
sub
inc
sub
and
cwtl
jge
jno
or
push
rcr
add
mov
add
jp
xor
lcall
loope
imull
adc
gs
push
imul
std
dec
jne
in
add
jge
push
insl
cmpsb
and
lahf
scas
adc
js
sub
test
or
jno
sub
mov
xchg
sub
lock
shl
mov
or
scas
jo
frstor
aas
int
mov
fdivp
ljmp
dec
mov
arpl
addr16
fdivrs
imul
sbb
clc
mov
xor
xor
test
imul
mov
aam
add
lods
inc
testb
jb
adc
or
repz
push
cld
xor
pop
push
push
popf
lods
addr16
ret
sub
pop
mov
sbb
push
mov
pop
push
xchg
or
loop
test
cmpsb
and
pusha
arpl
mov
in
mov
mov
outsb
mov
mov
mov
mov
push
lock
addb
sahf
aaa
es
sbb
inc
pop
shrb
movsb
mov
or
pushf
mov
fiaddl
jbe
pop
and
xor
shlb
dec
xchg
mov
push
sti
addr16
cmp
pop
adc
jg
add
icebp
int3
inc
pop
ret
push
imul
mov
sub
daa
jbe
sbb
sub
popl
mov
mov
xor
push
push
les
ret
js
cwtl
jge
lods
repnz
jnp
test
jmp
mov
dec
sbb
jl
mov
cmpsl
mov
push
add
jg
test
loop
ror
ret
push
jle
sbb
fxam
xlat
sbb
jmp
lahf
inc
mov
imul
jecxz
rol
sbb
in
bound
ds
int
repz
fs
je
mov
repz
popa
cmpsb
adc
inc
mov
push
gs
fisubrl
push
ja
sbb
leave
push
sbbl
mulb
popf
pop
dec
sar
addl
out
std
bound
daa
pop
jns
lret
sbb
jae
insl
repz
ss
or
cmpb
movd
sub
loopne
push
mov
decb
loop
dec
mov
fdivrs
jnp
lret
arpl
int
ret
mov
push
fxch
stos
pop
cmp
or
jmp
jns
addl
inc
sub
mov
push
in
mov
cmp
pushl
add
idiv
fwait
cmp
mov
mull
outsl
mov
mov
push
mov
test
xchg
mov
cmp
lret
xor
sub
mov
mov
ret
mov
mov
push
movsb
cmp
cwtl
int3
jmp
dec
sbb
nop
dec
jae
ljmp
or
shr
inc
icebp
fdivp
cmp
mov
repnz
ficoms
sbb
leave
out
fs
push
stc
mov
mov
dec
mov
ds
popa
jo
mov
pop
add
mov
add
dec
xor
mov
into
sahf
xchg
daa
mov
fs
in
enter
repz
jmp
loopne
add
cwtl
mov
inc
std
movb
cmp
sub
lret
fwait
or
and
das
stos
mov
out
jecxz
arpl
xor
add
adc
andb
rolb
dec
mov
hlt
inc
mov
push
fwait
cmp
in
std
rcl
jns
cmpsb
filds
push
not
out
mov
int3
popf
pop
add
aas
add
dec
inc
push
add
adc
fwait
jae
lods
lcall
push
jle
pop
clc
inc
cmpsb
jecxz
dec
hlt
xchg
sub
loopne
jbe
xchg
cld
sub
fdivrl
xchg
xchg
call
mov
jno
mov
sub
dec
xchg
shlb
lcall
pop
lahf
cmpsl
jne
mov
push
gs
sub
add
scas
add
push
jp
aas
and
lcall
mov
cmpsb
cmp
fcomi
mov
mov
es
fimuls
fcmovnb
cmpsl
pop
dec
test
xlat
dec
mov
xchg
ss
jp
cmp
cld
mov
mov
mov
es
ret
es
xchg
not
repz
xlat
leave
push
rcrl
int
aaa
mov
cwtl
sub
testl
ds
movsl
jmp
adc
lret
dec
loope
js
xchg
jns
adc
push
repz
cmpsl
mov
push
pop
jns
push
pop
cmp
cmp
outsb
ret
push
push
dec
ljmp
mov
fnsave
push
scas
add
and
lret
add
loop
sbb
jmp
sub
and
sbb
out
and
adc
mov
pop
mov
mov
and
fidivrs
and
and
sub
jo
mov
dec
jo
jno
adc
sbb
inc
xchg
inc
push
push
mov
pop
popa
cmp
and
pop
rcrb
inc
fisttpll
in
push
int
rclb
fisubs
mov
addb
xchg
add
cli
cmp
incl
fildll
paddw
push
jnp
call
imul
out
sub
call
dec
cld
and
push
mov
mov
jecxz
fsubs
xor
sahf
dec
or
cmpsl
xor
mov
shlb
subb
push
xchg
stos
sbb
cltd
mov
jns
outsb
bound
sbb
xor
xor
pop
and
or
sub
mov
or
lds
push
push
xor
xlat
push
jae
in
pushf
je
jl
mov
push
cmp
jmp
outsb
dec
lret
mov
in
pop
popf
xor
data16
les
aad
int
xor
push
sar
jo
cmp
insl
pop
sarl
mov
jns
inc
and
or
sbb
xchg
das
xor
lds
pop
mov
cmp
add
jne
sub
or
xchg
mov
stc
dec
mov
test
adc
daa
test
sub
shll
int3
ljmp
loopne,pn
testb
mov
pop
xchg
mov
xchg
mov
shl
sahf
std
add
in
jg
cmpsb
imul
xchg
in
push
ret
lods
sarb
aad
sub
dec
mov
out
aas
cwtl
int3
decb
add
lods
sbb
ret
lods
mov
sub
and
nop
jne
ret
xchg
cmp
lahf
addr16
les
test
js
xchg
jle
insl
dec
adcb
pusha
pusha
cltd
dec
xor
push
lds
or
std
scas
adc
sub
xlat
fxch
jg
fdivrl
cld
mov
inc
mov
mov
dec
std
out
call
or
lahf
fwait
mov
aaa
or
mov
scas
push
adc
sbb
fstpl
lahf
mov
jg
dec
ret
out
mov
push
pop
in
dec
lock
push
add
adc
inc
aam
fwait
imul
out
xchg
mov
data16
or
cmp
test
enter
push
push
mov
call
inc
test
add
lahf
iret
out
fidivrl
mov
push
pop
add
pushf
xor
inc
push
das
mov
div
pop
xor
and
je
sbb
cli
pop
inc
lea
cs
sub
mov
ror
and
dec
mov
dec
mov
sbb
sub
xor
xorl
call
mov
add
pop
movsl
sbb
mov
in
xchg
loope
jb
cmc
push
in
mov
sbb
add
std
jle
cmp
add
push
mov
jg
jnp
fstps
mov
dec
add
fwait
dec
jne
sbb
les
xor
xchg
sahf
das
add
mov
push
js
pop
sub
es
shll
adc
sbb
push
daa
insl
sarl
int3
lcall
leave
pop
lret
fisubrs
cs
shr
jb
push
sub
cwtl
mov
dec
ret
roll
adc
dec
xchg
push
incb
sarl
mov
pop
and
in
pop
repnz
add
je
pop
lcall
dec
sbb
lret
outsb
add
mov
or
and
ljmp
arpl
push
cmp
add
and
ja
outsb
add
int3
jp
lods
mov
outsb
mov
leave
inc
insb
lods
into
jae
in
out
dec
shr
mov
cmp
sbb
aam
jnp
dec
cmp
mov
push
lret
mov
push
sbb
sub
lods
decl
push
inc
dec
and
lret
aad
cmp
add
xchg
rcr
pop
inc
insb
mov
data16
lock
test
xlat
orb
in
jae
mov
hlt
sti
bound
cmp
aas
sub
adc
adc
scas
and
aam
sub
push
mov
inc
inc
arpl
pop
cld
jbe
sbb
cmp
ss
lods
cmp
les
cmpsl
pop
in
iret
nop
dec
jp
scas
cmc
loopne
int3
inc
out
lods
arpl
push
mov
dec
ja
xlat
or
cmp
or
ret
outsb
sub
push
mov
push
xchg
addr16
push
inc
pop
lahf
cmp
mov
dec
mov
sub
out
add
lahf
in
mov
xchg
mov
or
subl
test
dec
push
jnp
lahf
insb
cmpsb
out
mov
shl
adc
repz
or
mov
xor
or
stos
ljmp
sbb
jne
adc
or
bound
xlat
rcrb
mov
push
pop
and
mov
push
in
xchg
mov
insl
imul
jecxz
xchg
jmp
fistpll
jg
sub
sbb
cltd
inc
mov
aad
hlt
mov
dec
stos
xchg
push
mov
sub
mov
fnstsw
xor
xchg
push
push
sbb
aas
mov
shrl
xchg
xchg
hlt
cmp
call
insl
lahf
dec
pop
rep
pop
leave
jb
jno
jnp
sbb
push
mov
add
pop
iret
stos
xchg
and
por
add
push
pusha
mov
ror
and
cmp
hlt
scas
jmp
cwtl
inc
fwait
jne
xor
xor
mov
out
mov
and
cmc
or
hlt
int3
and
imulb
add
arpl
call
inc
mov
aaa
pop
sbb
sarb
xor
dec
inc
dec
mov
out
xchg
loopne
mov
movsb
hlt
dec
out
lcall
xchg
add
mov
fildll
les
clc
mov
push
sbb
insl
jmp
ret
jnp
pop
test
out
or
mov
imul
mov
js
scas
iret
lea
js
movsb
sti
ret
and
test
imul
sub
rol
out
cltd
cmp
sub
jno
adc
and
nop
es
adc
inc
arpl
adc
in
sub
ja
jmp
lea
fistpll
jnp
faddl
jmp
xor
aaa
orb
jl
xor
push
ror
mov
xchg
pmullw
sbb
xchg
sub
sti
data16
rorl
enter
fcmovbe
sub
cmp
cld
jbe
dec
xchg
or
adc
push
adc
jg
pop
iret
daa
iret
adc
bound
out
out
push
in
arpl
sbb
mov
mov
mov
inc
adc
mov
loop
ja
mov
call
fwait
test
fwait
es
sti
cs
or
dec
scas
xor
mov
xchg
aaa
adc
pushf
in
dec
pop
bound
dec
sbb
jae
lea
pop
jo
es
mov
out
jmp
and
xchg
or
ljmp
aas
outsb
iret
push
jb
push
push
sbb
xor
xor
pop
les
push
shll
add
mov
ret
sbb
mov
pushf
dec
jb
xor
pushf
ror
test
aam
jo
mov
cld
pop
loop
sbb
xlat
jp
mov
lcall
fisttpll
push
imul
rorl
iret
pop
sbb
mov
mul
xchg
sbb
aas
cmpsb
arpl
cwtl
jbe
dec
call
xor
outsl
xchg
push
daa
in
fcompl
ja
pop
in
push
dec
gs
mov
jns
clc
daa
jo
dec
mov
jmp
or
sub
pop
aaa
sbb
lcall
into
mov
lods
stos
in
out
mov
fwait
mov
xor
jle
aas
sbb
push
xchg
adcb
mov
jae
std
dec
sbb
addr16
nop
sbb
jno
shlb
xchg
mov
push
fnstsw
bound
mov
jne
fbstp
aas
dec
test
sar
dec
hlt
add
loop
pop
popf
loopne
pop
sbb
sub
fistpll
xchg
add
sahf
mov
mov
lcall
lods
adcb
cmp
iret
mov
ds
icebp
sbb
mov
aad
cltd
sub
push
add
cltd
sbb
and
add
sub
pop
xor
cwtl
push
add
push
aas
push
adc
mov
icebp
pop
inc
cld
and
or
pop
jne
dec
cs
lcall
add
push
int
adc
xchg
and
outsl
cmp
fcoml
xchg
iret
mov
in
gs
adc
dec
hlt
mov
fistpl
cmc
inc
arpl
loope
and
sbb
push
dec
cmp
and
xor
or
stos
inc
xchg
jnp
cmp
cs
lret
mov
imul
inc
pop
lahf
jecxz
jle
imul
enter
stos
adc
shl
dec
scas
mov
jmp
pusha
in
xor
daa
dec
jae
mov
mov
push
adc
int3
pop
cld
pop
jl
jmp
sbb
aad
dec
pop
jge
adc
mov
mov
das
loop
ds
inc
pop
mov
sub
clc
mov
mov
cmp
and
xchg
push
out
out
mov
mov
mov
cmp
pop
iret
ljmp
cs
cmc
xor
aas
ds
jmp
sar
sbb
in
push
pop
subl
scas
cltd
daa
dec
jmp
es
out
cmp
push
inc
push
icebp
cmpl
jae
cmp
loope
sub
xchg
arpl
mov
rcr
adc
xchg
cmpsl
rclb
mov
shrl
sbb
adc
scas
fincstp
jg
sub
and
mov
stos
les
lea
and
in
lret
fisttpll
push
ljmp
imul
insl
xchg
ja
mov
adc
sub
cmp
cmpsb
jmp
mov
pop
mov
xchg
out
sub
sbb
gs
push
int
fwait
mov
lcall
cmp
nop
add
mov
xchg
imul
add
fdivrs
fimuls
dec
mov
xor
aas
rorl
push
rorl
fisubrs
mov
stos
mov
inc
add
nop
cmc
adcb
add
pushf
fists
outsl
dec
dec
mov
adc
inc
jecxz
ret
std
test
movb
xlat
mov
sub
jns
mov
mov
jne
inc
push
cwtl
push
cmp
push
xchg
mov
xorl
push
test
mov
xor
jns
or
mov
aas
dec
les
out
push
push
dec
mov
xor
call
addl
in
repnz
inc
mov
jne
cltd
enter
or
pop
shll
add
inc
icebp
icebp
fnstcw
jge
mov
inc
fists
popa
pop
sbb
mov
pop
fidivrs
int3
mov
or
shll
cld
fidivrl
mov
cmp
test
adc
or
lcall
gs
fimuls
mov
add
insl
sub
jnp
mov
imull
js
dec
mov
cwtl
mov
stc
xchg
mov
xorl
sbb
in
sbb
cmpsl
fadds
push
mov
out
mov
cmpsb
stc
xor
mov
int3
icebp
add
test
cmpsl
and
mov
cltd
ljmp
mov
adc
ds
rcl
dec
pop
clc
cltd
aas
jmp
sub
idiv
fsubs
daa
int3
rcrb
lds
lea
dec
out
mov
or
or
fstpt
adc
inc
out
js
mov
pop
ljmp
fsub
inc
ss
repnz
or
push
xor
dec
int3
cli
and
mov
dec
sbb
out
shlb
cmp
inc
mov
dec
pop
inc
xor
lahf
cmpsb
inc
mov
pop
dec
sbb
cmpsb
and
lahf
mov
xor
imul
pop
fistpl
pop
cmp
mov
dec
scas
sub
ret
into
test
push
mov
arpl
pushf
ljmp
xchg
mov
jge
cmp
cmp
loop
es
sbb
mov
nop
sub
icebp
add
xor
out
mov
lea
pushf
or
xchg
lret
jge
shr
mov
jp
cmp
jnp
aad
jne
divl
insb
adcl
push
xchg
aas
js
in
pusha
mov
xor
push
adc
aam
gs
and
mov
xorb
xorl
cmp
imul
pop
mov
pusha
fnstenv
mov
inc
jle
inc
test
xchg
push
mov
lcall
inc
mov
mov
aam
cmp
test
xor
jmp
in
jo
or
arpl
push
lods
xchg
into
xchg
mov
pop
mulb
fcoms
xor
in
inc
fadds
fcomip
mov
jnp
fisttps
lcall
pop
xchg
lods
sbb
test
sub
cmp
lahf
mov
cmovns
loop
jle
js
xchg
dec
call
xchg
pusha
xchg
sub
lock
jbe
jae
ror
push
in
inc
out
sbb
popa
push
mov
cmp
mov
xor
jae
sbb
mov
jnp
addr16
into
xor
jae
cmp
xchg
jecxz
push
mov
sub
pusha
mov
or
ret
sub
out
mov
mov
xchg
ucomiss
jmp
inc
add
pop
roll
call
fs
pop
shlb
cld
jo
int3
insb
divb
bound
xchg
mov
inc
loop
mov
inc
popf
mov
mov
add
mov
das
outsb
jl
repz
std
js
mov
add
mov
xchg
jno
mov
ret
sbb
mov
jge
or
lret
dec
dec
ret
dec
popf
lcall
jl
sbb
jnp
mov
jb
xchg
or
adc
gs
or
in
xor
mov
roll
imul
ds
aad
in
insb
mov
in
test
jb
jbe
ja
xor
movsb
sub
and
sbb
push
or
xchg
or
imul
dec
push
sub
lods
dec
and
mov
and
and
jle
movsb
jge
mov
add
stos
loope
scas
xchg
dec
hlt
lods
enter
movsl
push
test
pusha
roll
test
cld
fwait
mov
or
mov
or
ret
insl
shl
iret
push
xlat
xchg
xchg
cwtl
xchg
jecxz
ss
rolb
and
call
or
inc
test
mov
dec
test
add
cmc
in
fwait
pop
bound
add
negb
pushf
pop
lds
in
jge
sar
sub
fdivs
arpl
and
mov
into
cmp
jns
test
or
add
mov
xor
push
push
mov
add
push
dec
push
rcr
push
into
aam
jb
into
mov
xchg
insb
jb
imul
movsb
iret
inc
filds
fldl
xor
mov
inc
out
sbb
adc
leave
or
repz
and
or
fcomi
hlt
xor
jns
cmp
pop
in
push
loope
push
mov
mov
add
mov
gs
in
test
ret
ds
fcoml
sbb
xor
std
jl
jecxz
stc
addl
mov
push
dec
test
fidivl
sbb
cmpsb
jp
pextrw
sub
add
repz
add
sahf
or
cmp
inc
pop
inc
xchg
notb
add
aam
out
xor
fidivl
outsb
lret
sub
ja
das
cmp
lret
fcmovnu
dec
cmp
lock
rcr
pop
inc
pop
call
aam
cmp
sbb
xor
add
sub
fcoml
mov
ret
aam
bt
xor
mov
xlat
and
or
jl
push
xor
xor
pop
sbb
aas
lods
cmpsb
sub
xchg
enter
mov
out
jno,pn
cld
inc
and
ljmp
sbb
into
frstor
inc
dec
ret
fadd
insl
xor
pop
push
mov
hlt
movsl
mov
push
add
int
or
cmpsb
or
aam
stc
imul
pop
lock
xchg
add
jle
mov
pop
aad
aad
add
dec
paddw
jno
or
aas
lret
mov
push
inc
and
fmuls
dec
jne
ret
popaw
jae
outsl
push
sbb
pusha
daa
mov
pop
mov
stos
inc
cmp
lods
cmp
js
xchg
cmpsb
repz
cmpsb
adc
out
ret
pop
jbe
inc
fbstp
repnz
sub
loop
sbb
and
fld
mov
inc
cmc
lahf
cwtl
in
fnsave
or
mov
sar
sub
cmpsl
ljmp
testb
lock
cmp
sub
adc
xchg
push
sub
scas
nop
insb
cli
cwtl
ljmp
insb
xchg
mov
int3
jne
push
add
mov
in
sbb
mov
mov
push
dec
jbe
jnp
pop
test
dec
je
sbb
outsl
scas
xor
add
mov
enter
mov
and
mov
fwait
daa
jp
push
jae
jae
mov
fwait
sti
mov
xchg
repnz
dec
sbb
inc
xor
pop
scas
jo
mov
mov
sub
jle
push
pop
arpl
scas
ret
pop
jae
call
adc
int
outsl
aaa
dec
stos
out
mov
aam
push
loop
add
cmc
test
test
pop
lods
push
adc
stc
dec
dec
subl
mov
dec
lds
rorl
sbb
cmpsl
mov
in
cwtl
sbb
dec
xchg
mov
bound
outsl
jp
sub
test
repnz
pop
cmp
hlt
push
pop
mov
js
mov
sub
in
clc
dec
out
in
jae
cmp
add
fisttps
adc
push
push
pop
cld
inc
mov
je
popf
mov
faddl
outsl
out
pusha
mov
adcb
call
int
pop
fwait
and
adc
into
mov
gs
shll
xlat
cli
rcll
sbb
dec
push
or
sub
ret
sub
and
and
mov
jp
enter
into
movsb
fs
dec
sub
mov
sub
leave
jbe
dec
mov
je
loop
lcall
bnd
jge
mov
repz
je
mov
sti
push
pop
mov
lds
inc
and
or
mov
scas
adc
mov
leave
popf
inc
xchg
lods
adc
rorb
fisttps
test
roll
cmp
push
popf
fidivrs
cmpsl
lea
mov
xor
pop
xchg
rcrl
sar
jg
push
lret
aas
mov
xor
add
dec
mov
jmp
repnz
outsl
fistpll
repnz
frstor
clc
fbld
imul
je
gs
mov
das
mov
lock
or
sub
push
mov
int
inc
outsl
enter
sub
sub
mov
xlat
idivl
cmp
jle
bound
jns
add
mov
mov
jmp
stc
jmp
pop
jle
or
fwait
or
cli
cwtl
push
xchg
fs
lods
testb
add
cld
fdivl
and
jns
jge
ljmp
mov
ja
xorl
test
adc
in
or
dec
push
xchg
iret
sub
jnp
std
push
push
or
xor
pop
sub
lret
mov
and
mov
jp
xchg
sbb
xor
add
mov
inc
sbb
xchg
add
repnz
fldl
jae
cmp
add
shr
add
gs
insl
popf
flds
jecxz
adc
in
xlat
pop
das
mov
stos
repnz
jge
out
clc
pop
jo
out
scas
out
iret
test
iret
pusha
popl
mov
mov
das
and
jno
fldl
movsb
and
mov
adc
arpl
nop
mov
iret
xchg
sbb
push
pop
mov
leave
sti
pop
dec
arpl
jp
push
adc
lods
xor
xor
mov
repz
sarl
jp
and
mov
sub
xor
xchg
mov
or
lds
ror
fdivl
pop
or
pusha
das
arpl
xchg
icebp
dec
stc
arpl
inc
out
inc
movzbl
mov
and
pop
jb
jp
pop
and
testl
push
jg
testl
dec
pop
fcmovnbe
outsb
popa
mov
add
fdivrs
movsb
test
jmp
rcll
push
scas
out
into
stc
xchg
dec
es
insl
in
mov
aas
mov
mov
pop
push
ficompl
inc
orb
repz
call
inc
aaa
leave
scas
pop
sti
das
addl
rcl
sub
fmuls
cmp
ret
jae
loope
cmp
adc
mov
call
test
xchg
pop
addl
lods
push
cwtl
inc
cmp
stos
jo
jg
xor
insl
insb
jno
sub
dec
fidivrs
xchg
mov
dec
add
rclb
sarl
xchg
stos
adc
jecxz
scas
xor
xchg
xor
addr16
std
je
jae
addr16
mov
insl
jmp
repz
movsl
sub
mov
jbe
rcrb
jbe
in
sbb
dec
jno
pushf
sub
lret
dec
jge
lods
das
int
push
scas
fsubr
mov
jns
mov
mov
out
out
cwtl
or
test
dec
out
inc
sahf
add
imul
xchg
lret
push
xorl
push
jne
sub
sbb
dec
mov
in
ds
rcrl
mov
lds
movsl
outsl
test
mov
xor
xor
inc
in
mov
nop
push
jbe
inc
jbe
jne
movsl
cld
outsl
or
pop
adc
mov
mov
dec
cwtl
xor
or
push
into
sbb
and
aaa
pop
dec
sub
cmp
fbld
repnz
xor
jmp
xchg
add
mov
sbb
mov
cmc
hlt
inc
ss
pop
pop
mov
xchg
mov
sbb
push
testl
cltd
stos
and
cmpsl
int
xchg
fildl
cwtl
rclb
sbb
in
mov
mov
cmp
movsl
jae
mov
cmp
mov
out
mov
in
bound
cld
icebp
pop
and
lds
dec
lret
push
dec
enter
gs
and
adc
xlat
jno
gs
fsubrl
xor
out
lea
sub
dec
rorb
jbe
cld
jp
push
fwait
and
pop
jae
xchg
bound
test
push
lods
in
lret
daa
loop
cmp
jb
sbb
or
out
shl
jp
repz
jb
clc
movsb
shrl
imulb
gs
shr
jg
sbbb
mov
pop
test
xor
sti
add
jp
and
jno
sbb
stos
out
pop
adc
push
or
mov
orl
sahf
in
gs
xor
sbb
lods
push
pop
xor
and
push
loopne
jns
lret
add
adc
mov
xor
icebp
das
xor
push
sub
push
lahf
sub
call
lcall
xchg
add
xchg
dec
lock
xchg
sub
stos
aaa
decl
incb
xor
insb
lahf
pusha
dec
ja
push
popf
js
es
cltd
pop
pop
xchg
hlt
das
and
repz
jecxz
mov
sti
in
out
outsl
das
adc
xor
or
into
push
cmc
out
sbb
in
or
sbbl
fistpll
aaa
pusha
xor
inc
loopne
xchg
in
and
sub
push
gs
pop
xchg
nop
lds
push
jnp
cli
lea
add
push
pop
idiv
add
sbb
mov
mov
fs
xor
mov
push
pop
js
adc
mov
ja
sbb
fildl
test
fadds
cli
lods
loop
into
push
lahf
lret
call
fwait
into
push
add
pop
or
cmpsb
lea
sbbl
xchg
pop
repnz
adc
cmpsl
pop
pop
add
cmp
das
lcall
push
adc
cmc
sbb
cmpsb
pop
bnd
stc
das
int
frstor
push
adc
sbbb
daa
mov
sbb
outsl
mul
fnstcw
je
jg
mov
pop
ljmp
push
cmp
push
aas
loope
mov
sub
mov
cmc
out
and
push
das
cmpl
xchg
inc
test
xor
int3
lret
js
jnp
sbb
mov
add
mov
mov
jns
clc
inc
sbb
jns
jecxz
add
icebp
mov
xchg
dec
shll
lods
push
shlb
loop
bound
dec
imul
push
pop
nop
xor
xchg
aaa
mov
xor
sbb
scas
inc
fstpl
mov
pop
ret
mov
dec
imul
add
xchg
in
xor
mov
and
pop
icebp
fwait
mov
inc
outsl
ja
mov
jmp
and
pop
and
push
push
ficoml
fdivrs
test
dec
pop
adc
or
gs
mov
std
out
test
mov
cmp
xor
subl
loope
stos
addr16
mov
adc
filds
jecxz
push
mov
adc
cmp
insb
les
fistl
inc
jge
rorl
cli
or
and
mov
add
fdivrs
jae
mov
orl
push
leave
sbb
adc
pop
add
test
sbb
xlat
lods
push
out
lret
incb
add
sub
inc
sbb
lock
rorb
xchg
shl
test
pop
fcompl
jne
push
mov
repnz
dec
jb
or
bound
push
pop
bound
jne
mov
jnp
push
xorb
scas
bound
push
jp
mov
rol
sbb
jnp
dec
or
int
mov
fldcw
mov
sub
imul
in
jb
cmc
inc
pop
jo
fsts
jle
iret
jmp
mov
cmp
dec
xchg
jns
pop
jbe
icebp
xchg
pop
xchg
jnp
or
inc
mov
bound
pusha
mov
call
out
hlt
mov
pop
outsl
jno
imul
cmp
push
push
es
mov
out
adc
popa
shrl
fs
jecxz
iret
pop
sub
and
daa
sarl
mov
add
adc
lods
jle
mov
push
mov
and
test
leave
insb
pop
pop
add
pop
inc
cmpsb
ss
bound
or
cmp
lods
stos
fdiv
jecxz
out
jo
mov
dec
movl
gs
test
dec
fisubl
mov
in
popf
dec
mov
jne
into
mov
rol
or
pusha
loopne
push
subl
xchg
loop
jmp
push
es
pushf
pusha
bound
jbe
xor
xchg
xchg
xchg
mov
mov
pop
fcomp
nop
xchg
pop
sti
jo
cmp
je
push
dec
loop
jne
test
and
pop
fwait
mov
add
lock
mov
insb
sub
mov
dec
mov
jb
mov
call
imul
jmp
mov
jns
sub
xchg
ret
push
insb
mov
dec
adc
jge
inc
push
push
jae
icebp
push
or
int
in
daa
imul
add
aas
add
popf
aaa
out
mov
push
jb
dec
aas
dec
inc
xchg
jnp
je
lods
ret
xor
pushf
inc
shl
push
dec
arpl
xchg
inc
movsl
ds
sbb
sub
lods
repnz
push
mov
aas
dec
int3
jmp
mov
xor
mov
lds
inc
fdivrp
repz
inc
fsubrs
xor
push
sbb
jp
insb
into
jecxz
mov
jle
sub
sbb
test
daa
cmpl
cmp
aad
mov
loopne
into
adc
lret
cs
push
add
ljmp
mov
sbb
shrb
mov
scas
push
repz
add
mov
aaa
in
and
leave
ja
push
ffreep
sbb
pop
out
mov
and
mov
xchg
cmpl
sub
scas
out
sbb
shlb
adc
push
addr16
in
int
inc
or
ljmp
inc
pop
push
inc
std
cwtl
jg
in
pand
lret
or
test
shrl
push
fwait
adc
xor
adc
aas
shlb
aaa
cs
pop
xchg
push
sbb
andb
mov
cmpxchg
sub
mov
sbb
sub
outsl
mov
test
adc
mov
enter
adc
pop
outsb
lods
push
icebp
cmp
cmovnp
into
or
mov
or
cmc
test
mov
loope
rcrl
sub
dec
mov
xchg
rclb
jae
insl
lcall
or
lock
push
mov
lock
dec
or
cwtl
into
shll
and
push
in
push
adc
inc
loop
xchg
sub
and
inc
nop
xchg
xchg
daa
fcomp
inc
repnz
out
lahf
test
adc
je
mov
and
fimuls
fsubrs
adc
mov
mov
popa
gs
and
lods
pop
xchg
iret
push
push
ss
adc
imul
in
faddl
adc
jno
or
add
add
inc
gs
cmpsb
sbb
dec
push
jg
inc
mov
leave
clc
xchg
jle
scas
and
mov
add
pop
and
jp
test
push
cmc
inc
inc
sub
mov
xor
adc
push
xchg
fildll
xchg
jbe
jecxz
or
inc
push
scas
and
jb
insb
or
stc
jns
add
mov
mov
in
inc
mov
fdivrs
jl
das
mov
or
in
in
outsb
push
call
add
mov
add
shl
leave
push
sti
sbb
xchg
adc
je
push
dec
ds
in
or
lock
xor
lret
jmp
inc
lods
pushf
adc
idivb
out
dec
push
pop
jg
repz
fcomip
xchg
lock
pop
ds
xor
es
jp
dec
rep
enter
lods
sub
mov
movsl
imul
fistpll
mov
mov
jne
xchg
xchg
pop
in
mov
or
or
out
mov
pop
mov
test
or
jbe
mov
sub
adc
fsubrp
fdivl
inc
sbb
outsl
lahf
adc
call
jo
or
ja
inc
fwait
mov
andb
jne
xchg
jle
dec
icebp
loope
imul
mov
lret
rorb
xchg
pop
mov
insb
inc
fistpll
xchg
aad
jecxz
in
fmuls
stc
inc
cltd
ss
and
pop
push
xchg
push
pop
mov
mov
jmp
adc
mov
mov
add
xor
arpl
cld
add
out
hlt
xor
popf
movsb
es
xchg
push
dec
sbb
xlat
mov
and
fildll
imul
int
lret
aad
cmp
and
pop
push
and
adc
stos
cmpsl
xchg
hlt
js
rorl
pusha
sti
adc
mov
lcall
mov
xchg
push
cmp
jno
stos
mov
sahf
and
rcrl
inc
jle
outsb
fildll
sbb
adc
mov
aaa
mov
fmuls
sbb
and
dec
sub
cld
or
mov
sbb
jae,pt
jno
mov
popf
into
push
in
imul
jae
out
out
and
jg
mov
je
outsl
mov
movb
jg
ret
pop
push
add
pop
dec
dec
mov
scas
es
xchg
jns
jg
and
pop
xchg
cld
push
dec
in
dec
or
outsb
adc
or
outsb
adc
add
mov
lea
jge
rcrb
inc
dec
inc
add
dec
in
sbb
scas
push
js
aam
pop
cmp
mov
dec
jl
outsl
push
cs
or
loopne
jmp
cli
mov
push
aaa
sbb
mov
pop
push
addr16
pop
mov
xchg
fs
shlb
movsl
sbb
in
adc
in
es
pushf
es
ret
repnz
fldenv
jmp
cltd
jp
jne
and
movsb
int3
loope
sbb
js
and
lods
mov
adc
rcr
lahf
es
add
mov
mov
sub
ret
in
rolb
mov
bound
xchg
scas
xor
mov
adc
lahf
test
in
mov
je
movsl
mov
jnp
pusha
push
movsl
adcl
cmp
fbld
push
push
xchg
scas
sbb
imul
subl
jno
pop
mov
add
int3
xchg
xchg
insb
pop
in
mov
mov
out
push
add
js
div
sbb
ret
clc
enter
jle
imul
adc
or
xchg
addr16
add
out
pop
push
fs
jb
out
mov
sbb
add
call
sub
jecxz
dec
jno
jbe
arpl
inc
pop
cmp
and
mov
clc
fmull
xor
and
test
movsl
sub
push
pop
and
cmp
icebp
sbb
mov
call
cltd
mov
inc
insb
mov
pop
mov
mov
jbe
xchg
in
cmp
sti
push
ret
jg
inc
pop
and
mov
dec
das
iret
cld
mov
ss
or
push
sbb
out
mov
out
mov
cld
das
fcmovne
loopne
dec
xor
mov
mov
rcl
sbb
call
js
push
adc
push
sbb
dec
std
dec
dec
repnz
movsb
enter
or
pop
push
loopne
xor
push
push
and
divl
push
xchg
cld
das
adc
mov
and
scas
jns
jle
repnz
cmp
xchg
fidivrl
mov
in
pop
daa
je
add
cld
dec
mov
out
push
ljmp
cmp
sbb
mov
cmovg
rcrb
nop
xlat
inc
addb
cwtl
imul
mov
dec
enter
jmp
xchg
adc
das
mov
jb
in
cltd
xchg
mov
push
adc
mov
cmp
lahf
aad
add
js
sbb
mov
mov
cli
lret
leave
fidivrl
cwtl
mov
mov
outsb
mov
mov
and
dec
imul
aad
lock
das
repz
xchg
cmc
hlt
sub
rcl
in
or
out
pushf
adc
and
int
out
hlt
imul
add
test
jne
and
clc
mov
or
cmp
cmp
push
dec
xchg
ror
prefetch
jno
ss
cmpsl
bound
mov
mov
add
mov
pop
inc
cltd
aas
mov
adc
jg
shl
std
cmp
fsts
sarb
jg
clc
pop
stos
dec
or
out
stos
repz
sub
push
or
pop
test
mov
dec
shr
fst
sbb
jp
cltd
adc
fiadds
imul
lods
mov
mov
add
ljmp
pusha
sbb
fs
xchg
pop
insl
leave
cmc
sub
or
mov
jnp
adc
rcrl
psrld
mov
xchg
iret
xchg
inc
pop
cmp
test
xor
rorw
and
push
xor
rcr
sub
mov
aam
xor
jmp
push
xor
js
out
mov
mov
add
inc
pop
gs
jle
leave
fistl
sbb
xor
or
arpl
sub
push
xchg
aas
or
bound
push
xchg
les
cli
push
mov
jnp
enter
negb
mov
insl
sbb
lret
or
loopne
std
add
push
jecxz
cmp
mov
push
ret
jne
shrb
insb
nop
test
sub
test
mov
lcall
arpl
loopne
into
imul
cltd
out
movsb
loopne
nop
xor
pushf
out
push
ficoml
sub
pop
cmp
aad
push
mov
inc
test
jbe
test
je
adc
addr16
mov
stc
and
lods
jnp
xchg
adc
mov
stos
sbb
subb
adc
iret
aas
or
imul
xchg
cmp
mov
mov
mov
iret
rcll
stc
mov
fsubl
daa
jns
pop
and
sar
popa
aad
sub
mov
and
mov
ret
cmp
mov
xchg
dec
jnp
loopne
scas
hlt
outsb
scas
mov
jmp
and
mov
xor
aad
and
les
insl
lcall
xchg
icebp
mov
push
cmp
xor
out
bnd
pop
cli
inc
lahf
cmp
and
jl
stos
popf
adc
rorl
sub
sbbl
pop
jno
or
mov
add
dec
jno,pn
jg
das
call
sub
push
pop
movzbl
lahf
je
dec
testl
out
pop
lds
fstps
mov
and
dec
inc
aad
dec
xor
mov
aad
sahf
push
andb
inc
data16
test
dec
das
stc
adc
subb
mov
cltd
insl
cmc
mov
or
sbb
inc
je
dec
inc
rcrb
call
scas
add
and
xor
test
xor
jle
mov
mov
cmc
imul
pusha
pop
shlb
scas
xlat
push
mov
aaa
lret
inc
cmc
rorl
cmp
xor
push
dec
insl
sub
cmpsb
scas
test
mov
pushf
ja
mov
scas
xorb
mov
mov
push
stos
fwait
cmpps
mov
push
pop
sbb
adc
jl
push
pop
jbe
xor
push
and
in
mov
ds
fstl
jb
adc
shlb
fcomps
popa
mov
mov
push
xchg
leave
test
mov
mov
adc
mov
sbb
and
and
pushf
sti
push
dec
in
mov
test
inc
add
gs
sub
add
dec
cmp
cmpsl
sti
push
mov
pop
aas
lods
out
int
xchg
movsl
sti
fldcw
flds
fwait
icebp
sbb
lods
add
push
hlt
fcmovb
sbb
jne
sbb
push
mov
xchg
push
fdivrs
call
scas
lock
dec
imul
outsb
dec
push
movsb
fnstcw
mov
out
les
push
pusha
fucomi
aaa
xlat
mov
and
bound
jbe
addl
sbb
loop
pusha
dec
push
push
pop
lret
add
in
inc
js
std
outsl
cmp
jnp
sahf
int
cmp
aas
jl
sub
in
sbb
sbb
ficoms
or
xchg
enter
mov
out
cmp
mov
pop
fwait
enter
cltd
filds
rolb
mov
xlat
lods
dec
jecxz
adcb
adc
push
hlt
rclb
in
out
popf
ret
loope
mov
scas
test
adc
fstpl
shll
pop
cmpsb
dec
repnz
out
push
sbb
frstor
dec
xchg
mov
add
imul
sub
mov
add
cmp
sub
std
lret
add
push
pop
dec
adc
outsb
mov
scas
xor
pop
adc
xor
call
sbb
push
fcmovb
pop
femms
or
jne
pushf
xor
cmpsb
cmpsb
ret
out
dec
lods
xchg
lds
xchg
fsubrp
push
movsb
adc
loopne
hlt
inc
mov
push
cmp
sbb
mov
inc
outsl
dec
lret
test
mov
lods
leave
jecxz
add
addr16
loopne
ret
add
adc
imul
loop
pop
xor
rclb
mov
pop
in
sub
push
add
inc
lahf
test
in
cld
sub
sub
jp
push
jbe
mov
insl
cli
xor
test
dec
je
jb
jae
and
repnz
mov
mov
sub
mov
aaa
push
xchg
aas
and
lea
xlat
xor
adcl
dec
js
int3
sbb
or
push
loop
pop
dec
xrelease
push
jno
xor
sub
dec
outsb
xchg
outsb
jp
dec
repz
jbe
dec
cmp
jns
pshufw
push
leave
mov
ljmp
and
loope
fisttpl
sub
cwtl
xor
mov
cpuid
lea
es
mov
xchg
nop
mov
stos
mov
std
xchg
sahf
adc
loope,pn
xlat
mov
mov
pop
sbb
lods
or
je
test
pop
movsl
adc
insb
int
lea
shrl
repz
sbb
jbe
or
movaps
jb
push
js
into
mov
ret
add
arpl
fldz
insl
cmp
popa
idivb
xchg
stos
in
mull
or
lea
xchg
movb
scas
xchg
ljmp
dec
mov
mov
sbb
mov
fsub
daa
and
fcom
aas
aas
dec
xor
jle
lock
fdivrl
push
dec
xchg
aaa
popf
cmp
out
pop
mov
mov
push
dec
cs
sbb
mov
dec
stos
mov
jb
cmc
inc
lock
out
fstl
shrl
push
sub
or
gs
mov
insb
jg
xchg
xchg
xchg
out
jge
push
cmp
shr
fmul
adc
mov
jnp
inc
sub
jle
mov
xchg
dec
fcomip
xchg
dec
stc
jns
dec
ret
sbbb
jne
mov
jbe
sub
inc
roll
mov
ret
xchg
rorb
cmpsl
or
push
incb
jge
adc
inc
xor
push
decl
pop
loope
iret
pop
cwtl
mov
shl
int
push
das
mov
rcl
cwtl
sahf
pop
dec
leave
hlt
sub
test
cwtl
movsb
or
and
imul
cltd
pop
stc
mov
daa
cmp
inc
xchg
fdivl
pop
js
inc
add
inc
adc
jno
jne
sbb
inc
cmp
lods
mov
jns
jmp
pop
cmp
push
push
push
mov
popa
lret
subb
xchg
inc
xchg
das
cmp
push
and
pop
stos
andb
lret
test
hlt
jo
lock
jmp
shr
ljmp
push
jbe
and
loopne
icebp
mov
mov
fimuls
repz
pop
xchg
lret
mov
lahf
in
inc
push
jb
lcall
adc
fs
fcompl
inc
pop
pop
pop
jg
stos
push
adc
jne
mov
inc
in
movsb
call
int
insl
mov
filds
or
popa
mov
lods
hlt
jno
sub
pop
or
stos
cmc
js
dec
aaa
fcoms
aas
xorl
cmc
scas
jge
and
dec
rcll
and
adc
pop
pop
jle
mov
mov
and
or
sub
cwtl
jae
lea
xor
iret
int
xor
fistpl
hlt
or
fildll
popa
dec
mov
adc
out
pminsw
cmc
ret
xor
test
mov
repnz
ret
inc
mulb
mov
xchg
stc
ret
push
and
gs
lea
in
std
sub
ret
sbb
mov
insb
leave
ds
andl
sbb
adc
dec
pop
fadds
push
leave
inc
loope
inc
enter
js
adc
popf
mov
adc
mov
jge
mov
dec
mov
pop
cmp
add
push
fs
pop
ret
ljmp
xchg
sbb
sbb
push
inc
in
xchg
je
mov
mov
iret
mov
pop
jp
notl
sbb
sub
inc
or
je
movsl
jns
lock
outsb
sub
mov
popf
aad
or
jmp
fisubs
xchg
scas
bound
loopne
pop
xchg
stc
jle
lea
dec
cmpsb
pushf
mov
testb
add
iret
insb
or
rcl
mov
sbb
std
xlat
outsl
and
mov
cwtl
jl
call
icebp
ffreep
outsb
stos
stos
mov
in
and
call
xchg
cmp
daa
or
xchg
movsl
repz
imul
clc
and
dec
aaa
sti
lea
daa
jb
lea
out
push
mov
out
jge
insb
icebp
and
push
jae
jae
adc
popf
pop
and
or
ja
into
fnstenv
test
test
in
cmpsb
pop
push
pop
push
pop
cli
jle
mov
pop
out
jo
jmp
pop
scas
cwtl
sbb
push
shrb
mov
outsl
fcomps
jae
or
and
outsl
xor
mov
out
xor
cmp
jecxz
lret
xor
orl
fiadds
push
push
push
test
faddl
out
iret
dec
inc
test
popf
test
push
test
imul
cmp
inc
pop
jno
jp
or
dec
pop
xchg
test
clc
int
cmp
loope
xor
cmp
cltd
or
ljmp
pop
aaa
add
subb
push
mov
pop
dec
in
cltd
jle
js
push
dec
andb
jecxz
dec
aaa
sbb
xchg
dec
pop
call
scas
inc
add
dec
pop
dec
scas
push
ss
cld
adc
mov
fisttpll
inc
dec
ljmp
xor
mov
scas
divl
repz
sbb
loope
out
push
lods
ret
push
pop
enter
xlat
pusha
push
rcrl
iret
jmp
cmp
jnp
fcoms
mov
ret
cmp
lods
lods
in
sbb
jp
cltd
cmp
outsb
in
mov
je
insb
fimull
cwtl
jb
nop
aas
and
ljmp
int
clc
test
adc
test
cmc
pop
stos
jbe
sub
inc
addr16
bound
and
imul
push
push
push
push
mov
mov
xor
adc
lcall
and
out
data16
xor
push
push
movsl
mov
mov
fwait
outsl
pushf
ror
mov
xor
push
fdivr
imull
cmpl
or
jo
cmp
xchg
push
lcall
test
add
dec
jbe
andb
push
andl
mov
mov
lock
cmp
je
jns
xlat
cmpsl
inc
je
jns
mov
std
andl
cmp
int
pop
loop
sti
mov
pop
sub
sahf
arpl
lds
sahf
cmp
decl
out
mov
arpl
in
pop
inc
sbb
nop
jb
lret
lahf
orb
mov
mov
ljmp
popa
fwait
outsl
in
pop
inc
xor
or
mov
cmp
and
cli
mov
push
out
pop
fnstcw
stc
sbb
mov
push
adc
imul
xchg
push
cli
imul
les
and
sbbb
imulb
jl
mov
or
add
fnstenv
push
fsubl
xchg
imul
pop
adc
in
adc
cmpsb
sub
push
int
insb
bound
into
inc
or
test
pop
xor
repnz
xor
sti
negb
shll
push
imul
scas
xchg
pop
les
sbb
rcrb
bound
mov
push
push
sbb
mov
mov
cmp
sbb
fdivrs
pop
pop
inc
sahf
cmc
xchg
push
sbb
iret
lcall
cmc
insb
cmc
outsb
jmp
and
imul
push
push
mov
int3
push
dec
call
cmp
in
movsb
adc
mov
push
ja
orb
xchg
fdivrs
arpl
scas
jb
add
loope
movsl
or
and
stos
mov
mov
sbb
push
arpl
fiaddl
pop
xchg
xor
in
sub
dec
into
dec
flds
jle
cmp
xchg
xchg
mov
outsb
xor
movsl
call
inc
in
cs
clc
rcrl
add
pop
dec
out
mov
dec
popa
popa
mov
movsb
push
call
pop
testl
sbb
icebp
and
sub
sbb
inc
pop
sub
fsubr
cmc
mov
gs
lods
xor
in
pop
jae
pop
mov
clc
pop
xor
xor
mov
lods
xchg
aaa
push
add
lock
mov
push
lea
push
add
push
lock
mov
pop
jp
sub
sbb
loop
cltd
rcll
dec
scas
push
xor
lods
mov
or
xor
lods
sub
cmc
out
loop
mov
jo
out
xchg
jae
lret
arpl
xor
loopne
add
mov
clc
test
and
fwait
push
push
aas
and
scas
fdivr
cmpsl
lea
cwtl
inc
mov
jae
lret
in
pop
pushf
fwait
push
cmpsl
adc
jl
stos
inc
mov
push
hlt
add
push
aam
hlt
and
mov
cli
int
cmpsl
lock
sbb
and
cwtl
insb
gs
mov
sbb
jnp
loopne
arpl
jo
daa
aad
dec
pop
sub
pop
mov
fldenv
repz
iret
inc
js
mov
dec
retw
cmpb
push
mov
loopne
pop
aam
test
scas
inc
jp
imul
into
jl
mov
and
jmp
iret
add
aam
ljmp
xchg
int
in
ror
cmp
aaa
ljmp
stos
dec
imul
adc
cltd
jecxz
fucom
xlat
aad
cs
xchg
lock
jb
sub
dec
stc
pop
test
lahf
enter
sub
mov
add
mov
and
int
outsb
out
xor
and
leave
jnp
and
sub
pop
scas
mov
cs
sub
popf
xor
scas
push
stos
cmpb
fildll
test
aam
mov
nop
fisubrs
add
jno
shlb
je
inc
ret
mov
jecxz
xor
xchg
nop
xchg
fcmovnb
jl
xor
mov
out
push
jmp
xor
or
adc
mov
sub
mov
jmp
inc
imul
and
sub
xchg
add
inc
iret
pop
adc
imul
lcall
and
fwait
xor
sbb
push
into
mov
pusha
clc
pushf
push
pop
cmp
aas
ret
enter
sbb
jp
ficoms
pop
out
mov
pop
jbe
fwait
and
sub
adc
pop
xor
mov
movsl
sti
inc
mov
movl
mov
movsb
pop
mov
cmp
mov
jnp
icebp
ljmp
jae
xchg
ret
lret
xlat
ja
push
cmpsl
or
jno
lret
fs
out
mov
mov
pop
flds
mov
fidivrl
pusha
stos
outsb
jnp
insb
dec
ljmp
pop
mov
dec
push
sbb
outsb
and
push
lds
test
rolb
cwtl
in
aas
jb
movsl
mul
into
cmp
add
inc
xor
int
xor
rcrb
aaa
popa
inc
testl
push
stos
shll
dec
cmp
inc
call
int
cmpsb
sbb
jge
fs
insl
and
outsl
or
mov
in
sbb
jo
push
ljmp
daa
mov
cmp
js
and
je
pusha
add
andl
movzbl
sub
sahf
pushf
shlb
xor
fmuls
adc
pop
daa
out
fsubs
insl
subb
out
mov
and
nop
inc
adc
popf
test
jl
test
xchg
push
jb
jno
movsb
adcl
jae
in
aad
les
enter
cli
dec
aas
pop
mov
test
sbb
xchg
lret
inc
iret
xchg
add
movsl
cmp
aas
push
lret
dec
mov
int
rol
cld
adc
mov
shrb
fnstsw
shrl
or
mov
outsl
pop
push
dec
xchg
inc
ss
mov
cmp
pop
mov
mov
xchg
fdivl
adc
mov
int3
shrl
dec
push
int3
orl
sti
ljmp
lock
cltd
mov
jge
cmpsl
out
sub
popf
xor
clc
test
and
mov
adc
jae
mov
imul
or
or
pop
or
sti
and
mov
jo
jns
dec
jg
lcall
pop
out
or
and
xchg
lcall
jb
pop
dec
rcrl
arpl
aam
mov
sbb
sarb
inc
rol
or
dec
addr16
push
les
pop
inc
sub
call
in
test
mov
js
iret
dec
sub
lods
mov
outsl
push
inc
fs
add
ds
test
jp
fdivr
test
mov
adc
jbe
out
mov
mov
pop
mov
adc
addr16
add
jmp
mov
aaa
mov
mov
mov
xor
add
mov
cmc
ljmp
inc
lahf
testl
sbb
ljmp
movsb
test
test
jno
sbbb
dec
sub
xor
mov
mov
adc
mov
pop
or
das
cmc
stos
mov
xlat
or
popf
lcall
gs
cli
test
and
inc
pop
insb
and
mov
test
addl
lcall
mov
inc
jg
pop
mov
pop
dec
sub
jp
inc
ret
inc
out
test
jns
inc
or
lahf
dec
sahf
pop
outsb
mov
sahf
push
inc
insb
cwtl
or
pop
hlt
push
cmp
cmp
movsb
jle
mov
ret
dec
lods
inc
popa
hlt
jmp
or
push
cs
pop
mov
jmp
mov
jne
iret
ret
xchg
or
adc
cmp
gs
xor
imul
sub
pushf
in
adcl
lret
addr16
adc
and
loopne
loope
outsb
dec
fwait
repnz
add
inc
push
xchg
adc
dec
testb
mov
lcall
mov
sbb
aas
pop
dec
jecxz
je
clc
sahf
mov
sub
sbb
mov
je
addr16
sti
add
fdivrp
popf
mov
mov
or
sbb
sub
and
xor
pop
or
add
mov
ds
mov
jns
inc
push
jecxz
insl
inc
or
outsb
imul
test
js
jl
jbe
xchg
mov
test
or
movb
aaa
xlat
jecxz
cmp
repnz
shll
or
movsb
pop
cmp
fucom
in
mov
pushf
lahf
test
lods
cmpsl
idivl
test
pcmpgtb
sbb
repz
sub
xchg
scas
sub
mov
mov
sub
movsl
add
xor
hlt
xor
lea
std
loopne
and
ljmp
stc
xlat
into
dec
push
ss
jp
fcomip
sbb
cmp
ljmp
repz
mov
jecxz
in
and
lahf
rorl
jp
jns
xlat
adc
dec
les
ss
jle
inc
stos
sub
or
mov
push
out
jbe
xchg
mov
mov
push
lea
les
add
sbb
push
sub
out
int
pop
pop
sub
inc
in
and
dec
and
stos
push
lods
jecxz
incl
cmp
dec
dec
stos
jno
adc
and
fnsave
mov
mov
inc
cld
xorb
sub
pushf
fsubrp
outsb
mov
rorl
sarb
xor
dec
test
pop
jne
lea
xchg
xchg
mov
jecxz
scas
pushf
sub
inc
stc
dec
sbb
inc
out
add
dec
cltd
sbb
mov
sub
inc
sti
jecxz
dec
sub
cli
dec
notl
pop
mov
push
cmpsl
cmc
das
cltd
ret
out
ljmp
jge
pop
xchg
repnz
aas
in
es
push
int3
scas
jmp
sub
sbb
pop
jecxz
jl
add
test
das
jecxz
dec
pop
mov
jle
sub
push
outsl
aad
mov
test
cmpsb
mov
loop
mov
daa
add
out
dec
lcall
cmp
adc
sbb
je
call
arpl
adc
sti
insl
shrb
dec
and
add
ja
pusha
jbe
xchg
test
and
iret
das
aaa
fldl
repnz
orl
popa
rcrl
sti
inc
mov
divb
rcrl
sahf
sarb
js
lock
out
icebp
push
fdiv
ret
jno
movsb
pshufw
sbb
xchg
xchg
ret
in
add
inc
xchg
push
jns
xchg
mov
into
sub
or
outsl
sbb
insl
add
cli
hlt
cwtl
dec
shlb
sub
imul
in
out
repnz
mov
jns
mov
out
push
std
mov
iret
jecxz
mov
push
ss
enter
xchg
es
add
inc
dec
in
mov
das
mov
sub
jg
leave
lea
mov
cmp
ja
inc
fdivs
roll
sub
adc
adc
pop
push
enter
jo
ss
dec
xchg
int
adc
in
xchg
jmp
and
push
mov
ljmp
out
xor
sbb
fcomi
sub
rorb
pop
out
adc
std
lcall
and
mov
and
fsubrs
push
rcll
xor
jae
lret
pop
xor
bound
es
xchg
jnp
cld
fnsave
pop
xchg
dec
lea
sub
popf
mov
xor
xor
frstor
push
lods
daa
outsl
pop
in
cmc
cmc
loop
gs
les
imul
pop
fcomps
add
push
adc
cmp
adc
adc
add
cltd
pop
out
or
xchg
xor
jns
mov
sbb
fdivrl
mul
or
or
fdivrp
jecxz
cmpsl
sbb
flds
clc
mov
pusha
shrl
or
cwtl
xchg
jl
ficompl
sahf
aaa
lcall
stc
out
in
sub
iret
repz
movsl
add
jno
ds
cmpsl
sbb
lcall
ja
cli
xchg
int3
lahf
mov
push
jge
jmp
inc
dec
dec
xchg
xchg
sbb
sbb
icebp
push
cmp
sbb
sub
in
pop
or
repz
jne
xchg
dec
and
and
mov
or
ljmp
orl
lods
sbb
outsl
xchg
fwait
mov
xor
nop
lret
or
jle
adc
insb
data16
push
repz
mov
jmp
inc
shl
push
adc
in
iret
mov
daa
data16
jb
out
ljmp
pop
xchg
leave
pop
addr16
in
mov
stos
xor
ja
in
xorl
scas
loope
xchg
adc
iret
cmovge
adc
and
mov
mov
xchg
cltd
imul
ja
iret
fmuls
xchg
daa
into
test
sarb
sub
ds
sbb
shrb
mov
shll
inc
pushf
and
dec
rolb
rcl
in
mov
movsb
outsl
mov
popa
mov
xor
into
int
xchg
call
mov
mov
mov
mov
enter
sub
adc
and
in
repnz
adc
xchg
nopl
pop
pop
repnz
or
rcrb
dec
push
cmp
xchg
fiadds
dec
pop
xor
jb
xor
div
shll
enter
lods
rcll
lods
fcompl
mov
mov
push
jb
jl
in
fisubrs
neg
xchg
sbb
add
jmp
push
ret
std
icebp
mov
shl
fidivs
jne
int
cmp
subb
xchg
lret
pop
pop
push
lds
push
pop
cmpsb
push
pop
dec
dec
mov
sbb
mov
inc
ljmp
inc
cmp
jmp
inc
popa
lea
inc
push
xchg
repz
sbb
out
dec
sub
or
loope
dec
iret
imul
jno
incl
push
jbe
jl
push
rolb
or
fs
mov
mov
orl
stos
mov
or
lret
lret
and
adcb
repz
and
jo
and
dec
cmpsb
outsb
and
jo
je
mov
sbbb
sub
jmp
rcr
add
jle
in
push
push
cmpsl
sub
mov
out
mov
or
sbbl
cmp
scas
mov
mov
inc
xchg
push
sahf
shll
lds
adc
mov
js
fwait
jmp
adc
or
loope
push
add
clc
or
xlat
pop
and
mov
das
mov
cmp
xor
es
je
xchg
mov
popa
out
cmp
repnz
push
mov
js
dec
xchg
pop
loop
sbbb
andl
call
pop
ljmp
jns
add
inc
dec
mov
dec
jnp
pop
sbb
push
mov
into
jg
dec
sbb
stos
ret
movsb
push
lahf
sub
cmp
aaa
ljmp
cmp
push
mov
sti
mov
ljmp
gs
add
ret
jge
dec
ljmp
or
push
adc
sbb
pushf
dec
pop
pop
xchg
sbb
test
mov
loop
inc
fsubr
xchg
test
pop
or
push
mov
dec
rcl
pop
mov
out
ss
ja
push
push
or
xchg
sub
push
pop
roll
adc
push
cltd
xchg
fdivs
pop
mov
dec
jnp
xor
dec
add
ret
mov
cmp
shrl
scas
out
insb
fcompl
sti
lods
sub
shrl
mov
lods
sbb
mov
mov
out
inc
les
test
out
push
dec
mov
add
in
rcrl
mov
xor
fstpl
and
xor
pushf
hlt
ss
pop
adc
xlat
fistpl
lret
mov
pop
inc
inc
sub
orb
mov
pop
loopne
xchg
fidivs
cltd
aas
sti
cmp
aaa
push
ds
add
push
add
stos
js
movsl
dec
adc
push
jns
adc
jns
inc
mov
sub
aaa
push
inc
lcall
leave
mov
mov
and
mov
imul
aam
int
stc
outsl
ja
rsm
cmp
dec
js
movsb
stc
jecxz
ss
enter
xchg
lahf
rorl
jmp
jmp
test
mov
inc
shrl
loop
clc
xor
pushf
je
je
pop
xor
lock
sub
sbb
or
cmpsl
cmp
test
les
dec
add
mov
enter
jbe
lods
daa
cmc
mov
lret
dec
shll
arpl
adc
addl
ljmp
imul
iret
ss
mov
sbb
orb
or
mov
nop
test
dec
loopne
inc
adc
sub
roll
loop
dec
nop
or
je
icebp
iret
xor
sahf
and
jns
pop
lock
stc
push
out
push
xchg
adc
jge
mov
loop
xchg
cmp
movsb
xchg
jg
push
lret
jo
mov
lahf
pcmpeqw
loop
jge
xchg
mov
cmpsl
enter
nop
jae
int3
mov
jmp
add
or
inc
test
sub
dec
cmp
dec
mov
les
cmpsb
push
insb
gs
push
lds
stc
lret
sub
push
les
flds
cwtl
hlt
into
cmp
lds
push
gs
cwtl
pop
mov
mov
sub
xchg
adc
test
push
pop
mov
mov
sub
cltd
or
mov
mov
pop
ja
dec
imul
cmp
or
inc
mov
and
cmp
pop
push
push
loop
sub
mov
cmp
mov
cli
adc
inc
stos
and
jns
lods
sub
sub
cmp
push
sbb
ds
inc
aam
lods
outsl
sub
sub
adc
mov
fiadds
fwait
cwtl
mov
inc
jb
mov
test
je
cli
add
cmp
or
adc
add
or
test
jecxz
sti
xor
jg
aaa
add
adc
sti
scas
add
mov
push
push
sub
push
push
cmp
xlat
lret
lahf
sbb
into
mov
mov
icebp
inc
jmp
subl
out
sub
xor
push
loop
dec
pop
inc
pop
sbb
dec
data16
mov
mov
aam
inc
dec
sub
insb
lret
rclb
or
fwait
cmp
cmp
jns
out
lods
jnp
jo
cmp
addr16
shrb
jmp
mov
push
jg
cmp
inc
jle
mov
addb
cmp
push
pop
cmp
sbb
mov
cs
push
xor
es
shl
lret
push
es
sbb
lret
rcll
xor
rcrb
sbb
rcrl
mov
jne
lahf
pop
test
dec
jmp
fidivs
lahf
bound
cmp
dec
adc
dec
sbb
mov
push
adc
and
jge
sub
adc
push
xchg
pop
push
sbb
mov
or
jne
sarb
dec
pop
xchg
or
sahf
and
sub
gs
dec
jno
in
notb
loop
add
mov
and
dec
inc
inc
ljmp
loope
pop
bsr
stos
and
xor
cmc
push
sbb
jle
enter
aas
int3
pusha
scas
imul
mov
pop
and
push
lock
shl
mov
mov
mov
sbb
mov
pop
mov
mov
mov
fistpll
push
dec
push
mov
xor
xchg
and
cmpsb
stos
sub
or
add
xchg
xchg
inc
out
sbb
xor
jmp
dec
popa
mov
clc
clc
mov
inc
das
outsl
hlt
or
lods
and
stos
ds
shl
pop
insb
je
movsb
jecxz
out
add
or
mov
dec
gs
adc
add
std
fs
inc
scas
adc
pop
mov
pushl
pop
cmp
sbb
fs
dec
popf
and
xchg
pushf
sub
jge
cmp
cmc
loopne
aam
add
mov
imul
addb
push
xor
insb
adc
cmc
jae
fbld
rcll
fldt
roll
cmp
mov
orb
cmp
mov
call
mov
fwait
sub
dec
fs
jbe
cltd
jnp
adc
mov
loopne
pop
mov
idivb
ret
xor
movl
std
stos
fsubrl
in
mov
mov
nop
push
and
inc
adc
pop
out
mov
movsl
jae
in
cmc
inc
and
add
movsb
add
pop
mov
xor
cmp
subb
enter
dec
mov
cs
rcpps
sub
inc
jecxz
push
mov
in
rorb
inc
aad
inc
xchg
mov
mov
cmpsb
popf
popf
mov
mov
rorl
arpl
test
scas
add
or
or
pop
test
divb
aam
push
push
cs
push
push
inc
insl
lods
negl
mov
popf
ljmp
or
or
pop
jge
xchg
mov
into
movb
or
into
mov
push
pop
bound
sub
addb
add
sub
pop
push
push
jnp
or
rol
dec
test
ljmp
outsb
add
rorl
add
pushf
pop
jmp
lret
ljmp
cmc
mov
dec
icebp
or
jecxz
xchg
push
xor
mov
or
test
in
shlb
and
decl
fisubrl
js
jae
xor
mov
mov
test
fstl
cli
int3
cmp
mov
pop
shll
popf
sar
fwait
cmp
or
jns
dec
aam
stc
popa
scas
cmp
dec
adc
test
or
sbb
test
sub
or
or
xchg
push
in
insb
xchg
pop
mov
xchg
xchg
push
sti
jmp
lret
push
jne
fdivrs
sbb
mov
pop
sub
inc
cwtl
or
movl
insb
xchg
dec
xor
pop
adc
movb
jl
xchg
lret
and
stos
es
movsl
lods
repz
incl
mov
sbb
jb
bound
add
je
in
iret
xchg
inc
fidivs
dec
cmpsb
pop
xor
popa
lock
orb
aas
push
or
jb
hlt
repnz
stos
dec
xor
stos
mov
je
push
dec
mov
mov
je
cwtl
mov
ficomps
call
sti
and
out
xchg
dec
arpl
shl
pop
or
adc
clc
dec
imul
lret
jge
andb
inc
lock
add
sub
pushf
pop
or
into
jp
aas
test
test
mov
xchg
push
push
push
dec
ffreep
fdivrs
cltd
sub
xor
pop
fstpt
add
scas
insb
nop
jmp
sahf
faddl
repz
inc
lahf
and
xchg
push
jno
cmp
orb
push
jmp
hlt
pop
leave
pop
movsl
stos
or
adc
jns
add
outsb
sbb
and
and
cmpb
shlb
out
sbb
push
dec
xor
xor
push
int3
mov
filds
aad
js
outsb
mov
repz
ret
aad
test
das
mov
clc
imul
fiaddl
xchg
movlps
ss
or
roll
stos
jg
mov
and
sub
pop
cmc
out
sub
into
or
lea
jmp
cmp
sub
scas
mov
mov
mov
mov
jno
fs
pop
pop
push
push
mov
addr16
push
mov
dec
or
xchg
push
or
out
ficoml
sahf
pop
adc
out
movsl
insl
xorb
xchg
insl
xor
pop
dec
test
insl
ss
jb
out
jecxz
mov
dec
movsl
sub
int3
jl
and
scas
mov
shll
movsl
lcall
das
jp
out
test
mov
mov
orl
jg
insb
orl
jg
repz
jb
js
sti
jg
push
cmp
movb
or
sbb
inc
fistl
push
test
stc
adc
xor
inc
sbb
cmp
movsb
xchg
fwait
jo
into
and
in
ljmp
inc
clc
push
fs
iret
mov
jnp
mov
data16
mov
repnz
push
add
mov
data16
inc
mov
dec
and
xchg
mov
sbb
jg
push
add
pop
cmp
insb
dec
pop
pushf
in
outsl
jae
cmc
lahf
call
mov
stos
and
or
repnz
stos
inc
sahf
and
cmp
std
out
xchg
outsl
mov
jbe
lahf
cmp
push
lcall
xchg
sub
data16
hlt
mov
test
in
sub
xchg
inc
and
test
loope
stc
adc
das
das
mov
sub
cmp
sub
les
jo
js
and
les
lods
outsl
pop
xchg
xchg
repz
bswap
sub
fmuls
pushf
sahf
dec
xchg
movsl
leave
leave
mov
int
lods
pop
enter
fwait
sbb
lock
out
mov
adc
std
stos
mov
pusha
rcrb
sti
add
add
aas
inc
test
sbb
fldenv
mov
inc
out
jno,pn
cmpsl
cmp
fwait
inc
sbb
stos
arpl
push
pushf
inc
xchg
mov
popf
cmp
inc
fidivrs
sahf
popf
adc
xor
xchg
adcb
push
popa
mov
inc
mov
or
je
push
xchg
xchg
arpl
adc
addr16
pop
mov
inc
and
lea
andb
push
jne
mov
js
outsb
jns
dec
addr16
in
popa
shll
sub
xchg
jmp
sub
cmp
lahf
dec
gs
fisubrl
loop
mov
movsl
xchg
in
mov
push
sbb
add
loope
or
aas
scas
jno
inc
dec
jae
jbe
mov
inc
lret
stos
lock
stc
pop
dec
aaa
jmp
pusha
sti
mov
jp
rcll
sub
jne
aad
loop
imul
dec
test
xchg
sbb
flds
es
fnstenv
pop
bound
aam
jge
inc
rcrb
mov
add
mov
test
lcall
popf
jne
dec
cmp
lret
cs
and
xor
cmp
dec
or
sbb
test
or
sub
pusha
mov
sbb
push
xchg
xchg
push
fucomi
icebp
and
loopne
lea
pop
push
fdivrp
icebp
adc
adc
mov
ja
mov
xor
jecxz
and
cmp
mov
jns,pn
push
lea
orl
int
pusha
insb
imul
mov
pop
or
test
dec
cld
mov
loopne
scas
push
and
pop
inc
lods
dec
or
pop
imul
loopne
xor
jns
scas
add
jo
aaa
mov
cld
mov
xchg
mov
mov
out
xor
data16
out
cli
leave
and
mov
cmp
hlt
in
jge
std
lods
lods
out
cmpsb
loope
sbb
pop
mov
dec
sti
pop
xchg
scas
push
ja
cmpsb
xor
scas
out
adcb
bound
sub
shl
mov
stos
out
insb
divb
pop
fists
test
sub
ficompl
ss
popf
xor
sub
jb
dec
inc
mov
repnz
into
push
cs
cli
mov
insl
push
hlt
repz
xchg
xchg
ja
cmpsb
test
sbb
push
mov
sbb
addr16
cmp
enter
mov
loop
lds
cmpsl
adc
mov
fistpll
mov
mov
mov
sbb
stc
shrb
mov
lock
pop
loopne
lds
sub
adc
into
scas
std
xchg
in
js
xchg
mov
inc
inc
push
test
jo
test
lds
mov
ja
imul
pusha
mov
hlt
pop
push
inc
ret
jge
mov
fwait
jle
pop
sahf
cld
inc
push
fcmovbe
adc
mov
xor
push
inc
dec
lock
scas
ljmp
movsl
sub
jne
add
into
cltd
mov
and
lret
imul
loopne
inc
lods
and
push
mov
repnz
jecxz
mov
ja
popa
mov
rcr
ret
xor
lret
fcmovnu
icebp
sbb
xor
cmpsl
fstl
dec
dec
mov
xlat
lahf
inc
sbb
sbb
pop
addr16
addr16
mov
mov
aad
and
inc
cwtl
pop
sub
adc
fbstp
cli
sbb
inc
add
sbb
pop
shrl
loope
or
dec
mov
sub
movsb
in
orl
adc
in
aam
es
or
pop
pop
int
lods
mov
cmp
cmp
lods
lcall
xchg
shll
xchg
xor
or
ret
xor
cmp
mov
loop
stos
in
hlt
inc
mov
sbb
pop
inc
inc
add
mov
jmp
pop
daa
gs
sar
insl
mov
sub
cmp
pop
cwtl
push
sub
je
int3
xchg
push
xlat
nop
pop
jb
fstpl
mov
pop
mov
int
out
shll
aaa
lods
notb
dec
je
insb
sbb
sub
xor
sarb
jl
outsl
shlb
shll
xchg
sarb
dec
arpl
stos
inc
out
imul
xor
and
int3
loopne
and
sbb
inc
es
sbb
dec
mov
stc
xchg
hlt
nop
xor
sub
out
jecxz
jle
add
cld
xchg
outsb
push
mov
cli
add
cld
cs
pusha
pusha
ja
fstps
push
daa
sbb
mov
xchg
ds
inc
jp
xor
lcall
inc
ds
imul
xchg
mov
push
into
mov
cmp
sbb
gs
insl
xchg
adc
pop
add
hlt
inc
or
repnz
in
dec
push
dec
test
shl
lahf
in
mov
pop
pop
xor
fsts
movsl
pushf
cmp
ja
pop
xor
in
xchg
jecxz
mov
imul
and
rcll
stos
in
and
xor
jnp
movsb
mov
xchg
jmp
xor
sbb
fstpt
insl
out
cmc
pop
or
icebp
cmc
sub
mov
lret
dec
adc
stos
insl
push
dec
js
dec
inc
xor
mov
adc
push
in
cmp
rolb
mov
sbb
mov
pusha
or
fisubrl
inc
adc
hlt
and
or
sbb
xlat
dec
enter
dec
addr16
push
add
lret
xchg
pushaw
xchg
cld
icebp
mov
push
arpl
movsb
loop
dec
nop
jge
pop
cmp
mov
add
or
enter
lea
ret
out
mov
leave
nop
test
test
xor
in
xor
sbb
cmp
insl
jge
fisubs
notb
pop
adc
or
jmp
inc
ss
xor
or
out
in
mov
cltd
loopne
repz
cld
pushf
addr16
pop
cmpsb
nop
push
outsl
mov
sbb
mov
loop
or
jg
push
jmp
int
fdivrp
pop
dec
pop
in
out
ss
xor
sahf
fimull
xor
and
andb
repnz
xlat
dec
negl
push
outsb
pop
cmp
and
mov
cmpsb
ret
or
cmpsl
insl
adc
push
pop
idivl
popf
or
nop
mov
push
dec
adc
dec
sbb
sub
cmp
sub
cmp
mov
es
mov
mov
lds
sub
jmp
cmp
enter
mov
push
loop,pn
aaa
xchg
or
cmp
jmp
insl
fsubl
lcall
mov
mov
mov
mov
out
pop
sub
or
inc
es
lret
outsl
or
idivl
out
inc
popf
dec
push
lea
jge
or
nop
mov
push
xchg
or
xchg
pop
fiadds
int
push
mov
inc
mov
mov
and
imul
pop
inc
mov
lock
in
push
iret
ret
cwtl
cmp
pushf
mov
fisubrl
out
jo
in
cmp
sbb
mov
loopne
js
ljmp
clc
adc
xchg
cmp
push
dec
stc
adc
dec
nop
fsubr
mov
mov
mov
pop
xor
mov
fsqrt
subb
add
arpl
sbb
mov
cmp
adc
popa
sbb
jns
iret
movsb
pop
dec
mov
dec
add
in
push
xor
and
jne
mov
ljmp
push
fstpl
push
cmp
jge
lahf
ret
jp
ret
push
int3
nop
sub
mov
cmp
sub
xchg
setb
fisubrs
mov
sub
jecxz
lret
mov
fdivrl
lea
push
mov
mov
daa
xor
sbb
mov
mov
push
nop
hlt
push
add
inc
push
iret
pushf
ja
mov
lods
lcall
mov
dec
add
shl
adc
mov
xchg
js
lods
cmpsb
push
imul
and
pop
sti
daa
mov
mov
outsb
xlat
stos
cmpb
fwait
imul
cmp
inc
arpl
cld
int3
push
adc
leave
and
push
and
jne
pushl
jmp
push
mov
cmp
jnp
repnz
pushfw
repz
xchg
cmp
test
cmp
cld
mov
sbb
lcall
faddp
or
outsb
xchg
cmp
movsl
cs
rcll
icebp
add
dec
xor
orl
mov
cmp
dec
or
xchg
loope
dec
mov
enter
push
xchg
adc
int
cs
mov
aad
aaa
pop
insb
in
dec
icebp
int
rdmsr
push
and
push
bound
dec
xchg
sub
jl
push
insl
sub
xchg
jmp
mov
lods
mov
ljmp
out
add
and
hlt
fnstenv
pop
es
pop
xor
test
inc
movsl
or
subb
cmp
adc
inc
xorl
cmc
adc
fsubrl
sub
mov
cmp
lret
sub
pop
imull
mov
pop
icebp
cltd
adc
sbb
sub
frstor
jle
and
dec
bound
lock
push
in
fcomp
sub
mov
push
or
scas
shrb
mov
push
lcall
shlb
xor
and
mov
hlt
xlat
or
or
pusha
hlt
mov
aas
out
je
push
cltd
stos
adc
push
aaa
ss
or
xchg
jmp
rorb
fldpi
lret
and
push
jle
sub
pop
fcomps
shlb
shlb
jl
insl
js
imul
jge
scas
pop
inc
subl
jno
sbb
mov
pop
int
ficoml
test
repnz
cmpsl
pop
lods
jo
add
pop
sub
lret
push
jne
xchg
int3
inc
aam
lea
or
lods
ljmp
mov
dec
or
mov
cmp
iret
jae
xchg
xor
cmp
test
hlt
fwait
enter
lea
sarl
mov
je
mov
sub
xchg
mov
shrl
daa
leave
mov
dec
inc
outsb
imul
mov
cltd
shlb
jl
jae
xchg
aad
popa
mov
das
push
mov
or
dec
and
scas
orb
xchg
movsl
insl
test
lock
cmp
rcr
jp
add
fdivrl
push
sub
out
jp
mov
xchg
aad
lret
outsl
or
cmpsb
in
cwtl
push
or
popf
pop
fst
arpl
add
shl
sbb
pop
jne
sub
add
cmp
or
outsb
lahf
dec
mov
dec
sti
mov
fsubl
enter
mov
and
loope
mov
adc
push
clc
jge
dec
js
mov
jnp
sbb
out
add
gs
mov
push
fstpl
xor
inc
lcall
mov
outsl
pop
jbe
mov
out
stc
jb
in
xchg
adc
mov
icebp
adc
push
jns
xor
sbb
mov
pushf
imul
and
repnz
jno
sbb
adc
fisubrs
jbe
xor
xchg
xchg
dec
lods
int3
sub
or
inc
xlat
jne
and
or
push
ss
std
fnstenv
scas
pop
hlt
imul
mov
insb
sub
or
scas
jp
sub
xchg
fs
inc
xor
insl
in
add
xor
xchg
inc
jl
gs
adc
sub
es
and
ja
jo
daa
jg
inc
icebp
xchg
fxch
test
jno
or
ds
imul
iret
push
or
mov
sbb
sbb
inc
pop
data16
out
pop
xchg
lods
lret
pop
add
cmp
mov
mov
and
pop
mov
dec
test
lods
fwait
sub
jge
fsubr
addr16
add
stos
popa
ffree
mulb
gs
and
xchg
scas
mov
pop
out
pop
pushf
adc
and
dec
pop
mov
push
pop
or
inc
or
lods
mov
add
cmp
inc
add
xchg
jno
xor
imul
out
lea
jnp
call
dec
ds
out
int
and
in
jae
ljmp
mov
sub
jmp
cld
push
fsub
add
xchg
fucomip
push
loopne
lods
dec
into
outsb
or
sbb
cmp
lds
cmp
sub
ds
lret
bound
cs
pop
data16
push
out
pop
jae
pop
mov
shr
xlat
shll
scas
and
xchg
adc
lahf
fwait
add
dec
inc
stc
popf
push
loop
dec
popf
nop
mov
arpl
pop
fisttpll
lea
stos
xchg
das
xchg
sbb
inc
push
ljmp
fadds
rcrl
lds
mov
in
or
ja
scas
add
iret
je
inc
mov
pop
push
add
in
push
cmp
ja
loopne
lock
cli
xor
cmp
lret
mov
outsl
mov
add
sub
dec
pop
cltd
xor
bound
fsubr
mov
sub
lea
fwait
mov
iret
jns
ret
push
in
flds
adc
inc
sahf
mov
xor
add
rorb
inc
fisubrs
sbb
out
js
sub
in
lea
jl
adc
push
stos
outsl
scas
or
out
push
movsl
fptan
xchg
lods
es
testb
cmp
cmpsb
inc
les
popl
ljmp
mov
imul
fldenv
lret
mov
movsl
pop
dec
shlb
addr16
loop
ja
xor
jnp
frstor
lds
test
int
inc
push
adc
repnz
enter
call
lret
jo
cmp
jecxz
pop
in
in
dec
adc
es
mov
jae
lock
fwait
mov
sbb
dec
xchg
out
pop
and
mov
pushf
ljmp
add
push
aad
insl
dec
or
icebp
mov
pop
gs
fcmovnbe
enter
iret
arpl
popa
xchg
shlb
out
lret
test
pop
mov
repnz
loope
mov
test
div
inc
test
lret
push
loopne
enter
lea
xor
mov
popf
scas
std
int3
xchg
inc
xchg
sbb
sub
adc
jle
mov
out
add
pop
jno
mov
rcll
pop
or
loope
or
in
fidivs
xchg
push
stos
cmc
ds
iret
cmp
push
shr
sub
addr16
fstpl
sbb
inc
jg
mov
add
mov
nop
icebp
sub
xchg
mov
mov
in
adc
cmpsb
call
pusha
jle
mov
sbbb
inc
push
sti
cmpsl
pop
rclb
xchg
das
inc
mov
sarb
add
daa
test
jle
call
or
or
push
pop
xchg
pop
call
bound
pusha
sbb
push
mov
push
imul
leave
cmp
mov
cmp
mov
xorb
xchg
push
push
lea
jg
je
insl
outsb
cs
andl
adc
adc
test
dec
loopne
test
arpl
mov
cld
scas
scas
mov
fs
sub
ficompl
jge
movsl
enter
mov
jnp
push
sub
lods
sub
pop
adc
mov
mov
push
jno
fwait
call
gs
packuswb
push
or
loope
or
icebp
cli
aad
jg
leave
sub
and
inc
adc
or
nop
and
cmp
dec
enter
clc
sbb
jmp
scas
adc
subl
xor
sbb
enter
or
push
jmp
aad
dec
dec
push
incb
pop
adc
mov
rolb
xchg
xchg
cmpsl
adc
jmp
dec
xchg
daa
iret
and
xlat
pop
orl
sub
lds
adc
inc
mov
adc
test
enter
loopne
xor
sti
xchg
mov
into
add
mov
or
jl
mov
cmp
insl
jp
aas
inc
cmp
pop
movsb
mov
movsl
jp
sbbl
jo
lods
mov
addr16
scas
xor
pushf
xor
sbb
push
mov
nop
repz
push
in
and
gs
and
mull
sbb
or
rorl
rcll
sti
in
imul
fiaddl
sbb
pop
add
xor
fwait
adc
xchg
or
nop
cmp
movsl
ja
pop
mov
icebp
push
loope
lods
jg
je
lods
hlt
out
sbbl
and
jae
mov
jl
lods
in
cmpsb
mov
sub
jb
pop
lock
test
enter
rclb
mov
sbb
and
mov
xchg
repz
int3
and
inc
lods
push
stos
push
jg
dec
int3
jns
pop
cltd
dec
in
js
pop
pop
inc
jbe
pop
loopne
and
mov
xor
icebp
test
xchg
jnp
shll
movsb
lahf
push
push
sub
fs
mov
sub
fstpl
mov
add
mov
sti
jle
addr16
dec
rcr
cltd
jnp
movsl
leave
push
cwtl
adc
xchg
in
enter
cwtl
jo
cmp
sbb
pop
dec
dec
jae
sysexit
jge
fwait
mov
or
jae
xor
cmp
aaa
es
test
mov
in
pushf
xchg
scas
in
test
dec
stos
iret
nop
icebp
mov
insb
xlat
int3
cmp
xchg
outsb
xor
sysenter
mov
xchg
push
out
push
das
jge
or
sub
xlat
mov
sbb
inc
andb
jmp
nop
invd
fs
and
data16
xchg
or
mov
icebp
push
sbb
mov
aaa
loope
mov
popf
pop
push
and
std
ret
mov
jb
into
cmp
cs
fs
je
aaa
sbb
mov
push
inc
in
ss
lea
push
pop
aad
out
cmp
dec
fwait
inc
std
pop
bound
add
mov
rclb
sub
ds
dec
out
in
fstl
mov
stos
dec
sahf
mov
pop
push
imul
xchg
dec
ret
lret
fnstcw
xor
dec
jp
cmpsb
xor
mov
inc
cmp
dec
xchg
dec
xchg
shl
enter
gs
fs
gs
and
xchg
nop
movsl
pop
icebp
les
adc
sub
and
das
xchg
jecxz
test
pop
pop
cmp
inc
mov
pop
popf
mov
or
cs
das
std
or
loope
loopne
mov
xchg
fidivl
sbb
adc
and
jg
dec
sbb
sbb
cmp
stos
imulb
inc
lahf
jno
pop
xor
aas
dec
mov
in
or
add
cmpsb
aam
and
jmp
xorl
dec
xchg
mov
pusha
push
imul
xor
movsl
mov
outsb
scas
xchg
jl
lds
dec
add
inc
mov
pop
sbb
nop
add
loope
xchg
cmp
adc
jge
dec
aaa
pop
cltd
xor
jge
rclb
inc
jp
adc
sti
outsb
fisttpl
sti
dec
add
je
pop
sahf
jns
stos
cld
dec
pop
dec
rolb
mov
add
push
outsb
mov
insb
cmc
rcrb
repnz
dec
dec
dec
xchg
pop
xchg
or
sub
sub
gs
fnstcw
mov
adc
push
push
in
xchg
jnp
add
lock
xchg
mov
bound
std
test
inc
jno
fists
je
add
repz
inc
mov
jnp
lcall
mov
icebp
pop
das
jbe
stc
and
push
push
fcmovb
cltd
xorb
jge
in
lret
xchg
and
jae
jge
jl
push
ja
dec
int3
and
xchg
adc
xchg
sub
rorb
sbb
stos
les
nop
ja
data16
into
pop
loopne
inc
mov
gs
mov
mov
das
daa
test
pop
jge,pn
cmc
pop
add
or
cwtl
nop
sub
and
mov
shlb
lods
pop
lock
movsl
nop
sub
jmp
stos
int
cwtl
fcompl
test
push
aas
push
je
std
pop
adc
adc
fwait
jo
jecxz
dec
ljmp
mov
jle
inc
notl
push
jge
xor
mov
sar
xor
jne
pushf
shrb
push
inc
sbb
insl
jge
add
jo
test
jns
imul
lds
stos
iret
jmp
mov
inc
inc
dec
dec
or
imul
pop
xor
push
inc
mov
or
lret
fs
nop
in
mov
mov
fwait
and
daa
inc
out
push
add
stc
or
stos
popf
pop
int
push
lahf
and
adc
cmp
jne
push
sbb
add
xchg
jmp
setl
jne
dec
push
push
push
dec
in
hlt
lret
mov
xchg
and
pop
mov
das
mov
test
nop
cltd
inc
out
js
scas
sub
orl
cmp
movb
xchg
test
ds
repnz
pushf
lds
testl
jge
jp
jae
sub
popa
dec
add
jecxz
loopne
sub
inc
mov
mov
inc
cmpl
pushf
in
lahf
adc
xchg
or
lahf
je
cmp
or
inc
test
xchg
adc
and
adc
pop
mov
cmp
adc
enter
cltd
out
dec
cmc
jno
mov
mov
enter
lods
adc
jl
dec
lods
add
hlt
stos
loop
ds
pop
or
ret
movsl
xor
bound
ja
ss
inc
or
idivl
lods
add
imul
leave
push
mov
fstpl
subl
fsubrl
and
fsubl
mov
mov
movsb
lcall
mov
mov
jmp
ss
ret
movsb
in
and
lcall
cmc
dec
add
scas
xor
dec
pop
cmpsl
loope
push
dec
pop
insb
push
mov
insl
mov
lcall
mov
test
mov
xchg
arpl
mov
and
xchg
mov
bound
fcompl
xchg
cmp
ficoms
cmp
sbb
sbb
js
push
mov
push
or
js
mov
testb
and
stos
mov
mov
inc
jno
imul
std
sub
pop
add
adc
dec
xchg
aaa
pusha
cwtl
push
popf
add
sub
jns
mov
sbb
xor
dec
cmp
adc
xor
jle
std
xor
mov
push
push
adc
cld
push
jl
mov
jb
rol
addr16
or
outsl
dec
add
jl
repz
orl
sbbl
lahf
cltd
jge
sub
repnz
es
mov
push
ficompl
movsb
jno
dec
add
pop
es
pop
call
repnz
mov
sbb
xchg
stc
not
jae
imul
adc
mov
jmp
movsl
rolb
or
rclb
sahf
and
sub
adc
dec
hlt
shlb
sbb
jno
fldt
dec
fists
aad
cmpsb
sti
sbb
movsl
leave
fwait
pop
dec
mov
insb
leave
sahf
movsb
pushf
stc
arpl
sub
les
cmpsl
jno
int3
fistl
lcall
push
cwtl
push
mov
inc
ljmp
and
cltd
sbb
inc
sahf
and
sbb
mov
insl
nop
cs
cmc
xor
push
sub
cs
orl
push
and
sbb
dec
lret
dec
pop
adc
aas
in
into
xor
or
repnz
popf
mov
sub
lret
les
call
test
popa
dec
and
ljmp
test
movsb
cmp
push
cmp
faddl
xor
cmp
or
push
push
fildl
xchg
mov
mov
mov
sub
dec
adc
jb
arpl
xor
add
cmc
mov
pop
testl
leave
test
ret
mov
push
mov
xchg
mov
lret
loope
inc
mov
scas
xor
pop
rcrl
ds
jmp
xor
mov
fstps
je
and
sub
shlb
mov
inc
adc
adc
xor
pop
mov
das
icebp
push
cmpsl
stos
fmull
xchg
push
push
test
shrl
sarl
adc
int3
add
jmp
add
add
lcall
xchg
mov
jg
lret
jno
add
scas
outsb
mov
inc
fidivrs
cmp
shlb
pop
lcall
mov
mov
in
jge
or
inc
jae
inc
pop
daa
mov
test
inc
inc
mov
mov
lret
pop
lock
jg
aaa
dec
je
push
push
jbe
xchg
enter
lcall
dec
ljmp
test
add
lock
push
lahf
mov
daa
or
mov
push
les
fadd
mov
and
pop
imul
and
jno
inc
mov
or
repz
lock
adc
shrb
pop
les
cmpb
dec
cmp
insb
imul
rol
mov
inc
lcall
enter
xchg
mov
fstpt
mov
in
add
push
and
dec
push
in
xlat
rcr
aad
stc
popa
or
mov
jle
xchg
pusha
jno
jle
notl
add
es
mov
insb
jge
dec
push
inc
call
mov
loop
adc
gs
mov
test
dec
into
push
stos
in
mov
out
pusha
fdivrs
jecxz
jl
lods
sub
ss
shrl
adc
cs
push
xchg
out
jb
or
dec
mov
mov
pushf
ret
xchg
sub
jp
inc
jbe
inc
mov
sarl
or
adc
or
daa
jbe
loope
fdivl
loope
lods
leave
mov
xchg
aad
and
push
cmpsl
lea
int
push
fwait
xor
mov
push
les
and
sbb
push
cmp
sahf
or
inc
pop
adc
jns
push
push
xor
jns
lahf
mov
orb
push
add
pop
lret
sbb
mov
mov
lods
cmp
into
inc
into
insb
fwait
cmp
cmp
ret
mov
cmp
jl
int
icebp
dec
cmove
arpl
push
inc
loope,pt
mov
push
mov
xchg
ficoms
inc
fneni(8087
inc
dec
daa
inc
xchg
mov
jae
adc
pop
movsb
fldenv
data16
mov
stos
imul
pop
mov
insl
rorb
sbb
cmp
dec
testl
enter
sbb
pop
in
fidivrl
stos
xor
clc
dec
cltd
repz
cmp
cltd
subb
fldl
and
sbb
lock
mov
mov
fildl
xchg
test
lret
and
inc
xor
push
repnz
scas
jmp
nop
std
clc
xchg
jg
andb
push
stos
mov
and
sub
rcrl
rcrb
and
push
scas
xchg
movsl
pop
or
cmpsb
sbb
jp
fisubl
push
fistps
cld
jno
repnz
jmp
pop
lret
lahf
aad
pop
shlb
cmp
call
dec
inc
mov
push
adc
inc
mov
rcrb
mov
mov
mov
push
leave
cwtl
pop
sub
ficoms
jne
xchg
mov
sub
jno
jno
push
or
out
cmp
sarl
lret
sbb
ret
cmp
jb
pop
popf
sarb
cwtl
test
and
sbb
orl
push
pop
add
add
dec
lcall
fcmovne
loop
hlt
imul
daa
int
dec
cmp
cmp
mov
sub
adc
cwtl
ja
pusha
push
or
subb
imul
xchg
push
faddl
mov
mov
inc
repz
ds
push
xlat
or
or
repnz
sbb
lret
jno
push
dec
and
iret
test
push
inc
xchg
adc
push
sbb
mov
cs
push
icebp
sub
push
cmp
aam
clc
andl
cltd
imul
and
movsb
xchg
adc
std
fnstsw
leave
movsb
es
je
push
ljmp
das
jge
sti
sub
sub
lahf
test
mov
sub
push
lahf
popa
inc
lahf
loop
in
sub
in
inc
xor
stos
xor
pop
pop
add
jmp
cmp
je
push
loopne
xchg
loop
xchg
pop
push
mov
sub
clc
jnp
sarl
fdivr
xor
cmpl
inc
aas
pop
mov
iret
out
xor
xor
xlat
jl
push
fldcw
mov
cmpsl
xchg
or
xchg
lock
lahf
push
divl
adc
icebp
xchg
sbb
jg
out
push
sbb
xor
xor
scas
shl
jl
jns
mov
jle
cmp
dec
insb
xchg
loope
and
sub
mov
xchg
loopne
add
lea
jl
fucomi
call
inc
std
adc
in
ret
js
lds
jbe
dec
push
mov
mov
scas
adc
xor
xchg
es
lcall
pop
push
xchg
aas
in
fisttpl
divb
dec
ss
jle
and
push
xchg
xor
mov
sub
stos
std
mov
in
subl
mov
movsb
inc
fdiv
adc
ficomps
pop
mov
std
and
test
mov
adc
aam
cwtl
sbbb
or
mov
addb
fucomi
repz
sbb
stc
push
jbe
aad
xor
cmp
insl
aas
mov
arpl
loop
jge
dec
mov
mov
push
adc
test
mov
imul
pop
loopne
mov
push
shr
xchg
push
std
mov
inc
pop
adc
or
sub
icebp
or
fidivl
adc
dec
and
scas
leave
ja
out
cmpsl
ror
in
xchg
mov
adc
sbb
add
jmp
arpl
mov
xchg
sbb
enter
sbb
or
push
sbb
or
mov
pop
ret
jl
aad
mov
or
and
loopne
clc
mov
cmpb
lea
push
scas
mov
movsb
stos
add
xchg
push
pop
lcall
jbe
add
jb
mov
jecxz
nop
fldcw
movsb
stc
int
hlt
les
jns
sub
adc
out
mov
xchg
in
cld
sbb
xlat
jb
ret
test
movsl
jge
sbb
cmp
sub
stos
xchg
sub
sti
out
cltd
repnz
or
mov
ret
dec
gs
sub
mov
out
pusha
flds
jns
inc
sbb
xchg
into
xchg
push
and
sbb
xchg
nop
daa
dec
mov
adc
insl
lahf
sti
push
adc
xchg
mov
lcall
sti
aad
push
mov
jmp
flds
sbb
push
sti
or
shrd
xchg
out
aaa
lea
jb
dec
out
mov
out
mov
mov
xchg
push
xor
jecxz
out
xlat
push
sti
sbb
pop
lahf
add
cmc
out
xchg
hlt
loope
mov
pop
in
pand
addb
mov
dec
jle
rcr
and
sub
jbe
movsb
scas
mov
mov
lods
dec
popa
fists
arpl
add
dec
stos
pop
lea
fiaddl
lods
shll
mov
pop
subb
push
aaa
mov
add
mov
inc
xlat
ret
pop
test
adc
xor
and
add
sbb
into
sbb
pop
lds
je
xchg
mov
sar
int
xor
in
cmpsl
aaa
push
int3
mov
push
cltd
and
mov
dec
lods
lret
push
mov
add
or
mov
lret
sarb
imul
in
repz
aaa
andl
dec
inc
and
aad
fwait
cmp
mov
test
testb
cs
ss
mov
push
jo
int
dec
sub
ja
and
adc
rorl
dec
rorl
decl
inc
js
repnz
mov
adc
mov
in
xor
xor
fistps
mov
mov
or
cltd
pop
call
xor
pop
pusha
pop
out
push
and
dec
mov
imul
test
jle
sbb
jle
imulb
fdivrs
in
jl
mov
ret
xchg
cmp
je
xlat
xchg
popa
xchg
mov
fstpl
out
jae
xchg
sbb
int3
dec
in
data16
lea
jns
cmc
jmp
dec
lods
add
xchg
pop
push
inc
sti
xor
jns
pop
fisttpll
cmp
enter
mov
xchg
test
add
mov
mov
insl
and
jmp
pop
sub
mov
dec
jmp
push
sub
int3
mov
xor
shrb
inc
mov
inc
les
test
inc
testb
mov
push
popa
cmp
dec
sub
inc
mov
dec
mov
ficompl
stc
jno
repz
fldenv
out
lret
xchg
jg
out
stc
and
push
mov
icebp
das
lea
andb
pop
mov
in
jp
mov
repnz
loopne
push
into
xchg
mov
ret
dec
lds
push
into
pcmpgtd
push
push
add
mov
test
cmp
mov
pop
movsb
inc
sbb
lods
std
mov
bound
xchg
xchg
jp
js
fnsave
cmp
mov
push
mov
add
stc
pop
xchg
jecxz
mov
mov
psrlq
dec
adc
mov
cs
or
lock
mov
scas
jnp
ds
jmp
stos
or
xchg
pop
ss
and
pop
jp
or
fldl
loope
fnstsw
sub
adcb
lds
je
loop
inc
scas
hlt
xor
mov
in
mov
xchg
fisttpl
test
mov
add
xlat
repz
mov
xchg
inc
inc
fwait
push
dec
sti
je
lar
xor
or
es
fdivr
lret
arpl
mov
faddl
icebp
cmp
cltd
sbbb
int
pop
test
je
mov
aad
add
lods
mov
jae
xchg
pop
into
pushf
out
jmp
enter
jecxz
flds
fstps
mov
pop
popf
ret
repz
sub
test
ja
jb
in
adc
sub
repz
sbb
jle
add
push
fdivp
shll
fstps
ja
cltd
sub
cs
xor
out
fidivrs
insl
hlt
aam
rorl
or
mov
sub
ljmp
jecxz
adc
mov
into
push
push
jmp
jne
aam
xchg
xor
fcmove
scas
add
nop
call
inc
icebp
lods
jle
shlb
xorb
pop
int
adc
sbb
jbe
das
pop
sub
jmp
cli
iret
loope
sub
xchg
pop
push
imul
int
mov
lds
outsb
cli
mov
dec
push
fwait
loopne
mov
sub
and
test
scas
mull
sbbb
repz
nop
cmp
inc
test
popa
fwait
loop
jae
andb
out
hlt
icebp
xor
ss
sbb
mov
mov
in
xor
sbb
inc
fs
je
inc
dec
sbb
pop
shr
or
xor
pop
and
pop
pusha
mov
jl
or
imul
addr16
imul
in
stc
and
push
jp
addr16
jne
pop
lcall
pop
lock
fwait
and
xchg
xorl
imul
into
xor
das
repnz
repz
pusha
or
dec
push
cwtl
dec
enter
adc
movsb
jns
mov
imul
jo
push
jmp
test
sbb
jg
call
gs
stos
shrl
mov
rcrl
iret
adc
mov
test
leave
jp
int3
mov
int3
or
cld
into
xchg
scas
je
lret
loop
js
sub
scas
rcll
add
mov
repnz
jle
neg
mov
xor
cs
jnp
push
ja
pop
push
scas
lds
xchg
sbb
pusha
movsl
sbb
insl
sbb
pop
mov
test
mov
ds
or
and
jle
jmp
imulb
into
dec
int
and
cwtl
pop
xor
idivb
dec
sbb
fnstcw
ror
icebp
aam
movsb
roll
out
sbb
dec
scas
loopne
dec
lret
cmc
fs
sbb
js
jmp
aas
mov
imul
push
ret
pop
dec
fsts
sbb
rolb
push
xchg
lods
jb
adc
sar
imul
mov
jne
aad
nop
xor
in
push
aaa
cld
dec
mov
fsubs
sbb
out
push
iret
xchg
sub
sti
sbb
test
adc
xchg
push
and
movsb
sahf
stc
mov
xchg
mov
jo
mov
cmp
shrl
push
js
lret
xor
aaa
sar
mov
fstpt
bnd
js
jge
adc
out
add
bound
pop
sub
mov
mov
das
inc
out
sub
pop
sbb
iret
nop
int
jp
push
or
fs
xor
movsb
lahf
inc
pushw
add
mov
push
cmpl
xor
push
xchg
push
mov
call
jp
jbe
int3
call
decl
out
outsl
cmp
push
pop
jl
fbld
xor
test
fiadds
rcr
test
cmp
clc
icebp
adc
mov
mov
adc
pop
insl
out
ss
movb
dec
lods
sub
das
sbb
ja
dec
mov
fdivs
aad
lods
das
sub
add
dec
push
out
jmp
xor
push
jle
xchg
fbld
mov
or
push
faddl
dec
inc
jmp
xchg
sbb
out
mov
into
stos
push
add
dec
jmp
inc
mov
cld
sar
les
xchg
sub
int
cwtl
sbb
jno
cli
and
adc
fcmovu
and
sub
into
stc
testb
addr16
jae
sub
fnstsw
bound
fnstenv
adc
pop
outsb
repnz
mov
pop
lock
lret
mov
mov
in
insl
sahf
iret
inc
outsl
jnp
outsb
test
sbb
xchg
jg
imul
mul
mov
push
add
mov
cmp
push
shr
sbb
mov
and
call
or
cmp
pop
mov
push
subb
stos
mov
leave
pop
cmp
mov
pop
nop
pop
pop
daa
dec
ficoml
cmp
pop
cmpsl
filds
daa
inc
mov
outsb
shll
lcall
push
cmp
adc
out
lret
lret
inc
cmpsl
loopne
rcrl
mov
add
in
xchg
lea
adc
movsb
push
push
cmpsb
ror
hlt
lods
lods
adc
lret
orl
xor
jge
cs
xchg
add
fsubs
or
aaa
xchg
sbb
test
icebp
lret
cwtl
mov
in
pmaxsw
adc
aaa
aam
insl
mov
or
idiv
lahf
test
or
inc
push
int
cs
js
sarb
and
in
mov
dec
lret
ret
popa
and
mov
push
mov
sub
out
test
push
cmpsb
test
push
pop
neg
sbb
sbb
pusha
cli
call
inc
fmull
xor
test
ret
push
out
jl
hlt
outsb
ljmp
adc
cmp
loop
or
imul
test
and
ds
dec
aaa
iret
test
lret
jl
test
ljmp
jl
pop
test
setge
shrb
sub
mov
cld
cmpsb
loopne
inc
nop
sarb
ljmp
dec
aad
jg
mov
push
mov
dec
sbb
jg
push
cmpb
int3
bound
popl
sqrtps
hlt
lods
jmp
stos
and
in
adc
sbb
dec
dec
xor
lret
loopne
cs
je
inc
jl
and
push
cli
sub
ss
aad
out
and
push
sbb
mov
sbb
inc
outsl
pop
or
inc
mov
add
xchg
movb
fcoml
pop
fistps
cmp
test
lcall
mov
jne
lcall
add
inc
lods
mov
in
mov
inc
mov
pusha
jmp
sti
fmuls
sti
xor
pop
sub
and
imul
push
add
je
test
leave
mov
inc
imul
pop
in
ljmp
cld
push
xchg
pop
mov
sub
cmp
sbb
dec
call
fs
inc
lcall
ja
xchg
fsub
out
jge
outsb
jmp
decl
rclb
push
pop
adc
or
push
insl
imul
addr16
jle
lahf
aaa
inc
mov
out
call
movsl
mov
inc
aad
inc
inc
movsb
adc
addr16
jecxz
sbb
push
mov
mov
mov
push
ja
sbb
sbb
scas
je
stos
pop
outsl
mull
or
es
mov
dec
or
movsl
xor
or
mov
xchg
in
mov
hlt
adc
xchg
jae
push
ja
orb
repz
pop
mov
sub
dec
scas
test
inc
pop
shl
icebp
adc
call
das
mov
lock
jmp
sbb
jmp
outsl
inc
test
inc
dec
pushf
and
loop
and
insl
and
jl
xchg
mov
ret
mov
mov
sub
or
jnp
xlat
ror
jp
into
flds
pushf
je
sub
add
pushf
push
cmp
pop
daa
in
mov
lock
mov
pop
jle
dec
push
cmp
or
jle
fmul
mov
adc
mov
gs
inc
in
cmpsl
subb
xor
imul
pop
pop
icebp
push
jns
in
mov
sbb
sub
jns
dec
and
enter
imul
push
stos
adc
fildll
push
or
dec
out
jno
xchg
xchg
leave
push
out
xchg
data16
mov
imul
cmpsb
inc
inc
movsb
or
sbb
dec
push
movsl
fisttpll
xor
repnz
test
add
ds
movsb
mov
cmp
aam
mov
mov
inc
ret
xor
hlt
jg
testb
inc
cltd
outsb
fdiv
into
mov
mov
sahf
adc
das
add
xchg
xchg
imul
mov
add
loop
loope
aaa
pop
rclb
popl
in
dec
xchg
add
and
xor
cs
aaa
and
xor
les
and
jp
bound
and
dec
les
sbb
mov
dec
and
sbb
ss
jmp
lea
ret
std
fnsave
popf
int3
mov
movsb
call
test
mov
pop
push
fs
cmpsb
pop
rcrb
lds
mov
sbb
stos
mov
paddsb
sbb
mov
cld
mov
insl
minps
xor
lahf
test
cmp
dec
cmp
call
or
aad
out
mov
xor
bound
mov
or
fsubl
aaa
inc
pop
das
sub
pop
cmp
ja
test
hlt
lea
into
adc
sub
mov
shll
mov
popa
cs
adc
xchg
loopne
sub
andb
fs
cld
jp
adc
mov
inc
mov
cs
push
adc
int3
jmp
test
pop
jne
jno
sub
pop
test
insl
sbb
imul
out
sbb
push
jecxz
push
mov
jne
dec
pop
jnp
neg
mov
jo
into
xchg
inc
gs
jo
lret
sarl
jle
sbb
ds
inc
imul
jl
fmull
mov
adc
mov
mov
jb
xchg
adc
nop
cmp
pop
or
and
nop
dec
cmp
mov
pop
cmc
outsb
enter
push
mov
mov
mov
je
push
outsl
add
xchg
xor
jp
int3
ds
out
enter
sahf
hlt
insl
add
push
icebp
addr16
icebp
aad
adc
ja
inc
jae
lods
cmpsl
xchg
jl
and
popa
push
jg
add
jo
in
popa
shrb
pop
xchg
daa
rolb
push
or
in
mov
iret
insb
repz
xchg
mov
sub
add
or
xchg
out
filds
outsl
in
orl
adcl
xlat
or
int3
fsubl
cs
imul
stos
sbb
outsb
sahf
and
in
shll
xchg
dec
clc
inc
ja
std
mov
cmpsb
pop
or
repnz
test
inc
imul
movsb
adc
scas
mov
lret
loope
call
ret
mov
and
xchg
jecxz
and
push
xor
push
fbld
sbb
inc
je
popf
inc
mov
cmc
cs
das
mov
push
shll
inc
add
adc
out
sbb
enter
ss
sub
movsl
movsl
jmp
sbbl
insb
pop
cli
movlps
rcl
loope
in
jmp
aad
pop
iret
bound
lods
sub
sbb
xor
inc
mov
adc
jmp
and
dec
mov
sub
aam
rolb
sub
das
or
mov
adc
rcrb
xchg
mov
andl
sub
rcl
adc
push
jns
jge
clc
jge
inc
leave
mov
or
pop
mov
or
add
mov
imul
or
data16
cmp
lock
sub
and
xor
test
push
cmp
repnz
xlat
mov
pop
test
imul
clc
and
mov
ja
adc
popf
repz
test
inc
add
std
mov
ret
pop
mov
pop
fidivs
lret
std
xchg
mov
mov
adc
cmp
pop
inc
xor
cmp
pop
aas
and
imul
into
or
mov
pop
inc
xchg
add
movsl
jle
jecxz
xchg
sbb
dec
nop
cltd
jo
add
lods
xchg
shll
sub
repz
inc
add
add
cmp
sub
dec
jnp
cs
into
pushf
dec
and
jnp
cmp
aaa
sub
sar
pop
or
sti
or
cld
inc
imul
mov
xor
outsb
mov
xor
and
fmul
lret
in
sbb
ds
fsubs
addr16
push
mov
push
mov
filds
mov
movsl
pop
or
dec
jbe
inc
mov
sub
mov
mov
lds
repz
sbb
sbb
mov
inc
or
iret
ss
jecxz
xchg
pop
push
and
inc
ret
mov
cmpsl
mov
jbe
fwait
xchg
lret
insb
pusha
fld
sahf
jle
es
leave
push
jecxz
push
inc
jmp
sbb
push
push
xchg
iret
and
mov
in
mov
mov
sbb
adc
ret
test
mov
mov
arpl
ret
inc
jns
sahf
adc
mov
jb
push
ljmp
add
hlt
mov
popa
mov
test
jmp
scas
inc
call
aas
fadds
sub
pusha
movsl
push
jl
repz
dec
sbb
fiaddl
pop
popa
jnp
cli
sahf
xchg
mov
out
ret
fwait
sub
lds
int3
pusha
nop
push
mov
inc
jge
cmc
test
mov
andl
js
jns
mov
push
lods
mov
icebp
push
movsl
inc
xor
ds
jo
xlat
fwait
mov
xchg
in
sbb
mov
pop
and
mov
bound
aas
inc
in
outsl
insl
mov
es
mov
xor
push
xchg
mov
sbb
sub
out
in
mov
adc
in
dec
orb
jp
hlt
lods
or
lods
test
inc
pop
jns
dec
xor
sub
clc
lods
dec
lds
cmp
lock
xchg
jle
popl
jge
push
pusha
xchg
negl
jo
mov
and
loope
sbb
inc
cmp
popa
or
int
cmpsl
mov
mov
dec
push
lret
mov
lcall
or
sub
call
js
adc
pop
mov
sbbb
cmc
push
jmp
jecxz
or
pop
call
cmp
jno
mov
push
loopne
fbld
xchg
lahf
pop
sbb
subb
ljmp
lcall
pop
xchg
jecxz
cmp
imul
xorb
cmp
out
mov
dec
es
aad
add
sbb
xlat
pop
outsb
lahf
mov
lcall
mov
mov
imul
in
fcoml
inc
mov
aam
addr16
pop
fs
mov
sub
jmp
das
push
push
vcvtdq2ps
int3
jb
cwtl
sbb
pop
mov
push
mov
mov
dec
frstor
jmp
push
and
add
outsb
movsb
repnz
sbb
je
daa
inc
pushf
or
or
pop
cmp
sti
pop
and
out
adcl
addr16
lock
rol
ret
mov
loopne
movsl
icebp
lret
in
loope
jg
stos
cmp
xchg
pop
cli
mov
jp
pop
cltd
or
mov
sub
call
pop
fs
into
sahf
loopne
jae
mov
sbb
push
jo
push
movsb
sbb
dec
negb
and
xchg
aam
fwait
movl
xchg
jp
icebp
pop
int3
arpl
inc
jns
pushf
mov
out
pop
test
mov
cmp
stc
je
or
mov
imul
or
lret
jmp
and
sub
data16
xor
jae
fildl
ret
fisttpl
stos
mov
jge
mov
xlat
andl
and
pop
das
lret
sub
in
movsb
aam
addr16
ljmp
jle
jae
jge
sub
jno
adc
mov
lahf
xchg
aaa
lods
repz
sbb
int
in
xchg
shll
jns
cmp
pop
das
inc
out
mov
mov
fnstenv
das
and
and
cmp
les
loop
mov
push
or
dec
pop
cmp
mov
mov
cmp
sbb
pop
inc
test
out
aam
push
stos
cmp
add
xchg
mov
cltd
lds
inc
rorl
fucomi
nop
fwait
mov
mov
loop
inc
lret
or
lods
fwait
lock
push
movsb
mov
jp
jbe
imul
test
fdivl
fwait
cwtl
xorb
scas
or
jnp
jmp
nop
jne
mov
jle
test
pop
xor
mov
enter
mov
mov
pop
fdivrs
bound
mov
xor
hlt
or
dec
lds
jnp
mov
inc
es
and
mov
push
js
scas
jp
xchg
jmp
add
cmpsb
sub
call
dec
jecxz
sarl
push
cmpsb
lods
sub
push
sbb
mov
push
pusha
dec
push
call
ss
call
inc
das
ja
jg
loope
scas
adc
cmp
or
or
pop
cmp
in
jnp
xor
sbb
lods
outsb
cli
test
jmp
bswap
out
in
dec
jg
and
and
cmp
int3
jecxz
add
mov
out
xchg
stos
mov
es
dec
sub
jne
cmpsl
roll
xchg
push
xchg
sub
inc
subb
adc
aas
mov
fcompl
and
repz
faddl
adc
and
stos
add
lods
fistpl
xchg
sub
aam
mov
jecxz
lods
in
mov
jecxz
addr16
repz
lret
scas
out
popf
mov
mov
outsl
mov
hlt
movsb
add
jge
test
jnp
es
pop
ja
cmpsb
stos
mov
adc
fisubrl
mov
mov
dec
add
xchg
inc
mov
int
scas
adc
scas
pop
das
push
outsl
push
and
dec
pusha
imul
push
add
mov
mov
subb
sahf
test
sbb
mov
add
daa
stos
xchg
xchg
or
lcall
icebp
repz
sub
mov
cmp
loopne
dec
fdivrl
repz
push
xchg
shrl
scas
jp
ret
aam
mov
pop
add
jge
jb
mov
sub
xlat
sub
pop
stos
sbb
lds
lea
inc
push
xchg
call
adc
pop
lods
adc
sbb
xor
cltd
dec
pop
push
aad
jmp
subl
in
cli
jmp
xchg
jno
icebp
add
push
int
add
ret
sbb
xchg
aad
sbb
lret
sbb
ja
add
jbe
out
pop
jns
push
int3
pop
xchg
adc
xlat
loop
adc
gs
je
inc
aas
sbb
add
jmp
test
and
cld
int3
mov
xchg
jmp
in
cwtl
dec
bound
fbstp
int3
add
xchg
jae
test
adc
jo
push
mov
ss
aad
aaa
ss
mov
inc
sbb
mov
add
hlt
and
arpl
ret
cmpsl
push
stos
cltd
jbe
or
lcall
adc
inc
ljmp
jl
jnp
jne
sti
jge
adc
adc
pop
mov
or
mov
sub
test
sbb
cmp
lea
das
sti
xchg
xchg
xchg
mov
lret
xchg
jmp
negb
or
push
jne
pushl
adc
push
push
cwtl
dec
fmull
ja
jl
mov
mov
mov
mov
orl
stos
sub
xchg
cmpsl
mov
dec
daa
jge
hlt
sbb
and
jbe
push
roll
mov
mov
xor
fwait
scas
and
inc
sbb
daa
divb
fs
or
jb
dec
orl
call
inc
inc
imul
sbb
call
hlt
loope
gs
ds
or
icebp
arpl
xchg
pop
sbb
popf
xor
jg
dec
dec
jl
mov
mov
xchg
mov
ret
push
mov
daa
data16
adcb
and
jbe
gs
nop
jg
loop
nop
adc
push
xchg
or
aam
inc
jne
out
dec
out
sbb
mov
insl
dec
ss
push
pushf
cmpsb
mov
sub
pop
stc
mov
pop
jbe
inc
pop
dec
or
test
cmp
leave
add
outsl
lret
pop
insb
dec
lds
ljmp
or
lock
push
mov
xchg
js
cs
mov
add
jne
push
je
sub
add
or
push
out
mov
and
and
mov
repz
movsb
dec
push
jg
push
scas
cmc
loop
insl
mov
sti
xchg
cmp
enter
jbe
pop
js
inc
mov
ret
mov
dec
dec
cmpsl
cmpsb
les
push
inc
cmp
push
fiaddl
aas
insb
jo
pusha
jb
xor
pop
xor
mov
and
push
addb
jae
push
scas
xchg
stc
sub
adc
ja
fistpl
imul
inc
lea
cmpsb
cmp
or
xchg
cld
out
inc
adc
stos
mov
rdpmc
enter
nop
xchg
add
loope
adcl
div
stos
mov
scas
insb
movsl
cmovge
out
hlt
out
lods
add
out
or
mov
add
push
int
and
aaa
in
popa
xlat
fld
add
stc
cli
sbb
mov
mov
ret
enter
in
dec
dec
add
mov
mov
sub
std
xor
mov
in
xchg
jne
lret
in
and
cwtl
std
mov
cmp
pop
pushf
jnp
dec
jecxz
je
in
stos
lret
mov
shlb
lods
cmpsl
mov
leave
xchg
enter
and
lods
jp
lods
out
add
inc
sub
sub
imul
js
insb
and
sub
dec
inc
sahf
insl
loop
and
adc
pop
in
pop
scas
fwait
lock
scas
fsts
jle
cltd
xchg
sbb
pop
cmp
fwait
jl
inc
lods
es
push
lods
repz
es
decl
mov
shll
ret
loopne
scas
notb
xchg
xor
push
push
inc
pcmpgtd
mov
aad
sbb
sub
jp
pop
frndint
lods
aas
mov
sarb
repz
cld
insl
cltd
sub
pop
jo
xor
lea
sub
adc
mov
mov
mov
mov
inc
dec
adc
add
in
adc
and
xor
movsl
inc
stc
mov
out
push
and
and
stos
adc
sub
xchg
fisttpll
jmp
cwtl
sbb
icebp
push
stos
in
mov
cmp
mov
test
cs
enterw
ds
mov
loop
arpl
ficomps
ja
push
push
negb
outsb
andb
pop
fistpl
jmp
sahf
sahf
pop
mov
sbb
push
mov
dec
xlat
mov
sti
pop
out
and
outsl
mov
sbb
fstl
xchg
out
dec
mov
sahf
nop
mov
xor
and
cmp
repz
cmpsl
and
hlt
mov
sub
repz
dec
popl
into
in
addr16
jne
cmp
vsubpd
pop
inc
fldl
jbe
cmpsb
outsl
push
fildl
jge
fistps
cmp
bound
pop
adc
int3
sbb
testb
sub
cmp
outsb
fsts
lahf
fsubrs
add
xchg
leave
cmpl
cmc
sub
adc
lods
mov
jp
cwtl
stos
pop
cmp
les
lahf
add
in
inc
jp
js
cmp
push
into
aam
xchg
mov
leave
scas
out
lea
or
fcmovnb
adc
xlat
or
cld
das
sbb
xor
rorb
ficoms
adc
lret
mov
fsubrs
ret
hlt
cmpsl
push
movsb
mov
adc
cmp
ja
add
xchg
arpl
pushf
jne
inc
mov
push
adc
test
xor
cpuid
and
aam
rcrb
pop
popf
fadds
lret
fimull
xor
inc
je
arpl
rolb
aas
pop
and
std
cmpsb
rcr
rclb
add
stos
sub
jle
and
sub
jp
push
jle
cmpsb
pop
push
mov
xchg
in
and
add
repz
xchg
mov
adc
jmp
pop
xchg
jnp
je
fisttpll
pop
and
stos
filds
xorb
lahf
xor
push
repz
je
sbb
xor
mov
jecxz
add
das
lods
sub
xchg
add
pushf
push
mov
call
push
mov
sbb
fisttpl
mov
mov
or
dec
cmp
jp
xor
xchg
push
popf
push
add
daa
outsl
xor
or
or
mov
mov
jnp
adc
jb
jnp
push
sbb
inc
popf
jb
cmpsb
test
xchg
add
test
cmpsb
xchg
in
and
cmp
mov
lret
push
cltd
mov
pop
addl
dec
xchg
xchg
mov
jae
or
cld
lds
cld
pop
sbb
pop
sbb
mov
adcb
push
pop
pop
xchg
mov
jp
mov
sub
aaa
pop
sub
lret
in
lock
stos
lods
inc
push
test
dec
outsl
xor
pop
aam
inc
ljmp
fadd
int3
cmpsl
inc
mov
rcl
add
mov
les
orb
ret
and
fcmovnbe
xchg
stos
push
cmp
lock
xchg
dec
cmp
leave
push
fxch
jne
sbb
push
xchg
jp
icebp
mov
hlt
mov
enter
lock
adc
mov
sbb
stc
jnp
add
adc
push
icebp
std
add
repnz
leave
pop
push
fimuls
cwtl
and
cltd
push
lcall
not
movsb
mov
lcall
push
cltd
inc
dec
leave
mov
xor
dec
nop
mov
imul
loope
push
stos
sbb
and
pop
fwait
idivb
sarl
es
jae
sbb
jle
popa
inc
loop
xor
mov
xchg
xor
scas
lahf
mov
sbb
cmc
add
arpl
shl
cmp
jp
ljmp
xchg
jp
and
push
pop
pop
mov
xor
gs
push
mov
aas
pop
sub
out
leave
dec
int
xorl
or
push
inc
add
xor
movsl
add
pop
movsb
bound
test
fnstcw
enter
ss
js
ja
ret
mov
cmp
jmp
and
push
iret
into
es
fisttpll
lcall
or
lock
inc
mov
pushf
pop
out
js
movsl
adc
sub
push
es
jmp
and
fwait
cmp
shrb
or
in
mov
jge
dec
in
sub
cmp
stos
inc
pop
add
mov
jae
stos
dec
insb
pusha
shll
inc
xchg
out
rorb
add
cmc
negb
inc
stos
sbb
movsb
sub
xadd
cmp
jmp
xchg
and
jle
pop
daa
cmp
scas
sbb
lret
or
lock
xor
int
xchg
mov
add
add
gs
adcl
xchg
pusha
in
mov
fildl
xor
and
dec
mov
fdivrl
sbbb
movsl
sbb
test
mov
out
lds
adc
dec
push
mov
es
sbb
mov
mov
jb
in
lahf
mov
adc
cmpxchg
ljmp
or
insl
sarl
mov
cwtl
xor
lods
inc
inc
lret
movsb
dec
cld
and
xchg
sbb
popa
sbb
cmpsb
in
mov
mov
divl
mov
stc
inc
jo
sbb
xchg
push
daa
mov
ret
sbb
rorl
les
push
push
adc
test
je
pop
aas
data16
inc
aas
and
fdiv
popf
sbb
mov
loopne
std
vpmacsww
jp
mov
sbb
out
les
aam
cmc
mov
clc
ljmp
loope
add
scas
pusha
jecxz
mov
aam
iret
clc
add
mov
popa
imul
call
sarl
sbb
push
ret
pop
bound
sbb
or
mov
sub
push
cs
mov
sub
mov
or
mov
inc
pop
mov
cmpsb
sbb
adc
jb
adc
int3
pop
in
mov
adc
xchg
jle
lret
rsqrtps
daa
and
inc
or
andl
ret
adc
movsb
outsl
mov
lret
orl
mov
movsb
push
dec
inc
gs
add
mov
cmp
jecxz
push
pop
enter
adc
dec
cmp
xchg
hlt
lea
mov
out
mov
inc
jmp
sub
sub
into
cs
sahf
xor
outsl
mov
mov
mov
dec
popf
jb
mov
hlt
popf
nop
xchg
pop
bound
or
cmp
ljmp
sub
fisttps
lock
mov
mov
adcb
adc
jb
ds
andb
pop
dec
sub
in
test
add
mov
lods
lret
aas
lcall
mov
lock
and
pop
arpl
mov
decb
jl
or
sbb
adc
xor
or
add
mov
push
pop
mov
popf
mov
arpl
inc
leave
loope
adc
and
mov
icebp
loop
aas
jg
jno
xchg
adc
test
mov
lds
inc
adc
sti
jns
dec
cmp
adc
sub
pop
sub
xor
or
xlat
icebp
inc
mov
sti
and
sbb
test
push
push
pusha
cmp
scas
cmpsb
jp
pop
and
int3
fidivrl
popa
jle
mov
inc
mov
repz
mov
movsb
pop
aad
mov
mov
je
sbb
daa
cmp
jp
pop
fwait
jge
dec
push
loopne
pushl
cmp
sbb
test
out
inc
add
push
lods
cmp
fwait
rorb
jne
push
push
pop
test
ret
mov
popf
cmp
and
add
inc
repnz
sbb
in
fisttpl
add
outsb
movsl
cmp
ror
cltd
nop
js
out
jecxz
das
out
add
out
fisttpll
sahf
shr
loop
or
pusha
bound
scas
rorb
je
subb
aam
imulb
das
ret
and
mov
xchg
ss
scas
inc
iret
xchg
push
inc
inc
push
hlt
sysexit
mov
mov
scas
xchg
jae
mov
mov
adc
add
pop
in
cmp
bound
cmp
rcl
xor
dec
inc
mov
ret
mov
cld
or
sbb
xlat
cmp
inc
mov
enter
xchg
or
push
sub
sbb
das
jge
popa
je
push
in
xchg
gs
test
mov
cmp
pop
mov
mov
les
or
or
mov
cmp
loopne
cwtl
jge
ret
cmp
es
mov
adc
insb
dec
int3
popa
imul
dec
pop
inc
jmp
sbb
sbb
xor
cmp
fildll
mov
fiaddl
out
in
push
inc
pop
jbe
fnsave
or
lret
out
jb
mov
cmp
pop
ltr
sub
push
mov
jno
and
add
aaa
pushf
ficomps
mov
cmc
ss
jo
imul
loop
sbb
test
sbb
aad
jbe
mov
imul
sub
loop
inc
push
adc
movsl
push
add
inc
mov
xchg
mov
push
mov
mov
cmpsb
push
xchg
in
inc
or
pop
mov
and
addb
mov
jnp
push
ret
and
pop
cmc
sub
mov
mov
stos
cs
jmp
dec
test
iret
test
pushf
xlat
dec
ja
lods
and
cld
lock
stos
xchg
std
jb
adc
mov
sub
shl
lds
cwtl
jge
xchg
imul
jbe
xor
pop
mov
iret
imul
repz
int
mov
cmp
xor
lods
in
lods
pop
lods
rorb
and
jns
cmpsb
shl
jb
add
popa
jns
cmp
and
mov
and
fs
dec
or
xor
xor
dec
push
loopne,pt
test
add
mov
inc
inc
adc
cltd
data16
repz
xor
fisubrl
mov
mov
jmp
xchg
add
imul
adc
cmc
jno
jo
cmp
mov
fwait
adc
test
mov
fnstenv
mov
xchg
mov
pop
sub
pop
jecxz
push
arpl
fadd
adc
sbb
bound
xchg
inc
inc
lock
mov
adc
mov
xchg
push
xor
rcrl
dec
test
add
add
in
lea
add
and
mov
mov
cld
dec
dec
in
ret
mov
dec
add
jbe
dec
daa
jmp
add
dec
addr16
xchg
jo
xchg
aad
in
sbb
mov
or
jnp,pn
out
imul
loope
adc
jmp
pop
loope
fsts
or
pop
inc
popa
dec
pop
pop
enter
adc
es
xchg
ljmp
ljmp
idivl
pop
outsl
xor
pop
and
les
inc
sub
sub
insl
icebp
outsb
lock
fbstp
icebp
add
insl
cmpsb
pop
jge
add
mov
xchg
dec
fdivs
ds
cmpsb
dec
cmp
mov
in
iret
rcl
daa
mov
cmp
cli
mov
mov
cli
xchg
sbb
std
incb
pusha
mov
mulb
daa
xchg
mov
jmp
in
dec
leave
or
mov
popa
sub
call
add
push
dec
mov
hlt
inc
dec
jb
out
rcrl
shr
mov
out
push
ljmp
lds
jb
in
outsl
mov
sarl
fwait
mov
sub
add
inc
cld
out
mov
jae
lahf
cltd
mov
push
mov
jp
out
mov
mul
and
repnz
lock
lret
cld
sti
ja
pushf
dec
in
gs
js
icebp
fistpl
push
outsl
and
sub
dec
xor
push
xchg
mov
push
dec
ror
jae
test
es
and
lahf
dec
mov
sub
dec
and
addr16
cmp
sahf
push
pop
lock
or
in
test
aad
push
push
mov
imul
sub
cli
ret
cmc
adc
jp
jge
xchg
mov
mov
push
add
sbb
dec
xor
or
xor
ror
iret
test
mov
jl
or
frstor
adc
pop
push
scas
mov
lock
arpl
jnp
jno
adc
dec
hlt
mov
not
push
lahf
lods
lcall
rolb
adc
out
daa
fxam
sbb
mov
je
orl
dec
stc
imul
lahf
cmp
or
bound
lods
jge
dec
mov
cld
sti
pop
add
mov
out
ja
or
jb
jp
ret
jg
jne
incb
loopne
cmp
shr
mov
pop
sub
jmp
sbb
sbb
fdivs
nop
xlat
out
ljmp
sar
shl
cwtl
add
jae
fs
testl
pop
cmpsb
cs
jae
stc
adc
xchg
in
push
ja
jnp
pop
sub
fwait
or
lahf
insb
into
jno
outsb
push
and
push
and
in
sbb
jle
mov
movlps
sbb
loopne
mov
cmp
and
lret
int3
mov
sub
outsl
lods
xor
xor
gs
fstl
jmp
ljmp
lret
jl
pop
dec
sbb
fdivrp
movsl
fs
push
adc
xor
mov
je
rcrb
shl
aaa
pop
lds
scas
repnz
add
jo
xchg
xchg
inc
mov
out
and
rcr
sahf
sub
or
add
outsb
sti
lds
push
fsubrl
cli
mov
insb
pop
adc
sbb
push
cwtl
scas
and
shll
inc
incl
pop
jge
mov
lret
adc
jge
inc
out
shl
xor
loopne
push
push
mov
mov
cld
sub
aad
leave
mov
ja
cmp
pop
push
int3
popf
fiadds
mov
inc
xchg
int
mov
xor
jne
xor
xlat
and
jnp
int
clc
adc
jb
cmpsb
mov
daa
pop
cmp
adc
iret
daa
orb
fisubrs
dec
jbe
add
mov
rclb
jmp
insl
mov
aas
pop
mov
jmp
cs
hlt
mov
gs
xchg
push
stos
stc
cmpsl
loope
jnp
pop
mov
cmp
bound
rolb
and
pop
into
repnz
xor
mov
mov
in
inc
jge
loop
test
repnz
dec
and
js
daa
cmp
lcall
cmp
inc
pop
movsb
sub
es
jp
and
fdiv
sbb
cmp
cltd
inc
jge
repz
insl
scas
cltd
jmp
cwtl
push
xor
stc
mov
mov
jp
sahf
lods
sbb
rorl
jae
cmp
push
jecxz
ficomps
inc
add
adc
ja
sub
or
jne
jae
mov
fnsetpm(287
add
mov
stos
jg
ret
add
and
leave
sar
cmp
rol
sahf
nop
dec
push
mov
notl
mov
jle
mov
or
sbb
clc
cmp
mov
daa
adc
popf
dec
sbb
lret
into
aad
test
rcrb
pop
fisubrs
inc
idivl
push
sub
std
fists
sub
push
cwtl
pop
dec
mov
clc
insb
inc
xor
pop
cmp
movsb
adc
or
imul
mov
add
jno
rcrb
dec
jmp
jno
push
add
scas
push
pop
cltd
push
jae
loopne
psubsb
data16
pop
mov
cltd
dec
nop
xchg
je
test
into
fistpll
and
int
aad
rclb
cs
cs
jns
gs
fdivs
in
jp
int
in
test
scas
shll
iret
mov
movsb
or
lahf
int3
mov
mov
fistpl
fdiv
test
test
sbb
mov
outsl
icebp
push
popa
push
ret
mov
stc
add
outsb
scas
inc
lea
fisubrs
stos
aad
lock
rorb
ss
js
add
and
ja
test
into
xor
mov
ss
xchg
rcrl
arpl
and
cmp
add
xchg
les
out
xchg
add
test
xchg
cld
inc
or
sub
pusha
pop
jp
push
fs
in
inc
sub
leave
push
testb
xor
pop
cmpsl
or
or
inc
adc
xor
test
repz
dec
xlat
sub
loope
movsl
or
inc
rcrl
sub
xchg
and
adc
mov
ret
mov
inc
cltd
test
xor
call
or
roll
mov
scas
cmc
pop
push
inc
popf
adc
sbb
and
push
inc
xchg
sbb
sub
xor
xchg
arpl
xor
sub
and
pop
roll
sbb
sbb
rcrl
cmp
jp
xchg
dec
or
and
rcrl
dec
mov
movsl
popf
fsubrl
mov
std
lods
lea
bound
arpl
lret
daa
notl
lea
and
sub
lahf
mov
js
out
xor
push
add
push
out
cli
arpl
xchg
mov
inc
loopne
rcll
enter
aas
je
sahf
in
jg
addb
pop
fwait
jae
add
xlat
rclb
mov
loop
mov
add
xchg
push
dec
test
mov
fs
mov
or
cmp
cmpsb
lret
sahf
mov
mov
ss
fbstp
mov
testl
test
gs
into
jo
outsl
sub
push
lods
in
scas
cmp
mov
sub
fcmovbe
jl
xchg
icebp
inc
xchg
xchg
push
cmp
dec
or
or
outsb
ds
jmp
push
xchg
leave
sub
dec
outsl
or
sbbb
and
mov
pushf
or
fwait
hlt
mov
mov
mov
push
loopne
push
imull
push
mov
lahf
leave
cmp
frstor
add
subl
or
jecxz
enter
inc
jnp
pop
xchg
jecxz
jae
addr16
test
mov
push
push
push
cltd
test
cld
daa
divl
shlb
mov
and
cmc
sbbl
enter
jo
sub
movsb
cmp
add
js
mov
or
mov
cmp
mov
or
or
nop
xor
mov
out
pop
pop
and
inc
add
push
and
jnp
out
fcomps
ljmp
adc
xchg
mov
ficomps
or
sub
mov
mov
outsl
jae
sbb
ss
imul
pop
inc
sbb
cmpsb
js
jl
dec
imul
mov
les
popf
pop
sbb
mov
test
mov
and
push
add
inc
pusha
dec
outsb
mov
sti
popa
inc
mov
mov
and
inc
push
aad
mov
cmpsb
jmp
mov
xchg
repnz
add
mov
test
xor
outsl
nop
jle
add
inc
mov
out
pop
mov
arpl
inc
into
rorl
xor
cltd
pusha
push
cmp
mov
mov
pusha
sub
js
out
outsl
push
mov
adc
inc
push
cmp
addr16
mov
push
stos
ljmp
pop
lock
ljmp
inc
loopne,pn
and
popf
jo
add
movl
cli
icebp
cmpsb
dec
ret
std
mov
sub
xchg
sbb
hlt
or
mov
inc
cli
movsl
pop
mov
xor
adc
adc
or
fucomip
lcall
test
xor
push
aas
sub
jbe
ret
ret
mov
pop
sub
lods
nop
add
aad
sbb
inc
repnz
roll
push
jge
daa
pop
pop
inc
push
orl
cltd
cs
sti
dec
loope
lret
add
lret
mov
pusha
mov
mov
adc
pop
movsb
inc
jb
mov
aad
mov
xchg
mov
push
push
movsb
lods
sub
pop
mov
pop
push
sub
xor
mov
xor
sar
int3
jne
jbe
cld
cld
push
std
jl
arpl
and
fistl
lret
int3
insl
and
mov
inc
roll
cld
aam
fiadds
pop
xchg
jecxz
xor
jo
cld
push
xchg
shrl
leave
loopne
pop
dec
jmp
imul
adc
lcall
jl
mov
pop
cli
pushf
push
pop
clc
mov
cmp
scas
bound
inc
sub
inc
ficomps
out
jle
inc
arpl
mov
push
repnz
adc
test
pop
out
sub
adc
mov
fidivs
adcl
mov
call
xor
pop
test
in
rorl
outsl
jmp
add
daa
in
lea
mov
adc
iret
inc
xor
xor
adc
jo
mov
pop
addr16
test
inc
scas
xchg
cmp
lods
lock
pusha
push
or
sub
adc
loope
stos
popa
es
sbb
enter
cmp
mov
xchg
and
bndcn
pop
rcll
pop
mov
push
js
clc
aas
aas
pop
or
add
mov
sbb
lret
and
les
lea
xor
aad
push
cmp
lods
aaa
rcll
sub
and
mov
sbb
pop
dec
push
mov
add
outsl
mov
int
mov
out
inc
daa
fnstcw
mov
jecxz
xchg
int3
mov
arpl
and
sbbl
fnsetpm(287
je
mov
test
das
fidivs
mov
imul
cmpsb
loop
mov
test
mov
mov
push
frstor
lock
mov
insb
and
les
mov
dec
in
je
jecxz
dec
fsubrl
das
out
outsb
les
pop
dec
mov
mov
cmpsb
lcall
stos
dec
mov
sub
cltd
fimull
cltd
xchg
inc
pop
ljmp
ljmp
sahf
aaa
mov
icebp
and
dec
jp
or
or
pop
lret
mov
sub
sub
dec
push
mov
clc
or
xor
add
jg
sti
dec
loopne
mov
fs
cwtl
cmp
rolb
shlb
xchg
mov
mov
dec
cwtl
popf
pop
imul
fnstsw
lea
dec
test
mov
or
outsb
outsb
repz
in
scas
mov
out
xor
push
xchg
cmpsb
lcall
pop
clc
in
jbe
pop
rcrl
cmp
fistl
dec
inc
dec
jne
inc
add
cld
and
xchg
out
mov
hlt
cmp
adc
sti
adc
or
out
call
nop
notb
ret
sub
jle
cmp
rolb
pop
jmp
cmpsl
mov
in
or
stc
insl
jmp
mov
lds
lea
pop
mov
mov
push
pop
dec
mov
sub
fnstsw
mov
inc
cmp
sub
rcr
lret
jb
pop
mov
jno
xchg
fs
or
fldt
pop
cmp
popf
jno
mov
xchg
mov
iret
push
lock
pop
xchg
mov
enter
adc
mov
iret
mov
arpl
scas
push
lret
sub
dec
sub
lods
xchg
aam
scas
inc
mov
enter
in
inc
arpl
pushf
jmp
mov
dec
arpl
rol
stos
xor
sub
into
fnstcw
cmpsb
pop
arpl
jl
and
int
cmpsl
lea
lea
jle
data16
push
xlat
notb
and
mov
push
push
xor
jg
data16
cmp
jns
sbb
mulb
pusha
pop
sub
scas
ljmp
sbbl
clts
and
int
mull
mov
cmp
jge
fiadds
add
lods
adc
dec
push
add
adc
push
adc
add
in
mov
add
inc
lcall
lods
mov
push
mov
rol
sub
js
lods
push
and
mov
scas
dec
int
in
outsb
js
lahf
call
hlt
js
xchg
cltd
insl
insb
call
shl
aas
jmp
xchg
inc
and
xchg
sahf
jb
negl
add
imul
inc
and
jg
rep
xor
dec
das
rorb
lods
je
and
xchg
lcall
enter
call
nop
leave
jo
mov
loop
push
jmp
idiv
adc
sahf
ss
ss
xchg
xchg
mov
sbb
dec
leave
xchg
sti
sbb
lahf
in
mov
inc
lods
jmp
idivl
fists
sub
mov
sarb
xchg
inc
popa
mov
push
cwtl
pop
int3
jmp
mov
orb
out
outsl
scas
scas
jmp
mov
add
mov
rcrb
xchg
out
add
add
cli
xchg
jge
sti
andb
pop
data16
xorl
mov
xchg
push
add
xchg
cmp
mov
out
lcall
pop
fwait
xor
cmp
fnsave
orl
dec
pop
or
pop
fs
lret
out
popf
inc
nop
aam
aad
stc
jle
dec
ja
cmp
inc
insb
faddl
cvtps2pd
cmp
mov
add
xchg
cld
in
mov
mov
hlt
inc
clc
adc
jno
cmp
inc
jge
outsl
xor
xor
and
roll
or
lds
js
inc
jmp
push
jns
push
mov
and
aad
xor
xor
data16
xchg
jns
sbb
push
stos
inc
pusha
cltd
add
cmpsl
inc
or
jmp
repz
mov
fwait
js
sbb
and
clc
inc
inc
adc
gs
push
xchg
test
adc
jge
cmp
jp
mov
pop
cmp
jae
cli
pop
subl
and
data16
in
dec
inc
dec
mov
bound
pop
dec
xor
les
xorl
in
mov
or
jo
push
into
lahf
jbe
add
lods
xor
mov
fldl
ss
ret
testb
mov
aam
addl
jb
aad
jnp
push
sarl
rcll
sahf
dec
stos
lea
push
jg
jmp
adc
push
cltd
cmp
imul
push
out
add
push
insl
pop
jnp
ret
sbb
inc
or
aad
dec
jl
test
add
int3
inc
sahf
dec
das
shl
push
das
data16
mov
inc
mov
shl
and
xchg
ljmp
pushw
mov
lret
loope
dec
xchg
jo
or
stc
mov
jae
pop
or
cmp
jle
faddl
xchg
xchg
xchg
xchg
int
stc
sub
test
subl
test
movsl
xchg
pop
imul
xlat
aaa
cmp
popa
mov
scas
jle
xchg
rcr
add
imul
jbe
mov
pop
mov
and
jne
fisubl
lcall
dec
imulb
adc
jb
aam
nop
pop
mov
outsl
pop
sub
xchg
in
jae
and
mov
sbb
fstps
fs
in
fsubl
dec
ffree
test
bswap
mov
lret
mov
jae
outsb
cmp
fmull
sub
inc
add
test
jl
cmp
mov
push
mov
sub
push
lods
cwtl
out
xor
mov
lret
popa
sbb
sti
sbb
push
push
jbe
filds
les
out
or
jl
push
shlb
xor
mov
or
jecxz
fimull
or
pop
xor
out
insl
std
popf
lds
fnop
repnz
mov
out
jnp
pushf
add
adc
and
or
icebp
sub
mov
nop
add
inc
mov
outsb
sbb
jge
cmp
dec
ss
sub
mov
mov
clc
std
nop
in
movsl
mov
mov
shr
sub
out
out
rcll
dec
sub
loopne
sarb
into
dec
out
stc
pop
lods
lret
loopne
cld
sub
mov
push
loopne
adc
ret
sbb
mov
test
or
mov
out
jbe
gs
add
mov
and
aad
popf
mov
pop
cmp
fisubrs
mov
push
repnz
aam
pusha
jmp
lret
jno
cmc
mov
mov
pop
cs
xchg
int3
jl
gs
xchg
sti
jg
js
pop
jno
or
push
or
sub
lock
scas
push
rorb
into
sub
mov
mov
cmp
dec
aad
mov
add
ja
mov
sub
pusha
or
push
popf
call
stos
jge
lods
fnsave
xchg
ja
call
add
ret
push
aas
rcll
andl
mov
lcall
mov
das
fsubl
int
or
dec
pop
addb
out
and
js
subl
mov
cmp
push
push
adc
imul
andb
imul
jecxz
cmpsl
mov
dec
adc
jns
and
ret
ret
mov
rcrb
nop
dec
pop
cli
cmp
test
mov
mov
repz
test
cmp
rcl
into
or
cmp
dec
fdivrs
repz
push
xchg
js
sarl
ret
push
xchg
xor
push
dec
dec
xchg
or
movsl
mov
dec
dec
test
mov
rcrl
cmpsb
popf
cwtl
scas
fidivl
loopne
sbb
movl
push
pop
or
cmp
pop
add
mov
xor
cmc
or
adc
lds
ret
pushf
loopne
lock
push
mov
pandn
pop
outsb
das
scas
jg
cmp
jmp
mov
sbbl
shl
mov
inc
mov
es
cmp
enter
sub
pop
jae
or
mov
mov
adc
xor
call
sbb
xor
subb
push
es
lcall
jno
jle
ss
scas
stos
xchg
cmp
mov
jp
aam
xor
pop
jge
pop
cmp
add
daa
lods
pop
enter
and
sub
jmp
roll
or
mov
inc
mov
mov
lods
cmp
and
jg
xchg
sbbb
data16
fidivrl
sahf
cmc
cmp
stos
push
push
inc
mov
mov
inc
dec
ja
loop
cld
xchg
ficomps
aad
sti
out
cmp
sub
jl
lods
pop
nop
out
adc
mov
sub
xor
sub
mov
out
mov
xor
ss
mov
aaa
and
out
xor
fs
jo
adc
ljmp
xor
lods
lret
fcmovne
mov
lahf
lea
lret
fisubs
mov
sbb
daa
mov
or
neg
rolb
daa
jl
enter
nop
stos
pop
lods
stos
add
inc
dec
hlt
shll
add
cmp
push
sbb
aaa
push
sti
jae
mov
push
ror
jb
arpl
sbb
add
push
lcall
push
jmp
add
movsl
mov
pop
ret
mov
xchg
mov
push
mov
lret
punpckhwd
jne
aad
pop
dec
repnz
lahf
in
cmp
inc
sub
stos
int3
push
sub
sub
mov
mov
add
repnz
fsub
or
aas
loop
cld
repnz
lds
cmp
orl
test
lods
xor
push
lods
dec
add
jl
push
jo
jne
pop
rcrl
lock
xchg
into
repz
sub
into
jae
lahf
shl
cwtl
cmovns
mov
cmp
cmpsb
xorb
in
sub
cmpsb
outsb
or
outsb
roll
insb
inc
lods
adc
pusha
popf
push
nop
loop
xchg
dec
jb
mov
cmp
xor
subb
nop
aas
ja
push
fcoml
loope
rep
mov
test
in
test
cmp
adcb
inc
ltr
inc
out
mov
in
scas
dec
xor
movsl
adc
popa
sahf
pop
sub
std
out
aaa
clc
xlat
lahf
push
add
sbb
adc
push
les
or
push
fldcw
outsb
push
jecxz
mov
jp
repz
sti
add
lods
mov
mov
mov
ljmp
shll
or
adcb
adc
xchg
jo
stos
or
inc
lret
add
rorb
and
test
iret
xrelease
add
ret
or
pop
pusha
fisubrl
in
sub
insl
lret
je
pop
shll
or
mov
sub
xor
push
daa
stos
subb
add
pop
lret
in
ljmp
sar
adc
icebp
dec
inc
sbb
jno
test
mov
mov
in
dec
div
cmp
rorl
xchg
lcall
inc
wrmsr
add
xor
inc
adc
lret
or
imul
pusha
int
xchg
pop
ds
movsb
sbb
loop
xchg
sub
push
cld
pop
in
fisubrl
aas
inc
push
dec
add
push
movsl
nop
fisubrl
cmp
outsl
ficompl
sub
sarb
and
add
xor
mov
inc
mov
xchg
loop
push
int3
rcrb
leave
xchg
dec
jns
dec
push
add
cmc
jo
dec
stos
inc
sub
mov
ja
cmc
mov
pusha
loopne
or
add
js
sub
iret
pop
adc
lods
jo
cs
scas
outsb
mov
sub
fxtract
mov
add
dec
fcompl
int
das
xchg
add
fsubp
sbb
xor
push
je
movsl
shr
cld
roll
push
cltd
stos
mov
cli
sub
fmuls
sub
ficoms
inc
or
xchg
sub
xchg
pusha
push
push
inc
pop
idivb
jle
or
jmp
adc
mov
mov
rclb
rolb
out
fdivrs
mov
mov
sub
ds
mov
adc
or
mov
add
mov
sub
scas
push
stc
lret
and
dec
aas
push
adc
sub
rorl
test
xchg
into
adc
sahf
inc
imul
and
push
pop
sbb
leave
push
cmp
shrb
loop
sub
cmp
pop
adc
dec
in
or
xchg
mov
mov
or
inc
sbb
and
je
bound
cmpsb
pop
icebp
jg
cmp
jle,pn
insl
test
jmp
sub
in
jg
lods
inc
jmp
ret
sbb
addl
shll
cmp
sbbl
cmpsl
scas
in
sub
int3
xchg
xchg
pushl
in
addr16
jecxz,pn
in
xchg
pop
push
mov
add
fmull
call
dec
repz
sub
std
lods
add
inc
imul
stos
push
pop
dec
cli
cmp
inc
push
mov
mov
scas
or
out
insb
fmuls
jp
test
cld
loop
push
inc
xor
or
mov
adc
mov
sbb
lcall
add
and
xrstors
xchg
add
out
int3
mov
push
xor
enter
sbb
repnz
add
xchg
les
je
dec
test
pop
sbb
mov
jb
addl
jl
aam
dec
daa
cmp
mov
sti
fisttps
hlt
stc
out
mov
int3
jl
adc
push
lock
loope
das
fmuls
inc
xor
aam
gs
int3
ss
pop
mov
stc
insb
shrl
mov
inc
jmp
cmpsl
or
std
popf
jne
sub
pop
test
bound
mov
pop
xchg
jle
out
add
ja
lods
je
ja
outsl
or
and
adc
int3
clc
in
popf
hlt
lds
sub
or
das
ja
test
sbb
sti
pushf
jo
cmp
adc
scas
mov
cltd
dec
sbb
pop
sbb
loope
repz
xchg
jmp
aad
mov
aam
test
fsts
test
test
das
mov
in
add
pusha
imul
inc
and
pop
inc
add
jecxz
mov
ret
mov
cld
sbb
xor
push
lods
hlt
mov
enter
sbb
rcl
outsl
pop
jns
je
ja
cmc
push
scas
jmp
lods
cmpsb
loopw
outsl
int3
repz
cmp
aas
pop
ret
jb
jne
movsb
icebp
mov
shl
and
repz
into
lods
and
dec
mov
rcrl
sub
add
mov
ss
mov
push
pop
insl
shrl
push
push
mov
cmp
sbb
cs
cwtl
and
test
imulb
push
push
js
mov
int
pop
push
movsl
jl
xchg
inc
enter
cmc
mov
js
cmpsl
enter
loope
dec
push
les
std
stos
sub
daa
ja
test
xor
pop
vandps
icebp
mov
ja
lret
fdivs
cmp
or
cmp
pop
testl
cmp
inc
push
push
repz
xor
leave
sbb
rcrb
push
mov
daa
inc
lahf
sarl
xor
jb
jno
rolw
jb
mov
lods
in
or
lcall
inc
aas
and
addr16
cmpsb
cltd
cmp
and
stos
pop
lds
or
shll
mov
xor
mov
sub
dec
data16
ds
xor
cmp
ss
in
ret
mov
xchg
jne
test
jg
mov
xor
addl
pop
mov
jb
and
fidivl
mov
jp
fisttps
mov
pop
rorl
mov
loopne
mov
xchg
arpl
cmp
jl
jecxz
push
jnp
ds
popl
shr
cmp
mov
xlat
cs
jmp
outsl
ljmp
movsb
leave
push
adc
jne
mov
andl
or
cmp
or
cld
or
pushf
mov
adc
and
xchg
fbld
or
clc
push
or
mov
ret
ret
sbb
xchg
cmp
dec
or
jns
and
push
push
cmp
xor
in
push
adc
mov
into
inc
rol
xchg
lds
outsl
das
cmp
incb
das
sbb
and
push
lahf
rep
shll
cs
sbb
push
dec
mov
imul
sbb
insl
out
adc
or
sti
shrl
push
xor
sub
lods
and
inc
pop
or
sub
movsl
inc
adc
pop
outsl
pop
sahf
subl
fistpl
ljmp
mov
sbb
pop
add
scas
dec
sarl
hlt
dec
fldl
jae
inc
adc
and
cmp
repz
cmp
repnz
push
add
pop
jns
lret
mov
sub
lret
adc
pop
loop
lds
add
lods
arpl
inc
mov
dec
push
imul
shl
div
add
inc
les
jge
push
je
mov
aad
lcall
cld
mov
cmp
mov
shl
jge
mov
adc
jmp
dec
test
rorl
sbb
ds
sub
xor
jg
imull
mov
inc
adc
adc
rcr
pushf
pushf
popa
pop
mov
insb
aas
inc
pop
data16
jno
pop
sahf
sub
mov
icebp
ret
sarl
xor
jp
movb
out
add
push
insl
fldenv
mov
in
xor
nop
cmpsl
rcr
push
mov
repz
mov
mov
or
inc
xlat
add
les
ficompl
mov
test
ret
cmp
and
outsl
scas
imul
sbb
fdivl
xlat
aam
insl
inc
sub
adc
aad
pop
movsb
mov
add
jmp
sub
fsubs
mov
mov
mov
jnp
cs
rcrb
into
sbb
lcall
test
jg
sub
and
sub
cwtl
jle
clc
pop
xchg
pop
stos
dec
push
inc
jb
mov
jl
pop
cmp
mulb
movsl
cmp
xchg
xor
xchg
fstl
popa
repz
das
out
bound
das
mov
in
jae
push
fiadds
pop
test
movsl
fcmove
out
or
mov
aam
dec
mov
test
xchg
gs
mov
xlat
fcomp
dec
sahf
sbb
jle
jl
mov
inc
mov
dec
sub
push
cltd
inc
std
pop
ud1
add
adc
idivl
sbb
ficompl
sbb
pop
sub
out
cmp
std
dec
scas
les
adc
or
in
in
cmpsb
jno
shr
fdivr
mov
mov
sbb
lcall
testl
mov
jno
xchg
jno
inc
repz
cmp
adc
cli
inc
mov
ja
pop
pop
mov
stos
mov
or
cli
arpl
xchg
inc
outsl
push
scas
shll
xchg
fmuls
bound
add
mov
jbe
jp
in
hlt
popa
jnp
xor
add
mov
and
jo
pop
movsb
outsl
xor
rcll
sub
mov
xor
pop
mov
dec
lods
outsl
mov
loope
pop
je
xchg
cld
in
movsb
out
repz
xchg
fnstsw
add
fwait
xchg
sbb
stos
andl
pusha
pop
xchg
loopne
jge
sbb
sbb
push
mov
jl
pop
inc
movsl
mov
and
insl
adc
add
dec
jl
jb
pop
in
add
dec
adc
push
enter
sub
xchg
insb
push
sub
stos
or
push
in
ljmp
xchg
incl
pop
dec
fildl
cmp
mov
xor
xchg
loopne
out
mov
filds
into
imul
gs
es
cld
xlat
xchg
cmp
fmuls
pop
imul
stc
jp
insb
mov
mov
push
in
dec
imul
les
inc
push
in
insb
ds
in
aam
clc
lret
mov
mov
fisubl
aaa
sub
pop
js
xor
fistps
std
mov
rorb
inc
pop
daa
sarl
mov
sub
enter
sub
fstpt
outsl
add
daa
mov
adc
enter
xchg
sub
out
or
pop
xorb
arpl
push
pop
mov
shlb
lret
or
add
push
sti
pop
push
and
mov
mov
mov
jmp
jb
inc
repnz
movsl
js
jecxz
xchg
jg
lods
je
dec
icebp
das
inc
push
dec
inc
xchg
ret
jl
push
iret
enter
add
arpl
adc
mov
jle
negl
repnz
ret
jnp
xchg
mov
mov
jg
add
pop
ret
xor
cmp
sahf
pop
nopl
or
dec
xchg
mov
add
add
aad
cmp
call
mov
xor
and
pop
mov
or
scas
xchg
cmp
xlat
cmp
lods
rolb
fldl
ja
adc
mov
xchg
loopne
xlat
cs
cltd
pop
xor
jno
jne
jne
shll
add
push
and
mov
add
mov
idiv
pop
clc
mov
adc
pop
jl
adc
ljmp
call
inc
mov
andb
inc
xor
jae
mov
lahf
cmp
loop
das
loopne
mov
xor
lds
adc
sub
cmp
inc
or
sub
lods
dec
adc
shl
xor
adc
dec
push
inc
loope
fmuls
jne
inc
adc
dec
nop
sub
lock
push
pusha
pop
nop
and
or
mov
inc
scas
mov
dec
sub
fadds
push
mov
testl
pop
mov
or
enter
cmp
mov
push
mov
outsl
jg
in
es
sub
inc
inc
and
add
subb
aam
add
push
ret
shl
ret
or
xchg
mov
addr16
and
outsb
pop
insb
shrb
je
sub
dec
fdivrl
jecxz
pop
mov
ret
shll
fsubrl
cmp
test
cmp
xor
decl
filds
cli
and
das
sahf
push
test
mov
inc
test
cmp
sti
xor
testb
xchg
and
jns
repnz
pop
daa
insl
ret
and
xor
push
or
cmc
mov
out
inc
addb
jp
cmp
jmp
cmp
popa
jae
ret
push
sub
mov
fiaddl
loopne
xadd
arpl
jbe
popf
daa
xchg
xchg
loopne
pop
jge
int
mov
mov
xchg
lret
mov
lahf
and
mov
adc
or
lea
xor
xor
fdivr
outsw
or
sahf
iret
pop
mulb
mov
data16
mulb
jle
call
popf
mov
xchg
dec
cs
int
push
lods
jle
xchg
outsb
rol
jb
xchg
outsb
and
paddusw
jb
stos
rorl
sub
fnstsw
mov
lret
or
test
fdivrp
or
outsl
mov
fnstenv
outsb
pop
imul
movsb
imul
frstpm(287
jp
xchg
or
testl
js
fists
inc
pop
bound
test
ljmp
mov
cltd
sub
ja
cmp
jmp
rol
and
cltd
ljmp
test
xchg
hlt
repz
mov
sbb
or
ret
xchg
and
lea
push
push
rcrl
insl
dec
mov
sub
cmp
xchg
fistpl
dec
repz
add
jmp
inc
xor
mov
out
les
adc
aaa
flds
xor
pop
pop
jp
xor
mov
jno
cmpsb
je
jnp
cli
imul
and
jnp
jecxz
or
shr
adcl
sub
mov
lret
mov
out
fstps
cltd
and
xchg
ret
test
sub
mov
mov
int3
dec
jnp
aad
mov
insl
jb
je
stc
in
push
add
adc
mov
adc
adc
or
sbb
int3
and
cld
aam
mov
in
cmp
mov
adc
fucom
jecxz
in
outsb
pusha
popf
fnstcw
xor
jo
sbb
mov
xor
push
cmp
test
xor
sub
mov
or
xchg
sub
pop
inc
pop
or
shrl
inc
scas
cltd
sbb
cli
imul
inc
es
cmp
scas
add
daa
nopl
jnp
ljmpw
outsb
mov
cli
sub
adc
scas
out
pop
xchg
add
sub
ss
orb
filds
js
sbb
mov
dec
push
lcall
es
sti
add
shll
or
outsb
inc
roll
push
int
cld
ret
data16
movb
fwait
mov
push
or
inc
inc
loop
notl
cltd
sbb
sub
cmpsw
dec
stos
or
test
add
pop
mov
sbb
aad
add
test
lahf
hlt
std
pop
test
pop
sbb
adc
popa
or
jno
inc
call
adc
lock
cmp
sbb
das
sub
out
outsb
ss
lds
cmpl
push
pop
loop
mov
push
test
insb
push
pop
sub
push
add
mov
lret
add
pop
inc
dec
data16
pusha
xlat
movsl
sbb
inc
xchg
push
cmpsb
imul
pop
lods
stc
fisttpl
lods
cld
mov
xor
shll
and
xchg
push
sub
stc
dec
inc
or
insb
les
maxps
fwait
lds
sub
clc
cld
cmp
imul
dec
pusha
out
cmp
and
repz
pop
add
out
xchg
add
int
cmpsb
paddq
inc
dec
test
fdivrs
sbb
jns
popa
movsl
sbb
lods
js
cltd
ret
lea
sub
inc
imul
fcomp
test
stos
loope
test
je
sub
scas
outsb
dec
pop
gs
sub
sbb
jae
xor
xchg
ret
cltd
mov
test
mov
cmp
ret
sbb
xchg
push
js
mov
push
loopne
cmc
add
inc
adc
je
sahf
or
adcl
fcomp
outsb
lods
mov
add
mov
push
es
xor
push
mov
test
pop
xor
xchg
inc
fwait
xchg
add
jp
out
mov
dec
scas
out
jg
hlt
and
notb
rclb
adc
movsl
loopne
insl
cmpsl
mov
mov
fwait
dec
ftst
mov
cmpsb
loop
inc
lcall
test
push
cmp
inc
ljmp
jbe
fsts
in
in
scas
cmpsb
sbb
mov
jae
pop
icebp
mov
incb
popf
sub
ljmp
lods
cmp
xlat
rclb
imulb
pusha
jp
arpl
addr16
lock
ss
lods
pop
fldt
push
add
in
call
movsb
mov
adc
sbb
sbb
rcrb
inc
or
mov
mov
dec
add
xor
mov
cmp
jne
out
sbb
arpl
pop
fucom
mov
outsb
test
inc
test
mov
ja
mov
jle
xchg
push
imul
mov
or
insl
sub
adc
and
dec
lret
ret
jns
stos
popa
xlat
stos
gs
xchg
sbb
lock
xchg
outsb
mov
fldcw
icebp
fildll
icebp
push
leave
mov
rclb
clc
and
mov
xor
mov
shlb
dec
jne
mov
cmpsb
addr16
xchg
or
mov
jae
imul
xor
add
mov
addb
xor
pop
adc
sub
push
imul
xchg
mov
push
std
xchg
neg
aas
cmp
fndisi(8087
cs
and
jl
movsl
push
sbb
mov
add
lret
movsl
mov
or
inc
cmp
push
dec
jne
sarb
pusha
push
jno
inc
das
popa
stc
mov
sbb
jae
add
jmp
shr
jmp
push
std
int3
mov
mov
outsb
stos
jb
pop
mov
pop
add
fbstp
loopne
jmp
das
test
pop
adc
sub
jp
sub
pop
in
fwait
outsl
sub
ficoms
push
xor
cltd
jg
sub
and
sbb
cmp
pop
fistpl
lret
add
pushf
push
iret
pop
imul
push
in
mov
sub
popl
sub
cltd
add
xchg
and
movsb
in
add
lret
push
mov
xor
pop
jmp
or
sarl
jno
ljmp
pusha
mov
push
fisttps
sti
mov
lods
adc
mov
lock
jae
pop
fnstcw
lods
cmc
push
shrl
loopne
cmp
hlt
jp
sub
in
shll
dec
inc
pop
frstor
in
mov
sbb
adc
imul
add
xchg
adc
inc
mov
stc
inc
loope
adc
and
test
sbb
popl
jg
rcl
or
dec
cmp
cmp
out
sub
fbld
cmc
cmp
add
dec
jnp
jbe
and
pop
ds
enter
add
out
mov
out
cmp
dec
popa
shl
or
xchg
repz
iret
sbb
push
rcrl
sub
test
shll
rolb
adc
inc
add
mov
popf
fsub
mov
test
or
sarb
imul
ja
mov
idiv
pop
pop
cmp
lret
fildl
cmp
out
jb
dec
and
ljmp
in
sub
scas
adc
xlat
push
mov
jno
xor
fidivrs
add
ret
push
cmp
vcomisd
jb
jnp
and
push
inc
scas
outsb
xchg
pop
pushf
adc
inc
dec
andb
adc
mov
popl
out
fidivrs
adc
cmp
insl
xchg
ss
adc
mov
cmpsl
push
mov
xchg
hlt
cmp
arpl
cmp
fisttps
aam
pop
pop
sub
adc
mov
nop
adc
icebp
fistl
fsts
sub
hlt
mov
enter
push
mov
xor
fptan
sti
frstor
mov
inc
jmp
xchg
in
cmp
lcall
int3
inc
jl
fbld
shrl
xchg
pmulhw
andb
mov
dec
popw
mov
jbe
clc
jb
mov
xor
mov
mov
pop
cs
jmp
xor
mov
mov
in
pop
rdmsr
mov
jle
mov
sub
mov
sbb
ret
sbb
pop
dec
cmp
pop
xchg
or
das
and
hlt
out
inc
mov
int3
in
gs
lret
dec
mov
test
test
pop
outsl
movb
add
test
mov
leave
ja
xchg
in
or
rcrl
push
sub
mov
push
mov
sahf
pop
sbb
nop
cmp
mov
mov
xor
bound
cmp
ja
and
rcrb
lahf
mov
in
dec
adc
insl
or
notb
hlt
inc
push
xchg
push
push
inc
push
mov
scas
jo
aaa
fldt
jmp
ret
in
inc
add
inc
punpckhbw
call
repnz
mov
scas
lods
adc
mov
outsb
in
sub
dec
into
or
loopne
fmull
popl
loopne
mov
pop
or
mov
fadds
test
and
pop
es
sub
sbb
and
xchg
adc
addr16
push
std
filds
andl
cmc
or
mov
std
ret
and
btc
mov
jg
shl
mov
fwait
inc
into
stos
lods
jge
pop
adc
hlt
icebp
pop
push
adc
lret
pop
sbb
stc
sub
mov
adc
cltd
mov
mov
dec
or
out
xchg
or
lcall
testl
shrb
sub
jmp
stos
sub
sub
scas
mov
aaa
xchg
sub
push
xlat
or
iret
mov
pop
cmpsl
out
mov
and
dec
mov
pushl
mov
cmp
xor
stos
cvtps2pd
inc
or
push
mov
js
stc
mov
cmp
fs
jle
pop
and
imull
lret
das
fisubs
xchg
push
rol
xchg
pushf
mov
push
inc
stos
test
cmp
in
dec
mov
inc
mov
lcall
out
inc
push
xchg
adc
daa
or
push
add
icebp
push
sbb
out
dec
lods
je
data16
pop
push
nop
cs
fs
mov
xor
mov
cmc
push
xchg
popa
adc
mov
push
cmp
and
cli
xlat
incl
sub
and
and
repz
sti
roll
popf
cltd
js
stos
ds
adc
jle
movsb
add
xchg
dec
dec
cmc
mov
or
cmp
xchg
add
jp
pop
jmp
cmc
jns
loop
int
test
scas
idivl
push
mov
inc
jns
ljmp
lock
dec
in
fistl
jae
cmpsb
dec
push
insb
adc
sub
aam
pusha
mov
jl
clc
sub
mov
mov
dec
inc
mov
dec
jle
sti
imul
stos
inc
inc
push
adc
sbb
pushf
jl
lret
leave
loopnew
mov
sub
subb
fnstsw
adc
cli
scas
sub
test
sub
xor
repnz
jo
mov
loope
jbe
ret
inc
push
mov
test
mov
mov
gs
dec
sub
test
sbb
xchg
popa
pop
ret
adc
and
or
pop
imul
xor
add
xchg
pop
jbe
adc
sbb
jne
or
js
xchg
cwtl
test
sub
jns
call
lcall
pop
lret
add
addb
push
pushf
jbe
mov
mov
cmc
xchg
xchg
dec
or
add
jecxz
pushf
sarl
imul
daa
cmp
mov
pop
je
popf
cmp
neg
adc
jge
stc
pop
hlt
xchg
cmp
xchg
adc
int3
movsl
jb
je
sbb
jmp
stos
ja
and
ret
aad
sti
mov
test
push
ja
dec
das
ljmp
adc
aas
mov
push
test
pop
das
fdivs
or
inc
test
jge
mov
xlat
mov
dec
arpl
mov
testl
popf
les
xor
shr
pop
jl
insl
cmpsl
mov
push
aam
ror
mov
cmp
add
sbb
jbe
and
scas
push
mov
dec
cld
jae
cmp
push
xchg
or
mov
adc
out
dec
push
int3
pop
inc
in
push
xlat
jl
rorl
fisubrs
out
imul
cmp
mov
repnz
popa
push
leave
stc
add
pop
out
fidivrl
sbb
dec
xchg
lret
jne
fcomip
inc
rolb
shlb
mov
movsb
sbb
insl
and
or
sbb
xchg
adc
and
aam
jg
xchg
test
int3
dec
add
outsl
enter
xorb
jle
sub
cmc
adc
shlb
imul
std
iret
adcb
adc
adc
out
xor
sub
push
ljmp
and
mov
push
sahf
jg
hlt
call
and
fbld
sub
xchg
xchg
imul
ret
sbb
fstl
cltd
popf
jbe
cltd
mov
adc
sub
adc
mov
push
and
jp
and
les
push
inc
cmp
std
cwtl
outsl
mov
loope
push
jge
inc
lret
and
mov
test
xchg
aam
dec
sbb
xor
sbb
xchg
add
xorb
cs
lahf
mov
mov
repz
rorb
mov
jnp
fisubrs
cld
mov
xchg
lret
sahf
fdivrl
cmp
fidivrs
sub
xor
xchg
pop
dec
loopne
pop
xchg
push
sbb
jle
repnz
ficoml
sbb
neg
icebp
mov
fwait
mov
push
xchg
fnstenv
sbb
stc
sub
dec
leave
fs
lahf
lret
lods
imul
lods
mov
jmp
mov
test
or
call
xor
scas
inc
mov
loope
push
xchg
jg
sbb
mov
add
xchg
mov
xor
jb
fcmovnbe
xor
jne
cmpsl
or
cmpsb
and
adc
xchg
lahf
fcompl
jg
not
fsubs
pop
sbb
mov
clc
call
dec
pop
mov
cmpsl
bound
xor
jl
scas
pop
mov
or
call
xchg
adc
jecxz
dec
lock
sbb
ljmp
sar
adc
cwtl
jne
nop
ljmp
aaa
jmp
dec
test
push
inc
ret
push
cmp
bound
aas
sti
gs
fidivrl
cmp
pop
mov
sub
push
movsl
xor
adc
test
lods
dec
lcall
push
push
push
push
push
test
fiadds
icebp
test
adc
xlat
dec
mov
int3
in
xor
repz
das
sub
stos
int3
je
sbb
push
jg
stc
paddusw
push
leave
mov
scas
and
int3
inc
rorb
adc
cmc
insb
hlt
jmp
push
mov
sti
rcl
or
jecxz
dec
jno
cmp
cmp
setbe
clc
andb
xor
pop
leave
movsl
push
xor
pop
out
imul
insb
mov
popf
xor
sub
call
sahf
test
sub
stc
add
inc
test
fbstp
sbbl
inc
cmc
shlb
jae
stos
mov
jge
xchg
adc
and
push
dec
rorb
push
nop
sub
ja
shr
mov
addr16
pop
pop
jl
and
test
xchg
dec
lret
or
push
pop
mov
bnd
add
fxch
call
pop
push
or
push
call
mov
jb
sahf
cmpsb
test
bound
sub
in
das
lcall
mov
xor
add
out
aad
lock
mull
fbstp
cmp
jecxz
sbb
push
jp
jno
fistl
in
leave
pop
sub
cltd
xchg
cmc
mov
sbb
push
push
and
sbb
repnz
sub
call
mov
xchg
fmuls
jp
mov
and
cwtl
shll
xor
fdivrs
pop
popf
mov
lea
cld
adc
js
or
aaa
mov
mov
mov
aam
pop
movb
inc
pop
xlat
inc
lcall
int3
xchg
movsl
inc
jo
pop
push
cltd
xor
adc
mov
mov
or
imul
insb
out
les
mov
or
xor
int
adc
ret
scas
das
add
or
scas
mov
push
scas
in
push
or
add
sub
pop
fadds
cld
adc
aas
push
jl
outsl
pop
repz
cmc
das
lret
pop
push
jl
mov
leave
cltd
mov
popf
das
pop
or
cwtl
fs
repz
jbe
shll
in
cli
add
pop
jmp
cmp
in
enter
push
jnp
xchg
pop
aas
cmpsl
sub
in
mov
xchg
rcrl
cmc
sbbl
xchg
mov
js
bound
mov
pop
sti
dec
inc
inc
scas
aas
rcrb
clc
mov
cmp
lea
out
repnz
aad
insb
mov
std
jg
dec
loopne
inc
or
xchg
dec
leave
andb
dec
mov
push
mov
lock
inc
mov
mov
mov
loop
lret
je
add
icebp
outsb
outsl
lcall
fstpl
js
xchg
mov
test
scas
mov
mov
sahf
xor
in
xor
lcall
int
sub
dec
inc
xchg
push
dec
sub
sub
jnp
stos
ret
jbe
test
xor
mov
xchg
push
xlat
push
mov
adc
adc
enter
jl
insb
push
test
xchg
dec
xchg
push
xor
mov
dec
in
leave
sub
scas
pop
push
adc
mov
inc
dec
mov
dec
xchg
and
in
addr16
cltd
gs
pcmpeqw
mov
mov
mov
xchg
mov
fisubl
jae
mov
movsl
mov
mov
fildl
mov
xor
add
jb
and
fwait
xchg
into
add
jle
or
arpl
and
nop
popa
test
jg
push
ss
mov
inc
sbb
pop
popa
jbe
mov
lods
fmulp
movsb
jae
sbb
movsl
stos
xchg
aas
aaa
xchg
mov
xlat
push
lret
inc
jne
test
in
in
fprem1
ljmp
loopne
lea
mov
push
add
popa
xchg
aaa
add
sbbb
jg
mov
cmp
sub
inc
inc
xor
mov
dec
faddl
or
push
push
icebp
sbb
mov
xchg
xchg
jae
sbb
push
pop
xchg
mov
hlt
paddusb
cmc
push
mov
xor
rcl
fucom
cwtl
mov
push
fdivs
push
hlt
in
pop
fsubl
dec
and
add
jp
fmul
xchg
mov
push
pop
lret
std
jne
call
cli
mov
out
pusha
les
test
xchg
clts
int
mov
es
lods
sub
shr
dec
cmpsb
push
popf
and
mov
scas
push
aam
lahf
push
insb
and
push
xlat
jns
dec
sbb
jecxz
lret
mov
fs
xchg
xchg
mov
jae
shll
mov
insb
mov
xchg
pop
pushf
pop
pop
cmc
inc
pop
mov
sub
dec
sub
in
inc
aad
inc
mov
and
out
inc
pop
jmp
mov
test
mov
lcall
adc
popa
mov
ficoms
mov
add
fcompl
aas
imul
xor
es
hlt
pop
js
imul
add
test
popf
xchg
std
mov
loopne
les
xchg
push
fucomp
xor
or
sar
lret
leave
daa
leave
push
lret
cmpsl
insl
mov
fmul
cli
in
in
sbb
xor
jecxz
ljmp
test
and
flds
push
fmulp
xor
mov
shl
cmp
mov
inc
in
adc
pop
int3
stc
pushaw
sbb
xacquire
cmpsb
mov
int3
dec
arpl
push
push
mov
mov
inc
push
mov
pop
xor
cmp
sub
popf
mov
test
mov
dec
fisubrl
sub
out
mov
add
cli
dec
mov
push
add
or
or
xchg
rolb
mov
aam
pop
sbb
fistl
sub
mov
jbe
xor
cli
in
fwait
push
sti
xor
push
and
popa
in
jle
ret
mov
adc
and
cmp
push
cwtl
xor
arpl
lfs
imul
in
add
mov
cmp
jns
mov
fstpl
out
jo
sti
add
add
mov
fdivrs
divb
push
push
inc
ret
ds
cltd
mov
das
cwtl
cltd
hlt
jns
and
out
pop
iret
in
test
fcomps
and
sti
aam
test
call
ficoml
sbb
lock
sub
scas
push
fdivs
sahf
addr16
pop
inc
int
sbb
loop
insl
sbb
add
daa
sbb
std
inc
lods
popa
add
inc
ljmp
mov
pop
mov
mov
fisubs
add
out
scas
inc
mov
jno
ret
scas
call
pop
ljmp
xor
push
ss
ret
les
subb
and
fbstp
mov
dec
lds
lret
mov
cli
lock
mov
mov
jl
sub
or
jmp
add
and
pusha
mov
nop
js
sbb
pop
xor
add
inc
xchg
add
sbb
push
adc
out
lods
sbb
jb
scas
mov
sbb
std
lds
rclb
mov
mov
push
shrl
mov
popf
fcoms
jg
xchg
pop
loopne
mov
shrb
jbe
dec
sti
jl
inc
xorb
popf
cs
xchg
fdivl
test
fdivl
xlat
mov
mov
xchg
mov
jmp
mov
dec
mov
mov
rcl
pushf
cmp
test
dec
fdivl
ret
outsl
push
push
sbb
adc
dec
lods
xor
imul
xchg
icebp
and
popf
sbb
pop
sbb
adc
ss
push
ss
cwtl
adc
mov
jnp
je
mov
xor
test
dec
popf
fstpl
and
xchg
inc
mov
lea
daa
mov
sbb
xchg
sub
fbld
mov
outsl
pop
mov
xchg
sbb
outsb
add
int
iret
test
in
scas
inc
subb
cltd
test
add
lods
or
les
and
call
cmc
sub
icebp
or
pop
adc
mov
mov
mov
or
push
mov
dec
repz
sub
loope
mov
xor
mov
loopne
daa
scas
cmp
mov
stos
mov
test
xor
mov
xchg
cmp
mov
jbe
je
push
lcall
dec
push
daa
sahf
fsubp
lcall
xchg
cmp
mov
xchg
inc
int
cmc
out
in
sub
lds
sbbl
outsl
fstps
or
popa
jno
arpl
outsl
cld
sub
cmpb
movsb
xchg
mov
es
or
xchg
xor
out
xchg
inc
add
test
fmull
cmp
sub
cmp
mov
pop
ljmp
push
in
inc
jle
lcall
ss
xorl
stos
cmpl
loope
add
inc
addr16
sub
pop
jl
mov
ret
jl
sub
popf
scas
dec
mov
pop
ljmp
xchg
push
and
call
pop
out
adc
rep
shll
bound
ljmp
pop
lret
pop
xchg
pop
jle
gs
inc
and
push
push
lahf
mov
icebp
mov
jnp
pop
mov
stos
popf
das
add
shll
add
lahf
jbe
adc
mov
enter
in
movsl
or
mov
loopne
add
sub
int
mov
jne
in
andl
or
mov
popa
pushf
jno
push
lods
adc
xchg
pop
jne
sar
pop
arpl
loopne
push
cmpsl
mov
mov
movsb
aaa
mov
pop
decb
mov
jg
and
jg
gs
movsl
mov
shlb
mov
add
nop
mov
pop
repnz
nop
sahf
jp
into
into
xchg
test
inc
cmpsb
dec
cltd
pop
jb
push
pop
mov
and
mov
xor
aam
lcall
in
cmc
mov
clc
fldl2t
out
clc
dec
bound
imul
lahf
mov
sub
xchg
ret
sub
jnp
rol
popf
mov
mov
mov
je
std
xchg
and
sub
fnstenv
xor
push
gs
fisttpll
xchg
cs
mov
out
gs
mov
ds
in
and
in
mov
int3
out
pop
fwait
add
or
sub
pop
rcll
push
loopne
ret
dec
lods
cmp
mov
add
push
dec
mov
inc
push
mov
cmpsb
sub
xlat
push
out
xor
push
jg
les
icebp
lods
lret
pop
js
jl
push
bound
mov
aas
aas
iret
sbb
out
or
jae
add
jle
roll
pop
mov
mov
and
lds
mov
cs
jae
pop
cmp
loope
inc
jmp
push
fldenv
ja
or
dec
and
mov
leave
cmpsb
enter
dec
lret
add
les
dec
or
jb
xchg
jo
dec
mov
and
imul
jns
mov
pop
cmp
fsubl
fs
pop
in
cmpb
or
lods
xor
lea
sbb
stos
and
xchg
mov
xlat
loope
mov
fmuls
mov
add
or
push
pop
cwtl
pop
xor
aad
icebp
and
cmpsl
xchg
mov
callw
adc
jae
add
dec
jae
inc
ss
adc
loop
aaa
push
push
push
bound
popf
int3
jle
mov
pop
mov
sbb
pop
inc
inc
push
leave
xchg
iret
sti
outsl
dec
push
fimuls
cltd
jae
xor
aam
cmp
and
push
xchg
lock
mov
rcrl
adc
dec
jo
dec
push
fidivrs
int
or
push
out
fbld
or
xchg
cmp
rorb
test
out
cmp
xchg
enter
outsl
das
into
jecxz
mov
sub
mov
push
push
jnp
jle
dec
pop
mov
inc
fists
pop
inc
mov
or
inc
clc
repnz
and
movsl
inc
adc
lods
arpl
mov
adc
push
gs
sub
rolb
push
mov
fcomps
ja
adc
fistps
fsubrl
pop
out
xchg
inc
mov
aad
xor
cmp
push
dec
xlat
dec
rcr
inc
push
fsubr
loop
jp
sub
mov
jecxz
les
and
cmpsb
mov
loope
mov
xchg
lret
fsubrs
lret
popa
xor
jmp
jno
ret
xchg
scas
cmp
jnp
fnstcw
popa
movsl
pushf
pop
xor
and
mov
pop
mov
xor
xor
and
dec
stos
mov
push
adc
roll
inc
mov
cmp
mov
mov
sub
ss
mov
dec
pusha
cmpb
cmpsb
ss
jmp
ja
bound
insb
cmp
sbb
xchg
xor
dec
mov
mov
pop
xor
jg
dec
jno
scas
repz
mov
and
adc
or
push
pop
je
cltd
lahf
outsb
dec
cmp
inc
mov
push
fsincos
jae
or
jb
mov
xchg
pop
out
xchg
stc
pop
mov
es
or
add
hlt
mov
xchg
xor
add
popf
movsb
push
inc
subb
mov
and
xchg
xchg
scas
icebp
adc
lcall
daa
into
cmpsl
shll
daa
jl
mov
jno
scas
ror
fs
mov
cltd
icebp
mov
push
jg
test
dec
fadd
std
lahf
dec
add
jp
decb
hlt
or
ss
jns
adc
dec
inc
add
push
mov
dec
lahf
cmp
stos
xchg
test
pusha
fisttpll
sub
add
inc
push
dec
mov
jle
push
sbb
lahf
loope
loop
aad
sub
sahf
push
jno
imul
jg
xchg
add
dec
sbb
arpl
kmovd
test
fnsave
popl
cmp
icebp
push
fbstp
add
movl
push
sbb
lcall
prefetch
or
fnstsw
insb
hlt
sbbb
push
or
dec
pop
ficompl
lret
add
aam
or
push
out
xchg
je
loopne
dec
add
sahf
dec
cld
mov
xchg
lret
ds
arpl
lret
out
jnp
test
cld
into
push
leave
scas
lods
sbbb
sti
int3
scas
xchg
stc
lds
inc
add
or
push
insl
imulb
xor
mov
sub
es
lock
cmpsb
or
fldenv
leave
icebp
push
std
jge
and
sbb
pushf
repz
int
fisttps
sub
add
dec
aaa
clc
push
pop
jle
push
aaa
xchg
psubusw
xor
lahf
decl
loopne
jo
call
add
lods
imul
sbbl
push
jae
lds
push
mov
sti
xchg
push
cmp
dec
movsb
sub
jne
xchg
mov
cmp
mov
imul
test
or
sbb
jge
adc
dec
loop
xchg
push
adc
cmp
push
or
repz
outsl
xchg
add
xchg
push
xchg
movsl
mov
inc
js
in
int
mov
insb
jbe
inc
in
dec
loopne
cmp
push
fucomp
pushf
aaa
xchg
jb
into
add
ds
outsb
data16
pop
arpl
dec
push
mov
jmp
addr16
dec
xor
sbb
fmull
ss
xchg
adc
scas
xor
in
mov
push
adc
sbb
sub
out
out
sub
in
sub
jl
xor
push
jl
lods
lret
mov
push
scas
xor
xor
or
adc
push
sub
orl
ds
ret
aas
mov
xchg
xor
lret
xor
push
imull
jns
dec
lret
adc
addr16
out
mulb
push
push
mov
and
lahf
loope
push
dec
fsubrl
sub
adc
push
test
outsl
pop
test
out
inc
adc
dec
mov
icebp
fildl
rorl
lret
mov
push
stos
fwait
and
ljmp
xchg
push
mov
mov
pusha
or
xchg
das
mov
pop
or
mov
pop
mov
mov
adc
xchg
add
jo
into
test
flds
jl
je
loop
mov
mov
push
push
loop
stos
jecxz
popf
mov
sahf
sub
cmp
cmp
jl
cmp
and
aam
orl
sub
sbb
test
mov
xchg
sbb
jecxz
mov
cmp
insl
push
outsl
jb
jbe
sar
loope
rorl
das
enter
xor
lods
push
aam
fdivs
xor
xchg
stos
add
add
sbb
push
pop
xchg
hlt
push
add
fisubrs
push
shll
hlt
inc
shlb
and
mov
or
or
jnp
leave
sub
mov
mov
movl
sub
push
xchg
call
mov
and
sub
pop
ret
jns
xchg
or
int
sbb
decb
enter
iret
cmp
iret
sti
adcl
insl
cmpl
fadds
loop
negl
test
and
or
movsl
mov
xor
outsl
or
push
push
adcb
stc
xor
fmuls
mov
inc
xor
fwait
pusha
jae
cli
clc
dec
ja
sub
sbbb
mov
pop
shr
shrl
in
pop
out
cli
sbb
mov
cmpb
mov
pop
sti
outsl
or
xchg
lahf
and
sbb
jp
mov
push
or
popf
jnp
fisttpll
sbb
xchg
xor
call
shr
fidivl
push
mov
push
xchg
push
shlb
mov
dec
gs
adc
dec
sub
push
push
inc
adc
sbb
jg
sbb
jbe
fistps
pushf
mov
movsb
cmc
in
xor
repz
ja
or
out
push
aad
cmp
xor
pop
lods
cmp
fs
outsl
cltd
or
loope
pop
je
inc
lret
xor
lret
scas
into
outsb
mov
mov
xor
in
jne
movsl
mov
xchg
xlat
xchg
pop
rcr
jge
push
mov
das
xor
sbb
xor
adc
in
es
loope
ret
imul
icebp
ss
mov
lcall
cmp
add
rclb
rorb
mov
scas
test
push
in
leave
inc
ja
jge
outsb
xchg
mov
mov
nop
out
hlt
je
int
dec
jae
out
dec
fsubrs
ljmp
lahf
in
push
mov
mov
mov
daa
sub
andb
lock
mov
sub
roll
rorl
inc
push
lahf
roll
xchg
mov
add
data16
mov
sbb
lock
adc
add
nop
xor
shlb
xlat
jnp
and
jp
data16
and
enter
das
pop
adc
xchg
push
dec
or
imul
push
xor
sbbb
sub
cmp
xorb
cld
scas
inc
imul
enter
sub
imul
dec
mov
jmp
sub
xor
inc
cltd
subb
and
mov
hlt
and
pop
push
pushf
jns
add
movsl
push
inc
mov
cmp
jb
cmp
negb
les
popf
xor
aas
jecxz
sub
lods
subl
push
mov
push
xor
adc
mov
jnp
xor
jno
or
jl
jno
stc
rcrb
inc
xor
aam
xor
dec
leave
pop
insb
push
std
cmc
inc
rol
push
dec
rcrb
or
inc
cmp
out
xchg
jne
push
mov
clc
leave
arpl
into
add
test
jmp
fistl
mov
movsb
popf
pop
or
fmuls
push
sbb
xor
xchg
aas
jo
test
push
mov
inc
sub
jle
jnp
xchg
cmpsb
or
ds
imul
shrb
inc
xlat
outsl
mov
xchg
stos
xchg
or
mov
pushf
sbb
mov
xor
das
mov
leave
xchg
aas
cld
xchg
fs
pop
xchg
dec
daa
pop
inc
dec
popa
shlb
or
mov
or
lock
adc
lea
inc
mov
clc
int3
pop
fdiv
rol
leave
sbbb
mov
sub
test
fnsave
imul
test
in
sbb
pop
loopne
cmp
ret
jp
xor
pop
pop
fisubrs
std
rclb
insb
movsb
int
in
and
sar
sbb
xchg
lcall
cld
sahf
dec
push
sbb
dec
inc
jecxz
mov
es
push
hlt
jno
fisttpl
ret
test
lock
cmp
loop
xchg
cs
stos
xchg
outsb
add
xchg
xor
mov
aam
jl
pusha
add
xchg
jp
xchg
adc
xchg
jo
cmpsb
repnz
cmp
adc
push
fidivs
dec
push
shll
push
mov
rorl
adc
and
test
in
jns
andl
ss
imul
popa
test
pop
movsl
mov
sbb
xor
inc
pop
or
lcall
fidivl
sti
clc
jge
iret
cltd
cmp
add
jge
or
rcll
cmpsl
jl
outsb
iret
rol
popa
adc
in
mov
cmp
addr16
hlt
adc
xchg
test
mov
xchg
shl
iret
cmp
test
pop
xlat
notl
cmc
in
fdivrs
repz
mov
sbb
ss
fisttpl
lock
jp
sub
rcll
push
hlt
data16
imul
mov
pushf
mov
outsl
ljmp
fs
fsubrs
mov
aas
adc
pop
lret
sahf
je
cmp
icebp
ret
push
cmp
imul
dec
jne
addr16
stc
mull
inc
into
mov
sub
inc
mov
xchg
push
cmp
pop
and
adc
lahf
adc
aas
push
loopne
in
sarb
sub
mov
in
sub
cmp
pop
jae
or
insb
inc
clc
jbe
pop
andl
fdivl
call
and
cmp
data16
mov
jae
sub
jae
decb
pop
and
jnp
sbb
fstps
pop
and
sbb
inc
ja
shl
mov
sbb
in
mov
fwait
pop
int
mov
and
or
out
and
mov
les
cmp
in
mov
and
adc
adc
lcall
add
or
in
jp
dec
adc
je
repz
mov
inc
cs
or
es
jo
loope
add
add
xor
or
and
xchg
sbb
mov
scas
jp
sub
pop
in
dec
jecxz
loopne
mov
repnz
mov
lock
sbb
scas
jno
fstl
lcall
sub
decl
add
leave
inc
mov
sbb
add
or
jp
inc
test
and
xor
xor
into
rcrb
sub
cmpsb
fscale
add
insb
imul
or
mov
adc
pop
add
in
out
pop
jno
out
mov
jo
sahf
dec
or
dec
mov
divl
inc
test
cltd
mov
pop
dec
mov
fsubl
adc
inc
lret
push
xor
mov
fstps
sar
les
imul
pop
lahf
add
xorl
dec
ljmp
mov
je
fnstenv
mov
dec
jne
in
in
mov
pop
lahf
sub
sarl
iret
and
cvtdq2ps
int
mov
lahf
int
addr16
mov
aaa
es
inc
dec
push
adc
test
inc
shrl
decl
push
add
jp
enter
in
aam
or
inc
mov
les
sbb
subb
lret
into
ljmp
mov
sub
insl
mov
jb
vucomiss
mov
fdivrs
and
push
mov
sub
call
mov
mov
divb
mov
adc
fidivrs
fcmove
or
jo
int
testl
mov
pushf
add
pop
mov
jg
lahf
jp
ljmp
adc
lock
jb
jb
adc
rcrb
arpl
out
daa
mov
sub
mov
idiv
loope
xor
ret
xor
pushf
cld
int3
add
xor
fdivrl
xor
nop
dec
sub
add
jae
add
mov
sbb
mov
in
or
nop
adc
in
pop
and
daa
push
mov
fs
mov
lret
leave
xchg
adc
lret
mov
xchg
cmpsl
dec
xchg
sti
push
cmp
xchg
push
test
mov
jecxz
or
inc
popa
add
stc
push
loop
in
pop
jno
popa
mov
jns
mov
xor
mov
adc
mov
in
jae
ret
sub
popf
mov
popa
sub
sti
xchg
inc
adc
movsl
and
xchg
fsubs
sbb
jo
cmp
js
add
out
jle
hlt
fisttps
mov
cld
mov
out
add
dec
lods
cmc
pop
mov
inc
push
mov
mov
int
fcoms
cltd
push
lahf
xchg
into
mov
pop
mov
cmpl
aas
xlat
lds
or
ror
scas
push
cmp
jmp
mov
adc
push
ret
stc
popf
cmp
xor
lahf
cmp
mov
or
push
pop
adc
rol
lods
je
pop
inc
mov
icebp
xor
or
mov
rcll
ror
cmc
xchg
mov
sbb
pop
xor
rorl
nop
push
gs
mov
or
in
scas
ljmp
mov
sbb
and
loop
cmc
dec
mov
nop
pop
or
mov
or
xchg
aaa
hlt
hlt
push
mov
mov
add
aam
ljmp
add
pop
mov
in
sbb
xchg
mov
cmp
sbb
push
sahf
jno
hlt
sub
fcmovnb
fldcw
cld
jle
insl
push
cs
fisubrl
jbe
sbb
mov
sbb
inc
mov
dec
add
js
cli
dec
pusha
jp
outsl
cwtl
jb
dec
pop
mov
outsb
xchg
add
cs
push
inc
testl
fdivr
xchg
jl
mov
push
scas
cmc
mov
mov
mov
or
cmc
cmp
call
jp
mov
dec
sbb
pusha
jl
and
fwait
aam
ret
cmp
inc
adc
jno
imul
loop
cmpb
jae
mov
daa
sti
mov
cld
xchg
bound
js
pop
movsl
and
rcrb
mov
pop
addr16
hlt
lea
xlat
push
mov
mov
stos
or
lods
xchg
or
dec
cmpsl
mov
test
test
fstpt
ficomps
inc
push
mov
or
ret
in
jge
sbb
mov
addb
push
cmp
inc
cmp
inc
pop
stos
and
xchg
aaa
jb
inc
cmp
ss
ret
pop
xlat
or
shlb
fyl2xp1
mov
mov
sbb
icebp
popa
mov
push
mov
dec
outsb
addr16
xchg
jp
stos
inc
mov
roll
xchg
out
mov
push
pop
inc
push
test
pop
mov
ds
push
test
mov
mov
aam
fisttps
fisubrs
test
push
jb
and
out
xchg
lods
cmp
nop
cmp
and
mov
sub
jo
popf
mov
mov
jle
into
loope
loop
sbb
mov
fidivrs
in
xchg
pop
jne
es
arpl
jge
je
jmp
and
fcomip
fldt
nop
jo
xchg
ret
in
jmp
mov
jb
in
shr
sub
insb
dec
out
and
aad
add
iret
push
mov
sub
push
rorb
pop
xchg
cmp
ds
jae
lods
mov
pop
sbb
mov
lods
out
mov
add
test
bsr
outsb
jmp
cmpsb
xor
mov
sub
inc
movsl
fmuls
fld
mov
pop
loopne
push
or
je
mov
js
inc
adc
dec
jne
aad
mov
and
inc
cli
outsl
outsl
int
dec
ja
and
fsubl
popa
mov
inc
mov
pop
mov
xchg
out
sub
adc
or
dec
inc
test
out
jge
lea
xchg
dec
int
or
jb
stos
in
mov
rcrl
shrb
popf
mov
pop
andb
and
inc
fiadds
mov
call
sub
fcoms
lea
cmp
call
jge
sbb
iret
mov
adc
fstpt
inc
dec
xchg
add
shl
jle
int
jb
movsl
or
lret
sbb
in
cli
xlat
mov
int3
push
add
pop
daa
ffree
das
mov
out
mov
add
push
pop
les
das
addl
xchg
fldcw
testb
push
jp
adc
jmp
arpl
ljmp
adc
sub
lock
dec
jp
jns
aaa
fs
adc
push
pop
pop
popf
jo
inc
scas
addr16
or
cmpsl
jae
adc
out
dec
fsubrs
ret
repz
mov
ds
out
aad
push
and
in
sub
roll
xor
mov
push
cmpsl
aaa
pop
nop
outsl
dec
pusha
push
ja
ret
lea
sub
cs
les
fnstcw
adc
push
fistps
test
add
sub
push
cwtl
les
sar
mov
orl
ret
adc
test
cs
mov
outsl
ret
jne
push
mov
mov
subl
fnsave
cmp
xrelease
jb
clc
xchg
jecxz
sub
sub
shrl
mov
and
push
shll
orl
dec
jbe
jmp
push
clc
dec
xor
mov
pop
in
cli
pop
cmp
inc
pushf
sbb
push
in
repnz
push
sbb
sub
mov
xchg
mov
sub
mov
adcb
cmc
adc
add
mov
dec
addr16
xor
push
mov
cmp
jmp
xlat
pop
pop
call
jo
out
mov
lock
movsl
leave
xlat
test
jb
mov
cmpsl
aas
pop
addl
icebp
rcr
jb
vmaxss
mov
xor
enter
js
pop
out
xor
push
sbb
add
loopne
mov
push
sahf
inc
stc
and
pop
hlt
hlt
addr16
xchg
mov
push
decb
cmp
popf
sbbl
sbb
es
sub
adc
das
shr
leave
test
dec
pop
xchg
xor
pop
mov
jae
and
shlb
ja
mov
icebp
xchg
mov
or
aaa
cmp
and
xchg
cwtl
mov
cs
push
hlt
mov
jb
bound
push
add
inc
icebp
movb
sub
pop
adc
mov
popa
add
enter
inc
and
mov
stos
fbstp
insl
mov
xchg
dec
fists
dec
add
and
jb
pop
stos
inc
mov
mov
hlt
cli
lahf
push
jns
pop
jp
aam
out
inc
cmp
jne
fidivrl
cmp
scas
and
stc
jnp
sahf
pop
jae
out
imul
in
xor
xor
sub
sarl
pusha
in
and
cwtl
jb
lds
xor
mov
inc
cmp
cmp
inc
mov
in
mov
mov
dec
sbb
inc
mov
jbe
pop
enter
repz
inc
mov
adc
aam
cltd
addl
pop
mov
test
cmc
xchg
inc
sub
out
aaa
inc
sbb
sbb
dec
pop
sbb
sbb
into
and
mov
movsb
inc
jmp
push
pusha
cmp
xchg
inc
iret
jae
and
sub
rcll
test
mov
pop
fsubrp
es
xor
in
cmp
or
pop
push
stc
cld
aas
cmp
and
mov
mov
stos
lcall
sbb
inc
cmpsb
xor
and
rcl
push
fucom
pop
out
cmp
aas
iret
frstor
rclb
scas
out
stos
or
adc
xchg
orb
add
add
andb
mov
sbb
das
mov
xor
fld
loope
imul
jmp
ficoms
lods
ljmp
fsubrl
cmpsl
pop
rcrl
or
sbb
or
push
fistpl
loope
mov
aad
and
or
cmpsb
cmp
adc
sub
cs
or
add
imul
insb
shll
imul
push
mov
pop
push
pop
inc
add
xchg
ret
les
and
mov
mov
scas
mov
xlat
jae
sbb
cmc
std
dec
or
imul
sbb
and
jnp
vpmaxsw
test
addl
loope
rclb
jg
imul
xchg
dec
loop
xchg
aaa
test
cmp
mov
inc
jbe
gs
add
call
shr
jno
xlat
mov
outsl
stos
xlat
scas
jo
sbb
repnz
jne
mov
fnstcw
lahf
imul
pop
sbb
add
sub
xchg
cmpsl
push
adc
add
mov
or
fs
stc
rorl
mov
test
fwait
push
je
adc
sub
push
rol
addb
inc
insl
lahf
ss
xlat
aam
and
fldenv
arpl
ret
inc
sub
sti
lock
xor
add
inc
scas
imul
sub
in
sub
rclb
test
popa
ljmp
insb
incb
mov
jo
sbb
sbb
mov
cld
sbb
ss
aaa
fdiv
sub
aas
mov
pusha
jbe
xchg
movsb
lcall
idivb
negb
mov
lock
in
add
mov
ret
dec
sub
xchg
cmp
mov
in
enter
lods
adc
push
push
push
xlat
scas
xchg
aaa
mov
stc
decl
or
push
xchg
cli
test
jb
and
in
loop
cmp
add
clc
or
inc
mov
xor
cmpl
pop
adcb
add
pop
insl
mov
mov
js
iret
dec
cmp
push
or
movb
fsubs
lret
out
and
adc
fistl
jnp
dec
jnp
js
imul
fs
ljmp
sub
pop
mov
sub
dec
mov
loope
fdivrs
ret
setb
test
outsb
repnz
add
or
outsl
jecxz
les
or
js
and
and
inc
pop
inc
cltd
cmpsl
dec
lock
je
les
fdivrp
mov
inc
fcomps
mov
adc
mul
mov
mov
pop
inc
pusha
leave
dec
fldt
js
in
mov
fs
lea
cmpl
movsl
xchg
pop
or
sub
out
inc
or
cmp
out
fstps
mov
xchg
sub
sub
out
sub
adc
movb
arpl
jae
cmp
jne
or
mov
lahf
and
mov
in
jecxz
jmp
push
shrl
and
out
sbbl
lahf
lahf
dec
mov
mov
data16
dec
aaa
fisubrs
addb
adc
and
add
nop
inc
adc
pushw
jg
cmc
inc
out
js
inc
call
in
sub
nop
inc
ror
les
icebp
sbb
xor
xor
jno
in
xlat
push
adcl
sub
cli
dec
mov
xchg
add
push
pop
inc
adc
fwait
inc
jl
insb
stc
jle
mov
pop
shrb
xchg
xchg
adc
inc
fisttpll
xchg
jp
lods
push
jl
aad
push
pop
movsb
sub
mov
push
insb
pop
cmp
bnd
jae
insb
dec
ds
push
push
pop
shrl
sahf
sbb
pusha
xlat
xorb
mov
mov
aam
push
mov
outsl
mov
or
pop
xchg
es
arpl
ret
xor
or
repz
ljmp
pushf
xchg
adcl
ljmp
inc
mov
sub
out
outsb
jno
repz
lahf
add
jno
pop
mov
dec
add
pushf
das
xchg
stos
fsubrl
add
and
push
xchg
subb
fisubs
into
push
xchg
popf
push
js
ss
cli
xor
in
in
push
repz
xchg
adc
frstor
ficomps
mov
rclb
mov
lods
pop
mov
and
adc
jp
subl
repz
out
test
cmp
movsl
int3
shrb
add
fldt
add
add
jb
call
mov
pop
mov
data16
in
scas
or
pop
mov
inc
ljmp
push
arpl
jg
xchg
add
xchg
xor
sub
or
rcll
push
push
push
pop
jl
sbb
dec
test
mov
aaa
leave
call
xchg
push
pop
gs
push
inc
mov
adc
push
out
adc
shll
mov
add
mov
push
subb
arpl
mov
fbld
add
repz
call
mov
mov
lcall
pop
lea
ret
in
popa
inc
mov
pop
cmpsl
sbb
inc
or
lea
add
hlt
ja
repnz
jl
jno
inc
jl
jmp
lahf
sbb
aaa
sub
jb
inc
or
mov
imul
movsl
arpl
ss
test
nop
xchg
bound
in
mov
mull
jl
cmpsl
mov
out
and
imul
gs
mov
roll
sahf
add
pop
jg
outsl
or
mov
xchg
shl
das
jg
sbb
jns
pop
xlat
hlt
arpl
mulb
push
sahf
aaa
inc
pop
sbb
mov
popf
mov
aam
aaa
xchg
sbb
scas
aas
dec
cld
dec
push
cld
dec
mov
jge
mov
and
cmpsb
nop
push
inc
dec
outsb
or
push
addr16
js
fistps
cmp
cmp
leave
hlt
jnp
push
push
sahf
ret
pusha
rol
fildll
jge
push
add
ljmp
pop
movsl
ret
pop
nop
jle
ds
outsl
sbb
xchg
jge
rcr
out
rclb
mov
outsl
jno
cmp
imul
adc
sbb
inc
shr
pushf
add
fdivrs
lds
rep
push
ret
mov
sbb
push
rcl
popl
fiaddl
sbbl
mov
hlt
fwait
jp
cmpsl
cmp
and
repnz
loop
push
jne
mov
fcompl
jecxz
dec
jb
cmp
hlt
jae
in
subl
jb
int
into
and
ja
test
aam
jmp
sbb
push
leave
jg
xchg
and
inc
int3
push
and
fs
decb
sbb
pop
and
xchg
sar
jne
in
lret
add
out
mov
or
sti
pop
push
adc
in
xchg
xchg
push
int
jno
mov
int
xor
lret
adc
dec
iret
mov
pop
xchg
repnz
ficoms
inc
xchg
fsts
add
inc
mov
mov
add
cltd
scas
dec
adc
in
and
mov
xchg
push
pop
cmp
or
ja
dec
sbb
mov
orb
rcll
or
repnz
jo
mov
or
push
dec
add
pop
es
fbstp
pop
mov
cmp
or
stos
cli
subb
jbe
enter
fildll
pop
test
in
fiaddl
mov
insl
inc
xor
dec
pop
inc
lret
leave
sbb
loope
insl
std
jge
dec
lods
rorb
push
faddl
mov
cmp
out
push
pop
lahf
jg
cwtl
loopne
push
cmpsb
ficoms
cmp
xor
mov
ffree
xchg
js
pop
stos
dec
xor
insl
jne
lea
lcall
and
dec
mov
leavew
push
push
mov
lcall
sahf
push
lock
jbe
add
sbb
push
or
in
and
pop
mov
sub
daa
mov
inc
pop
into
xchg
pop
add
jge
icebp
fwait
pop
sbb
enter
or
sti
jb
mov
stc
mov
jmp
shll
pop
test
mov
cli
or
mov
bound
nop
inc
jbe
test
pop
mov
add
rorl
or
clc
insb
scas
loope
mov
sbb
icebp
cmpsl
daa
mov
jg
lret
ja
int3
mov
pop
dec
push
fdivl
fcmovne
lret
push
inc
xor
sti
loope
popa
push
sahf
lock
pushf
aad
test
xchg
lods
and
fwait
pop
in
sti
mov
imul
fnsave
inc
bound
fists
push
out
imulb
repz
int
cmp
mov
subl
cwtl
aam
jp
jmp
insb
and
insb
jmp
mov
mov
or
push
shll
outsl
push
push
aaa
jmp
jae
or
mov
mov
sbb
mov
fcompl
cmp
sar
xor
in
push
loop
dec
xor
clc
mov
filds
pop
dec
add
fistl
or
aam
imul
mov
xchg
jns
ret
pop
idivb
adc
or
div
jo
mov
fidivrl
mov
cmpl
mov
jbe
push
push
scas
pop
jge
mov
push
scas
ja
xchg
lcall
or
add
fnstenv
cmp
arpl
and
scas
push
jl
je
jbe
outsb
mov
cli
adc
roll
fs
fdivr
ja,pn
jmp
jae
and
push
in
cmpsb
dec
mov
jae
nop
lret
push
mov
mov
imul
dec
lock
test
or
or
dec
pop
imul
sti
outsb
enter
scas
fadds
dec
xor
add
jo
cltd
pushf
sub
cmp
dec
testl
mov
fs
leave
cmpsb
inc
lret
adc
jge
into
inc
sbbl
mov
call
add
sar
adc
shlb
jecxz
and
xchg
ljmp
fidivs
and
xchg
imul
inc
int
xor
inc
adc
or
jmp
push
mov
push
cmc
sbb
inc
push
pusha
inc
cwtl
mov
andb
mov
orl
push
aam
repnz
ljmp
ret
loop
rclb
mov
jp
test
xorb
inc
adc
scas
sbb
loopne
in
or
sub
cmp
add
inc
jb
aaa
js
cmpb
xor
dec
movsb
mov
lock
mov
ljmp
mov
fwait
mov
adc
ja
pushf
dec
push
inc
not
aas
xchg
jae
lea
inc
adc
out
inc
xor
stos
push
mov
cwtl
push
sti
mov
jle
or
cli
ja
cmp
sub
and
leave
cltd
mov
and
xchg
push
arpl
aam
inc
adc
les
dec
insl
jo
jb
ds
inc
mov
stos
sub
mov
pop
push
mov
lods
mov
ret
cld
sub
sub
icebp
popa
xor
mov
xchg
xchg
stos
add
inc
cmp
sub
mov
insl
dec
sub
in
push
sarb
dec
xchg
dec
push
add
movd
shll
mov
stos
pop
aaa
inc
insl
inc
cmpb
and
ret
add
inc
iret
loopne
push
hlt
arpl
jnp
int3
inc
mov
push
in
sub
jbe
xlat
sub
dec
clc
or
push
sbb
out
aam
pusha
sub
cmp
int3
or
lods
mov
mov
test
sub
jg
pop
stos
mov
stos
out
mov
pushf
scas
mov
jge
sub
aas
in
dec
inc
mov
jl
xor
iret
cmp
pop
stos
loopne
fisubrl
mov
dec
lods
out
aam
pop
in
ss
mov
or
xor
stc
sarb
insl
scas
push
imul
cmc
es
cmp
add
int3
mov
paddq
call
push
rcrl
pop
cmpl
pop
imul
sbb
enter
je
xchg
cmpsb
add
jno
xchg
and
lret
add
add
imul
jb
lock
test
loope
jns
cmp
inc
sub
cmpsb
add
aam
push
ljmp
sbb
xchg
mov
js
pop
mov
lahf
cmpsb
fistpl
xor
fcmovb
inc
out
mov
mov
lock
cmp
jno
in
pop
jns
dec
rcl
fwait
mov
add
xor
pop
mov
cmp
test
loope
ds
pop
dec
push
popf
mov
cmp
cmpsl
jns
leave
and
imul
nop
xlat
in
add
xor
inc
iret
adc
mov
pop
mov
pop
shl
fwait
xor
out
gs
cmpsb
ret
aam
mov
push
or
inc
xor
stc
aaa
adc
inc
pop
fsubrs
clc
jne
xchg
out
enter
and
mov
out
pusha
pop
ret
orl
push
push
mov
push
nop
xchg
lds
jo
cmp
inc
in
out
inc
mov
and
inc
je
inc
mov
fcomi
mov
or
push
inc
sbb
mov
ja
cmp
icebp
stos
sub
dec
cmp
hlt
notb
xchg
xlat
jp
iret
push
add
push
nop
lcall
inc
inc
adc
arpl
pop
inc
imull
aam
gs
nop
xorb
mov
push
mov
push
repnz
push
jecxz
push
les
shlb
inc
sub
js
std
ja
int3
inc
pop
xor
popa
pop
ud1
loopne
xor
sbb
jecxz
stos
test
and
test
mov
mov
cli
cmp
xchg
sbb
enter
stos
cwtl
bound
in
sbb
fwait
xchg
mov
inc
xchg
mov
out
mov
fnstenv
push
stc
cld
mov
lock
test
inc
pop
movsb
scas
leave
push
mov
pop
js
andb
rep
cwtl
cmp
loope
dec
std
or
pop
aad
addb
aam
sbb
jmp
in
loop
adc
xchg
scas
mov
cltd
aas
rcrl
sbb
repz
lcall
leave
pop
lcall
mov
dec
jmp
enter
call
xor
cmp
add
bound
jg
and
xor
sbb
or
outsl
sub
inc
mov
mov
aas
shlb
sbb
into
or
or
aad
fwait
dec
lea
xchg
mov
cs
scas
js
bound
push
dec
bound
sbb
push
mov
out
roll
add
sbb
lock
dec
ja
mov
notb
xchg
xor
or
inc
lea
sbb
mov
mov
cmp
clc
cltd
stc
imul
idivb
fmulp
sub
and
xchg
mov
dec
jl
jmp
cs
pop
popa
imul
xchg
ja
stos
lea
and
and
sbb
jmp
or
mov
out
shlb
sub
add
pushf
loopne
cmp
mov
movsb
xchg
jb
cli
dec
mov
popa
js
jmp
fstps
test
lods
mov
push
sbb
lahf
jp
inc
sbb
mov
call
je
mov
ret
mov
out
fldz
orl
and
push
mov
mov
adc
cs
je
jb
adcb
mov
dec
nop
cmpsl
pop
ficomps
jle
pop
repz
adc
xchg
in
push
sti
mov
jo
xor
aaa
xchg
cli
gs
les
add
adc
pop
sub
push
jmp
xchg
andb
cltd
or
sbb
fucomi
cmpsl
fxch
movsl
rcl
sub
mov
cmp
pop
sub
clc
add
std
ljmp
bound
pop
jno
sbbb
imul
inc
jb
loopne
jmp
sub
sub
inc
cmp
scas
sbb
test
dec
adc
lret
int3
mov
pop
movsb
cmpsl
adc
xchg
iret
jmp
ud0
mov
leave
les
sahf
das
push
pusha
push
mov
dec
cmp
test
dec
jmp
sub
adc
dec
jp
loope
jmp
mov
dec
inc
out
test
and
rcll
mov
aas
stos
mov
ljmp
shrl
dec
aas
xor
lods
leave
add
push
xchg
xor
dec
push
jecxz
pop
mov
cmp
lret
in
sub
xor
fisubrl
sub
mov
xor
stos
dec
cmp
add
shlb
pop
and
sti
mov
sub
xchg
sub
repz
or
and
fisubs
add
enter
cltd
out
js
xor
xor
or
in
outsl
mov
mov
push
in
mov
insb
or
out
jmp
in
fwait
and
andl
ja
leave
mov
jle
jb
stos
fildl
add
stos
cld
adc
dec
and
dec
loopne
loop
sub
jge
adc
add
ret
push
inc
fcomi
jle
pop
cwtl
ja
inc
incb
dec
imul
scas
icebp
xchg
xor
push
cs
sti
xor
incb
mov
inc
inc
mov
jp
shll
and
xchg
cli
pop
mov
jl
popa
xchg
xchg
outsb
out
dec
jg
mov
pop
mov
icebp
or
xchg
jb
dec
sub
push
mov
and
xchg
pshufw
pop
dec
loopne
add
cmpsb
and
scas
jb
mov
aaa
and
sub
xchg
movsb
popa
std
mov
repz
pop
orb
out
test
testb
es
xlat
notb
cmpsl
adc
into
push
fiaddl
mov
test
cld
cmp
ljmp
loop
loope
add
addr16
call
pop
dec
psllq
clc
fsubrl
pop
xchg
lods
daa
sbb
xchg
sub
or
mov
jecxz
cltd
adc
pop
cld
fwait
push
enter
gs
adc
xchg
or
xor
daa
mov
cs
aas
and
xor
pop
mov
adcb
add
repnz
jno
push
cmc
popf
and
invd
clc
les
int3
sub
fldcw
movsl
push
lds
mov
or
sub
lahf
popa
ds
dec
dec
aas
mov
das
and
sub
dec
xor
arpl
jbe
movsl
imul
mov
xchg
fcoms
andb
push
mov
mov
add
mov
sahf
xchg
ss
sbb
mov
xor
mov
xor
mov
push
push
int3
dec
cmp
xchg
lock
mov
dec
adc
pop
dec
xchg
and
or
test
mov
cmpsl
loopne
push
test
xor
in
xchg
jbe
mov
inc
ret
pop
lods
dec
lds
push
cmp
in
and
aad
push
lea
cmp
mov
mov
xorb
insl
jmp
addr16
lock
test
jnp
lret
gs
inc
outsl
sbb
jae
in
iret
mov
leave
mov
push
sub
push
mov
in
mov
stc
push
cmp
dec
push
out
int3
adc
std
pop
cmp
and
push
cmpsl
or
loope
out
mov
mov
or
mov
xchg
push
push
sub
mov
loopne
popa
ss
in
mov
sub
fimull
mov
das
mov
inc
cmp
in
fistpl
icebp
push
fs
enter
test
pop
mov
or
mov
or
add
hlt
mov
xchg
stc
jb
or
cmp
mov
adc
cmpsb
add
lcall
or
repnz
and
ret
push
add
mov
push
rcr
call
je
sbb
pop
pop
in
push
imul
sbb
mov
push
loop
scas
icebp
adc
sub
mov
or
jp
out
lahf
cmp
outsb
mov
push
mov
andl
fsubs
inc
mov
cmpsb
out
pop
mov
mov
jmp
pop
jp
sub
push
push
adc
dec
pushf
mov
mov
cs
mov
in
or
mov
mov
sbb
jns
stc
mul
pop
inc
leave
clc
cmovge
xchg
pop
xchg
adc
add
cmp
fnstsw
sub
push
in
cmp
adc
push
lock
movsb
push
lock
lahf
inc
mov
mov
inc
dec
mov
popa
mov
pop
fwait
aad
das
sti
repz
push
sub
jnp
cmpb
push
sbb
inc
or
pusha
xchg
push
mov
sbbb
andps
jno
movsb
inc
cs
in
stos
outsl
mov
scas
stos
adc
xchg
push
fcompl
cmp
je
popf
pop
inc
mov
xor
add
aaa
push
out
gs
push
mov
mov
cmp
mov
cmp
jbe
lea
imul
test
mov
lcall
sarl
add
jb
pop
xchg
dec
mov
scas
jg
pusha
pop
hlt
dec
out
dec
sbb
mov
xchg
inc
ds
jle
insb
in
mov
and
out
lcall
fs
imul
or
jg
imul
mov
mov
cld
ret
pop
dec
fwait
in
ret
mov
out
xchg
cld
popa
xor
xor
shrl
ds
sbb
dec
mov
mov
dec
popa
and
fstpl
sub
ficoml
dec
mov
jmp
mov
jns
xchg
or
add
jnp
sbb
mov
adc
xchg
test
repz
xchg
ret
repz
std
dec
pop
push
xorb
movsb
mov
in
dec
sub
cmp
mov
fs
sub
jp
push
ret
xor
fwait
das
das
mov
cs
dec
repnz
lret
imul
repz
ret
lret
push
pop
xor
fstpt
das
sbb
fs
mov
xchg
shl
std
scas
int
pop
fmuls
add
cmc
mov
mov
or
sub
pushl
xor
or
mov
jb
stos
mov
sub
mov
lcall
ret
push
les
mov
cli
sbb
xchg
cmp
dec
jg
ja
fldenv
cmp
push
mov
xchg
xchg
enter
cmc
sahf
lea
das
cmp
ret
cs
xor
pop
rcrb
pop
ljmp
sub
mov
sub
mov
jmp
clc
leave
pusha
jecxz
std
push
sbb
mov
inc
mov
mov
nop
jnp
jmp
xlat
cmp
ret
mov
dec
or
jbe
call
push
fcomp
mov
and
jne
sub
mov
jge
jb
aam
dec
fcomps
dec
mov
int3
inc
adc
lds
movsb
cmp
cwtl
inc
rorl
test
dec
mov
stos
mov
push
ljmp
mov
dec
mov
xchg
pop
push
mov
insb
push
xor
stc
enter
cmp
in
push
lock
and
inc
lcall
inc
fs
test
sub
inc
xchg
mov
es
fsubs
pop
nop
in
add
repnz
test
repnz
mov
int3
out
cmpsl
fstps
pop
mov
dec
addr16
push
mov
call
pop
add
and
aad
push
call
ss
insb
aaa
fs
cli
aad
mov
dec
add
int
cmp
jmp
jg
int
and
addr16
lcall
jae
aad
mov
in
sub
cmp
add
popf
mov
lods
int3
inc
mov
dec
mov
mov
mov
mov
and
dec
sahf
aaa
fcomps
cs
mov
mov
lods
scas
loopne
movsl
wrmsr
mov
mov
xchg
mov
cltd
into
mov
lret
add
lods
xchg
roll
sbb
push
clc
loopne
mov
cmpl
mov
inc
mov
or
jg
dec
rorb
jle
mov
pop
adcl
insl
sahf
fdivl
jbe
stos
jnp,pt
fs
insl
push
aaa
adc
add
push
push
pop
xchg
fidivrl
arpl
jecxz
sub
aaa
pushf
mov
dec
out
pop
cmp
mov
inc
scas
rclb
adc
addb
jae
adc
arpl
add
inc
adc
data16
in
in
push
push
cmpsl
aad
sbb
pop
arpl
movsb
test
in
pop
mov
dec
stos
movb
push
mov
jg
push
mov
jno
sbb
sbb
testl
push
xor
add
or
sub
mov
xor
in
xchg
mov
jmp
loopne
in
test
or
hlt
mov
xchg
sub
scas
lock
mov
or
jne
test
and
xchg
sub
inc
xor
xlat
sub
sahf
jo
mov
in
es
into
loopne
sbb
mov
imul
movb
push
stos
fwait
sbb
popf
mov
fisubrl
fcomi
daa
mov
enter
pop
sub
imul
fsubrl
sar
push
les
ror
mov
cltd
cmpsl
xor
sbb
sub
out
mov
xor
and
mov
subb
incl
push
push
repnz
cld
call
jl
hlt
adc
jb
pop
mov
jne
mov
pop
inc
cmp
int
lods
scas
aaa
cmp
loope
roll
sbb
dec
nop
bound
orl
into
js
fsub
pop
adc
sub
jo
jno
mul
repnz
and
inc
ret
add
fisttps
xchg
dec
push
jle
cmp
andb
inc
cmp
xchg
and
scas
sbb
sbb
or
dec
or
xchg
mov
out
jp
dec
adc
pop
xchg
xor
daa
fdivr
ss
stos
cmp
roll
into
repz
xchg
mov
out
sbb
mov
sub
cmp
incb
add
hlt
in
into
dec
cwtl
mov
sbb
gs
enter
int3
jb
test
xor
xchg
mov
insl
adcb
les
dec
mov
mov
fldt
std
lahf
mov
imul
jae
cs
pop
pop
fsubs
sbb
or
cmp
cli
inc
jno
xor
push
xlat
stc
loop
jle
mov
in
hlt
xorb
or
mov
popf
push
or
pop
outsl
fdivrs
jae
cmp
dec
adc
add
cmp
popf
cltd
insl
insl
add
xor
stos
mov
mov
xor
sti
out
rcrb
dec
outsl
cmp
sti
sub
jns
mov
shl
mov
jns
mov
adc
jge
pop
in
jnp
xchg
push
dec
mov
testl
adc
loopne
shl
imul
imul
je
push
xchg
sahf
shl
pushf
ret
imul
push
dec
xchg
ljmp
enter
gs
enter
add
pop
popf
stos
sub
js
inc
out
bound
push
xchg
test
lcall
dec
int3
xchg
sub
or
and
xor
in
ret
xor
cmc
push
cmpsl
cmpsl
cmpsl
lret
divb
stc
mov
arpl
aaa
xchg
fdivrl
loop
cmc
mov
cmp
faddl
ja
jp
idiv
sub
decl
and
add
sub
add
xchg
lret
mov
pop
pop
dec
mov
add
mov
or
cmp
mov
mov
jmp
sbb
jno
outsb
inc
xor
adcl
out
or
xchg
popf
mov
or
jb
xor
inc
sub
subl
adc
arpl
cld
pop
sbbl
and
insl
and
add
testl
jl
jmp
add
jbe
insb
repnz
xlat
jmp
xchg
pop
push
insb
xchg
in
cmp
lret
cs
ficomps
gs
mov
shr
adc
cmp
pop
fldcw
and
cmpsl
sahf
mov
cltd
push
push
ljmp
lods
adc
mov
mov
adc
aaa
lods
dec
xlat
mov
xor
jle
test
dec
inc
sub
movsl
sub
adc
xchg
dec
add
mov
pop
dec
and
fldenv
and
lret
cmp
or
push
outsl
jo
imulb
jbe
add
pop
dec
push
aas
pop
cld
xchg
cwtl
test
imul
sarl
adc
xor
vcmpps
in
mov
fnsave
test
fdivl
inc
arpl
insl
enter
loop
add
dec
xor
push
jecxz
addr16
adc
sar
push
test
lock
lods
arpl
loopne
or
outsl
lea
and
adc
hlt
jmp
mov
movzbl
pop
xor
insl
ret
popf
out
adc
fldcw
xchg
push
sbb
jb
fwait
jle
jae
subl
int
sbb
popa
push
addr16
int3
or
xor
stos
or
out
stc
sub
push
popf
mov
sahf
dec
jne
test
dec
data16
in
out
sbb
stos
shlb
dec
xchg
cmc
or
imul
mov
mov
cli
fwait
fs
negb
jecxz
fstps
cmpsb
stos
sbb
aas
xchg
cmp
push
rol
cs
jg
mov
daa
ret
push
frstor
ljmp
jnp
lret
push
mov
mov
scas
fwait
sti
xchg
ficoml
cmp
pop
ja
push
add
ror
dec
lret
fs
sub
jp
notl
lods
dec
adc
in
pop
mov
xor
mov
jno
mov
sbb
push
and
mov
ja
aad
pop
imul
arpl
mov
cld
dec
fstpt
sarb
fcomp
mov
outsb
mov
fcomi
outsb
fildll
rorl
adc
dec
add
inc
add
xor
cld
mov
aad
cmc
xchg
jg
outsl
push
jg
inc
lods
jbe
daa
mov
call
add
movsb
sarb
cmpsl
xchg
rcll
dec
dec
dec
daa
ds
jne
test
aam
out
sbb
cwtl
push
xchg
pop
pop
pslld
mov
jae
mov
adc
cmp
mov
xchg
lret
jbe
rolb
in
mov
inc
iret
enter
mov
addl
dec
push
jnp
shl
aaa
js
xor
jle
test
sti
and
mov
rcrl
stc
stos
sub
pop
push
out
rcrb
in
dec
lods
ds
xorb
dec
lea
pop
out
pop
popa
fwait
xchg
shll
out
or
mov
icebp
aaa
mov
leave
lock
pop
fisubl
push
jle
lea
data16
dec
sbbl
inc
pop
mov
pop
or
push
cmp
std
mov
shl
adc
xchg
mov
jo
fidivrs
jae
outsl
jae
scas
das
bound
jecxz
push
in
repz
sbb
rcrb
dec
push
psubusb
out
lods
sbb
push
adc
push
outsl
jnp
out
leave
jne
inc
cmpsb
dec
dec
mov
inc
jnp
ljmp
ret
pop
lahf
xor
xchg
pop
push
jge
dec
push
fstpl
sar
xor
negb
xor
sti
imul
push
inc
lret
pop
sub
push
out
lds
and
push
sub
out
mov
push
sub
scas
mov
cli
pop
dec
jno
xchg
and
xchg
popa
out
xchg
cmp
xor
dec
les
inc
aam
ret
mov
fs
sti
mov
imul
push
insl
daa
sti
pop
cmp
fistl
xchg
or
xchg
push
pop
mov
dec
pop
xor
and
mov
mov
mov
adc
inc
bound
or
sarl
xor
les
xchg
subl
mov
inc
mov
mov
and
scas
lds
push
mov
test
lcall
repnz
add
les
out
jno
push
cmp
or
add
leave
cmp
cmp
cmc
lea
ret
cs
lods
sti
cmpsb
faddl
jp
pop
mov
pop
adc
aaa
mov
mov
push
pop
jo
sub
sub
cld
push
add
sbb
and
inc
mov
arpl
stos
xor
mov
bound
gs
fmull
and
cs
mov
lock
pushf
out
pop
adc
inc
outsb
dec
dec
mov
pop
xchg
or
add
lock
das
js
xchg
adc
inc
jno
bound
jp
fs
cmc
sbb
xor
mov
pusha
ficompl
jecxz
mov
and
and
out
adc
jp
pushf
jmp
fcoms
cmp
js
mov
jle
data16
push
ljmp
or
fidivrs
ds
pcmpeqb
add
lds
mov
loope
push
enter
into
loopne
sbb
adc
mov
pop
ss
cmp
adc
inc
adc
jnp
xchg
push
cmp
arpl
xor
inc
push
fisttps
gs
jp
outsb
imul
jmp
cmp
add
jns
je
in
push
loop
mov
sbb
mov
or
cmc
and
sub
mov
adc
and
jno
lods
insl
cmpl
cmpsb
mov
mov
cld
push
ja
cmc
xchg
insb
add
dec
or
pop
lahf
sbb
jecxz
xor
test
jns
sahf
xor
mov
aam
jmp
fcoml
es
cmp
dec
hlt
sbb
and
neg
mov
add
inc
mov
adc
fwait
movsl
dec
mov
pop
arpl
jecxz
inc
or
jo
adc
inc
lahf
out
xchg
mov
push
mov
ss
cmc
aam
sub
lock
sub
mov
inc
leave
sahf
adc
subb
xchg
jb
lock
lods
or
cmp
into
cmpsb
dec
or
sbb
das
mov
leave
xor
pop
rcrl
cmp
gs
push
jle
adc
fists
inc
fadd
and
push
push
lret
add
jl
cltd
cwtl
lea
adc
add
lahf
ret
out
or
cwtl
pop
ss
aas
mov
sbb
add
jle
out
shrl
mov
cwtl
lds
imul
sub
mov
inc
movsb
xor
decb
in
jmp
ljmp
mov
inc
sbb
lock
shl
xor
arpl
push
push
ret
jns
pop
inc
stos
imul
fcomps
push
inc
cmp
lahf
dec
pop
mov
repz
daa
lahf
dec
xor
push
cmp
sti
cli
rep
add
mov
pushf
out
subl
sbb
aaa
out
inc
mov
xchg
or
jae
or
js
add
mov
pop
aas
cmp
mov
sbb
iret
inc
lods
mov
inc
in
out
test
out
jae
das
jno
sbb
jns
shl
test
or
xor
test
out
push
jmp
fimuls
daa
sub
sahf
arpl
inc
data16
cmovg
pop
popa
adc
sbb
mov
xchg
lret
xchg
and
test
add
jge
dec
sbb
shll
jo
es
dec
lahf
adc
les
cwtl
adcb
adc
push
inc
fmull
pop
xor
add
clc
bound
fsubs
gs
mov
xor
aas
push
pushf
fidivs
push
pop
adc
lret
or
lods
movsb
test
mov
lret
mov
push
shlb
push
repz
movsb
mov
cwtl
aaa
push
push
loope
out
jmp
xlat
movsl
sbb
pop
xlat
and
xchg
xor
insl
xor
or
pop
xchg
test
mov
std
mov
inc
adc
mov
jecxz
pop
data16
dec
sub
dec
fbstp
and
add
mov
lods
cmpsb
lds
sub
add
push
aaa
push
mov
lret
mov
out
repnz
popa
xor
push
cmp
test
cmc
imul
xlat
stos
mov
test
cmp
or
jecxz
jmp
xlat
stos
outsb
inc
movsl
pop
pushf
and
lea
dec
or
loopne
pop
lcall
shl
lea
iret
shll
ret
sub
pop
sub
cmp
add
push
incl
test
sahf
jg
scas
scas
int3
fmull
arpl
mov
lahf
sbb
mov
jnp
arpl
andl
adc
cltd
outsl
jne
cwtl
pop
repz
push
jecxz
fdivrs
mov
mov
ret
lahf
hlt
daa
scas
push
mov
sbb
add
or
stos
cli
mov
orb
xlat
pop
jns
xor
nop
idiv
lret
jecxz
shlb
jne
xchg
enter
dec
inc
popa
cltd
cmpsb
xchg
int
inc
pop
mov
in
and
loop
testb
jns
pop
adc
mov
xchg
inc
imul
aad
rcrb
xor
popa
fisubs
push
and
dec
adc
int
sahf
sub
sub
imull
push
loope
popa
lret
push
mov
cmpsl
scas
adc
mov
popa
add
cmp
add
inc
mov
fwait
cmp
sub
pop
gs
les
imull
fildl
and
inc
cmc
ret
sbb
inc
pop
cmp
popf
repnz
scas
daa
mov
push
mov
lds
cmp
cmp
inc
cmp
mov
movsl
shrl
and
push
insb
dec
and
adc
insl
aaa
xchg
sbb
mov
ss
inc
jnp
loop
js
jge
into
dec
int3
adc
cmp
jns
movsb
adcb
enter
insl
xor
lods
dec
in
xchg
rcrb
orl
aad
dec
lahf
loop
aaa
lods
jno
and
fdivs
xor
or
sub
jp
mov
sbb
lahf
es
clc
idiv
int
pop
xchg
aam
dec
ljmp
push
nop
dec
mov
inc
pop
lea
jmp
aas
pop
adc
sub
aas
loopne
pop
in
idivl
ret
mov
arpl
jge
mov
lock
cmp
xchg
or
and
loop
jmp
add
hlt
mov
movb
into
or
idivl
test
ljmp
sbb
fidivl
sub
mov
mov
xor
scas
mov
jne
or
pop
lock
xor
or
xchg
ljmp
mov
jb
cmp
mov
add
inc
imul
dec
mov
aaa
lcall
cld
lret
std
mov
push
je
pop
sti
inc
jo
cld
mov
xor
out
mov
jno
jbe
sub
iret
and
aam
loope
enter
dec
fwait
aas
rcrb
inc
call
das
mov
fs
out
mov
jp
or
enter
add
push
push
dec
loopne
or
cmp
testl
jge
xchg
loopne
sub
add
cli
bound
gs
dec
pextrw
lret
jp
stos
push
mov
and
pop
scas
mov
dec
cmp
in
dec
aaa
push
mov
push
sahf
xchg
sbb
mov
adc
sub
rcll
inc
in
stc
or
xor
cmp
lock
cmp
fs
sub
xchg
test
test
mov
mov
nop
js
adc
mov
jno
jb
pop
pop
shl
int
les
popa
fstpl
cwtl
aam
ja
and
jp
mov
icebp
js
pop
out
aam
jae
push
sub
pop
sbb
fildll
repz
fdivr
mov
lahf
push
mov
xchg
or
mov
xor
xor
sub
adc
xor
jecxz
xchg
xchg
ss
movsb
dec
pop
jle
mov
mov
movsl
xor
mov
push
pusha
pop
repnz
lea
enter
test
imul
cmp
sbb
sub
jl
scas
push
int
push
pop
or
lcall
add
jb
jb
adc
test
inc
sbb
push
push
outsl
ficoml
inc
xor
mov
bnd
xor
adc
and
sahf
lcall
add
fstpl
xor
rcll
inc
xchg
push
push
pop
aam
data16
out
inc
loop
shll
gs
pop
dec
lds
fwait
in
xchg
aam
or
aas
push
adc
daa
and
clc
add
in
mov
pop
ret
les
rolb
or
mov
sbb
push
roll
add
fs
stos
push
popf
or
xor
ja
js
or
push
push
jnp
jp
aaa
sub
adc
lahf
out
xchg
xchg
cli
or
pusha
lret
cmp
xchg
movsb
or
pop
mov
scas
mov
or
lock
cmp
ss
xchg
shrl
adc
mov
fwait
sbb
imul
iret
clc
fmul
adc
in
jmp
insb
stc
loope
icebp
ret
pop
mov
scas
adc
test
decl
cld
scas
push
pusha
pop
add
mov
mov
adc
add
push
or
call
push
test
insl
je
inc
out
cmpsb
imul
sub
push
inc
inc
fmuls
pop
push
and
push
push
xchg
daa
stc
lcall
stc
pushf
or
and
and
ret
imul
push
in
cli
fbld
rcrb
inc
pushf
stos
das
ret
mov
pushf
xchg
xor
push
popa
je
js
aad
incl
fidivrl
sbb
sbb
cltd
ds
jbe
inc
dec
jg
adc
push
dec
fwait
mov
jg
push
int3
loopne
push
dec
inc
cmpb
and
sbb
mov
jae
adc
sub
cli
daa
push
call
flds
lds
or
lods
jbe
pop
jae
stc
push
popa
and
out
mov
inc
mov
cmp
sub
dec
inc
test
and
addr16
rcl
fisttpll
push
xchg
mov
jno
aad
sbb
js
xor
pushf
mov
jecxz
dec
into
lcall
sub
insb
mov
add
data16
les
sbb
jecxz
sub
rcr
xor
insl
xchg
loopne
or
out
fdivrl
jl
adc
andb
cmc
in
adc
int3
pop
std
mov
sti
addr16
sti
cmc
aad
push
test
lods
out
mov
insb
aam
jae
int3
cmp
addr16
push
das
fs
sub
sbb
inc
out
jnp
ljmp
stos
or
lahf
aaa
sbb
xchg
scas
jne
rolb
pop
ss
dec
cmp
pop
loope
inc
arpl
test
test
ret
ror
mov
mov
dec
loopne
cmp
outsb
pop
popa
mov
pop
out
subb
icebp
out
push
and
adc
addr16
jle
mov
xlat
xchg
scas
sbb
cmpsl
in
out
lcall
faddl
dec
sti
or
je
inc
hlt
popf
outsl
cmp
out
push
pop
fsub
out
and
xchg
inc
outsl
cmp
aas
xchg
sbb
jb
mov
xchg
adc
lahf
imul
rcrl
adcb
lds
imul
lret
cmp
jge
iret
aaa
dec
dec
outsb
push
loopne
out
inc
mov
bound
mov
lret
fists
das
mov
xchg
dec
cmp
cmp
mov
movsb
push
fwait
mov
ucomiss
aaa
xor
out
fcoml
mov
rcll
shl
hlt
call
loopne
fs
cs
lahf
jno
aad
iret
inc
sub
push
jne
jp
add
xchg
pop
in
test
stc
xor
inc
aam
pop
fidivrl
loopne
dec
shr
xchg
fdivs
mov
jg
fdivs
and
in
adc
fucomi
ret
xchg
aaa
adc
ja
cmp
ret
push
inc
inc
pop
int
mov
mov
inc
cmc
jae
mov
lret
mov
or
jmp
jne
jns
jbe
loopne
test
dec
js
inc
mov
push
leave
xchg
mov
fs
nop
in
dec
jge
fs
fidivs
popa
jge
sarb
loope
loopne
nop
cbtw
std
push
add
test
push
fistpll
push
jg
inc
jg
lea
loopne
pop
lods
or
popa
popl
jnp
in
push
rcrl
jp
xchg
mov
stos
push
mov
repz
cli
out
mov
jp
mov
or
inc
ret
add
je
sbb
dec
mov
pop
scas
mov
and
test
sbb
mov
repz
mov
mov
push
push
cld
inc
mov
test
nop
push
push
icebp
or
push
mov
mov
bound
adcb
insb
bound
ror
ret
bound
vpcmpgtd
mov
ret
mov
adc
out
and
ret
push
dec
sbb
lods
push
or
dec
xchg
cltd
or
hlt
aam
push
dec
ja
cmc
divb
mov
adc
int3
lahf
adc
cli
sub
jb
stos
dec
fildll
test
mov
lahf
mov
fnstenv
iret
pop
mov
ljmp
mov
ja
mov
mov
cltd
xchg
insb
repnz
fdivrl
mov
and
or
jo
xchg
cmp
inc
push
adc
in
jo
popf
enter
incl
das
pop
sub
pusha
jmp
adc
out
inc
jbe
mov
or
mov
and
in
xchg
call
faddp
xchg
xor
push
pop
out
clc
mov
and
adc
addr16
pop
or
and
sub
mov
imul
fidivrl
subb
popa
orl
mov
jnp
mov
pop
ja
dec
jno
xor
les
xchg
test
inc
imul
movsb
into
pop
pop
cmp
cmp
lcall
push
jnp
rcrb
dec
pushf
xor
adc
or
es
jl
xor
xor
in
testb
dec
jecxz
outsb
stos
pop
mov
xchg
cmp
ficoml
mov
sub
fisubrs
pop
push
ds
fdiv
mov
pxor
push
dec
popf
rorb
testb
ja
jmp
sub
pop
and
cmp
scas
push
mov
movsl
inc
or
mov
mov
cmp
lds
adc
or
or
push
inc
shlb
jg
scas
not
lahf
fidivrl
mov
and
negb
jne
sbb
pop
mov
and
les
arpl
xchg
or
popf
je
inc
pusha
shlb
sub
mov
mov
mov
sub
lea
inc
lret
loopne
mov
sub
das
nop
lea
jbe
fsubs
mov
jge
pushf
cltd
add
xor
loope
jbe
adc
mov
dec
ret
jno
or
push
fldcw
push
stos
mov
out
popf
ret
mov
outsl
jb
jg
call
add
shll
sub
mov
ret
mov
notl
sahf
sbb
mov
jns
or
mov
dec
rcll
stos
dec
insl
inc
mov
sbb
xor
pushf
fistl
pop
cmp
dec
adc
sub
out
data16
notl
cltd
add
sub
jae
inc
out
mov
add
add
movsb
mov
aaa
ljmp
cmc
lea
inc
pop
loop
push
push
ds
in
cmp
fcoml
push
sbb
ror
sahf
iret
testb
and
push
inc
dec
mov
add
arpl
mov
clc
adc
stos
pop
lcall
xor
inc
js
ror
xor
mov
dec
xchg
cltd
call
sbb
test
cli
mov
inc
cld
stos
fisubl
xchg
add
movsl
aaa
daa
dec
hlt
mov
bound
sbb
pushf
ja
and
sub
movsl
imul
mov
jecxz
dec
mov
jbe
ja
pop
adcl
add
jl
sbb
in
mov
gs
cs
xchg
jno
mov
adc
mov
cwtl
dec
sbb
jno
xchg
jno
in
movzbl
lcall
in
xor
pop
jns
das
repnz
add
and
ljmp
popl
popf
repnz
mov
sub
hlt
jb
test
sar
inc
fucomi
insl
mov
hlt
neg
cmp
mov
cld
in
iret
scas
jge
movsl
and
sub
arpl
and
add
mov
hlt
mov
ds
sub
cmp
push
adc
dec
or
cmpb
pusha
lds
pop
cli
clc
test
mov
in
test
and
jns
subl
add
std
push
mov
jp
cs
adc
push
cli
test
pop
roll
daa
sahf
add
pop
shrl
mov
rorl
mov
adc
pushw
outsb
fistpl
dec
leave
push
rorl
add
sarl
inc
lds
lahf
inc
popf
or
or
lea
jbe
bound
inc
mov
xlat
inc
into
je
xchg
jle
mov
cmp
mov
sti
inc
adc
getsec
stos
jnp
push
pop
xor
jbe
int3
mov
sarb
push
aad
xlat
jge
add
push
xchg
sub
das
sub
loop
les
fdivrl
ret
inc
ret
lds
mov
outsb
add
ja
xor
mov
sbb
mov
pop
or
lods
and
hlt
jle
mov
jg
lret
add
mov
push
inc
ficoms
ror
subl
aam
add
scas
mov
popf
cltd
add
loopne
testb
pop
aas
cmp
int3
test
mov
push
ret
inc
xor
mov
add
inc
iret
xor
add
sarb
daa
data16
xchg
lods
inc
loop
push
popa
shll
stos
cli
push
andb
call
adc
icebp
cmp
popf
sbb
cmp
xlat
clc
push
inc
mov
rorl
jns
inc
fildl
pextrw
test
sub
movsl
jmp
lahf
jbe
lds
pop
dec
xlat
pop
sbb
jl
into
roll
xor
gs
sbb
rcrl
js
add
fimull
dec
in
xchg
inc
call
stos
inc
xor
sbb
test
xchg
rorb
pop
and
jno
push
dec
sub
mov
data16
in
into
mov
test
dec
mov
lret
adc
jne
ret
xlat
mov
sbb
mov
dec
ds
out
mov
mov
jbe
or
push
rcrb
adc
add
lret
jge
test
fstl
std
popf
push
int
adc
push
fisubrs
fwait
adc
imul
adc
dec
xor
lcall
scas
jns
les
and
loop
in
test
lds
lret
jne
adc
movsl
mov
xchg
adc
mov
and
dec
shll
dec
fcmovnbe
sbb
sbb
or
cli
aad
ss
sub
cmp
mov
jns
mov
adc
jge
cld
jnp
jg
rcrb
xchg
mov
dec
fists
fstpl
pusha
aad
mov
ljmp
dec
adcb
aad
cld
mov
inc
fcomp
xchg
std
push
jo
out
xor
pop
xchg
mov
adcl
movsb
loope
mov
xchg
call
clc
push
ret
mov
push
scas
cmp
lret
pop
sub
fdivl
adc
mov
xor
or
jle
insl
add
scas
xchg
cmp
dec
mov
sti
mov
bound
jp
inc
sarb
jo
dec
mov
push
push
add
fwait
mov
jmp
and
push
xchg
jbe
xor
outsb
sbb
xchg
push
out
push
sub
jae
mov
cwtl
adc
stos
cmp
sbb
ljmp
shlb
in
cmpl
sbb
ret
bound
xlat
or
out
ljmp
add
pop
push
jmp
aas
loop
pusha
aam
rclb
sbb
aad
mov
mov
mov
jmp
enter
mov
pop
cld
sub
push
mov
sbb
push
cltd
lods
push
lods
cli
jae
adc
mov
jle
fnsave
repnz
loop
hlt
gs
sub
decl
cli
pop
jne
add
imul
out
inc
aad
sbb
fisubrs
dec
add
fs
push
xchg
push
pusha
and
imul
cmc
sub
sub
xor
outsb
mov
fsubrs
ja
aad
in
faddp
scas
ja
mov
cmc
xor
jne
arpl
push
fiaddl
aad
xchg
cmpb
jp
push
cmpsb
in
dec
lods
push
push
push
inc
mov
xchg
loopne
adc
jle
ljmp
int
sub
iret
cmp
test
lds
into
lahf
push
xlat
dec
mov
inc
in
dec
push
loope
push
mov
mov
rcr
add
lcall
adc
push
cld
movsb
and
fcoml
mov
imul
and
cmp
fisubrl
test
lock
loope
aaa
loop
cwtl
fimuls
out
lods
or
mov
push
repnz
xchg
adc
repnz
sub
sbb
divl
arpl
movsl
lods
int
enter
sbb
sub
imul
outsl
adc
adc
push
shlb
adc
fcoms
fcompl
mov
mov
xor
into
in
fsubrl
jb
xor
sub
mov
xchg
lods
add
iret
jecxz
push
push
in
out
aas
dec
dec
into
pop
cltd
mov
pusha
fcomps
mov
fildl
mov
in
fwait
scas
outsl
pusha
sti
or
sub
fnstenv
adc
ljmp
test
push
test
fs
jne
xor
mov
icebp
es
adc
out
lods
or
push
fcoml
ja
jle
sti
inc
pop
pop
addl
dec
cli
or
sbb
loop
loopne
jns
aam
rcrl
xchg
addb
cmp
std
adc
sbb
dec
dec
push
dec
cltd
mov
dec
jno
push
xchg
enter
out
cmp
daa
jecxz
imul
cmp
mov
lret
pop
cmp
gs
adc
ljmp
or
jne
cmpb
jmp
mov
or
lds
pushf
xor
das
dec
cmc
pusha
mov
lock
adc
and
mov
mov
cmp
push
leave
shrb
imul
xchg
inc
cmp
negl
mov
das
cmp
dec
jl
cmpb
out
test
adc
and
xchg
jg
mov
and
fsts
fcmovne
int
xor
scas
es
das
leave
out
fldl
popa
ljmp
psrad
pop
pushf
shl
pushf
fwait
or
xchg
pop
mov
loope
into
push
les
mov
add
adc
lock
movsb
sti
mov
and
push
or
or
popa
jb
aaa
adc
lahf
mov
out
sbb
add
gs
pop
pop
xor
out
pop
lahf
sub
mov
xlat
pop
push
mov
fucomip
dec
insb
pop
lahf
or
shl
xchg
dec
jl
xchg
pop
xchg
fsts
insl
ljmp
xchg
jp
hlt
jge
out
rcrl
mov
fwait
shrl
enter
pop
inc
mov
add
insl
ss
xchg
push
imull
fnstcw
ljmp
sbb
dec
das
mov
in
push
mov
shr
and
call
and
mov
push
cli
rolb
or
insb
add
push
push
int3
jl
ret
shl
insb
push
lock
inc
mov
js
and
or
in
pop
test
pop
div
shlb
pop
fbstp
xchg
lock
outsb
not
or
int3
sub
mov
add
xchg
int3
sbb
lcall
and
popf
jge
inc
fsubrl
inc
mov
xor
rorb
int3
or
mov
arpl
pop
iret
and
xchg
xchg
or
mov
pop
jecxz
aas
or
add
push
fiadds
cmovo
xor
int3
inc
and
mov
outsl
mov
mov
or
adc
out
mov
loopne
pop
int
imul
mov
outsb
iret
push
pop
cmp
xor
ror
xor
sbb
push
ljmp
xor
cwtl
and
push
mov
and
cmpsb
and
lea
add
test
jge,pt
mov
add
icebp
ss
sub
out
push
sysexit
sub
adc
mov
mov
add
and
rolb
cmpsl
xorb
es
fwait
pop
inc
ja
pop
packsswb
push
aad
pop
pusha
and
inc
jns
hlt
add
sbb
popa
lods
push
push
js
shrb
out
pusha
xor
cmp
sub
and
mov
cltd
lret
pop
sub
pop
popw
loopne
pop
mov
xor
cmp
insb
mov
mov
jae
sub
sbb
dec
call
ja
add
dec
or
mov
and
mov
push
add
cwtl
fstps
aaa
int
lods
jns
shl
fistl
out
outsl
mov
xchg
into
xlat
shll
cmpb
fidivl
mov
dec
sub
mov
lcall
sub
mov
call
mov
dec
jbe
push
test
inc
test
xor
or
cmp
mov
push
ficoms
stc
jmp
lret
lods
add
inc
inc
cmpsb
add
pop
jl
pop
or
mov
push
pop
dec
in
xchg
inc
push
jns
xchg
xor
sbbl
outsl
ja
fwait
std
sbb
push
fistps
mov
xchg
pop
ljmp
adcb
inc
push
inc
xor
dec
mov
out
jmp
and
das
ftst
cld
mov
add
sub
stos
mov
movsb
aas
or
inc
fs
jb
sti
push
lock
shll
cmpsb
out
fidivs
lock
inc
imul
jae
lods
dec
loop
fldcw
adc
adc
jge
out
aaa
mov
ret
cmp
into
cmpl
jb
push
daa
mov
bnd
pop
addr16
mov
add
mov
call
ret
adc
mov
sub
popf
addr16
mov
dec
loope
lcall
mov
ljmp
lods
test
and
addr16
mov
lahf
and
jmp
out
mov
xchg
lret
mov
sbbl
ficoms
dec
jmp
int3
pop
popa
inc
testb
in
xor
jb
test
lods
adc
sub
insb
imul
sahf
fdivrp
cmp
test
mov
lods
xor
push
aas
cld
xor
mulb
pop
push
nop
mov
add
gs
sti
mov
aad
inc
fdivrs
dec
cmp
mov
clc
push
pop
test
add
jp
out
dec
push
inc
shll
mov
or
xorb
repnz
rcrl
xchg
xchg
mov
icebp
mov
jecxz
ja
sti
inc
shll
imul
call
int3
and
and
enter
mull
jmp
add
add
xor
addr16
mov
jl,pt
push
popf
orl
sub
push
fsubl
push
and
sti
inc
mov
out
xor
jbe
mov
inc
out
lahf
lcall
fdivr
mov
aam
inc
lret
cltd
mov
pusha
std
mov
adc
ret
sbb
lock
jg
es
mov
das
xlat
dec
icebp
movsb
movsb
loop
iret
push
cmp
push
nop
inc
sub
lock
aaa
orb
popf
iret
jecxz
adc
loop
xchg
arpl
insl
dec
mov
or
test
dec
pop
int
mull
lcall
into
push
aad
stos
mov
xchg
mov
dec
xchg
movsb
cmp
push
mov
sbbl
inc
xchg
adc
sbbl
in
out
jne
jecxz
and
adc
mov
xchg
cmpsl
adc
mov
push
insl
mov
mov
jb
pop
dec
mov
enter
lods
add
cmp
add
lahf
mov
arpl
divl
mov
jp
xor
dec
jo
fisttpl
loop,pn
out
xor
mov
lcall
mov
pushf
scas
or
out
icebp
sub
inc
lcall
repz
jle
mov
cmp
mov
sub
jbe
jmp
mov
add
js
or
lcall
jo
dec
cmp
inc
push
in
add
mov
jecxz
push
bound
add
loop
lea
push
jmp
bound
push
pushf
movsl
jns
lcall
add
push
cmp
outsb
inc
inc
xchg
fdivrp
sbb
sbb
scas
imul
lock
jo
or
jno
xchg
xorl
mov
sub
scas
shl
pop
push
inc
dec
popa
mov
ljmp
jo
push
xchg
push
and
xor
add
rol
push
out
bnd
ja
or
pop
xor
cld
push
test
add
or
pop
sub
int
sbb
ja
jle
iret
and
neg
imul
pop
lods
in
clc
out
xor
jo
and
scas
sub
jo
or
std
fwait
enter
insl
out
shr
int3
sahf
dec
pusha
leave
mov
lahf
push
lea
jmp
mov
cmc
insb
mov
fcmovbe
adc
into
fs
loop
add
and
mov
sub
incl
push
lret
xchg
loop
lods
scas
popa
enter
mov
out
jp
shlb
mov
or
shrl
xchg
nop
repz
mov
inc
jmp
ja
scas
pop
loopne
pop
movsb
or
in
lgs
jnp
mov
cmp
fisubl
push
sub
hlt
sbb
inc
add
cmp
xor
jecxz
pop
add
jae
insb
mov
leave
add
dec
dec
sbb
addl
or
pop
add
pushf
cmp
mov
lea
fsubrs
sub
imul
add
and
daa
fsubp
cmp
xchg
cmp
stos
scas
roll
mov
add
or
fbld
fsubp
std
incl
iret
lock
sub
adc
testl
ja
out
daa
xchg
mov
pop
lods
jne
mov
and
jmp
dec
rolb
jmp
push
rcll
mov
jno
mov
pop
lods
std
adc
push
sbb
js
sbb
add
jecxz
loop
pusha
outsl
dec
mull
cmp
test
sub
jmp
enter
mov
mov
jle
movsb
arpl
mov
mov
jecxz
aam
sub
incl
xor
cld
loope
mov
data16
or
pop
cmp
imul
shl
jecxz
cmp
outsl
jmp
out
cmp
das
mov
add
in
push
jae
test
or
push
jle
xor
pop
lods
or
mov
mov
clc
lock
pop
dec
push
xor
sbb
enter
pop
cmp
test
jae
cld
rclb
in
push
pop
pushf
dec
add
inc
lods
xor
dec
in
jl
fcmove
push
loop
test
pop
mov
loop
fiaddl
out
add
ret
ljmp
jnp
mov
jne
ror
dec
pop
sbb
mov
es
add
ds
insl
test
pop
imul
push
in
sub
test
push
fnstsw
mov
dec
xorb
icebp
cmpl
loope
les
sub
movsl
xchg
fisubrs
adc
sbb
in
adc
sub
repnz
add
xchg
inc
loop
mov
shlb
add
test
cmp
jns
xlat
pop
enter
das
and
subb
fcmove
or
cmp
in
das
shll
mov
jg
aaa
pop
xlat
in
sub
std
loope
inc
mov
push
xor
cmp
jae
and
mov
mov
or
sub
adc
pop
add
lds
sbb
xchg
jo
mov
cmp
add
cmp
and
inc
add
sti
popf
mov
imul
pop
inc
repnz
mov
aaa
push
sub
jmp
sub
lds
pop
inc
in
enter
sti
js
mov
mov
rolb
cmp
add
cltd
dec
xor
div
sahf
mov
cs
pop
cmp
gs
hlt
mov
negl
dec
adc
mov
jecxz
popf
mov
in
std
imul
insb
cli
jge
fdivl
imul
clc
loopne
adc
dec
xchg
inc
xchg
cs
push
jb
xor
add
xchg
adc
mov
pop
jno
push
scas
xor
adc
add
cwtl
mov
add
push
inc
sbb
xchg
lcall
or
sub
add
into
test
into
mov
xchg
stos
push
mov
cltd
mov
mov
insb
iret
add
and
inc
jae
cli
pop
mov
fst
insl
lock
int
adc
test
rcrl
and
je
push
sbb
icebp
rcr
icebp
sub
std
mov
add
and
sub
or
test
add
jo
lods
stc
jp
xor
and
shlb
fadd
mov
lret
dec
in
aaa
hlt
or
insb
mov
jb
mov
push
mov
data16
adc
ljmp
roll
push
mov
mov
dec
out
sti
jo
cmp
xor
leave
fidivs
daa
das
int
xor
mov
movsl
cmp
das
mov
push
daa
out
xchg
dec
dec
mov
popa
mov
pop
push
xor
scas
pop
push
jl
and
xchg
repnz
pop
test
cs
mov
aaa
cmp
adc
mov
sub
dec
pop
insl
cmp
fxam
adc
add
nop
les
stos
sub
cmp
mov
jbe
out
movb
loope
outsl
dec
in
orl
mov
loope
xchg
mov
xchg
xchg
in
pop
imul
inc
mov
xor
jecxz
mov
push
push
mov
insb
jmp
popf
xchg
fxtract
xlat
pop
dec
cmpsl
loopne
xor
xchg
lret
fldl
hlt
jno
add
add
cmpsl
xchg
cmpsb
out
pop
dec
push
icebp
or
notb
ljmp
movsb
xlat
pop
xchg
mov
notb
clc
xchg
clc
add
xor
js
jg
insl
mov
jp
ret
dec
fsubrs
sti
lcall
mov
sbb
cmp
xchg
scas
stos
out
mov
dec
add
push
add
sbb
hlt
jle
in
lret
rolb
fidivrl
lret
mov
pop
or
mov
sbb
cltd
lds
xor
loope
popa
push
dec
out
pop
mov
or
push
sub
pop
dec
adc
cld
pop
and
mov
inc
stos
push
ficompl
adc
out
nop
xchg
repnz
ljmp
movb
movsl
cld
adc
mov
pop
test
dec
pop
addr16
sub
scas
push
pop
mov
lret
inc
inc
adc
dec
stc
adc
sub
mov
xchg
and
push
lcall
jbe
das
mov
dec
les
rclb
int3
xchg
dec
mov
push
fcoml
std
push
sbb
scas
jnp
arpl
cmp
in
xchg
out
jmp
or
dec
xchg
imul
in
jecxz
mov
sbb
sub
sub
add
ret
mov
movsb
dec
lods
mov
jne
inc
std
add
outsl
inc
aad
pop
xchg
test
cwtl
lret
testb
mov
lcall
sbb
bound
lcall
mov
stos
in
loop
or
out
add
or
fnstsw
aad
push
pop
setge
daa
sub
stos
add
add
dec
fs
mov
scas
ljmp
adc
mov
out
inc
fsubrp
mov
outsl
iret
mov
or
mov
scas
jae
mov
das
ja
repnz
dec
push
cmp
xchg
mov
mov
cmp
lret
enter
inc
sbb
mov
ss
fs
dec
jo
insb
adc
and
push
popf
mov
mov
or
frstor
inc
js
jmp
aaa
pop
jno
lock
cmpsl
push
mov
mov
minps
cmpsl
push
and
testl
cmc
enter
adcb
jge
sbb
xor
aad
mov
aad
pop
mov
jl
fstpt
xchg
cmp
lods
into
dec
ficomps
mov
mov
jne
pop
cmp
cli
lods
cmp
add
ja
mov
popa
or
mov
lahf
cs
adc
cmp
aas
in
pop
adc
mov
fstl
xlat
gs
mov
pop
mov
jl
out
sub
subl
mov
xchg
mov
jnp
das
shrb
in
mov
inc
jle
and
and
and
fwait
mov
cmp
cmp
mov
xor
sbb
push
jae
insb
mov
push
pop
and
jle
dec
mov
xor
jecxz
psrlq
pop
mov
cmovbe
fadds
shl
mov
pusha
ret
cmp
cltd
and
jnp
adc
cmp
negl
mov
sub
cli
jb
pop
aam
or
jge
stos
xchg
icebp
lods
mov
mov
les
or
cwtl
mov
jne
movl
popa
xchg
loop
ret
div
mov
xlat
pop
push
push
inc
mov
int3
inc
repz
popf
pushf
aad
out
rorl
push
mov
push
mov
dec
push
mov
push
lds
insb
adc
xor
adc
or
cmc
dec
lods
fadds
aaa
ret
add
clc
jl
rcrb
fucomip
lahf
movsl
mov
or
ja
insb
daa
xchg
lahf
push
lods
aas
mov
scas
call
test
incl
les
sbb
cmp
xchg
pop
fidivrl
mov
adc
iret
lds
cmpsb
call
or
add
jb
mov
int3
pop
push
jle
fisttps
imul
call
ljmp
ret
or
adc
xchg
xor
scas
add
lret
mov
sub
mov
cmpsl
or
or
jns
mov
cltd
cmova
sub
test
push
sub
push
icebp
jno
fsts
mov
sub
cwtl
lahf
lods
add
xor
movsl
cld
cmpb
ja
aas
test
mov
addr16
push
fstpt
jp
stos
adc
ret
sub
or
pop
adc
sub
insb
jp
clc
fmuls
into
repz
and
movsl
int3
dec
loop
ja
add
cmpsb
push
in
mov
loopne
xor
adc
pushl
ret
cwtl
cmp
sti
ds
and
stc
rcr
add
mov
hlt
jl
jge
cmpsl
jl
sti
repnz
cmp
adc
loope
aaa
lods
into
mov
call
call
push
cmp
das
push
xchg
jmp
nop
sti
or
clc
push
fmuls
ss
cmpsb
js
mov
xchg
cltd
xchg
mov
call
loop
jle
xor
adc
jae
imul
add
das
add
lods
fnsave
and
adc
dec
push
sub
push
cmp
xor
cmp
dec
dec
add
lds
jle
aas
loopne
call
adc
or
cmpsl
test
loop
push
dec
ss
and
out
mov
adc
jge
xchg
cmpsl
cmp
insl
xor
fsubrs
add
enter
icebp
enter
mov
jle
sbbb
pop
mov
and
mov
sbb
push
das
inc
inc
scas
jbe
adc
sub
in
lret
nop
rolb
xor
in
cmp
add
sbbl
mov
mov
lock
xchg
fmull
sub
bound
mov
fucom
jle
mov
loopne
add
sub
xor
mov
stos
inc
inc
xor
mov
jo
cmp
adc
jg
jge
push
int3
sbb
test
pop
or
dec
add
pop
in
testb
xlat
stc
int
jb
repnz
push
call
movaps
popa
movsb
adc
stc
add
push
xchg
notb
push
mov
cmc
pop
pop
jmp
iret
iret
push
enter
push
jl
mov
jnp
aas
ja
xchg
push
sbbb
into
ds
mov
mov
adc
cmpsb
mov
fistps
push
ret
mov
inc
mov
sbb
or
insb
adcl
cmc
xchg
icebp
add
dec
xor
mov
mov
cmc
into
adc
cmp
xor
sti
fcmovu
fcomip
dec
outsl
mov
sbb
mov
push
hlt
xchg
xchg
inc
mov
push
es
aad
push
lret
pop
ss
xor
gs
sar
js
jo
aad
ret
mov
lods
xchg
aaa
outsb
or
inc
jbe,pt
enter
xor
jmp
xchg
ret
inc
mov
mov
rcrb
les
jbe
in
popf
lahf
mov
add
sub
inc
dec
pop
mov
arpl
scas
sbb
mov
test
mov
lock
movb
mov
into
inc
cli
ret
and
fists
pop
or
arpl
test
sbb
dec
dec
pop
xor
js
and
aas
daa
sarl
xchg
movsl
test
dec
and
inc
mov
icebp
fstpl
das
mov
call
dec
sub
pop
loop
xor
nop
dec
cs
fiaddl
scas
incb
sub
hlt
in
imul
lret
sub
test
jge
sub
mov
jbe
lds
sbb
push
inc
pop
sub
lods
cmpsb
and
push
adc
test
sub
lods
dec
push
dec
sbb
sbbl
pop
add
sahf
jecxz
jae
cmp
push
mov
mov
in
push
rclb
fadd
ret
sub
cs
mov
or
pop
xor
xor
push
aas
jae
xchg
pop
or
jp
pop
mov
add
test
lea
mov
aaa
push
hlt
loop
loope
fwait
add
jg
mov
add
inc
mov
adc
or
sbb
dec
shr
sti
mov
xor
lret
xorl
stos
xchg
jo
pop
pushf
cmc
pop
repz
xor
pushf
jns
mov
add
in
lods
sub
adc
xor
adc
rclb
xchg
call
jl
imul
xchg
aad
adc
nop
movsb
dec
inc
jnp
mov
xor
jecxz
jge
inc
cltd
les
negb
stc
cmp
inc
into
ja
cld
sub
movsl
add
jnp
jo
pushf
adc
xchg
out
js
mov
sub
jo
cmpsl
sub
movsl
pop
dec
aad
mov
sahf
pop
mov
fldt
cmp
imulb
mov
or
outsb
out
pop
out
push
adc
rcr
xlat
push
cmpsb
mov
movsl
push
hlt
sbb
mov
mov
imul
mov
push
pop
sub
sbb
xchg
and
and
les
and
arpl
dec
push
and
out
cli
aas
fstps
mov
movsl
ds
mov
rolb
pop
cli
xchg
addb
mov
push
sahf
pop
dec
ret
clc
xor
outsl
pusha
jne
je
push
cwtl
popf
xchg
sbb
scas
scas
adc
lods
sbb
lods
xchg
rcll
fisubl
lret
or
push
addr16
aaa
ds
icebp
jg
or
pop
cmp
push
negb
inc
cmp
out
push
dec
imul
stos
xchg
jno
cmp
xchg
nop
cli
rcrl
lcall
mov
test
movsb
cmpsb
into
or
xchg
fwait
sti
xchg
mov
dec
adc
jl
out
push
arpl
repnz
shll
mov
jns
lock
inc
movsl
fbld
data16
sbb
loopne
scas
xor
sub
ja
lds
lahf
jbe
xchg
xchg
jno
push
cmpsb
jge
and
inc
jg
arpl
fists
inc
jge
mov
sub
jle
push
in
pop
arpl
rcll
out
ss
xor
push
and
cmp
aam
inc
jle
jge
mov
sub
ljmp
mov
jns
shl
push
xchg
cmc
mov
imul
and
jae
cmpsl
lds
jmp
clc
jb
xchg
fwait
inc
mov
inc
xor
sub
adc
cmc
stos
xlat
push
decl
test
call
fimull
jp
mov
dec
mov
sar
sahf
push
push
into
fstpt
mov
pop
push
insl
xor
imul
jmp
lea
imul
pop
jnp
cld
fwait
jns
mov
fcomip
mov
ja
lock
call
jbe
outsb
xchg
pushf
jne
outsb
cli
jnp
imul
mov
jle
insl
paddusb
mov
jl
add
cmpsl
lahf
scas
out
iret
pop
jge
or
and
mov
fwait
add
xchg
sub
push
dec
push
inc
out
or
lcall
mov
std
jp
mov
insl
cmp
or
mov
ja
inc
popf
or
pop
mov
dec
lods
out
arpl
push
cs
sbb
test
jne
insl
cmpsl
jp
sub
mov
icebp
add
sahf
out
cmp
cmpsl
adc
ds
xor
pop
xchg
inc
mov
hlt
pop
push
add
mov
pop
imul
mov
pop
adc
cmp
sti
int3
pushf
sub
or
icebp
fldl2e
push
and
mov
jbe
push
cmp
nop
jo
ss
inc
loope
stos
sbb
xor
mov
ret
cli
sbb
enter
mov
leave
mov
dec
push
push
addr16
daa
mov
dec
or
cs
je
push
iret
or
jecxz
iret
stos
mov
mov
ds
pop
jbe
jl
dec
cmp
jle
push
or
lods
lods
sbb
rclb
push
lcall
mov
mov
inc
popa
imulb
cmp
jecxz
fwait
add
jg
mov
cli
jg
jno
inc
push
mov
mov
adc
arpl
bound
and
xchg
lea
mov
xor
pusha
jbe
mov
mov
into
lahf
mov
in
sbb
call
imul
icebp
test
leave
js
lds
cwtl
or
sub
outsl
loop
jnp
lods
sbb
ret
dec
popf
mov
jmp
imul
or
pushf
mov
jp
xchg
sbb
jb
or
mov
cmp
lods
push
ss
insb
mov
mov
fiaddl
or
rcrl
outsl
test
or
arpl
jne
lret
popa
xchg
push
push
pop
mov
insl
lock
ljmp
inc
fcoml
aad
stc
test
loop
cmp
fisubrs
mov
stos
jnp
lret
inc
jg
int
sbb
mov
pusha
iret
call
xchg
rcrb
repz
adc
mov
sar
jae
iret
int3
jle
add
cmp
jecxz
adc
cld
pop
xchg
dec
popf
inc
xchg
or
stc
jl
or
xchg
and
dec
popf
stos
cmovl
push
insb
jbe
mov
jmp
cld
push
or
fnstenv
dec
loopne
pop
mov
mov
out
cmp
imul
popa
add
in
in
dec
xchg
scas
adc
push
push
adcl
sbb
std
arpl
loope
pop
outsl
jg
jmp
pop
add
cmc
mov
leave
roll
mov
mov
cli
dec
fmull
sar
push
fisubrl
push
push
sub
lret
data16
xchg
pop
cld
mov
jns
adc
xchg
out
cmpsb
ret
scas
inc
sub
clc
mov
jecxz
popa
call
divl
adc
fdivs
add
adc
insl
mov
fimull
xchg
xor
daa
add
push
cmpsl
ds
sbb
mov
lret
adc
popa
sbb
xor
jmp
lret
mov
jle
push
aam
xchg
in
adc
ss
popw
mov
int3
scas
jp
jne
push
inc
add
pop
popa
sub
fld
jno
pusha
jg
lcall
and
imul
lods
dec
add
in
mov
xchg
loop
test
pop
sub
mov
dec
mov
xchg
inc
push
lahf
sub
or
mov
ljmp
sbb
or
and
cmc
adc
fistps
stos
mov
cmp
fcom
jno
insb
sbb
js
push
aad
mov
je
inc
in
imul
or
cmpsl
lods
mov
cli
ja
or
das
lret
inc
clc
call
idivl
sub
cmp
js
jge
ffree
mov
mov
xorb
add
ret
outsb
pop
push
xchg
pop
or
popa
mov
jo
lahf
pop
inc
adc
mov
adcb
add
add
mov
fnstcw
ljmp
inc
lcall
push
sbb
orl
or
jbe
jmp
push
and
xchg
add
pop
or
inc
mov
add
cli
daa
jne
xchg
int
jg
cmpl
mov
sbb
jo
fisubl
in
cmp
insl
mov
mov
mov
loopne
inc
adc
cmp
pop
pop
in
add
popa
sub
and
sbb
dec
mov
stc
into
inc
and
notb
les
hlt
mov
roll
hlt
or
outsb
mov
or
xchg
cmpsl
sbbl
sbbl
enter
int3
ja
mov
scas
and
into
jo
in
xchg
mov
ss
adc
inc
dec
into
cmp
lcall
mulb
aad
test
shlb
fldl
lret
lock
or
inc
out
subl
xchg
flds
push
imul
mov
add
or
cwtl
xchg
jne
push
jle
insb
repnz
cwtl
sbb
dec
or
arpl
in
in
or
adc
push
and
jae
jo
jle
daa
and
dec
mov
adc
mov
mov
pop
roll
jmp
je
orb
pop
mov
dec
es
daa
dec
insb
xor
mov
lods
cld
loop
add
aad
into
cmc
jbe
out
iret
scas
and
hlt
fdivs
ret
mov
mov
pop
jge
in
insl
or
adc
fidivl
fisubrs
adc
mov
cmp
pop
mov
out
inc
fbld
daa
dec
scas
dec
loopne
jnp
xchg
aaa
sub
mov
das
aad
ljmp
aas
cmpl
xchg
pop
rcll
scas
pop
cli
pop
push
mov
or
in
inc
xor
mov
mov
cmpsb
ret
xor
je
xchg
jle
jmp
enter
fsubrp
jo
push
les
pusha
ret
dec
or
pop
repnz
mov
xchg
aad
cmp
xchg
mov
dec
inc
int
lret
push
clc
mov
mov
sbb
repz
xchg
movsl
imul
jecxz
xor
sbb
call
mov
cs
icebp
loope
lods
dec
and
jp
mov
fiadds
inc
inc
imul
popf
loope
adc
pop
ja
sub
mov
inc
inc
fcompl
pusha
cwtl
jmp
call
mov
sbb
inc
rorb
ss
subl
lock
xchg
xchg
rorb
xchg
dec
push
cmpsl
or
aas
mov
jle
cmp
adc
into
cmp
cmp
xchg
stos
xchg
insl
ja
mov
mov
jmp
jns
inc
lea
push
jmp
sti
dec
sbbl
xchg
jle
add
test
icebp
or
mov
jl
repz
cmp
pop
cli
jge
fnstsw
sbb
jbe
jbe
shr
mov
mov
decb
clc
ret
inc
fidivrl
shrb
ficompl
out
and
lea
addr16
lds
daa
fistps
adc
and
mov
xchg
shr
mov
rol
cli
sti
cli
cltd
mov
test
ljmp
loopne
jne
loope
pop
xor
pop
outsl
push
push
adc
pusha
into
sub
data16
pushf
add
ficompl
loope
ja
fldenv
adc
pop
jns
xor
cmp
mov
outsb
cli
or
adcl
icebp
mov
xchg
lret
or
cwtl
mov
divb
js
in
and
and
jnp
repz
adc
sbb
xor
out
lret
sbb
popf
scas
scas
jns
push
and
scas
mov
jg
movsb
sahf
aas
aaa
arpl
push
pop
mov
sbb
pushf
divl
orl
jecxz
in
inc
movsb
dec
imul
sub
outsl
negb
ljmp
clc
jmp
sub
cmc
fsub
adc
data16
notl
and
jle
dec
mov
add
add
add
pop
mov
push
dec
push
pop
inc
std
jp
cmp
mov
fisubrl
bndstx
int3
dec
and
mov
add
adc
les
sub
into
fcoms
mov
dec
and
jge
lahf
push
add
adc
loop
repz
ss
lea
push
outsb
mov
scas
lcall
imulb
cltd
lods
bnd
ss
sbb
adc
je
aam
cmpxchg
jmp
sub
rorb
or
dec
mov
pusha
mov
mov
or
ljmp
test
cmp
push
ret
pushf
or
pop
push
cmc
ljmp
repnz
inc
adc
push
sarl
std
cmpl
fnstsw
icebp
dec
into
call
push
or
loope
mov
inc
push
fldt
vxorps
cmp
mov
loopne
xor
jbe
addr16
push
add
mov
jne
pushf
orl
jecxz
fwait
mov
incb
sbb
jl
outsl
shrl
test
mov
mov
loopne
fisttps
mov
jnp
mov
adc
popa
jle
dec
jl
dec
xchg
xor
sbb
mov
je
shld
mov
addb
push
inc
jb
nop
jp
xchg
xor
insb
repnz
sub
mulb
ds
imul
jl
xchg
sub
sti
rclb
jecxz
dec
jl
shlb
and
repz
lock
dec
inc
imul
mov
push
xchg
pop
mov
mov
push
jg
jo
iret
mov
cmpsl
push
cwtl
xchg
cmp
inc
lds
mov
xor
adc
xchg
mov
and
negl
xlat
cld
inc
sub
test
push
nop
mov
xchg
sar
and
std
pop
ds
imul
pop
movsb
mov
insb
rol
and
adc
dec
call
test
sbb
xchg
sti
jno
mov
xchg
rorb
push
push
pop
mov
mov
mov
lock
sub
lods
mov
ds
das
in
dec
in
repnz
std
xlat
and
or
sbb
dec
js
sbb
aam
imul
push
xor
enter
jnp
cld
xchg
cli
enter
sbbb
mov
scas
add
sub
mov
jb
mov
mov
and
ja
push
pop
adc
jns
add
sub
repnz
mov
mov
push
jmp
jns
or
imul
add
mov
xor
jmp
jp
push
call
jle
test
mov
jae
stos
inc
inc
cmp
push
imul
or
pop
adc
in
cwtl
mov
push
pop
jae
call
outsb
loope
sub
or
cmp
das
out
jle
shll
xor
enter
pop
xchg
cmp
mov
or
add
and
rorb
mov
push
push
jb
stos
jle
push
bound
xor
and
loope
xchg
rcr
lcall
xor
repz
pop
xchg
popa
add
daa
test
and
sbb
xchg
outsb
mov
rcrb
sbb
push
stos
sub
xor
lret
shl
aam
lods
jl
jns
pushf
popf
dec
mov
pop
xor
cmp
xchg
dec
add
leave
cmpsl
xor
cmp
and
jb
int
out
mov
iret
adc
fidivs
notl
fimuls
pop
andl
repnz
ret
les
ja
scas
dec
mov
into
iret
xor
popf
jl
icebp
pop
aad
pusha
inc
inc
data16
lds
pop
out
aas
inc
xchg
idivl
xchg
xchg
mov
int
push
stos
xchg
in
cld
mov
or
sbb
in
jle
repnz
and
and
push
xchg
adcb
lea
xlat
cwtl
rorl
enter
cwtl
adc
push
clc
sub
add
jle
mov
icebp
inc
xor
cmp
test
mov
xor
pop
lods
pop
xor
cwtd
xor
dec
lods
inc
hlt
clc
push
jecxz
xchg
imul
and
pop
and
mov
fstpt
push
adc
cmpsl
jb
cmpsl
dec
into
cwtl
enter
mov
les
mov
sbb
mov
clc
adc
xchg
mov
or
lods
lods
cmpsb
xor
movsb
jnp
inc
cmpsb
aad
lret
dec
in
mov
rcl
jp
lea
lcall
mov
and
fistl
mov
add
sub
jp
dec
sbb
sti
xchg
and
xlat
ret
jo
ljmp
dec
daa
in
mov
enter
xchg
fcomp
fcmovb
das
mov
mov
mov
add
push
cmp
cmp
jge
sti
and
jb
lret
add
pop
addr16
jg
mov
dec
in
cli
adc
dec
int
orl
jnp
ficoms
fbstp
or
pop
js
jb
sbb
push
jnp
xchg
inc
xor
jb
cmp
adc
dec
or
jno
roll
aam
mov
popa
fadds
stos
jl
inc
out
shrb
add
popf
lock
jo
and
xor
sbb
or
imul
jecxz
in
out
lret
cmp
push
loopne
xchg
shrl
and
mov
sti
test
add
dec
jo
mov
mov
pop
sub
movsb
jb
cltd
int3
or
cli
add
push
loopne
sbb
mov
cld
mov
repnz
cmp
push
xor
out
mov
add
inc
mov
das
adc
and
std
pop
aam
stc
lret
inc
pop
push
dec
push
xchg
lds
sahf
sti
or
xchg
lret
addl
gs
and
sub
mov
jnp
lcall
lret
movsl
loop
mov
xor
repnz
mov
xor
leave
outsb
mov
mull
addb
pop
dec
popa
out
inc
mov
xchg
daa
xor
xchg
lods
adc
jbe
inc
and
lret
xchg
cld
and
rcl
lods
out
add
sbb
leave
scas
lret
pop
mov
ror
imul
xchg
sbb
dec
loopne
adc
add
fnstsw
fisttpl
dec
mov
test
pop
mov
pop
es
cmp
xchg
mov
fdivs
mov
cmp
or
jne
jg
xchg
insl
jnp
add
dec
xchg
jl
mov
arpl
enter
in
mov
mov
iret
in
or
bound
push
scas
sahf
pop
js
loope
aaa
ret
jecxz
ret
xchg
push
sbb
mov
lea
push
repnz
call
sub
cmp
in
sub
fstpl
and
imul
mov
inc
dec
ss
pop
lock
xor
lcall
fldl
mov
ret
mov
and
cwtl
pop
jmp
in
addb
scas
sub
xlat
jle
dec
lahf
cmp
scas
loope
jns
mov
xchg
mov
xchg
sub
sub
stos
sbbl
pop
out
clc
mov
sub
mov
push
and
gs
or
test
dec
mov
mov
scas
in
mov
or
mov
popf
push
pop
fdivrs
mov
aaa
mov
int
push
scas
xchg
xchg
icebp
enter
or
stos
mov
lahf
mov
pop
mov
cmp
in
bound
enter
ljmp
mov
jns
aad
dec
out
int
pop
dec
cmpsb
lret
dec
jbe
jb
xlat
inc
cmc
stos
jno
mov
fs
mov
sti
push
mov
loope
fs
push
cmpsl
add
xor
enter
sub
adc
dec
push
add
sub
pop
shlb
adc
lods
push
lea
mov
arpl
push
add
insl
push
daa
dec
cmp
in
mov
sbb
and
shrl
inc
mov
stos
mov
jo
or
pop
mov
add
mov
jno
sbbb
push
lahf
test
jmp
xor
bound
popf
lods
push
in
mov
sub
push
inc
inc
push
in
enter
push
lods
and
pop
pushf
and
cmc
mov
fbld
loop
dec
inc
cmp
test
xchg
mov
mov
lret
enter
adc
and
test
imul
or
movsl
xor
loope
rorl
into
adc
push
fs
adc
push
adc
shll
adc
jp
into
inc
mov
sbb
mov
and
sbb
mov
mov
hlt
sub
call
adc
test
jle
cld
and
incl
sub
cmp
xor
iret
fistpll
xor
xchg
adc
sub
xor
inc
xor
push
mov
push
sub
cmp
jmp
adc
xchg
lcall
iret
pop
xor
fcoml
mov
jbe
and
mov
out
cmp
je
xor
mov
or
pop
lret
sbb
lcall
mov
pop
cmp
test
out
test
mov
inc
lds
and
imul
add
fiadds
lods
fs
pop
lock
notl
xchg
mov
xchg
and
scas
aad
pop
xchg
cmp
or
lods
loopne
mov
push
dec
mov
scas
jnp
sub
daa
xor
movb
push
sub
cltd
xlat
test
shlb
loope
pop
cs
mov
inc
pop
jl
sub
jl
imul
pop
add
or
mov
repnz
mov
mov
mov
aas
xor
cmpsl
push
mov
mov
add
xor
in
gs
dec
push
repz
pop
inc
dec
pop
jb
ss
cli
jo
sub
sub
xor
fidivrl
push
loope
jns
xchg
std
pop
rclb
jmp
gs
and
imul
xor
call
mov
outsb
mov
push
pop
rcrl
add
sbb
jbe
imul
rolb
xchg
sbb
lret
sahf
sbb
loopne
mov
mov
sub
test
xor
cmpsb
jmp
out
sbb
jecxz
cmpsb
mov
jae
repz
xchg
outsl
push
rcll
pop
fsts
sti
enter
xchg
into
in
fwait
push
sti
mov
lds
movsl
mov
ss
dec
mov
jle
fnstcw
or
aad
jo
or
mov
pusha
pop
fimull
outsb
jns
fmulp
adc
mov
outsl
or
ret
push
xchg
aam
dec
xlat
mov
fcmovb
sarl
ja
mov
inc
stos
sbb
xchg
push
push
jmp
test
jmp
lahf
ss
nop
stc
pop
xchg
scas
push
nop
cmp
cmp
repz
jns
das
and
xchg
arpl
cmpsl
fidivrs
xchg
sub
lock
sbb
inc
push
dec
mov
push
push
test
aas
negb
icebp
cmp
sub
sbbb
sub
adcl
push
sub
jne
fwait
jp
mov
test
sbb
mov
iret
cld
dec
cmp
inc
mov
lock
xchg
sbb
or
xor
in
pop
dec
stos
or
bnd
lods
add
out
fdivrl
sub
mov
cmpps
cmp
add
clc
jge
xchg
or
push
jo
sub
aam
mov
outsl
gs
movsb
fsubrs
stos
cmpsl
sarl
or
sti
mov
ljmp
cmpsb
or
je
mov
push
mov
sahf
inc
push
cmp
inc
repz
sub
cltd
jp
jp
push
cmp
cmp
dec
std
jnp
loopne
ljmp
shl
lds
or
mov
lds
jne
fdivrl
dec
push
pop
xchg
mov
hlt
daa
pop
ficoml
stc
scas
sbb
jno
fsubrs
cmp
fisttpl
push
shll
mov
lds
out
xor
repnz
aam
sbb
or
fs
jbe
shll
inc
lcall
jns
inc
mov
inc
push
mov
and
in
sarl
adc
add
lea
shlb
in
bound
mov
fstps
loop
das
push
out
stc
cmp
out
es
xor
mov
jnp
sub
mov
mov
imul
jbe
mov
mov
mov
sbb
inc
xchg
test
daa
add
imul
inc
add
jl
cmpsl
ret
mov
push
jb
test
xchg
scas
subb
dec
mov
call
mov
cltd
leave
push
pop
jl
adc
roll
test
mov
stos
outsb
test
stos
push
out
stc
lods
lea
lods
inc
in
out
jl
imul
popf
lret
daa
add
xor
ret
sub
shlb
jae
push
mov
mov
test
xor
cmp
call
sbb
pop
add
mov
push
pusha
jo
mov
or
test
jg
sbb
stc
imul
or
sub
test
jl
jle
or
test
push
bound
push
cli
cs
mov
pop
xor
inc
bound
loop
mov
aaa
loopne
mov
lcall
test
fadds
int3
mov
rcll
repnz
repnz
mov
icebp
cmp
xor
clc
or
test
dec
idivb
mov
sahf
mov
xlat
test
and
jmp
push
loop
jl
fisttpl
sub
or
mov
push
cmp
dec
mov
in
jne
jl
jno
xchg
push
push
lret
sbb
lock
push
jbe
mov
xchg
push
push
push
fisubs
jecxz
cmpsl
inc
and
mov
lcall
pop
in
push
push
push
movsl
repz
xor
mov
ja
cmp
push
into
fadd
jmp
loope
or
jmp
repnz
and
iret
sbb
loope
fcmovu
lret
xorb
mov
jbe
jns
jp
xchg
push
aad
cmp
ja
add
and
cmc
xchg
mov
mov
add
dec
xchg
mov
or
je
inc
jnp
push
cwtl
mov
xor
push
fstps
add
cmp
xor
pop
jge
mov
pop
sbb
loop
mov
cmp
into
pop
push
ss
xor
or
xchg
mov
dec
sbb
cwtl
test
sbbl
mov
sub
stc
xor
icebp
jle
xchg
push
pop
dec
push
insl
ja
cmp
dec
subb
test
fldt
mov
xorb
mov
movl
xchg
adc
and
je
sahf
aam
lock
cmp
in
lcall
mov
dec
sbb
out
or
test
imul
stos
cmp
cld
sub
les
imul
jno
ds
xor
add
pop
test
cmp
jl,pt
sub
adc
enter
cmp
push
call
mov
clc
test
imul
jge
push
adc
add
mov
pop
shrl
rorb
fs
add
xor
dec
cmp
or
sbb
push
pop
xor
mov
call
mov
add
in
and
mov
popf
push
test
out
xchg
in
inc
inc
popf
dec
sbb
loopne
inc
push
push
jge
adc
scas
sub
push
pop
mov
cmpsl
xor
mov
stc
pop
jmp
mov
inc
or
mov
movsb
sub
add
push
arpl
roll
jmp
adcl
int3
jecxz
push
das
sub
and
add
js
lock
inc
pop
popa
insb
and
int3
into
dec
subl
add
ds
iret
pop
adc
push
movd
jmp
lahf
add
stos
mov
xlat
fildl
rorb
stos
mov
loopne
int
push
popf
mov
pop
add
aaa
mov
xchg
inc
xchg
lods
inc
ljmp
pop
dec
pop
sub
cld
repnz
mov
stc
pop
xor
sub
adc
xor
mov
outsl
cmc
push
jecxz
add
aam
push
mov
dec
in
jb
scas
mov
mov
loop
test
sbb
stos
int
sarb
ds
testl
dec
shll
notl
lcall
and
pop
xor
jmp
mov
adc
fimull
sub
push
in
xchg
imul
mov
aas
mov
negb
std
out
xor
and
push
imul
lret
rcrl
mov
lret
sar
dec
aaa
movsl
mov
mov
outsl
jge
int
xor
sbb
inc
dec
gs
jb
sbb
test
jge
fs
lret
in
jb
in
dec
adc
and
ficompl
jb
mov
adc
stc
test
push
adc
fmuls
sarb
push
jmp
jbe
inc
jle
mov
push
cltd
mov
inc
mov
les
into
cs
cmpl
sbbl
add
mov
add
movsl
outsl
into
jle
movsl
inc
jmp
xor
adc
les
sub
dec
fs
fidivrs
jle
jae
lret
push
aas
test
mov
mov
pop
mov
fstpl
daa
loop
jne
xor
jp
loop
out
fucomi
shl
dec
xchg
xchg
cmp
fmuls
adc
repz
in
jmp
inc
fstl
imul
pop
inc
xchg
jecxz
xchg
mov
inc
fcmove
dec
rcll
test
dec
sti
popa
in
lods
mov
xchg
fs
fisubrs
mov
push
push
loope
fldl
pop
and
cmp
cmpsb
shrb
mov
push
cmpsl
ret
mov
mov
pop
mov
mov
dec
cmp
popf
pushf
cwtl
aad
adc
jp
cmpsb
push
inc
incb
cmp
jbe
jecxz
cmp
es
xchg
lods
and
sbb
jg
ret
push
add
inc
or
sbb
add
mov
stc
mov
lcall
xchg
out
jne
out
or
enter
scas
std
mov
jnp
out
ficoms
push
stos
mov
xchg
sub
clts
and
popf
mov
cwtl
cwtl
in
call
adc
xor
mov
pop
mov
rol
adc
aam
cltd
dec
push
lods
ljmp
mov
xchg
pop
push
cmc
mov
inc
add
inc
sarl
push
mov
mov
adc
int
shll
mov
or
push
pop
mov
inc
cltd
fiaddl
mov
mov
push
dec
inc
cmp
mov
loopne
inc
mov
pop
lock
cmp
sub
xchg
or
mov
daa
jl
fistl
or
pop
pushf
aad
pop
movl
decb
cmp
jecxz
cmp
cmpl
dec
popa
sbb
lcall
sbb
jbe
or
pop
mov
lds
mov
js
addl
mov
test
ffreep
mov
or
stos
shrd
add
jnp
mov
inc
xchg
aaa
or
loop
jns
leave
and
adc
mov
pop
xor
lods
out
mov
xchg
jmp
outsl
stc
xchg
leave
sub
lret
xchg
xchg
int
sqrtps
sbb
push
mov
test
or
rolb
js
fadds
imul
test
dec
xchg
pop
inc
out
aas
out
xor
jmp
sub
rcll
dec
dec
enter
inc
cmp
repz
jge
ret
ja
xor
insb
fwait
out
fstpt
sbb
fmulp
mov
aaa
xchg
lret
jl
in
lock
mov
leave
aas
push
aaa
int
mov
mov
add
mov
fldl
add
out
js
hlt
sub
mov
fs
adc
mov
push
insb
sub
nop
jg
mov
shlb
jecxz
xor
ja
xchg
mov
inc
add
imul
mov
xor
pop
into
sbb
in
push
adcb
loop
imull
xor
sar
loope
addb
adc
or
lock
cs
mov
rcrb
pop
mov
sbb
scas
jmp
outsb
vmovdqa
mov
mov
rcll
add
jmp
mov
shll
in
or
mov
adc
lods
clc
cli
lods
icebp
lcall
pop
ss
add
push
inc
inc
or
fs
andb
inc
stc
icebp
xchg
add
adc
or
pop
scas
fs
aad
and
mov
add
pop
cld
into
sub
pop
add
mov
in
das
add
ret
shr
mov
push
lds
movsl
ret
into
pusha
inc
dec
mov
inc
repnz
mov
pop
dec
xchg
pop
in
push
aaa
mov
faddl
fdivrs
int
mov
stos
adc
push
add
mov
mov
aas
pop
pop
movsl
jp
adc
push
xor
in
mov
cli
dec
sub
or
dec
inc
scas
cmovge
push
sbb
subb
pop
test
xchg
and
and
jge
fdivl
jp
pop
out
inc
and
scas
rol
mov
mov
out
sbb
or
adc
pop
into
test
dec
adc
inc
nop
pusha
inc
inc
or
push
jge
scas
outsb
icebp
cli
inc
popa
lds
rep
jno
imul
popf
fwait
cmp
in
mov
cmc
cld
sahf
stos
jge
cmp
add
lods
jo
mov
cmp
sub
mov
cmpsl
push
aaa
mov
pop
movsl
add
lea
mov
test
ffree
xor
add
pop
cmp
sub
sub
jg
popa
mov
lahf
push
adc
in
out
dec
push
mov
mov
in
dec
jl
lods
adcb
mov
dec
fsubp
cmp
push
lret
adcb
lcall
icebp
push
cwtl
jns
mov
addr16
sub
dec
xchg
push
or
fsts
adc
xor
lock
mov
xorb
std
pushf
push
pop
mov
dec
sub
xchg
or
add
xchg
jge
stos
lahf
cmp
les
and
adc
repnz
sub
scas
repnz
pop
adcl
inc
pop
lahf
cmp
sbb
adcb
sub
sub
popa
out
sub
adc
inc
ds
push
dec
mov
xor
daa
or
push
mov
out
in
xor
in
aas
jg
dec
lahf
loope
fistps
mov
push
or
cltd
dec
cmc
negl
xchg
outsb
sub
xchg
add
add
fstpl
push
ja
xor
xor
sub
xor
mov
lcall
add
out
sub
fildll
ret
aaa
pop
rclb
in
cmp
hlt
pop
jno
pushl
int
xchg
xchg
xchg
in
sbb
jecxz
cmc
cli
push
xchg
or
push
or
call
xorl
cli
xchg
cs
lods
xor
sbb
dec
mov
in
test
push
sub
test
mov
inc
pop
pop
cld
mov
push
cmp
dec
aam
xchg
and
adc
insb
inc
cmp
xor
pop
mov
mov
jmp
sbb
cs
rolb
add
pop
cmc
jbe
mov
xchg
mov
sub
data16
jbe
push
cld
insb
rorb
push
mov
mov
xorl
out
js
and
imul
cltd
sarb
sbb
rcrb
in
jge
popa
xchg
dec
cmp
and
jb
iret
gs
cmp
and
fmuls
adc
popa
mov
sbbl
movsl
jmp
xor
les
jnp
dec
test
sahf
xchg
adc
sbb
in
or
mov
inc
mov
cltd
sbb
movsl
xor
inc
dec
xchg
push
mov
out
clc
xlat
in
xor
ret
fcompl
lahf
lret
push
sti
adc
push
cmp
inc
mov
ljmp
outsl
subb
and
xor
sub
dec
dec
or
scas
jecxz
xchg
ret
fistl
popf
jno
mov
in
ljmp
movsl
mov
cwtl
lahf
jg
shl
add
jne
or
daa
sbb
cmpb
sti
ss
pusha
shll
fdivl
js
mov
stos
popf
ja
dec
xchg
xchg
pop
aad
punpcklbw
ret
jecxz
pop
or
adc
cmpsl
dec
loopne
rclb
or
push
fistpl
jecxz
or
mov
lcall
cmpsb
xor
push
in
shld
mov
test
mov
lahf
stc
push
popa
sub
mov
adc
test
lcall
lret
mov
inc
push
movsb
jno
int3
cli
adc
jecxz
sub
push
ds
mov
divb
je
int3
or
pop
pop
inc
leave
mov
call
push
in
dec
mov
mov
pop
jmp
repz
mov
popf
sbb
jmp
push
cmpsb
jp
rcr
ja
jb,pt
cltd
xchg
out
dec
cmp
xchg
pop
pushf
iret
jne
call
int
inc
xor
sub
push
loope
mov
inc
pop
inc
sbb
aas
inc
clc
stc
lods
daa
mov
xor
push
loope
sbb
sbb
jbe
add
lret
sbb
cwtl
adcl
adc
stc
pushf
sub
xchg
mov
add
fdivrp
dec
mov
lret
and
stos
sub
xchg
sub
stos
push
leave
stc
in
mov
inc
sar
shll
mov
xchg
pop
in
push
dec
mov
lea
scas
cwtl
outsb
pop
sarb
dec
push
stos
mov
mov
clc
addr16
lret
xor
mov
movsl
orb
je
mov
xchg
call
shrl
jns
lcall
mov
jmp
adc
out
mov
dec
xchg
mov
sub
insb
mov
cs
clc
stc
sub
dec
dec
cmp
outsl
push
jb
sub
orl
test
xchg
loope
js
mov
and
jmp
sbb
ficompl
jle
or
loopne
negl
out
sub
sahf
pop
sti
sub
jb
aaa
add
divb
sbb
add
mov
testb
cmpsl
and
cmp
js
popf
mov
adc
imul
xlat
inc
dec
jbe
jo
add
sbb
decb
fs
dec
cmpsl
dec
clc
js
std
inc
push
fldt
repnz
es
lds
xchg
js
xchg
in
adc
fcomps
jg,pn
adc
push
aad
out
jl
fwait
pop
lret
aaa
movsl
shrb
pop
test
outsb
aaa
inc
pop
movsl
scas
or
inc
rcl
aas
out
movsb
icebp
sbb
pop
sbb
cmpsl
adc
xchg
pop
sub
or
and
xor
jl
xorl
test
pop
fs
popa
test
push
mov
fcompl
pop
iret
ss
sub
movsl
cmp
leave
sbb
ljmp
arpl
ret
pushf
addl
adc
ss
xor
mov
mov
push
sbb
test
aam
inc
dec
and
jge
dec
jmp
loopne
lea
adc
inc
push
mov
lea
push
sub
jmp
jl
inc
sahf
popa
repnz
cmpsb
mov
or
add
fists
dec
push
icebp
int
rcr
scas
iret
out
ret
inc
sar
sbbl
jne
pop
out
lods
rclb
add
xchg
pop
les
mov
subl
adc
xor
test
jnp
mov
jecxz
fisubs
scas
ja
jns
in
int
out
dec
gs
inc
fists
insl
xchg
andl
xchg
pop
es
stc
jnp
adc
cwtl
fs
aaa
movsb
xor
mov
aam
test
mov
rcrl
mov
push
jl
mov
adc
repnz
pop
or
jne
ret
adc
push
pop
repnz
arpl
pop
subb
xchg
das
xlat
incl
adc
inc
jecxz
inc
imul
pop
iret
jnp
push
dec
mov
mov
mov
loope
sbb
mov
and
sti
adc
mov
add
mov
pop
in
test
or
int
jg
cmc
pop
xchg
lock
mov
rorl
mov
pop
push
cltd
pop
xchg
int3
pop
inc
ljmp
in
scas
dec
adc
xor
scas
adc
or
data16
mov
hlt
and
insb
gs
movsb
sub
addr16
push
out
scas
push
pop
mov
xchg
add
xchg
loop
pop
cld
lcall
sbb
pop
mov
test
adc
div
mov
enter
dec
cltd
push
vminps
mov
pop
ja
inc
push
fsubl
call
testl
jns
adc
sub
lods
icebp
dec
jb
in
or
loop
pop
inc
sub
and
add
cmc
subl
andl
ss
pop
outsl
int3
addb
movsl
mov
dec
cmp
push
mov
ret
in
push
mov
arpl
pushf
fs
loope
ljmp
sahf
mov
xchg
je
sarl
jge
jno
cmpb
aaa
nop
stos
adc
mov
and
mov
xor
cmp
in
int
movsb
cmp
pushf
je
xor
mov
fwait
sbb
lds
dec
push
dec
ja
pop
mov
fnstenv
fidivrl
or
loop
ja
add
ret
pushf
call
loop
jle
rdtsc
repz
push
fwait
dec
rorl
adc
push
test
push
xor
jb
out
mov
and
dec
loopne
mov
notl
out
aad
fists
cmpsb
es
sbb
in
xor
out
mov
mov
rorl
sub
push
push
out
and
xchg
rorl
mov
jg
inc
mov
mov
not
lret
pusha
jp
pop
stc
push
jg
outsl
push
jbe
inc
arpl
repz
lahf
mov
sar
dec
push
mov
sete
stc
repz
outsl
sbb
sbb
es
in
fmull
pop
pop
sbbb
addr16
cltd
testl
jp
cmp
xor
jg
loop
iret
mov
mov
scas
in
inc
dec
xchg
jp
fldcw
xchg
push
cmp
mov
add
lret
or
jge
fldcw
dec
bound
fdivrs
dec
repz
int3
adc
repz
pusha
jle
fs
sti
mov
jg,pn
iret
push
jne
in
mov
sub
lock
xchg
inc
sysexit
and
sbb
js
xor
push
gs
cmpsl
xlat
loop
rclb
daa
push
jmp
aaa
imul
mov
lahf
sub
pushf
test
lods
adc
mov
push
call
in
xchg
aaa
cmp
inc
mov
ja
push
dec
out
adc
lahf
mov
xchg
lret
test
gs
data16
push
mov
ss
mov
mov
outsl
aam
scas
stc
loope
aam
scas
sub
xor
cmpl
mov
leave
popa
jns
das
inc
lods
aas
addl
sbb
mov
fs
adc
aas
add
sbb
mov
inc
push
outsl
pop
xor
mov
cmp
push
mov
mov
pop
mov
aam
inc
loop
pop
lahf
add
insl
mov
sbb
push
fwait
pop
adc
cltd
test
fmull
pop
clc
divl
imul
inc
push
adc
mov
sbb
or
sub
jae
cli
dec
adc
jne
sbb
std
adc
movsb
lods
inc
ret
repz
stos
inc
jmp
mov
dec
test
cmp
cvtps2pd
in
lcall
sbb
push
sub
mov
xlat
fnsave
jne
mov
idiv
sub
jne
dec
push
mov
mov
sub
into
gs
test
cmpl
popa
inc
pop
enter
sub
imul
jle
mov
nop
lds
xor
adc
or
bound
lea
inc
ficoml
lret
lahf
les
mov
dec
popf
xchg
xchg
inc
fcmove
jmp
jbe
xchg
lea
sbb
cmp
out
and
in
notb
iret
dec
pop
mov
fisubl
ja
sub
incl
mov
inc
xchg
imul
pop
xor
int3
inc
or
xchg
movsl
je
adc
out
sub
add
mov
mov
sbb
and
adc
scas
mov
rcr
lret
inc
mov
mov
inc
dec
mov
inc
mov
outsl
cmp
xchg
into
adc
loop
xlat
sub
imul
lret
cmp
scas
and
mov
test
aaa
lcall
cmpsl
dec
fs
stos
test
adc
cmpsl
jne
mov
push
das
mov
into
adc
bound
shrb
mov
jp
xor
and
adc
push
xor
inc
mov
xchg
cmp
in
fs
insb
mov
and
iret
outsl
or
enter
inc
inc
inc
in
mov
lahf
pop
jb
jne
xlat
aam
std
fwait
mov
andl
int3
push
cmc
xor
push
lods
xchg
sub
push
jp
das
fildll
cwtl
out
test
adc
lahf
fs
cmp
mov
sub
sub
mov
sub
aam
addr16
sbb
sub
iret
fcoml
lret
rolb
pushf
and
mov
sti
push
mov
hlt
cwtl
shr
mov
fwait
mov
adc
enter
mov
push
adc
jecxz
mov
lds
out
adc
shrl
mov
shl
or
mov
mov
sbb
dec
idiv
cmpsl
fsubs
insb
cld
stos
in
cs
jbe
cwtl
rcrl
sahf
xchg
pushf
cmp
lods
data16
rclb
xor
fidivl
push
pop
xchg
pop
mov
mov
dec
lock
xchg
cmpsb
or
xchg
sbb
ror
dec
in
mov
sarb
xchg
lahf
shll
pop
test
sub
out
jo
mov
loopne
cmp
and
mov
pop
int3
push
pop
out
daa
sarb
add
jno
outsl
inc
repnz
rorl
repz
stc
loop
jge
cmp
pop
pop
xor
cmp
stos
je
scas
and
cmp
imul
pop
jge
test
in
in
mov
mov
jecxz
mov
inc
test
es
repnz
out
test
daa
add
in
lods
cmp
icebp
or
icebp
mov
or
pop
inc
in
jg
mov
les
sub
adc
test
push
loopne
jmp
add
cmp
push
cmc
fwait
sbb
mov
lock
loop
scas
loopne
sbb
jecxz
xchg
aaa
aaa
stos
imul
sbb
movl
test
cmp
push
jo
jl
negb
cli
xchg
mov
cmc
test
bound
aas
xchg
lcall
xchg
sbb
icebp
mov
arpl
stc
mov
ret
rorb
add
icebp
out
scas
inc
roll
out
push
je
and
cmc
pop
outsl
cmpsl
std
lock
mov
or
pop
add
stos
cmp
lret
cld
inc
dec
test
mov
test
in
testl
sub
and
rclb
mov
scas
push
cmpsb
icebp
in
xchg
cmc
stos
fistpll
lods
xor
xor
sbb
cmp
xchg
jle
orl
xor
shrb
jge
sahf
and
vpmaddwd
pop
xor
sbb
fcmovu
je
pop
fwait
xchg
out
mov
insl
ja
mov
iret
push
push
rol
xchg
jl
xchg
repnz
pop
aas
and
and
push
dec
pop
mov
mov
data16
leave
mulb
les
aad
jle
repz
repnz
packssdw
insl
sbb
jne
xor
add
cmp
int3
addl
fcomps
mov
into
push
jmp
push
push
jns
ds
les
aaa
int
gs
dec
push
les
dec
gs
mov
subb
dec
fucom
xlat
cmpsl
cmpl
cltd
cwtl
cmpsb
test
arpl
std
lods
dec
jge
fwait
xchg
sahf
push
int3
xor
rol
jl
psubw
pop
mov
push
mov
pop
in
movsl
call
movsl
inc
jmp
cmp
repz
pop
repz
mov
xchg
pusha
push
call
push
mov
jl,pn
int3
outsb
or
pop
mov
jl
out
dec
lcall
loope
enter
std
push
rclb
je
sub
jno
in
and
data16
push
mov
mov
cmp
xchg
clc
pop
aad
adc
js
mov
cmp
repz
xchg
aaa
cmc
jns
sub
in
decl
negb
aas
inc
sub
in
cmp
cltd
adc
adc
push
cmp
inc
pop
xchg
jae
rorl
in
ljmp
and
mov
bound
cmp
cwtl
and
faddl
inc
gs
xchg
mov
mov
or
fnstsw
test
sbb
xor
mov
mov
into
inc
stos
lds
mov
rclb
ret
addr16
mov
push
xchg
dec
push
cmp
pop
xchg
imul
adc
adc
xchg
pop
ljmp
xor
and
ret
xchg
inc
loope
xor
xor
popa
cmpsb
ja
xchg
fsubrs
xor
outsb
dec
push
pop
mov
gs
cmpsb
and
test
sti
xchg
xchg
inc
rcll
addl
test
push
cltd
sub
test
popf
mov
jl
aas
mov
dec
data16
jae
insb
sub
sub
fs
popa
or
xor
adc
mov
test
fdivl
mov
popa
xlat
or
sbb
pop
push
je
inc
sbb
insb
lock
rclb
mov
lahf
hlt
stc
popa
inc
add
in
mov
push
mov
mov
lahf
mov
call
aas
mov
adc
xor
jl
jae
and
push
enter
insb
lods
mov
stos
repnz
lods
dec
lret
icebp
cmpsl
mov
movsl
pop
ficompl
inc
mov
in
jmp
icebp
dec
sbb
pusha
xchg
pusha
and
shl
or
jbe
cmp
arpl
sub
pop
hlt
pop
push
mov
inc
ss
push
je
inc
out
jnp
mov
adc
imul
lds
jae
je
jno
add
scas
in
dec
inc
mov
xor
add
sbb
inc
ljmp
xchg
filds
and
sbb
enter
dec
mov
and
pop
loop
das
aam
insl
rol
jmp
dec
pop
popa
insb
dec
scas
pop
inc
cmpl
icebp
iret
int3
jnp
push
sbb
adc
inc
test
jbe
out
mov
and
mov
imul
cmc
dec
shll
repnz
jb
xchg
sub
push
mov
or
dec
ret
cmpsb
in
lock
or
or
mov
push
lret
dec
ja
loop
mov
lret
loope
fld
inc
push
enter
mov
jae
lret
mov
stc
std
shrb
cmp
mov
pop
push
or
mul
jecxz
mov
and
loopne
and
icebp
or
and
pop
imulb
xchg
adc
xchg
mov
repnz
xlat
push
scas
stos
loop
xchg
cmp
add
test
pop
mov
addr16
dec
aam
mov
movsb
in
cmp
loope
xchg
lock
push
out
das
pop
sarl
outsl
pop
push
push
dec
sbb
leave
mov
shrb
mov
dec
cmp
inc
and
push
insl
fwait
xchg
push
xchg
fsubs
push
les
push
jne
jmp
jae
loop
test
pusha
sub
sub
push
mov
push
mov
fstl
stos
xchg
inc
daa
pop
lods
aad
sti
or
lods
cmc
dec
pop
or
adc
add
xchg
xchg
push
xchg
xchg
mov
xor
and
or
mov
test
aad
inc
xor
hlt
ret
stc
int
inc
jb
ds
scas
mov
scas
jle
push
mov
and
notb
or
adc
fstpl
daa
push
jge
and
push
fisubl
adc
jecxz
mov
outsl
pop
or
nop
loopne
pop
inc
jno
jecxz
dec
jmp
add
popa
stos
mov
ret
or
mov
insb
adc
popf
cmc
push
pop
outsl
sub
dec
cwtl
jl
pop
jne
lret
cmpsb
mov
insb
andl
inc
cs
cmp
sub
cltd
inc
jb
pop
adc
cwtl
es
push
iret
fwait
xchg
pop
xchg
int
inc
mov
lahf
mov
sub
xor
and
mov
or
stos
test
mov
push
xchg
cld
jecxz
or
or
cmp
mov
enter
pop
adc
cmp
mov
aam
idivl
sbb
adc
fsts
das
lea
xchg
into
dec
in
pop
jae
pusha
jp
push
pop
movsb
stos
mov
lret
xor
test
bound
and
xchg
jmp
lds
or
push
dec
jne
mov
sub
andb
inc
adc
out
cltd
jb
mov
cmp
mov
sbb
cmpsb
stc
call
mov
gs
in
mov
jns
subb
mov
jo
and
fwait
cmp
lock
fldcw
mov
popa
xrelease
push
xchg
cld
mov
fwait
inc
sub
in
or
cli
mov
dec
xchg
jno
mov
mov
je
inc
aaa
imul
inc
ljmp
mov
mov
xor
arpl
pusha
in
xchg
movsl
xor
dec
mov
jnp
test
sub
aas
or
orl
test
popf
and
push
mov
or
repnz
cmp
out
ja
pusha
cmp
jle
cld
xchg
dec
jmp
mov
pusha
inc
push
pop
jmp
stos
movl
int
daa
jns
jb
imul
out
mov
popf
mov
dec
int3
add
or
cmpsl
out
pop
dec
roll
ljmp
sub
or
icebp
repnz
pop
pushf
xchg
test
and
dec
mov
or
xlat
movsb
popf
inc
or
jnp
dec
adc
add
int
jp
icebp
mov
mov
mov
icebp
pop
imul
cmp
insl
mov
fs
or
ret
sbb
push
push
dec
in
movsl
cli
push
pop
mov
push
jnp
fucom
decl
and
cs
adc
mov
mov
mov
sbb
and
mov
test
push
ror
in
cs
adc
fs
mov
loop
sbb
movl
fcmovb
fsincos
or
in
cmp
push
xchg
jge
pop
inc
cmp
fcoml
and
lods
pop
mov
cmp
test
rcr
xor
jne
pop
rcrb
adc
push
xchg
sti
test
push
leave
or
or
jo
dec
rclb
inc
sbb
mov
lods
in
data16
jmp
dec
xor
sub
sbb
in
push
out
inc
xchg
lods
fisttpll
dec
in
mov
cmp
pusha
cmpsb
cli
pop
movsl
outsb
xchg
ljmp
xlat
stc
rcl
into
add
add
es
mov
lcall
jl
lcall
hlt
xchg
adc
mov
mov
fs
sbb
ret
popf
in
cmpsl
lods
cmp
adc
adc
mov
es
sbb
mov
popa
fisttpl
hlt
push
push
scas
lcall
dec
aam
dec
and
test
xchg
mov
mov
xor
xlat
decb
testl
sti
jno
es
out
or
icebp
xchg
divl
xor
js
jne
or
cmp
jge
ja
push
lahf
das
fildll
cmp
aas
and
inc
dec
ds
scas
test
lods
lds
je
push
fidivs
pop
jae
add
ss
add
std
sub
gs
out
mov
lahf
adc
mov
and
push
sahf
inc
push
cmp
stos
sbb
xchg
adc
cmpsl
sahf
cmp
push
add
cmp
push
sbb
adc
jbe
jle
push
sub
dec
jne
mov
mov
adc
arpl
ljmp
xchg
xlat
lret
jne
movsb
test
mov
aaa
filds
scas
adc
dec
mull
and
sub
decb
mov
nop
and
dec
or
hlt
xchg
mov
rolb
pop
mov
mov
xchg
lds
mov
pop
imul
inc
jns
push
les
jbe
fistpll
add
pop
jo
imul
and
xchg
stos
dec
lret
loope
je
imul
mov
mov
loop
lea
pop
push
and
sbb
in
mov
sbb
pop
adc
jo
sbb
adc
clc
mov
mov
testb
xchg
and
inc
ss
push
inc
xor
test
pushf
popa
out
cmp
and
aas
pop
notb
push
outsb
lret
decb
loopne
jmp
sbb
les
mov
dec
sub
push
fildl
sub
add
cmp
xchg
sub
mov
mov
jg
cmc
mov
aas
mov
jnp
arpl
arpl
ror
dec
out
fisttps
mov
jne
push
lock
std
mov
outsb
and
jne
jecxz
push
aas
push
mov
ss
shlb
inc
mov
in
mov
push
or
clc
fwait
scas
adc
inc
xchg
sbb
cmp
in
xor
mov
aaa
test
in
scas
add
or
xchg
xchg
and
inc
xor
cs
lock
pop
in
dec
mov
rclb
rorl
and
icebp
and
or
decb
shrl
shlb
test
outsb
in
inc
data16
lahf
push
das
lret
cmp
cmp
dec
test
inc
scas
lods
mov
and
test
rcll
mov
mov
add
aas
mov
xor
inc
aas
imul
mov
sub
fwait
sbbl
mov
ret
gs
push
fcoms
jno
notl
nop
sub
or
lds
cltd
ja
sti
fwait
ljmp
mov
push
mov
cli
movsb
and
scas
sbb
cs
push
push
sub
push
mov
in
and
loop
jl
and
stos
popa
add
stos
sbb
mov
mov
je
sub
enter
ficomps
cmpsb
ja
test
insb
aam
int3
pop
pop
xchg
inc
jmp
cmpsl
push
cli
jmp
mov
xchg
mov
fldenv
sbb
out
data16
dec
mov
xchg
mov
stos
xchg
dec
into
mov
out
shlb
mov
popa
mov
mov
ret
into
inc
mov
push
push
mov
sbb
or
push
inc
fimuls
jo
xchg
ret
jge
mov
fbld
add
out
loopne
push
inc
add
pop
mov
repz
adc
addr16
xchg
jb
pop
movsb
mov
btc
xchg
adc
xchg
jns
jp
aam
andl
mov
xor
dec
sub
jmp
push
jns
das
xchg
leave
pusha
dec
mov
cmp
mov
mov
aam
call
or
adc
sub
jmp
hlt
das
jmp
dec
sub
mov
sbb
mov
pop
cwtl
ja
test
mov
xchg
fstpl
ds
mov
cmp
add
xor
in
cwtl
ljmp
dec
loope
and
mov
sbbl
dec
or
push
push
insl
cmp
pop
pop
out
aad
xacquire
and
mov
aas
lods
xchg
testl
mulb
mov
arpl
jl
aad
imul
popa
pop
dec
shrb
mov
je
aam
jl
lcall
into
push
add
arpl
fisttps
sarl
icebp
andl
mov
iret
into
mov
add
mov
mov
fsubl
lock
repnz
cmp
addr16
xchg
mov
xchg
dec
test
jbe
filds
cmc
fidivrs
pop
hlt
pop
pop
idivb
jnp
push
push
jbe
inc
gs
ss
int
pop
cld
loop
sti
divl
xchg
sarl
dec
leave
iret
or
push
in
or
cmp
or
or
aaa
xchg
push
and
mov
dec
pusha
repz
ljmp
dec
pop
mov
cmp
push
mov
popa
gs
test
andb
test
insl
dec
int3
and
lds
dec
push
xor
in
shrb
test
sbb
faddl
in
or
xchg
daa
push
add
ror
xchg
or
loop
push
mov
insb
mov
jl
fucomi
arpl
push
ljmp
cli
inc
popf
sbb
inc
fcompl
cmpsb
push
insl
mov
jns
leave
xchg
das
dec
mov
and
xor
imul
add
mov
addr16
and
gs
shll
addr16
sbb
mov
push
sbb
dec
inc
mov
pop
sub
sub
call
popf
push
dec
dec
shll
push
cli
test
fisubs
das
xchg
bound
jbe
inc
lcall
fsubs
xchg
pop
and
stos
xor
jno
in
xchg
sub
js
jo
cs
imul
addr16
adc
ss
jecxz
xor
push
aam
cmp
jecxz
pop
mov
or
sub
adc
aas
jp
xchg
mov
ljmp
movb
cmp
jnp
fistl
inc
sbb
ljmp
push
xchg
dec
sub
loope
mov
xchg
fucomip
jmp
cwtl
inc
push
leave
sub
inc
ljmp
sbb
cmp
sub
insb
push
jbe
mov
lret
cltd
mov
jecxz
dec
fsubrs
fildl
sbb
jae
jnp
mov
xor
xor
shlb
cmpsl
or
loope
mov
mov
jne
fldl
fcoml
mov
push
aad
xor
mov
mov
pop
and
mov
or
xor
push
repnz
jns
jne
orb
or
mov
dec
stos
push
dec
aad
jecxz
adc
cmpsl
xorl
js
cwtl
dec
shlb
sub
cmpsl
insb
and
nop
push
mov
xchg
jbe
andb
sbb
rorl
jbe
aad
pop
jg
xchg
mov
cmpsl
mov
pusha
fistpl
and
test
pop
stc
div
xlat
mov
mov
ds
inc
icebp
push
mov
lds
sub
cld
lods
dec
inc
lea
xlat
inc
fnstsw
lahf
jo
push
pop
xor
gs
sarb
mov
xchg
dec
inc
notb
jnp
push
add
push
xchg
imul
dec
jne
mov
xchg
sub
and
imul
xchg
shlb
sub
fisubrs
test
mov
je
mov
es
add
inc
insb
push
andb
or
mov
dec
xor
stos
mov
xor
cmp
mov
repz
mov
pop
mov
fidivrs
inc
jbe
aad
pusha
sahf
jo
push
pop
cwtl
das
cmp
iret
cmpl
sub
lods
out
inc
test
imul
dec
fcmovu
xor
sub
or
mov
fidivs
cmp
jo
movsl
data16
pop
ret
mov
xor
xchg
xor
sarl
mov
adc
ret
inc
divb
mov
xchg
and
sbb
sbbb
jbe
js
xchg
xor
and
push
pop
int
xor
test
shld
mov
jmp
inc
pushf
lret
imul
jge
and
hlt
xor
fidivrl
push
xchg
mov
push
imul
pop
add
and
and
and
mov
mov
std
in
fsubrl
sbb
test
es
stos
or
mov
aas
mov
pushf
lea
xor
mov
rol
mov
push
pop
sarb
popf
ss
mov
cmpsl
int3
inc
adc
cmp
outsb
push
std
add
repz
xchg
sbbl
xor
aad
ret
sub
rep
mov
inc
dec
out
je
jp
sti
jmp
xor
test
cmpsl
cmp
cmpsl
cmp
daa
fsubrl
jge
adc
icebp
orb
pop
jp
jb
ret
cmp
in
out
sbb
add
mov
mov
and
xlat
push
testb
or
je
sbb
and
pusha
mov
cmp
push
mov
adc
jb
mov
dec
dec
cmpsb
push
xchg
mov
xor
inc
cmp
ret
les
jg
dec
cmp
cmp
dec
lret
sub
xor
hlt
mov
lds
or
inc
lds
repnz
push
lahf
mov
clc
and
cmc
adc
push
adc
test
xchg
mov
pop
js
adc
lods
push
clc
lock
inc
jmp
jno
cltd
fs
shlb
add
mov
bound
fs
ss
test
or
jno
mov
movsb
lea
mov
iret
orl
pop
cltd
xchg
cmc
insb
or
xlat
clc
push
into
dec
fstpl
cli
filds
mov
lret
repnz
inc
popa
push
mov
jp
mov
inc
adc
xchg
and
inc
xor
lret
sub
loop
idiv
movl
popa
jecxz
sbb
nop
and
js
xchg
dec
mov
push
jne
adc
push
and
pop
cli
lods
pop
mov
xchg
lock
loop
addr16
jl
lcall
xchg
cmp
gs
jl
fidivl
adc
sub
out
lods
add
into
jae
pop
orl
hlt
repz
mov
jg
mov
sbb
sbb
mov
int3
add
inc
mov
stos
jge
adc
popf
mov
out
cmp
data16
lods
movsl
stos
push
push
and
inc
lods
mov
shll
sbb
and
cld
mov
sub
out
faddl
lret
push
lods
mov
xlat
mov
or
jg
fcoms
iret
imul
dec
int
cmp
pop
insl
pop
icebp
in
fisubrl
pop
mov
cld
inc
cmp
dec
rorb
push
movsl
cmpsl
outsb
arpl
and
mov
cmp
inc
cmp
stc
ret
arpl
pop
push
jecxz
jae
imul
popa
xchg
pop
jns
sysret
sub
cwtl
push
jmp
mov
dec
add
fsub
adc
xor
test
out
loopne
in
lods
inc
push
pop
mov
in
mov
pop
inc
or
add
lcall
and
aaa
lahf
pop
and
lock
sbb
or
cwtl
and
fiaddl
and
aas
mov
outsl
into
out
lcall
int
mov
jo
lea
lret
or
add
scas
rol
cld
jno
pushf
inc
in
stos
cmp
inc
imul
jnp
stc
or
icebp
aam
outsl
out
stc
adc
adc
mov
aad
push
cmpsb
lcall
sub
jae
icebp
dec
cmp
push
pop
xchg
xchg
shrl
pop
pusha
mov
pop
ljmp
ss
ret
xchg
xchg
and
pop
add
or
sub
scas
cltd
adc
push
jmp
pusha
js
pop
ret
insl
in
mov
xor
jno
pop
loop
pop
lret
lods
xchg
mov
mov
sub
xor
xchg
and
mov
cli
pop
std
and
movsl
jne
and
loopne
or
lcall
mov
cmp
fwait
xchg
add
arpl
lea
mov
int
lods
sbb
shl
pop
stos
push
push
push
es
cmpsl
arpl
lret
hlt
pop
clc
pop
in
test
push
jo
xchg
fldt
add
test
inc
fcompl
push
cmp
aam
cmpsl
xchg
xchg
mov
jl
repnz
jge
sarb
es
mov
scas
cmc
mov
pop
jp
sub
inc
cwtl
inc
pop
add
stc
cmpsl
inc
and
jno
in
out
nop
and
in
pop
push
scas
fistps
filds
cmpsb
dec
fs
mov
hlt
iret
adc
dec
sub
pop
xchg
sbb
add
xchg
sub
pop
scas
data16
dec
xor
pop
loopne
mov
test
das
sbb
int
sar
cwtl
add
and
fadd
or
sbb
dec
fisubrs
fildll
je
scas
push
pop
negb
jns
insl
sahf
lea
jne
mov
mov
jne
mov
xlat
pushf
lcall
lcall
call
lods
inc
dec
or
inc
mov
mov
mov
sbb
stos
outsb
stos
mov
mov
or
cs
and
xchg
mov
daa
ret
xor
lret
insl
bound
push
int
mov
adc
mov
subb
inc
ds
insb
daa
xor
mov
loope
fsubrl
js
inc
cmp
pusha
loope
push
sbb
scas
cwtl
jno
push
mov
lret
xchg
inc
test
inc
enter
push
inc
outsb
and
test
fmul
add
mov
mov
fsubs
lods
lock
push
mov
sbb
mov
and
push
jecxz
nop
push
or
test
dec
not
ret
jo
fnstcw
sbb
shlb
mov
cmp
inc
xchg
std
push
sahf
cwtl
inc
fwait
stos
mov
mov
in
sub
nop
mov
jb
jbe
inc
push
cmp
enter
adc
pop
xor
roll
xchg
and
pop
add
lock
dec
cmp
mov
idivl
add
push
fisubs
cwtl
enter
inc
gs
das
mov
mov
aam
pop
push
inc
cld
and
dec
sub
test
xor
inc
jle
push
into
repnz
mov
aad
xorl
insb
xchg
or
inc
add
add
pop
and
inc
sbb
mov
cmc
jb,pt
fisubrs
insl
call
mov
dec
add
push
dec
push
adc
and
gs
jecxz
test
lahf
cli
add
imul
mov
repz
test
or
pop
bound
out
sub
gs
leave
pop
push
rorb
dec
scas
icebp
push
sub
icebp
mov
out
mov
jl
iret
dec
bound
inc
fnsave
test
loop
pop
mov
lods
sbb
fstpl
sti
aam
inc
mov
outsl
push
or
lds
sbb
flds
inc
sub
in
mov
sbb
ljmp
fidivrs
inc
pop
jge
scas
xchg
fdivrs
jg
push
sub
push
add
jp
mov
test
test
jle
cmpsl
sbb
adc
xchg
jp
push
xchg
les
xchg
or
aad
xor
fdivl
mov
int3
mov
xchg
test
or
pop
mov
ss
xchg
out
lock
lret
mov
xchg
xor
xor
cmp
or
jae
inc
or
insl
mov
ljmp
push
std
inc
or
mov
or
sbb
lret
stos
aad
and
js
ret
adc
push
es
pop
adc
xchg
stos
pop
dec
outsl
ror
jle
nop
or
add
test
enter
jmp
loop
or
gs
into
jb
insb
sub
push
push
fbld
andl
stos
xor
cmpsl
mov
jg
jno
mulb
inc
faddp
aaa
mulb
aaa
faddl
mov
fdivr
and
mov
pop
fadds
adc
inc
sbb
sub
dec
sub
and
pop
lcall
push
sub
mov
loop
es
mov
push
popf
jnp
and
lcall
arpl
popl
mov
es
addr16
push
cmp
ss
fsubrp
xchg
loope
outsb
add
imul
cmp
pop
sub
and
jmp
out
out
aam
push
and
nop
outsb
decl
mov
aad
sahf
add
ret
and
fstps
outsl
jp
iret
add
xor
daa
mov
ja
mov
jge
scas
jb
imul
outsl
xchg
clc
sbb
cmp
jae
fiadds
into
mov
in
xor
add
and
pushf
cmpb
inc
cmp
out
out
jbe
cltd
test
add
jnp
dec
decl
inc
pusha
xchg
jne
dec
sbb
and
xchg
cmp
or
test
push
cmp
leave
pop
lea
inc
push
xchg
and
movsb
je
mov
imul
test
dec
dec
cmp
inc
inc
xchg
adc
or
pop
in
jg
pop
xchg
xchg
mov
hlt
not
jbe
aaa
jmp
cmp
in
mov
sub
mov
cli
scas
int
cmp
pop
push
and
lret
std
divl
fidivl
adc
lods
cwtl
mov
adc
and
lret
insl
jo
stc
push
nop
mov
inc
inc
jb
jnp
pop
inc
pusha
push
push
int
adc
ljmp
mov
adc
dec
pop
movsb
gs
xor
loope
in
outsb
test
or
mov
and
xlat
sbb
pop
outsl
sub
cwtl
sbb
pop
jp
mov
jno
jne
lret
pusha
dec
arpl
cmp
pop
stc
int3
mov
dec
mov
inc
xor
jle
mov
hlt
outsl
fdivp
test
cmp
test
sarl
orb
notb
push
sub
pop
jno
lcall
sbb
rorb
sub
mov
popa
sub
movsl
mov
mov
mov
xchg
xchg
andb
jl
inc
add
jmp
push
insl
xchg
mov
jg
dec
adc
pushf
dec
test
xchg
insl
push
push
xchg
test
test
psubusb
ljmp
sub
add
push
or
mov
dec
in
xchg
les
scas
aaa
mov
jne
loop
test
in
ret
add
xchg
sub
clc
mov
cmp
aad
lahf
fldt
fisubl
loopne
imul
push
addr16
mov
cld
lods
shlb
aad
loope
jae
test
js
cmc
mov
push
pop
popa
sbb
lret
add
stc
add
imul
fwait
mov
pushf
mov
fldl
rcrb
xor
xchg
lcall
sbb
ret
pop
ret
pusha
shrl
lcall
cmpsl
cmpb
add
cld
aaa
fcoms
mov
dec
jbe
pushf
inc
and
add
outsb
xchg
sbb
mov
mov
lahf
push
fistpll
out
push
xor
pop
lret
add
call
jge
dec
les
add
bound
add
xor
sbb
shrb
lahf
push
jns
popa
xchg
pop
pop
sarb
jb
pop
movsb
sbb
add
jmp
pop
popf
hlt
sbbb
lret
or
in
cmp
test
cwtl
add
aad
loop
cltd
out
mov
xchg
xor
mov
popa
sub
dec
fcoml
jnp
aaa
imul
push
into
sbb
enter
enter
in
gs
sahf
jb
xor
out
test
dec
sbb
arpl
dec
push
jns
das
or
das
std
pop
sbbl
fldcw
div
jge
push
divb
adc
jbe
xchg
mov
pop
aaa
negb
dec
mov
xor
pusha
cmp
inc
xchg
imul
std
jnp
fsubs
and
add
lods
pop
pop
aaa
ja
fidivrs
stos
rclb
testl
add
xchg
lahf
cmpsb
jg
and
xchg
dec
jno
jg
out
test
mov
ds
repnz
inc
sbbl
imul
faddl
jmp
test
push
sbb
push
ret
xchg
mov
pop
jno
xor
std
pop
push
gs
cmpsl
and
pop
je
cmpsb
out
inc
dec
cmpsb
int3
mov
mov
adc
push
push
push
sbb
out
loope
jecxz
rcl
enter
or
inc
fwait
dec
loop
test
out
imul
scas
test
jle
sub
aaa
add
or
loope
adc
push
insb
add
insb
mov
arpl
imul
jns
filds
fidivrl
jne
repz
pop
lods
jle
xchg
or
mov
dec
dec
fwait
mov
xor
jge
xchg
out
cmp
aaa
das
and
pop
stos
repz
jle
jb
add
loopne
repnz
test
aaa
and
aad
ja
shll
jae
imul
jns
inc
int
xor
jo
sti
mov
repnz
mov
adcb
mov
xchg
fimuls
in
or
rcr
loopne
or
dec
cmp
adc
mov
jbe
xchg
shlb
mov
pop
adc
mov
mov
sub
pop
pop
xchg
mov
push
in
in
jbe
fnstsw
pop
leave
mov
cmp
dec
push
aam
lock
filds
and
or
cmc
cmp
addr16
cltd
sbb
pop
sar
pop
mov
push
push
mov
out
sub
inc
leave
adc
inc
ljmp
je
sbb
cmpsb
mov
add
rol
dec
push
push
push
rcll
jle
test
mov
icebp
jno
pusha
nop
xor
stos
mov
aas
pop
shlb
cmp
outsl
or
mov
fstl
mov
lock
push
sub
mov
les
cmp
and
in
lods
cli
xchg
and
xchg
inc
inc
dec
popf
inc
sub
pushf
mov
jmp
mov
aam
clc
lcall
ficompl
xchg
sbb
mov
call
sub
adc
mov
dec
push
adc
cmp
cmp
bound
cli
mov
aad
inc
js
and
pop
movsb
adc
xor
xchg
shlb
xor
mov
add
jo
psubw
jg
pop
jmp
and
and
add
cmpsb
sub
outsl
sahf
fdivrl
loopne
xor
out
bound
pop
xlat
lcall
jns
rorl
xor
sub
scas
and
sahf
mov
mov
cld
inc
addr16
mov
jle
gs
pop
jns
jne
pop
stos
addb
xchg
cltd
inc
stc
aad
mov
adc
jge
test
xchg
ljmp
xchg
sub
fildll
xchg
jp
idiv
sti
out
aad
in
push
push
les
sarb
dec
sbb
std
xor
mov
sti
adc
sbb
dec
aam
sarb
in
push
mov
insl
inc
pop
aad
jecxz
hlt
sbb
sub
je
in
and
das
add
dec
xchg
sub
sbb
cmp
dec
ret
pop
loope
jae
in
xor
rcrb
fwait
out
xor
cmpsl
pop
clc
add
inc
int3
push
outsb
mov
cmc
xchg
sub
jns
stc
addr16
jl
dec
fwait
add
cmpsl
arpl
loop
pop
cmp
xlat
jp
cmp
inc
sbb
push
iret
imul
or
mov
jbe
pop
stos
push
jle
mov
lods
filds
in
insl
cmpsl
lock
jmp
or
outsb
mov
mov
push
cmp
inc
mov
ja
pop
xchg
mov
into
cs
cwtl
xor
sbb
pop
push
pusha
stos
adc
jae
icebp
and
lcall
mov
jge
mov
in
jnp
pop
xchg
mov
push
fadds
gs
mov
js
mov
push
fnstsw
add
lahf
int
hlt
sbb
imul
icebp
call
incl
pop
adc
outsb
popw
fistl
push
call
sbb
rorl
shl
movsb
pop
mov
push
and
xlat
mov
xor
inc
cmp
lods
pop
mov
orl
xor
dec
jbe
fimull
adc
add
mov
cld
jmp
cmp
lret
xor
mov
jle
stos
xlat
ret
mov
cmp
jp
aam
imul
mov
and
sub
and
jmp
arpl
fiadds
hlt
cmp
das
mov
enter
add
in
mov
add
xchg
xor
mov
mov
or
out
sbb
dec
cmp
and
xor
adc
sub
push
mov
push
cmpb
and
or
xor
mov
daa
mov
in
cmp
pop
adc
popa
shll
movsl
sahf
xor
sbb
repnz
insb
jecxz
xchg
cmp
call
mov
scas
je
adc
imul
xchg
jl
xor
adc
jle
std
pop
sbb
ja
xchg
jo
movsb
idivb
lods
jmp
pop
sti
inc
pop
pusha
test
sub
sbb
xor
mov
sbb
or
int
cmp
mov
fcomip
mov
lea
negb
rcl
cmp
jl
shl
loop
imul
or
lods
ljmp
in
xlat
adc
cld
pop
imul
xor
test
addr16
push
cmp
imul
enter
add
pop
mov
cmp
push
fimuls
loop
mov
push
test
test
lret
mov
pop
decb
inc
dec
fwait
pop
cmp
xchg
shlb
push
jge
mov
fiadds
mov
cmp
or
xor
subb
ror
adc
xor
fcmovnbe
sahf
pop
enter
ret
scas
xor
xlat
jmp
mov
scas
jecxz
mov
leave
push
mov
cwtl
dec
and
les
in
sbb
stos
stc
cmp
stos
xlat
mov
adc
testb
adc
sub
mov
dec
je
adc
je
add
inc
cltd
incl
push
mov
sbb
lret
add
dec
mov
rol
out
mov
mov
xor
insb
lds
xchg
mov
add
es
dec
inc
mov
fcoml
lcall
mov
into
xchg
xchg
out
insb
insl
jge
imul
cwtl
sbb
lods
cwtl
mov
lds
div
scas
jns
jl
and
lds
xchg
jns
lahf
test
push
decl
test
insl
mov
jl
xchg
mov
adc
mov
sti
sbb
xlat
outsl
dec
push
mov
push
test
mov
adc
jns
out
xchg
lods
clc
cmp
jns
ss
insb
repnz
or
popf
xlat
lahf
adc
jns
add
adc
dec
add
mov
sub
pop
push
xchg
mov
or
push
jne
add
xor
dec
adc
imulb
lds
adc
loope
xor
pushf
fadd
mov
sbb
fldt
cmc
out
xchg
sahf
jecxz
inc
shlb
push
in
mov
and
adc
lret
in
lret
dec
int
pop
and
sbb
sub
shrb
mov
add
mov
test
sbbb
mov
stos
mov
jl
inc
or
mov
fisubrl
xchg
scas
xchg
cli
mov
inc
mov
sub
jnp
std
mull
shll
repnz
loope
test
cltd
push
xchg
inc
xor
adc
mov
cmpsl
xorl
jmp
call
pop
mov
insl
pusha
jne
cmp
fwait
cmp
int
jbe
aas
fdivrp
outsb
aas
xchg
push
sbb
mov
std
add
mov
dec
and
sub
mov
inc
fbstp
stos
aas
les
sbb
mov
xor
pop
imul
in
mov
xchg
insl
shlb
jecxz
xchg
mov
idiv
xor
sbb
fsubrs
sti
push
add
jge
imul
in
or
ljmp
ret
arpl
insl
hlt
pop
fs
pop
scas
lret
out
and
pusha
scas
enter
cld
stc
leave
enter
out
mov
adc
xchg
pop
imul
movaps
add
mov
addr16
mov
insl
jmp
inc
fcoml
inc
cmpsl
mov
add
aas
sub
out
add
push
cld
ret
je
add
dec
fcoml
jbe
in
xor
cmc
pop
leave
inc
sub
push
fisubs
sbb
out
cwtl
push
popa
inc
mov
sub
cs
push
out
xor
ljmp
jo
lods
xchg
js
loope
rcrl
adc
stos
faddl
iret
test
push
imul
mov
xor
cmpsl
cwtl
and
adc
mov
in
stos
andb
scas
cli
xchg
mov
jg
lret
enter
incb
je
je
cmp
incb
idivl
aad
sbb
ds
mov
mov
loop
pushf
stos
dec
mov
fs
cmp
xchg
movb
add
cltd
mov
pushf
adc
fnstcw
mov
push
int
sbb
repz
and
jp
scas
xor
mov
fbstp
push
jge
sub
jnp
dec
sarl
les
add
dec
or
fmuls
out
sbb
scas
movsb
aas
jbe
xchg
out
inc
pusha
inc
lahf
cmp
shll
out
xor
jp
mov
imul
inc
enter
negb
out
outsl
adc
sahf
mov
hlt
mov
inc
sub
hlt
bound
pop
hlt
mov
aad
test
cmp
addb
enter
movsl
cmpsl
or
push
ljmp
outsl
cmp
arpl
mov
mov
pop
popf
dec
mov
outsl
in
stc
jne
mov
adc
mov
pop
or
in
sub
mov
push
pop
jbe
cltd
ss
ja
in
cmp
xchg
cld
mov
xor
outsl
in
mov
aam
inc
cwtl
movsl
mov
cltd
push
sahf
push
dec
icebp
addb
inc
inc
test
dec
jae
jne
push
cwtl
jns
and
or
add
xchg
mov
and
data16
and
bound
adc
xlat
ja
ficomps
add
test
rdpmc
test
outsb
in
repz
add
cli
xchg
aad
or
add
xchg
lar
outsb
loop
sub
outsl
jbe
cmc
sbb
movsb
and
fsubr
mov
jle
arpl
pop
jecxz
adc
mov
addr16
jecxz
es
push
fbld
addr16
or
push
jne,pn
inc
jb
xchg
inc
sbb
xchg
out
lods
aad
iret
cmp
pop
mov
mov
idivl
repz
sti
ret
xchg
cld
int3
push
pop
fadds
xlat
icebp
fistpl
jnp
pusha
push
dec
sbb
int
cli
data16
das
mov
clc
cwtl
mov
sbb
sti
adc
sbb
fsubl
push
sub
sbb
jecxz
stos
cmp
loop
jmp
push
mov
mov
stos
pop
cli
push
jbe
shll
arpl
jne
push
pop
mov
movsl
pop
je
dec
inc
inc
jmp
fimull
cmpsb
adcl
mov
inc
es
xchg
jl
mov
fwait
sahf
mov
inc
aas
mov
xor
jae
sbb
inc
add
test
aam
mov
push
dec
mov
cmp
or
test
or
jmp
fmull
inc
std
lcall
push
jl
xor
adc
call
mov
pop
pop
mov
pand
adc
mov
sub
das
cmp
push
pop
xchg
fstpt
orl
into
add
or
test
mov
and
iret
mov
jb
mov
and
pop
dec
adcb
pop
mov
jmp
jecxz
mov
jmp
cltd
ss
sbb
test
sub
ja
inc
rcr
bound
xlat
adc
mov
cmpsl
rorb
aas
int
aad
mov
adc
pop
fwait
cmpb
and
dec
mov
div
lods
fmull
lods
or
fimull
ret
imul
jno
push
leave
mov
cli
pop
or
subb
xor
xor
loope
xor
pop
xchg
mov
adc
jp
imul
jne
sub
icebp
imul
jo
ljmp
repz
sub
and
adc
mov
mov
das
sbb
mov
xor
mulb
add
dec
push
mov
and
and
mov
shrb
int3
mov
adc
mov
lds
rclb
fistps
insb
push
enter
daa
xchg
xchg
adc
cmc
test
out
fisubrs
int
popa
cmpsl
in
cmc
das
scas
jne
cmp
in
daa
mov
jns
fnstsw
stos
add
into
in
push
jl
dec
xor
adc
xor
cli
out
adc
push
popf
mov
pop
div
mov
add
sub
push
pusha
push
shr
ret
xor
ja
test
xchg
data16
sub
insb
mov
cld
push
push
fwait
inc
popf
xchg
scas
out
sub
xchg
mov
fnstenv
ja
aas
hlt
pop
xor
add
xor
dec
aad
nop
xlat
cmp
jo
stos
aad
inc
push
mov
lret
cmc
add
enter
jbe
inc
data16
idiv
mov
fidivrl
fcmove
mov
jp
or
mov
xor
push
sub
jp
push
adc
test
or
out
pop
sub
out
ljmp
inc
leave
adc
or
push
data16
adc
xchg
dec
jns
lods
incl
add
scas
jae
dec
xor
lock
xorb
push
test
andb
sub
test
mov
push
pop
xchg
movsb
popf
dec
aaa
add
or
fs
xchg
stos
imul
aad
push
cmc
sub
icebp
into
int3
insl
les
push
push
fldt
in
xchg
repz
lea
mov
cmp
fisubrl
xor
stos
test
loopne
sahf
bswap
jne
jo
aad
or
sbb
mov
cwtl
and
fidivrl
in
cmpsb
push
fmull
jecxz
iret
fmull
fwait
test
fs
jmp
lret
xchg
dec
lea
dec
callw
aam
add
addb
testl
test
ja
shl
pop
clc
dec
daa
pop
filds
nopl
hlt
pop
fcompl
xor
or
inc
cmp
ror
ficoml
jge
mov
xchg
cltd
cmp
xor
mov
je
mov
inc
cld
mov
lahf
jecxz
enter
jo
push
fsubrl
fdivrs
push
push
dec
xor
bound
jp
push
jae
xor
dec
das
pop
xorl
mov
imulb
inc
mov
dec
clc
and
and
and
ljmp
mov
or
xchg
mov
mov
fildl
rorb
jecxz
adc
or
jno
or
adc
or
xchg
popf
mov
add
mov
pop
jp
push
adc
push
cmpl
loope
add
pop
pop
cmpsl
shrb
fcmovnbe
aaa
jb
es
mov
push
out
in
sbb
rcrl
mov
dec
cmp
decb
outsb
ja
and
mov
insl
jp
je
bound
in
dec
mov
rorb
push
cmpsb
repnz
andb
shll
push
movsl
repnz
rcrl
test
rol
ljmp
jne
jno
jl
xrelease
stc
xor
push
in
lcall
xchg
inc
jecxz
jle
icebp
push
inc
or
push
loope
into
sarl
jmp
shll
lret
cld
sti
test
lods
mov
and
jnp
mov
mulb
ljmp
cltd
loope
and
add
test
jb
mov
fisubs
mov
sub
adc
imul
sub
xchg
adc
loope
pop
nop
stos
jp
sbb
cmp
jo
and
call
dec
pop
mov
inc
inc
cmc
push
pop
push
mov
and
shlb
andl
cmc
or
repnz
dec
int3
call
rcrl
stos
pushf
xchg
popa
push
jmp
jle
push
jns
sub
in
in
pop
and
jg
popf
dec
add
push
loope
loopne
or
and
sub
out
push
sbb
xchg
scas
add
mov
sub
push
xchg
sub
push
inc
add
adc
push
shl
dec
push
lahf
dec
faddl
clc
cwtl
pop
testl
inc
jnp
jno
mov
shl
pop
xchg
nop
aaa
hlt
dec
push
cli
nop
es
xor
repz
xchg
sarb
scas
dec
mov
loop
cld
adc
hlt
cmp
cmpb
fisttpl
iretw
xchg
mov
ret
insb
xor
mov
mov
in
pusha
and
fs
popf
shrl
push
jns
addr16
dec
arpl
fidivs
sub
adc
mov
dec
mov
sub
movsl
mov
sub
call
cld
lret
lahf
push
dec
rcll
sbb
lds
adcb
int3
jb
aas
adc
ret
xchg
rol
cs
in
ret
dec
mov
mov
push
out
pop
loope
inc
sbb
or
or
repz
rcr
sbb
fs
mov
adcb
cld
add
loop
and
sbb
in
adc
outsl
push
decb
ret
push
fldcw
and
leave
jne
push
repnz
xor
fld
cmp
cld
insl
dec
mov
and
insl
clc
dec
scas
push
mov
adc
lock
in
and
mov
fucomip
jns
xor
add
xor
xor
idivl
sti
mov
or
clc
adc
fdivp
inc
aas
unpckhps
mov
and
lods
cmpsl
rcrl
lahf
arpl
out
fwait
int
mov
sbbb
jne
pusha
movsb
lods
rorb
sahf
push
insb
mov
popa
addb
push
xor
inc
xchg
popa
in
dec
roll
dec
aad
jae
mov
sbb
fs
les
cs
mov
sbb
test
iret
pop
jnp
push
mov
xchg
and
out
dec
or
sahf
mov
out
add
scas
jle
outsl
nop
sbb
negl
es
mov
cmp
gs
pop
loope
add
or
cld
fchs
xchg
inc
into
pop
inc
jno
iret
mov
hlt
test
sbb
inc
dec
pop
dec
arpl
cmpsl
ffreep
cmp
nop
mov
jecxz
in
popa
adc
incl
or
adc
ja
sahf
adcl
movsb
out
es
dec
loope
repz
mov
sbb
inc
stc
sahf
add
mov
daa
arpl
mov
xchg
jmp
sbb
lock
call
ljmp
or
sti
dec
xorb
sub
int
sbb
inc
and
outsb
xchg
pop
sahf
xor
mov
jl
test
clc
mov
call
out
pushf
inc
push
iret
sbb
bsr
popa
mov
push
mov
push
sub
jp
xor
cmp
lret
int
mov
andb
or
sti
mov
jmp
bound
xlat
mov
inc
fimuls
mov
cmp
xchg
push
fcos
lds
lock
fucom
mov
cs
sub
push
lcall
jg,pn
cli
jnp
cld
sti
cmp
leave
outsl
repnz
fsts
push
andb
outsl
outsb
pop
jbe
stos
movsb
lcall
mov
aas
xchg
pusha
dec
ljmp
push
xchg
test
jne
push
cmp
jb
scas
inc
cld
cmc
xor
xor
xchg
mov
sarl
call
je
pop
bound
sbb
xor
pop
cmp
stos
stc
int
jb
sbb
std
push
lcall
fnstenv
push
addr16
rolb
mov
adc
add
push
add
dec
pop
iret
mov
xchg
push
push
lret
push
sub
fldt
out
les
add
call
loopne
ficoms
or
hlt
push
mov
or
sahf
dec
sbb
mov
stos
xlat
cs
mov
fwait
xchg
lods
mov
mov
test
sub
xor
lcall
daa
hlt
jp
inc
sbb
mov
push
rorl
aam
push
xor
inc
fmuls
popa
pop
fwait
inc
inc
xchg
das
push
mov
call
mov
es
mov
fwait
inc
xor
std
push
inc
pop
fcomp
test
lret
es
daa
push
and
pop
add
std
jmp
mov
push
aas
and
lcall
push
jae
into
lret
insl
das
dec
sarb
mov
fstpt
int
pop
ret
pop
pop
pop
jg
addl
sbbb
mov
xor
lds
imul
jecxz
cld
xor
cwtl
jns
push
nop
cmpsb
out
mov
inc
mov
into
adc
addr16
jo
arpl
syscall
out
ljmp
jne
test
roll
icebp
into
add
xor
sbb
test
sti
push
cmpsb
mov
mov
cmpps
jge
push
sbbb
jo
inc
cmpsl
sub
mov
subl
xor
pushf
mov
mov
sahf
les
sub
and
insl
movsb
push
subl
jle
sub
add
push
inc
iret
sbb
push
es
into
loop
movsb
mov
push
sbb
movsb
add
mov
pop
xchg
mov
daa
mov
jge
jne
popf
in
dec
pop
mov
test
js
and
jg
rclb
mov
push
jae
xchg
mov
push
cmpb
adc
jb
in
jns
ja
jg
mov
in
jl
add
fidivs
push
sub
push
ds
and
mov
out
pushf
cmp
mov
aam
and
daa
leave
insb
imul
mov
mov
cmp
and
popa
cmp
push
insl
test
inc
cs
imul
pushf
xchg
jb
aad
scas
adc
pop
addl
cli
xor
into
add
fmuls
inc
add
loopne
pop
push
or
cwtl
test
sarl
arpl
xchg
shrb
clc
bound
dec
pop
cmp
scas
aad
add
repz
ljmp
std
adc
push
shl
push
adc
push
aas
dec
in
sub
lock
int
repz
pop
mov
rcl
ret
jnp
fisubl
sbb
nop
lret
sbb
cmp
enter
dec
mov
addr16
stc
test
add
jge
pushf
xchg
pop
mov
lret
jne
lea
xor
dec
scas
stc
and
testl
leave
xchg
outsl
fcmovne
push
sbb
cmpsb
push
outsb
mov
pop
xchg
and
call
dec
or
es
mov
repnz
mov
fnstenv
icebp
repz
lods
scas
mov
aas
in
imul
ds
mov
stc
leave
cwtl
or
inc
xor
shl
cmp
es
in
out
and
shlb
sub
stos
jge
mov
dec
ret
mov
faddl
and
push
dec
out
popa
mov
shlb
aad
hlt
sub
scas
scas
push
loopne
inc
push
inc
add
daa
mov
mov
outsb
pop
inc
pop
jae
dec
mov
jo
lcall
and
xorb
dec
pop
sbb
popa
inc
scas
rcr
xchg
lods
and
les
pop
xchg
es
std
xchg
cld
ljmp
xchg
rcll
cmp
mov
dec
addb
movsb
jmp
pop
mov
mov
mov
push
andl
push
cld
out
push
xlat
push
pop
dec
mov
pop
mov
xor
into
iret
adcl
std
ficoml
outsl
shl
repnz
cmp
sub
pusha
adcl
insl
push
mov
out
cltd
loope
out
mov
imul
imul
xor
lods
mov
ret
sub
or
lock
mov
or
xchg
adc
xor
xchg
xor
dec
testl
cmpsb
mov
mov
in
frstor
shll
xor
mov
pop
jmp
push
xor
rcll
inc
hlt
cmp
xor
mov
add
xchg
adc
pop
les
lock
in
jae
adcl
imul
dec
orl
iret
out
lahf
mov
dec
das
dec
xor
iret
outsl
adcl
movsl
insb
test
fldl
andl
inc
or
or
pushf
aad
mov
pop
pop
jae
call
imul
cmpb
das
xchg
test
sarb
mov
sarb
pop
xchg
mov
daa
pop
fildl
and
decb
or
add
cmp
stc
mov
neg
sub
in
dec
and
push
fdivs
xchg
adc
andl
mov
repz
add
adc
push
pop
pop
jg
and
loope
out
dec
dec
adc
and
add
or
mov
pop
fiaddl
mov
or
nop
aas
in
cmp
cmp
or
jle
repnz
arpl
and
mov
xchg
xchg
pop
mov
xchg
mov
das
push
stos
jp
pop
mov
inc
cmp
inc
push
and
jnp
cmpsl
jmp
mov
mov
add
imul
and
mulb
movsb
mov
cmp
dec
or
cmpsb
pop
jecxz
movb
adc
push
dec
xchg
ja
stos
cmp
sbb
xchg
or
aad
sbb
jl
in
pop
aam
pusha
fstpl
outsb
fisubrs
mov
or
adc
jge
cmp
dec
add
push
push
mov
js
clc
fbld
insb
sbb
pusha
cmpb
in
fwait
push
data16
jno
fs
stos
adc
jl
aas
popa
std
sbb
mov
jnp
lea
jbe
shl
repz
and
popa
push
push
adc
repz
data16
mov
cwtl
sbb
jns
lods
sbbb
out
je
lcall
pop
popa
fcomps
popf
cmc
dec
cmp
hlt
repz
call
sarb
push
stos
aad
xor
and
lret
cmp
and
xchg
inc
jnp
fcmovnb
fldt
mov
and
mov
adc
ret
pop
and
mov
dec
movb
sbb
ret
imul
pop
adc
jmp
in
popa
std
ficoml
inc
xchg
cmp
clc
lret
mov
xchg
xchg
sbb
xchg
cmp
cwtl
leave
rolb
aam
enter
outsb
loop
faddl
jnp
jb
lret
hlt
jecxz
push
je
and
pusha
xchg
xor
and
xchg
inc
dec
aam
daa
fiadds
cs
xchg
pop
pop
jo
push
dec
popf
ja
adc
push
sarb
scas
rcl
repz
loopne
stos
cmp
int
hlt
xchg
pop
arpl
jns
popf
popa
adc
fcomp
cltd
adc
movsl
sti
repz
sub
sub
add
es
movsb
mov
jae
dec
mov
out
sarl
jns
push
stos
fprem
hlt
push
sahf
pusha
stos
dec
fwait
mov
sbb
mov
xchg
push
jo
sahf
mov
adc
popf
xchg
adc
add
xchg
add
inc
mov
and
mov
jmp
cmp
fldt
or
enter
in
inc
mov
mov
adc
imul
aad
gs
stos
xor
adc
pop
lea
imul
ret
out
mov
aaa
lods
pop
fstpt
jecxz
inc
lods
xchg
shrl
aaa
pop
xor
xor
mov
nop
pop
or
inc
and
xlat
add
push
xchg
or
jle
xor
ucomiss
push
adc
adc
pop
out
cltd
icebp
cmp
dec
dec
movb
inc
pushf
dec
xor
sbb
sub
and
adc
rol
and
es
mov
in
xor
repz
test
push
xor
cld
sub
xor
sahf
jle
in
aam
mov
pop
sub
in
mov
out
or
xchg
stc
inc
pop
cmp
xor
or
adc
xor
repnz
test
pop
dec
mov
xlat
dec
sub
je
push
sahf
mov
cwtl
dec
fdivl
fldl
pop
jmp
dec
fcmovu
xchg
fisubs
push
push
nop
push
arpl
jp,pt
das
sbb
aam
sti
lods
mov
adc
ret
mov
add
repz
lds
fsubr
shlb
fwait
lods
push
inc
shlb
or
outsl
popa
lock
lods
push
or
out
mov
sti
push
sbb
js
push
clc
outsl
push
fwait
inc
xor
xchg
ljmp
jp
shlb
and
cltd
loop
xchg
sub
cmp
negb
xor
outsl
cs
cli
lock
lahf
push
lods
call
xchg
lea
dec
mov
mov
imul
clc
adc
and
or
push
xor
sub
into
movsl
cmp
arpl
sub
add
std
iret
in
jno
xchg
pop
leave
out
je
iret
gs
lcall
push
and
call
out
stos
and
mov
inc
lods
hlt
ss
fdivp
push
cmp
mov
les
xchg
call
push
in
ret
std
mov
pop
push
mov
cmp
nop
mov
ja
inc
push
pop
pop
js
push
lods
jne
out
lds
test
lds
and
lock
in
hlt
enter
xor
push
cli
and
xchg
dec
out
enter
cmpsl
rolb
adc
push
pop
test
mov
shll
inc
mov
and
pushf
mov
sub
mov
lods
out
mov
cmp
dec
subb
shlb
fldcw
pop
call
mov
mov
imul
lds
leave
and
sbb
js
fstcw
js
cmpsl
xor
hlt
fcoms
mov
mov
int
cmp
jnp
pop
je
xor
std
in
ds
mov
or
xchg
int
mov
mov
outsl
add
addr16
or
mov
sbb
test
jecxz
mov
stos
incb
enter
sbb
sub
push
dec
add
cli
sarb
sbb
nop
or
cli
mov
lahf
cld
push
mov
das
les
int
ss
pop
push
or
fildl
mov
bnd
adc
fstpt
mov
repnz
cmpsb
mov
sbb
jmp
xchg
mov
xchg
stos
xor
cmp
cmp
cs
dec
mov
inc
xchg
scas
lea
push
mov
shrb
outsl
adc
inc
cmpsl
sar
mov
rorl
xor
insl
sbb
mov
stos
xchg
test
pop
cmpsl
movsl
clc
jae
lcall
rolb
loop
js
mov
mov
ds
inc
push
jns
pop
rcr
insl
adc
int3
outsb
mov
xchg
in
shrl
out
xor
lds
or
mov
jno
cwtl
xchg
nop
popa
sub
loopne
sbb
mov
xchg
xchg
xorb
xor
xchg
cltd
cmc
add
push
xchg
cli
int
cld
xor
jb
das
jns
pop
shrl
push
pushf
push
pop
dec
dec
mov
inc
and
stos
js
lock
add
ja
xchg
jbe
xchg
mov
insl
sbb
add
out
cwtl
mov
lahf
push
fmull
nop
gs
mov
in
ret
jo
cltd
jns
sarl
iret
adc
adc
jns
cmc
negb
and
dec
jecxz
jl
xchg
dec
mov
pop
inc
movsb
pop
lods
pop
push
sub
push
pusha
in
sub
gs
cltd
stos
adc
dec
push
pop
fldl
mov
add
cmc
add
jecxz
pop
cmp
into
add
ljmp
xchg
in
std
iret
push
mov
push
lea
xchg
imul
mov
daa
ss
fcoml
or
imul
jecxz
sub
icebp
hlt
movsb
mov
adc
cld
inc
fisttps
mov
imul
loope
or
loope
xchg
inc
xlat
inc
inc
call
adc
sub
mov
into
into
movsb
xor
jp
mov
mov
das
scas
mov
sahf
jb
mov
mov
loopne
stc
scas
les
mov
lcall
adc
lock
cmp
in
pop
mov
push
push
arpl
jo
xchg
cwtl
jl
popa
test
mov
add
inc
sti
jp
fwait
push
gs
mov
mov
push
stc
ficoml
or
push
mov
jge
push
loop
mov
push
jb
pop
jnp
cmpsb
jns
bound
mov
push
insl
mov
mov
mov
rorb
mov
pop
pop
dec
pusha
adc
outsl
flds
cmc
xor
test
in
xor
or
pusha
jns
je
mov
pop
dec
cld
push
negl
add
xor
pop
rcll
cmc
rorb
add
into
fidivrl
aam
mov
sub
daa
daa
or
xchg
lods
call
push
test
ljmp
frndint
movb
cltd
mull
inc
adc
fsts
stos
stos
aaa
mov
jg
cli
mov
arpl
aas
shlb
cmp
sub
xchg
jo
or
aaa
or
jp
inc
shll
pop
int
addl
rcll
decb
daa
mov
mov
cli
flds
push
mov
jl
nop
push
addb
bound
jb
cwtl
test
fsubs
jg
arpl
lret
sbb
lods
cmp
cmp
xchg
pop
mov
pop
inc
sbb
mov
or
adc
add
inc
and
scas
ret
in
or
test
mov
dec
mov
std
sub
add
imul
mov
ret
xchg
dec
icebp
mov
jmp
ja
out
sub
imul
jg
pop
aas
outsb
or
push
xchg
daa
test
cmp
ja
push
and
flds
arpl
insl
inc
aaa
dec
adc
mov
cmpsl
mov
ret
pop
rcrb
out
xlat
adc
xchg
inc
mov
cmp
dec
in
es
js
inc
in
and
ja
lcall
cmpsb
mov
sahf
icebp
add
jp
cs
push
push
mov
mov
xchg
shrl
pop
mov
or
imul
push
bound
xchg
pop
call
dec
gs
cld
arpl
xchg
arpl
lods
push
mov
jno
and
les
or
jle
in
loope
arpl
add
es
mov
arpl
notb
daa
xchg
test
xor
push
cmpsb
out
inc
mov
scas
jno
arpl
xor
push
mov
cs
imul
movsb
jae
sub
cmp
dec
ja
stc
mov
and
cmpsb
adc
ret
pop
mov
scas
int3
and
mov
dec
fistl
sbb
fdivs
push
divl
sub
xor
lock
movsl
scas
lret
enter
mov
jmp
push
in
into
push
popa
mov
sbb
mov
das
call
jmp
push
jbe
cmp
movsb
arpl
shl
loopne
pop
lea
fstpt
fwait
mov
aaa
fistps
gs
in
xlat
mov
push
jae
xchg
pop
adc
or
push
xchg
pushf
insb
in
xchg
shll
loopne
cmp
mov
insb
sti
mov
gs
outsb
sbbl
mov
adc
mov
adc
mov
stos
addr16
cmp
add
push
sub
and
outsl
sbb
mov
mov
mov
test
sbbl
inc
fstps
shrl
popf
loopne
pop
cmc
push
jnp
rcrb
mov
inc
push
dec
call
test
and
sub
or
hlt
lds
mov
lret
or
xor
test
lock
arpl
inc
aaa
pop
ret
pop
dec
cmp
mov
pop
xchg
das
jle
sbb
sub
xor
dec
xchg
mov
fwait
ja
xor
arpl
cmp
arpl
pop
ja
fnstcw
or
xor
insl
push
fdivs
and
lahf
icebp
jp
cmp
pop
pop
bound
push
cmp
scas
sub
mov
bswap
xor
stc
jbe,pn
cmp
je
push
into
adc
and
inc
sub
popf
adc
push
or
cmp
push
push
loop
adc
out
cs
fnsave
cmp
sub
cli
cmpsb
pop
sub
stc
in
data16
int
mov
sub
fsts
lea
sub
sahf
add
adc
sbb
mov
in
in
scas
movsb
xchg
pop
pop
inc
pop
int3
fsubrp
imul
hlt
loope
pop
and
out
cld
inc
pop
insl
and
mov
inc
rcr
outsl
push
pushf
aas
out
mov
push
imul
dec
add
ja
mov
dec
push
mov
and
or
pop
mov
jp
adc
arpl
xlat
imul
lods
stc
roll
outsl
or
dec
xorl
sub
sbb
inc
mov
pop
pop
cmp
fstl
out
dec
aaa
es
leave
mov
add
sub
aas
ret
cmp
mov
jle
inc
dec
dec
je
sarb
mov
pop
movl
nop
fsub
mov
fcom
inc
inc
jns
mov
roll
adc
mov
std
loopne
fldl
andb
mov
add
rcr
adc
jo
add
repnz
daa
lahf
shll
mov
mov
inc
stc
inc
out
mov
inc
sbb
and
push
in
inc
mov
cmp
jne
outsl
enter
aas
xor
push
add
fldl
arpl
aas
fcmovbe
nop
pop
mov
shll
out
test
enter
cmp
pop
mov
popf
adc
cltd
ljmp
xchg
push
add
or
push
fisttpll
outsb
dec
int3
mov
push
pop
dec
xchg
int
push
push
fmuls
in
lods
sub
cmp
dec
pop
sti
mov
push
pushf
pushf
scas
lcall
pop
nop
xchg
testb
hlt
sub
inc
sbb
xor
jbe
push
adcb
lods
cwtl
mov
and
fists
sub
subb
out
subb
adc
inc
sahf
jo
dec
nop
cli
cld
enter
out
lds
cli
enter
ss
jecxz
aad
addr16
fldl
mov
jno
push
fcmovu
xorb
mov
in
jg
xchg
iret
jno
lret
fidivrs
gs
mov
inc
push
xor
xchg
xchg
imul
add
mov
mov
dec
jb
jg
add
movsb
and
shll
pop
sub
lahf
sbb
xorb
cld
enter
jge
insb
lahf
jmp
outsb
adc
push
mov
adc
mov
shll
push
call
mov
jns
sub
test
jnp
or
and
cs
push
and
into
loopne
leave
loopne
push
popa
addb
out
inc
jp
scas
ss
aad
lods
inc
push
xlat
mov
mov
push
cmc
in
repnz
cmp
jmp
jecxz
dec
sbb
lock
jge
adc
cwtl
jno,pt
popa
inc
sti
in
jnp
mov
add
xchg
dec
lods
mov
ja
cwtl
push
push
inc
ljmp
fidivl
mov
stc
mov
lods
sar
pop
mov
bound
jecxz
mov
aam
add
mov
xchg
pop
add
push
or
mov
loopne
aam
mov
fstpl
insb
cld
jnp
das
adc
jle
loop
outsl
and
stos
jmp
adcb
adcl
mov
ljmp
inc
mov
push
sbb
ret
jno
int
int3
cmp
sbb
leave
dec
sarl
incb
add
lods
sub
jo
lock
lret
fmuls
lahf
in
push
push
je
xchg
add
fidivrl
or
push
ds
sub
cmp
popa
push
or
sahf
mov
dec
pushf
and
out
push
jns
in
xor
rcl
aaa
outsb
mov
cmp
sbb
out
repz
ljmp
push
pop
int
inc
push
mov
aas
jl
sub
add
subl
test
push
xchg
pop
fnstcw
mov
mov
push
xor
cld
fs
mov
add
xchg
ja
lods
test
pop
lods
icebp
cmp
adc
mov
adc
pop
cli
cs
cld
dec
mov
addl
inc
lods
mov
push
call
jae
mov
xchg
sbb
fnsave
mov
sbb
iret
imul
adc
and
jno
scas
or
je
xorl
mov
pusha
in
dec
int3
mov
movsb
jb
repz
sbb
movsb
xlat
push
cmp
sbb
arpl
or
mov
cwtl
add
sub
xor
add
pop
leave
or
or
fs
inc
sbb
insl
push
aam
xchg
pushf
mov
add
das
sahf
jge
sahf
xchg
ljmp
add
test
pop
sbb
daa
imul
and
sbb
mov
push
cwtl
les
adc
mov
cld
jo
jg
js
cmpsb
int
imul
in
lock
jl
mov
add
mov
mov
shlb
cmp
in
or
xor
mov
pusha
sub
push
lods
pop
stc
push
add
inc
loop
in
mov
data16
cmp
add
or
cmc
lods
xchg
mov
mov
insl
repz
outsl
sahf
xchg
sbb
push
fs
sbb
mov
ret
stc
push
adc
cmc
mov
mov
lods
cmpb
addr16
scas
mov
ss
lds
sbb
dec
popf
dec
mov
mov
popf
sub
jnp
adc
das
addr16
cmc
or
jno
ret
out
inc
push
cld
mov
mov
sbb
pusha
xchg
jo
mov
cwtl
dec
sub
xchg
stos
pop
mov
cmc
add
arpl
mov
rcrb
ffreep
ja
jo
jbe
inc
push
aam
in
jno
push
movsl
xchg
jmp
mov
imul
pop
or
ret
bound
sbb
sbb
lock
dec
adc
dec
movsl
jnp
aaa
pop
sub
jecxz
xchg
mov
dec
mov
xor
loopne
icebp
pop
adc
enter
and
add
je
mov
ss
lret
aam
fcoms
mov
inc
ret
jg
out
sub
in
bound
inc
cmpsb
test
dec
ja
or
mov
test
add
stos
mov
pop
clc
out
jl
sub
add
sbb
loopne
push
rorl
and
mov
push
sub
mov
add
sub
xchg
and
xchg
dec
push
in
mov
sbb
popf
pusha
fsubr
mulb
je
mov
ret
or
inc
mov
rorb
ljmp
cmpsl
cmp
dec
cmp
lret
or
add
movsb
mov
pop
cmp
xchg
jae
push
lahf
mov
scas
mov
aam
lds
sub
mov
loopne
push
aam
pop
daa
cmp
hlt
filds
inc
and
xor
dec
or
xchg
pop
xor
idivl
mov
and
lds
sbb
gs
pop
pop
xchg
adc
outsb
xor
or
mov
add
outsl
pop
lock
pop
xor
imul
shlb
mov
inc
fcomip
icebp
sbb
fwait
popf
shrb
add
pop
jmp
xor
fidivrs
inc
scas
mov
xchg
jne
jge
add
out
sub
inc
push
ror
fiadds
inc
xor
ds
add
data16
fdivrl
jmp
xor
cltd
sub
mov
mov
jle
pop
mov
outsb
adc
pop
mov
popf
ds
push
aaa
fcoms
cmpb
repz
divps
jp
mov
add
mov
arpl
ja
jecxz
dec
addr16
setbe
nop
les
jb
cmp
pop
out
daa
mov
xchg
roll
jb
fs
or
shlb
mov
push
inc
fwait
push
xchg
push
push
and
pop
cmp
add
aad
shr
mov
decl
pop
dec
mov
mov
pop
jbe
out
xchg
sbb
jo
in
cli
push
sub
scas
std
rcr
popf
sub
lods
jb
cmp
loop
pop
sahf
pop
fstp
jecxz
sbb
pusha
lds
frstor
hlt
add
adc
icebp
sbb
ret
mov
mov
scas
leave
cmpsl
or
cmpb
fstpl
xor
jg
xor
push
add
sti
cmp
jle
cwtl
es
stc
adc
fstpl
int
push
push
pop
jae
jnp
push
dec
mov
sbb
or
inc
aas
mov
sbb
or
pusha
cmc
mov
pop
xor
push
sbbl
lahf
ja
repnz
cmp
imul
fwait
call
sub
mov
imul
lcall
pop
and
pop
pusha
popa
cmc
fwait
dec
bound
inc
clc
cmp
adc
sbb
fnstsw
out
popf
jae
and
out
pop
es
sti
test
lods
pop
sbb
movsl
dec
adc
adc
cmc
mov
mov
push
shlb
pushl
dec
movsl
cltd
mov
hlt
dec
cmp
adc
or
jno
lock
jne
xchg
ds
mov
mov
cwtl
push
or
pop
xchg
cltd
xor
xchg
int
insb
push
out
fstps
add
stc
or
call
scas
cs
and
xchg
cmp
out
mov
ds
fcomps
addr16
insl
add
jbe
aas
and
mov
push
push
add
push
pop
ds
les
dec
rcll
cli
dec
or
into
loope
cltd
or
pop
adc
leave
push
pop
pop
or
scas
or
pop
ret
or
outsb
aaa
xor
or
push
mov
push
hlt
ss
fidivs
xor
jl
rclb
and
add
jno
dec
mov
mov
test
or
mov
scas
fiadds
in
sbb
adc
lods
push
add
add
addr16
mov
sbb
sbb
adc
sbb
and
mov
out
out
in
nop
addl
insl
imul
data16
sbb
addl
jl
jmp
stos
gs
or
cmc
ds
iret
pop
out
cmpsl
mov
sahf
mov
add
emms
adc
inc
xor
xor
leave
fmuls
test
sub
dec
inc
xlat
ret
notl
mov
call
pop
mov
and
ret
xor
rorb
lret
pop
jae
shlb
pmulhuw
adc
test
xchg
into
sub
pop
xchg
jo
pop
enter
xor
mov
out
gs
leave
pusha
cs
push
ds
scas
aaa
mov
insl
in
add
pop
nop
mov
es
sarl
clc
lods
pop
pop
push
add
adc
loope
jo
inc
lret
mov
jecxz
push
ret
aad
scas
jmp
xchg
jae
out
mov
and
aaa
xchg
nop
dec
push
loopne
lahf
push
outsl
in
cwtl
and
mov
nop
push
mov
pushf
clc
jns
jmp
xchg
ret
adcb
or
and
xor
and
sahf
je
mov
jmp
les
sahf
push
lea
dec
lods
xchg
adc
int3
mov
lret
pusha
daa
or
notb
mov
mov
sbb
pop
dec
mov
xchg
ret
sub
inc
fnsave
enter
add
hlt
dec
pop
mov
mov
push
lods
mov
mov
or
lcall
sbb
dec
int
adc
inc
pop
fwait
jne
and
rcrb
or
cwtl
cmovge
mov
lret
mov
mov
jns
lock
pop
jmp
popa
jbe
out
je
add
add
imul
pop
and
dec
ds
shrb
inc
ja
adc
lods
xor
pop
pop
sarl
dec
sbb
std
movl
addr16
stos
sarl
pusha
mov
daa
cmp
jmp
neg
popa
mov
popa
lret
add
icebp
mov
rorb
popa
in
aaa
gs
outsl
ret
mov
mov
pop
xchg
jbe
fwait
dec
add
andl
into
pop
aas
pop
test
jns
int
inc
mov
ret
mov
dec
pop
sti
lods
dec
push
mov
mov
mov
xchg
xchg
mov
icebp
sarl
sub
cwtl
jg
pop
fwait
push
icebp
jg
ljmp
mov
insl
push
xchg
loop
daa
jne
add
pop
and
test
idivb
mov
jo
aas
lret
jge
pop
loopne
lret
add
jge
pop
cmp
jnp
jmp
mov
out
test
sbb
pop
inc
inc
rclb
sub
pop
iret
mov
mov
int3
lret
mov
cmp
mov
pop
cmp
xchg
jp
or
fs
dec
movsl
cltd
es
add
popf
cmp
pop
and
and
adc
xchg
das
push
jbe
mov
and
fsts
jecxz
cmc
pop
rolb
lock
lahf
mov
sti
sub
push
pop
fisubrs
shl
call
je
dec
adc
cmpsb
loopne
icebp
sub
jo
xor
insb
ret
jle
dec
inc
and
pop
fdivrs
pop
fwait
outsl
loop
xchg
stos
jp
sub
inc
outsb
pop
clc
repz
enter
inc
mov
mov
fcoml
sbb
jns
mov
outsl
js
adc
push
mov
cltd
ret
mov
pop
incl
or
ret
push
hlt
mov
push
pop
inc
mov
ror
daa
call
outsl
shlb
cmp
cltd
dec
mov
mov
cmp
or
and
mov
cmc
push
imul
fbstp
adc
jo
push
shll
lock
sahf
xlat
movsb
loopne
mov
xchg
shll
mov
push
sbb
and
dec
xor
xchg
add
notl
aas
cmpsb
js
rorw
scas
xchg
iret
sbb
mov
repnz
xchg
in
clc
add
nop
push
cmp
ljmp
push
lds
pusha
sub
jge
popf
mov
xor
inc
mov
movsb
xchg
and
imul
outsb
scas
jbe
mov
loopne
add
add
jne
aas
dec
insb
outsb
out
mov
sbb
cwtl
dec
pop
dec
inc
jecxz
mov
scas
icebp
hlt
enter
xchg
push
jge
stos
les
mov
xor
sbb
mov
cmpb
sub
sub
rclb
jge
mov
add
lods
mov
imul
aas
lods
stos
push
cmc
int
es
gs
mov
adc
add
fwait
jg
sub
jns
xlat
mov
iret
cwtl
loop
fstl
jmp
mov
add
xchg
sbb
es
mov
fsubs
arpl
in
cmpb
xchg
pop
call
add
push
inc
cwtl
inc
pushf
aaa
aad
test
mov
xor
bound
mov
mov
xchg
ret
filds
repnz
rcrl
rcr
stos
pop
cltd
inc
add
xchg
or
adc
outsl
lock
xor
sbb
mov
pop
je
mov
inc
add
xor
xchg
adcb
mov
cmp
mov
rcrl
mov
lods
test
push
cwtl
insb
repnz
sub
pop
sbb
inc
add
js
es
jmp
fstps
movsb
lahf
cmp
sbb
in
xchg
and
mov
mov
inc
push
mov
cmp
and
in
mov
xchg
daa
add
adc
bound
inc
inc
push
sbb
add
fmul
fs
mov
push
pusha
cmp
cmp
xchg
jmp
cli
lcall
roll
sbb
call
mov
testl
mov
out
jecxz
lret
aam
push
idivb
mov
inc
test
xchg
jge
pop
jmp
test
and
sbbl
dec
xor
jo
imul
mov
mov
ffreep
hlt
jle
pop
sub
push
mov
aam
hlt
rorl
pusha
add
scas
adc
addr16
shlb
nop
mov
loopne
xchg
jbe
je
ja
sbb
sarl
fucomp
mov
cmc
out
mov
mov
add
mov
sub
xchg
decb
gs
push
dec
mov
popf
sbb
adc
pushf
add
mov
jne
shll
lcall
push
into
test
out
xchg
daa
xchg
ja
cmp
outsb
inc
punpckhbw
cltd
or
cmp
rorl
call
and
add
popa
cwtl
and
pop
cmp
xor
jmp
add
inc
data16
and
scas
push
xchg
push
mov
inc
in
cmc
inc
sbb
sub
ss
hlt
xor
hlt
add
sti
xor
mull
push
in
mov
inc
inc
arpl
fwait
and
stc
push
or
jns
inc
mov
cmp
sbb
ret
dec
pusha
mov
aam
sbbl
push
mov
sub
into
and
jmp
jbe
movsl
sarl
movaps
push
sub
sub
xlat
adc
pop
subw
cmp
jg
test
arpl
orl
dec
out
in
xchg
push
outsl
jmp
push
jns
xor
sbb
int
xor
mov
inc
and
ror
std
dec
pop
cmpsl
push
cli
xchg
in
lea
lcall
jae
push
inc
mov
subl
dec
dec
mov
imul
lods
add
push
mov
mov
scas
vmread
fdivl
push
mov
pusha
pop
out
sub
xchg
pop
cmp
aas
pop
dec
xchg
push
in
pusha
rorb
cld
and
jp
ss
in
scas
mov
jmp
std
je
je
adc
shll
jbe
andw
pop
sub
pop
dec
mov
es
mov
or
sbb
jge
test
mov
in
stos
and
mov
pop
cmp
jecxz
pop
or
icebp
jne
dec
push
add
jns
dec
int
sub
push
cmp
mov
push
push
bound
ss
lret
pusha
loopne
or
pop
imul
dec
sub
addr16
xchg
push
or
sti
pop
mov
dec
or
cmpsb
arpl
out
mov
insb
cmpsb
out
pop
dec
in
ss
cmp
inc
or
test
lret
sbb
adc
std
stc
pusha
cwtl
xor
mov
or
mov
xchg
fists
rcl
adc
shlb
dec
stos
push
sbb
lea
pop
fldcw
loopne
scas
pusha
aas
jne
movsl
loopne
lods
sub
dec
pop
cmc
adc
ljmp
dec
jae
cmp
sarb
cmp
xchg
shll
fisubs
into
mov
pop
mov
sbb
mov
add
mov
jmp
and
push
jge
popa
xor
and
sahf
nop
dec
cmp
popl
xor
ja
data16
sub
push
sbb
mov
jne
repz
out
clc
jbe
add
push
cmp
imul
push
ja
aaa
sarl
imul
xchg
shrb
push
push
adc
movsb
jmp
adc
dec
mov
sub
inc
fwait
pusha
add
out
mov
jl
jno
mov
cmc
add
dec
dec
arpl
xchg
mov
dec
jno
add
nop
sbb
shrb
cwtl
fwait
shll
dec
xlat
adc
and
add
xor
fstl
or
test
lods
fistl
xor
mov
fcompl
inc
xchg
pusha
pushf
push
cmp
loopne
jp
xor
pusha
pop
xchg
test
mov
shrb
cmp
and
repz
enter
adc
pop
in
jae
pop
clc
inc
enter
loopne
cmp
sbb
subl
das
das
sbb
mov
call
popf
adc
fcomi
in
daa
push
xchg
in
xor
cwtl
out
shld
mov
inc
and
pop
dec
daa
pop
ret
sti
fisubrs
mov
lods
ror
and
push
cmp
push
mov
das
addb
int3
outsl
cmc
pop
and
jge
cmp
gs
xchg
jno
lods
cmc
mov
jb
pop
lret
xor
sbb
ret
into
cmpsb
dec
pop
mov
or
ret
into
mov
push
cltd
push
shlb
sarb
addr16
rorl
or
mov
sub
dec
das
dec
adcl
mov
inc
or
imul
or
sahf
cmovg
push
jb
xor
je
adc
jge
in
cli
sbb
jae
cmc
lods
push
cs
push
push
pop
dec
filds
inc
mov
stos
lcall
mov
outsl
fcomip
sahf
outsl
test
xchg
add
push
cwtl
push
jnp
movl
sub
hlt
mov
add
jp
or
test
ss
nopl
push
lods
out
add
pop
stos
inc
inc
xor
cmp
pop
cltd
mov
bound
fisttpl
pop
pop
bound
add
scas
xor
lods
lahf
dec
mov
cmp
in
add
imul
scas
in
adc
jbe
mov
daa
mov
out
adc
call
mov
dec
cltd
sbb
mov
lock
aam
sbb
ss
mov
mov
xchg
mov
popa
and
ret
push
addr16
js
or
insb
aaa
xchg
bound
mov
mov
test
mov
xor
lods
mov
xor
mov
shlb
divb
test
push
pop
repnz
xor
data16
sbb
push
insb
mov
cmpsl
rorb
incb
aam
cmp
sarl
or
and
fwait
and
lcall
fsts
pop
sbb
sub
cs
mov
inc
mov
fnstcw
mov
cmpsb
xchg
pop
xor
mov
push
dec
mov
movsb
fldenv
sub
inc
adc
addb
bound
jg
adc
outsb
fs
inc
mov
add
push
sub
ret
in
sbb
sub
cmpsl
dec
popf
std
out
jmp
mov
test
adc
push
xchg
dec
pop
andl
dec
adc
sti
leave
lods
cltd
lret
call
insl
lret
adc
pop
lret
push
icebp
dec
fsubrs
imul
jno
push
loopne
rcll
subl
fidivl
nop
sbb
mov
adc
mov
mov
cltd
test
mov
scas
iret
adc
subb
pop
and
fisubs
cmp
or
cmpsb
loop
push
mov
lahf
pop
sbb
stc
dec
test
inc
sbb
daa
adc
les
sub
mov
sub
sbb
ror
xchg
ljmp
dec
push
mov
aam
out
push
push
idivb
sti
mov
or
call
mov
push
aas
lods
mov
popa
ja
xchg
xchg
icebp
cmpsl
rcll
and
and
jnp
cwtl
std
iret
lods
addr16
pop
js
fwait
push
stos
xchg
push
in
out
data16
hlt
outsl
fstps
inc
mov
sbb
inc
test
popf
fucomip
dec
sub
mov
mulb
fidivrs
inc
push
cmpps
xor
or
jnp
arpl
aam
mov
jb
decb
jle
xor
cli
in
pop
mov
xchg
fisubl
sub
add
ss
sbb
dec
inc
lret
xchg
inc
cmc
pop
push
add
leave
mov
xor
cmp
xlat
stc
mov
repnz
fildll
into
adc
xchg
mov
jns
mov
outsl
aam
jp
mov
mov
mov
xchg
aam
xor
call
lock
fnsetpm(287
fwait
pop
cld
pusha
popf
jnp
fstpl
or
mov
call
mov
out
aam
lret
ja
dec
fsubs
xlat
push
gs
jnp
fwait
sub
fisubrs
imul
roll
add
bound
clc
or
adc
ss
lret
jg
dec
imul
cmp
cld
mov
sbb
ss
ss
xchg
pushf
in
xchg
pop
and
jnp
sbbl
sub
push
cmp
or
sbbl
jmp
push
push
call
sbb
mov
shrl
pop
jp
clc
xor
sahf
sbb
fdivl
cmc
jnp
xchg
imul
rolb
enter
jb
pushf
das
mov
test
and
stos
push
jnp
stc
outsb
fcoml
lahf
or
jns
or
insb
xchg
fisttpl
pop
pop
mov
sahf
dec
int3
fists
je
mov
push
sarb
pusha
ss
push
jle
loopne
fistpll
mov
out
mov
frstor
xchg
add
mov
mov
out
sbbb
xor
pop
addr16
jg
ja
adc
int3
add
mov
loope
in
adc
shr
add
ret
aaa
jp
lods
and
and
sub
clc
xchg
test
xor
xor
xchg
jge
divl
sbb
xor
or
dec
aaa
mov
mov
cmp
pop
lods
outsl
jae
sub
or
popf
ljmp
fidivrl
clc
xor
xor
in
ljmp
andl
arpl
mov
out
jmp
xchg
in
ds
sub
jnp
ss
adc
mov
sbb
mov
mov
lods
pop
scas
insl
call
or
dec
sbb
jnp
cli
cli
ficompl
push
sbb
fmulp
pusha
pop
push
shlb
cmp
push
lds
sbb
jg
adc
pop
iret
incb
out
push
in
or
adc
sub
sub
pop
jbe
es
out
xchg
cltd
and
sbb
sbb
cmp
jnp
lock
sbb
push
xchg
popf
mov
mov
push
or
cmp
push
adc
inc
jns
xor
pop
subb
mov
lods
dec
in
adc
and
rol
arpl
inc
sbb
js
sub
xchg
jb
dec
cs
cs
dec
js
data16
or
pop
test
jg
leave
mov
dec
pop
push
push
cmp
sti
jp
cltd
dec
dec
sbb
add
out
push
scas
test
mov
cmc
pop
sub
ss
fiadds
addr16
jno
fadd
dec
push
fsubrs
call
jno
push
sub
bound
call
out
mov
pop
cmp
enter
loope
addb
arpl
and
adc
mov
sub
xor
xchg
mov
inc
test
cltd
adc
jne
xchg
int3
loopne
mov
xchg
adc
insl
sbb
and
pop
mov
ja
fsts
pop
test
mov
inc
loop
popf
and
sarl
mov
stc
popa
adc
mov
xor
mov
enter
fsubrl
in
fcoml
push
mov
imul
lahf
test
or
sbb
sub
pop
movsl
pushf
push
dec
jp
aam
out
adc
xor
push
jl
test
sarl
sub
mov
push
pop
imull
mov
jo
lret
in
sti
adc
hlt
mov
dec
xor
fsubp
xlat
arpl
jnp
mov
lds
je
or
stos
mov
jecxz
push
and
insl
push
in
cwtl
inc
cmp
fisubs
in
mov
fisubs
sbb
jmp
add
or
sbbb
mov
push
jne
xchg
lods
add
stos
xor
mov
xchg
cld
shlb
jno
daa
loope
pop
mov
dec
das
sbb
xor
popa
inc
cmp
pusha
jge
stos
cmp
mov
gs
stos
sub
push
stc
es
cwtl
sub
adc
loope
subb
push
lcall
push
out
and
adc
add
dec
fcmovnb
mov
call
pop
js
push
decb
bnd
mov
out
or
int3
loopne
push
test
test
movsl
out
cmp
out
lret
push
imul
adc
dec
or
gs
mov
cld
push
add
std
fwait
in
int
dec
sub
aaa
jg
mov
call
shrb
and
mov
mov
inc
xchg
imul
sti
mov
fisubrl
lcall
xchg
and
jle
dec
clc
repz
xor
mov
jbe,pn
dec
jb
mov
xor
aas
leave
add
scas
mov
arpl
cld
mov
jcxz
int
or
pop
aaa
subb
xchg
movsl
sbb
test
or
clc
movsl
or
sub
dec
jge
pushf
xor
pop
pop
dec
mov
arpl
push
xlat
push
std
ror
adc
ljmp
pop
bound
mov
imul
inc
sub
sbb
lret
sbb
push
in
rclb
enter
popa
movb
sbb
cmpsb
xor
add
add
bound
cmp
jge
bound
out
cmp
cld
jb
xor
mov
sub
insb
fmull
mov
test
fbld
scas
sbb
sub
sub
adc
in
pop
hlt
xor
mov
pop
mov
mov
out
arpl
ja
cmp
shlb
clc
or
jl
push
ljmp
orb
push
dec
xor
mov
enter
mov
dec
pop
pop
xchg
push
lahf
testl
inc
lret
jbe
inc
icebp
ret
push
ret
in
jle
outsb
dec
stc
jno
lock
loop
dec
cmp
fistpll
inc
add
cld
shrl
out
shlb
test
scas
in
jnp
cltd
imul
imul
push
data16
jo
cmp
dec
ret
rcr
push
mov
mov
adc
mov
mov
in
jae
je
es
sarb
push
cmpsb
arpl
add
cmp
mov
lods
push
and
mov
insb
jl
sahf
and
pop
je
sti
sub
jecxz
mov
pop
ret
rcll
jl
fwait
push
mov
sub
xchg
cmp
xchg
inc
add
and
mov
decl
lret
stc
jnp
or
shlb
add
outsl
cmp
jo
stos
fcomps
movsl
jmp
jmp
rcrb
movsl
dec
pushl
xchg
call
sub
mov
sahf
lahf
pop
scas
fs
movsl
lret
adc
and
mov
push
inc
insb
push
pop
xchg
nop
repnz
and
outsl
jmp
or
scas
mov
rcrb
pop
scas
dec
bound
aaa
shll
push
ljmp
mov
add
push
pop
test
pop
mov
ja
pop
inc
int
sbb
iret
pop
push
jnp
or
mov
mov
fsubl
fs
xor
lods
push
inc
idiv
and
std
addl
mull
cwtl
push
popl
hlt
xchg
fdivs
mov
push
add
popa
mov
xor
inc
mov
aas
int
xchg
mov
repnz
lods
xchg
shll
and
mov
loopne
and
mov
cwtl
lock
test
mov
lods
and
ds
outsl
mov
popf
das
subb
clc
xchg
imul
sbb
push
or
shll
mov
int3
cmpsl
sbb
jmp
ret
sub
inc
jns
dec
popa
mov
jl
sub
and
pop
adc
cli
or
decl
mov
das
dec
jge
mov
push
aad
inc
into
xchg
roll
movsl
push
jl
add
jne
test
or
xchg
iret
nop
fld
aas
sub
jp
loop
jge
shl
out
dec
mov
shlb
loop
in
cmp
push
cmp
push
mov
jg
js
mov
cmp
or
add
jb
les
addr16
aas
nop
popa
in
cmp
out
fists
in
inc
add
ljmp
movsl
in
aaa
enter
mov
or
push
ror
dec
push
les
push
imul
push
mov
fwait
jno
imul
aas
sbb
xor
icebp
rcrb
clc
cli
lret
ret
enter
mov
int
mov
sub
inc
outsb
and
mov
loop
jnp
or
loop
xor
jmp
repnz
mov
fbld
daa
sub
popf
pop
mov
mov
cs
bound
cmp
add
mov
stos
pop
xor
pusha
xlat
pop
adc
jle
jno
add
gs
call
sub
and
sbb
cli
and
cmp
arpl
out
xchg
adc
mov
lret
loop
xchg
lds
das
ret
divb
movsl
push
movsb
lods
add
push
outsb
loopne
mov
add
outsl
add
xchg
jnp
out
mov
jb
fs
hlt
adc
or
jl
sbbl
in
mov
push
cmp
mov
pop
dec
push
stc
sbb
push
dec
xor
movsl
mov
fcom
mov
ds
fwait
rcrl
cmp
lea
jno
add
add
jno
xchg
and
cmc
jnp
xchg
loopne
sar
les
fnstcw
and
adc
sub
in
ja,pt
scas
ffree
lods
mov
sbb
or
stos
arpl
sahf
leave
int
xor
inc
fcmovnb
pusha
int
popf
stos
inc
outsl
in
and
loopne
negb
inc
push
add
lret
push
mov
rclb
xchg
iret
in
jo
popa
sahf
xchg
mov
mov
popa
lods
repz
movsl
cmp
mov
cmp
or
jle
out
xchg
lret
rcrb
xor
xchg
sahf
cld
mov
add
mov
add
or
sbb
out
gs
stc
mov
add
xchg
aaa
mov
or
sahf
loope
jl
test
pop
xchg
test
sub
fbld
jle
xor
in
mov
out
sub
xrelease
and
push
hlt
inc
cli
jnp
jecxz
jb
xchg
notl
push
or
adc
push
int
pop
lcall
jl
cmovle
test
inc
dec
jmp
jns
ss
dec
outsb
and
jne
clc
lea
adc
lcall
adc
test
dec
mov
insb
xchg
sbb
add
add
xchg
out
stos
lds
lret
jmp
adc
stos
faddp
divl
xlat
push
out
dec
sbb
in
add
push
stos
xchg
sub
loope
pop
pushf
adc
xchg
push
sbb
in
mov
in
iret
addr16
repz
fdivrl
lret
mov
sbb
rolb
cmpb
and
add
jns
into
jne
movsl
push
scas
pop
push
pop
and
fnstcw
negb
cmpsl
pop
mov
mov
jnp
test
cwtl
jnp
mov
or
dec
adc
xchg
loope
sub
sbb
jo
jl
sub
xchg
inc
js
mov
ret
xchg
orl
and
shlb
or
mov
mov
adc
pop
dec
mov
cmp
stos
fisubs
arpl
mov
das
fisttpl
mov
push
fdivr
mov
jl
mov
pop
lods
aam
rorl
outsl
repz
xchg
sub
out
adc
adcb
xor
sub
sub
push
cmpsb
out
adc
nop
add
int
inc
mov
pop
inc
call
cmpsl
inc
fcmovne
in
cmp
repz
cmc
orb
pop
insb
mov
pop
fdivl
nop
or
add
inc
adc
imul
divb
push
inc
add
scas
mov
xor
je
faddl
and
cmp
inc
int
push
add
xchg
daa
push
mov
pop
xor
xor
xchg
lock
mov
subl
cmpsb
xchg
cmp
fdivl
xor
jle
inc
or
call
inc
cmp
cmp
fldenv
pop
dec
jmp
sbb
inc
inc
pop
clc
xchg
sbb
push
pop
out
mov
cld
and
push
hlt
testl
movsl
imul
xchg
push
stos
cli
jno
xchg
push
inc
out
cmp
pcmpgtb
cmp
les
and
cmpsb
loop
and
nop
mov
int3
add
mov
lock
test
repnz
push
lahf
rcr
scas
nop
cmc
cmp
push
jb
mov
jg
divl
cmp
xor
das
mov
aam
adc
adc
sbb
lret
sub
lret
sub
pushf
inc
cli
pop
pop
adc
and
fwait
cmp
pop
not
stos
and
xchg
inc
fldl2e
fildl
cs
dec
push
xchg
aad
dec
xlat
sbb
imul
aas
lods
dec
data16
adc
int3
stos
sbb
mov
lret
andl
xor
mov
push
shl
add
movsl
mov
pop
mov
mov
sbb
cli
div
push
and
divb
dec
push
xchg
test
in
lock
ret
push
stos
pop
lahf
pop
sbb
lret
add
fimull
inc
pop
inc
neg
push
mov
push
sti
popf
outsb
fstps
cli
mov
cmp
sar
sbb
sub
xor
in
lret
mov
inc
out
rcrl
mov
stos
jnp
inc
jmp
stos
xor
cmc
jae
dec
or
int3
mov
adc
inc
push
dec
fmuls
or
pusha
sbb
push
xor
popl
dec
inc
sbb
scas
adc
pop
sub
sub
jge
xchg
and
add
mov
js
sbbl
lcall
add
mov
stos
and
ds
aam
loope
jp
pop
jne
inc
pop
in
cld
xor
aaa
mov
mov
dec
sbb
inc
xchg
or
xchg
pop
imul
in
mov
mov
and
test
jno
aad
jg
adc
push
stos
sbb
sti
mov
cmp
cmp
ss
shll
in
sub
je
loopne
cmp
and
xchg
shr
pop
xor
add
mov
fcom
mov
mov
dec
into
icebp
movsb
mov
iret
sahf
xor
mov
pop
push
sbb
test
jmp
sub
lahf
sbb
addr16
jne
and
xchg
out
or
int
xchg
mov
dec
stos
push
ss
xor
xor
or
int
rclb
gs
push
ljmp
fwait
mov
and
ds
inc
xchg
and
xlat
aaa
adc
lods
xor
push
gs
sbb
jmp
adc
das
cli
cltd
loop
add
das
jl
data16
sbb
jp
popf
mov
jp
lret
xchg
pop
cmp
xchg
add
int
pop
js
mov
addl
pusha
push
pop
dec
shrb
pop
dec
inc
lahf
fdivrl
cmp
adcb
je
lock
add
sahf
dec
push
mov
int3
stc
fldl
bound
fwait
jg
push
clc
imulb
cltd
mov
data16
add
test
aad
int3
sbb
std
out
lds
xchg
xchg
sti
ror
test
popa
gs
mov
aad
js
test
es
push
mov
pop
jae
add
jl
addr16
sub
fildll
lret
and
mov
in
sbb
hlt
sbb
out
push
cmp
dec
mov
cmpb
mov
jle
test
repnz
stos
test
lcall
push
mov
loope
pop
out
jmp
arpl
shll
lret
inc
and
rorl
sub
pop
mov
shrb
push
inc
xchg
jecxz
xor
mov
and
push
in
int
mov
fs
icebp
adc
cmc
mov
in
into
cmp
sub
cltd
cmp
pop
popf
bound
jne
dec
mov
int
scas
cli
adcb
sbb
enter
sbb
sbb
xchg
adc
test
shlb
mov
ret
cs
insb
push
mov
bswap
inc
lret
sub
cld
add
xchg
pusha
xor
add
inc
ficoms
stc
xor
out
imul
stos
inc
dec
jmp
dec
lcall
mov
pop
je
je
arpl
inc
mov
sub
push
push
xor
xchg
ficompl
dec
cmp
sub
sbb
fwait
leave
inc
add
dec
mov
mov
fstpl
in
mov
shll
jecxz
mov
lods
xor
dec
xchg
add
mov
add
outsb
cmpsb
inc
insl
repz
insb
int3
std
imul
test
fadds
sub
insb
mov
inc
jno
insl
rcll
sub
lahf
pop
mov
out
cltd
pop
jo
cmp
jnp
loop
cwtl
scas
xchg
mov
xchg
movsb
insb
lret
adcb
andl
ja
xorb
xor
ja
aas
pop
addr16
mov
cmpsb
imul
xor
dec
cwtl
cmp
gs
daa
ljmp
je
cmp
lds
and
in
and
add
sub
mov
lcall
push
incl
jmp
mov
inc
in
mov
fstpl
data16
das
enter
pop
cld
mov
push
stos
pop
inc
sub
addr16
mov
stos
inc
push
or
imul
lahf
mov
push
inc
stc
dec
sbb
repz
imul
lds
in
imul
push
dec
cmp
xchg
xchg
in
sbb
adc
and
mov
das
pop
fsubrl
add
out
pop
push
mov
inc
or
imul
popf
xor
pusha
insb
pushf
dec
inc
adc
out
mov
and
lock
jmp
scas
outsl
cmp
cli
xlat
add
lret
and
and
lahf
inc
inc
sbb
mov
sbb
fcoms
xchg
adc
into
daa
adc
cltd
mov
movsb
mov
addr16
pop
pop
mov
lret
xor
pop
lds
jns
cmp
jae
test
sub
clc
popf
adc
shrl
loope
cmp
popa
fisttpl
pusha
cmp
rcrl
imul
jl
test
mov
iret
lcall
sbb
inc
cwtl
cmpsl
cs
sbb
dec
cli
and
xchg
fdivrs
lret
mov
repz
ja
xor
mov
test
jmp
mov
divb
mov
mov
xor
xor
cmpsl
jge
jbe
mov
pop
or
fistl
jns
dec
int3
lahf
lea
jb
pop
adc
push
jmp
or
xchg
push
int
and
repnz
push
xor
jb
push
jne
and
outsb
bound
das
fisttpll
mov
and
fsin
hlt
pushf
gs
dec
push
jmp
out
mov
mov
lcall
cmpsl
ret
xor
jbe
jle
pop
jp
inc
jg
sub
pop
inc
pop
cmc
outsb
rorl
push
pop
jae
xlat
xchg
outsl
iret
jbe
sbb
sbb
popf
adc
lods
xor
mov
pushf
cltd
cmp
adc
sar
les
dec
iret
sub
outsl
ret
icebp
add
dec
lret
les
shrb
and
xor
adc
cmpsb
dec
xor
dec
lock
mov
push
mov
jp
out
xor
fdivl
mov
nop
or
mov
cwtl
mov
mov
push
add
dec
adcl
sbb
sahf
mov
xchg
pop
mov
mov
push
or
or
mov
add
lock
jp
stos
inc
push
mov
ds
adc
fimull
iret
cmp
fwait
or
mov
and
xchg
jge
cmc
fdivs
sbb
xor
pop
ds
loop
add
inc
cltd
cmp
cld
inc
or
in
fidivrs
jbe
dec
dec
mov
adc
xchg
das
mov
jmp
adc
and
fmuls
or
insb
mov
bound
jle
inc
push
js
sarl
mov
pop
outsb
dec
push
in
test
cmp
fs
mov
cmp
outsl
out
jle
mov
sbb
fs
data16
inc
adc
adc
loope
xchg
ret
icebp
in
js
stc
mov
push
mov
movsb
pop
xor
cmp
push
jns
iret
and
aas
popf
test
jle
test
aam
xlat
sub
xchg
fs
mov
and
mov
xchg
movsb
cmpl
fwait
mov
mov
push
pop
push
rcr
in
push
adc
mov
inc
sub
lods
arpl
adc
push
jno
hlt
add
mov
jnp
sbb
call
fisubl
sbb
cs
jbe
lods
stos
fsubl
test
xchg
testl
xor
je
cld
push
push
loopne
xor
push
push
mov
and
xchg
out
add
loope
std
gs
inc
push
push
pop
and
mov
aaa
daa
fidivrs
mov
test
out
inc
call
push
cmpsl
sbbl
stos
rcll
mov
iret
push
sub
fldcw
sbb
add
nop
or
push
insl
mov
sarb
pop
pop
adc
xlat
pop
dec
dec
mov
inc
dec
ja
jg
iret
jle
cmpsb
xor
pop
repz
dec
cmp
imul
mov
lods
xchg
test
mov
aam
in
xor
fsubr
fisttpl
hlt
add
fstpl
int3
jbe
or
cltd
pop
xor
xor
pop
xor
jmp
lahf
addr16
mov
push
inc
adc
cwtl
cwtl
fstps
adc
in
add
xchg
sub
cli
inc
leave
sbb
adc
lock
test
inc
mov
inc
jno
andb
cmp
push
cmpsl
loop
adc
mov
sub
add
xor
xchg
mov
push
cld
lahf
sbb
cmp
mov
sbbb
cmp
out
fldpi
aad
int
mov
mov
pushf
out
push
aam
mov
out
push
pop
test
xor
pop
mov
jae
test
in
push
sarb
push
mov
pop
es
lods
adc
pop
xor
aam
out
inc
inc
dec
les
inc
push
mov
popa
movsl
pop
lds
mov
nop
mov
loop
adc
pop
loopne
movsb
inc
jno
sbb
and
fistps
mov
add
pushf
sbb
outsl
push
outsb
mov
aas
aas
addr16
and
inc
sub
cmp
push
lcall
dec
jmp
xchg
xchg
dec
jecxz
ret
adc
sbb
mov
sbb
mov
add
scas
ljmp
das
fidivrl
filds
aas
shrl
mov
xchg
push
add
xchg
xor
jl
sbb
stos
cmp
push
pop
dec
add
dec
add
sahf
push
pop
jns
and
inc
inc
mov
fimuls
and
xor
mov
cld
sub
jno
jmp
jbe
imul
fmull
xor
xchg
inc
es
push
js
xor
int
bound
pop
mov
and
push
shl
aam
ficompl
and
add
mov
xor
in
add
cmp
or
or
dec
jnp
repnz
aaa
push
cmp
loopne
jl
mov
mov
pop
lods
mov
stos
pop
push
dec
add
es
mov
popf
mov
cmp
xor
les
enter
aad
sbb
push
push
inc
adc
je
cmp
mov
push
cwtl
mov
insl
mov
xor
shlb
mov
xor
fwait
pop
sub
mov
shrb
or
sbb
mov
ljmp
xchg
fstpl
pop
cmc
adc
aaa
cmp
lea
mov
jae
pushf
roll
add
aas
sub
sub
imul
loop
inc
test
sbb
hlt
xor
xor
add
cld
cmp
cmc
nop
aad
mov
push
outsb
das
lods
push
pop
in
sti
arpl
je
adc
add
adc
movsb
sub
dec
pop
aad
dec
xor
loope
aaa
push
xchg
loope
jb
lahf
inc
popl
rcll
sub
push
and
addl
test
hlt
jne
leave
roll
loop
ret
icebp
lret
add
mov
xor
xchg
cmp
dec
ret
jnp
dec
jo
sbb
pop
pushf
jo
cmpsl
shl
lahf
mov
mov
xchg
jecxz
jle
sbb
xor
fistpll
scas
mov
subl
lea
test
shr
scas
push
int
xchg
pop
and
js
mov
daa
mov
fisubs
cmc
or
repnz
sahf
pop
xor
adc
clc
sub
sbb
inc
mov
aad
sbb
lret
test
or
fisubrs
roll
div
mov
dec
xchg
fstpl
call
lret
adc
mov
mov
ja
and
xchg
ljmp
mov
mov
jo
sub
jns
jbe
icebp
jle
jmp
pop
inc
and
cltd
lds
push
cmpsl
inc
cmp
xchg
mov
cmp
push
push
dec
lahf
lret
or
roll
nop
mov
mov
xor
cmp
sub
mov
cmp
int
ret
sbb
or
add
test
mov
out
add
push
pop
push
ret
cmp
ss
xchg
push
xchg
fnstsw
repnz
mov
mov
test
pop
int
mov
mov
dec
popa
xchg
xchg
push
scas
imul
mov
addr16
xlat
rorl
adc
out
mov
aad
mov
add
sbb
lods
push
push
lods
shll
repnz
stos
cld
mov
lret
inc
mov
inc
imull
bound
fisubs
mov
push
dec
pop
aam
jp
divl
pop
xor
xchg
insb
xor
repnz
or
lret
test
mov
lds
sub
scas
xlat
pusha
outsb
xor
xchg
cmp
repz
sub
rcrb
ret
sub
nop
cmp
mov
aam
jge
in
enter
test
push
in
repz
sbb
add
pop
insl
mov
je
dec
cmc
mov
adc
xchg
repnz
sub
mov
jnp
mov
sub
cmp
pop
pop
xor
xchg
stos
lods
lods
idivl
inc
xor
pop
js
adc
cmp
push
pop
sub
jmp
or
cmp
in
add
xor
and
adc
aaa
insl
mov
mov
lahf
and
dec
xchg
shlb
adc
stos
addb
loop
push
dec
and
jg
sub
inc
cmc
hlt
loop
data16
sbbb
and
sbb
mov
cmp
int3
outsl
insb
pusha
pop
and
in
jne
xchg
pop
cwtl
les
adc
cmpb
ss
lea
dec
dec
push
mov
rorb
rolb
dec
xchg
pop
mov
sub
aaa
pop
push
icebp
xchg
push
add
lds
shlb
or
mov
dec
pop
insl
and
sub
xor
inc
scas
adc
loope
jno
out
ljmp
stc
lret
or
mov
and
sub
in
enter
in
adc
push
rolb
mov
cmp
push
inc
sub
fdivrs
dec
fstps
sbb
fbstp
enter
test
pop
je
cmc
mov
push
mov
jl
fmuls
jmp
pop
xorl
aaa
add
dec
subl
fsubl
xlat
xchg
mov
adc
fisubs
xchg
stos
add
push
mov
or
cli
mov
leave
push
pop
in
cmp
stos
loopne
mov
rorl
pop
enter
pcmpeqd
lahf
xchg
sub
enter
sub
clc
clc
xchg
lds
notl
jno
sub
rolb
mov
sahf
add
mov
cmc
xor
add
mov
or
and
lret
and
mov
sub
and
js
sahf
loopne
dec
jne
lds
cmp
test
fbld
les
push
and
cmp
sbb
and
cmp
mov
insl
repz
in
jmp
mov
jg
mov
popa
sub
cmpsl
mov
negl
stc
dec
or
stos
inc
cmp
movsl
subb
inc
pop
stos
lods
and
mov
int3
fadd
ficoms
inc
or
fcomps
shll
pop
sbb
imul
xor
push
mov
xchg
ds
inc
adc
sbb
push
ret
cmp
into
lds
out
aam
orb
out
and
sti
imul
repnz
pop
aad
popa
or
sbb
orb
mov
xor
int
or
or
pop
notb
icebp
add
mov
xchg
in
dec
sub
lret
insb
cli
dec
jecxz
adc
shlb
movsl
jns
sbb
in
testl
xor
sbb
adc
scas
xchg
sbb
ror
adc
pop
adc
push
lret
xor
int3
dec
cmp
mov
scas
enter
inc
fdivrs
xchg
jbe
xchg
inc
jecxz
jne
movsl
jo
sti
testl
xorb
repz
inc
mov
clc
rcrl
loop
add
outsl
cmc
cmpsl
push
sahf
out
aaa
pop
outsb
cli
push
leave
inc
push
mov
notl
xor
mov
orb
idivl
pop
and
dec
and
aam
iret
insl
or
jb
aam
cmp
ja
sbb
sbb
ret
inc
dec
xchg
fnstsw
pushf
sbb
mov
sub
mov
in
mov
popf
int
lea
cmp
adc
bound
jo
stos
sahf
lods
xchg
adc
sbb
stos
push
pop
inc
fldenv
add
arpl
lret
inc
adc
test
sti
fcmovbe
outsl
jg
outsb
outsb
and
lahf
lcall
mov
andl
popa
push
cmc
cli
dec
pop
call
jb
jno
test
sahf
xor
pop
add
outsl
repnz
add
mov
int
call
mov
mov
pop
add
xor
pop
jge
aaa
cmp
pushf
lret
lahf
mov
sti
fst
dec
mov
stc
xchg
mov
mov
scas
ja
or
mov
add
sbb
in
jmp
cmp
push
xchg
pop
jp
xor
jle
xchg
dec
or
cmp
loopne
push
insl
add
out
shrl
adc
ljmp
filds
into
lahf
and
movsl
xchg
stos
popa
xchg
push
xor
enter
push
xorb
cs
es
mul
imul
cltd
pop
xchg
es
mov
or
fisttpl
lock
pop
mov
in
or
jns
inc
clc
and
xchg
ss
outsl
xlat
fwait
leave
push
fs
xchg
leave
pop
or
adc
xlat
scas
dec
sub
sub
push
xlat
jge
push
daa
push
inc
adc
jecxz
dec
mov
pop
jae
xchg
inc
shrl
cli
lods
nop
add
idivl
ret
loopne
mov
mov
sub
pop
loop
inc
mov
jl
fimull
popf
ja
repz
fcomi
out
cltd
sub
pop
jae
es
mov
dec
loope
push
sub
sub
les
stos
or
test
fdivl
leave
and
cmpsl
lods
cmpsl
jg
arpl
dec
and
adc
pop
jo
xchg
add
and
xor
xor
out
int
xor
dec
push
mov
aas
sbb
rorb
xchg
lret
sub
adcl
mov
popf
sbb
ljmp
jmp
je
ja
test
and
mulb
std
imul
idivl
imull
sbb
aas
xchg
in
sbb
ljmp
stc
inc
pop
lea
mov
imul
mov
lcall
xrelease
cmp
sbb
sbb
rorb
mov
cmp
mov
imul
inc
insb
int3
ljmp
push
insb
pop
xor
in
roll
mov
sub
mov
xchg
inc
cltd
jno
xor
pop
sbb
lcall
xchg
adc
pop
pop
fmull
test
xchg
add
call
mov
fldl
lods
and
inc
sub
xchg
popa
call
xchg
add
imul
and
inc
test
in
pop
xchg
sub
fisubl
jmp
loopne
mov
push
out
mov
hlt
cmp
xor
imul
mov
fadds
xor
sub
pop
outsb
arpl
mov
push
xchg
inc
sbbb
and
push
dec
idiv
push
sahf
push
into
or
in
leave
in
mov
fs
test
push
sbb
out
insb
push
jmp
lcall
xor
sbbb
push
rcll
xor
pushf
push
and
mov
test
fs
sbb
les
call
push
dec
cmp
mov
and
mov
cmp
adcb
data16
xchg
popa
xlat
add
mov
jg
cwtl
fnsave
jnp
scas
lcall
in
or
stc
clc
cwtl
test
mov
and
mov
int
arpl
mov
stos
add
dec
mov
push
dec
sbb
outsb
mov
mov
xchg
dec
insl
xor
jle
scas
jnp
into
jbe
jb
inc
jmp
cmp
out
das
shlb
mov
pop
push
xor
pop
sub
fisubrs
mov
repnz
mov
outsl
into
cmp
ss
lahf
cltd
xlat
popw
repnz
push
add
xchg
cwtl
mov
ljmp
nop
and
daa
push
outsl
push
xchg
mov
mov
int3
and
lret
and
out
cli
lcall
aad
cmp
xchg
dec
jae
xlat
xchg
lret
loopnew
adc
mov
push
pop
sbb
test
outsb
inc
lods
push
xchg
ret
in
je
js
add
addr16
xchg
add
cmp
cli
jl
dec
inc
inc
or
and
push
iret
xor
mov
sub
orb
imul
xchg
aas
ret
mov
sbb
loop
inc
xchg
jno
cmc
cwtl
push
jecxz
sbb
mov
imul
mov
push
jb
daa
es
adc
clc
mov
dec
inc
arpl
insl
lea
dec
out
enter
popf
loopne
lods
gs
sub
call
push
xchg
and
pop
and
pop
inc
scas
data16
or
out
xchg
inc
adc
repnz
mov
pop
add
xlat
jle
lret
pop
jns
sarl
clc
add
out
add
filds
aad
jl
dec
pop
or
jge
in
add
xor
test
push
adc
xchg
fs
js
mulb
mov
jle
mov
ljmp
cmp
rclb
inc
xchg
xor
pop
push
rcll
mov
outsb
push
push
scas
pushf
jl
test
subl
mov
rcl
insb
cmpb
mov
ret
das
aas
cld
and
adc
out
sbb
xlat
orl
pop
sti
in
in
movsl
mov
test
in
adc
test
test
pushf
sbb
ljmp
rclb
sbb
pop
loope
icebp
jne
xchg
jmp
and
pop
add
movl
jbe
pop
fsubl
mov
sbbl
notl
mul
adc
ret
inc
lods
jge
pop
sub
xlat
ret
jno
pop
jle
cmp
daa
icebp
mov
push
lds
test
push
fwait
nop
in
pop
pop
sbb
aas
mov
insb
push
pop
incl
or
out
push
jnp
cmpsl
orl
mov
mov
ret
orl
ret
leave
out
fisubs
rcrl
xchg
int
iret
adc
cmp
addl
xchg
mov
adc
sbb
das
loop
ret
lods
jecxz
cmpl
int
xor
andl
arpl
sti
mov
ljmp
leave
loope
mov
mov
mov
sub
rolb
les
xrelease
jle
and
jle
xor
sar
iret
sbb
es
cmpsb
shrb
cmc
repz
mov
jp
adc
dec
jb
lcall
sbb
xchg
cli
fdivl
fwait
xchg
scas
mov
lds
xchg
cmp
lcall
xchg
adc
subl
or
loope
xor
scas
sbb
outsl
in
sub
pushf
repnz
pop
mov
lret
cmp
xchg
rorb
xor
call
xor
std
jle
mov
pop
push
test
loope
addr16
inc
in
sbb
push
inc
imul
push
cmpsl
daa
movsb
popf
fsubrl
sahf
push
imul
push
shlb
sbb
xchg
jo
lods
add
dec
xor
loope
sahf
push
pop
loopne
stos
add
int3
and
and
movsl
lret
dec
mov
push
iret
pop
jne
cmpsl
sti
lods
rclb
int3
dec
outsl
fs
scas
hlt
push
stc
fisubs
gs
cmp
pop
mov
xlat
pop
adc
mov
jmp
pop
dec
in
popl
adc
jnp
aas
jns
add
cmp
daa
push
aaa
sbb
pusha
test
test
and
or
sbb
xchg
jno
aaa
inc
cwtl
fistpl
popa
xchg
and
ret
cwtl
daa
sub
cld
fwait
shll
sbb
cmc
add
inc
xchg
sahf
rorb
dec
rcrl
xlat
loop
outsb
cmp
jne
xchg
push
int
clc
mov
filds
movsb
gs
dec
stos
orb
jp
jp
jae
imull
pop
sbb
ficompl
fsubr
xor
sarl
incl
push
xchg
push
shll
sbb
cwtl
sti
jle
or
xchg
push
dec
adc
cs
sub
fsubrl
sub
ret
pop
shll
scas
jmp
in
jo
cmc
das
jb
in
jb
test
mov
adc
cltd
cmpsb
push
out
in
gs
lret
lea
stos
clc
cld
ficompl
lea
mov
dec
aaa
mov
mov
pop
add
mov
pusha
mov
mov
out
stc
dec
in
repnz
insl
cmpsb
lret
roll
mov
loop
push
jl
push
cli
mov
popa
mov
pushf
repz
mov
pop
lds
sbbb
dec
aad
scas
adc
jno
out
pop
orb
sarb
push
andl
data16
pop
xchg
mov
mov
mov
popf
push
add
lea
rorl
pop
push
imul
inc
xor
and
xchg
cmp
or
jo
xor
idivb
roll
sahf
lcall
aas
add
mov
xchg
pop
mov
enter
repnz
iret
mov
movsl
fstl
cmp
mov
cs
sbbl
in
mov
sub
or
mov
fs
mov
push
adcl
sbbl
repnz
push
fwait
pop
lret
pop
fstpl
movsl
sbb
lock
add
inc
add
cmp
orb
ret
out
xor
ret
popa
xchg
bound
shll
sub
ss
jbe
sub
movsl
or
int
lahf
push
dec
sub
xor
lea
pusha
and
cltd
dec
fidivs
fdivrl
leave
add
lcall
dec
adc
enter
js
imul
jp
fwait
les
push
test
mov
sbb
loop
sub
mov
inc
add
fistpl
adc
sub
ret
and
xlat
xchg
mov
sahf
sbb
pop
mov
ret
push
out
jnp
rclb
xor
sub
test
mov
jns
stc
sbb
sbb
int3
sub
lret
test
pop
mov
inc
test
mov
cmp
pushf
xchg
adc
mov
lds
inc
in
test
fidivrl
add
jae
xchg
loope
rclb
mov
sub
insb
lahf
out
sub
push
add
imulb
cmp
jp
push
or
lea
cmp
stos
push
scas
pop
cmp
hlt
insl
mov
leave
test
and
scas
jo
xor
inc
out
jmp
cmp
cmp
xchg
rorl
iret
sub
xchg
mov
sahf
repnz
inc
call
sub
cmc
push
cld
in
mov
fs
xchg
mov
pop
push
and
sbb
arpl
push
mov
pop
sub
popa
jle
mov
mov
fmul
into
mov
xchg
cmp
nop
sbb
and
jbe
fwait
mov
lods
adcb
pop
mov
stos
bound
and
test
inc
stc
inc
push
inc
cmc
mov
out
mov
fdivrs
js
xchg
mov
sub
iret
test
and
and
and
cmp
outsl
cmp
sub
pop
in
inc
aaa
mov
mov
jae
xchg
in
or
insb
into
add
dec
mov
sbb
mov
nop
nop
mov
movsl
ret
xchg
pop
movsl
push
push
repnz
lods
lcall
xlat
dec
adc
add
dec
std
lret
push
jge
fwait
xor
push
inc
adc
jno
into
xor
or
in
push
adc
cltd
aad
or
clc
lahf
adc
test
nop
push
inc
mov
dec
and
out
jmp
pop
mov
dec
pop
cmc
sbb
jle
paddsb
xchg
mov
fs
or
test
cmp
fcmovnb
add
dec
push
add
xchg
sarl
add
aaa
pop
pop
cmpsb
loop
mov
dec
pop
cmp
ss
pop
and
mov
fidivs
outsb
xchg
test
mov
cltd
mov
xor
roll
cmp
add
push
mov
ja
jnp
dec
mov
or
cmp
into
movsb
mov
mov
lcall
jne
mov
jmp
ret
mov
pushf
jmp
shrb
ljmp
push
adc
jge
mov
mov
sub
fst
fstl
adc
faddl
adc
ds
push
dec
clc
and
lcall
dec
cmp
push
adc
pushf
jmp
xor
dec
in
scas
ja
adcl
cmp
pop
cmp
ljmp
loop,pt
int
jl
cs
xchg
out
pushf
rolb
sbb
test
hlt
xor
xor
fwait
push
add
in
add
mov
aas
pop
jns
mov
in
in
push
sbb
mov
out
jno
pop
test
ja
imul
mov
and
fisttpll
mov
int
movsb
cmc
scas
xchg
test
pop
test
xchg
mov
sub
push
lods
dec
sub
shll
inc
outsb
scas
aas
pop
mov
shlb
lods
jle
fmuls
xchg
and
fmull
rclb
mov
push
xor
xor
sub
loop
dec
xor
lcall
cmp
insl
mov
pop
shll
sahf
fldt
jo
addr16
jo
test
gs
les
sub
cmp
out
xchg
arpl
sub
inc
ja
jno
hlt
sub
lea
mov
fisttpll
cmp
cmpsl
mulb
push
pop
push
lahf
inc
jecxz
jbe
cwtl
pop
jbe
and
icebp
js
pop
lahf
outsl
loope
xor
fwait
or
test
aam
std
jno
push
fsubs
jbe
xchg
test
sub
pop
lds
scas
ret
dec
scas
cld
or
mov
and
loop
jbe
sti
adc
je
mov
mov
sub
dec
imulb
xor
push
inc
and
add
jo
push
pop
lcall
mov
mov
mov
out
xor
push
mov
pop
lahf
repnz
push
inc
push
push
pusha
sub
cmp
xchg
pop
stos
fcmovb
mov
xchg
xor
jle
mov
out
xor
pop
lret
aaa
dec
std
inc
pop
mov
aaa
sbb
repz
pop
std
inc
loopne
int3
js
xchg
icebp
iret
leave
mov
sbb
cmp
lods
popa
daa
adc
pop
int
fcoml
loope
fnsave
jo
jns
push
shl
dec
roll
jo
fsubl
gs
jbe
pop
and
dec
pop
mov
dec
icebp
cmpsl
ficoms
add
jno
and
mov
push
push
xor
fs
or
sbb
jle
pushf
jns
inc
js
int3
pop
aas
test
sbb
fbstp
into
nop
cmp
push
divl
test
mov
or
dec
ret
les
ret
sbb
in
mov
or
enter
add
jl
inc
loop
mov
xor
ja
dec
dec
es
xor
stos
in
push
ja
fwait
dec
xor
pop
adc
outsl
pcmpgtw
mov
push
mov
mov
xor
loop
cmpsb
mov
pop
inc
iret
pushf
push
arpl
dec
sbb
jbe
and
lds
add
shrl
lods
subb
inc
jns
mov
mov
cmc
inc
out
cmc
xchg
movsl
dec
mov
mov
bswap
adc
inc
mov
jns
lock
mov
dec
faddl
call
cmpsb
and
xchg
lods
cmp
xchg
popf
mov
xorb
jo
add
imul
ficoms
mov
jl
inc
pushl
xchg
mov
mov
cmpsl
mov
pop
dec
dec
and
push
hlt
or
mov
ret
imul
mov
fldl
fbstp
adc
sub
dec
xchg
mov
jno
jl
mov
mov
ljmp
std
pushf
fbld
nop
daa
ret
sti
insb
fdivrl
dec
cmp
adc
movsb
stc
jl
orl
add
sarb
adc
test
in
aas
lret
mov
mov
ljmp
xchg
mov
dec
pusha
mov
mov
push
insb
mov
cmp
lds
adc
bound
notl
sub
popa
jl
add
xchg
mov
in
ljmp
xchg
sub
and
sbb
push
or
push
into
fnstenv
push
lods
loop
sbb
jne
aas
int3
insb
fdivrp
scas
cmp
rcll
dec
iret
in
cmp
lea
xchg
sti
lock
cmp
or
jmp
inc
mov
jle
mov
bound
cmp
mov
pushf
int
mov
ja
movsl
jo
pop
sbb
or
jne
sbb
rolb
inc
mov
andl
adc
dec
addr16
inc
mov
mov
mov
test
adc
pusha
icebp
out
pop
scas
ljmp
imul
loop
pop
pushf
int3
aas
jle
xlat
dec
les
jnp
addr16
aam
js
sbb
sub
pop
int3
pop
scas
addr16
mov
ss
mov
outsb
add
orl
jnp
lahf
js
dec
in
sub
ss
cs
mov
popf
and
mov
hlt
mov
jge
popa
push
rcrl
cwtl
dec
inc
sbbl
adc
inc
enter
add
dec
mov
and
mov
mov
sahf
or
sub
lret
pop
push
inc
das
jo
lret
pop
shll
lock
cmp
xor
dec
dec
mov
mul
arpl
jp
aas
xor
idivb
and
pop
sub
daa
xchg
or
or
sbb
test
shll
jnp
rcrb
fstpt
inc
xchg
cwtl
jo
ljmp
push
int
mov
xchg
jge
in
cmp
pop
int
ficomps
mov
pop
iret
pop
es
insb
test
movb
or
ja
mov
psrlq
dec
pop
scas
push
add
cltd
std
sarb
shll
std
stos
in
jg
adc
test
inc
fldt
sbb
mov
aaa
xchg
leave
sbbl
xchg
xchg
xor
aaa
mov
sbb
bound
stc
inc
in
and
dec
xchg
aad
bound
call
xorl
inc
nop
push
rcrl
iret
adc
xor
les
scas
pop
mov
aaa
and
xor
sub
pop
adc
daa
daa
inc
xor
mov
pop
movsb
outsl
call
bound
pop
in
pop
inc
xchg
push
ret
js
and
rolb
jle
adc
cs
sti
imul
pop
mov
sbb
notb
xchg
push
sub
mov
es
ss
aad
fs
mov
popl
call
lcall
jl
stos
add
lcall
fidivs
push
push
and
sub
sbb
mov
fistl
jae
dec
in
insl
xchg
push
mov
fiaddl
dec
xchg
adc
bound
aad
imul
pop
jg
xchg
push
or
add
aad
push
js
mov
iret
push
out
imul
jae
sbb
push
mov
sbb
dec
clc
mov
push
hlt
mov
or
push
mov
mov
js
and
jg
inc
adc
xchg
mov
jg
inc
test
outsl
xchg
in
repnz
lahf
movsb
cltd
das
lahf
fmull
sbb
sbb
ret
sbb
mov
movsb
sbb
ret
setb
std
push
mov
enter
ret
imul
scas
scas
push
push
shll
pop
cli
sahf
sub
mov
mov
sti
in
push
pop
inc
cmp
andl
les
sub
cs
fldl
jecxz
out
inc
push
xchg
test
jg
xchg
mov
adc
ret
jo
ss
xchg
pop
jnp
popf
push
loopne
ret
rclb
push
push
rcrl
inc
xor
xchg
cmpb
inc
pop
shr
jbe
mov
rcrl
pop
lahf
dec
nop
cmp
in
ja
jo
lret
pop
adc
testb
mov
or
inc
shrl
xchg
add
clc
pop
cmp
jg
dec
pop
pop
in
mov
ss
cmpsb
and
flds
inc
icebp
clc
outsl
sub
popa
out
push
arpl
add
sbb
stc
cmp
mov
and
add
jp
rcll
mov
aad
addl
ss
into
xchg
je
outsb
push
cli
mov
fwait
adc
popf
neg
popa
push
fwait
clc
gs
push
gs
xchg
sarb
xorb
stos
mull
andb
scas
and
mov
mov
xor
jge
push
div
fmuls
leave
mov
sahf
xor
iret
and
add
mov
mov
loop
fsubrl
ret
fxch
std
femms
mov
fildll
sbb
push
inc
js
in
imul
mov
sbb
and
test
push
inc
inc
loop
ljmp
test
in
xchg
hlt
sub
cwtl
je
mov
push
mov
sbb
cmp
in
push
lds
test
add
jg
push
scas
mov
test
adc
xchg
lret
sub
sbb
insb
mov
jnp
mov
andl
push
cs
pushf
dec
push
push
mov
dec
mov
cmpsb
rcrb
mov
inc
inc
pop
cmc
cwtl
test
xchg
add
dec
ret
adc
adc
in
lret
adc
aad
adc
popa
adc
into
pop
cmp
lock
sbb
inc
hlt
mov
call
jnp
hlt
in
addb
push
aad
rsqrtps
inc
xlat
clc
sbb
or
into
fs
scas
cli
in
out
cmpl
adc
shrd
sahf
pop
dec
cld
jmp
mov
cs
mov
and
mov
cmp
sub
mov
pop
inc
push
popf
test
dec
pop
or
or
test
mov
leave
fwait
push
stos
in
xchg
and
and
gs
cmc
xchg
orl
lret
jmp
out
or
pop
fistpl
dec
jle
cld
test
pop
jns
xchg
pop
adc
lret
sub
mov
mov
xchg
outsl
jns
pushf
sti
test
inc
inc
mov
xor
je
je
inc
lahf
xchg
jae
lock
loope
lret
inc
push
and
sbb
test
fcompp
cmpsb
fs
ds
mov
xor
mov
push
sub
arpl
inc
or
jns
sbb
and
cmpsl
bound
or
cmc
jecxz
sarb
and
gs
xor
dec
insb
jl
lahf
mov
push
sbb
fsubr
adc
pop
pop
xor
jecxz
mov
ret
or
ds
outsl
das
and
arpl
push
pusha
jo
cmp
add
ret
scas
ret
cmp
in
inc
cmp
pusha
and
and
stc
cltd
clc
enter
int3
insb
test
je
fs
jle
mov
mov
adc
icebp
dec
dec
aas
in
jmp
in
imul
mov
inc
outsb
mov
setbe
pop
or
add
mov
jle
aaa
ljmp
outsl
inc
sbb
push
add
jmp
sarl
out
sbb
imul
mov
dec
and
add
mov
or
cmp
pop
jp
in
pop
dec
in
subl
adc
cmc
lcall
ror
scas
ror
and
mov
test
stc
sbb
test
mov
xchg
dec
cmp
xor
aaa
sbb
pusha
fwait
int3
repnz
out
push
sbb
xor
ljmp
in
cmpsb
mov
lock
adcl
scas
loope
jle
jno
push
aam
mov
jge
xor
jmp
shr
jb
xor
idiv
scas
pushf
mov
test
addb
add
or
sti
jne
xchg
clc
mov
mov
adc
test
mov
push
ret
mov
jecxz
xor
add
lea
cmp
cmp
shrb
push
movsl
or
mov
aaa
lret
push
mov
jp
aas
fsubs
xor
inc
js
push
adc
mov
repnz
fstl
mov
das
mov
jbe,pt
xchg
jp
add
and
leave
jmp
pushf
lods
call
lock
in
lods
mov
leave
jp
mov
mov
sbb
shll
dec
push
nop
push
je
xchg
jmp
cs
ss
sbb
push
jmp
xchg
jmp
xor
add
daa
pop
aaa
into
add
in
inc
or
adc
push
outsl
repnz
add
sbb
out
dec
jge
rolb
dec
pop
pop
xchg
rolb
dec
dec
mov
or
and
lret
jns
mov
subb
mov
scas
cmp
sbb
jo
pop
pop
and
gs
cltd
xor
stos
cmp
push
movsl
je
movsl
sti
fisubrl
mov
out
or
in
add
rorb
inc
mov
or
hlt
ja
xor
dec
sbb
push
pop
xchg
jae
and
repnz
mov
in
xor
mov
fadds
pop
mov
mov
lea
fcompp
and
outsb
jb
xlat
cmpsl
jp
cmp
daa
push
cs
ret
sbb
xchg
mov
xor
out
push
xchg
cmp
rclb
and
mov
loopne
int3
xor
mov
iret
cmp
add
push
or
shrl
xor
ss
cs
daa
jle
dec
orb
inc
push
jno
jne
stos
lds
in
js
mov
jle
push
pop
pop
inc
mov
push
pusha
sahf
insl
or
jp
ljmp
cld
sbb
push
and
jg
cmpsb
loop
test
dec
fsub
inc
or
in
or
pop
in
dec
call
sub
sub
inc
cld
rcr
jl
jb
sbb
scas
out
test
adc
loopne
test
inc
jne
stos
pop
dec
call
jge
mov
repz
inc
push
sbb
mov
xchg
mov
fstpt
or
pop
dec
repz
xor
cmp
jnp
ror
jo
imul
jle
cmc
cmc
ljmp
imul
fmull
mov
xor
or
out
sbb
jnp
roll
loopne
aaa
mov
or
sbb
xchg
add
xchg
push
lahf
sub
sbb
adc
sub
or
mov
adcl
shr
dec
adc
pop
jmp
loope
or
pop
mov
mov
roll
push
inc
fnstcw
mov
aad
and
orl
mov
cltd
outsl
ljmp
stos
cld
and
push
fadd
popa
movsl
xorb
and
and
enter
fidivrs
ret
mov
scas
lock
mov
xchg
xchg
mov
aam
das
gs
jnp
sbb
ja
lods
mov
dec
mov
mov
pop
push
jg
sub
out
stos
lods
scas
dec
unpcklps
out
rclb
mov
jmp
or
andl
xchg
aaa
push
les
enter
push
add
outsb
test
pop
push
sbb
in
push
pop
mov
cmpsb
sub
fs
xchg
test
and
dec
dec
out
movsl
dec
add
sti
aad
not
or
stos
add
sub
inc
aam
lahf
repnz
mov
mov
mov
imul
push
in
iret
sti
cmpsl
mov
cmp
stos
lret
rorb
sbb
push
pop
negl
push
ret
insb
pop
cmp
pop
mov
mov
ds
je
out
ja
fstl
mov
ss
xchg
jbe
les
jg
xchg
leave
das
fisttpll
jnp
inc
xchg
or
sub
xor
add
dec
xchg
pop
or
lods
js
jl
fistpll
add
xor
out
xchg
es
test
jmp
jge
divl
ror
bound
pop
sbb
data16
aas
shufps
dec
data16
mov
pop
movsb
xor
and
jb
imul
stc
les
or
mov
inc
jne
lods
out
dec
cmpsl
inc
out
cltd
int
sti
imul
or
int
sti
mov
subl
cmp
iret
jcxz
ret
js
int3
adc
lods
mov
and
lsl
push
mov
jge
in
xchg
lods
call
fsubrl
into
stos
cmp
rcrb
les
sbb
insb
inc
jo
out
push
or
or
lods
mov
jmp
es
jp
pop
xchg
push
inc
xchg
pop
pop
icebp
lahf
addr16
mov
cwtl
mov
xchg
incl
fs
xorb
stc
mov
xchg
dec
mov
sarb
pop
or
mov
push
jmp
or
stc
mov
jns
push
pop
test
fsubr
lret
adc
test
mov
sub
clc
push
popf
mov
add
pusha
mov
cmp
js
push
pop
lret
mov
dec
push
jecxz
mov
pushf
pop
loopne
psrlw
mov
das
dec
sbb
xchg
and
cwtl
ljmp
mov
mov
and
pop
xchg
inc
inc
repnz
push
and
mov
xchg
out
pop
fidivrs
mov
lret
sbb
or
aam
call
in
xchg
dec
shll
cmp
insb
mov
jge
in
mov
scas
inc
mov
sub
cli
mov
cmp
in
xchg
cmc
mov
ja
dec
jmp
mov
mov
in
dec
mov
pop
push
sahf
push
mov
pop
leave
lock
push
testl
out
xchg
ret
aas
in
ss
or
mov
fmull
mov
jne
pusha
or
or
cld
out
jae
inc
xor
dec
mov
cmp
aaa
ret
lcall
pop
jp
fcmovnb
inc
sub
fisttpll
adc
icebp
cmp
enter
aam
cltd
jmp
ljmp
jle
fwait
test
lods
pop
out
pop
movsl
pop
movsl
vmwrite
lea
mov
mov
lock
cmpsl
jae
sbb
sbb
inc
movsb
test
xorl
mov
outsb
and
xlat
sub
or
add
fdivrp
popa
push
fbld
lds
xchg
lea
and
es
mov
in
sub
pop
xchg
sub
fnstsw
shll
imul
push
scas
xor
flds
in
fidivrs
in
inc
repz
and
gs
imul
repnz
add
aam
insl
cltd
popf
loop
inc
das
mov
mov
into
insl
hlt
push
xor
sub
out
jo
sbb
and
loope
mov
pop
and
stc
mov
add
repnz
add
lods
sbb
dec
hlt
xor
popf
inc
xchg
pop
add
hlt
loop
mov
xor
mov
ret
sub
rcrb
pusha
and
pop
movsl
adc
repz
jb
jge
insl
mov
arpl
in
xchg
push
dec
sub
int3
mov
xchg
mov
and
popf
aam
out
dec
add
dec
cmp
pop
mov
sahf
fldcw
loope
mov
popf
adc
ds
push
cmpl
lea
xchg
arpl
cli
sub
ds
adc
sub
dec
mov
adcb
cmc
jmp
xlat
push
jns
sub
int
les
and
stc
es
call
lea
outsl
sbb
in
cmc
adc
aam
movd
dec
jle
jmp
dec
cmp
leave
filds
outsl
fwait
xor
push
into
and
aam
push
shll
xor
call
inc
jb
pop
xchg
jl
xor
leave
sub
pushf
xchg
repnz
sbb
or
mov
add
shll
inc
aaa
addr16
outsl
cmp
dec
rcr
std
pusha
push
inc
sub
xchg
ret
push
xchg
sbb
mov
int
addr16
add
cwtl
inc
mov
jb
pusha
or
imul
push
sub
and
cmp
ja
adc
int3
lock
mov
jb
mov
fs
in
mov
mulb
lret
adc
push
add
or
inc
out
or
cwtl
outsl
repnz
mov
ljmp
jo
xchg
sbb
push
and
xor
jmp
push
jno
mov
std
es
push
dec
sub
cli
shrl
cmp
jmp
push
in
push
add
hlt
push
mov
out
adc
push
testb
xor
sahf
sub
mov
aas
mov
sbbl
push
ret
dec
sbb
jge
pop
daa
dec
mov
and
or
fmulp
adc
mov
mov
pop
push
push
sub
lret
xchg
push
pop
mulb
mov
dec
call
pop
or
mov
imul
sbb
pop
in
push
outsl
testb
mov
push
mov
arpl
fimull
cmp
or
dec
ret
xchg
ucomiss
mov
sub
mov
pop
pop
or
push
xor
cld
mov
mov
ljmp
cmp
jne
stos
mov
out
fcoms
add
enter
shl
xor
cmp
fisttpll
or
pushf
scas
push
scas
dec
int3
dec
sub
in
fstpl
dec
jge
loopne
shrl
popf
call
add
fcmovne
push
jae
fcoms
repnz
adc
test
cmp
add
or
inc
in
imul
dec
sbb
and
mov
mov
cwtl
aam
jne
lea
mov
jmp
hlt
jp
clc
cmp
adc
data16
pushl
ret
ret
mov
pusha
inc
add
add
dec
dec
push
loope
jmp
lods
inc
into
out
sahf
lods
xor
adc
inc
leave
jmp
xchg
mov
jg
pop
out
movb
mov
cwtl
popa
scas
mov
mov
push
dec
lret
xchg
ds
cmpsl
pop
and
inc
xor
inc
lret
repnz
mov
adc
sub
pop
jp
xlat
or
dec
inc
jno
push
xchg
xor
and
mov
xor
inc
inc
ret
fistpll
jle
pop
xchg
mov
jle
or
daa
push
push
adc
pusha
cltd
jb
mov
sbb
adc
lret
ljmp
lcall
lea
rcll
xchg
cmp
sub
mov
inc
xchg
fstl
in
push
fs
repz
adc
mov
inc
aaa
xchg
cli
repnz
icebp
xor
dec
xor
cld
in
add
int3
xor
fbld
xor
and
mov
arpl
popf
fidivs
add
mov
shrl
pop
loop
out
sbb
push
scas
mov
shll
cmpsb
xlat
cmp
pop
and
dec
sbb
js
jnp
adc
jmp
push
inc
sub
mov
cmc
sub
sub
sbb
sub
sahf
movl
pop
in
dec
repnz
sar
sbb
cmp
adc
stos
fsubp
hlt
ror
dec
sub
push
mov
mov
mov
insb
mov
mov
mov
adc
hlt
sbb
ja
adc
scas
int
test
pop
outsb
aaa
sub
inc
mov
xor
and
sbb
adc
inc
pushfw
in
ja
cmp
cwtl
out
mov
adc
sbb
mov
inc
adc
sbb
lds
and
testb
xchg
adc
dec
jle
mov
ja
hlt
jmp
and
fldl2t
stc
pop
adc
sbb
int
dec
and
jge
divb
cmp
add
cltd
or
mov
outsl
xor
cld
sbb
fmuls
pop
dec
hlt
push
loop
mov
pop
repz
out
add
push
lds
aam
das
pop
sbb
pop
or
jg
lds
and
mov
lds
and
pop
mov
jl
pop
mov
ss
sub
fstp
aas
lret
add
jg
and
test
and
jp
arpl
push
repz
and
hlt
daa
les
mov
insl
inc
sahf
cmp
adc
fs
subb
dec
push
mov
jnp
mov
call
lcall
into
frstpm(287
mov
push
outsb
dec
and
xchg
idiv
mov
stos
imul
jns
and
mov
sub
andl
xchg
and
cmp
push
inc
push
mov
add
jmp
fldcw
fmull
fnsave
into
bnd
cmp
fwait
jg
dec
cltd
test
ret
jecxz
push
push
movsl
mov
lahf
mov
jge
test
xchg
push
dec
xorb
mov
cwtl
xorl
push
push
fistps
stos
sti
gs
inc
sbb
pop
repnz
pop
and
add
aas
add
xlat
test
aaa
lea
mov
jns
stc
push
cmpsl
mov
das
mov
insb
mov
sub
mov
xor
or
scas
sbb
out
add
ljmp
xchg
fcomi
lret
push
mov
out
cs
repz
fnstenv
ret
arpl
push
pusha
push
lods
xchg
les
xchg
fldt
call
xor
fimuls
xor
loop
pusha
fld
dec
lret
icebp
inc
sahf
jge
lahf
sub
mov
xchg
leave
stos
das
fs
iret
iret
jmp
lods
call
ret
add
xchg
cs
push
push
sub
jnp
iret
les
aaa
icebp
insl
aas
loope
xchg
cmp
into
in
push
or
ds
aad
mov
loop
cli
and
pop
lods
xor
xor
ret
outsb
xor
orl
jle
cld
push
fucomi
cmpsb
daa
fidivrl
int3
sub
orb
iret
or
lret
stos
js
or
sti
loopne
fldt
outsl
push
in
add
cmp
cmp
rorb
cltd
add
movsl
sbb
mov
jb
hlt
sbb
xor
cltd
jecxz
scas
inc
jecxz
sahf
mov
push
call
and
dec
xchg
push
xchg
scas
mov
mov
mov
dec
or
and
jne
je
inc
lods
aad
add
adc
shrl
fwait
mov
ljmp
cld
mov
mov
pop
mov
dec
pop
mov
pop
push
dec
popa
loopne
dec
dec
push
daa
sbb
rcrb
and
xchg
bound
pop
adc
aad
add
xchg
xlat
lock
sbb
and
jo
add
xchg
lods
loop
rcrl
movsl
push
ret
or
or
mov
cmp
xchg
repnz
or
mov
lret
loopne
notl
rcr
xchg
sarb
movsb
fistl
cwtl
add
cmp
out
cmc
je
test
pop
arpl
in
and
loope
sbb
jno
adc
icebp
jb
sub
rcrb
jno
in
dec
ffreep
lahf
dec
inc
rclb
mov
out
push
jge
cmp
insl
dec
daa
ss
in
in
in
jl
xor
in
lock
adc
cltd
mov
jo
xchg
mov
adc
and
jo
push
repz
mov
popf
ret
std
xchg
in
jne
mov
scas
arpl
rcl
push
stc
mov
mov
popf
push
jo
dec
jne
sbb
or
adc
fwait
mov
pop
out
das
adc
int3
in
negb
sbb
mov
fisttps
lds
dec
outsl
sub
in
xchg
mov
ja
jne
add
int
sub
dec
mov
sbb
mov
enter
push
ret
dec
ja
fsub
int
daa
int3
filds
mov
and
pop
out
lock
cmc
inc
xchg
ljmp
test
adc
dec
mov
inc
add
or
pop
ss
sub
pop
int3
cmp
mov
add
pop
mov
add
movb
aam
rclb
fisubrs
pop
push
jmp
pop
gs
imul
pusha
sbb
sub
mov
cmp
repnz
mov
inc
into
sbb
clc
pop
cmp
leave
mov
pop
imul
sub
movsb
into
lcall
and
lock
data16
jae
shlb
and
lea
mov
lret
inc
es
loop
sbb
pop
or
cs
xor
int3
xchg
or
lahf
daa
inc
xor
mov
ja
pop
xchg
data16
dec
int
cld
sub
dec
iret
adc
nop
scas
push
mov
lret
pop
sub
clc
inc
adc
inc
out
sbb
ficoml
loop
pushf
fiadds
icebp
dec
jge
mov
mov
fisubrs
xor
sbb
leave
adc
cmp
lret
test
bswap
sbb
jbe
jns
sbb
out
aas
stos
xchg
test
call
dec
push
pop
inc
and
and
mov
xchg
sbb
adc
adc
or
sub
xlat
rorl
cmp
push
ja
aaa
cmpsb
jmp
dec
cmp
fs
lods
dec
test
push
lret
push
cld
rol
pop
mov
cmp
mov
shl
push
pop
lea
mov
lret
loopne
rcrb
lods
ret
sbb
or
aam
ret
int
cli
mov
add
das
jmp
frstor
dec
mov
or
ljmp
jns
dec
sbb
jecxz
mov
shll
jae
into
jp
cmc
xchg
xor
xor
adc
and
cltd
cmp
add
sub
pop
mov
in
dec
xor
adc
mov
xchg
aad
push
ror
xchg
rorl
test
sub
cmpsl
jmp
call
push
dec
jo
add
cmc
insb
je
adc
jg
add
push
int3
fcmovnu
add
jno
sbb
xchg
cmp
clc
cmp
jecxz
pop
ljmp
xor
daa
xchg
cmpsb
test
jns
dec
sbb
out
pop
outsb
test
sbb
ss
loope
push
popf
push
pushf
jb
mov
or
mov
mov
cmc
and
cld
movsb
sub
push
adc
das
jb
fdivrp
mov
sbb
gs
push
cmp
pop
pop
imul
sahf
cld
ds
ret
aam
lock
cltd
pop
push
fdivrs
xor
mov
shl
test
les
and
call
mov
adc
xlat
enter
aad
orl
add
rcll
popf
rclb
cli
cmpsl
mov
test
and
das
test
and
and
add
movsl
mov
jle
int
fisttpl
ret
jl
mov
or
pop
and
pop
in
shll
mov
addr16
call
add
or
lods
mov
mov
dec
jmp
jecxz
in
daa
or
pop
dec
shll
popa
lret
or
jne
push
repnz
inc
xchg
ja
or
xor
dec
shll
lret
jge
lods
adc
mov
jle
dec
jns
fisttpl
adcb
sub
mov
add
neg
test
push
mov
cmc
push
mov
sbb
rcrl
push
sbb
fdivrl
in
in
cli
cwtl
xor
enter
movsl
lods
out
jne
xor
push
shll
cmp
test
cmpsl
xchg
pop
mov
adc
insl
ret
jne
repnz
imul
mov
xlat
inc
je
pop
lods
push
sub
inc
popf
sub
push
test
push
dec
call
lret
add
rcrb
mov
sub
loope
pop
xor
subl
je
pushf
and
icebp
cmp
por
pop
aas
sbb
fldl
fcmovu
pop
lcall
rolb
gs
das
imul
mov
mov
icebp
jns
dec
jmp
pop
call
movl
out
stos
mov
mov
mov
xorl
jl
nop
or
dec
add
jmp
ror
xchg
mov
imul
movsb
push
faddl
jge
outsb
cmpsl
add
sbb
sti
ret
mov
pop
cli
sbb
ret
add
and
loopne
andl
cmp
les
popf
dec
es
cmp
mov
xchg
jns
scas
int3
and
ret
lahf
sbb
xlat
pop
xchg
inc
ja
ds
nop
js
xchg
push
cmc
push
mov
fcoms
xchg
lret
in
and
mov
or
add
in
iret
call
xchg
pop
adc
jns
xchg
ljmp
int
in
loopne
push
add
daa
test
or
pop
lds
mov
xchg
jge
jmp
jae
arpl
push
stos
les
jle
xchg
stc
out
xor
lds
inc
mov
repz
xor
data16
or
adc
and
shlb
popa
or
mov
out
adc
mov
sbb
fmul
mov
adc
dec
add
enter
jp
cmpsb
mov
mov
repz
or
flds
mov
imul
jb
imul
in
jne
and
andl
scas
sbb
aam
sbb
sub
arpl
cltd
inc
test
pop
mov
in
sbb
mov
insb
int3
fadd
sub
pop
aam
repnz
repz
dec
sbb
addb
xchg
insl
rorl
jb
mov
or
pop
adc
sbbb
repnz
jmp
and
cmp
dec
jo
sbb
and
cmp
add
sti
test
push
rorl
push
leave
jnp
mov
fdivr
sti
xabort
movsb
lret
bound
push
sbb
scas
pushf
inc
sbb
mov
leave
ljmp
pop
incb
in
int
hlt
pop
enter
sti
ja
clc
add
inc
sti
mov
mov
cmc
add
out
loopne
negl
mov
rorb
scas
pop
repnz
cli
out
hlt
dec
mov
add
stc
cmp
rcll
push
pop
popf
out
jno
mov
cmp
bound
add
mov
repz
cs
movsb
lock
fiadds
xchg
and
mov
mov
push
lret
inc
xor
rcrl
popf
push
mov
pop
lods
adc
jge
mov
push
dec
and
in
and
and
js
inc
pusha
out
jbe
push
pop
or
jecxz
push
push
or
cmpsl
cmp
leave
push
mov
jae
mov
pop
es
fs
dec
mov
inc
sarb
dec
inc
cmp
adc
inc
jp
mov
fstps
bound
shlb
fucom
lea
pop
push
mov
lea
jmp
mov
idiv
or
das
call
dec
cmpsb
xor
xchg
cmpsb
push
lea
mov
pop
shrb
mov
stc
popf
dec
jo
inc
pop
xor
mov
push
mov
lahf
lods
cmp
sub
adc
aam
in
jmp
jo
in
and
inc
cmp
loopne
popa
adc
jo
lods
add
movb
imul
shlb
leave
cwtl
jb
inc
cld
jo,pn
pop
insb
jno
mov
inc
and
xor
cmc
mov
jb
ja
lock
ret
imull
sub
sbb
xorl
out
cltd
adc
outsb
xchg
test
into
xchg
inc
cs
mov
cld
cli
inc
and
sub
insb
cmp
push
jo
jbe
jge
add
mov
xchg
inc
sub
lea
inc
xchg
lods
movsl
data16
sti
scas
add
inc
dec
cmpsb
mov
sahf
lahf
and
fwait
leave
andl
mov
std
repz
or
or
dec
aas
sbbb
pusha
xchg
and
jbe
or
push
mov
ret
mov
jp
rol
shrl
push
cmc
pop
dec
push
jg
out
mov
cmp
xchg
xchg
enter
push
mov
popf
cmp
or
lret
sbb
sahf
nop
daa
dec
sbb
lahf
nop
lock
out
fldl
pop
push
fs
sub
pop
add
subl
jmp
imul
mov
std
mov
cmp
mov
stos
into
aas
xchg
sub
mov
insl
inc
adc
mov
popf
inc
out
sbb
adc
inc
es
xchg
mov
or
jo
jnp
pushf
push
bound
cld
dec
push
stc
xor
dec
adc
push
aad
dec
push
or
adc
pushf
pushf
mov
mov
lcallw
mov
roll
push
xchg
mov
and
push
cmpsl
rolb
pop
inc
mov
xor
push
arpl
mov
data16
xchg
mov
nop
mov
cmpl
add
loope
insl
test
push
movsl
popf
pop
lahf
mov
icebp
sbb
mulb
xor
repnz
and
add
cmp
out
mov
cmpsb
jge
fsub
into
adc
shll
ljmp
adc
dec
pop
mov
sub
js
mov
shrb
in
pushf
inc
jl
gs
aam
pop
mov
dec
jns
sbb
nop
lahf
sbb
mov
adc
sbb
insb
gs
pop
xchg
mov
mov
adc
dec
pop
imul
popf
orl
int3
mov
insl
jmp
push
adc
xor
pop
imul
bound
sub
mov
ret
shlb
stos
dec
adc
jbe
mov
fs
pop
jecxz
cmp
mov
scas
scas
gs
lahf
mov
out
fwait
xchg
popf
xchg
xchg
or
test
mov
pop
int3
dec
mov
xchg
add
dec
sbb
mov
jecxz
aaa
ljmp
jns
xchg
aas
xor
insb
jnp
addr16
xchg
xchg
xchg
shrb
cli
cli
mov
in
rolb
sbb
fwait
scas
pop
mov
std
fidivrs
xor
cmpsb
or
jp
mov
mov
outsl
cmpsb
mov
cmp
out
adc
pushf
jp
fld
popf
cld
out
hlt
push
outsl
mov
jecxz
and
push
fists
cld
dec
jo
imul
push
mov
lcall
loopne
out
out
lret
lds
push
stc
scas
sbb
pop
fwait
pop
cltd
adc
jb
js
test
call
push
fcomps
scas
lds
add
inc
aaa
shlb
adc
shlb
or
inc
jmp
jnp
into
test
lock
das
jns
xchg
push
imul
xchg
dec
xor
xchg
inc
and
sub
mov
fstpl
and
jne
push
mov
push
xlat
lds
add
popf
add
xchg
cmp
lods
mov
insl
fistps
push
jp
mov
push
aas
adc
sbb
mov
dec
out
jnp
mov
fsubl
mov
loope
xchg
push
loopne
lcall
pushf
stc
fbld
sbb
scas
negb
inc
rorb
mov
pop
mov
cs
dec
ficomps
clc
cld
or
insl
cmp
sbb
xor
loop
pusha
adc
mov
or
pushf
push
add
out
xor
sbb
fcomps
test
clc
pop
test
sub
dec
mov
sub
imull
mov
movsl
xchg
out
fwait
push
pushf
scas
sub
mov
std
aad
ret
in
fwait
inc
arpl
xchg
es
out
xor
mov
mov
jge
mov
push
inc
inc
mov
mov
rclb
cmpsl
shrb
scas
in
xchg
dec
sub
dec
out
dec
scas
xchg
lods
push
rcr
pop
frstor
fldl
jb
jecxz
fldcw
movsl
sar
es
or
ret
sbb
fstpl
dec
cmpsb
or
in
aas
mov
sub
and
and
push
lahf
popa
sbb
cmp
jno
cwtl
and
mov
ja
xchg
loope
or
leave
mov
or
lock
fdivr
fistps
mov
jae
ljmp
push
lret
repz
test
outsl
test
mov
add
sbb
add
xor
aad
push
lea
outsb
aad
inc
icebp
add
in
add
dec
push
sahf
mov
xor
dec
add
out
popf
in
cmpsl
arpl
jg
pop
adc
out
or
jge
lods
push
stos
rcrl
push
jae
repnz
dec
sbb
arpl
dec
loope
xchg
mov
adc
test
add
sub
repz
cmc
cmp
cli
mov
hlt
cmp
cmpsl
cmpl
cmp
mov
mov
pop
sbb
mov
push
adc
jp
dec
mov
fsubrs
push
out
mov
insb
push
inc
mov
mov
and
in
sbb
clc
and
insb
sub
pop
outsb
arpl
mov
inc
out
xchg
and
adc
push
repnz
sub
push
stos
enter
stos
xorb
test
mov
xchg
ljmp
xor
mov
ss
mov
cmp
fwait
mulb
add
js
mov
int
scas
mov
loop
inc
pop
jmp
mov
sub
or
dec
mov
sub
sub
je
lret
sbbl
insl
test
ljmp
adc
xchg
jbe
sub
outsb
mov
mov
rol
mov
add
stos
pop
movsl
outsl
inc
aad
add
xor
push
dec
adc
add
sbb
xchg
cmp
add
mov
data16
xor
fiaddl
sti
cs
data16
movsb
or
cmp
scas
dec
sbb
int
xor
pop
out
fsubrp
or
sti
push
mov
repnz
sahf
push
std
push
mov
cmp
jbe
cmp
inc
sbb
push
rcrl
jle
out
inc
or
aas
inc
sbb
add
call
pusha
sahf
ror
test
mov
insb
nop
adc
int
sbb
adc
scas
add
xlat
push
jl
sub
jo
rorl
pop
leave
push
push
daa
stos
jl
add
mov
mov
jmp
dec
in
xchg
repnz
jmp
mov
roll
cmp
daa
test
stos
scas
xchg
icebp
dec
add
sbb
arpl
and
sbb
mov
and
mov
enter
jno
das
insb
sub
pop
pop
lcall
pop
mov
sub
mov
xor
jecxz
push
sub
mov
inc
movsl
mov
pusha
push
jp
mov
mov
mov
sbb
jge
mov
mov
popa
pop
inc
mov
lods
jo
repnz
daa
or
clc
mov
nop
lods
pusha
xorl
sti
mov
sar
add
mov
mov
inc
andb
fmul
cld
mov
xchg
call
add
data16
rolb
fisttps
mov
stos
lret
fisubl
and
mov
inc
add
cmp
rcll
dec
sti
xor
aam
int3
inc
pop
mov
cmpsl
fdivr
fs
enter
bound
push
lea
jb
xorl
mov
xchg
jns
loope
outsl
add
test
xchg
xchg
lret
aad
jecxz
add
push
jo
add
cmp
ljmp
mov
dec
out
stos
cmp
jns
repz
xchg
lea
aaa
xchg
mov
sarl
fcoml
sub
in
dec
jp
loope
sarl
pop
jae
push
add
in
inc
fsubr
mov
dec
into
stos
inc
out
fnsave
lret
pop
dec
sbb
mov
and
les
push
mov
das
sbb
es
outsb
ret
push
notb
rorb
cs
mov
pop
or
dec
cmp
pushf
dec
fsts
push
fisttpll
pop
or
pushf
jo
cmpsb
add
and
into
shr
pop
in
outsb
lods
repz
nop
add
mov
insl
hlt
icebp
push
cmc
mov
scas
cmpsl
cmp
cmp
imul
in
outsb
jbe
dec
push
loope
sbb
dec
push
push
sti
pop
and
fs
jnp
jge
and
inc
jecxz
jb
fwait
lods
mov
mov
insb
push
mov
and
int
mov
call
pop
mov
popa
imul
mov
mov
sbb
xor
dec
xor
aad
mov
in
add
sbb
jne,pn
test
xor
jnp
jge
push
sbb
pop
add
xor
test
outsb
lea
es
push
xchg
movsl
repz
jmp
movsb
out
and
sub
and
inc
fmull
jge
data16
pop
mov
push
jmp
pusha
mov
shlb
lahf
xor
pusha
pushf
test
push
adc
dec
sub
pop
inc
ja
loopne
jb
push
adcb
scas
scas
pop
push
mov
aaa
insl
enter
fiaddl
lds
scas
js,pt
out
xor
mov
je
int
sub
divl
aas
mov
add
std
fstp
gs
adc
and
je
inc
adc
mov
sahf
push
lock
adc
je
imul
jbe
fs
and
lret
shlb
cmc
rcrl
sbb
and
mov
das
insl
add
mov
inc
adc
cmp
pop
je
sub
outsl
out
movsl
fstps
jp
push
fiaddl
and
xor
adc
lret
es
ja
mov
or
jnp
test
mov
fs
and
mov
pop
sti
mov
pop
stos
orb
test
jno
xchg
cltd
add
mov
push
stos
push
jecxz
in
or
call
ret
cmp
subb
movsl
pop
shlb
aam
or
stc
mov
movsb
fldt
mov
insb
xchg
std
sub
xchg
shl
clc
sahf
cmp
out
push
sub
or
mul
push
fidivs
lret
enter
xor
fidivrs
mov
mov
rol
repnz
dec
into
scas
repz
jne
or
push
push
adc
aaa
pusha
xor
xlat
jno
loope
jge
xchg
cltd
in
stos
push
ds
imul
les
fmulp
test
call
add
movsl
aam
xchg
or
test
sbb
pop
pslld
inc
stos
lret
rol
sarb
insl
and
mov
fimuls
xor
pop
movsb
in
add
fldt
popl
or
pop
sahf
inc
add
repnz
adc
lods
data16
adc
push
lods
aad
shll
fstenv
insl
push
pop
out
jmp
outsb
add
imul
jb
insb
xor
inc
decl
cwtl
or
and
js
bound
lahf
lods
or
aam
xor
loop
mov
in
add
hlt
in
push
pop
into
js
mov
mov
inc
fimull
subl
call
faddp
pushf
push
mov
pop
sbb
jp
xor
or
dec
pop
cmp
stos
pusha
cmpsb
jbe
imul
mov
jns
or
cmpsl
gs
inc
inc
and
mov
test
xor
rcll
or
dec
jns
inc
mov
jae
xor
dec
addb
inc
pushf
icebp
pop
inc
jo
sub
sub
push
xchg
sbb
fnstsw
leave
sahf
push
aam
jb
cmpsl
mov
inc
fistpl
jl
fwait
test
mov
xlat
push
ret
add
xchg
pusha
stos
sbb
andl
repnz
pop
cmp
xchg
adc
add
call
and
cs
jnp
push
push
scas
das
mov
ljmp
adc
add
push
fucomip
ds
pop
addl
mov
out
fwait
in
daa
mov
loope
add
aaa
daa
loop
ljmp
cmpsb
push
cli
push
xlat
jnp
dec
and
lea
lcall
pop
test
jo
adcb
push
inc
scas
push
pop
or
int3
mov
dec
mov
shll
in
addr16
add
sbb
mov
les
sarl
mov
dec
pop
xor
stos
in
mov
jle
gs
mov
hlt
inc
dec
aam
lods
jne
inc
cmpsl
arpl
xchg
fcom
xchg
pop
mov
out
test
rorl
push
maxps
in
scas
xchg
or
pop
inc
lcall
scas
inc
and
jne
mov
pop
sub
ror
out
repnz
sti
xor
outsb
mov
scas
enter
mov
mov
xchg
sahf
mov
cmp
loope
adc
lcall
dec
arpl
xchg
mov
add
pop
dec
cmpsb
clc
gs
and
in
dec
sbb
mov
iret
pop
arpl
inc
sub
jmp
jnp
push
pop
mov
push
push
fisubl
or
cmc
cmpsb
fs
pop
mov
in
not
dec
aas
fdivl
leave
dec
aas
adc
xor
stos
test
or
pop
stos
int
push
movsb
test
adc
push
shrl
outsl
sub
sub
push
push
popf
pop
inc
shll
cmp
inc
outsb
xor
sub
clc
inc
out
std
adc
hlt
es
add
nop
pop
shll
mov
jmp
push
cmpb
outsl
enter
mov
push
lock
inc
fcompl
ds
std
inc
sub
out
loop
in
push
xchg
insl
and
pusha
and
dec
ljmp
pop
and
pop
or
or
ja
sbb
or
mov
dec
pop
inc
sbb
mov
in
shr
lea
lcall
dec
push
jp
clc
mov
incl
jo
or
xor
add
bnd
scas
mov
pop
lgdtl
pop
sub
push
mov
mov
cmp
jne
inc
test
xchg
lock
cld
fsubl
out
cs
jb
lods
mov
out
xor
inc
shll
pop
jg
cmpsb
xchg
fisubrs
rclb
pop
jmp
and
jge
in
les
jecxz
inc
pusha
shll
or
jnp
dec
add
sub
lahf
and
mov
jne
pusha
cmpl
notl
cs
stos
jecxz
push
jbe
fwait
mov
mov
xchg
aad
in
addr16
or
mov
repnz
inc
jp
aaa
js
iret
vpmacssdqh
add
cmp
mov
inc
xlat
mov
not
jb
dec
add
test
jbe
jle
inc
ret
sub
into
test
cltd
hlt
lock
addb
cmpb
xchg
push
inc
lahf
sub
cmp
sbb
call
xchg
cltd
and
jne
mov
mov
xchg
mov
xchg
sbb
das
stos
int3
mov
loop
lcallw
test
pop
inc
fmull
sbb
cltd
jo
in
sub
xchg
outsl
jge
mov
lods
pushf
mov
sub
loopne
popa
ds
pop
cmp
jne
jge
and
sbb
test
jae
dec
mov
in
xchg
icebp
lcall
mov
jl
andb
mov
xchg
imul
adc
out
int
xchg
aaa
jl
and
xor
xchg
popa
rorb
in
jo
pushf
fdivs
xchg
mov
cmpl
pop
lds
test
movsl
mov
shrb
js
adc
push
inc
sbb
pushf
push
adc
div
stos
shll
lds
xlat
mov
rolb
jae
inc
rcll
loope
cltd
test
jecxz
mov
mov
ret
pop
das
in
xchg
sbb
jae
xchg
lock
sbb
shll
cmp
mov
dec
test
cmp
call
lds
popf
scas
inc
lret
ljmp
inc
pop
xor
xor
fcomps
jbe
mov
call
sbb
les
xchg
pop
add
pop
mov
movsl
xchg
rcrl
test
nop
sbb
leave
sbb
movsb
sbb
dec
xor
bound
sub
pop
mov
icebp
pop
fisubs
rcr
fs
and
je
aaa
cltd
cwtl
scas
xorl
ljmp
loopne
dec
ja
sub
aad
or
mov
lret
jle
mov
mov
icebp
add
pop
sbb
xchg
testl
cmp
dec
cli
aam
mov
loop
xchg
adcl
mov
jne
cmp
jne
jecxz
pop
mov
lods
or
jge
mov
mov
dec
test
test
fisubs
jnp
adc
aad
iret
jns
stos
pop
jg
cmpsb
cwtl
mov
adc
dec
out
sbb
insl
mov
ds
testl
mov
cwtl
add
nop
dec
scas
jle
inc
notl
stos
pop
push
loope
data16
adc
mov
ret
push
jb
inc
outsl
fabs
loope
cs
sbb
shll
add
dec
jge
adc
aas
iret
sub
or
std
cwtl
test
mov
loope
mov
add
iret
jo
movsb
cmp
add
andl
and
mov
sub
stos
fwait
push
test
mov
xor
fsubrs
dec
ret
adc
mov
or
mov
pop
jbe
mov
das
scas
dec
dec
int3
and
daa
mov
and
in
sbb
bound
scas
jno
ret
fidivs
mov
sub
jg
pop
dec
jg
push
or
fbld
fidivrl
jecxz
inc
es
xor
cld
ret
in
aad
add
and
adc
adc
pushl
mov
pop
dec
int
xchg
or
loop
jmp
popa
in
imul
hlt
in
and
jg
test
das
notl
inc
cmp
fnstsw
mov
mov
andl
dec
in
xchg
leave
jecxz
jg
fwait
push
inc
xor
pushf
mov
data16
jne
inc
xchg
push
mov
cmp
inc
cmp
loopnew
mov
lcall
mov
insl
add
test
mov
adc
and
xor
dec
pusha
addr16
cmpsl
xchg
jecxz
xchg
push
roll
aas
stos
jecxz
jg
sub
and
pop
dec
maskmovq
pushf
ret
in
xchg
divb
push
xchg
cwtl
adc
je
sarb
push
push
pusha
mov
jns
mov
ret
cmp
icebp
test
cwtl
aas
pop
mov
sti
pop
lcall
jmp
test
add
nop
lods
scas
and
mov
idiv
sbb
push
mov
mov
enter
pushl
fiadds
insb
adc
int
xchg
subl
inc
shlb
cwtl
add
in
shrl
lea
mov
aam
enter
jne
and
cld
xchg
xor
pop
and
iret
push
fs
sbb
shlb
xor
jl
aam
xchg
sbb
and
jne
test
cmp
repz
sbb
mov
int
cmp
divl
mull
out
and
mov
ds
xchg
scas
mov
mov
outsl
outsl
cmp
jmp
negl
mov
mov
push
hlt
jnp
mov
aas
and
push
fisubl
mov
clc
xor
jne
call
cli
pop
lcall
jno
pop
ficoms
xchg
mov
jbe
xor
jne
mul
movsb
fs
adcb
pusha
push
adc
mov
outsb
mov
imul
cmp
xchg
test
dec
hlt
cmpsl
dec
jmp
xchg
cs
add
add
divl
je
jo
mov
jb
fisubl
adc
cld
sub
dec
mov
sbb
jnp
xchg
push
ds
dec
add
adc
pushl
push
scas
arpl
xorb
cmp
jne
sbb
das
push
call
mov
pop
mov
adcb
lods
mov
sbb
jae,pt
mov
sbb
cmp
lods
and
adc
xchg
ret
pushf
cld
mov
into
outsl
push
das
dec
clc
imul
out
sbb
or
xor
adc
jecxz
jmp
fwait
dec
xor
adcl
push
jge
mov
pop
rol
std
adc
sbb
lea
adcb
mov
push
test
cwtl
orb
mov
adc
sbb
roll
jmp
add
pop
pop
mov
push
pop
insb
or
inc
leave
push
push
sbb
adc
adc
cltd
cmp
fstpl
lcall
fs
and
jmp
adcl
and
leave
cmp
in
mov
adc
mov
lea
sti
mov
add
popa
adcl
cli
dec
in
jno
cld
jp
pop
cmp
sbb
cmp
pop
pushf
push
cmpsb
adc
out
add
sub
shlb
out
dec
mov
dec
hlt
mov
xchg
pop
pushf
or
xor
jno
jbe
inc
repnz
iret
cld
fisubs
imul
lods
fs
outsl
xor
fld
orb
adc
pop
inc
jl
and
rol
sbb
jns,pn
sbb
repz
mov
stc
push
popa
xor
fildl
rcl
sahf
mov
shrl
shrl
jecxz
xor
adc
and
inc
loop
sub
mov
and
shl
mov
inc
lret
lods
mov
jle
lods
std
mov
loop
sbb
pop
jmp
pop
jecxz
pop
insl
jg
ds
lret
dec
shlb
mov
popa
js
fs
push
sub
rcrb
mov
mov
pop
jno
sub
hlt
and
test
push
dec
out
dec
pop
and
sahf
jns
into
cmp
and
sub
icebp
adc
inc
jl
mov
iret
cld
mov
ret
add
sub
pop
mov
jecxz
cmpb
cltd
in
stc
inc
popa
dec
int
stos
sub
push
xor
pop
imul
gs
test
fld
aad
and
sub
mov
push
mov
or
mov
adc
adc
xchg
in
xchg
out
rcrb
orl
jecxz
inc
call
and
mov
sub
popa
xor
mov
mov
fdivl
out
insb
pushf
xchg
mov
cmp
loop
push
dec
call
mov
xchg
add
movsb
cld
test
shl
fildl
mov
mov
das
cmp
mov
icebp
inc
into
xor
add
add
ds
cmp
jae
inc
loopne
xchg
dec
popl
xchg
jge
ds
mov
mov
pop
mov
jb
jb
push
outsb
jno
repz
gs
push
out
cs
or
push
shlb
scas
sbbb
ja
xor
jae
cmpb
in
push
mov
loope
int
out
insb
stos
fadd
add
aas
mov
mov
and
jae
xor
data16
lods
mov
hlt
dec
imul
repz
bound
js
iret
sub
repz
xor
repz
imul
dec
cli
mov
aad
in
jnp
and
cmc
ret
mov
pop
push
and
add
xchg
fcomps
jne
dec
mov
hlt
jb
jne
or
ljmp
rorl
ds
push
lods
pop
mov
repz
mov
mov
push
mov
jns
xor
rcll
repnz
cmp
out
jmp
lock
cmp
jae
stc
mov
fdivs
mov
scas
pop
cltd
jno
test
push
mov
and
cmc
mov
jmp
rcrl
popa
rorl
cwtl
cs
iret
pop
push
dec
clc
sti
sub
iret
mov
cmpsb
adc
push
je
push
mov
or
hlt
aad
dec
sbb
dec
push
inc
test
dec
dec
iret
cmp
dec
push
mov
inc
and
test
mov
or
cmp
imul
fwait
and
sbb
xor
lret
in
imull
xchg
xchg
jmp
jmp
mov
xchg
lods
push
stos
sbb
inc
cmc
sub
jbe
sub
mov
inc
add
mov
xchg
jle
xorl
mov
ret
pusha
ja
fstl
clc
cs
pop
add
cmpsl
lret
dec
fistps
lods
mov
mov
imul
sub
mov
in
inc
adc
push
mov
dec
mov
add
ljmp
mov
add
pop
insb
mov
mov
icebp
loopne
lds
sub
inc
mov
bound
inc
stos
push
aad
fcmovnu
mov
daa
push
std
fcoml
jecxz
mov
aas
xchg
add
stos
gs
push
or
inc
xchg
icebp
ss
adcb
rcll
or
add
rcrl
xchg
sbb
cld
sbb
sub
fldt
aas
sti
ror
jge
push
in
shrl
loopne
loopne
xchg
in
adc
jo
cmp
ret
fdivrs
mov
and
dec
popa
xchg
add
sbb
popa
pop
ja
xchg
lock
push
repnz
sub
cmp
pop
pop
jecxz
stos
mov
movsb
mov
mov
or
fcomp
pop
fwait
loop
lahf
cwtl
lcall
stc
inc
mov
mov
or
gs
imul
movsl
push
andl
aam
jp
and
lds
push
imul
daa
hlt
mov
push
adc
stos
insb
cmp
repz
mov
fimuls
add
dec
mov
jle
dec
in
push
mov
nop
fbstp
sbb
js
or
lods
shlb
ret
mov
std
dec
mov
or
lret
or
mov
or
ljmp
pop
int
addr16
pop
inc
leave
jmp
insb
ss
pop
and
sbb
js
je,pn
xor
nop
pop
mov
aam
xor
cli
psubusb
xor
ljmp
jg
cmp
leave
pusha
lcall
dec
enter
push
lret
xor
adcb
sub
data16
test
fdivrl
es
ljmp
mov
insl
fdivrl
mov
push
sub
sbb
repz
cwtl
xor
stos
negl
ja
adc
lcall
out
mov
mov
mov
and
jno
out
std
pop
and
cmpsl
cltd
mov
pop
push
call
xor
ret
in
cs
fldenv
push
add
pop
cs
cwtl
cmp
inc
inc
jmp
dec
jno
push
xor
inc
sarb
dec
js
sbb
enter
fldt
jnp
sti
repnz
jecxz
call
insb
xchg
mov
loop
leave
xor
jno
and
mov
pop
fs
jne
add
and
out
sub
fcomi
push
xor
ret
mov
inc
jge
push
hlt
clc
iret
daa
xchg
cli
fdivrs
popa
jno
push
dec
lds
outsl
and
adc
dec
jp
fdivrl
and
shrb
add
int
add
or
and
sahf
mov
mov
xor
xlat
or
xorb
mov
pop
insl
add
jno
sbb
std
stos
cli
cmp
adc
jno
mov
adc
out
scas
stos
jne
mov
cltd
pop
lods
xchg
mov
mov
popf
loope
shlb
mov
cmp
mov
leave
mov
jmp
js
int3
push
push
mov
cmp
mov
jmp
xchg
jecxz
repz
inc
jb
cmpsb
into
mov
jns
jecxz
dec
repnz
aas
mov
call
fldenv
adcb
mov
jl
test
stc
jbe
aas
ja
pop
cmc
test
out
outsl
rcrb
dec
imul
add
rcrb
fs
loopne
jnp
inc
es
ja
fcomps
das
xlat
or
inc
sub
sbb
nop
cwtl
xlat
stos
jl
sub
jb
bound
jl
xor
cwtl
mov
outsl
or
stc
mov
jge
pop
mov
xchg
test
aaa
cld
mov
mov
movsl
rcrb
lret
loope
into
jo
enter
dec
and
fsubl
add
rcrl
notb
sbb
inc
sub
dec
lods
test
les
js
mov
sub
xor
popa
jo
icebp
adc
cmp
mov
out
sbb
fldcw
xor
inc
ljmp
addl
xchg
push
cld
xor
aam
jnp
cwtl
fmulp
xor
out
jp
inc
imul
lock
pop
xchg
lret
popa
sbb
enter
mov
fdivrl
mov
cmp
xor
in
mov
jb
mov
sub
push
pushf
inc
lcall
xor
loope
stc
add
xor
sub
cwtl
sub
insb
cmpsb
push
xor
dec
fwait
out
cmp
xor
loop
adc
or
push
lcall
rcrl
repnz
stos
lock
test
lcall
or
mov
icebp
lcall
mov
sub
or
popf
adc
xchg
cmp
jno
mov
push
mov
nop
and
mov
ja
and
ud1
or
imul
sub
cmpl
jge
mov
mov
rorb
and
dec
punpcklwd
mov
insb
cli
adc
push
dec
ret
and
repz
fstpl
sub
negb
gs
dec
mov
icebp
stc
mov
fwait
lret
dec
push
ss
and
ds
mov
enter
xor
adc
lods
xlat
mov
sub
jg
int3
mov
push
dec
cwtl
aas
mov
xchg
adc
push
sbb
inc
out
in
lea
jno
sti
sbb
decl
add
inc
or
push
mov
cmp
mov
push
xor
lret
pop
lods
mov
pop
popa
or
cltd
iret
jmp
mov
in
and
and
je
adc
cmc
ds
and
push
mov
xor
cmp
xor
popa
pop
imul
cld
jmp
or
adc
loope
and
adc
test
out
aam
pop
mov
xchg
cmpsl
push
sbb
and
cmp
insb
fstl
sub
out
aas
dec
aaa
aas
into
dec
popa
or
xchg
xchg
mov
scas
add
xchg
pushf
or
test
inc
fstpt
push
sbb
pop
cmp
pop
jno
cltd
xor
out
js
int
and
mov
jns
clc
nop
and
pop
lods
in
xchg
nop
loop
les
mov
cmp
adc
jno
xchg
hlt
pushf
mov
dec
mov
mov
outsb
pop
xchg
neg
jmp
add
adc
mov
lea
cmp
les
loopne
mov
fcomi
cmp
cmpsl
mov
push
mov
cli
or
andl
leave
dec
orl
adc
notb
incb
jp
jmp
mov
popf
ljmp
xor
lea
stc
inc
es
ficompl
jbe
popa
dec
es
out
push
sub
add
cmp
lods
push
arpl
push
aaa
sbb
mov
xchg
fdivs
iret
int3
mov
mov
pop
dec
mov
xchg
mov
sahf
xor
dec
sarl
jecxz
sub
mov
imul
daa
enter
dec
cwtl
and
cli
in
cs
aam
sub
repnz
mov
movsl
idivb
push
lcall
cmp
lret
sbb
mov
mov
adc
sbb
dec
hlt
loop
push
mov
adc
mov
adc
add
std
mov
pop
dec
mov
jnp
pop
jbe
mov
and
lods
jl
pop
outsl
ret
imul
dec
mov
repz
popf
add
pop
pop
leave
mov
out
mov
adc
rcll
repnz
sti
inc
btc
sbb
mov
enter
xor
sub
push
sbb
les
lds
xor
cmc
cmp
add
cmpsb
jg
mov
js
dec
ret
inc
push
dec
mov
stc
inc
pushf
mov
inc
call
push
lock
dec
jbe
ret
cmpsl
push
xor
repz
popa
adc
xchg
push
test
sub
push
push
movsb
mov
and
push
lcall
add
cmp
fwait
cmpb
addr16
jmp
inc
mov
or
fsubs
cmpsb
ret
sbb
insl
daa
xchg
xor
lods
mov
jl
repnz
push
add
cmp
cld
push
xor
std
push
sub
jge
pop
cmpsl
mov
ss
movb
mov
xor
add
ret
push
fwait
loopne
aas
mov
xlat
jmp
in
cmpsb
xchg
mov
mov
jecxz
mov
lock
inc
add
mov
repnz
dec
xchg
add
imull
cmp
xchg
adc
rcr
sahf
push
and
cmpsl
mov
rorb
cmpsl
xchg
mov
sbb
xor
pop
popa
enter
out
xor
inc
pusha
ret
xor
mov
fldenv
mov
xchg
fistpl
xchg
push
mov
jae
movsl
mov
out
in
push
push
movsl
jnp
stos
mov
addr16
lcall
and
adc
stos
jns
daa
adc
mov
daa
test
cmp
adc
pop
xor
das
inc
clc
mov
cmpsl
test
mull
jno
test
scas
mov
fwait
lods
mov
cmpsl
aad
fimuls
dec
dec
xchg
ret
das
jno
push
add
rcl
jne
or
cmp
je
mov
mov
adcl
lret
sub
cmp
repz
call
push
cmpsb
in
mov
sub
pop
and
sbb
pop
fimull
add
cmpsb
xchg
or
in
push
dec
dec
mov
mov
outsb
mov
jecxz
loopne
xor
jb
sti
pop
cmp
inc
or
les
shlb
aaa
fstl
sbb
push
fsubrl
inc
mov
es
mov
mov
mov
inc
call
push
sahf
sbb
inc
lcall
aas
scas
aad
mov
aad
add
rol
test
aam
push
daa
cmpsl
scas
inc
mov
mov
pop
push
movsl
in
outsb
add
aad
lods
pushf
push
rcrl
in
inc
lea
in
adc
xchg
mov
lret
fistpl
mov
mov
xchg
aad
dec
mov
pusha
in
aam
cwtl
imul
in
and
and
test
bound
repz
out
in
sbb
push
dec
sbb
pop
dec
push
rclb
mov
popa
push
or
jle
jns
in
fs
repz
dec
mov
add
jne
int
adc
popa
bound
out
add
fldenv
out
mov
scas
add
ret
rorl
or
sbb
cmp
in
shl
and
push
xchg
sub
test
jle
mov
gs
dec
ja
pop
sub
inc
dec
jl
cmp
sub
mov
pop
inc
push
or
psraw
push
or
pop
and
dec
aas
sbb
xchg
jne
inc
rcrb
mov
fsts
jb
jle
or
ja
mov
xchg
push
mov
adc
or
adc
push
loopne
and
and
pop
mov
ret
mov
add
jmp
sbb
dec
inc
sub
ljmp
inc
in
test
dec
jl
leave
sub
ds
push
out
subb
insb
inc
sarl
dec
push
mov
xlat
les
sub
loope
lds
ljmp
iret
fldl
push
or
jo
mov
jg
popa
pop
or
movsb
mov
inc
outsb
inc
movsl
scas
push
int3
sarl
and
pop
xor
shlb
pop
push
inc
aam
xchg
scas
sbb
jl
add
sahf
lcall
add
xchg
loopne
xor
jge
les
xor
push
lret
shll
nop
sahf
push
and
lods
mov
out
xchg
cltd
and
outsl
sub
out
fs
imul
mov
xor
pop
clc
jp
adc
sub
jmp
repnz
pop
mov
and
cmp
push
push
and
xor
aam
cmp
dec
test
add
inc
aas
jo
adc
popf
push
mov
push
lds
jae
xchg
push
dec
mov
test
das
aad
or
pusha
test
arpl
loopne
idivl
inc
aam
repnz
ja
adc
jmp
das
popa
jno
sbb
jno
fst
xchg
jae
lods
sbb
aad
mov
adc
inc
inc
push
inc
les
int3
scas
jp
xchg
in
bound
cmc
fsubl
cmp
out
and
insl
add
ljmp
lods
pop
xchg
sub
sub
or
popa
sbb
mov
mov
cltd
leave
icebp
lret
shr
mov
pop
jne
mov
stc
mov
imul
int
fs
jp
pop
gs
cmpsl
add
fbstp
push
adc
fdivrl
sub
sbb
test
inc
aas
cld
fwait
ljmp
adc
mov
xchg
push
lods
aaa
ret
in
jmp
adc
sub
jecxz
es
inc
jmp
bound
fwait
jne
les
popa
cli
pop
insl
mov
aaa
dec
inc
movsl
jl
lahf
ja
lcall
test
das
push
clc
es
jnp
arpl
out
call
cli
xchg
psubd
sub
test
xchg
ret
loope
sub
fldt
cld
mov
stc
dec
out
lret
shld
mov
xor
in
xor
pusha
sub
dec
xor
lds
pop
and
xchg
adc
call
dec
adc
icebp
and
in
mov
sub
aam
dec
std
les
mov
sub
repnz
xchg
push
xchg
es
cs
inc
push
mov
add
jns
lock
in
sub
dec
pop
bound
mov
aad
cs
push
mov
sub
xor
movsb
jno
xchg
lcall
lret
cmp
inc
push
bound
lahf
ret
movsl
or
xchg
fnsave
cmp
incb
add
inc
iret
and
mov
outsl
movl
cltd
fstpl
add
das
pop
cmc
data16
inc
jne
bound
cmp
pop
jnp
pop
loope
dec
xchg
xchg
loope
loope
sub
dec
or
sub
cmc
and
and
fs
mull
push
mov
and
xor
mov
sub
ja
dec
sub
arpl
jnp
leave
pusha
push
jl
ret
inc
aad
pop
xor
pop
mov
pop
clc
leave
out
push
mov
bound
loopne
int
dec
inc
sbb
xor
into
lds
xchg
nop
and
je
lret
pusha
push
push
cmp
insl
test
int3
xchg
mov
sbb
insl
orl
cmp
aas
xchg
in
jns
pop
xchg
sbb
mov
add
fisttpll
mov
popf
in
push
aaa
xorb
mov
jecxz
shlb
and
ja
xchg
cli
and
mov
mov
lret
cmp
sub
add
push
inc
add
xor
nop
push
dec
dec
lahf
data16
mov
pop
out
sbb
mov
stos
pop
int
inc
les
lret
dec
sub
call
cmp
sub
in
mov
outsl
xchg
fisubrs
iret
data16
xchg
test
repz
mov
sub
push
out
or
adc
stos
fs
push
sbb
repz
dec
imul
xchg
repnz
js
cmpsl
mov
dec
or
xor
in
sbb
push
inc
cld
outsb
mov
push
xchg
mov
dec
push
mov
xchg
push
int
ret
add
inc
jecxz
loope
pop
push
mov
adc
stos
jne
in
lods
ret
sbb
data16
mov
fistl
mov
fst
aad
cs
mov
lea
lcall
push
rol
outsl
les
sbb
xor
es
jnp
sub
outsb
das
imul
in
inc
setg
push
push
icebp
adc
test
lcall
add
in
add
push
lods
lods
stos
xor
inc
mov
push
xchg
pop
scas
dec
nop
jmp
scas
dec
cmpb
stc
ss
cmpsl
sub
jb
xchg
sub
and
xchg
push
pop
daa
es
dec
test
mov
fldlg2
sbb
add
test
pop
or
pop
shll
pop
ja
stos
outsb
fistps
dec
into
mov
dec
test
test
xorb
mov
mov
bound
stos
mov
dec
push
dec
push
insl
outsb
jns
cmpsb
add
imul
mov
jbe
adc
movsb
cmp
adc
je
ljmp
mov
mov
cmp
jo
leave
push
sbb
dec
shlb
ljmp
and
enter
std
ljmp
jl
frstor
je
push
gs
jne
add
adc
jge
adc
jge
cmc
jo
in
and
cltd
lock
mov
cli
mov
or
sub
das
xchg
leave
sbb
out
shll
sbb
leave
inc
fsubl
pop
mov
stos
lods
pop
les
repnz
and
and
mov
jnp
loope
jbe
bound
test
sub
int
ja
lcall
inc
in
jmp
out
jge
mov
popf
inc
sub
fidivrl
iret
rcl
icebp
mov
mov
fsub
inc
push
and
xlat
popa
es
push
push
pop
or
cmp
sbb
out
es
ret
call
je
xchg
sub
cs
pop
sbb
xchg
fcmovnbe
or
cltd
adc
imul
icebp
add
push
test
and
add
div
sub
cmpl
and
loop
pop
inc
scas
loope
mov
sbb
adc
sbb
sbb
sbb
sbb
mov
addb
loop
lret
or
pop
sahf
inc
add
repz
xor
in
stos
movsb
cltd
mov
mov
mov
sub
lods
dec
adc
sub
dec
inc
sbb
add
iret
xor
mov
loop
dec
add
push
pop
xchg
and
ss
or
pop
sbb
fisubl
dec
fidivs
add
aam
outsl
mov
xlat
lcall
aaa
jae
lcall
fdivs
push
inc
cmp
cmp
pusha
call
sahf
out
lret
push
cwtl
xchg
stc
lret
mov
jmp
xchg
or
jne
inc
mov
jo
icebp
push
mov
pop
addl
add
xchg
mov
clc
pop
sbb
inc
rol
fs
jg
cmpsb
and
and
aad
lcall
xor
mov
out
pushf
sub
fwait
push
push
xchg
xor
xlat
mov
ss
mov
cwtl
adc
sbb
adc
rolb
pop
fldl
jmp
xor
pop
fbstp
arpl
movsb
sub
dec
xor
int3
stc
flds
js
out
dec
adc
test
or
les
int3
jecxz
out
or
pop
dec
push
outsl
es
push
dec
inc
repz
pop
and
out
pop
xor
pusha
repz
test
aas
cli
mov
push
jae
mov
out
pop
lods
pop
xchg
xorl
adc
push
xorl
data16
dec
sbb
je
xchg
jp
jmp
xor
leave
addb
ss
iret
adc
add
ja
aas
mov
out
cltd
hlt
cmc
cs
je
test
mov
popf
leave
mov
push
rorb
push
fs
ja
test
xchg
mov
imul
insl
lahf
mov
xor
pop
nop
pop
ss
mov
sub
ja
adc
pop
insl
ja
das
loopne
insb
xchg
fisubl
mov
je
stos
cld
dec
insb
cltd
call
das
js
out
push
mov
pushf
jns
test
xchg
push
imul
add
test
outsl
xchg
in
jmp
xchg
scas
push
push
push
cmp
scas
icebp
xchg
inc
cmp
inc
pop
pop
push
outsl
dec
or
nop
and
and
jmp
cmp
popf
mov
pop
outsl
roll
pop
and
push
pop
mov
push
dec
jo
push
rolb
cwtl
aam
xchg
xor
dec
jbe
sub
inc
dec
sbb
cmp
mov
cli
fwait
mov
fdivl
mov
add
and
cmpsb
popf
cmp
fsubs
jo
lds
inc
roll
jns
mov
push
mov
jns
loope
inc
stos
cmpsb
out
sub
inc
jbe
arpl
mov
pop
adc
ret
es
xor
push
in
dec
in
cltd
xchg
jmp
and
stos
outsb
jbe
daa
fldenv
pop
and
mov
in
ds
shrl
push
mov
mov
jmp
sbb
enter
js
lcall
jo
pop
or
pop
cli
inc
jno
adc
arpl
shlb
jnp
sbb
mov
pop
and
mov
xchg
push
mov
dec
sub
pop
push
repz
adc
pop
scas
inc
push
dec
push
test
jbe
sbb
sub
add
mull
xchg
push
aas
jg
push
sub
push
fwait
mov
cmpsb
scas
inc
hlt
xor
cmp
mov
fwait
sbb
daa
xchg
pusha
arpl
fldenv
lcall
xchg
cmp
add
or
mov
test
outsb
out
pop
iret
insl
xlat
push
push
mov
sbb
ljmp
xor
jnp
lcall
out
cmovb
mov
shl
cld
pop
lea
and
pop
subl
rcll
xchg
adc
fisubl
fwait
aaa
lret
pop
push
xchg
dec
lret
imul
scas
jo
push
ss
popa
mov
mov
xor
sbb
jl
addr16
aam
mov
dec
int
inc
xlat
sub
mov
aaa
mov
jmp
movsl
fistpll
sub
xchg
xlat
das
lea
inc
add
test
sub
adc
adc
insl
lahf
scas
xor
ljmp
or
cmp
mov
and
or
sbb
push
lahf
jbe
ret
inc
pop
aam
add
mov
cmp
add
dec
cmp
out
inc
xchg
js
cmpsb
adc
movsl
mov
cmp
ffreep
and
xlat
sbb
imul
aam
int3
adc
mov
cmp
call
dec
leave
mov
and
int
pop
jmp
jb
fsubl
xor
call
push
aam
mov
pop
cltd
xor
mov
addr16
dec
scas
mov
mov
dec
fsubrl
cmp
addb
pop
movsl
aad
and
in
or
inc
cmp
sub
dec
xor
push
ror
cmp
or
and
jno
loopne
mov
or
test
jbe
jno
jne
adcb
add
cmpsb
mov
push
pop
sub
push
into
lcall
imul
mov
jmp
and
sub
fwait
das
es
mov
std
push
fcoms
sarl
shrb
cmp
mov
shl
frstor
lcall
xchg
jne
jl
pop
ja
shl
jne
cmp
xor
outsb
dec
aam
push
inc
sub
mov
inc
call
fadd
xchg
incl
shll
add
xor
dec
stc
aas
fwait
pop
lods
adc
mov
ljmp
add
adc
in
or
xchg
fsubrs
cld
push
adc
clc
icebp
push
out
cmc
or
lahf
data16
scas
inc
xchg
sti
sbb
xor
cmpb
lahf
mov
add
push
out
insb
lret
repnz
test
hlt
mov
mov
sub
mov
out
shll
xchg
insb
xchg
repnz
out
xor
movsb
add
mov
sub
and
dec
xchg
sub
call
test
mov
xchg
fcmovu
jns
in
std
enter
sbb
pop
mov
aad
in
scas
push
mov
mov
fldenv
and
xlat
jnp
sysenter
sub
fidivs
adc
adc
dec
inc
xchg
rcrb
popa
mulb
das
repnz
mov
std
lods
outsb
pop
and
sub
insl
loopne
mov
mov
ret
pop
mov
ret
bound
cld
and
les
lock
out
outsl
cmp
mov
mov
adc
jge
cmp
xor
sbbl
adc
jae
fstl
inc
mov
adc
ja
dec
mov
jecxz
add
jp
fsubl
sbb
cwtl
jecxz
sbb
mov
inc
fdivl
and
lret
or
and
mov
mov
add
mov
scas
mov
mov
ljmp
add
or
dec
jl
aas
arpl
add
mov
mov
fs
mov
cld
ficoms
pop
repnz
xchg
adc
shlb
aam
fcomp
call
pop
negl
sbb
and
push
andb
sahf
movsl
xor
imul
dec
cmp
outsl
adc
sti
je
iret
stos
mov
ljmp
call
and
cmp
loope
int3
stc
into
imul
ret
repz
jns
leave
and
icebp
enter
and
pop
or
cmp
pop
dec
shll
loopne
push
push
or
aaa
xor
push
notl
fmull
sub
shlb
rorl
xor
and
push
je
push
pushf
mov
add
mov
pop
lock
repz
mov
fistpll
ljmp
mov
clc
out
outsl
jl
filds
imul
fldcw
sbb
push
add
dec
je
cmp
dec
xor
pop
push
sub
jns
jmp
sub
outsl
sub
pop
push
xchg
xor
mov
and
pop
push
shl
inc
popf
mov
rorb
jae
push
adc
sti
pushf
addl
mov
jge
xchg
adc
push
ficomps
stos
popa
sbb
mov
aas
jb
adc
lahf
fmuls
testb
js
movsl
sbb
pop
pop
mov
mov
dec
xchg
inc
xchg
cwtl
mov
les
xchg
xor
fiaddl
je
ret
xchg
xor
stos
pop
jnp
call
ss
dec
mov
inc
stos
ret
kmovb
mov
pop
xlat
loope
pop
rcrl
movsb
push
pop
push
push
mov
sahf
mov
push
sbb
into
and
jmp
enter
fwait
pop
sub
fistl
and
test
cmpsl
push
jae
cli
mov
add
xor
pop
add
dec
es
dec
sub
inc
sbb
lods
aad
add
mov
aad
test
add
ljmp
fcoms
rcrb
or
push
aas
addb
stc
xor
inc
pop
mov
cmp
outsb
dec
hlt
sbb
jle
pop
movsb
push
mov
fldcw
push
loope
xchg
jl
stc
xchg
mov
sub
sub
inc
pop
stc
imul
push
mov
dec
sti
cwtl
mov
ljmp
xor
repz
inc
repz
in
ds
adc
mov
mov
xor
aad
push
adc
pop
jnp
xchg
cmpsb
push
or
sub
jmp
mul
fmuls
in
push
pushf
mov
hlt
icebp
pop
mov
les
sbb
push
dec
popa
dec
pop
dec
or
jge
jmp
jns
jle
pop
jge
mov
inc
push
mov
xchg
mov
dec
rol
or
mov
icebp
fisttps
sub
jg
shlb
mov
rcrl
jp
insl
outsb
ret
ret
imul
into
push
jp
jg
or
mov
mov
adc
aaa
jp
mov
cmp
sub
int3
shrb
negl
rcrb
xorl
scas
adc
outsb
adc
gs
mov
jp
adc
add
in
xchg
lds
aaa
in
xchg
or
repz
add
nop
rcll
repnz
repz
into
faddl
and
cmp
pop
pushf
push
loope
cmpsb
cmp
test
and
std
orl
mov
jge
cmpl
pop
loopne
iret
icebp
pop
and
in
je
cmp
xchg
adc
sub
push
ret
stos
notb
jae
inc
sbb
dec
inc
xlat
sbb
or
shlb
gs
lock
fistpll
imul
in
sub
sub
sub
sbb
aaa
xor
sub
mov
call
test
scas
pop
movsb
js
mov
in
out
xchg
notl
cmpl
dec
shlb
xchg
jmp
fucomi
add
sub
push
xor
add
rol
sub
popf
movb
mov
out
fnstcw
mov
out
mul
jl,pn
cli
shrb
mov
fucomip
addr16
pop
cmp
pusha
mov
loopne
inc
mov
xchg
or
cld
mov
stos
daa
sti
in
jp
jge
icebp
cmpsl
sbb
mov
mov
inc
lret
out
inc
std
mov
insl
adc
test
in
jg
mov
inc
cld
adc
xlat
xor
nop
mov
add
leave
inc
cmpsb
pushf
stos
xchg
inc
nop
out
xor
loope
inc
push
pusha
xlat
pop
shlb
and
inc
pusha
adc
jb
aad
out
sub
cli
es
imul
decl
and
cmpsl
lret
shll
pop
repz
adc
xlat
pop
sbb
push
xchg
xlat
das
scas
dec
ss
imul
inc
icebp
pop
mov
stos
repz
and
mov
sbb
cwtl
stos
fwait
stc
fsts
xor
sub
fisubrs
inc
fisttpl
inc
mov
mov
test
imul
out
push
fdivr
jle
pushf
push
xchg
jle,pt
add
adc
popf
xor
mov
and
inc
cld
mov
fmuls
mov
push
das
mov
jb
lea
movsb
push
icebp
out
push
lods
mov
shl
std
and
push
pop
dec
sbb
cwtl
cltd
scas
icebp
pusha
pop
in
jecxz
mov
adcb
xchg
movsb
or
mov
jb
out
xchg
sub
fists
xor
popf
xor
movsl
mov
outsl
cmp
into
repz
test
nop
dec
cmpsl
shrb
lea
mov
mov
fs
add
cmp
orb
push
negl
push
push
or
scas
rcrb
and
ljmp
and
cmp
or
cmp
loope
outsl
inc
ret
xchg
dec
mov
cmp
scas
pop
test
sbb
cmc
xchg
jge
push
sub
rcl
jne
fidivl
mov
mov
pusha
call
mov
add
jl
cli
pusha
pop
cwtl
sub
mov
ja
jo
clc
push
shlb
mov
mov
popa
push
cmp
sub
pushf
adc
fs
mov
mov
xchg
aaa
popf
jno
fiadds
negb
js
pusha
mov
xorb
cmc
cs
pushl
dec
add
repnz
in
jae
mov
hlt
push
pop
test
cmp
ljmp
inc
add
mov
mov
inc
sbb
jg
testl
sbb
dec
inc
jb
jg
inc
pushf
inc
lret
adc
dec
push
bnd
sbb
nop
mov
mov
in
int3
dec
push
int
rcrb
rcl
ja
cmp
fstl
stos
xchg
dec
xor
pop
mov
imul
push
out
adc
pop
imul
inc
push
jp
pusha
pop
fisubl
mov
rcrl
add
cmp
arpl
popa
xor
and
sub
shll
loope
fadd
pop
jae
add
mov
mov
push
add
std
cltd
and
dec
mov
xchg
mov
aad
iret
xchg
stc
and
mov
lea
jecxz
dec
push
in
pop
and
cmp
adc
sahf
xchg
bound
mov
inc
or
or
pop
pop
mov
call
lods
pop
mov
into
ja
jb
push
ret
adc
test
xchg
adc
ret
scas
adc
fsubs
pop
pop
rol
push
pop
insb
pop
or
jae
cmp
lret
frstor
idivb
ljmp
rcrl
inc
out
cmp
jp
ljmp
fwait
and
iret
sbb
xchg
out
inc
jns
popf
sub
iret
jge
repnz
jbe
lods
adc
in
add
test
fidivrs
inc
pop
insb
mov
popf
imul
daa
add
add
fwait
shll
iret
imulb
jno
dec
pop
inc
pop
jge
and
insb
push
daa
sbb
cmc
push
dec
inc
das
cwtl
inc
icebp
jb
sub
divb
dec
add
icebp
cmp
jno
inc
lock
jle,pn
pop
int
fcomp
cwtl
iret
cwtl
pusha
cmp
int3
hlt
shrl
sub
popa
gs
inc
pop
sbb
inc
xchg
sbb
mov
sub
and
out
jmp
adc
or
ret
jnp
push
xorb
ret
xchg
xor
aam
lret
xor
fisttpl
scas
mov
lcall
cld
repnz
mov
inc
sbb
mov
jmp
jl
sbb
sub
and
insb
das
jmp
pushf
jge
fcom
mov
mov
push
sub
mov
jecxz
xchg
in
cmpsb
popa
lea
sti
sub
addr16
and
scas
enter
outsb
call
cmpl
pop
cmpsb
jns
ss
xor
jl
xor
cwtl
xchg
mov
lcall
cmpsl
dec
call
xcrypt-ecb
cmpsl
mov
sub
cmp
call
cmp
fnstenv
xor
dec
sub
or
dec
gs
in
push
push
mov
and
jne
cmpsl
aam
mov
shlb
fistps
push
or
pop
adcb
cmp
cli
sub
dec
fsubl
xchg
dec
jl
ja
mov
lahf
scas
xor
jne
mov
jb
mov
dec
xor
nop
dec
pushf
shll
add
es
and
sub
push
inc
inc
cmc
xor
cmp
jmp
push
sub
push
fisubrs
cmp
aaa
push
add
jmp
xchg
lea
jb
sub
inc
lret
jnp
fxch
cmp
test
fistpl
mov
fnstsw
neg
out
fsub
mov
in
jecxz
sahf
pop
mov
roll
stos
mov
mov
test
jno
and
ret
mov
loope
mov
dec
sub
aam
fs
sub
cmpsl
jno
gs
and
movsb
mov
push
xor
mov
mov
ror
enter
test
add
push
fisubl
std
push
and
cltd
test
addr16
pop
push
cli
add
jb
int3
addr16
add
icebp
inc
shr
fisttpll
pop
rcrl
xchg
movsl
adc
ret
jp
inc
inc
mov
mov
cmpsb
pop
stos
cmpsl
popa
sbb
scas
and
jecxz
jb
push
xchg
fwait
add
in
divb
cmpsl
std
cmc
in
xor
stos
xchg
dec
adc
pop
int
push
inc
xchg
leave
dec
scas
loopne
mov
mov
xor
lret
dec
adc
jno
cmp
idivb
pmullw
arpl
daa
pop
pop
outsb
jmp
sbb
sub
mov
out
neg
adc
cs
cmc
in
dec
dec
dec
sub
pushf
popf
enter
insb
cmp
loop
or
ret
lahf
loop
pop
test
xor
jp
inc
push
push
or
cmp
add
bound
or
lock
mov
xchg
push
into
or
add
mov
dec
fidivrs
mov
inc
in
daa
je
mov
inc
mov
or
stos
stc
pop
faddl
in
mov
out
fs
dec
andb
sbb
pushl
jbe
jae
jns
adc
out
sbb
mov
dec
stos
adc
push
in
out
and
mov
je
and
fimuls
jle
pop
lods
lcall
mov
xchg
inc
push
jmp
mov
test
mov
lret
or
andl
cmp
and
je
loopne
sub
fcomps
xchg
jp
or
xor
push
nop
adc
lods
les
je
jmp
mov
cmc
cmp
mov
sub
fbld
in
movsl
sbb
imul
cmp
mov
pop
mov
pop
add
mov
mov
jo
scas
adc
mov
xchg
mov
lret
or
sarl
enter
mov
sbb
sarl
push
sub
pop
in
cmpsl
and
lds
stc
mov
bnd
test
ljmp
jae
outsb
pop
punpckhdq
orb
xor
popf
nop
pop
mov
rol
push
xlat
dec
insl
sub
mov
jle
xor
fmul
xor
jno
push
cmpsb
mov
pop
push
xchg
into
jbe
cmpsb
mov
les
lods
pushf
mov
mov
rol
or
imul
push
repz
jmp
jle
inc
out
out
ret
inc
mov
or
cmp
std
iret
inc
scas
push
mov
push
jbe
add
or
lret
pop
imul
js
pop
pop
cwtl
dec
add
out
shlb
es
mov
inc
pop
lea
adc
or
inc
movsl
insb
inc
xchg
aam
add
xchg
testb
not
testb
jnp
xchg
and
lret
lea
mov
pop
xchg
xchg
inc
pusha
test
bound
in
lahf
jbe
out
stos
ljmp
jae
jl
mov
cli
insb
pop
rolb
dec
lock
sbb
mov
js
clc
inc
xchg
mov
pop
popf
movsb
gs
sbb
inc
shrl
xchg
cmpl
lret
cltd
adc
xor
rol
cmc
cltd
cmpsl
xor
cmpsl
or
orl
xchg
pop
pop
pop
sub
fwait
pushl
cmp
lcall
int
les
push
mov
sbb
mov
cmp
jnp
enter
ret
and
pop
icebp
jge
pop
mov
cli
mov
jle
repz
out
push
shrb
pusha
lret
and
dec
or
or
and
xorb
sub
movsb
add
bnd
sbb
push
jge
add
sub
imul
fstp
xor
sbb
xor
dec
pop
jno
aaa
cmp
pop
xor
stc
xor
fbstp
mov
inc
fwait
sbb
test
sub
sti
mov
cmp
imul
dec
jb
dec
stos
mov
and
push
ret
popf
cltd
push
call
mov
adc
mov
sbb
jge
mov
cmp
pushf
insb
jl
pop
mov
pop
gs
add
dec
pop
clc
in
aas
in
mov
push
cmpsl
orl
addr16
and
cmp
clc
lea
mul
dec
gs
std
jle
and
mov
pop
test
or
dec
sbb
cmpsl
dec
push
sub
push
ret
cmc
pop
xchg
sbb
mov
xchg
sarl
dec
scas
pop
aad
aam
cmpsl
and
jo
decb
or
enter
mov
imul
cltd
push
leave
ret
push
stos
adc
jnp
adc
mov
xor
mov
inc
fdivr
xor
lret
add
jmp
loope
aad
ljmp
das
mov
pop
rep
mov
cmpsl
mov
add
ds
push
fisubrl
shll
pop
das
cmc
sahf
pop
jne
mov
cmpb
add
adc
adc
mov
dec
sarl
das
jl
outsb
add
loop
mov
jmp
bswap
dec
cmp
pop
add
jl
dec
out
test
movsl
sbb
roll
dec
and
jecxz
xor
fucomp
in
mov
popf
gs
cli
aam
ljmp
mov
in
stos
inc
es
inc
out
jmp
dec
pop
cmpsb
cmp
das
call
mov
and
lods
add
es
out
mov
ljmp
insb
add
push
push
add
add
js
in
and
add
pop
insl
test
mov
aaa
xchg
stc
imul
dec
mov
sub
push
push
test
and
inc
and
into
shlb
insb
and
call
scas
or
fiaddl
dec
mov
xor
adc
lods
cmc
mov
stos
out
pop
pop
adc
ljmp
pop
cmp
pop
das
jno
or
or
lods
add
out
jno
pop
pop
scas
js
pusha
lcall
adc
xor
mov
not
fs
rolb
xor
les
jg
cmp
xchg
or
push
fisttpll
imul
or
je
sarb
dec
ds
adc
sti
inc
pop
xchg
ds
js
dec
addr16
or
and
std
xor
into
dec
aas
jns
fidivrl
loope
cmp
and
add
out
ficoms
and
push
ret
inc
imulb
inc
in
fldl
adc
sbb
orb
mov
cmp
push
addl
imul
imul
pop
mov
mov
xor
mov
mov
test
cmp
das
movsl
mov
stc
icebp
in
imull
es
jae
and
inc
lock
jp
rcrb
inc
test
rolb
fisttpll
in
pop
mov
test
inc
xchg
sbb
cmp
rcr
push
inc
xchg
pop
xchg
dec
jmp
in
adc
cmc
mov
or
andb
and
aam
gs
and
adc
sub
ss
into
or
lret
jbe
and
clc
lds
jae
rorb
rolb
mov
ret
push
lahf
and
in
repz
cmp
xchg
mov
pop
insl
pop
push
sahf
pop
repz
nop
test
stc
je
sub
adc
aad
sub
dec
orl
mov
scas
aas
repnz
insb
lods
test
inc
push
out
scas
in
flds
das
dec
pop
push
pop
daa
adc
jg
cmpsl
push
popa
add
push
daa
sbb
or
shlb
and
lds
pushl
lcall
and
cltd
int
pop
cmp
cmp
mov
rcl
and
dec
mov
dec
dec
sbb
xlat
fildl
dec
popf
jno
cmp
add
inc
jge
or
test
cmp
roll
bound
xchg
push
cmc
lods
inc
jmp
pusha
sbb
sub
xchg
test
jo
aas
sub
popf
push
or
jp
fs
or
inc
cmp
push
jno
mov
bound
mov
daa
popa
or
rep
mov
push
cmc
and
shlb
push
scas
jmp
add
push
repnz
movb
push
or
lcall
inc
mov
aad
faddl
sbb
cli
mov
fisttpl
pop
mov
sub
mov
and
test
pop
clc
xor
xor
ljmp
push
test
fstps
std
outsb
mov
out
or
push
lret
and
mov
sbb
sub
pop
add
mov
cli
enter
nop
dec
pop
bound
test
mov
push
insb
cmpsb
pushf
outsl
dec
ret
daa
push
cmpl
adc
mov
xchg
imul
into
movsb
sbb
dec
lock
fildll
adcb
push
fldt
sti
push
inc
cld
imul
filds
sbb
cmp
ds
cmp
ror
adc
test
fnstsw
xchg
lods
push
bound
or
fwait
jne
sahf
add
in
out
mov
inc
data16
or
push
fdivrs
mov
xchg
shl
jmp
sub
out
mov
ss
divb
cs
lds
inc
cmp
jecxz
shll
clc
jl
push
sub
idivl
mov
shll
jl
int
adc
xor
aas
sub
jb
ss
fidivs
or
js
xor
icebp
pop
or
clc
jns
xchg
aad
sbb
lret
and
cwtl
lock
addr16
rclb
insl
gs
push
or
dec
mov
mov
push
test
rol
push
dec
pop
mov
andl
in
add
sbb
sub
adc
and
call
or
push
fcomps
jge
out
push
and
cmp
pop
xchg
outsb
lret
repz
dec
lcall
add
cwtl
ror
das
fistps
cmpsb
stos
jecxz
push
idiv
out
jle
jle
jge
jmp
push
and
leave
ljmp
loopne
imul
in
adc
clc
mov
jge
jmp
pop
roll
pop
out
jno
mov
push
lods
ljmp
nop
push
cmp
adc
pop
mov
pop
pop
mov
je
jge
movsb
lea
add
jns
pop
movsl
cmpb
mov
push
movsb
pop
mov
cmp
jmp
jge
cmp
rclb
shll
push
add
inc
cmp
xor
mov
movsl
sub
sub
jecxz
xor
jecxz
cwtl
repnz
sub
add
movsl
loop
imulb
mov
sbb
jnp
cltd
jnp
mov
lret
mov
loopne
roll
xor
repnz
cltd
rclb
loop
jg
cld
loopne
out
inc
stos
cwtl
je
loopne
pop
lods
hlt
mov
popa
pushf
outsl
push
std
stos
fdivrl
sbb
mov
lret
jne
mov
mov
and
out
dec
or
inc
push
mov
push
imul
mov
icebp
dec
sbb
add
roll
xchg
inc
cmp
fiadds
sbb
icebp
sbb
negb
xor
sub
ret
ret
xchg
jae
jo
xor
aas
cmpsl
shlb
mov
push
lcall
dec
jbe
in
fsubrs
dec
call
jg
and
or
movsl
push
cmp
sbb
dec
repz
push
xlat
les
push
ret
or
movsb
int
sub
fcmove
mov
fstl
pop
mull
insb
or
fsubr
sbb
ret
mov
push
mov
pop
gs
lret
xorb
and
pop
inc
mov
jmp
fs
in
push
push
pop
adc
inc
cmp
xchg
xchg
adc
out
push
xor
pop
xchg
sbb
fs
loop
rcll
roll
or
xor
outsl
lret
push
add
inc
add
lret
mov
inc
filds
std
mov
push
imul
xchg
jbe
dec
addb
loope
test
add
ja
ja
or
pop
jp
lds
mov
lahf
mov
iret
nop
scas
cmp
es
cmp
push
sub
inc
push
cwtl
cmp
aad
sub
mulb
lcall
ds
mov
fs
sub
mov
mov
or
addb
and
sub
sub
imul
xchg
lea
jns
xchg
mov
popf
std
cmp
jecxz
push
and
push
call
mov
std
mov
xor
ja
sbb
pop
iret
aad
sbb
sbb
mov
sbb
leave
rorb
inc
clc
pop
addr16
lahf
call
cmc
pop
je
faddl
mov
inc
notb
mov
sub
mov
loopne
mov
in
mov
xchg
sbb
ror
mov
mov
adc
sbb
inc
fistpll
add
pop
iret
xchg
pop
test
dec
mov
loope
add
fsubr
push
mov
mov
sub
nop
lds
mov
mov
ja
push
outsb
out
and
arpl
mov
jns
sub
jle
sub
fbstp
jmp
lods
divl
push
imul
insl
fildl
mov
lret
cmpsl
jmp
dec
xchg
call
jno
mov
lcall
jnp
xchg
mov
test
mov
arpl
add
xchg
into
cmp
xchg
xor
shll
cmp
stos
push
xchg
in
and
in
clc
insl
insl
mov
movsl
bound
pop
adc
mov
aaa
lods
pushf
pop
dec
loopne
imul
loope
jle
addr16
xor
lods
mov
imul
jae
lcall
adc
jge
out
iret
push
movsl
add
mov
or
inc
mov
out
insb
mov
mov
xorl
sub
jne
int3
xorl
dec
mov
cld
push
ss
or
test
into
inc
inc
adc
mov
loop
fisttpl
scas
ret
in
xchg
ss
xchg
dec
xchg
and
insl
inc
call
mov
iret
push
push
aam
push
mov
icebp
stc
xor
das
bound
pop
pop
sti
in
push
mov
xchg
scas
xchg
adc
mov
xchg
inc
add
enter
xchg
in
cs
inc
aas
adc
push
xor
lods
xchg
pushf
loopne
shll
out
addr16
cmp
aaa
loope
push
in
and
repnz
scas
fs
add
adc
movsb
mov
cld
notb
and
add
psrlq
adc
in
xor
add
fcmovbe
pop
add
push
call
mov
js
sbb
aad
in
adc
dec
mov
sbb
push
fs
dec
inc
roll
push
sub
lret
and
data16
cli
icebp
not
in
sub
stos
icebp
sub
sbb
inc
testb
push
test
pop
push
jge
mov
shll
cmp
clc
inc
xlat
push
mov
dec
movsb
sbb
mov
inc
jns
cwtl
insb
sti
sub
mov
dec
icebp
sti
pop
es
pop
mov
rorl
es
jns,pt
repnz
sub
repnz
negb
rcll
sub
insb
push
es
xor
sub
lock
jecxz
in
inc
xchg
ja
sub
push
in
cs
repnz
or
cmpsb
mov
jnp
ret
fists
jnp
and
sub
movsl
and
imul
add
pop
inc
lds
das
xchg
or
xor
out
push
mov
sub
and
mov
push
xchg
pop
xchg
push
int3
xchg
fistpl
outsl
xchg
adc
jne
lret
out
cld
mov
push
stos
cli
lods
outsb
stos
cmc
stc
cmp
dec
int
inc
jle
mov
cmc
fwait
cmp
in
aam
mov
push
and
add
jecxz
dec
scas
adc
adcl
push
sub
iret
push
sub
mov
adc
push
inc
adc
mov
out
mov
pusha
push
andb
cmp
pop
inc
xor
pop
mov
cltd
or
test
arpl
jbe
pop
in
mov
es
fists
lret
mov
insl
lods
roll
adc
mov
les
arpl
cs
add
lods
or
pop
fdivl
scas
inc
add
add
pop
repz
movsl
xchg
mov
scas
outsb
pop
stc
mov
add
cmc
into
scas
insl
inc
cmp
pop
xchg
ss
sbb
xor
js
xor
repz
jb
ja
add
repz
pop
repnz
fildll
dec
in
pop
ret
sti
loope
scas
cmpb
cli
push
insb
orl
lods
mov
cmp
decb
xor
fdivl
xchg
pop
pop
jcxz
decb
sbb
cld
mov
mov
push
fcoml
aad
xchg
and
ds
fstps
xchg
in
jp
les
cmp
pop
bswap
int3
sub
movl
stos
or
dec
pop
or
mov
imul
add
jne
xchg
push
jne
fadd
mov
fwait
xor
inc
xchg
bound
push
mov
add
or
sbb
loope
add
sete
cmp
in
movsl
fwait
lahf
aaa
pushf
cmp
adc
ljmp
test
je
aas
jge
cmpsl
push
icebp
cmp
xlat
js
push
jmp
jnp
inc
mov
mov
sbb
or
dec
cmp
sbb
mov
cmp
jnp
lods
and
cmp
fldl
xchg
mov
mov
push
add
fs
push
ficoms
push
cwtl
jle
cs
mov
in
decl
jg
clc
lret
jmp
mov
sbb
pop
dec
or
std
cmp
lods
ja
in
ds
sbb
repz
out
das
adc
mov
dec
push
adc
in
jge
repnz
aaa
add
xlat
and
out
add
fdivrs
xor
sub
pushf
jmp
and
jl
int
xorl
stos
inc
xor
push
mov
hlt
mov
int3
xchg
adc
inc
lds
ficomps
and
push
icebp
jns
popf
bound
and
inc
jb
push
sub
aad
mov
mov
pop
movsl
xor
jmp
mov
into
xlat
xor
outsl
cmp
mov
insb
xor
movsb
mov
out
jbe
clc
add
flds
mov
add
cmp
lea
push
adc
add
fmull
mov
shlb
sbb
sbb
mov
ficompl
in
cmp
call
daa
clc
ret
adc
cmp
adc
stc
btrl
sub
call
sub
xchg
stc
in
scas
mov
pop
push
test
cmp
fs
dec
scas
movsb
fisubrs
sbb
adc
xchg
mov
insl
in
mov
popa
aas
sbb
in
inc
sub
fld1
inc
cmp
call
push
inc
enter
mov
repnz
fimull
divl
icebp
push
inc
sbbl
shrl
jns
out
cltd
ret
stos
rclb
jae
ds
inc
dec
in
xlat
push
or
sahf
push
push
lahf
test
pop
sub
mov
mov
loope,pt
sarb
outsl
adcl
fldl
cmpsb
in
jge
xchg
mov
sub
fistl
cli
and
daa
xlat
jecxz
jle
pushf
adc
movsl
out
ud1
jp
scas
mov
outsl
cmp
push
movsl
shll
or
popf
xor
add
pusha
xor
cmp
sub
cmp
mov
or
inc
fxch
cli
ljmp
das
or
call
ret
inc
xchg
mov
stos
xchg
test
sub
dec
sub
test
stos
jecxz
jmp
mov
add
xchg
inc
cmpsb
arpl
sbb
and
test
out
dec
or
push
shl
and
xchg
push
mov
or
mov
in
addr16
ljmp
cmp
mov
xor
ljmp
aaa
mulw
into
cld
mov
inc
bound
jb
jo
notb
xchg
add
add
je
cmpsl
push
ret
or
pop
sub
pop
in
jg
dec
and
iret
test
test
pop
lea
or
mov
mov
ss
fdivl
ja
add
sub
aas
push
cld
cltd
adcb
insb
jl
pop
shrb
sub
jecxz
or
jnp
xlat
les
outsb
cld
std
xchg
push
dec
mov
fdivr
nop
adc
mov
in
mov
ret
adc
pop
dec
stos
aad
aas
mov
in
neg
outsb
lret
sbb
arpl
mov
cmc
cmp
xor
mov
pop
stos
cmpsb
pop
arpl
movsl
cmp
mov
outsl
jle
les
stos
jno
inc
xchg
dec
pusha
jb
gs
pusha
inc
mov
jecxz
movsb
pop
sbb
lea
push
test
lds
in
ret
push
aas
push
shlb
jp
inc
nop
inc
mov
int3
in
es
loop
in
push
movsl
test
pop
insl
dec
and
xor
mov
jle
dec
insb
jns
and
xchg
int
pop
rorl
push
movsl
sbb
fiadds
pop
addr16
mov
inc
loope
fcmovbe
pop
xchg
mov
or
lahf
and
pop
cmp
fisttps
mov
mov
pop
lahf
jle
pop
sub
jns
jo
adc
sbb
test
mov
fnop
in
lcall
mov
and
repz
adc
mov
sbb
mov
shl
sbb
popa
xchg
movb
cli
cmc
out
sbb
fisttpl
loope
mov
dec
dec
push
cs
sub
test
lds
nop
je
mov
mov
int3
scas
adcl
popa
cmp
xlat
ficomps
ret
mov
test
mov
enter
adc
mov
or
jo
add
out
and
pushf
cmp
mov
jp
cmc
js
add
xor
pop
int
enter
push
cmp
mov
inc
and
mov
or
nop
push
loopne
mov
rorb
push
mov
scas
cmpsb
jg
lcall
lock
les
lods
jle
inc
pop
inc
cmp
xchg
outsb
and
mov
into
bound
adc
add
mov
mulb
and
insb
pop
push
mov
push
pop
pop
mov
mov
lods
mov
push
pop
scas
mov
fisubs
push
jl
stc
lods
bound
jp
jne
or
fwait
push
fwait
cmpsb
mov
ficomps
hlt
dec
das
repnz
sub
jo
bound
shlb
int3
xchg
xchg
dec
add
sub
aam
adc
inc
push
adc
inc
cld
jno
ss
lahf
lret
mov
push
out
lahf
cmpsl
adc
es
aas
push
push
clc
push
sub
xor
inc
sti
jmp
jae
rol
push
iret
adc
pop
mov
dec
or
out
and
mov
xchg
pop
xor
stc
and
mov
sbb
mov
cwtl
mov
dec
ret
mov
ret
or
aaa
imul
movsl
push
cmpsl
incb
adc
jmp
mov
xor
mov
addr16
lea
pusha
push
inc
xchg
popl
mov
mov
cmp
xor
push
das
jne
das
pop
loop
cmp
bound
dec
ss
repz
push
jge
lcall
mov
mov
push
push
jge
inc
pop
sar
xchg
cs
inc
divps
xor
push
ljmp
mov
jne
cmp
rcl
push
xchg
lods
sbb
test
jo
dec
in
fsubr
jne
repnz
stc
ljmp
and
lods
or
or
push
les
mov
ret
add
pop
inc
fimuls
xchg
outsb
jnp
sbb
roll
nop
fwait
shrb
jecxz
aad
sahf
or
or
lcall
inc
push
inc
push
shll
rcll
sbb
mov
sub
pop
mov
or
sti
cmpsl
mov
push
cmp
gs
or
mov
ja
push
inc
push
xchg
cmp
mov
xor
push
cmp
nop
mov
not
xor
pop
xorl
loope
into
sub
fstl
outsb
push
iret
loop
aaa
mul
int
jb
sub
sbb
cmc
push
loope
shll
es
xchg
stc
cltd
icebp
or
test
mov
jbe
adc
lods
and
lods
mov
sbb
inc
sbb
pop
fstps
sbb
call
mov
andl
in
aas
mov
adc
xor
push
addr16
fsubrs
sbb
mov
jb
mov
js
dec
sub
jecxz
aaa
out
jo
or
fsts
cld
and
fdivr
outsl
imul
in
add
jle
jne
icebp
gs
inc
icebp
xor
sub
in
jge
and
fcmove
rcll
out
mov
enter
jne
sbb
fdivs
clc
inc
dec
xor
xor
and
mov
pop
mov
pop
mov
in
es
or
add
add
ss
inc
xchg
adc
jnp
out
xchg
outsb
in
pushf
mov
cmp
fwait
lret
cmp
mov
xor
mov
jb
xlat
repz
shll
jae
fstpl
test
flds
jp
xchg
cli
and
adc
or
and
mov
cmp
lahf
fst
and
fnstsw
adcl
mov
push
xor
push
adcb
inc
imul
jns
inc
add
fmuls
xor
sbb
dec
xchg
enter
pop
lret
sbb
stos
cli
mov
cmpsl
lods
push
lods
and
iret
out
inc
cmp
inc
sub
pushf
ret
fstl
lds
jmp
jg
loopne
pminsw
in
push
addl
push
pusha
les
in
cmp
or
jo
fldcw
push
cltd
popa
aad
pop
cmp
adc
mov
mov
test
xor
clc
or
xchg
lds
sbbb
pop
ret
mov
nop
pop
es
cmpsb
fcompl
pop
outsb
int3
or
stos
cmp
out
mov
mov
stos
sub
xchg
mov
subb
leave
mov
enter
test
stos
cmc
pop
cmp
psubq
je
fnstenv
dec
std
xchg
pusha
xchg
mov
mov
pushf
into
xlat
shll
dec
xchg
cmovnp
cmp
data16
ljmp
and
push
test
vmwrite
adc
stmxcsr
pop
popf
adcb
out
popf
cli
test
push
lret
xor
mov
xor
cmc
mov
cmp
pop
xor
lcall
fstps
jle
mov
popf
cmc
push
pop
jae
imul
cmp
fsub
int
jo
mov
lds
call
pop
cmp
sahf
into
sub
sbb
xlat
mov
fwait
mulb
imul
negl
mov
mov
pop
lret
mov
cmp
sbb
mov
cmp
lds
push
xchg
imul
pop
inc
cmp
push
xor
dec
std
fdivl
bound
inc
in
inc
inc
pushf
aaa
loop
popa
pop
cmc
mov
pop
mov
pushf
fnstsw
xchg
jae
pushl
mov
pop
stos
je
repz
mov
mov
sti
jg
xor
in
pop
scas
hlt
outsb
jo
and
xlat
orl
jae
or
mov
xchg
bound
popf
mov
ja
and
jns
aaa
adc
cmpsl
cli
dec
cmpl
jmp
popa
sti
add
xchg
cmpsl
movsb
pusha
dec
outsb
or
imul
jbe
xchg
xor
xor
movsb
bound
jne
xlat
add
into
cmp
stos
pop
push
xchg
sarl
mov
imul
add
shlb
inc
pop
sub
cmp
xchg
ljmp
shrb
cmc
sbb
fldl
enter
xchg
mov
mov
int
mov
pusha
sub
faddp
int3
dec
cmpsb
cli
xchg
xchg
mov
mov
xchg
mov
mov
imul
movl
pop
push
jns
cmpsl
xor
jo
pusha
repnz
sub
jns
jle
lcall
ret
xchg
in
mov
xchg
loope
lahf
movl
ss
pop
dec
dec
sbb
sbb
imul
std
fsubr
pop
push
push
shlb
mov
addl
bnd
add
mov
js
mov
fimuls
inc
sub
lock
inc
test
hlt
push
xchg
aad
pushf
jae
mov
or
pop
jb
add
sub
pop
ret
movsb
cmp
xchg
or
roll
out
test
arpl
gs
xor
stos
dec
jecxz
and
pop
inc
fdivrl
mov
add
xchg
mov
in
incb
hlt
mov
imul
mov
push
ss
or
mov
push
outsb
lret
dec
push
or
mov
xchg
out
dec
dec
stos
scas
xchg
jns
pop
mulb
push
mov
mov
pop
jle
and
sub
sub
fcomip
cltd
aam
shll
test
jb
orl
insl
sbb
int3
fwait
movsb
ret
aam
xchg
test
aaa
loope
sub
dec
inc
std
std
shrl
popa
sbb
sbb
rorl
jns
insl
jmp
cmp
gs
loopne
lods
push
pusha
decb
js
call
icebp
nop
ds
push
add
inc
jbe
dec
and
dec
mov
imul
pcmpeqb
leave
test
rcll
mov
and
mov
cli
inc
stc
xchg
push
xlat
push
add
jns
jecxz
mov
iret
dec
sub
add
dec
scas
push
or
out
mov
push
lods
mov
repnz
push
ljmp
or
cmpsl
adc
lahf
lds
mov
movsl
jno
push
fsubs
jg
sbb
lret
mov
xchg
aaa
mov
testl
mov
loop
cmp
shrl
mov
adc
cmp
cmc
not
test
mov
test
push
inc
dec
mov
rcrb
mov
push
jae
xchg
sti
or
xchg
out
lods
adc
sbb
out
cli
fs
sub
test
jne
repz
andl
xor
mov
jb
mov
jle
popf
dec
jbe,pt
daa
adc
and
mov
ja
jae
push
js
xlat
push
cltd
xor
test
inc
lods
std
sbb
and
sub
movsl
aad
out
jmp
mov
xchg
cmpsb
push
jno
int
cmpl
cmpsl
sub
inc
add
xchg
lahf
popf
scas
push
mov
icebp
je
rol
cmc
cmp
scas
xor
popa
push
out
sbbb
push
dec
mov
idivb
stos
inc
mov
loope
jbe
inc
mov
rolb
rclb
jecxz
sub
push
push
aas
frstor
iret
push
test
movsl
jb
cmc
rorl
push
add
enter
cltd
popa
loopne
pop
loopne
adc
add
add
push
jl
cmp
cmc
mov
jecxz
dec
adc
mov
mov
fstps
sub
mov
call
rcll
dec
sbb
lahf
sub
mov
jecxz
out
and
push
leave
adc
test
insb
xchg
push
and
testb
das
or
mov
fistpll
mov
add
xchg
or
dec
movsb
in
and
jb
and
jl
popf
cmp
pop
in
mov
cmc
mov
jno
mov
mov
jno
insl
inc
push
fstpt
or
jbe
in
sbb
xor
xor
out
test
push
dec
in
pop
nop
rolb
jo
gs
sub
add
bound
inc
jnp
mov
pop
mov
aaa
push
push
pop
subl
bound
aam
in
les
xor
sub
adcb
repnz
push
fiaddl
xchg
adc
clc
cltd
call
xchg
xchg
jg
and
adc
rclb
filds
std
insb
or
push
daa
pop
in
les
inc
ja
sbb
inc
cmpsl
sbb
lods
loopne
orb
pushf
sub
adc
jl
sbb
iret
mov
sub
sti
xchg
das
popf
add
add
xorl
adc
enterw
sbb
mov
sub
std
adc
pop
hlt
aam
fstpt
sahf
adc
repz
dec
imul
lcall
lock
aam
push
sbb
jmp
adc
stos
mov
negl
push
repz
insl
jae
push
fstl
push
lods
scas
shl
fsub
adc
sub
lcall
cmpsl
cli
shrb
pop
lea
shrb
imul
fiaddl
mov
out
xchg
pop
icebp
cli
jecxz
ds
inc
mov
loop
or
mov
fs
imul
mov
popa
arpl
xchg
addr16
stos
insb
or
inc
inc
lret
inc
ljmp
clc
dec
sub
cmpsb
fwait
mov
xchg
dec
push
cs
fisttps
aam
sbb
adc
enter
gs
ja
fstl
movsb
xchg
mov
adc
pop
dec
jbe
popf
notb
mov
aam
dec
mov
xor
adc
notl
inc
push
lret
and
dec
mov
xor
mov
ret
lret
or
sbb
dec
or
out
stos
fcomps
ret
outsb
adc
aas
and
test
pop
and
mov
xor
xchg
mov
jl
movsl
sahf
mov
and
div
fildl
into
int
sub
mov
test
insb
jle
xchg
std
lea
cmp
jmp
mov
mov
inc
mov
dec
or
fstpt
xor
negb
lods
pop
pop
cmp
push
jge
movsb
sarb
xor
lahf
mov
fprem
pop
rclb
lea
rolb
dec
dec
jg
shlb
cmp
inc
pop
xchg
xchg
pushf
mov
push
das
dec
dec
xor
test
lret
jl
adc
xor
in
sbb
cmp
out
je
std
xchg
jne
sub
loop
inc
adc
mov
mov
jns
cmp
inc
inc
out
stc
push
cmc
adc
psubw
fmuls
cltd
mov
cmp
or
push
repnz
xchg
andb
dec
push
inc
push
lret
pop
dec
stc
popf
ds
mov
lods
imul
mov
mov
test
movsb
leave
jbe
imul
shrb
orb
loop
pop
arpl
ss
pop
sbb
imul
xlat
rorl
mov
pop
push
aas
cmp
lret
cli
or
jmp
mov
fildll
and
cmp
xchg
xchg
orb
test
outsb
mov
mov
fimull
and
or
jbe
dec
ds
call
jp
pop
push
push
xor
mov
subl
fldt
iret
mov
imul
in
data16
mov
div
cs
cmpsl
imul
jns
push
loope
lea
lock
ret
ss
and
aas
clc
pop
lret
jns
daa
inc
negl
testb
cs
cmpsl
cmp
cmp
lea
add
xor
push
mov
ficomps
push
lret
mov
push
mov
in
arpl
jg
sub
dec
nop
mov
mov
loope
movl
outsl
inc
cmpsl
xchg
pushf
std
fistpl
pop
add
add
sahf
jbe
cmc
cmp
jl
shll
adc
lret
sbb
inc
push
jmp
jb
jl
pop
xchg
mov
adc
xlat
inc
mov
mov
mov
or
jmp
mov
das
test
enter
mov
jae
push
jnp
fisttps
or
ja
cltd
jno
arpl
lds
fs
insl
test
das
das
xchg
xchg
cld
and
bound
sub
repnz
add
lock
push
sti
lds
fisubs
in
out
jb
add
mov
mov
cmpsl
mov
ret
jg
mov
fnstsw
dec
hlt
sub
dec
loopne
call
mov
adc
dec
cwtl
cmp
adc
cld
test
xchg
xorl
rep
lahf
popf
push
test
pop
loopne
cld
lret
pop
fs
pop
pusha
or
daa
pcmpgtd
ljmp
pop
push
inc
xchg
addr16
addr16
lods
xchg
outsl
pop
dec
adc
push
pop
mov
inc
and
sarb
cmpsb
faddl
mov
imul
mov
movsb
cltd
xor
mov
mov
jns
xchg
and
lds
bound
inc
push
pop
je
mov
ret
mov
ja
test
xchg
inc
adc
sarb
jnp
cmp
mov
ljmp
lret
push
test
mov
into
mov
pop
mov
into
int3
scas
aad
push
popf
adc
imul
pop
repnz
jle
jp
mov
pop
imull
movsb
push
mov
es
subl
js
fwait
cwtl
dec
push
jge
lret
jbe
cmpsb
stos
sbb
insl
cli
fcomps
xchg
popf
push
sub
adc
adcb
xchg
jo
lods
les
cmp
add
push
jp
les
add
out
adc
sarb
cltd
pop
pop
mov
shlb
scas
in
inc
loopne
jae
sti
aaa
aam
pop
lods
and
dec
inc
xchg
nop
je
pop
lret
xchg
ret
pop
push
scas
push
inc
mov
xor
xlat
cmpsl
jle
in
jge
push
pop
pop
imul
and
sub
bound
push
lea
inc
mov
inc
add
and
sbb
pop
xchg
ret
mov
negl
and
jae
sub
or
dec
cmp
pop
imul
jg
popf
enter
test
push
xchg
cmp
out
gs
cli
sub
cmp
cld
ds
xor
in
flds
pop
pop
imul
test
gs
push
push
loope
js
jns
lods
pop
xchg
and
popf
ficoms
mov
sub
ret
add
into
push
or
push
in
sti
xchg
mov
or
out
mov
push
push
outsl
mov
dec
inc
dec
mov
inc
push
sbb
and
mov
lods
add
push
inc
arpl
or
in
xchg
mov
aaa
xchg
cltd
inc
into
loop
outsl
int
stos
cs
js
xchg
cmpsl
cmp
inc
push
add
jp
aam
xchg
adc
shr
repnz
test
xchg
rcll
push
nop
push
jo
hlt
arpl
pusha
daa
iret
mov
stc
mov
je
in
mov
ret
sbb
hlt
iret
sbb
aad
ret
rolb
sahf
pop
subl
in
mov
and
dec
lds
insl
sbb
out
scas
xchg
dec
pusha
in
inc
adc
pushf
cld
inc
mov
ljmp
loopne
add
pop
xor
push
pop
xlat
mov
and
add
or
adc
jae
jmp
cs
pop
loopne
add
pop
mov
pop
mov
int
pop
pop
movsl
fistpl
rol
xchg
leave
loopne
in
rol
mov
sbb
aad
fs
mov
push
cld
jp
cwtl
gs
stos
or
cmp
dec
das
or
sahf
movsl
mov
cmp
xor
xchg
xlat
nop
adc
mov
jle
inc
sub
mov
and
push
repnz
xchg
dec
addb
lods
inc
jecxz
std
mov
mov
mov
mov
sub
ja
push
push
dec
stc
sbb
dec
neg
push
fcompl
mov
out
jno
sti
mov
gs
imul
test
in
adc
xor
add
inc
andb
cld
in
shrl
mov
push
xchg
jl
pop
mov
iret
in
cmc
test
cmp
sub
jge
cwtl
jle
jo
push
fmull
mov
cmp
arpl
or
sahf
sub
adc
into
mov
or
iret
in
fcmovb
jne
add
in
sbb
out
imul
imul
xor
xor
pop
inc
or
pop
lret
xchg
test
dec
and
ja
cmp
je
cs
mov
adc
out
pop
cmp
and
mov
dec
push
jns
or
mov
push
cli
sub
cltd
sub
push
add
lock
sbb
push
das
loop
hlt
mov
mov
pushf
xchg
push
cmp
pop
cmc
bound
idivb
cmpsb
lea
mov
xor
mov
inc
popa
push
cwtl
pop
jle
sar
sub
xchg
nop
mov
inc
lock
xchg
insl
mov
jns
lret
nop
sub
ds
aam
mov
dec
fidivl
out
fwait
iret
test
dec
lea
cmpb
and
or
mov
js
adc
cld
jb
cmp
jl
fwait
mov
jb
clc
sbb
iret
push
lret
aaa
cmpsl
cmpsl
js
inc
xchg
mov
sbb
test
clc
inc
inc
inc
ja
mov
cmp
test
add
mov
pushf
inc
jl
pop
jle
loopne
pop
fcomps
bound
lret
inc
cli
sbb
lcall
arpl
jae
dec
adc
push
out
sub
jns
cltd
mov
lea
sub
shlb
cwtl
and
pop
jmp
or
ret
aaa
fstpt
mov
lret
lods
or
and
jle
jmp
lods
lock
popf
xlat
lods
jnp
add
and
xor
addr16
sub
testl
cmp
inc
inc
and
std
std
jmp
mov
mov
int
aaa
xchg
stc
orb
mov
jl
jno
ja
add
out
jnp
jnp
shrl
lods
enter
arpl
dec
aaa
test
push
js
bound
pop
xor
mov
movl
repz
xchg
and
mov
cmp
push
xchg
mov
nop
mov
lds
call
adcb
es
xor
dec
jns
or
sbb
sbb
cmp
rcrb
popa
mov
inc
inc
pusha
cwtl
mov
in
dec
ficoms
push
lods
xchg
loope
sti
mov
pop
lret
xchg
inc
pop
mov
mov
ja
dec
in
fcomp
pop
mov
sti
andb
cmpsb
repnz
or
jle
bound
lcall
inc
mov
fiadds
dec
add
inc
daa
int3
xchg
insb
mov
test
xor
push
jg
xor
push
call
mov
shrb
ss
push
or
xchg
daa
lods
fiaddl
xchg
enter
fwait
mov
nop
push
movsb
jb
mov
and
mov
mov
ss
and
call
dec
into
sysret
xor
adc
std
test
ss
cli
mov
popf
mov
cmp
xchg
pop
lods
sbb
push
lcall
jmp
pop
mull
sbb
nop
cmp
sbb
dec
fldcw
adc
and
adc
call
pop
scas
adc
or
mov
lret
push
movsl
mov
jns
adc
xchg
je
mov
aam
rol
mov
push
sub
jbe
lea
push
cmp
icebp
or
ret
jnp
mov
out
pop
cmpsb
adc
scas
addr16
add
jmp
stos
sti
jg
pop
dec
inc
cmp
sbb
into
popa
adc
inc
sbb
xor
in
dec
inc
jbe
nop
mov
xchg
scas
stc
push
int
jge
pop
or
in
sub
ficomps
nop
aas
dec
dec
insb
outsb
sub
jnp
adc
xor
xorl
mov
or
mov
ss
push
add
imul
mov
fcoml
imull
xor
cmp
insl
mov
push
movsb
je
andb
call
mov
ret
jbe
sub
xchg
cmp
pop
bound
mov
les
cmpsb
inc
mov
jecxz
adc
mov
dec
mov
ficompl
repz
mov
jg
sbb
sbb
loope
loopne
lods
xor
and
jge
inc
xchg
mov
jl
mov
sbb
add
lea
fsub
jp
inc
cwtl
testl
aaa
inc
test
mov
push
dec
je
or
jecxz
sti
mov
inc
fwait
cmp
popa
fidivl
jae
orb
cmp
jecxz
adcl
sbb
out
lea
add
test
js
mov
orb
mov
scas
xchg
dec
ret
mov
test
mov
jecxz
stos
xlat
sahf
mov
push
fwait
mov
jge
dec
cld
adc
cmpsl
leave
fiaddl
jmp
test
lods
lret
in
xchg
jl
js
sbb
jb
pop
or
jo
lret
pop
int3
cmp
mov
jmp
aad
add
pop
frstor
and
or
call
jge
dec
int
rcrb
rcr
pop
addb
ds
mov
outsb
push
dec
cmpb
xor
lods
lahf
mov
adc
or
pop
lret
mov
xchg
adc
inc
ds
in
in
jno
stc
dec
push
lahf
or
cmp
data16
leave
mov
ror
and
imul
dec
aad
cltd
xchg
xchg
cmpsl
xchg
cltd
adc
cmc
lahf
cmp
push
inc
ficoml
mov
and
inc
enter
adc
jbe
aad
cmp
xchg
mov
mov
ljmp
cmp
notb
xlat
repz
or
jmp
push
add
dec
adc
imul
repnz
call
shr
mov
pop
mov
pop
shlb
pusha
xor
popa
test
jae
push
sbb
gs
mov
cmp
add
adc
sbb
pushf
loopw
mov
in
aas
pushf
lea
cltd
fwait
mov
jl
setae
mov
and
scas
mov
imul
xlat
push
xchg
test
fcomps
xchg
sbb
sarl
cmpsl
cmp
xchg
push
jmp
dec
push
sbb
adc
mov
sub
lods
push
push
outsl
int
jmp
mov
je
sub
subb
mov
hlt
fstpl
and
lret
cmp
adc
sbb
xor
mov
es
cli
imul
add
andb
mov
imul
inc
fisttpll
jo
push
xlat
in
or
lock
push
stc
sbb
stos
xchg
stos
into
bound
or
lret
jne
add
pushf
jmp
push
or
rclb
xchg
jge
cmp
enter
pop
loop
inc
lahf
dec
push
aaa
stos
cmpsl
lea
insb
jne
jecxz
andps
push
adc
dec
std
or
out
or
push
xor
cmp
pop
push
jmp
pop
aad
push
sbb
shrl
insb
cmc
or
xchg
jne
push
jecxz
imul
and
cmp
shll
lods
jmp
push
icebp
rorb
push
loope
lahf
cmp
and
lods
mov
jnp
clc
loope
xor
fisubl
out
xor
insl
sahf
xrelease
mov
cmc
outsl
int3
lea
xor
or
adc
push
or
mov
mov
mov
lock
push
and
jo
rcr
push
in
jmp
jmp
cld
jae
push
mov
imul
loopne
push
pop
add
mov
in
sbb
and
xchg
add
push
ljmp
mov
mov
cmp
pop
dec
pushf
sub
aad
adc
jmp
lss
pop
shrb
clc
testb
lods
int
mov
loopne
and
iret
ss
mov
xchg
jle
aam
sbb
pop
lret
sahf
outsb
pop
jnp
inc
ljmp
loopne
add
mov
out
sub
inc
jb
xchg
xchg
sub
lret
push
cmp
addr16
xor
movsl
jge
test
add
lods
xchg
pop
cli
push
inc
push
cli
xor
cmp
jae
add
jb
rcrb
or
jl
scas
or
es
ss
mov
pop
sbbl
jo
or
iret
lea
mov
add
mov
out
lahf
cmpsb
dec
push
add
pop
and
fwait
pop
test
mov
push
sbb
scas
bound
aaa
outsl
push
jb
test
xor
xchg
dec
fidivl
pop
ja
push
cs
or
sarl
shll
push
out
xor
xor
push
lahf
fbstp
jle
pop
outsl
inc
pop
out
mov
test
ret
push
clc
inc
and
xlat
xchg
pop
pop
popl
push
adc
scas
push
jns
lock
xchg
xchg
out
enter
lock
rol
mov
push
sub
mov
iret
stos
cltd
orb
pop
in
pusha
mov
and
jmp
aam
ss
or
popa
sarb
cmpsb
pop
fsub
xor
mov
std
inc
movsl
ss
inc
mov
push
scas
push
lds
out
pop
push
cmp
int3
sbb
xchg
mov
or
mov
push
hlt
out
outsb
mov
insl
sarl
mov
sub
pop
ret
xchg
sub
ret
mov
and
aas
pop
xlat
inc
in
xorl
es
xor
dec
loopne
sbb
cmp
pop
nop
sub
popa
idivl
cmp
std
mov
mov
xchg
mov
cld
nop
mov
mov
adc
into
nop
jmp
mov
xchg
pop
xor
pop
filds
mov
dec
mov
sub
dec
inc
adc
jecxz
pop
fs
mov
adc
xchg
dec
xchg
pop
ret
push
daa
and
insb
clc
inc
and
push
jl
sbb
repz
sub
xchg
jmp
jg
dec
mov
fisttpl
add
addr16
dec
decb
and
in
ret
in
inc
fs
daa
mov
inc
xchg
jne
or
inc
pop
jl
pop
fs
test
jl
sahf
iret
ja
lds
icebp
repnz
lcall
sbb
add
cmp
shr
fsts
mov
outsb
mov
shll
jge
icebp
fmull
xchg
fsts
imul
outsl
inc
xchg
fstpt
outsl
push
ret
or
adc
cld
lahf
aam
mov
loopne,pn
xchg
push
enter
insl
daa
imul
outsb
inc
and
mov
mov
rorl
xor
cld
ja
int
fyl2xp1
popa
push
xchg
mov
fimull
int3
dec
xor
pop
xchg
xlat
out
outsb
jg
inc
out
out
push
test
fnstsw
xchg
cs
sbb
rclb
call
das
push
loop
jo
jecxz
scas
xchg
out
mov
add
das
mov
in
pop
fadd
ret
aaa
loop
jne
pop
aad
gs
add
xor
dec
xor
add
pop
lods
sti
mov
imul
jg
test
sub
dec
xchg
bound
push
enter
movsl
mov
mov
sub
cmp
lods
xchg
mov
mov
sbb
mov
dec
aaa
pushf
jmp
mov
jae
or
push
stos
scas
mov
outsl
lret
dec
mov
xchg
xlat
xlat
aam
push
push
mov
lret
xor
mov
pop
or
enter
sti
mov
add
mov
fmul
mov
ja
out
test
xor
icebp
mov
filds
fcompl
jns
data16
lock
cli
cltd
les
dec
push
aad
sahf
icebp
or
sbb
push
into
ja
push
pop
sbb
aam
stos
sub
outsl
inc
mov
nop
jl
aas
xchg
jo
scas
data16
dec
std
xor
inc
push
cmpsl
dec
xchg
fcoms
cmp
in
test
shll
inc
out
push
cmp
xchg
mov
das
fldcw
mov
inc
mov
ljmp
jg
and
push
sub
inc
adc
add
in
sbb
xor
and
and
mov
lods
and
mov
mov
shlb
sbb
push
fldenv
sub
xchg
pop
push
jmp
mov
sbb
fadds
sub
subl
xchg
lods
bound
fistpl
add
pop
daa
xchg
sti
push
stc
imul
mov
shl
lret
push
push
jp
and
pop
out
and
push
and
data16
insb
out
push
add
inc
les
mov
mov
pushf
out
push
stc
cmp
push
or
ficomps
mov
cs
pop
enter
xor
sbb
rorb
pusha
psubw
es
out
pop
fstpl
push
test
xchg
orl
mov
lods
or
mov
push
bound
insl
movsl
cltd
cmpsl
test
loopne
push
mov
pop
dec
dec
pop
jne
fstl
ja
sbb
add
jne
add
pop
popa
cmp
mov
xlat
ret
mov
pop
jne
fsubrl
daa
lret
test
cmovae
aaa
dec
adc
pop
push
xor
add
lcall
mov
fcom
mov
xor
bound
push
in
insb
fucom
pop
jbe
enter
cmp
mov
shlb
loop
pop
sub
jmp
sbb
dec
aam
pop
or
shlb
add
add
or
enter
inc
cmpsl
in
lods
lcall
loopne
add
cli
adc
jmp
xor
jg
js
add
push
fdivrp
popf
xchg
lock
sbb
mov
out
inc
sarb
rcll
mov
rcl
int3
inc
push
int
or
pop
push
in
nop
pop
rolb
or
adc
mov
lea
hlt
push
and
fstpl
dec
push
push
jge
cmp
jb
clc
mov
and
mov
mov
aam
jge
jb
scas
mov
mov
mov
jb
dec
movsb
dec
aaa
push
std
jecxz
or
sbb
aas
mov
bound
popf
in
pop
movsl
mov
enter
cmp
jno
xchg
xlat
aas
aam
or
cmp
outsb
sbb
out
fiaddl
lds
and
and
jmp
pop
jne
lods
fbld
hlt
inc
and
cmp
das
lcall
and
test
scas
sub
sbb
in
jb
aaa
or
mov
push
xlat
mov
outsb
loope
cld
sbb
mov
cmp
icebp
jg
xchg
jno
out
andl
sbb
or
pop
addb
adc
mov
ret
inc
lock
sar
jnp
lods
out
lock
add
movsb
and
shl
pop
int
cld
ret
jl
iret
insl
hlt
subl
fsubs
mov
xor
sbb
jne
mov
pop
xchg
add
mov
rcll
imul
jge
and
faddp
je
pusha
fs
sub
test
adc
mov
mov
jmp
mov
arpl
xchg
mov
icebp
adc
and
push
out
mov
add
and
aaa
faddl
icebp
aad
fs
xchg
dec
inc
aam
into
xchg
stc
insl
lock
pushf
xchg
xor
add
mov
neg
mov
bsr
cld
sbbl
inc
or
loop
push
and
nop
out
mov
adc
and
mov
and
pop
sbb
mov
add
mov
inc
sub
pop
adc
pop
cli
into
ja
mov
sti
lcall
rorl
in
cmpsb
pop
push
cmp
xchg
lds
pop
ret
mov
or
inc
nop
aaa
mov
inc
rep
mov
call
lods
movsb
jbe
fcmovne
xchg
lds
andl
test
jbe
push
add
in
test
popf
push
jge
jecxz
sub
pushf
loop
fnsave
in
mov
adc
sub
inc
shrb
xor
int
cmp
xchg
mov
mov
daa
decl
push
jo
pop
jno
fmull
push
mov
fdivrp
out
rcll
pop
dec
sbb
out
mov
stc
sbbb
fdiv
clc
loope
cwtl
cmp
sahf
adc
xor
jne
jnp
dec
mov
outsl
dec
inc
loop
xor
dec
fistpll
mov
stos
push
aad
decb
push
cltd
inc
dec
leave
lds
js
add
mov
cmp
test
jns
mov
in
inc
pop
xchg
adc
icebp
and
data16
jmp
fstpl
dec
popa
push
or
dec
jno
scas
inc
ss
jo
xchg
cltd
decb
icebp
movsl
in
js
push
fadds
jmp
repnz
push
es
iret
mov
jg
jmp
xchg
push
js
pop
dec
out
mov
adc
push
cmp
xchg
stos
dec
xor
sbb
add
push
into
or
dec
insb
loope
dec
pop
fiaddl
mov
ss
pop
push
pop
and
daa
jnp
xchg
out
dec
mov
vmovq
pop
aas
sub
mov
xchg
push
mov
les
inc
pop
fistps
out
sbbb
jmp
jb
or
shl
mov
mov
pushf
movsl
mov
pushf
test
mov
lret
mov
mov
leave
sti
cmpsb
test
std
mov
push
mov
push
sub
sbb
scas
dec
sbbb
mov
jns
repnz
push
cmc
test
ret
out
sub
popf
daa
pusha
aas
xor
lods
in
repz
mov
pop
in
movsl
dec
sub
pop
xor
out
lock
cld
js
jl
repnz
mov
jo
jns
cs
mov
jmp
stos
or
xor
lcall
jg
bound
xchg
jl
pushf
inc
rorb
push
out
cwtl
mov
repnz
lahf
jmp
aam
push
lods
add
std
lahf
jb
jno
cmc
sub
adc
pop
adc
adc
fsubs
das
push
or
push
or
xchg
insb
ja
in
inc
cmp
aaa
jp
icebp
stos
jnp
pop
mov
pop
push
pop
icebp
pop
rorl
test
adc
addr16
popa
arpl
into
mov
xchg
mov
ds
dec
pop
mov
or
add
test
loop
add
fdivs
mov
mov
pop
sub
add
inc
push
sbb
mov
xchg
cli
xchg
add
sahf
pop
xor
xor
loope
imul
and
cmpsl
adc
and
xor
rol
sub
mov
xchg
mov
imul
in
cmc
cmp
inc
sbb
sub
sahf
push
or
mov
int
add
push
pop
add
call
sub
jmp
xchg
in
andb
lret
in
push
inc
or
xchg
addr16
inc
pop
or
pusha
shrb
pop
imul
jae
pop
mov
ficompl
stos
js
adcl
push
bound
push
ds
frstor
jbe
gs
inc
sub
js
in
jp
enter
adc
xlat
xchg
popf
addb
and
mov
cltd
in
push
aas
aam
xor
push
mov
sub
lret
pop
cmp
test
negl
scas
test
add
inc
loopne
ficoms
mov
and
adc
popf
adc
lcall
out
mov
dec
cmp
adc
cmp
ret
sti
repnz
mov
movsl
cmpsl
jnp
push
daa
cmp
sbbl
ret
adc
or
mov
jl
push
loope
push
sahf
loope
inc
add
xchg
sbb
daa
mov
mov
push
pop
cs
or
mov
lea
push
xchg
or
cmp
push
sbb
sbb
sub
xor
xchg
fs
jbe
nop
jl
mov
repnz
js
lahf
es
ror
jle
jno
and
jne
sub
imul
mov
mov
pop
sub
add
xchg
pop
mov
dec
mov
mov
call
or
jecxz
sahf
add
paddb
dec
and
sub
xor
lahf
test
xlat
lahf
into
test
sub
pop
outsb
dec
inc
mov
scas
shll
mov
sub
xchg
fs
movsb
xorb
imul
push
daa
pop
test
in
int3
lods
mov
test
push
jbe
lods
lods
int
mov
or
push
sbbb
push
stos
rcrb
sbb
or
cli
leave
popf
jns
dec
sbb
in
pop
les
out
leave
fidivrs
das
push
lret
adc
stos
ss
popa
mov
ljmp
rol
pusha
int
xor
orl
mov
xchg
adc
sub
and
sbb
jg
inc
cli
xor
in
and
jl
in
pop
movsb
sbb
repnz
and
stos
push
ret
dec
sub
in
in
adcb
jp
xchg
cmp
and
test
sub
add
push
gs
adc
xchg
add
pop
fildl
gs
adc
pop
mov
dec
pop
xor
js
shrl
test
lods
sbb
dec
orb
fstpl
addr16
sbb
das
mov
divl
mov
or
hlt
repz
add
das
xchg
stc
adc
inc
jecxz
push
sbb
inc
pop
or
std
mov
jp
and
lret
cld
inc
daa
in
sahf
inc
stos
fistpll
loope
aas
jecxz
xchg
inc
pop
cli
mov
sahf
je
xor
lret
mov
sub
cmp
out
and
pushf
hlt
adc
mov
cs
and
push
jmp
jg
and
leave
popa
cld
or
inc
push
jbe
aaa
jne
imul
ja
mov
cmp
push
pop
sbb
ret
or
sbb
add
push
fcomip
pushw
stc
xor
mov
nop
test
popf
call
int
cld
cwtl
sarb
or
add
loopne
sbb
lea
mov
jns
jns
xor
adc
loopne
std
inc
filds
les
pop
mov
mov
jp
lret
movsl
test
xor
push
sbbl
sub
insb
jne
mov
adc
lret
push
aas
lret
and
adc
cld
mov
push
mov
push
adc
in
xor
sub
dec
cmp
xor
xor
cld
xor
jbe
jg
addb
notrack
cmc
pop
enter
jg
or
jg
push
xor
fstpt
in
cmp
cwtl
loopne
aaa
clc
loopne
scas
xor
iret
shlb
inc
mov
jbe
sbb
out
mov
repz
dec
rorb
xchg
shl
fisubl
cmpsb
mov
test
lods
or
mov
and
inc
mov
incb
shll
xchg
pop
loopne
imul
inc
es
out
or
xchg
and
callw
fdivl
fsubrp
out
fs
rolb
cmc
dec
mov
fdivrs
push
xor
lods
jns
inc
pushf
pop
jmp
inc
and
mov
bnd
push
dec
mov
jo
push
fchs
mov
out
add
mov
push
imul
ljmp
mov
mov
jno
cld
aaa
xchg
dec
pusha
cwtl
jecxz
jne
cs
inc
data16
shlb
add
aam
push
mov
pop
ja
mov
mov
iret
test
shrl
in
sbb
mov
mov
jge
out
sub
cs
sti
adc
rcll
jge
sub
aad
es
lcall
or
stc
inc
movsl
sub
and
pusha
repnz
jg
and
and
mov
out
pop
or
hlt
jge
pop
call
inc
push
nop
fcomps
jge
pop
test
bound
xor
sti
mov
aad
push
ret
cmp
pop
cmpsl
loope
mov
jg
cmpl
cmpps
out
xchg
adc
push
add
sub
jmp
lods
pusha
mov
mov
in
out
shl
pop
mov
pop
xchg
sbb
scas
xor
lods
aas
xchg
imul
adc
mov
sub
icebp
rorl
pusha
outsl
das
sub
call
rolb
add
cmp
adc
ret
or
pop
lods
mov
stos
outsb
adc
add
ss
hlt
dec
shlb
push
mov
aas
es
jle
mov
cmc
xchg
cli
leave
popa
push
clc
xor
mov
pop
inc
fsts
mov
mov
push
pop
pop
jmp
or
idivb
mov
pop
cltd
mov
in
rorb
faddl
push
fnstsw
aam
sub
loope
xor
add
inc
nop
adc
hlt
out
test
cmp
or
cltd
sub
xchg
push
mov
pop
mov
test
xlat
insl
or
popf
mov
scas
xchg
cmpsb
jge
mov
push
xor
cmp
mov
sbb
jmp
shl
push
mov
or
push
stos
scas
in
xchg
mov
rorb
daa
jbe
mov
lods
aad
and
dec
adc
xor
push
xor
loopne
xchg
mov
jbe
icebp
rclb
enter
mov
mov
lock
xchg
mov
xor
pushl
loope
or
xchg
xor
enter
imul
sub
lahf
xchg
add
inc
mov
jg
add
push
and
popf
push
jge
gs
add
dec
push
xchg
mov
popa
or
pop
pop
sbb
mov
aas
fdivs
or
sub
push
pop
call
outsb
mov
cmp
push
addb
dec
jp
fistpl
xlat
cmp
mov
xor
imul
stos
mov
mov
xchg
xchg
fistpl
call
mov
or
lods
pop
mov
fdivrl
pop
das
imul
xor
cmp
out
out
push
lret
xor
push
ret
dec
jne
pop
sbb
push
sub
add
ret
movsb
jmp
cli
div
icebp
test
push
push
sub
movsb
loop
clc
xlat
loope
pop
xor
test
mov
test
add
pop
negl
ret
nop
or
arpl
into
popf
and
cs
sbb
incb
xchg
jo
sub
mov
addps
pop
movsl
dec
push
std
movsb
idivb
or
iret
inc
add
inc
aam
gs
test
hlt
dec
push
push
and
and
cmp
fdivl
bound
arpl
into
push
push
subb
js
mov
das
fldenv
aam
push
cmp
push
xor
hlt
adc
cmpsl
sub
inc
outsl
inc
jmp
push
add
sarl
adc
sub
sbb
nop
sahf
and
add
inc
cli
xor
arpl
mov
pusha
xor
cmpsl
les
enter
push
mov
jge
mov
mov
mov
or
push
shlb
mov
xchg
pop
sub
ret
jle
cmp
scas
cmp
sahf
mov
mov
jmp
add
push
push
clc
xchg
sub
mov
ljmp
dec
mov
jmp
cmp
int
ret
pop
stos
repnz
xor
fnstcw
jae
mov
and
push
out
mov
or
cmpsb
jle
loopne
xorl
jmp
or
jb
xchg
xor
pop
lods
jo
inc
gs
popf
popf
int3
lahf
pop
sbb
jmp
mov
dec
mov
cmc
and
jbe
mov
repz
sbbl
jb
mov
xchg
mov
cwtl
sahf
pop
inc
mov
popf
jge
mov
mov
mov
jp
lcall
inc
das
and
mov
jns
out
in
int
cmp
or
mov
jne
loope
daa
inc
mov
call
pop
xor
mov
add
inc
inc
jecxz
aam
pushf
mov
ret
pop
and
or
push
fdivrl
popa
dec
and
cmp
iret
enter
jo
jne
cmpsb
push
push
sbb
icebp
outsl
or
arpl
xchg
fildl
sbb
xchg
jmp
es
out
jecxz
xor
inc
imul
pop
cmp
enter
mov
mov
lret
sub
mov
popf
loopne
mov
ret
cmpsl
mov
jb
jno
daa
cmp
int
add
test
lcall
stos
lahf
mov
mov
dec
sub
dec
pop
fcmovb
dec
sub
fwait
xor
mov
mov
sbb
lods
sahf
sbb
or
lcall
rorb
mov
aam
cmp
and
mov
scas
sub
lock
dec
lahf
stos
add
sub
add
and
pop
loopne
repz
sbb
and
add
pop
xor
jae
cwtl
sub
xchg
inc
mov
test
in
outsb
inc
fwait
dec
lahf
sub
insb
jo
jecxz
mov
jb
mov
xchg
pop
andl
adcl
adcl
sub
and
cmc
stos
dec
or
hlt
or
cs
xor
dec
fbld
ret
push
sbb
push
jmp
adc
add
sbb
sbb
ja
test
stos
xor
push
loop
leave
sub
lods
and
jo
imul
imul
xor
mov
push
sub
fucomip
push
cmpb
cmc
sub
fsts
add
mov
xchg
sbb
push
data16
into
sarb
es
add
loopne
cmp
adc
shlb
xchg
stos
das
shrb
pop
and
enter
and
push
mov
rolb
clc
lahf
add
sysenter
popf
mov
mov
test
mov
cwtl
sarb
daa
push
add
jb
cli
adc
enter
push
pop
add
repz
jo
daa
jbe
dec
repz
out
and
stos
pop
pop
je
jno
int
and
jb
in
push
xchg
sub
loop
insl
jae
int3
mov
xchg
movsl
and
pop
push
pop
into
imul
stos
lods
fisubrs
xlat
test
lock
jmp
nop
and
mov
addr16
bndldx
js
and
mov
mov
cmp
mov
and
ljmp
test
add
mov
cmc
sub
mov
fdivl
insl
push
fdivrs
push
push
mov
rcrl
je
hlt
sub
inc
sarl
fucomp
sub
popa
lcall
sbb
inc
mov
sub
push
mov
cli
add
and
int3
iret
mov
sub
dec
jo
lock
add
push
and
ret
shll
addr16
lock
ficompl
fsubs
in
lret
mov
sub
and
xchg
bound
adc
lods
cmp
leave
out
dec
addb
xor
das
fists
push
sti
mov
dec
test
and
lret
mov
mov
cwtl
cmp
mov
mov
pop
xchg
es
jno
adc
dec
je
loop
shl
sub
mov
and
add
jmp
xchg
push
out
xchg
or
pop
jnp
jae
add
push
mov
imul
inc
lret
rclb
adc
daa
insb
fstpt
cmp
cmp
aad
inc
insl
add
in
stc
push
pop
or
or
jb
sub
jae
fidivrs
ffree
out
out
cmpsl
mov
inc
lahf
ret
divps
add
push
je
mov
jnp
lcall
gs
xchg
mov
repz
inc
sbb
leave
fdivrs
xorb
lods
push
jp
adc
testl
mov
jnp,pn
dec
or
xor
mov
testb
or
mov
icebp
sub
in
aas
jno,pn
stos
cmc
rcrb
idivl
pop
loopne
ljmp
das
lcall
aaa
pushf
pop
jno
cmpb
inc
insb
test
scas
sbb
es
outsl
insl
sbb
shll
aam
out
lcall
imul
push
adc
inc
ffreep
sbb
cltd
xchg
mov
inc
pop
pop
mov
xor
mov
pop
or
cmp
jno
push
testb
das
push
and
xchg
in
in
and
pop
int
sub
stc
in
lock
or
mov
and
aad
fmul
in
cmpsb
ds
lahf
test
pop
jmp
mov
fmuls
test
stos
cwtl
cltd
call
sub
ret
scas
dec
push
or
xor
mov
jecxz
dec
icebp
rcrb
sub
std
and
out
bound
cmp
cmp
sbb
test
cwtl
mov
ds
aaa
xchg
adc
loopne
xorl
stos
xlat
mov
cmp
jno
dec
aam
test
insl
inc
lahf
pop
sbb
xchg
add
fwait
mov
ds
xchg
xor
repnz
push
loop
scas
push
cwtl
icebp
pop
sub
push
cli
add
push
push
into
jmp
out
jle
xor
sub
rep
ljmp
subl
cs
mov
and
icebp
daa
adc
xor
insb
xchg
nop
aam
je
jl
mov
xor
push
ffreep
clc
fwait
sub
mov
mov
xchg
in
adc
fmulp
mov
pop
add
jp
cmp
dec
jbe
mov
leave
jno
stc
jge
mov
cmpsl
cmpsl
sub
arpl
js
dec
ds
xor
jo
leave
xor
add
mov
gs
adc
inc
sub
shlb
pop
pop
in
push
sub
les
mov
add
insl
rclb
jl
lds
pop
addr16
repz
int3
jo
add
sahf
repz
js
mov
or
jge
mov
xchg
pop
cmpsb
sub
dec
ret
push
or
fsubrp
daa
cmp
loope
loopne
lcall
adc
pop
leave
mov
inc
ror
push
jno
push
ret
adc
xchg
fwait
or
fisttpl
sub
push
fs
fwait
ljmp
inc
lods
repnz
jo
test
or
sbb
hlt
test
lock
in
pop
mov
sub
push
nop
scas
loope
pop
scas
mul
push
dec
lds
nop
enter
movsb
aaa
hlt
jmp
xchg
pusha
divb
add
cld
xor
inc
idivl
mov
add
int3
js
cmp
lea
orb
hlt
inc
fisttps
cltd
fnstsw
pop
push
xor
inc
dec
hlt
cmc
pop
out
adc
adc
fldcw
add
mov
push
and
ja
sbb
sbb
mov
roll
dec
adc
jmp
loop
or
mov
call
jmp
aad
lds
std
stos
aam
popl
lret
pop
loop
sti
push
inc
xorl
fidivrs
mov
pop
pop
lahf
xor
test
hlt
push
adc
sbb
js
xchg
xchg
ljmp
daa
cwtl
pop
push
mov
inc
mov
stc
ss
fldl2t
push
rol
inc
or
cmp
popf
lods
ficoms
clc
add
cmc
xchg
mov
jecxz
pop
jmp
xor
cmp
and
jno
pop
mov
jle
push
adc
or
in
pop
imul
mov
scas
adc
fnstcw
rcr
cmp
cli
jbe
mov
or
testl
push
xchg
mov
mov
aad
inc
fwait
dec
cmp
sub
lods
xor
rcl
dec
mov
pop
outsl
or
in
mov
adc
in
xchg
cwtl
insl
stos
mov
sti
cmp
shl
cs
push
aas
xor
fnstenv
daa
cmp
jno
pusha
inc
sbb
xlat
dec
test
or
jp
mov
and
dec
negl
xor
fsts
or
insb
neg
mov
pushf
xchg
lahf
xchg
inc
std
mov
xor
dec
cltd
dec
fdivrs
and
mov
dec
test
or
mov
cli
cmp
add
roll
push
in
cmp
mov
jge
xor
dec
mul
mov
inc
sbb
pop
pusha
adc
ds
cmpsb
sbb
mov
or
mov
lret
sub
add
pop
adc
clc
dec
jb
ja
idiv
fs
and
out
pop
cmpsl
or
mov
jno
pop
xchg
icebp
imul
lds
mov
ficomps
and
cld
aaa
in
push
fxtract
fisttpl
das
rcll
movsl
or
outsl
nop
sbbl
fisttpll
push
mov
ss
inc
cmc
mov
pop
std
dec
sbbl
mov
dec
dec
mov
mulb
xor
insb
in
sub
mov
push
dec
loop
mov
arpl
aam
or
dec
xor
loope
fisubl
ljmp
hlt
inc
idivl
out
mov
stc
push
xor
in
imul
pop
and
inc
into
push
cmpsl
mov
pop
mov
mov
dec
xor
test
daa
push
mov
arpl
cwtl
fsubp
gs
aas
jmp
icebp
mov
out
mov
sbb
cmp
sbb
loope
jle
mov
xor
mov
les
out
xor
mov
dec
popa
mov
sbb
inc
lods
pop
out
fists
xor
loope
lret
iret
sub
inc
mov
push
cld
popa
push
sub
push
inc
shll
mov
lahf
into
dec
jge
mov
ret
cwtl
sbb
aaa
hlt
lret
and
or
test
or
out
in
push
dec
xchg
push
add
cmp
shrb
mov
in
mov
shrb
mov
mov
adc
mov
lock
testb
cmpsl
fidivrs
clc
mov
adc
cmpb
mov
rorl
cmp
xchg
jp
jle
enter
dec
bound
cmp
dec
jle
jp
lea
cwtl
xor
repz
sbb
adc
imul
lcall
inc
lea
pushf
push
dec
es
inc
pop
in
or
out
jo
pop
jb
movsb
lds
repz
inc
mul
push
xor
xor
adc
loope
inc
addl
insl
je
cmp
or
mov
sahf
cltd
jb
inc
dec
inc
xor
and
movb
dec
push
aaa
xchg
or
insl
or
lahf
lock
dec
mov
xor
inc
in
stos
popa
sub
in
call
fwait
xchg
in
cmpsb
in
xchg
jg
stos
inc
popa
cmp
loope
roll
rol
pop
scas
sbb
inc
sub
dec
stos
cltd
fwait
sbb
in
pop
pop
mov
add
ljmp
pop
les
imul
adc
sub
ja
or
sub
xor
shlb
mov
lahf
dec
xor
icebp
popa
fwait
arpl
out
jmp
add
iret
inc
pushf
out
popf
jg
rcrl
dec
mov
lahf
cmc
inc
shll
imul
ret
push
inc
push
lods
sub
cmp
insb
pop
repz
lea
insl
mov
cmp
or
adc
and
push
repz
and
lds
mov
jle
jmp
or
rcl
mov
jg
jnp
ja
repz
or
sub
lahf
arpl
clc
inc
add
daa
into
cli
dec
rcrb
push
out
ljmp
dec
dec
mov
and
shlb
jmp
mov
cmp
and
dec
xor
and
inc
push
sub
add
cmpsb
stos
pushf
aad
dec
mov
push
faddp
in
js
leave
dec
mov
bound
cmp
pusha
pop
push
or
rorb
inc
std
test
fwait
in
or
cmpsl
xchg
iret
test
add
or
jp
cmp
xlat
or
mov
popa
cmp
xor
arpl
xchg
imul
les
cmp
cmp
ds
inc
ss
dec
rorl
nop
popa
xor
pop
pop
push
inc
ss
fsubr
jp
lock
xor
imul
aam
push
sarl
lret
scas
pop
decl
mov
outsl
arpl
imul
pop
lcall
sbb
adc
cmp
leave
xor
lret
ret
scas
jbe
pop
cmpsb
mov
lret
lret
mov
or
ljmp
mov
pop
shll
int
pop
dec
mov
jns
outsb
cs
add
add
jbe
stos
aad
jecxz
test
adc
add
pop
dec
iret
pop
loope
push
jecxz
scas
fcomp
add
ja
push
loop
push
stos
cs
inc
lea
mov
inc
stc
aaa
mov
popf
rcrl
cmp
or
hlt
je
out
jns
add
into
and
cmp
pop
aad
push
jb
nop
cmpsb
xchg
lods
in
cwtl
out
mov
or
push
mov
pop
loopne
mov
cmp
xor
adc
cmpsb
cmp
xchg
roll
stos
cwtl
pop
lcall
lods
std
push
popa
sahf
sub
rorl
cld
xor
out
cltd
ja
aaa
dec
les
repz
dec
mov
mov
das
and
imull
pop
lods
jl
or
stos
adc
xor
xchg
sbb
mov
mull
aas
repz
sti
cmp
iret
mov
mov
cmpb
insb
push
add
cli
pop
jecxz
cmp
sbb
outsb
test
jmp
mov
aad
rcll
adcb
add
into
nop
or
or
test
mov
in
outsb
cmp
push
or
inc
dec
xor
aad
pop
jle
push
ja
or
inc
outsb
add
push
dec
add
mov
push
sub
das
sahf
push
lea
loopne
ss
int3
lahf
test
clc
add
sbb
and
cld
ficoml
in
cmpl
outsl
and
cmc
les
inc
das
cmp
lcall
scas
fdivs
ds
popa
add
lgs
xor
jge,pn
cli
rcrb
and
add
lods
sub
dec
int3
addb
jle
test
loopne
loopne
xor
mov
push
in
loop
fsubs
mov
cmp
rcrl
fisttpll
lahf
or
dec
sub
rorb
push
sbb
and
inc
mov
mov
in
shlb
hlt
movl
xchg
out
into
mov
jl
dec
call
cwtl
cmp
shrl
fiadds
push
xchg
fists
push
aaa
pop
adc
xchg
xor
jp
adc
mov
nop
cmpsl
test
iret
mov
jns
ror
mov
adc
xchg
test
loope
mov
or
dec
ficomps
shll
popf
xchg
or
push
repnz
sbb
and
xor
imul
out
jp
mov
fbstp
pop
push
adc
into
ss
sbb
movsb
dec
xchg
loopne
out
pop
pop
aaa
test
pop
es
mov
add
ss
mov
pop
outsl
ja
xor
test
pop
sbb
leave
pop
sub
std
outsl
inc
jmp
pop
insl
rcrl
add
xchg
cld
mov
jp
fiaddl
push
xor
cs
xchg
sbb
mov
pop
add
loopne
es
sub
popa
addr16
or
mov
cmp
ss
ffreep
pop
ficoms
dec
sub
je
repnz
jmp
imul
sbb
inc
nop
sub
mov
mov
add
xor
add
test
sub
pop
fisttpll
jne
xchg
and
push
int
add
rcr
ret
lcall
xchg
ret
pop
stos
dec
push
fldt
loop
add
loope
mov
lret
xor
jbe
xchg
fs
repnz
sti
fsubs
push
jo
das
movsl
xchg
lahf
sub
xor
mov
lods
push
aas
movsl
and
xchg
scas
clc
mov
adc
sbb
pop
jg
mov
cs
fsubs
pusha
repnz
push
lret
cmp
repz
adc
insl
dec
add
pop
mov
cli
fmull
jb
xchg
mov
inc
dec
sbb
btc
lock
stos
push
cwtl
adc
sbb
jae
jecxz
mov
movsl
in
dec
xchg
movsl
aam
aas
and
jecxz
xchg
push
gs
mov
int3
idivb
sub
mov
jg
dec
ficoml
cwtl
aad
ljmp
lcall
ljmp
pop
and
dec
push
aaa
imul
push
add
add
jbe
sbb
in
les
jae
sbb
rolb
js
shl
in
mov
popf
sahf
mov
pop
push
out
jns
aas
jnp
int
mov
int
jns
sti
mulb
iret
xchg
into
xor
fnstcw
ret
lods
jmp
dec
loop
xchg
fbstp
or
and
mov
cmpsb
repnz
hlt
sahf
imul
adc
sbb
push
mov
pop
jecxz
in
mov
and
jecxz
mov
lods
dec
mov
pop
testb
mov
call
mov
mov
jns
loopne
xor
stos
cmpsb
outsb
mov
mov
adc
int3
cmp
pop
mov
je
mov
jnp
cwtl
adc
aad
movsl
cld
cmp
les
xor
ja
aas
mov
cli
out
enter
clc
verw
sbb
xor
mov
out
add
mov
add
pop
pop
add
movd
lods
lods
mov
xor
pop
in
and
ds
testl
cli
add
sub
ret
call
andb
enter
and
pop
in
decl
scas
into
and
xor
int
mov
pop
cli
lds
movb
xor
jns
add
clc
push
std
inc
das
push
pop
fnstenv
pop
test
enter
mov
adc
es
push
jl
daa
jne
fcompl
xchg
stos
mov
jg
jg
jl
fwait
inc
lret
shl
dec
mov
sarl
rolb
dec
sbb
xchg
inc
mov
das
cwtl
cmp
mov
in
or
mov
jge
jae
mov
inc
fidivrl
mov
lahf
test
rorb
test
xlat
addr16
add
sub
push
lods
ja
dec
mov
sbb
xchg
ret
sbb
ds
repz
in
int3
scas
mov
xor
and
shl
xchg
cmp
and
push
shl
mov
push
mov
dec
xchg
mov
xor
mov
lret
mov
adc
xchg
mov
dec
mov
test
fimuls
les
cmpsl
test
sbb
int
push
test
push
cli
aaa
std
fistps
lods
outsb
add
mov
insl
mov
in
in
stos
rcrb
and
out
rclb
es
pop
test
mov
and
mov
xor
enter
jg
sub
pop
sarl
pop
xlat
sub
aad
adc
pusha
leave
imul
jp
in
sub
aad
or
xor
jbe
push
pop
cld
sbb
shll
scas
pop
ret
sub
fdivrl
sti
sbb
jg
cmp
inc
add
mov
sbb
mov
imul
insb
pop
jg
sbb
xchg
in
xlat
lret
mov
in
mov
cmp
inc
scas
cmp
add
enter
int3
or
mov
jns
push
inc
pop
imul
cmc
leave
test
out
loop,pn
daa
nop
inc
aas
pop
loop
push
lahf
xor
jle
adc
and
mov
sahf
pop
imul
sahf
sub
addb
negb
mov
std
aad
hlt
notb
add
sbb
sbb
mov
push
rcll
jecxz
insb
push
add
dec
lods
loop
push
out
mov
push
jge
jb
jg
mov
std
iret
jno
ds
icebp
mov
adc
inc
or
lahf
fbstp
gs
sbb
xor
cld
xchg
mov
inc
mov
and
addr16
int3
mov
fwait
shlb
lods
sbb
push
shlb
insb
jb
sbb
xchg
and
or
shlb
jae
movsl
xchg
js
or
xchg
dec
push
mov
int3
je,pt
inc
and
and
daa
mov
cli
pop
enter
stc
pop
dec
mov
lahf
sbb
push
sub
lods
sahf
es
push
mov
sub
push
push
insl
or
adc
add
dec
daa
mov
inc
into
arpl
mov
xchg
mov
js
sbb
dec
or
sub
pop
lcall
or
js
add
push
lods
xchg
mov
mov
inc
je
add
or
imul
inc
pop
mov
filds
into
push
lret
mov
insb
ja
test
jmp
arpl
fs
in
push
mov
sub
add
imul
jns
mov
test
adc
stos
fidivl
lahf
cmp
mov
mov
clc
test
lea
xorl
xor
scas
mov
in
mov
sarb
lea
mov
mov
into
popa
in
stc
sbb
sti
jo
mov
mov
movsl
sub
pop
xor
sbb
into
mov
int3
jne
adc
divl
sti
out
sti
push
dec
hlt
mov
pop
loope
mov
mov
and
outsb
inc
mov
add
cmp
addl
sub
pop
mov
arpl
cmp
repnz
enter
jle
cmp
maxps
in
loopne
sub
jo
cld
ss
sbbl
push
jg
push
jnp
das
mov
pushf
divb
cs
in
dec
ret
call
sbb
xor
ss
outsb
in
aam
jmp
or
jge
or
dec
add
ret
popa
in
outsb
cmp
fxch
popa
test
jle
daa
jle
stos
hlt
sub
insb
nop
int3
cmp
aad
dec
cli
das
xor
pop
cmp
sbb
movsl
into
xchg
scas
sahf
out
jp
mov
sbb
xor
std
or
ja
out
ljmp
jae
mov
cmp
push
clc
lahf
mov
out
loope
lock
stos
fistpll
sbb
inc
xchg
jns
loop
inc
gs
lret
jle
push
imul
adc
arpl
out
cmc
mov
out
inc
out
mov
mov
dec
call
sbb
cwtl
dec
sub
push
mov
std
in
mov
pop
and
push
inc
push
or
fdivl
mov
cmp
ljmp
mov
pop
jo
cmp
mov
push
or
hlt
jo
mov
jnp
push
aad
dec
push
lds
inc
inc
repz
mov
into
les
subb
mov
mov
or
mov
aad
jbe
fimuls
lods
das
dec
mov
inc
jl
rcr
lcall
sub
aad
mov
outsl
xchg
push
xchg
out
mov
insl
pop
sub
or
mov
fs
hlt
inc
and
xchg
in
xor
int
ss
orl
mov
cmp
in
or
stc
sti
xor
and
jl
jbe
hlt
rcll
xchg
iret
xchg
cli
add
add
jo
jmp
psubw
pop
rcll
pusha
inc
pop
mov
iret
dec
adc
test
cmpsl
ds
cmp
pop
movsl
ja
stc
fcmovne
xor
mov
jecxz
shrl
jae
xchg
or
inc
lret
jg
icebp
out
xor
stc
push
ss
mov
jo
mov
inc
add
push
cmp
dec
pop
stos
sahf
mov
addb
or
sahf
xchg
jne
add
lock
xchg
fdivp
cmpsb
adc
aaa
in
loop
cmpsb
push
and
ds
push
int
dec
mov
test
inc
mov
xchg
sub
shl
or
cmp
dec
mov
scas
gs
mov
xor
sbb
ja
cltd
movsb
sbb
cwtl
mov
aam
aad
pop
sahf
std
mov
pop
pusha
push
sti
inc
jge
push
cli
fdiv
xor
mov
fldl
inc
imulb
sub
xor
les
aad
jge
rclb
cmp
nop
test
pop
jb
pop
dec
add
jo
lcall
adc
jns
pop
fldenv
adc
fxch
mov
ljmp
jno
imul
jl
and
inc
cmp
or
inc
or
or
fisttpl
jns
push
dec
shlb
loop
hlt
outsl
sub
jne
xor
out
sarl
mov
adc
inc
imul
pop
fiaddl
repz
cwtl
mov
mov
sbb
dec
scas
xchg
add
jnp
out
sbb
mov
pop
cmp
push
xor
ror
mov
movsb
cmp
mov
xchg
sbb
jb
xlat
outsb
dec
hlt
or
jae
jmp
jns
xchg
pop
aam
and
hlt
scas
mov
in
cmp
xchg
addb
mov
nop
fisubrs
je
test
jae
nop
lret
std
cld
pusha
inc
lcall
andl
mov
stos
sub
ja
dec
loopne
jge
dec
inc
push
add
adc
and
int
pop
movsb
mov
push
sbb
jmp
mov
mov
mov
mov
push
scas
sub
add
in
or
pop
xor
incl
mov
insb
repnz
dec
decb
mov
inc
pop
call
push
in
data16
push
mov
push
cmp
mov
or
add
clc
push
and
cmpsb
xor
mov
or
lret
adc
dec
cld
and
xchg
fwait
pop
fisttpll
inc
mov
xorb
cmp
mov
icebp
mov
lret
or
arpl
aam
push
daa
pop
js
fcomi
sbb
mov
and
push
lcall
sbb
or
xchg
pop
mov
idivb
loop
movsb
aas
push
adcb
ljmp
out
sub
iret
and
iret
xor
ss
xor
and
hlt
mov
mov
jge
test
test
cwtl
out
cli
cmpb
pop
movsl
and
or
cmp
cmp
inc
lods
and
pushl
jns
cmp
clc
test
je
adcb
dec
jae
data16
xor
mov
cmp
gs
cmp
enter
rcrb
adc
xor
dec
sahf
test
loopne
aas
inc
fistl
out
sub
aad
mov
inc
and
dec
sbb
fidivl
adc
xor
jge
jmp
test
add
aad
in
jle
sub
push
mov
mov
push
jle
scas
imul
xchg
aam
loopne
dec
ja
into
xchg
std
lds
mov
cli
nop
push
fbstp
stos
mov
sub
ret
outsb
rcll
cmpsb
imulb
and
call
test
dec
subb
xchg
mov
lcall
xor
mov
cmp
mov
sub
push
add
push
xchg
dec
in
hlt
rol
aad
out
imul
negl
xlat
movsb
leave
jno
into
outsl
sahf
push
mov
cmp
xor
adc
jb
mov
sub
xor
iret
add
cmp
xor
push
lcall
xlat
xor
mov
stos
push
adc
jle
fidivs
and
and
bound
sub
mov
and
xchg
and
inc
das
pop
shl
mov
fistps
push
and
push
stos
repnz
xor
in
stc
or
mov
or
or
aad
jbe
ds
inc
sahf
push
js
movl
xchg
movsb
jg
and
lahf
ret
pop
sbb
mov
icebp
mov
clc
inc
dec
push
cmc
or
in
fistpl
cmpsb
jg
mov
jo
and
ja
jge
and
dec
pop
xchg
divb
lods
lods
inc
in
inc
mov
popf
cmp
pop
xstore-rng
cmpsl
inc
adc
fwait
adc
cmpsb
sbb
add
leave
std
or
std
inc
in
dec
xor
xor
and
into
stc
pushf
lahf
cmp
sbb
lock
dec
stc
jp
pop
out
outsl
sub
mov
shlb
mov
std
mov
inc
xor
bnd
stos
add
insb
inc
or
and
and
inc
rorb
xlat
out
inc
or
popf
sub
push
subl
mov
sub
and
xlat
add
pushf
roll
jmp
rorl
into
rorl
add
sti
mov
rcrl
das
test
add
adc
pop
xchg
fucomip
jl
shr
stos
scas
or
lahf
or
ljmp
jge
clc
lcall
daa
add
loop
dec
stos
cmp
sti
fists
pop
fwait
std
ret
cmp
addr16
ja
repnz
je
jg
out
adc
jg
mov
pushf
fmull
ljmp
mov
pop
sub
jbe
gs
enter
sub
sbb
cs
dec
mov
or
mov
pop
xor
insb
add
xor
adc
daa
mov
mov
js
mov
or
cmp
roll
je
cmp
jmp
imul
push
xchg
and
inc
je
movsb
cmpsb
cmpb
jnp
inc
mov
adc
dec
sub
insb
lods
push
jo
sahf
xchg
cmp
clc
lock
and
daa
pop
sbb
loope
xor
pop
add
xor
pop
mov
int3
dec
cld
inc
add
pusha
jmp
jg,pt
add
leave
push
sti
insl
shlb
les
ljmp
ret
cmp
cs
cmpsl
dec
out
into
sbb
push
xor
out
fs
cmpsb
mov
sub
loope
lcall
sub
scas
xchg
lahf
insb
inc
jo
popf
inc
cmp
fwait
mov
sub
mov
cmp
mov
or
cmp
inc
xchg
and
pop
std
scas
fisubs
lret
sbb
fbld
rolb
dec
fsubr
lods
repnz
xor
addr16
sti
add
pop
or
jno
push
not
sbb
lods
scas
testb
std
mov
pop
xchg
hlt
fistpll
out
xor
inc
es
inc
add
sub
mov
dec
fnstenv
fldenv
aas
das
lock
xchg
pop
or
xchg
in
repz
outsl
icebp
push
in
rorb
mov
lahf
xchg
ret
and
pop
pop
sub
pop
adc
cmp
dec
daa
cmp
call
lret
mov
sahf
nop
imul
fadd
pushf
outsl
rcrb
int
push
inc
fwait
mov
inc
mov
fdivr
lret
insl
mov
sbb
sbb
mov
push
daa
mov
push
scas
cli
int
popf
push
jle
inc
mov
and
std
imul
dec
in
call
or
and
adc
adc
jnp
and
into
lea
iret
or
cmp
mov
dec
fstl
out
lock
imul
pop
scas
divb
popf
in
fdivrs
mov
in
adc
push
icebp
xor
fiadds
mov
dec
lock
add
pop
cmp
loopne
in
mov
addl
fsin
push
in
into
mov
lds
lret
sub
xchg
js
pop
cmp
jl
sbb
pop
shll
lea
inc
shrb
insl
test
int
pop
imul
movsl
inc
and
cmp
pop
xchg
and
jb
and
shr
jg
sahf
insb
or
loopne
add
fstpt
push
pop
add
movsb
xchg
add
fldt
fldcw
mov
mov
add
sti
xlat
adc
fcomps
sub
jg
dec
sub
fisubrs
jbe
cmp
mov
jge
or
or
loopne
sbb
movsb
pop
cmp
xchg
addr16
mov
mov
inc
mov
and
mov
jnp
mov
xchg
fs
pop
push
pop
xor
jmp
fidivrl
sbb
xchg
inc
inc
sub
stos
jp
flds
cmc
or
jg
stos
cld
cwtl
sti
insl
add
sub
push
fucom
jecxz
cmp
and
mov
in
sbb
push
fstpl
mov
in
push
insb
mov
dec
cld
mov
loope
les
inc
repnz
cmp
push
xchg
mov
push
repz
call
push
test
cmp
mov
pop
cld
and
popf
insb
dec
pop
lods
xchg
mov
and
test
mov
stos
jp
lcall
cmp
arpl
push
popf
int
orb
or
pop
xor
add
ljmp
sti
mov
lret
ret
pusha
adcb
jo
imul
pop
das
pop
int3
cmp
sbb
mov
jge
xchg
jo
xor
sub
outsb
add
push
inc
js
push
insl
aad
dec
sub
mov
in
mov
pop
push
sbb
pop
repnz
xchg
sub
lahf
outsl
pop
add
outsl
imull
and
mov
outsl
mov
cmpsl
inc
adc
pop
sbb
mov
inc
fs
mov
scas
xchg
dec
nop
test
repz
fwait
das
or
mov
loope
bound
call
test
lret
in
add
and
push
dec
sub
xor
or
mov
out
push
xor
mov
push
out
jg
enter
insb
cmp
fldt
es
shll
mov
xchg
push
popa
jnp
lods
imul
out
movsl
imul
js
shrl
sbbl
fxtract
mov
or
lret
xchg
jge
jae
or
cmp
mov
add
movsb
sbb
les
cmc
mov
xlat
inc
popf
adc
inc
inc
cmp
stc
mov
xchg
cmpsl
adc
xor
jg
mov
out
sub
ret
push
inc
mov
and
fimuls
in
and
lods
mov
and
push
mov
adc
inc
jge
lods
xchg
add
or
lcall
xchg
adc
xchg
and
sub
pop
xchg
or
jl
push
shll
lds
mov
inc
jle
jne
cmpsl
jae
jo
mov
mov
sti
cmpsl
popa
mov
ret
rclb
stos
push
xor
int3
aam
fnclex
mov
sbb
adc
or
sbb
arpl
and
leave
cmovnp
in
lahf
arpl
test
jg
push
nop
or
xor
adcl
lret
cmp
jg
call
xchg
cmpsl
fimull
sti
ljmp
outsb
pop
lahf
jg
add
sbb
xor
insl
and
xor
arpl
call
cmp
dec
fidivrs
lret
pop
pop
addr16
pop
push
xor
jecxz
dec
sbb
xchg
xchg
cwtl
fadd
into
sahf
shll
in
enter
push
pushf
add
adc
mov
sbb
and
cmp
push
repnz
movsl
arpl
es
dec
sti
add
pop
mov
cmc
stos
adc
push
dec
fistpll
mov
pop
mov
mov
popa
out
arpl
pop
xchg
xor
xor
imul
pop
ja
rcll
sub
mov
ret
movl
mov
inc
adc
pusha
pushf
stos
cld
mov
sti
inc
fcmovne
push
mov
je
out
iret
stos
mov
rol
inc
and
cli
fsubrs
push
popa
xchg
pop
test
sub
sahf
rol
addr16
cli
das
mov
cmpsb
lea
cli
ljmp
scas
js
mov
push
xchg
mov
ja
sbb
sbb
fisttps
dec
lcall
mov
js
jne
jp
mov
xchg
xchg
lock
xchg
xchg
dec
cmp
xchg
push
cltd
cmpb
push
mov
hlt
jmp
mov
outsb
mov
cmp
pop
rorb
adc
stos
adc
ret
cmpsl
push
cmp
jae
pusha
cmpb
popa
push
mov
and
jns
das
sbb
xchg
shl
lds
rcrl
pop
loope
daa
outsb
rcll
push
cmp
popa
sub
ret
lods
into
pop
push
sbb
dec
adc
cltd
push
inc
pop
sub
push
icebp
mov
xchg
add
cmp
les
push
or
pop
xchg
sub
mov
push
inc
outsl
ret
xchg
cmpsl
pop
push
xchg
inc
dec
push
sbb
mov
jg
mov
mov
push
dec
loop
mov
ja
push
popa
mov
mov
aam
adc
int
and
in
push
bound
jecxz
and
jns
and
cs
adc
adc
xabort
sbb
mov
rcll
shlb
xlat
mov
fcomp
pop
in
repz
pop
insb
dec
repnz
inc
mov
movsl
lret
cmp
mov
jbe
xchg
popa
xchg
xchg
mov
out
cli
pop
and
and
pop
jbe
or
add
sub
addl
ja
lret
xchg
stos
inc
adc
imul
inc
outsl
popa
xchg
dec
jge
pop
out
sub
aam
add
les
js
mov
jmp
subl
sbb
add
or
mov
pop
add
stos
stos
cmpsb
jecxz
call
jns
add
orl
mov
mov
fists
mov
fidivs
sahf
jns
test
bound
mov
pop
lret
xchg
testb
push
mov
mov
dec
or
mov
lds
cmc
dec
fwait
out
inc
add
mov
jp
orb
inc
idivl
test
call
popf
sbb
nop
adc
stos
xchg
lock
and
nop
inc
and
mov
jbe
fcoml
push
repz
inc
fwait
sbb
jp
pop
lock
out
insl
push
clc
mov
adc
jns
dec
scas
imul
call
fistps
sub
or
xchg
fdivr
lods
movsl
cmp
cmp
arpl
cld
fldenv
or
popa
pop
imul
mov
pop
lods
jo
cld
clc
aas
mov
scas
jmp
call
scas
cmp
xor
dec
test
lcall
mov
mov
aas
cmpsb
sub
jno
hlt
inc
dec
mov
cmp
mov
sbb
jns
lods
repnz
aam
push
dec
push
fwait
jg
push
cli
cmc
lock
xor
xchg
sub
adc
add
xchg
ja
fcomi
out
cmp
mov
cs
jno
loop
movsb
imul
mov
orl
mov
inc
ds
xorl
lds
push
mov
insb
sbb
movsl
lods
jo
add
push
xchg
mov
flds
cmpl
xchg
xor
pop
sbb
sbb
sub
xor
add
xchg
jbe
mov
lcall
cmp
mov
dec
lods
iret
in
xor
sub
mov
jne
negb
or
pusha
lahf
mov
jns
and
xchg
jl
cmc
and
sub
push
push
dec
jne
push
imul
xor
xor
inc
lea
lcall
and
in
jmp
adc
in
fldenv
stos
and
ffreep
arpl
pop
cltd
sub
xchg
push
sub
pop
stos
repz
cmpsb
arpl
daa
jns
inc
and
cmc
scas
daa
es
clc
fsubrl
inc
push
lcall
push
inc
clc
mov
pop
subb
out
add
and
loope
movsb
jl
repnz
push
out
dec
xlat
xchg
scas
in
inc
and
jl
clc
push
inc
mov
and
xchg
sbb
lea
enter
int3
repnz
or
test
iret
xchg
ret
pop
jae
lret
fldpi
inc
addr16
mov
bts
jb
cmp
out
sbb
xchg
jl
lds
jns
pop
idivb
xchg
xor
cs
stos
mov
movb
aad
inc
sbb
add
jge
sub
imul
or
cmc
aad
loop
push
push
hlt
andb
cmp
dec
mov
mov
addl
loope
xor
mov
adcl
lods
xlat
stc
pop
fcmovnu
push
pop
pop
mov
mov
push
mov
lcall
and
dec
fistl
outsb
push
into
mov
jb
sbb
mov
or
sub
xchg
inc
pop
xor
sbb
pop
sahf
push
inc
mov
mov
jge
pop
xor
test
das
pop
aam
cmp
ljmp
add
sub
test
out
sbb
shl
movsb
mov
pop
pop
loop
stos
outsb
bswap
bnd
cmc
mov
and
adc
fwait
adcb
mov
sub
cltd
xchg
mov
pop
mov
push
push
mov
dec
mov
std
int3
mov
das
xlat
jmp
add
pop
ret
mov
sub
push
js
lods
cli
push
in
test
cmp
mov
cmp
sti
sbb
lods
pop
ret
dec
dec
sub
or
cmc
sti
xor
shlb
pop
xor
push
fxch
aaa
scas
pop
push
push
pop
xchg
cmp
sub
xchg
rolb
repnz
pop
fildl
xchg
rorl
adc
mov
cwtl
scas
jp
push
lret
pop
sbb
aas
cli
aam
adc
ss
pusha
mov
mov
cmovne
js
hlt
clc
lcall
js
repz
mov
inc
pop
jo
or
xlat
mov
adc
mov
mov
mov
adc
lods
adc
push
xchg
mov
lods
insl
jg
fcomip
cmpsl
test
dec
or
aas
pusha
ja
shlb
sbb
lds
dec
mov
in
mov
js
push
ljmp
jne
or
scas
xor
mov
cs
push
ja
jns
adc
out
jmp
popf
in
sub
push
pop
shr
push
jns
bound
cmp
sub
in
mov
jae
dec
sub
scas
fiadds
sti
call
cmc
aam
into
iret
sbb
mov
and
xchg
out
dec
xor
sub
lea
jge
inc
sbb
pop
fcompl
mov
sub
mov
or
fsubs
or
and
inc
pushf
mulb
cli
rorb
jns
mov
push
lea
push
cld
and
cli
insb
mov
std
popa
out
clc
push
mov
mov
jbe
push
jecxz
iret
outsb
stc
fstp
and
hlt
fst
lods
scas
adc
sub
or
and
push
jb
jo
fs
mov
jl
pusha
ret
pop
in
jnp
in
lahf
lcall
pop
arpl
loopne
test
hlt
fbstp
cmp
popa
icebp
cs
addr16
sub
mov
sub
push
insb
dec
xchg
sbb
pop
sub
xchg
es
notl
sti
mov
mov
enter
adc
push
cmpsb
repz
mov
xor
iret
aas
sub
sbb
cs
cmp
jge
in
push
xchg
outsb
lock
negb
call
sahf
das
xchg
repnz
mov
adc
mov
ret
and
xchg
int
lods
testb
sub
scas
cmp
inc
xor
in
add
mov
jmp
dec
push
mov
int3
add
xor
adc
and
jnp
mov
in
fists
push
repz
adc
fucomip
mov
pop
inc
xor
sub
arpl
cmp
xor
sti
test
mov
mov
pushf
dec
lea
xchg
cmp
pusha
mov
mov
arpl
push
pop
mov
pop
cltd
scas
adc
adc
dec
arpl
ljmp
stos
leave
dec
xchg
dec
jle
sub
mov
ret
gs
mov
scas
xor
faddl
pop
cmp
leave
mov
pop
popf
sub
in
dec
mov
xor
sbb
push
fldl
mov
lods
xor
mov
jns
fldcw
aad
aad
mov
in
clc
adcl
jnp
aam
stc
ljmp
lret
or
dec
popa
xchg
int3
sub
xchg
aad
dec
ljmp
and
mov
mov
out
je
xchg
sarl
jnp
pop
xchg
add
and
das
lods
push
pop
mov
sbb
pop
push
dec
pusha
icebp
push
out
rcl
shlb
jmp
adc
popf
add
scas
pop
mov
lcall
cmp
fsubrl
hlt
jp
sub
rorb
lods
jecxz
fwait
mov
ss
mov
ret
imul
xor
icebp
dec
mov
rcrl
push
test
std
inc
push
movaps
jae
fsubrp
push
dec
das
push
or
push
fwait
rcrb
sbbl
out
popl
dec
out
enter
mov
dec
add
inc
fisubrl
adc
aad
mov
dec
mov
cmp
stos
das
shrb
mov
push
or
pop
enter
xchg
push
push
adc
mov
repnz
sub
out
outsl
add
mov
cmp
scas
andb
jnp
pop
jbe
mov
stc
mov
cmp
xor
rcll
pop
xorb
sub
and
in
or
lret
in
inc
jge
je
movl
adc
add
scas
sbb
inc
emms
pop
pop
jl
mov
testl
sbb
jl
hlt
and
outsb
out
in
pop
jns
imul
les
add
or
jle
add
rolb
or
inc
mov
movsl
stos
fidivl
or
inc
lret
pop
add
dec
push
add
sub
mov
mov
fwait
sbb
int
out
scas
insl
shl
mov
cltd
mov
lock
les
or
sub
in
jae
and
push
notl
xchg
inc
pop
jl
mov
and
cmp
jb
jo
les
inc
shl
mov
fwait
std
bound
jmp
inc
push
mov
mov
insl
push
hlt
scas
sub
cmpl
xchg
sub
xor
out
aas
sbb
leave
push
imul
sub
mov
mov
mov
rorl
pop
in
adc
sti
sub
scas
jae
lea
sub
mov
and
mov
adc
dec
test
subl
fwait
daa
sub
mov
sbb
add
ds
mov
lods
dec
lahf
int3
dec
and
jl
or
cs
dec
push
mov
daa
mov
mov
push
in
in
mov
xor
sub
or
mov
cli
nop
leave
and
cmpsb
mov
add
sbb
pop
or
push
or
sahf
aaa
stc
push
add
mov
mov
push
imul
or
xor
arpl
jecxz
jo
dec
hlt
lods
adc
into
adc
out
mov
stc
mov
cmp
and
mov
mov
lods
in
in
ds
push
data16
or
cmpb
xor
push
arpl
fisubrs
mov
and
cmpsl
ja
outsb
imul
mov
cld
loop
mov
cmp
rclb
loopne
jno
in
scas
mov
mov
sti
cmpsb
dec
cmp
outsl
cmp
outsl
sbb
and
outsl
pop
mov
xor
sub
pushf
loopne
mov
push
dec
lret
pop
lds
adcl
add
and
pop
popf
mov
and
xor
and
push
icebp
mov
popf
push
mov
cmp
stc
xchg
frstor
aam
mov
paddq
jbe
cmpsl
in
dec
xchg
adc
pop
dec
jnp
mov
or
push
xchg
sbb
sub
pop
pop
adc
int
xor
xchg
cmp
lods
xor
jp
repz
imul
xor
les
add
loop
je
xchg
aaa
cltd
xor
mov
jp
std
xchg
in
sbb
add
jmp
ljmp
aam
in
xchg
adc
add
mov
fmul
repnz
out
aas
inc
fwait
mov
mov
dec
and
and
cs
cmp
dec
call
add
add
pop
dec
mov
repz
mov
push
mov
and
shl
cld
xchg
jmp
fcomps
sbb
ljmp
in
dec
cmp
and
push
movsl
sbb
xchg
insb
mov
shr
out
sub
mov
pop
hlt
fs
cmpsl
add
cmpsb
mov
mov
movsl
xchg
test
dec
cmp
in
or
and
enter
mov
cmp
arpl
sub
in
xchg
xor
pop
pop
xchg
mov
push
jle
xchg
out
shlb
negb
inc
push
lahf
xchg
in
repnz
test
stos
loopne
fisubl
cld
int
or
mov
push
adc
push
mov
mov
out
and
rolb
cmp
mov
jp
xchg
xor
xchg
inc
outsl
clc
xor
jbe
lock
into
xchg
bound
outsl
and
inc
push
out
jmp
out
aas
pop
sub
gs
inc
xchg
cmp
push
mov
daa
clc
scas
cmc
popf
insb
sub
mov
add
shlb
ret
mov
push
mov
push
pop
pop
cmpsl
xchg
or
js
leave
out
jo
pushf
mov
mov
adc
inc
mov
mov
subb
mov
sar
call
syscall
inc
jg
push
nop
xor
int
add
sbb
jo
nop
adc
fistpl
xchg
or
mov
lret
popf
hlt
xor
out
pop
fldl
lods
in
ret
int
sbb
fwait
sbb
mov
jb
pop
jp
lcall
adc
out
sbb
mov
or
lret
scas
out
gs
pop
orb
mov
stc
and
test
push
xchg
mov
shr
push
rcrl
repz
loop
pusha
test
sbb
rolb
add
add
push
cmp
and
cmp
leave
cmp
ljmp
pusha
into
sbb
cmp
lret
dec
movsl
sbb
jo
cli
adc
popa
pusha
pop
fdivrp
inc
int
jb
lock
cmp
fwait
dec
mov
fcoms
mov
addr16
xor
xor
shlb
shlb
push
sbb
out
outsb
cmc
mov
test
push
shl
imul
aas
lock
addr16
push
and
and
popf
mov
stc
inc
ret
pop
xchg
pop
add
dec
cmpsb
jae
adc
sbb
repnz
aas
xor
ret
fisttps
mov
shll
xlat
les
jecxz
push
sbb
pop
xchg
les
rolb
call
cmovb
sbb
stos
sbb
cmp
je
out
cmp
mov
fnsave
add
decb
movsb
int3
leave
xor
sbbb
aas
scas
cmpsl
cli
std
inc
cmpsl
sub
movsb
xor
addb
mov
and
lock
and
add
dec
shl
int3
out
cltd
mov
sub
test
push
imul
xchg
cltd
sbb
enter
insb
xchg
jb
in
mov
or
rclb
outsl
mov
sub
jne
cmp
call
jno
mov
jg
xor
outsl
xchg
cmp
mov
pop
adc
mov
es
sub
std
rcrl
shl
fldl
adc
fsubrs
andb
enter
mov
int
popa
sub
and
jmp
jo
in
mov
fiadds
xchg
out
ja
out
inc
imul
mov
sub
push
fisttpll
icebp
test
or
cli
stos
xor
ret
pop
fwait
popf
mov
dec
test
jno,pn
imul
sbb
lahf
add
mov
sub
cmp
xlat
imul
mov
mov
rsm
push
fwait
jo
mov
xor
sub
insl
lea
js
xchg
gs
add
jnp
mov
test
jns
jmp
xor
and
add
fldt
sub
xchg
loop
sub
xchg
fs
fsts
and
call
and
fstpt
adc
popa
mov
xor
push
ljmp
movb
loopne
inc
mov
mov
rolb
setae
pop
pop
sbb
dec
subb
push
xor
mov
mov
sub
add
clc
xor
pop
cmp
arpl
jne
fst
mov
push
jnp
add
imul
in
add
mov
sbb
cmc
xor
mov
mov
jno
pop
cmp
icebp
xchg
cmpsl
and
dec
hlt
xchg
outsb
pop
adc
or
lods
pop
sub
in
pop
push
cmp
addl
movsb
imul
aam
and
loop
data16
loopne
loop
inc
insb
or
xchg
test
or
lret
stc
cltd
sbb
daa
push
jle
repz
shll
dec
mov
inc
xchg
scas
sub
xchg
inc
xor
insb
push
movsb
cmp
ret
push
and
fbld
mulb
push
insb
cmp
imull
cwtl
popf
mov
shlb
enter
insl
sub
test
loop
and
and
jmp
push
and
popf
in
cltd
jg
out
or
mov
push
xchg
add
bswap
adc
cmp
pop
rcl
mov
mov
lods
stos
cwtl
adc
push
add
or
scas
xchg
bound
shlb
mov
mov
rol
fbstp
inc
adc
sbb
sar
test
push
movsl
daa
add
roll
addr16
fistpll
xchg
imul
push
js
dec
inc
mov
lcall
add
je
push
xchg
bound
sub
cs
shl
outsb
push
push
cli
popa
jecxz
mov
test
cli
in
pushf
sbb
jb
rclb
orl
and
popf
jns
addr16
dec
leave
jecxz
xchg
lahf
jge
xchg
in
sahf
outsl
mov
push
ljmp
icebp
imul
mov
jmp
rolb
decl
lgs
adc
or
pop
es
push
addr16
cmp
rolb
out
jno
jp
inc
and
in
sarb
daa
roll
int3
bound
insb
pop
gs
out
mov
pop
and
pop
sub
adc
shll
outsl
jbe
xor
inc
sub
mov
push
js
dec
push
idiv
hlt
add
and
adc
pusha
sub
pop
fldl
xor
gs
sbb
jecxz
add
pop
xchg
mov
cmp
fisttpll
shl
mov
push
lods
dec
jb
and
das
int
sbb
mov
inc
and
out
add
mov
pop
stos
test
xor
pop
inc
into
out
xor
and
adc
jg
dec
sub
ret
fistpl
addl
jmp
fsubl
stos
xor
loop
gs
cmp
push
jmp
sbb
addr16
ljmp
push
aad
cmp
test
insl
cmp
dec
iret
add
push
nop
pop
adc
jl
pushf
mov
jo
xchg
add
push
in
mov
jno
nop
xchg
daa
xchg
and
rolb
scas
into
xor
and
add
xchg
xor
sbbl
push
cmp
push
popa
je
mov
fildl
or
rcrl
xchg
daa
pop
mov
sti
mov
stos
or
scas
and
outsb
shlb
add
sub
jbe
aam
jbe
push
inc
mov
insl
fisttps
xor
insb
inc
rol
aad
into
clc
clc
inc
icebp
dec
ds
jg
mov
les
xchg
pop
mov
and
ret
dec
loopne
dec
inc
andb
rorb
mov
inc
jns
and
out
sub
in
add
fnsave
fistps
rcr
jg
std
mov
and
movsl
mov
rcrb
insb
out
inc
test
xchg
push
mov
lods
fwait
sarb
add
mov
cmp
out
xchg
sahf
jp
or
xchg
mov
push
lret
cmp
rol
inc
inc
test
test
int
sbb
add
addr16
lock
outsl
sbb
dec
push
outsl
adc
and
ljmp
mov
decb
loopne
mov
lret
insb
push
ficoms
addl
mov
loope
mov
cmpsl
jnp
push
inc
andl
es
pushf
ss
mov
mov
dec
addr16
dec
inc
dec
int3
movsb
add
lret
aam
lret
movsl
mov
mov
xor
add
pop
or
dec
bound
pop
std
mov
mov
mulb
in
jp
pop
sahf
jge
aam
out
mov
or
lock
push
jmp
fdivrl
inc
icebp
inc
sbbb
pusha
add
bound
test
movd
sbb
sub
je
stos
jge
mov
jge
out
fstl
cwtl
xor
cmpsb
pop
addb
add
imul
jo
clc
sbb
mov
std
test
sahf
push
mov
mov
inc
adc
repz
filds
xor
xchg
push
mov
inc
add
jmp
imulb
fistpll
sarl
int3
mov
push
jg
dec
and
test
movsb
inc
orl
aad
insb
dec
pop
push
popf
dec
or
and
mov
lcall
mov
pop
movsb
cmpxchg
dec
scas
sub
mov
mov
cmp
js
sub
dec
adc
adc
outsl
testl
pop
cmpb
push
das
enter
inc
insl
push
mov
leave
imul
mov
int
cmp
jle
inc
sbb
and
pop
pop
jecxz
jge
cwtl
es
imul
sub
lret
popf
jne
or
shll
add
repnz
push
pop
lret
je
das
add
push
and
and
mov
push
ret
rolb
xchg
jnp
cs
jb
sbb
and
push
rcr
in
rcll
push
divl
dec
cmc
test
mov
cltd
in
out
ja
fcomps
int
dec
jne
ljmp
jl
leave
cwtl
popf
inc
and
dec
nop
fs
mulb
out
enter
icebp
add
dec
aaa
nop
jmp
adc
jecxz
shrb
mov
into
enter
cmp
pop
mov
fs
sbb
xchg
inc
das
popf
int3
popa
adc
scas
mov
jnp
and
test
fsts
pop
out
inc
lock
cmpsb
jl
or
cs
bnd
das
das
push
lret
les
push
jmp
push
cs
aam
or
cli
add
pop
pop
push
mov
ljmp
inc
inc
mov
stos
je
push
mov
fdivp
dec
fstps
idiv
jns
and
mov
cmp
ljmp
push
shll
mov
pop
pop
mov
std
xchg
pop
push
add
and
hlt
dec
test
xchg
lea
inc
loop
jmp
fists
and
pop
sub
mov
push
cld
int3
in
mov
mov
int
cs
sub
jb
sahf
jno
repnz
add
sub
pop
or
pop
cmp
ss
testl
or
cli
incb
fnsave
aam
in
xchg
pop
and
jb
add
adc
call
xor
push
xchg
jo
xchg
mov
and
pop
iret
jae
scas
mov
adc
push
cwtl
loope
jno
xor
stos
mov
iret
js
add
shr
std
dec
sub
add
ret
inc
fscale
stos
inc
flds
hlt
jg
popf
cli
lods
mov
sarl
das
pop
push
insb
cmpsl
pop
pop
adc
xchg
insl
mov
push
mov
cld
pop
dec
jge
jmp
sbb
xchg
enter
jo
cltd
or
mov
test
jecxz
cwtl
xchg
les
add
add
xchg
mov
sahf
push
sbb
dec
cmpsl
dec
xchg
mov
lret
imul
lahf
fdivrs
dec
jmp
test
inc
inc
adc
mov
mov
out
xchg
jecxz
out
popa
dec
pusha
pop
cmp
aas
pop
mov
fwait
adc
pop
jno
shlb
js
mov
dec
or
mov
inc
xor
mov
shr
lods
loop
sarl
inc
jl
sbb
popa
mov
xor
rcl
stos
dec
or
xor
pop
add
out
sbb
rcrl
lods
inc
mov
and
pop
cmp
or
addr16
fistpl
or
mov
fstpl
or
xor
and
xchg
jge
dec
ss
pop
mov
sub
jle
call
loope
pop
cmp
add
ja
jbe
scas
repz
xchg
sub
in
cmc
or
mov
clc
xchg
out
mov
xchg
andl
clc
push
into
adc
xchg
xor
jmp
pop
insl
sbb
cmp
or
cmp
addb
inc
pop
dec
xor
jle
pusha
cmpsb
ljmp
pop
adc
adc
fmuls
inc
vpcmpgtb
inc
pushl
pop
out
pop
leave
pop
cmp
test
jnp
mov
sbb
sets
repnz
dec
in
rcl
stos
in
xlat
mov
negb
out
xchg
jb
mov
push
aam
sarl
mov
stos
pop
outsl
or
ja
ljmp
mov
out
mov
mov
cmp
mov
dec
add
mov
loope
std
add
arpl
outsl
fbstp
pop
ret
sahf
jns
adc
push
pusha
mov
pop
fs
frstpm(287
int
pop
xchg
dec
jl
xchg
stc
je
mov
jmp
xchg
ljmp
jbe
aam
addl
out
movsl
mov
das
fisubrl
lret
out
in
pushf
xor
jno
pop
sar
loop
repz
jns
test
sub
xor
jmp
leave
dec
in
xchg
cmpsl
shlb
mov
pop
out
daa
fisubrl
xchg
push
in
cmp
cmp
bound
mov
mov
lahf
outsb
add
sub
cmpsl
loope
jecxz
xchg
cmpsl
fildl
add
sahf
adc
repz
jns
and
add
fidivrs
out
outsb
add
and
lret
mov
adc
ret
or
xor
push
fwait
push
xchg
jae
mov
rolb
mov
pop
lret
inc
add
ss
sbb
ds
fmuls
jmp
insb
jg
pop
jno
ljmp
ja
mov
mov
repnz
roll
mov
xor
in
dec
andb
cs
xchg
icebp
lahf
xchg
cmovg
sti
jnp
inc
fcmovu
xchg
movsb
dec
sub
sbb
xchg
test
imul
xor
cmp
nop
mov
shrl
stc
cmp
jnp
jg
or
and
xorb
ret
int3
cmp
dec
cmc
mov
pop
icebp
inc
ret
data16
push
sahf
mov
add
lock
int
jge
loop
pop
aad
mov
ss
cmpsl
mov
pop
xlat
mov
mov
icebp
imul
mov
push
cmp
outsb
ljmp
sub
xchg
and
or
mov
cmc
sbb
jnp
cld
push
xchg
call
mov
inc
inc
out
adc
movsb
insb
aam
inc
jg
and
outsb
sbb
insb
cld
in
sti
and
sub
int
arpl
mov
in
jg
mov
out
jo
repz
fsubl
push
imul
fnstsw
lahf
sahf
insb
cmp
push
adc
dec
xor
cwtl
enter
mov
or
stc
repz
shr
and
add
and
jns
imul
call
sti
lods
mov
movsb
ss
mov
lret
dec
lds
sbb
fs
insl
mov
lcall
mov
seta
or
orl
xorb
push
addl
fcompl
inc
mov
int
clc
aas
pop
sub
popf
rcll
pop
dec
push
mov
mov
and
pop
in
jnp
sub
sub
mov
loopne
cmp
es
cmpl
fildl
mov
sub
jp
pop
sahf
je,pn
int
pop
push
subb
out
xchg
iret
mov
mov
xor
aas
lods
jne
add
dec
pop
cmp
and
jp
pop
mov
fucomp
dec
add
and
leave
and
aaa
pop
and
movsb
jmp
stos
or
mov
lahf
loope
sub
push
popf
cli
mov
dec
push
mov
pop
pop
push
mov
jae
rclb
bound
shrb
outsl
pop
inc
push
mov
in
shlb
cmpsl
repnz
dec
pop
add
sar
dec
adc
sub
dec
arpl
dec
shrd
add
mov
sbb
ljmp
pop
mov
adc
fnstcw
mov
mov
adcb
sub
cmpsb
xchg
mov
and
push
jmp
icebp
mov
jno
sub
insl
mov
add
mov
aaa
cltd
and
sbbb
xor
test
sbb
iret
sub
test
scas
daa
cmp
adc
and
jns
pop
jmp
lock
pusha
push
pop
stos
sub
les
stos
mov
sahf
das
mov
pop
sub
sahf
pop
clc
dec
subps
fistps
push
jb
and
xchg
jnp
jno
pop
in
mov
arpl
cmp
sub
bound
ss
std
xor
sub
sub
sub
arpl
sbb
sub
xor
and
idivb
lock
fwait
leave
fdivl
popf
xor
test
in
jle
xlat
jmp
and
mov
movsl
call
fwait
mov
add
mov
enter
pushf
ret
andl
fisttpl
jae
inc
fidivl
mov
xchg
rcl
xchg
in
sub
sub
add
or
push
fyl2xp1
into
call
jge
or
fidivl
mov
mov
lods
cmpsb
mov
pop
cmp
push
adc
add
cmp
loop
dec
fsts
out
mov
mov
pop
iret
mov
test
bound
in
inc
pop
mov
xor
ds
push
cmp
pop
enter
fmul
or
xor
cld
hlt
in
jmp
sub
xlat
clc
or
in
in
jne
adc
xchg
testl
repnz
test
lahf
push
mov
dec
cmp
mov
sub
pop
js
mov
push
and
push
xorb
stos
push
das
push
sbb
out
jb
jp
xor
push
mov
in
or
je
std
sbb
pop
mov
or
shrl
sub
add
pop
adc
dec
rcr
sub
sahf
add
sub
jle
bound
in
or
inc
jge
dec
push
nop
cmp
jecxz
lcall
xchg
push
xchg
jl
dec
lret
out
mov
xchg
sbb
lods
mov
ret
cltd
sub
test
fwait
sub
or
int3
adc
out
lret
cltd
sub
mov
aad
and
mov
les
std
mov
xchg
xor
rclb
iret
sbb
cli
push
push
int
push
cltd
mov
in
stc
mov
sbb
mov
xor
das
sub
lret
cmc
fcoml
cld
int3
and
into
mov
push
pop
xchg
lods
inc
popf
mov
mov
call
pop
lods
inc
pusha
imul
lds
inc
mov
pop
or
push
test
dec
aad
xor
and
shll
cld
imul
mov
stos
mov
std
movsb
mov
dec
mov
bnd
test
push
pusha
loope
add
lret
xchg
nop
jne
cmp
stos
loopne
ja
pop
imul
in
push
shrb
lds
mov
dec
ret
push
sub
push
and
data16
fimuls
fstps
mov
shll
leave
lcall
out
push
fsubp
aas
out
dec
or
rorb
xor
rcrl
int
adc
pop
cmc
lods
into
gs
and
in
push
mov
jmp
rcll
sub
ss
leave
loope
repnz
push
not
add
pop
and
imul
subb
or
outsb
mov
add
sbb
unpckhps
ja
sub
imul
mov
dec
xor
int3
lock
repz
adc
int3
rcrl
stc
shr
xchg
js
mov
jnp
int
cltd
add
jno
cmpsb
sub
sbb
add
aam
sub
ja
mov
dec
insb
cli
jo
dec
fwait
fs
jg
mov
insl
repz
std
pop
inc
dec
mov
mov
sub
pop
fstps
mov
cmc
pop
pop
imul
xor
xchg
loopne
repnz
fadds
inc
cmpl
mov
ret
mov
hlt
call
mov
js
jl
sbb
repz
push
dec
bound
mov
xchg
loop
enter
testb
jnp
xorl
leave
movsb
cmpsl
jns
jae
jb
stc
xchg
or
and
mov
sbb
push
outsl
and
and
mov
dec
and
dec
lds
sub
push
scas
pop
xchg
scas
mov
xchg
out
sbb
jl
xor
clc
cmp
ja
or
or
inc
inc
add
push
js
add
xchg
inc
mov
bound
and
mov
cbtw
and
shlb
mov
pop
add
adc
in
sub
loop
mov
push
aam
daa
mov
int
cmp
stos
inc
fcoms
je
or
cmp
loop
lock
lds
ljmp
jp
and
in
jnp
fsub
cmp
je
jo
mov
call
xor
daa
stc
pop
add
xor
das
xor
xor
je
and
lods
mov
testl
dec
jae
sbb
cmpl
adc
sub
xor
cltd
stos
aas
xchg
xchg
repnz
orb
pop
mov
into
xchg
adc
out
jae
adc
out
jge
test
mov
dec
clc
push
or
repnz
mov
jno
push
ljmp
ljmp
mov
mov
push
cmc
pusha
mov
test
in
push
xchg
sti
ret
insb
jns
add
test
stos
jnp
punpcklbw
test
pop
insb
cmp
shl
dec
or
mov
jle
mov
adc
sub
push
addl
stos
pusha
fwait
aaa
sbb
std
cmp
stos
aas
movsb
push
jb
int
aad
xlat
ja
dec
repz
push
jmp
cmp
xchg
pop
test
nop
sti
ss
cmp
jne
cs
fbstp
push
dec
les
icebp
xchg
sbb
addl
jg
adc
shlb
dec
push
js
jge
in
les
jne
mov
mov
jecxz
cmp
ret
xchg
jp
cmpsl
dec
jnp
test
jo
and
in
popf
orl
ljmp
xorl
fstps
sahf
repz
les
daa
cmp
scas
jge
mov
imul
int
jl
sbbl
adc
ljmp
pop
imul
mov
inc
cli
push
push
sub
cmp
mov
sub
sub
adc
pop
shrb
mov
mov
push
and
and
sbb
or
gs
clc
jae
out
and
enter
cmp
clc
sbb
and
add
jp
or
cwtl
sahf
mov
aas
mov
cli
ja
or
fstps
imul
and
jmp
out
repz
sti
sub
push
stc
dec
adc
inc
aas
jmp
into
loopne
jmp
and
push
dec
ret
lahf
icebp
mov
cmpsb
test
xor
mov
cmc
clc
cmp
sbb
insl
jnp
xchg
out
xor
add
int3
arpl
xor
lahf
push
pop
ss
cmp
out
xor
daa
fldt
pop
out
xchg
jbe
mov
jbe
ja
test
cmp
cmp
xor
sbb
mov
lahf
cmp
sub
out
mov
and
sub
sub
sub
repz
sbb
adc
jae
out
jnp
mov
ja
ja
movsb
subl
je
cmp
push
scas
and
jl
jg
clts
xor
popf
add
lea
int3
xchg
mov
cmp
fwait
fs
popf
jle
outsl
rcl
mov
cltd
out
frstor
add
cmp
pop
jae
cmpsb
or
dec
js
add
aam
dec
and
movsl
lea
dec
imul
ja
clc
test
add
xchg
pop
nop
pop
jge
mov
cwtl
sub
loope
rcrb
jp
sbb
int3
je
std
call
arpl
inc
cmp
xor
or
addr16
cld
mov
popa
sub
mov
fistpl
rcrl
xor
insb
cmp
and
std
mov
jne
repnz
sbb
ss
cmp
clc
mov
or
push
sub
into
add
adc
loop
in
divb
pop
loop
mov
mov
shll
inc
cmp
shl
ljmp
loopne
sbb
pop
ret
fldl
cmp
mov
dec
and
into
push
cmp
add
dec
inc
out
fldcw
mov
sbb
push
addl
subb
pop
ljmp
add
sub
enter
inc
or
jno
mov
and
push
popf
cwtl
cltd
jo
jle
pslld
or
pop
xor
scas
mov
stc
sub
push
enter
dec
xor
loopne
icebp
mov
andb
shl
imul
pop
jmp
and
sti
ret
mov
arpl
sti
pop
pop
push
test
cmp
inc
sub
scas
cwtl
cmpsb
and
int
xchg
popa
dec
xor
ret
pop
xchg
lahf
test
sti
or
push
push
lea
push
cwtl
adc
es
and
fs
jbe
lds
push
jmp
andb
rolb
xchg
push
mov
xchg
xchg
ret
adc
jg
add
fdivrs
push
or
pushf
push
lock
in
jge
add
push
pop
sbb
push
push
jge
rorb
mov
pop
pop
inc
sub
out
mov
or
mov
sbb
mov
mov
push
fwait
mov
imul
scas
sbb
mov
ljmp
pop
mov
std
shr
cmp
sahf
int
inc
leave
or
pop
add
mov
fnstsw
add
cmp
xor
pop
rcl
inc
dec
cmpsb
xor
and
mov
movsl
ss
push
jle
and
fdiv
les
xor
sahf
nop
sarb
inc
movsl
lods
pop
fcoms
punpcklbw
sub
dec
idivb
rcrb
mov
inc
fwait
or
insb
arpl
out
js
mov
frstor
dec
ljmp
es
mov
mov
push
jo
cmpsb
sbb
xchg
test
mov
xchg
pop
stos
imul
sbb
and
adc
add
adc
push
into
into
aaa
in
mov
dec
std
leave
mov
add
rdtsc
lahf
cvtps2pd
fsubrl
orb
mov
jb
jne
inc
rorl
mov
mov
sahf
sub
xchg
cmp
dec
jns
add
std
adc
cmp
daa
mov
fildll
sbb
imul
mov
dec
jb
aam
js
mov
push
arpl
mov
jl
xor
movsb
fistps
adc
jbe
mov
stos
xor
adc
and
and
insb
bound
mov
xor
insb
mov
or
dec
leave
call
or
cltd
aaa
aas
testl
sbb
in
xlat
ror
in
mov
mov
jb
mov
add
out
mov
adc
xchg
rorb
mov
pop
lcall
mov
mov
push
outsl
int
cmc
ret
cltd
jb
out
cs
stos
movsl
add
aas
lods
xchg
pop
test
int
shll
and
push
or
add
dec
mov
cmp
jo
sbb
cmp
les
inc
xor
adc
popa
mov
outsb
pop
cmp
out
lods
pushf
mov
lret
inc
or
fucom
cmc
mov
push
clc
dec
daa
out
cmp
in
and
push
xchg
pushl
dec
jecxz
sub
in
xchg
dec
or
mov
stos
sub
sub
mov
dec
push
mov
adc
adc
rol
int3
icebp
dec
or
in
je
jge
xor
inc
lods
mov
pop
xchg
mov
std
rcrl
es
sub
iret
clc
sarl
jns
push
jg
mov
and
pop
fdivrp
jle
inc
mov
mov
adc
jb
in
inc
add
mov
push
cmpsb
sbb
cmpl
push
lahf
fs
push
or
not
jnp
pop
pop
cmpsl
nop
xor
xchg
in
and
popa
outsl
std
mov
cltd
aam
add
mov
mov
or
in
out
rol
cmp
pop
inc
jp
clc
lds
je
xchg
push
int
inc
orl
or
mov
or
push
pushf
je
jecxz
push
lea
mov
or
add
lds
enter
popa
in
or
lret
xchg
or
pop
jae
mov
fs
hlt
mov
ret
inc
dec
push
mov
add
outsl
dec
ljmp
ljmp
sub
sbb
cmpsb
mov
stos
das
movsb
shlb
hlt
das
pop
in
xor
inc
cmp
adc
pusha
outsl
repnz
cmp
popf
pop
popl
fsub
jae
jg
repnz
lret
sbb
mov
sbb
push
xor
xchg
or
sbb
into
out
orb
sbb
push
xorb
lods
fstpt
inc
lret
fsubr
shl
sbb
xchg
ret
idiv
outsl
mov
inc
and
lret
lret
cmp
ret
xor
sub
mov
mov
add
shrl
adc
dec
inc
test
sbb
scas
pop
xor
ds
jg
xrelease
adc
xchg
mov
or
pusha
pop
adc
dec
lock
push
pop
push
mov
add
xchg
push
xchg
mov
dec
add
idivl
loop
les
insb
xchg
fcoml
pop
jb
jle
in
pop
xor
fsubrl
scas
jle
js
adc
pop
add
pop
pop
xor
aad
test
js
add
mov
xchg
cli
add
stos
ret
hlt
ljmp
jl
xchg
lock
lea
push
test
not
addr16
xchg
les
into
lds
push
sbb
fwait
lret
lea
or
sub
call
subl
fwait
loop
pop
mov
push
pop
cmp
test
notl
mov
mov
cltd
adc
popa
leave
xor
jb
jae
outsb
popa
mov
mov
ret
xchg
sub
push
pop
inc
outsl
daa
adc
pop
push
mov
loope
cmp
pop
mov
pop
xchg
les
cmpsl
mov
in
xchg
fs
xchg
pop
mov
sarl
and
cmp
lock
mov
lods
mov
addr16
test
lds
mov
add
xor
repz
mov
das
xchg
push
imul
out
sti
jne
add
idivb
mov
fnstenv
subps
out
or
push
cmpsb
sti
mov
xor
shlb
insb
test
mov
int3
sub
cmp
imul
insl
movb
or
pop
lret
jle
jecxz
daa
scas
jmp
push
xchg
push
dec
cmp
mov
pusha
sarl
mov
ss
mov
mov
popf
adc
aaa
adc
xor
test
lret
in
xor
cmc
std
cmp
call
xchg
outsb
sub
sub
fsubrl
inc
lods
jne
mov
pop
movsl
jbe
outsl
aam
fdivl
dec
inc
pop
lock
ret
test
inc
and
or
mov
push
fstpl
add
cmc
xlat
push
fwait
insl
fldl
add
pop
mov
mov
inc
cltd
test
push
lret
sbb
mov
ljmp
sbb
jb,pt
mov
jbe
pop
push
and
lret
nop
xchg
ds
dec
sbb
sub
movsb
imul
lods
cli
insb
clc
dec
cld
lret
lea
xlat
xor
sbb
out
push
xchg
xchg
ret
adc
jae
mov
mov
cmpl
or
pop
das
sarb
dec
xchg
pop
cltd
inc
ret
push
daa
xchg
and
std
or
test
push
test
icebp
push
aas
test
inc
xchg
or
adc
in
push
sbb
adc
insb
insl
jl
adc
cltd
cld
push
fisubs
inc
mov
sarl
pop
das
ss
outsb
leave
jae
insb
push
out
dec
pusha
test
jb
adc
loope
shrb
testb
lods
mov
js
sub
lds
test
pop
out
or
xchg
int
lret
mov
jmp
xor
fs
lahf
repz
scas
fiaddl
in
mov
int3
hlt
and
popf
arpl
push
xchg
ja
rcll
aas
shrl
les
sbb
dec
push
pop
inc
jle
push
neg
pop
jae
dec
insl
dec
dec
jno
iret
cld
sub
sar
cmp
or
movsb
mov
dec
ret
push
hlt
inc
pushf
jo
pushf
inc
xchg
and
mov
xchg
or
mov
mov
addr16
xor
or
test
repnz
add
pop
pop
repnz
mov
stc
dec
xchg
test
pop
das
jnp
not
in
cli
cmp
fsubrs
jne
bound
sub
cmpsl
push
adc
dec
mov
test
ds
ja
xchg
sbb
stc
jb
and
push
push
jno
sub
sbb
mov
imul
fs
or
lea
mov
inc
fisubrs
xor
xchg
int3
leave
fldenv
test
das
movsl
sbb
iret
push
rolb
ret
push
inc
mov
je
mov
pop
cs
cld
jl
aad
sahf
test
std
repnz
movb
sub
jb
add
outsb
hlt
sub
lahf
bound
jmp
xchg
sti
test
sbb
out
ss
jp
or
add
scas
mov
pushw
dec
or
xchg
mov
out
or
test
mov
mov
sbb
and
outsl
leave
aam
fistl
xchg
sub
insb
inc
push
hlt
das
push
adc
fnstcw
push
mov
push
data16
xchg
mov
test
cltd
mov
into
loopne
lea
cmp
sbb
adc
idiv
jno
adc
jae
shlb
adc
add
lods
loope
pop
mov
xchg
aaa
jle
xchg
push
add
addr16
push
cltd
sarl
loope
fadd
imul
sbb
rcll
test
add
xor
fs
mov
lret
movsl
pop
inc
or
inc
push
and
fidivrl
test
mov
inc
insb
dec
jg
cmp
nop
pop
xchg
pop
mov
cmp
lock
pop
jg
and
push
fsubrs
andb
jg
rorb
int3
push
push
lods
fcomi
fcmovnb
rorb
sbb
outsl
inc
into
lret
adc
in
mov
or
pop
and
enter
andb
outsl
push
out
add
mov
xchg
int
sub
hlt
sti
or
mov
or
and
mov
fiadds
sbb
lods
push
das
dec
jecxz
test
cmpsl
stos
cmp
jg
mov
sub
mov
insl
pop
xchg
ljmp
xor
jne
inc
lea
add
fimull
incb
pop
testl
fnstenv
sbbb
cmc
sbb
adc
mov
push
jo
shll
and
push
cmp
dec
mov
pop
lods
lret
inc
jp
cmp
fbld
xor
inc
add
iret
dec
scas
outsl
sbb
cmp
testl
push
mov
mov
add
in
and
in
push
fisubrl
scas
iret
bnd
fcoml
sahf
mov
add
setbe
call
lret
nop
and
and
add
inc
inc
jge
jbe
mov
out
fisttps
movq
and
sti
dec
fisttps
adc
and
cmp
faddl
les
daa
lahf
sahf
jae
fbstp
add
stos
sub
repz
je
dec
or
sti
inc
sub
adc
jmp
nop
jbe
and
stc
pop
sbbl
rorl
fmuls
test
inc
dec
js
iret
inc
rcl
sahf
out
xchg
push
jp
cmpsl
leave
xor
lock
out
jnp
push
mov
inc
jmp
sti
mov
lcall
add
cmp
xor
aam
adc
nop
subb
lret
ljmp
insl
push
push
jecxz
out
sbb
inc
pusha
push
fsubs
je
insb
adc
pop
xor
scas
out
push
xchg
pop
pop
xchg
mov
dec
push
or
jmp
lods
icebp
cmpsb
repz
mov
inc
and
pop
xchg
dec
or
or
lods
adc
data16
or
loope
add
cltd
or
icebp
scas
shlb
int
cmp
sbb
xchg
mov
mov
adc
scas
sub
lahf
mov
inc
ds
imul
pop
movsb
stc
lret
sbb
mov
mov
lock
and
ss
sbb
std
std
lods
jns
stos
mov
and
jmp
push
fmul
cmpsb
mov
push
cmpsb
and
scas
adc
sub
adc
in
clc
and
icebp
sbb
scas
and
xor
in
cmpsl
xchg
imul
cmp
xor
adc
push
jnp
in
icebp
jne
lcall
lea
pusha
in
jo
data16
test
lret
mov
and
sub
cmp
and
add
mov
sbb
dec
ret
sbb
pop
xchg
daa
aam
xor
push
rclb
mov
pop
sbb
out
jb
loopne,pt
lret
xchg
adc
pusha
inc
and
and
mov
pushf
mov
adc
pusha
insb
adc
pushf
ljmp
imul
mov
xchg
mov
cltd
cmpb
and
insb
and
icebp
lahf
jle
leave
xchg
push
sbb
pop
ret
je
mov
adc
cmp
loopne
adc
sbb
fldcw
sub
xchg
dec
mov
and
sbb
mov
rcrb
in
inc
sbb
inc
push
adc
out
lods
scas
cmp
out
xchg
bound
adc
or
icebp
xor
les
aad
sti
mov
test
mov
lahf
sbbl
xchg
mov
lret
mov
fsub
das
cmpsb
mov
jecxz
jae
imull
fdivl
lret
mov
dec
stos
pop
mov
add
aam
adc
loop
repz
inc
inc
out
outsb
xor
cmpb
leave
movq
mov
cmp
hlt
into
ljmp
and
aas
cmp
sub
inc
pop
and
mov
popa
sub
adc
cmp
cmovs
popa
inc
sub
fistpl
fisttpl
xor
pop
into
fisubrl
xchg
pop
pop
ds
in
mov
sub
xor
in
jbe
jecxz
xchg
dec
ds
push
jb
adc
icebp
lcall
sub
pop
in
sti
test
test
push
dec
mov
push
cli
cmp
ss
fs
xchg
aad
or
loope
orl
bound
out
xchg
mov
popf
xor
inc
or
push
mov
dec
les
mov
sub
xor
dec
test
idiv
lock
cwtl
jp
adc
iret
pop
mov
int3
insb
or
mov
xor
and
clc
outsl
ror
push
in
jno
cmpsl
mov
mov
pop
bound
das
mov
outsl
fiadds
loope
lcall
cmpsl
fiaddl
iret
sahf
sti
mov
inc
lds
insb
push
jnp
adc
mov
xchg
test
mov
and
xorl
out
cltd
out
add
out
cmc
and
mov
or
aaa
jnp
fisttpll
push
dec
leave
rolb
jecxz
pop
jb
ljmp
call
inc
into
xor
xchg
xchg
jb
pop
inc
inc
fwait
lea
xchg
sarb
nop
cmp
push
pop
mov
push
scas
or
add
mov
add
lds
test
movsl
push
in
mov
aam
repnz
sahf
pop
pop
adcl
ja
test
dec
pop
out
int3
dec
cwtl
and
xor
stc
and
js
imul
sbb
rcll
fs
ja
sub
inc
shl
inc
insb
aad
dec
and
sbb
dec
xchg
mov
mov
test
in
imul
repnz
adc
insw
pop
notl
bnd
cmpb
jmp
les
enter
push
mov
mov
fstpt
rcll
fisubrl
pusha
sub
cli
fcmovnbe
pop
stos
mulb
test
iret
scas
fsubr
inc
xchg
imul
cmp
or
xchg
sbb
iret
cmp
cmp
add
xor
mov
ja
nop
cwtl
mov
fisubs
jecxz
mov
aas
cmpsl
negl
nop
pop
xchg
or
iret
ja
adcb
mov
mov
mov
cmp
daa
testb
pop
push
mov
dec
and
jo
inc
stos
rcrl
aas
outsb
xor
sub
mov
fisubl
or
cli
and
fcmovbe
mov
mulb
out
mov
leave
sub
loopne
or
sbb
inc
ljmp
fwait
lcall
pop
push
stos
pusha
lahf
daa
mov
mov
dec
inc
sbbb
cwtl
out
pop
dec
mov
ljmp
jno
in
jae
mov
mov
test
add
sahf
hlt
and
cmp
jp
adc
cwtl
add
fs
outsl
lods
dec
push
les
push
xchg
stos
insb
mov
push
mov
int3
cmp
sbb
mov
mov
stos
jle
jno
je
or
sub
ret
mov
ud2
cli
dec
dec
and
add
mov
or
xchg
leave
test
pusha
sub
sbb
into
pop
lds
int
or
pop
je
shlb
pushf
mov
loopne
inc
lock
sub
mov
mov
shll
jp
jmp
mov
rorl
mov
adc
mov
jnp
inc
push
dec
jl
xor
adc
jns
and
push
daa
test
sub
cmc
xor
test
sbb
sarl
jge
jo
push
into
and
ds
call
incb
sbb
pusha
loopne
movsl
mov
xor
mov
cltd
xchg
sti
dec
or
fisubl
cmp
sti
movsl
sbb
pop
push
jmp
xor
in
mov
push
jge
ja
or
fistl
sbb
sbb
pop
mov
or
mov
std
add
into
adc
xchg
sbb
push
sahf
sub
push
fwait
and
lods
testl
pop
pusha
repz
ficoms
mov
pop
xor
xchg
cwtl
pop
cld
ret
sub
pop
imul
nop
sbb
sbbb
aaa
or
lea
sbb
jl
hlt
call
push
popa
mov
pop
aad
sbb
push
push
sti
lret
mov
mov
addr16
jg
int3
es
sbb
jo
aam
xor
lcall
mov
xchg
mov
sar
sahf
push
sbb
inc
pop
ficompl
loope
scas
aad
iret
dec
and
js
adc
push
icebp
and
cli
mov
dec
jb
xor
mulb
fs
sub
sub
mov
mov
mov
adc
fidivrl
shrl
mov
or
dec
call
ret
out
mov
ds
pop
imul
jo
add
lods
add
into
test
jg
sub
insl
add
mov
fldcw
jge
dec
jb
fnstsw
jecxz
and
dec
jmp
aaa
add
andb
jg
add
adc
pop
mov
xor
cmp
aam
sub
xchg
jl
rcll
pop
xlat
dec
mov
leave
jb
clc
nop
pop
push
mov
jnp
stos
pop
in
aas
aaa
xor
inc
imul
mov
pop
out
iret
aad
xlat
rolb
mov
push
mov
adc
push
cli
pop
and
dec
pop
adc
mov
lods
aad
mov
imul
xor
xlat
lahf
inc
fs
mov
fwait
jne
pop
je
adc
dec
jae
fsubr
into
adc
sub
mov
or
sub
lods
push
or
adc
lods
jns
sbb
and
nop
push
out
test
cwtl
inc
add
rorl
jl
daa
cmp
mov
notl
push
imul
out
jbe
ds
outsb
inc
or
arpl
mov
lods
orb
outsb
pop
mov
aaa
jg
push
mov
iret
mov
std
lock
fs
jl
lret
adc
add
dec
pusha
popf
fnstsw
scas
ss
dec
inc
xchg
pusha
jbe
movl
xchg
cmp
xor
add
or
in
mov
push
mov
add
mov
cmp
scas
xor
push
les
add
shrb
movsl
push
pop
aas
fnstcw
outsl
dec
pop
push
mov
lds
fidivl
leave
jno
cmp
push
jae
imul
push
push
inc
stc
inc
and
sbb
push
in
in
test
in
stos
sbb
add
out
xchg
xor
sub
test
jecxz
fs
jle
xor
sub
add
std
mov
inc
imul
sbb
dec
clc
mov
test
lods
in
test
and
sbb
rcr
pop
xchg
mov
sarl
push
ljmp
add
aad
inc
or
movsl
aad
cmpsb
xor
sub
pop
mov
mov
outsb
in
fsin
push
mov
inc
rorb
nop
loopne
cmc
call
sub
xor
test
popa
ret
inc
rcll
xlat
push
shll
inc
lret
jae
addl
fstps
lods
lock
adc
je
pusha
les
push
les
and
fs
repz
lods
xorl
mov
cmpsl
cld
or
in
ret
push
stos
xchg
lds
xor
sub
push
decl
add
jmp
jecxz
push
mov
arpl
sub
popf
push
inc
dec
rorl
jae
movsb
push
stos
adc
mov
sbb
mov
fsts
sti
rcr
or
out
push
cli
mov
sub
insl
inc
cs
pop
jne
and
adc
aas
jp
mov
pop
scas
loope
jecxz
xchg
lcall
cmp
insl
dec
pop
adcl
mov
fcomp
mov
std
jge
inc
rorb
insb
mov
scas
xchg
pushf
sarb
inc
out
mov
repnz
stos
inc
cmp
mov
enter
adcl
jle
jbe
dec
adc
hlt
imul
push
inc
jno
shlb
inc
jle
push
jmp
out
fwait
outsb
dec
mov
rolb
jl
or
mov
pop
mov
or
jns
ss
adc
rcrl
in
adc
push
mov
rcrl
js
cmp
lahf
mov
mov
xor
push
loopne
rolb
dec
insl
xchg
shl
mov
mov
adc
scas
out
mov
inc
leave
data16
push
push
fsts
pop
out
mov
repz
and
dec
insb
mov
jge
in
sub
pusha
inc
aas
sub
negl
or
sub
mov
mov
push
sti
pop
idivl
dec
pop
test
arpl
jmp
push
xchg
push
lock
fstpl
mov
and
xor
xchg
pop
leave
nop
pop
repnz
dec
aas
rorb
jne
xchg
imull
cmp
stc
push
rcll
or
inc
push
adc
adc
imul
lods
xor
ror
mov
fneni(8087
cmp
and
lock
jmp
rcl
leave
inc
mov
loop
add
and
fdivrl
les
jmp
lock
dec
mov
mov
aad
adc
cmpl
cmp
jns
sbb
dec
push
push
inc
jecxz
mov
adc
or
adc
add
sbb
xor
mov
in
cmc
sbb
lock
iret
push
adc
daa
ljmp
xor
arpl
jnp
jg
in
xor
stc
ret
add
add
cmp
das
push
fmuls
adc
cmpsl
addl
jo
cwtl
lds
push
lds
push
mov
mov
aaa
xchg
fs
xchg
in
ret
sub
stos
stos
push
insl
jmp
ja
loopne
add
push
inc
mov
aaa
outsb
rcrb
xchg
xchg
dec
mov
iret
inc
rclb
imul
bound
out
test
div
cmpsb
mov
mov
repnz
fimuls
sub
fnstenv
xor
pop
dec
rcl
mov
insb
test
dec
outsl
pop
dec
insl
and
btc
sub
dec
addr16
inc
ljmp
push
fisttpll
je
xlat
mov
mov
movsb
das
inc
outsl
push
lcall
mov
rcl
jle
push
xchg
push
mov
mov
rolb
dec
icebp
mov
mov
xchg
mov
in
test
sbbb
mov
mov
fnstenv
xchg
push
enter
sub
data16
ljmp
jp
dec
subl
jne
das
out
insl
and
inc
testl
mov
adc
dec
xchg
mov
pushf
add
pusha
fcmovu
pushf
idivb
fdivrp
cli
mov
cmp
push
push
and
into
dec
pop
dec
mov
jno
add
sub
mov
xor
add
leave
jno
lret
mov
dec
je
xchg
push
aaa
leave
xlat
adc
push
xor
out
repnz
pop
jmp
jnp,pt
das
jnp
mov
adc
sti
push
dec
mov
enter
scas
push
in
out
test
and
jmp
mov
insl
mov
mov
in
imul
or
in
or
push
jb
lahf
int3
add
dec
mov
int
movsb
sti
gs
mov
add
pop
dec
loope
cwtl
jbe
xor
jecxz
push
inc
cld
sbb
scas
ds
movsl
cli
fidivrs
mov
mov
repz
incl
pop
lods
and
adc
jecxz
pop
pop
push
cmp
rclb
mov
sub
mov
mov
ret
popf
jg
and
or
sub
pminsw
jns
lret
jbe
xchg
sbb
hlt
add
add
and
mov
mov
sbb
scas
lds
mov
pop
push
dec
sarb
outsb
sti
popf
movsl
fnstsw
in
and
enter
sbb
adc
out
dec
addr16
icebp
mov
into
xchg
sbb
cmp
or
or
sbb
fistps
dec
mov
push
or
cmc
lcall
lahf
jl
test
test
mov
and
push
icebp
pop
push
in
fdivr
mov
sbb
or
jecxz
mov
sbb
cmp
clc
lock
inc
addb
call
js
xchg
xchg
and
sub
divb
or
cmp
push
cmc
add
fwait
mov
pop
sbb
arpl
lret
fcmovne
jb
sub
inc
mov
xor
push
push
inc
and
xor
cmp
xor
lock
and
sbb
js
cmpsb
inc
xor
mov
pop
pop
pop
add
mov
jmp
cmpsb
je
stos
les
movsl
jge
fnsave
push
lods
mov
inc
rorl
lock
mov
fcmovnb
dec
mov
lods
mov
push
push
bound
inc
ror
loop
test
mov
sbb
cmp
pop
lret
pop
dec
jg
cmpsb
cmp
insb
jnp
jecxz
xchg
sarb
push
lods
jno
icebp
push
mov
lret
dec
fs
aad
adc
call
pop
push
adc
loope
enter
inc
jno
xchg
lret
fwait
negb
stos
insl
xchg
insl
xchg
xchg
and
lret
lock
cwtl
mov
int3
sti
loop
fs
cmc
xchg
les
inc
and
adc
outsl
dec
into
in
sahf
insl
sbb
jns
or
outsl
daa
les
inc
or
mov
fldt
cmp
sbb
scas
jmp
xor
mov
pop
ret
outsl
inc
out
inc
sub
mov
sub
hlt
in
inc
outsb
add
dec
dec
push
sbb
inc
xchg
mov
xchg
cwtl
jmp
xor
cmp
jmp
out
in
sub
inc
mov
insb
popaw
mov
push
sar
push
cmp
std
test
into
push
and
lock
pop
sub
and
add
cmp
das
push
pop
xchg
push
stos
repnz
push
mov
insl
inc
aam
insl
jb
push
mov
sbb
pusha
andl
jns
mov
xor
in
cmp
sub
cli
cli
push
jae
imul
sub
inc
sarl
lahf
bts
cmc
lods
push
rclb
lds
or
sub
imul
adc
inc
stc
pushf
jmp
shl
idivl
cmp
out
push
xor
lret
js
pusha
cmp
test
pop
or
xor
fnstenv
push
xor
sub
orb
mov
xor
push
je
mov
ljmp
popf
push
jp
scas
dec
xor
dec
xchg
cltd
rorl
jbe
mov
stos
lods
sub
lods
std
ja
es
cmpsb
dec
clc
cmp
or
out
fcomps
pop
call
mov
pop
fwait
test
xchg
xor
hlt
fucomip
idiv
or
inc
fcmove
mov
cmp
mov
loop
jle
xchg
les
mov
add
mov
adc
stos
xchg
shrl
sahf
jbe
rcl
cmpw
push
pop
xlat
jge
pop
stos
fsubrs
pushf
scas
sahf
or
daa
loope
jmp
fcomp
cld
movsl
rorb
inc
push
mov
mov
push
cmp
pop
and
lock
sbb
cvtdq2ps
out
leave
dec
cltd
dec
pushf
ds
out
xor
loope
mov
cli
popf
shrb
fisttpl
gs
jg
hlt
divb
into
jecxz
aad
popa
xchg
lahf
das
xor
in
dec
push
jle
cli
fsubs
dec
insl
ja
cmpsl
aaa
pop
cmp
mov
in
in
movsb
lds
in
or
aad
shll
and
jo
in
mov
mov
adc
movl
rcrb
or
mov
mov
out
push
cmpsl
jle
stos
jno
sbb
std
mov
leave
aaa
push
adc
repnz
sub
cmp
xchg
sub
cmp
nop
ss
gs
mov
jecxz
test
cmp
push
xlat
adc
adc
pop
jae
jae
ret
adc
jmp
inc
in
push
add
mov
je
xchg
mov
js
xlat
dec
jo
cs
jg
insl
sbb
iret
inc
jb
cmp
cwtl
dec
push
fmuls
fsubrp
add
or
stos
popa
outsb
lret
and
std
popf
mov
push
test
idiv
scas
push
in
repz
push
repz
jl
jo
push
fwait
cmc
sbb
lahf
mov
loope
mov
cmc
and
inc
imul
lds
inc
test
and
xchg
rcrb
sbb
loope
mov
cmp
pop
xchg
sub
mov
je
add
cmc
pop
sbb
loop
test
pop
sbb
addl
sub
dec
fisubrs
mov
inc
xchg
sbb
sub
ret
ds
push
or
xlat
hlt
sti
lock
pop
mov
imulb
clc
pop
test
pop
cmp
fwait
ljmp
sahf
test
aas
inc
call
jecxz
mov
dec
or
les
mov
add
lret
push
in
int3
and
aas
repz
vpaddq
mov
sbb
fistpll
xchg
inc
adc
fcmovnbe
xor
rolb
fsubp
sub
dec
sar
and
ficomps
in
int3
add
cmp
int3
insl
sub
mov
mov
shll
pop
or
int
rcrl
sahf
pushf
scas
sub
push
push
hlt
inc
leave
add
sub
jg
sub
cmp
loop
punpckhwd
push
into
xlat
inc
std
stos
push
outsl
cmp
lods
or
fidivs
inc
ret
or
std
mov
mov
mov
add
pusha
repnz
cmpsb
cli
cmp
adc
fsubr
stos
test
sti
daa
mov
sarb
jl
or
mov
repnz
push
pop
cmpsb
nop
push
setge
mov
call
nop
repnz
xchg
or
mov
jns
push
stos
dec
flds
adc
cmp
jecxz
cmp
jl
out
dec
dec
adc
iret
cmp
and
sub
imulb
stc
test
imul
mov
scas
mov
xchg
inc
adc
inc
mov
call
xchg
dec
repnz
push
pushf
xchg
pop
cmp
add
dec
xor
mov
insb
enter
sbb
dec
adc
xor
mov
dec
movsl
pop
incl
push
inc
xchg
mov
sahf
pop
scas
or
fisttpll
inc
mov
or
mov
rcrl
jb
inc
movsb
add
dec
loop
imul
add
icebp
pop
subb
cwtl
jbe
fnstsw
outsl
mov
xchg
pop
je
jp
adc
repnz
sbb
xor
addr16
pusha
xchg
loopne
dec
xor
dec
dec
fmul
push
rcr
leave
mov
stc
xchg
mov
sbb
lret
and
mov
lret
lret
push
add
stos
inc
enter
test
js
xchg
movsl
add
add
call
pop
pop
icebp
dec
cmp
movsl
xchg
icebp
sub
call
test
mov
mov
jle
rol
or
dec
dec
stc
jb
jne
mov
arpl
clc
adc
pop
loope
aam
add
icebp
push
xchg
mov
imul
fdivs
mov
add
fcmovnu
fs
push
jp
xor
pop
mov
and
push
pop
sub
fwait
dec
add
aam
add
faddl
jb
es
js
int
outsl
or
sub
jns
push
cld
testl
and
gs
popa
mov
push
repz
and
xor
fildl
push
loop
rcrb
lret
push
sbb
lret
aaa
pop
xchg
push
inc
mov
dec
outsl
pop
mov
shlb
hlt
outsl
insl
sbb
and
repz
mov
aas
aas
lea
jmp
inc
pusha
push
xlat
bound
fnstcw
push
cltd
arpl
es
fnsave
gs
out
cltd
add
pop
add
mov
mov
mov
sub
std
call
js
xchg
push
dec
jp
je
pusha
adc
push
lock
or
inc
cmpl
adc
cmp
push
adc
inc
cmp
push
mov
sbb
fs
daa
popl
mov
ror
inc
pop
inc
std
jge
cmp
rcrl
jb
xchg
jno
cmp
mov
repz
jg
xchg
xor
dec
adc
and
int
out
and
mov
fbstp
test
stos
xor
adc
dec
stc
dec
int3
or
test
shll
mov
ljmp
sbb
inc
inc
test
std
xor
sbb
aam
inc
push
jg
or
xor
dec
fwait
andb
out
xlat
fucomip
xchg
mov
pusha
out
int3
movsl
enter
lock
je
mov
decl
punpckhwd
mov
lcall
pop
sub
addr16
xchg
cmp
sub
sbb
andl
adc
hlt
cmpsb
out
test
push
test
les
nop
mov
adc
mov
jns
bound
movsb
imul
cmp
fisttpl
imul
out
in
sub
in
and
cmp
lods
lods
push
jo
cmp
push
and
mov
ds
mov
lds
aas
repnz
dec
add
into
cld
inc
cwtl
push
xor
lock
push
cmpsl
push
cltd
xchg
in
or
jp
dec
stos
jge
fldenv
sbb
data16
push
add
aam
sub
xor
sbb
dec
lods
sahf
bound
xor
mov
popf
adc
mov
push
adc
outsl
pop
jno
push
cmp
push
outsl
jmp
xor
push
je
daa
roll
cmp
xor
hlt
dec
hlt
mov
cmp
mov
scas
int3
aaa
push
mov
aaa
push
inc
jmp
jecxz
jo
test
fistps
jmp
imul
add
jmp
mov
in
xchg
arpl
mov
vextractps
pop
push
outsl
dec
xor
psadbw
mov
cmpsb
repz
sub
push
jg
dec
sbb
movsl
add
data16
add
mov
push
fnsave
mov
outsb
gs
mov
jg
fldl
in
rol
pop
leave
lret
inc
fisubs
jae
stos
mov
jle
adc
cs
sti
loope
mov
pop
pop
rclb
js
dec
jle
fcoml
cmpsl
rcll
fwait
pop
or
adc
inc
aad
add
push
jle
pop
push
push
icebp
aaa
das
xchg
movsb
cmp
mov
sub
loopne
pop
jl
mov
in
test
and
orb
jns
pop
add
test
repnz
or
in
into
mov
xor
das
push
mov
lods
add
insl
inc
xor
ljmp
dec
pop
mov
fadds
ljmp
scas
jp
adc
popa
fucomi
repnz
mov
pop
pop
cmc
jo
mov
fimuls
mov
xor
sub
inc
sahf
lret
mov
mov
dec
dec
and
and
dec
mov
sub
mov
stos
push
dec
jge
outsl
pusha
mov
test
mov
add
js
xor
sub
scas
xchg
sbb
push
jbe
js
jl
sub
mov
movsl
mov
stos
inc
adc
cmp
mov
cmpb
ret
loopne
sbbb
inc
mov
outsb
add
and
add
mov
inc
stos
cmp
out
bound
push
sub
movsl
je
cwtl
incb
in
daa
jae
lahf
in
xchg
movl
test
lahf
cltd
pop
push
fmul
int3
js
aam
pushf
adc
cs
sbb
scas
xor
push
imulb
pusha
jge
andb
out
add
xchg
mov
fld
jp
pushf
adc
mov
add
inc
sbb
loop
lahf
js
in
add
std
fdivrp
cmp
push
adc
mov
add
cmpsb
xchg
popf
push
lretw
sbb
les
loopne
add
xchg
ss
mov
cmc
test
cld
pop
jb
push
cmp
sbb
add
jnp
inc
sti
pop
movl
into
scas
pushf
or
pop
test
pop
aas
cli
jb
fistps
and
clc
rorl
fwait
insl
ljmp
imul
lock
mov
pop
push
ss
rcl
xchg
jno
es
xchg
mov
jbe
cmp
ljmp
fiaddl
arpl
jle
pop
mov
cld
ljmp
repnz
sti
int3
cmpsb
pop
pop
aad
aas
je
pushf
lods
js
cmpsl
sub
jns
lahf
outsl
jno
mov
out
push
dec
or
inc
aas
fs
fbld
sbb
xor
test
movsl
and
fcmovne
pop
fsubr
fcoml
test
push
cmpsl
jge
add
mov
call
xchg
jg
or
stos
lret
test
lds
les
fbld
xlat
ss
addr16
add
pop
sub
add
lods
cmp
mov
aas
cmpsb
adc
andps
push
sub
mov
sbb
fisubrl
shrb
mov
aaa
or
dec
repnz
int
insb
scas
push
dec
jnp
or
cmpsb
pusha
int3
sbb
xchg
pop
adc
dec
or
je
push
and
lock
pop
notb
clc
icebp
cmc
mov
lods
sbb
mov
sbb
jnp
sub
int3
cmc
mov
jae
fs
in
pop
jecxz
mull
cld
xchg
es
add
lahf
sub
movsl
mov
push
mov
push
sbb
adc
sahf
nop
xchg
int3
cmp
movsl
mov
dec
adc
aam
ss
sti
xchg
ret
fwait
push
mov
sbb
fildll
pop
in
sbb
insb
cwtl
test
ss
mov
or
clc
cmp
add
fs
mov
stos
dec
push
xchg
pop
xchg
xchg
push
mov
daa
cli
xchg
cmpsb
push
lea
xor
adc
imul
ss
sub
leave
popf
cmp
pop
mov
fdivr
repz
frstor
xor
popa
repz
in
mov
pop
lock
sbb
out
mov
and
aaa
jno
fimuls
mov
imul
lahf
mov
and
loop
dec
sub
fisttpl
stc
xchg
xor
inc
and
sbb
sbb
sahf
inc
loopne
adc
adc
mov
dec
xchg
jo
jns
jge
subb
pop
jb
inc
rclb
adcb
test
loopne
sub
dec
iret
jg
jle
jnp
cmp
insb
push
xor
fidivl
push
fdivs
xchg
sahf
push
mov
hlt
dec
mov
mov
int
mov
pop
inc
lea
adc
lock
pop
mov
push
pusha
jge
push
outsb
ret
fwait
bound
aas
and
inc
cld
inc
mov
sbb
cmp
pop
lret
mov
push
jae
dec
adc
mov
fisubrl
xchg
mov
rol
mov
les
cs
lret
ret
shr
jo
jp
jg
push
cmp
mov
mov
add
xor
rorl
int
cmp
fadds
push
jl
std
je
mov
in
fwait
outsl
jp
fstpt
push
or
cltd
imul
out
cltd
xchg
cmpsb
pop
lea
mov
hlt
push
push
pop
fimuls
sbb
cltd
xlat
xor
shlb
mov
negl
mov
sarl
sbbl
mov
test
or
mov
jae
push
sbb
andb
inc
mov
movsl
rclb
sbb
dec
and
dec
xor
stos
xchg
mov
adc
mov
pop
scas
arpl
aad
push
sbb
shrb
sbb
push
repz
in
xorb
insl
les
loopne
adc
push
mov
add
inc
xchg
and
inc
xorl
sub
sub
push
stc
inc
roll
or
or
mov
cli
lds
push
push
cmp
xchg
add
and
dec
mov
sbb
popa
bndcu
aas
xchg
in
clc
push
jmp
leave
mov
xchg
fsub
cmp
mov
xchg
or
in
mov
clc
mull
add
in
jp
adc
inc
lods
jb
int
pop
push
mov
mov
es
imul
sbbl
mov
jg
jp
ret
icebp
clc
push
mov
jae
jle
sub
mov
fsubrl
data16
fcoms
lcall
mov
adcl
iret
jb
xchg
sub
pmulhw
push
sbb
popf
aad
and
inc
movsl
int3
stos
or
xchg
outsb
fldl
fstps
stos
lcall
push
mov
sbb
adc
pop
sub
or
pop
cs
mov
pushf
inc
push
dec
rolb
push
xchg
stc
loopne
mov
push
adcl
movsl
pop
cmp
pusha
cli
sbb
jecxz
add
xchg
xor
notb
push
pushf
mov
pusha
dec
pushf
imul
mov
jecxz
lods
test
pop
nop
inc
mov
xchg
outsb
xor
inc
cmp
into
lods
fs
adc
shll
add
or
les
jle
scas
sub
insl
out
enter
mov
pop
push
jne
push
lahf
in
add
in
pop
iret
adc
push
jae
jmp
dec
cmpl
xchg
jp
mov
adc
and
or
jge
dec
jnp
xchg
jb
mov
pop
add
xchg
or
icebp
push
add
dec
dec
shl
rorl
inc
repnz
les
bound
popf
or
in
dec
pop
or
mov
aas
fsts
lock
xchg
stos
or
sti
outsl
pushf
pop
mov
loope
mov
int3
cld
mov
dec
or
dec
lods
pop
jno
test
pop
jp
xor
popl
imul
sbb
loopne
ret
push
std
nopl
shrl
mov
jbe
cmp
test
push
sahf
pop
inc
icebp
mov
gs
out
js
mov
cld
sub
mov
jae
pop
call
adc
adc
jmp
lock
push
pop
pop
jbe
outsl
inc
sub
aas
roll
mov
addr16
or
in
mov
scas
push
ret
pop
lcall
aad
je
stc
sub
adc
xor
pop
cmp
jp
lods
int
imul
xor
out
leave
jge
jno
gs
xor
mov
dec
sub
icebp
jmp
in
mov
jecxz
dec
sbb
push
ret
fbld
lods
or
lea
mov
xchg
out
jnp
clc
lods
add
sub
addr16
setbe
scas
adc
cmpsl
xor
mov
jmp
mov
into
lret
imul
lock
stos
std
lcall
adc
in
xlat
pop
adc
ror
adc
fdivl
in
mov
iret
xlat
push
mov
pop
scas
lock
mov
mov
loope
jno
xor
outsl
sahf
out
rorb
push
push
cmpsl
das
shll
mov
and
push
add
and
out
push
push
and
int
daa
push
pop
xor
fxam
dec
lods
cmpb
pop
out
or
leave
push
and
push
mov
sub
add
jg
cmpl
call
cmpsl
les
data16
rsqrtps
fsubs
jae
fwait
dec
inc
cld
adc
fisubs
sbb
fidivrl
push
ljmp
or
and
jmp
lea
jg
mov
pusha
or
fs
add
mov
xor
push
insl
sti
cmp
fbstp
sub
cmp
add
push
aam
sbbb
jmp
jo,pn
bound
adc
or
cmpsl
clc
cmp
push
push
repz
or
or
jmp
inc
les
xchg
imul
xchg
jae
ret
cmp
scas
mov
adcl
call
pop
dec
mov
and
jecxz
mov
clc
jo
adc
data16
mov
inc
mov
or
or
xchg
jns
ds
popw
mov
testb
aad
lret
push
xor
cmp
pop
mov
adc
stc
les
push
pop
aam
lahf
enter
dec
cmp
jne
xor
pop
add
in
into
orl
lcall
jp
clc
cmp
int3
jns
dec
xor
inc
shrb
push
jle
jnp
mov
push
es
cmp
sti
mov
pop
lcall
test
sbb
cmpb
pop
xor
adc
sub
hlt
in
ss
cmc
xor
call
push
out
mov
push
xor
scas
cmp
push
mov
pop
mov
push
xorl
mov
or
and
stos
inc
ja
pop
add
das
int
jbe
pop
add
jne
shll
mov
aas
cltd
cmp
ret
adc
sbb
add
mov
adc
jnp
hlt
jae
stos
and
push
mov
into
push
cli
push
aas
dec
push
jmp
sub
sub
lret
fcomps
add
rcl
mov
cmp
add
loope
inc
fists
sti
sahf
mov
bound
fisubs
sbb
and
into
das
adc
adc
inc
aaa
jmp
aas
pop
sbb
push
push
in
push
mov
inc
pop
mov
xchg
aam
mov
push
xchg
imul
push
pop
out
xchg
pop
xor
mov
lds
shl
jg
and
adc
inc
mov
jbe
gs
mov
push
pop
f2xm1
push
mov
ret
sbb
cli
or
pop
bound
mov
loop
sahf
lcall
outsl
shll
and
inc
ds
pusha
xor
push
test
cmp
or
insl
into
push
loopne
imul
mov
mov
in
xor
inc
pop
popa
sbb
data16
js
fiaddl
xlat
aas
push
movsb
add
fbld
cmpsl
adcb
sbb
pop
ss
cmp
pop
push
cmp
sbb
pop
mov
lret
or
fbld
outsb
pop
pushf
jmp
addr16
mov
in
lods
jae
xchg
insl
popa
push
push
mov
and
push
es
mov
lds
mov
aaa
test
rcll
push
outsb
lahf
imul
and
stos
repnz
jne
add
mov
shrb
into
cli
mov
mov
ret
adc
iret
inc
cmpsl
call
adc
push
sub
sub
push
add
cld
mov
adc
cmp
leave
xchg
xchg
cmc
or
rolb
jbe
sbb
dec
cli
push
mov
adc
jmp
in
call
sarb
and
dec
iret
in
enter
inc
inc
mov
dec
jl
shlb
ret
mov
sub
pop
mov
lret
mov
adc
or
xchg
add
test
cmpsb
ljmp
scas
sbb
sarl
repnz
dec
xchg
xor
imul
jns
jbe
cmc
push
mov
pop
mov
das
push
jae
jmp
push
rep
pop
xor
jle
mov
in
xor
ja
push
out
ficoms
xchg
enter
ljmp
mov
xor
out
pop
sbb
fxch
adc
mov
shrb
dec
mov
movsl
push
fbstp
enter
push
daa
fcomps
subb
mov
pop
inc
mov
add
push
and
sbb
inc
jge
dec
add
mov
adc
mov
mov
adc
popa
les
jo
enter
testb
sub
mov
adcl
dec
inc
idivb
sub
dec
mov
cmc
adc
vpmaxub
data16
sub
and
and
and
cmpsl
add
call
fstl
dec
ret
dec
sbb
out
inc
orl
push
dec
jne
and
in
lcall
pushf
inc
popa
jle
mov
jns
push
iret
aaa
incb
mov
loop
pop
pop
bound
ljmp
mov
mov
mov
div
lcall
mov
xor
test
imul
cmp
scas
hlt
cmpsl
pusha
mov
push
ret
and
cs
aas
loopne
or
ljmp
loopne
mov
lods
adc
mov
inc
arpl
dec
ljmp
push
sbb
leave
iret
movsl
push
adc
popf
jnp
int3
data16
mov
pop
stc
adc
lahf
shll
out
jp
cld
rcr
or
push
sub
adc
mov
call
lock
test
or
sbb
push
xchg
test
insl
jg
jno
sbb
add
sarl
ljmp
inc
push
je
push
sub
ret
push
sub
xchg
cmp
jb
int3
mov
mov
add
and
ret
cs
xchg
loopne
arpl
push
push
adc
xor
sbb
jmp
bound
aas
out
mov
into
insb
jg
pop
mov
aad
jo
arpl
dec
test
cmp
pushf
xlat
loop
aas
sbb
fldcw
inc
pop
loopne
rolb
mov
cwtl
mov
std
mov
mov
xor
in
and
fmul
jo
ljmp
cmpl
sbb
sbb
adcb
dec
push
ja
sub
cmp
mov
sbb
pop
out
pushf
movb
je
jnp
mov
repz
jmp
fmull
pop
nop
mov
mov
push
xor
je
dec
daa
inc
cmp
mov
jg
jg
cmc
sub
mov
mov
fists
insb
jmp
paddusw
xchg
popf
nop
and
fs
in
sub
add
fsts
cli
mov
sub
xor
aad
pop
pushf
xchg
mov
and
mov
xchg
dec
cmp
int
pop
inc
filds
hlt
sub
fcomi
xchg
in
lcall
std
lcall
adc
cmp
pop
adc
lds
repz
dec
ja
jp
rorb
inc
mov
xor
and
and
fwait
pop
xor
scas
dec
cmc
lea
pop
jae
jno
inc
pop
inc
cmp
mov
fnstsw
jns
outsl
loop
into
lods
ret
xor
ljmp
loopne
mov
cmp
push
mov
pushl
push
pop
test
or
sahf
cwtl
sti
xor
call
test
mov
lods
push
push
clc
rorb
aad
std
add
cltd
lahf
loopne
mov
mov
jne
arpl
in
sub
lcall
dec
sti
pusha
lods
ds
mov
into
iret
pop
xchg
js
hlt
outsb
pop
add
adc
xchg
movsl
dec
or
xor
jp
stc
in
mull
mov
mov
cmp
sti
stos
jp
dec
test
cld
aam
jge
js
jo
cmp
pop
sarl
inc
sub
gs
dec
sub
rcll
fwait
add
popf
or
lret
enter
xchg
loopne
into
bound
lock
inc
sub
cwtl
jecxz
std
movsb
adc
jno
xorb
pop
cmpsl
jbe
inc
popa
pop
adc
rclb
test
ret
lds
sti
loop
test
sub
scas
cltd
ficompl
pop
adc
cmp
icebp
mov
lock
into
mov
sub
in
inc
in
mov
sbb
enter
mulb
xor
jge
je
fnstenv
jbe
mov
pop
cmp
test
in
adc
cmc
xchg
cmp
fcoms
sub
pop
add
mulb
mov
aad
es
mov
mov
mov
mov
or
xchg
xor
fdivl
call
dec
inc
outsl
test
dec
jae
jb
jns
iret
xchg
sar
push
push
mov
loopne
sahf
jbe
lods
int
and
cmp
es
push
iret
scas
outsl
ret
in
adc
pop
mov
pop
pop
push
inc
mov
in
xchg
ss
dec
mov
popf
or
aad
dec
jmp
orl
fwait
div
jmp
jmp
pop
call
pop
xor
test
loop
cld
aaa
cmp
add
add
or
pop
lock
jg
lcall
pushf
jae
int3
aad
andl
and
or
push
pushf
shlb
inc
filds
and
mov
mov
mov
je
icebp
push
mov
pop
jecxz
fcmove
cmpsb
dec
loopne
sbb
mov
in
data16
psrlw
push
das
xor
and
sub
insl
orl
nop
iret
mov
or
adc
pop
mov
test
and
dec
outsl
and
jno,pt
aam
sub
mov
in
popf
jl
movsl
roll
ret
pop
sbbl
cli
inc
pop
jmp
jnp
sub
cltd
and
dec
repnz
es
nop
pop
test
mov
xchg
sti
mov
add
mull
fwait
mov
fs
pop
add
push
in
cmpsl
lea
or
icebp
xor
popf
xlat
add
cli
cmpsl
xor
push
push
sti
in
xchg
push
insb
scas
lea
xchg
insl
pop
mov
shll
or
in
rclb
inc
pop
jbe
test
int3
sahf
jl
leave
pop
pop
mov
jb
mov
les
add
dec
push
sub
aam
test
dec
mov
push
lret
or
fwait
inc
and
xor
gs
stos
in
mov
xchg
aam
aad
idivl
fldl2e
negl
sar
inc
int
je
lods
xor
cltd
imul
enter
mov
lock
insb
daa
aad
sbb
mov
mov
ds
mov
add
mov
into
movsb
shl
fistl
jmp
lods
icebp
mov
mov
int3
mov
mov
mov
mov
mov
dec
mov
lods
and
sub
rorl
das
jbe
jbe
test
add
or
sbb
insl
xchg
in
iret
xchg
out
jl
xchg
mulb
jecxz
dec
test
jns
mov
pop
incl
ds
add
lods
mov
inc
xchg
iret
xchg
rol
inc
popa
cmp
or
clc
push
fistpl
in
out
mov
or
ja
mov
rolb
push
mov
setge
push
decl
fstps
jne
int3
outsb
sbb
and
outsb
push
pusha
ret
xchg
imul
pop
fwait
adc
adcb
pusha
mov
and
js
xchg
pop
jb
push
ljmp
sbb
movsb
jle
add
mov
adc
mov
jp
outsl
clc
in
xchg
mov
adc
sub
loop
les
pop
inc
insl
ss
xor
loopne
sbb
ja
add
pop
ljmp
pusha
cmpsl
xchg
cmpl
add
xchg
pop
mov
cld
loop
xor
mov
jl
les
aam
in
ljmp
or
and
xor
cmp
cwtl
test
push
push
scas
stos
rcrb
inc
fldenv
imul
add
xor
push
lret
lock
arpl
jmp
pop
mov
mov
mov
mov
mov
mov
or
jnp
xchg
adcb
push
jmp
ljmp
sbb
or
cs
lods
xchg
and
jnp
lea
leave
daa
push
adc
incl
jle
icebp
pop
or
enter
cmp
mov
sub
mov
fldcw
pop
and
shrl
ss
jne
arpl
jbe
xchg
xchg
sbb
sub
xchg
or
jl
fcoml
aas
iret
jnp
push
rcl
xchg
movsb
fiaddl
das
and
push
mov
incl
popa
push
lods
mov
cmp
sub
mov
cwtl
aas
shll
sbb
or
stos
pop
push
dec
ret
daa
arpl
push
sbb
pushf
xorb
data16
jge
inc
cmpsl
movsl
mov
ror
aam
and
push
jno
out
out
testl
xor
cmp
addl
adc
or
mov
dec
sub
mov
xchg
lahf
mov
sbb
lcall
sbb
orl
jecxz
xor
and
jnp
add
outsl
add
xor
push
mov
stos
mov
scas
js
stc
fiaddl
sub
repnz
cltd
rorw
loope
std
mov
out
lcall
pop
pop
xor
push
sub
outsl
mov
loop
adc
pop
xchg
pop
lahf
and
clc
push
sub
add
jne
ret
push
popa
push
js
cs
cmp
mov
lret
inc
test
mov
sbb
pop
xor
and
mov
and
test
in
cmp
es
dec
outsl
pop
imul
je
mov
aam
and
push
test
jl
jo
adc
push
leave
mov
jle
dec
pop
or
xchg
fprem1
mov
cmc
pop
inc
ljmp
test
jle
outsb
add
lock
jne
aaa
mov
sub
add
arpl
into
xchg
imul
shl
inc
jg
xchg
add
je
mov
mov
lock
adcb
pusha
or
sbb
adc
insb
push
pop
cmc
mov
jne
jle
xor
orb
push
dec
push
xchg
or
out
jne
scas
jl
cmp
sbb
xor
stos
or
in
adc
cmp
jl
adc
xchg
fcmovnbe
aaa
dec
mov
jp
insl
leave
or
xchg
icebp
mov
sub
push
dec
sub
and
adc
clc
mov
cmp
std
and
inc
shlb
std
test
mov
daa
mov
orb
xor
lock
fbstp
adc
loop
sbb
sbb
out
lds
hlt
cld
out
or
int
in
push
or
ret
mov
and
in
dec
mov
pop
push
inc
xchg
cltd
cmp
mov
fisubs
mov
xor
loopne
pushf
stc
adc
sub
scas
je
jb
xchg
hlt
adc
adc
outsl
cmc
push
add
cmpxchg
or
aaa
hlt
jmp
push
hlt
pop
mov
hlt
sbb
addr16
jge
out
adc
add
rcr
cli
push
push
lea
in
cs
dec
xlat
in
outsl
or
sahf
nop
push
subb
fsubs
pop
lahf
mov
xor
and
or
mov
cmp
mov
adc
adc
and
sbb
aaa
jne
jg
cltd
mov
or
adc
inc
xchg
dec
lret
in
xchg
lret
std
mov
insl
fsubl
cmpsb
test
out
outsl
sti
in
repnz
xor
add
jg
pop
fcoml
imul
inc
adc
dec
jb
pop
mov
cmpsb
mov
pop
ret
xchg
ret
scas
push
lods
cmp
pop
pop
mov
std
jp,pt
ret
aam
mov
mov
sub
jecxz
enter
xchg
xchg
pop
sub
pop
push
leave
inc
xchg
adc
jg
sti
mov
lret
ficompl
jbe
int
out
in
inc
in
add
mov
cmp
lret
pop
cmp
pop
fwait
shlb
xchg
mov
jnp
pop
or
xor
arpl
mov
pop
ficoml
dec
xor
rcrb
test
add
out
cwtl
xor
add
xor
cmp
std
xor
push
es
std
les
mov
push
addb
enter
cli
in
sahf
mov
jbe
lods
test
dec
mov
insb
add
rcll
mov
or
or
push
popf
cmp
push
jmp
xor
in
ja
testl
enter
dec
imul
decl
test
das
pop
in
ds
test
daa
cmp
insb
jno
jno
dec
fildl
push
and
stos
stos
lock
insb
stos
sub
jne
mov
mov
xor
jmp
or
mov
xchg
subl
cwtl
call
dec
andb
pop
or
jnp
je
sub
or
imul
inc
mov
mov
testl
out
push
sahf
mov
xchg
in
mov
rorl
jae
pop
sub
cmp
arpl
push
jbe
movsb
mov
sbb
dec
sub
or
add
ja
pop
int
or
sub
xchg
and
xchg
outsb
sbbl
addl
scas
or
fnstcw
sbb
insb
into
shl
shr
out
sub
ret
lock
das
adc
push
mov
rolb
cwtl
xchg
or
jb
inc
pop
jge
inc
pop
stos
mov
stc
jno
out
aad
mov
ret
into
add
mov
push
es
inc
mov
aad
imul
xchg
adcl
scas
or
jo
rol
cmp
movsl
xor
jle
nop
jbe
fs
aam
jns
mov
lds
jge
add
stos
cmp
data16
mov
repz
and
rclb
mov
popf
jmp
mov
or
adc
out
mov
add
pop
sbb
lcall
imul
sbb
in
sub
xchg
sub
dec
pop
sbb
sahf
in
cmc
mov
enter
lds
add
bound
lahf
jmp
subb
and
mov
imul
arpl
dec
lea
gs
les
shr
mov
mov
adc
call
mov
sbb
push
add
inc
mov
faddp
xchg
adc
fwait
ret
inc
cltd
rcl
sbb
xchg
push
add
inc
pop
jb
mov
insb
push
repz
sbb
scas
pop
cmc
popa
in
adc
or
adc
fldl
cltd
lahf
shrb
ret
adcb
int
mov
sarl
pop
lods
sbb
ficomps
dec
aad
pop
or
mov
mov
fstps
xor
shl
orl
sub
loopne
test
adc
push
pop
popa
in
cs
xchg
negl
sub
xchg
mov
gs
mov
cmp
push
enter
rorl
push
shll
cs
mov
pop
cmp
enter
popa
les
add
loopne
push
jnp
lods
int3
aam
in
and
xchg
subl
das
sti
lds
mov
hlt
out
cmpsb
rol
das
mov
pop
sbb
lret
out
xor
inc
pop
sub
mov
push
add
jae
fwait
cli
sub
or
sbb
adc
sbb
mov
movsl
mov
pop
pop
fsts
insl
jae
incl
cmpsb
adc
lcall
xchg
pop
mov
pop
mov
and
jge
and
es
pop
popf
xlat
iret
stos
out
hlt
cmp
mov
mov
xor
xor
dec
call
test
add
mov
in
or
psllq
sbb
pop
and
dec
jne
xor
or
xchg
ret
dec
cmpsl
ss
xchg
xchg
fidivrl
jb
and
loope
int
sbb
rcl
jp
test
mov
test
adc
inc
xor
push
inc
and
sub
mov
shll
movsb
nop
sub
mov
into
pop
dec
mov
jmp
cmc
cmp
sti
cmc
or
xor
sarb
ret
fdivrs
test
in
hlt
jmp
scas
pop
cld
adc
rclb
mov
clc
jge
mov
clts
cwtl
jge
adc
xchg
and
push
lock
ss
or
nop
dec
negl
jl
lret
pop
or
addr16
and
cwtl
in
add
mov
sub
out
je
imul
pushf
push
popa
mov
int
out
sbb
bound
pop
pop
mov
push
cli
mov
push
xor
xor
xchg
xchg
hlt
push
mov
movsb
push
idiv
mov
pop
out
test
scas
mov
inc
lds
adc
jo
imul
mov
pop
insl
rcrl
mov
pop
cld
or
xchg
add
lds
fcomip
das
sub
push
ret
aas
dec
sub
jmp
cmp
imul
testl
cwtl
push
cli
mov
lods
push
add
mov
shl
out
mov
cltd
lea
repnz
cmc
pop
or
mov
js
xor
push
mov
into
jg
jmp
inc
gs
push
or
jns
rorl
and
mov
sbb
pop
and
mov
nop
fstpl
lcall
les
movl
and
xchg
insb
inc
pop
movsl
dec
jle
jmp
pop
int3
pop
mov
mov
into
add
sub
test
andb
cli
push
mov
or
loop
enter
xor
cmc
pop
add
cmp
push
daa
lret
in
jnp
fnstenv
mov
imul
jbe
filds
sbb
insl
cld
sbb
mov
mov
mov
dec
iret
adc
mov
adc
sub
mov
lods
test
in
shll
inc
lock
out
fs
inc
inc
mov
aas
jo
pusha
jle
cwtl
or
mov
fmuls
mov
mov
mov
push
add
cmpsb
pop
negb
xor
in
cmp
aam
repnz
cmp
outsb
fistl
mov
sub
std
sti
mov
adc
sbb
lds
inc
iret
test
jb
lods
jp
cmp
xchg
jne
aad
std
mov
fisttpll
fsubrs
sbb
out
sub
fstpt
jb
imul
mov
lea
xchg
pushf
adc
jne
enter
or
lds
mov
nop
mov
out
or
mov
insb
xor
pop
cmp
shll
pop
shll
in
cs
lcall
lahf
push
imul
sahf
lea
mov
scas
dec
bound
mov
stc
cld
popa
rcrb
dec
int3
jle
adc
lods
mov
scas
pushf
cmp
xor
dec
pop
jbe
inc
mov
mov
test
add
lea
sub
and
mov
mov
lods
pop
ds
js
movsl
inc
xchg
gs
dec
lcall
mov
or
mov
ret
leave
mov
or
xchg
jge
jo
mov
ficomps
loope
shll
test
enter
pop
xlat
lcall
xchg
adc
and
in
sbb
hlt
add
push
sbb
fstpt
xor
pop
test
int
int3
mov
or
out
scas
scas
cmc
nop
add
and
push
inc
rclb
jb
mov
mov
jae
mov
rolb
jg
inc
sbb
mov
je
inc
movsb
hlt
sbb
ret
arpl
cmp
gs
jle
rclb
int
and
fs
inc
inc
inc
mov
mov
mov
mov
mov
in
lods
sub
inc
mov
pop
cmp
rclb
cli
loop
cmpsl
adc
cmp
loop
mov
mov
mov
or
push
ret
nop
dec
ds
cwtl
fs
xchg
and
mov
jmp
pop
xchg
lret
and
jmp
add
push
scas
nop
shrb
cmc
les
pop
icebp
pushf
shrl
push
shl
mov
lret
pop
ja
lods
pop
xchg
pop
dec
sub
push
jnp
out
iret
sbbb
scas
fs
das
add
xor
inc
lods
imul
jle
cld
sahf
fwait
sub
pop
xchg
mov
mov
cmpsl
jno
jnp
adc
cmp
xor
xchg
push
sbb
add
ljmp
add
les
je
aad
fisubrl
mov
jo
pop
dec
add
jo
arpl
clc
sbbb
dec
icebp
xchg
cwtl
out
sub
push
es
push
aam
xchg
clc
mov
jp
push
mov
pop
cmp
pusha
gs
xchg
in
sub
dec
mov
stos
sbbl
sub
push
repnz
subb
sub
pushf
mov
insl
or
push
and
sbb
or
xorl
xchg
fs
push
rorl
std
push
jmp
mov
push
popa
scas
repz
add
gs
dec
mov
sbb
pop
je
mov
in
lds
or
push
push
cmpsb
in
sahf
negl
les
leave
add
adc
adc
jp
cltd
xchg
jmp
xor
ja
ljmp
dec
in
xchg
test
pop
pop
adc
adc
enter
jmp
xchg
cld
inc
aam
arpl
pusha
pop
nop
xor
mov
pop
je
movsl
xchg
jb
out
addl
fs
dec
call
mov
cltd
fwait
popa
aam
pop
xorb
and
in
xchg
mov
ds
cwtl
imul
jg
dec
cmp
dec
adc
rcll
or
adc
pop
out
mov
mov
fidivs
xchg
ret
popf
fstl
xchg
mov
nop
data16
mov
push
aas
lds
jge
shll
xor
iret
cmc
mov
mov
movb
lret
xor
push
adc
xchg
mov
dec
lretw
push
jecxz
sti
sub
mov
mov
dec
lret
mov
iret
rolb
lds
addr16
aam
imul
ret
jge
pop
pop
add
push
arpl
shll
hlt
add
xchg
int3
sub
or
xor
mov
push
jae
sub
mov
jnp
mov
cmp
mov
pop
loopne
daa
add
fs
fsubr
adc
add
es
leave
sbb
pop
or
enter
orl
dec
inc
fistps
dec
cmp
stos
popf
mov
aam
int
in
jb
or
and
jnp
sub
shr
and
and
clc
insl
cmp
dec
push
outsb
dec
xor
ds
and
fdivrl
cmp
aam
mov
es
or
js
lods
outsl
jns
mov
adc
add
xchg
or
fst
mov
cmp
push
ret
pop
psubsb
jp
xchg
das
add
movsb
mov
cmp
lret
in
xor
pushf
cmpl
cmpsl
mov
mov
or
gs
fs
out
cmp
or
loopne
popf
jle
or
add
mov
lret
adc
xorb
push
repz
sbb
call
xor
mov
rcl
lds
cmp
aaa
sarl
into
pop
jo
cmp
cwtl
dec
sahf
rclb
iret
lahf
add
jne
mov
push
xor
in
mov
mov
leave
stc
loop
adc
mov
je
cmp
aaa
pop
push
add
js
std
repnz
leave
mov
push
cmpsl
sub
mov
mov
jno
lret
push
mov
and
scas
sti
pop
mov
pop
das
sbb
insl
pop
inc
dec
cmc
jo
and
pushl
xor
imulb
dec
out
push
popa
sti
ficoms
and
mov
mov
and
repz
andl
insl
inc
leave
ljmp
sbb
in
pop
out
mov
lods
or
adc
jne
xor
mov
orb
inc
test
lods
sub
mov
cmpsl
cmc
in
and
pop
sub
and
adc
xor
inc
dec
movsb
jmp
push
and
gs
mov
pop
and
sub
iret
aaa
pop
lahf
lods
iret
cmp
shll
inc
inc
test
cmp
fcoms
test
xor
pop
pushf
pop
dec
loopw
out
pop
gs
mov
xchg
in
fdivrl
jecxz
inc
aam
jg
test
mov
lea
inc
or
add
inc
cmp
dec
aad
adc
mov
cltd
or
call
rcrb
cs
pop
outsb
mov
stos
pop
pop
ja
or
mov
and
test
mov
test
jb
insb
add
es
pop
xchg
sub
add
fnstsw
sub
lods
repnz
cmp
push
inc
inc
paddsw
mov
push
jns
xchg
cmpsl
lahf
cmp
mov
repz
xchg
test
xor
pop
xchg
out
idivb
shlb
mov
sub
fisubs
stos
pusha
jecxz
cmp
fnstcw
push
test
xchg
das
cmpsl
negb
cmp
xchg
dec
push
shll
jp
cld
mov
pusha
cld
addr16
xchg
fistpl
jle
clc
jp
ljmp
fcomip
pop
popf
pushf
outsl
mov
fistl
jecxz
xchg
dec
xlat
fidivrl
adc
mov
cmp
lahf
push
ds
movsb
sub
stos
xor
into
fildl
push
popa
pop
mov
cmp
loop
adc
test
mov
pop
idivb
xchg
push
jns,pn
jg
dec
loope
sbb
add
daa
mov
pushf
mov
inc
mulb
dec
into
push
mov
sub
testb
fsubrl
pusha
int3
ljmp
inc
inc
popf
push
popaw
pushf
jnp
mov
add
mov
rcrl
test
mov
dec
pop
xchg
andb
test
outsb
fidivrl
js
jmp
mov
aas
lock
and
fld
sbb
mov
adcb
adc
inc
test
jb
lds
mov
dec
cmpsl
xchg
sbb
push
bound
mov
aaa
xor
aam
repz
and
xchg
movsb
cmp
stos
das
jmp
push
pop
xchg
cmp
xchg
fisttpll
and
or
mov
push
xchg
loopne
es
stc
movhps
jae
cltd
lcall
lods
loope
lea
xchg
sbb
movsb
mov
lahf
cltd
in
fsub
iret
rcr
paddusb
sti
adc
xchg
jge
inc
arpl
enter
clc
and
xchg
inc
loop
int
sarb
test
cli
dec
outsl
add
push
lret
adc
ret
loopne
sub
mov
lret
xchg
add
and
mov
jnp
loopne
mov
mov
sub
sub
add
inc
mov
call
scas
fwait
cmp
stos
xchg
mov
mov
sub
pop
aad
xchg
test
cmp
das
data16
imul
rorb
dec
imul
inc
and
mov
dec
iret
add
xchg
sub
iret
cmc
divl
push
xchg
jge
sub
mov
jmp
xchg
imul
push
xor
std
sti
cmp
cmp
mov
ret
dec
and
pop
mov
mov
xor
fcmovbe
jns
fstpl
mov
inc
or
aaa
int3
push
outsb
xlat
subb
mov
addb
iret
sbb
ss
fidivl
js
jbe
adc
or
and
jae
js
mov
test
mov
cmc
push
sub
inc
es
cmp
jno
bound
adc
sbb
dec
pop
jge
adc
mov
cmovns
std
xchg
xor
int3
push
sub
or
data16
jl
xor
cmp
icebp
dec
fidivl
in
mov
movsl
dec
xor
loop
sbb
outsb
gs
push
jp
dec
adc
and
clc
out
sub
loopne
mov
stos
jns
ficoms
push
mov
cmpsb
lcall
sbb
cmp
shr
push
in
movsb
sbb
adc
fists
cltd
xchg
xlat
je
rorl
stos
nop
xor
aam
jl
aaa
imull
stc
mov
xchg
push
das
mov
sbb
fists
xchg
and
inc
mov
add
pusha
or
stos
lret
sahf
mov
xchg
mov
in
dec
or
hlt
mov
mov
leave
sub
adc
xor
cmp
int3
fdivrl
dec
xchg
fwait
inc
cmp
cmp
push
lret
mov
rcr
inc
repz
push
sbb
ret
mov
dec
dec
lret
inc
pop
mov
pop
test
pop
dec
xlat
test
std
sbb
std
dec
in
inc
sub
pop
adc
hlt
in
pop
pushf
add
lods
sbb
imull
ret
pop
or
lcall
dec
stc
stos
lock
or
lahf
inc
inc
inc
sbb
push
push
pop
cmpsl
adc
xchg
dec
mov
pusha
je
shlb
sub
adc
push
ficomps
or
mov
lods
jg
adc
sub
add
lds
adc
imul
sub
jb
adc
mov
ret
pop
fsub
xor
adc
xchg
mov
frndint
push
mov
das
es
xchg
fistl
xor
push
fisubl
cltd
xchg
icebp
cmp
mov
nop
mov
stos
push
idivb
add
inc
popa
dec
fcmovu
out
in
xchg
sarl
or
jl
fs
ds
xchg
inc
sub
sarb
rcll
rclb
lds
lock
mov
or
aad
mov
pop
cmp
je
push
jb
outsl
fidivrs
mov
aas
and
pop
sti
dec
cmp
jo
pop
and
bound
jbe
cmc
dec
popa
lcall
push
test
fcomps
xchg
mov
cwtl
cmpsb
ret
mov
loop
sbb
sbb
push
call
in
popf
push
mov
imul
cltd
mov
mov
ljmp
dec
mov
xor
pop
add
xor
mov
notl
outsl
pop
pop
pop
mov
fwait
mov
test
cmp
mov
push
test
add
stos
nop
add
add
lret
ljmp
mov
mov
mov
sub
push
xchg
out
jmp
loope
or
sub
fdivr
stc
cwtl
mov
movsb
mov
repz
xor
push
add
cmc
addl
stos
fwait
xor
call
flds
outsl
jne
pop
add
jo
adc
lret
sub
cwtl
xchg
mov
out
ljmp
add
aam
sahf
mov
movsl
jae
or
dec
pushf
das
sub
mov
jns
stos
mov
and
mov
sub
pop
repz
jp
jg
jge
and
popf
push
test
mov
jnp
packuswb
jns
ja
nop
mov
cmp
sub
push
sub
movsb
xlat
add
stos
aas
rcrl
sbb
jmp
lods
icebp
jge
xor
ss
xor
add
mov
dec
xor
lods
call
and
mov
dec
push
sub
mov
out
jge
push
dec
jp
mov
stc
hlt
and
mov
std
cs
xlat
cmpsl
pop
fs
xor
pop
dec
mov
lds
pop
xor
add
xor
jg
testl
in
rcrb
mov
fisubs
cwtl
push
lret
push
stc
mov
inc
fbstp
clc
push
mov
mov
call
dec
xchg
loopne
popa
lret
cmp
inc
xor
roll
aam
push
xor
adc
sbb
test
or
mov
in
sub
insl
pop
mov
loope
inc
test
fistpl
stos
faddl
cmp
mov
pop
iret
dec
xchg
pop
dec
pop
cmp
out
jo
test
comiss
ja
lret
mov
mov
mov
jno
pop
mov
pop
inc
fwait
stc
jbe
leave
subb
sub
jle
shrb
push
and
lock
ficoms
in
mov
das
sahf
pop
dec
cmpsl
pushf
inc
cltd
cs
inc
add
jbe
dec
daa
push
aaa
sub
xchg
adc
jge
mov
and
mov
int3
dec
andnps
test
push
dec
xchg
jmp
loope
imul
jae
into
repz
imul
sbb
xchg
icebp
jns
popl
out
idivb
nop
int
icebp
fbstp
cmp
lret
xchg
xor
mov
stc
cmp
xchg
dec
lcall
shll
cmpb
mov
mov
ror
xchg
push
mov
mov
dec
adc
out
push
daa
xlat
enter
mov
test
xor
sub
push
in
pop
cmp
insb
out
inc
or
test
imul
das
xor
pop
sbb
popl
pusha
nop
inc
sti
movsl
sbb
daa
fiadds
js
and
in
mov
dec
in
mov
sbb
cli
sbb
mov
adc
sbb
stc
mov
pop
add
xchg
or
repz
sbb
cmp
lret
aas
add
pop
js
adc
xor
cmpsl
test
aad
jno
adc
sbb
inc
jmp
cwtl
jmp
std
mov
inc
xchg
gs
stc
push
fisttpll
mov
jle
dec
sbbb
pop
inc
add
mov
sub
cmp
insb
rclw
js
adc
sub
imul
mov
stos
in
shrl
fldenv
cmc
jle
sbb
cld
xchg
adc
faddl
add
adcb
outsb
in
test
rorb
fcompl
loopne
pop
mov
mov
decl
add
jl
mov
push
cmp
ret
xor
rolb
fiaddl
inc
ljmp
lahf
add
add
mov
aas
pop
xor
loop
adc
enter
mov
pop
jnp
add
xchg
and
dec
ret
cltd
jl
loop
out
mov
sbb
jne
fmuls
pop
icebp
daa
lret
adc
jmp
sub
inc
pusha
lret
adc
int3
mov
xor
lods
mov
fs
mov
orl
mov
out
sbb
aam
lret
adc
or
loop
repnz
cmp
cmp
and
int3
jl
adc
pop
adc
sbb
add
xchg
rclb
jg
insl
stc
mov
pop
icebp
loopne
adc
cmc
mov
test
sarl
sbb
inc
dec
push
scas
pop
das
loop
jnp
jmp
les
je
es
or
enter
stc
in
sbb
lods
lcall
dec
mov
xchg
lods
cmpsl
inc
scas
cmp
std
cmp
pusha
test
mov
jbe
push
cmp
lds
jp
xor
gs
mov
scas
inc
pop
jecxz
mov
outsb
pushf
fldt
push
mov
movsl
jge
push
mov
in
fisubrl
jl
ficomps
fsubr
fistpl
cld
add
jle
loope
inc
jecxz
fs
cmp
sbb
cwtl
cmc
pop
shlb
das
test
adc
sti
mov
imul
jo
out
add
adc
out
dec
ljmp
push
out
lcall
ret
push
cltd
mov
daa
ss
jp
into
lea
loop
subl
mov
sahf
mov
aad
pop
adc
cmp
cmp
mov
test
sbb
mov
pop
pop
sub
jbe
pop
lods
cwtl
aaa
aad
aas
mov
test
cwtl
fsubr
mov
ret
int3
lret
jbe
addr16
pop
fisubrs
push
add
lcall
mov
ret
sbb
in
loop
and
out
mov
ss
daa
in
or
and
xor
pushf
lret
ficompl
mov
dec
mov
out
dec
cmp
test
dec
shll
std
sti
popa
sub
ja
mov
push
icebp
js
sbb
movb
push
pop
mov
inc
ljmp
mov
pop
ljmp
adc
fs
jmp
adc
mov
outsb
and
sahf
mulb
xchg
sub
or
addr16
mov
fdivr
mov
mov
xor
cmp
arpl
imul
sahf
in
cmp
pop
std
daa
add
repnz
cmp
mov
or
add
imul
and
and
xchg
stos
dec
sarl
scas
negb
rcrl
sbb
sbb
lcall
cs
cltd
lahf
sti
add
fadd
mov
and
mov
repz
aas
into
mov
cmpsl
aas
mov
popl
repz
dec
mov
mov
int
gs
and
test
xor
iret
mov
xchg
dec
jecxz
xor
sbb
out
dec
int
scas
out
test
daa
sub
lcall
sbb
inc
fwait
out
mov
insl
mov
ds
jg
cmpsb
les
push
insb
ret
xchg
jp
push
sbb
adc
into
mov
mov
xchg
mov
xlat
xor
pop
js
call
imul
sub
jecxz
mov
bound
ljmp
arpl
xchg
or
cmp
repnz
out
push
frstor
fcmove
dec
cmp
inc
rol
adc
fidivs
cli
push
mov
das
mov
negb
push
mov
inc
ret
dec
mov
push
xor
mov
ret
test
and
push
aas
mov
jns
jno
sub
aam
push
cmc
xor
pop
cmp
mov
xor
pop
jge
scas
mov
or
lahf
into
lds
repnz
enter
repnz
jl
fsubl
sub
sub
enter
sbb
xchg
mov
add
out
iret
dec
pop
jp
push
mov
movsb
mov
xchg
cmp
inc
sbb
loop
shrl
pop
lret
xor
dec
cmp
inc
and
lock
movsb
jl
popf
push
shll
add
fcom
lods
jg
mov
jno
ja
test
sbb
jmp
iret
dec
ficomps
aaa
loopne
in
stc
dec
xor
sti
call
lods
in
or
out
jle
stos
push
test
mov
incb
dec
test
mov
hlt
jnp
cwtl
push
in
push
push
cld
repz
in
fldl
and
and
add
rolb
outsb
imul
daa
inc
rcl
rcrl
sbb
xchg
stos
add
incb
push
or
jle
push
push
aaa
sub
dec
ret
in
cmp
xor
jnp
scas
pop
push
mov
xchg
cmp
sbb
jae
push
inc
jnp
sbb
dec
or
and
insb
mov
inc
ret
jb
or
dec
jecxz
dec
pop
movsl
leave
ss
mov
jmp
pusha
in
mov
lods
negl
push
fmulp
push
es
ret
push
jmp
lahf
lahf
jg
dec
sub
xchg
ja
test
sbb
lock
fwait
fwait
imul
leave
add
pop
sub
adcl
push
fdiv
cmp
push
xor
cmovl
loop
or
mov
fstl
xlat
add
fwait
js
test
div
dec
sub
jae
or
add
sbbb
in
test
in
inc
in
xor
cli
jne
jecxz
int
add
add
bound
or
flds
outsl
or
jge
lea
das
fstpl
push
pop
fcmove
in
mov
mov
loopne
shl
pop
cmp
or
test
push
das
sbb
popa
sbb
out
jp
inc
mov
mov
cmpsl
jne
xor
shll
dec
xor
std
inc
lods
lods
sarl
fdivs
in
and
daa
ss
push
testb
addr16
lret
mov
addr16
aaa
xchg
int3
push
mov
jnp
push
mov
inc
pop
popa
sub
scas
xor
push
les
and
adc
mov
imul
adc
pop
mov
mov
lea
xchg
stc
sub
and
cmp
addr16
mov
sbb
jp
xor
cmp
adc
loope
add
or
push
iret
loopne
out
aam
fdivrs
int
aad
lods
mov
jo
ljmp
sbb
and
push
and
pop
lods
mov
push
out
jl
mov
int3
mov
xchg
xchg
je
inc
repnz
loope
inc
inc
add
mov
orl
outsl
xchg
outsb
and
popa
pop
shl
imul
xor
sub
jg
jnp
adc
jb
mov
std
in
jne
xor
enter
jae
push
cli
or
fcmove
sbb
push
aas
sub
stc
out
out
jle
or
or
cmp
pop
adcl
fistps
call
hlt
cmpsb
rol
add
shl
cld
fnstenv
push
aas
data16
rcrl
ss
push
push
and
out
pop
sub
or
jae
test
fcmovnb
xor
das
inc
jl
inc
int
enter
jle
mov
sbb
pop
sbb
incb
ret
mov
xchg
jo
push
cmp
cmp
pop
sub
sub
lcall
in
js
cld
mov
cs
jl
dec
cmp
push
popa
fsts
jbe
jne
adc
cwtl
popf
inc
fwait
mov
push
test
jmp
inc
pop
add
stos
addb
or
xor
fwait
and
and
into
mov
nop
dec
jmp
sbb
mov
fnsave
adc
add
push
pushf
pushf
mov
test
ljmp
rcrb
sti
shlb
push
test
and
in
mov
jle
push
nop
jle
repz
callw
pop
inc
leave
aam
and
and
or
sbb
pop
nop
sub
mov
mov
pop
test
mov
mov
les
popa
xor
fsubl
jp
jle
xor
inc
inc
sub
ret
pause
dec
enter
jmp
dec
xchg
lret
jo
popf
lret
loop
push
lods
push
lret
add
mov
xor
pop
ja
daa
or
cmp
or
pop
mov
sub
mov
sbb
repz
push
mov
lret
out
lsl
mulb
jl
mov
lret
filds
mov
and
xor
inc
sti
mov
ja
push
ret
nop
testl
loopne
bound
jle
shrl
addb
aad
inc
jnp
jg
mov
adcl
push
sub
mov
mov
fisubs
in
sub
and
push
orb
cmc
sbb
cli
jle
popf
jbe
mov
testl
and
fstpl
sub
cmpsl
enter
es
xor
lcall
into
inc
mov
in
cwtl
adc
ret
lods
hlt
aas
jmp
xchg
test
aaa
daa
xor
xlat
inc
sti
mov
lock
in
aas
rorb
cmp
stos
jae
movsl
insl
sbb
adc
cmc
hlt
add
lds
addr16
pushf
mov
out
adc
pop
push
jl
xor
shll
push
les
dec
push
push
test
mov
jp
notb
add
cmp
mov
dec
fcompl
in
xchg
pusha
cld
xor
sbb
test
jmp
xchg
push
sub
push
sub
daa
mov
aad
lods
cwtl
inc
pushf
lods
push
sub
pushf
lcall
push
les
out
bound
mov
mov
out
or
push
xor
popf
ret
cmp
push
test
sub
stc
repz
int
outsb
repnz
lcall
lahf
mov
inc
inc
mov
in
cwtl
test
je
push
or
test
cwtl
repz
gs
call
jnp
pop
pop
push
mov
cmp
xchg
push
arpl
hlt
pusha
jl
pusha
mov
sub
xchg
stos
cmp
sbb
push
sbb
daa
cltd
xchg
in
lea
mov
stos
dec
cmp
mov
add
dec
test
lods
out
mov
push
jo
adc
inc
fcmovne
jmp
std
cmp
in
inc
jno
pop
addr16
mov
or
pop
mov
mov
insb
xchg
fidivrl
push
mov
out
or
hlt
and
xchg
mov
bound
jno
xchg
and
iret
cmp
cmp
dec
push
stos
push
pop
push
leave
movsb
lock
add
inc
loop
fidivl
es
mov
je
pop
into
pop
and
orl
push
es
sbb
lea
jl
sbb
out
into
scas
xor
sub
xor
test
push
push
adc
mov
daa
pop
cs
shll
add
sarl
mov
or
mov
fimuls
mov
lret
rcr
mov
test
dec
mov
cmp
jo
mov
inc
loop
pop
xchg
fisubl
insl
out
xchg
sbb
mov
or
pusha
out
push
inc
mov
sub
call
and
push
in
pop
xchg
push
pop
mov
int3
fisubrs
ret
jno
int3
inc
push
popf
and
and
fcompl
jmp
or
ss
push
pop
inc
popa
xor
cmpsl
aas
jo
testl
adc
stos
into
out
dec
cmpsl
inc
inc
rcll
aaa
xchg
into
fldenv
jle
push
or
mov
mov
rolb
jmp
stc
xor
jnp
add
fidivl
aas
push
lock
ja
testl
mov
dec
adc
dec
icebp
sbb
arpl
dec
cmp
out
bound
sbb
add
test
pop
sbb
leave
adc
xor
jp
push
jbe
jnp
add
mov
fistl
adc
adc
mov
xchg
cmp
jns
mov
mov
ja
lea
sub
fldcw
sub
mov
push
dec
cmp
push
call
scas
mov
clc
fs
call
sub
jge
xor
shrl
mov
outsb
ss
fisubl
repz
inc
stos
out
sbb
out
push
jmp
pop
sar
cli
loope
sbb
ds
jno
cmpsb
out
inc
je
add
jl
aad
lret
lcall
push
dec
mov
cmp
out
add
jp
jge
cmp
mov
xor
jne
in
xor
int
cmp
lahf
hlt
jo
cs
fstps
mov
test
fdivrs
loop
fdivrp
xor
or
adc
fdivrs
ds
cltd
aas
and
mov
mov
pop
out
xor
jno
dec
repnz
push
fiadds
inc
mov
or
pop
dec
shl
xor
dec
lea
cmp
int
jno
inc
into
decb
push
icebp
in
and
rol
xchg
out
pusha
adc
movsl
rol
out
push
pop
push
mov
adc
dec
in
rorl
inc
xor
je
stos
ja
test
ret
mov
jne
and
or
adc
fs
notl
test
sbb
iret
inc
xor
icebp
cmp
push
sbb
daa
inc
repz
xorl
xor
ficomps
sbb
movsl
bound
fstpl
es
pop
shrb
jne
lahf
ss
push
gs
popf
sub
rorb
push
add
loop
cmp
cmpsl
mov
aas
pop
mov
mov
and
dec
clc
cld
in
lret
xchg
fs
xchg
sub
cli
data16
popf
xor
xor
sbb
mov
lret
dec
and
loop
out
push
mov
test
pop
rcrl
xchg
jno
mov
shrb
mov
lret
or
mov
add
pop
icebp
jl
cmpsl
and
xchg
mov
repz
mov
jne
insb
mov
cmp
popa
dec
cmp
mov
mov
nop
inc
pop
leave
sbb
xchg
push
add
push
push
ds
ss
das
test
mov
imul
inc
xchg
loopne
xchg
nop
test
push
sub
out
pop
xchg
inc
pusha
push
mov
ja
dec
mov
arpl
lret
insb
xor
sbb
jge
inc
ficoml
fst
out
cs
pop
fcmovb
ret
inc
rclb
mov
inc
mov
mov
js
push
outsb
push
daa
xchg
lods
mov
jmp
cmpsb
mov
rorb
pusha
pop
dec
xor
icebp
lds
jnp
mov
imul
popl
icebp
and
ljmp
sbb
xor
stc
cmp
sbb
mov
das
pop
jmp
sbb
sub
shll
jno
inc
scas
pop
mov
clc
add
mov
shl
ret
add
insl
lahf
mov
idivb
dec
inc
pop
sbb
xor
mov
sahf
mov
es
or
popf
xchg
or
xor
enter
orb
ss
iret
inc
jo
je
xchg
inc
fcmove
clc
sub
repnz
test
rol
push
mov
mov
cmpsl
sarb
or
lods
mov
je
aaa
das
movsl
mov
into
aad
lds
cld
jo
jns
add
adc
subb
sarl
adc
int
dec
or
cmp
leave
imull
adc
stos
bound
adc
xchg
std
scas
cmp
mov
jl
gs
out
xchg
pop
sub
sub
push
call
inc
sub
xor
adc
jge
lcall
std
es
aaa
nop
adc
jbe
inc
das
out
push
xor
in
les
jne
adc
xchg
jg
in
sub
in
repnz
lods
mov
xchg
insb
add
and
ret
jne
push
mov
outsb
mov
dec
and
xchg
push
and
adcb
xchg
int
jb
mov
jnp
jne
push
sub
test
push
jge
cmpsl
std
mov
xor
dec
add
out
xchg
imul
cmp
stc
fildl
fxtract
lahf
mov
push
mov
es
inc
in
mov
mov
cld
sub
lcall
add
dec
fcoms
adc
sub
jge
sarb
mov
xchg
lods
cmp
cltd
xor
pop
nop
mov
or
dec
cli
pop
lret
mov
aad
mov
test
adc
outsb
and
jecxz
add
mov
lret
aad
les
stos
mov
mov
pop
test
adc
pop
js
rorl
cld
cltd
popf
test
es
xlat
or
ljmp
shll
fwait
imul
mov
in
and
sbb
xor
arpl
push
jmp
daa
sub
jle
dec
jae
and
cmp
lret
std
jo
sbb
loopne
xchg
sub
jge
stos
cld
pusha
add
xor
jp
mov
or
sub
into
sub
inc
dec
inc
fdivr
pop
pop
jg
xor
add
das
std
repz
jnp
mov
xchg
clc
add
rolb
icebp
shr
cmp
sbb
adc
push
adc
jecxz
ss
sbb
sbb
ljmp
sub
daa
call
les
outsl
adc
or
scas
mov
cmp
cmpsb
sbb
mov
ret
xor
imul
popa
movsb
cli
movsb
inc
cmp
xlat
jo
inc
pushf
into
in
dec
xchg
ljmp
push
jle
mov
mov
mov
enter
push
adc
mov
inc
add
dec
jl
pop
add
lods
dec
and
cld
xor
cwtl
int3
mov
cld
lea
enter
mov
into
xor
stos
or
push
insb
addr16
sahf
fwait
mov
mul
sti
sbb
mov
adc
arpl
adc
xor
dec
jmp
jge
mov
sub
inc
mov
dec
dec
mov
cmp
sbb
sahf
dec
xor
mov
pop
icebp
stc
fstl
mov
imul
ret
adc
pushf
sub
mov
xor
or
ljmp
sbb
push
xlat
xchg
fsubs
xchg
cli
dec
push
repz
lods
mov
cmp
in
rcll
fcomi
outsb
loopne
pusha
in
test
pop
mov
arpl
sbb
loope
add
test
imul
fildl
aaa
mov
arpl
sbb
add
or
outsb
clc
addl
mov
jb
test
add
leave
adc
push
sti
xor
ljmp
mov
xor
arpl
lock
pop
jns
addr16
push
fbld
xor
mov
pushf
and
inc
insl
incb
fdivrs
insb
and
fldl2e
fstpt
aaa
push
orb
outsb
aam
jmp
test
aam
sbb
mov
add
add
cmp
faddl
or
nop
scas
in
in
pop
mov
inc
cmp
push
lds
push
adc
add
mov
inc
inc
lods
xchg
and
push
cli
xor
sbb
push
popf
inc
shrl
pop
dec
dec
adcb
xchg
test
aaa
pop
aad
or
test
or
xor
lret
shlb
or
dec
sbb
cmpsb
in
xchg
pop
dec
adc
imul
dec
dec
sbb
mov
lahf
std
push
dec
sub
xchg
cmc
not
jl
xor
push
xlat
loopne
mov
mov
jl
imul
add
repz
push
sub
xlat
cmpsl
dec
scas
jl
sbb
pop
xchg
cmc
popf
mov
and
xchg
divb
fisubrl
arpl
jecxz
adc
leave
pop
and
adc
sub
jnp
repz
or
mov
fcmovnb
fmulp
mov
jns
lock
xchg
pusha
add
push
jae
cmpsl
lret
xchg
mov
lods
pop
aam
sar
hlt
jno
shl
das
push
sbb
test
flds
mov
sub
movl
fmull
or
in
outsb
aad
iret
iret
scas
pop
xchg
ja
or
mov
cltd
pop
inc
jge
adc
nopl
aaa
ljmp
jo
xchg
push
std
subl
cltd
dec
or
inc
dec
push
lahf
shlb
sbb
imul
popf
dec
cmp
decb
roll
repnz
jno
or
mov
push
sbb
loope
xor
mov
adc
xchg
pop
pop
adc
inc
mov
mov
xor
cld
aaa
xchg
cli
jp
dec
adc
stos
xchg
clc
je
and
push
pop
pop
cmp
sub
push
mov
sub
push
cs
in
inc
mov
ret
cld
int3
or
xor
fcoml
xlat
out
adc
cltd
daa
adc
push
loope
repnz
dec
jno
ret
add
icebp
mov
and
int
out
jne
movsl
sub
and
sub
pop
arpl
jg
mov
stos
mov
imul
stc
jg
popf
add
jge
push
and
inc
xchg
cld
imul
ljmp
mov
dec
divb
hlt
sub
and
or
inc
aaa
jle
loope
cld
clc
nop
pop
aas
and
js
aaa
mov
call
cli
dec
lock
mov
imull
inc
xchg
aas
out
out
or
mov
sbb
and
xchg
and
sub
xchg
add
int
lahf
xchg
mov
cwtl
lock
pushf
insl
arpl
inc
je
adc
or
insl
and
loopne
rorl
cld
and
sub
mov
add
and
and
insl
mov
inc
adc
push
in
out
push
js
popa
in
mov
out
xor
mov
pop
shl
lahf
mov
cmp
cli
mov
cmp
pop
fs
push
jle
push
es
cmpsl
inc
jnp
sub
and
dec
xchg
rcrb
mov
push
aaa
jp
xchg
stc
sti
sbb
pop
rcl
pop
popf
adc
stos
fs
dec
or
shlb
in
shll
mov
mov
mov
mov
insb
push
rol
add
push
inc
xchg
aam
add
stos
into
inc
testl
push
push
mov
or
notl
repz
or
mov
and
fisttpll
je
inc
push
push
mov
andl
cmpsb
or
jg
pop
jo
call
shrb
loop
pop
cmc
test
cmp
scas
dec
mov
dec
sbb
adc
mov
push
orl
dec
outsb
dec
and
push
adc
ja
add
test
fisubl
add
xchg
or
insl
xchg
xchg
mov
dec
loop
sti
or
mov
test
pcmpgtw
les
ret
dec
flds
sahf
push
rol
dec
dec
mov
pop
inc
ds
sub
ret
pop
mov
cmpsl
aad
mov
inc
mov
scas
or
cwtl
sbb
xor
push
loope
mov
gs
mov
push
sbb
andl
movsl
ja
imul
in
sahf
iret
add
sbb
je
outsb
lcall
imul
pop
push
cld
movsl
pop
stos
inc
in
push
sub
push
adc
pop
or
mov
outsl
das
pushf
sbb
push
clc
xchg
pop
jb
jg
mov
mov
mov
lret
push
sbb
std
inc
arpl
xor
inc
inc
inc
inc
or
dec
pusha
mov
shr
fdivrs
sbb
mov
inc
jg
les
dec
xor
mov
adc
mov
xchg
xor
jnp
lcall
pop
or
xor
lcall
xchg
xchg
inc
das
xchg
push
sub
dec
inc
add
jecxz
int
sbb
cmpsl
insb
or
repnz
movl
jbe
dec
inc
xor
and
jecxz
ljmp
fistpl
sbb
incl
mov
sub
call
xchg
into
rcll
ret
sbb
mov
shrb
cmp
push
mov
sub
mov
add
lcall
jg
or
pop
jg
mov
adc
xchg
add
mov
dec
mov
lcall
or
test
testl
clc
std
pop
and
rcrb
incb
std
lock
rolb
pushf
out
int3
mov
push
scas
add
enter
call
jge
cmpsb
int
inc
sub
push
nop
in
orb
push
outsl
cmp
dec
dec
jbe
mov
adc
fdivrp
ret
push
into
xor
fst
pushf
xor
cmp
mov
or
or
fdivr
sub
dec
popa
push
cmpsb
repz
mov
jge
cmp
push
sbbb
mov
in
dec
mov
mov
ret
pusha
inc
inc
sub
repnz
jl
jg
movsl
mov
mov
and
ja
add
cwtl
test
out
repnz
cld
sbb
idiv
cli
notb
and
daa
fistpl
adc
jg
ljmp
cli
and
iret
dec
lret
mov
mov
insl
pop
adc
loop
fcomi
fisttpl
cmp
jl
xor
call
test
imulb
sub
sub
cmp
aad
lods
sbb
lret
xchg
ljmp
insb
jecxz
push
sbb
out
mov
lock
arpl
cmpsb
sbb
and
das
mov
outsb
jle
cmpsb
clc
mov
xchg
push
cmp
int3
xchg
sub
push
xor
pop
pop
push
mov
xchg
jnp
jp
nop
mov
mov
pusha
mov
push
shlb
pop
ficoml
ss
adc
mov
mov
xor
loope
popl
ss
idiv
rorl
cmp
add
sarl
jmp
fisubrl
out
stos
cmp
and
movsb
fidivl
inc
pop
jne
push
leave
movsb
mov
shlb
dec
mov
xchg
lret
sub
cmp
aas
push
xor
mov
and
stos
add
fidivs
push
fwait
popa
push
call
test
out
lret
addr16
lea
and
mov
and
inc
mov
sbb
or
sub
fnstcw
mov
mov
or
push
mov
sarb
jb
sub
shrl
cmc
rorl
sub
mov
cwtl
je
movsl
push
mov
rcrb
mov
ss
and
fnstcw
lahf
nop
pop
add
lahf
push
pop
mov
mov
push
mov
pop
shll
jb
cmp
cmc
xchg
divb
dec
or
adc
push
rolb
xlat
jne
shr
sbb
jbe
insl
in
repz
xchg
and
jno
xor
mov
xor
and
or
push
lods
sbb
cmp
lcall
ljmp
repnz
adcb
out
ss
mov
cwtl
mov
mov
das
xchg
jbe
int3
mov
cmpsb
in
xor
insb
sti
addr16
mov
xor
cli
adc
movzbl
pushf
xchg
jg
cmc
insl
lods
test
in
aas
xchg
cmp
test
mov
adc
cmpsl
outsl
popl
mov
jmp
stos
fwait
enter
cmp
fistpll
in
sbb
ja
sbb
lods
imul
loop
or
lock
pusha
adc
daa
loop
fisubl
jnp
es
mov
push
inc
xchg
ficomps
arpl
mov
insl
mov
pop
je
bndldx
scas
lods
mov
pop
pop
mov
mov
mov
mov
faddp
pop
mov
stos
clc
shl
xor
imul
into
adc
adc
jne
addl
inc
push
stos
loopne
sbbl
push
popa
lock
rcll
jmp
pusha
dec
and
xor
mov
lret
fstpt
cli
push
cmp
mov
fsubrl
cmp
pushf
loopne
mov
fs
mov
sarl
cmp
inc
add
aas
js
xchg
lea
fwait
ss
loop
dec
xchg
mov
insl
dec
push
mov
fiadds
xchg
mov
fstpt
mov
cwtl
cmp
or
jno
xor
pop
icebp
sbb
pop
imul
mov
cltd
call
arpl
pop
aaa
or
mov
mov
pop
jae
inc
pop
mov
sub
jg
sbb
lahf
lea
loop
call
mov
xor
pop
add
test
push
fucom
mov
test
outsl
jp
rcrl
xor
or
outsl
mov
push
inc
mov
aas
add
fwait
iret
cmp
sbb
data16
and
sub
mov
sbb
repnz
and
or
int3
mov
mov
cld
sub
das
mov
hlt
imul
lea
add
mov
xor
int3
sub
xchg
adc
adc
adc
mov
cmpsl
inc
ret
push
dec
icebp
std
inc
pop
ficoml
cmp
sub
gs
push
arpl
movsb
cmpsb
fdivl
push
mov
mov
andl
xchg
xlat
lahf
xchg
fwait
xchg
in
mov
pop
xor
mov
pop
xlat
mov
addl
pusha
cmpsl
in
push
xorl
add
push
adc
iret
xchg
jl
sbb
xchg
sbb
cltd
repz
xchg
rcrb
imul
jnp
cmp
test
mov
subl
or
xor
xorl
sub
dec
shrl
int
xor
fs
lcall
lea
in
cmp
out
test
scas
xorl
dec
rclb
arpl
or
fnstsw
cld
xorl
inc
pop
push
in
adc
inc
test
mov
lds
call
loope
sub
add
dec
cli
lea
pusha
jb
cmp
test
xchg
pop
mov
mov
aaa
cmpsb
sub
rclb
sub
inc
sbbl
xor
ret
mov
xor
js
push
mov
jo
sbb
push
fsin
mov
orb
inc
cmp
aam
mov
in
or
sbb
repnz
sbb
mov
lock
dec
pop
pop
mov
pmulhuw
add
push
cli
aaa
ds
add
insl
jne
lods
insl
inc
add
lret
cmp
push
stc
shl
call
ljmp
testb
cmpsb
les
sub
jp
cs
sub
lea
scas
gs
lret
addr16
cmpsb
or
xchg
imull
mov
popf
sbb
push
scas
xor
mov
mov
std
pop
outsb
into
popf
xchg
jne
jb
sbb
xchg
outsl
adc
push
insb
outsl
ror
cld
aad
fucomi
adc
inc
fs
addr16
mov
mov
aas
and
ljmp
xor
pop
mov
ja
mov
lret
sahf
mov
int3
xorb
fstpl
mov
adc
out
mov
adc
ds
cmpsb
adc
xchg
xor
add
inc
push
inc
adc
add
sbbb
inc
ds
sub
aam
xlat
in
dec
lea
mov
mov
adc
sub
inc
bound
sbb
dec
mov
mov
inc
add
fbld
and
imul
shlb
lcall
das
pop
roll
mov
xor
dec
mov
jbe
inc
jmp
enter
xchg
dec
loop
sub
xchg
pushf
nop
leave
inc
lods
test
xchg
push
pop
push
fwait
inc
sbb
inc
in
aad
insl
jmp
pop
fistl
es
aaa
adc
cmp
inc
insb
add
lret
jl
shrl
jae
fmulp
lods
mov
out
mov
push
and
insl
das
push
jae
inc
and
push
cmp
inc
mov
push
xor
out
pop
add
lds
add
stc
sub
stos
jle
pop
popaw
adc
ljmp
xchg
dec
inc
and
pop
xchg
push
movsl
and
inc
pop
cltd
add
stos
mov
sub
cltd
aad
imul
xorb
js
data16
jmp
ja
dec
call
js
sarl
out
sti
jp
fcompl
out
jae
out
mov
mov
add
pusha
aad
dec
iret
ljmp
xchg
dec
fstl
push
lods
dec
xchg
scas
jns
jl
je
lcall
cli
add
xchg
inc
sti
out
rcll
and
or
jmp
pop
jl
fwait
out
sbb
cmp
mov
jl
out
push
fsubrl
test
mov
add
lret
aad
mov
pop
repnz
mov
push
repz
mov
sub
add
dec
js
dec
mov
jne
add
mov
lods
pop
pusha
addr16
pop
mov
out
rcrb
imul
js
repz
adc
fsubr
idiv
int
pop
mov
data16
push
jge
xchg
mov
sti
push
repz
mov
xor
aam
push
push
std
pop
push
mov
mov
cld
addr16
test
repnz
ds
movsl
jne
leave
loopne
cmpsl
or
inc
pushf
data16
test
sub
aam
sub
dec
out
mov
or
mov
ds
sbb
lods
push
rclb
jge
sbb
push
sub
sub
arpl
xor
sbb
xchg
or
repnz
insl
js
ret
lret
jbe
or
cmp
std
jl
movb
mov
xor
cltd
add
ljmp
enter
aam
sub
sahf
addr16
shrb
xchg
cmp
cmc
decb
cmp
mov
sub
lea
iret
std
and
ss
out
ret
or
pushf
push
nop
push
fisubl
and
bound
pop
ffreep
sbb
cmpsb
popa
pop
lret
aas
mov
test
sbb
dec
add
cmp
mulb
xor
nop
cmp
scas
pop
adc
mulb
rcrb
xchg
xchg
pop
mov
push
icebp
ja
or
cmp
jnp
and
push
sti
sbb
les
jmp
je
in
cmc
add
push
push
movsl
leave
mov
lds
loop
mov
mov
and
popf
daa
fbld
xchg
js
push
and
xor
push
out
mov
mov
inc
rcll
jle
pop
xchg
adc
insl
repnz
cmp
adc
push
sarl
xlat
leave
push
popl
xlat
rcll
mov
adcb
push
adc
mov
inc
add
pop
inc
imul
lods
sarb
inc
sub
add
add
clc
in
xchg
ljmp
pop
and
mov
push
cltd
pop
out
xor
ja
push
std
icebp
mov
sbb
jle
push
ja
call
push
mov
repnz
sbb
pop
test
sub
stos
in
notl
xor
sub
in
lods
adc
pushf
push
hlt
push
cwtl
pop
pop
stos
mov
lret
inc
movsb
xchg
int3
lods
aas
insb
inc
pusha
cltd
add
lahf
mov
add
insl
scas
pop
lcall
inc
add
mov
or
push
mov
jbe
jp
lods
movsb
push
dec
jl
mov
mov
cs
sbb
xchg
daa
add
jle
frstor
icebp
testb
add
inc
xchg
dec
xlat
adc
rdtsc
mov
and
fcoml
dec
aas
or
fs
js
fnstenv
filds
divl
dec
lds
aam
inc
sub
jne
lods
loop
mov
pop
xchg
imul
bound
in
ror
lock
repz
mov
aaa
adc
lods
pusha
aas
sbb
mov
jg
std
lret
sub
and
lods
add
mov
rcrb
or
mov
pop
lcall
clc
jae
sub
add
mov
test
sti
fdivrl
push
addr16
sbb
out
stos
cmp
lea
cmp
cmp
mov
or
jg
push
jecxz
repnz
jbe
dec
add
cmp
cmp
loope
test
dec
mov
fcoml
inc
and
push
sbb
out
aaa
lcall
mov
mov
loopne
mov
addr16
outsl
sbb
enter
mov
push
push
sub
xchg
repz
push
cmp
aas
in
shll
out
cmpsb
jae
outsl
adc
push
sub
mov
add
and
adc
and
test
mov
push
test
mov
adc
sbb
fdivr
addl
enter
sahf
fwait
sub
mov
and
stos
jb
or
lahf
sbb
cli
dec
xor
jp
pop
add
iret
pop
mov
cld
out
fidivrs
adc
nop
pop
into
bound
adc
mov
push
clc
fadd
cmp
dec
repz
add
push
mov
stos
cli
ja
insl
loope
or
lahf
nop
dec
fidivl
imul
lahf
push
insb
dec
popa
fwait
loope
jl
or
xchg
test
loope
popf
stc
sbb
inc
cmpsb
ret
ret
test
movsl
and
shl
sub
outsb
aam
mov
cwtl
pop
sub
add
or
movsb
cmpsb
pop
xchg
mov
sub
int3
mov
mov
or
push
or
or
lods
pop
ss
popa
mov
xor
pop
shl
imul
aas
loope
movsb
aas
xchg
ret
insb
mov
push
cmpl
outsb
test
mov
ds
cmp
orb
ds
cmpsb
inc
cmpsb
jmp
mov
push
mov
add
ret
out
or
pop
mov
adc
cmp
dec
xor
and
mov
dec
int3
or
pop
mov
pop
dec
adc
push
sbb
into
mov
int3
lahf
popa
sbb
aad
subb
jne
push
cli
cli
push
mov
movsl
jle
mov
jbe
mov
sub
sub
mov
movsb
xchg
lret
pop
rcr
dec
pushf
scas
js
sbb
jo
stos
insb
cltd
rolb
add
jg
rorl
pop
pop
push
pop
mov
call
jb
adcl
mov
bound
inc
or
jp
iret
ja
mov
inc
xlat
movsb
pushf
add
push
jnp
pop
into
lea
lret
sbb
inc
push
in
in
ljmp
and
mov
fcoml
cltd
shll
inc
fwait
mov
mov
xchg
sub
iret
mov
out
cli
dec
jne
lods
mov
pop
fwait
cmpsl
xor
test
dec
inc
call
mov
pop
adc
mov
mov
mov
test
aas
mov
test
pop
mov
dec
addb
inc
pop
loope
shrl
cmc
jp
push
pusha
mov
push
cmp
ret
mov
in
xor
cwtl
cmc
roll
pop
ljmp
or
mov
or
rorl
scas
lods
inc
pop
cmp
xchg
jge
outsl
movsl
xorb
push
sub
or
fcomps
jmp
dec
mov
pop
loop
cmp
imul
nop
dec
push
ret
data16
pop
xchg
jge
inc
movsl
push
add
fldt
ret
ror
ret
jnp
outsb
and
adc
jg
addr16
pop
mov
data16
jne
lahf
lret
jge
cmpsl
mov
xchg
out
cmpl
dec
jb
pop
push
jecxz
cmp
or
sub
pop
std
pop
jl
cwtl
dec
adc
push
inc
sbb
adc
dec
jns
pop
jecxz
in
repnz
mov
mov
shlb
cwtl
mov
lcall
rcr
adc
rorb
adc
cwtl
js
into
or
ds
jae
cltd
int3
lahf
mov
pop
icebp
push
rcll
mov
inc
jmp
mov
pop
lea
dec
push
fisttps
jb
inc
cmp
shrl
push
sub
dec
mov
adc
lods
js
js
dec
fildll
leave
sbb
in
orb
cld
push
inc
push
mov
enter
jge
xchg
inc
sbb
aas
pusha
mov
in
and
adc
loope
xor
pop
outsl
push
jmp
inc
add
cmp
adc
lahf
pusha
dec
jb
fucom
lods
jno
mov
pop
loopne
cmp
push
rorb
cltd
mov
nop
mov
hlt
je
cs
xchg
push
xor
fcomps
mov
or
loope
cmc
je
cmpsl
lock
pop
push
inc
test
test
xchg
lahf
xchg
inc
xchg
rcr
jae
in
pop
sbb
mov
scas
hlt
mov
loop
or
dec
add
and
rcll
test
xchg
insl
int
incl
in
les
sub
and
repz
into
pop
je
pop
loop
xor
cmp
loope
mov
out
push
fs
data16
jbe
pop
pop
fnsave
call
push
mov
pop
hlt
ja
sub
ds
leave
add
pop
sbb
push
jecxz
cmpsl
pop
pop
aaa
test
cmc
mov
pushf
pop
fisubs
sub
femms
push
or
in
adc
jp
dec
mov
dec
xchg
pop
sbb
stc
enter
or
or
mov
add
dec
sbb
pop
pop
push
jecxz
sbb
mov
cmc
jne
fstl
mov
add
jl
addl
rclb
xor
pop
xlat
cmp
and
adc
jle
or
cltd
add
dec
decl
imul
out
cmp
inc
mov
push
clc
and
out
mov
jae
sub
dec
adc
dec
mov
test
mulb
clc
cltd
and
cld
jp
mov
add
and
test
stos
ja
lods
stos
cmp
sub
adc
mov
aaa
pop
cmpsb
sub
mov
xor
sahf
pop
mov
outsl
cmp
jb
mov
gs
jo
xchg
pop
gs
movsb
jns
mov
inc
add
popa
adcb
inc
leave
mov
popa
xorb
pushf
mov
adc
xor
std
imul
push
ret
mov
dec
aam
bound
xlat
xchg
adc
repnz
arpl
test
push
and
pop
jnp
mov
flds
pop
jmp
imul
lods
mov
pop
jbe
notb
out
jne
cmp
adc
and
iret
pop
or
add
xchg
pusha
jmp
fcoms
lock
movsb
test
and
jno
int
ret
sbb
mov
rcr
push
js
int
dec
leave
ret
jg
mov
arpl
add
and
inc
jns
insb
xor
pop
leave
not
or
sub
push
xchg
dec
in
push
pop
dec
push
mov
ret
std
jb
mov
dec
sub
xchg
xchg
in
jno
imul
jo
loopne
mov
jo
cmp
mov
add
inc
pop
and
jnp
push
jne
xor
xor
mov
movb
and
xorb
dec
xor
int
mov
pop
cld
icebp
mov
or
mov
loope
jnp
sub
push
lods
jo
in
call
jne
cli
mov
or
lret
leave
sbb
ret
mov
lahf
pop
in
loopne
cmp
jg
in
pusha
xchg
xchg
je
lea
sub
pop
je
add
or
les
adc
movsb
jmp
js
dec
aaa
aaa
mov
dec
mov
in
adc
aam
aas
inc
or
push
dec
inc
roll
push
std
push
push
lock
push
mov
xchg
addr16
sbbl
arpl
in
arpl
cmpl
cmp
rol
xor
push
fsubrl
fidivrs
pop
sbb
cmp
jl
daa
xchg
inc
imul
stc
xchg
jl
je
pop
xchg
sub
add
and
xchg
icebp
fs
sbb
add
adc
mull
dec
cmp
call
mov
mov
ja
jne
lret
inc
push
xor
inc
popf
pop
test
es
roll
sbb
sub
movsl
sbb
pusha
les
ret
push
xchg
imul
hlt
push
mov
das
out
std
jge
fldl
pop
jmp
daa
dec
mov
ljmp
jecxz
xchg
rcll
pop
jbe
push
hlt
shr
js
sub
iret
jmp
popf
cltd
and
add
out
jle
lock
sbb
mov
mov
in
dec
xchg
sub
inc
clc
mov
sub
std
loope
xlat
fs
mov
and
scas
xor
mov
pop
sub
faddp
lahf
inc
xchg
or
notb
dec
jge
ret
and
mov
insl
in
pop
repz
jg
sub
pop
call
popf
mov
insl
mov
push
ffreep
push
cmc
sahf
pop
lods
and
jae
iret
test
shlb
shll
mov
mov
popf
out
cmp
out
push
mov
pushf
adc
mov
push
scas
xor
fldl
cltd
pop
push
ja
dec
xchg
mov
xor
dec
mov
ret
sahf
cltd
inc
jb
test
lods
mov
fidivrl
and
ficompl
jmp
xchg
inc
push
push
and
and
pusha
xchg
xor
pop
clc
xlat
xor
cmp
mov
pop
cwtl
add
sahf
insl
das
push
cltd
dec
jbe
loope
sbb
insb
movsl
outsl
shr
xor
ja
mov
jp
jle
aam
xchg
cmp
dec
int3
add
cwtl
and
mov
mov
xor
and
movsb
mov
daa
xor
fsubr
and
pop
and
add
pusha
mov
dec
xchg
fwait
push
movsl
lret
xchg
cld
push
sub
test
or
cmp
fisttps
loope
stos
mov
adc
xlat
fdivr
mov
les
dec
sbb
inc
aad
adc
lds
xchg
and
insb
sub
sbb
xchg
xchg
test
cli
jp
dec
ret
insl
inc
test
orl
jb
dec
pop
lods
sub
sbb
dec
dec
clc
mov
cs
outsb
rcrl
xchg
test
xor
xor
iret
add
sbb
xchg
jbe
rorl
add
mov
pop
push
and
inc
and
adc
in
and
in
mov
andb
sbb
mov
repnz
into
fmul
rclb
sbb
shr
movsb
jno
sbb
test
pop
dec
aad
nop
pop
add
pop
lret
cmp
repz
lcall
xchg
mov
and
out
inc
lock
cld
mov
sub
xchg
adc
xor
mov
mov
nop
cmc
ja
roll
in
sub
jecxz
xchg
std
lret
rolb
adc
mov
scas
xchg
cmc
adcb
add
icebp
rsm
add
sbb
int
test
pop
xchg
push
mov
jne
sbb
mov
sub
cmpsb
loopne
jno
fldl
and
or
mov
jns
dec
or
cld
xor
in
negl
mov
xlat
adc
push
bound
out
fisttps
mov
ds
jmp
repnz
adc
and
cmp
add
dec
mov
movsb
sub
ljmp
lahf
es
dec
inc
add
dec
fildl
mov
fstpt
lods
fisttpll
jo
jae
jle
mov
outsl
jp
inc
scas
sbb
mov
jl
add
xor
and
fistl
jne
fs
icebp
sbb
add
or
test
xchg
fstpl
jp
sub
pop
xor
movsb
ja
jle
test
enter
xchg
sbb
out
push
sbb
cmp
mov
loop
out
or
cwtl
add
sti
inc
imul
pop
div
pop
lods
movsb
push
pop
jnp
sbb
mov
fnstenv
push
mov
mov
inc
pop
push
dec
sbb
lds
mov
mov
cld
add
or
push
jge
mov
cmp
decl
or
into
pop
jne
es
fimuls
lds
pop
jne
or
pop
stos
nop
cmpsl
and
lret
stc
fidivl
hlt
mov
xor
and
fidivrl
fnstenv
pop
outsl
lods
xchg
mov
mov
push
jbe
scas
jmp
push
adc
jge
xchg
jns
imul
adc
or
add
pop
mov
imull
and
cs
mov
in
andps
cmp
pop
jne
mov
jg
in
push
in
popa
pop
stos
in
pop
test
repz
sub
in
ficomps
out
adc
mov
mov
movaps
cmpsl
mov
pop
pushf
lret
imul
ret
cmp
cltd
es
or
inc
push
cld
popf
adc
loope
and
dec
pop
mov
std
dec
imul
xor
inc
ret
push
xchg
sbb
jmp
idivl
mov
dec
rorb
dec
jmp
ljmp
fisubrs
adc
jmp
xchg
mov
mov
insb
mov
mov
mov
shrl
jnp
in
inc
test
jl
push
or
push
daa
cmp
inc
fdivs
cmp
sub
and
sti
into
pushf
popa
sub
sahf
loop
lods
insl
push
je
cmp
pop
popf
scas
outsb
mov
push
push
xor
push
pushf
pusha
sbb
inc
xlat
inc
or
mov
dec
scas
sub
loope
les
inc
out
roll
sub
stc
int
add
je
mov
xor
or
jmp
loope
test
dec
inc
movl
add
mov
repnz
adc
fstpt
jbe
push
push
mov
lea
adc
mov
mov
sbb
pop
std
inc
xchg
sbb
repz
out
imul
pop
jae
pop
push
mov
and
dec
cld
sbb
pop
jg
jp
int3
subb
ja
loop
jo
sbb
lea
jge
jg
sub
mov
outsl
sub
or
test
cwtl
push
pop
movl
mov
incb
jmp
adc
mov
push
mov
xor
dec
fildll
and
jp
add
jb
xchg
dec
lcall
pop
fnstenv
xor
jno
clc
sbbb
das
mov
imul
clc
sub
pushf
add
nop
sbb
pop
cmp
sbb
cmp
add
mov
cmp
mov
cmp
xor
sahf
hlt
pop
inc
add
push
mov
scas
sub
rolb
arpl
repz
push
push
movsb
stc
clc
sbb
xorb
ret
cmp
pop
fwait
loopne
rcrl
addr16
subl
dec
dec
fimull
mov
dec
add
cmpsl
addr16
lahf
or
jo
fisttpl
call
push
dec
mov
into
mov
mov
xchg
jae
mov
aad
adc
ret
lret
and
dec
test
sbb
shl
mov
fwait
test
push
ja
sti
mov
jle
addr16
add
mov
inc
sub
cmpsb
dec
add
or
add
pop
rcrl
js
outsl
mov
in
and
lcall
daa
repnz
test
pop
repz
jmp
xchg
sub
fsubl
lods
aaa
push
loop
cmp
popf
shr
inc
sub
dec
pushf
inc
mov
cmc
jmp
and
fs
add
fsubl
jo
push
lea
jle
clc
mov
xchg
hlt
movsl
dec
add
mov
mov
mov
xchg
xchg
cmpsl
das
in
sub
aad
push
adc
xor
cmpsl
jmp
enter
movsl
in
jge
pop
fmull
xadd
dec
jno
sub
jg
push
shll
inc
fldenv
ret
push
sbb
fimuls
push
pushf
imul
fcmovne
dec
cmp
pop
xor
inc
mov
repnz
pop
adc
jo
cmpsl
mov
loope
push
dec
es
or
mov
movsl
andb
sub
push
xchg
lds
out
push
mov
dec
ljmp
and
pop
loope
sub
out
fisttps
jp
xchg
lret
shr
test
and
cwtl
inc
rcr
pop
ret
and
xor
loop
inc
das
out
jne
cs
imul
lret
mov
insb
clc
lock
pop
lret
mov
or
das
inc
cmpsl
aam
mov
pop
pushf
inc
and
cmc
push
or
cltd
mov
ljmp
in
xchg
daa
lahf
insl
and
and
call
dec
sub
lea
mov
jge
sub
or
lahf
adc
popf
or
push
imul
cmp
out
bound
mov
and
push
out
sub
popa
inc
jnp
jge
js
bound
xlat
and
cmpsb
jmp
inc
inc
adc
leave
inc
sbbl
pusha
lahf
out
int3
mov
data16
stos
insl
ficomps
std
mov
mov
sbb
int
imul
mov
xor
ds
and
dec
loope,pn
sbb
aaa
jne
pop
ret
fisttpll
int3
inc
xchg
dec
ds
dec
sub
bound
mov
push
xlat
shlb
ret
sbb
test
sub
lea
sub
or
pop
jp
fcoml
pop
scas
push
jmp
xchg
add
scas
imul
xchg
ss
inc
lods
cmpsl
xor
insb
add
ret
and
fstpt
jl
lock
or
sahf
popa
test
pop
aas
popl
scas
cwtl
inc
insl
xor
jmp
test
int
ret
xor
lods
pusha
maskmovq
imull
dec
divl
rorl
popf
adc
sub
mov
xor
adc
lea
ljmp
inc
mov
fbld
jmp
pop
pushf
adc
or
adc
rolb
xchg
add
fisubrs
dec
sub
hlt
hlt
inc
hlt
or
arpl
mov
push
add
or
jge
dec
pop
rclb
lret
xlat
push
dec
pop
or
sbb
shll
out
inc
test
test
inc
mov
orb
inc
mov
xor
mov
xchg
ljmp
orb
push
imul
inc
sti
add
adc
cmpsb
popl
aam
inc
fwait
pop
xor
sbb
jne
mov
sub
sarb
pop
and
scas
mov
xchg
cmpsl
dec
jne
add
ja
push
jle
fidivs
adc
mov
push
movsb
and
push
inc
fwait
push
outsl
out
inc
mov
popf
int
adc
test
xlat
or
je
fcmove
cli
jbe
jbe
popa
hlt
pop
jbe
pop
stc
es
and
outsl
pop
lods
jb
pop
outsl
or
pushf
xchg
mov
fdivrl
popa
and
je
push
scas
movsl
xchg
dec
ret
or
push
jp
jbe
mov
or
sub
fisubrl
sbb
outsb
out
mov
mov
ficompl
jecxz
or
repz
pop
lret
cltd
cwtl
js
dec
inc
xchg
jg
sub
or
pop
popa
xchg
daa
jae
adc
pushf
aam
enter
xchg
call
js
or
fiaddl
es
mov
or
mov
mov
add
imul
xchg
inc
cmp
lret
xchg
push
mov
xchg
fnstsw
mov
xchg
cmp
sub
push
xchg
push
lahf
jp
inc
pop
inc
and
mov
jns
nop
inc
test
add
inc
leave
sarb
jle
mov
and
pop
nop
int
xchg
and
cmp
hlt
or
or
shlb
adc
imul
pop
mov
popf
mov
lock
sub
add
push
leave
xchg
icebp
imul
mov
int3
or
enter
ret
test
test
sub
adc
xor
sbb
shlb
dec
mov
and
mull
xor
jl
cmp
xchg
in
fisubl
inc
push
jno
mov
pop
inc
mov
dec
int3
mov
ljmp
xor
lahf
lods
add
call
mov
mov
cmp
or
pop
test
divl
inc
and
dec
jns
xor
adc
pushl
cmc
push
cld
jnp
add
fisttpl
nop
daa
imul
or
mov
cmp
test
push
stos
and
out
dec
cmpsl
icebp
lcall
ljmp
insl
mov
mov
dec
push
popa
addr16
jl
shrb
adc
or
test
bound
inc
iret
frstor
pop
fs
fdivrl
adc
mov
in
jmp
xor
add
fwait
outsb
jl
add
arpl
mov
mov
test
adc
sub
xchg
sar
je
xor
push
mov
js
in
mov
dec
repz
or
cmp
fs
sbb
mov
ret
or
and
ss
sbb
call
mov
xchg
xor
push
out
jle
cmp
adc
lcall
loope
jecxz
arpl
data16
xor
fwait
add
push
inc
fnstcw
add
or
test
inc
cmp
dec
test
cltd
in
push
jae
ret
mov
mov
jmp
pcmpgtw
inc
into
push
sbb
hlt
fsubr
or
push
adcb
in
out
daa
aaa
dec
xchg
jle
xchg
aas
mov
leave
addr16
ret
repz
test
fldt
jne
jb
ret
and
mov
pop
mov
fnsave
jg
adc
in
cmp
xor
js
mov
out
inc
cltd
call
in
push
xchg
stos
fmul
add
cmp
xchg
popa
inc
jmp
push
imul
push
or
xchg
das
and
daa
mov
xlat
jl
das
dec
data16
mov
mov
icebp
test
sub
add
or
repz
fwait
andb
imul
add
mov
out
dec
dec
imul
and
xlat
sub
ja
or
pushf
bound
sbb
sbb
or
fwait
push
int3
xchg
adc
xor
addb
jge
aad
xor
xor
dec
xor
sbb
fisubrs
mov
lods
push
pushf
push
std
sub
aas
mov
add
lret
imul
cmpsl
mov
pop
add
das
shll
loop
lea
mov
sub
out
push
cmp
stos
or
xlat
sahf
in
fwait
clc
and
ret
push
rcrb
enter
mov
adc
pop
mov
push
cmp
aad
stos
lock
test
ret
sub
jnp
jae
das
addr16
rorb
lds
orl
sub
cmp
je
jae
rclb
int3
out
andl
les
int
mov
push
cmp
mov
int
rol
xor
gs
mov
into
test
sub
or
xchg
sub
subb
adc
mov
jbe
push
stc
dec
and
hlt
jg
out
int3
mulb
cmp
or
xchg
dec
sub
cmp
and
mov
ja
stos
mov
imul
xchg
add
pop
scas
fcmove
jle
rcrb
adcl
mov
jmp
xchg
mov
mov
loop
clc
out
repnz
mov
adc
in
clc
in
loop
mov
cmpl
push
xor
or
adc
popa
mov
dec
jne
ret
cli
lock
jmp
sub
push
add
cmc
pop
rcll
lret
mov
mov
mov
or
movsl
icebp
push
or
push
hlt
rorb
test
mov
iret
and
into
and
jnp
mov
jnp
pop
movsl
es
mov
inc
xchg
imul
jns
js
push
mov
out
repnz
mov
pop
ds
es
sub
inc
push
imul
push
aas
jmp
out
sub
fcoms
loopne
call
add
out
dec
inc
jns
jns
pop
test
cltd
or
sbb
jb
pop
pop
stc
dec
push
ret
daa
in
xor
push
push
or
and
mov
repnz
push
inc
idivl
popf
hlt
popf
scas
mov
and
dec
mov
stos
lea
adc
outsl
ret
inc
dec
xchg
stos
add
std
fimuls
push
iret
loop
jae
and
cmpsb
enter
or
pop
cmp
jnp
adc
imul
arpl
or
dec
inc
add
xor
je
cs
or
or
insb
pushf
pop
pop
data16
push
fnsave
scas
jmp
addr16
addl
data16
dec
pop
out
mov
mov
pop
or
xchg
out
aam
insb
lods
test
testb
orb
and
pop
jne
arpl
fnstsw
dec
aas
fucomp
sahf
sbb
mov
mov
cmpsl
push
mov
jo
pop
add
mov
sbb
fadds
ss
je
cltd
dec
cwtl
xchg
push
in
push
dec
les
cs
xchg
outsl
pop
fwait
pop
mov
shll
loopne
jmp
fmull
lcall
xchg
cmp
movsl
sbb
popf
adcb
sahf
mov
jge
mov
mov
es
mov
jae
or
inc
inc
jne
cmp
test
mov
jmp
cltd
nopl
push
sub
fwait
or
call
push
ja
xchg
out
stc
cmp
push
pushf
fdivs
es
ret
push
add
mov
and
aas
add
pop
jo
jge
push
test
mov
xor
cmp
xchg
sub
or
filds
push
mov
sub
xlat
repz
jg
outsb
dec
inc
mov
xchg
xrelease
xor
sub
xchg
sahf
mov
in
imul
xchg
push
sub
mov
mov
add
imul
das
cmpsb
push
cmp
test
mov
jbe
les
push
andb
sub
ss
fmuls
or
subb
jg
mov
adc
or
adc
pop
cli
jp
in
imul
in
xor
push
xchg
mov
aam
sbb
jnp
stos
repnz
fprem1
mov
imul
std
orl
jae
pushf
int
mov
mov
add
jmp
je
fcomps
fdivrp
fwait
aas
push
and
out
sbb
loopne
pop
sbb
push
pop
fcmove
adc
enter
sbb
pop
pusha
popa
pop
sahf
dec
mov
mov
dec
lods
test
scas
mov
xor
cmp
cmp
rclb
push
jns
mov
xor
cmpsb
iret
xor
test
bound
inc
mov
sti
add
fimuls
lcall
or
aad
pop
pusha
pop
lcall
shrb
cs
jecxz
std
or
pminsw
repnz
push
fcoms
fcoms
sarb
mov
cld
mov
cli
cmp
cltd
inc
cmp
mov
fs
jecxz
ds
xlat
or
ljmp
in
dec
into
push
mov
or
add
sbb
fadds
and
mov
repz
loope
dec
and
fs
iret
shlb
das
push
js
adc
in
push
inc
loopne
int
dec
xlat
in
or
mov
test
iret
adc
mov
jbe
or
daa
jae
test
lahf
cmpsl
divb
insb
sub
add
ss
xor
aad
cmp
pop
sbb
or
pop
pusha
cmp
inc
stc
adc
and
pop
lea
inc
test
jge
or
add
mull
cmp
std
or
mov
inc
inc
fisubrs
push
mov
adc
mov
lret
and
sbb
mov
lea
xchg
dec
sub
out
lahf
movsl
aas
in
adc
inc
stos
mov
lods
daa
cmovb
add
mov
add
push
ss
sub
jmp
pop
cmpsl
sub
pushf
sbb
gs
mov
jno
pop
inc
out
std
xor
pusha
sbb
mov
pop
mov
je
xchg
inc
adc
push
fldenv
mov
movzwl
stos
or
ret
jbe
inc
and
in
les
nop
pop
push
jge
and
add
push
sahf
scas
dec
sbb
mov
push
decb
push
cmp
pusha
aam
push
call
insb
sti
jno
jge
sub
lods
or
clc
mov
add
jbe
cwtl
scas
ljmp
mov
xchg
adc
ljmp
icebp
adc
mov
and
jb
mov
call
pop
popa
fcompl
movsl
inc
pop
vmwrite
xor
lcall
test
les
jnp
push
cmpsb
mov
sub
mov
xchg
stos
int3
cmp
loope
jae
mov
cwtl
add
adc
mov
fdivs
or
insb
ss
jg
test
movsl
mov
mov
cmp
sub
jl
jo
fsts
mov
aad
add
jle
xor
mov
mov
push
mov
daa
adc
outsb
icebp
jns,pt
fbld
mov
xor
mul
xchg
adc
daa
cltd
pop
jl
call
sbb
in
inc
dec
in
jle
mov
sarl
push
jge
mov
loope
or
mov
sub
xor
dec
out
pushf
mov
jb
cld
cltd
sbb
cmp
lret
adc
ret
pop
inc
push
or
in
or
inc
scas
pop
mov
scas
mov
test
imul
inc
push
sbb
and
fstps
fimuls
dec
push
outsb
lds
mov
out
push
and
repz
shlb
jle
xchg
fcoml
dec
xchg
inc
loopne
mov
add
mov
adc
aas
adc
cmp
dec
and
xchg
mov
mov
inc
inc
xor
mov
leave
in
lods
jl
cwtl
cmpsb
and
inc
mov
adc
jp
leave
fsub
pop
fwait
movsb
ja
push
add
cli
push
jp
or
cmp
mov
lret
outsl
scas
shrb
mulb
mov
dec
rorl
cmpl
in
fwait
imul
js
cltd
or
lret
mov
push
adc
call
arpl
inc
inc
adc
push
dec
mov
pop
cmp
out
loopne
mov
daa
sbb
dec
bound
xchg
mov
lods
aad
inc
mov
and
ja
jg
jnp
and
test
xchg
or
ss
int
int3
aam
repnz
add
sahf
pop
mov
inc
sahf
dec
pop
push
ret
push
repz
fmuls
xor
stos
mov
repnz
adc
jbe
enter
ds
mov
add
insb
sub
sub
sub
cmp
mov
popa
push
mov
fmuls
imul
roll
dec
jnp
mov
jo
insb
pop
add
frstor
dec
jmp
xchg
enter
jmp
xor
fistpl
fs
sbb
rorl
fmuls
ja
adc
fldenv
sbb
xor
lcall
insb
sbb
pop
pop
cmp
add
push
push
sub
movsl
mov
xor
xor
pop
je
and
mov
imul
cmpsb
xor
pop
lods
std
enter
aas
test
pop
inc
pop
bound
jns
pop
sub
subb
add
insl
mov
mov
push
loope
idivb
out
xor
movsl
in
jecxz
dec
xor
sub
push
lcall
mov
frstor
ret
in
scas
pop
jns
outsb
outsl
xchg
pop
test
dec
mov
js
lret
in
call
mov
dec
lods
movsl
mov
jge
push
pop
incb
stos
fmuls
xor
xchg
cs
jp
into
out
or
faddp
scas
loopne
push
push
rolb
inc
cmpsl
xor
inc
dec
adc
insb
and
xlat
xchg
scas
push
stc
or
add
mov
jp
sbb
mov
sbb
mov
mov
mov
mov
dec
inc
aas
sub
mov
jle
xor
mov
shrl
daa
maskmovq
notl
jmp
out
or
mov
jecxz
mov
mov
sub
mov
pop
inc
jle
repz
dec
push
lods
mov
lret
add
nop
xor
repz
jbe
int
fistps
cmpsl
fs
mov
les
repnz
scas
sbb
pop
or
repz
sub
xchg
xchg
sbb
popf
mov
adc
pusha
add
pop
call
int3
adcb
xor
sbb
push
pop
idivb
mov
mov
clc
xor
push
shll
cli
and
or
cli
insl
sahf
stos
sbb
pusha
sub
mov
cld
push
lret
cmp
xchg
jmp
push
bound
jmp
jnp
test
adc
pusha
inc
sbb
stos
iret
ds
lahf
fsubrl
inc
lahf
test
dec
lods
xor
xchg
push
and
xor
cli
icebp
dec
xor
lock
je
rorl
pusha
sub
rcrl
out
loop
insb
out
dec
push
inc
cmp
ret
icebp
scas
mov
sti
push
sub
ds
mov
push
mov
push
xor
mov
and
mov
setp
jmp
and
inc
insb
cwtl
out
dec
mov
movb
sti
dec
ds
jge
shrb
add
jb
sub
je
rep
les
inc
aaa
push
add
test
mov
scas
inc
mov
cmp
cmp
movsl
or
mov
jbe
jno
sub
daa
push
ja
and
mov
sbb
cmp
cli
js
jae
enter
xchg
add
jae
aam
lret
add
dec
aaa
insl
push
stc
jo
sub
mov
in
push
loopne
aad
cmpsl
xchg
xor
popf
or
movsb
mov
xor
sbb
xor
jmp
mov
xchg
dec
call
inc
iret
add
cmp
fstpl
je,pn
iret
lock
loopne
dec
pop
mov
fdivrs
das
pusha
jae
daa
cmp
rcrl
int
orl
mov
jne
sbb
fsubl
scas
xor
sbb
pop
cli
stos
pop
inc
lret
sbb
and
je
lds
fwait
mov
or
aaa
and
dec
aas
push
xchg
pop
sbb
jnp
loopne
ss
lds
mov
push
hlt
je
cltd
mov
mov
fnsave
daa
out
scas
loopne
and
or
pop
xor
stos
gs
ljmp
movb
jl
push
mov
and
push
sub
mov
xchg
cmp
scas
inc
jmp
cld
adc
mov
pusha
es
dec
or
mov
bound
cmc
or
pop
sbb
ja
mov
pop
mov
je
xor
jnp
xlat
adc
adc
fs
or
sti
andb
lods
loope
in
pop
jne
and
roll
imul
sbb
adc
lcall
roll
xor
shl
leave
xor
imull
jl
test
pop
stos
cli
mov
cmc
push
xchg
mov
scas
cs
xchg
xchg
and
lock
lcall
sbb
enter
pusha
loop
mov
popa
mov
xlat
push
jnp
andl
js
fsub
mov
jp
inc
inc
pop
mov
lea
cmpb
shll
pop
fstl
addr16
popa
and
push
lds
iret
add
es
mov
fsubrp
sahf
cwtl
fcoml
xchg
xchg
push
xor
stos
lea
push
movsb
xlat
add
mov
mov
fisttps
movsb
or
sbb
xchg
pop
ret
lret
xchg
xchg
adc
push
dec
aaa
sub
xchg
out
xor
fildll
inc
sub
xor
xchg
add
outsl
xor
jle
int3
cmp
out
ds
push
lea
pop
xor
jp
pushf
subl
movsl
lcall
xlat
into
sub
dec
xlat
test
stos
sub
mov
jg
push
pop
rcrb
sub
cmp
imulb
lret
divl
gs
in
in
add
push
jge
and
inc
xor
jl
xchg
mov
mov
xor
mov
leave
dec
push
sahf
shlb
fcmovne
push
inc
add
push
push
mov
pusha
jae
aas
xlat
cs
push
pop
adc
lds
adc
ficomps
mov
les
popa
cmpsl
andb
imul
mov
jle
mov
popf
lcall
gs
xchg
cli
lcall
xchg
insb
xor
lea
sbb
add
pop
mov
ljmp
lea
dec
xchg
mov
ds
es
jae
insl
loope
mov
add
aaa
adc
gs
pop
xchg
inc
sbb
aam
and
cmpsb
mov
mov
scas
add
aam
icebp
clc
imul
addl
and
shll
sti
call
dec
test
mov
outsb
cltd
lret
test
clc
pop
out
fisttps
add
orl
mov
inc
movsw
mov
adc
mov
xchg
scas
je
jno
shlb
jecxz
add
ljmp
insl
ss
pop
pop
mov
push
divl
inc
out
sub
jbe
and
mov
jle
cltd
mov
nop
jmp
cmp
scas
std
xchg
sti
psubq
xor
aas
fsts
insb
inc
sub
shlb
push
shrl
jno
insl
leave
call
mov
hlt
arpl
pop
adc
mov
inc
sbb
loopne
out
dec
scas
fdivrs
sub
out
aad
insb
cli
aaa
mov
push
rcrb
orl
enter
mov
pusha
loopne
and
xchg
pop
testl
dec
mov
push
in
xchg
mov
pop
mov
ss
sbb
pop
out
pop
mov
or
add
fisubrs
orl
sub
xchg
into
sbb
jle
inc
lods
loopne
fstpl
test
cmp
push
gs
pop
pop
sahf
lods
push
pop
rep
movsl
filds
mov
jne
icebp
shrl
pop
inc
sub
dec
dec
and
cltd
loopne
adc
fiadds
out
repz
mov
mov
push
les
add
push
and
out
out
stos
adc
push
int3
mov
sbb
std
dec
pop
testl
mov
jb
repz
repz
in
sub
inc
cli
je
push
sub
push
ror
push
sbb
je
call
cmp
add
sub
icebp
hlt
gs
cmpl
pusha
rcrb
mov
test
in
lods
ret
xorb
add
jle,pt
push
xor
dec
sbb
aas
xchg
fcomip
and
mov
sti
popf
in
cli
loopne
push
stos
lds
fldcw
lcall
cmp
adc
inc
es
push
push
push
sbb
fsubrs
test
mov
stc
stc
xchg
push
xchg
push
leave
push
inc
lret
ret
aaa
push
int3
js
or
test
xor
lahf
push
stos
outsl
jbe
dec
ja
jne
sbb
lret
je
inc
mov
or
pop
test
xor
sbb
imul
pop
mov
clc
aas
or
addr16
or
xchg
pop
cwtl
mov
andb
or
xchg
push
dec
xchg
ds
xchg
push
or
adc
push
fwait
es
lds
cli
test
and
inc
nop
gs
or
repz
pop
mov
xor
test
or
iret
out
cld
fldcw
ljmp
cmc
bound
dec
sbb
dec
push
lods
add
bound
in
mov
push
call
and
test
mov
inc
scas
in
sub
addr16
lret
dec
mov
push
inc
imul
stc
and
sub
aaa
pop
push
xchg
push
icebp
outsb
scas
pop
lods
repz
cmc
jno
daa
mov
inc
lret
aaa
pop
or
xchg
pop
xchg
mov
js
mov
xor
mov
sbb
dec
out
mov
and
sbbb
cmpb
sbb
or
pop
lcall
in
imul
xchg
in
ss
mov
hlt
rol
movsl
push
adc
rorb
pop
cmpsb
mov
mov
adc
cltd
sub
pop
nop
mov
pushw
jbe
jmp
sbbl
fwait
push
pop
xchg
mov
movsb
xchg
and
enter
pop
ds
cmp
mov
and
add
or
cmp
jg
sub
scas
xlat
push
inc
mov
cmpsb
sbb
lods
jp
lods
cs
mov
movsb
lret
daa
mov
daa
outsb
push
push
xchg
xchg
push
add
mov
cmp
mov
aas
or
int
fistps
enter
push
pusha
dec
cmpsb
add
xor
sub
rcl
jae
insl
out
adc
xor
mov
imul
xchg
idivl
sbb
in
aaa
mov
add
adc
lods
or
js
sbb
rol
dec
shll
inc
loopne
mov
mov
push
add
aas
pop
dec
mov
out
push
push
mov
or
push
push
cmp
cltd
les
mov
mov
aaa
adc
xor
insb
cmp
xlat
mov
lods
and
xor
adc
push
nop
les
test
sub
sub
in
lods
ffreep
movsl
xor
jge
insb
inc
pop
bound
bnd
je
adc
pop
fisubs
inc
cmp
sub
movsb
sub
jg
mov
aam
or
arpl
sub
push
mov
sub
mov
mov
fld
cmp
call
sub
pop
xor
sub
mov
sbb
jne
add
adc
inc
inc
adc
pop
test
cmp
lds
out
js
jle
push
xlat
sbb
fisttpll
pusha
mov
lea
std
es
shlb
pop
fstpl
sub
movb
inc
loopne
inc
lret
lret
xchg
and
pop
cmpsb
pop
xchg
out
or
ljmp
sbb
out
fs
inc
mov
inc
fs
mov
jns
not
movsl
inc
push
aas
mov
fcmovu
loope
ja
dec
dec
jecxz
aas
testl
test
fildl
sub
jne
lret
and
xchg
sub
ja
pushf
stc
or
sub
xlat
xlat
dec
lock
fsubrl
dec
add
es
add
sub
test
stos
and
add
pushf
xchg
sub
into
data16
mov
dec
push
sbb
sbb
fwait
xchg
cmc
push
data16
shlb
pop
bnd
sbb
pop
cmp
push
xchg
out
gs
xor
mov
push
xor
adc
cmp
xchg
xor
test
xchg
sahf
dec
outsb
dec
or
pop
pop
jge
mov
mov
pop
lea
xchg
push
inc
aam
nop
andl
xor
push
rolb
outsl
sbb
mov
es
xor
in
lahf
xor
mov
cli
jo
movsb
xor
mov
add
ror
dec
ret
sbb
inc
scas
mov
cmp
cmpsl
mov
dec
and
adc
fsubl
sub
cli
lcall
lcall
jecxz
sub
add
mov
hlt
popf
mov
fcoml
popa
test
clc
and
pop
jbe
das
xchg
xor
dec
and
scas
sarb
mov
pop
mov
sbb
jo
fistpl
ret
pop
stos
sub
cmp
popf
add
add
ss
out
dec
addr16
mov
orl
mov
cmp
hlt
mov
dec
xchg
faddl
imul
adc
sarl
mov
sub
xchg
cltd
mov
inc
xor
scas
xor
scas
sub
scas
cs
pop
cli
cwtl
jns
xchg
rcrl
adc
out
inc
mov
xlat
sbb
mov
mov
test
lahf
fwait
mov
sub
test
add
and
pop
fistps
fiadds
loop
test
loop
je
ds
dec
push
sbb
test
mov
fidivrl
leave
dec
aam
int
les
inc
and
pop
inc
nop
movsb
test
roll
mov
test
enter
rcrb
sbb
or
mov
or
sti
xchg
jl
add
shl
jnp
sahf
dec
negl
loop
mov
test
inc
xchg
push
int
in
test
mov
in
loop
mov
sbb
jge
jmp
outsb
inc
aad
xchg
and
les
out
aad
and
ljmp
insl
sub
jb
rcrl
push
mulb
sbb
mov
add
sub
sub
les
sahf
imul
mov
inc
lahf
cmp
ljmp
int
add
mov
inc
inc
mov
pop
pop
mov
lret
ret
cmp
fmuls
ljmp
int
xor
call
push
ret
sbb
repz
dec
dec
bound
pop
test
stos
std
mov
jne
clc
repz
xchg
sbb
jb
arpl
data16
inc
cwtl
mov
cltd
xchg
dec
xchg
into
in
shlb
mov
ljmp
dec
pop
jmp
lea
mov
mov
fmulp
incb
cmpsl
and
cmp
ljmp
jle
xchg
out
ss
scas
xor
pop
rcrb
je
pop
pop
jnp
xor
idivb
mov
mov
jmp
or
fs
jg
in
dec
cltd
imul
mov
inc
dec
insl
dec
loopne
cmp
ror
push
stos
mov
xchg
jecxz
mov
fwait
push
aad
aaa
push
add
xor
sub
repz
mov
cmpsl
push
sbb
mov
out
sub
or
nop
and
pushf
cmp
jecxz
lods
mov
sbb
cmp
out
inc
pop
inc
loope,pn
inc
cmp
in
clc
or
or
nop
pop
cmp
mov
mov
mov
cmpsl
aam
push
jle
loop
push
jo
xor
cmpsl
adc
cwtl
mov
push
mov
dec
cmc
faddl
imul
arpl
cmp
test
jle
sbb
mov
sar
movsl
repz
mov
hlt
pop
stc
adc
ljmp
lock
dec
in
adc
es
leave
jmp
test
sub
add
ret
xchg
lret
into
sub
lcall
or
mov
ljmp
mov
add
aas
mov
lods
mov
mov
jae
mov
and
insb
mov
mov
xchg
sbb
dec
mov
fisubl
or
dec
mov
push
fwait
sub
fldt
sub
push
lret
rorb
cmc
push
fwait
clc
mov
xchg
add
sub
je
out
mov
sub
jmp
xor
xchg
xchg
inc
aam
sub
into
sbb
xchg
mov
mov
jnp
mov
idivb
jbe
out
dec
mov
insb
mov
jnp
add
test
outsb
addl
cmp
sbb
push
sub
jecxz
fsubs
mov
mov
mov
mov
push
out
inc
inc
pop
xor
cltd
pop
cmc
cs
push
call
data16
insl
mov
cltd
loope
push
dec
or
fwait
mov
mov
fisttpl
pop
out
cmp
cwtl
pop
inc
mov
push
pop
push
shlb
mov
mov
inc
jg
cmp
rcr
jp
pop
test
sub
mov
jge
xchg
mov
in
leave
int
rorl
repz
test
sbb
mov
adc
and
nop
xlat
sub
adc
rorb
jo
push
mov
xor
xor
cmp
lds
fucomi
aaa
mov
pop
push
push
stc
lods
subl
xchg
cli
xor
add
vpmulhw
out
mov
mov
mov
push
and
adc
loope
push
xor
and
push
pop
xor
fcomps
sub
outsb
stos
data16
mov
cmp
push
xor
idivb
cmc
out
lods
sbbl
pop
data16
arpl
jp
mov
push
adc
inc
xchg
cld
jno
and
sub
or
aad
xchg
stc
aam
lret
pop
xchg
inc
push
je
bound
test
pop
into
lods
jmp
xor
aas
fwait
enter
sahf
pushf
insl
or
inc
insl
inc
xchg
frndint
xor
ljmp
mov
xor
cmp
sbb
pop
and
iret
or
ljmp
filds
adc
cmpsb
push
mov
das
mov
adc
arpl
nop
sbb
in
scas
adc
lds
fildl
dec
dec
inc
mov
sub
xor
xor
gs
mov
push
arpl
jnp
lods
push
in
sub
mov
fists
aas
andl
popf
pop
mov
sub
outsl
aad
lea
mov
lds
pop
dec
ss
les
out
aas
sti
adc
mov
jno
pop
bound
add
int
pop
fcmovne
loopne
mov
cmpsb
sbb
enter
cmp
inc
push
push
inc
sbb
hlt
cmp
fstpl
or
sbb
xor
cmpsb
mov
inc
push
xor
loop
imul
mov
les
cld
in
cltd
jmp
nop
xchg
mov
cmp
enter
into
test
pop
or
movsb
jnp
sahf
iret
jne
push
test
cmp
imul
inc
and
ljmp
repnz
xor
jns
xchg
mov
pop
xorl
jg
and
jmp
cli
jnp
sub
out
and
in
mov
sbb
cmpsb
or
ss
stos
dec
xchg
and
js
pop
enter
xchg
cmc
adc
arpl
add
pop
ret
inc
mov
cltd
aad
push
ds
lds
leave
loop
sub
cmp
inc
int
pop
out
jbe
imul
jg
leave
cmp
add
mov
ret
testl
pop
into
add
fsub
popa
faddp
cmp
and
or
xchg
les
push
sub
mov
repnz
scas
inc
mov
faddp
xchg
rorb
jp
sets
pop
dec
aam
roll
sub
adcb
filds
sbb
nop
push
jge
lahf
xchg
sub
cmc
insb
ret
jne
les
jns
mov
scas
repnz
stos
jmp
dec
mov
ds
xor
push
or
stos
xor
pop
or
nop
sbb
clc
in
sahf
or
adc
mov
add
xchg
push
mov
jecxz,pt
ret
sti
adc
mov
cmpsb
mov
ror
testl
jle
outsb
xor
xor
out
xchg
mov
mov
ret
sub
push
jnp
loope
pop
mov
sub
test
xchg
pop
sbb
in
es
repz
test
mov
sub
stos
or
ss
and
sub
dec
and
gs
mov
pushf
fiaddl
mov
mov
in
inc
leave
outsl
push
aaa
mov
in
das
inc
mov
insl
push
adc
adc
movsb
cli
in
adc
push
cmp
js
bound
sub
popf
fcmovne
inc
sub
scas
sub
xchg
adc
pop
jbe
es
fs
fwait
scas
dec
mov
mov
divl
pop
push
and
cmpsb
daa
in
nop
test
xlat
popa
dec
pop
je
sbb
push
push
xchg
or
enter
xchg
ds
add
xchg
mov
xor
add
sub
fxch
cmp
jb
in
bound
iret
mov
jo
aam
rorl
push
mov
popf
insb
jl
or
popf
arpl
test
je
fidivl
stos
and
pop
sub
jmp
test
in
in
pop
xchg
lret
rorl
sarl
fs
dec
mov
adc
std
lods
add
adc
call
push
xchg
push
jbe
mov
dec
data16
pop
and
jl
lahf
das
das
and
addl
outsl
fildl
sbb
pop
sub
mov
movsl
add
lahf
fiadds
xlat
sub
and
es
cmp
jo
ret
insl
dec
jl
mov
shll
mov
push
sub
jne
call
sbb
cwtl
in
sahf
push
inc
xlat
mov
xchg
push
xchg
popf
xchg
or
cmp
jno
mov
pusha
mov
lahf
push
mov
cmp
in
sub
sbb
xor
jecxz
add
mov
ljmp
pop
mov
nop
lret
push
and
cmp
insl
sti
scas
int3
aaa
enter
xlat
sub
pushf
lods
sbb
and
in
imul
sti
movsl
insb
stos
adc
out
cli
pushl
cwtl
cmc
mov
repz
push
out
sbb
test
sbb
mov
cmp
and
sbb
js
cs
and
fwait
rorl
ss
pop
push
scas
jge
out
pop
inc
sbb
jno
scas
imul
or
xor
xchg
cmc
mov
gs
clc
loopne
inc
dec
jb
bound
sub
push
pop
hlt
add
xchg
jmp
dec
push
cmc
mov
imulb
push
repnz
pop
call
sbb
arpl
dec
dec
push
test
hlt
mov
sbb
cmpsb
nop
mov
pusha
sahf
sbb
call
cwtl
xlat
rcpps
or
sub
insb
out
cmpsb
or
dec
outsb
cltd
insb
je
or
insb
push
cmpsb
xchg
popf
xchg
out
out
lahf
mov
sahf
sub
mov
sbb
adc
push
cmp
sbb
fcmove
scas
sub
rolb
jg
adc
inc
out
fsubrl
andb
fs
bound
outsb
jo
fdivs
andnps
lret
adc
inc
out
addb
adc
arpl
jo
imul
xchg
nop
sub
cmp
inc
mov
ret
pop
adc
jnp
into
lods
mov
into
sub
push
sbb
push
dec
xor
adc
stos
cli
in
adc
mov
jg
mov
rclb
fdivr
mov
scas
out
stos
push
not
add
sbb
mov
sub
fsubl
add
push
inc
cmp
sub
test
test
adc
dec
cmp
out
aam
mov
push
cmp
adc
les
insl
dec
shll
xchg
sub
fwait
hlt
xor
or
mov
mov
sub
sbb
pop
nop
sub
push
add
scas
idiv
sahf
xor
rol
and
ljmp
jae
mov
xchg
iret
loope
add
xlat
in
xchg
loopne
jge
add
je
movsb
xchg
or
add
loop
shlb
xchg
add
int
or
jns
or
sbbb
push
ret
pop
insb
mulb
les
add
pop
push
mov
push
popf
stc
cmp
xchg
repnz
sub
rep
enter
push
paddq
cltd
jnp
mov
adc
mov
repz
test
mov
scas
cli
stos
mov
ss
or
or
adcl
pushl
cmp
dec
push
adcb
out
sahf
cli
decb
fstps
cmp
subb
add
pop
rcr
pop
mov
push
ja
push
mov
or
iret
pop
movsb
pop
dec
shrl
ja
adc
and
repz
sarl
aam
dec
push
mov
sbb
scas
mov
sbb
pushf
test
jle
test
mov
dec
daa
push
cmp
xchg
and
std
lods
test
in
pop
xor
rol
bound
jne
mov
cs
cmp
scas
pop
int
stc
xorl
fwait
stos
sbb
js
ficompl
mov
sub
fs
pop
add
mov
aam
lcall
sbb
cmp
fidivl
cs
lcall
mov
movsb
icebp
and
insb
pop
loope
sub
mov
das
mov
push
xor
jg
xor
cmpsl
fisubrs
mov
cmpsb
clc
pop
inc
push
pop
aaa
lock
ljmp
xchg
jnp
mov
out
ljmp
jmp
or
dec
lret
jne
sbb
add
push
daa
mov
jnp
sbbl
adc
pusha
sub
ret
xlat
dec
pop
mov
mov
arpl
ret
lods
scas
lret
aad
out
push
dec
pop
adc
in
cmp
out
push
loop
add
dec
popf
pushf
cmp
xchg
in
mov
cmp
pusha
xchg
rclb
test
les
outsl
rcrb
bound
jl
and
adc
dec
dec
notb
cmp
ds
fdivrl
jmp
mov
mov
loop
add
fstps
int3
mov
mov
mov
push
or
stos
out
and
push
sbbl
in
nop
xchg
mov
jnp
fsts
loopne
add
push
cmp
ret
orb
pop
out
fisttpll
inc
push
push
pop
int3
jle
lock
ret
imul
fnsave
dec
enter
dec
loop
nop
test
and
inc
jl
sub
iret
cmp
mov
cmpb
out
rorl
psadbw
js
dec
fsubr
sbb
mov
add
add
imul
pusha
data16
cmp
addl
xlat
sub
mov
sbb
pop
loope
or
in
and
lds
jl
loope
jp
aam
xchg
mov
cmp
jbe
shlb
mov
xchg
pushf
popf
aas
in
inc
mov
cmp
lret
mov
mov
into
or
addr16
ljmp
xchg
ffree
in
scas
or
jb
int
push
cli
pop
xlat
push
push
push
fs
lds
popf
sub
and
scas
cli
jg
movsl
movsb
test
mov
inc
cwtl
aam
xor
cmc
imul
fxch
or
xor
sbb
sahf
data16
int
bound
pop
and
ja
mov
rorl
xlat
loopne
stos
add
ljmp
jmp
rcll
xor
sub
mov
adc
gs
push
jecxz
jge
or
hlt
jne
iret
mov
push
negl
jns
out
xchg
jp
lea
shrb
pushf
cmp
or
xchg
les
aas
push
xor
ret
inc
or
scas
rclb
imul
or
jo
adc
jp
iret
mov
xlat
jbe
test
dec
pop
loope
mov
xor
fcmovb
and
arpl
mov
adc
popa
xchg
adc
sahf
adc
lret
out
add
push
jae
in
js
movsb
popf
jbe
push
es
xchg
mov
cmpsb
add
pop
dec
sub
test
dec
or
add
xor
inc
jecxz
cmp
xor
cmc
in
fidivl
push
dec
into
pop
in
jl
pushf
pop
add
mov
jo
or
shrb
xlat
sub
lcall
sub
xchg
mov
jecxz
into
sahf
and
lcall
mov
pusha
lahf
adc
jo
mov
mov
jecxz
lcall
cmp
mov
xor
out
adc
jo
or
popf
xor
jno
add
subl
push
lea
cmp
inc
sbb
loop
add
xchg
aam
shrb
ret
xchg
fwait
fs
ss
flds
cmpsb
insb
arpl
iret
pop
je
insl
and
popf
leave
add
enter
sub
xor
les
jecxz
stos
es
mov
sub
loope
xor
fucomip
pop
movsl
and
outsl
cs
sbb
clc
int
shrb
fcmovb
cwtl
aam
out
mov
jecxz
ret
loopne
inc
pop
xor
mov
cmp
fnstsw
adc
xor
xchg
pusha
insl
scas
xor
jbe
pusha
pop
add
test
scas
and
testb
mov
outsb
movsl
sbb
cmp
xlat
push
outsl
push
icebp
jo
test
xchg
mov
imul
xchg
inc
leave
cmpsl
mov
scas
out
mov
cld
sbb
ljmp
je
xor
sub
and
aad
nop
fnstsw
push
push
sub
addb
adc
fwait
mov
sbb
mov
pop
dec
mov
mov
and
mov
push
call
jbe
adc
movsb
call
lea
push
jno
cltd
inc
or
out
xchg
cmp
cmp
adc
sub
outsl
scas
fdivl
inc
pop
sbb
out
mov
mov
pop
ret
and
icebp
jmp
inc
popa
sbb
xor
lds
xor
or
inc
ja
inc
pop
fbld
lds
pop
mov
hlt
sub
das
ss
pop
test
add
loopne
das
jg
pop
test
out
cmp
ret
xchg
cltd
jmp
lar
add
addr16
stc
adc
cli
add
jne
cmc
out
in
inc
sub
addr16
cmp
dec
pop
gs
xorl
fs
jno
mov
xlat
xlat
mov
and
mov
aad
jmp
js
push
adc
xor
inc
mov
insl
mov
ja
in
sub
and
pop
out
std
out
ja
push
jno
xchg
addr16
push
pop
jmp
jae
lock
cwtl
ljmp
fisubrl
inc
ljmp
dec
and
fisttps
jno
jne
movsl
out
insb
stos
mov
enter
mov
js
pop
or
les
in
andb
jmp
aad
adc
loop
jle
push
out
xchg
int3
lock
pop
inc
jge
push
push
inc
ljmp
pop
call
pop
sarb
cli
mov
mov
ret
push
xchg
pop
mov
cmp
push
add
mov
les
mov
imul
sub
cmp
or
addb
addb
daa
push
and
inc
daa
cs
inc
call
nop
lds
adc
frstor
mov
pusha
xchg
cwtl
popf
jle
jle
mov
xor
cmpsl
and
inc
mov
xchg
outsl
rolb
or
pushf
dec
mov
ffreep
sbb
cwtl
xor
mov
dec
and
pop
popa
mov
mov
roll
sub
cmp
aam
dec
inc
lock
cwtl
lcall
inc
mov
lcall
cmc
xchg
mov
cld
ss
and
mov
clc
shrb
aam
push
loop
dec
inc
clc
jle
pop
mov
dec
inc
rclb
and
sub
xor
gs
bound
mov
pusha
or
push
in
inc
mov
dec
jp
pusha
ficompl
lods
dec
mov
inc
cmc
addr16
into
xchg
sbb
sbb
push
and
loopne
dec
xchg
rcrb
leave
pusha
mov
addr16
out
leave
ss
pop
mov
dec
inc
clc
lahf
lea
pusha
daa
adc
dec
mov
fldt
xchg
mov
push
outsb
dec
push
loopne
gs
sbb
add
mov
dec
loop
int
leave
mov
sti
cmpw
sahf
lcall
fisubrs
adc
mov
jecxz
mov
push
enter
jbe
outsb
test
sub
insl
and
bound
push
lds
mov
xchg
mov
test
xor
sub
add
mov
movsl
mov
cmp
pushf
loop
int
push
adc
clc
test
das
mov
lods
fs
mov
and
cmp
push
gs
dec
fcoml
les
xchg
sahf
stos
into
fildl
jp
jp
pop
sub
stc
add
pushf
dec
and
jo
inc
iret
sub
ret
test
aam
inc
shll
subb
or
stos
adc
movsl
pop
loopne
push
fwait
xor
inc
ljmp
xor
cmpsl
cmp
push
or
ds
and
cmp
push
adc
push
sbb
mov
and
cmp
imul
aaa
lahf
sbb
sbb
in
inc
jo
ja
adc
push
inc
dec
mov
xchg
adc
dec
icebp
or
xchg
jns
test
push
into
push
pop
sub
push
test
std
mov
mov
dec
rorb
fsts
mov
sub
dec
stc
ja
out
push
sbb
mov
popf
pop
loopne
add
jno
dec
enter
cmp
loope
mov
cltd
vmovhlps
aam
fcomip
stos
cmp
sub
add
stc
sub
fmull
push
fisubl
neg
mov
fsub
out
lcall
mov
sbb
test
imul
stos
sbb
out
push
adc
mov
dec
imul
xor
inc
inc
sbb
outsb
cmp
fstpl
add
pop
inc
add
frstor
xchg
arpl
fwait
rclb
pushf
jle
out
mov
stos
jo
xor
ss
push
jns
fsubrs
iret
aaa
adc
xchg
jnp
subl
cmp
sbb
jns
sbb
rcrl
mov
mov
test
add
cli
shlb
not
and
pop
pop
pop
pop
popa
out
orb
in
stos
xor
mov
inc
ds
mov
idivl
icebp
push
xor
lds
stc
mov
rcrb
mov
cmc
ret
rolb
popf
popf
add
lock
cltd
fstps
jae
addr16
or
adc
lods
cmc
movsb
jmp
ret
pusha
mov
test
popa
mov
dec
icebp
negl
push
in
add
enter
shr
in
inc
pop
frstor
sub
outsl
inc
lds
sub
xor
jns
lock
lods
xor
test
mov
fcoms
xchg
ret
popf
aam
scas
ljmp
pop
stos
lds
pop
mov
xor
cmp
enter
fmull
jb
fnsave
incb
jl
sub
sbbb
sub
into
fisttps
lret
cmpsb
and
and
mov
scas
loop
dec
xchg
ss
hlt
inc
and
push
rcrb
ret
jecxz
or
movsb
jl
test
and
xor
push
ret
sbb
mov
ficomps
adc
imul
loopne
push
or
pop
frstor
xlat
inc
jo
in
pushf
xor
mov
xchg
cmpsl
adc
mov
outsb
out
push
mov
scas
jo
mov
adc
rcll
dec
enter
push
fs
fisubl
dec
lcall
jl
in
arpl
adc
cwtl
outsb
pop
out
jecxz
dec
xlat
aam
cmp
leave
popa
pop
or
mov
add
les
push
stc
popa
mov
xlat
mov
push
mov
xchg
jp
pushf
fdivrs
pop
jns
clc
fstl
sub
mov
pop
push
jae
sahf
call
lds
pop
xchg
shlb
in
lret
and
aam
mov
or
push
je
ja
xchg
xor
shll
out
add
cmc
jg
sub
xchg
daa
mov
les
jp
cld
xlat
pop
xor
adc
mov
jp
clc
xchg
xorl
inc
mov
fwait
cmp
xor
or
lock
sub
fldl2e
pop
loopne
lds
dec
push
jg
mov
push
and
movsl
jb
lcall
cmp
sub
fnstsw
mov
xchg
lea
jg
sbb
push
jmp
sti
mov
in
xchg
dec
mov
js
rcrb
xor
xlat
rcl
mov
push
sahf
adc
mov
mov
or
mov
adc
test
sub
lahf
xor
lods
les
cmp
sbb
daa
daa
fcoml
sbb
mov
popa
into
dec
sahf
ds
mov
jnp
xor
add
add
mov
mov
push
icebp
inc
sahf
mov
pop
and
sub
mov
repz
imul
push
psubsw
test
and
mov
cli
loopne
fprem
out
dec
pop
mov
icebp
andl
pop
sub
fisubl
xor
imul
rclb
ss
stos
xor
cs
in
and
xchg
push
arpl
mov
jbe
xchg
js
loopw
outsb
leave
cmpl
pop
mul
sub
add
sub
lret
pop
arpl
fstl
pop
in
pop
adcl
mov
xor
mov
pop
jge
movsl
shlb
dec
leave
daa
jbe
es
jnp
push
push
mov
repnz
lods
or
adc
jno
shlb
movb
add
imul
xor
mov
in
and
fnstenv
iret
test
mov
iret
fidivrs
outsb
and
pushf
je
xor
negl
push
lret
jno
jbe
bnd
jecxz
lods
enter
pop
lret
int3
fwait
loop
in
push
lods
fwait
cmp
adc
sbbl
sbb
add
andb
pop
js
push
adc
sub
popf
xor
add
cmpsl
stos
cwtl
aad
das
data16
loope
gs
mov
push
into
jmp
dec
out
mov
cli
shll
cli
out
aas
pop
xchg
jmp
mov
fistl
andl
pop
dec
popa
mov
xor
loop
lret
imul
jmp
nop
pop
cmp
pusha
dec
push
pop
ja
cli
ds
add
or
xor
jl
pop
pusha
loop
addr16
enter
mov
orl
cmpsb
ja
push
cmp
leave
inc
push
stc
lahf
sbb
inc
mov
mov
jbe
jo
and
shrl
int
dec
xor
mov
fwait
lahf
push
mov
or
loope
jle
fs
int
movsl
sub
adc
fcomp
cltd
scas
lcall
dec
stos
pop
or
push
int3
aam
add
pop
fsubrl
or
adc
push
test
or
cmp
jo
or
add
adc
adcb
insl
xorb
push
inc
fcomip
jo
pmaxsw
cmp
jne
lret
dec
adc
push
xlat
aad
adc
loope
xchg
inc
stos
popa
mov
and
xlat
xchg
cmp
in
sbb
jnp
aam
test
inc
pop
nop
iret
xchg
aas
int
push
push
pop
and
aas
xor
jecxz
in
outsb
stc
bound
insb
pop
scas
in
loope
cmc
call
loope
test
jae
lret
and
mov
cmp
mov
scas
push
mov
ds
push
sub
cmp
dec
aas
xchg
pusha
push
ret
adc
sbb
mul
addl
cltd
loop
mov
out
mov
mov
and
addr16
cs
cmp
jo
or
es
sub
das
daa
imul
pop
lcall
and
jns
push
ja
sti
out
mov
mov
sub
and
fistpl
iret
stos
into
dec
das
cltd
pop
lret
mov
sub
dec
ds
sub
xchg
jnp
pusha
dec
imul
push
mov
subl
ja
jl
push
or
mov
fimuls
jnp
add
cs
add
enter
test
fnstcw
sbbb
les
adc
mov
or
in
push
or
cmp
mov
fnstenv
fnstcw
lds
mov
scas
cli
cmp
fsubs
mov
adc
je
push
mov
ja
nop
inc
iret
movsl
add
pop
fidivl
push
les
int3
xchg
mov
rep
mov
sub
stc
into
fwait
dec
cmp
pusha
mov
leave
push
push
pop
adc
jmp
lea
daa
test
movsb
sub
cmpsl
xor
pop
xor
cmp
mov
lret
cmp
push
push
stos
xchg
into
jae
inc
mov
out
lods
mov
popf
and
ds
stos
movsl
lods
and
inc
hlt
mov
xchg
hlt
mov
sbb
mov
bound
adc
and
and
movsl
xor
xchg
sub
shlb
pusha
in
cli
fimuls
movsl
jb
loopne,pn
popa
pop
fdivrl
popa
jge
adc
mov
iret
push
pop
movsb
sbb
outsl
inc
dec
mov
push
mov
inc
xor
add
popf
stos
inc
push
lcall
push
mov
in
ret
inc
out
lea
sbb
sub
pushf
scas
sbb
arpl
jnp
mov
cmpsb
cmp
and
mov
dec
jnp
scas
lcall
xor
outsb
icebp
xor
fisubrs
xchg
pop
cmpsb
xlat
xchg
jnp
imul
add
mov
loope
mov
xor
pop
or
xchg
cmp
xchg
std
adc
or
into
pushf
sarl
xor
inc
adc
mov
adc
inc
mov
jo
sbb
mov
test
add
mov
sahf
shl
and
add
in
addl
lahf
and
nop
cmp
leave
into
out
cmp
mov
jns
dec
jo
mov
push
adc
jmp
sub
cli
in
insb
sub
xchg
jns
adc
pop
mov
sbb
repz
bound
andl
xor
add
xchg
xor
adcb
sbb
and
mov
or
add
call
inc
sbb
inc
xor
jne
push
incb
ljmp
test
imul
rclb
cmc
in
xchg
out
jg
and
xlat
sub
sub
xchg
push
aad
mov
in
jp
scas
or
sbb
pop
xorb
mov
xor
mov
pop
movsb
test
mov
sbb
dec
loop
mov
add
nop
inc
or
adc
jl
es
mov
sbb
fwait
rclb
nop
jl
or
xstore-rng
cmpsl
xchg
loop
scas
sub
les
mov
pusha
in
je
mov
inc
mov
mov
sarl
or
jg
rolb
icebp
inc
sub
popa
cmp
cmp
mov
aas
adc
add
mov
and
daa
mov
pop
cmp
nop
mov
call
cmp
imul
mov
daa
xchg
push
cli
dec
mov
adc
jns
adc
pusha
test
or
mov
push
repnz
mov
icebp
outsl
xchg
mov
and
push
and
nop
sub
pushf
adc
xor
vmovss
bound
dec
ljmp
shrl
dec
movsl
clc
xchg
push
cmp
hlt
inc
add
out
scas
insl
gs
xor
mov
std
arpl
xchg
cmp
test
fildll
fsubr
rorl
adc
outsb
ljmp
addr16
outsb
into
daa
xchg
xlat
jge
xchg
mov
out
les
js
das
iret
sarb
mov
int3
lret
add
sbb
pop
mov
das
jno
in
cmp
mov
xchg
cmc
fwait
dec
cs
pop
pusha
call
adc
rcr
bnd
or
pop
push
test
sub
and
bound
pusha
jns
fsubrl
ret
mov
hlt
xor
repz
mov
daa
push
jge
or
int3
cmp
ss
jl
xor
xchg
add
mov
repz
and
movsb
pop
jp
loope
ja
push
cltd
push
sub
jb
inc
pop
les
testb
xchg
lods
and
lcall
adc
enter
mov
daa
cmp
hlt
rorb
shlb
push
jmp
pushf
mov
jbe
cli
inc
outsb
push
sbb
fdivl
push
xor
nop
push
fnstsw
push
lret
mov
call
ja
out
es
nop
cmp
xor
dec
jno
aad
jp
mov
dec
mov
in
cmp
xor
std
push
push
loop
cld
lods
push
mov
or
add
lock
scas
lret
repz
data16
popa
pop
cmpsb
xchg
lods
sahf
pop
in
pop
push
and
cltd
js
jl
pusha
sub
jns
xchg
mov
dec
cmp
mov
add
andl
das
and
cltd
pop
mov
xchg
scas
xchg
dec
lret
add
lahf
cmc
jae
mov
lods
jbe
sub
cmp
out
push
cmpsl
pop
pop
and
cmpsb
addl
insl
iret
jo
or
ror
dec
xchg
ret
fcmovne
idivb
scas
xor
fnstcw
in
push
scas
mov
mov
push
push
dec
into
mov
fcompl
stos
loope
adc
jnp
adc
jle
jl
ds
aaa
sbb
bnd
movsb
dec
in
int3
sub
cmp
mov
xor
sbbl
repnz
outsb
outsl
addl
push
inc
push
outsl
xor
scas
movsb
lds
jmp
xor
cmpb
int
sub
mov
in
cltd
sar
sbb
mov
arpl
leave
out
aaa
cmp
xchg
pushf
out
jg
rolb
xor
push
jns
repnz
mov
push
pop
add
popa
cmp
int
add
mov
jmp
fldl
mov
xor
add
les
push
mov
test
push
xor
inc
push
and
mov
inc
and
xchg
orl
dec
ljmp
arpl
repnz
icebp
xor
hlt
push
out
mov
subl
arpl
test
std
shrb
adc
xorb
cmpsl
rolb
fidivl
adc
pop
out
sub
popa
mov
insb
push
movsl
js
cld
or
stos
push
jp
or
xchg
stc
add
popa
lds
or
incb
test
and
add
shr
xchg
mov
nop
jae
das
nop
mov
int3
daa
mov
mull
sub
mov
jbe
dec
pop
pop
xchg
subl
shlb
or
aad
insb
push
mov
rcrl
dec
add
adc
pop
jg
sub
adc
ret
bound
lret
lret
jo
push
pop
add
mov
and
pop
sub
rcrl
jno
repz
shrl
cli
leave
or
jnp
mulb
xchg
xor
ja
push
mov
movsb
mov
fstpl
mov
sub
out
rorl
lret
mov
rolb
adc
fs
cmp
push
inc
cmp
cli
xchg
call
lock
xchg
dec
adc
xor
or
pop
push
imul
sub
out
mov
or
xchg
push
dec
adc
mov
das
mov
fmul
divb
mov
xchg
int
outsl
add
xlat
in
or
arpl
cltd
lock
bound
jnp
cli
std
mov
xor
jecxz
cmp
std
jle
lods
mov
test
adc
call
imul
aam
imul
adc
hlt
xchg
fnstenv
and
imul
sbb
push
xchg
lret
into
lods
iret
ret
mov
les
into
inc
mov
addl
adc
ja
jno
daa
push
jl
mov
dec
es
pop
imul
cmp
ficomps
fs
mov
inc
stos
clc
jle
andb
mov
jo
test
push
and
mov
fcomps
and
mov
ds
lret
fmull
sar
lds
mov
or
std
add
out
cmpsb
dec
mov
mov
jle
hlt
out
testl
inc
or
or
pop
sahf
cmp
ret
mov
out
loopne
nop
iret
and
xchg
mov
mov
inc
inc
in
inc
mov
push
sahf
inc
pop
addr16
out
or
lcall
ds
xor
out
xor
adc
sbb
xchg
inc
sbb
mov
xchg
icebp
fistl
or
std
sbbl
adc
dec
and
jbe
mov
mov
es
daa
cmp
test
lods
xor
cmc
push
cmp
jge
lret
mov
out
ljmp
lcall
fisttpl
and
push
inc
xchg
push
mov
rcrl
shl
cmc
jns
sbb
rcrl
adc
iret
inc
pop
jl
leave
adc
in
in
jg
push
int
mov
imul
dec
data16
jb
les
in
mov
int3
stc
mov
add
or
sbbl
stos
adc
rcrb
lea
fwait
cli
movsl
push
inc
sub
mov
fdivr
sbb
mov
sub
inc
test
orl
sbb
cmp
fidivrs
leave
into
mulb
inc
insb
sbb
mov
jbe
cltd
mov
push
pop
add
mov
sub
add
divb
iret
out
inc
sbb
fistl
ss
xchg
mov
adc
jb
jns
pop
and
push
loope
xlat
adc
shrl
xor
jle
mov
xchg
mov
sub
inc
xor
ror
xchg
push
xchg
jo
repnz
jns
fwait
outsb
and
out
push
mov
dec
imul
es
lods
movsb
mov
clc
adc
jmp
loop
add
cs
cmp
enter
push
cmp
xchg
mov
mov
pusha
jae
insl
aas
push
movsl
pop
sub
mov
addr16
imul
hlt
incb
or
and
stc
mov
pop
sti
mov
cwtl
sub
push
jns
add
movl
lcall
or
rcrb
xor
test
lahf
pop
pop
testb
ss
lret
fwait
pop
or
lret
movsb
adc
push
mov
clc
mov
in
pop
ds
packsswb
lret
dec
pop
push
adc
in
xchg
mov
pop
push
scas
arpl
pop
jg
xor
xor
adcb
mov
or
dec
mov
cmpsl
xchg
dec
mov
fbld
rclb
cmc
add
jmp
mov
push
inc
scas
outsl
int3
jmp
xlat
movsl
test
inc
push
mov
cli
xchg
test
out
inc
mov
xor
in
or
fldt
leave
in
in
jns
fiaddl
mov
mov
jb
ja
sbb
sbb
repz
stc
xor
pop
aad
lss
lea
adc
mov
dec
pop
sti
fnsave
push
repnz
jle
or
aas
sub
outsl
xchg
ja
arpl
clc
addr16
dec
inc
jae
adc
dec
sbb
adc
jle
aad
fs
sahf
stos
int3
xchg
arpl
insb
stos
mov
stos
stos
lods
imul
addr16
and
imul
in
jbe
pusha
bound
iret
or
xor
out
add
cmp
addb
scas
mov
lock
add
arpl
rcll
and
xchg
cmp
or
add
cmp
repz
mov
sub
sbb
dec
in
ret
sub
cmpsl
movsl
clc
popa
add
rcrb
jno
mov
aaa
les
dec
sub
dec
pop
lcall
pop
testb
jae
leave
ljmp
pop
pusha
push
stos
jmp
cld
sbb
outsb
pushf
test
adc
lret
into
repnz
inc
dec
xlat
movsl
loopne
lret
adc
xchg
stos
xlat
cmpsl
xchg
mov
aam
push
loopne
enter
mov
pop
loopne
mov
mov
insb
das
pop
push
testb
stos
xor
sub
mov
dec
mov
or
and
shl
pop
adcb
stos
cmp
aam
push
cmp
popf
mov
scas
cld
pusha
mov
inc
lods
or
daa
dec
dec
out
or
mov
mov
xor
sbb
push
outsl
or
lret
jp
mov
rclb
mov
scas
inc
popa
test
jmp
mov
pop
or
dec
icebp
es
sbb
xor
repnz
rolb
cmp
fs
sub
xchg
testl
sbb
in
popa
lods
sti
scas
cmp
addb
cmp
movsl
movsl
test
repnz
xchg
filds
cld
out
mov
in
ret
cs
pop
add
sbb
out
xchg
cmc
pushl
jp
adc
int
scas
pushf
fisubs
lods
jmp
stos
push
dec
daa
ret
cmpsb
or
repz
mov
lahf
popl
dec
xchg
movsl
pop
loope
mov
loopne
push
push
push
popa
push
int
add
or
mov
jg
in
cmp
xchg
dec
sub
pushf
add
push
jns
incb
lcall
dec
jae
dec
rcl
lahf
cmp
dec
cmc
cld
les
in
xor
in
bound
lret
inc
sbb
hlt
lea
xor
stos
and
in
dec
xchg
push
jp
inc
movsb
pop
sub
ret
fdivp
xchg
cmp
xchg
aad
adc
sub
stos
fcmovbe
cmpsl
pop
cmc
aam
pop
cmpb
jmp
pop
mov
or
xor
mov
out
sbb
add
ror
cmp
cmp
test
lock
lea
cmp
sbb
imul
push
lds
dec
pop
push
insl
daa
sahf
pop
add
daa
push
pop
cld
int3
xor
jp
cwtl
movsl
bound
repz
addr16
jb
mov
jg
aad
bound
jae
push
outsl
sti
pop
ds
test
add
push
nop
push
pop
lcall
adc
int3
pop
jecxz
adc
and
xchg
jno
mov
dec
mov
mov
jge
nop
es
jno
sbb
xor
xchg
mov
pop
mov
stos
pop
mov
or
push
cmp
pop
ret
push
cmp
test
dec
xor
dec
push
outsl
jle
lock
out
sbb
mov
lcall
or
popa
and
and
mov
sahf
out
sbb
sbb
or
int
mov
add
jb
test
loopne
push
xor
cmc
xchg
dec
fwait
lock
movsl
adc
adcl
mov
dec
add
mov
popf
mov
cmp
testl
cs
xor
mov
mov
roll
and
insb
lret
shrl
mov
or
lcall
push
xchg
int3
sbb
jnp
dec
sub
fmull
pushf
adc
pop
cs
xchg
cltd
dec
add
jl
movsl
out
xorl
imul
loope
and
out
jnp
xchg
hlt
mov
mov
mov
sub
xchg
loope
aaa
negl
gs
mov
rolb
jl
sbb
filds
push
sti
or
mov
repz
cmpsb
xchg
mov
dec
lcall
cs
cmp
or
jg
jne
int
dec
adc
ret
jg
inc
add
mov
std
scas
push
cmp
in
mov
inc
mov
sbb
jl
adc
dec
xchg
mov
gs
jns
pop
addl
and
xchg
jno
fisubrl
and
sub
xor
mov
cmpsl
xorl
clc
daa
fnsave
push
roll
fidivrl
jg
mov
dec
cmp
lods
daa
inc
sti
inc
jnp
shll
cmc
mov
add
cmp
add
stc
dec
in
jns
ljmp
sub
dec
mov
sbb
jne
lea
add
fisttpll
xor
cmpsb
mov
cmp
fisubs
pop
repz
cs
sbb
pop
xchg
push
mov
andb
arpl
lods
push
push
jnp
addr16
sub
mov
mov
enter
inc
xchg
gs
xchg
das
mov
outsb
lcall
loopne
ret
dec
call
push
sbb
lds
cmp
lcall
inc
fdivr
adc
adc
daa
ja
out
lods
add
pop
shll
aaa
cmp
inc
xor
cmpb
mov
out
dec
adc
lret
mov
ljmp
and
sbbb
enter
cmp
cwtl
or
add
cmpsl
dec
or
dec
push
mov
inc
mov
sbbb
jns
and
rorb
or
popa
jecxz
fidivrl
repz
addr16
mov
push
pop
shrl
sbb
ljmp
inc
rcll
mov
or
andl
shlb
xor
in
leave
push
or
lret
pusha
inc
test
fwait
jge
fldenv
mov
fcom
mov
sub
inc
xor
jmp
cltd
in
mov
scas
ds
dec
xchg
aam
movsl
data16
ljmp
popa
push
shlb
dec
pop
arpl
aam
fsubrp
lret
xchg
pushf
out
rorl
in
fs
lods
sarl
push
add
lds
mov
add
or
ret
cmp
mov
add
ret
and
xor
sub
ret
add
and
inc
adc
push
stos
push
xor
adc
scas
xchg
rcl
das
mov
push
icebp
mov
lods
in
in
sub
mov
and
push
push
jnp
push
cmp
test
hlt
push
sub
ror
into
aam
outsl
addr16
inc
xchg
add
dec
push
jmp
les
mov
sti
pop
sub
test
jbe
rcll
into
pop
test
ja
mov
cmp
add
pushf
xchg
push
dec
mov
std
push
lods
sbb
rorb
cmp
andb
mov
mov
ds
inc
cs
xlat
pop
mov
pop
mov
daa
mov
pusha
pop
movsb
js
pop
xor
jg
sub
jo
gs
ss
hlt
out
jle
mov
clc
mov
andb
cld
push
dec
mov
sbb
xor
and
mov
out
stc
and
sub
cmp
jecxz
cwtl
dec
inc
pushl
movsl
and
push
ja
ret
mov
repnz
sub
in
adc
js
add
adc
xor
add
arpl
fnsave
in
js
int
test
or
pop
das
sub
cmc
lock
push
test
inc
mov
sub
and
push
popf
add
scas
mov
icebp
stos
bound
imul
inc
ret
lods
arpl
cs
and
mov
aam
mov
clc
add
xor
pop
or
add
fimuls
mov
mov
jmp
push
fistps
sahf
jge
call
aas
dec
stos
in
jno
pushl
add
push
and
hlt
aas
fstpt
cmp
adc
fwait
call
push
paddusw
pop
dec
call
data16
jp
cmp
popa
sti
dec
int
and
sub
jo
dec
aas
std
pop
fimull
fmuls
mov
into
mov
lds
lods
loope
loope
mov
push
push
sahf
dec
push
pop
and
repz
shrl
sbb
push
push
add
arpl
test
xchg
adc
jb
test
adc
adc
lods
das
mov
repz
sbb
xchg
pop
mov
mov
or
dec
cmpl
and
and
mov
xchg
add
or
in
lret
sub
xor
dec
sbb
imul
insl
dec
gs
cmp
adc
hlt
daa
daa
stos
push
inc
push
lea
bound
filds
push
or
xor
and
fs
push
jmp
imul
pop
push
xchg
lret
pop
lret
fstpl
hlt
dec
mov
pop
adc
sarl
into
add
jg
cli
js
adc
fs
xor
scas
push
dec
jle
mov
in
push
loop
sub
mov
xor
andl
js
arpl
mov
movl
sub
and
int3
stos
js
mov
mov
push
sahf
xchg
popa
ljmp
js
lods
out
aad
aaa
ret
pop
inc
test
in
xchg
jno
xchg
inc
std
adc
adc
mov
ja
jne
xor
dec
add
adc
push
repnz
mov
add
insb
fisubrl
jle
inc
stos
push
popf
sub
mov
neg
jl
outsl
jnp
shrl
push
fcomi
sub
push
lahf
aas
dec
push
arpl
xor
push
mov
sahf
push
clc
mov
mov
or
icebp
cmp
cmp
gs
cmp
movsl
xchg
hlt
xchg
or
cmp
insl
mov
xchg
cld
out
jne
mov
pop
lret
cmpsb
shl
test
cmpsl
cmpsl
or
push
in
lret
push
add
and
sti
adc
pop
movsl
clc
ficompl
lods
fdiv
imul
xor
cmpsb
addb
in
subl
adc
adc
rol
aaa
ficomps
pop
add
dec
popa
test
jge
mov
jae
aam
adc
cmc
out
add
cmpb
xchg
dec
dec
popf
mov
or
inc
outsb
cli
lds
cltd
or
cmp
xchg
cwtl
repz
push
jmp
pop
push
scas
shll
pop
pop
and
addr16
incb
test
cmpsl
popa
cmp
mov
sti
push
test
test
mov
fisubs
xchg
cmp
mov
pop
ljmp
mov
mov
rcl
inc
mov
stos
xchg
cmpsb
nop
stos
ret
xchg
ja
lret
lods
mov
pavgb
mov
xchg
movsl
int3
xchg
xchg
imul
mov
mov
std
leave
paddsb
hlt
push
insb
fstl
push
sbb
add
popa
or
test
test
sub
sbb
clc
movsl
insb
cwtl
add
movsl
sbb
pop
inc
jb
adc
xchg
cltd
in
pop
add
pop
inc
stos
sub
sub
adc
insb
clc
stc
mov
cli
frstor
push
add
lcall
dec
mov
mov
mov
xchg
movsb
repz
in
sub
mov
or
imul
sbb
push
cwtl
movsl
pusha
fiaddl
in
stos
in
addl
and
in
pop
push
loopne
xchg
gs
adc
mov
repnz
jle
pop
leave
into
outsb
iret
mov
mov
pop
ficoml
mov
sub
dec
jmp
push
movsb
mov
in
pop
jl
mov
jns
dec
subb
xchg
jmp
stos
int3
in
inc
jae
mov
dec
dec
sbb
or
xchg
aam
sub
inc
in
xor
cs
rorl
rcr
ret
incb
lea
jne
and
xor
adc
or
aad
lret
es
add
inc
dec
loop
cli
mov
test
addr16
adc
inc
scas
or
mov
push
push
jl
adc
rcrl
gs
enter
add
in
rcrl
pop
add
inc
dec
das
jecxz
xchg
push
or
pop
inc
push
adc
cmpsb
pop
roll
in
mov
lods
fcomp
add
es
mov
xor
sbb
sbb
xor
adc
stos
test
cmpsb
into
sbb
loopne
dec
pop
fwait
int3
inc
cmpsb
dec
xor
xor
cmp
dec
push
mov
push
xchg
push
fbstp
cwtl
jb
dec
pop
push
push
ret
mov
pusha
xchg
pop
xchg
or
loop
xchg
jmp
iret
pop
xchg
popf
stc
xchg
int
pop
outsb
rcll
mov
jne
pop
scas
xorb
add
into
enter
aam
cltd
sbb
je
gs
ret
dec
clc
in
ret
or
pop
insl
mov
mov
adc
mov
inc
rorb
dec
mov
aad
fisubs
add
addr16
into
stos
int
lea
mov
add
lret
nop
fldcw
adc
sbb
inc
mov
xchg
cli
dec
fcmovnu
adc
cwtl
mov
xor
sbb
push
outsl
aaa
adc
or
cmp
mov
leave
mov
aad
test
fcompl
inc
das
daa
imul
and
jne
mov
fidivrs
mov
out
es
into
scas
xchg
imul
and
int3
xor
mov
sub
out
movsl
je
pop
andb
leave
mov
push
ficomps
and
dec
cmp
or
je
and
adc
or
hlt
jge
addl
movsl
cmp
push
mov
mov
testb
ja
xor
mov
xchg
movsl
in
xor
sub
movsl
mov
push
push
bound
sahf
dec
shlb
dec
mov
clc
lods
lcall
jmp
sbb
mov
inc
loopne
ret
jbe
test
leave
andl
inc
arpl
mov
insb
mov
xlat
jl
lcall
cltd
adc
push
outsl
pop
and
sahf
pop
lods
xchg
cmp
cmp
int3
je
gs
mov
push
popf
inc
dec
jb
pop
out
addr16
jmp
divb
jo
cmp
inc
push
ja
pop
add
push
dec
cwtl
xor
ficompl
xchg
ljmp
mov
aas
and
push
je
xlat
hlt
pop
push
inc
inc
add
pop
popf
je
ljmp
mov
sub
stc
jmp
jae
sub
leave
fistpl
xchg
lcall
cmc
push
ds
cltd
bnd
sub
push
mov
add
pop
test
jl
or
cmpsl
sub
fisubrl
dec
jno
aas
cmp
xlat
int3
aas
rcl
xor
add
not
pop
or
daa
jmp
loop
pop
movsb
sbb
lret
jle
sbb
fsubs
scas
shr
pop
mov
mov
mov
idiv
jle
jae
fnstenv
jnp
mov
inc
push
dec
hlt
push
mov
fcmovne
roll
lea
nop
daa
stc
mov
jb
xlat
pusha
pop
and
imul
push
or
aam
add
add
nop
jb
out
push
decl
add
or
ds
add
std
mov
in
pop
aas
pop
sbb
jmp
push
push
adc
addr16
cmpsb
jp
sub
push
dec
xchg
pop
sbb
mov
jge
push
push
jge
mov
imul
mov
sub
push
test
iret
sarl
jge
dec
sub
test
push
arpl
aas
mov
out
lock
lret
mov
mov
fisubrl
mov
mov
iret
fistl
mov
popf
sub
loope
ror
add
inc
jecxz
cmp
outsl
ja
cmpsb
test
push
push
mov
and
cmpsl
outsb
push
filds
jno
push
push
push
shll
fwait
jecxz
in
cmp
push
push
inc
xchg
cmp
mov
xchg
lcall
sub
aas
fists
pop
hlt
xor
das
pop
mov
fldcw
mov
pop
push
xchg
fwait
adc
cmp
sub
jno
jns
mov
addl
sbb
cmc
into
push
fs
inc
insb
mov
aad
or
sub
pop
jbe
ret
repz
cld
std
sbb
pop
aad
add
iret
rclb
out
clc
xchg
incl
aas
mov
ljmp
push
lods
jae
ficomps
andl
jae
jne
pop
clc
sbb
dec
outsl
push
fidivrs
jl
push
sub
mov
cld
push
nop
into
adc
test
das
dec
scas
daa
sbb
sbb
lret
dec
pop
ljmp
push
jmp
pop
mov
sbb
jnp
rcrb
test
hlt
or
jbe
adc
stos
lcall
adc
mov
out
xor
and
push
js
iret
decb
push
sub
movsl
add
fistps
mov
push
fcoml
push
or
lods
incb
cmpsl
xor
xchg
test
lock
add
je
xchg
mov
es
mov
in
cld
sbb
xor
in
in
ret
cwtl
movsl
mov
and
leave
push
dec
pop
mov
jmp
jl
sub
adc
lods
shrl
inc
sub
sub
sti
icebp
enter
cmp
xchg
cmp
out
inc
pop
pop
or
pop
lret
mov
movsb
add
jecxz
cs
cltd
adc
or
in
xchg
cmp
aad
adc
xorl
inc
xor
in
push
fdivs
mov
add
mov
lods
clc
inc
jmp
movl
and
cmpsb
xchg
cmp
fcmovu
imul
fsts
fcompl
xchg
mov
dec
outsl
dec
or
in
mov
les
das
jbe
lea
sbb
loop
mov
movsb
cmp
rorl
push
jnp
xor
addb
popf
add
into
mov
xchg
adc
jae
jmp
icebp
test
push
fbld
imul
push
jmp
xchg
pushf
testb
xor
pop
fists
xchg
pop
dec
cld
iret
pop
sub
movsb
enter
or
push
jno
int3
mov
pop
pushf
ret
push
xor
mov
mov
cs
inc
jbe
ljmp
push
test
mov
aam
add
or
ficompl
leave
in
in
push
out
loop
mov
es
ret
ror
sbb
push
shlb
sbb
pop
or
mov
ficoml
adc
sahf
daa
jno
out
jno
dec
inc
out
fcomip
pop
mov
mov
inc
cltd
sbbb
adc
xchg
mov
adc
cli
sub
out
stos
popa
adc
push
cltd
jno
adc
loope
jl
inc
mov
insl
iret
pop
mov
push
xchg
lea
leave
loopne
sti
mov
or
nop
xlat
jo
loopne
cmp
aas
sub
cmp
int3
xor
pushf
mov
jno
cli
cmp
push
pop
lea
test
hlt
insl
out
addr16
xor
loopne
add
inc
and
pop
ss
xchg
inc
mov
shlb
and
and
mov
sbb
insb
ret
inc
loopne
insl
nop
sti
mov
push
clc
mov
jl
bound
std
push
cmp
pusha
cli
adc
mov
neg
dec
cltd
fdiv
in
pop
dec
or
and
push
lods
lcall
roll
aam
psubb
inc
lods
enter
xor
jp
push
cli
cmc
jnp
xchg
ror
inc
pushf
push
cmpb
mov
add
and
xchg
das
cmp
push
leave
or
into
sub
push
jle
cmp
outsl
push
xchg
cmp
adc
xchg
adc
repz
sub
inc
pusha
pop
dec
xorl
jb
mov
cmc
icebp
inc
add
out
mov
cs
cwtl
lret
insb
jae
fwait
aad
out
jecxz
not
inc
add
push
test
inc
rorb
popa
scas
clc
sbb
sbb
xor
adc
lods
pop
fbstp
pop
cmp
mov
out
mov
jmp
cmp
push
repz
lahf
jg
sub
and
xor
pop
daa
push
lret
aaa
sub
out
inc
cwtl
mov
sub
mov
dec
mov
pop
and
cmp
out
out
notl
fisubl
movsb
in
imul
xchg
lret
pop
xchg
movsl
push
addr16
pop
shlb
xchg
mov
or
mov
dec
aaa
mov
xor
insb
cmp
xor
xchg
repnz
inc
jl
gs
mov
lock
jp
cmp
jae
mov
pop
xchg
mov
call
scas
testb
xchg
pop
movsb
cmpsl
gs
fbld
into
xor
and
loope
shll
push
lcall
je
test
xor
jnp
dec
addr16
and
data16
xchg
push
das
mov
jb
rcrl
push
push
add
cmp
sbb
popf
and
arpl
in
out
pslld
sub
and
pusha
roll
int3
cli
mov
lahf
adc
out
ljmp
mov
xchg
or
dec
sbb
jp
in
push
push
xlat
repz
dec
push
push
pop
push
cli
out
mov
mov
xchg
std
pop
xor
dec
sbb
adc
mov
mov
push
cmp
rorl
mov
add
cmp
loop
xor
clc
dec
and
stos
orb
adc
mov
xor
loope
out
push
jmp
dec
aas
cmp
mov
adc
popa
hlt
jecxz
jo
loopne
cld
and
pop
daa
xor
mov
loopne
stos
movsl
xchg
inc
popf
mov
dec
repnz
and
jg
sbb
lret
dec
pop
xor
jne
out
fdivrs
sbb
loope
xor
inc
out
ret
jecxz
push
cs
cmp
pop
jg
sahf
adc
jg
adc
and
imulb
pop
pop
push
out
jns
gs
dec
sub
les
push
les
mov
mov
shlb
xchg
jnp
sub
mov
dec
insl
add
inc
out
mov
push
out
or
sub
mov
loop
mov
outsb
or
push
out
das
sti
imul
cld
mov
stos
cs
out
cld
mov
ret
or
push
and
dec
mov
adc
incb
es
andl
and
mov
mov
inc
push
cmpsl
jg
fimull
add
dec
pop
sub
out
imul
mov
or
jb
ds
adc
iret
out
stos
jnp
pop
aaa
fimull
mov
sub
sti
negl
and
or
daa
in
outsl
push
push
arpl
mov
hlt
pop
shr
sbb
negb
bound
das
out
mov
mov
jg
push
mov
pop
dec
loopne
add
inc
js
push
mov
out
inc
jbe
cld
jmp
popf
sub
imul
scas
adc
or
je
test
sbb
out
daa
push
icebp
mov
push
test
sub
insl
push
mov
aad
clc
lret
add
xlat
mov
loopne
cmp
cwtl
xor
scas
mov
fldcw
jecxz
stos
jo
sti
inc
jns
fisttpll
add
dec
sub
shl
inc
mov
mov
ficomps
lret
mov
mov
mov
out
pushf
jl
adc
push
xorb
sbb
push
xorl
mov
idiv
repz
fs
pop
add
out
loopne
pop
jl
xor
push
mov
sti
mov
sub
loopne
lcall
add
mov
repnz
cs
mov
sub
int
orl
call
popa
mov
loop
cmp
in
gs
jo
xchg
repz
scas
xlat
daa
pop
cltd
test
and
insb
aaa
inc
jmp
lods
mov
subl
mov
mov
movl
pop
cmp
mov
cmp
push
sbb
pop
add
repz
jp
movsl
push
popa
inc
nop
and
sbb
inc
xchg
dec
out
push
mov
xor
das
mov
fiadds
cmp
push
dec
sub
ret
push
icebp
ds
fsub
and
xor
stos
pop
cwtl
and
fisttpll
fwait
or
ljmp
cwtl
sub
ret
test
pop
ret
jmp
int3
pop
ljmp
sub
js
jmp
lods
test
adc
in
jns
adc
xorl
mov
mov
push
jmp
cltd
pushf
mov
xchg
mov
scas
mov
leave
xchg
mov
nop
jne
mov
jbe
jo
lret
cmp
sbb
mov
daa
push
jno
push
lods
push
add
sahf
inc
addl
test
js
mov
and
leave
or
test
call
lds
or
sbb
lcall
push
ficoms
into
leave
adc
out
add
push
scas
jns
std
or
cmpsl
jmp
inc
cwtl
mov
mov
xor
dec
out
mov
mov
add
bound
adc
pop
std
inc
inc
test
mov
iret
mov
stos
jo
out
jae
adc
or
push
push
xchg
arpl
scas
aaa
push
cmp
test
adc
les
inc
add
xchg
and
mov
loope
or
flds
popa
pop
or
sub
movsb
fnstcw
pop
jecxz
decl
addr16
popf
adcb
inc
cmp
out
js
adc
jg
cltd
dec
mov
mov
hlt
les
lods
fisubrl
mov
lahf
push
mov
inc
pop
xchg
mov
pop
xor
adc
dec
inc
adc
mulb
cmp
pushf
cmpsl
mov
les
sbb
jns
repz
dec
in
pop
xchg
out
lcall
scas
or
xchg
imulb
gs
pop
cmpsb
adc
imul
jmp
faddp
cmp
cmpb
icebp
in
jp
and
jnp
leave
fwait
scas
pop
mov
pusha
popa
fnstsw
lea
inc
bound
repz
sub
ljmp
mov
cltd
jne
cltd
add
or
mov
lcall
sbb
inc
xor
imul
adc
mov
lods
push
sti
mov
fldl
decb
inc
ret
outsl
scas
lods
cltd
icebp
dec
je
imul
out
addr16
in
mov
fdivrl
popa
push
aas
xor
mov
adc
lock
loope
mov
rcll
addps
sti
push
pop
jg
and
outsb
test
sbb
out
mov
mov
dec
and
jno
mov
jb
mov
fbld
xchg
andl
cmp
pop
sbb
leave
xor
in
mov
pusha
pop
jb
lcall
out
in
mov
add
add
cmp
mov
insb
push
fnsave
sti
mov
loop
fnstenv
push
adc
push
inc
movsb
xchg
mov
cmp
movsb
xor
insl
push
sbb
call
mov
mov
adc
xchg
movsl
les
xchg
xor
push
pushf
mov
dec
mov
gs
sti
mov
and
sub
filds
and
push
mov
addr16
imul
ret
mov
push
jnp
neg
lcall
sub
repz
lret
push
sahf
xor
insl
xchg
pop
aas
ret
push
lahf
mov
int3
mov
and
mov
mov
fnstsw
fadds
movsb
fdivr
mov
sahf
xchg
push
call
test
inc
and
mov
xor
fwait
adc
aam
das
iret
movsl
cmp
scas
pop
or
add
out
jno
push
xchg
push
fiadds
add
clc
in
cs
fsubl
aas
adc
and
sub
arpl
stc
cmp
xchg
enter
aaa
jmp
or
push
adc
adc
xlat
push
lock
jp
jp
push
push
lahf
ja,pn
std
cltd
daa
int
pop
pop
cld
mov
pop
mov
sahf
mov
repnz
scas
inc
inc
and
mov
jp
leave
jmp
testb
xor
push
pushf
xor
xor
icebp
fcomps
cmpsb
inc
mov
bound
jl
ss
int
int
insb
push
mov
sub
pop
inc
push
test
jnp
jae
das
pop
mov
dec
sbb
int
mov
fiadds
mov
mov
fcmove
ds
adc
adc
sub
test
mov
ljmp
inc
movsb
rol
sub
adc
mov
aad
clc
lret
mov
test
jo
inc
bound
xchg
mov
push
daa
xchg
testb
jecxz
jbe
dec
aam
push
inc
xchg
adc
pop
sbb
adc
insl
movsl
push
rcll
xor
sbb
mov
rolb
addl
imul
jnp
mov
lret
fistl
jg
sti
ret
and
xor
daa
mov
pop
pop
iret
lea
pop
imul
movsl
fdivl
sub
stos
repz
popf
aas
je
pop
mov
js
xlat
mov
and
mov
pop
xor
and
repnz
rcrb
or
scas
adc
into
shlb
div
cli
lahf
pop
and
lods
inc
adc
mov
xchg
dec
data16
xchg
out
sti
hlt
or
xchg
sub
adc
cli
rcr
nop
pop
pop
push
cmpsl
adc
shll
cmp
inc
aam
popa
inc
mov
or
fstl
call
pop
sarl
out
adc
and
cmp
push
popf
mov
cmpsl
out
push
clc
int
call
adc
mov
mov
imul
in
in
sub
jns
jg
loop
xlat
enter
rcrl
sbb
xor
push
pop
mov
popf
inc
fmull
add
aad
add
mov
ret
sub
ret
mov
dec
ds
mov
mov
pusha
push
jns
fdivl
iret
movsb
xor
in
mov
and
hlt
pop
xor
xchg
push
push
and
maxps
ret
fmulp
test
xchg
ds
mov
loope
mov
pop
out
lock
mov
and
stos
and
inc
push
ret
mov
inc
adc
push
out
into
rol
xchg
ret
ret
mov
push
minps
push
test
sub
mov
cmp
sti
icebp
push
call
xchg
inc
sbb
mov
lods
in
sbb
adc
sub
loopne
in
fcompl
pop
mov
and
sbb
cmp
push
mov
xchg
nop
cld
in
sub
mov
fwait
cmp
push
jne
iret
test
and
shlb
out
fwait
mov
push
hlt
loopne
push
sub
fnstsw
jns
lock
mov
ss
adc
sub
int3
iret
div
mov
andb
enter
fs
fildll
outsl
and
adc
movsb
mov
movq
pop
cmc
xbegin
out
cmp
sbb
insb
lea
or
out
clc
jp
pop
lods
dec
fwait
lret
cmpsb
out
cmp
in
mov
std
push
pop
sbb
out
aas
dec
pop
jl
cltd
push
rcll
pop
aad
mov
adc
sbb
imul
lahf
push
shrl
pushf
add
sub
pop
jecxz
lahf
clc
repnz
inc
lds
jp
cmp
jg
mov
aas
add
faddl
mov
jl
xchg
sarb
dec
repnz
test
add
sbb
and
mov
lock
and
pop
stos
call
sub
out
dec
jo
mov
jg
scas
call
int3
sti
cmp
and
hlt
xchg
jns
fisubrl
mov
mov
test
jns
sbb
fbstp
mov
lret
push
scas
fistpll
jne
cmp
or
adc
lods
mov
mov
sub
inc
lea
insb
xor
in
pop
lcall
call
repnz
aam
add
inc
and
mov
fnstcw
lret
cmpsl
sbb
lcall
ret
pop
xor
fidivrs
adc
cmpsb
mov
xor
jle
push
rorl
test
int
das
and
repz
dec
shrl
xor
sub
stos
std
frstor
fwait
les
stc
daa
xor
or
pop
outsb
or
subb
imul
out
outsb
push
loop
adc
dec
inc
daa
inc
sbb
jle
aas
inc
inc
stos
call
xchg
mov
xchg
jb
rclb
pusha
mov
rcl
sti
cmp
or
dec
or
and
or
sbb
stc
xchg
xor
pop
subb
mov
test
xchg
lcall
sbb
dec
xor
or
sbb
mov
and
adc
scas
notb
mov
jmp
add
jle
jge
and
js
loope
aad
mov
xchg
dec
stos
andl
and
jp
pop
sbb
pushf
test
jae
xchg
cmpsl
dec
test
test
xchg
sbb
pop
popf
adc
jnp,pt
push
and
movsb
stos
outsb
pop
cmpsb
push
iret
aad
ljmp
and
roll
scas
test
repnz
xchg
test
jge
adc
adc
and
pop
push
rcl
pop
or
insl
adc
pop
add
or
and
pop
xor
stos
filds
add
test
andb
clc
icebp
push
test
inc
leave
sbb
push
stos
inc
ljmp
add
fs
inc
mov
push
add
negb
inc
rclb
push
ds
lods
jl
fadd
sbbl
pop
push
mov
pop
sarb
mov
dec
lret
fisttps
xchg
sbbl
cld
lods
sub
lcall
mov
mov
mov
loope
lcall
popf
fcoms
leave
sub
pushf
cmp
cwtl
rclb
adc
push
outsl
push
adc
daa
mov
orps
enter
sub
fsubr
sub
or
sti
mov
mov
cltd
jmp
push
int3
or
in
test
in
sbb
push
inc
mov
or
xor
inc
ja
out
pop
int3
add
adc
lret
dec
test
xor
std
js
xchg
mov
sbb
xor
cmc
ret
fmuls
add
add
sub
cmp
adc
jmp
int3
inc
pushf
shrb
xor
fcomip
cwtl
and
inc
inc
sahf
lret
insl
pusha
pushf
out
int3
push
dec
xor
xor
xchg
lret
in
jnp
icebp
pop
cltd
call
out
inc
addr16
and
sub
push
repnz
out
shl
pushf
or
or
and
mov
dec
mov
mov
push
and
fisubs
lods
icebp
cmp
hlt
sub
add
scas
xchg
loopne
mov
aas
inc
ficoml
repz
sahf
bound
cmp
inc
loop
or
pop
bound
mov
adc
dec
data16
cmp
push
adc
lea
movsl
mov
mov
or
or
inc
pop
aad
jmp
inc
or
cli
mov
repz
movb
rcrl
inc
nop
lret
cmc
pop
pop
mov
pop
xor
je
insl
scas
iret
mov
sub
xor
lods
popf
lret
rolb
jno
add
mov
cld
js
out
cmp
push
imul
mov
fistpl
leave
mov
pop
xchg
pop
fs
mov
and
mov
daa
or
aam
adc
popa
mul
inc
mov
xor
fadds
cmp
das
sti
ljmp
js
nop
lret
incb
pop
mov
xchg
sub
and
mov
ret
and
cmp
push
push
adc
in
xchg
in
pusha
pop
in
jle
dec
insl
iret
js
scas
mov
pop
push
clc
lcall
aad
or
mov
pop
xorl
sbb
pop
mov
xlat
inc
dec
addr16
popa
je
cmp
xchg
arpl
lods
cmp
iret
pop
es
shl
jns
xor
mulb
and
xor
lock
aaa
inc
sbb
and
popa
adc
test
adc
stc
lcall
and
out
ljmp
notl
lds
sahf
cwtl
mov
in
insl
xor
int
orb
mov
leave
shlb
add
push
or
test
shrl
pop
js
jbe
push
test
add
into
in
in
popf
pop
sub
stc
add
ficoms
push
xor
ficoml
ror
push
mov
shll
sti
cmc
repz
ret
cmpb
adc
inc
push
push
jge
cmp
mov
or
inc
or
js
out
enter
dec
jb
xlat
pop
nop
cli
xor
pusha
add
ss
nop
lcall
sarb
out
imul
es
mov
lock
mov
ret
repz
dec
mov
sarb
cmp
sbbb
pop
sbb
outsw
stos
sub
mov
je
mov
jne
pusha
adc
dec
sbb
fsts
out
lds
dec
leave
jge
jle
xchg
orb
cli
push
fnstsw
out
insb
mov
adc
add
adc
lock
ficoml
push
movsl
add
push
xor
pop
movsl
test
fwait
adc
adc
outsb
pop
in
lcall
lcall
insl
sbb
jnp
ja
jl
loopne
mov
pop
movsb
lods
mov
mov
js
scas
mov
lods
xchg
push
faddp
xor
dec
ss
jmp
mov
add
mov
pop
test
cmp
xor
cmp
xor
mov
popa
andb
adc
pop
adc
ss
mov
mov
pop
in
cmp
sbb
fldt
lds
mov
out
iret
pop
jae
push
mov
cmp
pop
call
adc
jg
jp
and
pop
movsl
ret
push
dec
pop
scas
mov
mov
and
inc
mov
sbb
popf
xorl
stc
push
fwait
mov
sarl
push
pusha
add
or
sbb
es
mov
popl
inc
mov
scas
ljmp
sahf
mov
out
push
add
ret
or
jae
push
je
repz
mov
aaa
inc
jg
push
xchg
push
loope
lock
pop
fisubl
mov
in
inc
xorb
cmpsl
or
cmpsb
cli
mov
lcall
mov
pop
sub
lahf
cmp
out
push
movl
or
sub
cli
inc
lock
dec
in
pop
fcom
jnp
leave
xchg
xchg
std
popf
call
cld
mov
xor
xor
dec
jmp
aas
sbb
dec
mov
push
loopne
ss
out
dec
jg
test
sbb
cltd
push
mov
push
push
add
bound
xchg
lea
addps
ja
xchg
imull
ficoml
push
jmp
jo
jo
xchg
pop
inc
or
imul
or
dec
pop
sbb
cmp
add
sub
xchg
push
in
inc
adc
xor
gs
stc
jbe
push
in
orb
iret
movsl
and
out
xchg
mov
mov
sti
fimuls
push
dec
push
loop
pushl
jno
sub
xor
mov
stos
mov
push
or
push
rorb
jecxz
lahf
repz
int
and
ljmp
dec
mov
ret
lods
jnp
lret
loop
xchg
push
adc
sahf
cs
sbb
cltd
pop
repnz
outsl
cli
push
inc
push
repz
cld
les
push
jmp
pop
dec
mov
sbb
mov
jo
sti
jo
sub
das
mov
imul
test
jp
sub
mov
xor
aas
and
arpl
aad
repz
popa
jne
out
out
mov
loop
in
mov
out
dec
mov
sbb
dec
jl
jmp
icebp
push
sti
push
sahf
mov
cmp
adc
add
jbe
mov
push
sub
fidivrl
decl
pusha
push
icebp
into
stos
stc
test
insb
cmovno
sbb
mov
insb
andl
sub
push
sahf
ds
inc
or
pop
lcall
mov
xchg
dec
out
pop
je
sub
dec
or
pop
cmpsb
xor
sbb
clc
sbb
movsl
adc
imul
cmp
arpl
and
add
movsl
mov
repz
loope
push
mov
jl
popa
test
lods
in
rclb
les
pushf
roll
insl
inc
nop
outsl
scas
push
mov
jl
add
xchg
or
and
mov
xchg
add
xchg
jno
insl
nop
mov
jae
test
les
inc
xor
xor
adc
js
sti
xchg
addb
int
cmp
out
or
add
inc
aaa
xchg
and
jae
mov
lcall
or
cwtl
lea
test
lds
and
cs
addb
jecxz
or
jb
out
outsl
or
insb
mov
jbe
rorb
cmpsb
into
insb
add
lret
adc
mov
outsl
pop
xchg
fs
push
sub
mov
dec
jbe
aad
lahf
call
jge
imul
mov
and
adc
sub
pop
rcr
mov
jns
dec
daa
jecxz
lret
jl
insl
push
pop
ja
mov
add
addr16
and
or
lret
add
mov
daa
pop
or
add
pop
xchg
nop
sub
and
aaa
pop
cltd
mov
jb
sbb
adc
dec
or
xor
loop
add
sub
lods
dec
cltd
cmpl
push
pop
arpl
loope
mov
jns
xchg
mov
divb
ljmp
mov
inc
loop
repz
push
out
iret
xchg
aam
std
out
fidivl
and
insl
in
mov
push
int
aaa
pop
adc
mov
mov
std
jnp
mov
push
inc
xlat
pop
jb
jmp
jg
ret
lss
mov
gs
mov
mov
or
or
jp
push
adc
daa
pop
outsl
neg
add
negb
andb
or
lods
mov
out
data16
cpuid
dec
and
loop
mov
pop
jecxz
cmp
fsubrs
mov
adcb
or
jno
int3
xchg
mov
or
divb
or
mov
mov
push
rorl
cwtl
fdivs
mov
jne
and
dec
movsb
mov
inc
hlt
cmp
int
insb
jmp
dec
add
addb
je
clc
pop
ds
xchg
or
test
jecxz
push
dec
push
jle
or
push
jmp
push
ja
jo
add
mov
xchg
push
jnp
shrl
clc
sbb
movsb
imull
int3
in
jbe
ljmp
cmpb
push
dec
nop
mov
pop
out
mov
shlb
dec
mov
imul
inc
jns
cmp
and
popa
jmp
test
mov
mov
data16
pushf
inc
mov
inc
cmpsb
ret
lds
mov
pop
aad
outsl
inc
sbb
push
cwtl
cmpsl
push
jnp
aas
or
shlb
cmp
jbe
jg
aad
or
add
out
fdivrp
mov
jno
sbb
jnp
mov
ret
inc
in
jbe
pop
cmp
js
shlb
mov
cmc
test
mov
mov
cmp
stos
add
xor
jne
lret
pop
add
clc
mov
sbb
push
mov
scas
in
ret
insl
data16
add
stos
add
test
and
orb
in
cld
jl
out
xchg
cmp
add
xchg
dec
dec
and
cwtl
psllq
pop
mov
pop
cmpsl
dec
pop
xchg
in
notb
cmp
mov
cltd
or
mov
pop
mov
and
sub
clc
pop
jae
pop
sub
jae
mov
push
jnp
mov
sbb
push
sbb
mov
aaa
fs
into
mov
into
mov
mov
aad
sbb
insl
inc
add
shrb
adc
loop
test
inc
imul
or
sbb
adc
sarb
stos
daa
mov
push
je
dec
icebp
bound
xchg
pop
lds
adc
test
xor
cmpl
mov
push
push
push
dec
not
andl
and
mov
jne
aad
int3
cmp
sahf
popa
fs
push
lret
nop
sbb
adc
mov
aad
sahf
ret
in
mov
mov
pop
cli
sub
xchg
and
xchg
dec
fwait
repz
cwtl
sbb
sti
lret
mov
lahf
sub
xchg
icebp
xlat
ja
loop
cmp
js
or
test
out
mov
out
in
push
fiaddl
test
in
sub
add
push
pop
sub
in
adc
cld
pop
lret
sarl
aas
jmp
and
hlt
in
int3
insl
insl
lods
lods
cmp
mov
fildl
xor
movsb
adc
fidivrl
ljmp
cmp
pop
fisubrs
out
xor
loope
cmp
ljmp
sub
imul
or
lret
jmp
iret
dec
das
outsb
iret
add
fdivrl
call
add
in
mov
pop
ja,pt
add
jns
mov
test
mov
out
xor
icebp
jns
or
xchg
mov
sbb
or
or
inc
add
nop
call
sahf
std
lea
repnz
pop
push
adc
sbb
testl
sahf
lret
loope
jl
mov
dec
lock
pop
push
xchg
sbb
data16
cltd
addr16
mov
jo
popf
and
cld
cmp
call
mov
cs
mov
lea
or
ss
adc
mull
mov
mov
cld
clc
mov
jbe
std
into
pop
ljmp
jg
add
push
mov
mov
mov
ret
dec
mov
mull
jmp
les
popa
mov
mov
xchg
sar
movsl
stos
sub
xlat
lea
adc
repz
mov
rolb
dec
negb
jecxz
jmp
dec
stc
sub
outsb
jb
fsubrp
xor
push
scas
rolb
clc
or
pop
pop
and
ljmp
out
lock
ret
push
mov
ljmp
mov
adc
js
bswap
fs
stos
mov
and
mov
pop
inc
push
mov
call
jb
pop
fcoml
sarb
negb
aam
mov
cltd
xchg
lea
xchg
mov
mov
imull
push
rcr
sub
test
imul
sbb
es
mov
leave
cmpsb
pop
push
push
int3
push
stos
mov
xor
cmp
cld
fcmovnu
ljmp
adc
pushf
lret
mov
mov
pop
out
xchg
jne
sub
je
out
mov
mov
sub
and
adc
cli
sbb
jge
push
pop
and
aad
aaa
pop
ljmp
push
mov
dec
mov
and
mov
stos
dec
xor
xchg
jl
cli
jge
cwtl
scas
push
fwait
sub
gs
jb
jo
cmc
ljmp
scas
xor
test
jne
sbb
shll
cmp
sbb
or
sbb
cli
jp
mov
rorb
call
iret
or
jp
rclb
push
jb
aas
imul
dec
addl
mov
lahf
hlt
fs
mov
arpl
std
mov
cmp
rorl
nop
sbb
add
cmpsl
jo
jae
lods
int3
mov
mov
cmpsl
push
mulw
and
hlt
xchg
out
sub
mov
dec
dec
xchg
xchg
add
out
add
jecxz
repnz
aaa
add
jbe
xchg
sub
xchg
out
test
cs
cmp
leave
xchg
in
test
fnsave
mov
clc
sub
sbb
testb
add
mov
or
inc
es
out
mov
xor
mov
mov
shll
lods
sub
loop
push
in
mov
lods
add
fs
int3
ljmp
bound
shll
adc
or
and
es
inc
mov
push
xchg
into
jnp
jbe
pop
ret
adc
mov
sbb
mov
jae
mov
xor
movsl
insb
add
or
fs
add
fcompl
xor
xlat
lea
out
dec
inc
cmp
sub
lea
jnp
stos
cmpsb
popf
push
test
fsubs
shll
and
cmp
jmp
dec
jecxz
push
mov
sahf
test
test
repnz
sbb
jle
mov
pop
cltd
dec
jo
cmp
push
in
nop
dec
lock
mov
cmp
sbb
mov
and
enter
pop
mov
dec
gs
mov
and
mov
jl
ja
inc
loopne
mov
movsb
mov
pop
xchg
mov
or
or
jge
popa
adc
dec
call
inc
mov
cmp
xchg
and
sbb
icebp
adc
test
jl
testb
cwtl
fisttps
scas
mov
dec
mov
loop
fstps
into
aaa
out
ret
out
push
push
les
repnz
pop
xor
fisttpl
insb
dec
jae
hlt
jle
fisubs
mov
test
divb
inc
inc
adc
and
xor
xor
add
dec
scas
shrl
fdivr
pop
pcmpgtw
mov
cmpsl
sbb
ficompl
out
outsb
xorl
jle
lcall
sti
push
pop
test
mov
sbb
mov
mov
push
pop
push
lret
movsw
jbe
movsl
das
mov
mov
xor
pushf
dec
leave
cmp
pop
scas
pop
popa
int
lea
adc
push
xchg
mov
jl
jle
shll
lcall
adc
push
mov
or
in
lea
inc
adc
cmc
test
jo
ret
shrl
or
lods
mov
cmp
mov
imul
sub
aas
dec
fs
and
test
xchg
fisubs
pop
je
movsbl
sti
or
and
cmpsb
std
sbb
add
insl
cmpl
mov
popf
repnz
testl
pop
stc
lret
inc
pop
mov
shll
or
push
in
push
testl
cld
scas
add
push
sub
lret
sbb
sahf
loop
bswap
pop
mov
cwtl
push
add
xor
adc
mov
push
jbe
lea
mov
cmp
mov
popa
hlt
or
lahf
add
push
or
shll
sub
mov
testb
shll
or
add
lret
fstps
cmp
adc
adc
sub
pop
fists
xor
in
mov
or
cmp
daa
jae
sub
sub
fdivrs
mov
ljmp
adcl
and
cmpsb
xchg
mov
sub
sub
in
pop
push
cmp
dec
adc
into
mov
lret
mov
rorb
stos
dec
jo
push
adc
mov
cmc
mov
insb
fwait
clc
es
ret
and
xor
inc
fimull
and
mov
mov
lods
cmc
adc
cmpsl
cmpsl
jmp
int
ds
sahf
das
iret
sub
dec
inc
pushf
mov
add
and
shl
sti
movsl
faddl
es
cmpsb
ja
clc
dec
and
jo
jo
daa
out
adc
sbb
push
sub
dec
jge
sub
loop
inc
push
mov
and
or
aam
loop
fistpll
cmc
fs
mov
jmp
cmp
jg
inc
jmp
gs
jb
idivl
xlat
ja
addl
cmp
sub
jge
outsl
mov
push
pop
push
mov
sbb
add
test
and
scas
inc
outsl
aad
add
mov
insb
sub
out
gs
fsub
mov
mov
fmuls
enter
mov
mov
mov
pop
or
cmp
leave
xchg
shll
insl
inc
jecxz
cmp
mov
icebp
out
out
lcall
sbb
fistps
lods
sarb
rcrl
adc
push
mov
iret
add
push
inc
jb
xor
sbb
cmp
lods
cmp
jecxz
inc
mov
movsl
cmc
pop
add
push
loopne
lret
sbb
out
loopne
fcom
mov
xchg
sub
adc
frstor
faddl
outsl
mov
stc
adc
add
mov
adc
or
xchg
xor
mov
cmp
pop
and
pop
and
aas
push
dec
sarb
dec
jle
in
orl
movsl
lret
daa
add
mov
dec
mov
cmp
or
imul
leave
mov
inc
aas
or
int
push
imul
xbegin
testl
jno
xchg
leave
mov
xchg
jne
pop
pinsrw
fwait
mov
data16
or
int3
iret
movsl
out
push
lcall
or
int
mov
sub
jbe
hlt
es
mov
jge
dec
xchg
mov
imulb
in
repnz
xchg
mov
cmp
and
jnp
popf
push
push
incb
sahf
mov
push
gs
aam
fisubs
and
push
sub
cmpl
std
xor
test
add
in
loope
movsb
xchg
jo
push
cmp
dec
je
cmpsb
lcall
jae
xchg
push
cwtl
ds
es
lcall
cmp
pushf
fcomps
cld
mov
mov
out
add
jb
les
xchg
mov
inc
insb
das
cmc
into
mov
ret
xor
adc
and
mov
loopne
sarb
push
and
cmc
xor
pop
dec
das
inc
jb
lock
int3
ret
divb
xchg
scas
mov
fimuls
shlb
dec
js
mov
outsl
cmp
cmp
stos
mov
xchg
push
mov
ret
jne
push
loopne
cltd
jge
imul
jle
aad
or
movsb
aaa
push
in
dec
mov
fdivr
hlt
loope
pop
pop
cmpsl
lret
dec
inc
je
sar
or
fnstsw
push
dec
jmp
imul
add
mov
fbstp
xchg
sti
lahf
enter
cs
push
cli
cwtl
ljmp
and
xsaves
add
xlat
push
imul
lret
xor
jle
xchg
jg
pop
sbb
popf
adc
fisubrl
inc
mov
dec
sub
or
icebp
xchg
out
sbb
stc
inc
and
sbb
es
adc
push
call
imul
adc
push
inc
fisttps
arpl
in
mov
or
push
cmp
addl
xlat
sub
sbb
xchg
adc
inc
mov
jnp
scas
sub
mov
mov
xor
int3
inc
popa
jnp
jg
push
mov
jmp
xchg
jns
nop
cmp
out
mov
in
insb
and
cmp
mov
inc
xchg
xor
les
leave
clc
push
cmpsl
mov
cmp
lret
mov
push
push
lahf
rclb
sarb
out
pop
or
dec
cmp
pushf
fwait
ljmp
aaa
inc
add
dec
fwait
stos
lret
lds
cli
stos
add
and
pop
or
jbe
cmc
in
xchg
jb
rcrl
cld
sbb
nop
xor
out
lret
negl
mov
arpl
adc
xlat
repz
jle
mov
jl
jge
js
adc
add
cmp
adc
repnz
scas
inc
ss
mov
add
jp
fwait
aaa
jno
in
cmpsl
xchg
push
dec
lods
daa
ret
mov
lods
aad
xor
shl
jne
push
jnp
lods
mov
pop
mov
jg
sub
sbb
push
les
test
and
adc
bound
decb
mov
int3
add
lods
mov
mov
ret
push
and
outsl
xchg
out
add
clc
mov
clc
aas
mov
jmp
pop
xchg
lods
clc
ds
xchg
mov
xorl
jns
fisubs
mov
dec
xchg
mov
adc
ss
test
xor
ret
push
xchg
and
push
push
inc
mov
xor
jnp
das
imul
hlt
adc
out
jns
push
mov
iret
stos
gs
test
jge
dec
popf
cli
orl
sub
popa
xor
inc
sbb
sbb
dec
inc
jb
mov
ret
sub
arpl
bound
stos
and
jnp
add
pop
mov
ss
lcall
das
imul
mov
cltd
lds
sbb
aad
iret
fisubrs
int
gs
inc
inc
fildl
dec
xorl
les
xchg
xchg
fstps
dec
jmp
test
push
jns
pop
stc
test
psubusb
test
stos
cs
mov
jecxz
popf
sbb
cli
push
das
xchg
push
lcall
inc
xchg
mov
cwtl
arpl
sub
rcrl
sub
andb
fwait
stc
rcrl
add
xchg
cmpsb
arpl
mov
add
push
data16
push
aas
in
cmpsb
adc
or
pusha
adc
cmp
pushl
lcall
and
inc
jmp
inc
stos
es
and
and
inc
cld
pop
adc
jno
and
dec
int3
out
jmp
dec
or
mov
dec
inc
rcr
add
iret
outsb
push
xor
fildl
loopne
imul
jb
jno
iret
loopne
js
inc
mov
cmc
inc
mov
xlat
xor
idivl
negb
and
cmp
mov
push
ret
pushf
and
lcall
mov
mov
jo
add
rcll
xchg
ja
cld
lret
xor
mov
inc
xor
push
repz
in
leave
jbe
cmp
mov
ljmp
es
clc
xor
hlt
dec
mov
hlt
mov
sub
data16
and
or
mov
imul
adcb
les
xchg
xchg
in
ret
add
pop
pop
lods
xchg
or
fdivs
mov
cmp
clc
add
mov
sbb
repnz
add
test
out
ja
cmp
pop
push
test
xlat
ret
push
scas
inc
cltd
adc
shlb
lods
or
lock
fs
mov
jp
mov
push
pop
cmp
sub
es
push
fneni(8087
push
pop
jnp
jle
cmpsb
sbb
mov
push
daa
outsb
stos
js
xchg
test
ret
add
adc
incl
push
enter
mov
xlat
mov
inc
and
add
inc
int3
push
fsubrs
sbb
mov
enter
jge
pop
negb
sub
repz
test
sub
push
and
xor
ds
cmp
pushf
pop
nop
hlt
rcrl
hlt
cmp
mov
xchg
adc
push
pop
in
pusha
cmp
cli
outsb
pop
enter
scas
inc
clc
adc
push
jnp
xor
ljmp
mov
loope
xchg
insl
sbb
and
rcrl
scas
popa
aad
jmp
jg
nop
repz
xor
lahf
popa
mov
lcall
lahf
cs
jp
jmp
daa
test
imul
push
clc
xor
ds
mov
ret
negb
fldcw
incl
mov
nop
leave
push
dec
inc
jno
or
in
in
mov
cmp
or
xor
in
test
inc
adc
faddl
xor
cmp
cmpsl
xchg
mov
dec
push
jbe
lret
sub
ret
cmp
sbb
fwait
mov
or
cmp
and
push
je
adc
xchg
cmp
cmp
cmpb
addl
fistpll
test
filds
xor
push
push
mov
dec
push
cmpsb
das
and
fninit
sbb
push
mov
lret
dec
or
lds
or
xor
loope
pop
mov
shl
sti
rclb
lcall
mov
jge
rorb
jl
lods
push
sti
jns
adc
jge
inc
sub
add
pop
lea
mov
lcall
add
xchg
jb
mov
lret
push
in
push
out
rolb
sub
in
fdivr
fidivl
add
clc
int3
push
and
mov
add
aam
hlt
iret
pop
test
out
insb
cs
dec
in
mov
jmp
lcall
mov
aaa
push
fsubrl
fisubrs
fldl
mov
push
dec
xor
call
xchg
pop
and
dec
sbb
xchg
ss
out
mov
jl
mov
and
or
sub
sbb
add
pop
pop
ss
popa
lds
insl
mov
movsl
adc
add
push
shr
aad
mov
mov
push
or
dec
sub
pop
push
ss
lock
fiadds
and
sub
xchg
fs
das
mov
add
cmp
jecxz
cs
in
jmp
stos
test
adc
icebp
jmp
stos
jp
pop
mov
inc
or
ds
xor
ljmp
sub
enter
xor
mov
pusha
dec
lret
mov
pop
subl
iret
sahf
push
mov
aam
fs
fisttps
mov
out
outsb
and
rcrl
shll
and
adc
push
aad
pusha
cld
jl
push
imul
dec
add
rclb
pushf
shrl
add
lcall
stos
es
mov
sub
daa
leave
mov
mov
sub
leave
stos
or
repz
pop
mov
jo
lea
or
push
push
jnp
cwtl
sub
sub
cwtl
ret
aas
jne
in
lea
pop
inc
gs
and
mov
cmp
pushf
out
mov
dec
shl
test
sti
sbb
push
subb
and
mov
wbinvd
adc
gs
mov
mov
outsl
int
sbb
stc
popa
pop
outsl
or
and
adc
jo
rolb
pop
andb
movsb
mov
icebp
jle
pop
lods
test
insl
sbb
cmp
mov
scas
or
pop
rorl
in
xlat
ret
xchg
out
stos
sbb
inc
dec
xor
roll
daa
imul
ret
repz
push
repz
fwait
jbe
adc
imul
pop
test
or
pop
sbb
and
jge
dec
cmovo
inc
xor
add
mov
cmpsl
inc
pushf
push
in
inc
shll
movsb
or
ret
cmp
fstl
xchg
mov
fisubl
inc
xchg
mov
aam
cltd
aam
mov
adc
shrl
jns
mov
cmpsb
pop
stos
vmovdqu
movsb
data16
std
test
xchg
add
mov
dec
xchg
pushf
jns
lret
insl
mov
inc
imul
popa
cld
pop
bound
popa
pop
enter
std
std
or
add
dec
sub
movsl
pusha
xor
popa
outsb
scas
mov
les
xchg
xor
and
daa
sbb
add
xchg
xchg
das
fwait
xor
movsl
pop
mov
scas
hlt
or
lock
adc
mov
dec
shrb
movb
and
xchg
adc
fincstp
ja
xchg
adc
shrl
mov
int3
lods
insb
test
push
adc
pop
adc
push
push
fisttpll
cltd
cltd
hlt
es
fstpt
sbb
in
and
ss
pushf
cmp
sub
loop
jns
call
pop
sti
pop
mov
mov
mov
jge
pop
inc
xor
in
pop
sbb
fstps
sbb
sahf
lcall
idivb
loop
popa
xor
cs
jb
shrl
popa
cwtl
xchg
inc
push
adc
inc
pop
push
out
nop
jnp
cmc
clc
call
aas
sbb
imul
sbb
jnp
ljmp
inc
xor
loopne
gs
fiaddl
sbb
or
gs
mov
lds
decl
dec
and
fwait
clc
adc
dec
cmp
orw
js
cwtl
jnp
incl
cmpsb
jmp
mov
out
shlb
es
dec
loop
loope
and
sub
add
je
sub
insb
jns
ja
cmp
mov
in
test
into
mov
pop
lds
inc
cli
scas
add
stos
inc
xchg
jbe
dec
adc
mulb
dec
das
loopne
lock
decb
mov
in
jp
into
in
addb
sbb
das
mov
xor
mov
icebp
jbe
push
pop
ret
or
test
shrb
add
enter
ss
out
inc
jmp
lcall
push
push
addl
sub
popa
hlt
sbb
jge
cltd
mov
js
xor
pushf
outsb
inc
mov
push
push
xchg
testb
jl
jmp
add
xorb
outsb
mov
jmp
pop
mov
sub
loope
jmp
mov
lea
cmp
mov
push
out
xor
pushf
mov
mov
jmp
mov
int3
mov
mov
fucomi
mov
mov
inc
adcb
push
inc
hlt
int3
dec
push
in
or
aaa
xabort
mov
cmp
adc
pop
push
repnz
es
orl
and
push
and
sub
xchg
push
cmp
inc
mov
add
ljmp
aam
jb
out
popf
or
rcl
insl
xor
bound
andb
push
or
movl
repz
mov
pop
cltd
cld
dec
in
mov
sahf
xor
mov
dec
mov
lret
cmp
lock
lcall
cmc
std
or
int3
dec
adc
mov
in
gs
int
inc
jnp
jmp
add
and
cmpsb
int
or
or
lahf
mov
dec
jmp
dec
lods
popf
clc
cmp
xor
insl
repnz
loope
mov
and
add
mov
jne
sub
mov
cwtl
jae
dec
repz
in
xchg
fstpt
incb
or
jo
int
int3
lods
jl
icebp
cmpsb
leave
or
cmp
adc
mov
fisttps
sub
adc
cmp
inc
dec
imul
fiaddl
mov
ja
dec
cmp
js
mov
outsl
scas
mov
and
insl
out
shrl
xchg
sub
mov
add
pop
lds
mov
sbb
in
bound
js
setbe
mov
sarb
cmpsb
pop
and
fcoml
xor
test
roll
mov
mov
jae
fadds
fwait
mov
dec
jl
or
xchg
sbb
mov
inc
bound
sti
mov
pop
mov
dec
jmp
mov
scas
push
outsl
adc
cld
in
xchg
push
loop
rcrl
sub
je
inc
push
stos
mov
mov
add
pusha
bound
adc
sbb
and
xor
pop
xor
inc
fwait
dec
mov
jno
mov
sahf
cmp
sbb
out
icebp
sbb
push
mov
jbe
xchg
iret
repz
xchg
shll
inc
mov
rolb
pop
cs
xor
add
mov
repz
mov
adc
sbb
out
pop
sub
imul
add
pop
ja
loopne
adc
mov
bound
dec
xchg
xor
mov
mov
pop
movq
lahf
movsl
push
jno
inc
fdivp
cltd
push
and
test
pusha
inc
loop
pop
repz
cltd
call
rol
stos
sub
mov
lret
sub
nop
mull
mov
daa
adc
aas
push
stos
clc
xlat
adc
test
mov
dec
lods
mov
aad
in
out
and
xchg
fisubrs
outsb
mov
pushf
sarb
rcrl
sbb
jbe
sub
stc
subb
mov
inc
or
popf
ss
xlat
ljmp
fs
mov
push
push
lds
dec
jecxz
jb
stos
lea
sbb
nop
mov
xchg
push
mov
pop
sub
inc
jns
mov
adc
xor
dec
arpl
sbb
pop
sbb
mov
cmp
add
fsubs
lcall
movsb
inc
push
mov
xor
arpl
fdivr
stc
sub
shr
pop
bound
inc
iret
pop
mov
adc
inc
fucom
imul
mov
cmpsb
inc
in
jmp
aam
jne
inc
and
cmpsb
aaa
pop
mov
sbb
mov
push
mov
nop
lods
into
lret
insl
sbb
cld
cmp
xchg
jge
sbb
int3
sbb
push
or
loopne
sub
cmp
adc
sti
shlb
adc
adc
shrl
cmpsb
cmc
push
lcall
stos
xor
lahf
sub
fsubrp
in
leave
insl
pshufw
push
dec
loopne
scas
or
jbe
outsl
sub
ja
loopne
and
mov
imul
cmpsb
dec
mov
fdivs
iret
mov
popf
sti
icebp
fdivrl
mov
cmp
fnstsw
pop
notl
xor
xor
das
in
fnstsw
mov
stos
and
mov
mov
push
or
jns
sub
orb
inc
dec
inc
push
ja
std
push
bound
stos
mov
test
imul
add
cmp
outsl
adc
es
sbb
dec
fdivr
test
cmp
hlt
adc
lock
ja
cmp
mov
ror
inc
enter
push
mov
mov
loopne
sub
cmp
pushf
hlt
insl
lret
fsubr
push
fbstp
jle
jle
xchg
jmp
aas
xor
mov
mov
mov
inc
mov
outsl
mov
out
std
popf
rclb
jo
or
xchg
js
insb
dec
cmp
mov
stos
push
ds
call
imul
or
jecxz
data16
or
call
pop
sbb
les
repz
lock
and
dec
mov
pop
dec
pop
and
test
jb
aaa
mov
outsb
ljmp
repnz
fidivrl
adc
cld
out
mov
imul
mov
out
cmp
inc
sub
lea
mov
sbbb
jns
mov
xor
movsl
jl
ds
in
xor
add
ret
push
add
xor
pop
ds
pop
fcmove
hlt
push
fsubl
aaa
pop
mov
lret
movsl
jmp
psubusw
js
pop
mov
aad
inc
and
mov
push
adc
insl
movl
mov
mov
cltd
in
push
sbb
cmp
call
add
push
mov
mov
inc
push
jne
frstor
and
xor
xorb
loopne
add
mov
mov
aad
push
aam
mov
dec
sti
pop
pop
pop
xchg
mov
adc
out
ret
js
add
je
scas
dec
mov
add
cs
rcll
cmc
fmull
mov
shlb
scas
repnz
cmp
outsl
jns
ficoml
repnz
and
inc
aad
stos
popf
je
jg
mov
out
mov
test
test
xchg
daa
pop
and
aas
cwtl
xor
pop
cmp
mov
dec
test
mov
icebp
lcall
pop
inc
test
insb
or
add
and
mov
incb
xor
andl
popl
out
bound
ret
clc
scas
and
js
xorl
xor
dec
mov
pusha
fldcw
sbb
mov
mov
dec
push
lcall
mov
cmp
fstpt
aaa
xor
cmp
lahf
xchg
je
xor
pop
push
fildl
test
push
mov
push
scas
gs
or
js
jno
pop
mov
insb
fdiv
mov
mov
cmp
xchg
adc
xchg
xchg
mov
inc
lahf
testl
cwtl
lock
loopne
fwait
sbb
push
test
push
xchg
repnz
inc
mov
push
add
push
pop
rcrb
mov
or
shll
stos
stos
mov
adc
xchg
sub
dec
pop
mov
int
dec
push
dec
inc
adc
jae
gs
inc
sbb
pop
in
push
fnstsw
cmp
and
adc
mov
stos
inc
jl
pop
test
push
popf
dec
js
jnp
push
sarb
push
ret
push
cmp
fnsave
and
orb
dec
data16
dec
imul
sub
and
cmp
inc
dec
les
out
icebp
xchg
and
js
pop
into
imulb
ja
xor
push
scas
pop
in
out
pop
bound
rorl
cmc
inc
ja
in
add
std
mov
xor
stos
sbb
mov
loop
test
jo
mov
movsb
or
cltd
jnp
xchg
push
inc
ss
out
and
add
pop
mov
xlat
jb
pop
dec
pusha
jne
push
sub
sbb
ljmp
xor
stc
imul
jne
add
pushf
pushf
jecxz
and
fnstsw
dec
add
movsl
xchg
mov
inc
add
mov
and
aad
pushf
enter
cmp
cmp
in
mov
data16
sub
in
in
mov
jbe
add
inc
hlt
lds
push
jge
or
pop
sub
mov
xchg
in
xor
cltd
sbb
sbb
test
in
add
xor
mov
or
popa
inc
cltd
jp
jb
hlt
sub
lods
ret
jp
jge
cli
pusha
cwtl
outsl
leave
cld
iret
fistps
mov
mov
enter
shlb
test
out
hlt
or
sbb
jmp
push
mov
cld
repz
jl
sbb
sbb
out
lea
mov
jp
nop
mov
nop
sub
ss
pop
and
mov
pushf
mov
out
inc
sub
movsl
int
int3
into
inc
mov
or
sub
fucom
jle
loopne
movsl
cld
cli
pop
stos
sub
icebp
out
pop
fnstcw
jmp
ret
lods
je
scas
xchg
jo
inc
jg
cwtl
xchg
popa
call
fsubr
xchg
lahf
sub
outsl
sti
or
xor
mov
mov
and
sub
adcb
jbe
inc
outsl
pop
mov
in
orl
lods
ljmp
sti
jmp
inc
outsl
mov
push
roll
movsb
jo
push
cld
insl
mov
inc
xorb
arpl
jmp
pop
mov
adc
ja
jp
pop
out
xchg
xor
in
jecxz
cmpsb
pop
or
mov
jne
add
frstor
pop
aam
ja
pop
pushf
rol
shll
inc
jl
rcll
scas
cmpsl
pop
es
fistl
jmp
cwtl
xlat
mov
add
and
pop
aam
loopne
cmp
adc
inc
adc
enter
push
pop
insb
cltd
lods
testl
loopne
jne
pop
mov
adc
push
test
insb
sub
into
jecxz
xor
sbbl
mov
in
outsl
xor
in
push
jbe
cmp
fs
or
mov
jg
mov
outsl
jae
cmp
adc
xchg
or
mov
aaa
push
mov
xchg
dec
push
dec
inc
inc
mov
test
sub
mov
std
xlat
pop
pushf
sbb
dec
ret
addr16
outsl
sbb
adc
insl
pop
stos
push
and
sbb
cmpb
icebp
mov
arpl
mov
loope
jb
ret
cmpsb
push
jae
into
xchg
push
das
loop
or
push
lret
and
pop
mov
push
outsb
sub
cmp
stos
dec
ret
sbb
and
inc
sahf
dec
inc
mov
adc
ror
cltd
jo
rcrl
dec
pop
cmc
add
xor
sbb
cmp
lcall
or
cli
pop
cmp
dec
jo
add
cwtl
sbb
or
jmp
adc
xor
jb
lahf
loope
pop
rol
cli
repnz
mov
pop
add
mov
push
pushf
pop
icebp
gs
xlat
mov
aas
add
xchg
ds
fdivrs
or
mov
rcll
out
mov
call
in
imul
push
popa
pop
jnp
mov
addb
scas
out
popa
imul
sub
dec
clc
movsb
xlat
fsubl
xchg
cwtl
pop
mov
jnp
lahf
jne
sub
push
cs
cmp
arpl
xor
jb
ror
call
or
lods
pop
sub
push
int3
ret
test
ret
repz
mov
adc
jb
xor
out
or
xor
jo
ret
or
bound
jae
xchg
rcrl
movsb
stos
xchg
mov
lods
imul
mov
sbb
lock
push
sbbl
pop
faddl
cwtl
daa
in
mov
push
stos
push
arpl
dec
movsl
hlt
push
repnz
mov
neg
sub
xchg
add
cmp
insl
nop
mov
mov
cltd
idivb
aaa
call
mov
data16
scas
repnz
jecxz
ja
xchg
into
dec
cmpsb
in
push
sbb
daa
add
jbe
mov
addr16
orb
jo
add
cmpsb
popa
mov
imul
adc
loope
lock
scas
aas
dec
mov
icebp
push
cmpsb
mov
inc
push
lret
xor
and
jb
inc
push
or
cmpsl
pop
push
push
ja
mov
orl
inc
mov
das
fdivs
jnp
sub
xchg
lret
dec
std
sub
lods
dec
js
push
das
and
mov
add
sub
fisubl
jns
cltd
mov
sub
test
test
aam
test
and
pop
xor
fmull
iret
jg
imul
and
sbb
mov
add
js
test
xchg
mov
loop
mov
js
loopne
scas
popa
and
inc
adc
lock
push
icebp
xor
ja
xchg
sub
sti
aaa
mov
push
push
sub
iret
jl
test
mov
jg
pop
fisubs
andb
jge
xor
xor
sbb
dec
adc
dec
xor
mov
sub
inc
sti
pushl
push
insb
push
jmp
push
fwait
sbb
push
mov
out
add
mov
jbe
ss
jg
aas
sbb
jp
faddl
push
daa
pop
leave
or
imul
dec
lock
push
repnz
daa
xor
clc
sbb
pop
hlt
data16
fs
xor
insb
cmp
xor
jb
xchg
jns
or
adc
xor
dec
mov
mov
and
jnp
leave
in
mov
push
add
sbb
fisubrl
and
push
pop
pop
aad
dec
rcrb
lret
sahf
pushf
sahf
aaa
mov
adc
out
mov
and
arpl
imull
cmpsb
sbb
inc
outsl
add
repz
xor
pop
sub
fdiv
and
jno
rcrb
inc
cmc
push
inc
mov
stc
and
push
jge
test
sub
arpl
jnp
inc
mov
shlb
sbb
mov
rorl
add
ffreep
xchg
arpl
ljmp
outsl
pop
mov
pop
into
loope
xchg
pushl
cmp
jle
fcmovb
push
mov
dec
sub
mov
sbb
mov
lea
mov
shlb
push
inc
fmull
jb
xchg
push
adc
mov
jnp
cli
arpl
test
pop
test
xor
pop
adc
and
imul
jmp
mov
xchg
fstl
cmp
jmp
sub
popa
mov
mov
and
adc
and
push
mov
cmp
sahf
repnz
ds
cld
mov
jp
adc
dec
adc
or
popa
cmpsb
or
jnp
stos
mov
cli
test
sahf
das
movsb
adc
lods
das
mov
or
xor
nop
mov
test
jno
mov
dec
and
ret
out
xor
xchg
ss
sub
pusha
lcall
loope
sbb
aad
lret
xchg
jnp
push
jne
test
in
in
popa
jp
shlb
scas
data16
inc
sbb
lret
int3
inc
subps
repnz
mov
dec
sbb
push
sarb
test
mov
orb
mov
cli
pushf
cmpl
int3
and
jae
xor
cwtl
aam
out
push
and
mov
push
dec
lcall
icebp
mov
dec
inc
add
and
lds
jnp
sub
jbe
jp
fcompl
xor
sbb
push
rorb
cmp
mov
aas
mov
popa
push
les
rcll
jl
adc
mov
or
es
ret
cmp
test
pop
mov
mov
sti
mov
xchg
out
insl
fisubl
negl
jb
sbb
mull
mov
mov
int3
xchg
je
mov
xor
shrl
inc
cmpsl
or
test
test
sub
pop
fisttps
test
jne
fwait
dec
sub
lret
add
inc
lock
loope
and
shl
jnp
add
xchg
ret
mov
dec
testl
loope
sub
cld
xor
mov
xor
jb
adc
adc
or
je
arpl
inc
add
and
xchg
test
movsb
mov
cld
shrl
mov
daa
or
inc
mov
nop
hlt
inc
lret
and
cld
movsl
das
icebp
mov
inc
add
dec
xchg
lea
sbb
repz
cwtl
add
fdivrl
cmpsb
cmp
dec
fistps
mov
mov
push
das
std
mov
adc
sbb
jg
mov
pusha
mov
pushf
pop
mov
mov
pushf
mov
dec
test
rclb
adc
push
ret
inc
xchg
in
mov
popf
mov
push
aad
push
inc
aad
xlat
mov
scas
outsl
and
lret
arpl
inc
xor
dec
icebp
ljmp
pop
ficoml
jmp
out
jp
popl
xor
lds
roll
add
xchg
scas
or
lret
leave
mov
pusha
ss
test
mov
jmp
sub
outsb
aas
dec
jge
fidivrs
loop
inc
popa
push
mov
lods
aad
cmp
jns
pusha
pop
inc
mov
negl
mov
in
xchg
inc
loope
jmp
icebp
mov
mov
daa
stos
fsubs
lds
inc
mov
stos
add
popa
pop
pop
ret
addr16
jle
add
mov
mov
mov
lea
or
inc
mov
rolb
inc
dec
sbb
rclb
mov
gs
cltd
dec
fisubrl
cmp
mov
sarb
jl
scas
push
xchg
jl
sub
mov
adc
xchg
dec
jle
aas
aam
sbb
das
xchg
add
aas
movsl
adc
pop
insl
aas
inc
sub
sbb
daa
int3
cmp
cmp
jle
mov
ret
icebp
add
cmp
insl
cmp
mov
or
mov
add
in
inc
lods
call
jne
jnp
aaa
xchg
and
adc
cmp
inc
test
xor
sub
lods
add
sub
sbb
arpl
cld
jo
imul
cmp
push
push
int3
loopne
inc
rcll
lods
add
mov
cmpsl
xchg
jbe
xchg
xchg
hlt
fldl
scas
dec
push
call
insl
cli
mov
mov
movsl
adc
cs
mov
mov
inc
stc
fdivrl
arpl
adc
adc
in
pusha
mov
and
ret
imul
mov
cmova
mov
sti
lret
push
sub
jb
int3
and
mov
test
adc
inc
xchg
fidivs
into
cmpsb
shr
mov
jl
lret
sbb
popa
adc
fwait
lods
je
xor
pushf
dec
jmp
aad
mov
or
sbb
xor
sahf
adc
fldcw
xor
dec
xor
xor
pusha
sbb
and
mov
or
mov
arpl
pop
jne
cltd
xchg
dec
push
cmp
add
xorl
cltd
push
imul
into
cmp
mov
cmp
xchg
mov
push
xchg
cld
mov
icebp
jecxz
sbb
repnz
xchg
std
nop
ja
cmp
das
pop
into
push
jns
xor
stos
mov
xor
mov
xor
out
mov
insb
movsl
dec
pop
xchg
icebp
mov
mov
fcompl
fldenv
stc
cltd
insl
mov
addl
jge
fwait
cmp
or
icebp
mov
and
loop
ret
or
rolb
push
les
sub
call
or
inc
push
and
jge
push
loope
gs
xorl
mov
jg
pushl
and
pop
test
pop
fistpl
pop
mov
pop
mov
loope
fdivrp
fsubr
inc
out
data16
les
xchg
push
lock
sub
xchg
scas
in
mov
icebp
test
cmpsl
mov
fwait
jns
movsl
add
or
das
sub
mov
pop
mov
cmp
call
int3
lods
outsb
sub
mov
arpl
test
xor
int3
dec
xor
pop
daa
int
cmpsl
push
ficoms
jo
add
cmpb
push
popa
pop
and
fnstsw
mov
push
lcall
nop
arpl
in
adc
popf
mov
lock
rcr
mov
jmp
mov
nop
mov
mull
and
out
cmc
in
mov
sahf
rcr
and
sub
mov
in
mov
aam
std
inc
aaa
xorl
rcrb
aas
orl
sbb
fwait
and
test
lods
je
outsb
cmp
stos
lock
int3
sbb
push
stos
mov
dec
cmp
insb
push
or
fdivrs
fldcw
in
push
inc
sub
sub
hlt
mov
test
lds
push
sahf
ret
rcll
jne
lods
and
cmpsb
stos
addb
sbb
mov
in
loopne
push
xor
dec
dec
pop
xchg
jge
rorb
push
and
inc
fsubp
inc
bound
jo
sbb
scas
xorb
outsl
imul
sbb
pop
jg
fwait
and
xor
xchg
cmp
xchg
lret
jl
adc
icebp
cmp
xor
stc
imul
sbb
movsb
or
in
xor
js
gs
xlat
fldl
fwait
xor
or
pop
or
in
or
jbe
mov
cmp
xor
inc
cmpsb
or
xor
push
lods
sub
rorb
cmpsb
aaa
xchg
jne
ds
mov
mov
loope
mov
or
sbb
stos
mov
xchg
jbe
dec
rcrb
test
mov
std
and
jo
outsl
and
push
lahf
hlt
lds
add
insl
iret
push
add
pop
push
push
pushf
in
insl
stos
push
out
sub
ss
leave
mov
rolb
mov
rcl
jbe
addr16
mov
rcrl
in
int
push
or
xor
movsb
mov
cmp
shl
movsb
pop
rorl
xor
mov
cmp
mov
ss
push
in
inc
lcall
adc
dec
jne
push
out
sahf
je
mov
cmp
cmp
sub
sub
aaa
movl
or
mov
ds
push
push
inc
push
mov
mov
pop
popf
in
mov
inc
add
scas
push
repz
push
mov
in
push
repz
test
cmp
inc
push
sub
push
insl
sbb
xor
les
in
iret
pop
push
cmp
into
rcrl
sbb
hlt
push
mov
and
pop
xor
xchg
jge
jno
gs
gs
out
mov
call
iret
daa
mov
and
xchg
hlt
xchg
push
arpl
push
in
pop
pop
adc
aad
push
pop
jno
jnp
mov
lods
test
adc
mov
adc
shrb
jecxz
xchg
inc
pop
sbb
gs
fs
imul
add
sbb
jl
rol
cmp
or
jno
out
cmc
cmpsl
scas
push
rcl
pop
jae
pop
sbb
hlt
mov
mov
jl
add
in
xchg
push
out
pop
and
inc
inc
std
cmp
or
mov
sbb
inc
xchg
out
fwait
jnp
cwtl
push
shll
cmp
xor
fs
lock
push
or
push
jo
push
outsl
pop
or
dec
out
pop
adc
or
pop
and
push
fstpl
mov
js
fs
jmp
xlat
out
cmp
movsl
lret
inc
xchg
cltd
rcll
gs
mov
cmpsl
dec
xchg
jle
cmp
sub
daa
enter
ljmp
push
loop
adc
cltd
addl
inc
gs
mov
bound
pop
outsl
das
jl
lods
push
dec
sub
pop
mov
notl
pushf
mov
icebp
outsb
sbb
mov
lds
insb
push
and
push
jl
shlb
mov
mov
sahf
jns
test
push
ljmp
xor
xor
scas
je
inc
lods
mov
ss
adc
fisttps
jge
adc
lds
dec
jbe
in
push
cltd
pop
or
push
nop
mov
into
fdivl
xchg
out
into
lahf
push
loopne
shlb
dec
outsl
xlat
js
xchg
call
or
cli
shl
sbb
sub
sbb
stos
and
cmpsb
insl
and
pop
add
lret
jne
adc
mov
loop
testb
cld
mov
xchg
out
jnp
adc
inc
lds
add
xchg
mov
movsb
cmpb
add
push
clc
adc
into
or
mov
cmp
test
hlt
adc
sahf
loope
cmp
cld
lods
sbb
dec
mov
adc
fcoml
inc
rorw
cli
aaa
scas
movsb
ss
cli
or
leave
out
into
test
push
mov
add
push
stos
pop
std
push
jecxz
mov
out
or
aam
pop
push
adc
jle
mov
or
mov
lds
sub
fidivs
inc
xchg
cs
inc
push
mov
adc
popf
push
jl
std
mov
aam
shlb
xchg
add
pop
das
adc
inc
jecxz
inc
imul
add
popa
sysexit
sub
rorb
inc
pop
daa
js
mov
ljmp
mov
cli
insb
out
leave
cs
and
sbb
pusha
loop
rep
out
test
arpl
andb
sar
mov
loopne
cmp
mov
add
es
jne
mov
lahf
or
cmpsb
xor
and
jle
ja
repz
shlb
mov
mov
pop
repnz
sub
pop
mov
xor
push
hlt
jg
mov
cmp
mov
or
and
ret
ja
stos
dec
push
popf
xlat
lret
sbb
jge
xorb
xor
out
inc
pop
mov
dec
test
into
mov
dec
and
lods
mov
inc
sarb
lea
xchg
jne
inc
sbb
fldt
jo
xchg
fwait
rol
cmp
cmp
shll
pop
mov
movsb
mov
cwtl
js
in
push
jmp
or
insb
jno
test
adc
aam
lods
adcl
cmp
cmp
mov
sub
push
add
jmp
adc
xor
insb
mov
inc
rcrl
adc
es
jp
mov
jl
fcomps
pop
int
xchg
call
or
lea
leave
mov
mov
in
ds
add
inc
pop
xchg
lods
repnz
pop
fdivrl
imul
adc
add
add
dec
fildl
jno
outsl
scas
and
cmp
mov
les
inc
add
out
fidivrs
ret
movsl
repz
cmp
sub
data16
ficoms
pop
lret
mov
filds
cltd
mov
cmpsl
clc
jne
mov
push
lret
adc
dec
sub
cli
dec
lret
jae
fisttpll
dec
aas
dec
mov
xor
and
test
jge
cwtl
aaa
cltd
sub
rclb
jge
push
cmpb
xchg
btr
ror
cmp
int3
add
push
das
push
outsl
and
ret
and
add
enter
outsb
movsb
or
pop
pop
jecxz
les
aam
in
ret
cs
fcmovnbe
cmovo
in
test
in
ds
lods
nop
cmp
cmpsl
movsl
and
xchg
shll
popf
data16
pop
ljmp
mov
pop
lea
inc
push
gs
mov
xchg
pop
cmp
pop
xor
mov
ret
push
mov
test
in
mov
outsb
imull
faddl
movsb
ja
mov
hlt
enter
and
mov
jmp
jne
cltd
add
sub
pop
fcom
xor
hlt
and
lret
xchg
dec
in
push
cmp
or
rcll
int
xchg
aas
ss
mov
outsl
jno
mov
out
popf
test
dec
lahf
xor
imul
dec
jge
sub
mov
xchg
out
bound
repnz
add
in
mov
push
jno
lcall
xchg
ja
jnp
push
or
ret
push
fdivs
mov
fdiv
xabort
loop
xchg
repz
xchg
imul
sarl
fnstsw
lods
xor
cmp
pop
xchg
mov
mov
dec
sub
adc
rorb
in
xchg
lret
or
add
pop
inc
lcall
mov
mov
mov
and
cmp
inc
scas
xor
mov
cmp
sbb
lds
xchg
pushf
push
ja
addl
cmc
pop
sbb
push
adc
bound
ja
das
out
loop
mov
push
repnz
pop
shl
repnz
add
std
mov
add
out
dec
shll
out
xlat
incl
addr16
ret
cld
or
pushf
in
mov
pop
dec
fldt
jmp
cmp
xor
and
rclb
sbb
imul
adc
jle
xchg
push
jne
and
mov
pop
ret
mov
cmp
test
jge
notl
adc
fcmovb
or
outsb
or
mov
push
cmpsl
jecxz
mov
mov
xlat
adc
cmp
jnp
in
es
push
and
out
push
mov
dec
mov
jmp
xlat
stc
and
pop
daa
dec
fistl
loope
xor
jle
sbb
add
lods
mov
mov
dec
iret
push
in
mov
lea
and
iret
cmovbe
push
call
enter
jmp
pop
sub
xchg
in
repnz
mov
add
mov
jmp
addr16
inc
inc
or
mov
lds
ja
jnp
mov
call
mov
loop
mov
mov
jp
dec
pop
lret
pop
cmp
dec
hlt
push
ljmp
enter
pop
jmp
jge
and
add
push
movsl
daa
push
and
fsub
xchg
push
dec
and
sbbl
pop
test
call
xchg
sbb
mov
xchg
mov
adc
add
or
out
les
cmp
jne
loop
sub
xchg
imul
popf
leave
in
sbb
inc
cmp
jnp
in
mov
lret
dec
dec
out
sub
xlat
aaa
fidivrs
jg
mov
into
sbb
fdivrs
rorl
and
lods
pusha
cmovs
push
sub
subb
and
imul
inc
ret
mov
into
mov
aaa
scas
and
add
popa
lea
dec
cmp
ret
mov
push
xor
and
shll
movsb
cli
and
inc
out
and
clts
push
jb
lret
outsb
xor
lcall
data16
gs
ja
fstpl
inc
inc
and
in
sbb
shll
xor
adc
insl
cmpsb
dec
adc
dec
cmpsb
jbe
fnstcw
jle,pn
lret
ds
cs
popa
adc
or
lahf
stos
je
clc
mov
scas
xor
dec
pop
xadd
loope
mov
xchg
mov
js
scas
jg
rdpmc
aad
aad
jbe
fisubrs
or
in
scas
addr16
push
fistpll
sub
ja
xorb
insl
bound
gs
and
mov
cmp
cmp
lea
add
insb
mulb
outsl
stos
mov
clc
mov
loopne
cli
mov
xor
push
loop
sbb
fcomps
cmp
push
loop
sub
jbe
fstpt
sbb
mov
inc
jns
push
jp
into
jge
ljmp
in
add
adc
fs
popa
inc
pop
lcall
pop
lret
mov
mov
and
sahf
fs
cltd
mov
mov
mov
mov
sbb
arpl
add
dec
cmpsl
arpl
loop
popf
jmp
pusha
mov
divb
pop
adc
popa
or
sub
mov
ret
sbb
bound
sti
inc
clc
and
mov
ret
or
mov
lret
and
cmc
xchg
in
fwait
or
mov
jge
xchg
scas
or
pop
jae
cmp
add
loope
inc
inc
fsts
or
xor
dec
testb
ljmp
dec
subl
adc
bound
mov
adc
sub
sbb
int
pop
add
lods
cmc
gs
lret
test
dec
or
int
cwtl
icebp
xor
mov
sbb
xor
mov
xor
test
pop
mov
dec
mov
push
or
fwait
pop
mov
push
imulb
dec
fimuls
adc
cmp
adc
pop
pop
insb
or
mov
unpckhps
xchg
sub
rolb
xchg
icebp
xchg
rcr
ds
enter
ret
push
cwtl
jle
pop
adc
mov
push
pop
sub
nop
or
out
xchg
and
mov
push
and
mov
fidivrl
push
test
test
pop
lcall
in
test
xchg
call
push
hlt
out
lods
inc
lcall
ss
idiv
cli
xor
daa
mov
sbbb
xchg
aad
cwtl
sahf
push
std
sahf
lret
mul
and
test
or
mov
push
pop
jl
xchg
xor
out
data16
add
fistpll
flds
adc
inc
rcrl
outsl
popa
mov
xchg
mov
test
push
push
lock
js
push
xchg
mov
test
jbe
fs
sahf
adc
dec
xchg
xor
adc
popf
loope
mov
xchg
jne
sbb
fcoms
cmp
add
out
xchg
nop
rorb
fidivrl
jl
sub
sub
inc
push
push
sub
in
mov
pop
ret
popf
inc
xchg
lahf
pop
ds
movl
mov
sub
jg
push
ret
pusha
inc
xor
in
cmp
jb
and
mov
movsb
dec
lahf
fcomp
fcompl
sub
and
jp
mov
pop
idivl
out
ret
dec
hlt
js
xorb
enter
and
and
add
mov
sbb
insb
fnsave
mov
into
scas
mov
ljmp
mov
sbb
adc
insl
sahf
lock
popa
xor
cmc
cmp
pop
mov
in
cmp
push
test
mov
add
sti
add
cld
icebp
pushf
add
in
insb
mov
call
fdivr
daa
pop
mov
sub
stc
pop
test
xor
fdivrp
pusha
in
imul
mov
xchg
or
xchg
lahf
cs
sbbb
lcall
cli
push
mov
and
xchg
push
and
xor
out
add
std
mov
fists
fistl
inc
push
sbb
clc
in
sub
push
sub
add
enter
xor
push
fwait
js
out
dec
ret
fs
shl
cltd
cmp
icebp
daa
inc
pop
mov
cmp
gs
fistl
lock
loope
xchg
cld
ljmp
outsl
mov
or
mov
lods
mov
cmp
xor
push
or
push
xlat
lret
pop
mov
aam
adc
sbb
adc
icebp
jnp
mov
jne
aas
movsl
gs
test
pop
mov
cmp
sub
fsub
cmpsb
loopne
movsb
rolb
jecxz
cld
cld
mov
call
aad
in
jge
mov
push
jo
lods
xor
adcb
js
add
pop
cmp
testb
lds
sub
inc
cmp
pop
orl
xorl
mov
ljmp
push
fst
or
jne
xorb
mov
lock
nop
outsl
cli
gs
jo
jge
pop
pop
push
adc
push
fildl
mov
fisubrl
and
enter
dec
push
mov
rcr
xchg
shl
enter
mov
mov
aaa
fsubr
xchg
addb
aam
repz
sbb
test
xchg
cmp
push
loop
repz
mov
and
xchg
pop
cmc
repz
add
lret
shrb
adc
leave
mov
pop
leave
pushf
les
sti
inc
xchg
int3
sbb
xor
mov
sahf
push
hlt
mov
dec
push
and
out
test
inc
mov
pop
mov
add
push
jmp
xlat
fcmove
pop
loope
scas
mov
pop
fucom
mov
clc
lcall
pop
xchg
sub
xchg
jl
cld
xchg
pushf
lcall
loopne
loopne
repnz
or
push
mov
mov
cmp
loop
stc
out
sahf
xchg
sub
inc
imul
ret
int3
cmp
mov
add
jno
mov
xchg
fldt
sbb
xor
xor
arpl
mov
mov
lock
insl
mov
and
or
outsl
dec
pop
and
shlb
xchg
xchg
xor
insb
fwait
or
xchg
test
push
adc
xor
arpl
jae
mov
jge
sbb
sbb
addl
loope
mov
jnp
pop
data16
repz
scas
int3
jl
sbb
pusha
stos
inc
jg
test
push
cmp
inc
repnz
or
shrl
in
je
loop
cmpsl
mov
sbb
ret
inc
test
or
jno
rcrl
loope
mov
mov
jg
rcll
cmp
scas
xor
mov
sbb
ret
addr16
pop
hlt
lret
pop
loope
and
movsl
or
adc
ljmp
cmp
jo
callw
out
addb
fisubl
scas
in
fstpt
data16
insl
mov
lret
sub
call
xchg
leave
cld
aam
cmc
pusha
hlt
insl
andb
mov
outsl
push
inc
mov
faddl
ds
pop
leave
popa
cmp
aas
rcrl
sbb
and
adc
push
cli
add
push
mov
jecxz
push
sbb
cmp
subb
fistl
mov
movsl
negl
lahf
shrl
scas
jg
sbb
mov
xchg
rcr
push
sub
pop
mov
scas
ss
js
or
inc
inc
xor
and
lds
in
jecxz
sbb
call
imul
sbb
movsb
test
aad
testb
cmp
jg
sbb
pop
cmp
pop
pop
in
test
pop
mov
and
xchg
mov
dec
inc
loope
imul
jnp
iret
lcall
cli
pop
push
mov
mov
xchg
pop
fs
sub
sarl
icebp
or
mov
xor
jnp
fiadds
aad
ljmp
cmpsb
call
mov
pop
add
sti
jl
andl
push
pop
mov
xor
mov
mov
int3
pushf
hlt
cmp
inc
lcall
xor
dec
dec
or
hlt
xchg
test
jmp
out
add
rorl
sbb
dec
leave
adc
std
repnz
pushf
inc
mov
pushf
push
in
hlt
aad
inc
icebp
test
xchg
sub
cmp
jmp
mov
out
jb
clc
outsb
mov
lods
repz
jp
gs
xor
push
or
pop
loope
sahf
xor
cmp
stos
fsts
mov
inc
test
into
pop
clc
movsb
lret
add
leave
xlat
add
dec
sahf
andl
aad
cmpsb
fidivrs
push
adc
pusha
test
jmp
mov
jmp
cli
mov
std
push
mov
mov
hlt
push
push
push
dec
pop
daa
add
push
cwtl
pop
repnz
jmp
scas
int
mov
adc
test
out
dec
iret
insl
test
subl
jp
push
xchg
cld
sbb
fwait
xor
jge
dec
jns
adc
push
movsb
jne
sub
aaa
stc
xor
cli
leave
nop
mov
arpl
leave
jecxz
and
cmp
nop
or
sbb
push
add
add
or
and
add
or
fcmovnu
lret
test
fwait
mov
push
mov
jbe
lret
sub
pusha
inc
mov
mov
rolw
sti
cmpsl
fiadds
out
add
add
or
sarb
jbe
sub
and
rcrb
xchg
add
lds
mov
dec
das
ljmp
sbb
dec
nop
jecxz
mov
dec
jb
cld
mov
cmp
pusha
js
sahf
lcall
shll
out
and
cli
xchg
sub
push
mov
decl
mov
inc
into
pop
test
fcoml
cld
mov
add
mov
fwait
push
in
xchg
jp
aad
insl
sub
cmp
jo
dec
pop
jl
rorb
dec
and
jb
lods
xor
sarb
and
adc
xchg
roll
mov
jp
pop
push
inc
clc
stos
xor
dec
pop
jbe
faddl
adc
push
push
cmp
sahf
xor
arpl
add
jmp
js
aam
mov
in
push
outsl
mov
cmp
jnp
and
movsl
in
ljmp
xchg
jge
sbb
push
in
sti
and
xchg
jecxz
sub
sub
cmp
shll
jno
lds
je
jmp
or
outsb
sbb
adc
sub
testb
inc
fcoml
icebp
inc
push
int
mov
insl
inc
dec
xor
sbb
enter
inc
in
xchg
addr16
adc
in
movsb
and
hlt
sub
mov
sti
lahf
push
pop
in
sub
push
inc
sbb
mov
dec
and
jns
fbstp
mov
inc
dec
sahf
jecxz
imul
cmp
cld
mov
mov
xor
popa
push
pop
dec
sub
fwait
jl
xchg
scas
fnstsw
das
cmpsl
lock
add
push
test
xor
push
clc
push
pop
fucomp
fstpl
repz
xchg
repnz
test
pop
mov
sub
jmp
jne
stos
pop
or
call
mov
ret
lret
mov
cltd
fildl
or
mov
nop
gs
notb
test
xchg
loopne
jns
jno
sub
push
loopne
in
frstor
stos
mov
mov
aam
pop
push
std
outsl
xchg
lea
into
and
push
mov
aaa
mov
fists
jge
loop
fdiv
clc
push
jmp
adc
insb
lds
jno
lret
out
xchg
mov
push
lcall
mov
jmp
cli
rcrl
mov
leave
repnz
and
data16
lods
dec
pop
push
mov
stc
push
dec
roll
shr
jb
movsb
pop
in
push
jno
rcll
adc
push
and
jmp
lock
shll
lods
mov
xor
outsl
jns
xchg
adc
xor
mov
pop
cmp
fcmovbe
inc
mov
test
sbb
testl
data16
xchg
xchg
push
and
addb
scas
mov
cs
cmpsb
out
mov
lds
xor
inc
test
dec
adc
lret
pop
outsb
lret
lock
sbb
lret
mov
jle
fadds
adc
ljmp
lods
pusha
lods
mov
jmp
add
pop
dec
popf
and
stos
add
mov
jno
mov
push
pxor
testb
cmp
icebp
jns
sub
dec
or
loopne
mov
movsl
fmull
mov
dec
fistps
out
push
cmp
aad
js
pop
les
cltd
shll
les
mov
mov
insb
fwait
loope
out
push
jo
mov
xchg
cwtl
pop
cmp
cmp
dec
stc
out
scas
sarl
jmp
jns
sub
inc
sub
sti
pop
and
test
pop
push
std
inc
test
jae
sarl
repnz
xchg
dec
mov
insl
addb
lods
les
push
pop
jnp
jecxz
sub
cmp
idiv
repz
sbb
scas
push
lods
add
fimuls
push
mov
aaa
pop
mov
mov
in
das
xchg
xchg
fcoms
push
cmpsl
in
sub
arpl
lahf
fldt
xorl
mov
ret
out
sahf
scas
jne
lahf
testl
pop
adc
scas
mov
addr16
push
imul
or
mov
clc
or
cmpsb
pop
pop
sbb
lds
push
inc
mov
out
inc
xor
and
outsl
dec
sub
mov
cmp
adc
push
insb
sti
shlb
pop
icebp
mov
push
js
adc
les
hlt
repz
sub
pop
arpl
fcmovne
push
loope
stc
cmc
pop
mov
repz
mov
sbb
dec
je
iret
mov
xchg
inc
test
in
repz
xchg
fdivrs
loop
adc
rcll
sub
mov
cmp
mov
iret
test
add
pop
filds
fwait
mov
pop
mov
jle
aas
inc
dec
jmp
enter
int3
push
aam
mov
es
sbb
idivl
bound
push
push
mov
add
jae
pop
sarl
pop
sub
and
cld
lret
jmp
and
add
fxch
xor
orl
inc
lea
sub
and
cmp
lret
jmp
fs
flds
in
decb
test
pushf
aas
mov
test
pop
add
shrl
jo
addr16
test
lret
mov
outsl
imul
loop
sbb
movsb
popw
xor
iret
adc
dec
xor
push
mov
xor
aam
push
leave
sahf
pushf
in
ja
or
ja
fs
mov
mov
mov
or
jne
sbb
sub
push
lahf
movsl
in
jp
gs
testb
shlb
imul
dec
insb
pop
mov
mov
out
mov
loop
mov
dec
into
call
cmp
ja
inc
or
mov
cmpsb
xchg
mov
push
push
mov
cs
dec
pop
je
xchg
ret
pop
push
and
dec
movsb
call
scas
push
add
xchg
data16
jne
push
cmpsb
push
xchg
enter
dec
shlb
or
xchg
push
xor
jge
inc
lret
cmc
mov
movsb
mov
dec
je
xchg
mov
ljmp
sub
push
shll
push
or
push
mov
ret
ficoml
jne
mov
cmpsb
scas
bound
addr16
les
xor
loope
sub
cltd
adc
and
mov
loopne
mov
stos
adc
xor
and
jno
xchg
mov
lds
cmp
out
xor
ja
std
cmp
pop
js
sar
test
jno
or
sub
cmp
stos
add
testb
rcrl
pop
xchg
adc
pop
incb
mov
pop
push
mov
xchg
popf
push
sbb
lcall
xchg
adc
push
cmp
mov
lea
cmc
aaa
adc
ljmp
fs
sti
mov
sub
adc
jge
les
inc
ret
jge
push
pop
inc
mov
fdivl
cmp
nop
cltd
roll
out
and
mov
loope
int
cwtl
add
iret
stos
push
inc
inc
mov
sahf
mov
stos
ss
loop
cmpsb
sub
scas
repnz
xor
and
notl
pop
xchg
or
mov
xor
repnz
repnz
sbb
insb
lea
or
or
scas
xchg
leave
mov
cwtl
bound
xchg
jne
or
inc
mov
add
paddsb
inc
push
out
bound
add
es
jmp
xor
sbb
cmpsb
mov
mov
mov
icebp
shr
adc
imull
push
inc
adc
repz
jno
mov
xlat
sub
push
clc
xor
icebp
rcl
xorb
nop
dec
xchg
xchg
xchg
sahf
cmp
adc
gs
dec
std
sbb
jo
jle
mov
ror
jl
pmulhuw
add
mov
les
cmpsl
inc
pop
push
push
lea
dec
lods
repz
dec
xor
ja
mov
add
insl
jg
nop
mov
push
enter
gs
xchg
push
inc
cwtl
and
movsl
add
sub
movsb
es
sbb
cmpsl
std
js
cmc
ja
mov
mov
test
lahf
push
scas
negl
cmpsl
aaa
je
lret
in
sbb
lahf
inc
dec
push
xchg
aaa
jb
add
mov
add
je
jne
adc
arpl
xor
pop
xor
and
cmp
cmpxchg
lock
arpl
out
lods
mov
cltd
xchg
mov
iret
stc
xchg
dec
arpl
or
lods
movaps
cli
bound
shll
outsb
test
mov
inc
push
aaa
jae
xor
add
pop
dec
mov
int3
outsb
xchg
inc
dec
push
mov
sub
test
pop
add
add
adc
mov
cmp
subb
and
popa
daa
push
pushf
sub
daa
lods
out
sub
mov
ja
xlat
dec
xlat
loope
cmpsl
mov
int
mov
cld
mov
cmp
shlb
out
or
fldenv
rorb
xchg
or
negb
repz
mov
loopne
mov
dec
xchg
rolb
pop
out
inc
lret
nop
imul
push
and
jge
leave
imul
popf
pop
push
mov
jns
jg
push
mov
pop
out
rorb
enter
lods
or
pop
mov
icebp
std
or
xchg
sub
ret
into
outsl
pop
and
mov
sbb
mov
cmp
push
or
pop
push
ret
loopne
mov
imul
mov
ficoms
pusha
call
mov
mov
andb
jns
dec
jno
inc
push
lds
sahf
loopne
inc
movsl
cmp
push
cs
add
or
nop
ja
ficomps
test
out
lock
sti
push
aaa
loope
imul
dec
add
or
inc
add
rorl
test
push
jmp
and
jmp
stc
mov
mov
xor
xlat
mov
mov
mov
mov
mov
mov
push
stos
jne
in
mov
jmp
and
imul
lret
mov
arpl
ficomps
pusha
xor
mov
jp
xchg
xchg
outsb
test
lcall
fcoms
scas
cmp
shlb
fiadds
and
sub
out
jge
lods
push
adc
cmp
lods
imul
cmpsl
bound
out
ror
orl
xchg
repnz
lds
inc
add
fildll
add
adc
addr16
mov
pop
jmp
lods
pop
sub
call
mov
cmc
je
sub
and
adc
and
mov
or
xlat
jecxz
je
add
xor
in
aad
xor
ja
lahf
aaa
xor
dec
mov
mov
pop
loop
sub
stc
ss
or
ja
lret
add
dec
outsb
jmp
nop
mov
inc
mov
je
mov
add
imul
cmp
jbe
jmp
cmp
add
orb
or
fmull
xchg
movsb
ficoml
lcall
jl
pop
loope
out
sbb
cmp
xor
out
lock
es
subl
fs
mov
and
cmpsb
push
movsl
mov
mov
adc
call
sub
mov
dec
add
cld
arpl
adc
test
xlat
dec
jne
add
sti
hlt
fidivl
lea
sub
mov
xor
sbb
divl
and
and
xchg
in
shl
je
adc
inc
adc
sbb
or
add
rclb
imul
pop
push
iret
nop
stc
repnz
xchg
stos
or
or
pop
fs
adc
int3
xchg
mov
pop
push
pop
inc
xor
pushf
dec
jno
push
sbb
movsb
out
je
or
sub
cmp
jp
add
pop
cltd
lods
cwtl
adc
sbb
push
jp
dec
jo
fbstp
sbbl
sahf
push
cmp
jecxz
pusha
test
sub
cs
imul
mov
in
and
fmull
test
sub
xor
aad
inc
sub
hlt
stos
push
enter
leave
cmpsl
insb
cs
fstpl
dec
jge
xorl
xor
fisubrs
inc
push
adc
dec
jge
jns
outsl
mov
mov
mov
cmp
cmp
dec
pop
cltd
fstpl
sbb
and
jle
stos
push
mov
ds
xchg
out
mov
ss
jnp
jns
rcr
sub
sbb
mov
movb
sbb
cmp
sbb
dec
cld
inc
fdivl
add
outsl
jne
dec
inc
xchg
mov
lock
mov
fidivrl
mov
jle
fwait
insb
sbb
loope
sbb
push
sti
add
sub
ret
loop
pushf
jl
mov
aas
cmp
rol
sbb
mov
sbb
jnp
adc
cmpsl
data16
movsb
test
shl
gs
jg
push
sbb
mov
push
xchg
inc
or
push
out
in
sub
arpl
pop
jecxz
jecxz
int3
ja
cli
cmp
clc
adc
inc
jnp
scas
shll
xchg
adc
mov
leave
or
or
push
scas
pop
sbb
dec
sub
mov
jno
addr16
mov
bndstx
test
pop
addl
xchg
dec
and
sbb
and
dec
pop
out
push
jl
jge
inc
sbb
adc
dec
aam
data16
pop
ja
mov
pop
mov
jne
cltd
enter
les
fidivs
pop
ret
sub
dec
enter
call
dec
or
sub
loopw
push
inc
jne
outsl
mov
in
test
jne
cmp
je
int3
or
pop
mov
inc
dec
add
into
jne
in
adc
or
push
mov
inc
movsb
js
cltd
push
mov
lret
dec
xor
fwait
iret
xorl
sbb
in
in
cmpsl
aas
xor
cmpsb
sub
adc
outsb
inc
inc
add
nop
mov
out
ret
sbb
imul
jae
dec
adc
or
sbb
ret
cmpsl
cmpsl
jne
sbb
sbbb
outsb
mov
mov
into
pop
sbb
add
adc
jmp
sub
xor
call
lock
pop
imul
mov
xchg
aas
add
pop
ja
dec
pusha
ds
or
mov
jno
imul
push
addr16
cmp
lret
push
gs
dec
and
push
pushf
jae
test
ja
add
xchg
mov
shrb
popa
popa
out
lea
dec
cmp
push
dec
movb
pop
mov
adc
js
add
pusha
jbe
mov
movsb
xchg
arpl
xor
and
stc
popf
mov
push
jmp
push
mov
orb
cmpb
push
mov
mov
fisttps
mov
loopne
sahf
dec
loope
ret
repz
cmp
std
lahf
jle
pop
aaa
lret
pop
pop
add
call
xchg
pop
dec
adc
push
mov
loope
insl
mov
lcall
cmc
enter
adc
mov
jg
sbb
add
mov
insb
mov
leave
das
shll
arpl
fdivs
xchg
and
sbb
or
aad
jg
dec
xchg
push
dec
xchg
orl
sbb
xorl
mov
dec
dec
imul
cmp
and
sub
jnp
lret
sub
imul
rcll
sbb
add
stos
xor
push
push
dec
cmp
in
fcmove
cmp
xchg
mov
jle
cmpsb
mov
cli
outsl
adc
outsb
add
sahf
in
jl
bound
adc
aas
movb
mov
and
mov
xor
jo
fwait
xor
mov
pop
cmpb
pop
lret
add
cld
cmp
fnstcw
add
daa
cmp
imul
clc
cli
add
jb
jmp
sbb
loopne
adc
lods
jle
arpl
gs
mov
pop
out
in
ljmp
loop
mov
aam
fidivrl
mov
movzbl
cs
push
das
insl
loop
mov
pop
lods
or
fst
sbb
pop
lods
fwait
mov
dec
sbb
push
inc
lods
cmp
stos
outsb
inc
push
cmp
sub
fildl
sarl
inc
negb
outsl
push
imul
pop
sbb
pop
outsb
pop
orl
cmp
mov
dec
lcall
pop
arpl
hlt
pop
push
les
pusha
dec
outsl
xor
ret
or
lea
test
cmc
addr16
aam
xchg
movsl
sbb
mov
movsb
mov
push
in
inc
and
mov
pop
mov
and
mov
sbbb
jno
pop
inc
pusha
lea
mov
dec
outsl
es
mov
ja
lods
dec
jno
or
movsl
cld
std
dec
jmp
jp
rclb
jne
cmp
pop
xor
out
sbb
popf
pop
lock
mov
xchg
add
arpl
sti
out
adc
adc
div
gs
mov
sbb
jmp
cmp
jmp
and
jp
scas
pusha
push
xor
jns
cmp
mov
lea
lret
mov
cmp
std
lods
xlat
inc
es
mov
scas
cltd
ds
xchg
push
lahf
and
dec
repnz
dec
dec
lock
pushf
imul
fs
and
in
cmc
push
add
and
sbb
subb
mov
pop
inc
cmp
or
pop
icebp
nop
dec
pop
pop
mov
arpl
jnp
jecxz
loope
mov
insl
aam
andl
data16
lods
pop
mov
call
push
or
outsl
nop
jmp
scas
inc
je
dec
shlb
iret
call
push
mov
nop
inc
arpl
in
inc
ret
test
jno
push
xchg
mov
add
jne
out
stos
mov
les
adc
mov
sub
or
sbb
xchg
aam
cmp
mov
dec
mov
xor
dec
icebp
lcall
out
jae
gs
cwtl
out
dec
subl
lods
out
mov
fsubrp
sub
or
test
mov
ret
cmp
jae
arpl
jmp
add
and
ljmp
pop
xchg
shll
inc
mov
in
in
mov
das
mov
mov
mov
sahf
aam
push
cmc
orl
mov
xchg
insb
sbb
add
or
dec
sbb
decb
sti
loopne
adcl
or
or
jmp
add
dec
mov
dec
pop
cli
or
hlt
fsubs
lret
loope
pop
movsb
or
ret
stos
imul
mov
inc
inc
and
ret
test
and
adc
adc
pop
mov
inc
in
cmp
pop
push
movsb
fs
cli
lcall
negb
arpl
outsb
cmp
xchg
bound
push
or
hlt
arpl
in
cmp
arpl
jl
mov
aad
push
sbb
jns
sub
jno
imul
jl
xchg
jnp
add
repnz
lods
ffreep
mov
xor
outsl
pop
adc
mov
scas
outsl
push
mov
add
ficomps
sub
mov
scas
xlat
sbb
ljmp
push
add
jge
mov
cmp
addr16
ja
loopne
fidivrs
or
in
or
adc
push
out
adc
loop
jp
jg
pop
push
into
and
push
inc
fbstp
movsl
into
adc
rorl
push
or
xor
cmp
dec
pop
jge
jo
data16
cli
das
sbb
aaa
lea
or
and
xchg
int3
xor
mov
enter
jae
xchg
shrb
popf
cmp
pusha
popf
loop
scas
mov
xchg
fisubrl
inc
or
cmpsb
rclb
cmc
mov
or
push
divb
dec
sub
sub
push
mov
add
add
push
btr
dec
sub
adc
xor
jo
push
jb
push
or
call
dec
and
sbb
aam
test
call
mov
stos
sarb
cmp
lahf
int
adc
lea
jp
inc
sub
mov
insb
aaa
jp
cmp
lret
pop
mov
fsubs
xor
sub
fnstenv
cmp
movsb
push
aaa
sbb
les
mov
sbb
lods
adc
xor
out
cmpsb
pop
dec
mov
lret
jl
jae
addr16
xlat
pop
pusha
in
aas
and
sbb
pop
push
and
mov
loopne
pop
dec
add
or
fdivr
jno
push
or
xchg
es
xlat
jmp
int3
lcall
out
mov
inc
push
movsl
fs
mov
repz
inc
movsl
or
into
jae
ret
add
jle
pop
lds
std
mov
mov
dec
out
push
mov
cli
loop
dec
in
push
stos
rolb
aaa
push
es
out
insl
add
mov
mov
cmpsl
or
sbb
jns
sub
ficoml
lcall
pop
push
outsb
mov
ds
aas
lds
pop
push
jp
mov
jl
jle
or
cs
cmp
mov
cmp
stc
xlat
movsb
and
dec
push
jge
or
xor
imul
cmc
xlat
add
mov
outsb
leave
mov
arpl
fcmovne
dec
add
mov
popf
mov
pop
inc
inc
inc
mov
inc
mov
shlb
xor
data16
mov
outsl
shrl
gs
lcall
xor
mov
and
in
mov
mov
dec
ljmp
cli
dec
pop
out
jl
jge
pop
jo
mov
add
fsubs
mov
mulb
adc
pop
mov
mov
pop
ljmp
gs
push
rcrb
clc
fstp
lahf
xchg
mov
jne
loopne
insb
jl
or
out
mov
enter
aad
mov
lahf
fbld
test
inc
fwait
lea
jbe
pop
roll
rorl
sahf
sahf
dec
or
xor
cmp
mov
inc
mov
std
daa
and
jae
lods
leave
in
mov
inc
jae
lahf
jmp
shrl
xlat
sub
addr16
inc
push
stos
cmc
cmp
xor
push
mov
mov
jae
push
lods
scas
bound
aad
push
jne
sub
aas
jmp
xchg
sbb
xor
pop
pop
add
sub
cmp
sub
std
insl
or
ret
inc
inc
dec
ja
es
add
int
push
mov
hlt
jge
out
push
in
mov
xchg
jle
loop
mov
ret
push
jb
xor
dec
cmp
test
fcoms
imul
shrb
popa
lods
in
pop
int3
les
test
movsb
fs
pop
loopne
ja
sub
and
and
repz
or
mov
jg
push
add
cld
pop
lahf
je
xor
sbb
shrl
dec
sarl
notb
loopne
lea
pop
sbb
andb
mov
jnp
ss
cmpb
sub
mov
pop
sahf
push
lahf
lods
jmp
or
pop
pop
stos
mov
loop
and
sti
and
mov
inc
icebp
jecxz
pop
push
enter
adc
sahf
sahf
mov
scas
int3
jp
pop
mov
arpl
sub
adc
enter
loopne
gs
je
lahf
xor
xor
dec
inc
stc
mov
push
movsl
adc
jnp
inc
sar
mov
push
and
pop
mov
pop
daa
push
popf
fnstsw
sbb
mov
push
sti
out
out
mov
pop
push
movsl
mov
and
pop
outsb
xchg
pushf
jl
movsb
mov
loop
gs
stos
mov
lods
adc
sub
sahf
adc
mov
push
aad
inc
clc
ret
xchg
adc
or
xchg
out
pop
testb
cs
das
rclb
daa
rol
and
xchg
sbb
rol
movb
fldl
mov
dec
lcall
mov
aam
data16
cld
jae
mov
int
testl
or
pop
je
push
aas
pop
cmp
fcmovb
stc
lock
push
push
xlat
fists
sahf
dec
xchg
push
mov
nop
inc
daa
cltd
dec
pop
daa
mov
push
scas
add
xchg
xor
shll
outsb
mov
push
inc
cmp
scas
aas
in
ficomps
inc
mov
test
dec
mov
xor
dec
or
push
mov
jmp
or
and
test
aas
adc
lahf
mov
add
stc
push
mov
or
cmp
push
in
clc
jns
sbb
sahf
and
in
sub
jne
popa
andl
fisubs
pop
addr16
bound
add
push
dec
fsubrl
xor
ss
rclb
daa
jecxz
mov
dec
push
mov
scas
into
pop
or
jecxz
xor
sti
xchg
add
push
scas
cltd
pop
ljmp
les
arpl
fmull
call
jecxz
std
leave
in
fcmovb
adc
enter
sahf
dec
out
mov
icebp
jb
dec
rcrb
jne
sub
mov
adc
xorb
sbb
stos
inc
cmovnp
xor
sbb
je
xchg
mov
fsts
nop
add
xchg
loop
pop
push
cmp
stos
ss
mov
in
xchg
jb
pop
pushf
icebp
clc
jecxz
adc
jae
adc
mov
leave
xorl
repnz
ret
pushf
pop
cmpsl
scas
arpl
jae
mov
xchg
aaa
jb
cmpsl
rcrl
xchg
mov
adc
sbb
mov
inc
jmp
dec
fisubrs
mov
push
sub
stc
arpl
imul
clc
jo
xchg
sub
int
or
sub
xchg
mov
js
lcall
sub
bound
push
mov
push
cmc
negb
repz
movsb
test
adc
pop
adc
shll
mov
sahf
ret
out
shr
mov
jecxz
roll
jmp
xor
dec
outsb
adc
in
lahf
jge
add
sti
dec
sbb
mov
add
nopl
and
jno
pop
bound
int
jmp
sqrtps
movsl
pop
or
lock
xchg
and
push
push
fstl
xchg
cmpsl
movsl
mov
sahf
mov
adc
cmp
testb
sbb
dec
and
in
mov
mov
xchg
xor
inc
ja
pop
lahf
dec
pop
cmp
repnz
or
aas
test
testb
testl
fistpll
pop
push
sub
add
mov
xor
ret
add
push
sub
pusha
hlt
and
lds
sub
cmp
add
mov
pusha
stos
jns
mov
aas
imul
dec
lret
xor
and
out
arpl
add
cli
mov
cpuid
orb
xchg
jns
out
popf
cmpsl
push
xchg
adc
or
popa
pop
out
jae
add
pop
roll
xor
pop
bound
pop
and
outsb
in
pop
xchg
es
loope
cmovg
ja
mov
inc
dec
pop
lock
sub
mov
jnp
add
imul
inc
cmpsl
mov
lds
cli
insb
cltd
xor
mov
lahf
cmp
mov
movb
bound
aam
arpl
int
call
inc
insb
stos
inc
dec
hlt
test
fisttpll
mov
sub
fcos
leave
push
push
repnz
mov
lret
das
mov
rcll
inc
mov
das
int3
sub
xchg
inc
pop
cmp
divps
pushf
sbb
adc
scas
outsl
or
shlb
mov
cs
jo
out
and
push
out
mov
pop
sub
sti
fcomps
pop
out
sub
pop
jbe,pt
push
mov
stos
movsl
out
lret
aas
cmpb
push
mov
in
int3
push
xchg
mov
push
idiv
xchg
sahf
mov
call
lock
dec
imul
add
add
sbb
mov
shll
outsb
cmp
mov
lds
arpl
repnz
sub
jb
mov
adc
loopne
mov
adc
inc
inc
mov
je
jb
stos
add
and
shr
push
xor
adc
int3
pop
adc
jae
icebp
aam
sub
cltd
pusha
outsb
movsl
sbb
inc
inc
jp
inc
push
push
pop
mov
lock
dec
jo
aam
sbb
dec
inc
pop
mov
pop
mov
xor
adc
inc
pop
push
jmp
sub
cmp
outsb
pop
pushl
call
mov
jnp
out
call
int3
dec
popa
mov
dec
inc
dec
fadds
xor
pop
arpl
xlat
mov
add
rorl
movsb
loopne
insb
daa
mov
adc
or
jae
movq
imul
sub
fwait
pminsw
pusha
sub
test
push
mov
bound
out
les
cmp
divb
adc
inc
or
aam
cmc
stc
enter
xchg
or
out
mov
insb
insb
jg
push
jp
push
mov
jge
jecxz
aaa
mov
test
loope
and
push
xchg
lahf
mov
inc
ret
pushf
pop
push
in
daa
cmp
cmp
inc
jns
leave
popa
pushf
xchg
pop
hlt
jp
sub
insl
lea
jmp
out
into
sub
test
xchg
adc
push
pusha
jge
loopne
dec
fwait
sub
cmp
dec
pop
pop
xchg
loop
shlb
divl
mov
jp
into
jno,pt
mov
xlat
push
aam
sti
adc
and
mov
mov
cwtl
push
jnp
in
sub
in
je
sti
lcall
ret
add
ja
inc
lret
xor
xor
adc
mov
in
les
mov
int
out
cld
mov
mov
imul
sbb
lds
mov
aam
lret
in
int3
ret
lods
out
push
test
xchg
cs
jo
jb
mov
cmp
jne
aam
fisttpl
je
stos
xchg
in
test
insl
mov
mov
movsl
sbb
jecxz
sub
jns
lods
pop
subl
sahf
inc
push
add
ret
addr16
push
mov
cmc
ss
fsubr
jb
xor
push
pop
lds
popa
pop
shrb
fildll
push
mov
bound
pop
dec
or
xchg
mov
dec
scas
xchg
je
mov
mov
inc
ss
ficomps
dec
mov
mulb
aam
dec
inc
paddd
adc
das
icebp
int
or
scas
jg
dec
or
loop
stc
arpl
aaa
fisubs
jno
push
inc
js
xor
xchg
jnp
cmc
cmp
sub
scas
xor
dec
or
fisubrl
fnstsw
fucomip
sub
mov
jg
fwait
cmp
and
clc
add
jle
dec
pop
push
jl
pop
add
repz
sbb
xchg
jnp
mov
mov
jbe
test
jp
mov
cmp
pop
stc
xchg
inc
imul
jle
mov
daa
cwtl
jge
xchg
mov
mov
jns
cs
dec
xchg
mov
jl
xor
jle
inc
das
sub
loop
or
test
int3
rol
idivl
xchg
out
jg
insb
or
mov
xchg
imul
dec
out
leave
cmpsl
and
pushf
lahf
cmp
enter
xchg
jmp
mov
fdivs
mov
insl
push
fs
inc
aas
loopne
dec
mov
or
fsts
adc
mov
clc
xchg
js
sbb
repz
jecxz
pop
mov
adc
or
push
mov
jae
xor
pop
mov
mov
sbb
or
pop
leave
sbb
xchg
xchg
xor
mov
xor
es
fcoml
enter
incl
aaa
inc
loopne
mov
cmp
into
mov
jmp
fldt
stos
neg
stc
cmp
jae
inc
add
outsb
xchg
dec
aad
lret
mov
pop
jbe
test
and
add
cmpsl
push
cld
lahf
xor
xchg
inc
je
inc
je
nop
std
inc
or
shll
cmpsl
sub
scas
push
int
aad
lcall
add
push
jp
add
dec
out
dec
sub
sub
clc
and
sbb
dec
xchg
movsb
mov
enter
or
xchg
fisubrs
fildll
pop
add
and
outsl
js
ret
in
ljmp
scas
test
nop
or
fisttpl
lods
fistps
loopne
pop
push
popa
sbb
jg
std
xchg
aad
push
repz
ja
add
jb
test
cmp
aam
mov
jns
loope
in
xchg
pop
mov
iret
push
std
arpl
out
adc
stos
inc
or
dec
gs
cmp
xchg
aad
pop
shrb
mov
ret
xchg
je
insb
pop
and
testl
xchg
add
dec
mov
fwait
mov
scas
lock
jb
je
pop
push
dec
cmpsl
es
rcr
adc
sub
mov
scas
fldcw
daa
ja
iret
dec
pop
lret
fwait
jnp
imul
mov
mov
imul
adc
sub
fsts
js
mov
popl
aas
sbb
jecxz
pop
cli
xor
xor
insb
lret
push
xchg
rcl
dec
pop
imulb
pop
sbb
cmpl
xor
sbb
cmp
cld
mov
ljmp
jbe
mov
xchg
cltd
or
pop
adc
ljmp
mov
adc
test
mov
ja
insl
movsl
lods
out
mov
jo
xchg
jl
push
xchg
out
xchg
addr16
sub
mov
insl
mov
in
mov
adc
out
xlat
xor
scas
addr16
fisttpll
cltd
pop
adc
lds
stos
or
cmpsb
lcall
add
jb
cld
imul
and
dec
insb
xchg
adc
push
stos
push
mov
jl
mov
test
jbe
std
int3
incl
lahf
push
push
mov
fsubs
int3
popa
jo
pop
popa
cld
daa
mov
mov
loopne
jg
mov
inc
cltd
dec
xor
mov
or
xor
adc
mov
test
mov
cmp
scas
or
jne
fiadds
aad
sbb
or
mov
loop
movsb
outsb
dec
sub
je
stc
adc
std
mov
int
push
lods
cltd
fisttpll
scas
sti
mov
mull
mov
ss
stc
movsl
jae
jb
jbe
aaa
pop
fidivl
imul
pop
pop
xor
push
xchg
mov
pop
add
loopne
in
sahf
mov
lods
repz
and
lock
sub
hlt
cld
mov
mov
daa
in
aaa
mov
shll
xchg
mov
sbb
nop
vunpckhpd
cmc
inc
add
mov
xor
mov
push
orb
adc
add
testb
shr
jne
ret
push
cmpsl
dec
fisubrl
shl
push
ds
pop
mov
pop
call
push
push
add
dec
xchg
lahf
mov
iret
cmp
outsl
pop
ret
ljmp
les
xchg
mov
lock
incl
bound
mov
stos
cs
flds
jbe
pop
cmpsb
sbbl
dec
test
push
mov
mov
xorb
and
dec
in
dec
pop
dec
push
dec
fwait
lcall
out
sbb
xor
in
dec
cmpsl
pop
jg
outsb
jne
xchg
gs
insl
lret
xchg
pop
test
lret
jmp
xor
sbb
les
repnz
mov
jbe
or
shll
mov
or
mov
sbb
pop
adc
xor
push
rorb
jp
jbe
addr16
xchg
fimuls
sbb
jns
dec
pusha
sub
inc
cmc
lods
cli
mov
mov
scas
xor
pop
dec
cli
push
cmc
and
pop
ljmp
or
lods
push
stos
lcall
outsb
pop
aas
dec
aad
mov
les
call
mov
xchg
inc
mov
loopne
mov
adc
dec
mov
sahf
and
jbe
xor
and
ficoms
stos
out
xchg
ds
aas
cmp
repnz
adc
mov
sub
push
sbb
adcb
xchg
jb
adc
xchg
aam
push
pop
and
xor
mov
or
xchg
lcall
jbe
ss
mov
int3
mov
jl
fbld
lahf
sahf
test
lcall
lods
add
pop
insb
mov
cmpsl
sub
sarl
jnp
lcall
or
push
fstpt
xchg
lcall
hlt
lods
scas
fs
or
ret
scas
push
mov
add
or
mov
mov
mov
push
or
mov
fildl
ljmp
imul
cmp
dec
loope
aas
je
imul
lahf
loop
sbb
fisubrs
inc
testb
sbb
sbb
sbb
cmp
mov
in
gs
xlat
into
jb
pop
push
adc
xchg
mov
sbbl
jb
jle
negl
adc
xor
aas
push
push
enter
cld
lahf
cwtl
inc
xchg
lods
push
inc
fstpt
xchg
scas
out
ss
and
sarb
out
xchg
outsl
aam
js
cmpsl
jae
cmpb
push
fistpl
adc
or
push
cwtl
ret
and
and
test
jle
inc
xchg
stos
add
pop
inc
xchg
adc
lds
fsts
dec
movlps
sbb
jae
fwait
pusha
jmp
adc
sub
jecxz
and
mov
xchg
or
pop
add
in
and
pop
xchg
arpl
imul
ss
or
leave
or
pop
mov
mov
dec
sub
pusha
ret
and
pop
lret
andl
decb
jge
add
lea
ja
dec
aas
jbe
lcall
lods
sub
stc
les
lret
sbb
mov
cwtl
push
mov
fisubl
lds
sbb
aas
push
movsb
scas
pop
notl
pop
fistpll
jmp
inc
mov
jmp
pop
insb
stos
add
sub
sbb
cmc
aad
inc
jbe
inc
cld
sub
and
inc
mov
out
push
sub
nop
frstor
inc
fs
sahf
pop
lcall
xchg
mov
jle
aam
dec
lcall
out
insb
push
add
setle
inc
out
jno
xchg
test
pop
arpl
enter
pop
les
push
jmp
movsl
cmp
inc
rcrl
loop
xorl
xchg
add
jns
ljmp
sbb
iret
insb
mov
adc
sbb
xor
push
psrlq
and
or
mov
test
push
js
mov
lret
shl
pop
insl
xor
dec
insb
lea
cs
push
jmp
mov
addb
dec
mov
xchg
rcrl
movsl
adc
mov
das
sbb
aam
icebp
rcll
mov
mov
cli
pop
fadds
cld
insb
jp
out
add
arpl
and
std
add
mov
and
push
xlat
mov
jl
mov
xor
adc
call
int3
push
dec
xchg
scas
push
subb
mov
push
pop
outsl
mov
ss
sub
jmp
in
into
push
lock
mov
orl
cwtl
test
xchg
push
and
cmp
sbb
or
dec
add
arpl
insb
out
mov
stos
mov
xor
sbb
mov
test
sub
push
test
xchg
mov
dec
cmp
std
sbb
xchg
xchg
aas
call
std
mov
add
das
sbb
repnz
test
adc
adc
int
hlt
dec
ds
jl
adcl
xchg
mov
gs
gs
push
push
push
shrb
jns
sub
sub
fwait
loop
or
and
imul
shl
movsl
into
jno
jae
adc
xchg
cmp
fnstenv
icebp
mov
adc
sub
int
out
ja
cld
add
sub
add
sub
cwtl
icebp
hlt
adc
out
jbe
dec
and
ret
inc
lcall
xchg
push
outsl
int3
add
pop
cmp
mov
mov
or
and
shrl
movl
dec
nop
jp
or
popa
movsb
in
loop
stos
repnz
mov
mov
add
dec
pop
aas
or
std
or
or
cmp
mov
mov
call
push
lds
mov
out
divb
aas
fimull
dec
inc
prefetch
mov
cmp
push
aaa
out
nop
adc
push
rcrl
xchg
lods
decl
push
jae
pop
popf
cmc
push
repnz
jl
jns
pop
sar
mov
xor
repz
stos
mov
sbb
jne
push
or
push
xchg
fs
pop
inc
pop
mov
jge
test
mov
xor
sub
pop
cld
mov
js
mov
mov
jle
data16
pop
sbb
std
dec
cmp
or
xchg
fwait
sbb
mov
pop
cmp
push
in
sti
pushf
cltd
pop
test
leave
sahf
cltd
out
fildl
out
insl
test
jno
mov
shlb
pop
dec
jbe
jg
sbb
push
mov
pop
inc
fisubs
push
mov
cmp
mov
mov
iret
mov
outsl
adc
aas
pop
scas
lock
mov
adc
push
jns
ror
fs
inc
lret
iret
pushf
aaa
out
fidivs
jl
add
cmpb
popf
out
mov
mov
sub
push
fnstcw
out
xchg
pop
imul
imul
pop
decl
sti
fnstsw
adc
sbb
popf
insl
repz
cld
shlb
pop
pop
in
enter
sbb
test
mov
testb
xchg
sub
mov
mov
std
sbbb
mov
pop
test
adc
push
stos
cmp
mov
cld
data16
adc
addb
cld
dec
inc
or
sbbb
inc
xor
xor
xchg
dec
dec
push
mov
das
and
loopne
insl
mov
pop
out
fwait
pop
andl
ss
hlt
das
nop
pop
adcl
add
pop
push
and
mov
mov
inc
sbb
push
rcrb
jne
mov
cmp
test
lret
enter
sub
test
cli
mov
loop
cmpsb
or
lock
sub
adc
xor
mov
cld
ss
loopne
ljmp
sbb
mov
lock
xchg
lahf
push
je
cmp
pop
cli
push
push
aaa
push
inc
iret
leave
in
les
and
mov
aaa
stc
sub
or
push
sub
loop
jg
jnp
xor
xor
xchg
inc
std
mov
aam
loopne
enter
sbb
mov
jnp
scas
xchg
shrl
js
clc
mov
mov
test
dec
into
popa
mov
mov
add
pop
xor
leave
into
sub
movsb
fisttps
push
adc
popl
xchg
push
shrb
lock
iret
pop
sub
std
pop
add
xor
shrb
daa
dec
pop
or
xchg
pop
in
add
pop
movsb
fisubs
loop
in
jmp
push
push
jp
movl
loopne
adc
sbb
popa
sub
aaa
cmpsb
dec
mov
loope
xchg
sbb
lcall
or
push
jle
sbb
mov
sbb
imul
js
xor
std
jae
das
addb
xor
out
sbbl
and
test
push
mov
sbb
ja
shll
loope
dec
jecxz
fdivrs
and
adc
sub
outsb
cmp
and
repnz
mov
adc
sarb
mov
jmp
pop
xchg
test
cmp
inc
pop
xor
xchg
adc
jns
sbb
jl
jns
dec
push
cmp
inc
aad
loope
jae
sbb
mov
push
mov
ljmp
out
lcall
sub
jg
addr16
std
cld
repnz
outsl
cmpsb
sbb
sub
ret
mov
jp
adc
jp
out
addr16
dec
dec
add
repnz
add
aad
mov
mov
cmp
decl
arpl
push
inc
in
lods
jg
cld
mov
add
hlt
and
mov
xchg
test
add
jmp
cld
pop
loopne
sbb
sbb
xchg
push
fnstsw
call
pop
andl
mov
scas
iret
push
lods
arpl
inc
mov
lea
ret
cmpsl
insl
and
fbstp
add
sbb
inc
ljmp
jge
dec
push
adc
pop
mov
inc
jge
addr16
cmc
pop
out
insl
jg
jp
scas
cmp
dec
cmp
xchg
mov
cwtl
popf
push
je
jb
sahf
sub
addb
cmc
xchg
cmp
lcall
dec
roll
fwait
popf
ss
ljmp
cmp
fisubrl
dec
iret
test
imull
repnz
push
and
rcrb
and
or
jle
or
xchg
mov
sub
imul
and
sbb
rcrl
mov
out
es
movb
sub
and
push
sbb
lret
dec
push
pop
arpl
mov
mov
push
cmpb
rorb
dec
aaa
addr16
or
cmpsl
icebp
lcall
dec
cmp
sarb
adcb
mov
fwait
dec
cs
jge
xor
inc
in
rorl
cld
jg
xchg
lcall
fsubrs
push
imul
jo
aas
adc
sti
in
scas
cmpb
out
and
scas
jge
hlt
leave
jbe
out
imul
xchg
addl
push
xlat
stos
dec
repz
mov
jle
int
push
test
push
mov
fprem1
fwait
mov
xor
stos
pusha
mov
das
sbb
mov
adcb
sub
insl
dec
fildll
xor
fwait
cs
push
cmp
and
mov
mov
arpl
and
lods
cltd
mov
dec
mov
mov
dec
cmp
and
shr
fsubs
push
sbb
or
sub
ljmp
in
in
sarb
jno
cs
imul
pushf
cmp
ret
sar
mov
sbb
clc
imulb
inc
lods
cmp
pop
adc
inc
insb
mov
outsl
popf
lods
jno
pop
shl
cmp
lcall
arpl
cmp
or
popf
dec
fbstp
mov
popa
cld
jg
mov
push
fildll
loope
cmpsb
push
add
sub
loope
xor
notb
sbb
stos
pop
les
scas
in
inc
xor
adc
cli
cmp
mov
cld
sti
out
or
stos
mov
mov
and
sbb
ret
outsl
push
cli
adc
sub
pop
add
add
jl
shlb
mov
in
pop
dec
andb
mov
xchg
nop
int3
sti
push
xor
mov
es
and
sbb
pop
sub
push
mov
push
add
cld
fidivl
daa
stos
outsl
test
fildl
sub
mov
sahf
inc
dec
inc
dec
xchg
inc
imul
inc
ljmp
ss
fisubrs
les
int
push
cmpl
and
push
rorb
pop
push
cmpsb
mov
add
movsl
cltd
adc
imul
out
clc
mov
push
sub
lods
adc
bound
push
inc
push
int
mov
repz
cmp
jo
or
fdiv
dec
out
or
sbb
shll
shrd
jg
add
test
mov
mov
sbb
pushf
faddl
enter
xchg
daa
cmp
jae
std
dec
out
dec
add
push
mov
jmp
adc
pop
add
push
outsb
xchg
jge
fdivrl
xor
fwait
aaa
cmp
mov
iret
mov
sbb
xor
mov
cmp
fdivp
icebp
ss
outsb
sbb
cmp
sub
lcall
outsb
imul
xchg
popa
inc
xchg
push
fnstsw
loopne
in
loope
in
lahf
cmc
inc
push
rcll
cmpsl
sub
push
fildll
add
push
mov
sahf
ret
imul
insb
mov
jge
xchg
fdivl
jb
xchg
repnz
cmpsl
ja
sahf
cltd
jg
clc
arpl
jno
jbe
icebp
lret
cmp
enter
sbb
xor
rolb
fcom
and
popa
add
or
xchg
sub
mov
jno
push
imul
jmp
mov
addl
cltd
and
repz
adc
mov
cmp
fmuls
iret
dec
mov
shrb
mov
dec
movsbl
jmp
pop
sahf
js
sahf
jne
pusha
clc
stos
clc
fisubs
es
mov
loopne
mov
mov
clc
sbb
push
ret
adc
xor
lahf
jle
adc
cmp
movsl
iret
cmp
arpl
pop
inc
call
mov
lret
ficomps
push
ss
mov
mov
cmpb
or
push
lods
in
push
inc
xor
push
vmread
sub
addb
and
cmp
movsb
iret
jae
sbb
mov
jae
mov
insl
clc
dec
push
jg
fs
jp
addps
adc
push
stc
add
xchg
jae
dec
aas
loopne
mov
add
lret
loop
stc
in
ljmp
fcoms
sub
test
jge
shrl
lret
addr16
cmp
int
mov
js
aas
jl
ljmp
cmpsl
ss
daa
lock
clc
sbb
and
and
xchg
mov
mov
jns
fwait
loope
adc
push
out
fistps
sub
fisubl
popf
popf
sub
cmp
nop
or
or
xor
test
shll
jecxz
sub
adc
iret
cwtl
xchg
mov
add
add
inc
nop
cs
insb
ror
sbb
data16
jle
lds
sub
dec
mov
sbb
fisubrl
sbbl
jnp
sub
cmpl
and
pop
push
gs
test
push
inc
cmp
mov
outsb
int
rcrl
divb
mov
pop
lods
jl
jo
push
dec
in
push
inc
pusha
xorb
fwait
jbe
loopne
out
nop
cmpsb
adcl
add
stos
mulb
add
daa
in
loope
iret
fcomi
sbbb
xchg
out
fcmovbe
xchg
xor
dec
fldcw
mov
fidivrl
and
mov
inc
inc
inc
int
xchg
fistpl
xchg
jne
int
leave
pop
test
push
bound
pusha
imul
lret
scas
xor
dec
jecxz
xor
leave
cld
or
negl
or
testl
sbb
mov
or
adc
loope
arpl
jo
add
popf
loopne
xchg
adc
movsl
in
dec
adc
scas
inc
nop
adc
dec
add
mov
cmp
jnp
ds
adc
cmp
fmull
lods
push
ds
cmp
test
int
xchg
in
mov
mov
push
add
notl
sbb
mov
movsb
lods
mov
pusha
adc
cmp
add
and
mov
jp
cld
jb
inc
arpl
or
push
testb
add
das
out
adcb
fnstsw
adc
and
loopne
in
shlb
call
lods
outsb
xchg
push
into
je
xchg
xchg
jns
sub
lahf
inc
movaps
pop
dec
repz
cmp
add
inc
cwtl
mov
mov
cmp
inc
push
sbb
adc
inc
inc
std
pop
les
mov
pop
and
jne
punpckhdq
clc
dec
pop
adc
fadd
sub
jle
inc
fs
sbb
aad
fisttps
sbb
shlb
sbbb
lock
mov
lock
adc
jmp
popf
rclb
pop
add
out
lods
fnsave
fiaddl
add
xor
mov
outsl
das
outsb
dec
popf
imul
lock
insb
sahf
mov
inc
nop
pop
dec
dec
sbb
inc
inc
loopne
pusha
cmpsl
repnz
cmp
sub
pop
clc
add
add
push
sbb
insb
push
sarb
movl
dec
cli
mov
imul
mov
push
es
scas
push
jnp
mov
fldcw
fildll
push
test
fdivrs
mov
das
ds
out
inc
arpl
push
nop
les
int
or
lods
inc
push
sub
lcall
outsl
jne
dec
adc
ja
lret
fwait
mov
out
mov
dec
sbb
int3
cmp
jl
ss
mov
scas
sti
imul
push
je
test
fisubrl
addr16
cmpb
popf
sbb
push
movsb
adc
mov
jmp
inc
call
push
adc
pop
inc
adc
ja
sahf
std
push
in
dec
fnstcw
pop
or
mov
xchg
mov
xchg
in
push
push
pop
pushf
les
mov
mov
cmp
or
cmp
sbb
test
not
add
push
orb
fnstenv
add
xor
xor
xor
jae
jmp
xchg
dec
cli
clc
jo
out
cwtl
test
pop
mov
rcrl
inc
out
aam
or
std
sbb
inc
popf
movsb
mov
cmp
cmp
pop
mov
dec
mull
lock
mov
repz
or
inc
movsl
movsb
test
and
test
pushl
insb
inc
adc
mov
xchg
in
or
cmp
jp
mov
lock
je
cmpsl
aam
cmp
jl
xchg
into
jbe
mov
mov
push
or
shlb
das
xorb
jb
mov
mov
push
ret
hlt
rolb
icebp
jle
cmp
sbb
std
jle
jmp
stc
or
les
out
test
xchg
lcall
and
push
iret
mov
into
dec
mov
rcrb
iret
sub
bnd
clc
cli
adc
xor
test
movd
sbb
mov
movsb
out
sub
sbb
lods
jb
std
ja
cmp
imul
mov
push
inc
xor
scas
inc
sub
std
cmp
fs
aaa
aad
orl
mov
or
stos
and
mov
sbbl
rclb
cmp
adc
out
mov
mov
insl
cmc
pop
xchg
in
insb
mov
lea
cltd
inc
icebp
lcall
push
push
push
xchg
mov
mulb
daa
push
ret
int
sarl
adc
loopne
mov
xchg
jmp
out
xchg
xchg
scas
xchg
cltd
fs
es
and
arpl
lock
cmp
add
pop
test
mov
jl
push
gs
stc
xlat
xchg
int
adc
sbb
pop
jnp
cmpsb
xchg
cmp
divb
popa
xor
das
clc
mov
aas
sub
fnsave
fdivrl
mov
or
lcall
pop
in
mov
daa
push
or
vsqrtps
out
shlb
jo
ds
je
enter
mov
mov
mov
jle
lret
cmp
repnz
aad
fistl
into
dec
xchg
popa
scas
ds
movsb
loope
cmp
mov
insb
cmpsb
mov
add
dec
add
fisttpll
push
out
mov
add
ljmp
adc
jle
mov
add
test
xchg
fs
sub
pop
and
or
pop
mov
inc
pop
xor
sub
add
rclb
add
adc
adc
xchg
mov
outsb
mov
int
in
mov
movsl
sbb
sbb
enter
and
stc
cmp
inc
std
mov
xchg
subb
cmpsb
xor
add
shll
inc
sbb
push
sarl
imul
dec
fistl
xchg
lret
sbb
dec
dec
jp
cmpsb
xchg
cmp
adc
inc
lds
aaa
sub
cmp
js
aas
or
jbe
sub
dec
andb
add
adcb
sbb
cs
in
push
cmp
sbb
pop
ljmp
stos
push
test
imul
push
push
pop
test
adcb
loope
jae
jp
test
adc
inc
jb
push
xor
mov
mov
mov
pusha
dec
stos
cmp
clc
pop
imulb
lock
add
mov
sbbl
sti
xor
or
in
sbb
test
pop
call
cmp
xchg
cmpsb
addr16
and
and
vaddsubpd
in
jg
fwait
outsl
inc
sub
sub
addr16
lcall
ljmp
insl
in
inc
sbb
and
mov
lahf
cmp
jno
jg
mov
mov
and
sahf
adc
leave
push
or
dec
fs
lods
sti
aas
push
adc
mov
adc
push
jl
push
test
adc
je
mov
into
movsb
addr16
cmp
xor
shl
inc
stos
or
mov
popf
leave
popa
gs
push
mov
xchg
jns
out
jne
cmp
inc
lret
insb
out
mov
outsb
add
mov
adc
inc
inc
adc
mov
ret
jle
add
data16
push
push
in
das
push
xchg
jg
jbe
mov
insb
and
pop
lea
mov
xchg
sub
dec
cmp
inc
push
and
and
stc
or
xchg
das
push
fdivrs
mov
adc
enterw
dec
fisttpl
jmp
adcb
gs
insb
xlat
js
push
jp
cmpsb
imul
adc
in
pop
les
lahf
dec
fcmovne
aad
xor
cmp
fnsave
icebp
aas
jmp
int3
mov
push
cmpsl
stc
inc
inc
xor
lahf
leave
mov
mov
add
dec
xchg
ret
outsb
jle
sbb
enter
push
jns
mov
push
push
hlt
jecxz
xor
mov
cmp
cltd
bound
arpl
cli
bound
cmpsl
dec
je
push
negb
or
mov
aaa
add
pop
pop
push
jp
ljmp
mov
and
push
stos
xchg
mov
cmp
push
push
movsb
and
pop
insl
mov
pop
cli
out
pop
and
insb
cmpb
pop
adc
shll
jl
cmp
and
inc
sub
pop
push
dec
jnp
and
push
and
add
orl
mov
inc
dec
sbb
dec
iret
lcall
lods
lods
jno
jmp
lea
int
int
jne
lods
dec
cmp
add
scas
pushf
into
pusha
mov
iret
jp
ss
jecxz
in
subl
ja
stc
push
cmp
aaa
jns
jbe
imul
xor
addb
pop
sub
xchg
lret
sbb
dec
dec
dec
call
cmp
add
testl
je
out
std
xor
in
out
arpl
pop
adc
lahf
mov
adc
jecxz
pushf
fbstp
stos
icebp
cmp
push
push
test
fildll
mov
inc
clc
cld
imul
inc
jg
mov
ljmp
lea
gs
or
scas
enter
sbb
cmpsb
jl
pop
fnstsw
imul
adc
mov
pop
jae
mov
cmp
and
mov
mov
or
mov
mov
xchg
mov
inc
imul
cmp
orl
lds
xchg
hlt
xor
and
and
fwait
mov
mov
loopne
ljmp
add
or
mov
jo
add
cmp
mov
loopne
dec
into
stos
aam
cltd
jae
inc
inc
outsl
mov
iret
aaa
mov
add
xor
lds
xlat
and
jb
mov
cs
cmpsl
movsl
outsl
pop
daa
in
push
jge
sbb
jo
jns
adc
data16
fisubrs
lock
repz
xchg
inc
repz
pop
roll
xchg
insb
mov
cmp
adc
mov
negl
jg
ret
je
jae
or
sbb
lds
lcall
sub
inc
jne
sub
xchg
cld
push
ds
ja
jg
cmc
mov
add
cwtl
icebp
pop
push
insl
inc
jbe
mov
scas
cmp
lds
lds
push
fldenv
mov
repz
xor
shlb
je
lea
cmp
fidivrl
call
fldenv
dec
jle
xor
pop
pop
mov
mov
bnd
adc
mov
push
fwait
inc
in
sbb
pop
mov
pop
jecxz
cmp
or
cmp
cmpsl
sbb
sub
out
pshufw
cs
test
cltd
repz
or
cmp
scas
mov
imul
fcoms
lock
cmpsl
ljmp
xor
adcb
pop
ss
ljmp
xchg
clc
imul
int3
ljmp
jp
cmpsb
out
clc
push
push
sarb
mov
imul
ret
stc
std
shll
andb
subl
outsl
out
outsb
fildll
xchg
mov
cwtl
jmp
xchg
ja
push
enter
or
mov
sbb
lods
xchg
xor
fnstsw
cmp
out
cmp
mov
repnz
lret
mov
jl
cli
cmpsl
push
addl
xchg
push
mov
pop
fstps
mov
sbb
xor
enter
nop
stos
xor
and
fcoms
aas
sub
mov
sub
in
icebp
stos
pop
fucom
inc
and
pop
in
jne
push
cmp
jns
sub
inc
mov
mov
push
inc
adc
ficompl
dec
add
testl
rep
xlat
mov
push
push
xchg
xchg
xorl
dec
lret
cmp
loope
frstor
lret
sub
push
mov
xor
lods
adc
out
cli
sahf
xchg
inc
mov
pop
loope
sub
iret
repz
ficompl
jecxz
popa
outsb
cmpsb
cli
int
aaa
xor
test
test
loope
pusha
jp
out
lods
les
jecxz
loopne
mov
adc
mov
or
sahf
xchg
cmp
mov
and
imul
lods
push
mov
pop
adc
rcrl
sahf
sbb
mov
mov
in
and
std
jnp
icebp
add
loop
xor
xchg
push
ja
and
loopne
popf
push
frstor
sahf
xchg
std
fadds
repnz
aas
jp
pop
pop
out
push
adc
addb
pop
xor
stos
imul
idivb
add
scas
or
mov
dec
insb
mov
popa
push
test
mov
imul
cmc
enter
in
pusha
xchg
pushf
ret
in
loop
jbe
clc
sbb
dec
loop
incl
out
mov
pop
pop
mov
fisttpl
dec
in
stos
ljmp
add
mov
sub
in
sub
and
xchg
outsb
xor
xor
fsubrl
ja
pop
aad
arpl
mov
and
hlt
outsb
mov
xor
add
cs
aad
cmc
mov
lret
mov
xchg
sbb
leave
push
test
xor
fdivl
cs
imul
cmp
fistps
mov
pop
insb
cmpsl
pushf
dec
dec
push
inc
jecxz
mov
je
sbb
jmp
jg
call
inc
add
push
scas
xor
inc
mov
js
jns
icebp
out
cmp
and
int3
aaa
std
mov
jp
leave
movsl
mov
cmp
cmpb
fdiv
push
scas
push
shrb
inc
jmp
pushf
or
adc
fmull
add
cltd
sarl
fldcw
js
imul
mov
jae
cmc
cmp
jp
test
inc
imul
jle
or
jnp
or
lds
lahf
jo
push
bound
rorl
sbb
pop
cmc
adc
mov
mov
jmp
lods
dec
lcall
sti
or
bound
jle
pop
xchg
mov
pop
int
adc
or
int3
inc
aaa
fbld
loop
jns
in
aaa
mov
xor
sbb
rolb
lret
or
sbb
fstl
mov
repz
dec
lods
add
or
addr16
int3
inc
stos
adc
add
lahf
scas
fistl
outsl
xchg
mov
add
ret
scas
in
xor
mov
fcoml
lcall
rolb
mov
lret
add
inc
mov
out
xchg
and
sub
push
nop
les
mov
bound
lods
pop
and
adc
into
jge
mov
ffreep
popf
test
in
fnstsw
ss
mov
dec
les
xchg
js
xchg
and
sub
pop
dec
inc
int
push
xchg
adc
jbe
cwtl
loopne
aam
rcrl
jne
and
iret
hlt
fwait
aas
mov
ss
jo
jo
push
das
add
lods
lock
int
scas
out
lods
pop
xchg
fmuls
sbb
xlat
in
dec
xchg
test
xchg
jb
and
mov
jae
or
xlat
in
add
dec
push
sub
xchg
addl
ljmp
pop
mov
into
ja
mov
push
xchg
or
movsl
and
mov
in
lods
out
push
cmp
lods
hlt
lahf
into
push
cmc
aad
push
js
jo
aaa
add
test
cmp
cmpsl
pop
add
xchg
cld
jle
or
test
and
ror
iret
jbe
cmp
push
lret
mov
xchg
insl
dec
mov
xor
pop
cs
adc
sar
lock
test
lret
pop
aaa
fcmovnb
mov
and
out
jl
sbb
sub
cmp
aam
pushf
adc
pop
sbb
xor
xchg
js
mov
push
nop
fnstenv
cmc
popa
inc
sub
int
fstpt
xor
and
and
cmpsl
sbb
mov
xchg
outsb
cld
push
into
pop
push
ficompl
xor
push
outsb
mov
adc
scas
or
mov
rclb
test
stos
das
adc
negl
repz
pop
jp
inc
and
out
out
jge
inc
int
imul
xchg
enter
cmp
pop
ljmp
mov
push
or
dec
sti
xchg
test
negl
out
xor
jb
push
sti
iret
bswap
xchg
inc
push
out
jns
push
and
bound
mov
mov
jbe
out
sub
outsl
hlt
or
fcomip
ljmp
xchg
mov
gs
cmpsb
leave
jnp
and
add
push
jge
ret
jg
add
bound
test
subl
mov
sahf
loope
jno
loope
jb
mov
adc
mov
xor
xor
je
addl
sbb
orl
lods
or
in
and
pop
sub
cwtl
xlat
leave
jo
jb
mov
leave
bound
dec
cli
mov
fidivl
dec
push
adc
push
rcl
or
cmp
lret
cmpsl
mov
out
icebp
arpl
pop
xchg
jge
lcall
dec
push
jle
fistpl
pmullw
adc
cli
ja
fists
clc
test
cmpsl
cmp
sbb
push
push
sub
iret
addl
mov
xchg
fwait
shr
add
dec
push
aad
dec
inc
push
and
jl
data16
mov
pop
add
repnz
outsb
sti
vmread
cmpsl
adc
ret
pop
lods
or
mov
pop
mov
in
movsb
mov
negl
shl
pushf
mov
dec
push
push
jecxz
movsb
xlat
pushf
xchg
push
iret
xor
xor
stos
insb
dec
adc
sub
cmp
lock
xchg
push
pop
jge
xor
dec
xchg
pop
mov
sub
pop
cmp
and
inc
bound
imul
jp
stos
mov
push
sti
enter
mov
push
pop
and
shl
repnz
xor
add
push
int
andl
xchg
xchg
loop
cmpl
sbb
sbb
stos
sbb
ret
idivl
pop
jnp
addb
xchg
sbb
adc
mov
jp
repnz
pop
mov
mov
loop
inc
sarb
outsl
test
mov
dec
xchg
sahf
mov
ja
add
mov
cmp
fbstp
cmp
ret
mov
movsb
arpl
push
push
jo,pt
pusha
jl
add
movsb
jg
jge
cmp
add
in
xchg
cmp
int3
mov
xor
dec
adc
pop
stos
movsl
pushf
mov
xlat
xchg
lea
mov
mov
stc
daa
add
pop
call
jns
repnz
mov
sub
xchg
inc
aad
jne
fimull
mov
mov
andl
pushf
xchg
xor
ret
aam
xor
rorb
cmpsl
mov
push
jne
push
mov
stc
lea
and
fistl
std
faddp
imul
jo
mov
cmp
sbb
and
jnp
sbbb
aas
push
dec
add
les
push
out
pop
cmp
adc
js
lret
fcmovnb
call
les
sub
ror
cli
adc
sbb
and
sub
pusha
fnstenv
neg
inc
add
scas
and
js
das
rol
shrl
and
pusha
push
sub
and
jp
push
inc
enter
lods
enter
and
mov
cmp
or
sbb
xchg
push
daa
bound
lahf
hlt
aam
pusha
gs
push
sbb
push
and
loop
and
push
pop
iret
push
bound
adc
mov
pop
and
xor
mov
rol
dec
or
add
jae
jle
jge
ret
icebp
shl
sub
lret
jno
movsl
sbbl
jae
pop
or
ret
xchg
xorb
sub
je
mov
cmpsb
imul
or
shlb
pop
jecxz
insb
loopne
sub
add
adc
mov
adc
iret
ficoms
dec
rcrl
in
xchg
mov
pop
loope
shrb
stos
loop
xor
and
or
push
cmp
movsb
mov
ret
sub
inc
mov
mov
lock
xor
fstpl
push
repnz
fcompl
push
lods
shll
mov
icebp
sub
mov
xchg
xchg
inc
in
or
mov
jo
pusha
negb
lods
f2xm1
fs
mov
addr16
jp
popa
andl
je
push
leave
popf
or
ja
sub
call
pop
rorb
cmp
movq
rclb
icebp
int3
pop
lock
call
aaa
adc
int3
jne
push
sub
out
push
mov
or
out
mov
xor
scas
xchg
decb
jmp
ja
mov
es
sahf
es
aad
cmp
mov
mov
out
jl
mov
adc
fcomip
or
imul
xor
aam
mov
call
jmp
icebp
aam
dec
xlat
dec
ljmp
loope
sbb
push
pop
lds
lret
push
mov
mov
push
dec
push
insl
inc
dec
mov
and
sbbb
xchg
insb
cmp
mov
cmp
cs
call
or
xchg
icebp
jns
stos
inc
das
ror
pop
push
sbb
lcall
mov
dec
or
xchg
xchg
gs
outsb
sahf
clc
scas
es
cmp
mov
mov
mov
ficoml
push
arpl
popa
lds
hlt
mov
cmp
mov
mov
dec
pop
int
lahf
mov
mov
sub
or
movsb
cmc
mov
xor
mov
fs
jmp
mov
shll
jge
mov
stc
test
jecxz
lods
push
and
inc
lds
rcrb
std
addb
mov
cmp
clc
jecxz
cmp
sub
popf
jno
mov
imul
mov
into
in
test
cs
loopne
mov
jecxz
repnz
cmp
or
pop
xchg
push
rol
mov
xchg
xchg
movsl
sbb
mov
cld
xor
fwait
out
or
insb
push
test
lret
fsubrl
xchg
sahf
mov
push
xor
lds
mov
bnd
scas
push
dec
add
out
loope
jg
adc
mov
fadd
or
mov
testb
flds
dec
js
loope
outsb
cmp
lret
dec
mov
adc
cmp
adcl
inc
push
sbb
sahf
jo
fldcw
push
xlat
stos
cs
lea
cwtl
push
inc
aad
insb
jnp
mov
jbe
subl
or
repz
movsl
pushl
cmpsb
sub
test
sti
add
int
stc
push
stc
xor
mov
icebp
sub
pop
or
stc
jl
jle
rorb
xchg
test
jns
fmuls
xorb
lods
mov
rol
or
lods
push
or
push
das
sbb
mov
hlt
mov
js
inc
sub
add
pop
lods
imul
cmp
hlt
rcrl
cmp
push
lea
jp
xor
lcall
clc
jns
xchg
sbb
cmc
ret
testl
add
inc
pop
call
cmp
jl
cmp
xchg
jnp
cltd
insb
jp
cmp
mov
or
sbb
push
push
pop
cmp
mov
inc
test
fbstp
andl
fistps
fdivrs
insb
js
mov
loop
or
sbb
cmp
push
or
xchg
aaa
subl
inc
pop
or
rcrl
insb
mov
jecxz
cmp
cmc
jbe
sbb
jle
inc
mov
and
sbb
mov
shrl
popa
dec
sbb
mov
pop
mov
sbb
orl
or
sahf
int
or
icebp
aas
loop
fdivp
sbb
fwait
pop
inc
mov
in
adc
adc
pusha
hlt
pop
ss
cmp
or
inc
add
xor
dec
jg
xchg
fisttpll
out
movsl
pop
ja
dec
jmp
fldln2
dec
les
sub
xor
xorl
mov
lds
mov
xor
outsl
iret
daa
mov
add
push
inc
rclb
push
dec
daa
xor
in
cmp
test
pushf
fcoms
repnz
push
stc
push
lcall
scas
cmp
add
fmul
lret
pop
add
fsubr
jb
iret
jp
cmp
dec
jne
inc
sbb
ret
push
mul
movsl
repnz
add
bound
insb
int3
pop
mov
pop
rorl
mov
ja
scas
jmp
insl
add
cmp
dec
mov
mov
and
cs
dec
fsubs
data16
lds
push
push
xchg
fwait
and
adc
sbb
negl
xor
mov
jo
loop
and
stos
popa
enter
popl
push
sub
cwtl
xlat
pop
lock
pop
sub
clc
data16
sub
mov
fsubrp
jb
cmp
cmp
cmp
fdivrs
in
pop
aad
or
dec
test
push
cmp
mov
mov
lds
scas
jae
mov
repz
ljmp
mov
fstpt
fwait
mov
test
mov
ss
mov
push
outsb
mov
hlt
test
daa
in
inc
lahf
out
cmp
jge
xchg
popf
lods
adcl
sub
push
xor
sub
mov
pop
int
cld
cmp
sub
xchg
mov
dec
into
es
add
roll
jmp
popf
imul
mov
push
in
lock
push
mov
out
int
pop
cmp
add
push
push
ds
sbb
lods
mov
or
mov
sbb
sbb
jnp
xor
arpl
and
and
ja
pusha
mov
shl
je
adc
aam
out
pop
nop
lret
comiss
push
xchg
out
lods
cld
jb
ja
dec
mov
std
or
testb
jns
push
cmc
cmpsl
ret
pop
pop
pop
mov
cli
sbb
lcall
pop
nop
pop
aad
sub
pop
icebp
sbb
pop
add
jl
fidivrs
sti
mov
loop
dec
jecxz
lea
jp
lods
clc
ljmp
or
faddl
into
add
pop
dec
push
pop
iret
icebp
imul
push
push
repz
and
push
pop
pop
fildl
rorl
test
jnp
or
mov
mov
mov
repnz
push
ss
mov
cmp
xchg
je
add
cmp
mov
cmpsl
call
push
lock
loop
test
mov
orl
adc
inc
pop
adc
dec
pop
mov
and
dec
lcall
ja
push
fs
inc
js
ja
push
je
pop
or
push
mov
sti
cmp
gs
dec
xchg
mov
in
fdivp
pop
gs
test
cltd
xor
arpl
cmp
jb
cmc
fadd
fldenv
fldenv
leave
cmc
jbe
out
jb
movsl
sbb
sti
test
push
cmp
in
sbb
push
push
ja
jns
stos
addr16
test
pop
int3
repz
or
push
sub
daa
mulb
sbb
and
stos
or
cmc
std
mov
out
cmp
pop
call
cmp
add
aam
fsubrl
mov
rol
insb
dec
xor
sahf
repz
mov
hlt
or
pop
call
cmp
add
and
fdivs
add
inc
pop
xchg
lret
test
gs
lods
mov
dec
pusha
loop
mov
cli
outsl
and
push
and
dec
adc
cmp
adc
test
scas
rol
stos
sbb
pop
pmulhw
mov
cltd
rcr
pcmpgtb
ss
ret
fisttps
sbb
xchg
test
cltd
lcall
movsl
std
mov
mov
add
mov
repz
pop
les
sub
sti
and
sub
or
push
sub
lret
mov
adc
push
cli
mov
les
sbb
mov
imul
rcrb
pop
jae
mov
mov
cs
dec
pop
sbb
daa
and
jb
aad
xor
mov
xchg
cmp
ficomps
push
data16
sahf
test
xlat
mov
inc
mov
movsl
cmp
or
xchg
stc
pop
negl
in
lea
or
rol
mov
sti
sbb
stos
sahf
popa
movb
push
pop
lret
or
add
movsb
ret
mov
cltd
aam
rcr
mov
cwtl
xchg
clc
and
ror
push
sbb
add
fs
std
fnstcw
shl
pop
loope
mov
dec
popa
repnz
push
pop
mov
mov
dec
mov
adc
adc
add
in
notb
lret
mov
pop
es
dec
addr16
inc
mov
lcall
mov
jmp
sbb
fstl
scas
jg
xor
dec
or
aaa
dec
xor
loope
sub
add
insb
jnp
daa
repnz
inc
stos
cmpl
outsb
pop
push
fdecstp
cwtl
and
add
mov
test
in
jle
fmul
jbe
mov
mov
nop
arpl
xchg
dec
icebp
inc
test
add
icebp
xchg
fldlg2
vmwrite
sbb
inc
movsl
and
mov
pop
arpl
jle
and
xlat
jbe
or
cmp
mov
mov
in
stos
mov
out
xor
or
push
pop
or
jp
sbb
movsb
xor
push
pop
inc
mov
or
mulb
lock
jmp
adc
or
xchg
or
insb
fstl
add
jmp
xchg
add
push
jmp
cs
insl
int
and
fwait
or
les
mov
sarb
mov
stos
xchg
mov
lret
sub
add
cmpsl
cmp
int
cmp
jge
add
sub
push
dec
xchg
fcompl
jmp
pop
or
sbb
mov
sub
rcrb
inc
xchg
movsb
bound
sub
out
sti
xor
xor
popa
stc
out
pushf
jb
aam
adc
pop
jmp
push
arpl
xchg
imul
mov
imul
insb
inc
shrl
sbb
and
fidivs
push
mov
add
stc
vpaddb
in
jmp
fisttps
data16
mov
repz
push
fs
pop
pop
or
xor
in
mov
and
lea
aas
lds
jo
add
outsb
jg
lods
xor
push
dec
fcoml
cmp
add
rcl
xchg
push
call
out
xchg
xchg
pop
in
int
and
lret
add
push
in
sub
mov
test
in
ljmp
mov
add
into
and
inc
lds
das
jmp
clc
shrl
cmp
jo
push
or
pop
insl
adcb
jl
mov
jle
and
js
loope
push
xchg
mov
lods
iret
int3
ss
daa
and
inc
pusha
stc
aam
push
dec
sbb
fwait
leave
movsl
aas
mov
aam
aam
and
les
jbe
adc
loopne
rcl
clc
fadd
test
jg
adcb
mov
mov
ja
cmp
jne
dec
icebp
insl
and
xor
popa
mov
mov
ret
and
jge
shrl
cmc
andb
repnz
push
std
xchg
mov
aam
ja
nop
mov
pop
ds
cmp
negb
sbb
mov
mov
mov
lcall
lods
or
or
rcll
adc
stc
sti
or
mov
daa
cli
mov
jbe
in
jo
aaa
les
scas
xchg
nop
sahf
out
add
in
lea
js
sbb
pop
ret
pop
mov
xor
mov
pushf
hlt
sbb
xor
pop
dec
cmp
inc
or
insb
adc
pop
sbb
cmp
cmpsl
push
cmpsl
movq
movsb
out
mov
inc
cmpsl
outsb
pop
jb
cmpsb
cmc
sar
jmp
push
sbb
pop
sbb
loopne
sub
fsts
scas
stos
push
add
jne
ret
xor
add
daa
fs
call
hlt
lds
inc
data16
push
bound
mov
and
sbb
icebp
lds
sti
and
les
mov
jl
push
mov
pop
lret
cmp
ret
mov
iret
mov
push
jmp
ficompl
mov
sub
out
cwtl
daa
fldenv
fs
lock
mov
das
and
push
mov
and
arpl
sbb
icebp
mov
in
shl
pop
mov
loope
inc
inc
add
push
outsl
and
inc
testl
bound
nop
xchg
das
or
lret
push
call
lods
setl
mov
xlat
dec
decb
pop
pop
xchg
inc
call
addr16
cmp
insb
out
or
stos
dec
gs
cs
fmuls
sbb
xor
ljmp
xchg
push
out
jb
mov
cmp
mov
cmp
mov
pop
lea
loopne
dec
iret
mov
mov
sbb
sahf
xchg
icebp
push
inc
jno
add
mov
jle
popa
mov
scas
or
or
in
lcall
orl
icebp
and
js
xor
push
add
dec
arpl
insl
push
out
cmp
pushf
push
adc
lret
add
lret
jns
pop
jno
mov
inc
push
in
pop
fdivrs
xor
pop
jle
pushf
mov
cltd
arpl
insl
loope
and
push
repnz
push
sbb
ja
push
adc
mov
pop
imull
push
fsubrl
mov
nop
jge
cs
mov
sub
fbstp
dec
cwtl
xchg
or
lea
in
jge
pop
dec
ret
addl
stos
cmpsb
pop
dec
pop
pop
adc
xchg
push
cmpsl
mov
jo
bound
nop
cmpsb
subl
loopne
mov
dec
test
das
imul
out
lret
fadd
or
divl
mov
dec
shl
in
adc
pushf
jmp
sub
mov
sarb
pop
popf
hlt
sbb
sub
arpl
jecxz
loope
fsub
shlb
add
sti
js
mov
sub
mov
xor
rorl
mov
test
add
push
test
repnz
add
add
cltd
shll
push
scas
pop
inc
outsl
arpl
jle
lock
add
xor
repnz
push
cmc
lds
cld
fs
decb
xor
ds
in
fbstp
xor
xchg
add
rcrl
pop
or
pop
filds
adc
call
xor
imul
ja
out
adc
cwtl
cmp
test
pop
movsl
loope
cmp
sbbl
shl
addb
or
mov
out
aaa
faddl
movl
data16
jp
xchg
push
sbb
divb
icebp
pusha
rcll
mov
mov
cmp
out
push
les
popf
xchg
out
bound
xor
inc
int
sub
inc
insb
and
sti
mov
pop
cmp
pcmpgtb
xorl
cmp
hlt
xlat
jl
mov
mov
icebp
mov
fcoml
pop
les
pop
xchg
xor
push
js
inc
xor
lret
jbe
std
insl
pop
xchg
bound
test
insl
adc
jge
test
call
mov
mov
xchg
xor
bound
mov
lret
dec
dec
jmp
pop
sub
cmp
or
imul
cmp
sub
mov
popa
adc
roll
mov
faddl
sbb
addr16
inc
add
test
addr16
scas
aam
push
pop
add
xchg
sahf
cmp
jp
xchg
adc
push
cmp
pop
mov
movsb
pop
adc
xchg
xchg
fucom
decl
cmc
subl
sar
ret
in
push
setbe
sti
pop
push
add
addb
loopne
dec
test
jle
dec
cmp
shrb
insb
enter
jae
push
mov
mov
sar
insl
xor
mov
or
les
jae
cmpsb
scas
dec
jecxz
xor
and
stos
inc
out
xchg
add
test
jo
xchg
je
jbe
sahf
mov
xchg
fisubrl
lods
lods
mov
scas
divb
and
add
daa
add
cltd
inc
pop
add
repnz
js
jl
jle
dec
cmp
cmpl
push
pop
xor
cltd
inc
lahf
dec
decl
rcrb
outsl
clc
test
sbb
cmpb
inc
stc
fwait
mov
loop
cmp
add
das
pop
dec
addb
sub
mov
insl
or
into
cs
add
add
mov
call
add
cmp
xchg
xchg
sbb
and
mov
or
in
in
sbb
jno
dec
out
sahf
inc
push
xor
js
push
mov
inc
pop
push
nop
pop
adc
sbb
inc
arpl
loopne
jecxz
and
aad
cmp
insb
jmp
mov
sbb
into
rcrb
mov
lret
pop
es
jmp
xchg
add
in
faddl
adc
sub
sub
cli
mov
cld
push
shrb
in
sub
mov
call
mulb
cmpsl
test
push
add
sbb
add
in
and
hlt
inc
mov
xor
repz
xchg
jbe
cld
lcall
jle
popf
mov
jle
xchg
inc
or
cmp
sahf
xchg
loope
or
sahf
add
fcoml
fwait
push
jmp
and
popf
sub
sbb
mov
rol
mov
and
mov
xchg
aam
test
popa
pop
into
push
push
pop
call
push
xor
cs
test
mov
pop
movsl
mov
adcl
jne
cmpsl
je
lods
sbb
roll
pop
stc
lds
mov
mov
idivl
push
add
cmp
push
inc
add
pop
subl
mov
ret
lock
subb
sbb
in
stos
sti
insl
sahf
mov
dec
clc
jnp
pop
push
ss
jno
js
push
push
mov
pop
add
fcoml
jmp
xchg
push
cwtl
mov
jbe
jnp
test
jb
xchg
test
sub
ss
xor
dec
mov
orl
adc
iret
sub
xor
jp
into
mov
mov
in
jbe
cltd
inc
cwtl
gs
inc
sub
push
cmp
jmp
or
dec
mov
xchg
repnz
cmp
ficoms
fimull
xlat
stos
lahf
mov
fimull
popa
add
dec
je
mov
rcll
xchg
dec
cmp
lcall
imul
and
ret
push
nop
test
sahf
jl
mov
mov
popa
fisubrl
test
jmp
jno
xor
jns
std
xchg
cltd
scas
out
ja
mov
mov
in
mov
sbb
adc
cmp
stos
inc
add
enter
mov
sub
adc
or
test
callw
fcoml
mov
lods
ss
mov
test
pop
lret
out
mov
syscall
fimull
jmp
mov
mov
adc
mov
cmp
shr
cwtl
fwait
mov
es
movsl
cmc
call
mov
out
add
test
cmp
mov
jg
lcall
in
inc
dec
dec
ret
jne
sbb
dec
gs
add
push
icebp
in
pop
mov
cmpsb
imul
fcoml
fidivl
andl
js
ds
loope
loop
fcomip
xchg
clc
les
pop
mov
pop
cmpsl
test
sub
fldl
lock
cmpsl
std
sti
cmp
dec
and
bound
aaa
popf
outsb
jge
mov
jbe
cs
pop
imul
xchg
mov
popf
enter
jmp
sub
bound
inc
fdivrl
add
push
loopne
dec
mov
subb
cmp
arpl
sub
jnp
push
inc
add
loope
inc
mov
mov
rcrb
jnp
mov
cmp
lea
pusha
mov
add
mov
mov
cmp
xchg
mov
adc
sub
ljmp
movsb
adc
sbb
fbld
pop
out
xlat
leave
mov
ljmp
jecxz
dec
ret
pop
imul
les
stos
jg
mov
pop
sub
mov
data16
pop
inc
adcl
lret
mov
movsl
andb
and
pop
sub
enter
stos
mov
add
mov
inc
loope
lret
movsb
add
pop
jnp
xor
fs
sub
mov
fisubrs
jnp
mov
fsubl
outsb
jge
leave
pop
std
inc
sbb
cmp
test
in
jge
pusha
push
repnz
sub
xor
jnp
data16
jb
movsl
xor
cli
out
xor
inc
jmp
mov
pop
xchg
add
imul
sar
daa
mov
push
mov
xor
mov
push
pop
dec
cld
scas
jo
inc
or
mov
hlt
jne
stos
pop
lahf
mov
out
sub
repnz
lahf
pop
inc
push
ja
cs
lret
jne
adc
punpckhdq
jecxz
adc
scas
sbb
jnp
fisubs
push
insl
inc
xchg
int3
ja
pop
stos
popl
daa
lret
dec
je
adc
test
jg
pop
dec
inc
adc
lods
push
cmpsl
xchg
pop
in
xchg
subb
popa
mov
out
mov
imul
push
das
and
in
and
jmp
addl
sbb
mov
cmc
popa
data16
data16
push
pop
sbb
jb
lcall
shr
sub
daa
mov
ljmp
mov
test
mov
popf
bound
adc
leave
or
ret
mov
jb
dec
mov
mov
iret
jne
sbb
or
push
pop
inc
xchg
adc
sbb
pop
mov
fistpll
jo
xchg
jg
aas
xor
or
dec
das
sbb
call
daa
pushf
insb
push
jae
les
jmp
add
iret
push
mov
mov
gs
mov
aas
sti
adc
fdivrl
pop
push
imul
mov
nop
xor
into
insl
push
out
cmp
adc
pop
shll
insb
out
js
sbb
adc
push
imul
cmc
clc
add
sub
rorl
mov
cmc
sbb
js
push
pop
dec
push
mov
mov
adc
or
push
out
out
xchg
out
popf
int
cmp
mov
mov
xor
aaa
pop
shl
scas
psrlq
push
adc
xchg
test
mov
clc
les
or
cmp
insl
clc
push
stos
outsb
out
mov
ja
loopne
test
push
sbb
inc
clc
push
idiv
int3
jle
xchg
sbb
push
shrb
sti
pop
outsl
or
sub
mov
enter
pop
mov
lahf
enter
pop
push
dec
inc
es
sub
js
fnstenv
int3
xchg
xchg
notb
mov
add
pop
or
je
jnp
and
and
sbb
adc
mov
add
rolb
stos
push
cwtl
scas
into
shlb
aad
lcall
xor
out
ja
shlb
jl
jo
aas
outsb
jb
fists
jp
test
pusha
out
shl
or
push
dec
subl
nop
pop
shll
add
jmp
xlat
dec
cmp
or
cltd
jecxz
aad
cmp
in
or
mov
push
popa
pop
mov
clc
js
aaa
je
gs
rcrb
aas
cwtl
ret
lret
sub
dec
inc
fisubrl
dec
cwtl
lea
lahf
pop
jle
sbb
cltd
jge
outsl
mov
das
mov
test
repnz
push
bnd
push
es
aad
fidivl
ss
bnd
push
sbb
pop
push
xchg
inc
cmp
test
popa
cmp
pop
mov
cmp
cmpsb
pusha
sbb
pop
and
aam
sbb
nop
and
pop
xchg
add
dec
jle
repz
lahf
cmpsl
js
xrelease
xchg
fimuls
mov
movhps
stos
xchg
push
mov
pop
loope
dec
in
add
testl
cmpsb
push
out
test
xlat
jmp
push
mov
sbb
jnp
nop
fs
fistpll
iret
add
dec
pop
sbb
mov
addb
jle
sbb
cmpsl
xor
xor
fs
inc
push
sti
test
inc
call
dec
add
sti
mov
xchg
jge
inc
cld
bound
lea
inc
test
mov
mov
mov
push
cmp
out
ljmp
xor
loope
imul
add
or
xchg
les
cmpb
xchg
fdivrp
push
sub
xchg
mov
out
mov
and
shl
dec
mov
and
sarb
cmp
pop
adc
jp
add
shl
sbb
sbb
inc
jmp
mov
mov
and
inc
cltd
enter
xlat
popf
iret
sbb
in
add
ljmp
jns
sub
scas
xchg
xchg
or
insl
dec
jle
push
pop
ja
sbb
push
xchg
test
jo
es
out
fwait
loopne
mov
es
scas
hlt
dec
add
push
test
push
xor
mov
aas
mov
push
inc
mov
std
xchg
inc
mov
test
mov
lods
clc
sbb
lds
lock
jo
out
nop
negl
inc
stc
push
add
lret
xchg
mov
daa
lret
lret
fists
lock
cmpsl
into
adc
fistpl
sbb
test
cmc
ds
adc
jle
icebp
push
stos
xchg
jnp
mov
jno
inc
shl
nop
sbb
pop
xchg
mov
enter
cld
mov
mov
cmovnp
push
push
xchg
inc
lods
mov
xor
add
negb
imul
mov
dec
fiaddl
sub
outsl
insl
fidivrl
imul
shl
xchg
outsb
jmp
or
loope
loop
or
jp
nop
or
int
clc
push
arpl
lods
lret
xchg
popa
mov
rcr
sar
mov
add
aaa
pcmpgtb
mov
rcrb
xchg
add
mov
outsw
std
and
les
or
jg
mov
lea
imul
xchg
push
cs
dec
test
mov
and
push
data16
ja
in
imul
out
bound
inc
mov
cmp
dec
insl
adc
bound
scas
andl
jbe
lds
jl
cmp
jle
je
lret
out
mov
aaa
cmc
mov
lods
ret
das
test
sbb
hlt
add
dec
push
sbb
leave
les
jmp
sub
cmp
aaa
leave
and
push
sbb
lock
xchg
shr
jo
movsl
xchg
nop
fld1
ret
out
mov
cmpsl
sbb
add
shl
adc
or
inc
mov
ds
testl
xchg
cmpb
ret
outsl
adc
fwait
cmp
mov
xor
add
inc
xchg
inc
fisttpll
cmp
and
daa
in
lret
cmp
pushf
xchg
fadd
loop
nop
xlat
imul
and
dec
or
dec
sarl
add
lret
mov
adc
adc
sbb
pop
rcrb
rorl
inc
jae
hlt
and
stc
xor
sbb
movsl
inc
jbe
cmp
cmc
sbbb
rorl
xchg
mov
pop
fs
jl
inc
cwtl
or
push
mov
jae,pt
js
arpl
lea
dec
rcll
aas
xchg
pusha
sbb
ret
and
xchg
jl
filds
push
mov
sarl
mov
dec
dec
mov
lods
pop
pop
mov
psllq
sub
and
int3
imul
ret
xorl
inc
stos
dec
sbb
std
xor
roll
add
subb
ja
movsb
jecxz
hlt
mov
scas
insl
cs
inc
and
aad
sbb
push
and
and
lds
outsl
frstor
sbbl
aad
flds
pop
loope
fisttps
xchg
pop
sub
lock
jno
ret
jge
mov
mov
adc
mov
and
ret
sbb
inc
push
mov
mov
outsl
xchg
call
xor
subl
inc
stos
fs
adc
cmp
dec
and
aas
fdiv
xor
mov
cli
dec
ds
cmc
scas
shr
mov
dec
cmp
daa
rolb
js
leave
adc
scas
dec
cs
inc
inc
jae
in
jo
xchg
cmp
add
or
push
imul
ja
sbb
les
jne
cmp
data16
cld
jp
sti
push
hlt
stc
lods
mov
xchg
mov
push
rcll
inc
pop
fdivrs
push
stc
push
cwtl
cld
push
inc
lods
insb
cmp
aad
in
pop
or
rclb
data16
repnz
test
sbb
aas
dec
dec
jns
fcmovne
ss
ret
jb
pop
push
jmp
fstpt
jae
loopne
sub
dec
repnz
jmp
std
or
ror
push
mov
sbb
sub
in
decl
into
cmp
jae
ja
push
testl
add
daa
dec
repz
lea
roll
mov
aas
rorb
adc
outsb
daa
cmpsb
gs
mov
loop
lahf
bswap
mov
mov
jno
mov
lretw
lret
cld
fidivs
shll
mov
jecxz
or
cmp
and
add
jnp
arpl
push
jns
pop
int
jae
dec
push
out
mov
pop
pop
adc
pusha
pop
mov
gs
in
outsl
lahf
jns
dec
jae
sbb
pop
cmp
movsb
add
in
add
mov
jns
push
aaa
jns
sbb
test
out
insl
sbb
lret
mov
mov
jae
mov
push
sar
adc
adc
out
daa
inc
add
loopne
cmpsl
jne
jecxz
adc
jle
decl
fnsave
shll
mov
dec
sar
incb
cmpsb
ds
or
sbb
add
and
sbb
xchg
lods
cmp
sbb
sub
cmp
lods
jmp
xor
int
add
mov
pop
mov
mov
cmp
xlat
mov
rolb
scas
rcll
cmp
adc
mov
out
sbb
sbbl
ja
push
popf
int
in
popa
and
xor
inc
cmp
ret
push
cs
lds
xchg
mull
insl
jnp
mov
aaa
popf
test
dec
mov
sub
jl
test
add
mov
pusha
sub
add
gs
jg
sarl
mov
into
and
pop
pop
cmp
xchg
push
loope
or
sbb
sub
xor
cmc
cwtl
shll
lret
call
inc
fdivrp
xchg
jno
rorb
pushf
outsl
iret
xor
cmp
or
inc
leave
daa
jo
es
imul
icebp
cmp
and
cmp
sarb
xchg
jg
int
add
sbb
mov
xchg
nop
add
ds
imul
leave
sbb
lret
cmp
dec
imul
fmul
push
xchg
mov
add
sub
dec
jg
push
rclb
cs
or
ss
mov
sub
lods
pop
xor
dec
mov
pushf
inc
popa
jle
lods
sti
dec
pop
inc
rorb
adc
movsl
jnp
adc
jg
mov
jge
rcll
pop
cmp
aas
imul
xlat
jno
sahf
in
pushf
dec
subl
push
cmpsb
mov
rorl
adc
adc
mov
les
inc
or
xor
lcall
sbb
stc
out
cld
ret
jp
sbb
in
testb
push
clc
add
mov
and
inc
jp
sbb
xchg
aad
dec
sbb
pop
jmp
inc
push
and
mov
or
push
mov
arpl
out
mov
jmp
pop
jbe
and
loopne
cmpsb
movsb
mov
std
sub
push
dec
dec
lahf
mov
jno
jb
in
sbb
int
or
fcomip
adcb
js
test
adc
push
inc
jle
mov
xor
rorl
test
ficompl
push
sbb
or
pushf
out
mov
sarl
mov
in
in
adc
xchg
adc
push
repz
pop
pop
jne
or
les
jl
frndint
test
fistl
enter
pop
dec
jle
dec
in
dec
add
test
std
sbb
add
jne
pusha
mov
mov
jo
cs
daa
and
adc
daa
pop
adc
mov
and
xchg
lret
add
mov
cmp
adc
sub
pop
aas
rcrb
outsl
call
pop
pop
mov
mov
adc
xchg
mov
mul
pop
cld
push
das
pusha
fwait
jmp
dec
mov
mov
sub
mulb
jg
shlb
cmp
out
mov
push
mov
int3
std
dec
repz
lret
add
cltd
lret
sub
das
outsl
in
add
jl
stos
fldenv
mov
inc
or
adc
push
into
dec
stos
imul
dec
jmp
mov
adc
push
mov
mov
leave
cli
in
push
jmp
push
test
repz
sub
jo
jne
gs
xchg
jecxz
call
and
aas
dec
jo
mov
jae
mov
rcl
mov
mov
jb
or
in
ret
lock
or
pop
mov
rcll
test
xchg
cmpsb
mov
jns
cmp
mov
jl
sub
js
jno
sub
test
js
cmpsb
daa
mov
sahf
dec
push
lods
mov
push
or
jg
rclb
fstpl
inc
ljmp
stos
dec
push
jnp
lods
mov
jp
inc
testb
mov
mov
out
or
mov
inc
jg
add
aaa
test
aam
jecxz
stos
pop
mov
pop
fisubrl
sub
ret
push
ljmp
mov
inc
mov
jbe
add
in
xchg
shlb
mov
mov
dec
pusha
adc
jecxz
icebp
xorl
xor
sub
jmp
pop
shrl
mov
shl
adc
dec
out
xchg
pop
pop
mov
push
movsl
lods
mov
ficoml
jmp
cmp
shlb
mov
das
dec
adc
pop
sub
adc
jno
adc
cmp
out
cltd
push
mov
pop
cmp
or
xchg
jmp
arpl
xchg
int
outsl
std
or
mov
stos
popf
ret
add
inc
mov
mov
push
mov
cwtl
xor
sbb
stos
cltd
loop
repnz
cmp
xchg
ficomps
loope
rcll
inc
inc
pop
mov
dec
in
jne
repz
lods
pop
sbb
mov
sub
repz
add
mov
mov
cmp
push
fwait
xlat
inc
jns
push
out
out
arpl
mov
data16
add
or
adc
lret
dec
push
fistpl
push
jp
mov
or
cmp
xchg
xor
shrb
cmp
push
pushf
sahf
or
and
fneni(8087
cmp
outsl
adc
repnz
arpl
add
pop
ja
xchg
ljmp
inc
je
cld
test
scas
mov
jb
popa
outsb
std
outsl
jp
lret
mov
pop
and
loope
add
push
xor
inc
sbb
ret
cmp
cmp
mov
shll
push
add
mov
mov
cmp
divb
jae
shrl
mov
sub
mov
das
mov
mov
mov
outsl
fwait
mov
rcl
pop
out
xor
sub
mov
xchg
repnz
inc
mov
arpl
bound
cmpsl
cld
cmp
movsl
pop
hlt
adc
nop
mov
jp
push
sahf
push
mov
fdivl
mov
pop
jnp
sbb
mov
cmpsb
aas
nop
dec
inc
mov
repnz
inc
daa
jo
mov
xchg
iret
inc
mov
cmp
fimuls
push
popfw
or
jae
mov
pop
std
or
cld
movsl
cltd
cmpsl
fwait
sbbl
push
inc
inc
leave
mov
addr16
mov
movsl
test
lret
dec
gs
movsl
dec
pop
mov
fistl
fldcw
dec
sbb
div
dec
call
popa
stos
or
les
fs
in
mov
ds
rcrl
shl
ret
xchg
mov
jmp
mov
lock
rcll
dec
cli
xor
push
clc
movsl
xor
scas
outsb
outsb
push
outsb
jbe
mov
enter
test
movntq
cwtl
jp
cmpsl
pop
cmp
sbb
xor
fdivrs
iret
das
fsubl
mov
mov
in
adc
mov
xchg
sbb
inc
xor
cmp
in
outsl
out
jns
adc
adc
push
adc
xchg
mov
xchg
fsubs
iret
mov
sbb
sar
cmp
add
cmp
and
xor
loop
lret
add
movsl
push
js
mov
sbb
ret
insb
fdivl
ret
and
push
add
cltd
daa
cmp
arpl
sbb
cli
adc
mov
dec
arpl
push
ss
mov
push
xchg
stos
rsm
lcall
mov
ds
xchg
push
pop
gs
sahf
stos
ret
stos
test
jmp
enter
mov
xchg
adc
sub
cmpsl
mov
sub
or
outsb
dec
filds
es
testb
cs
push
inc
rolb
jb
std
insb
mov
adcl
cmp
push
mov
lahf
in
jg
push
mov
inc
adc
adc
mov
xchg
es
mov
pop
ficoml
std
sbb
ret
mov
addr16
rclb
out
cmp
scas
scas
xchg
xlat
cmp
fstl
mov
mov
sub
arpl
insb
mov
inc
lea
ret
fldenv
and
bound
adcb
cmp
push
leave
push
icebp
xchg
mov
inc
pop
mov
and
sti
push
jp
and
out
cmpsl
imul
repz
mov
sub
je
out
xor
cmp
loop
add
inc
inc
jecxz
int
rcr
mov
fimull
mov
cmpsl
push
xor
sbb
mov
or
adc
in
mov
push
test
int
cld
add
add
and
xchg
pop
lock
shrb
sahf
jno
and
pop
pushf
call
loop
cmp
ror
pop
adc
and
pop
aad
xchg
out
hlt
jmp
popa
push
push
jo
dec
ja
mov
arpl
dec
jbe
mov
mov
cwtl
jbe
or
mov
negb
icebp
addr16
insb
iret
jp
dec
test
fwait
dec
fmulp
or
push
adc
sahf
fcomps
dec
push
stc
jnp
mov
add
imul
xchg
jg
sub
pop
dec
push
xchg
pop
out
jge
mov
mov
adc
xor
testb
add
jbe
das
imul
lcall
xor
xor
repnz
pushf
ret
gs
stos
inc
pop
mov
mov
cmp
std
es
rol
jg
xchg
pop
and
inc
insb
cltd
lcall
and
sbb
daa
unpckhps
popf
push
lea
cs
je
cmp
ds
xchg
fwait
shll
leave
push
loope
nop
aad
fsubrs
frstor
and
inc
sbb
sub
fnstcw
nop
cli
ficoml
add
test
js
jg
fnstcw
push
xor
enter
push
add
shr
mov
jbe
mov
cmp
jo
andb
sub
out
fwait
cltd
scas
cwtl
sarb
sbb
pop
js
mov
mov
in
push
inc
inc
add
lahf
lock
add
push
jbe,pt
push
lods
cld
lret
fs
jmp
jns
icebp
shl
mov
pop
test
jbe
dec
not
sbb
push
js
dec
mov
push
addb
jp
dec
pop
add
xlat
cmc
aad
push
imul
add
cmp
xor
fcoms
loope
xchg
push
cmp
jle
test
fldpi
movsb
fidivrs
icebp
addl
mov
dec
gs
or
dec
imul
das
push
adc
shrl
iret
dec
cmpsb
sbb
pop
repz
mov
inc
leave
in
imul
cwtl
mov
cwtl
xchg
roll
xchg
out
out
test
mov
repnz
mov
xor
or
adc
in
mov
mov
add
loope
int3
mov
or
mov
loopne
inc
adc
pop
out
xor
aad
pushf
jmp
pop
push
add
insb
addr16
mov
cltd
gs
xchg
adc
cmp
loopne
mov
adc
and
icebp
and
dec
popa
mov
pop
and
mov
outsl
dec
js
fisubl
sub
cmpl
jp
mov
int
ss
popf
outsl
xor
push
ffreep
daa
imul
push
push
push
movsl
fimuls
sbb
bound
mov
jne
add
push
inc
sarl
loope
and
dec
mov
out
ljmp
jmp
notb
mov
std
in
xchg
adc
push
inc
orl
loope
xlat
xor
enter
mov
xlat
mov
shl
ljmp
add
out
sub
and
mov
xchg
cmpsl
cld
fsubrl
lds
in
ret
mov
call
or
jmp
push
xor
xchg
iret
sahf
inc
dec
mov
cmp
pop
repnz
cwtl
lock
sub
and
les
stos
jno
lret
ret
dec
sbb
rolb
rolb
pop
outsl
add
test
cwtl
xor
or
xlat
lcall
pop
push
lcall
push
sub
hlt
scas
enter
outsl
leave
cli
pop
imul
lods
rep
push
out
in
jo
sub
out
and
popa
jo
sbb
pop
dec
mov
jl
and
sbb
xor
or
out
and
xlat
cmpsb
out
add
xor
ljmp
mov
jecxz
cmp
xor
jb
push
out
decl
rclb
scas
and
jmp
add
iret
mov
js
push
sbbl
fwait
mov
sbb
mov
inc
mov
dec
leave
sti
sub
adc
xchg
dec
jnp
pop
in
push
pop
mov
jmp
mov
cli
sar
sahf
js
dec
xchg
test
add
lcall
ljmp
sbb
mov
leave
sarl
mov
adc
mov
mov
or
or
sub
lods
bnd
negb
sti
mov
insb
in
ficoms
shlb
or
daa
scas
fs
add
js
out
ljmp
ficoms
imul
ds
and
mov
xchg
leave
cmp
sbb
in
add
sbb
outsb
arpl
jmp
in
in
mov
inc
or
inc
sub
loopne
fnsave
arpl
enter
cmpb
or
fcomp
push
sbb
movsb
dec
int3
add
and
sbb
adc
sbb
add
into
test
loop
lret
mov
sub
dec
shlb
xlat
or
push
mov
push
je
cmpsl
add
aaa
mov
mul
xchg
fimull
jno
mov
and
jns
addl
and
jne
dec
mov
xor
pop
mov
push
in
mov
popf
mov
push
xchg
xor
dec
mov
mov
dec
mov
adcb
jne
dec
dec
aad
imul
and
iret
fmull
xor
out
xchg
mov
adc
inc
imul
mov
adc
call
gs
dec
cmp
pop
push
jmp
sub
jle
inc
add
sbb
out
ret
popf
fwait
add
mov
fsubrl
xor
push
movsb
mov
pop
jge
push
lret
fsubrs
mov
push
xor
cmp
push
adcb
pop
imul
mov
sarl
add
sbb
pop
mov
xchg
xor
adc
leave
dec
test
aad
xor
arpl
imul
xlat
cli
aaa
ficoml
mov
rcrb
mov
jns
fisttpll
out
ds
dec
dec
int
and
sub
jecxz
sbb
jne,pt
mov
mov
mov
jmp
dec
or
push
mov
sbbl
xor
add
cli
xchg
je
mov
jo
hlt
mov
pop
push
jl
in
mov
std
jg
xchg
cmp
jae
pop
fwait
cmp
dec
pop
pop
bound
in
dec
in
xchg
out
imul
aas
and
dec
in
and
aad
out
mov
and
sub
fsts
xchg
inc
fwait
ror
pop
xor
into
lret
push
mov
les
mov
jecxz
sub
mov
call
dec
jo
lds
inc
popa
inc
jg
ja
adc
outsb
and
lcall
test
movsl
shlb
out
jl
and
test
jmp
movsb
add
xchg
lret
je
std
fwait
pusha
lods
movsl
test
inc
jle
idivl
mull
inc
cmc
lock
xchg
cmp
loopne
dec
inc
dec
pop
loopne
out
sbb
push
xchg
push
sarl
lods
xor
adc
xchg
dec
jns
xchg
jo
and
xor
xor
sub
jle
adc
add
sub
sbb
pusha
test
pushf
sub
dec
dec
xor
xchg
rcl
cmc
sbb
add
bound
div
imul
ds
sub
fidivs
incb
js
jmp
test
test
loope
adc
sub
out
ja
push
movsb
cltd
add
push
mov
inc
xchg
dec
movsl
out
xor
inc
fsubl
pop
or
adc
cmc
xlat
orb
in
out
sarl
push
lcall
sbb
pop
imulb
cmp
jno
push
sub
sbb
lods
rcrb
test
test
mov
dec
ror
imul
and
sbb
movsl
jg
push
xor
fldcw
das
push
xchg
jle
dec
jns
add
add
cmp
pop
mov
stos
xor
in
lcall
test
mov
or
pop
scas
mov
sub
icebp
cli
loop
mov
push
jg
rorb
add
data16
sub
daa
lret
xor
fs
xchg
dec
jno
int
daa
lock
int
mov
inc
aas
ds
loope
cli
mov
or
lods
cmpsb
sbb
in
lock
adc
dec
testb
adc
cmp
inc
pop
roll
outsl
cli
cmp
sbb
clc
icebp
push
push
lock
sub
cmp
push
mov
in
push
mov
sub
pop
adc
jnp
xchg
imul
adc
jb
inc
mov
sbb
testl
in
nop
lret
sbb
push
test
nop
scas
ret
pushf
icebp
inc
mov
imul
inc
jecxz
mov
les
ja
inc
ds
popa
pop
idivb
mov
mov
xchg
outsb
and
inc
adc
ficoms
test
jl
and
lea
cmp
popa
sub
ret
roll
push
sub
mov
nop
popf
incl
xor
repz
call
add
mov
clc
loope
xor
lahf
sbb
xor
aad
jmp
mov
xchg
mov
clc
fwait
popf
or
mov
inc
pop
inc
cltd
or
aaa
pop
xor
mov
pop
jecxz
push
cltd
mov
enter
add
xchg
adc
and
sbb
stos
add
mov
mov
loopne
dec
iret
mov
cmp
push
fiaddl
ror
lret
pop
pop
jae
inc
loop
js
iret
adc
movsl
mov
xchg
jmp
addr16
fists
jne
inc
mov
sti
xor
movl
jecxz
idivb
inc
xor
xor
dec
push
add
mov
mov
popf
lds
clc
mov
pop
mov
test
fcmovne
lods
lret
xchg
sarb
out
xor
adc
jle
stos
sbb
or
aaa
mov
out
lret
mov
xor
out
loop
dec
cmp
aaa
add
pop
sti
imul
and
popf
sbbl
incl
sub
adc
jle
fstl
pop
xchg
cmpsb
out
sbb
fwait
lret
dec
sub
hlt
push
scas
je
pop
cmp
cmp
add
add
xchg
and
cmp
arpl
vmwrite
fisttpll
imull
pop
xor
push
lcall
adc
xchg
paddd
sbb
xor
adcb
das
imul
inc
stos
inc
in
push
sbb
push
mov
mov
sub
push
and
stos
cld
push
arpl
imulb
ficomps
xchg
leave
adc
test
lret
cli
pop
outsl
test
xchg
or
xchg
and
out
ds
add
cmp
inc
xchg
cmp
cmpl
sbb
mov
fwait
cmp
cmc
push
out
aas
dec
hlt
sub
adc
pop
xchg
dec
fldt
inc
out
clc
xchg
jmp
inc
jecxz
sub
cmp
mov
aas
ljmp
sbb
sub
in
cmc
inc
test
in
fwait
cmpsb
dec
lret
xor
xchg
fsubs
popf
push
and
ficoml
mov
aaa
pop
add
cmpsl
xchg
fwait
mov
rol
fidivl
or
ret
rol
inc
les
inc
adc
lret
stos
test
imul
push
loopne
inc
aam
test
inc
xor
mov
leave
mov
mov
mov
neg
cmp
cmp
mov
testb
aad
les
adc
ds
fldenv
inc
mov
pop
les
mov
dec
stos
sbb
sbb
testb
adc
adc
into
sub
jnp
mov
mov
mov
push
pop
cmp
sbbb
pop
adc
into
inc
lret
aam
and
out
jb
ds
mov
inc
sbb
pop
and
dec
sub
adc
jg
push
sub
push
popf
and
dec
add
loopne
sbb
jae
lret
fs
subb
xchg
fdivrs
pop
or
or
pop
mov
lods
inc
xor
mov
or
cmp
stos
xor
movsl
sub
jmp
mov
xchg
lahf
sub
mov
test
les
xchg
mov
lock
mov
adc
mov
push
pop
dec
stc
pop
imul
rol
dec
incl
test
xor
adc
adc
mov
or
jle
test
pop
push
mov
jo
adc
pop
rorl
add
scas
mov
imul
mov
sub
xchg
iret
call
stos
mov
ret
push
mov
es
clc
lods
pop
insb
sbb
cld
cmpsl
std
adc
subb
push
mov
and
xlat
dec
popf
cmpb
clc
inc
hlt
lcall
dec
push
inc
std
inc
sub
dec
xor
mov
inc
xor
pop
push
push
dec
aas
sbb
pop
xchg
push
sbbl
mov
pop
in
loope
imul
mov
push
mov
in
movsb
in
lret
js
decl
jae
adc
in
add
and
arpl
lods
push
aas
mov
fistps
sub
and
rclb
clc
addb
leave
hlt
call
loop
pop
mov
mov
shlb
outsb
mov
rorb
std
roll
xchg
add
or
pop
mov
cmp
sbb
and
add
mov
adc
add
popf
adc
pushw
sbb
push
mov
mov
popa
push
out
cmpsl
test
into
push
sbb
insb
pop
movsb
fildl
pop
arpl
jbe
into
adc
popf
xchg
mov
xchg
xchg
adc
mov
lock
pop
stc
lea
dec
mov
les
fwait
outsl
ret
cmpsb
or
inc
test
aam
pusha
lahf
push
dec
pusha
pop
outsl
in
loop
inc
pop
jne
dec
pop
pop
jne
sbb
sub
pop
rorb
daa
push
mov
jmp
dec
mov
adc
pcmpeqw
gs
lock
add
mov
adc
shll
idivl
imul
fsts
jle
sti
sbb
mov
mov
pop
lret
cmp
sub
insl
sbb
xchg
push
mov
loopne
loop
lods
add
stos
dec
shll
inc
mov
cmp
imul
cmp
shlb
data16
shrl
cld
repz
pop
jo
call
pop
mov
mov
in
clc
cmpsb
dec
cli
mov
out
adc
sub
insb
sbb
ds
push
inc
or
push
xchg
cmp
mov
outsb
cmc
fnstenv
push
sub
mov
aaa
mov
inc
orl
in
in
lcall
jmp
adc
ja
in
loopne
push
ljmp
dec
dec
pop
aad
push
sbb
aam
les
out
push
sti
mov
sbb
lahf
pop
sub
push
jno
imul
aaa
mov
or
test
lret
jp
and
add
sbb
inc
lea
shll
and
mov
push
movsl
sub
mov
out
xchg
xchg
push
push
rorb
inc
add
test
xor
popa
test
xor
push
mov
lock
rorl
lods
mov
sbb
xor
pop
cmp
fcoml
pop
sub
jb
and
adc
inc
mov
ja
repnz
rclb
pop
les
or
xchg
enter
xor
dec
cltd
test
pop
lea
cmp
push
and
jg
or
es
adc
dec
movsl
add
les
inc
jo
ja
jmp
add
lret
pushf
incb
jne
repz
mov
add
movsl
lock
adc
xchg
sub
sbb
mov
cmp
nop
mov
push
jns
out
fcmovu
jg
jo
and
pop
int
mov
dec
ja
dec
push
or
cmp
sti
and
dec
xchg
out
sbbb
cmc
sti
fildl
sbb
lds
inc
mov
or
sar
xor
mov
inc
enter
lcall
int
ljmp
lret
ss
jle
dec
xchg
pusha
xchg
mov
cwtl
mov
ja
pop
mov
push
inc
inc
push
mov
push
aaa
or
shll
push
and
or
cmp
test
or
jnp
xchg
fimuls
fdivr
into
mov
or
inc
shl
adc
pop
mov
cltd
or
sbb
pushf
or
mov
sub
mov
loop
arpl
dec
adc
push
inc
or
mov
add
in
adc
mov
mov
xchg
mov
and
cli
push
sub
and
test
and
xchg
idivb
jl
out
push
das
rorb
jae
xchg
fstpl
divl
cmp
pusha
xor
bound
in
mov
sbb
sbb
mov
pop
out
adc
mov
call
push
sub
cmp
js
out
jbe
call
imul
lea
arpl
dec
cmp
push
js
dec
jbe
fiadds
or
push
rcrl
dec
sbb
mov
call
iret
iret
out
mov
imul
mov
and
cli
jmp
std
mov
pop
inc
stos
push
inc
sbb
inc
mov
nop
add
mov
addr16
fwait
test
mov
xor
mov
sbb
adcb
js
std
lret
mov
jle
pop
and
and
stos
jle
cmp
or
and
inc
xor
push
dec
ja
test
shrl
pop
decl
repnz
xor
stc
inc
data16
or
fs
jae
test
mov
jl
mov
cs
stos
outsb
imul
out
sub
out
sub
arpl
ret
aam
mov
lcall
mov
test
mov
lret
and
cwtl
push
pop
stc
xchg
loope
inc
lea
mov
jnp
xor
mov
add
cmp
mov
repnz
jg
call
mov
xchg
mov
fcmove
das
add
push
jae
repnz
jnp
fidivrl
out
lahf
hlt
notb
fwait
into
mov
mov
shr
test
test
mov
inc
lds
lahf
adc
lock
stos
mov
pop
lock
mov
sarb
add
aad
gs
movsl
sub
sbb
cmp
arpl
movsb
inc
imul
subb
mov
dec
data16
add
insb
mov
shrb
inc
and
lcall
mov
mov
sub
pop
js
pusha
cld
jp
int
clc
and
outsl
pop
push
movsb
xchg
out
adc
out
lods
mov
and
test
adc
fadd
fmull
xchg
incl
pop
mov
js
push
js
or
adc
and
mov
and
fildl
mov
faddl
or
and
test
leave
cwtl
jmp
subb
push
out
and
xchg
rcll
mov
pusha
or
adc
jmp
jns
push
xchg
jae
mov
aad
xor
and
xor
push
dec
mov
js
stos
fidivrl
push
jp
fwait
aas
push
fmull
shrl
mov
jmp
fs
dec
sbb
dec
sti
adc
adc
or
sub
mov
cmpl
les
mov
adc
in
and
lods
mov
lahf
repz
mov
in
fbstp
ret
jae
test
popl
cmp
dec
cmp
out
mov
pop
test
push
mov
xchg
stos
shr
push
xchg
mov
movsb
iret
sbb
rcl
mov
xor
repz
sbb
and
sarl
insl
lret
jmp
lock
cmpl
pushf
or
pop
adc
je
fimuls
or
in
and
push
inc
fwait
pop
shr
sbb
das
adc
cmp
mov
jg
or
and
sbb
outsb
push
neg
insl
push
xchg
mov
mov
xor
mov
js
cwtl
sub
mov
jbe
sub
cmp
xchg
push
fcomi
idivl
dec
mov
std
sbb
pushf
and
stos
mov
ja
imul
mov
and
adc
dec
adc
xlat
jmp
arpl
xor
sub
add
mov
lds
dec
pop
xor
ret
out
jns
adc
xor
mov
in
xor
lods
cwtl
sub
lret
in
ficoms
xor
xlat
mov
jp
aam
dec
mov
mov
xchg
aad
lret
aad
mov
mov
aam
sarb
xor
pop
je
out
sub
jp
pop
mov
pop
xchg
ja
mov
pusha
xor
jmp
inc
pop
int3
out
orb
push
in
cld
pop
pop
inc
cwtl
dec
insl
and
jg
mov
aad
push
enter
pop
mov
adc
mov
test
adc
aas
pop
xchg
gs
dec
jmp
int
pop
pop
mov
mov
imul
filds
or
sbb
lock
in
sbb
pop
dec
pusha
imul
xor
or
addr16
and
cmp
lea
inc
call
bound
inc
xor
ret
sbb
clc
pop
dec
test
out
xchg
scas
rep
outsl
push
mov
mov
mov
xchg
xchg
test
cmp
cli
adc
stos
call
jb
sbb
xchg
iret
mov
xor
inc
add
mov
ljmp
xor
das
jle
push
adc
pop
sub
repz
pop
or
cwtl
nop
xchg
sub
inc
and
nop
subb
xchg
ja
repnz
mov
xchg
push
xchg
or
xchg
cmpsl
push
aaa
mov
dec
stos
outsl
push
std
ds
mov
add
lea
sub
jo
sbb
aas
cwtl
add
jnp
je
mov
mov
stos
push
push
cmpsb
add
mov
arpl
shll
stos
mov
push
arpl
mov
inc
lea
and
push
mov
lods
xchg
xor
push
push
icebp
push
pop
push
loope
cmp
enter
adc
and
lods
rorb
repz
out
push
divl
push
icebp
jne
push
in
loop
sub
mov
push
sbb
and
int3
inc
pop
add
xor
aaa
nop
mov
mul
mov
fdivrl
stc
push
and
fcompl
sbb
xor
dec
cli
inc
adc
sbb
add
jns
and
mov
lock
jnp
popf
adc
mov
lcall
clc
ss
jmp
and
icebp
and
jp
loopne
out
sbb
scas
cmpsb
cltd
xor
insb
movsb
xchg
fwait
pop
pop
int3
xor
call
jne
sbb
mov
mov
out
mov
pop
sbb
xchg
movsb
xchg
adc
imul
sub
add
xchg
js
fisubrl
or
cli
btc
call
addr16
xor
push
scas
xor
imul
dec
sbb
pop
pop
test
int3
out
ret
and
or
imul
out
or
mov
jb
shll
cli
fistpll
je
psrld
mov
push
add
inc
popa
dec
shrl
ret
movsb
xchg
fidivrs
mov
aam
mov
popf
lods
mov
mov
jle
inc
push
jge
sbb
sub
enter
aam
inc
je
jne
lret
ja
sbb
dec
cmp
mov
dec
cmp
jp
test
loopne
ret
test
test
xchg
ret
stc
push
aas
cmp
inc
cmp
loopne
pop
push
lds
jle
enter
and
dec
or
cld
add
mov
fdivr
dec
test
lcall
sub
jle
lods
lods
or
dec
push
sbb
addb
in
and
aam
movsb
addr16
cmp
cmc
shl
add
nop
movl
out
pusha
add
xchg
out
bound
xchg
cld
cmp
into
iret
inc
aam
xchg
pusha
push
or
pop
adc
adc
sub
fidivl
scas
fldt
rol
les
push
jecxz
ficoml
mov
or
sub
lock
push
shrb
mov
lcall
jnp
out
and
add
or
mov
adc
sbb
cwtl
je
out
repnz
aaa
pop
cmp
cmp
aam
sbb
xchg
dec
int3
lds
test
add
mov
xchg
jnp
out
cmpsl
add
cmpsb
aam
cld
hlt
mov
mov
mov
arpl
xor
jmp
test
fwait
lea
lret
outsb
popa
mov
xchg
xorb
movsl
or
xchg
lahf
cmp
and
popa
push
ss
xchg
adc
cmp
stc
outsl
inc
push
jl
cmc
lcall
and
neg
fiaddl
lea
mov
sub
imul
leave
test
jge
ret
insl
and
lods
mov
mov
iret
in
mov
xor
leave
scas
dec
fwait
hlt
pop
push
sarl
sub
mov
in
mov
inc
ljmp
and
ficomps
inc
enter
es
aaa
icebp
xchg
cmp
shll
jl
cmp
mov
test
arpl
mov
mov
jg
mov
scas
mov
es
fs
lods
dec
add
pushf
ds
jg
dec
out
mov
lds
fdivr
shrb
sub
testl
lock
stos
mov
arpl
cmp
inc
push
xor
loope
push
dec
lock
hlt
dec
dec
in
xchg
lret
test
ret
mov
cwtl
hlt
sub
xchg
imul
repnz
rorb
dec
mov
test
lret
xchg
enter
xorb
sbbl
out
enter
adc
nop
sbb
push
push
adc
int3
adc
inc
cmc
mov
mov
lock
or
mov
test
jb
ja
xlat
mov
enter
mov
lea
mov
cmp
or
lahf
js
cmc
fwait
xchg
loopne
mov
xchg
bound
aad
adc
push
mov
pop
aad
cmp
cmp
and
sub
lock
xchg
rcrl
cmp
fsts
add
in
mov
dec
cwtl
mov
add
pop
call
mov
test
cmp
add
lds
dec
mov
jg
fisubrl
out
es
cli
jo
sbb
xchg
setp
or
dec
out
iret
mov
inc
ficoms
jo
sub
jno
lock
leave
inc
mov
sahf
mov
mov
xlat
jmp
pop
xor
lock
stos
iret
loope
fs
outsl
sbb
mov
cmc
stos
dec
and
sub
idivb
test
xchg
xor
fnsave
dec
test
repnz
xlat
mov
mov
inc
sahf
jno
mov
sahf
mov
xchg
mov
fdivrl
or
mov
xchg
aas
jns
ficomps
jnp
sti
adc
pop
jb
fbld
fcmovnb
pop
sti
out
addr16
lods
cwtl
out
jle
pop
mov
sbb
jnp
dec
cmpsl
inc
lret
int
daa
jmp
lcall
and
movsl
enter
das
or
pop
sub
pop
add
jns,pt
into
pop
bound
scas
push
stc
mov
inc
test
xchg
aaa
jbe
inc
mov
sub
xchg
inc
or
inc
sub
mov
and
sti
out
mov
xchg
push
jmp
mov
in
xor
ss
lock
xchg
je
lds
and
lcall
sarl
and
inc
xchg
cmp
sbb
push
jb
push
divl
mov
xchg
jo
lahf
lods
xchg
ss
andb
sbb
hlt
mov
addb
pop
jne
out
out
jnp
loopne
idivl
cmc
loop
insl
imul
and
cmp
and
lret
mov
mov
lds
mov
data16
mov
outsb
ja
pop
js
push
xchg
out
dec
aaa
xlat
in
data16
jp
es
adc
data16
and
lods
std
gs
lret
popa
mov
mov
mov
lret
shll
leave
inc
pop
enter
sbb
shlb
bound
andb
jns
and
dec
std
add
outsb
scas
mov
dec
adc
rcr
dec
ret
mov
ret
aam
mov
cmp
xorb
jmp
mov
dec
ja
stos
or
and
jge
loopne
push
es
add
movsb
lea
adc
mov
popf
shll
arpl
cwtl
pop
mov
push
mov
cltd
mov
mov
dec
in
sbb
and
in
rorl
fwait
xor
adc
jae
pop
adc
dec
xchg
pop
mov
dec
or
not
sbb
imul
jecxz
mov
sub
jb
adc
cmp
les
add
int
shll
dec
movsl
pshufw
sbb
pop
sub
test
stos
inc
iret
jp
dec
xchg
mov
adc
enter
push
mov
add
hlt
jg
adc
idivl
xor
mov
xor
mov
adc
cmp
stos
popa
jle
mov
movsl
jp
insl
imul
push
xor
nop
or
jp
jb
ret
addl
mov
fsub
mov
jo
xchg
sbb
xchg
aad
ss
iret
rolb
inc
jno
lods
mov
xor
popa
mov
mov
jecxz
idivl
inc
cmp
and
push
sbb
mov
and
mov
dec
add
out
pop
add
call
nop
insl
jno
in
push
or
dec
call
xor
aaa
je
inc
sbb
cmpsb
xchg
ret
sub
test
hlt
pushl
out
stc
mov
bound
xor
inc
cmc
ds
jnp
scas
jo
dec
xor
jmp
xchg
orb
xchg
jecxz
call
dec
aad
mov
adc
inc
loope
lret
imul
in
imul
hlt
lods
push
push
and
mov
insb
movsl
aas
mov
dec
pop
dec
push
sbb
addr16
mov
mov
dec
cli
jbe
push
mov
pop
adc
add
mov
add
adc
out
repz
daa
sbb
mov
and
cwtl
push
mov
test
inc
into
in
push
jne
push
inc
push
and
push
xlat
cmp
push
push
aas
lods
out
aaa
mov
lret
sub
sub
fbld
das
pop
es
jg
aam
adc
inc
test
into
push
cwtl
into
pop
out
fisttpll
or
dec
mov
jns
add
sub
xchg
xchg
pushf
cld
aam
sbbl
inc
ret
lods
insl
xchg
ds
pop
jo
jecxz
mov
jmp
out
loopne
pop
insl
push
mov
popf
push
fcmovnbe
sbb
icebp
jmp
imul
mov
dec
sub
rolb
arpl
sbb
dec
push
pop
out
cltd
aad
notl
icebp
mov
frstor
xor
mov
cmp
daa
repz
arpl
cmc
ljmp
in
push
fadds
sbb
adc
pop
push
dec
sub
pop
pop
xchg
pushf
push
xchg
sbb
jae
enter
xlat
xchg
testb
push
or
imul
leave
stos
pop
sub
roll
adc
out
daa
sti
lds
or
int3
xchg
scas
mov
shll
mov
stos
adc
xlat
cmpsl
mov
cmp
add
loop
dec
cmp
les
sbb
lret
mov
test
or
mov
scas
movsb
pop
cmpsl
lods
mov
cmp
sub
mov
and
push
bound
push
xor
dec
and
jl
sub
mov
outsl
jbe
push
xor
sahf
adc
mov
stos
mov
repz
ror
push
leave
mov
loope
ret
cmp
inc
xchg
stc
push
popa
adc
lret
pop
test
cmpsl
pop
ja
bnd
shll
push
add
test
jae
lahf
cltd
push
test
out
dec
aad
hlt
test
push
jae
testb
shl
mov
fcompl
sbb
mov
add
scas
out
pop
lods
sbb
dec
ds
add
dec
dec
insl
mov
fmulp
xchg
test
iret
mov
mov
lcall
pop
xor
in
roll
mov
mov
xchg
xchg
sti
or
add
sti
dec
loope
inc
call
push
xor
adc
pop
iret
cmp
jge
sub
lahf
xor
xor
inc
and
xor
adcl
sbb
daa
es
sub
arpl
leave
mov
dec
sbb
pop
jp
repz
out
jae
loopne
push
sub
sub
in
into
into
and
push
adc
adc
xchg
hlt
arpl
xlat
jbe
sbb
es
fidivrs
mov
notl
and
push
push
mov
and
popa
movsb
jne
cmp
xchg
gs
outsl
out
and
dec
dec
jle
test
movsl
xlat
lock
mov
dec
and
mov
pushf
jecxz
insb
out
push
mov
ret
cmp
cmp
fldt
fs
xchg
stos
push
es
cwtl
enter
out
out
push
jge
inc
and
cmc
int
cmp
fnstenv
mov
adcb
or
call
pop
je
mov
push
pop
in
out
mov
jb
push
fwait
dec
and
push
sbb
xor
repz
sbb
xchg
popl
stc
loope
mulb
insl
push
xchg
rcrb
shll
cltd
push
jmp
inc
aas
pop
fcmovnu
adc
clc
sbb
adc
sub
jecxz,pt
mov
popa
push
jmp
cwtl
ja,pn
decb
mul
cmpsl
or
adc
add
bound
iret
xchg
mov
sub
cmp
jae
neg
inc
push
stos
inc
daa
fs
sbb
aam
call
mov
sub
sahf
add
movsb
mov
mov
addr16
out
test
loopne
insl
sub
adc
xchg
stos
enter
or
aas
jl
int3
push
out
ret
mov
fisttpll
mov
sub
xlat
cmc
shrl
ret
bound
xchg
scas
test
bound
add
sub
push
mov
fcomi
insl
sbb
mov
loop
lret
divb
and
sub
rcll
mov
fcom
jbe
test
pop
lds
mov
int3
dec
leave
inc
dec
insl
fcomps
stos
xor
xchg
or
testl
push
xchg
sub
fsubrs
or
mull
xchg
mov
xor
stos
and
lods
push
mov
pop
jb
and
push
jg
inc
sub
inc
bound
cmpsb
pop
cmpsb
xchg
lods
ret
outsb
xchg
push
repz
stc
sbb
dec
aam
pop
jmp
inc
lret
stos
ja
push
leave
mov
icebp
sbb
das
cmp
xchg
aam
scas
test
mov
dec
xchg
pusha
or
mov
fs
test
add
stc
leave
scas
sub
out
lods
push
cld
pop
test
test
jbe
xor
subb
imul
dec
dec
fists
jl
mov
adc
jmp
roll
xlat
shrb
mov
daa
and
and
mov
cmpsb
dec
cmpsl
pop
aad
sub
cmp
push
xchg
dec
or
pop
mov
jo,pn
lcall
cwtl
cmp
mov
leave
gs
insb
xor
dec
add
pop
cmpl
xchg
inc
fstp
sbb
inc
loop
lods
popa
gs
sbb
dec
xor
mov
xchg
movsl
mov
lock
jmp
dec
jp
adc
jbe
add
repz
daa
loop
mov
dec
jp
into
mov
xlat
sub
aas
loopne
xchg
gs
scas
mov
sub
adcb
cmp
xor
ret
roll
in
jo
cmp
jg
xchg
imul
pusha
pop
sarb
pop
icebp
mov
push
insl
leave
inc
mov
xchg
xchg
cmp
mov
xor
sarl
in
or
ja
lcall
or
adc
xchg
mov
in
je
xlat
lcall
stos
shll
dec
sub
and
shr
xchg
fcos
rclb
test
sbb
mov
mov
xchg
mov
or
fisubrs
sbb
push
xchg
or
cmp
pop
in
cmp
andl
mov
cmp
and
in
lods
pop
mov
out
fs
cmp
inc
in
xchg
pop
cs
movsl
push
popf
les
xchg
adc
jmp
or
or
xor
bound
jb
adc
or
mov
mov
adc
popa
rcr
mov
imulb
jmp
movsl
shrb
xchg
pop
mov
or
int
mov
inc
lock
sub
mov
add
lret
push
arpl
pop
sti
push
pop
jmp
dec
or
jl
or
mov
mov
xchg
sub
sub
sbb
adc
mov
aam
mov
mov
inc
jl
or
int3
ficoml
sbb
fimull
pop
lods
std
dec
jmp
loopne
pushf
out
sahf
dec
adc
sub
leave
xor
sub
adc
xor
insl
push
mov
shll
in
and
lock
faddl
add
mov
pop
cmp
in
movsb
loop
mov
cmp
xchg
out
cmc
sbbb
adc
push
dec
or
xchg
cmp
mov
sahf
movsb
arpl
daa
mov
aam
cmp
call
ljmp
mov
stos
sub
push
lock
or
cmp
sbb
mov
jne
je
imul
leave
dec
subl
ret
in
jne
and
xor
imul
daa
dec
push
jp
je
xchg
push
and
push
int3
stos
push
mov
loopne
xchg
arpl
fs
inc
dec
movsb
xlat
pop
push
jge
fcoml
test
test
add
sub
fldl
fisttpl
push
mov
jp
fs
and
xorb
mov
mov
jle
test
mov
pop
test
pop
mov
add
mov
mov
mov
nop
jp
sub
cmp
and
aas
sub
adc
mov
push
jg
and
or
pop
pop
mov
fsubs
push
rolb
xchg
mov
pop
mov
mov
add
stc
cmp
fs
insb
addr16
xor
cs
adc
enter
mov
lret
int3
or
cmp
sti
pusha
test
dec
adc
push
addr16
push
mov
sbb
cmp
mov
dec
movsl
pop
and
jno
mov
enter
xor
sub
dec
dec
cmp
es
ljmp
test
dec
jae
add
jb
jge
daa
and
dec
cmp
inc
call
cwtl
pop
testb
xchg
fstpl
daa
addr16
in
or
stc
cs
adc
int3
insl
jbe
xor
in
js
mov
pop
popa
sub
ret
ret
pushf
lret
push
xchg
mov
notl
inc
and
jmp
add
adc
cmpsb
lds
push
push
shll
std
out
pop
pusha
mov
mov
js
shl
fcoms
pop
jge
mov
mov
fs
leave
inc
sbb
pop
xor
sbb
vpunpckhdq
sub
icebp
xchg
pop
pusha
dec
mov
les
adcl
cwtl
push
shr
pop
mov
loop
jae
pop
push
push
lcall
pop
mov
or
inc
push
inc
sbb
mov
push
mov
imul
jp
sub
insl
loope
xchg
mov
jo
push
repnz
mov
xor
push
xchg
sub
stos
incb
sbb
lea
into
ljmp
mov
sbb
jmp
outsb
jae
dec
hlt
fimull
xchg
mov
cwtl
mov
adc
test
test
fisubl
pop
jmp
xor
xchg
mov
into
add
in
test
imulb
or
loopne
xchg
out
pop
xor
pop
pop
leave
cmp
addl
sub
test
mov
jno
dec
push
rcrl
lcall
into
jmp
cltd
cmpl
lret
jecxz
popa
repnz
cmpb
adc
xor
push
sub
test
cmc
push
nop
jmp
jle
jne
push
dec
mov
cmp
insb
ja
jnp
imul
sti
shrl
add
pop
jo
xchg
aam
pop
xchg
jge
cs
test
movsb
mov
cmpl
mov
mov
lret
jle
mov
and
test
cltd
jns
pop
and
loopne
push
mov
fiadds
cs
add
or
pop
lods
jle
or
add
shlb
stc
push
inc
pop
mov
pop
int3
push
or
inc
pop
xlat
or
outsl
push
jle
sahf
mov
sbb
or
stos
sbb
subl
cmpb
xchg
lret
fs
xchg
cs
imul
push
sub
xor
fimuls
mov
jp
mov
mov
daa
pop
loop
pop
xchg
push
in
mulb
in
pop
or
or
mov
gs
lahf
popl
repnz
xchg
icebp
pop
scas
loop
inc
rcrl
in
mov
iret
mov
cli
popf
call
hlt
out
add
loopne
daa
push
cmp
test
lea
push
push
je
mov
cld
aas
ficoml
mov
mov
das
scas
pop
cmpsl
mov
xchg
cmc
mov
pop
xor
sti
dec
data16
xchg
sub
mov
test
iret
loop
dec
popf
vandnpd
push
ja
adc
leave
pusha
cmp
addr16
push
and
mov
test
inc
sub
stc
inc
shl
bound
daa
into
dec
push
mov
aam
shlb
jmp
lods
mov
jle
ljmp
vpaddb
dec
adc
daa
pusha
aam
push
or
jle
in
xchg
push
xor
je
out
std
mov
ss
stos
push
repz
push
dec
mov
add
stos
insb
xor
add
mov
jl
shl
adc
cmp
or
sub
icebp
lods
push
cwtl
cld
cwtl
mov
std
pop
mov
sub
pop
or
jb
mov
sti
fucomip
mov
pop
pop
jg
cmpb
mov
or
mov
xor
jp
mov
mov
lock
xchg
push
gs
jmp
mov
gs
das
out
jl
gs
adc
enter
scas
inc
mov
aam
xor
out
pop
or
out
or
lods
test
in
xchg
mov
fimuls
cltd
xor
and
mov
dec
or
repnz
dec
mov
push
push
cmp
mov
icebp
int
sub
fists
mov
imul
inc
fadds
repz
fwait
pop
pushf
mov
xchg
cmpsl
add
xchg
cmpsb
and
mov
pop
push
stos
add
out
cld
xchg
xchg
inc
push
es
test
mov
movsl
mov
lea
sub
adc
jle
sub
mov
fisubrs
cmp
sub
sub
jno
xor
test
js
scas
mov
mov
sub
fnstcw
fisubs
hlt
cmpsb
fbld
rcl
xchg
repnz
push
inc
dec
mov
arpl
addr16
loope
roll
push
fcoml
xchg
loop
int3
push
mov
adc
mov
sbb
xchg
push
leave
int3
pop
mov
dec
cwtl
or
adc
repz
sbb
int
imul
pop
dec
fadds
pop
stos
andl
xchg
cmp
daa
push
ja
or
and
sbb
mov
out
xchg
adc
aad
and
std
orb
andb
shll
jmp
shr
addl
mov
inc
mov
popl
and
mov
frstor
aas
cli
mov
shll
jp
popf
clc
jno
test
add
sbb
sbb
or
ds
mov
stos
repnz
push
test
jmp
add
adc
stc
pop
sbb
loope
iret
je
gs
add
or
jp
inc
xchg
cmp
sub
jl
mov
divb
cs
xor
cmpsb
push
arpl
pop
mov
lods
cmp
es
inc
mov
cmp
and
popf
mov
push
imull
pop
rol
repnz
sti
pop
repz
pop
movsl
sbb
ljmp
mov
jle
into
add
dec
cmp
jns
sbb
inc
enter
and
sbb
or
add
mov
push
push
add
popa
inc
inc
cmc
inc
stos
push
ret
enter
or
mov
mov
test
jnp
shl
jo
mov
les
pop
bound
and
adc
pop
adc
jge
add
mov
mov
lds
mov
int
xor
test
and
adc
stos
xchg
jb
pop
movl
call
es
test
inc
and
mov
adc
mul
add
push
pop
add
inc
and
arpl
mov
add
sahf
dec
iret
subl
cmp
mov
negb
adc
adc
lock
insb
into
sbb
cwtl
fisubrl
xor
jle
dec
mov
stos
sub
ds
jl
loopne
hlt
imul
mov
mul
mov
sbb
inc
xor
scas
test
mov
in
test
cmp
out
mov
in
pop
adc
jne
int
xchg
cmc
dec
pop
or
clc
xor
push
mov
mov
push
dec
mov
add
xchg
pop
fisubrl
push
jmp
pop
mov
repnz
jae
xchg
idivl
int3
mov
out
xor
inc
aas
push
aas
push
cmp
adcl
push
jg
sub
dec
sub
sbb
data16
cwtl
inc
or
and
and
outsl
rcll
gs
cltd
add
enter
adc
mov
mov
leave
xchg
call
or
pop
inc
xor
imul
das
dec
mov
aam
dec
lods
pop
stc
add
push
fmulp
aaa
js
inc
cmp
jmp
jmp
out
mov
orb
cmp
fdivr
lds
sub
loop
addb
sbb
out
es
pop
mov
pop
ss
mov
cli
jmp
insb
inc
fidivrs
scas
jo
adc
in
jne
loope
lahf
insl
rorl
mov
gs
push
sub
adc
or
push
cwtl
sbb
fs
stos
cwtl
dec
iret
add
dec
xor
jecxz
cmp
scas
mov
ss
jl
sbb
add
or
inc
sti
lcall
arpl
fldenv
or
add
mov
imul
jecxz
les
out
mov
cs
or
xor
xchg
cltd
aam
mov
and
punpcklwd
ffreep
imul
pusha
push
mov
cmp
and
inc
xorb
rclb
ret
rorl
or
xchg
fs
ss
lahf
or
xchg
mov
push
std
loope
jb
incb
dec
add
mov
lahf
xchg
addr16
or
cmp
pop
mov
pop
fmull
sbb
fucomip
mov
in
jg
je
sub
cmp
xchg
push
in
jp
adc
push
push
enter
sub
clc
outsb
sub
les
sub
dec
idivb
sbb
sbb
jnp
xchg
xchg
lea
int
pop
mov
add
cwtl
into
push
das
insb
aaa
jmp
cmp
xor
mov
cli
xor
mov
dec
inc
sbb
data16
cmc
cmpsl
xorb
pop
mov
push
loop
xor
out
mov
xchg
clc
fiadds
idiv
outsb
jae
pop
mov
add
fdivs
push
jmp
inc
pop
mov
cmp
fs
lock
insl
loop
pop
mov
pop
mov
cmpsb
int3
into
adc
add
jmp
push
xchg
jae
ljmp
push
dec
pop
scas
lret
lret
fcmovne
ss
inc
arpl
outsl
inc
hlt
aas
add
pop
test
xor
cmp
ret
mov
das
cli
loope
cmp
mov
idivl
adc
push
fbld
xchg
jne
pop
push
pushf
pop
inc
dec
mov
faddp
xchg
and
adc
cmp
clc
push
push
cmp
xor
or
data16
jg
shll
scas
jmp
mov
mov
mov
fbld
jmp
xor
sarl
xchg
cli
imul
mulb
xchg
in
loop
inc
loope
sub
andl
cltd
xchg
ret
cmp
stos
xor
jb
repnz
jbe
lret
mov
or
inc
negb
jno
shl
pop
xchg
test
or
add
negb
iret
sub
fdivr
jge
jg
jle
cmpsl
dec
xlat
push
imul
jl
mov
movsb
xchg
mov
sahf
insb
mov
sahf
bndldx
and
inc
xor
test
loop
pop
shlb
jne
shl
dec
in
push
cs
dec
sbb
cmpsl
xchg
adc
ret
cmp
mov
movsb
pop
adc
lahf
or
mov
into
adc
jl
xchg
loop
lea
cmp
iret
push
and
cld
xor
mov
xchg
fcoms
stos
fxch
or
or
mov
cmpsl
inc
lods
aaa
iret
inc
jecxz
insl
or
cmp
jnp
shrl
in
loope
fs
imul
rcrl
pop
mov
repz
xor
rclb
xchg
fwait
orps
sbb
fcoml
ret
or
iret
and
and
repnz
in
fisubl
sbb
mov
pushf
cmp
shlb
mov
adc
lea
insl
adc
fiadds
and
out
jne
mov
xor
movsb
jbe
sbb
shrb
push
sarl
jno
loope
in
mov
adc
jne
stc
mov
stc
rorb
sahf
xchg
sarb
jl
repz
data16
rolb
mov
mov
inc
cmp
sbb
sbb
mull
adc
xchg
adc
out
pop
and
add
and
pop
xor
cmc
sub
into
aas
or
repnz
pop
pop
movsb
mov
or
add
idivb
dec
lcall
mov
xchg
sub
fadd
or
sbb
mov
fidivl
and
inc
mov
ret
rorb
add
stos
jge
les
xchg
in
lahf
pop
xlat
clc
ss
adc
leave
leave
lock
pop
xor
inc
mov
in
leave
loop
push
fstps
sti
and
cmp
mov
mov
jecxz
xor
mov
mov
xchg
dec
dec
sbb
vpshlb
inc
adc
popf
push
aad
iret
nopl
cmovno
icebp
mov
and
leave
test
pop
mov
cmpsb
jb
adc
out
imul
pop
adc
xchg
int3
fimull
jno
lock
xchg
jecxz
aas
and
push
inc
sub
out
mov
jbe
ret
xor
pop
push
roll
inc
out
loop
outsb
iret
jmp
mov
mov
xchg
hlt
adc
loopne
mov
in
xor
dec
aam
lds
js
sub
std
std
xchg
mov
arpl
fstps
mov
stos
aad
fyl2xp1
add
add
ret
scas
fisubrl
jno
jbe
movsl
bound
insl
adc
nop
adc
xchg
arpl
arpl
in
shl
cs
cmpsl
subl
jg
addl
push
cmp
nop
push
mov
call
out
xchg
lcall
dec
inc
sahf
cltd
and
and
pop
int3
push
out
xchg
into
dec
mov
push
dec
mov
fs
cmp
add
mov
push
inc
sahf
mov
push
aas
jg
pushf
out
jae
jo
aaa
or
mov
and
sbb
xchg
sbb
into
shrb
inc
shl
fmuls
lret
xchg
inc
cli
xor
mov
insl
mov
adcl
mov
aad
jmp
push
subl
dec
ja
out
imul
inc
lret
lahf
pop
push
or
stos
mov
xor
inc
test
lods
pop
in
mov
jbe
insl
pop
and
ljmp
cmc
into
ds
int3
sub
jns
push
push
dec
cmpsb
cmp
movsb
test
pop
cmc
jecxz
in
push
arpl
dec
fists
in
adc
in
jge
lds
stos
or
scas
repz
jno
repz
cmpl
sub
pop
test
jo
rdpmc
mov
sbb
cmp
orb
aas
mov
inc
sbb
cmp
pusha
rcll
dec
ja
mov
jnp
mov
icebp
fildll
in
js
cmpsb
loope
and
jnp
push
mov
xor
and
data16
cmp
imul
js
sub
aad
sub
cwtl
add
pop
ljmp
movsb
cli
stos
imull
decb
jecxz
xchg
cmp
mov
test
jge
pop
sub
xor
sbbl
jl
inc
mov
push
stos
jle
cltd
call
jmp
jp
pop
out
stos
lds
cmp
aam
or
fsubrp
inc
aad
aaa
stos
mov
cltd
je
insl
sti
test
add
sbb
push
movsb
mov
outsb
faddl
insl
loopne
mov
or
dec
sbb
pop
mov
movsl
imul
mov
jmp
push
add
cli
push
xlat
inc
xchg
pop
cltd
shll
shll
and
nop
xor
insl
shr
jg
add
add
js
push
shlb
jno
and
or
push
and
xchg
dec
xchg
cs
and
add
dec
and
push
pushf
sub
fldl
std
stos
jge
fnsave
pop
das
jno
pop
mov
scas
stos
adc
lret
popf
cli
pop
mov
xchg
sbb
push
int
cmp
xchg
dec
adcb
std
daa
sarl
dec
mov
ret
jbe
movsb
xor
pop
pop
sub
sub
or
dec
push
cmp
mov
cmpsb
adc
jb
pushf
imul
push
mov
sub
sbb
mov
les
jecxz
enter
add
mov
in
ret
lods
fbld
jmp
gs
mov
push
in
xchg
push
leave
fwait
std
fisubrs
cld
cmp
mov
jns
mov
fst
leave
cwtl
sbb
ja
and
inc
mov
repnz
adc
xor
mov
mov
outsb
cmp
mov
mov
btr
cli
repnz
dec
pop
fdivrs
ret
mov
jne
aad
ret
sahf
nop
cmp
insl
or
lock
sbb
cmpsl
jne
dec
xchg
mov
imul
insl
push
cvtps2pd
push
fcomps
push
inc
and
div
into
loopne
cwtl
cmp
xchg
and
fidivl
gs
adc
push
pop
sbb
mov
adc
mov
aas
mov
iret
addr16
sbb
in
out
out
sub
lahf
iret
arpl
divl
out
ds
push
add
int3
or
mov
call
sahf
mov
inc
pop
into
or
xchg
mov
or
in
pop
sbb
data16
mov
mov
into
popa
push
push
pop
or
imul
mov
push
popa
daa
jbe
fisttpll
add
lret
fcomps
data16
fsubrs
outsl
cmp
jae
push
outsb
mov
xchg
mov
stos
sub
or
jmp
testb
add
fiadds
mov
outsl
mov
int3
icebp
push
stos
and
cmp
gs
xor
xchg
and
addr16
das
sub
sbb
in
cmpsl
mov
and
leave
xchg
fisubl
fldt
lret
ret
xlat
xlat
fadd
pop
or
jo
inc
cmp
dec
xchg
popf
sbb
adc
test
sbb
or
dec
sub
sub
pop
sub
or
in
int
sbb
mov
sbb
out
xchg
outsb
aad
mov
cmc
xlat
fists
fsub
jne
or
es
subl
ja
in
and
mov
mov
mov
jns
cmp
jb
jnp
enter
add
or
lods
inc
mov
jmp
fldt
hlt
xchg
mov
vmovlps
sbb
mov
cmpsb
mov
insl
and
je
inc
aam
dec
mov
and
jbe
and
sub
jle
jae
cmpb
stos
and
mov
xorl
in
fimull
cmc
into
mov
fbld
hlt
or
loop
jg
or
fldt
or
mov
sub
pop
ret
cmpb
inc
imul
xchg
pop
pop
cmp
sbb
imul
mov
cmpsb
es
stos
je
je
je
imulb
das
pop
jl
movsb
imul
ret
push
xor
rclb
inc
lods
insl
inc
cmp
pop
mov
or
sbb
mov
dec
inc
sub
sbb
loopne
cmp
mov
sti
dec
stc
and
in
jmp
push
cmp
mov
cmp
cmp
mov
and
pop
dec
sub
andl
push
pop
xchg
mov
test
or
pop
sti
adc
ficomps
push
aad
ljmp
xor
mov
ss
xchg
out
stos
sub
adc
gs
repz
rcr
pop
or
shlb
cmp
jb
mov
mov
cld
cmp
repnz
mov
dec
cmpsl
ds
inc
adc
mov
pop
fnsave
adc
test
xchg
add
mov
ret
push
aas
inc
aad
pop
jmp
push
or
xor
jle
ljmp
pop
mov
lret
int
mov
push
pop
std
popa
adc
or
jg
iret
shl
pop
or
aam
jmp
sahf
insb
pop
jnp
cli
or
mov
loopne
test
ja
xor
push
clc
jp
lock
out
push
pop
mov
cmp
shlb
inc
push
xchg
scas
stc
popa
cltd
into
cmp
fisttpll
mov
lcall
int3
fs
gs
movsl
filds
jp
sahf
ret
mov
aad
add
cmp
and
inc
inc
movsl
rol
test
dec
cwtl
xor
orl
xchg
popf
mov
sub
mov
dec
sbb
paddw
mov
xchg
dec
adc
fwait
cmp
clc
jb
clc
ds
mov
ret
fcompl
add
shlb
popa
andl
mov
fisubrs
fsubrl
cli
pop
sub
nop
push
mov
jno
into
jp
mov
scas
dec
mov
sbb
inc
pop
roll
xor
dec
fdivrl
mov
dec
adc
or
mov
popl
test
xchg
repnz
rorb
jge
outsb
mov
xor
sbb
test
add
push
and
int3
leave
clc
test
sar
xchg
jnp
mov
je
inc
jmp
lds
add
xor
mov
out
mov
aaa
aaa
push
into
mov
rcrb
stc
popf
testl
sbbl
xchg
pushf
lods
cmp
cltd
dec
dec
andl
imul
mov
pop
lcall
push
inc
pusha
std
xorl
movsl
lods
xor
bound
aam
adc
add
outsb
jge
loop
and
js
or
repnz
cltd
mov
xchg
xchg
add
mov
stos
inc
cmc
push
cwtl
ror
add
add
aas
jno
divl
or
dec
pop
cmp
daa
fisttpl
xchg
xorb
aas
mov
les
cld
out
lds
adc
jmp
shll
sahf
xchg
pop
icebp
adc
divl
cmc
push
inc
mov
scas
push
xor
stc
pop
push
jecxz
mov
pop
orb
movsb
aad
lock
std
jmp
push
mov
aam
and
ja
lret
lea
rolb
add
and
test
addl
pslld
inc
push
cmpsb
data16
insb
push
pop
or
incl
popf
loop
bound
cli
push
cmp
lds
jno
sbb
push
faddp
mov
inc
push
outsb
leave
pop
xor
mov
pusha
inc
pushf
add
fwait
insb
cld
fsubs
lahf
loopne
sub
push
hlt
repz
shlb
mov
test
push
or
leave
int
ret
enter
out
push
imul
ljmp
xor
push
or
ljmp
dec
bound
std
adcb
neg
test
in
push
out
sahf
and
cmp
xor
lods
ljmp
fisubrl
es
outsl
gs
ljmp
out
nop
test
xor
push
fsts
dec
lcall
js,pt
adc
mov
mov
icebp
xchg
adcb
pop
cmp
push
push
push
outsl
jbe
dec
push
sarb
xchg
and
outsb
out
jecxz
jecxz
arpl
or
sub
sbb
fxrstor
enter
test
cmp
call
mov
sbbl
pandn
jbe
fmuls
cmp
mov
jae
stos
stos
mov
popf
mov
aaa
leave
mov
pop
push
inc
std
out
xchg
ljmp
adc
cli
enter
jae
pop
stos
sahf
dec
cmpl
orb
lods
add
outsl
push
or
mov
shll
push
jle
lds
xorb
out
popa
idivb
xchg
sbb
jbe
cmp
sti
inc
fmull
aam
push
mov
mov
addr16
ja
add
subb
dec
cmpsl
xchg
scas
lea
xor
das
movsl
insb
sbb
xor
push
adc
data16
or
mov
push
outsl
push
jbe
xchg
or
xorps
push
stc
daa
popa
dec
mov
rcrb
jo
negb
xchg
inc
jmp
out
jle
into
mov
xchg
mov
out
or
test
jns
test
mov
nop
addr16
lahf
sbb
in
mov
lret
dec
int
sub
icebp
ret
and
dec
add
dec
stos
mov
mov
mov
mov
mov
pop
jge
leave
pusha
outsb
and
notb
or
cli
cmp
imull
adc
mov
sbb
jbe
mov
jnp
rcrl
dec
mov
popl
mov
sub
mov
jbe
hlt
mov
fisubrl
push
aas
icebp
add
fnsave
dec
push
popa
inc
mov
xlat
test
dec
add
pop
pop
add
jb,pn
mull
sbbl
ljmp
in
adc
repz
and
jns
pop
xor
adc
clc
movd
sar
or
leave
test
mov
movsb
mov
cmp
sar
shll
dec
std
ret
pop
pop
arpl
mov
out
sub
cmc
std
jnp
incl
sub
and
rorb
sbb
rclb
xchg
scas
jge
mov
into
cmpsl
mov
dec
jl
subb
pop
fs
loope
pop
cs
dec
roll
dec
lret
cli
sbb
sub
xor
pop
inc
icebp
mov
ror
pop
or
fisttps
sbb
mov
lret
vucomiss
les
test
movl
cmpb
movsl
ror
xchg
push
addb
or
jp
addl
ret
pop
sti
mov
mov
das
je
fistpll
jnp
push
lods
cmp
jno
scas
jl
icebp
insl
adc
xor
sub
fwait
mov
rcll
in
mov
xor
cltd
cmp
imul
jb
fstpt
xchg
mov
xchg
addb
in
testb
aaa
pop
jecxz
jne
jge
and
push
and
jae
stos
or
into
out
adc
movsl
in
cmp
or
mov
xor
iret
aad
dec
or
add
dec
cs
shl
xor
xor
mov
xchg
xchg
inc
jecxz
outsb
mov
mov
pusha
ss
inc
mov
cli
adcl
outsb
jle
push
cmp
test
sbb
fdivl
mov
inc
rcll
popf
in
fdivrl
cmc
cmp
mov
fwait
test
or
push
or
scas
jne
xchg
inc
cwtl
lret
xchg
out
mov
stc
addr16
les
clc
pusha
xor
lret
mov
rorl
das
fcmove
cmpsl
adc
iret
jbe
fsubl
xlat
lds
mov
lret
stos
xor
int3
xchg
lds
leave
dec
sahf
and
or
aad
mov
cmc
shrb
addr16
aaa
imul
or
fsubr
dec
mov
lods
lds
jle
adc
xorl
sub
nop
inc
lret
cmpb
sub
call
cwtl
lahf
out
sub
add
out
sbb
adc
sahf
dec
outsl
add
push
out
rcrl
mov
mov
fnsave
test
mov
rol
mov
aas
out
jg
jle
mov
push
inc
xlat
xchg
pop
or
adc
ljmp
repnz
rorb
cmp
scas
stos
fwait
shrl
stos
pusha
add
sarl
insb
stc
xor
dec
add
mov
fisubs
push
push
pop
repz
pop
test
inc
iret
mov
inc
push
pop
add
add
pop
mov
pop
push
jae
mov
daa
pushf
cmp
call
rcrb
cld
add
insb
mov
insb
aas
fidivs
mov
mov
out
roll
mov
ss
jg
fimull
push
inc
ja
push
mov
mov
xchg
cmc
push
jne
jae
std
mov
or
mov
cmp
xchg
int3
int
pop
shrb
fimuls
pusha
lods
cmpsb
faddl
sub
jne
shll
out
aaa
loopne
cmp
roll
dec
sub
fisubs
cltd
insl
xor
and
je
push
cmpsl
mov
in
add
out
add
popa
mov
xchg
aaa
jbe
pop
or
sahf
adc
add
movsb
out
fimull
cmp
fwait
rol
jb
jb
lahf
xchg
pop
cmpsb
aad
arpl
mov
inc
jne
mull
js
out
paddusw
sub
out
leave
dec
sbb
jae
sub
xor
fwait
sbb
out
or
mov
add
lea
fstps
lock
aad
jecxz
pop
push
sbb
xor
or
and
add
mov
mov
roll
les
mov
xor
adc
and
dec
hlt
pop
xchg
js
jno
mov
jbe
xchg
or
roll
pop
je
or
lods
and
add
jl
mov
add
mov
xor
mov
dec
dec
mov
popf
pusha
ret
xor
or
clc
popa
sets
les
pushf
in
call
xchg
jns
enter
xchg
sub
xchg
mov
mov
pop
sub
dec
mov
mov
pop
add
mov
int3
push
pop
gs
cmp
and
dec
and
les
daa
movsl
insb
stos
dec
xor
jg
push
fisttpl
inc
outsl
pop
inc
leave
push
dec
stos
testb
xor
mov
xchg
inc
fidivs
ljmp
shr
pushf
add
xchg
data16
stc
fiaddl
imulb
arpl
mov
movsb
data16
pop
out
fxch
ss
into
fidivl
adc
rclb
fisttpl
rcrb
mov
gs
orl
mov
xchg
sbb
sbb
push
lods
icebp
cmp
xchg
adc
popa
bnd
and
sbb
repz
test
lock
inc
xchg
fisubrl
icebp
lods
int
mov
pop
add
jb
lahf
cmp
dec
lret
sbb
pop
rorl
and
and
imul
lret
dec
pop
mov
sti
daa
push
outsb
inc
sbb
add
pop
popf
add
mov
and
lock
mov
jnp
sub
sbb
dec
jb
sub
push
sub
outsb
jnp
mov
or
aam
in
scas
sahf
ficoml
not
jae
add
shrl
scas
pop
mov
xchg
xchg
mov
or
lahf
insb
popa
xlat
aas
call
pop
push
mov
push
and
pusha
dec
mov
cltd
fnsave
jnp
fwait
pusha
pop
test
loop
data16
mov
adcl
jmp
push
dec
mov
iret
shl
mov
test
or
test
andb
mov
pop
mov
sub
in
sbb
clc
icebp
xchg
ret
or
outsb
lds
sbb
pop
fs
popa
ja
cld
std
dec
mov
lahf
outsl
jns
xchg
ror
push
or
push
mov
fstenv
out
dec
lret
test
outsl
push
push
movsl
mov
dec
fdivrp
dec
ficoml
jo
push
sbb
repz
sti
add
aas
imul
scas
ja
dec
xor
lods
xor
jmp
out
mull
dec
cld
jne
mov
pop
aam
loope
xchg
and
leave
or
out
stos
cmp
movsb
mov
hlt
rorb
xchg
inc
jb
add
shll
xor
push
pop
test
xchg
sub
mov
fwait
fwait
or
mov
push
and
loopne
test
dec
out
xchg
jp
adc
pop
ficoms
adc
pop
and
mov
js
jmp
data16
das
ss
jns
cmc
ds
outsb
mov
sub
lcall
jg
ja
aaa
addr16
adc
sub
and
cmpsb
pop
inc
js
mov
pusha
pop
call
cmp
sub
out
and
mov
xor
inc
in
inc
and
and
int
pusha
pop
fmuls
jb
outsl
jae
push
xchg
cli
sbb
lcall
xor
inc
mov
add
repz
push
cmovge
mov
pop
aaa
push
rcrl
sub
ret
idivl
dec
jl
mov
ret
lods
shlb
add
jmp
loopne
cmc
out
dec
sub
fcmovb
aaa
test
nop
add
jecxz
sbb
mov
push
fwait
daa
or
add
dec
xchg
outsl
mov
inc
in
pusha
xlat
adc
mov
jmp
imul
bound
enter
mov
repnz
cld
mov
xor
loope
cwtl
or
xchg
cwtl
or
xchg
into
adc
push
scas
inc
shll
adc
cmc
cmp
push
sbb
or
mov
cmp
fcmovu
sbb
add
mov
or
mov
cmpsb
icebp
adc
in
pop
cmpsb
xor
and
push
out
push
ret
cmp
xchg
es
push
leave
mov
movsb
push
jl
cmp
scas
test
inc
mov
fs
push
frstpm(287
in
inc
adc
push
ljmp
lods
sbb
mov
scas
in
mov
pop
popa
ljmp
mov
or
and
mov
push
xor
push
aaa
scas
dec
sar
stc
out
outsl
je
jns
adc
sbb
in
int
mov
and
and
outsb
imul
sbb
fnstenv
stos
not
pop
mov
mov
push
cmp
test
std
xchg
lret
and
popf
mov
ja
pop
xchg
mov
gs
sbb
in
int3
fsubr
leave
test
insb
call
repnz
lcall
subb
cwtl
repz
jp
stos
push
jno
negl
addl
mov
push
push
gs
movsb
sbb
xlat
cmc
cwtl
cmp
subl
cli
or
notb
mov
shrl
pushf
sub
mov
dec
mov
and
sub
aaa
movsb
sahf
lods
and
or
das
mov
pop
jcxz
in
call
jae
or
outsb
jbe
or
jle
mov
pushf
or
out
cmp
js
lldt
xchg
popf
aaa
mov
mov
out
mov
jno
push
jnp
repnz
or
jmp
fisubs
stos
ret
cmp
out
jl
pop
push
dec
jmp
inc
test
xchg
xchg
mov
sub
or
jle
lods
adc
jge
insl
and
and
lahf
xor
call
xchg
add
pop
push
push
mov
dec
out
xchg
or
scas
loopne
adc
popf
int3
ljmp
enter
mov
pop
adc
aas
cs
ss
fsubl
cs
add
jmp
pop
or
data16
and
jecxz
lret
lds
mov
inc
push
call
sub
les
mov
inc
mov
mov
std
sbb
ja
or
subb
inc
or
gs
xor
sarl
mov
or
stos
cmc
js
adc
or
dec
out
inc
jecxz
stos
or
push
inc
int
sbb
testl
pusha
push
push
add
insl
int3
sbbl
add
jg
andb
outsl
pop
in
and
mov
xor
cmp
inc
cmp
lcall
out
arpl
lahf
jbe
xchg
lods
aad
push
mov
or
into
mov
xchg
mov
inc
leave
stos
cmpsb
add
push
out
cmpsb
pushf
or
push
movl
rol
sub
mov
cmpsl
pop
add
lcall
in
lahf
xchg
insl
shrl
and
cmpsb
pop
xchg
xchg
imul
dec
movsl
ret
aas
popa
pop
adcb
ja
pop
push
lret
lret
cmp
addb
fwait
push
loop
adc
cmpb
ss
sbb
arpl
xor
or
sub
leave
push
shl
adc
sahf
cmpw
clc
add
push
decb
cmp
outsl
fdivr
bound
dec
inc
push
shl
rol
pop
stos
mov
outsb
jmp
sti
test
adc
iret
push
subb
inc
out
jnp
fdivrs
movsb
outsl
push
jo
pop
xor
jg
lea
shl
pusha
sub
dec
mov
dec
xchg
mov
mov
aaa
sti
incb
fists
add
iret
sbb
pop
pop
xchg
fdivl
sub
lds
pop
out
mov
mov
push
lret
mov
into
push
jae
lods
mov
repnz
sti
push
sbb
xchg
outsl
lret
ss
incl
int
ja
sub
sub
aas
push
mulb
cmc
jle
addr16
sbb
dec
push
sbb
mov
jle
clc
xor
loop
or
jae
jmp
push
push
jb
add
jecxz
dec
in
inc
add
aaa
push
movsb
or
fisubl
outsl
jg
sbb
dec
push
aas
daa
repnz
push
mov
inc
mov
fs
push
movsl
arpl
cmpsl
cmp
mov
and
mov
mov
cld
jne
xor
repz
and
jb
loope
mov
in
lret
adc
shll
inc
pop
sti
mov
das
dec
pop
mov
jmp
mov
push
jb
mov
jno
stc
pushf
adc
out
outsl
adc
mov
dec
jecxz
add
inc
in
cmp
movsl
stos
xchg
in
cmp
xchg
rolb
push
jbe
mov
divb
add
adc
test
ja
idivl
jecxz
jo
sub
sarb
loop
adc
inc
jecxz
fwait
xchg
sbb
in
jbe
outsb
xor
gs
int3
cltd
ja
jo
popf
or
sub
cmp
into
push
dec
mov
jae
sbbl
xor
jmp
imul
inc
xor
test
mov
cli
sbb
hlt
jbe
jnp
push
cltd
push
dec
imul
mov
xchg
adc
outsl
outsb
clc
or
dec
mov
sub
jle
pop
mov
aad
ficomps
jne
loopne
mov
jle
sbb
push
jbe
das
xor
dec
xor
add
in
xchg
pusha
cmc
loop
mov
test
sbb
pop
je
cmp
xchg
mov
add
fbld
ficompl
shl
fs
pop
dec
sbb
sub
pop
inc
sbb
pop
scas
cmc
jmp
xor
push
jecxz
sub
rolb
cmp
jmp
shll
xchg
loop
into
sbb
into
repnz
fs
mov
ficoms
xor
push
inc
test
cld
lea
adc
push
cmp
sbb
jmp
mov
push
push
hlt
enter
add
jl
lock
mov
mov
pop
cmp
or
inc
cmp
add
test
aas
fwait
arpl
std
pusha
add
shlb
scas
sub
iret
and
xor
popf
shr
pop
xor
pusha
sub
add
add
mov
pop
test
pop
fcompl
dec
aam
enter
lds
mov
and
dec
jmp
ds
int
push
or
or
adcb
xor
mov
scas
inc
push
xlat
cwtl
xchg
push
push
incb
in
movsb
stc
clc
sbb
add
xor
mov
cwtl
or
mov
in
jne
pop
dec
mov
js
int
cmp
aaa
cmc
pop
inc
test
xchg
cmp
std
icebp
ficompl
xor
cld
sbb
fldz
jp
add
test
jmp
dec
stos
sub
sbb
jne
cld
imul
xor
lods
jmp
mov
jg
push
pop
push
mov
jmp
adc
std
idivb
mov
pushl
sbbb
in
mov
lds
push
test
fucom
inc
sti
int
sbb
adc
dec
jns
mov
mov
repz
jecxz
mov
dec
mov
fstpt
pop
xor
subb
les
mov
mov
cmp
push
mov
or
les
pusha
cltd
jae
mov
and
xchg
out
sub
xchg
fsts
cmp
lock
cmp
and
lea
mov
or
orb
mov
xor
lods
xor
sahf
mov
int
adc
repz
or
inc
fcomps
lcall
std
cmp
rolb
jge
xchg
pop
addl
rcr
lahf
aas
roll
out
xchg
and
xchg
fildll
popf
sub
jns
xchg
mov
xchg
mov
sub
stos
notl
add
test
push
mov
outsb
pusha
mov
push
dec
dec
stc
fstl
sarb
stos
pop
out
mov
sbb
jne
pop
aaa
cmp
cmp
fisttps
cld
movb
xchg
aaa
jne
dec
xor
in
inc
sbb
sub
lret
dec
sub
clc
add
rolb
jge
test
jae
iret
or
test
imul
adcl
es
and
push
push
pop
mov
mov
cmp
insl
imul
xchg
or
inc
xchg
jp
add
jl
movsl
adc
jbe
jnp
cmp
dec
fstps
jp
pop
dec
xchg
xor
loope
decl
jno
and
xchg
std
mov
rcrb
lret
xor
cwtl
lcall
aam
out
ret
pop
cmp
std
into
mov
pop
mov
cmp
sub
add
xchg
in
ss
sbb
lds
mov
cmp
insl
pop
enter
jecxz
mov
pop
in
sbb
xor
mov
shr
add
ffree
das
add
loop
vpsllw
jmp
xor
xorl
loopne
imulb
aam
mov
sub
aad
sub
pushf
popf
or
cwtl
mov
dec
xlat
adc
ds
out
pusha
or
inc
outsl
popa
pop
pop
lcall
xchg
xchg
cmp
and
popa
xchg
xchg
lods
xchg
pusha
nop
iret
inc
mov
clc
jmp
push
mov
lock
jl
mov
push
loop
jecxz
psrad
adc
xchg
stos
cmp
jmp
jle
xchg
ljmp
faddp
adc
dec
jo
icebp
jl
cmpb
scas
aas
mov
jae
popf
mov
idiv
stos
jmp
mov
add
enter
xchg
and
sub
mov
and
adc
jp
decb
mov
lods
test
mov
inc
call
and
sbb
mull
jmp
movsl
into
js
out
xchg
adc
jns
cmp
movsb
mov
or
insb
sbbl
arpl
orb
repz
mov
xchg
or
xchg
push
lock
add
ficompl
pop
mov
jle
lock
fisttpll
scas
or
push
insl
fcoml
jnp
or
push
adc
sbb
add
mov
inc
mov
push
lret
dec
push
movsl
xchg
adc
mov
dec
out
iret
push
jecxz
mov
jg
and
sub
inc
fsts
pop
jns
jl
pop
ret
xlat
lret
cmp
push
test
rorl
mov
int
jae
imul
pop
jae
scas
repnz
add
jecxz
cmpsb
mov
orl
aaa
lret
sbb
ret
rcrl
mov
leave
es
aam
xor
add
in
dec
sub
jae
inc
pop
mov
rcr
outsb
test
inc
jg
aam
fcmovb
and
rcrb
movsl
dec
inc
xor
jg
xor
lods
jns
ficompl
fcoml
mov
sbb
add
sub
push
inc
mov
xchg
pop
fldt
setge
inc
mov
and
jmp
push
ljmp
jp
jns
test
xchg
lods
push
inc
scas
ret
ja
push
inc
pop
dec
push
mov
divb
fwait
push
aad
ret
ret
and
push
sbb
js
push
pop
xor
cmpsb
xchg
inc
repz
pop
cmpsl
xchg
shlb
out
mov
dec
test
decb
push
cmpsl
inc
das
roll
das
mov
mov
sub
aad
aaa
dec
jo
push
mov
sub
clc
sbb
push
inc
xchg
push
mov
cmp
mov
mov
scas
out
scas
pop
loopne
cmpsb
dec
daa
push
jo
sub
rcr
insl
popf
pop
pop
sahf
je
mov
mov
xchg
sti
mov
mov
test
add
xchg
pop
jb
mov
outsb
in
aad
or
pushf
xor
lahf
fdivr
mov
and
lds
filds
ja
cwtl
cmpsl
xor
lret
out
scas
push
adc
call
cmp
pop
aas
subl
stos
repz
popl
push
ss
idivl
xchg
stos
ror
sub
hlt
cmp
push
add
mov
add
inc
cmc
ret
insb
aas
test
lock
jecxz
lea
xor
jge
pop
xchg
jo
cmp
js
int3
test
mov
mov
shll
lods
xor
mov
std
push
push
push
icebp
imul
or
sub
mov
fcompl
mov
popf
imul
and
aaa
xor
psubusb
loopne
int
sarb
xor
fldenv
jmp
test
adc
jns
dec
dec
adc
imul
pop
jne
pop
int
aas
sbb
adc
daa
pop
mov
or
les
jbe
or
test
loope
xlat
test
rclb
cmpsl
test
jmp
sbb
in
adc
add
sti
lods
int3
in
ret
js
sub
imul
sbb
xchg
or
sti
sahf
dec
imul
les
pop
add
add
cmp
cmpsb
subb
pop
dec
pop
mov
jg
pop
repnz
mov
incb
dec
shrb
movsl
imul
cld
orb
add
pop
mov
in
sbb
push
icebp
dec
lods
or
in
push
scas
pop
test
inc
fstl
jnp
and
mov
push
popa
imul
cmp
adc
mov
mov
rorl
insb
fs
pushf
mov
imul
xchg
icebp
lods
push
stos
jo
and
out
or
fists
movsb
bound
push
inc
test
test
add
cwtl
mov
outsl
aad
push
xor
xchg
pop
dec
repnz
xchg
leave
mov
mov
movsb
mov
xor
mov
aad
enter
dec
push
sub
jb
jmp
sarl
sarb
filds
sub
fisttpl
repz
nop
sbb
ficoms
mov
out
int3
mov
and
mov
fidivrl
and
outsl
daa
mov
add
imul
mov
xchg
rorb
mov
add
stc
jae
icebp
mov
push
flds
xchg
stos
rolb
dec
cwtl
inc
int3
pop
dec
mov
dec
rcrl
adc
jmp
addr16
stos
push
insl
add
pop
inc
sahf
lret
xor
imul
jns
or
cmpsl
pop
rcrb
xor
dec
dec
cld
dec
xor
cli
xchg
clc
into
int3
pop
pop
mov
sub
in
movsb
jbe
xchg
jg
jbe
movsl
sti
mov
inc
rcr
mov
cltd
std
stc
pop
out
sbb
xor
jbe
nop
cmp
mov
adc
mov
gs
scas
popf
sub
lods
repnz
fwait
aas
mov
ret
imul
sub
jmp
jecxz
ds
jae
and
adc
push
sub
ss
and
sub
arpl
and
push
jle
mov
push
xchg
jnp
push
ja
cmp
and
cmp
jge
jns
int
sub
ficomps
adc
cmp
gs
inc
cs
nop
cltd
or
bnd
aas
test
jbe
push
jo
adcb
mov
rclb
pop
insb
cld
push
sbb
loope
sbb
iret
cmpsb
push
adc
imul
sbb
mov
lret
test
mov
cmc
pop
flds
mov
jno
push
jmp
push
orb
xchg
cld
ret
jbe
ljmp
jle
jge
mov
fistpl
dec
repz
mov
clc
xchg
and
adc
adc
sub
push
imul
push
ret
pop
sbb
lods
push
mov
popf
or
lds
xor
test
bound
add
pusha
leave
arpl
xchg
call
sbb
dec
xor
sub
ret
xchg
xchg
lods
sbb
xchg
shlb
mov
ficompl
mov
jl
pop
aam
cwtl
jp
push
mov
push
call
leave
mov
lods
or
es
jp
je
imul
push
sub
mov
add
push
and
adc
lods
aam
inc
mov
dec
jg
or
mov
add
mov
lods
xchg
stc
mov
mov
or
aam
xchg
inc
out
or
into
dec
stc
jecxz
mov
fdivrs
or
sub
xchg
dec
cmp
mov
jno
push
dec
push
lret
daa
lret
sahf
in
push
and
pop
xchg
xchg
jg
lods
test
push
pop
mov
pop
loop
ds
fs
pusha
mov
mov
xchg
roll
xor
repnz
cmp
testl
cmp
cmp
mov
loope
push
loope
push
push
xchg
pop
stos
in
mov
popf
stos
jp
in
ret
adc
scas
dec
mov
mov
sbb
and
xor
xchg
aad
sbb
xor
lret
push
adc
fildl
adc
outsb
pop
aas
scas
jecxz
pop
inc
and
xorb
hlt
pop
inc
xchg
mov
cltd
iret
and
lea
jb
and
mov
les
notl
add
movsb
inc
lret
jbe
xchg
andb
xor
add
dec
test
cmp
aaa
outsl
adc
loopne
or
adc
xchg
sub
insl
outsb
cmp
mov
aaa
mov
sarb
xchg
xor
mov
loopne
iret
or
xchg
fs
push
orl
clc
arpl
jo
aaa
test
xchg
jae
adc
sub
das
xor
and
fistl
int
push
mov
jp
int
xor
imul
jae
test
dec
in
mov
cli
test
shlb
and
sbb
push
sbb
pushf
mul
icebp
jg
ss
or
and
lret
fs
push
dec
add
aaa
lret
push
push
and
jl
movl
cmp
inc
dec
add
loop
jno
loope
add
shl
add
fwait
insb
scas
or
pushf
sbb
or
lcall
inc
dec
or
or
adc
cltd
fildll
pop
pop
xacquire
outsb
sub
faddp
push
jmp
out
out
sbb
dec
js
callw
nop
stc
repz
xor
jg
imul
add
push
push
or
hlt
pop
push
jmp
insb
loopne
mov
xchg
and
int
movsl
fsub
popa
aas
stos
jg
shrb
cltd
inc
es
mov
jp
out
adc
pop
cmpsl
push
xor
pusha
xor
rorl
mov
lea
inc
test
pushf
push
push
ds
push
mov
adc
lret
adc
jns
js
jns
or
repz
pop
adc
testl
fdivrs
jnp
cmpsl
or
and
pop
jne
jnp
fcmove
sub
es
ret
call
pop
mov
pop
jnp
out
xor
int
add
movsl
xlat
gs
dec
push
adc
mov
test
loopne
push
pop
cmpsb
aam
jg
add
push
adc
shll
scas
jo
jge
adc
mov
jb
cmp
lcall
shrl
popw
popa
jmp
insl
daa
repnz
sub
out
inc
cli
cmp
cmp
or
dec
jne
inc
and
mov
xchg
jne
xchg
xchg
mov
pop
pop
mov
mov
mov
mov
ds
sbb
mov
or
ss
adc
adc
sbb
xchg
test
push
push
shl
dec
into
loopne
ficoms
mov
scas
lret
xchg
pushf
cmpb
and
mov
dec
push
and
jecxz
mov
pop
push
cmpsb
test
cmp
adc
jmp
pop
and
push
cmc
loop
push
or
arpl
pop
movsl
ss
mov
ret
loopne
mov
stos
mov
push
xor
mov
sub
adc
mov
inc
ret
pop
dec
jp
jmp
inc
sbb
ret
push
jl
cs
lock
or
xchg
gs
inc
lea
mov
adc
and
sarb
test
data16
xor
cmpsb
stos
pusha
jle
andl
rcrb
fdivrl
ds
inc
lock
mov
cs
push
pop
mov
jns
mov
or
mov
jno
cmpsl
adc
dec
xor
dec
loope
mov
inc
cli
jns
pop
out
push
mov
mov
pop
push
pop
sub
xor
je
mov
loope
sub
inc
shr
dec
cmp
sti
rcrb
lahf
ret
push
aaa
bound
adc
xor
xor
adc
jno
mov
mov
in
sub
out
lahf
jnp
in
sub
cmp
test
mov
sbb
fwait
in
int3
cmovl
fstpl
or
xor
ret
lods
push
loope
mov
incl
cwtl
dec
sbb
ja
xchg
shr
pop
dec
lea
xor
addb
lods
push
out
cmpsl
lods
iret
mov
movb
dec
cmp
xchg
nop
xchg
push
outsl
jnp
inc
cmpsb
movsb
sbb
imul
adcb
mov
mov
and
loopne
jle
jne
pop
mov
adc
outsl
mov
push
int3
sbb
xlat
pop
scas
rcll
jge
out
adc
or
mov
into
sbb
mov
jp
sub
jg
fmuls
and
pop
push
adc
sbbl
push
dec
loope
and
das
shl
mov
shl
mov
pop
divb
notb
jae
cmp
mov
lret
cmp
xor
mov
jmp
je
pop
xor
sbb
pop
nop
test
add
sbb
aad
jp
pop
pop
cmp
cs
popa
xchg
mov
ss
hlt
inc
sbb
mov
jo
mov
fimuls
fs
xor
sub
das
mov
push
add
push
scas
xor
leave
in
push
add
jo
dec
add
xchg
stos
add
fmulp
cs
sbb
lcall
push
mov
imull
inc
test
push
dec
inc
sub
scas
bnd
ret
pop
pop
dec
xchg
lods
je
repnz
pop
cmc
fdivrp
mov
or
push
push
imul
leave
xor
int
jl
adc
sarb
insb
lahf
and
mov
xor
and
mov
shlb
aam
fadds
daa
xor
add
or
xor
icebp
stc
cld
pcmpgtd
mov
in
cmp
in
adc
xchg
in
fwait
stos
push
test
lock
aas
push
test
xor
cmp
cmp
aas
out
sbb
out
dec
lods
out
in
jl
inc
xchg
je
ja
adc
mov
shll
sub
sub
out
sti
stos
movsl
js
testb
ja
push
dec
sarl
je
cmpsb
mov
punpckhbw
aam
repz
or
outsl
mov
out
scas
stos
je
mov
ljmp
or
lds
adc
cmpsb
hlt
adc
mov
push
inc
jl
push
sub
and
xchg
mov
shl
pop
jl
jg
test
and
std
or
lret
lea
cmpsl
test
push
adc
fcmovnu
sub
or
out
out
or
mov
mov
or
in
mov
dec
out
push
dec
xor
jae
movb
mov
out
call
and
in
push
cmpsl
xor
cs
jnp
dec
fdivl
xor
inc
outsb
adc
subl
aas
mov
ficomps
stc
jno
out
and
mov
mov
jecxz
rcrb
shrl
dec
xchg
dec
insl
mov
add
push
mov
or
mov
insl
cmpsb
jg
jmp
mov
add
adcl
fadds
pop
mov
mov
shlb
xchg
fs
cmp
push
mov
je
jne
add
fsubl
mov
mov
sbb
xor
inc
lods
jne
outsl
pop
test
flds
leave
xchg
in
inc
rcrb
arpl
shll
adc
mov
cmpsl
xchg
stos
mov
sbb
pop
jmp
sbb
add
push
jae
popa
jno,pn
push
push
std
add
into
jnp
or
hlt
daa
jnp
mov
addl
adc
or
mov
clc
push
sbb
imul
fs
mov
popl
mov
fidivs
outsl
lea
push
xor
fistpll
adc
nop
push
bound
inc
insl
jl
pop
dec
sub
fistpll
aaa
lock
sub
push
dec
cmc
clc
popa
sbb
dec
pop
inc
cld
dec
pop
and
sub
inc
inc
ljmp
pop
inc
xchg
data16
inc
pop
mov
fisubrl
sub
inc
cmpsl
and
outsb
ret
pop
cmp
mov
lds
aaa
les
daa
cmc
movsb
dec
pmuludq
fisubrs
xchg
lea
repz
xchg
ret
lods
cmpsb
inc
testl
lea
repnz
and
loopne
mov
scas
push
push
mov
xchg
iret
mov
imul
pop
sar
xorb
mov
cmp
and
jg
xchg
in
int3
mov
jne
sub
mov
shll
nop
sahf
into
jge
cltd
xchg
dec
in
jo
fadds
ret
fimuls
pop
push
lret
enter
stos
lea
mov
ret
rclb
addr16
and
jp
or
push
mulb
int
mov
lea
sbb
repnz
jb
test
cli
arpl
out
std
push
or
aas
inc
dec
and
xor
mov
loop
pop
and
push
push
loopne
jb
mov
fisttpl
outsl
rorb
cmp
mov
dec
fcomip
jmp
pusha
xor
push
insb
and
enter
sub
lods
pop
in
ds
inc
aad
mov
push
mov
jg
ror
xchg
mov
push
fldl
dec
dec
cmpsb
jmp
cmpsl
iret
ret
lea
ljmp
push
xchg
sub
adc
xchg
and
movsl
test
divb
mov
sub
movsb
stos
add
add
mov
xor
hlt
or
test
dec
fdivr
fnstsw
lret
outsl
outsl
fs
das
mov
out
hlt
pop
rcrb
lods
cmp
leave
scas
push
repz
push
pop
addr16
add
movsb
out
push
popf
push
in
jle
or
mov
add
push
lret
out
test
sub
push
xor
iret
mov
and
push
cmc
insl
dec
int
adc
daa
loopne
fisubrs
icebp
repz
ret
jns
lock
or
sub
inc
mov
lcall
jg
mov
sub
mov
cmp
sbb
mov
fistps
inc
aaa
jns
int
and
sti
sub
jg
adc
adc
mov
sub
pop
ss
mov
push
sub
mov
sbb
mov
pop
divl
jp
fsts
inc
dec
xorl
loope
sarl
mov
adc
xchg
es
xchg
inc
lahf
iret
xchg
push
mov
mov
sbb
sub
js
jae
push
mov
aaa
pop
xor
ror
movsb
cmpb
enter
pushf
cld
or
lcall
aaa
adcb
popf
ret
push
pop
int3
or
cwtl
push
roll
outsb
jb
mov
cmp
xor
inc
sbb
pop
lods
adc
loope
std
jecxz
and
repz
dec
fcoml
addr16
xchg
inc
out
jle
sub
jae
into
iret
push
repnz
adcb
xor
lret
stc
dec
fsub
push
jbe
in
push
nop
mov
add
pusha
mov
ds
mov
sbb
mov
sbb
fbstp
aas
dec
add
or
mov
or
xchg
outsb
loop
push
lock
nop
cmp
xchg
sub
or
ljmp
mov
popa
daa
adc
sub
in
das
jecxz
dec
lods
rorl
inc
testl
sahf
sahf
fmul
icebp
xchg
pop
lret
fisubrs
and
scas
bound
insb
es
add
mov
sbbl
into
mov
adc
push
aad
in
ret
sub
dec
jg
loopne
les
mov
fs
mov
fwait
cli
cwtl
mov
fcomps
orb
mov
cs
aam
adc
rcrl
and
pop
pop
faddp
dec
jo
or
pop
cmpl
loope
bound
inc
sbb
mov
das
dec
int
inc
mov
lea
cwtl
add
out
ret
sub
repnz
sub
push
pop
insb
mov
pop
inc
push
sti
mov
mov
cmp
jle
enter
pusha
je
pop
sub
jo
shl
push
fdivrl
enter
mov
lret
push
shl
es
dec
mov
shll
vandnps
xchg
mov
push
in
outsb
xchg
dec
inc
fdiv
push
aas
js
pop
ret
insl
ljmp
call
add
fnsave
xor
outsb
dec
stc
jne
sub
add
mov
arpl
mov
cmpl
sub
mov
scas
dec
jnp
sbb
mov
int3
pop
aas
cld
adc
out
mov
pop
cmp
bound
out
or
test
rclb
out
rolb
dec
pop
xchg
sbb
cmp
add
jb
mov
ljmp
inc
pop
pusha
scas
adc
pop
and
in
sbb
mov
or
test
mov
sti
mov
in
xchg
mov
faddl
or
lock
pop
adc
mov
fs
cmpsb
pop
loope
pop
insb
shrl
je
test
shlb
inc
hlt
cmp
cwtl
lahf
pop
mov
jecxz
popf
lods
stos
push
jle
sub
test
cmp
push
pop
push
inc
jmp
je
int
and
out
imul
jae
push
pop
and
sbb
and
or
out
and
repnz
shr
xchg
sub
mov
pop
pop
inc
fstps
out
jne
xlat
mov
xchg
cwtl
pop
push
clc
or
mov
mov
add
xor
push
pop
mov
fsubl
sti
jnp
cltd
stos
and
data16
lret
or
arpl
xlat
repz
push
ja
outsl
lahf
jp
call
mov
in
cltd
add
int
hlt
xchg
jno
push
and
scas
fisttpl
frstor
inc
or
leave
test
nop
sahf
mov
aad
jb
clc
addl
push
in
xor
test
cmc
inc
test
pushf
push
dec
cld
sub
add
xor
dec
arpl
insb
fs
imul
js
aam
dec
pop
fmul
test
pop
int3
jl
push
mov
xchg
xchg
je
mov
inc
jp
jmp
ja
movups
and
cmp
adc
test
jno
test
cmp
mov
xchg
out
or
stos
and
fisttpl
jns
repnz
fsubs
imul
jo
outsl
cmc
cmp
xchg
push
sub
and
jnp
push
ss
mov
rcl
rorl
lret
das
push
xor
popf
cmc
sbb
fnstsw
mov
cltd
adc
cwtl
dec
push
add
loop
cmpsb
pop
mov
and
adc
cli
mov
add
std
and
imul
lods
cld
sub
cmp
fistl
xchg
outsb
test
jnp
es
pop
outsb
repnz
mov
add
aam
sub
jns
lds
inc
adc
adc
jmp
lahf
jle
js
inc
push
xchg
inc
jge
es
cmp
pop
idivb
or
dec
or
mov
jo
ds
sbbb
jnp
sbb
fnstcw
andb
bound
ret
sbb
dec
sub
lahf
mov
jmp
repnz
mov
bound
adc
out
xchg
jp
aas
mov
in
xor
sbb
add
mov
push
icebp
lret
adc
adc
xchg
add
push
lret
and
jl
sub
sub
mov
aaa
in
fmul
fidivrs
rcrl
mov
outsb
mov
dec
rol
inc
pop
call
repz
inc
cmp
std
fistpll
daa
inc
cmc
sar
inc
and
mov
inc
in
and
mov
add
jno
push
and
shlb
adc
sti
xchg
std
sbb
mov
xchg
jb
or
repz
dec
jns
and
mov
cmpsl
stc
pop
enter
jo
dec
pop
mov
es
mov
xor
xor
xlat
and
pop
and
jge
imul
repz
sub
leave
cli
xlat
and
sub
or
add
cmp
xchg
jb
sbb
and
enter
movsb
pop
loope
inc
iret
add
mov
adc
aam
jg
insl
mov
or
bound
leave
sub
push
scas
mov
dec
adc
push
data16
and
or
mov
and
cwtl
lret
xlat
or
bound
mov
imul
rep
dec
pop
add
jmp
dec
jecxz
scas
and
mov
es
int
mov
mov
iret
pusha
addr16
rcr
cmpsl
mov
inc
pop
popf
movsl
lcall
adc
cmpsb
mov
mov
or
jp
cmp
mov
push
les
push
clc
pop
int
mov
in
xor
or
sbb
aad
push
sub
lods
adc
mov
mov
adc
adc
mov
sarb
test
xchg
add
cmp
push
imul
negl
inc
xchg
fadds
das
xchg
xchg
cmp
jp
mov
xchg
iret
cld
stc
iret
mov
push
jb
out
sbb
lock
popf
test
shlb
xor
insl
cmp
stc
xor
addr16
test
push
adc
mov
das
orl
push
inc
mov
xchg
or
sti
icebp
xor
cmpsl
adc
jno
dec
xchg
xchg
int
out
imul
fsubs
in
ljmp
in
cmp
ret
or
bound
lds
mov
xor
sarb
jnp
rclb
sahf
mov
inc
mov
adc
jae
mov
xchg
adc
test
mov
mov
jb
jae
cmpsb
ret
pop
inc
inc
dec
in
je
pop
jns
rclb
inc
jl
adc
add
outsb
ljmp
cmp
rcll
mov
xor
ljmp
push
repz
int
adc
popa
add
inc
and
rcr
pop
sub
js
out
sub
push
lret
jo
insb
jg
sahf
xor
jne
sbb
or
fwait
pop
gs
sub
xchg
pop
add
lock
lcall
xchg
subl
iret
mov
inc
sbb
sar
sub
mov
mov
mov
arpl
sub
mov
inc
sub
imul
test
mov
xchg
mov
lahf
xchg
jp
sbb
cmp
jne
jmp
jne
or
mov
enter
int3
inc
shrl
jbe
xchg
inc
add
push
roll
dec
sub
mov
fisubs
insb
jmp
xor
ja
adc
push
cmp
into
popa
inc
inc
mov
imul
in
xchg
cmp
adc
lcall
inc
mov
pop
sahf
aas
outsl
pop
in
adc
stc
jbe
mov
jne
dec
jae
pop
jne
mov
add
jmp
cmp
mov
mov
aad
mov
dec
cmp
sbb
sahf
iret
or
xor
cmc
sahf
nop
sti
int
push
data16
test
sbb
stos
jbe
cli
push
sub
mov
mov
pop
inc
mov
lea
loopne
inc
fistpl
test
test
push
mov
test
adc
xchg
imul
cmp
mov
mov
jne
pop
jmp
push
cwtl
out
pop
pcmpeqw
mov
imul
movsl
bound
lock
sbb
fstp
jmp
and
lahf
fldl
xchg
test
in
in
icebp
xor
adc
int
inc
cli
inc
xlat
push
out
fstpl
cmc
push
gs
ljmp
rcr
fidivrs
dec
push
sub
sti
jb
jno
pop
fucomip
inc
cld
dec
ret
mov
jecxz
mov
fwait
fs
xor
lret
push
or
add
mov
out
shll
xor
je
jne
orb
push
add
push
repz
push
lods
jp
call
test
into
jae
in
sarb
stos
ja
rcrl
xor
lods
ret
arpl
dec
loope
mov
mov
sub
pop
data16
mov
fcomps
in
xor
fdecstp
or
sub
sub
insb
adc
in
fildll
shl
adc
push
out
and
into
mov
fwait
ret
push
mov
push
fcompl
add
pop
sbb
xchg
sub
and
cltd
adc
jecxz
std
xchg
mov
in
inc
mov
lret
mov
xchg
push
lock
push
cmpl
das
int
adc
aas
in
in
cmp
jne
cmp
mov
pop
lcall
inc
push
sub
test
pop
int3
dec
cmp
outsl
jne
or
or
xlat
ficompl
xchg
je
or
mov
lret
imul
clc
jno
rorb
mov
outsb
mov
lret
call
lcall
mov
adc
push
leave
and
fsubl
or
movsl
add
sub
pop
iret
int3
dec
xor
lock
xchg
test
mov
adc
rcrb
roll
into
push
mov
imul
aad
push
enter
cwtl
popf
jno,pt
rolb
pusha
iret
sahf
test
mov
insb
pop
testb
aaa
pop
out
leave
push
push
pop
addr16
enter
adc
lcall
popa
fadd
bound
movsb
mov
push
jp
mov
pop
popa
cmp
mov
xchg
aaa
into
inc
ret
dec
imulb
push
ret
ret
scas
fimuls
cmpsb
ret
push
mov
add
sub
inc
pop
arpl
dec
outsl
popf
popl
lcall
cli
mov
sub
pop
inc
xor
mov
xchg
int
fcom
pop
pop
test
pop
in
insl
xor
add
movb
pop
outsb
add
push
mov
and
jecxz
and
sbb
outsb
movsb
adc
mov
scas
orl
add
push
scas
inc
push
test
cmpl
or
clc
xchg
adc
inc
jnp
lods
sub
les
scas
cmpsl
ret
stc
cwtl
jge
rol
popa
rclb
fsts
adc
xor
test
nop
sbb
lret
mov
mov
pop
mov
std
std
lret
das
sbb
jb
out
sbb
adc
and
adc
xchg
es
or
imul
shr
adc
fbstp
negb
lea
mov
mov
cmp
cmp
lret
cmp
ljmp
fs
cmp
adc
cmp
and
imul
pop
or
adc
push
mov
test
xor
adc
fdivs
nop
inc
xor
imulb
sub
stc
rolb
dec
sub
loope
adcl
push
shrb
pop
pop
push
inc
cwtl
adc
dec
xor
push
pop
jbe
xchg
xchg
cmpsb
pop
shlb
adc
adc
jge
xor
loope
fildl
int
xchg
and
sbb
mov
jmp
aam
jb
loope
mov
mov
stc
andb
jnp
in
sub
xor
std
or
leave
movb
xor
adc
inc
dec
and
push
mov
das
jecxz
push
push
jg
cmp
sbb
sahf
cmp
das
mov
xor
faddl
cmp
add
in
addr16
pop
shrl
mov
fidivs
mov
jbe
testl
movsl
mov
dec
sbb
xor
inc
rcrb
sbb
pop
mov
mov
inc
outsl
push
ja
test
faddp
mov
call
adcl
adc
fstpl
testb
pop
xchg
repnz
push
push
gs
push
cmp
ljmp
push
and
shrl
dec
mov
pop
cmpsb
fsubs
cmpsb
popa
adc
cmpsb
movl
loope
sti
add
adc
dec
pop
jno
int
fst
adc
sub
js
pop
and
inc
cwtl
dec
lea
cltd
xchg
aas
dec
push
lcall
jns
and
clc
and
movl
pusha
andb
pop
xchg
jp
imul
dec
mov
dec
or
xchg
dec
je
pusha
das
adc
xchg
mov
push
push
xchg
repnz
add
mov
sub
pop
imul
ficompl
cmp
mov
dec
mov
mov
or
negb
leave
insb
stos
call
mov
mov
cs
sbb
fs
sub
mov
icebp
mov
xchg
mov
leave
fsubl
test
movsl
lcall
push
mov
enter
lock
dec
sbb
outsl
add
xchg
in
and
mov
dec
fisubs
loope
subl
cmpl
pop
inc
push
testb
cld
xchg
imul
stc
cmpsb
mov
ficoms
das
xor
faddl
ret
lret
sahf
stos
ss
push
js
imul
mov
faddl
out
add
sub
jg
jle
push
test
fbstp
xor
dec
out
xchg
divl
cmc
xchg
pop
faddl
jl
cmpsb
pop
fwait
out
add
scas
jmp
xor
mov
aam
popa
mov
push
imul
add
push
sahf
pusha
cld
scas
cli
or
xlat
imul
or
mov
popl
add
leave
cmp
stos
repz
in
push
dec
push
pop
cmp
in
repz
out
aaa
jb
outsl
lcall
push
pop
loopne
sbb
push
je
or
sub
jbe
imul
sub
shr
test
in
and
test
movsb
mov
push
xor
xchg
paddusw
push
xchg
cli
push
lret
push
lret
stc
mov
aas
xchg
push
jle
leave
int3
mov
dec
jo
mov
enter
jecxz
orb
push
push
jle
mov
fsubs
gs
push
lds
std
loope
cmp
and
mov
loopne
cmp
mov
jmp
jmp
jl
jmp
or
iret
mov
int
leave
pop
add
repz
lods
loopne
in
jae
pop
shll
insb
mov
imul
cli
mov
ffreep
stc
push
lea
mov
es
cmp
mov
out
cmpb
je
jb
adc
lahf
mov
or
scas
mov
es
xor
inc
out
cltd
addr16
push
xchg
jmp
xor
cmp
aad
lods
icebp
nop
sahf
test
adc
ljmp
popf
enter
test
sub
int3
or
pushf
scas
adc
mov
sbb
ss
jp
add
inc
movsb
ret
adc
sti
mov
sbb
loopne
jne
movsl
mov
xchg
mov
sbb
fdivrl
or
fbstp
nop
jb
xor
mov
in
fwait
cltd
call
cmp
pop
adc
inc
dec
bound
addl
pop
jbe
pop
push
jns
gs
mov
test
lds
andl
test
jo
push
sub
lcall
std
mov
repnz
movb
push
jb
mov
outsl
mov
sub
xchg
cmpsb
ret
lret
or
ljmp
xchg
jmp
mov
sbb
xor
fimull
loop
stos
fwait
adc
xorl
out
aas
mov
in
arpl
in
into
fildl
push
jne
mov
xchg
xchg
cmp
fisttpll
mov
insb
popa
xor
push
mov
pop
adcb
outsb
fs
mov
popl
sbb
jns
cmpsl
daa
ja
sub
cmp
adc
cmp
inc
imul
repz
jbe
in
cmp
add
mov
cmp
icebp
mov
les
jle
rorb
sbb
jo
in
mov
mov
repz
jb
inc
add
xchg
or
dec
and
pop
push
aaa
or
test
les
mov
out
or
adc
and
push
test
js
sub
into
xchg
les
outsl
mov
lahf
fs
adc
xor
fcmovbe
xor
jo
jle
pushf
mov
add
scas
icebp
pop
jae
jl
dec
insl
icebp
jne
jb
vmovaps
inc
jp
jne
insb
insb
xor
sub
outsb
push
xchg
into
jnp
add
sub
ja
lods
cld
pusha
fabs
test
mov
mov
or
jo
out
and
xchg
test
sbb
jno
dec
push
pushf
xor
cmpsl
mov
xchg
inc
mov
dec
and
subl
lahf
dec
js
pusha
rorb
fwait
mov
dec
loope
cmp
out
icebp
arpl
shlb
xchg
ficompl
scas
mov
into
inc
popa
adc
lods
cwtl
cmp
jl
cmp
popa
xor
dec
push
mov
cs
and
push
pop
ljmp
fs
sbb
ljmp
lds
dec
sub
mov
lret
cmovb
adc
push
jp
mov
fwait
ss
stos
ja
jecxz
xor
add
ret
add
adc
jne
push
and
aad
push
icebp
xchg
shlb
lret
aaa
cmp
je
push
ret
dec
mov
push
push
daa
sbb
mov
cmp
jecxz
repz
pop
mov
out
cmpsl
or
mov
incl
xchg
or
sti
mov
mov
mov
push
fxch
xchg
ret
inc
xorb
sbb
xchg
ja
jmp
mov
dec
mov
mov
sahf
or
mov
insb
cmp
jne
or
inc
mov
sbb
xor
mov
xchg
jge
cmp
lcall
inc
idivl
icebp
sahf
mov
sbbl
adc
ds
jae
jns
out
aaa
dec
cmp
loop
shl
xor
adc
insl
test
and
shlb
or
push
loopne
cmpsl
xor
addr16
pop
mov
aad
rorl
sub
pop
test
sbb
adc
jns
orl
mov
dec
test
stc
adc
cmpsl
xchg
jnp
add
push
or
jg
inc
ja
lea
push
push
push
mov
repz
sbb
mov
popa
xchg
pop
add
loop
dec
mov
mov
fnstsw
mov
lods
adc
in
pop
xor
jge
lds
jno
leave
push
and
xchg
mov
ficoml
xchg
push
sahf
fwait
jbe
imul
inc
push
inc
adc
je
push
je
pop
roll
mov
xor
shrb
push
sbb
aas
mov
aam
inc
fnstcw
repz
jbe
xchg
xor
pop
pop
or
or
sbb
rcr
inc
std
mov
add
test
nop
mov
das
jb
sti
mov
xor
sbb
mov
adc
rcl
mov
mov
xchg
sbb
cld
sbb
test
or
scas
sbb
dec
loope
sbb
out
or
out
cmp
push
or
mov
mov
inc
xor
adc
xchg
mov
jbe
mov
sub
xor
and
aas
xchg
inc
mov
js
xchg
cmp
jo
jns
popf
aas
sub
xchg
add
inc
adc
adc
cmp
mov
loope
cs
aaa
dec
cmp
outsl
aad
fcoms
lds
in
and
insl
hlt
lahf
fcmovu
push
fsubl
mov
mov
pop
mov
xlat
fs
inc
out
jne
fwait
pop
mov
lds
xchg
mov
mov
pushf
dec
adc
pop
decl
jle
in
mov
ret
ret
aaa
push
pop
sbb
inc
dec
sbb
insl
lret
dec
fwait
xchg
ljmp
fildl
repz
dec
xchg
pop
push
mov
sbb
jmp
or
sbb
mov
push
add
fcoml
xchg
add
or
sbb
int
xor
add
in
lret
loop
push
mov
push
add
adc
add
dec
jb
mov
mov
xchg
jmp
enter
inc
nop
loopne
jge
fidivl
jecxz
and
in
popa
arpl
cmpsl
ficompl
movsl
xchg
dec
into
test
stos
cmp
dec
mov
imul
cmp
mov
push
repnz
dec
mov
cs
std
lcall
xchg
sub
add
mov
xchg
mov
xor
mov
mov
add
cwtl
cltd
and
leave
sbb
mov
fistl
cmp
mov
add
or
xchg
cltd
sbb
dec
std
mov
add
mov
cmp
sti
fmull
imul
xor
and
push
shll
sub
adc
shlb
cmc
ljmp
ja
add
test
cmpsb
xor
fiadds
aam
jnp
sub
and
adc
out
dec
xchg
test
fwait
add
xor
pop
xlat
or
subl
dec
fs
inc
inc
dec
dec
cltd
cmp
or
sub
clc
test
mov
add
insl
int3
mov
push
adc
in
hlt
sbb
sbb
xlat
sarb
xchg
sub
adc
dec
ficompl
insb
fstps
mov
lods
in
dec
sbb
add
fstpl
pop
or
lods
add
mov
ret
jae
mov
push
sti
add
dec
stc
lock
xchg
mov
add
push
stos
pop
dec
and
es
dec
inc
bswap
mov
out
or
test
or
push
in
test
dec
popa
nop
bound
push
jl
in
dec
cmp
jnp
insl
sub
mov
sub
pop
push
aam
pop
scas
cmp
repnz
pop
mov
mov
mov
sub
subl
and
jbe
fidivrs
mov
xchg
mov
push
or
cld
dec
test
pop
stc
cli
xchg
pop
and
scas
cmp
daa
jo
jae
popf
push
movsb
pop
cmp
mov
push
xor
out
xorb
repnz
bound
sbb
movsl
cltd
adc
push
rcrb
push
xchg
mov
mov
jg
test
xor
test
jnp
push
pop
jnp
xchg
ss
addb
outsb
jno
loopne
lret
or
fcmovb
movsl
fxch
test
popa
aad
dec
add
scas
and
in
xchg
fsubr
fcoml
ja
mov
mov
enter
cmp
add
call
mov
lret
aas
mov
in
fldcw
shll
ss
jae
repnz
pop
fstpl
and
iret
mov
xchg
pop
mov
jns
popf
add
inc
dec
lcall
mov
jl
arpl
and
lds
test
fsubs
sbb
inc
in
sti
jl
sub
cmp
jo
dec
into
xlat
mov
mov
xchg
jo
scas
push
push
stos
ja
outsb
sahf
push
xchg
push
fisubl
test
xlat
mov
pop
pop
bound
int3
pop
and
pop
cmpb
mov
mov
push
sbb
mov
dec
sbb
adc
out
call
inc
pop
mov
lcall
enter
cli
dec
sti
and
lock
es
divl
loope
out
loop
lahf
pop
mov
jns
loop
jne
mov
ja
add
cmc
sub
xor
mov
outsb
scas
and
test
sbb
lds
popa
in
cwtl
icebp
test
lea
pusha
pop
out
adc
idivb
pushf
push
dec
xor
cmpsl
jno
es
cltd
test
sbb
push
iret
loop
or
fs
mov
cmp
clc
dec
sbbb
fwait
xchg
loop
push
test
shr
push
pop
fs
jp
std
pop
add
add
mov
mov
adcl
jle
cld
xor
jmp
xor
popa
loope
push
test
icebp
add
pop
push
adc
aam
jle
nop
div
cltd
pushf
sbb
sahf
push
mov
or
dec
int
add
pop
fcom
jle
mov
iret
stos
into
lcall
xor
jo
out
pop
popf
inc
loopne
mov
mov
imul
fldlg2
cmpsb
sbb
and
fbld
jbe
jns
iret
aam
xor
js
stos
mov
cmc
aad
call
pop
insl
xchg
in
and
fwait
add
xlat
aam
sbb
xor
pop
or
shrl
lock
popf
adc
push
fwait
jno
xlat
std
lods
cmp
rorl
lds
mov
cmp
hlt
je
int
fstl
mov
scas
mov
sahf
mov
sbb
aad
adc
add
leave
lds
mov
movsb
aas
add
test
jecxz
ljmp
dec
pushf
and
and
pop
jae
movl
jecxz
inc
movsb
inc
jp
cltd
mov
cltd
jns
test
sbb
or
xor
out
dec
jle
iret
add
lds
cs
xchg
xlat
jae
and
xchg
cld
cmp
adc
mov
xchg
mov
iret
and
sub
mov
subb
sub
aaa
nop
mov
mov
aam
adc
stos
mov
mov
xchg
test
or
sub
mov
push
and
cmp
ret
push
xor
movsb
xor
js
test
icebp
add
sub
mov
orl
into
dec
gs
push
int
test
jmp
push
jp
dec
mov
jno
fstpt
adc
mov
mov
dec
mov
in
pop
es
fmul
push
push
pusha
mov
aaa
repz
dec
pop
sbb
push
shll
cmpsl
xchg
sbb
cmpsb
sub
push
dec
xor
bound
sbbl
push
movsb
xlat
bound
pushf
mov
movsl
icebp
sbb
daa
or
jp
jnp
icebp
rcrl
mov
test
loope
jmp
xchg
out
mov
popl
mov
fsts
int
inc
xor
pop
sbb
dec
ljmp
out
fsts
xor
and
mov
sub
jno
pop
xchg
sbb
lea
push
push
mov
xor
adc
pop
inc
dec
push
imul
and
xor
mov
cmpsb
push
mov
mov
dec
lock
mov
jge
push
and
insb
inc
push
mov
test
sbb
sbb
test
out
add
popf
stos
mov
adc
push
xchg
cld
cmp
push
xchg
out
push
mov
pop
fsubs
pop
popf
adc
adc
push
mov
lock
das
push
outsl
push
rcrl
dec
test
dec
jne
inc
int3
jle
movsl
inc
jb
jmp
fildll
es
scas
mov
nop
mov
sbb
testb
inc
sbb
jmp
xchg
jo
lock
mov
outsb
nop
cltd
int3
mov
cmp
in
out
jp
cmp
ret
xor
mov
lods
int
or
sbb
rcll
push
neg
leave
xor
into
ss
and
dec
out
mov
dec
jge
shrb
mov
insb
or
cs
push
lea
dec
dec
sahf
inc
pop
mov
fbld
fwait
stc
or
mov
cmpsl
pop
bound
inc
sahf
sub
pushf
inc
push
add
clc
mov
lods
sbb
leave
std
xor
je
cmpsb
adc
xchg
inc
fsub
pop
xor
sub
std
sar
jbe
jbe
loop
push
lcall
mov
mov
ja
in
and
cmpb
or
sbb
sti
mov
fs
cmp
popa
jecxz
pop
movsl
lret
dec
outsb
shr
pushf
xchg
test
or
pop
add
push
nop
and
xchg
add
mov
pop
test
mov
cld
imul
std
xchg
cmp
xlat
mov
dec
push
outsb
test
xchg
imul
mov
imulb
xor
push
test
pop
repz
pop
adcb
fadds
or
jae
ret
aam
mov
stos
and
pop
or
sbb
jbe
repz
out
cmp
mov
ftst
ds
inc
out
xchg
push
sub
add
mov
jge
mov
sub
jp
pushf
and
push
lret
sarb
mov
ficompl
dec
ret
inc
push
dec
pop
movsl
call
dec
add
jg
pop
mov
ljmp
movb
sbb
repz
mov
mov
inc
sub
in
xor
xchg
clc
xchg
sbb
dec
cld
mov
enter
mov
cwtl
nop
or
xchg
push
pop
idiv
or
or
jmp
mov
xchg
pusha
outsl
fadds
sarb
mov
push
mov
lret
dec
adc
mov
or
arpl
outsl
pop
outsl
in
inc
inc
sbb
sti
push
pop
nop
je
add
popf
mov
mov
jns
xor
ret
int
xor
call
xchg
arpl
add
adc
sub
testl
loopne
push
shlb
cmp
mov
pop
jne
test
int
js
lods
aad
dec
lret
and
fisttps
lcall
addr16
sub
leave
jb
add
out
mov
sti
pop
movsb
sub
or
leave
aas
xchg
mov
dec
jb
lahf
mov
cwtl
mov
and
pop
loope
push
and
cmp
fisubs
imul
sahf
movb
dec
inc
sbb
ret
scas
loop
mov
sub
inc
scas
stos
daa
or
imul
pop
cs
jg
and
inc
flds
ret
ds
xchg
jae
mov
push
jno
cmpsb
lods
mov
iret
sbbb
scas
pop
call
outsb
mov
cmp
push
mov
pop
cld
scas
lea
xor
fisubrs
pop
nop
push
sub
xchg
fisubl
add
mov
push
push
scas
push
pop
mov
sbb
and
xchg
push
in
mov
sub
push
sbbb
cmp
dec
outsl
cld
xchg
in
push
fistps
dec
lods
pop
aam
jbe
pop
mov
in
jnp
xchg
outsl
loopne
fadds
insl
mov
lods
scas
sahf
jge
cmp
dec
xchg
test
mov
jo
pop
loop
mov
movzwl
aaa
sbb
or
xchg
frstor
jmp
mov
xchg
scas
ret
dec
inc
push
mov
xchg
cli
rcr
adc
pop
lock
mov
or
push
jecxz
inc
andb
cmpsb
push
add
hlt
inc
ficoms
stos
outsl
jp
outsb
out
sub
mov
push
pop
in
pop
lock
dec
inc
inc
sub
lds
adc
ret
cld
sarl
mov
or
shll
out
hlt
cltd
mov
inc
setg
mov
loop
lret
jae
sbb
loope
sbb
xchg
fisttpll
stos
dec
xchg
loope
cmp
es
int
mov
sbb
and
xchg
mov
mov
stos
mov
jb
movsl
mov
push
dec
hlt
test
jle
clc
pop
push
xor
stos
mov
imul
adc
mov
daa
shlb
pop
mov
xchg
jmp
repnz
loop
sub
sbb
mov
ds
mov
sbb
call
loopne
mov
pop
xsaves
sti
push
jmp
lcall
aaa
sub
push
roll
adc
leave
jb
mov
sti
mov
sbb
jle
pop
mov
jae
add
insl
xor
loopne
sub
js
push
or
push
out
addr16
fsubrs
pop
jae
xlat
mov
push
pop
shlb
push
pop
std
cmpsl
movsl
movsb
fdivl
cltd
cmc
jmp
mov
outsb
sub
js
pop
push
xchg
jae
nop
xor
iret
nop
dec
mov
jne
jbe
sub
push
out
sub
mov
mov
les
add
cmp
cwtl
out
jne
add
sbb
lock
xor
push
out
repz
mov
jle
mov
mov
and
fsubrl
add
and
scas
movsb
repnz
adc
xor
stc
push
push
add
mov
lds
sub
add
mov
fs
xchg
popa
clc
leave
insb
cmp
cs
loop
in
xlat
shrb
mov
xor
mov
add
cltd
push
fcmovnb
out
dec
in
sub
fs
or
ret
push
inc
int3
lock
adc
sbb
mov
xchg
inc
popa
ret
test
ficompl
aam
cmc
xchg
xor
or
and
xchg
loope
xchg
lcall
aas
ret
adc
lock
and
cmp
lds
mov
cmpsb
call
int3
jle
stos
imul
lods
pop
or
aam
or
shll
in
stos
sarb
push
insl
out
inc
lock
testb
sbb
jne
sbb
ljmp
sbb
js
fildl
adc
lock
cmp
sbb
jbe
clc
lcall
jae
scas
out
mov
xchg
or
jg
je
int3
popf
rcr
and
in
test
rcl
cmpb
mov
push
scas
inc
cs
or
test
add
xchg
cmpb
jbe
movsb
nop
dec
push
push
pop
push
repz
inc
into
scas
xchg
lock
xor
add
inc
mov
aas
jle
inc
imul
mov
leave
in
clc
xor
add
cmp
pop
ds
clc
insl
rcl
adc
adc
out
push
and
cmp
lods
in
movsl
dec
rcrb
push
shlb
sub
imul
int3
push
jmp
jle
push
rclb
int3
lods
test
add
notl
loope
stc
mov
jnp
sbb
and
fsub
arpl
inc
cmpsb
xchg
pop
imul
pop
cmp
add
jae
xor
cmp
pop
and
sub
bound
cli
adc
sub
adc
std
xchg
xchg
cwtl
jne
xchg
cmpb
stos
lea
cwtl
xchg
frstor
lods
lods
stos
inc
sbb
add
shrl
xchg
in
movsb
pusha
in
push
movsb
dec
ss
push
cs
xchg
push
ficoms
ret
sub
lahf
dec
stc
aaa
cltd
stos
xchg
pop
push
movsl
lods
adc
dec
out
addr16
jle
and
mov
or
cli
shrl
jmp
mov
stos
test
dec
push
out
fistl
cs
bound
jae
aam
out
jle
fsub
inc
pop
sahf
xor
or
ret
push
push
sub
xchg
sub
stos
mov
imul
inc
jns
mov
data16
xor
fsubrp
dec
jmp
push
inc
out
insl
or
mov
sub
jne
cwtl
mov
out
ljmpw
lahf
lds
jo
cmp
push
or
or
add
repnz
dec
add
out
aaa
pop
aam
adc
outsl
push
add
fsub
push
mov
fsubrl
push
sbb
psubd
sbb
out
rclb
pushl
or
dec
lcall
dec
test
mov
fldenv
mov
jnp
sub
or
adc
add
adc
or
jecxz
cltd
adc
movsl
xor
push
shl
jmp
sub
imul
les
ss
clc
or
js
aam
mov
inc
mov
push
cmp
mov
fmull
xor
xchg
fcoml
daa
aad
shl
test
sub
icebp
sub
clc
and
in
inc
xor
mov
mov
dec
ss
or
cwtl
outsl
jae
xor
pop
sbb
sub
pop
sub
sub
jg
repz
jecxz
and
pop
idiv
sbb
xor
or
push
out
test
ljmp
cmp
mov
fidivl
jno
rcrl
inc
dec
mov
ds
inc
cli
pop
and
sub
push
xchg
cmpsl
push
adc
roll
sub
push
push
lcall
out
enter
arpl
neg
leave
xor
divl
sti
and
sub
adc
ja
aas
imul
fwait
xchg
push
orl
inc
testl
iret
inc
sub
lods
sub
push
and
xchg
and
fcoms
cli
je
xor
loopne
push
mov
sub
adc
pop
rep
cmpsb
aas
jl
lea
sub
insl
fidivrl
jne
ljmp
jp
negl
sub
adc
loope
fwait
push
add
adc
adc
ret
add
aad
leave
jne
pusha
verw
aas
inc
mov
clc
cmp
xorb
repz
icebp
inc
aas
stos
dec
and
mov
cmp
or
inc
sbb
dec
test
push
xor
mov
dec
or
xchg
mov
lea
sbb
negl
push
mov
cbtw
jb
cmp
sub
jns
jnp
push
mov
cmp
sub
enter
into
aaa
cmp
mov
addb
pop
xlat
fucomp
divl
outsl
sub
mov
movsb
dec
cmpsl
addr16
nop
cs
in
out
rcrb
xchg
out
and
loope
xor
xchg
adc
cmp
iret
jmp
xchg
xor
jo
inc
dec
and
adc
testl
and
scas
outsb
scas
xchg
std
sub
scas
mov
addl
sbbb
inc
sarl
std
xor
jmp
sub
mov
mov
and
dec
push
mov
add
cmc
shl
out
inc
jns
fmuls
inc
bound
imul
scas
mull
mov
test
push
mov
xor
add
mov
mov
push
pop
sub
cmp
mov
mov
push
stos
fisubs
adc
xchg
jge
es
xchg
repz
lahf
lds
icebp
mov
into
jl
fucomip
dec
fists
adc
mov
mov
push
push
aam
push
out
sub
push
loope
push
or
sbbl
mov
xchg
jbe
adc
roll
or
pop
inc
pop
xchg
cmpsl
in
orb
xchg
sub
push
shll
dec
popa
nop
jge
and
xchg
loop
jmp
xor
mov
fisttpl
xor
shlb
inc
aaa
ficompl
inc
mov
xor
or
bound
iret
pop
bound
push
scas
sub
jo
aam
pop
in
mov
and
or
mov
push
xor
mov
stos
pop
push
or
mov
jl
movsb
adc
popa
cmp
lahf
mov
idivb
rolb
jo
mov
fst
xor
cld
test
jmp
bound
lret
mov
inc
xchg
movsb
dec
cwtl
add
mov
sbbl
shrb
xchg
int
andl
sub
or
cmpl
mov
div
pop
xchg
ljmp
addr16
dec
lds
push
mov
inc
and
int
and
sub
not
xor
jg
jae
inc
movsb
or
or
outsl
inc
bound
push
lcall
adc
inc
mov
rorl
loop
fists
imul
fistpll
dec
clc
push
inc
rcr
cli
test
push
lds
cmp
add
mov
and
fldcw
icebp
sbb
test
ds
fdivr
lds
addr16
push
imul
sbb
push
popf
or
loope
adc
out
int
ja
sub
mov
stos
adc
cwtl
jnp
mov
jno
sub
fildl
push
into
es
in
mov
mov
cld
imul
sar
sbb
mov
fs
lock
fldenv
or
cmp
das
fimuls
pop
negb
int3
ja
pop
dec
imul
ret
adc
jp
jg
js
into
hlt
xchg
test
jnp
popa
jle
shlb
mov
mov
inc
sub
movsb
or
das
shlb
fmuls
test
testb
cmp
sub
sub
or
lcall
adcb
mov
sbb
add
stc
push
or
mov
sbb
mov
rorl
sbb
out
addr16
nop
push
inc
in
push
arpl
push
std
lock
adc
adc
push
sbb
dec
add
add
popf
pop
pop
mov
mov
jbe
addr16
loope
scas
sub
sbb
cmc
mov
jb
inc
in
dec
adc
inc
cmp
pop
sysenter
fwait
rcrl
fsts
outsb
xor
xchg
mov
add
js
cmp
jnp
push
fwait
jmp
lods
clc
jbe
sbb
add
inc
mov
fnsave
xor
add
out
adc
cltd
xor
loope
scas
inc
ret
lds
pop
andb
xchg
movsb
xchg
add
jnp
jne
push
fldln2
js
daa
mov
lock
loopne
mov
ljmp
das
in
xchg
ret
lds
xchg
jae
xlat
sub
add
or
jnp
ret
das
cmp
xchg
xchg
test
cmp
add
loope
dec
ret
test
inc
in
lea
push
ss
int
out
push
or
add
ljmp
in
cmc
in
test
inc
push
icebp
loopne
imul
xchg
xchg
ficoml
ret
pop
and
xchg
insb
sub
mov
out
aad
xchg
scas
shl
mov
enter
lock
mov
aam
andb
jp
orb
in
pop
pop
pop
out
mov
dec
push
fcoml
push
mov
cwtl
xchg
jecxz
xchg
into
fisttpll
loope
fadds
jg
inc
cld
movl
push
mov
cmpb
clc
les
mov
xor
lds
std
pushf
pop
movsl
fbld
lods
mov
jle
aad
mov
iret
jle
or
out
jmp
pop
les
xchg
repnz
push
mov
add
mov
adc
pop
mov
mov
or
sbb
mov
fcmovu
sbb
mov
int
adc
jmp
sbb
in
xchg
add
mov
push
enter
dec
jno
push
bound
cmp
pop
inc
jb
sti
sbb
sarl
adc
outsl
cli
test
lahf
jp
xchg
aaa
popa
mov
mov
insb
cwtl
jne
dec
lds
xchg
cwtl
pop
pusha
mov
sub
inc
mov
in
je
sbb
out
and
jne
leave
and
bound
dec
xchg
xchg
data16
ds
stc
push
cmp
adc
mov
fisttpll
add
adc
or
js
jl
insl
mov
xchg
inc
je
xor
aas
jl
add
stos
xor
fwait
sub
fidivrl
faddl
in
xor
or
push
das
rcll
mov
xor
sub
adc
add
test
int
repnz
outsl
mov
xor
or
add
sbb
mov
xor
pusha
sbb
or
test
stos
fcomps
in
pusha
add
xchg
and
add
int
mov
add
jbe
outsl
lds
subb
jecxz
movsl
fwait
or
insl
sti
xor
mov
daa
cltd
pushl
out
push
test
popa
out
mov
cvtps2pi
scas
call
xor
fidivs
loop
sub
clc
decl
je
mov
dec
mov
int3
adc
adc
sub
mov
xor
dec
in
daa
fcomps
aam
dec
in
sti
jecxz
in
bound
in
cmpsb
loop
test
xchg
inc
cmpsl
sar
in
std
xor
inc
push
jl
xor
test
jecxz
xadd
fisttpll
adc
aaa
call
mov
mov
push
sti
test
xorb
mov
imul
xchg
xchg
es
mov
dec
stos
scas
cmpl
shrl
sub
push
sahf
in
sbb
xor
mov
lods
push
fistl
cmpl
inc
aaa
xchg
leave
sbb
cmpsb
push
ret
aad
dec
pop
mov
sub
nop
insb
out
not
add
jns
rcrl
mov
push
dec
test
fistps
push
es
mov
jne
xchg
movsb
mov
mov
js
adc
fimull
push
jle
pop
clc
ss
xchg
push
aaa
add
inc
gs
push
jb
jno
mov
jl
adc
cli
xor
dec
loope
cld
clc
out
push
jmp
aaa
add
stc
fstl
xchg
sbb
dec
push
cwtl
or
popa
sarb
out
fldl
push
cmp
or
jbe
xchg
sbb
jg
fmuls
sbb
call
xchg
outsl
pop
cltd
mov
fcmovbe
aas
int
scas
mul
push
shlb
mov
pop
loopne
cmpsl
je
inc
mov
xor
or
push
jg
mov
pusha
mov
xor
inc
xchg
sahf
jne
arpl
dec
xchg
call
shll
int3
jns
das
arpl
xlat
adc
push
lahf
lcall
xor
pop
es
sub
scas
push
outsl
add
cmp
jmp
lahf
gs
je
imul
stos
testl
shl
imulb
xor
popf
mov
cmp
rep
xchg
pop
call
in
int3
pop
mov
imul
dec
fistpll
or
add
js
and
daa
pop
js
je
cmp
fimull
and
imul
push
adc
jbe
pop
cltd
sub
jno
mov
push
sti
aaa
ljmp
cmp
cltd
xchg
pop
mov
ljmp
push
dec
lcall
pop
aad
pop
dec
mov
jle
dec
jle
dec
loope
loop
mov
adc
add
lock
push
adc
jmp
ljmp
scas
data16
inc
rolb
jns
pop
aad
out
or
ret
test
adc
jne
and
aas
rcrl
xchg
filds
jb
nop
negb
iret
inc
repnz
lods
cwtl
push
xchg
or
hlt
adc
dec
lret
ret
loop
mov
pop
outsl
sub
lods
mov
cmp
in
ficoml
lcall
int
xor
pop
shrl
mov
jle
mov
ja
push
cmc
iret
and
jg
dec
std
dec
aaa
pop
lods
dec
subl
sub
enter
push
inc
int3
add
mov
adc
in
cmp
mov
xor
jne
icebp
mov
mov
outsl
or
jbe
jb
xlat
mov
neg
cld
xorl
mov
jp,pt
nop
jno
and
data16
iret
test
jl
jns
push
es
jb
adc
in
pop
into
scas
xchg
lock
push
nop
lods
jmp
mov
xor
or
aad
sub
push
dec
fdivl
xchg
cwtl
enter
in
mov
fwait
andl
push
loop
and
lods
in
sub
xchg
mov
fmull
mov
adc
push
push
add
pop
cmp
popf
fisttpl
rcr
flds
add
fdivs
inc
mov
and
repz
jb
fmuls
lea
nop
pop
xchg
out
hlt
mov
xor
pushf
lret
cmc
mov
pop
or
cli
mov
inc
xchg
and
mov
rorl
pop
or
gs
pop
jno
pop
not
rorb
in
push
push
mov
outsl
imul
push
or
adcl
loop
pop
std
dec
movsb
mov
and
cmovns
inc
adc
fsubl
push
les
das
or
mov
ret
out
faddp
pop
cmp
call
xor
and
stos
sbb
adc
mov
adc
fwait
inc
sbb
adc
dec
inc
mov
or
insb
or
in
and
jnp
andl
in
shlb
jp
xchg
add
xchg
loope
test
add
ss
fs
cmp
in
or
and
cmp
xchg
cmpsb
add
arpl
pop
sbb
rcll
mov
icebp
negb
push
test
pop
push
mov
jae
lahf
adc
xor
jnp
or
mov
in
and
xchg
lods
loopne
fcomps
mov
jge
int3
lods
push
mov
cltd
daa
jb
iret
iret
bnd
fists
outsb
add
lods
fsubs
or
jge
cmp
in
push
adc
push
popf
mov
push
scas
or
mov
jb
xor
insl
icebp
mov
push
sub
mov
insb
pop
fs
shrb
xlat
push
add
xchg
in
lahf
sub
into
std
pop
xchg
add
or
cmp
inc
jg
add
lods
or
or
scas
pop
mov
cmp
aad
jmp
dec
inc
mov
mov
fisubs
adc
jno
mov
cmp
ret
imul
loopne
rolb
or
cmp
jb
fsubrs
push
das
ror
pop
and
mov
movb
xchg
sub
arpl
lea
cli
stos
dec
cltd
in
push
out
fisttpl
orb
repnz
push
in
rolb
add
ljmp
jmp
mov
sbb
inc
jns
pop
imul
cmp
or
outsb
sti
xor
mov
jl
shlb
ljmp
call
rcll
aad
fbstp
in
rolb
push
mov
pop
xchg
nop
add
scas
mov
mov
stc
repnz
xchg
sarl
cwtl
sbb
sub
xchg
sub
repnz
jns
frstor
js
addl
inc
jg
jg
repnz
jb
shl
test
hlt
sbb
fbld
xchg
fcoml
xor
xor
pop
mov
and
sbb
dec
xchg
shlb
hlt
std
mov
aam
add
ljmp
adc
call
push
and
lods
mov
test
popf
cmpsb
xchg
cmc
and
push
sbb
xor
cmpsb
add
stos
je
jno
jg
andb
inc
imul
stos
in
and
stos
adc
popf
sbb
adc
gs
es
sbb
enter
sub
repz
test
les
jae
push
inc
cltd
aaa
or
mov
or
cmpsb
popf
add
jbe
inc
lock
rclb
xchg
stc
aas
jns
cli
fisttps
je
test
push
and
mov
inc
cmp
xor
scas
addb
lahf
fwait
clc
cld
jbe
adcl
cwtl
sbb
int3
mov
and
ret
out
imul
ret
push
rol
enter
movsl
orb
mov
dec
lock
inc
repnz
push
fdivp
dec
shr
divl
lds
dec
jmp
push
sbb
mov
mov
pushf
add
push
cmp
push
push
cmpb
mov
mov
jb
push
popl
insb
dec
xchg
ss
jbe
push
jno
cmpl
mov
out
rcrl
ret
sbb
push
in
fsubrs
adc
dec
jg
xor
sbbl
hlt
jle
add
pop
test
js
add
insl
mov
scas
xchg
pop
cmp
mov
mov
fisubs
pop
add
mov
xlat
out
xor
or
or
aaa
push
les
push
xchg
inc
lcall
pop
push
xor
outsb
imul
push
cmp
xor
sbb
sub
push
add
rcll
cmp
cmc
imul
cld
dec
popf
inc
scas
or
xchg
lret
lret
aam
inc
dec
clc
imul
jo
repnz
pushf
mov
adc
or
loopne
mov
repnz
in
fs
je
out
movsl
aaa
push
roll
jmp
je
mov
sahf
lahf
sbb
aad
cmp
jns
pop
xchg
push
mov
mov
out
ja
pop
dec
inc
jae
pusha
mov
rcll
xorl
jp
sub
or
push
inc
xlat
cmp
push
das
mov
mov
lds
movsb
adc
cmp
jg
adc
dec
in
lds
repnz
push
int3
sti
push
rsqrtps
loop
cmp
inc
inc
dec
loope
xchg
int
cwtl
in
notl
mov
mov
aas
lea
fwait
pop
dec
test
rcrb
mov
xor
xor
xchg
and
lods
jnp
mov
pop
adc
daa
jecxz
cwtl
xchg
xor
inc
out
mov
jbe
loopne
adc
jae
jb
sub
sbb
jns
push
push
mov
fs
test
rclb
dec
pop
sub
pop
test
inc
subl
xchg
mov
xor
xor
pop
push
add
pop
mov
push
sbb
push
outsl
loopne
jnp
or
nop
jnp
decb
orb
or
add
mov
addb
mov
aam
lahf
stc
pop
sbb
in
repnz
xchg
dec
enter
mov
inc
clc
insb
push
stos
pop
test
jge
lea
andl
and
mov
mov
fimuls
popf
dec
xor
sub
xchg
sub
inc
pminub
outsl
xchg
outsl
imul
cmpsl
sub
adc
xlat
test
out
mov
into
pusha
mov
repnz
js
jl
divl
push
mov
decb
mov
mov
and
sub
fcmovne
pop
loopne
lods
je
cmp
decb
dec
mov
sbb
xor
ljmp
jbe
mov
sti
addb
xchg
push
lods
fnsaves
jb
out
sbb
xchg
gs
inc
cld
leave
insl
rcrb
pop
lret
repz
cmpsl
das
rcll
sets
shll
jne
inc
mov
pop
adc
jne
pop
cmpb
fs
addr16
xor
movsl
xchg
test
cli
imul
dec
outsb
dec
bound
jo
xchg
dec
in
mov
aaa
and
cmp
xchg
mov
adc
pop
inc
jmp
pop
mov
jb
rcrb
mov
lds
out
add
xor
gs
jl
addl
and
push
jle
adc
mov
stos
out
jmp
sti
in
sbb
imul
xor
int
je
pop
iret
mov
ret
xor
loop
xor
test
fdivs
fwait
xor
or
addr16
cli
rcrb
inc
pusha
adc
mov
mov
int3
and
mov
mov
out
pop
out
push
pop
adc
lods
imul
dec
push
jb
mov
sub
sbb
lea
mov
push
pop
test
jo
push
sub
xchg
pop
jle
mov
mov
or
popf
scas
loopne
ficomps
in
add
pop
and
ret
sub
adc
cmp
cmp
and
pop
and
pusha
push
inc
int
lea
lret
mov
repnz
outsb
popf
pop
lods
popf
or
jle
stc
fbstp
shrl
cmp
or
outsl
pop
xor
mov
push
cmp
inc
sbb
add
xchg
and
xchg
jmp
xchg
loope
add
pop
push
outsb
cli
stos
ds
or
rorl
jmp
add
dec
je
sti
and
inc
cmp
idivb
movsl
iret
cmpsl
mov
addr16
sbb
and
lds
in
or
push
xchg
sbb
jp
mov
shrb
jne
aas
cwtl
xchg
mov
xor
cmp
inc
js
sbb
push
inc
jne
push
and
loopne
and
push
sub
loope
repz
das
xchg
pop
bnd
sbb
addl
add
iret
rorb
mov
test
jns
hlt
faddl
jno
loopne
sti
pop
mov
ds
fucomi
inc
aad
sti
daa
sub
pusha
jbe
and
sub
inc
inc
aaa
cltd
push
mov
imul
fwait
inc
inc
icebp
test
sbb
bound
pop
add
sbb
das
xor
or
push
test
lahf
push
xor
sbb
jnp
mov
fnstenv
mov
or
cmc
xchg
xchg
notb
mov
adc
outsb
mov
pop
or
xor
and
jge
loopne
insl
dec
jb
cltd
and
jmp
and
pop
pop
pop
and
jbe
mov
pop
xchg
call
mov
movsl
nop
xchg
jge
fucomip
jo
or
fcmovbe
sbb
or
test
flds
outsb
and
dec
xchg
loopne
pop
cmp
mov
cmp
lahf
push
pop
fnstcw
leave
mov
pop
pop
push
stc
sbb
mov
mov
shrb
xchg
test
add
cmpsb
lds
push
or
lods
rorl
stc
inc
and
jb
jg
jb
sbb
adc
imul
xchg
test
cltd
addr16
jg
movsl
test
cmp
lahf
mov
jns
daa
inc
ret
lods
test
in
ja
shll
int3
nop
imul
aad
clc
inc
arpl
push
jo
xlat
xchg
push
mov
aam
sbb
dec
jne
jbe
mov
pinsrw
mov
pop
out
test
loopne
pop
pop
dec
and
mov
loop
or
cs
sbb
pop
push
xchg
push
sbb
jbe
cmc
jbe
sbb
fwait
xor
push
aaa
mov
xchg
mov
incb
adc
mov
rclb
pop
fucomip
mov
stos
ja
sbbl
pop
jb
xor
xor
jp
inc
fpatan
mov
inc
push
sub
lret
mov
ret
xchg
out
sahf
jae
mov
adc
xor
shlb
jmp
mov
and
pop
insb
sub
pop
cmp
cld
or
push
test
sti
rcr
jl
lock
aam
stos
xchg
sahf
jp
ror
pushf
adc
fisttpl
loop
in
mull
sar
scas
xorb
push
inc
pusha
mov
in
xchg
mov
sbb
add
dec
in
mov
mov
xor
fsts
movsb
jo
inc
clc
test
xchg
sbb
popf
inc
ja
sub
mov
push
and
xchg
sti
rorb
jmp
cld
sbb
push
testb
dec
xchg
ss
dec
jb
imul
lea
sbbl
in
xchg
jmp
adc
sub
lods
sbb
cld
cltd
jns
ror
cmp
and
mov
std
notl
out
xchg
add
mov
dec
mov
cmp
or
jmp
jbe
xchg
sub
out
push
jb
or
pushf
or
mov
ds
ds
outsl
stc
rolb
jne
arpl
cs
in
xorl
idivl
test
pop
inc
jbe
adc
jl
sbb
jnp
sbb
mov
jg
rolb
fsubl
lret
daa
mov
sbb
test
cmp
fsubs
test
ljmp
ret
inc
pop
pop
push
lods
dec
loope
lea
mov
pop
mov
movsl
lret
xor
xor
xchg
into
add
icebp
je
mov
inc
ss
scas
in
jl
movsl
jnp
clc
jge
je
adc
popf
push
std
test
std
leave
push
cmp
aad
xchg
cmp
icebp
ljmp
push
and
hlt
sub
lods
out
pop
stos
fs
inc
and
test
fmuls
xor
pushf
outsb
scas
in
neg
iret
cmp
pushf
lock
cmp
or
stos
adc
pop
mov
inc
pusha
jge
call
pop
mov
int3
cs
out
push
jnp
pop
insb
adc
and
stc
mov
loopne
jge
loop
fidivs
inc
push
add
popf
pushf
pusha
call
loop
sub
iret
int
scas
cmp
adc
lock
mov
fyl2xp1
xor
sub
jmp
adc
cli
cmpsb
inc
add
adc
fstps
insl
movsb
cld
cmpsl
in
int3
mov
inc
popa
push
jb
or
xor
adc
imul
shrb
push
repnz
or
scas
jg
fnstsw
add
lea
ret
inc
add
sbb
hlt
inc
adc
xchg
stos
cmp
int
mov
scas
scas
sti
ret
pop
stos
enter
rcll
lcall
jge
mov
add
dec
dec
jno
xor
mov
es
movsl
repnz
pop
pop
mov
or
repz
lods
adc
loop
shll
mov
mov
rcr
jbe
fisubrs
xor
movsb
mov
cwtl
test
pop
adc
roll
fadd
cmpsb
daa
lcall
aaa
insl
pushf
mov
and
mov
jmp
lcall
xlat
mov
pop
xor
iret
fldln2
mov
or
adc
jge
in
lds
cmp
pop
push
stos
sbb
adc
xor
js
xchg
out
jne
sar
xchg
idivl
repnz
mov
adc
mov
lcall
cmp
gs
pop
inc
xor
in
xor
push
or
pushf
lahf
lock
test
in
push
test
sbb
mov
cmp
insl
sub
push
inc
js
inc
jnp
push
mov
fs
mov
sub
pop
cwtl
add
stos
pop
dec
es
enter
cmp
in
imul
sub
push
jle
sub
mov
mov
or
push
cmp
pop
push
aam
sahf
popf
push
aaa
jae
jg
ficomps
out
mov
lods
pushf
push
aaa
es
or
popf
lret
add
dec
hlt
or
mov
inc
dec
into
or
test
mov
mov
sbb
mov
pop
nop
int3
pop
pop
cmp
sbb
and
cs
jl
loope
movsl
sub
jmp
and
popf
roll
out
in
mov
dec
sbb
lods
loopne
add
scas
jg
pop
xor
xor
and
or
inc
sub
dec
scas
pop
adc
sub
addr16
in
out
mov
mov
or
lods
or
sbb
aas
gs
sbb
mov
push
push
jbe
xchg
pusha
data16
jmp
fsubs
es
push
jo
ret
jp
xor
cmp
sbbb
mov
cltd
cli
call
sub
and
movsl
ret
mov
fsts
xchg
add
xchg
xor
xchg
hlt
lea
popf
lret
mov
sub
sub
into
cmpsl
repnz
push
imul
and
jno
mov
sub
dec
std
xchg
jb
sub
push
push
and
xor
xchg
mov
xor
cltd
fidivs
movsb
flds
andb
or
adc
adc
xor
in
or
outsl
adc
push
mov
xor
mov
xchg
push
mov
test
out
andl
or
movsb
stc
popa
mov
rcl
fistps
clc
mov
fldt
repz
jbe
xchg
pop
adc
out
push
not
inc
aas
mov
mov
stc
sbb
dec
movsl
xchg
sub
inc
sbb
mov
sub
lock
cli
popf
adc
into
lret
mov
jnp
push
sub
iret
mov
lcall
pop
out
int3
das
jb
adc
or
fcomp
jmp
mov
and
test
movups
push
lock
rorl
sbb
push
aad
xlat
roll
dec
cmp
cmpsb
xchg
nop
int3
mov
imul
outsl
nop
jge
pop
loopne
mov
daa
jno
lock
xchg
fnstcw
push
sbb
cmp
ds
lcall
pop
add
rol
ljmp
mov
stos
push
call
jle
or
cmp
dec
jns
xchg
cmpsb
fists
dec
hlt
jp
cmp
push
push
and
sub
pop
cmpsb
dec
sbb
int3
inc
adc
shlb
adc
cs
jmp
mov
in
inc
or
mov
fistpll
daa
mov
fs
cmp
popa
jnp
cmp
add
ds
inc
jle
xchg
add
inc
testl
jbe
dec
test
sub
shr
cmpsb
dec
sahf
xchg
cmp
inc
cs
aas
out
nop
sbb
iret
and
dec
testb
fildll
mov
in
sub
scas
and
int3
push
dec
xor
out
add
in
stos
stos
pop
loope
movsl
ja
pop
jns
add
or
ds
out
fmuls
cltd
sub
adc
stos
xor
inc
cs
in
js
jg
mov
ljmp
fdivr
add
std
sub
ja
test
sub
adc
fadds
loope
flds
sbb
push
in
cmp
push
push
test
push
inc
pop
iret
fldenv
mov
pop
mov
fsubrp
pop
adc
and
dec
xlat
or
inc
jl
pop
cmp
es
int3
pop
ret
add
dec
out
dec
mov
sbb
mov
decl
pop
inc
stos
repnz
add
jo
xchg
fstp
push
int3
or
adc
lds
pop
sarl
xor
loope
jmp
mov
cmpsl
cmpsl
repz
jnp
cltd
cmc
mov
xlat
es
roll
jnp
xchg
mov
shl
sahf
frstor
in
or
push
mov
dec
int
sar
mov
out
jg
lods
adc
out
mov
call
dec
lret
sti
stc
scas
loope
dec
nop
stc
xchg
cli
outsl
movl
push
in
loopne
daa
outsb
push
sbb
jne
es
and
xor
xor
or
push
xchg
adc
push
popf
mov
xchg
or
or
mov
cmp
ljmp
loope
lahf
inc
mov
pop
or
adc
xor
in
mov
jne
pop
testl
cltd
sub
sarl
inc
mov
adc
lret
dec
dec
sbb
fucomi
dec
add
call
jne
cmp
mov
int
scas
sub
lret
in
cmp
jnp
ljmp
mov
imul
iret
pop
lods
sbb
mov
xchg
xchg
dec
mov
xchg
sbb
jo
inc
jnp
fmull
cmp
test
mov
cmp
sub
pop
push
or
xchg
inc
sarl
lods
xor
cmpsb
push
lret
jno
sbb
ljmp
pushf
arpl
pop
jnp
cmpl
call
pushf
fmull
push
lock
jmp
mov
mov
stc
adc
stos
add
lock
aam
lds
scas
ja
xor
mov
cwtl
add
sub
jbe
sbb
xchg
rclb
cmpsl
loopne
pop
out
xchg
or
jae
cmp
fidivl
xchg
fstl
pop
dec
sbb
mov
and
mov
imul
mov
inc
fcomi
dec
or
jge
sbb
jne
mov
dec
cmpb
subb
push
jae
int
loope
sub
hlt
sbb
mov
mov
iret
pop
int
dec
icebp
mov
in
push
mov
pop
adc
inc
push
ret
inc
pop
shl
clc
cmpsl
outsl
sub
loope
cld
fsubl
sti
cmpsb
insb
shlb
and
cmp
gs
sub
mov
pushf
pop
ret
cmp
pusha
jecxz
iret
test
push
mov
int3
movl
loop
inc
push
jl
pop
and
push
ss
mov
bound
push
jne
pop
test
mov
mov
dec
push
or
mov
movb
inc
loope
push
insb
rolb
sbb
test
xchg
pop
cmp
gs
pop
push
push
sti
into
mov
adc
icebp
dec
xchg
in
inc
insb
mov
inc
dec
out
add
bound
sbb
imul
in
push
mov
pop
ds
popf
gs
adc
aas
cli
mov
adc
addr16
imul
les
stc
dec
addr16
mov
mov
in
jmp
mov
mov
mov
mov
sbb
shll
lcall
push
imul
jl
mov
push
sbb
fwait
lret
lret
and
out
js
stos
lock
xorl
pop
cli
lret
jmp
inc
stc
movsl
loope
xchg
sti
and
pop
xor
dec
pop
add
test
dec
add
lods
dec
pop
shl
adc
xor
cltd
pop
test
xor
out
fisubs
cmp
push
lret
cmpsb
fildll
and
aas
xlat
pop
jge
mov
xchg
jl
xchg
filds
mov
ss
sbb
mov
add
int
xchg
add
and
add
jnp
and
out
add
movsb
decl
dec
fadd
mov
arpl
and
xchg
je
lahf
dec
leave
iret
inc
pop
icebp
adc
add
fcoms
and
fs
mov
xchg
xor
lret
inc
js
xor
popa
addr16
sub
mov
cmpsl
mov
sub
add
xor
gs
pop
xacquire
xlat
imul
xchg
and
arpl
outsl
inc
roll
cltd
xchg
jmp
mov
mov
aad
mov
inc
lcall
call
rcll
dec
in
sbb
pop
setb
and
iret
jnp
inc
fcompl
pop
sar
imul
lds
into
outsb
fsub
cltd
daa
rcrl
into
call
push
jl
ss
mov
stc
mov
in
add
out
adc
sbb
add
sub
in
popa
loopne
pushf
mov
pop
mov
iret
loop
jns
out
subb
sarb
outsl
cmpsl
add
add
je
cli
fisttps
cltd
subb
cmp
fisubs
jno
lahf
cmp
add
ljmp
aad
push
jl
sub
addr16
fcoms
xchg
cmpsb
jae
lds
inc
push
repnz
in
sahf
or
lods
negb
jne
add
xchg
popf
rcll
fucomi
sahf
insl
lcall
hlt
ss
or
lea
xchg
adc
sub
popf
mov
and
pop
fnsave
bound
out
shrb
mov
dec
xchg
in
push
das
cs
mov
mov
adc
pushf
jo
pop
shrb
lods
and
inc
shll
mul
mov
xchg
mov
jge
xor
and
repnz
popa
out
jnp
lds
cmp
nop
push
push
pushf
and
or
adc
inc
in
aad
mov
inc
das
mov
xchg
test
push
jne
das
hlt
rolb
orl
lahf
lea
cli
and
or
imul
sub
jge
add
cld
daa
xchg
in
ret
incb
jg
jns
cwtl
or
pop
mov
jl
sti
dec
xor
iret
into
gs
movsl
mov
xlat
insl
push
daa
and
std
xchg
inc
test
ret
dec
push
mov
mov
imul
mov
cmpb
push
and
xchg
mov
ljmp
jg
or
mov
pushl
insb
js
cmp
jmp
sbb
test
orb
mov
adc
sub
mov
idiv
jae
loope
repnz
jl
shlb
mov
xor
jnp
orb
jns
ljmp
pop
push
mov
dec
out
xchg
pop
ds
adc
cmp
pop
lods
inc
add
or
pop
out
sbbb
push
fistps
mov
pop
fdivs
pop
je
mov
mov
mov
and
test
xchg
insb
jecxz
and
insl
push
add
outsl
jl
inc
push
pushl
lcall
dec
xchg
cmc
pusha
in
xor
add
ljmp
sbbb
fcos
push
jnp
cld
xlat
jae
das
ret
xor
inc
ja
jb
imul
cld
jmp
jnp
mov
in
outsb
ds
sub
jp
and
fisttps
xor
inc
dec
pop
aam
fsub
jl
inc
adc
stc
push
xchg
imul
push
jl
in
or
outsb
bound
adc
jae
add
inc
ret
xor
cmp
xor
sbb
pop
imul
dec
add
sarb
fimull
fdivl
loope
adcb
psubb
push
or
movsl
push
add
outsb
and
adc
jp
xor
pop
inc
or
adc
jne
cmp
cmp
out
sti
add
mov
sbb
mov
mov
cmpsl
mov
dec
sub
push
dec
push
sub
ljmp
aas
lods
repnz
out
or
stc
out
sarb
push
loop
mov
inc
add
iret
mov
ds
xchg
add
jb
push
dec
xor
dec
pop
add
pop
cmc
xor
pop
mov
pop
mov
sbb
adc
push
js
and
repz
testb
mov
mov
into
cmp
ret
rolb
pusha
mov
mov
push
and
leave
cmp
scas
es
enter
fucomp
orb
shl
xor
mov
xor
mov
and
xor
add
dec
bnd
and
fs
cmpsb
xor
loop
jo
test
outsl
push
scas
out
sub
cmp
xchg
cmp
popa
hlt
test
call
scas
nop
add
or
jae
sti
sbb
xor
lods
dec
lock
movsl
xchg
inc
and
xchg
adc
push
or
jecxz
push
mov
popf
mov
mov
or
scas
and
std
cmp
test
xchg
shlb
xchg
pushf
test
jo
ret
loop
cwtl
pop
push
cwtl
xchg
repz
test
js
test
clc
aas
push
inc
xlat
cwtl
fnstcw
mov
xchg
sbb
mov
daa
adc
jno
cmp
imul
cmpsb
lods
mov
xchg
sub
nop
push
inc
mov
and
xorl
add
stos
mov
pop
bound
mov
adc
sbb
mov
adc
pop
or
iret
pop
out
dec
into
xchg
cmc
fisubrl
aam
inc
fwait
repz
pop
out
subl
xchg
mov
pop
mov
mov
mov
mov
or
stos
or
cld
xchg
shlb
sbb
sbb
sub
pop
movsl
and
mov
push
call
mov
insl
sub
xor
and
pop
es
push
stc
int3
and
and
jne
and
mov
subl
ret
cmp
xor
lcall
mov
xor
dec
fcmovbe
lods
pop
xor
lds
push
in
or
mov
cwtl
fdivrs
popa
inc
push
mov
pop
sbb
pop
lret
dec
pop
movsl
andb
sub
into
push
notb
aam
pop
pop
pop
mov
daa
push
add
mov
in
fs
inc
int
or
int3
inc
mov
pop
push
mov
dec
int
lret
add
mull
shrl
bound
and
push
daa
adc
std
push
sarb
cmpsb
fcoml
fwait
jnp
int3
jb
jbe
adc
cli
add
loopne
subb
sar
inc
or
sub
push
or
mov
mov
push
cld
xchg
int3
xchg
xchg
addr16
ljmp
cmpsb
bound
fistl
inc
cmpsl
sbb
daa
lea
push
jb
arpl
sub
popl
and
inc
xchg
repz
icebp
test
imul
cltd
stos
ja
sahf
lahf
add
shll
cmp
lcall
push
mov
jecxz
push
movsl
xor
adc
push
imul
int
and
inc
mov
jns
cs
mov
jns
xchg
lcall
dec
jnp
mov
pusha
test
arpl
out
ficomps
clc
pop
inc
xor
lret
mov
movsl
xchg
cwtl
andb
pop
aam
inc
xchg
out
enter
pusha
cmp
fnstsw
jns,pt
aas
clc
sahf
fcmovnb
fnstsw
sub
sub
sbb
mov
popf
inc
or
add
lea
dec
pop
shl
xchg
or
aam
push
popa
or
mov
loopne
cmp
inc
call
sbb
enter
repnz
mov
cmp
jmp
ret
jb
mov
std
scas
inc
cs
cmp
les
pushf
jne
cmpsb
pop
push
mov
inc
sub
nop
lock
mov
jb
xchg
push
push
mov
and
repz
cld
insb
dec
aaa
cmp
xchg
push
out
xlat
jnp
clc
sub
dec
pop
pop
xchg
dec
je
scas
dec
dec
scas
mov
test
or
icebp
mov
out
mov
add
push
lret
push
adc
push
jns
nop
inc
cmp
js
push
cmp
jb
adc
daa
js
or
jmp
inc
add
push
in
mov
sarl
aad
in
xor
cmp
push
xlat
xor
pusha
jb
inc
pop
in
push
push
test
or
je
aas
call
out
aaa
stos
insb
jle
roll
out
jbe
dec
push
push
fwait
rclb
xchg
imul
mov
mulb
fs
jg
mov
repz
pushl
sbbl
fwait
outsb
sbb
roll
mov
scas
ret
or
stos
xor
cmpb
sti
lock
sti
test
movsb
pushf
adc
xchg
lock
int
hlt
test
xchg
roll
xor
repnz
push
inc
adc
xchg
inc
jle
bound
cwtl
jbe
ret
xor
or
fidivl
mov
shrb
loopne
mov
scas
aam
aam
les
outsb
cmc
cmp
xchg
jbe
mov
sub
lcall
adc
mov
addb
dec
sar
out
aas
fidivs
stc
mov
xchg
mov
xchg
int
test
in
mov
insb
jo
or
sub
out
loope
fmuls
ja
test
fmul
jb
test
and
cmp
mov
and
push
pushf
inc
sub
iret
mov
sub
ds
pop
loopne
arpl
adc
or
inc
das
mov
lret
adc
mov
inc
sarl
dec
and
ds
stos
xchg
popa
leave
sub
xor
loopne
xor
lods
xchg
les
insb
adc
push
pop
xor
lret
jno
fiadds
push
and
xlat
xor
dec
js
ret
hlt
sub
sbb
ret
or
das
test
xchg
out
pop
inc
adc
out
xor
inc
int3
mov
lret
cmc
adc
js
mov
mov
xor
mov
incb
xchg
dec
outsb
arpl
mov
mov
mov
outsl
enter
jp
adc
imul
push
loopne
addb
inc
pop
sahf
test
decb
lret
scas
notl
call
dec
movsb
sbb
jge
cmpl
in
scas
cmpl
xchg
sbb
xor
and
in
dec
in
mov
xchg
fisttps
stc
adcb
mov
sar
int
loop
aad
pusha
xor
push
mov
mov
in
testb
loope
sub
cmp
sub
push
or
or
sbb
jp
fsubrl
loope
andb
jge
adc
jno
adcl
push
ds
or
cmp
bound
mov
add
jecxz
sbb
jne
loopne
jecxz
aas
push
and
imul
leave
gs
jae
push
imul
in
dec
lock
xor
fildll
xor
adc
sbb
xor
pop
ret
mov
inc
adc
fcmovbe
ss
jmp
and
leave
aas
or
out
sbb
mov
inc
adc
mov
stos
decb
out
aad
sbb
std
sbb
add
mov
xor
lcall
test
and
int
outsl
pop
jno
stos
jae
fstpt
je
adc
movsb
mov
lds
outsb
pop
pop
fisubs
sarl
xchg
fwait
nop
pop
ljmp
cmp
push
cltd
call
adc
adc
cmp
jbe
or
sub
test
pop
inc
mov
cwtl
adc
shrl
inc
and
fldcw
test
sub
and
rcl
adc
or
jns
mov
loop
sbb
jp
es
push
push
fldt
jae
scas
mov
sbb
mov
jge
or
in
icebp
push
ret
sbb
data16
ja
push
popf
pop
jmp
or
adc
mov
push
scas
mov
and
leave
sbb
lcall
push
jmp
repz
inc
sarl
jae
push
add
lods
lods
xor
xchg
enter
sbb
mov
pop
pop
and
pop
pop
xchg
dec
push
xchg
test
stc
pop
es
out
jne
mov
and
push
xor
push
cld
inc
loopne
xchg
xchg
mov
sahf
add
xchg
aas
adc
ds
mov
inc
mov
fdiv
mov
fs
mov
jp
add
cmp
pop
mov
dec
mov
xchg
cmp
jo
inc
sahf
and
lods
movsb
lret
mov
rorb
xchg
popf
mov
shll
mov
push
in
pop
fs
es
inc
jg,pt
mov
test
dec
insl
pop
or
mov
outsl
in
dec
test
popf
pop
or
sub
jne
push
sub
in
adc
icebp
lds
jno
inc
movsl
xlat
sbb
and
jbe
sarl
jmp
push
lock
test
jnp
sbb
pop
imul
pusha
jle
cmpb
pushf
lret
loop
out
pop
int
in
and
inc
dec
repz
cltd
popa
iret
mov
fwait
pop
mov
pop
jle
in
mov
push
xchg
mov
adc
xchg
loopne
mov
sbbb
jo
lahf
call
pop
pop
ja
sarl
ja
or
add
xor
sub
inc
mov
xchg
dec
mov
mov
lock
pushf
or
popf
fcom
sub
xchg
sub
in
scas
mov
sbb
out
movsl
sub
push
jne
daa
cltd
cmp
jb
cmc
sahf
out
outsl
and
jg
jg
jg
pop
jmp
xchg
inc
aam
add
sti
mov
movsb
jge
mov
inc
shrb
inc
mov
dec
dec
les
scas
stc
jmpw
jg
lock
add
inc
lret
jmp
scas
fisttps
out
cmpsb
hlt
repnz
mov
cltd
aaa
lcall
mov
xchg
cmp
std
stos
dec
and
repz
pushf
or
xchg
popf
mov
aam
call
jp
fwait
inc
jnp
fstpl
add
add
out
mov
pop
jmp
mov
iret
in
idivl
sbb
stos
scas
inc
aad
push
ds
cmpsl
std
jns
cmp
prefetch
dec
fdiv
push
dec
pusha
test
mov
xchg
dec
test
jmp
xor
and
xor
into
mov
mov
and
pop
sbb
cli
sbb
jo
lods
mov
sub
pop
pop
repz
mov
pusha
into
xor
in
dec
iret
and
sub
lret
jne
cmp
sbb
notb
leave
and
iret
sub
adc
pop
sub
mov
push
jb
std
les
push
lods
jp
push
xchg
vmwrite
int
xchg
fstpl
jecxz
xorl
add
xor
repz
aas
rolb
test
xchg
push
call
fldl
mov
ljmp
cmc
push
je
mov
sub
mov
cmp
jbe
addl
into
fstl
mov
pop
xchg
sub
jp
scas
xchg
les
popf
popa
mov
pop
xchg
in
dec
cmp
pop
xchg
fcompl
xchg
jne
sub
jno
add
mov
pop
lock
or
gs
jl
sbb
or
push
cmp
jno
aaa
test
movsb
jl
xchg
jg
leave
mov
jnp
jl
fldl
and
or
fnstenv
std
cmpsl
andl
push
xchg
dec
mov
out
jns
add
adc
mov
sbb
lods
sub
sbbb
jno
mov
gs
in
out
mov
lods
adc
mov
jmp
aas
je
xlat
ljmp
mov
sub
icebp
inc
push
call
lcall
lock
adc
stos
gs
cmp
cli
and
jb
mov
incl
cmpl
call
inc
fisttpll
adc
shll
xchg
aam
mov
loop
mov
clc
and
cmp
xchg
fs
test
stc
sbb
inc
mov
sbb
ret
lds
inc
jne
xchg
dec
popa
jnp
sub
out
ja
mov
cmp
jnp
and
sub
xchg
sub
and
sarb
dec
insb
fs
xor
aam
inc
lock
xchg
cmp
scas
lret
dec
sti
bound
movsl
pop
pop
sbb
cmp
or
mov
test
popf
lods
cld
push
dec
jg
mov
nop
mov
aam
xor
jmp
std
das
mov
add
nop
jmp
inc
inc
inc
push
pop
inc
jp
and
jae
int3
pop
stos
clc
mov
test
mov
dec
xlat
sub
stc
adc
lds
push
push
repz
and
dec
cmpsl
sub
jl
les
ljmp
mov
lahf
imulb
repz
jbe
mov
cs
aam
rcr
addr16
fnsave
pop
add
inc
or
call
mov
cwtl
pop
and
add
stc
mov
cmp
xor
imul
mov
pop
cmpsl
lock
lahf
or
test
mulps
test
lods
cltd
xchg
dec
and
jae
lds
das
jge
dec
aam
cmp
dec
mov
pop
movhps
aam
loope
jb
lea
or
mov
vpsrlw
push
pop
in
in
jno
or
fsub
mov
movb
insb
lahf
fcomps
fnstsw
stos
sbb
adcl
dec
in
insl
repnz
jo
cmpsl
enter
jnp
xchg
loop
loopne
mov
xor
les
out
ret
jl
jae
jb
xor
or
ds
sub
sarb
sbb
ljmp
into
jns
loope
imull
cli
mov
or
cmp
popf
push
addr16
ret
inc
dec
int3
pop
lea
sub
cmp
dec
push
mov
shll
pop
adc
arpl
inc
lock
mov
or
les
incl
add
push
fidivrs
pop
decb
mov
cmp
ficoml
insl
jns
or
xchg
mov
movsl
dec
test
loopne
out
push
cmc
xorb
les
jg
stos
and
scas
call
daa
lahf
enter
into
and
cmpsb
push
cs
add
adcl
inc
jecxz
test
ja
frstor
orb
sbb
lds
std
or
jae
jmp
xchg
mov
insb
push
push
push
sarl
aad
test
inc
xchg
cmp
js
data16
jne
das
sbb
repz
addr16
and
roll
imul
jb
inc
out
ss
fdivr
add
jbe
imulb
std
pushl
jno
inc
gs
fisubl
lret
push
aas
popa
xchg
sub
iret
into
enter
divl
dec
or
jns
pop
mov
mov
mov
jo
sti
cmp
inc
jg
dec
mov
push
hlt
jl
adcl
or
add
add
xchg
pusha
repnz
mov
stos
xchg
imul
mov
ljmp
mov
dec
jl
sub
popf
test
and
mov
jnp
mov
int
lret
shl
in
lahf
mov
push
shrb
dec
xchg
push
and
mov
imul
rcrl
push
rolb
mov
js
inc
ds
shlb
cli
cmc
rcrl
cli
lock
jnp
push
scas
add
sbb
jp
out
inc
mov
sbb
mov
inc
imul
xlat
enter
bound
sub
push
aas
decl
mov
in
sbb
out
cmc
xlat
dec
lret
call
out
mov
ljmp
push
or
call
mov
pushf
mov
mov
sbb
mov
pop
add
xor
out
jp
mov
inc
arpl
arpl
sti
insb
outsl
xchg
jmp
outsb
pop
mov
sbb
repnz
xor
shll
popf
ljmp
sbb
xchg
in
out
inc
data16
ljmp
test
push
fiaddl
sub
lds
loopne
push
xchg
adc
add
xor
pop
in
ret
inc
cwtl
cmp
mov
cmp
xor
ds
jge
nop
jb
sbb
std
arpl
clc
sti
mov
fldl
xlat
xor
pop
inc
and
loop
nop
xchg
fistpl
dec
cmp
and
pushf
fcmovnu
jo
outsl
dec
push
jne
pop
shl
int3
gs
in
stc
lds
out
mov
or
dec
aam
stos
xchg
xchg
sti
clc
mov
mov
mov
es
std
fwait
push
dec
mov
int
out
js
and
in
add
repnz
jb
ss
sarb
lcall
push
xchg
lret
inc
cmp
rol
pop
loop
gs
ja
sahf
lods
es
icebp
gs
sub
lcall
xchg
lret
push
pop
out
aaa
or
sbb
fiadds
popa
mov
mov
mov
cld
inc
int3
es
jae
popf
aad
xchg
jne
idivb
shrb
add
pushl
and
into
into
xchg
xchg
pop
or
cmp
in
push
and
push
int3
xor
or
mov
insl
cmp
test
and
arpl
jp
data16
sub
lcall
lret
sbb
jmp
aad
or
les
inc
pop
sbb
test
cmp
sub
iret
xchg
jle
ss
jmp
in
je
pop
sub
add
and
sbb
ja
inc
mov
and
adc
mov
mov
jns
aam
xor
loope
in
shrd
test
stos
lods
xor
cld
stos
js
push
xor
stos
mov
mov
das
test
outsl
cmc
rcll
xchg
outsb
mov
cwtl
push
sti
decb
pop
mov
jg
hlt
es
clc
inc
sti
sbb
ja
stos
push
out
rcrl
add
dec
movsb
jb
sbb
cli
arpl
aaa
pop
sbb
pop
cwtl
aad
fwait
aaa
push
xor
stos
sbb
sub
push
in
jnp
jl
adc
adc
gs
push
stc
fidivrl
rorl
push
aam
scas
xchg
movsl
ss
push
imul
pusha
out
cwtl
push
out
decl
aaa
fwait
sti
aam
adc
or
jnp
dec
cmp
push
outsl
and
lahf
mov
iret
mov
jae,pn
jecxz
pop
js
xchg
mov
sub
adc
sbb
test
pop
stos
dec
adc
cld
mov
mov
sbb
shlb
sbb
lods
inc
jns
mov
leave
ss
cwtl
xchg
fwait
ret
ljmp
sub
sub
pop
popf
mov
movsb
es
xchg
dec
pop
pop
xor
pop
and
std
push
push
jne
popf
test
sbb
jl
insb
inc
or
inc
lcall
cmp
std
pusha
int
sub
sarb
addl
and
xchg
adc
adc
push
rolb
sub
imul
cmp
jb
out
sahf
jg
iret
int
js
lock
popa
pop
sbb
xchg
in
jae
test
mov
mov
cmpsb
stos
and
pop
xor
scas
icebp
sub
ret
dec
jb
out
fsubs
jo
jle
add
cs
xchg
jecxz
push
or
sub
lahf
push
loope
pop
xchg
cmp
inc
mov
xlat
cld
std
negb
pop
mov
adc
negb
add
sub
mov
addb
mov
ficomps
out
and
cwtl
pop
ja
pop
cmp
and
lock
add
xor
dec
leave
jo
xor
lret
movsb
pop
xor
sub
scas
mov
cwtl
fsubl
mov
sub
lret
mov
aam
sub
icebp
sti
daa
inc
mov
pop
rolb
popf
mov
mov
mov
push
pop
adc
or
movsl
xor
or
ror
dec
cmp
pushl
aad
scas
adc
fistl
shrb
popa
ds
ret
xor
in
mov
dec
adc
dec
push
into
imul
or
mov
pop
je
out
int3
mov
pop
inc
pop
out
rcl
adc
push
shlb
jge
xchg
out
test
mov
pop
jp
shrb
out
or
dec
xor
ss
cltd
xchg
or
xor
bound
push
xchg
arpl
imul
cmp
loopne
lcall
mov
jle
in
mov
inc
iret
mov
jle
dec
adc
lea
or
xchg
or
movlps
sbb
and
les
inc
pushf
out
dec
loop
jg
sahf
leave
flds
sbb
pop
and
mov
stos
and
pop
or
cmc
out
sub
mov
pop
push
inc
push
jne
dec
and
or
ret
pop
xchg
jmp
test
in
mov
sub
int
cmpsb
xchg
lods
add
jbe
pop
mov
push
repnz
sbb
mov
fsubr
and
and
mov
sbb
ret
sub
std
cmc
mov
xchg
lret
inc
sub
or
push
aad
insl
sbb
and
or
addr16
sbb
lret
dec
xchg
jnp
mov
das
push
shll
shr
mov
addr16
test
push
popa
aad
roll
cli
xchg
mov
push
cli
js
pushf
js
push
insl
test
sub
stos
cs
dec
mov
fsubrs
sbb
and
andb
aas
leavew
and
lds
cs
testb
test
jl
mov
sti
push
addr16
into
adc
leave
xchg
leave
xchg
sahf
cmpsl
mov
sar
test
loope
jo
out
hlt
es
dec
sbb
jg
mov
push
aas
mov
push
xor
inc
insl
mov
add
mov
sub
sbb
adc
jmp
rorb
mov
iret
ds
and
or
fistpl
loope
fadd
jmp
mov
pop
fcoms
sub
inc
aam
in
insl
lods
mov
sbb
repnz
sub
push
lods
iret
mov
dec
adc
xchg
pop
cli
add
sahf
sub
xor
dec
dec
jnp
imul
sbb
scas
cltd
xchg
cmp
inc
mov
mov
mov
xchg
pop
sbb
roll
mov
bound
rclb
adc
lods
dec
jae
add
rcrb
data16
loop
es
cmp
sbb
jnp
pop
pusha
cltd
push
mov
fisttps
push
mov
xchg
in
stc
loopne
les
pop
xchg
cwtl
pusha
loop
out
outsb
lds
into
addb
addr16
push
loopne
adc
add
push
mov
lds
mov
out
clc
cwtl
jg
and
pop
out
cmp
es
nop
icebp
in
lods
movsb
sub
adc
ret
xchg
inc
xchg
jbe
out
cmp
mov
xor
push
lods
cmp
cmp
mov
insb
call
xor
jg
jne
add
lret
dec
je
es
cli
lods
scas
mov
nop
adc
push
ret
rclb
test
mov
or
mov
jbe
nop
jnp
shl
les
inc
cli
xor
jbe
sbb
xor
shrb
lea
pop
mov
jne
cmp
xor
movd
out
lea
bound
jbe
sub
hlt
rorl
aad
out
xchg
aas
rorl
ret
or
sub
sahf
pop
inc
out
in
jg
push
pop
jle
test
jno
jno
or
and
xor
mov
popa
add
lea
gs
pop
loopne
pop
cmp
xchg
xchg
xor
scas
xchg
loope
jle
pop
push
push
fsubrs
pop
add
shl
and
add
imul
add
xchg
fisubl
lods
adc
daa
js
cs
cmp
pushf
xchg
sub
fsubp
mov
mov
mov
sub
fisttpll
adc
cmpsl
sbb
imul
hlt
mov
inc
jp
sub
jae
mov
cmp
lock
inc
std
roll
sahf
insl
mov
xchg
mov
lods
adc
adc
out
xchg
inc
jno
mov
push
and
sub
stc
stos
push
ret
cltd
repz
dec
add
xchg
cmp
in
dec
jl
arpl
stc
pop
idivl
add
je
fcomps
mov
jno
inc
pop
dec
sub
dec
inc
inc
jge
mov
in
xchg
int
inc
inc
mov
test
cmp
jno
jle
add
notl
in
jnp
es
sub
stos
nop
dec
rclb
xor
pop
mov
add
sub
mov
rcrb
loope
adc
cmpb
cld
or
lcall
mov
xor
sub
cli
push
jbe
cmpsb
repnz
cmp
mov
xor
fldcw
adc
test
mov
cmp
push
and
arpl
ss
adc
sub
shr
int3
arpl
lret
xor
daa
sbb
loopne
icebp
and
xchg
adc
ret
aam
sbb
or
push
cli
jp
std
jp
inc
adc
dec
insl
test
loope
or
out
xor
mov
push
pop
or
cmp
repz
jge
cmp
dec
pushf
mov
and
leave
jmp
insl
mov
dec
test
shl
jge
popf
jecxz
mov
testl
stos
push
jae
push
sub
mov
push
mov
testl
pop
mov
push
adc
xor
or
add
data16
je
pop
pop
sub
cwtl
or
mov
shl
lahf
xor
cwtl
aas
adc
push
xlat
sahf
pop
pop
mov
push
mov
fsub
pop
lss
ret
loope
int
xor
jl
inc
pop
push
int
outsb
jo
stos
push
xchg
xchg
push
lahf
push
scas
push
mov
inc
lahf
jo
ja
jo
xchg
bound
or
icebp
sbb
int3
push
sbb
scas
inc
xchg
dec
mov
fistpl
sub
int
xchg
outsb
pusha
in
sub
in
test
inc
lea
jno
jnp
lock
pop
hlt
lcall
inc
push
test
sub
aam
or
mov
mov
lahf
outsl
xor
xchg
iret
or
cmpsb
pop
adc
orl
out
mov
mov
je
xchg
ret
mov
inc
cwtl
inc
enter
and
insb
xor
out
fdivr
aam
inc
shll
inc
mov
sbb
mov
and
inc
xchg
mov
push
outsl
push
xchg
mov
or
popa
add
xchg
ret
xor
frstor
push
data16
mov
ret
sub
adc
jg
push
nop
loop
rorb
jmp
mov
mov
dec
out
push
mov
adc
sbb
inc
fisttpl
insl
and
call
and
push
or
mov
mov
ficompl
loopne
mov
popf
sub
add
and
push
mov
push
sub
pop
mov
jae
cmp
inc
lods
xor
or
out
inc
outsl
jnp
push
hlt
les
pop
cmp
or
and
mov
lret
in
arpl
adc
cs
mov
pop
fsubrl
cmpsl
cltd
mov
and
jl
dec
dec
nop
fisttpll
xor
inc
sub
sarl
idivb
jp
nop
out
xor
cs
add
sbb
cld
mov
fstps
repnz
cmp
push
cmp
cmp
sbb
mov
mov
out
ss
movsl
xchg
xchg
sub
pop
push
sub
or
cmc
mov
or
cld
fwait
inc
inc
psrlq
gs
pop
cmp
adc
gs
icebp
jnp
jne
out
out
xchg
push
call
push
mov
dec
mov
int
mov
adc
gs
jge
push
push
arpl
cmp
in
int
leave
jb
insb
xor
sbbl
sar
in
mov
in
push
add
popa
shrb
sub
filds
notb
mov
jmp
cmpsl
and
movsb
mov
gs
fs
call
pop
sbb
mov
out
dec
dec
cmp
sbb
fsubl
cmp
xchg
repnz
jg
mov
stc
hlt
mov
enter
cmpl
sar
mov
leave
or
dec
push
addr16
mov
adc
push
mov
cmp
je
in
pop
mov
push
hlt
xor
pop
mov
ds
mov
aaa
adc
out
das
cmpb
xchg
push
fwait
push
dec
pop
lahf
stc
addr16
or
test
js
sarl
js
cmpsl
aas
xchg
insb
cmc
sub
stos
sbb
fwait
push
and
adc
add
pop
ret
sub
jb
fucomi
sti
inc
in
dec
rolb
push
push
outsb
test
addr16
push
test
sbb
xorb
popl
rcl
test
cld
cmp
jno
dec
into
arpl
idivb
addr16
cmp
repnz
add
add
shrl
shll
out
jle
jbe
out
dec
xor
push
or
sub
ja
jo
decl
out
xchg
add
xlat
fcmovnu
cmpl
in
inc
sub
xor
inc
fmuls
out
je
lods
sub
into
out
orb
int3
cmp
push
dec
popf
push
subl
ljmp
mov
clc
ss
xor
and
mov
ja
enter
cmp
inc
pop
push
cmp
mov
dec
xchg
mov
sub
jne
mov
leave
stc
enter
pop
data16
sbb
fdivrp
xchg
out
pop
lds
mov
fistps
xor
mov
test
jne
xchg
push
push
mov
mov
jne
aad
hlt
aad
sar
imul
and
aas
popf
mov
and
pop
jne
repnz
clc
mov
in
push
ret
add
dec
mov
lods
mov
ja
inc
test
dec
add
pop
rolb
pop
mov
dec
fst
sub
mov
or
test
xor
sar
cmc
mov
push
cmp
sub
imul
push
pop
bound
sub
adc
add
sahf
popa
sbb
dec
enter
iret
cltd
mov
xchg
push
or
jp
in
jecxz
inc
mov
cmp
sub
add
or
pop
repz
mov
xchg
push
xor
mov
call
or
stos
lods
inc
cltd
out
xlat
aad
mov
imul
ds
loopne
cmc
pop
clc
int3
pop
test
mov
lock
dec
fxch
push
jp
jne
sbb
call
jmp
mov
cmp
add
lahf
jmp
and
dec
adc
xor
popf
and
sbb
inc
nop
mov
jnp
jmp
pop
daa
jo
push
dec
mov
les
inc
cmp
add
ss
pop
int
bound
adc
in
adc
pop
ss
mov
insl
inc
das
es
stc
je
xchg
xor
lahf
sub
xorl
mov
add
ss
xor
mov
scas
xchg
xor
xor
pop
rcll
xchg
xchg
pop
stos
inc
mov
rorb
daa
jg
add
pop
lea
adc
in
repz
push
rcrb
addr16
jbe
jg
scas
cli
and
mov
fadds
sub
or
shll
push
add
pop
mov
adc
daa
and
cmp
scas
test
daa
popa
in
adc
inc
jecxz
xchg
sbb
movsl
fldl
jno,pt
mov
adc
cmp
pop
or
pop
cmc
ret
cmpb
push
and
addr16
pop
mov
in
mov
or
xchg
cmpsb
xor
cmp
mov
jns
mov
xor
repz
lods
mov
pop
mov
hlt
into
stc
cmp
jne
leave
pop
add
sbb
dec
fdivs
mov
das
lahf
mov
repz
xor
add
arpl
xchg
jne
repz
nop
pop
push
inc
sahf
cmp
cmp
fldcw
subb
xor
inc
add
pop
dec
dec
pop
jbe
cmp
pop
xchg
cmc
out
and
or
inc
dec
mov
fstl
and
out
aas
push
mov
or
insb
ficoml
jmp
pop
cwtl
sarb
xchg
pop
hlt
lret
mov
les
std
add
xchg
push
ficompl
jns
loope
mov
decl
cs
clc
push
xor
inc
punpckldq
shr
mov
movsb
fdivrs
or
xchg
pop
pop
push
test
stc
rorl
sub
aas
sbb
jb
or
inc
lret
dec
inc
imul
sub
jl
in
xchg
movsl
cs
xor
cmp
dec
int3
adc
hlt
pop
pop
push
push
sbb
insl
cltd
sub
add
inc
mov
inc
jae
popf
adc
add
dec
inc
lods
cmp
dec
adc
pop
lods
xchg
inc
scas
add
ficoms
addl
and
xchg
xor
loopne
mov
sbb
stos
jecxz
mov
cs
push
push
lods
stos
repnz
sbb
fdivs
lcall
nop
popf
xchg
add
lods
push
idiv
inc
pop
lret
int3
cmp
dec
lret
pop
loopne
xor
jp
dec
push
je
lock
data16
or
shrb
out
sbb
jnp
mov
int
lahf
jl
dec
mov
mov
or
add
inc
cs
push
fsubs
mov
fsubrl
add
das
call
mov
cmp
mov
and
cmp
repnz
mov
or
ret
int3
adc
lahf
pop
iret
inc
xor
iret
pop
push
rcll
and
cmp
test
int3
stos
test
stos
insb
pop
push
mov
into
or
jmp
aaa
jle
pop
lds
imul
pop
mov
sub
lcall
mov
mov
add
adc
jmp
je
test
stos
and
scas
push
adc
pop
ret
xchg
push
push
out
imul
out
mov
adc
fistl
sbb
add
stos
jle
jae
sub
mov
dec
adc
sub
inc
jns
out
das
lds
jns
and
lods
out
into
mov
ja
xor
sbb
xor
cmp
in
jmp
dec
pop
in
jne
dec
pop
into
dec
loope
jmp
or
dec
xor
inc
movsb
mov
dec
jmp
push
xlat
movsb
push
nop
pop
addb
movb
cmp
xor
pushf
jo
adc
pop
pushf
aas
adc
mov
mov
sbb
and
and
lds
xor
sti
or
rolb
test
insl
xchg
pop
fs
stos
int
cltd
stos
mov
outsb
cltd
pop
mov
inc
fmull
ljmp
and
add
adc
movsl
and
inc
mov
add
into
pop
sub
scas
add
dec
inc
mov
pop
jg
jne
lods
int
movsb
loop
push
sbb
mov
clc
daa
rorl
cmc
sub
lock
push
or
sbb
inc
and
bswap
jp
jno
pmaxub
pop
js
mov
sti
sub
adc
push
and
imul
lods
or
dec
scas
cs
fwait
adc
cli
add
adc
xor
ret
popa
ljmp
dec
in
jp
xchg
sub
sbb
test
js
hlt
loop
push
rcl
xor
cmp
sti
mov
jg
adcl
sbb
fcmovu
sahf
outsb
jmp
lcall
cmp
inc
mov
mov
push
cwtl
cmp
dec
xchg
lods
into
insb
out
sub
or
inc
into
movb
test
inc
jecxz
ds
mov
cmp
lock
addr16
xrelease
out
nop
mov
out
pop
out
aas
lret
cmc
mov
lock
test
mov
push
roll
pop
xchg
sbb
popf
jle
in
fadds
jne
xor
push
mov
arpl
push
jmp
dec
xor
push
cmp
stos
mov
push
push
int3
shll
insb
movsb
sub
mov
stos
cltd
pop
inc
repz
clc
rclb
fmul
sub
int3
mov
xor
push
insl
mov
inc
dec
jnp
jb
repnz
cmp
ja
test
lret
add
vmovq
mov
mov
pop
ss
push
ret
push
out
add
pusha
push
or
add
and
in
scas
out
das
imul
mov
bound
mov
aam
and
push
jg
add
int
int3
mov
orl
jmp
pop
or
in
mov
sub
adcb
or
xor
cs
xor
pcmpeqd
mov
adc
pusha
das
and
stc
pop
mov
mov
lock
add
or
outsb
xchg
mov
jbe
idiv
andb
cwtl
aad
add
in
pop
add
xor
shl
mov
pop
add
push
pushf
stc
mov
jge
xadd
inc
rcrl
pop
pusha
mov
cmp
inc
imul
dec
cltd
lcall
in
and
lea
in
jp
inc
sub
adc
xor
idivl
mov
mov
push
cmp
mov
xchg
mov
mov
xchg
pop
loopne
lods
jo
pop
scas
aad
sahf
subl
jne
std
aam
std
arpl
push
lea
push
xor
xorl
mov
lcall
cvtpi2ps
xchg
mov
shrb
ss
push
xchg
stc
imul
or
adc
iret
pop
addb
cmpsl
sti
fs
iret
aaa
pop
repnz
lods
addr16
jne
dec
out
mov
push
aad
and
sub
test
enter
ss
lock
add
fnstenv
aaa
sbbb
jmp
call
inc
cltd
pop
fdivrs
fadds
sub
xlat
test
jbe,pn
dec
pusha
lcall
or
aas
cmp
aas
add
clc
sub
in
pushf
jbe
xchg
xor
ret
xchg
ret
push
mov
xlat
fcompl
xlat
mov
in
ds
mov
mov
enter
int3
pop
mov
dec
inc
popf
xor
nop
addl
aaa
stos
adc
sbb
dec
pop
fdivrp
shll
xor
pop
cmp
loop
in
or
mov
test
inc
jl
push
dec
sub
je
xchg
push
add
xor
push
out
or
add
out
mov
add
xor
fdivr
sbb
add
rclb
fistpl
jp
push
cli
jg
mov
add
insl
cmp
mov
mov
out
popa
lods
loopne
sub
pop
jg
mov
test
repnz
cmp
push
lret
push
mov
or
daa
scas
adc
popa
out
adc
jno
pop
cltd
cwtl
jecxz
shrl
and
aam
push
imul
add
into
test
mov
mov
add
xchg
inc
dec
out
mov
push
dec
or
mov
cmc
out
cmp
mov
scas
sub
add
push
repz
sahf
push
es
sbb
xor
ja
arpl
mov
pop
int
jnp
xchg
in
clc
mov
ds
dec
xchg
mov
jecxz
mov
out
add
cltd
sarb
enter
out
loope
cmpsl
mov
imul
add
cmpsl
imul
imul
in
push
repz
adc
movl
mov
push
decl
cmp
or
jnp
dec
add
push
ja
and
jg
xlat
adc
pop
sub
imul
stos
mov
inc
shlb
xchg
jge
mov
das
push
fiaddl
scas
mov
test
das
out
jae
sbb
push
mov
jmp
lods
or
mov
xchg
sahf
in
push
fistl
or
cmpsl
pop
ss
js
mov
inc
dec
repz
ja
dec
mov
hlt
outsb
sbb
int
pop
clc
or
mov
push
rorl
xchg
ja
xlat
jae
fisttpll
push
cmp
cli
ss
xor
daa
out
dec
mov
xchg
cmp
dec
jbe
imul
push
xor
ljmp
daa
pushf
xor
rclb
and
sahf
scas
imul
inc
repnz
pushf
pop
in
mov
sub
dec
sbb
push
sahf
push
popf
in
rorb
inc
and
adc
jbe
lds
shr
mov
xchg
sahf
add
notb
or
enter
and
pop
mov
and
cmp
mov
jge
push
mov
cmp
pop
push
dec
out
sub
jno
and
ljmp
test
cmp
jle
jmp
push
test
push
or
loop
xor
ret
dec
cs
ss
dec
mov
mov
mov
sti
fwait
imul
and
pushl
add
stos
out
push
js
shlb
lods
imul
jns
cmp
enter
cwtl
mov
adcl
std
aad
jp
jbe
in
and
xchg
xor
add
dec
sub
cmc
pushf
xorb
inc
push
int
aaa
stos
inc
inc
lret
cs
scas
popa
inc
int3
clc
bound
iret
and
xlat
mov
insb
inc
into
inc
jae
test
sub
xor
repz
shl
or
xchg
cmpsb
mov
or
movsl
jp
pop
sub
arpl
gs
popa
clc
add
int3
cmc
add
fcomps
imul
sbb
in
and
jne
out
add
jae
push
push
pushf
enter
lds
sbb
and
cmp
repz
sub
jle
lods
pop
sar
jno
push
out
xor
jbe
cmp
sbb
sbb
sbb
pop
or
cmp
cmpsl
lock
xchg
ss
les
xchg
sbbl
ret
xchg
das
jns,pn
arpl
ror
rcl
ret
loop
xchg
xchg
dec
ror
push
dec
out
stos
loop
or
xor
or
mov
mov
inc
mov
pop
lahf
adc
mov
shlb
push
aaa
addl
jp
std
xchg
push
adc
push
test
scas
pop
les
and
lock
and
stc
cmpsb
mov
fnsave
xor
mov
push
mov
fildl
xor
and
mov
adc
mov
nop
roll
lret
mov
gs
xchg
outsl
cmpsb
dec
and
insb
rorb
jo
sub
inc
addr16
les
add
mov
hlt
xlat
jge
ror
pop
jae
lahf
scas
filds
in
icebp
cmpb
ss
cmp
bound
push
xchg
je
inc
adcb
mov
jb
stos
push
sub
xor
outsb
repz
cmpb
out
or
fdivs
cmp
sub
inc
ds
pop
roll
loop
inc
test
dec
mov
inc
std
andl
push
add
fdivp
test
push
cltd
jno
and
or
push
in
push
mov
cltd
popf
in
mov
xor
dec
mov
and
or
ret
adc
sub
in
dec
mov
adc
adc
imul
in
loop
lods
lcall
jecxz
loope
in
pop
hlt
jle
mov
fsub
lds
jo
icebp
fwait
aam
outsb
repnz
mov
mov
loop
xchg
call
pop
lea
lret
lods
adc
jne
sub
and
inc
das
out
cwtl
push
lods
mov
adc
cltd
pop
fnstsw
cmc
jae
repz
bound
fnstsw
out
roll
xchg
aam
push
fsubs
fists
test
jno
scas
pop
das
jns
movsb
sbb
dec
test
xchg
push
nop
stc
into
or
gs
add
out
push
pop
in
jmp
lods
clc
push
fsub
jp
loopne
sbb
loop
add
push
adc
pushf
addb
lcall
lahf
gs
je
xchg
stos
test
inc
ds
adcb
push
add
incb
mov
mov
mov
cmc
aaa
pop
and
inc
xchg
add
cmpl
mov
scas
sub
dec
adc
into
xor
xchg
cmp
push
movd
es
out
xchg
and
cmpsb
sub
jns
mov
dec
leave
adc
xchg
or
sbb
pop
pop
mov
inc
mov
stos
xchg
mov
les
sti
lcall
fstpt
pop
imul
movsb
push
mov
mov
pop
data16
out
stos
add
loop
pop
and
and
dec
xor
add
and
cltd
push
dec
dec
jl
sbb
repnz
idivb
mov
cmp
insl
notb
test
add
aas
inc
xchg
pop
dec
jns
add
lcall
xor
xor
addr16
mov
lods
push
cmp
scas
inc
sub
aam
push
shlb
fmul
insl
xchg
aaa
add
or
inc
das
loope
mov
xor
and
hlt
jo
pop
dec
popa
aaa
out
outsl
pusha
push
push
adc
pop
jno
js
ja
push
sub
mov
test
outsl
pushf
xor
insb
aad
leave
adc
pop
pop
adc
movups
mov
ss
xor
lods
inc
mov
pusha
int3
bound
addl
add
leave
fstl
cmp
pop
outsb
fnsave
dec
dec
pop
bound
mov
frstor
sbb
sbb
lods
jb
loop
je
xchg
mov
lret
out
popa
lods
imul
mov
or
fnstsw
cmp
cmpl
xor
jmp
pop
inc
xor
adc
inc
clc
dec
movsb
insl
cwtl
jnp
mov
xor
aad
xor
scas
cmp
aaa
lods
addr16
mov
pop
test
mov
adcl
aas
and
jae
clc
mov
ja
enter
inc
enter
shlb
or
insl
cmp
mov
push
flds
jns
outsl
lea
int
aaa
idivl
and
cltd
push
mov
inc
scas
mov
push
orl
pop
gs
out
sbb
sub
fnstcw
iret
sbb
cwtl
push
pusha
in
jnp
in
jnp
dec
stos
clc
jne
pop
nop
and
ja
inc
iret
cmpsl
ret
jl
cltd
stos
call
mov
cmp
jnp
push
and
cmpl
mov
mov
lret
lds
mov
in
inc
mov
and
lods
les
leave
lahf
mov
pop
and
pop
shlb
xor
cmp
push
or
outsl
sub
inc
xor
in
cmp
push
repnz
or
push
xchg
mov
dec
gs
mov
pusha
sbb
loopne
push
sbb
data16
fcomps
sub
xor
shll
sbb
xchg
cmpsb
dec
push
push
aas
int
dec
or
enter
pop
mov
or
adc
sti
dec
pushf
adc
insl
movsl
fisubl
mov
in
mov
push
pop
pop
arpl
mov
shrb
lock
scas
jo
dec
jbe
mov
push
cmp
sysret
xor
icebp
mov
mov
push
adc
pop
iret
mov
cs
xor
or
mov
int3
ret
jo
xor
sbb
jns
push
scas
dec
jb
test
cmp
add
in
pop
ss
rol
aam
cmc
test
adcb
cmpsl
movsl
push
es
sub
lcall
js
mov
jle,pn
jle
leave
or
jmp
idivl
in
push
clc
and
addl
gs
xchg
outsb
pop
sarb
cmp
lods
rcr
mov
and
adc
push
dec
pusha
pop
cmp
aas
rcrl
loop
arpl
cmp
shlb
xchg
out
dec
push
test
xchg
sahf
pop
and
and
jg
rcrb
and
imul
cmpsb
std
mov
lcall
push
xor
sub
jae
dec
sub
iret
mov
push
mul
lea
adc
mov
mulb
test
loopne
push
pop
inc
into
or
fiaddl
popf
aad
mov
ss
push
push
test
mov
ds
addr16
adc
mov
add
cld
loope
nop
sbb
pop
dec
xchg
push
fsubrl
dec
adcb
rol
xor
and
push
scas
ret
lock
mov
daa
mov
mov
xchg
out
sbb
xor
lret
lds
ret
xor
insl
scas
scas
mov
hlt
fdivr
stos
dec
aas
inc
rcrl
aam
dec
mov
mov
pusha
lods
mov
mov
flds
cltd
jmp
inc
leave
cmpl
out
aaa
lcall
imul
fsub
andl
and
lahf
das
daa
movsb
inc
pop
push
add
dec
cwtl
xlat
out
outsb
ficoms
inc
flds
dec
insb
or
dec
stos
push
inc
lcall
xor
dec
cwtl
sub
mov
daa
dec
jne
cmp
xlat
lret
cltd
int
mov
iret
faddl
sub
lea
pop
sub
mov
jo
adc
out
and
loop
and
iret
sub
lret
fnstcw
loopne
or
jle
test
jbe
out
leave
xchg
dec
or
out
dec
jbe
mov
or
mov
cmp
orl
insb
push
lock
into
sbb
inc
pusha
mov
pop
or
xchg
mov
mov
and
sub
jae
dec
adc
loop
mov
inc
push
add
jo
cmp
or
pop
inc
hlt
hlt
fistl
push
test
mov
lcall
js
imul
test
imul
xor
jne
lods
stos
cli
fsub
loop
cmp
into
leave
fmuls
jae
mov
ret
ret
add
pop
aam
pop
sub
lret
imul
mov
mov
fsave
and
scas
mov
cmc
lods
popf
cmpl
out
sbb
jmp
inc
sub
rorl
mov
jns
push
iret
es
mov
loop
icebp
or
lock
push
test
aas
inc
jg
xor
or
sub
les
lahf
outsb
mov
mov
sbb
add
pop
shll
or
jle
test
mov
xor
pop
sub
inc
xlat
addps
daa
fdivr
pop
test
lret
pop
jge
xor
mov
adc
bound
stos
add
imul
fstl
xchg
or
fimuls
in
and
lock
add
movsb
roll
dec
add
sahf
sbb
pop
or
insb
sub
jl
dec
jo
add
movsb
and
mov
jle
movsl
and
or
popa
pop
pop
and
mov
and
mov
es
adc
arpl
cltd
enter
jbe
dec
iret
cs
inc
inc
jp
movsl
sub
cltd
or
xor
ss
out
repz
cmp
xor
mov
jmp
loop
mov
mov
pop
xchg
or
icebp
mov
or
rcrb
addr16
dec
and
or
push
sbb
xor
mov
inc
cltd
sub
mov
arpl
movsb
pop
cwtl
int
out
addb
insl
or
mov
push
sahf
xor
push
add
and
daa
xor
cmp
jb
add
aaa
ja
xchg
sub
pop
ja
imulb
push
clc
mov
ret
lds
xchg
std
mov
fmuls
jb
popf
lock
adc
sahf
dec
adc
lds
outsl
not
je
ret
movsl
fisubrs
push
lods
cmp
adc
jo
int3
dec
inc
in
idivl
xlat
dec
sub
mulb
xchg
xchg
mov
and
push
es
push
push
dec
ret
in
cmpsb
lret
jnp
push
imul
add
push
and
orb
cmp
cli
notb
gs
add
out
jo
outsb
jb
or
cmp
mov
xchg
jecxz
in
add
and
jo
loope
pop
inc
stc
into
out
dec
xchg
les
inc
out
fimull
push
pop
bound
adc
sbb
ljmp
ror
adc
push
add
pop
mov
inc
test
lcall
pop
repnz
movsl
inc
imul
push
clc
mov
push
and
mov
push
push
add
lods
sahf
jp
xchg
lods
repnz
mov
dec
addr16
ror
aam
data16
mov
xchg
sub
push
push
mov
or
popw
insl
push
and
or
xchg
notb
aas
xchg
ss
in
cmp
or
into
pop
and
inc
mov
dec
jnp
jg
inc
pop
cmp
mov
arpl
movsb
inc
mov
cmp
icebp
shll
ljmp
cli
in
lahf
daa
or
mov
scas
pop
pusha
jne
aad
mov
mov
xchg
mov
mov
fdiv
and
ret
lods
rclb
cmpsb
jmp
xchg
fisubrs
stos
mov
mov
insl
push
inc
sbb
pop
mul
js
sub
cmp
fldenv
int
movsb
jo
test
xchg
add
mov
mov
js
ljmp
push
mov
stc
jl
cli
sub
pop
and
pushw
outsb
fwait
pop
pop
loopne
fmuls
mov
test
pop
adc
jbe
sub
mov
bound
orl
cld
xor
adc
push
and
and
dec
dec
pop
pop
pop
movsl
dec
fnsave
fnstcw
adc
cmpps
push
and
test
in
adc
mov
xchg
push
pop
leave
mov
shrb
es
push
insl
mov
jl
mov
aaa
mov
in
jno
shrd
jns
lret
dec
pop
popa
leave
inc
jge
incb
sbb
sub
sahf
iret
lret
add
leave
jb
or
pop
icebp
push
sub
xchg
add
push
dec
scas
mov
mov
cwtl
push
inc
movsb
jmp
push
adc
push
sub
push
pop
ljmp
pop
pop
cmpsl
je
bound
data16
sbb
mov
xor
out
mov
mov
filds
mull
movsl
cltd
loopne
jl
outsl
push
inc
in
xchg
dec
rclb
stos
fs
xor
cltd
addb
jp
xchg
adc
cmp
jl
loopne
insb
pop
faddp
fdiv
lock
push
cmpsb
or
jne
add
shr
xor
sbb
xchg
in
sbb
das
inc
pushf
cmc
ror
and
pop
or
push
lahf
js
inc
jp
loop
imul
mov
xchg
push
rcrl
das
push
inc
xorb
pop
repnz
cwtl
push
test
ret
inc
jl
in
imul
in
leave
lods
pushf
mov
repnz
pop
dec
or
lahf
mov
push
adc
mov
lret
lea
gs
xchg
push
or
push
cmp
inc
mov
jge
ds
and
pop
xor
cmp
cmp
push
push
pop
pop
loope
inc
mov
js
adc
or
jle
cmp
shrl
mov
add
addr16
add
sub
lods
clc
incb
movl
outsb
sub
push
xchg
jg
aam
loop
mov
lret
fistps
outsl
lcall
mov
cli
cltd
ret
adc
jae
adc
loope
js
xor
out
cltd
xor
rolb
daa
andl
dec
sahf
movsb
jge
pushf
enter
xchg
jo
imul
mov
or
xchg
jns
dec
stc
cld
dec
gs
jge
leave
xchg
inc
push
pushf
lahf
call
int
loop
lret
sbb
bound
mov
mov
cmp
and
out
or
stos
icebp
cs
fsubl
cmp
inc
mov
and
shl
dec
xchg
in
fsub
loope
dec
mov
rolb
dec
jae
xor
adc
mov
and
cmpsl
and
mov
mov
loop
adc
add
mov
fisubs
dec
pusha
bnd
std
mov
js
pop
testb
adcb
sbb
xchg
je
sbb
add
or
sbb
jecxz
nop
iret
cli
cld
xor
sub
inc
arpl
mov
negb
and
jle
pop
xlat
lock
cmc
outsb
psubw
fstpl
into
mov
sahf
test
push
scas
and
mov
repnz
imul
jns
loope
mov
out
push
mov
ret
sbb
aas
aas
cmp
jb
add
and
mov
inc
call
lds
or
xchg
pop
sti
js
ljmp
iret
and
lock
stc
fldl
fisttpll
mov
xchg
imul
pop
jp
mov
and
jl
test
fsub
dec
popf
clc
fwait
sbb
pop
push
push
pop
add
imul
frstor
cltd
sbb
pop
lret
arpl
push
sub
jp
test
sbb
fstpt
into
bound
into
insb
loop
fdivrs
scas
dec
push
mov
int
push
lds
andl
popa
lods
in
pop
pop
imul
aas
mov
sub
lret
or
lods
adc
cmp
aaa
testl
inc
sub
aam
pop
cli
mov
mov
sti
mov
test
in
and
sbbb
mov
in
sbb
mov
and
ror
cmp
rcrb
rcrl
daa
cli
mov
mov
in
cwtl
pusha
out
and
insl
outsb
and
ja
sbb
pop
cli
imul
es
mov
xchg
xlat
push
xchg
int3
or
adc
ljmp
mov
xor
clc
sub
sub
das
sub
scas
scas
adc
cmp
push
pushf
rcrb
lods
cmp
stos
push
testb
ret
lea
xor
adc
mov
pextrw
mov
mov
mov
add
movsl
out
fadd
xchg
push
movsb
or
call
notb
xchg
add
pop
mov
sbb
jg
inc
mov
mov
in
mov
ds
lahf
or
and
jo
xchg
pop
out
enter
mov
andl
jae
jmp
pop
mov
hlt
pop
gs
xorb
cld
mov
fcoml
sub
bound
sbb
sub
inc
cmpsb
push
push
out
pop
imul
pusha
adc
adc
cmp
inc
orb
call
push
jae
outsb
jle
scas
lret
mov
push
mov
inc
adc
or
inc
mov
ficompl
gs
cli
add
mov
sub
fdivs
std
xchg
mov
jmp
push
sub
out
dec
idivl
sbb
lret
and
pop
pop
out
xchg
rorl
mov
jae
and
lock
cmp
fdivrl
jecxz
test
test
stc
mov
andl
loop
xchg
and
nop
add
and
test
mov
cmp
sub
lea
push
xor
aas
mov
mov
dec
mov
out
movsb
push
dec
int
mov
jp
mov
lock
fsub
mov
xchg
out
ffreep
scas
cli
dec
das
movsl
xchg
sbb
in
adc
mov
pushf
shll
jb
xchg
sub
mov
mov
fwait
xor
sti
add
iret
add
inc
fisubrs
jmp
sarb
push
scas
lcall
and
push
mov
jp
sub
enter
dec
leave
in
ret
pop
movsb
arpl
popf
rcrl
aas
mov
popa
xchg
pop
push
fxch
cmp
daa
mov
ds
sti
pop
ja
jns
jmp
dec
pushf
adc
adcl
push
nop
push
scas
les
jmp
inc
aas
in
shl
or
xorb
outsl
int3
dec
pushf
and
jnp
mov
pop
push
roll
fs
lret
shrl
pop
sub
or
pop
lea
fisubs
adc
push
inc
decb
jae
sbb
pushf
adc
lea
jno
cli
xor
lahf
mov
cmp
imul
mov
cmpl
cs
je
dec
sbb
movsb
xchg
aas
lods
jle
roll
and
jnp
lahf
mov
dec
and
std
mov
adc
nop
push
out
push
push
pop
insl
pop
insb
mov
jns
mov
nop
test
mov
xchg
mov
jmp
std
xorb
adc
mov
push
sub
imul
pop
in
sub
push
mov
ret
jmp
out
out
and
mov
hlt
mov
add
enter
or
ret
or
clc
daa
jmp
xchg
xchg
sbb
push
jge
jns
cmpb
fs
mov
aaa
pop
push
rolb
jno
ret
adc
mov
leave
and
inc
push
dec
cmc
filds
adc
or
fs
or
in
sub
xchg
and
flds
push
xchg
stos
gs
test
push
lret
mov
mov
jbe
mov
cmp
lret
mov
insb
rclb
iret
sbb
inc
popf
movsb
shlb
inc
adc
lcall
test
push
addr16
lds
cmp
pop
enter
daa
hlt
in
cmp
mov
ja
fsubp
out
lcall
push
xor
leave
push
push
cmpb
or
lds
imul
inc
mov
imul
jecxz
movsl
pop
mov
inc
fwait
lock
aam
stc
dec
daa
sub
in
xchg
scas
sbb
inc
push
mov
test
cmc
ret
and
pop
mov
jae
shlb
dec
push
std
xlat
add
xorl
mov
adc
jmp
out
sub
fwait
data16
mov
mov
mov
out
shll
lahf
pusha
gs
xor
divl
lea
jbe
pop
and
sub
add
enter
or
bound
dec
mov
xor
cmpsl
sub
xchg
jo
ficomps
mov
adc
or
dec
aam
sbb
icebp
shll
dec
mov
das
mov
xchg
inc
add
repnz
sub
rcll
pop
mov
es
push
jmp
iret
mov
je
xchg
xor
push
fdivr
and
mov
sbb
loopne
sub
lods
mov
mov
lods
dec
data16
dec
clc
jmp
lret
pop
inc
shll
jnp
mov
repz
push
and
ja
sbb
repz
aas
jno
and
xor
pop
dec
add
nop
pop
mov
mov
shl
icebp
xchg
push
aam
cmp
pop
mov
cmp
pop
lret
fsts
fcoms
stc
outsl
and
jbe
sub
jno
and
out
dec
mov
dec
imul
dec
data16
mov
xchg
push
jbe
jmp
outsb
jmp
cmp
lea
dec
pop
and
mov
and
cmc
insb
push
adc
xchg
jno
jecxz
mov
shl
lods
test
or
icebp
pop
icebp
cmpsb
inc
test
addl
loope
jb
dec
icebp
dec
cmp
dec
add
stos
jns
sbb
sub
in
pop
das
xor
jnp
repnz
shl
mov
jo
test
push
add
fs
sbb
mov
xchg
fimull
stos
scas
push
shll
mov
rcr
sbb
dec
dec
xchg
loop
lea
clc
mov
and
xchg
ret
jle
sub
and
stos
inc
fbld
test
notb
mov
xchg
popf
adc
popa
jl
mov
in
iret
mov
divb
and
sub
rol
push
add
hlt
scas
push
adc
mov
sbb
mov
cwtl
movsl
outsl
pop
lods
out
in
add
clc
loopne
cmp
push
xchg
testb
add
popf
fadd
push
pop
test
lods
stos
or
neg
mov
jnp
insl
pop
mov
pop
dec
and
sbb
add
dec
shrl
adc
jnp
xchg
add
or
push
sub
push
das
push
inc
test
loopne
xorb
push
dec
pop
mov
jmp
push
xor
xchg
xchg
cwtl
dec
in
arpl
push
and
dec
pop
jecxz
or
mov
or
leave
xor
adc
ss
mov
xor
jo
and
push
cmp
xor
cmpsl
popa
pushf
sahf
inc
push
notb
cmp
negl
sub
mov
mov
iret
mov
cmp
and
vpaddb
in
push
outsl
sub
or
xor
mov
xor
test
js
pushf
xchg
push
lock
mov
mov
cmp
fisttps
or
mov
jmp
nop
push
mov
and
or
inc
xchg
dec
cltd
call
xchg
pop
cmp
js
pop
add
and
xor
mov
push
lods
subb
ret
cmc
inc
xchg
fnstcw
fwait
rcr
dec
adc
dec
mov
in
sahf
cli
imul
push
stc
stc
mov
jns
jbe
inc
add
addr16
les
jmp
mov
push
ja
add
ret
and
loop
subl
nop
lock
test
push
stos
loop
fcomps
jg
push
lock
jae
rcrl
or
xchg
inc
les
outsb
sbb
filds
dec
mov
sbb
ljmp
or
fisttpll
test
cmp
dec
mov
in
lods
aad
cmp
movsb
ret
aas
insl
sub
xchg
pop
or
push
in
mov
jle
dec
adc
mov
lock
add
xchg
mov
sbb
sub
clc
sti
push
je
repnz
sub
and
jno
imul
rcll
std
or
out
test
add
mulb
orb
push
and
xchg
cmp
dec
sub
sub
aas
xchg
mov
test
mov
cmp
cmp
xchg
sbb
aam
mov
popa
daa
mov
hlt
in
call
push
xchg
test
mov
subl
jns
xchg
dec
les
or
cmp
iret
mov
lock
sub
inc
flds
imul
js
mov
mov
cwtl
sti
sbb
ret
dec
sbb
pop
mov
mov
fwait
int3
mov
add
std
mov
fldt
sub
sub
and
jb
lods
fcom
icebp
pop
loope
js
sar
pushf
cmc
inc
push
mov
or
movsb
cmp
cmpsb
xchg
or
gs
outsl
cmp
loop
insb
mov
lods
add
mov
mov
and
stos
popf
mov
les
das
popf
push
and
arpl
mov
xchg
fucomip
fdivs
adc
pop
lea
data16
into
imul
or
loop
popf
sub
push
je
hlt
or
aam
insl
push
or
xor
aam
loopne
mov
pop
push
fucomp
pop
push
out
outsb
inc
imul
jb
xchg
popf
add
push
aas
dec
dec
rcrl
orl
mov
jge
gs
mov
daa
fisttpl
shlb
adc
add
aas
dec
cltd
repz
mov
sti
scas
pop
cmp
dec
std
repnz
mov
sbbl
jbe
shr
push
pushf
sbb
xchg
bound
xchg
mov
xchg
je
and
std
mov
fsubr
jle
cmp
xor
dec
addl
sbb
inc
add
scas
cld
sbb
popf
jmp
mov
push
jge
jmp
dec
daa
xchg
mov
dec
and
dec
les
jecxz
movhps
xchg
std
push
pop
lock
add
xchg
adcb
popf
and
out
mov
cmpsl
lea
push
cmp
inc
cs
mov
inc
dec
idivl
sub
out
lret
ss
mov
aas
or
ss
scas
insb
cwtl
sbb
lret
xor
and
inc
stc
push
insb
sar
fcmove
sub
mov
addr16
ss
dec
xor
jge
repz
movsl
fdivrs
enter
pop
fsubrs
roll
or
mov
sub
insb
loope
out
adc
add
push
andl
lds
fsubl
mov
cmp
mov
xlat
stos
dec
insb
mov
xor
mov
mov
aaa
test
jne
mov
int3
outsb
jmp
loope
mov
mulb
dec
lahf
test
jne
and
mov
repz
jno
xchg
fs
int
adc
or
adc
in
sub
sub
mov
movsb
mov
jno
pushf
int
and
push
inc
or
push
pop
cmp
mov
mov
inc
jg
mov
sub
inc
add
dec
xor
ss
jae
ss
sbb
jle
cld
sahf
or
sbb
in
pop
leave
nop
inc
inc
inc
mov
enter
push
jns
mov
sbb
adc
pop
in
out
fnstsw
cmp
jmp
pop
mov
push
ret
clc
in
xor
call
fsubr
push
movsb
nop
loope
pop
add
mov
jge
add
xchg
cltd
adc
jp
daa
sbb
ret
sbb
sub
inc
ret
adc
cwtl
push
loope
mov
xchg
or
push
test
cmp
mov
pop
scas
push
cmpsb
xor
or
icebp
xor
das
cli
mov
out
aam
les
pusha
fs
sbb
pop
scas
mov
pushf
inc
mov
and
or
sub
pop
test
sub
add
je
mov
dec
scas
and
sahf
mov
mov
test
addb
add
push
fisttpl
mov
sbb
movsb
xchg
aam
lds
and
adc
and
mov
and
rcrb
pusha
push
mov
pop
fcmovnu
cs
xor
rorl
outsb
je
pop
orl
fildl
popa
push
add
adc
mov
lock
enter
mov
fcomps
mov
jmp
je
shl
dec
addr16
xor
push
ss
lcall
pop
in
lds
or
outsl
clc
push
or
das
in
lahf
mov
mov
lret
in
loopne
repz
loopne
sbb
pop
xchg
test
cwtl
xchg
xor
mov
sbb
adc
cmp
or
lock
lods
cmp
xchg
clc
pop
aam
jne
lds
push
push
mov
cmpsb
sub
stos
negl
add
test
pop
xchg
sbb
sub
stc
mov
pshufw
adc
loope
mov
ja
and
cmp
repnz
mov
je
data16
mov
mov
mov
jae
roll
clc
test
lods
incb
inc
pop
int
testb
les
xor
jecxz
inc
push
sbb
mov
bound
scas
notl
bswap
and
adc
iret
arpl
pop
in
mov
adcl
repnz
pop
int3
mov
jno
lds
pop
push
sub
cs
dec
inc
mov
xchg
sti
clc
repz
sti
xchg
icebp
hlt
mov
add
orb
nop
repz
push
dec
xchg
mov
ret
push
movsb
mov
mov
jnp
subb
mov
cli
xor
lods
dec
jle
fs
and
cmpsl
cld
mov
cmp
or
sub
add
incl
inc
nop
lds
out
rcr
test
sbb
ds
and
add
mov
fcoms
jbe
pop
pop
mov
sbb
es
scas
jno
je
push
adc
icebp
cli
popf
jl
dec
fcoml
repnz
popa
jbe
or
imulb
mov
sub
dec
test
sbb
add
addr16
mov
loop
aaa
out
jge
repnz
sub
and
sub
mov
cld
in
lods
jnp
and
mov
and
jmp
adc
pusha
lcall
add
mov
jmp
mov
xor
xor
shrl
cmp
pop
sbb
cmp
dec
into
int
hlt
icebp
mov
inc
movsl
mov
mov
jecxz
adc
inc
sbb
xorb
mov
sbb
and
xchg
cmpsb
les
mov
leave
mov
cmp
cmp
mul
aad
adc
xor
popf
shl
mov
and
push
movsb
shlb
dec
leave
adc
cmp
sti
sbb
stos
adc
sub
cmp
lea
inc
shrb
push
or
sbb
popa
adc
add
xchg
push
clc
fldcw
cltd
movsb
mov
pop
adc
into
gs
movsl
adc
jns
xchg
xchg
iret
sbb
mov
mov
cmpsb
mov
test
xchg
push
add
push
test
pop
cmp
stos
mov
cmp
rolb
jg
imul
inc
and
and
adc
xor
insb
push
filds
lret
inc
xchg
iret
lret
insl
cs
cli
adc
dec
xchg
or
cmpsl
ret
stos
lcall
push
or
xchg
mov
and
cmp
add
aaa
clc
push
int
cmp
icebp
inc
aam
mov
mov
cmp
fdivs
rcrl
adc
imul
mov
stos
adc
sti
xor
stos
out
inc
sbb
ret
jno
sub
adc
cmp
stos
loope
decb
ss
or
inc
add
iret
call
cs
jmp
mov
fbstp
lods
mov
test
int
xor
jnp
xor
adc
inc
sbb
pop
mov
test
xor
imul
nop
ss
les
adc
in
xlat
add
loope
jnp
aas
mov
sub
fildll
lock
or
jno
insb
cmpsb
cmp
andb
outsl
mov
dec
stos
rclb
mov
add
inc
jno
adc
gs
mov
xor
sub
sbb
mov
cmp
or
mov
mov
aas
xchg
test
pop
dec
or
js
inc
adc
leave
daa
subl
imul
and
sub
daa
test
fiaddl
call
cmp
xor
bound
roll
ljmp
cltd
push
adc
mov
xchg
xor
loope
cwtl
xor
push
and
mov
insl
push
lea
xlat
mov
in
or
andl
dec
aad
mov
pop
lcall
push
loope
push
test
add
ljmp
popf
decl
push
repnz
imul
icebp
in
or
xchg
push
or
outsb
push
popa
rcrb
idivl
sbb
ret
dec
outsb
add
rcl
jp
shlb
fstpl
or
fcomp
and
cmpsl
inc
stos
fistpl
addb
xchg
jae
inc
xchg
xor
mov
pop
inc
sbb
arpl
dec
pop
jbe
in
inc
add
xchg
push
push
or
arpl
mov
int3
inc
mov
out
testb
mov
xchg
jl
fwait
addr16
inc
lods
sbb
rcrl
add
sbb
dec
stc
mov
sub
ljmp
lret
shll
std
shll
add
iret
in
cmp
inc
push
and
sbb
stos
cld
aaa
fwait
mov
xchg
ja
sub
adc
loope
sahf
pop
sbb
ret
lcall
jge
adc
mov
cmc
dec
xchg
sub
psrlw
aam
add
mov
xor
mov
jo
mov
arpl
xchg
loopne
dec
xlat
gs
cltd
xchg
daa
jecxz
and
je
inc
sub
push
ja
outsb
xchg
push
pop
push
sarb
popa
out
data16
jge
adcb
push
int3
inc
push
jo
sbb
bnd
test
leave
add
sbb
loop
jae
sbb
ret
add
mov
cld
out
cltd
mov
std
fcoml
and
sbb
fdivl
cltd
fisubrs
cmp
subb
dec
jecxz
ss
fimuls
jp
pop
test
mov
inc
mov
xor
sbb
or
popf
pop
shll
jnp
aas
dec
rcr
cmpsl
pusha
movsl
test
fstpt
enter
cmp
mov
les
push
jo
sbb
lods
xchg
clc
mov
das
jno
aad
leave
mulb
test
push
jne
inc
mov
jnp
mov
popf
std
in
std
sarl
dec
push
xor
mov
pop
sub
dec
jnp
das
ds
jnp
je
mov
add
sahf
jecxz
sahf
int3
in
cmpsb
hlt
mov
sbb
enter
cld
adcl
scas
shlb
outsb
dec
sarb
mov
cmp
or
scas
dec
test
lds
add
sbb
lret
hlt
loop
jnp
cli
xchg
mov
pusha
popf
and
cld
lret
cmpsl
add
cli
sub
leave
or
push
loop
adc
push
cmpsl
insl
sti
cmpsb
out
push
lods
orb
add
sub
arpl
xchg
dec
int
xchg
cmp
pop
mov
jecxz
neg
leave
push
pop
js
sbb
xor
popf
movsb
push
fidivs
fists
lods
insb
or
insb
sbb
daa
pushf
stos
xlat
enter
add
in
loope
jl
popa
mov
subb
xor
mov
mov
fdivr
lea
pop
ret
pop
pop
inc
lret
inc
adc
xchg
mov
nop
push
mov
mov
xor
bound
int
xor
test
ret
jg
sahf
or
pop
jp
das
gs
xor
lcall
pop
fidivrl
imul
or
sbb
mov
xchg
mov
aam
cmpsb
xchg
gs
imul
aaa
adc
loop
pop
sahf
call
lock
lret
push
xchg
ret
mov
mov
imul
or
pop
lcall
lods
inc
mov
mov
pop
sbb
lret
or
in
pop
mov
push
ja
push
faddl
iret
subl
out
sbbb
and
out
sub
mov
push
fcmovnbe
xchg
inc
xchg
xchg
xor
fdiv
mov
sbb
jge
xor
xchg
repz
imul
mov
mov
adc
mov
add
cmp
lcall
push
or
pop
fwait
mov
fcomp
popa
std
stos
push
cmpsl
add
ss
ret
clc
cld
lds
shl
mov
cmc
rolb
cmp
cmc
std
xchg
push
jmp
xchg
popf
mov
loope
cs
cmpsl
xor
xchg
mov
insl
and
push
pushf
das
lret
lods
insb
sbb
jle
xchg
popf
mov
shlb
scas
lea
imull
rcrl
test
leave
aam
ret
push
testb
cmpsl
pop
mov
subl
jmp
js
jb
js
dec
or
xor
mov
inc
or
push
push
mov
mov
int3
stos
dec
push
cmpsb
mov
je
xor
mov
ja
mov
cld
push
leave
jnp
sbb
into
adc
out
jne
sbb
jns
cld
xlat
dec
nop
dec
xchg
xor
or
fimuls
mov
jns
dec
cmc
xchg
mov
ja
cli
and
popf
stos
cmpsl
pop
sahf
xchg
lds
add
and
addr16
jmp
faddl
cmp
xor
popa
mov
xlat
outsl
dec
fcmovnbe
push
ljmp
add
dec
imul
push
sbb
hlt
cmp
pop
cltd
jno
fs
xor
jnp
mov
cmp
in
loope
adcl
aas
mov
xchg
adc
sub
icebp
ss
js
xchg
aaa
ficomps
sbb
sbb
and
dec
jecxz
jecxz
xor
fisubl
adc
loop
loopne
std
jnp
adc
outsl
lds
pop
arpl
mov
xor
cmc
pop
cld
out
mov
out
in
sbb
fadd
cli
push
out
xor
outsb
arpl
adc
in
mov
sarl
sti
or
lea
dec
imul
add
sti
push
leave
adc
dec
or
test
in
hlt
cmp
data16
inc
sub
cmp
loope
shrd
xchg
push
jl
fsts
fwait
push
arpl
mov
andl
aam
movsl
loopne
idivb
outsb
js
hlt
xor
or
xor
lret
push
test
mulb
jmp
insl
int
shrb
pusha
or
xchg
jmp
sub
mov
lock
mov
cmpsb
mov
roll
pop
cltd
dec
ret
xchg
jge
lret
inc
ret
sbbb
fucomip
mov
cwtl
jbe
sub
lcall
stos
or
cmpsl
mov
jg
inc
pop
adc
subl
push
add
stc
cmpsb
push
aad
adc
xchg
jo
push
add
push
xorb
dec
pop
cli
pop
fsubrs
into
mov
adc
add
jg
stos
add
cld
ret
lds
inc
das
popf
dec
loope
sbb
hlt
out
decb
adc
bound
dec
jae
pop
push
lret
add
dec
mov
jecxz
cmp
sbb
adc
hlt
cmc
jp
cs
push
insb
sub
dec
mov
insl
nop
and
inc
mov
hlt
push
pop
int3
divb
mov
dec
xor
push
aam
sbb
aam
mov
mov
inc
jae
das
stc
jo
hlt
cmpl
out
test
mov
and
sbb
add
add
mov
cmp
push
call
mov
pop
cmp
rorl
sbb
call
es
ds
xchg
rorb
fistl
or
dec
cmp
add
and
pop
in
push
jnp
sbb
sub
and
cmp
inc
xchg
xchg
push
gs
adc
and
mov
cmpsb
clc
push
out
inc
into
mov
push
roll
xchg
push
mov
daa
add
loopne
dec
aad
mov
mov
pop
inc
jecxz
and
fcomps
jb
push
sbb
stc
and
testb
fisubs
in
cmc
xchg
ljmp
in
mov
sbb
sbb
mov
fisubl
mov
sahf
mov
mov
xlat
lock
pop
rcrl
sub
mov
dec
push
bound
out
imul
adc
movsl
xor
fidivl
inc
stos
inc
insl
mov
mov
and
imul
loop
sub
push
in
pop
pop
sarb
in
fs
push
dec
outsb
cmp
push
sbb
xor
adc
pushf
aas
sbb
lret
and
addl
repz
ljmp
ret
sbb
es
push
aad
loop
fnstcw
sti
test
push
jnp
jp
add
fsts
jl
ret
aam
int3
mov
jmp
dec
data16
popa
leave
adc
mov
lods
mov
std
mov
imul
mov
mov
shlb
push
xchg
outsb
dec
cli
sti
jno
fstl
and
sbb
cmpsb
out
mov
xchg
sbb
std
scas
stos
lret
adc
push
call
xor
inc
fsubp
cmp
ds
xchg
dec
mov
sbb
fwait
add
cmp
sbb
xchg
insb
vpaddusb
push
inc
popf
ret
or
je
or
pop
arpl
fsubp
in
cmpsb
shrb
cs
inc
dec
repz
fs
push
imul
sbb
push
dec
andl
mov
loopne
xor
mov
pop
fldl
push
xchg
xchg
fmul
sbb
std
in
lock
mov
cli
test
inc
out
scas
pop
mov
aaa
inc
mov
or
insb
add
lret
mov
push
mov
pop
les
dec
xchg
popa
lea
mov
push
or
sub
mov
sub
sahf
negl
cmp
mov
jl
inc
add
shrl
ret
cmp
fildll
jbe
pop
mov
and
xor
out
inc
loopne
call
sub
lock
or
pop
jecxz
andb
arpl
cmp
fdivrl
sub
mov
xor
add
mov
lods
mov
inc
ret
jne
shll
adc
addr16
mov
inc
addb
mov
pop
inc
push
sarb
xor
mov
aam
fildll
cmp
inc
jno
mov
mov
adc
xchg
idivb
push
test
adc
or
and
lods
lods
fsubrl
in
mov
addl
pusha
dec
aam
mov
rorb
shr
aas
add
or
outsb
mov
jae,pt
test
pop
jmp
xchg
sahf
pop
rorb
test
into
push
mov
add
dec
lcall
pop
add
inc
adc
popf
and
xchg
daa
xchg
cltd
push
add
inc
xor
mov
andb
clc
pcmpgtd
in
rcrl
sti
lods
mov
test
mov
push
icebp
ds
jne
imulb
pop
pop
mov
hlt
popf
fists
out
adc
mov
ja
mov
in
in
cld
mov
sub
cmp
faddl
mov
add
sub
out
push
sbb
iret
xchg
jne
movsl
inc
xchg
cmp
add
repz
push
jmp
xor
mov
test
int3
outsb
sub
inc
sbb
inc
inc
xor
bound
mov
lds
push
adc
jmp
std
mov
push
jge
xor
adc
inc
pop
icebp
xchg
cmp
adc
inc
adc
mov
mov
pusha
iret
fimuls
push
cwtl
xchg
xchg
push
cmpsb
pop
lods
shl
in
rcrl
clc
movsl
adc
mov
jno
and
mov
daa
pusha
pop
daa
push
notb
mov
cltd
mov
stos
push
and
mov
aas
ss
lret
or
mov
sbb
loop
mov
xor
jbe
jmp
push
push
push
and
in
hlt
in
ljmp
cwtl
dec
dec
pop
in
rcr
outsl
aaa
test
xor
mov
imul
cmp
andl
add
mov
xor
pusha
mov
sub
lret
add
or
cltd
lods
rorb
in
mov
xor
lea
test
sbb
push
sbb
adc
sahf
das
adc
rorl
dec
lock
mov
clc
and
inc
xchg
aaa
ljmp
cmp
ret
push
enter
cmp
xlat
fidivl
dec
testl
or
adc
clc
lea
jnp
std
push
dec
lahf
cmp
adc
push
xor
jecxz
fs
fimuls
cmc
xor
cmp
xchg
adc
repnz
mov
pushf
sub
fmulp
pop
testb
clc
dec
mul
aaa
cmp
adc
lods
cli
mov
cmp
into
fdivr
ja
mov
rol
sbb
adc
jp
jbe
xchg
pop
xor
inc
in
and
dec
movsb
push
cltd
push
repz
fs
mov
and
jmp
inc
jmp
pop
jbe
lods
inc
pop
adc
insb
mov
inc
fisubs
adc
xor
lret
sti
inc
stos
cmp
jmp
or
mov
push
in
pop
adc
scas
out
stos
loope
test
arpl
mov
scas
popf
aaa
lea
mov
xor
push
xor
xchg
xchg
pushf
cmc
pop
leave
rcr
sbb
xor
inc
insb
cmpsb
cs
loope
or
pop
rcrl
xor
jecxz
ss
and
dec
leave
dec
loopne
mov
insl
scas
xor
cmp
rorl
add
xor
mov
stos
dec
inc
push
ffreep
scas
or
das
inc
xchg
lcall
push
jmp
jl
inc
movsb
push
dec
movsl
movsb
jmp
xchg
sbb
add
cmpsb
mov
ljmp
daa
arpl
or
mov
and
xor
push
clc
dec
fwait
cltd
and
pop
movsl
iret
mov
adc
pop
add
mov
jne
push
dec
imul
into
jbe
xchg
lea
mov
sub
dec
jmp
sbb
dec
cmp
cmp
pop
call
mov
sti
adc
jb
mov
cli
jb
imul
jo
in
cltd
pop
cwtl
sub
inc
inc
xchg
out
jne
bnd
movsl
pop
ret
movsl
outsb
jnp
ret
cmp
ljmp
std
inc
ret
insl
shl
cmc
xchg
movsl
std
mov
ljmp
movsb
cli
mov
lock
inc
xchg
jp
negl
hlt
fiaddl
shrl
add
xchg
fmuls
inc
adc
pop
dec
bound
jne
mov
xor
fcmovnu
push
sub
ret
neg
lret
or
sar
jbe
lods
cmc
push
shlb
add
fidivrl
test
in
out
push
shll
int3
fistpll
mov
adc
cli
dec
adc
sbb
imull
repz
cli
int3
mov
inc
cmpl
add
repz
cmpsb
ljmp
inc
xorb
sbb
or
push
ljmp
jmp
xlat
loopne
push
sub
mov
lock
add
and
addr16
inc
fadds
add
inc
mov
divl
push
les
iret
lcall
mov
gs
cmp
add
jne
lock
call
or
push
cmp
pop
and
cmp
mov
call
scas
insb
andb
lret
mov
sbb
insl
pop
imul
mov
xor
xor
call
dec
mov
push
add
das
ficoml
or
xor
push
clc
stos
in
out
jb
jns
lret
jns
xor
bound
ss
stos
and
out
outsl
stos
cmp
mov
xchg
push
loopne
insb
or
in
jecxz
rcl
mov
aad
push
inc
jp
test
fnstcw
xlat
pop
cmp
and
jl
xchg
into
push
fildl
xchg
add
fdivs
loop
andl
mov
leave
pop
mov
cmp
movsl
flds
test
fcom
push
pop
inc
lret
outsl
clc
jg
and
xchg
adc
inc
shll
mov
cmp
stos
push
and
dec
xchg
mov
push
mov
es
cmp
pop
sub
mov
ret
sbb
test
lea
mov
jb
jmp
lcall
jle
pushf
jnp
push
xor
mov
and
push
pop
adc
rcr
push
out
pop
sbb
in
enter
lret
out
sub
pop
push
sbb
icebp
or
push
sbb
push
shll
cltd
les
test
nop
incb
call
sbbb
sbb
fs
and
test
dec
aam
in
pushf
sub
and
add
xchg
mov
test
sbb
mov
call
iret
in
cltd
ret
dec
cld
scas
pushf
cmp
inc
adc
inc
jns
aas
out
push
sub
jae
or
lods
pop
fimuls
into
add
outsb
adcl
movsb
dec
sbb
pop
in
cwtl
or
shrb
repnz
push
jl
mov
push
mov
mov
pop
inc
cmpsl
cmp
imul
popl
mov
add
fildll
test
add
add
mov
std
and
push
sbb
insb
push
adc
js
sub
movsb
inc
dec
pop
sarb
aam
sub
leave
mov
inc
test
mov
adc
fiadds
stos
fucomip
xchg
lret
or
jo
xor
test
pop
pusha
inc
dec
and
and
insl
hlt
xchg
arpl
xor
sub
and
jnp
mov
mov
out
dec
and
jecxz
gs
in
les
scas
mov
xor
stc
add
ror
divb
add
xchg
lcall
outsb
mov
lea
decl
lea
push
and
cli
rcl
adc
cmpsb
fidivs
cmpsl
cmc
xchg
pop
outsl
call
je
mov
mov
or
in
add
mov
sub
in
sub
and
mov
movsb
outsb
sti
out
test
hlt
add
xor
cmp
pop
ret
mov
mov
adc
and
call
imul
or
sub
jge
mov
push
sbb
negb
xor
iret
mov
cmp
push
dec
sti
or
mov
and
outsb
lea
dec
xchg
pushf
mov
scas
push
jecxz
movb
test
stc
adc
lds
mov
adcb
daa
pushf
cmp
lock
rorb
mov
add
shlb
popa
lea
pop
dec
roll
mov
inc
pop
pop
jecxz
push
jno
decb
fldt
ljmp
push
sub
dec
mov
pop
mov
outsl
dec
adc
pop
leave
mov
icebp
or
movsb
xlat
in
push
or
lods
fcoms
lea
jl
pop
pop
gs
mov
pop
adc
push
cli
movsl
nop
xchg
xchg
sub
dec
add
xchg
and
leave
jmp
das
pop
test
test
and
std
mov
jns
dec
mov
add
push
sub
inc
dec
fimull
das
inc
dec
xor
mov
xchg
mov
stos
cmc
cltd
sahf
sbb
adc
pop
lock
lahf
xchg
mov
jne
sti
dec
nop
xchg
insb
test
ss
xchg
in
inc
dec
cwtl
push
and
mov
pop
sub
loop
pushf
cmp
shr
in
add
nop
jmp
lcall
gs
jne
mov
popa
push
cmp
popa
mov
int3
lods
pusha
push
adc
sub
mov
mov
and
mov
jno
std
inc
pop
mov
decb
scas
adc
sub
push
push
sahf
sub
popf
push
pop
mov
aad
call
add
sub
xchg
cmpb
inc
pop
push
xor
jecxz
sbb
inc
aam
lcall
pop
inc
rorl
sub
jbe
popf
dec
aam
xor
ss
cmp
shrb
ret
scas
and
stos
jmp
mov
repnz
sbb
sub
je
cmp
pop
or
and
lret
jbe
cltd
ljmp
repnz
ret
ret
cltd
lock
mov
sub
dec
cmc
scas
or
cld
test
adc
sbbl
hlt
lret
ret
mov
fbld
cltd
std
cmpb
lods
push
shlb
xor
shl
ficoml
jae
sub
dec
fcom
dec
subb
sbb
xchg
int3
rcrl
ret
pushf
sbb
xor
jno
cmp
xor
and
dec
jl
icebp
or
adc
int
and
scas
cltd
push
movsb
je
inc
aam
xchg
pop
jle
pop
lds
jmp
dec
xor
fldt
loope
pop
cmpsb
in
inc
das
or
mov
xor
int
lcall
xchg
loope
adc
push
mov
dec
jp
sub
dec
push
and
mov
ret
sbb
mov
popf
fldl
add
sbb
jo
jle
jmp
mov
inc
xor
in
jne
cmp
or
cmp
and
lahf
sub
push
ljmp
sarb
mov
add
xor
xchg
rorb
inc
pop
iret
mov
into
int
ss
pop
dec
std
shlb
orb
push
sub
fdiv
bound
movsb
ficomps
mov
cs
in
xchg
ja
fdivrs
sbb
cld
jns,pt
mov
push
lcall
ja
or
aam
xor
nop
pop
sub
insl
cltd
push
lods
mov
lret
pusha
aad
scas
mov
inc
dec
pusha
sub
sub
iret
adc
inc
pop
jne
pop
les
mov
pop
push
dec
imul
fwait
mov
popw
jnp
cmp
jne
cltd
xchg
lock
fs
adc
xchg
pop
mov
js
gs
icebp
stos
sub
jl
sub
and
enter
int
ret
add
hlt
cmp
pop
insl
pop
push
out
imul
shlb
int
mov
pop
mov
mov
into
enter
stos
fcmovnb
and
movsb
idivb
stc
popl
insl
repnz
lret
mov
jmp
xchg
lret
pop
jg
faddp
imul
lock
dec
jns
dec
or
popa
push
dec
inc
fisubrs
push
add
fucom
mov
call
and
fnstsw
mov
xchg
jbe
cmpsb
jno
in
movsb
mov
sbbl
push
fidivl
dec
push
daa
into
xor
adc
push
gs
clc
in
dec
mov
dec
loop
adc
lds
imul
cmp
dec
push
imull
xor
das
add
iret
mov
fwait
mov
jbe
mov
dec
dec
mov
ljmp
movsb
aas
repz
popa
mov
pop
push
or
or
iret
mov
imul
mov
xor
movsl
cld
adc
test
lods
pop
inc
push
and
es
mov
or
mov
das
mov
jae
mov
fwait
xchg
or
pop
and
pop
sbb
inc
sub
in
mov
pop
xor
jp
sub
in
adc
push
or
mov
jb
mov
loop
imul
xor
jnp
sbb
enter
cmpsl
sub
push
out
mov
jmp
std
fadds
cwtd
rcr
incl
sub
jo
leave
push
imul
orb
jle
jp
test
into
je
pop
cmp
inc
mov
push
popf
cwtl
js
sti
sahf
mov
mov
cli
clc
cli
jb
adc
push
pop
xchg
sbb
and
pop
sahf
pop
arpl
sbb
and
in
mov
mov
hlt
out
xor
je
popf
test
insb
pop
movb
aam
pop
jo
and
mov
pushf
jmpw
pop
sbbb
cwtl
ficoml
and
pop
cs
ret
bswap
dec
pop
in
loopne
mov
mov
outsl
test
pop
in
push
jge
pushf
xor
mov
jmp
gs
sbb
movsb
jne
pop
shlb
dec
leave
test
out
out
jle
dec
shll
xor
xor
cmpsb
in
bnd
sti
pop
hlt
or
add
in
and
xor
sub
pop
scas
lret
or
lret
or
shrl
pop
xchg
enter
and
neg
xchg
mov
jge
adc
or
cs
inc
nop
cld
dec
mov
int3
xor
dec
repnz
lret
hlt
lcall
adc
sbb
ret
jo
sub
mov
fcoms
mov
fwait
dec
mov
mov
pop
test
jecxz
jns
mov
lcall
xor
inc
adc
fildll
stc
jae
sub
and
lods
frstor
aaa
pop
jbe
and
in
inc
push
fs
inc
mov
in
in
in
in
loop
std
fs
movsl
cmpsl
sbb
outsl
scas
es
sahf
jo
mov
out
push
add
outsb
sbb
or
ss
cs
aam
lds
mov
mov
and
in
stos
jmp
enter
lret
or
dec
popa
adc
dec
sbb
scas
lock
cli
popf
cs
loope
loopne
mov
sahf
in
add
push
dec
xor
add
repnz
mov
or
pop
inc
push
mov
insl
jns
sarb
mov
inc
fucomp
fidivs
cmp
orb
aaa
jg
or
dec
jge
enter
negl
jno
jp
inc
rolb
aam
fwait
and
das
cmp
sbb
iret
dec
fwait
inc
mov
fucomi
sti
pusha
imul
xor
pop
push
mov
call
fnstcw
jle
pusha
in
inc
inc
imul
ret
xorb
ret
and
out
cmp
pop
mov
lods
cld
test
dec
jo
adc
or
push
add
dec
pop
push
cltd
xor
jnp
pop
jp
cld
push
in
cmc
inc
outsb
push
and
mov
mov
xor
inc
jns
pop
inc
gs
jo
xchg
adc
and
jp
ret
sbb
jmp
xchg
jg
out
adc
dec
sahf
inc
faddl
ret
push
mov
in
cltd
lahf
dec
mov
cmpsb
rolb
sbb
rcl
add
mov
add
insl
sarb
sbb
stc
jb
and
push
pushl
out
add
insl
push
or
mov
xchg
push
dec
out
int
push
mov
adc
jbe
or
sbb
or
push
pop
cli
cli
pushf
mov
inc
neg
cmp
or
and
lahf
insl
push
push
mov
sub
xchg
call
xor
cmc
jmp
aaa
pop
loopne
in
shl
mov
shl
aad
data16
xor
arpl
int
mov
clc
outsb
adc
jbe
loope
mov
out
outsb
cmp
pusha
mov
aam
xchg
sahf
sahf
mov
mov
jp
out
loop
fadds
sbb
movsl
mov
inc
xchg
fistps
add
mov
out
or
push
in
andl
movsl
push
and
jp
sbb
repz
mov
daa
dec
pop
popf
cmc
pop
andb
adc
iret
popf
push
arpl
jecxz
int
xchg
xchg
into
push
lods
rcrl
jns
popa
test
ljmp
cli
push
into
add
jns
gs
xorl
shll
stos
iret
sbb
jp
jne
cwtl
imul
pop
call
push
insl
call
mov
cmp
rcrb
test
lret
push
mov
movsb
mov
push
adc
les
sbbl
mov
into
and
iret
jle
enter
mov
push
je
fimuls
sbb
test
data16
inc
adc
not
cs
out
repnz
or
repnz
mov
pop
inc
lret
xor
cmp
jo
dec
xor
out
dec
icebp
xor
daa
add
mov
sub
adc
stos
mov
mov
std
stc
xor
es
aas
in
fcomp
jne
in
dec
aas
nop
cmc
mov
mov
iret
aam
and
mov
push
add
or
lahf
repz
mov
pop
sahf
leave
lock
push
test
movsb
and
sub
inc
add
icebp
dec
or
xor
mov
out
inc
daa
imul
enter
jp
cmp
mov
sub
adc
jno
pop
xchg
sub
pop
ja
ficoml
cmc
mov
xchg
hlt
cld
int3
cltd
insb
fisubl
mov
push
and
adc
jecxz
aam
sbb
popf
sbb
ret
arpl
lods
sub
push
jecxz
dec
ret
out
adc
cltd
jle
mov
aaa
fisubl
mov
add
jb
fistl
jbe
dec
jae
inc
xor
jg
les
lret
inc
mov
shl
test
mov
dec
xor
and
movsb
sub
aas
cmp
jle
xchg
xchg
mov
stos
mov
sbb
nop
nop
loopne
sub
xor
in
push
insl
push
push
dec
idivb
loope
leave
push
mov
adc
out
jmp
cmpsb
stos
cmc
xor
lea
push
shll
in
outsb
xor
cmc
xchg
lahf
jns
mov
insb
icebp
aaa
mov
cld
mov
xor
sub
push
loope
jle
lods
xlat
push
lea
gs
hlt
mov
xor
cltd
cmp
xchg
jmp
cmp
scas
cmp
notb
mov
test
push
test
fstpt
stos
rcr
cmp
xor
mov
mov
jecxz
push
cmp
adc
ljmp
scas
call
sbb
inc
add
dec
in
scas
add
mov
scas
jmp
sbb
pop
clc
lock
mov
cmp
jmp
cmp
jae
and
stc
mov
sbbb
sub
ljmp
or
loopne
sbb
mov
push
xor
rorl
inc
or
nop
pop
jge
lret
add
cmp
inc
mov
int
mov
add
xchg
adc
and
jne
sbb
inc
fdivr
inc
imul
pop
in
pop
or
sub
xor
mov
dec
je
sub
pop
scas
cltd
movsl
inc
mov
cmpsb
stc
mov
imul
ds
xchg
pop
cld
ds
dec
inc
or
subb
loope
mov
cld
rclb
sbb
sbb
bound
jo
xlat
cmp
xchg
insl
popa
sbbb
xor
xchg
jno
xchg
inc
notb
add
sub
repnz
sub
push
testl
dec
dec
xor
sub
and
mov
jecxz
sbb
add
in
loop
aad
fdivs
mov
mov
add
dec
inc
outsl
push
mov
jb
push
cmpsl
xor
pop
jge
xchg
or
in
pop
testb
orb
xchg
ror
icebp
xchg
mov
test
mov
add
call
fs
push
fstl
inc
jo
movsb
mov
in
xchg
pop
notb
and
out
inc
daa
lahf
dec
cmp
and
pop
out
fstpt
ja
add
mov
mov
adc
pop
fwait
cmpsb
fists
xchg
sti
mov
repz
pop
mov
adc
push
aam
nop
rcr
xchg
xor
mov
mov
or
lods
or
adc
push
sti
adc
icebp
jmp
xor
pop
mov
xor
sahf
shll
icebp
clc
cmp
insl
dec
dec
cs
dec
push
xor
call
pop
xchg
mov
dec
rcrl
cmp
faddp
nop
mov
pop
lock
arpl
das
xor
pop
adc
and
jbe
pushf
xchg
xchg
lret
das
push
fistpll
lds
pop
lret
inc
mov
push
cmp
loope
jl
pushl
and
pop
push
subb
gs
cmpsl
imul
pop
dec
mov
fcompl
cmpsl
mov
jecxz
cwtl
fmull
aaa
test
push
loopnew,pt
or
aam
jmp
pushf
icebp
mov
negb
xorb
fadds
das
out
and
lahf
jl
sahf
mov
in
lahf
jle
mov
cmpsl
lods
pop
insb
ret
aaa
mov
xchg
adc
xchg
loopne
in
xchg
jmp
add
out
mov
pop
jl
pop
push
jae
xor
imul
stc
or
lret
sahf
imul
sbb
push
test
cmp
pop
push
sbb
sub
mov
in
ret
cli
mov
pop
lret
inc
pop
fildll
sahf
sub
mov
push
arpl
mov
lahf
xor
mov
jns
insb
jae
push
dec
jg
jo
push
testl
dec
gs
repnz
xchg
push
negl
mov
rorb
mov
and
jge
rclb
jg
inc
mov
mov
dec
mov
mov
inc
mov
or
push
test
jae
inc
or
adc
mov
push
adc
jge
outsb
movl
in
mov
pusha
faddp
ficomps
or
movl
repnz
dec
leave
mov
mov
les
push
clc
adc
adc
mulb
pop
or
adc
cmc
pop
lret
pusha
cwtl
mov
rolb
fsubrs
aaa
jae
sti
scas
dec
std
movsl
repz
xor
or
pop
inc
sub
mov
cli
pop
movsl
out
repnz
adc
shlb
jb
sbb
cmp
flds
mov
pop
imul
outsl
sub
push
mov
movl
clc
dec
popa
ds
pop
xchg
addb
je
jae
out
hlt
shlb
loopne
std
inc
and
repz
inc
xchg
mov
mov
lea
xchg
push
jno
sahf
jnp
pop
mov
imul
repz
pop
push
je
push
in
sub
xchg
sub
sarb
sbb
inc
das
push
aas
aad
inc
jno
testb
xchg
jb
mov
jmp
xchg
gs
sub
jb
fisttpll
dec
or
mov
das
mov
stos
pop
cmp
movsb
jl
fsts
sub
cmp
pop
fs
ficoms
insl
mov
in
test
fs
dec
scas
mov
sub
push
in
and
outsb
lret
push
push
fistpl
test
lods
cmp
mov
mov
pop
mov
cmp
sbb
aam
into
incl
shlb
test
xchg
jno
lods
xchg
stos
lret
jg
stos
add
or
push
and
inc
aas
stos
cmp
xor
sbb
pop
iret
arpl
sub
sbb
outsl
mov
rcrl
mov
imul
lcall
or
les
fidivs
push
adc
dec
add
cmp
mov
push
pop
cmp
inc
dec
dec
jle
cmp
sti
add
jge
push
kmovb
jnp
dec
add
dec
outsl
sub
push
jg
or
mov
and
test
sub
cmpb
jnp
jbe
or
pop
in
sub
mov
sub
jle
in
cmp
push
and
add
cltd
icebp
decl
push
dec
pop
add
xchg
cld
subb
jp
outsl
cmp
scas
add
sub
shll
pop
imul
xchg
mov
movsl
daa
cmpsl
mov
call
fstps
sub
dec
add
xor
sub
push
fistps
aas
mov
mov
sub
scas
xor
mov
and
fisubrs
pusha
push
es
or
rorb
xchg
fmuls
mov
addr16
adc
popa
test
or
ret
dec
test
mov
push
adc
jp
mov
sbb
loope
test
loop
xchg
addb
sub
cmp
add
jae
sarl
pusha
push
rcrb
push
jg,pt
ja
out
lret
nop
xchg
popf
cwtl
sarb
imul
mov
xor
mov
enter
xor
push
xchg
loope
jge
dec
loop,pt
lods
xor
scas
jmp
sub
push
and
and
add
shrl
insb
arpl
test
sbb
cmp
shll
adc
pop
int3
sbb
call
sarb
in
sahf
cmp
repz
xor
test
stc
jge
fisubs
rcrl
fs
insl
lcall
jg
or
push
jp
test
xchg
int3
rcl
repz
rcrb
jge
ja
or
push
fwait
jnp
out
mov
mov
jns
addr16
sbb
ds
lcall
xchg
pushf
cli
data16
sbb
cmp
outsl
cmpsb
add
cmp
cmp
loopne
outsl
adc
rcll
icebp
jmp
sbb
pusha
xchg
mov
xchg
sbb
daa
jmp
lret
cmp
xchg
ffree
nop
gs
sbb
mov
dec
jmp
shlb
mov
cmp
inc
mov
mov
inc
imul
lahf
sbb
mov
shl
or
lcall
cmp
cmp
fbstp
daa
test
insl
sti
test
aam
faddl
pop
mov
stos
pop
decl
xchg
std
push
int3
inc
imul
mov
xchg
sbb
xchg
mov
xchg
xlat
sub
adc
repnz
sbb
xor
popaw
adc
inc
mov
notl
mov
cmp
fcmovnb
mov
aas
out
cltd
add
movsb
lahf
lahf
inc
xchg
jnp
push
mov
aas
sbb
jecxz
push
push
shrl
lcall
rorl
jl
mov
jl
push
in
in
pop
jns
jns
rcll
xchg
mov
cmp
iret
and
insb
jmp
loop
add
dec
mov
xchg
cmp
ss
es
mov
fdivrp
inc
aas
xor
push
dec
lds
xor
int3
in
cmp
mov
xchg
aas
ret
sahf
gs
insb
adc
adc
adcb
mov
or
rolb
jmp
or
ret
inc
cmpsb
leave
jo
lahf
dec
dec
cmp
sub
in
sub
dec
xchg
mov
inc
inc
outsl
push
cmp
or
push
cmpsb
cld
dec
test
mov
rcrb
cmpsb
jle
notl
test
dec
jg
sub
inc
push
mov
xchg
scas
shl
adc
mov
push
sub
and
pop
xchg
jp
adc
inc
jg
xor
les
cmpsb
pushf
push
adc
vmread
orb
das
inc
std
push
inc
jns
int
push
mov
push
ja
inc
cmp
bound
or
mov
mov
test
jecxz
push
sbb
cmpsb
xchg
mov
mov
cmc
mov
and
add
insl
xchg
cmp
call
int3
and
cs
push
push
jns
add
mov
inc
test
test
fistpll
testb
outsl
fsubrl
pop
sub
out
shlb
pop
pop
neg
and
jge
cmp
sub
sub
pop
pop
pop
xchg
sub
xor
and
jmp
cltd
lret
inc
popa
mov
xchg
lret
pusha
repnz
mov
mov
pop
orb
mov
xlat
or
je
mov
and
mov
mov
jne
and
sub
cli
add
sbb
int3
xchg
lods
push
orl
xorl
icebp
les
dec
add
add
out
mov
xor
nop
shl
xor
sbb
or
add
daa
popf
mov
pop
ds
sarl
mov
out
pop
fidivrl
movsb
mov
fstl
jg
dec
scas
or
mov
js
mov
int
jno
jmp
push
cmp
out
push
jecxz
lock
push
mov
mov
ja
xor
dec
or
pushf
jp
call
and
inc
mov
mov
ret
dec
and
lret
enter
jle
hlt
push
mov
ljmp
mov
loopne
jne
aam
mov
pop
pop
inc
adc
dec
shl
out
leave
and
add
lret
pop
cmpsl
push
push
add
pop
insl
add
add
outsl
ficoml
sub
jns
mov
pop
lds
dec
pushf
int3
mov
mov
lret
fdivrl
or
jno
cmc
orb
xchg
mov
cmp
and
loope
aaa
pop
fs
adc
push
les
mov
divl
aas
stc
icebp
aas
in
jl
jbe
das
cmpsl
outsb
fidivrl
xor
and
inc
add
mov
imul
ds
jle
in
ficomps
cmp
in
sub
mov
shlb
fdiv
movsb
jnp
mov
or
xchg
fstpt
xchg
sti
lcall
stos
inc
dec
mov
cmpsb
inc
xchg
fs
fs
push
xor
aaa
inc
mov
rol
mov
push
sbbb
out
hlt
scas
lods
mov
jb
xor
add
ja
push
dec
mov
sub
dec
aad
xchg
lcall
mov
test
jne
cs
cld
pop
xchg
sti
shll
mov
in
int3
sbb
data16
and
notl
sub
popa
and
jecxz
mov
ficompl
sti
mov
jle
mov
lret
std
std
push
pop
push
mov
xchg
jp
jnp
lret
lock
and
mov
ja
aas
or
mov
cmc
jno
ljmp
sub
outsl
jmp
test
and
mov
inc
bound
xor
out
int3
cmp
std
sub
ljmp
stc
into
fstpl
mov
lods
xchg
test
leave
xchg
ret
mov
cmp
cwtl
cmp
mov
add
or
movq
cmpsl
xchg
mov
dec
jne
lods
cld
mov
sbb
dec
push
pop
inc
sbb
iret
or
push
leave
inc
push
gs
mov
js
addr16
adc
cmp
dec
push
xchg
add
and
xor
lock
jb
frstor
imulb
test
sub
or
mov
int
inc
in
mov
addr16
xor
jg
pushf
icebp
int
out
mov
push
xchg
adc
xchg
or
outsb
orb
pop
sbb
xchg
aad
cli
sbb
sbb
push
adc
sub
or
in
pop
cmp
inc
mov
sub
aad
jae
sbb
push
xor
push
lcall
mov
scas
pop
test
es
mov
mov
lock
dec
adc
idiv
mov
adc
lahf
stc
scas
repz
adc
sub
mov
aas
pop
pop
jp
jb
pop
lock
loope
mov
cli
loop
repz
ficomps
cld
xor
dec
mov
hlt
and
dec
hlt
mov
loop
test
outsb
loope
pop
imul
inc
pushf
lds
hlt
pop
push
xchg
jg
dec
mov
sbb
or
mov
sbb
imul
and
mov
lcall
mov
jg
dec
loop
rorl
scas
testb
adc
and
and
pop
arpl
mov
cmp
or
jp
adc
ret
je
lret
xchg
xlat
test
adc
mov
xor
and
or
in
ja
call
mov
inc
add
gs
aad
flds
push
mov
mov
mov
jne
mov
cmp
ret
clc
sbb
pusha
lods
movsl
dec
into
lret
mov
mov
jmp
adc
mov
ret
fstps
sbb
push
in
shlb
mov
ss
pop
lret
call
shlb
inc
mov
sar
in
test
fmuls
out
inc
xchg
pop
ror
jo
in
mov
fildl
repz
inc
jmp
dec
pop
aaa
mov
sarl
add
outsb
and
adc
mov
sbb
rorl
lret
mov
mov
cmp
xchg
ljmp
in
mov
popa
xor
and
orb
jne
shlb
sub
jl
aaa
sub
pop
and
mov
or
bound
jnp
and
ljmp
insb
mov
mov
mov
scas
push
nop
testb
repz
push
mov
sub
inc
daa
jnp
insb
in
sbb
es
mov
inc
jle
push
jp
cld
xor
inc
imul
lcall
ss
sub
nop
xor
lahf
fisttpl
ds
aaa
hlt
jae
rcrl
jne
xchg
mov
push
cmp
pop
jp
pop
addb
dec
mov
in
xor
jo
cmpl
and
repnz
out
cmc
xor
vandnpd
push
xchg
sbb
insb
push
push
cmovo
or
cmp
mov
stos
scas
inc
push
outsl
push
inc
mov
lods
add
cmp
idivl
dec
mov
negl
jne
in
push
cmp
xchg
cs
bound
cli
out
or
mov
mov
rcrl
fistpl
xor
jp
adc
arpl
mov
push
call
dec
cmpsb
in
inc
jb
fdivrp
iret
sbb
adc
pop
push
mov
loop
add
pop
inc
or
vandpd
cmpsl
push
mov
cmp
pop
inc
mov
xchg
mov
das
mov
inc
mov
mov
je
pop
push
push
inc
sahf
pop
mov
loope
push
stos
popf
pop
lods
push
add
shlb
aad
sbb
mov
scas
adc
cwtl
inc
lcall
sti
and
cmc
mov
clc
sahf
cltd
mov
aas
and
in
dec
stc
mov
addl
mov
add
pop
cmp
cmpsl
shrl
or
dec
int
jle
xchg
gs
push
add
adc
lret
push
inc
mull
js
adc
mov
sub
inc
add
lods
mov
iret
sbb
mov
mov
sub
movsl
scas
gs
pushf
xchg
lods
fmulp
jne
and
lret
mov
je
dec
mov
xchg
dec
xor
sub
lds
int3
mov
mov
pop
scas
pusha
icebp
jb
xchg
or
sbb
js
mov
outsl
in
push
push
mov
leave
mov
bound
xchg
cmp
fisttpl
sbb
ret
adc
xchg
lret
ss
cmp
sarl
loop
dec
aad
repz
cwtl
shrl
orl
push
call
ret
and
popf
in
pop
sub
inc
fisubl
lods
xor
aam
mov
cmovo
dec
into
xor
andl
lcall
inc
mov
pushf
mov
in
in
fndisi(8087
je
stos
std
mov
in
push
icebp
dec
in
push
or
std
repz
cs
cmpl
enter
push
out
xor
xor
sbb
or
mov
dec
in
int
xorl
shll
or
mov
dec
les
mov
pop
mov
jle
repnz
ljmp
mov
adc
add
ret
mov
outsl
lds
stc
cmpsl
test
sahf
out
ficomps
inc
es
push
mov
mov
xchg
scas
addl
jnp
in
ficomps
xchg
into
cmc
jo
in
adc
cmp
and
cwtl
sbb
xchg
hlt
stos
dec
adc
lahf
test
addr16
sbb
sbb
pop
test
fucom
subl
data16
sub
jns
inc
or
pop
dec
inc
scas
nop
xchg
int
or
insb
jo
mov
xchg
cmpl
fldcw
scas
adc
lock
add
es
enter
fcoml
outsb
mov
ret
jae
les
xor
out
cld
xlat
sub
arpl
test
and
inc
jle
lea
adc
push
inc
jp
fstps
mov
add
loopne
jb
sti
mov
add
inc
jg
repnz
hlt
xor
inc
int3
popa
loopne
jne
mov
or
shlb
pop
ret
insl
ret
sbb
loop
arpl
paddusw
out
pop
ja
adc
xchg
rclb
jo
in
xor
jl
gs
scas
mov
adc
icebp
push
loop
ljmp
ffreep
testl
fisubrl
loope
xor
mov
hlt
fsubl
dec
fdivl
xchg
mov
fs
xchg
mov
mov
cmpsl
insb
add
rorb
dec
jbe
xchg
js
mov
sub
hlt
scas
cmp
movsb
pop
roll
xchg
dec
loopne
enter
pop
popf
out
xchg
imul
or
sarl
mov
test
cmp
sbb
mov
jnp
das
pusha
int
mov
push
dec
pop
add
js
mov
adc
sbb
dec
mull
jmp
addr16
cmc
inc
inc
jg
xchg
mov
sbb
pop
rorl
push
fisttps
lock
sbb
mov
test
jnp
cld
out
mov
std
or
out
stos
in
adc
das
xchg
inc
push
jbe
pop
dec
lcall
aas
leave
jo
das
xchg
sub
push
cmp
xchg
test
mov
pusha
xchg
arpl
movsb
int3
jmp
add
mov
mov
adc
dec
scas
xchg
xchg
mov
scas
clc
add
xlat
movsl
clc
push
adc
shr
outsb
cmc
cmpsl
movsb
aaa
stc
dec
add
lea
dec
fs
adc
ljmp
pop
xor
push
and
test
fildl
jp
insl
rorb
pop
inc
mov
mov
fwait
aaa
in
call
adc
lret
add
scas
into
imul
or
mov
lea
adcb
mov
lcall
sbb
xor
inc
fidivrl
inc
sti
adc
aad
xchg
dec
xadd
movsb
push
iret
sbb
cmp
outsl
cmp
jp
push
push
lods
ret
in
ds
test
out
test
imul
cmc
and
sbb
sti
dec
push
mov
or
xor
mov
jo
and
mov
sub
pop
push
push
mov
inc
mov
cmp
sbb
lods
pop
leave
jecxz
subl
loope
imul
mov
push
loope
ret
rorl
cs
push
sub
xchg
mov
sub
jnp
movsl
jecxz
enter
fimuls
ficoml
jl
mov
add
pop
or
test
sbb
pop
sahf
sub
jmp
ds
or
lea
pop
hlt
jae
dec
and
jo
xchg
aaa
out
cmpsb
cmp
sub
das
daa
and
cmp
and
fstpl
pop
out
adc
mov
mov
cmp
add
stc
mov
push
xor
adc
les
fisubrl
shll
push
loopne
sbb
enter
xor
sub
and
leave
in
mov
repz
xchg
mov
inc
xchg
pop
dec
into
cmp
scas
or
jns
lods
notb
out
out
outsb
scas
add
fisubrl
dec
jg
movsb
js
sbb
and
sub
pmuludq
jmp
jno
lahf
sbb
dec
xlat
sub
or
and
dec
bnd
ss
inc
pop
xor
add
jl
jnp
push
fs
das
xchg
cmc
mov
xlat
lret
es
push
adc
in
add
jl
leave
push
stos
pop
inc
ret
mov
sti
mov
rorb
repnz
cmp
popa
fmul
adc
aaa
sub
pop
inc
pusha
push
xchg
sub
ja
adc
cmp
movsl
outsb
pusha
push
addr16
mov
push
cmp
fs
es
lods
insb
jp
in
inc
cltd
xchg
push
fldt
fisubrl
sub
jp
in
push
jle
cld
xchg
sbb
jo
jp
mov
xor
pop
inc
dec
pop
and
lret
pop
push
pushf
mov
mov
lea
push
cmp
movsl
stc
xor
fsubs
push
mov
imulb
adc
adc
std
mov
or
sub
mov
xor
pop
sbb
stc
jbe
insb
cmpsl
adc
cmp
loope
pop
repnz
test
xchg
xchg
push
mov
hlt
xchg
pop
cmc
insb
pop
clc
xchg
mov
inc
mov
cmpsb
clc
out
push
adc
loope
add
or
int
cmp
in
sarb
xchg
lahf
adc
xor
mov
push
insl
js
jns
stc
ret
jb
fstpl
mov
jg
push
mov
add
xor
scas
rcll
lcall
pusha
fldl
xchg
cmc
jge
adcb
sbb
outsb
adc
test
cmpsb
jp
movsl
inc
mov
fs
outsb
cmp
push
and
jo
cmpsb
nop
or
mov
adc
jl
adc
jne
ret
in
popf
dec
lcall
jp
fimuls
jmp
jl
scas
fwait
and
lock
std
test
mov
mov
and
sbb
fwait
push
lahf
adc
lock
inc
lock
gs
ret
pushf
fnsave
dec
sub
les
inc
sub
pop
in
sub
xor
or
imul
dec
jge
imul
and
sbb
sub
jae
ffree
push
fidivrl
and
dec
mov
mov
sbb
sahf
adc
int
fimuls
inc
xor
lcall
bound
add
jae
cld
fmuls
or
outsb
int
jno
and
lahf
ja
inc
out
and
ret
mov
scas
add
pop
xor
add
repz
mov
test
into
push
mov
push
aam
jno
ret
aad
add
xor
imul
jno
cmc
ljmp
push
nop
and
js,pn
inc
push
cmp
cmpb
mov
mov
mov
aad
dec
call
inc
stos
mov
test
fdivl
mov
aad
or
push
adc
shrl
push
mov
enter
inc
jecxz
pop
dec
adc
mov
dec
ror
nop
cmp
fmul
mov
lcall
push
ljmp
dec
fucomi
cmp
mov
leave
ss
inc
sbb
arpl
sub
pop
imul
and
adc
dec
mov
or
mov
mov
int
insl
sub
sbb
add
jl
mov
scas
popa
jbe
addr16
int3
jle
shll
shrl
add
pop
sarb
pop
inc
push
rclb
sti
dec
inc
leave
scas
out
push
imul
inc
dec
cmpsl
mov
test
cmpsl
add
push
sti
flds
insb
mov
cmc
jl
scas
das
and
xchg
scas
ds
imul
xchg
xchg
sbb
adc
sbb
dec
xor
imul
xchg
popa
jo
ja
out
mov
stos
xor
sbb
clc
jae
lret
cmpsb
jns
movsb
mov
rolb
ret
aaa
popf
mov
adc
push
aad
lds
add
subb
shrb
es
leave
mov
enter
sbb
test
imul
mov
jmp
sbb
pusha
inc
das
sub
aas
sti
fidivs
sub
push
imul
mov
pop
arpl
enter
or
fs
xor
xor
pop
out
add
cmp
outsb
ret
das
inc
and
test
cmp
fwait
loopne
sbb
mov
mov
dec
stos
fwait
stos
jno
cmp
sub
and
xlat
cmp
adc
es
inc
lods
and
ljmp
sbb
sub
xor
arpl
and
cltd
push
addl
dec
lcall
and
jmp
dec
outsl
xor
mov
sbb
jo
lds
loop
aam
hlt
push
bound
je
ret
jg
mov
cwtl
loope
loope
xor
mov
pop
enter
dec
sub
repnz
push
movsl
call
mov
lock
push
test
cmp
cmp
xlat
mov
inc
ss
fdivrs
inc
out
dec
jge
mov
cltd
cltd
insl
jns
cmpsl
in
mov
push
addb
jbe
xor
mov
clc
mov
mov
jae
lods
sub
clc
fldcw
lea
mov
push
jo
iret
daa
or
push
outsl
pop
ss
into
in
inc
call
int
pop
xor
cltd
sti
push
andb
clc
mov
imul
sub
clc
loope
fstpt
leave
pusha
mov
fisttps
fcmovnbe
lahf
pop
aam
addb
and
lds
adc
mov
lods
repz
or
fbstp
rolb
cmp
sub
cmp
push
bound
mov
dec
push
stos
ret
push
ss
add
xchg
add
push
scas
pop
add
fcoml
mov
out
dec
gs
mov
push
outsl
mov
push
mov
add
sbb
sub
jp
sub
out
lret
and
popa
rcll
push
sbb
aad
leave
fbld
sbb
gs
arpl
push
incb
shlb
cmp
mov
lcall
addb
cmc
cltd
push
pop
mov
loopne
and
stos
or
add
sub
ds
daa
iret
cmp
pop
jne
sbb
dec
lods
push
mov
mov
mov
repz
gs
pusha
cmp
sbb
sub
mov
das
neg
pop
mov
mov
sarl
test
mov
jbe
dec
or
inc
ds
pop
mov
and
jb
sbb
mov
or
aam
scas
lahf
rclb
and
mov
cld
int3
and
jmp
jmp
pop
mov
repz
popa
xchg
andb
sbb
push
outsl
sahf
mov
icebp
mov
xor
push
xchg
push
in
push
scas
inc
aad
and
pop
cmpsl
shll
shlb
int3
lahf
dec
sbb
sub
push
mov
lods
and
fstpt
cmp
push
sbb
test
ret
daa
in
les
or
jmp
cwtl
in
fcmovne
add
push
jbe
mov
cwtl
sbb
lret
xchg
test
cwtl
dec
and
mov
push
and
rcll
in
fildl
xor
adc
adc
iret
mov
incb
mov
and
lods
stos
cmpsl
xor
pop
add
outsl
cmp
fbld
sbb
outsb
cmp
stos
sub
jno
inc
jns
xor
add
sub
cmp
sub
cmp
pop
insb
jecxz
sub
icebp
jno
xor
sbbb
fstpt
sub
sbb
fnstsw
nop
lahf
lods
sar
in
mov
stos
loopne
mov
sbb
sub
mov
or
fistl
cmp
adc
fidivl
jle
adc
ja
xchg
enter
and
mov
out
nop
mov
push
adc
jecxz
pop
lret
aas
cmpsl
sbb
mov
in
pusha
dec
nop
aam
jnp
out
clc
adc
repnz
push
daa
adc
movsb
movb
les
inc
loopne
push
in
cs
aas
mov
mov
xlat
andl
mov
into
cmp
xor
xor
aas
or
js
adcl
pop
push
nop
out
bswap
addr16
and
cmp
lea
xchg
pop
mov
into
aaa
in
xor
inc
testb
aam
cltd
mov
aam
out
inc
xchg
sarb
dec
cmp
cwtl
aad
jns
rolb
xchg
inc
inc
mov
lcall
inc
jo
int
test
clc
mov
or
fs
rcrb
pop
std
bound
mov
push
add
cmp
xor
mov
mov
cmp
push
aam
pop
insl
add
leave
xchg
lods
sub
pop
mov
or
push
sbb
pop
mov
adc
xor
fisubl
and
adc
jnp
xor
int3
mov
xor
cmpsb
add
pop
mov
xchg
mov
fisttpl
mov
ficompl
dec
adc
repnz
push
repz
test
sahf
dec
std
sbb
es
dec
jnp
mov
inc
dec
push
mov
dec
pop
addl
dec
sar
divl
sub
insl
mov
or
pop
sub
pop
sub
cmp
ret
out
or
leave
lahf
jmp
adc
adc
inc
inc
in
ljmp
mov
cmpsl
jb
sub
dec
loop
sbb
xchg
sbb
dec
lods
push
cmpsl
data16
dec
pop
ret
push
pop
mov
and
ja
stos
pop
xlat
outsb
cmp
cmp
xchg
shr
mov
jb
xlat
sub
outsb
xchg
xor
or
ljmp
or
lods
lock
xchg
fs
test
cltd
pop
xor
mov
leave
clc
hlt
enter
sbb
sub
enter
push
xchg
je
loopne
out
into
dec
sub
jmp
mov
xchg
push
jle
add
orl
inc
pop
dec
ret
fmul
outsl
push
sub
int3
sti
dec
xchg
push
fstps
xor
sub
mov
xor
cltd
stos
adc
fcom
adcb
ret
mov
andl
das
fsubs
lcall
lcall
stos
cmpsb
or
daa
les
ds
int
cltd
pusha
loop
leave
gs
add
cs
jmp
aad
mov
shlb
ja
push
imul
pushf
fs
mov
sbb
jne
lret
xchg
imul
push
xor
movsl
push
xor
test
jbe
mov
jge
dec
mov
xlat
or
fmull
int
jb
gs
aaa
xchg
test
mov
fbstp
fdivrs
ss
pop
arpl
ret
xchg
and
jp
pop
xor
dec
sub
sub
in
push
stc
aaa
imul
nop
sub
jge
add
shlb
and
test
stos
add
jnp
bnd
dec
jns
jbe
loopne
mov
add
push
bound
clc
or
and
out
mov
insb
lea
je
or
mov
mov
mov
inc
add
xor
shlb
call
xor
inc
fsubrp
in
rol
xchg
xor
cwtl
mov
mov
jmp
rcrb
int3
push
pop
sahf
data16
push
movsb
push
jg
inc
aas
sub
mov
jge
les
xchg
jmp
in
and
adc
fs
stos
push
es
je
adc
fnstenv
inc
loope
iret
jo
pop
or
sbb
xor
mov
fcomip
dec
gs
pop
cmp
mov
mov
add
jecxz
adc
jno
add
dec
xchg
pushf
adc
pop
add
push
sub
push
idivb
in
and
cmp
push
pop
fstpt
xchg
push
jo
cmpsl
add
out
mov
fwait
mov
push
das
add
imul
js
fdivs
cs
scas
shll
add
push
and
mov
mov
testl
repz
jp
js
adc
mov
in
pop
mov
dec
aam
testb
dec
jno
adc
orb
pop
add
iret
leave
sti
push
insb
mov
outsb
push
fmul
call
mov
mov
out
adc
lock
test
fwait
jp
ret
aad
sub
nop
xor
or
xchg
mov
and
cmp
idivl
sbb
test
cli
sti
push
mov
mov
dec
jne
insb
pop
or
repnz
xchg
aad
call
out
shll
xchg
int3
jnp
rorl
xchg
notl
fld
add
insl
inc
sahf
loopne
push
adc
mov
mov
jns
mov
insb
mov
test
sbb
insb
test
mov
test
loope
pop
scas
addr16
dec
mov
data16
add
pop
and
xorl
sbb
dec
jne
cmp
gs
mov
ds
shll
in
int3
ds
dec
stc
mov
fdivrl
pop
or
jmp
and
push
sub
sar
add
loopne
inc
jge
cwtl
rolb
sbbb
cwtl
cmp
clc
jbe
aas
adc
loopne
jp
xchg
lea
pop
mov
sahf
jnp
cmp
lahf
les
mov
adc
xchg
cmp
lods
jge
cmpsb
daa
mov
mov
and
mov
mov
sub
cwtl
pop
pop
daa
mov
dec
sbb
sbb
out
cmp
push
jmp
mov
or
leave
loope
push
ja
xor
rclb
call
jp
ret
xor
imulb
mov
lret
sarb
outsl
mov
outsl
addr16
dec
pop
inc
in
add
shll
ja
mov
iret
je
fs
pop
jmp
pusha
cli
adc
sbb
inc
mov
test
dec
arpl
add
shll
pop
pop
adc
inc
dec
sub
sub
enter
pushf
test
xor
mov
sahf
lret
out
fistl
scas
lea
lds
lret
das
stos
mov
icebp
ret
inc
add
aas
movsb
push
inc
and
stos
adc
pop
js
stos
es
aas
sub
inc
cld
test
int
push
imul
lahf
jae
into
popf
sub
fldt
in
sub
lock
test
sub
in
fisubrl
inc
imul
mov
pop
sub
lcall
dec
xor
out
and
mov
movsb
dec
inc
repz
fwait
xchg
aas
or
ud2
rcr
mov
fwait
addl
fs
push
mov
push
movsb
adc
out
sti
xlat
or
insl
xor
add
scas
pop
cmp
daa
aas
mov
jmp
call
cli
mov
aaa
aas
or
cmc
adc
out
push
aad
and
orb
push
jp
mov
xor
cmp
pop
cmpsl
dec
js
dec
mov
pop
add
pop
test
lea
fwait
pop
jge
xchg
test
sbb
cmpsl
mov
sub
fadds
cmp
pop
dec
cwtl
imul
pushf
pop
jb
mov
mov
lea
push
cmp
sbb
or
add
mov
stc
movb
std
push
cmp
mov
and
iret
xchg
sbb
and
add
mov
leave
mull
pushf
sbb
das
shlb
pop
stc
stos
stc
jmp
cmpsl
lahf
mov
mov
lcall
dec
jg
push
jo
scas
int3
imul
sub
movsl
int3
mov
cmpsb
add
cmp
sbb
mov
test
or
mov
rolb
push
lods
aaa
cmp
orl
mov
cmp
xchg
pop
xchg
cmp
add
adc
sbb
and
movsb
lret
and
push
loope
inc
mov
lock
add
lock
nop
jo
mov
mov
lods
push
jns
xor
mov
cmp
xor
push
and
cmp
adc
pop
insl
fwait
addr16
shlb
inc
xchg
test
int3
pop
sti
sub
mov
ljmp
mov
add
dec
lret
fsub
repnz
gs
jo
popf
ljmp
in
mov
movsb
sbb
sbb
add
or
fwait
sahf
repz
mov
fdivs
mov
out
inc
inc
jo
lret
inc
jecxz
push
out
sub
aaa
aam
mov
sbb
mov
or
mov
je
xor
xchg
in
test
stos
addb
outsb
adc
cltd
imul
in
in
push
divl
mov
aas
mov
outsl
mov
jmp
lea
gs
xchg
sbb
pop
inc
outsb
or
jge
in
cmp
stos
loopne
adc
scas
and
and
sbb
or
orb
cli
mov
ljmp
push
push
mov
xorl
subb
hlt
sub
jmp
xlat
xchg
jb
cwtl
fwait
push
sbb
in
imul
loopne
js
mov
out
jg
scas
je
jo
pop
stos
add
ficoml
scas
popf
cmc
jge
stos
and
jp
and
mov
imul
cmp
xchg
mov
sub
das
dec
popa
bound
test
xor
sub
xchg
les
lods
pop
sub
sarl
jo
addr16
xchg
xchg
push
jmp
push
or
lret
dec
loope
mov
test
jns
adc
xchg
and
xchg
sti
inc
sub
jl
gs
std
dec
sbb
sbb
sbb
subl
leave
movsl
insl
cmp
mov
or
lods
test
loopne
clc
adc
test
and
xor
int
sub
arpl
scas
adc
push
pushf
mov
mov
or
add
fwait
push
dec
dec
sub
stos
lcall
mov
pop
xchg
test
xor
shl
mov
cmp
sahf
shrb
test
jmp
lds
decl
sbb
out
cmp
daa
xor
and
imul
ds
shr
mov
fmul
push
iret
lret
daa
push
sbb
pop
stos
adc
xchg
test
cld
nop
mov
adc
sub
sbb
pop
sbb
jb
push
outsl
dec
ret
shll
adc
lods
out
adc
fldenv
push
xor
push
cwtl
add
imul
fimull
push
loopne
inc
hlt
js
int3
clc
lods
lock
cs
dec
scas
or
xor
push
mov
or
mov
mov
push
out
and
scas
sbb
aas
jmp
out
add
mov
push
xchg
fildl
sub
cmp
pop
clc
mov
lods
push
mov
dec
fistl
stos
dec
mov
jns
xchg
mov
nop
aad
dec
addr16
call
ret
or
sbb
loop
jmp
btsl
add
ja
xorl
stc
mov
es
inc
das
add
sti
scas
push
jle
lret
fdivp
xor
stc
in
push
mov
cmp
out
testl
popa
adc
mov
mov
push
test
call
mov
js
repnz
push
and
mov
fnstcw
repz
roll
inc
xor
inc
mov
xor
ret
stc
push
pop
test
clc
push
pop
loopne
pop
sub
jmp
lods
xor
out
mov
dec
mov
or
mov
jne
sbb
adc
adc
adc
push
inc
outsl
in
jmp
or
xchg
leave
inc
add
das
and
xchg
push
xor
je
sub
subl
cmpsb
add
pop
jae
push
outsb
lcall
lcall
aas
int3
out
sahf
jns
pop
mov
ss
mov
pusha
psadbw
je
adc
out
or
jnp
cmpl
jns
or
adc
xchg
cmp
inc
shrb
insl
xchg
inc
jae
mov
ret
loope
stos
mov
sbb
daa
and
jg
jmp
inc
lods
lret
pop
pushf
push
sbb
inc
test
es
ljmp
fwait
int3
scas
push
lret
sbb
fs
or
pop
sbb
imul
dec
mov
mov
inc
loop
clc
ja
mov
popa
push
xor
xchg
mov
into
xchg
fbstp
rcl
cli
inc
fnstsw
js
sub
std
sbb
emms
push
sbb
push
dec
jl
or
scas
les
xchg
loop
std
and
jp
lock
clc
jmp
mov
pop
ljmp
jo
push
loop
test
aas
out
aad
lods
mov
movsl
mov
shrl
ret
bound
dec
lret
mov
xchg
rcrb
push
lods
cmpsl
mov
adcl
fdivrl
cmp
push
mov
and
fs
incb
dec
aam
jb
adc
push
jecxz
add
lahf
xlat
xor
lods
cmp
jnp
pop
inc
cmp
call
insl
and
sbb
cmpsl
mov
int
push
or
sbb
imul
mov
push
int3
mov
pop
fs
adc
push
dec
test
lret
lret
aaa
jns
lahf
cmp
sub
push
arpl
fdivrl
xchg
push
mov
out
push
clc
rorl
bound
jmp
pop
js
jg
dec
lds
sbb
or
push
out
dec
xor
dec
push
sub
push
pop
pop
adc
test
sbb
hlt
out
xlat
repz
mov
loope
enter
int3
xlat
mov
push
test
out
jp
push
mov
in
ret
push
aam
ja
mov
lcall
lcall
push
cmp
sbb
inc
rorl
cmp
mov
lret
xchg
sahf
xor
dec
or
fisttpl
push
mov
mov
mov
xor
cwtl
push
cmp
dec
xlat
popl
jno
sbb
mov
and
mov
cwtl
xchg
dec
notb
sahf
mov
shlb
das
dec
test
xor
shlb
test
rcrl
push
test
incl
cmp
push
ss
repz
sarb
outsl
jp
das
pop
fwait
into
cmp
nop
movsl
jns
pop
add
sbb
dec
cmpsb
jle
scas
cmp
push
pop
cmpsb
cld
and
or
push
out
fisubrl
lock
fiadds
lods
push
repnz
fmuls
push
cli
sbb
stc
dec
outsb
repz
out
aas
and
test
xor
imul
sub
stc
push
call
jne
in
xchg
and
out
xor
push
cwtl
leave
js
jp
add
shrd
xchg
ficompl
jae
adc
scas
xchg
cmp
out
scas
test
push
fmull
ficomps
nop
je
aad
sbb
push
sbb
jmp
rcr
out
pushl
sbb
aas
adc
mov
ficoms
test
std
sbb
dec
dec
sbb
popf
cmp
fwait
cmc
cwtl
mov
loopne
xchg
cmp
mov
dec
adc
xchg
rcr
mov
sub
cmpsl
cmp
sbbl
jecxz
sbb
repnz
inc
xchg
mov
jge
push
shll
inc
jecxz
dec
jo
or
mov
stos
inc
dec
lret
sbb
xchg
and
jb
cmp
rolb
adc
insl
out
aaa
pusha
push
lods
int
lret
pop
test
mov
push
mov
pusha
xor
lods
cmpsl
xor
lods
ljmp
or
in
vsqrtpd
lret
xchg
push
aad
dec
scas
or
jne
cmp
add
sub
lea
fldcw
mov
test
push
movsl
adc
cli
mov
jp
fmull
push
lods
adc
pop
stos
jle
addl
bound
and
sarl
movsl
ds
cmp
sub
mov
jp
dec
mov
sarb
push
movsb
aam
xor
ficoml
sub
jl
imul
enter
pop
cltd
add
add
lds
mov
jmp
lods
stos
ss
mov
jmp
loop
jp
dec
jb
testb
pop
lahf
int3
jb
push
mov
fdiv
lock
call
mov
jnp
mov
xor
fwait
stc
push
fcmovne
mov
imul
pop
and
popa
frstor
not
fisttps
sub
cmp
sub
in
rcrb
insb
into
cmp
ret
xchg
cmp
mov
adc
out
js
add
xchg
sub
inc
push
loopne
mov
sub
push
mov
cmp
or
ficoms
shl
mov
sbb
dec
addr16
clc
push
pop
insb
jg
pusha
cli
sub
add
push
jnp
not
jmp
mov
test
inc
out
cltd
clc
lods
jns
orb
adc
push
cmp
or
ret
jecxz
mov
or
into
cmp
push
iret
ja
clc
out
rclb
add
cmpl
push
out
hlt
pop
maxps
mov
fs
ja
xchg
cwtl
in
or
mov
imul
lods
fcomip
push
pop
stos
lahf
fidivrl
fstps
unpckhps
xchg
out
mov
mov
ret
movsl
jns
movsl
ss
lcall
sub
nop
push
aad
imul
push
mov
es
rcrl
fadds
fmuls
repnz
push
mov
lahf
fucomi
loope
push
xlat
pop
sahf
push
cltd
inc
mov
mov
inc
mov
mov
sbb
jb
inc
and
push
sbb
popf
test
or
sti
ja
enter
fldl
iret
std
mov
addr16
push
lods
xchg
adc
mov
out
scas
mov
cwtl
jbe
repz
scas
outsl
ja
in
inc
dec
cli
dec
push
xchg
cmp
sbbb
ftst
push
cmp
or
lret
nop
mov
push
or
mov
or
mov
cmp
dec
cs
popa
inc
dec
lret
xor
roll
stos
lea
es
or
adc
add
ja
push
out
add
lcall
mov
dec
sub
mov
jns
mov
add
fcompl
add
into
test
popf
sub
jno
std
lret
out
cmp
jne
pop
mov
stc
sbb
adc
ret
pushf
or
xchg
in
js
push
loop
pop
jl
inc
jo
outsl
test
loop
testl
xchg
scas
and
mov
inc
fcomip
or
fcmovne
pop
add
dec
int
xchg
adc
mov
stos
pushf
jns
jl
cltd
jmp
sbb
mov
loopne
pop
sbb
loope
xchg
je
loope
rol
mov
lcall
or
sbb
mov
mov
jnp
jno
ret
decb
int
jns
nop
ret
mov
in
mov
adc
mov
push
mov
adc
xchg
clc
in
jnp
fsubl
clc
pushf
cmpsl
push
mov
inc
inc
out
test
test
inc
and
push
fwait
aam
xor
js
lea
subl
aam
dec
ret
lret
js
clc
cmp
sbb
sahf
mov
mov
movsb
lcall
pop
pushf
push
xorl
mov
pop
jg
dec
pop
jne
cwtl
jbe
pop
xchg
repnz
mov
fnstcw
dec
addr16
push
xor
out
xor
inc
push
add
lea
xor
jecxz,pn
pop
insl
jmp
xchg
das
loope
shrl
push
xor
outsb
rclb
lods
xor
mov
and
mov
mov
gs
inc
fwait
dec
loopne
jbe
or
or
xchg
call
cmp
lea
mov
stos
inc
sbb
and
adc
sub
mov
inc
push
xor
and
loopne
imul
add
xchg
xchg
and
pop
out
dec
fwait
ss
push
inc
stc
testb
cli
pop
jmp
clc
sub
pop
push
aad
cmp
movsb
leave
inc
xor
outsl
push
movlps
add
cmp
adc
mov
mov
jl
sbb
outsb
aam
inc
xchg
cmp
jbe
in
hlt
es
int3
xchg
mov
addr16
mov
mov
pusha
pop
sub
cltd
sbb
inc
cld
xor
aas
cmpsb
lahf
mov
bound
ja
scas
cld
or
inc
push
dec
lahf
enter
mov
mov
and
dec
xor
repz
scas
mov
jl
push
lret
push
push
lock
mov
dec
jl
cli
dec
adcl
push
adc
lcall
mov
push
out
in
mov
mov
into
cmp
fldenv
sbb
out
popa
dec
into
xor
test
dec
pushf
cmp
jg
push
sub
ror
insb
dec
lret
cmpsb
in
mov
dec
mov
imul
mov
mov
jae
mov
sahf
hlt
bound
xchg
add
sbb
lods
scas
push
pop
fisttpll
ljmp
xor
loop
inc
adc
test
lods
int
jle
cmp
lcall
loopne
xchg
scas
lret
int
cli
in
ds
or
mov
mov
pop
mov
test
push
stos
out
mov
mov
jo
push
sbb
rcrb
mov
add
xor
scas
repz
xchg
jg
xchg
mov
xchg
cmp
ss
lods
aas
jno
cli
push
push
inc
out
call
ja
fadd
add
addr16
xchg
fsubrs
adc
cmp
psadbw
out
pop
adc
ljmp
imul
inc
pushf
sub
pop
or
aam
push
int
mov
addr16
aas
pop
and
dec
lods
adc
xor
mov
and
adc
xchg
pop
lret
mov
out
inc
lods
inc
fstpt
sbb
push
out
jo
test
jecxz
push
aas
stc
and
fadd
cwtl
pop
loop
test
out
lea
jmp
shlb
and
sbb
jle
ret
loop
pop
mov
icebp
mov
push
mov
mov
mov
vunpckhps
push
pop
adc
das
popa
mov
xchg
test
mov
dec
sbb
in
mov
dec
mov
jbe
sub
rcl
aas
fwait
aaa
jle
or
hlt
push
or
cmpsb
jo
xor
jl
call
mov
xlat
daa
jg
sbb
rorb
scas
inc
dec
sbb
xchg
adcb
rcrb
lahf
std
notl
testb
out
jne
sub
sub
lret
out
fdivr
aad
daa
shrb
cmc
cwtl
out
clc
into
test
test
popa
xor
outsl
rorb
test
mov
jecxz
adc
std
out
inc
sub
int3
repnz
inc
inc
adc
es
inc
out
jbe
xlat
xor
dec
into
repnz
out
inc
inc
push
jecxz
jle
or
aaa
inc
xor
mov
mov
test
fs
aad
mov
lcall
rcrl
movsb
and
insl
push
and
jecxz
mull
jno
shr
cmpsl
clc
movsl
cmpsb
mov
mov
bound
mov
pop
pushf
sbb
loop
sbb
mov
jg
movsb
cli
cs
pop
push
rcl
outsb
pushl
pop
add
sub
xlat
xchg
push
push
jae
neg
mov
or
pop
mulb
iret
or
out
sahf
cmp
inc
fbld
cmc
nop
daa
adc
xchg
mov
sbb
inc
leave
pushf
mov
int
adc
and
repnz
lret
xchg
xor
test
out
inc
mov
mov
sbb
pushf
cwtl
and
add
jle
jo
or
mov
out
movsb
mov
pop
sub
je
scas
push
sbb
roll
mov
lcall
xchg
leave
cltd
cmpsb
popa
inc
jo
sbb
shlb
push
xchg
fstpl
adcb
andb
aas
popa
test
dec
scas
pop
int3
lret
jbe
add
sahf
arpl
iret
cmc
adc
andl
out
jmp
out
or
jo
sub
mov
jecxz
adc
pop
test
roll
mov
xchg
mov
adc
push
xchg
mov
dec
jno
lods
mov
mov
lret
in
repz
rcl
stc
int3
fadd
lock
lcall
lahf
imull
arpl
jge
jmp
inc
mov
jg
insb
jo
aaa
outsb
shlb
movsl
cmpsl
scas
scas
mov
gs
movsb
add
imul
sahf
mov
fdivrs
pop
mov
cmp
dec
push
jecxz
roll
dec
fs
addr16
xchg
loop
outsl
or
inc
xor
sbb
repnz
sbb
push
scas
adc
inc
cld
insb
test
ret
shlb
add
inc
ficomps
fisttps
outsl
cmpsw
imul
and
mov
imull
adc
adc
pushf
shrb
movlhps
add
pop
int3
pop
lahf
pop
lea
xor
aaa
into
aam
and
in
xlat
aad
push
pushf
dec
cld
jl
and
hlt
mov
hlt
jno
mov
stc
or
sub
sarl
neg
sbb
mov
push
sbb
dec
inc
mov
adc
fidivs
adc
jne
xchg
fistl
add
mov
add
xchg
cmpsl
lods
sarl
ficomps
push
push
cwtl
pop
xor
sub
fs
in
lcall
les
mov
sbb
sbb
push
lahf
push
dec
testl
sbb
inc
push
pop
or
les
insl
out
mov
das
aaa
adc
pop
dec
lock
push
out
std
repz
cmpsb
or
inc
lea
xchg
dec
pusha
lcall
loope
nop
dec
adc
cmp
dec
or
gs
iret
and
aaa
or
sarl
pushf
push
mov
stos
lret
arpl
mov
add
push
inc
inc
mov
push
adc
or
push
mov
pusha
rcr
das
jle
push
push
dec
movsb
imul
iret
push
jb
aaa
and
addr16
xor
cwtl
daa
cwtl
push
stos
mov
ljmp
or
pop
jge
push
mov
sub
jnp
jns
push
enter
push
adcl
and
scas
push
fists
cmp
dec
fisttpll
lret
lods
outsb
adc
adc
xor
lods
inc
add
inc
push
in
push
stos
mov
cmpsl
sub
stos
lret
dec
arpl
dec
mov
aad
pop
je
mov
xlat
shlb
add
daa
xchg
stos
rol
fbld
lds
sub
dec
jecxz
mov
inc
jb
mov
inc
and
mov
cmp
mull
xchg
xor
arpl
repnz
frstor
add
jle
je
mov
mov
push
cmc
shl
fcomi
dec
in
mov
and
jg
push
sbb
into
popl
cltd
jmp
add
mov
cmp
mov
inc
cmpsl
jle
push
outsb
mov
mov
leave
js
pop
jmp
and
aad
fdivrp
add
fdivrs
fs
stos
or
mov
pop
ja
mov
mov
push
aas
mov
or
dec
or
pushf
xchg
call
xchg
jo
in
xor
pop
push
sti
push
xchg
fiaddl
daa
scas
mov
jo
out
push
dec
cmpsb
into
cmp
cmp
xchg
sub
adc
lret
add
or
pop
iret
dec
push
stc
sub
stos
xor
aad
fimuls
xor
inc
stos
push
dec
push
cmp
sub
iret
lea
xchg
jb
cltd
inc
sbb
push
addr16
pop
rcl
jb
js
cs
dec
mov
jg
lcall
fstpl
dec
js
xchg
inc
cmp
loop
mov
test
jae
and
add
mov
daa
inc
or
shl
int3
push
mov
lods
inc
or
pop
cwtl
xchg
xor
mov
push
jns
mov
jnp
ljmp
xor
cmpl
mov
dec
movsl
orb
aam
push
arpl
inc
adc
sbb
cmp
loop
mov
mov
push
fcompl
push
dec
rol
lahf
les
pop
iret
xor
or
xchg
xlat
pop
lock
pop
arpl
fwait
scas
out
xchg
cmp
movsb
mov
ss
push
push
push
xor
sbb
inc
data16
mov
enter
popf
or
imul
out
mov
aad
adc
repz
add
bound
mov
xchg
int
gs
bnd
test
mov
inc
inc
mov
and
insl
push
lock
sbb
add
and
push
fstpt
testb
mov
cmp
lret
into
jno
sub
inc
mov
mov
fdivrl
cwtl
adc
loopne
dec
sbb
and
adc
jb
fldl
push
in
lds
pop
cli
xchg
ret
xchg
pop
cmpsl
xor
or
lock
js
dec
int
sub
mov
push
shll
jg
inc
aas
cwtl
into
les
std
int
cwtl
lods
movl
sbb
in
ret
sub
mov
inc
movsb
test
sub
pop
mov
cld
mov
adc
mov
mov
pop
inc
nop
insb
lcall
sub
fs
pop
js
mov
mov
dec
dec
pop
add
lods
xor
xor
pop
mov
lret
data16
sub
lods
shl
scas
mov
jge
enter
jnp
adc
cmpl
push
add
cltd
leave
fidivrl
fcoms
cld
pop
into
adcl
mov
in
sarb
daa
sbb
repz
mov
fidivrl
inc
arpl
push
pop
inc
cmp
pop
and
mov
sbb
mov
stos
cwtl
adc
cmp
or
sbb
sbb
fldl
inc
in
arpl
jae
insl
jl
mov
adc
sarb
roll
inc
movsl
xchg
adc
scas
mov
ja
les
mov
or
push
push
or
pop
inc
xor
add
xor
cltd
dec
fld1
lods
or
fisubl
xor
push
lock
movsb
adc
and
test
or
cmp
insl
rol
enter
dec
mov
mov
mov
adc
pop
adc
sarl
dec
xor
testl
je
cmpsl
lahf
push
pop
sbb
stos
hlt
mov
inc
xchg
inc
mov
shl
aam
ss
repnz
aam
mov
xchg
push
inc
enter
inc
jbe
in
imul
mov
and
lock
adc
jmp
dec
mov
js
add
nop
dec
push
sti
stc
lock
push
call
aam
lods
inc
cmp
or
popa
dec
jnp
sub
pop
imul
lods
xchg
push
add
popf
push
mov
fnstsw
ljmp
lcall
icebp
sbb
cmp
sbb
dec
push
je
pop
jno
fcmovnu
ud1
and
pop
xchg
rcrb
aaa
cld
loop
icebp
push
roll
imul
add
test
cmp
lock
movb
popl
lock
xor
inc
out
mov
mov
mov
scas
aaa
mov
sub
pop
outsl
sub
inc
adc
or
lea
sbb
lds
push
lea
mov
int3
xchg
xchg
jo
cmpsl
sarb
ss
inc
mov
and
mov
mov
push
pop
int3
jg
inc
movsl
add
xchg
in
lahf
adc
adc
shll
cwtl
inc
lds
push
mov
sahf
mov
fistpll
dec
ljmp
inc
hlt
mov
faddl
imul
pop
inc
fisubl
jne
in
out
bswap
leave
xor
enter
and
neg
rorl
loope
dec
in
mov
mov
sub
fistl
and
imul
jbe
add
dec
lods
jecxz
xchg
imul
sub
cli
les
in
ret
pop
add
sti
std
jecxz
push
cmp
rorl
dec
xlat
mov
sub
mov
loopne
inc
aam
ljmp
push
aad
cmp
mov
xchg
cld
ficoml
in
jns
push
or
es
mov
fimuls
jmp
and
inc
sbb
sub
push
call
mov
fwait
pop
stos
adc
dec
mov
mov
mov
pop
inc
sbb
mov
push
fldt
faddl
lods
inc
ja
out
mov
sahf
repz
stos
mov
lahf
clc
inc
push
adc
or
in
mov
dec
test
lret
jno
sub
push
sbb
hlt
cli
addr16
jbe
in
cmp
ss
and
sub
test
mov
pop
jae
or
ret
xchg
fisubrs
sub
negl
mov
mov
in
pop
fldcw
dec
mov
sbb
and
mov
and
cmp
or
fstpt
push
repnz
cmp
dec
lret
pusha
xor
lahf
scas
lcall
pop
push
xor
cli
jp,pn
jp
mov
adc
cs
mov
mov
push
xor
xchg
loop
fidivl
outsl
ret
inc
stos
jge
push
dec
pop
mov
inc
cmp
and
hlt
test
inc
subl
mov
stc
scas
and
push
cmp
es
in
lods
stc
cmc
cli
push
aam
in
mov
pop
or
outsl
push
cmp
int
push
jns
xchg
xchg
fdivrl
and
lahf
or
xor
xchg
sti
hlt
popf
inc
mov
mov
pop
call
dec
xchg
inc
in
add
pop
cli
sbb
insb
adc
dec
pop
mov
pop
shll
pushf
add
pusha
aas
dec
fcmovne
shl
push
xor
cs
dec
add
rcr
jo
repz
mov
test
out
sbbl
outsw
push
je
xor
and
lcall
push
jge
inc
dec
aad
cli
ret
mov
cmpsb
mov
and
mov
in
enter
clc
jbe
mov
stos
lock
ja
mov
pop
fisubrs
fbstp
fimuls
out
inc
fwait
mov
add
jno
xchg
inc
mov
cmpsl
jo
xchg
insb
xchg
inc
mov
aaa
insl
cmp
add
inc
arpl
int3
out
andb
jbe
pop
in
pop
and
cmc
jmp
mov
bound
add
movsb
rcll
sub
cld
push
push
js
mov
sbb
mov
push
shlw
enter
mov
call
sub
or
aad
movsl
mov
out
add
mulb
dec
push
pop
loopne
clc
mov
push
sahf
scas
out
xor
xor
and
adc
clc
sbb
lock
outsl
jae
add
inc
inc
or
scas
jae
or
mov
das
mov
mov
dec
mov
ja
mov
arpl
out
mov
sbb
cmp
out
push
sub
outsl
pop
stos
fimull
xor
pop
xchg
call
sbb
in
sbb
pusha
stos
mov
push
in
movsl
xor
jl
cmovno
adc
adc
sub
lret
push
data16
sub
ret
jp
insb
xchg
repz
push
jecxz
pop
rolb
out
cmp
sbb
and
push
nop
and
inc
pushf
sbb
jo
and
dec
lahf
test
rorb
lret
and
mov
fistpl
out
xor
cltd
fdivrp
scas
sti
xlat
flds
mov
jle
cmp
jg
push
mov
mov
pushf
stos
pop
push
mov
test
cmpsb
es
repnz
xor
fwait
jmp
fmull
mov
aam
and
stos
lahf
out
mov
sub
lods
out
iret
std
mov
dec
xorps
in
xchg
mov
lock
repz
popa
enter
xchg
push
adc
sub
mov
jae
fadds
in
dec
inc
push
add
jge
dec
mov
scas
push
mov
stos
mov
or
lock
loopne
inc
and
in
jbe
fists
test
incb
pop
rclb
rcr
mov
stos
sbb
mov
lcall
loope
adcl
sub
pop
outsl
loope
pushl
sub
add
mov
arpl
pop
out
lods
clc
push
insb
aad
jo
iret
insb
add
mov
roll
push
xchg
xor
aas
jns
fmul
pause
cwtl
push
push
mov
outsl
jl
gs
push
js
jg
inc
add
pop
icebp
cmp
push
sbb
push
mov
sub
test
test
imul
test
hlt
in
mov
imul
sub
testb
je
or
fs
sub
ss
cmp
repnz
sarb
mov
fidivl
filds
mov
mov
adc
imul
sbb
je
and
mov
sub
idiv
std
rcr
and
ret
cmp
push
dec
shlb
gs
fimull
les
and
mov
and
mov
add
das
xor
jle
lret
sub
addr16
pop
sbb
sbb
ljmp
dec
sti
fimuls
jmp
shrl
aad
lret
fldenv
and
pop
lret
mov
jno
or
mov
or
pop
inc
rorl
add
lcall
cmp
je
mov
in
add
lcall
inc
fisttpl
bound
iret
outsl
sub
ja
cltd
push
pop
cmp
push
push
and
cltd
cmp
pop
xor
add
fildll
dec
xchg
les
sub
sub
nop
ljmp
cmpsb
incl
jle
sahf
imul
jae
jecxz
out
xchg
arpl
cmp
ja
testb
add
neg
cmp
in
xor
dec
testl
pop
pop
or
fsubs
jle
mov
out
mov
jecxz,pt
subb
pop
pop
mov
stc
lahf
jb
arpl
lret
sub
jle
fsubs
or
cmp
add
sarl
sub
ds
xchg
pop
xor
adc
lds
in
push
push
sub
adc
xor
fldt
lcall
testb
pop
adc
push
js
add
mov
cmp
lahf
xchg
decb
je
mov
mov
add
aad
jecxz
cmpsl
adc
cwtl
mov
int3
in
cli
popf
jbe
push
xor
out
aas
test
or
and
dec
inc
movsb
ucomiss
jbe
lods
jo
cmp
xchg
add
mov
dec
pop
sub
sarb
or
cwtl
jmp
rolb
push
aas
imul
fcmovnb
xchg
inc
add
ds
sbb
adc
or
push
inc
mov
scas
jbe
and
int3
or
imul
mov
dec
jbe
sbb
repnz
loopne
or
clc
sbb
or
scas
push
mov
inc
pop
push
or
xor
sbb
scas
push
xor
cmp
push
test
pop
ljmp
inc
pop
mov
sub
test
hlt
xchg
adc
jge
xchg
or
faddl
repnz
js
mov
nop
or
popf
push
dec
pop
es
xor
sub
cmpsb
pcmpgtb
aad
and
es
movsb
xchg
enter
jnp
lods
push
pop
cmpsl
xchg
adc
mov
stos
pop
jns
or
ss
and
popa
jle
pushf
test
inc
cmp
add
push
mov
or
out
and
popa
aaa
aad
cmpsb
dec
mov
mov
inc
fldenv
and
lds
push
pushf
cmp
notb
movhlps
into
sbb
shrb
ret
pusha
cmp
out
mov
cld
xchg
iret
xor
ljmp
xor
pop
pop
test
stos
xchg
popf
jge
dec
mov
out
mov
iret
mov
pushl
stos
cmp
daa
in
xlat
aaa
mov
sarb
roll
nop
in
xchg
dec
xchg
fimuls
ds
mov
xchg
sub
xor
cmpl
cli
mov
dec
push
mov
imul
cwtl
loopne
sub
xchg
jmp
cs
ds
leave
aas
movsl
xor
xchg
jp
push
inc
decb
jbe
test
movups
add
xchg
jne
in
les
xchg
push
nop
adc
jno
andb
xchg
orb
push
mov
jmp
mov
and
addr16
adc
insl
sti
sub
mov
insl
rorb
jae
loopne
pop
inc
rcr
xor
sahf
push
stc
test
xor
in
cmc
jae
insb
rorl
mov
mov
mov
icebp
jae
sub
movsb
sbb
insl
nop
je
jo
inc
es
shlb
inc
xchg
cld
bound
cltd
lods
push
sub
mov
clc
out
dec
loopne
xchg
sub
aaa
int3
jnp
or
iret
rcrl
jns
adc
lcall
mov
and
push
lahf
lds
jo
ljmp
mov
negl
adc
jbe
repz
lock
jge
jb
mov
cwtl
call
mov
orb
std
mov
out
data16
or
push
rcl
lods
out
sbb
mov
aad
mov
pop
push
pop
or
pop
mov
dec
ds
push
push
or
sub
dec
mov
inc
loop
jbe
lock
push
add
pushf
ficompl
and
dec
mov
lcall
adc
xchg
leave
jge
jl
pop
stos
xchg
xchg
stos
cmp
emms
in
mov
out
adc
aad
out
inc
stos
jns
sti
jns
push
adc
jge
adc
cmpsb
jne
jle
sahf
lods
in
sbb
inc
scas
add
jb
iret
and
in
aas
mov
push
xchg
mov
dec
and
aaa
inc
or
adc
call
adc
in
iret
and
test
test
inc
sbb
int3
xchg
sub
mov
es
dec
dec
fdivs
in
mov
mov
pop
mov
push
xlat
mov
movsb
cmp
mov
sub
and
mov
jle
inc
sub
push
mov
mov
add
add
ret
push
jae
push
negl
js
scas
dec
pop
jecxz
inc
loop
sub
mov
lock
pop
mov
mov
push
mov
ret
into
repz
add
outsl
loope
jp
push
dec
mov
or
arpl
cmpsl
sub
adc
xor
xor
sbb
push
jmp
sbb
cmpsb
mov
js
pop
cltd
or
jnp
mov
lcall
jmp
loop
cld
sbb
mov
add
push
enter
push
jnp
sbb
dec
icebp
jb
jb
mov
lds
ljmp
pop
imul
pop
out
mov
add
notb
mov
cltd
insb
mov
pushf
sub
movaps
pop
js
or
push
in
aam
lods
mov
xor
mov
mov
mov
and
push
cli
jns
adc
add
push
addl
xchg
fsubs
and
ret
stos
ret
mov
shll
orl
lret
sbb
add
cmp
test
push
fs
fdivl
clc
test
call
shl
sub
test
jecxz
rorb
aad
adc
loop
sahf
stos
repz
imulb
and
xchg
xchg
movsl
push
subb
or
shll
inc
enter
inc
push
or
frstor
sahf
mov
jbe
ja
stos
inc
int3
arpl
mov
ret
mov
pop
aaa
incb
push
jmp
xchg
rorb
movl
in
hlt
mov
sarb
xchg
cwtl
out
mov
and
ss
mov
dec
scas
add
or
xchg
dec
or
dec
add
add
xchg
shlb
mov
sbb
pusha
lret
adcl
popa
lret
das
mov
jb
inc
sbb
movsl
test
sbb
jmp
add
inc
out
mov
movsl
mov
ret
out
jo
mov
adc
gs
jno
add
mov
cmp
rclb
cs
sarl
add
sub
xchg
testl
dec
jae
cmp
hlt
outsl
push
push
cli
adc
ja
jp
or
aad
mov
ds
cltd
insl
das
popa
je
dec
jl
pop
dec
xorl
hlt
jecxz
cmpsl
xor
inc
scas
xchg
mov
popa
xchg
stc
add
loopne
pop
decb
dec
aad
jne
cmp
adc
push
ja
adc
lret
push
fld
fdiv
je
inc
add
mov
ret
inc
push
cmp
loopne
iret
dec
sbb
adc
push
jno
insb
mov
out
mov
hlt
mov
jb
jecxz
mov
dec
mov
insl
lcall
pop
mov
and
mov
mov
dec
jp
push
fwait
pushf
std
jg
inc
pop
aaa
in
xchg
jae
push
add
mov
inc
out
mov
pop
cmc
push
jbe
ret
cmp
gs
outsl
hlt
out
popa
mov
out
cmp
leave
push
aad
fisubrs
mov
sub
test
mov
pop
jg
sti
ret
test
xchg
inc
dec
xchg
rcr
hlt
inc
add
test
sub
pop
push
fwait
test
jno
movb
arpl
and
pop
popa
jp
adc
repnz
add
or
cmp
aam
mov
in
lahf
cmpsl
jge
test
mov
imul
loope
fsts
mov
or
test
cwtl
sahf
nop
aam
cwtl
stos
dec
mov
mov
jecxz
push
sub
mov
ss
mov
pop
mov
test
loop
pop
mov
les
pushl
fists
add
imul
std
mov
push
outsb
stc
xor
add
or
incl
dec
lock
jne
lods
sbb
scas
or
lret
dec
insb
rcr
pop
out
pop
out
aad
xor
scas
fdivrl
sub
xchg
imulb
lret
adcb
cmp
sti
int3
fcoms
mov
push
xorb
pop
pop
push
pop
inc
dec
test
ds
and
out
shl
cwtl
push
in
sti
push
sub
and
int
inc
mov
dec
shrl
pop
cmpsl
loope
lret
pop
rcrb
popf
adc
outsb
lret
lock
xchg
adc
popa
pop
int
pushf
sar
mov
stos
mov
call
fmuls
lcall
lods
cli
push
sub
lahf
sbb
jge
pop
ds
inc
dec
std
push
jg
mov
cmp
sub
ss
cmp
ret
pusha
pop
icebp
jns
dec
jecxz
add
jo
das
add
cwtl
fucom
fldenv
fwait
and
subl
mov
mov
inc
and
mov
iret
cltd
sbb
or
je
sbb
jbe
ljmp
jmp
hlt
sahf
jae
jae
int
fldl
inc
lds
fs
jp
adc
xchg
xchg
repz
loopne
jnp
push
enter
or
pop
insl
cmp
mull
icebp
addb
loope
mov
imul
mov
sbb
mov
outsb
or
cld
xchg
test
mov
imul
fs
xor
jno
mov
ficoms
hlt
outsl
dec
mov
adc
lds
mov
jg
cmpl
stc
in
inc
add
mov
jo
inc
pop
ja
mov
jmp
sub
loop
fdivr
mov
sub
hlt
push
outsl
test
pop
add
idivl
mov
inc
xor
sub
subb
mov
push
mov
faddl
sub
mov
in
fucomi
push
cmp
add
es
xor
inc
cmp
ds
out
jne
out
lret
jmp
cmp
inc
xchg
push
fistpl
loopne
jmp
and
and
shll
jp
scas
sbbb
xor
sti
fst
pop
mov
aam
pop
int3
fildll
stos
cmpsl
imul
cmpsb
inc
jl
mov
cmp
sarl
cwtl
out
mov
and
sbb
push
cmp
popa
movb
mov
nop
lock
test
cmpsb
adc
les
sub
xor
das
sahf
or
mov
jecxz
nop
mov
cld
scas
pop
cmpsb
hlt
xor
mov
arpl
iret
xchg
pop
fcompl
push
lds
mov
sub
jmp
pop
mov
sub
popa
out
loope
xor
icebp
cmpsl
lahf
hlt
fdivl
inc
bound
push
pop
mov
out
push
mov
cmpb
inc
cmp
scas
xor
mov
insl
addb
shrb
mov
push
pop
adc
data16
pop
std
test
sbb
outsb
or
loopne
push
cmp
jecxz
sub
rorl
mov
test
out
sbb
pop
std
adc
in
in
enter
add
or
push
mov
push
adc
mov
pusha
adcl
pop
sub
pop
push
lods
sbb
push
clc
jb
dec
lret
rcll
and
and
pop
push
jmp
xor
inc
mov
shl
sets
sub
mov
leave
adc
movsb
mov
lcall
mov
inc
aam
lret
xor
test
add
cwtl
cmp
out
mov
mov
dec
jl
and
roll
in
pop
mov
stc
clc
pushf
call
call
lock
xchg
and
pop
shrb
push
adc
lahf
xchg
int3
popa
lcall
in
in
pop
push
idivl
dec
stos
mov
das
adc
scas
cmp
sti
xchg
fistpll
mov
mov
repnz
cmp
leave
sysenter
xorl
gs
or
ja
adc
mov
pop
jbe
in
ficoml
pop
cwtl
push
pop
inc
add
mov
je
ret
jp
insb
in
xor
shlb
xlat
into
int
mov
xlat
icebp
jae
cmp
imul
sbb
jnp
mov
enter
jnp
fstps
push
in
mov
std
mov
out
cli
mov
aad
ja
and
les
adc
pop
in
sbb
mov
push
jl
cmpsb
cmp
adc
mov
mov
out
cmp
imul
bound
lock
gs
mov
outsl
jb
and
cli
xchg
mov
iret
xchg
bnd
arpl
and
xor
push
aaa
and
movsb
mov
lcall
push
pop
mov
pop
cmp
mov
ret
jae
nop
jl,pt
xor
cmp
push
loopne
fiadds
jmp
out
mov
shlb
aam
out
lea
inc
dec
sbb
stos
jnp
ja
in
loopne
pop
mov
scas
pop
and
test
fsubs
test
jg
jl
adc
mov
cmp
cli
leave
xchg
mov
jns
dec
jp
iret
ffreep
cmc
jmp
pop
push
pop
jle
aam
call
xor
cmpb
mov
int
pop
cmp
test
call
push
fimull
pushf
addr16
sbb
or
mov
mov
cwtl
hlt
inc
popa
mov
push
loope
das
scas
mov
and
std
fildll
push
cmpsl
push
test
rclb
std
cmc
xor
pusha
repnz
sbb
jecxz
call
xchg
xchg
scas
shll
sbb
jmp
cld
xor
cmpsb
pop
out
test
dec
push
add
fadds
mov
push
sbb
sub
mov
scas
dec
or
mov
pop
dec
push
int3
ss
mov
leave
pop
rcrl
cld
push
loopne
es
clc
cmpsb
mov
sub
and
lea
leave
scas
mov
and
repz
arpl
sub
jl
lcall
iret
pusha
jne
sub
fs
cld
mov
bound
out
sbb
test
cmp
push
mov
cmp
dec
mov
out
add
jmp
push
sbb
cs
sub
xorl
and
xorb
rolb
repnz
data16
outsl
or
ret
in
inc
imul
pop
dec
dec
xchg
mov
jg
jb
test
fisubrs
cmp
pushf
push
and
inc
stos
dec
mov
sbb
repnz
mov
xlat
in
sbb
jae
push
lods
gs
cwtl
cmc
push
push
push
inc
mov
lret
ss
xchg
cs
sbb
pop
jbe
push
adc
sbb
sub
or
push
cld
cmpsb
insb
dec
push
xchg
decb
and
ss
orb
mov
sbb
push
shrl
or
sub
lret
mov
mov
pop
insb
lods
mov
cmpsb
pop
lret
sub
push
or
addr16
adc
mov
dec
ret
bound
ljmp
mov
dec
gs
jg
inc
fsubrs
xchg
adc
icebp
sbb
pop
adc
fdivrl
outsl
shll
push
fdivrs
sbbb
dec
add
scas
scas
cmpl
test
dec
cmp
jno
jbe
xchg
xor
data16
dec
push
sub
sbb
sub
mov
int
push
mov
pop
xor
dec
in
pop
pop
xor
stos
clc
divb
push
add
pop
or
in
sbb
addr16
das
clc
sbb
shrb
shlb
push
lods
outsl
jmp
mov
pop
cmp
mov
or
imul
xchg
xchg
mov
add
and
test
xor
mov
int
dec
lret
cmp
rorb
or
xchg
cld
xor
loop
xchg
movsl
lahf
iret
or
and
sub
sahf
loop
loop
push
negl
pop
xor
add
ja
push
sahf
xor
pop
test
testb
lods
dec
mov
adc
sti
jb
js
dec
daa
insl
jae
scas
jmp
pop
inc
jecxz
mov
xor
add
fsincos
in
mov
inc
xchg
ret
sbb
out
and
push
out
cmp
imulb
gs
mov
int
sbb
les
fiaddl
jbe
push
xchg
adcb
ljmpw
aas
and
lods
call
out
inc
add
rcrb
push
outsl
inc
adc
cmpb
dec
adc
scas
xchg
out
mov
enter
dec
xchg
fiaddl
or
popf
xchg
int
repnz
pop
sub
push
jbe
test
mov
ds
jmp
popa
popa
cli
fcmovu
cmpsb
jecxz
movsb
dec
inc
pop
cld
pop
movsb
in
add
inc
and
fiadds
pop
rclb
dec
and
sbb
or
outsb
outsl
je
mov
stos
or
pop
pop
int3
xor
stos
xchg
ret
rcrl
fs
cmpl
fcmovu
sbb
mov
sub
or
or
leave
aaa
push
xor
fistpll
jl
mov
scas
aaa
int
pop
aad
pushf
je
sbb
loopne
aam
mov
mul
inc
jae
or
ret
jno
test
fldcw
cwtl
jmp
test
roll
test
sub
sbb
push
notl
and
insl
xchg
imul
pop
aad
or
or
dec
xor
mov
mov
dec
subb
dec
xorl
mov
popf
arpl
aas
xor
pop
inc
add
xor
inc
std
outsb
jge
mov
mov
out
and
movsl
dec
enter
pop
add
mov
enter
xchg
cmp
adc
jae
and
test
out
jb
xchg
lods
cmp
es
or
cmp
je
fimull
cmp
adc
push
jbe
int
ds
test
shlb
push
int
stos
int3
lret
jg
cs
lods
icebp
xchg
xchg
mov
jnp
ds
sub
sbbl
sbb
xor
inc
scas
gs
iret
xor
mov
mov
jo
xor
dec
out
push
popf
and
sbb
int
insb
fucomi
loop
mov
fisubl
lods
into
xor
mov
mov
arpl
or
into
mov
stos
cmp
aad
mov
loopne
es
lods
bnd
add
xchg
mov
mov
adc
xchg
cmpsl
fcoms
rorl
sub
push
fst
pusha
test
popa
and
popf
bnd
add
iret
mov
cmc
aad
pop
dec
divb
sbb
sbb
mov
sub
push
or
sti
mov
popf
iret
sub
int3
jge
hlt
outsl
mov
mov
pop
jae
add
and
std
push
cmpsb
adc
in
sub
out
js,pn
push
xor
jbe
jg
fisttps
dec
lcall
std
arpl
stos
es
out
or
sub
cmpsl
sbbb
incl
fsubs
cld
loopne
sub
movzbl
push
movsb
xchg
movsl
nop
mov
mov
xadd
push
push
sub
sahf
lods
data16
stos
jno
and
inc
sti
mov
testl
daa
movsb
jg
mov
rcl
dec
rcr
and
cmp
cmc
jge
andl
test
lret
clc
int
sub
enter
icebp
fs
pop
cmp
adc
cmp
jns
xchg
fsubs
push
sti
scas
orl
pop
push
daa
and
ja
mov
pop
mov
imul
inc
in
into
push
sbb
out
es
sbb
inc
push
sbb
insl
outsb
mov
jno,pt
fsubl
lret
scas
xchg
sbb
push
fdivs
flds
inc
add
xor
cmp
adc
and
pushf
mov
clc
dec
xor
out
pop
xchg
push
jp
inc
sarb
outsb
cmc
xor
incl
xchg
push
outsb
lcall
fadd
push
inc
cmp
push
xchg
incb
int3
push
ror
and
sbb
xor
adc
lods
pop
xor
pop
sti
ja
aad
enter
mov
out
iret
test
fstl
sbb
sbb
sbb
push
jecxz
mov
mov
mov
dec
pop
popf
prefetch
or
mov
stos
mov
sbb
andl
gs
push
xorb
cmp
xchg
mov
jae
push
add
push
mov
xor
mov
mov
add
shll
fcomps
or
psubd
popa
adc
push
jmp
mov
mov
or
sbb
ret
test
aad
sub
fldt
aaa
out
fwait
push
xor
jno
cmpsb
scas
cmp
aas
mov
stc
inc
jbe
mov
cmp
or
into
and
or
orl
mov
jle
adc
xchg
repz
je
mov
xchg
jmp
pop
pop
shrb
pop
mov
fistpl
mov
mov
imul
lahf
mov
cmp
sbb
adc
faddl
and
scas
jge
adc
jge
xor
fimuls
and
xchg
outsl
je
repnz
lods
jbe
aad
dec
and
repnz
test
icebp
mov
push
xchg
pop
js
pop
outsl
imul
stc
mull
ficompl
addr16
cmc
cltd
out
cmp
xlat
out
and
jnp
je
mov
aad
ljmp
jle
test
push
sbb
dec
mov
dec
std
out
mov
dec
addr16
mov
inc
adc
mov
stc
cmpsb
imul
push
cmp
mov
cmpl
cmpsl
lock
mov
jge
inc
cmp
icebp
jle
sub
sub
sbb
sub
clc
cmp
in
cmpsl
xchg
mov
icebp
sub
and
cmc
jns
fsubl
lds
jp
test
pop
xchg
push
pop
call
sbb
bound
sarb
push
sbb
adc
xchg
sub
test
xor
mov
movntps
daa
out
les
fnstsw
jge
xor
fisubrl
in
xor
movsb
inc
pop
sub
push
mov
fnstenv
leave
cmp
outsl
out
and
sbb
adc
pop
inc
imul
xchg
in
jecxz
add
inc
jge
dec
shlb
es
sub
aaa
jmp
or
jl
sub
aam
lahf
mov
shrl
aaa
fs
ja
pop
add
xor
ficoms
jl
enter
add
mov
or
xchg
xchg
pop
and
lahf
xor
inc
xlat
mov
sbbb
jle
pop
inc
sahf
aad
dec
dec
and
xlat
and
fsubs
repnz
repnz
fldl
xor
ljmp
ljmp
stos
std
orl
inc
jno
int
sub
aad
mov
push
cmp
adc
cli
mov
in
fsts
cmc
mov
jle
icebp
stc
cmpsb
mov
pop
xor
xchg
mov
ljmp
cmpsl
xor
insl
mov
mov
lcall
xlat
loopne
pop
dec
cmpsl
stc
inc
push
cmp
hlt
mov
mov
cmp
adc
lea
or
pop
fwait
push
jbe
fistpll
scas
jmp
popa
mov
fwait
jl
and
fiadds
push
outsb
movsl
lret
sbb
loopne
dec
ja
mov
ret
rcrl
cmpsl
cli
push
cmp
ds
push
aad
pop
out
add
xchg
ds
je
mov
push
fs
aad
pushf
aam
icebp
or
xor
xor
inc
dec
lods
shr
sbb
inc
fwait
inc
enter
dec
lods
jl
adc
sbb
or
cld
xchg
mov
pop
sub
mov
jecxz
add
or
xor
sti
sbb
mov
xchg
insb
test
lret
sarb
add
jecxz
xorl
divb
cs
lcall
mov
push
mov
inc
fwait
sarb
add
test
mov
loop
push
movsl
arpl
sub
cmc
aam
enter
in
sub
sbb
pop
push
sti
dec
mov
adc
xchg
push
stc
or
jbe
faddl
add
jns
jge
pop
push
adc
dec
jg
es
push
jnp
sarl
jne
repnz
neg
sbb
sbb
inc
subb
dec
mov
subb
or
test
mov
aaa
mov
aaa
mov
fstp
lock
xor
add
inc
sti
lods
out
pop
adc
mov
sar
push
enter
xchg
jo
outsb
ret
sbb
inc
aas
nop
inc
call
and
xor
pop
mov
test
mov
es
mov
lods
into
jl
inc
pop
into
leave
cmpsl
jmp
insb
push
xor
ja
lret
add
ljmp
inc
les
push
sub
or
xchg
fadds
iret
push
lods
xchg
call
scas
xorb
adc
jo
jns
scas
xchg
mov
dec
or
outsb
sahf
fwait
loopne
sarb
xchg
mov
and
pop
loop
adc
mov
sub
and
ljmp
sti
repz
or
stos
ret
repnz
cmpsl
xor
push
cmpsb
rcr
repz
loopne
xor
mov
cmp
push
pushf
jae
cmp
jbe
testb
in
cwtl
cmp
jno
dec
and
push
jmp
mov
outsb
pop
mov
rcrb
rclb
inc
int
fldt
sbb
arpl
dec
loope
shrl
add
js
mov
push
mov
xlat
movsl
mov
cmp
mov
push
fcoms
in
popf
jp
sbb
mov
fdivrl
inc
adc
xchg
mov
nop
ja
scas
lods
add
sub
push
dec
and
push
jecxz
outsl
mov
cld
mov
xor
xor
je
fsts
lds
into
aam
jle
dec
lcall
sub
shll
daa
repz
cmp
xchg
test
or
andb
push
lcall
add
add
sub
jmp
push
mov
rorl
cmp
pop
js
daa
shlb
jne
mov
outsb
fs
mov
cmp
adc
sbb
pop
test
call
mov
push
xor
sub
clc
scas
lret
jmp
adcb
dec
jle
decl
adcb
add
loop
cmp
lcall
lea
sbb
jno
test
lock
popf
add
push
xchg
sbb
imul
lcall
xor
mov
cmp
xchg
cmp
shlb
lods
mov
push
jle
mov
adc
out
je
mov
sbb
jg
mov
inc
imul
dec
mov
aam
je
and
sub
push
cmp
mov
add
insl
arpl
scas
loopne
xchg
je
cmc
movsl
fwait
in
and
mov
xchg
std
jge
push
jno
mov
addr16
ret
dec
pop
cwtl
shlb
and
jnp
outsl
ret
and
in
or
push
inc
lret
inc
in
ret
in
adc
dec
xchg
loop
lea
jno
int
gs
xor
inc
cmc
xor
in
xor
mov
add
lcall
dec
ret
sarl
iret
aam
jge
lcall
rcr
stos
movsb
and
inc
push
rcll
mov
mov
cli
inc
sub
jno
test
js
push
add
jle
sbb
repz
xor
or
sub
cmpsl
inc
daa
lahf
sub
and
mov
lds
lea
loop
fdiv
xor
cli
dec
pop
or
cmc
push
sbb
pop
fsubp
rclb
outsl
inc
mov
inc
shrb
mov
rorl
out
sub
cli
daa
out
cld
jl
cmp
mov
add
jge
out
mov
pop
mov
jl
cmp
mov
xor
pop
mov
xor
mov
xchg
std
test
repz
aaa
or
jp
negb
jg
addl
cmc
sbb
insl
jp
mov
mov
sbb
push
dec
jae
mov
cli
rorl
mov
jae
pop
xor
aad
ret
push
inc
xchg
inc
in
mov
jecxz
aad
dec
cli
out
imul
push
les
xchg
add
insl
mov
cmp
rorb
adc
fsubl
das
push
xchg
mov
and
call
xor
iret
lcall
fdivs
mov
out
sbb
cs
push
mov
aaa
imul
dec
sbb
imul
ds
das
shlb
mov
and
add
pop
xchg
xor
sub
xor
pop
add
cmpsl
adc
adc
test
mov
shlb
push
dec
mov
push
aaa
push
jg
xchg
test
sub
dec
scas
enter
sbb
pop
inc
xchg
int
adc
lcall
xchg
daa
sub
lock
jp
aam
bound
pop
inc
push
sbb
push
lret
clc
xchg
dec
mov
test
jnp
loop
fcomps
mov
cmpsl
pop
mov
repz
cmpsb
add
cs
adc
adcb
rcll
sahf
out
ljmp
sub
imul
std
jnp
lea
daa
cmp
add
push
dec
cmpsl
gs
ljmp
mov
mov
test
stc
jno
arpl
clc
cmpsl
fmul
jo
dec
sbb
sysenter
es
xchg
adc
and
pop
sbb
aas
subl
sbb
aas
and
ret
lret
jo
jmp
ret
dec
mov
pop
popf
sub
shl
ss
jno
ds
and
mov
inc
inc
test
sub
into
push
mov
adcl
icebp
fadd
xchg
push
add
inc
ret
mov
test
pusha
jge
cmpsl
dec
leave
add
jno
test
scas
aas
imul
rcrl
xchg
dec
inc
adc
xor
jge
mov
push
xchg
insl
dec
mov
out
mov
sbb
push
xchg
in
xor
add
call
aad
mov
and
insl
mov
ja
fcomp
dec
xor
xchg
scas
mov
and
fstps
fwait
loope
int
xor
shll
or
dec
jbe
adc
inc
sbb
ds
and
inc
push
int
mov
dec
pop
repnz
dec
outsl
ret
jecxz
fisubl
jp
or
sbb
lods
push
dec
mov
sbb
lret
insl
pop
sub
aam
stc
jg
nopl
sub
or
repnz
pop
xchg
push
fidivl
push
xorb
inc
subb
add
jnp
and
pop
repz
test
dec
mov
aaa
add
mov
orl
test
adc
hlt
lock
pushf
inc
mov
add
sbb
mov
mov
fmul
push
pop
in
fistps
sbbl
dec
adc
jbe
repz
jmp
jo
mov
scas
ljmp
ret
pop
or
scas
add
inc
hlt
jnp
mov
mov
mov
out
das
dec
fs
aam
stos
mov
fs
jg
andl
cli
test
pop
outsl
mov
aas
stos
stos
cmp
sbb
jmp
add
adc
std
adc
and
dec
lock
insb
mov
add
push
inc
lret
scas
dec
mov
movsb
xchg
dec
into
sbb
add
mov
addb
nop
sub
mov
pusha
lock
idiv
out
pop
int
push
cmp
sar
pop
cmp
into
fbld
xchg
sarb
test
and
out
subb
mov
cmc
adc
outsb
xor
mov
cmc
dec
inc
loopne
sub
push
ja
scas
imul
insl
xchg
insl
inc
cmp
in
sbb
test
pop
mov
pushf
xchg
sbb
jg
gs
add
jmp
lea
and
mov
xor
popa
cld
cmpsl
sub
cmp
jmp
shrb
sub
jg
jg
fisubrl
sub
pusha
and
dec
imul
cmc
aam
add
rcr
sub
andl
inc
lret
mov
imul
jl
outsl
loopne
sub
out
pop
lods
scas
xchg
je
lock
fmuls
jno
push
xchg
cmp
sbb
xchg
add
jbe
xchg
shl
je
lds
ja
adc
sbb
cmp
cmpsb
add
pop
repz
cmp
add
shr
inc
or
cmpsl
clc
lea
outsl
jl
insl
cmc
fistl
out
adc
jns
push
dec
fsubs
and
lods
hlt
jge
or
or
movl
es
or
or
fnstsw
mov
shlb
repz
mov
pop
sbb
lahf
mov
sbb
or
xor
out
adc
movsl
imul
das
inc
mov
dec
push
in
pop
shrl
fdivrl
inc
imul
xor
mov
dec
mov
cmc
xlat
cld
mov
adc
jae
push
or
cmp
imul
ljmp
cli
sub
sbb
ret
adc
arpl
dec
xchg
clc
test
out
adc
xorb
add
cmp
cmpsl
aaa
xchg
pop
mov
push
add
pop
lret
add
and
and
scas
pop
lods
inc
pop
pushf
xchg
jno
jb
repnz
pop
cltd
jo
mov
movsl
stos
and
mov
push
jge
addl
mov
std
mov
cli
mov
fs
add
imul
cli
js
loope
jbe
stos
pop
test
add
dec
inc
in
bound
dec
ret
inc
adc
test
xchg
jae
test
cmp
jecxz
cmp
cs
inc
xor
aas
push
out
dec
std
lds
enter
inc
cs
cmp
nop
iret
add
leave
push
iret
or
bound
lret
sub
ret
pop
dec
add
mov
mov
push
out
cmp
or
xor
mov
jno
fcmovbe
popf
adc
jb
stos
cli
in
sbb
or
mov
lahf
cmpsb
cmp
xor
pop
dec
push
js
and
stos
mov
jle
mov
pop
mov
add
lods
xor
cli
fisubrs
in
lret
sub
lahf
lea
insl
iret
fidivrs
out
es
cld
cmp
xor
cmc
frstor
mov
repnz
cmpsb
xchg
cmpl
repz
decl
or
divl
and
out
ror
fucomp
jae
jge
ret
add
xchg
sub
dec
sahf
dec
das
mov
jno
and
xchg
lea
test
insl
dec
mov
xchg
mov
dec
pop
jb
adc
data16
dec
lock
fwait
enter
fildl
cmp
bound
out
leave
test
fsts
test
std
mov
and
jno
xchg
lea
imul
test
shrb
addl
rcr
mov
mov
outsl
shlb
adc
fcomps
out
dec
sub
int
cli
mov
mov
cld
out
push
adcb
mov
scas
popf
cmp
cmpb
hlt
sbb
fsts
scas
fsubrp
fisttpl
mov
dec
mov
pushf
shll
ds
in
lods
dec
jmp
sub
cmp
lret
les
popa
ljmp
xor
dec
scas
idivb
lret
into
push
loopne
jbe
aam
sbb
jb
jp
add
xor
fsubp
aas
imul
lods
das
adc
out
cli
aad
ljmp
in
jecxz
sub
test
jmp
cmp
cli
jo
rcl
rcrl
mov
xor
in
xchg
push
and
daa
push
jo
pop
int
ss
std
mov
call
jno
or
jp
jmp
std
insb
mov
pusha
pop
jns
push
mov
mov
pop
or
das
jns
idivl
lds
push
jge
sbb
mov
add
sub
inc
popa
sub
cld
lret
out
or
sahf
lods
adc
ficoml
cmpsb
arpl
inc
lret
cmp
leave
or
mov
push
fistpll
sub
or
jg
jbe
lods
rorb
jnp
call
push
out
mov
sub
jbe
cmp
lods
fidivrs
pusha
mov
mov
mov
push
pop
jmp
testb
jp
mov
push
imul
aad
sbb
cmp
mov
and
mov
ss
insl
punpcklwd
out
mov
les
aas
mov
sti
pushf
int
ret
pop
pop
jp
push
inc
jb
call
in
sbb
daa
out
push
lea
sbb
enter
push
lcall
xchg
or
xchg
icebp
cld
es
sbb
push
shrl
mov
xor
mov
mov
cmp
inc
push
mov
dec
ja
inc
lret
in
jne
mov
mov
inc
mov
rorb
mov
fldenv
repnz
pop
jno
fnstcw
sbb
pusha
pop
xor
jbe
test
pop
and
aaa
outsb
cmp
push
roll
mov
cltd
ret
enter
push
movsb
adc
test
pop
push
mov
lea
push
or
inc
out
push
lods
lret
cmpsb
loopne
inc
or
push
mov
inc
dec
add
scas
and
dec
cmc
cmpsl
and
jle
scas
mov
imul
ja
test
add
jecxz
lods
js
fistps
sbb
jns
repz
sbb
sbb
jb
xor
nop
fldt
cmpsb
push
mov
sbb
cmc
and
lds
cmp
call
lock
test
in
movsb
shrb
scas
and
push
inc
cmpsb
addr16
cli
pop
movsl
xor
or
mov
fidivs
mov
lock
je
and
inc
and
mov
pop
cmp
xchg
fisubs
test
das
xchg
movsl
mov
test
adc
mov
fisttps
push
xor
or
sbb
pop
cmp
aas
push
pop
push
push
xor
inc
mov
push
jl
sbb
lahf
ds
aad
xor
inc
cs
dec
ds
jae
fistl
fsubr
cwtl
adc
mov
push
or
lods
movsl
sahf
testl
xchg
mov
jle
adc
lret
mov
enter
jbe
lcall
jp
and
pusha
jp
mov
mov
cwtl
dec
add
cld
inc
xlat
lods
add
sub
fisttps
das
insl
sbb
lea
adc
xchg
aaa
ret
push
fisttpl
jl
push
cmpsb
lods
loopne
fcomip
jecxz
aas
stos
inc
or
pushf
adcl
push
xor
jg
xor
aas
mov
jae
cli
adc
sub
mov
and
push
push
cmc
out
nop
daa
xchg
je
cmpsb
js
js
lahf
push
add
xchg
out
jg
push
out
mov
dec
xlat
jle,pn
test
mov
loop,pn
stc
or
dec
inc
adc
lcall
jge
xchg
imul
mov
sbb
enter
jbe
mov
push
mov
arpl
add
fimuls
inc
dec
or
shrb
scas
fisttpl
mov
xor
jnp
adc
lret
data16
jb
xchg
sbb
mov
xchg
jl
jo
xchg
push
js
mov
and
pop
pop
pop
mov
hlt
repnz
push
and
inc
dec
push
rclb
push
lret
mov
jnp
pop
jle
addr16
push
int
and
cs
or
pushf
mov
push
out
pop
stos
pop
push
push
lahf
cmpsl
ret
inc
adc
and
lods
scas
push
hlt
jae
cs
test
sub
imul
mov
push
xor
insb
jg
cmp
jp
pop
pop
mov
xchg
ljmp
jmp
loope
xchg
jle
or
push
inc
pushf
in
outsl
cmpsb
stos
aaa
xor
xorb
push
and
add
adc
sbb
xlat
and
fidivrl
pop
std
sub
pop
iret
scas
rclb
jbe
popa
lcall
lret
xor
pushf
lcall
imul
or
mov
ficoml
pop
adc
adc
mov
mov
and
les
aad
mov
inc
inc
fidivrs
mov
sbb
inc
in
in
subl
arpl
or
mov
ret
pop
jg
push
mov
imul
fistps
bound
das
cld
lock
cs
xor
in
and
or
sbb
hlt
xchg
idivb
jnp
mov
push
xor
call
das
inc
dec
lahf
imul
add
fwait
mov
out
pop
mov
iret
sbb
in
shl
int
push
cmp
cmpb
push
pop
dec
adc
sub
sub
and
test
loope
mov
xor
mov
jb
roll
jbe
repnz
in
cld
cwtl
call
pop
push
scas
jnp
ret
icebp
addr16
outsb
mov
outsl
jmp
add
jge
int
add
and
mov
sti
add
and
fmuls
fisubrs
mov
mov
lds
push
aaa
aad
out
dec
enter
push
enter
inc
sbb
jle
lds
mov
in
push
jo
xchg
add
sbb
cld
mov
int
test
fdivrs
in
shrl
rcll
push
pushf
fbstp
enter
nop
test
pop
pop
andl
mov
add
add
sysret
lock
lods
add
jmp
test
inc
mov
cs
pusha
outsb
sbb
stc
add
cmpsb
insb
iret
mov
push
adc
frstor
push
int
inc
inc
sub
or
in
call
shrb
mov
into
inc
mov
push
sub
cmp
aaa
jge
ror
or
enter
aas
pop
ds
pop
dec
aam
mov
icebp
or
jae
lret
es
shl
push
scas
neg
cmc
and
dec
lods
jb
test
sub
push
movsb
popa
mov
jecxz
mov
mov
dec
rcrb
mov
or
jb
sub
push
frstor
inc
mov
or
sbb
ja
mov
dec
sar
or
ljmp
and
in
jmp
push
pop
aam
cld
cmp
inc
sbb
jb
mov
adc
les
xor
mov
dec
lock
lahf
aam
test
bound
and
dec
dec
xor
sub
fadds
mov
dec
and
mov
stos
sub
bound
rep
add
andb
lahf
sbb
icebp
mov
and
pop
jl
pop
stos
mov
into
out
jb
je
std
test
pop
cli
and
shll
aas
or
and
mov
dec
jl
repnz
jmp
xchg
jecxz
xor
gs
repnz
aad
loope
inc
addr16
dec
dec
push
roll
jbe
cltd
fnstcw
cmpsb
out
xor
inc
jle
decl
dec
fistpll
pop
les
sahf
call
mov
ss
jns
xor
inc
call
cmc
pop
and
loop
bound
lock
dec
je
fmuls
mov
fcompl
mov
scas
lods
inc
xchg
add
movsb
movsl
xchg
mov
pop
rolb
andl
call
xchg
fidivs
test
xchg
imul
jo
and
adc
leave
xchg
sub
mov
pop
xchg
or
and
inc
leave
mov
push
xchg
mov
xchg
aaa
call
fdiv
subb
cmp
add
lcall
dec
jg
outsb
std
pop
mov
or
xor
mov
jbe
xlat
add
sbb
mov
ss
inc
jae
jp
into
fldl
cmp
add
sbb
dec
test
in
xchg
mov
imul
aad
and
mov
pushf
pop
cltd
xchg
rorb
adc
inc
jle
jg
jl
dec
stos
daa
sahf
cmp
aam
add
and
pop
insl
stos
stos
out
iret
pop
and
and
rcll
mov
inc
fwait
call
in
adc
std
adc
cmp
ret
push
into
ss
das
mov
dec
or
ret
push
and
lock
loop
pop
jb
add
sbb
jecxz
dec
fs
add
stos
lret
ds
bound
repz
xchg
repz
fdivrl
mov
shll
lods
jge
lods
pusha
xor
dec
adc
fdivl
pusha
ret
add
das
and
out
push
inc
mov
int3
sbb
ds
movsl
ss
xchg
dec
lret
jb
jno
inc
fdivs
mov
mov
sti
out
les
fst
pop
cld
mov
dec
lahf
fs
sub
popa
xor
mov
stos
jnp
add
outsb
icebp
ljmp
push
maxps
xchg
test
bnd
js
pop
test
mov
imul
sbb
adc
push
xchg
inc
mov
pop
sbb
or
and
ds
icebp
push
xor
call
dec
sbb
fidivs
xchg
xor
xchg
and
dec
cmp
add
xor
inc
add
or
test
pop
lods
mov
push
scas
lea
fsubl
xchg
jns
ds
add
or
cli
mov
in
mov
cmp
push
xchg
add
aaa
pop
daa
jbe
fs
inc
cwtl
cmp
xchg
xlat
xchg
sub
mov
sbb
push
cmp
jecxz
mov
out
repnz
insl
mov
popf
cli
push
cmp
sub
in
aam
std
xchg
bound
bnd
pop
xor
xchg
adc
xchg
outsl
pop
and
sahf
mull
push
pop
pusha
pop
inc
sbb
mov
mov
sbb
int
test
lcall
add
in
sar
mov
test
daa
xor
into
mov
ss
lcall
cmpsl
cmp
add
mov
pusha
pop
cli
stos
imul
aas
jns
in
dec
push
mov
int3
fsubs
mov
add
mov
fdivr
and
dec
stc
repnz
xchg
dec
mov
xchg
inc
call
in
imul
inc
popf
dec
jle
jg
lods
cmp
loop
cmpsb
stos
arpl
xor
out
psubusb
and
pop
sbbl
lret
int3
pop
shlb
jmp
push
movsb
mov
imul
or
es
pop
outsl
jmp
sahf
and
cltd
clc
inc
or
push
aas
and
lret
stos
pop
dec
call
ficompl
inc
sub
mov
addb
cwtl
popf
adcb
add
jb
push
mov
mov
add
xor
add
pop
jns
adc
cmp
roll
jbe
mov
pop
xor
jno
mov
clc
mov
cmpsb
frstor
xchg
out
mov
not
pop
or
int
aam
leave
loope
cmp
sub
test
push
mov
or
mov
pushf
test
out
jnp
mov
sub
imul
jmp
or
mov
inc
repnz
inc
fidivrl
outsb
pop
push
mov
xor
adc
mov
addr16
xor
push
xlat
je
inc
dec
pop
mov
insl
push
or
push
sub
out
xor
loopne
lock
sub
add
into
out
or
sbb
icebp
out
and
sub
pop
out
aaa
stos
add
mov
popf
bound
add
jecxz
inc
mov
xchg
fldl
xor
jmp
lret
repz
mov
pop
shll
pusha
aaa
sub
xchg
jae
stc
and
cmpsl
cmp
push
jl
mov
into
cmp
sub
dec
data16
and
dec
ds
xor
push
adc
je
mov
js
fs
sahf
out
xor
pushw
or
lret
imul
sub
movsb
loop
daa
repz
pop
mov
loop
pop
adc
jle
sub
mov
add
outsl
dec
outsb
push
in
lcall
adc
mov
in
inc
or
ror
ficoml
mov
mov
loope
btr
rolb
nop
gs
in
push
ror
adc
push
sbb
add
jbe
push
aad
call
popa
aad
fwait
push
ja
xchg
int3
adc
mov
mov
pop
jp
xchg
or
shll
jo
out
add
outsb
mov
push
insl
mov
xchg
pop
mov
rcll
test
cmp
movl
orb
cltd
sub
jae
mov
dec
and
mov
adc
stc
ja
add
push
outsl
int
xor
jne
out
stc
test
nop
leave
imul
sub
push
push
add
fsub
mov
es
add
mov
loopne
inc
push
dec
fisttpl
or
inc
add
cmp
rcrb
push
movsl
repz
in
and
aas
xor
push
shll
loopne
les
repz
mov
negb
packsswb
xchg
sbb
dec
sbb
popf
push
adc
les
xchg
push
sbb
xchg
repz
fldcw
mov
lret
movsl
xor
pop
mov
repnz
test
push
lret
xor
mov
roll
push
add
push
and
cmp
jae
jl
mov
test
pop
jg
mov
add
xchg
mov
sub
cmp
jg
sbb
push
sub
push
or
cmp
cmp
popf
dec
push
xor
les
call
lds
arpl
pop
je
jmp
ljmp
inc
scas
mov
in
push
data16
nop
sbb
sbb
mov
push
inc
adc
sub
xor
pop
and
push
jmp
or
jb
lods
pop
mov
rolb
out
jmp
orl
mov
mov
gs
or
or
push
cmc
dec
incb
pop
push
xchg
pop
stos
rorl
xchg
pop
fldl
daa
out
cmp
loope
dec
sbb
and
mov
push
fsubrl
fcomps
dec
loopne
push
mov
xchg
xor
testb
add
rolb
stc
xchg
cmp
and
xlat
or
leave
mov
push
and
sub
push
inc
loopne
xchg
mov
lret
mov
inc
mov
jns
cmpsb
inc
sbb
mov
cmp
dec
dec
ret
jne
inc
hlt
loope
xchg
dec
dec
jnp
lcall
mov
xor
sbb
sahf
dec
roll
and
ds
cmp
inc
cmpsl
jle
inc
cmc
ds
loop
stos
pusha
ss
movsl
or
mov
jg
push
fcompl
popf
dec
ds
push
xchg
and
jns
jae
push
inc
inc
rcrb
pop
ss
adc
int3
jae
sub
and
repz
pop
in
cltd
popa
cmp
mov
pop
mov
mov
lahf
dec
sub
mov
or
cltd
pop
imul
in
test
push
dec
popa
jecxz
cmpsl
int
dec
sub
sbb
comiss
mov
pushf
cpuid
mov
jo
aam
out
int3
imulb
add
push
cmp
cmp
scas
mov
out
aas
ss
jnp
cltd
jno
mov
xor
cmp
jne
orb
cmp
ficoms
add
pusha
sub
pop
shl
ret
dec
adc
out
cmc
mulb
lret
xor
fidivrl
sti
sbb
push
mov
adc
insb
sbb
in
sub
adc
clc
push
faddl
jge
fdivrs
pop
fistpll
out
psraw
push
cmpsb
push
std
ret
pop
inc
dec
cmpsb
lea
loopne
sub
out
xlat
inc
loope
push
je
mov
aad
adc
icebp
rclb
cli
test
out
popw
add
pop
cmpsl
jnp
xor
rcl
movsb
dec
fcmovnu
xor
in
xor
rcl
or
shr
and
mov
mov
test
push
scas
test
repnz
adc
stos
mov
scas
push
cs
rorl
push
xchg
and
int
in
outsl
fs
icebp
inc
and
lods
mov
mov
push
clc
test
call
xchg
xor
mov
push
mov
nop
mov
enter
loope
pop
jmp
add
inc
jbe
add
ja
jne
movsb
dec
sub
shrd
xchg
int
jb
mov
jp
cli
push
sub
shll
fs
imul
push
jbe
pop
in
dec
inc
aad
nop
pop
lahf
push
or
stc
aam
aad
push
jo
ja
mov
mov
rolb
nop
iret
mov
mov
outsl
insl
ficomps
adc
movsb
dec
xchg
fucomip
fistpl
xor
or
movsb
je
cmpsl
add
add
ss
mov
cmp
or
mov
mov
sbb
int
xchg
cld
push
add
sbb
movsl
mov
enter
movsb
sti
xorb
sub
leave
xchg
or
cmp
inc
xchg
orl
scas
sub
lea
push
repz
xlat
int3
xchg
sbb
mov
adc
xchg
negb
rcrb
imul
sbb
into
inc
and
int
adc
loopne
pop
dec
dec
scas
jl
jecxz
cmpb
pop
shrb
addl
insl
pop
add
adc
jmp
stc
pushf
mov
loope
cmpsb
mov
mov
sahf
jbe
mulb
aaa
and
xor
out
or
sbb
cmc
cmp
dec
push
xor
into
lret
inc
mov
jb
sub
sub
sbb
or
cmc
inc
iret
adc
loope
mov
stos
sub
pop
repz
and
cmp
insl
mov
jnp
mov
scas
mov
popa
mov
pop
shrb
mov
mov
gs
mov
xchg
inc
loopne
out
lds
xchg
add
mov
fmull
lock
xor
test
pop
xchg
movsl
cs
xchg
and
dec
sub
mov
cmp
mov
iret
or
clc
cli
and
pop
loop
lcall
in
test
add
or
mov
fs
lcall
jno
inc
test
sub
or
movsb
pop
adc
aaa
filds
push
jle
ja
mov
push
pusha
rorl
mov
jecxz
imul
sbb
push
rolb
out
orl
and
cli
int
int3
jns
or
ds
xor
ret
loopne
or
sbb
daa
sub
lods
int
or
xlat
push
adc
sbb
push
inc
je
mov
fsubr
add
jo
ret
add
or
dec
movsl
packuswb
push
xor
cltd
sbb
in
and
pop
fwait
ss
lds
roll
ret
into
xor
imul
lds
out
add
jecxz
xchg
aad
bound
xlat
loopne
out
adc
cmp
or
jae
stos
popf
jg
int3
dec
data16
jno
sub
ss
adc
lcall
cld
ror
or
ss
xchg
jae
cltd
pop
add
jne
hlt
mov
lock
nop
pop
inc
dec
inc
and
movsb
sub
movsb
fcompl
icebp
loopne
pop
mov
sbb
cmp
xchg
mov
insl
mov
rcr
jge
in
nop
mov
daa
daa
adcl
hlt
xchg
mov
push
mov
imul
mov
lcall
sub
inc
pop
jle
cmp
cmp
mov
fwait
mov
adc
inc
ret
pusha
in
call
outsl
or
test
aad
inc
sub
dec
test
insb
lret
ret
adc
test
jo
arpl
push
mov
mov
fbstp
lods
insb
fdivrp
pop
mov
jg
xchg
pop
lret
adc
call
or
fsub
mov
cmp
push
jl
mov
xchg
nop
push
mov
mov
lcall
add
gs
sub
xchg
push
push
sub
xchg
or
test
sbb
jo
sbb
add
sbb
jne
insb
fwait
pop
addr16
fnstenv
aam
mov
push
insl
in
push
mov
in
fiadds
ja
outsl
call
adc
xlat
dec
add
adc
repz
mov
ror
js
push
push
outsb
clc
sbb
mov
push
in
mov
inc
and
call
sbb
popf
testb
insb
gs
ja
inc
fs
adc
sub
push
lret
aam
xor
cltd
or
adc
cmp
push
mov
push
gs
shr
jnp
mov
mov
or
add
or
dec
or
push
mov
and
sub
gs
xchg
push
sbb
rolb
jmp
add
xor
sbb
inc
and
loop
pop
cli
mov
add
ja
ret
xchg
pushf
fcoms
pop
inc
jnp
ror
xchg
ds
cmp
out
pop
pop
push
aam
xchg
movsb
jb
mov
int
fistpl
mov
sbb
sbb
jb
push
jg
ja
adc
mov
adc
nop
inc
xchg
add
fbld
loope
pop
jne
insl
push
mov
bound
or
shlb
or
into
in
or
ret
sahf
mov
push
loopne
lahf
add
test
lds
inc
cld
idivb
outsb
incb
dec
lock
or
repnz
xlat
pop
push
xchg
sub
repz
xor
sub
sbb
dec
out
jmp
cwtl
xlat
in
and
inc
stc
pop
outsb
add
out
ret
mov
or
test
mov
mov
scas
in
imul
sbb
jb
push
push
repnz
inc
mov
push
jne
leave
cmp
insb
shll
daa
dec
scas
jmp
jnp
jl
int3
ret
test
dec
xchg
inc
inc
popf
pop
dec
sub
fmuls
xchg
pop
arpl
mov
loope
arpl
iret
addr16
pop
sub
std
das
hlt
lret
xor
jecxz
xchg
mov
leave
imul
popf
mov
xor
lods
fsubp
lcall
ss
cld
fstpt
add
es
sbb
into
jbe
mov
jp
outsb
clc
inc
pop
inc
push
mov
pop
fimull
das
adc
lret
push
sbb
and
insl
popa
pop
out
ficoml
adc
popa
sbb
sti
repnz
mov
mov
xchg
mov
inc
insb
jnp
int3
inc
test
int3
mov
and
nop
xor
push
addr16
mov
lea
push
jbe
jge
sbb
pop
xchg
cmpsb
insb
or
cmpsb
imul
fdivr
or
pusha
out
pop
push
pop
and
cwtl
mov
add
cmp
xchg
xchg
test
mov
repnz
sub
xor
gs
aam
jb
es
aad
pop
lahf
loop
dec
mov
sti
shll
cmp
mov
lahf
xor
mov
push
repnz
push
aad
adc
jne
out
mov
mov
mov
movsl
push
sub
repnz
mov
roll
addr16
adc
ljmp
xor
rep
or
pop
hlt
sub
aad
xor
lcall
fcmovbe
xchg
lods
or
mov
lods
in
sti
scas
bound
push
jne
test
push
fists
lret
movsb
in
or
dec
inc
loop
inc
inc
sbb
mov
or
mov
mov
jg
xchg
pop
pop
mov
jns
repz
out
int
test
out
movsb
mov
test
cld
daa
pusha
into
mov
mov
data16
mov
cmp
add
stos
xchg
push
movsl
xor
mov
add
mov
sbb
aam
sub
or
sbb
sbb
rclb
mov
sub
add
dec
pop
sub
sub
jns
pop
push
or
out
sub
loop
mov
test
shlb
repnz
and
popa
and
mov
jl
nop
cwtl
test
cs
sbbb
lret
inc
lods
fidivs
rcrb
jge
mov
mov
mov
xor
dec
test
fnstenv
dec
jo
mov
cmp
or
scas
mov
xor
aas
and
inc
xor
movsl
es
insb
data16
mov
mov
rorl
rcrb
cmp
adc
mov
jns
xor
mov
mov
mov
dec
adc
shrl
fidivs
fildll
adc
int
fstl
lds
add
sarl
push
adc
cmpsb
sub
mov
add
and
imul
sbb
in
into
pop
inc
lret
popf
lea
in
lock
sub
mov
xchg
aad
and
in
mov
mov
push
loope
imul
jecxz
sbb
scas
and
lds
rcrb
fwait
bound
pushf
push
push
pop
pusha
sbb
mov
dec
daa
push
push
sbb
mov
icebp
and
out
rolb
add
xor
ret
or
stos
out
cmp
push
adc
ja
idivb
adc
add
mov
lret
addr16
fsubr
adc
pop
cmp
add
aam
mov
fidivl
cmp
xchg
push
mov
inc
sahf
cs
and
jnp
push
out
jl
out
mov
push
jnp
inc
xor
cwtl
and
jmp
and
mov
xchg
push
jbe
xchg
mul
mov
jo
movb
repz
jnp
ss
mov
shlb
push
pop
sbb
mov
dec
xor
in
repnz
inc
mov
rcrl
insb
jns
mov
jle
mov
ficoml
cmpsl
into
or
cli
xor
pop
jb
mov
int3
mov
test
and
pop
clc
iret
nop
xchg
dec
xchg
lds
jp
imul
ret
cmp
pop
dec
out
pop
stc
outsb
ret
inc
pop
cld
pop
xchg
int
adc
popf
xchg
adc
jne
dec
subb
cwtl
and
pop
loop
rol
lret
nopl
fcomp
mov
and
xor
stos
pusha
pop
inc
ja
movsb
clc
inc
add
mov
movsb
stos
cmc
or
into
adc
or
ja
jmp
adc
xor
jo
outsb
dec
or
scas
mov
pop
or
xlat
lock
jge
lock
and
loop
lcall
iret
sbb
sbb
and
cwtl
int3
stos
bound
ret
xchg
pop
xor
mov
jb
divl
or
fisttpll
testl
xchg
test
test
sub
stos
cmpsl
jecxz
jnp
xchg
ret
in
int
in
jnp
and
test
fiaddl
inc
test
mov
ss
inc
push
xchg
sub
cmp
scas
stos
push
lret
jne
pop
aaa
and
cmc
popf
test
sbb
cmp
push
pop
sbbb
aas
icebp
or
xchg
repnz
ja
pop
mov
pushf
lock
jge
push
adc
iret
outsl
ss
mov
xchg
inc
movsl
xor
push
ds
mov
mov
mov
js
in
pushf
add
pushf
loope
fcomi
jl
inc
loop
js
dec
jmp
mov
insb
fsts
jle
aam
loop
jns
lcall
or
pop
stc
stc
nop
xor
push
arpl
test
mov
cmp
icebp
sub
mov
pop
pushf
das
ret
jbe
aaa
mov
adc
loop
andl
test
bound
inc
mov
lret
push
mov
dec
aam
adc
dec
sub
punpckhbw
std
rorb
mov
imul
fistl
sti
mov
mov
in
cmp
out
dec
dec
les
dec
xor
adc
aas
push
shlb
js
hlt
andl
lret
aas
test
sub
mov
jns
lret
pop
xor
mov
jge
mov
mov
push
jb
stc
and
aad
fadds
bound
push
sub
add
lcallw
je
aad
in
mov
push
jp
rcrb
imul
sub
adc
dec
push
lods
mov
sbb
push
aaa
adc
push
inc
fildll
sub
xor
lahf
cld
xchg
cmp
jp
loope
pushf
xchg
inc
sbb
mov
leave
ret
test
xor
cmpsl
outsb
mov
stos
aaa
mov
add
rcll
shlb
inc
int3
fisubl
aaa
sbb
push
fs
pop
dec
pop
jg
fwait
ss
dec
sub
dec
push
dec
sahf
cmp
dec
xchg
adc
jbe
rcrb
icebp
xchg
fnstsw
icebp
ficompl
rorb
fs
sub
mov
dec
jl
or
cmp
pop
sarb
test
es
push
dec
add
aam
testl
out
arpl
hlt
jmp
or
dec
fbld
or
sbb
scas
stc
hlt
stos
lods
sahf
scas
or
in
fwait
enter
sbb
pop
jns
adc
into
sbb
inc
mov
jg
out
sub
shr
out
xchg
imul
movsl
out
addr16
pushf
test
xlat
push
mov
out
jns
rcr
mov
cmp
xchg
ljmpw
jo
sar
add
stos
cli
in
jae
or
mov
push
pop
mov
push
push
add
mov
mov
pushf
xchg
mov
insl
xor
out
in
jnp
adc
lcall
sub
xchg
adc
mov
insl
cmp
ja
xlat
icebp
dec
popa
pusha
lea
ficompl
push
mov
mov
roll
stc
ja
ja
dec
mov
addr16
cmc
adc
inc
push
mov
push
inc
hlt
loope
inc
lcall
mov
xchg
bound
int3
fs
dec
xchg
adc
out
sub
loope
xchg
aam
clc
scas
cmp
test
movsb
pusha
mov
xchg
lahf
call
xchg
inc
pop
das
rcll
mov
sbb
add
or
cli
pop
fldl
dec
rcrb
mov
mov
xor
cltd
dec
repnz
fstp
add
xchg
in
mov
pop
inc
jle
sub
icebp
out
cld
bound
jl
bnd
push
mov
shr
mov
or
pop
popa
rorl
leave
cmp
cltd
sub
cli
mov
test
jl
insl
lret
loopne
lret
mov
scas
fmuls
mov
mov
and
xchg
daa
push
mov
xchg
lcall
sbb
push
mov
push
inc
leave
popa
xor
sbb
jb
pop
test
jnp
pop
test
pop
imul
adc
jecxz
test
jl
std
ljmp
gs
jmp
inc
lret
mov
lods
jbe
dec
mov
add
push
fmul
enter
xchg
pop
push
jnp
and
leave
flds
out
outsl
sarl
pop
mov
cmp
add
adc
jmp
sahf
addb
mov
and
push
scas
push
mov
mov
xor
es
lret
mov
sar
pop
loopne
mov
add
inc
mov
cmp
stos
test
jge
sub
dec
xchg
jge
test
mov
iret
jne
xchg
rorl
sub
xchg
imul
notb
lret
fisubrl
clc
cmc
movsb
rcrb
or
leave
js
push
mov
add
sbb
jmp
dec
ret
jae
sbb
xchg
jne
mov
push
es
jmp
lods
inc
adcl
sbb
xorl
mov
das
xchg
loop
adc
lods
inc
inc
clc
cmc
out
mov
lret
inc
jns
xor
jp
rcrb
inc
fadds
in
mov
std
xchg
xchg
jnp
fs
ffree
push
pop
xor
das
mov
mov
mov
xor
lahf
mov
mov
imul
push
pop
jge
pop
outsb
enter
jb
movaps
int
shrb
pop
cli
dec
xlat
push
cmpsb
fs
iret
or
xchg
fiaddl
adcb
fs
and
hlt
test
lock
fildl
add
es
es
int3
fidivrs
dec
mov
pop
cwtl
fs
repnz
pop
add
and
dec
cmc
aam
cmc
neg
sbb
lds
inc
push
in
pop
je
pop
sbb
mov
std
mov
mov
out
out
sbb
pop
arpl
cmpsb
in
or
xchg
sahf
fsubrs
pop
lods
les
dec
and
and
mov
mov
adc
outsb
xor
sbbl
or
xor
lods
stos
mov
int
mov
orb
mov
aas
mov
and
orl
lcall
stc
and
insl
cltd
aam
fs
sbb
hlt
add
or
cmc
and
push
adc
or
insl
das
negb
push
inc
lods
cmc
dec
fldenv
addr16
jbe
dec
mov
roll
mov
sbb
add
sbb
aaa
jmp
inc
sarl
sbb
jge
lahf
pusha
dec
das
dec
shrl
sbbb
addr16
shlb
call
cmpb
adc
jae
movsb
movl
push
sbb
shlb
shlb
mov
jae
daa
xchg
inc
sarb
loop
jp
mov
and
leave
imul
jo
add
ja
loope
dec
loop
sbb
scas
sbb
movsb
pop
jl
xchg
mov
inc
dec
jbe
cwtl
out
jne
xor
clc
outsw
das
mov
dec
test
pushf
notb
fsubp
xor
sarl
cld
lret
push
xor
in
mov
clc
or
xchg
nop
push
outsb
or
mov
sti
ja
movsb
clc
push
mov
sub
mov
pop
jb
jp
fidivs
cmp
cs
inc
pusha
jo
stc
fbld
sahf
sbbb
imul
inc
jns
lds
or
mov
xor
xchg
xor
mov
lcall
inc
mov
icebp
aam
cmp
inc
leave
pop
fadds
lods
shll
int
add
out
xchg
and
or
dec
push
leave
js
pop
jns
xor
mov
jecxz
jl
push
pop
sub
push
in
jb
out
cmpsb
pop
rorb
dec
adc
cmpsl
jle
pop
insl
hlt
call
cmpsb
push
hlt
adc
lds
cs
js
sbb
test
cmpsb
scas
and
and
test
push
loope
push
bound
adcl
cmp
rcrb
jp
inc
les
inc
push
dec
mov
xchg
jl
stos
push
divb
insl
js
xchg
std
or
dec
xlat
jb
mov
stos
pop
imul
out
out
inc
add
icebp
iret
add
sub
and
and
add
outsb
out
jne
rcll
sbb
sar
push
scas
jb
or
rcr
and
jmp
xchg
mov
out
pushf
cmp
jle
mov
movsl
pop
push
inc
addb
in
pop
ja
xor
mov
xor
sarl
imul
mov
gs
ret
sbb
hlt
es
inc
ret
sti
cmp
fwait
ja
ja
cmp
sarb
mov
rcl
push
ret
adc
fwait
popa
jo
lea
mov
adc
adc
xor
jmp
push
cwtl
divb
xchg
mov
call
arpl
jle
adc
sti
mov
xor
sub
jns
sbb
xor
push
push
sbb
cmp
je
cmp
adc
xchg
in
clc
stc
mov
or
sub
negb
mul
fistps
jae
pop
sbb
pop
jbe
jo
cli
into
in
jno
mov
or
les
xchg
cmc
dec
sub
movsb
pop
sbb
gs
cwtl
daa
adc
xorl
pushf
das
push
aas
sub
int
jb
shlb
mov
fwait
addr16
in
mov
les
xor
ss
pop
push
dec
xor
inc
sbb
into
cli
mov
push
sbb
add
lret
jp
jecxz
mov
in
jmp
jae
sahf
mov
mov
lods
push
xchg
data16
mov
xor
enter
or
mov
loop
ret
inc
rcr
cld
dec
addr16
xor
jg
out
rcrl
jnp
cmpsl
xchg
dec
movsb
cwtl
das
dec
or
mov
stos
and
mov
mov
insl
aaa
sahf
pop
js
int3
inc
ficoms
jae
icebp
leave
inc
xor
or
leave
pop
stos
je
add
cmp
loop
mov
sahf
add
cmp
cwtl
iret
popf
add
jnp
mov
rclb
lcall
push
fwait
jp
fnstenv
outsb
jne
push
movsb
jle
mov
mov
inc
outsb
adc
add
scas
sbb
leave
insl
jnp
xor
mov
dec
jae
rcl
jge
mov
imul
jecxz
cld
jno
icebp
sbb
push
lds
pop
and
addr16
pop
cmp
xor
popa
hlt
xchg
in
punpckldq
push
xchg
je
in
cmp
sbb
ja
cld
in
push
pushf
lods
mov
xchg
shl
es
pop
jmp
mov
pop
jo
lret
dec
loope
aas
pushf
out
pop
fcmovnb
fsubrl
lods
xchg
jl
and
pop
stc
xor
pop
jno
hlt
fdivrs
mov
and
js
orl
mov
popa
lods
fnsave
jo
stos
test
pop
xorb
mov
lods
lods
jge
movsl
pop
lods
cmp
repnz
push
mov
push
leave
mov
in
lods
clc
dec
mov
loopne
fstpl
xchg
mov
out
jge
mov
lea
push
fidivrs
inc
jno
shr
je
lret
jno
popa
mov
dec
icebp
cs
cmpsb
ds
sahf
dec
fiaddl
and
repnz
ja
xchg
or
dec
aam
stc
lcall
sub
cmp
aaa
xor
add
adc
cmp
into
in
les
hlt
pop
push
mov
enter
adc
leave
mov
jecxz
jae
js
add
xor
aas
stos
xor
daa
pop
sub
je
mov
dec
and
mov
mov
loop
mov
add
insb
and
xchg
mov
add
lret
shl
dec
sub
xor
mov
push
sbb
enter
dec
test
jne
icebp
pop
loop
push
xor
mov
dec
fdivrp
and
lds
outsb
lock
je
lcall
cs
inc
mov
fmuls
ljmp
sub
mov
jae
cld
nop
mov
xchg
scas
mov
hlt
and
dec
in
cmp
in
push
mov
cmc
cmc
sbb
outsl
and
xchg
repz
icebp
mov
jle
pop
scas
sub
adc
push
std
jb
xchg
mov
lea
mov
pop
cli
jne
xchg
repnz
mov
mov
cld
dec
add
ss
mov
jmp
lods
ja
loopne
adc
dec
cmpsb
cmp
arpl
popf
test
cmpsb
push
jecxz
arpl
cmp
aad
sbb
jg
sahf
dec
ss
sbb
das
xchg
dec
sbb
or
sti
xchg
sbb
adc
jbe
jp
outsb
popf
inc
sub
pop
pop
insl
rol
mov
test
testb
and
outsb
add
dec
inc
dec
jbe
jae
mov
mov
cld
xor
popf
xor
mov
pop
div
test
or
cmp
sbb
insl
inc
ja
xchg
push
xor
aam
stos
cmp
fisubl
fsub
iret
in
jge
inc
rolb
adc
pop
push
mov
inc
negl
or
int
sub
stos
cli
fistl
in
inc
mov
add
pop
lods
mov
inc
add
fs
mov
imul
lret
jle
xor
rcll
and
ret
jae
fs
inc
and
add
jae
pop
scas
testb
xor
jbe
rorb
movsl
and
cmpsb
or
or
adc
out
jo
mov
mov
sub
cmp
ret
mov
dec
push
sub
lahf
cli
and
andl
lea
sbb
pop
sub
mov
and
cs
call
jb
inc
hlt
icebp
outsl
stos
jmp
cmp
icebp
fcoml
jnp
lcall
test
xor
es
or
addr16
xchg
ljmp
paddsw
jecxz
xchg
mov
dec
inc
leave
out
idivl
addr16
out
adc
sbb
pop
mov
xor
cmp
sbb
inc
jl
popf
cmp
in
cltd
loope
jb
clc
pop
movsb
lcall
rolb
lret
ss
jns
push
jnp
nop
cwtl
lea
shrd
outsl
xchg
leave
add
test
mov
xor
adc
push
xchg
rorl
test
dec
jnp
mov
popa
js
push
mov
dec
inc
mov
in
push
sub
hlt
fimuls
lds
mov
pop
repnz
addr16
fidivs
push
iret
lods
sub
notb
xchg
cltd
out
int3
and
fisttpll
fcomps
mov
mov
mov
mov
pushf
imul
pop
movsl
cmc
and
data16
js
pop
loope
aaa
insb
push
into
inc
and
push
lea
bnd
popa
push
filds
pop
jecxz
ss
dec
mov
sub
pop
dec
clc
jno
or
jecxz
mov
push
pop
pop
fidivs
mov
cvtdq2ps
mov
jnp
and
and
xor
or
mov
out
out
daa
ja
push
das
ljmp
ss
clc
cmpsw
and
fwait
pop
stos
dec
lcall
jo
outsl
xorb
popa
inc
repz
sbb
dec
cmovae
out
cmc
sub
add
in
ret
jp
out
jle
jbe,pn
int3
pop
out
and
pop
xcrypt-ctr
cmpsl
lahf
jl
jg
push
out
and
pushfw
rorb
xchg
mov
je
lea
push
aaa
push
push
scas
push
clc
or
addb
mov
bound
or
xchg
xor
insb
gs
jo
dec
adc
out
addr16
pop
cmp
pop
adc
rolb
push
cmc
mov
add
jnp
jns
mov
mov
out
mov
xlat
sbb
adc
inc
shll
mov
jno
lret
add
adc
fwait
push
inc
sbb
out
pop
je
xlat
fwait
dec
sahf
lods
mov
aas
shrl
jle
sbb
out
stc
mov
movsb
ficomps
mov
insb
in
sbb
rolb
dec
sarl
aas
dec
push
push
repz
sbb
fistl
movsl
dec
sbb
cs
dec
test
add
jp
pusha
jle
enter
jge
push
xchg
leave
inc
adc
fwait
incb
ljmp
jae
repz
mov
jle
pushf
cmp
and
mov
std
lea
imul
cld
jae
scas
out
out
fmull
mov
mov
clc
sbb
shl
lret
adc
and
jmp
lods
lret
sub
adc
lea
pop
fistpl
or
iret
sub
dec
leave
movsb
out
repz
cmp
rcr
nop
ret
lods
int3
aas
roll
aaa
test
push
movsl
pop
enter
imul
out
ljmp
lods
aaa
sub
cmp
lahf
cmp
cmp
js
dec
call
push
addl
movsl
pop
scas
jp
mov
or
push
popf
cmp
cmp
popf
push
mov
les
dec
cmp
sbb
xlat
mov
jp
and
sbb
nopl
stos
rcrl
shlb
mov
addl
popa
jp
nop
sub
jbe
mov
mov
ret
dec
icebp
lret
lret
jp
sti
and
outsl
sbb
aaa
in
dec
sbb
popf
xchg
pusha
push
inc
lret
enter
push
mov
icebp
adc
jl
adc
popf
pop
je
cmp
sbb
sbb
jo
imul
xchg
cmp
rcpps
rcrb
cmp
sahf
mov
xor
mov
roll
lds
mov
aam
xor
icebp
xchg
adc
lea
xlat
out
sub
xchg
lcall
std
leave
mov
mov
push
jle
cmc
test
mov
mov
push
mov
repz
mov
or
xor
loop
pop
dec
ja
pop
push
arpl
and
fnsave
or
jo
cmp
icebp
adc
inc
test
push
and
stos
rcll
mov
jbe
inc
scas
je
cmp
jle
or
mov
sub
xor
push
idivb
cmp
dec
stos
mov
mov
inc
jno
daa
xchg
outsb
cs
fisttpll
ret
mov
scas
push
aaa
mov
dec
movsl
add
xchg
lahf
rolb
mov
mov
scas
daa
sub
loopne
arpl
sub
imul
std
inc
adc
push
mov
pop
nop
sbb
adc
mov
fwait
lds
int
inc
daa
jle
adc
adc
or
cmpsb
sub
mov
pop
fstp
call
jno
mov
js
adc
lret
popf
push
inc
mov
mov
push
dec
push
xchg
adc
and
cld
push
mov
jnp
mov
push
cmc
lret
jno
sbb
jge
or
jle
mov
scas
rclb
int3
xor
cld
push
xchg
jl
mov
out
mov
into
mov
mov
mov
fists
pushf
adc
xor
enter
jnp
lods
and
addr16
dec
es
dec
cmp
jmp
and
cmp
dec
xor
xor
xorl
inc
test
push
or
cmpsb
in
ljmp
xbegin
jb
xor
scas
fldl
mov
fcomps
mulps
xor
adc
xor
dec
popa
dec
push
pop
adc
xor
sub
and
push
pushf
insb
add
int
inc
sti
fisttpll
jle
jb
xchg
clc
fs
fwait
aaa
push
xchg
and
mov
cmp
stos
mov
xchg
cmp
adc
mov
lea
out
push
cmp
sbbb
cmp
inc
in
lods
sub
push
xor
adcl
movsb
inc
es
inc
movsl
std
mulb
outsl
testl
lret
inc
cmp
aaa
dec
jmp
xor
repnz
cmp
jg
ss
insb
mov
cmp
jge
lods
inc
imul
fcoms
aaa
jns
sub
ljmp
mov
test
imulb
push
jns
cmp
int3
out
mov
cmp
xor
mov
inc
sbb
cmc
jge
sub
fs
movsl
pop
dec
jmp
sub
push
mov
je
std
mov
ror
inc
addr16
hlt
lods
dec
pop
mov
test
addr16
dec
pop
vorpd
and
movsb
insl
lods
addr16
leave
in
fldl
aad
pop
jbe
mov
testl
pusha
inc
jo
mov
dec
cmpsl
clc
ffree
scas
push
xor
push
dec
sub
stos
xchg
test
mov
inc
ja
xchg
fistps
jne
add
xchg
into
int3
loope
int
dec
jge
and
aas
xor
out
cmp
push
mov
add
sbb
jg
inc
dec
sbb
sbb
pop
mull
pushw
push
sbb
jge
movsb
and
bound
push
inc
enter
ljmp
mov
movsb
mov
and
jge
dec
pop
mov
insb
or
push
jmp
fdiv
cwtl
notb
stc
mov
sahf
icebp
dec
inc
adc
inc
rolb
jmp
and
jae
mov
xchg
push
fst
mov
les
add
arpl
mov
cmp
add
and
pop
pop
and
sub
inc
cmp
xchg
mov
xor
jl
icebp
insl
aad
push
pushf
iret
inc
dec
lahf
jg
inc
mov
aaa
xchg
push
outsb
faddp
cmpsl
jl
rcl
add
cmp
sbbl
gs
and
lods
sub
jl
hlt
mov
arpl
xor
bound
les
test
add
daa
cmp
push
adc
xchg
inc
fidivs
pop
xor
xor
sub
or
xchg
inc
or
jmp
jge
push
mov
or
xchg
lret
mov
jge
dec
mov
pop
cli
jle
call
or
or
stos
sarb
jp
int
push
inc
xchg
pushf
sub
cwtl
frstor
lcall
repnz
sbb
aam
loop
jp
ss
int3
push
loop
mov
int
xor
or
ficompl
pop
pop
xchg
aad
cmp
mov
das
cwtl
or
arpl
repz
hlt
and
int
movsb
paddq
insb
or
fldt
cmpsl
repnz
stos
sbb
mov
pusha
sub
inc
xchg
loop
pop
dec
mov
mov
frstor
pop
es
popf
add
imul
adc
and
push
lods
push
mov
mov
sahf
in
sub
xor
stc
out
mov
sub
stc
jne
sahf
ds
pop
push
mov
lret
inc
loope
sahf
mov
mov
fstps
mov
push
dec
movsl
cmp
adc
cmp
or
xchg
pop
jmp
xchg
repz
push
int3
ret
dec
cmpsb
repnz
addr16
add
or
ret
sbb
push
and
stos
jecxz
nop
test
scas
cld
add
loopne
cwtl
mov
lods
mov
mov
adc
sti
cmc
pop
mov
jae
inc
cld
les
mov
mov
outsl
imul
jne
inc
daa
movl
hlt
out
mov
scas
daa
sbb
or
call
inc
pop
hlt
xchg
mov
jle
jne
mov
jl
jp
and
lds
psubsb
cmpsb
inc
cs
dec
repnz
pop
xchg
int
cli
mul
repz
xor
or
push
fistpl
fists
clc
pop
sub
mov
into
xchg
dec
xlat
pop
mov
js
out
ja
sahf
std
lds
xchg
ljmp
inc
popf
adc
in
shll
repnz
arpl
or
mov
aaa
insb
movsl
loopne
xchg
inc
stos
push
test
mov
pop
sahf
hlt
loopne
int
push
dec
mov
inc
les
xor
fnstsw
repnz
xchg
mov
sbb
push
xchg
pop
push
je
pop
jmp
or
cld
adc
shll
push
fs
in
pop
push
rol
mov
dec
addr16
cli
ss
xchg
jecxz
mov
sbb
sbb
mov
add
rcl
inc
cmpsb
je
aam
stos
xchg
fcomps
cmp
jp
cmp
popf
mov
popa
jno
jl
sahf
mov
cmp
daa
cmp
push
jmp
mov
sbb
inc
jbe
addb
ret
icebp
push
adc
mov
repz
outsb
sub
pop
aas
mov
mov
pop
mov
sub
mov
push
stos
int
bswap
push
mov
add
inc
mov
ret
push
sub
xchg
jae
ret
mov
daa
dec
insb
mov
lock
std
mov
mov
or
fstpt
mov
dec
push
cli
push
popf
mull
je
cs
mov
addl
sub
imul
rcl
cs
push
lcall
pop
dec
cltd
mov
xchg
fs
mov
movsb
es
mov
dec
xor
test
add
cmp
gs
shl
add
xchg
arpl
mov
pop
shlb
and
dec
lcall
cmp
push
adc
push
outsb
pop
loope
loopne
xchg
xor
sbbl
fcmovu
jp
xchg
xor
stos
sbb
shll
fs
test
imul
pop
mov
repnz
leave
int3
sbb
rcrl
adc
sbb
push
ja
fnsave
mov
add
std
jbe
fmul
cmp
mov
add
sub
dec
inc
mov
test
call
mov
sub
xor
pop
mov
ss
or
mov
into
sub
push
xchg
jo
stos
fsubs
repnz
rcrl
and
jne
adc
shlb
pop
imul
andl
bound
repnz
jae
imul
fmuls
sbb
shrb
cwtl
mov
jae
jne
xchg
lods
fimull
sti
pop
out
idivb
std
or
pop
jo
jnp
inc
sbb
out
sbb
int
aaa
mov
xchg
daa
xor
lds
cmovl
push
adc
pushf
shrl
cli
sbb
and
jp
pavgw
mov
push
iret
xor
lcall
fmull
mov
push
mov
dec
xchg
jl
js
aas
out
push
sub
enter
xchg
jb
stos
and
cltd
mov
xor
pop
bswap
decl
jecxz
iret
xchg
test
sbb
xor
adc
hlt
stos
dec
addr16
divps
pop
push
adc
xchg
cmp
jno
xchg
repz
mov
shrb
cmp
cmpl
into
lret
mov
or
repnz
mov
out
mov
mov
outsb
imul
jae
mov
fisttpll
cmp
cs
outsl
pop
jbe
arpl
nop
out
add
lahf
call
xchg
mov
ret
add
inc
orb
xchg
clc
bound
out
dec
outsl
xchg
sbb
jo
pop
divb
ja
push
dec
mov
cmp
pop
cwtl
dec
mov
sub
int
mov
incb
cltd
xchg
out
add
jl
dec
cmpl
mov
jg
mov
addr16
test
or
jecxz
cmp
in
dec
push
add
cmp
into
inc
sbb
inc
std
cmpsl
ja
add
aam
pushf
inc
mov
out
mov
jle
pop
daa
addr16
dec
bound
test
xchg
and
sub
jecxz
lret
fbld
or
mov
add
addl
jle
mov
lcall
lock
in
pop
cmpsl
xor
push
dec
mov
vmread
rorl
mov
sahf
xchg
inc
mov
jb
pop
mov
and
mov
push
adc
jmp
imul
jmp
ljmp
xchg
fdivrs
ss
cmpsl
jg
cmpb
pop
pop
cmp
out
maxps
xchg
fstpt
sub
imull
sbb
xor
stos
outsb
divb
adc
loope
rclb
mov
jg
les
mov
fsts
pop
xorl
addr16
ja
leave
dec
dec
dec
movsb
movsl
mov
jg
xchg
push
jnp
add
xchg
xchg
adc
and
jg
sarb
dec
mov
xorl
imul
or
pusha
dec
push
lahf
lahf
int
add
xchg
enter
pushf
pop
pavgb
cmp
xlat
sub
sti
daa
xor
jb
or
pop
or
push
xchg
mov
jle
sbbl
jle
mov
push
mov
psubq
add
testb
jmp
jg
sub
imul
pusha
and
incl
loop
mov
pop
stos
bound
inc
cmp
int3
lfs
sti
jae
scas
inc
outsl
ds
mov
adc
mov
push
jle
movsl
test
iret
in
add
jnp
in
mov
arpl
addr16
mov
push
out
add
stos
int3
sbb
cmp
xchg
cld
lods
push
and
negb
insb
outsl
xor
mov
and
push
xchg
ljmp
or
add
pop
ja
icebp
in
insl
sbb
cmc
mov
mov
lret
push
inc
pop
ds
push
fnstenv
fisubs
mov
addl
pop
xchg
and
inc
int3
adc
pop
xchg
ljmp
pop
mov
inc
sti
pmaxub
jae
pop
sub
fs
out
push
xor
cmp
mov
fmull
hlt
cwtl
add
jns
mov
cwtl
int
movsb
mov
pop
jge
xor
in
shrl
or
sbb
pop
add
inc
imul
pushf
jns
fwait
sbb
in
add
push
test
shl
shrb
in
roll
out
jge
popf
mov
imul
pop
sbb
fcmovu
jge
and
and
mov
daa
sub
inc
in
cmpsb
leave
xchg
dec
imul
and
not
pop
call
pop
dec
aam
fyl2x
sub
test
and
loopne
lods
iret
call
and
lds
stos
inc
xlat
pop
adc
repnz
movsl
test
nop
mov
cmp
mov
push
arpl
xchg
insl
hlt
xchg
cmc
sub
lods
dec
and
in
in
xlat
cmpsb
loope
neg
inc
pop
mov
pop
jle
adcb
scas
jbe
push
push
sbb
popf
sub
push
imul
out
in
dec
lock
xchg
ja
shrb
mov
orb
inc
mov
or
pop
nop
mov
pusha
pop
stc
push
jp
or
adc
cmp
adc
adcl
sub
fadd
cs
cwtl
jge
loopne
jl
mov
push
cmp
cwtl
daa
dec
adc
repz
fiadds
mov
pusha
pusha
fcomip
int
jo
add
sbb
test
xchg
js
roll
dec
out
loopne
mov
hlt
into
mov
push
xor
fucomip
xchg
sub
jg
jo
roll
mov
sub
dec
inc
cmpsb
mov
int
pop
gs
push
imul
jmp
mov
push
inc
mov
pop
mov
rcr
lret
test
fld
popa
test
int
cmc
jge
xchg
outsl
nop
pusha
icebp
adc
cmp
mov
jbe
lock
jmp
cmp
cmc
lcall
jmp
sub
cmc
iret
lea
pop
sbb
inc
mov
mov
jecxz
adc
xchg
pop
fmuls
sbb
fstpt
rcl
outsl
inc
gs
mov
mov
sub
insl
iret
shrl
add
ret
loope
adc
das
notl
mov
popf
pop
mov
mov
loope
sbb
movsb
jbe
daa
aas
jp
repz
xlat
mov
hlt
sub
mov
inc
out
stos
inc
lcall
adc
test
ret
mov
sub
push
test
pop
mov
inc
inc
pop
movsb
pop
imul
pop
mov
div
int3
lods
jge
adc
pop
and
mov
cmp
jge
fnstcw
clc
push
jmp
int
xor
adcl
push
enter
xchg
loopne
jg
ret
jns
arpl
std
add
mov
cmpsb
ret
clc
sbb
and
andb
hlt
xchg
ret
sub
loop
xchg
js
scas
xchg
inc
cli
loop
stos
fldenv
rolb
mov
push
es
mov
lret
clc
adc
inc
xchg
lahf
and
mov
loope
adc
outsl
lcall
mov
jns
loopne
xor
pop
push
xchg
pop
jne
das
and
and
pop
outsb
addr16
movsb
sbb
stos
mov
sub
enter
inc
jle
sub
sahf
clc
mov
adc
sar
daa
xchg
in
mov
nop
mov
sti
jns
jnp
mov
push
ret
stc
jb
mov
dec
out
push
arpl
push
adc
mov
ljmp
sub
fwait
nop
sti
ja
mov
dec
push
dec
mov
sub
jmp
arpl
push
push
cs
mov
fs
xchg
fbstp
call
sahf
out
cmp
stc
mov
xor
les
shll
sub
dec
fdiv
movsl
iret
dec
push
sahf
ds
xorb
dec
pop
cmpsb
or
cmp
mov
repnz
sub
xchg
push
insl
and
sbb
mov
ds
popf
movsl
and
mov
lcall
or
mov
mov
es
je
adc
fmuls
das
outsl
pop
mov
fmull
clc
mov
adc
lock
or
mov
push
out
cld
mov
mov
cmp
fcoms
outsb
and
fnstsw
sub
xor
inc
adc
inc
or
sub
sbb
cmpsb
pop
xor
mov
std
or
sti
rorb
js
lods
mov
shll
lea
cmp
jbe
cltd
imul
sbb
pop
or
push
ret
enter
pop
aam
or
pushf
dec
nop
xchg
rcl
daa
push
int3
cmp
rcll
adc
dec
icebp
cmp
outsb
sbb
jmp
cmpsl
notl
std
cmpsb
addr16
sti
cli
pop
iret
add
jle
add
rcrb
cmc
aas
mov
adc
mov
add
push
into
into
sub
jns
ljmp
cmp
loope
sbb
dec
sub
sub
stc
into
pop
nop
jae
inc
in
or
aas
ja
or
mov
clc
pushl
out
adc
sub
push
pop
or
cmpsl
sbb
xor
sahf
test
inc
mov
sub
enter
fdiv
pop
inc
ja
je
ret
pop
data16
sti
cmpl
cltd
ret
sbb
faddl
gs
mov
cmp
mov
xchg
pushf
lea
cmp
and
push
adc
pushl
int
pop
adc
adc
ljmp
jle
sub
repnz
xchg
xchg
or
addr16
dec
add
int
js
subl
mov
clc
sub
dec
push
clc
repz
nop
push
add
cmp
mov
mov
shrl
dec
pop
push
shlb
and
sarb
cltd
xor
out
sub
mov
stos
and
stos
movsb
pop
mov
add
in
mov
imul
dec
pop
push
nop
push
hlt
jno
jae
out
das
std
cmc
stos
cwtl
rcl
repz
es
dec
jno
jno
or
cmpsb
lret
inc
mov
fsubrs
sub
jnp
mov
mov
xchg
daa
clc
lods
mov
jae
inc
push
or
out
mov
mov
loop
dec
in
rol
repnz
ret
out
cltd
xorl
clc
pop
xlat
dec
movsl
jmp
adc
inc
pushf
roll
pop
mov
jno
mov
sbb
jb
test
jmp
stc
mov
into
mov
mov
jae
ficoms
adc
sub
lret
add
xor
lahf
xchg
sbb
cmp
pop
outsl
inc
dec
mov
outsl
mov
out
sub
leave
mov
imul
push
and
sti
loop
ds
arpl
popf
sub
repz
cmp
rolb
push
add
or
xchg
cltd
push
jge
dec
dec
mov
jns
imul
pop
inc
sub
mov
pop
cltd
mov
adc
xor
out
and
lock
sub
in
repnz
xor
aaa
inc
addr16
mov
cld
jbe
mov
xchg
xor
jl
pusha
aam
in
test
fidivrl
stos
or
sub
pop
mov
lods
out
push
arpl
rcl
inc
add
std
xor
jo
jbe
mov
xor
jo
adc
lods
fbld
lret
xchg
in
pop
repnz
out
cmp
jo
xchg
cmp
and
ret
fidivl
sub
adc
mov
imull
and
jecxz
orb
xchg
xchg
jno
mov
and
aas
lea
scas
push
mov
into
lock
testb
inc
inc
lock
dec
xchg
loope
or
jmp
sbb
repnz
lcall
or
fwait
adc
ret
xchg
cmpsb
add
mov
mov
ret
leave
loopne
fsubrs
fwait
or
mov
mov
push
inc
in
ret
dec
pop
mov
cmp
pop
nop
push
sub
ret
sub
cwtl
add
jle
ljmp
cmp
pop
aas
jp
mov
gs
cmpsl
mov
mov
xor
and
add
xor
dec
mov
addr16
add
mov
lahf
push
gs
pop
into
les
mov
jne
loope
mov
inc
rcrb
jp
aad
bound
mov
adc
ljmp
push
dec
adc
sub
lret
adc
jno
cmc
push
sarb
cmp
fld
xor
cmpl
and
pop
add
out
dec
dec
push
rcrb
sbb
jns
inc
pop
cmp
xchg
xchg
imul
jns
dec
push
xor
sbb
pop
mov
add
push
mov
negb
cs
cmp
jbe
fucomp
inc
sbb
or
call
nop
xchg
out
mov
adc
xchg
shlb
push
cmp
push
mov
sahf
js
shrl
adc
aad
xor
sbb
adc
xor
clts
cmpsl
mov
or
je
les
pop
cwtl
mov
movsl
hlt
mov
negb
sahf
fistl
popf
shr
cmc
pop
dec
jecxz
jb
and
adc
fists
insb
jle
cli
lret
mov
push
xchg
sbb
pop
xchg
aad
jno
sub
imulb
jecxz
xchg
cmpb
mov
jns
out
sub
sub
sub
stc
shll
cltd
jg
xor
xchg
lea
je
dec
mov
or
ljmp
shlb
lds
mov
mov
inc
je,pt
jbe
xchg
test
fbld
icebp
mov
cmpb
jcxz
rep
sub
push
add
pop
int
test
jp
jmp
int3
dec
or
popf
mov
mov
imul
jno
mov
sbb
movl
mov
xchg
jo
hlt
fidivl
jl
leave
es
into
fistpll
add
inc
shrd
cltd
in
jne
push
iret
je
jno
jmp
and
push
xchg
fnsave
push
addb
xchg
add
out
enter
add
js
inc
iret
out
sbb
out
das
js
pop
jmp
adc
jnp
aaa
rcrl
gs
shl
pop
aaa
mov
aaa
mov
lock
jg
scas
fwait
addr16
pop
push
cmpsl
mov
call
xlat
adc
xor
add
cwtl
push
test
ret
std
rcll
lock
cltd
dec
loope
into
outsl
jecxz
lock
and
ret
shll
push
dec
rclb
xlat
ret
and
inc
fdivrl
mov
dec
ficoml
dec
out
lahf
push
push
jbe
es
xchg
pop
scas
and
xor
mov
stos
repnz
fsubrl
jmp
fs
add
jnp
insb
and
mov
mov
lods
clc
lock
flds
jmp
pop
iret
xchg
add
repnz
xlat
sbb
or
popf
xchg
into
mov
stos
sti
fmul
add
push
mov
lret
stos
jecxz
or
cmp
mov
pop
loopne
das
mov
xor
sub
inc
pop
rclb
cld
cmpsl
xchg
daa
stos
cmpsb
movsl
cmpsb
rcrb
push
movsl
ret
inc
inc
or
icebp
leave
incb
add
sahf
icebp
out
cmp
push
jo
inc
add
add
fs
and
dec
xchg
push
dec
ret
xor
jo
pop
dec
sar
cli
inc
iret
mov
xor
jb
movsl
bound
inc
gs
mov
test
fwait
adc
mov
subl
jne
stos
xchg
sbb
cmc
or
mov
xchg
adc
testl
call
mov
inc
pusha
jb
adc
adc
lods
mov
into
lods
imul
jb
ds
stos
dec
orl
adc
mov
das
mov
movsb
push
mov
aad
test
fistpll
fldcw
mov
cmp
icebp
xchg
cmpsl
std
cmp
test
enter
xor
mov
sbb
jg
jo
fwait
adc
pop
adc
sbb
roll
mov
cmpsl
into
jp
mov
jns
pushf
lods
stc
inc
cmp
addr16
ss
addr16
mov
stos
mov
push
cld
push
loopne
cmpsl
in
mov
push
js
xchg
push
dec
dec
or
sbb
xor
cmp
rcll
insb
in
sub
lods
scas
arpl
adc
xchg
jge
test
push
jl
sbbl
sbb
adc
mov
add
shlb
call
sbbl
sti
icebp
fcmovnb
push
push
rorl
push
sbb
es
xchg
insb
xlat
sahf
sub
mov
or
test
mov
add
push
out
addr16
aad
mov
pop
add
mov
push
aad
push
pop
mov
dec
mov
pop
mov
xchg
inc
cmp
fsubs
insb
push
jne
sti
cld
in
into
xor
mov
movsb
xchg
dec
in
fidivrl
mov
stos
cs
ja
loopne
mov
movsl
mov
xchg
fisubrs
pushf
imul
mov
or
cli
sub
dec
adc
pusha
out
xchg
mov
jo
into
adc
test
xchg
out
xchg
xchg
out
cmp
inc
adc
cmp
adc
pop
sbb
shlb
push
int
cs
lcall
mov
nop
cmp
int
insl
jmp
jns
dec
cmpsl
mov
and
jbe
pop
test
into
add
xchg
insb
push
in
sete
js
inc
mov
fucom
push
and
xchg
ret
ljmp
cmp
cmp
test
pop
or
leave
or
dec
aas
sbb
and
ja
adc
or
and
pop
inc
jecxz
jmp
add
ss
ds
inc
or
adc
mov
sbb
xchg
jb
fimull
or
loop
jns
lret
mov
mov
push
data16
jns
sub
fildl
dec
movsb
cmp
insb
jecxz
flds
inc
mov
cmp
sbb
push
sbb
rcrl
sbb
push
push
sbb
mov
or
and
xchg
test
stos
lods
fistpl
sub
xlat
repnz
sbb
mov
fsts
das
pop
mov
mov
push
into
xchg
mov
jmp
sub
orl
mov
cmpsl
push
aaa
mov
addr16
out
cmp
cmp
jae
je
dec
je
test
insb
jns
es
imul
push
adc
mov
popa
aas
cltd
xchg
xchg
pop
jecxz
dec
movsb
mov
arpl
cmc
mov
inc
sub
xor
mov
jno
jg
mov
mov
sbb
adc
fildll
add
daa
dec
cmpsl
inc
gs
rolb
dec
xchg
push
jmp
jmp
in
nop
stc
pop
push
mov
sub
xlat
lret
dec
sahf
fcompl
std
shlb
addb
mov
pop
leave
mov
pop
dec
loopne
out
xor
negb
loop
int
jmp
loopne
xchg
pop
xchg
or
out
or
and
dec
scas
fldt
outsl
bound
push
in
xchg
xchg
dec
call
and
cmp
mov
add
push
jnp
and
mov
mov
fisubs
js
in
inc
dec
sbb
xor
xor
mov
mov
xor
clc
aas
lret
popf
and
test
add
xor
pop
push
push
sahf
dec
mov
adcb
and
sbb
jnp
cmc
cli
rcrb
in
jns
xchg
loope
ljmp
sti
fadds
mov
std
jg
push
mov
mov
xor
iret
push
pusha
mov
inc
ror
sub
ja
nop
testl
nop
imul
sti
lahf
pop
fistpll
or
cwtl
pop
int
stos
out
test
xchg
inc
cwtl
into
leave
mov
add
popf
push
mov
add
test
adc
push
adc
xor
test
xor
mov
mov
add
ret
lret
gs
insb
outsb
jp
cmp
or
or
mov
cmpsb
cld
lret
clc
dec
jnp
xor
lods
cmc
jnp
pop
outsb
xor
mov
inc
push
repnz
pop
push
in
mov
ja
flds
or
lea
aaa
adc
icebp
negl
int
test
sub
push
push
and
inc
addr16
frstor
stos
add
int3
add
das
stc
push
sub
mov
xor
xchg
fcomp
jp
mov
outsb
rclb
in
out
inc
jo
push
mov
xchg
jmp
in
mov
dec
adc
mulb
test
jno
in
out
mov
insl
cwtl
push
push
daa
add
xlat
jns
lods
clc
cmpsb
xor
sub
jl
mov
xor
or
cmp
and
sti
mov
jmp
sbb
bound
and
adc
xor
adc
stc
push
xlat
push
or
lret
pop
aad
push
arpl
aas
call
nop
out
inc
inc
ljmp
lret
ret
loopne
pop
outsl
fdivl
jmp
loopne
add
xor
int
pop
and
jns
cltd
and
cmp
lea
mov
sub
dec
out
pop
cs
dec
insl
dec
inc
xchg
mov
jne
xor
shrl
push
js
daa
daa
sbb
add
sbb
mov
sbb
inc
in
in
adc
imull
gs
sarb
ja
lods
add
pop
inc
into
xchg
pop
lea
enter
mov
mov
add
sbb
inc
jo
roll
jp
or
push
xor
cmpsl
pop
dec
xchg
es
mov
adc
pop
orl
xor
popl
pusha
ret
push
mov
xor
inc
gs
mov
jecxz
stos
adc
xchg
push
xor
pop
mov
cmp
cmp
pushf
cs
je
or
push
adc
cmc
pusha
lret
shll
ficoml
shll
das
ficoml
adc
adc
jns
dec
scas
pop
adc
dec
mov
or
sub
or
pop
hlt
repz
notl
xlat
inc
mov
fiaddl
jmp
test
sub
fwait
mulb
clc
sub
jo
out
shrl
mov
jp
lahf
test
push
inc
lcall
xchg
lret
call
jp
or
int
xchg
mov
inc
push
repnz
mov
fcom
sti
enter
xchg
xor
jns
mov
fs
jecxz
ss
ljmp
imul
test
add
outsb
idivl
dec
push
mov
iret
cmp
pusha
xchg
es
fsubrl
mov
dec
push
mov
push
add
sub
cmpxchg
cmp
push
lock
sub
je
fildll
ja
movsb
hlt
daa
repnz
pop
jl
fldln2
push
dec
sbb
mov
hlt
rcrb
xchg
test
mov
mov
inc
or
push
push
fs
aas
jge
push
es
dec
dec
icebp
aaa
int
aam
popf
sbb
cmc
xor
icebp
jae
test
lcall
mov
mov
gs
lret
je
sti
mov
les
xor
mov
adcl
xchg
jnp
in
push
scas
adc
lret
out
lcall
sbb
mov
outsl
sti
dec
push
xor
cmp
jb
popf
or
sarl
lahf
mov
and
cmp
cmc
mov
xor
push
mov
mov
pop
pextrw
sbb
ds
mov
adcb
inc
mov
dec
xchg
je
sub
dec
mov
out
bound
iret
push
add
orb
adc
shlb
jns
jno
or
repz
pushf
test
mov
and
dec
sub
lahf
cld
mov
js
sub
xchg
popf
pop
fidivrs
int
or
rcrl
jmp
xchg
aad
lods
push
dec
lods
xor
push
mov
fucom
out
aaa
loope
sub
xor
lods
bound
jmp
jle
arpl
push
adc
outsb
or
js
adc
cld
sub
mov
stc
loopne
or
cmc
dec
ja
mov
lcall
scas
xchg
xor
xchg
nop
sbb
jbe
sahf
jmp
mov
shl
sub
cmc
push
pop
cmp
cmc
arpl
shrl
in
fwait
cs
mov
cmc
je
invd
or
aaa
negl
mov
test
lea
xlat
vpcmpgtw
enter
shl
stos
enter
xchg
addl
stc
sub
pushf
das
insl
mov
fistl
mov
or
out
dec
push
rorb
lret
ljmp
add
sahf
jge
cmpsl
jbe
daa
jge
mov
push
lret
stc
push
out
mov
mov
test
pop
pop
loope
int3
add
adc
cmp
shll
xor
call
add
ljmp
les
rorb
or
push
arpl
adc
add
mov
loopne
mov
inc
xor
lcall
sbb
out
jns
ja
mov
mov
jmp
adc
mov
nop
mov
push
and
sub
in
ret
pop
push
roll
push
mov
jecxz
movl
stos
cmc
call
push
loope
push
ret
xchg
in
sbb
push
icebp
push
sbb
pop
lret
mov
add
or
xchg
mov
loopne
clc
sahf
cmp
in
pop
pop
sub
mov
mov
repz
ja
stos
aam
les
and
mov
adc
mov
das
push
pop
inc
stos
cld
sub
push
mov
push
push
jge
lock
xchg
aaa
loope
push
adc
clc
icebp
shl
outsl
notb
xchg
shlb
int3
sarl
fwait
adcb
dec
jb
fdivl
jno,pt
das
pop
dec
push
lret
pop
cld
sub
cmpsl
pop
out
fwait
cli
sbb
mov
xor
lds
or
cmp
fs
mov
add
mov
outsb
and
sub
mov
sub
jns
in
mov
inc
sbb
jnp
test
and
mov
lods
adc
sub
xchg
incl
pop
test
pop
dec
adc
imul
cmpsl
bound
rcrb
ja
bound
jecxz
outsl
mov
push
dec
or
xor
lgdtl
push
add
fstp
stos
adc
xor
int
xchg
dec
adc
fstps
push
mov
cli
daa
sub
cmp
int
movsb
mov
inc
lret
add
fneni(8087
cli
xor
fnstenv
sahf
cmp
add
cmp
mov
sub
sahf
sbb
mov
inc
repz
ret
hlt
pusha
fimull
cmp
movsb
dec
jb
inc
or
out
sub
pop
das
scas
bound
jno
push
dec
mov
dec
scas
mov
or
test
insl
popf
mov
dec
test
push
fdivs
jmp
inc
sub
xchg
mov
and
ljmp
jbe
mov
xor
xchg
clc
and
sub
int
add
outsl
pop
add
pop
adc
inc
mov
cli
dec
push
fwait
and
sbb
dec
in
imul
jnp
sbb
push
pop
xor
xchg
xchg
lods
jmp
sbb
cmp
dec
ljmp
mov
jns
rorl
repz
pop
mov
dec
mov
fsubr
adc
jge
insb
jnp
add
pop
and
jle
fiadds
dec
pop
xor
and
push
iret
ljmp
xor
mov
add
push
inc
cs
pusha
mov
lods
sbb
dec
out
dec
cmpsb
jge
add
pop
jne
lea
mov
dec
and
push
insb
xchg
aaa
mov
adc
push
and
push
cmp
push
push
xor
ret
xor
bnd
or
xchg
push
pop
repz
scas
insb
clc
aas
lods
mov
iret
push
shl
pop
inc
add
push
cltd
xor
xchg
call
xchg
imul
mov
imul
xorb
xchg
repz
pop
aaa
loop
sti
stc
xor
mov
ret
pop
xchg
sbbl
inc
iret
insl
and
fs
cld
jp
jno
mov
ret
push
insl
jbe
mov
mov
or
xor
addl
fwait
in
test
sub
inc
inc
clc
or
and
lahf
jno
sub
out
sbb
xchg
enter
ret
in
cmpb
adc
je
inc
test
lahf
bound
mov
iret
or
mov
pop
cmp
es
jns
add
sbb
push
mov
bound
rcrl
push
insl
call
mov
dec
sbb
pop
dec
sbb
mov
push
pop
in
arpl
fldt
test
outsb
jp
test
out
rclb
cmc
inc
stos
pop
ljmp
ret
xchg
jl
jl
aas
inc
xchg
inc
xchg
iret
push
sub
sti
lcall
aam
sbb
inc
dec
js
fistpl
fcoml
sub
das
mov
push
outsb
icebp
xor
aad
repz
xchg
mov
sbb
int
add
pop
push
imul
out
jbe
xor
cmpsl
dec
add
ret
iret
stc
flds
or
bnd
mov
xor
sub
les
out
jl
lock
fmul
mov
sbb
repnz
add
out
jmp
mov
cwtl
jbe
pop
ss
sub
dec
inc
dec
mov
in
int3
and
scas
and
sbb
jl
scas
inc
sub
out
orl
push
push
xor
nop
outsl
and
sti
daa
out
dec
cmp
mov
cltd
dec
dec
stc
mov
call
mov
add
mov
jae
xchg
hlt
mov
or
pop
adc
cmp
in
dec
es
lods
fidivl
subb
mov
or
sbb
sub
subl
test
cmpsb
push
inc
mov
push
push
lock
push
fwait
or
mov
add
hlt
scas
dec
pop
out
mov
or
test
jl
and
xor
xchg
lods
pop
mov
add
inc
xchg
pop
arpl
fnstsw
inc
lahf
stos
cmp
gs
sti
dec
pop
jmp
sbb
out
test
push
ljmp
adc
pop
push
mov
jno
outsb
cmp
mov
aad
out
out
sub
stos
std
cmp
push
xchg
aaa
mov
mov
mov
mov
jmp
outsl
sti
jle
ret
daa
adc
dec
xchg
nop
mov
repz
sbb
call
or
adc
flds
xchg
popf
insl
test
mov
arpl
fs
adcl
dec
shrl
xchg
push
and
lret
dec
sbb
repnz
adc
and
pushf
popf
hlt
lods
or
ficomps
xchg
dec
sub
push
mov
fdivp
rorl
add
xchg
push
pop
fs
push
mov
lods
das
ss
xchg
xchg
out
jecxz
movsb
xchg
popf
cwtl
sahf
push
dec
int
inc
lcall
cmp
mov
jg
mov
mov
call
sbbb
cmp
ss
pusha
mov
or
pop
repnz
pop
clc
xor
js
das
in
and
mov
adcl
ret
jb
mov
inc
sbb
xor
lods
inc
jge
ret
pop
sahf
rclb
call
mov
jle
dec
xor
adc
ret
fbld
sbb
xlat
in
ljmp
inc
pusha
sbb
mov
iret
jl
pusha
orl
out
aas
popa
pushf
jl
adc
arpl
adc
push
ret
pop
push
in
cmpsb
cmp
sbb
pusha
call
scas
lods
int3
nop
add
add
mov
inc
shll
mov
jnp
and
jge
sub
js
outsb
pop
sbb
xor
xchg
stos
or
test
mov
jo
loope
sbb
dec
mov
aas
int
mov
sub
lods
jb
jnp
jmp
std
jbe
inc
addb
jle
xchg
fwait
pop
mov
loope
cli
dec
cld
out
inc
xor
sbb
add
cwtl
push
sbb
jb
cmpsl
adc
adc
jae
mov
inc
xor
xor
rol
loope
nop
xor
jmp
push
mov
cmp
or
aas
js
xchg
sub
sbb
sahf
ficoms
ret
lods
cli
rolb
out
mov
loopne
mov
cmp
rorl
push
jl
aas
pop
mov
jne
ja
je
negb
lahf
pop
sub
xor
push
jns
mov
pop
mov
stos
mov
sbb
sub
movsb
jl
lcall
lahf
inc
push
test
mov
and
sbbb
in
pusha
jbe
imul
jl
and
mov
rorb
iret
aaa
incb
xor
or
dec
or
xchg
test
jns
sahf
xchg
das
inc
sub
add
inc
movl
and
leave
mulb
or
xchg
and
jle
lahf
cmpsb
data16
pop
push
mov
rorb
gs
sub
mov
daa
pop
cmc
mov
pushf
sbb
xor
cmp
stos
fsts
sbb
sbb
movsl
fnstcw
in
fwait
cltd
adc
sbb
pop
sub
mov
adc
sub
jecxz
sub
in
in
jne
mov
jl
mov
sbb
loop
and
lds
jp
inc
arpl
scas
aad
dec
or
mov
mov
or
icebp
sub
jmp
int
or
mov
fs
or
cmpsb
insb
mov
cmp
aam
pusha
leave
rcrb
jmp
add
sub
mov
pop
and
popa
into
ja
sub
imul
jmp
in
mov
jbe
lds
je
lcall
fisttpll
jae
fidivl
lcall
xor
es
jae
push
leave
mov
pop
cmpsb
adc
sbb
pop
push
sub
mov
inc
mov
jb
push
pusha
sub
out
adc
cwtl
addr16
mov
loop
mov
xor
loopne
jp
sbb
mov
mov
lock
popf
push
lret
fwait
into
aad
pop
and
loope
js
fwait
jg
pop
inc
insb
push
push
cli
add
dec
aaa
xchg
push
and
pop
out
mov
push
add
outsb
xor
adc
mov
jle
pop
dec
pop
mov
jne
movsb
cld
hlt
push
aam
repz
movsb
mov
clc
push
mov
lahf
inc
adc
cmc
mov
mov
in
cmp
inc
insl
scas
divl
jmp
mov
lods
cltd
insb
mov
es
fstp
mov
stos
popa
int
shlb
pop
aaa
jo
xchg
movswl
js
lea
add
lret
mov
push
mov
movsb
data16
arpl
push
aam
or
sub
xor
sbb
xchg
inc
pop
es
push
loop
xchg
dec
fisubs
mov
mov
jne
xchg
dec
insb
jne
inc
js
insl
in
in
sbb
pop
stos
insb
lret
mov
sbb
push
xor
jbe
jecxz
pop
mov
xchg
clc
fistpll
inc
sub
or
adc
push
mov
sub
xorl
cmc
xchg
shlb
pop
sbb
xchg
cmp
mov
inc
je
stos
pop
mov
lret
andl
cmp
xor
mov
xchg
pop
inc
adc
imul
adc
lods
xor
mov
jne
sub
push
push
sub
xchg
push
fcoms
xor
pop
xor
fwait
sbb
rcl
or
mov
push
jmp
lea
movsb
xchg
aam
inc
loop
mov
adc
mov
push
pop
testl
shrb
lock
cmp
shlb
and
push
cld
xchg
xchg
jo
xchg
push
dec
cld
adc
stos
sub
out
cmpsl
pusha
add
dec
xchg
fldl
mov
cld
mov
test
push
mov
out
push
sbb
jb
dec
imul
dec
aad
xor
mov
in
mov
lret
fwait
imul
cli
scas
add
out
add
fcoml
stos
jmp
jb
fsubl
out
inc
or
adc
xchg
sub
cmpb
mov
std
jnp
loopne
or
mov
xchg
shrb
loop
fisttps
sti
add
popf
mov
mov
jb
push
aaa
dec
mov
xchg
inc
mov
mov
imul
xchg
mov
adc
push
jns
fnsave
mov
push
dec
nop
or
aas
test
repz
test
sub
fists
push
push
mov
sbb
lds
in
mov
inc
int
sbb
jae
out
cld
adc
mov
das
jmp
mov
dec
xchg
fadds
mov
xchg
adc
shlb
loope
xchg
in
test
roll
and
stos
xchg
and
sub
test
test
cltd
fcmovnu
xor
outsl
out
sbb
jns
pop
jnp
push
xchg
pushf
mov
movsb
mov
jg
xchg
int
test
xchg
cmp
int
xor
cmp
mov
inc
and
nop
das
cmp
dec
int
aad
movsl
mov
test
and
xor
dec
cmpsl
jp
xchg
std
jg
add
or
xor
les
cmpsb
dec
xchg
enter
insb
mov
sub
int
lahf
jg
xor
pop
push
cltd
rcrb
mov
movb
into
mov
pxor
xchg
jecxz
int3
mov
xchg
add
mov
and
xchg
adc
lds
ss
or
pusha
gs
outsb
fidivrs
and
mov
xchg
jbe
xchg
jmp
loope
test
test
rcrb
mov
adc
data16
call
pop
mov
mov
push
pop
xor
fwait
enter
shl
mov
xchg
pop
mov
xchg
push
jae
push
popf
sbb
fiadds
pop
out
and
sbb
pop
out
fld
pop
xor
out
fldl
in
pop
dec
hlt
mov
jne
fildl
lea
fstl
inc
xor
jns
push
lret
das
add
arpl
sub
or
roll
add
adc
add
inc
fs
insl
addb
mov
adc
jle
jle
nop
pushf
cmc
push
sbb
bound
and
out
mov
push
out
add
ja
clc
sti
mov
lock
pop
lods
jp
lahf
mov
adc
shlb
cmp
pop
sbb
sbb
out
outsb
fidivs
push
pushf
jne
jge
jbe
pop
xchg
dec
cli
nop
mov
stos
xor
lret
jnp
dec
jecxz
xor
lock
dec
movsl
xchg
fstpl
popf
sbb
in
push
out
shlb
stos
or
movsb
push
fimull
pop
dec
add
stos
jl
sub
imul
and
test
cmp
add
loope
icebp
adc
outsl
cmp
insb
ds
pop
mov
test
inc
sbb
mov
inc
stc
dec
pop
imul
mov
push
outsb
out
sti
adc
push
and
mov
cmpsl
xchg
sub
sub
push
stos
add
out
push
xchg
jae
insl
movl
and
cmpsl
in
add
xlat
ljmp
movsb
notl
jmp
add
mov
std
push
adc
adc
jns
xchg
xor
pushf
lahf
out
nop
adc
psrld
mov
push
call
cmp
jne
mov
mov
pop
negl
mov
push
xchg
scas
add
cmp
and
mov
xlat
add
ds
jbe
inc
lock
aam
aaa
into
mov
iret
out
xlat
std
xchg
and
pop
cmc
mov
je
pop
xchg
mov
add
aad
jb
jo
sbb
mov
inc
ret
loope
cwtl
arpl
test
inc
xchg
or
ljmp
rorb
iret
cmp
xchg
mov
sub
arpl
or
jo
cmc
adc
jnp
notb
xor
mov
push
lea
les
hlt
les
inc
mov
nop
jle
inc
sub
xlat
andb
mov
ss
test
shrl
mov
outsb
inc
fcompl
in
in
scas
add
mov
mov
popa
stos
jmp
ja
inc
mov
fnstsw
es
mov
add
imul
xchg
add
pushf
test
test
mov
mov
mov
scas
dec
add
es
pop
lret
fidivs
mov
jbe
fiaddl
sbb
ficomps
fisttpll
dec
imul
push
or
popf
lret
cmp
jb
insb
mov
or
adc
dec
repnz
mov
cmc
cmpl
jae
add
or
mov
add
cli
mov
test
fisttpll
jp,pn
ret
mov
mov
loope
push
sub
inc
push
ficompl
xchg
sbb
mov
ret
or
jle
push
fmul
fsubr
outsl
xor
xor
clc
adc
jb
inc
hlt
pop
std
imul
xor
or
mov
jnp
jo
stc
cmp
and
mov
mov
lret
dec
hlt
dec
sub
sub
idiv
lds
mov
lds
inc
cmpsb
dec
bound
lahf
and
addr16
xchg
jae
imul
cwtl
or
add
mov
jmp
test
xchg
mov
jecxz
sahf
cli
jnp
shll
or
imul
lahf
decb
fwait
cltd
adc
mov
xlat
and
pushf
mov
bound
xor
jg
jbe
jg
shl
push
int3
inc
iret
test
cmpsb
sti
sbb
addr16
xor
fsubr
xchg
push
and
xor
inc
dec
imul
mov
std
mov
out
lcall
xchg
aam
adc
popa
sbb
popa
xchg
jmp
and
rorb
fcoms
or
inc
lods
lods
pusha
inc
aas
add
cmp
mov
adc
mov
xor
push
leave
mov
mov
mov
mov
adc
or
mov
loope
mov
fisubs
xchg
int
stos
leave
push
dec
stos
popa
fs
int
xor
lds
pop
cmpl
adc
arpl
gs
xor
sub
inc
int
pushf
mov
add
pop
xor
xlat
push
fs
push
loope
aaa
xor
jne
and
cmp
dec
cmp
or
add
gs
fiadds
jp
iret
cmp
or
pushf
jno
push
js
dec
rclb
sahf
sahf
mov
jne
or
ret
daa
inc
ret
cmp
aad
fdivs
dec
inc
sub
in
loop
add
movsl
aas
cmpsl
imul
icebp
xchg
fldl
or
mov
push
and
dec
lcall
dec
scas
xchg
sub
test
or
adc
xor
or
into
and
call
ret
sub
aaa
mov
xchg
jno
loope
hlt
das
dec
push
popf
cmp
mov
push
gs
fistl
and
mov
inc
mov
loopne
xorl
stc
repz
fs
and
rorl
pusha
jae
jno
xchg
loope
push
les
aas
lock
rcrl
pop
aaa
leave
sub
dec
lret
rcll
popf
ljmp
and
adc
gs
testl
cmp
push
add
push
sbb
call
repz
fmulp
arpl
jno
pop
movsl
outsb
mov
fwait
mov
jl
mov
mov
push
lds
inc
mov
or
repz
jne
mov
mov
std
adc
dec
out
inc
or
loop
add
mulb
add
ret
pop
jb
mov
and
mov
lock
cld
cmp
mov
add
flds
jns
std
test
cli
das
and
out
mov
testb
inc
push
test
jb
lods
add
sub
mov
sub
lret
lock
pop
mov
movsl
les
frstor
loopne
stos
mov
leave
int
gs
or
cmp
sub
inc
xchg
fs
fcompl
sbb
ljmp
push
sti
sub
dec
mov
lods
test
mov
stos
int3
lret
loop
and
cmp
xor
add
stos
mov
dec
and
aas
pop
add
in
push
es
sbbl
inc
fidivrs
push
hlt
xchg
test
sub
cmp
cmpsb
add
pushf
and
ljmp
mov
outsb
jle
jne
and
fisubrl
sbb
jl
imul
je
xlat
pop
and
adc
dec
pop
sbb
pop
xor
and
in
ja
cld
mov
push
movsl
push
fldl
les
dec
mov
push
jae
mov
push
lcall
rcll
push
cltd
std
ret
mov
fnsave
imul
test
stos
iret
mov
mov
aam
xor
daa
jl
ds
fcomps
jge
sbb
imul
xchg
test
jnp
sbb
ljmp
mov
mov
jmp
jle
xor
fwait
inc
cmp
shrl
out
adc
daa
mov
sub
mov
test
xor
mov
scas
lret
push
adc
push
mov
mov
cmp
sub
inc
orl
pop
mov
dec
mov
or
sub
and
xchg
push
lods
dec
sub
or
or
js
sub
je
push
pusha
aad
rcpps
cmp
cmc
lods
inc
or
mov
insb
testb
mov
mov
inc
push
jl
jbe
in
fbstp
cltd
js
add
dec
cmp
add
lods
repnz
negb
pop
or
sti
out
in
out
add
pop
pop
lods
cs
movsl
mov
out
pusha
push
sbb
and
xor
notl
jns
mov
sub
mov
xchg
test
sbb
mov
sub
push
pop
mov
xchg
subb
sbb
mov
fstl
insl
sub
sub
adc
inc
cmp
pop
jnp
mov
cltd
nop
dec
es
in
fs
mov
data16
scas
push
mov
out
lahf
push
lea
or
sbb
pop
movsl
inc
sahf
ret
test
push
pop
jge
orl
pop
sub
jo
push
adc
lea
pop
dec
and
xchg
cmc
outsb
pop
orb
mov
orb
data16
sub
bound
lods
mov
out
shlb
xchg
mov
je
xor
cwtl
push
xlat
pop
lret
push
outsb
rolb
mov
pop
mov
jb
test
int
aas
sbb
and
addr16
loop
dec
sub
add
fdivp
ds
repz
mov
adc
or
out
inc
push
dec
sub
lret
xchg
mov
jnp
addr16
into
pop
mov
andb
sbb
shr
aaa
into
fwait
cld
push
fdivrs
roll
scas
stos
push
decl
cmpsl
adc
push
pop
push
or
pop
inc
sub
and
fdivl
shl
push
cmc
jecxz
add
popa
xchg
mov
jmp
lret
dec
in
scas
popf
jecxz
and
sti
and
sbb
mov
icebp
and
lahf
cwtl
and
addr16
adc
adc
add
xchg
out
repnz
out
mov
ljmp
icebp
sub
sub
and
push
test
sub
push
xor
add
call
and
cmp
loope
xor
and
cmp
push
mov
mov
in
mov
fwait
push
pop
out
jmp
clc
movsl
repz
int
pop
loop
xor
jle
roll
push
ja,pn
fidivrs
mov
xchg
fwait
adc
fwait
pop
lahf
fadd
outsb
test
mov
dec
jge
jno
xlat
jl
mov
and
sub
pop
pop
rorb
lret
frstor
int3
mov
or
mov
fdivs
movsl
mov
push
and
sbb
lea
rol
mov
cmp
cmp
xor
mov
shll
pushf
sbb
inc
sub
cmp
add
mov
pushf
cli
jecxz
cmp
mov
pop
or
lods
cmp
cmc
subl
enter
pop
das
mov
add
loope
mov
sub
sbb
out
or
fidivrl
lret
fidivl
xchg
stc
mov
std
es
andb
or
push
orb
ja
hlt
sbb
mov
out
inc
xchg
mov
repz
fidivs
mov
jle
or
icebp
neg
and
movsl
out
mov
out
and
shlb
cmc
icebp
inc
imul
or
repz
cli
mov
fisttps
jae
mov
sbb
dec
lods
sbb
adc
ljmp
cld
cmp
mov
pusha
into
out
stos
js
push
test
out
jg
add
sahf
mov
push
pop
lea
idivb
stos
enter
fisubs
popa
into
cmp
push
jo
xchg
inc
into
or
mov
loop
lret
xchg
dec
mov
and
mov
mov
or
sbb
nop
repnz
ficomps
insl
or
into
pusha
popa
test
xlat
stos
pop
xchg
dec
and
sbb
lcall
sbb
out
test
pop
adc
adc
push
push
clc
mov
mov
mov
xchg
mov
out
repz
or
adc
adc
mov
arpl
or
lods
cmp
jns
push
aad
mov
inc
call
pop
mov
or
and
aam
inc
cs
repnz
and
shrb
addr16
mov
scas
leave
mov
pop
leave
jne
ss
lods
test
test
jg
in
fisttpll
inc
pop
mov
pop
vcvttpd2dqy
jne
in
arpl
and
fisubl
mov
jmp
adc
push
xor
pop
mov
pop
and
push
inc
adc
repnz
aad
int
xlat
adc
out
leave
jp
mov
movsb
data16
shl
jp
nop
jg
mov
xchg
out
ret
mov
pop
inc
movsb
push
pop
sub
ds
sbb
sahf
and
jge
inc
sahf
xchg
push
dec
mov
out
aas
outsl
jmp
xchg
int
xchg
xchg
sbb
jbe
jle,pn
into
int
cwtl
cld
hlt
mov
bound
repz
testl
loopne
enter
inc
jecxz
clc
or
jp
dec
sahf
mov
lret
inc
shl
js
imul
jmp
or
pop
push
cmp
xchg
xor
in
adc
jle
cmpsb
dec
xor
push
adc
aaa
data16
repnz
mov
std
in
ret
fidivrs
popf
mov
test
outsl
sbb
push
test
pop
and
lds
add
add
movsb
mov
xor
neg
fimuls
cmp
xor
mov
lcall
test
or
xchg
gs
out
jo
mov
or
push
push
ficompl
in
jno
data16
cmc
pop
jne
jae
add
repnz
ficoml
pop
popf
sub
test
mov
imul
das
mov
add
jecxz
and
mov
insb
cld
mov
outsl
adc
das
sbb
jecxz
inc
adc
lret
sbb
fdivl
mov
addb
stos
ret
dec
popa
pop
cmc
repnz
lods
shll
pusha
mov
aas
sbb
outsb
mov
imul
jmp
icebp
cmp
nop
call
and
daa
js
loop
movb
test
mov
je
lea
jae
xchg
icebp
shll
cltd
add
ljmp
aaa
push
push
inc
and
cmpsb
add
stos
mov
lcall
push
add
mov
xchg
pop
sbb
fmul
dec
je
iret
ss
rorb
cmp
mov
sub
jno
stos
add
or
mov
jmp
adc
out
nop
sbb
mov
dec
adc
xor
insl
je
fdivs
xor
cmc
mov
mov
and
jle
xor
add
dec
mov
outsl
jne
fnstenv
loope
lcall
sti
lods
inc
popf
sub
mov
or
push
or
sub
fiaddl
enter
std
pop
scas
lret
mov
sub
fnstcw
lods
xchg
stos
testl
icebp
jo
jmp
mov
sub
popa
adc
jno
sub
js
xor
mov
lret
loopne
rcrl
cmp
jnp
daa
jecxz
data16
sub
push
jb
xchg
xchg
cmp
and
outsl
xor
mov
icebp
sbb
push
jge
movsb
cmp
je
orl
popa
das
adcl
icebp
loopne
pop
push
rolb
pop
xor
xlat
aas
and
jmp
xchg
fidivrl
arpl
rorl
subb
repnz
add
xor
add
enter
pop
dec
add
xor
mov
imul
push
pop
fdivl
inc
push
lods
lcall
jne
mov
call
and
pop
pop
sbb
nop
inc
inc
iret
sub
xchg
imul
inc
pop
pop
dec
lea
adc
inc
pop
gs
iret
mov
sbb
pop
lods
jmp
shl
jl
mov
jns
fldt
sub
xchg
ja
sbbl
daa
repnz
sub
gs
jecxz
arpl
dec
jecxz
les
cmpsb
pop
out
jp
pop
pushf
call
jle
mov
enter
scas
in
repnz
or
scas
inc
insl
cmp
inc
ds
into
cld
out
repz
jbe
mov
mov
es
jmp
dec
adc
pop
or
movsb
insl
or
fisubrl
or
ja
mov
push
push
adc
test
mov
jae
or
les
outsl
mov
adc
cs
dec
mov
addl
ljmp
xor
in
int3
pop
aas
sub
je
mov
aad
jae
sti
cmp
mov
orb
mov
cmp
dec
hlt
mov
mov
adc
ja
shrl
cmc
sub
outsl
and
jne
pop
jle
sub
stc
push
add
xor
mov
xorb
lret
bound
push
or
xor
ja
out
lds
push
fwait
insb
cmp
mov
insl
pop
mov
fldl
lods
lods
insl
jle
leave
in
jg
mov
lods
into
mov
insb
push
sbb
aas
push
js
mov
xchg
repz
adc
scas
mov
push
popf
icebp
push
imull
sahf
insb
call
cmp
fldcw
in
mov
pop
mov
xor
sbbb
and
sbb
bound
mov
repz
shl
scas
or
and
inc
in
mov
cmp
aad
repz
fwait
add
rcrb
mov
xchg
mov
xor
sub
lea
adc
mov
daa
loope
loop
pop
inc
push
shrl
push
pop
push
mov
xor
fldt
cltd
mov
inc
sar
into
mov
and
cs
mov
fnclex
gs
sbb
scas
xchg
cltd
xchg
or
sbb
mov
cli
nop
mov
daa
popf
cmp
lds
mov
and
inc
and
jns
or
scas
nop
xchg
test
mov
sbbl
push
and
inc
push
aas
push
aas
cwtl
test
arpl
pop
xchg
mov
xchg
fldl
inc
movsb
inc
jecxz
add
inc
mov
jae
jmp
orb
repz
and
roll
stos
loopne
ret
jo
cli
mov
dec
scas
sbb
gs
jle
fs
add
jecxz
mov
dec
sbb
mov
into
xchg
mov
mov
das
mov
negb
sarl
add
mov
imul
test
xchg
push
cmp
adc
jp
jg
repz
ds
pop
pop
xor
and
ret
and
push
ficomps
ljmp
sbb
shll
aam
jg
and
mov
mov
fsubrl
pavgw
mov
in
xlat
mov
jp
inc
repnz
pop
or
or
lret
pop
xchg
aad
xchg
mov
mov
pop
cld
iret
stos
loope
sbb
inc
in
add
sbb
xchg
and
add
xchg
inc
ret
pop
test
das
push
cmc
sub
dec
dec
mov
sbb
xor
add
nop
popa
pop
fsubrl
and
xor
pop
cmp
add
xor
cs
mov
decb
mov
inc
clc
jg
xchg
dec
jp,pn
dec
test
xchg
fwait
push
iret
ljmp
lret
dec
loopne
push
jo
scas
jo
adc
inc
sar
or
dec
mov
int3
jae
popf
fwait
cmp
or
and
dec
xor
mov
mov
out
and
scas
add
xchg
in
out
sub
sub
xchg
xor
pushf
or
xlat
inc
mov
mov
divb
cmp
mov
mov
push
lds
fcmovb
jmp
inc
and
ret
xor
ret
in
add
scas
and
into
xchg
rcll
xor
scas
and
nop
add
sti
adc
ret
sub
adc
mul
push
ret
fldt
icebp
push
pusha
and
mov
jns
lods
mov
leave
cmp
adc
loop
fs
dec
repnz
insl
jne
repnz
scas
dec
ja
cmpb
fstps
or
rorl
outsl
nop
or
inc
std
xchg
rcll
add
or
lret
clc
arpl
and
sbb
jl
pop
and
lods
imul
or
ja
push
adc
inc
int3
out
inc
sbb
fmuls
xchg
push
inc
xchg
rorl
lret
push
mov
mov
mov
cmpsb
sahf
xor
aad
aam
cmp
ss
pop
cs
push
mov
xchg
push
or
sub
sbb
inc
sbb
jge
fwait
lcall
sbb
scas
xlat
push
in
test
add
jle
jl
iret
sub
fnsave
jp
mov
pop
mov
mov
pop
sub
push
cmpsl
aam
sbb
xlat
stc
fistpl
push
mov
scas
or
pusha
push
mov
and
stos
ret
push
sub
cmp
jb
enter
loop
fs
sahf
jb
fistpl
and
out
adc
cmp
out
and
pop
jl
xor
sbb
test
ds
xchg
aam
imul
out
imulb
inc
pop
or
jl
jo
adc
lret
hlt
mov
jb
xor
and
out
push
pop
jno
or
outsb
lods
xchg
fwait
loope
pushf
and
ss
loopne
cvtps2pi
lock
or
loope
adc
mov
enter
shll
mov
xor
cmpl
mov
pop
inc
xor
cmp
xchg
andb
test
add
push
sahf
out
xchg
xchg
jecxz
mov
sbb
js
mov
fisubs
bound
jp
pop
inc
sub
lods
mov
xorl
arpl
mov
clc
scas
sub
push
sar
xchg
inc
dec
sbb
js
jge
stc
jmp
sub
sub
jge
cmp
test
cwtl
mov
xchg
or
mov
out
or
sub
cmp
insl
cmovo
jl
fildl
popa
ljmp
test
mov
sbbb
and
jo
sahf
mov
stos
int3
mov
add
pop
loop
mov
jnp
jns
imul
add
dec
xlat
mov
enter
sbb
je
imul
xchg
and
mov
movsl
aad
add
dec
ret
dec
fbld
pop
adc
test
js
add
pop
cmpsb
test
fcoms
xor
cmpsb
cmc
pop
sbb
mov
and
xchg
dec
jg
out
in
xchg
aad
jmp
cmp
jmp
inc
inc
xchg
xchg
call
ret
popa
std
test
dec
xor
xor
insl
out
subb
adc
outsb
and
ja
addb
inc
lret
mov
adc
insb
sbb
mov
gs
and
pop
aaa
bound
scas
test
pop
sbb
in
or
mov
pop
inc
in
mov
pushf
test
adc
xchg
sub
or
sbb
sbb
mov
cmp
add
aaa
sbb
mov
xchg
add
cmc
enter
fwait
push
jo
pushf
mov
jp
mov
scas
push
jge
into
shrb
fsub
clc
das
xor
test
xchg
paddw
xchg
fsubrl
or
inc
test
mov
js
rclb
ret
mov
jmp
shll
jge
pop
stc
lret
repz
adc
mov
push
add
insb
sub
pop
dec
and
push
sub
adc
dec
push
xchg
les
cmp
loope
sbb
clc
adc
fwait
cmp
push
jnp
or
pop
jle
mov
mov
test
jae
mov
cmc
fstpl
dec
lods
xchg
jne
gs
push
xchg
or
fwait
in
test
insl
mulb
fstl
push
into
cmp
pop
xchg
dec
cmpsl
lods
dec
mov
out
add
sbb
push
mov
push
inc
lret
ret
push
mov
adc
pop
pop
pop
xchg
notb
stc
loope
cld
in
iret
xor
pop
loopne
sub
sub
add
dec
inc
mov
push
xor
lea
inc
call
adc
inc
sub
popf
fsts
bound
test
int3
icebp
push
mull
add
cmc
in
gs
inc
push
stos
adc
jp
xchg
repz
inc
sbb
jno
outsl
cmp
cld
aad
neg
fwait
pop
sarb
mov
sbbl
dec
add
jno
jb
arpl
pop
jb
daa
scas
lcall
jbe
lret
in
mov
dec
adc
stc
outsl
cli
jl
dec
mov
dec
lret
and
xor
sbb
adc
hlt
scas
out
loopne
sti
daa
and
and
mov
pop
aaa
and
dec
in
and
imul
sub
cltd
mov
in
in
dec
outsl
bound
pushf
jecxz
gs
xorl
lds
leave
pop
jbe
jp
and
xor
push
mov
mov
out
cltd
test
lods
sub
xor
xlat
and
jno
das
xor
pop
sub
cmp
dec
push
sub
cld
vsqrtsd
pop
enter
scas
pop
mov
xchg
test
adc
leave
jg
scas
test
stc
popa
cmpsl
adc
mov
int3
ret
mov
lods
xchg
push
icebp
in
in
and
aas
mov
mov
fisubrl
mov
and
bound
cmpsb
loope
ja
jne
into
and
cld
out
std
daa
nop
mov
or
or
lcall
test
inc
push
jae
movsl
daa
ret
inc
js
in
jo
daa
mov
outsb
jge
aad
add
in
lods
push
sub
mov
push
daa
outsl
cwtl
push
repnz
rclb
call
sub
fbstp
inc
mov
cs
cmp
sahf
fbld
sub
cli
inc
popa
add
cmp
jmp
rcrb
lea
xor
jnp
scas
xor
in
and
sub
lods
mov
outsl
out
sahf
cmp
pop
fstpt
dec
push
dec
call
jb,pn
pop
pop
dec
test
jle
pop
int
cmp
adc
or
out
add
in
push
ss
jl
in
cmp
adc
fistps
adc
leave
clc
pop
lret
loop
loop
hlt
jge
add
pop
hlt
add
xor
push
jg
fcmovb
xor
iret
mov
cld
mov
add
pusha
xabort
test
fiadds
dec
xchg
test
loope
or
sbb
test
push
aas
lods
adc
or
movsl
sahf
inc
sub
xor
mov
add
scas
add
mov
inc
fbstp
mov
cmc
jns
mov
add
lret
mov
push
loop
in
ja
adc
jo
xchg
xor
shll
lods
dec
inc
dec
jbe
js
mov
notl
dec
les
or
cld
xchg
jns
xorb
nop
les
lret
lret
inc
fimuls
push
aaa
into
mov
mov
add
out
jae
sbb
sub
mov
shlb
push
mov
inc
pop
ss
and
xor
es
sbb
push
pop
mov
xchg
fsubl
lret
cli
mov
jg
mov
sub
dec
rclb
dec
adc
add
rclb
inc
push
repz
add
int3
xchg
cmp
pop
xor
les
xor
cmp
pop
aad
pop
std
or
and
sub
clc
fists
ds
adc
jno
shll
push
aaa
adc
dec
in
add
jl
mov
das
adc
insl
aam
xchg
cmp
pop
loope
shl
mov
or
movsb
es
mov
mov
dec
add
push
leave
jg
xor
mov
aad
loopne
out
pop
fisttpl
jp
fimull
and
shrl
lods
add
daa
mov
rclb
icebp
xlat
mov
xor
dec
lahf
arpl
fcmovne
mov
jecxz
lret
push
pop
les
test
sub
out
pop
scas
mov
mov
fnstenv
std
inc
outsl
mov
mov
cld
mov
fstpt
js
dec
push
ja
movsl
push
sub
or
adc
mov
test
mov
jecxz
fstpt
push
add
into
ret
mov
mov
xchg
push
xor
dec
sbb
lea
adc
mov
jmp
hlt
sbb
repnz
sbb
and
jne
push
or
xorl
pop
sbb
imul
dec
lds
cmp
push
sbb
rorb
push
pop
dec
mov
push
add
xchg
sahf
pop
xorl
dec
mov
sarl
lret
imul
cmp
mov
adc
aaa
dec
cmc
negb
fmul
lock
push
inc
cmp
inc
out
adc
push
mov
mov
movsl
pop
pop
stc
mov
repnz
xchg
movsb
mov
pushf
repnz
xchg
inc
das
adc
inc
mov
xor
loope
cmp
push
add
test
lds
incl
fcomi
and
jmp
das
xor
pop
push
xchg
shlb
lret
xchg
jns
pusha
mov
cmp
dec
cltd
push
adc
outsb
push
pop
movsb
jbe
lahf
rcll
mov
je
or
addb
les
xor
pop
mov
stos
ss
mov
mov
loop
test
push
or
mov
cltd
shrl
mov
pop
cmp
sbb
dec
jg
js
roll
bound
das
in
pop
jo
popf
mov
jno
jp
cmpsb
cmp
pusha
or
adc
push
imul
outsl
sti
les
cmp
fcmovne
and
mov
stos
jl
inc
or
out
test
call
into
mov
or
insb
mov
lds
shlb
jg
mov
sbb
mov
inc
jno
ja
xor
bound
jno
scas
lret
stos
imul
leave
or
cmp
adc
cli
mov
aad
mov
or
xlat
mov
mov
push
rclb
ret
lret
hlt
pop
addr16
cwtl
pushl
mov
repnz
xlat
rcr
cmp
mov
dec
hlt
cmp
or
rcll
in
lret
fwait
test
cwtl
in
pusha
adc
cltd
pop
arpl
push
leave
dec
and
sub
sar
dec
mov
es
call
inc
or
add
mov
sarb
shll
or
push
decl
dec
jbe
ljmp
mov
mov
shll
pop
int
xor
push
ret
pop
faddl
sbb
insb
frstor
and
jnp
jne
push
push
jge
sub
push
icebp
or
mov
ret
cmp
cmpsl
enter
inc
and
inc
xor
and
out
xchg
pushf
orl
fs
push
mov
js
sub
mov
mov
out
sbb
inc
sbb
inc
sub
repz
lahf
lcall
rcrb
fcomp
js
push
mov
fbld
pop
mov
shll
pop
xchg
push
jl
jle
add
xchg
aad
mov
push
je
adc
and
ficompl
jne
leave
xchg
shrl
sahf
std
and
mov
leave
mov
js
jmp
dec
adc
aaa
jl
pop
aad
push
or
stos
xchg
nop
nop
mov
xchg
in
jmp
test
shll
mov
in
push
std
mov
push
cmp
in
push
lea
rep
sbb
add
jl
add
pushf
sub
push
mov
adc
enter
leave
decb
or
aam
jge
pop
inc
or
xchg
pop
adc
jle
jb
xchg
call
cmp
bound
aam
pcmpgtw
aam
pop
mov
test
inc
mov
loope
dec
jne
jo
outsb
sub
in
aas
cli
clc
mov
and
jne
push
dec
pop
loop
mov
and
mov
mov
gs
jae
inc
pop
insl
aaa
push
in
or
orb
dec
inc
fstpl
xchg
mov
imul
fs
and
push
pop
jp
xor
in
sub
push
or
pop
sub
push
xor
xlat
pusha
pop
xor
aam
push
mov
adc
shrl
inc
orl
movsl
mov
mov
pop
jb
mov
xchg
push
outsb
mov
mov
push
aam
repnz
negb
iret
jno
in
sahf
push
sbb
pop
in
inc
std
jle
cmp
pushf
inc
pop
pop
sbb
test
dec
sbb
pop
imul
push
mov
mov
pop
mov
repnz
mov
jl
popa
push
xchg
push
jmp
into
lahf
jecxz
cmp
jmp
mov
ds
ret
pushf
testl
sub
cltd
fstl
lret
stc
sbb
push
xchg
faddl
enter
xor
les
out
push
sub
out
mov
xchg
push
xchg
pop
ds
xchg
scas
std
aam
xor
dec
test
fimuls
mov
add
xor
cmpsl
les
sub
xchg
add
jno
push
mov
fiaddl
push
inc
jp
or
jg
and
pusha
stc
sbb
sub
lcall
mov
or
frstor
push
dec
sbb
shll
shll
mov
in
adc
popf
xchg
pop
int3
ljmp
fldenv
push
pop
cli
pavgb
adc
dec
and
leave
je
mov
cltd
cmc
popa
les
xchg
lea
shlb
adc
xor
rcr
aas
pop
arpl
mov
pop
leave
movsl
test
insl
jbe
adc
test
push
pop
mov
sahf
jmp
rorb
inc
lods
sbb
shrb
adc
sub
add
rcrl
jle
scas
mov
jge
jns
into
mov
adc
or
jl
add
dec
inc
stos
hlt
jg
dec
sub
lods
or
fistl
shrb
sbb
enter
stos
insl
imul
jmp
sbbb
jg
cmpsl
inc
jmp
mov
test
mov
pop
nop
push
cmp
scas
sbb
lock
dec
fsub
icebp
xor
dec
push
fs
and
icebp
mov
push
test
fistl
push
push
out
vpminsw
lcall
and
cs
in
pushl
ret
push
mov
push
addr16
ror
jae
add
cmc
xchg
cmc
add
std
sub
in
jp
mov
mulps
jbe
cli
sub
sub
mov
adc
xchg
rcr
cmc
jne
les
imul
push
push
clc
jge
pop
decl
fwait
mov
loopne
nop
jne
lahf
cmp
and
pop
fsubrl
jl
jg
mov
fdivp
sbb
add
jb
repz
pop
scas
push
sub
test
ja
mov
push
movsl
pop
pushf
mov
sbb
enter
das
nop
sbb
cmp
adc
dec
dec
test
sbb
das
loop
adc
xor
je
movl
push
pop
and
stc
jae
cmp
inc
lods
fs
and
out
adc
pop
push
mov
pop
mov
or
test
int3
stos
sub
mov
mov
adc
in
pop
dec
mov
sub
pusha
rol
pushw
js
jmp
in
adc
subb
test
xor
test
adcb
inc
cmp
jbe
xor
shrl
sbb
push
push
cmp
pop
in
xor
or
mov
imul
inc
cmp
xchg
cmpsb
or
std
inc
adc
aaa
xchg
jl
mov
hlt
ljmp
cmp
ficomps
sbb
in
rcl
orl
insb
lahf
leave
divb
xor
aam
sub
add
mov
outsb
or
xchg
or
jns
outsb
jne
popa
inc
mov
mov
std
push
sarb
fadd
inc
int
or
add
test
mov
sti
arpl
or
or
push
call
mov
repz
cli
mov
std
inc
xchg
cmp
and
nop
fwait
xor
in
js
dec
nop
or
push
sub
ret
lret
adcl
jnp
out
xor
ja
hlt
sarb
sarl
add
jbe
jl
mull
inc
jno
xlat
push
and
and
xor
outsl
cmp
scas
sbb
cmp
dec
jo
pop
mov
inc
pop
in
mov
ss
push
xor
adc
pop
imul
pushl
xchg
cmpsl
mov
mov
dec
les
sub
push
xor
or
cmp
adc
pop
mov
pop
mov
js
int3
cmc
fs
and
add
push
dec
daa
aam
sub
decl
mov
in
and
pop
cmpb
mov
int3
or
pop
es
dec
in
adc
test
addr16
jp
ret
dec
push
out
outsl
mov
loopne
insl
cmp
shrl
mov
fidivl
popa
jae
int
xchg
or
and
popf
js
and
ljmp
inc
add
jbe
xchg
push
shlb
sti
insl
xor
mov
push
xchg
push
fbld
jbe
int3
pop
enter
es
popf
jp
or
push
pop
loop
jmp
mul
sbb
outsl
mov
xchg
loop
les
out
pop
mov
stos
rorl
pop
xchg
xorb
lcall
dec
adc
out
sbb
out
cs
sahf
sti
xchg
loope
rorb
mov
xor
mov
pop
dec
popf
pop
mov
and
or
lahf
mov
es
mov
in
lahf
aam
ja
sahf
dec
and
push
mov
push
notb
loopne
push
test
jl
cmpl
inc
add
subb
push
and
push
aam
xchg
rcll
pop
add
dec
bound
push
mov
test
push
push
add
les
lods
icebp
dec
js
loope
mov
mov
cmp
dec
sub
jmp
adc
xor
mov
jno
add
test
dec
ss
mov
lahf
stos
dec
add
pop
mov
stc
scas
or
cwtl
adc
bound
int
call
lcall
jp
sbb
andb
movsl
pop
xchg
push
nop
pop
xor
ficompl
jl
in
mov
fimuls
sti
ficoms
mov
xor
cmc
pop
mov
les
out
sub
xchg
sbb
call
sbb
mov
or
negb
out
pushf
pushf
inc
dec
fdivrl
push
lcall
push
pop
mov
push
sub
push
jb
cmpsl
sbb
int
add
frstor
cmp
pop
popa
and
dec
pop
out
sbb
and
adc
mov
andl
adc
pushf
jo
ror
jbe
push
sti
fildl
sbb
andl
scas
and
push
mov
fldcw
pop
sbb
jb
sub
sub
in
in
xor
inc
cli
pop
adc
lods
daa
clc
sub
arpl
out
sub
sub
fldcw
arpl
jmp
inc
mov
push
into
dec
pushf
add
ficompl
cs
dec
inc
adc
jl
and
adc
je
or
mov
and
mov
mov
and
jnp
mov
pop
call
insl
xchg
xchg
aam
add
addr16
cwtl
in
sahf
xchg
sub
push
sbb
cmp
int
pop
jae
mov
sub
aas
push
mov
lea
inc
xchg
cmp
and
stos
fsubrl
push
mov
mov
and
adc
mov
arpl
xor
sbb
add
jge
sub
mov
and
orl
fstpl
cmp
push
pop
ret
xchg
xchg
sbb
mov
stos
cmp
push
jp
lcall
outsb
mov
pushf
pop
pop
cltd
dec
xchg
push
cmpl
cld
leave
pop
dec
push
jnp
shll
dec
xor
xor
mov
inc
or
inc
insb
push
xchg
or
xorl
lods
in
cmp
out
cmp
xchg
hlt
cbtw
testl
rcrl
pop
or
clc
cmpsl
jns
fcoms
scas
xor
fsub
std
popf
test
push
lds
lods
and
sub
dec
je
lods
out
push
stc
sub
mov
cmp
or
push
dec
mov
inc
scas
mov
inc
jle
mov
roll
ljmp
paddq
mov
cmc
mov
and
push
jecxz
jmp
repnz
mov
popa
adc
xor
repnz
imul
mov
push
mov
xchg
cmpsl
or
or
sbbl
cs
les
mov
ds
stos
pushf
jg
push
pushl
cmpl
fildl
adc
pop
push
jl
adc
inc
pop
mov
shll
stc
adc
ja
ja
sub
dec
jmp
test
push
mov
mov
add
jne
and
push
add
or
xchg
das
andps
sub
ficompl
and
ret
push
andb
out
faddp
or
inc
mov
outsb
mov
push
lcall
sbb
xor
sub
mov
leave
insl
adc
pushf
fs
ret
lods
inc
mov
jmp
adc
test
xor
fmulp
sahf
inc
cmp
or
sub
das
iret
shll
jle
xor
or
mov
incb
cmpsl
mov
push
cmp
test
popf
mov
lods
push
cmp
cltd
push
xchg
inc
loop
repz
pop
jns
cmp
stos
jae
fs
push
outsl
and
in
or
int
int3
xor
scas
int
sbb
mov
mov
push
jl
push
xchg
je
dec
sbb
cmp
jno
test
mov
pop
xchg
push
jbe
jae
jb
not
pushf
repz
ficompl
push
test
pusha
pop
jp
cmp
out
mov
mov
insl
or
cwtl
xor
xor
repnz
adc
es
notl
cmp
jl
cmp
inc
jb
mov
add
mov
in
das
mov
adc
scas
cmovg
mov
xor
cli
inc
sub
das
add
lods
or
jmp
pop
test
dec
ret
sti
clc
lock
in
add
cmp
les
gs
bound
adc
gs
std
scas
hlt
adc
mov
jnp
mov
imul
sub
push
inc
inc
daa
pushf
add
mov
jl
xor
mov
test
or
pop
inc
mov
mov
nop
into
fcom
aas
push
mov
or
xor
jno
mov
icebp
or
fcom
adcl
lret
mov
int3
data16
int
daa
push
mov
pop
test
js
mov
cmpsl
mov
mov
mov
xor
call
jno
stc
insb
sub
xlat
js
inc
xchg
imul
inc
mov
mov
push
push
dec
sbb
aaa
mov
mov
sbb
aaa
in
mov
pop
adc
adc
call
out
adc
cwtl
aam
aaa
xchg
fadds
and
fwait
icebp
push
paddsw
in
and
and
or
mov
mov
dec
ret
jecxz
fwait
jg
lock
pop
cmc
add
xchg
lock
adc
fnstenv
add
jp
int
sub
inc
or
jmp
sbb
push
inc
inc
push
sbb
cmpsl
mov
mov
scas
loopne
aas
jg
les
out
cmc
adc
xor
ljmpw
dec
adcb
out
xchg
inc
iret
xorb
sbb
and
mov
or
mov
xorb
xchg
daa
xor
fs
push
in
xchg
push
adc
mov
pop
push
js
cmp
sarb
mov
xchg
in
xchg
fstl
push
or
pop
insl
popa
push
xor
xor
cmp
add
stc
iret
popf
lds
push
mov
pop
inc
fisttps
mov
sti
pop
xchg
lahf
mov
jne
incl
mov
add
popf
xchg
movsl
aas
mov
lret
sbb
fwait
insb
into
icebp
fdivrs
cli
sub
jecxz
adc
insb
pop
push
in
loope
xor
jg
jecxz
add
loope
jb
test
mov
sbb
sbb
stos
or
xorb
adc
stos
xchg
sbb
xor
xchg
push
and
ss
mov
push
fmuls
jge
movsb
push
int3
fwait
sbb
addr16
clc
int3
jnp
mov
fs
cmpsl
loop
mov
scas
sub
movsl
push
cltd
fldl
sub
lods
fucomi
push
cmpsl
out
repnz
inc
sub
inc
add
pop
lret
or
add
push
dec
jle
lds
mov
jp
sahf
xlat
movsl
jo
cmc
xchg
xchg
jae
sub
or
cltd
test
xor
mov
call
xor
cmp
fcmovbe
xchg
inc
or
shlb
cmpsb
pop
pop
out
jmp
sub
mov
push
outsl
and
jae
dec
popa
jecxz
aas
mov
mov
pop
imul
ja
xchg
add
pop
pop
mov
bound
ds
in
frstor
mov
mov
adc
cmp
xor
jmp
xchg
leave
mov
inc
mov
mov
push
jmp
test
nop
leave
or
sbb
insb
mov
repnz
push
push
jno
pop
pop
divl
aad
sbb
stos
lock
hlt
data16
test
aas
jb
idivb
sahf
xchg
xor
into
pop
xchg
imul
aad
pop
and
stos
and
jge
movsb
mov
xchg
stos
popf
or
insb
call
out
and
pop
loope
pop
mov
sub
movq
sbb
dec
jo
jle
jb
imulb
inc
add
fdivl
rcrl
ds
inc
xchg
lock
push
gs
adcb
xchg
fists
sub
xchg
movsl
aam
mov
in
das
hlt
xor
into
lods
jns
push
test
xchg
cmpsb
test
sub
out
inc
add
push
xchg
and
shlb
imul
add
inc
stc
into
movsl
or
xor
adc
add
push
push
jmp
mov
mov
pop
shlb
sahf
test
aad
sahf
xchg
lret
out
pusha
adcl
adc
pop
in
mov
out
je
in
push
cmp
icebp
jg
cmpsl
adc
push
mov
notl
adc
loopne
dec
xor
out
push
call
adc
mov
push
sbb
dec
int
testl
pushf
or
ret
insl
inc
sub
push
push
push
pop
pushf
pop
ret
sub
pop
jle,pn
jne
fwait
addl
cs
mov
iret
sbbb
mov
nop
dec
int
negl
outsb
testb
fldcw
arpl
push
movsl
jno
and
xor
mov
dec
pop
add
dec
aaa
sbb
jne
push
mov
mov
and
in
hlt
dec
cmpsl
test
dec
icebp
loop
fcmovnbe
push
inc
fisubs
out
adc
inc
inc
cmp
aas
iret
data16
movsb
dec
adc
cmp
dec
les
add
out
movsl
lea
sub
inc
leave
stos
push
inc
lods
out
push
stc
lock
dec
mov
mov
imul
add
lret
mov
testl
push
xchg
cwtl
jbe
loopne
pop
jbe
add
je
inc
mov
adc
xchg
adc
adc
and
sub
mov
xor
into
mov
sbb
and
cs
daa
fists
movsl
inc
or
push
dec
rorb
adc
or
stos
js
or
add
pop
inc
ss
pop
andl
movsb
in
jns
orb
cmc
jo
sub
jge
push
xor
insb
inc
add
add
xor
pop
orl
xchg
adc
aas
push
mov
mov
push
ljmp
fidivrl
fs
xlat
leave
dec
mov
sub
nop
loope
xchg
mov
outsl
lcall
xchg
mov
cmpsb
push
sub
adc
pop
mov
inc
test
sub
mov
mov
bound
add
dec
test
or
shrl
push
push
xorb
sub
and
mov
arpl
lret
cmp
je
jge
push
pusha
into
cs
sbb
jae
ss
jnp
fidivrl
dec
aaa
jno,pt
clc
jno
notl
fsubp
fwait
out
and
imul
xchg
sahf
lods
inc
mov
xor
mov
xchg
and
jp
push
ja
xchg
sbb
sub
sub
mov
inc
aaa
jb
xor
lods
mov
cmp
out
arpl
mov
fisttps
outsl
sub
sub
fists
je
cs
repz
movsb
push
cmc
jg
loopne
dec
call
ds
ret
cmp
jno
or
xchg
or
add
pushf
or
mov
or
and
dec
cmp
popf
adc
lock
cmp
push
mov
cmp
sbb
pop
or
xchg
shr
pop
push
addr16
pushf
lods
imul
mov
popa
jns
inc
dec
nop
sub
dec
dec
mov
sub
sub
push
fstp
pushf
jne
adc
jae
pop
pop
and
push
pushl
pop
popf
mov
mov
iret
inc
push
pop
inc
jno
cwtl
nop
or
hlt
out
repz
fs
or
ljmp
pop
cmp
orb
dec
jbe
mov
push
push
inc
push
cmp
mov
mov
fmuls
stc
jne
jbe
movl
sbb
rolb
pop
jne
sub
add
and
cmp
inc
dec
das
adc
in
rcll
inc
arpl
cmp
sub
pop
in
cs
popf
cmp
iret
js
aas
cs
xchg
mov
arpl
pusha
inc
adc
dec
push
mov
lahf
into
and
popa
dec
enter
ds
xor
in
daa
lea
pop
fcmovnu
aaa
mov
push
movsl
daa
lods
sahf
adc
dec
add
inc
and
imulb
jnp
stos
mov
xchg
aas
mov
sub
fwait
sbb
mov
test
xchg
sub
or
sbb
push
cmp
sub
mov
sbb
lahf
mov
jbe
int3
outsb
cmpl
mov
inc
sbb
out
out
cmpsb
mov
mov
es
add
mov
mov
dec
inc
rcrb
sub
mov
sbb
mov
scas
sub
mov
lret
pop
lea
mov
adc
mov
mov
enter
xchg
or
push
roll
push
push
sub
pushf
mov
jge
mov
push
mov
ja
dec
mov
xchg
add
shl
inc
cmp
lods
or
add
dec
daa
sub
jmp
daa
out
std
xor
dec
push
fstp
aad
in
mov
int
mov
push
mov
sbb
nop
mov
std
xor
daa
mov
jae
or
leave
sti
add
push
mov
aaa
sbb
in
xchg
jle
aad
cmp
popa
mov
dec
push
daa
mov
cmpsl
xchg
dec
mov
inc
fsubp
ficoms
mov
jle
add
xchg
test
push
stos
mov
xchg
jo
aaa
push
lods
and
xchg
mov
inc
lret
xchg
out
lret
mov
xchg
es
fsubs
pusha
mov
out
dec
push
cmp
inc
fisubl
jl
mov
sub
mov
leave
jecxz
xor
mov
jl
mov
mov
cmp
pop
stos
or
mov
cmpsl
dec
jae
js
xchg
push
xchg
clc
test
and
dec
mov
cmp
incl
inc
jns
or
mov
enter
add
sbb
mov
push
push
pop
decb
jae
cmp
ffreep
loope
xor
lds
pop
fiadds
lods
xchg
sbb
pop
mov
fwait
mov
arpl
fs
xlat
stos
mov
testb
dec
pop
adc
push
jp
sub
es
rclb
and
seto
mov
into
stos
jp
mov
inc
jg
inc
push
testb
inc
lahf
test
inc
adc
sub
add
insb
dec
pop
dec
adc
xor
jnp
inc
push
or
ret
and
aam
adc
pop
mov
add
in
in
and
das
push
mov
shlb
int3
mov
mov
xor
mov
cmpsb
mov
lahf
mov
ffreep
adc
imul
inc
sub
or
inc
call
loop
push
sti
mov
pop
push
pop
mov
mov
xchg
nop
scas
jns
in
add
jne
inc
mull
je
inc
lods
and
rorb
subl
mov
jle
add
xlat
push
mov
movsb
cmpsl
clc
fisubs
xchg
inc
lret
loope
in
push
jae
mov
fisubrl
push
fists
sbb
loop
adc
jnp
sahf
int3
mov
imul
mov
cmpsl
inc
xor
pop
inc
inc
jmp
jmp
cltd
lods
mov
call
adc
cmpsb
add
push
mov
cmp
mov
fldcw
sbb
inc
or
add
push
mov
cmc
push
shlb
dec
push
mov
sar
mov
data16
pushf
es
ja
xlat
add
jmp
mov
xchg
xor
imul
pop
mov
movsb
je
in
in
test
test
mov
cmp
inc
xor
cmp
std
push
mov
cmp
dec
decl
out
dec
inc
mov
out
mov
jge
mov
xor
cmp
fdivl
cmc
and
adc
mov
sub
mov
cmp
out
popa
xor
aad
xchg
push
es
pop
fdivrl
xchg
xchg
out
push
iret
cmp
add
std
bound
add
adc
mov
mov
sti
adc
pop
push
ja
cmp
rolb
jecxz
daa
fcom
ljmp
fadd
sub
cmc
movsb
aam
cmp
iret
jne
adc
add
sbb
jbe
fld
jge
js
aas
sub
xchg
popa
dec
lcall
xor
mov
dec
ret
add
sbb
popf
cmp
jns
stos
test
frstor
aam
aas
icebp
fbld
cmp
push
jb
int3
hlt
pop
rcrl
push
dec
and
sub
jmp
inc
mov
xchg
outsl
inc
fnstenv
mov
out
jp
cwtl
dec
ja
jne
popa
stc
test
aaa
aas
lods
es
add
mov
imul
xchg
int3
and
inc
mov
cwtl
push
je
jl
outsl
and
sub
lret
shlb
lods
daa
sbb
clc
in
insl
push
mov
push
je
cmc
inc
pop
out
xchg
mov
leave
gs
ss
mov
dec
out
xor
dec
add
cmpl
mov
sub
pop
push
pop
mov
aas
jl
xchg
divl
xchg
fbld
mov
xor
inc
repnz
mov
into
mov
std
daa
shl
push
clc
ret
jb
adc
ret
push
jno
movsl
sbb
xchg
sbb
sub
or
mull
bound
test
insl
shll
leave
loop
and
push
and
ljmp
inc
movsb
add
shrb
dec
xor
jmp
jg
bound
sbb
imul
jle
cmpl
pop
push
mov
sub
push
jmp
test
lods
pop
dec
jne
inc
call
pop
cmp
popf
shrb
xor
loopne
repnz
aas
mov
or
ffreep
out
mov
cmp
xchg
scas
sarl
pop
xor
lcall
pop
lock
adc
or
int3
jl
aas
outsb
jle
jne
mov
add
and
lcall
jmp
xor
add
sbb
scas
pop
pop
dec
int
cmpb
call
cmp
roll
add
xor
test
fsubl
pop
aaa
cmp
xchg
xor
push
push
aas
jle
aam
pop
aas
sahf
adc
js
push
adc
cmp
mov
sbb
loopne
xchg
cwtl
into
pop
add
pop
mov
xchg
dec
push
les
rcll
outsl
adc
imul
jl
and
pop
sarl
cli
aad
xlat
repz
jnp
pop
mov
sbb
adc
subb
outsb
pop
mov
xchg
cli
xchg
imul
dec
sbb
mulb
or
xchg
int3
lds
sub
pop
add
sbb
mov
and
retw
loop
pusha
jns
imul
ret
or
adc
sbb
sbb
dec
jnp
lcall
push
cli
int3
cmp
fwait
mov
jg
inc
out
mov
pop
int3
pop
cmp
lret
scas
into
add
xor
stos
aaa
add
leave
pop
out
pop
pusha
pop
aad
fcomps
push
addr16
aam
or
cs
mov
xchg
loop
push
mov
jl
pop
ret
sbb
jb
es
fmull
add
shrb
mov
xchg
adcl
pop
ja
jns
push
or
je
pop
cmp
sahf
and
ljmp
mov
seto
mov
lea
mov
rcrl
mov
sbb
fmul
lcall
sbb
scas
lret
addr16
mov
push
mov
pop
mov
sbb
test
dec
in
jmp
sarb
fsubp
cmp
inc
test
ss
pop
test
repnz
mov
pop
cmp
mov
subl
jnp
xchg
inc
movsl
cmp
dec
mov
dec
pusha
sahf
and
mov
sbb
lret
cltd
xlat
push
dec
fistps
cmp
sbb
or
out
cwtl
mov
dec
repnz
add
inc
out
aas
lods
add
jge
mov
xchg
dec
push
xor
sbb
inc
inc
pop
mov
sarb
xchg
loopne
fimull
adc
loope
pop
test
imul
clc
daa
std
dec
cmc
push
pop
sbb
jae
dec
insb
adc
mov
cmpsl
test
push
xchg
xor
sub
mov
negb
dec
rorl
out
movsl
addr16
dec
lods
adc
mov
test
xchg
call
aam
mov
cli
out
jnp
and
data16
out
shll
mov
in
push
xor
sub
xchg
stos
inc
add
jle
shr
mov
xchg
test
pop
mov
jmp
or
mov
inc
cmp
repz
aaa
mov
movsl
outsb
adc
scas
fincstp
mov
dec
cmpsl
dec
sti
push
shlb
int
cmp
test
adc
idivb
mov
adc
xchg
sahf
push
das
add
cmp
add
aaa
ret
mov
iret
push
cs
into
mov
je
and
pop
pop
arpl
loopne
and
push
call
addr16
xchg
sub
cwtl
bound
mov
call
sub
stc
out
pop
sub
xchg
in
int
push
pop
adc
daa
adc
push
sub
cmpsl
filds
fwait
repnz
aas
mov
pusha
sub
sbb
xchg
sbb
mov
popl
cmp
cmp
sbb
push
scas
and
mov
fcmove
imul
cld
bnd
out
fucomp
cmp
out
nop
or
and
frstor
jb
test
cwtl
cmp
inc
jae
lds
adc
clc
jb
es
sbb
and
test
loopne
cmpsb
mov
xchg
jo
mov
cwtl
xor
out
mov
ja
incl
pop
xchg
sbb
filds
outsl
adc
sub
in
mov
xchg
dec
mov
fmuls
gs
int3
pop
pusha
out
int3
mov
out
push
cmp
push
or
adc
add
cmp
adcb
pushw
cmp
gs
jno
in
cs
imul
out
out
mov
lods
jo
pop
movsl
int3
dec
xchg
add
push
in
xchg
jp
dec
mov
mov
bswap
out
pop
imul
push
in
pop
mov
mov
in
ret
fnstcw
mov
and
xor
jmp
aas
rorl
xchg
sbb
lcall
mov
mov
mov
cld
adc
loop
fcompl
les
movsb
dec
mov
add
sbb
xchg
xor
cmp
sbb
imul
fisubs
mov
push
push
sub
xor
push
or
and
fidivs
data16
ja
loope
scas
push
xchg
jg
test
test
sahf
imul
or
push
rorb
mov
mov
push
xor
sbb
sbbb
scas
loopne
jae
adc
cmp
xchg
mov
enter
mov
adc
mov
cmp
jle
xchg
and
fstpt
leave
mov
mov
mov
ljmp
fwait
in
push
loop
ret
clc
add
cmp
pushaw
cmpsb
je
cmp
xchg
repz
push
test
insl
pop
xor
fcomps
sbb
int3
xchg
int
jns
add
jae
cmp
cmpsb
out
lahf
or
push
add
mov
mov
sahf
dec
decb
jle
icebp
push
or
mov
in
jl
push
xor
iret
jnp
xor
outsb
xlat
sub
test
int
mov
push
xlat
adc
mov
cmp
fcoms
stc
test
mov
ret
add
or
add
mov
jb
into
mov
xchg
ljmp
push
std
test
repnz
ret
leave
pop
and
cmp
imul
sbb
cmp
push
xor
mov
xlat
push
rcl
jl
cmpsb
fimull
push
cmp
pop
cld
ja
push
jo
push
daa
add
insl
mov
xor
or
jp
aas
cmp
stc
mov
insb
mov
gs
jb
pop
cltd
add
and
loope
add
int
push
fdivs
rcll
jg
jp
nop
shlb
out
pop
pusha
or
sbb
shl
add
or
jg
xchg
leave
xchg
pop
orl
xor
repnz
stos
out
into
sub
ret
stos
xlat
sub
add
lret
dec
icebp
push
lcall
sbb
and
pop
jg
mov
mov
or
sahf
es
pop
push
dec
fwait
test
aam
pop
sbb
pop
jne
xchg
lret
jmp
mov
rcrl
pop
sub
insl
inc
mov
outsb
push
ja
xchg
cmpl
mov
fdivrp
add
mov
mov
cmpsb
scas
dec
ret
xor
xor
out
dec
movsb
pop
xchg
loopne
pop
data16
bound
subl
cmpsb
push
push
inc
jl
or
cmp
adc
and
outsb
mov
and
inc
cli
mov
in
mov
roll
stos
in
push
int3
arpl
cli
cmp
mov
push
inc
int3
jecxz
fs
lds
in
loopne
pop
jecxz
out
stos
cmp
test
dec
cmpsb
mov
pusha
cmovnp
add
test
cmpb
dec
push
pop
js
push
mov
lock
push
push
enter
push
adc
adc
mov
dec
lcall
iret
orb
jbe
iret
xchg
in
movsl
push
aam
mov
push
sbb
outsb
or
rolb
scas
push
mov
loope
jecxz
roll
cmp
ss
mov
ret
push
dec
cmp
push
dec
add
ss
lods
dec
subb
scas
push
cs
and
es
aam
inc
std
push
das
sti
aad
insb
lods
int3
mov
rorb
xor
adcl
jb
lods
fcomps
jg
mov
cwtl
push
lret
popa
int3
shlb
or
and
push
test
mov
lret
cmp
pop
test
or
xor
cmp
xchg
jmp
sbb
insb
call
clc
pop
adc
fwait
cmp
ret
pop
mov
sti
movsb
outsb
out
xchg
mov
insl
push
daa
andb
loopne
cmp
cwtl
call
cmp
repz
bound
arpl
popf
jge
or
lock
in
jle
add
pusha
loopne
subb
jge
or
sub
or
inc
cmp
sub
int3
mov
jns
sbb
ds
xchg
jo
leave
js
xchg
cltd
adc
clc
fsubrl
imul
and
addb
in
dec
push
outsl
sub
dec
outsl
sub
int
push
xor
sbb
add
xor
lahf
add
push
sahf
daa
jg
xchg
imul
sbb
nop
fs
or
out
lods
inc
push
std
mov
sarb
popa
imul
mov
push
shll
imul
jle
scas
cli
and
int
ds
push
rcll
jge
lcall
xchg
lock
faddl
xchg
loope
hlt
ds
or
paddusw
xorb
and
dec
mov
mov
inc
imul
loop
sahf
loopne
inc
mov
push
lret
xchg
pushl
adc
shlb
xor
adc
jle
pop
pop
inc
sbb
add
inc
es
xchg
fbstp
mov
mov
cmp
pop
int
outsb
add
pop
sub
iret
xchg
jae
lret
jbe
cmc
cmpsb
scas
in
sub
popl
or
or
add
nop
fnstsw
repz
or
xor
repz
into
mov
xchg
test
add
adc
xchg
ds
mov
or
add
cmp
jbe
cmp
shlb
pop
stos
pop
cmpsb
out
mov
scas
outsl
push
mov
sbb
pop
add
stos
cli
loop
push
pop
inc
pop
pop
dec
fnstsw
mov
scas
arpl
cmp
jp
mov
ljmp
pop
dec
cmp
ss
xchg
jns
add
push
cltd
je
in
mov
xchg
jle
gs
sbb
xchg
push
xchg
pusha
push
jecxz
jo,pt
mov
pop
in
jmp
jecxz
inc
leave
jns
push
cli
xlat
das
leave
adc
repnz
cmpsb
lahf
adc
xor
jmp
out
and
push
add
out
or
push
dec
dec
push
iret
dec
sub
mov
jnp
cmp
stos
mov
mov
lret
adc
clc
cwtl
xorb
in
aad
js
adc
xor
pusha
mov
dec
xchg
mov
dec
mov
rcll
mov
ds
xor
add
lret
pop
daa
cs
add
inc
jnp
fiadds
dec
enterw
mov
in
mov
jne
out
mov
dec
mov
and
out
insb
pop
pusha
jge
adc
xchg
getsec
notl
and
mov
jb
push
in
adc
dec
mov
inc
in
bndldx
lods
stos
imull
xchg
je
push
sarb
adc
stos
mov
mov
dec
lods
mov
fwait
pop
fcoml
pop
inc
dec
mov
mov
arpl
mov
xlat
jl
jno
mov
pop
or
cmp
add
add
sbb
sbb
pop
rolb
mov
inc
sbb
add
arpl
mov
int3
insb
fisttpl
sbb
rclb
cmp
jp
ja
mov
fs
ret
mov
scas
cli
adc
xor
in
and
lea
and
push
pop
aam
call
data16
xorb
fadd
mov
sub
pop
in
push
popa
bound
ja
jns
fwait
adc
sarb
mov
push
sub
cmp
lds
sarb
rcll
lret
adc
xchg
cltd
xor
pushf
jo
adc
hlt
lahf
lret
push
add
jg
xlat
sub
add
jo
loopne
and
out
and
lret
sub
out
popa
inc
lea
into
push
in
mov
xor
ss
cmp
adc
jbe
loopne
cmpb
xchg
sahf
int3
mov
aaa
and
xchg
mov
or
sub
push
out
lidtl
mov
fidivs
mov
mov
ds
sti
pop
imull
pop
div
outsl
inc
inc
notb
xor
sbb
in
sbbl
jge
push
popf
inc
sbb
pop
ljmp
lods
xlat
dec
lea
and
lods
lret
rolb
daa
je
xchg
das
inc
mov
push
mov
pop
fists
mov
mov
pop
push
dec
subl
adcb
xorl
push
mov
pop
jp,pn
push
pop
jl
xor
dec
xorl
gs
push
jmp
in
jmp
or
addr16
xchg
cmc
addb
push
mov
movzbl
mov
scas
push
push
loope
pop
fstpt
mov
aad
outsl
outsl
jle
mov
dec
dec
pop
push
je
pop
xchg
adc
pop
js
cli
mov
mov
js
adc
sbb
sbb
push
fisubs
into
ja
enter
dec
push
xor
gs
jecxz
mov
xchg
sbb
and
ror
and
lods
or
pusha
jne
dec
cmpsl
insl
outsl
out
rclb
adc
push
out
pushl
mov
add
mov
lds
mov
cmp
mov
or
test
cmp
inc
ljmp
inc
std
in
add
ret
dec
inc
inc
test
popa
ret
ret
jne
popa
cltd
in
ret
sub
inc
pop
fimuls
scas
movsb
mov
sub
rol
ret
call
bound
xchg
popa
mov
out
sbb
mov
ljmp
icebp
dec
jne
mov
mov
mov
rcr
rorl
xchg
add
in
mov
out
fmulp
shrl
ret
xchg
ficomps
jae
inc
pop
cs
adc
sbb
ret
call
stc
lahf
test
je
push
jbe
out
movsl
shrl
cmpsb
fiaddl
xor
sub
cmp
fwait
and
jecxz
jno
xchg
stos
outsl
lods
fstp
aad
sbb
sub
jbe
clc
or
insb
scas
add
fidivrs
outsb
jns
lods
std
cmp
js
out
stc
insl
push
inc
adc
inc
jns
lahf
imul
jecxz
das
pusha
inc
adcl
int
dec
xchg
jb
pushf
dec
jo
mov
je
ljmp
mov
fstpt
mov
sub
lea
pop
inc
lds
lcall
mov
dec
rcl
loopne
lods
cmp
pop
fistpll
mov
int3
mov
shr
das
dec
or
test
sbb
pop
mov
pop
fmull
popa
xchg
mov
aad
push
mov
mov
aam
jl
mov
aas
mov
aad
or
cmc
ret
in
lea
xchg
or
cli
mov
jmp
popl
sub
ds
loop
lret
nop
in
pop
test
mov
movsb
xchg
inc
mov
cmpsl
movsl
xlat
push
ds
stos
or
cmp
daa
cli
add
insb
ss
or
dec
pop
dec
sbb
decb
jns
es
xchg
lea
fmull
or
loop
mov
scas
dec
imul
push
sbb
imul
dec
scas
fdivr
adc
or
hlt
nop
push
lret
xchg
push
lods
cli
or
adc
insb
jbe
cmpsl
jno
outsl
sbb
jbe,pn
aas
std
mov
gs
nop
ja
and
jb
lahf
xchg
inc
and
imul
repz
sbb
sbb
sahf
adc
je
pop
cwtl
mov
jb
outsl
icebp
dec
cli
sti
in
dec
lcall
xchg
repz
ret
sbb
or
cwtl
or
hlt
dec
and
pusha
and
ret
mov
push
mov
or
mov
scas
xor
xchg
bound
dec
adc
pop
xchg
mov
lds
ss
push
repz
jle
mov
pop
push
popa
ljmp
stos
adc
jno
stc
stc
stc
mov
test
andb
aas
movsb
into
test
in
negb
mov
ja
mov
pause
mov
stos
stos
push
cmpsb
pop
test
pop
or
add
scas
ds
ret
inc
ljmp
cmp
iret
xchg
ret
or
jg
sbb
mov
scas
popf
adc
fsubl
cmp
fwait
gs
daa
lds
push
push
add
xchg
push
and
mov
add
mov
int3
push
sbb
addb
fwait
dec
out
orl
mov
ret
jns
aam
cvtpi2ps
lahf
es
xchg
int
pop
cmp
xor
dec
inc
aam
push
pop
mov
sub
fisttpll
mov
pop
mov
les
push
lahf
fsts
fstpl
jmp
and
ret
sbb
cwtl
ret
cwtl
cmc
stos
js
mov
inc
push
mov
jnp
sub
mov
idivl
pop
push
and
clc
hlt
sbb
push
pop
aam
cmpsl
dec
filds
or
dec
insb
push
shlb
dec
and
test
sbb
lcall
mov
and
js
adc
or
test
jo
sbb
movb
negl
jle
stos
cmpsb
push
out
movsl
out
and
mov
inc
fsubrp
inc
clc
out
pop
outsl
fnstcw
in
fadd
pop
push
out
lods
std
ficoml
test
or
adc
add
dec
xchg
out
mov
sub
sub
testb
es
loopne
sbb
mov
hlt
pushf
je
ljmp
ret
mov
jecxz
fsubrs
sub
bound
pop
in
mov
out
dec
les
adc
sbb
mov
mov
cmp
sbb
push
push
push
sub
jae
xchg
scas
mov
mov
scas
rclb
bound
mov
stc
mov
dec
lret
xor
rcrb
xlat
sbb
out
mov
int3
push
imul
cltd
lret
les
aad
mov
push
pop
cmp
into
mov
ljmp
pop
shll
and
dec
sbb
mov
jae
mov
pop
enter
cmpsl
mov
mov
adc
pop
in
push
mov
outsb
std
inc
shlb
xchg
stos
jl
push
imul
push
inc
fnstsw
out
pop
pop
lcall
cmp
les
cmp
fwait
lret
icebp
int
adcb
mov
adcl
mov
test
inc
sbb
or
and
add
ja
push
pop
xchg
dec
enter
das
sub
es
fsubp
mov
jp
movsl
sub
je
ja
in
les
jmp
scas
insl
cltd
xchg
arpl
mov
inc
pop
fs
jmp
mov
sub
ret
aam
xchg
push
sahf
jns
mov
enter
addl
push
cmc
mov
dec
lods
icebp
fcomi
sub
mov
stos
push
or
ret
inc
jns
inc
into
scas
cmp
dec
in
jg
mov
jge
mov
mov
mov
push
adc
std
loop
dec
jo
call
push
xor
pop
iret
or
repnz
fldl
lea
xor
xchg
fstl
pop
aaa
dec
xor
dec
inc
pushf
adc
and
inc
mov
adc
out
ljmp
lea
and
cli
sti
cmp
mov
out
jg
addr16
cmp
jbe
fs
and
inc
imul
xchg
xchg
or
loopne
aad
sti
inc
scas
inc
pop
or
pusha
mov
fdivs
mov
sbb
pop
adc
jmp
add
fcmovnu
or
push
and
sbb
dec
outsb
jbe
aaa
mov
or
push
fbstp
mov
ret
repz
cmp
xchg
jmp
sbb
fisubl
adcl
push
repz
outsb
inc
pop
xchg
testb
xor
mov
mov
inc
pop
mov
lret
insb
mov
mov
scas
jo
sbb
div
dec
jnp
lods
adc
sbb
pop
sbb
in
test
rcrl
cld
sub
cmpsb
push
aam
je
addr16
in
push
idivl
push
jmp
repnz
cld
andb
cmp
cmpsb
roll
dec
cmp
adc
pop
ltr
outsb
mov
push
clc
push
cmp
sahf
shlb
mov
dec
outsb
in
mov
adc
cmc
or
and
and
sarl
sbb
addr16
lods
shlb
pop
int3
pop
sbb
jmp
scas
outsl
das
cmp
mov
mov
ret
cmpsb
rolb
andb
jb
mov
inc
out
xor
insl
sub
and
add
adc
ficomps
fwait
stc
mov
push
sub
xchg
xchg
and
repz
test
inc
lea
int3
arpl
ljmp
push
rcll
add
in
icebp
push
inc
pop
test
test
lds
mov
fs
sbb
loope,pt
push
clc
xor
mov
cmp
mov
dec
neg
rolb
fisubs
jb
and
add
jmp
add
mov
and
test
push
jg
push
dec
and
sbb
fbstp
aas
xchg
sbb
insb
nop
movsl
imul
cli
in
ret
sub
ret
sar
sub
stos
dec
addl
and
or
sbb
cmp
xchg
clc
xchg
lea
pop
test
sub
jle
outsl
jmp
sub
and
mov
outsl
mov
sub
jl
push
adc
jo
es
addr16
test
arpl
ret
push
adc
jnp
enter
pushf
and
fs
lahf
fs
stos
and
ds
cld
loope
int
fwait
pop
mov
fndisi(8087
call
mov
adc
sub
pop
mov
outsb
or
aad
lods
fwait
mov
push
out
sub
sbb
mov
mov
xor
cli
inc
jnp
inc
jecxz
add
loop
xor
jecxz
sub
out
pop
lods
dec
out
shll
cmp
ss
shrl
jo
ret
push
arpl
add
insb
adc
add
movsb
lods
mov
mov
xchg
ljmp
stc
jae
push
insl
sub
mov
mov
ss
das
inc
in
cmpsl
mov
mov
sub
in
int3
jns
iret
add
imul
in
push
inc
cmp
ljmp
mull
mov
pop
dec
add
add
iret
xchg
cmc
pop
sub
or
jmp
or
dec
pop
out
xor
fisubrs
clc
mov
sahf
xor
sub
adc
sbb
movsl
inc
mov
in
je
mov
sub
push
out
jge
jmp
mov
xor
int3
fdivrl
pop
jae
cmp
sub
sbb
xchg
sub
sti
dec
insl
or
jae
xor
pop
arpl
sbb
roll
nop
in
fdivrl
ljmp
das
sti
mov
adc
sub
cs
imul
push
jae
stos
out
cli
ror
rcr
int3
push
loope
pand
sub
sub
cmpsl
pop
aam
mov
das
push
inc
sbb
mul
in
and
negb
scas
bound
or
cltd
or
divb
pop
pop
pushf
xchg
out
mov
mov
gs
dec
or
and
pop
aam
pop
push
mov
pusha
sub
inc
sbb
mov
inc
sub
shrb
notb
sub
sti
insl
push
mov
mov
cmpsl
cli
in
popf
loopne
jecxz
xor
jmp
divl
test
pop
push
js
cwtl
mov
dec
imul
lods
pop
jbe
int3
test
add
mov
xchg
sti
aad
stos
jnp
mov
imul
aad
cmp
test
cmp
loop
mov
hlt
adc
test
std
mov
and
sub
fbld
lods
ljmp
addr16
repz
jmp
ret
xlat
out
inc
les
gs
out
jmp
pop
pusha
adc
xchg
ds
cmp
pop
pop
sbb
lss
xchg
jl
in
xor
inc
clc
lds
push
test
mov
popa
cmp
adc
rclb
cmp
test
mov
aad
sub
jp
or
pop
icebp
mov
out
ds
icebp
cmp
ja
int3
fsub
out
les
clc
ret
mov
mov
dec
push
sbb
out
jns
jecxz
sub
add
and
mov
std
push
jnp
inc
mov
cmp
or
xchg
push
xor
sbb
mov
lret
adc
inc
cmpsl
pushf
ret
mov
mov
mov
lds
xchg
mov
xchg
call
loop
int3
inc
gs
mov
fnstenv
shll
je
divl
pop
daa
add
pop
push
hlt
add
sbbb
mov
fisubrl
inc
xchg
insb
mov
pop
scas
scas
idivb
cmp
mov
popf
scas
stos
loope
xchg
in
and
pop
xor
and
stos
rorl
add
jnp
dec
dec
xchg
lret
or
mov
xchg
cmp
and
push
dec
daa
and
and
xlat
scas
push
push
inc
add
mov
into
inc
mov
mov
dec
movsb
fmull
sbb
arpl
fwait
pop
fcmovne
daa
scas
in
fistpl
cmc
into
fcoml
call
cmp
mulb
xchg
xchg
jne
rcll
out
cmpsb
mov
insl
sahf
pop
out
and
insb
movsl
repnz
xor
xor
into
jb
loope
inc
mov
fcmovu
xchg
jnp
sub
out
pop
adc
xchg
mov
cmpsl
xchg
and
mov
and
repnz
ljmp
jbe
dec
xchg
add
movups
out
xchg
push
or
and
inc
gs
in
lods
lahf
mov
stos
cld
sbb
xchg
pop
xchg
sbbl
mov
stc
lret
and
movsb
movsb
ljmp
mov
test
jmp
out
cmp
pop
pop
popa
push
jge
cwtl
xor
or
jb
sbb
les
adc
pop
mov
imul
lods
sbb
mov
jne
or
movl
inc
insb
mov
fcomp
ds
fiadds
xor
daa
and
sti
xor
lret
bswap
ljmp
adc
negl
iret
add
jae
movsl
lods
imul
test
mov
leave
mov
out
cwtl
xlat
in
and
adc
lret
shl
mov
jne
inc
daa
setge
push
jp
aas
dec
mov
aam
or
sub
sbb
bound
cmpsl
pop
xchg
cmp
test
pushf
mov
push
cmp
inc
jb
push
enter
in
test
inc
dec
inc
xchg
les
pushf
pop
lock
lods
mov
shrb
mov
out
push
aas
xacquire
clc
inc
arpl
out
cmp
iret
xchg
je
popa
subl
mov
and
mov
enter
es
adc
cmc
mov
mov
jb
ja
in
jmp
and
mov
mov
xchg
mov
xor
jo
rcrl
dec
daa
test
in
rcrl
mov
jae
rcll
dec
shlb
loope
sub
adc
std
jg
push
lock
pop
pop
or
adc
repz
push
inc
and
shl
inc
xchg
jmp
sub
leave
lcall
loop
mov
in
lea
adc
aas
outsl
mov
xor
out
push
add
iret
sub
sub
daa
xchg
outsb
fcomps
sub
sub
rolb
dec
pop
leave
jnp
ja
mov
jae
xlat
mov
std
sbb
imul
outsl
cli
sbbl
fwait
nop
arpl
inc
jecxz
or
inc
mov
adc
lret
add
emms
push
fnstcw
mov
push
jle
sti
mov
cmp
jns
sub
inc
stos
and
mov
pop
sbbb
push
pop
or
add
pop
clc
mov
sub
jb
dec
cmp
and
xchg
scas
add
adc
repz
bound
dec
inc
arpl
test
mov
aaa
add
ret
jne
pop
sti
in
and
xchg
add
lcall
and
and
mov
cmc
test
cmp
and
fstps
int3
movsb
sbb
sbb
lods
aam
cltd
daa
mov
cmpsl
push
sbb
push
inc
enter
pop
jno
cs
mov
out
cltd
in
cmp
or
adcl
mov
icebp
dec
loopne
and
xor
test
jb
sbb
mov
mov
daa
push
pop
jnp
jg
or
iret
pop
cmc
push
jne
mov
sahf
mov
or
push
lahf
movsl
nop
jg
push
rcrl
pop
sti
shrb
dec
inc
fsubs
add
mov
cmc
repz
test
in
mov
test
push
fs
jb
cmp
adc
bound
mov
jae
jecxz
xchg
mov
dec
bnd
or
mov
in
xchg
aad
ret
sbb
lcall
add
mov
dec
lds
xor
call
pop
cmpsb
scas
cltd
push
cmp
addr16
jae
les
push
pminub
pop
ret
imul
test
inc
jb
push
pop
sbb
andl
divb
adc
fiaddl
cmc
cli
shlb
mov
ja
add
lock
mov
mov
dec
je
jle
xor
xor
fnstcw
jge
sub
and
xor
and
and
dec
and
push
mov
pop
int3
xor
ljmp
xor
dec
addr16
jb
scas
jbe
repz
nop
cmp
xlat
jmp
xchg
cmp
dec
repnz
sahf
fistpll
mov
sbb
inc
test
jae
xor
addr16
andl
jo
test
or
jg
das
out
loop
and
cmp
mov
imul
inc
pop
mov
in
xor
mov
sub
sbb
insb
jl
mov
adc
or
pop
les
aad
inc
movsb
nop
mov
mov
xchg
shrl
add
bound
xchg
dec
mov
jg
lea
bound
lods
jg
mov
test
call
inc
sub
icebp
js
das
movsl
jecxz
or
and
divb
mov
ss
sub
jns
aad
jl
and
les
fwait
push
outsl
jge
dec
xor
outsb
mov
jmp
jns
fildll
pop
mov
mov
push
xchg
or
jne
push
mov
test
xchg
pushf
imul
test
fs
and
mov
jge
adc
imul
iret
pop
scas
add
xlat
rorl
lock
lods
je
mov
jb
pop
lock
mov
push
jmp
outsb
mov
rcr
push
jp
and
mov
push
popf
popf
and
xchg
sti
or
popa
fnstsw
sub
fimuls
sbb
andl
inc
jo
inc
or
and
push
enter
sbb
int
lea
sbb
shl
stos
xlat
in
cltd
jnp
aam
push
adc
clc
and
test
mov
jg
pop
and
or
test
sbb
push
fwait
addb
in
sub
mov
adc
or
jbe
push
pop
ret
and
and
aam
andb
les
xchg
mov
clc
adc
out
xchg
jmp
push
daa
dec
nop
mov
push
or
cwtl
xorb
dec
icebp
xchg
lea
mov
ja
pushf
lock
scas
out
jmp
add
cmpl
int
inc
out
jne
sbbl
add
jno
jmp
cmp
call
out
cli
mov
dec
cmp
loopne
testl
arpl
fisttps
stos
cmp
push
cmp
into
pop
pop
es
sbb
enter
xchg
in
or
dec
scas
inc
aam
jbe
mov
jl
subb
loopne
ret
pmaxub
dec
dec
add
and
fcomp
lock
in
inc
cmc
sub
xchg
inc
out
push
scas
mov
bound
xor
rclb
lock
sbb
fxch
cs
sub
mov
repnz
xor
and
les
ja
call
adc
jecxz
add
mov
pop
sti
ret
mov
lods
bswap
movl
in
cs
xchg
movsl
sbb
mov
pop
adc
or
pop
jb
or
std
pop
dec
mov
cli
movsb
fwait
xchg
test
shrb
push
movsl
mov
stos
repz
sbb
xor
adc
jg
imul
mov
mov
loopne
dec
repz
and
insb
jae
andb
pushf
shrl
jns
jle
push
lock
lea
cwtl
std
cmpb
mov
and
fsub
repz
mov
push
out
lcall
jo
out
adc
cltd
jno
adc
push
jae
mov
or
imul
aad
add
insl
std
ficomps
repz
xchg
xchg
xorl
sbb
add
mov
inc
sbb
push
mov
sbb
ljmp
rclb
lds
mov
nop
push
xchg
icebp
decl
nop
jl
or
shll
dec
mov
cs
cmp
lcall
jne
jecxz
xor
pop
dec
sub
lret
fisttpll
pusha
movsl
or
shlb
cmp
scas
roll
hlt
mov
mov
pusha
mov
insb
jp
xchg
mov
pop
shrb
je
cwtl
and
jecxz
stc
mov
scas
add
add
imul
stos
aad
sub
push
pop
push
cmp
in
xorl
xchg
dec
dec
addb
push
push
add
cmp
popf
cmp
xor
enter
aas
add
sbbl
mov
mov
xchg
and
cmp
int3
cs
popf
push
cwtl
lret
sub
or
dec
call
jo
xchg
lahf
xor
fidivl
sarb
iret
sub
cs
jbe
jno
int
sbb
test
mov
and
sub
cmp
xor
mov
push
sub
mov
xchg
jo
sbb
shrb
ret
cmp
push
cmp
loop
mov
mov
mov
and
cli
pop
int3
lret
cld
imul
mov
or
imul
cwtl
sbb
in
xchg
push
fdivrp
fwait
mov
cltd
imul
dec
pop
shl
jns
js
jnp
jecxz
cmp
sbb
ret
pop
addr16
in
test
pop
nop
mov
jnp
iret
out
insl
cmp
pop
daa
sub
adc
push
inc
and
add
aad
mov
mov
adcl
cs
pop
cli
or
into
mov
pop
push
dec
mov
mov
sbb
adc
insb
add
xchg
icebp
rcrb
outsl
lds
stos
sub
or
push
fsubrs
outsl
cmp
or
imul
lcall
dec
mov
popa
inc
out
mov
rcll
loope,pn
iret
adc
add
mov
insb
mov
xchg
mov
sarb
test
dec
push
stos
sub
inc
icebp
je
xor
imul
insb
sub
pop
xor
jae
int3
dec
sub
adc
stos
lcall
ja
fcomps
cmpsl
xchg
or
mov
adc
sub
push
adc
sbb
jbe
rcrl
lea
sti
adc
outsl
xchg
mov
ret
ret
dec
sbb
ja
jle
data16
lods
rorl
mov
cmp
or
mov
lock
mov
fsubl
xor
es
inc
fcoms
fisttps
repnz
jmp
pop
jp
mov
mov
enter
xchg
or
leave
xchg
mov
pop
mov
push
and
mov
or
jbe
sub
mov
add
inc
mov
cmp
cmp
stos
xor
insl
sbb
popa
cld
shl
scas
jmp
shr
cmp
adc
push
fnstsw
mov
dec
in
inc
add
push
xchg
lds
xchg
cmpsl
outsb
fsubrl
inc
movsb
xor
in
insb
outsb
inc
jle
int3
push
push
push
and
inc
pop
push
lock
add
jns
fnstenv
scas
xor
test
sbb
jb
inc
subb
popf
jns
je
jo
sbb
aad
mov
or
xchg
sub
inc
cmpsl
sahf
pop
or
cmc
xchg
data16
pusha
bound
jbe
cli
inc
or
loopne
cld
adc
add
push
push
lcall
fimuls
add
ficomps
js
pop
clc
push
rorl
ja
add
mov
insl
mov
cmpsl
insb
add
imul
clc
adc
lock
aam
ror
dec
das
ja
icebp
inc
inc
cli
push
sub
jae
sbb
cmp
adc
insl
sbb
xchg
pop
push
cs
jb
enter
scas
ljmp
dec
ss
cltd
xor
sbb
jb
push
mov
out
jae
and
enter
add
ljmp
push
or
jmp
adc
mov
repnz
sub
pop
push
sub
daa
mov
jl
xchg
insl
insl
pushf
xchg
iret
loope
jb
push
decl
cld
scas
adc
cmc
lds
cwtl
imul
mov
mov
mov
pop
xchg
or
lds
fcoml
inc
shr
pop
push
jo
xchg
outsl
lods
or
jb
mov
js
lcall
sbb
mov
cmp
lahf
push
add
outsb
jns
sbb
cwtl
outsb
cmp
push
adc
jb
jns
jmp
stc
cmp
mov
in
popa
das
jae
mov
popf
sbb
sub
mov
push
push
xor
hlt
cwtl
inc
inc
out
ljmp
adc
test
jo
call
mov
enter
dec
into
rorb
mov
daa
imul
push
fdivrp
call
inc
cld
pop
pop
cmpsl
or
pop
lock
popa
sbb
adc
mov
addr16
jb
push
add
pop
cs
insl
or
xor
mov
repz
push
fwait
sbb
add
lods
fidivs
or
shll
repnz
lds
lret
inc
cmpsb
cmpsb
loop
jmp
mov
jo
or
aaa
gs
fs
lds
mov
cltd
xchg
mov
mov
fadds
and
aas
jle
movsl
mov
hlt
ret
das
pusha
fildll
sub
fisubrs
and
icebp
cltd
push
call
lods
shlb
dec
mulb
push
mov
adc
mov
mov
xchg
in
xlat
add
loopne
or
xor
stos
stos
sbb
sbb
sub
jge
or
mov
ret
add
lret
or
fsubl
les
jecxz
adc
aaa
test
xchg
adc
pop
jp
imul
fs
cltd
inc
or
repnz
loopne
xor
ret
lea
sbb
scas
addr16
adc
aaa
call
popl
cmp
loope
push
aaa
jne
mov
jge
mov
iret
jo
stos
loopne
inc
mov
pop
aaa
test
rorb
sbb
adc
fisubrs
in
cmpsb
cmc
sbb
mov
mov
jl
xchg
mov
lods
xor
ja
adc
sub
dec
dec
push
stos
cmpsb
stos
aam
in
and
or
lcall
jmp
inc
mov
push
lret
mov
add
dec
lahf
inc
adc
xor
sar
lods
dec
cmp
sar
push
mov
mov
inc
mov
jae
cmp
mov
mov
bound
jb
ljmp
insl
jge
outsl
xchg
into
cmp
inc
pushl
icebp
jno
xor
mov
or
mov
movsb
push
dec
into
cmp
mull
popf
mov
add
cwtl
mov
inc
rolb
xor
or
leave
fsubs
loope
xchg
mov
iret
dec
sbb
in
inc
ss
lea
mov
sbb
cld
or
ljmp
push
aaa
aaa
out
je
xor
lods
cmp
and
mov
addr16
std
mov
orb
and
adc
mov
add
adc
add
lea
std
arpl
pop
scas
sbb
jo
rcrb
in
hlt
notb
aad
fadds
add
adc
add
sti
xchg
sub
lret
hlt
popa
movsl
mov
pop
mov
out
mov
sti
lock
pop
fistpll
pusha
lea
ljmp
cmp
imul
pop
and
push
fs
data16
repnz
repz
ljmp
jnp
jl
jo
cmp
orl
mov
daa
lcall
mov
imul
dec
les
int3
roll
call
sub
jle
xor
in
shrl
pusha
mov
pop
sarb
inc
popa
push
push
cld
jnp
popa
loop
ds
sbb
inc
adc
insl
add
iret
orb
push
xchg
loope
jmp
ja
xor
sbb
add
cmc
mov
mov
and
cwtl
inc
lret
imul
ss
add
enter
adc
mov
mov
and
fidivrs
daa
jb
lea
clc
mov
mov
test
in
pushf
sub
lcall
pop
ds
or
int
dec
and
fsubrl
scas
int3
mov
mov
sahf
es
ret
mov
ljmp
add
divl
imul
cmp
push
aaa
inc
sti
dec
test
inc
in
dec
lea
lods
cwtl
add
fs
jbe
push
enter
cmc
jg
cld
insb
in
push
je
jnp
out
adcl
add
add
fucomp
pop
lock
lods
fwait
cmp
pop
out
push
add
clc
xchg
mov
lods
out
std
add
mov
mov
mov
and
or
pushf
push
sub
cmpsb
jnp
mov
inc
in
mov
xor
in
sub
push
adc
xor
mov
xor
js
fs
dec
outsb
or
shl
ret
lea
adc
out
popa
enter
scas
or
xor
cli
mov
jns
ja
jo
jbe
mov
fadd
loope
sub
outsb
pop
rclb
test
pop
and
jo
test
int3
lcall
pop
out
mov
cmp
mov
cltd
lahf
les
scas
call
test
popf
iret
mov
add
adc
rorb
mov
in
flds
js
jo
sub
popa
cmp
push
orl
cmp
adcl
mov
mov
or
cwtl
lcall
mov
pusha
dec
push
mov
push
movsl
pusha
mov
cmp
mov
pop
jmp
inc
cmc
mov
cmp
dec
xchg
stos
adc
push
clc
pop
outsb
sub
mov
pop
popf
inc
ds
push
lcall
add
jle
nop
movsb
lds
mov
imul
fcomps
sub
cmp
push
call
inc
pushf
pop
or
loop
adc
push
sti
dec
rcr
sub
adc
or
cli
xor
fidivrs
mov
pop
cmpsb
bound
nop
scas
divb
subl
pop
jb
mov
mov
cmc
fs
inc
mov
lcall
mul
sbb
fxam
mov
mov
dec
out
clc
dec
aad
mov
ljmp
outsl
or
sub
stc
push
adc
loop
mov
pop
outsb
adc
adc
jne
cmp
push
sbb
xchg
mov
xor
mov
sub
stos
jo
or
adc
mov
xchg
rcrb
jb
pop
push
mov
imull
xlat
cltd
inc
daa
mov
lahf
insl
aaa
adc
cs
out
lods
aaa
rcll
cmc
gs
pop
mov
negl
orl
outsl
bound
and
jno
scas
aaa
sub
lods
fsubrs
inc
insb
cmp
lahf
push
fistps
mov
scas
mov
jns
mov
ret
jne
div
or
scas
xchg
cmpsb
loope
fcoml
popf
jl
aaa
adc
jae
flds
das
out
clc
and
js
mov
shrl
xor
push
mov
enter
bound
daa
pop
rcrb
push
insl
test
repz
es
ret
addr16
out
and
push
cltd
lcall
pop
fldenv
mov
pusha
repz
out
mov
rcrb
in
movsl
shl
sub
cmp
lock
stos
shlb
inc
outsb
cmpsl
imulb
lock
push
stos
add
cwtl
leave
adc
mov
leave
lods
bound
jne
into
repnz
scas
lcall
out
cmp
sub
fisubs
cmp
jb
pushf
sub
out
xchg
ret
roll
mov
mov
jbe
xor
addr16
mov
push
aaa
xchg
mov
or
aad
mov
sub
pop
mov
jmp
push
push
mov
push
fiadds
push
fisttps
jnp
jae
lods
push
addr16
mov
push
nop
pop
push
shrl
fwait
cmp
das
adc
dec
mov
xor
sbb
cmp
mov
sub
inc
sub
pop
ss
push
insl
and
push
xchg
jmp
dec
daa
int3
push
lret
outsb
fisubs
or
sbbb
stos
xchg
ss
lahf
push
imul
das
fwait
ljmp
test
js
pop
das
and
fs
nop
jecxz
loope
decb
add
addr16
je
shlb
xchg
add
push
ret
test
shr
push
cmpsb
or
push
jne
jl
scas
push
loop
movsb
pandn
inc
mov
sbb
or
idivb
rorl
in
cs
or
mov
pop
xor
cmpsb
jecxz
mov
pop
or
orb
ljmp
jmp
mov
jns
jmp
xchg
pop
lds
pop
out
inc
push
mov
jecxz
cmp
push
or
iret
loop
ljmp
lds
dec
and
jo
inc
filds
dec
xchg
mov
xchg
add
leave
adc
add
jo
sub
enter
lock
popf
mov
mov
mov
xchg
ljmp
lods
test
lret
in
cli
pop
fmul
mov
cmpsl
arpl
pop
add
orb
dec
push
xor
dec
mulb
mov
jno
movsl
mov
jbe
push
sub
sbb
push
int
js
loop
xchg
or
dec
in
cs
in
movsb
dec
add
xlat
and
or
inc
mov
out
fidivrl
fwait
jb
xchg
inc
ja
cs
dec
and
test
xchg
outsb
lods
pop
xor
cmp
sub
cmp
hlt
call
popf
xor
sbb
pop
cld
scas
mov
sub
hlt
dec
aas
lds
jp
or
inc
lret
xor
push
adc
in
addps
rcll
mov
loop
adcb
and
test
xchg
xchg
pop
aam
mov
stc
push
repnz
test
mov
in
xchg
inc
push
movsb
mov
mov
jne
sbb
in
repz
or
xor
fstpt
scas
jne
and
mov
loopne
add
test
outsl
in
insb
lahf
dec
jae
jmp
xlat
loope
filds
mov
inc
push
fldl
cld
test
stc
sub
xor
xor
fsubs
pop
icebp
jg
inc
jne
aas
xor
daa
mov
cmpsl
mov
and
mov
mov
popl
push
pop
mov
mov
adc
lcall
test
mov
js
icebp
clc
xchg
ss
aam
movsb
sbb
popa
xor
data16
dec
add
and
mov
std
imul
xor
out
inc
dec
call
push
mov
fs
mov
dec
fmul
xchg
push
jp
testb
or
sbb
cld
push
cmc
rsqrtps
daa
bound
add
aaa
dec
ljmp
inc
pop
ja
jb
mov
dec
push
add
aaa
test
stos
mov
push
mov
xchg
jns
and
loopne
jg
pop
adc
xor
push
call
xchg
adc
jecxz
mov
or
sub
test
adcb
xorb
mov
dec
mov
mov
in
pushf
add
int3
or
movsb
push
mov
push
rcll
xor
jbe
mov
shl
mov
adc
lock
jbe
lds
push
xchg
cmp
rclb
jns
shll
cltd
pop
mov
push
mov
adc
jmp
mov
out
or
add
popa
jle
dec
daa
inc
mov
jecxz
xorb
jmp
into
scas
test
sti
nop
aaa
inc
hlt
out
or
addr16
leave
xchg
lock
in
mov
and
mov
cmp
or
mov
xchg
mov
push
flds
adcb
push
and
ret
js
ds
pop
push
push
enter
in
xor
ret
aas
hlt
xchg
or
popa
mov
jg
fidivl
mov
cli
push
mov
jp
icebp
stc
andl
sti
pop
fcmovnu
xchg
mov
xor
pop
es
sti
scas
nop
push
mov
jmp
xchg
mov
inc
int
adc
dec
idivb
cmp
jnp
daa
clc
scas
repz
clc
jnp
movsb
mov
push
push
stos
push
fucomi
fcomps
jmp
clc
sbb
enter
test
xor
sahf
sahf
sub
sub
sub
adc
ljmp
pop
push
jb
vmulsd
mov
dec
imul
adc
add
shll
adc
aas
outsl
scas
mov
loop
popa
mov
xchg
push
ret
jne
adcl
jno
mov
adc
icebp
leave
push
std
testl
lret
pop
gs
pop
jl
std
xor
nop
push
in
mov
inc
xchg
in
sub
and
xor
shlb
mov
push
jne
test
mov
dec
push
lods
xlat
xchg
and
jecxz
mov
dec
lcall
inc
pop
addr16
inc
inc
pop
clc
xlat
xchg
inc
insl
inc
jo
int
mov
mov
lcall
insb
mov
mov
aad
pop
das
mov
mov
dec
mov
cmp
inc
rcll
add
mov
xchg
and
mov
mov
es
dec
dec
popa
xlat
pop
scas
adc
je
dec
call
pmullw
add
scas
insb
icebp
pop
sub
jmp
test
inc
mov
js
shlb
rep
std
cmp
pop
sbb
icebp
mov
push
sti
push
jge
lcall
scas
les
sbb
dec
test
add
push
mov
xchg
and
daa
adc
cmp
push
push
rorb
mov
dec
fdivrp
aad
cwtl
into
mov
mov
cmp
rcrl
sub
cmp
mov
sub
loope
rcr
and
daa
sbb
mov
data16
andl
and
inc
clc
mov
sahf
out
push
stc
out
inc
aad
cmpsb
out
jle
in
xchg
repz
test
pop
mov
mov
cs
dec
stc
mov
or
aas
call
rorl
mov
enter
xor
int3
sbb
xor
jmp
inc
jnp
cmp
cmp
push
dec
cmpsl
jle
aad
xor
mov
pop
nop
lret
mov
xor
mov
movsl
aad
xchg
pop
outsb
out
mov
push
jne
out
pop
fadd
sub
icebp
movsl
adc
out
das
test
outsl
add
sbb
js
popa
xchg
outsl
jae
lods
pop
xchg
mov
ss
add
xchg
rorb
mov
mov
or
in
jno
shl
imul
pushf
xchg
pop
mov
imul
std
out
outsl
insl
cli
lods
jmp
lock
jb
jno
ja
xchg
aam
dec
adc
lahf
mov
lahf
fucomip
cltd
and
ds
or
or
rol
push
cmp
pop
add
and
stos
jbe
xchg
repz
push
aaa
mov
sub
aaa
inc
icebp
fbstp
mov
xchg
xor
js
and
fstl
xchg
push
mov
xor
push
aas
mov
push
jl
and
add
push
and
mov
xor
sub
sub
push
aam
dec
cmp
rolb
fisttpl
cmp
push
repz
movsl
inc
scas
gs
negl
sub
push
sub
sarl
add
or
je
mov
push
lahf
sub
stos
jns
sbb
sahf
call
fisubrs
cmpsl
js
std
dec
mov
push
mov
add
fistps
jge
fildl
pop
dec
dec
push
push
les
cmp
or
daa
xchg
mov
xchg
inc
jecxz
repnz
into
clc
xchg
popa
ds
fwait
jnp
test
je
icebp
cmpsl
lods
pop
inc
inc
pop
and
mov
sbb
sub
out
add
jae
rorl
fists
lret
lahf
xor
dec
pusha
in
or
adc
lahf
js
or
test
outsl
fwait
mov
jb
clc
aaa
jp
mov
pop
test
sahf
loop
daa
sub
hlt
ret
mov
loop
repnz
js
inc
lcall
mov
xor
push
hlt
and
in
pusha
adc
in
or
pushf
mov
pop
or
mov
rcrb
inc
push
push
xor
adc
subl
mov
push
xor
add
lret
inc
fcompl
jge
loopne
push
imulb
xor
pop
jae
pop
mov
adc
xlat
cmp
mov
rcll
pop
mov
data16
or
in
aas
xchg
mov
xchg
pop
fsubs
xchg
xor
or
arpl
mov
dec
loope
pop
and
mov
mov
test
jecxz
in
pop
and
push
fldenv
lock
jns
mov
nop
xchg
movsl
lahf
pop
pushf
fptan
cwtl
aad
insl
imul
outsl
repz
aaa
mov
sub
lock
xchg
clc
dec
test
mov
nop
xchg
xchg
add
ret
insb
outsb
xorb
or
mov
ja
xor
push
add
or
shrb
pop
lock
jae
push
sub
sarl
dec
xor
in
gs
js
xor
das
test
jecxz
inc
jno
fwait
pop
mov
sahf
stos
into
loope
das
cmp
fisubl
mov
movsl
lret
xchg
mov
inc
xor
inc
xchg
mov
not
sbb
out
jns
cmp
or
add
cmpb
stos
pop
ficompl
jmp
aas
inc
cmp
xchg
imul
test
cmpsl
mov
xor
pop
mov
aas
gs
cld
sahf
lcall
fidivs
mov
lret
jnp
into
pusha
add
mov
sbbl
aas
pop
mov
and
dec
int3
push
mov
cmp
adc
icebp
out
scas
lds
mov
or
fbld
fidivs
dec
xchg
test
daa
dec
das
data16
imul
data16
cmp
sbb
lds
fsubrl
das
filds
insb
iret
sbb
jne
js
or
icebp
out
les
nop
fmull
push
insl
cmpsl
adc
jle
inc
or
imul
xchg
sub
xlat
mov
or
sti
stos
push
nop
rorl
lods
inc
dec
mov
mov
or
scas
clc
int
sbb
mov
xorb
dec
mov
sahf
or
insl
or
loop
in
lods
and
testb
push
mov
mov
pusha
int3
add
sbb
cmp
dec
pop
xchg
and
xlat
mov
or
xor
push
pop
inc
pushf
add
movsl
decl
mov
mov
mov
aaa
iret
loope
cmp
pop
sbb
mov
clc
cmc
mov
xlat
push
ljmp
les
add
mov
dec
inc
push
stc
xor
cltd
aam
test
pop
or
das
in
lds
in
pop
ja
sbb
sbb
adc
pop
mov
mov
leave
out
movsl
addb
shr
jmp
jns
xorb
add
dec
fs
repnz
sbb
sub
xchg
iret
mov
pusha
mov
pop
xor
iret
add
shll
repnz
pop
jmp
fisubrs
dec
ret
or
pop
xor
lret
mov
add
mov
jnp
nop
inc
push
pop
dec
test
add
mov
je
andb
sbb
lahf
push
popf
mov
gs
and
idiv
popa
inc
xchg
lock
jle
sub
dec
dec
popa
adc
jno
mov
test
jnp
sbb
jnp
jb
cli
rcl
cmp
sub
hlt
lea
lret
or
sub
stc
popf
push
xor
xlat
pop
and
iret
mov
adcl
hlt
imul
rorl
add
addr16
sub
jb
cld
and
popf
push
add
mov
inc
rclb
cmp
mov
push
push
jg
cli
icebp
fistl
loope
iret
ret
cmp
mov
or
pop
mov
das
stc
mov
mov
ss
lods
mov
clc
xchg
int3
pop
int
pushf
dec
stc
fcmovb
data16
push
inc
andb
leave
and
imul
out
push
repz
pop
add
and
loope
imul
push
jbe
dec
cmpsl
out
push
loop
sbb
pop
inc
inc
loopne
in
cmp
repz
inc
dec
xor
mov
mov
enter
ljmp
adc
loope
jnp
mov
ljmp
mov
call
or
scas
push
and
xor
enter
or
cmc
inc
mov
cmpsl
aam
lret
inc
xchg
xor
inc
aas
and
dec
mov
or
sub
nop
in
into
or
cwtl
aad
idivl
adc
test
mov
aas
ror
addl
lock
inc
cli
jmp
push
push
jno
call
xchg
inc
fisubrl
subl
ja
fstl
mov
gs
sbb
mov
mov
lret
lret
jge
add
loope
xor
cmp
addr16
shlb
ret
jbe
ds
sti
std
popl
mov
jbe
xlat
xchg
mov
inc
push
pop
sub
std
pop
fwait
push
outsb
aad
adc
mov
into
insl
out
dec
mov
mov
lcallw
jb
addr16
in
sub
lods
adc
daa
sbb
test
push
jmp
cli
arpl
inc
sbb
ljmp
and
mov
mov
inc
xor
cmp
push
jmp
rorl
cmp
movsl
icebp
cmp
loopne
jle
rol
jmp
add
testl
subb
leave
xor
sub
stos
mov
jmp
rclb
pop
mov
inc
lock
sahf
or
mov
mov
rcrl
int3
sub
sub
inc
and
in
stos
in
insb
enter
shll
and
mov
outsl
jl
xlat
stos
cwtl
pop
gs
inc
mov
jg
orl
cltd
push
movsl
cwtl
pop
in
mov
cmp
pop
mov
add
sahf
cmp
out
pop
into
lods
in
sbb
jns
lods
cwtl
filds
icebp
sub
add
add
aas
popa
daa
aas
scas
aad
jge
adc
nop
push
cmp
sbb
add
jne
leave
ljmp
add
jl
mov
mov
je
outsl
out
hlt
add
test
shr
mov
mov
jle
arpl
rorb
pop
jp
insb
shll
xchg
xor
cs
pusha
and
out
scas
jne
popf
popf
mov
mov
sti
jne
dec
into
bound
test
ss
mov
aaa
pushf
loope
stc
xchg
arpl
sbb
lods
mov
mov
and
sbb
testb
mov
and
or
push
enter
mov
xor
sbb
stc
push
cmc
add
sbb
bound
bound
lret
adc
inc
dec
call
call
sub
sub
mov
or
or
inc
fcoms
cwtl
pusha
push
rcrb
pop
shlb
pop
inc
xchg
mov
cmpsb
lods
sahf
and
dec
jb
repnz
or
scas
xchg
and
or
xchg
ret
push
cmp
or
jg
outsl
jge
jnp
xchg
scas
push
aad
inc
fisubs
fistpl
in
adc
lret
sti
addr16
xchg
dec
or
dec
rol
sbb
lods
push
xor
imul
out
xchg
imul
arpl
call
mov
add
cmpsl
jns
jge
mov
push
and
xor
mov
ljmp
sub
gs
inc
pop
mov
ljmp
push
stos
iret
pop
into
lock
loopne
movsb
xchg
repz
jle
add
daa
shl
in
pop
adc
jno
push
mov
cmpsb
adc
sbb
shr
ljmp
lret
jb
jnp
fsubl
loopne
fistpl
pop
sarb
add
in
bound
lds
cmpsb
and
mov
push
or
sub
xchg
xchg
adcl
lods
push
cmpsl
sbb
sub
cmp
cltd
out
pusha
in
in
cmp
in
cltd
cmp
mov
std
outsl
sub
in
mov
inc
repz
std
flds
movsb
gs
cmp
dec
push
repz
xor
and
or
and
xor
mov
test
and
lret
jge
test
jnp
stos
rorb
inc
das
jns
shll
mov
pop
pusha
sbb
xor
repnz
jle
ret
xchg
iret
push
imul
out
aad
mov
lret
aad
out
jo
bound
xchg
pop
or
cmp
mov
jno
adc
push
sbb
ljmp
mov
lock
xchg
mov
or
dec
icebp
insb
xchg
cmp
cmp
addl
mov
jp
mov
cld
xchg
cs
mov
repz
andl
mull
ror
cld
pop
lds
mov
adc
xchg
call
ds
lahf
push
cmp
scas
dec
mov
leave
and
bound
cmpsl
js
jnp
pop
sbb
ret
mov
loop
and
jns
dec
mov
sbb
test
pop
pop
sbb
push
xchg
push
xlat
sub
push
mov
cltd
inc
add
scas
test
rorb
insl
jbe
xor
push
out
dec
add
idivl
iret
scas
les
mov
and
movsb
inc
jo
loopne
cmpsl
sbb
test
cmp
jg
in
lods
and
hlt
in
inc
addr16
add
adc
push
jecxz
jle
push
push
xor
popa
mov
jmp
shrb
mov
je
test
movsl
push
fmuls
pop
jecxz
imul
or
sub
imul
faddl
scas
leave
add
test
int3
movsb
sahf
loopne
and
xor
mov
cltd
pop
dec
fisubl
lret
fsubs
gs
pop
push
xchg
xchg
jb
sbb
adc
pop
lret
cmpsb
mov
pop
imul
xor
or
or
leave
xor
or
cmp
rol
lea
or
jmp
sub
enter
cmp
jb
adc
push
popf
lea
popf
add
xchg
outsb
xchg
incb
cmp
dec
mov
jl
ja
xchg
mov
xor
jns
push
scas
mov
je
xchg
xlat
ja
int
xchg
icebp
sbb
mov
inc
in
sti
sub
les
xor
mov
push
lret
mov
loope
mov
sbb
mov
fucom
insb
dec
or
push
push
lds
push
jg
sub
xor
pop
and
lods
pop
xor
lds
arpl
ret
fwait
jno
aas
int
inc
iret
xlat
cmp
cmp
pusha
push
push
xchg
and
adc
mov
orl
pop
push
and
sub
sahf
adc
inc
popf
and
int
adc
iret
in
or
mov
test
sub
cmp
dec
pusha
es
je
dec
pop
fwait
mov
jae
out
xlat
rorb
xchg
loopne
xchg
bound
pop
push
cmpsl
in
or
mov
testb
cmp
xor
sub
mov
sarl
jb
aaa
fucom
je
sbb
sbb
adcl
popf
movl
mov
jmp
and
lea
test
mov
mov
adc
popa
lea
mov
xchg
lcall
xor
insl
aaa
mov
adcb
jo
mov
and
xor
sub
jae
mov
jnp
mov
roll
repnz
sub
mov
ljmp
ficoms
lock
out
mov
and
bswap
or
or
mov
dec
mov
outsl
jns
cs
or
ret
pop
test
jp
sub
mov
cli
or
or
jle
xchg
sahf
push
in
or
push
aad
mov
shll
jno
stos
mov
inc
lods
movsb
push
jno
ret
rclb
fwait
pop
pop
scas
jns
push
adc
sarl
jl
pop
xchg
sub
inc
cmpsl
lock
sub
push
scas
xor
cmpsb
add
and
jne
pop
ret
or
pop
mov
or
sub
jl
dec
dec
xor
xlat
jns
js
lcall
es
cwtl
out
call
fs
mov
jae
cs
push
test
das
pop
xor
or
mov
out
out
insl
test
lret
jle
cwtl
mov
scas
fistpl
jmp
mov
sub
pop
mov
mov
push
xchg
dec
push
sbb
mov
mov
jbe
cmp
insl
dec
jmp
pushf
int
mov
cmpsb
cltd
sbb
daa
or
jle
xor
lahf
pop
in
and
and
jmp
xor
adc
mov
sbb
inc
xor
clc
aaa
mov
insb
dec
fistl
xor
cmpsb
outsl
or
push
fildl
push
mov
and
orps
bound
dec
filds
in
enter
in
sub
cmp
jbe
or
jns
shlb
cltd
scas
repz
lods
rol
test
mov
or
push
fadd
cmp
and
jg
out
les
push
pop
lret
mov
in
frstor
lcall
sub
fs
sub
sub
popf
bound
repz
lods
cmp
dec
loop
ret
jbe
ds
cmpl
scas
pop
scas
outsb
test
ds
lods
sub
ss
fstpt
ljmp
or
cmp
loopne
lock
lock
fidivrl
lcall
cwtl
jae
mov
or
rcr
jle
loopne
fildl
das
add
sahf
xor
leave
arpl
sub
lret
test
mov
loope
push
push
enter
ljmp
into
filds
lock
mov
loop
lret
fwait
sti
cwtl
ret
or
and
mov
add
mov
jge
js
bound
or
cs
mov
aas
shlb
xchg
psubsw
xchg
stos
stc
pop
mov
movsb
cmp
mov
dec
into
lahf
pop
push
sub
repz
sbb
rcrl
xchg
loope
add
insl
jbe
dec
lret
pop
cmpsb
jge
bsr
outsb
or
stos
or
push
repnz
negw
sbb
push
xor
sarb
mov
adc
fdivr
cli
sub
test
popf
pop
pushf
mov
and
pop
pop
xor
jp
nop
adc
inc
inc
push
in
or
push
dec
jbe
insb
imulb
mov
dec
ja
sbb
mov
je
fbld
pop
jb
cmpsl
push
add
loop
mov
mov
rolb
int3
and
push
xchg
dec
repnz
movsb
ret
jmp
dec
fcoml
adc
sbb
adc
ja
push
fnsave
inc
loop
imul
fistpll
inc
lea
push
push
jae
mov
imul
mov
loop
cmp
and
and
jmp
ja
aam
mov
insl
push
lea
sub
insb
push
imul
fistpl
lret
cs
xchg
ja
adc
insb
imul
mov
fs
sub
rorb
inc
sub
imul
mull
mov
inc
and
aam
add
mov
aaa
adc
sbb
mov
jae
cld
pop
aad
xchg
sub
jg
std
inc
test
iret
bnd
scas
and
daa
jae
out
or
or
cmp
mov
pop
sbb
les
fldl
cltd
xlat
into
das
adc
sti
jne
mov
ret
fs
imul
ljmp
enter
dec
pop
shll
sbbb
xor
push
jae
jnp
lret
or
cmp
pop
sub
xor
adc
imul
jl
mov
jl
mov
xchg
xchg
mov
test
mov
add
repz
aam
push
jge,pn
and
jbe
add
enter
mov
int3
pushf
daa
add
xchg
int
push
mov
inc
call
sbb
test
push
pushf
ja
ficompl
aas
test
in
int3
call
pop
dec
ds
inc
cld
fsts
pop
adc
push
mov
sub
rep
lahf
repz
fcomip
add
xlat
push
fbld
stos
and
push
arpl
fwait
roll
push
test
push
jne
xchg
cltd
adc
xor
aad
cwtl
jns
mov
pop
loopne
lds
and
jmp
loope
decb
mov
pop
ja
mov
insl
divl
lods
scas
daa
dec
popf
inc
inc
mov
das
mov
xor
shll
test
xor
js
repz
cli
push
inc
lret
xchg
sub
mov
push
jo
add
roll
adc
cmp
jp
imul
dec
test
sub
arpl
mov
jne
nop
sub
lods
jmp
sub
sti
test
xchg
or
std
stc
xor
pop
pop
push
dec
in
sbb
test
xor
sbb
std
popf
sbb
xchg
mov
and
fiaddl
mov
lods
orb
bound
test
or
test
jmp
add
mov
mov
out
out
enter
sub
cwtl
imul
icebp
test
push
cmp
mov
loop
popa
and
fmuls
xchg
aaa
roll
mov
sahf
lock
mov
in
aam
mov
cmpl
aad
mov
xor
adc
dec
lret
pop
jecxz
test
mulb
dec
pop
pop
insl
xchg
adc
inc
dec
jne
out
in
cmp
xchg
sbb
lret
sbb
sbb
ficompl
repnz
add
push
pop
out
pop
rclb
repz
cltd
push
pusha
out
cmp
inc
arpl
lret
fistpl
add
dec
inc
es
xor
jge
mov
jmp
mov
test
dec
or
cwtl
fdivrl
cmp
ds
fmuls
xlat
pop
lret
out
dec
add
push
jb
sbb
add
dec
dec
movsb
jle
int
cltd
out
clc
inc
cltd
shrb
add
dec
mov
stos
xor
push
and
cmp
movsl
jne
dec
cld
daa
mov
stc
test
jnp
push
mov
lahf
into
pcmpgtb
jp
xor
add
arpl
decl
in
sub
and
cmp
test
jne
ds
push
sub
std
ja
xchg
inc
jbe
sub
inc
inc
icebp
cmpsb
fnstenv
xor
mov
loopne
pop
jge
movsl
cmp
and
mov
nop
sahf
das
ret
adc
add
or
mov
out
and
stc
jp
repz
fisttpl
inc
gs
into
xor
popf
pusha
lret
xchg
into
mov
mov
sahf
push
push
xlat
repz
mov
enter
sbb
sub
push
mov
dec
lret
pop
ja
sub
xchg
sahf
push
pop
ljmp
or
ja
sti
mov
xor
rorl
je
xor
lret
add
mov
cmp
sub
shlb
xor
pop
popf
in
jns
adc
imul
data16
les
rclb
pop
fwait
daa
cs
movsl
xor
test
and
sahf
cmp
cmpsb
test
mov
add
insb
pop
and
fwait
aaa
inc
mov
scas
adc
adc
dec
mov
divb
mov
push
inc
xchg
lcall
inc
sbb
fcmovbe
sub
mov
lock
lods
push
push
mov
adc
test
mov
push
cld
push
and
pop
insl
push
push
inc
xchg
adc
ficomps
sub
and
repz
out
in
aad
hlt
std
fildll
iret
xor
ret
jbe
push
xchg
inc
add
mov
pusha
mov
mov
mov
gs
popf
cmpb
cwtl
les
cmpl
and
rorb
mov
inc
repz
lcall
addr16
add
adc
adc
ja
in
push
loopne
test
mov
shrb
loopne
pop
xchg
inc
test
lahf
mov
jle
sbb
cmp
ljmp
cmc
cmp
dec
cmc
mov
and
shll
mov
xorl
leave
sbb
adc
and
or
std
dec
xor
ret
pop
icebp
lret
pop
adc
sbb
or
cld
test
mov
adcb
test
mov
outsl
pop
sub
mov
rorb
jo
inc
and
sub
in
jecxz
pop
iret
jecxz
repz
inc
jno
fildll
mov
dec
pop
es
imul
ret
or
pusha
dec
fpatan
out
inc
cld
xchg
pop
leave
in
pushf
jo
ss
or
add
adc
aas
jmpw
cwtl
rcll
mov
jbe
add
test
sahf
sbb
mov
mov
add
jecxz
add
insl
sbb
and
jbe
pop
inc
sbb
pop
test
popa
cli
add
pop
cwtl
adc
xchg
adc
jno
subb
jo
inc
mov
inc
jmp
lds
int3
test
mov
and
mov
push
loop
mov
sub
push
rcr
lock
pusha
jmp
push
mov
int3
mov
sub
popf
ret
cmpsl
xchg
sub
mov
les
push
insl
xor
and
push
mulb
lret
sarb
mov
fbld
mov
push
scas
push
xchg
dec
sti
insl
fs
clc
xchg
aas
push
mov
mov
mov
movsl
cwtl
test
or
adc
andl
jo
aam
xor
and
fsubl
add
inc
pop
sub
jle
mov
inc
or
cmpsb
fstl
aam
sbb
adc
gs
in
push
adc
mov
clc
push
popf
adc
mov
inc
dec
sbb
outsl
test
or
test
shll
outsb
icebp
pop
cmp
out
movsl
pusha
les
jb
mov
outsl
xor
xchg
jno
daa
pop
push
scas
sub
xor
pop
pop
ret
cmpb
cmp
loope
addr16
adcl
int
mov
add
idiv
mov
dec
je
or
gs
idivl
adc
pushf
pop
in
mov
outsb
pop
sub
repz
and
mov
inc
push
mov
ljmp
fs
cmp
insl
xor
pop
sbb
jo
jecxz
xchg
pop
adc
bound
push
sub
sub
popa
push
xor
stos
sahf
shrb
mov
mov
inc
dec
inc
out
je
mov
mov
lods
popa
loope
int3
test
inc
dec
loopne
repz
mov
pop
inc
mov
mov
mov
push
xchg
dec
or
rcrb
adc
sti
pop
dec
adcb
sbb
popf
in
dec
popf
out
fadd
push
addr16
push
outsb
leave
jno
cli
pushl
out
outsb
mov
movsb
scas
lds
scas
les
xlat
push
into
jl
sbb
fisttpll
rolb
push
push
dec
movsl
pushf
mov
inc
sub
ficoms
jmp
dec
push
xchg
movsb
fsubl
xchg
imul
xor
bound
in
mov
jae
mov
loopne
add
lcall
inc
cwtl
icebp
xchg
push
leave
cmpsl
mov
dec
jmp
icebp
fbld
sub
or
sub
jl
gs
out
jnp
jne
je
pop
pushf
adc
insl
ret
xlat
jne
cmp
std
mov
cmp
xchg
mov
or
jbe
mov
shll
lea
mov
cmp
sub
out
fiadds
dec
icebp
xor
inc
ret
xchg
xchg
mov
xchg
jmp
repz
int3
inc
mov
stos
xchg
sub
fcomi
ja
das
test
in
cmc
pop
cmc
movsb
stc
nop
mov
pop
inc
les
je
mov
sarl
je
cmp
mov
hlt
jo
loopne
jae
push
push
addr16
mov
mov
in
jg,pt
sahf
sub
xor
mov
pop
test
faddl
cmp
int
xor
bound
out
mov
cmp
xlat
nop
lea
test
sub
pusha
push
add
cmpb
movsl
push
jns
int
rcr
int3
and
addl
mov
lods
add
and
pop
mov
into
sub
inc
xor
stos
push
or
push
mov
lods
divl
inc
fisttpl
push
cli
adc
xchg
inc
or
push
aaa
cmp
data16
nop
push
fwait
or
ljmp
xchg
pop
inc
daa
sbb
adc
sub
lret
imul
mov
sub
aad
mov
fsubrl
adc
adc
push
cwtl
test
and
neg
add
loop
mov
push
xor
sahf
inc
repz
mov
addr16
pop
sbb
test
jp
shlb
push
shrb
into
xor
lods
jmp
dec
icebp
jne
sbb
push
pop
aad
dec
jecxz
add
lret
incl
pop
jbe
inc
inc
push
mov
inc
fdivrs
cmpl
insb
mov
repnz
aam
push
xchg
arpl
scas
test
pop
sub
xorl
shll
dec
inc
cmc
lock
mov
lret
jecxz
mov
aam
loope
sub
pop
stos
sbb
mov
dec
or
lahf
sbb
or
push
cmp
out
xchg
jg
mov
mov
mov
call
outsl
lcall
xor
cmpsl
mov
sarl
aaa
push
lcall
dec
push
dec
popa
dec
jnp
pop
mov
cs
fwait
xchg
xor
lods
jns
popa
mov
orb
movsb
adc
xchg
aas
cmpsl
cli
outsb
push
adc
or
mov
sbb
aad
xchg
pop
sti
fwait
or
ja
add
stos
ds
jge
mov
push
ljmp
test
xchg
cli
add
jl
ret
mov
hlt
sub
jmp
adc
and
fmul
or
adc
dec
adc
das
popa
add
addl
lcall
stc
and
iret
rol
jle
xchg
scas
add
push
pop
inc
mov
test
fisubs
cmp
sbb
pop
inc
int3
scas
das
pusha
xor
mov
xor
xorb
pop
mov
jns
push
addr16
mov
jl
rcll
push
int
imul
sbb
stc
std
xchg
and
in
loopne
pop
dec
xchg
push
pop
mov
jp
sbb
int3
in
mov
xchg
sti
aas
adc
jo
hlt
xor
arpl
fs
arpl
repz
stos
xchg
sbb
jae
mov
add
scas
and
ss
or
cmp
data16
ljmp
push
imul
mov
inc
lock
push
xchg
or
sbb
shlb
aas
cmp
xchg
xor
orl
inc
jb
pop
jb
adc
xchg
and
sbb
ljmp
pop
lods
int3
push
aas
ljmp
mov
inc
inc
pop
mov
cmpsb
daa
stos
aaa
mov
jg
shl
jle
dec
add
cmpsl
jnp
dec
lods
push
cld
clc
push
outsl
mov
mov
in
scas
jle
shr
iret
pop
pusha
out
in
mov
outsb
push
rclb
dec
mov
dec
sbb
cmp
mov
stos
pop
aam
jmp
insl
sub
adc
pop
jns
movsb
imul
lret
popf
mov
pop
out
mov
outsl
add
mov
mov
in
js
pop
mov
push
adc
lods
push
mov
inc
push
dec
sub
idiv
pop
cmp
cmpb
mov
jp
push
add
mov
movsl
adc
cmp
push
xorl
xchg
insw
mov
sbb
mov
shlb
std
adc
or
ljmp
negl
int
inc
les
fists
fdivrs
ret
adc
aaa
icebp
pop
ds
ljmp
push
daa
mov
or
push
movsl
fidivrs
in
lock
aaa
sbb
mov
loope
lods
test
out
jno
out
call
inc
bnd
xor
adc
push
mov
mov
insl
adc
fcomps
pop
add
shll
insb
xor
mov
dec
push
ljmp
or
xor
stos
jecxz
into
mov
mov
mov
or
xchg
cltd
pop
add
sbb
lcall
aas
pop
mov
fs
sbb
mov
movl
pop
xchg
sbb
lods
xor
or
cmpsb
ljmp
enter
inc
adc
out
out
cmp
data16
sbb
in
pop
pop
scas
ljmp
aad
xor
cmp
outsb
jbe
pushl
lods
add
insl
negl
add
fcomi
inc
pop
xor
sub
stos
adc
pop
and
xchg
inc
adc
pop
nop
mov
add
stos
mov
lgs
iret
aad
xchg
push
pop
jp
loope
mov
mov
jle
aad
insb
jmp
add
jbe
loopne
bound
dec
pushf
xor
shlb
psrld
sti
hlt
pushf
fdivrs
jnp
pop
aas
xchg
adc
push
ss
iret
mov
dec
mov
lahf
inc
mov
scas
out
shll
and
sub
pushf
xor
ljmp
add
in
pop
stos
inc
mov
cld
mov
inc
in
out
and
pop
movsl
cmpsb
das
cmpl
decl
pop
pop
cmp
or
mov
cltd
cmc
insl
push
je
pusha
sbb
scas
bnd
mov
mov
pop
push
outsb
push
xchg
stos
arpl
out
imul
jmp
pushl
and
lret
aad
xor
inc
cmpsb
xor
ja
mov
mov
sub
stos
inc
sbb
push
loope
loop
bound
gs
mov
repnz
pop
or
stos
jmp
adcb
movsb
xchg
mov
sbb
push
push
inc
dec
fwait
add
notb
jmp
mov
iret
xor
inc
add
xor
dec
mov
sub
bound
mov
ret
cltd
es
loop
scas
fnstenv
jo,pn
flds
outsb
push
adc
mov
loop
xor
add
lret
jbe
push
mov
in
push
mov
inc
or
adc
pop
xor
mov
mov
mov
xchg
or
das
iret
push
cli
mull
xor
cmp
ljmp
dec
jl
xchg
push
pushf
les
in
es
call
cmp
ds
scas
jg
fdivs
and
dec
nop
cltd
repz
or
out
fidivrl
rcrl
hlt
fs
push
or
cmp
int3
notb
mov
jmp
xchg
pop
aas
xchg
jae
cmp
or
xchg
inc
and
outsl
sti
sub
pop
dec
loope
pop
inc
jecxz
test
into
scas
sbb
pop
repnz
andl
jp
rolb
jmp
mov
insl
sub
mov
pop
jb
shlb
sbb
xchg
mov
adc
clc
out
mov
jmp
enter
mov
stc
in
cltd
xor
xchg
lods
xor
jb
jno
lret
mov
lret
ljmp
sarl
or
inc
inc
outsl
add
sbb
rorb
add
xchg
rorl
inc
jle
das
movsl
inc
sbb
jo
pop
cmpsl
outsb
insl
push
aad
xor
in
cmovb
xor
xchg
jmp
dec
push
mov
dec
addl
push
insl
cmpsl
jge
jmp
mov
inc
call
fstp
and
nop
ret
lds
ds
ret
sbb
and
cmp
aaa
dec
movsl
push
mov
mov
sub
xchg
mov
xlat
mov
mov
lret
push
lahf
mov
daa
or
cld
sbb
data16
pop
out
dec
cmp
inc
push
cmp
cmp
push
sbb
movsl
inc
outsb
dec
xor
mov
cmpsb
sbb
inc
jmp
fwait
stc
push
mov
sbb
pop
aas
leave
or
cmp
bound
xor
jb
aaa
xchg
xchg
xor
mov
sub
sti
loope
rcll
test
pop
mov
loop
sub
sti
cmp
jmp
movsl
popf
adc
loop
gs
repz
and
mov
mov
dec
inc
adc
inc
sub
inc
sub
aam
in
xchg
cmp
stos
mov
pop
sarl
mov
jge
andl
mov
test
ret
negb
inc
loope
cwtl
mov
adc
sti
pop
sarb
cltd
pop
repnz
test
jp
sub
xchg
dec
or
mov
xchg
jns
or
jg
data16
scas
rorl
and
adc
fiadds
mov
dec
rclb
jl
pop
testb
sub
mov
or
in
stos
shrl
or
lds
pop
and
cmp
ret
bound
jl
xchg
test
shr
pop
mov
sub
shlb
icebp
add
das
jle
std
jmp
into
dec
dec
mov
push
call
add
mov
dec
lds
out
shrl
xchg
xchg
iret
ret
pusha
out
out
dec
mov
mov
and
daa
movb
into
cwtl
ss
scas
push
mov
push
int3
out
jns
das
mov
jo
push
mov
stos
fldl
notb
xor
push
mov
pop
inc
icebp
cmp
stc
addr16
pop
divl
xchg
test
cwtl
add
movsl
pusha
ljmp
adc
xor
pop
jbe
mov
pop
repz
test
xor
loope
filds
insb
sahf
and
mov
test
sbb
xchg
popa
int
sarb
fistl
cmpsb
fiadds
or
popa
je
cmpsl
rol
call
test
jge
xor
inc
stos
push
dec
adc
ja
push
rolb
sub
pushf
push
movsl
pop
mov
test
xor
mov
lcall
pop
out
dec
mov
adc
push
dec
inc
mov
cmp
outsb
push
lock
jnp
repnz
rolb
lds
orl
lret
into
xor
loop
fidivrs
pop
sub
or
pop
mov
popf
mov
pop
pop
filds
cmpsl
ljmp
sub
roll
decb
adc
lcall
jmp
push
dec
dec
mov
dec
jae
clc
lcall
in
pop
mov
mov
jnp
movsl
out
rcll
jp
in
push
sbb
adc
in
pop
push
dec
pop
mov
inc
mov
cs
loope
out
xor
cmp
xchg
push
pop
stc
or
mov
jbe
hlt
stc
adc
or
add
jmp
push
push
pusha
sub
shlb
in
into
negl
mov
test
jns
push
jb
pop
out
cmpsb
mov
pop
stos
ret
jmp
mov
jmp
scas
popa
xchg
pop
loop
mov
lret
sub
mov
ret
mov
mov
mov
inc
sub
sbb
das
fnstsw
pusha
lods
or
xchg
lcall
cmp
negl
insb
cld
leave
test
xchg
hlt
mov
sbb
push
mov
push
jne
add
sub
mov
pushl
stc
not
jge
in
add
hlt
das
jae
repnz
mov
movsl
in
cmp
xor
cmpb
cs
mov
or
or
pop
lcall
movsb
push
mov
xchg
fwait
imul
pop
in
std
shll
or
stos
jbe
mov
fwait
nop
pop
push
jo
or
lret
lock
in
ljmp
xlat
repz
rcl
or
push
jmp
mov
and
jl
into
xchg
js
std
pop
bound
rcrb
dec
xor
fcmove
incl
add
in
popf
cmc
mov
xor
mov
popf
jl
fmull
jge
mov
sbb
dec
push
or
aaa
or
mov
lcall
mov
xchg
pushf
out
adcl
outsb
sub
jb
sub
mov
push
jae
mov
inc
cltd
or
gs
ljmp
cmp
inc
push
jne
and
nop
and
leave
xchg
sub
pop
dec
dec
lods
jmp
jp
sbb
jg
inc
pop
fidivl
and
dec
mulb
lock
adc
mov
das
outsb
fistl
sub
or
add
pop
adc
inc
mov
jno
dec
and
push
or
xchg
cmp
popf
ss
lds
testb
enter
aaa
pop
imul
repnz
jle
jae
nop
in
jg
push
int
iret
ljmp
inc
or
adc
mov
sti
xor
loopne
in
lcall
pusha
lds
loop
popa
jle
mov
addr16
inc
subb
adc
pop
cmp
iret
mov
enter
nop
stos
xchg
sbb
jecxz,pt
push
adc
fmull
int
das
and
int3
dec
mov
mov
inc
fisttpll
aam
cld
test
cmp
push
pusha
int
into
ror
mov
es
jle
sub
sub
add
adc
mov
xlat
mov
fstps
adcl
jl
addl
vmovntps
and
insb
sub
dec
cmp
lea
ja
xchg
mov
test
outsb
cmpsb
mov
ret
insb
jg
adc
jge
jle
mov
call
sub
mov
sbb
xchg
push
repz
add
jmp
push
lock
stc
or
sbb
push
push
cmp
pop
je
in
mov
sub
adc
popa
leave
xor
jno
aas
rcrl
add
mov
ja
sub
mov
push
scas
loop
clc
std
dec
sub
add
insb
sti
push
jae
push
cmpsb
xchg
inc
cwtl
dec
outsb
inc
xor
dec
in
xchg
in
jbe,pn
mov
in
addr16
mov
pop
cwtl
mov
shll
push
dec
push
int3
cmc
fists
bts
add
sbb
test
pop
push
mov
xor
lcall
mov
aad
push
jg
test
popa
add
sub
xor
loop
and
cmp
jns
sahf
cs
dec
and
or
lea
push
cmpsl
mov
jne
rolb
mov
lcall
jne
or
popa
push
fldenv
mov
add
fwait
ljmp
and
or
in
in
push
pop
adc
xchg
mov
or
dec
push
insb
xchg
mov
sti
fistpl
mov
inc
sbb
not
mov
ret
xchg
xchg
xchg
dec
mov
xor
jns
cltd
push
arpl
inc
sub
nop
mov
xor
mov
xor
or
dec
cmpsl
mov
sub
mov
jne
gs
mov
add
fdivrs
and
jnp
in
sar
jo
cmpps
sub
pop
subl
jno
jge
dec
jbe
sub
adc
cmp
inc
int
aam
xchg
mov
xor
jns
cld
cvtdq2ps
dec
pop
jne
pop
inc
add
jbe
ljmp
imul
push
add
push
std
ret
out
inc
loop
mov
in
mov
jns
push
adc
sarl
dec
sub
pop
aas
mov
loopne
sbb
imul
pop
jo
cmp
sub
mov
cmp
push
decb
jge
mov
int
xchg
push
push
out
cld
out
fnstcw
jb
bound
dec
lods
cmp
in
out
mov
sub
dec
dec
setbe
stc
or
pop
imul
pusha
jl
mov
dec
or
repnz
adc
mov
jle
icebp
out
dec
mov
aas
xor
js
imul
int
lea
xchg
fwait
call
and
cmp
mov
dec
lret
xchg
ret
fsubp
adc
push
xchg
cmp
sub
mov
xor
rcrl
lea
sub
jno
test
lock
fcoml
aam
andb
sbb
and
repz
std
movsb
jp
ss
neg
lret
or
movsl
mov
pop
adc
ja
test
aas
ja
je
std
call
cwtl
data16
cld
sbb
mov
loop
add
divb
test
std
idivb
dec
adc
mov
push
lea
mov
ret
cltd
xchg
cmc
out
cld
mov
mov
in
cmp
push
dec
pop
mov
jl
xor
jmp
leave
xchg
mov
mov
int3
jg
fs
movnti
clc
test
push
cmpsb
mov
jecxz
cld
repnz
repnz
fisubrl
sbb
xor
push
fucomip
daa
iret
subl
or
jbe
or
dec
inc
lahf
leave
push
dec
xchg
loopne
outsb
cmpb
pop
pushf
cmpsl
sub
jmp
mov
xchg
sub
xchg
jg
loop
outsl
pop
mov
and
fcomps
nop
mov
push
mov
lret
lds
mov
aas
mov
mov
mov
mov
rolb
mov
cltd
fmuls
dec
int3
jo
in
out
sbb
inc
xchg
aaa
std
rol
mov
hlt
jne
hlt
pop
ljmp
cmp
popf
out
push
rcrl
rcr
push
jle
jle
xor
and
xor
push
int3
xchg
xchg
loopne
int
sbbb
insl
adc
pop
je
cmpl
and
arpl
cwtl
or
imul
loope
test
fcompl
mov
ret
xor
or
mov
jg
pop
arpl
cmp
jb
xor
cld
mov
pop
jle
into
andb
fcomp
jno
pop
loope
addr16
jp
mov
cmpsb
sbb
aam
xchg
push
cld
fs
movsb
or
xor
test
leave
divb
inc
nop
div
aad
mov
in
pushf
out
sub
stc
test
xchg
sbb
lods
movb
out
mull
clc
stos
scas
mov
pushf
lods
inc
loopne
and
mov
push
std
adc
mov
inc
cmp
fsubp
jl
jno
mov
or
xlat
rorb
push
fwait
dec
pusha
fdiv
loopne
or
sbbb
or
lret
test
leave
dec
sbb
aas
jb
pop
xchg
mov
ss
add
test
or
ljmp
and
out
test
out
cmc
movsl
cmp
stos
mul
cmp
loop
lods
push
push
movsb
jle
mov
push
int3
gs
add
stos
cmpsb
push
pop
pop
add
and
adc
leave
xchg
dec
sbb
aaa
cmp
add
mov
sub
ja
test
rcr
in
inc
ss
and
pop
into
loop
lea
push
dec
mov
mov
sub
aaa
int
xor
ds
mov
ja
pmulhuw
into
inc
cmp
adc
mov
fiadds
add
cmp
push
lods
or
aam
mov
dec
mov
xor
or
filds
enter
sti
stos
sbb
popf
xor
js
xchg
lret
xor
adc
hlt
aas
andl
mov
dec
add
jnp
scas
loop
fldcw
push
ljmp
xchg
push
xor
jno
mov
dec
js
jbe
mov
push
cwtl
in
cmc
jae
xchg
xchg
leave
negb
push
push
js
lock
mov
cmp
mov
lods
aas
aaa
ja
jge
insb
pop
dec
inc
insl
sub
mov
js
rcl
push
shl
mov
ljmp
dec
push
in
push
outsl
icebp
cli
sahf
push
dec
xchg
push
mov
repnz
and
push
push
call
not
decl
faddl
imul
sbb
rorb
in
out
adc
jb
decb
jne
xlat
cld
add
in
xchg
ss
jecxz
pop
xor
xor
lods
inc
inc
jmp
xchg
out
push
ret
cs
out
in
xchg
jp
mov
jne
lods
mov
cmp
mov
and
popa
push
fsubrp
in
scas
das
in
inc
cmpsb
xor
ret
and
sti
sub
sbbb
andb
outsl
nop
dec
lds
push
adc
out
xchg
test
icebp
jns
push
push
aaa
pop
jecxz
loop
loopne
mov
mov
mov
pop
and
popl
mov
xor
into
pushl
cmpsl
scas
ljmp
push
sub
xlat
std
negl
sbb
movsl
ds
cmp
fcoml
push
dec
mov
jg
add
xchg
fldenv
xchg
jbe
ja
mov
fidivl
rorb
mov
ds
dec
popa
insb
test
xchg
iret
sub
pop
cltd
mov
jo
cmp
shrb
mov
mov
scas
sbb
jmp
mov
mov
scas
sub
and
and
push
insl
adc
fistl
lahf
cwtl
aas
mov
ret
jae
adc
sub
mov
lret
add
pushf
cs
icebp
add
cltd
jl
push
sbb
xchg
pusha
idivb
iret
dec
xor
std
dec
in
in
lock
and
xchg
sub
fs
jne
nop/reserved
nop
pop
cmp
stc
pusha
mov
fldcw
xchg
into
push
cmc
dec
out
out
loopne
dec
and
lcall
dec
mov
push
sub
loope
and
dec
and
lods
mov
fwait
and
push
mov
pop
jl
or
jl
or
sub
add
mov
cltd
push
cmp
enter
cmp
nop
mov
es
int
or
jge
cmc
push
es
sub
sub
ret
mov
scas
arpl
cmp
xchg
push
adc
sub
mov
sbb
jbe
rcrb
hlt
inc
sub
js
pop
aaa
fstpl
sbb
or
fadds
push
add
subb
sub
cmp
adc
xor
fldcw
sbb
sbb
movsb
sbb
jp
aas
dec
out
mov
cmpsb
cmp
and
cmp
jnp
int3
pop
pop
add
into
mov
jge
jb
mov
and
scas
stos
mov
or
dec
test
mov
mov
xor
cmp
negl
outsl
movl
stos
scas
add
movsl
sbb
arpl
adc
setp
push
ja
add
pop
mov
stos
pop
sbb
push
es
adc
dec
xchg
lock
sbb
push
repnz
pop
pop
es
insb
daa
mov
incl
xor
xchg
sub
lahf
icebp
and
or
inc
pop
mov
js
xor
push
jo
xchg
jbe
arpl
pusha
mov
jmp
mov
hlt
pop
lea
test
and
add
loope
or
aas
pop
mov
into
fildl
inc
cltd
ja
dec
mov
icebp
orb
addl
mov
scas
shlb
sub
ret
add
push
addl
out
lret
repz
leave
mov
adc
rorb
add
pop
xchg
push
mov
das
dec
pop
repz
in
out
push
movsl
inc
push
or
sbb
out
add
jle
sarb
imull
and
bound
movsl
add
jmp
stc
sub
sub
hlt
mov
xor
je
add
add
sbb
addb
clc
sub
daa
int
mov
add
test
jo
pop
ja
cs
xor
pop
loopne
pushf
fwait
cmp
call
shl
out
mov
push
sti
dec
xchg
add
mov
xchg
inc
push
int3
cmp
and
into
popa
cmc
mov
adc
xchg
cwtl
cwtl
hlt
dec
hlt
outsl
mov
sub
pop
mov
stos
cltd
lret
cmpb
cmp
cmp
pop
inc
aam
aad
jp
mov
fwait
sbb
rorl
fcomps
call
jae
sub
gs
in
aaa
xor
sahf
inc
inc
ds
add
test
mov
jno
or
add
aam
push
mov
scas
test
sahf
cmp
push
push
push
aad
addr16
xlat
pop
mov
sbb
lahf
mov
adc
ds
fldenv
vhsubps
ljmpw
mov
pop
pop
mov
mov
xor
xchg
iret
jo
pushf
test
adc
push
sti
push
insl
mov
adc
lods
lds
iret
dec
inc
mov
repz
pop
arpl
adc
imul
sbb
hlt
rcrl
test
sbb
test
cmpsb
and
jae
cltd
cmp
pusha
mov
std
rcr
fisubrs
lret
jo
ret
lahf
pushf
or
nop
sub
repz
subb
or
adc
cmp
out
ljmp
stc
push
nop
andb
dec
fs
xor
mov
and
jae
mov
push
movsb
stos
test
dec
xor
movsl
pop
dec
popf
pusha
inc
jnp
mov
shl
inc
adc
lea
test
mov
jae
cld
fcompl
imul
add
insb
push
inc
mov
mov
scas
adc
cmp
cs
sub
das
cmc
insb
packuswb
pop
mov
sub
stos
dec
add
ficoml
jb
cli
xchg
fdivrp
sub
sbb
jbe
pop
pop
mov
and
inc
jb
out
bound
enter
pop
icebp
jmp
ss
addr16
cmp
mov
rcr
inc
xor
shlb
lods
jb
push
ds
mov
push
pop
ret
dec
xchg
ds
aam
mov
jb
inc
fdivrl
stc
xor
xorl
arpl
int
inc
xchg
in
int
push
mov
loopne
gs
mov
andb
ljmp
subl
dec
mov
in
sbb
addb
dec
ror
nop
jne
mov
mov
dec
add
in
punpckhbw
dec
inc
popf
cmp
mov
inc
jb
xor
push
jp
mov
or
shrl
fbld
jge
mov
xor
adc
es
or
es
mov
pop
sbb
jno
mov
int3
std
sbb
cmp
rol
lcall
out
cli
int3
pop
mov
jo
dec
mov
insl
shlb
popf
push
cmovge
outsl
push
ja
scas
xchg
hlt
jle
and
push
mov
mov
decb
pop
cld
dec
sbb
dec
bound
cltd
out
rolb
lret
mov
dec
lods
outsb
push
mov
jecxz
xor
push
push
in
xor
in
dec
scas
add
aaa
test
insb
int
outsb
xchg
test
jnp
dec
cwtl
inc
test
push
add
lret
xor
rol
pop
mov
xchg
push
inc
dec
pop
xchg
pushf
and
rcr
stos
push
repnz
or
int3
pushf
pop
lock
loop
pop
inc
and
cwtl
subb
sub
or
das
push
jno
outsl
push
sub
outsb
xor
subb
mov
rorl
fsubr
mov
pop
mov
push
and
push
jbe
push
xchg
test
in
test
cmpsl
mov
xlat
outsb
xchg
outsb
int
loope
mov
data16
fldcw
mov
pop
scas
or
add
inc
cs
sbbl
cmpl
cmc
inc
pop
sub
jmp
loope
mov
xchg
push
jl
test
lahf
sbb
jns
scas
pop
xchg
cmpl
jbe
add
push
mov
test
pop
cmc
mov
cmp
or
mov
nop
adc
sarb
cmp
les
outsb
lods
xchg
push
push
test
xor
call
xchg
inc
jmp
fsubrs
mov
cltd
into
outsb
adc
in
sbb
outsl
loopew
sbb
cmp
les
adc
mov
cmc
xor
and
inc
stc
stos
jp
movsl
enter
sub
aaa
or
adc
cmp
loopne
loop
in
fimuls
sub
lcall
into
addr16
sbbl
es
das
sub
push
addr16
xchg
xchg
dec
fnstcw
or
pop
push
xchg
pushf
neg
ljmp
xchg
sahf
aam
push
mov
in
mov
repz
fcmovnu
pmulhuw
add
inc
in
xor
xchg
inc
cli
push
test
test
add
xchg
test
and
pop
addb
pop
cmp
movsl
stos
or
lds
xchg
lea
arpl
and
in
lds
mov
inc
ffree
inc
sbb
sbb
out
push
dec
inc
fbld
adc
dec
aaa
sbb
sbb
lcall
aas
aad
pop
ja
gs
xchg
mov
mov
cwtl
cmp
sub
aad
je
ds
outsl
test
popf
sbb
shrl
pop
mov
adc
sahf
sbb
or
push
jmp
cli
scas
mov
or
vmread
adc
sub
insl
fmull
inc
gs
cmp
adc
mov
movsl
jge
jo
mov
fs
sub
lcall
add
sahf
sbb
cltd
aas
sub
mov
jp
out
and
push
pop
xor
fistl
sub
hlt
mov
mov
adc
fwait
js
inc
insl
outsl
mov
aam
mov
pusha
insl
neg
adc
mov
push
in
ret
repnz
sub
or
dec
cmp
in
outsl
aad
push
das
pop
mov
mov
mov
push
add
inc
cli
push
nop
lcall
sub
loop
mov
pop
and
or
aas
inc
fstp
mov
jmp
adc
pop
dec
jnp
push
pop
cmp
dec
stc
cs
cs
loopne
mov
loope
mov
mov
pop
inc
rclb
inc
rorl
jbe
and
jae
xchg
clc
mov
jo
sbb
je
mov
imul
push
pop
decb
mov
cmpsb
xchg
aad
inc
mov
iret
orl
lods
jl
sti
cmp
sub
addr16
mov
stos
cs
aaa
divl
cmp
mov
dec
mov
mov
mov
and
shl
mov
jb
sub
dec
divl
cmp
into
jp
push
jecxz
sar
jp
aas
push
xchg
inc
popa
ljmp
sbb
aas
inc
bound
mov
je
add
xor
loope
hlt
xchg
stc
sbb
stos
loop
mov
cwtl
fcoms
or
or
mov
and
push
loopne
xor
lahf
rorl
or
lret
xor
sti
mov
pop
push
sti
jbe
enter
gs
sbb
mov
shr
push
std
iret
jae
inc
push
and
int3
adc
icebp
add
iret
stos
loop
stos
lods
inc
pop
iret
jg
cwtl
jnp
sub
imul
out
mov
insl
insl
fisubl
repnz
dec
xchg
int3
enter
ja
bound
pop
stos
inc
mov
out
fyl2x
orl
sbbl
dec
mov
nop
fldt
addb
adc
sub
push
icebp
sti
xchg
and
xchg
test
xor
je
add
pop
xchg
xor
fstps
les
es
mov
mov
pop
loope
pop
push
xchg
std
lret
push
xor
stc
in
mov
data16
xchg
scas
push
daa
dec
adc
cmpsl
push
and
push
fists
mov
pop
movsb
jle
mov
inc
xchg
jl
xchg
je
ss
push
cmp
inc
cmpsl
and
aas
dec
aad
pop
into
out
int3
cltd
shll
sbb
cmpw
fistpl
mov
pop
lock
inc
andl
dec
xchg
mov
out
test
ret
into
call
pop
fstpt
lcall
xor
xchg
push
jno
out
pop
cmpsl
test
outsl
sbb
aaa
push
jge
adc
lret
test
xchg
lret
jnp
insl
mov
mov
jae
xor
inc
fcoml
push
aas
push
sahf
jb
dec
aas
ss
cld
inc
mov
xchg
cli
pop
out
and
and
ss
and
aaa
clc
pop
push
aam
lods
dec
push
push
popa
cmp
sub
js
clc
mov
jge
mov
xchg
loop
pushf
xor
stc
pop
or
subb
scas
mov
clc
mov
shll
lods
mov
mov
push
test
jle
pop
aam
and
cli
cmp
cli
xchg
push
xchg
test
xchg
xor
out
sub
lcall
mov
aas
call
flds
push
rolb
call
iret
sub
mov
mov
popa
fbld
inc
fdivs
outsb
mov
into
sub
fsubs
mov
das
xor
xchg
jbe
pop
inc
xchg
sti
add
scas
rcrl
iret
and
test
push
and
cmp
icebp
movb
pop
lods
rcrb
cld
outsb
lea
push
xor
xor
mov
pop
jmp
lds
sub
sarl
movsl
mov
out
push
call
xchg
jl
mov
sbb
fwait
mov
pop
loope
push
sbb
js
das
lret
and
push
bound
cmpsb
into
in
add
ss
xchg
push
inc
adc
jae
imul
test
sbb
daa
push
push
pop
mov
cmp
jae
inc
ds
cmc
pop
xor
ret
mov
pop
scas
cmp
jne
cmp
and
cmp
cltd
imul
out
cmp
jb
ss
mov
insl
push
clc
div
incb
pop
xchg
mov
pop
add
subb
inc
iret
add
or
jp
pop
cmp
adc
cwtl
shrl
fldenv
bound
adc
loop
hlt
fbld
cltd
xchg
cmpsb
fwait
scas
out
mov
daa
and
arpl
xchg
sbb
out
nop
gs
in
enter
lcall
add
or
jge
jl
and
sti
sti
dec
inc
mov
notl
adc
pusha
add
inc
sti
pusha
loopne
sub
push
es
sub
jmp
and
mov
pop
add
rcl
dec
shll
es
test
clc
icebp
cmp
jge
sbb
mov
sarl
test
jmp
insb
pop
push
test
shr
jecxz
stos
sbb
fwait
pop
jb
xchg
inc
adc
ds
scas
pop
sbb
xchg
ljmp
mov
cmp
adc
xor
dec
cmpsb
movsl
loop
pop
ja
gs
push
std
aaa
cmp
sub
dec
nop
dec
in
test
and
and
fwait
pop
clc
pop
cmp
or
pop
shll
fwait
test
and
cmp
jp
ret
mov
sbb
daa
sub
iret
icebp
xchg
mov
add
ja
xor
or
clc
shll
int3
cli
sbb
repz
add
shll
cmp
and
add
repnz
in
push
mov
notl
inc
and
mov
test
cmpsb
jo
imul
mov
outsl
jb
cli
es
frndint
push
test
ror
std
mov
or
sbb
cli
jns
out
mov
popl
repnz
inc
mov
fstl
rcrl
stc
outsb
lret
imul
mov
popl
into
cmp
lods
dec
xor
test
fadd
add
nop
mov
cmpsb
cmpsl
mov
dec
cwtl
and
nop
mov
mov
xor
lock
xchg
arpl
mov
and
addb
dec
nop
outsb
mov
test
outsb
xchg
jmp
jle
idiv
lods
jb
push
cmp
out
mov
cmc
mov
push
aas
leave
push
xlat
push
adc
sub
call
dec
daa
jge
xchg
fidivrs
push
mov
push
std
je
or
jle
bound
mov
sub
or
push
les
das
jle
stos
test
fisubrl
mov
xchg
push
mov
mov
pop
pop
sbb
fcomps
mov
dec
and
gs
pop
std
pop
sbb
icebp
mov
mov
cmp
int3
lds
mov
ljmp
mov
stc
mov
mov
mov
sbb
movsb
and
cltd
pop
or
adcl
enter
in
int
bound
push
jmp
aam
cs
sbbl
fmuls
and
pop
into
outsb
add
push
inc
loopne
and
jl
mov
dec
xor
mov
ja
mov
arpl
adc
mov
or
leave
movsb
repnz
add
imul
stos
test
xchg
iret
sbb
cmp
push
or
push
std
ss
fadds
cmpsl
pop
push
sub
jnp
jb
sti
cs
pop
xor
test
les
popf
ret
test
xchg
stos
xor
aaa
and
stos
inc
push
dec
mov
mov
mov
sbb
sub
pusha
mov
popa
fsts
loop
imul
cld
pop
cmpsl
rcrl
jnp
pop
int3
in
fdiv
jmp
imul
insb
stos
jno
and
iret
mov
cmp
sub
and
js
push
mov
and
sbb
cmp
push
push
addr16
jnp
cmp
lock
push
cvttps2pi
inc
cli
mov
andl
cmp
ret
addr16
ret
scas
andl
adc
scas
mov
ds
dec
mov
adc
fidivrs
repz
es
or
lds
lret
popl
repnz
and
test
out
and
add
push
mov
outsl
lods
stos
push
inc
cmp
ret
add
sub
adc
shl
push
loop
pop
arpl
jmp
or
sub
add
dec
adc
insl
mov
andb
dec
pop
pop
hlt
jbe
addb
daa
sub
push
shll
jne
jo
inc
cmc
xchg
adc
fs
jb
mov
lods
add
xchg
sub
jle
addb
mov
scas
outsl
mov
or
jle
insl
sub
push
mov
add
cmp
ror
mov
pop
and
push
xchg
rclb
bound
popf
cwtl
xadd
and
mov
mov
in
lods
sub
lods
lcall
lahf
dec
push
mov
int3
fimull
int3
inc
stc
xor
and
pop
push
ficomps
jl
rcrb
add
jl
fiaddl
ficoms
ja
jbe
or
ss
not
inc
cmc
or
pushf
in
adcl
xchg
mov
jnp
ss
cmp
and
sarl
xor
adc
sub
aas
leave
cmpsb
mov
loop
lret
and
and
mov
subb
adc
loopne
pusha
xchg
mov
push
aad
cmp
mov
stc
adc
push
lret
mov
mov
xchg
in
xchg
mov
adc
ds
cltd
sbb
cltd
imul
push
sti
xchg
test
sbb
xchg
pop
lea
mov
bound
jbe
in
inc
aad
bswap
rcr
xchg
decl
jl
jge
add
lret
adc
xchg
in
or
addr16
leave
jnp
or
jnp
cmp
xor
inc
jae
pop
in
loope
loop
orl
cs
mov
mov
lret
xchg
or
xchg
jnp
std
mov
and
pop
jbe
cmp
or
jb
dec
mov
int3
pop
mov
push
mov
inc
negl
xchg
sahf
shrb
daa
push
push
xor
sbb
adc
bound
jb
in
fcomp
inc
mov
test
and
push
add
daa
js
in
xchg
mov
cvttps2pi
ds
cmp
out
push
xor
rcll
xchg
adc
or
push
and
adc
aaa
jo
mov
loopne
in
mov
dec
in
jmp
push
adc
lret
test
mov
xabort
mov
out
outsl
inc
es
xchg
push
push
mov
jb
mov
orl
das
push
pop
jo
xor
mov
cmp
xchg
test
xchg
rorl
ja
mov
cmp
sarb
adc
xchg
cmp
out
mov
bound
or
mov
pop
daa
pop
mov
sbb
stc
loop
xchg
pop
call
pop
lea
add
push
mov
roll
pusha
negl
fistpl
or
inc
xchg
es
pop
inc
rcrb
aaa
cmp
pop
gs
inc
repnz
push
mov
lret
ljmp
pop
insb
pusha
xor
cmp
dec
push
sub
xchg
out
insb
pop
and
test
jbe
adc
inc
out
clc
insl
push
iret
adc
mov
clc
mov
sub
adc
sub
jnp
mov
mov
adc
adc
add
mov
mov
mov
notl
movsl
imul
imul
xchg
xchg
dec
faddl
fldenv
outsb
add
xor
rolb
ds
nop
xor
sub
mov
pop
ja
add
xchg
aam
xchg
push
jmp
pop
fldcw
in
add
aaa
xchg
xchg
xor
mov
mov
cmp
mov
fiaddl
push
mov
fildl
push
daa
fiadds
in
sub
xor
test
scas
sub
add
lock
inc
aas
mov
inc
push
dec
ret
dec
test
and
dec
pop
stc
ljmp
int
shlb
and
dec
pop
cmovge
je
sti
push
dec
xchg
push
int3
mov
jae
mov
das
jge
jnp
xchg
jmp
xchg
in
xor
and
add
mov
popf
sub
mov
lahf
lret
add
jne
stc
mov
fcompl
adc
insl
call
std
mov
sbbl
and
add
inc
ja
sbb
fwait
sub
arpl
mov
ss
pop
and
mov
cmpsl
stc
pop
sbb
cmp
loop
data16
lods
lahf
or
aad
adc
mov
mov
sahf
mov
mov
push
push
mov
ljmpw
push
pop
call
mov
shl
pop
or
push
jp
push
rep
fisttpl
add
shll
cmp
sbb
mov
mov
les
add
pop
test
sub
jl
rcrb
mov
add
push
push
std
xor
test
or
ret
dec
movntps
scas
xchg
cmp
aad
js
jle
and
adc
adc
sbb
xchg
inc
adc
sbb
jmp
mov
sub
inc
bound
jns
mov
inc
cli
stos
aam
ffree
aad
sahf
mov
inc
push
and
sub
inc
add
xchg
inc
pop
call
sbb
mov
or
xor
pop
inc
and
shrl
cmpsl
adc
lahf
je
mov
lret
mov
xor
jns
dec
lds
and
jno
mov
pop
into
and
mov
xchg
push
aam
cmp
insb
out
dec
add
push
cmp
dec
xlat
mov
xor
jo
dec
orl
cli
lret
sbb
jns
ret
mov
js
push
mov
ljmp
or
cmp
outsb
stos
pop
pop
inc
push
insl
mov
cmp
pop
dec
popf
stc
and
cmpsl
xchg
xor
hlt
add
ja
mov
fidivrs
mov
xchg
mov
jb
out
rorl
shlb
jle
cmp
add
sarw
shlb
push
insl
rolb
push
rcrb
add
mov
stc
sarb
movsb
cmc
lock
test
cltd
xchg
bound
fs
clc
aam
mov
or
sbb
xor
loopne
jo
mov
loop
xor
push
sub
and
lods
mov
shlb
and
xchg
test
and
or
dec
ss
into
xchg
cmp
pop
ljmp
jns
in
cltd
xor
mov
lea
lret
inc
into
hlt
icebp
push
xchg
lret
lods
adc
out
push
or
repz
dec
imul
inc
in
pop
mov
or
sahf
sub
aaa
push
mov
adc
aaa
mov
xchg
lea
call
jecxz
or
or
and
pop
or
cmpsb
xor
loop
rorb
add
clc
cmc
jo
test
mov
xor
xchg
sub
enter
mull
jg
pusha
psubsw
ret
add
cwtl
jb
inc
out
stos
test
sbb
clc
push
xchg
lea
sbb
xchg
std
popa
mov
insb
sti
sub
daa
aas
xchg
lods
or
add
icebp
ljmp
pushf
sbb
sti
pop
mov
dec
scas
adc
and
jle
dec
xchg
cmovl
out
lock
inc
add
mov
aad
pop
pop
bound
push
mov
push
sahf
xchg
cwtl
ret
xchg
inc
push
mov
and
xor
pop
mov
sbb
dec
sub
fildll
push
mov
add
outsl
test
pop
mov
adc
pop
xchg
es
test
femms
ljmp
out
mov
lret
mov
aaa
xchg
cmp
sub
fisttpll
xchg
and
aaa
cwtl
xchg
push
cmp
add
push
inc
imul
aad
push
push
inc
movsb
mov
sub
xchg
adc
cs
xor
pop
stos
shr
cmpb
rcrb
xchg
xchg
sti
adc
int
movsb
push
jmp
or
cmc
pop
mov
fimull
mov
les
ljmp
repz
inc
push
mov
mov
xchg
or
in
add
out
inc
iret
sti
xor
test
jo
dec
cwtl
push
cs
mov
fisubrl
mov
pop
cmp
mov
or
std
push
cld
test
bound
xchg
mov
bound
push
mov
ds
scas
jecxz
arpl
xchg
hlt
push
es
loope
ljmp
and
jge
rcr
add
mov
data16
les
jmp
or
xchg
test
mov
dec
movsl
xchg
or
xor
sub
inc
adc
add
and
or
lcall
cmp
pop
mov
xchg
shll
jecxz
sbb
mov
or
fneni(8087
push
mov
jg
push
inc
pusha
inc
xlat
xlat
pop
and
rcr
pop
xlat
add
aaa
adc
xorb
lahf
into
lea
push
ljmp
ja
divb
inc
push
and
lds
fucomp
test
adc
mov
inc
push
fxch
popa
pop
ljmp
fsubrl
in
dec
xor
jo
add
sub
mov
shrb
imul
mov
aad
inc
ret
push
jns
mov
pop
fsubrs
fwait
jmp
mov
sub
xor
adc
mov
in
inc
leave
bnd
testb
mov
dec
sbb
repnz
mov
shrb
jg
dec
mov
dec
call
cmp
sub
jge
repnz
jne
mov
fnsave
jo
mov
out
imul
clc
adc
inc
mov
add
pop
mov
inc
xor
cmp
xor
lcall
test
mov
mov
pusha
and
adc
test
mov
inc
cltd
rcll
mov
or
in
clc
in
fs
sub
or
lahf
mov
and
sbb
push
in
mov
lods
outsb
mov
lea
sbb
std
fsub
sub
dec
mov
jge
pushl
lret
cmc
push
insl
lcall
pop
pop
pop
sub
daa
lock
mov
inc
lods
xchg
inc
fistps
pop
out
mov
jae
es
rol
sahf
mov
push
push
in
cmp
int3
dec
test
orl
cs
xchg
int3
or
lret
les
fnstsw
sbb
dec
je
addl
inc
mull
outsb
dec
jecxz
icebp
fwait
sub
xor
insb
insb
jb
sarb
xchg
and
and
sbb
and
insb
fidivl
daa
je
aaa
mov
lea
sub
add
ret
movb
dec
cli
mov
xchg
xchg
and
cltd
cmp
mov
stos
inc
pop
aaa
xchg
cmpsl
or
sub
rclb
sbb
or
add
jmp
cmp
pop
mov
adcb
imul
xchg
cmpsb
dec
idivb
jg
mov
adc
adc
es
cli
pop
out
shlb
into
cltd
cmpsb
pushf
movsl
ret
lret
cmpsl
push
call
xchg
rcll
push
push
add
stc
shl
int
jno
mov
cmp
addr16
mov
pushf
pop
es
aam
mov
mov
dec
mov
aad
add
adc
cld
jecxz
adc
lds
cmp
sahf
lods
aas
adc
fldenv
iret
dec
add
lret
xor
call
clc
jecxz
add
sub
iret
push
fwait
mov
bound
fs
sub
push
inc
call
jl
cmp
push
jae
scas
adc
sbb
mov
sbb
fsubrl
mov
pop
ficoms
adc
aad
add
jecxz
pop
mov
sub
or
mov
subb
add
or
bound
mov
das
ja
scas
mov
jecxz
or
sub
jl
mov
add
lret
sahf
cs
jne
jnp
stc
decb
push
mov
xchg
ds
rcl
adc
in
push
adc
repz
jne
ror
dec
mov
icebp
aad
jae
xor
or
sti
dec
mov
xchg
pushf
inc
cmp
add
dec
xor
divb
mov
daa
sahf
out
jle
inc
imul
loop
push
lahf
inc
insl
aam
cld
int
sbb
cmp
leave
pusha
cmp
push
bound
outsl
jns
jb
dec
mov
dec
pop
sub
cmpl
sub
adc
mov
dec
sub
rolb
push
mov
sub
push
lds
cmp
das
iret
std
into
sbb
sbb
push
popf
dec
jne
dec
sbb
imul
jle
repz
adc
leave
jl
push
test
mov
mov
pusha
sbb
inc
mov
iret
rcrb
push
adc
repz
sub
adc
ljmp
sub
pushf
sbb
and
daa
pop
shrl
lods
sub
xor
cltd
and
stos
int
in
out
bound
popa
cltd
add
scas
push
mov
xlat
jle
push
shl
leave
hlt
hlt
fildll
rcr
adc
out
mov
in
faddl
push
inc
iretw
roll
int
cmpsl
inc
pop
sbb
pop
sub
jl
push
jns
mov
and
xor
push
in
scas
and
aaa
das
xlat
iret
lock
addr16
cld
ret
mov
xlat
jp
scas
xor
xchg
ja
add
jne
sub
push
incl
fwait
and
aam
lock
mov
jb
cs
out
push
and
add
mov
pop
mov
mov
addr16
nop
mov
addb
dec
dec
ljmp
sbb
or
jb
fimuls
xchg
xchg
push
scas
pop
sbb
call
pushf
mov
xchg
ljmp
test
mov
shl
xchg
inc
or
or
pop
mov
cmpsl
addb
fisubrs
cmp
pop
xor
jmp
or
sbb
in
adc
cmp
in
jae,pt
mov
aam
fsqrt
mov
mov
jg
int3
pop
xor
andl
push
lea
jge
add
lods
out
sub
push
inc
roll
inc
jne
and
es
repz
fs
lea
push
pop
push
sbb
or
fmull
iret
sub
cwtl
stc
dec
popa
jae
jmp
scas
repz
sbb
hlt
mov
fisttpl
push
iret
cli
fs
nop
cld
sbb
pop
popa
push
and
add
mov
pushf
or
inc
pop
clc
lret
aam
int3
mov
push
loope
fnstenv
test
aad
ss
jbe
sbb
sbb
adc
and
jg
pop
loopne
enter
xor
sub
insl
jmp
cmp
sub
or
cmp
and
cs
xchg
adc
dec
ja
iret
cwtl
cltd
mov
cltd
mov
in
fcoms
mov
in
or
pushf
push
xor
mov
inc
cld
mov
mov
adc
adc
scas
inc
gs
clc
mov
jno
lcall
scas
test
ds
out
lea
rorl
pop
std
rcr
xor
push
rclb
inc
push
or
or
in
mov
cmp
cmp
lcall
leave
out
inc
xor
popa
inc
add
dec
icebp
sbb
xor
xchg
push
pop
cmc
push
ds
jbe
jns
ja
mov
or
inc
aaa
push
mov
scas
mov
sbb
hlt
push
fidivrl
fisubs
nop
insl
adc
cltd
push
and
stos
lea
test
dec
in
pop
cmp
xor
cmp
lods
push
idiv
stos
cmp
enter
rorl
xlat
aas
jae
sub
int
push
in
mov
pushf
test
dec
jnp
inc
push
jmp
xor
and
jno
adc
xor
cmp
test
mov
imul
popa
loop
sub
xchg
jmp
jae
cli
lret
adc
pop
int
xor
lret
jl
mov
cmp
mov
std
xchg
mull
insb
out
cld
inc
and
notb
les
jge
mov
jle
mov
jo
sbb
bound
inc
daa
cmp
pop
push
pop
xchg
sbb
lods
push
inc
jp
ljmp
sar
xchg
cmpsl
mov
cmp
jecxz
adc
sub
daa
nop
jl
mov
outsb
mov
sbb
loopne
xchg
lods
lahf
mov
pop
fsubl
test
dec
inc
mov
lcall
xchg
mov
pop
fwait
clc
inc
push
dec
xor
out
jmp
sahf
aas
sub
addl
xor
clc
xor
pop
dec
inc
jae
sbb
mov
and
or
sub
test
cmp
adc
and
cmc
inc
pop
sub
dec
push
xor
mov
rcrb
repnz
ds
hlt
in
loope
inc
pusha
dec
xor
out
and
jb
xchg
fimuls
and
dec
ret
xor
repz
add
mov
xchg
mov
js
inc
xchg
xchg
dec
add
dec
or
jge
pushf
popa
stos
inc
lock
sbb
lcall
push
push
in
adc
push
fdivrl
int
xor
or
fsubs
jg
pop
jecxz
out
cld
inc
test
adc
out
pop
mov
and
xorb
mov
mov
rolb
popf
outsl
and
pop
lock
push
scas
mov
jae
jge
jae
xlat
lods
jae
pop
ss
mov
imul
pop
dec
leave
mov
mov
pop
sub
ljmp
inc
lcall
insb
insb
xor
hlt
jne
mov
xchg
movsb
xor
aad
rorb
icebp
push
mov
add
jp
je
sti
jns
jno
leave
xor
cld
add
das
fadds
xchg
xor
jecxz
add
adc
inc
cmpsb
aas
mov
adc
test
sub
xchg
sub
dec
xchg
shll
int3
xor
push
push
and
cld
inc
pop
insb
mov
aam
inc
aad
pushf
xchg
mov
sub
popf
out
ret
std
xchg
push
xchg
sahf
dec
popa
pop
adc
sbbl
test
and
sbb
mov
dec
or
cmp
inc
cmp
ret
inc
sahf
jae
pusha
out
ret
or
jge
dec
mov
loopne
push
add
adc
mov
push
cmpsl
pop
in
xor
push
popa
fldt
push
mov
jge
push
stos
add
mov
fildl
and
push
push
xchg
hlt
jno
xlat
jmp
xor
mov
test
test
push
aas
sahf
test
test
clc
ljmp
movsb
mov
insb
jg
filds
xor
roll
loop
stc
adc
and
ljmp
add
mov
mov
adc
sbb
and
into
gs
and
push
ret
jl
add
imul
sbb
pop
repz
mov
scas
sbb
gs
inc
addr16
jle
mov
into
jmp
adc
xor
xor
add
imul
dec
lret
test
in
adc
enter
mov
jns
stos
cs
andl
imul
mov
cmpsl
adc
es
movsb
cmpsb
xorb
pop
into
push
mov
pop
into
pushf
outsb
mov
xchg
js
out
call
sti
push
jl
sub
mov
mov
jmp
xor
push
out
xchg
mov
popf
jno
xor
lock
pop
ret
add
inc
xor
and
inc
push
fwait
addr16
mov
pop
or
ljmp
jp
fucomp
mov
inc
or
jns
stos
pop
shrb
lret
mov
push
fwait
mov
push
pop
leave
aaa
mov
pop
and
fs
jbe
lea
jecxz
inc
or
hlt
clc
fnsave
mov
mov
push
insb
ds
cs
out
jno
mov
mov
dec
ja
pushl
mov
into
int
out
cs
imulb
gs
das
xor
or
mov
ljmp
mov
inc
dec
sbb
lea
and
mov
pop
mov
aaa
arpl
mov
addl
and
jmp
lock
les
sahf
adc
sbb
mov
icebp
cld
mov
push
push
cmp
bound
dec
outsb
mov
imul
das
and
cmpsb
jmp
xor
test
orb
fimull
and
int
loop
xchg
je
clc
lahf
push
fisttps
aad
dec
iret
loope
push
lcall
mov
add
insb
mov
xchg
insl
lods
fiaddl
xor
mov
faddl
fs
jbe
adc
pop
xlat
xchg
mov
icebp
movsl
adc
or
mov
or
out
sub
mov
test
cmc
sub
fmul
push
outsb
js
inc
outsl
sub
mov
inc
sub
fistpl
mov
sbb
sub
fstpl
cmp
cmp
out
cmp
sbb
jno
push
add
sub
cmpsl
loopne
cs
fcos
or
stc
cmpsl
enter
movsb
popf
scas
xor
in
mov
add
lea
jp
cmp
idivb
and
sbb
es
mov
hlt
push
xor
sbb
fsubr
jl,pn
lods
fsts
add
push
popa
mov
clc
cli
push
nop
push
pop
int3
xchg
sbb
jo
out
push
test
scas
xchg
jle
push
sbb
enter
pop
inc
jno
mov
mov
jge
adcb
int
repnz
xchg
enter
cltd
ret
dec
loopne
js
inc
test
sti
in
loopne
fimull
add
and
int3
pop
xor
data16
push
inc
divb
sbb
ja
mov
sub
aaa
add
jge
mov
add
inc
mov
hlt
mov
lea
jle
mov
popa
inc
push
push
inc
arpl
push
inc
mov
fidivs
and
pop
lods
sbb
mov
dec
mov
cmpb
jae
lret
fxch
lds
and
or
inc
dec
fwait
stos
out
sub
dec
dec
push
rol
xor
shll
lock
in
and
sub
outsl
push
loopne
gs
pop
mov
inc
and
stc
fcmovbe
sbb
jecxz
sub
gs
into
std
lods
pop
dec
test
icebp
or
subl
xchg
jns
xlat
xchg
cmp
push
cli
mov
cmpsb
adc
sub
and
lea
sbb
pop
jne
and
fidivs
stos
jp
fisubl
test
cwtl
fmuls
xlat
push
adc
jp
push
fstl
cmpsl
mov
sbb
out
mov
sbb
jecxz
add
cld
les
fs
pop
mov
inc
lods
jns
dec
cli
test
int
xor
jmp
push
xlat
and
pop
xlat
loop
sbbb
cltd
mov
out
xchg
jle
clc
inc
jg
fcomp
ret
sbb
lods
mov
ljmp
cli
and
add
inc
and
pop
fldt
mov
pop
test
mov
jno
jbe
pushf
ret
mov
jne
push
mov
lods
jne
popa
movsl
jl
daa
in
jb
sub
sbb
mov
and
xor
pop
ss
mov
dec
in
mov
decb
xchg
push
pop
lods
sub
popf
mov
push
ljmp
movsl
push
adcl
cltd
or
jne
xchg
scas
mov
enter
adc
mov
pop
dec
xor
xchg
das
push
lret
movsl
jle
add
sbbl
lea
lods
xor
scas
in
cmpsb
rcll
ficoml
cltd
dec
add
jno
push
xor
cmp
adc
iret
jmp
mov
cmp
lock
jge
movsl
or
jb
or
out
dec
cli
lahf
pop
dec
and
jns
xlat
adc
add
xor
inc
lret
xchg
jg
scas
jge
push
popf
inc
add
mov
xor
imul
mov
stos
fisttps
bnd
loope
cli
repnz
and
push
inc
stos
add
ret
sub
sbb
lret
int3
fimull
std
daa
lea
lcall
lock
rorb
jae
jbe
je
lods
aaa
cwtl
pop
push
std
dec
mov
call
push
inc
fldcw
aaa
dec
dec
rorb
ret
hlt
xchg
lds
push
repnz
shll
sbb
leave
sarl
or
insl
push
or
inc
inc
lcall
dec
rcrb
in
fistl
imul
and
sub
dec
out
xchg
clc
mov
out
dec
sbb
rcrl
mov
xchg
stos
push
cmpb
js
sbb
testl
pop
loope,pt
jae
and
sub
xchg
inc
jge
xor
adc
fwait
mov
cmpsl
cmp
mov
repz
cwtl
fucomp
mov
push
inc
in
ficompl
or
js
sub
add
jle
jge
stc
insb
fcomp
aas
cmp
int3
xchg
mov
push
pushf
or
adc
push
icebp
dec
int3
in
add
xlat
inc
adc
adc
cwtd
sub
add
ljmp
or
mov
test
lock
in
xchg
fsts
cltd
xchg
push
add
sbb
out
and
and
xchg
jle
push
xchg
mov
dec
iret
nop
testb
jle
inc
fcomps
push
add
lahf
sarl
inc
lock
push
imul
mov
jmp
sub
outsl
and
js,pt
les
jbe
enter
mov
ja
fdivrl
jge
xchg
fiadds
adc
sbb
push
mov
jno
or
inc
ljmp
imul
lcall
mov
push
scas
add
aad
adc
jle
cmpsb
inc
cld
aad
xor
stc
sbb
aas
test
ror
push
and
xchg
inc
leave
loopne
stos
bound
fs
lcall
mov
test
es
popa
movsl
inc
icebp
ficomps
test
ds
lret
sub
cld
rcl
add
loop
lods
inc
or
xchg
arpl
jae
lahf
rolb
aam
lcall
add
cmpsl
mov
xchg
pop
and
adc
mov
sub
insb
pop
jg
fsubrs
pop
dec
lea
arpl
or
adc
xchg
lds
cld
aas
test
cmc
cmpsl
xchg
cmp
pop
out
dec
daa
in
orb
stos
dec
cltd
mov
cmp
out
jo
ljmp
out
inc
popl
jecxz
movsl
insl
push
dec
jmp
icebp
sub
ljmp
and
cmp
ja
and
pusha
push
cmp
cmp
aas
subl
mov
gs
es
dec
dec
dec
and
jo
into
push
pop
stos
push
mov
fnsave
xchg
popaw
iret
push
dec
jl
adc
sbb
cmovne
gs
or
insl
jl
sub
cmp
test
lret
add
leave
inc
hlt
push
int3
cmpsl
push
cmp
cmp
or
pop
fildll
dec
or
fsubp
pop
mov
pop
lods
or
push
rcll
inc
ja
movsl
repz
or
fsubrs
leave
scas
fimull
push
cld
add
xchg
mov
jmp
rcrl
xlat
mov
sar
sahf
aam
fndisi(8087
dec
shl
mov
xchg
sbbb
inc
sub
xchg
sbb
adc
adc
sub
and
fnstenv
pop
in
or
test
jg
outsl
lods
inc
jbe
pop
incb
arpl
mov
test
ret
pop
inc
mov
fmuls
mov
xor
pushf
outsw
jl
or
pop
into
mov
loop
dec
push
fcomps
push
adc
pop
test
les
leave
and
sarb
xchg
mov
or
adc
scas
cmp
mov
adc
mov
xchg
cmp
out
inc
clc
lea
stc
addr16
add
cmp
gs
cwtl
call
mov
inc
dec
and
shlb
sub
ret
inc
adc
test
and
fldcw
addb
jno
sbb
adc
dec
sahf
jne
movsb
inc
dec
loopne
mov
int3
inc
inc
movsb
mov
cmc
icebp
test
adc
int
cmp
mov
mov
pop
dec
or
mov
lods
jl
popf
cltd
inc
call
adc
inc
imul
mov
cld
xor
std
fidivrl
lret
lock
out
cld
xor
sub
movsl
cmc
leave
out
pop
adc
std
inc
xchg
out
movsb
sbb
inc
xor
mov
mov
fisubrs
jmp
pop
xor
push
push
xlat
add
aas
xchg
iret
imul
popf
mov
ret
in
daa
ljmp
mov
mov
test
es
aaa
pop
inc
clc
ljmp
cmp
and
and
loope
sbb
insb
inc
mov
je
push
xor
and
mov
jecxz
push
and
mov
cmp
mov
push
mov
inc
mov
cmp
insb
xchg
fst
cmp
push
mov
lret
ljmp
dec
test
mov
xor
xor
stc
lret
loopne
xor
sub
loope
xor
jo
rol
pop
xor
call
push
jmp
adc
mov
push
enter
clc
pop
leave
push
push
std
sbb
push
and
repz
sti
scas
ret
dec
insl
mov
or
sbb
mov
aam
push
sbb
xor
xor
inc
sbb
jg
push
sbb
pop
and
lcall
mov
lahf
jae
mov
dec
dec
ds
lea
xor
iret
jecxz
iret
pop
mov
decb
sub
cmc
into
out
lods
loop
mov
lods
jbe
sub
xchg
jg
andl
mov
adc
pop
int
xchg
dec
cmp
cs
mov
jns
imul
dec
in
sub
dec
ja
inc
mov
push
xor
ficompl
mov
ss
iret
push
adc
rcrl
add
movsb
repz
mov
inc
movsl
sbb
mov
mov
aad
popa
mov
shlb
popf
ss
xchg
pop
popa
dec
mov
sti
jbe
sub
and
mov
jbe
pop
hlt
xor
and
imul
mov
hlt
push
and
aas
das
cmp
decb
std
roll
mov
repnz
div
push
jne
jns
movsb
cmpl
aam
movsb
lea
pop
fcompl
leave
dec
movsb
or
mov
rcrb
and
xor
ljmp
out
push
fimull
pop
pop
sub
sbb
sbb
cmp
mov
and
xchg
fildll
mov
pusha
scas
sub
sub
outsb
pop
dec
and
js
adc
sub
or
mov
xchg
shrl
fwait
xor
cmpsb
cltd
xchg
outsb
pop
xchg
lods
out
mov
shlb
adc
xchg
xchg
scas
adc
xchg
cs
addr16
push
stos
pop
pop
test
fst
and
aaa
or
test
jle
rorl
movsl
es
popf
sbb
sub
jns
xor
xor
in
adc
divb
sub
icebp
pushl
and
movsb
sub
add
add
out
fdivr
fisubs
shll
pop
mov
vcvtsd2si
lea
sbb
ret
sub
leave
sub
pop
jmp
mov
ljmp
or
jge
pop
mov
cmp
enter
data16
pop
sub
into
call
lds
jmp
add
lock
inc
iret
mov
int
mov
sub
xor
xchg
cmpl
lahf
xchg
mov
cmc
pop
lods
inc
adc
dec
sub
sub
sub
add
aam
inc
sti
xchg
mov
mov
jno
push
ror
mov
pop
fnstenv
inc
cmp
push
inc
mov
or
sti
mov
xor
add
int
mov
jmp
sbb
loop
xor
aaa
mov
adc
jecxz
fs
xor
into
mov
add
jbe
push
jno
mov
dec
lods
cmp
mov
add
inc
in
push
pop
mov
leave
mov
mov
mov
jmp
pop
mov
movsl
lods
mov
add
dec
rorl
lods
jge
fsubrp
xchg
push
mov
clc
mov
add
jnp
les
ljmp
jg
call
cmp
ret
daa
imul
jbe
int
cli
xor
mov
fwait
push
cmp
inc
sub
push
loop
cltd
mov
jb
and
jb
pop
mov
aad
fwait
int
fidivl
pop
sbb
mov
sub
rcl
mov
jae
arpl
fmuls
lods
pop
fdivrl
pop
xchg
test
in
inc
mov
or
std
mov
add
stos
mov
and
js
cmp
cld
aad
add
push
mov
sbb
stos
enter
fwait
and
push
add
addr16
jne
mov
pop
jg
xchg
fwait
testl
dec
xchg
cmp
adc
sub
inc
xor
jl
sub
fbstp
pop
lods
xchg
pop
adc
loopne
fwait
mov
mov
ret
cmp
mov
mov
rol
ss
push
xorl
shl
movsl
push
sub
sbb
loopne
cmpl
cli
push
insb
dec
mov
jno
mov
test
add
sbbl
out
mov
xchg
mov
xor
push
push
pop
mov
pop
in
insl
jmp
insb
add
cmp
push
jnp
out
incb
in
outsl
shlb
push
adc
daa
adc
enter
aas
sub
fnsave
aaa
xchg
test
push
dec
leave
addr16
xor
mov
inc
push
sbb
aas
xor
out
loopne
mov
sub
imul
jle
test
xlat
fildll
dec
pushf
mov
outsl
jg
push
add
cmp
stos
add
mov
inc
pushf
or
or
jnp
pop
mov
cmp
lret
insb
mov
in
pop
std
fidivl
push
mov
pop
cltd
and
fs
jmp
mov
adc
popl
xchg
in
stos
jle
ja
and
icebp
fs
push
xchg
cs
jno
jl
cmp
mov
xorl
popf
aad
mov
call
mov
aaa
test
fs
inc
rcr
test
sarb
lods
outsl
je
ljmp
xor
xchg
jp
sarl
neg
jnp
shrl
xor
inc
data16
mov
dec
push
mov
and
imul
mov
add
pop
add
and
xor
sqrtps
int
int3
in
xlat
ss
ljmp
test
popf
lea
dec
ds
push
ja
mov
push
jae
aas
adc
cmp
add
jge
pushf
fcomps
jge
out
mov
imull
mov
mov
pop
sti
test
in
pop
xchg
or
insb
mov
adc
repnz
aas
add
cmp
pop
fsubs
imul
cwtl
mov
addl
fnsave
scas
out
fnsave
dec
xchg
mov
push
cmpl
test
jb
call
jnp
dec
int3
loope
xlat
mov
in
xchg
fadds
shl
inc
repnz
andl
sti
adc
fisttpll
jl
aad
sbb
mov
vpsrlq
filds
or
sub
sbb
jmp
sbb
jl
adc
mov
dec
push
add
dec
in
pop
pop
pop
jne
cmpsb
in
xor
js
adc
jb
clc
inc
mov
int3
mov
xlat
adc
loopne
shll
aam
mov
push
inc
mov
ljmp
je
lret
push
repnz
jle
fisttpl
sbb
testl
mov
and
je
push
insl
fdivs
popa
adc
dec
pop
or
xchg
insl
xor
push
in
sub
aaa
xchg
js
jae
fs
lods
inc
cmp
mov
stos
xor
sub
insl
jg
adc
out
or
insl
cmp
inc
rcpps
pop
and
data16
push
dec
rorl
jb
mov
sbb
or
push
fucom
fsubrp
movsb
push
mov
movsl
cld
lea
mov
adc
std
push
mov
push
data16
jmp
aad
sbb
lahf
fsubs
cmp
or
cmp
orb
adc
addr16
shrb
mov
cli
inc
push
xchg
popa
dec
inc
inc
sbb
cmp
add
shll
mov
mov
loopne
fisubs
sub
jle
aam
pushf
pop
add
xchg
mov
ds
mov
adc
xor
pop
add
sti
push
xor
test
sub
push
repz
into
js
jb
sbb
mov
test
xor
in
push
in
pop
cmp
fcompl
mov
lahf
mov
dec
andl
and
stc
sbb
aad
movsb
sbb
lcall
rclb
leave
mov
stos
pop
scas
xchg
aaa
fcmovb
jmp
bound
imul
in
out
jne
dec
rep
data16
out
mov
mov
jp
and
jb
mov
sub
repnz
push
popa
and
pop
cwtl
into
jl
sub
scas
xchg
imul
rclb
sbb
imul
xchg
outsl
jns
and
rcrb
in
imul
pop
out
jmp
fsubl
adc
int3
loop
mov
ss
cmp
or
sbb
xor
jge
je
push
push
imul
pop
mov
fstps
dec
mov
pop
fs
cltd
scas
pop
xor
inc
adc
iret
jle
outsb
sub
jg
jnp
adc
push
rcrl
outsl
fcmovb
mov
pushf
sbb
call
stos
mov
into
bound
ss
xchg
das
cmp
cmp
inc
enter
mov
push
inc
adc
les
scas
mov
sub
dec
cwtl
and
add
push
sub
stc
jae
cmp
mov
mov
leave
jb
push
lea
popf
adc
mov
out
or
mov
and
xor
ss
dec
insl
mov
cmc
ljmp
test
mov
out
aad
jg
gs
rcl
push
xor
sbb
arpl
ljmp
mov
inc
and
cmp
nop
test
dec
out
loopne
mov
xchg
hlt
push
mov
ljmp
popa
sub
addb
je
pop
push
test
lea
into
pop
or
leave
pop
repz
pop
dec
adc
sbbl
jnp
pushf
rclb
cmc
jmp
jb
fmuls
gs
fwait
mov
xor
jb
jecxz
and
imul
faddl
pusha
mul
xchg
pcmpeqw
aad
jno
std
das
leave
bound
loope
mov
mov
push
cwtl
scas
pop
or
fldt
fwait
scas
filds
loop
aam
or
pop
pop
stos
into
adc
shr
fwait
add
call
pop
mov
ret
inc
jg
jnp
push
pop
pop
repz
pop
xor
xor
loope
dec
fnsave
mov
push
or
enter
mov
cmp
push
xor
repz
pop
sahf
push
lock
jmp
rolb
inc
adc
repz
adc
ljmp
dec
orb
scas
and
fidivrs
or
dec
mov
push
add
dec
popaw
mov
cmp
inc
bound
xchg
push
push
mov
pop
mov
cmp
inc
or
shll
mov
mov
xor
dec
lock
cmc
fcomps
repz
pop
pop
cmpsl
xor
outsb
adc
iret
sahf
jns
mov
cmc
mov
insb
and
jle
scas
pusha
inc
push
iret
mov
andb
imul
filds
sub
sbb
leave
test
xor
in
push
mov
stos
cmpb
add
push
pusha
dec
xchg
cmp
fisttpll
aad
cmp
push
pushf
mov
sbb
push
cld
sahf
in
mov
cmp
out
test
push
clc
mov
dec
or
cld
shll
idivl
fdivrl
pop
pop
popf
fnstsw
sbb
dec
jnp
or
cltd
sti
add
xchg
ds
mov
xor
outsb
mov
sub
push
pop
xchg
and
or
mov
insl
frstor
mov
push
aas
inc
fldenv
mov
jb
mov
push
mov
popl
xchg
xchg
pop
sub
xchg
add
sahf
fnstcw
gs
ja
mov
mov
push
xlat
rcrl
fistpl
imul
jae,pt
lret
or
xchg
mov
js
sub
and
pop
cmp
jo
mov
ss
push
shll
sub
and
pop
add
fistps
jns
push
stc
hlt
sbbb
or
repnz
mov
pop
mov
jmp
jge
fwait
clc
lods
jp
loopne
jmp
xchg
jle
out
push
mov
cs
xchg
and
xor
xchg
cmpb
fadds
rcrl
jge
mov
scas
and
call
add
cmp
adc
js
cmpsl
ja
inc
mov
ds
cmpsb
xor
fs
ret
imul
inc
push
push
and
or
mov
or
add
dec
scas
outsl
push
sub
mov
das
repnz
das
add
incb
lds
cmp
xor
add
and
idivb
sub
data16
enter
or
scas
or
aam
loope
xor
jecxz
mov
rol
ror
mov
call
push
mov
movsb
in
dec
dec
mov
xchg
jns
fisubs
adc
fists
adc
outsb
lret
call
das
call
movsl
ror
xchg
push
add
mov
cwtl
xorb
lock
mov
pop
adc
loope
or
cmp
jge
sub
jo
jecxz
lret
jno
test
pop
fwait
rcl
sbbl
jl
push
stc
cld
pop
pop
or
cmp
sub
dec
jbe
hlt
test
dec
fistpll
cli
ret
sti
gs
rorl
or
iret
push
jecxz
mov
sbb
in
xchg
lock
push
jb
mov
mov
inc
adc
mov
inc
add
push
inc
xchg
sbb
push
jg
sti
insw
or
lcall
repz
mov
mov
sub
add
pop
mov
dec
jmp
pop
bound
pop
leave
fidivl
pop
jmp
ret
sahf
ss
push
and
and
insl
pop
je
xchg
lock
roll
sbb
jp
or
shll
js
test
adc
lods
scas
out
mov
pop
test
jl
std
jo
mov
fsubl
mov
in
dec
push
pop
sahf
mov
mov
xchg
test
sbb
jmp
cmp
lods
lret
sub
sets
jnp
pop
andb
in
pop
dec
nop
ds
notb
dec
in
sbb
jge
push
dec
sub
js
aas
sbb
cs
jae
push
test
inc
out
push
cwtl
add
mull
jno
ljmp
inc
into
inc
test
es
fmull
mov
shrb
scas
ds
aam
rorb
or
mov
sbb
xchg
dec
fs
das
or
and
pop
addr16
jp
fwait
mov
fmul
pop
mov
xor
popf
imul
je
ret
inc
cmpsl
jge
xchg
iret
inc
mov
jp,pt
push
mov
insb
cmc
inc
xchg
bound
cltd
jg
pop
movsb
cld
adc
test
sti
push
shlb
mov
fistpll
push
mov
mov
xchg
jae
pop
es
test
add
xor
std
cltd
or
xor
sbb
and
shl
jecxz
inc
mov
ret
mov
inc
mov
sbb
sub
add
in
adc
sub
bound
add
xorb
enter
mov
push
push
lea
xorb
in
mov
mov
mov
mov
es
fidivrs
lock
enter
rcl
adc
imul
mov
mov
fnstsw
loop
or
adc
lahf
or
push
fisubl
adc
lcall
xchg
cmpsl
adc
arpl
mov
call
rclb
std
push
nop
scas
push
xor
sti
sbb
leave
jne
mul
stos
sar
rclb
jae
jecxz
jecxz
stos
into
test
jge
xchg
sub
jmp
sub
mov
push
cmp
dec
movsb
fnstcw
repz
cmp
and
daa
out
sbb
test
jns
add
ffree
push
ja
xchg
inc
repnz
xorl
lock
and
shr
bound
insl
jne
sub
repnz
fldl
sbb
out
shrb
push
jp
or
cmp
fstpt
mov
addr16
mov
jnp
nop
je
adc
in
call
xchg
mov
into
jmp
adc
imul
cmc
lods
mov
mov
push
dec
or
mov
or
in
pop
addr16
dec
and
inc
jnp
negl
inc
mov
jge
out
repnz
mov
or
aaa
mov
xchg
or
lcall
lods
je
js
mov
imul
cmpsl
inc
rolb
ret
xor
inc
fldenv
sub
mov
enter
std
out
inc
dec
es
bnd
je
xchg
or
out
bound
xchg
xor
pop
jb
xchg
rorl
xchg
jnp
and
dec
cmp
jo
rclb
mov
jns
xchg
ret
movsl
test
or
mov
cmp
adc
inc
jns
int3
inc
shll
lahf
or
sti
hlt
sbb
inc
or
jne
push
cmp
je
mov
aad
dec
insl
int3
mov
int3
mov
inc
in
inc
push
jmp
pop
mull
ljmp
pop
sub
std
loope
leave
jne
sbb
pusha
jmp
addb
adc
xchg
cmpsb
ficoms
cmove
or
inc
push
mov
sbb
lea
fs
roll
or
adcb
lock
daa
and
mov
cwtl
pop
fidivl
lahf
inc
adc
out
inc
fisubrl
pop
iret
add
orb
dec
mov
pop
cbtw
out
sub
cmp
xchg
fcoml
mov
sub
lret
test
fdivl
cmpsb
mov
mov
incb
mov
sub
push
and
pushf
xor
mov
sbb
movsb
pop
aaa
sbb
fiaddl
mov
cmc
hlt
push
mov
mov
inc
fildl
rclb
push
dec
insl
movsl
int
jge
dec
int
sbb
jle
pop
aas
addr16
cs
inc
mov
orb
adc
add
scas
dec
jmp
push
dec
call
lcall
fwait
pop
push
dec
mov
aam
ja
addr16
xchg
hlt
xor
js
jge
int
cmp
pop
sbbl
sub
mov
daa
je
mov
stos
mov
ja
push
stos
mov
dec
fadds
imul
ss
inc
sahf
loope
and
movsb
jle
cmp
lock
inc
inc
push
add
aad
scas
xchg
test
add
shl
fdivl
pop
sahf
sahf
sarb
xchg
out
scas
outsl
daa
mov
pop
stos
jns
jb
xabort
clc
cwtl
inc
pop
xor
lret
sbb
push
sub
cmpsb
jmp
inc
or
arpl
les
adc
subl
ret
sbb
xchg
stos
mov
out
stos
shr
lret
dec
jmp
in
rcll
pop
push
mov
xchg
jmp
in
repz
mov
enter
test
xor
test
repz
insb
mov
cmp
or
test
dec
lret
jo
mov
mov
cld
sub
xor
adc
adc
sti
ss
mov
xchg
enter
and
pop
mov
fs
sub
or
mov
mov
fdivrl
ja
std
add
mov
jle
pop
or
nop
cld
dec
ja
push
movl
fnstcw
sub
repz
xor
jl
loop
repz
addb
pusha
ss
test
jle
out
adc
popa
jp
jmp
popa
loopne
cld
mov
push
test
cmc
and
push
shrl
test
outsb
sbb
mov
cmpps
loopne
lea
cwtl
mov
xor
jl
push
add
int3
sub
in
jecxz
outsl
movsb
repz
pop
mov
cmpsl
mov
xchg
in
cmp
inc
fadds
insb
cmp
add
adcl
mov
push
icebp
lahf
push
pop
pushf
cmp
sbb
cmp
fcomps
sbb
push
in
cmpsl
sahf
ja
aad
pop
mov
xor
mov
inc
int
das
outsb
xchg
xchg
pusha
push
and
nop/reserved
xorl
inc
pusha
xor
into
mov
and
mov
cli
fbstp
xchg
push
fs
jbe
sub
adc
xchg
je
sub
into
mov
outsb
mov
call
mov
int3
mov
ljmp
addr16
xchg
out
jecxz
rcll
and
mov
addr16
das
xchg
adc
mov
pop
jle
inc
mov
inc
movsb
addr16
jae
fcompl
in
ljmp
call
psllq
xor
fisttpll
dec
je
and
xchg
jnp
fsubr
mov
std
pushf
adc
mov
std
out
push
pop
mov
jle
mov
mov
pop
stos
push
repz
out
pop
mov
mov
nop
mov
sbb
aam
mov
in
and
je
popa
cld
lahf
dec
xor
loope
xchg
push
sub
push
ficomps
lods
xchg
dec
addr16
inc
call
mov
jl
je
lret
aas
lret
in
rclb
xor
sbb
bound
aad
imul
orb
call
jecxz
or
xor
and
cmp
out
ljmp
dec
cltd
adc
andl
adc
and
inc
push
lahf
push
notl
mov
stos
add
testl
xchg
ss
xlat
mov
xlat
pop
jg
pop
and
in
jmp
mov
pop
scas
es
in
sub
call
out
sbb
and
cmc
xor
pop
sbb
stc
fstpl
mov
adc
push
mov
inc
adc
xchg
mov
fsubr
arpl
das
out
jnp
lds
ja
ljmp
fwait
mov
das
data16
leave
out
or
cmp
mov
cmp
fsub
imul
or
jbe
and
pop
jns
mov
dec
sbb
xor
add
jecxz
int
cs
add
test
or
adc
inc
inc
scas
in
pop
pusha
pop
daa
push
jecxz
dec
or
in
aad
call
mov
jle
cwtl
sbb
movsl
adc
mov
adc
es
push
std
sbb
int
mov
aam
mov
test
test
mov
dec
icebp
mov
jo
loop
inc
pusha
out
in
push
and
mov
xchg
shrb
cmp
xor
add
dec
mov
test
and
int
andb
repnz
add
mov
mov
mov
adc
and
sahf
notl
hlt
push
jb
xchg
ljmp
fildl
fcompl
xchg
sbb
test
popa
es
mov
push
stos
sub
jb
aas
roll
fisttps
pusha
cvtdq2ps
jo
fwait
stos
rolb
cmpsl
ficoml
enter
and
jecxz
sar
cmp
addr16
push
dec
push
jo
hlt
ret
out
dec
pop
repnz
jg
loopne
sub
mov
xchg
xchg
mov
sti
xor
loop
jl
addb
adc
andl
int3
hlt
sbb
xlat
popa
imul
addr16
sub
xchg
into
mov
add
int3
int3
dec
movsl
fs
out
push
adc
dec
push
mov
in
call
out
nop
scas
je
ljmp
and
xchg
jbe
sub
mov
imul
lcall
push
pop
or
and
test
adc
inc
or
ss
cmp
cmp
and
dec
data16
cmc
cwtl
xor
xor
lea
xchg
pop
dec
jae
adc
test
adc
fimull
cli
inc
ficoml
jmp
cmpsl
orl
mov
xchg
sub
cltd
pop
or
add
push
mov
xchg
test
fdivl
jp
sub
notl
insl
lret
faddl
mov
js
sbb
mov
in
fisttps
scas
jne
inc
into
jns
sub
add
stos
xchg
xchg
test
mov
adc
or
gs
loope
pop
add
push
cmp
add
lcall
sbb
add
cltd
mov
xchg
dec
sti
mov
dec
test
fwait
jae
xor
cmc
popa
dec
sbb
mov
cli
repz
pop
mov
and
fisubs
lret
mov
ljmp
mov
xchg
pushf
adc
lds
or
push
pop
xchg
mov
push
bound
scas
and
into
ss
mov
loopne
xchg
cmp
adc
shll
dec
test
cmc
ss
enter
fs
mov
les
pop
add
jb
in
sbb
xorl
lock
sub
imul
addr16
in
aad
and
mov
aad
scas
daa
aam
das
inc
in
fidivs
nop
mov
pop
inc
sbb
adc
inc
dec
mov
and
int
loopne
sbb
xchg
mov
inc
hlt
lret
out
adc
adc
ja
adc
outsb
scas
push
mov
into
frstor
or
sbb
adc
push
test
and
pop
fistps
inc
aaa
out
enter
cmpl
ret
cmp
jl
rorl
insl
fistl
sub
cmp
jno
mov
add
jo
pusha
lods
mov
adc
shld
push
mov
ror
cmp
imul
addr16
pop
adc
pop
shlb
pop
inc
jmp
lods
es
ss
pop
mov
mov
pop
pop
into
push
adc
rep
push
mov
push
pop
mov
cmp
ss
cld
stos
xchg
fimuls
lds
lret
int3
cmp
bound
les
loopne
sub
outsl
mov
mov
adc
iret
inc
mov
imul
dec
xor
adc
jno
sub
pop
xchg
jmp
cmpsb
ret
psubb
dec
ss
cli
jno
cwtl
cmc
fcoms
inc
ror
mov
flds
and
add
out
push
scas
addb
daa
xchg
push
mov
lods
fwait
xlat
xlat
push
test
test
cmp
daa
mov
pop
inc
push
mov
xor
inc
cmpsb
movsl
int3
dec
or
dec
std
das
mov
and
loope
out
shll
inc
inc
pop
lea
xchg
imul
imul
out
xor
cmp
cmp
jp
dec
sahf
sbbl
imulb
cwtl
sar
adc
movsb
cwtl
and
leave
nop
pop
fldenv
mov
int
add
outsl
loop
out
int3
fistps
sub
leave
mov
cmp
mov
in
loop
scas
jo
movsl
mov
stos
dec
xor
out
in
jl
sub
pushf
push
cmpsb
std
push
hlt
sbb
add
js
shll
insl
enter
in
adc
or
mov
jmp
cmp
les
lods
xchg
mov
aaa
sub
nop
fistpll
mov
sbb
shl
popf
int
jb
imul
sub
sbb
xchg
or
pop
rcrb
je
dec
add
xor
cltd
pop
inc
jmp
fisttpl
cmp
xchg
iret
ss
jmp
jae
inc
icebp
jle
cmpsl
mov
aas
ficoml
and
add
sub
and
cmp
push
das
push
dec
mov
ds
dec
fwait
call
je
add
fwait
shll
xor
daa
mov
xchg
cmp
and
loope
inc
pushf
or
or
mov
out
xor
stos
mov
and
and
xchg
add
sbb
mov
mov
daa
outsl
test
push
lods
movsb
cmp
mov
decl
loope
dec
lret
ljmp
cld
push
push
bound
cli
inc
hlt
es
sbb
jae
mov
lds
sbb
jo
aad
jge
mov
out
movsl
aam
adc
mov
out
movsb
aaa
ds
call
adc
xor
cmp
or
out
lods
mov
push
sbb
imul
sahf
movsl
rorl
jno
dec
inc
les
movsb
mov
fbld
pop
cmpsl
sbbb
lock
fstp
xchg
les
push
sbb
sub
in
hlt
or
pop
rol
gs
ja
int
outsl
faddl
mov
ds
loopne
fisttpll
fwait
leave
sub
out
xchg
inc
jp
mov
arpl
mov
test
scas
or
fmul
sub
adc
or
xlat
xor
sub
sbb
push
pop
lret
jl
pop
mov
and
jb
add
stc
fildll
adc
bswap
mov
shll
in
rcll
dec
in
stos
lods
add
test
ja
xchg
dec
daa
int
idivl
lahf
dec
push
xchg
push
sbb
in
test
xor
outsl
das
xor
sbb
test
jge
inc
cmp
sub
pop
push
dec
mov
movsl
loope
push
notb
loope
mov
das
out
mov
xor
popa
dec
inc
xor
mov
sbb
mov
push
ret
pop
shll
and
bound
mov
fistps
sub
sbb
push
jae
arpl
mov
jmp
or
int
es
jge
lret
pop
shrb
sarl
push
outsb
mov
enter
mov
inc
bound
sti
pusha
adc
repz
in
js
inc
and
xchg
pop
pop
add
aam
movsb
inc
out
jmp
or
xor
test
lods
int
cld
ljmp
push
call
adc
push
push
cltd
jb
loopne
pop
push
imul
fistpl
ss
dec
mov
cs
inc
mov
mov
mov
cmpsl
sbb
ljmp
mov
xor
pop
or
mov
adc
jle
clc
jae
push
fstp
jg
popa
xchg
inc
xchg
lea
cmp
xchg
jg
test
jecxz
dec
xchg
sar
cmpb
push
xchg
ljmp
jnp
fadd
push
aaa
adc
sbb
or
pop
or
mov
mov
jbe
scas
or
ss
push
iret
das
adc
mov
aad
xchg
mov
xor
dec
pop
add
out
mov
push
jns
or
mov
popf
sbb
sahf
or
add
aad
inc
ds
lock
clc
cmp
stos
xchg
inc
orl
mov
pop
xchg
int3
mov
or
sti
shlb
filds
jb
jb
and
imul
movsb
ret
inc
cmpsb
sbb
jp
inc
cmp
mov
xlat
cli
push
lahf
hlt
mov
lret
push
imul
inc
cmp
cmp
leave
sar
mov
sub
ljmp
xchg
repnz
ljmp
dec
data16
push
scas
and
sahf
scas
jge
or
inc
push
gs
adc
leavew
test
cmpsl
adc
dec
jecxz
nop
fs
ljmp
outsl
push
ljmp
add
ss
fsubs
sbb
jg
ret
rcrb
mov
daa
xchg
dec
orl
repz
filds
xor
and
pop
jp
stos
repz
ss
clc
mulb
into
add
jo
lds
push
push
jg
sahf
xchg
repz
jo
or
rclb
and
fisttpl
inc
mov
iret
mov
in
and
inc
int3
dec
dec
popa
sub
lock
cwtl
sti
test
mov
sub
pop
mov
fmull
fldcw
xchg
andl
or
aas
add
sub
int3
test
in
out
movsb
add
leave
shll
mov
outsl
pusha
dec
mov
dec
add
jmp
into
pop
xor
mov
aaa
dec
push
test
adc
stos
int3
in
aas
jae
cmpsl
shr
xchg
jae
pop
in
insb
mov
aaa
and
and
lea
repnz
cld
and
xchg
fadds
and
outsb
cmpsl
imulb
les
xchg
lret
and
sbb
mov
addl
inc
mov
in
push
mov
dec
pop
xor
bound
xor
and
pop
iret
cld
or
cmp
imul
lea
fs
pop
cmp
lods
mov
jle
mov
stos
out
xchg
push
stos
add
or
xchg
or
out
popa
xchg
push
mov
shr
xor
jns
loopne
lock
push
mov
test
bound
int
dec
or
xchg
add
mov
xlat
dec
xchg
xor
fcmovb
daa
clc
xchg
cmpl
roll
adc
sub
pop
xchg
movsb
jb
push
inc
dec
in
mov
loopne
inc
sbb
decl
mov
test
mov
leave
cmp
aaa
shld
xorl
inc
and
push
adc
mov
inc
popf
pop
je
mov
dec
arpl
add
mov
mov
call
out
out
add
mov
addr16
and
cld
insl
stos
mov
mov
pop
sub
pop
pop
mov
pop
jbe
imul
xlat
mov
pop
inc
out
out
mov
stos
pop
idiv
xor
movsl
cwtl
stos
enter
mov
pop
jne
cwtl
scas
fnsave
sarl
outsl
out
popa
add
adc
mov
int3
mov
mov
nop
js
inc
push
push
xchg
imul
ret
decb
sub
pop
and
adc
pop
dec
rcll
mov
insl
jo
xchg
add
outsb
mov
testb
xor
or
jg
adcb
adc
sti
xchg
push
cld
mov
xchg
pop
in
sti
jg,pt
cmpsb
mov
nop
jge
into
add
xchg
jns
in
mov
pop
fimuls
xor
les
out
cli
imull
and
in
test
int
icebp
bnd
mov
hlt
jl
inc
fs
fstpt
movsb
jmp
es
mov
out
adc
cmpsl
arpl
fldenv
mov
sub
push
gs
outsb
int3
dec
pop
test
jg
bound
xorl
cmp
stos
jnp
aas
insl
push
or
jp
cmc
pushf
dec
repnz
cmp
mov
sbb
mov
cmp
int
leave
pop
mov
int3
pop
xchg
sbb
jle
lock
adc
jns
cld
jle
lcall
popa
add
xchg
dec
aad
sarb
pop
les
push
repz
inc
xchg
aaa
cmp
mov
or
mov
push
fcomip
in
nop
add
pop
dec
in
pop
push
and
stos
lcall
fildl
xor
pop
mov
adc
sarl
push
push
or
jbe
mov
aas
leave
cwtl
pushf
cmpsb
lock
and
es
and
inc
add
ret
fadd
pop
ds
loop
push
mov
popa
cli
mov
mov
pop
jmp
xor
pop
sarl
and
loopne
pushf
cs
pop
inc
sbb
lock
movsb
test
mov
movsl
cmp
sbb
lcall
xchg
mov
cmp
pop
loop
inc
jp
subl
add
fnstcw
mov
sub
dec
pop
mov
xchg
xchg
push
shlb
shr
push
test
pop
push
imul
jg
lea
mov
gs
sub
xchg
cmp
call
je
int3
iret
xor
stc
add
sti
jp
loop
jle
hlt
add
in
adc
cltd
mov
into
mov
sbb
loop
push
sbb
stos
jge
ret
or
jle
stos
scas
ja
push
roll
fnsave
cmp
stos
lds
sti
into
xchg
add
nop
fsts
outsl
mov
insb
sub
mov
cmovg
rcll
inc
or
xchg
aas
jnp
jecxz
popf
les
scas
mov
inc
out
xchg
mov
adc
xor
mov
sahf
mov
out
cmp
pop
sbb
lret
pop
scas
jmp
cs
jg
aaa
or
je
std
and
sbb
jae
ljmp
ljmp
jl
aas
fucomp
shrl
scas
sti
xchg
adc
mov
sbb
test
aas
inc
cltd
xchg
call
inc
dec
pop
or
mov
cmp
lret
push
xchg
sub
pop
scas
jae
fdivs
pop
adc
xchg
scas
adc
addr16
lcall
repnz
in
jo
adc
xchg
adc
cmp
fs
imul
stos
jecxz
jo
into
inc
and
and
cli
shl
mov
cmpsb
lcall
xchg
push
aas
sbb
mov
lret
mov
xor
cld
pop
jno
xor
fucomp
lahf
and
imulb
mov
aad
pop
lret
pop
dec
dec
enter
and
mov
repz
jns
inc
mov
pop
ret
adcb
inc
out
push
mov
add
ja
pop
inc
mov
xchg
ljmp
jp
adc
xchg
jbe
inc
push
mov
cmp
sub
mov
aaa
out
icebp
jne
cmp
xlat
pop
stos
les
cmp
outsb
pop
cltd
xchg
adc
int3
or
in
jecxz
sarl
xchg
mov
data16
ja
test
push
ja
or
lcall
mov
cs
movsl
inc
cmc
aam
lahf
ljmp
das
jle
adc
pop
lods
dec
test
outsb
subb
cmp
push
outsl
pop
test
js
iret
xchg
push
mov
xor
or
jne
data16
mov
loopne
jne
cli
mov
leave
dec
lcall
or
xchg
mov
fsts
adc
xchg
sub
mov
cmp
in
push
xor
mov
xchg
out
iret
adc
fisttpll
sub
out
mov
jns
jns
push
and
fcoml
ret
clc
jge
int3
mov
xor
add
into
mov
dec
dec
and
nop
cmp
stos
dec
call
jmp
mov
xchg
jl
push
dec
jp
sub
scas
ljmp
push
insb
dec
aam
dec
push
jae
out
in
sub
fisubrs
hlt
loope
and
inc
or
jno
and
stc
mov
xchg
fs
jge
ret
std
roll
sbb
call
lahf
sub
fdivl
shlb
call
sbb
mov
xorb
shll
jge
lods
xor
lcall
scas
mov
idivl
test
adc
push
mov
lds
sub
cmp
sahf
cmp
jge
ret
cmp
add
sarl
or
jmp
pop
inc
xor
xor
xchg
cmp
mov
mov
push
xchg
or
mov
adc
sarl
dec
inc
adc
add
or
sub
cmpl
andnps
repnz
adc
xorb
dec
leave
aad
adc
inc
and
cmp
call
push
or
mov
loope
out
pop
mov
inc
fcoms
mov
cltd
mov
mov
cmp
icebp
cmp
test
mov
les
cli
sub
aas
mov
pop
shl
and
cmp
repnz
jl
dec
sub
inc
cmp
out
and
jno
stos
dec
lods
aad
movsl
negb
and
scas
jne
out
sbb
jecxz
inc
lods
and
push
and
and
scas
adc
xchg
subb
movb
stc
or
lods
mov
or
adc
dec
mov
mov
pusha
sbb
jbe
bound
jne
nop
sub
cmpl
fdivrl
jp
imul
jge
sbb
repz
scas
adc
xor
push
xchg
ds
adc
fbld
mov
jno
lahf
lea
add
sub
std
rclb
jae
jnp
scas
mov
stos
dec
mov
aaa
inc
mov
sbbb
fstp
imul
scas
rorl
xchg
dec
loop
mov
ret
or
repnz
mov
jo
inc
push
mov
jbe
mov
out
clc
loope
jg
stos
stos
outsb
leave
mov
sub
test
jb
and
jmp
adc
inc
jno
aaa
mov
inc
xchg
imul
sti
xchg
push
mov
in
sbb
mov
repz
es
adc
es
cmp
dec
fistps
push
xlat
inc
pop
sar
pop
mov
icebp
repz
cmp
ret
adc
mov
pop
cmpsb
push
je
adc
xchg
inc
jle
sbb
inc
cmp
ljmp
pop
leave
push
insl
jmp
and
jne
dec
dec
mov
cwtl
or
xor
adc
mov
jp
addr16
mov
pop
dec
imul
cltd
push
fldz
loopne
push
sbbb
add
mov
mov
mov
fbstp
mov
jae
aam
xor
cmp
es
and
mov
loop
fimull
inc
test
fstpt
outsb
cmp
repz
and
pop
rcrl
out
mov
jecxz
push
addl
aad
in
lock
pop
sarl
decb
jmp
into
sub
ds
incb
mov
mov
or
adc
sahf
rcrb
sarb
mov
movsl
xorl
imul
aas
sbb
mov
add
rorb
mov
mov
push
jo
dec
test
shl
or
add
push
cmpl
mov
mov
xchg
sub
in
mov
push
cld
push
dec
fldt
add
sub
mov
mov
inc
lret
scas
xchg
jl
sub
jge
pop
pop
jg
lods
jecxz
int
add
stc
pop
add
lods
or
movsb
mov
push
iret
lods
addb
push
dec
stos
pusha
pop
dec
sti
jmp
pop
adc
jae
jg
inc
gs
roll
clc
pusha
fdivrs
std
hlt
and
inc
in
frstor
push
or
je
loopne
fcomps
lcall
xor
push
mov
xor
pop
jns
mov
cmp
shll
mull
leave
loope
xor
test
mov
aaa
pop
clc
mov
pushf
mov
push
cld
imulb
out
mov
jbe
in
jg
movsl
xchg
lahf
test
or
add
in
jmp
ffreep
pminsw
mov
jmp
jmp
cmp
jo
pop
pop
test
je
ja
gs
fisubrs
jnp
adc
xor
fst
sti
arpl
nop
add
push
or
dec
push
mov
jp
mov
jle
xchg
mov
adc
jo
push
push
popa
add
es
mov
popl
aam
pop
out
push
dec
sub
fdivrl
xchg
jge
icebp
ja
loope
cmp
push
fwait
pop
xchg
ret
out
dec
xor
jae
cmpsb
ja
imul
ljmp
push
andl
mov
jecxz
xchg
mov
adc
pop
std
jno
lahf
movsb
dec
add
enter
int3
dec
fldenv
cwtl
jmp
test
add
inc
cmpsb
test
jle
rsqrtps
sti
jbe
jecxz
fistpl
mov
cs
lret
scas
inc
jb
scas
inc
pop
jns
rolb
push
ja
pop
sti
jmp
orb
xor
add
or
mov
pop
mov
and
pushf
push
jae
out
push
and
repnz
sub
xchg
popa
pop
push
sti
movsb
jg
lahf
loopne
dec
xchg
xor
cs
mov
out
orb
filds
adc
gs
mov
dec
mov
test
shlb
push
xorl
xlat
inc
add
or
dec
jbe
mov
mov
scas
enter
add
xchg
rclb
and
mov
insb
jmp
ss
repz
xor
inc
dec
divl
in
cmp
lcall
jg
ret
mov
pop
pusha
inc
dec
cmp
xor
mov
mov
add
lret
pop
cmpsl
xchg
sub
mov
mov
pop
jp
ficompl
fucom
push
jl
in
sbbl
adc
call
jle
cmp
mov
cmp
push
daa
mov
leave
bound
loop
aaa
lcall
inc
xchg
pop
cmp
orl
int3
xor
and
setg
push
pop
movsl
mov
imul
jae
scas
test
xchg
stc
sub
mov
scas
incl
or
pop
dec
scas
push
mov
inc
rcrb
inc
mov
fs
xchg
mov
inc
sbb
loope
jge
addr16
and
scas
dec
jp
mov
dec
clc
repnz
push
stc
icebp
mov
repnz
aas
and
rcl
xor
cwtl
das
loopne
mov
fs
dec
and
repz
inc
aaa
push
and
rcl
or
jmp
lods
push
mov
inc
je
jb
and
inc
or
ljmp
loope
fcoml
sbb
push
and
bound
mov
fidivs
mov
cmp
int3
xor
bound
loop
mov
scas
sbb
cs
add
lea
mov
insb
mov
in
pushf
lods
jp
pop
jg
stos
mov
scas
sbb
push
mov
das
push
xchg
xchg
jle
push
subl
test
or
sarl
inc
cmpsb
cmp
inc
dec
mov
xor
lcall
pushf
sub
hlt
mov
inc
shrb
scas
adc
shll
es
mov
outsl
dec
addr16
adc
loope
pop
adc
leave
jns
inc
aas
push
pushf
call
dec
das
mov
mov
ret
insb
xor
test
mov
inc
and
xchg
cmp
push
lahf
jp
add
or
jbe
mov
cwtl
inc
mov
pop
adc
dec
mov
jecxz
adc
inc
jno
loopne
iret
fcmove
fldenv
mov
xchg
inc
andl
adc
lret
xor
cmpsl
ds
data16
jl
xchg
xchg
sub
jg
adc
sbb
adc
cs
inc
and
add
lods
cmpsl
les
mov
call
xor
mov
in
lret
sbb
push
sbb
mov
int3
dec
jecxz
lret
add
nop
mov
bound
dec
dec
cmp
dec
push
dec
movsb
movsb
rcl
int3
fldcw
and
jo
inc
sahf
fadds
js
out
mov
xor
inc
xor
push
shll
test
scas
imulb
adc
mov
test
out
jle
mov
cld
jae
jne
jnp
mov
or
dec
add
cmp
imul
popf
loope
sub
add
js
and
cmp
sti
sub
or
lods
pop
adc
fcomp
push
xchg
arpl
mov
xor
xor
push
test
inc
test
mov
cwtl
outsb
or
data16
mov
je
rcll
mov
es
int3
dec
int3
push
push
jmp
out
les
fistpl
jl
push
orl
cmpsb
fstl
fildl
jl
xchg
test
pop
les
xor
mov
lods
in
mov
data16
ss
rcl
add
inc
inc
shll
shrl
push
dec
xchg
xor
adc
testb
dec
hlt
pop
in
mov
xorl
mov
mov
push
ret
xor
scas
pushf
xchg
fstpt
out
ret
xor
push
stos
push
jg
dec
cltd
pop
pop
test
push
jo
mov
pop
cmp
jb,pn
mov
dec
or
dec
sub
push
jmp
jp
xlat
sub
and
sub
mov
sbb
push
into
testb
loopne
jge
xor
outsl
adc
fadd
into
imul
push
les
cmp
cmpsb
out
inc
ss
adc
cmpl
pop
jno
or
or
cmp
test
pop
xor
mov
mov
lods
jp
cmp
scas
push
addr16
fbld
jb
ret
daa
xor
clc
mov
sbb
cmp
call
cli
icebp
scas
push
loope
cmp
insb
nop
pop
inc
push
lcall
xor
add
inc
lahf
lcall
mov
scas
push
or
or
sbb
andb
and
mov
sbb
adc
aaa
or
jp
push
stos
mov
fs
mov
mov
faddl
mov
iret
ds
adc
adcb
jmp
mov
cs
mov
and
push
enter
mov
pop
js
xor
rol
jl
movsb
clc
cmpl
or
sbb
pop
scas
bound
sbb
test
sbb
push
cmc
push
es
int3
inc
or
or
lods
aam
mov
mov
cmp
sbb
lahf
push
sub
mov
testb
pop
cmp
aas
sub
ja
or
pop
xor
push
scas
mov
jo
sub
negl
adc
add
jbe
iret
push
icebp
push
sub
push
mov
addr16
cmp
and
scas
cwtl
sti
cmp
push
sbb
xorb
repz
gs
push
pop
xchg
lret
aaa
sarb
push
and
adc
adc
dec
rclb
mov
mov
sub
jae
sub
mov
pop
jle
adc
mov
insb
scas
out
scas
inc
xor
stos
call
or
f2xm1
inc
iret
les
pop
jb
dec
call
and
mov
and
hlt
stos
xchg
or
or
orl
pop
cld
loop
dec
sub
iret
cli
lods
jmp
mov
adc
in
or
inc
jp
push
xchg
inc
sti
adc
xorl
scas
outsl
repnz
cli
cmp
add
xchg
popa
jno
sarl
jb
ficomps
shll
daa
fstl
lcall
jb
loopne
jae
lret
mov
or
aas
in
mov
sti
out
roll
icebp
xlat
pop
cmpsb
xchg
xor
aam
shrb
lea
out
jmp
in
ss
dec
and
sahf
lret
mov
xchg
jecxz
out
xchg
adc
mov
movsl
shrl
xor
outsl
mov
test
xlat
aam
sbb
cmc
push
loope
pop
mov
mov
loopne
inc
fisubs
push
ret
mov
pop
cmp
insl
or
icebp
cwtl
hlt
cmpsl
jo
das
lret
jle
dec
push
insl
call
jno
aas
jns
arpl
ds
pop
push
out
aam
xor
fidivrl
aaa
pushf
test
mov
dec
sbb
jp
adc
sbbl
dec
sbb
loop
insb
cmp
jb
mov
xor
je
sub
rcrb
pop
sbb
cmp
in
jo
fcoms
xor
movsl
pushf
ss
add
ret
sub
jae
xchg
imul
inc
test
cmp
jns
and
sahf
repz
aad
mov
xchg
out
ficompl
aam
xor
es
test
fst
cs
hlt
inc
push
sub
xor
loopne
outsb
call
lds
bound
inc
lock
in
ljmp
xchg
mov
mov
in
filds
push
xchg
movsl
inc
daa
arpl
inc
repnz
xchg
ret
jmp
test
orb
fsts
test
idivb
loop
fisubs
loopne
loope
mov
jecxz
jl
or
pop
adc
cmp
dec
ja
adc
out
add
push
xor
jle
inc
jno
sub
out
pusha
rcl
rcll
mov
lock
xchg
pushf
outsb
push
mov
clc
mov
outsb
jecxz
movaps
xor
cmp
xor
fwait
pushf
lret
mov
call
cli
xor
adc
mov
xchg
or
push
mov
test
pop
test
and
outsl
xor
jb
xchg
ja
in
cltd
popf
pop
inc
xor
cs
fldcw
test
sub
lret
mov
icebp
sub
mov
dec
or
push
dec
mov
push
clc
and
or
push
mov
adc
fisubl
int3
stos
dec
dec
mov
sahf
jmp
lret
leave
iret
and
mov
js
adc
divb
adc
mov
mov
cmpsl
cltd
jg
movsl
cmp
jmp
sarl
mov
xor
or
push
cmp
and
lahf
stos
ds
insb
stos
sub
pusha
xor
mov
push
pop
xor
jnp
cs
in
xchg
hlt
xchg
clc
push
pop
or
into
lret
mov
divl
aas
sub
mov
mov
cld
sbb
pop
or
fs
gs
or
cs
in
mov
cmp
sub
int
repz
scas
cmp
in
sbb
std
jp
mov
dec
dec
sbb
enter
pop
cwtl
out
add
cli
adc
insl
pop
scas
in
stc
mov
xchg
jns
and
ljmp
pop
mov
cmpsl
push
sbb
cltd
push
mov
sbb
dec
fwait
jbe
xchg
gs
pop
adc
sbb
aad
ret
jle
iret
sub
and
sar
add
dec
ljmp
sti
pop
out
dec
inc
xor
cltd
cmp
out
aas
xor
dec
lret
inc
addr16
in
aas
pusha
cmpsb
and
mov
idiv
stos
cmpsb
fldenv
adc
jb
sub
out
mov
nop
cld
sub
mov
sbb
cli
dec
out
pop
jnp
jge
xchg
dec
xor
popa
sahf
jl
jns
cld
xor
scas
insl
iret
lods
loope
cmpsl
hlt
sbb
mov
pop
push
loopne
int
inc
out
adc
jno
lods
sarl
jp
mov
loop
cld
mov
ljmp
ds
add
xor
test
js
out
xchg
mov
adc
push
mov
out
mov
jp
aas
mov
mov
push
icebp
pop
mov
popa
shlb
mov
jnp
jae
fcompl
inc
push
cmp
push
mov
subb
lds
mov
test
push
imul
or
lds
stc
push
jb
jp
cmpsl
lahf
mov
dec
lods
shll
mov
fwait
mov
jnp
xchg
inc
add
in
jmp
sub
and
cmp
fs
subl
sbb
sub
dec
cmc
stos
mov
repnz
sub
out
rolb
loopne
or
dec
pusha
mov
loop
cli
mov
out
dec
push
mov
ds
jns
hlt
and
sub
xchg
ret
sahf
fidivrs
sub
sbb
jbe
sahf
daa
das
add
enter
pop
pop
push
sbb
push
mov
sbb
cli
sub
dec
xchg
mov
pop
push
and
cmp
orb
shlb
rep
sahf
repz
decb
mov
lret
ret
push
mov
iret
idivb
xor
jae
loope
dec
pop
lea
mov
jg
inc
les
outsb
push
lret
je
push
outsb
pop
test
adc
dec
cmp
lret
or
lahf
fiaddl
std
orb
sbb
mov
dec
into
inc
xchg
iret
cmp
mov
daa
mov
sbb
xor
popf
dec
fdivr
adc
or
xchg
or
imul
stc
mov
iret
stos
scas
mov
sub
call
insl
insl
sub
xchg
sbb
push
data16
push
test
inc
xchg
mov
repnz
xchg
insb
inc
add
or
jl
xor
test
and
bnd
xchg
in
mov
ret
add
out
cmpsb
lock
dec
lods
sar
sub
add
jg
adc
pop
sahf
xor
int
mov
mov
xor
mov
sbb
sahf
mov
xor
mov
sbb
dec
fisubl
arpl
pop
mov
sbb
rcrl
stc
push
cmc
mov
adc
xchg
sub
shll
mov
out
adc
push
subb
ret
dec
jge
jl
sarb
cmp
arpl
daa
dec
insl
or
iret
shl
or
std
cltd
xlat
iret
out
shlb
pop
pop
jl
out
std
lods
inc
in
movsl
out
adc
pop
pushf
scas
xor
xchg
jp
cld
enter
xchg
lea
add
mov
lret
jb
xor
cmp
lods
lret
and
test
sbb
and
ret
sbb
add
negl
mov
test
imul
inc
fnsave
mov
ds
dec
mov
fxch
or
fiaddl
iret
adcl
inc
lods
rcl
fldcw
push
or
sbb
cld
adc
shrb
xor
xchg
pop
dec
sbb
mov
xor
cmpsb
or
mov
sbb
int
popf
push
jno
jae
adc
cmc
clc
cmpsl
test
pop
mov
mov
mov
lret
jp
data16
lret
aam
scas
in
cltd
mov
loopne
mov
inc
outsl
or
or
mov
jne
scas
ret
dec
ret
adc
addr16
xchg
mov
add
push
fnstsw
cld
out
xchg
pop
repz
movsb
lods
lods
xchg
imul
ficoml
fs
stc
dec
scas
mov
inc
nop
xchg
je
cmpsl
pop
out
in
int
shrb
mov
int3
dec
push
cld
psraw
jg
fcoml
iret
shlb
inc
mov
mov
ss
and
dec
andb
push
adc
pop
jle
inc
mov
idivl
ds
mov
xor
push
movsb
gs
mov
in
mov
sub
sarl
xchg
cs
leave
js
xchg
jmp
lret
sbb
ss
pusha
push
rorb
stos
ljmp
sub
xor
out
ret
pop
pushl
inc
shrl
pop
xor
sbb
push
push
stc
push
test
or
dec
mov
int
int3
and
test
push
add
sub
xchg
push
mov
lods
pusha
pop
mov
mov
inc
icebp
test
cmp
dec
xchg
cmp
scas
rcr
mov
dec
adc
lcall
push
mov
adc
mov
xor
adc
xchg
je
or
pop
pusha
nop
jp
pop
inc
nop
ret
cmp
jp
cmpl
mov
fisubl
sbb
mov
jb
inc
imull
jmp
xlat
cmpsl
dec
xchg
cld
rcrl
pop
dec
add
mov
movsl
xlat
popf
daa
aaa
out
in
xor
mov
mov
je
add
and
rorb
fcoml
jmp
jae
xchg
adc
leave
mov
push
je
arpl
out
sbb
sbb
pop
jne
dec
imul
jge
xor
jge
and
or
mov
adc
jns
andl
cs
insl
xchg
ljmp
icebp
icebp
jnp
and
inc
scas
xchg
jle
jmp
hlt
adc
lods
js
jge
inc
sbb
push
iret
adc
xchg
mov
mov
cmc
lret
cmc
sub
push
ljmp
xchg
es
lahf
lea
push
sahf
dec
cltd
jns
je
shl
shlb
mov
sbb
les
lcall
pop
xchg
pop
push
push
test
lret
push
out
lods
aad
and
pop
inc
jnp
repz
xchg
dec
enter
adc
xor
jl
ret
jbe
push
and
cmp
jo
ds
push
xchg
add
sbb
imul
cmc
jne
lock
mov
or
dec
inc
in
push
pop
scas
fistl
sbb
rclb
sbbl
cmp
mov
je
sub
xchg
pop
inc
sbb
lcall
addr16
ljmp
mov
push
push
int
es
xchg
ds
adc
fwait
xchg
mov
inc
cwtl
mov
push
dec
mov
pop
rorb
jp
out
pop
popf
nop
fstl
unpckhps
jmp
ret
jbe
cmp
dec
sbb
fldcw
mov
mov
sarb
gs
push
and
shll
push
aam
pop
popf
int
lods
adc
test
pop
jnp
into
out
mov
setp
xchg
pushf
jecxz
es
pop
push
call
shrl
test
fdiv
into
push
jmp
pop
lret
dec
js
push
dec
mov
fcoml
xor
loop
push
mov
push
mov
roll
mov
ret
push
nop
ds
push
iret
xchg
xchg
out
and
jno
push
mov
pop
push
xor
sbb
les
shlb
das
out
sbb
push
test
cld
xor
ret
sbbb
outsl
imul
dec
inc
orb
pop
sarl
imul
gs
mov
or
loopne
and
jp
js
jno
or
push
xchg
movsl
lret
popl
xchg
push
nop
sti
pop
inc
js
dec
in
lock
inc
fucomip
pop
jne
insl
xchg
sub
add
mov
fadd
imul
in
xchg
scas
mov
stos
pop
mov
stc
push
mov
hlt
xchg
nop
adc
mov
cli
js
mov
mov
aam
xchg
decb
stc
dec
idivl
mov
adc
test
xchg
test
and
or
mov
push
push
mov
sub
cmp
cmp
jmp
adc
gs
mov
jne
mov
dec
aaa
push
jmp
dec
pop
xchg
cmc
pop
pop
aaa
pop
fbld
xchg
nop
add
out
popf
push
out
test
inc
adc
inc
or
data16
mov
or
inc
mov
mov
xor
jno
cltd
sub
fstps
adc
loop
jns
shl
mov
cwtl
sbb
loopne
inc
xchg
movsl
int
sbb
push
dec
shrl
adc
not
inc
pop
and
sahf
mov
mov
xlat
cmp
insl
popf
sub
xor
jle
pop
ljmp
loopne
rol
dec
repnz
sub
sbb
cli
cmpsb
jae
sbb
clc
subb
adc
sbb
popa
mov
push
mov
push
in
xor
push
pop
sbb
dec
dec
cmp
mov
int3
push
push
add
mov
mov
imul
and
push
movsb
sub
xor
pop
stos
in
jle
lcall
fsubl
icebp
mov
add
shll
mov
lret
sbb
and
mov
jle
or
xor
xor
jge
and
ja
out
jl
mov
std
dec
cltd
dec
hlt
dec
loop
xchg
add
mov
sbb
cltd
cmp
or
lods
sub
adc
loopne
xlat
jnp
and
rcr
pop
push
mov
jne
sub
mov
mov
push
movsb
add
mov
push
jge
bound
adc
stc
pmulhuw
and
inc
xorl
cmp
xchg
mov
mov
pop
push
cld
fwait
jp
scas
out
pusha
xchg
lods
mov
jp
sahf
cmp
adcb
call
add
aad
lahf
test
inc
mov
mov
arpl
xor
inc
sbb
repnz
or
nop
test
jge
jl
cli
lods
push
inc
mov
je
push
ss
mov
inc
jg
push
adc
xchg
js
dec
cld
adcl
and
add
xchg
push
cmp
adc
in
xor
dec
xor
in
dec
sti
push
and
cltd
jmp
add
std
out
xor
push
repz
jns
mov
jge
mov
fisubs
sbb
xor
lahf
cmpl
sub
ffree
out
int3
push
data16
fnstsw
dec
cmp
mov
lock
dec
icebp
mov
into
sub
stos
popf
add
adcb
pop
sarl
pop
and
inc
cmc
push
insb
idivl
mov
xchg
sbb
sar
sbb
and
push
or
int
out
rol
imul
push
inc
adc
jmp
mov
add
aaa
adc
les
jecxz
sub
jmp
movsl
inc
ss
sub
xor
push
dec
mov
int
cmp
orl
aam
jns
mov
push
or
jae
bnd
scas
adc
push
jbe
sub
lret
sub
add
adc
insb
cld
mov
fistpll
mov
inc
push
mov
xchg
insl
xchg
pop
mov
adc
jmp
add
clc
mov
sbb
inc
jno
in
mov
xchg
popa
test
roll
and
loop
loopne
lret
mov
add
ja
insb
cmp
in
in
cmpsb
pushf
xchg
sti
leave
inc
sar
mov
fstps
pop
mov
movsl
out
xchg
notl
inc
icebp
xor
adc
ds
adc
shlb
add
push
pop
out
cmp
ja
lds
jb
xchg
push
test
cltd
aas
push
sub
mov
cmpl
int
sbb
inc
pop
adc
xchg
es
dec
mov
rorl
dec
nop
push
mov
mov
inc
mov
inc
adcb
fsubrs
or
mov
lds
call
jmp
push
dec
fidivs
cmpsl
imul
inc
fdivrl
jo
jmp
xchg
outsb
dec
xchg
jle
pusha
dec
das
fsubrs
int3
xchg
and
sbb
mov
dec
xchg
lock
rcrl
cld
addr16
pop
dec
push
jge
push
ret
mov
pop
fnstsw
in
mov
mov
mov
mov
out
xchg
in
mov
dec
sbb
mov
or
push
sbb
pop
inc
pop
popf
mov
mov
inc
popf
cmp
in
dec
shlb
pop
jbe
mov
pop
or
mov
push
sti
add
or
fsts
es
les
mov
xor
sub
cld
imul
iret
mov
fcmovnb
sbb
std
stos
pop
shll
outsb
lods
xor
pop
dec
sub
sub
xorl
mov
in
mov
stos
stos
jae
rcl
pushl
negl
leave
pop
lds
stos
test
out
cmp
inc
popf
adc
ja
dec
enter
popa
aas
push
pop
arpl
inc
mov
mov
pusha
cmp
jecxz
push
notl
jns
pop
loopne
fisubrs
sbb
cmp
dec
call
dec
cmc
lods
xchg
push
mov
fidivl
jle
sbb
dec
fs
inc
mov
sbb
jbe
addr16
sbb
mov
clc
push
sarl
jp
sbb
dec
je
xor
fucomip
and
xchg
push
push
push
pop
mov
pop
ficoms
jg
inc
pop
mov
int3
aas
xchg
mov
fucom
jmp
fs
mov
sub
xlat
and
push
fidivrs
pop
cmp
add
adc
loopne
loope
lea
mov
jns
bound
js
mov
sbb
pop
xchg
rorl
sbb
jle
dec
or
jg
xchg
outsl
mov
fsubrs
lea
lods
cld
jo
push
mov
lock
ret
mov
xchg
repnz
xlat
repz
mov
test
dec
mov
or
dec
xchg
sbbl
stos
pushf
push
call
jbe
push
loopne
or
sbb
or
ds
clc
in
mov
pop
sti
inc
sbb
push
inc
je
xor
enter
add
scas
cmp
stos
fcmovbe
addr16
scas
jae
gs
or
pop
and
cmc
lock
lods
into
insl
push
gs
mov
mov
mov
leave
inc
xchg
push
xor
mov
rcr
xchg
adc
sub
cmp
and
pop
jecxz
cli
pop
in
cli
aam
cmpsb
fucomi
add
test
push
push
and
push
loop
rcrl
xchg
xor
dec
pop
popf
push
and
sub
push
pop
inc
inc
imul
mov
cmp
scas
jmp
push
out
jle
push
cld
pop
xchg
clc
mov
mov
sbb
jno
enter
or
sub
xchg
out
popa
ja
lcall
subb
xchg
or
movsl
inc
push
dec
jg
add
or
out
imull
outsl
mov
adc
rcrb
sti
mov
je
outsb
and
push
pop
aaa
rcrl
mov
or
scas
dec
xor
add
cmpsb
hlt
out
dec
xor
sahf
push
push
xor
xchg
mov
jp
mov
jl
push
movsl
sbb
and
and
dec
jg
mov
adc
and
inc
xchg
out
cmp
ret
fists
mov
add
pop
pop
inc
xchg
and
mov
test
adc
popa
in
inc
pop
xlat
mov
in
jae
packsswb
das
test
adc
jge
cs
pop
sarb
cmp
add
adc
loopne
leave
imul
nop
jmp
and
adc
lea
push
clc
lcall
push
sbb
xor
aas
js
out
sbb
hlt
sbb
imul
lcall
mov
fmul
mov
inc
fs
les
pop
pushf
adc
sbbb
movsl
imul
sub
shr
inc
dec
dec
out
aad
cltd
sahf
pop
scas
fwait
and
jno
mov
hlt
cld
bound
sub
ret
pop
push
pop
mov
cmp
mov
pop
sahf
sbb
mov
cmp
ret
lds
xchg
jb
aas
mov
dec
jno
ljmp
mov
add
sub
loopne
pop
jmp
sbb
jge
adc
ret
xor
sub
inc
repz
ffreep
mov
shll
or
push
sub
mov
push
aaa
unpcklps
jmp
xchg
ja
xchg
pop
push
loope
stos
mov
xor
cltd
xor
js
daa
mov
outsb
jne
xor
mov
xlat
and
lods
push
mov
sbb
xchg
loopne,pt
and
aam
mov
sbb
mov
push
push
push
int
popf
cli
jecxz
pop
out
push
inc
or
push
sbb
mov
inc
xchg
xor
stos
and
jmp
jg
mov
jmp
inc
and
inc
je
cmpsl
cli
pop
jl
cmp
pop
lret
lcall
xchg
bound
xchg
cs
cmp
ret
lahf
fs
dec
push
in
pop
xor
mov
jae
cli
lahf
mov
or
cwtl
sub
div
pusha
mov
pop
in
dec
ret
jg
add
jle
ljmp
cmp
ds
call
jp
jp
mov
rcrl
les
test
xorl
mov
push
and
mov
scas
sub
and
daa
xlat
daa
not
loopne
pop
test
lret
mov
cmpl
cmp
popa
inc
and
mov
fsubs
mov
out
aaa
js
mov
inc
icebp
ficompl
dec
fwait
call
clc
out
scas
dec
jg
scas
push
insb
mov
and
movsb
cmpsl
jle
into
cmpsl
hlt
repz
mov
xlat
sub
dec
sub
mov
pop
inc
imul
lds
xor
xchg
push
mov
pop
in
lds
shl
loope
fs
pop
add
jecxz
cmpsl
ror
cmp
pop
jbe
data16
xchg
in
and
adc
ret
fmuls
orb
popf
and
inc
pop
or
dec
push
jbe
mov
inc
fistps
jnp
cmpsl
js
insl
scas
mov
jae
pusha
xor
sbb
out
adc
cltd
addr16
repnz
fldl
testb
outsl
divb
ret
push
clc
int3
add
bound
mov
push
push
into
std
nop
jno
sbb
jmp
push
std
idivb
fwait
and
adc
adc
ljmp
dec
in
pop
out
mov
dec
fwait
and
fisttps
push
add
inc
fs
int
in
pop
sti
sbb
sub
out
push
jo
imul
push
std
or
mov
and
das
mov
push
cmp
push
add
or
jne
call
dec
dec
cmp
ret
dec
push
inc
iret
lcall
lock
gs
cmp
cs
cs
cmp
pop
into
jmp
leave
popf
xor
mov
out
mov
or
cmp
xor
mov
mov
lret
frstor
and
xchg
pop
pushf
jne
xor
lret
call
in
or
mov
sbb
out
ljmp
jmp
nop
pop
mov
sbb
test
cli
test
mov
cmc
aas
adc
cwtl
int
or
stc
sub
lds
sub
add
negb
lret
mov
mov
adc
mov
mov
popa
xor
cmpsb
and
push
loopne
jno
cltd
in
dec
andb
push
jecxz
xchg
dec
push
mov
mov
cmp
add
jecxz
orb
aas
addb
or
sahf
and
sub
sbb
jmp
aaa
xor
mov
push
popa
int3
adc
cld
lods
in
adc
or
xchg
dec
jns
dec
iret
pop
fisttpl
loop
and
add
cld
rorl
dec
mov
xchg
test
in
pop
push
shl
sarb
shlb
adc
mov
push
mov
add
pop
cmp
sarb
std
out
ss
out
cmp
dec
pop
notl
pop
in
stos
push
aaa
lods
divl
sbb
aam
fmull
inc
dec
mov
jl
adc
pop
cs
cmc
in
adc
cmc
iret
or
movsb
fsubl
push
inc
mov
jl
add
into
loop
or
and
pop
xor
cmp
pusha
stos
stc
jae
sti
mov
jno
mov
push
lahf
add
mov
jns
jge
rcll
out
dec
ds
xchg
ss
sub
or
lock
fdivr
fucom
dec
or
std
cmp
push
lock
adc
pop
push
dec
jge
ret
jbe
cli
pop
or
lret
out
lods
aad
jmp
fcoml
sub
scas
push
inc
adc
and
inc
in
pop
pop
insl
cmp
adc
lret
cmp
frstor
push
push
jmp
xchg
ss
mov
sbb
movsb
cmp
add
das
lcall
mov
jg
xor
iret
test
mov
or
mov
pop
inc
push
mov
dec
push
in
sub
and
dec
cmpsl
push
clc
xor
cmc
or
jae
les
jbe
sbb
sub
fs
insb
dec
push
pop
fnstcw
push
mov
dec
or
cmp
mov
mov
sub
les
movsb
pop
add
into
test
test
push
ret
or
sbb
push
dec
mov
mov
and
cld
sub
lcall
repz
cmp
sarl
dec
mov
shlb
inc
xchg
cmp
mov
mov
mov
insl
das
xor
cwtl
add
mov
jnp
add
push
cld
inc
mov
nop
mov
mov
jbe
dec
lret
and
jle
pop
mov
push
mov
movsb
inc
sub
push
sub
or
xchg
pusha
popf
jne
aaa
insl
push
out
shl
pop
xchg
popa
scas
push
add
lea
dec
and
lret
loope
clc
mov
or
int3
hlt
or
inc
push
cmpb
addl
dec
xor
arpl
fs
xor
lods
inc
je
xor
out
cmpsl
sbb
addr16
pusha
jmp
cmc
loopne
cmp
xchg
rol
lock
mov
divb
and
dec
jecxz
das
inc
addb
xchg
ret
push
ret
sbb
mov
jns
inc
dec
outsb
mov
push
pushl
mov
in
cmp
sti
mov
mov
pop
sbb
ja
dec
xchg
in
and
stos
jl
ljmp
inc
sbb
mov
jbe
mov
sub
imull
lock
cmp
fwait
nop
movb
pop
jae
popa
sbb
fdivrl
lods
xchg
leave
loope
add
xchg
lds
xor
push
mov
lods
jmp
inc
stos
loop
or
fldcw
sarb
pop
xlat
ret
mov
mov
lea
pop
pushf
sbb
data16
add
xlat
stos
mov
lods
ret
dec
fdivs
lea
xlat
cmpsb
pop
enter
push
fcomps
jne
rcll
cmp
jg
or
mov
adc
in
xor
or
ljmp
ret
out
sbb
xchg
jl
jp
push
imul
sbb
inc
cld
call
jmp
popa
push
test
sbb
jecxz
pusha
push
and
xchg
jne
mov
mov
inc
pop
pusha
inc
mov
lods
and
in
rcr
push
insb
dec
mov
pusha
mov
push
out
push
sbb
imul
inc
fisttps
int3
push
add
sub
mov
sbb
repz
or
pop
call
mov
dec
push
mov
mov
jecxz
mov
aaa
jp
adcb
in
data16
sahf
jl
std
leave
arpl
in
pop
mov
int3
fwait
inc
and
out
jg
stc
cltd
daa
xchg
mov
inc
outsb
rcrb
mov
pushf
cwtl
cmp
inc
imull
mov
xchg
pop
mov
jae
push
xor
and
dec
arpl
pop
int
loopne
jns
mov
test
inc
popf
repz
adc
jl
sbb
imulb
xor
xchg
mov
add
lock
cmpsl
pop
mov
mov
push
push
into
xchg
pusha
in
rcrb
jno
cwtl
subl
pop
scas
clc
mov
stos
mov
imul
ficoml
sbb
les
jns
cmp
add
xchg
jmp
xor
sub
mov
shrb
and
int3
cmpsl
sbb
cmp
into
data16
jl
mov
mov
inc
lret
test
int3
cmc
or
dec
adc
mov
mov
and
iret
mov
or
add
push
data16
shll
imul
jmp
sbb
pusha
aas
fdivrp
imulb
jg
xor
insb
daa
sbb
jno
je
sub
jne
and
dec
xchg
repnz
iret
les
adc
dec
pusha
and
mov
jno
inc
mov
movsb
mov
fisttpll
out
and
mulb
int
sub
jle
mov
je
adcl
lret
fsubrs
lds
imul
out
and
iret
test
std
pop
add
adc
fs
add
inc
rorb
nop
xor
mov
cli
pop
mov
scas
idivl
adc
in
loop
ljmp
pop
mov
aad
sahf
xchg
in
pop
jl
adc
xorb
dec
aam
fidivl
cmp
testb
rclb
ret
or
cwtl
push
jl
xchg
mov
gs
mov
sbb
loope
das
pop
sarl
stc
add
cltd
gs
shr
setl
push
pop
or
mov
push
sub
jns
leave
xlat
emms
dec
je
aas
movsb
and
xchg
pop
and
push
mov
xchg
in
call
pusha
icebp
xor
in
das
mov
aam
push
jae
mov
jno
pop
cmpsl
pusha
xor
mov
fistpl
sub
cld
std
push
cmpsl
xchg
jae
add
adc
xor
popf
jle,pt
shr
mov
sub
andl
lds
push
sbb
or
lcall
and
mov
mov
xor
shl
in
add
sti
data16
fcoms
inc
nop
into
movsb
jle
mov
jg
add
sar
and
push
es
inc
in
xor
addr16
movsl
push
loop
sbb
cmp
stc
idivl
push
andl
jg
jnp
inc
xchg
pop
imul
es
aas
stos
cltd
out
imul
je
add
out
arpl
adc
or
pop
xchg
jbe
pop
xchg
sti
arpl
cltd
bound
push
lahf
pop
push
adc
aam
scas
push
sub
mov
mov
fsubp
mov
fidivs
jmp
enter
ljmp
in
mov
inc
loop
or
lock
outsb
add
clc
cld
sbb
movsb
push
js
movsl
xorb
sub
in
jmp
inc
test
xor
jmp
out
mov
lcall
dec
lea
or
aaa
loopne
push
mov
mov
and
rorl
jae
pop
adc
adc
pusha
or
lret
sar
testb
in
pop
ds
xor
and
lods
mov
out
sub
addr16
daa
xchg
out
jmp
xor
mov
aaa
test
inc
lock
repnz
arpl
adc
es
jg
and
xor
div
test
inc
mov
je
inc
sbb
test
sbb
xchg
aaa
dec
cmp
fs
xor
fnop
int
inc
mov
mov
xor
notl
jp
jbe
xor
out
cltd
push
sub
inc
cmp
fiadds
cs
sub
xchg
subb
mov
call
add
fisttps
ljmp
sub
mov
or
shrl
pop
inc
push
and
aaa
pop
ret
pop
int
loopne
jmp
pop
xchg
xlat
lret
add
out
inc
mov
push
fsubrs
sub
adcl
or
push
fcomi
push
repnz
adc
push
ja
sub
xchg
repnz
leave
hlt
push
pop
pushf
sub
inc
sub
cmp
jb
xor
fldcw
sub
lahf
enter
jg
mov
imul
fcmove
inc
xchg
pop
gs
jns
rolb
std
xor
adc
test
mov
lods
sub
push
andl
jnp
mov
lods
xchg
or
movsb
daa
fcomps
jl
sbb
xchg
mov
lds
mov
adc
xor
fisubl
in
mov
fcoms
sbb
dec
cmp
adc
insb
aaa
xchg
push
enter
cmp
mov
sti
pop
dec
sti
mov
sbb
cs
lods
jp
test
inc
out
enter
inc
movsl
daa
test
je
shrb
and
stos
jo
mov
push
mov
cmp
subl
jnp
nop
xor
and
mov
sar
adcb
popf
insl
cmp
xor
ja
or
movsl
mov
js
add
sahf
pop
dec
jmp
fsubl
leave
lock
pop
push
push
fs
insl
pop
outsl
in
sti
insl
mov
aad
data16
or
movsl
sbb
lods
dec
sub
mov
adc
sub
inc
xor
pop
sbb
xchg
xchg
push
xor
jl
lds
and
push
into
pop
adc
aam
push
inc
scas
and
mov
sarb
es
mov
ret
and
filds
mov
cmp
and
fnstcw
out
cmp
in
push
and
xchg
dec
test
lods
addr16
pusha
adc
xchg
in
cmp
push
push
jae
sbb
push
cmpsl
rcrl
sbb
insb
movsl
dec
or
scas
jns
cmp
and
mov
pop
and
dec
jo
insb
insl
push
or
and
jmp
dec
push
ret
push
cmp
dec
push
mov
jns
add
xor
pop
fmuls
pop
push
or
dec
jecxz
fwait
adc
rolb
push
jle
addb
lret
pusha
pop
lods
sub
mov
push
outsb
push
int
mull
ret
adcl
mov
imull
fwait
dec
mov
or
or
adc
xlat
andb
dec
cmp
mov
adc
dec
cli
fwait
sbb
out
push
in
cmp
pop
scas
mov
loop
cmpsb
aas
push
ret
lds
jnp
nop
cmp
adc
jecxz
call
stos
cmpb
iret
stos
xlat
daa
shll
dec
das
jge
ja
loope
jmp
insl
mov
mov
aas
lods
inc
bnd
adc
xchg
add
test
arpl
imul
add
or
push
cs
movl
daa
xor
outsb
push
push
push
or
in
daa
pop
mov
lcall
xchg
fsub
cmp
pushf
int3
mov
cwtl
sub
cwtl
fidivrs
xor
mov
push
push
and
or
jne
insb
pop
push
push
pusha
inc
cs
and
repnz
mov
mov
dec
and
stc
or
jl
cmp
jo
adc
xor
in
xchg
fisubl
mov
or
push
sbbl
pop
cmp
mov
cli
cmp
mov
push
jns
add
outsb
mov
pop
in
cmp
xor
add
outsb
jecxz
or
sub
popa
push
into
shlb
push
xor
push
pop
iret
adc
mov
test
or
sbb
pop
add
sub
push
shl
popa
inc
cmc
fs
sbb
mov
sbb
xchg
push
sub
arpl
mov
pusha
fisubs
inc
cmp
mov
inc
or
jge
add
loope
jcxz
add
xchg
or
cmp
cmp
test
xchg
lret
repz
lock
mov
adc
add
dec
fmull
mov
pop
xorb
push
dec
mov
fabs
ret
push
push
aaa
out
cs
pop
mov
push
fdivrs
pop
rcl
sti
and
or
pop
xchg
mov
push
int3
in
cmp
mov
mov
adc
bound
scas
push
mov
mull
ret
test
cli
mov
out
mov
rcl
arpl
andl
testl
mov
test
stc
push
jecxz
or
daa
enter
fimuls
jns
shlb
pop
loopne
dec
lock
fwait
lret
popa
je
fdivl
in
push
lahf
add
je
xchg
adc
ret
jge
inc
dec
movl
test
ss
mov
std
gs
xor
arpl
gs
ficoml
jecxz
xlat
in
lret
and
mov
pop
std
xor
movb
sub
cmp
outsb
cmpsb
nop
cmc
je
pop
scas
sub
mov
mov
rolb
js
and
pushf
rcll
sub
test
ja
scas
clc
hlt
rdmsr
fimuls
pop
cltd
out
or
xchg
xchg
out
lret
push
es
fidivs
xrelease
sbb
push
les
push
adc
pop
pop
faddl
je
jge
inc
push
mov
inc
ja
scas
inc
mov
jnp
pop
insl
push
adc
lods
fiadds
push
ja
lret
adc
fs
mov
dec
ds
xchg
sub
inc
xor
adc
cld
frstor
jae
mov
push
adc
inc
call
sub
ds
nop
into
loopne
ret
cmpsb
imul
sbb
xchg
mov
pop
sbb
jae
sbb
mov
mov
and
add
push
sub
pop
adc
cmp
add
frstor
cmp
adc
btsl
xchg
sahf
cmp
pop
mov
scas
adc
les
mov
jle
sbb
pop
inc
or
mov
mov
jnp
inc
enter
adc
xchg
stc
ljmp
das
test
and
std
and
lods
lret
xchg
pop
jnp
mov
fsts
cmp
stos
js
sbb
ficompl
ja
addr16
mov
cmpsl
rorb
sub
mov
fwait
sbb
pop
and
inc
add
dec
scas
mov
push
adc
push
lahf
jle
daa
and
push
lea
mov
sbb
lcall
in
add
scas
out
jb
icebp
sub
inc
adc
aaa
sbb
adc
mov
mov
dec
mov
arpl
mov
jb
mov
ficoml
mov
arpl
pop
stos
repz
ret
pushf
sahf
jb
dec
jbe
lret
imul
adc
imul
enter
ds
or
mov
aaa
xlat
clc
lods
shll
mov
push
in
rorb
movsl
andb
sub
std
xorb
js
pop
add
jae
loopne
ds
std
addr16
ret
aam
sbb
mov
outsb
stc
inc
fcmovb
imulb
test
fs
jnp
inc
adc
mov
fisubrs
or
xor
mov
addr16
inc
dec
pusha
sbbl
mov
xchg
lds
and
js
jl
inc
pop
xor
ja
out
xor
xchg
and
adc
jb
fildl
xchg
cli
xchg
movsl
inc
xor
bound
fnstsw
xor
iret
mov
iret
dec
mov
mov
lods
jl
je
jnp
rorb
push
cmp
into
daa
into
test
lret
xchg
shlb
scas
xor
imul
or
mov
add
or
shlb
test
ret
aaa
xchg
jbe
into
add
scas
pop
mov
test
out
popa
iret
in
cltd
repz
fnstsw
jle
sbbb
comiss
cmp
popa
into
mov
mov
xorb
scas
popf
arpl
gs
xor
xchg
imul
into
js
in
loop
out
lods
mov
cmp
aam
mov
repnz
pop
and
call
jae
icebp
xor
in
push
addr16
push
ja
jae
push
dec
xchg
or
sbb
mov
cmc
int
push
and
fwait
insb
mov
dec
popf
sbb
inc
and
cmp
sbb
nop
dec
mov
shl
daa
jmp
jne
jge
sub
push
mov
mov
mov
int3
adc
in
inc
mov
mov
pusha
bound
add
les
and
pushf
jmp
notl
in
nop
nop
cld
cmp
movsb
and
add
mov
sbb
lods
dec
pop
jb
out
in
sub
out
in
mov
mov
pop
lds
mov
pop
cmc
pop
loope
lcall
es
mov
fimull
nop
mov
insb
pop
sbb
arpl
flds
iret
pushf
fisubrs
or
xor
enter
outsb
mov
pushf
popf
sub
not
jp
add
out
mov
xor
les
cmp
jne
sub
js
xchg
mov
fwait
mov
xor
lcall
xor
dec
movsb
cmp
mov
xchg
insb
xchg
mov
xchg
popa
add
jmp
fistpll
mov
pop
mov
pushf
iret
in
mov
dec
outsb
hlt
xchg
divb
jmp
mov
push
nop
mov
sahf
hlt
xchg
pop
xchg
cltd
jo
movsl
in
dec
jb
xchg
and
lea
daa
jmp
cmp
insl
imul
imul
scas
mov
scas
ljmp
mov
xchg
mov
cltd
dec
jle
cmpsl
insb
punpckhdq
dec
dec
xor
lock
int
jp
cmpsb
jmp
add
in
adc
hlt
cmpsl
jg
xchg
and
pushf
push
adc
in
bswap
or
sbb
lret
push
xchg
iret
stc
je
lret
addl
adc
mov
inc
lea
push
fwait
int
aas
push
adc
mov
popf
mov
inc
cmp
dec
fiaddl
mov
pop
in
jp
cmpsl
lock
push
mov
dec
mov
rcrb
adcb
lods
mov
addl
movsl
cwtl
xor
inc
nopl
push
imul
loopne
and
scas
add
push
outsb
arpl
cmp
push
pop
hlt
pop
jnp
cmp
pushf
or
and
push
push
mov
xor
fisubs
xchg
push
xor
push
bswap
jge
xchg
cmp
xor
sub
dec
xchg
push
jae
sbb
pop
cli
insl
adc
subl
andl
not
lock
loope
mov
pop
nop
repnz
cmp
xorb
sub
pop
adc
adc
inc
adc
dec
fisubrs
in
xor
mov
roll
arpl
es
in
push
mov
push
loop
xchg
in
mov
mov
mov
mull
ret
dec
mov
jno
adc
scas
daa
stc
hlt
dec
add
sbb
jb
fs
cmp
dec
pop
repz
cmp
sbb
or
mov
add
push
inc
pop
lds
jne
pushf
imul
mov
stc
imulb
mov
pusha
or
in
add
dec
push
es
sbbb
cmp
mov
or
in
shr
fstps
adc
push
pause
mov
mov
inc
jle
jp
clc
mov
sbbb
cmc
rcrl
ret
fisubl
adc
sti
jo,pn
nop
movb
and
int3
rcrl
add
mov
ss
and
add
dec
add
mov
jmp
fidivl
cmp
out
ficoml
mov
test
cltd
lcall
test
xchg
push
hlt
orps
std
mov
add
dec
xchg
lea
jbe
aad
fs
fistpll
cmp
out
sub
dec
push
sbb
int3
aaa
xchg
push
cmpsb
fsts
xchg
enter
pop
hlt
into
mov
sub
sbb
jne
aas
mov
shrb
cmp
pop
sub
outsb
out
popf
stos
xchg
adc
mov
sarb
iret
je
sub
mov
lea
std
cmp
ja
loopne
andnps
push
push
addr16
jae
insb
inc
cmp
adc
leave
push
imul
icebp
inc
je
pushf
pop
dec
pop
lret
mov
sub
push
cmc
adc
sbb
cli
jmp
in
cmp
ss
stos
pop
or
pusha
xchg
movsl
repnz
push
mov
rol
das
jns
xchg
push
sbb
sahf
cmp
cmp
mov
xchg
jg
sub
sub
mov
testb
sbb
push
xchg
sahf
fbld
cmp
xchg
mov
mov
hlt
mov
cmpsl
shr
in
or
xor
dec
push
xor
xlat
fadd
mov
in
pop
sbb
shll
sub
stc
sub
movsb
imul
add
mov
push
std
insb
out
adc
arpl
ss
inc
rol
mov
popf
adc
mov
gs
cmpsb
dec
mov
push
fld
fstpt
inc
aas
adc
inc
mov
mov
push
or
std
add
rcrb
push
jne
inc
inc
push
sti
lea
xor
xchg
arpl
add
sub
pop
sarb
xor
xor
sti
loop
mov
push
aam
mov
add
mov
dec
sub
lret
movsl
in
scas
shlb
jbe
sub
scas
iret
or
mov
out
mov
mov
xor
cmp
push
cmp
dec
lret
push
jp
adc
or
int3
out
rcrb
inc
into
loopne
cmp
in
push
add
sbb
mov
push
jbe
lods
cmp
xorl
nop
add
fwait
cmpsb
addb
cmp
or
adc
sbb
stos
out
or
int
sub
sbb
inc
pop
push
stc
and
add
push
mov
xchg
inc
mov
aaa
ret
ss
or
std
cmp
jne
sti
stos
push
inc
movsl
sub
ljmp
inc
mov
pushf
cs
push
fdiv
stc
jo
insb
mov
cmpsl
jno
in
arpl
cltd
cld
addr16
scas
dec
aam
loop
push
ret
mov
gs
xlat
dec
mov
arpl
fwait
cltd
cmp
les
sbb
or
dec
inc
mov
mov
andb
jmp
sbb
add
sub
dec
scas
scas
mov
adc
cmp
and
push
sbb
push
leave
adc
jae
mov
jnp
cmp
mov
js
mov
cmpb
inc
addr16
stos
cmp
adc
sbb
loop
nop
lock
adc
and
js
in
rcll
fisubrs
jnp
sbb
cmp
int
ljmp
repz
in
sbb
push
pop
jnp
cmpsb
sub
fs
mov
jge
mov
cmp
pop
xchg
add
int3
add
inc
lods
test
fs
enter
lods
icebp
xor
cmp
icebp
ret
cs
ret
xorb
cmp
fisttpl
jne
cld
test
dec
add
xchg
lods
enter
imul
movsb
xor
jb
pop
fs
adc
aad
sbb
dec
jmp
aaa
scas
sbb
and
mov
or
dec
rcrl
sbb
sbb
jnp
into
hlt
inc
or
xchg
jg
push
inc
test
inc
lea
pusha
adc
test
cli
mov
pop
movsl
cmpsb
sbb
fisubl
cs
inc
push
subl
adc
push
cmp
lock
add
sbb
or
jb
aam
dec
inc
xor
sti
and
xor
ljmp
iret
sbb
mov
imul
into
int3
mov
shlb
dec
xchg
dec
shl
pop
das
cmpsl
rorb
or
or
rclb
call
lret
sub
sbb
push
arpl
aad
xchg
sbb
sub
sbbb
mov
adcl
push
mov
jno
fldl
lret
xor
mov
movsbl
aad
cld
adc
insl
xchg
sti
pop
pop
shlb
add
add
clc
and
add
fisttpll
inc
icebp
mov
leave
fldt
push
mov
movsb
xor
mov
in
adc
adc
sti
jmp
psubusw
mov
loopne
nop
fcmovb
xlat
inc
push
dec
sbbb
push
push
jo
push
cmp
add
cmpb
pop
call
cltd
cltd
and
dec
mov
popf
jl
xor
rcll
fcmovnbe
js
and
divl
dec
inc
cmp
mov
mov
mov
inc
xor
faddl
sub
xor
arpl
call
popa
xchg
pop
mov
push
es
fs
lret
push
std
pop
cli
movsb
jbe
inc
sbb
daa
sbb
aaa
cmpsl
fwait
pop
push
clc
mov
cld
xor
dec
pop
das
jp
and
into
adc
jmp
xor
shll
insl
aad
adc
jmp
outsl
loopne
lahf
insb
dec
cld
dec
jge
dec
mov
scas
xchg
movsl
sub
pop
inc
popa
and
inc
insl
or
adc
gs
ret
mov
dec
jl
jle
add
hlt
sbb
xor
sbbb
rol
int3
pop
push
mov
and
or
mov
pop
mov
gs
mov
imul
xchg
pop
cmp
jp
add
notb
sti
and
inc
popa
or
cs
out
lahf
in
jne
inc
dec
push
ja,pt
loope
push
push
add
mov
movsb
scas
movsl
test
out
dec
mov
cwtl
sbb
repz
add
xchg
std
lock
push
mov
sbb
push
clc
mov
inc
add
inc
cwtl
aam
sbb
dec
mov
mov
repz
pop
jle
in
lcall
inc
push
jmp
jmp
push
xor
pandn
je
lea
aam
stc
daa
adc
inc
xor
lret
pop
stos
lret
sbb
sbb
pop
movb
out
mov
xchg
data16
cmc
addr16
dec
enter
xor
adc
outsl
jnp
fstpl
push
das
pop
loop
cmp
stc
lods
int3
push
jo
add
adc
xor
daa
test
insb
mov
push
pop
andl
inc
in
in
pop
inc
loope
test
jns
inc
mov
push
mov
dec
push
hlt
sbb
shll
cwtl
js
insl
out
jp
lds
jbe
pushf
fsubp
and
xchg
icebp
push
popf
je
sub
fbld
push
xchg
push
ss
and
mov
cmc
cmp
adc
mov
xor
jmp
cs
out
inc
and
roll
aas
mov
cs
pop
and
imul
jnp
sbb
hlt
ret
xor
test
sub
insb
jl
lret
sbb
dec
inc
sahf
xor
cmp
jmp
or
add
inc
fbstp
repnz
pop
jb
jmp
cltd
cmpsl
movsl
fbstp
int
cmp
xor
outsl
xor
cmp
jnp
jg
call
cld
add
shl
out
aam
mov
cmpsb
imulb
daa
fstl
sub
xor
or
mov
es
fwait
aam
mov
jnp
push
icebp
mov
dec
test
cmpsb
add
and
test
out
add
mov
imul
push
and
mulb
fistpll
jl
lahf
or
jb
pushw
iret
add
push
xor
xchg
rolb
cmp
cmpsl
mov
out
push
inc
adcb
xor
mov
xchg
xor
test
pop
jge
lock
repnz
test
push
into
outsl
insb
adc
aad
cmp
cwtl
mov
shlb
stos
dec
and
mov
sbb
jns
xor
rol
mov
adc
aaa
jecxz
dec
sub
xor
popa
shrl
push
mov
or
stos
sub
jle
scas
xor
dec
ror
xorl
xor
jae
xor
mov
jne
push
mov
jnp
pusha
mov
in
in
push
pop
testl
outsb
and
pop
xor
out
dec
data16
add
in
ret
mov
lcall
lods
jmp
out
cmp
mov
adc
insl
sti
mov
sub
adc
popa
int3
lock
in
cmp
lock
testl
loop
bound
loope
inc
sub
and
dec
in
lods
mov
and
jmp
jle
inc
dec
xchg
mov
sahf
mov
mov
cmp
sbb
push
pop
jbe
add
ss
movsl
fmull
fdivrp
dec
sbb
ss
fptan
repz
nop
jg
gs
in
pop
adc
loop
adc
repnz
sub
mov
xor
jmp
push
rclb
push
xchg
and
ret
lea
jp
lods
add
icebp
push
out
xor
mov
ljmp
enter
ret
xchg
in
dec
lea
pop
ffreep
adc
sub
dec
in
mov
inc
adc
inc
xor
jl
cmp
filds
gs
fmull
loope
stc
sbbb
dec
add
rorb
inc
call
xchg
push
movl
push
stos
pop
lods
aam
or
movsb
enter
dec
or
arpl
lods
out
shl
xor
jo
push
cmp
sbb
sti
mov
arpl
sbb
pop
cmp
xchg
mov
xlat
fsub
and
cmp
adc
or
push
jl
testb
sbb
cwtl
fimuls
repnz
adc
int
mov
and
and
cmp
xchg
jp
enter
fbld
jl
or
insb
xor
push
adc
imul
sub
mov
xchg
mov
and
xor
in
cmc
push
or
loop
adc
jecxz
std
push
out
lcall
xlat
pop
insb
pushf
nop
jecxz
and
xor
jns
mov
mov
imull
rorb
jns
jg
push
test
loopne
in
dec
push
cmp
jbe
ss
aam
out
dec
add
mov
inc
lcall
stos
mov
stc
stos
sahf
imul
pop
push
xor
lock
fcmovne
popa
pop
mov
jnp
popa
icebp
scas
cld
push
inc
fdivr
inc
icebp
repz
or
lret
pop
lods
sbbb
mov
sarl
flds
cmp
faddl
outsb
xchg
cmp
insb
fists
jecxz
ds
sub
arpl
adc
push
mov
dec
jae
inc
fnstenv
sbb
rclb
call
loopne
sub
xchg
cmpsl
xchg
ret
cmp
movsl
rcll
outsl
int3
sbb
rorb
mov
test
repnz
out
mov
popf
inc
jle
jl
mov
sub
or
xchg
xchg
or
xorl
mov
xor
popa
jo
or
rclb
mov
movsl
loop
mov
cwtl
out
das
adc
sub
mov
adc
or
adc
movsb
add
dec
xchg
lods
xor
mov
lods
xor
jg
jl
ror
int
shlb
movsb
lret
mov
push
fs
mov
add
sub
addr16
js
rcrb
mov
mov
icebp
je
ret
pop
repnz
push
dec
jo
or
xchg
int
leave
mov
mov
inc
call
mov
mov
xlat
xor
aad
push
inc
or
and
cmp
push
fildl
scas
cmp
xchg
jne
test
movsb
loop
sub
in
mov
imul
xor
pop
xchg
jecxz
and
mov
adc
andl
adc
add
xchg
xchg
sbb
subl
loopne
clc
push
jb
add
mov
add
jb
fidivrl
cmpsl
addr16
cmp
push
and
hlt
insl
rcr
adc
or
or
pop
adc
loop
in
inc
mov
push
mov
jge
out
xor
jmp
f2xm1
rcll
scas
lea
test
lods
cmp
xchg
xor
popf
mov
cmpsb
pop
pushf
mov
rcrl
jge
cli
or
fldt
sti
pop
lods
or
pop
or
or
jp
sub
and
in
outsl
dec
jno
xchg
imul
or
loop
jne
cs
add
inc
fwait
orb
cmpsl
and
push
jg
or
sbb
xchg
test
jle
push
inc
sbb
jl
fcompl
ja
dec
dec
in
and
xchg
fldl
or
sbb
orl
in
lods
rcrl
out
leave
pop
aas
popf
or
mov
in
jo
push
mov
in
in
or
dec
orl
cltd
pushf
and
mov
adc
xchg
sbb
inc
shrb
sti
in
mov
movsl
mov
xchg
xchg
into
xor
dec
mov
idivb
jae
testl
clc
loopne
mov
mov
pop
add
cmp
arpl
adc
movsl
jns
dec
pop
test
xchg
je
imul
sbb
sahf
mov
sbb
push
pop
or
lcall
pop
cs
daa
idivl
xchg
std
rcr
sbb
lahf
test
xor
jnp
jo
inc
cwtl
and
and
sahf
push
pop
cmpsl
sbb
mov
mov
jl
push
out
mov
out
xchg
inc
leave
cmpsl
shl
cmp
xor
scas
or
xor
adc
test
insl
jnp
aas
es
into
adc
ret
in
scas
cmp
test
mov
sub
or
push
or
jo
shl
xchg
push
mov
pusha
xor
pop
mov
mov
pop
stos
pop
sbb
pop
lret
mov
mov
xlat
jecxz
in
inc
mov
aaa
or
jnp
fdivl
sti
fstl
fldenv
loope
sti
shrb
mov
fisttps
and
aam
pop
mov
mov
sbb
ficomps
rcr
je
sarl
sbb
push
mov
or
aas
push
adc
adc
andl
pop
push
push
cs
call
cmp
dec
fldcw
xor
gs
movsl
sub
mov
out
mov
pop
jae
sub
push
ret
pop
jmp
xchg
jl
cmp
dec
mov
lock
xor
divl
push
pop
xchg
cmp
mov
or
push
mov
push
stc
js
stos
call
xchg
movsb
or
imul
jb
jnp
pop
xor
addr16
sarb
jecxz
cwtl
into
mov
mov
jge
add
or
xor
mov
loop
inc
mov
mov
xor
push
xchg
fdivl
adc
imulb
push
xor
rclb
push
push
cs
inc
sbb
cmpsb
test
dec
es
repnz
mov
js
in
test
mov
pop
insb
push
xor
mov
adc
xor
mov
outsb
test
rcrl
push
inc
pop
inc
and
nop
xlat
popf
xchg
jns
nop
mov
cld
mov
pop
dec
push
lods
inc
adc
aad
pop
popa
es
or
sub
mov
fimull
std
inc
lods
test
mov
xor
clc
test
and
push
mov
loopne
imul
fucomi
lahf
and
pusha
outsb
mov
ja
loopne
xor
sti
sbb
pop
lcall
jg
in
push
or
mov
push
das
in
ret
es
mov
and
add
mov
and
pop
cltd
xchg
add
icebp
sbb
ss
mov
adc
lahf
cltd
sbb
inc
lods
nop
and
adc
sub
mov
mov
and
or
mov
and
pop
rcl
out
frstor
jecxz
sub
mov
jnp
jecxz
in
mov
dec
dec
cmp
shlb
dec
inc
xor
xchg
jnp
bnd
lret
add
push
cmpl
aas
mov
lock
jle
lods
icebp
lock
pusha
repz
fimuls
cmp
fsubrs
in
into
movlps
and
dec
push
rcrb
fldcw
pop
stos
mov
sub
popf
and
jl
lret
std
mov
in
aaa
push
rorl
inc
loopne
cmp
int
mov
popl
cmc
bound
mov
lods
stos
mov
les
cmp
pusha
imul
cs
subl
orl
jnp
and
mov
cmpsl
jle
stos
dec
and
sbb
and
cmp
and
push
mov
inc
jns
mov
adc
lcall
mov
mov
mov
jns
jecxz
inc
or
ret
std
inc
loop
mov
movsl
cmpl
ja
testl
in
xchg
sbb
adc
cwtl
and
or
insl
add
adc
nop
lret
imul
or
lret
in
cmp
int
jmp
nop
ret
cs
cli
adc
cmp
outsb
pop
dec
imul
sub
push
inc
dec
dec
jecxz
testb
loopne
or
nop
push
aas
sub
cmc
sbb
and
push
and
mov
cwtl
movsb
data16
icebp
lcall
jge
out
aam
stos
mov
lahf
lcall
sbb
jb
mov
dec
or
add
aas
or
jo
or
dec
clc
cwtl
adc
int3
mov
pop
aaa
mov
or
mov
xchg
fwait
sub
xchg
jl
outsl
dec
je
enter
xchg
and
inc
mov
out
jns
push
mov
add
inc
mov
leave
xchg
dec
insb
repz
jecxz
inc
ret
mov
mov
mov
xlat
sub
jl
and
out
sub
cmp
lea
andb
inc
shrb
and
pop
or
mov
gs
push
sub
dec
xchg
mov
and
pop
fwait
jo
cmc
cmp
ret
mov
gs
or
sbb
sub
dec
or
in
out
in
shrb
dec
dec
ret
sahf
pop
or
push
lds
pop
xchg
dec
in
xchg
lret
stos
adc
pop
jle
and
sbb
pop
es
mov
lock
adc
mov
jo
xorb
into
insl
dec
out
imul
stos
into
scas
fs
test
add
cmc
fldenv
cmp
cmp
inc
int3
jp
fsubl
mov
xchg
les
bound
cmpsl
mov
shr
fstps
adc
mov
adc
popf
jge
in
iret
mov
aad
push
sbb
mov
push
imul
jnp
jl
test
into
fsubr
mov
rcrb
or
imul
jae
cmp
and
mov
xor
aad
jecxz
stos
mov
sub
test
popf
dec
test
into
cmc
mov
lock
into
fidivl
mov
sti
cmp
xor
mov
int
or
push
movsl
mov
rcrl
gs
mov
sbb
addr16
stos
cmp
fstpl
ja
jl
into
or
add
test
repz
sbb
lods
dec
dec
ja
lea
fwait
int3
dec
jmp
xchg
shll
dec
lods
jno
cmp
jp
cvtps2pd
add
adc
repnz
xor
mov
or
addr16
jge
aad
setne
out
or
adc
push
xchg
sbb
pusha
ss
outsl
sti
stos
mov
lret
shlb
mov
movsb
or
je
cmc
mov
les
aaa
xchg
test
jnp
xor
sarb
in
roll
adc
jmp
pop
inc
xchg
pop
sub
dec
pop
data16
loop
mov
adc
ds
cltd
xchg
inc
insl
mov
and
ljmp
xchg
xchg
int3
xchg
and
mov
js
and
enter
out
mov
fsub
cld
in
decb
add
or
pop
push
push
mov
lds
pop
mov
int3
adc
mov
push
sbb
push
add
insb
xor
jl
ficoms
addl
fdivrl
mov
dec
or
or
leave
mov
lods
cli
aam
testb
xchg
imul
outsb
inc
push
lahf
and
xchg
mov
loop
dec
xor
cmpsb
fnstsw
ljmp
xor
fmulp
dec
add
push
mov
push
clc
sbb
add
lods
in
or
mov
add
lds
sub
xchg
stc
test
push
push
lods
mov
sub
xor
inc
mov
pop
mov
push
inc
jae
test
xchg
adc
shl
inc
pop
in
in
ja
or
loop
rclb
or
xor
pop
push
shlb
add
add
xchg
scas
fnsave
out
jbe
test
xor
mov
insl
sbb
add
lret
inc
imul
mov
shrl
data16
add
fwait
test
or
fistpll
imul
pop
sbb
cmp
sbb
mov
mov
outsb
lea
stc
dec
push
leave
pop
pop
iret
push
andl
and
inc
pop
or
shr
popf
fdivrs
xor
pop
cmp
inc
mov
and
sub
neg
lcall
xor
inc
nop
pop
jecxz
jae
cmp
xchg
pop
pop
adcb
jle
sub
fstl
add
mov
adc
and
popa
pop
popf
sub
or
pop
pushf
inc
mov
lock
sbb
cmp
mov
cmp
dec
sbbb
ret
jmp
dec
lret
mov
pop
inc
cmp
mov
iret
mov
sbb
js
std
jae
test
lcall
mov
out
mov
add
test
out
cmp
scas
or
adc
cmpsl
push
sbb
test
stos
mov
pop
js
jecxz
ds
mov
cmp
jmp
mov
mov
mov
ds
imul
data16
cwtl
test
test
lea
insb
xorl
lcall
mov
and
shlb
xor
sub
mov
sbb
gs
ds
fdivl
or
add
pop
std
push
add
or
inc
mov
xor
add
cmp
fidivs
fwait
imull
roll
sbb
pop
out
imul
cmp
inc
bound
adc
jmp
jbe
adc
mov
les
xchg
cmp
in
roll
out
cmpb
mov
out
xor
dec
aad
xor
fdivr
mov
loopne
shll
mov
push
or
sbb
lds
add
sbb
clc
stos
mov
add
mov
xor
mov
mov
and
daa
movsl
stc
fistl
cmc
imul
cwtl
insb
or
xor
push
pop
xlat
mov
adc
mov
aam
scas
pop
and
xor
fisubl
dec
ljmp
js
fstpl
mov
dec
dec
adc
jl
inc
std
mov
or
push
push
lods
jns
sub
mov
cmp
ja
inc
icebp
outsl
jbe
loope
pop
mov
mov
test
ret
pop
push
xlat
repnz
les
test
sbb
movsb
std
insb
sarl
cmpsb
jmp
mov
mov
and
cwtl
jbe
xlat
filds
inc
fnsave
imul
cmp
jle
add
lods
dec
dec
add
lods
mov
inc
mov
push
pop
out
pop
sbb
pop
xchg
hlt
sarl
pop
inc
data16
fsubs
push
cmpsl
imul
js
repz
push
movl
rcll
mov
add
addr16
fidivs
cld
lcall
sti
push
mov
loop
pop
sub
pop
call
in
fs
test
sub
test
jnp
jae,pn
push
or
mov
jl
adc
mov
xor
sti
lods
pop
loopne
out
mul
es
daa
gs
stc
push
adc
addb
dec
jle
and
sbb
add
data16
fwait
in
jmp
and
and
ja
repnz
cmp
sarl
adc
add
or
mov
lds
sbb
mov
pop
jno
test
femms
movsb
ret
shl
mov
or
jbe
jmp
mov
aaa
add
inc
push
lret
sbb
movsl
dec
lock
popf
and
out
pop
mov
sarb
xchg
mov
mov
dec
in
cmp
xor
jle
jae
fsubrl
out
sub
in
jb
and
movsb
pop
mov
insl
jo
pop
fcom
adc
mov
aam
add
cmpsl
sub
sub
dec
pop
int
arpl
les
cmpw
mov
xchg
xchg
shr
mov
dec
sbb
les
jg
out
adcb
sub
sbb
das
and
pop
out
movsl
cld
rol
inc
adc
scas
jp
or
add
xchg
push
mov
or
mov
dec
cmp
shr
std
inc
mov
or
mov
rcll
mov
xchg
hlt
test
mov
pop
cmpsb
insb
mulb
fwait
push
int
adc
or
mov
xchg
mov
imul
ds
pop
rclb
dec
dec
or
adc
in
mov
jbe
push
or
mov
cmpsl
nop
inc
xchg
xchg
sbb
jne
jg
or
xor
inc
sbb
push
cwtl
adc
mov
data16
sub
push
add
mov
xlat
or
int3
jmp
push
or
mov
je
rol
pop
cmp
je
xor
in
add
and
and
ret
mov
icebp
push
popa
arpl
push
rol
xor
dec
faddl
jnp
xor
cmp
jl
ror
sbbb
pop
push
mov
rolb
mov
or
popa
repnz
inc
mov
stc
jns
push
je
in
in
inc
popa
sub
jp
inc
cmp
xor
mov
leave
add
test
cs
cli
dec
or
xlat
imul
lds
shl
imul
mov
mov
ja
cwtl
cmpl
popf
ja
call
pop
sbb
and
xor
pop
push
inc
pop
dec
repz
cld
ss
mov
les
mov
xchg
xchg
cltd
dec
dec
jbe
add
add
fsubrl
push
mov
dec
cs
xchg
xchg
push
cld
dec
jmp
addb
notl
mov
dec
addr16
iret
mov
in
testb
jne
ss
xor
and
sub
loope
lods
sbb
inc
loopne
adc
fs
scas
jp
flds
std
mov
shlb
jmp
lock
rclb
add
jl
pop
or
jnp
inc
pop
jne
mov
mov
adc
rol
addr16
cmp
mov
sub
cmpl
fimuls
neg
call
pop
mov
into
loopne
adc
sbb
pop
fs
adc
gs
aas
movsl
inc
bound
mov
inc
and
mov
cmpsl
out
xor
rorb
scas
jp
sub
xchg
cmp
or
adc
cmp
jbe
test
fidivrl
inc
and
call
inc
push
xchg
adc
lds
xor
cmp
and
jle
imul
es
push
stc
sahf
lcall
test
jge
notl
fiaddl
mov
xchg
fcmovnbe
gs
and
xor
clc
xchg
lods
int
xlat
ret
popf
mov
mov
mov
push
mov
stos
sbb
mov
mov
push
jae
mov
pop
enter
rcrb
pcmpeqd
sub
and
mov
sahf
sub
dec
mov
lcall
mov
insl
add
lret
pop
test
ja
outsb
pop
sbb
fs
scas
or
shrb
addr16
adc
inc
int
out
js
pop
lods
sub
cmpsb
cmc
or
es
or
testb
cmp
dec
popa
inc
rol
dec
daa
scas
rcrl
leave
pop
sub
je
push
pusha
xchg
rcrl
pop
mov
pusha
out
stos
fistps
fbld
dec
or
jae
cmp
outsl
add
in
inc
jne
dec
adc
push
lret
lods
adc
out
xlat
out
mov
mov
lock
lahf
sbb
arpl
fists
testl
sbb
call
xor
enter
cmp
repz
adc
jne
xor
fisubs
clc
sbb
and
adc
fisttps
loope
adc
pop
pusha
sbb
dec
sbb
add
scas
shlb
adc
scas
cmp
push
icebp
into
lock
xorl
shr
mov
or
add
fxch
stos
rorb
push
mov
movsl
bound
pop
and
jmp
nop
xchg
add
scas
xlat
adc
xor
xchg
bound
lcall
pop
xchg
pop
mov
jmp
xor
and
leave
cmc
aas
dec
les
imul
out
sub
sub
imul
mov
jecxz
adc
ss
shll
dec
inc
inc
ret
jecxz
jne
xchg
test
sub
sub
pop
stos
shlb
jl
lret
inc
ret
pusha
jmp
mov
fimuls
jbe
mov
jecxz
mov
popl
xlat
fisttps
fisttps
sar
pop
adc
cmpsb
int
cmpl
std
and
dec
push
ljmp
mov
jnp
je
lahf
insb
inc
loop
cmp
rclb
fucomi
mov
pushf
jo
and
test
jmp
sub
and
mov
jae
jnp
movsb
cwtl
or
scas
gs
xchg
sub
dec
sbb
add
mov
jle,pn
cmpl
mov
test
mov
movsb
adc
jbe
inc
fadds
add
bnd
lods
rcrb
mov
mov
adc
xor
sbb
mov
pop
dec
or
and
ret
lods
std
iret
push
cltd
jmp
test
add
ss
inc
xor
insl
pusha
subb
and
stos
xor
sbb
bnd
popf
cwtl
jb
adc
and
mov
sub
adc
nop
cmp
inc
adc
std
das
sub
inc
repz
lcall
lcall
jp
lea
lcall
cltd
jg
push
stc
jbe
xchg
xchg
push
push
ljmp
cwtl
inc
xchg
push
dec
mulb
test
scas
or
icebp
je
pop
aaa
push
js
std
sahf
pop
rcll
and
xchg
add
pop
add
cmp
and
dec
mov
rorb
enter
out
push
mov
aaa
dec
and
cmpsb
jno
into
cmp
xchg
insl
xor
push
in
iret
out
sbb
xchg
inc
push
ja
int3
js
pop
inc
out
daa
mov
mov
inc
mov
in
insb
inc
std
and
daa
xchg
xchg
jp
xor
xorb
mov
add
dec
dec
pop
dec
ljmp
push
xchg
cmp
aad
sub
cmp
in
out
xor
xchg
ret
jbe
xchg
stc
in
ja
adc
lods
sbb
mov
es
fwait
cld
jno
or
push
in
xchg
ss
inc
loop
test
dec
nop
push
jno
mov
stos
cmp
mov
push
inc
es
push
dec
jge
pusha
mov
adc
loop
std
leave
popa
clc
xchg
or
jl
pop
push
subl
inc
pop
push
pop
and
dec
xor
pop
scas
in
call
shll
dec
shrl
in
jb
nop
pop
ja
push
push
insl
push
sub
out
sub
shl
push
vunpckhpd
sub
adc
jmp
push
sbb
push
mov
add
sar
fadds
into
pop
bound
dec
and
add
ja
xchg
jb
loopne
and
push
mov
fs
mov
inc
scas
mov
push
fwait
insl
loope
inc
adc
pop
and
dec
nop
mov
pushf
sti
xchg
pop
btr
les
or
into
mov
int3
or
xchg
jmp
es
jnp
jle
stos
push
adc
stc
cmpsb
sbb
icebp
ds
js
cltd
push
jbe
in
lea
pushf
jecxz
rep
leave
jae
retw
lock
shlb
add
clc
adc
cmp
jp
rorl
test
fbstp
subl
mov
push
jnp
push
fstps
popa
jl
jmp
cmp
in
cmpsl
add
dec
fisubl
jecxz
cmp
aad
dec
in
out
xor
ret
inc
pop
lret
mov
xor
or
ja
dec
mov
out
and
mov
in
xchg
push
ss
test
jne
inc
das
mov
pop
jmp
cmp
dec
daa
std
inc
divl
push
xchg
pop
add
adc
mov
scas
dec
xor
rorl
mov
fcomp
dec
mov
sub
adc
inc
xchg
or
xchg
aam
hlt
sbb
or
mov
mov
inc
dec
data16
cmp
adc
inc
ljmp
mov
ss
mov
aam
jns
ljmp
or
sbb
pop
cs
add
loop
ret
es
mov
fsubs
xchg
outsb
fcomi
popf
icebp
dec
cltd
xor
aaa
add
test
sbb
scas
lahf
sub
and
enter
pop
cmp
fldt
ret
pop
lret
ret
aaa
mov
call
je
shl
adc
int3
iret
lds
mov
fdivrl
push
jmp
and
rcrl
out
mov
add
add
sub
popfw
outsl
jo
sub
fimull
mov
gs
lods
pushf
add
jne
int3
xor
sub
mov
xchg
jbe
lods
fldenv
std
and
cltd
int
xchg
jl
das
push
sub
sub
cwtl
js
sbb
insb
fstpt
pop
cmp
in
test
loope
ljmp
ret
pop
cmc
inc
jne
xor
jnp
aad
pushf
movsl
add
scas
inc
gs
ljmp
push
xor
shlb
addr16
movsb
cld
mov
jecxz
or
out
addr16
jp
xchg
movb
cmp
cmp
bswap
inc
clc
imul
roll
or
addl
loop
mov
je
in
fcmovnbe
xchg
in
mov
sub
arpl
ret
push
mov
or
xchg
sbb
jbe
dec
pop
subb
data16
roll
shrl
mov
popf
lret
mov
xchg
sti
fisttpll
fsubrl
and
pop
sub
or
dec
mov
jmp
setb
dec
ret
je
addr16
loope
mov
stos
sub
pop
sbb
sarl
xor
sub
jno
mov
in
cmp
shll
inc
test
scas
aad
push
mov
adc
outsl
dec
lcall
enter
and
ljmp
add
ss
and
mov
add
in
mov
cwtl
nop
and
xor
inc
out
or
jns
push
xchg
sub
xchg
call
outsl
mov
insb
in
in
mov
jmp
lcall
mov
das
enter
add
and
push
xchg
ss
dec
add
in
bswap
dec
or
aam
mov
mov
xchg
or
inc
dec
mov
cmovbe
or
xchg
pushf
fwait
or
int
add
push
je
pusha
push
add
and
xor
cwtl
or
jo
fldt
ljmp
out
inc
mov
dec
adc
or
lds
int
pop
sbb
rcrl
mov
pop
in
sub
rcr
push
aad
xor
push
into
in
test
sbb
cmp
insl
test
mov
pop
aaa
cmpsb
cmp
pop
xorl
fdivrl
int
insb
scas
mov
push
into
lret
pop
int3
in
arpl
jo
icebp
cmpsl
insl
adc
cmpsl
mov
mov
ja
pushf
inc
ss
je
mov
les
mov
fsubl
mov
pop
jl
jnp
add
pop
or
popa
ds
xchg
mov
cmp
sub
std
xchg
les
mov
pop
mov
cmp
aas
jns
iret
clc
ds
out
ficoml
sub
es
cmp
shrb
dec
fs
mov
sub
ss
push
lds
shr
push
cltd
outsl
pushf
cmpsb
addl
or
lods
jne
mov
shll
xlat
std
cmp
dec
mov
add
arpl
paddb
mov
jmp
icebp
js
pop
arpl
push
es
and
movsb
in
bound
std
fwait
test
push
lea
dec
mov
jmp
push
sub
push
xor
frstor
xlat
mov
mov
add
dec
cwtl
mov
xor
push
inc
loop
sbb
jo
sarb
scas
mov
mov
mov
movsb
or
in
jmp
xchg
imul
cld
mov
xor
mov
mov
dec
and
imul
jnp
outsl
add
jg
jmp
adc
jno
adc
mov
xorl
or
mov
add
and
pusha
lret
rorl
cmc
imul
stos
cmp
shll
mov
scas
movsl
testb
jnp
pop
xchg
inc
jnp
popa
add
movsl
xchg
inc
mov
pop
add
dec
ficoml
jle
sub
mov
daa
and
cmpsl
pushf
fldcw
lret
jecxz
lcall
outsl
popf
repnz
xor
pop
jns
loope
pusha
std
sub
std
testl
jns
mov
cmp
jb
fisttpll
clts
mov
pop
sbb
lahf
pop
mov
mov
js
scas
xchg
xchg
mov
and
int3
fdiv
mov
sahf
xchg
in
je
sarb
mov
stos
mov
les
or
aam
clc
sar
cld
sbb
pop
pop
dec
int
mov
fistl
ja
mov
in
cmpsl
shlb
mov
cmp
stos
loopne
and
and
mov
lahf
out
inc
fadd
inc
jl
push
or
divb
out
or
rclb
mov
popa
and
movsb
sub
inc
pop
xchg
rorl
mov
icebp
inc
cli
ret
cltd
dec
pop
call
xchg
imul
rol
fwait
xchg
repz
jge
scas
cmp
aaa
movsb
in
insl
inc
ret
out
das
psubd
into
ljmp
in
std
mov
orb
mov
xchg
and
mov
out
xor
lahf
pop
mov
hlt
imul
sbb
adc
mov
push
test
inc
in
dec
xchg
add
and
fidivl
call
push
sti
adc
in
nop
stos
lret
mov
mov
stc
jecxz
ljmp
jle
cld
dec
inc
insl
jp
sub
or
test
pop
jne,pt
inc
add
xor
xchg
add
pop
push
jle
addr16
fistpll
cmc
cmp
lret
les
or
mov
push
cmpsb
stos
jmp
out
lds
ror
fldcw
gs
movsb
movsb
xchg
lcall
cld
jecxz
xchg
push
aaa
sub
or
les
lahf
imul
test
shll
icebp
jns
xor
loope
xchg
mov
imulb
push
push
cmpl
psadbw
fsubrs
mov
shll
adc
cmp
xchg
fcmovne
push
pop
mov
test
imul
sbb
jg
jno
xchg
adc
inc
or
xchg
push
push
push
mov
pop
mov
fcmove
ret
int
xor
mov
inc
xchg
pop
paddsw
movsl
push
add
fwait
mov
aas
mov
loopne
mov
stos
jmp
int
sti
sbb
test
popa
scas
fistl
xchg
lock
call
pop
xbegin
jo
pop
sub
xlat
adc
and
mov
js
or
push
xchg
mov
das
orl
imul
mov
enter
xor
mov
rcll
lret
mov
xchg
shr
pop
out
jp
sub
aad
out
ds
push
stos
inc
pusha
xchg
adc
xchg
es
push
aam
mov
fstps
scas
ljmp
sbb
mov
adc
mov
jae
popf
mov
xchg
ret
leave
sub
bound
xchg
dec
xor
push
adc
ficoms
mov
fidivrs
cltd
nop
lret
fimull
push
sbb
pop
shl
pusha
movsl
dec
sub
xor
lock
mov
xchg
xchg
adc
dec
mov
lahf
bound
inc
mov
add
fwait
in
addr16
jecxz
mov
mov
xor
lock
and
and
or
xor
inc
mov
push
cld
sahf
jns
mov
mov
enter
xchg
push
mov
aad
jne
jb
pop
pop
push
and
cmpsl
lea
dec
mov
fcmovne
push
pop
xor
scas
pop
inc
cmp
add
push
out
stos
mov
jge
mov
ss
loope
cltd
push
mov
mov
add
push
jae
cmpsb
mov
adc
xchg
sbb
loope
out
mov
dec
sbb
jmp
dec
les
cmp
pop
push
push
push
lods
push
pop
sbb
adc
adc
pop
jnp
mov
mov
les
leave
loope
das
in
push
cmp
andb
ljmp
ret
mov
icebp
xchg
in
adc
inc
lret
aas
mov
std
aam
inc
pop
bound
fdiv
daa
dec
inc
and
ss
jnp
dec
rol
pop
leave
stc
adc
xor
iret
stos
pop
ss
cli
out
lds
cs
push
fmuls
ljmp
jp
ret
ret
rcrb
xchg
pop
ja
outsl
inc
jge
xor
stos
dec
jno
sbb
pop
outsl
sti
xlat
mov
push
add
xchg
dec
in
clc
add
cmc
jo
xchg
jno
mov
test
pop
es
loop
add
daa
pop
inc
push
adc
sub
mov
sbb
jge
mulb
es
sub
mov
sbb
fcom
adc
cmp
fimull
add
add
add
xor
lds
sahf
sti
dec
out
mov
pop
test
adc
stos
in
movsb
mov
inc
push
mov
leave
ja
mov
cmp
fisttpl
sub
insl
mov
or
add
repz
ret
negb
test
cmp
or
es
fistpl
outsb
push
xchg
movsl
inc
xchg
fldl
ds
notb
adc
je
and
cs
test
push
mov
pop
jp
cmc
aam
das
inc
inc
jns
ret
inc
aaa
mov
push
lock
push
inc
xchg
mov
jbe
rol
mov
sub
lahf
adcb
ja
ret
xchg
xor
or
cmpsb
imul
dec
mov
cmp
ja
adc
sub
mov
push
jbe
imul
mov
adc
mov
fldenv
je
repz
addr16
lds
std
sub
and
leave
fcomps
adc
aam
mov
pushf
xchg
jle
stc
data16
pop
inc
mov
loop
aad
xchg
ds
push
xor
push
sti
cmp
xor
sbb
into
pop
sub
mov
pop
push
scas
cld
test
loopne
xchg
adc
popf
popf
or
pop
push
loop
lea
and
xor
mov
lret
mov
or
fstpt
adc
jg
fwait
and
mov
mov
sbb
push
and
inc
and
pop
and
lret
lods
scas
call
movsb
cmpsb
lret
pop
cwtl
in
mov
test
sahf
mov
sub
push
mov
push
out
mov
icebp
xor
jnp,pt
or
sbb
iret
push
stc
adcl
pushf
out
repz
or
cld
test
stos
hlt
cmp
cmp
mov
pop
sub
push
loop
sbb
dec
jo
mov
sub
ljmp
pop
scas
mov
mov
or
lcall
test
rol
adc
insb
cmp
call
push
scas
out
lds
test
sub
pop
imul
push
pop
sbb
xor
jbe
dec
aas
xor
push
mov
sti
sarb
cltd
pusha
cmp
jecxz
push
mov
les
xchg
insl
lcall
push
jecxz
xchg
push
inc
pop
xchg
add
push
push
int3
or
mov
mov
stos
nop
adc
pop
sub
pusha
jl
stos
je
inc
push
stc
xor
leave
ret
scas
dec
xchg
mov
jnp
pop
cltd
ja
xchg
dec
inc
outsl
mov
loop
xchg
ds
xchg
inc
or
xor
push
inc
pushf
sub
mov
add
and
sub
pop
cmpsb
mov
rcr
xchg
mov
test
repz
dec
mov
sbbl
loop
cmc
xchg
scas
and
pop
rol
jmp
pop
sub
push
lcall
mov
js
mov
imul
sub
and
cs
mov
push
pop
mov
mov
xchg
nop
and
out
pop
std
pop
adc
or
lock
jmp
testb
cmp
dec
mov
daa
mov
pop
dec
stc
mov
shll
jp
out
stos
cmp
xchg
sub
dec
insl
ret
xor
iret
ljmp
jl
xlat
sub
pop
adc
sub
ret
lret
pop
arpl
add
or
movsb
pop
das
push
push
dec
jg
fucom
outsl
and
push
cmp
mov
push
test
dec
fdecstp
fsubl
sbb
mov
scas
outsb
out
push
in
lods
popf
adc
mov
repnz
outsb
dec
pfcmpeq
push
xchg
inc
add
or
movl
repz
fstpl
pop
mov
mov
jl
jl
and
jge,pt
mov
mov
cs
hlt
xor
or
call
xchg
mov
cmp
pop
out
scas
shll
imul
cs
sub
xchg
int3
lahf
sarb
push
stc
adc
and
pop
lock
bound
sub
add
pop
out
sbb
xor
mov
cmp
or
fsts
lock
cmc
std
in
and
sahf
xorb
jmp
outsl
pop
mov
xchg
pop
fadd
and
iret
jno
movsl
jge
dec
cmpl
fcompl
inc
pop
pop
xor
mov
sbb
popf
add
das
pop
rcr
mov
or
mov
cmp
je
adc
jmp
jl
lods
adc
sbb
xor
jmp
inc
mov
daa
mov
mov
insb
into
xlat
add
iret
lret
lods
and
dec
cmp
add
xchg
jp
movsl
ret
lock
pop
and
jp
aas
mov
pop
add
jge
ret
pop
adc
gs
cmpsl
test
aad
adcl
jle
push
jno
mov
xor
stc
push
pushf
mov
mov
aad
dec
cltd
xorb
jbe
jge
pop
mov
flds
test
mov
push
jmp
xchg
bound
xchg
iret
push
mov
lahf
cmc
dec
je
fs
push
and
adc
sub
push
or
dec
pop
insb
out
stc
sarl
fidivrs
push
mov
adc
movsb
mov
js
popf
je
ds
jb
adc
inc
mov
int3
jl
push
xchg
cmp
mov
jecxz
pop
sahf
ja
jae
dec
test
int
push
dec
dec
sub
fwait
mov
fimull
push
jmp
ret
imul
outsl
lahf
pop
cs
sbb
data16
sub
pop
scas
mov
sbb
push
sub
push
sub
pop
int
xchg
imull
ja
add
jge
sbb
jnp
jne
pop
ficomps
push
add
int3
repz
pop
sub
adcl
insl
xchg
add
and
or
loopne
popf
ljmp
rorl
mov
sbb
add
mov
mov
addl
fcmovne
fcoml
pop
aad
xchg
fadd
arpl
adc
mov
cmc
repnz
pop
outsb
ret
cmpsb
fwait
mov
shll
jge
cmp
sahf
testb
dec
fcoms
out
jle
outsl
xchg
xchg
daa
imul
scas
orl
inc
das
add
or
jmp
stc
jne
test
aam
lcall
lcall
sbb
sbb
fiadds
add
cmp
into
sub
js
aaa
in
loope
aas
pop
inc
mov
adc
add
cld
sbb
xchg
mov
cmp
pop
jns
adcl
mov
sahf
pushf
incb
fwait
daa
into
fwait
cltd
imul
xchg
cmp
push
lods
mov
xchg
ret
inc
lock
ss
lcall
sti
push
mov
xor
sbb
std
repz
push
cmp
popa
test
adc
xchg
xor
loop
mov
fs
rcrl
xchg
fldenv
mov
jmp
jle
inc
lods
aas
cltd
push
sub
jmp
dec
mov
int
movsb
fstl
aad
or
pusha
ret
xor
ret
in
add
push
or
mov
adc
sbb
into
lock
inc
mov
push
push
sub
push
or
xor
aam
push
inc
cwtl
sub
rcpps
lcall
sbb
cmc
test
into
movsl
mov
adc
scas
sub
das
mov
and
push
out
fwait
jg
jle
orl
cmp
bound
dec
sti
hlt
in
jbe
mov
pop
and
push
cvtps2pi
int3
fucomi
test
icebp
mov
adc
dec
and
mov
push
adc
daa
mov
or
addr16
mov
add
insb
in
and
loop
and
loopne
lcall
xchg
pop
ljmp
mov
fldcw
incb
mov
cmp
inc
dec
and
sahf
fidivl
movsl
fbstp
stos
adc
push
cmp
loopne
movsb
fdivl
scas
mov
fwait
in
pop
aad
nop
mov
lods
inc
jmp
std
or
pop
xor
popa
jmp
sahf
aad
and
fisttps
rcl
subb
orb
std
in
xor
push
mov
jecxz
repz
jmp
and
push
dec
repz
xor
sbb
imul
pop
push
ja
push
dec
mov
pop
dec
test
lods
test
test
dec
mov
mov
add
jns
jl
and
in
xchg
loope
stos
push
cmpsb
lcall
jae
sub
imul
sbb
fidivrl
test
into
jecxz
push
pop
popa
jb
stc
imul
xor
cmc
mov
jmp
adc
pop
sub
test
jp
ds
enter
jl
mov
jo
jns
fisubl
dec
das
cmp
sbb
pop
inc
loop
jnp
outsl
inc
rolb
lds
mov
movl
sti
in
cmp
mov
inc
mov
dec
dec
dec
and
ret
int
lea
dec
pop
inc
jecxz
rorb
inc
jmp
push
mov
loop
out
mov
xchg
mov
mov
cld
aad
pop
jno
aas
mov
push
mov
cmp
and
cld
sbb
mov
sar
bnd
dec
xchg
xchg
outsl
stos
jmp
pop
enter
push
inc
mov
mov
mov
push
repnz
xor
lock
push
das
jmp
pop
clc
cmp
mov
imul
push
adc
in
pop
loopne
cmp
sub
data16
xchg
sbb
push
push
jne
daa
lds
and
js
gs
les
cmpsl
pop
dec
mov
repnz
dec
sahf
scas
loope
in
cmp
mulb
in
lahf
mov
add
inc
jno
add
jmp
push
ret
into
jle
jae
fs
lcall
les
add
outsb
adc
clc
push
push
sahf
pop
out
or
das
xchg
ret
cs
arpl
loop
mov
xchg
push
nop
jmp
dec
xchg
xor
cmp
cli
stc
pop
jp
jo
xor
bound
dec
sti
nop
frstor
xchg
test
outsl
sub
stos
rorl
pop
mov
fbld
daa
adc
stos
cli
or
ret
dec
es
cs
inc
jno
iret
lahf
mov
arpl
jno
cmp
adc
and
xor
js
mov
jae
xor
pop
jmp
stc
loopne
push
fs
jp
scas
lea
lahf
cwtl
xor
cwtl
enter
mov
or
int
adc
cmp
leave
inc
pop
xor
lcall
out
dec
and
lret
or
js
pop
push
or
and
mov
jp
test
mov
enter
jp
test
sub
push
arpl
pop
clc
sbb
jecxz
inc
sub
lods
stos
xchg
sbb
pop
cmpsl
sbb
iret
xor
push
out
lds
lcall
xchg
pop
cwtl
push
shrb
test
jno
adc
je
sbb
out
pop
sub
push
cmp
test
or
mov
mov
xor
inc
sub
gs
cmp
ja
ss
xor
aad
push
xor
and
or
cmpl
mov
stos
inc
sub
aam
jp
ljmp
mov
aas
jg
jb
xchg
pusha
imul
push
inc
push
push
gs
jl
ja
mov
into
push
inc
xor
push
inc
or
fimull
xor
mov
pop
cwtl
pusha
adc
add
xchg
fbstp
adc
icebp
int3
repz
push
test
mov
mov
ds
sbb
stos
mov
jns
ret
add
cmpsl
shll
pop
jo
int3
inc
jl
pop
jg
jmp
stos
imul
jbe
imul
sub
sbb
sub
sub
mov
fcmovu
dec
inc
scas
mov
ljmp
cmp
inc
mov
add
pop
jo
iret
dec
mov
repnz
aas
rcrl
popf
test
adc
cwtl
ror
or
aad
mov
scas
and
adc
jmp
imul
sbb
push
xor
arpl
xchg
insl
test
fstpt
dec
adc
mov
aas
mov
mov
fs
sub
push
mov
mov
divb
add
out
sti
mov
fisubl
test
andb
gs
cmp
mov
adc
gs
pop
or
jl
jmp
sub
and
fwait
sub
popf
out
xchg
xchg
push
sub
fadd
sub
xchg
pusha
lret
in
sub
pop
or
add
stos
repnz
push
imul
out
filds
pop
and
imul
lds
fstpl
add
mov
out
push
test
push
iret
xchg
or
or
test
cmp
xlat
testb
push
cmpsl
pushf
aam
into
ds
or
outsl
add
lods
adc
dec
popf
out
dec
insb
jns
movsb
cwtl
inc
sub
push
movsb
cmpsb
andl
sbbl
xchg
inc
das
mov
shrl
in
jl
mov
pushf
fistps
sbb
xchg
cmp
fiaddl
insl
fistps
ss
lahf
cmp
xor
addr16
fsubrp
sub
out
out
xchg
cmpb
push
xchg
cmp
inc
fnstsw
movsb
shlb
mov
sub
daa
inc
lea
int
and
lods
out
rcrl
test
cmp
sar
cltd
dec
cwtl
andb
aam
in
dec
scas
addr16
jb
out
push
mov
insb
xor
inc
mov
cmp
jmp
jnp
xor
jb
inc
or
movsl
into
jle
in
dec
sub
imul
mov
lods
xchg
repnz
test
int3
dec
aas
hlt
int3
pop
loop
cmp
or
pop
sub
push
iret
mov
sub
jbe
out
sahf
decl
das
lods
lcall
pusha
js
aam
imul
mov
fisubl
pop
mov
imul
xor
cld
imul
push
repnz
ja
fnstenv
mov
cmp
cli
cld
xchg
scas
mov
stos
fstpl
xchg
cmc
push
call
cwtl
insl
sub
pop
fsubs
inc
fmull
int
fwait
cmpsb
pop
repz
dec
add
hlt
enter
fisubrs
pop
jl
sub
fsubrl
fs
cld
xchg
repz
shr
sbb
mov
or
in
notb
test
add
push
cmp
cmpsl
scas
add
dec
lcall
or
jbe
jno
pop
sub
fs
sbb
enter
sbb
into
push
sub
or
inc
xchg
dec
or
fsubrs
lods
push
or
ror
inc
ds
sub
loope
lret
test
cltd
push
mov
dec
mov
ret
xchg
adc
hlt
or
push
cmp
imul
sub
mov
test
jno
in
outsl
push
dec
shlb
or
imul
sub
push
lcall
outsl
jno
lods
xor
pop
inc
sub
inc
xor
in
push
pop
cmp
mov
or
xor
pushf
mov
scas
imul
ret
pop
sub
in
fldl
dec
lds
dec
cld
and
imul
movsl
mov
add
aad
scas
ffreep
xchg
fwait
push
cwtl
xchg
push
ja
std
gs
xor
fisubs
push
adcl
out
add
mov
inc
gs
fimull
inc
inc
mov
push
add
outsl
xor
sarl
aam
xchg
mov
add
mov
cmp
pop
pop
stos
lcall
lods
inc
jg
dec
add
inc
stos
les
adc
test
cld
mov
pop
pushf
rclb
jp
jb
fnstenv
cmp
dec
mov
int3
sub
fwait
mov
test
mov
mov
mov
mov
mov
mov
xor
mov
xchg
mov
mov
dec
pmaxsw
popa
xorb
jge
faddl
add
jge
adc
adc
js
aad
mov
xor
stc
test
loopne
mov
data16
cmpsb
repz
fmuls
xor
push
sbb
fisubl
int
jno
shlb
xor
popf
pop
cmp
shll
test
aam
fstpt
in
fcomps
jbe
mov
pop
in
xchg
loop
stos
xchg
mov
scas
cmp
dec
shr
cld
pushf
icebp
fstl
jge
sahf
sbb
sub
xorl
aam
out
xchg
addl
pop
pop
hlt
gs
pop
xchg
or
xor
lods
or
sub
push
pop
cmp
jo
lods
hlt
xchg
imul
movsl
pop
xchg
xor
iret
mov
mov
mov
fiaddl
dec
or
or
pop
mov
push
fmul
or
jge
xchg
enter
add
mov
int
into
int
mov
mov
mov
inc
popa
cwtl
inc
dec
testl
out
xchg
dec
pop
lcall
mov
daa
xchg
out
mov
inc
test
aam
cmc
insb
clc
cmp
cmpsb
sbb
addl
mulb
loope
cmpsl
mov
fs
dec
sub
fstps
int
inc
lret
aad
push
arpl
xchg
dec
lcall
and
cli
insl
inc
inc
inc
mov
adc
push
repnz
mov
cmp
xchg
call
dec
stc
jecxz
push
adc
lock
mov
and
lret
insb
das
negl
gs
out
cmpl
push
xchg
or
jg
sub
push
jg
pop
mov
out
inc
jo
aam
or
sub
pop
add
jb
fbstp
inc
enter
cld
or
sub
mov
jle
pop
add
dec
insb
call
mov
and
and
mov
js
clc
jbe
popf
into
ret
sti
orb
jb
cli
adc
jmp
fucomip
lods
push
out
test
outsl
and
iret
mov
out
arpl
push
insl
and
inc
dec
push
sbb
bound
add
int3
add
sbb
push
cmp
ror
mov
arpl
push
xlat
pop
pop
cmpsl
mov
gs
ret
dec
movsb
dec
cmp
std
ret
and
int
popa
and
fisubs
jmp
push
mov
out
popa
inc
push
sub
ret
jg
pop
xchg
pop
outsb
shlb
add
dec
popa
iret
fs
inc
sbb
in
push
cli
outsb
sub
dec
sahf
dec
je
pop
dec
std
and
xor
jl
and
ja
adc
or
lock
cmp
push
repz
inc
rorb
popa
sbb
push
rolb
jmp
test
push
out
rcrl
push
cmpsb
gs
test
adc
push
icebp
mov
mov
rcl
stos
pop
push
repz
lret
cmp
rclb
push
repnz
and
popa
mov
push
daa
pop
cmp
call
inc
or
fcompl
popa
mov
subl
dec
add
lods
adc
pop
inc
mov
int
sub
cmp
xchg
aam
pop
popf
jge
inc
insb
push
andb
mov
movsb
inc
out
inc
ret
adc
and
orb
lret
mov
add
adc
sahf
addl
cli
cmp
andl
lret
sbb
or
pop
mulb
or
icebp
loop
movsb
or
push
sub
insb
inc
iret
sbb
jae
mov
scas
mov
aad
and
stos
das
mov
in
ret
jmp
fldt
lds
aas
sbb
out
mov
sub
shl
in
cmpps
or
fistpl
repz
jecxz
jl
sub
lds
in
ljmp
xchg
cld
mov
into
inc
dec
cmp
jo
pop
xor
dec
fdivrp
adc
cmp
mov
imul
ljmp
movsb
dec
sbb
xchg
stos
or
xchg
jle
dec
adcl
lods
push
aam
stos
out
xlat
cmpsl
roll
sbb
inc
cwtl
outsl
mov
test
fimull
cmp
push
pushf
imul
pop
ss
aaa
daa
mov
inc
sti
std
bound
push
xchg
ds
ljmp
sbb
cld
jae
xor
mov
mov
push
mov
mov
jl
hlt
int
int3
stc
dec
or
in
movsb
lds
xchg
jge
pop
dec
ds
push
lea
jmp
jbe
imul
sub
add
shlb
popa
imul
jno
add
jl
mov
and
lcall
imul
subb
lcall
cmpsl
dec
repnz
jb
fwait
enter
sbb
xchg
xor
cmp
stos
aam
enter
cmp
nop
movl
cs
and
pop
pushf
sub
pusha
sbb
or
clc
mov
imul
mov
pop
mov
imul
fs
or
leave
imul
sti
daa
stos
adc
clc
sbb
sti
outsb
push
mov
cmpb
sbb
and
ja
aam
loopne
inc
orb
and
push
fdivl
arpl
ja
push
out
mov
imul
mov
std
mov
dec
out
mov
mov
jg
shlb
loop
adc
push
lods
fimull
cmp
cmp
nop
or
jle
xchg
or
xchg
mov
inc
add
sbb
das
stc
xorl
rcrl
pop
add
lret
or
sub
push
push
jecxz
mov
std
pop
mov
xor
push
cmpsb
or
sbb
sbb
pop
sbb
push
insb
lret
pop
lcall
mov
test
dec
dec
pushf
imul
xor
sbb
out
jg
aas
inc
cld
sub
sub
cmp
scas
adc
mov
stos
int3
mov
pop
test
push
clts
mull
mov
mov
arpl
stc
das
or
inc
xor
jnp
xchg
or
jge
mov
mov
and
push
mov
adc
or
insl
xchg
xchg
decb
xchg
cmpsl
mov
add
inc
mov
sbb
xchg
movsb
sbb
in
enter
mov
add
es
sbb
mov
inc
cs
jmp
call
rorb
arpl
jl
push
hlt
das
fcomp
add
out
mov
inc
mov
sub
cmp
mov
leave
lret
mov
sbb
cmpsb
insl
iret
adc
dec
inc
adc
lds
imul
insb
sub
adc
or
sub
adc
push
push
out
xor
je
fimuls
cld
fs
int
dec
jp
loope
repz
pop
movsl
inc
jns
dec
and
je
dec
shlb
in
into
mov
cltd
cmp
insb
pop
jnp
cmpsl
xchg
jg
mov
inc
xchg
jp
sbb
int
cmp
mov
mov
test
movb
test
cs
mov
sarb
ljmp
mov
dec
nop
push
xchg
and
pop
push
sub
test
call
mov
les
sti
inc
inc
cmc
test
pop
enter
outsb
inc
jle
and
sub
loope
push
add
xor
mov
sub
addr16
ss
lret
sbb
pop
push
ret
mov
aaa
pop
mov
shlb
dec
mov
sub
test
jnp
pop
stc
fdivl
icebp
and
fisttpl
mov
inc
and
ss
repnz
jns
je
xchg
xchg
xchg
sbb
enter
pushf
mov
sub
mov
push
cli
dec
rclb
sub
ret
fadd
xchg
into
imul
je
cltd
push
jbe
mov
jb
adc
jns
insb
add
arpl
fcmovnb
sbb
jge
insl
ja
or
inc
jle
pop
daa
adc
inc
inc
rcll
and
int
xchg
movsb
and
fidivs
inc
jae
inc
lret
lahf
xchg
lds
test
int
mov
repnz
jle
popf
mov
orl
jp
into
popa
mov
adc
ss
imul
jg
in
lret
jno
sub
imul
icebp
imul
xchg
clc
std
out
aaa
cmp
xchg
lret
fwait
sub
fildll
cmpsl
mov
jnp
cmpl
xor
jb
pop
out
push
add
out
out
add
test
mov
or
inc
and
cmp
inc
push
rcll
or
mov
out
fsts
enter
xchg
add
sub
sub
pusha
sbb
or
test
push
fs
aad
lahf
pop
xor
jnp
or
mov
stos
and
nop
fistpll
xchg
mov
jp
cmc
ja
jne
pop
pop
xchg
ljmp
insl
pushf
sbb
push
sbb
imul
add
ljmp
xor
stos
sub
lret
enter
ret
sub
enter
pop
ret
idivl
mov
lahf
popl
and
test
sbb
and
xor
sub
and
push
insb
sbb
arpl
scas
xlat
sub
ds
push
push
dec
jb
or
cwtl
add
insl
leave
loop
int3
push
inc
dec
push
fistps
rorl
cmc
and
stos
and
in
pop
test
inc
mov
pop
push
pop
sub
insl
les
push
push
jns
mov
mov
cmpsb
jl
or
push
adc
mov
and
mov
movsl
stos
insb
je
xchg
pop
xor
inc
in
ret
mov
sub
xchg
xchg
lret
das
int3
jmp
loop
mov
aam
mov
lahf
sbb
ret
xchg
shrl
mov
clc
je
mov
ret
xor
and
popa
fdivs
xor
cmp
ja
sahf
xchg
or
jle
in
inc
cmp
xchg
and
jmp
xor
and
sahf
cmp
lcall
push
mov
sub
mov
mov
mov
ret
shrb
mulb
nop
cmp
inc
fists
sub
int
jae
push
icebp
jecxz
mov
cmp
scas
outsl
push
xchg
sahf
inc
push
shlb
aam
in
push
cmp
xor
mov
xchg
push
sbb
pop
fisubs
les
jnp
mov
loope
mov
sbb
clc
lcall
das
pop
sar
ret
outsl
clc
and
and
leave
mov
pop
daa
cmp
mov
add
pop
fnstcw
sub
cmpsb
sahf
mov
test
ret
shlb
xor
and
pop
fldcw
inc
jg
inc
sub
or
insl
cmc
sub
test
lods
pusha
cld
lods
pop
imul
push
shrb
aas
cmpsb
cmp
mov
dec
pop
inc
dec
ljmp
push
int3
stos
jmp
mov
mov
cmpsb
jmp
or
mov
jl
xchg
addr16
pop
sub
inc
fwait
xchg
jge
js
mull
mov
jl
mov
xor
stc
ret
cmpb
mov
lahf
and
mov
popf
jo,pt
mov
in
shll
and
into
repz
adc
mov
or
push
test
in
ja
ret
jno
xchg
and
push
sbb
insl
xor
out
adc
jbe
xchg
aaa
dec
js
jle
pushf
xlat
mov
push
sbb
aaa
sbb
dec
pop
js
nop
adc
sbb
rolb
ror
cmp
js
push
nop
xchg
dec
fcomi
pop
pop
js
and
cltd
inc
vhaddps
insb
xor
jne
mov
xchg
mov
push
cwtl
xchg
pop
icebp
mov
lcall
int
dec
dec
movsl
xor
sbb
dec
cmp
or
lret
loopne
div
xchg
test
cs
mov
jb
jno
imul
clc
lahf
adc
and
lret
xchg
or
out
inc
fistps
je
xchg
xchg
xchg
daa
dec
dec
js
jae
mov
jo
mov
or
add
sbb
pop
sti
out
pop
cmp
cmc
and
sub
xor
xlat
into
sbb
add
inc
mov
roll
outsl
mov
lret
mov
arpl
xor
repnz
sub
bound
test
movsl
fbld
int
mov
push
and
xchg
fsubrs
int
adc
insl
sbb
add
mov
cmp
mov
pushf
icebp
ljmp
stos
inc
sbb
call
hlt
xor
sbb
xchg
mov
iret
ficoms
test
pop
in
test
cmp
jae
fnstcw
insl
jmp
orb
xchg
cmpsb
mov
and
adc
andb
inc
pop
stos
gs
repnz
jle
xchg
cltd
fadd
fwait
xor
div
enter
and
jno
xchg
xchg
mov
test
dec
dec
sbb
sbb
cmp
call
jne
scas
ficoml
cmp
xor
fcmovbe
sbb
scas
push
imul
xchg
jbe
adc
shr
push
nop
pop
into
out
icebp
xchg
mov
mov
sbb
js
ret
adc
repnz
mov
ljmp
call
cltd
push
in
enter
sbbl
pop
aaa
mov
and
out
jecxz
cli
mov
and
mov
clc
fwait
fwait
lret
das
std
cmp
dec
dec
xor
cmpsl
xlat
call
movsb
mov
xchg
adc
xor
pop
popa
insl
arpl
xchg
test
gs
divb
loopne
inc
addr16
mov
movsb
out
add
ret
bound
stos
push
in
out
or
xor
xchg
push
push
jo
shll
pop
inc
and
xlat
add
loop
js
and
jno
xor
outsb
shr
push
sti
das
xchg
mov
aam
fidivs
sub
in
jl
fwait
movsb
jno
cli
in
inc
dec
xor
int
jl
inc
fiaddl
mov
stos
out
inc
fwait
js
or
les
arpl
pop
aad
jmp
das
xor
shll
fnstcw
mov
out
insb
clc
mov
mov
lcall
xchg
sar
xchg
jne
mov
inc
aas
xlat
add
aas
push
mov
dec
fcomip
loop
repnz
and
adc
aas
stos
orb
aaa
dec
sub
hlt
test
push
fucomp
xchg
lods
pushf
add
or
pop
fsubr
insl
adc
add
jecxz
rorb
adc
popf
push
fwait
hlt
sbb
mov
les
add
shll
push
and
mov
insb
dec
das
mov
shlb
jmp
push
or
not
in
loope
mov
aas
sub
fcomps
mov
out
xor
fisttps
mov
into
inc
and
enter
movb
lock
adc
xlat
xor
dec
test
les
pop
js,pt
jle
dec
outsl
int
sahf
jecxz
rclb
ljmp
mov
xchg
dec
jno
adc
xor
add
xchg
add
and
rcl
cmp
lret
push
andb
push
lcall
cmp
and
stc
push
test
pusha
movsl
scas
fstpl
sahf
imul
fxch
xchg
push
shr
shlb
push
jbe
hlt
popa
or
pushf
dec
sub
or
stc
aad
shrb
bound
mov
dec
jp
push
es
jnp
xor
cmc
jo
push
je
push
and
subb
pop
jmp
push
cmp
fidivrs
insb
and
cmp
and
adc
idivb
and
inc
inc
std
addr16
dec
pop
inc
insb
xor
sub
sbbb
loope
inc
lcall
inc
xorb
adc
push
pushf
xchg
stc
in
push
roll
insl
mov
sub
jge
jle
lods
lahf
jmp
xchg
mov
sahf
and
rcr
sti
arpl
push
enter
dec
popa
sbb
or
adc
aam
inc
imul
mov
cmp
mov
fwait
push
jae
push
mov
inc
xor
addr16
mov
adc
clc
mov
push
cmc
imul
or
mov
xchg
out
jl
xchg
mov
cmp
cli
scas
cmp
lods
mov
loope
inc
outsl
sbb
ret
xchg
movsb
sub
repnz
insl
cmp
mov
in
pop
or
dec
lods
jo
jo
aaa
adc
adc
xor
into
pop
sub
je
lods
jns
je
popa
mov
inc
push
repz
and
insb
leave
mov
xor
out
push
fs
xor
fmulp
arpl
imul
pop
in
adc
leave
push
pop
jg
out
and
jb
mov
inc
jbe
fs
popa
push
or
add
cmpsl
push
add
sar
sar
pushf
mov
xchg
aaa
enter
in
and
shlb
and
pop
sub
jle
in
cmpsl
xchg
or
inc
sti
mov
movsl
movsb
sub
hlt
jb
jno
ret
pop
das
mov
cs
aas
xchg
inc
insb
add
stc
or
aaa
dec
les
sub
and
ror
push
push
push
ljmp
mov
jbe
lods
add
mov
sbb
add
and
lret
fcomps
inc
mov
and
test
divl
sbb
stc
jmp
ficomps
inc
cwtl
xchg
cmpsb
lds
repnz
fs
addr16
push
push
sub
arpl
stos
pop
lock
pop
xchg
inc
push
adc
loopne
or
adc
imul
inc
cmp
or
push
out
adc
repz
scas
das
fisttpll
push
sub
ss
rclb
repz
pop
sub
push
push
and
js
clc
call
pop
out
lea
hlt
and
push
jmp
push
jp
jo
push
and
fcmovne
fdivrl
pop
dec
icebp
test
mov
stos
dec
xchg
cmp
mov
mov
scas
lea
nop
ja
mov
out
ret
das
scas
out
int
in
lcall
cmpsb
sub
loopne
repz
pop
lods
inc
frstor
push
test
jbe
or
adc
sbbl
fdivrs
js
adc
mov
sbb
sub
andl
hlt
adc
adc
adc
cmp
sbb
push
and
adc
sbb
pop
gs
mov
push
scas
dec
dec
sub
stos
xchg
mov
aaa
or
jmp
imul
test
jl
xchg
dec
xor
dec
jnp
xor
dec
and
mov
fnstcw
pushl
cmp
movsl
mov
mov
scas
cmp
cli
popf
mov
push
arpl
into
int
and
rorl
xchg
test
adc
sti
add
cmpl
andb
push
ja
iret
push
lods
push
in
push
adc
push
and
mov
pushw
xchg
test
insb
dec
and
mov
scas
shlb
push
push
mov
int
xor
cmpsl
add
xchg
enter
mov
sbb
pop
jo
mov
aaa
pop
std
jl
fbld
adc
mov
adc
adc
lods
mov
nop
out
mov
add
cmp
stos
jcxz
loopne
add
push
popf
jns
stc
fiaddl
or
mov
aam
sbb
pop
mov
lret
call
aad
dec
pop
mov
ret
movsl
in
data16
cmpsl
f2xm1
inc
inc
cmp
cld
andl
cmp
pop
lds
test
jo
jbe
mov
and
sub
push
jl
xchg
in
std
and
pop
mov
mov
jle
sub
sarl
xchg
mov
xchg
dec
mov
nop/reserved
ficompl
mov
adc
ja
inc
push
pop
icebp
push
and
sahf
or
pop
arpl
push
jmp
loop
cwtl
les
push
pop
cmpsl
mov
mov
mov
sbb
jmp
mov
cmp
sub
lock
dec
jne
jnp
push
out
pusha
push
inc
adc
cmp
jno
lds
cmp
imul
xor
sbb
push
push
pop
pop
or
cli
cmpl
mov
sbb
fsubl
ret
xor
mov
sahf
mov
test
pop
rorb
mov
cwtl
xchg
sbb
mov
pop
aaa
jne
push
xor
stos
popfw
mov
mov
stc
jge
repz
sub
std
and
pop
into
mov
and
ret
mov
rorb
scas
sahf
iret
sti
sbb
xchg
pop
sarl
mov
jle
mov
nop
lods
cmp
mov
mov
ja
out
dec
pop
push
sarb
sbb
mov
push
cmp
mov
out
neg
inc
fstpt
sbb
push
popf
mov
fstpl
fstpl
adc
mov
pop
and
js
mov
fwait
arpl
addl
mov
inc
lock
cwtl
je
into
sub
pop
pusha
mov
mov
xor
push
jno
cwtl
std
repz
cs
pop
aaa
rcrl
cmp
jnp
mov
mov
inc
mov
inc
gs
test
xor
push
insb
imul
testb
pop
jmp
sub
mov
pop
cmp
add
and
addb
mov
arpl
stos
fs
inc
pop
int3
xorb
loope
sbb
push
shrl
jmp
pop
adc
mov
or
dec
and
lret
dec
into
aam
mov
and
iret
sub
xchg
sub
push
gs
xchg
addl
inc
stos
in
jle
and
jbe
lret
jecxz
sbb
repnz
xchg
cltd
mov
adc
push
outsl
pop
fs
ss
hlt
mov
lcall
mov
icebp
cmp
cmp
jae
mov
xor
sarb
mov
addr16
add
les
sbbb
pop
hlt
inc
jl
repz
or
xchg
cld
lret
cmp
out
pop
pop
outsl
in
cmp
mov
nop
sbb
test
into
and
test
mov
repz
loope
test
mov
lds
cmp
jecxz
cmpsl
add
pop
dec
lods
pop
cltd
xchg
test
shrl
loope
ds
out
sti
js
mov
sub
sbb
sub
cwtl
cmp
cli
call
arpl
inc
push
inc
fldl
mov
adc
stos
sbb
outsb
in
mov
push
or
dec
mov
inc
cli
repnz
data16
cmp
pop
mov
out
lods
mov
popf
or
and
or
pusha
leave
sub
mov
dec
and
mov
sarb
inc
sbb
cld
cli
pop
je
mov
xchg
stos
jl
lods
push
sub
cmp
sub
jmp
fnstcw
in
and
shrl
add
mov
cmpb
imull
rcll
daa
sub
jb
cmp
loop
iret
xor
xchg
mov
clc
sub
mov
testb
xchg
lret
or
pop
shrl
jb
dec
cmp
popf
sahf
movsb
push
or
sbb
lret
shld
xor
mov
aad
inc
std
mov
fwait
mov
jno
mov
mov
out
sbb
push
cmp
jb
cltd
testl
es
jecxz
rcr
xchg
adc
inc
test
or
shlb
adc
push
adc
pop
and
ss
pop
xlat
sub
dec
sar
shl
sub
nop
mov
mov
test
loop
mull
clc
sub
shlb
pop
cmp
adc
dec
mov
mov
test
cmpsl
mov
or
dec
xor
mov
add
cld
mov
sarb
nop
pminsw
int3
add
xchg
inc
xor
out
dec
movsl
fistps
jno
bound
ss
cwtl
and
fcom
mov
pop
loopne
mov
jecxz
mov
jmp
hlt
pop
pop
faddl
push
push
dec
je
scas
std
cltd
fcmovnu
sbb
xor
mov
jge
das
not
test
xor
lds
into
ret
int
popa
inc
mov
loop
push
jg
clc
fiadds
cmp
cwtl
sub
and
loopne
adc
inc
dec
xor
scas
aas
mov
add
inc
shll
pushl
pop
sub
xchg
out
pop
lret
add
mov
pop
mov
pushf
ret
xchg
xchg
adc
sub
and
js
inc
lahf
and
je
push
sbb
xchg
inc
popa
das
mov
mov
jmp
mov
ds
test
cmp
fcmovnbe
inc
iret
sbb
xchg
push
push
gs
imul
dec
mov
sbb
push
mov
push
jmp
push
in
insl
mov
aam
jbe
inc
inc
push
mov
mov
xlat
and
jns
sbb
add
gs
stc
add
mov
jecxz
rorb
mov
andl
and
dec
xor
add
dec
aas
push
adc
cmp
stos
mov
or
mov
inc
adc
xor
outsb
enter
and
rcll
inc
gs
hlt
aaa
test
jle
mov
mov
out
adc
into
push
cmp
push
mov
fldenv
loopne
inc
and
xchg
mov
imul
and
or
and
push
bound
fiadds
nop
and
xor
test
push
loope
push
dec
insl
test
insb
fsubrp
dec
std
mov
bt
xor
jecxz
lcall
jnp
dec
jle
xor
leave
sbb
xchg
movsl
xchg
dec
and
adc
mov
cmp
mov
inc
cltd
pop
inc
cli
ret
arpl
ljmp
nop
or
lods
push
and
jecxz
fisttpl
or
ja
or
out
mov
mulb
lret
and
out
arpl
push
jae
aam
les
mov
stos
pop
shl
lods
shll
inc
orb
push
xchg
out
mov
vunpcklpd
popa
mov
xor
notb
inc
jle
in
mov
push
sbb
aaa
pop
or
andl
mov
jp
xchg
hlt
adcb
adc
dec
pop
mov
sbb
js
push
loopne
jle
inc
cmp
sbb
aas
pop
or
inc
xchg
jge
mov
and
pop
add
negb
or
or
jae
cltd
ficoml
ds
aam
movsb
push
jbe
sub
xchg
mov
stos
insb
add
and
movsb
dec
fldt
fwait
call
sahf
cmp
fidivl
fwait
xchg
sti
sbb
imul
add
or
xchg
sub
adc
push
fnstsw
and
daa
push
addb
dec
incl
push
leave
push
jmp
sbb
adc
jp
fsubs
pop
sub
ds
iret
sbb
sub
iret
pop
ret
cmc
add
xor
mov
aad
inc
cmp
xlat
rcrb
loope
adc
cmpsb
xor
and
mov
insb
in
and
rorl
idivb
andl
lret
in
mov
stos
cmp
stc
jle
jmp
pusha
fwait
aaa
out
mov
mov
add
cmc
or
ficompl
cli
aaa
xor
test
addb
adc
pop
mov
ret
push
xor
fwait
push
fdivs
lahf
and
jecxz
mov
mov
and
js
fnstenv
js
mov
int3
mov
imul
mov
mov
jbe
mov
js
rorl
clc
pop
push
sbb
mov
lods
sbb
fcomps
nop
pop
test
jo
mov
ss
jnp
adc
add
add
cmp
cmp
mov
jge
sbb
ljmp
push
pop
or
shll
scas
cld
cli
mov
iret
addr16
gs
arpl
lods
mov
ficompl
sub
xorl
cmpsl
push
xchg
in
inc
in
sti
sti
lret
adc
fidivrs
scas
cwtl
repz
pop
pop
loope
or
jge
cs
xor
fistl
fbstp
inc
jnp
aas
mov
imul
dec
scas
inc
hlt
negb
xchg
mov
xchg
lret
push
addr16
inc
andl
fs
inc
mov
popa
cwtl
loop
test
icebp
and
mov
ja
in
outsl
and
rcll
jnp
sub
dec
sbb
sbb
aam
mov
push
hlt
push
xchg
mov
mov
lock
inc
loop
pause
xchg
add
or
pusha
cwtl
aas
adc
aad
jns
in
xchg
pop
ljmp
iret
mov
insl
psadbw
add
out
inc
xchg
cmp
pusha
mov
xlat
add
lods
mov
pop
mov
fistl
inc
dec
fcomp
dec
inc
fadds
addl
fucomp
movsl
adc
mov
outsb
sbb
testl
fsts
and
rcrl
inc
mov
cmp
mov
rcl
inc
adc
popf
push
lcall
jb
mov
cmp
icebp
jbe
dec
dec
mov
pusha
aaa
or
xor
imul
push
and
dec
and
daa
popf
out
or
fmuls
imul
adc
mov
push
fisubs
pushf
idivb
inc
movsl
mov
jmp
stos
cli
push
mov
aas
cmp
out
outsb
popa
adc
inc
clc
in
cwtl
ss
jb
pop
mov
mov
fistl
stc
and
cld
mov
dec
popa
xlat
mov
sub
inc
aaa
out
sub
xchg
and
sbb
add
xchg
and
cmc
dec
fnstcw
adc
or
push
aad
inc
cli
add
ss
push
jmp
sub
testl
cmp
mov
nop
sub
cmp
mov
stos
in
pop
xchg
out
imul
rorl
rorb
repnz
mov
icebp
and
push
xor
andb
pop
lret
inc
ret
dec
dec
and
rolb
ss
jg
ftst
dec
dec
pop
sbb
inc
push
mov
out
and
mov
mov
dec
push
add
mov
dec
sbb
cwtl
jl
shlb
jns
jae
jg
repz
adc
int
mov
xchg
dec
lods
out
imul
cmp
jge
out
test
xor
stos
idiv
ss
cmp
or
lret
push
dec
out
mov
stos
movsl
inc
in
push
pusha
out
jne
lret
ds
sub
sub
bound
sbb
or
fcoml
inc
adc
dec
pop
push
mov
dec
adc
aam
push
or
cmp
leave
add
test
add
scas
cmp
cs
es
mov
leave
xchg
jns
rcrl
xor
adc
lret
xlat
data16
push
ret
and
mov
jae
jmp
insb
pushf
jo
aad
fucomp
adc
inc
or
push
ss
push
adc
cmp
das
or
lcall
je
outsl
add
xchg
add
loope
mov
inc
xchg
mov
mov
fmull
into
sub
mov
icebp
inc
xor
jecxz
out
sbb
call
adc
mov
mov
mov
or
mov
jg
sarb
or
xor
shlb
adc
xchg
sub
in
xchg
ja
push
mov
ljmp
scas
aaa
out
or
out
sub
pop
add
push
jle
jle
lret
fisttpll
mov
sbb
push
orl
jne
incl
aam
stos
pop
jno
je
sti
ds
scas
pop
sub
xor
rclb
push
mov
scas
sbb
pusha
sbb
cmp
adc
into
sub
out
cmp
inc
push
mov
jmp
or
push
out
das
call
pop
not
loop
movsl
and
gs
mov
mov
sbb
or
ja
jbe
ljmp
cmp
sbb
pop
aam
sbb
sbb
ret
les
jge
dec
fucomi
mov
adc
add
cmp
xchg
cmpsb
or
sbbl
jl
dec
out
xor
in
shlb
test
cmpsb
imul
push
fcmovne
je
lret
hlt
hlt
push
in
push
push
cmp
push
mov
jo
into
pop
mov
xor
bound
stos
aad
lcall
out
dec
arpl
pop
lods
jae
ja
xchg
cmp
jb
movsb
arpl
xchg
xor
or
sbb
movsb
lret
xchg
push
xor
jne
fs
add
iret
mov
mov
sbb
and
stos
mov
inc
rep
aaa
or
loope
loopne
push
stos
dec
cltd
mov
sub
ss
xor
loopne
and
loop
cltd
push
or
sbb
rolb
adc
push
xor
subl
adc
lods
pop
xchg
mov
cmpsb
push
loope
mov
xchg
loope
adc
and
push
cli
fstpt
jle
stos
mov
xor
testb
shrl
mov
fidivl
out
aas
mov
pop
dec
int3
mov
loope
ret
adc
fsubrs
movsb
adc
jbe
dec
outsb
loop
mov
into
stos
adc
pop
addl
inc
lods
xor
mov
xor
hlt
sub
in
aad
int
jmp
fwait
lea
push
aas
push
mov
out
push
sbb
push
mov
mov
and
dec
sub
cmpsl
fcoms
jl
test
je,pn
int
pop
pushf
rorb
cli
mov
mov
nop
or
sarl
scas
mov
leave
cld
dec
std
xchg
or
and
mov
mov
pop
or
adc
sarl
div
mov
inc
les
lcall
jno
arpl
push
pop
push
pop
sub
sub
test
push
js
xchg
push
mov
cwtl
pop
pop
pop
push
repnz
repnz
lds
pusha
arpl
popf
sbb
xor
inc
and
pop
lahf
mov
or
sbb
gs
push
push
add
adc
jnp
dec
idivb
lds
mov
imul
mov
dec
ja
out
bound
icebp
cmpsb
loopne
or
dec
xchg
movsb
mov
cltd
inc
sub
mov
sub
jecxz
sti
jge
je
test
adc
xor
inc
imul
das
out
cwtl
mov
sarl
xchg
mov
lods
cld
cltd
xchg
lcall
inc
pop
hlt
adcl
jne
inc
leave
ds
test
push
sbb
addr16
xor
adc
clc
nop
aas
jle
jl
clc
jle
pop
push
mov
movswl
jne
dec
lods
jae
xchg
aaa
jp
jmp
xor
add
xor
lods
mov
ds
mov
in
cmp
push
scas
jae
test
lea
add
sbb
adc
aad
jmp
adcb
out
jns
andb
jp
dec
hlt
fs
mov
xchg
aad
or
test
fnstenv
xchg
add
mov
not
lods
jp
and
insb
loopne
jo
pmaxsw
into
add
ss
push
xchg
lret
out
in
into
mov
aaa
cmp
or
lret
fsubrs
rol
xorl
cmp
mov
enter
test
jmp
int3
xor
inc
xchg
pop
movb
push
movsb
pop
add
jo
xor
push
add
jmp
push
mov
fistpl
xchg
adc
adc
sbb
aam
mov
lcall
sti
or
adc
dec
das
push
movsb
pusha
iret
inc
movsb
ficompl
out
cmp
popf
gs
lods
add
lods
hlt
jle
arpl
shl
arpl
cmp
and
popf
dec
add
gs
roll
mov
xor
dec
popa
pushf
jmp
scas
in
icebp
mov
aaa
and
cmp
add
rcll
popf
ret
movsl
into
cmpsb
stc
xchg
push
fcomps
sub
xor
mov
or
jmp
push
in
add
xchg
cwtl
pop
add
adc
jp
pop
das
lds
mov
rcrl
xchg
in
push
cwtl
shrb
inc
adc
out
hlt
xlat
sbb
dec
jmp
out
dec
sbb
popa
mov
nop
std
cmp
fldl
out
lret
xchg
outsl
or
adc
inc
rcll
popa
shll
inc
mov
xor
push
stc
int3
fdivs
xor
or
xchg
cmp
mov
lret
fwait
xchg
les
pop
cmp
xchg
arpl
popf
data16
and
bound
jecxz
out
inc
mov
xchg
cmp
xchg
in
pusha
pop
inc
lret
xchg
pusha
fidivrl
data16
and
cmp
mov
clc
lret
leave
mov
test
jp
mov
shll
loope
add
ret
dec
pusha
call
repnz
inc
pop
das
sbb
xor
xchg
fnstsw
and
adc
mov
sub
call
and
dec
aaa
rorl
call
xchg
scas
lock
shrb
xchg
movsl
lret
bound
cltd
frstor
ss
jo
lret
pop
push
sahf
mov
mov
popa
push
dec
inc
sbb
xchg
push
in
iret
cld
lods
hlt
push
and
les
jg
fnsave
push
aaa
clc
push
adc
inc
mov
stos
inc
int
stc
adc
inc
push
pop
cmc
out
addr16
push
push
mov
mov
sarb
xchg
dec
jns
cmp
outsb
inc
mov
scas
fstpl
adc
and
clc
xor
outsl
imul
test
add
and
dec
sbb
movsb
push
push
sub
int
pop
sub
fisubrl
jmp
sbb
lea
outsb
cli
jne
xchg
out
into
jae
push
int
cwtl
test
fildl
in
cmpsb
mull
cmp
pop
insb
push
maxps
push
int
jg
cmpsb
aam
pop
mov
sbb
lods
dec
inc
sub
cmp
jb
loop
ret
stc
and
mov
adc
adc
xlat
jmp
add
insb
jge
sarb
xor
add
popf
mov
cmp
rorl
test
jns
in
aaa
pop
xchg
dec
lods
pop
inc
pop
jmp
adc
dec
ljmp
sahf
int3
sarb
into
mov
xchg
sub
sti
cs
push
jge
add
aaa
xchg
cmpsl
fbld
dec
pop
mov
stc
cmp
rol
adc
lret
cld
jge
mov
repz
xchg
mov
adc
fistps
shrb
lret
mov
cmc
mov
cld
ret
or
pop
jmp
ss
mov
xor
shrl
or
inc
sbb
lock
es
inc
lods
cmp
enter
sub
and
test
bound
mov
test
cmp
lcall
fcomps
bound
sub
push
push
mov
fmuls
stos
xor
and
mov
lret
cmp
div
insl
out
pop
jo
ds
cld
adc
pop
jle
jle
sbb
lods
dec
push
lds
jmp
inc
sub
sbb
jecxz
jg
repz
mov
push
xchg
test
cmp
or
test
cmp
shl
jl
cld
xchg
inc
cmp
dec
es
fcoml
sbb
mov
mov
fsubl
loope
outsb
out
xchg
clc
push
jmp
insl
insb
inc
push
sub
lds
cld
addb
cltd
insl
cli
jns
mov
xorl
push
bound
and
ficoms
fimull
insl
lcall
shl
lock
pushf
pop
roll
mov
pop
aaa
jge
mov
insl
dec
jmp
pop
lahf
ja
mov
inc
pop
add
cltd
fdivr
or
xor
sub
push
aad
lock
xor
cmp
fcomi
int
xchg
insb
jmp
xor
sbb
lahf
in
pusha
mov
jbe
jmp
cmp
in
mov
inc
xor
call
out
je
aas
aas
shll
sub
shlb
ljmp
call
and
movsb
jmp
push
outsb
cmpsl
testl
test
pop
sub
pop
leave
mov
push
pop
pop
aad
xchg
lods
add
fistpll
hlt
or
jecxz
into
mov
lcall
fsubr
les
pushf
sbb
clc
adc
cmp
cmpsb
and
insl
loope
cs
out
mov
push
mov
push
xor
std
xor
mov
ja
test
test
mov
cld
lea
scas
pop
pop
pop
in
sbb
imul
pop
out
inc
jb
or
xchg
pop
sbb
sahf
push
fdivs
lds
mov
sahf
sub
enter
fstl
push
pop
int
je
pop
pop
xchg
pop
sbb
push
icebp
sahf
lcall
dec
push
lret
dec
dec
add
add
js
sub
je
or
lahf
cmp
ret
cmp
dec
cld
lcall
movsl
xchg
ds
imul
or
mov
add
or
in
fdivr
and
push
dec
dec
repz
ja
xor
mov
cmp
jae
outsl
cmp
inc
and
jb
jo
pop
loop
mov
cwtl
mov
mov
adc
dec
adc
mov
out
shrb
adc
loope
mov
inc
sbb
popa
std
aam
ds
push
pop
mov
jmp
es
stos
mov
push
lret
sbb
cmc
scas
subl
jl
xchg
daa
lret
adc
adc
mov
and
nop
xor
mov
sbb
and
stos
aaa
and
iret
inc
mov
daa
roll
jno
aad
and
scas
pop
inc
loopne
movb
xor
dec
adc
mov
mov
pop
jl
dec
inc
adc
sub
lock
test
and
and
hlt
inc
inc
jmp
ds
cmc
mov
jae
xchg
loope
icebp
je
jno
faddl
jb
ss
adcb
fs
mov
pop
dec
sbb
xor
adc
cmc
mov
xlat
popa
cmp
jle
dec
test
test
cmp
push
lods
pop
or
xor
aaa
mov
popl
push
mov
pop
pop
int3
pop
test
out
mov
aam
lahf
aaa
stc
movsl
dec
or
pop
std
aam
ljmp
sbb
adc
xor
push
lea
movsb
pop
xor
ror
push
and
inc
mov
push
mov
movsb
mov
mov
mov
jne
inc
mov
mulb
pusha
ficoml
adc
xchg
mov
call
imul
lahf
imul
sub
ret
inc
lds
mov
sbb
insl
repz
pop
lret
ljmp
sub
inc
dec
pusha
lahf
add
add
stc
xchg
or
cmpsl
or
jae
lahf
scas
lcall
into
and
jg
cmc
mov
inc
sub
push
jnp
mov
fwait
std
daa
fcmovnbe
mov
jno
cmp
and
sub
fnstenv
fcomp
pop
cmp
sbb
leave
lea
scas
negl
xor
loop
pop
mov
cmp
mov
lret
mov
xchg
sub
add
push
dec
add
adc
cli
out
push
loopne
xor
stc
sbb
fidivl
test
aas
sbb
xor
ss
push
icebp
xchg
inc
aaa
bound
shl
imul
jmp
lods
sbb
sbbl
jge
ljmp
in
mov
or
cli
sub
lea
xchg
sbb
fisubs
aam
ljmp
pop
loope
jo
mov
adc
int
jmp
dec
xchg
jmp
push
sarl
mov
sub
push
lahf
lahf
mov
fidivrl
sbb
outsl
jae
into
cld
adc
sbb
pushf
mov
xlat
dec
aas
or
sub
std
fdivl
pop
sbb
mov
movsl
lret
orl
jle
or
in
push
jp
adc
jbe
mov
daa
imul
incl
test
movzbl
adc
pushf
scas
mulb
arpl
cmpsb
push
je
jp
fldt
jp
sbb
test
mov
push
dec
and
mov
cmovge
js
jne
fidivrl
bound
pop
bound
inc
or
movsb
ret
mov
mov
test
sbb
out
icebp
sub
inc
cmp
repnz
or
aam
testl
adc
or
js
xchg
cmp
ret
mov
add
mov
mov
or
out
xor
js
or
sub
inc
mov
and
mov
add
pop
ss
rol
jmp
push
mov
xchg
cs
push
or
stos
inc
clc
aam
or
and
not
stos
mov
jge
push
das
clc
inc
mov
dec
lock
mov
jp
xchg
cmp
ss
roll
pop
lret
adc
mov
dec
mov
ds
fists
push
test
pushl
test
fstps
xor
bound
add
lret
sahf
push
bound
cmp
adc
push
jmp
xchg
sub
cmp
xor
fidivs
adc
and
sbb
bound
xchg
mov
jp
adc
dec
adc
in
inc
cmpsl
push
lret
imul
loopne
or
arpl
sub
sub
dec
mov
mov
imul
pop
add
das
popf
pop
ja
pop
xorb
mov
sbb
jo
and
xor
lock
pop
clc
pop
or
dec
jnp
nop
mov
mov
testb
shr
dec
cmpsl
clc
lahf
ret
shrl
repnz
lods
pusha
xor
dec
add
xlat
pop
mov
movsl
les
mov
push
movsl
scas
ret
js
addb
int3
insb
gs
sbb
sub
mov
jle
std
sbb
lahf
loop
pop
fdivrs
sub
dec
in
shr
pop
jmp
mov
ret
inc
dec
lock
xchg
sbb
in
push
sub
es
cmp
and
in
mov
dec
popf
mov
ror
push
push
dec
and
fcomip
add
xchg
mov
scas
pusha
sbb
sub
aad
les
pop
cmp
out
push
jnp
int3
mov
repnz
insb
lret
cmp
clc
dec
pop
mov
pop
in
stc
jmp
add
loop
add
sbb
jl
cmp
push
out
xor
mov
add
repz
jne
inc
and
push
rorl
sub
pop
fs
jg
je
aas
jge
mov
xchg
pop
cmp
jne
stc
insl
cmpsb
and
cmpsl
xor
insb
filds
sub
cltd
xor
push
cwtl
mov
and
lea
bound
add
mov
and
aad
pop
jl
in
dec
outsb
fisubl
in
stc
xor
sub
jns
adc
jp
jbe
lret
mov
sarl
adc
xchg
cmp
lcall
dec
mov
stos
mov
xor
je
mov
imul
in
rolb
shlb
add
ljmp
sbb
jae
mov
sub
push
sbb
pop
pop
push
mov
icebp
pop
insl
sahf
adc
push
mov
mov
insl
xlat
cmp
mov
push
add
out
movsl
pop
pop
adc
dec
xchg
pop
or
int
adc
arpl
ror
repnz
pop
push
adc
add
adc
loope
imul
insb
lret
or
sub
repz
jne
addr16
pop
sub
jmp
cwtl
dec
mov
mov
scas
dec
jmp
enter
mov
and
jg
mov
in
imul
sub
push
movsb
mov
inc
inc
jmp
mov
dec
sahf
jle
iret
insl
ret
scas
inc
daa
outsl
pop
dec
out
test
mov
and
stos
lods
nop
mov
mov
js
insb
push
rcrb
pop
inc
pop
cli
mov
movl
cltd
ss
test
push
hlt
out
mov
and
push
mov
cmc
xor
enter
clc
popf
ficomps
push
xor
or
mov
daa
jae
or
out
mov
imul
or
loope
imul
aam
ss
mov
clc
subb
adcl
pop
test
inc
rcrl
jae
outsb
stos
add
jp
pop
fwait
inc
mov
arpl
jne
jmp
push
and
jge
out
rorl
cmp
out
data16
push
sbb
es
leave
mov
push
sbb
lds
pop
cmc
jp
incb
push
addr16
sbb
cwtl
cmpsl
hlt
adc
popf
stos
and
jne
rcll
jle
push
jne
inc
addr16
fstps
test
lret
cli
pop
or
mov
inc
aam
mov
cs
push
shr
sar
movsl
push
icebp
imul
adc
ljmp
xchg
lock
and
pop
data16
sbb
dec
jns
and
push
or
pop
into
clc
das
jno
add
hlt
dec
insb
jae
es
pop
fldt
inc
shll
and
loopne
pop
sub
or
into
rolb
or
push
cs
cmpsl
fsubs
cmp
inc
push
out
add
mov
mov
sbb
lods
lods
lea
add
jmp
pop
cwtl
ja
inc
mov
ret
xor
repz
adc
mov
or
xchg
frstor
fwait
inc
call
test
fadd
mov
js
in
shlb
xchg
jb
cmc
sub
xor
jmp
mov
pop
out
nop
jge
dec
mov
add
cmp
sbb
mov
pusha
lods
mov
dec
push
test
arpl
aad
push
sub
imul
cmp
mov
fwait
pop
push
inc
cmc
jnp
or
outsb
movb
test
jmp
rolb
sub
sahf
rcrb
nop
xchg
movsb
xchg
lahf
dec
lret
mov
xor
shr
sbb
mov
rcrb
fs
insl
push
outsl
cmc
push
clc
je
xchg
insb
sbb
mov
xchg
cld
jmp
push
and
enter
cmp
frstpm(287
push
stc
sbb
sub
test
stos
inc
in
pop
cmp
and
notb
sub
dec
test
push
and
mov
adc
adc
dec
mov
loopne
and
sub
mov
lret
daa
jnp
fimuls
bound
xchg
int
adc
mov
sbb
rcll
fcomi
push
iret
xor
sahf
sbb
push
lock
rol
ret
dec
jmp
fiaddl
bound
mov
xor
stos
outsb
inc
inc
pop
mov
fistl
push
jo
or
mov
dec
jo
jmpw
xor
sub
stos
popa
aaa
shll
adc
xchg
clc
adc
xor
cld
sub
or
repz
and
fiadds
mov
mov
sub
mov
ljmp
adc
xchg
cmp
or
iret
xor
popf
fisubl
pop
and
scas
pop
inc
stc
aad
aas
rcrb
mov
dec
cli
shl
xor
push
jnp
outsl
adc
js
dec
and
mov
cmp
jne
fdiv
mov
gs
jb
jmp
mov
adc
push
mov
and
shrl
add
jmp
jnp
xorl
arpl
imul
jle
or
jae
test
movsb
out
test
in
ret
pop
dec
add
std
cs
mov
push
and
pop
xlat
stos
inc
fisubl
hlt
jp
into
cltd
test
lcall
loop
xchg
adcb
cmp
xchg
loope
push
loopne
clc
mov
adc
dec
daa
fistpl
push
and
fs
lea
movsl
popf
mov
gs
jg
sub
sahf
fidivrl
fistps
jge
imul
lret
dec
mov
ds
popf
aad
cmp
cmp
xchg
rorl
sub
xor
xchg
or
pop
pop
popf
dec
jle
leave
fists
inc
hlt
or
scas
mov
fimull
sbb
out
xchg
ret
cltd
jecxz
nop
push
adc
ret
mov
push
fcompl
jge
pushf
outsl
jbe
outsl
and
jno
pop
sbb
jb
stos
dec
inc
sub
imul
dec
into
sbb
hlt
hlt
mov
sub
add
hlt
imul
add
inc
ffreep
ljmp
adc
insl
jecxz
sbb
jb
repnz
sbb
test
lret
xor
pop
pusha
sub
sub
push
out
scas
rcrb
scas
xchg
add
adc
les
pop
cmpsb
loop
rcrl
fimuls
add
dec
mov
sti
xor
add
xchg
pop
icebp
lahf
jb
push
fwait
mov
mov
inc
mov
dec
jmp
cli
stos
or
cmpsl
out
daa
sbbl
test
cmpsl
imul
daa
pop
jo
lea
outsb
aaa
cmp
cltd
jnp
xor
cmp
shl
push
cmp
out
mov
int
pop
push
in
mov
loop
loopne
movsb
adcl
bound
jg
pushf
add
les
fiaddl
add
mov
pop
pop
faddl
cmp
inc
scas
sahf
adc
aaa
loop
les
add
adc
jnp
adc
xor
test
cmp
or
xchg
mov
inc
jge
push
cli
mov
mov
xchg
test
pusha
sub
inc
jp
pop
hlt
aad
xor
aaa
jmp
notl
add
cli
jle
sbb
add
dec
sub
xchg
and
shrl
fldenv
lods
mov
or
dec
jns
mov
fistl
jmp
mov
jg
sbb
test
mov
push
out
dec
mov
sti
mov
cmp
cwtl
sub
push
pop
add
pop
out
xor
stc
sahf
fscale
xchg
arpl
add
mov
loopne
rcrb
sahf
scas
mov
push
test
mov
inc
xchg
and
xchg
inc
ror
lods
imul
add
lahf
fistpll
mov
mov
or
fistps
jbe
push
xor
or
xchg
ja
int3
inc
lods
stos
xlat
lcall
rcr
mov
rorb
dec
cmp
popf
lahf
mov
or
ja
in
add
xor
lock
jbe
adc
pop
xchg
sbbb
jbe
lods
and
arpl
outsb
mov
jl
pop
adc
add
add
sahf
pusha
push
test
mov
cli
sub
add
sbb
jp
pusha
pop
out
pop
push
push
imul
imul
cmp
lea
aaa
movsl
xor
xchg
lods
mov
bound
mov
inc
cld
sub
inc
pop
cwtl
ss
inc
push
imul
xor
xchg
int
popl
les
mov
stc
int3
jp
jp
cmp
stc
iret
rol
test
sti
dec
sbb
push
fistpll
pop
inc
add
push
fcomps
movsl
mov
sub
jmp
adc
ja
and
daa
div
fnstenv
sbb
test
cs
lock
shr
arpl
inc
inc
jnp
outsb
into
inc
stc
jle
test
scas
mov
dec
addr16
add
or
fsubs
push
leave
int
push
pop
xorb
pop
cs
stos
xchg
inc
in
jno
fisubrl
in
aam
call
push
js
jp
pop
inc
jae
add
in
xchg
or
inc
lea
jae
dec
hlt
xchg
sub
repz
adc
fisttpl
arpl
insl
xchg
incb
lret
xor
lret
pop
mov
jb
xchg
or
jp
aam
scas
repnz
test
mov
outsl
jl
sbb
sbb
fistpl
or
jb
out
push
push
sarl
popa
add
mov
jo
and
dec
les
int3
xchg
test
push
mov
mov
mov
data16
push
lret
xchg
inc
test
loopne
cmp
mov
dec
test
lcall
idivl
xchg
push
pusha
in
movsl
scas
pop
xor
popa
test
cvtpi2ps
mov
jo
test
inc
pop
loopne
push
lcall
pop
push
mov
add
cmp
insl
inc
stc
out
dec
jecxz
sar
cld
mov
xchg
hlt
or
hlt
int
push
and
jbe
add
fucom
les
aad
mov
sbb
sbb
ja
rorb
ljmp
je
das
fistps
loope
cwtl
lods
nop
xchg
hlt
stos
xchg
test
mov
arpl
popf
in
inc
pop
pop
jp
adc
ds
cmp
mov
inc
lock
stos
mov
orl
sub
jnp
pop
pop
jp
fldl
inc
insb
shll
push
xchg
and
insb
cmp
outsl
lahf
dec
mov
aas
mov
dec
mov
aad
stos
inc
test
mov
mov
pop
push
cltd
inc
lods
push
sbb
cltd
or
push
les
jo
dec
pxor
mov
mov
ljmp
push
pop
and
xchg
nop
insl
and
pop
ficoms
xchg
in
mov
insl
sub
push
divb
inc
pop
mov
jmp
push
and
into
push
sub
sub
js
pop
push
nop
sti
adc
outsb
xchg
jl
jmp
add
xchg
lds
cmp
repz
test
jge
adc
add
lea
jecxz
out
jnp
push
stos
sarb
cld
out
push
daa
adc
lret
sub
sub
inc
cmp
cmpb
cmp
sub
fs
fcoml
movsb
sbb
jle
lods
dec
pandn
into
scas
cmp
out
jmp
cli
xchg
xor
sbb
cmp
and
cmpsb
xchg
mov
roll
sti
jge
mov
sub
hlt
mov
inc
adc
lcall
dec
daa
icebp
int3
pushf
rcll
xchg
fcomip
pop
mov
jbe
pusha
rorl
xchg
outsl
jmp
movsl
aam
fdivs
jbe
leave
push
pusha
sub
inc
aad
aas
inc
dec
aam
adc
xor
mov
insl
scas
or
push
mov
imul
out
dec
lods
insl
stos
cld
test
sahf
lahf
fidivl
sub
cwtl
mov
out
cli
mov
lds
jle
pop
mov
mov
mov
insb
xor
xlat
inc
addr16
aad
or
test
jl
jmp
sbb
sbb
fidivl
fnstenv
push
popf
adc
repnz
stos
bound
test
mov
pushf
push
rorl
pop
xlat
movsl
imul
xchg
rorb
cli
sbb
ds
xchg
pop
mov
xchg
mov
mov
adc
adc
push
mov
sub
xor
repnz
icebp
loopne
cli
pop
cmc
aam
lods
orl
out
add
in
int3
iret
in
incb
push
xor
int
cmc
ja
outsb
pop
and
mov
clc
shlb
fcom
leave
push
int3
shlb
sub
xchg
js
insb
lods
fcmovne
sub
and
mov
dec
and
inc
mov
lea
js
sub
or
sbb
push
enter
push
js
mov
cmpsl
pop
cli
nop
and
ja
lret
mov
std
mov
rolb
mov
cs
movsb
or
xchg
or
rorl
pop
out
inc
addr16
jb
add
pop
cmc
adc
jmp
mov
push
jle
xchg
aaa
pop
pop
fsubrs
cmp
fimuls
xchg
movsl
sub
stc
aas
adc
and
mov
mov
int3
inc
int
sti
jns
out
mov
addb
lods
mov
mov
adc
or
cmp
addr16
packuswb
jae
and
and
push
ret
rorb
insl
cmp
inc
outsl
push
dec
lods
rolb
pop
jnp
sbb
inc
cld
or
dec
loopne
or
xchg
xchg
mov
adc
inc
add
sub
or
leave
xor
xchg
inc
push
sbb
jae
or
in
xchg
pop
push
aaa
mov
pushf
int
ficomps
mov
push
jbe
pop
sahf
mov
ss
sbb
add
mov
aas
ret
addl
dec
push
add
add
in
pop
xchg
dec
dec
cmp
pop
les
subl
xor
aam
pop
loopne
mov
out
and
cltd
stos
jo
dec
pop
cmpsl
mov
iret
mov
movsb
mov
sbb
loope
add
jp
jnp
mov
out
mov
fwait
pushf
fldt
and
mov
ret
xlat
jbe
lods
decb
repnz
sub
aas
sbb
sub
stos
test
loope
sub
cmp
jmp
or
xor
repz
xchg
rclb
sub
pop
pop
loope
push
jle
cmc
mov
mov
aam
ljmp
jp
mov
mov
and
iret
repnz
leave
daa
xchg
movsl
or
je
dec
rclb
lahf
addr16
or
js
rolb
or
xor
loop
cwtl
stc
cmp
popa
add
dec
pop
jb
xchg
test
mov
stc
aaa
pop
inc
push
pop
ja
mov
add
or
xchg
mov
dec
mov
dec
cmc
lret
xchg
faddl
rorl
mov
repnz
jne
aam
fnstenv
out
jb
jl
mov
mov
ja
repz
clc
data16
jns
mov
xchg
aaa
cmpsl
jne
lret
mov
add
loopne
push
mov
cs
mov
inc
or
fs
xchg
das
sbb
push
les
push
push
arpl
add
ja
out
dec
sub
fdivrs
mov
addr16
test
or
incl
push
inc
es
lods
sti
js
ret
dec
cmp
unpcklps
or
rcll
addb
or
arpl
aad
jno
inc
inc
mov
mov
dec
insb
and
sub
pusha
subb
fmull
jns
sub
mov
jns
push
cmpsl
leave
jae
push
pusha
xor
cmp
inc
sbb
push
inc
repnz
push
mov
test
and
xor
aad
fdivrl
popf
roll
leave
andb
xchg
push
inc
or
mov
jo
nop
rol
jl
sbb
pop
repz
aaa
inc
xchg
inc
xchg
test
sub
push
loope
jb
or
mov
aam
ret
jnp
out
push
ss
aad
dec
and
jnp
inc
push
xchg
mov
xchg
xchg
int
xchg
mov
mov
pop
sbb
mov
push
add
insl
xor
stc
dec
jb
pop
push
push
orb
lods
or
inc
imul
jmp
mov
push
in
movhps
mov
mov
cwtl
js
pop
and
icebp
add
ficomps
arpl
mov
in
jp
or
mov
lods
dec
lea
xor
push
add
out
add
shr
dec
call
mov
popf
pusha
popa
push
das
add
aas
lcall
aad
out
iret
es
inc
pop
push
cmp
movsl
or
lea
push
xchg
jno
in
xchg
bound
jbe
push
in
inc
das
andl
hlt
mov
jb
leave
cmpsb
rorb
sbb
and
jg
cmc
dec
pop
push
pop
pop
daa
rolb
stos
cltd
int
jp
test
stc
mov
sbb
outsb
cltd
inc
push
jb
adc
stos
sub
cli
mov
xchg
shll
mov
sub
mov
jg
lds
idivl
es
sarb
lcall
mov
std
lret
pop
test
xchg
ja
adc
mov
mov
adc
fiaddl
or
roll
das
push
call
xchg
test
push
dec
xor
push
in
or
xor
xchg
push
mov
inc
aaa
sti
bound
insb
mov
jmp
dec
mov
add
pinsrw
pop
ret
add
into
into
call
rcrl
ret
iret
lret
mov
sti
xor
sub
repz
pop
test
lods
popf
test
jl
mov
mov
push
pop
addl
mov
adc
scas
mov
rol
leave
mov
jge
lcall
jnp
sbb
dec
ret
andl
push
cmpsl
out
inc
add
add
sub
mov
jns
or
push
leave
cmp
in
push
mov
inc
xor
fcmovnb
push
cli
mov
and
and
push
and
jge
fdivl
pop
and
push
sub
loop
test
daa
xchg
sbb
mov
xor
fwait
pushf
push
adc
sub
mov
adc
int
hlt
or
flds
jle
dec
ret
adc
repz
adcb
xchg
stos
add
js
dec
ret
lahf
repz
in
test
lret
fildll
in
sbb
sub
mov
insb
stc
aam
cld
mov
pop
cmp
push
dec
stos
cmp
jg
data16
xor
dec
add
jmp
push
mov
sbb
dec
xor
imulb
and
add
mov
repnz
pushf
cltd
loope
jnp
out
mov
subl
stos
mov
cmp
xor
movsb
inc
inc
inc
cmc
sarl
dec
inc
filds
scas
push
fdivrs
pushf
bound
leave
clc
jae
insb
fsubs
cmc
and
cmpsb
gs
int
scas
iret
adc
mov
mov
fldl
sbb
or
cmp
xchg
xor
ret
aam
loop
push
and
jb
insl
xchg
gs
shr
pop
shl
in
jno
cmp
xor
rolb
xor
cmp
movsl
int3
sbb
mov
movsb
loopne
sbb
mov
push
jns
add
mov
mov
adc
sub
aad
or
mov
inc
sbb
stos
lret
push
fstpl
push
ret
push
fidivrs
cs
mov
xor
outsb
aas
pop
stc
fnstsw
mov
or
mov
je
adc
adc
pusha
call
lahf
aas
jb
stos
int3
ljmp
cmp
pop
sub
push
lods
les
into
loope
add
push
lret
dec
mov
inc
test
hlt
outsb
and
aad
jl
xchg
jmp
pop
sbb
shll
inc
fwait
pop
std
dec
popf
andl
dec
lods
jo
fmuls
push
fs
xlat
pop
xor
and
mov
aas
xor
sub
mov
popf
push
and
and
mov
incb
cwtl
mov
into
or
push
mov
jecxz
ds
pushf
mov
scas
aas
jne
cmpsl
push
int
adc
mov
test
and
fsubrs
stos
ret
aas
mov
inc
sub
mov
out
or
call
xchg
and
mov
lgdtl
bound
push
loope
inc
js
negl
sub
into
mov
mov
add
nop
test
adc
xchg
roll
cltd
add
sub
pop
aad
jl
adc
or
push
jb
mov
enter
ficoml
mov
repnz
pop
out
out
rcl
pop
loopne
xchg
adc
loopne
mov
dec
sahf
pop
ljmp
loope
adcl
fcmove
sbb
mov
adc
push
lret
mov
or
js
fcompl
push
pop
add
aad
mov
xchg
or
dec
adcb
sub
stos
sahf
inc
mov
xor
inc
data16
jbe
cmpsb
push
pushf
lret
jge
shl
mov
cli
lods
mov
mov
pop
data16
mov
xchg
cli
cmp
iret
movsb
out
adc
dec
test
jge
ret
xor
push
cmp
xchg
sub
mov
dec
clc
rcl
xor
sub
jo
pusha
shl
mov
cmc
bound
fidivs
push
push
push
into
add
test
adc
mov
cmpsb
cmp
or
sti
lcall
imul
push
xchg
int
cmp
dec
pop
out
mov
sub
fnsave
pop
outsb
dec
push
sbb
add
or
mov
and
mov
movl
inc
adc
mov
push
push
in
push
xor
mov
push
outsl
movsb
sub
stc
das
mov
rcl
mov
adc
push
scas
cs
lds
adc
ret
sub
lahf
aaa
inc
enter
jle
repnz
test
gs
cmp
ret
adc
jne
nop
repz
push
cmp
xor
jbe
add
imul
xor
movzwl
and
insb
push
gs
xorb
mov
fcoms
nop
gs
inc
leave
sub
in
jno
stc
out
add
dec
xchg
mov
fcmovbe
mov
xor
mov
jo
adc
push
scas
xchg
push
hlt
stc
into
leave
dec
jne
fwait
push
stos
data16
popa
or
xchg
inc
xor
mov
xchg
imul
pop
cmp
sahf
xor
flds
or
xchg
dec
adc
cmc
test
adc
jmp
ret
mov
incb
mov
sahf
test
filds
xchg
aaa
sub
mov
jae
outsb
orb
subps
adc
xor
jo
inc
mov
dec
pop
icebp
int3
popf
cltd
jmp
mov
stos
adc
mov
mov
das
push
les
in
test
mov
mov
scas
pop
push
push
bound
push
stos
sub
scas
or
mov
ss
repnz
add
add
sbb
outsb
add
mov
jg
stos
call
and
jb
jbe
test
sarb
test
cmp
icebp
cld
cmpsb
jno
adcb
inc
out
pop
or
jecxz
js
addr16
push
inc
push
lea
dec
hlt
pusha
mov
out
lock
imul
popl
jg
mov
ret
inc
leave
dec
add
loope,pn
add
fstpt
jp
push
push
andb
dec
add
adc
test
inc
inc
rcrl
xor
sbb
or
push
scas
into
data16
fcoml
cli
mov
stc
pushf
scas
std
adc
outsb
mov
pop
mov
iret
or
add
jo
out
int3
shlb
mov
mov
inc
jne
cwtl
dec
aaa
push
mull
cmpsb
xchg
xchg
or
push
lds
rcrl
sub
call
loope
arpl
loop
cli
pop
test
mov
dec
push
pop
popf
test
cmp
adc
push
stc
add
sub
jo
dec
xlat
adc
mov
mov
jb
test
test
adc
dec
xlat
sbb
subl
mov
fidivrs
mov
shr
xlat
sbb
xor
sbb
and
add
call
lds
push
xor
inc
repnz
ret
cmc
push
mov
dec
pushf
dec
mov
cmp
test
pop
imul
insb
lret
cmp
repz
ret
or
outsb
push
pop
push
sti
mov
cmp
cmp
lods
cmp
jge
inc
jb
sahf
pushf
push
cmpsb
xchg
aas
sbb
xor
test
jge
jl
pusha
mov
aad
data16
inc
push
into
sub
lods
in
lahf
cmp
push
and
push
xor
xor
xchg
lods
aaa
je
mov
out
xor
ss
jg
rcr
or
mov
and
cmp
fisubrl
adc
push
out
mov
sub
mov
ret
xchg
in
fcoms
icebp
dec
xor
cmpsl
leave
xchg
pusha
jmp
pop
je
dec
mov
dec
lds
pop
jnp
fisttps
inc
push
and
jb
sub
nop
cltd
push
sub
data16
mov
mov
pop
push
cmp
jne
sub
mov
lcall
cmc
sbb
pop
fnstcw
push
rcll
cmp
loope
jp
cwtl
add
sub
cmp
dec
push
roll
bound
add
push
ret
les
stos
and
stos
mov
cld
outsb
arpl
bswap
mov
out
into
xor
insl
imull
add
in
add
cwtl
adc
loopne
push
push
pushf
jb
dec
loope
mov
push
pop
push
sahf
insb
push
cmp
lds
dec
ret
or
mov
mov
pusha
movsb
pop
popa
lahf
js
rolb
inc
mov
mov
xchg
dec
mov
push
sbb
inc
add
iret
shl
and
shrl
mov
or
sbb
movsb
xor
pop
andb
and
cmp
jl
mov
and
sub
pop
cmpsb
lahf
cmc
in
mov
mov
sub
nop
inc
sarl
xchg
adc
jg
sahf
jmp
add
mov
leave
xchg
mov
movsl
xorb
and
mov
mov
xor
jb,pn
stos
inc
ja
sbb
jp
cltd
cli
sub
lret
lds
test
js
xlat
add
loopne
xchg
inc
iret
or
movd
pmuludq
mov
fidivrs
lret
stos
or
xor
adc
outsb
shll
or
jns
pop
or
sti
jl
xchg
adc
xor
mov
popf
cmc
sub
cmp
jmp
test
and
dec
pop
jle
mov
xor
cli
mov
leave
add
dec
das
ds
push
jl
pop
outsl
push
mov
adc
jecxz
daa
fsubrl
push
mov
jae
lea
stos
lcall
adc
dec
xchg
pop
pop
stos
into
mov
imul
xchg
adc
andb
xor
mov
pop
shl
pop
insb
adcb
push
push
sub
outsb
aam
cmc
inc
mov
sbb
jp
mov
dec
mov
jns
mov
stc
jp
cltd
inc
mov
les
insb
ret
or
dec
adc
and
push
sub
roll
sahf
add
xor
sbbb
ds
xchg
push
dec
push
add
mov
orb
or
addr16
sbb
add
into
pusha
and
mov
pop
arpl
dec
ret
inc
jo
push
jg
dec
and
jbe
mov
clc
aaa
add
mov
mov
push
lock
pop
push
cmp
or
mov
ret
dec
cwtl
out
add
push
mov
jmp
sbb
push
cmp
push
cmp
xor
jle
lds
and
popa
or
or
in
jo
lds
push
xchg
sbbl
insb
lods
lahf
jmp
mov
xchg
movsl
sbb
and
inc
into
xchg
or
pop
aad
sbb
xchg
and
mov
daa
jge
mov
jecxz
repnz
test
push
jns
or
mov
daa
cmp
adc
les
xor
scas
out
dec
pop
scas
cwtl
cltd
ds
jecxz
xlat
lret
enter
movq
nop
imul
add
test
sub
aad
hlt
fs
cld
inc
adc
fbstp
lea
inc
push
std
inc
inc
jg
dec
mov
jecxz
ret
add
push
dec
dec
adc
mov
mov
in
sbb
insb
nopl
shrl
cmp
popa
lock
loop
es
dec
aas
dec
stos
loop
jbe
mov
in
daa
or
loop
jne
insl
out
ret
dec
aas
call
fwait
repz
inc
insb
push
cwtl
cld
mov
lods
lret
test
rolb
mov
movsb
jg
in
xor
xchg
or
add
cmc
push
push
sub
dec
pop
pop
sbb
fists
in
pop
sti
adc
mov
pop
mov
fs
jmp
enter
fwait
dec
mov
shrl
mov
mov
int
push
mov
mov
ljmp
dec
sbb
xchg
ljmp
aad
xor
and
cmp
nop
icebp
es
int3
or
push
popf
iret
fldl
scas
add
std
dec
outsl
cmc
arpl
ret
cli
ss
sbb
mov
mov
sbb
jnp
hlt
xchg
test
pusha
fcoms
xlat
lods
mov
lea
ds
pop
data16
or
mov
lock
inc
mov
cs
aam
mov
rcrl
pop
mov
testb
out
scas
imul
jmp
enter
pop
cmc
cmpsl
mov
cltd
icebp
xlat
jmp
mov
ljmp
decl
jns
mov
cmc
lret
call
pushf
jmp
mov
pop
mov
enter
int
mov
in
cld
icebp
pop
clc
imul
sub
sub
cmp
jb
dec
jne
dec
xchg
ret
pop
idivl
jae
sahf
dec
mov
dec
jle
sbb
ds
lret
loope
inc
test
pop
push
outsb
lret
xchg
jnp
or
inc
sarb
pop
pop
cmpsl
pop
jo
jle
push
clc
rorl
pop
adcb
add
cmp
outsl
mov
or
cmp
xchg
dec
scas
xlat
pop
mov
add
addb
and
mov
and
mov
in
lods
subl
les
and
mov
in
jo
dec
dec
rcll
lcall
cltd
sarb
adc
sub
adc
ja
xchg
frstor
aad
aas
adc
add
xchg
jb
cmp
cmp
push
loop
and
or
xchg
popa
lods
faddl
push
fisttpl
fs
xor
mov
fwait
mov
xchg
daa
nop
es
fcomps
push
push
mov
mov
xor
push
pushf
cli
aaa
je
scas
adc
mov
outsl
add
mov
into
mov
dec
rorb
repz
cmovl
and
xchg
scas
or
xor
mov
out
push
adc
cmp
jle
jmp
inc
mov
sub
fnstenv
les
xlat
js
pop
sub
push
sarb
pop
inc
xor
ficomps
imul
or
inc
ds
jmp
and
lds
mov
clc
cli
stc
mov
mov
inc
mov
jl
push
pop
xchg
push
into
jecxz
lods
pop
cwtl
lret
push
jg
dec
testb
negb
sbb
jecxz
push
mov
mov
jp
testl
stos
repnz
and
loop,pt
fs
jnp
push
sbb
or
pop
sti
out
pop
push
es
mov
xchg
jp
cmp
pop
popf
mov
mov
mov
nop
and
or
inc
andb
mov
je
jge
mov
leave
add
inc
xchg
cmp
mov
cmp
inc
pusha
mov
sbb
xor
out
into
lcall
mov
in
fidivrl
mov
cmpsb
dec
std
lods
popf
jbe
std
xchg
dec
subl
inc
les
lret
sub
lods
dec
cmovae
or
and
cmpsl
mov
push
pop
push
out
sahf
cmpsb
pop
adc
fs
mov
or
mov
clc
mov
cld
in
lods
jns
cmc
cmpsl
sbb
je
mov
out
adc
adc
or
insl
xchg
aam
dec
jp
imul
dec
cltd
mov
cld
lea
popf
dec
insl
out
test
xor
mov
cmp
xchg
mov
mov
fwait
mov
ds
jbe
in
push
cld
hlt
sahf
js
jmp
lock
ss
icebp
mov
fsubrp
dec
pop
cmc
dec
mov
cmp
in
outsl
notl
inc
mov
aaa
mov
push
lods
sti
and
mov
dec
xchg
pop
inc
mov
mov
and
adc
sub
mov
dec
imul
loop
sub
test
xchg
jnp
scas
cmp
xchg
push
jl
dec
pop
sbb
and
jp
call
jp,pn
mov
jle
dec
mov
sbb
dec
cmpsb
mov
in
dec
or
inc
mov
mov
pop
call
lock
ret
inc
jge
jp
inc
xor
add
arpl
insb
pop
adc
les
inc
clc
inc
adc
lock
shrl
aad
mov
out
push
call
or
ss
je
sti
xchg
cmc
and
je
inc
xchg
cmp
and
and
ljmp
idivb
mov
stos
mov
xor
push
and
mov
jbe
jl
roll
int3
mov
push
mov
or
adc
repz
jg
push
sub
stc
mov
cmp
mov
push
pop
cmp
add
clc
cmp
inc
lds
mov
pop
ret
std
xchg
test
push
shrb
movsl
jo
adc
jne
add
cld
and
fcompl
xchg
es
cmpsl
iret
imul
jns
mov
std
jnp
pop
loope
mov
fwait
test
xor
clc
out
cwtl
mov
rolb
lahf
sub
fistpll
sub
ss
shlb
movsl
cmp
inc
mov
jnp
rolb
xor
jle
mov
int3
mov
inc
or
sbb
scas
ret
inc
sahf
pop
mov
int3
mov
imul
dec
jo
jae
ja
cmp
hlt
shlb
js
xchg
inc
fdivrs
sbb
push
fdivp
rorb
aas
out
cltd
add
inc
xor
xor
bound
xor
or
mov
xor
dec
push
test
gs
jns
mov
fsub
pop
sbb
mov
pushf
xchg
fs
mov
and
fmul
shlb
ds
adc
mov
addr16
aad
int
pop
inc
jae
mov
in
push
js
mov
pop
das
imul
in
mov
xlat
leave
pop
mov
and
divl
sbb
out
adc
add
jne
inc
shr
xchg
push
std
les
addb
jnp
mov
out
fdivs
outsl
xor
dec
xchg
popa
adc
andl
mov
jle
pushf
jmp
adc
pop
dec
test
aas
in
mov
mov
xor
sub
imul
pop
fists
cli
loopne
mov
bound
mov
push
sbb
mov
pop
inc
push
push
xor
cmp
mov
sbb
cmp
repnz
inc
rolb
xor
sbb
push
jmp
dec
out
jl
cltd
aaa
and
jecxz
push
xchg
dec
inc
gs
adc
out
mov
mov
cmp
ret
fstl
mov
cmpsl
push
jae
out
rorl
adc
sbb
xorl
mov
scas
pop
xlat
mov
jge
pushf
call
lods
and
into
or
mov
out
js
mov
cmp
ds
xchg
out
lods
pop
cmp
dec
jp
ja
xchg
imul
lret
adc
pop
adc
fcoms
jo
and
imul
dec
xchg
popa
and
mov
les
pop
test
aas
loop
push
xchg
fcmovnb
xchg
xchg
adc
stos
or
cmpsl
inc
pop
shll
rcr
jnp
xchg
pusha
adc
xchg
and
pusha
add
cli
inc
mov
cmpsb
sub
call
and
adc
xchg
rcrb
cmp
sbb
cmpb
cmp
mov
icebp
push
cmp
out
imul
lods
and
mov
int
add
jns
pop
cmp
hlt
or
test
cltd
lret
movsl
and
or
jle
ds
jb
addr16
jo
dec
inc
mov
push
nop
mov
cmp
sub
cli
xchg
adc
cli
push
mov
or
mov
pop
in
cmpsl
jns
test
icebp
mov
das
fistps
or
sbb
mov
dec
cwtl
scas
add
mov
push
push
xorl
jo
out
cmp
fimull
push
sbb
test
test
cmpl
sbb
push
outsl
pop
sub
fcomp
std
mov
addr16
pushf
mov
or
pop
jo
jne
mov
xchg
test
lds
mov
or
dec
sbb
insl
sub
stos
popa
shrb
dec
cs
in
bound
mov
leave
sub
jp
sbb
or
add
mov
lret
arpl
add
aas
ror
imul
rclb
adc
ja
dec
add
mov
jo
pushf
lret
repz
test
pop
inc
add
pop
testl
outsl
cmp
pop
push
cmpl
xchg
xor
mov
dec
push
fistps
xchg
jnp
jmp
hlt
pop
and
fisubrs
mov
push
mov
xchg
mov
push
pop
inc
test
out
into
dec
sbb
loope
pop
in
jp
repz
out
stc
jne
push
pop
cmp
or
jnp
rorb
adc
aam
add
or
sahf
out
dec
out
jge
push
in
push
xchg
daa
popf
sub
pop
fs
or
arpl
outsb
lret
push
clc
int
dec
mov
add
stos
sub
movsl
les
mov
push
enter
add
push
xor
imul
shll
xchg
push
mov
loop
cmc
mov
xchg
loop
mov
roll
jp
cmpb
ja
cmpsl
xchg
popa
lret
jmp
or
arpl
out
outsb
arpl
outsl
sub
fiadds
scas
fsts
mov
push
jns
jg
or
inc
popf
loope
dec
push
mov
ljmp
pop
cmp
sbb
aas
xlat
xor
jno
push
sub
lcall
repnz
xchg
aaa
outsl
movsl
sub
or
sbb
pop
lods
xor
pop
and
gs
dec
xchg
clc
add
or
dec
mov
cmp
inc
fs
jp,pt
aas
bound
jmp
mov
test
popf
lahf
notb
mov
mov
adc
jmp
sub
ret
pusha
mov
pop
and
iret
sbb
lret
mov
rorb
add
test
jp
repnz
push
mov
gs
adc
xchg
pop
and
jbe
dec
stos
stos
mov
sub
bound
push
pop
mov
push
dec
xor
xchg
out
fstl
cli
xrelease
hlt
or
lea
scas
or
lret
fwait
dec
mov
inc
mov
sbb
fcmovnb
mov
aaa
add
faddl
aad
sti
inc
inc
pop
cmp
jb
sub
and
cs
iret
nop
push
int3
xchg
bnd
or
scas
shlb
pop
insl
push
in
or
mov
fs
jg
int3
mov
iret
orb
jb
in
shlb
into
xor
ficomps
rolb
adc
cmp
cmp
mov
ss
cmc
imul
adc
test
rcrb
pop
int
inc
pop
clc
addr16
push
insb
icebp
jl
sbb
xchg
mov
push
cmp
movsl
and
cltd
stos
xchg
dec
out
insb
lret
xchg
faddl
dec
xchg
sahf
push
inc
adc
stos
into
in
in
xor
jg
jne
cmpsb
test
pushf
aas
das
outsl
cmp
sbb
adc
jmp
pop
loope
cli
pop
out
mov
sarl
push
sbb
imul
dec
out
pop
push
ss
push
xchg
jbe
pushl
mov
push
xor
mov
jge
adc
sbb
movsl
pop
mov
dec
cmp
insl
lcall
rcr
xorb
inc
xchg
mov
mov
or
orb
add
out
jne
inc
or
ljmp
sbb
jnp
mov
or
scas
int3
mov
add
xchg
xchg
xorl
fucomip
fildll
xchg
lcall
lods
mov
les
push
pop
idivl
xchg
into
push
repnz
cs
dec
movsl
adc
add
xchg
fnstsw
pop
cmpsl
in
aaa
pusha
xchg
fdivrp
push
clc
cmp
ret
or
cli
xchg
inc
cmp
icebp
stos
fwait
jl
popl
ss
ret
xor
data16
xchg
cs
insl
jle
sarb
lea
imul
jecxz
loopne
push
sub
jae
jb
fdivl
ret
fidivs
pop
stos
aad
and
or
shl
xlat
lret
mov
mov
movb
jecxz
mov
stos
or
lods
mov
jno
aaa
mov
insb
cs
dec
jp
divl
out
pop
push
pop
data16
mov
mov
jne
cwtl
sbb
outsb
mov
jp
das
jg
and
push
cmp
in
adc
sbb
adc
movsl
leave
push
dec
mov
sbb
sub
shl
int
pop
pusha
xchg
scas
idivl
inc
pop
push
idivb
jge
sbb
mov
xor
and
or
std
and
repnz
adc
push
cld
mov
mov
fadds
lret
pop
adc
jecxz
or
aaa
dec
dec
aam
mov
sub
jns
cltd
sub
cmp
xlat
mov
inc
dec
or
mov
jle
add
cmp
jle
cmpsl
jne
incl
pushf
lods
dec
daa
test
mov
jg
dec
es
jns,pn
xor
inc
in
and
dec
lret
iret
mov
jae
outsb
and
into
in
test
mov
mov
sbb
mov
mov
mov
add
scas
mov
aas
push
test
mov
dec
sbb
jo
fimuls
and
inc
cmp
adc
stos
imul
push
fadds
pop
aam
addr16
push
and
imull
ja
jmp
shrb
sti
xor
mov
test
test
movsl
sbb
xorb
insl
arpl
jge
pop
dec
insl
add
cmp
push
cmp
cltd
mov
sbb
mov
push
mov
push
push
cli
fcmovu
inc
lret
inc
or
jg
fs
shrb
or
pusha
xchg
and
xchg
adc
cmp
test
dec
aaa
push
xchg
lcall
ret
sub
ljmp
jg,pt
and
jo
int
mov
outsb
in
add
ja
add
imul
dec
out
cmp
mov
call
jge
pop
mov
adc
test
cmp
fsub
inc
setp
fcomi
and
push
mov
aas
xchg
mov
aam
xchg
mov
into
sbb
mov
mov
push
pop
ret
push
ja
mov
ds
adc
cs
jnp
imul
scas
pop
jmp
sti
mov
dec
sub
mov
and
pop
pop
mov
or
push
dec
or
loopne
clc
lret
popl
lcall
fistps
push
pop
js
xchg
lret
test
push
adc
dec
sbb
push
mov
repz
jne
cmp
pushf
jo
js
pushl
sbb
ret
jge
in
jg
nop
lock
xchg
mov
std
aad
imulb
test
add
sub
add
lcall
imul
pop
test
arpl
lods
shrl
lods
fld
leave
sbbb
xor
xchg
into
cli
add
lcall
and
test
inc
out
sbb
stos
cmc
mov
xchg
push
aas
lock
sbb
ljmp
add
cmpsb
inc
add
cmp
push
or
dec
lods
inc
fisubrs
insb
test
stos
stos
mov
test
cmp
lock
sti
xor
cmp
push
or
and
int3
xor
add
stos
loope
sub
cmpsl
mov
cmp
pop
mov
or
and
cltd
idivb
sub
cmp
push
and
lods
shll
push
mov
in
dec
pop
popa
in
out
cli
cmp
push
jg
aad
jnp
out
add
inc
inc
lret
adc
xor
xor
ret
adc
ror
fwait
dec
xchg
adc
shlb
popf
call
jne
fnstenv
stos
jmp
out
jae
lcall
popa
stc
fwait
lds
rorl
pushf
cmp
movsb
hlt
iret
and
leave
pusha
push
aad
arpl
cmp
pop
cmp
mov
cltd
sbb
insb
mov
das
mov
insb
push
pop
adc
test
push
mov
fcmovnbe
fdivr
adc
lock
sahf
lods
xchg
in
and
push
dec
stc
push
and
and
jp
dec
ficompl
cltd
repz
aas
in
out
mov
mov
push
adc
push
int3
out
mov
and
add
inc
jp
addr16
pmaxsw
pushf
xchg
cwtl
adc
jns
jb
or
or
sbb
ret
jg
jne
mov
popf
aam
mov
or
repz
dec
xor
repnz
sahf
outsl
inc
add
aaa
ret
mov
push
ret
pusha
aad
mov
imul
push
lahf
cwtl
test
push
cmp
push
push
insl
adc
daa
in
push
fadds
xchg
fmuls
int3
insb
adcl
scas
arpl
xchg
icebp
ds
cmpl
adc
pop
pop
xlat
mov
jnp
cmp
fsubp
jno
mov
inc
jae
xor
and
cmp
inc
add
and
insl
idivl
inc
pop
and
cmp
imul
fs
into
jb
inc
and
push
sub
arpl
jge
mov
test
loope
rclb
push
data16
push
dec
mov
and
jecxz
lods
aam
push
fiaddl
cmpsb
cmc
push
mov
test
loope
repz
pusha
jecxz
pusha
xchg
stos
jmp
jnp
add
inc
sbb
popf
outsb
movsl
add
cmp
test
rorb
repz
mov
mov
outsb
jno
negb
dec
cwtl
and
stc
aas
inc
pop
sahf
mov
out
mov
dec
fnstcw
adc
shlb
sub
arpl
cmpsb
mov
js
mov
dec
movsb
rcl
aam
dec
ret
enter
mov
jle
jnp
imul
sahf
push
cwtl
jbe
jo
popa
pop
dec
dec
pop
test
aam
jl
in
aas
jnp
inc
mov
or
dec
mov
xchg
xor
mov
or
jmp
mov
andnps
push
push
js
out
or
or
lods
movsb
ljmp
shrb
jecxz
add
pop
lods
dec
popa
bound
sub
vmwrite
loop
in
icebp
dec
pushf
sub
in
fisubrl
adc
inc
or
ja
std
nop
call
sbb
mov
fisttpl
mov
xchg
out
sub
adcb
cmpsl
loop
fiaddl
sbb
jge
and
int
test
scas
mov
into
filds
inc
push
xchg
jno
pop
inc
sub
and
add
push
hlt
mov
out
mov
jl
fnsave
adc
ret
ss
lock
rcrb
dec
push
sub
sbb
jnp
lret
dec
sbb
sbbl
fisubrs
sar
jbe
imul
inc
dec
in
addb
ljmp
bnd
mov
mov
mov
mov
dec
cmpsb
adc
aaa
rcll
or
xor
dec
sbb
pop
je
mov
and
xchg
xchg
dec
lods
adcl
je
mov
push
lods
jns
lahf
dec
testl
aaa
pop
jae
lret
push
xchg
sbb
add
xchg
ret
ja
adc
nop
outsb
sar
cmpsb
sub
sbb
jno
dec
adc
fcoms
test
jp
mov
mov
jge
leave
stc
in
inc
bound
mov
mov
mov
adc
or
lock
lds
cmp
stos
in
testl
push
aas
adc
mov
mov
sbb
jns
add
jp
inc
stos
pop
cmp
clc
inc
clc
or
jge
inc
mov
jmp
sbbb
inc
in
push
lods
sbb
int3
jne
xor
fldt
mov
fsub
cmp
enter
ret
bound
mov
inc
scas
xlat
roll
push
pusha
xchg
and
jmp
push
aad
push
xchg
or
xchg
loope
add
xor
es
inc
or
sub
inc
sbb
repnz
stc
adc
in
addb
push
fimull
adc
inc
outsb
testb
xor
cs
push
or
lret
enterw
push
mov
icebp
and
jne
inc
mov
gs
cmp
or
sub
jg
stos
movsl
fsubs
inc
push
cmp
add
cltd
push
aam
inc
push
cmc
jns
ret
pop
add
pop
cmp
xchg
stos
sbb
rcrl
add
push
or
aaa
add
out
movsl
jl
push
mov
out
hlt
cmp
sbb
hlt
movsb
or
jl
push
xchg
or
mov
aas
xorw
fstps
dec
into
cmp
inc
pop
xchg
mov
xor
push
xadd
outsb
scas
and
lock
flds
mov
scas
sub
and
mov
ret
ja
hlt
jns
in
arpl
lock
bound
ret
rorl
add
dec
mov
or
nop
test
jmp
cwtl
outsb
mov
lods
cmpsb
adc
lahf
cltd
int
mov
into
out
mov
cmp
lods
outsl
or
mov
mov
pop
loopne
fdivrs
test
jns
stos
scas
cmp
mov
aaa
test
dec
into
fcmovnbe
mov
or
lahf
push
add
out
roll
cmp
pop
push
loopne
rolb
cmpsb
mov
arpl
adc
adc
sub
pop
sbb
dec
jb
outsb
icebp
sti
and
test
subb
outsl
loopne
ret
enter
ljmp
fcompl
jmp
cmpsl
or
ja
add
sbb
arpl
rcrl
outsl
xchg
sbb
imul
outsb
push
outsb
aas
mov
ja
out
out
push
add
iret
test
and
out
pop
adc
mov
adc
out
push
push
nop
mov
fistpll
pop
inc
or
ror
lea
inc
push
lcall
popf
test
mov
cmp
sub
loopne
mov
loop
xor
aaa
inc
xlat
sbb
dec
and
fsts
pop
ret
pop
loop
lidtl
fs
xor
mov
mov
add
push
or
mov
and
mov
cmp
and
lret
fwait
mov
inc
inc
xlat
push
or
xchg
aaa
fsts
fdivl
fstps
sub
cmpsl
insl
fdivrs
mov
xchg
fsubrl
call
pop
mov
frstor
xchg
xor
sarl
iret
or
dec
dec
jb
faddl
mov
ja
mov
nop
sub
xchg
loop
enter
sbb
jmp
leave
xchg
and
js
aam
sbb
mov
pop
mov
xor
ror
fcoms
call
add
cmp
out
pop
lcall
and
cmovae
cld
inc
ljmp
sbb
dec
sub
mov
jne
xor
fnstenv
inc
pop
and
ret
and
pusha
jle
int3
or
in
jecxz
cli
fisubs
sub
in
jmp
div
insl
add
mov
out
ret
cmp
jae
cli
sahf
addr16
xchg
popa
sub
fdivrs
xchg
cmp
pop
pop
das
xor
adc
test
jae
leave
dec
pop
int
pmulhw
out
dec
fdivrs
test
icebp
insb
cld
cmpsl
movsb
stos
sti
inc
mov
pop
jo
dec
dec
arpl
cltd
pop
dec
mov
mov
aam
sbbl
adc
cmpb
ss
adc
sbb
adc
rcrl
dec
sub
in
sub
push
ret
aaa
push
nop
push
ds
test
mov
dec
jecxz
cmp
loop
int3
add
jmp
lahf
mov
push
into
fmull
pop
leave
mov
fldenv
push
sbb
adc
shrb
lret
push
jno
in
sbb
cmp
aaa
stc
loop
push
out
mov
jns
cmp
test
addr16
sbb
imul
jp
cwtl
jmp
adc
out
or
pop
cmp
subb
xor
mov
aaa
jmp
stos
mov
cmp
ret
test
jne
loop
jl
dec
jb
shrl
clc
lret
aam
inc
ja
sbb
sub
imul
mov
shll
fistpll
mov
mov
pop
daa
std
mov
jae
mov
popf
fmull
cmp
mov
dec
push
fiadds
lods
cmp
pop
movsl
cmp
mov
xchg
dec
sbb
cmpsl
cwtl
cmpsl
mov
scas
and
xlat
cmp
loop
adc
pop
sahf
lret
or
and
sbb
cmp
lret
xchg
adc
int3
outsb
xor
sub
shrl
in
shl
jns
inc
pop
in
mov
sbb
xchg
cmp
ds
push
icebp
push
js
dec
pop
stos
inc
xchg
sbb
xchg
cltd
cmp
mov
or
imul
icebp
mov
fistpll
in
jl
lds
mov
imul
lds
sbb
and
sbb
pop
aaa
xchg
daa
pop
loop
ds
int3
inc
mov
xchg
lock
pop
mov
std
ss
mov
div
or
iret
in
ljmp
xchg
loopne
lock
sub
popf
adcb
mov
cwtl
sub
mov
out
mov
inc
ret
push
xor
js
sub
inc
out
push
shrb
cwtl
les
push
cwtl
xchg
mov
out
addr16
fbstp
clc
das
pop
and
ret
stos
insl
cld
ljmp
or
push
inc
fucomi
cs
test
xchg
push
fs
jbe
loopne
ljmp
pop
sub
sti
add
insb
movsl
roll
mov
sbb
lock
aas
leave
sub
cmp
les
int3
jns
in
xchg
or
cmp
fldpi
and
jge
xchg
sbb
jle
subb
dec
movsb
mov
jmp
cs
push
and
dec
jmp
inc
cmc
cltd
pop
bound
mov
insl
fs
mov
jle
inc
out
inc
lods
sub
mov
sub
or
cmp
mov
jl
jg
aam
test
call
or
and
or
pop
lret
shll
cmp
sbb
cmp
fldcw
pushf
sbb
ficomps
add
shrl
xchg
sub
mov
mov
ficoms
jp
jecxz
jle
push
nop
test
mov
inc
fs
mov
insb
pushf
out
cmpsl
xor
popa
dec
movsl
inc
dec
test
push
loope
lea
test
loopne
leave
pop
loop
jae
adc
pop
jbe
fisubrl
sub
adc
add
fs
and
fdivrs
orl
and
ret
ja
fsub
fisubl
cmpsb
stos
inc
add
pop
mov
dec
sbb
clc
pop
popa
mov
mull
jns
mov
pop
test
loope
xchg
cs
stos
in
movsl
rorl
mov
pop
inc
mov
dec
pop
push
ror
and
mov
sbb
inc
mov
stos
popa
roll
out
or
add
add
pop
sbb
incl
ljmp
ja
flds
and
jp
dec
or
cmp
subb
sahf
fbld
adc
dec
or
sbb
les
xchg
lret
leave
or
or
sbb
pop
cmpsl
shlb
jmp
int
inc
jmp
sub
fidivrl
xchg
adc
jo
inc
mov
cltd
pop
dec
push
addr16
imul
ret
xchg
insb
inc
mov
ljmp
dec
or
sub
pop
cwtl
negb
cltd
repnz
std
insl
orb
cli
cli
xor
mov
iret
mov
sahf
rcll
dec
filds
cli
ja
cs
mov
loope
sbbl
sbb
inc
and
data16
mov
sub
out
jnp
pop
or
xchg
xlat
mov
mov
es
mov
lea
push
pop
jecxz
cmc
cmp
in
outsl
jg
dec
int3
adc
jbe
xchg
add
dec
sbb
xor
ret
add
addr16
je
xchg
and
cli
ljmp
jmp
jle
lods
incl
sarl
mov
and
add
mov
mov
out
push
pop
sarb
addr16
repnz
xchg
and
sub
lahf
add
fs
ret
jp
movsl
shl
cmp
jae
xor
test
dec
sub
push
lret
loop
mov
mov
iret
pop
mov
mov
ljmp
loop
sahf
rcll
jne
mov
cmp
icebp
inc
pop
pop
movsl
aam
xchg
scas
push
and
pop
fistps
dec
out
shll
xchg
insl
dec
ja
fmuls
or
sub
and
xor
sbb
popf
add
xchg
mov
sbb
push
push
jl,pt
jb
push
xchg
xchg
out
stos
sbb
jmp
xchg
stc
das
xchg
and
fld
test
scas
cmc
sbb
xchg
xchg
imul
xor
inc
xchg
into
xchg
sub
and
iret
xchg
adc
sahf
adc
stos
cld
xchg
inc
push
stos
sbb
inc
mov
adc
pushf
push
cmp
fwait
mov
lea
imulb
xchg
out
jl
jmp
pop
jne
jge
aaa
dec
pop
cld
insl
pop
sub
cmpsl
enter
cmp
mov
or
pop
dec
hlt
lods
hlt
pop
repz
dec
inc
fisubl
jns
xchg
sbb
or
les
dec
cmp
das
insb
dec
inc
pop
push
sub
mov
pop
inc
pop
mov
fidivrs
arpl
in
inc
subl
cmp
movsb
push
mov
inc
arpl
xor
jmp
cmp
in
xor
sub
mov
call
dec
xchg
mov
sub
sbb
es
cmp
bound
stos
rcll
movsb
dec
mov
sar
ret
movsb
add
fldcw
jg
xchg
inc
pop
mov
mov
rorl
sbb
loope
notb
cwtl
js
scas
popa
stos
xor
push
cs
rolb
data16
ds
sub
inc
stc
xchg
inc
lahf
pop
mov
dec
cmp
scas
gs
and
pop
add
loope
shlb
cli
and
inc
pop
aas
ret
xchg
xlat
hlt
outsb
mov
xor
mov
and
stos
sbb
mov
adc
push
mov
mov
mov
dec
pop
sbb
mov
shrl
cmc
pop
and
adc
test
and
mov
aam
pop
ret
iret
mov
and
frstor
popf
jae
mov
xor
ss
std
jne
xchg
shll
jae
add
js
cli
add
stc
fisubl
cmp
xlat
repnz
repz
jo
in
popf
in
cmp
sub
dec
jno
push
add
cmc
push
or
into
aas
push
add
xchg
mov
mov
adcb
pop
scas
fstpt
sbbb
imul
pop
enter
icebp
xor
push
movsb
mov
fisttpl
lcall
sub
pop
popa
lds
sub
pop
popf
fsubp
pushf
cmp
test
lods
xchg
mov
dec
insl
sbb
push
pop
stos
icebp
jns
fwait
aam
add
fwait
roll
sbb
jecxz
addr16
mov
cmp
and
fmulp
dec
or
pop
push
movsl
pop
xchg
ret
icebp
mov
mov
sbb
clc
lret
inc
bound
jno
or
clc
fdivrl
shlb
stc
jne
icebp
dec
mov
iret
scas
int3
cmpsb
shr
mov
aam
cmpb
dec
inc
cmp
add
fisttpll
call
cmc
mov
sub
aad
adc
pop
push
stc
movb
pop
push
cmp
jl
sub
xor
dec
cmc
icebp
test
xchg
jno
rcrb
cmc
jge
icebp
inc
mov
jae
cmp
cmp
push
loopne
dec
pushf
out
jle
jle
jge
orb
shlb
ja
nop
add
into
xor
dec
jl
shrb
mov
hlt
pop
stc
xchg
fcompl
sarl
cmc
and
xor
push
cmp
xchg
jecxz
mov
rclb
jecxz
mov
mov
xor
pop
aam
les
sub
sarb
ror
popaw
cmpsl
mov
mov
mov
cmp
sti
rorl
jle
aam
pop
mov
pop
hlt
pop
xor
xor
shrl
inc
bound
frstor
iret
mov
mov
mov
mov
jge
out
pop
xor
dec
or
xchg
xlat
addl
int3
jb
lock
cltd
xchg
leave
inc
push
divb
or
fistpll
hlt
push
scas
adc
imul
jns
test
push
sarl
popf
scas
movsl
scas
fsubrs
mov
sbb
sub
inc
in
int3
xor
sub
jg
loope
dec
popa
mov
mov
jns
mov
mov
push
addr16
out
aad
pop
xchg
push
push
lcall
inc
fsub
cltd
pop
ss
ss
insb
lret
into
fldl
in
xchg
cmp
js
or
add
incb
loope
inc
or
int
cmp
dec
pop
sub
and
outsb
xchg
scas
icebp
les
and
icebp
mov
shlb
fadds
pop
dec
pop
ds
hlt
mov
in
pop
push
add
mov
adc
pusha
lds
pop
xor
adc
mov
out
lea
or
add
loopne
adc
aam
das
je
jb
mov
jnp
mov
fists
in
pop
pop
dec
shl
mov
jae
and
sbb
scas
mov
mov
inc
inc
adc
ss
adc
leave
sti
and
std
ljmp
les
push
add
scas
jne
insl
and
and
mov
push
das
adc
and
mov
xchg
popf
add
adc
cmpsb
xlat
dec
mov
pop
xorl
outsb
out
sbb
cmpsl
sub
inc
aam
ret
outsb
cmp
stos
sbb
jne
xor
push
aam
jge
imul
scas
add
fdivl
cmp
jno
add
xor
cltd
and
cmpsl
mov
ret
pop
dec
inc
xchg
pushf
jae
imul
and
imul
std
or
pop
cld
iret
lds
xchg
lret
cmc
push
sbb
mov
clc
mov
sti
fcmovne
cmpsl
mov
fsubs
rdtsc
dec
test
xchg
outsl
mov
fcoml
rolb
mov
sub
mov
flds
arpl
arpl
cld
or
fcomps
rclb
outsl
inc
mov
or
outsb
or
js
dec
call
daa
mov
cmp
push
mul
mov
pop
pop
add
cmp
adc
push
xchg
fldenv
inc
adc
subb
mov
sub
fsub
daa
inc
test
aaa
mov
pop
xchg
cmpb
adc
push
or
stc
std
je
xor
into
pop
xor
rcrb
jne
orl
dec
clc
xor
mov
cwtl
xor
jge
sub
ret
mov
bound
or
dec
out
imul
mov
call
aas
je
sub
and
leave
add
pusha
add
dec
into
adc
push
mov
dec
add
and
adc
sbb
popf
vmovss
adc
adc
idivl
movsb
jae
scas
pop
push
sub
mov
mov
jecxz
sbbl
dec
roll
sbb
aad
sbb
ror
test
mov
imul
aas
ljmp
push
es
xlat
rolb
push
addr16
dec
jo
dec
jno
jno
addr16
ja
lahf
add
cmp
add
rcr
sub
out
adc
jmp
mul
cld
jecxz
pop
nop
mov
test
cs
leave
sbb
add
fldcw
hlt
inc
adcb
xchg
xchg
fisttpl
dec
sbb
sub
and
cmp
push
lock
cli
xchg
xchg
xchg
sub
cmp
mov
pop
lods
mov
jbe
add
xchg
enter
push
es
pushf
jmp
mov
add
push
cmp
out
mov
test
lahf
and
ljmp
inc
mov
ret
xchg
cmp
sbb
sub
mov
jmp
adc
jge
cmp
sbb
lods
sbb
jbe
xchg
fdivr
cmp
test
in
es
and
mov
lret
and
out
out
lods
hlt
dec
loope
test
lahf
fisubrs
inc
add
pop
cmp
xor
or
loop
int
mov
cmp
cmp
cli
inc
into
loope
dec
or
xchg
pop
aam
pop
cmp
out
lock
in
orl
ja
je
xchg
mov
dec
mov
loop
add
pop
call
leave
dec
addl
incb
loopne
pop
xor
adc
dec
scas
out
shl
out
insl
cmp
pop
or
xor
fisubs
fdivs
in
xlat
pusha
mov
stos
jecxz
mov
mov
sub
add
stc
inc
scas
lea
mov
sahf
pop
cmp
iret
cmp
and
repz
mov
xor
fldcw
mov
jns
sbb
sbb
add
xchg
fidivrl
insb
push
test
jle
lret
jnp
push
sti
out
ds
or
xor
iret
int3
fs
test
std
andb
sbb
and
push
dec
idivl
or
inc
pop
outsl
mov
jp
ja
ds
dec
mov
aam
pop
pop
lahf
sbb
arpl
bound
sbb
xchg
mov
andl
ss
pop
xchg
or
and
xor
pop
imul
xchg
sbb
movsb
cmp
cmpsl
jb
push
bound
dec
std
addl
stos
cmp
call
icebp
sbb
loope
fisttps
gs
mov
sbb
mov
add
add
test
bound
pop
xor
cwtl
mov
mov
aas
mov
fisubs
sbb
aad
and
mov
and
test
xchg
adc
add
dec
jmp
xor
adc
dec
cs
or
das
xor
cmp
dec
sbb
add
add
cltd
imulb
insb
fcoml
inc
lods
mov
push
mov
int3
mov
sbb
jo
xor
insb
xchg
out
sub
cmp
pop
daa
fnsave
das
adc
out
sub
outsl
or
nop
xor
sbb
clc
inc
ror
or
lods
mov
enter
pushf
pop
mov
mov
pop
out
movsl
lcall
sbb
out
popf
imul
xor
addr16
lcall
lcall
xchg
pop
jmp
jg
rcl
cmp
xchg
xor
stos
jmp
jmp
lds
jb
cmpsb
shr
in
fwait
je
push
inc
fsubl
pop
jne
mov
xchg
sub
sti
subl
lods
cmpsl
and
ja
mov
enter
lods
add
inc
call
ja
inc
mov
xor
rolb
mov
sbb
lahf
cs
dec
aas
js
add
inc
sti
mov
push
in
fbld
lock
jnp
divb
jg
lods
jmp
sbb
fidivl
aam
out
std
adc
pop
out
push
movsb
repz
jnp
sbb
cmp
or
lock
add
movl
pop
aaa
daa
test
mov
lock
lock
cmpsb
daa
lds
fidivrl
xlat
pop
adc
push
or
mov
scas
dec
or
das
stos
lret
das
push
jmp
cmp
jge
mov
mov
ret
xor
mov
mov
fsubrs
test
push
xchg
mov
cld
dec
xchg
pop
sbb
add
decb
test
je
mov
out
push
cmp
ficompl
sbb
adc
push
outsl
fdivl
cmp
std
lcall
je
push
dec
add
loop
pop
mov
lea
roll
mov
mov
pushf
movq
inc
loope
inc
aam
mov
insl
sub
rorl
mov
and
dec
add
add
cwtl
fcomi
shll
mov
inc
adc
cmp
xchg
nop
add
icebp
add
sbb
mov
lds
loope
pusha
aaa
aam
enter
enter
fsubs
pop
or
rclb
pushf
xor
sbb
outsb
shrl
cwtl
mov
mov
dec
test
xchg
pop
push
iret
in
js
sub
es
push
sbb
xor
pushl
jne
subl
inc
inc
mov
add
push
add
sbb
xchg
call
inc
jo
mov
jl
std
xor
jge
jne
movsb
cs
cmpsl
mov
out
js
fcmove
sahf
xchg
add
push
movsl
sbb
jmp
fcmove
into
mov
call
imul
imul
dec
mov
cmp
adc
push
inc
cltd
or
fstl
dec
push
or
das
outsb
testl
adc
test
iret
icebp
lret
fisubrl
push
pop
jg
popa
pop
sub
adc
stos
rcll
sbb
cmpsb
fists
jge
repz
xor
loope
in
and
xor
sbb
cmpsl
jns
cltd
rcl
cmp
fpatan
dec
cmp
imulb
pop
cli
shlb
lods
bound
rclb
xchg
add
sbb
mov
pop
dec
mov
sbb
mov
mov
add
fwait
lcall
inc
xor
push
jnp
xor
sbb
mov
or
inc
arpl
decl
out
enter
jmp
cmp
pop
in
lret
out
jnp
stos
leave
scas
repnz
jnp
push
push
sub
jg
inc
xor
lret
push
pop
xchg
pop
fsubs
popl
mov
and
jg
addr16
enter
sub
sub
adc
push
fdivl
std
and
push
push
out
cmp
adc
lahf
pop
cmp
iret
sub
xchg
mov
int3
mov
xchg
rorl
jp
jae
ljmp
clc
lods
lds
cmp
lret
add
lret
mov
xchg
xchg
sbb
mov
sub
sbb
dec
inc
mov
and
pop
add
dec
roll
dec
repz
xor
sbb
push
repnz
mov
push
icebp
pop
in
pop
adc
mov
into
data16
pop
inc
sub
repz
and
jbe
mov
mov
bound
cwtl
enter
pop
mov
cmpsb
sarb
out
pop
inc
add
in
mov
dec
sub
sub
dec
pop
sarb
mov
in
inc
ret
fisttps
xor
cli
mov
add
nop
fisttpll
xor
sbb
sbb
scas
aaa
and
ret
mov
std
dec
cmp
or
lret
pop
fabs
insb
popf
ds
std
pop
mov
xchg
cmp
xor
mov
stos
inc
adc
in
dec
inc
shll
sbb
in
arpl
mov
jmp
inc
in
enter
outsb
daa
ret
adc
sbb
pop
mov
pop
fmull
sub
or
and
push
mov
enter
inc
sbb
lea
je
sbb
adc
jne
test
dec
adc
pop
fadd
loope
sub
cltd
leave
sti
addb
clc
push
and
stc
ret
cmp
rcll
testl
cmp
mov
dec
ret
sarl
inc
inc
xchg
lcall
lock
mov
push
sbbl
cmp
push
sub
mov
xor
xor
inc
aam
push
in
cld
shll
ds
cs
add
imul
push
test
mov
stos
mov
dec
test
shl
and
or
inc
xor
sbb
push
or
sub
sub
cmpsl
mov
pop
cmp
loope
add
jl
cmpl
or
fstl
decl
fidivs
fisttpll
dec
pop
or
jg
dec
mov
sbb
jg
sub
ret
in
outsl
insl
add
jo
pop
outsl
loopne
pop
fdivrl
stc
in
xchg
rcr
mov
in
or
cltd
push
insl
jg
in
es
mov
in
dec
je
sub
mov
xor
aaa
cmp
dec
pop
test
dec
dec
lea
mov
lea
imul
and
setle
ss
push
popa
je
idivl
xor
cmp
mov
cmp
pop
lods
hlt
testl
sub
stos
in
mov
insl
leave
sbb
inc
jae
mov
add
push
loop
enter
sarb
xchg
fistpll
bound
jecxz
and
lahf
sti
or
and
sub
out
xchg
sahf
mov
mov
jecxz
repz
je
divl
pusha
add
divl
in
adc
xor
lea
insb
sbb
and
pop
imul
mov
cmp
in
test
cmp
out
sahf
daa
ljmp
jecxz
xchg
in
xor
pop
sbb
cli
fsubs
arpl
cmp
xchg
or
jecxz
mov
or
mov
daa
sub
repnz
push
aaa
loop
test
aam
and
lret
push
push
ljmp
sbb
pop
add
test
jle
dec
push
cld
fldcw
enter
push
pop
pop
xchg
cli
xor
outsl
pop
rcrb
aaa
cs
enter
inc
mov
xchg
inc
lea
xchg
addr16
int
mov
xchg
into
jno
inc
cmc
cmp
into
inc
mov
out
inc
inc
and
xchg
add
in
or
sarl
stos
pop
lcall
sbb
call
or
jbe
inc
pop
push
insl
scas
stc
mov
jb,pn
cmpsl
in
test
jp
adc
jne
cmc
or
push
into
lcall
cmpsl
and
lods
outsl
call
cmp
loope
int
mov
push
cmp
sbb
call
fcmovnu
dec
fwait
xor
xchg
push
pop
sub
adc
dec
test
pop
rcrb
imul
call
jp
dec
mov
scas
icebp
cmp
pop
sahf
nop
cmp
cmp
shrl
ss
pop
push
mov
jne
and
push
cmpsl
dec
inc
mov
mov
sub
pushw
movsb
xor
enter
add
stos
jne
scas
fwait
sbb
add
adc
mov
xchg
xor
xchg
dec
mov
filds
sub
lret
sahf
stos
ror
aaa
cmp
daa
xor
and
cld
mov
icebp
push
jge
stc
mov
data16
jp
repz
ds
push
lret
jns
adc
imul
ret
mov
test
scas
cwtl
or
pop
xor
sarb
es
sbb
add
out
and
pop
or
add
mov
shl
or
xchg
outsb
add
ret
dec
outsb
cmp
pop
cmpsb
push
and
pop
in
bound
lods
mov
pop
xor
rcll
xchg
outsl
mov
xor
iret
aad
movaps
mov
jbe
xor
push
das
pop
scas
fwait
sbb
mov
lods
repnz
and
xor
jnp
inc
jge
adcl
mov
xchg
imul
push
test
addr16
arpl
paddw
ret
pop
data16
xor
jecxz
shrb
repnz
popf
add
cmp
add
stos
movsl
rcrb
push
stos
rcll
ds
push
outsl
scas
sub
in
in
mov
pop
sbb
fs
push
repnz
xor
sub
and
dec
push
ss
lea
cltd
push
mov
mov
addr16
in
jbe
mov
add
dec
pusha
mov
sub
sub
sbb
or
lret
fldenv
icebp
test
inc
mov
push
xchg
inc
xor
imulb
sbb
insl
aam
mov
jnp
cmp
sbb
inc
mov
mov
ja
sbb
cmp
into
mov
mov
xor
test
mov
sbb
jae
jne
mov
call
inc
mov
xchg
pop
pop
lods
loopne
in
lahf
stos
jnp
dec
push
cmp
cwtl
mov
sbb
arpl
sub
je
in
lea
scas
sarb
repz
fsubl
test
jp
mov
xchg
out
pop
cmp
movsl
push
jbe
mov
iret
scas
sub
inc
xchg
in
jns
xchg
add
and
loop
or
jo
dec
test
xlat
cmp
cmp
inc
sub
mov
cmp
into
push
or
dec
rclb
mov
adc
push
idivb
fisttps
mov
sub
into
in
les
pop
mov
ljmp
test
and
add
cltd
and
aam
in
repz
mov
cmpsb
lods
bnd
xor
outsl
fucomp
clc
dec
jno
mov
aaa
push
mov
pop
hlt
out
gs
jnp
and
bound
gs
dec
pop
sub
ss
cltd
mov
testl
push
xor
lods
into
pop
push
xor
mov
movl
adc
in
mov
mov
cmpsb
jo
add
dec
adc
pop
jmp
mov
popl
outsl
ret
dec
aaa
jns
mov
repnz
pop
aaa
dec
test
pop
cmpsl
repnz
fisttpll
xor
mov
notb
add
enter
add
push
lds
lcall
cmp
mov
pusha
adc
pop
mov
push
fld
or
pop
xchg
hlt
roll
stos
imul
andl
pop
cmp
je
mov
test
test
mov
pop
pop
sbb
mov
xchg
loop
jl
test
mov
add
frstor
sahf
cmc
daa
fistpl
push
mov
arpl
sub
lds
daa
outsb
ret
and
cli
sub
gs
xlat
jl
push
fwait
mov
sbb
fiaddl
add
in
xchg
xchg
aam
sub
cmp
xchg
js
dec
ds
pop
add
cmp
or
lods
out
cmp
ja
lock
inc
dec
dec
xor
dec
dec
out
out
test
fnstenv
adc
cmp
lret
clc
sub
ret
inc
lock
mov
add
xchg
pusha
jmp
mov
xchg
mov
inc
add
xor
in
and
aaa
sub
mov
scas
adc
dec
cmc
stc
xchg
gs
jle
and
dec
cld
adc
dec
and
jae
pop
mov
pop
in
push
and
mov
imul
enter
cmp
mov
and
xor
clc
loopne
dec
mov
add
aaa
and
xor
mov
fsubrs
sub
dec
jae
lcall
movsb
stos
arpl
lods
mov
scas
xor
ja
mov
xchg
and
or
adc
arpl
cs
and
sahf
clc
pop
pop
nop
repz
test
orl
dec
arpl
idivb
dec
flds
mov
sub
lods
mov
mov
jo
lret
mov
dec
adc
mov
push
iret
test
dec
pushf
insb
jno
jmp
xchg
push
int3
stos
sti
movsb
loop
jno
xor
push
mov
mov
fists
jno
aad
cmp
mov
jecxz
pop
and
and
add
pop
sbb
loop
cmp
or
push
popf
iret
ficoml
shlb
test
add
or
adc
xor
jns
mov
or
sbb
clc
les
mov
pushf
imul
and
push
inc
pop
push
pop
dec
or
dec
adc
cmc
jp
mov
or
push
in
loop
mov
out
jae
mov
fimuls
dec
rorl
rclb
mov
andl
push
mov
xor
pop
cmc
in
sahf
xchg
fldt
sbb
arpl
mov
in
mov
insb
mov
dec
call
nop
inc
push
jnp
push
stc
scas
push
and
daa
loop
daa
loope
add
mov
fs
fs
jp
xor
mov
out
sbb
js
push
das
mov
mov
insb
jmp
push
and
mov
xchg
cmp
push
sub
imul
or
cs
js
push
dec
inc
xchg
cwtl
fcmovu
pop
jno
stos
je
rcl
push
push
jecxz
jbe
shll
out
cmp
mov
mov
push
sbb
je
adc
aad
sbb
push
add
push
dec
mov
lods
or
in
pushf
insb
lahf
clc
lcall
fsubl
inc
dec
insl
loopne
sbb
or
inc
das
inc
ficomps
sub
stc
pop
jne
popa
int3
daa
jp
sbb
pop
addr16
in
jbe
jae
inc
movsl
inc
mov
pop
arpl
push
xor
add
fldenv
imul
sbb
mov
shrb
scas
loop
dec
add
cwtl
adc
and
movsb
push
jnp
mov
loopne
enter
test
or
lea
xchg
addr16
jle
dec
int
fldt
pushf
pop
nop
xor
xor
jle
std
adc
jbe
xlat
inc
mov
dec
dec
arpl
sub
sar
aam
shl
sbb
xchg
and
hlt
stos
push
mov
mov
or
rorb
sbb
dec
add
adc
mov
scas
lods
repnz
adc
pop
sbb
mov
mov
xchg
inc
nop
mov
adc
xorl
fisubrs
icebp
and
aam
nop
jl
jg
dec
out
sti
push
out
xchg
out
insl
mov
jne
stc
js
test
jl
adc
mov
icebp
jo
test
jne
cltd
inc
mov
fcoml
es
cltd
xlat
popa
adc
mov
or
push
sub
imul
lahf
push
out
push
fstp
cmc
inc
lods
lods
jnp
mov
aam
aaa
leave
adc
test
pop
stos
mov
pusha
fisttpl
scas
je
lret
xor
imulb
add
int3
mov
push
aam
xor
push
negb
mov
test
rol
scas
aaa
jmp
jnp
ss
mov
jae
push
ds
push
xlat
sbbl
xor
cmp
cli
stos
mov
sahf
cltd
outsb
xchg
out
es
xor
mov
mov
scas
add
in
mov
inc
inc
push
fistps
ret
movsl
sbb
test
ret
int3
nop
movsb
sahf
ss
xor
mov
dec
andl
or
imul
ret
imul
roll
cmp
cs
mov
ja
fsub
mov
dec
and
arpl
push
lea
fsubl
pop
add
xchg
out
aam
sbb
int3
jo
movsb
cs
loop
pop
insb
mov
arpl
pop
pop
sbb
movsl
and
iret
pop
push
loop
in
dec
roll
out
in
outsb
repz
sub
mov
cmpsb
repz
fstl
sar
dec
cmpsl
jg
jbe
lods
push
inc
fucomp
jge
repz
incl
lods
jl
leave
stos
jl
dec
push
inc
stos
ljmp
or
popa
test
loop
lock
test
mov
in
andl
inc
ret
sbb
sub
push
lods
mov
pop
shr
mov
fnstenv
cmp
hlt
push
loopne
push
mov
xchg
and
push
imul
xchg
add
push
sbb
jb
inc
inc
pop
loopne
repnz
xor
loope
daa
mov
add
adc
jl
imul
xchg
mov
test
cli
xchg
mov
or
jns
iret
in
lds
jp
loopne
daa
xchg
fcmovnu
mov
xchg
popf
loop
div
inc
loopne
mov
cmp
ror
xor
jno
inc
xor
inc
jns
push
jp
mov
jecxz
mov
cwtl
pusha
jp
pop
int3
repnz
ljmp
adc
and
enter
test
lret
mov
cmp
ret
pop
movq
nop
xor
mov
dec
pushf
dec
subl
data16
cmc
aad
ss
inc
sbb
add
pop
mov
pop
fistpl
int3
imul
lahf
fs
jne
sahf
out
mov
stc
fists
enter
push
mov
loop
xor
fwait
sti
inc
push
cmp
fstps
lahf
dec
sub
push
mov
xor
push
jb
stos
dec
bound
or
pushf
cwtl
scas
jmp
jmp
add
pop
rorb
lods
mov
or
fwait
ret
out
mov
push
mov
pop
loope
repz
cmp
add
test
xchg
aas
sub
inc
cld
lcall
cmp
into
pop
std
xchg
or
xchg
jle
push
add
xchg
cmp
adc
rorw
inc
or
testb
insb
mov
loop
or
lea
scas
mov
push
xchg
add
daa
popa
pop
cmp
loope
inc
sbb
push
in
nop
or
mov
mov
pop
sbb
or
mov
add
xor
aad
mov
clc
addl
mov
insl
jne
or
lcall
jnp
leave
jbe
xlat
sbb
jo
ljmp
or
shll
lods
movsl
aad
xchg
or
xor
push
push
mull
gs
ja
jg
mov
dec
dec
mov
cmp
mov
and
xrelease
or
mov
pop
ljmp
mov
jg
ljmp
add
pop
mov
and
scas
push
insb
mov
sbb
out
jmp
push
dec
std
ret
sti
pop
lahf
outsb
cmp
push
pop
add
decb
jo
mov
mov
das
xchg
inc
inc
inc
cld
inc
jo
iret
std
in
arpl
dec
mov
jnp
xchg
popa
lcall
jno
and
ja
jns
and
negl
aas
adc
movsb
mov
dec
leave
data16
sbb
adc
sub
cmpsl
sbb
mov
packssdw
fldl
adcb
shr
nop
dec
inc
ja
mov
xchg
push
iret
dec
cmp
inc
xchg
sub
jb
stos
pop
sbb
in
cmpsb
insb
call
ret
and
mov
movsl
pushf
lock
adc
or
xchg
push
lods
cmp
push
push
fdivs
inc
or
addr16
dec
dec
push
es
mov
xor
fsubl
dec
push
popa
daa
aas
mov
jle
sub
adc
stc
fimull
sbb
ficompl
ds
fsubs
mov
sbb
mov
xchg
mov
dec
mov
iret
push
dec
imul
dec
sbb
fdiv
into
xchg
sub
pop
pusha
add
push
lea
aam
fcomps
push
inc
xchg
sbb
lea
fisubrl
shlb
sbb
and
and
mov
imul
inc
jo
lcall
push
stos
mov
and
inc
jp
push
rcrl
cmp
push
lcall
in
dec
lcall
xchg
cmp
pop
daa
lret
das
xor
stos
sub
mov
sbb
jb
xor
repnz
scas
jo
pop
out
mov
in
fimuls
xor
fdivrs
sub
mov
lds
fists
cmc
jo
test
in
mov
push
ja
int3
xchg
jnp
push
jg
jae
repz
shlb
cltd
jmp
mov
fcomi
jl
imul
mov
xchg
mov
and
pusha
xchg
mov
add
inc
sub
jecxz
outsb
js
mov
mov
pop
sbb
inc
mov
je
test
into
icebp
pop
fistpl
xor
ds
ud2
lock
cmp
push
in
int3
push
aad
jmp
movsl
insb
cmpsb
insb
pop
dec
xchg
push
ret
jnp
fiaddl
or
push
or
push
mov
in
adc
mov
fneni(8087
jecxz
test
dec
outsl
mov
aaa
add
mov
imul
sub
rolb
fs
je
loopne
dec
jo
fcoml
cs
push
add
xchg
movsl
popa
mov
mov
or
dec
inc
insl
stc
mov
cs
jg
cmp
loopne
xor
add
push
daa
shrb
notl
ss
insl
xchg
shrl
sbb
mov
mulb
pop
test
or
out
pop
pusha
mov
sub
jne
mov
xchg
sub
int3
jb
repz
cmp
sbb
mov
nopl
in
mov
push
pushf
xor
xor
int3
adc
repnz
inc
cmp
adc
fcmovnbe
ficoml
mov
inc
adc
fsubrl
or
mov
push
cmpsb
add
iret
int
stos
in
pushf
dec
sub
push
data16
das
sub
sbb
mulb
or
sbb
mov
sbb
and
cltd
movsb
movsl
repz
jbe
mov
sbb
stos
adc
add
stc
xor
adcl
sti
stos
or
lds
scas
xchg
fs
call
mov
movsb
lds
repz
add
cs
mov
dec
mov
jl
jno
sbb
and
mov
pop
ljmp
test
gs
movsb
ds
xchg
jecxz
adc
mov
in
ror
and
jecxz
pop
fstps
pusha
lea
cld
ljmp
outsb
jbe
int3
and
push
dec
sub
cmpsb
xchg
mov
xchg
dec
lret
xlat
xchg
mov
add
mov
adc
add
mov
cmpsb
into
repz
testb
xchg
jne
aam
jo
mov
adc
pop
and
xchg
mov
insb
mov
mov
push
jns
jp
xor
sub
inc
lods
in
scas
aaa
inc
inc
and
mov
or
add
mul
outsb
adc
xchg
sbb
or
and
ds
hlt
dec
in
push
mov
rclb
and
inc
movsl
and
push
mov
sbb
aad
repnz
mov
sbb
gs
sti
push
pop
mov
and
jg
into
push
fiaddl
inc
inc
cmp
fldenv
daa
stc
idiv
pop
popa
fsub
aad
or
inc
fcomi
movsl
sub
mov
pop
and
rolb
sbb
push
mov
jo
imul
popa
fwait
fwait
pop
insl
pop
push
mov
mov
dec
push
mov
add
sub
shlb
xor
out
fdivr
sbb
std
and
push
popf
or
test
xchg
cmp
ds
shll
xchg
divl
mov
stos
mov
shll
in
insb
js
sub
xchg
jnp
into
notb
or
shrl
xchg
decl
aad
mov
jo
pop
lods
mov
in
xlat
in
stc
inc
lods
xor
popa
push
sarl
inc
mov
adc
sbb
mov
out
jecxz
inc
rcl
in
mov
mov
adc
and
andl
repz
mov
stc
xor
xchg
popl
adc
push
mov
lret
leave
mov
neg
insb
mov
mov
rcll
cmp
pop
sarl
dec
push
mov
xlat
js
lahf
and
jge
flds
test
fwait
push
test
fsubrl
daa
negl
sbb
mov
fcomps
jno
jae
std
aam
and
mov
clc
das
test
sbb
arpl
or
aad
push
mov
cs
test
mov
or
call
aaa
sbb
mov
lret
cmpl
pop
ja
mov
shl
cmp
fadds
xchg
jnp
xor
cvtdq2ps
std
and
aam
in
loope
inc
push
ljmp
ficoms
cwtl
ret
fcoml
or
leave
in
jno
and
out
test
jge
mov
inc
mov
inc
push
jns
pop
sub
mov
inc
fildll
mov
shrb
pop
mov
pop
mov
mov
ljmp
xchg
rolb
test
sub
jnp
insb
inc
shlb
aaa
iret
jg
xchg
mov
fstps
or
fdivs
aam
mov
ss
outsb
xor
nop
filds
push
ja
pushf
jnp
xorl
int
pop
cmp
xorb
popa
fistps
in
mov
or
les
push
or
dec
xchg
out
call
nop
js
push
sbb
mov
dec
mov
mov
jge
ljmp
jno
mov
jecxz
fwait
ret
adc
mov
jne
hlt
aas
jge
shr
stos
lahf
pushf
jbe
out
lods
roll
es
mov
add
push
and
leave
or
mov
test
test
xchg
sahf
cmp
push
call
pop
imul
mov
aad
mov
or
ja
ret
fucom
incl
inc
or
add
and
add
cld
xchg
sbb
popf
pushf
push
sub
scas
or
mov
stos
cmp
fwait
popf
rcll
hlt
fcomps
adc
mov
jmp
xlat
or
pop
hlt
xor
push
test
cltd
inc
loope
sub
cmp
movsl
add
fucomp
xchg
xchg
aam
inc
std
fsubrs
sbb
gs
test
jb
add
pop
stos
jns
lret
test
orl
pop
xor
mov
js
or
cmc
mov
pop
sub
and
movsb
mov
and
and
in
jecxz
fbstp
adc
mov
test
out
adc
adc
int3
and
pushf
ret
adc
add
pop
es
inc
pusha
cmp
xor
lcall
mov
xchg
ljmp
or
ja
sbb
outsl
das
mov
push
pop
outsl
ficoml
test
and
and
mov
loope
mov
sub
in
jg
fadd
mov
inc
xorb
stos
mov
xchg
jb
cs
aam
adc
mov
sub
nop
jp
scas
arpl
xor
popa
or
push
lret
and
mov
inc
jmp
pop
lcall
std
outsb
insb
lcall
mov
stos
push
mov
xor
out
js
stos
bound
scas
lcall
xor
in
in
loope
dec
out
push
jnp
add
inc
lahf
lret
jg
push
or
in
sub
scas
cmp
or
pop
lock
loopne
sub
bnd
cltd
sahf
imul
and
xchg
fists
shll
mov
mov
icebp
es
orl
cmp
adc
xchg
mov
push
std
js
xchg
jp
int
jg
loop
int3
push
gs
pop
push
pop
dec
adc
bound
push
in
pop
dec
xor
push
sbb
xor
cmpb
test
ss
sbb
xchg
sub
sbb
xor
jbe
push
dec
pop
popa
sub
shlb
pusha
out
mov
jg
in
or
push
and
adc
add
cmp
cmpsb
jp
les
or
mov
xor
pop
mov
dec
movsl
ds
xchg
std
leave
repnz
cmp
into
je
sbb
sub
pop
scas
push
aaa
cwtl
in
jg
push
push
sbb
xor
imulb
ds
push
inc
test
push
aaa
cld
cltd
les
dec
movsl
inc
das
add
xchg
call
or
and
push
insl
push
cmp
xor
hlt
inc
inc
ret
andl
int3
cmpsb
and
test
les
ljmp
jmp
and
fisubs
push
pop
xor
pop
pop
pushf
jbe
pusha
test
and
push
pop
clc
sbb
push
inc
xor
shl
pop
cwtl
sti
mov
or
pop
inc
mov
sub
fsubrl
ret
add
test
and
mov
xor
and
divl
movl
adc
jns
jle
jle
mov
push
es
test
pop
inc
push
lahf
mov
pop
pop
mov
es
mov
dec
sahf
mov
daa
sub
jecxz
inc
mov
lahf
cwtl
cmpsb
pop
icebp
xchg
push
adc
popf
push
sbb
fucomi
or
in
cmp
cmp
ss
enter
push
scas
icebp
sub
enter
inc
add
mov
pop
or
mov
je
ds
cs
xchg
adc
jmp
cmp
imull
lods
pop
les
adc
pop
or
dec
push
push
push
dec
inc
fwait
cmp
dec
notl
jne
pop
shlb
adc
push
mov
pusha
jecxz
add
mov
and
mov
notb
movsb
mov
sub
dec
xchg
and
or
test
pusha
inc
aas
mov
and
xor
sub
jnp
mov
loopne
push
sahf
shll
bound
xchg
pop
sub
pop
or
mov
mov
xorb
jl
test
xor
ss
inc
stos
xlat
loopne
clc
fs
dec
bound
ds
mov
lock
adc
imul
js
fnstsw
addl
xor
adc
arpl
pandn
xchg
orb
ss
mov
or
xchg
loop
sbb
fldt
jo
popf
fldt
push
hlt
es
fistl
adc
je
or
fisttps
add
or
mov
xchg
and
jl
lock
push
repz
lds
daa
out
mov
insb
mov
jne
mov
stos
pop
sti
jns
popl
adc
test
icebp
ja
mov
ret
sbb
cli
lret
cmp
or
gs
aas
ffreep
xchg
push
jmp
mov
cmp
pop
inc
pop
add
sti
pop
cmp
push
iret
hlt
sbb
out
mov
test
mov
pop
addr16
mov
cmp
fsubp
jo
and
xchg
out
lret
sub
les
mov
sti
movsb
out
in
repnz
in
mov
imul
and
popa
push
jmp
imul
in
cmp
bound
xlat
lods
mov
mov
sbb
lea
nop
xor
orb
ficoms
test
imul
rorb
sbb
push
clc
lcall
push
adc
lods
and
ds
arpl
or
cmp
notb
and
mov
jns
xchg
sub
push
and
aam
in
xor
inc
cmpsl
loop
mov
mov
aaa
lock
jmp
or
ss
jecxz
lahf
lds
cmpsl
imul
mov
and
xor
mov
push
stos
mov
xchg
push
or
loop
loope
rcl
cmpsl
pushf
xor
dec
lods
or
dec
dec
hlt
adc
decl
or
mov
xchg
or
testb
fnstcw
sbb
cmp
cmp
xchg
mov
push
mov
inc
arpl
mov
std
xchg
in
xor
call
inc
cmpsb
push
push
cmp
mov
pop
cmp
ljmp
mov
jl
push
mov
nop
imull
loop
lock
cltd
pop
aam
data16
fwait
mov
cmp
iret
mov
xorl
mov
jp
iret
sub
push
or
jbe
mov
adc
xchg
add
mov
jle
dec
js
stos
popa
adc
inc
mov
jb
or
adc
mov
mov
mov
mov
fxch
and
push
push
shrl
fcoms
aam
lcall
jo
mov
test
xor
cmpsl
jo
adc
sbb
mov
loopne
iret
popa
mov
adc
ret
xor
cs
mov
into
mov
ss
rcrl
cmpsb
loopne
add
mov
lret
js
or
pop
xor
dec
fists
shl
aam
lahf
xchg
sti
push
lock
xchg
pop
sbb
pop
pop
pushf
pop
mov
out
mov
loope
lret
cmp
pop
xchg
mov
cmovge
mov
xor
roll
jne
jb
mov
subl
movzwl
arpl
cli
xchg
mov
loopne
xor
les
jmp
movb
xchg
ds
xchg
ds
adc
dec
sti
outsl
xchg
mov
scas
leave
in
and
test
mov
push
imul
outsl
and
lcall
mov
in
daa
lcall
push
adc
in
addr16
or
and
sti
andl
add
test
push
ja
jl
ds
xchg
add
mov
lds
xchg
popa
sbb
xor
jnp
stc
add
xor
mov
push
add
lahf
fwait
mov
scas
orl
or
je
jbe
cmpsb
out
sti
dec
pop
loopne
cmpsb
sbb
mov
add
adc
aad
loop
pop
adc
mov
out
adc
push
das
daa
inc
into
lret
and
mov
hlt
loopne
mov
lret
and
lcall
sar
mov
jmp
push
popa
ja
pop
or
std
dec
loop
cmp
mov
dec
mov
jle
jl
mov
dec
jne
jp
popf
fidivs
inc
dec
ret
or
sarb
inc
push
out
pushf
add
iret
pusha
sbb
mov
adc
es
pop
mov
adc
jb
mov
pop
xor
xchg
daa
sub
cs
dec
pushf
mov
xor
add
jb
xchg
std
cmc
imul
cld
jle
jb
jle
cmp
xor
add
cs
imul
divl
aad
cmp
fwait
xchg
jmp
js
jp
cmp
out
pop
dec
hlt
jns
xor
mov
je
icebp
adc
orl
hlt
mov
inc
pop
cltd
scas
dec
jle
jo
js
popf
jae
push
push
cwtl
jnp
shlb
mov
jo
cmp
cmpl
mov
ret
push
and
xchg
ja
int3
sub
mov
outsb
test
imul
xlat
add
add
jp
push
mov
adc
push
popa
aam
and
lahf
inc
gs
push
into
mov
xor
add
subb
pushf
mov
cmp
jb
cmp
push
test
inc
inc
inc
nop
loop
xchg
repz
outsb
push
call
xor
add
aad
sbb
dec
rorb
cltd
test
insl
cmp
sbb
xchg
ret
mov
int3
pushf
jmp
scas
or
in
xchg
inc
int
aaa
rcr
out
mov
lods
call
test
mov
ds
lret
cmpb
in
lcall
stos
cmp
mov
mov
pop
arpl
popa
or
fidivl
mov
stos
xrelease
insl
xchg
ljmp
pop
aaa
and
adc
addr16
je
shll
xchg
mov
test
or
aas
mov
in
hlt
lock
stc
iret
movsb
jge
sbb
pop
popf
push
sahf
cwtl
iret
cmp
insl
js
push
enter
sbb
out
jg
les
mov
xor
pop
popf
inc
iret
movsb
sub
mov
push
mov
pop
jae
mov
inc
outsl
pop
adc
mov
push
sbb
ljmp
sub
xchg
adc
aas
cmpsb
lahf
enter
pop
dec
xchg
into
xor
mov
jge
mov
shlb
insl
adc
sbb
pop
inc
cmpsb
int
fucom
cmpsl
mov
adc
and
loopne
fidivs
mov
push
incl
add
lret
dec
xchg
hlt
test
mov
mov
xor
in
adc
mov
cmpl
adc
pop
push
sub
jmp
out
xchg
mov
test
cmc
mov
scas
mov
test
rolb
mov
cmp
and
bound
jne
sbb
in
test
sbb
xlat
push
jp
ja
mov
pop
fimuls
out
push
lcall
push
test
mov
rcl
repnz
ja
daa
dec
adc
mov
mov
aaa
inc
cs
mov
sub
jl
fiaddl
mov
cmp
jl
sbb
pop
inc
in
scas
movsb
push
xchg
mov
in
sahf
adc
mov
push
pop
cmp
dec
mov
rol
movsl
xor
or
xchg
push
leave
pop
dec
es
lods
call
mov
pop
push
outsb
lret
jge
mov
std
ret
xchg
cmp
aad
jmp
iret
jno
cs
pop
rorb
xlat
push
fdivl
xchg
pop
mov
push
sub
cmp
push
aas
scas
xor
into
call
aaa
aad
fimull
sbb
fldenv
jp
xor
loope
xchg
xchg
mov
inc
lods
out
repz
out
jp
mov
mov
adc
pop
mov
dec
sub
lahf
in
sbb
add
mov
adc
ss
sub
sahf
cmp
mov
inc
inc
popf
xchg
mov
mov
cltd
outsb
push
std
mov
fnstsw
scas
andb
sbb
je
xor
push
outsl
pop
mov
inc
push
xor
add
jno
add
insl
sarl
or
mov
lea
jno
and
mov
jmp
xor
test
insb
dec
cmp
aas
push
cmc
mov
dec
push
movsl
ret
push
jecxz
imul
pop
shrl
mov
add
pop
mov
or
lcall
pop
push
into
mov
inc
push
jmp
filds
lods
mov
jns
sbb
out
xor
movl
jae
pop
iret
lret
jl
jnp
pop
pop
mov
push
aas
cmc
mov
and
cmp
mov
sti
in
in
and
jne
cmpsb
mov
jmp
jge
cmp
sbb
int
jae
jmp
inc
pop
inc
inc
cmp
sti
jle
test
push
hlt
sub
repz
add
cmp
pop
xchg
icebp
daa
iret
outsb
das
hlt
loop
mov
std
mov
lahf
xor
fwait
stos
or
adc
mov
ljmp
lret
jle
jl
or
cmpsb
inc
loop
add
and
cmp
mov
data16
cmpsb
xor
js
cmpl
inc
xchg
popf
or
jp
fdivrs
sub
enter
addb
jecxz
sub
push
jmp
push
js
int3
pop
add
rclb
add
mov
mov
mov
pop
mov
jle
filds
or
cmp
dec
test
daa
lock
sub
movsl
orb
in
cmp
je
in
dec
test
sub
clc
pop
sbb
xor
stc
fst
fwait
jo
das
sub
iret
f2xm1
dec
adc
pop
pop
movb
and
idivb
cli
jno
push
scas
in
jg
fsubrl
push
jae
add
leave
out
inc
fidivs
mov
movsb
jle
jle
lds
sahf
pushf
stc
lods
inc
pop
adc
sbb
mov
jns
adc
data16
mov
pop
jb
sub
lods
into
jb
aas
and
and
or
lds
dec
sarl
cmp
or
xor
pop
test
and
insb
sti
fldl
jne
adc
pop
imul
dec
outsl
aaa
xor
pop
push
cmpsl
loopne
or
hlt
sub
add
adc
mov
mov
push
insl
mov
ret
add
orb
data16
bound
jmp
jge
std
inc
adc
ret
loopne
sub
fisubrs
or
addl
les
xchg
xchg
addr16
addb
inc
adc
xchg
sbb
jmp
push
inc
imul
ja
dec
rorb
add
lret
lock
pop
je
pop
sbb
push
mov
dec
add
sti
xor
jae
iret
pusha
dec
inc
stos
int3
jg
mov
bound
gs
jne
cmp
stos
xchg
xorb
cmc
repnz
ja
test
pusha
add
sbb
dec
aam
daa
pop
pop
push
enter
cmp
out
xchg
int
inc
lahf
mov
lods
inc
xchg
mov
xor
mov
fisttpl
inc
int3
add
loope
incl
add
cmp
add
repnz
inc
mov
rcrb
dec
pop
scas
jbe
add
adc
in
push
xchg
gs
sub
mov
ljmp
and
xor
mov
xchg
sbb
rolb
mov
stc
lods
adc
int
mov
loop
push
stc
adc
lods
insl
push
pop
inc
popf
jb
push
mov
cmp
pop
jns
in
fsubs
or
xor
push
lds
push
mov
mov
mov
cli
ret
dec
ror
mov
mov
icebp
mov
adcb
pop
divb
sub
pop
imul
mov
or
loop
ljmp
int3
xlat
adc
sub
outsl
pop
pop
pop
mov
cmp
sahf
cmp
ss
loopne
or
test
lret
cmp
mov
adc
dec
mov
out
fwait
int3
movsb
sub
jmp
insl
add
sahf
lcall
jl
arpl
ret
fst
jb
insl
je
movsl
testb
pushf
insb
out
add
out
sti
push
and
divl
ret
pusha
je
sahf
loop
mov
sti
scas
in
or
rorl
jno
mov
add
mov
test
jne
pop
adc
sub
xchg
and
sub
imul
jp
inc
loop
inc
add
decb
cmp
push
cli
mov
movsb
movl
pop
lret
insb
cmpsl
ret
in
adc
jp
dec
dec
xchg
push
jo
imul
and
push
inc
sbb
stos
xchg
outsl
add
ficompl
enter
jno
jecxz
xor
cmp
jmp
adc
pop
push
inc
cmc
int3
xchg
mov
sbb
adc
sub
loope
movsl
and
gs
jae
mov
mov
movsb
pop
add
xchg
fstpt
adc
jp
mov
inc
insl
pusha
cmp
jne
dec
dec
je
xchg
and
lahf
jne
sub
sbb
ret
mov
outsb
xchg
sti
test
adc
pop
xor
lods
add
mov
test
push
mov
jne
sub
push
mov
clc
sub
mov
sbb
ficoms
shl
or
lea
push
jb
sub
fsubp
mov
push
ss
out
cmpb
cmp
xor
std
lock
xchg
push
add
sarb
push
enter
dec
sbb
jecxz
loope
repnz
xchg
xlat
xchg
fnsave
popf
outsl
sbb
cmpsl
push
jg
adc
ds
insb
cmp
dec
xor
or
fs
inc
loope
add
enter
or
adc
lock
loope
jp
pop
jb
lock
int3
rorb
adc
subb
lret
push
sti
sub
icebp
mov
cwtl
sub
jno
or
cmpb
cltd
les
dec
xor
movsl
in
add
and
mov
mov
ds
cmpsl
lahf
inc
imul
xor
xchg
mov
jge
pop
xor
sub
and
cld
push
jo
mov
xorb
or
mov
and
mov
mov
loope
insb
pop
jns
movsb
nop
jmp
into
and
in
cmp
fs
lret
test
adcb
stc
or
sbb
dec
loop
dec
mov
arpl
in
movsb
xchg
dec
jg
cmp
push
andl
xchg
stc
js
cs
aad
sti
xor
test
mov
iret
mov
insb
mov
lret
ds
dec
pop
pop
popf
jns
xor
jae
inc
leave
xchg
and
pop
xchg
js
es
cli
cmpsl
sbb
pop
movsl
int3
loope
inc
scas
or
add
pop
fdivl
add
pop
add
pop
xchg
outsl
mov
mov
les
dec
loope
sti
push
xchg
cmp
aam
into
xchg
xchg
xchg
push
out
mov
xchg
mov
insb
jo
lds
pop
in
fs
ret
push
dec
jbe
in
in
lcall
pushf
fcom
sub
jecxz
cld
and
push
or
nop
xor
fwait
xchg
aam
jecxz
shlb
cwtl
sbb
jns
arpl
aaa
push
or
xchg
jbe
ret
dec
in
push
pop
mov
jmp
cli
and
sti
push
adc
pop
dec
loope
and
mov
mov
sub
cld
test
sub
lret
jmp
lods
xor
mov
pop
mov
out
dec
incl
mov
mov
cmp
leave
sub
cmp
push
pop
test
stos
js
divb
rorb
fistl
sbb
rorb
mov
in
mov
xor
into
in
pop
lret
insb
inc
pop
int
cmpsb
cli
push
loope
and
dec
shl
mov
in
jmp
mov
pop
inc
sti
es
lods
mov
add
testb
das
iret
pop
sahf
adc
mov
xor
jmp
addr16
dec
int3
or
repnz
js,pt
xor
loop
loopne
aaa
imul
aam
add
mov
inc
mov
mov
ds
popf
loope
push
xchg
cli
cmp
sbb
loopne
sbb
fcoml
sbb
arpl
xchg
cld
ret
sub
and
adc
cmp
loope
xorb
daa
mov
insl
pop
cmc
and
mov
sbb
inc
xchg
sub
hlt
lret
lea
push
pop
jbe
pop
jl
xor
lods
rcrl
inc
test
sbb
loop
test
bound
adc
mov
shrl
repz
and
aad
sub
rcll
lods
cmp
rcr
adc
mov
call
lret
or
shll
mov
nop
sbb
adc
lds
or
dec
lods
loope
jg
icebp
insb
xchg
xchg
rep
lods
lods
or
sbb
push
jge
icebp
dec
insl
test
ficoms
add
mov
cmp
mov
jae
test
outsl
and
push
push
stos
inc
mov
mov
sbb
sbb
cmpsl
pop
or
aas
lret
mov
push
add
notl
jp
repnz
pushf
jmp
bound
daa
mul
rorl
roll
mov
xchg
loopne
push
cwtl
js,pn
add
pop
adc
mov
inc
xchg
bound
pushf
xor
test
adc
out
scas
push
dec
push
pop
loopne
data16
in
std
or
mov
pop
cmp
sub
pop
nop
repz
pop
loop
push
mov
sub
inc
adc
leave
ret
or
dec
sub
mov
and
int3
icebp
into
add
popf
mov
xor
clc
aad
or
add
and
mov
shr
lahf
adc
movsb
sbb
sub
and
popa
lods
subl
mov
mov
fisubrl
and
add
mov
jo
mov
mov
dec
xor
das
imul
lea
mov
aad
xchg
jno
repz
cmp
lea
imul
cmp
push
cmp
nop
fldenv
aaa
ja
out
jo
pop
push
dec
cmc
leave
or
and
sub
bound
xchg
sbb
xor
mov
push
cwtl
cmp
inc
cmp
push
cs
jp
jp
jnp
scas
dec
dec
add
add
repz
push
mov
mov
inc
xchg
cmpb
stos
iret
cmp
pop
lret
jmp
lret
insl
out
in
mov
or
stos
jmp
adc
or
mov
xor
lds
stos
je
xor
cmp
aaa
pop
dec
int3
dec
pop
sbb
mov
mov
in
pop
xor
popf
or
insl
orl
mov
push
rcr
jne
clc
sbb
push
shr
cli
dec
jno
xchg
push
fwait
call
sub
cmp
inc
aas
dec
inc
adc
scas
push
popa
mov
je
enter
cmpsl
pop
mov
mov
hlt
and
lds
add
test
cmp
cmc
andb
inc
sbb
lcall
es
lds
jmp
xchg
or
jmp
addl
mov
cmpsl
out
mov
insl
bound
cmc
mov
sbb
sbb
scas
cli
fs
das
lcall
sbb
xchg
or
cmp
fsts
jbe
xchg
into
pop
mov
icebp
les
fcmovnb
jb
sub
dec
xor
mov
and
loope
mov
loope
xor
into
faddl
and
ficomps
out
and
xor
lret
xchg
decl
cmp
jge
arpl
aad
bound
sbb
fs
dec
shlb
scas
push
es
loope
insb
test
addr16
call
test
dec
fnstcw
push
pop
or
in
cmp
xchg
mov
or
and
das
outsl
gs
pop
test
or
push
imul
clc
ficoms
adc
add
inc
xchg
int
aad
xchg
sahf
loope
pop
push
cmp
cld
xor
mov
loopne
in
xchg
xor
jecxz
and
into
xchg
fisttps
mov
inc
mov
add
ja
pushf
xchg
fsubp
xchg
inc
dec
add
int3
cwtl
pop
cmc
pop
push
aad
mov
or
fiaddl
push
inc
inc
pushf
xchg
add
loope
pop
sub
jb
adc
inc
xchg
es
faddl
xchg
dec
std
or
cmp
lods
mov
sub
mov
pop
dec
xor
inc
cmp
sub
movsl
test
aad
mov
adc
sbb
mov
adc
cmp
mov
pop
mov
jmp
cli
xchg
inc
mov
imul
leave
lret
jecxz
sub
scas
roll
movsb
dec
add
lret
adc
inc
hlt
popa
sarl
cmpsb
mov
adc
fsts
mov
sbb
adc
loope
xchg
test
iret
inc
dec
mov
push
dec
aam
leave
xchg
pop
adc
sub
sub
popf
mov
cmp
out
ret
out
dec
bound
dec
inc
xchg
xchg
int
hlt
cmp
mov
mov
jne
xchg
cld
mov
rcrl
mov
sub
push
mov
inc
negb
test
mov
mov
add
lahf
movsb
dec
arpl
lock
cld
push
pusha
jg
stc
cmpsl
dec
icebp
adc
mov
fs
cltd
add
push
xor
loop
xchg
xchg
rclb
movsb
lods
outsb
xor
fdivrs
xchg
sbb
dec
mov
push
mov
lret
add
xchg
and
or
cmp
push
inc
outsb
inc
and
lods
pop
add
cs
imulb
cmp
clc
sbb
jno
mov
shll
xor
mov
pop
rclb
mov
or
sbb
cmc
sbb
mov
add
xchg
test
stc
pop
test
sub
mov
fstps
adc
mov
mov
hlt
push
leave
arpl
mov
xor
push
stos
or
push
ficompl
mov
aad
icebp
leave
in
sbb
jo
call
mov
jne
fxch
arpl
mov
pushf
lahf
jns
test
push
test
mov
push
xchg
stos
mov
pusha
rolb
inc
push
lret
cmp
addr16
mov
cmp
xchg
and
xorb
jmp
aaa
arpl
lods
test
xchg
aad
cltd
add
jnp
test
push
and
mov
pop
rcrl
outsb
xor
mov
mov
flds
cmp
bound
add
jge
cli
outsl
in
sbb
pushf
cmp
arpl
lret
jno
bound
jp
cmp
sbb
lcall
fadds
dec
ss
mov
mov
xchg
pop
pop
push
std
cmp
roll
icebp
clc
add
lcall
cmp
mov
icebp
fmulp
mov
mov
ljmp
je
xchg
cmc
adc
mov
test
mov
cmp
fdivl
aas
push
lods
mov
jb
imul
mov
push
xchg
push
lods
or
movsb
push
scas
das
ja
rclb
jl
adc
jae
stos
cmp
cmp
mov
popl
mov
fnstenv
push
cmc
sub
into
pop
sub
je
add
enter
mov
push
jo
movsl
mov
xor
sbb
cmp
rclb
add
xor
aam
in
pop
mov
int
push
ret
cltd
push
cld
js
adc
fwait
insl
add
popf
fsubr
rcll
in
mov
loop
fldcw
jae
and
mov
and
outsl
movsb
imul
mov
mov
cmc
fsts
add
fildll
dec
add
xchg
push
lahf
repnz
sarl
lock
ds
pop
lods
mov
pop
mov
js
jns
sbb
testl
adc
push
enter
add
andb
cmpb
and
outsl
jo
sub
ret
add
mov
push
in
shlb
pushl
mov
push
clc
mov
repnz
xchg
jle
inc
adc
aas
ljmp
push
push
out
insb
js
pop
xor
movsl
pusha
xor
daa
insb
jp
cmp
push
add
in
in
or
jmp
dec
xor
out
repnz
loopne
jge
cmpsb
inc
push
cmc
mov
imul
dec
ja
inc
into
imul
test
sbb
sub
dec
jp
lock
cmp
bound
test
das
mov
fs
jno
loop
je
lret
push
inc
int3
into
fmull
jmp
mov
and
das
mov
stc
test
adc
jno
int3
std
shlb
loop
push
mov
add
int3
sbb
lods
cmp
or
je
xchg
push
fdivs
addl
sub
js
mov
mov
cmpsb
in
sbb
adc
fimuls
pop
adc
fwait
xchg
mov
jae
imul
jmp
sub
sub
adcb
push
mov
cmp
jp
dec
shl
xchg
out
sti
lahf
imul
movsl
or
test
pop
stos
cmc
mov
and
sti
les
cwtl
cli
dec
lock
mov
jecxz
inc
sub
popa
push
fidivrs
mov
sbb
fbld
xlat
xchg
mov
pusha
and
cmpsb
filds
push
sub
xor
xor
xor
push
jg
xor
fidivrl
pop
or
ss
and
adc
fidivs
jp
xchg
sbb
add
push
mov
lods
bound
int
cld
psubw
mov
imul
out
pusha
test
fldenv
push
mov
jp
cltd
mov
dec
loopne
and
jns
push
jb
mov
jo
cmp
cwtl
fildll
mov
pop
or
sbb
clc
dec
lret
push
mov
mov
sub
in
xor
mov
and
imul
sub
dec
xchg
xchg
pop
jno
mov
add
shl
or
mov
push
out
in
cmp
jp
add
insl
ret
aad
outsb
insb
loope
sbb
shr
add
cs
xor
xor
push
and
pop
dec
mov
or
or
iret
pop
out
cmpsl
out
js
xchg
cwtl
scas
into
icebp
dec
sahf
aad
dec
jns
adc
lcall
or
mov
aaa
inc
inc
imul
addr16
fs
mov
dec
or
sub
insb
jmp
jl
add
mov
push
mov
sahf
aas
fstp
mov
mov
cmp
jo
nop
push
push
test
dec
icebp
sti
mov
addr16
pop
lret
push
pusha
test
in
adcl
cld
jne
push
pop
jno
pop
test
mov
xor
push
out
jno
push
push
adc
lret
mov
inc
aam
cmpsb
xor
js
sub
sbb
adc
or
pop
mov
xor
adc
xlat
ss
cmp
out
aad
imul
mov
ss
or
aaa
jnp
add
xchg
adc
cmp
jg
pop
shl
sub
dec
inc
mov
cltd
push
ret
xor
push
cmpsb
sub
loope
subl
jge
in
aas
cmp
pop
cmc
or
pushf
push
test
hlt
lea
icebp
mov
ss
das
xchg
into
and
or
push
into
and
pop
sar
fmull
mov
fs
loope
xchg
sar
jns
cmp
fstp
aaa
and
icebp
inc
mov
sub
fs
jmp
sbb
xchg
mov
cltd
movb
scas
and
mov
shrb
push
dec
cld
fisttpl
mov
pop
add
icebp
aam
in
mov
mov
mov
out
mov
push
rolb
movsl
cmp
xlat
lret
and
sahf
call
mov
test
jmp
or
ja
imul
xorl
fwait
popa
loop
out
dec
cmc
and
mov
mov
fidivs
adc
push
lds
and
add
mov
rol
out
hlt
jo
loope
pop
add
je
gs
negb
test
xchg
lahf
pop
movsb
jb
es
fistpll
ret
aam
aaa
sub
mov
stc
xor
aad
or
in
xchg
sub
adc
add
lods
loopne
cs
jns
xchg
outsw
lods
cmp
jl
xchg
bound
push
mov
lods
pop
sbb
push
xor
mov
data16
cmp
or
dec
aas
mov
rcll
add
pop
xchg
and
insb
mov
lea
out
mov
sbb
aaa
in
imul
movsl
xchg
cmpsb
clc
inc
shrb
ss
dec
fmuls
daa
in
in
xchg
cmpsb
je
loope
adc
jg
pop
mov
nop
jp
pop
mov
sub
cmp
cltd
sbb
jns
sbb
mov
mov
pop
popf
adc
mov
cmpsb
out
mov
std
adc
xchg
mov
pop
loop
jne
and
dec
cmc
and
and
xchg
inc
out
and
paddusw
test
mov
popf
sbb
dec
cwtl
fs
jecxz
cmp
mov
pushf
dec
jg
das
inc
popf
stc
push
inc
inc
or
dec
test
outsb
std
add
repnz
lea
xor
dec
or
mov
sbb
push
mov
mov
loop
sahf
cmp
aam
dec
or
mov
jo
mov
inc
int3
xor
mov
pop
adc
insl
sahf
loopne
ja
lods
or
rorb
cmp
sub
popa
sub
fdivs
sub
clc
pop
stos
pop
xor
adc
std
cmpsb
sbb
mov
aaa
inc
push
scas
mov
adc
loopne
mov
xor
js
pop
int
pop
pop
imulb
testb
dec
pop
imul
in
sub
adc
xchg
pop
push
hlt
xchg
cltd
jge
and
std
insb
jg
dec
clc
stos
or
loope
xchg
rolb
in
je
xchg
pop
les
and
mov
inc
mov
das
and
dec
jno
scas
enter
push
int
jge
push
fldl
cmp
test
aas
cwtl
mov
rolb
cs
aaa
mov
and
repnz
adc
sbb
daa
out
mov
rolb
fwait
je
jae
nop
jmp
cwtl
sbb
jp
fucomp
aaa
mov
icebp
pushf
rclb
xchg
push
xor
clc
jns
in
lahf
aaa
stc
adc
mov
or
xchg
sub
call
mov
sbb
sub
negb
push
jg
les
jb
test
ds
mov
pop
dec
andl
popa
js
and
nop
dec
or
mov
jnp
xor
cs
test
mov
mov
mov
push
push
add
pop
jno
aad
pop
fstps
test
jecxz
sbb
jmp
and
sbb
jg
sub
mov
js
xchg
addl
fsub
outsl
add
sub
outsb
js
jb
pusha
iret
je
stc
loop
aaa
mov
push
push
dec
xor
lret
mov
jnp
ficoml
mov
adcb
es
lock
mov
cmp
lcall
adc
mov
inc
in
fdivs
aad
cli
test
pop
scas
neg
bound
imul
lods
sbb
xlat
jne
pop
mov
in
in
mull
js
popf
mov
xor
or
adc
pop
ljmp
fbld
mov
push
add
addr16
pop
outsl
dec
repz
loop
scas
jmp
ss
aas
fs
xchg
out
pop
jb
pop
out
jo
xchg
xlat
shll
inc
add
and
dec
mov
xor
inc
xchg
inc
jp
mov
or
call
mov
fstl
jmp
mov
mov
daa
jae
mov
xchg
sbb
add
neg
sub
stos
and
stos
rorb
mov
mov
jo
adc
outsb
push
pusha
test
lret
cmp
mov
or
lahf
and
das
cs
sub
js
out
es
std
cmp
int3
or
and
jmp
pop
pop
cs
cmpsb
pop
and
jbe
loope
lcall
pop
cmp
rcr
bound
adc
push
dec
sub
xor
insb
sub
nop
adc
push
imul
jbe
add
lret
mov
je
mov
sbb
fcoml
or
dec
daa
mov
leave
pop
sar
adcl
mov
fstps
jl
or
dec
and
cmpsl
inc
mov
repz
movsb
cmp
fwait
scas
mov
sarb
inc
daa
mov
xor
ljmp
lret
std
mov
shrl
mov
addr16
pop
sub
std
mov
pop
ja
and
lods
sub
sub
sarl
mov
loop
inc
jns
pop
mov
into
push
and
adc
add
or
fiaddl
mov
inc
fwait
int3
test
lahf
push
adc
push
mov
lock
int
sbb
xchg
jb
stos
lret
jae
shl
inc
xchg
ds
and
cmp
dec
fisttpl
adc
popf
clc
in
out
inc
xchg
push
or
cmpl
das
aaa
test
cmp
ja
xchg
lods
mov
popf
outsl
mov
pop
imul
aas
insl
lods
movsb
jne
jmp
push
int
das
cmp
in
mov
mov
iret
push
mov
flds
xchg
jp
sahf
cmp
shlb
mov
add
push
inc
lahf
sub
out
or
sub
cmp
popf
mov
je
dec
int
mov
jo
inc
dec
cmc
xor
out
idivb
fwait
and
fwait
cli
xchg
fcomps
cwtl
stos
mov
mov
outsl
cltd
push
sub
and
add
out
add
in
xchg
pop
test
js
pop
out
enter
jns
dec
shl
mov
out
xlat
pop
mov
sbb
shlb
adc
rcr
insl
in
fwait
test
mov
push
push
lds
xchg
aam
dec
je
push
pop
shlb
mov
int3
xchg
outsb
sbb
pop
cmp
clc
jns
sub
into
iret
aad
es
jbe
pop
push
add
xchg
lock
addl
iret
mov
jge
push
jmp
add
insb
push
mov
ss
mov
sbb
das
inc
popa
mov
and
jnp
clc
sbb
shlb
into
call
iret
jnp
aad
push
cwtl
pushf
ficoms
xorl
pop
rorb
xchg
mov
xchg
dec
scas
mov
dec
sarl
jne
adc
xchg
fs
test
pusha
out
out
mov
or
xor
shlb
xchg
dec
jge
scas
push
cli
paddsb
and
fisubl
insl
test
subb
cmpsb
lahf
push
sahf
mov
mov
mov
out
push
xchg
into
add
pusha
lcall
inc
xor
fidivl
leave
jno
and
negl
mov
pop
jns,pn
or
jecxz
cmp
cmp
xorl
xchg
ret
jns
outsb
jo
mov
mov
mov
xchg
movsb
stos
cmp
addb
mov
inc
mov
mov
or
dec
mov
push
popa
xor
insl
sbb
and
xlat
or
lahf
imul
shlb
lahf
ljmp
mov
push
dec
push
out
nop
xor
xor
adc
push
inc
test
lock
mov
or
push
js
divb
mov
jg
xor
mov
mov
leave
scas
xchg
imul
ret
mov
jecxz
adc
popa
cmc
jae
mov
sub
out
cmp
add
add
in
lcall
add
jae
mov
sbb
sahf
jg
subl
es
xchg
jmp
leave
cmp
enter
pop
data16
sbb
cwtl
fs
cli
inc
sbb
ret
mov
push
movsb
jle
daa
lahf
push
inc
mov
xchg
int
push
sub
nop
mov
inc
or
icebp
iret
xor
mov
arpl
or
lahf
imul
arpl
lahf
dec
sub
cmp
and
sar
ficoms
pop
mov
pop
xchg
dec
cmc
lahf
xchg
xchg
and
inc
mov
cmpsb
sbb
or
lahf
dec
adc
in
dec
sbb
inc
in
add
push
sbb
icebp
cmp
pushf
inc
shlb
ss
inc
rcrl
sbb
sbb
loope
movsb
dec
xor
in
cs
mov
flds
xchg
inc
in
in
icebp
pusha
push
lea
enter
jecxz
fidivrs
daa
int3
sub
sub
or
jno
adc
cs
js
and
mov
mov
add
push
dec
add
fmuls
add
or
mov
add
movsl
repz
stos
divb
sub
cmc
mov
gs
mov
dec
push
cmp
xchg
cmovl
lods
sbb
sub
pop
push
enter
dec
dec
mov
iret
test
add
lcall
fnstenv
mov
push
stos
pop
or
mov
fsubl
pop
cmc
mov
in
adc
cmpsb
loop
sub
inc
xor
je
sub
xor
sbb
mov
arpl
jno
push
mov
popa
stos
sbb
fwait
scas
out
jo
add
sub
scas
scas
out
into
sub
daa
lods
fnstenv
mov
lret
sbb
xor
in
and
jns
jnp
int3
sbb
cmp
jne
jae
pushf
lods
loopne
inc
inc
mov
xchg
jno
fnstcw
inc
dec
in
push
and
xor
cmp
xor
ret
and
sbb
xchg
lods
or
lods
fs
adc
popa
adc
push
mov
push
rclb
nop
in
pavgb
pusha
or
mov
fmull
push
pop
sub
call
and
or
add
lea
lods
and
nop
xor
xor
lea
xchg
push
je
ljmp
cltd
or
addl
mov
push
mov
xchg
add
or
adc
fisttpl
das
cltd
shrb
popf
lea
push
ficoml
add
jae
sti
fbld
lea
jae
sbb
sub
dec
int
or
cmp
xor
xchg
xor
subb
adc
pop
jno
lods
dec
pop
mov
in
roll
andl
cli
mov
mov
roll
loop
sti
stos
loope
scas
jae
loope
push
std
mov
jns
out
or
inc
dec
cmp
sahf
xor
orb
dec
hlt
std
arpl
std
popa
shr
sahf
cmp
int
stos
mov
ret
vcvtdq2pd
jbe
test
mov
ds
insb
addb
mov
adc
sbb
mov
test
add
mov
test
cld
and
inc
cmp
scas
inc
xor
add
add
inc
lds
push
rorl
push
jo
dec
and
xor
jno
js
pop
pop
clc
and
ss
in
cld
and
hlt
lods
jne
sbb
pop
mov
test
arpl
inc
lods
int3
cmc
sub
sub
jnp
cltd
test
sarl
fidivs
or
in
cmpsb
js,pn
jmp
lea
std
stos
fisubs
jg
push
xor
inc
or
out
jl
mov
or
pop
inc
mov
pop
js
mov
mov
dec
lcall
xchg
outsl
push
and
mov
lds
test
mov
jo
or
add
push
arpl
lea
sub
loope
subl
adc
sbb
scas
inc
loop
adc
addl
mov
adc
jo
inc
inc
adc
push
cmpsb
push
pop
push
jle
or
hlt
inc
outsb
dec
movsl
sub
xchg
and
bound
and
xchg
cs
es
les
clc
sarl
daa
jg
lds
lea
push
add
cmpsl
adc
mov
ljmp
inc
fmuls
xorb
in
xchg
jl
cmpsl
ja
adc
inc
mov
rcrb
push
add
jo
stos
es
loopne
pop
mov
shr
leave
pop
sbb
leave
lea
pushf
insb
cld
xor
testb
cmpsb
jp
mov
ljmp
cmp
mov
andb
mov
push
scas
lock
rorl
enter
adc
scas
loopne
leave
pop
and
jge
jo
push
inc
mov
push
mov
mov
into
inc
mov
pop
in
mov
jnp
xchg
daa
dec
inc
mov
pusha
insb
mov
or
aaa
loopne
gs
shll
xchg
jnp
les
xor
data16
mov
int
lahf
inc
mov
xchg
add
push
jle
push
push
bound
leave
sub
out
fwait
mov
enter
test
adc
xchg
stc
icebp
lret
adc
fnstcw
push
shrl
lcall
sub
shufps
mov
jle
out
loopne
outsb
push
add
push
das
lock
mov
sarb
loope
inc
test
sbb
jb
or
outsl
adc
mov
loopne
cmc
test
fldcw
aaa
jg
jo
pand
dec
pop
sbb
mov
xchg
lret
aaa
jg
movsb
push
mov
mov
cmp
and
sbb
daa
flds
lea
push
shl
fldt
xor
stos
xchg
pushf
jo
fmull
cmp
outsl
xchg
mov
fists
jo
sbb
sub
fistpll
iret
dec
mov
addr16
sahf
mov
and
outsl
addr16
mov
or
push
mov
inc
push
fucom
pop
sub
xor
stos
mov
lea
or
call
repz
rolb
push
faddp
and
mov
adc
repnz
comiss
adc
xchg
imul
shrb
int
jns
cli
mov
shrl
scas
jne
mov
jno
nop
call
xor
or
add
int3
push
sbb
mov
out
sbb
xlat
mov
loop
xchg
cmp
jo
notb
xchg
mov
out
cmpsl
clc
sbb
dec
pop
and
and
push
in
xlat
rclb
adcl
jmp
into
ficoml
add
negb
pop
inc
ja
sub
daa
xchg
fnstsw
mov
dec
ljmp
aas
cmp
or
fnsave
push
xchg
out
lret
push
sahf
jecxz
in
xchg
and
test
les
aaa
jo
or
dec
pop
mov
pop
std
dec
insb
adc
and
or
fs
cwtl
ds
hlt
rorb
aad
adc
push
add
xchg
push
or
out
adc
in
mov
pop
fmul
jecxz
cli
adc
out
rcll
dec
call
sbb
mov
inc
pop
mov
xchg
lcall
xchg
jb
sbb
inc
sbb
xchg
add
xorb
ja
push
insl
aam
enter
enter
stos
inc
jg
add
hlt
mov
movsb
gs
xor
shlb
add
push
js
xor
cmp
sbbb
cmpsl
scas
imul
mov
repz
pop
outsl
outsl
inc
ja
pop
cmp
in
test
xorl
ret
fwait
push
sbb
mov
mov
jae
sub
jl
out
adc
jge
xchg
and
mov
hlt
push
test
leave
clc
neg
jmp
pop
push
arpl
push
jnp
push
push
nop
mov
es
jnp
stc
sub
lods
aad
pop
adc
fstpt
cmp
xor
lret
sub
pop
xor
or
popf
mov
test
lcall
mov
pushf
ja
or
and
bound
icebp
push
test
jmp
hlt
pusha
std
inc
add
stc
xchg
rolb
mov
pop
xchg
cli
testb
cmp
jl
mov
mov
push
test
cmp
xor
fucomip
adc
shrl
or
push
pop
vpavgw
mov
pusha
sbb
rcrb
push
testl
in
inc
sahf
adc
push
sti
mov
inc
xchg
mov
decb
push
in
jnp
int3
int3
js
jmp
push
sbb
data16
rcrl
push
pop
mov
cmp
adc
cli
rcrl
stc
pop
pop
inc
inc
sub
jne
in
lret
andb
push
sub
les
mov
and
scas
add
insb
popf
xor
loopne
inc
jno
xrelease
call
adc
sub
scas
jl
decl
dec
test
jnp
loopne
ficoms
int3
or
popf
movsl
je
xchg
adc
shrb
mov
cld
push
mov
icebp
push
idivl
fmuls
mov
int3
aaa
sbb
inc
adc
arpl
inc
out
cmpsb
dec
push
mov
push
push
jmp
cmp
and
scas
stos
or
lods
xor
arpl
in
mov
pop
popf
fsub
and
mov
cmp
inc
or
xchg
cmp
mov
pusha
mov
mov
xor
aaa
cmp
dec
and
sbb
xor
mov
icebp
lods
jb
push
mov
or
nop
lret
push
adc
jl
pop
xchg
mov
inc
and
rol
xchg
lcall
popf
push
inc
test
dec
int3
cwtl
rcll
cmp
inc
sub
push
cmp
dec
sub
dec
ffree
mov
mov
cs
mov
je
push
cwtl
rcl
insb
and
cmp
and
xchg
push
adc
in
sub
xlat
jne
aad
sub
mov
dec
xor
sbb
nop
dec
negb
enter
ljmp
arpl
loopne
and
out
mov
dec
daa
repnz
push
push
push
fbld
ss
out
sar
add
addr16
ficoml
movsl
sbb
pop
in
add
dec
ret
test
xchg
sbb
stos
fwait
inc
jo
sbb
add
xchg
daa
push
sub
adc
adc
loope
pop
mov
mov
ja
out
adc
cmc
cmpsb
leave
pushf
cmpsl
test
dec
inc
mov
cmpsl
push
xor
mov
cmp
cwtl
inc
int
sub
gs
hlt
mov
popl
jno
pop
out
stc
jge
pop
cltd
cs
adc
sub
jmp
shrb
outsl
sub
stos
or
sarb
sub
fstl
mov
add
scas
clc
popf
jno
je
insl
cmp
sub
mov
enter
fs
jp
aaa
aas
jmp
shll
jno
std
das
shrb
cmp
mov
out
push
stos
sub
inc
hlt
leave
mov
jbe
into
xor
mov
mov
jge
sbb
mov
cs
dec
popf
out
mov
pop
cmp
sbb
imul
inc
enter
pop
xchg
jne
dec
xchg
mulb
insl
mov
xlat
cli
nop
mov
mov
mov
pop
pop
add
xchg
fistl
pushf
mov
and
mov
ljmp
lret
ret
rorb
push
lods
fwait
xchg
loope
dec
sbb
cli
arpl
pop
xchg
and
mov
mov
cli
leave
xchg
sbb
movsl
mov
push
cmp
es
pop
xchg
es
and
into
and
sbb
mov
imul
hlt
dec
imul
scas
mov
or
and
lcall
clc
jbe
mov
and
test
dec
cmp
inc
pop
mov
leave
rclb
pop
mov
xchg
pop
aas
rclb
cmp
jae
inc
mov
add
cmc
sbb
pop
bound
test
rcll
pop
sarl
shrl
lret
pop
mov
or
xchg
shlb
out
sti
stc
mov
sbb
fdivs
mov
inc
and
add
cmpsl
insl
push
sub
insl
test
adc
mov
sub
aam
adc
mov
insl
mov
pop
hlt
push
dec
dec
arpl
mov
clc
cmp
mov
out
dec
nop
or
add
add
sti
aaa
jl
jae
movsb
incb
out
adc
mov
pushf
mov
pusha
das
daa
test
hlt
jmp
sbb
jb
inc
fdivrs
inc
adc
stc
repz
fimull
xchg
push
push
mov
add
enter
mov
enter
shlb
mov
fidivrs
pop
repnz
ret
ljmp
pop
stos
push
cs
sub
sbb
out
adc
leave
dec
scas
push
mov
orb
stos
xor
adc
in
xchg
insb
mov
pop
fucomi
adc
enter
pop
adc
push
pop
jg
pop
mov
xchg
cmp
push
nop
mov
ljmp
dec
insb
pop
or
inc
and
mov
mov
cmc
fldt
jp
iret
push
xor
inc
push
int
push
call
fisubs
aad
scas
in
packsswb
xor
mov
lock
inc
push
push
cmp
adc
lret
add
cmp
fistpl
notl
xchg
and
stos
adc
call
and
inc
fs
cmp
fdiv
mov
js
pop
pop
lods
les
or
aas
leave
jmp
and
pushf
mov
xor
lods
or
roll
fidivrl
dec
adc
aad
mov
xor
lret
repz
xchg
scas
mov
ret
loope
popf
test
in
and
sub
xor
and
xchg
cmpsl
repnz
push
add
mov
push
sbb
push
test
lret
jmp
aam
test
cmp
or
inc
mov
inc
sub
pusha
inc
xchg
mov
test
mov
push
jecxz
xor
imul
sub
cmpl
mov
fisubrl
pop
pop
aaa
inc
fs
shll
inc
xor
jne
or
sbb
add
ss
les
mov
sub
mov
mov
int
jg
xor
push
cmp
jmp
pop
sahf
pusha
fnstenv
rolb
dec
fimuls
jle
fdivrs
xchg
pop
stos
hlt
rorl
imul
ss
add
inc
scas
add
lret
or
adc
fsubrs
push
or
test
mov
sub
adc
mov
repz
loop
popf
dec
clc
inc
mov
xor
cli
dec
add
loopne
sahf
out
xchg
sub
lahf
ret
call
sbb
or
or
cmc
inc
push
js
ljmp
or
xchg
dec
addl
lock
scas
mov
mov
push
and
pop
je
ret
out
mov
rorl
shrl
rorb
stc
rorb
es
repnz
cld
pop
dec
sub
mov
mov
dec
add
mov
repnz
int
inc
scas
test
xchg
adc
pop
jb
pop
add
fdivl
xchg
xchg
pushf
cmpsl
shlb
jl
jl
enter
sbb
jo
js
push
cmp
push
push
adc
xor
cmpsl
push
fmuls
add
jmp
or
xchg
pop
jl
aam
dec
incl
and
cwtl
dec
jmp
lret
cmp
imul
pop
mov
sbb
mov
jbe
int
or
sti
xchg
pop
mov
outsb
lock
sub
popf
ss
xchg
fucomp
mov
jne
cmp
movsb
pop
adc
pushf
add
inc
es
in
jb
dec
mov
mov
aaa
pop
lahf
jp
add
add
mov
insl
popa
xchg
fwait
pop
sub
sbb
and
pushf
jne
ret
int3
call
or
push
shlb
nop
xchg
gs
pop
out
aas
ds
out
or
pop
test
add
pop
je
sub
icebp
sahf
clc
nop
out
popf
add
pop
sbb
hlt
icebp
adc
iret
test
rclb
push
cmp
inc
lcall
push
sub
fldt
adc
rorl
lcall
cwtl
repz
mov
inc
or
out
ss
mov
negl
adc
ret
bound
xor
cmpsb
cltd
cmpsb
push
sbb
push
cmp
add
shl
pop
ror
cs
push
test
scas
and
sahf
mov
mov
sub
mov
out
mov
xchg
daa
push
mov
mov
faddl
aam
inc
adc
int
dec
push
mov
jg
and
jg
push
dec
push
pop
mov
inc
dec
mov
add
jne
stc
or
dec
ss
pop
push
jo
std
xchg
mov
pop
movsb
pop
fmull
sub
inc
outsb
inc
mov
cwtl
mov
push
or
push
addr16
sarl
push
js
xor
decl
clc
xor
or
fldl
mov
mov
or
mov
in
out
sub
daa
nop
and
lods
sub
sahf
cmp
jmp
repnz
aad
add
lods
leave
jns
sub
inc
nop
or
push
ds
push
or
and
or
adc
imull
and
xlat
leave
sub
sub
mov
fisubrs
shrl
push
out
cmpsl
pop
stc
xchg
push
incb
dec
pop
push
mov
testb
rcl
int3
pop
adc
jl
mov
cmp
lock
mov
sbb
outsb
mov
fbld
roll
repnz
add
pop
mov
dec
scas
scas
nop
inc
mov
mov
pop
xchg
and
jge
fsubs
ja
iret
mov
ss
inc
not
cmpsl
rcll
dec
mov
inc
ss
jg
mov
dec
mov
xor
bound
stos
cmp
mov
sbb
mov
xor
clc
test
mov
dec
sbb
add
dec
or
sub
nop
ljmp
loop
inc
jg
xchg
pop
outsl
arpl
jns
add
les
in
push
or
xor
bound
rolb
sarl
jno
divl
das
inc
mov
push
pop
lret
inc
lds
jg
fsubr
test
ljmp
add
testl
mov
and
jo
stos
jnp
dec
rclb
or
mov
insl
jo
insl
xchg
orb
jo
mov
out
ret
cltd
push
cmp
inc
cmc
imul
das
lret
jo
pop
or
inc
pop
push
gs
sub
rclb
testb
cmpsb
push
add
cs
fs
push
fisubl
push
pop
cmc
and
aas
dec
notb
xchg
push
jge
test
insl
loope
stos
es
cmp
and
xor
push
pop
xor
sbb
pop
outsl
out
xor
sarb
push
rcr
mov
jo
mov
leave
into
xchg
dec
sub
pop
push
mov
adc
mov
repnz
pop
dec
mov
movsb
or
pop
cld
negl
fsts
add
inc
cld
lds
dec
les
lds
inc
stos
call
mov
add
cltd
gs
mov
cmp
xor
xchg
icebp
xor
or
inc
jae
mov
stc
out
dec
jno
mov
cmp
imul
and
sub
jno
mov
lahf
or
inc
mov
movb
xchg
loope
jg
xor
lea
test
rcrb
or
adc
clc
pop
das
repnz
lahf
sbb
pop
aaa
xor
or
cmp
in
dec
stos
or
test
lahf
sub
and
aad
mov
and
jbe
jnp
sub
into
gs
add
lods
lret
mov
jns
js
push
dec
mov
push
jnp
push
lret
in
and
sub
adc
out
jne
insl
shufps
cld
rorl
mov
push
divl
and
push
dec
dec
int3
inc
push
push
movsl
push
xlat
ss
dec
cmc
mov
add
scas
dec
lret
mov
lcall
jg
cs
fstp
shrl
sar
movsb
nop
iret
hlt
or
imull
lock
xchg
cmpb
lahf
sahf
xchg
fldenv
sbb
aam
mov
sbb
inc
lock
inc
adc
fcmove
and
jbe
decl
or
iret
cmpb
cmpb
imul
int3
jae
sub
shlb
add
mov
popa
inc
add
or
mov
xor
repnz
xor
xor
xchg
mov
lds
mov
bound
push
les
xor
inc
mov
adcl
ret
out
popa
mov
adc
jnp
fsub
push
repz
sub
fstp
sub
and
imull
rep
jae
pop
xor
rcrb
jmp
add
stc
mov
popa
adc
xor
push
adc
jo
push
sbb
push
pop
push
cmpsb
mov
popa
adc
int3
sub
aaa
into
cmp
paddb
jne
mov
sbb
or
cwtl
xorb
jae
aaa
and
add
jnp
cmpsl
fdivs
clc
outsl
push
sbb
add
xchg
dec
xchg
or
mov
mov
cmp
sbb
lea
cmpsl
hlt
aam
outsl
cmc
cmp
mov
dec
fwait
add
inc
dec
sub
jecxz
inc
mov
sbb
push
inc
xor
jno
sbb
jno
push
js
hlt
loopne
mov
adc
mov
test
push
push
sub
in
sbb
fnstenv
sahf
pop
and
xchg
jge
or
mov
stos
mov
lock
push
push
pusha
sbb
insb
inc
or
out
dec
add
add
addb
insb
or
cmp
sub
test
cmp
pop
adc
movsb
push
sbb
ss
lret
xor
inc
xor
adc
std
ret
lds
dec
filds
out
pop
dec
sbb
and
jecxz
cli
cmp
pop
bound
test
sub
cwtl
xchg
push
cmpsl
mov
or
dec
mov
fs
dec
sti
lahf
inc
and
into
add
in
outsb
adc
verr
fsubrs
movsb
and
mov
jecxz
popa
ds
movsb
xor
push
ss
stc
shlb
repnz
mov
js
dec
pusha
mov
and
or
shlb
stos
cmc
mov
call
aas
xor
js
push
test
vpsubsb
mov
je
shl
bound
rcl
xchg
lcall
leave
pop
fdivs
jg
xchg
sbb
pop
mov
insl
test
in
pop
enter
add
ret
push
mov
add
adc
addr16
jne
test
div
push
out
cmpsb
loop
lods
jmp
or
pusha
mov
lods
jne
or
arpl
push
jo
mov
pop
sbb
sti
jns
loopne
sahf
popf
jge
test
pusha
es
and
inc
inc
pop
je
sub
sub
xchg
jmp
ret
mov
insb
adc
xor
cmp
std
addr16
and
jns
shl
pop
sbb
and
div
add
ja
outsb
loop
mov
cmp
xchg
cltd
and
fstpt
mov
stos
orb
add
xchg
popf
fs
loop
dec
dec
dec
incl
cmpsb
imul
mov
mov
adc
inc
int
sbb
sub
imul
ja
repz
imul
and
pop
addr16
lods
dec
push
out
mov
jo
xchg
pop
push
movsb
movsl
sbb
test
lds
lahf
test
imul
mov
xor
or
dec
aaa
or
pop
into
cmp
mov
or
or
add
xor
sbb
dec
loope
bts
push
sbb
scas
adc
rcr
fidivrs
inc
loope
adc
fistpll
sbb
pop
subw
ret
in
je
movsb
adc
lods
ljmp
xor
stos
push
cmp
mov
lock
ret
js
nop
dec
outsb
mov
popf
dec
mov
cmp
jecxz
adc
arpl
jp
ljmp
fdivl
mov
out
push
mulb
mov
jmp
add
shlb
jmp
mov
outsb
js
jge
test
lock
xor
rorb
rcrl
in
movsl
or
add
int
out
add
incb
push
loopne
inc
mov
and
xchg
lret
outsb
mov
leave
insl
test
fldcw
stc
xchg
mov
sarl
xor
stc
insl
fcoms
enter
jp
out
xchg
sub
and
jb
outsl
imul
pop
cmpsb
xor
push
or
ljmp
bound
and
pop
or
or
jns
movsl
lret
inc
and
popa
aam
sub
pop
imul
das
mov
enter
mov
cmp
out
jne
sub
jecxz
xchg
sahf
mov
add
out
pushf
mov
sbb
mov
adc
rclb
arpl
repz
inc
fmuls
ret
fisttps
aam
add
into
pop
scas
mov
mov
push
arpl
mov
cwtl
mov
mov
push
mov
xchg
lea
add
mov
andl
ret
push
fsubs
xor
xchg
aas
int
add
aad
pop
enter
les
sbb
gs
sbb
xchg
fisttps
push
pop
and
inc
icebp
sti
xor
jbe
xchg
dec
add
out
lods
lcall
mov
into
sub
pop
loop
bound
mov
lcall
dec
mov
mov
sbb
add
xchg
cmp
jae
fs
test
jb
mov
and
jle
outsl
pop
rorb
shrb
sub
enter
xchg
imul
jnp
xchg
push
loop
pushf
cmp
popf
lock
push
out
gs
inc
xchg
dec
mov
mov
movsl
outsl
cmc
inc
xor
xchg
inc
mov
test
inc
ljmp
or
jo
pop
roll
jo
inc
inc
mov
int3
in
ljmp
test
xor
inc
dec
jecxz
mov
inc
out
adc
sub
push
loope
and
xchg
sti
jne
stos
cmp
push
adc
es
xchg
subl
outsl
les
push
sahf
push
les
mov
push
mov
push
mov
frstpm(287
movsl
faddl
mov
test
mov
dec
stos
into
mov
jb
mov
dec
mov
or
clc
icebp
adc
add
mov
push
xchg
add
data16
movsb
mov
push
fdivl
shl
inc
pop
xchg
lods
mov
push
cmp
push
outsl
dec
scas
or
jge
cwtl
aaa
dec
dec
or
insl
cmp
xchg
pop
frstor
cmp
mov
insb
out
xchg
fcmovbe
xchg
adcb
jbe
mov
and
btc
ss
loope
cmp
nop
decb
cltd
jne
dec
adcl
xor
pop
andb
jecxz
daa
xor
inc
btc
and
fcoms
std
and
sub
inc
fcmovnu
andl
adc
out
or
add
loopne
mov
sub
cld
loope
imul
jnp
loop
pop
andl
shlb
into
jnp
dec
test
sbb
sarb
add
imul
repnz
popf
stc
int3
cmp
pop
sub
dec
mov
popa
jp
jo
outsb
sbb
sub
hlt
cld
or
fists
add
xor
std
leave
cmp
loopne
addr16
jae
imul
cs
loopne
bound
lret
xlat
xchg
shlb
mov
pop
cmp
movsl
mov
insl
fdiv
and
mov
mov
push
jbe
add
dec
adc
xchg
aas
ret
mov
jae
add
jl
hlt
nop
mov
mov
repz
adc
repnz
imulb
pop
sub
add
ret
sub
xchg
icebp
and
dec
lods
mov
add
jo
addr16
lcall
stc
xchg
das
cmpb
or
cmpsb
add
xchg
xchg
pop
mov
std
jl
push
rclb
and
mov
inc
xchg
ret
hlt
sub
ret
jmp
mov
out
lahf
lock
add
adc
outsb
lea
adc
cmp
push
adc
aad
es
dec
ja
cmpsl
clc
rcll
addr16
sbb
push
loope
inc
imul
push
cmp
xchg
ror
jl
in
push
push
push
mov
insb
push
mov
sub
or
pop
mov
mov
loop
aaa
pop
xlat
test
loope
sub
gs
inc
jp
bnd
inc
add
dec
jmp
cs
out
mov
adc
out
lock
xchg
out
shrb
adc
je
sbb
sbb
gs
in
cmpsb
and
or
pop
hlt
push
sbb
popa
sbb
mov
stos
loop
adc
adcl
movsb
jno
jbe
repz
adc
jo
movsl
cmp
repnz
std
outsb
xor
js
add
mov
cmpsl
mov
mov
jae
out
xor
ss
fwait
sarl
repnz
xchg
out
sub
fnstcw
icebp
out
inc
shll
adc
inc
sub
shl
mov
inc
jb
in
cmc
pushf
jmp
fwait
loop
jmp
push
sbb
cmp
push
das
into
pop
mov
aam
aad
ja
mov
add
call
rcll
jge
mov
sbb
fdivp
adc
add
mov
imul
pop
je
sbb
sbb
loope
call
mov
xchg
addr16
sbb
push
pop
pop
lods
imul
mov
inc
cmp
xor
arpl
cld
bound
mov
cmpsl
aas
filds
stos
cmpsb
push
cwtl
int
aas
insl
test
cmpb
icebp
mov
scas
push
outsb
lock
mov
popf
mov
mov
dec
jg
mov
stos
sbb
fistps
cwtl
ds
pop
push
and
xchg
mov
adc
sbb
ror
in
popa
cmp
leave
adc
out
div
mov
mov
pop
mov
dec
and
repz
adc
dec
stos
xchg
loope
xorl
ret
testb
leave
mov
nop
sbb
loope
loope
data16
sti
int3
pop
movsb
inc
or
xchg
xchg
cmp
scas
xchg
xchg
adc
outsb
ret
repnz
in
push
push
add
rolb
dec
lock
enter
popf
ret
sub
in
imul
mov
mov
mov
enter
mov
jne
das
push
js
push
lcall
clc
pop
pop
mov
jnp
outsb
mov
adc
dec
jp
call
xchg
idiv
dec
ret
xor
cwtl
daa
add
or
mov
jb
add
and
mov
xchg
xchg
and
icebp
dec
mov
pop
mov
xor
cmpsb
movsl
stc
push
adc
pop
inc
inc
in
pop
add
in
cltd
test
in
gs
jl
cmp
iret
mov
and
ja
int3
inc
cmp
movsb
mov
add
cmp
lock
mov
in
xchg
cmp
in
imul
rcl
cmp
push
pushl
jl
lret
adc
int3
imul
sub
cmp
fisttpl
jmp
int
sbb
enter
es
loope
rorb
cmpsl
shrb
jne
and
cmpl
inc
sbb
mov
outsl
xchg
out
and
notb
inc
and
cmp
fimuls
test
mov
cmp
pop
fcmovbe
jb
xor
out
and
ret
xchg
or
in
sub
test
adc
xor
pop
mov
scas
xor
int3
in
jp
repnz
add
cmp
add
in
out
cwtl
xchg
pop
jae
and
xchg
mov
xor
push
cltd
inc
or
jmp
push
mov
outsl
test
shr
pop
pop
xor
outsl
fidivrs
inc
les
pusha
cltd
sub
ds
xchg
ret
lahf
jb
jo
fsub
faddl
sbb
sub
js
mov
insb
lds
cmpsl
andb
mov
or
add
mov
fwait
in
movsb
mov
mov
sbbb
push
inc
sahf
rcrl
lods
cmpsb
jge
adc
sti
cwtl
out
fdiv
push
fwait
dec
jae
ljmp
insl
ret
push
adc
sub
mov
rorb
loop
jne
sbb
or
enter
test
mov
clc
mov
inc
cmp
xor
sti
and
adc
ja
rol
sbb
fs
data16
int
fisttpl
jmp
dec
test
xchg
xchg
out
add
pop
adc
aaa
mov
paddusb
jo
negw
cmpsl
sbb
stos
loop
jo
pop
adc
jmp
or
aas
lods
mov
test
jp
xor
int3
mov
testl
add
add
jge
xor
arpl
jnp
das
sbb
sarb
je
pop
movsb
out
jae
and
xchg
movsb
add
ljmp
hlt
subb
stos
jne
mov
test
adc
testl
mov
lahf
jb
cmp
ret
mov
popa
lea
jno
dec
or
loopne
inc
enter
vhsubps
add
pop
out
lods
xor
push
rcl
jae
push
test
incl
sub
sbb
add
inc
push
inc
outsl
pop
or
pop
sbb
jg
ds
in
test
push
xor
xchg
sub
sub
xchg
aaa
jo
xchg
push
int
mov
cmp
and
rcrb
xchg
mov
pop
jb
inc
cmp
subl
loope
or
loope
je
mov
test
inc
mov
js
cmpsl
jb
test
jmp
xchg
imul
testb
pop
mov
xchg
sbbl
out
fisttpl
cli
mov
pop
outsl
or
or
adc
push
mov
lea
lods
push
mov
call
lock
fnstsw
pop
flds
enter
mov
adc
inc
xchg
mov
out
jnp
xchg
int3
push
add
sbb
dec
adc
test
mov
xor
fbstp
mov
cmp
cli
aam
mov
rorl
mov
push
xchg
cmp
sbb
js
mov
shrb
repnz
lahf
mov
dec
fs
xchg
in
outsb
push
mov
loopne
lcall
push
insl
cmp
insb
test
mov
inc
jns
cmp
jne
clc
int3
pop
outsb
push
sbb
adc
push
dec
push
paddsw
cld
jb
mov
cli
dec
in
dec
arpl
sub
dec
or
mov
xlat
sub
mov
cmp
jb,pt
cmpl
xchg
add
push
mov
adc
cmpsl
pushf
out
cmp
pop
xor
out
inc
pop
nop
or
test
fs
cli
mov
dec
mov
mov
test
xchg
jb
jge
loopne
xchg
inc
cmp
mov
sbb
lods
hlt
jne
sbb
into
std
sub
std
lods
out
shll
dec
xor
jnp
xchg
mov
mov
mov
inc
repnz
mov
sub
xchg
cwtl
ror
pop
in
adc
cmpsb
cltd
dec
sbb
sub
mov
aad
cwtl
mov
mov
xor
and
adc
loopne
cmp
and
pushf
cmp
arpl
aam
pusha
negl
mulb
inc
scas
std
hlt
lret
inc
and
adc
push
and
xor
or
pop
push
mov
sbb
out
pop
loopne
shlb
rcrl
gs
jmp
mov
xchg
dec
sub
fcoms
pop
das
or
xlat
sub
sub
lret
daa
sbb
in
test
in
sub
fidivl
adc
add
cmp
test
adc
add
ja
cwtl
push
dec
mov
pop
cwtl
adc
cmpsb
dec
stos
mov
movb
push
mov
ss
movsl
fnsave
push
jle
add
push
mov
movsb
push
sub
daa
and
push
cwtl
hlt
sbb
mov
rclb
addl
mov
cmp
sub
imul
into
cmp
test
inc
mov
pusha
lods
mov
add
sbb
shrl
mov
xor
mov
int
pop
rclb
or
adc
repz
mov
pop
pop
scas
pop
cltd
repz
sub
xor
sub
cmp
and
movsl
xchg
add
pop
lods
std
inc
dec
ljmp
cltd
loope
cld
or
je
std
add
lahf
add
popa
push
dec
or
mov
mov
cmp
outsb
add
sub
test
adc
cmpsl
lcall
mov
or
rorb
test
iret
and
pop
ljmp
jb
ljmp
mov
es
xor
push
xchg
push
lret
clc
pop
call
dec
ljmp
or
sub
mov
dec
xchg
sbb
arpl
aaa
cs
popf
mov
mov
fdiv
dec
gs
movsl
jb
sub
jmp
ret
xor
ja
lcall
icebp
push
sarb
int3
imul
sub
insl
sbb
test
or
pop
xor
lret
test
mov
fdivl
dec
test
scas
pop
lahf
subl
lock
mov
push
jle
jl
addr16
xchg
mov
popa
or
pop
inc
xchg
xchg
cltd
mov
sarl
pop
sub
jmp
xor
lock
push
adc
push
ss
or
push
mov
xchg
mov
in
jbe
mov
std
lds
mov
push
push
aam
stos
fiadds
sub
cli
pop
sbb
movsl
or
bound
aas
xor
xor
jae
sar
lods
inc
add
jo
sub
adc
repz
mov
jo
sbb
insb
inc
outsb
and
xor
inc
mov
sub
popf
lcall
xchg
xorl
inc
jae
icebp
aas
push
mov
test
add
rorb
rcl
ret
or
push
nop
dec
push
inc
pop
inc
cmp
insb
shl
das
mov
mov
aas
rcll
imul
mov
xor
mov
adc
mov
stos
push
add
pusha
dec
dec
adc
sbb
std
mov
jnp
mov
push
mov
cmp
and
xchg
stc
dec
movsl
call
call
push
int
arpl
jmp
ret
cmp
popa
leave
mov
repnz
orb
movsb
aad
repnz
add
clc
fldt
gs
mov
aas
in
test
sub
aad
push
mov
adc
jmp
dec
sbb
fisttpll
fldenv
xchg
jle
xchg
jl
sti
dec
bound
sub
add
cmp
fists
cmp
rsm
dec
lds
mov
mov
add
mov
mov
adcl
push
pop
jmp
push
es
lcall
out
jl
add
stos
push
and
outsb
mov
xlat
aam
cld
out
loop
jae
pop
push
shr
andb
add
je
or
xchg
ds
std
sbb
xor
les
push
cmpsb
push
jl
std
add
cmp
stc
sbb
pusha
pusha
loope
jns
stos
or
add
je
insb
jge
xor
pop
xor
ss
jmp
mov
lret
mov
jg
inc
or
jbe
lahf
movsl
pop
jno
cmp
dec
push
push
and
in
aas
push
loop
dec
pop
pop
ss
aad
xchg
adc
rcrl
push
push
mov
lods
xor
pop
and
push
aaa
cmp
int
call
test
rclb
inc
and
push
add
inc
shrl
jg
pop
pop
addr16
pop
out
or
xchg
sub
and
add
xchg
adc
gs
dec
incb
sub
mov
rcrb
dec
sbb
and
aaa
inc
lock
mov
inc
xor
cli
xor
mov
jmp
insl
ret
xor
mov
stc
clc
and
or
scas
sub
rclb
dec
or
mov
mov
ffree
add
adc
and
xor
cmpsb
pop
dec
bound
add
or
shrb
mov
push
sub
inc
xchg
mov
jge
fcomps
jns
js
nop
in
or
shrb
es
int
cld
cli
lahf
mov
shll
xlat
push
xchg
jl
jne
outsl
fsubr
add
mov
fadds
shr
loop
nop
mov
shlb
loopne
mov
js
sbb
mov
lock
add
repz
pop
cmp
and
into
stc
nop
lods
repnz
enter
inc
cmp
xchg
cmp
or
ss
xor
cli
and
ljmp
adc
mov
lret
adc
jmp
icebp
pop
jl
dec
jo
adc
dec
dec
sti
cltd
mov
fnsave
sub
jl
pop
mov
addr16
inc
test
inc
loop
pop
out
dec
add
cmc
mov
xor
sbb
adc
es
mov
repnz
xchg
ss
mov
in
or
jg
push
pop
ret
adc
mov
mov
mov
xchg
jmp
cmp
test
adc
pop
cltd
mov
ds
mov
mov
shrl
mov
dec
cwtl
mov
pop
pop
and
dec
dec
test
push
mov
sbb
adc
popa
xor
sub
push
or
xor
ret
inc
xor
shrb
jnp
or
inc
pop
and
mov
fadds
pop
jb
push
je
fcmovu
mov
adc
or
sbb
jae
ljmp
shll
mov
mov
push
pop
loope
xchg
inc
mov
sub
loope
push
aas
push
fyl2xp1
and
inc
cmp
imul
cmpb
roll
push
cmpsl
sub
nop
movsb
pushf
movups
negb
arpl
inc
gs
aaa
loope
call
outsb
loop
pusha
leave
xchg
xchg
pop
inc
cwtl
fimuls
adc
dec
mov
in
and
jmp
inc
mov
mull
outsl
sub
cmp
ss
xchg
cld
loop
aas
push
and
push
lcall
xor
and
and
push
out
xor
movsb
or
inc
push
into
outsl
jbe
sbb
std
cmp
stc
pop
adc
les
jmp
xchg
test
test
push
mov
add
and
sub
push
sarl
xorb
jmp
lods
orl
pop
and
or
leave
add
setle
lods
popa
repnz
xchg
cmp
push
negb
fs
mov
lcall
jecxz
enter
shr
mov
rcl
clc
lods
je
jo
lret
and
cmp
add
cmp
cmpsl
ret
dec
gs
imul
outsb
shld
mov
push
xor
shl
pop
mov
add
pop
jb
mov
cld
lods
dec
jno
arpl
in
mov
inc
sub
mov
sbb
daa
outsl
pop
test
mov
les
pop
cmpl
or
xor
mov
inc
pushf
stos
and
jle
fmull
inc
ja
sahf
or
or
mov
fbld
mov
sub
xchg
loop
mov
into
aas
jl
push
dec
andl
pop
cltd
or
call
pusha
in
inc
lods
iret
ljmp
lock
test
call
ret
aam
push
xchg
jno
xchg
and
sbb
test
loope
sub
nop
or
xchg
jns
dec
shlb
xor
push
adc
fidivs
mov
push
push
stc
mov
pop
icebp
and
outsb
mov
pop
cltd
inc
jp
mov
sbb
lea
addr16
dec
and
imul
aaa
outsb
aam
mov
imul
xchg
cmp
loope
inc
pmuludq
sbb
rorb
sbb
dec
sbb
jg
push
sbbl
jg
ss
cmp
out
test
enter
jl
ljmp
pop
sub
ficoml
subl
movl
mov
jne
pop
daa
pop
loop
mov
push
loope
std
xlat
push
int
movsb
shlb
mov
fistl
ror
add
ror
outsb
rdmsr
push
inc
cltd
clc
push
bnd
jmp
xor
sub
es
push
mov
mov
vdivsd
xor
je
scas
dec
mov
push
mov
pop
pop
sbb
ds
loope
add
pop
shr
mov
xor
mov
xchg
hlt
mov
shl
popf
or
test
cwtd
sub
mov
push
repz
loopne
add
leave
lods
lahf
mov
mov
pop
sub
jecxz
das
add
and
imul
ja
getsec
arpl
aam
mov
mov
pop
sub
jns
xor
mov
cmc
dec
lret
imul
inc
mov
popf
insl
sub
jbe
std
xchg
pop
adc
inc
cs
stos
loopne
sub
cmp
incb
bound
clc
mov
pop
jnp
ret
mov
jo
dec
inc
xchg
pop
xor
mov
mov
test
push
pop
mov
jns
inc
popa
rolb
dec
xor
test
repz
ret
scas
jmp
cmp
mov
push
xchg
outsl
xchg
movsl
xor
sbb
sub
push
jae
dec
es
pop
cmpsb
iret
div
cs
aas
stos
or
cmp
retw
jno
adc
sbbb
cmp
int3
test
sbb
sbbb
add
cmpsl
xchg
lahf
incb
pusha
adc
mov
pop
xor
cli
jbe
mov
fistpll
pusha
xor
mov
cmp
xchg
js
lcall
ljmp
fldcw
js
enter
sbb
outsb
xchg
cmpsl
js
add
lret
or
xchg
xchg
cltd
or
mov
inc
fnstcw
jne
push
andb
movsl
iret
loop
std
add
movsb
push
addr16
cmp
mov
push
pop
add
mov
adc
stc
js
scas
xchg
pushf
and
sbb
inc
mov
cmpsb
ss
aam
ljmp
mov
adc
fwait
test
add
addr16
jge
in
mov
leave
inc
xor
push
jbe
hlt
cmp
pop
sub
xchg
add
dec
push
mov
push
or
aaa
hlt
push
daa
shl
rcr
outsl
and
inc
imul
push
or
lds
call
push
cmp
cmpsb
movsb
rolb
out
push
mov
fsubrs
cmp
push
cli
stos
jo
inc
xchg
cs
cwtl
aaa
ljmp
shr
sbb
mov
daa
jmp
sub
icebp
fisubrl
adc
out
jl
add
popa
pop
mov
shll
aas
jb
cmpsb
xchg
arpl
test
das
adc
and
ja
cld
mov
in
and
xchg
das
xchg
push
inc
push
sub
mov
dec
loope
jmp
pop
fnstenv
mov
cld
xchg
in
jbe
or
lock
cwtl
hlt
popa
jns
cld
adc
cmp
cmp
movsl
inc
sub
mov
dec
adc
mov
mov
mov
sbb
xor
dec
mov
sub
cld
add
jns
fisubl
jbe
repz
lahf
and
gs
mov
cmp
cmp
pop
xchg
out
es
push
sbb
cmc
inc
inc
in
sub
push
enter
dec
sbb
enter
hlt
jb
out
dec
sahf
add
cmpsl
mov
adc
inc
repz
stc
or
cmpb
jg
jmp
imul
pop
mov
push
movb
sbb
decl
add
std
mov
jb
shr
push
ror
sbb
aad
push
push
mov
rcrb
outsb
mov
add
repnz
sub
push
les
mov
loope
pop
fistpll
rcr
mov
xchg
into
xchg
jb
orb
punpckhbw
hlt
cmp
jo
jne
xchg
and
jp
fs
mov
mov
loop
dec
cmpl
dec
imul
xchg
movsb
mov
cmp
ds
ja
pop
push
lods
mov
xor
or
lods
ret
pusha
jo
leave
out
imul
fildl
faddl
mov
jecxz
ja
and
call
cmpsb
into
icebp
sbbl
rcl
scas
inc
sbb
in
arpl
xor
xor
pop
push
aas
into
aam
outsb
js
add
xchg
sub
repz
out
std
mov
je
mov
fbld
sub
outsl
leave
hlt
mov
and
push
repnz
das
mov
std
ljmp
cltd
repz
daa
andb
aas
iret
sub
cwtl
push
fwait
sub
out
pop
int3
imul
cmp
addr16
sub
fwait
stc
mov
add
push
or
aad
sbb
fs
dec
je
les
xor
repnz
mov
stc
xchg
lret
mov
mov
stc
cmp
lea
inc
adc
sub
incl
and
mov
mov
mov
fildll
daa
cwtl
push
jmp
sar
dec
shufps
imul
push
mull
jne
testb
stc
jae
push
mov
add
xchg
fwait
mov
push
mov
pushf
xchg
test
push
pop
andl
sub
sbb
jmp
adc
jle
dec
cmpsb
xchg
or
lock
das
lahf
fdivl
fsubl
outsl
insl
xchg
inc
aas
inc
xor
sub
xchg
aam
inc
sbb
ja
adc
mov
xchg
pop
js
fnstcw
stos
out
mov
icebp
out
mov
adc
dec
sub
adc
mov
fucomip
cwtl
jnp
enter
pushf
nop
fstl
mov
or
sbb
mov
int
mov
xacquire
jmp
push
movsl
dec
enter
jl
iret
dec
int
pop
test
push
jmp
xchg
imul
test
in
arpl
cmp
dec
scas
shlb
fs
jnp
adc
cmp
pop
int3
movsl
cmpl
pushf
mov
cmp
loope
sbb
movsl
scas
mov
repnz
cmpsl
cmpsb
push
mov
or
es
push
jae
pop
sub
insb
add
popf
sub
and
mov
les
in
add
push
scas
fs
lahf
aaa
mov
sub
push
stos
jno
mov
jecxz
jg
mov
scas
fsubs
fsubrp
daa
add
cli
add
imul
lock
pop
add
lds
aas
mul
push
test
lret
xlat
push
loopne
push
pop
addr16
int
pushf
aad
cltd
in
setl
sbb
and
push
negb
dec
pop
or
cmp
mov
test
xor
sub
push
faddl
sub
inc
pop
iret
pop
sbb
stos
jo
cmp
lcall
popf
push
pop
or
xchg
cmp
add
push
sarl
mov
mov
outsl
dec
push
inc
pop
push
ljmp
pop
mov
jp
neg
or
aaa
cmp
push
scas
pop
icebp
dec
repnz
das
lcall
das
into
test
shlb
out
setbe
add
mov
inc
loop
arpl
xor
out
mov
outsl
cmp
xor
shlb
jns
fnstcw
fcomi
xchg
pop
push
add
cmc
lret
lods
add
inc
test
jo
cmp
fnstcw
cmp
mov
lcall
out
xor
cmp
inc
push
pop
and
outsl
rcrb
inc
lcall
cmp
mov
xor
mov
out
inc
jge
pusha
sbb
inc
lock
cwtl
push
dec
or
sub
xlat
dec
jmp
mov
and
sub
inc
mov
cmp
mov
xchg
jb
fcoml
iret
in
xor
lret
sbb
jge
mov
cwtl
je
push
aas
daa
aaa
pop
out
aas
mov
pop
nop
notb
roll
xor
sbb
in
lret
cmp
shrl
in
out
mov
sub
mov
sarb
inc
aas
mov
clc
fstpt
int3
inc
rcrb
rolb
jp
aam
dec
xchg
push
and
scas
mov
push
push
fadds
test
xchg
iret
lret
loopne
adc
cmp
mov
out
sub
movsb
ss
sar
bound
dec
ljmp
aaa
aam
call
lret
push
mov
call
jne
es
pop
add
mov
loopne
loopne
or
xchg
inc
pushf
xchg
adc
pop
aam
enter
or
pop
mov
mov
xor
mov
xchg
ficoms
jp
xchg
jge
lret
jae
rclb
daa
shll
push
mov
outsb
pop
out
out
jb
insb
xor
push
jmp
movsl
iret
testb
out
push
clc
pop
outsb
and
ror
aam
or
cmp
cmp
ret
pop
xor
aam
pushf
in
pop
fnstcw
xchg
testl
pop
mov
jmp
cli
pop
movsl
pop
and
mov
cmp
or
sbb
cmp
sbb
sub
outsb
mov
iret
ss
test
pop
push
jecxz
cmp
sbb
cmp
mov
adc
sub
and
outsb
inc
or
insb
inc
fbld
inc
pop
or
cmc
cs
popa
fadds
push
cmp
aad
cmp
fcmovbe
bound
adc
xlat
pushf
and
and
lahf
xchg
or
sub
ljmp
or
rorl
in
jmp
pushf
mov
mov
jns
jb
push
imul
pop
nop
and
std
cld
bound
inc
sbb
leave
js
pop
imul
dec
jb
add
dec
shll
mov
mov
jns
adcb
cmc
inc
rclb
into
rcll
inc
dec
push
xor
mov
sbb
cmp
imul
jno
popa
xchg
pop
outsb
pop
pop
jg
add
stos
imulb
clc
push
dec
xor
sbb
rclb
mov
cmp
or
sarl
inc
push
in
ljmp
dec
xor
call
lcall
sub
rcr
xor
aam
lods
mov
mov
cmpsl
push
clc
in
pushf
xchg
xchg
jno
xchg
loope
push
push
mov
push
loop
imul
ss
add
lahf
sarl
lret
xor
mov
sbb
and
dec
mov
mov
mov
push
es
insl
sbb
test
dec
scas
cmc
and
xor
mov
ljmp
mov
sar
iret
mov
in
sbb
les
sbb
js
xlat
sub
dec
negb
fldln2
sub
stc
push
out
fimull
int3
loop
xor
pop
cld
ret
pop
sub
out
pop
aaa
push
jnp
push
popf
addr16
cli
jno
nop
jl
imul
adc
fcompl
loope
scas
movsb
and
test
idivb
lret
dec
ret
out
mov
loope
jp
add
jne
push
aad
mov
sti
lret
or
xor
std
gs
push
test
popf
push
pop
jle
mov
mov
pop
sbb
mov
scas
es
stos
clc
cld
lea
aad
mov
and
pop
and
fmuls
into
pop
loopne
mov
sub
mov
lea
mov
mov
fimuls
outsb
in
push
arpl
dec
lahf
sub
sub
xrelease
jg
std
stos
push
js
xor
fldt
cmpb
or
ret
aaa
xchg
mov
adc
mov
adc
adc
cltd
xor
xor
dec
bound
mov
cmpsl
xchg
das
lret
mov
adc
daa
xchg
mov
into
ljmp
inc
xchg
xchg
xor
imul
mov
or
and
jg
scas
mov
pop
in
sub
pop
xlat
fcompl
cwtl
lods
xchg
push
addr16
jne
mov
pop
cmp
push
clc
and
inc
cld
or
fidivrl
mov
popa
fnstenv
cmp
mov
inc
in
or
aas
mov
inc
mov
xorl
xchg
cmpsb
inc
cld
push
mov
xor
sbb
dec
cli
pop
jbe
inc
push
cli
es
sub
rclb
mov
dec
xchg
loopne
arpl
or
bound
inc
stos
jo
mov
sbb
pushl
mov
jne
mov
jns
lock
lock
mov
ror
sub
xchg
imul
jle
push
xor
imul
scas
pop
aam
stos
dec
inc
mov
xchg
xor
stos
mov
in
ljmp
call
cltd
push
adc
push
dec
fbld
add
lret
sub
ja
repz
call
mov
pushf
jno
add
arpl
cmpsb
xor
jl
inc
adc
arpl
jg
jne
mov
cld
mov
add
loopne
xor
aad
mov
fistpll
xchg
repnz
ds
rdtsc
jns
pop
lods
insb
jl
or
or
push
movsl
mov
lea
sti
xchg
je
push
adc
sti
inc
sbb
aas
mov
aam
lea
dec
mov
sbb
arpl
lock
mov
stos
add
mov
inc
jl
cmpb
cld
daa
repnz
xor
in
dec
pop
mov
repnz
mov
rcl
xchg
pop
lds
push
ss
push
test
xchg
sets
fnstsw
fsubs
repnz
les
shrl
fs
mov
inc
out
gs
aas
pop
pop
and
xchg
out
aaa
sub
cmp
mov
lcall
sub
cmpsb
repnz
cmp
leave
push
adc
adc
mov
cltd
inc
sbb
dec
inc
or
mov
jb
cmp
cmc
jle
insb
add
xor
push
fstpl
cmp
daa
negl
mov
jne
pop
add
movsl
hlt
enter
and
sbb
xchg
mov
cmp
pusha
or
ss
out
push
cld
push
loope
jno
add
jo
pop
mov
aas
pop
inc
xor
xchg
cli
pop
ret
adc
js
cmp
cltd
ficomps
mov
fiadds
push
xchg
gs
push
cmp
pushf
adc
xchg
retw
pop
inc
ss
clc
xor
hlt
mov
lcall
scas
or
stos
shl
int
icebp
pop
xor
and
sub
sub
add
fnsave
pop
dec
pusha
xchg
test
dec
ret
aas
mov
arpl
pop
sbb
sbb
into
xor
icebp
mov
cmp
sub
lcall
xor
sub
or
mov
lods
push
gs
sbb
je
xor
push
push
rorb
mov
test
lcall
dec
das
dec
lcall
in
sub
mov
outsl
xor
fwait
cltd
adc
fs
add
leave
jecxz
fsubs
mov
lahf
lret
scas
hlt
lods
mov
mov
imul
notl
jbe
popa
jnp
push
loopne
pusha
scas
and
push
outsb
mov
iret
cmp
sbb
daa
movsl
lods
pop
in
movsb
rcl
push
in
fsin
gs
sub
insb
add
pushf
xchg
pop
xor
push
daa
xchg
push
pushf
xor
out
lock
dec
and
xchg
sahf
sbb
mov
mov
in
jmp
ret
pushf
int3
out
sahf
mov
pop
inc
mov
imul
sahf
xchg
imul
push
cmp
and
clc
test
or
mov
mov
gs
bound
mov
xchg
and
inc
jb
sbbl
rolb
adc
mov
or
inc
pop
ds
or
cs
rclb
and
or
or
and
and
jge
push
cs
inc
inc
pop
fimull
sbb
fisubl
pop
fmuls
xchg
xor
in
jb
enter
into
dec
add
push
bound
push
leave
int3
repnz
loop
mov
xor
pop
int3
push
fisttpl
sub
fmuls
inc
lea
aam
lods
pusha
dec
cmp
sub
shr
sti
mov
cltd
andb
popa
in
jge
mov
into
mov
bound
mov
call
inc
adc
or
dec
inc
add
jne
daa
sub
mov
stc
addr16
clc
je
fimull
xor
mov
and
icebp
outsb
xor
push
mov
or
pop
dec
insl
fnstsw
cs
xor
jl
mov
mov
mov
cmp
push
mov
push
push
cmp
movsl
sub
mov
loopne
jbe
cmp
lock
pop
inc
jl
mov
jb
pop
int3
add
mov
ret
outsb
and
pop
xchg
pop
mov
les
ret
pop
push
xchg
fiaddl
inc
iret
sub
cmp
lret
stc
std
aad
mov
and
stos
aas
into
in
pop
arpl
cltd
hlt
pusha
sarl
loop
mov
out
pop
jl
sub
adc
pop
lods
nop
jmp
adc
fcompp
popf
sub
jns
loopne
loop
inc
popa
or
shlb
nop
mov
inc
sub
xchg
push
arpl
das
and
xor
out
mov
sub
popa
mov
dec
clc
scas
out
adc
scas
popf
jnp
popf
movsb
fnstenv
xchg
clc
mov
jl
xchg
repnz
add
sub
movsl
les
fwait
sbb
lret
sbb
fnstcw
pop
notl
inc
and
mov
or
mov
push
push
shl
fs
fstpt
pop
mov
add
fnstcw
mov
rcrb
xlat
xor
popf
es
cltd
lcall
inc
push
xchg
iretw
dec
mov
rcll
fiadds
pop
jbe
mov
nop
rcll
dec
mov
or
scas
xchg
ljmp
shrb
push
ljmp
push
icebp
inc
shl
cmpsb
and
cli
add
and
shlb
sbb
jge
cmp
sub
mov
aas
mov
add
and
test
int
push
aaa
jno
push
jae
sbb
shll
mov
shll
xor
rolb
mov
cs
cli
and
mov
addr16
sub
pop
mov
ret
mov
xchg
popf
sub
mov
mov
add
mul
pop
dec
lods
cmp
mov
in
xor
aam
arpl
xchg
shrb
pop
mov
data16
push
add
push
into
sahf
fcmovb
lock
lret
lret
pop
adc
les
aaa
jecxz
add
dec
push
iret
mov
adc
loope
jnp
push
ret
xor
ja
sbb
adc
jne
fbld
cld
and
stos
jns
adc
cmp
cltd
sti
cmpsb
mov
arpl
pusha
clc
orb
test
shll
xor
or
mov
loopne
or
mov
xchg
adc
xchg
icebp
xor
mov
mov
add
aaa
out
lcall
cld
mov
addr16
cld
xorb
mov
lods
cmp
movsl
aaa
mov
sbb
jmp
fildl
repz
dec
repz
ds
sti
mov
pop
sub
push
push
push
lret
xor
rorl
adc
outsl
and
dec
adc
sbb
sti
sub
xor
mov
inc
cmp
enter
jb
addr16
mov
push
xchg
xor
adc
mov
pushf
ja
inc
adc
inc
rcr
and
pusha
xorl
dec
ror
pushf
test
shll
mov
xchg
xor
mov
fisubl
lret
gs
movl
cld
adc
and
jge
int
sbb
cmpsl
and
bound
std
fadds
mov
or
inc
inc
ljmp
inc
movsb
mov
fldcw
enter
int3
in
fidivs
cmp
fsubrl
dec
and
cmp
xchg
mov
push
fsubr
lret
push
fcmovnbe
mov
push
fsts
sub
popa
lds
sub
pop
sbb
jbe
xchg
cli
cmpb
call
jecxz
add
or
icebp
fistps
mov
loope
inc
mov
adcb
jle
mov
adc
jns
pop
pop
push
adc
pop
dec
sbb
pop
and
ja
mov
ja
sti
rcll
ljmp
and
roll
loop
and
cmpsb
leave
xor
cmpsb
push
xchg
xor
hlt
sub
insl
mov
inc
pop
aam
sub
push
inc
push
ret
adc
fldcw
cmpsl
sbb
push
or
fwait
ds
or
or
xchg
pop
test
and
or
addr16
sub
mov
adc
stos
inc
pushf
jo
fsts
cmpsl
mov
or
sarl
cmp
mov
jns
out
xchg
cmpl
or
aad
pop
inc
jmp
cmc
or
xlat
inc
pop
div
pop
loopne
inc
divl
imul
jo
cmp
push
sbb
je
outsl
mov
adc
cwtl
dec
mov
pusha
mov
or
js
into
push
stos
mov
jo
adc
push
pop
sub
lods
vphaddubw
outsb
xchg
sub
mov
sbb
insb
jle
jg
xchg
out
xchg
dec
mov
outsb
pushf
ljmp
mov
icebp
rcrl
inc
adc
xor
into
xor
lcall
jbe
xchg
inc
xchg
movsb
and
fwait
sub
pop
ss
testl
daa
push
cmpsl
les
push
adc
or
stos
aas
lock
int
mov
push
add
inc
or
test
mov
cld
jge
bnd
inc
dec
inc
push
mov
fwait
push
inc
movsb
dec
jecxz
pushf
das
inc
add
cwtl
mov
scas
andb
inc
fucompp
mov
lods
leave
es
pusha
test
push
das
movsb
sub
jno
pusha
dec
and
dec
mov
xchg
mov
lock
in
adc
aaa
lock
xor
add
adc
sbbb
nop
jle
mov
test
sub
push
dec
pushf
idivl
cmpsb
and
arpl
jl
movsl
lret
jmp
xchg
arpl
lds
imul
out
jbe
in
imul
jns
cmp
and
mov
mov
xor
push
add
pop
pop
mov
mov
lods
lahf
test
clc
popf
lea
jecxz
mov
repz
sbb
add
daa
ror
lret
daa
nop
lods
mov
clc
xlat
cld
mov
mov
jmp
movsb
jmp
push
and
loopne
divb
pop
cmc
sbb
pop
mov
test
or
pop
bnd
pop
mov
xchg
test
sbb
loopne
and
mov
movsb
lds
jg
into
adc
popf
cli
sub
mov
sti
les
and
idiv
lds
scas
jo
sub
cmp
rcr
int3
pushf
dec
pusha
cltd
xchg
sub
aam
push
xchg
jae
loopne
sbb
mov
pop
jns
dec
ja
xor
mov
and
sti
add
mov
sub
loopne
and
mov
lret
in
adc
and
fst
adc
mov
sub
ret
movsb
jmp
fidivs
gs
sbb
sub
adcl
sub
pop
mov
mov
cmc
mov
xlat
cmp
sub
lods
into
and
fcoml
mov
xor
mov
mov
dec
les
filds
adc
push
jns
jl
jmp
das
xchg
xchg
mov
loopne
js
adc
stc
jle
xchg
insl
and
fcompp
sub
nop
loop
scas
mov
out
in
mov
aam
adc
xchg
push
insl
js
add
fdivrl
sub
push
push
cli
mov
lahf
aad
scas
movsb
aas
test
jno
faddl
rorb
and
fwait
aam
sub
lock
or
sti
jecxz
adc
inc
and
cmpsl
dec
mov
daa
setp
xchg
adc
popf
adc
js
inc
fstpl
in
test
out
loopne
xchg
or
out
cmp
jo
mov
mov
cmp
mov
or
jg
stos
mov
test
negl
es
lock
jbe
dec
mov
mov
imul
in
test
pushf
ret
mov
push
stos
mov
shl
aas
movsb
push
bound
sbb
repz
std
das
nop
xor
or
pop
loope
xchg
or
cmc
mov
sub
jmp
inc
xchg
lret
jmp
out
inc
shrb
sti
mov
cmp
add
lds
pusha
or
sbb
sub
jge
inc
add
dec
jl
xchg
call
xor
addr16
jge
mov
jp
and
inc
lret
cmp
shrl
jno
aaa
push
push
pop
cmc
sbb
jo
test
popl
les
scas
lds
jle
rclb
fimuls
dec
movsb
loop
add
and
and
sbb
pop
cmp
aad
push
inc
insb
pop
mov
jb
mov
xchg
lds
mov
daa
jo
xchg
fucom
sbb
cmp
add
xchg
inc
in
jne
movsl
add
inc
mov
mov
pop
sbb
fcoms
std
cmp
cld
jl
cmp
adc
cwtl
aas
fimull
stc
setb
xchg
lcall
push
ret
ds
inc
les
jmp
into
sbb
mov
rcll
ret
sub
imul
sbb
stc
mov
jnp
or
shl
andb
iret
add
push
movb
push
arpl
fidivl
std
mov
mulb
dec
mov
cmpl
je
sbb
mov
dec
xchg
push
mov
daa
mov
adc
imull
cmp
push
mov
orb
in
lret
mov
stos
sbb
sbb
adc
push
adc
sbb
and
cmp
shrb
sub
jb
inc
rcr
lds
or
xor
and
xchg
test
in
xchg
cmp
and
lret
push
icebp
movups
pop
movsl
sti
jb
stos
cmpsb
mov
imul
or
fsts
xor
xchg
dec
aas
mov
sub
fnsave
sbb
fs
imul
xchg
xchg
jae
in
outsb
dec
push
add
xor
shr
add
cmc
test
push
pop
mov
sbb
mov
daa
jne
xor
lea
fistl
ror
push
rorl
mov
call
pop
out
addr16
jge
pop
xchg
frstor
movsb
jbe
mov
xchg
mov
stc
adc
mov
lea
or
cmp
inc
mov
mov
ss
clc
jno
mov
or
cltd
adc
mov
push
repz
pop
pushf
jns
jbe
jecxz
cmp
xor
gs
mov
cmp
data16
lahf
testb
pop
into
nop
sbb
add
enter
mov
xchg
sub
cs
movsl
addr16
add
mov
mov
in
sahf
sbb
add
mov
and
rcr
jg
cmp
xor
ret
repnz
in
out
mov
mov
out
ss
ret
insb
mov
into
mov
stc
mov
mov
mov
mov
lret
lret
fbld
mov
push
and
cmp
je
pushf
sbb
andb
loop
mov
jo
mov
fldl
sbb
xchg
call
gs
cwtl
mov
dec
mov
fistpll
xor
adc
cs
push
inc
adc
pusha
xchg
sbb
cmpb
inc
mov
sub
mov
ds
and
sub
shlb
jae
cltd
icebp
cmp
push
and
adc
pop
outsb
mov
test
scas
loopne
in
out
mov
pop
repnz
pusha
jo
sub
adc
ret
jg
mull
lcall
pop
jae
fs
ficompl
push
push
or
mov
and
loopne
aam
les
xchg
stos
inc
sub
imul
jl
cmpsl
ss
out
out
adc
out
push
cmp
mov
sub
mov
std
stos
incl
or
jno
cli
jmp
push
or
sub
inc
sbb
data16
das
mov
loop
fcmovb
xor
mov
pop
movsb
je,pt
pop
clc
xchg
adc
adc
inc
orb
cmp
cltd
jle
jl
faddl
jae
cmp
gs
nopl
push
or
clc
pop
fwait
shl
scas
add
dec
xor
insb
or
cmpsl
xchg
xor
adc
inc
mov
cmp
jp
xchg
xchg
inc
in
into
fisubs
inc
gs
xchg
negl
adc
in
push
xchg
dec
and
xor
push
xchg
cwtl
scas
sbb
dec
push
adc
jmp
push
mov
or
mov
xchg
push
in
pop
mov
les
sbb
cmp
loope
jno
mov
test
addr16
rolb
scas
mov
mov
fcomps
arpl
std
lahf
inc
sbb
dec
xchg
stos
mov
mov
popf
aas
cmpsl
sbb
jmp
jno
cmp
inc
cmp
ret
clc
lods
int3
cmpsb
xor
xchg
jmp
pop
rcrb
in
and
pop
sub
cmp
js
jno
enter
or
hlt
cli
arpl
xorb
xor
push
sbb
int3
jns
cmc
adcb
icebp
dec
inc
add
in
fists
add
outsl
xchg
ja
cmpsl
ss
icebp
and
das
rolb
mov
add
test
push
aaa
push
xchg
popf
dec
cmp
gs
pop
aas
mov
enter
xchg
mov
pop
in
jmp
data16
test
push
cmp
push
lcall
aam
lcall
hlt
in
or
push
inc
fadds
bound
addr16
mov
das
lcall
push
divb
and
push
push
or
hlt
add
mov
lcall
jns
mov
xor
cltd
call
cmp
insb
mov
push
fsubs
jne
or
inc
sbb
inc
jle
add
sub
cmc
adc
ds
aaa
or
dec
imul
push
out
push
push
xchg
or
lea
jae
push
test
stos
int3
adc
add
test
inc
int3
jno
xor
cmpsb
fidivs
repnz
orl
sbb
xor
push
cmc
jo
ja,pt
out
jl
xor
daa
inc
sbb
test
lcall
cs
iret
xchg
aad
adc
mov
pushf
pop
fcom
pop
mov
jbe
sub
push
sbb
fwait
xlat
aad
pushf
and
shlb
xchg
xadd
push
add
adc
mov
push
mov
xchg
jnp
lock
mov
fwait
loope
cmp
ljmp
jae
int
mov
and
dec
shll
adc
xor
jge
shlb
scas
rcrb
out
pop
dec
or
mov
fidivl
iret
or
sar
push
adcl
loope
cmp
pop
int3
dec
into
jecxz
dec
inc
out
lea
hlt
sub
inc
popa
push
inc
mov
jno
shlb
in
mov
push
xchg
mov
inc
jmp
shll
cmp
or
cmp
xorb
movsl
mov
lods
or
rolb
iret
xchg
jns
jae
mov
pop
and
dec
inc
in
adc
xchg
sti
jge
sti
pop
ja
cmp
and
in
pusha
xchg
adc
inc
push
pop
mov
mov
push
pop
loop
call
outsl
push
into
nop
into
xchg
push
xor
mov
imull
jg
inc
jge
push
xchg
push
mov
repz
mov
jnp
inc
dec
mov
testb
mov
pop
xchg
hlt
outsb
add
mov
outsl
test
ret
insl
in
mov
add
and
daa
and
mov
mov
out
xor
push
outsl
std
ss
push
xor
pop
dec
popa
pop
and
push
cmp
lods
inc
push
mov
pop
mov
ret
les
mov
bound
outsb
inc
inc
mov
cmp
xchg
mov
rcrb
cmp
mov
push
or
push
sbb
jg
out
mov
mov
mov
cmp
pop
test
test
xor
aas
loopne
dec
jno
mov
mov
es
dec
pop
shlb
jo
out
icebp
rorl
ljmp
mov
rorb
rcrl
sbb
insb
push
sbb
scas
in
pusha
xor
xlat
mov
mov
sub
lods
hlt
sub
push
stos
jp,pt
xchg
mov
or
clc
cli
ror
or
push
les
mov
outsw
insb
mov
ja
sbb
adc
push
mov
test
mov
flds
inc
cmp
insl
jl
jnp
add
test
decl
dec
out
cmp
inc
lret
fstpt
out
dec
dec
push
add
or
dec
cmp
push
pop
xorl
xor
dec
inc
ficompl
shlb
hlt
jmp
mov
sbb
add
adc
xor
add
push
cmpsb
sub
push
inc
outsl
insl
xlat
mov
push
xor
sub
repnz
xchg
fidivs
add
sti
cmp
outsb
jl
leave
jnp
sub
jbe
icebp
mov
jp
cs
add
inc
sbb
dec
ss
dec
lods
adc
sbb
test
clc
lret
mov
push
addr16
lods
mov
and
outsl
and
and
adcl
jl
lcall
mov
fld
mov
fstpl
or
popa
xor
cmpsl
imull
lret
arpl
faddl
xchg
sbb
mov
xor
xchg
movsb
dec
test
rcr
xchg
and
into
push
jnp
xor
xor
jmp
nop
aad
test
xchg
js
jno
ja
fucom
sti
fidivs
mov
sub
dec
push
mov
xor
pop
cmc
cwtl
cwtl
mov
dec
rolb
xor
adc
and
or
adc
push
fdiv
adc
arpl
jge
leave
add
inc
in
jecxz
das
inc
pop
adc
mov
push
and
jecxz
call
xchg
pop
mov
and
ret
mov
outsb
outsl
mov
adc
mov
adc
daa
movsl
aad
and
testb
ds
mov
mov
lods
xchg
divl
jp
pop
subb
pop
mov
iret
lea
mov
shrw
mov
sbb
imul
fs
push
add
lods
dec
and
scas
dec
cltd
mov
pop
jg
scas
sbb
repnz
jae
mov
nop
pusha
jle
and
adc
cltd
adc
leave
mov
and
enter
loop
lock
sbb
jg
cmp
and
dec
inc
ret
fidivs
dec
push
out
dec
and
sub
jb
jno
out
inc
arpl
shl
cmp
scas
push
imul
adc
xchg
lcall
test
pop
call
fldenv
push
mov
pop
push
and
mov
pop
mov
js
or
lods
xchg
push
mov
addr16
call
jo
pop
sub
inc
xchg
outsb
js
roll
imul
test
adc
negb
bound
jge
sahf
mov
xor
push
push
into
loope
xchg
pop
loop
iret
movsb
mov
sub
push
repnz
inc
adc
ss
fmull
cs
mov
pushf
nop
imul
xor
bound
outsb
lret
testl
mov
sahf
inc
and
repz
sub
movl
inc
push
push
call
int3
xchg
sub
and
rcrl
dec
dec
cs
push
cmc
addr16
addr16
sub
mov
lret
xchg
mov
je
and
bound
out
pusha
mov
and
shlb
adc
icebp
mov
cmp
add
icebp
dec
mov
mov
or
pop
xor
addr16
into
mov
push
inc
test
lcall
test
testl
je
js
aas
push
ljmp
std
adc
xlat
xor
add
push
loopne
gs
and
jg
mov
in
sarb
ljmp
sbb
cli
pusha
mov
lret
dec
lcall
add
std
and
popa
dec
jmp
stos
mov
loop
cltd
je
mov
hlt
pop
lds
cmp
aas
dec
sbb
jecxz
fildll
push
jle
test
pop
insb
mov
pop
xorl
mov
dec
lahf
arpl
jg
cmpsb
mov
pusha
loopne
shl
popf
repz
cli
xchg
sbb
mov
jp
psubsb
pusha
rolb
pop
pop
test
and
push
sbbl
xchg
inc
push
nop
das
jae
js
neg
ja
dec
jbe
cmp
int3
and
loope
mov
sub
scas
cmp
jl
pop
outsb
add
iret
ja
dec
dec
add
xor
jecxz
xor
mov
mov
jno
mov
les
adc
ljmp
push
cmp
js
in
jle
movsb
repnz
inc
push
sub
in
lret
pop
sbb
movl
mov
nop
xchg
sub
pop
mov
divl
push
cmpb
push
jne
test
leave
jle
hlt
mov
mov
fsubl
inc
sub
shlb
jo
xchg
pop
mov
xor
jp
pop
sbb
jecxz
push
andl
pop
ficoml
call
lret
xchg
pop
aam
mov
fmull
mov
push
lods
lcall
movsb
push
mov
dec
mov
movsb
out
test
sbb
rcll
mov
xchg
push
add
out
hlt
fmulp
jecxz
mov
das
shll
add
lods
xor
mov
test
cmp
cli
add
mov
ja
push
lret
push
sti
ljmp
jmp
mov
repz
fldt
jbe
fdivs
pop
push
jg
jmp
stc
adc
inc
mov
icebp
hlt
je
ucomiss
arpl
andb
adc
sub
test
enter
fisubrs
mov
inc
imul
stos
push
adcb
jge
xchg
out
adc
or
mov
or
sbb
cwtl
cmc
test
jmp
insl
xor
push
jnp
ljmp
mov
pop
xchg
and
gs
sahf
sarb
pusha
loopne
stos
cmp
pop
jecxz
cmpsl
adc
js
add
sbb
in
lahf
es
sbb
pop
add
js
adc
sub
sbb
push
adc
mov
push
ljmp
stos
and
xor
testl
jp
mov
or
insb
lea
outsb
push
repz
dec
dec
movsl
xor
pop
dec
mov
jnp
inc
stc
es
aam
sahf
and
movsl
lods
xchg
in
push
sahf
jns
dec
call
jg
repz
enter
or
sub
sbb
ss
mov
mov
jecxz
xchg
std
push
sti
adc
push
push
push
int
push
pop
pop
test
pop
testl
xor
sbb
loop
and
outsl
dec
arpl
add
pop
jmp
repnz
inc
rclb
jnp
add
fwait
cmp
ret
mov
jle
insl
sub
sub
popa
ret
std
sub
lods
ja
adc
loop
jno
dec
pop
in
je
mov
cmp
fisubrs
jno
add
or
scas
mov
jbe
iret
adc
jp
mov
inc
add
fildl
sub
inc
repnz
cmp
push
mov
adc
leave
movsb
pop
imul
int3
add
jns
jnp
xchg
in
inc
cmpsb
stc
mov
mov
das
enter
imul
cmpsl
jmp
enter
icebp
or
xchg
pushf
xchg
nop
pop
sub
adc
lcall
je
inc
loopne
mov
fdivs
fcmovnb
inc
lds
movsl
push
and
cltd
push
mov
cmp
sub
pop
js
cmp
cmpsl
adc
add
xchg
mov
push
dec
lahf
mov
arpl
sbb
pop
out
inc
and
sbb
jge
cli
cmp
aam
xchg
and
xchg
xor
push
sbb
cltd
or
ds
xor
adcb
xor
xchg
mov
fs
shll
cmp
rcl
mov
test
jne
pop
jg
lcall
test
xchg
out
dec
push
pop
imul
aad
pop
cs
jno
jmp
cltd
jo
repz
cli
sbb
inc
xor
adcl
bound
and
add
aas
popf
je
sub
inc
cltd
lods
movsb
aam
xchg
or
mov
lret
xchg
loop
mov
add
pushl
add
out
sub
cmp
sbb
cwtl
inc
inc
sub
pop
mov
ds
fwait
jl
jecxz
lret
rcll
jl
cmp
testl
add
xor
enter
lahf
pop
mov
mov
sbb
mov
stc
mov
mov
mov
push
popa
xchg
leave
mov
ds
stos
push
push
loopne
sbb
aad
pop
rcrl
std
rclb
es
movsb
add
sub
push
jle,pn
push
inc
push
call
cmp
neg
stc
out
stos
into
inc
outsb
cmp
mov
ror
add
jb
stos
mov
clc
jb
mov
push
xchg
stos
pop
inc
stos
xchg
jbe
sbb
rcrl
int3
sub
mov
outsl
loop
xlat
mov
dec
loopne
push
inc
mov
jb
out
ja
and
cmpsb
out
xchg
aam
repz
inc
cltd
ret
rolb
xlat
cmp
cmp
test
and
mov
rolb
lret
cmp
dec
ja
test
out
push
adc
push
stos
scas
push
push
push
stos
sbb
insl
sbb
jno
pusha
jecxz
ds
or
inc
mov
cli
mov
fisubl
outsl
daa
mov
fwait
pop
insb
subb
aad
pushf
cmc
pavgw
out
jns
and
or
cmp
mov
sub
and
test
and
mov
jmp
imul
mov
dec
je
xbegin
dec
les
ja
into
xchg
xchg
repz
inc
insb
test
fcos
dec
pop
jbe
lock
lret
sarb
repz
fsts
call
out
mov
mov
in
lods
mov
cmp
jg
aaa
lahf
sahf
sbb
sub
mov
nop
jl
inc
push
out
add
pusha
dec
mov
dec
aaa
mov
fldt
repnz
sub
xchg
cltd
inc
out
jge
dec
add
imul
frstor
jmp
xor
insb
testb
mov
jp
cmp
std
jne
push
iret
mov
push
mov
dec
pop
pop
inc
jo
mov
or
jg
repnz
int3
pop
xchg
ja
or
fldl
pop
xchg
add
shlb
and
shrb
adc
lret
or
iret
dec
jno
insb
add
mov
jle
xchg
loope
int3
mov
subl
insb
dec
and
push
or
es
shr
vmaxss
fs
jp
lret
adc
call
loop
sbb
xor
mov
clc
pop
inc
mov
fists
dec
mov
dec
ja
or
sbb
ret
test
push
icebp
dec
lods
insb
ja
push
jae
xchg
lock
adc
mov
adc
in
scas
jmp
adc
cmpsl
inc
cmpsb
je
jp
push
dec
mov
loope
push
adc
xchg
lds
add
xchg
test
push
mov
popf
xor
jp
and
mov
pop
push
push
sbb
sbb
sub
sub
aad
xchg
pop
out
jg
sbb
jb
push
cmp
dec
popa
fisubs
fmull
loope
call
or
sub
mov
or
bound
jae
aaa
cltd
mov
in
aad
arpl
adc
mov
out
xchg
repz
stos
xor
mov
push
cli
test
decl
lods
shll
pop
scas
pop
lods
mov
mov
aaa
popf
cmp
mov
aad
inc
and
std
or
inc
jns
sub
ja
rcll
xchg
pop
loope
mov
sub
sbbl
in
adc
mov
lahf
fisubrl
ret
adc
pop
fldenv
ja
cmp
xchg
test
inc
jecxz
js
es
xlat
inc
es
sub
fisttps
cmp
dec
sbb
fadds
and
xchg
jp
int
xchg
iret
and
sbb
push
jmp
xor
pop
adc
push
sbb
sub
and
ja
cmpsb
and
add
mov
fidivl
pop
sti
sbb
mov
pop
sbb
fnstcw
test
cs
cmc
icebp
insb
insl
rorb
cmpsl
sti
imul
xor
pop
les
lods
enter
hlt
or
ret
dec
cmp
aam
xchg
inc
mov
call
add
mov
int3
fcoml
jne
xchg
test
rorl
jge
out
js
mov
or
or
test
fdivl
pop
jns
les
mov
pushf
rcl
ror
popf
sub
cltd
push
pop
dec
lret
pop
js
nop
push
mov
movsl
adc
lods
inc
jmp
ds
adc
cltd
cmpsb
xor
cmp
int
jecxz
bound
sbb
mov
xchg
sbb
jo
aaa
add
adc
shl
mov
xlat
pop
ror
inc
sbb
int
test
sub
xchg
roll
mov
mov
loope
xor
xchg
push
inc
mov
mov
or
xor
xchg
mov
rorb
in
shl
out
mov
jecxz
outsb
xchg
cmp
insl
mov
lahf
andl
enter
popa
rcr
sub
and
stos
sti
adc
xchg
sub
xorb
jp
xorl
outsb
jmp
pop
xor
push
cltd
fsubs
fistpl
xor
or
mov
fwait
and
adc
pop
push
mov
mov
xor
int
ljmp
and
lret
xlat
fildll
xor
int
xor
push
push
inc
mov
xorl
sarb
mov
jle
xor
lods
lret
movsb
jl
dec
ljmp
jecxz
dec
cli
test
add
mov
test
mov
movsb
movsl
lret
and
jmp
add
xor
inc
dec
into
call
iret
fisubrl
cwtl
adc
and
nop
js
mov
aad
aam
push
arpl
daa
push
mov
call
xor
sub
scas
mov
xchg
decl
mov
jno
sub
dec
and
lods
icebp
cld
jmp
call
repnz
lret
mov
lods
push
pushf
mov
clc
sbb
sahf
push
cwtl
add
leave
ret
mov
and
push
adc
cltd
imul
mov
push
loopne
fistl
cltd
sbb
loopne
xlat
cmp
add
fsts
mov
jbe
cltd
jno
test
mov
packuswb
add
and
pop
hlt
out
mov
shrl
xor
push
push
lods
or
mov
push
adc
negb
cmp
mov
or
shll
sbb
and
mov
dec
lods
test
sahf
aam
xor
jae
lahf
movsb
insb
testb
dec
adc
mov
icebp
mov
mov
js
rcll
push
cwtl
cmp
fwait
shrl
mov
dec
xchg
push
test
pop
cmp
popa
lock
pop
lret
push
and
divl
dec
push
out
shll
push
ljmp
scas
jb
xchg
pmuludq
cld
adc
sub
cmpb
jl
icebp
or
inc
imul
es
sub
hlt
out
imull
adc
sub
add
fsubrp
loope
out
xchg
cmp
into
loop
filds
mov
cmpsl
push
adc
les
pop
ljmp
mov
jmp
lcall
call
jae
mov
xor
xchg
loope
xor
sarb
test
lret
cmp
sub
lea
xchg
xor
stc
jns
ds
cltd
fs
fmuls
outsl
xor
sub
adc
cmp
fbld
fstl
rcpps
mov
and
mov
adc
or
inc
mov
dec
xorl
pop
loope
cmp
and
insb
ss
lahf
out
in
call
inc
and
mov
xor
push
mov
je
dec
xchg
jo
mov
sub
mov
adc
mov
test
add
bound
adc
jp
jbe
pop
cli
insl
pop
lahf
repz
cmpsl
dec
lahf
push
popf
nop
fwait
sub
mov
shll
test
jecxz
jns
movsl
popa
js
jne
adc
in
pop
js
into
inc
fcompl
daa
call
mov
cwtl
inc
aad
push
push
int3
stc
les
push
aaa
mov
adc
lods
jmp
pop
cmp
jb
ret
push
or
pusha
repz
iret
jns
push
mov
mov
inc
ljmp
loopne
sahf
xor
bound
or
fimuls
in
add
sbb
mov
push
es
sbb
push
dec
dec
fdivrl
and
stc
idivb
jns
dec
mov
pusha
xchg
mov
dec
les
dec
push
iret
jb
cmp
adc
push
mov
pop
xor
pop
push
xchg
jne
mov
dec
pop
add
stos
and
in
add
add
mov
js
js
dec
outsl
daa
and
add
or
jg
mov
jge
mov
cmp
inc
je
xor
insl
push
mov
mov
cmp
out
lahf
cmp
mov
scas
xchg
or
jb
push
add
add
push
aas
xor
inc
imul
inc
int3
aas
pop
insl
nop
cs
es
push
add
xor
push
push
in
mov
bound
and
iret
int3
mov
push
enter
jecxz
xchg
push
mov
pop
mov
adc
mov
int
les
sub
pop
fldt
inc
xor
fdivs
sahf
add
pop
push
mov
lcall
add
jno
call
stc
mov
mov
fidivs
cmp
sarl
outsl
mov
mov
xchg
mov
ficomps
pusha
or
mov
mov
sbb
pop
test
xchg
mov
jle
pusha
scas
loopne
xchg
into
adc
sti
mov
or
scas
sti
sbb
pop
mov
fldt
push
cltd
jl
add
fs
inc
mov
mov
xchg
addr16
out
cmp
ljmp
out
jg
add
imul
adc
adc
fs
lcall
mov
mov
sub
movsl
cs
mov
mov
adc
clc
mov
pop
mov
mov
aaa
jnp
xchg
rorb
jnp
pop
das
leave
rorb
push
test
xchg
movsb
pop
leave
push
mov
mov
dec
jecxz
pop
mov
mov
sbb
xchg
pushf
push
mov
sub
mov
mov
into
in
movsb
rcrb
sub
sub
shrb
cltd
jbe
xchg
jge
les
dec
shll
lret
push
cs
popa
dec
mov
mov
mov
and
xchg
sbb
or
mov
jp
test
adc
loop
lods
jmp
out
push
dec
movsb
imull
pop
sbb
xor
and
sbb
jno
pop
adc
mov
leave
add
mov
cmp
scas
arpl
icebp
or
push
adc
call
sarb
xchg
push
lret
imul
push
cmp
push
cld
push
out
nop
cli
push
cmp
scas
push
mov
ficoms
lock
push
cmpsb
js
rcl
ljmp
inc
and
insl
sbbb
fwait
mov
mov
fisttpl
mov
aas
and
lds
rclb
and
push
mov
cmp
je
and
inc
push
xchg
and
idivb
mov
push
and
or
shl
repnz
les
and
dec
cs
dec
mov
jge
test
mov
jecxz
dec
adc
popf
or
out
mov
adc
int
push
dec
jns
out
fmuls
jo
out
loop
jns
repz
mov
ja
jecxz
stc
lcall
shl
jne
and
pop
sbb
or
mov
mov
icebp
scas
insl
inc
dec
add
dec
pop
subl
and
repz
and
ret
popf
pop
int3
cld
hlt
mov
cltd
mov
aam
enter
pop
ret
jo
rcrl
sub
sbb
loop
xchg
pop
or
push
jb
mov
jp
cmp
mov
or
out
mov
negl
push
jmp
imul
movsb
imul
rorb
outsl
inc
sub
fbstp
mov
les
cmp
dec
mov
xchg
rorl
stos
test
sub
pop
inc
mov
inc
in
mov
std
add
leave
xchg
subl
push
sbb
jle
arpl
dec
lahf
subl
mov
push
lcall
lret
sbb
adc
popf
xor
sub
mov
in
xchg
ror
adcb
or
cmp
mov
lret
or
dec
jne
and
push
lods
add
repz
mov
pushf
inc
jnp
iret
or
mov
xor
loop
rcr
fdivr
mov
mov
lock
cmp
out
lret
dec
in
loopne
add
pop
pusha
into
arpl
leave
sahf
cmp
out
into
cmp
clc
arpl
xchg
jnp
cmc
testb
aas
daa
bound
sbb
push
add
mov
xor
rcr
pop
pusha
xchg
mov
mov
mov
fimuls
push
push
mov
jb
jnp
and
es
jns
inc
aam
cmp
xchg
inc
push
mov
lea
test
in
mov
aas
clc
loopne
insl
adc
aaa
pushf
dec
mov
in
adc
jp
jnp
lods
arpl
pop
popf
rorb
xchg
test
push
aas
cli
mov
insb
rcll
int3
dec
ja
dec
xor
fimull
xchg
ret
mov
mov
push
in
dec
sub
cwtl
pop
sbb
xchg
outsb
pushf
add
sub
insl
arpl
fwait
rclb
fucomp
jmp
subl
and
jmp
jmp
out
mov
out
pop
hlt
jo
push
pop
pop
xchg
adc
push
cmpb
push
ss
mov
xorl
cld
int3
lods
xor
movsl
mov
rcrb
sbb
jae
dec
mov
and
ret
scas
lods
sbb
push
inc
das
addr16
xchg
sub
xchg
or
mov
fcomp
and
add
jb
mov
iret
cmp
int
push
ljmp
jg
sub
roll
xchg
pop
pusha
loop
idivl
fnstcw
and
xchg
xor
fs
and
dec
xchg
mov
shll
outsl
jl
jae
lds
in
jl
rclb
push
or
rcr
int3
shlb
adc
in
inc
push
bound
inc
lahf
xchg
or
pop
xor
inc
ds
rclb
mov
outsb
xlat
lret
sahf
enter
sub
fisubs
sbb
repnz
fisttpl
mov
stos
mov
sub
mov
push
xlat
xor
insl
int
jbe
stos
adc
pop
pop
xchg
std
shrb
sti
pop
xor
ljmp
xor
pop
adcb
and
cwtl
outsb
dec
sbb
xchg
dec
push
in
test
mov
sub
aas
push
roll
in
xor
xor
mov
js
inc
rcll
cmp
sbb
mov
outsb
lock
mov
lock
in
inc
xor
addr16
jle
shlb
and
lcall
mov
scas
pop
sub
sub
xchg
insl
xchg
or
mov
movsb
push
xchg
inc
mov
xor
dec
adc
or
or
rclb
bound
mov
daa
mov
add
ljmp
scas
cmpsb
xchg
in
push
jb
in
mov
push
mov
imul
cmp
leave
xchg
sahf
out
addr16
outsb
fnop
out
ss
mov
icebp
sbb
mov
and
push
popa
cmp
lods
lcall
mov
pop
jo
imull
jge
xchg
cmp
sbb
mov
mov
fcoms
xor
enter
push
sbb
cld
and
das
inc
in
jnp
loopne
stos
xor
xlat
mov
iret
xchg
testb
lock
adc
xchg
and
clc
sahf
dec
pop
lock
jne
arpl
jne
mov
or
outsb
add
test
xor
out
fsubrl
lods
insl
out
dec
jg
loope
ds
pop
cmp
bound
sbb
sub
dec
mov
jnp
aas
lahf
pop
outsl
lcall
push
cld
dec
enter
adc
and
mov
or
loop
xchg
pop
sbb
nop
push
push
push
aas
je
loopne
stc
push
sbb
dec
xchg
test
fdivrs
enter
cmp
sbb
inc
je
ffreep
cmp
in
jns
inc
dec
sti
inc
fs
idivb
stc
lgs
inc
pusha
repnz
mov
pop
outsl
cmp
into
jbe
outsb
popa
roll
data16
sub
add
pop
mov
or
dec
sbb
test
sbb
inc
out
xor
mov
loop
and
jne
adc
xor
cli
hlt
jg
aad
loope
push
cwtl
xchg
and
jo
xchg
xchg
xchg
std
iret
pop
push
js
add
mov
stos
rcrb
jle
inc
sbb
push
xchg
fstpt
and
repnz
cmp
cltd
outsl
movsb
or
push
sbb
sti
sub
xor
bound
ljmp
or
xchg
sbb
push
and
rcrb
sub
dec
movsl
aad
fimull
jge
xchg
sbb
dec
cwtl
inc
xor
xor
js,pn
or
addr16
jnp
arpl
outsl
faddp
das
dec
add
mov
ret
cwtl
xchg
inc
insl
fistpll
pusha
stc
mov
jb
pop
es
xor
jo
dec
cmc
adc
sub
sbb
shrb
fnstsw
js
not
lcall
cmpsb
adc
xchg
mov
xchg
inc
mov
and
notb
sub
popa
stos
mov
push
stos
adc
inc
xchg
imul
sbb
clc
divb
in
pop
into
mov
cmp
dec
loopne
cmp
aas
mov
dec
and
xchg
shlb
dec
and
icebp
sbb
cmp
inc
std
cs
inc
pop
nop
xor
pushf
xchg
mov
xor
sub
push
push
stos
adc
push
fisttps
lods
jmp
adc
push
sbb
leave
outsl
jmp
jp
jns
dec
inc
addr16
mov
pop
add
cs
pop
cli
add
jb
in
cwtl
std
jne
mov
sbb
les
fwait
xchg
mov
pop
sahf
fstpl
and
or
sbbb
mov
and
cli
mov
xor
mov
sub
jns
xchg
arpl
adc
dec
mov
xchg
push
ljmp
fs
jmp
add
push
shll
fdivrs
add
aad
push
dec
rolb
pop
jmp
adc
adc
push
loop
add
push
int3
in
jae
loopne
sub
ret
sarb
dec
xchg
mov
fwait
subb
leave
shlb
push
lea
lret
ljmp
mov
mov
and
sti
repnz
sti
mov
rcrb
adc
add
sbb
mov
mov
fs
jmp
fistpll
mov
aam
add
test
fstps
bound
adc
xor
push
lock
or
or
test
mov
dec
xchg
sbb
sarl
das
add
pop
in
decl
outsl
cld
fisubrs
or
sbb
pop
mov
dec
decl
xor
fcoms
lds
in
push
jle
pop
scas
das
arpl
pop
sbb
xchg
and
bound
push
sbb
subb
fs
movsb
mov
outsl
jp
popl
cmpsb
sbb
adc
into
pop
cmpsl
sbb
lret
push
push
fwait
bound
jmp
xchg
sub
lret
xchg
gs
mov
dec
sub
cmp
fldt
jl
and
push
pop
or
pop
xchg
xchg
rcr
test
test
mov
lcall
xlat
and
adc
jmp
add
xchg
lret
ja
push
push
lds
mov
push
pop
dec
lods
and
daa
push
push
mov
xor
xchg
outsl
mov
in
mov
cltd
mov
add
push
orl
insl
pop
adc
clc
loope
insb
mov
das
ds
imull
dec
aaa
out
push
fdivl
out
loope
xchg
mov
mov
sub
adc
mov
mov
xlat
xchg
push
add
loope
int
pop
inc
jge
or
ds
add
rep
mov
negb
mov
jne
shl
lods
sti
into
push
dec
into
int3
in
mov
sbb
push
imul
sbb
iret
lret
sbb
lods
stos
jmp
jb
aad
dec
fwait
jo
jl
jnp
xchg
rcrb
insb
popa
test
sub
out
push
mov
add
es
adc
enter
loop
adc
mov
nop
lds
popf
xor
hlt
cwtl
fsubl
pop
jg
push
jmp
push
loope
inc
stos
xchg
adc
fldt
aad
pop
mov
xor
mov
jnp
test
sub
adc
in
loop
pop
xchg
cmpsl
scas
sub
btr
mov
or
lods
mov
mov
pop
nop
xorb
cmp
into
incl
arpl
xlat
pop
es
jg
mov
int
pop
or
ror
dec
lds
jnp
lock
test
push
pop
shlb
arpl
stos
lds
xchg
lcall
outsb
dec
movsb
xor
inc
clc
movsb
sub
in
enter
out
in
mov
add
pop
cmp
lret
lret
sbb
in
xor
outsb
push
call
add
or
xchg
stc
jno
xchg
fsubrs
push
push
xchg
mov
or
or
push
pop
aad
adc
ja
dec
push
fwait
icebp
jbe,pn
inc
add
int3
xor
cld
popf
into
mov
push
cmp
notl
xchg
les
pop
mov
mov
mov
push
or
lock
mov
or
pop
fidivrl
jge
inc
ret
mov
es
enter
push
xchg
sub
and
push
loope
fcoms
add
dec
mov
xor
mov
movsl
loop
dec
or
jnp
cli
fidivs
or
jns
or
mov
xchg
mov
stc
cmc
xor
sbb
rorb
adc
incl
jne
shrb
faddl
xchg
add
ret
jecxz
out
mov
add
adc
jns
cwtl
dec
mov
mov
jbe
pop
jb
jl
inc
insb
test
push
lods
mov
hlt
rclb
out
clc
mov
pop
cmpsb
inc
push
test
das
fsts
add
loop
add
xchg
les
sbb
sbb
negb
in
sbb
mov
in
mov
adc
imull
sbb
rol
push
es
setge
inc
mov
insl
inc
and
or
sbb
in
mov
out
testb
sbb
gs
ret
xchg
jge
xchg
sub
out
adc
jnp
mov
xchg
test
mov
sub
aad
sbb
jne
jge
jnp
bound
push
add
ds
xchg
xchg
pop
cmpsb
dec
mov
mov
sub
add
fcoml
jl
test
aaa
fwait
lock
gs
xor
lret
mov
sub
mov
outsl
xor
or
stos
and
adc
mov
fimuls
push
adcb
mov
dec
sub
imul
rolb
je
xchg
adc
xchg
fs
fldz
dec
mov
addr16
and
outsl
xchg
aas
mov
push
repz
loop
imul
dec
lcall
push
push
push
dec
jno
mov
imul
sub
ja
sbb
jne
movsb
test
repnz
into
rclb
add
shll
push
mulb
out
cld
int3
jae
addr16
cmpsb
jnp
jmp
mov
imul
xor
and
inc
notb
add
xchg
or
popa
or
push
mov
fsubrs
jmp
xchg
xlat
push
jnp
loope
fwait
sub
pop
push
int3
adc
mov
pop
push
or
mov
pushf
frstor
xor
mov
adcb
subb
imul
movsb
inc
loop
xor
jecxz
sbb
call
add
push
push
push
jp
shlb
dec
in
mov
inc
cmp
or
imul
mov
cmp
cs
pop
mov
loop
dec
insl
add
push
rorl
cltd
mov
xor
mov
std
or
pusha
and
mov
insb
fwait
mov
jecxz
inc
pop
jge
cwtl
sbb
sarl
inc
adc
jl
sub
pop
lahf
push
dec
testl
mov
xchg
out
sub
imul
cmp
shrb
xor
mov
push
enter
mov
int3
daa
dec
daa
insb
adc
adc
push
and
outsb
cltd
xchg
es
adc
or
push
ret
or
cmpsl
push
icebp
add
xchg
jns
sbb
cmpsb
test
adc
mov
add
negl
mov
scas
jo
sbb
push
cmp
cmc
js
data16
fistpll
call
iret
xor
mov
insl
mov
or
mov
cmp
dec
in
cmp
sbb
out
ljmp
sbb
ljmp
pop
cmp
repz
addr16
lods
dec
cli
push
xchg
inc
mov
add
cld
pop
gs
subl
shrb
inc
push
cmp
repnz
out
and
rcll
gs
sbbb
xchg
mov
enter
and
sub
jne
in
fbstp
fs
pop
repz
inc
fs
mov
sub
jl
pop
mov
pop
sahf
rcll
jle
push
mov
jmp
sti
test
insl
fwait
mov
shll
ljmp
jl
xor
pop
pusha
push
push
jge
enter
mov
jmp
mov
push
xor
xor
mov
xchg
inc
pusha
pusha
mov
insb
pop
into
jg
mov
add
xchg
in
jno
add
mov
ret
inc
push
cltd
jns
fadds
xlat
out
jecxz
fidivrl
in
mov
dec
fisttpll
sbb
pop
push
mov
cs
sahf
movntps
imul
in
cmp
pop
inc
lret
mov
fsubs
jecxz
addr16
add
bound
scas
stc
xchg
xchg
divl
lods
lcall
pop
hlt
mov
ds
pop
push
jle
lock
insb
mov
dec
je
or
loopne
dec
or
pop
xchg
xor
push
push
cltd
icebp
in
movsl
sub
fdiv
mov
test
xchg
mov
inc
mov
lahf
mov
jl
orl
xchg
and
mov
icebp
lock
in
xchg
fwait
or
out
imul
add
sub
mov
jp
test
out
pop
lret
loopne
lret
jae
or
pop
push
lahf
std
rorl
iret
sbb
cmpsb
test
mov
sub
sbb
xor
aad
or
inc
movsl
loopne
cmp
pop
cmpsb
mulb
fidivrs
test
das
cld
test
movsl
fidivs
cmp
sub
lods
pop
sahf
cli
jno
mov
add
fldenv
scas
lea
ret
xchg
mov
shr
roll
loop
out
push
jno
add
and
testl
pop
das
inc
repz
jnp
inc
outsl
std
add
and
scas
cmpsl
jecxz
leave
out
jle
pop
insb
nop
clc
sahf
lock
aad
dec
popf
cmpsb
fwait
jmp
inc
xchg
inc
xor
mov
push
cwtl
mov
sub
test
mov
lds
add
ja
xchg
lds
lods
mov
outsb
in
sub
xchg
xchg
leave
insl
xlat
xlat
sbb
adc
adc
sub
movsb
jno
xorb
xchg
repnz
mov
add
mov
fstpl
cmp
inc
pop
pop
or
in
es
cmpsb
xor
adc
andb
test
mov
movsl
les
mov
push
in
adc
movsl
orb
out
andb
dec
fists
dec
js
int
push
in
xchg
jl
mov
push
mov
popf
adc
xor
and
adc
inc
les
mov
or
cmp
sbb
aad
dec
in
sbb
sub
xchg
imul
pop
xor
test
xor
lock
sti
cmp
or
xchg
cmp
loopne
sub
push
push
mov
test
ret
ljmp
rcl
or
sahf
adc
cs
and
test
aaa
add
in
adc
lods
iret
ss
dec
mov
clc
fstpl
icebp
sub
icebp
adcl
dec
push
jmp
push
jns
cmpsl
sbb
hlt
rcl
xor
dec
ja
add
addl
jo
std
addr16
and
ss
into
mov
inc
loope
jnp
ret
in
adc
std
cmpsl
sub
or
xchg
fs
bound
int
xor
inc
lods
je
arpl
stos
push
sub
testb
push
repnz
fbld
cli
push
jp
lret
add
call
jb
in
adc
jns
add
mov
jmp
out
inc
xor
andb
in
out
mov
ret
push
call
mov
xchg
fs
out
ds
test
imul
outsb
sub
shlb
add
add
call
fidivs
mov
es
mov
loop
add
mov
mov
mov
stos
pushf
push
dec
pop
pusha
mov
xchg
or
std
xor
aaa
cmpsl
add
inc
ret
add
pop
outsb
ljmp
jg
mov
leave
dec
fstl
lods
adc
mov
inc
mov
push
mov
lea
inc
sub
aam
dec
adc
ljmp
insb
jno
pusha
mov
mov
xor
ljmp
push
jns
mov
ficomps
xorb
or
add
jno
test
sbb
fwait
je
or
or
push
mov
sub
mov
test
jle
xchg
mov
jle
lret
push
push
repnz
shll
sti
sti
adc
call
fistps
out
cltd
dec
sub
decb
add
dec
dec
add
jb
in
fnstenv
jns
addl
mov
dec
pop
or
shll
cmp
int
cwtl
push
inc
xor
lods
xchg
lea
jnp
in
pop
adc
gs
js
cmp
sbb
daa
mov
mov
scas
enter
pop
daa
fdivrs
cmp
push
mov
xchg
and
adc
test
pop
xchg
pusha
xchg
xor
repnz
popf
cld
aaa
sbb
lds
mov
js
shll
jle
shr
hlt
arpl
fmulp
shr
jecxz
adc
jg
add
lods
arpl
jge
xor
outsl
fwait
pushf
pusha
into
jns
or
xlat
int3
not
pop
or
cmpsb
xor
inc
daa
push
mov
mov
sbb
dec
jbe
fwait
sbb
fistpl
and
popf
idivb
insb
mov
out
aas
cmp
xlat
jmp
dec
jmp
xchg
cmp
push
inc
repnz
mov
hlt
pop
mov
xlat
enter
shr
or
cmpsb
notb
daa
hlt
dec
pop
lds
adc
push
mov
jae
sahf
mov
leave
sub
repnz
dec
pop
adc
cmc
cmp
loop
jmp
movsl
and
xor
pop
cwtl
mov
scas
cmp
mov
xchg
jnp
inc
mov
xor
jbe
data16
mov
std
aad
enter
sbb
iret
call
add
cmpsl
std
je
and
cmpsb
div
add
es
mov
pop
cmp
xor
mov
and
pop
and
cwtl
and
lods
inc
pop
insb
movsb
addr16
adc
adc
leave
pop
or
dec
pusha
xor
pop
xor
xor
ret
scas
add
call
sbb
jne
push
shlb
jo
ds
or
xor
push
dec
jecxz
scas
xlat
cmp
pop
adc
in
dec
mov
out
cmp
test
std
shlb
and
subl
inc
inc
sti
shll
xchg
xchg
sahf
mov
lea
insb
test
leave
xlat
mov
pusha
or
and
lods
pop
dec
sahf
popl
sub
sbb
dec
pop
nop
or
mov
ficomps
jb
fadds
test
mov
rclb
mov
fdivl
sub
sbb
es
xchg
push
out
ficoml
popa
xor
jns
js
jmp
sbb
inc
sbb
data16
lods
sub
insl
pushf
or
jl
xchg
popa
cmp
push
mov
into
cmpsl
xor
shll
xor
insb
pusha
add
inc
mov
mov
sub
dec
jle
ret
das
leave
jo
divl
add
mov
adc
inc
mov
mov
mov
psubsb
mov
push
fildl
xchg
ret
add
aad
cmpsl
fisubrl
pop
outsb
or
fnstsw
in
je
mov
movsb
in
lret
fwait
push
call
or
and
pushl
pop
xchg
jecxz
addb
leave
or
sbb
mov
mov
sub
xchg
fmull
jecxz
mov
popf
dec
adc
pop
mov
clc
cmp
std
inc
lods
aad
and
mov
jns
hlt
fnstenv
test
inc
pop
lea
push
enter
pop
fstl
test
in
and
pushf
jno
neg
cmpsb
js
jno
stos
aam
cs
ljmp
arpl
fs
add
push
mov
and
mov
sub
ja
rorb
adc
aam
pop
cmp
lret
fldl
leave
lret
testl
repz
adc
sub
loope
or
enter
out
mov
pop
ds
popf
fnstenv
enter
xchg
adc
int3
push
pushf
or
test
rorb
jecxz
je
stos
sub
outsl
adc
je
push
fcoms
loop
sbb
fwait
xchg
inc
lds
xorl
data16
push
mov
or
or
sub
xor
push
mov
test
out
lods
je
test
add
outsl
pushf
cmp
push
repnz
ja
xchg
fdivrl
push
and
xchg
xchg
mov
adc
enter
xor
add
imul
in
cmp
add
sti
push
outsb
push
jae
insl
arpl
mov
add
cmp
jne
adc
jle
inc
gs
inc
inc
ret
insb
pop
push
into
push
frstor
inc
mov
push
push
or
nop
ja
pop
jne
aad
xchg
push
mov
jb
testl
mov
fldcw
pop
inc
mov
xchg
icebp
repnz
lods
je
push
push
pop
mov
js
shl
inc
repz
mov
aad
mov
adc
adc
inc
cmc
movsl
mov
fildl
in
jle
adc
cmc
or
adcb
es
dec
push
scas
add
or
in
loop
loop
cli
xchg
cmc
loope
dec
xchg
outsb
pop
and
add
mov
les
daa
std
in
ljmp
ret
cmc
imul
loope
pop
ljmp
add
test
lcall
jne
cmpsb
cmc
into
pusha
es
pushf
or
rolb
nop
enter
out
pop
int
mov
push
inc
fdivr
call
bound
insb
adc
fdivrs
cmpl
inc
out
ret
sub
inc
dec
or
sub
sbb
xchg
mov
stos
test
fdivp
cmpsb
cld
daa
in
gs
test
cmp
adcl
cwtl
or
icebp
lret
jno
push
test
push
mov
cmp
rcrb
sbb
in
aaa
pop
clc
out
push
xorl
bswap
fcmovnbe
les
out
fidivl
ss
and
xchg
xor
les
repnz
jo
jno,pt
pop
test
add
pop
pop
rcrl
iret
popa
ljmp
inc
mov
mov
xchg
nop
int3
pop
jmp
into
mov
sub
mov
mov
or
stos
dec
jl
out
dec
pop
imul
lods
fcoms
cs
addb
sub
add
les
pop
and
outsb
cmpsb
leave
loopne
mov
jecxz
or
push
mov
fnstcw
mov
mov
dec
jl
add
das
fisttpll
adc
and
ds
ljmp
cmpl
dec
push
dec
pop
jmp
rcrb
ret
out
jae
shll
add
lea
xchg
sub
sahf
or
jmp
add
outsb
pop
xchg
and
ds
mov
lahf
and
xchg
movsl
loopne
cmpsb
addl
jmp
fdivr
mov
jbe
jp
jl
mov
out
js
addr16
scas
stc
cwtl
pusha
xorb
or
sbb
jp
into
enter
jp
or
js
leave
cld
mov
mov
movsb
popa
test
loopne
out
push
sub
pop
outsl
adc
incb
and
xor
mov
nop
sub
or
lods
pop
push
lods
lods
insb
pop
jmp
xchg
inc
leave
ss
je
imul
inc
imul
out
ret
jno
jno
inc
jge
inc
dec
scas
xchg
mov
sbb
dec
cs
hlt
loop
clc
es
add
sub
dec
ss
in
in
icebp
jl
add
inc
outsl
and
ss
in
inc
xor
scas
pop
icebp
mov
add
push
loopne
mov
adc
insb
mov
sub
test
les
mov
cli
icebp
aam
cmpsl
cmc
push
or
jmp
mov
pop
cli
hlt
popa
gs
xchg
pop
and
pop
daa
aam
jb
push
pusha
jno
fbstp
xor
mov
aad
les
rcll
je
ror
fwait
mov
daa
dec
shll
lods
xchg
inc
mov
leave
fistpl
or
cmp
jle
push
xor
cmp
push
pop
sarl
jns
mov
int
pop
ret
inc
adc
and
mov
xchg
xor
in
xor
nop
pop
into
xchg
jnp
iret
xor
test
pusha
xor
pop
es
cmp
pushf
out
cli
arpl
or
stos
mov
nop
int
fwait
into
sti
mov
stc
mov
adc
inc
pop
movsl
cmp
mov
rcll
scas
ret
dec
sbb
mov
and
and
enter
inc
cmp
movsb
movb
jbe
les
lcall
adc
mov
fisubl
addl
nop
fsubrs
xchg
lods
jge
xor
sti
ret
ds
xor
movsl
int
ret
add
repnz
sub
mov
outsb
movsb
push
int3
fwait
push
je
inc
cmp
adc
cmp
or
cmp
shrl
xor
mov
lods
insl
push
incb
sbb
push
movsb
movsb
arpl
push
out
gs
mov
push
jbe
movnti
cmc
rorb
out
pop
jp
pop
insl
test
jmp
jnp
pop
mov
mulb
dec
out
pop
dec
shll
iret
insl
push
in
fs
mov
sbb
push
scas
inc
xor
arpl
and
sbb
xchg
pusha
jp
jmp
xchg
push
clc
shlb
or
es
xchg
jno
mov
call
mov
jno
adc
mov
mov
aad
imull
js
inc
xchg
xor
inc
mov
dec
lcall
test
sbb
push
push
mov
inc
stos
lret
aam
jbe
insb
mov
daa
push
jecxz
adc
iret
push
mov
out
in
cmp
push
mov
loop
test
push
dec
ret
test
jo
jb
lea
shl
jno
pusha
testl
mov
push
inc
mov
popf
pop
push
dec
adc
adcb
xor
movsl
sub
pusha
movsl
lcall
imul
xor
icebp
dec
mov
sub
loope
cmp
push
in
fnstenv
sub
ror
push
fadd
xor
pushf
repz
repnz
rolb
mov
cmp
mov
pop
pop
lea
sbb
negl
loope
or
fistps
jecxz
xor
ret
sbb
pushf
sub
or
in
push
or
jmp
sub
lret
pusha
and
xor
in
fistpll
leave
jp
imul
nop
popa
lea
pop
pop
in
jecxz
mov
shll
jmp
mov
push
inc
int3
outsl
dec
add
loopne
lds
popa
addr16
hlt
xchg
notb
push
sbb
adc
fs
das
xor
or
pushf
fs
pusha
lea
cmp
mov
xchg
and
movq
stos
xor
pop
sbb
and
sti
fstps
outsl
or
sbbb
pop
or
mov
dec
into
pop
xchg
enter
dec
push
insb
add
xor
mov
test
lds
addr16
loop
into
popl
shr
inc
pop
out
sbb
add
or
add
adc
cli
popa
or
ja
or
sbb
mov
rcrb
pushf
test
jbe
xchg
repnz
fidivl
inc
inc
pusha
roll
arpl
dec
add
les
hlt
mov
adc
jmp
xor
jnp
fadds
xor
mov
aad
rcrb
in
cmp
jle
or
xor
test
movsb
xchg
sbb
mov
xor
test
aam
push
push
insl
push
test
inc
rcr
pusha
inc
cmp
aaa
or
mov
in
jnp
push
jno
mov
scas
add
push
cmp
test
daa
lret
int3
dec
call
xorl
bound
cmp
sbb
mov
repnz
xor
clc
fidivrs
pop
cld
xchg
sub
scas
mov
ja
push
test
jmp
jp
pop
push
mov
ror
xchg
ret
jae
sbb
jle
or
or
aas
icebp
or
mov
cmc
xchg
xchg
stos
aaa
inc
test
fists
xchg
fxch
bound
mov
in
pop
mov
orb
rcll
aas
jmp
bound
call
cwtl
and
loope
or
loope
flds
sti
adc
mov
shll
sbb
jbe,pt
push
jns
mov
fcoml
popa
mov
jae
dec
stos
mov
mov
mov
and
mov
and
push
mov
rcr
ret
mov
aas
mov
aaa
lods
loopne
roll
sbbl
out
sbb
sub
inc
loop
push
push
cmp
in
mov
and
dec
aas
xchg
rclb
mov
repnz
sub
jne
leave
ds
test
dec
sub
cld
cmpb
daa
pushf
add
inc
pop
add
mov
dec
and
fidivrs
cmpsb
scas
loop
sbb
jmp
mov
cmc
call
int3
pop
lods
push
stos
addr16
xchg
cld
cli
sub
jae
xor
out
out
mov
mov
sahf
jae
push
sbb
je
daa
sbb
or
int3
icebp
push
push
cmpsl
sub
sahf
cmpsb
out
lods
xchg
es
lds
in
fisubs
mov
mov
lret
clc
push
repnz
or
cmp
into
aas
push
mov
call
add
outsl
sbb
js
shlb
mov
lds
cltd
dec
jae
pop
xor
push
sub
pop
mov
xor
inc
rorl
sub
sbb
popf
mov
stc
mov
and
mov
pop
cmpsl
movsb
cmp
or
mov
cld
xchg
push
cltd
and
add
sub
sti
cmp
fcomps
pushf
out
cmpsb
out
xchg
imul
ljmp
sub
lods
cmc
and
mov
or
movl
hlt
bnd
invd
imul
sbb
mov
jno
test
movsl
or
hlt
and
xchg
sub
pop
in
das
adc
mov
mov
outsl
enter
adc
cmp
cmpsl
andl
outsb
iret
cli
and
push
pop
jo
pop
pop
xchg
shll
xor
insb
push
arpl
pop
and
dec
add
push
popa
sub
mov
mov
mov
push
pop
add
fwait
test
lea
pusha
mov
fidivl
and
lcall
xchg
out
mov
mov
mov
test
mov
push
xor
lds
inc
jl
mov
cmp
es
or
xor
sub
push
arpl
filds
jbe
cmp
or
adc
cmpb
test
and
jg
lock
mov
or
cmp
xchg
xchg
mov
jmp
add
daa
mov
sbb
or
lods
inc
mov
sbb
pushl
pop
and
mov
inc
fisttps
cs
std
sub
hlt
pop
cmc
lods
xor
jno
dec
mov
movsb
stos
cmp
cmp
and
inc
add
push
jl
push
arpl
push
test
out
out
dec
popa
jp
xlat
xor
adc
inc
ds
pop
in
jno
sbbb
inc
push
sarb
repnz
jecxz
push
cli
test
repnz
mov
push
xchg
into
pop
imul
insl
arpl
lret
icebp
or
push
idivb
das
push
mov
clc
sti
pop
jmp
scas
es
xchg
in
pop
insl
add
push
cmpsb
sub
xor
jge
lock
and
inc
gs
test
sbb
mov
mov
aam
cmp
into
das
sub
push
xor
push
sub
xchg
cli
sbb
xchg
and
push
cmpsb
icebp
jo
jns
sbb
and
push
pop
dec
cmp
or
adc
xchg
mov
outsb
lds
lcall
out
mov
mov
xor
pop
add
fnstcw
in
loope
int3
cmp
inc
dec
or
add
cld
push
adc
add
mov
and
cmpl
jo
gs
adc
pavgw
sub
mov
sbb
jp
bound
jnp
rclb
fadd
pop
dec
nop
xchg
addr16
and
xor
lock
insl
pop
daa
lods
int
out
pop
jbe
jno
das
fsubl
fldl
push
dec
sbb
cwtl
in
push
rorb
int3
pushl
aad
ds
pop
fstpt
pop
and
jo
fcoms
xlat
cmp
in
das
dec
out
mov
xchg
mov
dec
xchg
add
insb
jmp
roll
mov
js
std
cltd
sub
push
movsl
daa
push
jp
jmp
loopne
divl
scas
push
cmpsl
sub
data16
push
push
arpl
pusha
cli
arpl
push
sub
mov
movl
pop
jns
in
push
shlb
xor
out
lock
mov
jmp
insl
xchg
insl
dec
or
rol
test
lock
xor
cmp
mov
int
mov
enter
das
mov
xor
fdiv
loop
xor
mov
lods
adc
xchg
loopne
xchg
xchg
divb
mov
bound
mov
insb
adc
mov
rorb
cmpsb
fbstp
stc
mov
add
push
jne
cmp
push
aaa
pop
es
or
mull
sub
shll
enter
adc
mov
scas
inc
loop
sub
jge
or
inc
push
mov
push
fidivs
repz
cmp
pop
mov
push
out
ret
xor
lods
aad
fisubrl
test
and
inc
push
js
pop
sti
popf
cmpl
mov
loop
jmp
add
dec
push
test
ja
sub
push
test
int3
popa
inc
cmp
or
rorb
icebp
clc
orl
imul
or
and
pop
jecxz
sahf
dec
push
xchg
aas
ss
adc
aad
das
nop
jne
cwtl
sbb
or
lock
pop
mov
in
stos
push
fisubl
inc
sub
scas
dec
subb
pushf
mov
lret
jns
sub
push
and
and
xlat
push
into
inc
scas
lods
clc
mov
in
adc
cmpsb
fsin
rcrl
les
jg
lods
mov
push
mov
push
jle
mov
pop
sub
cmp
jg
arpl
sub
mov
xor
loope
aaa
add
stos
mov
les
sbb
pop
inc
insl
aam
push
jle
dec
jbe
aam
inc
jnp
pop
lock
pop
xchg
push
fsubs
xchg
into
pop
xor
xchg
mov
pusha
mov
jne
ret
xchg
insb
mov
pop
out
add
jno
and
bound
das
aaa
scas
std
pop
fsts
dec
cmp
nop
pop
call
add
iret
pop
add
add
stos
orl
jbe
fstl
mov
xlat
stc
sub
std
lret
mov
and
dec
xor
cmpsb
xchg
les
aad
int3
push
mov
fwait
inc
out
adc
or
sbb
xor
mov
mov
cmp
mov
ret
inc
mov
icebp
cwtl
bound
loope
outsl
or
mov
sti
xor
inc
repz
add
aam
jnp
add
or
clc
xor
clc
push
fimull
in
jecxz
pushl
aam
sbb
cli
les
cmp
jo
shrb
cltd
lahf
and
lret
jmp
add
ja
out
bound
les
rolb
mov
pop
add
movsb
loope
sbb
push
adc
into
xor
mov
mov
sbb
cmp
ljmp
std
push
xchg
push
insl
mov
cmp
dec
fs
xlat
sbb
icebp
fidivrs
loop
dec
adc
xchg
mov
sbb
xor
popa
add
jb
push
sbb
dec
icebp
in
and
or
push
mov
add
out
cli
xor
cmovs
adc
int3
inc
not
or
cmp
mov
adc
in
in
sbb
loope
inc
mov
outsl
popf
popa
imul
dec
jae
inc
mov
pop
call
addr16
pushf
aas
orl
jne
lods
lock
cmp
loop,pn
inc
mov
mov
test
jno
sub
dec
stc
stos
xchg
out
push
push
mov
mov
sbb
adc
mov
iret
sbb
rorl
test
sbb
fsubrl
mov
jle
outsl
pushf
pusha
loopne
lods
xchg
gs
insb
stos
mov
jae
inc
lods
imul
aas
adc
icebp
dec
testb
fnstenv
jno
ja
fwait
push
push
sub
icebp
jae
mov
ds
imul
jg
sbb
adc
fidivl
pop
mov
mov
das
ja
adc
stos
mov
bswap
jmp
push
mov
sub
pusha
dec
test
mov
xor
shl
divl
mov
js
mov
jge
cmpsl
jg
lds
push
xchg
jge
fbld
lods
cld
in
cmp
inc
mov
loopne
aam
mov
lcall
inc
sub
pop
jmp
cmpsl
dec
in
mov
mov
mov
les
lds
outsl
lods
sub
mov
cmpsl
arpl
ret
and
sub
addr16
lret
out
mov
jle
cmp
sub
sub
cmp
gs
push
ja
repnz
pop
out
xor
sbb
jo
sbb
nop
pushf
shrl
pop
pop
mov
popf
push
mov
and
sbb
sbb
lahf
mov
addr16
andb
xchg
sbbl
jb
fisubl
cmp
adcb
cltd
cmpsb
js
mov
mov
mov
scas
jge
push
ja
mov
inc
dec
js
lods
xor
jb
cmp
in
pop
xor
ret
jl
sub
rcrb
xchg
filds
add
pop
not
pop
ja
lock
cwtl
mov
xchg
int
loopne
sub
push
je
and
stc
xor
jb
loopne,pt
or
test
xor
and
inc
xchg
testl
rorl
push
stos
mov
mov
xchg
mov
das
jno
std
lea
shlb
es
sub
xor
cmpsl
adc
test
push
xchg
dec
in
xor
inc
pusha
in
daa
shrl
ljmp
repnz
gs
push
loopne
or
mov
xchg
lahf
jb,pn
mov
ret
out
lret
in
loopne,pt
fisubl
xor
sbb
pop
xchg
push
dec
pop
movsb
andb
push
mov
xchg
fwait
loope
test
shr
mov
dec
aas
pop
lret
xor
xor
fstpt
mov
daa
lcall
lock
push
enter
sbb
adc
mov
lahf
enter
push
ljmp
test
mov
ss
fidivs
stc
sbb
and
enter
pop
rclb
dec
cmp
int
inc
sti
sub
mov
push
bound
jl
or
jp
in
jns
sub
inc
shl
xchg
xor
jae
adc
pop
pop
scas
dec
and
dec
cs
or
pusha
pop
inc
rorl
xor
mov
popf
insb
inc
or
pop
sbb
cli
je
xorl
sub
insl
xor
or
repnz
or
and
lcall
mov
push
or
aaa
push
fstps
mov
pop
mov
cmp
pop
stc
jecxz
test
push
popa
cwtl
inc
es
sub
setg
not
lret
push
jge
fwait
mov
mov
pop
mov
mov
enter
lahf
call
jle
xchg
rcrb
loopne
fldpi
lcall
cmpl
pop
sarb
out
adc
and
add
xchg
mov
jne
jae
mov
jne
imul
inc
jg
daa
adc
add
dec
scas
loop
lret
lret
cmc
imul
call
stc
outsl
in
sub
scas
cmp
xchg
mov
daa
xor
fldenv
lea
in
sbb
in
ja
filds
imul
or
push
mov
adc
pop
mov
lock
sbb
sub
lods
dec
adc
cmp
cmc
iret
subl
enter
dec
cmp
nop
pop
cmp
push
sbb
mov
lds
sub
rcl
jl
xorl
je
adc
add
and
jns
outsb
in
jle
shll
dec
ljmp
out
dec
dec
aas
or
lea
adc
xchg
enter
fistps
and
xchg
rorb
push
test
rol
mov
fwait
xchg
push
jecxz,pt
push
neg
fwait
or
xchg
cmpl
adc
sarl
int3
add
in
leave
mov
mov
dec
mov
orl
pushf
roll
jae
mov
inc
int3
sub
cli
int
sub
aam
and
aad
push
cmp
adc
jns
mov
ret
pop
ficoml
mov
sti
jbe
pop
adc
idivl
dec
jo
rcr
xchg
jmp
push
jno
mov
nop
gs
lret
cwtl
mov
mov
test
jmp
mov
dec
repnz
pusha
cmpl
or
dec
test
and
std
pop
rep
add
rolb
js
out
cmp
sbb
dec
sub
xchg
inc
std
lret
xchg
fnstcw
lods
add
pop
jmp
push
push
mov
mov
dec
test
dec
xor
mov
mov
std
sbb
pop
dec
pop
loope
clc
cld
mov
pop
aas
loop
push
popa
aad
or
test
jo
and
shll
or
push
scas
mov
cli
push
cmovne
fstpl
dec
insb
push
jb
adc
int
xor
dec
mov
cmc
lcall
dec
mov
mov
rorl
xchg
xor
push
loopne
sbbl
icebp
mov
cwtl
dec
adc
cmp
cmp
fldt
cmpsb
push
pop
pop
add
mov
mov
mov
mov
xchg
lds
int
fists
sub
add
push
xchg
push
cs
fdivrs
mov
push
andb
bound
pop
mov
pop
pop
adc
rcl
addb
sub
push
addr16
mov
push
inc
jne
fdivs
sub
xor
dec
fldt
cmp
data16
mov
adc
mov
mov
xchg
repz
orb
mov
adc
pop
pusha
cld
roll
aad
in
addl
in
jg
push
enter
movsb
xchg
add
jle
lcall
push
decl
lea
inc
mov
imull
divl
decb
fbld
adc
ja
sbb
cmp
out
stos
ja
int
adc
icebp
adc
push
fbld
inc
push
adc
jae
aad
sub
adc
fistpll
les
xchg
lahf
xor
fwait
push
icebp
aas
cs
es
xor
mov
fstl
xor
and
sbb
fistps
push
cmp
insb
es
and
cmc
or
in
mov
arpl
mov
mov
dec
push
cmp
xor
sbb
xor
lcall
dec
pop
mov
aas
xor
sbb
pushf
out
xchg
ret
imul
sbb
dec
ss
into
inc
jecxz
je
cmp
cs
jl
push
add
scas
pop
inc
aam
ror
mov
xor
push
mov
push
push
movsl
sbb
fcmovnu
stos
testl
repnz
add
jl
popl
in
or
push
mov
xchg
xlat
jbe
mov
popa
adc
adc
addl
adc
pop
test
xor
jno
sbbl
push
js
cs
orb
fs
out
test
adc
xor
loopne
or
mov
cmp
in
xlat
add
cmpsl
xchg
daa
mov
push
aaa
in
imul
jge
aas
mov
mov
rolb
jecxz,pt
hlt
mov
ljmp
std
ret
push
xorb
mov
dec
in
pop
push
imul
cmp
or
and
sbb
mov
sbb
sub
aas
inc
bound
or
xchg
lea
inc
push
ds
jne
jp
push
cmp
and
xchg
nop
xchg
sub
sub
jo
and
and
out
inc
or
shll
pop
mov
loope
or
fcmovb
jo
bound
adc
dec
push
fs
in
lods
jmp
mov
in
popa
jmp
into
xlat
add
mov
or
popa
sub
cltd
rol
roll
popf
jo
and
xchg
mov
rcrl
addr16
sub
adc
movsb
ficompl
cmpsb
xor
push
mov
and
imul
mov
mov
mov
jp
cmp
shrb
cmp
push
push
mov
jg
inc
sbb
rorl
fadds
dec
xor
bound
jg
lds
arpl
pusha
dec
test
aam
and
pop
in
shr
adc
mov
jmp
jcxz
leave
lds
jg
add
push
push
cs
sbb
das
jae
jo
mov
push
fwait
sti
sub
out
inc
popa
inc
add
jmp
test
orl
rorb
jmp
jl
sbb
lds
scas
movsl
inc
inc
xchg
mull
cmp
mov
lods
add
ds
ljmp
adc
jle
out
xchg
loopne
in
mov
out
jp
aam
in
sbb
jb
ss
xor
out
movsl
mov
mov
jnp
lods
jmp
fdiv
ja
inc
push
jb
xor
inc
and
leave
mov
mov
inc
xchg
ja
sahf
aaa
xor
xor
aaa
or
mov
add
ss
cmc
gs
hlt
push
mov
add
pop
jns
and
cmp
sbb
repz
dec
ror
ljmp
fsts
mov
icebp
lret
and
mov
ss
sub
nop
fstl
cltd
pop
or
jmp
xchg
test
test
xor
sub
xor
xchg
sub
fdivs
stos
jecxz
add
gs
into
mov
or
test
pop
into
test
in
leave
in
pop
mov
stos
std
xlat
jb
cmpsb
jbe
mov
lret
push
adc
push
push
cmp
movb
aad
sbb
xor
je
mov
mov
gs
inc
pop
push
and
sbb
lds
popf
inc
fiadds
mov
xor
fucomp
xor
mov
ret
sbb
adc
scas
cmc
nop
repnz
jle
add
mov
sti
jle
enter
fs
adc
test
les
ret
or
adc
popf
sbb
dec
inc
pop
lret
xlat
jbe
xchg
mov
neg
push
aad
pusha
not
clc
cmp
movsl
je
dec
leave
xchg
sarl
andb
or
or
idiv
addb
cli
push
lret
pop
dec
adc
mov
imul
cmpsb
pop
aaa
mov
incl
inc
or
cli
cmp
cs
daa
int3
xchg
jns
inc
xchg
lods
dec
mov
out
mov
loop
mov
pop
imul
stos
xchg
mov
in
data16
popf
hlt
daa
mov
inc
add
adc
xchg
mov
loop
push
js
push
sub
lods
dec
in
mov
cs
sub
sub
cmp
inc
and
mov
mov
mov
mov
outsl
pop
pop
fiadds
xor
and
fs
lds
jecxz
add
pop
pop
jp
add
out
xchg
mov
mov
addb
jge
lock
cmp
push
jb
nop
or
mov
cmp
mov
movaps
rclb
sub
cmp
arpl
or
mov
jg
cmp
and
les
in
sub
xchg
jno
pop
sbb
and
repnz
mov
imul
push
push
cmp
dec
cmc
jmp
testl
xchg
or
adc
push
jp
mov
sub
jecxz
dec
dec
mov
imul
data16
fadd
imul
xor
jl
vphadduwq
xor
xor
xchg
push
xor
sub
popf
clc
insb
mov
pusha
cwtl
imul
mov
ss
xor
pusha
cmp
notb
lods
leave
jae
cwtl
xor
or
testl
adc
loop
in
dec
and
inc
sub
movsb
mov
mov
test
cwtl
adc
lods
sbb
mov
adc
sbb
xor
inc
std
pop
pop
dec
pop
pop
or
adc
mov
adc
inc
dec
or
mov
pop
cmove
cmp
and
pop
addl
xor
fldt
push
jmp
aas
lcall
lcall
dec
enter
sahf
sub
pop
aam
push
sbb
add
or
in
js
ret
ret
popf
outsb
in
mov
test
jl
js
or
mov
rol
stc
sbb
and
mov
mov
sahf
in
cmpsb
mov
add
shr
rcrl
rclb
lcall
push
or
ret
fwait
mov
mov
and
pop
lret
xchg
dec
dec
pop
push
pusha
push
cmp
add
add
xor
mov
mov
popa
pminub
rclb
inc
xchg
sbb
fucomip
nop
icebp
fs
jle
mov
mov
jle
mov
dec
mov
jl
or
xchg
fs
adc
sub
xlat
shrl
std
fs
sbb
psubd
enter
xor
int3
mov
insl
mov
sub
mov
inc
inc
movsl
shl
dec
in
mov
pop
js
pusha
jno
js
sbb
mov
cwtl
cltd
lret
adc
or
lods
andb
jbe
add
mov
sbb
or
clc
mov
or
pop
mov
ds
mov
cmpsb
repnz
inc
test
cmpsb
and
inc
jb
jle
jbe
aam
jmp
mov
pop
push
mov
lock
sbb
or
mov
pop
out
dec
ljmp
pop
pop
ljmp
cltd
movsl
int
cwtl
push
shl
xchg
stc
aam
mov
mov
sahf
rcl
push
or
xchg
xchg
test
cmp
inc
xchg
ja
sbb
in
aaa
lret
pop
pop
gs
inc
cmp
xor
jg
mov
dec
pusha
and
addr16
in
mov
iret
dec
inc
mov
stc
fs
fwait
mov
lret
xchg
dec
mov
stc
filds
popa
adc
fiaddl
aad
mov
mov
mul
fcomp
lds
sbb
in
pop
das
out
mov
fs
or
mov
int
push
stos
out
add
pop
pusha
dec
inc
cmp
out
inc
or
stc
mov
mov
xchg
inc
inc
clc
jmp
sub
cmp
cmp
mov
add
jp
jo
fcomip
cld
mov
out
hlt
inc
sti
jae
push
inc
inc
fdivs
lods
xchg
fsts
sub
and
xor
roll
loop
cmp
enter
mov
clc
lea
push
push
mov
xlat
je
xor
ljmp
call
arpl
int3
pop
adc
fldt
push
fwait
adc
jecxz
xchg
mov
lahf
sub
sub
daa
pop
mov
or
lret
psubw
loopne
push
cmp
dec
gs
lret
aas
outsb
mov
xor
or
out
cltd
push
xor
push
cmp
out
rclb
push
popa
adc
mov
inc
hlt
int
xchg
pushf
xchg
jae
das
xor
sub
icebp
fwait
cmp
adc
call
sarb
pop
pop
lea
ljmp
fisubrl
inc
lcall
mov
repnz
jmp
sbb
test
nop
adc
push
sahf
add
hlt
repz
aas
or
shlb
sbb
sbb
andl
packuswb
adc
aas
sub
dec
push
or
nop
jnp
mov
test
mov
jbe
jl
out
xlat
int
mull
sub
hlt
jb
shll
dec
fistpll
adc
xor
fsubs
popf
out
insl
mov
out
pop
xor
add
outsb
out
inc
xor
or
push
inc
xchg
bound
addb
or
stc
cmpsl
pop
push
xchg
sbb
call
inc
mov
cld
push
add
daa
addr16
mov
pop
pop
cwtl
pop
push
inc
test
das
ja
popf
sub
xor
pushf
pop
sub
imul
pop
or
push
std
stos
jbe
out
sub
loopne
jp
pop
stc
lahf
mov
aam
pusha
xchg
rclb
test
into
sarb
dec
arpl
add
cmpl
call
lret
mov
dec
fdivr
fs
enter
and
aam
cmp
mov
inc
push
mov
gs
imul
lods
out
icebp
test
sbb
jg
mov
stc
fldl
sahf
push
xchg
pop
outsl
lods
or
popf
push
cmc
out
xchg
out
push
mov
cli
pmulhw
or
lds
pop
and
imul
mov
pop
and
adc
dec
and
fsubp
xor
add
push
hlt
mov
ds
lock
loope
add
dec
nop
dec
cmp
les
leave
je
stc
inc
das
sbb
cmp
mov
jo
xchg
push
sub
imul
lds
movsl
pop
sbb
mov
sub
add
fcom
jae
xor
inc
sbb
je
inc
add
jl
imul
fsubrs
pusha
xchg
pop
pop
fiaddl
out
inc
dec
lods
pop
sarb
int
or
outsl
adc
lret
xchg
and
add
xchg
lcall
fadds
jne
daa
mov
or
int
fsub
mov
movsl
mov
int
fstl
push
xor
cmp
jg
push
test
push
push
jbe
push
nop
pop
out
aaa
popf
mov
and
xorl
ljmp
sub
popf
test
pop
in
cmc
mov
add
ds
jmp
sbb
cs
push
mov
jae
out
xor
jecxz
and
subl
cmp
loopne
inc
xchg
fistl
inc
inc
adc
popf
repnz
cmp
cld
lock
into
outsb
lret
push
rcl
mov
je
adc
xlat
dec
push
add
lock
hlt
mov
sub
hlt
in
je
repnz
jecxz
inc
clc
mov
lahf
loopne
das
iret
in
ficompl
push
sarb
mov
iret
loopne
ljmp
dec
lcall
pushf
fsubs
cmp
xor
dec
cmp
outsb
nop
test
ret
iret
dec
fiaddl
sbb
jb
or
loope
mov
cmp
ja
mov
mov
fcmovnbe
repnz
push
out
insl
seta
xchg
sti
or
pop
nop
inc
dec
fsts
jge
pop
ret
das
cmp
inc
fistl
push
xchg
xchg
les
stos
insb
sub
das
mov
xchg
imul
and
test
fistl
ja
cli
sbb
add
pop
loop
jo
mov
add
iret
inc
inc
adc
xchg
gs
add
mov
loop
hlt
std
aad
cli
nop
xchg
push
and
cmpsb
cmp
insl
ljmp
add
and
inc
mov
xchg
sub
adc
or
popf
mov
push
dec
aad
xchg
sbb
sbb
in
test
xchg
mov
outsb
fcmovne
clc
push
push
leave
jg
test
in
imul
and
test
pop
mov
pop
lods
mov
repnz
inc
movsl
sub
loopne
inc
mov
xor
imul
xchg
cmp
dec
aaa
xlat
push
add
and
sahf
or
fstl
popl
dec
clc
pop
xchg
push
add
push
push
sub
lret
pop
movsb
stos
repz
test
or
xchg
xchg
push
aad
mov
mov
pop
scas
les
jb
popa
lods
popa
fwait
and
dec
fstl
test
dec
repnz
fbld
cs
xchg
push
test
xor
jmp
pop
mov
pop
movsl
dec
out
push
adc
jne
inc
popf
fcomip
mov
sahf
aad
jae
push
mov
jb
repnz
popa
fiadds
mov
mov
js
cmpsb
add
ror
popf
out
comiss
enter
xor
dec
ss
jecxz
test
cltd
lret
fiadds
dec
or
jmp
ror
pop
cmpsb
mov
pop
push
sbb
cmp
push
and
xchg
jbe
iretw
and
js
jns
sbb
push
in
je
rolb
and
cltd
insb
jae
call
cmpl
or
pop
mov
bound
enter
jecxz
cmp
aad
in
jbe
fwait
lods
lods
sub
lret
cmpsl
ret
push
sub
sub
or
pop
push
lret
pop
pushf
cld
int
nop
insl
push
sti
cmp
sub
xor
mov
mov
mov
xchg
pop
and
pop
pop
mov
dec
scas
mov
bound
dec
rorb
or
cmp
mov
aam
lea
pop
jbe
out
mov
iret
loopne
outsb
imul
cmp
sarl
aad
gs
ljmp
hlt
repnz
sbb
mov
addr16
lcall
push
xchg
xchg
mov
sysret
std
aam
dec
jbe
adc
sarl
call
out
pushf
aaa
add
shrb
pushl
pop
xor
das
cmp
sbb
xchg
adc
jne
lods
sti
shll
out
mov
and
bound
push
inc
leave
gs
jmp
pop
push
pop
inc
xlat
cmp
int3
ss
imul
cmpl
sbb
scas
push
or
std
lock
out
xchg
dec
sbb
data16
dec
add
in
es
gs
mov
jne
ljmp
clc
push
gs
lock
lock
lods
dec
mov
mov
sub
popf
xchg
outsb
xlat
inc
je
push
pop
in
sahf
push
dec
sub
pop
pop
dec
xor
or
mov
pop
adc
xchg
int3
xchg
mov
mov
test
dec
cmp
cvtdq2ps
pop
cmpsl
jecxz
inc
xchg
jecxz
out
mov
push
mov
mov
sbb
arpl
and
mulb
out
sbb
jne
jno
imul
loopne
aam
outsb
sub
push
cmpsb
xor
out
cmp
lds
adc
imul
mov
adc
jge
pop
sbb
clc
stc
daa
lret
aaa
cmpsl
jp
and
pextrw
or
xor
jnp
xchg
test
mov
cmp
push
andl
shrb
sbb
enter
push
test
lds
mov
jne
fdivl
jb
stos
fdiv
idivb
sub
cmp
mov
stc
rcll
push
imul
pop
lahf
dec
inc
loop
sub
push
xor
cmpsl
mov
jns
dec
push
jo
or
mov
sub
adc
jle
pop
int3
cs
mov
enter
jo
stos
pop
jno
lds
fmull
lods
loope
hlt
adc
sub
ja
cmc
stos
push
pop
cmp
mov
add
adc
repz
clc
sub
shrb
bnd
sbb
pop
xchg
xchg
pop
out
das
int3
cmc
jne
in
movsb
xor
inc
dec
add
pop
loopne
sbb
cltd
ret
mov
clc
jae
sti
pop
test
xor
pop
mov
loope
add
or
jo
pop
mov
mov
std
lods
int
icebp
scas
std
test
pop
mov
sub
inc
jle
mov
lock
or
add
add
jnp
pushf
lea
es
lret
pop
dec
mov
stc
in
pop
mov
sbb
xor
mov
dec
rclb
leave
in
mov
lahf
lcall
or
inc
or
pusha
add
fidivrl
mov
push
aaa
cmpsl
or
pop
add
pop
cltd
and
popf
lods
cmp
loope
jmp
in
mov
push
or
aas
loop
lahf
or
in
or
mov
jbe
ss
jns
mov
push
les
inc
sti
into
int
xchg
stos
jb
and
test
rep
loop
add
push
add
ret
ljmp
ja
out
aad
test
test
scas
clc
pop
sbb
xor
ror
xchg
test
xor
shlb
aaa
mov
icebp
and
mov
push
jne
je
jne
aaa
subl
sbb
ror
pop
dec
jns
pop
outsl
sbb
adc
out
cmp
mov
les
pop
add
fdivrs
dec
data16
xor
or
mov
adc
or
push
lcall
xchg
mov
jbe
push
jge
fbld
mov
and
in
adc
fimuls
fdivrl
dec
faddp
sbb
cmpsl
adc
into
out
and
push
adc
clc
pop
cmpsl
insb
je
js
rorl
cmp
jne
jl
fisttpl
push
movsl
test
cs
jmp
in
mov
aam
mov
push
cmp
push
jle
mov
jecxz
and
mov
adc
insb
cmpsb
or
mov
loopne
cmp
and
pop
mov
movsl
les
fbld
jge
xor
std
and
rsm
cmp
mov
js
dec
mov
pop
jno
sub
test
int3
int
mov
mov
aad
pop
cmp
lret
xlat
iret
jmp
add
xor
xor
adc
push
lahf
stos
mov
and
out
sbb
dec
movsl
or
ja
aas
mov
push
mov
in
out
popa
dec
and
dec
iret
pop
sbb
in
lahf
lds
fnsetpm(287
adc
in
sub
out
mov
cmp
shll
les
mov
pop
fstp
inc
mov
dec
iret
pop
sbb
sbb
cmp
fisubl
jne
icebp
ss
insl
or
jnp
xchg
in
dec
mov
xlat
push
inc
jb
adc
sub
mov
ficompl
cmp
mov
movsb
loope
fldl
mov
dec
push
je
push
push
stos
sbb
lds
mov
push
cmpsb
cld
in
push
jo
lods
adc
lret
jecxz
push
push
mov
adc
add
and
adc
cs
pop
in
out
jb
push
insb
shlb
inc
lret
imul
mov
inc
sti
orl
je
es
ss
mov
sbb
dec
or
addr16
aaa
fsubrs
aad
in
jno
pop
fildll
cmc
and
push
mov
sub
sub
jp
sub
jmp
and
xchg
in
mov
enter
leave
fsubp
fwait
jecxz
add
sahf
jo
push
test
addr16
ljmp
mov
pop
jo
mov
sub
pop
enter
xchg
in
adc
mov
int3
dec
cltd
popf
push
pushf
mov
enter
and
jmp
sahf
cmc
or
mov
or
add
nop
dec
mov
cmp
cwtl
inc
stc
xor
adc
sbb
mov
dec
sbb
loop
test
push
in
and
cmp
inc
iret
int3
push
jmp
push
iret
enter
cld
fnsave
jg
mov
pop
outsb
jmp
jo
daa
into
inc
pop
clc
add
es
mov
cmpsb
xchg
jmp
inc
xchg
jb
sarb
pop
pop
int
loope
nop
or
movsb
out
in
int
rclb
dec
insb
sbbl
xor
lahf
ret
sbbl
sbb
std
aas
jne
xchg
xor
mov
shrb
xor
mov
push
jno
cwtl
jl
les
cmpsl
pop
aas
dec
int3
ret
enter
and
das
add
cmpsb
mov
pop
out
cmp
cmp
int3
leave
rol
add
dec
pushf
and
jl
fcmovne
leave
sarb
jecxz
add
scas
xor
ret
sbb
mov
fbstp
add
les
in
adc
lea
rol
adc
int3
das
mov
fildll
push
or
lahf
jmp
cmp
les
fs
mov
xor
ds
fnstenv
sbb
cli
hlt
leave
adc
pop
xchg
lahf
ffreep
sbb
mov
stos
imul
stos
sub
shlb
repz
ret
rorb
mov
test
mov
add
mov
flds
das
shrb
sub
aam
sahf
out
aas
pop
or
out
mov
cmpsl
lret
adc
imul
out
pop
sbb
and
add
rep
je
sahf
aad
pop
xor
pop
shlb
lret
inc
loopne
cmp
mov
repnz
inc
lahf
popa
pop
fdivl
outsl
iret
aam
xchg
push
jo
call
mov
dec
jae
lcall
out
js
subl
jmp
lock
jns
call
xchg
add
call
insl
aam
and
inc
xor
mov
adc
mov
or
xchg
jmp
or
lods
das
cmc
mov
fstl
push
pop
sti
fdivrl
testb
or
fcomps
xchg
cmpsl
xorl
loop
mov
std
dec
out
xchg
dec
xchg
es
bound
std
mov
les
scas
xchg
add
icebp
scas
jle
mov
movsb
or
jge
xchg
lcall
xchg
sahf
xor
xchg
mov
push
rolb
mov
aam
fs
xor
lret
sub
or
mov
ljmp
pop
out
bnd
loop
jnp
cmpsl
or
push
cmp
cmp
ss
cltd
sbbl
xlat
imul
test
adc
pop
add
negb
adc
cmp
insl
fiaddl
sub
fistpl
xor
push
dec
jp
cmp
and
push
sahf
out
mov
sub
jle
pop
int3
lahf
lcall
ficompl
loope
popf
pop
repz
out
xor
add
dec
xchg
mov
push
call
push
jge
adc
fwait
add
cmp
cwtl
lods
bound
loope
cmc
dec
sub
push
and
add
sub
enter
in
and
mov
cmpsl
inc
xchg
in
push
cmp
or
pop
shlb
fdivr
and
sbb
mov
fistpll
call
addl
in
xchg
adc
mov
xchg
xor
push
repnz
shl
xor
mov
in
jns
pushf
ljmp
xor
jo
mov
dec
arpl
repnz
mov
mov
fnstcw
nop
or
mov
cmp
insl
gs
shll
cmp
mov
cmp
enter
sbb
prefetchwt1
outsb
flds
fmulp
outsl
sub
daa
scas
pusha
jmp
and
out
dec
loop
push
mov
mov
sbb
jecxz
and
or
ljmp
pop
xor
xor
js
jg
xor
xchg
push
lods
xlat
jb
push
jne
pushf
sbb
jg
mov
leave
adc
jmp
sub
or
lock
adc
stos
adc
aam
out
lea
das
push
mov
fstpt
push
cmp
mov
sub
mov
outsb
push
sbb
push
bnd
popa
push
inc
mov
add
mov
mov
inc
adc
std
push
insl
hlt
jl
mov
add
sub
jmp
jge
add
xchg
dec
adc
addl
mov
aaa
je
adc
jb
loop
pusha
pop
std
sub
movl
jns
adc
icebp
stc
aas
dec
shlb
imul
cmp
ja
jle
repz
lcall
cmp
daa
mov
mov
leave
in
les
in
adc
lret
jno
inc
aas
dec
leave
dec
out
xchg
rol
mov
imul
dec
cmp
push
and
in
call
nop
pushf
faddl
cmp
std
mov
lahf
xor
insb
mov
xor
aam
stos
dec
lret
jbe
cld
jge
add
dec
mov
xchg
cmc
jnp
xchg
mov
addb
push
push
lret
cmp
or
and
cmp
mov
fstl
add
inc
sub
dec
or
addb
cmp
add
sub
rcr
jmp
clc
jae
std
and
cmpl
lods
outsb
pop
fisubs
add
stos
sahf
and
test
subb
popf
mov
inc
jo
rolb
lcall
test
mov
inc
mov
cmp
add
inc
stos
sub
inc
sbb
adc
iret
mov
lret
iret
xlat
mov
in
bound
xor
cwtl
stos
inc
pop
in
lds
data16
test
cli
jle
jg
xor
sarl
xor
mov
fisubl
dec
jmp
mov
pop
fs
shll
stos
xchg
xchg
push
movsb
scas
ror
sarl
scas
stos
loopne
mov
and
lea
pop
lock
cmp
shlb
icebp
cmp
dec
fildl
dec
in
cltd
aas
repnz
jb
dec
mov
adc
mov
clc
adc
bound
ret
into
pop
call
mov
ljmp
xchg
pop
sarb
sti
jge
lods
mov
jmp
mov
fsubrl
mov
mov
push
push
mov
adc
inc
mov
cmp
mov
dec
pop
les
xor
jbe
xchg
notl
je
adc
ljmp
stos
adc
push
lock
add
mov
jmp
fdivrl
mov
jnp
enter
sarl
pop
cltd
in
ljmp
loopne
test
out
pusha
fdivrs
pop
ret
into
inc
ds
aam
sbb
js
test
popf
cmp
inc
js
inc
arpl
jo
mov
fwait
mov
and
inc
mov
cmp
pop
ret
outsl
mov
inc
jle
add
sub
cwtl
imul
ss
or
sbbb
dec
clc
push
in
mov
mov
stc
out
fildll
inc
jmp
in
mov
inc
add
fxam
ror
out
xor
cmp
into
enter
out
ds
dec
rolb
andb
loop
or
fsubs
jne
mov
and
push
sahf
lods
adc
call
leave
mov
shl
daa
shlb
xchg
xchg
imul
sbb
inc
in
mov
adcb
scas
or
mov
in
nop
unpcklps
or
addr16
loopne
pop
sub
aas
repnz
sbb
sbbb
sub
mov
inc
movsl
push
loopne
addr16
dec
addr16
add
leave
mov
xorl
jbe
lods
push
in
shr
mov
adc
inc
outsb
sbb
mov
bound
arpl
sbb
dec
or
je
or
shrb
pop
ss
leave
sbb
cltd
mov
scas
mov
je
hlt
pop
adc
inc
into
ss
in
adc
test
pop
jge
or
outsb
out
popa
insb
pop
mov
mov
jmp
sbb
sub
imul
stc
stos
aad
inc
es
pop
inc
pop
dec
roll
subb
or
push
mov
inc
fimull
adc
cmp
mov
inc
inc
int3
mov
push
daa
cld
pop
leave
sbb
xchg
xchg
loop
mov
and
sub
lods
mov
xchg
inc
rol
movsl
pop
mov
mov
cmc
fisttpll
mov
outsb
dec
sar
cmp
loop
push
sti
sub
dec
clc
in
add
pop
mov
or
fsubr
dec
jp
add
dec
dec
mov
cld
xor
jno
aam
test
js
cmp
dec
jb
repnz
mov
lock
or
jb
jnp
jmp
jecxz
stos
jmp
ficomps
movsb
dec
sub
test
ja
dec
call
pushf
mov
xchg
pusha
sbb
xchg
or
imul
mov
xchg
sub
sbb
cmp
mov
jl
loop
les
pusha
sarb
push
jp
in
call
andl
sbb
daa
sbbl
and
cmp
lods
icebp
mov
mov
decl
push
shlb
jns
add
and
jae
es
xor
bound
outsl
push
push
add
aam
iret
mov
mov
mov
cmp
mov
sub
addr16
insb
push
rorb
testb
xchg
mov
les
sub
fcmove
sub
les
cltd
das
es
mov
dec
ss
xor
xor
mov
sbb
xchg
cmp
rorb
fiaddl
or
pop
pop
imul
cmp
pop
and
dec
mov
jg
xor
pusha
aam
mov
mov
into
and
mov
in
push
cltd
lock
test
cli
jl
inc
sbb
push
outsl
push
push
jmp
hlt
xchg
jns
jae
nop
in
lea
fcoms
jge
pop
xlat
cmp
out
stos
jl
inc
and
sub
clc
scas
mov
ds
lods
xor
lds
xchg
pop
sbb
jle
inc
dec
lock
push
mov
jmp
les
jecxz
sub
aad
std
cmp
add
dec
cwtl
das
aaa
mov
mov
incl
mov
stos
testb
mov
aam
fidivl
inc
xchg
in
cwtl
imul
mov
mov
push
sub
or
outsl
and
in
fprem1
insl
and
add
sbbl
aam
mov
mov
pusha
out
ret
jnp
pop
cmp
call
pop
pop
sarb
adc
out
dec
fwait
lret
addl
cli
test
lret
push
xor
pusha
dec
push
xor
rol
test
mov
sbb
lret
call
sbb
dec
add
sbb
stc
pop
lea
adc
movsl
or
adc
inc
xchg
aas
sub
push
push
fstpt
cli
mov
jmp
dec
repnz
iret
fsubrl
repz
mov
pop
icebp
outsb
gs
hlt
push
jmp
sub
pop
xor
push
cmpl
out
add
xor
add
mov
xor
ret
add
sbb
bound
and
and
into
jmp
pop
xchg
mov
xor
sbb
rcrl
sti
addb
dec
in
repnz
mov
or
xchg
sbbb
cmp
std
stos
jp
lcall
in
pushf
test
mov
pop
push
movsl
push
les
mov
cmpb
fisubrl
fs
add
add
sbb
arpl
pop
mov
insl
out
dec
and
add
dec
inc
cmc
inc
pop
adc
push
mov
in
mov
pop
pop
dec
bound
mov
xchg
shll
arpl
jg
mov
xchg
jl
in
add
fmul
loopne
inc
cmpsl
adc
push
out
dec
mov
or
in
nop
xor
push
cmp
mov
shl
fidivrl
loopne
add
jae
mov
mov
jne
xchg
les
addr16
fimuls
out
and
js
pop
mov
mov
fiaddl
repnz
lcall
xorl
outsl
icebp
jle
test
and
mov
xchg
iret
popa
mov
inc
arpl
pop
ret
push
and
mov
loopne
sbb
scas
lods
lods
cli
sub
sbb
add
jecxz
cld
push
out
test
lahf
jp
mov
jge
push
jmp
sub
ja
lock
pop
sbbb
call
and
bound
pop
pop
hlt
or
jo
test
mov
mov
enter
lea
mov
das
imulb
icebp
fs
mov
pop
scas
test
lock
notb
mov
add
mov
std
push
lahf
xor
stc
sarl
mov
push
inc
loopne
xchg
iret
push
insb
mov
js
adc
fistpll
cwtl
push
mov
mov
push
inc
dec
adc
xor
mov
inc
fnstenv
aam
idivb
dec
sti
inc
xor
jnp
and
ds
sbb
faddl
push
mov
jge
je
mov
leave
inc
or
pushf
rorb
aas
int
lods
mov
out
repz
popf
not
ds
stos
and
adc
aaa
mov
mov
fs
xchg
dec
inc
inc
dec
scas
adc
mov
cmp
pop
fbstp
shr
and
fisubrl
nop
cmpsb
stos
mov
jno
mov
xor
cmp
out
jp
adc
cmp
pop
jg
in
out
jp
mov
paddsw
add
dec
cmp
inc
call
xor
js
mov
popf
cwtl
out
int3
in
mov
sarl
mov
cli
sbb
jnp
daa
stos
sbbb
pop
imul
mov
xor
test
sbb
iret
lcall
mov
mov
out
cli
mov
cld
sti
repz
stos
stos
xor
or
ficoml
add
sbb
mov
or
push
movsl
sub
pop
mov
fistps
mov
push
enter
add
scas
mov
xchg
icebp
jle
icebp
stos
pop
ss
clc
mov
inc
push
test
imull
fistpll
xchg
aam
sub
sbb
iret
mov
stos
push
and
push
inc
fcompl
xchg
mov
mov
popa
pop
xor
add
aad
int
mov
ss
imul
into
aad
dec
xchg
repnz
loopne
lahf
mov
xor
lods
insb
or
mov
xchg
jo
inc
stos
cld
das
sbb
rorb
and
cli
pop
sbb
mov
mov
jp
lea
loopne
mov
sub
jnp
loop
lcall
dec
js,pn
nop
mov
test
push
stos
mov
mov
xchg
mov
clc
mov
mov
jecxz
hlt
repz
jmp
icebp
mov
and
stos
ret
cmp
lahf
repnz
mov
jge
adc
data16
mov
xor
idivb
lea
cld
inc
repz
mull
or
sub
into
push
dec
lea
daa
int3
jno
int3
mov
fdivp
sti
loope
bound
push
sbb
xor
ret
xlat
enter
fsubrl
jmp
out
jp
sti
and
shlb
cmpsl
sbb
int3
aaa
xchg
sbb
ds
ss
sub
fmuls
and
xchg
adc
mov
loope
shl
xlat
outsb
shrl
sub
daa
movsl
cwtl
cmpsl
add
mov
shrl
inc
in
fisttpl
jl
dec
shll
mov
ret
mov
lds
mov
out
jecxz
dec
pop
sbb
test
movsl
jno
push
mov
sahf
add
pop
or
and
cmpsl
test
sbb
shll
sbb
sub
repnz
pop
adc
xor
repz
repnz
jecxz
clc
lcall
lock
lret
sahf
adc
fnstsw
out
out
xor
add
mov
cltd
xchg
add
inc
jae
sbbl
int
mov
mov
rcrl
clc
call
scas
popf
lods
mov
outsb
xor
cmp
cltd
or
fs
ret
mov
push
sub
push
loop
jnp
daa
aam
jmp
xchg
cmp
jg
adc
or
push
cmp
sub
jecxz
push
jae
rolb
cmc
ret
push
jb
jg
add
mov
stc
pop
xchg
stc
jnp
es
pop
pop
mov
sub
cwtl
clc
jl
pop
cmovbe
jno
cmpsb
and
push
jg
sbb
ret
fistl
cld
or
lods
mov
mov
jae
fcomps
sub
or
or
xor
fildl
test
fwait
push
push
dec
sub
inc
loope
adc
xchg
scas
mov
sub
xor
je
addl
sub
ss
cmp
mov
or
fsub
mov
sbb
sbb
call
and
cli
cmp
xor
dec
call
insb
mov
xor
lods
or
cmc
mov
popa
lods
push
xchg
sbb
adc
popa
sbb
outsb
std
push
aad
sub
inc
fists
lds
in
or
inc
shl
adc
mov
jg
fdivs
call
mov
movsl
sbb
fisttpll
mov
sub
mov
addr16
imul
lahf
mov
dec
pop
stc
add
add
and
inc
lds
ja
fcompl
int
xchg
shrl
xchg
flds
dec
mov
add
pop
inc
insb
enter
into
sub
add
push
sahf
push
loopne
mov
adc
mov
lods
jmp
jne
push
lret
bound
stc
es
stos
popa
icebp
push
mov
or
mov
adcl
lret
and
cmp
out
pushl
push
fnstsw
aam
ja
mov
ret
loopne
bound
dec
mov
sbb
std
mov
xchg
adc
sahf
into
push
xchg
mov
dec
addr16
mov
cmp
mov
inc
or
jp
or
mov
fisttpll
cwtl
inc
insb
aad
call
out
adc
addl
ret
repz
mov
clc
repz
dec
popf
sub
mov
cmpb
cmpsb
mov
pop
inc
sbb
fildl
ret
mov
mov
dec
cwtl
movd
int3
or
xchg
push
andl
push
fmuls
adc
clc
pop
ja
lret
int
add
lret
pushf
scas
rorl
movsl
add
mov
test
sub
cld
adc
mov
dec
jno
popl
mov
leave
xchg
bnd
sub
out
sub
jecxz
int
pop
fdivrl
and
xchg
mov
or
popf
ljmp
pushf
test
mov
ss
adc
inc
loop
pop
mov
push
cld
inc
jg
xor
call
cmpsb
popf
mov
lea
inc
repnz
or
cmp
fnsave
and
xorb
sub
ret
sbb
out
xchg
hlt
mov
xchg
dec
xchg
icebp
pop
bnd
jmp
ja
jle
sbb
addr16
xlat
bound
in
aaa
call
dec
inc
roll
dec
popf
adc
rcl
push
pop
sub
and
ja
and
scas
or
push
dec
mov
lods
movsl
mov
hlt
add
imul
jmp
mov
je
add
iret
adc
int3
cld
ret
and
in
clc
xchg
push
mov
mov
aam
mov
dec
movsb
popa
mov
inc
aad
inc
mov
cld
xchg
dec
mov
pop
mov
pop
push
or
dec
push
push
lcall
sub
ficoml
in
mov
mov
add
push
push
push
testl
adc
cmc
out
psubq
aad
lods
jbe
cmp
shrb
cmp
in
imul
stos
mov
push
and
and
jns
out
mov
loop
jno
mov
test
add
in
movsl
hlt
shlb
fsubs
in
cltd
push
and
jnp
mov
jp
pop
scas
fsubr
loop
mov
cli
stos
out
pushf
in
dec
lret
sarb
movsl
push
jp
or
cmc
xchg
mov
in
cmp
ljmp
fdivs
fldt
ds
cmp
mov
daa
push
add
cltd
lret
fisttpl
add
fs
push
rorl
fistpll
inc
test
xchg
inc
arpl
add
mov
inc
lret
testl
mov
cmpsb
sbb
rorl
xorl
add
es
jp
dec
mov
sub
sub
sbb
push
stc
rorl
daa
jecxz
xchg
neg
and
mov
and
mov
add
dec
jb
and
fneni(8087
negl
pop
push
negl
sub
outsb
into
push
mov
sbb
mov
mov
dec
jnp
dec
mov
xlat
divb
adc
jge
xor
jns
pop
sub
ss
sahf
sbb
push
mov
out
in
dec
lds
fisttps
stos
in
test
push
cwtl
in
rcl
stos
or
test
xor
and
jo
testl
hlt
lea
or
cmp
jae
xor
mov
push
add
ja
popa
or
in
sub
cwtl
lds
popf
mov
mov
push
es
mov
ja
xor
cmpsl
ret
xlat
dec
mov
iret
daa
cwtl
mov
inc
fsub
jmp
dec
call
sub
movsl
sbb
inc
inc
fistps
jecxz
fwait
ds
push
sub
xor
frstor
fcmovne
push
lock
mov
jnp
pop
lcall
fwait
mov
push
add
sbb
add
jmp
adc
stc
lods
adc
dec
leave
cmpsl
pop
xchg
mov
xchg
adc
lcall
push
jb
or
std
scas
cmpsb
jg
pusha
lcall
push
pop
scas
in
mov
mov
push
outsb
jp
push
jns
and
and
mov
fdivrl
fdivl
adc
sahf
sub
xor
hlt
dec
arpl
test
insb
cmp
xchg
loop
mov
fwait
adc
fidivrl
or
outsb
sub
mov
jl
xor
in
xchg
inc
xchg
leave
push
sahf
sub
mov
dec
mov
push
push
push
stos
ljmp
aad
rcr
inc
adc
or
xchg
cmpsb
out
sbb
sub
and
mov
adc
cmpsb
xor
jno
inc
lahf
bound
in
cli
mov
pusha
mov
into
adc
cmp
into
xchg
cmpsb
mov
mov
xor
jns
insl
dec
stos
xor
and
pop
sub
jb
jnp
js
pop
push
sub
and
jnp
push
pop
sbb
rolb
bnd
xchg
sbb
dec
and
xchg
les
jge
or
shr
xor
fwait
and
mov
sbb
sub
out
enter
xlat
mov
sbb
cmpb
push
call
lahf
int
int
mov
mov
pop
inc
std
mov
xchg
mov
outsb
cli
movsl
mov
div
arpl
lods
test
jle
int3
ljmp
xchg
add
jg
aas
add
adc
dec
push
test
les
inc
in
or
add
aam
out
pop
out
test
push
inc
lods
mov
je
adc
fimuls
mov
sbb
pusha
jbe
loopne
int
arpl
jecxz
cmpsl
xchg
daa
cmp
out
push
das
dec
inc
xor
inc
push
enter
nop
cs
add
ds
out
ds
xor
push
stos
outsb
icebp
ret
sbb
mov
cmp
and
ja
sbb
repz
movsl
or
jmp
xlat
inc
push
scas
cmp
xor
add
xor
jmp
nop
dec
sub
cmp
and
xchg
insl
fsubl
push
call
add
pushf
dec
push
out
pop
xor
mov
mov
cmc
push
fwait
lcall
andl
mov
pop
lcall
es
cmp
add
pop
fdivrs
fcmovbe
sbb
mov
int3
cmp
in
add
jp
jb
rorl
arpl
popf
and
dec
xchg
cld
mov
int
pop
cwtl
icebp
ds
xor
xor
es
push
inc
in
rcrb
call
sahf
adc
imul
jns
clc
sti
imul
push
sti
les
lahf
stos
fwait
rolb
xchg
lock
fs
lahf
fdivrs
sub
lcall
add
je
xor
xchg
sti
lds
jecxz
mov
mov
sbb
movsb
repnz
or
pop
sbb
sub
mov
les
xchg
test
mov
leave
mov
jmp
push
push
xchg
lods
sarb
sub
cwtl
arpl
ja
leave
or
or
and
xchg
ret
mov
icebp
cmp
mov
jae
xor
inc
jecxz
stos
jno
daa
xchg
inc
xchg
je
sub
adc
jp
enter
ljmp
ds
arpl
push
fs
sub
push
cmp
or
add
nop
shlb
arpl
push
dec
mov
mov
mov
movsl
cwtl
pusha
mov
sub
aaa
aam
enter
repnz
dec
xchg
inc
outsl
fldcw
fisubrl
xchg
repz
bnd
cltd
and
insb
dec
and
cwtl
pop
loope
sbb
dec
mov
mov
outsb
cmpsl
fildll
push
inc
outsb
xor
jle
push
pop
jae
dec
daa
mov
dec
sti
mov
cmp
fwait
imul
adc
jle
out
sbb
sbb
xor
cmpxchg
lahf
test
and
lods
inc
repnz
in
sarl
add
lock
sbb
push
rcr
bound
stc
xor
int
shlb
jo
add
clc
test
push
and
push
sbb
lret
push
adc
push
jecxz
jae
das
sbb
insl
out
and
add
scas
mov
ds
and
sub
mov
test
divl
mov
push
mov
fldenv
sub
add
xor
mov
push
aas
shll
aaa
cmpsl
jecxz
fnsave
lahf
adc
out
push
add
cltd
mov
cmpsl
or
push
ds
mov
scas
sbb
jle
flds
dec
movsl
mov
bnd
lcall
ja
pop
sub
sub
fisubl
fistpl
sub
cmp
fdivrs
pop
leave
pop
sbb
lods
call
mov
inc
inc
or
test
fwait
xchg
jl
ss
xchg
dec
push
or
lcall
or
dec
shrb
insl
cmp
add
int3
xchg
sub
xor
xor
xchg
dec
push
sub
xchg
test
cwtl
rep
add
cmp
rcr
cmp
jle
dec
imul
sahf
mov
clc
bound
addr16
js
outsl
nop
das
xchg
pusha
dec
and
add
inc
mov
push
cmp
sahf
sbb
inc
xor
mov
pop
test
inc
cmp
mov
sbb
rorl
xchg
mov
mov
inc
shll
mov
jbe
arpl
or
das
imul
fsubrs
sub
push
ljmp
sbb
repnz
cmp
fs
pop
loopne
dec
les
imul
push
ret
add
in
lcall
shr
push
int3
out
cld
cmpsb
das
pop
repnz
fcmovnu
lods
sbb
inc
inc
jns
push
cmpsl
fidivrl
test
scas
jnp
push
popf
push
nop
mov
cs
jecxz
aam
cli
adc
into
adc
ljmp
roll
out
pop
bound
inc
outsl
jo
push
pop
cwtl
push
pushf
or
repz
jns
inc
cmp
pop
sbb
mov
data16
sbb
pushf
in
enter
jo
inc
bound
outsl
hlt
dec
xor
sbb
cmp
xchg
adc
mov
test
rcll
aaa
in
xor
mov
mov
sub
lods
aad
add
xchg
mov
xor
mov
mov
xor
jo
in
xor
dec
das
mov
movsl
mov
push
in
arpl
pop
push
xor
stc
aas
sbb
cmp
adc
idivb
cmpsb
jns
xchg
js
bound
dec
lcall
lock
std
adc
push
and
outsb
cmp
inc
or
cmp
out
sbbb
in
dec
mov
and
dec
adcb
add
jbe
or
data16
mov
xchg
pop
push
cmpsl
and
mov
fs
jno
push
outsb
pop
enter
cmc
pop
aas
mov
out
jo
jle
mov
xchg
jp
push
push
out
out
outsb
out
imul
pop
int
mov
add
pop
das
test
ss
cmp
dec
into
cmpsl
and
xor
jecxz
sbb
imul
leave
addl
enter
jnp
xor
add
ret
sbb
shrl
push
ss
xchg
inc
mov
xchg
mov
push
dec
cwtl
ds
cmp
js
cmp
aad
mov
sbb
leave
adc
xor
rcrl
mov
sbb
pop
adc
movsb
stos
jae
jg
mov
pop
adc
jge
ret
das
adcl
dec
pop
cltd
outsl
sub
shl
inc
shrb
adc
cmc
cmpsb
xchg
cs
dec
mov
dec
jp
pop
pop
sarb
and
add
mov
jo
lods
mov
je
sbbl
movsl
ret
mov
xorb
jl
sbb
inc
xor
jb
xchg
inc
jmp
cs
adc
int
ljmp
arpl
rorb
inc
cmp
imull
nop
test
popa
xor
cmp
mov
popa
sub
xor
lret
jg
pop
sub
sub
sbb
dec
cmpsl
int
rcrb
int3
rolb
ret
mov
jae
cmp
xor
sbb
pop
into
mov
or
stc
pop
and
lock
icebp
gs
push
push
lcall
push
fstp
lea
dec
xchg
inc
pop
mov
cwtl
pop
dec
test
pop
inc
xlat
test
addl
je
cmc
test
fwait
or
fmull
dec
jns
cltd
mov
rcrl
sbb
xchg
jle
inc
fs
nop
mov
cmpsl
cltd
inc
cmp
add
dec
push
mov
imul
cmp
loope
out
xchg
jo
inc
xchg
cwtl
div
push
and
adc
pop
aad
lcall
shlb
adc
push
loope
push
mov
out
andl
inc
jge
loopne
inc
insl
je
mov
mov
sub
les
inc
repz
push
and
xchg
fisttpll
pop
insb
mov
cli
or
sbb
in
rorl
cmp
jne
js
imul
cmp
mov
cmp
cmp
mov
out
jae
pop
sub
xchg
inc
sub
xor
mov
mov
ret
pop
cmp
or
mov
xor
pop
stos
mov
and
outsb
in
pop
mov
and
xlat
pop
lea
push
aaa
outsb
mov
out
aas
mov
iret
int3
mov
movsb
mov
fistpl
jno
ja
mov
ja
add
test
add
repnz
popf
fsubrs
jl
xor
sub
cmp
inc
add
cmp
mov
sub
sbbb
mov
repz
xor
xor
sbb
cld
je
cwtl
imul
rorb
clc
idivl
cmc
add
stc
or
and
mov
std
repz
mov
js
pop
in
sbb
push
jge
fwait
cmpsl
int3
mov
mov
pusha
sarb
loope
into
outsl
nop
scas
pop
movsl
ljmp
cmp
enter
pop
jbe
dec
ret
js
shlb
sub
or
imul
xchg
fiadds
jne
scas
xor
inc
cwtl
dec
inc
cmp
sub
push
jle
fldenv
adc
mov
mov
and
pop
int3
or
ret
or
into
mov
out
pop
cmp
and
and
cmovp
adc
daa
xor
xchg
scas
adc
imul
insl
pop
cltd
mov
repnz
or
test
loope
inc
and
outsb
adc
mov
mov
or
inc
dec
cmc
xor
out
clc
sub
inc
xchg
loop
cwtl
hlt
pop
mov
cmp
cmp
data16
xor
push
push
adc
add
subl
rolb
shufps
dec
inc
lods
js
add
add
dec
add
mov
lock
sar
out
jne
xchg
enter
cmp
pop
stos
jmp
sbbb
inc
add
add
shll
mov
mov
xchg
shrb
lods
mov
adc
cmp
cld
outsb
sbb
pop
faddl
pop
mul
cmpsb
cmp
mov
mov
out
pop
jp
sub
fwait
loopne
lret
out
adc
mov
cmp
or
call
jo
repz
loop
rolb
mov
rcr
mov
mov
mov
xor
stos
scas
sub
jmp
add
xor
ja
mov
or
cmc
test
aad
fildl
repnz
cmpsl
push
inc
idivb
cs
dec
sbb
into
jmp
repnz
xchg
mov
loope
fdivrs
repz
test
mov
out
dec
sbb
xor
data16
lods
and
push
in
mov
xlat
addl
and
shlb
xor
and
mov
sbb
cmp
sbb
mov
mov
adc
or
in
stos
mov
xchg
pop
hlt
mov
popf
add
fs
inc
fsubl
bound
push
sti
jne
test
wbinvd
clc
pop
xchg
ss
sarl
sub
mov
roll
and
fnsave
push
in
repz
add
pop
jo
repnz
push
sbb
out
dec
daa
popa
mov
insl
mov
push
filds
out
jae
xor
xchg
jo
xchg
mov
fidivs
js
out
sbb
outsl
stc
jp
dec
inc
sbb
fnstenv
cld
lea
or
push
jae
sub
pusha
sub
cmp
lret
or
push
gs
ret
and
push
push
xor
xor
std
jns
sar
jns
push
push
jp
daa
lcall
mov
fsubrl
int
adc
rcrl
les
cmp
adc
mov
inc
loopne
and
mov
scas
inc
xlat
cli
test
lret
pop
repz
adc
data16
fistpl
sbbl
xor
loop
inc
mov
push
mov
adc
cmpsl
mov
repz
popa
int
cmp
popf
mov
orl
sub
out
ret
cs
sub
mov
mov
adc
dec
push
sub
aad
xchg
dec
jno
cmp
inc
call
arpl
out
add
fistps
movsl
inc
es
dec
xchg
mov
xor
push
mov
pop
out
cwtl
and
sarl
lret
jne
arpl
mov
pop
xor
pop
loopne
jg
lds
mov
scas
inc
js
push
int
cmp
xor
mov
imul
cmp
ss
out
popa
test
int
gs
xor
pop
leave
pmuludq
mov
mov
hlt
push
push
adc
push
lret
data16
push
mov
jl
out
xchg
sbb
sub
pop
inc
test
or
dec
xchg
mov
shll
dec
pop
es
cmpsl
xor
and
push
pop
sub
lods
cmp
stc
jae
neg
xlat
add
mov
ret
add
sbb
lahf
es
jp
pusha
mov
stc
sti
and
pusha
fwait
jae
and
push
cwtl
sub
mov
int
scas
cmp
call
hlt
add
mov
sbb
ljmp
sub
pop
into
dec
adc
jns
iret
daa
or
roll
adc
adc
imul
outsl
push
popf
popa
cmp
pop
sub
sahf
add
inc
notl
adc
inc
test
sub
xchg
das
cmpsl
sbb
icebp
push
mov
stos
xlat
xchg
pop
inc
addl
iret
push
jo
or
dec
xchg
aam
int
stos
sahf
and
rcrl
pop
pop
in
imul
popa
shll
stc
sub
rcrl
sbb
sub
sbb
jns
inc
fadd
cmc
cmpsb
pushf
shll
pop
inc
mov
cmp
outsl
loop
xor
xlat
push
loope
lret
or
je
jg
int
adc
dec
ficompl
mov
ss
arpl
xchg
push
push
loope
mov
aad
and
cmpsb
mov
push
mov
ss
rclb
je
les
or
sahf
adc
movsb
test
fs
scas
jle
iret
or
dec
mov
cltd
pop
add
fnsave
leave
call
sbb
rcrb
and
sbb
lcall
sbbl
or
jge
into
rcrl
punpcklbw
test
fstpt
pop
cmp
or
adc
cmp
push
dec
push
ja
jmp
mov
cwtl
add
call
pop
or
in
mov
cmp
shlb
es
inc
negb
pop
mov
sub
sub
mov
mov
cld
xor
es
shrb
scas
mov
loope
fwait
stos
or
shll
push
sbb
push
mov
xor
push
and
dec
jmp
gs
mov
rcrl
mov
fisttps
cmp
test
arpl
push
sub
pop
sarb
inc
push
out
sti
mov
push
mov
xchg
cmpsl
mov
or
push
mulw
pop
in
cmp
jb
and
std
adc
repnz
cmpl
addr16
add
mov
cmp
push
sbb
sbb
xchg
dec
cmc
lahf
mov
mov
mov
sbb
fcmovnb
jmp
test
cli
inc
ja
stc
jg
adc
in
ljmp
imull
dec
inc
leave
mov
cmp
mov
push
adc
jne
into
pop
loope
and
stos
sbb
fistpll
push
in
rcl
push
ss
mov
loop
sbb
jecxz
inc
les
adc
adc
xchg
sub
lods
jnp
mov
mov
xor
cmpsl
cmc
and
aam
mov
test
in
fdiv
punpckldq
adc
out
xor
popf
fiadds
or
ret
jb
test
cs
push
mov
addb
lods
jecxz
inc
mov
sub
pop
incb
xchg
sub
mov
dec
push
jne
dec
xchg
sub
xchg
sbb
dec
or
cwtl
imul
nop
sbb
call
shlb
cmpsb
xchg
inc
in
inc
in
pop
sbb
xchg
or
outsl
stc
outsb
jnp
push
loop
cwtl
pop
out
sahf
cmp
push
rclb
xchg
push
shrb
cld
movb
lret
dec
pusha
bound
add
mov
or
mov
lods
adc
es
cmp
movsb
sbb
mov
xor
mov
insl
int3
or
mov
jmp
out
adc
inc
repnz
push
dec
icebp
out
test
dec
pop
cltd
aad
jecxz
pop
and
testb
mov
sti
dec
lahf
jne
xchg
push
jno
fstpt
leave
loopne
mov
cmc
in
lock
pusha
lds
xchg
ljmp
add
adcl
outsl
inc
cmpsb
cmpsb
dec
in
pop
in
push
xchg
xchg
lods
mov
je
repnz
push
insb
dec
outsl
mov
clc
and
sti
or
je
mov
jno
cwtl
adc
sahf
dec
jae
test
xlat
and
hlt
lcall
or
fstps
mov
xor
iret
adc
lds
push
outsb
testb
lods
pop
xchg
sub
int3
cmc
shl
mov
or
arpl
das
lock
and
mov
inc
cmp
cli
mov
xchg
shrb
gs
sbb
ljmp
push
jp
dec
rorb
xor
sbb
sbbb
xor
je
scas
fcomp
dec
fwait
mov
outsb
push
in
shll
test
jns
cmp
dec
fwait
leave
fdivr
sub
adc
mov
adc
and
mov
lret
jno
pop
jno
pop
das
xchg
inc
adc
xchg
mov
xchg
out
ficoml
ror
fimull
test
xlat
mov
mov
jmp
lea
inc
jmp
leave
imul
aad
call
adc
repnz
dec
fsubrs
and
test
mov
fcomip
sbb
fbld
sbb
enter
jmp
sub
cmc
pop
fs
enter
mov
mov
sub
out
cmp
mov
fdivs
pusha
in
gs
cmp
sbb
loope
add
push
ds
and
and
sub
ror
int
jl
gs
fadd
and
stos
jg
stos
fisubl
imul
popf
les
mov
jg
inc
lds
pop
subl
inc
and
lock
jmp
sti
dec
in
mov
jne
pop
jg
rol
lahf
sbb
fdivp
inc
fiadds
jns
lods
into
or
out
cld
or
xchg
int3
clc
mov
cmc
sarb
jle
int
cmp
lcall
mov
jecxz
and
push
lcall
dec
imul
sbb
sbb
dec
in
add
popa
jo
push
cld
mov
sar
push
jecxz
add
sbb
dec
ljmp
pop
outsl
rdtsc
cmp
pop
nop
xchg
out
pop
mov
adc
movsb
sub
mov
popa
and
stos
ret
inc
adc
lock
xor
stc
test
ds
out
outsl
in
repz
fldenv
pusha
mov
adc
mov
mov
cmpsl
inc
andl
iret
pop
add
sti
gs
loope
dec
loopne
ja
and
xor
and
pop
out
sub
addr16
add
loope
cmp
fldcw
movsb
mov
in
sbb
clc
sbb
lds
frstor
lods
roll
bound
pop
iret
push
les
jb
scas
outsl
pop
lret
mov
nopl
push
ret
cmpsb
pop
mov
inc
and
adc
testl
pusha
pop
loopne
sub
cltd
push
rcr
nop
popl
xorb
shll
lods
push
jae
stos
imul
test
jns
dec
adc
fcomip
out
xor
inc
ja
cld
sub
insl
and
aam
pushf
or
addr16
sbb
ss
xchg
sub
sbb
orb
enter
sub
sub
pop
movsb
and
xchg
cmpsl
jns
ja
mov
pop
jb
sub
jmp
gs
mov
jg
jno
and
lea
pop
stc
add
and
push
mov
insl
xor
daa
lcall
push
jg
out
div
mov
sbb
inc
bound
and
addr16
ljmp
fcmovnu
adc
fisubs
fcomi
xchg
cmc
xchg
inc
and
cmpb
mov
cs
mov
jl
xchg
jle
mov
imul
cmp
lcall
ds
mov
std
inc
xor
mov
mov
jb
rcrb
push
arpl
push
dec
push
xchg
jnp
push
xchg
jle
push
out
jmp
xchg
hlt
sub
inc
mov
pop
aad
xor
adc
push
sbb
xchg
rcrb
push
adc
lret
mov
ret
cmp
ljmp
sub
sub
sbbl
add
xchg
sti
loope
ds
cmp
lea
iret
arpl
into
negb
outsl
cmpsl
orl
pop
aaa
xlat
ljmp
cmp
mov
insl
aam
test
adc
cmp
or
aas
insb
lret
mov
and
mov
aas
test
ret
test
xchg
mov
scas
inc
add
and
in
mov
mov
mov
or
test
and
pop
les
push
outsl
add
jnp
lcall
mov
sub
jmp
xor
lret
pop
sbbb
mov
test
pop
test
lock
xchg
mov
sbb
cmpsl
outsl
xor
cmpsl
mov
jl
enter
mov
mov
mov
decb
jno
cmp
iret
pop
lock
mov
loop
push
fsts
aam
aaa
loopne
popf
or
add
bound
fdivs
ror
push
ljmp
arpl
lods
dec
push
inc
mov
xor
in
mov
mov
test
test
dec
push
aaa
pusha
repnz
add
sub
icebp
ds
xor
jge
and
push
imull
lcall
push
cld
cmpsb
or
pusha
test
lock
dec
das
pushf
dec
addr16
lahf
xor
sub
arpl
lret
lret
push
xor
int3
test
pushf
jle
cwtl
scas
xor
pop
ret
mov
jnp
roll
push
jo
pop
xor
aas
cs
loopne
sub
aam
jle
leave
push
jno
sbb
test
and
cmpsl
jb
in
jg
enter
call
add
out
aas
jge
and
dec
cmp
inc
sub
les
mov
mov
sbb
inc
pop
std
in
add
cli
push
add
jg
mov
adc
ss
fsubs
jl
orl
dec
push
sub
lds
das
sbb
cmc
xchg
and
add
in
lods
sti
adc
jno
lock
mov
pop
sahf
adc
pushf
mov
cmp
push
add
decb
mov
hlt
adc
adc
push
add
popf
daa
mov
or
into
jp
sbb
call
shl
gs
aas
mov
fmull
cmp
dec
pop
push
push
xchg
push
and
push
test
incb
mov
mov
or
ljmp
xchg
jmp
stc
jnp
fildl
rorl
sbb
jge
loopne
pop
pusha
mov
inc
xchg
fcoms
cmp
sub
adc
repz
dec
add
bound
nop
xchg
imul
sarl
gs
pop
outsl
adc
cmp
enter
and
jl
mov
ror
dec
and
xor
inc
test
jb
jae
mov
sub
cmp
xchg
jae
rorl
inc
mov
adc
pusha
pop
js
in
jnp
pop
mov
shlb
add
add
bound
or
and
xchg
cmpsb
aam
clc
cltd
xchg
inc
outsb
inc
mov
mov
sbb
sti
loop
sub
fisubrs
cmpsb
jno
mov
fs
int
es
xlat
shlb
scas
in
xor
fnstenv
inc
fnstcw
inc
es
fidivrs
lock
push
ja
and
mov
inc
pop
adc
add
pop
leave
mov
aam
mov
jae
inc
ljmp
add
jle
xchg
lea
pop
add
jp
into
ret
add
xchg
arpl
mov
es
dec
sbb
gs
push
sub
in
add
push
xor
imul
sti
mov
das
daa
cmpb
outsl
xor
out
sub
dec
or
das
negl
push
push
xchg
shl
and
sbb
ds
mov
jns
scas
mov
stos
aam
stos
and
int3
je
shll
inc
xor
mov
aas
pop
shlb
aad
ret
or
xor
andl
incl
or
mov
mov
add
sub
pop
int
inc
insl
je
sahf
jns
pop
sub
or
mov
add
jl
xor
popa
ffree
mov
rolb
xor
mov
push
cmp
jge
xlat
mov
xchg
lahf
push
cld
lret
xchg
insl
pop
pushf
mov
inc
cld
in
pushf
outsl
pop
pop
or
jne
sub
fnstsw
jle
int
std
icebp
pop
je
ud0
pop
jae
xor
in
leave
pop
divb
loopne
jb
sbb
and
sub
sbbb
pop
pop
xor
cmpxchg
xchg
mov
iret
push
cmp
cmp
icebp
xor
loope
cmpl
jecxz
mov
jne
lock
sbb
cltd
scas
inc
inc
aaa
mov
or
pop
ljmp
xor
pop
int
and
dec
fdivrl
inc
xchg
add
aas
lcall
scas
dec
sbb
call
xchg
xor
rorl
in
imul
lcall
pop
pusha
scas
aaa
dec
loopne
shll
insb
dec
dec
std
and
or
and
jle
pushf
stc
lock
lds
push
cmp
aad
je
pop
cmp
shrb
roll
in
jmp
out
pop
sbb
adc
aas
jp
adc
fists
data16
xor
cmp
inc
add
push
mov
inc
jb
mov
push
mov
mov
push
cmp
cwtl
cli
das
push
xchg
ds
xlat
shlb
jbe
fldcw
in
push
sub
sti
jns
std
aaa
pop
outsl
inc
mov
mov
add
mov
dec
xor
cmpb
sbbl
negb
or
addb
jns
or
loop
fimull
push
xchg
dec
fwait
sub
cmp
sbb
and
mov
insl
sbb
sbb
lea
mov
xchg
cmp
loopne
sbb
and
mov
test
mov
xchg
xchg
test
cmp
or
rolb
inc
rorl
sub
in
push
sarb
dec
add
or
gs
and
shlb
xchg
lahf
out
jb
pop
pusha
sbb
push
xlat
shl
xchg
leave
inc
stc
sarb
xor
pop
cmp
and
neg
inc
add
mov
jne
mov
aaa
stos
sbb
mov
int3
js
aam
lret
mov
and
or
mov
fs
ja
aad
jl
cmp
loopne
call
xor
movsl
xchg
push
fcompl
test
mov
ss
movb
negb
pop
ror
rcrl
in
xor
sti
inc
imulb
add
test
mov
stc
fisubrl
pushl
jbe
jecxz
dec
sbb
adc
xchg
rol
cld
push
sub
dec
jl
js
and
add
jmp
into
sub
cmp
sbb
pop
jnp
es
jg
insb
ret
adc
and
popf
push
mov
mov
mov
push
lahf
sub
and
das
filds
and
movsb
add
insl
xor
adc
fmull
addb
adc
ret
es
mov
mov
mov
out
dec
or
lods
push
or
xchg
jl,pt
xor
enter
data16
xlat
scas
sbb
movsl
lods
or
addb
aam
mov
add
js
xchg
pop
sbb
add
adc
lahf
ljmp
adc
mov
and
iret
mov
sbb
add
mov
and
add
and
cld
mov
jo
addr16
mov
and
shll
adc
lret
aas
pop
dec
popf
push
xchg
jne
adc
adc
xchg
and
aaa
inc
jnp
mov
mov
mov
hlt
daa
ds
sahf
sub
repnz
pop
and
xchg
xchg
push
lret
stc
movsl
or
shll
xchg
mov
adc
and
stc
or
fwait
mov
or
jno
and
fstpl
and
mov
divb
mov
fs
jmp
mov
outsb
ljmp
pop
cmp
xchg
lock
je
pop
call
sub
dec
and
inc
sahf
xlat
int
ret
das
xchg
lds
mov
dec
cld
pop
inc
or
pushf
stos
add
add
clc
jmp
fnstenv
xor
sbb
movb
cmpsl
sub
jge
dec
xchg
push
push
in
mov
out
push
inc
loop
outsl
insb
xchg
insl
pop
jg
dec
ja
push
lods
ds
push
loopne
push
xchg
insl
lods
vpmacsdql
pop
dec
or
test
stos
daa
xchg
into
ficompl
jle
aam
dec
pop
jno
stos
cwtl
lahf
sub
push
inc
cmp
inc
xchg
cmp
jae
jne
adcl
sbb
dec
and
fxch
pop
in
jae
jl
pop
add
cmpsl
mov
push
jbe
sub
scas
cmp
jmp
cmp
mov
push
out
adc
push
mulb
push
loopne
aad
adc
xchg
jae
cmp
cld
orl
mov
enter
xchg
sub
fldt
and
mov
lret
lock
dec
test
mov
repnz
mov
add
es
and
lret
aas
xor
std
fwait
and
fnsave
popf
mov
loopne
pushf
jno
or
pusha
scas
int
push
pop
mov
loop
sahf
cmpsl
xchg
xchg
jmp
mov
enter
out
test
rcl
outsb
jg
mov
cmp
call
add
mov
pop
movsb
hlt
dec
push
push
dec
inc
movsl
fsub
jle
xor
xchg
subl
rorl
in
shl
repz
xor
inc
sbb
repnz
pop
and
inc
stc
mov
xchg
sti
call
jg
sahf
enter
icebp
pop
xchg
adc
mov
ds
icebp
and
mov
jb
shl
popa
push
mov
in
sarb
sbb
dec
testb
xlat
pop
push
lret
outsl
jecxz
testb
sahf
fstl
faddl
mov
nop
cmpl
jbe
sub
aas
insl
fistpll
popa
mov
ds
pop
fcomip
xchg
xchg
mov
mov
stos
lock
icebp
jl
cmp
xor
movsl
in
mov
cwtl
clc
mov
les
movsb
in
jg
xchg
jmp
imul
xor
test
mov
aaa
jnp
leave
std
and
mov
lock
xchg
dec
mov
cs
pop
popf
cmp
lea
mov
out
xchg
int3
cmp
popf
xchg
mov
pop
and
inc
jbe
pop
repz
mov
out
ret
leave
mov
mov
leave
shll
inc
and
mov
ss
xchg
lret
orb
cmc
lahf
leave
in
scas
stos
leave
adc
shlb
fimuls
add
sub
xor
xchg
push
xor
aaa
out
mov
movsb
cmp
pop
push
aam
das
xor
mov
in
cltd
sbb
xchg
pop
pop
dec
xor
and
lods
outsb
clc
sub
ficoms
cmp
push
sub
jp
icebp
push
sub
xor
cli
mov
add
fneni(8087
xchg
in
mov
addb
ds
mov
sub
mov
add
or
popf
iret
push
jle
mov
ret
xchg
add
shll
popf
aad
lods
loop
pop
clc
dec
lcall
aam
push
xchg
mov
sbbl
jl
mov
xchg
int3
xchg
cmp
xchg
xchg
in
lret
inc
inc
xor
arpl
out
mov
cmpsb
add
popl
aad
inc
or
pop
fldt
aaa
fisubl
stc
pop
sbb
dec
dec
iret
dec
cld
and
ja
dec
sub
leave
cs
aam
pop
mov
xchg
jae
jmp
mov
or
pusha
mov
icebp
jl,pn
ja
stos
inc
xchg
mov
mov
jge
mov
mov
sub
xchg
std
fidivrs
push
pusha
xor
mov
add
sub
cs
sti
mov
and
ror
push
sar
and
or
xorl
sbb
bound
js
cltd
add
lcall
mov
cmp
cwtl
clc
inc
inc
out
cmpsb
stos
or
inc
idiv
call
fwait
lods
jp
icebp
xor
std
pusha
add
mov
popa
sub
mov
add
fcom
mov
xchg
rclb
daa
sub
xor
mov
shll
sbb
mov
imul
lea
xchg
test
leave
in
shlb
or
cmp
out
imul
imul
push
push
xor
lcall
fsubp
fidivrs
mov
inc
add
mov
adc
mov
shrl
rcr
ret
push
in
or
movsb
xchg
enter
je
repnz
call
mov
cmpsl
pop
xchg
shll
repz
cmc
aam
push
fistpl
cmp
ss
pop
ljmp
mov
mov
xor
aam
movsb
idivl
cltd
fnstenv
xchg
pop
mov
xor
adc
fdivl
loopne
cmp
xchg
and
adc
jbe
or
pop
sbbl
stos
lret
je
push
lret
fistps
xchg
lret
cs
lret
mov
jl
mov
out
sar
dec
jne
or
push
xor
lcall
sbb
push
decb
dec
je
mov
scas
adc
mov
cmp
iret
mov
adcl
mov
push
mov
xchg
jo
xchg
das
rcl
mov
lods
inc
gs
das
add
pop
lret
mov
mov
fildll
out
rcll
jbe
mov
pushf
xchg
or
idiv
out
popf
scas
mov
in
jo
and
sti
ffreep
insl
cmpsl
mov
out
and
fisttps
xchg
fs
repnz
xchg
fnclex
jmp
mov
shrl
lock
loope
dec
test
pop
shll
les
add
in
int
test
add
je
mov
fsubrp
stos
mov
cmp
push
movsl
in
pusha
ds
add
sbb
or
iret
lret
cltd
enter
leave
xchg
outsl
sub
mov
lahf
insl
call
pop
xchg
jge
dec
pop
xchg
aad
inc
bound
mov
dec
pop
mov
mov
hlt
mov
imul
sbbb
mov
sti
mov
mov
jge
in
jo
dec
je
mov
pop
inc
dec
mov
lods
imul
std
pop
daa
jne
fdivrs
loopne
jnp
scas
xchg
jl
mov
aad
in
repz
pop
out
je
jae
cmpsb
jo
and
jne
repz
mov
xchg
inc
jle
mov
out
cli
inc
int
sar
movl
insl
repz
rcrb
movsl
inc
mov
test
in
or
and
and
icebp
sub
inc
shl
mov
mov
loop
mov
add
push
cmp
das
into
test
mov
in
jns
dec
fidivrl
or
cld
add
dec
adc
push
mov
repz
out
loop
out
xchg
xchg
sub
nop
sbb
sub
pop
xchg
rolb
int
popf
insl
add
xor
outsl
xor
subl
push
push
int3
mov
popa
fnsave
cli
jecxz
push
leave
sub
ret
jnp
cmp
push
or
add
aas
mov
push
mov
cmp
mov
inc
adc
add
push
call
cld
sub
add
pop
scas
mov
fs
mov
cmp
adc
add
dec
cmpsl
adc
dec
or
or
pop
push
subb
push
neg
mov
add
jno
pushf
add
insb
ss
aas
scas
mov
xorb
shrb
xchg
es
cmp
test
inc
dec
mov
fwait
xor
pop
sahf
pop
daa
push
xor
jnp
push
into
rolb
sub
adc
inc
filds
jae
dec
mov
xchg
sub
jnp
ret
pop
imul
mov
repnz
mov
jne
push
push
mov
pop
int
movsb
popl
jbe
repz
cmp
add
callw
fnsave
shl
sub
in
jle
les
pop
scas
push
sub
mov
adc
bound
fs
ret
aas
std
ret
inc
jl
add
add
inc
xor
stos
ljmp
nop
popf
sti
push
out
mov
adc
push
mov
add
adc
sbb
push
sbb
and
stc
fsubrp
mov
pop
loopne
xlat
inc
cltd
pushl
mov
mull
add
inc
shll
imul
ds
xor
imul
mov
cmp
cmp
xor
aaa
dec
repz
push
test
add
mov
str
aad
inc
xlat
sub
clc
sub
lock
fisubrl
pop
out
in
xorb
addb
jecxz
add
add
push
cmp
aaa
pop
inc
lcall
inc
rcrb
cltd
push
pop
add
cs
lds
jge
jno
xor
cmpb
js
mov
imul
xor
inc
cltd
imul
scas
jmp
ret
out
adc
cmp
xchg
subl
loope
mov
ljmp
push
jle
js
clc
das
les
insl
mov
lret
lcall
imul
popf
lods
pop
jb
out
icebp
mov
cmp
push
in
pushf
stos
push
lods
les
nop
pop
sbb
arpl
add
lcall
push
push
xlat
call
outsl
pop
inc
mov
pop
mov
movsb
stc
test
adc
pop
add
sbb
scas
out
out
lcall
mov
movsl
mov
jp
and
int
push
or
jbe
xlat
dec
lret
lret
xor
xchg
lret
aas
xor
lcall
inc
cli
outsl
xor
sarl
inc
shll
inc
lret
into
push
push
mov
sbb
sahf
rolb
push
jp
inc
or
dec
adc
cmpb
mov
adc
icebp
les
lret
lds
imul
jp
add
hlt
cmp
xchg
and
arpl
inc
jmp
test
add
ds
xor
hlt
lret
fisubrs
xor
dec
rorl
sub
in
imul
pop
push
and
inc
cmp
fists
ss
mov
or
cmpsl
enter
clc
or
cmp
sbb
mov
pop
mov
lahf
pop
mov
ret
inc
loope
cmp
pusha
pop
pop
mov
or
jecxz
push
jecxz
push
test
sbbb
cmpsl
leave
sub
leave
mov
and
jle
mov
inc
out
das
inc
sbb
jbe
mov
call
ljmp
cmp
push
mov
pop
pop
dec
mov
add
cli
js
shll
idivb
ror
in
adc
nop
cli
popf
iret
repz
in
mov
inc
push
add
xor
or
sbb
jg
stc
popa
daa
add
lods
push
xchg
outsb
cmp
or
clc
cli
push
add
cltd
lods
aam
loopne
inc
test
xor
and
andl
ficompl
movsb
aam
fistpl
ss
scas
mov
or
ret
sbbl
inc
outsb
jp
cmp
adc
fmull
xchg
cmpsl
mov
out
jmp
imul
pop
daa
dec
sbbb
aad
cmc
in
xor
add
sbb
xor
pop
inc
scas
movsl
mov
xor
aaa
orb
out
add
out
repz
popf
cmp
fcoms
data16
mov
fs
das
aas
pushf
insl
sbb
shll
add
int3
pushf
sbb
or
mov
mov
addl
lods
lds
stos
sub
cs
gs
adc
push
test
add
xchg
enter
movsb
pop
mov
cmc
int
xchg
movsb
loope
adc
pop
loop
ss
sbb
sub
inc
cmpsl
in
gs
inc
pop
div
stos
rclb
mov
sub
arpl
in
add
int
and
xchg
cmp
jno
jg
pop
stc
adc
int3
add
jge
lock
iret
aam
movsb
lods
add
sub
xor
mov
push
cwtl
sub
rcr
jb
test
sbb
push
bnd
and
inc
popw
dec
addb
and
adc
fs
cmpsl
jmp
stos
fcompl
and
inc
jne
stc
shrb
push
stc
pop
jno
mov
test
sbb
mov
mov
mov
sbb
inc
add
loope
cmp
xchg
jae
imul
fisttpll
out
jnp
jo
sbb
push
mov
ds
jb
pop
test
ljmp
jl
nop
jne
lret
scas
adc
or
add
jns
sbb
inc
popf
inc
cmp
sub
mov
mov
adc
rclb
xor
jne
cmpsl
lret
nop
or
sti
lcall
lret
xlat
repz
xchg
mov
and
pop
add
les
mov
and
jmp
adc
xor
mov
aaa
sbb
jne
pop
bound
jmp
out
neg
imul
jno
imul
cmpsl
xchg
shll
sbb
mov
dec
outsl
dec
add
test
jno
in
aam
ret
ja
into
add
fdivrs
loope
cmpsl
mov
mov
and
clc
push
dec
sub
jno
push
shrb
cld
push
cwtl
scas
push
push
push
dec
pop
insl
je
dec
out
ret
incl
ret
bound
test
sbb
push
mov
mov
xlat
and
jp
imul
add
mov
cmp
ja
cmpsb
fdiv
mov
xor
shr
mulb
push
mov
mov
test
xchg
cmpsb
scas
adc
mov
push
adc
std
in
scas
and
pop
xor
fdivs
andb
ror
incb
test
jecxz
xchg
adc
addr16
fstps
jp
mov
test
dec
int3
dec
dec
into
pop
sub
iret
add
push
sub
sub
test
and
dec
fnsave
sbb
inc
lock
mov
mov
loop
mulb
das
lods
jne
jp
pop
mov
push
adc
test
sub
in
mov
int3
inc
adc
bound
mov
adc
loop
in
movsb
lods
push
neg
aaa
pop
lods
dec
lret
negl
and
sbb
pop
pop
popa
std
fldcw
mov
int3
in
wrmsr
fwait
push
inc
cmc
cmpsb
nop
sub
push
es
inc
dec
ds
jl
notb
orl
mov
and
repz
fsubrl
outsb
out
push
mov
adc
push
xor
dec
arpl
pusha
lahf
or
jne
in
mov
jno
loopne
nop
sub
pop
into
cmp
frstor
mov
out
adc
lret
dec
sbb
dec
cwtl
xchg
push
xlat
xlat
lahf
mov
add
test
adc
cwtl
jbe
sub
les
in
dec
jg
sbb
pop
mov
push
in
and
sbbb
les
mov
sub
mov
adc
jge
adc
mov
pushf
inc
imul
inc
push
mov
lret
and
jnp
mov
imul
fcmovne
pop
push
jbe
aaa
cmpsb
add
popf
mov
dec
mov
out
fistl
sub
int
push
mov
shlb
jmp
call
mov
movsb
test
mov
xor
ljmp
mov
xchg
adc
and
loope
gs
testb
nop
jnp
je
lods
xchg
xchg
repnz
pushf
movsl
fsubl
or
cld
push
lods
int3
xchg
mov
aaa
push
ret
je
inc
or
sub
mov
mov
inc
inc
xchg
jb
in
cmp
cmpsb
inc
jmp
cmc
test
dec
jg
xchg
call
and
fdivrl
rorl
in
imul
cmp
pop
mov
jo
mov
shl
sub
in
sub
or
inc
push
lahf
mov
xorb
cmpsl
push
in
xor
sub
or
dec
mov
jecxz
pop
cltd
xor
fldenv
sti
insl
push
mov
sti
add
movsl
and
aaa
jp
lahf
xchg
or
cmp
lss
aad
cltd
mov
push
jl
inc
pop
sbb
stc
lea
pop
aam
test
addr16
add
sub
lcall
je
sbb
pop
xchg
mov
sbb
sub
add
mov
das
add
xor
adc
inc
xor
or
cmp
xor
inc
and
ljmp
add
push
out
leave
inc
cmp
jge
push
or
lahf
test
cmpsw
and
stos
dec
movsl
push
xor
and
pop
stc
movsb
pop
or
cmp
fldl
jl
cmp
sub
mov
adc
les
dec
leave
dec
dec
add
adc
ret
fistpll
pop
fstpt
ds
imul
add
jmp
adc
decb
fwait
push
xor
into
aas
mov
pop
jp
and
mov
stos
mov
sub
xchg
and
pop
push
cmpsb
and
jecxz
pmulhuw
out
inc
mov
in
mov
mov
jne
aas
mov
dec
inc
cs
cmc
push
xlat
sub
and
adc
mov
add
xchg
lea
and
out
cltd
movsb
js
or
adc
or
fildl
out
jg
das
stos
aad
mov
in
mov
sbb
push
push
and
push
addb
cmp
sub
testl
pop
jg
sub
ljmp
aam
es
adc
ljmp
mov
aas
mov
sbb
jo
xchg
cwtl
dec
sarb
sbb
rclb
scas
cmp
andb
idivb
push
mov
dec
add
push
xchg
jns
sti
push
inc
mov
inc
and
aaa
mov
fbld
sub
and
test
shl
sbb
and
sbb
mov
add
mov
xchg
sti
jnp
and
movsb
sub
fcomps
lcall
push
dec
xchg
jmp
rcll
or
and
ds
sub
cmp
cwtl
mov
sub
pop
adc
xchg
repnz
addl
in
les
data16
dec
mov
es
sahf
stos
or
xor
sub
int3
popf
or
in
cmpsb
daa
pop
adc
lret
dec
or
dec
inc
cmp
jmp
fadds
jb
jmp
dec
adc
pop
or
push
xlat
jl
inc
and
jae
sbb
add
push
daa
cli
stc
mov
faddl
int3
cmp
lahf
jnp
mov
lock
shll
les
add
das
or
and
lahf
aam
jae
pusha
aad
cld
test
inc
and
arpl
popf
inc
lods
imul
mov
mov
and
xchg
mov
js
mov
pop
or
dec
push
stc
or
xchg
sub
fs
xchg
push
pop
mov
notl
inc
mov
pushl
ss
push
daa
sub
mov
inc
pop
push
adc
cmpsl
sub
movsb
lahf
popa
dec
stos
call
aaa
and
and
xor
dec
push
outsl
sub
push
sarb
aad
and
shll
mov
push
mov
hlt
je
fidivl
insb
scas
scas
jno
int3
jns
cwtl
jl
pop
push
xchg
xchg
push
inc
xchg
gs
sub
xchg
dec
mov
push
push
pop
jmp
movsb
pop
cmp
or
insl
cmp
dec
xchg
jbe
insb
and
cmpsl
ret
bound
test
jp
or
mov
jmp
mov
and
iret
jmp
cmp
rclb
jb
cmp
lret
fs
lods
mov
sti
push
push
into
cltd
ret
mov
add
test
jb
sub
lea
cwtl
inc
lahf
mov
loope
fsubrs
sbb
ja
ds
and
mov
and
mov
pusha
arpl
push
add
jg
mov
fs
jnp
push
mov
bnd
mov
lods
fsts
aam
test
outsl
dec
jmp
ficompl
inc
les
shlb
jge
inc
add
cmp
and
dec
int3
sub
pop
cmp
mov
stos
stos
pop
or
pop
sbb
out
pop
add
into
fs
sbb
lahf
push
mov
pushf
add
pusha
cwtl
add
or
lret
int3
xlat
stc
push
lret
add
xchg
pop
lods
test
roll
fdiv
adc
pushf
inc
jns
dec
adc
xor
cmp
mov
hlt
hlt
mov
out
xor
stos
inc
fistps
aaa
cmp
or
cmp
push
cli
push
jge
jno
daa
mov
daa
sahf
cli
push
inc
dec
pop
dec
sub
bound
and
ficoms
mov
jge
data16
aas
sbb
and
lods
xor
cwtl
pop
lret
aaa
mov
cmpsl
scas
mov
mov
dec
ret
test
jmp
mov
hlt
jecxz
jmp
or
rclb
pop
mov
sub
mov
dec
addr16
out
popf
clc
jae
mov
xor
adc
nop
in
loopne
inc
jmp
scas
xchg
inc
jmp
xchg
scas
movsl
mov
pop
xlat
adc
out
cltd
pop
mov
add
out
cli
push
fs
loopne
in
mov
mov
std
pop
mov
adc
mov
mov
pop
std
add
or
jge
xor
sbb
jp
fwait
insb
mov
fisttps
sar
scas
js
sahf
xchg
xor
mov
xor
and
in
stos
and
je
inc
xchg
sub
sbb
or
ds
sbb
xor
mov
mov
and
mov
icebp
mov
push
and
push
cwtl
and
out
int
adc
add
ret
loopne
imul
inc
test
push
jl
pop
cmp
lods
shll
lahf
gs
pop
andb
add
adc
adc
call
fcmovnu
mov
push
jb
mov
xor
adc
xlat
es
dec
sbb
or
fists
cmp
icebp
sbb
rcrl
mov
iret
mov
push
loop
idivb
addb
xchg
fdivrp
insl
push
or
icebp
jb
mov
lock
testb
push
out
fisttps
pusha
dec
xor
scas
cs
fnstcw
jecxz
sub
hlt
int3
inc
or
dec
push
push
dec
rcll
fldl
nop
in
lret
sbb
and
push
nop
jmp
shrl
dec
insb
test
mov
in
mov
loopne
adc
mov
jb
cmpsl
push
xchg
mov
incl
mov
xlat
push
pop
cmp
mov
mov
cmp
aas
push
lret
xor
cmpb
jle
adc
and
xor
negl
and
pop
or
enter
scas
or
fisubrs
ret
es
sub
sti
in
sbb
sub
popl
les
test
in
xchg
add
sbb
repnz
adc
cmpsl
xor
popf
cld
pop
jne
cmp
cmp
sbb
and
out
cmp
xchg
aaa
pop
sbb
cli
sbb
sahf
sti
ds
mov
xchg
push
aaa
dec
xor
pusha
loop
loope
or
xchg
jmp
in
sub
mov
xor
sar
into
stos
addr16
push
sub
push
xchg
sbbb
daa
adc
mov
sub
mov
push
mov
xor
sub
xchg
insb
cld
movsb
lods
or
jo
jge
cmp
dec
sbb
test
add
adc
in
or
mov
sub
and
imul
ljmp
inc
psubq
push
push
ds
out
mov
pushf
xchg
stos
push
mov
or
test
cld
jmp
iret
xchg
dec
stos
dec
xchg
mov
push
sbb
jg
sbbl
orb
mov
jmp
rclb
mov
cld
ds
mov
dec
mov
push
aam
jo
mov
ljmp
addl
jecxz
jle
jge
mov
das
scas
mov
pop
in
xchg
xchg
jecxz
cmp
in
aam
or
lret
push
incb
and
rorb
iret
jle
stos
pop
in
pop
mov
daa
mov
pop
std
leave
cmp
aaa
imul
arpl
aas
add
jl
adcb
ja
cmp
mov
js
fildll
pop
shlb
sub
mov
push
incb
mov
pop
mov
ja
das
cmpsb
cs
push
mov
adc
cmp
adc
push
mov
push
adcl
sti
xchg
cwtl
pop
sbbb
dec
ljmp
ljmp
adc
nop
push
sbbl
mov
lea
jmp
or
jbe
push
shr
divl
ffreep
repz
push
xchg
ret
mov
cmpsl
sti
ret
fmul
fdivl
idivl
push
mov
int3
jo
icebp
mov
cli
cmc
cmp
and
fdivrs
shlb
fs
mov
lods
aam
mov
cmpb
mov
addr16
std
inc
fsts
mov
push
pop
or
mov
cmc
cmp
push
jae
comiss
pop
xchg
mov
and
std
xor
xor
xchg
xchg
incb
out
or
incb
mov
cltd
push
push
clc
gs
push
cld
in
xor
and
imul
clc
imul
push
cmp
xor
cld
push
mov
fdivs
cli
sbb
jp
jno
xchg
dec
scas
or
xchg
fwait
mov
rorl
and
sti
and
jne
sbb
push
jmp
or
inc
cld
std
inc
xor
lcall
pop
jl
es
and
xorb
aas
out
lds
cmpsl
movsl
push
test
loop
sbb
jo
adcb
push
xchg
lret
imul
push
cmp
lock
mov
sti
aaa
test
pop
testl
inc
lcall
out
xor
ss
leave
fcoml
mov
jb
stos
cmp
mov
mov
cmc
mov
mov
push
xor
cwtl
out
xchg
inc
xor
xchg
xchg
jmp
call
cmp
sub
ja
into
push
cld
add
sbbb
xor
adc
mov
test
ret
push
inc
add
loopne
je
addr16
push
xchg
xchg
loopne
cmp
push
xchg
aas
lock
and
xchg
sub
invd
add
cwtl
hlt
mull
push
stos
mov
mov
dec
or
push
fstpl
ret
ss
and
enter
test
popf
push
or
jo
insl
scas
xchg
pop
pushf
adc
inc
xchg
xchg
fucomip
daa
xor
inc
lds
jmp
in
repnz
out
or
and
inc
jg
and
std
mov
mov
cli
subb
test
add
cltd
xorb
add
xor
cmpb
mov
and
cmpsb
daa
out
call
jno
push
push
mov
fcomps
pop
lock
pop
cmp
mov
xchg
insl
xchg
aaa
lea
leave
add
or
fdivrl
out
xor
jno
insb
push
ror
scas
jg
and
push
nop
rcll
xor
sub
xorb
dec
inc
or
and
fisubs
push
mov
cmp
jmp
lds
push
xor
mov
dec
add
dec
xchg
xor
jo
and
xor
sub
test
addr16
dec
adc
xlat
insl
iret
jnp
lahf
or
test
inc
add
stc
sbb
adc
shr
arpl
pop
pop
xchg
jnp
push
cli
mov
pop
dec
jnp
mov
fldt
gs
jo
pop
push
push
gs
cltd
push
out
mov
inc
ret
sti
mull
xlat
pushf
push
stc
push
insb
mov
test
pop
sbb
or
mov
dec
cld
jge
dec
ja
mov
push
jnp
lcall
repnz
jo
les
lds
xor
inc
sahf
outsl
jge
jns
xchg
lds
movsb
jns
mov
dec
pusha
in
aad
adc
fwait
insb
and
js
mov
loope
lods
mov
aaa
mov
push
std
aas
xor
fs
cltd
out
cmp
jle
and
pushf
sbb
or
and
lea
je
xchg
inc
cmp
pop
gs
test
cmpsl
loop
aad
lock
out
bound
aam
add
mov
cld
mov
aas
mov
sub
or
cmp
popf
xor
xchg
daa
and
std
or
les
xchg
ret
in
sbbb
mov
inc
lret
dec
mov
inc
fucomp
xchg
enter
pushf
inc
loope
arpl
pop
inc
scas
sub
jp
cmp
in
inc
add
add
sti
lock
push
ror
dec
sub
or
sub
xchg
xor
add
fstpl
jbe
xchg
push
sbb
nop
mov
and
push
insl
jns
sub
jae
sbb
or
cmp
rorb
xchg
inc
mov
inc
mov
jge
jg
or
xchg
xor
push
inc
fmuls
jle
mov
mov
cmc
push
push
pop
add
dec
mov
push
mov
add
aaa
pop
inc
cld
mov
mov
jno
int
pop
mov
sbb
repnz
mov
push
ljmp
test
por
daa
nop
jb
in
jbe
pop
mov
in
cmpsb
xchg
mov
cmc
bnd
stos
xchg
insb
fcmovne
xor
sbb
lea
inc
push
sbb
call
aad
xchg
push
jbe
das
sbb
ret
and
es
xor
mov
or
dec
ja
push
lock
hlt
add
pop
je
pop
dec
ja
iret
or
dec
mov
fxch
sub
mov
xchg
jmp
xor
push
mov
pop
mov
dec
xlat
add
addr16
fisubrl
nop
movsl
jbe
lret
mov
ss
aam
add
scas
int3
sub
mov
jns
in
inc
ja
or
jns
add
ret
adc
addl
mov
pop
inc
mov
shrl
sbb
jg
call
ret
sti
xchg
rorb
sbb
jae
jns
data16
jae
xchg
shrb
je
mov
les
enter
push
adc
testb
fcomps
je
mov
adc
daa
cwtl
adcl
adc
mov
sahf
loop
repz
movsb
jae
mov
push
sub
je
je
std
mov
mov
lret
adc
dec
jne
stos
xor
ret
aam
stos
mov
pop
pop
xchg
ss
icebp
inc
in
sbb
or
mov
cltd
shlb
inc
sahf
jecxz
pusha
push
ljmp
test
fcomps
jmp
lods
ja
imul
mov
pop
xchg
mov
cmp
mov
inc
adc
xchg
xor
mov
mov
fsubrl
cwtl
inc
ficoml
scas
addl
adc
scas
hlt
loopne
fidivs
mov
xchg
stos
imul
cld
inc
dec
fbld
cmp
sbb
ret
adcl
sub
pop
push
jnp
pop
adc
imul
out
int
pop
lahf
icebp
sbb
das
pop
jns
das
cmp
push
pop
imul
ljmp
sbb
dec
das
pushf
rcrl
xchg
daa
adc
iret
sarl
roll
movsb
test
xchg
and
xchg
push
imul
out
add
in
push
mov
cmpsb
pop
sbb
push
adc
add
insb
xchg
aas
sbb
pop
jle
inc
shl
adc
mov
jg
shl
inc
adc
outsb
js
mov
popf
xchg
lret
xchg
loopw
jno
les
cmp
dec
xor
push
mov
mov
pusha
fistpll
in
rcl
inc
xor
pop
cli
xchg
or
add
push
lcall
int
out
outsl
xchg
iret
cmpl
int3
decl
js
in
xor
out
mov
bound
mov
fcompl
push
sub
nop
adc
jae
aas
jno
sbb
or
mov
mov
hlt
rcrb
addr16
cwtl
scas
sbb
lret
mov
scas
jb
lods
push
mov
push
aad
sbb
add
and
or
loope
push
loopne
loopne
pop
cltd
rcll
sbb
pop
and
addr16
push
jp
lods
orb
and
les
cs
jae
add
pop
and
mov
and
lods
jnp
out
stc
push
sbb
mov
scas
jg
xchg
xchg
or
out
xchg
mov
int
repz
sub
rorl
int
mov
rorb
and
js
sub
enter
andl
testl
xchg
cmpb
insl
adc
inc
xor
push
xchg
jl
and
mov
adc
push
aaa
push
movsl
or
mov
mov
xor
push
je
repnz
push
push
mov
push
adc
pop
mov
jg
in
xchg
or
mov
dec
sbb
popf
sbb
pop
pop
outsb
or
test
or
xor
mov
or
jns
pop
fidivs
and
push
lret
xlat
das
jb
adc
add
iret
scas
pop
sub
add
sbb
or
mov
sarl
adc
push
dec
leave
ja
out
std
icebp
jmp
inc
or
sti
out
testl
in
cmc
jmp
fisttpl
jmp
xchg
mov
inc
dec
movsl
push
cmp
aam
clc
jae
inc
add
pop
mov
mov
insl
int
rcrl
pushf
aam
push
jne
daa
cmpsb
cmp
jmp
jmp
enter
mov
sti
sub
out
dec
mov
into
das
xor
and
pop
int
jecxz
movsb
adc
lret
sub
mov
loopne
xor
sti
jmp
dec
aas
lock
leave
fs
sbb
adc
dec
push
icebp
clc
loopne
sub
cltd
xchg
mov
fstps
sbb
int
sub
mov
cs
pop
cli
push
loop
jbe
mov
clc
pushf
jle
cmp
out
or
movsb
shlb
leave
push
mov
pop
hlt
xchg
push
mov
repz
inc
jecxz
xor
sub
mov
sbb
or
mov
movsb
imul
jne
cld
xchg
mov
and
aaa
mov
xchg
mov
js
push
movsb
enter
xchg
pop
fmul
out
push
popf
lret
adc
enter
shll
mov
insb
stc
mov
mov
pusha
dec
cmp
ja
ss
jecxz
dec
xchg
cli
in
dec
mov
pop
lea
ret
out
jae
divl
pop
pop
xchg
ss
dec
hlt
mov
mov
imul
mov
call
mov
pop
push
mov
or
std
xchg
int
int3
and
stc
sub
sub
jno
dec
inc
jl
dec
sbb
mov
mov
rcrl
mov
in
jo
jp
sub
ret
mov
jb
repnz
inc
dec
and
insb
push
mov
mov
adc
dec
clc
scas
pop
aas
dec
stc
aas
xor
rclb
lcall
dec
sub
xchg
dec
inc
das
pushf
push
out
int3
out
push
in
adcl
jb
aas
pop
inc
shll
sbb
mov
sbb
stos
sbb
bound
shll
xor
lret
test
arpl
xchg
add
jns
mov
cmpsl
insl
fnstenv
test
jmp
dec
aam
inc
jae
cmpsb
push
movsl
push
mov
adc
fsubl
and
std
ljmp
inc
or
aam
mov
inc
out
xor
add
push
out
add
cltd
or
lock
hlt
and
adc
push
in
cmp
xlat
xchg
cmp
mov
out
fisttpl
scas
mov
jecxz
adc
loopne
adc
lret
push
stc
scas
test
mov
xor
inc
loop
sbb
inc
rol
adcl
fdivl
sbb
cmp
insl
mov
aad
mov
out
and
mov
inc
scas
lods
push
into
xchg
stc
fs
mov
sbb
pop
sbb
adc
cld
imul
cmpsl
pop
lea
sbb
inc
shlb
dec
popf
and
xchg
arpl
clc
add
cmpsl
xchg
iret
push
inc
or
add
cli
inc
add
pop
inc
and
mov
rcrl
or
in
into
mov
pop
add
inc
pop
adc
ret
stos
xchg
inc
repnz
cmp
mov
push
lret
push
adc
xor
into
xchg
jbe
insl
jae
movsl
mov
xchg
bound
rclb
or
loope
enter
push
pop
xor
mov
push
mov
pop
cmp
sub
cmc
aam
xlat
ror
fcmovne
call
stc
rolb
rcr
mov
push
out
rcr
jbe
je
jp
jb
aas
lcall
idivl
ret
ret
int
cld
inc
jnp
sti
cmp
lahf
shll
xchg
imul
or
lds
xor
rolb
pop
jp
clc
pop
mov
jl
in
cmp
or
xchg
cmp
and
cmp
jl
shll
sbb
jb
clc
pop
dec
pop
adc
sahf
arpl
aam
fwait
lods
cli
nop
inc
adc
adc
lea
fldt
jl
push
loopne
aam
xchg
xchg
inc
out
cmp
push
es
mov
push
jbe
inc
outsl
arpl
and
movsb
inc
push
pop
mov
pop
cmp
sbb
dec
xor
xchg
aam
and
push
clc
sti
inc
cli
push
gs
sbb
subl
dec
or
inc
add
imul
shll
pop
push
test
mov
or
mov
jb
divl
jae
cmpsb
sbb
xlat
xor
insb
loop
call
inc
outsl
call
pop
inc
lock
int3
mov
test
or
call
pop
and
or
pop
lea
cmpsl
shlb
add
ljmp
lret
mov
jne
addr16
dec
mov
add
dec
or
lret
mov
icebp
cltd
adc
inc
adc
shrl
popf
shrl
stc
push
mov
cli
mov
adc
movsb
fsubs
mov
cmp
fnsave
into
das
enter
mov
adc
mov
and
stc
scas
push
cltd
or
ja
mov
test
jmp
pop
push
xchg
dec
loope
or
mov
cltd
das
push
out
push
aad
xor
addr16
outsb
pop
out
into
cmpsl
leave
in
fbld
out
scas
pop
or
and
stos
xchg
repz
rcll
push
sbb
or
repz
and
or
loop
mov
xchg
push
xor
fs
mov
xchg
out
mov
aad
sbb
fnsave
xor
or
dec
pop
nop
insb
xchg
adc
dec
test
js
push
xor
lock
jmp
inc
sbb
push
out
gs
add
loop
or
std
adc
pushf
shlb
push
sub
mov
cld
cmpsl
arpl
incl
and
jo
cmc
enter
add
pop
adcb
cwtl
lods
jae
lea
imul
repnz
adc
add
inc
arpl
adc
xchg
out
and
push
leave
scas
ljmp
mov
mov
das
test
dec
push
subl
dec
dec
mov
mov
sub
dec
loopne
mov
lret
pop
lret
movsl
jg
or
mov
ja
sub
mov
aaa
ljmp
mov
insl
hlt
in
push
daa
jnp
orl
jo
cmpsl
testl
and
lea
cmp
pop
xchg
das
push
or
mov
lret
dec
rol
xor
out
les
xor
mov
cmpsb
or
dec
mov
fcomip
xchg
lods
adc
xor
movsb
ja
jp
xchg
fimull
pop
xchg
sub
leave
dec
add
mov
push
lret
jns
icebp
mov
pushf
mov
mov
outsl
test
xchg
pop
stos
rorb
call
ret
dec
cmp
sbb
xor
push
cmpsl
inc
adc
xchg
mov
mov
jns
imul
repnz
add
or
push
out
and
js
loop
mov
movsb
push
ljmp
mov
mov
das
adc
std
jo
xor
into
pop
pop
hlt
jmp
mov
jbe
adc
mov
aam
adc
mov
leave
pop
pop
aaa
popa
stos
push
hlt
shll
jno
lods
insb
in
fcomps
push
aam
dec
clc
cmp
mov
mov
mov
stos
mov
aad
push
mov
cmp
and
pcmpgtb
lea
loopne
jle
in
cwtl
fs
mov
in
hlt
lods
xchg
xor
inc
sbb
ret
mulb
popa
sarb
repz
std
aas
pop
sbb
add
add
add
ficoml
adc
and
bound
mov
mov
cmpsb
movsl
clc
lret
add
out
lret
bnd
lcall
es
mov
xchg
jbe
inc
jbe
dec
cmp
pop
pop
fyl2x
add
call
add
mov
sbb
andb
fisubrl
clc
xor
cmc
mov
int3
out
cs
jo
inc
lods
pop
icebp
or
pusha
sbb
stos
in
lcall
incl
loop
in
or
in
and
test
call
dec
movsb
jle
vprotw
mov
clc
add
or
push
mov
aad
mov
ret
xor
ficoml
dec
js
xor
inc
repnz
inc
mov
dec
shll
popf
mov
cmp
push
mov
mov
dec
pop
nop
leave
sbb
xor
adc
xchg
pop
fs
inc
pop
or
sbb
pop
icebp
sub
mov
fists
clc
and
mov
dec
mov
inc
adc
jmp
pop
mov
repnz
pop
jle
push
jmp
and
scas
ja
fiadds
lahf
mov
movsb
lahf
imul
jbe
adc
test
cmp
mov
cmp
std
cs
cmpsb
mov
out
fsubs
and
push
sti
jo
sbb
lahf
cltd
ja
fwait
sbb
adc
jl
sub
lret
adc
dec
jo
inc
leave
fmuls
clc
shl
out
ficoml
or
push
pop
rol
call
cmp
jb
mov
cmp
rcll
dec
mov
push
fs
mov
jno
scas
cmp
lret
lods
lock
push
jbe
mov
mov
mov
and
cwtl
xchg
mov
test
aas
sbb
push
adc
jo,pn
sub
dec
sbb
out
or
dec
push
inc
add
scas
pop
sar
cmp
inc
jne
insl
xor
mov
xchg
and
push
jle
mov
inc
sub
hlt
sbb
and
mov
inc
push
jae
and
pushf
xor
outsl
sbb
jp
xlat
lds
mov
insl
mov
stos
sbb
inc
out
imul
sub
daa
adc
fwait
je,pt
std
pop
cmp
inc
inc
sarl
sub
xchg
movsb
popf
popa
dec
test
sbb
loopne
pop
cmp
jbe
dec
sbb
xchg
sets
call
push
sbb
add
sbb
sub
mov
loope
jl
push
pushl
xchg
inc
push
push
shr
fidivl
jmp
repz
into
push
jecxz
pop
sbbl
push
call
push
cs
in
inc
pop
aam
sub
inc
pushf
jo
rsqrtps
jmp
jmp
cltd
lcall
cmpsl
xchg
inc
pop
xor
pop
jb
mov
push
mov
sbb
scas
pop
lds
outsb
pop
mov
aad
sarb
je
call
mov
xor
mov
push
xchg
ljmp
scas
test
js
xchg
jnp
xchg
mov
stc
xchg
jb
push
in
adc
sahf
cld
pop
jae
and
sbb
loopne
pushf
xchg
icebp
scas
leave
push
or
push
pushf
lods
in
dec
jmp
mov
andl
sbb
inc
jle
push
mov
lds
add
bound
sarl
or
add
push
gs
adc
add
pop
test
sub
prefetch
push
and
rolb
and
bound
sub
stc
lea
add
out
scas
ja
inc
push
popa
out
push
mov
pusha
cmp
outsl
xor
mov
jge
hlt
xchg
test
push
test
ss
jb
es
and
fistps
int
sbb
dec
mov
adc
insb
fnstenv
or
rcr
out
cli
aaa
adc
mov
jmp
pusha
push
jge
rcll
and
mov
mov
ljmp
outsb
sbb
jle
mov
mov
aam
cmp
je
jmp
dec
dec
std
movsb
cmp
pop
cmp
inc
and
xlat
or
pusha
in
testl
in
popa
scas
dec
jns
sbb
sbb
mov
outsb
push
jecxz
push
mov
andl
adc
jbe
mov
xchg
mov
in
nop
and
iret
sbb
insl
inc
repz
push
jno
push
push
in
mov
xchg
cmpb
pop
orl
call
pop
out
jnp
lcall
mov
inc
bndstx
decb
cmpl
imul
test
std
or
jo
movsb
ja
mov
mov
fmull
or
lahf
lock
inc
push
jle
pop
stc
jo
push
rorl
stos
dec
xor
pop
popf
xor
dec
clc
mov
fsubrl
fbstp
sbb
cli
ror
jo
test
or
iret
mov
fs
jp
inc
test
jg
mov
mov
aas
shl
stc
shrl
aam
std
mov
bound
mov
int
or
or
and
sbb
hlt
mov
lock
and
jae
mov
jb
push
cli
js
out
push
sbb
repnz
sahf
notl
push
push
mov
mov
lahf
add
adc
mov
mov
pop
test
je
cmp
cmp
dec
subb
subb
or
jo
mov
jbe
shll
push
data16
fld
icebp
sahf
sar
stos
mov
insl
push
popf
xlat
aad
mov
nop
jle
in
add
lods
jle
shrb
in
movb
push
fdivl
lret
mov
mov
in
lods
dec
cwtl
dec
jge
scas
hlt
ds
movsb
or
mov
out
fdivl
xchg
stc
or
leave
in
cltd
lea
cmp
mov
pop
pop
mov
pop
fcomps
jecxz
repz
mov
iret
dec
and
dec
cmp
rol
js
loopne
out
cwtl
je
mov
mov
out
mov
xchg
mov
sbb
out
aas
xchg
sub
outsb
loopne
adc
jae
xlat
insl
xor
mov
cmpsb
gs
mov
cmp
mov
pop
sbbb
call
xchg
push
xchg
xchg
sahf
inc
leave
lcall
sub
clc
adc
inc
out
popf
lcall
sbb
jno
jb
xchg
daa
cmpsb
jne
jns
sbb
mov
sti
imul
test
sub
add
sbb
mov
fiadds
test
repz
xchg
pop
in
lock
repz
and
jae
sbb
push
and
sahf
jg
pop
jl
or
sub
inc
push
xor
aad
imulb
ss
xor
pusha
add
xchg
daa
push
arpl
dec
fidivs
sbb
mov
adc
cmpsl
daa
adc
add
push
cmp
enter
movsl
in
movsl
or
xor
addr16
jb
xchg
lock
xor
outsl
jo
sahf
and
pop
and
inc
in
xor
frstor
jmp
cmp
repnz
push
pop
popa
scas
loop
mov
test
negb
popa
and
or
inc
xchg
push
mov
les
sbb
xchg
cmpsb
sub
jbe
dec
sbb
push
cltd
cmc
test
loop
xor
pusha
scas
lods
loope
outsb
cli
pop
cmc
and
ja
mov
mov
xchg
pop
adc
xchg
insl
movsb
inc
arpl
insb
push
fbld
mov
jmp
into
jl
cmpsl
sbb
xor
adc
mov
jo
cmp
sub
bound
xor
dec
fs
sbbb
lret
aaa
lret
in
mov
hlt
adc
cs
or
jmp
cmp
mov
mov
pop
push
dec
push
popa
pop
xor
pop
xor
arpl
ret
scas
mov
cld
call
cmpxchg
aaa
sub
lods
das
adc
ja
dec
sahf
pop
dec
cmpl
cmp
pop
dec
cmp
and
or
test
popf
and
sbb
shrl
push
cmpl
add
or
cltd
mov
mov
push
inc
out
test
clc
test
xor
cmpsl
pop
inc
or
mov
lods
jl
mov
aaa
sbb
in
or
negb
lahf
push
push
adc
xorb
shll
adc
sub
dec
sub
sbb
mov
js
mov
mov
mov
jmp
xchg
mov
push
push
mov
sub
fildll
dec
roll
mov
push
fsubp
inc
call
ja
ss
push
and
pop
xor
xchg
push
insb
mov
and
daa
pop
sub
testb
adc
rol
push
adc
insb
out
mov
adc
test
push
or
in
push
data16
pop
cmp
jae
ja
sub
xchg
scas
imul
cmp
xchg
xchg
aad
mov
je
pop
dec
dec
pusha
push
push
mov
call
rclb
cltd
sti
leave
and
ja
inc
pop
incl
movsb
dec
jno
leave
les
in
cmp
and
pusha
or
loopne
pop
sub
mov
sti
in
lahf
cmp
mov
pop
lcall
sub
in
adc
rorb
sahf
mov
ja
aam
push
in
mov
popa
jae
mov
in
pop
in
cld
cltd
outsl
xchg
int
mov
dec
sbb
leave
push
movsb
lcall
xor
add
add
aaa
pop
pop
inc
dec
ret
lds
enter
dec
imul
sbb
xor
inc
inc
pop
ljmp
pushf
mov
and
pop
adc
mov
in
loope
jno
sub
or
jge
inc
rcrb
popf
jle
mov
dec
dec
out
addr16
in
fucomi
lahf
jl
daa
inc
insb
insb
jae
punpcklbw
fnstcw
std
subl
pusha
adc
jae
fs
les
jnp
xor
cmp
jb
stos
xor
xchg
push
push
adc
cmc
dec
cwtl
in
in
adcb
pop
iret
push
xorl
stos
xchg
push
imul
xchg
dec
orb
pop
das
xchg
fcom
pusha
scas
xchg
pop
popf
fnstsw
cmp
mov
push
decb
inc
icebp
and
rol
inc
fisubrs
mov
ret
pop
cmp
mov
cmpsb
in
rcll
jp
xorb
pop
adc
sub
movsw
lds
std
aad
push
or
inc
jnp
sbb
pop
mov
mov
and
sbb
clc
xlat
or
push
shr
out
mov
pop
push
jno
out
push
subb
ja
ret
iret
leave
push
fucomi
imul
std
push
xchg
push
rorb
adc
xlat
ja
jb
mov
dec
and
sbb
repnz
mov
sbb
mov
add
mov
add
shll
imul
mov
movsl
loop
test
outsl
mov
and
leave
leave
pop
and
dec
sbb
push
in
iret
int
test
gs
iret
jge
gs
dec
iret
rorl
cmp
lcall
shll
fstps
int
lcall
fsubr
imul
mov
inc
mov
sub
stos
arpl
dec
in
pop
sub
dec
add
push
or
sub
push
subl
mov
dec
out
push
mov
mov
fs
test
pop
cmp
popf
cmpsl
pop
push
arpl
addr16
sub
sub
icebp
push
pushf
pop
cltd
xchg
mov
inc
xor
jne
inc
pop
arpl
add
fnsave
pop
adc
mov
sub
pop
add
add
test
jmp
stos
insl
dec
insb
lcall
xchg
mov
int3
bound
sub
std
and
mov
push
cmp
lret
cmp
fcomps
inc
fcmovbe
mov
push
cld
mov
imul
jle
outsl
lret
mov
stos
sbb
xlat
cltd
jge
lcall
lock
pushf
cli
clc
sbb
mov
or
sub
sti
jo
ss
xor
or
cmp
xchg
imul
inc
jmp
aad
sub
movsb
and
dec
lea
mov
xlat
sahf
inc
frstor
or
movb
cmp
adc
pop
js
jno
fmulp
out
fists
push
adc
sbb
iret
mov
sbb
xchg
aas
mov
lds
loopne
mov
hlt
pop
add
lcall
and
jnp
mov
outsb
sbb
std
inc
cld
popf
mov
cmp
sahf
sarb
loop
jbe
je
ret
fnsave
jp
sub
cmpsl
cmpsl
fcompl
cmp
push
sbb
adc
pop
adc
in
es
out
mov
test
push
je
jne
lret
ja
push
and
push
mov
mov
cs
imul
mov
or
jb
xchg
cmpsb
pop
sbb
out
sbb
and
push
add
scas
jnp
jmp
jne
sbb
into
arpl
dec
pop
pop
cld
fisubrl
jne
push
ret
mov
das
sbb
sbb
subb
dec
mov
and
jo
mov
outsl
mov
bound
test
dec
adc
repz
pop
popf
test
out
mov
xchg
dec
mov
add
mov
imul
or
add
mov
enter
mov
sub
push
push
test
shlb
in
push
xchg
adcb
xchg
mov
dec
dec
loopne
imul
cli
xor
psllq
clc
push
mov
into
push
lock
xlat
sarb
fcomps
addl
or
out
dec
lret
jno
mov
fldenv
or
mov
aam
sbb
push
movsb
adc
clc
mov
adcl
mov
stos
sub
mov
aad
sbb
xchg
dec
call
adc
insb
or
adc
aad
mov
int
jns
ja
pop
je
stos
lds
inc
cmpsb
dec
movsb
xchg
sub
sub
mov
xor
xor
and
xlat
push
cmpsb
jnp
cs
fwait
pop
dec
push
ret
mov
shll
xor
jb
dec
jp
jbe
adc
scas
rolb
jl
pushf
mov
ret
imul
shr
mov
or
and
mov
repz
cmpsl
sub
lcall
lods
mov
fldenv
mov
pusha
ja
clc
les
mov
sbb
nop
mov
pusha
mov
loope
mov
xor
mov
jbe,pn
or
js
cwtl
jmp
and
fs
lock
mov
jnp
out
pop
addr16
mov
mov
and
pop
test
xor
mov
inc
pusha
mov
xchg
inc
push
mov
in
sbb
inc
mov
addl
mov
out
dec
and
scas
xor
fwait
adc
movsb
xlat
jmp
movsl
fwait
jle
cltd
mov
sbbl
xchg
dec
push
repz
ja
int3
push
lret
pop
dec
aaa
adc
jo
je
movsb
loop
sbb
out
scas
insb
xor
loop
or
fiaddl
fwait
adc
scas
mov
icebp
lds
arpl
les
pusha
cmp
add
mov
fistpll
jno
in
push
roll
xchg
xlat
ss
rolb
pop
pop
push
jge
cwtl
lock
and
jecxz
and
jg
mov
push
std
or
push
adc
cwtl
pop
xchg
ret
loope
stc
loope
cmp
push
push
mov
mov
or
jmp
or
jo
aam
gs
jb
divl
lret
sti
shrd
popa
push
jg
push
lds
add
add
leave
pop
bound
pop
in
pop
sahf
jmp
and
std
add
xor
add
adc
or
sub
sbb
add
dec
and
mov
movsb
lock
fisubrs
jmp
pop
jmp
xchg
je
ja
lahf
jno
inc
xchg
enter
mov
fildll
movsl
or
stc
jmp
and
push
shll
cltd
aam
adc
mov
lahf
daa
loope
decl
lahf
fbld
gs
mov
cmp
sub
push
and
out
mov
mov
movsl
rcrb
jae
push
ds
ret
jbe
enter
or
sar
pop
pop
daa
xchg
cmpsb
pop
test
ret
push
mov
xor
popa
iret
mov
test
insb
adc
clc
push
dec
daa
fldl
fst
dec
or
inc
mov
dec
pop
xor
popf
out
and
mov
mov
addr16
mov
xor
inc
aam
scas
int3
mov
test
mov
mov
xchg
je
push
mov
inc
push
xor
push
mov
sub
fistpl
xchg
in
jae
cld
lcall
lahf
xchg
inc
push
push
test
in
movsl
ret
lret
fcompl
ss
aad
shll
shlb
in
iret
movsl
xchg
shlb
into
insb
dec
mov
cmp
pop
fwait
dec
jbe
scas
or
push
out
out
jnp
and
and
push
jns
outsb
into
sarl
sub
hlt
sahf
adcb
lock
pop
shll
and
mov
pop
adc
ret
sub
sbb
mov
shrl
outsl
leave
adc
or
push
movsl
decl
jne
fsts
dec
dec
ljmp
adc
sub
cmpsb
and
stos
imulb
mov
push
shll
and
sub
rclb
jns
test
fcomps
push
std
inc
xlat
push
fcmovne
or
jne
xchg
jne
cltd
add
adc
gs
imul
test
out
not
dec
add
in
inc
out
fsubp
subl
sbb
adc
fwait
ss
pop
jns
icebp
outsl
popf
sti
and
xchg
out
popf
ja
hlt
jmp
mov
add
in
pop
and
inc
sbb
sbb
mov
add
pushf
or
inc
inc
jne
jp
jne
add
adc
inc
dec
push
test
mull
mov
mov
ret
sub
idivb
xor
inc
mov
rcll
pop
repnz
outsb
mov
or
pop
lods
repnz
decb
sbb
push
lcall
jg
xor
and
mov
xchg
iret
cltd
sbb
sub
stc
mov
push
ss
imul
lds
jnp
fs
mov
out
add
or
xor
pop
add
aam
sub
stos
scas
into
mov
sub
jp
out
push
fs
repnz
cmp
jae
mov
faddl
jne
push
test
push
push
rclb
xchg
movsl
shrb
dec
mov
and
mov
mov
pop
test
les
pop
push
stos
xor
adc
sti
aas
cmp
or
dec
popl
loopne
out
leave
daa
in
adc
jns
push
add
fbld
sub
or
pop
call
std
arpl
push
mov
mov
call
rcrl
push
xchg
pop
xchg
mov
sub
movsl
adc
xchg
out
cmp
std
jp
ljmp
cld
jg
in
rcrb
jle
pop
xchg
out
fcompl
leave
out
pop
inc
xchg
xchg
in
push
mov
or
and
aam
lret
lahf
cwtl
mov
notb
or
mov
adc
and
lock
xchg
jbe
fsubs
mov
pusha
data16
in
mov
ficoms
dec
imul
mov
cmc
ja
mov
sub
fs
lcall
ja
add
jmp
mov
loope
push
mull
daa
int
pusha
movsb
xchg
fldcw
cmpsl
jge
cmc
mov
xchg
adc
ja
inc
gs
test
adc
dec
push
mov
lcall
inc
push
pop
lcall
and
jnp
stos
sbb
in
inc
xchg
xchg
andl
sbb
push
cmp
scas
shrl
bound
clc
fistps
sub
mov
mov
clc
daa
jge
adc
cwtl
xor
adc
ret
clc
in
mov
movsb
jo
insb
push
sarb
mov
lea
and
pusha
pop
jo
xchg
loop
mov
xlat
test
mov
or
cli
scas
or
movsb
xchg
add
push
idivl
shrl
sti
jbe
enter
stos
lods
shlb
adc
loop
out
dec
rorb
push
mov
loop
mov
icebp
into
mov
rorb
ret
and
mov
cmp
dec
je
inc
out
sbb
inc
outsb
shll
xchg
xchg
mov
push
daa
mov
daa
pcmpgtb
outsb
mov
pop
inc
jle
and
sbb
sub
imul
sbb
jle
mov
nop
sub
test
add
and
lods
jge
in
sub
out
jmp
lods
les
mov
mov
js
sbb
mov
mov
lock
pop
pop
lcall
mov
push
rep
mov
ljmp
push
dec
fbld
out
mov
sbb
scas
fmuls
pushf
and
jecxz
lds
dec
push
pop
inc
nop
daa
jmp
icebp
sysexit
jne
incb
aam
shl
adc
iret
inc
add
sub
int3
mov
cltd
out
std
add
js
repnz
scas
and
insb
lahf
cmpsb
mov
or
push
push
popa
xchg
pop
jmp
lahf
outsl
jle
xchg
jae
cmp
add
pop
mov
shlb
repnz
jl
popf
cmp
xor
mov
les
and
loope
fisttpll
jmp
add
mov
cmp
xchg
fisttpll
movsl
pop
cmpsb
imul
cmp
insl
cmp
mov
pop
iret
inc
aad
mov
inc
cmp
inc
dec
imul
push
mov
ja
or
fs
mov
inc
mov
sbb
fadds
out
or
xor
addr16
add
sbb
test
sbb
xchg
cli
daa
int
mov
sarl
stc
lea
lods
push
xchg
dec
jnp
ror
pop
stc
out
mov
stos
cld
mov
mov
lea
jns
pop
cmp
adc
test
lahf
dec
push
or
mov
pop
mov
sbbl
mov
or
lret
push
sub
fstl
adc
and
test
xchg
or
and
adc
dec
mov
dec
aam
or
lahf
fistpll
mov
mul
cmp
and
mov
out
and
cs
aas
fisttpll
lock
daa
xchg
push
push
lret
ds
jle
mov
cmp
cli
incb
negb
test
fsubrs
cmp
mov
leave
jl
adcb
cmp
pop
and
add
pop
mov
je
push
ret
sti
mov
xchg
cmp
xchg
movsl
hlt
adc
pop
dec
ret
xchg
mov
imul
mov
lock
xchg
jmp
cmpsl
out
adc
add
stc
jbe
fs
hlt
mov
xchg
insb
mov
movsl
nop
xchg
and
mov
sahf
mov
add
push
cmp
inc
mov
sbbb
lahf
je
aad
sbb
arpl
into
std
into
mov
ret
jb
jo
shll
adc
mov
mov
inc
xlat
out
ret
int3
sub
cltd
sub
mov
xchg
arpl
and
andl
xor
adc
xor
mov
mov
dec
mov
jne
cmpb
js
std
decl
xchg
insb
clc
cmp
pop
mov
sbb
add
test
jp
or
rclb
sbb
scas
push
jo
fsubrl
and
decl
push
push
ja
dec
inc
add
add
roll
xor
or
movl
arpl
pop
mov
fdivrs
cmp
mov
iret
mov
cmpsl
loope
push
push
push
fidivrs
scas
lock
es
mov
or
loope
mov
sub
mov
pop
fisttps
cmpsl
pop
aas
push
dec
lfs
cmp
mov
mov
xchg
repnz
shll
push
fstp
add
lcall
jg
std
or
mov
icebp
jne
scas
jmp
adc
jmp
cmp
inc
push
popf
in
orl
cmp
out
fs
jae
mov
daa
ljmp
or
mov
repz
aad
ret
lret
hlt
cmp
lds
ljmp
or
mov
push
mov
or
pusha
or
xor
sub
push
xchg
cltd
push
pop
rcll
loopne
test
sbb
mov
pop
sub
outsl
sbb
rolb
push
push
dec
not
adc
lds
xchg
bound
mov
xchg
dec
out
cld
or
in
sbb
mov
hlt
sub
mov
insb
sub
mov
and
mov
outsl
xchg
dec
lods
sbbl
loopne
mov
pop
inc
sub
sbb
leave
out
jns
and
cmpsl
repz
fcmovnb
ret
subb
mov
jg
cli
jge
push
or
push
rcrl
cwtl
push
ret
bnd
or
dec
ficoml
ror
jle
jae
stc
mov
out
and
out
cltd
or
mov
sbb
aas
sbb
ret
inc
out
mov
bnd
dec
sub
add
mov
pop
sbb
and
inc
dec
vpmuludq
idivb
cld
enter
hlt
pop
leave
nop
pop
ficompl
jbe
ret
add
inc
into
add
adc
push
push
rolb
and
push
in
xor
in
pushf
add
push
adc
cltd
aas
lcall
lret
cmp
adc
xor
jnp
cmp
jg
rclb
stos
repz
mov
out
sub
ss
and
or
lods
fildl
fcmove
es
aas
sub
pop
xor
xor
stos
insl
dec
cmc
push
mov
dec
in
mov
mov
test
ret
dec
int3
pop
cmp
clc
stos
xchg
cwtl
mov
jns
mov
or
lea
call
hlt
aaa
adc
addb
mov
jb
xlat
imul
daa
add
dec
cmpsl
jno
sbb
fsubr
cmp
ljmp
lods
jmp
stos
mov
in
mov
repnz
cmc
push
arpl
add
dec
ret
mov
pop
pop
scas
jecxz
mov
and
dec
shlb
andl
or
dec
stc
or
mov
inc
imul
leave
pop
adc
mov
jb
xor
bound
xor
fnstenv
and
test
notl
inc
fcomps
pop
xor
mov
or
in
mov
mov
cli
aaa
sbb
mov
ss
jbe
adc
stos
mov
fs
movsl
out
inc
adc
xor
pop
adc
push
sub
cld
jns
xor
and
stc
sarb
adc
popa
xchg
addr16
dec
and
jl
popf
lahf
dec
xchg
cld
jbe
popf
jo
mov
add
bound
jp
inc
leave
push
popa
aad
gs
lods
repz
mov
mov
dec
ljmp
lods
ss
adc
insb
jmp
pop
sbb
lcall
add
repz
stos
negl
push
xor
rcl
fisttps
add
lock
repz
loope
jmp
add
stc
leave
push
pop
cld
adc
mov
pop
movsl
hlt
sub
dec
cmp
movsl
test
faddl
out
push
pop
jg
mov
aam
push
or
aaa
mov
and
cmpsl
or
cmpsb
sahf
push
pushf
addr16
push
or
test
std
popf
mov
es
lahf
dec
xchg
xlat
lahf
hlt
cmc
mov
jb
ror
add
daa
push
aaa
add
cmp
sbb
push
lea
loope
pop
pop
mov
xchg
pop
xchg
xchg
loope
clc
mov
cmp
fwait
ret
cwtl
js
fdivs
cmc
xchg
mov
mov
movsb
repz
scas
loopne
push
pop
and
daa
jmp
shr
mov
mov
push
sub
jmp
push
or
out
cmp
scas
xchg
jae
cmp
and
mov
pop
xchg
pop
sub
mov
and
add
ror
cmpsl
popa
faddp
cli
mov
in
shrb
cmpb
rolb
fnstsw
pop
sub
pop
hlt
sub
vlddqu
in
std
gs
mov
mov
fdivl
testl
push
xor
pushf
out
jbe
mov
jo
sub
shl
out
push
mov
dec
mov
pusha
sbb
ja
sar
xlat
test
movsb
push
out
sbb
aaa
movsl
out
test
aaa
int3
push
iret
jmp
sub
sub
mov
imul
cmp
add
movb
add
int
pop
xchg
cmp
test
leavew
hlt
xchg
jle
sbb
ljmp
add
imul
fists
inc
sbb
lock
push
loop,pn
movsb
mov
adc
pop
and
scas
mov
sub
shll
sbb
imul
testb
or
ret
clc
lcall
pop
add
add
stos
lret
popf
pusha
scas
mov
mov
and
mov
pusha
xor
stos
rorl
lret
fs
ja
mov
sub
push
push
push
enter
pop
dec
cmp
xchg
lock
in
inc
add
cli
xchg
xor
ficoml
in
out
cmp
sbb
test
mov
orb
or
jns
and
stos
gs
inc
les
aaa
daa
dec
mov
xchg
push
ljmp
stos
xchg
imul
xor
outsl
mov
fcmovne
das
xlat
and
out
pop
enterw
test
cld
sbb
cltd
dec
xchg
in
mov
cwtl
and
xor
call
aam
mov
add
rclb
fidivrl
sub
loop
add
jbe
fsubs
mov
add
or
fwait
and
ret
and
jp
and
or
lods
lret
pop
lods
repz
aad
jno
les
xchg
test
sti
pop
pop
mov
test
sub
out
in
test
les
xlat
into
mov
movsl
and
mov
insl
sbb
sub
dec
cld
lcall
jnp,pn
sbb
dec
cmp
pusha
xchg
flds
fxch
lods
pop
adc
inc
xor
ja
adc
jge
xor
cltd
cmpsb
add
sbb
or
add
add
stos
xor
leave
mov
hlt
add
push
loope
mov
mov
test
out
iret
fisttpll
pop
inc
jo
xor
lods
push
mov
in
ljmp
aad
add
cmp
cmpsb
lret
aas
xchg
sahf
sbb
adcl
sahf
jmp
aam
shlb
dec
mov
mov
sub
stos
sbb
lret
out
test
pop
dec
sbb
shll
data16
imul
add
adc
pop
xchg
lea
sbb
enter
lahf
inc
xor
jp
xor
jl
rcll
pusha
jnp
testl
int
in
dec
lret
cmc
sti
lcall
cmc
insb
sub
or
lds
xor
mulb
mov
clc
pusha
xor
cs
insb
inc
stos
cwtl
push
movsb
imul
sbb
or
nop
cmp
mov
mov
add
and
aam
ret
mov
push
fbld
adc
cmp
jg
sbb
mov
lahf
mov
sbb
cs
mov
insb
lret
push
loopne
sbbb
push
ljmp
dec
popf
cmp
fcos
inc
pop
sub
ret
jnp
idivl
fidivrs
jge
popf
out
mov
in
lock
add
jnp
push
rolb
xor
in
ljmp
and
hlt
outsb
movsl
pop
xchg
pop
push
jle
dec
loop
pop
je
rcrl
dec
add
lret
pusha
push
sahf
leave
push
nop
inc
sahf
jp
pop
jne
mov
xchg
dec
jne
sub
cmp
adc
pop
mov
repz
xchg
mov
icebp
mov
stc
xor
push
cld
mov
inc
cmpsb
test
mov
daa
repz
stc
into
jbe
lcall
sbb
or
outsl
xchg
push
add
inc
insl
outsb
repz
or
stos
mov
cld
inc
cmp
aad
rorl
jmp
xlat
mov
pop
ja
xchg
mov
xlat
inc
xchg
in
push
clc
movsl
adc
insl
hlt
pusha
cmp
jg
sti
and
insl
imulb
jp
das
insl
cltd
test
test
loope
cmp
and
pop
push
cwtl
mov
std
pop
arpl
movzwl
mov
out
hlt
sbb
push
lret
negl
ficoms
jg
arpl
push
test
jne
adc
mov
sbb
lods
mov
movsl
add
cli
lret
mov
aad
out
push
sahf
and
into
in
sbb
xorb
stos
dec
adc
push
popf
or
or
add
mov
xor
jg
push
andl
aam
test
or
or
call
fisttpl
lcall
mov
adc
enter
inc
xchg
add
cmp
add
cwtl
sub
xchg
push
sbb
lods
inc
fidivrs
out
mov
adc
cwtl
adcb
mov
addr16
daa
mov
push
imul
xchg
js
leave
movsb
outsl
xor
mov
fcomi
js
push
jg
aad
sbb
jmp
push
adc
mov
out
mov
data16
sbb
in
mov
ljmp
dec
and
mov
mov
xor
mov
ljmp
cmpsb
cmp
xchg
push
sbb
shrb
add
int3
shlb
sbb
dec
xchg
mov
add
paddq
ss
lods
sbb
je
in
lcall
push
fisubrl
or
sbb
xchg
rcrb
movsb
jns
push
lahf
ficompl
out
cmp
add
xchg
or
or
jns
icebp
xchg
jb
mov
in
mov
icebp
lock
mov
adc
push
lret
push
xor
dec
ds
dec
sbb
mov
mov
cmpl
xor
push
jae
notb
jnp
pop
das
adc
sbb
arpl
mov
shrl
xchg
leave
sub
jo
adc
xchg
pop
adc
adc
scas
movhps
or
or
cli
push
divb
xchg
sti
dec
test
scas
sbb
aad
sub
xor
sbb
dec
int3
xlat
je
and
mov
cmpsb
lret
inc
daa
loopne
push
addr16
mov
fwait
sbb
je
pop
shrb
cli
mov
cmpsl
push
jp
cmp
jg
fiaddl
addr16
push
popf
outsb
mov
pusha
cmp
dec
ja
stos
iret
fildll
push
ljmp
int3
icebp
imul
fadds
push
aam
adc
ficomps
push
rcll
push
jne
movsb
jne
loop
cmp
mov
inc
fildl
mov
rcll
adc
and
shlb
mov
pop
cltd
and
dec
pop
or
dec
fnstsw
inc
and
mov
and
pop
adc
jnp
dec
push
mov
inc
ljmp
sbb
cmp
jnp
js
call
test
aam
xchg
out
lret
or
mov
fwait
pop
adc
mov
xchg
xlat
dec
icebp
push
mov
out
pop
mov
fdiv
xchg
jo
pop
pop
jl
adc
dec
fs
mov
testb
push
xor
daa
fildll
pop
lahf
int
jmp
leave
mov
mov
mov
mov
dec
pop
je
int
dec
lods
mov
and
repnz
mov
mov
lock
adc
cwtl
enter
pushf
orl
inc
cmp
lods
mov
pop
xor
bound
arpl
push
sub
fimull
xor
fs
add
adc
mov
jecxz
push
adc
xchg
xchg
inc
pop
mov
fsubrp
pop
dec
mov
xor
mov
or
cli
scas
push
clc
repnz
fnstcw
out
aas
ds
inc
pop
sti
xadd
mov
mov
jae
fiaddl
fsubrs
jg
icebp
fwait
push
xchg
fucomi
daa
pusha
xor
pusha
icebp
mov
jno
mov
pop
dec
into
xlat
cmp
into
push
or
mov
dec
sbb
adc
or
imul
mov
daa
xor
push
add
rorl
mov
dec
pop
call
in
mov
in
add
out
dec
pusha
mov
sub
pop
cld
jae
adc
into
mov
jge
rcl
imull
cli
or
repnz
jp
sub
mov
mov
outsb
rolb
cli
outsl
push
iret
lret
and
jle
mov
cs
call
lcall
xchg
and
push
es
icebp
pop
mov
push
stos
xchg
popa
inc
popf
pushl
aad
push
cwtl
push
xor
xchg
and
stos
out
adc
xchg
push
and
xchg
adc
out
fwait
fs
and
mov
loope
push
stos
cmpsl
and
mov
cmp
es
mov
jg
test
mov
xchg
jne
or
cmp
xor
lods
mov
shrl
lock
roll
jne
outsb
cmc
inc
xchg
aaa
mov
xchg
sarl
cmp
mov
or
push
sbb
faddl
push
cmpb
lock
and
cmp
arpl
pushf
shlb
clc
into
arpl
repnz
push
ljmp
adc
xchg
mov
sub
mov
sub
sub
outsb
sub
xor
jne
loopne
mov
es
movsl
xor
adc
mov
push
shl
push
test
cmp
mov
scas
jmp
sbb
xchg
movsl
add
mov
mov
sarl
xor
push
push
loop
faddp
xchg
clc
cmp
push
mov
sbb
jge
sub
pop
or
adc
jmp
je
mov
in
aam
lods
mov
bound
pop
push
sbb
push
aas
push
into
xchg
insl
jp
out
mov
js
jns
jns
fs
hlt
dec
pop
xchg
aad
std
insl
into
in
ret
test
xor
loope
or
lods
jmp
jmp
out
mov
shlb
pop
mov
jb
cmpsb
jmp
or
aaa
outsl
outsl
xlat
mov
xchg
add
or
enter
fidivrl
movsb
loope
jl
icebp
loop
pop
xchg
mov
mov
aad
mov
outsl
out
jnp,pt
sub
jmp
pusha
ret
mov
stos
ljmp
push
ret
std
shr
pop
push
push
test
aaa
sbb
xchg
cwtl
push
ret
cmp
dec
dec
movsb
jne
aad
pop
xor
stc
das
dec
jecxz
lret
scas
mov
push
repz
out
out
aam
lahf
jb
cmp
mov
pop
inc
mov
cmpsb
hlt
cmp
lods
int
sahf
cmpsl
int3
sub
in
add
jp
push
inc
xor
lock
in
inc
out
insb
shr
or
jg
push
xchg
jge
in
mov
mov
inc
jnp
cmp
jp
mov
and
out
into
lret
jns
push
enter
push
fnstcw
jmp
ja
fldenv
inc
pop
pop
fidivl
test
movsb
sbb
orl
sbb
pop
and
in
in
and
test
dec
lcall
lods
jecxz
jbe
and
or
out
pop
adc
std
adc
es
sbb
call
ret
les
pop
add
push
sbb
icebp
stc
outsb
mov
mov
jl
leave
arpl
lds
mov
sub
aaa
lret
mov
lock
jecxz
push
jno
insl
or
std
mov
rcll
pushf
pop
or
les
mov
cltd
out
xor
push
xchg
inc
test
repnz
dec
push
lods
mov
push
fadd
mov
push
inc
and
fisttpl
lds
jecxz
xchg
add
bound
sub
inc
outsl
outsl
cmc
mov
add
ljmp
push
fcmovnu
mov
sbb
cmp
xor
sub
adc
dec
mov
movsb
xchg
sbb
mov
jnp
and
push
jmp
call
test
push
popa
sbb
pop
xchg
cmp
dec
aad
adc
mov
jp
mov
or
adc
dec
cmp
jbe
imul
insb
ljmp
jbe
popf
push
dec
imul
push
mov
jmp
into
or
push
cmpsl
inc
int
jle
test
push
jge
andps
push
inc
or
outsb
pop
loop
fcmovb
je
call
mov
ja
inc
mov
dec
mov
insl
fdivrs
mov
xchg
xchg
dec
leave
cwtl
xor
aad
shl
frndint
push
dec
mov
popf
push
push
test
mov
jae
jle
daa
or
ror
jmp
mov
loopne
sbb
addr16
mov
repz
adc
lcall
out
enter
test
xchg
fwait
addr16
std
out
jmp
pop
ds
inc
mov
std
dec
jmp
jg
dec
js
gs
xor
jge,pn
dec
jp
imul
jb
outsl
cmpsl
sbb
icebp
out
mov
add
pop
mov
jmp
mov
fistl
add
adc
shrb
dec
pop
add
movsl
sbb
fldt
cmpsb
dec
xchg
jle
adc
add
and
mov
leave
sbb
clc
addr16
sub
pop
fs
adcl
testb
or
pop
pop
push
jmp
pop
cmp
aam
jae
ljmp
imul
fdivrl
fistpl
ficoml
pop
fwait
leave
icebp
hlt
or
fisubrl
and
cli
jp
in
mov
mov
mov
clc
adc
and
push
mov
sahf
sbb
iret
dec
sub
or
outsb
sbb
pushl
es
and
fsubp
rcrb
cmpsl
arpl
popf
repz
jno
incb
aas
pop
mov
aam
in
cmp
into
sbb
outsl
fldcw
mov
and
dec
pop
imul
mov
inc
jmp
pop
pop
dec
jnp
mov
bound
fwait
test
and
sbb
out
or
mov
inc
push
dec
push
push
fnstsw
pop
clc
add
xlat
inc
mov
scas
aam
pop
testb
into
sbb
pop
rolb
popf
mov
insl
lret
stos
lods
scas
mov
in
dec
lds
mov
negl
sti
adc
pop
adc
lahf
arpl
sub
roll
aad
outsb
push
fs
repz
repz
shr
in
cmc
clc
out
pop
jb
push
or
or
sub
rcrb
or
in
std
lock
fnstenv
lea
jns
xlat
pop
mov
jg
add
jge
cmc
movsb
mov
push
aas
mov
and
sti
pop
insb
test
lods
mov
push
add
ja
mov
or
test
push
add
mov
inc
sbb
push
ja
mov
stos
mov
mov
adc
mov
sbb
add
stc
dec
call
insb
fadds
nop
xor
cltd
mov
xor
pusha
in
pop
int3
dec
xor
je
push
roll
fistpl
and
test
leave
xchg
mov
lret
jne
xor
jno
push
cltd
loop
fldenv
movb
pusha
testl
adc
push
push
outsb
jle
fnsave
dec
xchg
sahf
pushf
xor
sbbb
mov
daa
rolb
sbb
mov
scas
or
inc
mov
imul
fbld
pusha
sbb
jmp
and
cmp
leave
pop
jl
mov
enter
xor
fnstsw
les
rolb
pop
ffreep
mov
jae
sub
adc
xchg
add
lret
push
addb
or
cmp
enter
jns
push
fcomip
xor
cmp
test
scas
movsb
add
subl
mov
hlt
push
mov
jae
push
shlb
fucomi
mov
aam
sub
cwtl
in
jp
insb
cs
repz
test
and
test
in
push
lahf
fisubl
pop
nop
fisttpll
jecxz
enter
pop
jbe
call
mov
push
out
xchg
xchg
sbb
mov
cld
aaa
repz
inc
jecxz
pusha
sahf
fistpl
cwtl
jmp
mov
xchg
push
loope
test
rclb
xor
mov
scas
ret
cmp
push
push
popf
mov
inc
fst
push
je
and
adc
and
pop
pop
cmp
xchg
pop
mulb
and
and
out
scas
pusha
push
and
aas
inc
std
je
psllw
inc
int3
in
arpl
xchg
repz
pop
pop
imul
movsl
idiv
pop
and
movsl
scas
push
ret
pusha
jno
in
and
sub
adc
ljmp
mov
or
outsb
fwait
pop
push
jp
xchg
fwait
and
xchg
fists
push
sahf
pop
mov
int3
push
mov
adc
test
ds
test
and
stc
jmp
into
es
arpl
adc
pop
repnz
push
mov
imul
movsl
pop
fwait
cs
and
pop
lods
jne
lea
mov
rcr
jmp
adc
enter
fsubrl
push
push
icebp
xchg
jo
ja
out
mov
subl
icebp
push
cmp
lahf
push
pop
inc
pop
mov
push
pop
es
inc
aaa
xchg
mov
mov
fdivl
add
mov
xchg
jl
ret
fnstenv
mov
sbb
cmpsb
mov
mov
add
and
sahf
jb
arpl
repz
lds
mov
xchg
in
rcll
add
pop
shrb
push
sbb
dec
add
sbbl
cmpl
mov
int3
mov
aam
outsb
movsb
mov
xor
cmc
out
mov
jns
pop
cmc
imul
subl
cmp
rorb
cmp
push
push
ljmp
jno
stc
inc
ret
subl
adcb
xchg
xlat
ljmp
or
and
jbe
outsl
jecxz
sub
in
jg
and
aaa
push
fcomp
aad
mov
add
and
pop
jg
cmp
mov
cmp
sahf
popf
xchg
xor
pop
adc
adc
cs
and
dec
pop
add
mov
dec
out
push
lods
aad
out
lods
test
pop
or
leave
inc
adc
pop
sub
outsl
jae
bnd
push
stos
xor
or
pop
shlb
mov
xor
insl
xchg
mov
and
ffree
cmpsb
out
fstpl
daa
sarl
dec
mov
add
cltd
shl
and
hlt
ror
aam
lea
test
outsl
add
mov
cmp
pusha
enter
pop
xor
pop
push
aam
pop
dec
mov
push
out
ret
ficoms
pop
mov
in
ret
lea
push
insl
push
sub
mov
in
imul
fisubrl
fisttpl
jne
in
out
add
mov
and
sbb
or
syscall
inc
test
push
mov
das
jge
adc
stos
jno
sub
pop
dec
jle
outsl
das
pushl
mov
mov
sbb
and
push
mov
mov
cmp
pop
shrl
int3
aas
int3
punpckhwd
dec
movsl
inc
xlat
fs
xorl
dec
jo
sti
loopne
das
scas
push
add
nop
lcall
dec
enter
dec
xchg
mov
jo,pt
xor
pop
loop
sub
sbb
adc
cmpsl
sbbb
jecxz
mov
pop
cli
pop
clc
rorb
insl
sbb
test
sub
addb
adc
sbb
hlt
dec
cli
sub
arpl
push
arpl
in
int3
test
adc
dec
es
xchg
jge
push
mov
aas
ficomps
cli
or
test
fnstcw
mov
adc
mov
loop
push
fmull
out
push
add
popa
add
mov
sarb
jg
aad
adc
xor
pop
xor
test
repz
xor
sbb
mov
arpl
je
mov
mov
pop
sub
dec
hlt
jns
cmp
xor
aad
sbb
mov
mov
movsl
adc
in
or
xorl
inc
push
sbb
movb
imul
int3
repnz
cmp
push
mov
mov
sub
pop
inc
push
daa
or
mov
add
inc
push
sbb
inc
orl
lret
popa
pusha
js
adc
out
mov
mov
pop
pushf
inc
lea
ja
lret
data16
sub
aaa
div
lahf
push
add
outsl
adc
fwait
fwait
js
repz
add
inc
sbb
pop
mov
mov
dec
test
xorb
aad
xchg
leave
aam
repz
lahf
jno
adc
lret
adc
jp
or
adc
pop
incb
push
or
sub
les
sub
out
pusha
cli
inc
inc
lods
ret
loop
in
add
pushf
loopne
out
mov
cmp
aam
sub
add
jno
dec
xor
daa
fdivrl
dec
sbb
sbb
pusha
mov
add
sub
cmpsb
jnp
ja
dec
xchg
add
popf
rcll
xchg
xor
jb
sahf
add
xchg
aam
jne
aam
or
adc
add
stos
cmpsl
call
jnp
add
add
xchg
pop
jae
xor
out
adc
fwait
rorl
scas
std
out
or
xchg
pop
add
leave
xchg
sbbb
insl
mov
nop
movsb
pusha
xor
lahf
fisttps
sub
mov
cmp
imul
fisubs
push
jle
and
cmp
jne
dec
inc
fstpt
fdivrs
stc
lret
dec
xor
cmp
stc
lret
lret
cwtl
fpatan
add
cmp
bound
stos
sbb
outsl
and
dec
lahf
adc
ret
das
jno
dec
sbb
pop
push
cmp
fwait
insl
add
pusha
xchg
xor
leave
inc
in
xor
jle
rorb
ror
dec
sti
xchg
repnz
and
jne
sbb
lea
dec
imul
pop
dec
pop
inc
xor
pop
sahf
jl
xchg
adc
je
rcrl
sub
cmp
movsl
dec
incl
jae
cltd
mov
add
fistl
sub
add
xor
sti
in
lods
inc
loop
in
imul
xchg
icebp
push
xor
cmc
popa
cs
imul
nop
xchg
pop
and
mov
xchg
gs
shr
xor
mov
lods
pop
mov
cmpsb
dec
fistpll
xchg
stos
mov
mov
ror
push
pop
xor
lds
mov
add
ss
inc
or
mov
pop
xor
movsb
stc
enter
push
lods
lds
fnstsw
inc
sub
ja
stos
dec
sub
ja
xchg
xor
xor
sahf
movsb
xchg
jb
jb
ljmp
xlat
mov
shrb
hlt
cmp
sbb
push
iret
and
cs
push
mov
rorl
inc
or
rorb
loope
xchg
test
mov
pusha
cmpsl
les
or
adc
xor
int3
mov
sbb
xor
mov
mov
mov
aad
shl
js
and
sbbl
rclb
and
pusha
fldt
jne
push
iret
push
jb
call
mov
xchg
ljmp
pusha
adc
mov
or
outsb
adc
jae
ret
je
push
push
ljmp
popf
mov
adc
ja
mov
stos
jle
stc
or
cmp
fpatan
sub
xor
mov
cltd
xor
outsb
ja
inc
ljmp
mov
icebp
sti
lock
pop
sub
mov
stos
sub
pop
movsb
jne
fsubr
aad
sub
pop
mov
addr16
pushf
or
cltd
jbe
pushf
out
lea
jl
ja
outsb
rcl
adc
dec
jns
out
cmp
ljmp
mov
sbbl
add
push
push
in
fisubs
xor
in
sub
pushf
je
xlat
lret
ss
mov
pushf
in
lods
das
movsb
aaa
or
sbb
ucomiss
mov
lods
jb
ljmp
mov
cwtl
lods
rcrb
pop
and
pop
mov
and
loope
nop
popf
scas
clc
add
daa
out
popf
xor
xor
and
cmp
aas
mov
xchg
ffree
imul
cmpsl
outsb
std
std
xchg
mov
jle
test
in
or
jbe
add
cmpsl
mov
push
mov
stos
adc
hlt
sub
inc
push
jl
subb
jb,pt
in
insl
pop
js
jge
push
add
cs
and
out
pushf
les
mov
xlat
sbbl
sbb
scas
sarl
xlat
adc
or
mov
std
inc
or
dec
pop
xchg
test
rorb
dec
inc
out
mov
imul
sub
xchg
pop
jae
jb
sub
jg
lds
mov
adc
mov
push
push
inc
je
loop
or
jnp
push
pop
es
push
inc
push
sub
je
fwait
xlat
dec
sub
ret
popa
fisubrs
or
sahf
jne
sbb
iret
inc
lahf
push
sbb
int3
adc
popa
aaa
mov
mov
adc
outsl
mov
cmpb
or
cld
and
jmp
outsb
jle
das
jecxz
jno
pop
inc
dec
xlat
es
out
jp
jns
mov
inc
xor
rcl
pop
push
nop
push
fs
loope
subb
sub
mov
movsl
fidivrs
ret
leave
test
xlat
cltd
and
lds
test
enter
std
out
inc
inc
sarb
pop
push
push
ja
sbb
adc
cwtl
inc
je
push
cmp
cmc
jge
negb
ret
int3
testl
addr16
in
pop
pop
mulb
cmp
pop
lods
mov
sahf
and
mov
mov
xchg
dec
inc
outsb
cmp
sbb
jae
or
in
loopne
dec
sbb
inc
and
fs
mov
push
xchg
xchg
imul
test
addr16
stos
push
jns
adc
push
in
test
xorb
int
out
int3
xchg
lret
adc
cmp
mov
inc
jae
gs
aas
xchg
sub
lahf
and
pop
mov
mov
or
sbb
push
mov
in
stc
inc
jmp
mov
enter
jl
xchg
or
cli
jl
sub
movsb
xchg
mov
movsl
arpl
clc
rclb
sti
fimull
cli
sub
xor
cmc
in
enter
ss
test
lds
push
sub
jle
lahf
inc
mov
stc
mov
push
pop
push
in
out
cs
in
inc
aad
add
mov
pop
add
iret
and
sahf
movsl
mov
push
push
adc
es
adc
arpl
push
sub
fisubrs
adc
pusha
sub
xchg
cmp
cli
daa
mov
xor
call
popf
push
dec
cld
mov
xchg
xchg
mov
push
sub
imulb
outsb
sbb
rorb
cmp
adc
cltd
lea
icebp
stc
fwait
scas
sub
inc
std
int
pop
fwait
popf
andl
and
cltd
insb
imul
inc
pop
jo
lcall
push
push
sub
or
push
test
or
xor
xchg
in
bound
push
shll
arpl
lds
xor
sub
pop
lods
add
cld
adc
sbb
add
repz
sbb
xor
stos
pop
pop
push
jae
outsb
or
loope
or
mov
out
lock
cmp
movb
mov
jae
shll
sbb
je
aaa
add
mov
sbb
stos
sub
pushf
xchg
cmp
mov
jmp
mov
test
bound
out
push
ljmp
push
mov
pop
in
out
lea
dec
mov
jg
and
inc
lea
das
pop
and
leave
pushw
sahf
cwtl
push
xor
jg
js
or
jmp
fsubrl
push
inc
pop
mov
test
jne
dec
mov
xchg
add
mov
flds
sbb
add
fimuls
fnstenv
pop
sbb
bnd
lret
push
adc
scas
jo
shrb
out
inc
repnz
sti
xchg
push
cmc
mov
jae
dec
sbb
int
jge
inc
js
test
fsubl
in
lahf
pop
inc
stos
adc
insb
gs
aas
pop
cmp
xchg
fld
call
loop
ret
mov
lea
sub
lret
sbb
xchg
jbe
mov
or
nop
aad
jg
jns
inc
cmp
fstps
lcall
mov
stc
xchg
les
aaa
insl
outsl
jnp
add
mov
insl
xor
pop
sbb
mov
xor
cmpsl
inc
push
cmp
jb
loopne
rcll
nop
in
movsb
mov
ja
xlat
cmpsb
sbb
mov
outsl
fstl
add
sbb
sub
shld
js
mov
adc
xor
add
icebp
scas
in
sar
pop
iret
js
aas
les
dec
jns
pop
mov
xor
xchg
rcrb
neg
icebp
mov
pop
add
dec
dec
sbb
icebp
rorl
mov
movsb
int
notb
pusha
or
in
and
mov
hlt
push
test
cmc
das
xchg
mov
jge
dec
adc
mov
adc
and
out
mov
repz
in
cwtl
movsl
or
loope
repnz
xor
add
sub
sbb
add
cmc
cwtl
in
aad
adc
dec
and
mov
mov
pop
push
arpl
int3
js
dec
jb
jecxz
mov
cmpsb
push
and
xchg
in
nop
dec
sbb
xchg
out
stos
fdiv
or
pop
addr16
addr16
cli
dec
jne
pop
ss
loopne
daa
in
fcompl
sti
enter
or
fsub
test
inc
push
lds
aaa
dec
subl
xor
sbb
outsl
enter
je
cmpl
mov
sarb
push
call
sub
ljmp
or
vunpcklpd
push
adc
dec
mov
test
sbb
aam
xchg
jnp
mov
adc
jae
outsb
mov
call
ljmp
or
sbb
push
mov
cmpsl
mov
pop
sub
js
inc
in
dec
xor
imul
jl
popa
enter
xor
push
enter
lcall
xor
mov
out
mov
xchg
inc
mov
mov
leave
push
lcall
adc
loope
leave
xor
js
lods
test
je
sbb
repnz
cmp
dec
pop
fists
lahf
fucomi
sbb
std
mov
into
stos
sti
jo
xor
sbb
or
leave
sbb
int3
mov
jle
pop
cmc
in
sbb
jnp
dec
sub
sub
cmp
xchg
mov
mov
dec
roll
dec
mov
push
ds
dec
and
sub
lahf
mov
pop
arpl
or
xor
add
xchg
mov
jmp
sbb
pop
push
lds
les
or
cs
sbb
push
enter
cmpsb
add
adc
call
ret
enter
icebp
shr
cmpsl
dec
cli
sbb
or
mov
jns
push
push
aas
mov
mov
sbb
movsb
add
rorl
push
aam
mov
sti
fwait
jb
and
pop
mov
mov
outsb
bound
inc
jbe
mov
and
mov
mov
daa
xchg
xchg
in
mov
hlt
or
loop
fnstenv
shl
scas
xchg
push
cmpsl
mov
xor
adc
cmp
fisubl
push
push
sub
mov
sbb
mov
dec
pop
test
push
push
in
xor
push
mov
sbb
nop
ja
dec
test
pop
or
nop
enter
hlt
push
lret
ret
cmp
std
cs
movsb
test
mov
fdivs
cmc
bound
bound
xchg
sub
inc
sbb
mov
xchg
inc
addr16
jbe
push
lret
push
imul
ret
adc
iret
push
inc
rorb
adcl
call
inc
jns
sbb
adc
nop
xor
and
inc
and
push
out
icebp
fsts
dec
loope
sub
inc
ret
push
movsl
xor
subl
fucomi
test
jl
sub
jns
mov
xor
xchg
sarl
push
insl
and
xchg
testl
push
jbe
sbb
inc
or
dec
inc
or
lods
push
addb
ja
push
xchg
push
scas
add
negl
fsubs
leave
dec
repnz
xor
mov
add
arpl
mov
cmpsl
stos
cmp
addb
dec
or
sub
jbe
es
xchg
or
xchg
push
or
cmp
inc
cld
mov
push
js
aad
lret
xchg
or
mov
dec
add
insb
sbb
pop
cmp
test
dec
xchg
and
mov
inc
add
jp
movsb
out
imul
loopne
and
and
jmp
shrb
or
imul
add
sbb
xchg
inc
or
lds
shrb
xchg
jae
int3
pop
inc
sub
mov
sbbl
fisubs
pop
mov
xchg
outsl
sbb
pop
movsb
vrsqrtps
jg
lret
bound
rcll
in
and
mov
add
fbstp
data16
test
push
push
das
stos
add
xchg
prefetcht2
or
lret
cmp
add
out
sub
and
aaa
out
aam
aad
stos
ret
dec
mov
pop
nop
lods
pop
repz
outsl
fwait
leave
mov
ja
inc
insb
sub
mov
stc
and
lds
pop
inc
test
sub
mov
xor
ja
adc
or
mov
lea
scas
add
pop
mov
fsubrl
add
pop
mov
jns
imul
mov
pop
out
daa
push
std
test
mov
xor
in
mov
and
xor
movsl
lret
cltd
mov
push
xchg
out
stos
sbb
mov
cmp
add
or
or
cmp
addr16
call
dec
sbb
jb
hlt
test
and
sbb
out
jp
js
fsubrl
lea
push
fnsave
pop
mov
push
test
sbb
repnz
ja
scas
jns
loopne
fldenv
and
aaa
mov
jl
int
in
movsl
ljmp
mov
ror
aam
pop
fistl
jmp
cmp
divl
push
call
jo
fcom
lahf
sub
mov
xchg
imul
addr16
jae
hlt
or
sub
pushf
push
add
ret
shrl
std
cld
xor
push
inc
and
adc
add
rcr
pop
xchg
xchg
flds
cmp
lods
sub
scas
xor
pop
out
mov
pop
dec
mov
push
jl
fiadds
push
adc
pop
mov
je
xor
xor
imul
lods
std
pop
lahf
shl
mov
aas
in
jl,pt
in
add
aad
ss
add
mov
mov
and
insb
xor
xor
push
or
add
test
xor
lahf
loopne
mov
and
xchg
jmp
xchg
out
mov
push
xlat
jb
dec
dec
imul
pop
cld
mov
sub
in
enter
jp
jge
dec
xchg
mov
out
aam
sahf
lea
push
sti
mov
scas
inc
jmp
xor
ret
js
outsl
push
mov
fwait
mov
out
ds
rcll
mov
pop
testl
into
lods
push
adc
insl
cmpsl
push
add
int
inc
aad
rorb
adc
movsb
testb
lcall
pop
or
sbb
nop
jmp
inc
adcb
cmp
pop
ret
shll
decb
fdivl
call
xchg
pop
popf
mov
leave
and
xchg
mov
mov
or
or
xchg
mov
push
adc
sub
mov
adc
outsb
movsl
push
mov
and
insl
jle
and
pushf
ds
and
pop
dec
jp
jo
push
lods
mov
dec
mov
shlb
or
out
sbb
lcall
pop
movsl
dec
mov
decl
cmp
pop
repz
outsb
js
sti
sub
repnz
hlt
and
outsb
call
xor
pop
fidivrl
add
aas
stos
push
xor
repnz
les
pop
add
int
and
lret
stos
sbb
cmpsl
jecxz
xchg
test
mov
mov
pushf
sbb
adc
jp
ret
jne
inc
aaa
jecxz
push
daa
cmc
mov
sar
mov
out
adc
insl
adc
mov
xor
push
mov
sub
flds
jmp
mov
xchg
push
stos
ss
aad
lahf
mov
lcall
add
pop
jo
out
xchg
cmpsl
in
xchg
push
rclb
bound
pop
shlb
scas
ljmp
mov
mov
js
mov
mov
popf
jnp
or
inc
out
ljmp
xor
add
xchg
push
sbb
out
leave
sbb
outsb
and
inc
jb
mov
icebp
fstpl
and
sbb
jb
inc
or
add
cmovg
and
jmp
sub
mov
daa
jbe
shl
test
fistps
in
imul
cmpsb
mov
sub
mov
push
or
pop
and
ret
sbb
mov
inc
add
push
xchg
sub
movsb
stos
or
mov
in
push
sub
cli
shr
adc
add
xlat
cmpsl
daa
in
filds
frstor
pushf
and
jnp
lea
out
or
sarb
cltd
add
shrl
cmp
sbb
add
ja
flds
mov
sbb
pop
outsb
stos
ret
aaa
repz
and
sub
in
outsb
dec
lcall
mov
out
sub
ficoms
addl
ret
jecxz
adc
aad
xchg
jp
mov
jl
aas
outsb
pop
mov
adc
nop
in
shl
mov
test
and
or
ja
xor
movl
jle
jno
repz
in
xor
push
sbb
mov
mov
xchg
fmull
loopne
pop
lret
insl
sub
pop
dec
lock
or
insl
cmp
push
ljmp
and
lock
inc
xchg
dec
fistps
xor
jge
adc
inc
xchg
push
aaa
cli
insb
test
xchg
loopne
pop
xchg
pop
dec
movsb
in
pop
out
jge
rcrl
fistps
bound
mov
sbb
pusha
ja
daa
dec
aaa
subl
mov
fstl
fistps
add
test
leave
hlt
mov
jbe
adc
and
test
jle
arpl
movb
add
push
scas
cwtl
in
idivb
cmp
ret
inc
sub
mov
cmp
mov
jge
mul
xor
and
mov
lds
daa
movb
out
test
ret
xchg
sbb
leave
sbb
enter
bound
ret
xchg
pop
xchg
xor
sub
aad
das
imul
fstl
movsb
mov
sti
mov
lods
stos
dec
dec
jne
pop
inc
sub
jge
fcompl
popa
jle
fsubrl
mov
mov
mov
mov
sbb
shr
fistl
pop
push
addr16
adcl
test
data16
adc
mov
inc
fs
adc
jne
xchg
sub
mov
inc
and
dec
inc
push
pop
push
pop
movsl
leave
push
aas
clc
push
inc
fcomi
pop
pushf
and
movl
insb
pop
in
lahf
jb
into
push
mov
out
out
pop
push
push
push
daa
jp
sub
or
imulb
lret
scas
mov
lock
test
and
shr
mov
lahf
add
pop
fs
xchg
xor
stc
adc
lods
pop
icebp
adc
jmp
dec
jbe
sti
iret
jae
sub
movsb
jnp
insb
sub
mov
lcall
mov
loope
sarb
inc
test
inc
out
jb
in
imull
fisubs
dec
ror
int3
dec
movsbl
xor
jns
and
inc
movsl
xor
mov
xchg
add
and
loopne
mov
jle
out
pusha
loop
xchg
fcoml
bound
push
jb
sahf
lret
dec
mov
pop
lret
xchg
ret
es
in
bsf
inc
fistpll
mov
jb
adc
lret
in
push
dec
mov
imul
sbb
push
or
test
call
imul
sbb
xor
push
mov
movsb
push
xchg
mov
mov
shl
ds
arpl
loop
aam
cmova
aam
in
jns
sub
add
test
sbb
lret
test
fiaddl
mov
lcall
xchg
lods
jp
bound
jns
jbe
push
sti
scas
pop
out
push
jl
int3
daa
aaa
sarb
leave
jmp
jb
mov
ret
hlt
mov
cmpsb
xchg
in
mov
and
notl
xor
hlt
xor
into
dec
loop
in
sub
ucomiss
cmpl
or
sbb
mov
and
inc
push
arpl
data16
adc
mov
stos
out
pop
shll
fists
stos
arpl
jecxz
mov
mov
cmp
jns
push
enter
fdivr
fmul
xchg
lock
xor
repnz
jl
movsl
test
into
dec
mov
xor
sub
aaa
out
incb
shl
jmp
cli
push
mov
mov
mov
push
rcr
jo
dec
or
test
out
cmp
rep
scas
je
adc
and
rorl
sub
popa
sbbl
cmp
mov
mov
xlat
leave
iret
lock
add
cmp
push
add
out
and
cmp
gs
data16
mov
dec
mov
mov
pop
scas
sbb
mov
inc
loope
lods
nop
mov
dec
push
mov
pop
fadd
fwait
xchg
pusha
inc
bound
xor
xor
sub
in
sbb
mov
cmp
jo
adc
add
xor
mov
mov
pusha
outsb
js
mov
mov
xchg
test
mov
cmc
dec
repnz
vxorps
push
and
sub
jno
sbb
pop
jns
data16
jo
cwtl
idivl
xor
push
insb
into
fwait
fwait
push
jbe
jge
add
mov
out
aas
xor
inc
dec
cltd
mov
jl
js
xchg
mov
gs
rcl
dec
jo
popl
insl
orb
and
xor
inc
clc
lret
dec
mov
fdivs
pop
xchg
test
push
mov
push
mov
push
xchg
push
call
mov
and
xchg
adc
xchg
cli
cmp
stc
mov
jle
cmp
enter
pushf
loop
aas
bound
stc
lcall
push
jnp
or
push
loopne
aad
aad
xchg
out
adcl
leave
adc
inc
cmp
cmp
outsb
xchg
jnp
imul
loope
jne
jbe
pop
fidivs
push
and
jnp
fnstcw
arpl
lcall
xlat
jle
test
pop
pusha
mov
ret
add
insb
add
and
pop
icebp
cli
leave
jmp
push
mov
xlat
xor
mov
test
inc
cs
xchg
jp
jo
pop
movl
mov
out
test
sub
push
or
sti
hlt
or
movsb
mov
sti
mov
lock
mov
shr
push
daa
sub
and
push
es
xor
push
xor
xor
aas
hlt
jb
cmpsl
out
cmpsb
dec
pop
js
push
cmc
dec
add
iret
scas
ja
pop
jno
pop
mov
pop
fildll
mov
adc
test
sarb
inc
sub
push
xor
jae
push
adc
mov
xchg
fistpll
lea
adc
shl
add
int
in
xchg
sbb
jae
mulb
int
xor
cmp
and
mov
adc
jne
adc
popf
inc
sub
loope
rclb
jns
dec
cwtl
mov
test
inc
mov
cmp
iret
xchg
insl
add
ret
lahf
test
pop
adc
rolb
roll
lret
xchg
js
jg
ret
and
lods
mov
add
or
leave
sbbl
sub
mov
cltd
pop
inc
ja
add
inc
lcall
sbb
ss
push
push
in
dec
mov
aas
inc
xor
sbb
inc
sub
dec
insb
je
iret
push
adc
adc
cmpsw
pop
mov
xchg
mov
push
xor
insb
lret
addr16
lods
lret
inc
mov
pop
repz
push
inc
dec
lahf
cmpsl
movsl
adc
xlat
mov
push
popa
test
andb
xor
push
fwait
mov
xchg
jmp
cmp
neg
push
mov
imul
nop
mov
icebp
pop
repz
pop
inc
movsl
les
mov
in
in
fldcw
and
sub
rcll
scas
mov
leave
and
stos
inc
cltd
jb
inc
negb
xor
or
jmp
rorb
daa
outsb
push
fadds
push
daa
cmpsl
ficoms
xor
popa
pop
add
push
in
sti
mov
xchg
fstps
sahf
pop
push
mov
push
pop
jg
arpl
push
test
push
pop
fisubs
xchg
cmp
add
dec
mov
fiaddl
iret
jbe
xchg
in
int
aad
dec
aad
shrl
ljmp
scas
aad
fmul
in
sub
and
mov
pop
scas
mov
sarl
outsl
push
lods
mov
mov
enter
arpl
pop
jnp
mov
mov
icebp
jae
fnstsw
add
or
and
loop
sub
scas
and
lcall
inc
mov
sub
sahf
sti
out
jmp
imul
int3
cmp
xchg
rcrb
and
pusha
or
loop
loop
jno
mov
ret
test
addr16
mov
mov
jge
xor
ret
fwait
add
icebp
lret
ret
jnp
push
aaa
dec
test
pop
mov
pop
sub
test
fcomps
shll
in
scas
pop
xchg
sbb
pop
mov
sub
mov
notl
fildll
mov
push
cli
ljmp
ret
add
mov
mov
insb
dec
xor
mov
jg
cld
inc
add
sbb
test
call
in
pop
in
mov
mov
ds
movsl
lret
jnp
dec
mov
out
lea
add
or
test
cmc
or
out
inc
fs
or
stos
gs
scas
adc
dec
jl
icebp
stos
push
xor
std
out
or
inc
in
dec
mov
jl
cmp
loope,pn
mov
sti
clc
mov
dec
jb
rolb
cmpsl
inc
ret
aas
sahf
lret
mov
ret
std
mov
push
pop
ljmp
and
out
push
flds
shlb
fldenv
add
loopne
das
fdivs
scas
jmp
jns
int3
sub
sbb
or
pop
lods
lcall
cmp
cmp
iret
add
clc
or
add
ss
xchg
dec
fsubs
jp
mov
jl
repz
sbb
cli
popf
fs
mov
mov
addb
sbb
sub
ds
ds
jae,pn
add
xor
daa
out
outsb
pop
mov
lods
mov
test
insl
cs
dec
or
loope
or
ljmp
shlb
fistpll
dec
lds
das
pop
test
out
xor
cmpsl
je
dec
movsl
pusha
enter
mov
and
push
xor
movsl
iret
add
dec
gs
xor
bound
cmp
jbe
jg
aam
sub
mov
jae
and
fs
mov
stc
mov
imul
xor
inc
pop
mov
arpl
test
pushf
out
adc
mov
sbb
in
repz
mov
lods
lcall
aas
pusha
sahf
fiaddl
inc
js
and
fsubl
xchg
fs
dec
inc
xchg
mov
rcl
pop
mov
sub
add
inc
sub
mov
leave
adc
xchg
inc
mov
shll
int
sub
mov
sbb
push
jg
lods
fcomp
leave
xorl
addr16
sub
dec
and
imul
pushl
and
dec
mov
mov
bound
adc
rcrb
fcmovbe
lcall
sahf
in
imul
xchg
sub
xchg
xchg
dec
jns
cwtl
andb
xlat
sub
xchg
movsb
dec
out
jns
lahf
push
ficomps
insl
sbb
mov
out
fistps
aad
mov
push
add
jmp
fldl
loopne
jo
addr16
adc
jne
jmp
inc
imul
cmp
das
mov
adc
imul
aad
js
pop
jecxz
mov
dec
jmp
fwait
sbb
jo
lret
fists
insl
inc
xchg
pop
push
push
xchg
out
cltd
orb
mov
mov
lock
sbb
not
repz
test
scas
je
pop
push
fnstsw
push
rorb
daa
xchg
loop
iret
daa
cwtl
bound
pusha
xchg
lock
lods
mov
push
sbb
bound
shr
or
std
cmp
jne
pop
cmp
fsubrl
dec
lret
push
cltd
dec
out
cmp
rorb
out
ret
fstpt
add
adc
loopne
adc
sbb
repz
mov
pushl
push
leave
leave
arpl
lods
jmp
pop
int3
out
je
lods
and
mov
jae
pop
movsb
mov
jns
xchg
shlb
jo
inc
xor
pop
or
rol
mov
xchg
xor
xchg
sbb
push
pop
loopne
xorb
lret
cli
in
daa
mov
xlat
setnp
pop
je
test
cmpsl
repz
push
jns
fimull
iret
fst
fidivs
lds
xor
loopne
ljmp
push
idivl
insb
jg
mov
movsl
sbb
pop
fsubl
mov
in
push
push
pusha
push
pop
dec
addr16
or
xchg
sbb
lds
clc
out
jnp
test
je
adc
xor
push
ss
push
xchg
mov
daa
in
or
mov
and
pop
lods
and
sbb
xchg
std
lahf
xlat
leave
pop
loop
xor
jmp
inc
dec
sub
xchg
jnp
mov
pop
jl
push
jo
addr16
xor
mov
pop
ljmp
cmp
mov
shll
add
or
jne
aam
xlat
sub
mov
dec
sbb
jl
test
bound
mov
das
sub
cld
lods
inc
dec
jmp
cmc
ljmp
xchg
or
aas
and
fmul
or
or
mov
daa
jle
sti
or
clc
lea
sub
or
ja
test
rorl
or
imul
inc
fmull
sbbb
adc
xchg
daa
or
mov
cmp
and
jnp
int
dec
inc
jp
mov
mov
test
push
add
cli
lahf
jge
or
jge
sbb
push
dec
movsl
dec
aas
out
rolb
hlt
sub
orb
pop
cmp
loop
sti
frstor
pop
std
test
arpl
adc
jb
stos
shrb
jmp
scas
scas
fildll
add
inc
add
insl
adcb
es
ja
mov
sahf
fmul
mov
fwait
mov
aaa
lock
orb
push
adc
fdivs
and
lds
imul
push
dec
add
popa
mov
popa
pop
mov
dec
and
jno
sarl
mov
sbb
pop
daa
sub
pop
scas
in
pop
inc
sub
mov
out
jno
push
jle
inc
rcrb
dec
jbe
jno
cmp
and
and
scas
pop
shlb
imul
xchg
pop
mov
cltd
cmp
lahf
mov
mov
mov
mov
jne
dec
pop
adc
dec
arpl
jo
or
in
cmp
movsb
pusha
cmpsl
arpl
lock
popf
push
mov
inc
iret
and
jecxz
pop
movsl
es
jp
aam
into
call
sti
mov
cltd
js
loope
jmp
xor
pop
lods
xor
iret
fldcw
bound
inc
rcrb
clc
pop
jmp
jbe
push
push
in
jno
fbstp
aaa
out
inc
adc
ret
push
lcall
mov
fdivp
add
in
jnp
or
cmp
cmp
rcll
repz
cs
push
ja
cmpsb
mov
das
adc
mov
andb
aam
jmp
sub
int3
inc
lret
jp
mov
mov
and
jno
jae
cmpl
inc
push
push
out
nop
stc
imul
push
dec
data16
cmpsl
repz
in
add
ret
je
push
repz
andb
jo
cli
sti
sahf
pop
inc
arpl
shlb
jmp
adc
push
inc
imul
aas
jns
das
loopne
adc
mov
pop
insl
stc
das
shrb
xchg
in
sbb
inc
adc
xor
scas
dec
mov
jmp
test
je
inc
gs
hlt
mov
leave
aas
dec
loopne
daa
sahf
jae
mov
add
lcall
mov
das
pop
push
cmp
aaa
jg
pop
icebp
push
pop
cmp
in
mov
mov
and
insl
pop
jecxz
fsubrl
mov
pushf
cwtl
mull
cmp
mov
sbb
mov
jns
dec
pop
das
daa
cmc
fdivs
pop
dec
lods
lret
aam
aam
add
mov
mov
fcmove
stos
cmp
ja
cmpsb
xor
add
imul
cwtl
inc
sbb
and
ljmp
testb
mov
adc
insl
sbb
or
pushf
subb
add
mov
jl
leave
xor
mov
mov
mov
and
test
add
call
pusha
sub
testl
dec
js
sub
lahf
psrld
in
std
push
lock
dec
int
nop
lea
xchg
push
stos
push
lods
inc
mov
loop
pop
mov
incl
and
xchg
call
in
aam
sarl
call
add
xchg
mov
push
jnp
pop
push
sub
fildll
mov
mov
int3
mov
int
add
mov
and
push
loop
xchg
pop
push
popa
test
fwait
sti
mov
mov
pusha
cli
add
iret
dec
cmpsl
std
sub
flds
rclb
movsb
imul
leave
mov
push
add
mov
xchg
dec
test
push
mov
or
cld
and
sbb
aaa
movl
xchg
shl
jp
mov
xchg
adc
out
inc
mov
mov
sub
sub
mov
enter
lock
shlb
and
cmc
imul
mov
jae
inc
xchg
adc
pop
lret
inc
push
cmpsl
mov
add
push
cli
ret
adc
xchg
outsl
cwtl
sub
inc
and
jmp
xchg
jo
and
and
inc
add
mov
iret
sbb
fidivrl
add
dec
add
cs
push
add
xchg
push
mov
repnz
adcb
xchg
push
repz
mov
or
inc
or
lret
sub
xchg
shrb
inc
orb
sub
mov
jp
mov
add
test
or
test
mov
dec
insb
pop
adc
push
mov
data16
nop
repnz
mov
imul
lds
xchg
inc
inc
addl
bound
addr16
scas
sbb
andl
cld
sub
mov
scas
jl
push
std
xchg
xchg
ud0
fcompl
xor
dec
sub
fwait
out
loop
pop
push
mov
dec
pop
loope
mov
loopne
daa
add
push
push
lret
pop
jnp
inc
repz
das
out
cmpsl
rorl
rcrb
std
mov
divb
out
and
xor
fimull
or
adc
sbb
sub
dec
repz
test
mov
loope
pushf
and
loopne
out
gs
inc
pop
scas
std
aam
push
jmp
jbe
mov
imul
outsl
test
add
loop
dec
add
int3
jge
adc
dec
mov
sub
jae
push
cmpsb
mov
and
pop
mov
rol
xor
mov
add
xchg
mov
jnp
inc
push
mov
sbb
or
push
xor
adc
push
mov
movsb
mov
lret
adc
lret
mov
sbb
ret
icebp
addl
add
ja
in
or
fdivl
sti
cvttps2dq
mov
mov
sahf
xor
fildl
movsb
stos
pop
js
inc
xor
adc
lahf
adcb
cmp
loope
or
sbb
adc
movsb
xor
movsb
subl
push
or
in
stc
mov
adc
inc
cmp
fwait
push
stos
pop
inc
pop
xchg
dec
cmp
pop
mov
jo
mov
les
leave
mov
aad
out
jne
call
jge
mov
sub
dec
jmp
mov
jg
sub
push
pop
or
mov
sbb
cmp
in
xor
sbb
pop
mov
lods
mov
aam
dec
loope
xor
dec
or
mov
insb
lcall
shrb
rclb
out
xor
pop
pop
xor
scas
mov
cli
push
loop
inc
ljmp
fs
ss
xlat
lcall
in
int
out
jg
add
cmpl
scas
add
dec
xchg
xchg
or
mov
jnp
dec
mov
das
dec
xchg
pop
shlb
int
inc
clc
push
mov
xchg
pop
add
xchg
mov
mov
adc
ljmp
cmpsb
xchg
pop
sub
out
sbb
scas
lret
popf
mov
repz
mov
pop
roll
add
mov
out
sub
aaa
test
mov
fstps
addr16
mov
or
xor
mov
popf
inc
mov
in
mov
mov
es
jge
sbb
lea
and
or
jnp
and
shl
cli
mov
aas
pop
mov
mov
cmp
fstpl
cli
mov
lcall
call
jmp
mov
das
lea
imul
outsb
mov
fdivrp
test
xchg
pop
sub
jnp
and
or
cmpsb
clc
inc
xlat
pop
push
hlt
test
jb
adcl
dec
mov
add
adc
or
push
std
pop
mov
sbb
mov
jle
repnz
pusha
in
out
fldl
ljmp
loop
in
lret
mov
push
adc
int3
inc
ss
and
std
jnp
jge
mov
pop
xor
jae
dec
scas
test
mov
inc
das
mov
loopne
in
adc
push
js
data16
mov
mov
std
xor
sarb
ja
adc
xchg
inc
push
aad
ja
add
and
fnstsw
lret
xchg
inc
into
imul
cmp
xor
cmp
adc
cmp
mov
scas
xor
inc
fdivrs
int3
jnp
insb
lods
or
xor
fistpll
movsl
sbbl
bound
push
and
mov
punpckhwd
es
push
test
add
cmp
mov
outsl
bnd
dec
loope
popf
in
lods
shll
sbb
xchg
mov
pop
mov
mov
incb
mov
fidivrs
pusha
sub
mov
std
test
in
out
jno
ljmp
jp
inc
movsl
mov
pop
mov
mov
fcoml
sub
cmpsl
xor
dec
mov
add
sub
mov
stos
mov
mov
mov
jb
xor
sub
sbb
mov
lods
jl
jbe
xor
cwtl
add
lret
scas
aam
imul
es
popf
pushf
insb
mov
test
pusha
push
scas
movsl
jge
gs
outsl
enter
adc
aad
push
insl
insb
sbb
sbb
cmp
repnz
sbb
sub
stos
je
sub
mov
arpl
dec
lret
fdivrs
ret
ja
addr16
add
sub
sbb
movsb
sbb
rorl
enter
std
fwait
pop
stc
dec
mov
stos
stc
jl
sbb
jne
push
enter
xchg
and
dec
icebp
push
adc
clc
call
mov
icebp
rorl
test
cwtl
js
sub
xchg
scas
adc
fnstsw
clc
mov
xchg
mov
xchg
mov
push
jae
mulb
scas
movsb
mov
int
nop
cld
sbb
mov
ficoms
sub
mov
add
sub
int
or
cmpsl
adc
rorb
add
out
leave
outsl
jno
and
xlat
iret
lods
test
push
inc
stc
xor
pop
jp
pop
dec
sbb
adc
mov
adc
push
and
lods
jmp
lock
add
frstor
fcomps
cmc
fdivrs
or
mov
inc
push
fs
or
sbb
add
push
ret
jmp
jns
xchg
mov
mov
repz
int3
sbb
popa
pop
cli
add
sbb
mov
dec
popa
sti
push
or
jbe
jg
jno
jmp
push
cli
mov
lock
add
add
mov
fcoml
push
xorb
jbe
lods
rcll
arpl
sar
xchg
test
jmp
ficoms
jnp
test
aas
mov
fcmove
icebp
lret
pop
xchg
vmread
jns
adc
in
push
fisubrs
jne
inc
mov
xor
fcos
arpl
out
pop
pop
sahf
fidivrs
pushf
or
cmp
mov
stc
cltd
mov
push
ret
aas
inc
daa
mov
ljmp
sub
mov
mov
or
add
lods
loopne
jp
movsl
out
xor
in
nop
imul
jg
es
ja
cwtl
cmc
mov
jbe
inc
mov
add
fimull
sarl
les
arpl
out
fstpl
jne
mov
dec
dec
inc
les
push
push
xlat
les
out
xor
jge
outsl
mov
lods
sbb
mov
mov
mov
jmp
jmp
or
int
stos
mov
xor
aas
test
outsl
cs
xlat
in
mov
fildl
inc
ret
jnp
ljmp
xchg
sbb
lods
es
mov
pusha
divb
movsl
pop
movsb
inc
mov
mov
pusha
push
inc
loop
sar
cmp
or
test
ljmp
popa
push
xchg
sbb
das
mov
sbb
dec
pop
mov
call
sub
xorb
adc
xchg
xchg
or
ja
inc
jg
leave
ror
xchg
xor
shl
sbb
lret
xchg
aas
sbb
repz
inc
push
pop
push
fdivl
fwait
data16
popa
pusha
fs
aam
and
nop
fwait
add
mov
pop
pushf
iret
jb
pop
test
and
cmp
pusha
and
movsl
jmp
cld
shr
les
sub
lods
pop
mov
icebp
mov
ds
out
xchg
fucomi
js
cltd
icebp
push
sub
idiv
inc
int3
cmp
add
mov
push
jecxz
add
inc
push
aas
fidivs
pop
push
xchg
out
sbb
mov
xchg
hlt
cmp
jb
incb
rcl
dec
or
sbb
pop
push
pop
ss
add
andl
mov
xor
mov
out
or
lock
lahf
roll
in
add
lret
fcmovb
pop
je
xlat
out
mov
xor
roll
pop
jmp
js
jno
pop
decl
imul
dec
xorl
ja
mov
adc
inc
mov
punpckhdq
movsb
or
cmp
outsl
push
cltd
lock
xor
js
je
popa
add
shlb
outsl
sub
inc
push
decl
loop
out
aas
push
inc
es
cli
or
aad
es
xchg
clc
stos
dec
testl
mov
test
in
mov
movl
jg
scas
arpl
loopne
outsb
js
cli
pop
and
loope
ret
inc
lahf
inc
xchg
pop
arpl
and
hlt
mov
aam
or
inc
neg
imul
fsubrl
or
push
mov
mov
add
xchg
mov
pop
add
out
andl
mov
in
mov
inc
jae
inc
inc
xchg
insb
adc
int3
mov
stos
xchg
insb
nop
aas
push
xor
mov
dec
out
add
repnz
aas
pop
data16
stos
fldt
sub
and
sarl
dec
mov
mov
push
insb
mov
rolb
daa
inc
pop
stos
jnp
fisubrs
pop
sbb
addb
lret
les
xor
mov
out
fldl
call
decb
mov
dec
cmovne
leave
fwait
jle
add
fdivl
pushf
lahf
lret
and
movsl
inc
pop
cmp
data16
inc
mov
aaa
mov
stc
jmp
adc
int3
push
in
cmp
jecxz
sub
jo
fistps
sbb
std
inc
inc
stos
test
mov
in
jbe
inc
sub
jnp
sbb
int
jbe
sbb
mov
pushl
dec
sbb
mov
sahf
mov
repnz
dec
aad
ljmp
sbb
mov
add
in
lret
repnz
fucomip
mov
jns
mov
lcall
or
pop
pop
mov
lods
sbb
sahf
and
pop
push
and
mov
jmp
adc
mov
rep
scas
mov
push
imul
repnz
adc
lods
xchg
xor
insl
mov
into
pop
out
das
pop
sbb
lahf
sti
or
sahf
insb
or
fimuls
daa
jl
pop
inc
imulb
dec
and
popl
test
sbb
sbb
in
int
dec
adc
stos
push
or
fs
mov
loopne
jecxz
mov
mov
and
fs
cmpsl
cmc
aas
cld
and
push
lods
add
mov
in
insb
mov
pusha
vpmulhuw
inc
sbb
outsb
push
aam
or
xchg
sub
fidivs
into
imul
fstl
nop
adc
or
sub
push
cmp
push
enter
xor
loope
js
sbb
jbe
gs
pop
insl
xor
lock
and
ja
out
inc
sti
mov
mov
push
std
xchg
add
cmp
enter
push
fcompl
cmp
roll
or
sti
loop
add
push
mov
shll
mov
daa
pop
push
sbb
sub
mov
arpl
xlat
lea
addb
hlt
push
xchg
in
fsub
cld
or
mov
add
xchg
mov
dec
lcall
mull
mov
sbb
stos
div
jmp
lahf
lods
rcrb
enter
sbb
sbb
cltd
in
repz
js
lea
cmp
lods
dec
test
daa
xchg
in
adc
xchg
sbb
inc
jp
add
mov
jp
rolb
mov
jge
push
repnz
aaa
xor
and
mov
shlb
loopne
pop
jl
outsb
inc
mov
xor
sbb
push
dec
push
jnp
sbb
xchg
xchg
cmpsl
dec
or
or
insb
mov
cmpsl
scas
xor
mov
das
and
mov
andb
sub
dec
insb
cmp
mov
cs
mov
popa
aam
lahf
pop
cmp
mov
movsb
inc
xor
insl
jno
mov
mov
xor
int3
cmp
mov
push
adc
xor
pop
lcall
fisttpl
dec
ljmp
xor
movsb
daa
pop
mov
arpl
scas
xchg
xchg
dec
sbb
dec
int3
adc
jbe
in
cmp
mov
loope
push
push
int3
xchg
inc
adc
jb
lea
insl
stos
fcmove
inc
aaa
cmpsl
mov
cmp
pop
pop
iret
aad
adc
nop
loope
cmp
cwtl
lods
inc
repz
inc
push
mov
loop
inc
or
popl
push
popa
cld
fstpt
jl
out
xlat
imul
push
add
popf
insl
fcomps
pop
xchg
lods
mulb
xchg
mov
shrb
lods
pop
scas
fsubr
daa
sbb
in
lret
pop
imul
loope
cltd
jno
outsl
sbb
push
lods
fnstsw
pop
and
fnstsw
push
sbb
loopne
cs
inc
and
or
pop
test
pusha
scas
sbb
xchg
mov
mov
std
out
mov
dec
mov
mov
add
dec
filds
out
lret
sub
and
sbb
adc
sub
sub
pop
and
int
inc
cli
jo
dec
outsl
or
movsb
cmp
add
popa
push
dec
fmull
cwtl
daa
dec
push
inc
inc
addr16
inc
sbb
push
xchg
adc
int
mov
pop
adc
push
adc
decl
in
lcall
or
test
inc
cmpsb
lar
push
std
mov
inc
xor
sub
js
or
pop
imul
sbb
adc
test
popa
iret
dec
pop
push
stc
jbe
push
push
jmp
loopne
dec
cld
adc
push
lock
cmpsb
mov
xchg
mov
shrb
and
xchg
inc
mov
dec
outsb
cmc
adc
push
cmp
jnp
call
mov
and
mov
fwait
sub
pop
inc
pop
mov
mov
jb
gs
and
ds
jecxz
ds
shlb
outsl
add
inc
cli
rorl
mov
mov
movsl
and
sbb
xchg
and
out
mov
or
scas
push
lods
adc
cmp
notb
dec
aam
cmp
mov
movsb
pop
or
dec
xchg
sub
ret
or
jp
cld
ret
scas
push
test
mov
mov
xchg
dec
jno
mov
repz
out
jno
stc
and
add
gs
movlps
dec
mov
push
push
add
mov
lcall
jo
ljmp
cmovs
popf
or
shl
iret
adc
movsb
xchg
loop
xchg
push
in
enter
pop
pop
or
daa
push
pop
add
push
lcall
or
hlt
mov
mov
mov
push
push
dec
xchg
loop
push
mov
xchg
mov
mov
jmp
sbb
rcll
cmp
xor
out
mov
fwait
and
ret
jns
inc
loop
sbb
scas
gs
int3
pop
out
js
loope
push
sub
loopne
in
sbb
sub
push
push
jno
jmp
addr16
mov
je
inc
cmp
or
ja
mov
dec
roll
imul
mov
sbb
loop
mov
lret
ss
and
inc
stos
xor
loopne
imul
outsl
inc
call
jb
dec
xor
movsb
sbb
popa
jno
popa
xchg
les
cmp
jne
cmpsb
rorb
xchg
mov
es
lods
aaa
fsubs
sub
mov
mov
fsts
or
outsb
fs
into
out
mov
jmp
mov
aaa
xlat
cwtl
or
cmpsl
pop
lods
jp
popl
stc
les
cmc
mov
lods
sub
xchg
lcall
xor
ja
popf
inc
out
add
add
ret
mov
adc
jbe
jmp
xor
fistps
inc
dec
mov
mov
lods
leave
dec
int3
shrl
imul
roll
cmp
popf
test
cmp
push
aas
mov
xchg
rcrl
xor
cmpsl
mov
xor
push
cld
mov
sbb
sub
push
add
pop
or
lods
mov
mov
push
pop
test
adcl
add
cmp
mov
divl
add
push
bound
scas
inc
xchg
adc
cmp
cmp
pop
xchg
cmpsl
lret
xchg
add
cltd
outsl
push
mov
andb
pusha
icebp
fcmovnu
int
loop
sbb
rep
inc
push
cmp
fdivrl
shlb
das
aaa
fstl
inc
popf
imul
sti
dec
push
sti
jnp
xchg
xchg
xor
lret
aad
shr
scas
fsubrl
push
out
push
ds
stc
cmc
enter
xchg
mov
sbb
hlt
addr16
ds
xchg
or
mov
outsb
xchg
mov
repnz
leave
adc
adc
adc
lods
cmp
das
mov
bound
outsl
lcall
call
arpl
xchg
mul
stos
mov
inc
sbb
fbstp
div
push
arpl
ljmp
outsb
int
mov
es
adc
dec
lret
pushl
dec
sbb
mov
mov
or
call
ret
adcb
out
and
inc
and
imul
fisubl
jg
mov
add
sahf
out
sti
adcb
es
pop
neg
out
imul
stos
xor
mov
dec
aas
inc
lret
add
pushf
push
jle
fisubrs
test
xchg
mov
adc
cmp
ficompl
aaa
fdivrl
lcall
rclb
xlat
incb
bound
addr16
mov
push
add
or
ret
and
loopne
sbb
mov
sub
arpl
xor
aad
add
addl
mov
fisubrl
sbb
mov
xchg
jl
fmull
xor
rcrl
test
mov
push
mov
xor
fidivs
xchg
and
addr16
in
dec
mov
adc
mov
add
iret
jns
xchg
fisubrs
push
jmp
in
movsb
and
dec
mov
addr16
daa
or
aam
jnp
daa
outsb
cmp
cwtl
xchg
repnz
xchg
leave
push
mov
notb
dec
add
cs
movsb
roll
and
ds
orb
and
in
iret
lea
lcall
scas
push
or
sbb
xchg
repnz
dec
or
dec
cltd
ja
loop
daa
bound
aas
xchg
push
dec
lock
aam
and
adc
xchg
aas
or
mov
sarb
mov
mov
jmp
mov
jo
xor
jle
lods
push
jbe
xchg
inc
into
cmpsl
cmpsl
nopl
dec
into
rclb
pop
aaa
sbb
mov
gs
or
jg
pop
outsl
in
aam
sarl
xchg
or
mov
fiadds
inc
xchg
xor
mov
mov
jns
push
shll
or
jp
pop
mov
mov
add
dec
neg
push
jg
loopne
roll
jnp
mov
fnstsw
jns
sub
xchg
jle
movsl
dec
loopne
imul
subl
and
decb
xor
add
sbb
push
lea
push
sti
push
and
stc
sahf
xchg
xchg
stc
es
ss
or
jl
mov
mov
xor
mov
dec
push
mov
lcall
sub
jno
xor
add
mov
jo
in
lods
mov
push
repnz
pop
pop
out
jbe
test
jg
cwtl
popa
sahf
adc
xchg
aam
sub
ja
movhlps
push
mov
pop
pushf
cmc
loope
ret
arpl
xor
jb
sub
bound
pop
fstpl
in
and
sbb
push
rcrl
mov
sbb
or
add
mov
push
test
aad
push
dec
aas
sbb
push
push
sarb
cmpl
xor
sbb
cmp
adc
xchg
cmc
lcall
ss
ss
and
mov
jecxz
cmp
data16
in
into
add
dec
mov
or
lret
jmp
mov
cmp
ja
xchg
fldl
sahf
lds
jne
push
lods
out
popf
pop
adc
inc
push
inc
xchg
out
push
pusha
mov
movsb
mov
mov
and
addl
sahf
hlt
sbb
xchg
xchg
jg
adc
cwtl
js
in
shr
lcall
decl
push
movsb
or
jle
lcall
dec
mov
mov
stc
sbb
mov
adc
sar
fidivrs
in
xchg
fimull
std
ljmp
xchg
popf
int3
xchg
inc
cltd
aaa
and
lods
iret
in
mov
pop
inc
movsl
jle
inc
ss
mov
add
xor
jg
lds
movsb
push
mov
pop
push
mov
or
mov
or
and
or
call
push
dec
mov
jns
mov
mov
push
mov
fnsave
mov
outsl
into
jb
lret
leave
inc
cli
adc
subl
and
and
scas
pop
jecxz
popf
push
xor
aaa
fildl
dec
sbb
bound
jbe
lock
into
fcoms
fisubrs
icebp
rolb
mov
rcr
jno
pop
or
pop
ss
sbb
lret
shll
adc
repz
xor
cltd
outsb
sbb
adc
sub
jb
jge
cmp
pop
sub
jns
test
and
xor
inc
mov
xlat
bnd
nopl
pusha
ljmp
test
stos
mov
stc
push
pop
push
mov
in
popf
xchg
lds
call
aas
jb
incl
or
jmp
hlt
sub
pop
cld
push
test
xchg
lock
loop
fimuls
sbb
add
test
pop
into
dec
add
std
sahf
pop
push
fdivl
xchg
fsubrs
shr
dec
sub
ffree
push
rclb
jo
sub
arpl
adcl
imul
out
fcmovu
and
jnp
sbb
xor
rorl
cmp
dec
je
aaa
jp
dec
addr16
sbb
mov
jns
adc
cs
xor
mov
adcl
popa
sbbb
out
pop
sbb
clc
imul
sub
aas
and
pop
xchg
fsubrs
das
addb
lock
inc
out
pop
add
lds
and
pop
xchg
fdivrp
pop
pusha
fcompl
icebp
lahf
push
pop
xlat
enter
xor
js
inc
addr16
bound
add
mov
arpl
push
loope
jo
xor
je
in
adc
outsl
lret
je
push
mov
sub
out
push
mov
addr16
jge
aad
ficompl
jno
aas
dec
in
sbb
xchg
inc
xchg
mov
sbb
leave
mov
into
inc
xor
cli
push
in
pop
sbb
fs
imul
and
jp
scas
negb
int
es
inc
ljmp
imull
aaa
out
pop
dec
cli
sub
dec
jl
mov
ficoml
adc
and
cmpl
pushf
lds
or
and
mov
push
jle
sbb
lcall
pop
jge
push
rolb
cmp
and
or
mov
push
mov
push
inc
xor
lods
sbb
add
adc
xor
xchg
sub
in
aas
sbb
cmpsl
jbe
ja
cld
xchg
sub
cmp
aas
fsubl
mov
scas
xor
jae
sub
int3
xchg
lea
rcr
ja
pop
out
jge
fbld
cwtl
lds
xchg
mov
out
out
into
sti
lds
fsubl
out
or
decl
and
mov
pop
int
cld
lods
mov
push
inc
leave
adc
icebp
xchg
pushf
mov
arpl
inc
icebp
or
xchg
inc
test
pop
cmc
hlt
jge
cmp
and
jecxz
and
jmp
je
jecxz
jb
in
pusha
mov
lcall
mov
scas
mov
lods
push
mov
cmp
leave
ret
stc
mov
ds
push
sbb
and
xor
test
xor
dec
lods
xchg
out
add
cmp
iret
mov
stos
cmp
lret
xchg
cmp
xchg
or
leave
inc
iret
nop
jmp
loopne
mov
jmp
xor
dec
adc
dec
and
xchg
arpl
xchg
dec
aad
cmp
mov
mov
in
addr16
dec
add
sbb
sbb
push
mov
fs
stos
add
fwait
stos
imull
mov
xor
mov
shrb
cmp
dec
pushf
xor
in
movsl
jns
push
popa
and
test
mov
pop
repz
xchg
mov
daa
xlat
loopne
dec
aas
shrb
clc
pop
and
fildll
xor
test
pop
lret
xchg
scas
push
mov
pop
mov
inc
repnz
and
int3
cld
subl
mov
and
jo
das
test
js
ret
inc
fsubrl
lock
xor
cmp
mov
nop
in
aas
and
inc
lods
ficomps
loopne
es
cmp
pop
shll
push
cmp
popf
sbb
or
lahf
int
pop
fwait
nop
jns
test
add
repnz
dec
scas
xchg
xor
test
sbbl
test
push
outsb
xor
inc
and
mov
aaa
adc
adc
xchg
mov
xchg
add
outsl
les
into
outsb
mov
cmp
push
jge
mov
add
aad
pop
jl
stos
lret
mov
mov
mov
popa
adc
rcrb
les
adc
sbb
jno
dec
inc
sub
inc
mov
xchg
lods
xor
out
imul
push
push
out
push
orb
lea
call
fs
and
adc
mov
mov
invd
ja
push
test
xor
inc
movsl
xchg
test
in
test
adc
fidivs
jo
jo
popf
in
sahf
adc
mov
pushl
pop
mov
mov
stos
test
pop
and
pop
inc
push
repz
inc
sbb
inc
xor
push
fsubrs
adc
stos
sbb
add
push
lods
and
pushf
xchg
mov
jmp
flds
in
fmuls
xchg
push
sub
leave
cwtl
inc
and
js
aaa
pop
pop
dec
jg
mov
jl
popf
es
dec
fstl
out
inc
add
ljmp
daa
js
xchg
xchg
xchg
test
push
or
mov
and
jmp
sbb
xor
in
pop
stos
in
int
outsb
sub
dec
sti
iret
mov
xchg
mov
dec
imul
mov
shr
mov
ficompl
int
jge
push
inc
int
xor
ss
cmp
pop
add
repnz
pop
in
adc
mov
mov
or
enter
adc
es
xor
or
ds
xchg
push
xlat
int3
add
popa
mov
mov
or
jbe,pn
xor
push
xlat
adc
shrl
ret
test
dec
nop
lret
push
insb
out
adc
out
pop
push
jl
test
and
xchg
loope
mov
pusha
jle
or
cmp
imul
gs
jecxz
jecxz
xchg
xchg
xor
and
outsb
js
xlat
xor
xchg
push
cwtl
scas
aad
cs
push
adc
or
adc
pop
mov
fcomip
cltd
push
cmp
inc
mov
add
loop
test
mov
sbb
xor
pop
outsl
inc
push
xor
je
push
xchg
pushf
and
xor
ret
mov
or
push
mov
adc
movsb
lret
mov
mov
xor
dec
scas
mov
data16
mov
and
xor
fdivrl
out
jo
aas
dec
sar
imul
sbb
inc
sub
scas
ret
nop
fwait
aaa
leave
ljmp
pop
add
insb
ja
ret
mov
adc
pop
dec
mov
push
xchg
cwtl
outsl
insb
sbb
xchg
mov
idivl
xor
mov
subl
je
xchg
leave
insb
call
jle
add
sub
mov
ljmp
fisttps
fistpll
sahf
mov
push
dec
in
ficompl
push
mov
and
fsub
cs
jmp
fisubs
lret
mov
nop
push
add
jle
sbb
dec
test
or
xor
mov
xor
mov
sub
mov
mov
ja
add
inc
or
adc
jg
push
lods
xchg
rorl
mov
jl
orl
in
mov
fldt
rorl
popa
mov
loop
pop
repnz
xchg
pop
mov
ret
ljmp
xor
mov
push
push
sbb
sbb
sbb
or
inc
and
mov
mov
adc
mov
or
imul
push
xchg
dec
std
sub
fld
gs
shlb
fimuls
xchg
insl
pop
aaa
xor
in
test
loope
loopne
movsl
mov
inc
popa
push
mov
addr16
mov
aaa
xor
jae
jno
push
xor
push
rcl
sub
mov
outsb
mov
jb
mov
cmpsl
push
gs
ljmp
or
push
dec
mov
jb
mov
repnz
addl
ja
pop
cmp
sub
pop
dec
jl
push
pusha
mov
mov
cmp
dec
lods
and
leave
pushf
mov
inc
shll
or
lcall
not
insl
stc
mov
scas
pop
xchg
shlb
adc
sbb
mov
jle
xlat
jmp
lea
fiaddl
ret
xchg
sbb
sub
nop
lret
mov
dec
das
or
daa
xchg
and
xchg
sub
mov
call
shrb
leave
cmp
adc
test
xor
shll
cmp
insl
movsl
ret
mov
pop
mov
loopne
cwtl
stc
out
jnp
popf
mov
fwait
push
jge
lret
xor
shrl
subps
push
inc
sarl
mov
lret
aaa
scas
push
adc
mov
mov
or
stc
jne
sub
push
out
dec
call
insb
arpl
sub
leave
jge
lods
inc
mov
inc
mov
lret
or
mov
add
push
rol
xchg
sbb
cmp
test
addl
inc
or
movb
lods
ficompl
xchg
pusha
cmpsl
lock
cli
test
mov
push
or
adc
push
mov
movsb
scas
popf
in
test
inc
aaa
dec
in
mov
adc
rcl
push
mov
fidivrl
stos
das
jle
push
js
fistps
rclb
push
cmp
lret
mov
add
loope
into
fs
popf
inc
mov
xor
shll
inc
adc
shld
pop
adc
into
push
scas
sub
shrb
sbb
jmp
aas
sub
loop
pop
lock
pop
rcrl
sub
adc
cmc
int3
loop
lcall
fisubrl
cmp
iret
cld
test
pop
movsl
mov
push
add
push
jb
lret
jns
mov
out
xchg
subl
pop
mov
sbb
mov
in
sub
and
sub
add
out
out
sub
lret
push
jg
cltd
inc
dec
inc
ss
xor
and
mov
ss
imul
repz
scas
out
in
hlt
fcoms
xor
jb
mov
lcall
loope
test
hlt
shlb
jmpw
mov
pop
cmc
cld
xor
bound
mov
test
push
cmp
jns
push
cmp
mov
xor
jno
adc
enter
xor
cmpsl
and
cwtl
xor
iret
adc
loopne
cld
adc
inc
pop
inc
daa
jae
stos
mov
int3
bound
aas
and
sbb
mov
nop
pop
lcall
dec
lods
push
ljmp
mov
push
jge
mov
inc
cltd
xchg
mov
push
dec
push
ljmp
cmp
jae
mov
mov
jne
inc
cmpsb
mov
add
mov
mov
lea
push
js
inc
movsb
or
dec
jb
mov
dec
les
cmp
and
and
add
repnz
scas
or
dec
in
push
js
xor
xchg
icebp
mov
pop
scas
fcoml
orb
std
iret
dec
xor
mov
mov
insb
xor
ljmp
adc
fistl
cltd
cmc
insl
add
scas
xchg
jg
and
push
xor
scas
dec
popa
dec
jbe
pop
decb
mul
cmp
mov
sbb
in
push
fadds
pop
add
jl
cmp
imul
adc
bound
cmpsb
xlat
rcrb
ficompl
test
jbe
daa
mov
outsl
mov
or
jl
sbb
and
test
cmpsl
mov
packsswb
lock
fwait
in
mov
in
adc
insb
out
jb
out
or
aas
sub
test
cwtl
loope
lahf
cld
xor
add
mov
xor
add
xchg
jb
pop
fabs
movsl
imul
aaa
adc
fists
fsubrs
arpl
mov
retw
movsb
inc
test
jb
jl
clc
dec
jne
inc
xabort
lock
add
leave
es
fmull
jne
dec
sbb
jle
inc
leave
jae
mov
jg
ret
fst
and
in
jle
data16
adc
loop
pushf
add
dec
aas
cmp
lock
jecxz
sub
sub
int3
rorl
jns
movsb
in
inc
in
or
scas
pop
mov
pushf
js
fbld
dec
loopne
mov
xlat
icebp
cmpsb
jl
pop
shrl
ret
mov
outsl
scas
dec
lcall
sbb
mov
jb
push
dec
mov
xor
aaa
cmp
add
sub
push
adc
dec
and
mov
mov
test
xor
mov
add
lods
sbb
jae
lea
sahf
scas
pop
shl
jno
pop
push
add
pop
shll
insb
movsb
roll
test
mov
lret
sub
push
jbe
add
lods
cmp
and
xchg
and
cmp
and
aaa
inc
out
and
icebp
mov
popa
jnp
adcl
sub
and
inc
loope
imul
dec
mov
sbb
icebp
subb
addr16
push
xor
pushf
fimull
jne
outsb
sbb
sub
and
les
sub
test
movsb
inc
aad
movsb
testl
lcall
cmp
rcrb
or
cmpsl
sub
or
fidivl
fsubrl
outsb
lock
xchg
ret
in
mov
pop
jl
dec
cltd
in
xchg
add
jnp
out
pop
inc
outsl
arpl
fisubl
mov
movsl
pop
add
pop
dec
dec
mov
dec
frstor
lret
sbb
sub
sbb
lods
cmp
jle
adc
push
lcall
adc
pop
fwait
cmp
std
ret
inc
sbb
rcrb
mov
mov
jle
mov
ret
mov
pop
jg
xchg
xchg
add
mov
in
int
outsl
imul
add
in
mov
cwtl
aad
call
test
insl
dec
add
sbbb
or
fs
push
into
and
mov
call
xorb
mulb
subb
xor
or
cmpsb
loope
stc
mov
andb
xchg
xchg
and
aaa
sbb
jne
leave
dec
aad
sbb
push
test
adcb
mov
push
inc
push
loop
in
sbb
xchg
xchg
je
sbb
into
pop
push
lahf
std
hlt
mov
into
sbb
lahf
movl
fsub
xchg
lea
ret
lcall
mov
pop
out
or
iret
push
mov
push
imul
ficomps
jbe
in
in
pop
mov
fistps
cwtl
jp
out
movsl
popf
inc
jg
mov
add
popa
or
cld
mov
aam
in
fs
mov
testl
xchg
jnp
leave
xorl
movsl
stos
cli
sti
sbb
lret
inc
ret
test
adc
mov
stc
in
sbb
xor
mov
cmp
imul
add
in
inc
std
repz
pushf
mov
jmp
outsb
nop
adc
jl
pusha
pop
push
or
xor
shl
sub
iret
mov
popf
scas
xor
jbe
add
xor
sbb
cmp
or
out
mov
js
fisttps
xchg
or
sti
pop
or
addr16
imulb
prefetch
leave
mov
or
les
ret
mov
lods
inc
mov
add
and
mov
adc
adc
inc
pop
mov
loopne
imul
mov
lret
xchg
insl
ja
mov
dec
pop
xor
mov
and
pop
xor
shl
iret
ret
sarl
stos
lret
push
adc
xchg
insb
rcl
inc
enter
pop
mov
sub
lods
ficomps
jp
ds
jmp
cltd
movsl
or
scas
or
fwait
xchg
ficompl
xor
sti
mov
inc
inc
xchg
in
inc
jg
sbb
and
xor
add
and
add
cld
inc
pop
push
shlb
cmp
lods
jmp
pop
je
aas
fs
xor
inc
lods
mov
filds
xor
ret
nop
ja
mov
psubq
jbe
mov
lcall
insb
and
xchg
popf
pop
mov
scas
add
cld
in
cmp
pop
lret
pop
popa
xchg
push
mov
sbb
xchg
js
push
sub
inc
cmpsb
sarl
out
das
rorb
ffreep
pop
jns
adcb
aaa
ficompl
gs
add
xchg
popf
xor
sbb
in
cmpsb
mov
fwait
xchg
push
cmpsl
cli
enter
mov
hlt
scas
shl
jg
jl
ficoml
xor
fcmovbe
jp
xor
pop
inc
jge
add
ljmp
mov
jecxz
pop
test
aam
es
cmp
mov
xchg
iret
inc
xor
add
movsl
jno
add
jno
sub
inc
mov
mov
cmp
and
adc
dec
adc
out
xor
int3
rol
sub
sub
dec
push
pop
rorl
cmp
hlt
nop
arpl
mov
adc
ds
fists
and
movsl
sub
sub
xor
insb
cmpsl
outsl
call
cmp
ljmp
pop
or
filds
sub
clc
mov
mov
lock
xor
clc
popa
or
roll
test
popa
pop
insl
xchg
scas
xchg
mov
outsb
xor
out
mov
xorb
mov
decb
mov
gs
aad
shll
in
sub
mov
mov
xor
into
cmp
pop
incl
xchg
jns
pop
mov
insb
scas
lahf
dec
lds
cmp
add
or
pop
push
es
rcll
gs
pop
popa
test
pop
lcall
cmp
mov
cltd
and
sub
aam
jbe
or
dec
and
mov
aam
inc
movb
push
jl
rolb
lock
sbb
or
imul
add
andb
jecxz
mov
outsl
mov
xlat
xor
mov
mov
dec
sahf
mov
sub
mov
xor
xchg
nop
or
outsb
push
xchg
call
xchg
dec
add
notb
push
xor
pushf
mov
insb
test
je
mov
pop
clc
pop
mov
or
jecxz
xchg
test
imul
mov
mov
mov
fcoml
cmp
fcmovbe
inc
decb
sub
dec
jmp
out
push
mov
cmpsl
imul
xor
mov
jo
xchg
lods
pusha
jge
cwtl
push
jge
stc
lock
fldenv
aas
adc
mov
dec
dec
add
ja
or
sub
fsubr
std
sub
pop
mov
add
sti
inc
cmpsb
push
imul
fidivrl
scas
ja
mov
ds
xchg
mov
mov
inc
popa
mov
fiaddl
xchg
push
xor
jmp
dec
divl
mov
cmpsb
bound
stc
in
mul
cs
hlt
mov
dec
or
aam
inc
sarb
push
aas
inc
jnp
push
push
addr16
call
enter
insb
aad
push
dec
repnz
data16
leave
fs
pop
or
divl
sub
je
ds
and
rcrb
pop
add
shlb
cmp
mov
icebp
icebp
cmpsb
mov
or
inc
xchg
in
mov
add
scas
jae
dec
xchg
mov
mov
lds
cmp
add
mov
std
stos
aam
and
rorb
movsb
popa
insb
pop
subb
mov
push
mov
aad
xor
pop
cltd
dec
push
pop
in
cmc
mov
lret
cwtl
into
mov
pusha
adc
int
and
push
nop
dec
insb
out
data16
insb
fstl
jae
pushw
mov
sahf
sbb
daa
fucomi
test
cmp
clc
stc
stc
mov
adc
xchg
hlt
add
or
cs
mov
and
loop
loope,pt
insb
xchg
cmpsb
ds
xor
jae
sub
dec
xchg
addr16
int3
dec
es
jnp
lds
mov
cmp
enter
roll
add
sub
in
jl
testl
orb
loope
mov
std
ljmp
insb
testl
gs
je
inc
cmp
xchg
cmp
xchg
xchg
aam
cmpsb
adc
xchg
mov
push
pop
mov
and
lcall
shlb
or
shrb
adc
xchg
mov
data16
subb
mov
daa
aad
lea
mov
push
push
mov
xor
inc
sub
or
popa
cld
push
xorb
inc
jbe
nop
out
jp
pop
test
jo
loop
in
inc
int3
jge
call
fs
pop
mov
sub
cmp
or
pop
push
aaa
cltd
pop
push
pop
jnp
pop
sbb
sbb
lods
jecxz
ljmp
pop
dec
bound
cmp
add
sub
or
fisubs
push
test
sub
out
inc
std
xchg
sub
bound
rolb
sbb
mov
fisubs
adc
mov
ss
icebp
add
mov
movsl
push
or
repz
or
js
popf
fnstenv
mov
jl
scas
adc
test
insl
add
mov
loope
sbb
or
outsb
sub
mov
xor
lock
add
nop
scas
int3
dec
ficoms
cmpsl
sar
enter
mov
movsl
subl
shlb
sbb
or
fldt
or
scas
idiv
aad
or
lods
adc
cmpl
mov
lcall
je
xchg
pusha
sbb
xchg
repnz
adc
jo
adcl
ret
std
int
xor
icebp
sub
sbb
fwait
cmp
or
stos
scas
adc
int
pop
flds
adc
in
outsl
inc
lahf
pop
push
push
mov
pop
insb
dec
mov
and
inc
cltd
and
push
int3
pop
repnz
jbe
mov
jge
int
sub
and
aaa
sbb
fs
mov
adc
aas
test
dec
jp
sarb
cwtl
out
arpl
insl
out
add
aad
ja
out
sub
lret
cli
cmc
inc
stos
xchg
push
mov
pinsrw
subl
jns
add
cmpsb
aam
mov
pop
js
bound
inc
aam
mov
mov
stos
outsl
or
inc
int3
add
scas
in
mov
xchg
push
or
jno
jmp
cmp
push
rorb
icebp
std
sbb
jmp
das
sub
into
into
jno
lods
mov
jne
cld
mov
test
push
push
cmp
scas
pop
xor
inc
mov
pop
xor
cmpsl
xor
pop
inc
clc
mov
mov
subb
sub
nop
outsl
fxch
testl
dec
ret
sahf
stos
insb
sbb
jne
mov
add
fists
movsl
repnz
cmc
adc
ss
add
ficoms
xor
bound
nop
mov
sar
fnstcw
mov
and
ja
mov
sub
fiaddl
andb
xlat
and
pushf
cli
hlt
adc
and
ds
adc
nop
jnp
pop
stc
mov
mov
fsubs
shr
loopne
cli
xor
out
js
cmp
es
jecxz
int
mov
mov
fsubp
es
out
or
xor
push
dec
push
inc
in
and
rclb
sub
push
sub
push
adc
mov
rorb
pop
loop
icebp
jl
fiaddl
mov
out
lods
jle
mov
outsb
lds
push
inc
push
ret
sahf
cwtl
cmp
push
push
mov
fistl
aas
adc
xchg
xchg
incl
ss
ljmp
leave
sbb
mov
fcompp
mov
pop
push
flds
cmpsb
mov
stc
push
iret
or
fistpll
adc
mov
nop
mov
roll
add
xchg
xchg
cmpsb
jg
test
sbb
cwtl
sbb
fcomi
and
or
pop
ljmp
fwait
add
jmp
cmp
jmp
es
bound
sbb
repz
mov
jp
iret
cmp
push
and
inc
jle
push
shlb
sahf
fs
sub
ds
hlt
repz
lahf
pop
pusha
stos
mov
adcl
jnp
rcrb
xlat
or
ficoms
or
jge
movsl
xchg
adc
out
test
insl
push
xor
outsb
nop
roll
in
adc
jb
inc
and
xor
pusha
stc
stos
adc
ret
test
push
mov
xchg
mov
sahf
push
mov
or
lds
and
add
es
cmp
sbb
fs
inc
mov
pop
jno
std
mov
add
mov
xchg
roll
shlb
sahf
push
popf
shl
ret
mov
xor
xor
sahf
dec
fstpl
or
insl
jge
daa
mov
jmp
es
fisubrs
jmp
mov
or
shrl
jno
stos
jne
push
ds
ja
xor
adc
xchg
mov
add
popa
cmp
scas
stos
test
fiaddl
or
mov
and
lahf
xchg
xchg
cmp
xor
sbb
iret
lret
xor
add
out
xor
mov
je
sbb
push
arpl
mov
cmpsl
xchg
andl
icebp
adc
ret
pop
cld
decl
push
mov
xchg
push
xchg
std
add
lds
adc
push
sub
or
sub
pop
pop
sbb
mov
and
movsl
add
mov
pop
mov
movsb
pop
int
fs
addr16
out
movsl
popf
loope
mov
add
insb
jl
int3
jbe
lods
test
push
add
shll
leave
pop
fcomp
mov
adc
clc
jae
jb
and
dec
push
mov
lahf
xchg
jne
xchg
mov
ret
fsub
aas
imul
dec
stc
mov
loop
mov
jmp
mov
sub
sbb
push
cltd
sbb
or
sub
fisttpll
repnz
or
sbb
and
xchg
je
cmp
lds
sti
cmp
js
jns
push
jbe
out
nop
fbstp
lods
push
cmc
mov
cmpsb
or
je
sub
push
xchg
cmp
js
inc
xchg
push
push
cmc
pop
cli
out
lret
cmp
xorb
les
in
add
fldt
cmp
or
ret
cmp
mov
sub
push
cli
adc
and
int
in
sbb
cwtl
clc
test
or
mov
or
rolb
sub
lock
sbb
push
je
jle
icebp
out
adcb
inc
mov
xchg
sbb
mov
dec
mov
lds
hlt
decb
cld
pop
mov
cmp
jne
loope
pop
sub
test
lods
mov
cmp
je
ljmp
imul
jmp
stos
repz
and
pop
mov
jmp
repnz
addr16
dec
add
loope
int
aam
xchg
scas
lea
jnp
dec
lcall
sub
out
andl
mov
fidivs
shr
les
daa
stos
out
xchg
mov
mov
push
xchg
inc
sbb
je
xchg
aam
adc
push
xchg
cs
insb
jg
dec
dec
movl
xchg
pop
int
fnstenv
aad
mov
loopne
dec
jb
cli
push
pop
rcrb
lock
arpl
add
sub
test
mov
adc
or
inc
mov
cmp
mov
adc
loopne
or
adc
lcall
popf
stos
mov
dec
jno
inc
xchg
adc
pop
add
loopne
mov
pushl
pop
cmpsl
and
xlat
jecxz
push
mov
push
sub
lds
shll
jp
xor
add
add
mov
repz
into
aaa
enter
shl
dec
push
clc
sub
pop
test
loope
mov
sbb
jnp
aam
xchg
sbb
inc
fimull
mov
in
adc
dec
lods
popa
adc
push
cld
push
aam
shrl
push
mov
ljmp
mov
fildll
mov
and
xchg
dec
repz
pop
xchg
inc
xor
add
mov
imul
mov
fwait
ds
mov
mov
adc
arpl
sbb
add
ret
rorb
jmp
scas
sbb
movsl
gs
fnsave
sub
push
rcr
cld
fidivl
cmpl
adc
xchg
sub
adc
movsl
jae
repz
or
xor
jle
dec
xor
imul
lods
or
xor
cli
mov
push
aaa
mov
sbb
xchg
cmpsl
sbb
pop
outsl
and
jmp
xor
and
aas
cmp
sub
lahf
cmp
andb
gs
into
adc
xor
cli
xor
jae
mov
or
push
mov
cmp
gs
push
fnstcw
movsl
xchg
pop
sub
outsb
mov
pop
mov
cltd
push
inc
and
sti
in
icebp
gs
sbbb
test
data16
cmp
sub
outsl
add
cltd
sbb
test
repz
test
es
aas
lods
and
aas
gs
in
pop
jnp
xchg
push
repz
loope
and
inc
adc
gs
clc
ret
and
lret
jo
cmp
mov
jecxz
movsl
mov
in
mov
pop
and
insb
xchg
pop
mov
push
hlt
jecxz
xchg
dec
sub
dec
pop
sti
dec
mov
dec
cmp
pop
loopne
or
stos
outsl
lds
sahf
ret
sub
lahf
cmc
stc
inc
push
adc
mov
lea
mov
js
pop
jb
cmp
scas
xchg
ss
imul
adc
push
xor
xchg
xor
insl
cwtl
fisubl
push
lret
scas
dec
jno
jge
add
fcoms
stos
push
les
xchg
sar
inc
cmpsb
fdivrl
loop
mov
lds
popf
mov
mov
inc
mov
push
mov
das
xor
xchg
cmp
push
sti
sub
stos
xchg
movsb
dec
sub
push
adc
mov
sbbb
mov
mov
mov
sub
mov
out
dec
dec
sti
xlat
outsb
push
pop
xchg
out
pop
mov
inc
inc
pop
sbb
popa
hlt
sub
les
lods
mov
adc
fmulp
lea
loope
int3
lret
xor
jg
jg
add
cwtl
lret
aas
ss
push
test
cmp
sbb
aam
pop
outsb
std
inc
adc
lret
pop
iret
xchg
jno
push
aam
or
mov
sub
xor
push
pop
scas
and
mov
rclb
shrb
filds
or
bound
out
push
add
sbb
lret
pmuludq
ds
int3
xlat
mov
adc
repnz
lods
into
std
dec
inc
cli
or
mov
cld
cmp
imul
pop
xchg
pop
out
sbb
jl
xchg
xorl
loop
test
or
mov
cmp
jbe
call
mov
add
mov
add
and
outsb
cmpb
dec
sbb
stos
test
icebp
sbb
mov
mov
mov
cltd
loope
adc
pop
or
aam
sbb
iret
je
inc
stos
add
cltd
xchg
cmp
std
inc
int
jg
lock
mov
cmpsl
pop
cmpsb
cwtl
push
cltd
pmaxsw
loope
cmp
dec
jecxz
cmp
xchg
xchg
lahf
adc
jmp
das
cmp
jecxz
or
xchg
outsl
scas
je
sahf
inc
movsb
ss
lret
lods
xchg
gs
roll
mov
negl
adc
in
clc
add
imul
das
dec
in
mov
xor
mov
cwtl
pop
add
jge
inc
call
movsb
bound
jbe
push
xor
cld
imul
sbb
adc
dec
jge
dec
add
and
cmpsb
push
idivl
mov
ja
cmp
or
outsb
xor
pop
orb
notl
jnp
fwait
sbb
add
jne
pop
xchg
rol
sbb
inc
js
jae
ret
mov
add
outsb
mov
and
cmc
fmuls
jmp
dec
inc
repz
aam
mov
xor
or
cmp
scas
mov
dec
lcall
test
pop
mov
in
pushf
icebp
xchg
add
mov
pcmpgtd
bound
sbb
inc
int
cmpsl
mov
dec
and
cmp
lods
jbe
xor
dec
mov
push
rcrb
and
cmpl
pop
fwait
mov
outsb
jbe
mov
jl
fistpl
or
in
das
push
icebp
push
add
cmp
or
cmp
add
decl
push
mov
sti
test
add
or
push
or
and
sarb
pop
sub
jle
das
je
cmp
dec
outsb
dec
ja
test
shll
fstps
mov
shrl
mov
pusha
jbe
push
cs
test
mov
jne
sub
jp
adc
sub
add
jae
pop
movb
loopne
pop
dec
ljmp
mov
jle
push
jo
int
xorb
ja
cmp
pusha
shll
or
sub
jmp
jp
jp
pop
sub
push
test
or
and
mul
pop
jae
in
adc
xchg
mov
xchg
and
int3
or
out
push
and
addr16
iret
out
cli
add
mov
lock
mov
add
xor
dec
add
mov
mov
iret
mov
mov
in
push
sub
inc
or
mov
sbb
jp
xor
push
pop
gs
sbb
fdivl
cmp
jp
jmp
dec
aad
ret
out
mov
pop
dec
lock
dec
dec
pop
shll
cmpsl
mov
imul
xchg
mov
test
inc
sbb
mov
cmpsb
cltd
fidivrs
xor
jge
sbb
neg
jl
add
cmp
rol
arpl
es
pop
dec
in
ljmp
ljmp
pop
sbb
mov
lds
jg
pop
ds
inc
shufps
cltd
ds
leave
hlt
inc
hlt
mov
in
cmpsl
xchg
outsl
scas
bound
xorb
out
cmpb
add
mov
bound
and
aas
mov
test
xor
out
mov
enter
xchg
into
xchg
sbb
fldl
int3
adc
jg
in
and
cmp
rdmsr
xor
sbb
aad
pusha
or
pop
mov
pop
leave
movb
xor
mov
pop
notb
scas
out
insl
xchg
xchg
xchg
xchg
mov
in
aad
enter
insb
jl
push
leave
xor
addr16
imul
ja
dec
loopne
mov
mov
jns
sbb
pushf
add
aad
clc
ljmp
shlb
mov
lock
push
add
shll
add
adc
mov
push
cmp
fcoml
sub
imul
xchg
movsl
ja
xchg
and
pop
jae
in
data16
call
shlb
dec
dec
push
xchg
jl
mov
cmc
push
rcrl
dec
loop
loop
jle
fdivrl
jae
sbb
inc
mov
subl
push
sub
xchg
xchg
add
inc
ja
cmpsb
add
shrb
cmpsb
jne
add
popf
into
nop
incl
cld
jbe
test
inc
scas
dec
hlt
jl
jecxz
dec
jo
push
clc
xchg
subl
sbb
stos
movsb
mov
or
or
mov
jecxz
adc
loopne
outsl
in
in
mov
and
cmp
insb
out
mov
push
lods
push
mov
add
adc
int
subl
jns
movsb
lods
lods
notb
call
fnsave
add
outsb
insl
loop
imul
jge
aam
add
xchg
push
loopne
and
enter
les
adc
test
mov
sub
or
cli
imul
cld
popa
fs
mov
dec
or
aad
sbb
mov
fldcw
stos
sub
shll
inc
inc
pop
lret
push
xor
sub
hlt
imul
add
cmp
imul
popf
xor
dec
xor
sub
fiaddl
mov
fists
gs
push
cld
mov
outsb
pop
adc
mov
jecxz
push
fs
ja
jns
push
stos
stos
test
cli
adc
xchg
les
pop
add
sbb
sbb
jmp
xchg
jo
les
or
sar
xor
cmp
aaa
or
sub
mov
subb
insl
imul
ret
sbb
xchg
mov
sahf
cmp
xor
adc
mov
xor
adc
pusha
jne
psrlw
or
mov
aad
add
sti
dec
fcomip
pop
dec
rorb
jbe
loopne
pusha
xchg
lret
jp
jmp
es
call
cmp
mov
mov
imul
sbb
pop
cwtl
sbbl
into
aas
daa
pop
outsb
mov
add
push
loope
mov
mov
aam
pop
ljmp
xchg
cmc
fcom
aam
sti
pop
mov
xchg
adc
adc
dec
clc
shrb
add
ljmp
dec
jnp
push
or
inc
bound
repz
pop
inc
inc
idivl
push
add
xchg
lcall
std
std
and
pushf
dec
pop
push
xchg
jbe
inc
es
popa
inc
pop
sahf
orl
xchg
fisttpll
mov
popa
lock
cmc
dec
sub
mov
and
push
rcrl
dec
or
lds
inc
bound
cwtl
xchg
cmp
cmp
daa
push
lret
cld
call
mov
jb
fiaddl
lcall
jb
out
rep
in
or
out
xchg
pop
push
push
je
jp
jne
push
std
and
jle
sub
dec
out
das
and
mov
dec
mov
pop
inc
mov
mov
pop
hlt
std
loop
inc
inc
fmul
loope
cltd
jne
std
lock
jne
aam
jno
dec
ficoml
adc
ficomps
push
dec
adc
cmpsb
jmp
sbb
xor
dec
pop
sub
adc
lods
dec
stos
jne
hlt
in
xchg
push
jns
ds
xchg
mov
mov
push
out
inc
pop
outsb
ja
xlat
mov
mov
mov
shll
mov
adc
sarl
pushf
sub
or
xchg
lea
sahf
sahf
xchg
pushf
pop
in
rcrb
rclb
test
shrb
cmpsb
push
sbbl
sbb
and
testb
dec
mov
inc
fdivl
jns
sahf
loop
icebp
subb
movsl
in
movsb
cs
inc
add
insl
stos
dec
pushf
dec
ss
jl
and
call
bound
mov
inc
xor
clc
insl
adc
inc
aaa
movsb
push
lds
sti
popa
icebp
and
lock
cmpb
int3
cmp
std
ficoml
pop
sbb
or
sbb
movsl
into
push
aaa
into
cltd
out
mov
cmp
add
jecxz
mov
ret
sarl
test
or
test
fidivs
xor
mov
cmc
popa
lret
fldcw
push
insl
push
sub
push
dec
mov
lret
dec
loop
ds
imul
mov
cmpsl
insb
addr16
jecxz
cmp
les
pushf
fnstsw
cmc
andb
xor
into
cmp
push
jge
scas
es
sbb
and
shrb
movsb
insb
fcoml
mov
nopl
cmp
push
and
xor
lock
hlt
jno
icebp
fwait
ljmp
lock
popf
add
add
rsqrtps
mov
pusha
xor
fstpl
inc
mov
cmp
ret
adc
sub
pop
jae
call
sbbb
or
xor
jl
push
iret
mov
dec
fnstenv
aas
xchg
jg
dec
movsl
shll
sbb
mov
jl
mov
int
mov
adc
cmp
ret
incl
xor
test
lods
leave
inc
adc
clc
lods
jae
lock
jnp
cmp
ss
pop
test
mov
xchg
inc
add
mov
int
mov
lods
inc
xor
sub
sub
out
mov
mov
ss
xor
popa
dec
sbb
jnp
push
jecxz
scas
jnp
gs
and
and
fadds
sbb
in
outsb
lods
mov
add
xor
sti
mov
divl
imul
mov
sti
sti
adc
imul
idivl
xchg
je
or
mov
adc
jecxz
pop
stc
mov
aas
in
pop
and
bound
mov
push
lcall
sub
sbb
xlat
or
pop
sbb
push
dec
push
sti
sub
stc
fnstcw
pop
cmpsl
or
es
dec
insl
pop
add
rolb
jno
sub
bound
shll
sahf
imul
test
movsb
add
jno
sub
ss
mov
lods
mov
cmc
negl
repz
sub
pop
inc
pop
lods
testl
jnp
or
cli
fisubl
dec
mov
repz
sbb
or
lcallw
jb
pop
mov
xor
push
xchg
sahf
add
out
rorw
xchg
pop
in
iret
mov
out
imul
movsb
ss
scas
scas
scas
pop
cmpb
imull
fbld
mov
push
push
xor
lds
dec
jmp
movsb
and
xor
enter
movsb
call
lret
sar
sahf
cmp
mov
aad
xor
xor
test
pop
sub
hlt
icebp
mov
scas
adc
or
push
icebp
and
lods
push
cmp
cmp
addr16
lods
push
cmp
cs
andl
or
loop
in
sbb
pop
sbb
push
dec
pop
imul
or
fstps
test
xor
mov
or
adc
add
pop
test
ret
cs
xchg
aam
sbbl
insl
dec
adc
fmull
repz
fwait
cmp
enter
cmpsl
pop
cltd
shll
jns
sbb
sbb
icebp
push
add
mov
pop
push
mov
fwait
dec
mov
push
imul
dec
mov
jb
cwtl
jl
mov
es
repz
fwait
sbb
fs
xchg
pop
inc
lods
int3
lret
jb
call
and
pop
cmpsl
rorl
int3
outsl
fstl
seta
gs
push
push
divl
jecxz
in
ret
mov
add
inc
pop
mul
dec
enter
stc
or
test
sub
jnp
gs
jnp
outsl
inc
dec
out
stos
lahf
mov
dec
test
lretw
mov
add
inc
dec
ffreep
pop
dec
daa
mov
fstpl
clc
mov
fildl
pop
dec
ret
js
scas
rclb
inc
pop
push
imul
jg
inc
inc
je
xor
int
in
insl
cld
aas
pop
mov
ficoml
lods
aam
mov
cmp
lahf
ret
enter
mov
add
xchg
dec
and
inc
call
fidivrs
in
fmull
aam
mov
loop
movsl
ljmp
sub
ljmp
aas
mov
sub
repnz
cwtl
sbb
aad
ljmp
mov
jmp
dec
push
jbe
cltd
filds
insl
xchg
xchg
int3
outsb
pop
mov
subl
jne
mov
xchg
xchg
loopne
xchg
stos
cs
in
ret
outsl
icebp
add
sbbl
and
lods
leave
data16
pop
push
mov
insl
push
js
int3
jae
loopne
xor
ss
and
jmp
xorb
pop
faddl
push
cmp
jg
xchg
popf
add
enter
lcall
inc
sbb
ret
xchg
mov
inc
xchg
inc
fistps
fwait
outsb
movsb
cli
push
xor
jecxz
sub
jge
jle
in
outsl
aaa
pop
push
leave
stos
filds
pop
notl
imul
or
ds
or
jno
mov
dec
xor
hlt
add
inc
rolb
jo
movsb
and
sti
jbe
mov
push
xchg
test
inc
and
sub
xchg
inc
xor
repz
lret
out
addb
daa
es
leave
lcall
xor
fwait
mov
gs
cmpsl
adc
xor
int
lcall
inc
mov
js
inc
add
push
movsb
xlat
insb
or
cli
add
xchg
push
stc
inc
add
cmpsb
ret
lea
stos
inc
call
xor
dec
add
mov
fistpl
test
pop
add
mov
loop
jmp
popa
and
out
cli
mov
sbb
mov
add
int
push
or
push
jne
test
mov
icebp
adc
test
pop
aas
dec
rcrb
sbb
adc
lods
mov
sbb
fiaddl
out
dec
mov
das
mov
pushf
inc
mov
aaa
fdivl
lret
ss
xchg
aas
int
mov
repz
popf
ret
mov
sbb
jge
sbb
jmp
inc
mov
push
dec
cmp
lock
in
and
out
daa
push
push
fists
push
lods
lds
loopne
sbb
pop
mov
sti
out
fisubl
push
inc
jmp
into
mov
dec
push
push
sub
xchg
mov
inc
leave
inc
sti
bound
xor
cmp
push
or
enter
or
out
mov
mov
jno
sub
and
mov
cmpsb
sub
lods
divl
inc
scas
bound
daa
outsl
popa
bound
ds
mov
bound
out
test
sbb
shrb
fisttpl
lds
jns
js
push
mov
lock
mov
shlb
jecxz
nop
and
inc
mov
test
sbb
lock
cltd
aam
popl
out
jl
int3
sub
jo
mov
and
xor
jecxz
insl
add
jno
mov
mov
ljmp
lahf
sahf
adc
in
pushl
xorl
leave
inc
sarb
sahf
aad
pop
or
mov
add
cmp
aad
mov
aam
fwait
cmp
dec
aas
cmp
and
fildl
mov
loope
leave
mov
lods
int3
push
mov
jnp
in
xchg
cld
mov
jl
pushl
or
mov
cmpsl
imul
inc
and
xor
std
dec
aad
hlt
jl
sub
ja
sbb
push
push
jmp
xchg
inc
jmp
lods
inc
stos
out
mov
push
or
lock
dec
jnp
xchg
insl
cmc
mov
cmp
cs
cmp
sub
popl
popa
mov
cmp
in
out
data16
dec
rcll
xchg
out
sub
pop
loopne
les
sub
bound
dec
daa
inc
or
lods
push
faddp
out
stc
enter
dec
adc
cwtl
dec
inc
push
mov
aam
adc
jnp
test
mov
lret
xor
jne
push
mov
push
xchg
jno
dec
pop
mov
ds
mov
or
dec
mov
jg
aam
mov
int
dec
mov
and
xchg
mov
and
pop
test
hlt
sbb
mov
shr
pop
out
push
ljmp
and
push
inc
imul
jg
rclb
xor
iret
mulb
push
jp
sti
std
ss
cmpsl
cmp
std
jno
mov
lahf
in
mov
bound
shrl
adc
inc
stos
mov
push
std
and
cli
iret
mov
xchg
or
and
pusha
mov
pop
icebp
mov
cmc
xchg
add
or
dec
jle
ret
es
dec
pop
pop
sub
fcmovu
imul
add
dec
push
enter
ja
xor
jae,pn
xadd
or
fisubs
xor
xchg
and
inc
lods
rorb
imul
mov
insl
sbb
arpl
clc
hlt
das
cltd
mov
in
dec
lcall
push
mov
pushf
mov
and
loope
lea
push
mov
insb
les
lahf
xor
mov
sti
fldenv
add
fdivr
mov
jmp
push
and
stos
cmpsl
pop
sbb
xlat
cld
push
daa
xchg
imul
data16
jecxz
daa
pop
repnz
dec
lret
jg
test
mov
je
addr16
push
and
and
mov
add
xchg
or
jmp
jmp
out
push
cmp
cld
push
ljmp
nop
imul
cmp
xor
xlat
adc
adc
rcll
in
mov
ja
adc
test
push
push
add
sbb
loopne
nop
sarl
push
test
andl
or
lret
sub
aad
dec
aas
push
or
jae
mov
add
push
sub
fdiv
in
dec
mov
ds
push
push
adc
push
mov
mov
lea
sub
cwtl
pop
sub
pop
notb
int
fadds
push
sub
mov
sarl
jg
pop
inc
adc
push
mov
imull
mov
call
or
sbb
bound
imul
jo
js
pop
call
mov
sbb
lods
and
mov
sub
sbb
sub
jo
dec
aas
sub
popf
stos
shlb
cltd
inc
jp
cltd
repz
pop
test
push
jmp
subb
xchg
inc
mov
test
sub
lods
jo
in
mov
lods
rclb
jns
cli
ja
fsubr
sub
add
fmull
sbb
pop
mov
movsl
or
mov
daa
push
testl
push
std
push
mov
sbb
push
mov
sbb
mov
ja
arpl
mov
dec
push
xor
push
sbb
push
or
aaa
jnp
insl
rorl
stos
or
or
jg
imul
dec
xchg
rclb
cmpl
je
scas
aaa
mov
inc
or
push
sub
int3
mov
shll
or
mov
lret
jmp
mov
ret
inc
xchg
sub
loopne
imul
sub
sbb
call
pushf
lock
cli
rcrl
insb
add
test
lret
sub
insl
sbb
mov
imul
vsqrtsd
out
lahf
cmpsl
xchg
pop
push
fadd
sub
xchg
fcmove
aad
mov
out
scas
mov
mov
mov
loopne
cmpsb
xor
fistpll
xchg
sub
inc
push
push
loop
adcl
xchg
push
add
and
cltd
sbb
aad
sbbb
stc
mov
inc
mull
sti
insb
es
ror
jo
jb
add
outsb
pop
pop
pop
xchg
jp
adcl
rol
hlt
cld
adc
ds
inc
test
test
push
dec
mov
js
sub
mov
gs
add
or
and
out
sti
nop
lock
aam
mov
mov
nop
jl
ljmp
je
mov
push
mov
out
inc
mulps
mov
inc
mov
pop
dec
mov
mov
data16
testl
xchg
or
xchg
daa
sbbb
mov
scas
out
mov
dec
and
test
cmp
and
aas
xchg
dec
adc
dec
movsl
insl
test
mov
fcmovu
mov
jp
jno
imul
push
pusha
arpl
pop
imul
cmp
and
rorb
and
iret
pop
out
cmp
add
jmp
push
xchg
jae
cltd
int3
add
stos
popa
faddl
in
arpl
cmc
test
in
jb
push
pop
stos
push
lock
mov
pop
loopne
lods
popf
mov
in
add
and
ret
movsl
mov
and
cmp
mov
jns
stos
xchg
push
je
mov
sub
je
jbe
gs
adc
stos
add
jmp
cld
inc
les
mov
jge
ja
xchg
outsb
repnz
push
movsl
sarb
lods
xlat
lods
cs
xor
inc
es
stos
jg
mov
stos
sbb
xchg
sub
cwtl
rcr
xchg
inc
dec
sarb
es
mov
aad
dec
xchg
hlt
xor
fnsave
cltd
or
sbb
and
lods
inc
push
clc
stos
xor
xchg
push
scas
pop
lock
mov
insl
jl
fisttpll
mov
or
mov
mov
and
daa
mov
leave
or
jg
ficompl
xchg
and
mov
pushf
lods
movsl
pop
mov
leave
xchg
jp
data16
sti
enter
cli
fistpl
jmp
subb
mov
jecxz
cmc
and
mov
movsb
shl
pop
xchg
cli
inc
push
inc
movsl
in
scas
test
test
cmpsl
jmp
int3
test
adc
lods
cs
xor
fs
xchg
repz
push
and
lock
shrl
test
jb
add
xor
mulb
push
jne
cli
test
cmp
push
ret
enter
ret
xor
pop
lcall
sub
xchg
icebp
xchg
adc
cmp
fs
cwtl
inc
scas
aad
lret
clc
cmp
cli
cmp
lahf
pop
cmc
fwait
int
ljmp
pop
xor
adc
pop
scas
insl
daa
mov
adc
icebp
stos
pop
scas
jmp
lds
xor
into
jns
cmp
out
or
mov
aaa
in
push
inc
lea
daa
and
adc
call
push
sub
jo
jns
sub
or
or
push
jg
negb
pushf
sub
xlat
jo
push
xor
adc
aas
inc
arpl
xchg
lea
test
sbb
mov
pop
mov
outsl
xchg
movsl
ja
sbb
arpl
mov
outsl
pop
or
repnz
int3
shlb
dec
lret
cmp
cli
xchg
mov
aas
dec
add
repz
jp,pn
jle
setae
rcr
pop
outsb
jo
fucomi
rolb
push
cld
orb
nop
push
xor
inc
cmp
mulb
int
repnz
xchg
dec
and
cld
std
dec
jle
mov
test
imul
push
cmp
mov
mov
push
nop
jb
in
xchg
or
ja
push
xor
mov
dec
cmp
insb
ja
enter
jb
jae
icebp
int
xchg
jp
xchg
xchg
icebp
ret
jae
pusha
cld
cs
mov
clc
xchg
cmp
aas
mov
mov
cld
filds
rorb
shlb
fs
xchg
scas
sbb
jmp
adc
enter
cmc
inc
cmpsl
js
inc
dec
out
xchg
outsl
add
cmpsl
sub
ja
lahf
pop
push
insb
imul
test
lret
cmp
xor
flds
int
push
cmp
fiaddl
and
jno
add
jecxz
out
xor
pop
ja
shrl
push
out
cmpsb
mov
out
jge
aas
cwtl
push
adc
xchg
gs
lock
xor
and
int
pop
ds
out
adc
add
xor
mov
aam
mov
fnstenv
mov
fs
push
imul
stc
aaa
pop
cmp
mov
fsubrs
out
rcrb
dec
pop
cmpsl
in
aad
and
imul
in
push
jge
dec
xchg
out
pop
mov
inc
xor
mov
inc
inc
xchg
add
loopnew
mov
jp
dec
leave
shl
mov
or
sbb
aaa
repz
fwait
dec
add
in
jb
or
outsl
aam
push
push
nop
out
jnp
push
call
push
lea
out
cmp
xchg
push
jae
lods
dec
xor
mov
add
out
stos
hlt
pop
mov
std
inc
inc
aaa
scas
fistl
imul
decb
cmp
push
mov
and
icebp
imul
push
and
sub
mov
dec
js
mov
add
jbe
inc
lcall
cmp
pop
jae
icebp
gs
add
loopne
outsl
xchg
daa
cltd
mov
imul
jnp
repnz
out
sbb
bound
xor
mov
in
dec
jbe
incl
fcoms
adc
insb
mov
xorl
popa
dec
mov
mov
mov
lods
les
xchg
aaa
imul
lahf
dec
adc
sbb
inc
push
jb
in
pop
push
std
aas
fwait
mov
cmp
adc
mov
push
out
push
leave
dec
inc
push
out
push
sub
jo
addb
mov
js
inc
add
fcoms
jnp
mov
ret
pop
xlat
cmc
inc
imul
ja
ret
adc
pushf
ror
jns
mov
cs
cmp
ja
jns
mov
add
fdivr
ret
mov
ja
scas
aad
ljmp
or
inc
xor
das
nop
lcall
clc
mov
sbb
sbb
dec
and
push
cwtl
lcall
lret
xchg
dec
fildll
fstl
pop
jg
pop
adc
popf
mov
mov
ret
or
icebp
adc
std
push
sbb
jbe
jnp
or
cwtl
pop
sub
adc
pop
dec
jne
int3
aas
adcb
sub
cltd
mov
pusha
add
xor
popa
inc
cmp
rcrl
in
mov
stc
pop
pop
jp
hlt
or
movl
cli
lret
cmp
adc
xor
into
add
sbb
adc
push
shlb
fisubs
cli
clc
enter
add
inc
mov
mov
enter
mov
xlat
mov
jg
neg
insb
popf
scas
popf
sbb
jmp
outsb
xchg
lock
and
sbb
rcl
pop
fsubrl
mov
push
push
lret
lret
dec
jne
push
das
add
xchg
mov
arpl
movsl
mov
push
out
shrb
out
out
mov
cwtl
cmpb
insb
sbb
repz
imul
sbb
push
jg
push
lods
dec
mov
xlat
sub
stc
pop
xchg
imul
mov
dec
lea
jecxz
inc
ljmp
icebp
dec
icebp
addr16
xor
dec
pop
stos
in
imul
shll
jmp
cmp
push
mov
xlat
pop
dec
daa
cwtl
mov
insb
mov
addr16
mov
repz
lcall
fbstp
add
int3
push
jnp
mov
bswap
adc
dec
les
or
dec
push
insb
movsl
out
js
std
aaa
mov
cli
sub
divb
jne
push
test
mov
test
test
jno
and
ljmp
in
add
ja
cmp
inc
hlt
and
lods
test
out
mov
inc
xor
push
sbb
addr16
ljmp
dec
in
adc
push
jnp
in
push
xor
ffree
notl
and
loopne
fisubs
dec
sbb
pop
test
or
or
leave
cmpsb
dec
cld
insb
ret
or
xor
clc
enter
pop
adc
adc
jno
mov
push
pop
out
pop
dec
lea
mov
mov
mov
call
inc
jnp
xchg
insb
imul
push
mov
or
es
sbb
pop
add
loope
js
mov
lret
sub
les
lea
mov
add
and
cmp
jecxz
iret
dec
in
sbb
inc
pop
lods
xor
pop
sbb
or
outsl
pop
mov
bound
or
dec
sbb
add
shll
sbb
mov
clc
mov
xchg
fsub
cmpsl
pop
fsubrp
lds
dec
or
in
cmpsl
pop
andl
sub
push
or
js
push
lds
add
add
jne
xor
shl
pushf
push
adc
fnstenv
lods
mov
cmp
scas
imul
xchg
enter
jo
mov
ret
ret
mov
xchg
dec
cmc
out
mov
sub
test
adc
jle
cmp
ret
fwait
jno
insl
or
lods
movsl
adc
push
cwtl
xor
lcall
loope
sar
movsl
xor
pop
pop
cli
sbb
mov
and
into
xchg
sahf
out
fdivl
mov
pusha
hlt
mov
fwait
ds
mov
sub
dec
daa
les
ret
outsl
pop
add
outsl
test
cli
test
int
xor
ret
jno
add
jg
lds
pop
cs
in
fcomp
lock
adc
adc
std
add
xor
adc
iret
jmp
outsl
or
cwtl
scas
adc
add
lock
adc
ljmp
int
ds
ja
add
or
js
int
xlat
push
dec
pop
jae
sbb
je
jo
sarb
xor
lret
sub
in
jno
jb
xchg
adc
mov
fxch
sti
cwtl
adc
mov
cmp
iret
mov
testl
mov
mov
outsl
cmpsl
mov
lea
enter
mov
xchg
and
lock
and
sbb
fucomp
lock
decl
mov
stos
jmp
and
jns
add
pop
ret
jne
out
xor
sahf
mov
adc
mov
ror
imull
lret
mov
js
push
add
std
pusha
std
or
rcrl
scas
sub
repz
pop
jle
push
dec
add
icebp
jne
je
and
cmp
fwait
jmp
push
cld
add
sbb
add
mov
rep
ret
lcall
push
xchg
leave
xor
or
out
hlt
icebp
cmpsl
xchg
das
add
cli
push
adc
pushf
pop
pop
sbb
dec
add
arpl
enter
int
adc
stos
push
adc
lods
fstpt
cmp
push
push
je
jnp
ljmp
push
pop
and
push
fcomps
int3
in
inc
jo
xchg
test
jns
push
xchg
in
fsubrs
shll
adc
sub
cmp
mov
lret
imul
dec
loop
lret
jae
dec
ja
icebp
scas
lock
test
bound
sarl
pop
dec
push
pop
push
and
add
cltd
test
add
jb
add
pop
lret
or
push
scas
jb
push
out
jno
inc
out
dec
jp
xchg
fnstsw
iret
mov
outsb
mov
inc
sub
mov
sub
lods
xchg
loope
sti
push
iret
cld
jg
fwait
mov
push
notl
push
sbb
add
xchg
rclb
jbe
mov
mov
mov
xor
xor
and
fdivr
jne
mov
fldpi
adc
ds
cmp
fldenv
iret
fbld
mov
stos
leave
or
adc
inc
repz
mov
fbld
pop
pop
aas
ja
xor
pusha
in
ror
and
inc
ficoms
scas
add
inc
xchg
ret
fldl2t
into
addr16
jl
ficoml
push
fisttps
adc
scas
insl
pushf
adc
into
fwait
xor
fwait
cltd
rcr
jno
mov
cld
movups
add
xchg
fwait
ja
pop
rcrb
les
xlat
or
mov
jg
pusha
push
sub
cwtl
add
inc
sahf
pop
scas
ss
push
lods
out
jnp
std
mov
xchg
push
dec
and
adc
push
pop
jae
push
ret
lret
mov
stos
cmpsb
jg
xor
xchg
jae
and
jb
pop
dec
push
das
movsb
aaa
inc
jns
sbb
hlt
sahf
addr16
jb
arpl
adc
mov
cmp
fwait
and
fldenv
mov
mov
mov
mov
cwtl
out
iret
pop
xchg
mov
lods
jnp
jbe
inc
xchg
int3
int3
movsl
rcrb
push
jge
adc
cmpsb
and
add
cmpsl
jge
push
adc
into
jmp
add
lret
xchg
sbb
inc
fwait
shrl
xchg
fldenv
xchg
ljmp
test
xor
faddl
sbbb
shlb
cmp
icebp
jno
cmc
shrl
mov
xorb
mov
push
rcrw
stos
or
mov
in
add
mov
iret
movsl
insb
testl
xchg
or
mov
das
mov
stc
ret
sbb
mov
adc
jno
mov
stc
mov
pusha
sub
js
mov
jns
mov
cltd
adc
push
mov
push
out
dec
test
jb
push
outsb
shrb
xchg
xchg
pushf
mov
sahf
cmp
movb
cltd
incb
jp
clc
sbb
inc
aaa
lock
mov
and
inc
dec
adcl
loopne
adc
lcall
cmp
fnstenv
scas
mov
shr
inc
mov
mov
pop
jo
xlat
sub
mov
call
cmpsl
jp
test
repnz
adc
movl
mov
push
das
out
ljmp
xlat
in
add
das
cmp
inc
push
sahf
and
ficoml
cmp
decl
movsl
add
inc
push
ficoms
daa
cld
loope
sbb
rcll
insl
subb
je
fstps
push
movsb
mov
xchg
sub
lahf
movsb
xor
xor
inc
dec
mov
push
mov
dec
imul
mov
lahf
inc
inc
fnstcw
xor
jmp
push
xlat
ja
inc
out
scas
test
inc
pushf
push
mov
push
hlt
adc
sub
or
fmul
fdivs
inc
ljmp
sbb
aad
fs
mov
out
cmp
lock
je
addb
clc
push
loop
notb
fstpl
sbb
jnp
in
repz
enter
add
inc
cs
jmp
fs
xchg
test
leave
movsb
mov
movsl
lahf
push
lret
mov
stos
ret
jp
in
sbb
jb
inc
es
mov
inc
insl
push
rclb
icebp
push
call
push
mov
push
mov
scas
xor
add
bound
mov
jo
sub
scas
mov
adc
mov
ljmp
xchg
pop
sub
fwait
mov
in
mov
or
sbbb
lret
mov
in
addl
add
cld
lahf
xchg
stos
adc
cmpsl
clc
cmp
pushf
out
dec
fildl
and
xlat
sub
out
adc
pop
adc
push
cs
popa
icebp
ss
and
adc
test
stc
icebp
test
out
jmp
pop
lcall
sub
lahf
daa
sbb
lods
in
out
or
sbb
sbb
xorl
icebp
adc
mov
sub
adc
stos
out
cwtl
xchg
jne
jge
test
pop
cmp
sar
mov
inc
or
test
sahf
add
sbb
xchg
dec
sbb
addr16
jae
lds
lahf
or
xor
xor
repz
or
adc
inc
mov
sub
fstps
jns
mov
xor
pusha
sbb
test
sti
pop
fbld
daa
mov
out
lods
xor
mov
out
int
mov
fisubl
loop
pop
mov
mov
icebp
mov
jns
icebp
push
call
adc
mov
shrl
ret
xchg
ficompl
hlt
mov
js,pt
xor
dec
movl
pop
aam
jb
or
loop
sbb
adc
pop
setl
fistps
mov
cltd
imull
sbb
mov
and
push
push
fstpl
shl
test
leave
inc
mov
inc
xchg
test
dec
sub
loop
icebp
into
test
pop
mov
mov
mov
or
xchg
jg
cmp
clc
fisttpll
xchg
push
or
mov
notl
sbb
test
dec
aas
sti
jg
xor
and
in
dec
int3
jecxz
cmp
lahf
into
mov
mov
repz
cmp
adc
test
repz
mov
pop
outsb
add
dec
test
mov
dec
inc
fcomps
cmp
jmp
mov
jns
cld
fiaddl
pop
jae
mov
sub
mov
cltd
jge
push
sub
sub
mov
das
lret
mov
call
sbb
lock
inc
xor
push
jp
insl
or
aas
inc
ds
mov
in
xlat
dec
sbb
push
add
inc
rolb
sarb
addl
fcomps
orb
mov
in
shrl
in
adcl
aam
scas
cmpsb
push
movsb
repz
es
pop
popf
xchg
cmp
adc
mov
mov
and
cmpsb
lcall
jecxz
xor
adc
sti
test
fbld
stos
js
outsl
ljmp
cmp
jl
clc
mov
pusha
icebp
xchg
das
xor
aad
mov
stos
fwait
mov
call
mov
dec
adc
xchg
inc
lds
xchg
cmpsl
sbb
push
add
cmc
aas
repz
push
dec
xchg
push
out
xor
cli
jnp
inc
lahf
and
mov
loopne
push
or
stos
cwtl
adc
lock
push
sub
negl
xchg
cmpsl
stc
xchg
repz
and
pop
insb
stc
mov
popa
fistpl
iret
or
push
push
mov
out
pop
mov
add
lock
out
pop
xchg
rorl
andb
push
imul
push
xchg
jl
add
and
xlat
sub
arpl
cmc
sbb
mov
fdivl
dec
std
cmc
fwait
pop
or
loop
mov
push
movsl
add
stc
or
movsl
mov
das
lods
adc
lea
faddl
adc
sbb
test
inc
inc
adcb
movsl
dec
inc
dec
aam
cmpsb
int
les
adc
inc
test
xchg
or
cmc
mov
push
mov
rol
cmp
mov
sub
mov
lds
movsb
cmc
push
jns
add
call
inc
js
in
and
mov
fnstsw
into
mov
out
xchg
add
or
lcall
stos
shlb
sbb
shll
jnp
mov
cmp
ret
and
push
jns
mov
inc
xor
test
and
outsb
popf
pop
jns
cmp
jmp
rolb
jno
pop
push
aam
dec
xchg
test
mov
aaa
fwait
mov
add
enter
cmp
jp
bound
int3
repnz
dec
xor
cltd
sbb
inc
add
mov
mov
fsubs
out
xor
inc
cs
jae
mov
sub
sub
mov
in
push
insl
fiadds
jbe
add
shrb
mov
push
scas
mov
pand
jb
inc
stos
inc
lret
mov
je
sub
adc
jns
jns
pop
test
ss
inc
aaa
push
cmp
cmpsb
dec
mov
jne
xchg
adc
fsubrl
addl
and
pop
xor
mov
jmp
jnp
dec
mov
adc
mov
xor
pop
test
ds
test
fadd
cmpl
jns
jae
repz
lods
inc
cmp
jp
pop
insl
or
aad
jmp
lret
dec
clc
cmc
jb
fcmove
popf
jno
repz
adc
es
mov
fists
add
sahf
ficompl
repz
pop
cmpsb
mov
clc
aad
jle
and
mov
push
xchg
push
stc
hlt
dec
xchg
cmpsb
inc
fiadds
ljmp
mov
sub
repz
ljmp
fsubs
cmp
sbb
jmp
cli
cmp
idiv
adc
rcrb
into
je
out
lock
push
add
pop
jnp
pop
loope
jo
lea
push
mov
cmp
jge
popf
or
sub
js
in
fnstsw
add
xchg
dec
imul
sarl
int
popf
call
mov
out
aad
push
inc
test
cs
sub
repnz
pushf
sbb
xlat
and
push
xor
in
dec
aad
clc
dec
ret
in
cs
or
pop
add
int
popf
pop
sub
dec
ljmp
or
sub
jnp
jns
sbb
or
cmp
mov
or
push
bound
adc
subb
rorl
andb
int
enter
pop
fildll
mov
pop
mov
sbb
push
mov
dec
filds
adc
jb
mov
fwait
push
daa
mov
pop
insl
mov
mov
call
fimuls
xor
aaa
popf
aas
cld
pop
loop
cs
xor
insl
je
mov
int3
sub
inc
arpl
fcmovnb
adc
sub
mov
sbbb
and
sti
subb
add
call
pop
push
in
imul
and
mov
fisubrl
fimull
cmpsb
ret
arpl
mov
xor
in
or
and
testb
rcll
xchg
push
lods
inc
iret
call
aad
push
xchg
jg
je
testb
push
or
les
and
xchg
andl
popf
inc
es
adcl
arpl
push
stos
pop
iret
push
jg
push
cmpsl
mov
lods
pop
aaa
push
fcoms
aad
popf
fsubrl
push
scas
aaa
sahf
cltd
or
leave
rcrb
fdivs
adc
imul
adc
adc
mov
arpl
pushf
lods
adc
xchg
pop
or
in
push
dec
mov
or
inc
fsts
adc
je
outsl
scas
sbb
xchg
das
jmp
lods
jle
cmpsb
sbb
jb
test
cld
mov
mov
adc
pop
test
cs
popa
sahf
xor
jg
pusha
push
push
lods
in
jb
stos
pusha
jne
repnz
cs
stos
add
insl
rcll
sub
fdivs
aam
jp
out
xorl
mov
pop
inc
out
fcoml
xchg
and
sub
int
dec
xchg
mov
test
insl
ja
fdivrl
pop
mov
push
insb
mov
adc
adc
xchg
adc
and
aas
test
leave
dec
jg
inc
fstpl
xchg
insl
xor
mov
mov
pop
pusha
mov
je
xchg
je
dec
and
cmp
in
enter
orl
xor
je
das
or
jmp
jnp
ret
xchg
shrb
loop
pop
lahf
xor
movsl
dec
mov
fmuls
out
lret
mov
in
and
mov
lahf
test
in
ljmp
or
xor
addl
call
jl
stos
pop
lcall
out
inc
mov
mov
es
out
cmc
fisubrs
dec
cmp
sub
mov
cld
decl
sub
fisubs
out
mov
mov
pop
push
and
mov
cs
es
hlt
dec
or
loopne
ljmp
mov
shl
out
mov
lahf
xchg
out
shll
call
test
out
test
test
idiv
hlt
pop
push
inc
push
dec
cmp
fsubp
adc
rcl
insl
push
cmp
or
or
stos
scas
add
mov
aad
adc
popa
inc
das
jge
fldcw
xor
add
mov
sbb
stos
mov
rcll
insb
arpl
out
mov
jbe
adc
fwait
xor
psubusw
imul
inc
ja
repz
mov
pop
aad
std
dec
inc
leave
out
mov
popa
movsl
push
inc
sbb
nop
and
xchg
dec
add
repz
add
jecxz
jae
inc
stos
sbb
std
sbb
xor
push
jl
push
scas
pop
test
mov
xor
push
xchg
or
sub
sub
imul
shll
cwtl
pop
std
inc
mov
jo
jecxz
ret
fadds
jne
cli
push
sbb
out
jb
insb
outsl
and
xchg
cmp
jmp
inc
push
dec
mov
dec
test
cli
push
lahf
lret
mov
mov
jmp
xor
scas
jbe
cmp
out
fadds
popa
iret
dec
lahf
scas
dec
stos
pop
scas
stos
dec
jg
jle
and
ror
inc
lock
push
andl
xchg
xlat
movsb
bound
sub
xchg
adc
push
int
stos
dec
xor
gs
movsl
mov
ss
lret
daa
int3
and
xchg
sbb
pop
mov
dec
test
mov
sub
mov
pop
js
fdivl
sbb
pusha
lret
lods
mov
sbb
mov
push
pop
mov
add
dec
cmp
dec
xchg
imul
xor
shrl
mov
dec
push
push
cmp
jp
push
or
popf
ret
loopne
loope
enter
jg
pop
ljmp
inc
das
adc
inc
cmp
add
push
push
jb
jle
icebp
movsl
je
adc
pop
or
negl
fistpll
xor
xchg
add
jne
imul
movsb
or
sahf
sti
pop
mov
pushf
in
call
inc
and
cmp
out
les
mov
lds
jo
scas
dec
or
cmpl
clc
jnp
addr16
dec
jg
jb
jns
fistpll
in
arpl
cmpsb
enter
out
or
jmp
test
jg
sti
ffree
jno
xchg
sbb
loope
mov
sub
call
outsl
and
mov
adc
push
adc
inc
inc
gs
push
mov
cmp
leave
jnp
add
push
fistl
xor
js
imul
out
inc
push
mov
mov
xchg
push
aaa
jo
jg
lret
lods
loopne
nop
cld
jb
xor
in
xchg
lea
adc
int3
add
aas
xchg
js
mov
test
loopne
stos
lahf
mov
add
fists
add
cmp
mov
xchg
das
lcall
mov
lret
fucomp
and
fs
les
lods
xchg
lcall
call
int
lods
pop
dec
mov
test
shr
fcomps
push
call
jg
mov
dec
addl
xor
dec
fnstenv
call
mov
mov
mov
pop
fsubrs
push
adc
inc
add
or
mov
in
inc
movsl
push
lret
out
and
mov
push
aad
insb
and
xchg
lea
inc
aad
retw
cmpl
sarb
jl
shlb
jecxz
add
dec
fdivrl
inc
lods
ja
sbb
jl
ret
out
imul
movsl
out
lods
mov
ljmp
std
jno
or
lcall
cld
insl
ret
and
dec
dec
adc
jle
sbb
rcr
add
push
pop
lea
lods
add
cld
mov
and
int
cmp
xchg
mov
and
push
jg
imul
hlt
addl
test
inc
sub
mov
dec
insl
test
inc
push
mov
stos
mov
and
pushf
jb
or
sti
push
push
xchg
mov
clc
cmpsl
pop
jne
rolb
mov
das
outsb
push
pop
sahf
mov
jecxz
frstor
shlb
pusha
ja
loop
mov
xor
jl
adc
or
and
fsubp
mov
or
mov
ljmp
adc
pop
jmp
cmp
scas
outsl
sbb
adc
test
xlat
cmc
mov
fs
in
adc
cli
movsb
in
adc
xchg
jmp
cld
cmpl
es
mov
pusha
add
xchg
cs
jnp
out
push
out
push
and
out
sub
iret
dec
fnsave
mov
dec
test
push
push
mov
out
mov
push
fldenv
xchg
or
mov
pop
mov
mov
mov
lret
inc
nop
pop
andl
call
daa
out
aaa
in
leave
fbstp
sbb
mov
sbb
push
fsubrp
cmp
int
ret
leave
mov
aaa
push
xchg
cmc
mov
inc
fdivr
cmp
cmp
pop
ror
sub
rcll
ret
in
out
enter
xchg
lcall
push
shr
mov
pop
mov
add
lret
vminps
dec
xor
mov
inc
jp
add
lcall
dec
cmp
jnp
mov
in
or
or
and
shrl
jl
inc
add
rcrb
ficompl
lock
mov
imul
xor
mov
dec
clc
add
mov
std
or
pop
lcall
xchg
add
mov
adc
pop
movsb
std
and
cltd
pop
add
inc
ja
rol
xor
mov
idivb
xor
pop
add
jb
sbb
sub
push
ss
jmp
fs
jge
xchg
add
xor
out
dec
nop
pop
loopne
movsl
cmp
roll
or
mov
fiadds
enter
inc
push
lea
enter
repz
jg
pop
mov
outsb
mov
lahf
jne
iret
scas
into
aaa
pop
hlt
int3
jle
shlb
test
pop
mov
lcall
add
les
mov
or
pusha
iret
jle
addl
adcl
loope
push
xchg
mov
mov
leave
sbb
fnstenv
xor
rcl
frstpm(287
push
cmp
pop
fsubs
dec
jae
outsl
lret
mov
repz
shlb
xchg
arpl
cld
addl
lods
mov
jg
rorb
loop
xor
xchg
enter
pop
mov
mov
xor
das
push
aam
and
ret
push
dec
fcos
popl
push
cmpl
lods
clc
lcall
cli
nop
mov
jae
mov
jne
lcall
sbb
imul
xor
xor
pop
int3
movb
xchg
add
jo
stos
cmp
push
fcmovnb
fstpl
addr16
das
cmpsb
xor
push
in
out
add
mov
add
lret
jmp
int3
sbb
inc
mov
lods
fidivrs
adc
sbb
sbb
and
shll
or
inc
jno
xchg
pushf
inc
lods
andb
cmc
xchg
xor
lret
dec
mov
lret
mov
ret
cmp
sbb
cmp
push
cmp
orl
pop
leave
jge
jnp
mov
mov
adc
scas
lcall
pop
pop
lahf
out
rorl
mov
mov
shlb
sahf
in
in
outsb
push
jnp
cltd
out
or
loop
je
cs
ss
sbb
incl
ss
mov
push
mov
fst
mov
inc
jl
fidivrs
mov
fsubp
push
addb
and
cmpsl
push
xchg
subb
pop
js
mov
orl
cmc
mov
addr16
aas
daa
mov
mov
test
dec
inc
add
add
push
xchg
jne
out
call
arpl
addr16
stos
sub
sub
mov
xor
xchg
int
ds
js
notb
cmp
mov
aaa
inc
insl
std
jl
addb
lods
mov
pusha
pop
jns
rorb
sub
les
push
fbstp
mov
ret
mov
mov
sbb
sub
dec
das
bound
daa
andl
test
jecxz
adc
mov
xchg
inc
xchg
xchg
sbb
jno
imul
jge
mov
mov
add
fs
stc
xor
jns
mov
in
add
add
mov
xor
inc
lret
out
cmpsl
aad
jge
and
gs
ret
rcrl
test
push
pop
mov
lods
jecxz
pop
cli
xorl
stos
pop
xchg
rcr
inc
jne
inc
icebp
inc
cwtl
mov
pop
cmp
jae
out
push
ljmp
arpl
push
cltd
jle
pop
jno
dec
mov
add
int3
out
ljmp
inc
inc
das
aaa
sbb
ja
xchg
pop
je
clc
in
dec
fucom
cltd
lahf
mov
jns
adc
out
push
and
stos
or
js
pop
push
mov
sbb
mov
iret
dec
cmpsb
pop
push
faddl
stos
mov
imul
inc
or
xchg
decb
add
dec
cmp
xor
and
in
pop
and
fucomi
mov
jo
push
nop
rcrb
pop
insb
sub
mov
xchg
sub
cmpsl
jne
int
rcrl
cmp
pop
test
div
pop
xlat
imul
enter
fists
mov
pop
sub
rorl
xchg
add
mov
lds
pop
or
fldenv
mov
int3
xchg
std
int
mov
incl
mov
cmpsl
and
xor
pop
jne
shl
xchg
inc
lods
mov
je
sbb
and
ret
outsl
cmp
xor
rcll
fistps
pushf
push
inc
cli
add
xchg
sub
stos
jbe
add
gs
movsb
pop
out
fbld
inc
jg
ret
inc
sahf
push
or
ret
fists
cmp
dec
sbb
or
cmp
sub
faddp
shr
jnp
das
sbb
push
xlat
fadd
adc
jl
adc
or
fisubl
or
das
or
cli
aam
sbb
push
pop
inc
stos
lods
pop
mov
sbb
les
push
lret
outsl
mov
loop
adc
js
test
or
or
addr16
fsubrp
aad
push
fistpl
imul
xor
dec
inc
cmc
mov
ret
mov
pop
inc
mov
insb
push
xor
cmp
imul
inc
scas
jo
ljmp
mov
lds
shlb
decl
cmp
add
faddl
ret
cmpsl
and
popl
mov
repz
shl
xlat
adc
dec
mov
loop
mov
push
cmpsl
xor
mov
inc
push
xor
ret
dec
add
add
mov
test
loope
sub
add
and
sarl
xchg
aam
fsqrt
rcll
mov
xchg
and
jb
push
pop
xchg
out
arpl
adc
pop
mov
dec
hlt
mov
popf
dec
lods
add
lea
rorl
push
js
ss
xlat
aam
cld
dec
jp
xor
lcall
sbb
shlb
filds
mov
pop
fmuls
mov
fcoml
aaa
mov
dec
dec
jne
in
movb
loopne
or
sub
push
sub
jae
pop
insl
pop
cmc
adc
jae
rcll
mov
dec
mov
jmp
or
pop
jg
sub
jno
daa
lock
mov
xor
outsl
out
mov
icebp
dec
xchg
adc
mulb
ja
mov
inc
dec
leave
cmp
and
push
daa
xor
cmp
in
adc
pop
call
dec
stos
add
mov
daa
or
test
imul
or
xchg
mov
enter
imul
shl
xor
movsb
enter
dec
cld
adc
cmp
mov
xchg
and
stos
pushf
jecxz
push
hlt
aaa
sub
leave
inc
insl
popf
popa
shrb
stos
imul
mov
mov
mov
mov
inc
inc
dec
push
subl
mov
lea
dec
mov
hlt
push
sahf
ficompl
fdivrp
cmp
fwait
insl
in
retw
imul
pop
jmp
mov
xor
loopne
sbb
jl
pushf
inc
xchg
add
xorb
dec
jg
inc
gs
jbe
and
std
lea
rorl
push
pop
cmpb
mov
test
ret
pop
mov
mov
add
dec
add
and
mov
xor
test
out
push
add
mov
aaa
xor
or
mov
fs
aas
pusha
sbb
push
adc
cmp
mov
lods
mov
add
iret
pop
and
fisttps
insb
mov
das
addr16
sahf
xor
int
sbb
dec
sbb
andl
js
add
cmp
sub
xchg
iret
sahf
cmp
ds
dec
sbb
sbb
sbb
fsubrs
addb
test
shll
stos
in
out
mov
lds
test
adc
repnz
loop
jne
pop
std
out
fmulp
mov
adc
push
xor
mov
clc
inc
nop
add
and
ficoms
pop
or
mov
jne
std
cmpsb
daa
sbb
add
cli
cwtl
push
shll
cmp
cmp
cmp
push
loope
mov
jbe
stc
xor
xchg
mov
in
sbb
cmp
mov
pop
xchg
push
push
mov
or
jge
sub
mov
pop
fucomp
mov
xlat
push
ljmp
mov
popf
imul
clc
xchg
test
pop
ret
aad
add
jecxz
out
inc
pop
outsb
ret
mov
mov
fidivrl
pusha
cmpsl
or
mov
sbb
sub
leave
inc
add
jae
arpl
mov
loop
rorb
movsl
cmp
test
sbb
xchg
mov
cmpsb
out
ja
in
lods
push
cwtl
xchg
mov
mov
push
mov
int3
mov
and
lods
pop
sahf
ss
leave
shll
push
add
loope
jecxz
test
jmp
les
lret
xor
push
cltd
mov
xchg
xor
mov
test
mov
adcl
imul
das
dec
sbb
jmp
cmp
subl
sbb
repnz
loope
sub
out
xor
push
push
rolb
jl
and
push
test
or
sti
mov
loop
rorl
cmp
mov
adc
xor
in
stos
cmc
mov
es
xchg
jge
imul
dec
lds
std
fisubl
mov
inc
les
jmp
gs
xchg
adc
adc
imul
in
cmp
mov
ds
sbb
outsl
push
sbb
add
sub
add
and
rol
iret
or
std
nop
mov
cs
scas
sbb
popf
jb
mov
adc
xchg
fs
xlat
outsl
mov
mov
push
ja
cmp
leave
dec
sub
test
arpl
ja
sbb
xchg
imul
add
push
dec
dec
daa
mov
popa
mov
hlt
popf
ret
pop
ret
int3
pop
test
mov
or
adc
mov
mov
pop
adcl
aad
cmpsl
out
cltd
cmpsl
and
xchg
adc
mov
mov
dec
xchg
subb
fidivrl
aad
insl
cltd
je
sarl
or
adc
lods
inc
fildll
mov
mov
movsl
in
into
out
push
or
jne
dec
daa
inc
cmp
loopne,pt
js
pop
stc
fs
mov
inc
stc
mov
dec
pop
in
jmp
pusha
lods
test
enter
mov
shll
and
leave
mov
and
sbb
arpl
flds
jmp
movsb
insl
dec
iret
cmp
mov
es
das
and
imul
mov
mov
ret
jo
xchg
stos
or
mov
out
and
movsl
sarb
cmp
es
imull
sub
sbb
mov
stos
or
sbb
xchg
xchg
and
pop
fsts
dec
inc
scas
add
mov
sarl
lahf
leave
add
repz
repz
inc
adc
mov
cmp
mov
outsl
sub
insb
sbbl
sub
mov
mov
nop
xor
mov
add
pop
add
dec
sbb
mov
xchg
into
nop
test
cltd
iret
jb
in
sub
std
repnz
fwait
in
push
aad
cld
iret
adc
pushl
fistps
xchg
inc
sar
shl
test
inc
rorb
aad
hlt
sub
mov
psrld
in
sbb
clc
test
and
push
jle
lret
insl
jns
int3
cmp
fidivrl
cmpsb
ficoml
mov
dec
add
fs
iret
in
lret
pop
test
jl
push
sbb
pop
repz
in
loop
mov
sbb
dec
mov
pop
sub
sub
insl
int3
ja
int3
dec
cmp
and
push
push
lahf
xchg
lods
ret
fiadds
dec
push
dec
mov
jns
pop
adc
cmp
arpl
push
jmp
inc
adc
mov
lret
daa
dec
shll
mov
outsl
dec
shlb
lret
jle
jns
pusha
mov
les
xor
add
out
das
push
adc
pop
sub
in
aam
call
pop
repz
jle
fstpt
xor
sahf
dec
popf
enter
ss
sub
cmpsl
scas
push
addb
adc
dec
cmc
and
sub
inc
jno
xchg
mov
and
int3
mov
std
mov
or
and
daa
sub
leave
pop
sub
out
inc
and
pop
scas
or
bnd
adc
outsb
xchg
xchg
insl
xchg
sub
jne
fcoml
jg
sti
push
pop
pop
sub
sti
or
xor
jp
pop
mov
jl
test
imul
ds
mov
add
loop
mov
push
xchg
arpl
addr16
sbb
inc
xchg
loope
int
and
out
mov
popf
mov
add
scas
je
add
push
mov
add
cli
mov
add
push
xorl
xchg
inc
jnp
cmp
sti
inc
decb
mov
outsl
outsb
or
xchg
fstps
mov
outsb
imul
lar
add
loop
subb
push
pop
mov
enter
rcrb
negl
fmul
push
sbb
inc
ror
cmpsb
xchg
pop
pop
push
pushf
lock
and
stos
loopne
sti
mov
lret
push
insl
inc
sub
fsts
sbb
icebp
cmp
lahf
lcall
fmul
mov
fcompl
xor
rcr
hlt
push
popa
imul
fbld
lods
mov
shlb
dec
pop
jmp
fst
or
lods
out
jecxz
mov
jle
xchg
xchg
and
mov
jmp
arpl
lods
cmp
in
into
lds
push
movups
in
cwtl
sbb
outsb
ljmp
cmp
lds
out
mov
dec
cs
in
out
out
mov
cmp
push
out
pop
xchg
shrb
clc
push
ss
sbb
lock
push
jnp
pop
ds
es
lcall
push
je
popf
negl
mov
lahf
pop
rcrl
mov
pop
mov
mov
divb
les
adc
dec
lret
enter
mov
xchg
scas
loope
jo
adc
loope
mov
adc
clc
sbb
push
loop
push
or
cli
cld
add
sub
xchg
ds
div
ja
addb
inc
mov
jg
hlt
xchg
ret
or
dec
fmull
call
mov
addr16
negb
mov
imul
or
sub
jg
cltd
out
dec
leave
fs
shlb
mov
pop
sbbl
ja
fwait
pop
and
mov
mov
das
shrl
movsb
lods
lahf
push
xchg
add
call
mov
enter
add
test
ss
lahf
rcl
jno
mov
mov
pusha
fnstsw
aaa
cmpb
aaa
add
inc
test
adc
mov
mov
pusha
push
fiaddl
repnz
mov
or
pusha
push
jecxz
add
in
daa
sarb
adc
pop
pop
mov
data16
add
fsub
jecxz
inc
dec
pusha
mov
dec
adc
mov
lock
imul
push
mov
rolb
in
adc
decl
jne
add
jle
sbb
mov
and
mov
mov
js
or
cmp
movsl
adc
mov
icebp
cld
inc
lret
xchg
ret
cmc
jns
xchg
pop
sbb
stos
hlt
data16
xor
ljmp
mov
shlb
mov
mov
or
data16
sbb
insb
stc
cld
xor
lahf
push
mov
lea
jp
xchg
sbb
arpl
mov
jno
data16
in
add
pop
nop
cmp
push
aas
push
dec
lret
int
outsb
loope
jecxz
aaa
ret
xchg
jae
loope
mov
rorl
inc
pop
jno
hlt
cmp
jecxz
aad
jno
adc
idiv
cltd
mov
inc
jns
jg
jns
movsl
sti
stos
in
mov
std
jnp
xor
and
or
push
add
std
mov
jmp
mov
mov
xchg
lahf
push
sbbl
mov
iret
cmp
jmp
mov
mov
sbb
insb
cmp
xchg
popa
mov
mov
fmull
pop
pop
inc
xlat
mov
fwait
dec
je
rorl
cld
pop
adcb
jle
cmp
pop
jle
int3
xchg
repnz
bound
shlb
xor
imul
sub
insl
mov
in
sarl
lock
lods
mov
push
cmp
fucomi
inc
mov
ja
into
stos
inc
add
sti
ret
mov
and
adcl
xchg
test
mov
gs
pop
mov
mov
jnp
jl
mov
fninit
lods
mov
push
cmp
push
push
test
push
mov
mov
mov
andb
movsb
adc
ret
out
loope
outsl
ljmp
push
lret
mov
lret
sub
cmp
pop
gs
mov
mov
and
xor
cld
mov
out
jg
mov
scas
inc
arpl
nop
lods
mov
or
pop
fldcw
mov
mov
push
lret
loope
or
insl
pop
cmp
jg
mov
jge
pop
repz
sbb
xchg
stos
jns
mov
ret
mov
dec
or
and
mov
arpl
movsb
ret
mov
bound
pop
outsl
lcall
ret
loope
fld
test
dec
lea
xlat
test
addr16
inc
pop
out
mov
je
push
cmp
test
std
test
dec
cmp
add
sub
scas
mov
inc
ror
das
jg
ds
lret
in
std
fisubl
push
mov
out
pusha
sub
sub
stos
nop
sbb
add
sbb
inc
pop
lea
mov
inc
and
inc
push
sub
jnp
adc
mov
adc
adc
mov
shlb
aam
pop
pop
frstor
xchg
sub
mov
hlt
adc
dec
rcl
xchg
lcall
int
mov
lea
loop
lods
jns
xchg
rol
xchg
xchg
xor
pop
cli
cmp
jno
fwait
cmp
sbb
into
cmp
ret
addb
cmpsb
jae
inc
fisttps
mov
or
cmpsb
out
jb
sbb
xor
sub
movsb
dec
fs
repnz
pop
push
stos
or
sahf
fdivrs
xor
fprem
pop
xchg
lods
inc
outsl
adc
mov
jp
call
mov
jbe
dec
pop
test
pop
cltd
sti
add
and
sbb
mov
cmp
rdtsc
add
fwait
cmp
lret
scas
lret
dec
out
jp
dec
inc
jno
jno
jmp
cmpsl
into
aad
mov
gs
into
xchg
inc
push
inc
lock
lcall
fdivrs
and
pop
in
rol
and
popa
into
mov
sub
xchg
iret
fsubp
xchg
psubb
jmp
add
movsb
adc
outsl
jle
push
and
push
cmp
jmp
cli
inc
cmc
push
dec
inc
xchg
xor
pushf
and
inc
xchg
and
mov
aad
and
stc
xorb
mov
rcl
mov
lock
sub
add
mov
xchg
leave
in
popa
jmp
ljmp
jmp
test
sub
in
jl
fs
jb
orl
pop
xchg
dec
sti
sbb
adc
rclb
cmp
imul
mov
cmp
popa
dec
cmp
fimull
pushf
adc
mov
ret
sub
xchg
mov
mov
push
pop
mov
popf
pop
aad
fcmovnu
or
call
jnp
or
cmpsb
xchg
jbe
loope
leave
repnz
mov
jns
int
and
loop
ja
and
xchg
or
cmpsb
push
mov
pop
jg
cmp
cmp
mov
push
dec
mov
aad
cmp
cmp
mov
arpl
xor
enter
idivb
cmc
cmc
and
dec
or
daa
in
dec
popf
inc
ret
xchg
daa
xlat
mov
cmp
push
leave
fldenv
push
repz
popa
stos
stos
and
enter
xchg
fistl
mov
sub
inc
sbb
or
sub
dec
add
sub
mov
jnp
mov
sub
push
xor
cmp
enter
inc
mov
mov
das
dec
icebp
adc
orb
or
or
fdivrs
inc
out
fisubs
or
dec
pushl
cmpsl
xchg
in
into
sbb
or
lods
and
scas
shlb
loopne
sub
and
shl
push
mov
lds
or
jo
jns
mov
jmp
das
jb
sbb
dec
sub
adc
jge
jbe
mov
in
jb
js
ficomps
rorb
mov
jg
add
repz
push
and
inc
cmpsb
mov
xor
std
lods
pop
push
cmpsb
pop
ljmp
pop
xor
push
or
xchg
stc
test
mov
pop
icebp
test
pop
inc
aam
dec
mov
outsl
and
inc
mov
jne
xchg
lcall
cmp
hlt
ljmp
inc
lahf
mov
jno
or
ja
jg
call
add
sbb
jle
lret
mov
pop
lret
push
sub
shr
mov
movsl
bound
inc
in
dec
mov
lds
flds
out
xor
add
xor
popl
cmp
dec
inc
lret
add
jo
fidivrs
jo
sbb
rcrb
mov
out
mov
addr16
std
xchg
sub
jbe
rcll
imul
push
adc
cmp
cmp
lahf
cli
xor
sub
fwait
test
xchg
mov
lods
insl
push
jle
mov
or
push
jae
sbb
dec
jns
adc
sbb
and
stc
rcrb
cmp
lea
call
inc
pop
mov
popf
sbb
nop
jno
scas
mov
out
push
out
aam
jecxz
or
les
cmp
nop
inc
stos
cmpsl
mov
cmp
cltd
mov
inc
sbb
push
movsl
mov
shll
int
inc
xor
lods
xor
pop
push
lods
fsubs
jbe
cmpsb
add
xchg
in
out
cld
xorl
repnz
push
lcall
cmpsl
push
push
add
or
jge
test
inc
call
xchg
push
sbb
in
xlat
sahf
outsb
jne
sbbb
ret
je
mov
dec
addr16
push
lcall
outsl
iret
push
jae
in
aaa
pop
in
std
test
fsubr
push
sub
jne
sbb
scas
push
je
mov
add
xor
dec
cmp
mov
int
push
cmp
subb
mov
addb
jge
adc
mov
add
aaa
inc
cmpsb
into
mov
mov
fdivr
pop
sub
shrl
pop
dec
cmp
and
addl
dec
push
out
dec
jmp
adc
ret
cwtl
mov
cmp
es
dec
or
pop
sbb
and
jle
pop
mov
mov
pop
adc
sahf
pop
ret
sbb
mov
fdivs
adc
imul
ret
aas
mov
mov
daa
aaa
stc
mov
cs
push
xor
pop
pop
pusha
in
mov
insl
fstps
push
sbb
repnz
dec
pop
push
adc
cmp
js
sbb
out
xchg
xchg
rcrb
jg
and
or
lds
mov
sub
mov
das
add
pop
loope
repz
jae
arpl
clc
push
adc
inc
add
insl
pop
xchg
outsb
push
xor
idivb
lock
jae
rcrb
jno
pusha
imul
inc
pop
ret
mov
push
ficomps
in
or
push
imul
cmp
mov
ficompl
xor
and
and
cltd
int3
std
pop
in
out
jns
or
or
jb
shll
sbb
cmpb
jmp
adc
mov
jnp
push
gs
das
jnp
cmp
mov
xor
ret
cmp
dec
push
sub
pop
and
mov
and
add
push
cmp
xchg
add
mov
fs
sub
push
xchg
inc
les
push
mov
xchg
in
and
int
or
cltd
cld
jns
aaa
gs
mov
xorb
cs
into
rorb
pushf
in
jns
and
fidivrs
aaa
test
daa
int
jae
ret
and
fstl
mov
dec
test
push
subb
movsb
pop
mov
xchg
inc
xchg
xlat
mov
jb
iret
sahf
in
ja
sbb
popa
fstl
xchg
in
sbb
in
out
jnp
aad
or
xchg
mov
je
lods
xchg
into
mov
addl
inc
lods
out
pusha
lret
in
or
mov
in
repnz
xchg
sub
dec
sbb
pop
mov
sbb
insb
sub
aad
xor
jo,pn
lcall
sbb
sbb
mov
sbb
scas
outsb
jbe
xor
push
xchg
adc
shr
jnp
mov
fstpl
xchg
cmp
jecxz
nop
rcrl
mov
fbstp
xchg
in
xchg
rclb
lods
test
mov
fmul
test
pusha
push
shrb
pop
cmpsl
loope
jb
loope
cmp
dec
int3
imul
loope
xchg
inc
xchg
cmp
cmp
je
push
push
xlat
cltd
pop
push
loop
pop
andl
fldln2
xchg
aam
jbe
test
jl
mov
data16
lods
leave
out
dec
call
sub
fcompl
rcr
mov
sub
add
push
sti
dec
test
jmp
push
dec
cmp
add
sbb
jp
and
or
add
outsb
mov
add
sub
popf
or
movsb
cmpsl
pop
push
sub
lret
sbb
cs
xor
insb
das
jb
data16
loopne
shrb
out
aam
push
insb
pop
and
mov
push
cmp
das
sub
jno
out
mov
mov
lea
sub
push
cwtl
test
xor
scas
dec
lea
inc
sbb
pop
call
ljmp
rol
xchg
shrb
or
lock
imul
aaa
ljmp
or
test
xchg
sub
fs
cmp
add
pop
mov
shrb
cltd
inc
pop
mov
add
dec
lods
test
jb
xor
push
int
je
pop
in
inc
loopne
cmp
sbb
repnz
sub
icebp
call
cs
data16
cmp
sbb
xchg
jae
xor
sub
out
fldpi
add
sub
dec
lret
cmp
movsb
cwtl
jb
sub
mov
pushf
insb
adc
daa
lret
lea
out
mov
cmpsb
pop
mov
in
sub
mov
rclb
sbb
fildl
cmp
inc
cmp
inc
or
enter
outsb
cmpsl
stc
das
push
outsb
lods
aaa
cmp
aad
outsb
xor
mov
jp
out
mov
cmpsb
and
stos
outsb
in
push
scas
jl
mov
jb
xlat
push
pop
lahf
out
xor
inc
leave
faddl
pop
aam
mov
sbb
js
popf
sub
popa
mov
movsl
dec
add
push
test
mov
fsubrl
xchg
xor
std
fcoml
mov
xchg
push
cmp
jne
lahf
lds
imul
jecxz
imul
adc
nop
xchg
in
inc
add
js
add
lds
xor
imul
inc
mov
mov
fisubs
dec
adc
call
push
pop
fistl
push
jns
loope
loope
movsb
inc
jns
mov
pop
jle
jb
adc
push
shl
gs
jle
or
or
push
les
insl
divb
lock
ds
in
pop
mov
inc
sarl
sbbl
fmull
cmpsb
xchg
sub
mov
mov
ret
jge
sbb
in
and
xor
push
push
mov
in
mov
jae
sbb
jno
cld
gs
xor
stos
or
fistpl
iret
sahf
inc
xorb
bound
xchg
add
mov
jne
jne
xchg
pop
in
cmp
pop
cmpsb
daa
pop
push
in
mov
sub
or
loope
push
dec
sub
pushf
pop
fs
fdivrs
mov
outsb
insl
jl
loope
mov
pop
jl
adc
adc
or
aas
sbb
test
mov
or
xor
outsb
movl
imul
dec
mov
push
lahf
ret
push
or
jne
jns
adc
mov
testl
xor
sub
movsl
aas
clc
add
adc
lcall
mov
mov
inc
loop
jb
push
icebp
sub
pop
xor
or
fisttpll
push
xchg
movsb
mov
and
adc
xor
sub
pop
aaa
fistpll
mov
adc
cmp
je
push
mov
xchg
mov
mov
enter
xchg
jns
sahf
andl
xchg
fildll
ds
je
adc
cmp
and
addb
sub
pusha
testb
divb
repnz
mov
leave
pop
mov
seto
cmp
push
sub
pop
inc
jge
sub
push
out
aaa
inc
repz
sub
std
stos
fwait
aas
and
cmp
xlat
scas
rcrl
mov
sbb
and
add
pop
sahf
sub
mov
ret
xchg
adc
fimull
stc
jg
push
pop
sub
repnz
lods
mov
mov
into
dec
and
push
sub
fistpll
push
lds
shll
xchg
or
insb
lret
sbb
lea
pop
mov
stc
xchg
test
jns
jmp
jp
mov
and
lods
rcll
adc
xlat
lods
dec
lcall
rcrl
xor
fxch
add
cmp
cmc
inc
inc
or
jecxz
cmp
xchg
jmp
fmuls
loopne
inc
pop
ljmp
lds
dec
xchg
imul
shl
mov
push
das
push
add
lods
cmc
push
ret
fbld
cmp
xchg
xor
fcmovnb
jl
mov
fistl
lea
popa
adc
sub
cmp
leave
jge
and
sahf
repz
cmpsb
jecxz
xchg
mov
dec
add
xor
lds
outsl
sbb
pop
enter
in
mov
inc
aad
mov
int
jb
mov
push
mov
in
jle
inc
dec
add
sub
movb
jge
push
into
fnstcw
cmovge
pop
test
mov
pmaxsw
cs
push
out
lret
dec
push
jmp
rcll
ljmp
js
and
jle
xchg
mov
push
lcall
add
cmp
pop
lret
mov
outsl
shrl
add
mov
rclb
cltd
sbb
or
cmp
scas
xchg
sahf
loop
sbb
jp
stos
scas
and
js
push
inc
ds
xchg
ljmp
xor
mov
sub
rorl
stc
and
lds
pop
mov
mov
ss
popa
jmp
stos
aas
aam
cmpb
loopne
gs
adc
sbb
ja
cwtl
sbbb
push
shrb
jl
out
ljmp
inc
dec
adc
aas
jns
pop
cmpsl
sub
mov
mov
mov
bound
sbb
adc
cs
xlat
xor
gs
adc
sbb
add
dec
pop
hlt
mov
sbb
in
fdivrl
mov
cld
cmp
gs
mov
mov
jp
sub
das
push
inc
imul
sbb
add
loop
ror
sarb
insl
add
data16
pop
or
jg
imul
inc
jmp
inc
or
aam
and
xor
mov
sub
mov
int3
aaa
and
and
add
add
add
mov
sub
add
or
xchg
aad
sub
xchg
adc
inc
lret
sbb
cmp
out
jbe
xor
mov
ss
or
push
jae
loop
icebp
add
shll
xor
in
clc
imulb
dec
test
pop
inc
sti
jecxz
push
dec
xchg
mov
cmpsb
sub
roll
jmp
sbb
sub
mov
daa
das
mov
ret
lahf
add
jg
jecxz
mov
jle
fnstcw
out
push
add
xor
mov
inc
dec
aam
cmp
aad
mov
rcrb
mov
fiadds
ja
xchg
ss
loope
mov
or
push
push
jno
addl
pushf
rcll
dec
xchg
dec
inc
add
pop
mov
outsl
fldt
xor
outsb
dec
cmp
and
lods
mov
pop
es
cmp
insl
sub
or
adc
imul
fistpll
pushl
ds
addr16
mov
inc
pop
cmp
xchg
sub
dec
cmp
pop
outsl
mov
test
inc
das
mov
outsb
push
sbb
stos
mov
xchg
xor
or
cmp
cmc
or
xor
xchg
adc
mov
in
jno
dec
mov
addr16
xchg
inc
xchg
jnp
arpl
lahf
pusha
loopne
stc
mov
mov
les
popf
mov
scas
out
jle
adc
lahf
imul
or
push
movsb
xchg
ror
xorb
insb
cmpsl
pop
ss
cs
or
in
inc
mov
out
popa
sub
pop
fwait
stos
pop
mov
sbb
sub
pushf
mov
cmpsl
dec
imul
int
sar
mov
enter
popa
cmp
mov
lods
int3
dec
and
fsubrl
iret
pop
ja
dec
test
repnz
out
mov
les
mov
jmp
xor
sub
popf
jmp
xor
adcl
pop
adc
push
lods
push
mov
std
adc
fmuls
das
das
jle
jne
fisubrs
adc
pop
cli
jmp
xchg
call
adc
pop
mov
xchg
in
or
pop
mov
sub
pop
rolb
or
stos
pop
int3
mov
jbe
scas
mov
mov
lahf
xchg
dec
sub
arpl
or
enter
enter
pop
cmp
cmpb
add
test
mov
rorb
cmpsb
outsb
sbb
sub
push
mov
sub
mov
es
mov
int3
in
add
add
cmpl
mov
mov
cld
sub
std
and
adcl
cwtl
arpl
popa
insb
cli
pop
or
pop
icebp
cmpsb
dec
add
sub
out
push
sub
clc
adc
mov
dec
loope
push
mov
fisttpll
mov
test
adc
mov
push
xor
dec
call
push
pushf
andl
adc
or
nop
xchg
mov
pop
jge
loop
loopne
mov
insb
cwtl
ficompl
stc
adcb
fs
pusha
ret
pop
cltd
mov
sahf
lods
fcompl
xor
sub
sbbl
or
pop
rcl
stc
cltd
inc
cltd
sbb
test
and
sti
cmp
mov
pop
xchg
sbb
push
xchg
notb
mov
adc
cmc
xlat
mov
pop
inc
addps
dec
cmpsb
sbb
mov
sub
bound
es
and
cmp
xchg
add
das
les
mov
push
cmp
pop
mov
pop
popl
je
mov
lods
ds
mov
ds
sub
jae
xchg
xchg
ficomps
and
aaa
mov
movntq
dec
clc
mov
iret
cmpsl
es
clc
jnp
clc
dec
in
push
sarl
push
mov
ficoml
and
insl
es
daa
call
push
out
jmp
aas
bound
pop
xchg
aam
fwait
add
cld
cmp
xor
pop
jne
test
dec
or
add
testl
out
pop
mov
push
insb
mov
call
daa
stc
xchg
ret
pop
fdivl
push
mov
cmc
scas
adc
xchg
in
cli
pop
pushf
jge
fcomi
mov
out
nop
ret
mov
in
ja
xchg
or
adc
into
std
fdivr
push
push
jg
movsb
add
jo
ljmp
arpl
pop
mov
jg
push
jo
cmp
sub
mov
sbb
mov
repnz
add
ds
sbb
mov
mov
popf
push
cwtl
jae
test
mov
out
aaa
pop
pop
test
outsl
mov
lret
xchg
jp
shlb
fdiv
leave
cltd
test
and
ss
stos
xlat
lret
sbb
aaa
test
inc
rcr
imul
or
not
push
push
cmp
push
xchg
aas
mov
orb
jb
and
or
and
jg
test
adc
leave
push
mov
std
pop
push
subb
and
ror
add
mov
sub
push
sbb
dec
jb
call
sahf
cltd
sub
push
sbb
mov
inc
push
or
jge
mov
cmp
or
add
push
js
out
ljmp
fcomp
sub
or
cmp
sbb
push
lock
js
popa
xchg
cwtl
ret
xchg
js
insb
adc
jp
int
ret
cmpsl
scas
pop
jge
inc
xchg
push
xor
xor
jns
mov
movsl
and
fistpll
sbb
push
fisttps
daa
pop
mov
jne
shlb
pop
or
mov
sbb
sbb
sti
inc
dec
xchg
push
fsubl
and
das
imul
xchg
pop
push
xchg
sti
mov
sbb
pop
ret
shr
leave
test
jns
xchg
mov
roll
pop
sbb
shlb
pop
jnp
loop
sub
lret
jmp
insl
rorl
jge
jl
inc
sbb
mov
test
hlt
fsubr
punpckldq
sti
mov
lods
ret
xchg
or
jmp
std
loop
scas
mov
mov
xchg
add
or
push
bound
pop
xchg
push
ret
mov
cld
addr16
mull
mov
lods
xor
xor
jae
mov
push
dec
sub
sbb
ja
mov
mov
aad
lcall
pop
xor
ljmp
loope
scas
mov
sub
mull
pop
xchg
dec
adc
push
in
mov
inc
cmc
fs
push
outsb
push
test
inc
and
xor
jns
and
mov
stc
cmp
data16
inc
arpl
int3
lret
out
ret
imul
movsl
test
incb
popl
or
lock
jne
pop
xchg
sti
rclb
test
push
fld
out
xor
aas
push
push
mov
pop
mov
pop
or
mov
icebp
mov
xchg
int
dec
shll
ja
mov
not
aam
or
imul
outsl
out
jae
sar
sub
lahf
push
cmp
push
sbb
mov
bound
pop
push
into
int
xor
daa
lcall
mov
push
iret
int3
xchg
aam
rorl
les
pop
push
sub
push
clc
pop
add
fwait
xlat
dec
lods
fstl
cmp
lcall
push
les
cmp
mov
ret
mov
push
fstl
addr16
jle
sub
rcll
fisubrl
xchg
loop
cmp
sbb
sbb
pop
adc
sub
mov
ljmp
push
shll
rcrb
nop
dec
int
sub
cld
jne
fnstsw
ret
pushf
sub
xor
jnp
sub
xchg
cmp
push
sub
psrad
test
mov
lahf
cwtl
pusha
cld
lock
scas
mov
pop
adc
ljmp
mov
jecxz
sbb
mov
pop
ljmp
leave
addr16
add
je
and
out
clc
and
adc
stc
mov
notb
pop
or
gs
mov
mov
js
jl
ss
dec
stos
xor
popa
out
and
pop
loopne
pop
jle
xor
add
mov
loopne
popa
mov
test
cmp
mov
les
mov
sub
fstps
cmp
js
cmpb
stos
in
nop
test
mov
dec
mov
jno
mov
aaa
dec
call
fndisi(8087
sbb
cltd
cmpsl
leave
icebp
mul
and
jbe
mov
movsb
inc
inc
mov
pop
sbb
into
pop
test
idivb
repnz
push
push
imul
popf
imul
sbb
add
fdivl
scas
data16
jg
adc
or
fwait
aam
and
and
in
dec
mov
cmp
push
lret
fildll
sub
in
lahf
scas
mov
bnd
mov
or
or
dec
lods
pop
lods
ds
adc
jb
add
lock
pop
mov
mov
pop
aad
fcoml
xchg
enter
sbb
adc
outsb
dec
dec
cmp
data16
mov
fs
fsub
push
sub
push
xor
ret
jmp
lock
daa
iret
or
icebp
sarl
shlb
leave
jnp
shr
dec
mov
adc
mov
lods
mov
mov
mov
aas
fiaddl
pop
mov
sub
jp
std
cmc
roll
mov
ljmp
jnp
mov
repnz
sbb
pop
inc
xor
in
clc
enter
jno
and
js
lret
jge
out
jecxz
mov
enter
jno
fmul
rcrb
jmp
inc
shrl
or
sbb
stc
push
out
lahf
testl
notl
pop
outsl
push
pop
xor
inc
fs
ljmp
adc
mov
and
mov
outsl
push
xor
sbb
mov
mov
sbb
stc
stc
cmp
push
pop
enter
mov
mulb
ret
sub
in
call
pop
inc
shll
inc
jecxz
cmp
in
jecxz
out
repz
or
das
repz
aaa
out
ret
inc
xchg
icebp
mov
push
and
mov
jmp
push
inc
or
arpl
add
orl
jns
int
jge
lret
aam
push
inc
js
sub
out
addb
int3
mov
xchg
jbe
mov
repnz
movsl
movsl
mov
imul
mov
ds
adc
adc
push
sbb
xchg
imul
das
adc
push
ja
jmp
push
lea
lret
icebp
mov
cmpsl
cli
ss
movsb
mov
aad
test
dec
mov
add
les
sub
paddsw
jne
test
jae
add
mov
scas
pop
cmp
inc
repz
jmp
mov
sub
ss
push
pop
aas
sub
push
jb
xchg
inc
outsl
movsb
dec
mov
xchg
sbb
mov
popf
xchg
dec
inc
cmp
ljmp
push
mov
mov
sti
jecxz
insb
call
nop
out
mov
into
arpl
inc
sbb
pushf
test
add
loopne
or
test
rcll
lock
sbb
sahf
inc
aas
mov
mov
out
jecxz
shl
dec
aad
mov
movsb
mov
xor
and
inc
pop
lods
aas
fists
jl
jno
mov
cs
out
mov
out
les
arpl
xor
arpl
loop
cmpl
loop
fldt
loop
push
andl
divl
call
pop
enter
jo
movsb
add
notl
xchg
xor
mov
jns
inc
xchg
add
aam
jns
mov
ds
mov
xor
loop
stc
sbb
fwait
je
shll
cld
repz
mov
inc
cwtl
mov
ret
mov
lock
xchg
adc
daa
aad
pop
flds
add
add
inc
cmp
cmp
xchg
push
outsl
mov
rorb
aas
mov
adc
mov
sbb
leave
cmp
cmp
cmp
das
mov
jo
aam
add
mov
stc
mov
push
cmp
stos
testl
scas
sbb
dec
mulb
mov
push
mov
lcall
rcrl
call
push
mov
ret
lods
insb
sarl
add
jecxz
out
lret
jne
mov
sbb
mov
hlt
and
flds
add
push
sub
ret
leave
dec
loop
mov
pop
xlat
pop
adcl
es
sub
jge
or
insb
jne
nop
and
fstpt
inc
pop
stc
aas
int
sbb
push
sbb
js
mov
bound
push
popa
nop
or
bnd
cmp
and
cltd
mov
adc
dec
cwtl
jp
in
aas
sbbl
test
jae
adc
fistl
add
ljmp
repnz
testb
ljmp
xchg
mov
sub
sbb
call
out
mov
shrb
mov
jns
inc
jnp
fistl
pop
stos
pop
mov
sub
push
mov
in
daa
or
idivl
lods
push
aam
mov
cs
cmp
pop
or
imulb
or
cmpsb
scas
cmp
scas
push
push
rorb
jae
cmp
cmp
adc
sbb
in
addl
lahf
mov
stos
inc
subl
pop
pop
xor
and
xor
pop
pop
or
pop
mov
mov
and
hlt
dec
sub
pop
lock
dec
aad
ret
das
xlat
and
rolb
fbstp
clc
nop
mov
ret
xor
jo
sti
jbe
cmp
and
sbb
sub
fnstcw
add
mov
mov
dec
insl
xchg
leave
xchg
lcall
or
dec
pop
aam
cmpsb
sub
dec
xchg
gs
push
sti
inc
scas
imul
int3
aad
sub
pusha
les
mov
popf
mov
and
into
dec
testb
push
cmpsl
in
sbb
or
adc
out
add
or
pop
or
adc
mov
mov
es
cvttps2pi
pop
call
mov
dec
xor
cs
jnp
push
jae
jae
or
rorb
ja
lcall
ljmp
loope,pt
lods
iret
fdivrs
sarb
cmp
pop
push
orb
iret
cld
mov
mov
mov
sbb
gs
imul
mov
sti
sbb
lods
mov
dec
bound
nop
pop
xchg
and
xchg
in
lods
repnz
sbb
stc
and
imul
icebp
jne
int3
jg
sub
push
jno
mov
xchg
ror
pop
mov
pusha
add
mov
add
adc
jmp
ss
sub
sahf
dec
shrb
mov
out
mov
repnz
js
sub
lds
mov
mov
rcrb
adc
jg
inc
mov
add
push
scas
repz
subb
int
repz
push
xor
aaa
lods
xor
shll
push
mov
lret
dec
sbb
add
imul
sbb
add
push
scas
test
jb
rcl
and
and
clc
es
jnp
adcl
mov
xor
xchg
test
pusha
xor
and
in
mov
clc
add
fwait
adc
sub
xor
outsb
scas
xchg
rcrb
or
xor
sahf
icebp
out
out
xchg
pop
shlb
mov
loop
or
insl
stc
cmp
jnp
jge
pop
inc
fs
cmp
mov
mov
in
std
xor
xor
and
mov
sub
cmp
lods
sbb
gs
add
ja
xchg
in
jl
inc
hlt
or
cmp
test
ficomps
mov
or
cld
pop
lcall
fildll
out
into
jge
fisttpl
icebp
call
inc
sub
popa
cli
movsl
in
pop
lods
fcoml
movsl
pop
push
xchg
shlb
add
mov
add
sub
cmpsb
and
lret
movsl
xor
out
mov
xor
dec
in
ss
pop
jae
ret
pop
pop
jecxz
lock
lcall
adc
xor
shll
cmc
int3
push
or
mov
jg
mov
shlb
mov
xchg
cmp
shll
fistpll
mov
cmp
stc
sub
imul
cltd
es
cmc
repnz
aaa
or
inc
inc
jle
xlat
arpl
int3
pop
shlb
lea
sub
out
or
ds
sbb
std
inc
and
ficomps
inc
aad
sub
mov
insl
insl
popa
lret
sbb
fldt
xor
add
add
or
xchg
xorl
loope
dec
or
mov
cmpsl
std
xor
fisttpl
cld
inc
mov
mov
sbb
mov
frndint
mov
mov
push
pop
dec
sbb
leave
cmp
lods
mov
xor
adc
daa
test
sub
outsb
xchg
stc
fadd
adc
push
sbb
arpl
pop
xchg
es
movsl
rol
sub
sub
pop
sub
lock
and
cmp
adc
dec
popf
lds
xor
ficompl
andl
scas
icebp
aad
pop
mov
fdivrl
aas
into
sub
xlat
lods
xor
lea
jb
xor
push
test
ss
pop
xchg
fdivs
pop
in
enter
pop
inc
xchg
pop
dec
ret
mov
test
shl
out
out
adc
out
xlat
mov
inc
add
mov
mov
lods
jns
sub
gs
push
adc
xor
fdiv
mov
loope
cmpsb
pop
imul
pop
mov
call
mov
mov
lea
jb
lret
loope
call
cmp
xchg
jmp
pop
mov
jne
push
xchg
outsl
xchg
sub
or
xchg
enter
dec
dec
xchg
aas
jbe
add
mov
and
jp
cmp
pop
xor
pop
bound
sbb
in
repnz
ret
inc
mov
jge
inc
sbb
mov
mov
ret
mov
in
jecxz
test
in
inc
lods
jp
jp
shlb
ja
stos
test
mov
inc
sbb
and
rol
jmp
into
xchg
mov
cwtl
jae
push
add
sbb
neg
push
pop
lahf
popf
popa
les
ret
outsl
push
and
sbb
lret
clc
orl
sub
sbb
push
jo
mov
mov
add
sbb
sarl
mov
cmp
stos
sbb
mov
push
or
jl
mov
sahf
cmp
and
pop
and
jle
jge
xor
push
push
xchg
lock
fidivrs
or
jno
lods
sub
sub
mov
pop
sar
gs
push
xchg
pop
repz
push
push
movsb
movsl
mov
mov
hlt
mov
add
cmp
scas
adc
ljmp
loopne
pop
rolb
mov
xor
pop
andw
loopne
fcom
mov
dec
add
imul
test
das
popa
xor
sti
sti
gs
xchg
roll
andb
dec
fnstcw
xchg
cli
mov
lods
cli
pushf
test
cli
jne
jbe
mov
mov
fwait
push
stos
insb
imul
sub
out
sahf
shll
les
cmp
cwtl
lahf
mov
aad
fcmovne
pop
fwait
negl
or
ja
ret
gs
movsl
pusha
mov
cmp
cmp
mov
xchg
ret
cmp
mov
test
movsl
xchg
or
out
inc
cmc
aaa
mov
jno
or
outsl
xchg
leave
lods
mov
in
leave
dec
sbb
pushf
outsl
bound
movsb
xor
or
mull
or
adc
sub
pop
aaa
sti
cs
jnp
mov
aad
lahf
out
cld
fldl
pop
push
jbe
push
add
adc
sub
lcall
mov
fimuls
divl
mov
fdivrs
data16
mov
dec
dec
dec
lock
jmp
outsb
cmp
jns
jno
cmp
in
out
fnstcw
es
pop
cltd
adc
or
xor
bound
or
int
out
xor
bound
dec
ret
push
xor
cmp
mov
outsl
rol
mov
insl
call
push
dec
sbb
adcb
loope
mov
push
and
cmpsl
pop
cmp
mov
add
sub
push
sbb
jo
mov
mov
out
push
sbb
add
stos
mov
pop
pop
sbb
mov
add
leave
enter
popl
add
xor
repnz
mov
cwtl
lcall
roll
mov
jecxz,pn
pop
iret
outsb
pop
add
fbstp
push
inc
insb
out
xchg
xor
or
out
inc
daa
aas
pop
add
dec
pop
add
arpl
ja
mov
ss
outsb
cmc
fwait
mov
or
popf
imul
loope
popa
cmp
xchg
dec
pop
jo
popa
mov
bound
rcll
cli
mov
sbb
push
push
sbb
xor
push
inc
jns
out
cmp
or
inc
in
fldt
xlat
leave
fimuls
jle
jns
dec
divb
dec
push
xchg
fadd
test
stos
sarl
cmp
pmullw
lods
sbb
aas
xchg
icebp
test
jl
aaa
push
fs
fwait
sub
int3
mov
sbb
loopne
xchg
xchg
xchg
dec
push
pop
lret
cmp
cs
pop
clc
pop
adc
sub
mov
ljmp
ljmp
pop
test
arpl
add
cmp
ficoml
jge
out
in
nop
mov
jg
popa
jge
push
inc
pop
repz
mov
std
cmp
arpl
aam
test
nop
js
jbe
dec
loop
data16
push
sarb
repz
xor
hlt
sub
xchg
sbb
dec
shrl
mov
test
sbb
cmpsl
pop
insl
cmp
fistps
dec
push
jmp
add
xchg
xor
pushf
or
lret
and
jns
lods
insb
cli
jnp
pop
fnstsw
dec
lods
aad
adc
hlt
mov
jg
sub
dec
lcall
xor
jo
sub
cwtl
xchg
push
adc
adc
mov
rclb
repnz
aas
stc
cmp
imul
mov
cmp
cmp
fmul
je
jns
repnz
cmp
ds
add
push
lret
or
sahf
mov
dec
rol
ficoms
cmp
mov
jnp
mov
test
jo
pop
add
pop
mov
fstpl
jmpw
sahf
dec
pop
adc
imul
test
xorl
jb
jne
insb
mov
adc
adc
mov
adc
scas
mov
and
lea
stos
pop
add
jp
or
jnp
movsl
fsubs
addb
pop
test
hlt
addr16
inc
rcr
mov
and
lods
mov
add
rorl
das
xor
push
mov
cli
mov
mov
and
xchg
mov
jecxz
add
xor
cmpsb
outsl
ret
shlb
mov
dec
mov
popa
push
loop
pop
aaa
jo
fldt
sbb
adc
lret
adc
dec
cmc
mov
aas
mov
dec
sti
cmpsl
xchg
inc
sub
push
fdivl
shrl
popf
test
pop
fcmovb
xlat
shl
add
xchg
xchg
fstl
inc
and
lds
adc
ret
dec
enter
sub
stos
xchg
sbb
push
mov
pushf
mov
add
outsl
adc
ja
daa
lock
mov
out
push
mov
mov
lea
and
testl
adc
inc
test
dec
out
movsb
mov
and
lods
into
das
fdivrl
inc
jp
pop
dec
push
cmpsb
shlb
fmull
jle
fsts
int
cmpsb
movsb
fcomi
mov
cmp
nop
mov
pop
xchg
push
mov
movsl
push
arpl
mov
inc
shl
lret
into
adc
sahf
fldl
and
fmull
inc
xchg
mov
push
inc
xor
xlat
das
mov
leave
shrb
jo
mov
dec
or
ret
fldl
lcall
test
sbb
and
out
mov
mov
or
xlat
out
test
lea
ljmp
inc
mov
popa
ljmp
push
jp,pn
jl
mov
lods
inc
jle
mov
add
and
enter
lea
xor
test
rorl
cld
sbb
jmp
xchg
and
pop
inc
stos
pop
push
sub
test
lcall
mov
cld
inc
mov
xchg
in
mov
call
jl
in
test
test
clc
dec
outsl
outsl
cwtl
imull
nop
incl
movb
jns
mov
arpl
sub
adc
pusha
fdivs
rcrb
xlat
cld
hlt
cltd
cltd
and
out
and
mov
push
xor
ret
add
aas
and
rcll
shrl
sub
mov
in
and
mov
xor
push
sbb
test
adc
mov
sbb
iret
dec
push
dec
push
es
cmpsl
icebp
adc
mov
push
add
fnsave
in
and
mov
xchg
push
mov
inc
lahf
test
fwait
jo
jmp
push
add
lcall
inc
xchg
lcall
cmp
ja
push
movsb
inc
jbe
xchg
add
imul
push
lret
jnp
push
sub
xor
dec
imul
popa
fstpt
jmp
in
inc
fdivs
aas
lret
dec
jno
lahf
lock
icebp
lods
xchg
popa
jo
unpcklps
add
mov
pop
daa
in
and
fcmove
std
call
push
jnp
lcall
adc
mov
aas
mov
sbb
pop
or
movsb
mov
and
scas
cmpsb
sub
jae
negl
lcall
cmc
outsl
and
arpl
mov
jns
arpl
push
mov
jle
push
loop
aas
aam
data16
pop
repz
and
popf
arpl
push
adc
out
into
sbb
and
push
mov
cmp
fldenv
in
mov
dec
shlb
in
out
lret
jnp
in
inc
xor
ret
ss
mov
mov
rcl
sub
pop
out
dec
push
ljmp
popa
scas
push
repz
xchg
inc
imul
jnp
xchg
cli
pop
sbb
repz
cld
cmpsb
outsb
cmp
rcr
insb
jge
xchg
enter
xor
xor
push
std
leave
js
inc
pop
sti
movsl
fbstp
aas
stc
iret
sar
push
inc
vpmacswd
mov
sarb
mov
je
cs
hlt
loope
or
jnp
pushf
jecxz
mov
cmp
inc
sti
popf
cmp
pop
stos
xchg
mov
subl
mov
cwtl
iret
inc
jmp
push
js
fisttpl
dec
jg
shlb
push
jno
mull
adc
or
sub
lock
xchg
gs
outsl
cli
pop
mov
cli
and
mov
fadd
cmpsb
lds
into
adc
cmp
lock
lods
jns
mov
fadds
dec
dec
jb
push
inc
cmp
stc
ds
std
mov
hlt
outsl
jge
pop
iret
pop
xor
orb
into
adc
dec
mov
cmp
dec
mov
cmp
fdivs
faddl
fildll
call
out
xchg
push
mulb
xor
dec
jp
pop
mov
lret
outsl
add
ja
nop
xchg
negl
add
jbe
jmp
movsl
dec
aam
xor
imul
stc
mov
or
rcrb
adc
inc
or
sarb
mov
pop
test
ret
mov
mov
scas
cmp
daa
dec
inc
push
xor
jb
xor
rcrl
mov
fmull
push
jecxz
test
mov
or
aaa
dec
nop
pushw
mov
xchg
fists
adc
adc
repnz
and
ret
push
cmp
and
mov
repnz
daa
das
push
xchg
inc
add
insb
cmp
inc
pop
mov
mov
lret
push
pop
test
or
adc
in
mov
dec
cmpsl
jns
dec
ljmp
inc
xlat
jge
cmp
jae
jae
add
movsl
xor
add
in
and
lds
cmp
leave
xchg
ja
and
cltd
xchg
jle
test
mov
adc
dec
jne
sbb
pop
dec
add
lahf
lcall
ret
mov
imul
stc
mov
pop
aam
mov
jecxz
or
ret
movsl
sahf
mov
sbbb
xor
dec
lock
enter
cli
and
mov
ljmp
xchg
outsb
outsl
sub
pop
stc
xor
test
sbb
mov
into
jne
xchg
adc
jae
fsubl
or
cld
aam
sahf
mov
lods
stos
outsb
sub
sbb
inc
jns
xlat
pop
pop
sub
imul
xchg
daa
adc
dec
pop
xor
pushf
sub
imul
jg
sbb
enter
push
push
xchg
stos
and
cld
jnp
ficompl
aas
aaa
movsl
jb
inc
in
sbb
ljmp
mov
push
xlat
insl
pop
cltd
gs
pop
mov
sahf
push
sub
or
fs
sub
test
jl
xor
fidivs
mov
jge
push
shlb
cmp
xchg
xchg
fnstsw
or
fisttpll
push
adc
aad
aas
mov
pop
fwait
xor
in
jp
add
add
ret
jecxz
ljmp
mov
push
dec
testb
pop
imul
paddq
and
ja
lcall
sbb
lret
cmc
dec
fdivl
test
leave
shr
push
mov
jle
outsb
jle
mov
fsts
mov
mov
pusha
out
leave
mov
fbstp
xchg
lcall
cmpsl
int3
mov
out
inc
or
push
lock
movsb
jne
jne
loop
xor
mov
stos
adc
sbb
mov
xchg
jo
sbb
xchg
jae
test
pop
es
push
lret
pop
sbb
fnstenv
inc
lods
mov
jns
imul
jae
cltd
sbb
in
fsubs
movsb
mov
jl
xchg
xor
inc
jmp
pop
mov
xor
lods
mov
out
push
adcl
push
mov
bound
mov
mov
scas
movsb
fs
icebp
leave
daa
lods
ds
cld
sbb
inc
movsb
fimuls
mov
jmp
imull
popa
push
popa
fdivs
add
out
mov
and
test
cltd
std
jae
inc
push
cmp
loope
adc
in
mov
mov
and
cltd
outsb
dec
push
int
dec
adc
push
fwait
pop
sub
pop
adc
sarb
vcvttpd2dq
je
sbb
push
mov
iret
shrl
mov
dec
push
mov
cmp
and
mov
xchg
sbb
inc
adc
out
clc
or
mov
inc
ljmp
add
adc
sub
inc
comiss
jno
popf
xlat
call
ret
les
test
push
addr16
push
inc
leave
pop
int
pop
enter
and
or
shrb
popa
enter
cs
nop
or
jmp
or
js
leave
or
insl
sbbl
ss
std
repnz
std
or
push
mov
mov
pop
pop
or
in
pop
push
int3
repnz
cltd
mov
movsb
sbb
mov
or
nop
xor
das
inc
movsl
sub
int
xchg
fcomps
mov
push
aad
lds
ret
sub
fisubrl
mov
popa
dec
shlb
outsl
nop
add
add
pop
cmp
cltd
cmc
cwtl
push
push
lea
scas
add
lods
stos
xchg
es
cmc
inc
inc
out
dec
jno
cmp
sar
pop
idivb
outsl
inc
sti
and
dec
outsl
xor
adc
int3
and
imul
cmp
pop
adc
fidivl
or
sub
lock
push
cltd
pushl
sub
cs
jo
mov
in
jg
pop
xlat
hlt
cmp
les
xor
or
into
xchg
xchg
push
jmp
ret
repz
inc
mov
dec
xchg
out
pushf
push
fxtract
int
dec
push
add
jmp
popf
mov
sbb
mov
xchg
or
jne
and
jno
int3
jnp
xor
daa
insb
scas
loop
call
and
addps
xchg
hlt
std
rclb
mov
xorl
ljmp
mov
dec
jbe
lret
jge
fdivrl
xlat
xchg
popf
push
sub
enter
pop
inc
inc
sahf
xor
mov
enter
pop
js
das
pusha
adc
ja
ljmp
pop
lahf
jecxz
shl
xor
inc
xchg
in
test
dec
xchg
add
jmp
aaa
push
pop
xchg
sub
inc
stc
adc
rcrl
sub
mov
dec
aam
inc
mov
mov
out
adc
jp
sub
std
xchg
in
or
repz
and
scas
push
inc
bound
enter
jns
dec
xchg
push
das
enter
je
pop
fsubl
arpl
imul
enter
in
addb
dec
in
mov
pop
fistps
mov
jecxz
pushf
data16
inc
fnstsw
and
push
loopne
xlat
std
fdivp
or
pop
mov
mov
mov
adc
add
aaa
enter
jno
dec
lock
pop
and
sbb
mov
adc
jge
dec
fcomi
pop
ja
out
iret
push
push
gs
add
cmp
ret
jecxz
jmp
and
sub
adc
mov
lods
cmpl
pop
int3
leave
mov
shlb
inc
sub
popf
sarb
clc
test
push
push
add
fwait
movsb
mov
jno
out
in
or
lds
push
or
pop
sub
xor
ret
ret
xor
repz
enter
icebp
mov
push
nop
push
cli
xlat
rcr
adc
ds
fdivr
movsb
mov
cmpsl
iret
dec
xchg
sbb
mov
dec
add
test
mov
aam
and
inc
into
or
pop
xchg
ror
in
fcoms
dec
cmp
cmp
fstpl
stos
stos
mov
loope
cmp
push
or
jns
nop
lret
shr
push
mov
rcll
mov
cmp
and
fisubrs
fimull
xor
dec
adc
cmpsl
cmp
adc
pop
rclb
lods
or
stos
dec
imul
xchg
xor
mov
xor
loop
sbb
ret
sbb
sbb
adcl
adc
mov
dec
roll
sub
dec
pop
push
cld
push
jmp
push
cmp
mov
sub
aas
inc
fs
insb
test
gs
mov
sub
add
fsub
je
cmp
pop
and
cmpsl
jge
pop
lds
mov
adc
ds
jg
scas
in
sub
inc
mov
pop
pop
popa
inc
fs
sub
mov
push
xchg
fsubl
xchg
mov
jp
sbb
aad
inc
inc
js
loop
add
stc
mov
add
les
push
in
nop
sarl
or
lods
lock
movzbl
inc
sbb
adcl
fbstp
or
xlat
pop
sub
xchg
cmp
test
movsb
sub
cmp
lods
lcall
add
xchg
dec
xor
xchg
leave
jo
or
mov
pop
push
cmp
and
mov
out
and
fidivl
mov
cmp
dec
arpl
inc
cmp
adc
scas
or
mov
adc
ja
lret
xor
imul
mov
psubusb
or
jge
ret
insl
xchg
sbbb
cmpsb
es
cs
push
xchg
cld
mov
lahf
aas
pop
mov
popa
repnz
inc
push
xchg
and
adc
xchg
in
cmpsl
push
push
inc
dec
push
fimull
clc
sbb
iret
pop
xchg
pushf
or
jl
cmp
jae
jne
lock
xlat
xchg
sbb
fsub
mov
inc
and
mov
xor
push
in
inc
sub
jno
mov
lret
push
fwait
jl
mov
pop
inc
fidivrs
mov
lret
in
mov
xchg
pusha
test
or
sahf
mov
lret
inc
mov
or
dec
inc
or
add
movsb
lret
xchg
xchg
jecxz
pusha
leave
push
add
bound
and
dec
aam
sarb
mov
mov
sti
sbb
xchg
testl
sbb
and
daa
mov
repz
daa
jnp
sub
mov
inc
jp
mov
sbbl
xor
xchg
cmp
sahf
or
cltd
idivl
inc
mov
out
xor
insl
mov
loope
and
out
xchg
sub
sbb
add
outsb
popf
ds
std
and
bound
xor
sub
jbe
lret
jp
lock
sbb
es
pop
or
sub
sbb
fs
and
mov
push
idivl
sub
or
cwtl
test
dec
adc
lea
ljmp
dec
and
sbb
sarl
lock
addr16
jg
mov
dec
and
mov
sbb
xchg
cs
test
adc
lcall
sub
push
arpl
stos
ss
imul
loope
cmc
stos
mov
and
fwait
xorl
ss
add
mov
mov
lret
pop
jle
fisubl
adc
and
mov
sbb
sbb
add
cmpb
fldenv
cmp
cltd
mov
jns
mov
mov
fdivp
orb
fwait
lods
cmp
pop
push
cmp
insb
cmpsb
fcmovne
cmp
jb
cmp
inc
loopne
jle
pop
test
jecxz
mov
cmp
push
mov
or
leave
fs
repnz
mov
roll
in
ror
lahf
flds
sub
mov
jl
dec
cmp
test
dec
out
fdivs
rorb
mov
pop
fcompl
cwtl
pushf
and
dec
mov
mov
loopne
xchg
jo
mov
push
movsl
pop
loope
out
xchg
push
bound
sbb
jo
mov
popa
test
scas
popa
add
test
adc
ja
mov
cmp
aaa
insb
pop
dec
fists
mov
xchg
add
stos
mov
pushf
popf
repnz
jl
cmp
cmp
mov
push
stc
flds
fnstsw
test
cmp
push
push
mov
xchg
sbb
xchg
outsb
inc
inc
ljmp
adc
push
es
sbb
and
es
mov
test
cmp
je
push
jmp
int
push
sub
fcompl
and
lahf
jno
pop
adc
flds
xchg
in
mov
cmp
scas
fidivl
or
fldl
mov
sbb
mov
dec
dec
and
lcall
fcmovnbe
fadds
xchg
pop
lret
loop
push
fnstsw
scas
mov
cmpsl
cli
dec
xor
sti
add
call
cmp
xor
xlat
sub
add
mov
ds
xor
xor
int3
push
jecxz
add
movsl
adc
jmp
mov
cltd
jnp
dec
scas
xchg
js
jp
xchg
mov
mov
sub
pop
in
inc
adc
mov
push
or
sub
arpl
test
idivl
stos
lret
rol
in
test
xor
inc
sub
addl
test
add
mov
mov
cli
scas
add
out
jno
inc
push
cmp
mov
aas
sub
lahf
and
cs
mov
xor
sbb
mov
stos
sub
push
inc
lock
cmp
pop
push
mov
sti
aad
fstpl
push
adc
in
jge
or
ret
mov
nop
pop
or
dec
xchg
fisubs
rdtsc
cltd
dec
push
cmp
adc
ficoml
ljmp
cltd
and
test
mov
push
lock
push
insb
mov
add
mov
stos
test
mov
xlat
fmull
mov
sbb
cwtl
mov
cmpb
push
stos
imul
lret
sub
mov
cltd
add
cltd
hlt
fwait
in
cmpsb
xchg
nop
insl
cmp
or
imul
push
xor
jle
iret
cmp
cld
ds
faddl
xor
push
and
sub
push
sbb
movsb
xorl
in
repz
push
jno
push
lods
lods
outsl
ss
enter
aas
pop
cmp
adc
fcos
dec
jle
mov
adc
push
test
sub
test
sub
enter
ss
out
stos
mov
push
add
jecxz
cmp
icebp
push
inc
lret
imul
push
jbe
pop
inc
pop
sbb
ds
sbb
inc
xchg
xor
je
popa
jle
dec
mov
test
xchg
pop
daa
decl
inc
data16
subl
mov
mov
into
mov
pusha
cld
psubsw
sub
sbb
push
ret
jbe
mov
mov
inc
movsl
movsb
sbb
jmp
arpl
and
scas
push
cwtl
inc
ljmp
arpl
pop
xor
loop
xchg
cwtl
cltd
dec
inc
mov
push
or
xchg
cwtl
lahf
pop
dec
mov
nop
ret
in
add
aam
outsl
push
jne
push
out
sti
pop
xor
xor
fs
xchg
fldenv
rclb
enter
jns
add
cmpl
mov
jg
mov
imul
cmc
mov
sub
idivl
insl
mov
add
andb
lret
lea
xor
push
push
sti
dec
jl
and
rol
addr16
xor
xchg
pop
or
mov
xchg
and
out
cli
aam
leave
cmp
pop
mov
push
test
icebp
addr16
mov
cmp
adc
test
sti
in
sbb
push
push
xlat
pushf
aad
jge
xor
dec
cmpsl
mov
pop
sbb
dec
je
jno
data16
mov
jmp
lock
ror
push
pop
push
ljmp
inc
mul
loop
push
lods
jb
add
pusha
sbb
mov
nop
xchg
or
je
sub
jmp
fildll
fs
shrb
jnp
rcr
mov
mov
pushl
mov
dec
test
jo
cmp
jmp
mov
add
out
add
out
jnp
push
adc
adc
lret
jmp
fisttpl
push
sub
cs
push
inc
sbbb
and
inc
pushf
lret
mov
addr16
mov
gs
sti
hlt
xor
xor
add
cmc
pop
inc
jl
lods
jae
xchg
dec
sbb
in
and
xchg
cmp
imul
mov
jecxz
out
repz
xchg
xchg
add
imul
loopne
shlb
loop
jno
mov
out
cmpsl
mov
cmpsl
jo
popf
cmp
push
push
stc
push
or
ret
aad
pushf
push
mov
mov
dec
inc
xor
cli
shl
nop
ljmp
jno
adc
xchg
xor
mov
inc
cmp
mov
addr16
mov
or
add
push
adc
gs
out
cmc
mov
pop
in
cmpl
or
fistpll
and
ds
xor
insl
lret
mov
daa
sub
or
dec
jo
mov
xlat
into
jae
push
shll
and
frstor
cmc
push
cld
fs
inc
push
loope
mov
dec
inc
addr16
int
lods
pop
mov
pop
inc
jmp
xlat
das
dec
rclb
mov
addr16
add
mov
fs
fs
fmuls
mov
xor
and
mov
or
rcrl
test
shlb
out
mov
fcmovnu
gs
ja
aam
inc
dec
repnz
mov
add
add
or
cli
xchg
js
shlb
jns
mov
fidivrs
addr16
cmpsb
jmp
stos
inc
andl
xchg
mov
enter
cmpsl
push
sub
inc
add
mov
jbe
sbb
push
adc
mov
movb
scas
pop
ret
dec
xor
cmp
mov
xor
ror
imul
jmp
and
mov
xchg
les
or
out
mov
rcrl
inc
mov
mov
loopne
jae
and
daa
add
push
lcall
sbb
cmc
jne
mov
sub
jp
xchg
adcl
cmp
mov
mov
mov
mov
mov
jae
sbb
fwait
sbb
xchg
popf
mov
pop
std
push
push
add
gs
mov
pop
cs
pop
fldcw
in
fadds
in
jnp
inc
xor
mov
push
out
mov
mov
push
es
push
lret
cmp
pop
push
add
andb
adc
fiaddl
xchg
leave
mov
out
ja
je
bound
mov
jb
popa
bound
sub
aad
jae
push
clc
out
pop
outsb
pusha
xor
inc
lea
xor
inc
sub
stos
enter
dec
jne
add
xor
addr16
mov
push
xchg
jle
or
jecxz
sub
push
insl
or
notb
mov
ret
repz
pop
iret
movsb
lcall
adc
and
mov
adc
mov
adc
popf
hlt
cmpl
jecxz
cmp
pop
jecxz
out
dec
sbb
sub
daa
or
xchg
out
add
movsl
jge
and
cmpb
dec
pop
and
imul
mov
loop
mov
icebp
inc
or
and
out
shl
inc
xor
mov
mov
adc
jo
out
rolb
repz
inc
cmp
shll
jmp
repz
hlt
mov
jg
mov
jns
or
test
in
out
push
mov
ret
repnz
into
inc
xchg
adc
aam
aaa
das
ds
cmp
sbb
in
fists
movsl
xchg
shl
mov
push
test
cmpsb
add
shrl
popl
fnstenv
adc
pop
and
stos
and
xchg
les
clc
sub
stos
out
jns
lods
into
add
push
imul
dec
std
pop
ret
cmp
inc
mov
lret
sbb
ficoml
dec
ds
out
xor
sbb
cmpsb
mov
mov
and
fistpl
je
mov
jnp
fdivrp
mov
mov
inc
negb
lret
xchg
in
in
out
or
rclb
push
dec
sbb
pop
iret
push
in
outsb
jne
mov
add
push
fs
jle
dec
pop
repz
and
cmp
call
sbb
push
je
xor
mov
and
fldt
in
test
icebp
lahf
xchg
outsl
and
mov
lahf
imul
movsl
xchg
jp
jmp
jb
imul
dec
sub
jbe
loop
mov
jbe
loope
call
lock
aad
loop
mov
add
shl
push
pop
nop
stos
jle
and
mov
mov
sahf
fadds
inc
pop
pop
pop
jmp
in
mov
jbe
test
jns
and
sarb
and
and
movsl
daa
jle
adc
das
std
into
and
frstor
mov
mov
and
ret
push
icebp
lea
popw
sar
dec
dec
inc
adc
popa
aas
ljmp
std
push
pop
and
jnp
mov
daa
movsb
fnstenv
sbb
mull
sub
cld
pushf
cmp
dec
sub
lods
loope
imul
pushf
push
scas
cmp
repnz
pop
dec
cld
loopne
inc
xor
sbb
lret
inc
ss
fmull
ror
loopne
xor
pop
lea
dec
cmp
mov
dec
pop
aad
inc
lds
sub
or
mov
or
xorl
mov
inc
test
int3
push
daa
cmp
in
cld
int
and
xor
in
xor
mov
stos
sub
sub
ljmp
push
pop
jp
sub
addb
callw
test
push
add
pop
jbe
sub
repz
adc
into
push
dec
in
rcll
test
mov
xchg
cmp
ret
mov
fisubrs
arpl
cmpsl
lcall
pop
cmpsl
jmp
jne
mov
in
lods
dec
xor
and
testl
stos
das
lods
cltd
mov
jae
jp
jno
sahf
aaa
jmp
push
aam
xor
push
xchg
ret
ds
rcl
sbb
dec
cmp
scas
jo
cli
pop
mov
divb
ja
cmpl
and
jle
inc
adc
subb
cmpsb
jo
ss
jae
push
data16
adc
xchg
fsubrl
jmp
shrb
mov
add
push
or
inc
or
or
divl
vpshlq
mov
jbe
fiaddl
push
fdivrs
fmull
cmp
adc
mov
dec
popf
pushaw
in
orb
cmp
cwtl
popa
xor
cwtl
inc
and
pop
stos
inc
cmc
orb
add
hlt
hlt
ja
pop
sbb
xchg
fisubl
cs
cld
xchg
cltd
push
sub
repnz
mov
loopne
sahf
mov
cld
loopne
add
inc
dec
sub
push
mov
dec
xor
iret
or
out
inc
lret
mov
std
in
mov
push
push
or
add
jns
out
or
movsb
push
mov
fstpl
jae
test
inc
bnd
push
test
push
inc
idiv
sub
popf
cmp
andl
push
fidivs
xorl
sbb
faddp
inc
lcall
out
addr16
cltd
xor
push
movsb
sbb
inc
icebp
xchg
dec
pop
enter
and
into
les
or
shrl
scas
stos
pop
push
sub
jae
dec
mov
jg
and
xchg
jmp
dec
or
push
or
test
hlt
adc
fsubrl
xor
rcr
and
ljmp
cli
lock
mov
xor
rcrb
xor
imul
imul
and
cmpsb
jp
sbb
xor
imul
daa
sbb
inc
mov
jbe
or
sbb
ja
test
mov
sbb
cmp
in
into
xor
xor
cmp
popa
mov
push
xor
daa
divl
aas
jo
das
dec
outsl
pop
lret
dec
loopne
pop
insl
add
and
fwait
imul
xchg
jb
lds
inc
xchg
ljmp
stos
or
push
inc
out
out
test
insl
pop
aaa
out
xor
pop
and
pushf
addr16
ret
clc
std
inc
or
fmuls
imul
nop
mov
ja
aas
arpl
push
aad
jl
orl
pop
pusha
cmp
mov
out
rclb
mov
pop
mov
dec
inc
or
imul
sbb
or
jb,pn
loope
cmp
sbb
rclb
andb
out
mov
aad
fstps
loop
xlat
sub
dec
lea
testb
cld
stc
fidivrl
pop
in
and
xchg
xor
call
sbb
aaa
add
je
adc
adc
push
push
dec
mov
pop
out
cmp
ljmp
incl
adc
fisubl
std
mov
push
jno
cli
pop
or
sbb
sub
lcall
sub
pop
in
pop
mov
ss
popa
and
sbb
adc
dec
in
ss
leave
out
or
sbb
aaa
aaa
and
mov
jbe
clc
pop
stos
repnz
and
dec
scas
rorl
sub
mov
inc
mov
jo
add
ret
aas
mov
repz
jecxz
mov
adc
repnz
enter
movsb
test
inc
adc
cli
push
test
negl
jecxz
or
aaa
in
mov
out
in
enter
into
xor
push
scas
std
dec
in
or
nop
sub
scas
fwait
cmp
popa
pop
dec
push
mov
in
push
mov
cwtl
cmc
dec
pusha
mov
loop
imul
outsb
in
scas
jnp
cmp
jno
mov
and
movsb
jl
fiadds
xor
loope
cltd
popa
inc
in
push
pop
push
sti
lcall
out
lret
mov
fdivrl
sbb
cmp
mov
out
leave
add
fwait
adc
sbb
subl
mov
repnz
popa
mov
xchg
jmp
dec
mov
sub
xor
das
lret
pop
add
inc
out
in
in
imul
idivl
shlb
mov
push
or
aaa
sub
leave
push
inc
nop
add
clc
push
pushf
push
dec
add
ftst
xor
clc
ficoms
les
mov
outsb
pusha
mov
push
mov
xor
add
jb
pop
divb
into
jmp
inc
xlat
sub
mov
lret
jno
push
pop
xchg
jnp
mov
or
xchg
mov
cli
gs
push
cmpsl
push
inc
inc
xor
stos
sub
mov
push
xchg
ficompl
cmpsl
addr16
dec
xchg
outsb
push
mov
out
ficoms
in
mov
sbb
mov
scas
ljmp
loopne
push
xchg
lock
xchg
icebp
jg
dec
pop
mov
stos
int
lret
adc
loope
adc
js
mov
inc
in
cmpl
loop
insb
jne
cltd
rcrb
pop
xor
xchg
test
sbb
iret
pop
cld
mov
pushf
adc
push
sbb
bound
clc
jmp
test
pop
movsl
mov
cli
jmp
rcrl
movsb
push
push
dec
lahf
into
dec
jns
out
and
fwait
add
dec
mov
xchg
dec
cmpsl
gs
fidivs
js
mov
out
outsl
lret
es
dec
imul
bound
mov
ret
fisttpl
push
mov
into
cmpl
cs
lods
in
pop
or
data16
loopne
pop
dec
dec
mov
push
push
xor
mov
xor
fs
mov
and
xlat
adcl
jns
xor
bound
cmp
imul
fmulp
loop
and
out
aas
lahf
xor
jo
stc
in
mov
mov
test
xor
enter
adcl
xchg
inc
jle
into
xor
lahf
adc
mov
xchg
pop
orl
movnti
xchg
dec
js
popa
lods
mov
pop
add
jae
mov
test
cmp
cmp
jge
inc
push
cmp
jnp
cmpsl
xchg
addr16
pop
mov
iret
and
push
daa
mov
xchg
cmp
sbb
gs
cltd
sbb
outsb
icebp
sub
dec
push
or
mov
push
mov
fwait
in
je
pop
stos
mov
and
cmp
sub
aaa
cmp
dec
jb
jnp
int
pop
xlat
out
and
mov
incl
xor
add
push
xor
test
xchg
mov
fs
xor
inc
sahf
add
iret
adc
adc
pop
aas
adc
xchg
or
cmp
and
das
push
fimuls
cmp
cwtl
sbb
cmp
addb
lea
dec
jg
out
xchg
dec
bound
xor
xor
inc
popa
push
loop
shll
test
push
or
mov
and
adc
hlt
call
cmc
out
shrl
mov
lods
mov
pop
aaa
sarb
ret
xor
xor
testb
push
bound
popf
lcall
faddl
shll
cld
iret
adc
sub
in
jns
in
fcmovnu
scas
in
xor
add
and
int3
imul
cmp
jo
xor
cld
or
xor
mov
sbb
adc
pop
dec
cmp
test
mov
push
ror
mov
arpl
or
jmp
ret
decb
sbb
std
mov
enter
outsb
mov
popa
repnz
cs
push
xchg
and
out
cwtl
and
popa
fildl
lcall
mov
lods
lods
je
inc
xor
jno
mov
shl
pop
stc
enter
bound
xchg
insl
lods
xchg
lock
sbb
mov
inc
call
cmp
leave
xchg
fwait
jnp
mov
aas
mov
inc
or
push
das
repnz
push
inc
aam
movl
cmpsl
mov
nop
xchg
sub
mov
mov
mov
test
lock
fcom
inc
mov
pop
pop
scas
int3
int
push
insl
pop
mov
daa
cmpsb
xlat
aam
pop
xor
imul
icebp
je
cmpsl
das
in
rolb
stc
xor
push
mov
pop
or
jo
mov
movsl
mov
lock
jmp
mov
imull
iret
loop
sub
clc
xchg
bound
cmp
scas
loopne
js
add
adc
or
lods
cltd
push
dec
incl
pop
repz
inc
or
test
inc
rcrb
hlt
jmp
lcall
sub
pop
xchg
add
inc
in
loop
jo
jmp
or
add
xor
or
add
mov
daa
mov
imul
pop
push
nop
xchg
test
test
movsl
aas
push
addb
dec
ret
out
jns
mov
aas
pop
xchg
cmp
jbe
sti
xchg
sbb
lods
out
les
decl
cmp
xchg
xchg
sti
mov
xor
andb
xchg
clc
mov
cmc
cmp
xchg
push
ljmp
stc
push
push
out
sti
and
outsb
ret
in
adc
push
push
pop
nop
loopne
or
sub
pop
or
je
int
push
inc
xor
loope
jb
imul
jmp
clc
inc
xor
xchg
ja
xchg
int3
dec
cmp
inc
cli
int
cmp
push
xchg
xor
cmp
and
test
repnz
dec
ja
add
into
les
mov
push
inc
lods
cmpb
popa
add
mov
inc
jne
dec
lock
movsb
cwtl
shlb
ljmp
mov
xchg
inc
inc
ds
fwait
mov
les
pop
iret
xor
clc
add
dec
push
and
dec
push
sub
and
jb
adc
jg
out
push
je
jge
hlt
das
adc
jae
ret
stos
mov
mov
adcl
loopne
or
movsl
fsub
add
lret
into
pusha
push
pop
sbb
dec
cld
add
fadds
cmc
pop
xlat
int3
adc
jecxz
pop
dec
dec
sub
incb
xorb
mov
es
cmc
fs
mov
dec
mov
mov
cltd
jbe
sub
ficoms
outsb
push
mov
movsb
loopne
sub
dec
xor
cmpsl
push
jecxz
jne
mov
in
test
mov
pop
xorl
lret
movsb
std
inc
mov
mov
stc
xchg
mov
aad
popf
dec
inc
hlt
and
cmp
nop
xchg
jp
sti
mov
test
xor
test
sbb
mov
jns
jns
pop
imul
shr
push
mov
out
jns
lods
mov
pusha
subb
cltd
jg
out
mov
cs
or
js
ret
pop
aam
outsb
sbb
std
out
sub
push
out
sbb
jecxz,pn
lods
xchg
or
jecxz
jl
lcall
push
xorl
in
push
leave
enter
jp
iret
adc
xor
call
cmp
clc
int
orl
arpl
or
mov
imul
jp
mov
mov
pop
repz
bound
mov
pop
fldcw
xor
jae
mov
scas
leave
sub
mov
add
jl
push
inc
mov
pushf
inc
sub
test
adc
or
cmpsb
adc
loopne
jmp
cli
sub
and
fsubs
into
push
mov
mov
lods
adc
imulb
push
cmp
shlb
sub
xchg
jbe
in
test
inc
imulb
sbb
rcr
mov
adc
cmp
xchg
movsb
shlb
add
nop
js
pop
jno
inc
mov
aad
sbb
data16
aas
loope
imul
inc
add
pop
sub
mov
dec
add
mov
scas
sbb
mov
int
loop
sub
ret
and
xchg
std
mov
cld
pop
push
cmp
cmpl
jge
mov
mov
cmc
es
rorl
inc
adcb
out
add
inc
dec
and
sub
or
fadds
dec
mov
push
or
xor
je
adc
in
adc
movsl
mov
push
push
stos
insb
rol
stos
and
and
and
test
stos
cmp
cltd
sub
cmpsl
inc
in
adc
mov
pop
or
shl
dec
loope
movq
leave
or
in
dec
cmp
outsb
adc
in
lods
daa
inc
xor
jle
cmpsl
sub
add
test
mov
in
mov
cmp
push
sub
add
sub
cmp
stos
outsb
pop
pop
int
je
jmp
sub
lods
std
mov
push
push
mov
test
call
push
loope
lahf
add
or
push
mov
or
into
mov
push
pushl
mov
int
jge
repz
fmul
adc
adc
iret
sbb
mov
repz
jmp
dec
jp
into
mov
cltd
mov
int3
addr16
jae
pop
jo
test
movsb
aas
out
ror
movsb
add
loope
fwait
stos
mov
mov
or
js
cltd
das
cwtl
pop
xlat
enter
or
and
cmp
jno
pop
enter
in
or
adc
add
popf
pop
pop
mov
xorl
clc
fs
mov
mov
add
sub
xor
xchg
mov
mov
push
sub
xlat
jae
fstps
shl
xor
push
inc
das
mov
std
push
dec
rcrl
jb
xchg
and
lds
xor
sub
add
push
insl
add
push
cmpsl
bound
scas
out
je
or
ss
hlt
mov
cmp
push
sbb
popf
icebp
int3
pop
daa
pop
cmp
into
adc
lods
push
mov
mov
out
repnz
jmp
push
insb
arpl
fld
sub
fbld
jnp
stc
les
fwait
repnz
adc
xchg
or
lret
and
mov
cmpsb
ud2
rcrl
in
ljmp
fsincos
imul
shll
pusha
out
in
arpl
xor
push
pop
das
add
push
mov
jne
imulb
dec
push
into
mov
pop
in
jmp
inc
iret
into
dec
lahf
es
rcr
or
pushf
pop
dec
lods
es
lods
xor
add
ja
jb
jecxz
lret
xor
add
xchg
or
subl
cs
dec
cmc
js
push
and
in
mov
aam
mov
cmpsb
imul
in
inc
out
mov
inc
mov
cmp
dec
xchg
icebp
decl
mov
xchg
fldcw
test
inc
leave
lods
std
cmp
pop
xlat
bound
lret
jecxz
pop
idivl
repnz
xchg
ret
bound
adc
jae
movsl
lods
ljmp
cmp
sbb
mov
faddp
and
or
pushf
push
hlt
pop
mov
push
xchg
add
push
adc
jae
iret
xor
add
lahf
ja
xchg
sbb
arpl
mov
mov
mov
imul
pop
push
sub
imul
shlb
xor
repz
mov
lcall
jne
cli
sahf
fcom
xor
push
xchg
add
pop
sbb
xchg
mov
jg
jne
add
stos
mov
ror
or
and
adc
ds
jle
je
mov
adc
sub
gs
stc
call
aas
out
cmpsl
movsl
dec
pop
dec
ret
adc
mulb
in
sub
push
adc
inc
xlat
out
pusha
cmpl
fists
std
aas
xchg
lods
rcrb
mov
stos
mov
sub
aaa
pop
ds
sub
in
dec
xor
stos
stos
insb
std
imul
in
mov
mov
push
aaa
adc
lret
xchg
es
mov
gs
add
push
fucomip
pop
incl
aas
push
lea
es
add
int
in
pusha
sti
ret
xchg
shrb
lods
jp
add
test
mov
push
xlat
cmp
insb
clc
push
js
out
mov
inc
mov
leavew
mov
or
mov
mov
sbb
sub
add
sub
dec
pop
jecxz
lods
loopne
in
inc
sahf
fcomi
outsl
sbb
in
fwait
cmpsl
out
jp
in
jmp
cwtl
or
pushf
popf
or
addr16
mov
push
imul
test
mov
int
and
test
cs
xchg
push
dec
pop
cmp
insl
push
mov
adc
jne
add
test
mov
int
xchg
dec
cmp
fimuls
sbb
outsb
out
mov
test
xchg
dec
aaa
and
sbb
sti
xor
fisubs
dec
cmp
xchg
fisubrs
or
cs
mov
gs
sbb
jnp
lea
pushf
insb
sub
ljmp
fdivs
lea
and
or
xorl
mov
fdivrl
pop
cs
pop
cmp
xchg
mov
enter
inc
or
pop
pop
bound
fildl
out
scas
daa
loop
cmpb
pusha
int
cmp
test
sub
icebp
imul
push
inc
inc
dec
fstpt
mov
cmp
rcl
insb
dec
push
mov
mov
jl
pop
ret
das
arpl
outsb
mov
push
test
js
mov
test
pop
xor
xchg
mov
jno
aaa
xor
mov
or
or
pop
popf
fsts
or
mov
addl
mov
dec
outsb
aad
out
test
cmp
mov
aad
gs
sbb
cli
cmp
in
movsb
inc
pop
scas
dec
jnp
lea
cmpl
jl
fcomps
sbb
cmp
mulb
sbb
repnz
sub
inc
ja
lea
lock
stos
push
lods
cltd
mov
lods
in
loop
das
mov
dec
sub
mov
push
aas
lea
xor
xlat
inc
inc
dec
aad
cli
sbb
insl
jno
sub
sub
add
xchg
lea
stos
mov
pop
jmp
dec
jnp
ret
fdivl
add
fistpll
sar
add
pop
jno
mov
cmpb
cmp
in
cmp
pop
jp
and
into
xchg
testb
mov
popa
push
call
cli
ds
pop
jg
pop
outsb
mov
mov
pop
loope
sub
dec
push
jmp
out
test
adc
cmpsl
aam
das
rep
inc
pop
das
xor
sub
sbb
mov
jo
pop
or
xchg
sub
int3
pop
sub
std
sub
jge
jle
mov
xchg
jb
stos
insb
inc
aas
add
cwtl
fsubp
pushf
jb
sbb
es
xor
push
cmpsl
repz
out
dec
imull
jno
pop
xor
mov
cltd
clc
jle
sbb
cmp
cld
scas
movsb
push
push
out
jg
jo
popa
lock
add
lret
mov
xchg
or
mov
in
lret
cmpsl
stc
cmp
push
sbb
ja
mov
mov
and
inc
xchg
mov
dec
daa
sub
ss
inc
into
repz
sbb
add
push
rorb
sti
mov
das
stos
push
test
aaa
mov
mov
mov
in
adc
push
xchg
xchg
pusha
add
shrd
call
call
sub
shl
mov
jno
xor
sub
outsl
in
pusha
push
push
mov
in
mov
add
mov
int3
in
aad
into
push
fsub
xchg
gs
bound
pop
or
outsl
lret
iret
xor
ja
addr16
aad
push
xchg
fidivrs
or
push
jbe
insb
test
jno
xorl
inc
into
shl
sar
mov
jno
jae
mov
mov
jb
imul
adc
xor
add
test
loopne
sbb
mov
enter
cmc
dec
je,pt
sarb
mov
mov
add
pop
cmpsb
jg
push
push
dec
das
dec
mov
insl
fsubrs
insb
dec
dec
mov
ja
fs
incl
inc
pushf
int3
loopne
jecxz
mov
or
lds
adc
push
leave
test
fstpl
adc
mov
jmp
outsb
sbb
int
xchg
xchg
mov
gs
test
and
push
jbe
aam
rorb
inc
pop
in
jecxz
dec
mov
pop
adc
adc
jno
push
jmp
pop
mov
mov
outsl
roll
sbb
sub
test
daa
push
sub
pusha
pushf
pop
hlt
mov
jg
daa
mov
rcll
inc
jb
pushf
mov
dec
scas
lds
sbb
sahf
enter
xchg
mov
out
and
es
fs
sub
mov
popl
arpl
inc
jnp
gs
jg
add
shrb
aam
jnp
add
add
inc
add
lret
jno
and
sbb
stos
aad
mov
lret
ss
roll
sti
push
mov
addr16
cvtpi2ps
xor
xor
cmp
mov
sub
out
in
mov
mov
pop
mov
push
subb
packsswb
cld
or
loop
nop
addb
sub
ljmp
shll
mov
push
sbb
adc
into
jmp
ss
ds
cmp
and
jae
mov
pop
or
push
cmp
sbb
sub
es
or
xor
mov
rolb
mov
movsl
jnp
mov
add
cmpsl
push
add
clc
xor
mov
mov
ror
add
jae
push
jg
ljmp
fisttps
rorl
or
fimuls
push
ljmp
outsl
push
int3
push
sub
insl
lret
pushf
int
dec
sti
add
shll
push
pop
lahf
dec
rorl
imul
push
sbb
or
lcall
sbb
and
aam
popf
jno
and
cmp
mov
pop
int3
jbe
mov
ret
jg
scas
xor
out
adc
mov
stos
addr16
pop
xchg
loopne
hlt
or
subb
push
and
add
sub
aaa
or
inc
hlt
lret
js
arpl
xchg
mov
sahf
nop
pop
sub
sub
push
scas
sub
adc
xchg
push
pop
lahf
xchg
push
testl
rcll
test
xor
mov
sbb
mov
pop
jle
dec
xchg
sbb
xor
fistps
mov
push
ds
rcl
jg
insb
repz
shrl
cmpl
pop
cmp
sub
out
lret
cmp
xchg
lret
fdivrs
jecxz
sahf
or
stos
add
int
pop
rcrl
mov
jb
jo
imul
ja
les
notl
data16
js
or
sub
sub
sbb
or
rcrl
out
cld
and
ja
js
or
mov
pop
clc
add
pop
scas
out
push
das
mov
ret
inc
fsubrl
insl
adc
pop
fst
loop
push
div
filds
cmp
movsb
fsubs
lods
ss
sbb
jae
repnz
mov
ja
inc
dec
andb
out
pminsw
sbb
test
stos
pop
shrb
mov
pop
dec
sub
lods
add
movsb
mov
jp
into
xchg
xchg
add
imul
push
xchg
into
ds
pushl
mov
fdivr
or
out
aam
adc
or
lahf
inc
push
and
mov
push
and
dec
mov
orl
jp
icebp
inc
ljmp
bound
imul
pop
lds
cwtl
sti
dec
mov
add
shrb
movsb
and
sbb
inc
add
pop
add
jecxz
and
stos
ds
outsb
jne
lahf
data16
paddd
sahf
push
mov
sub
fnstcw
fstpl
mov
mov
adc
je
rorb
xchg
hlt
nop
push
addr16
xchg
adc
ss
inc
fs
inc
push
push
lds
pop
sbb
nop
xchg
ret
scas
push
mov
push
mov
arpl
mov
pop
or
fcmovnb
sbb
je
pop
dec
sbbb
add
pushf
mov
stos
repnz
mov
enter
add
lea
add
xchg
inc
icebp
je
scas
jg
mov
nop
jbe
fwait
jo
jo
cmp
sahf
clc
mov
jg
dec
pop
xchg
xor
std
push
fwait
lock
add
shrb
inc
mov
add
pop
xchg
sub
add
push
sbb
mov
mov
loop
fbld
cs
push
push
clc
xchg
fistpll
or
outsb
push
and
outsb
jge
push
xor
jae
lcall
loope
jg
cwtl
dec
int
in
in
aam
rorb
push
call
push
add
movsl
jmp
dec
cwtl
jg
fldt
push
into
fnsave
xor
lret
call
xchg
mov
mov
mov
lock
lods
push
pop
jp
pop
pusha
into
icebp
add
clc
je
iret
ja
ds
lahf
jns
mov
xchg
rol
jb
daa
movl
in
mov
loopne
push
negl
mov
jl
inc
shl
pop
inc
push
xor
lods
in
cmp
in
aad
jne
dec
jne
cltd
pop
loopne
leave
out
mov
cmp
fists
mov
das
repz
xchg
sub
lods
shr
adc
xchg
add
sbb
jge
shll
insb
scas
sbb
andb
inc
inc
or
and
movsb
cmc
push
ja
repnz
mov
sub
ret
inc
std
je
and
addr16
popa
stos
cmovo
and
mov
adc
es
adc
push
shlb
ret
push
loopne
into
xor
pop
mov
and
fldcw
imul
mov
movsb
jb
mov
andb
les
fsubrp
and
shr
push
fadd
into
sub
jmp
inc
shlb
jecxz
stc
xchg
pop
jo
pusha
push
adc
leave
add
cmp
addb
into
cmpsl
and
int3
in
fcompl
lahf
cltd
push
cmp
push
jecxz
mov
cmp
add
pop
iret
jnp
or
dec
imul
fdivrl
call
nop
cmpxchg
sbb
mov
fwait
pop
in
stc
repnz
rclb
test
lret
shlb
jb
int
dec
or
inc
arpl
xchg
sahf
pusha
in
inc
xor
daa
or
xor
jne
and
jl
icebp
subl
je
lock
movsb
movsl
ret
in
mov
jle
mov
inc
xor
mov
roll
repz
adc
pop
mov
inc
addr16
ret
fsin
repz
cmp
push
adc
hlt
inc
aaa
insl
dec
insl
int3
ficompl
push
mov
dec
adc
cltd
jno
mov
sub
arpl
divb
popf
sub
popa
cmpsb
inc
insb
and
cmc
test
das
jnp
fsubl
or
loop
lahf
xor
push
jb
xchg
jae
or
or
jecxz
push
out
cmp
xchg
sti
push
xchg
cmp
mulb
sbb
sti
rcll
jmp
outsl
xchg
sub
outsb
insb
fwait
jle
mov
shrb
xchg
jbe
pop
adc
test
stc
jb
cmpsb
rcl
mov
adc
fnstsw
inc
stos
out
jnp
push
mov
hlt
gs
mov
push
or
mov
adc
cld
insl
lea
push
jbe
push
adc
iret
setg
push
movsl
mov
int3
add
mov
mov
insl
jmp
push
cld
sarl
aaa
dec
ret
out
sub
pop
rclb
push
notb
int
sti
fnstenv
rorl
mov
je
stc
mov
out
ret
add
push
shrl
xchg
add
dec
cmp
into
xchg
dec
das
scas
imul
or
mov
sbb
cmp
aad
roll
call
leave
add
jno
dec
cmp
push
inc
jnp
pop
int3
pusha
stos
out
movsb
cmp
loop
or
fs
lret
outsl
xor
jecxz
les
xchg
mov
and
inc
orb
je
cld
xchg
add
jle
bound
jmp
sbb
das
jbe
dec
lcall
insl
scas
pop
stc
lock
rorb
mull
add
ja
xlat
pop
rclb
sti
mov
mov
jl
sub
xchg
add
test
scas
pop
xor
jecxz
pop
jo
cltd
mov
dec
mov
je
cmc
test
test
test
pop
add
fmuls
stos
add
test
inc
shlb
loopne
xor
cmc
jge
jle
dec
and
test
stos
jmp
mov
jmp
sti
insl
dec
adc
jne
push
cltd
out
stc
xor
pop
js
cltd
dec
pop
cld
mov
test
orl
sub
fsubrl
xchg
sub
mov
xor
adc
daa
push
mov
popl
pop
aad
pop
leave
outsl
cmp
lds
or
add
xchg
lret
xchg
imul
push
push
jb
shrl
pop
int3
les
jecxz
mov
popa
sub
mov
or
leave
mov
pop
mov
pushf
ret
jae
push
xchg
fs
jg
lods
or
adc
sbb
push
or
dec
and
imul
hlt
inc
adc
add
sbb
bound
int3
repz
jmp
inc
adc
sbb
ret
pop
jg
stc
mov
test
xchg
cmp
lea
arpl
ljmp
ds
bts
mov
imul
and
sub
xor
push
popf
pusha
xor
xor
pop
mov
dec
shll
popa
pop
lret
daa
push
push
jo
xchg
enter
shufps
jns
arpl
mov
xchg
push
mov
and
mov
mov
jle
das
movsb
fwait
or
ret
fcmovnbe
xor
mov
or
adc
icebp
test
adc
adc
cld
out
sbb
jmp
lret
stc
rclb
fs
sbb
in
dec
dec
adc
aam
testl
mov
sub
xorl
notb
mov
inc
sub
sbb
fidivrs
cwtl
stos
iret
ds
dec
arpl
or
jb
mov
xor
push
sub
or
sub
lods
jmp
mull
mov
pop
imul
fbld
mov
jmp
in
jbe
popa
ja
icebp
add
test
sti
repz
adc
push
or
loopne
stc
iret
or
ss
jge
xor
or
fs
lds
adc
lock
add
sbb
int
mov
xor
jno
pop
int3
loop
movsb
add
mov
movsl
int
sti
and
xor
xor
adc
sbb
and
xchg
add
pop
test
sbb
lods
and
or
popa
and
xchg
outsl
jne
mov
cs
pop
jle
cmp
aam
imul
dec
push
popa
imull
es
repnz
scas
and
in
mov
add
pop
sub
and
mov
lahf
inc
fldt
ret
aaa
mov
popf
adc
cmp
shll
mov
and
push
xchg
aas
scas
push
push
inc
push
add
xchg
inc
adc
and
ja
popf
xchg
jg
jmp
mov
mov
push
push
test
mov
jno
inc
int
jecxz
mov
std
cmp
sub
jmp
aam
dec
fsubs
and
les
mov
mov
decb
inc
insb
push
aam
inc
adc
mov
ror
inc
mov
sti
push
popa
mov
mov
jno
movsl
pop
mov
int
push
mov
inc
mov
pushf
dec
inc
xchg
cmp
mov
out
pop
sub
inc
mov
sar
jae
cmp
sbb
and
mov
mov
or
shl
xchg
fsubr
ffree
lcall
or
fwait
sbb
notl
ja
jecxz
fisttpll
aaa
aad
scas
adc
cmpsb
out
mov
pusha
jno
fcompl
lods
repnz
out
das
jno
cmp
push
jnp
ljmp
nop
cmpsb
jge
xor
sbb
sub
es
roll
push
pop
test
and
mov
mov
out
jae
repnz
mov
arpl
pusha
mov
in
sarl
out
push
jno
out
in
sub
mov
cmp
fcmovu
sbb
loope
push
sbb
testl
pop
lods
mov
pop
lcall
or
pop
repz
popf
adc
pop
xchg
loopne
xchg
mov
mov
jno
outsl
fwait
jns
mov
test
scas
out
xlat
pop
repnz
pop
arpl
xor
sub
sbb
idivb
cmc
xor
enter
mov
loop
pop
push
pusha
mov
sarb
sbb
imul
loop
jg
lcall
in
lahf
mov
dec
and
inc
sbb
dec
mov
ret
test
inc
cmp
cmp
pop
pop
mov
imul
imul
cmc
jle
aaa
int
mov
xchg
inc
pop
inc
pop
dec
in
sub
shrb
outsl
dec
xor
loope
out
mov
orl
dec
enter
xor
jp
inc
mov
xchg
mov
aas
mov
pop
cld
xchg
or
pushf
push
sahf
imul
jecxz
pop
add
add
out
aam
pop
arpl
xchg
sbb
jo
adc
sub
jb
cld
inc
pop
push
add
movsb
imull
push
fimuls
jecxz
xor
in
loopne
jge
push
js
push
or
xor
jmp
pop
cmpsl
adcl
popf
xchg
xchg
add
cli
cmp
mov
sahf
mov
and
push
cmp
jae
fwait
in
imul
sbb
push
mov
js
pop
cltd
jb
pushf
stos
mov
xor
push
sub
push
sti
mov
mov
adc
jae
or
mov
and
addr16
jae
aas
lock
dec
aad
push
cld
push
xchg
mov
stc
arpl
stos
out
divl
mov
fstl
sahf
xchg
jg
mov
pop
xchg
add
sub
xchg
test
gs
js
hlt
mov
iret
roll
or
xor
and
dec
ficoms
int
out
mov
cmp
sbb
repnz
sub
wrmsr
inc
mov
sti
cmp
int3
cmpsl
mov
mov
jmp
imul
sub
jo
je
pop
imul
rcrl
addr16
lods
xchg
call
clc
jae
add
and
ret
add
pop
jp
sub
xor
or
push
rolb
pop
and
mov
adc
and
in
shrb
iret
push
negb
push
rcr
arpl
xor
mov
pushf
stos
adc
xchg
push
push
cmp
loopne
out
sbbl
mov
add
rclb
sbb
stos
inc
push
sbb
ret
pop
loopew
sub
jno
add
push
jecxz
sub
enter
xchg
or
arpl
in
out
jmp
push
jno
push
push
xchg
cltd
mov
xor
mov
or
pop
mov
mov
lea
push
inc
inc
pushf
outsb
mov
mov
test
mov
bound
icebp
push
das
dec
loopne
jbe
push
out
xchg
lcall
jbe
clc
shlb
push
jecxz
fistpl
addr16
fsubrl
and
aad
icebp
les
shlb
sub
adc
mov
outsl
inc
inc
into
push
inc
dec
mov
xchg
pop
cmpsb
mov
rorl
push
enter
mov
clc
dec
shll
adc
or
jmp
into
mov
daa
dec
mov
cld
push
out
pop
jo
dec
mov
sub
jb
in
xchg
in
pop
stos
push
mov
int3
inc
lods
iret
fidivs
mov
push
pop
icebp
push
or
sbbb
jns
shll
popf
or
cmp
mov
pmaxsw
jnp
xchg
inc
out
or
lcall
sub
popf
test
sbb
test
mov
pop
cld
sbb
add
fcomps
loope
push
or
mov
inc
hlt
aam
popf
fprem
xchg
jle
xchg
mov
test
in
jecxz
lret
lret
ret
popa
int
lds
sbb
add
sbb
push
imul
cmp
cmp
lcall
pop
lock
or
xchg
pop
sbb
xchg
jg
stos
xchg
repz
ret
js
mov
test
ret
mov
rclb
enter
dec
jg
mov
insb
pop
popf
or
ret
pushf
out
stos
ljmp
dec
lock
call
in
aad
inc
shrl
inc
push
les
flds
push
addb
int3
repnz
mov
enter
ss
enter
or
rcl
sub
lock
sub
xor
leave
test
fwait
popf
cld
inc
jg
test
out
sbb
lea
outsb
stc
cmp
jl
mov
mov
cmovnp
jno
add
jne
fistl
lret
dec
clc
popa
sahf
scas
es
mov
daa
pop
iret
daa
adc
cs
inc
repnz
lahf
pop
cld
into
movsb
xor
in
mov
adcl
cwtl
mov
popl
xchg
outsb
repnz
ljmp
jge
test
mov
loopne
cmpsl
std
pop
ds
arpl
shll
test
dec
or
mov
dec
cmp
int3
call
dec
subl
adc
daa
pop
add
gs
fcomps
lock
add
mov
dec
push
mov
mov
inc
sbb
cs
call
popf
push
or
jns
sub
and
arpl
int
xchg
xor
test
and
mov
mov
popa
xor
or
xorl
fnstcw
or
pushf
push
dec
adc
add
mov
or
outsl
mov
loopne
enter
push
push
sti
mov
stc
dec
lods
popa
subb
roll
nop
jg
mov
and
es
jge
push
add
pushf
imul
int3
or
add
fwait
arpl
sti
jecxz
jmp
outsl
cmp
push
pop
gs
xchg
sbb
ja
pop
lds
and
leave
dec
orl
push
add
rorb
pop
mov
push
jl
mov
and
mov
inc
clc
xor
scas
xor
test
test
sub
jae
leave
scas
out
push
ret
sahf
ficomps
pop
lcall
push
sbb
push
or
fidivrl
sub
fiaddl
sbb
not
push
jbe
mov
in
scas
repnz
jmp
lods
hlt
cmp
xor
sub
xor
mov
dec
mov
rcrb
push
bound
sbb
dec
gs
rorb
iret
enter
mov
push
push
pcmpeqd
movsl
loope
lea
mov
aaa
dec
jno
jl
pop
cmp
fdivrp
sarl
dec
es
mov
cmp
out
xor
in
lret
mov
mov
jmp
jl
inc
mov
insl
and
sbb
adc
cmpl
mov
push
push
and
dec
mov
mov
mov
outsl
jecxz
jle
lahf
push
cwtl
out
and
inc
das
xor
ja
pop
nop
js
xor
mov
cltd
leave
inc
lods
add
push
xchg
xor
mov
pop
dec
pop
loop
push
cmp
add
sub
add
adc
push
movsl
mov
loopne
push
stos
xchg
push
mov
rcr
mul
dec
and
loopne
lds
dec
lds
sbb
nop
dec
rorl
inc
xchg
xchg
pop
jb
push
adc
dec
sbb
daa
jg
add
ss
inc
lods
and
shll
lds
jns
add
push
fwait
test
call
pop
push
xor
inc
sbb
mov
ss
jle
push
lods
imul
lahf
pop
ss
filds
or
in
mov
outsb
in
cmp
fidivrl
mov
push
jmp
test
aam
inc
mov
aas
xor
xchg
in
add
push
mov
cmp
dec
or
fldz
sahf
jle
push
repz
push
sahf
sub
in
dec
xchg
jbe
pop
lret
bound
out
or
sub
test
sahf
sarl
cmp
sti
mov
je
mov
sub
ret
int3
mov
mov
mov
mov
lret
cltd
inc
xor
fldt
sbb
jno
inc
aam
in
ret
shrl
add
sub
aad
lahf
out
mov
leave
mov
dec
pop
mov
adc
loopne
aas
mov
test
sbb
cmp
mov
sbb
sbb
das
add
ret
test
outsb
mov
push
dec
fnstsw
cmc
ljmp
and
mov
fists
mov
ljmp
es
aaa
imul
lahf
add
sahf
pop
in
xor
iret
out
dec
test
test
mov
pop
in
dec
push
lods
push
stos
neg
fwait
mov
jno
and
xchg
aad
sub
out
and
xorl
shrl
xor
jle
sub
out
pop
sahf
cmp
dec
pop
cmp
scas
or
in
fsubs
rorb
stos
dec
cwtl
ja
mov
jmp
xor
xor
arpl
mov
insl
jae
movb
push
in
adc
movsb
ss
sbb
or
mov
lock
lret
int3
mov
sti
call
roll
adc
jecxz
and
mov
rol
inc
dec
push
pushf
mov
adc
iret
add
fmull
and
dec
mov
dec
pop
jle
sbb
negl
cmp
pinsrw
in
es
js
cmp
add
notl
lock
push
or
mov
dec
xchg
dec
lcall
nop
cltd
sahf
dec
cltd
adc
idivb
xchg
dec
add
xchg
mov
xchg
into
cli
sbb
mov
dec
lcall
das
rorb
xor
popa
mov
mov
sbb
mov
jg
or
lretw
lods
xchg
sub
cmpsl
fnstsw
xchg
jno
mov
into
ss
leave
xchg
iret
and
pop
lock
push
mov
lock
adc
bound
xchg
jecxz
mov
push
das
rcrb
hlt
sub
dec
jbe
adcb
mov
lret
daa
adc
scas
mov
jmp
mov
shll
pop
xorb
and
loope
cmp
sub
or
dec
out
je
mov
mov
mov
mov
aad
arpl
inc
cmp
and
mov
inc
ret
lods
cli
in
sub
cs
stos
push
add
mov
add
outsb
jb
fcmovne
scas
adc
sbb
pop
sbb
and
and
into
sbb
in
movsl
ret
lods
and
and
das
dec
and
mov
pop
mov
call
xchg
data16
xor
shrl
dec
enter
jle
sbb
add
push
int3
mull
or
lods
pop
mov
push
sub
test
xchg
mov
scas
aad
mov
mov
ss
repnz
mov
aad
pop
adc
sbb
arpl
dec
pop
adc
shl
stos
stos
scas
data16
std
xor
mov
xchg
movb
into
out
mov
aam
xchg
sahf
jle
pop
dec
fwait
rorl
and
fsubs
sub
pop
pop
shll
cs
ss
push
or
addr16
int
xor
call
stos
mov
aad
xor
cmp
insl
cmp
repz
fsubrl
mov
sub
cmp
inc
pop
xchg
push
inc
outsb
in
mov
mov
and
pusha
dec
subb
pop
pop
dec
test
pop
pop
lret
mov
je
mov
pop
shl
aas
sbb
hlt
aad
push
insl
cs
xchg
xchg
test
sub
sub
ljmp
iret
cmpsl
jno
jb
mov
inc
bound
mov
mov
cmpsb
xchg
sbb
cmp
iret
xorl
daa
pop
mov
ja
and
daa
sub
mov
adc
notb
stos
mov
mov
adc
jge
xchg
mov
dec
outsl
mov
cmp
jne
mov
xchg
repz
cmp
adc
subl
stc
sub
and
ja
and
arpl
xchg
lea
das
or
nop
in
cli
clc
mov
sbb
cmp
jb
xor
mov
cmp
stos
and
dec
iret
cmp
sbb
push
lcall
xchg
xchg
imul
out
dec
mov
mov
scas
lcall
in
shll
mov
aaa
dec
or
test
inc
xlat
cmp
lret
push
xor
xorb
sahf
inc
adcl
lods
mov
mov
add
rep
xor
push
push
mov
out
lock
or
add
js
jecxz
fstl
cmp
inc
xchg
dec
push
cmp
or
adc
jnp
mov
cmp
adc
fsubl
cld
iret
pop
leave
xor
xchg
cmpsb
or
sarl
dec
xrelease
xchg
roll
lds
mov
dec
mov
xchg
mov
fs
cld
popa
push
call
and
sub
test
loopne
mov
xor
mov
mov
sbb
enter
xchg
add
mov
fadds
sbb
push
int3
and
lret
pusha
nop
xchg
mov
push
pop
add
ret
test
mov
xchg
outsl
xchg
cmp
xor
mov
sbb
aas
in
cld
mov
mov
push
mov
pushf
aaa
lret
mov
test
xor
sub
outsl
sbb
jnp
xor
or
repnz
testb
mov
xor
push
push
mov
pinsrw
scas
rorl
pop
pop
inc
adc
out
mov
nop
xchg
inc
mov
mov
pop
mov
dec
mov
stos
inc
mov
jp
mov
sub
repz
jecxz
addr16
test
sbb
pop
pop
xor
inc
push
push
dec
sbb
cmpl
ljmp
sahf
enter
jae
add
mov
test
mov
push
xorl
inc
mov
ljmp
xchg
cmp
fnstenv
mov
inc
xchg
adc
rorl
cmc
mov
lock
cmp
xor
cwtl
inc
xor
push
imul
jge
loop
outsb
fiadds
scas
out
xchg
insb
xchg
pop
into
xor
adc
jp
and
inc
mov
andb
or
out
mov
xchg
jmp
mov
fidivl
and
dec
mov
cld
test
push
sbb
mov
jae
jb
and
fmul
shll
mov
in
fadds
das
mov
or
repz
jecxz
xlat
nop
sbb
cmc
out
xor
cmpsb
stos
in
mov
cmp
cmc
xchg
arpl
lahf
push
out
loop
out
mov
outsl
repnz
sahf
cmc
repnz
mov
jg
dec
inc
test
mov
out
jmp
sahf
push
cmp
push
mov
fstpl
gs
cltd
cmp
jbe
add
lods
mov
clc
xchg
or
mov
mov
mov
push
mov
fwait
inc
test
sbb
test
mov
xlat
das
xchg
add
sbb
clc
lods
inc
pop
repnz
pop
pusha
fistps
pop
xor
jg
or
gs
jge
or
bound
fs
pushf
add
add
push
pop
dec
push
adc
inc
xor
jbe
nop
rcl
xchg
std
inc
addr16
cmp
addr16
cmpsl
lret
fcmovnb
jl
cmp
cmp
jp
addr16
mov
loopne
or
pop
lret
flds
push
add
aas
push
divb
movsl
mov
inc
subb
test
push
mov
insb
outsb
test
fimull
pop
push
mov
pushf
nop
gs
scas
outsb
out
push
pop
dec
jecxz
xor
sub
inc
mov
sbb
rorb
pop
popa
dec
loope
mov
xorl
mov
rcrb
leave
aam
jbe
xchg
lea
stc
and
inc
outsl
scas
jno
inc
push
dec
mov
sub
cmp
lcall
add
adc
or
xchg
cmp
sub
cmp
daa
lret
mov
mov
adc
cmc
scas
push
outsl
cmp
jae
push
ds
stos
jp
shrb
mov
jg
into
cmp
mov
test
mov
jg
and
out
mov
in
inc
xchg
cmp
test
sbb
subb
dec
pop
push
xor
cmp
pop
inc
adc
push
sub
adc
push
dec
push
pop
mov
dec
std
jle
fwait
dec
das
push
sbb
add
jecxz
stos
xchg
fucomip
fchs
mov
scas
mov
insl
popf
sub
mov
push
xchg
sub
pop
jl
dec
hlt
or
shrl
xchg
test
push
mov
in
or
pop
ret
or
je
popf
cmc
test
test
leave
nop
ret
push
fwait
nop
loope
cs
mov
xchg
push
xchg
shll
pop
call
orb
popf
mov
cmp
inc
xor
push
leave
or
fmull
lret
pop
cmp
popa
std
inc
sub
lahf
scas
lret
clc
mov
aas
dec
sub
cli
shlb
into
xor
lret
cmc
xchg
pushf
fscale
adc
or
imul
enter
xor
inc
push
out
and
outsl
sub
pop
leave
into
add
sub
xor
aam
outsb
sub
ret
jmp
aas
dec
push
test
and
or
shll
loop
fists
push
out
push
push
xchg
push
aaa
ret
ja
push
aam
call
aad
movsl
ret
jp
aas
mov
jl
clc
fcmovu
out
insl
sub
fdiv
pushf
shl
xchg
adc
mov
iret
pushf
pusha
push
mov
mov
cmp
out
test
imul
imul
out
notb
xor
dec
or
in
push
lret
test
mov
cmp
dec
popf
cmp
rcll
mov
adc
arpl
push
movsb
lds
push
dec
adc
arpl
inc
add
std
pushl
add
cwtl
aaa
lods
inc
xchg
pop
jno
dec
lret
sbb
lret
add
jp
sbb
mov
leave
mov
lret
sub
push
subl
movsl
mov
dec
mov
ret
jmp
stc
incl
ljmp
mov
adc
jecxz
popf
xchg
movsb
cltd
mov
sub
mov
pop
mov
loopne
stos
dec
adcb
mov
into
push
aaa
and
xlat
mov
es
popa
sti
mov
sbb
push
outsb
call
scas
xlat
push
cmp
lcall
movaps
cmp
jle
negl
dec
dec
or
adc
popa
loope
seta
push
ss
add
push
jl
xchg
sbb
dec
decl
mov
push
rol
sahf
data16
iret
pop
mov
imul
xlat
xchg
ss
ss
xchg
fsubl
cmc
int3
out
jns
pop
push
jg
or
stos
pop
fcmovnu
jg
dec
int3
adc
and
pushf
leave
ja
rcll
sbb
lock
cwtl
mov
dec
push
pop
mov
cmp
sbb
mov
pop
xlat
inc
sub
or
push
jne
cld
cli
shr
or
pushf
out
xor
popf
je
test
pop
jbe
mov
nop
and
jg
fisubl
scas
and
dec
notl
xor
mov
xor
jle
push
bound
jo
arpl
stos
clc
xor
imulb
rcl
cmpl
test
hlt
clc
in
mov
lock
out
in
xchg
jnp
int
stc
push
imul
sbb
push
adc
pop
clc
icebp
roll
roll
icebp
mov
push
dec
or
xor
push
dec
mov
cmp
cmp
cmp
hlt
pop
test
call
leave
mov
ds
movsl
ss
dec
xchg
outsl
or
inc
or
out
sbb
call
xor
idivb
pop
fsub
cwtl
add
pop
js
or
sub
out
rolb
out
cvtdq2ps
mov
cmpsl
mov
cltd
leave
addr16
adc
js
mov
mov
xor
addb
nop
aaa
out
fucompp
add
pop
movsl
xchg
dec
push
cwtl
cmp
stc
dec
push
icebp
roll
jns
imul
mov
xor
call
mov
loope
sbb
lahf
adc
xchg
push
mov
lds
imul
jb
outsb
adc
inc
lock
cld
pop
in
jl
rcll
mov
jno
mov
lcall
inc
cmpl
cli
push
push
incl
enter
xchg
adc
rorl
and
and
lcall
sub
xchg
pop
cwtl
lock
cmp
jp,pt
ds
jmp
or
mov
js
aad
js
dec
pop
inc
or
adc
sbb
popa
push
add
cli
cmp
cmp
mov
xor
out
xchg
mov
insb
fists
add
pop
sahf
popf
mov
mov
add
inc
into
or
push
movsb
mov
sbb
stc
cld
mov
cltd
push
aas
inc
push
pop
pop
shll
sub
ss
mov
xrelease
scas
mov
lods
add
daa
scas
mov
mov
xor
insl
mov
rcrb
jmp
repz
cmc
decl
mov
lahf
mov
pop
stos
jge
cmp
or
roll
js
fsts
or
mov
and
out
sbbb
pusha
sbb
cmp
cltd
loopne
das
sub
iret
frstor
js
cmp
orl
mov
sahf
pop
ljmp
lds
cs
inc
cmp
mov
das
cld
and
stos
xor
jbe
mov
inc
scas
cs
jl
and
lods
js
nop
xchg
rcrl
daa
xchg
sbb
enter
xchg
mov
add
test
imul
movsb
push
das
sub
sub
adc
into
ljmp
xchg
scas
inc
into
mov
xchg
shrb
mov
rcll
fstpt
ds
push
mov
ljmp
mov
xor
mov
jbe
lret
mov
adcl
add
lret
popa
das
dec
mov
es
in
outsl
outsl
sbb
push
fdivrl
dec
dec
inc
loope
loop
icebp
jle
gs
lea
xchg
leave
idivb
mov
mov
daa
adc
cmc
xor
pusha
clc
rcl
cmp
pushf
mov
sub
push
jbe
xlat
cmp
daa
xchg
xchg
lcall
jle
lahf
mov
add
pop
rolb
imul
sbb
or
jns
arpl
and
aaa
sub
xor
jg
popf
inc
test
cs
das
adc
repz
fisttpll
cmp
popa
jb
cs
inc
mov
adc
push
in
sub
out
fcos
outsl
fstps
pop
inc
cmpl
stos
or
push
sub
add
stc
cmp
cmp
outsl
sub
mov
adc
arpl
push
jg
sub
dec
sub
cmp
and
inc
xchg
aad
rcrl
lcall
push
cs
pop
sub
ds
mov
cmp
xchg
mov
xlat
pop
stos
fnstcw
push
adc
movsb
mov
jl
or
sub
rol
pop
stc
daa
mov
pop
add
in
nop
and
xor
mov
inc
hlt
aam
in
cld
inc
mov
pop
pop
lods
sub
or
inc
add
mov
push
popf
loope
and
in
add
icebp
cld
jno
and
pop
or
test
iret
inc
out
fadds
pop
lret
popa
mov
rolb
movq
inc
mov
repnz
les
std
sub
mov
xor
shlb
jns
pop
mov
push
add
add
je
mov
or
hlt
cltd
pop
scas
sub
jg
fsubr
adc
cs
push
lods
popf
cmpsb
or
insl
sti
imull
sub
add
inc
pop
mov
dec
in
sbb
mov
mov
adc
leave
rcll
shll
inc
out
push
lret
out
dec
lea
ret
sbb
mov
loopne
or
hlt
sub
flds
and
inc
add
cmc
hlt
jp
pop
pop
inc
add
jne
xor
jnp
stos
cmp
cmp
fidivrl
mov
testb
and
int
pusha
jo
cmc
xchg
jo
fildl
fcmovnbe
pusha
pop
pop
mov
pop
mov
and
jecxz
inc
cli
push
adc
les
das
or
mull
into
ss
pop
mov
lods
push
mov
sti
inc
dec
leave
lods
sbb
sti
and
add
fwait
icebp
mov
scas
cmp
add
mov
sbb
and
scas
cmp
and
dec
push
push
iret
outsb
inc
test
ret
sbb
xchg
xchg
push
or
jne
shr
int
iret
adc
push
sub
dec
mov
sub
pop
les
subl
ds
pop
jecxz
adc
xlat
jmp
lahf
aas
or
push
pop
cltd
dec
inc
movsl
shll
and
ja
loopne
or
scas
add
roll
add
fadds
cmpl
movsl
jnp
mov
inc
test
jne
div
mov
push
add
stos
gs
adc
mov
movsb
add
bnd
sbb
test
push
in
xor
cmp
xor
add
loop
enter
fs
mov
addr16
or
stc
jae
enter
fnsave
sub
adc
int
mov
stc
cwtl
int3
hlt
repnz
mov
lret
xor
pop
mov
add
sbb
aaa
push
jnp
mov
add
pop
inc
out
popf
loop
cltd
and
sbb
lcall
test
fucomi
daa
cmp
popf
fldcw
xchg
pop
xor
les
xor
xchg
sub
lock
stc
xor
and
dec
push
popf
cmpsb
xlat
push
mov
sub
out
popf
push
xor
cmp
adc
mov
push
es
loopne
ret
daa
jl
push
lods
cmp
mov
inc
incl
fisubl
stos
fidivs
ja
cmp
sbb
xor
xchg
push
cmpb
dec
insl
cmpl
mov
scas
wrmsr
in
out
shrb
movsb
mov
inc
mov
pop
iret
push
inc
fwait
iret
mov
pushf
adc
movsl
sbb
xchg
lds
out
mov
lds
pop
inc
lods
jecxz
xchg
in
sub
popf
in
push
outsl
les
pop
or
lods
jb
xchg
jns
adc
push
outsb
mov
mov
lods
jmp
cmp
dec
lea
popf
pop
jbe
cmp
fyl2xp1
shr
add
mov
stc
testl
mov
inc
pop
pushf
push
sub
adc
in
filds
dec
popl
push
cltd
testb
data16
xor
or
bound
mov
cmpsl
push
mov
ret
into
in
inc
mov
test
aas
iret
pop
jmp
and
aad
inc
outsl
std
add
sub
push
lods
sub
lds
or
idivb
cmpsl
shll
mov
repnz
pop
mov
dec
and
addr16
xor
push
mov
pop
filds
rcll
test
out
cltd
fcomps
jnp
fmul
or
lret
fwait
mov
push
aaa
inc
nop
mov
shl
negl
inc
and
bnd
mov
sbbb
imul
mov
mov
repnz
mov
in
dec
mov
ret
mov
inc
add
icebp
data16
sub
test
stos
aam
xchg
push
divl
pop
or
bound
pop
lea
shlb
add
jecxz
mov
and
xor
aas
mov
push
lock
mov
je
dec
and
subb
ljmp
jmp
ljmp
jp
repnz
jl
cmpb
rcll
jo
inc
sub
pop
add
sahf
test
je
xor
fmull
mov
xchg
int
test
and
dec
test
ja
pop
xlat
je
je
cmp
fwait
jmp
or
lcall
cwtl
push
pusha
cmpxchg
fwait
mov
ss
mull
or
adc
out
int
scas
popf
lahf
mov
out
fldt
pop
xchg
xchg
lcall
push
popf
lret
mov
int
sbb
mov
dec
mov
dec
ss
aas
out
xchg
xor
mov
push
or
mov
cmp
xor
fwait
push
jl,pn
xchg
adcb
popa
movsb
movsl
cltd
movsb
push
add
inc
pop
inc
xchg
pop
iret
mov
test
xor
jo
xchg
jnp
js
lret
clc
pop
pushf
xchg
fistps
cwtl
scas
jge
mov
mov
jb
gs
popf
mov
mov
jmp
add
adc
test
lret
jno
jg
test
or
sbb
cmp
sbb
jmp
jo
sub
gs
mov
lahf
fdivrs
or
sub
pop
fldt
add
sub
std
push
or
wrmsr
adc
jg
fadd
adc
jae
add
test
or
jo
stos
cmc
pop
mov
mov
and
pop
movsl
pop
rcr
cmp
jne
sub
cmp
dec
fwait
outsl
loopne
divb
push
inc
popf
adc
cs
sbb
out
scas
cmp
sarb
and
out
aad
jbe
push
out
call
mov
clc
sub
jne
cmp
lret
mov
inc
push
add
mov
push
mov
ficoms
je
mov
scas
cmpsl
clc
cld
sub
mov
dec
lcall
and
cmp
xchg
repz
aad
sbb
rcrb
xchg
les
rcll
ret
jl
fmul
sbb
cmpsb
jbe
pushf
adcb
or
push
fdivrl
lahf
cwtl
adc
xor
jmp
inc
mov
dec
mov
add
ret
inc
jnp
in
cmp
xor
jge
aad
in
adc
shll
add
xchg
xchg
mov
add
mov
pushf
stos
pop
xor
push
add
ss
lcall
sbbb
add
dec
push
jne
pop
jge
in
adc
sbb
sbb
pop
mov
mov
pushf
into
xor
mov
lock
mov
movsb
lahf
mov
cmp
sbb
not
xor
mov
stos
popf
sbb
cli
mov
stc
jb
mov
inc
xor
pop
jmp
rcl
or
test
xchg
stos
mov
sbb
mov
test
inc
ljmp
roll
rep
mov
push
fldenv
lds
dec
inc
dec
inc
and
pop
cmp
dec
pop
push
sub
and
add
push
shll
sub
imul
dec
dec
scas
out
popa
js
or
shll
pop
leave
dec
xor
mov
out
lret
cmp
dec
neg
mov
je
sub
push
stc
mov
in
sarl
dec
outsl
mov
insb
jae
jmp
mov
int
push
aas
add
mov
ret
nop
sbb
lock
mov
int
lock
add
push
xchg
fldt
mulb
xchg
xchg
inc
sub
sbb
fisubrl
in
cld
push
pop
mov
jge
xchg
scas
or
xchg
push
in
mov
pop
enter
lcall
inc
fdiv
mov
jmp
in
ret
and
sub
movsb
mov
xlat
jo
jl
push
mov
cltd
sbb
and
rcrb
data16
dec
inc
iret
repnz
mov
fisubrl
ficoml
jle
pop
inc
out
fdivp
fcomip
mov
hlt
cmc
cmc
lcall
rolb
stos
adc
lods
cli
or
cmp
vorps
addr16
dec
push
xchg
and
and
mov
xchg
in
and
xchg
das
adc
jne
jns
int3
adc
movsb
jmp
adc
mov
ret
sbb
lret
in
test
push
fidivrs
loope
sub
adc
out
cmp
repz
adc
xchg
pop
or
sub
add
cmpsl
xor
repnz
push
jge
cmp
cli
test
mov
xor
sub
pop
mov
inc
or
add
mov
test
pop
cwtl
jge
popf
inc
dec
adc
js
sar
push
push
addr16
mov
frstor
in
add
daa
mov
lcall
cmpsb
das
mov
out
dec
xor
iret
sbb
add
leave
add
dec
lods
idivb
clc
and
jne
in
orb
jmp
and
adc
movsl
jne
sub
push
stc
and
xlat
ds
inc
push
sbb
ja
mov
or
je
sbb
mov
mov
sahf
cmpsb
xchg
mov
sbb
jo
xor
xor
cmp
mov
cmpsb
rorb
fsubrl
and
in
jl
test
aam
cmc
popf
jmp
xchg
repnz
lahf
xchg
fisttpll
push
loopne
sbb
mov
aas
adc
stos
in
xor
lret
mov
mov
lods
into
in
daa
or
add
xorb
mov
je
push
mov
dec
sub
rcr
adc
push
ret
arpl
push
jle
add
and
icebp
dec
fadds
cs
adc
fidivrs
insl
push
aam
aaa
ret
test
pusha
cmpsl
shll
xchg
jg
movsb
dec
add
pop
movsb
push
pop
push
dec
loopne
fisubrs
push
add
and
push
cmp
jmp
push
jmp
mov
inc
loope
jae
lock
mov
movsb
inc
fnstcw
arpl
pop
jbe
jno
aas
cmpsl
inc
and
add
pop
push
notl
sbb
lods
scas
mov
mov
movsb
outsb
shlb
xchg
xor
jge
pop
hlt
adc
push
mov
mov
sub
cmpsb
enter
mov
outsb
cmp
sar
dec
repnz
lods
stos
mov
xchg
mov
filds
pop
addr16
mov
push
das
orl
lds
jge
jo
sbb
ds
add
inc
add
stos
scas
mov
stos
iret
push
loope
pop
imul
jne
loope
pop
std
rcrb
das
cmp
hlt
into
lock
cmp
cmc
popa
rorb
fidivrl
test
out
ret
jecxz
add
out
das
call
cmc
lods
xchg
mov
and
sbb
inc
fwait
lock
fisttpll
mov
loop
fisttpl
mov
jmp
mov
sub
jecxz
enter
je
lods
jg
mov
popf
idiv
xchg
mov
sub
add
jb
xchg
outsl
lds
adc
add
xlat
lock
and
sbb
icebp
fwait
or
pushf
lret
push
subb
jl
mov
cmc
lret
lock
push
jge
push
mov
js
mov
dec
sbb
loopne
dec
inc
lahf
xchg
mov
int3
sti
addr16
imul
jns
call
pusha
dec
push
or
in
inc
adc
test
adc
in
pop
mov
or
sub
pop
add
lret
pop
std
mov
ret
push
and
jns
imul
daa
fists
mov
cmp
lcall
cld
jb
or
inc
jno
sub
jecxz
dec
rcll
stos
push
or
sbb
sub
push
push
scas
push
add
jb
lods
mov
aam
mov
test
xchg
cmp
pop
or
sub
mov
mov
cmp
fistpl
ljmp
js
cmp
jns
scas
ret
and
sbb
out
inc
push
addb
xor
xchg
lds
pop
enter
cmp
cmpsl
out
int3
adc
cld
lods
mov
mov
inc
mov
jne
or
pop
jl
or
dec
xchg
pop
push
andl
cs
pop
sahf
imul
pop
sarb
mov
sbb
add
inc
pop
aaa
test
nop
or
arpl
or
push
or
adcb
loopne
in
js
negb
ret
pop
mov
andnps
push
xchg
sahf
lock
fwait
stc
jl
jmp
iret
sbbb
sub
imul
sub
push
stc
push
mov
inc
xlat
mov
jg
in
mov
lock
mov
jbe
or
call
fwait
lock
lret
aaa
mov
jo
jnp
cmpsl
popf
pushf
sbb
sbb
popa
mov
mov
mov
inc
rcrb
and
cs
xchg
and
xchg
fwait
mov
xor
cwtl
xchg
mov
movsl
test
add
sbb
ret
cltd
sbb
call
adc
call
cmp
or
mov
imul
push
iret
mov
rcrl
xchg
aam
and
pop
sbb
insb
sbb
data16
test
push
mov
mov
sub
pop
cmp
mov
jo
sahf
jne
std
rcrb
cmp
push
jnp
mov
fnstenv
scas
fsubrl
mov
add
fistps
push
pop
adc
mov
push
stos
je
push
mov
enter
xor
push
icebp
popf
push
mov
inc
mov
sub
push
sbb
repnz
sub
and
in
xchg
add
rolb
xchg
outsl
imul
add
dec
pop
cmpl
in
or
sub
add
out
mov
js
pop
ret
into
push
out
adc
jp
mov
in
sbb
pop
lods
jp
fwait
cmpsl
adc
ja
mov
popa
inc
xor
out
add
push
or
lods
mov
popf
dec
jb
inc
cmpsb
ja
push
jecxz
insb
into
lods
mov
je
cwtl
adc
adc
xor
jge
xchg
lods
cwtl
add
int3
scas
repnz
sub
pop
xchg
jno
jnp
dec
iret
hlt
icebp
adc
insb
add
cmp
imulb
or
dec
sub
int3
lahf
or
and
stos
push
inc
sub
rclb
dec
ja
cld
fs
mov
xor
icebp
cld
das
jecxz
xor
les
iret
shll
sbb
jmp
adc
xchg
and
push
imul
movsbl
push
stos
or
push
push
mov
pop
cmp
lods
mov
aam
xor
and
enter
nop
jle
inc
xlat
mov
lret
mov
xor
jne
jg
les
aaa
pop
cwtl
sub
mov
and
sub
cmp
mov
add
setge
pop
xchg
jb
mov
adc
xchg
aaa
or
and
xchg
mov
jnp
adc
orb
jecxz
rcrb
mov
push
les
lods
jbe
sbb
cmp
adc
inc
and
jo
cmc
fsub
fadd
pop
in
jns
stc
xor
add
pop
and
jae
int
pop
mov
sbb
jmp
sbb
das
pop
mov
adc
jns
std
push
outsl
out
imull
cld
dec
add
testl
push
or
mov
jmp
sar
pop
shlb
or
cwtl
mov
loopne
push
dec
aam
jmp
sub
mov
roll
insl
sub
xchg
jbe
mov
dec
in
push
add
jecxz
cmp
ja
stos
insl
rcrb
leave
les
pop
xchg
sbb
inc
lds
int
psadbw
xchg
add
sti
js
sbbb
jae
sub
pop
fsubl
adc
test
jne
in
dec
cmpsl
clc
xchg
jl
arpl
pop
push
pop
mov
mov
fisubrl
mov
rclb
notb
and
out
insl
outsl
in
mov
pop
fidivl
jg
and
mov
cmp
and
std
jmp
icebp
jge
dec
inc
adc
pusha
iret
cmpsl
pop
cmc
xor
lahf
lods
and
or
orl
ret
ja
jb
cmpsb
das
loop
adc
or
cmp
pop
mov
movsb
push
nop
xor
in
mov
sti
js
sub
xchg
and
mov
sbbl
roll
and
rol
into
mov
das
test
lock
icebp
repz
loopne
cmp
jbe
pop
inc
hlt
fsub
pop
stos
mov
dec
pushf
aad
inc
andl
xchg
push
sub
mov
xchg
add
jns
mov
inc
mov
out
adc
into
ret
pop
jg
mov
mov
or
imul
sub
adc
xor
daa
cwtl
leave
mov
pop
mov
mov
test
or
rcll
adc
or
jns
mov
pop
xchg
xor
jnp
mov
ret
pop
or
mov
xchg
and
push
mov
dec
or
out
dec
xchg
je
sbb
add
adc
test
mov
jne
mov
sbb
cmp
lods
mov
mov
or
int
scas
cltd
mov
or
sub
scas
iret
or
add
or
fwait
dec
cmp
aas
pop
fisubrl
scas
jae
int
rclb
mov
jg
dec
cld
xor
dec
in
loope
push
stos
add
int3
mov
sbb
rclb
xchg
pop
mov
xchg
mov
mov
jmp
push
mov
or
xchg
rdpmc
cmp
test
aam
ds
ret
inc
cltd
in
push
add
push
into
cmp
fnstsw
pusha
pop
jne
inc
cmpb
jmp
xchg
or
outsl
or
faddl
cmp
sbb
insb
sub
cwtl
into
aad
ret
add
es
in
mov
rcr
je
popa
in
test
nop
or
mov
ret
enter
loopne
push
jb
add
rdpmc
int
mov
popf
enter
pusha
inc
pop
mov
xchg
mov
insl
and
fcoms
mov
xchg
cmovb
gs
das
repnz
test
pop
inc
loope
xor
xchg
jbe
out
pop
add
pop
nop
fsubrs
and
inc
stos
in
add
jns
inc
pop
push
rclb
jle
mov
lds
mov
mov
ret
and
or
pop
lret
daa
fwait
or
mov
xor
push
mov
ret
adc
sub
divl
sbb
add
rclb
fstp
leave
addr16
inc
push
cli
orb
lock
icebp
mov
pop
nop
out
out
jecxz
ljmp
mov
pop
sub
add
in
imul
sub
in
notl
sub
push
ss
pop
test
lods
orb
inc
lods
jle
jg
std
jb
mov
dec
arpl
add
push
xchg
add
cmp
pop
pop
sbb
jo
or
push
adc
ret
push
sbb
push
jo
fists
pop
addb
push
and
mov
mov
add
inc
cmp
add
sub
fisttpll
idivl
mov
nop
ficoml
std
mov
loope
lret
xchg
je
inc
mov
movnti
add
push
push
shl
jne
sahf
sbb
lahf
pop
pusha
std
xorl
notb
popf
inc
addr16
cmc
mov
scas
add
add
lods
inc
cwtd
mov
stos
inc
mov
mov
cmpsl
pop
cli
add
xor
dec
mov
jbe
cmp
lock
inc
scas
adc
rcr
sub
push
testb
mov
push
in
std
es
fldcw
mov
ss
cwtl
sbb
dec
out
fmull
stos
push
outsb
testb
in
push
xor
jge
mov
pop
rolb
jp
sbb
fwait
adc
je
ja
sbb
sub
out
dec
je
adc
xor
pusha
mov
out
in
outsb
fmul
int
outsb
sub
mov
mov
cmc
jmp
mov
in
xchg
addr16
xor
popf
cmp
xchg
fimull
lds
mov
fbld
pop
cmp
int
pop
leave
xchg
jne
call
sub
lret
sbbl
mov
and
std
push
pop
xchg
cld
pop
add
mov
shl
jl
xchg
cld
mov
push
les
mov
idivl
pop
mov
loope,pt
mov
mov
mov
push
or
or
inc
sahf
sub
jmp
xor
rcr
std
outsb
fidivs
je
enter
inc
push
sbb
and
js
adc
push
insb
ja
in
xchg
and
jbe
enter
imul
test
dec
cmp
cmp
dec
into
and
aad
fisubl
mov
shrl
aam
dec
jecxz
dec
mov
loop
xchg
cmp
out
jo
jl
jnp
repnz
out
inc
mov
dec
mov
adc
cld
mov
jnp
cmp
adc
addr16
fcoml
out
push
jno
or
mov
loope
jno
mov
jmp
mov
rolb
or
cmp
adcb
mov
andb
inc
xor
lods
mov
std
cmp
movsb
aad
arpl
scas
ljmp
push
out
ficompl
in
or
inc
pop
mov
out
dec
jmp
test
test
adc
cmp
cmpsl
dec
push
cmp
popa
mov
ss
jbe
xchg
movups
xor
pop
jnp
jl
cwtl
scas
xor
gs
xor
mov
add
push
mov
outsb
adc
movsl
and
enter
cwtl
mov
jae
movsl
sub
cmpsl
fstl
jae
aad
fs
pop
nop
outsb
jbe
rorl
loope
mov
mov
bound
push
jae
scas
ret
dec
mov
cmpsb
sbb
in
mov
test
cmpsl
xchg
fs
cmp
adc
add
or
jno
cmp
jne
call
imul
lea
add
jns
inc
xchg
or
mov
ret
into
dec
jnp
pop
push
rorb
pop
nop
lret
lret
pushf
pop
sbb
push
jo
incl
int3
bound
testb
jle
add
xchg
push
dec
jp
daa
mov
sbb
push
loope
mov
inc
mov
mov
iret
dec
insb
mov
mov
ljmp
xchg
cld
int3
neg
sub
mov
pop
in
js
and
test
test
ds
loop
loop
adc
and
sub
cmp
gs
mov
cmp
xor
cwtl
jmp
cmp
pop
xchg
hlt
es
test
xchg
lds
inc
dec
inc
pop
fucomp
dec
mov
pop
push
loop
int
pop
mov
loop
sarl
sub
in
xor
pushf
sub
sbb
push
lahf
stos
int
inc
daa
fucom
and
dec
sub
xchg
iret
fbstp
push
pop
xor
aas
mov
popa
popa
loope
xchg
dec
xchg
sarb
push
cmp
xor
xchg
jg
xlat
push
in
addr16
xlat
xor
add
dec
cmp
shlb
sbb
and
pop
mov
jno
inc
out
stos
mov
xor
ljmp
mov
jg
fildll
rorb
mov
pop
sti
stc
popf
push
inc
mov
ret
add
aaa
mov
xor
fsub
pop
inc
adc
mov
inc
inc
cmp
mov
and
rorl
dec
jge
into
inc
cmpsb
decl
loope
xchg
pop
movd
adc
jno
push
mov
sub
cmp
xor
push
jp
add
adc
xchg
xlat
dec
pushf
clc
dec
out
xchg
mov
fistl
gs
sub
adc
orl
fiaddl
insl
inc
repz
xchg
mov
sbb
mov
lods
lea
inc
sub
scas
jp
aam
push
lret
add
sbb
dec
movsb
mov
add
cld
xchg
bound
aad
out
popa
fs
ljmp
inc
ficomps
pop
sub
out
movsl
xor
inc
cmpsb
xor
aam
into
pop
pop
lods
fcoms
mov
test
and
rorb
pop
call
push
arpl
push
pop
xor
and
cltd
ret
test
lods
jecxz
xor
mov
imul
rcrl
mov
push
outsb
sahf
pop
scas
inc
lock
sub
mov
daa
adc
xchg
addr16
jns
add
aad
inc
adc
arpl
sub
push
cli
mov
sub
adc
loopne
push
inc
imull
or
test
lds
xchg
xchg
and
enter
mov
outsl
insl
mov
mov
push
and
imul
test
pop
ljmp
enter
dec
mov
movsb
mov
or
or
xor
sub
in
adc
sub
mov
jmp
and
inc
inc
call
add
loopne
test
aaa
lret
js
mov
push
je
mov
stc
or
sub
or
jecxz
xchg
push
adc
pop
out
pop
ret
test
shrl
rolb
xor
jne
aaa
mov
fcoml
sahf
test
ret
jnp
dec
xchg
jnp
dec
xchg
sarb
testb
jno
add
pop
add
pop
shll
cwtl
adc
push
cmpsl
into
mov
out
out
mov
xorb
and
dec
pop
adc
mov
xchg
xor
xchg
lret
loope
jl
lret
rclb
addr16
xchg
sub
bound
das
mov
shlb
dec
out
sbb
lahf
int3
mov
mov
mov
or
mov
imul
xchg
lret
js
adcl
sbb
mov
scas
int3
mov
inc
in
inc
xchg
in
add
popf
fisubl
sbb
shrb
sub
jmp
add
push
pop
incb
mov
and
std
mov
shlb
xor
movsb
cltd
lock
adcl
ret
shrl
push
std
jnp
clc
jns
jmp
clc
test
xchg
jo
mov
imul
xchg
lds
mov
hlt
imul
xor
test
lock
in
xchg
inc
aaa
movsl
inc
pop
xor
pop
push
iret
int
xor
and
int3
push
pushf
orb
cwtl
out
mov
mov
jo
dec
fs
sub
bound
cmp
mov
repnz
mov
test
inc
es
push
jmp
mov
xor
xor
cli
je
fwait
iret
iret
sbb
adcl
lds
inc
inc
cmp
adc
mov
inc
adc
dec
aaa
add
sub
and
push
jmp
pop
movsl
test
clc
or
loop
xor
push
nop
adc
gs
add
fcmovu
lods
loopne
cli
enter
jl
dec
or
mov
dec
insb
and
or
inc
inc
popa
dec
int
cmpsb
orl
cmpsb
int
fwait
insb
push
mov
cmc
mov
outsb
in
push
loopne
mov
stc
inc
or
imul
inc
sub
xor
outsb
push
xchg
aas
xchg
lods
xor
dec
inc
mov
ret
mov
out
pop
cmp
mov
cmp
loopne
adc
dec
mov
cmp
movsb
push
arpl
xchg
stos
stos
xlat
mov
pop
iret
or
fbstp
lods
pop
or
inc
aam
and
sbb
shl
ds
add
jae
xchg
out
sahf
out
mov
adc
cmp
es
or
mov
cwtl
popf
xchg
xchg
push
mov
jg
mov
cwtl
dec
cmovl
in
sub
pop
loope
push
fnsave
icebp
jmp
inc
dec
shrl
in
xchg
inc
sbb
rolb
test
sahf
mov
movsb
jb
lahf
and
daa
jge
inc
adc
sbb
clc
pop
not
cmpsb
and
mov
add
fiadds
push
mov
jo
mov
adc
sub
add
pop
sti
decl
sahf
and
jmp
or
inc
addr16
xchg
fidivrs
cli
setge
shll
sbb
je
pop
mov
out
mov
jmp
scas
mov
push
and
mov
xchg
dec
push
das
leave
inc
inc
sub
ljmp
adc
xchg
jp
add
dec
sub
jecxz
jae
idivl
pop
idivl
int
imul
push
icebp
cwtl
or
sbb
dec
loopne
or
lods
cmp
pop
frstor
imul
ficoms
mov
jle
dec
data16
push
in
pop
xchg
sub
and
les
jl
cmp
and
daa
inc
filds
aam
or
pop
push
adc
jge
movl
aam
fstl
push
mov
mov
iret
adc
sbb
pop
sub
neg
xchg
loop
add
mov
inc
pop
loope
lcall
cmc
cmpsb
push
dec
mov
cltd
cmc
inc
jo
push
sbb
out
jl
push
invd
or
mov
fistl
and
or
mov
je
cmpsl
inc
xchg
into
loope
arpl
outsl
xchg
fcoml
ljmp
jb
call
and
fsubl
subl
popa
dec
or
sub
mov
xchg
xlat
popa
add
incb
pusha
jnp
sbb
cmc
mov
sbbb
mov
and
xchg
xchg
and
es
jno
rcl
add
loope
lea
arpl
aas
fidivs
repz
pop
rorl
clc
dec
mov
jge
xchg
scas
lahf
pop
cmpsl
cmpsl
fisubs
push
pop
cli
xlat
ret
mov
mov
lret
pop
cmpsl
add
mov
pop
and
lds
adc
and
jbe
ss
cld
dec
xor
aas
mov
cmp
mov
xchg
jl
sub
or
push
ljmp
pop
xchg
mov
out
addr16
pop
sbb
xchg
leave
cmp
jp
dec
je
hlt
cmpsb
lds
lret
int3
sysexit
in
jns
loope
das
dec
insb
iret
imul
outsb
imul
dec
mov
mov
lcall
sub
xlat
repnz
sub
jb
aas
lahf
fcomps
std
cwtl
aad
stos
sahf
mov
dec
sarb
int3
lret
or
xor
mov
popf
jmp
pop
enter
sbb
dec
add
inc
mov
xorl
cmp
sub
lahf
das
pop
sti
nopl
xchg
cli
loopne
mov
andl
xchg
cmpsb
imul
loopne
movsb
lock
repnz
dec
test
cltd
loope
dec
add
sbb
iret
test
jl
xor
push
mov
jae
repz
mov
out
sbb
cmc
mov
and
inc
gs
mov
sub
add
adc
pop
mov
add
mov
fwait
adc
loope
loope
push
mov
or
xor
dec
inc
pop
arpl
mov
lret
jo
sbb
jle
into
in
bound
jno
rcl
pop
leave
jnp
add
pop
sub
push
ret
aaa
adc
lods
xchg
jbe
mov
and
jp
cmp
iret
sbb
sbb
xor
cltd
pop
xor
pop
aad
xchg
rorb
xchg
cmp
pushf
or
inc
call
fwait
mov
sbb
je
aaa
lock
loop
movsb
adcl
rclb
lret
test
xor
dec
sbb
mov
cmp
cmp
mov
add
stos
into
cmp
and
into
sbb
sub
ja
fdivrl
cmp
lods
push
pop
out
mov
aaa
mov
dec
cmp
sub
stos
lods
mov
xor
lods
cs
lea
dec
mov
shlb
loopne
sbb
sbb
jle
cmp
lods
stc
adc
insb
push
and
sub
and
sti
or
mov
in
insl
dec
cmp
mov
push
pop
jecxz
std
or
sbb
xor
stc
mov
mov
cs
lcall
add
test
cmp
stos
xchg
dec
xchg
mov
dec
sbb
outsb
lcall
mov
jb
mov
mov
cwtl
aas
stos
adc
sub
sbb
mov
cmp
xchg
loopne
int3
push
outsl
das
inc
fwait
jp
iret
repnz
inc
or
push
sub
dec
clc
and
add
mov
mov
lret
aad
stos
xchg
es
loopne
adc
mov
int
fwait
lcall
jo
cltd
rorl
mov
test
cmpsl
call
inc
scas
add
dec
mov
aas
mov
mov
or
ret
cmp
lret
dec
pop
arpl
mov
popf
push
add
arpl
stos
inc
insl
mov
aaa
js
loopne
inc
in
cld
testl
data16
xor
loope
push
push
xor
std
cmovne
cmpsl
out
mov
icebp
ljmp
sub
mov
inc
sub
ds
sub
cmc
jmp
cld
mov
andb
mul
cmp
aad
adc
xor
mov
push
mov
jo
jnp
add
mov
rep
jmp
mov
mov
xchg
sub
inc
cmp
insb
sbb
mov
dec
mov
insb
xor
push
jmp
add
sbb
rcrb
bsr
aam
nop
in
xchg
xchg
adc
mov
clc
ret
mov
adc
jg
popa
in
mov
or
sbb
in
or
int3
push
add
test
loop
xchg
pop
enter
or
mov
nop
sbb
sub
push
or
aad
add
push
in
jb
and
fisubrl
cmc
jg
mov
push
aas
js
add
jno
push
mov
push
rolb
scas
lds
pop
andl
lods
sbb
sub
xor
leave
test
sub
push
jns
mov
ret
lret
arpl
mov
xchg
loope
ljmp
fbstp
cmp
pop
ja
in
int3
fs
aad
test
in
cwtl
sub
sub
push
mov
idivb
scas
call
mov
lahf
jae
mov
call
xchg
sbb
repnz
rolb
insb
loop
mov
out
lock
jns
xor
into
in
outsb
adc
mov
jge
test
out
fwait
je
jle
push
mov
test
add
ret
outsl
pop
test
andl
das
mov
std
dec
or
sbb
lcall
fisubl
xchg
mov
and
pop
imul
lret
xor
js
enter
xlat
sarl
cmp
dec
push
fidivrs
leave
mov
faddl
sub
out
in
aad
jecxz
ljmp
stos
xor
jno,pt
xchg
mov
stos
mov
mov
test
jbe
push
xchg
outsb
xor
pop
inc
loopne
cwtl
iret
insl
repnz
xchg
jp
or
scas
mull
shl
js
push
add
push
sub
hlt
clc
icebp
inc
cmp
push
out
pop
mov
xlat
ret
in
xchg
mov
sub
xor
pop
popf
sahf
adc
test
lcall
pop
xchg
pop
fcoml
into
xchg
mov
aaa
xchg
ds
push
xchg
cmp
int
jg
dec
mov
push
add
adc
pop
inc
add
into
cld
in
add
inc
mov
int
aam
inc
pop
inc
pusha
out
bound
das
inc
test
xchg
les
sbb
inc
loop
push
jo
pop
mov
xlat
or
lods
fwait
fwait
cmp
loopne
add
sub
stc
in
lock
adc
push
cmpsl
mov
xchg
ljmp
out
xchg
adc
es
ret
shll
std
stc
dec
and
orl
cmpsl
mov
mov
mov
gs
jne
add
or
jae
call
push
ret
loop
insb
pop
shl
iretw
xchg
lea
sarb
aaa
xchg
lods
test
dec
and
push
mov
sti
mov
push
ss
lock
jg
pop
cmpsb
xchg
outsl
out
repz
mov
lods
xchg
std
and
cmpsb
or
push
jb
sarl
and
icebp
sahf
mov
and
pusha
lods
pusha
das
jae
out
jae
push
adc
jbe
cli
jb
lret
test
xchg
fs
inc
inc
adc
mov
sbb
xorb
in
adc
lods
arpl
dec
out
das
ret
mov
pop
cmpsb
fs
mov
cmp
jb
pop
loope
cmp
xchg
cmc
cmp
enter
jg
inc
push
repz
movsl
pop
mov
add
scas
jbe
inc
xor
bound
mov
jns
mov
int3
adc
in
push
xchg
mov
daa
call
push
imul
mov
xorb
cs
inc
leave
mov
rcrl
mov
cmc
mov
call
jb
scas
inc
test
inc
insl
xor
mov
lea
out
imul
mov
pop
mov
scas
xor
add
cld
stos
in
mov
and
jp
es
xchg
movsl
mov
out
dec
sti
sub
or
push
lock
and
or
pop
dec
add
repz
add
fadds
mov
inc
fs
xchg
push
clc
jmp
outsl
push
push
xchg
lea
jnp
in
js
scas
jns
sub
ss
into
jns
lods
les
lret
loopne
std
jmp
xchg
bound
pop
and
rcll
jb
loop
xchg
mov
xchg
mov
pop
sti
inc
subl
icebp
pop
fwait
in
xchg
mov
mov
dec
cmp
les
adc
or
jb
pop
mov
jmp
fnstcw
mov
out
push
in
push
fstps
fstpt
sub
jno
xorb
jae
mov
cmp
mov
sub
cld
push
lods
loopne
xor
cmpsb
out
scas
xchg
pop
inc
xor
outsl
cwtl
mov
jl
ja
test
sbb
fisubrl
ljmp
test
push
dec
out
jp
inc
cld
mov
in
mov
movsl
pop
aad
cmp
sbb
outsl
jbe
btl
adc
aam
pavgb
cli
scas
lock
dec
gs
adc
in
inc
cmp
pop
lds
jo
sbb
and
push
adc
add
hlt
stc
cli
icebp
rcrl
inc
mov
fwait
stc
and
and
sti
out
sti
push
mov
pop
loopne
imul
mov
mov
aam
sbb
ljmp
or
mov
jae
orb
xchg
iret
xchg
popf
jns
enter
pop
pop
aam
je
push
and
popa
les
aam
shrb
and
sub
xchg
or
rcll
inc
dec
cltd
sub
das
jne
mov
sbb
rolb
cltd
adc
shrl
outsl
cmpl
jne
stc
adc
jbe
inc
stos
lahf
cwtl
ss
or
mov
mov
imul
jno
mov
adc
cmp
ret
xlat
jne
ret
cmp
xchg
mov
aas
imulb
fnstenv
mov
sbb
mov
leave
test
rcll
mov
dec
lods
inc
ret
inc
mov
cltd
mov
movsb
shll
jle
inc
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
sub
jecxz
jle
hlt
scas
jne
shr
add
mov
sub
nop
jl
or
mov
push
ss
xchg
outsl
jmp
xor
lret
mov
xchg
xor
mov
xchg
dec
cli
pop
mov
lcall
xor
fcmovnb
pop
daa
aad
or
int3
or
sub
pusha
pop
int
sub
lea
andl
hlt
sbb
aas
stc
cmpsb
push
jp
inc
sbb
dec
cs
mov
or
rol
call
and
inc
iret
sbb
cmp
add
pop
mov
icebp
mov
cmp
jge
mov
cmp
shl
push
push
inc
sti
and
push
or
call
jl
xor
notl
rcrb
lock
mov
fs
aad
push
divl
and
dec
or
hlt
stos
lret
xor
mov
aas
std
movsl
jmp
xchg
jnp
enter
inc
mov
cmp
outsb
int
mov
cmpsb
inc
sti
pushf
mov
pop
fisttpll
add
jmp
dec
fwait
stos
in
addl
mov
and
push
movsl
add
lahf
imul
inc
mov
inc
lds
imul
rcr
inc
scas
frstor
in
jp
mov
test
mov
insl
and
xchg
aam
lahf
mov
out
adc
xor
movsl
lock
mov
inc
sar
mov
call
stc
sub
push
inc
jns
stos
test
stos
xchg
aad
les
sub
call
daa
ja
imul
fidivrl
repnz
and
dec
cmpsl
pop
mov
pop
sbb
test
mov
xchg
mov
push
inc
fsubs
lret
xchg
es
xchg
out
in
sub
insl
sub
lods
inc
decb
pop
mov
mov
cld
adc
pop
and
inc
jno
int
sbb
jge
cld
mov
stos
sbb
dec
jmp
in
ljmp
in
xor
sbb
popa
rcr
pop
sahf
push
fsincos
dec
mov
or
icebp
bound
stc
fs
inc
pop
fwait
shll
stos
xor
mov
imul
pop
adc
stc
inc
stc
mov
aad
inc
addr16
xchg
scas
fldl
sub
sti
jl
sbbb
das
jmp
cmp
ja
dec
lahf
out
xchg
ja
loope
mov
inc
xchg
dec
xchg
sbb
pop
bound
insb
xlat
dec
test
fsubs
jae
pop
pop
lods
mov
dec
xor
adcb
movsl
push
sub
scas
in
mov
les
add
xorl
xchg
sub
addr16
cmp
mov
add
adc
jbe
fsubs
lea
jbe
test
mov
dec
cmpsl
ret
adc
ja,pt
xchg
fcoms
cmp
cmp
lahf
loopne
push
dec
inc
jne
pushf
aad
xor
stc
sub
stos
pop
jne
sub
ljmp
add
arpl
imul
enter
cmp
xchg
iret
lahf
movsb
bswap
and
nop
icebp
sahf
xchg
or
xchg
sub
movsb
jnp
movsb
fsubrp
lds
add
or
cmp
mov
scas
mov
mov
mov
mov
test
xor
xchg
cmpsl
les
adc
fdivrl
pop
aaa
mov
scas
mov
xchg
push
add
decb
fstl
stos
out
dec
daa
xchg
dec
lahf
push
lret
ja
outsl
aas
das
jno
mov
popa
andl
push
inc
jns
xchg
mov
xchg
or
sbb
jno
dec
out
mov
in
add
or
pop
cmp
fisubl
push
daa
movsl
xchg
or
inc
xchg
and
mov
imul
jo
push
jmp
nop
fidivrl
and
and
jb
lods
shll
pushf
fmull
adc
lahf
stc
js
jns
pop
mov
shll
push
sbb
out
inc
sti
cmp
xchg
aas
jno
clc
into
xor
andb
pop
jns
ss
jp
enter
add
sub
jns
fdivrs
pop
insb
or
lret
mov
jbe
xor
mov
std
rorl
mov
in
pop
cld
imul
shll
mov
mov
mov
sub
imul
lret
lods
test
cmpl
popf
push
add
repz
pop
add
nop
shrl
fucomip
pushf
push
xchg
icebp
das
adc
cmp
xor
lods
ja
mov
movsl
mov
mov
lcall
xchg
xchg
daa
mov
and
stos
mov
jl
cld
imul
cltd
dec
das
push
xchg
or
rcr
ja
xchg
icebp
pusha
aam
mov
push
das
and
test
imul
cmc
loope
out
fisttps
insb
xchg
lret
addb
inc
insl
and
inc
xor
jl
inc
xchg
push
dec
push
loopne
seta
jbe
cmp
and
aaa
stos
mov
clc
aaa
inc
dec
clc
dec
lret
scas
sub
cmp
leave
decb
outsb
push
icebp
daa
cmp
in
push
or
iret
dec
sub
sti
push
mov
mov
les
adc
cmp
cmc
sub
and
idivb
stc
daa
stos
iret
fcomps
in
nop
pop
fwait
cmpl
mov
bnd
test
nop
cmp
mov
and
ret
or
aas
and
hlt
dec
insl
out
add
pop
add
sub
rclb
cmpsl
push
fstpt
rcll
pop
les
rcr
sbb
mov
inc
add
fs
mov
cmpsl
push
cld
outsb
mov
into
add
out
mov
sbb
cmpsl
xor
jno
xlat
nop
nop
les
sub
lods
jno
lea
ss
jp
ret
or
jno
daa
cmpsb
or
inc
and
movsb
stc
inc
dec
mov
std
mov
push
aad
pop
mov
cld
and
inc
int
in
add
mov
xchg
push
ret
pop
mov
mov
lret
inc
rcrl
gs
lahf
roll
jno
clc
xchg
stos
clc
into
mov
and
cld
cmpsb
lock
dec
cmp
iret
jno
mov
js
mov
sbb
xchg
dec
stos
hlt
mov
dec
and
xchg
adc
sbb
add
jno
or
test
rorb
inc
xchg
inc
add
jp
pushf
jmp
rcrl
fldl
mov
loope
add
gs
cmp
xchg
and
pop
inc
inc
rclb
loope
nop
dec
es
lahf
cld
or
addr16
cmp
cmp
adc
lcall
scas
lret
sbb
lea
fistpl
add
mov
xchg
cmpsb
mov
lock
push
fisubrs
mov
jb
sbb
pushf
push
adc
mov
je
fistpll
sbbl
push
pop
xor
aas
inc
out
mov
loopne
pop
stos
imul
cmp
dec
inc
pop
cwtl
aam
iret
cmp
aam
lea
out
loope
in
mov
rclb
sub
subl
das
cli
xchg
xchg
ret
rcrl
mov
test
push
inc
cmp
jmp
cmp
sub
ja
in
movsl
repz
test
inc
dec
fstpl
fidivrs
xorb
lcall
jl
int
inc
andl
add
pushf
pop
out
pop
pop
sarb
add
jecxz
cmp
sbb
mov
pop
fdiv
arpl
aad
sbb
push
aaa
filds
int
and
and
mov
mov
and
pop
fidivl
rorl
lcall
xchg
add
es
out
jl
hlt
cmp
adc
add
cmp
cmp
ss
adc
shl
ret
xor
rorb
jmp
jmp
sub
pushf
sbb
ss
inc
pusha
or
adc
inc
rcrb
dec
cmpsb
loope
add
pop
add
dec
xchg
mov
cmp
pop
mov
jg
inc
jmp
fsubrs
lret
jp
clc
jb
jmp
pop
adc
jg
ret
xchg
mov
std
cltd
mov
pop
xchg
aam
inc
dec
aad
mov
cld
mov
clc
cwtl
xchg
sti
mov
dec
push
xchg
aaa
mov
gs
imul
out
xchg
and
add
fdiv
add
jbe
jmp
sbb
lds
xor
or
mov
add
iret
mov
sub
andl
cmp
sbb
lock
jge
movsl
mov
ret
sbb
jbe
fcmovnu
push
lock
insl
mov
lods
add
ret
add
mov
mov
out
sti
add
mov
push
mov
cmp
das
das
mov
js
es
sbb
shl
clc
shrl
mov
push
sti
and
negl
hlt
pop
cmpb
sahf
mov
ljmp
sbb
push
mov
lcall
inc
pop
sub
add
aas
jb
mov
xchg
push
sarl
jmp
mov
fnstcw
ret
and
push
iret
xor
scas
hlt
out
cmp
pop
or
jge
nop
dec
in
aam
xchg
sbb
sbb
ss
inc
mov
daa
call
add
mov
test
int3
xchg
xchg
xchg
scas
mov
xor
jge
push
mov
jnp
inc
nop
pushf
xor
xor
ja
jmp
push
xor
js
aas
push
adc
ret
in
jmp
pop
xchg
dec
int
jns
aad
xchg
jecxz
outsl
lea
leave
bound
dec
sbb
sub
outsl
popa
je
lcall
jle
mov
pop
fstpl
sub
sbb
push
sti
sbb
inc
rorb
pop
or
xchg
cmpsl
roll
jmp
popf
push
jno
jecxz
outsb
jg
aam
mov
adc
xor
aas
mov
and
out
add
aam
xchg
xor
xor
push
fsubs
or
packuswb
sbb
jns
pop
aam
ljmp
pop
dec
popf
data16
jmp
leave
lea
mov
lret
repz
lock
test
insb
cltd
cmpsl
pusha
cltd
add
lods
lret
pop
add
repz
fwait
test
loop
testb
dec
call
in
sahf
cld
fcmovu
fistps
lret
sahf
push
push
into
sahf
mov
sbb
jno
cli
fwait
sub
subb
pop
xor
cmp
inc
rcll
or
push
sahf
insl
daa
nop
outsb
inc
movsb
xor
test
pop
in
mov
into
dec
arpl
lock
adc
adc
daa
sub
jb
inc
push
inc
adc
popa
and
les
cmpb
push
rcll
sub
cs
jl
sub
in
jo
movb
mov
aad
jmp
out
fsub
icebp
sahf
push
ret
add
mov
mov
loope
ljmp
std
imull
dec
shl
jp
push
cmpsb
cmp
and
mov
lods
mov
ret
ljmp
dec
lods
in
push
ret
jno
in
insb
or
inc
insb
dec
pop
packssdw
pop
sti
mov
rolb
stos
rcr
movsl
stos
nop
pop
test
fstl
push
push
mov
mov
jmp
dec
pop
rcl
mov
gs
xchg
sbb
bnd
xchg
bound
shll
out
push
pop
ja
test
and
mov
pop
in
adc
dec
insb
clc
gs
lods
orb
repz
jle
in
incl
bound
xor
cmp
je
adc
aam
mov
hlt
jo
mov
outsl
xchg
pop
jg
push
inc
mov
push
mov
jb
push
int
ja
fcmovb
dec
sar
fcomi
pop
pop
xor
lods
insb
jbe
jmp
fld
sub
test
outsb
push
cmpsb
loope
fdivrs
cmpsb
test
cmpsb
test
rclb
daa
enter
fsubp
fstps
xor
push
push
push
or
add
mov
leave
cmp
dec
inc
pop
jge
mov
xchg
push
mov
cmp
into
mov
jp
push
mov
and
dec
lret
inc
pop
push
adc
or
insl
out
cmp
bound
scas
mov
cld
in
sarl
or
es
frstor
mov
fdivrs
insb
xchg
cmp
mov
sub
mov
inc
fnstenv
adc
mov
mov
mov
jecxz
fistl
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
xchg
mov
add
lahf
